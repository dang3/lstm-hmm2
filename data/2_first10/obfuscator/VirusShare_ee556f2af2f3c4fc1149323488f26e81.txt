test
popa
lods
xchg
cmpsb
add
nop
lods
dec
fs
sbb
cmp
sub
jecxz
xchg
sbb
cli
outsb
sbb
sbb
bnd
outsb
mov
movsl
test
movq
sbb
sub
ret
sub
scas
sbb
jg
shlb
rcll
js
fimuls
hlt
icebp
imul
leave
xor
xor
fs
dec
push
cld
cli
ja
adc
sahf
sub
jg
jg
icebp
clc
dec
jnp
sahf
xor
test
fs
xor
xchg
dec
xchg
test
sbb
bound
fisubrl
xchg
mov
cltd
sti
shrb
icebp
sbb
mov
test
mov
mov
pop
sar
es
mov
arpl
cli
pop
jns
mov
pushf
inc
dec
daa
pop
xor
addr16
insb
cmpsb
dec
mov
push
pop
mov
out
xchg
push
dec
stc
bt
shl
pushf
lods
stc
call
aad
adc
dec
cmp
scas
ds
hlt
pop
mov
aad
out
xor
loopne
xor
pslld
in
mov
pop
cmp
decb
cltd
mov
insb
xchg
fiadds
sbb
sbb
sahf
test
sbb
mov
mov
mov
mov
jge
mov
std
aam
jb
inc
daa
out
pushf
dec
cli
int
sub
movsb
enter
mov
or
fnstsw
mov
imul
push
scas
xchg
push
cwtl
push
std
lahf
imul
rdmsr
jbe
lret
dec
inc
and
lcall
call
mov
scas
mov
hlt
ljmp
lcall
sub
xchg
pop
mov
mov
pop
xchg
test
inc
fstpl
imul
mov
adc
or
sub
lods
add
xor
adc
or
or
stc
cmp
int3
jne
mov
add
outsl
lods
rcrl
mov
pop
push
pop
out
mov
addl
hlt
fsubrl
dec
dec
inc
push
dec
xor
cs
insb
add
js
xchg
push
push
inc
xchg
and
push
mov
xor
jge
sub
mov
cwtl
push
leave
sar
xchg
fwait
in
or
push
and
add
jge
dec
sbb
cwtl
mov
nop
adc
pop
stos
xor
lds
jae
aad
sub
add
xor
pop
sahf
lea
mov
sub
xor
pop
into
std
pop
ud2
sahf
jmp
add
lahf
out
inc
lods
repz
test
lcall
cmp
pop
aad
mov
inc
xor
popf
push
jp
aaa
out
je
dec
data16
lds
xchg
ret
push
inc
out
push
add
rorl
data16
orb
in
ror
push
in
outsb
aad
mov
xlat
sarl
mov
add
test
lret
in
mov
movsl
sahf
insl
ret
stos
out
mov
pushf
mov
push
rolb
ficoml
test
push
fsubrl
pop
jl
jb
test
add
out
loopne
in
in
mov
mov
pop
test
cmp
mov
mov
jbe
or
push
pusha
xor
xor
cmpsb
mov
imulb
pop
add
mov
xor
mov
movsl
mov
mov
mov
lret
out
clc
jns
inc
in
lahf
mov
or
or
xchg
cmp
fstpl
cmp
cs
cmp
mov
test
ds
loopne
sub
cs
mov
ror
pushl
pushf
mov
lea
jb
inc
test
neg
pushf
call
es
add
or
fdiv
leave
sbb
mov
sbb
and
jl
cmp
inc
test
inc
and
aam
add
andl
in
mov
lret
roll
jne
scas
dec
test
and
fidivs
xchg
inc
xchg
fstpl
pop
rolb
addr16
add
loopne
jbe
lods
push
fsubrl
mov
jmp
mov
add
cmp
dec
lods
ret
push
jbe
or
les
adc
mov
psrlq
push
xor
inc
push
int
in
sub
ss
fisubrl
mov
gs
mov
push
icebp
jg
mov
xchg
inc
arpl
add
aam
ret
push
inc
adc
jo
push
fsubrl
dec
imul
mov
add
subl
mov
jnp
roll
lods
cld
sbbl
lock
pop
xchg
push
pop
cmp
and
ret
and
xor
mov
mov
cld
out
imul
inc
cmp
xor
movsl
cmp
adc
or
sbbl
lret
push
mov
es
sub
pop
xchg
mov
sub
sarb
and
sub
push
ja
xchg
repnz
cld
mov
popa
adc
xchg
sbb
jge
sbb
test
aam
shlb
ret
popf
orb
repnz
mov
daa
rorb
sbb
incb
lock
push
adc
push
or
pusha
sbb
out
xchg
xchg
mov
faddl
inc
enter
mov
rcll
int
mov
mov
xor
push
loopne
daa
nop
in
cmp
enter
jecxz
adc
jne
test
loope
xchg
pop
cmp
and
bound
sub
icebp
or
int
xor
inc
aaa
pop
in
nop
or
fs
and
inc
popa
adc
cmpsl
sti
dec
stos
fimuls
mov
das
dec
fisttpl
scas
loopne
mov
loop
mov
lods
mov
into
inc
lea
or
inc
xchg
lret
scas
cmp
push
mov
sub
loopne
jnp
jne
inc
adc
adc
sahf
insl
je
mov
lea
fsubrl
fdivrp
into
dec
pusha
lea
jne
bsr
rcl
mov
mov
test
cmp
cmp
push
lea
ja
push
mov
mov
lea
jl
pop
not
lea
pop
call
dec
lea
mov
cmpsb
xchg
jecxz
and
pop
into
in
sbb
xchg
test
mov
icebp
aam
sub
lahf
out
xchg
lcall
ljmp
bound
cmc
pop
add
mov
ret
fwait
pusha
pop
push
mov
popa
jp
add
cmp
test
test
mov
and
imul
popa
sbb
and
loop
jle
sbb
mov
xchg
roll
and
xchg
ret
testb
lods
andb
insl
adc
sub
clc
iret
xchg
fsubrl
pop
jg
adcl
sub
aad
sbb
xor
shll
icebp
mov
dec
aad
fs
out
in
adc
mov
push
in
dec
aad
scas
jns
dec
push
fdiv
test
lahf
mov
mov
ss
leave
loop
movsb
cmpsl
mov
jae
in
jb
push
push
sbb
cmp
mov
mov
jbe
test
push
in
or
mov
imul
fs
add
mov
scas
sub
loopne
fsubrl
repnz
xor
dec
rcr
leave
push
dec
mov
jae
xor
inc
mov
sbb
or
jl
imulb
in
cmc
inc
xchg
sbb
test
mov
arpl
sbb
imul
dec
sti
das
push
cmpb
inc
mov
pop
out
in
xchg
cmp
std
mov
push
add
pop
push
into
xchg
mov
sbb
ja
aam
rcrb
mov
mov
dec
clc
test
sti
ret
aaa
divb
enter
push
xchg
pop
std
std
mov
xchg
push
add
adc
lret
and
pushf
mov
pop
in
ss
loop
sub
jge
sbb
popa
fmuls
shlb
aam
pop
ret
out
and
test
mov
in
add
in
ss
in
xchg
push
push
lods
push
xchg
sbb
add
jle
enter
fisttps
cmp
push
jmp
jecxz
hlt
adcl
dec
jbe
cmpsl
pop
xchg
cmc
sub
stos
leave
rcrb
xchg
lods
mov
loop
sub
ljmp
stos
out
fs
loop
sub
jle
xchg
stos
sub
cwtl
popf
insl
xor
dec
sbb
sbb
jp
push
aas
sbb
scas
jg
push
cmp
dec
ret
jb
mov
insb
jno
mov
and
clc
lahf
dec
sub
sub
add
nop
mov
mov
jo
bound
push
jo
ds
fmull
stc
mov
jecxz
sub
mov
jmp
jge
sbb
data16
jmp
fucom
dec
inc
push
sbb
push
scas
pop
xor
mov
ret
push
das
add
add
push
sbb
add
mov
ds
push
jmp
mov
mov
or
pop
fisubrs
adc
addr16
daa
xor
cmp
ss
popf
in
out
rorl
fs
mov
pop
add
hlt
jae
rcll
cmp
shlb
fsubrl
pushf
shrb
push
jne
sbb
xor
into
mov
push
jle
cld
adc
inc
imul
mov
pop
addl
push
ret
xchg
xor
ror
jbe
jg
mov
mov
lods
js
adc
xor
loopne
inc
lods
cmpsb
adc
lds
daa
lods
fcmovnbe
jo
sub
rolb
mov
movsl
push
jl
pop
or
pop
das
sub
in
fcmovu
cwtl
das
push
aad
sbb
fsubrl
int3
in
mov
test
pop
lods
mov
mov
pop
jle
inc
mov
lret
push
stos
or
popa
iret
loope
imul
mov
enter
imul
hlt
fstpl
jp
pop
jg
cmp
test
sbb
inc
addb
pop
ljmp
push
stos
je
sbb
sub
xor
xchg
xor
sub
lea
mov
and
repnz
dec
rorb
pop
jmp
mov
je
ficoml
push
jbe
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
mov
lea
jae
bt
cmp
call
lea
js
push
push
inc
jmp
and
xor
jp
adc
imul
outsb
sub
or
repnz
ret
adc
xorl
xor
add
jns
cmp
loope
and
pop
xchg
int3
xor
in
repz
call
jmp
mov
orl
outsb
jns
clc
or
mov
push
pop
mov
jne
int3
subl
scas
fs
dec
cli
cwtl
call
sub
ja
inc
nop
fwait
fwait
jle
sub
push
or
add
sbb
sahf
jne
ret
lcall
std
sti
nop
mov
pop
sbb
and
repz
mov
scas
mov
sti
fisubrl
push
adc
call
fsub
pop
mov
sbb
xor
and
add
sbb
add
shll
add
stos
sti
loopne
iret
insb
idiv
xor
dec
mov
pop
fldcw
mov
popl
push
mov
outsl
mov
fcmovne
mov
aas
aas
ficoml
cbtw
out
loop
lea
sbb
lea
outsb
sbb
or
lcall
push
xor
outsl
scas
fisttpll
mov
push
sub
hlt
roll
add
enter
xchg
std
dec
sub
or
jbe
fdivrl
mov
lds
aaa
add
jnp
add
mov
sbbb
test
fldcw
movsl
es
mulb
push
adcl
sbb
xchg
sub
fcmovnbe
nop
pop
lea
xorl
pop
out
lds
fsubrl
adc
xor
cs
insb
add
xchg
ljmp
cmpsl
xchg
fs
push
xchg
lock
pop
cld
jae
or
pop
lds
and
insl
test
xor
lods
sbb
rclb
adc
jo
icebp
movsl
data16
mov
inc
pusha
xlat
add
push
sub
sub
rcll
popa
gs
jns
pop
mov
je
dec
xchg
adc
xor
in
push
and
mov
push
cmp
mov
pop
fsubrl
sahf
ret
sbb
jbe
inc
push
xchg
nop
jge
adc
push
mov
out
dec
push
loop
xchg
mov
test
push
das
inc
lods
or
add
lods
dec
cmp
or
data16
mulb
adc
in
inc
scas
jbe
jl
into
jp
adc
outsb
test
imul
mov
push
test
jl
ret
ds
mov
out
add
movsl
xor
gs
ficoml
adc
out
push
hlt
out
mov
xchg
test
ret
pop
out
jne
sub
ret
jecxz
test
imul
jne
rcrl
cltd
mov
data16
fwait
mov
stos
mov
xor
and
cld
push
pop
imul
aas
pusha
xchg
xor
loope
ror
sub
cmp
ret
cmp
ja
cld
pop
ret
int
sbb
scas
les
decl
adcb
and
cmp
sahf
pop
fsubrl
stos
iret
cmp
ja
pushf
pushl
lea
jb
cmc
jmp
add
dec
call
call
jecxz
rcrl
mov
pop
enter
cmp
leave
rolb
lods
dec
out
decl
push
jbe
push
pop
cld
in
jnp
mov
mov
lock
mov
sbb
scas
call
add
xchg
arpl
adc
jnp
dec
mov
shll
mov
push
lods
xlat
aaa
fmuls
xchg
inc
or
out
cld
pop
fstpt
notl
mov
jecxz
cmp
sbbl
nop
pop
push
aad
pop
fsubrl
test
and
lea
mov
pusha
mov
pushf
jmp
add
and
test
sar
rcr
add
sets
btc
add
mov
call
shll
mov
stos
xchg
inc
xchg
aad
mov
or
dec
fdivp
jl
mov
lret
dec
add
aam
push
lret
dec
into
testb
fdivr
test
je
dec
mov
lahf
xor
fadds
jb
cli
dec
sbb
sahf
or
cli
inc
sbb
rcl
aas
pop
mov
push
add
sbb
dec
lock
addb
adcl
jo
push
int
sub
or
pushf
pop
or
jb
or
int3
mov
xor
cwtl
mulb
dec
fnstsw
fimuls
dec
or
lea
ds
jo
popa
or
in
mov
dec
fldl2t
aam
ret
xor
in
rclb
jl
loop
xchg
int3
dec
inc
std
or
shll
xlat
mov
insb
xor
mov
mov
fcoms
in
mov
daa
loop
rcr
cmc
pop
dec
push
icebp
int3
in
pop
push
fstl
cmpsb
xchg
insb
push
stc
fsubrl
ss
call
push
or
push
sub
lock
xchg
sbb
xor
imul
sub
push
pop
or
inc
xor
mov
cmpsb
adc
sub
js
xchg
jns
enter
fisubl
aas
add
adc
lea
mov
cltd
scas
push
scas
shrl
pop
pop
nop
pop
cmpl
mov
dec
cmp
mov
cmp
incb
dec
push
fsubs
cmp
loope
mov
sbb
int3
fsubrl
inc
enter
jnp
fsubrs
push
jne
sub
popf
movsl
inc
jbe
out
xor
dec
xchg
pop
mov
pop
int3
xor
push
stos
cltd
inc
ss
mov
dec
inc
jbe
lods
mull
aaa
xchg
cmc
lds
ja
adc
inc
mov
sub
xchg
imul
mov
push
rep
pusha
pop
pop
mov
pushf
pushf
pushf
lea
jmp
dec
mov
xor
fsubr
sbb
or
sub
dec
cld
inc
sar
jbe
mov
nop
push
daa
push
lds
fs
pop
xchg
add
fdivr
and
jb
imul
jb
bound
fisttpll
adc
xchg
ret
or
sahf
cmp
xchg
mov
push
inc
inc
pop
push
lea
shlb
inc
add
das
push
fimuls
or
mov
movsb
lahf
mov
or
popa
insb
js
or
pop
add
add
fsubrl
scas
into
and
fdivp
mov
mov
jp
mov
sbb
pop
and
in
fsubr
push
mov
lods
dec
outsl
cmp
or
xchg
add
xor
sub
xor
inc
adc
rcrl
int3
cmp
stc
inc
sbb
insb
popf
imul
cs
or
fmuls
xor
pushf
inc
mov
adc
setae
addl
add
rcrb
shrl
push
pop
cmp
sub
adc
mov
add
push
pop
jo
int
add
push
pop
xchg
sbb
xor
or
shl
jnp
mov
ja
adc
cmpsb
mov
adc
pop
adc
push
nop
mov
pop
dec
inc
sub
js
sbb
scas
mov
ss
xchg
pop
loopne
out
pop
out
push
cmp
mov
add
icebp
cld
push
ja
popf
mov
jb
push
ret
dec
sbb
movsl
lds
test
cmpsl
add
repz
cs
xlat
les
stos
loope
aas
xchg
fnstsw
lcall
test
ss
call
int
and
bound
mov
scas
lods
nop
mov
loop
mov
insb
adc
add
in
mov
inc
cmc
cmpsl
push
adc
stc
push
xchg
ss
shrb
out
mov
or
sub
push
lds
adc
or
loop
xchg
mov
push
cmc
addr16
cmp
lods
add
enter
mov
xor
ret
inc
fiadds
or
insl
in
xchg
mov
lods
mov
into
in
jno
add
stos
mov
cmp
add
js
out
sub
xor
add
shl
neg
not
call
sets
pusha
mov
mov
not
movsbw
mov
push
movsbw
xchg
xchg
mov
not
pop
movsbw
mov
jmp
jbe
lahf
mov
cwtl
mov
in
lcall
jae
sub
addr16
jl
shll
pop
pop
sub
mov
pop
out
cli
jns
inc
inc
or
test
xchg
lods
gs
push
shl
mov
in
lahf
mov
cmc
jp
cmp
mov
jmp
push
add
lahf
stos
popa
std
cmp
sub
int3
push
outsl
add
pop
sbb
and
lods
pop
and
test
dec
pop
aam
pop
fldcw
push
in
mov
fsubrl
cmc
adc
add
loope
ds
xor
jb
insb
das
aaa
push
push
out
dec
sub
int3
pop
mov
mov
daa
jb
inc
repz
icebp
negb
pop
mov
jo
jns
jmp
movsb
nop
add
in
insb
cli
inc
push
cmp
outsl
jp
cltd
inc
ret
add
mov
sub
movsb
in
mov
pop
jae
in
adc
lock
dec
in
inc
add
mov
adc
mov
mov
inc
xor
fwait
stos
adc
jg
insl
insb
fisttpl
cltd
fmuls
sarl
in
fwait
loop
mov
sub
dec
push
pop
fyl2xp1
fnsave
mov
ljmp
add
cmp
cli
jmp
orl
cmp
jp
shrl
insl
pop
push
push
imul
and
sub
sar
sub
mov
out
adc
push
jmp
jmp
xorl
stos
or
xor
cwtl
rolb
dec
cld
jae
fsubrl
vandnpd
xchg
stos
mov
xorb
mov
add
popa
sbb
lea
in
dec
loop
lret
cmp
or
test
pusha
xchg
or
std
and
lret
mov
stc
sub
and
movsb
mov
adc
dec
lcall
ss
or
cli
addl
lahf
inc
mov
push
mov
cmp
pop
cwtl
test
mov
test
adc
and
aad
or
pop
inc
pop
jne
or
mov
sub
rorb
mov
loope
pop
push
les
in
stos
mov
xchg
pusha
xlat
add
fists
dec
mov
or
cmpb
jg
cli
rcll
lods
insb
pop
cli
test
fsubrl
mov
outsl
arpl
inc
insb
insb
outsl
arpl
mov
mov
mov
movw
movw
pushl
ret
pop
shlb
andb
lock
dec
xor
xchg
fmul
fisubrs
and
or
xlat
adc
xchg
rorb
inc
xchg
push
sbb
aam
push
sub
sbb
jmp
cmp
xorb
push
mov
mov
mov
push
mov
repnz
mov
xor
dec
dec
out
fsubrl
mov
insl
adc
or
and
or
cmpsb
in
cld
sbbl
insb
push
repnz
insb
aad
mov
bound
mov
pusha
nop
sbb
mov
sub
mov
and
pushl
ret
jb
pop
fisubrl
repnz
daa
inc
xor
and
imul
inc
shlb
mov
sub
cmp
lods
pop
aas
push
cmp
lcall
pop
jmp
mov
inc
ja
dec
jle
popf
mov
xor
mov
daa
cmp
xchg
sahf
inc
jle
lret
inc
mov
ret
cmp
imul
mov
ss
mov
sahf
xor
push
lock
enter
cmp
mov
ret
mov
loopne
es
movsb
fsubrl
repnz
push
add
xchg
jbe
push
push
js
rcrb
sub
add
fcomps
mov
sub
int
push
inc
bound
push
divb
xor
es
inc
mov
mov
sub
in
adc
mov
in
xchg
jg
sub
mov
ja
xchg
mov
jl
jecxz
mov
pop
lea
jmp
aas
jo
and
fwait
xchg
push
in
clc
push
cld
mov
push
and
es
pop
inc
arpl
das
jns
add
insl
cmpl
inc
lds
dec
cmp
mov
imul
adc
scas
dec
mov
es
hlt
jae
xor
lahf
dec
frstor
sub
fdivrp
into
fcoml
out
rcrl
xchg
cmp
aad
lods
mov
ss
mov
sub
mov
mov
andl
fimuls
addr16
in
insl
lock
in
icebp
push
mov
das
inc
hlt
decl
idivb
daa
cli
mov
adc
pop
mov
enter
sub
pop
popa
mov
xor
cmovle
dec
inc
mov
jmp
into
out
ds
lods
movl
pushf
sub
bt
ror
jmp
and
and
xlat
mov
push
fcmovu
or
and
test
mov
cmp
push
scas
orl
inc
dec
stos
fldcw
lods
or
mov
mov
rolb
mov
push
loope
xchg
pushf
fnstcw
cmp
adc
flds
pop
xchg
dec
or
pop
inc
ret
and
mov
pop
mov
insb
pop
sub
mov
fsubrl
outsl
decl
ret
add
xchg
bt
bt
sub
movw
clc
ror
push
mov
inc
clc
cmp
cmc
push
neg
pusha
std
call
mov
shll
jb
jne
ret
push
imul
adc
jnp
pop
out
fstpl
and
push
jl
push
inc
cmp
mov
or
scas
lods
mov
jne
jae
fld
cwtl
imul
pop
enter
dec
or
cs
fs
cmp
lret
mov
cmp
add
xlat
jbe
sbb
mov
addr16
aad
ja
sub
mov
inc
push
out
es
mov
inc
shlb
push
js
out
cmp
mov
nop
sub
jp
aam
in
loopne
jle
lcall
cmp
jne
clc
fisttpl
leave
sub
call
or
mov
sbb
mov
inc
shrb
dec
ret
add
mov
jo
pop
or
imul
sbb
sbb
cmpsl
inc
or
js
dec
xor
sub
or
cmpsb
push
jg
mov
pushf
mov
imul
mov
push
testb
pop
sbb
in
inc
adc
ret
fdivl
and
fstpt
int
jns
adc
ljmp
rolb
in
mov
shll
cmpsb
push
leave
lret
popf
and
int3
add
loopne
test
and
mov
push
adc
sub
jmp
stos
adc
clc
insl
push
sbb
in
push
mov
in
pop
imul
scas
mov
leave
insb
insl
bound
fsts
fwait
mov
push
lahf
test
dec
lds
outsb
ror
or
jl
imul
mov
sbb
or
pop
ror
pop
int
push
mov
stos
sub
fcom
pop
outsl
imul
repnz
das
into
popf
pop
arpl
sbb
ret
fsubrl
add
jb
push
push
add
jno
jg
pminub
mov
insl
jl
dec
mov
ucomiss
adc
pop
push
jne
add
xor
adc
ror
pop
leave
and
mov
outsl
sbb
inc
adc
jp
aad
rorl
cli
testb
insb
cmp
loop
cmp
test
lea
mov
insl
mov
aaa
push
mov
int
sbb
pop
mov
add
cmp
into
insl
hlt
ret
mov
gs
adc
sub
popa
test
scas
inc
mov
out
jo
lods
cld
sub
js
push
inc
jl
and
faddl
out
cmpb
inc
sbbb
in
xchg
inc
mov
ds
ret
jp
int
push
andl
inc
lret
in
out
push
push
rclb
or
xor
adc
cmpsl
mov
in
or
push
lcall
xor
fidivl
pushf
cmp
fsubrl
and
mov
xor
add
bound
adc
lret
cmp
pop
jecxz
cwtl
jno
mov
mov
cld
add
push
sahf
test
mov
inc
cs
aaa
mov
sbb
dec
cmpsb
sbb
dec
pop
mov
push
and
stc
inc
sbb
sub
filds
dec
sbb
mov
xchg
push
xor
lods
mov
add
mov
int
cmc
push
cmp
lret
lods
xchg
push
mov
xlat
mov
sub
dec
fsubl
pop
test
inc
push
ljmp
frstor
fisttpll
mov
sarb
ror
js
pushf
cmp
rorl
shlb
iret
xchg
loope
inc
cmp
xor
ret
jb
fnstsw
dec
shrb
add
ds
fdivs
sub
out
movq
push
and
pusha
fiadds
push
xor
mov
fldcw
cwtl
inc
movsb
fnstsw
add
test
xchg
inc
lret
pop
push
sub
push
inc
insl
adc
xchg
add
pop
pop
int
sub
pop
add
jecxz
jmp
pop
test
ss
mov
cld
out
push
pop
push
xchg
xor
xchg
and
outsb
pop
adc
or
sub
pop
jl
cmp
push
test
or
decl
test
xor
add
movsl
inc
ret
pop
and
lock
rorl
sbb
jno
pusha
int
das
movsl
mov
and
mov
sarb
pop
mov
pop
dec
xchg
repnz
test
push
fldl
inc
fists
push
inc
bound
lock
outsb
data16
cs
cwtl
mov
in
dec
push
mov
inc
and
ret
pop
rolb
inc
lret
mov
xchg
ret
push
inc
iret
pop
outsb
push
or
in
sub
fimuls
add
pop
imul
lret
push
dec
push
mov
in
adc
or
pop
dec
sbb
push
dec
addr16
test
ret
mov
stos
jb
fsubrl
pop
jns
cmpsl
cmp
add
xorl
pop
jne
sub
mov
xor
dec
out
sarl
cmpsb
sbb
loope
mov
and
push
mov
and
lcall
test
imul
lret
mov
ror
cmpsl
ret
push
adc
mov
cmp
or
fldenv
pop
mov
pop
pushf
sti
cli
shll
movsl
xor
loop
and
xchg
fsubrl
in
jbe
inc
and
inc
and
adc
js
add
cmpsb
aad
dec
push
pop
cwtl
push
insl
pop
lret
xchg
mov
popa
lock
sahf
xor
rclb
inc
pop
hlt
test
adc
xor
sbb
mov
repz
add
repz
lds
scas
repz
or
popa
jp
adc
jle
cmpsb
pop
push
mov
xor
addb
cmpsb
sub
popf
push
call
sahf
dec
mov
clc
iret
dec
push
xor
mov
popf
mov
fsubrl
mov
add
in
push
xchg
jmp
mov
ds
jge
cmpsl
repz
or
cli
pop
cmp
inc
and
mov
add
outsl
cmp
movsb
loope
iret
sbb
push
xchg
lret
push
rcll
and
fucom
mov
xchg
cmpsb
mov
sbb
fstl
lds
and
lret
cmpsb
scas
push
lret
add
mov
inc
and
es
pusha
add
cmp
ss
bnd
lock
mov
xchg
dec
sbb
in
ret
fwait
scas
loop
loop
pop
jp
cmpsb
and
test
fsubrl
xchg
lahf
jbe
out
push
cmpsl
push
cmp
popa
lock
aam
imul
jle
hlt
int3
xchg
dec
inc
rorl
orb
pop
xchg
popa
sarb
sbb
adc
jge
and
es
mov
mov
xor
loope
push
shl
sti
mov
mov
addr16
dec
add
push
mov
ret
sub
pusha
inc
adc
cmc
fdivl
iret
rorb
negl
fabs
xor
mov
enter
inc
ret
fsubrl
adc
subl
clc
xor
mov
leave
rorb
and
jns
mov
insl
jne
test
orb
push
mov
ds
xor
into
dec
sbb
js
push
dec
les
sarb
aaa
repnz
loope
lahf
xchg
lds
dec
lds
adc
out
lock
test
out
xchg
rcl
and
in
adc
add
mov
jge
sbb
add
add
adc
add
add
sbb
add
add
xchg
aaa
and
add
sbbb
add
add
in
jnp
add
add
add
push
sbb
add
add
mov
sbb
add
add
ret
add
add
add
add
add
add
addb
add
dec
icebp
sbb
add
add
mov
adc
add
sub
add
xor
add
and
add
pop
pop
add
setg
stos
not
setae
call
imull
mov
or
out
cs
lret
adc
cwtl
xchg
in
and
cmpsb
into
popf
dec
hlt
add
or
cmp
jno
popa
xor
add
cmp
push
sub
inc
push
cmp
mov
mov
in
and
cli
or
das
pop
lds
lds
rcl
mov
faddl
push
aam
bound
fidivs
sub
and
js
pop
and
pop
hlt
fs
mov
lods
sbb
xchg
mov
imul
pop
inc
adc
ljmp
outsb
out
out
mov
pop
pushf
xchg
jns
popa
int
lea
cmc
rolb
out
or
aam
int
pusha
shl
popf
mov
and
sahf
mov
xchg
mov
mov
cmp
in
cld
fwait
xor
mov
bound
cmpsl
mov
faddl
cltd
fsubrl
fdivr
push
imul
cld
sbb
mov
aas
fstl
xchg
test
adcb
mov
test
xchg
pop
ds
mov
arpl
call
fwait
add
jp
mov
mov
stos
shrl
dec
sub
clc
std
imul
lock
out
dec
aas
out
fs
popa
or
jbe
dec
or
fsubrl
cmp
hlt
outsl
add
pushf
movb
lea
je
stc
pusha
sub
cmp
test
cmp
call
mov
mov
push
sti
adc
and
mov
ficoml
es
stos
scas
push
mov
adc
mov
add
mov
test
mov
inc
shll
cmp
fs
mov
dec
sahf
out
mov
in
and
mov
fiaddl
std
lock
in
in
mov
cmpsl
movsb
and
in
and
mov
fiaddl
jne
sbb
in
pop
mov
fdivs
push
ljmp
sti
jae
lcall
cmpsl
inc
or
sbb
mov
cmpsl
stos
cli
and
mov
dec
cmc
cltd
fwait
sub
ds
fiaddl
pop
scas
or
mov
fidivrl
mov
jle
mov
in
mov
fcmovne
ret
mov
mov
out
aad
mov
in
mov
fimull
or
mov
in
in
mov
fildl
in
cmp
mov
movsb
cs
fcomps
mov
movsb
shlb
sbb
mov
in
mov
stc
aas
in
and
mov
insb
fbstp
and
in
mov
stos
popf
sahf
cmpsl
imul
mov
fcmovnbe
mov
cmp
sub
test
mov
inc
inc
psraw
xchg
movsb
fnsave
cwtl
jne
sub
and
mov
in
in
mov
fiaddl
in
sti
lahf
ljmp
out
pop
mov
mov
fadds
int3
cmpsb
or
mov
ficompl
cmp
sub
das
mov
fiaddl
mov
add
mov
inc
test
pop
repz
sbb
sar
in
and
mov
fiaddl
fdivrl
add
fistps
fimuls
mov
inc
cwtl
adc
mov
inc
xor
clc
sub
pop
mov
fidivl
stc
mov
jae
mov
inc
xlat
lret
fldl
mov
inc
pop
test
loop
mov
or
cmp
cmpsb
mov
in
mov
fucomi
or
pop
mov
mov
inc
cld
rolb
mov
in
mov
fldt
mov
and
mov
fiaddl
push
sub
dec
mov
fiaddl
lret
sub
and
add
or
mov
fiaddl
int
add
and
mov
jne
mov
daa
xchg
mov
fs
mov
fistpl
outsl
insl
xchg
ret
xchg
mov
mov
add
aaa
mov
and
cmp
ret
shr
rorl
dec
loope
sbb
mov
in
inc
ljmp
fistl
ds
mov
inc
adc
and
mov
and
inc
enter
cmc
mov
movsl
pop
fildl
mov
or
mov
push
popa
add
mov
test
cmp
inc
push
mov
movsl
cmpsl
bound
xor
ret
mov
xchg
mov
mov
out
cmpsl
out
push
mov
loopne
movsl
or
pop
xchg
inc
add
mov
sbb
push
cmpsb
loope
cmp
dec
mov
pop
sahf
leave
mov
mov
add
dec
adc
call
mov
lea
mov
cwtl
or
out
push
sub
jmp
xchg
push
cs
ret
loope
movb
and
por
xchg
cmp
mov
inc
loopne
fadd
mov
xchg
mov
js
mov
mov
inc
jle
cmp
ret
xor
ret
call
test
cmpsl
jb
mov
xchg
ds
and
jno
loope
test
xor
push
adc
mov
dec
or
cmp
push
mov
cmpb
cmp
xchg
xchg
cmp
xor
lcall
xchg
inc
leave
scas
push
popa
push
inc
jle,pt
jbe
popl
adc
mov
loope
cmpl
xchg
loopne
dec
out
mov
xor
outsb
addl
inc
mov
fwait
inc
jno
mov
orb
std
mov
loope
movsl
sbb
ds
dec
mov
sub
es
mov
ja
mov
std
stos
pop
cmpl
jmp
xchg
gs
push
ds
bound
xorl
data16
jmp
sarb
dec
mov
test
int
add
pop
xchg
xchg
ljmp
push
ret
loope
cld
and
sub
cmpsb
cwtl
popa
in
les
mov
popf
imul
test
xchg
lock
ret
add
subb
lds
insb
xor
or
js
push
cmc
inc
std
inc
add
push
lock
ds
lds
sub
iret
test
loop
xor
jmp
fidivl
setge
cmp
out
lcall
mov
orl
mov
add
jge
sub
mov
mov
mov
push
dec
dec
jo
std
mov
push
stc
xor
dec
add
xchg
dec
mov
dec
xchg
stos
gs
and
xchg
inc
xor
lods
idivl
out
test
mov
or
cmp
mov
mov
mov
inc
sub
addl
es
sub
lods
leave
mov
add
jl
aas
pop
xor
xchg
xchg
mov
or
stos
test
leave
cmpsl
ret
lcall
mov
or
mov
inc
lea
xchg
aad
nop
arpl
jmp
in
shl
fidivrs
jbe
mov
sub
loopne
mov
xor
cmp
adcb
in
adc
mov
dec
add
rorl
and
in
out
mov
popf
xor
add
fxch
push
adc
aas
xchg
sbb
rolb
in
les
mov
cmpsl
ds
xor
jno
or
dec
lods
in
xchg
sti
stos
mov
test
retw
cmp
idiv
sbb
push
dec
xor
xor
xchg
xchg
inc
cmp
xor
mov
xor
xor
loop
les
mov
stos
mov
ret
imul
mov
ret
imul
out
xchg
stos
mov
push
aas
inc
test
cmpsl
and
adcb
daa
xor
cmp
ss
mov
push
data16
out
xor
pop
mov
jle
insb
cwtl
sbb
xchg
mov
xchg
inc
inc
xchg
jo
ret
out
sub
lods
push
movsl
rorb
mov
sub
jns
rcl
adc
mov
jecxz
call
xchg
negl
mov
loopne
out
mov
sbbb
out
adc
movsb
push
mov
inc
mov
ja
push
pop
mov
aad
jp
pop
lods
sarb
jno
dec
dec
les
xchg
mov
sarb
cltd
xor
inc
test
sbb
cmpsl
ds
ret
xor
cmp
call
test
pusha
mov
fidivs
cmp
and
mov
popf
insb
sbb
daa
cmpsl
cwtl
and
ja
cmp
dec
aas
pusha
test
cmp
std
shlb
mov
inc
cmpsl
data16
rolb
xor
and
or
cmp
mov
in
pop
loope
test
cmp
lcall
imul
js
pop
roll
mov
out
testl
sub
icebp
call
mov
stc
addl
daa
inc
std
inc
pushf
fdiv
push
test
fcoms
jmp
xor
out
inc
mov
add
sbb
jb
gs
dec
mov
xchg
imul
cmp
or
rorl
inc
out
dec
jl
addl
add
shrl
mov
lea
push
push
arpl
hlt
inc
iret
push
push
xor
inc
jp
nop
dec
lret
add
adcb
fldl
cmpsb
mov
and
pop
std
and
andb
mov
sarb
xor
push
enter
mov
cmpsb
mov
mov
pushf
adc
xchg
aam
icebp
sbb
mov
aad
cmp
dec
outsb
adc
or
outsl
out
loope
jg
mov
jmp
jmp
cltd
data16
mov
out
sbb
cli
push
adc
mov
and
cwtl
adc
nop
insb
xadd
mov
mov
mov
push
mov
sbb
inc
outsl
loopne
ds
mov
sub
cmpsb
xchg
cmpsl
std
add
lcall
xchg
xchg
sub
mov
fisttpll
xor
sti
inc
xchg
jmp
mov
cwtl
pop
aas
and
test
imul
mov
lods
jne
mov
mov
sub
adc
mov
out
mov
dec
stos
in
fisttpll
jl
dec
add
shlb
test
push
dec
rolb
ds
mov
pushf
mov
stos
mov
pusha
push
or
and
jecxz
pop
mov
jb
ret
sbb
jl
mov
mov
add
inc
data16
mov
test
cltd
jbe
ds
movsb
mov
mov
fstpt
rcrl
cmpsb
test
add
cmp
sbb
movsl
push
jns
mov
shl
outsl
pop
icebp
xorb
test
dec
mov
cld
cmp
adc
pop
or
test
push
pop
nop
insb
add
ljmp
gs
mov
xchg
mov
mov
inc
mov
insb
xchg
negl
cmp
cmp
pop
mov
out
mov
lods
jno
sbb
xor
addb
fisubs
mov
daa
test
lods
add
jmp
dec
mov
stos
xor
pop
out
jp
flds
dec
and
mov
mov
sbb
xchg
mov
out
cld
rcr
cmpb
xchg
mov
jle
imul
sub
mov
pop
lret
loop
cmp
lahf
mov
jbe
rolb
das
mov
dec
movsl
and
mov
mov
cmc
mov
shrl
leave
cs
mov
test
call
std
inc
push
lea
and
decl
imul
sub
imul
bound
fiaddl
loopne
xchg
mov
push
sbb
js
inc
mov
popf
mov
mov
cmp
scas
sarl
addb
sbb
adc
cmc
mov
cmp
inc
fcomps
add
loopne
test
clc
sub
cmp
movsl
cltd
jbe
mov
divl
mov
jp
js
pop
movsb
add
and
xorl
mov
jbe
pop
jnp
mov
lret
sarl
mov
mov
mov
or
test
lret
xchg
repnz
mov
add
es
stos
mov
addb
mov
les
mov
out
xchg
mov
out
mov
push
orb
movsl
andb
push
imul
and
leave
sahf
in
mov
push
push
ret
jo
popa
test
sbb
cli
pop
sub
shlb
dec
dec
mov
push
jns
mov
lods
imul
sahf
test
jns
mov
push
rorb
stos
andb
lahf
popf
xchg
jge
dec
ss
mov
push
jg
inc
cs
add
xor
movsl
mov
mov
cmp
imul
aas
jmp
sub
cmc
sbb
jns
popa
mov
pop
mov
out
pop
cli
mov
mov
aas
xchg
mov
inc
xchg
outsl
fiaddl
out
inc
mov
sbb
mov
cmp
sbb
test
add
sti
sarl
rcll
ret
and
loope
orb
mov
lcall
adc
sbb
and
imul
mov
incb
popa
inc
add
pop
mov
stos
aad
cs
or
fimuls
inc
jl
and
mov
rcrl
fldt
push
add
sbb
cmp
xor
cmpl
icebp
movsb
sarb
sbb
fs
repz
lods
mov
adc
std
and
jecxz
mov
lea
xor
call
rclb
outsl
mov
xchg
sub
jns
and
shll
mov
dec
scas
or
push
inc
add
or
test
mov
sti
push
inc
mov
incl
fistpl
inc
insl
add
imul
sbb
movsl
push
mov
jecxz
out
lcall
test
add
mov
rcrl
cmp
into
mov
sbb
lret
inc
xor
fidivrs
cmp
cmp
and
cli
mov
cltd
lea
jns
ja
push
xor
jae
pushw
popa
mov
sbb
inc
cmc
sarl
ss
lods
inc
xor
mov
test
sbb
pusha
mov
mov
xchg
sbb
outsl
in
pop
jp
shll
test
cmp
xchg
cmp
jge
int
imul
sti
inc
adc
inc
test
insl
js
mov
lahf
lcall
icebp
jae
pop
outsb
daa
push
movsl
dec
mov
lahf
mov
sub
into
xor
rcrb
mov
data16
ret
adc
hlt
xor
xchg
lahf
out
popa
or
rolb
cmpsl
or
mov
xchg
ret
stos
dec
xor
mov
mov
test
daa
xorb
mov
movsb
repz
movsl
cmc
pusha
jl
add
jbe
jle
out
cli
rolb
push
rcll
xor
mov
out
add
mov
insl
fcompl
test
jecxz
mov
adc
pop
xchg
mov
les
inc
xor
scas
mov
mov
rolb
cmc
std
shr
pushf
push
mov
jg
inc
enter
mov
arpl
mov
mov
xchg
js
inc
mov
mov
ss
mov
and
mov
or
ds
add
ss
mov
push
pop
mov
popa
mov
fidivs
test
shll
adc
loopne
mov
xor
js
mov
pop
popf
push
outsl
cmpsb
shrl
sbb
lahf
mov
mov
sbb
mov
lahf
pop
cs
sahf
icebp
mov
sub
fdivl
xor
jbe
cltd
lret
and
shll
sbb
std
inc
mov
mov
movsb
ds
shlb
lods
mov
dec
cmp
mov
cmp
mov
mov
mov
mov
cmpsb
mov
scas
jp
mov
sub
mov
aaa
pop
jp
mov
mov
pushf
mov
scas
fdivrl
andl
inc
jle
mov
jg
mov
sbb
cmp
inc
mov
aaa
std
mov
sub
jae
jl
xorl
test
shlb
jo
inc
mov
mov
inc
and
or
mov
and
nop
mov
xorb
mov
mov
sub
and
mov
mov
sbb
ss
mov
mov
inc
push
sub
pusha
cmp
mov
push
mov
cwtl
daa
mov
mov
mov
test
ds
sbb
mov
and
inc
movsl
and
loope
test
mov
push
call
idiv
loope
lds
mov
inc
mov
fs
xchg
test
stos
jnp
shlb
loope
dec
orb
push
cmpsb
adc
mov
movsl
test
inc
in
pushf
pop
pusha
popf
mov
mov
xor
add
push
adc
or
mov
mov
sahf
test
mov
mov
insl
icebp
or
in
and
shld
push
push
push
inc
scas
adc
addr16
adc
push
dec
mov
scas
push
cmp
cmp
mov
fs
jl
mov
divl
cwtl
arpl
or
push
xor
sbb
test
roll
and
mov
and
inc
sbb
ret
inc
mov
lea
cld
and
xchg
out
sub
push
xchg
dec
or
scas
add
loop
xchg
shrl
xor
movsl
stos
movsb
dec
mov
in
fldl
push
mov
push
ss
mov
loope
jge
mov
push
int
pop
and
js
arpl
and
push
dec
dec
ljmp
xor
repz
mov
out
and
cmp
xchg
push
lods
iret
pop
movsl
inc
bnd
mov
mov
cmp
aam
jno
fsubs
ljmp
and
jge
scas
rcrb
sti
jbe
add
popf
jbe
popa
and
jp
lret
cmpsl
sti
cmp
dec
aas
call
add
int3
xlat
inc
cli
push
jns
orl
xchg
jecxz
es
mov
arpl
scas
pop
xchg
arpl
and
mov
in
loopne
mov
sbb
mov
fincstp
jnp
pushl
xor
test
shlb
inc
add
es
inc
cmpsl
test
lea
les
subl
ds
outsb
aam
roll
add
adc
mov
sub
mov
lcall
mov
lods
test
pop
adc
cmp
scas
dec
mov
inc
aad
mov
loopne
imul
pop
std
jno
sbb
xor
cmpsl
out
push
clc
sub
ret
sbb
mov
addl
cmpsl
push
int3
sahf
mov
dec
insl
cmp
bnd
test
js
or
imul
int3
xchg
mov
adc
iret
mov
xchg
xor
mov
or
movsb
sub
jle
rclb
mov
cmp
lds
mov
fnsave
xchg
xchg
adc
sbb
shrb
sbb
mov
mov
lret
mov
cmp
cmpb
and
js
pop
cld
cltd
sbb
xor
clc
add
sahf
xcrypt-ofb
cmpsl
stos
or
pop
mov
test
xchg
dec
movsl
pusha
andl
jge
roll
movsl
jg
ljmp
xchg
std
dec
cld
mov
sbb
jge
xchg
add
ljmp
out
sbb
jle
xor
sub
push
xchg
test
mov
inc
cld
and
xor
lea
pop
aam
push
mov
mov
frstor
sti
jns
leave
ds
and
jg
add
sub
jnp
mov
sarb
dec
xor
pop
fnstenv
enter
cwtl
push
dec
ret
and
hlt
cmp
xor
es
xchg
dec
pop
outsb
push
pop
or
xchg
mov
gs
loopne
in
cmp
test
cs
mov
sti
addl
dec
ret
jns
mov
jae
jns
push
hlt
inc
incb
roll
stos
fiadds
sbb
jmp
stos
bound
push
or
adc
push
and
mov
lret
mov
xlat
push
push
push
mov
lcall
test
loopne
xor
push
jns
push
mov
push
adc
jns
test
inc
movsl
movsl
jno
cmc
lahf
xor
jge
mov
loopne
xchg
paddusb
in
xor
mov
movsl
fsubr
inc
xchg
jbe
and
jo
data16
xlat
mov
outsb
in
pusha
or
mov
cmpsb
jmp
scas
stos
mov
sub
ror
sub
loopne
cs
les
xchg
stos
imul
add
movsl
pop
ret
mov
int3
inc
popa
push
xor
loopne
lcall
mov
cmc
fidivrs
mov
popf
mov
sarl
adc
push
jl
mov
gs
and
mov
ficompl
movsb
push
loopne
push
movsb
lret
xor
push
sbb
mov
mov
xchg
arpl
rorl
adc
adc
cmc
add
jmp
bound
es
fdivl
xchg
outsl
stos
add
inc
cld
aad
les
xor
cmp
cmp
addr16
movl
xor
lods
push
add
dec
xchg
in
stos
movsl
jp
test
scas
dec
cwtl
mov
shlb
je
jle
jns
add
mov
idivl
nop
mov
cltd
cmp
xchg
push
inc
pop
lods
andb
jmp
cwtl
sbb
mov
test
mov
fnstsw
test
daa
outsb
std
pusha
cmpsb
inc
and
movsl
mov
cmp
add
dec
xchg
inc
out
inc
ja
ljmp
lcall
pop
outsl
cmc
cs
and
cmp
push
mov
push
mov
mov
out
std
adc
int
aaa
iret
stc
and
test
push
adc
sub
push
xchg
out
js
push
xor
xor
jg
adc
dec
mov
xchg
xchg
pop
inc
lods
cmp
frstor
fxch
sub
in
mov
xor
in
insb
bound
test
js
movsl
jmp
or
mov
fadds
jb
mov
aas
pop
adc
test
sub
insb
cmp
jo
in
popl
mov
imul
bound
ret
imul
xorb
add
ret
mov
xchg
stos
mov
mov
or
mov
inc
repz
test
lods
jmp
shrb
cmp
and
stos
push
sbb
rcrb
call
fnsave
dec
ret
in
lret
and
test
into
repz
jo
and
data16
xor
daa
scas
test
jb
xchg
dec
cmp
cmpsl
cli
fsubl
mov
adc
push
sbb
sub
nop
xchg
adc
cmpb
test
pop
mov
mull
pop
adc
pop
test
inc
jecxz
xchg
mov
adc
bound
int3
mov
sbb
cmp
jg
pop
clc
sub
test
inc
adc
jbe
movsb
and
lret
sbb
js
lods
inc
push
stos
and
daa
sarl
out
xor
dec
cmpsb
cltd
add
mov
mov
push
stos
or
shll
sub
mov
lret
ljmp
sbb
mov
sbb
pop
movsl
negb
mov
inc
fstpl
nop
mov
jg
pop
filds
subb
stos
sub
or
adc
cmp
sbb
jns
sbb
mov
psrld
sbb
dec
int3
mov
or
fdivs
add
inc
mov
leave
add
inc
stos
test
mov
xor
inc
ret
mov
les
mov
dec
movsl
subb
fists
imul
add
and
add
stos
jo
shrl
das
cmp
cmp
stos
add
xor
cwtl
fdivrl
sti
lds
aam
or
mov
loope
push
cmpb
sub
lret
inc
stos
xlat
sub
mov
fnstsw
add
pop
popa
cmp
push
add
xchg
sarb
dec
cld
out
out
mov
sti
push
sub
xor
stos
sahf
mov
fdivl
xchg
cmpsl
loope
test
xor
popa
cmpsb
xchg
ret
sub
insb
sahf
lcall
es
cld
inc
xchg
mov
stc
aaa
stos
push
test
inc
cmp
mov
cmp
adc
dec
mov
lahf
shl
cmp
and
dec
and
mov
xchg
jns
popa
xchg
inc
ja
jle
addl
ret
lods
or
pop
inc
movsb
pop
fsubs
inc
cmpsb
pusha
mov
dec
pop
sbb
jg
ret
xor
data16
sub
lahf
dec
mov
repz
mov
mov
jb
push
cmp
jle
push
insl
repz
mov
xchg
andl
movsl
or
xor
xor
mov
bound
shll
imul
mov
movsl
add
add
push
inc
arpl
or
es
lret
test
push
and
sub
xchg
insb
push
sbb
xchg
add
mov
xchg
cmp
test
mov
ljmp
xchg
movsl
sbb
xor
push
mov
imul
cmp
add
adc
movsl
xorps
push
push
sub
and
adc
sub
mov
movsl
js
dec
pop
dec
cs
add
js
ret
mov
sarb
push
add
test
push
sbb
push
aas
push
jmp
call
xchg
pusha
mov
cmpsl
jp
xchg
je
ja
or
inc
lds
mov
push
mov
xor
xchg
or
stc
lcall
mov
mov
in
fidivs
cltd
pop
push
cmpsl
notl
dec
imul
add
cmpsb
mov
mov
add
fldcw
mov
jbe
xchg
push
scas
test
xchg
or
lods
test
push
add
and
fcomi
jge
movsb
stos
icebp
lods
mov
xchg
jecxz
sbb
pushf
fsubrl
jle
js
popf
mov
xor
daa
inc
cltd
jnp
andb
sbb
or
ret
or
jbe
clc
ss
xor
mov
test
aas
mov
lcall
lea
nop
cld
aas
fdivl
sbb
xor
das
repz
pop
lods
pop
fsubp
lahf
aad
xchg
mov
and
push
test
in
scas
iret
jb
mov
nop
xrelease
pop
and
pop
mov
mov
jo
lea
in
xor
test
stos
mov
ret
ds
out
pop
xorb
popf
sbb
push
and
clc
or
mov
mov
lock
std
push
icebp
sahf
ret
pop
or
sbb
mov
sti
mov
mov
icebp
popa
test
push
out
cltd
imul
jmp
adc
mov
xor
cmp
sbb
loopne
mov
mov
push
sbb
hlt
add
jl
jle
mov
mov
cmpsl
adc
lds
xchg
jo
xchg
stos
adc
and
adc
cmpsb
pop
shlb
fdivl
dec
jle
mov
jle
mov
test
mov
push
adc
xchg
andl
popa
push
ret
jo
inc
rcll
idivb
xlat
sbb
jb
sbb
pop
push
jns
mov
test
xchg
mov
jle
rclb
sbb
mov
je
pop
in
mov
cmp
movsb
inc
movsl
aaa
xchg
cmp
or
xchg
aaa
addb
rcr
out
adc
jae
jns
cmp
out
xchg
jae
aam
dec
roll
pop
lods
out
pop
ds
sahf
jbe
add
test
mov
mov
cmp
mov
outsl
test
mov
das
jbe
dec
shl
das
inc
xchg
push
jle
sbb
sub
xchg
cld
adc
cmpsl
repz
add
cmpsl
push
xchg
jne
dec
sti
iret
push
rolb
in
jecxz
sbb
daa
push
push
jecxz
push
subb
mov
push
popf
xor
fldcw
repnz
jo
rorb
jns
sbb
push
pop
sbb
fmuls
cltd
loopne
push
iret
mov
adc
mov
dec
les
leave
xchg
mov
mov
out
loopne
dec
mov
adc
jb
fs
push
test
aas
clc
inc
fdivrl
adc
mov
push
mov
outsl
xor
jp
scas
mov
dec
imul
insb
cmp
repnz
out
ja
mov
inc
leave
mov
stos
enter
rorb
mov
cmp
fsubrl
pop
mov
mov
jge
fnstenv
ffree
dec
dec
mov
cli
adc
cltd
rcrb
sarb
jle
in
gs
cmp
dec
adc
inc
mov
fldcw
popa
jns
xchg
enter
ror
adc
mov
movsl
imul
jbe
mov
cmp
fdivl
testb
in
push
jmp
inc
mov
dec
push
xchg
rcrl
mov
xchg
movsb
inc
inc
sahf
aas
test
outsl
pop
adc
clc
or
xchg
jno
add
cld
ljmp
lea
cltd
fisttps
idivl
pop
les
inc
fs
in
dec
ret
sbb
xchg
jp
dec
subb
shll
cmp
xchg
pop
inc
add
cli
jl
or
cmp
loopne
pop
inc
cli
sti
outsb
or
movsl
or
xor
push
jne
cmp
cmp
dec
jp
out
lods
mov
adc
jmp
clc
cmp
mov
addr16
clc
xor
cmp
or
mov
xor
sub
push
xchg
ror
inc
es
lret
dec
mov
mov
imul
sub
push
movsl
adc
insb
xchg
dec
cmp
test
cmp
insb
xchg
inc
in
or
jbe
sbb
jns
cs
and
das
adc
nop
fldenv
adcl
adc
mov
in
mov
mov
stos
pop
mov
inc
mov
xchg
push
push
mov
js
adc
push
push
jo
xchg
enter
mov
adc
sbb
push
ret
pop
jle
add
stos
stos
addb
adc
scas
fcomp
loopne
jge
xchg
mov
mov
mov
pop
sbb
movsb
jmp
aad
ret
push
les
cmp
in
bound
fidivrl
push
add
mov
fildl
call
pusha
cmpsb
dec
push
dec
push
sarb
jp
mov
ja
outsb
jns
and
mov
mov
mov
jnp
jecxz
cmp
pusha
and
jle
pop
mov
inc
imul
out
cmp
or
cli
add
clc
ret
lcallw
xchg
cs
test
mov
jle
scas
mov
pushf
daa
mov
out
in
cwtl
or
lret
push
and
icebp
out
shrb
mov
sbbl
ss
in
mov
dec
cli
ret
roll
cwtl
fisubl
inc
push
cmpsl
jle
faddl
jno
add
jecxz
mov
out
pushf
ret
cmp
idiv
jo
test
loop
mov
mov
andb
and
ffreep
mov
mov
xchg
aam
pop
fwait
and
push
jle
xor
add
loopne
ror
cmp
xchg
inc
mov
mov
sbb
push
in
mov
sbb
mov
in
sbb
pop
mov
ljmp
push
mov
lahf
inc
jmp
and
mov
cwtl
adcb
shlb
sbb
mov
lock
stc
adc
mov
lret
mov
out
rorb
loope
cld
orb
add
push
daa
ret
mov
pop
pop
in
in
cmpsb
pusha
out
inc
fists
inc
ds
clc
cmp
pop
inc
mov
add
ret
fisubl
sbb
sbb
cmpsb
es
stos
pusha
jle
pushf
sbb
mov
nop
mov
inc
mov
or
test
out
fwait
lret
and
sbb
jle
rcrl
adc
out
daa
cli
repnz
xchg
inc
push
pop
scas
add
mov
pop
xor
xor
ret
sub
daa
inc
inc
push
addl
sub
mov
mov
xor
test
insl
cltd
mov
mov
rolb
cmpl
jecxz
into
mov
push
and
cmp
push
mov
dec
cmp
push
pop
cmp
mov
int3
mov
cmpsb
mov
sahf
stos
test
test
movsl
cmp
push
mov
xor
mov
cwtl
adc
in
add
sahf
rolb
and
xchg
mov
jnp
pop
mov
fstl
js
scas
sub
daa
push
shrl
jnp
xor
or
fwait
das
enter
and
jns
call
xor
mov
scas
push
sub
lret
loopne
aad
mov
sbb
or
jnp
ficompl
add
int
rolb
vfrczpd
cmp
inc
stos
adc
in
or
mov
pusha
or
mov
xor
or
shll
shrl
xor
sti
mov
stos
jmp
inc
test
movsl
out
scas
push
ficoml
ret
add
mov
cmp
test
out
push
leave
push
mov
lods
mov
push
adc
rorl
mov
sbb
cld
or
test
imul
rolb
sahf
sbb
rcll
imul
je
dec
mov
sbb
cmpsl
pushf
push
mov
in
xorb
dec
outsb
pop
pop
jo
cld
jne
mov
ret
mul
jle
pop
dec
insl
test
jb
ret
jge
iret
cld
adc
fwait
mov
mov
cmp
adc
aas
test
icebp
movsl
pop
sahf
xor
mov
adc
inc
popa
bound
xchg
imul
or
cmpsb
mov
mov
sarb
push
mov
shr
mov
pop
xorb
xor
inc
out
add
dec
mov
adc
pusha
outsb
prefetch
push
add
xchg
mov
shll
popf
mov
jo
lcall
push
out
dec
jge
adc
mov
mov
push
jae
fs
mov
into
js
test
ljmp
sarb
adc
cmp
nop
stos
mov
je
push
add
test
dec
movsl
stc
leave
test
sarb
push
fdivl
movsl
xchg
mov
mov
mov
push
enter
pop
fs
shll
mov
stos
hlt
dec
mov
cmp
and
jle
shll
sbb
push
cmpsb
xchg
dec
mov
push
xor
push
out
scas
push
adc
dec
xchg
push
jbe
popa
aad
outsb
xor
pop
cmp
cmc
je
xor
mov
mov
sbb
nop
xor
jbe
mov
inc
dec
rolb
mov
stos
jp
mov
into
scas
aad
lea
push
mov
mulb
stos
jecxz
push
cli
outsb
cmp
daa
or
inc
cmp
lcall
loopne
stos
scas
mov
lods
mov
mov
dec
push
pop
bound
stc
in
push
mov
mov
cmp
ficoml
movsl
std
xor
xchg
lret
cwtl
mov
push
jnp
dec
retw
std
add
xchg
and
fnstsw
xorb
cmp
add
mov
add
pop
mov
shlb
add
add
movsl
pop
stc
mov
jno
out
cltd
in
mov
xor
adc
jle
cmp
fisttpl
push
xchg
sbb
mov
inc
and
icebp
outsb
clc
mov
jmp
addl
inc
mov
daa
scas
es
imul
gs
mov
andb
fwait
dec
ja
lods
push
mov
pop
faddl
push
or
cs
adc
and
xor
lods
xorb
stos
stos
adc
pop
sbb
int
in
mov
pop
into
jo
jo
cmp
or
push
add
and
mov
lcall
xor
mov
cmpl
mov
jle
aaa
sub
das
sbb
sbb
gs
or
icebp
out
mov
out
insl
inc
lret
dec
test
push
xchg
xor
test
add
ss
popf
cltd
mov
add
adc
dec
into
pusha
mov
jb
sub
xchg
out
fistps
mov
and
add
mov
pop
push
cmc
mov
mov
pop
icebp
push
pop
mov
lcall
inc
mov
out
scas
add
mov
mov
insl
jecxz
ss
cmp
mov
imul
mov
into
inc
sub
add
rcr
mov
mov
cmp
lods
xchg
pop
sbb
jmp
push
andb
mov
add
inc
mov
cmp
push
push
push
add
negl
vmwrite
pop
add
pop
inc
gs
lods
inc
movl
js
pop
jns,pn
sub
jo
ret
cmp
mov
mov
lahf
dec
stos
cmp
and
sbb
rdmsr
add
cli
or
adc
mov
add
icebp
test
out
test
mov
into
mov
ja
mov
or
mov
int
test
xchg
push
jnp
fadds
mov
add
lret
test
jno
bound
outsl
outsl
clc
es
repz
flds
inc
and
dec
andb
adc
inc
ret
js
leave
mov
jecxz
add
je
pop
lret
sbb
mov
jmp
cmp
test
adcb
ljmp
je
or
mov
mov
mov
ja
cmp
cli
push
xchg
out
sbb
push
ss
movsl
and
movsl
loope
mov
and
xchg
dec
mov
shrb
loopne
mov
mov
mov
popa
dec
dec
ljmp
push
bound
mov
jns
cmp
xor
sub
ja
vaddsd
insb
jns
dec
inc
adc
aam
xchg
pop
fwait
lea
mov
push
mov
mov
sub
mov
add
shrl
mov
sbb
test
jbe
add
mov
mov
outsl
mov
push
sub
mov
jb
ds
inc
movsl
cld
cltd
mov
mov
popf
pusha
add
or
pop
stos
movsl
xchg
std
inc
add
xchg
fadd
icebp
cli
fsubrs
test
mov
jns
xchg
pop
lcall
mov
mov
jl
fisttpl
test
rolb
mov
cmp
rclb
pop
push
mov
in
push
nop
cmp
sbbb
cmpsb
dec
jbe
mov
cs
cmp
test
mov
push
bound
je
mov
loope
fimuls
inc
jns
push
aad
out
test
test
and
mov
or
nop
bound
inc
adc
xchg
mov
dec
scas
in
pop
push
aad
ficoms
je
popa
test
xor
clc
pop
add
push
pop
mov
scas
jb
mov
fldenv
shrb
rcr
sbb
bound
xchg
mov
in
push
xor
push
push
lret
mov
testb
subb
lea
fbstp
sbb
mov
mov
mov
sbb
jecxz
or
jns
inc
push
popa
xchg
jnp
mov
cmpsl
movsb
fstpt
xor
cmp
dec
test
hlt
cmpsb
scas
cs
mov
mov
movsl
add
imul
pop
xchg
outsb
hlt
sub
or
ss
mov
pushf
adcl
dec
jo
xor
les
pusha
mov
mov
loope
stos
fsubl
shrb
xchg
pop
andb
ret
mov
inc
in
movsl
add
push
rol
jo
repnz
pop
push
je
mov
cmp
or
fs
pop
scas
out
int3
mov
mov
test
bsf
shll
lcall
jl
ret
adc
jb
loopne
mov
loopne
mov
push
mov
jb
scas
mov
pop
lcall
mov
xlat
inc
jo
bound
xchg
popa
mov
subl
aad
test
adc
push
and
lret
add
je
test
add
adc
subb
movsl
ds
int3
ds
sub
or
xchg
and
mov
push
sti
lahf
sub
mov
mov
movsl
rclb
sub
ss
xchg
iret
stc
mov
pop
hlt
rcr
loopne
mov
adc
movsl
push
lods
mov
xchg
sarb
lds
cmp
push
sar
std
jp
movsl
inc
jo
xchg
mov
test
aam
cwtl
sub
loope
es
cmp
sahf
inc
imul
sbb
or
adc
ljmp
in
and
inc
fisttps
or
rclb
mov
mov
inc
ss
push
mov
mov
or
mov
mov
adc
add
lods
sub
xor
movsl
mov
testb
sub
add
add
test
xor
mov
sbb
or
sbb
xchg
mov
test
ja,pt
lea
aas
outsb
push
or
aad
loopne
fldcw
shlb
ja
ret
mov
test
sub
imul
xor
jno
xchg
push
dec
xor
int
mov
and
push
stos
imul
sbb
mov
xor
stos
mov
cmp
sarl
push
xchg
mov
cli
mov
test
movsl
pop
sub
jg
jge
xor
arpl
arpl
test
adc
inc
int
jns
mov
cmp
xchg
mov
in
mov
adc
push
dec
jbe,pt
or
xchg
mov
jl
fwait
in
subb
sarl
scas
test
fldenv
xchg
cmp
pop
mov
or
sti
int3
sub
data16
shl
or
sub
or
mov
jns
popa
es
inc
jo
outsl
jecxz
mov
test
dec
out
aas
cmp
into
jle
lahf
mov
xlat
sbb
loope
fnsave
ja
insb
jbe
inc
sti
mov
test
test
mov
ret
mov
push
push
push
jne
mov
adc
and
fidivs
lahf
das
imul
scas
pop
stc
or
sbb
add
insl
xchg
cmpl
inc
inc
popa
jmp
mov
movsb
sub
dec
je
shlb
das
fisttpll
xor
mov
in
mov
and
daa
ret
addr16
das
jl
loope
mov
mov
imul
add
inc
cmp
jno
test
negl
xor
push
mov
adc
and
test
dec
hlt
mov
ret
outsl
inc
push
ret
dec
xchg
cmpl
int
out
dec
pop
dec
movsb
stc
jns
cmp
in
iret
aas
mov
push
insb
insl
push
jno
test
rcrl
jae
add
outsl
test
mov
fwait
cmp
inc
add
lods
lret
add
mov
xchg
scas
xor
mov
ja
repz
sub
pop
push
subb
out
orl
loope
pop
cmp
xor
push
mov
rclb
jp
mov
pop
ret
aad
cmp
mov
bswap
insb
ljmp
sbb
sub
cmp
add
movsl
adc
xchg
add
cmp
incl
int3
lea
stc
mov
fisubl
jl
xchg
movl
jae
mov
mov
jns
inc
xor
dec
mov
lahf
es
lret
add
in
mov
repnz
mov
dec
repz
test
ret
or
lcall
stos
mov
jl
jns
inc
lea
cmpsb
bound
pop
pop
push
dec
cmpsb
sub
mov
add
jne
push
inc
dec
add
popa
in
jg
mov
xchg
xchg
or
ja
lret
pushf
xchg
popa
cmpsl
into
std
nop
mov
das
loopne
wbinvd
and
cmpw
movsl
xor
andb
sti
mov
mov
xchg
test
xor
add
sub
push
xor
into
test
mov
inc
cmp
xchg
mov
mov
cmc
and
pop
jno
fld
or
mov
fisubrl
push
cmp
loope
jl
shrl
test
push
fdivrl
bound
jmp
mov
mov
adc
dec
js
sbb
lret
sbb
js
je
sbb
sub
loope
xchg
daa
fld
xchg
mov
or
cmp
mov
jmp
xchg
outsl
pop
mov
out
add
or
mov
jle
inc
adc
mov
nop
pop
inc
mov
in
xor
jnp
pop
sbb
test
sub
push
aam
repnz
cmpsb
nop
dec
cld
cltd
jp
jge
mov
ds
aas
and
test
mov
sub
popa
inc
test
fimull
bound
clc
jo
loope
mov
mov
cli
adc
in
lss
sub
mov
xor
test
scas
sti
push
and
dec
mov
pushl
sub
mov
sub
out
imul
sahf
into
and
mov
test
sbb
mov
aam
mov
jb
movsl
adc
cmp
and
pusha
js
sahf
cmp
push
out
mov
jmp
xchg
push
xor
dec
data16
rol
and
sub
push
sti
jae
ljmp
inc
or
pop
imul
test
add
pop
bound
repnz
imul
mov
dec
dec
cli
sbb
les
inc
xor
call
out
outsb
int
sbb
adc
inc
sub
sbb
subb
loopne
les
adc
mov
js
shlb
dec
add
test
fisttpl
stos
jo
jecxz
test
push
cwtl
or
mov
cs
cld
mov
cmp
sbb
es
loopne
scas
pop
rclb
cwtl
jae
and
add
scas
dec
mov
pusha
loopne
or
pop
jo
fnstcw
dec
test
mov
pushf
lods
ja
data16
mov
dec
push
cmp
iret
fsubp
test
shll
daa
adc
mov
loope
xchg
push
pop
xchg
mov
sahf
popa
fidivl
adc
cpuid
into
dec
in
cmp
in
push
add
and
sub
mov
lahf
dec
aas
ret
lock
jb
sbb
add
pop
cltd
ret
call
ret
test
xchg
roll
sub
mov
fisttps
mov
pop
xor
push
push
xchg
push
mull
repnz
in
in
stc
clc
push
mov
cwtl
out
imul
cmp
mov
mov
pop
mov
test
xchg
imul
cmp
cld
jp
stc
ret
shr
aaa
rcr
jo
adc
or
push
stos
movsl
mov
iret
cld
fidivrs
inc
sahf
mov
stos
mov
test
sub
ss
orb
adc
lods
adc
pop
mov
cmpsl
dec
cmpsl
cmp
pop
mov
pop
lahf
push
pop
ds
xchg
inc
or
adc
inc
in
sbb
cs
sub
sarb
lahf
push
mov
push
outsl
loopne
dec
sbb
incl
fnstenv
jp
les
and
add
inc
sbb
cld
mov
xlat
lods
ds
dec
inc
and
xchg
nop
mov
ret
fyl2x
pushf
cmp
enter
jge
lcall
insl
fnsave
lcall
jae
dec
add
rcrb
test
pusha
ret
sub
ja
pushf
push
cld
in
jge
jo
in
dec
out
and
sub
mov
out
and
inc
call
mov
mov
repz
xchg
mov
loopne
ret
test
das
xor
cmpb
jb
and
scas
add
xchg
sub
movsl
sbb
add
shrl
jae
xlat
push
mov
push
popa
lret
and
or
add
sbb
cmpsb
lahf
jnp
mov
mov
imul
adc
sub
outsl
mov
movsl
lods
fwait
lea
xchg
push
jl
mov
nop
mov
inc
movsl
repz
and
fwait
adc
loop
in
addr16
shll
or
xchg
jbe
loope
dec
adc
aam
adc
roll
mov
stos
xchg
enter
push
mov
les
sbb
subl
dec
ret
mov
pop
dec
jle
loope
call
xor
lea
mov
test
mov
cwtl
mov
xchg
mov
adcl
and
mov
fcmovbe
add
mov
ret
cmpsl
mov
xor
stc
pop
pop
leave
mov
aas
sub
mov
xor
out
mov
mov
ret
adc
and
ret
push
xchg
and
or
and
scas
les
addb
sbb
ret
dec
aad
aaa
sbb
andb
ljmp
xchg
mov
fsubrl
mov
inc
bnd
and
and
aam
dec
xor
stos
ret
or
ret
in
and
out
sbb
stc
xor
mov
mov
or
xchg
ret
frstor
push
fdivp
add
daa
fnstcw
mov
pop
adc
ret
lds
cmp
pop
ret
mov
or
clflush
stos
loopne
insb
ret
fcomps
adc
ret
pop
push
jns
xor
sub
jbe
xor
loopne
xchg
inc
lahf
ret
push
cmpsl
ret
adc
jg
les
loope
xor
cmp
aam
add
loopne
or
pop
call
and
or
out
mov
sub
int3
lret
cld
adc
dec
je
loope
hlt
push
sub
sbb
jge
lahf
outsl
test
or
sub
stc
mov
stos
inc
xor
push
push
and
movsl
lods
xor
mov
adc
push
scas
push
mov
sbb
xchg
cmp
mov
lods
call
test
pushf
mov
jns
sub
movsb
outsl
jle
and
lret
add
or
popa
lea
jnp
fwait
sub
push
sub
out
das
lock
sbb
out
cmpsb
xor
mov
jmp
sbb
xor
inc
mov
push
mov
iret
add
mov
cmp
adc
lea
icebp
je
leave
add
fwait
loope
add
xchg
xor
shrb
push
jno
inc
and
cmpsb
in
movsl
in
mov
mov
mov
xchg
ret
xlat
mov
faddl
pop
mov
fisubrl
and
out
in
dec
adcl
cld
ja
adc
sub
push
stos
and
inc
movsl
cmp
xor
aam
push
mov
iret
mov
mov
inc
clc
or
in
cs
shr
pop
push
sub
cli
jge
stc
adc
loopne,pt
mov
scas
jns
jle
addr16
xchg
shrl
mov
mov
add
mov
iret
lods
push
flds
jo
and
push
mov
jl
jb
fucomp
test
add
test
and
mov
and
mov
mov
shll
bound
cmpsl
fldenv
sub
adc
movsl
shll
fsubl
sub
sub
mov
ret
rcll
push
out
movsb
sbb
jb
xchg
imul
pop
enter
cmp
loope
mov
jbe
outsl
adc
scas
push
pop
mov
movsl
pusha
jge
add
mov
pop
rorl
mov
push
idivb
pusha
imul
jbe
mov
xor
add
push
cmp
mov
outsl
push
mov
mov
shll
sahf
jb
fdivrs
cli
out
insl
jne
fwait
xchg
fisubs
mov
lock
inc
or
ss
idivl
lcall
cmp
add
inc
fisubrl
mov
push
xchg
loopne
cmp
mov
mov
cmp
sbb
pop
ss
addr16
rcl
cwtl
inc
push
mov
addb
mov
jle
rol
dec
xchg
inc
test
cltd
dec
and
add
lds
mov
sbb
mov
and
lahf
mov
ja
es
dec
cmp
insb
mov
adc
cmp
and
dec
add
shrb
add
pusha
dec
inc
add
mov
pop
push
jmp
mov
adc
or
test
or
xorl
ds
ljmp
loopne
out
xchg
mov
mov
push
out
mov
or
icebp
push
and
fstpl
roll
push
ja
ds
cmp
push
inc
outsb
dec
mov
fdivrs
scas
xchg
cmp
mov
scas
inc
or
cmp
addr16
push
inc
push
sbb
mov
mov
mov
xor
jge
mov
cli
aas
jmp
mov
jnp
jp
orl
nop
cmp
in
add
mov
je
cs
repz
in
xchg
jo
inc
fdivrl
ds
loopne
mov
dec
mov
popl
dec
sub
mov
out
psrlw
and
mov
mov
and
adc
xchg
and
dec
scas
jns
mov
adc
mov
cwtl
dec
mov
lcall
dec
inc
xchg
sarb
push
in
movsl
imul
cmp
and
pop
jle
mov
and
inc
lods
adc
adc
push
xchg
xor
mov
movsl
cmp
or
and
cmpl
fdivrl
jge
add
xchg
int3
xchg
dec
sbb
aas
jne
xor
pop
pop
stos
repnz
mov
xchg
sbb
xchg
popa
loope
movsl
leave
mov
or
das
mov
dec
rcrl
rcrl
xchg
enter
inc
mov
mov
movsl
js
jae
mov
stos
ljmp
or
pop
cmpsl
mov
push
enter
sti
mov
mov
movsl
mov
or
inc
mov
cmp
push
adc
or
or
cmp
mov
mov
jno
jbe
shll
sti
sbb
push
iret
shlb
orl
and
cld
loopne
test
in
mov
mov
jge
sub
inc
jge
add
mov
in
xlat
adc
movsl
rolb
aas
in
subb
sarl
inc
insb
fwait
xchg
jae
jge
aaa
jmp
loop
push
push
iret
orl
mov
xor
hlt
daa
add
dec
pop
ret
movsl
sbb
fildl
jae
stos
mov
mov
or
pop
test
mov
rorl
ljmp
rorb
lds
std
movsl
cli
sbb
mov
pop
cmp
enter
fwait
mov
mov
iret
cmp
popf
and
fdivl
xorb
jbe
sub
jmp
cmp
mov
pop
into
xor
xchg
mov
dec
inc
xor
mov
mov
imul
pop
je
xchg
test
push
xchg
mov
lock
in
cmp
push
mov
pusha
lcall
sbb
mov
shrl
scas
push
es
adc
sub
cli
adcl
test
test
cwtl
xchg
push
adc
lds
cmp
aad
pop
arpl
mov
out
mov
adc
mov
sbb
sarl
or
add
pop
movsl
adc
minps
imul
xchg
mov
jb
movsl
add
sbb
xchg
xor
fnop
es
jnp
push
xchg
xor
sti
sub
jge
cltd
iret
std
loop
popf
cmpsb
and
pop
jl
movsl
xchg
inc
mov
arpl
push
mov
dec
jns
jns
test
ds
mov
sbb
push
test
repnz
movsl
shrl
xchg
xor
andb
ret
lahf
xchg
scas
mov
xor
sub
push
pop
leave
ret
test
xor
shlb
sbb
movsb
hlt
imul
push
test
pop
pop
push
sub
shlb
xor
cwtl
mulb
pop
repnz
push
cmp
clc
sti
inc
subl
dec
sbb
adc
xchg
push
out
mov
dec
mov
dec
jb
sub
imul
fwait
movl
cmp
and
xchg
andl
ret
sbb
rcrb
cmpsb
push
nop
xchg
pushl
scas
popa
and
bound
stc
dec
lea
mov
mov
js
daa
clc
divb
xchg
call
fsts
movsb
lds
lret
push
jo
and
jge
popf
fidivrs
subb
inc
leave
icebp
mov
fs
rorl
les
cmp
xchg
in
dec
inc
test
mov
mov
outsb
inc
mov
mov
cs
fdivl
insb
lea
sbb
scas
dec
or
scas
mov
stc
into
cmp
and
and
arpl
loopne
mov
jno
and
push
push
loope
outsb
int3
cmp
pushf
cmpsb
mov
orb
jo
data16
mov
push
lret
pop
jns
or
cld
adc
popa
out
test
roll
add
ret
pop
jb
cltd
lods
jecxz
xchg
sbb
mov
into
push
scas
mov
cs
data16
shld
orb
into
adc
mov
imull
loop,pt
jb
or
lahf
in
outsb
imul
adc
mov
pop
cmp
cmp
aam
sub
rorb
cmpb
daa
jne
push
outsl
outsl
jb
or
leave
cltd
pop
mov
xlat
and
xchg
popa
inc
mov
jnp
sbbb
mov
jge
xor
int3
xchg
pop
inc
mov
sub
dec
mov
push
xchg
sbb
push
jmp
andl
mov
neg
sbb
cmp
movsb
xorb
mov
scas
ljmp
and
test
add
fnstsw
fistl
cmp
mov
mov
sbb
shll
cmp
push
cmpsl
cmpsb
pop
movsl
pushf
fs
in
mov
cmpb
or
mov
test
pop
loopne
mov
test
push
inc
ljmp
mov
fnstsw
jp
pop
add
inc
aas
push
bnd
out
jne
inc
push
ljmp
mov
adc
inc
add
dec
push
outsb
test
incl
jmp
pop
xchg
jle
std
pop
or
adc
and
pop
dec
ja
mov
divl
xchg
test
popl
mov
pusha
movsl
mov
sti
jae
push
inc
mov
dec
mov
int
test
out
xor
xor
and
adc
shll
mov
and
mov
push
add
cmp
mov
clc
outsb
sub
pusha
mov
rolb
push
or
cwtl
jge
jnp
outsl
and
jp
lods
flds
xor
movsl
lods
dec
cld
je
inc
jb
sti
xchg
add
enter
pop
and
push
mov
sbbb
mov
pop
inc
sub
xchg
jb
add
icebp
jne
sbb
push
jecxz
lcall
cmp
inc
pop
adc
and
mov
fdivp
inc
or
inc
cli
jp
fnstsw
inc
out
nop
inc
sahf
dec
je
popa
add
sbb
jecxz
lahf
jl
test
pushf
and
cltd
les
mov
adc
cmp
push
push
imul
add
and
lahf
leave
jmp
sbb
int3
mov
push
mov
push
inc
repnz
mov
dec
inc
jg
addb
jmp
cmp
xor
outsb
in
sbb
mov
out
cmp
mov
cmp
arpl
add
push
xor
xchg
cmp
outsb
pop
cmp
fnsave
das
cmovp
js
imul
push
shlb
mov
mov
ficomps
test
jo
xchg
mov
jmp
sub
ljmp
test
add
mov
pop
adc
nop
pop
add
loope
xchg
mov
aaa
cwtl
fisubrl
ret
std
pop
imul
pop
push
dec
stos
jae
xchg
mov
mov
test
jo
jns
aaa
adc
andb
je
rcrb
clc
sbb
or
cmp
mov
lret
into
dec
popa
sti
pop
stc
add
pop
push
inc
out
pop
add
scas
sahf
pop
jp
aas
test
jg
shr
pusha
movsl
stos
xchg
mov
sub
inc
pop
mov
fucomi
ss
jo
and
mov
adc
fwait
data16
or
subb
iret
ja
mov
and
sahf
fwait
push
jnp
cwtl
andb
push
or
jg
jae
fwait
stos
sbb
mov
icebp
xorl
adc
sub
pcmpgtw
push
push
setae
bound
push
inc
addr16
push
or
loope
sub
dec
mov
lods
add
inc
mov
stos
out
outsl
cmp
sti
mov
mov
adc
fsubl
clc
or
mov
add
inc
callw
xor
cmp
gs
mov
push
sub
sbb
lcall
add
test
aad
call
mov
adc
mov
mov
mov
add
aad
fidivrl
xchg
adc
push
roll
stos
ret
adc
cmpsb
shr
movsl
jns
out
inc
js
and
out
es
sbb
sbb
je
sarl
rol
lods
jno
in
popl
cmp
jne
inc
jg
test
mov
cmp
inc
movsl
push
scas
stos
xor
pop
fnsave
jl
mov
xor
es
sbb
push
or
pop
or
push
movsl
jge
mov
out
push
movsb
xchg
mov
lods
and
fdivs
addr16
push
and
xchg
es
mov
sbb
iret
ret
outsb
call
cwtl
test
jns
add
leave
in
popa
inc
leave
mov
add
out
dec
cs
mov
push
jo
add
mov
xor
jbe
xchg
mov
bound
scas
out
repz
test
add
iret
mov
mov
xorb
out
jp
or
mov
push
xlat
mov
pop
daa
cld
add
shll
mov
loope
rcrb
sti
mov
ret
loopne
pop
rol
mov
xchg
test
inc
inc
cmp
lea
dec
mov
dec
int3
xchg
jo
xor
test
mov
fisubl
mov
mov
mov
xor
ss
and
jp
test
adcl
cmc
mov
shrl
add
pop
insb
outsb
into
jl
push
mov
jl
lcall
xor
sbb
push
hlt
call
aas
cmp
jecxz
pop
push
or
or
or
adc
into
out
adc
pop
sbb
pop
out
lret
push
mov
test
jle
or
out
movsl
add
sub
shrb
adc
rcll
cmp
out
lea
rep
push
adc
sbb
ficoml
movsl
pushw
mov
sbb
jb
xchg
imul
lods
jnp
enter
int
jae
jg
xchg
movsl
jge
mov
pusha
inc
dec
sub
ret
in
data16
clc
divb
insl
out
fnsave
xchg
and
xor
jl
push
push
outsl
mull
rcll
xchg
int
pop
sbb
es
add
aaa
xchg
mov
add
mov
pusha
mov
sbb
repnz
jo
push
out
ds
mov
dec
outsl
fdivrl
test
adc
aas
call
lods
pop
aaa
les
inc
popa
jo
test
incb
gs
jl
cmp
and
mov
sub
mov
mov
adc
arpl
jae
jge
mov
inc
fidivs
test
fwait
in
add
sbb
movsl
cmp
mov
cmp
daa
scas
mov
out
pop
xchg
inc
mov
cmp
movsl
mov
bound
sahf
testl
lods
pushf
fldt
shl
sub
int
lock
sbb
sub
gs
fadds
fsub
jle
cwtl
out
fstps
cmp
jg
mov
add
sti
inc
sbb
xor
sbb
mov
push
xor
dec
scas
xchg
out
jns
push
cmp
movsl
dec
or
and
inc
push
sub
push
movsl
cmpb
mov
inc
mov
outsw
sbb
push
push
pop
adc
cmc
out
jle
loop
cwtl
pushf
inc
xchg
aad
ret
movsb
xchg
out
pop
and
cmp
arpl
xchg
flds
dec
fstl
jae
jp
cli
gs
fstpt
push
loopne
mov
cld
mov
into
mov
jle
mov
adc
adc
outsl
xchg
xchg
fnstenv
cmp
jae
out
std
pop
and
adc
insb
xchg
cmpsl
test
and
xor
repnz
repz
add
ret
repnz
cli
movsl
loop
xor
out
imul
xchg
inc
sub
xorb
mov
or
sbb
and
adc
dec
lret
das
out
cltd
ss
adc
push
test
mov
pop
xchg
mov
mov
rcrb
cli
shll
mov
movsl
sub
sbb
test
or
sahf
mov
sbbb
mov
inc
ds
mov
je
mov
sub
lds
push
movsl
push
xor
test
cmp
shl
adc
push
jno
pushf
sub
cli
cmpsl
mov
js
js
dec
rorb
mov
pusha
dec
daa
inc
mov
or
sahf
xor
cwtl
or
xor
xor
adc
mov
inc
or
popa
or
aad
jg
sub
push
pop
addb
test
mov
pop
ja
aad
mov
add
sbb
repnz
add
lods
cmpsb
cld
rolb
inc
movsl
or
fcomps
jb
add
adc
movsl
adc
pusha
das
addb
mov
mov
addr16
mov
movsl
test
push
lea
adc
sbb
jl
arpl
jg
jb
add
dec
sbb
xchg
arpl
addl
int3
xor
leave
das
cltd
fstpt
push
cmp
shl
mov
inc
lcall
outsl
in
cltd
sub
lcall
mov
sarb
xchg
cmp
js
mov
push
out
in
sarb
movsl
dec
jge
mov
loop
xchg
idivb
xor
cwtl
addr16
pushf
mov
xchg
xchg
dec
pop
nop
popa
pop
pop
mov
jl
shr
aam
add
mov
xor
out
std
push
cli
out
test
jmp
pop
pop
test
icebp
jb
mov
xchg
xchg
inc
jbe
sub
sbb
push
mov
mov
ret
int3
test
fdivl
add
ret
pop
jae
mov
xor
fmull
testb
leave
lock
lods
fiadds
pushl
sub
sbb
mov
mov
rolb
or
mov
xor
and
inc
mov
mov
loope
mov
jne
mov
clc
mov
data16
fucom
sbb
int3
bound
aas
and
in
sti
add
xchg
pop
mov
out
ret
dec
lock
das
or
sti
dec
inc
add
mov
add
and
test
ret
subl
fimuls
xchg
cmp
fiaddl
ds
and
lock
cmp
inc
ret
cmpsb
shrl
test
ret
negl
ret
pushf
clc
adc
popl
jmp
stos
daa
fwait
add
fstpl
lahf
lods
ja
add
mov
dec
or
pop
imul
sbb
out
int3
testl
cmp
pavgb
ss
add
cmpb
arpl
lods
clc
sbbl
mov
mov
push
lock
stos
and
fnstcw
xor
and
mov
mov
ret
imul
bound
push
inc
leave
test
ss
dec
pop
adc
fsubrs
mov
sbb
ret
or
add
gs
pop
jb
ds
jmp
mov
xchg
push
ret
gs
inc
jbe
mov
movl
push
or
fs
or
insl
mov
inc
movsl
xchg
ret
add
data16
mov
orb
cltd
loope
insl
add
mov
jne
sub
mov
push
ret
adc
jge
and
or
pushf
rcll
icebp
adc
pop
cs
sahf
adc
ret
inc
cmp
push
enter
fs
mov
movb
stc
or
push
mov
adc
jmp
into
ret
hlt
iret
repnz
jle
pop
shlb
mov
sbb
ret
sbb
test
ret
rorl
xchg
mov
ja
inc
pop
pusha
in
cli
addr16
loope
jno
add
push
test
xor
add
fstpl
dec
cli
aad
in
jnp
mov
and
jp
and
stos
iret
out
in
sbb
test
daa
add
adc
sbbb
cltd
inc
sbb
sbb
rol
cmpsb
insl
pop
jge
sub
cmp
mov
xor
ret
inc
mov
ret
daa
adcb
jg
ret
fisubl
cmc
ret
add
das
sbb
push
jl
mov
pop
xor
mov
sub
push
push
dec
bound
xor
fbld
or
test
adc
mov
and
adc
lds
inc
test
cmpxchg
jnp
movsl
pop
inc
and
jl
cmp
das
mov
sub
test
daa
pop
mov
imul
icebp
orb
add
stos
pop
jp
xchg
sbb
cmp
mov
mov
scas
out
inc
jecxz
cmp
in
bswap
jmp
out
adc
shll
cltd
out
popa
jg
sub
addb
dec
add
mov
mov
mov
addr16
mov
push
mov
mov
aad
jge
movsb
pop
shrb
iret
rorb
fildl
push
sbb
jns
das
sahf
icebp
dec
hlt
sbb
lock
jle
mov
cmp
js
gs
mov
movsl
loop
daa
pop
xor
int
mov
sub
bnd
or
mov
test
iret
test
xor
or
pop
xor
mov
jno
dec
in
fs
sub
test
js
pop
js
xchg
dec
ret
daa
and
and
jbe
movsb
roll
jo
cmc
push
push
in
push
test
rclb
cmp
dec
sbb
mov
ds
push
sarl
xor
outsb
ja
pop
cmpsl
xchg
andb
add
aas
dec
fcompl
xchg
mov
mov
mov
fstps
mov
iret
cmp
push
test
shl
pop
mov
movsl
int3
aaa
mov
cld
in
cmpb
popf
mov
pop
lods
adc
jo
arpl
mov
insb
pop
push
iret
cmp
dec
mov
shll
dec
mov
pushf
pop
push
rol
js
jmp
mov
mov
xor
shlb
cmpb
pop
cmp
jae
add
adc
out
sbb
inc
dec
cmp
cmpsb
xchg
push
xorl
pop
daa
adc
cs
cmp
sub
mov
pop
jo
das
loope
cmp
jmp
popa
xchg
push
ss
jo
cli
sahf
sbb
pop
into
mov
xchg
inc
sub
stos
adc
xor
sub
xchg
xor
inc
fcomps
data16
push
add
and
jle
ds
iret
lcall
jns
xchg
sub
inc
push
movsl
lret
mov
inc
enter
scas
cmp
lahf
cmp
movsl
decl
aad
cmpb
xorl
adc
jbe
lds
ja
push
lock
fsubrs
rcll
xor
mov
lods
cmp
outsl
daa
fisubrl
out
jmp
cmpsb
mov
mov
dec
aaa
sub
sbb
hlt
test
loopne
mov
mov
movsl
test
add
rorl
mov
mov
mov
or
movsl
pop
mov
inc
cmp
insb
fdivr
jbe
lods
jl
outsl
inc
loope
and
sbb
ds
mov
jno
loopne
stc
aam
xorl
mov
imul
stos
inc
pop
dec
stos
inc
mov
or
test
lcall
es
adc
pop
arpl
jo
xchg
cltd
jg
scas
xchg
dec
mov
xor
outsl
mulb
insl
cs
lods
jnp
movsl
fdivrs
test
push
push
pop
adc
cli
mov
push
push
and
or
push
inc
inc
inc
and
jp
repnz
cmpsb
pop
test
push
xchg
sbb
xchg
push
aam
xchg
repz
fistpll
pop
cs
imul
mov
iret
ret
loope
inc
jae
push
clc
int
sbb
mov
mov
insl
div
ret
cmp
add
inc
test
arpl
gs
dec
mov
jo
cmp
pop
sub
sarb
icebp
dec
xchg
inc
jns
jno
addr16
cmp
lods
sbb
add
loopne
testb
push
xchg
fwait
cmp
inc
pop
jp
push
int3
mov
fidivs
cmp
mov
mov
repz
xchg
mov
lea
cmp
fstl
mov
jmp
add
cmp
push
sarl
rol
mov
repnz
mov
add
imul
jle
es
sbb
daa
jb
test
xlat
mov
scas
rcll
mov
inc
rcll
jno
ret
add
jns
pushf
push
movsl
mov
dec
adc
cmpsl
outsl
ret
insb
nop
into
jle
into
loope
push
pop
mov
mov
push
dec
and
shll
xlat
pop
cmova
mov
sbb
stos
and
mov
push
sub
and
loope
or
aad
lcall
stos
mov
adc
push
popf
sub
iret
cmp
out
lods
das
in
lock
jecxz
sbb
fdivl
ret
pop
jnp
xchg
out
dec
push
fisttpl
out
bswap
adc
mov
loope
cmp
lahf
data16
fs
inc
sbb
and
stos
fsubrs
pusha
inc
in
inc
popa
test
and
xchg
outsl
das
adc
jmp
insl
aaa
aas
ret
adc
fsubrp
fs
xchg
mov
sbb
setno
ljmp
out
push
cmp
cmp
mov
scas
je
sbb
in
xchg
loopne
inc
sti
lret
inc
push
movsl
jge
jnp
add
lods
push
cmp
mov
push
gs
xchg
jg
jne
adc
fwait
out
jo
bound
sub
xor
jmp
addb
pusha
out
mov
frstor
outsl
cli
lock
push
jmp
jns
lock
jge
or
test
mov
sub
jp
sbb
xchg
popa
add
insb
jo
arpl
adc
adc
xchg
jp
lods
push
xchg
or
inc
repz
mov
or
jns
dec
inc
fs
lahf
movsb
mov
lret
cmp
in
inc
pusha
push
mov
or
test
repz
cwtl
les
mov
notb
mov
stos
adc
pop
cmp
xchg
cmpsb
lahf
push
aas
adc
xchg
gs
mov
xor
cvtpi2ps
xchg
mov
in
mov
pop
xor
sbb
mov
in
arpl
cwtl
mov
lahf
mov
jg
fnstsw
stos
call
and
sub
add
mov
ss
xchg
xchg
mov
inc
addr16
shr
arpl
dec
sub
lods
ret
lcall
or
test
sub
adc
bound
psrld
mov
lea
jmp
or
pusha
clc
popa
mov
jb
ljmp
push
testb
movsl
xchg
cld
out
xchg
cltd
roll
rcll
subl
ret
bound
pop
or
pop
clc
sbb
mov
mov
sub
xchg
cmp
cltd
ljmp
outsl
sbb
xchg
bound
mov
mov
mov
ret
and
jb
cs
sub
mov
adc
dec
data16
lods
dec
cmp
movsl
fs
ss
ret
jb
sbbl
mov
sbb
stc
push
fldl
mov
js
addr16
imul
aas
out
mov
mov
inc
pop
mov
dec
xchg
xlat
push
inc
mov
ror
call
sub
mov
xor
insl
dec
test
cltd
or
inc
movsl
push
jnp
push
mov
sub
cs
inc
test
and
inc
pop
movsb
jnp
pusha
cmp
test
jb
inc
fidivrl
cmpsb
test
xor
das
shlb
out
push
xor
adc
xchg
jnp
sbb
movsl
mov
cmp
test
and
pop
mov
jge,pt
sarb
mov
popa
jno
dec
out
jmp
and
inc
push
stos
mov
add
pop
mov
mov
out
push
pop
out
or
les
inc
imull
iret
cmp
lret
outsb
push
jnp
int
sub
push
sbb
adc
scas
das
adc
and
dec
mov
hlt
hlt
and
pusha
daa
pushw
cmp
jmp
xchg
cmc
pop
shlb
sbb
and
jg
mov
addb
shlb
push
jle
push
dec
xor
and
push
mov
inc
sahf
test
inc
mov
out
adc
scas
in
into
add
sbb
or
scas
scas
faddl
aas
out
dec
test
sbb
mov
inc
pop
xchg
lea
cmp
lret
cli
and
hlt
xor
cmp
adc
aaa
inc
fmull
cld
sub
and
popa
out
sbbb
ljmp
fs
scas
mov
out
cmpsl
cmp
in
jnp
shlb
adc
mov
sub
outsb
out
test
xor
lret
push
gs
addb
enter
xchg
shll
sahf
gs
lcall
dec
in
mov
aas
shrb
leave
adc
in
cmpsl
sub
movb
xor
mov
popf
bound
inc
fsubs
push
mov
mov
das
std
lret
mov
shrb
ret
mov
mov
inc
enter
sub
aam
mov
scas
pop
lahf
mov
lods
loopne
adc
jae
xor
fsubl
icebp
imul
test
sub
mov
push
jge
and
push
cmp
subb
in
enter
test
stos
xor
jbe
mov
mov
inc
xchg
mov
test
clc
xchg
mov
inc
dec
sbb
inc
neg
inc
mov
int3
sub
lcall
jl
aas
daa
jnp
jp
aam
outsb
inc
xlat
test
push
mov
jo
test
ret
push
call
inc
mov
add
cmp
cmp
lock
xor
adc
mov
test
mov
dec
fidivl
lret
dec
and
dec
clc
sbb
pop
push
sub
aam
inc
push
xor
es
cwtl
es
adc
sbb
mov
mov
mov
adc
mov
daa
push
js
fildl
mov
aaa
xchg
dec
loope
mov
rorb
cmpb
popf
mov
inc
sbb
das
add
xchg
ret
shll
mov
xchg
xchg
shrl
xchg
lods
movsl
adc
xchg
test
mov
add
xlat
js
cmpsl
jmp
dec
fnstcw
test
push
add
sub
push
xor
daa
cmpb
in
cli
fs
dec
adc
ja
lds
jle
cmp
cld
mov
cmpsl
nop
xlat
je
mov
data16
jmp
jb
add
xor
jle
xor
mov
in
cld
lock
das
lcall
pusha
xor
fadd
sbb
cmp
xchg
sub
outsl
fst
mov
test
add
jbe
sub
arpl
cmp
dec
adc
push
fidivl
inc
rcrl
push
cmp
repnz
jl
int3
dec
cmp
inc
pop
add
mov
mov
mov
pop
xor
mov
jbe
lcall
inc
pop
jo
cwtl
push
push
mov
movsb
xchg
jae
les
mov
out
xchg
lret
into
add
and
sbb
fstps
inc
dec
iret
rorl
leavew
mov
mov
xchg
adc
jbe
test
dec
adc
push
jmp
test
xchg
fwait
mov
pop
loopne
sub
lea
push
repz
js
xchg
dec
inc
and
xchg
hlt
sbb
lea
xchg
andl
mov
or
jno
fwait
pop
std
cmp
into
orl
lods
pop
adc
insl
sub
test
lahf
scas
xchg
stc
push
stos
dec
test
cli
aaa
or
mov
sub
lods
fcmovnbe
pushf
lret
ja
loopne
push
rorl
leave
cmp
jge
outsb
push
pusha
test
xchg
cwtl
jmp
movsb
cmp
xor
mov
into
rolb
sarb
lcall
dec
inc
inc
inc
adc
cmp
mov
xor
les
cltd
inc
loopne
test
es
cli
out
aas
mov
mov
mov
pop
dec
jp
lahf
adc
mov
mov
ds
jbe
push
pop
and
stos
or
mov
pop
js
inc
push
movsl
mov
out
xchg
mov
movsl
enter
divb
bound
or
mov
fldl
cli
cltd
jb
lret
sub
pop
add
add
cmpb
sub
into
pop
push
mov
mov
cs
rorb
fists
jne
adc
movsl
jl
mov
jl
shrb
jo
jne
xchg
and
into
ret
xor
mov
push
mov
clc
cmp
adc
jno
jnp
test
adc
pop
fwait
test
xchg
dec
and
cmp
xchg
cmp
inc
push
rolb
fsubr
inc
in
or
adc
int
xchg
rorb
inc
pop
scas
adc
mov
nop
insb
pushf
leave
mov
inc
addb
mov
pop
add
mov
mov
sbb
lock
pop
inc
xor
ljmp
and
jmp
js
push
ljmp
mov
jb
mov
out
out
loope
fldt
addb
jb
rolb
sub
sbb
push
inc
insb
cmp
pmulhuw
add
fisttps
mov
loope
or
cltd
add
test
and
cmpb
xchg
cwtl
mov
push
lods
xchg
out
mov
pop
pushf
mov
adc
shlb
jns
or
pop
mov
lea
aad
or
addr16
daa
lods
ret
jge
jmp
daa
sbb
hlt
xchg
mov
sar
mov
mov
mov
mov
popf
popa
jmp
push
push
jmp
pusha
xor
orb
test
jp
rcll
mov
push
cmpsb
adc
dec
mov
pusha
and
movsl
les
or
sbb
cmp
pop
mov
mov
out
mov
js
inc
or
addl
outsl
addb
outsl
inc
push
cmpsl
scas
adc
inc
mov
mov
jp
adc
dec
cmpsb
movsl
adc
push
out
pop
ljmp
mov
inc
cmp
pop
ret
adc
shll
sahf
aaa
cs
test
mov
ljmp
sbb
inc
and
xchg
shll
sub
add
jmp
stos
dec
lock
lahf
pop
add
mov
and
insl
mov
fisubrl
pop
stos
insb
mov
stos
mov
outsb
std
pop
add
sbb
popa
and
in
jb
push
jne
sub
dec
ljmp
les
andb
daa
push
mov
inc
cmp
in
xor
fidivs
and
mov
jl
je
fdivl
xchg
jmp
andb
sub
xor
fidivl
in
outsl
sbb
mov
lods
adc
daa
push
pop
je
adcb
xchg
push
daa
inc
in
sbb
inc
and
cld
sbb
and
inc
loopne
mov
inc
sbb
add
les
out
lcall
inc
gs
adcb
mov
and
rorb
ret
shrb
mov
inc
fcoms
xchg
xor
and
rcl
cld
test
mov
loop
leave
xor
push
dec
add
test
pop
outsb
pop
jne
sub
sbb
push
stos
sarl
sub
inc
fucom
xchg
ljmp
iret
js
mov
lcall
outsl
popf
int3
jo
aas
int3
popf
stos
mov
popa
cmpsl
clc
popf
shlb
jno
clc
fs
jb
xchg
scas
in
xor
and
adc
dec
add
adc
shll
iret
outsb
addr16
ficoml
mov
mov
mov
mov
mov
clc
inc
or
xchg
dec
push
xchg
mov
fwait
loope
dec
mov
fwait
add
inc
xor
cltd
mov
sahf
ss
hlt
mov
mov
and
xor
mov
pusha
cmpb
pop
adc
push
and
testl
imul
sbb
pop
cld
cmpsb
iret
jle
std
in
cmp
pusha
mov
add
movsb
and
adc
clc
fcmovu
lret
sub
pop
mov
shll
jle
out
jle
dec
cmp
mov
fs
faddl
xchg
push
aad
xchg
stos
test
inc
scas
push
xor
jge
ret
mov
loopne
sbb
xor
test
jnp
and
cmc
mov
aad
popa
out
loope
test
cmp
cld
mov
fbstp
jl
movsl
dec
int
mov
test
and
jns
adc
xchg
cld
xchg
jns
pop
fldl2e
mov
test
cs
andb
stc
sub
xor
out
aad
mov
lds
jo
fs
and
enter
in
das
cmp
jp
push
xchg
and
std
lock
xchg
mov
outsl
xchg
or
loope
cli
imul
cmpsb
bound
push
jo
rolb
pusha
lea
mov
out
mov
scas
mov
int3
and
push
xchg
add
cwtl
aaa
lcall
dec
test
add
sahf
inc
xor
mov
cmc
add
shrb
jno
add
jmp
add
mov
imul
mov
cpuid
enter
and
das
dec
dec
mov
test
adc
mov
loopne
adc
pusha
or
movsl
pusha
jb
mov
in
dec
fs
push
sub
rorl
out
nop
les
mov
stos
scas
test
and
sbb
outsl
test
ds
push
es
into
adc
jg
scas
and
jp
aad
mov
add
in
cmp
fnsave
push
push
or
mov
push
cmp
js
fnsave
clc
pop
dec
jp
ficoml
gs
jns
mov
cltd
pusha
xchg
adc
mov
mov
movsl
movsb
inc
and
xchg
loope
add
push
test
in
xchg
xorb
pusha
das
add
test
dec
push
mov
loopne
sub
outsl
jns
fdivrl
roll
pop
xchg
addr16
push
test
loopne
mov
mov
inc
pop
ja
inc
mov
dec
cwtl
pop
dec
jge
enter
or
test
and
mov
cmpsl
movsl
mov
sbb
jecxz
arpl
xlat
sarb
jo
fwait
xchg
inc
test
xor
fwait
mov
mov
std
dec
test
lcall
mov
es
adc
into
mov
sub
inc
jns
sub
mov
jle
xchg
imul
js
or
dec
dec
bound
stc
push
fnsave
stos
inc
pusha
jmp
int3
sahf
ror
pop
sbbl
cltd
jae
and
sub
mov
push
xor
insl
cmp
sub
cmp
loope
push
pop
daa
mov
push
pop
stos
js
push
lods
or
in
mov
stc
sub
sub
mov
cmp
jno
dec
jne
mov
sub
pop
shr
xchg
repz
xchg
imul
or
sbb
movsb
sbb
out
mov
jns
fstl
repz
mov
push
sub
jb
rcr
mov
pop
cmp
dec
add
jmp
jle
imul
jp
inc
mov
mov
push
pop
cltd
mov
fwait
icebp
outsl
mov
xor
sub
mov
mov
mov
arpl
clc
jbe
mov
sub
adc
mov
mov
popa
xchg
sti
xor
mov
mov
inc
popa
pop
pop
insb
jmp
or
dec
stc
loopne
and
into
pop
sbb
in
mov
mov
hlt
lret
ficomps
inc
mov
xchg
sarb
sub
jne
push
inc
movsl
outsl
add
lods
call
inc
mov
clc
push
xlat
icebp
stos
negb
subl
dec
ds
or
push
xchg
xor
add
or
inc
out
es
lock
sahf
cwtl
je
dec
push
adc
test
inc
cs
out
mov
pop
dec
jl
xchg
stos
push
mov
test
inc
dec
movsl
and
test
mov
xor
int3
int3
or
lods
dec
jbe
subl
sahf
lds
push
loopne
into
dec
push
adc
pop
pop
pop
decb
test
loopne
pop
mov
jbe
out
outsl
mov
jg
cld
jl
icebp
pop
lcall
scas
xor
idivb
xor
incl
mov
das
lahf
jle
inc
dec
test
xchg
mov
inc
jge
rcrl
lds
leave
push
imul
sub
xor
test
and
in
jecxz
call
and
ds
aam
push
and
outsb
fistl
dec
mov
lds
in
adc
push
dec
jo
xchg
xlat
sub
cmpsb
mov
xchg
imul
cmp
mov
test
dec
add
fwait
ds
insb
mov
cmpsb
mov
nop
in
pushf
jecxz
rorl
xor
outsb
adc
mov
pop
ds
and
jbe
xchg
and
fsubrl
xchg
pop
js
sub
push
push
jnp
adc
xorb
inc
dec
pop
mov
push
mov
testb
cmc
or
jns
andl
cmc
inc
or
inc
loop
mov
xor
bound
sub
notb
gs
pop
xchg
int3
cli
ret
xchg
lcall
push
mov
sahf
push
pusha
arpl
mov
mov
out
dec
adc
xorb
ds
stos
fsubrl
xchg
call
and
ja
jne
sub
sub
movzbw
shr
mov
ror
inc
clc
dec
add
ror
mov
stc
push
test
pushf
push
lea
je
bt
cmc
sub
cmp
cmp
cmc
cmp
jmp
lea
lods
je
stos
sub
and
jp
nop
gs
sbb
enter
jnp
insl
stos
mov
leave
lock
rorl
pop
cmp
sti
imul
dec
rclb
test
push
stos
add
stc
xchg
jb
repnz
cs
pop
gs
fildll
test
jne
push
mov
xchg
rolb
outsb
sbb
push
pop
scas
dec
push
shll
fsubrl
xchg
cmp
int3
cmp
cmpsb
xchg
in
ret
dec
jg
fstl
dec
mov
repz
clc
idivl
sub
sub
pushf
and
or
pushf
lods
cmp
lock
mov
fptan
imul
push
mov
jne
cmp
xchg
adc
clc
adc
enter
mov
bound
loopne
cmpsb
jge
daa
fsubrl
xchg
data16
pushf
push
pushf
lea
jne
sbb
pusha
pop
xor
xor
bsf
mov
sar
shl
call
cmpsb
push
mov
jge
inc
sub
repz
or
int
sbb
mov
jp
test
push
je
add
inc
mov
sahf
out
rcr
and
mov
and
mov
add
lret
das
jle
bound
inc
stc
mov
sub
outsl
repz
push
fwait
in
cmc
sbbl
daa
mov
dec
inc
inc
push
cwtl
ficoms
dec
sub
jmp
jo
jae
pop
xlat
in
jl
mov
xor
pop
adc
jmp
pop
xor
cmpsb
fsubrl
xchg
hlt
adc
mov
mov
jmp
inc
xchg
add
adc
pop
fstl
adc
pushf
adc
pop
add
and
jo
ljmp
mov
push
ret
sarb
push
inc
in
loop
mov
push
movsb
test
add
enter
pop
bnd
pop
ret
sub
aad
xchg
insb
adc
fisttpll
push
in
mov
jg
lds
xchg
mov
push
add
pop
add
repz
mov
popa
or
xor
sti
jmp
mov
test
das
push
dec
insl
xor
and
xor
sbb
lock
add
jmp
adc
dec
out
cmp
aaa
ret
ret
fsub
or
xchg
xor
xchg
loopne
cmp
jnp
or
push
fsubrl
xchg
cs
mov
push
outsl
arpl
out
add
adc
pop
insl
hlt
sub
clc
arpl
mov
or
int
je
outsl
mov
addb
xchg
mov
add
nop
xchg
add
mov
jecxz
out
cmp
inc
jbe
lret
xlat
push
dec
xchg
ljmp
stos
and
jmp
lret
iret
sti
decb
mov
movsb
and
inc
push
sbb
sbb
adc
gs
fldt
sub
pusha
pushf
lea
call
jmp
jmp
shrd
sub
sub
not
jmp
dec
jecxz
and
pushf
in
cmp
sbb
sbb
xchg
out
shlb
mov
mov
out
jns
loopne
repnz
mov
xlat
pop
pop
push
aad
cmp
xor
int
dec
adc
cmp
nop
mov
cmp
xor
push
in
sbb
dec
es
jae
add
or
sbb
loope
jae
xor
pop
sbb
mov
in
adc
push
call
and
mov
out
fsubrl
hlt
adc
int3
jbe
add
push
inc
jge
std
ljmp
dec
imul
sub
addl
add
inc
inc
js
int
scas
fnstcw
out
sbb
leave
loop
mov
xchg
ror
mov
ret
in
inc
mulb
arpl
jbe
ret
inc
shrb
cli
pop
jle
jmp
in
xor
mov
notl
fbld
jg
jmp
adc
xor
enter
mov
mov
mov
lahf
jbe
cld
lret
lcall
jnp
fsubrl
push
jne
pushf
movsbw
lea
call
scas
inc
mov
push
stc
clc
in
add
sub
out
movsl
in
jmp
icebp
je
aas
addr16
icebp
lods
xor
test
mov
mov
rcl
mov
inc
fs
xchg
dec
jp
fistps
insl
scas
pop
imulb
or
dec
enter
btc
leave
dec
sbb
shlb
sbb
add
jmp
fbstp
xor
inc
aad
sbb
sub
pop
mov
je
scas
sub
jecxz
and
mov
fisttpll
inc
cltd
mov
inc
mov
add
icebp
cwtl
ja
std
int3
shrl
loopne
push
inc
and
sub
sti
add
cwtl
stc
or
movsl
cmp
leave
push
shrl
leave
enter
les
and
or
movsb
jnp
and
ja
pop
ror
and
or
lea
cmc
gs
jne
mov
adc
mov
push
lcall
jge
jo
insl
cmp
in
sar
push
inc
arpl
cmp
in
pop
or
insb
push
cli
mov
mov
jno
scas
push
inc
mov
ds
int3
and
add
xchg
xor
inc
lea
aam
push
in
pop
aam
setne
in
pop
lods
pop
repnz
insl
ss
push
adc
mov
sbb
faddl
in
ret
aad
in
add
mov
inc
outsb
jge
sub
subl
xchg
scas
sub
mov
jp
lock
pop
les
cmp
ret
das
jle
insl
je
repnz
addr16
xor
mov
mov
push
or
xchg
mov
push
mov
fsubrl
lea
inc
xchg
fadds
gs
add
jl
and
ja
sbb
add
scas
mov
scas
dec
pusha
daa
repnz
push
pop
or
sub
iret
into
pushf
test
rcll
and
sbb
sub
lock
mov
fistps
xchg
mov
push
lock
and
lahf
es
xor
fsubrl
mov
adc
mov
leave
cwtl
mov
dec
push
movsb
add
mov
or
push
jl
aas
gs
inc
and
xchg
pavgw
add
mov
mov
outsl
mov
pop
sbb
pop
jecxz
fs
std
divb
jnp
ret
xor
movsb
push
call
sub
add
lret
add
sbb
jmp
xchg
sahf
movsl
rcrl
lahf
lds
in
inc
cmp
xor
int
mov
sub
jp
ja
or
cmp
fldenv
jae
sbb
in
and
cmp
adc
cmp
push
fsubrl
mov
and
pusha
pushl
ret
jmp
fildl
jmp
jo
add
mov
and
push
jg
or
mov
push
fistpll
fldl
int
jg
aas
repnz
push
add
sub
xor
mov
fisttpl
and
jmp
cli
cmpsb
fs
xor
sbb
or
jp
pop
dec
add
popl
mov
mov
add
mov
xchg
out
lahf
ljmp
jecxz
test
lock
xor
and
or
xchg
dec
add
push
in
add
hlt
lret
push
cmp
fistpll
sub
in
cmp
lret
cmpb
leave
cmp
sub
cmp
sbb
jae
add
lods
push
fdivl
imul
fucomi
iret
idiv
or
outsb
je
fiaddl
imul
add
inc
shlb
push
dec
mov
int3
mov
gs
into
and
imul
mov
sbb
aad
mov
mov
pop
pop
stc
sub
test
outsb
subb
xchg
dec
and
mov
in
mov
sub
call
imull
and
popf
dec
cmpl
in
inc
mov
xchg
addr16
aaa
sbb
inc
xchg
cmp
or
xchg
les
cmp
in
lods
jg,pn
popa
ja
add
pop
adc
jae
pusha
pop
sbb
arpl
fnstsw
inc
push
mov
sub
rcrl
std
xchg
les
pop
push
movsl
mov
add
movsb
arpl
sub
test
negl
cmp
or
mov
repnz
and
jg
push
adc
dec
push
icebp
jp
dec
push
add
mov
pop
and
std
cmp
add
pop
movsb
loope
mov
popa
lcall
mov
dec
mov
movsl
out
adcl
ret
mov
mov
cmp
test
sub
add
imul
gs
daa
clc
dec
fisubrs
je
roll
mov
aaa
mov
and
jb
inc
aaa
stos
mov
out
out
or
fsubrs
movsl
dec
lret
xlat
ljmp
push
sarb
mov
out
imul
cwtl
push
or
and
xor
or
push
sub
aas
out
jl
sbb
push
hlt
imul
inc
nop
ja
int
sub
shll
fsubrl
mov
sbb
lock
or
divl
popf
lods
shll
jno
aas
push
std
nop
cwtl
orl
lret
xor
dec
pop
lcall
mov
mov
int
add
dec
fwait
jg
dec
adc
xchg
mov
sub
cltd
dec
adc
psubusb
iret
fisttpl
sub
stos
add
and
lret
insb
je
out
or
ret
mov
adc
jo
mov
les
sbb
jg
decl
jns
pop
into
mov
loopne
lods
push
fsubrl
mov
jne
or
add
pop
mov
pop
sub
mov
sbb
xorl
ss
shr
out
lret
outsb
pop
insb
dec
adc
addb
lds
push
adc
or
roll
xchg
pop
sub
fsubrl
mov
aaa
out
fadds
or
out
fmull
loope
inc
scas
sbb
loopne
cli
mov
push
movsl
sub
nop
xchg
and
daa
icebp
lcall
sbb
mov
dec
lds
or
and
mov
aas
test
into
sbb
pop
xor
push
add
adc
and
std
jl
scas
cmp
test
fnstsw
sub
sbb
inc
loope
mov
ret
in
int3
inc
and
push
fcom
adc
imul
enter
jmpw
in
mov
sub
push
js
jle
or
or
sub
cmp
sbb
shl
ret
jle
xchg
call
jle
add
sub
xor
rorl
jns
movl
xlat
pushl
push
push
jmp
das
add
dec
push
inc
xorb
pushf
sti
shrb
shll
xchg
add
or
subb
sub
ss
push
xor
jbe
mov
and
sti
lds
movsb
lret
and
pop
xor
popa
xchg
int3
pushf
xchg
ss
loopne
mov
mov
sub
enter
push
cld
add
xchg
imull
sbb
dec
fstl
dec
jno
cmc
out
jecxz
push
mov
out
sbb
or
jp
push
mov
or
mov
xor
divb
imul
jns
lods
popf
daa
inc
sub
aaa
pop
pop
cmp
hlt
ret
into
jne
xchg
inc
ss
shrb
sarb
sub
aad
lods
cmp
fnsave
icebp
xchg
mov
push
pop
xchg
jnp
or
shlb
lea
or
fsubrl
xchg
shlb
cwtl
cmpsl
mov
dec
cmp
cmp
out
or
pusha
lahf
push
cmc
lods
pop
xchg
lcall
or
dec
loop
cwtl
pop
ret
iret
or
repz
mov
pop
mov
sub
push
sbb
pop
sarb
movsb
cs
aad
stos
xchg
push
or
pop
faddl
pop
sbb
or
stos
inc
shlb
lds
test
or
add
fs
imul
add
inc
and
jmp
xor
push
in
aad
xchg
icebp
push
mov
sar
aas
into
push
mov
inc
and
inc
jae
movsb
xor
sub
push
or
mov
jl
push
fimuls
lret
jl
add
sbb
push
pusha
jbe
adc
daa
sbb
mov
lods
outsb
hlt
mov
cmpsl
mov
mov
ss
movsl
outsl
xor
mov
enter
data16
sar
lods
or
mov
push
xor
push
call
jmp
sub
lahf
xchg
add
sub
inc
xchg
sbb
cmpsb
cmc
push
jnp
dec
push
xchg
or
loope
int3
xchg
movsb
adc
arpl
adc
loope
out
rcl
dec
lock
repz
cwtl
adc
or
out
pop
mov
dec
mov
inc
jbe
subl
xchg
jg
xor
adc
push
cmp
inc
xor
movsl
xor
xlat
daa
test
jo
mov
dec
mov
mov
sub
out
lods
inc
repz
fsubrl
test
fisttps
xchg
add
add
ret
not
setg
call
jbe
lahf
into
mov
movsb
xchg
inc
push
dec
xor
inc
call
lds
or
pop
test
xor
popa
iret
sbb
jbe
jb
jbe
call
mov
adc
cmp
and
mov
pop
mov
imul
std
pop
cs
mov
mov
sti
mov
mov
or
lcall
pop
push
pushf
sbb
int
jnp
shrl
sub
fsubrl
test
inc
nop
rcrl
push
xchg
in
mov
into
and
imul
jp
jecxz
jecxz
daa
push
movsl
mov
loop
cmpsl
lret
inc
sub
push
out
je
imul
push
les
hlt
cmc
gs
sbb
push
mov
push
addr16
in
lcall
jae
xor
fsubrl
cmpl
outsl
jb
arpl
pop
xchg
xchg
inc
test
push
cmp
or
sub
cmpsb
xor
inc
arpl
addr16
and
iret
mov
ret
sbb
je
mov
shr
cmp
mov
cwtl
mov
mov
push
orb
pusha
int3
in
inc
daa
cmp
int
sbb
or
sbb
loop
clc
fildll
add
lcall
fsubrl
add
push
ljmp
xor
cld
dec
mov
and
push
insl
in
and
mov
push
popa
in
adc
stos
call
dec
mov
sub
pop
mov
jo
fcmove
xor
cwtl
scas
test
movsl
push
fbld
add
fwait
adc
dec
inc
or
test
cwtl
rcr
pop
add
cltd
js
lds
rcr
sub
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
xchg
cmc
mov
adc
clc
ucomiss
loopne
scas
jne
inc
lods
pop
test
fmuls
lret
outsb
push
cmp
mov
xchg
sbb
lock
xchg
pop
mov
dec
jge
sub
fldcw
cmp
pop
lcall
hlt
clc
or
out
jne
fucomi
leave
shrb
int
fsubrl
xorl
cltd
and
push
insl
lods
adc
or
mov
pushf
pop
aas
mov
iret
mov
lret
cltd
jl
jo
out
cltd
and
outsb
xchg
and
xlat
jnp
cltd
lahf
mov
jge
inc
popf
pushf
or
sub
arpl
lret
cmp
mov
outsb
insl
cmp
push
lock
int3
incl
and
inc
mov
data16
sub
out
cli
and
scas
notb
push
ffreep
lea
fcmovb
fsubrl
cmp
outsb
sbb
cmc
dec
mov
adc
into
in
dec
fwait
rclb
pusha
cmpsl
into
xor
cmp
dec
mov
xor
sbb
xchg
cmpsl
pop
scas
sub
add
xchg
movsb
int3
aas
inc
call
std
mov
cwtl
or
ss
cmpl
mov
jne
pop
scas
and
rclb
js
aad
sti
push
pop
addb
cmp
jne
js
orl
inc
dec
roll
repz
inc
mov
inc
aas
enter
scas
push
clc
outsb
xor
lods
scas
xor
xchg
mov
lods
adc
or
inc
test
sbb
fisttpl
add
cmpsb
dec
and
jmp
mov
xchg
ss
sti
jb
mov
push
cmc
in
stos
sbb
jg
hlt
bound
pushf
pushf
lea
jb
pusha
pusha
pushl
ret
push
push
lea
je
ror
mov
shr
shr
add
movzbw
mov
mov
bt
test
pushf
pusha
lea
je
not
add
sar
call
inc
lea
setl
inc
or
cmp
neg
inc
xchg
bts
das
mov
shl
rcl
mov
jmp
lahf
adc
stos
sbb
loopne
int3
mov
inc
mov
cmp
pop
jbe
cld
mov
jl
xchg
sarb
incl
cs
idivl
lret
out
adc
push
fildl
pop
and
jo
insb
in
jecxz
mov
lret
pop
xchg
in
xchg
lods
pop
cld
enter
cmpsl
adc
inc
or
pop
fbld
mov
sbb
adc
mov
adc
pop
addr16
fsubrl
jle
mov
jmp
in
mov
inc
jo
out
push
insl
je
or
out
sub
aad
enter
mov
mov
pop
jb
in
mov
cmp
outsl
pop
or
mov
inc
movsb
stos
mov
push
sub
mov
sub
in
cmp
jg
mov
lcall
lea
fisubs
lds
ror
dec
xor
sub
push
les
in
mull
cs
fs
fldcw
lret
fs
std
notb
lret
cmc
movsl
dec
daa
ret
clc
out
mov
mov
outsb
lea
dec
pop
jb
out
into
cmp
pop
movsb
ret
jle
sbb
sbb
mov
cmp
mov
repz
jle
data16
int3
sub
insl
or
imul
pop
cltd
shl
dec
dec
sub
pop
mov
add
in
inc
mov
mov
repnz
xor
and
add
sub
lods
imull
xchg
out
imul
xor
pop
arpl
leave
pop
lds
aaa
xchg
jp
and
in
inc
jns
xchg
pop
pop
sbb
push
loope
cmpsl
dec
in
arpl
fsubrl
jle
mov
push
push
insl
test
ss
or
mov
out
mov
sbb
push
flds
mov
sbb
stos
xchg
test
inc
lea
xlat
daa
mov
fcmovnbe
addr16
les
dec
lret
adc
gs
hlt
ret
jb
sbb
mov
xor
fsubrl
jle
imul
stc
sarb
pop
cmpsb
xor
add
test
mov
fmull
jp
push
sbb
jle
jo
push
ds
mov
test
rcrl
xchg
adc
or
mov
adc
cmp
mov
mov
mov
mov
push
push
imul
adc
jg
cmp
cmp
sbb
add
cmpsb
and
xchg
and
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
mov
push
jb
push
fdivp
insb
imul
xor
mov
test
mov
jmp
pop
xor
sbb
rcrl
scas
xchg
or
scas
into
push
jmp
je
pushf
pusha
pushf
mov
lea
jmp
pushf
mov
push
lea
je
pusha
cmp
push
jmp
mov
sub
or
sbb
sub
adc
pop
dec
push
cmp
inc
inc
jne
xor
inc
loope
cmc
cmpsb
inc
stos
adc
mov
sub
loope
popa
aam
in
in
iret
subl
xchg
cmp
mov
shll
sub
rolb
sbb
js
mov
les
mov
jl
cs
icebp
clc
adc
cmpsl
xchg
inc
mov
testl
xor
add
cmp
adc
jne
sti
les
push
loop
jg
lcall
imul
or
fs
loopne
out
xchg
xchg
test
sahf
out
cmc
pushf
sub
outsb
xlat
pop
insb
cli
jns
xchg
cmpl
call
frstor
cs
push
notl
sub
push
int
mov
adc
and
jbe
pop
jae
adc
jp
ret
ret
sahf
orl
dec
cmp
lds
mov
adc
dec
and
jb
fisttpll
and
add
push
push
or
ret
sbb
xorb
aam
cld
sbb
cmp
notb
jae
add
outsl
push
std
in
ret
bound
call
loop
je
inc
pop
mov
gs
mov
add
dec
mov
and
sub
shlb
jle
flds
ja
cmp
pop
xorb
scas
mov
cmp
sub
scas
clc
movsb
int
hlt
mov
lret
fildll
sub
cmp
out
mov
and
shll
jg
adc
es
or
js
cs
mov
popa
call
sub
aas
int
in
cmp
dec
add
fsubp
adc
mov
dec
xchg
cmp
xchg
cmp
loopne
cli
push
aaa
lds
adc
mov
lds
cld
imul
or
in
dec
js
pop
sub
int3
lcall
sbb
xchg
mov
ja
mov
int
jbe
or
push
test
xorl
stos
imul
jns
repz
call
ja
js
push
cmpsl
pop
jecxz
cli
push
sti
adc
xchg
std
insb
and
out
lods
jmp
push
mov
cmpsl
mov
add
stos
sub
mov
inc
ror
iret
fwait
mov
mov
inc
xor
mov
mov
fwait
pop
mov
jno
cmp
lret
sub
inc
xchg
ret
sbb
fisttps
adc
fsubrl
jns
adc
lcall
jp
flds
into
std
sbb
stos
add
das
jbe
dec
sub
fimuls
xchg
hlt
and
xchg
ror
rcll
jae
sub
repz
idivl
cli
jbe
lahf
lcall
addb
cmp
das
lods
sbb
pop
les
dec
addb
insb
mov
mov
mov
cmp
rolb
jecxz
sub
rorl
gs
cli
xchg
and
mov
sub
cld
insb
mov
mov
pop
clc
xchg
xchg
and
sub
xchg
sub
addr16
idivb
sub
in
pop
enter
dec
enter
and
and
sti
lahf
dec
fnsave
xor
pusha
rcrl
int3
cmp
mov
xchg
or
daa
cmp
adc
movsl
dec
sbb
cltd
sbb
out
fstp
fwait
xor
sbb
ja
out
mov
test
aam
lea
stos
ljmp
lret
repnz
and
rorl
fildll
jbe
adc
loop
sbb
into
pushf
arpl
pop
xchg
xchg
mov
cmp
mov
dec
data16
mov
pop
cmpsb
mov
es
popfw
scas
xchg
mov
xor
xchg
aaa
lret
sbb
dec
sub
jno
sub
bound
bound
pop
xchg
mov
inc
div
sti
test
mov
xchg
dec
push
shll
out
mov
mov
mov
push
or
push
add
cmc
nop
mov
or
jo
pop
fsubrl
ja
jecxz
fidivrl
hlt
or
cwtl
mov
pop
aad
lahf
push
add
add
repnz
mov
in
mov
jnp
adc
es
mov
mov
jge
jnp
popa
add
mov
ret
lret
hlt
pusha
pop
roll
xchg
test
icebp
adc
xor
ret
stos
fsubrl
jbe
or
test
or
xor
into
frstor
or
pop
xchg
lahf
ficoms
test
arpl
or
push
test
jmp
sub
pushf
dec
or
mov
imulb
mov
xchg
dec
ret
xor
rcl
outsl
idivb
pop
add
insl
fsubrl
jbe
fisttps
scas
add
lahf
mov
sub
mov
in
inc
cmp
mov
lcall
add
jle
out
imul
movsl
mov
fcompl
add
imul
jge
lret
jbe
dec
sbb
jl
push
dec
adc
push
ret
aaa
and
cwtl
xor
nop
xor
fwait
arpl
mov
sbb
scas
or
xor
cmc
sub
daa
out
sub
sbb
mov
push
inc
adc
fsubrl
jbe
inc
mov
inc
incl
movsbw
cwtl
movsbw
lea
mov
call
bt
not
not
mov
cmc
test
push
pusha
cmpb
call
stos
jnp
sarl
mov
inc
xchg
lock
in
jnp
add
sbbl
mov
mov
gs
sub
stos
mov
sbb
imul
pusha
jns
pushf
dec
insl
mov
mov
repnz
fldenv
enter
loopne
jle
xor
adc
and
fidivrs
or
dec
fiaddl
mov
dec
push
push
daa
into
pop
sub
ret
fsubrl
jne
push
mov
fs
jae
push
xor
push
jmp
pusha
pusha
pushf
inc
jmp
test
sahf
sub
jecxz
sub
movsl
int3
xor
sbb
dec
mov
xor
inc
scas
push
sbb
sub
sub
outsl
ror
shlb
lods
pop
adc
mov
mov
adc
leave
outsb
cltd
arpl
jae
icebp
rcl
xchg
sub
lock
sub
pop
lea
je
call
call
mov
dec
jns
test
jae
cmpsl
xchg
add
lcall
cmp
push
js
ud2
inc
and
push
outsb
iret
rcrb
push
mov
inc
xchg
iret
push
nop
mov
add
das
xor
mov
mov
pop
pop
call
pop
adc
lods
movsl
inc
cmp
ret
rolb
mov
out
cli
add
xor
cwtl
jge,pn
movsl
in
mov
call
rep
pop
push
pop
fsubrl
je
jl
icebp
lods
xor
je
cmp
pop
ss
or
mov
pop
and
in
test
notl
icebp
je
mov
arpl
push
popf
fwait
movsb
lock
sbb
xchg
ds
mov
insl
cwtl
fwait
mov
call
push
mov
notb
and
xchg
and
aas
repnz
in
andl
pop
mov
jno
pop
or
dec
cmp
bound
adc
and
pcmpeqb
orb
add
sbb
sarb
mov
fsubrl
jae
mov
cmp
and
test
fsubl
popa
sar
imul
dec
cs
lret
sahf
outsl
jg
inc
jno
int3
xchg
pop
jne
jle
or
pop
inc
movsl
adc
test
hlt
push
add
lock
fcom
push
push
jge
sti
or
rorl
push
rcl
mov
out
mov
lds
cmp
shlb
aam
lcall
jae
and
xor
sub
les
pop
movsb
lret
lret
addr16
popf
inc
das
aaa
and
dec
stos
ss
outsb
cmc
and
pop
mov
push
lods
lods
shrd
outsl
jne
fidivrl
cmpsl
stos
dec
int
test
push
mov
xorl
pop
repnz
scas
gs
fldt
mov
int3
or
jp
sbb
ja
das
in
adc
out
call
sahf
mov
jae
mov
cwtl
push
rclb
mov
lods
mov
lds
adc
sbb
outsb
adc
test
repnz
jmp
fsubrl
jb
or
stos
push
mov
dec
sbb
popa
andb
sub
fwait
mov
test
hlt
cmpsb
nop
mov
xchg
pushf
sbb
and
je
fs
imul
insb
out
sub
inc
out
shr
aad
adc
adc
imul
enter
adc
imul
jmp
xorb
outsb
fmull
ds
movsb
xchg
xchg
dec
lock
fsubrl
jno
or
mov
sbb
cmp
mov
aaa
outsb
int
add
mov
cmpsb
imul
adc
push
sbb
pop
bound
out
aam
add
in
adcl
aaa
and
mov
insb
in
jb
adcb
mov
or
push
or
xor
cmp
icebp
in
mov
sbb
xor
jns
fisttps
imul
push
lea
je
cmp
jmp
sbb
stos
xchg
loop
scas
push
jne
stos
cli
sub
jnp
loope
leave
lret
xchg
mov
data16
mov
add
scas
mov
push
test
fstpt
pop
hlt
scas
lock
or
in
cmpsl
mov
gs
add
cltd
rcrb
sbb
xchg
or
jbe
or
push
test
push
mov
daa
xchg
xor
push
and
addr16
ret
xchg
xchg
cmp
mov
or
lret
jno
daa
ja
and
mov
shlb
jmp
mov
pop
jle
fsubl
out
mov
sbb
jg
pusha
das
and
in
pop
outsb
jge
pop
insb
add
daa
inc
stos
adc
sahf
cwtl
jnp
xlat
popa
pop
xor
mov
or
daa
and
mov
repnz
xor
or
std
shrl
dec
xchg
mov
cmp
mov
lock
xor
adc
cli
hlt
or
repz
sbb
daa
mov
jl
push
icebp
call
cmpsl
fsubrl
outsl
out
cwtl
lcall
mov
dec
cltd
or
test
out
hlt
mov
mov
scas
mov
imul
sub
inc
push
outsb
imul
scas
mov
xorb
push
and
jg
insb
xchg
pop
inc
sbbl
jo
mov
scas
aad
ret
jmp
pop
cmp
and
cld
lret
adcb
fsubrl
outsl
test
mov
sub
or
cmp
repnz
push
jmp
jle
std
call
pop
in
mov
push
cmp
fisubrs
loopne
pop
outsl
push
sub
pop
fisubrs
sti
arpl
mov
pop
push
jecxz
imul
mov
scas
push
les
int3
int
adc
xchg
das
dec
push
sub
decb
rorl
inc
hlt
mov
push
push
setp
sub
stc
leave
add
dec
outsl
arpl
inc
jb
gs
ret
xchg
or
movl
pushf
jmp
sbb
call
push
inc
xor
sub
in
add
enter
jge
js
jp
cmp
iret
pop
sbb
repnz
loop
sub
mov
mov
sub
add
icebp
mull
jmp
push
inc
mov
aas
stos
sbb
shr
push
mov
mov
in
or
or
pop
mov
or
push
clc
pop
movsb
movsb
arpl
adc
aam
lret
pop
mov
inc
pmaxsw
sub
pop
or
jns
out
stos
pop
fsubl
jmp
adc
imul
pop
inc
je
and
add
sbb
mov
add
ja
pop
add
cltd
or
and
cmpsb
sub
sub
push
sbb
je
jge
jns
nop
xchg
es
pusha
mov
pop
mov
pop
inc
aas
insb
xchg
iret
out
pop
negb
loope
xchg
icebp
enter
inc
sti
lcall
fsubrl
insl
mov
sbb
mov
inc
insb
imul
push
mov
sub
jae
outsb
lret
add
cmp
mov
cmp
xchg
ret
xchg
scas
mov
test
sahf
mov
and
repnz
lret
loope
cmpsl
mov
adc
pop
cmp
mov
pop
rcr
sbb
mov
mov
test
mov
test
mov
adc
call
inc
hlt
jnp
leave
aam
cmpsb
push
jmp
sub
pop
jge
jecxz
cltd
mov
dec
jge
pop
or
or
add
out
and
arpl
add
icebp
adc
mov
daa
mov
shl
pop
dec
sub
or
add
mov
mov
fsubrl
loop
lock
jnp
jae
adc
inc
or
icebp
or
cwtl
imulb
push
in
mov
bnd
idiv
jge
cmp
sub
cmp
cld
adc
add
lock
and
push
adc
cld
and
sub
insb
mov
add
aaa
mov
sub
enter
rcrl
xchg
lods
cmp
ror
into
adc
mov
mov
icebp
sub
repz
lods
scas
add
jle
mov
cs
in
xchg
repz
xchg
jecxz
mov
sub
xorb
mov
inc
sbb
bound
loopne
inc
adc
movsb
fsubrl
imul
xchg
cmpsb
push
sahf
in
lock
insb
loope
mov
inc
mov
aaa
push
xchg
pop
pop
daa
adc
idivl
insl
cmp
in
inc
iret
ss
cmp
in
or
cmc
sti
lret
rcrl
leave
cli
hlt
stc
sub
sbb
aas
xlat
scas
test
xor
push
lret
push
mov
mov
gs
xor
mov
push
bound
inc
inc
mov
xchg
cmp
fsubrl
insb
push
jae
aad
mov
lahf
fbstp
dec
lea
imulb
push
lret
dec
aaa
cmpsl
xchg
loopne
cld
ja
cmc
sub
iret
jle
push
cmp
xor
lret
push
dec
shrb
sub
cmpsw
popf
and
movsb
ret
xor
hlt
data16
and
aam
sahf
pop
jne
fcoms
adc
cmp
jae
jmp
int3
mov
push
adc
push
dec
inc
cmp
jbe
hlt
arpl
sub
loop
movsl
cmp
jecxz
dec
jle,pn
adc
dec
repnz
in
lds
rclb
mov
xor
xchg
xchg
loopne
mov
cmc
lcall
pop
pop
je
rcl
popf
sarb
scas
les
jp
cld
mov
aaa
mov
mov
shl
mov
ret
cmp
test
jp
pusha
js
out
pop
ret
pop
clc
addr16
sbb
aad
and
popa
xor
mov
mov
fsubrl
imul
and
mov
lea
jne
not
call
jmp
call
pop
dec
push
sarb
add
test
mov
inc
dec
cmp
out
insl
push
fidivs
mov
mov
cmpsb
or
push
cmp
inc
lcall
popa
sub
mov
push
add
push
popa
loop
push
jne
xchg
loopne
lds
add
xchg
popf
push
lock
mov
xchg
inc
lods
mov
aad
imul
mov
cmp
and
pop
mov
mov
sbb
mov
inc
in
mov
fsubrl
imul
int3
sub
call
lret
cmpsl
es
cwtl
clts
lods
dec
jo
sub
rclb
jle
xchg
sbb
pop
jne
sbb
fnstenv
insl
cltd
dec
push
cli
sbb
ret
loop
icebp
or
ficompl
pop
fisubrs
inc
fst
dec
stos
and
inc
imul
popf
cbtw
sub
rorl
jmp
push
add
mov
leave
fninit
mov
mov
adc
cli
popa
push
shrl
out
adc
jle
xchg
pop
sub
lods
add
divb
xor
mov
psrlq
icebp
mov
mov
and
fsubrl
push
sti
xchg
xchg
out
xchg
mov
out
test
pop
cs
mov
scas
add
divl
xor
fiaddl
jb
cmp
loop
mov
sbbl
push
les
xchg
xor
jmp
imul
cmp
pop
arpl
sbb
leave
xor
add
xchg
dec
dec
sbb
jge
call
mov
movsb
xchg
out
pop
push
pop
in
sbb
jmp
test
adc
mov
mov
jecxz
jns
out
jge
stos
sub
lods
xchg
jae
arpl
jne
cmp
push
mov
mov
aas
inc
inc
hlt
fsubrl
imul
or
jmp
lea
call
call
mov
mov
pop
mov
mov
movsl
add
push
lock
or
data16
cmp
pop
jo
sub
xor
aas
sahf
std
lea
jb
scas
notl
insl
inc
adc
into
rorl
push
xor
dec
pop
popf
inc
call
pop
les
or
lock
jne
xchg
jge
add
jp
iret
ss
cmp
outsl
adc
mov
gs
push
out
jle
insb
sti
push
xchg
jp
andl
mov
cmp
fmuls
sbb
lock
sub
in
mov
push
call
pop
aam
push
mov
mov
push
lods
roll
test
into
mov
push
hlt
add
test
adc
dec
imulb
xchg
pop
lods
mov
cmp
push
dec
jbe
mov
jns
add
mov
inc
dec
sub
mov
repz
xor
fcoms
adc
rclb
sub
cmp
clc
lea
add
xor
mov
xchg
pushf
sbb
xor
inc
aad
ss
or
stc
daa
lods
inc
testl
mov
repz
mov
fistl
sub
xchg
mov
mov
mov
mov
dec
std
inc
imul
mov
push
dec
sbb
mov
xchg
in
ret
jae
adc
pop
push
push
sarl
imul
mov
add
lds
outsb
add
adc
sub
jae
imulb
xchg
js
add
push
push
insb
xchg
repnz
cwtl
into
xor
jns
dec
xor
pusha
add
and
adc
mov
xor
test
test
shll
jge
call
into
push
iret
in
negb
ret
add
cwtl
mov
jmp
mov
cmp
or
adcb
dec
xor
mov
sub
push
ret
call
bt
bt
pusha
test
call
xor
mov
push
xor
sub
jbe
aam
data16
jl
xlat
fcomp
lods
cwtl
or
xlat
cmpsl
jp
add
inc
les
push
inc
xorb
cmp
imul
xchg
push
pop
and
sbb
sbb
rorl
mov
cwtl
cmpsl
and
sub
outsb
fsubrp
into
flds
add
add
je
outsl
fs
gs
imul
add
leave
pushf
call
clc
in
ret
inc
jne
shlb
sub
jb
call
addb
stc
stc
fmuls
cmpb
hlt
notl
scas
push
dec
xchg
lahf
cli
sub
stos
ret
mov
cmpsb
rclb
filds
jb
dec
inc
imull
ret
mov
sbb
sbb
stos
and
imul
push
mov
xor
cmpsl
push
in
faddl
cmpsb
fsubrl
fs
adc
call
out
cmpsb
int
jae
rcll
push
lea
ret
jbe
push
or
cmp
pop
push
in
pop
lcall
pop
and
loope
cmp
int3
xchg
lret
lock
addr16
adc
loopne
push
lds
mov
insb
mov
push
push
loop
fstp
stc
mov
clc
fsubrl
gs
mov
push
pop
sub
mov
cmp
inc
xor
hlt
jg
fildl
aas
lret
sbb
cs
push
push
enter
cld
dec
les
fbstp
jae
sub
and
sub
mov
cmp
mov
aad
pop
or
xor
cmp
aam
outsl
xchg
notb
add
arpl
out
sahf
pushf
mov
lea
jne
jmp
and
pop
pop
aas
pop
pop
and
das
lahf
in
and
mov
and
test
lods
mov
loop
adcb
stc
ret
test
loopne,pt
sub
lret
jo
jg
adc
jno
push
pop
push
or
pop
loop
stc
mov
int3
lds
les
test
cmc
out
jno
xchg
xchg
and
cmp
push
add
jp
leave
push
ja
adc
insb
xchg
jae
lock
fwait
loop
cwtl
cmp
or
scas
sbb
test
gs
jg
out
add
rorl
addb
fcomp
sub
aaa
pop
add
inc
gs
imul
bound
gs
add
mov
adc
adc
popa
loopne
xchg
inc
xchg
lret
pop
arpl
mov
lods
cmp
insl
pushl
popa
xor
jae
test
or
stc
mov
add
std
adc
dec
popf
or
jns
imul
push
cmp
dec
dec
lahf
outsb
jne
xchg
mov
xor
xchg
jp
loopne
cmp
mov
fsubrl
arpl
and
imul
cmpb
pushf
lea
jne
ror
mov
stc
add
cmc
call
push
lret
jmp
cmpsb
push
scas
mov
sbb
pop
es
call
call
rol
xchg
cmpsb
jnp
add
arpl
int
arpl
cmp
out
cltd
xchg
mov
mov
ret
fmull
icebp
and
dec
sbb
mov
sbb
lock
xchg
fisttps
je
or
enter
int3
imul
add
sub
outsb
ficoms
iret
mov
dec
iret
out
in
adc
loop
pusha
ss
imul
adc
mov
in
mov
int3
nop
aaa
into
in
je
dec
sub
mov
dec
addr16
ret
cmp
out
xchg
and
into
jle
xchg
cmpsl
adc
pop
adc
push
les
and
add
push
mov
in
gs
mov
mov
mov
lds
scas
add
cli
icebp
rorb
dec
sbb
popa
andl
fs
xor
js
push
std
test
repnz
ret
loopne
dec
jns
test
jb
nop
adc
in
pop
sbb
jmp
subl
pop
fdivrl
dec
or
gs
xchg
pushf
dec
pop
pop
cmc
jb
mov
xor
push
sbb
fildl
jns
iret
das
push
jae
scas
flds
push
js
or
scas
pop
adc
or
sahf
cmp
sub
adc
enter
mov
cmp
hlt
push
mov
loope
test
shlb
jp
fwait
mov
stos
fistpl
xorl
dec
mov
pop
jmp
inc
jae
push
pop
mov
inc
adc
rclb
movsl
adc
std
adc
push
xchg
cwtl
pop
push
std
fsubl
sub
fisttpl
bt
pushw
popfw
call
and
add
ljmp
lret
ficomps
mov
cmp
cmc
gs
sub
cmp
aas
call
push
js
lea
jae
stc
les
mov
sub
mov
aam
mov
push
mov
mov
adc
xchg
movb
addr16
cmp
cmp
sub
cmpsb
push
pushl
lea
call
jge
pushf
push
pushf
lea
jb
push
pushf
pushf
pushl
ret
std
into
sub
lcall
add
cmpl
mov
mov
cmp
rorb
pop
xchg
cmp
int
testl
jb
dec
mov
in
mov
rcrb
push
imul
lds
lods
pop
je
orb
arpl
rorb
test
add
pusha
dec
insl
mov
xchg
adc
mov
xchg
sbb
rolb
cmpb
loopne
mov
push
mov
inc
or
fisubl
cltd
cmp
cmpsb
ljmp
xchg
jge
sbbb
sahf
fists
insl
testb
jbe
or
pop
mov
lods
ret
xorb
dec
in
or
mov
push
sbb
xorb
jge
jnp
sbb
xchg
mov
movb
lea
je
stc
inc
add
neg
and
sub
and
shr
bt
shrd
rcl
dec
mov
btc
movzbw
jmp
jno
jp
js
shlb
sbb
xor
int
lret
xchg
incl
dec
jle,pn
jle
sbb
jecxz
loope
adc
cmpsb
scas
xor
sub
and
insb
and
mov
aam
je
sub
mov
push
addr16
in
mov
add
aam
repnz
shrl
push
movsl
mov
jg
inc
pop
push
cli
sbb
jmp
movsl
pusha
testl
xor
loop
cmp
lea
ret
pop
adc
sub
cmp
leave
lcall
and
mov
and
lahf
push
cmp
jp
push
adc
xchg
lcall
int3
jecxz
aad
sub
arpl
cmc
sbbl
scas
out
add
je
pop
jecxz
cmp
dec
scas
lods
popa
inc
sbb
es
mov
adc
loop
popa
sub
nop
popw
daa
sahf
test
mov
dec
add
cwtl
ja
fsubrl
pop
pop
jl
mov
push
mov
adc
int3
cmp
mov
mov
xor
cmp
ljmp
iret
das
pop
sub
mov
dec
jb
pushf
outsb
push
addr16
or
int
jp
insl
xchg
jl
fmull
xchg
push
jmp
loope
fisttps
mov
sbb
cltd
cs
mov
add
inc
fisubrs
lds
not
mov
pop
pop
add
cmp
std
or
sub
aad
mov
test
mov
dec
sbb
fsubrl
pop
push
cmpsb
je
push
push
aam
in
push
leave
cld
mov
bound
hlt
dec
xor
jle
push
mov
mov
mov
ficompl
clc
fcoms
mov
sbb
rcr
adc
dec
pop
inc
fprem
xor
sbb
sub
cmp
pop
pop
jp
mov
cmp
fwait
ds
and
xchg
cmc
mov
mov
cmp
mov
mov
and
jg
fsts
pop
mov
sbb
das
fistpl
add
lcall
mov
pop
mov
xchg
aad
adc
jns
or
sub
jmp
hlt
aad
push
faddl
dec
cld
test
jge
aaa
pop
jle
mov
xor
je
je
dec
adc
jns
push
sbb
mov
cmpb
mov
adc
andb
jmp
xchg
push
xor
sbb
mov
test
jb
jecxz
sub
pop
mov
idivb
stos
ds
shrb
mov
mov
scas
pop
xor
mov
andb
ret
leave
inc
out
sub
daa
sub
sub
sahf
ret
mov
mov
pop
pop
shll
mov
fimuls
jle
cmp
fidivs
ret
mov
test
jle
jne
stos
cmp
xchg
fimuls
out
cmp
jle
loope
mov
loopne
popa
arpl
shll
cwtl
xor
cmp
inc
xchg
cmp
mov
inc
mov
movsb
test
popf
cmpsb
inc
nop
stos
pop
mov
mov
mov
sbb
out
pop
daa
cmp
jle
cmp
inc
mov
loop
cmp
stos
shrb
mov
rcl
sahf
mov
cmp
push
xor
andb
mov
add
sahf
test
mov
test
jle
cmpb
cmpsl
jmp
cmc
dec
ror
mov
mov
mov
loope
inc
mov
mov
jo
mov
mov
sahf
mov
mov
mov
aaa
inc
scas
xchg
pop
push
sub
mov
xor
push
cltd
insb
cwtl
mov
loope
xchg
loopne
inc
inc
aad
ficomps
cmp
andb
inc
and
jae
jno
or
out
loope
orb
stos
subb
bound
dec
std
popf
dec
add
fadds
popf
shlb
fistpll
mov
bound
mov
xchg
xchg
pop
rorl
xor
inc
pop
mov
mov
js
pop
adc
cmp
loopne
mov
pushf
mov
imul
test
mov
xor
or
shrl
sti
mov
pop
or
push
adc
mov
scas
mov
shrb
cwtl
mov
or
mov
movsb
data16
mov
dec
sarb
shl
jno
addr16
jbe
jg
aas
mov
rcrl
pop
lods
fwait
lods
add
mov
jns
adc
add
mov
sarl
cmp
mov
fwait
inc
shll
mov
mov
sbb
mov
movsb
dec
mov
sahf
std
xor
out
inc
add
pusha
sbb
mov
notb
mov
repnz
scas
jmp
mov
xor
mov
inc
ljmp
mov
test
sbb
inc
mov
add
inc
push
cmp
mov
jmp
mov
sahf
rol
aam
sahf
adc
xchg
pop
ret
mov
and
mov
mov
inc
mov
inc
pop
jb
rol
or
pop
mov
inc
mov
loopne
inc
loopne
add
pop
mov
std
aad
inc
push
xchg
xchg
jecxz
cli
sarl
pop
jb
into
inc
sbb
mov
repz
xlat
lods
push
adc
xor
pop
adc
inc
sub
loopne
push
movsb
or
inc
js
mov
mov
popf
mov
cs
jns
jecxz
and
outsb
jl
rcl
sti
cmpsl
add
mov
movsb
mov
ja
pop
push
add
mov
sarl
xor
cmp
scas
sbb
ds
movsb
cmp
mov
cltd
shrl
xchg
mov
shll
xor
cmpb
add
mov
movsb
jae
arpl
movsb
add
mov
movsb
cmp
stc
push
mov
push
mov
xchg
aaa
mov
stos
dec
in
mov
fstpt
mov
jnp
insl
mov
add
outsb
xlat
int3
mov
loope
pop
jle
stc
loope
push
icebp
sbb
mov
shrb
insb
add
repz
add
movl
mov
ds
xlat
mov
lods
scas
push
loope
addr16
mov
iret
xchg
cmpsl
add
lock
loopne
push
loope
mov
inc
lcall
test
rorb
lret
sub
or
nop
mov
ds
mov
outsb
xchg
mov
sub
das
cltd
pop
enter
mov
adc
loope
icebp
cmc
int
outsl
shlb
xchg
daa
jno
add
cmp
hlt
loope
stos
add
hlt
loope
rclb
loope
xchg
xchg
fsubs
mov
ds
sub
lods
popa
fwait
mov
xchg
dec
std
loopne
andl
push
xorl
mov
jp
push
mov
add
mov
mov
jo
imul
jo
mov
sub
int3
stos
test
mov
xchg
lods
or
push
jp
fs
js
cmp
shll
mov
out
je
rcrl
setae
pop
rol
ss
shll
jne
cmp
mov
outsl
mov
inc
add
cmp
pop
movsb
jnp
adc
adc
mov
mov
and
test
inc
ficoml
mov
insb
mov
es
iret
mov
bound
sahf
movsb
stc
sub
nop
sub
inc
push
pop
aas
popf
mov
adc
xchg
mov
scas
jp
mov
cmp
shrl
or
pop
inc
rclb
js
cld
cmpsb
jge
sbb
stc
mov
mov
jge
xorl
pop
mov
push
mov
mov
jbe
cmp
cmp
inc
xlat
and
mov
xorl
sbb
mov
jle
pop
sbb
adcl
mov
lcall
fldcw
pop
mov
fsts
nop
stc
inc
fistpl
push
sahf
add
mov
sbb
notb
mov
sub
ss
sarl
pop
mov
cmc
fwait
mov
sub
es
cmp
jno
inc
mov
xchg
in
call
cmp
push
add
mov
test
adc
sbb
popf
and
lahf
push
stos
pop
mov
je
mov
cmp
sbb
and
mov
mov
mov
cmp
sahf
pop
jnp
stos
mov
sub
fwait
cli
mov
shrl
cmpsb
dec
mov
push
pop
pop
fcomp
push
popf
mov
jl
in
add
je
jb
sub
sbb
bound
std
inc
scas
inc
mov
cmc
andl
lcall
adcl
rorl
mov
scas
inc
ret
mov
mov
mov
mov
inc
rclb
mov
pop
mov
mov
or
std
jmp
mov
es
cmp
pop
cmp
mov
mov
cmc
mov
pop
lahf
bound
rcrb
mov
sti
pop
inc
mov
test
nop
xchg
lcall
pop
mov
xor
sub
pop
mov
adc
aaa
pop
add
ljmp
mov
shrb
sbb
rcll
cmp
ret
push
outsb
std
cmp
adc
mov
inc
inc
and
xchg
mov
ss
jle
mov
mov
sbb
ss
inc
mov
cltd
mov
cs
fnstsw
mov
daa
ds
fs
xor
jb
add
jp
xchg
inc
in
pop
mov
lods
test
je
cmpsb
arpl
aam
sahf
mov
jno
inc
mov
movsl
dec
add
add
andl
and
and
add
pop
jbe
mov
push
hlt
xchg
or
stc
mov
roll
lea
jle
movsb
test
inc
jg
sub
ds
std
fidivrs
adc
repz
mov
xor
call
mov
mov
out
jg
cmp
xor
cwtl
xchg
xor
jns
mov
mov
jb
pop
ss
sbb
iret
mov
or
pop
sbb
sub
adcb
sub
daa
imul
stos
imul
inc
mov
mov
das
jl
mov
inc
ss
push
mov
or
xchg
ds
and
popa
fcompl
adc
jmp
sbb
in
scas
pop
icebp
sahf
cltd
inc
xchg
push
mov
push
loopne
inc
pop
scas
xchg
icebp
jp
inc
cmc
jb
mov
mov
mov
mov
xor
cmp
mov
testb
sbb
mov
mov
cli
mov
adc
push
mov
jp
cmp
ds
mov
pop
cltd
movsl
xor
mov
mov
div
mov
add
stc
mov
fnstsw
fcmovb
cli
mov
pop
push
pop
mov
sbb
sub
imul
sti
xchg
lods
mov
nop
scas
mov
fwait
idivl
loopne
jge
mov
in
icebp
sub
mov
pop
in
cld
clc
inc
jnp
stos
or
insb
cmp
adc
popf
lock
js,pt
mov
mov
insb
sahf
xor
xor
lods
pop
inc
mov
fwait
mov
or
stos
cmp
ds
cmp
cmp
pop
cmp
js
lret
pop
test
jb
neg
aad
shr
pop
negl
sahf
cmp
dec
mov
cmp
mov
icebp
cmp
scas
push
mov
popf
daa
mov
clc
mov
cli
fisttpll
jo
jns
pop
cs
mov
pop
sarb
sbb
lret
jb
jge
mov
mov
jg
mov
push
cs
sub
xor
enter
cmp
in
sub
inc
mov
std
mov
jae
mov
shrl
mov
subb
jp
mov
sbb
fstl
testl
cmp
aas
xchg
into
idivb
mov
mov
push
mov
mov
jg
fimuls
mov
fldl
fwait
movsb
das
adc
stc
and
sahf
jnp
fldenv
lods
repz
mov
push
lods
xchg
dec
cmpsb
pop
insl
rol
jbe
inc
adc
xor
sbb
scas
xchg
stos
repnz
pop
xor
fst
mov
push
jae
cmpsl
jb
mov
inc
cmpsb
cmpsb
adc
mov
movb
mov
xor
sbb
sbb
mov
cmp
js
aam
lods
xor
and
sub
adc
mov
push
mov
mov
cmpsb
xchg
adc
test
sahf
test
dec
lods
shll
rorl
clc
repnz
cmp
addr16
imul
sub
mov
xor
call
sub
adc
mov
jp
test
popf
mov
cmp
sbb
test
xchg
pop
std
xor
sub
xor
ss
pushf
stc
xchg
cld
inc
cli
lea
mov
mov
es
mov
out
mov
dec
shlb
mov
and
sub
mov
test
fadds
cmp
cmp
inc
xor
pop
scas
movsb
fbld
out
xor
in
je
mov
outsb
aas
add
sbb
fldenv
ficompl
jns
cwtl
sub
outsb
ss
test
cltd
movsb
bound
mov
call
lods
rorb
dec
mov
movsl
cmp
inc
es
inc
add
andb
icebp
jg
mov
xor
int3
ds
jo
jge
xor
rcrl
mov
jmp
jge
pop
mov
mov
enter
test
rcr
ret
mov
adc
xchg
aam
or
ret
out
aad
mov
inc
inc
aaa
lret
faddl
jb
ss
sub
stos
jbe
cmp
mov
or
inc
inc
adc
adc
jge
icebp
scas
incl
xlat
mov
mov
loope
test
repz
push
test
xor
pushf
fwait
push
adc
add
cmp
add
mov
cli
dec
ja
cmpb
cmp
jge
fnsave
mov
inc
fcoml
jb
mov
aas
mov
xor
shrb
sbbb
and
xchg
ja
xor
loop
shrb
mov
js
mov
xchg
mov
mov
mov
in
clc
cmpsl
in
xor
out
rol
jae
flds
xchg
jne
test
addr16
hlt
xor
jne
nop
addr16
popf
cmp
add
dec
inc
mov
mov
jae
dec
push
mov
pushf
jns
mov
jbe
imul
mov
push
mov
mov
push
push
cmp
jne
stc
push
push
imul
sarb
in
inc
mov
cmp
mov
les
jne
movsl
outsb
bound
cwtl
pop
add
mov
nop
aas
cmp
push
cwtl
sarl
xor
xorl
inc
mov
and
sahf
out
xor
roll
loop
adc
xor
jmp
fstpt
fistpl
jp
test
add
adc
std
push
mov
mov
jbe
stos
push
in
xor
jb
mov
inc
loop
pop
popa
aad
jae
sub
xor
aad
fmull
inc
aaa
aas
mov
adc
movsb
mov
jne
aaa
mov
aas
mov
ficoml
scas
cltd
sub
std
in
loop
jae
xchg
mov
inc
mov
les
xchg
fisubrl
insb
jle
inc
std
gs
hlt
mov
ds
mov
stos
jbe
jae
out
xchg
lods
bound
cmp
inc
xor
inc
cmp
push
add
push
pop
mov
mov
outsl
imul
mov
sti
icebp
xor
pop
inc
mov
in
mov
cld
hlt
mov
loop
inc
ret
fs
xchg
add
xor
mov
inc
xor
sub
xchg
je
jmp
cs
or
mov
xchg
cmp
subb
sarb
cmp
jecxz
outsb
xchg
js
fadds
sub
ja
cmp
adc
push
stos
mov
xchg
out
and
add
ss
sub
imul
pop
pop
jns
cmp
xchg
ret
jle
mov
push
scas
xor
xchg
icebp
fwait
insl
mov
negb
mov
mov
mov
cmp
jbe
notb
repz
sub
add
cmp
cmp
cs
cmc
jo
add
mov
add
mov
xor
arpl
cli
push
aas
out
push
cmpsb
push
mov
mov
add
sahf
mov
xor
das
push
cmc
xor
ret
ret
jbe
cmp
cmp
xchg
cwtl
dec
clc
or
push
xor
inc
add
add
push
incb
mov
mov
imul
stc
or
mov
jl
push
aaa
inc
cmp
inc
mov
out
pop
sti
mov
push
jbe
jae
sub
jnp,pt
idiv
aaa
pop
pusha
mov
xor
idiv
sub
out
add
mov
sub
mov
inc
cmp
add
push
arpl
pop
add
cmp
mov
push
inc
mov
loopne
cmpsl
ja
dec
ficomps
mov
clc
push
fwait
jo
rolb
addr16
mov
mov
mov
mov
sbbb
inc
inc
cmp
add
inc
pop
mov
fiadds
mov
or
mov
sti
bound
pop
cmpsb
dec
mov
shrl
imulb
or
mov
mull
lds
in
jecxz
ds
movsb
cmpsl
ret
mov
ror
syscall
or
adc
or
repnz
add
fdiv
fstpt
inc
push
and
in
fwait
ljmp
mov
mov
sub
les
pop
std
std
adc
arpl
mov
ret
jbe
mov
mov
mov
pop
hlt
ss
xchg
out
pushf
in
jge
sbb
shrl
dec
inc
inc
and
aam
pop
ret
add
loopne
sub
movl
add
jecxz
xchg
push
mov
je
neg
xchg
mov
popa
ror
jmp
sbb
dec
xchg
fs
adc
xchg
data16
fildll
xchg
stc
sub
test
xchg
sbb
fmull
jp
mov
xchg
inc
test
mov
in
xchg
les
pop
orl
lret
in
sbb
adc
or
or
in
lds
lea
mov
push
jp
pop
int
aas
inc
nop
ja
imul
mov
bound
nop
jg
mov
inc
loop
fsubrl
inc
negl
test
ret
dec
jb
shll
push
iret
inc
gs
mov
movsl
and
inc
mov
in
jbe
jb
movsl
ljmp
xor
movsl
sub
repnz
cmc
xchg
orb
inc
out
push
scas
loope
gs
out
push
les
sub
leave
dec
int3
aaa
mov
pop
mov
nop
xchg
adc
inc
mov
out
mov
mov
out
popf
je
repnz
mov
or
push
push
mov
xor
cmp
ds
sub
sbb
adc
adc
mov
jo
iret
pop
jp
mov
in
and
pop
out
stc
add
ja
adc
adc
lret
imul
xor
mov
dec
dec
ljmp
add
cmp
fmull
movsb
jae
mov
and
ret
ja
mov
shll
test
out
jge
fimuls
inc
test
daa
ret
movsl
test
shrl
arpl
mov
sub
pop
ljmp
inc
cmp
mov
xor
pop
jg
inc
test
mov
sti
pop
and
shll
sbb
cltd
jl
aam
cld
fistpll
js
idiv
imul
rorb
pop
and
pop
mov
xchg
in
popa
rcrl
fisttpll
imul
jnp
mov
push
loopne
cmpsl
jp
jne
mov
mov
mov
shlb
push
mov
dec
or
fsubrl
inc
outsb
xchg
and
mov
ds
outsb
or
mov
push
inc
aas
cmpsb
cmc
sbb
pop
shl
xchg
mov
rolb
mov
outsb
xchg
rolb
pop
out
and
gs
cltd
push
pop
push
lock
push
or
dec
push
xchg
stos
pop
or
jnp
xlat
cmpsl
sub
inc
push
push
shlb
xchg
mov
in
mov
icebp
mov
ret
xor
inc
xor
or
inc
sub
iret
gs
fsubrl
inc
lcall
and
inc
mov
sub
push
pusha
iret
into
xor
enter
xchg
mov
mov
sub
fwait
inc
fbstp
or
jne
fidivs
rcr
dec
pop
sbb
js
inc
movsb
lods
xor
gs
daa
ja
xor
mov
mov
cmp
adc
nop
daa
xchg
xor
cli
mov
xlat
fsubrl
inc
and
fs
jae
xchg
mov
inc
inc
inc
inc
pusha
jmp
bt
rol
pusha
add
pushf
pushl
clc
mov
test
cmc
add
pushf
clc
test
pushf
movl
movl
pushf
lea
jne
pushf
jmp
xlat
es
lahf
mov
arpl
and
mov
mov
orb
xchg
or
pop
pop
rorl
inc
jbe
xchg
sub
and
loope
scas
add
and
cmc
cmp
dec
push
or
sub
jg
mov
mov
xchg
clc
iret
stc
push
xor
js
pop
inc
adc
mov
pop
xchg
inc
mov
addr16
xor
adc
outsl
sbb
sub
testl
imul
lea
sub
xor
push
cmp
sub
lcall
sti
sbbl
xor
aam
sub
and
cmp
mov
pop
or
adc
pop
push
std
jl
or
orb
cmp
rcll
mov
es
fsubrl
inc
repz
bswap
mov
pushf
pusha
mov
and
push
stc
bt
jmp
std
ret
shlb
or
add
dec
xchg
inc
sub
push
dec
mov
fisubs
bound
push
and
cli
mov
into
cmpsl
imul
testb
sub
mov
ret
jmp
ret
cwtl
rclb
call
movsl
das
negl
cmpsb
test
inc
cmc
cmpsb
cmp
mov
mov
es
sti
mov
xor
jle
lret
dec
leave
ret
jo
andb
ficoms
insl
push
lahf
xlat
lea
xchg
xor
push
rolb
dec
rcr
icebp
mov
daa
ljmp
aas
pop
jae
cmp
sub
idiv
mov
lds
or
and
aaa
push
fs
adc
cmpsb
or
push
insb
mov
pop
cmp
lahf
ret
out
mov
aam
lcall
rolb
sbb
out
daa
push
ret
push
movups
jge
mov
sub
or
add
or
pop
mov
pushf
adc
sbb
xchg
movsb
out
and
ret
addr16
mov
mov
cmp
pusha
cmpsb
sub
jae
mov
and
xor
cwtl
subb
jg
pop
ret
notl
mov
stos
aam
sbb
mov
adc
xchg
in
mov
iret
ret
lahf
loopne
js
cmpb
shr
or
clc
hlt
pop
ret
lahf
mov
add
adcb
cmpb
push
push
push
xchg
andb
pop
fadds
incl
ds
cmp
mov
mov
test
leave
xlat
out
cmp
pop
xor
xchg
sub
dec
popa
ret
test
mov
mov
test
mov
mov
and
rcr
ret
cli
fs
addr16
adc
xor
ret
mov
into
ret
int3
in
mov
or
std
xor
test
pop
es
loope
lahf
push
xchg
sbb
ret
mov
mov
inc
add
imul
imul
pushf
fcomps
subl
lret
pop
push
push
jmp
add
test
jae
lock
sub
in
ret
mov
adc
fs
iret
pop
mov
push
fdivrl
xchg
ret
pop
cmp
das
cmp
push
dec
lret
popa
xor
data16
mov
negb
pop
mov
jae
mov
add
cmc
aam
movsl
add
andl
jno
cmpsb
cmp
loopne
mov
cmpsl
fcmovb
movsl
movsl
ret
fcmovnbe
jmp
mov
ret
imul
cld
cmp
pop
ret
outsb
and
ret
rcrb
ret
push
jecxz
fisubs
push
mov
jb
cld
sub
ret
hlt
mov
je
loope
add
fucompp
shrb
popf
xorb
std
loopw
inc
adcb
or
movsb
pop
imul
mov
jno
inc
sarb
fdiv
ret
les
and
pop
cmp
mov
shrb
push
hlt
mov
gs
aas
mov
cmp
pop
dec
ret
mov
stc
inc
lcall
mov
lods
jae
mov
xor
mov
fstps
lods
out
jbe
imul
dec
fwait
insl
incb
adc
inc
mov
leave
mov
ds
lahf
xchg
fisubrl
orl
outsb
jl
in
fwait
gs
shr
add
or
shl
mov
ret
or
cltd
lods
add
adc
aam
addr16
les
subl
into
adc
rcll
sbb
add
push
aas
mov
or
push
repz
ret
pop
xchg
fdivrs
cs
jp
dec
daa
stc
test
jno
out
out
popa
ret
notl
cltd
pop
ret
or
add
scas
cmp
push
jmp
ret
pop
mov
mov
push
ret
fisttpll
fbld
shr
int3
push
or
pushf
int
push
push
ja
rolb
es
sbb
repnz
ret
sub
std
pop
cmpsb
cmc
ret
adc
and
push
arpl
js
add
cwtl
aas
stos
mov
sub
ret
in
add
pop
adc
int
mov
adc
repnz
ret
fs
inc
test
aad
push
mov
lods
in
jp
and
rorl
dec
repnz
mov
call
ret
mov
xor
ret
add
lahf
shrl
xchg
mov
insb
mov
bound
scas
mov
cmp
sbb
ret
or
daa
sbb
enter
aaa
sbb
stos
mov
inc
loopne
cmp
inc
jo
rorb
shl
jns
ret
rclb
mov
aas
inc
add
push
mov
inc
mov
in
mov
push
mov
inc
jb
ret
dec
call
push
sub
jecxz
imul
in
andl
outsl
test
xor
ret
insb
ret
pop
ficompl
push
ret
mov
dec
lock
ret
and
rorl
add
fwait
sarl
daa
jge
insl
ret
sub
push
push
cs
inc
clc
mov
outsb
ret
add
int3
pushf
ljmp
inc
cmp
scas
das
and
dec
dec
ret
push
ret
stos
pushf
aas
sahf
add
inc
mov
mov
ret
stos
addr16
lcall
popa
dec
mov
aaa
jae
pop
rolb
or
cmova
cmpsb
movsb
inc
lcall
pushf
stos
xchg
cmp
les
gs
xor
stos
lcall
in
inc
cld
mov
repnz
mov
mov
shl
fldenv
loopne
mov
jne
out
movl
cltd
jbe
fcmovb
cmp
imul
jp
stos
repnz
push
inc
loope
imul
pop
fs
test
dec
xchg
ret
popf
inc
rorb
mov
jnp
ret
and
repz
jne
pop
sarb
jg
stos
rol
mov
push
xchg
xor
fldt
loop
inc
ret
mov
arpl
stos
pushl
sub
ret
or
pop
ret
frstor
pushf
xchg
scas
inc
cmp
pop
inc
dec
loope
lods
cli
mov
mov
bound
mov
inc
je
and
cmp
ret
push
xor
inc
movsb
shlb
lahf
cs
ret
jbe
mov
mov
jle
cmp
iret
xchg
scas
orb
das
jle
cmp
into
xchg
stos
orb
sub
cmp
leave
xchg
test
mov
or
call
mov
push
jle
cmp
lret
xchg
stos
orb
sub
cmp
lret
addb
es
cmp
lds
gs
add
movsb
addb
jle
cmp
xchg
cmpsl
addb
daa
jle
cmp
push
jb
inc
mov
jle
cmp
add
mov
cmp
xchg
and
jbe
mov
inc
and
ret
cmp
cmpsl
nop
and
cmp
mov
ds
mov
std
cmp
mov
ds
mov
cld
cmp
mov
ds
mov
cmp
mov
ds
mov
cmp
mov
ds
mov
stc
cmp
mov
ds
xchg
nop
jo
scas
cmp
outsl
xchg
leave
subb
inc
mov
and
pop
xchg
popf
cmpb
push
jle
cmp
mov
nop
orb
call
out
roll
ret
sbb
sbb
clc
nop
mov
rcll
int3
mov
mov
data16
cmp
pop
mov
sbb
xchg
xchg
mov
outsb
lods
mov
movsl
mov
cld
xchg
pop
sbb
mov
jle
cmp
iret
sub
out
loopne
lds
js
mov
idivb
shrb
ds
mov
cmpl
xchg
cltd
sbbb
mov
outsb
cmp
mov
daa
cmp
pop
jle
cmp
xor
adc
das
cmp
cmpsb
xchg
test
ds
jle
cmp
xor
into
mov
les
out
push
cmpb
mov
push
cmp
rclb
cld
mov
push
hlt
stc
xchg
xor
lret
lcall
fcomps
xor
sbb
aam
aas
int
push
je
push
pop
leave
push
stos
mov
cmp
gs
ja
fs
cmp
mov
daa
and
aam
test
jbe
les
xor
and
xchg
push
xchg
ss
xor
popf
xchg
hlt
mov
jmp
aam
mov
inc
pop
adc
push
dec
jmp
xor
pop
jl
hlt
inc
rclb
xchg
jge
test
shll
mov
adcb
repz
nop
xor
xlat
add
push
mov
mov
mov
cmp
sbb
ja
mov
movsb
cli
ret
lcall
pop
gs
push
sbb
ss
cmp
cmp
push
es
jbe,pn
mov
mov
dec
ss
sbbl
cmpsb
and
pop
aaa
xchg
jg
clc
aam
sub
or
notb
enter
dec
xorl
fwait
sbb
mov
xchg
jp
xchg
cmp
mov
xchg
pop
mov
loope
lods
aam
imul
pop
pop
sti
lcall
cmpsl
add
push
add
add
mov
cs
stc
pop
xchg
push
pop
stc
movsl
dec
aad
adcl
sub
dec
jp
jns
xchg
adc
xchg
adc
aaa
sti
jne
jae
mov
dec
dec
cmp
xor
jle
js
mov
xor
add
dec
cmp
sbb
bound
aam
popf
pop
inc
push
clc
jle
shlb
aam
addb
dec
cli
inc
jp
jg
sbb
repnz
pop
sbbb
cmp
sub
pop
push
mov
or
dec
cltd
outsl
add
ret
mov
or
xchg
imull
stos
orl
call
or
lret
adc
popf
std
xor
cltd
push
adc
hlt
cmc
aam
loopne
cmc
xor
jmp
cwtl
stos
in
sbbl
lods
jne
adc
xor
and
divl
cmp
mov
sbb
rcrl
gs
mov
js
nop
aad
lahf
iret
pop
cmp
jno
cmp
and
pop
loope
xchg
xchg
add
daa
cmp
int
xchg
scas
loopne
add
subl
stos
and
cmp
mov
push
or
orb
ss
mov
inc
fidivrs
mov
dec
testl
inc
inc
mov
push
adc
sbb
loopne
add
inc
inc
pop
sbb
adc
or
and
inc
sarb
xchg
lcall
jno
std
or
mov
out
jp
test
gs
scas
mov
mov
rclb
pushf
mov
and
and
lea
mov
sub
jge
mov
pushf
or
sbb
sahf
mov
aaa
popf
inc
bound
and
mov
popf
mov
sahf
cli
mov
aaa
sbb
aaa
pop
aas
subl
insb
lods
push
cmpb
mov
mov
mov
mov
push
mov
shlb
jmp
mov
mov
stc
loope
add
mov
loope
faddp
sahf
popa
xchg
loopne
cmpsb
cmpsl
ss
pop
cmp
mov
fsubr
into
fdivrp
fs
xchg
test
cmp
push
fucomip
stos
inc
sbb
enter
outsl
dec
add
call
lahf
sbbb
movsb
pop
mov
jl
clc
mov
add
push
mov
popf
mov
lcall
mov
xchg
mov
cwtl
aas
mov
nop
mov
sbb
mov
cltd
xchg
mov
inc
scas
cmp
or
mov
fbstp
sub
fwait
mov
lahf
jmp
jmp
xchg
xor
mov
mov
add
test
pop
nop
pushf
mov
ds
mov
sub
sub
in
and
stos
and
pop
inc
mov
push
pushf
cmp
sbb
inc
into
rcr
ja
fdiv
jle
ljmp
cs
popl
cmp
push
stc
call
lahf
imul
pop
pop
mov
insb
mov
mov
jp
sub
fistpll
or
iret
inc
ficoml
mov
mov
pop
pop
test
lahf
dec
add
inc
movsl
sbb
add
js
imul
mov
mov
mov
cltd
mov
lods
mov
pop
roll
mov
mov
cmp
shrl
lods
testb
pop
xor
rolb
cmp
and
cltd
cmpsb
int3
jge
xchg
adc
roll
add
cltd
mov
frstor
inc
xor
aaa
lods
adc
mov
out
mov
iret
lock
shlb
mov
push
movsb
add
ret
or
mov
xchg
loopne
xor
mov
lods
into
imul
inc
push
pop
mov
cmpsb
shll
sub
pop
inc
mov
in
sub
fdivrl
sahf
mov
insb
inc
jecxz
inc
and
jecxz
inc
fs
cmpsl
push
xor
and
xor
push
sub
mov
cmpsb
sbb
aam
adc
fmull
add
pop
es
shlb
inc
mov
pop
mov
adc
xor
test
sahf
rcrl
iret
jmp
test
jns
scas
jns
xchg
cmp
mov
push
add
xor
aam
lock
lods
adc
pusha
outsl
enter
aam
jbe
loop
xchg
sub
fildl
mov
inc
test
inc
push
repnz
ret
imul
mov
cmpsb
or
gs
lea
je
hlt
push
cmp
addr16
cli
xchg
mov
cli
sti
inc
mov
shrb
movsb
mov
add
xorb
mov
mov
xor
mov
pop
adc
xchg
lcall
push
mov
push
mov
mov
pop
aam
adc
and
sbb
mov
jg
fildl
cltd
clc
cmp
int3
pop
mov
pop
jl
push
ss
xor
jg
adc
jae
jecxz
adc
cs
mov
pop
mov
cmp
daa
je
sbb
mov
xor
and
pop
mov
stc
cmpsl
fistpl
sbb
xchg
xor
xor
push
push
lods
xchg
mov
add
pop
shrb
mov
outsl
fwait
mull
pop
and
xchg
je
pop
push
nop
fldenv
pop
sti
mov
mov
mov
pushf
hlt
pushf
push
aam
fsubl
sbb
mov
fsubl
fdivrp
lods
cmp
aad
push
jecxz
aam
xor
xchg
inc
stos
cmp
xchg
notl
push
ljmp
shll
test
pushl
and
cld
mov
jmp
sbb
call
adc
fsubrs
sbb
aas
int3
push
cmp
sar
xchg
js
hlt
js
fistpl
mov
cmp
xor
jl
fdivrs
jns
aaa
int3
xor
andb
cmp
stc
fistl
mov
pop
arpl
push
lcall
sbb
rcrl
mull
pop
test
and
push
nop
mov
pushf
cmpsb
push
fildl
inc
push
sub
fdivl
adc
pop
mov
mov
mov
or
shl
cs
pop
push
mov
js
jle
pop
sbb
das
cltd
dec
fs
lahf
mov
hlt
test
ret
or
add
xchg
cld
add
dec
std
inc
aad
sbb
adc
xor
sbb
and
xor
push
cltd
cmpsl
mov
add
mov
cmpb
sbb
cmc
insl
movsb
mov
inc
into
sub
sbb
lock
pop
fwait
jp
sbb
sbb
pop
mov
pop
call
fdivrp
jp
sub
jge
enter
push
ret
pop
lahf
sbb
adc
xchg
pushf
inc
dec
mov
aam
pop
ljmp
jnp
cmp
adc
push
int3
jnp
push
jp
leave
out
stos
in
add
enter
sbb
sahf
filds
pop
inc
sahf
lcall
pop
jp
jl
pop
sub
ss
iret
ret
pop
ss
iret
mov
sbb
add
fbld
pushf
lcall
mov
mov
adcl
mov
pushf
lds
scas
or
and
jo
lods
leave
mov
sbb
popf
sbb
int3
sbbl
aad
imul
cmpl
adc
loopne
xor
pop
adc
addr16
inc
jge
scas
push
cmp
push
sbbl
mov
or
daa
adc
hlt
gs
lret
adc
push
ss
hlt
pop
outsl
cmp
loop
mov
cli
aas
push
int3
cwtl
jo
gs
notl
aaa
inc
cmp
push
pop
xchg
xor
xchg
adc
aas
in
std
stc
dec
imul
mov
loope
mov
cmc
xchg
pop
push
sbb
xor
aam
push
add
hlt
adc
inc
jp
sbb
jecxz
xchg
icebp
cli
mov
adc
stos
jmp
repnz
sti
aad
pslld
cmp
mov
sahf
mov
add
xchg
push
adc
dec
push
cli
mov
jp
fcomps
pop
or
push
nop
mov
notl
mov
aad
aas
aas
dec
and
xchg
jg
sbb
add
mov
ss
jo
mov
std
fsubl
mov
aad
mov
xor
xchg
xchg
push
aas
ljmp
pop
fidivrl
js
xchg
mov
dec
mov
mov
lds
pop
das
fldcw
push
outsl
out
adc
js
pop
pop
idiv
lahf
pop
pop
sbb
decb
mov
cmp
ja
push
pop
mov
ss
adc
mov
std
xchg
dec
fs
cli
ljmp
mulb
push
dec
insb
insl
and
push
mov
dec
mov
dec
adc
in
ss
les
aaa
outsb
lods
fistps
test
xor
not
xchg
or
push
adc
out
mul
push
sbb
fstpt
rclb
push
or
pop
adc
pop
mov
stos
pushf
sbb
lahf
stc
sbb
cwtl
ror
loop
jl
pop
idivl
pushf
mov
inc
push
mov
xlat
xchg
or
cmp
or
jecxz
dec
mov
sbb
and
adc
adc
sbb
inc
mov
xchg
rclb
push
movsl
in
cltd
enter
shl
incl
inc
adc
or
ret
jle
bound
sbb
insl
mov
cld
push
push
shr
mov
mov
mov
xor
mov
and
lock
hlt
pop
lods
lods
hlt
rcr
mov
inc
xchg
push
add
jl
jecxz
sahf
xor
or
sbb
orl
cltd
cmp
enter
lock
pop
sub
cmp
pop
sbb
test
stos
push
mov
lea
mov
fdivrs
xchg
fstpl
add
int3
shlb
pushf
mov
and
cmp
loop
jle
mov
pop
popa
jp
inc
sbbb
mov
pop
sub
sbb
lcall
hlt
mov
aam
cmp
lds
xchg
cmp
push
cmpsl
loope
mov
iret
lcall
ret
fs
ja
stc
pushf
ret
push
dec
outsb
mov
and
clc
loopne
into
insl
xor
das
and
cld
pop
xorb
cmc
push
cmp
xlat
repnz
cmp
out
rcrb
jno
std
jge
push
enter
mov
pop
jp
popf
fidivrs
xor
shrl
clc
pop
push
cmp
sub
bound
mov
mov
add
mov
lahf
xor
add
imul
lcall
push
xlat
pop
cmc
sarb
imul
rcl
sbb
fistpll
cmp
stc
mov
imul
out
pop
movsl
or
and
cmpsl
test
out
outsl
inc
sub
dec
inc
out
pushf
sbbl
inc
jp
jl
and
xchg
daa
mov
and
mov
gs
scas
aas
inc
stc
sbb
jge
sbb
lds
sub
data16
mov
dec
lcall
sar
inc
rcrl
jle
mov
inc
cmp
mov
pop
xchg
in
dec
lahf
mov
cmpb
roll
inc
rcll
shrl
lret
push
scas
xorb
test
mov
ret
mov
fnsave
pop
mov
clc
mov
pop
mov
cli
mov
xchg
mov
adc
pop
push
jb
push
pop
sub
lcall
pop
pop
stos
sub
sub
or
stos
cmpsb
mov
fxch
mov
mov
cmp
pop
test
cs
sub
jg
es
lods
test
sub
mov
sub
data16
into
aas
fwait
jo
xor
pop
inc
lds
xlat
push
mov
sub
xchg
xchg
add
adc
adcb
mov
call
daa
outsl
add
adc
sbb
lret
xor
push
xorb
repz
pop
pushf
xchg
add
std
push
mov
or
and
mov
hlt
cmp
or
fcoms
idivb
cmpsb
pop
aad
jne
jmp
push
cmp
sub
sub
mov
push
int
iretw
mov
sub
and
dec
add
outsl
mov
inc
lods
mov
lret
inc
jno
iret
leave
mov
add
bound
jmp
pop
dec
lea
dec
mov
adc
mov
call
sub
dec
mov
into
lods
ds
test
sub
push
or
imul
loop
cmpsb
push
ljmp
stc
shr
jp
mov
cmp
dec
inc
sub
test
and
test
xor
push
icebp
jp
shrb
imul
jg
test
sbb
or
fucomip
push
loopne
pop
sub
dec
int
in
mov
dec
in
inc
mov
mov
nop
shrb
inc
mov
add
popl
mov
ds
and
lods
add
jns
in
out
int3
out
cmp
shlb
cmova
test
std
mov
dec
or
ljmp
or
jp
jbe
lret
ja
pop
test
mov
mov
das
lods
dec
sub
mov
lock
cli
mov
lret
cmp
loope
sub
inc
sbb
cmp
popf
xchg
loopne
dec
repnz
shr
out
mov
imul
mov
or
xor
mov
insl
iret
outsb
inc
std
sub
lret
enter
dec
pop
arpl
es
jle
mov
orb
or
mov
lahf
jp
mov
mov
loope
push
or
insl
das
jp
cmpsl
fstps
xor
mov
loop
in
and
test
cs
out
sub
cmpsl
add
cmp
pusha
xor
nop
lock
jle
pop
pop
add
jl
enter
mov
cmp
xor
pop
mov
mov
dec
adc
dec
lahf
mov
push
xor
push
add
mov
aaa
xor
xor
inc
test
cld
xchg
loopne
loop
push
arpl
inc
sbb
inc
imul
in
jmp
sbbb
ja
cmpsb
js
test
jg
fdivr
sar
pop
stc
xor
xchg
push
sbb
into
aam
pop
ss
cmp
cmp
bound
inc
daa
pop
outsb
cld
frstpm(287
pop
sbb
cli
adc
push
sbb
inc
pop
mov
imul
testl
popf
cld
cltd
push
pop
sbb
and
cmc
je
sbbb
xor
mov
stc
add
sub
pop
jbe
jp
push
adc
int
pop
and
aas
jno
ss
xor
push
mov
adc
mov
push
pushf
rcll
sub
stc
sbbb
mov
pop
lret
cmp
inc
lret
jl
pop
sbb
cli
sub
clc
cmp
cmp
ds
stos
add
ret
add
mov
shll
jmp
cmp
or
cmp
pop
mov
scas
sub
fidivrl
dec
sub
test
js
pop
inc
das
xorl
cmp
mov
clc
xchg
fidivl
cmp
lahf
aas
adc
pusha
mov
mov
jo
mov
rcll
push
xlat
popf
into
rol
mov
jbe
mov
mov
rclb
jb
xorb
and
cs
mov
pusha
nop
sarl
mov
rclb
aad
loopne
faddl
xchg
mov
sub
shrl
movsb
rolb
sub
in
mov
lods
cmp
mov
mov
das
jg
out
add
sarl
vpmacssdql
mov
loope
xorl
test
sbb
loope
mov
inc
iret
lods
repnz
push
cmp
adc
ficoml
cmp
pop
add
sub
adcb
jge
push
es
out
pop
jne
mov
out
outsb
lahf
movsb
mov
cmp
pop
mov
adc
xchg
vpsrlw
pop
loope
loope
loopne
mov
stos
es
es
cmp
mov
mov
add
cltd
adc
and
int
mov
lret
das
cmpsb
push
negb
add
call
inc
dec
lods
and
adc
iret
ficompl
mov
jecxz
or
add
sahf
cmp
lret
jg
adc
push
jb
mov
xchg
lcall
mov
imul
adc
fnsave
sbb
out
cmp
xchg
ljmp
into
sbb
fnstcw
fnstsw
adc
rcll
sbb
out
push
mov
cmp
loope
mov
mov
mov
ret
mov
mov
mov
inc
add
mov
mov
test
cmp
sub
xor
xchg
dec
subb
mov
and
jbe
mov
std
cmp
inc
mov
fwait
jge
xchg
cmp
int
cwtl
cld
mov
in
mov
pushf
xchg
out
mov
pop
mov
sbb
mov
iret
imul
inc
sub
pop
mov
add
xor
cwtl
outsb
add
mov
inc
test
jno
sarb
mov
jne
push
stc
mov
popa
mov
xchg
icebp
arpl
inc
test
inc
popa
sub
add
shrl
roll
movsl
jle
roll
ret
bound
mov
popf
addb
fldl
pop
and
xchg
add
shll
xchg
shlb
bound
shrl
cmpsl
inc
dec
sarl
andl
inc
addl
add
rcrb
mov
mov
hlt
lcall
mov
jno
mov
cs
rol
mov
pusha
imul
mov
sarb
aad
test
call
iret
ret
xchg
and
inc
pop
rol
and
cmpsb
rcrl
je
add
jno
jle
mov
sahf
pop
inc
jecxz
mov
mov
fildl
cld
mov
test
stos
xor
aaa
jle
and
addb
mov
mov
aaa
xchg
loop
pop
icebp
sbb
loope
xor
enter
aaa
sub
and
push
loope
hlt
mov
mov
jns
mov
or
mov
jg
sar
xor
xor
ds
ss
fbstp
arpl
and
add
out
cmpsl
jle
push
test
popf
adc
push
cmp
dec
movsb
cmpsl
cli
decb
add
sti
lods
movsl
push
ficoms
and
mov
lret
cmpsl
sbb
je
loopne
mov
push
loopne
adc
jo
mov
inc
std
jo
adc
leave
mov
rol
popa
fsubrl
std
mov
sub
cmp
inc
cmpsb
xor
out
push
ret
ja
shll
aaa
inc
pushf
adc
mov
mov
jp
shlb
xlat
xor
mov
call
ds
jl
shlb
inc
nop
xor
shrb
xor
loop
cmpsl
mov
mov
es
out
mov
add
mov
lods
mov
fwait
call
mov
and
xchg
push
aaa
cmpsl
mov
pop
adc
aas
outsb
test
loop
or
and
scas
mov
jle
xor
mov
pop
cmc
stos
nop
xor
xchg
sahf
mov
lods
loop
xchg
mov
pop
xor
mov
mov
mov
shl
push
mov
jae
leave
stos
insl
add
xchg
test
rcrl
clc
or
xchg
mov
mov
cmpsb
and
mov
push
mov
mov
es
cmpsb
lcall
mov
pushf
mov
lods
push
iret
xor
fdivl
jns
xchg
lret
mov
sub
inc
or
scas
mov
aaa
ljmp
mov
inc
cmp
adc
pop
jbe
mov
sbb
xchg
mov
lock
clc
jo
sbb
mov
cmpsl
inc
sub
fildll
push
xor
mov
call
stc
int3
mov
push
sbb
xlat
test
inc
inc
fbld
or
inc
addr16
lret
xchg
mov
leave
les
dec
ret
fistpll
lock
jge
scas
mov
loope
xchg
mov
pop
mull
inc
sub
mov
mov
aaa
pop
xchg
cmp
lcall
icebp
mov
push
inc
push
stos
ret
pop
int3
mov
mov
es
inc
inc
adc
movsl
push
mov
loop
inc
rorb
shll
xor
mov
scas
mov
ficoms
mov
fldcw
cmp
ret
adc
or
fisubrl
cmp
xor
cltd
sbb
jne
loope
xor
push
imul
daa
xorl
leave
mov
lods
loope
mov
xor
mov
xor
mov
sti
or
mov
cld
jae
rcr
ljmp
fdivl
ret
fbld
sarb
xchg
stos
jbe
aaa
nop
ret
inc
inc
cmp
popf
jbe
rcrl
mov
inc
daa
jp
dec
cmp
lar
dec
add
lock
test
jle
xchg
nop
inc
jmp
mov
xchg
ret
loop
push
scas
cmp
scas
fnsave
dec
test
sbb
imul
ret
mov
sti
sarb
aaa
mov
cmp
ret
push
inc
cmpsl
pop
in
stos
mov
rorl
stc
cmp
ljmp
cltd
movsl
outsb
mov
shr
arpl
fs
xchg
jae
lods
shll
mov
cmpsl
inc
mov
cmpsb
mov
ds
pushf
fsubrs
cmpb
fimuls
and
push
daa
inc
mov
dec
pushf
scas
loop
lcall
aaa
enter
cmpsl
std
push
jmp
cwtl
or
rol
mov
mov
shl
xchg
xor
xor
push
jmp
sbb
mov
push
mov
or
cmpsl
ljmp
sbb
ds
scas
inc
mov
insb
mov
mov
mov
adc
test
lods
das
jl
push
mov
xchg
xor
scas
and
push
lods
mov
fbstp
popa
clc
dec
bound
lret
in
scas
sbbl
inc
jecxz
movsl
std
fbstp
push
adc
pushf
mov
xchg
or
fcoml
in
sub
nop
mov
jae
scas
mov
cs
inc
daa
ret
adc
jbe
stos
add
ret
and
push
xchg
mov
aad
mov
lods
lods
cmpsl
mov
jecxz
xor
cld
icebp
pusha
sarb
popa
add
int3
xor
mov
and
push
push
mov
sar
rorb
cli
jbe
sarb
mov
and
fimull
mov
popa
rcrb
loopne
sahf
fcmovnbe
dec
pop
xchg
inc
cs
xchg
loopne,pn
mov
jle
adc
add
mov
xchg
scas
and
popf
ja
test
mov
inc
mov
mov
inc
pop
push
out
mov
adc
loop
lret
cmpsl
cltd
push
mov
pop
push
mov
xor
xor
adc
inc
fistpl
mov
inc
stc
push
stos
std
mov
ret
jp
mov
mov
movsb
mov
ds
xor
inc
pushf
icebp
inc
shl
mov
xchg
mov
adc
stos
fbstp
sub
jl
inc
add
dec
ret
in
movsl
jg
jl
movsb
lods
mov
mov
jle
stos
test
mov
mov
andl
iret
sub
aas
mov
xchg
mov
addb
das
mov
xchg
or
and
test
mov
aaa
xorl
mov
adc
scas
ja
jb
jg
push
xor
pushf
movsb
lock
imul
mov
scas
xor
mov
mov
cmpsb
ss
mov
pushf
adc
mov
mov
mov
lret
jle
fnsave
mov
jns
ret
xchg
stos
stos
mov
xorb
push
mov
cmpsl
lret
insb
inc
repz
mov
sub
test
or
mov
push
mov
mov
xor
mov
pop
adc
cld
shll
ds
mov
jge
jp
mov
ds
jle,pt
mov
jecxz
sub
xor
mov
mov
push
enter
mov
les
clc
out
xchg
mov
jo
sbb
mov
inc
cld
jmp
jno
test
inc
dec
gs
stos
aaa
dec
lods
pop
dec
mov
outsb
sub
jl
and
nop
mov
ds
jb
add
inc
cmp
mov
sahf
adc
inc
cwtl
iret
ret
stos
and
xorl
pop
mov
and
mov
jg
cmp
pusha
ficoms
ret
xchg
mov
inc
xor
push
mov
inc
xchg
mov
stc
lea
adc
mov
ja
fst
scas
mov
arpl
or
pop
mov
fsubp
shl
and
scas
imul
pusha
adc
sarb
out
mov
in
shrl
aas
shll
cs
or
mov
sti
stos
scas
cmp
add
mov
mov
aas
cmp
pop
jo
add
xor
inc
loope
inc
mov
and
xor
scas
shlb
mov
andb
xchg
xor
lea
ret
mov
sahf
jno
mov
push
stc
and
ss
pop
sub
aas
sbb
jmp
std
cltd
sarb
fisubrs
mov
mov
cmp
inc
push
loope
stc
ret
test
mov
inc
out
mov
ret
inc
arpl
daa
cmp
add
scas
xchg
xor
lcall
and
mov
xchg
cmp
aaa
mov
cmpb
out
icebp
add
and
mov
cmpb
pushf
jl
movsb
sbb
jp
xor
inc
ret
add
jmp
outsb
cmpsl
mov
sbb
xor
mov
arpl
xchg
fbstp
mov
stos
xor
dec
mov
jle
out
movsb
mov
cmp
inc
ret
push
lret
out
scas
mov
scas
lods
ds
or
mov
add
es
repz
cmp
mov
and
xor
aaa
mov
xchg
sbb
mov
mov
daa
cmpl
mov
xor
bound
das
rol
or
aam
rcll
scas
cli
mov
push
mov
mov
push
movsb
loop
jbe
inc
std
mov
das
ret
ret
roll
loope
ret
loop
shrl
mov
jb
fcoml
cmp
xchg
into
cmpsb
in
xchg
ret
lods
std
cmp
popf
adc
jecxz
stc
mov
xchg
shll
push
or
mov
xchg
mov
mov
stos
mov
aaa
mov
jp
xchg
sub
lods
xor
ret
cmp
and
mov
add
scas
stos
mov
fists
lahf
ret
mov
mov
mov
lahf
pusha
loopne
push
xor
dec
ret
inc
das
mov
xor
and
clc
inc
addl
jbe
cmpb
inc
addb
sub
sti
xor
sbb
jl
mov
and
es
cltd
sarb
mov
cmpb
das
pop
shrl
inc
adc
inc
imul
jecxz
xor
sbbb
sub
loopne
mov
xor
mov
popf
inc
fldl
pop
test
push
movsb
mov
loope
inc
dec
aaa
adc
mov
mov
add
mov
mov
bound
popf
mov
addb
pop
mov
mov
xchg
mov
cmp
mov
or
loope
andb
add
mov
roll
sbbb
mov
pop
ss
rol
arpl
cmpsb
mov
aaa
mov
and
push
lds
loope
in
xchg
clc
mov
leave
lcallw
fldcw
out
rcll
movsb
mov
cmp
pop
dec
iret
mov
xchg
aaa
shlb
mov
es
mov
add
in
xor
xchg
xor
xchg
popa
daa
fisubs
bound
andl
sarl
fidivrs
mov
add
jne
inc
out
pop
mov
fcomi
and
and
jp
add
add
repnz
cmp
ds
mov
mov
xchg
cmp
xor
add
cmp
imul
mov
mov
xlat
sbb
add
dec
bound
fnstsw
jmp
jns
test
aaa
sub
mov
or
xor
ret
mov
shl
inc
lds
movsl
pop
jnp
mov
inc
movsl
push
push
or
addr16
data16
xchg
xchg
mov
xor
shrb
bound
ret
sub
or
nop
fwait
mov
fildll
shrb
push
xchg
ja
inc
ljmp
adc
ret
dec
push
inc
fimuls
popa
xor
sbb
ljmp
rcll
js
mov
dec
jb
mov
test
scas
sarl
andb
xchg
mov
cmpb
mov
aad
popf
pop
scas
mov
mov
cmp
das
mov
mov
rolb
cmpsb
or
js
sbbb
push
test
or
stos
pop
xchg
jg
call
mov
sti
loopne,pt
cmp
inc
and
stos
les
sbb
cmp
sub
dec
mov
sarl
bound
cmp
outsw
scas
addb
test
stos
pop
push
dec
xchg
xchg
jge
mov
jb
push
ds
mov
fs
mov
jo
rorl
mov
jo
inc
mov
fisubrl
adc
imul
sarb
cmpsb
out
lods
cs
repnz
mov
jno
xchg
ret
lock
jle
inc
cli
xchg
clc
mov
jne
scas
sub
jns
clc
add
sar
outsb
cmp
mov
test
sub
aas
mov
popf
or
xchg
int3
mov
lea
pop
xor
inc
xor
shll
and
mov
bound
cmp
mov
mov
aad
xchg
sub
outsl
dec
cmp
and
lods
mov
or
iret
cmp
cs
int
lea
sub
ret
push
xor
repnz
mov
xor
lock
xor
repz
mov
jb
ret
icebp
rcr
mov
jno
fcompl
stos
les
mov
push
aaa
pop
mov
push
ss
cmc
aad
xchg
ret
xor
pop
ret
sti
fstpt
fildl
cli
fidivl
fnstcw
cmp
clc
fdivrs
rol
pop
aas
pop
jecxz
mov
jge
cmp
or
shr
loop
mov
mov
std
fnstsw
test
cmpsb
cmp
ret
andl
rol
mov
inc
and
xor
mov
sub
mov
repz
sbb
cmp
loope
xlat
mov
ss
imull
xor
arpl
outsl
sub
inc
aad
jmp
pop
stc
mov
dec
inc
loope
fnclex
stos
lds
ret
shlb
and
in
loope
pusha
dec
lods
das
sahf
mov
sahf
mov
mov
xchg
in
notb
jmp
xor
push
cmpsb
mov
out
not
aam
jnp
mov
lock
fcmovbe
rol
mov
rclb
dec
pop
pushf
into
aaa
sub
rol
inc
dec
xor
sahf
pusha
xlat
cmpsb
inc
mov
loope
pushf
pop
push
mov
loope
sub
pop
cmpb
sub
xor
push
test
add
sarl
lock
aad
inc
mov
jp
add
lods
and
shlb
test
dec
in
push
jmp
shll
mov
mov
cmc
movsb
xor
adc
dec
pop
push
shl
lahf
mov
mov
sub
ss
mov
lods
or
jo
pusha
pusha
pop
inc
xchg
push
mov
ss
icebp
push
shlb
shrl
les
in
loopne
inc
sub
sarb
movsb
loopne
cltd
lock
mov
daa
mov
fisubs
loopne
pusha
and
push
jl
push
fs
cmp
sarl
mov
mov
cmpsl
repnz
pop
shl
and
mov
dec
add
adc
cmpsb
add
push
mov
pop
int3
inc
inc
test
jbe
jbe
rcll
mov
dec
test
addb
and
and
pop
add
push
inc
mov
fdivrl
sbb
mov
fwait
stos
dec
mov
jae
jns
jg
mov
sub
adcl
rol
mov
inc
push
xchg
pushf
lahf
and
dec
push
test
and
lahf
sarb
push
in
mov
out
inc
rol
push
fs
bound
and
jnp
inc
sarl
roll
xor
mov
add
adc
adc
and
jae
sbb
sub
jae
inc
sbb
xchg
mov
rorl
adcb
push
mov
fidivrs
xlat
jecxz
push
and
outsl
aas
daa
jp
pop
pop
xchg
sarl
add
das
jo
push
mov
imul
ret
sbb
xchg
sub
mov
lret
mov
les
mov
rol
inc
mov
sub
aaa
mov
mov
clc
pop
bound
bound
adc
mov
xchg
inc
mov
ss
mov
or
aas
xor
das
add
jl
outsb
ljmp
sbb
ficompl
pop
call
orb
stos
idiv
add
ret
jle
mov
push
cmc
jecxz
imul
cltd
rclb
mov
movsb
dec
out
outsl
cmpsb
xchg
jno
enter
andl
jae
ss
add
mov
lds
xlat
mov
or
xor
hlt
and
mov
mov
sti
mov
in
mov
fidivl
ret
fdivl
addr16
arpl
repnz
add
mov
mov
mov
pop
pop
nop
adc
xchg
xchg
push
mov
test
mov
adc
and
mov
sbb
pop
mov
cmpsl
inc
aam
add
pop
xor
cmpsb
outsl
jbe
insl
mov
std
ljmp
loop
cmp
inc
insl
sti
push
jnp
cmpsb
and
inc
pop
shlb
shrl
sbb
mov
pinsrw
out
pop
xchg
cmpsl
xchg
mov
or
lods
cmp
cwtl
xchg
xor
push
cpuid
xchg
inc
jno
enter
data16
add
dec
dec
dec
xor
jb
sub
inc
movsb
inc
add
cmp
aas
add
and
pop
xchg
outsl
sbb
and
lods
ret
or
add
hlt
mov
fs
mov
and
arpl
shl
mov
nop
adc
and
cmp
mov
cld
mov
mov
jne
mov
xor
mov
lds
inc
sbbb
mov
jbe
lds
mov
into
mov
cmpl
mov
sub
out
jl
mov
cmp
mov
loopne
jle
inc
movsb
movsl
pop
ret
pop
js
sahf
pop
and
sbb
inc
cmpsb
cmp
test
inc
rcr
and
jle
push
mov
addr16
and
push
mov
sbb
loop
mov
lods
fcomp
pop
pusha
lock
fwait
clc
stc
mov
jb
loop
pop
mov
mov
push
mov
cltd
mov
mov
push
mov
sahf
push
mov
scas
into
popf
loop
cltd
sti
ret
sahf
jns
aaa
mov
jp
jb
ret
or
add
pop
add
loopne
in
cmpsb
dec
jecxz
mov
jnp
jmp
pop
pushfw
ret
sbb
xchg
loope
dec
icebp
stos
fidivs
add
mov
or
mov
add
aas
lcall
jmp
push
mov
xchg
add
inc
or
push
and
cld
pop
push
pusha
aad
jb
mov
cmp
pushf
push
cmp
outsl
mov
push
ficomps
gs
adc
insb
and
pop
loopne
ds
int
lea
mov
jo
das
cwtl
dec
or
leave
xchg
jb
push
mov
hlt
loop
dec
mov
push
inc
add
out
das
test
pop
mov
inc
mov
mov
cwtl
in
bound
pop
lret
sbb
jge
rcr
pop
mov
mov
and
fstl
adc
stos
xchg
ljmp
inc
xchg
mov
or
ret
repz
mov
ds
xchg
pop
xor
add
pop
ficoms
sub
or
aam
cmpsb
xor
cltd
mov
mov
cmpsl
jne
add
shll
push
add
pushf
dec
scas
push
cmp
data16
mov
lds
cld
mov
sarl
add
ljmp
pusha
hlt
mov
and
add
cmp
xlat
ret
shl
mov
lds
call
shll
test
mov
sub
and
ret
subb
mov
and
xor
scas
or
mov
std
sub
pop
loope
sbb
xchg
mov
mov
sbb
into
and
cmp
add
sahf
adc
leave
sbb
jmp
mov
popa
shrl
cmc
aaa
ret
ds
add
mov
scas
mov
push
pusha
lods
pop
cmp
pop
pusha
lcall
mov
add
jnp
mov
cmp
ret
jp
mov
out
jp
cmpsl
aam
push
fistpl
lock
faddl
mov
mov
pop
es
ret
jno
pop
ds
adcl
ret
lahf
dec
sbb
xchg
and
insb
fxam
mov
movsb
aam
and
add
jnp
mov
ret
js
pop
shlb
cli
fs
scas
pop
mov
cmp
ret
jl
pop
dec
pop
fnstenv
popa
mov
lret
into
test
scas
cmp
andl
fisttpll
or
jle
and
jbe
addr16
call
or
nop
mov
hlt
addb
pop
in
cs
mov
mull
mov
mov
dec
mov
lods
out
lods
push
and
mov
add
mov
das
aaa
mov
outsl
pop
or
jns
fs
roll
fistpl
xor
cld
mov
das
pop
addb
bound
mov
push
xchg
lods
cwtl
lcall
mov
pop
inc
sarl
mov
stc
pop
mov
jmp
mov
push
pop
lods
cmp
lods
aas
dec
stos
xchg
jno
int
mov
scas
movsl
jmp
xchg
sbb
into
insl
jmp
int3
add
mov
jecxz
pop
dec
inc
mov
adc
cld
or
pushf
push
std
test
es
call
sub
dec
ret
fs
mov
das
insb
cmp
pusha
sub
mov
sub
inc
das
push
into
scas
xchg
es
out
stos
iret
mov
popf
shrl
popa
div
jb
inc
leave
cmp
cwtl
xchg
inc
add
int3
cmpsl
xchg
add
enter
and
xchg
mov
insb
stos
jmp
add
xchg
movsl
dec
addr16
ljmp
push
sbb
sbb
movsl
push
scas
jecxz
shlb
call
lret
shld
inc
leave
push
xchg
das
popf
inc
shr
outsl
inc
dec
lods
out
ds
inc
or
in
sub
inc
mov
mov
ljmp
dec
mov
test
sub
test
pop
por
mov
mov
imul
and
jmp
inc
xor
addb
mov
ror
or
lods
outsb
scas
xor
inc
mov
jp
cmpb
mov
inc
inc
or
sbb
imul
sub
call
cmp
mov
mov
jl
andb
and
cmp
xchg
icebp
mov
in
test
lock
flds
inc
pop
sti
xlat
dec
push
xor
movsl
cmp
mov
mov
out
jecxz
push
xor
mov
mov
add
fisttps
cli
xorl
push
inc
mov
ret
or
sahf
dec
loope
cmp
cmp
mov
inc
fs
popf
cld
mov
mov
insb
ffreep
shrd
out
scas
outsl
jl,pt
xchg
mov
mov
pop
pushf
roll
out
js
iret
test
cmp
inc
add
ror
mov
jge
and
xor
popf
cmc
testb
xchg
rcrb
sub
ljmp
lahf
mov
mov
mov
or
xor
or
imulb
inc
mov
mov
pop
mov
shrb
dec
mov
cmp
sub
mov
enter
jb
movl
push
dec
cmp
mov
jo
mov
loopne
bound
dec
cltd
fisttpl
movb
out
xor
test
cmpsl
xor
jl
mov
hlt
outsb
adc
push
mov
sub
push
xor
sbb
mov
mulb
sbb
test
adc
dec
mov
dec
stc
pop
fwait
push
mov
mov
orb
sub
pop
jge
dec
ss
ds
jl
xor
stc
jl
rorb
lcall
icebp
cmpsb
bound
test
or
js
push
dec
mov
das
icebp
jmp
divb
xchg
rolb
or
push
aaa
cmpsb
loope
push
popl
shrl
lods
imul
leave
popl
rorb
rolb
or
popf
stc
imul
mov
mov
jmp
lods
push
sbb
pushf
add
mov
add
mov
pop
fistpl
subl
mov
sarb
stos
loopne
mov
pop
andl
adcb
fwait
xor
add
popf
cwtl
call
fs
leave
lcall
cmpsb
mov
jmp
pushf
or
ret
dec
xchg
dec
shrl
pushf
inc
rcrb
in
rcrb
xchg
add
xchg
sahf
mov
pop
lods
mov
mov
clc
stos
mov
ret
std
mov
mov
scas
xchg
cmp
sarl
push
push
jo
aas
xchg
cltd
mov
pushf
out
cmpsb
cmp
test
sarb
mov
mov
mov
mov
cmp
lods
jno
ret
mov
mov
lock
andl
mov
rcrl
ret
ss
cmp
jle
mov
adc
mov
mov
pushf
aam
adc
ret
sub
scas
lods
std
bound
rorl
ret
out
sarb
mov
loopne
cli
mov
mov
pushf
mov
shlb
sbb
sahf
pop
xchg
mov
mov
popa
mov
sub
cmp
notl
test
in
jb
cmpsb
mov
mov
sarl
js
ret
mov
mov
jns
negl
outsb
loop
mov
and
xchg
clc
test
lock
ret
insb
pop
cmpsb
cmpsl
movsl
mov
seto
shl
jecxz
stos
pushf
loope
and
out
mov
mov
nop
add
mov
cmpsl
mov
stos
inc
lods
je
mov
add
cmp
push
xchg
outsl
sbb
mov
and
imul
mov
daa
mov
movsb
movsb
dec
mov
mov
add
mov
xchg
xchg
mov
mov
loop
mov
pushf
xchg
faddl
fldcw
or
ret
dec
mov
jo
rol
popf
leave
ret
mov
mov
jmp
mov
pop
aas
inc
scas
sub
mov
xor
mov
incb
xchg
out
loop
shll
in
ret
fldenv
sub
movsb
ret
hlt
mov
movsb
sub
stos
in
mov
test
sarl
daa
mov
mov
and
sti
sbb
sub
adc
lods
jmp
mov
mov
shll
xor
scas
inc
jb
into
mov
mov
shlb
jno
mov
aas
mov
mov
movsb
cmc
mov
rorb
mov
lods
sub
mov
xor
cmpsb
xchg
lret
mov
andb
stos
lret
mov
stos
negl
mov
roll
nop
lods
test
xor
negl
daa
shrl
pop
mov
mov
movsb
cmpsl
aaa
jbe
xchg
mov
stos
out
mov
jecxz
mov
mov
mov
dec
scas
pop
mov
mov
fidivs
daa
sub
ret
das
stos
mov
mov
mov
pop
shlb
lods
push
jg
inc
scas
bound
mov
mov
add
cmpsb
fnstenv
nop
sarl
lods
js
ret
out
sarb
mov
lods
loop
mov
jbe
mov
mov
mov
test
mov
loopne
movsb
ljmp
sarb
into
aaa
fnstcw
jle
repz
scas
divl
test
xchg
fadd
stos
jle
je
test
jne
shrb
pop
int
push
pop
sbb
stos
incb
push
movsl
cmpsl
stos
mov
pop
pop
xchg
fdivs
mov
test
movsl
mov
mov
mov
xorl
add
stc
lods
and
mov
loop
test
push
cmpsb
mov
xchg
fstp
mov
mov
mov
stos
mov
fidivs
cmpb
movsl
lods
shlb
add
xadd
mov
fisubs
mov
movsb
sbb
mov
adc
popf
jmp
aas
jno
fstpt
faddl
nop
hlt
popa
mov
cs
mov
jnp
sbb
cmp
sub
sahf
ss
sarl
js
cmp
mov
xchg
xchg
int3
mov
xchg
adcb
mov
rorb
cmpsb
jb
xor
in
and
mov
mov
inc
subl
lea
mov
scas
lods
in
shlb
test
sub
stos
cwtl
xchg
adc
sub
bound
das
addl
sub
imul
dec
das
popa
mov
mov
mov
mov
cmp
pop
adc
sub
inc
jle
push
xor
in
movsl
jp
xchg
and
test
cmp
inc
rol
in
mov
pop
mov
sahf
jbe
mov
inc
mov
cld
sub
mov
xchg
mov
add
mov
loopne
inc
add
pushf
cmp
jge
pop
dec
inc
jecxz
mov
shrl
mov
mov
jp
cmp
repnz
cmp
mov
mov
mov
loopne
mov
adc
adc
jns
mov
fsubrs
mov
shlb
add
cmpsl
or
inc
mov
test
mov
imul
mov
mov
cwtl
movsb
mov
test
adc
movsl
xchg
xor
mov
loop
cmpb
inc
das
mov
imul
cmpsb
lgs
test
mov
dec
pop
ds
mov
push
mov
mov
mov
jb
imul
mov
leave
cwtl
test
decb
stos
jne
shll
or
sbb
and
xchg
mov
stos
pusha
cltd
inc
mov
scas
mov
mov
xor
mov
inc
repnz
call
jnp
lock
cmpsb
pushf
adcb
mov
mov
cwtl
lods
stos
mov
lods
js
mov
inc
mov
rcrl
mov
sar
mov
ret
enter
scas
popf
pop
inc
dec
mov
test
test
stos
popf
ja
jle
mov
ret
xchg
mov
xor
data16
dec
ret
or
rol
xchg
and
inc
add
add
inc
pop
scas
popf
sbb
sbb
jl
inc
jle
sbb
mov
loop
sub
pop
popf
push
xchg
loopne
lods
addr16
adc
enter
cmp
mov
cld
mov
popf
jl
inc
leave
mov
subl
mov
idiv
je
xchg
mov
mov
mov
sub
jnp
ret
push
inc
mov
shlb
sub
rol
jno
inc
mov
scas
shl
xor
mov
call
fadds
ret
mov
mov
cs
rcl
shll
mov
fldcw
scas
test
scas
mov
mov
xor
sub
mov
mov
jle
and
mov
pop
mov
xchg
stos
add
clc
mov
roll
std
xor
jmp
ret
sahf
mov
sub
mov
mov
shll
mov
test
mov
pop
push
ret
aaa
hlt
stos
bound
sbb
mov
dec
mov
mov
out
mov
cmpsl
sub
scas
test
and
and
mov
adc
sub
jecxz
lods
pop
dec
mov
scas
pop
cltd
mov
mul
movsb
push
and
cmp
pop
pop
cmp
cmp
adc
clc
push
jmp
mov
push
movsl
cmp
xchg
jp
sub
add
mov
and
cmp
enter
scas
mov
add
inc
inc
jo
cmpsl
or
ret
sub
sbb
cli
sbb
shll
cmp
pop
xor
mov
pop
ret
jle
test
sbb
jmp
mov
sbb
xor
fnstenv
cmpsb
stos
shll
mov
sahf
mov
cmp
pop
mov
fs
xchg
js
mov
push
cs
mov
test
rcll
mov
sahf
mov
sti
shrb
mov
fists
mov
jae
mov
leave
xchg
repnz
aas
rorl
rclb
fucomp
mov
sti
sub
pop
inc
pop
jb
js
int
xchg
mov
aam
nop
add
cli
aas
ret
int
pop
fisttps
loope
sub
repnz
ret
fimuls
aas
mov
sti
insb
push
pop
mov
push
bound
flds
ret
pop
lock
mov
dec
mov
mov
stos
outsb
inc
jle
inc
xor
sbb
push
std
scas
test
and
ret
ficoml
popf
popa
mov
mov
ja
test
js
test
mov
inc
inc
push
lods
aas
stos
pop
push
je,pn
popf
adc
cs
cmpsb
mov
mov
mov
and
test
and
jl
mov
lods
mov
test
ret
and
and
sub
mov
add
and
mov
stos
cmp
movb
mov
and
mov
test
and
cmp
lods
mov
stos
lods
mov
jp
add
movsl
mov
inc
sarl
mov
push
mov
add
call
add
xor
mov
mov
mov
bound
mov
bound
lock
rclb
mov
shlb
out
or
cwtl
popa
sub
cwtl
cmpsb
leave
cs
mov
popf
aam
mov
subb
mov
xchg
divl
fisubl
mov
push
xor
mov
jle
mov
popa
pop
ss
mov
mov
mov
cmp
adc
add
and
jge
cmpsb
ss
nop
pop
push
mov
add
push
cmp
pop
ds
sbb
mov
sbb
mov
xchg
faddl
ficomps
gs
js
push
outsl
je
mov
sahf
mov
pop
mov
xchg
mov
out
daa
jle
cmp
shll
mov
shlb
dec
jle
mov
daa
push
jbe
mov
into
sbb
test
mov
cmp
dec
into
xchg
sbb
mov
rcrb
inc
mov
cmp
fbld
cmpsb
and
mov
inc
into
xor
dec
cmp
insb
mov
stos
movsb
faddp
xchg
loope
mov
aam
nop
add
lds
insl
mov
mov
sub
int
xchg
test
push
ja
xchg
rcrb
mov
stos
mov
daa
bound
pop
inc
loopne
cmpsl
mov
ret
xor
das
aaa
push
pop
ret
rcr
into
mov
cmp
inc
ret
fadd
loop
scas
mov
mov
sub
push
ret
int3
aam
fcmovb
test
sub
popa
dec
ret
loope
ffreep
mov
ret
xor
sub
push
pop
ret
rcr
iret
xlat
mov
ds
sub
ret
ffree
jecxz
lods
mov
mov
cs
dec
push
ret
int
rcr
subb
fs
out
mov
pushf
test
or
pop
jb
ret
lock
out
notb
adc
movhps
ret
cld
in
ljmp
add
ret
in
hlt
repnz
mov
adc
ret
add
jmp
mov
and
sbb
jno
ret
icebp
stc
out
notl
adc
or
jge
ret
std
in
jmp
test
mov
or
ret
in
cmc
repz
lea
push
adc
mov
sub
fisubs
cli
push
and
or
rcll
jb
fistps
in
xchg
mov
cmc
out
mov
cmpsl
mov
sub
dec
jbe
pop
lods
mov
push
rolb
mov
jne
clc
dec
mov
call
add
mov
movsb
jg
shll
lds
cmpsb
or
lcall
ret
lods
dec
pushf
lods
inc
xchg
cmpsb
int3
scas
push
movsl
mov
inc
mov
popf
mov
inc
jbe
jg
push
mov
ret
mov
sbb
cmp
lea
mov
ss
aaa
stos
stc
inc
pop
lock
in
push
loop
mov
rclb
movsb
inc
pop
shlb
aaa
stos
stc
movsl
pop
shll
gs
repz
lods
nop
mov
mov
test
mov
aaa
push
movl
or
xlat
add
lds
xchg
mov
mov
mov
or
das
out
subl
or
sub
stos
cmp
mov
mov
in
mov
shlb
sub
add
xor
and
jecxz
mov
cmpsl
push
jl
rcll
mov
rolb
lods
outsl
jbe
cmpsb
inc
int
test
mov
lahf
jge
mov
cmp
rcrl
mov
shrl
test
scas
and
clc
aam
pop
adc
mov
je
push
add
sbb
add
cs
mov
jge
pop
mov
mov
mov
jecxz
mov
loopne
icebp
pushf
out
daa
rcrb
mov
dec
mov
mov
jecxz
fsubl
sbb
pop
push
testl
push
xor
stos
mov
mov
shlb
scas
mov
mov
ret
fsts
mov
xchg
cmp
cmp
xchg
jg
loopne
dec
repz
pop
mov
pop
outsl
mov
repz
nop
push
jle
cmp
or
cltd
sbb
in
mov
cmp
push
sub
je
cmp
mov
ss
or
sub
xchg
in
mov
mov
mov
mov
lods
fdivrs
add
aas
in
cwtl
stos
fdivrs
dec
inc
jb
sarb
int
popf
ret
les
aas
xor
mov
push
lods
popf
mov
movsl
sbb
mov
mov
xchg
xchg
xchg
pop
cmp
xor
mov
cmp
lock
pop
test
lds
cwtl
andb
scas
sahf
jle
ret
movsb
loop
jb
push
push
je
cmp
mov
push
push
aam
je
cmp
rcll
mov
notb
jle
cmp
mov
mov
xchg
xorb
insb
mov
mov
jle
cmp
mov
mov
xor
jle
mov
xchg
push
inc
mov
arpl
mov
enter
cmp
rol
jle
cmpsb
lea
jl
sahf
or
jb
scas
inc
dec
movsb
sub
test
cmpsl
mov
test
xchg
mov
dec
cmpsl
cmc
movsb
pushf
cmp
cmp
cmpsl
mov
add
cld
cmp
cmp
ss
pusha
sub
pushf
mov
mov
in
mov
adc
bound
sti
push
ficoml
adc
adc
fsub
mov
aam
mov
pop
lods
lods
sbb
mov
mov
jb
jp
cli
dec
mov
pop
cmp
cltd
mov
mov
mov
sub
sbb
pop
xchg
hlt
push
mov
cmc
rorb
mov
aad
roll
rcrl
rcrl
hlt
ss
push
xor
ds
cltd
mov
pop
sbbb
sbb
cmp
es
ficomps
dec
movsl
shrb
jo
js
ret
or
xadd
shll
mov
lcall
cmp
jecxz
mov
push
pushf
and
jecxz
xchg
jbe
fcompl
jle
cmp
shl
jo
roll
mov
cwtl
insl
mov
mov
loop
loop
scas
js
pop
test
andl
mov
push
inc
jo
hlt
or
mulb
mov
add
mov
arpl
xor
into
subb
push
pop
adcl
dec
fwait
and
xor
mov
jns
mov
and
fcoms
adc
jb
add
cmpl
mov
jns
gs
dec
cmpsb
dec
cmp
push
shl
popa
sahf
ret
sub
jmp
mov
adc
js
xchg
mov
jmp
jge
outsb
adc
cmpb
add
js
mov
inc
xchg
mov
fidivrl
lcall
lds
cld
lods
and
jl
sti
and
jnp
sub
aam
jp
push
repnz
and
cmpsb
ret
orl
cltd
cltd
pop
pop
cld
shl
xor
cmpsl
fcomps
scas
inc
mov
or
push
and
ds
pop
xchg
stos
cwtl
das
clc
int3
jmp
adc
movsl
mov
mov
push
xchg
mov
xchg
xchg
push
and
fstl
popf
mov
mov
popf
mov
fs
test
xor
mov
xor
mov
push
mov
mov
lods
cmpb
push
cmp
add
mov
jmp
les
xchg
mov
push
adc
lret
shll
scas
xor
shr
mov
xor
xor
leave
push
rorl
jecxz
cs
mov
cld
jl
pushf
shl
nop
in
sahf
outsb
mov
int
xchg
popa
test
sub
mov
das
sbb
add
xchg
lea
xchg
mov
sub
jl
mov
leave
rclb
shrl
cmpsl
mov
inc
int
or
aas
ret
movsb
xchg
mov
mov
out
loope
cmp
insl
cmpb
xor
adc
xchg
cli
push
xor
sahf
mov
xor
mov
mov
dec
sbbb
lods
push
pop
push
mov
pushf
repnz
and
sarl
test
pushf
cltd
iret
xor
sbb
mov
imul
mov
push
inc
cs
mov
ljmp
test
jae
in
mov
sti
xor
jae
shrb
or
mov
pop
xor
cwtl
sub
mov
outsl
movsb
push
mov
dec
mov
loop
push
sahf
idiv
push
dec
pop
loop
adc
mov
add
test
clc
sub
int3
mov
insl
lret
imul
ds
mov
mov
mov
in
xchg
imul
addl
mov
inc
push
mov
test
add
xor
pop
xor
test
fsubs
jne
std
movsl
ds
js
cmp
or
ds
mov
test
pop
add
mov
adc
add
jmp
lcall
in
popa
push
mov
negl
push
mov
dec
sub
outsb
mov
mov
nop
cmp
mov
add
iret
mov
addb
insl
fs
lret
push
das
test
mov
cvtpi2ps
pushf
dec
cmp
add
xor
xchg
mov
cs
lcall
sarl
pop
inc
xor
inc
popl
inc
lcall
sar
or
dec
test
mov
xchg
mov
mov
xchg
push
mov
ror
lods
sub
sahf
push
movsb
rclb
stos
mov
cmc
push
outsb
stos
sub
push
incb
stos
inc
ror
mov
dec
mov
popf
stos
imul
mov
sub
ds
lea
call
pushf
cmpsb
pushf
stos
mov
jns
ror
mov
cmpsl
je
xor
push
mov
imull
out
subb
arpl
and
lahf
test
icebp
inc
stos
shll
sbb
lcall
xor
xchg
mov
dec
and
aam
sbb
mov
and
lods
xor
cli
sub
sbb
xlat
rcrl
and
lcall
pushf
inc
adc
popa
popa
imulb
iret
mov
scas
add
adc
daa
cmp
sub
jo
test
enter
insb
ret
stos
inc
mov
shll
cmpl
jmp
dec
mov
cmp
data16
jo
add
sbb
mov
shll
xor
sbb
sbb
and
push
fld
xchg
mov
push
insb
push
mov
xchg
ret
daa
mov
push
cltd
inc
mov
ss
mov
or
jle,pt
pop
fcomps
in
dec
cmp
pop
movsl
popf
pop
mov
xchg
or
and
cmp
sub
pop
jg
out
sub
aam
cmc
mov
adc
fbld
inc
inc
shll
pushf
xor
popa
ret
scas
daa
mov
scas
test
popw
aas
inc
mov
push
adc
bound
int3
mov
pushf
xchg
mov
xor
dec
mov
rcrl
jg
sub
jo
loop
lods
popa
sbb
stc
and
lcall
push
cmp
shl
push
inc
lcall
mov
push
pop
lods
stc
push
jbe
adc
ret
ds
clc
add
jb
sarl
inc
cmp
aas
mov
ficoms
sub
stc
mov
andl
dec
test
and
cmp
subl
mov
mov
mov
xor
movsl
inc
mov
gs
fdivrs
int
mov
stc
int3
ljmp
enter
sti
aam
nop
and
test
scas
addr16
mov
imul
add
xor
out
stos
mov
ds
sbb
js
mov
sbb
jbe
dec
jo
xchg
jmp
cmp
inc
xor
idivl
mov
hlt
jmp
pop
pop
mov
push
mov
push
mov
rcl
repz
nop
and
mov
gs
mov
xchg
mov
mov
notl
cmp
sbb
iret
addl
mov
fs
outsl
fsubrl
cmp
nop
mov
pushf
lahf
xchg
cmpsl
mov
rcrb
js
test
jns
outsb
movsl
jae
sub
xchg
ds
adc
sbbb
jle
push
das
mov
hlt
sbb
inc
dec
cmp
mov
or
or
jne
jp
sti
adc
mov
pop
inc
adc
ds
mov
mov
cmp
lret
push
sbb
push
jge
dec
ficoml
jp
add
test
loop
js
adc
xchg
pusha
mov
sbb
stc
sahf
ds
mov
sub
jns
lcall
push
bound
jnp
scas
repnz
xor
sub
mov
fldt
pop
sbb
cmp
inc
xor
push
pop
mov
ret
sbbb
mov
outsb
imul
mov
idivb
andb
ret
movsb
sti
incb
xchg
hlt
mov
cmc
and
adc
fidivs
sub
jbe
and
ss
jp
jecxz
rcrb
sub
jecxz
js
arpl
call
pop
shrb
xchg
popf
pop
jl
outsb
rorb
cmp
mov
mov
push
shrl
push
aad
mov
adc
adcl
shll
nop
xchg
cmp
popf
mov
pop
xchg
adc
adc
mov
and
repz
sub
mov
add
ret
pop
andl
fwait
nop
icebp
mov
rclb
inc
mov
add
inc
orb
jno
addr16
mov
inc
mov
loopne
fistps
lahf
mov
xor
mov
sbb
aas
lret
xchg
das
xor
adc
and
fildll
adc
xor
push
iret
mov
mov
mov
ret
push
mov
pusha
jp
mov
mov
scas
push
mov
xchg
mov
push
int
add
mov
cmp
jnp
test
test
mov
adc
inc
mov
inc
inc
ss
xor
sub
mov
lods
das
test
mov
cmpsb
pop
xor
push
sub
mov
clc
lcall
xchg
cmp
xchg
pop
pushf
repnz
xor
stos
mov
or
and
arpl
in
sbb
pusha
leave
pusha
mov
adc
sarl
fucom
pop
and
inc
shll
mov
mov
xchg
bound
movsl
add
scas
nop
scas
mov
mov
cmpsb
jecxz
ret
mov
popf
mov
stos
mov
loop
cmp
test
adcb
inc
ss
jecxz
cs
sub
inc
mov
popf
movsl
mov
sarl
cmp
movsb
xor
mov
inc
or
pop
scas
stos
fnsave
test
mov
mov
stos
mov
mov
cmp
int
ss
pop
mov
cmp
inc
mov
mov
cmpsb
xchg
test
and
cmp
cmpl
adc
pop
mov
mov
cmpsb
and
mov
lods
shlb
outsb
test
mov
mov
mov
stos
xor
mov
mov
adc
xchg
inc
mov
fistl
cmpsb
inc
aad
dec
shlb
lods
mov
mov
mov
mov
mov
inc
sarl
sub
mov
mov
fs
mov
sub
mov
cmpsl
out
ret
mov
shll
inc
pop
xchg
mov
inc
aaa
ret
int
push
fnclex
mov
shrb
cmpl
pop
mov
mov
cmp
inc
ds
negb
mov
in
inc
pop
mov
insb
mov
lods
pop
cmpb
xchg
inc
scas
clc
mov
shl
and
mov
mov
mov
mov
ss
ret
ljmp
inc
cmpsl
mov
loop
scas
rcr
mov
popf
ret
inc
das
lea
adc
mov
xchg
inc
mov
mov
pop
lods
xchg
mov
mov
sti
stos
mov
cmp
ds
pop
rcrl
cmp
inc
popf
mov
mov
and
mov
inc
lods
adc
shrb
mov
scas
xchg
bound
mov
fwait
mov
cmpsl
jle
mov
mov
pop
mov
movsb
sub
lods
mov
inc
xor
in
pop
add
cmp
enter
mov
rcrl
push
lret
mov
imul
mov
inc
lods
adc
insl
pop
stos
mov
inc
imul
sarb
movsl
mov
std
mov
mov
test
popf
mov
xchg
sarl
arpl
cmpsl
stos
or
test
popf
mov
inc
rolb
in
inc
aaa
mov
ret
lcall
mov
push
call
xor
inc
mov
repnz
push
inc
mov
xor
aaa
stc
std
fs
aas
jle
jnp
inc
pop
lods
mov
ret
mov
inc
mov
mov
xor
movsl
mov
jl
cmpsl
shrb
mov
popf
mov
fld
sub
aam
mov
inc
xor
lods
pop
cmpb
xchg
inc
mov
xor
aaa
mov
fnstcw
inc
xor
mov
mov
inc
lods
xchg
mov
scas
cmp
inc
test
pop
mov
movsb
cmp
sub
popf
pop
movsb
or
fsubs
scas
jno
mov
pushf
inc
lods
cmp
mov
mov
cld
pop
scas
movsl
aas
inc
lods
inc
lret
or
cmpb
sarl
xorb
cmpb
jge
jle
xchg
mov
xchg
shrl
add
lods
addr16
mov
movsl
jno
testl
cmp
test
mov
scas
and
inc
cmpsb
in
ss
mov
nop
out
mov
and
cwtl
sbbb
and
mov
push
mov
es
mov
scas
adc
mov
inc
cmpsb
mov
mov
scas
mov
rcrb
ret
mov
xchg
and
mov
nop
stos
fs
and
scas
shrl
scas
mov
imul
das
dec
sbb
xchg
mov
ds
mov
aaa
adc
sbb
mov
imul
insb
mov
roll
insb
movsb
fists
ret
cld
sub
stos
jle
xchg
xor
cli
dec
mov
stos
mov
mov
add
mov
mov
mov
nop
mov
inc
pop
scas
xchg
or
inc
xor
mov
cs
pop
scas
nop
popa
pop
mov
mov
lock
xchg
jbe
sub
mov
std
xchg
mov
cwtl
lods
arpl
mov
mov
cmpsl
arpl
ffreep
lods
fs
adcb
xor
xchg
rorb
lods
sti
test
shll
xchg
bnd
data16
mov
nop
mov
inc
push
in
rcr
jle
cmp
lock
das
xor
mov
popf
or
xor
mov
data16
ret
xor
xchg
mov
hlt
popf
mov
cmp
ljmp
popf
xchg
shll
ret
imul
mov
mov
mov
mov
dec
mov
lods
jp
cmpsb
call
add
mov
mov
cmpsl
mov
cmpsb
enter
rcrl
enter
mov
mov
enter
mov
inc
mov
pushf
mov
pop
test
icebp
mov
mov
pop
xor
enter
pop
jecxz
shrl
mov
aas
mov
or
mov
or
cmp
sti
test
popf
pop
mov
es
ret
cmp
xchg
cmc
data16
pop
mov
fdivs
stos
cmp
cmp
stos
in
mov
cmpsb
test
shll
mov
mov
test
mov
cli
shll
mov
movsl
mov
mov
mov
stc
stos
add
push
ret
jmp
test
movsl
ljmp
sarb
push
pop
ret
es
mov
mov
fucomip
fwait
push
ss
mov
push
mov
jl
mov
mov
rolb
push
orb
test
pop
cmpb
cmpsl
push
mov
and
ss
mov
popf
xor
mov
mov
cmpsb
mov
enter
data16
fbstp
mov
test
shr
mov
lock
pop
inc
nop
and
sub
sub
sub
or
pop
xchg
ret
pop
cmp
pop
gs
mov
cmpl
inc
jno
pop
test
mov
loopne
ret
jg
cmpsb
rcll
sub
sahf
mov
mov
mov
sub
inc
aas
mov
scas
jno
shll
push
scas
sub
mov
mov
adcl
xor
cmpsl
rorl
push
shll
rcll
ljmp
mov
pop
mov
mov
bound
mov
lods
rcll
aas
scas
mov
mov
repz
popf
sub
das
rcrb
nop
pop
scas
mov
cltd
lods
jno
mov
ljmp
jp
aas
xor
push
ret
stos
mov
test
das
test
push
ret
push
in
push
and
xchg
subb
mov
xchg
cmp
cli
jbe
mov
cmpb
mov
inc
cmp
add
xor
ret
cmp
cmpl
mov
inc
cmp
jle
mov
mov
mov
ffreep
mov
xchg
mov
mov
ds
pop
cmpsb
mov
mov
repz
add
pop
add
stos
pop
add
pop
add
pop
add
add
leave
inc
mov
jle
leave
mov
leave
cmp
mov
leave
divl
jo
leave
scas
mov
in
mov
das
mov
imul
mov
orb
mov
add
jg
insb
mov
sti
es
cmp
mov
jno
push
mov
scas
repnz
mov
dec
shrl
dec
and
mov
xchg
sub
movsl
sti
bound
mov
sahf
pop
ret
ljmp
movsb
mov
pop
movsl
rcrl
cmpsl
std
mov
mov
sahf
mov
mov
xchg
sarl
aas
mov
fisttps
sahf
mov
movsl
aam
scas
les
jle
cmp
cmp
mov
jp
mov
test
mov
push
jb
pushf
jecxz
stos
mov
mov
cmp
inc
inc
test
jmp
push
mov
mov
xchg
scas
push
cltd
mov
ret
mov
jne
and
adc
add
adc
cmp
dec
ds
mov
dec
jb
mov
mov
mov
out
bound
fistpll
ds
push
xor
test
ret
movsl
mov
mov
test
sub
xchg
pushf
mov
test
arpl
xor
cmpsb
mov
inc
inc
in
stos
pop
out
and
add
imul
add
add
jl
adc
add
mov
loope
push
ja
repz
mov
sbb
pop
stos
mov
stos
test
fidivrl
hlt
shll
mov
lock
fdivrs
mov
mov
lds
lods
jno
mov
pop
andb
mov
mov
xchg
mov
popf
cmpsb
mov
mov
lock
mov
xchg
dec
mov
xchg
mov
inc
js
mov
mov
xchg
lods
arpl
cmp
ret
test
es
les
mov
push
leavew
ret
fwait
mov
mov
arpl
or
lods
subb
jno
mov
cmp
mov
jnp
aad
mov
dec
mov
dec
adc
shrl
mov
mov
mov
jle
xor
mov
cltd
xchg
scas
mov
inc
leave
mov
data16
and
inc
xchg
stos
data16
mov
push
xor
mov
das
dec
jns
lods
fdivs
test
mov
lock
fldenv
mov
jbe
cmp
shll
ret
jbe
fildl
adc
popf
push
mov
icebp
shrb
pop
push
filds
mov
test
mov
mov
fs
xchg
rolb
mov
leave
stos
mov
sbb
jbe
pop
xchg
mov
popa
mov
xor
hlt
popf
mov
mov
movsl
mov
pushf
mov
ret
mov
mov
mov
lahf
ret
sub
lods
mov
test
shrl
mov
inc
mov
ret
sbb
pusha
shl
ret
sub
mov
nop
mov
pop
push
nop
hlt
enter
movsb
lods
stc
sbb
test
addl
inc
mov
mov
cmp
das
mov
adc
mov
test
xchg
scas
loop
es
into
aam
cmp
movsb
add
mov
mov
rcr
scas
sub
jbe
fcomp
mov
pop
mov
xchg
lds
xor
cld
sarb
scas
mov
mov
movsl
mov
pop
mov
aas
push
jns
rcrl
xchg
mov
cmpsl
pop
mov
bnd
mov
cmpsl
mov
lods
arpl
push
sbb
sarb
mov
mov
pop
es
hlt
shlb
mov
mov
sahf
scas
es
sahf
stos
es
aam
cmpsb
nop
inc
aaa
xchg
mov
push
jb
enter
test
xchg
js
jb
mov
fnstcw
mov
mov
mov
xchg
and
nop
mov
mov
test
mov
cmovl
sub
push
stc
mov
xlat
out
ret
mov
adc
pop
add
add
push
jmp
mov
enter
pushfw
push
pushfw
movsb
pushfw
inc
mov
xor
pushf
frstor
jl
pushf
pop
pushfw
mov
daa
cmpsb
enter
aas
cmc
stc
aas
xchg
stc
aas
aaa
stc
aas
sar
aas
jo
aas
adc
jl
mov
jle
out
jle
cmp
push
ds
into
sub
xchg
add
mov
popf
ds
mov
pop
cmp
sbb
cmp
xchg
sbb
pushf
nop
push
js
xchg
mov
cmp
push
inc
push
ret
aas
cltd
scas
rclb
rorb
rorb
mov
mov
add
xor
push
mov
push
sbb
push
cltd
sub
sub
sub
sub
sub
sub
sub
sub
sub
cli
sarb
and
pushf
out
pop
add
pushfw
jecxz
adc
ret
push
mov
es
mov
shl
das
ret
xchg
scas
cmp
mov
mov
rcll
add
xchg
mov
mov
data16
stc
mov
mov
scas
add
mov
stos
lahf
and
test
inc
inc
movsb
fbstp
out
push
les
jecxz
mov
xor
xor
xor
xor
xor
rcrl
imul
cmp
movsl
lods
jle
cmp
xchg
andb
test
movsb
push
mov
pop
mov
repnz
fwait
scas
mov
movsb
shlb
mov
mov
inc
mov
mov
test
nop
lods
das
cmpsb
lock
movl
shrl
arpl
inc
mov
ret
fsts
sbb
ret
push
mov
shll
mov
mov
imul
jmp
stos
mov
test
pop
cmpsb
mov
xor
mov
testl
xorb
cmp
sarl
mov
mov
cmpb
or
xor
hlt
popf
stos
test
pop
cmpsb
mov
movsl
test
popf
cmpsl
shr
inc
xor
adc
pop
mov
mov
inc
aad
and
mov
testl
mov
sbb
mov
mov
mov
cmp
movsb
aas
scas
adc
and
lods
sbb
pop
andb
sub
mov
insb
movsl
sahf
sbbb
mov
cmp
mov
pop
add
aad
mov
fstpt
in
mov
stc
rcr
mov
mov
loope
mov
xor
cmp
aas
mov
ficoml
sub
and
fidivl
cmp
rol
cmp
sub
mov
shll
test
mov
test
fldcw
sub
lds
popf
cwtl
movsl
push
mov
mov
int3
popf
mov
mov
rcll
mov
jl
cmpsb
adc
negl
add
addb
fucomi
mov
and
xchg
ss
movsb
mov
shlb
test
sbb
fbld
test
test
test
ljmp
cmpb
push
mov
rcll
out
ret
pop
mov
ljmp
pop
mov
xor
pop
mov
mov
inc
nop
mov
mov
sub
in
shlb
mov
lahf
inc
fsubrs
pop
iret
xchg
vdivss
stc
ss
cmpb
mov
ss
mov
mov
arpl
mov
lods
xchg
test
bound
add
pop
shll
mov
mov
es
mov
cmp
cmpsl
xorl
cmpsl
mov
mov
push
je
lahf
push
addb
sub
sub
scas
lods
lds
cmc
hlt
subb
sub
shrb
lods
jbe
mov
pushf
test
cli
in
scas
inc
jg
mov
movsb
cmc
popa
xor
aad
sub
jle
pusha
fld1
and
mov
xchg
ret
mov
pushf
mov
sbb
xchg
mov
adc
mov
push
rorb
rorb
rolb
xor
aad
mov
sbb
rcrb
mov
xchg
call
mov
push
inc
loopne
in
pusha
dec
ret
sub
lods
das
cmpsb
int
nop
test
mov
imul
cwtl
mov
mov
mov
dec
ret
sub
mov
mov
repz
pop
xor
mov
test
imul
test
mov
lock
insb
mov
mov
mov
mov
cmp
mov
mov
add
mov
test
sarl
bound
lret
cmp
data16
lahf
cmpsl
inc
bound
pop
rcl
mov
jge
cmpsl
movsl
insb
mov
mov
mov
hlt
lahf
aaa
inc
jno
rcrb
aas
scas
pop
dec
ret
ljmp
pop
test
test
test
mov
scas
or
nop
mov
shll
mov
rcrl
aas
mov
ret
ffreep
scas
out
lods
aas
lods
mov
cmp
cmpsb
aas
mov
adc
add
sub
cmpsb
das
mov
xchg
mov
bound
mov
mov
mov
mov
add
mov
shrl
push
mov
shll
jl
push
ret
fwait
mov
mov
mov
ds
aam
mov
movsl
ret
mov
mov
imul
mov
fs
movsl
stos
xchg
mov
mov
outsb
mov
mov
mov
scas
adc
cmp
stc
movsl
fs
mov
mov
lock
dec
test
sahf
lret
aam
and
popa
addb
xor
mov
fldt
arpl
sti
movsb
mov
je
stos
movsl
test
test
sub
scas
mov
mov
mov
ret
das
adcb
jle
xchg
inc
aas
data16
aas
dec
push
xchg
cmp
pop
mov
mov
aaa
loopne
mov
mov
pop
lods
xchg
loopne,pn
stos
xchg
scas
loopne
stc
xor
sub
stc
mov
mov
mov
shll
scas
xchg
inc
loopne
test
movsb
xchg
cmp
mov
jno
movsl
sbb
ret
push
adc
mov
sti
mov
insb
xor
lods
adc
cmp
test
scas
mov
mov
test
cwtl
ss
cs
mov
xor
movsl
mov
mov
cld
mov
es
test
test
div
jecxz
bound
cmpsb
xlat
shll
movsb
mov
mov
sub
mov
sub
test
andb
rolb
mov
es
inc
cmp
mov
mov
add
push
mov
mov
test
cwtl
jo
shll
sbb
cmp
mov
sub
xchg
hlt
sahf
xor
mov
mov
mov
sahf
lods
lods
aam
sub
test
pop
stos
nop
bound
xchg
and
shll
ret
push
and
adc
ds
jle
mov
aam
mov
popf
xor
sub
mov
mov
mov
ret
mov
push
dec
mov
popa
lods
push
cwtl
mov
mov
stos
pop
mov
sub
rcrl
ret
das
add
xchg
ret
jmp
cmp
pop
mov
cmp
stc
lods
fs
lods
mov
mov
inc
xor
mov
dec
pop
xchg
stos
std
ret
sub
das
movsl
rcll
nop
lods
das
rcrb
stos
ljmp
adc
mov
fcomps
or
pop
and
mov
or
nop
cmp
stos
lods
or
ret
insb
mov
cmpsb
adc
sub
stos
sarb
ret
test
mov
adc
push
sub
xchg
arpl
xor
rcll
inc
test
test
test
jle
stc
stos
fs
mov
stos
mov
mov
mov
xchg
mov
inc
xchg
push
ret
jmp
lods
ret
mov
sbb
adc
fwait
movsb
arpl
out
ret
fdivl
mov
push
adc
ret
hlt
mov
ret
mov
mov
scas
lahf
lods
loopne
test
pop
xlat
mov
ljmp
push
pushf
mov
push
sbb
mov
add
xor
shll
fs
nop
mov
out
add
and
daa
xlat
fsubl
es
jbe
cmpsl
stos
in
or
stos
lds
test
cmpsl
sub
mov
pop
xchg
mov
into
mov
in
lcall
or
aam
ret
lods
pop
aas
push
insl
cmpsb
ret
pop
mov
ret
idivb
addb
dec
ret
fisttpll
fdivp
ret
dec
loop
pop
push
ljmp
loopne
xor
jne
or
ret
enter
in
add
mov
shr
push
inc
sbb
into
insl
push
mov
cmp
repnz
adc
ret
xchg
ror
pop
inc
ret
mov
out
lcall
mov
dec
outsb
fmul
jl
loope
loope
xchg
sub
js
xchg
and
ret
jnp
mov
ss
mov
call
add
xchg
pop
lds
pop
inc
scas
adc
icebp
nop
repz
cmp
mov
mov
ret
pop
in
arpl
mov
xchg
inc
add
inc
cmp
inc
sub
xor
mov
mov
nop
mov
in
push
sub
out
mov
aaa
cmp
jl,pt
ret
nop
inc
shlb
pop
mov
and
push
nop
in
jle
cmp
ja
cmpb
mov
cmp
andb
ds
nop
insl
jle
aam
mov
ds
or
add
cmp
jnp
cmc
mov
stos
and
mov
dec
adc
jo
mov
mov
nop
icebp
jle
cmp
xchg
cmp
ds
cmp
shrl
call
xor
mov
jle
mov
movsl
xchg
jmp
jmp
nop
bnd
cmp
hlt
xchg
mov
cmp
mov
cmpb
cmpsl
mov
subb
mov
xor
mov
xchg
jnp
clc
jg,pt
mov
jmp
xchg
mov
add
es
jmp
sub
ds
jnp
stc
jle
cmp
inc
mov
mov
cmpsb
subb
sub
xchg
xor
jnp
cmp
mov
rorb
mov
icebp
cmp
xchg
cmpb
cmp
ret
cmp
mov
sub
out
mov
mov
mov
xchg
cmp
jge
add
mov
imul
mov
cmc
cmp
mov
mov
fwait
mov
jl
mov
xor
jmp
lea
xor
rcrl
jle
lods
cmp
xchg
ljmp
mov
std
nop
jp
cli
cmp
jb
mov
outsb
ds
mov
ljmp
ds
mov
cmc
test
mov
shll
test
sub
sub
in
into
sub
xchg
ja
cmp
mov
xchg
cmp
jge
shl
mov
adc
scas
insl
xchg
repnz
mov
mov
addb
inc
cmp
xor
in
data16
cmp
xchg
outsb
xorb
cli
jle
cmp
mov
adc
push
nop
nop
mov
das
sub
ja,pt
hlt
nop
jbe
js
jp
xchg
jge
sbb
shlb
and
out
subb
jle
cmp
jl
mov
outsb
mov
ds
mov
ja
mov
cs
movsl
cmp
sarb
aas
js,pt
cli
nop
hlt
jle
cmp
in
xchg
out
subb
mov
inc
nop
mov
mov
mov
repz
stos
addb
pop
ds
mov
jl
jns
mov
je
mov
adc
mov
in
je
xor
mov
adc
mov
movsl
outsl
or
ds
inc
nop
sarb
mov
iret
scas
lcall
sub
sub
add
mov
mov
xor
lret
xor
dec
xor
pop
mov
cmp
shl
dec
insb
ret
sbbb
mov
mov
jb
aas
stos
rcrb
add
insl
dec
and
mov
push
inc
inc
lahf
mov
vfnmadd231pd
xchg
ret
stos
aaa
gs
bound
fidivrl
ret
out
loop
pop
mov
pusha
stos
add
or
mov
mov
ret
and
cmp
fs
ret
and
adc
insb
add
cmp
lock
sub
jmp
or
mov
lcall
orb
ret
lahf
pushf
xor
mov
out
cmp
mov
loop
int3
xchg
mov
sbb
mov
lock
repnz
stos
out
jns
pop
cmp
scas
inc
insl
ret
adc
dec
sub
pushf
push
stos
ss
movsb
add
or
pop
pop
loopne
xchg
daa
icebp
repnz
mov
push
or
fbld
js
inc
ret
or
aas
adc
test
sub
dec
inc
hlt
ljmp
stc
add
outsl
mov
stos
bound
rolb
mov
aaa
mov
into
fwait
clc
xchg
mov
lgs
push
pusha
mov
xchg
dec
lcall
adc
or
jne
xor
fwait
test
sti
sbb
cltd
fdivr
push
mov
jo
out
mov
jmp
popa
aam
lret
mov
mov
hlt
dec
jg
push
rcrl
loope
mov
popf
mov
pop
lock
imul
clc
lods
dec
mov
xor
fnsave
xor
push
sub
aad
loope
dec
add
cmp
add
test
cmp
ja
sbb
cmp
dec
mov
xchg
mov
xor
pop
inc
sbb
mov
mov
popf
fcmovnu
stos
jmp
mov
mov
shlw
mov
mov
sbb
cmp
ret
push
subl
pop
dec
and
loope
in
push
ret
xchg
xchg
mov
into
add
mov
fldl
repnz
in
push
add
loope
lds
and
mov
sbb
mov
xchg
repz
sti
push
loopew
out
cli
mov
mov
mov
or
ret
pushf
lock
es
out
push
and
sub
push
in
inc
sarb
inc
loope
sub
mov
ljmp
lcall
daa
mov
pop
mov
ret
ss
cltd
clc
sub
es
testl
mov
xchg
or
das
popa
mov
fstpt
xor
sti
mov
aad
jp
bound
push
jb
test
xchg
int
int
mov
mov
and
mov
xchg
mov
roll
and
ret
mov
jae
bound
dec
dec
mov
mov
daa
add
aaa
aam
pop
jle
mov
mov
je
idivl
sbb
fisubs
scas
pop
jno
jecxz
cs
popl
roll
cli
mov
dec
pushl
pushf
xlat
mov
rol
mov
sub
jmp
sbbb
ret
and
fbld
adc
ret
cmp
in
fwait
gs
cmp
add
sarl
mov
mov
ds
mov
xlat
cmpsb
ret
scas
lahf
push
adc
fwait
sbb
aas
cmp
andb
shll
ds
adc
insl
movsl
cmp
int
jns
mov
es
ret
xchg
in
lods
cltd
add
pusha
cmpb
jae
ret
lods
movsb
xor
std
pop
cmp
les
pop
jg
push
mov
mov
inc
repz
add
nop
mov
ret
pushf
mov
inc
mov
xchg
fnstsw
bswap
sbb
add
nop
cmp
out
je
into
loope
das
pop
dec
gs
sub
and
add
int
in
rolb
pop
sbb
cmpsl
popa
dec
or
and
cmpsl
pushf
mov
mov
jp
adc
cmp
fwait
insl
loop
in
push
rolb
xor
loop
lock
es
sarl
imul
inc
out
popf
dec
mov
pop
ret
mov
stos
std
fisubrl
lds
int3
jb
ds
ret
out
and
sbb
lds
or
mov
cs
test
mov
ljmp
xchg
dec
adc
jg
add
fstpl
loopne
mov
jmp
mov
movsb
sub
mov
mov
push
mov
nop
jecxz
sarb
rol
ret
mov
loop
xor
in
mov
dec
mov
jb
shll
pop
adc
shlb
dec
inc
mov
mov
and
lea
mov
push
ljmp
or
cmpl
scas
popf
movsb
add
xor
cmp
loope,pn
mov
cmp
or
imul
cli
adc
pop
cmpsb
adc
jb
ret
mov
xor
adcb
push
and
sbb
ret
outsb
popf
addr16
ret
daa
test
les
and
shrl
add
test
in
push
fildl
jb
pop
inc
sub
lret
stos
cmpsl
dec
sub
cs
aas
repnz
mov
ret
jo
jge
dec
nop
mov
mov
ret
dec
fsubs
inc
fiadds
adc
dec
aaa
in
and
test
pop
dec
hlt
mov
cli
dec
ret
test
mov
and
ret
in
test
xor
adc
out
icebp
rolb
shll
mov
dec
sub
jl
mov
test
push
ret
pop
sub
mov
push
push
ret
pushf
jp
fwait
sahf
jo
ret
cmp
jg
add
loope
sub
ja
ret
push
jge
jb
sub
iret
sarb
cmpsb
in
in
mov
insb
inc
ret
fcomi
fwait
inc
mov
inc
addr16
test
jo
and
insb
xor
mov
out
cld
imul
fs
mov
push
mov
jno
incb
in
or
mov
lahf
dec
insl
mov
bound
lods
bound
xchg
stos
fcomip
out
addb
inc
iret
mov
add
call
xor
orb
loop
and
push
lods
lds
adc
or
mov
push
shr
mov
ret
or
fwait
mov
inc
pusha
aas
mov
scas
in
inc
fdivr
inc
nop
add
cmpsl
jge
icebp
mov
or
pop
fisubs
ret
mov
or
in
andl
jg
mov
mov
pusha
out
inc
popa
sub
icebp
dec
scas
mov
ljmp
lock
sbb
ret
xchg
fadds
ret
fcmovbe
mov
cli
outsl
pop
xchg
push
xor
jb
sub
cmpsb
daa
mov
adc
mov
mov
cmp
jecxz
enter
dec
mov
xchg
xor
sti
mov
sbb
push
shrb
aam
iret
mov
xchg
or
rcrl
mov
lock
subb
je
lods
lea
inc
xchg
push
lods
lods
clc
jg
loope
pop
imul
mov
ret
pop
jnp
inc
xchg
aas
xchg
inc
mov
icebp
lea
test
push
jmp
lock
iret
loope
stos
pushf
xchg
cmp
test
push
jge
inc
and
ja
data16
push
aad
icebp
test
cmpsb
jae
sub
pusha
sbb
inc
movl
fdivp
jne
icebp
and
aad
addb
xchg
movsl
xlat
or
jl
or
pop
add
es
in
ret
orl
sti
loopne
std
ret
push
cmp
negl
aas
xor
xor
mov
inc
and
cmp
jnp
orl
mov
jle
lea
cmp
iret
pusha
push
stos
test
dec
ret
jns
insb
fcoms
ret
sub
imul
iret
mov
dec
stos
fwait
jmp
enter
jo
xchg
mov
inc
stos
pop
and
or
mov
pushf
movsl
adc
add
aaa
lock
roll
sub
mov
lcall
out
add
sbb
ret
stos
and
ret
js
sub
xchg
lods
push
test
popl
and
fwait
push
mov
mov
loope
push
cmp
test
cpuid
add
sbb
jmp
ljmp
mov
pop
pop
mov
cmp
stc
nop
roll
add
pop
mov
or
push
bound
or
adc
lock
jb
push
jecxz
xchg
leave
mov
mov
loope
fdiv
movsb
out
ret
int3
jecxz
shl
pop
adc
ret
mov
mov
push
xor
inc
mov
jo
mov
ret
lods
cmp
out
add
adc
mov
adc
cmp
push
pop
sbb
and
pop
std
testb
jg,pt
clc
outsb
in
xchg
mov
cli
push
pop
mov
test
xchg
shlb
call
mov
stos
jge
mov
or
xchg
out
pop
ret
xor
jb
jg
ret
rorb
inc
shl
mov
daa
adc
stos
pop
jb
ljmp
push
test
imul
xchg
adc
lods
sub
mov
vmovlpd
stos
mov
mov
popf
xchg
in
jnp
insl
pop
push
xchg
ret
mov
decb
add
lret
shrl
pusha
stos
xor
cmpl
in
cmp
pop
pop
inc
mov
repz
xchg
dec
ret
cltd
cmp
mov
dec
lahf
ret
mov
je
mov
aaa
pop
pop
std
xchg
mov
xchg
jnp
psrlq
or
int
imull
outsb
call
lea
inc
scas
in
xchg
int
sub
add
xor
pop
mov
jns
sbb
lods
fidivrs
dec
cli
cmp
sbb
xchg
mov
adc
dec
pop
jge
ret
out
mov
cmpsb
jp
cltd
ret
push
inc
das
sub
mov
scas
cmp
xor
xor
fistpl
nop
push
push
orb
push
pop
mov
mov
out
shl
hlt
sub
add
nop
adc
mov
jns
push
ja
add
mov
ret
aaa
ljmp
cltd
cmp
mov
repnz
int
arpl
lea
push
shl
ret
xchg
mov
shll
cld
ret
jne
adc
inc
lret
cli
lds
mov
xchg
icebp
add
daa
mov
xchg
shll
cmp
ret
mov
aas
test
ret
scas
lret
xor
mov
mov
jno
lahf
and
xor
mov
enter
int
or
lret
xor
in
addr16
pop
into
jmp
fistps
mov
hlt
mov
cmc
ret
aad
inc
popl
sub
jnp
xchg
imul
movsb
stos
jns
ret
outsb
ret
xchg
xchg
fsub
inc
scas
push
ror
jl
loope
jbe
mov
fs
sbb
adcl
scas
test
fidivrl
fwait
ret
mov
jp
adc
mov
shlb
xchg
iret
stos
add
ret
push
out
inc
jae
sbb
adc
jl
mov
pop
mov
dec
mov
mov
pop
mov
into
incb
xor
mov
jg
out
rcr
js
in
adc
jle
mov
dec
xchg
inc
mov
mov
push
adc
jmp
pushf
or
mov
mov
stos
pusha
push
push
fadd
push
ret
sbb
jns
ret
inc
dec
outsl
and
push
adc
sti
xchg
ret
xlat
test
jnp
ds
and
adcl
xchg
pusha
je
ss
jnp
or
xchg
dec
in
iret
jg
loopne
cmp
inc
cmp
jne
mov
ret
test
mov
aam
repnz
addb
jmp
cmp
cmc
ret
mov
or
ret
dec
xor
ret
das
or
nop
push
mov
xor
mov
add
push
xlat
xchg
inc
or
mov
sbb
xor
aaa
repnz
icebp
xchg
in
subb
dec
dec
test
mov
xor
fnstenv
call
pop
repnz
inc
xor
mov
ret
jge
pop
xor
sbb
jle
push
mov
add
pop
lock
mov
ret
into
outsl
fdivrl
leave
ja
inc
rolb
ret
cmc
cmp
dec
cmp
push
xchg
icebp
ret
movsl
pushf
sbb
add
or
rcll
rep
dec
xor
loope
outsb
jns
mov
insl
loope
aas
dec
orb
inc
sbb
adc
xor
shrb
mov
test
nop
out
ret
sub
lds
xchg
es
mov
mov
mov
fsubrl
sti
ret
bound
jo
or
roll
mov
movsl
push
cmp
add
mov
push
pop
test
stc
pop
ljmp
add
sarl
aad
xchg
mov
sub
adc
nop
fwait
clc
aam
jb
push
mov
push
and
dec
or
lret
mov
xor
jae
push
je
xchg
lods
mov
ret
mov
mov
mov
nop
inc
popa
xor
push
idiv
popa
pushf
cmp
add
xchg
mov
sub
mov
inc
ret
je
lret
in
cmc
sbb
inc
mov
jb
in
mov
stc
inc
ret
outsl
adc
rcrl
out
mov
sub
cli
stos
jno
add
in
lods
and
mov
dec
test
mov
pusha
jo
push
std
lss
and
mov
push
add
xor
out
mov
ret
mov
dec
mov
sub
hlt
fwait
mull
pop
mov
jp
data16
ja
ret
sbb
push
cmp
mov
in
ret
rorb
jecxz
inc
mov
inc
int
gs
cmp
mov
out
ret
enter
aad
mov
idivb
cmpsl
xchg
pop
das
out
adc
clc
outsb
mov
cmpsl
mov
adc
insb
cld
mov
loopne
cmp
cmpsb
sbb
push
pushf
in
sbb
push
popa
sbb
rol
lock
neg
dec
cmp
stos
mov
call
xor
cmp
loope
xchg
clc
sub
adc
loop
std
and
dec
cmp
xchg
mov
mov
ret
iret
mov
inc
xchg
mov
mov
inc
adc
push
test
cwtl
lea
xor
or
sbb
mov
or
ret
aaa
and
add
mov
or
mov
inc
adc
jp
ret
mov
pop
mov
and
bswap
xor
gs
dec
lods
test
and
pop
ja
test
pop
mov
test
enter
dec
push
xchg
add
and
fadd
cwtl
loopew
pushf
test
cmpsl
in
ret
sbb
add
push
push
sahf
or
mov
inc
bound
pop
sub
loop
repnz
mov
jae
push
ret
push
imul
fs
and
ret
cmp
push
xchg
imull
popf
add
aas
loop
mov
ret
insl
aas
inc
movsb
rol
ret
out
movsl
loope
mov
repz
inc
mov
add
test
mov
stos
xor
dec
ret
cmc
jnp
or
mov
out
add
mov
ret
xchg
fs
jo
andb
popl
cmp
addr16
sbb
in
mov
xor
add
adc
and
mov
dec
pop
pop
loopne
add
fwait
add
mov
bound
and
in
movsl
add
mov
aaa
rclb
xchg
loope
xchg
cwtl
ret
dec
gs
and
test
inc
clc
mov
jbe
imul
mov
push
pop
sbb
lods
into
add
hlt
and
cmpsl
lock
loopne
shl
xlat
repnz
mov
dec
sbb
ret
and
aad
lcall
adc
lahf
and
rolb
mov
aad
jecxz
imul
jbe
ret
xor
cwtl
or
cmp
jmp
ljmp
cs
ret
leave
outsl
in
xchg
ror
pusha
cmp
es
bound
and
shr
shl
ret
arpl
loopne
loopne
loop
ret
or
test
outsb
lret
adc
lea
std
jne
pop
sbb
test
and
test
insl
sbb
push
ret
sub
js
aad
xchg
mov
popf
xor
loop
and
cmc
testl
mov
ret
dec
cli
cmp
cmp
mov
loopne
ja
jle
add
imull
mov
inc
sbb
mov
in
or
scas
adc
andb
cmp
mov
jns
int3
ret
xchg
xchg
jg
fsts
ret
outsb
xor
or
sbb
sbb
gs
inc
ja
nop
loopne
jecxz
clc
out
and
outsb
mov
fadds
out
dec
call
cmp
jnp
ret
lret
sahf
xlat
push
xchg
ss
cmpsl
fimull
xchg
mov
push
jge
popa
mov
mov
je
ret
jg,pn
mov
repnz
lods
shrl
cmpsl
test
add
ret
test
mov
cltd
std
dec
out
xor
aaa
addr16
push
cmpsb
sbb
ds
xchg
push
imul
enter
js
cmp
inc
sub
add
push
mov
sub
mov
aaa
bound
push
rorl
sarb
jae
pop
ja
mov
mov
ret
dec
sub
sub
dec
js
ret
mov
mov
out
jg
dec
in
clc
jne
in
je
ret
lahf
mov
ret
sbb
sbb
stos
cmp
fisubs
lods
aad
mov
mov
sysexit
das
mov
push
dec
ret
xchg
outsl
gs
push
daa
ret
sub
mov
scas
xchg
insb
xchg
inc
popa
hlt
or
sbb
mov
enter
jae
in
loope
mov
xchg
push
stos
cltd
pop
inc
jbe
test
or
mov
xor
loope
adc
inc
dec
dec
cmpsb
mov
pop
xchg
popa
pop
add
inc
mov
dec
dec
ret
xor
inc
fisubs
scas
je
fimull
mov
pusha
inc
insb
pushf
test
ret
movsb
sub
pop
sub
xor
stos
aas
in
pop
jge
push
cltd
xchg
dec
dec
mov
subl
ret
imul
adc
pop
push
sbb
push
ret
mov
mov
scas
xchg
sahf
xor
ret
sti
inc
ret
test
ja
popf
sub
mov
cmc
ljmp
and
mov
jg
ret
jo
scas
test
fnstcw
cmpsb
clc
inc
sub
nop
mov
popa
mov
dec
add
push
cmpsl
dec
cmp
mov
dec
push
mov
test
test
jg
or
mov
repnz
scas
xchg
cmp
inc
insb
insl
testb
es
push
and
inc
jle
mov
shll
sbb
jp
mov
inc
push
rcrb
mov
jl
mov
or
dec
inc
mov
lods
and
pop
inc
test
fldt
xchg
in
mov
jge
push
subb
dec
mov
mov
xchg
mov
out
push
popa
and
mov
inc
fldenv
lret
repz
push
cli
rorl
cwtl
add
jmp
repnz
sbb
jno
movsb
out
into
ljmp
jmp
sub
rclb
cmc
cmp
and
lods
mov
jg
ret
add
pop
xor
and
loope
jmp
pop
cmp
xchg
mov
sub
int3
inc
inc
test
stos
in
mov
sbb
mov
ret
sbb
mov
xlat
push
ret
jge
inc
adc
cmp
mov
and
sbb
aaa
or
in
and
lret
cmp
loope
and
lock
ret
in
xchg
cmp
stc
add
shrb
push
add
mov
loop
xor
lea
ret
subl
loop
xchg
movsl
ret
lods
negl
aaa
mov
leave
sbb
xlat
bound
and
mov
je
or
rcr
mov
fimull
jns
jecxz
in
in
push
mov
out
adc
jp
sbb
shrb
pop
jne
add
mov
ret
jle
mov
std
mov
popa
in
pop
and
jns
dec
cli
xchg
test
jle
xchg
repz
mov
imul
jo
cmp
pop
insl
lods
ret
sub
gs
mov
mov
push
js
sar
ret
dec
adc
dec
jl
cmc
inc
sub
test
xchg
scas
test
pop
mov
mov
dec
mov
add
mov
mov
push
cmp
mov
pop
xor
and
aaa
ja
stos
fidivs
mov
mov
scas
sbb
insb
movsb
mov
js
adc
xchg
scas
mov
pop
pop
lds
leave
pop
icebp
mov
scas
insl
ljmp
ret
adc
mov
repnz
add
loop
ret
outsl
inc
test
ret
inc
cmp
imul
xlat
outsb
mov
xor
lahf
jecxz,pn
mov
mov
add
mov
or
push
inc
shlb
mov
rcr
xor
aaa
jecxz
pop
cmp
loope
mov
sub
push
inc
jge
ds
mov
jecxz
add
cmp
push
ret
adc
ds
lret
setg
pusha
ljmp
dec
lretw
sbb
cmp
mov
jae
mov
ret
mov
adc
mov
ret
jo
sub
ds
ret
dec
or
arpl
sbb
out
jmp
ret
bound
pushf
ret
jmp
sarl
das
test
push
mov
mov
insl
mov
in
adc
ret
mov
inc
add
in
int
dec
ret
sub
mov
add
xrelease
jle
cwtl
push
scas
pusha
out
add
test
jecxz
lret
xor
test
jns
mov
loope
subb
mov
lret
imulb
mov
test
mov
lods
les
dec
mov
sbb
jle
jns
dec
adc
mov
in
ret
outsl
mov
data16
test
mov
call
and
mov
pusha
xchg
outsl
mov
or
sbb
mov
scas
xor
aas
jmp
lea
loopnew
lret
push
and
cmpsb
orl
mov
pop
in
mov
stos
ljmp
add
or
aaa
sti
ljmp
push
pop
cmp
jg
repz
add
lds
xchg
ret
mov
out
jo
jb
xlat
into
xorb
scas
jbe
iret
pushf
fisubs
test
clc
nop
or
jae
inc
mov
xchg
test
rorb
aas
sahf
ret
pop
popa
mov
sub
call
adc
cmpsb
jl
cmp
aaa
mov
inc
test
in
lahf
lret
mov
jne
xor
sbb
loop
push
adc
xchg
sub
movl
stos
ret
adc
movsb
stos
sbb
out
xor
ret
add
or
xor
std
mov
xor
or
test
sarl
xor
ret
sub
mov
test
xor
scas
mov
mov
push
dec
mov
ljmp
xor
sbb
mov
jno
cmp
aaa
sub
in
adc
pop
adc
inc
les
xchg
cmp
and
add
test
cmp
xchg
clc
dec
lods
mov
out
xlat
and
fdivl
mov
lret
rcll
stos
sbb
roll
jb
sub
add
push
and
imul
and
dec
ret
cli
dec
xor
ret
xor
push
lods
pop
push
mov
inc
jb
fwait
push
test
pop
inc
cmp
jmp
add
fdivs
aaa
mov
xchg
add
stos
movsl
mov
ret
or
scas
arpl
mov
ret
movl
test
dec
mov
jmp
mov
mov
test
jae
jle
clc
cmp
mov
orb
or
fsubs
pop
sub
push
mov
push
fdivr
pop
rdpmc
jl
iret
push
mov
stc
lret
into
in
push
repnz
mov
popf
mov
iret
ret
fcmove
xor
lret
mov
sbb
mov
in
mov
addb
loop
inc
sub
hlt
push
sub
cmp
jg
mov
mov
and
xor
je
ret
cwtl
mov
pop
mov
loope
inc
test
or
mov
cltd
gs
or
jmp
pop
ret
push
pop
jb
sbbl
add
add
xchg
punpcklwd
fnstsw
mov
jge
jge,pn
aaa
pop
inc
or
setge
pop
mov
xor
jp
rcrb
sahf
daa
lcall
pop
mov
mov
inc
fsubrs
mov
std
and
call
jl
fcompl
jmp
dec
pop
cmp
dec
adc
fnstsw
outsb
lds
or
popa
out
add
bound
xchg
je
cmp
adc
inc
pop
adc
stos
pop
inc
xchg
adc
inc
pop
cld
lock
cmp
call
icebp
enter
add
bound
iret
jle
fsubrl
lods
adc
movsb
jge
and
lods
push
inc
mov
out
jne
sub
imul
mov
pop
js
daa
fisubrl
and
dec
pushf
daa
das
pop
lea
bound
inc
call
xchg
and
xchg
in
mov
sbb
cli
pop
or
and
xchg
loopne
data16
rol
inc
adc
ds
test
int3
pop
sbb
mov
sbb
fsubrl
lods
popa
test
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
dec
dec
xor
cs
insb
add
fs
mulb
or
test
cs
mov
inc
lds
out
dec
push
aad
test
xlat
push
pop
rclb
mov
pop
es
add
push
pusha
daa
mov
or
ret
pop
and
jns
push
lcall
dec
jle,pn
or
mov
cwtl
rclb
fsts
sub
mov
adc
aad
add
jno
mov
xchg
lret
or
arpl
mov
inc
inc
mov
or
xchg
test
cmp
test
test
in
dec
fsubrl
stos
cltd
mov
fdivrs
dec
shlb
and
xor
bound
or
out
mov
std
in
out
aaa
idivb
jnp
imul
loop
xchg
sub
loope
xchg
test
cmp
sub
cmp
and
xor
add
lods
mov
xchg
xchg
sub
repnz
lahf
jp
mov
pop
jecxz
mov
jg
push
addr16
lcall
xorl
sbb
jne
or
popa
push
out
fsubrl
stos
lods
int3
pushf
lcall
imul
sbb
lret
iret
push
adc
fsubs
xor
sub
enter
cmc
sbb
push
test
mov
adc
hlt
adc
addr16
cli
fsubrp
out
pop
jae
out
xchg
lcall
dec
and
xchg
out
scas
dec
fwait
mov
xor
inc
xchg
in
cld
jnp
decl
or
fcomps
sbb
mov
bound
fsubrl
stos
xchg
lea
jne
test
mov
btr
shl
shl
bt
sub
bt
bswap
rcl
mov
pushf
sub
clc
pusha
pushl
popl
push
cmp
pusha
lea
ja
ror
sub
sar
stc
mov
add
mov
bswap
mov
stc
neg
clc
mov
bt
jl
cmc
pusha
repnz
pushf
pushf
lea
jne
movzbw
call
adc
dec
test
in
pop
jae
ja
frstor
lcall
xchg
lcall
es
jle
fwait
in
mov
and
mov
adc
scas
jl
adc
adc
mov
sbb
rclb
xchg
jne
and
loop
aam
inc
ds
push
push
repnz
out
push
cmp
jb
icebp
hlt
int3
sti
jl
cmp
jno
ja
test
sub
loop
sarl
loopne
mov
xchg
aas
push
pop
clc
mov
mov
fstp
sub
ja
sub
outsl
pop
sub
lcall
stos
rolb
dec
fisubrs
aam
lahf
add
imul
pop
push
pop
in
mov
or
xorl
dec
bound
xchg
in
mov
xchg
fs
and
and
sbb
in
movsb
aad
push
cwtl
xchg
rcrl
xor
out
jmp
push
inc
inc
xchg
lret
es
movsb
push
shrl
push
cmp
movsb
or
add
add
xchg
sub
fidivl
fsubrl
test
mov
or
jne
xchg
cwtl
test
inc
pop
jp
sub
and
test
xor
fists
push
push
test
jecxz
fidivrs
fsubl
add
aas
fnstenv
inc
jno
cwtl
fsts
add
and
out
pop
push
sar
ss
mov
push
sti
loopne
adc
mov
incl
cmc
mov
call
pop
dec
lock
sub
stos
ret
jg
cmpsl
rolb
adc
rorb
mov
jns
inc
les
pop
fsubrl
cli
std
stc
mov
shrl
mov
es
nop
push
and
ja
mov
push
adc
mov
mov
int3
adc
add
xchg
les
addr16
fnstsw
adc
xchg
sbb
insl
shr
inc
rcrb
leave
cmp
dec
xor
xchg
pop
mov
lock
scas
pop
cmp
sub
or
setp
mov
push
pusha
stc
and
movb
add
pushf
pushl
pushl
lea
jmp
xor
jns
xor
repnz
pop
mov
sub
shl
sbb
jbe
adc
sahf
jns
xor
ds
push
rclb
in
cmp
push
movzwl
xchg
xor
inc
inc
mov
push
negl
mov
dec
jecxz
and
dec
mov
mov
movsl
imul
add
ret
icebp
cli
pop
jo
jns
xor
xorl
dec
out
out
insl
adc
mull
bound
sub
leave
gs
push
lds
fists
push
dec
push
push
dec
mov
imul
cmp
xchg
jo
mov
add
dec
fists
movsl
pushf
inc
adc
sub
add
nop
pop
xchg
sarb
movsl
adc
sbb
addb
hlt
fs
movsb
lods
xor
daa
xchg
mov
adc
in
imul
mov
and
js
scas
int
stc
repnz
pop
sub
jmp
xchg
cld
imul
mov
and
mov
sub
add
mov
fidivs
push
pop
jecxz
dec
sti
dec
xchg
enter
aam
jb
or
mov
xchg
pop
cmp
test
pop
sub
bound
mov
xchg
lods
xchg
lcall
lcall
test
sbb
sub
clc
dec
inc
mov
add
cmpsb
mov
xlat
leave
cwtl
sub
cltd
xchg
mov
mov
movsl
fwait
lock
add
mov
inc
addr16
loope
and
jmp
mov
jb
xor
into
fsubrl
cmpsb
sbb
mov
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
ljmp
outsl
bound
negl
inc
mov
pop
outsb
in
add
pop
iret
xor
test
sub
outsl
mov
inc
and
adc
lods
imul
lea
fdivrs
add
inc
inc
push
pop
out
icebp
dec
xor
shlb
adc
or
std
out
sub
lds
and
movsl
jae
jecxz
adc
mov
push
cld
adc
or
flds
mov
pop
scas
pusha
adc
lods
int3
xchg
bound
cmp
lret
pop
dec
sbb
std
jbe
jg
outsb
sub
lret
out
xchg
gs
cli
adc
scas
mov
lods
ja
sub
out
xlat
in
jl
push
in
add
mov
fidivrl
jb
mov
jno
sbb
ret
cmc
je
loop
cmp
push
adc
in
fsubrl
movsb
out
ja
pusha
call
xchg
sub
xchg
aam
jns
inc
xchg
and
xlat
push
dec
push
ret
cli
add
out
mov
fwait
imul
out
hlt
outsl
jo
xchg
xchg
cmp
or
sbb
je
jnp
sub
mov
into
data16
add
mov
in
mov
testl
push
and
and
hlt
jg
mov
adc
jp
dec
pop
sub
add
lcall
jmp
outsb
mov
mov
imul
adc
std
movsb
xor
std
fsubrl
mov
mov
pop
cli
fs
add
cmp
fsubrs
outsb
insl
je
scas
jge
cli
cmc
lods
xchg
je
mov
mov
sti
sub
jns
sub
js
mov
enter
or
fldt
arpl
adc
sti
add
stos
inc
imul
cmp
mov
aaa
pop
inc
or
shll
sub
aas
push
inc
xorl
repz
jg
xorl
mov
xor
out
fsubrl
mov
fsubs
in
shr
pushf
call
and
arpl
aad
and
cmp
cmp
xchg
add
ja
xchg
dec
xor
insl
fwait
jmp
mov
out
jae
mov
cmp
loopne
adcl
push
dec
jl
jg
in
add
out
xor
in
arpl
xor
sbb
jnp
adc
jb
mov
sub
outsb
movsl
cmp
mov
cld
xor
mov
cld
jmp
jns
pop
push
adc
mov
sub
je
add
lea
je
cmp
stc
cmp
sub
pushf
clc
stc
cmp
movw
pusha
jmp
adc
lea
pusha
pushf
jmp
sbb
sub
mov
add
fld
push
sbb
test
push
mov
imul
popf
sub
lahf
mov
mov
pusha
jnp
popa
adc
pop
mov
pop
and
out
xchg
stos
scas
adc
or
les
sbb
sbb
out
aad
fwait
pop
ds
addl
and
inc
jo
arpl
cmc
mov
aas
cs
and
sub
les
sub
clc
lea
jbe
stc
neg
pusha
rol
call
adc
loopne
jns
and
data16
jmp
jno
ljmp
mov
stos
ret
jnp
jge
push
bound
dec
jp
lcall
add
push
test
sbb
lds
outsl
aam
fisttpll
ja
pop
icebp
jno
push
lock
imul
pop
testl
mov
movsl
test
mov
push
add
mov
fs
jne
push
jmp
pusha
xor
pop
xchg
sub
jmp
in
sti
bound
cmp
push
mov
aaa
mov
fdivr
mov
inc
int
out
mov
cld
pop
out
cwtl
outsl
jnp
push
nop
lret
scas
bound
jmp
jns
test
xchg
add
push
icebp
inc
mov
jns
or
in
ret
sub
sub
pushl
cli
or
jb
mov
dec
js
imul
loopne
jecxz
add
xchg
adc
jl
adc
pop
icebp
test
xor
mov
js
mov
loope
or
inc
mov
movsb
daa
dec
ja
push
movsl
sub
sbb
loope
push
pop
push
int
xor
cli
leave
nop
aas
fsubrp
les
add
ljmp
mov
rclb
movb
aas
pop
test
scas
cmp
loop
xchg
dec
sbb
cld
cmpsl
pop
mov
ret
push
fadds
out
and
dec
sub
fildll
ret
mov
pop
jmp
rcrb
add
popa
stc
jb
adc
test
jno
jno
imulb
fwait
movl
push
mov
loop
push
shl
addl
sbb
test
mov
sub
loop
cmp
sahf
xor
mov
add
daa
ds
fs
and
outsl
subl
outsb
fsubl
inc
fucomip
mov
into
push
xor
mov
test
sbb
mov
shll
dec
fldcw
sub
xchg
enter
adc
gs
add
clts
jne
jmp
mov
outsl
push
mov
test
pop
scas
cmp
shrb
pop
cmp
aaa
mov
inc
lods
sbb
xchg
mov
push
dec
ds
fwait
test
mov
sbb
lods
popa
gs
mov
test
mov
xchg
in
dec
mov
sbb
rcll
nop
cmp
stc
lods
lret
cmp
dec
mov
call
cmp
inc
scas
cli
add
adcl
mov
mov
sub
mov
idivl
mov
xchg
add
pop
push
sahf
aad
fwait
jp
test
sahf
orl
cs
lods
push
loopne
pop
and
int3
repz
xor
aad
dec
imull
fidivrl
fwait
enter
mov
or
sub
adc
jno
push
in
jnp
roll
xor
pop
test
pop
cli
sbb
mov
fists
add
and
dec
int
dec
add
je
neg
sub
call
cmp
add
call
xchg
sub
push
jg
scas
add
pusha
pop
into
std
push
fistpl
and
fisubs
cmp
test
shr
sbb
mov
loop
adcb
adc
scas
arpl
adc
mov
mov
inc
jle
bound
pop
out
addb
and
je
stc
lods
dec
push
lods
cmp
xor
push
adc
jo
fisttps
push
in
mov
pop
mov
pop
mov
add
sti
repz
cmp
adc
jmp
pop
and
add
add
cwtl
cmpsl
push
int
imul
sbb
popf
scas
iret
jg
sub
mov
sub
push
stos
rolb
divl
movsl
add
push
xchg
mov
js
ss
add
mov
cmp
sbb
push
mov
sbb
push
pop
sub
inc
mov
ds
cltd
mov
cs
xchg
push
mov
sub
data16
push
movsl
fcoms
sahf
sbb
fdivs
and
fsubrl
popf
out
xlat
jge
movsl
movsb
dec
push
pop
int3
adc
mov
out
lds
repnz
fiaddl
push
lods
jmp
imul
cmp
nop
dec
mov
sbb
adc
call
push
dec
stos
mov
sbb
xlat
in
jl
push
adc
adc
push
ss
lock
push
lret
fsubs
mov
jno
dec
repz
pop
test
sub
and
rorl
jg
fimuls
hlt
clc
or
lea
push
add
fisubrs
sbb
inc
pusha
sarb
hlt
addr16
shl
push
insl
jl
or
fildll
adc
stos
cli
dec
enter
dec
jge
mov
and
xor
xchg
test
lock
fcom
mov
pop
ffree
push
fwait
adc
subb
mov
lock
pop
add
jno
cmp
cmp
jo
xchg
pop
aas
mov
pop
pop
inc
dec
lret
out
ljmp
and
push
cwtl
pop
fimuls
push
pushf
sub
in
bound
cltd
mov
sub
mov
or
test
fsts
pop
xor
idivb
mov
scas
imul
jns
out
stos
sbb
rcr
jo
mov
daa
and
adc
sub
aas
xor
jl
cmpsl
sti
stc
gs
add
dec
push
xor
jno
push
mov
insl
in
imull
inc
ret
cwtl
pop
outsb
insl
cmp
mov
fisttps
sub
xchg
lea
sbb
mov
je
adc
es
sub
mov
lock
xchg
rclb
jl
mov
ret
jmp
std
sbb
jb
dec
add
ror
or
loop
stc
jp
fisubrs
cmp
gs
cld
out
imul
sub
icebp
mov
stos
xor
sbb
cs
adc
std
out
je
shlb
push
push
cmp
fwait
sub
iret
clc
push
dec
pop
scas
xchg
cmpsl
push
imul
out
mov
sub
movl
pop
neg
mov
call
call
lea
jae
cmp
cmp
push
pusha
movw
jmp
mov
pushf
movl
lea
jmp
pop
movsl
movsb
and
xchg
fsubrp
fisubrl
cltd
add
outsb
int
pop
mov
mov
cmp
xor
ss
hlt
push
jp
sbb
out
repz
in
xchg
pop
cs
popa
rol
outsb
push
cmp
mov
shll
movsl
mov
aad
xor
mov
popa
mov
and
mov
enter
sbbl
sbb
bnd
mov
adc
push
sub
mov
mov
push
lahf
mov
mov
pusha
pushf
pushf
pushf
lea
jmp
dec
shr
shrd
pop
clc
lea
mov
ror
add
mov
bswap
mov
pusha
mov
lea
push
jmp
dec
mov
inc
cwtl
sti
sub
push
arpl
xor
addr16
cmp
inc
cmc
jae
xchg
incl
hlt
mov
aaa
mov
stc
repnz
aad
je
sub
push
das
dec
or
pop
test
mov
and
fnsave
push
adc
push
cli
xor
mov
adc
sahf
cltd
or
add
xchg
jmp
hlt
stos
stos
dec
and
sahf
inc
add
sub
pop
jl
xor
pop
cwtl
in
fs
imul
push
sbb
jmp
push
xor
xchg
mov
pop
or
inc
mov
fs
outsb
scas
pop
fnstcw
push
inc
mov
mov
xchg
pop
push
xor
sub
adc
cmpsl
repz
jle
adc
or
mov
cmpsb
jne
sbb
pusha
mov
mov
or
in
call
push
adc
stos
dec
cmp
popf
xor
add
daa
xchg
pop
call
pop
shrl
pop
dec
mov
cmpsl
cmc
in
repz
dec
add
or
jbe
dec
ficomps
mov
sti
frstor
jle
cmp
lcall
pop
loopne
pop
push
dec
imul
push
fldenv
push
xchg
add
ljmp
orb
test
into
movsl
push
jmp
test
sub
sub
test
cmp
pusha
pushf
lea
jae
push
push
lea
jmp
shrl
subl
repnz
mov
dec
les
lds
filds
and
std
cmp
xlat
test
xchg
das
push
insl
into
or
adc
or
jne
sub
mov
mov
cmpsb
cmp
fsubrs
cmc
out
xorb
mov
and
out
pop
aas
fsubrl
xchg
jle
xor
fs
popf
out
leave
lods
xchg
xorl
aam
shl
xor
sahf
lea
xor
adc
pop
pop
cmp
repnz
sub
bound
mov
imul
pop
outsb
xor
pop
xor
cmp
clc
cmpb
cmp
imul
into
inc
mov
lea
iret
jmp
outsb
jmp
jnp
sbb
xor
adc
cmp
es
mov
add
push
mov
mov
push
movsl
pop
xor
stc
fsubrl
xchg
inc
xlat
out
pop
or
mov
xlat
les
bound
mov
and
or
mulb
std
inc
out
pop
push
repz
pop
pop
pusha
jmp
jmp
sub
mov
mov
push
sbb
push
dec
or
fstl
mov
mov
dec
cmp
dec
jle
sbb
lret
push
and
pop
insl
inc
jmp
push
rclb
cmc
aam
cmp
sub
inc
mov
mov
xor
xor
gs
mov
sbb
cmp
dec
sbb
in
sub
pusha
jge
inc
push
int3
sbb
dec
fs
pop
adc
mov
out
add
mov
xchg
sbbl
pop
jmp
sahf
push
jmp
sub
sub
xorl
cmp
call
sbb
icebp
insb
xchg
dec
or
aad
mov
cltd
sbb
xor
fisubrl
ja
mov
idiv
popa
mov
je
xor
popf
mov
repz
mov
jne
mov
cld
sbb
lahf
push
sarb
pop
and
repnz
loop
or
aam
decb
jo
fs
xchg
mov
fnstsw
cmc
in
ds
push
sbbl
sub
mov
imul
jae
cltd
fdivrs
push
test
push
mov
js
xchg
jae
jno
xchg
jbe
mov
push
cmp
stos
adc
bound
xchg
fdivr
mov
ds
pop
or
jbe
fildl
inc
popf
addl
jo
xchg
pop
andb
loop
ljmp
and
xchg
ss
xchg
test
fmuls
bnd
call
pop
sub
fsubrl
xchg
dec
outsb
fidivs
or
inc
inc
dec
cmp
in
fs
or
out
push
and
push
mov
cmpsb
and
jb
jl
cltd
imul
ds
cwtl
test
jmp
xor
sarb
aaa
add
ret
push
cmp
cmp
ficompl
mov
jno
into
outsb
push
xor
js
mov
sbb
sub
sub
sti
bound
or
dec
ficomps
sti
mov
clc
outsl
scas
and
adc
push
sub
cltd
mov
push
xor
cli
and
xor
fmull
jl
inc
and
sbb
shll
shrb
and
popf
or
adc
orl
out
pop
push
shr
cmpsb
pop
aad
insb
xchg
dec
roll
das
in
in
xor
mov
xchg
push
sub
push
xor
xor
fs
insb
add
sub
test
jp
clc
inc
dec
pop
lcall
xor
push
xor
dec
call
popf
insl
sub
xchg
jb
push
hlt
test
sarl
arpl
cmpl
in
adcl
pop
lds
inc
cmpsb
xchg
mov
and
lock
int3
jbe
mov
iret
cmpsb
aaa
adc
sarb
cmpb
pop
stos
xchg
jmp
mov
adc
sbb
mov
push
push
mov
cmp
scas
sbb
xor
sub
jge
add
dec
fsubrl
xchg
mov
xor
lret
aam
xchg
sbb
out
push
and
fcom
stos
shrb
fsubl
mov
pop
das
sub
mov
es
xchg
adc
jle
arpl
dec
adc
mov
iret
in
popa
push
cli
movq
jecxz
or
clc
idivl
int
push
xorl
fdivs
or
rorl
xchg
pusha
das
push
in
mov
mov
sub
dec
inc
inc
push
push
xor
cs
insb
add
push
xchg
frstor
mov
xchg
lock
inc
insl
movsb
roll
add
int
cmc
shll
jnp
movsb
lods
sti
dec
mov
clc
call
add
add
mov
jae
dec
cld
push
ret
pop
or
mov
sub
dec
dec
ds
loopne
lret
les
xor
xor
test
loope
ja
pop
das
dec
mov
mov
shrl
sbb
adc
nop
aas
cmc
aam
add
sub
jmp
mov
mov
mov
adc
cmp
mov
jne
add
in
mov
insb
das
aaa
inc
leave
shrl
sti
icebp
mov
mov
out
fs
shlb
iret
lahf
mov
xchg
les
sahf
sub
stc
adc
or
pusha
jns
mov
nop
sbb
cmpsl
sub
aad
dec
add
lods
pushf
pop
mov
in
mov
loop
adc
out
adc
cmc
pop
push
xor
sub
cmpsb
sbb
fsubrl
xchg
xchg
mov
cmp
stc
add
pusha
call
pusha
xchg
mov
bt
bsf
xchg
bsr
rcr
mov
bsr
movzbw
mov
shl
bts
bts
mov
sbb
xadd
xor
mov
neg
sar
sub
lea
jmp
add
push
gs
jb
popa
je
dec
gs
js
add
pop
jle
mov
sub
jnp
cmp
adc
or
lea
pop
in
insl
or
inc
sub
jnp
stc
dec
or
dec
loop
push
enter
pop
dec
clc
idiv
int3
loop
fs
mov
loopne
rcpps
fisubs
mov
xchg
adc
idivb
mov
xchg
sub
jae
orl
jns
xor
sbb
jmp
jne
adc
push
jmp
sub
jb
rcr
xchg
push
cs
jmp
pushl
lea
call
cmp
pushf
pushf
cmc
cmp
call
cmp
pop
cwtl
adc
decb
add
dec
leave
sub
sub
xchg
mov
xor
jecxz
pop
hlt
mov
or
repz
cmp
xchg
sbb
mov
repz
inc
inc
popf
mov
add
cli
clc
pop
lret
les
jnp
sbb
cld
jns
iret
pop
fwait
and
pop
insb
mov
inc
iret
and
xchg
pop
jmp
cmpl
mov
popf
fadds
mov
jne
shll
pop
inc
jecxz
mov
sub
sub
rcr
dec
mov
or
mov
jae
test
xor
or
mov
sbb
pop
add
push
jb
jp
dec
push
fs
sub
sub
pop
lods
add
ss
sbb
add
cmp
push
sbb
inc
es
pop
sub
pop
pop
mov
int3
aam
data16
lcall
pandn
loopne
pop
dec
addr16
cmpsl
dec
movsw
mov
shll
cwtl
add
mov
aam
lcall
pop
mov
pop
clc
fcmovnu
sub
mov
xchg
add
xor
xlat
push
adc
sub
popf
je
dec
cltd
lret
scas
lea
mov
inc
inc
dec
aam
mov
xchg
lea
xor
or
add
fwait
xchg
je
sub
cld
aam
mov
outsl
lret
or
mov
add
daa
lret
or
mov
pusha
xchg
push
std
int3
xchg
inc
icebp
nop
aaa
out
lds
js
sub
jg
insl
inc
cmp
mov
test
sbb
adc
mov
cmpsb
std
mov
bound
mov
hlt
lock
jae
xor
sub
dec
xor
in
mov
repnz
mov
jno
adc
call
scas
jae
das
inc
lds
jmp
lods
push
outsb
xlat
stos
aad
jle
iret
es
pop
pop
es
fsubrl
lea
push
in
sbb
jg
in
cmp
repnz
pop
lods
in
mov
enter
les
jno
adc
test
bound
cltd
mov
int
mov
cmpsb
pop
mov
xrstors
dec
pop
sbb
imul
xor
test
sub
dec
sti
sub
call
cltd
call
xchg
mov
pop
xchg
sub
ret
xlat
mov
lods
dec
loop
js
cs
lea
add
pop
aas
dec
cmp
movsl
in
inc
cmpb
out
ja
mov
jbe
jnp
mov
pop
cli
dec
jp
sahf
lds
jp
data16
leave
xchg
sbb
loopne
mov
adc
sbb
cmp
fidivrl
ja
push
insl
test
add
aad
inc
ja
in
jnp
roll
imul
mov
sub
adc
and
push
jmp
movl
jmp
push
inc
cmc
stc
neg
clc
shr
pusha
movw
pushf
pushf
lea
je
pushf
pushf
pusha
adc
pushl
push
lea
jmp
jmp
outsl
test
test
cmp
sub
mov
gs
pop
cmpxchg
inc
and
int
roll
xchg
popf
xchg
jg
jo
add
jbe
push
dec
lock
mov
xchg
fmull
in
adc
loope
pop
loope
add
inc
leave
push
ret
inc
pop
les
lods
lods
xor
aad
push
mov
pop
loop
nop
das
out
je
fsubrl
lea
shll
enter
ljmp
pop
out
push
mov
push
adcb
add
sarl
dec
xchg
ss
sub
xor
ret
icebp
out
addb
push
mov
mov
icebp
popa
ja
push
or
mov
pop
or
pop
cmpl
dec
lea
outsb
clc
icebp
push
ret
add
mul
sbb
xchg
adc
shrb
mov
shlb
cmp
fsubrl
mov
add
fs
call
cmc
cmp
push
pusha
pusha
call
pushl
pusha
sub
lea
pusha
movl
mov
inc
lea
jmp
jmp
bound
mov
pop
jnp
adc
cmp
shrb
xchg
in
aam
fbstp
xchg
imul
push
inc
test
push
mov
mov
sub
fbld
sbb
mov
aad
jp
popf
mov
testb
jecxz
and
icebp
stc
jle
sti
mov
bnd
xor
xchg
jmp
mov
jae
push
fistpl
dec
push
xor
fdivrl
xchg
adc
je
add
fsubrl
mov
pop
xchg
mov
call
pusha
pop
xchg
mov
mov
cmpsb
in
dec
mov
xor
xchg
faddl
aaa
popa
lock
lahf
push
mov
clc
daa
push
test
mov
or
mull
imul
out
pop
push
cmp
popf
iret
in
mov
setae
jecxz
gs
mov
or
lret
inc
test
mov
mov
pop
mov
pop
cwtl
dec
bound
aam
sbb
enter
pop
fsubrl
mov
sub
popl
jle
add
stos
rcll
cmpsb
int
inc
adc
in
cwtl
jg
and
xchg
pop
sbb
jp
pop
test
mov
jp
sbb
pusha
iret
mov
mov
add
jno
in
mov
inc
sub
pop
es
xor
in
adc
jmp
inc
test
imul
in
sahf
add
popa
mov
idivb
mov
cmpsl
insl
mov
es
add
sarb
sti
outsb
push
or
add
inc
jmp
xchg
ret
movsw
in
orl
mov
decl
push
and
jbe
cmp
xchg
ret
cwtl
or
push
inc
outsl
dec
mov
pop
push
mov
jle
pop
aaa
xor
lahf
fwait
mov
pop
in
inc
jmp
test
jp
add
or
in
dec
int
mov
sub
or
add
pop
xchg
frstor
jl
mov
push
les
mov
inc
and
mov
sub
mov
lea
ja
bt
push
stc
push
imul
pusha
cmc
movb
cmc
add
pushf
movw
pushf
lea
jmp
mov
sahf
sub
fidivl
xor
xor
nop
das
and
sbb
jl
inc
aam
lea
popf
fsub
insl
je
stos
jecxz
andb
jmpw
inc
das
ficomps
or
sahf
xchg
dec
add
sub
ds
in
mov
pop
stos
mov
adc
sbb
cmp
jnp
sbb
addl
out
sbb
mov
mov
inc
jno
out
sbbl
xchg
stos
popa
jnp
lret
inc
cmp
sbb
inc
cmp
inc
sbb
clc
adc
adc
fwait
or
addl
imul
xor
movsb
aaa
cvttps2pi
repz
das
add
mov
sarb
xor
cmc
cld
mov
pop
add
lcall
hlt
mov
push
cli
mov
lods
jne
xchg
inc
aam
xor
jbe
int
mov
sub
rorb
in
fisttpll
mov
mov
das
imul
inc
enter
cmp
clc
inc
or
jmp
mov
les
ss
mov
cmp
inc
mov
lods
dec
mov
cli
in
ja
subl
test
movl
pop
lcall
pop
bound
mov
daa
cmpsb
insl
sbb
jp
enter
fsubrl
mov
mov
insb
repz
dec
cwtl
fildll
jne
and
dec
lahf
sahf
add
mov
or
cmp
int3
dec
je
mov
inc
push
and
xchg
mov
jmp
lret
pop
cld
std
test
sbb
jp
scas
mov
jo
enter
aas
enter
ficoml
mov
aaa
leave
sti
outsb
xchg
outsl
out
movsl
xor
inc
int3
push
sub
mov
out
mov
imul
nop
mov
out
ret
mov
data16
out
adc
adc
or
xchg
dec
push
push
pop
add
cmp
xchg
xchg
loope
out
fs
or
lods
cltd
jmp
push
xchg
fimull
out
neg
test
jge
les
in
subb
iret
bound
imul
testl
stos
push
clc
push
leave
cwtl
pop
mov
scas
pop
lahf
imul
mov
jae
inc
outsb
pop
xchg
fsubrl
and
ret
inc
mov
orl
xor
gs
mov
mov
cltd
andb
cmc
movsb
fsubrl
test
adc
inc
jb
add
push
inc
and
xchg
pop
cmc
sahf
jo
out
ds
mov
xor
iret
xlat
pusha
inc
arpl
pop
jb
sbb
mov
mov
sub
aaa
inc
add
xor
out
mov
cltd
popf
dec
aam
out
sbb
ja
les
lock
cmpsl
icebp
and
pop
bound
out
dec
mov
xchg
push
pop
xor
dec
lds
es
xchg
and
lea
jbe
stc
movsbl
rcr
movsbw
mov
and
ror
or
add
not
call
mov
jg
mov
jle
cmp
cmp
mov
inc
test
inc
dec
jmp
rcll
push
imul
data16
not
ficoml
xchg
push
test
inc
decl
iret
imul
mov
into
nop
icebp
fs
pop
fisubrs
and
xchg
adc
jle
shrl
das
lcall
loope
add
xchg
mov
hlt
inc
and
jg
arpl
xor
notb
cmpsl
ret
dec
mov
pop
dec
cs
stos
rclb
mov
pop
sahf
mov
rolb
outsb
fsubrl
test
ud0
cmp
sbb
mov
xlat
push
adc
sub
cli
mov
in
lea
cmc
inc
call
scas
ljmp
lods
xchg
rdmsr
and
pop
xor
das
daa
aas
addb
add
jge
es
xchg
fiadds
cmp
cmpb
aam
imul
data16
sahf
std
fadd
jp
nop
ja
lds
sub
inc
dec
xor
cs
insb
add
repz
inc
xor
ds
mov
and
fcoml
sbb
in
xchg
cs
xchg
dec
jb
adc
dec
pop
imul
leave
lock
and
mov
push
jmp
dec
add
int3
cmp
aam
jnp
shlb
jl
cmp
imul
ja
pop
sub
adc
sbbb
push
iret
jb
jle
push
jl
add
push
cmp
inc
dec
mov
or
int
mov
ss
xor
leave
dec
out
movsl
push
jmp
sub
sub
fs
je
push
mov
cmp
push
lea
jns
je
jmp
push
sti
sub
sbb
jb
loop
pop
cmpsb
add
xor
in
rcrl
push
pop
jle
iret
lcall
addr16
out
push
into
popa
ret
ljmp
pop
das
out
push
mov
adcb
ss
push
and
popa
push
dec
arpl
mov
push
mov
mov
pop
fbld
sub
dec
pop
xchg
inc
scas
int
arpl
icebp
clc
xchg
jbe
sub
mov
xorl
mov
shr
data16
out
fldt
sbb
mov
stos
rolb
sbb
and
xchg
cmpsl
fldenv
idivb
push
jp
mov
dec
add
add
xchg
movsb
lret
jnp
sbb
pushf
mov
sub
lods
xchg
push
leave
dec
mov
ret
inc
fcomp
cmpsb
cs
mov
les
push
mov
iret
mov
mov
iret
pusha
xor
xchg
or
mov
adc
fsubrl
orl
push
jmp
popa
push
adc
into
sub
push
cmpsl
mov
adc
add
cmc
inc
or
rcrl
mov
leave
icebp
jge
pop
inc
push
dec
mov
adc
jae
pop
enter
jg
dec
sub
imul
push
inc
or
adcl
mov
jae
push
loop
push
stos
dec
sub
ret
out
xchg
inc
fsubrl
adcl
xor
cs
insb
add
add
ss
push
stos
stos
icebp
pusha
scas
frstor
mov
jae
push
ficomps
sbb
mov
in
jne
repz
ret
pop
loop
mov
inc
or
jbe
jo
cmp
inc
fstpt
dec
pusha
pop
loopne
sti
pop
addr16
push
lea
adc
jne
mov
adcl
cs
and
mov
hlt
or
cmp
add
cmp
loopne
cmp
sub
es
cmpsl
ret
xchg
ss
cmp
shr
and
mov
leave
push
mov
imul
dec
jnp
cmpsb
or
jle
scas
adc
jmp
inc
test
daa
xchg
lods
sbb
cmp
sbb
insl
sti
adc
inc
jne
sub
ds
mov
mov
int3
arpl
xchg
pop
movlhps
test
fsubrl
add
xor
jle
je
stos
dec
daa
sbb
mov
sbb
push
dec
xchg
push
xchg
pusha
ret
movsb
rolb
jp
pop
dec
jge
push
add
clc
and
sbbl
mov
add
sub
lcall
std
out
cwtl
movsb
and
mov
les
decl
int
adc
fs
test
inc
lret
fnstcw
imul
imul
pushf
cmpsl
dec
imul
stos
ljmp
cmc
and
lret
daa
cmp
push
xchg
pop
repz
fsubrl
jg
and
int
std
sub
sar
es
repz
mov
mov
cmpsb
xchg
cltd
inc
or
mov
jno
imul
dec
jg
and
mov
pop
icebp
cmp
movsl
fwait
jle
popa
cmp
adc
lret
or
adc
jl
arpl
pop
mov
or
imul
mov
push
or
fsubrl
jg
out
aas
out
sub
cmpsb
inc
sbbb
inc
push
sub
cmp
es
xchg
and
cld
gs
test
int
aas
scas
push
loope
fcoml
xchg
lcall
test
cmpsl
mov
repz
push
iret
arpl
jbe
in
or
adc
mov
loope
divb
sub
cmpb
dec
jnp
or
lea
push
jne
add
gs
lret
mov
jg
push
xchg
mov
icebp
cld
stc
inc
cwtl
or
enter
mov
pop
xchg
add
inc
lods
and
push
mov
cmp
dec
xchg
jne
mov
push
movsb
pop
addr16
lds
popf
dec
inc
or
rol
fists
hlt
jge
lds
cmp
int
cmp
lret
ds
les
adcb
xchg
adc
nop
outsb
cmp
stos
sti
sub
and
repnz
lds
push
int3
and
dec
nop
push
sbb
inc
sarb
add
insb
adc
xor
imul
inc
out
adc
pop
xor
or
mov
mov
and
in
xrelease
inc
mov
int
nop
and
loop
xchg
xchg
test
dec
cwtl
cmp
lods
mov
pop
push
or
in
movsb
inc
rolb
lock
pop
enter
sub
cmp
cmp
add
sub
outsl
mov
or
fwait
mov
inc
pop
mov
repz
sub
sub
iret
dec
clc
jnp
dec
xchg
cltd
inc
roll
test
cmpl
call
shll
mov
stos
lock
fs
out
sub
jmp
in
add
and
js
fsubrl
jge
enter
roll
loope
sub
fisttpll
sti
add
pop
push
test
out
pop
push
pushf
movsl
test
jae
sbb
popa
push
test
test
ficomps
add
lahf
scas
xor
pop
fcomip
test
push
sti
lea
push
mov
sbb
out
cli
add
or
pusha
xor
cmc
push
pop
enter
dec
mov
orb
xor
jns
cld
push
mov
push
pop
adc
daa
cmp
inc
adc
scas
adc
push
cwtl
lahf
jbe
sub
push
mov
cs
sahf
mov
xor
out
inc
insb
jae
stc
sbb
jno
stc
fmull
inc
das
inc
lds
movsb
and
xchg
mov
mov
push
outsl
movsl
or
push
nop
push
test
mov
pop
loope
ret
cmp
bnd
push
mov
pop
push
cmpb
xor
pop
ds
in
push
add
mov
pop
repnz
fsubrl
jge
pop
out
add
pushl
mov
lea
jmp
fnsave
fcom
loope
popf
ja
divb
mov
jae
jmp
push
inc
cmp
insb
lahf
sub
sahf
sarb
push
out
nopl
outsl
mov
jmp
pop
jge
arpl
lods
movsb
mov
dec
cmp
mov
jecxz
mov
pop
andb
push
pop
add
lock
ds
pushf
andl
fsubrl
jl
inc
scas
pusha
mov
pushl
pushf
pushf
jmp
push
xchg
loop
clc
dec
aad
stos
cwtl
push
jnp
add
cmpsb
fldl
stos
cmc
fadds
inc
jb
in
push
cmp
cwtl
neg
lods
mov
or
adc
inc
jmp
sub
fnsave
sti
faddp
leave
pop
cld
mov
cmp
pusha
loope
mov
lock
dec
movsb
lds
push
add
sbb
push
add
fnstsw
or
rcll
aas
ss
daa
das
fcmovbe
pop
add
into
int
mov
clc
inc
push
popa
and
leave
cmp
xor
and
xor
push
or
fwait
es
inc
adc
ja
imul
dec
fdivs
or
in
test
pop
cmc
mov
push
xchg
stc
add
push
add
push
pop
imul
rorb
jg
cmc
cld
dec
fisubl
testb
sbb
fildl
mov
movsl
mov
or
push
addr16
push
cltd
loopne
adc
cmp
push
mov
and
shl
mov
push
xchg
push
and
int
sbb
cmpsl
mov
decl
sub
pop
or
idivb
jg
jns
dec
and
orb
es
mov
jno
inc
cmp
adc
fldt
xchg
jne
or
insb
add
roll
insl
ffree
aaa
lds
testb
sub
jmp
in
imul
rcrb
cmp
cmp
mov
mov
dec
xchg
add
in
pcmpeqd
aas
pop
sub
fmuls
push
xor
hlt
pop
sbb
pop
mov
stos
stc
gs
inc
jo
xchg
or
arpl
sbb
sbb
data16
repnz
jbe
scas
jnp
xlat
outsb
leave
or
add
mov
pop
push
pop
xchg
in
clc
cmp
cld
insb
ljmp
scas
test
pusha
jg
fcoml
xor
cmp
out
test
imul
sub
xchg
and
add
cmp
shrb
mov
es
clc
jg
sub
xor
stc
scas
fisttpll
pop
cs
add
cmp
into
mov
xchg
cmp
rep
pop
ds
fsubrs
sarb
add
mov
dec
push
push
stc
push
imul
call
scas
stos
test
ret
push
inc
test
cli
stc
lock
sub
pop
lret
mov
mov
push
mov
or
out
insl
les
test
fstps
push
add
mov
push
lret
stos
dec
outsb
in
and
adc
xor
out
push
daa
test
dec
inc
xchg
lock
mov
inc
cmp
jecxz
sub
lea
sub
cmpb
repnz
inc
sub
mov
xchg
add
jl
jp
push
push
push
in
jae
push
sub
dec
cmc
insb
fsubrl
js
fisubrl
inc
mov
adc
shrb
sub
dec
jns
rcr
xchg
cs
jg
jno
ret
cmc
xor
mov
sbb
xchg
push
rcr
dec
inc
lret
pop
seto
pop
out
std
ds
cmp
sti
orb
lret
std
pop
cltd
or
lret
arpl
jae
ds
fidivs
lock
roll
sbb
pop
negb
subb
std
das
outsb
lods
cmp
ret
daa
cmpsb
mov
sti
ret
fsubrl
ja
aad
fistl
faddp
jge
andl
cwtl
push
jge
repz
das
pop
pop
int
mov
inc
ror
imul
push
mov
push
and
xchg
cli
pop
or
sbb
push
xor
leave
xchg
int
jl
pop
jle
mov
pop
push
lods
pop
fsubrl
ja
movsb
hlt
mov
ret
rorl
pop
ret
push
pop
jp
or
push
push
in
push
cs
es
and
lahf
xor
mov
dec
sub
adc
jmp
mov
jbe
icebp
cwtl
pop
mov
mov
fsubrp
je
cltd
jne
hlt
fisttpl
fs
mov
rolb
cmpsl
sti
xlat
pop
orl
sub
mov
and
xorl
je
mov
stc
sub
mov
dec
sti
rclb
hlt
les
rorl
and
mov
mov
dec
lret
aaa
xchg
or
sbb
test
fwait
lret
loope
jb
test
rorl
lds
mov
and
sub
sbb
inc
pop
and
rcrb
js
jbe
push
dec
xorl
fdivl
jmp
xor
sarl
mov
mov
fsubrl
jbe
rcll
mov
push
inc
repnz
ds
push
mov
outsb
cld
push
divb
ljmp
fcoml
dec
jo
movsl
pop
sub
nop
loopne
push
pop
jmp
ljmp
stc
jno
inc
push
dec
mov
loop
mov
outsb
mov
bsr
hlt
inc
int
xor
dec
arpl
popf
sbbb
shlb
adc
inc
jnp
jge
and
jns
movsb
jo
or
xor
sti
shll
arpl
int3
fildl
push
and
inc
cltd
ficomps
in
or
fsub
push
pop
push
gs
dec
xor
stos
mov
sti
xchg
test
stos
flds
jbe
in
cld
orl
cli
stos
push
icebp
into
outsb
popa
jo
out
fstl
jne
xor
stos
sbb
and
jmp
sbb
inc
sub
mov
in
fidivrl
pop
jmp
mov
xlat
les
in
scas
jne
out
hlt
cmpsl
pop
test
jge
bound
test
pop
add
ret
lret
xor
movsl
pushf
daa
pop
sub
or
daa
adc
mov
sub
pop
sbb
fs
fldl
dec
stos
sub
add
fsts
xor
das
cmp
sub
cmp
mov
cmp
pop
popa
mov
ret
dec
insb
xor
or
sub
rcr
xchg
nop
and
or
lods
mov
ret
and
add
or
add
out
lods
mov
sub
pop
xor
and
inc
loopne
and
sbb
jp
dec
jg
int
fwait
inc
or
xlat
in
int3
sbb
inc
loopne
popf
mov
mov
pop
rcr
push
xchg
push
mov
in
dec
lock
dec
pop
jecxz,pt
add
cmp
mov
test
shr
cmpsl
xor
cmp
mov
bswap
xor
mov
sbb
fsts
scas
jbe
in
fld1
lahf
sahf
sbb
je
xor
push
xor
cs
insb
add
ror
iret
mov
or
imul
sti
bound
sub
cmpsl
mov
test
mov
mov
mov
sub
imul
cmp
sub
or
cmp
int3
xlat
daa
push
and
mov
lock
popf
xchg
sets
cmpsl
in
dec
jle
popf
dec
sbb
push
sub
insl
mov
test
or
fsubrl
jae
add
push
movsb
aaa
push
popf
xchg
xor
xchg
add
xchg
std
jl
mov
xchg
or
xor
loopne
xor
es
popf
in
xor
aam
and
fmuls
loope
in
pop
lock
fisubs
cmpsb
adc
loop
test
add
add
mov
xor
mov
lods
adcb
sub
push
mov
jmp
jno
pop
push
pop
adc
fsubrl
jae
push
mov
xor
mov
hlt
sbb
xor
dec
cmc
std
test
jae
sub
lods
cld
mov
je
popf
cltd
mov
fildll
shl
add
inc
mov
mov
inc
sbb
stc
insl
out
mov
movsl
fwait
jbe
mov
sbb
jle
add
out
mov
sbb
lret
add
xchg
mov
data16
or
mov
fildll
in
sbbl
xchg
xchg
popa
fsubrl
jb
rclb
leave
clc
outsl
sbb
jge
stos
sti
push
adc
lea
pop
rcrl
xor
cli
xor
adc
dec
pop
mov
add
add
js
cmpb
outsl
mov
mov
pop
inc
les
xchg
xchg
int3
dec
sbb
cltd
cmpsb
mov
mov
push
aaa
out
pop
or
jge
mov
les
pop
mov
pop
pop
cmp
pop
fsubrs
scas
ss
insl
repnz
push
add
jle
hlt
repz
xor
push
mov
sbb
adc
cmp
mov
in
sbb
mov
jnp
mov
push
out
test
hlt
mov
iret
mov
sub
jne
into
icebp
int
cmp
in
icebp
popa
push
push
and
cmp
dec
inc
mov
sub
fiadds
cli
push
or
popa
in
fs
mov
push
cmp
mov
jmp
xor
lock
cmp
fdivl
mov
cmp
fiaddl
jno
cli
push
push
lods
cmp
cmc
popa
push
fiadds
pop
jbe
or
stos
sub
or
in
mov
loope
popa
mov
or
movsb
mov
loope
orb
shlb
mov
int3
mov
arpl
push
fadds
rcrl
aas
cmp
push
cwtl
mov
add
lods
ja
inc
ror
movsb
stos
mov
mov
mov
push
repnz
cmp
loop
mov
int
sub
push
fnstsw
inc
int
xchg
fsubrl
jo
add
movsb
not
movw
movsbw
lea
mov
movb
mov
mov
lea
jmp
sub
add
adc
mov
cmpsl
adc
test
inc
test
mov
data16
and
shrb
imul
mov
imul
sub
outsl
sub
jge
jl
stos
movsb
rolb
cmc
dec
sbb
loope
dec
and
movsb
or
subl
mov
loope
pop
repnz
rorb
xchg
stos
sbb
ja
subl
xlat
mov
in
mov
and
pop
mov
sbb
fsubrl
jo
xor
movsl
dec
mov
das
stos
scas
fwait
jmp
jno
pushl
test
rcr
mov
shlb
and
sub
into
mov
mov
inc
lcall
pop
or
aaa
sbb
mov
jno
mov
dec
xor
push
mov
popa
out
in
mov
std
fsubr
adc
out
xorb
negl
and
mov
pop
push
jmp
fsubrl
outsl
enter
notl
pop
call
xchg
xor
pop
int
adc
loopne
jle
pop
pop
inc
and
mov
icebp
mov
jnp
aaa
gs
xor
rorb
loope
pop
push
xor
call
leave
adc
pop
out
add
mov
cmp
fimuls
pop
push
pushf
lods
dec
adc
jae
cmp
loopne
pop
ss
cmp
adc
xchg
notb
inc
inc
xchg
sbb
fsubrl
outsb
push
into
test
and
testb
aad
jb
xor
or
scas
jbe
adc
mov
aaa
dec
mov
push
std
cmp
mov
aaa
dec
mov
scas
push
dec
call
push
fucom
imul
dec
decl
bound
jae
cmp
test
dec
mov
mov
push
inc
sbb
ljmp
sub
sbb
mov
jl
push
mov
es
call
movsb
lods
sbb
jnp
dec
fidivl
sub
xor
mov
pusha
ficompl
sub
lahf
xchg
fisttpl
add
xchg
gs
cmc
adc
in
cmp
fadds
pop
cmpl
enter
push
fst
pop
int
mov
lock
mov
movsl
or
dec
or
scas
mov
mov
fsubrl
outsb
adc
jb
mov
xchg
ret
cmovle
js
mov
mov
inc
int
push
push
push
test
cltd
mov
rcr
cmpsl
shrl
nop
lret
xor
jno
out
jbe
sub
loop
js
fsubrl
insl
lods
int
pushf
push
lea
call
jmp
cmp
push
mov
lock
aam
jno
pop
push
jge
jecxz
leave
sub
cmc
mov
xor
lock
add
fisubs
pop
fs
jno
repnz
roll
or
fnstsw
mov
in
movl
inc
ror
push
dec
mov
lds
call
insl
xchg
mov
sub
movsb
adc
fstp
add
xchg
lcall
movsb
hlt
jecxz
insl
testb
pop
mov
mov
out
int
imul
scas
es
insb
loope
roll
or
mov
outsb
in
inc
xchg
fnop
pop
pop
xchg
add
push
pop
loope
push
xchg
push
in
rorb
push
fwait
adc
xchg
push
mov
xor
fimuls
add
jmp
mov
and
dec
dec
loope
mov
cld
dec
dec
mov
dec
inc
nop
aas
sub
icebp
push
mov
testl
dec
add
push
pop
pop
xor
xchg
movsl
test
fsubrl
insl
pusha
adcb
cmp
push
adc
arpl
or
push
outsb
lods
sbb
bound
push
mov
sub
jns
pop
xor
xchg
aaa
jns
adc
mov
fcom
xchg
mov
pop
ficompl
fbstp
divb
shr
sti
jmp
dec
push
xchg
pop
sahf
sub
rcr
ja
lret
std
pop
pop
cmp
mov
jmp
inc
call
adc
out
test
andl
xor
sbb
outsl
xchg
sbb
sub
jecxz
push
push
aam
sbb
inc
jae
cwtl
add
cmp
xlat
dec
jb
mov
aad
xor
or
popa
outsb
fwait
cmc
jnp
adc
in
sub
or
clc
lcall
pop
jmp
dec
jnp
scas
xor
lret
mov
rcr
dec
aam
xchg
aaa
movsl
aam
ret
sub
fwait
movd
cltd
int3
lret
adc
stos
ja
mov
or
mov
mov
cld
fsubrl
insb
dec
push
movl
mov
pusha
mov
pushf
pushl
ret
sbb
in
and
call
fistl
jns
xlat
ficoms
dec
adc
inc
outsb
shl
xchg
sub
push
dec
add
in
or
sti
add
lds
sarl
shrb
mov
jne
push
dec
add
cmpsb
pop
outsl
push
popa
sub
in
pusha
cmovno
xchg
data16
cmp
enter
movsb
sbbl
dec
adc
dec
pop
int
push
dec
push
push
out
push
pop
out
xor
ret
fsubrl
push
testb
call
stc
pushl
cmp
call
adc
inc
scas
and
inc
in
xor
stos
add
out
mov
dec
fsub
lds
insl
dec
or
aaa
xchg
push
aaa
outsl
or
lret
cli
mov
das
inc
mov
shl
lahf
xlat
mov
outsl
push
mov
lret
or
imul
or
idiv
jge
test
mov
and
out
jmp
jg
push
sub
adcb
and
push
xchg
pushl
sub
ret
push
aad
sbb
and
dec
js
inc
ds
dec
mov
fists
xchg
sti
adc
push
mov
adc
fstps
jecxz
addl
rcrl
fcmovb
lea
enter
ljmp
lods
testb
mov
cmp
push
add
fwait
lods
gs
fs
arpl
fadds
or
popa
stc
sahf
push
rcr
inc
lret
in
push
or
push
push
mov
push
add
fucomi
push
jae
jno
imull
add
cmp
mov
cmp
sub
cltd
dec
das
movsb
adc
and
pop
lea
cmpsb
std
xor
adcb
and
push
sbb
lret
or
and
xchg
jle
js
orb
xor
cmp
push
push
add
popf
hlt
in
aam
negl
adcl
lcall
inc
cmpsl
dec
arpl
push
mov
shlb
outsl
out
leave
rsm
rcrb
test
fucomi
jno
inc
imul
out
cmp
jb
add
data16
pushf
fsubrl
push
xchg
push
dec
and
in
rcl
les
stos
jmp
cmp
cmp
pushf
and
jmp
dec
push
cwtl
inc
cwtl
test
xchg
push
sub
out
dec
push
insl
fiadds
fptan
out
mov
or
scas
iret
repnz
sub
aad
or
add
scas
inc
add
nop
pop
fsubrl
imul
adc
int
pop
or
addr16
sbb
lock
push
xchg
adc
mov
sarb
or
orl
sub
les
jecxz
adc
cltd
sub
dec
mov
dec
les
je
pop
or
imul
js
adc
das
cmp
pop
inc
int
out
fimuls
sbbb
shll
inc
add
ja
sbb
mov
push
std
test
repnz
scas
dec
adc
sub
pop
int
jmp
or
test
add
mov
push
jge
xor
and
cmpsl
jg
mov
inc
push
test
pop
sbb
cli
sbb
dec
sbb
test
int3
xchg
push
fisubrs
in
mov
movsl
xor
sub
and
aam
pop
fsubrl
dec
mov
adc
and
cmp
adc
into
jae
cmp
pop
sar
and
ss
sub
jbe
add
pop
sbb
out
outsb
fsubrl
addr16
push
mov
lea
jmp
jbe
lahf
cmp
pop
dec
mov
out
dec
xchg
rcll
xor
repz
xorl
outsl
dec
daa
xlat
mov
lea
ret
adc
pusha
xchg
lcall
or
lcall
pop
push
loopne
sahf
sub
cs
mov
xchg
stos
fisubrs
add
xchg
xchg
push
or
jmp
inc
addl
push
add
aas
push
lds
push
std
clc
fsubrl
addr16
push
cmpsl
outsb
add
pop
dec
or
in
pop
aam
jb
and
xchg
lret
dec
imul
cmpsl
sbb
jp
lods
dec
addr16
push
outsb
push
xchg
pushf
and
inc
gs
aaa
andl
and
adc
xor
pop
lret
xchg
mov
stos
pushf
add
outsl
fcmovnbe
ja
mov
xor
dec
cmp
out
insl
mov
shll
jbe
mov
jecxz
enter
push
add
lea
cld
pop
lahf
mov
xchg
movsb
and
or
jecxz
sub
push
jecxz
cmp
jae
or
pop
in
sbb
mov
dec
push
xor
setp
jp
je
rcrb
out
or
sub
popf
lea
lds
mov
cmp
icebp
shlb
mov
inc
inc
iret
fwait
xchg
cmp
mov
sub
movsb
iret
out
cmpsl
or
out
sub
jb
fistl
jno
inc
jmp
enter
adc
pop
neg
xchg
xorl
push
out
movsb
orl
gs
mov
jmp
dec
imul
jns
out
outsb
lds
in
adc
rcrb
les
jge
jae
xor
inc
dec
xchg
add
sbb
jnp
and
sahf
pop
ret
push
clc
in
dec
or
dec
adc
cmpsl
mov
aam
arpl
mov
stc
aas
add
ja
push
dec
lret
jb
loopne
push
in
pushf
mov
sub
cwtl
lea
je
push
cmp
call
call
xor
jle
hlt
add
jno
aaa
dec
int3
and
icebp
push
inc
dec
sbb
and
cmp
dec
sub
outsl
fs
imulb
mov
nop
inc
mov
sbb
shll
dec
mov
add
lret
push
incl
mov
xor
mov
mov
mov
jge
subl
lret
jg
dec
dec
jae
and
pushf
data16
push
push
xor
mov
xor
and
mov
push
adc
iret
adc
xchg
stos
subl
in
andl
adc
cli
imul
out
or
mov
push
aad
mov
sub
adc
push
decb
cmc
fsubl
fsubrp
int3
addl
sub
loopne
ss
cli
push
adc
and
cwtl
testl
push
rol
fisttpll
std
push
mov
mov
xor
dec
repz
into
mov
inc
stc
sub
std
imul
lods
mov
jno
sbb
inc
mov
push
cmp
or
pop
aas
out
sbb
cltd
inc
imul
jbe
pop
mov
and
repnz
test
cs
insb
adc
mov
pop
in
inc
adcl
sub
jecxz
inc
pop
jbe
sub
xchg
add
out
inc
sbb
pop
fisubrl
inc
nop
outsl
mov
add
adc
push
inc
dec
jno
jecxz
add
xchg
scas
sbb
outsb
cli
bound
and
test
loope
in
push
mov
shr
jns
jg
pop
inc
sub
push
cli
push
dec
mov
or
or
xchg
in
imul
lods
mov
cli
mov
ja
or
arpl
cmp
bt
cmp
mov
lahf
not
lea
pop
mov
jmp
inc
adc
xorb
adc
mov
repnz
cmpb
mov
repnz
cmp
sub
loop
add
insl
cmp
adc
mov
repz
js
cmp
xchg
mov
or
mov
fnsave
dec
cs
xor
imul
in
dec
pop
cmp
icebp
pop
test
adc
test
pop
mov
adc
push
out
cmp
push
add
push
pop
loopne
or
jp
adc
mov
cmpb
test
sub
arpl
fiaddl
pop
int3
mov
or
pop
xchg
and
std
int
jae
xchg
cli
sub
jnp
loop
aad
int
mov
pop
cmp
gs
movl
xchg
mov
movsl
ror
and
enter
stc
cmpl
sub
jns
testl
xchg
xchg
inc
arpl
add
jb
inc
not
dec
aam
jb
sub
loopne
out
mov
sub
aam
loop
mov
pop
icebp
adc
test
test
test
mov
ds
rol
pop
fs
dec
sahf
xchg
fstps
addr16
sub
adc
jecxz
notb
fdivrl
mov
push
jg
mov
into
xchg
adc
lea
jno
aaa
mov
jg
fimuls
ja
das
adc
jns
jecxz
pusha
ljmp
mov
leave
movsb
adc
rolb
aad
xchg
test
jne
repnz
shll
data16
ret
andb
cmpsb
sub
pop
jp
and
add
imul
mov
shlb
insl
mov
jb
add
daa
push
push
loope
lds
in
pop
mov
ficomps
loop,pt
xor
and
cmpsl
scas
test
sti
sub
je
icebp
dec
or
sbb
push
jno
push
and
test
popa
pop
fnsave
shlb
mov
mov
in
sarb
add
xchg
and
divb
xchg
dec
xor
sub
shrl
push
movsl
pop
jecxz
inc
inc
xlat
fsubrl
popa
and
jmp
addl
rcll
imul
fwait
inc
and
sbb
or
fnstsw
sbb
jp
popa
fdivrl
pusha
mov
cmp
lea
shlb
push
lret
dec
sbb
mov
insb
sub
sub
js
mov
call
mov
adc
pop
jb
bound
sub
cmp
mov
cli
je
and
ret
pop
sbb
int3
dec
int
insb
movsb
sub
les
in
dec
fadds
or
push
fsubrl
pop
mov
lea
add
fwait
sub
xor
mov
ret
lret
stos
add
into
insb
ss
mov
or
test
mov
pop
pop
dec
sbb
mov
lock
aam
ret
loope
and
fistps
xchg
and
pusha
cs
aaa
into
sub
xlat
test
add
inc
mov
cli
push
fcmovbe
xor
mov
int
adc
mov
cltd
dec
in
xor
mov
sbb
dec
cmc
loop
xor
ret
jg
pop
or
in
lds
fsubl
push
popa
jno
into
pop
push
int
sbb
xchg
sub
mov
mov
mov
aas
jle
add
push
jns
aaa
push
in
push
jg
jp
push
mov
ds
sub
adc
insl
fwait
jmp
aaa
into
ja
out
mov
jnp
cmp
push
pop
daa
inc
or
cmp
daa
aas
pusha
cltd
cs
xlat
pusha
ljmp
xor
rcrl
mov
xor
repz
out
test
pop
dec
cli
test
test
sub
sub
fwait
or
and
int3
or
movsl
int3
adc
rcr
inc
insl
mov
add
mov
mov
sbb
fiadds
test
sbb
xchg
xor
stos
scas
jmp
add
inc
popf
mov
test
jmp
mov
fmul
jno
loopne
sub
jns
nop
ja
mov
imul
dec
test
adc
into
inc
mov
mov
out
xchg
imul
pop
mov
mov
jge
pop
lods
hlt
sbbl
push
ret
loop
lock
jg
das
movsb
xchg
sub
stos
mov
orl
arpl
xor
sbb
mov
push
pop
xor
cmp
lahf
mov
mov
out
sbb
mov
jg
add
cmp
lods
xor
dec
ds
pop
test
imul
adc
imul
pop
out
jns
cmc
and
fiadds
ret
call
gs
cli
cmp
dec
adc
add
push
addl
xchg
test
inc
mov
jl
mov
ljmp
or
js
add
sahf
fs
add
insl
inc
push
and
js
gs
aam
xlat
out
pop
lods
sub
imul
sub
mov
es
mov
in
movsb
andl
fsubrl
pop
dec
outsb
mov
rcl
cwtl
sti
test
arpl
or
aad
pop
mov
inc
negl
xor
add
xor
dec
xlat
cmc
jb
push
movsb
inc
test
hlt
mov
jle
or
out
fnstenv
xchg
rol
xlat
clc
sbb
mov
pop
std
fnstcw
inc
loopne
xchg
test
hlt
imulb
xchg
popa
or
into
test
inc
sbb
sub
push
iret
or
sub
shrb
xchg
lret
sub
fdivrl
stos
jns
into
test
inc
mov
mov
sbb
icebp
stos
and
stos
pop
jns
sub
pushf
xchg
adcb
leave
sub
lock
sbb
and
push
push
dec
adc
sti
adc
gs
push
loop
js
lock
dec
gs
iret
adcl
pop
sti
pop
in
mov
cwtl
pop
adc
leave
push
xchg
mov
rcrb
int3
mov
fsubrl
pop
add
je
mov
mov
jae
adc
and
mov
jg
jp
push
adc
sahf
adc
mov
out
pextrw
adc
cmp
scas
les
inc
fnstsw
pop
mov
dec
jno
push
push
movsb
insb
mov
push
inc
gs
adcl
mov
jb
outsl
rcrb
xor
cmp
stc
fcoms
addb
push
cmc
insb
fsubrl
pop
mov
dec
jo
and
add
cmpsb
fstpl
mov
adc
in
iret
xlat
stos
jge
hlt
roll
push
add
jecxz
rorl
scas
lods
mov
daa
and
or
inc
int
jmp
and
jnp
loopne
mov
push
xor
test
cmc
xchg
fsubr
cmp
jo
aad
mov
icebp
sbb
pop
into
out
sahf
mov
pushf
shl
mov
test
cmp
call
add
add
std
cmpsl
cs
add
or
inc
std
ljmp
aam
sbbb
nop
dec
scas
stc
mov
pop
fimull
mov
adc
sbb
outsl
cld
jae
adc
xor
ljmp
shll
pop
push
jl
push
subl
push
mov
adc
ja
ss
mov
mov
andb
in
push
add
fsubrl
pop
jp
sub
fstps
jne
pushf
call
in
jno
mov
jge
das
and
mov
mov
sub
cmp
test
out
out
fimull
pop
jmp
iret
sub
into
icebp
cmp
jl
pop
dec
notb
push
pop
clc
jns
rcll
cmp
shlb
mov
insb
pusha
mov
add
push
ds
and
nop
adc
in
jnp
rorl
dec
xor
test
push
xor
popa
fsubrl
pop
scas
roll
int
cmp
inc
scas
es
in
and
repz
dec
pop
lahf
push
std
xchg
ffreep
ljmp
add
inc
fisttpll
ss
add
pop
sbb
xchg
mov
rcrl
adc
movl
stos
inc
dec
test
stos
scas
pop
adc
add
sbb
call
mov
or
xchg
pop
mov
cmp
jle
movsl
mov
xor
std
rcrl
rclb
mov
jmp
sub
dec
ret
ljmp
sbb
inc
mov
pop
outsb
lods
sub
ljmp
or
dec
pop
dec
xchg
lea
xor
dec
aad
stc
pop
pop
pop
push
pusha
ljmp
or
pop
pop
mov
enter
xchg
add
add
es
stos
lret
dec
arpl
es
ret
adcb
fsubrl
pop
cli
sbb
std
test
sbb
out
test
push
into
or
inc
xchg
jbe
dec
pop
mov
xor
sbbb
adc
inc
jg
repnz
and
stos
sbb
cmp
fldenv
sbb
dec
mov
push
mov
fwait
mov
cwtl
jmp
iret
mov
gs
push
add
cld
xchg
push
cmpsl
f2xm1
mul
pusha
mov
add
std
mov
pop
cmp
lahf
mov
push
icebp
adc
ja
or
sub
mov
fwait
shr
inc
inc
out
leave
shll
imull
or
arpl
test
mov
push
xor
dec
push
das
add
mull
ljmp
cmp
inc
pop
adc
bts
cmc
int
movsb
jnp
pop
push
lock
mov
popl
jl
ljmp
fsubrl
pop
sub
imul
xlat
sub
std
push
fstpt
addl
stos
mov
jnp
push
insb
dec
jb
adc
repz
adc
cmpsl
sahf
sub
add
lock
mov
xor
into
adc
lcall
or
adc
imul
mov
and
or
jb
pop
lea
jb
dec
xor
sbb
pop
pushf
xchg
push
xchg
loope
icebp
jg
cmp
mov
and
sbb
div
adc
addr16
cli
iret
sub
inc
add
inc
into
fnsave
leave
js
fsubrl
push
and
xchg
jmp
or
arpl
inc
pop
mov
call
stos
data16
cmp
nop
out
into
sahf
cmc
fmuls
enter
lcall
xchg
and
fstps
xchg
mov
fiaddl
ja
or
xlat
xchg
adc
mov
lds
pop
aaa
jge
mov
cmp
cli
orl
or
pop
xor
and
dec
test
mov
iret
pop
add
xor
popf
iret
sbb
dec
mov
cs
adc
jne
sti
fsubrl
push
dec
imul
lret
rol
clc
rol
test
neg
shr
dec
sub
cmc
ror
bt
cmc
ror
pushf
inc
call
arpl
int3
in
xor
jg
aam
cmp
cld
addr16
jp
lahf
clc
fisttpl
dec
cmp
fs
add
outsl
ja
adc
cmp
push
in
testl
xor
pop
push
into
push
iret
cmp
inc
repnz
pop
stos
cmp
lret
clc
cli
packsswb
push
int
push
pop
std
mov
dec
imul
fsubrl
push
mov
and
sub
std
imul
insb
mov
pop
cmp
mov
cmp
popa
jle
cmp
xchg
lock
or
aad
sub
push
and
push
add
cmp
lahf
stos
pop
add
rolb
wrmsr
sub
add
mov
das
loope
or
mov
mov
add
adcb
adc
mov
ret
adc
je
int
or
call
fwait
inc
push
or
fsubrl
push
cmp
mov
ds
sarl
scas
mov
mov
loop
mov
mov
xor
jo
mov
add
mov
xor
mov
push
mov
cmpsb
mov
mov
lret
add
jmp
or
mov
jle
in
movsl
push
or
ret
aaa
ds
sub
out
imulb
out
mov
rolb
mov
add
and
test
jno
call
icebp
negb
xchg
add
xlat
sub
adc
push
jge
mov
call
xchg
push
xchg
shlb
push
mov
add
jmp
enter
insb
stc
xor
into
jle
push
inc
testb
inc
xchg
pop
imul
sbb
lret
push
and
mov
jns
mov
out
test
daa
jbe
jb
out
pop
cld
mov
les
test
jo
xor
lods
mov
add
cmp
movsl
jge
xchg
scas
notl
mov
jno
and
mov
push
sarb
sbb
and
mov
add
test
shlb
inc
stos
adc
std
fs
cwtl
orb
rcr
jnp
pop
push
jb
jno
pop
stc
leave
dec
loop
pop
repz
out
inc
loopne
xchg
test
ret
add
xor
push
daa
pop
ja
outsb
adc
nop
sub
aam
mov
pop
dec
push
cmp
mov
cmp
inc
rolb
stos
inc
xor
mov
lea
mov
scas
xchg
xchg
aas
cmp
cmc
dec
mov
mov
inc
insb
cmp
mov
aas
jge,pt
lea
pop
lds
sub
mov
adc
std
sub
mov
lcall
jae
sbbl
mov
xchg
cmp
test
mov
mov
loopne
xchg
xchg
dec
fs
ja
cmpb
mov
dec
inc
nop
rcll
cmp
xor
dec
xor
push
sahf
test
out
fs
imul
mov
rolb
xchg
mov
repnz
enter
in
jmp
std
jl
imul
ret
pop
nop
stos
je
add
leave
test
hlt
std
pop
mov
xchg
jns
inc
hlt
mov
mov
repz
mov
mov
xor
mov
pusha
scas
sub
sbb
cmp
loope
aam
pop
leave
push
subl
cltd
push
mov
mov
add
sbb
pop
rcl
mov
fistps
jge
sarb
bswap
cli
fcmovbe
jmp
mov
cmp
pop
add
inc
ss
cmp
push
addr16
cmp
lods
cltd
push
bound
mov
push
add
cmpsb
xchg
adc
outsl
dec
jne
ret
xor
or
mov
dec
sub
rol
inc
enter
push
popf
cs
loopne
cmp
mov
adc
mov
out
sbb
and
jb
rcll
jae
mov
mov
jae
cmp
test
sarl
and
or
iret
xchg
cmp
pop
cmp
repz
cmpb
and
pop
into
and
nop
mov
mov
push
jmp
xor
inc
into
dec
lcall
in
cwtl
pop
and
mov
xchg
dec
adc
rorl
mov
mov
dec
movsl
aaa
mov
lea
mov
mov
lret
jecxz
test
cmp
xchg
sarb
insb
sub
scas
add
bound
cmp
sub
push
add
scas
cmp
cmp
mov
cmp
fadds
push
aad
fucomp
add
loop
sbb
roll
xor
jbe
push
xor
sti
push
shrb
loop
jnp
outsl
mov
xor
jle
lods
jnp
cmp
mov
shrl
push
mov
dec
add
cmp
mov
pusha
add
dec
mov
mov
jp
adc
or
cmp
inc
add
bt
outsl
fs
loope
lock
out
and
jne
mov
daa
bnd
and
scas
lret
and
mov
fsubl
loope
js
mov
imulb
loop
mov
cli
mov
stos
jecxz
test
movsl
add
out
cmpsb
fistps
add
ret
xor
ret
lods
fstpt
dec
int3
cmp
fistps
hlt
pop
scas
lods
sub
rclb
push
xchg
movsl
cli
inc
xchg
xor
mov
sbb
cli
mov
add
iret
xor
fwait
js
mov
inc
mov
sbb
cmp
arpl
push
mov
ss
inc
mov
leave
add
push
sti
mov
mov
jge
or
xchg
test
popf
inc
popa
dec
mov
test
lahf
test
inc
or
jge
cmp
bound
jle
xchg
sbb
or
ret
out
mov
outsb
mov
xchg
mov
xor
or
jmp
mov
adc
int3
lods
cmc
xchg
mov
js
mov
and
jo
adc
cltd
cmc
jae
rcll
inc
push
mov
movsl
pop
mov
add
xor
xchg
dec
inc
mov
or
repnz
push
jo
loopne
clc
lcall
pop
std
ret
adc
cmp
cmp
mov
clc
rcrb
iret
xchg
mov
cmp
mov
or
cmc
bt
inc
push
add
push
sbb
adc
cmp
pop
aas
bound
push
jo
sbb
sarb
xorb
or
ret
test
ljmp
movsl
mov
scas
sub
mov
add
out
nop
pop
clc
mov
andb
mov
test
jno
adc
ficompl
jae
xchg
rol
mov
add
cwtl
add
imul
mov
ret
push
lret
imul
adc
or
pushf
mov
lcall
ret
insb
daa
addps
fwait
cltd
xor
sbbb
xor
mov
inc
aas
mov
add
cld
mov
aam
inc
shrb
jmp
cmp
mov
pop
arpl
ds
sbb
or
pop
mov
lea
inc
lcall
popa
out
loopne
popa
mov
mov
enter
icebp
jo
and
and
ds
xchg
mov
loope
and
aad
jne
sbb
mov
jle
push
fidivs
clc
mov
lock
js
pop
ds
cmp
jle
lret
scas
scas
or
mov
mov
aam
cmp
jmp
xchg
jns
xorl
jp
xchg
sahf
xor
pop
dec
mov
push
pop
and
das
test
adc
sbb
fs
outsl
xor
jle
fnstsw
mov
daa
jge
jecxz
fstpl
nop
test
ret
scas
repnz
sti
push
mov
cmp
jns
mov
jno
xor
and
addr16
imul
add
cmpb
add
inc
mov
mov
inc
mov
scas
jp
jo
scas
sub
jno
addb
out
cld
push
adc
xchg
sahf
mov
jnp
add
pop
add
loopne
insl
enter
push
dec
push
mov
xchg
std
inc
nop
das
cmp
push
popa
mov
xchg
sub
test
mov
repz
ret
sub
mov
outsl
insl
rol
shlb
fildl
enter
call
fildll
inc
cmp
xchg
mov
addr16
and
fnstsw
adc
sub
cmpsb
ret
rclb
push
mov
test
xor
and
ret
imul
sub
pop
xor
push
cwtl
mov
clc
mov
stos
sbb
daa
es
and
ret
add
dec
loope
xchg
in
inc
stc
sbb
int3
cmp
mov
test
mov
and
pop
movsl
mov
mov
add
jge
test
repnz
inc
frstor
add
addr16
mov
pop
popa
sbb
sbb
dec
movsl
cmp
cmp
in
pop
arpl
push
and
mov
mov
test
xor
out
mov
jp
jl
loope
jl
jle
mov
and
mov
or
xor
sbb
popl
lods
rcll
mov
ret
sbb
dec
or
repnz
xor
xor
shl
dec
xchg
jnp
mov
movsl
mov
mov
push
ret
adc
jne
daa
mov
ret
xchg
inc
xchg
cmp
push
jge
mov
mov
test
nop
fsubl
loopne
lods
dec
mov
dec
cld
or
jno
inc
mov
ss
add
les
aad
mov
xlat
jl
mov
mov
stc
popa
mov
push
fistl
sahf
pop
mov
jae
out
pop
jne
sub
adc
test
fstpt
test
dec
xchg
fstl
push
jge
mov
xchg
cmp
arpl
cli
and
mov
into
pop
push
sti
pop
and
pop
loopne
roll
ret
in
cld
or
pop
mov
lock
inc
jp
cmp
pop
mov
shrb
shlb
adc
rcrl
in
and
jp
cmc
pusha
add
jl
inc
mov
mov
test
push
xchg
outsl
jle
loop
push
pop
test
out
xchg
push
stos
js
lods
pop
xchg
dec
stc
nop
mov
sti
out
test
sub
cmp
mov
cwtl
movsl
xchg
and
cltd
scas
mov
pop
cli
or
arpl
mov
adc
cmp
jns
push
js
mov
jb
ret
pushf
adc
mov
xchg
cmp
ljmp
mov
xchg
xorb
loopne
ja
dec
push
mov
rcr
mov
adc
lods
add
sub
test
mov
mov
push
sub
bound
aas
cltd
les
int
ret
cmp
mov
movsl
ss
mov
mov
adc
dec
mov
jns
sub
push
pop
ja
mov
insl
mov
shrb
test
inc
inc
inc
rcrb
mov
push
xor
testb
rcll
cmp
sbb
test
fwait
push
or
jecxz
mov
stos
in
mov
mov
dec
xor
aad
xor
cmp
into
nop
push
test
ds
xchg
cmc
data16
movsl
mov
test
pushf
lcall
lahf
iret
mulb
in
lahf
mov
movsl
xor
inc
jae
push
add
ror
dec
push
das
scas
xor
test
xchg
mov
or
sub
stc
daa
scas
and
stos
push
mov
out
add
sbb
push
inc
push
bnd
dec
sub
xchg
jl
lock
cmpxchg
shlb
sub
icebp
fdivs
movl
mov
mov
mov
lods
js
lea
and
ror
ret
pusha
icebp
out
popl
inc
fidivrl
push
inc
cmp
sarl
inc
movsl
push
push
mov
stos
out
aad
mov
pop
jl
cmp
int3
fstpl
daa
jb
std
outsb
and
gs
and
incb
adc
lods
pop
scas
insl
shlb
cmpsb
inc
jecxz
and
sbb
push
int3
mov
mov
mov
jo
xchg
jae
popa
xchg
add
pop
roll
mov
cld
insb
cmpb
jno
cmc
sub
aas
loopne
add
js
popa
dec
js
add
cmp
scas
sub
out
xor
push
loopne,pn
mov
cmpsb
insb
mov
lea
xchg
and
daa
mov
jge
dec
and
into
fildll
ret
cmpsl
mov
push
mov
cmpsb
mov
push
cmp
mov
stos
out
pop
and
mov
jg
in
inc
lods
lock
xchg
dec
adc
sub
gs
push
mov
push
sub
push
mov
inc
outsl
xor
das
cmp
imul
push
add
ret
push
bnd
push
imul
mov
rcll
test
add
or
jo
mov
mov
cmp
movsl
jne
jge
gs
into
and
stos
jnp
inc
xor
sbb
ds
daa
push
xor
mov
xorl
mov
fs
movsl
and
test
nop
imul
push
push
sbb
mov
shl
mov
ds
jo
inc
aad
jne
dec
jge
sub
mov
dec
inc
inc
mov
pop
mov
inc
cmp
jb
push
xchg
mov
pusha
pop
mov
addl
push
lods
jnp
dec
push
mov
mov
cmpl
push
mov
xor
push
xchg
cmpsl
das
mov
push
popw
je
inc
push
sbb
movl
mov
popa
repz
xor
xchg
push
mov
xchg
stc
cmp
jbe
mov
mov
loope
test
movsl
sub
sbb
shll
ret
cmp
enter
imul
movb
loopne
lahf
add
sub
mov
jne
xlat
gs
mov
and
xchg
repnz
bound
test
inc
imul
and
in
mov
loop
or
outsl
ds
or
inc
movsb
je
cmp
mov
aam
filds
add
mov
icebp
add
popf
jle
inc
sbbl
lods
repz
add
test
cmp
cmp
test
inc
or
cmp
in
js
mov
sub
mov
pop
test
stos
dec
loopne
stos
lcall
add
and
push
xchg
xor
rclb
pop
fwait
jns
mov
mov
sub
xchg
mov
loope
lods
dec
lock
and
dec
adc
mov
lea
icebp
mov
xchg
popf
sbb
insb
idiv
xchg
ljmp
loop
xor
lods
inc
das
gs
cs
fnstsw
mov
fmulp
sti
cmp
mov
push
icebp
ret
add
sbb
dec
inc
push
jo
idivb
sub
adc
and
sub
push
push
addr16
sub
lods
mov
rcr
in
stos
dec
pop
aaa
mov
jmp
jo
mov
popf
cmp
jbe
jo
add
stos
or
xor
jns
mov
xchg
push
insl
adc
sti
mov
xchg
mov
mov
add
lahf
in
lahf
popf
or
repz
loope
adc
out
jo
xchg
mov
sbb
push
popf
maskmovq
negl
test
fs
xchg
pop
stos
and
adc
outsb
cmp
xchg
xor
mov
lods
add
sar
test
and
xchg
jle
popa
loopne
in
mov
jb
mov
pusha
loope
lahf
xchg
or
push
mov
inc
or
mov
sbb
aas
outsl
push
jbe
fldcw
jb
push
loop
cmp
popf
repz
mov
bound
mov
hlt
pusha
movsl
test
ljmp
pop
jbe
mov
addr16
jp
jmp
adc
xor
push
test
imul
jae
cwtl
outsl
les
push
xchg
lcall
mov
or
aaa
push
jbe
jg
call
addb
jp
sbb
cli
push
sbb
call
rcl
loop
pushf
jle
xor
mov
ficoml
inc
es
movsl
push
addr16
and
push
push
cmp
das
clc
pop
loope
loopne
mov
dec
jp
out
inc
out
outsl
xlat
dec
cmpsl
ja
push
dec
imul
sbb
xchg
add
and
jp
mov
test
cmp
xchg
or
fcoml
xor
push
sarb
xchg
sbb
pushf
subb
pushf
insb
cmpb
and
pop
cltd
jnp
lcall
mov
sarb
mov
lods
lret
sar
xor
inc
mov
mov
shrb
mov
mov
int3
cld
cmp
inc
push
dec
repnz
dec
adc
ss
cmp
mov
aaa
fiadds
popf
mov
repnz
sub
sarb
and
nop
aas
addr16
lcall
out
mov
ret
sub
pushf
les
inc
mov
inc
mov
adc
fdivr
je
insl
jo
lea
xor
xchg
inc
ja
ret
adc
add
outsb
test
lret
mov
enter
test
mov
pop
popf
sub
mov
sbb
std
sub
cmpsl
jecxz
fisubrl
fsubs
mov
cltd
lcall
fcoms
aad
mull
cmp
xor
insb
icebp
mov
adc
push
sub
mov
push
xor
dec
jne
out
fadds
jbe
cmpsl
and
mov
mov
shl
jecxz
hlt
dec
jecxz
cld
mov
push
inc
lahf
lea
movsb
inc
push
fidivl
roll
std
push
xchg
es
stos
cmp
cmpsl
daa
mov
cmp
sahf
inc
fisubrl
loop
xor
pop
fldcw
xchg
rcr
jecxz
clc
add
push
inc
or
mov
fdivrl
cwtl
pusha
dec
mov
push
add
or
mov
out
sbb
mov
movsl
jmp
dec
in
popa
mov
adc
pop
repnz
pushf
mov
lahf
pusha
jge
repnz
and
inc
dec
cmpb
test
adc
push
xchg
sub
add
cmp
cmpl
je
adc
push
cmp
lcall
out
inc
movsl
fmuls
cmp
js
loop
push
pushf
adc
pop
pushf
js
adc
call
or
movsl
cmp
aaa
std
push
mov
pop
and
mov
sahf
in
or
test
stos
sbb
push
es
scas
dec
fprem1
fldl
pop
jbe
inc
ljmp
dec
lea
mov
pop
pop
fdivs
bound
outsb
xor
out
in
hlt
mov
sbb
call
dec
sbb
stc
and
sbb
and
inc
jae
add
pop
icebp
add
add
push
and
gs
mov
inc
mov
ss
and
test
into
mov
xchg
sub
sbb
mov
divl
clc
xorl
jmp
aaa
cli
in
mov
pop
dec
aas
mov
jecxz
in
imul
add
mov
shll
mov
pushl
push
int3
stos
cltd
imul
incb
aas
outsl
loope
psubsw
inc
cltd
mov
pop
mov
dec
sub
test
mov
ljmp
inc
fwait
mov
pop
lcall
and
pusha
mov
mov
push
jo
xchg
sahf
out
lods
add
lds
or
mov
jge
jne
push
xchg
out
js
in
mov
xor
inc
stc
icebp
imul
dec
xchg
fsubl
mov
loop
or
sbb
mov
test
out
mov
mov
lret
movsl
setnp
sub
movsb
cmpb
imul
rcrl
push
test
mov
jb
dec
int
cmp
xor
std
push
jb
xor
fisttps
jecxz
cmp
inc
pop
movsl
out
xor
sub
stos
nop
sbb
mov
sbb
sbb
pop
lret
imul
xchg
sub
ds
or
into
mov
xor
adc
insb
xorb
jo
fnsave
fdivrl
mov
ret
outsl
int
test
sbb
addb
shll
cmp
mov
out
sahf
xchg
push
jne
lods
sub
xchg
loopne
mov
mov
in
cmp
mov
movsl
js
xchg
xchg
adc
hlt
pop
and
push
or
leave
mov
sub
mov
aas
jmp
loopne
push
insb
and
out
test
pop
shll
sti
lahf
push
stos
out
mov
mov
pop
jmp
shlb
push
inc
cmpb
add
cmpb
lods
mov
lds
inc
ds
sahf
mov
push
push
ret
stos
fs
inc
jp
popf
add
repz
es
loopne
and
test
call
push
mov
xchg
ret
xchg
mov
lods
fwait
loopne
jb
loope
je
dec
mov
push
ret
jp
lock
xchg
loopne
mov
and
sbb
lods
ret
push
dec
sbb
test
ret
out
inc
fstpt
ret
stc
roll
pushf
inc
sbbb
sub
stos
in
notb
and
and
jnp
adc
ret
cmp
or
mov
jnp
movsb
rol
movsl
mov
daa
add
lahf
insb
sub
rorl
in
stos
leave
jo
sbb
and
stos
pop
ficoms
ja
mov
jne
ret
lea
ret
out
pop
in
pop
cwtl
ret
jl
xor
imul
add
mov
xchg
mov
es
sub
imul
into
lds
or
bound
test
iret
cli
mov
cmp
jae
ret
add
mov
ret
or
pop
mov
in
sbb
jne
mov
ret
loop
fs
mov
sub
sarb
imul
leave
aaa
inc
stc
ret
je
jl
push
xlat
ficoms
jmp
xchg
test
fcomp
ret
popf
pop
ljmp
dec
mov
mov
mov
sub
jo
cmp
mov
mov
sbb
adc
in
cltd
les
loopne
sbb
ja
inc
ss
and
push
out
aaa
cmpsb
ret
xor
fmul
in
nop
mov
and
fiadds
mov
ffreep
stos
pushf
sbb
je
inc
sbb
pop
outsl
ret
ret
pop
outsb
mov
pop
inc
jne
push
cmpsb
imul
int
jecxz
out
xor
movsl
xchg
cli
mov
mov
out
test
lea
sub
decb
add
pushf
mov
inc
sbb
mov
subl
inc
adc
or
fstpt
xchg
iret
js
and
pop
mov
xor
mov
inc
dec
clc
inc
daa
ljmp
mov
or
ret
sbb
mov
int3
xchg
cmp
dec
cmp
loope
mov
pop
jns
mov
fimull
inc
mov
bound
push
scas
push
shlb
mov
jno
mov
mov
outsl
sbb
ret
std
push
std
dec
xchg
arpl
sbb
pop
add
push
je
inc
test
mov
cmpl
fdiv
add
sbb
sub
shl
mov
mov
and
out
loope
rorl
sub
test
and
add
je
in
add
sbb
loop
and
or
mov
push
jbe
ret
xchg
pop
fmull
into
jmp
cmp
dec
mov
nop
pop
fiaddl
mov
or
or
int
push
mov
mov
ljmp
adc
sbb
lods
pop
inc
jg
mov
jb
ret
inc
pushf
push
xchg
and
int
cltd
mov
push
add
push
xchg
stc
repnz
loopne
mov
int
stos
jb
fsubp
out
test
push
push
or
mov
push
jne
bound
shrb
es
push
sbb
push
ret
pop
fstl
add
ret
fadds
pop
inc
mov
lea
adc
sarl
xchg
addr16
xor
loop
insb
jne
in
push
adc
mov
addr16
mov
insl
xchg
dec
or
ret
dec
int
mov
ljmp
imul
insl
pop
or
adc
jl
pop
xor
and
adc
in
nop
sbb
lds
adc
or
jmp
stos
add
cmp
ret
xlat
xchg
bound
push
mov
push
pop
pop
mov
cltd
ret
pushf
sub
mov
ret
ret
insl
push
cmc
lock
in
mov
mov
fadd
clc
dec
fbld
xchg
pop
stos
fdivp
cmc
scas
ret
xor
pop
inc
cmp
ret
pop
jle
mov
mov
mov
out
xor
ret
sbb
adc
or
pop
cmpsb
imul
fldz
std
mov
into
fst
movsl
and
xchg
ret
cmp
scas
sbb
pop
ret
push
addr16
cmp
notb
dec
cld
fs
lods
ret
sbb
xor
mov
popf
sub
into
ret
xor
bound
mov
mov
or
and
ret
and
decb
dec
and
or
notl
sub
stos
jle
sarl
mov
loope
shlb
mov
pop
fisubl
push
add
aas
ss
idivl
fstpt
push
pop
mov
or
xchg
dec
test
xor
cs
ret
mov
stos
ret
inc
push
lods
das
std
jl
dec
repnz
mov
xchg
sub
jmp
xorl
sbb
test
push
decl
sub
les
mov
ret
adc
ret
adc
sub
mov
loop
sbbl
pop
sbb
or
and
scas
jo
jmp
xchg
aas
or
ret
mov
add
out
ds
jo
pop
out
mov
sub
jbe
testb
dec
dec
fcmovb
ss
adc
aam
loope
dec
mov
mov
add
cmp
ljmp
mov
int3
out
ret
ja
xor
jb
lahf
cwtl
mov
xor
ret
scas
pusha
pop
cmp
movsb
lods
mov
ret
fnsave
xchg
scas
ffreep
jp
gs
jle
jb
ret
test
movsl
pop
lcall
insl
sub
ds
inc
sbb
jbe
jle
add
and
lods
sub
jne
or
xchg
ja
daa
cwtl
ret
cmp
adc
insb
xchg
mov
fwait
cmpsb
push
cld
loopne
mov
mov
add
decl
add
or
addr16
rol
add
pop
mov
dec
cmp
aaa
out
jmp
scas
bound
aas
inc
sti
mov
outsb
mov
xor
test
pop
or
lods
sub
push
test
fcom
mov
mov
push
aaa
ret
pop
imul
ret
lcall
jl
xchg
addr16
dec
cli
cmpsl
hlt
inc
xor
adc
jle
xlat
ljmp
dec
dec
gs
aad
into
ret
int
int3
add
repz
and
adc
cmc
out
add
mov
xor
adc
add
out
push
adc
dec
jae
mov
dec
sub
add
mov
repnz
and
pavgw
rol
and
mov
loopne
adc
pop
out
fstpl
or
cmp
adc
sahf
mov
sub
cmc
das
dec
jo
jnp
pop
and
xor
xchg
js
daa
testl
out
mov
push
sbbl
std
fdivrs
mov
loop
rol
xchg
lods
xor
fucomi
repnz
jl
dec
inc
xchg
loopne
dec
pushl
rorb
test
clc
sbb
fisubrs
mov
movsb
xor
pop
cmp
sub
movsl
mov
cmp
shll
mov
xchg
stos
test
out
or
xchg
mov
mov
loopne
js
adc
rorl
lods
xlat
and
sti
sub
mov
xchg
xor
mov
loopne
xlat
push
sub
mov
shlb
popf
adc
ret
dec
dec
test
mov
rolb
and
stc
lea
mov
cwtl
adc
mov
jle
fadd
aaa
sub
icebp
push
movsl
add
divl
test
adc
scas
and
orb
pop
out
js
stos
pop
mov
outsb
jno
mov
test
movsl
sbb
and
into
mov
popf
and
loopne
dec
jns
fisubrl
cli
test
sbb
mov
inc
movsl
and
xchg
loope
mov
movsl
ds
cld
lock
xor
inc
rorl
repnz
adc
shrb
mov
aas
andb
xorl
push
pop
loopne
cmp
cs
mov
in
lds
stos
sbb
fldenv
push
fs
ret
mov
and
in
mov
jbe
cltd
aas
pop
xchg
data16
imul
mov
push
stos
loopne
pop
stos
insb
pop
cmp
test
aad
js
mov
push
and
mov
fcmove
lret
cmp
jg
int3
sti
data16
rcrb
mov
pop
lcall
pop
fldl
mov
sub
fmull
fstpt
inc
movsl
add
les
lds
shrl
inc
mov
movsl
inc
pop
fiaddl
mov
test
imull
les
cs
or
jb
sub
pop
xchg
jl
out
jmp
rcrb
lds
lret
xchg
sbb
or
mov
loopne
xchg
mov
mov
mov
xor
push
nop
int
xchg
outsb
icebp
cld
ds
jecxz
pop
adc
push
data16
cwtl
xor
jae
jno
movsl
pusha
xchg
pop
int
imul
rol
divb
lcall
jmp
sbb
pop
insb
fistpl
jno
pop
cmp
xchg
icebp
test
fisttpll
mov
cmp
xchg
rcl
push
popa
or
shll
lods
xchg
push
call
mov
es
and
fstpl
ss
add
test
add
js
xchg
sbb
arpl
mov
mov
arpl
test
mov
bound
xchg
repnz
pop
mov
xor
jmp
xchg
adc
xchg
or
cmpsb
jecxz
cmp
jle
cmp
pop
mov
mov
mov
mov
lods
cmp
cltd
movsb
mov
mov
xchg
pop
sbb
xchg
ljmp
fdivrp
mov
sub
in
sub
inc
movsl
jl
add
bound
cmp
mov
mov
cwtl
adc
test
call
fiadds
addr16
addr16
cmp
mov
mov
mov
or
inc
loope
js
cmpsl
adc
jo
jo
add
mov
data16
int3
js
outsl
bound
lods
or
jns
xchg
popf
aad
popa
movsl
fwait
and
movsb
mov
in
incb
push
mov
sub
movsl
ds
jnp
ja
pop
mov
inc
movsl
jmp
shl
adc
movsb
lods
and
jmp
test
jmp
push
out
inc
mov
jge
jbe
inc
lret
cs
xchg
ds
mov
into
aas
popf
in
mov
push
jae
cmp
int
mov
adc
cmp
es
fidivrl
xor
inc
scas
les
movsl
pushf
out
inc
cwtl
enter
out
sub
push
push
jo
push
popa
jge
pop
lds
push
sbb
push
ret
push
subb
movsb
lcall
out
mov
xchg
dec
or
icebp
lahf
cmpsl
pop
gs
mov
hlt
mov
inc
mov
rcrb
cld
jb
lret
int3
adc
push
repz
or
cmp
das
xchg
cmpsl
fwait
scas
jb
test
jmp
stos
in
cmp
jbe
std
pop
loop
data16
mov
mov
subl
or
stos
movsl
xchg
push
rorl
sbb
clc
cltd
xchg
inc
add
jecxz
mov
test
fsts
and
sub
mov
pop
push
movsl
scas
popa
jo
add
enter
out
repz
in
insb
aaa
lods
push
mov
add
sub
mov
jl
jo
or
popf
xchg
ret
push
fcomps
or
pop
mov
push
add
js
mov
mulb
mov
addl
adc
jg
loopne
xchg
pop
enter
xor
lds
cmp
loope
xchg
ss
fwait
sbb
bound
insb
pop
ret
push
dec
mov
fistl
stos
rsqrtps
mov
pop
or
aaa
iret
frstor
pusha
in
aad
cmpsb
insb
mov
pop
cmp
out
mov
ss
cmp
add
mov
sub
insl
nop
call
jns
orl
and
jmp
jbe
test
and
adcb
out
es
aaa
rcrl
jne
xor
loop
push
xchg
xor
adc
sahf
lods
inc
pop
mov
test
mov
cli
testb
mov
scas
and
addr16
fists
mov
test
fldl
push
roll
dec
push
mov
daa
ret
dec
or
xchg
orl
repz
divl
sbb
setnp
mov
jnp
mov
movsl
arpl
cltd
sbb
dec
jnp
and
xor
test
cmp
and
mov
int
fcoms
xchg
cltd
into
cmp
jns
push
mov
add
fnsave
addr16
mov
arpl
mov
mov
mov
pop
adc
jle
fidivrl
pop
test
mov
sbb
popf
mov
fstl
sub
push
mov
xchg
sbbl
sbb
mov
call
sbb
lret
cld
insl
jl
roll
mov
pop
jbe
dec
mull
mov
enter
and
in
stos
addb
fldt
sbb
lds
out
cmpsb
and
jl
in
mov
sarb
gs
jbe
adc
push
mov
cwtl
mov
push
jmp
jae
push
xor
inc
loopne
inc
ss
mov
fs
mov
mov
daa
lcall
pop
cmp
mov
ds
shr
aas
shlb
cmp
mov
jp
adc
and
stos
cmpsb
lods
sti
iret
sub
movsb
xchg
fisttpll
out
pop
xchg
mov
mov
loopne
and
xchg
and
jno
out
pop
sarl
shlb
cltd
sub
inc
insl
nop
lea
ret
and
cmp
jb
fs
mov
mov
mov
test
mov
xchg
rolb
mov
sub
rorl
ret
aas
popf
push
mov
out
jbe
cli
idivl
jl
push
loope
pop
add
lcall
and
lea
jmp
out
bound
xchg
ret
fstps
outsl
push
iret
mov
loopne
mov
mov
pop
dec
push
jle
jmp
mov
ds
push
test
mov
pop
mov
scas
mov
ret
xlat
jo
loopne
testl
scas
mov
dec
shlb
je
mov
sbb
pop
data16
ret
ds
popa
xchg
subl
repz
push
mov
stos
outsl
mov
jle
cmp
dec
mov
es
movsl
in
xor
inc
iret
rclb
mov
jmp
sub
and
and
shll
leave
sbb
cs
bound
lds
xor
fldenv
stc
mov
movsb
inc
ret
movsl
jnp
pop
mov
addr16
inc
fcmovnbe
out
stos
jg
leave
sub
nop
inc
ret
loope
pop
sti
and
in
hlt
int
stos
sti
dec
nop
push
pop
add
xchg
mov
jle
arpl
dec
mov
ret
cmpsl
dec
jb
movsb
sub
outsb
dec
loop
ret
mov
pusha
push
pushf
pop
ljmp
out
aaa
imul
xlat
cmp
xchg
sbb
mov
fwait
cld
or
xor
xchg
lret
bound
xchg
gs
outsl
lds
testb
mov
xchg
into
mov
and
shll
xor
in
mov
adc
arpl
scas
loope
inc
adc
jecxz
add
loop
fisttpl
mov
xor
jb
lods
and
aas
aas
xlat
sbb
fiadds
mov
jmp
mov
ret
push
xorb
xor
jmp
jle
or
mov
fwait
lcall
loope
sbb
cmp
arpl
dec
dec
mov
jecxz
inc
cmc
in
or
nop
test
dec
xchg
jp
cs
pusha
push
pop
das
mov
xorl
out
lahf
bound
sub
outsl
mov
pop
es
add
ret
jle
jecxz
inc
hlt
sahf
cmp
clc
push
stos
insb
movsb
lcall
lods
loopne
in
orl
inc
mov
loop
inc
inc
and
ds
inc
lcall
push
dec
rcl
aaa
mov
fisubl
cld
adc
addr16
jecxz
jmp
scas
cmp
ja
mov
data16
cmpb
or
dec
push
mov
inc
mov
xchg
jecxz
adc
push
mov
add
sbb
sub
mov
popf
xorl
mov
outsw
xchg
pop
add
fbld
arpl
js
stos
loopne
roll
mov
stos
fldl
sahf
int
or
lret
shrl
push
jg
mov
and
mov
outsb
xchg
adc
or
xor
pop
das
cmpps
rcll
dec
and
mov
mov
jecxz
mov
test
and
mov
shll
mov
push
movsb
test
dec
cmp
mov
cmp
out
jecxz
loopne
mov
mov
mov
push
mov
mov
cmp
mov
xor
out
xor
cmpsb
mov
lock
and
mov
icebp
movsl
sub
mov
movsb
mov
loope
test
or
movsb
in
daa
or
loopne
cld
mov
sbb
gs
mov
aad
ss
mov
outsl
shrb
shl
aas
pop
mov
pushf
int
cmpl
stos
pop
loop
or
inc
mov
cmp
sahf
cmc
pop
mov
mov
insb
cld
jecxz
mov
cmp
dec
in
mov
lahf
in
jp
popf
sub
jle
xchg
nop
jecxz
jg
pushf
cmp
fnsave
bound
and
lret
int
mov
stos
xorl
lods
cs
mov
ret
fnstenv
mov
cli
inc
test
mov
cwtl
inc
data16
aad
popl
pop
test
lods
fcmovbe
loope
cmp
pop
out
dec
pop
push
test
leave
loop
out
inc
push
inc
push
xor
add
xchg
add
rolb
or
outsb
mov
xor
outsl
cmp
out
or
mov
lahf
test
push
movsb
mov
xchg
jp
inc
shrb
bound
pushf
jecxz
test
jbe
sub
xor
mov
adc
ljmp
or
fwait
gs
jp
cmp
notl
sub
inc
mov
lods
ret
jmp
aaa
mov
cld
test
adc
stos
scas
rcrl
mov
out
repz
lret
popa
mov
and
pop
mov
mov
push
and
aas
fsubrl
inc
mov
stos
scas
mov
inc
mov
add
jae
lods
stos
es
inc
inc
sbb
dec
rcll
rep
insb
mov
mov
cmp
jb
push
jns
mov
js
movsb
shl
daa
xchg
mov
test
fnstsw
or
lods
not
inc
push
inc
xchg
mov
jns
adc
inc
stos
into
mov
jl
xchg
mov
mov
dec
rol
and
or
scas
cwtl
pusha
jp
xor
js
push
xor
movsb
inc
mov
stos
mov
lock
mov
pushf
mov
test
fstpt
inc
xchg
mov
mov
mov
cld
xor
cltd
lds
call
inc
pop
jmp
push
pop
dec
pop
mov
inc
inc
add
cmp
loopne
hlt
mov
lret
test
jmp
notl
inc
push
or
inc
mov
mov
cmp
movsl
shlb
inc
jnp
js
lods
xchg
cmpb
es
insl
call
js
xor
std
movsb
data16
mov
cwtl
xchg
popa
add
in
scas
lods
mov
fistpll
mov
sub
ret
stc
ds
cmpsb
cmp
cmc
jl
add
jl
and
mov
jbe
cmp
inc
out
sbb
clc
push
mov
inc
adc
rcr
shr
icebp
lods
std
test
imul
js
ljmp
cwtl
or
mov
lds
mov
jmp
inc
enter
jns
sti
sub
cmp
jo
lret
into
sbb
xor
xor
mov
pop
inc
ds
sub
dec
iret
cmpsl
mov
fcompl
mov
stos
mov
xchg
sahf
push
mov
fldl
dec
stc
shr
push
mov
stos
addr16
dec
jle
inc
int
cmp
je
out
adc
and
es
sub
loopew
lret
or
lods
mov
mov
mov
outsl
mov
jp
ljmp
sub
rcr
test
cmp
mov
sbb
outsl
rorb
es
loope
or
lds
enter
xor
xor
push
repz
sahf
test
jnp
xor
mov
xor
imul
test
ret
movsb
mov
push
xchg
cmp
cmp
push
into
stos
cwtl
sub
fwait
cmp
shrl
xchg
ss
sbbb
dec
shr
add
mov
leave
in
icebp
fldl
aaa
inc
fistpll
les
xchg
mov
or
ja
mov
ret
orl
ret
adc
js
sub
fwait
test
push
cmp
bound
add
jg
data16
ret
movsb
jbe
in
sub
ret
inc
insb
add
xchg
inc
ret
jnp,pn
sbb
xor
mov
dec
push
xorb
iret
sub
movsl
cltd
lods
cmp
daa
pop
popa
nop
push
repz
jp
push
adc
movsb
mov
mov
xchg
mov
cmpsb
ret
inc
pusha
adc
loop
mov
mov
mov
mov
mov
jle
mov
repnz
pop
mov
movsb
mov
lds
cmc
std
mov
inc
xchg
push
leave
je
ret
addr16
jnp
sti
xor
sub
dec
mov
hlt
data16
add
test
mov
xchg
popf
aas
cmp
push
enter
aad
sarb
setno
in
cmc
les
mov
xor
scas
cmp
scas
shll
mov
xor
stos
pop
adcb
xor
mov
cltd
sub
mov
cmp
aas
mov
sbb
xchg
xchg
in
pop
das
sub
in
mov
bound
das
mov
lea
push
movsb
xor
aaa
in
mov
xor
xchg
loope
sbb
dec
add
mov
mov
push
shll
fisttpl
mov
and
jl
ret
insl
or
mov
int
je
jecxz
enter
fsts
jb
cs
addb
mov
and
test
pop
gs
and
std
in
scas
sub
xchg
mov
xchg
ds
sub
imul
ret
cmp
fldcw
sahf
add
mov
rcrl
inc
ret
mov
and
mov
jmp
aad
loope
movsl
enter
mov
xor
pop
pop
fnstenv
push
mov
mov
inc
push
addr16
xor
mov
xor
out
cmpsb
lods
sub
imul
cmp
mov
ds
clc
sub
jmp
sar
pop
into
int
scas
test
shll
test
js
or
stos
test
add
loopne
pusha
or
adc
into
xor
dec
xor
lds
mov
cmpsw
mov
outsl
fwait
mov
repz
pop
and
mov
jbe
xor
cmp
lret
sbb
ja
sub
cmc
mov
jecxz
stc
jmp
xor
inc
out
pop
cmp
aad
or
xor
mov
mov
data16
adc
mov
mov
pop
fnstsw
push
leave
sub
movl
pop
into
mov
xorb
rol
in
mov
addr16
inc
js,pn
cmc
push
inc
sub
test
mov
jmp
shrb
or
stos
xchg
hlt
cli
stos
pop
ss
xchg
mov
sbb
ss
xlat
fcoms
sub
xor
sbb
inc
ljmp
mov
dec
xor
mov
cld
inc
mov
test
mov
stos
or
fldl
out
mov
mov
cmp
jbe
sub
imul
mov
mov
mul
cmp
adc
jnp
mov
adc
cmp
loopne
out
mov
outsb
bound
call
into
dec
mov
imul
and
arpl
les
jb
xchg
daa
mov
add
dec
iret
mov
and
mov
in
inc
dec
push
push
mov
imul
xchg
movsb
cmp
icebp
sarl
jo
mov
leave
sub
xlat
dec
or
sahf
test
inc
lahf
test
mov
outsb
in
mov
retw
push
jbe
and
pop
sbb
inc
inc
ds
fisubrs
shrl
jns
push
cmp
ret
hlt
adc
sub
flds
movsb
shlb
in
cli
inc
aad
mov
ficompl
inc
mov
pop
int3
js
and
jecxz
data16
ret
imul
scas
xor
movb
jno
cwtl
cvtpi2ps
cmp
es
int
scas
loop
mov
mov
mov
rcrl
and
or
jecxz
mov
mov
cmp
imul
loope
push
adc
fisubl
mov
enter
push
test
mov
stc
ret
dec
and
cmpsb
mov
out
mov
inc
ja
fadd
lret
xlat
xorb
addr16
stos
and
mov
cmc
data16
mov
ficoml
dec
mov
push
xor
mov
xchg
lret
mov
shl
adc
ret
iret
add
aas
fcoml
mov
ret
sarb
pop
jo
es
mov
mov
ret
ljmp
mov
jecxz
mov
inc
push
and
ret
fisttpll
addb
cmpsb
push
cs
jns
cwtl
fbstp
inc
decb
sub
xchg
in
push
arpl
test
mov
pop
movsb
scas
stc
mov
in
outsl
mov
nop
sub
ret
mov
mov
or
or
adc
adc
jnp
lods
shll
push
pop
ret
push
xor
int
cmp
fcoms
xor
and
es
pop
mov
mov
xchg
addr16
push
in
scas
stos
dec
outsl
cmp
mov
push
and
sub
mov
push
mov
add
js
stc
pop
jg
jmp
test
bound
adcl
xor
push
cmpsb
pushf
jmp
xor
pop
lcall
lret
add
adc
ret
jno
mov
mov
cmc
or
mov
mov
imul
sub
iret
mov
movsb
ret
xor
mov
inc
mov
ljmp
cli
xor
lods
mov
xor
scas
stos
pop
loope
pop
mov
mov
daa
jecxz
leave
adc
mov
cmc
cmp
mov
loop
sbb
lea
mov
out
imul
shr
pushf
pushf
lea
aad
jge
jle
pop
mov
loopne
sub
loopne
insb
lods
loopne
mov
das
cmpsl
jno
sub
das
cmp
fildl
add
shll
mov
inc
mov
xorl
aaa
ret
jnp
mov
jg
ds
ret
sub
test
sub
mov
cmc
sub
xchg
repz
inc
mov
pop
jmp
xor
mov
lds
fdivrl
xor
sub
in
mov
mov
sub
mov
xor
inc
cld
sti
lret
int
cmpsl
inc
or
mov
push
das
ret
cmpsl
int
popa
dec
jl
lods
lahf
sub
mov
stos
mov
arpl
aaa
into
mov
call
mov
frndint
dec
jo
mov
out
xchg
cmpsb
hlt
cmp
mov
fsubs
sub
sub
sti
scas
outsb
scas
inc
int
mov
std
cmp
sbb
fistl
mov
daa
mov
popa
mov
and
jp
cmp
aaa
mov
lds
or
stos
mov
push
into
jle
mov
sahf
in
cmp
mov
xchg
out
data16
cli
cmp
insl
clc
iret
mov
rclb
inc
mov
dec
pushf
imul
mov
leave
jb
loopne
adc
mov
ret
enter
jmp
jecxz
jmp
mov
fistpll
loope
movsl
cmp
out
scas
aaa
es
pop
xchg
shll
lock
xchg
pop
dec
cmpsl
mov
das
jo
jg
jmp
pusha
push
xchg
mov
add
es
notb
inc
sbb
jns
mov
inc
cld
or
mov
pop
xchg
aas
fcomps
scas
xchg
daa
jae
jnp
mov
add
xor
mov
pop
cmp
ljmp
pop
and
shl
pop
inc
sub
mov
rcll
out
sbb
fldt
popa
cli
sbb
arpl
stc
and
and
inc
jecxz
add
xchg
es
and
mov
xorb
jmp
mov
cltd
jecxz
xchg
xor
daa
mov
mov
rol
add
int
inc
adc
mov
cs
scas
jp
leave
xchg
je
mov
mov
sub
fiaddl
mov
stc
mov
mov
sbb
or
inc
je
add
mov
inc
insb
dec
andb
xor
pop
jecxz
pop
aam
xchg
mov
xchg
lea
xor
inc
dec
icebp
push
xor
and
loop
out
aam
inc
pop
daa
rolb
mov
ret
cmp
stos
add
mov
ds
test
inc
nop
sub
push
cmpsl
jmp
daa
inc
xor
lods
inc
or
mov
out
out
ret
nop
cmpsl
mov
shll
jle
inc
ss
scas
pop
repz
xor
inc
lds
pop
fsts
aas
ret
and
mov
pop
lock
sbb
sbb
pop
lods
push
push
repz
loope
and
imul
cmp
testb
or
cld
adcb
mov
xorb
xor
dec
jmp
xor
and
sub
mov
out
das
mov
sarl
xor
or
add
loopne
xor
aad
cmc
and
adc
fisttpl
cmp
daa
or
and
lret
sub
pop
inc
pop
mov
test
ret
out
cvttps2pi
ret
pusha
push
testl
xor
ljmp
aaa
push
sub
lret
inc
roll
and
scas
iret
xchg
mov
jg
and
mov
sbb
mov
int
scas
mov
movsb
test
mov
sub
cmp
inc
mov
mov
or
jmp
ret
gs
sub
mov
mov
stos
sub
mov
mov
jecxz
cmpsb
push
mov
mov
gs
inc
mov
sub
xor
xor
jecxz
in
cmp
lds
iret
pop
push
fdivrs
jp
fldenv
cmc
scas
mov
bound
lahf
mov
add
divb
fcoml
pop
sub
cmpsb
mov
inc
enter
gs
mov
jnp
xor
shl
mov
ds
cmpsl
inc
adcb
jns
testl
xor
cli
cmpxchg
lds
incl
inc
out
popf
sbb
out
js
cld
xchg
push
loopne
scas
jne
mov
cli
push
xchg
add
and
cli
mov
fwait
shlb
xlat
repnz
test
fcompl
shrb
mov
sub
mov
mov
xchg
mov
int
add
imull
jno
inc
aas
push
mov
mov
in
test
lods
movsb
rcll
or
inc
push
xlat
sbb
fsubrl
lahf
mov
inc
rol
and
push
pop
jl
mov
inc
pop
inc
ja
imul
sub
mov
out
add
sarb
mov
ds
jg
mov
ljmp
mov
mov
jo
and
push
jmp
je
push
sti
andl
dec
jb
imul
xor
push
punpcklbw
mov
xor
test
fdivs
mov
jo
sub
repnz
xor
js
das
mov
mov
sub
mov
jmp
push
dec
fucomi
xchg
xchg
mov
das
test
movsb
fnsave
adc
test
xchg
outsl
je
xlat
movl
mov
and
cmpsl
mov
in
and
out
stos
xchg
sarb
mov
xchg
jbe
mov
shrb
cmp
andb
test
jle
ret
in
stos
dec
ds
mov
ret
daa
adc
movsl
sbb
sub
notl
out
xor
shl
fmull
push
or
loop
xlat
cli
fnstcw
xchg
dec
xchg
sub
fstpt
enter
ss
mov
pop
and
jp
or
xor
push
mov
mov
loop
xor
pop
aaa
adc
ret
ret
mov
mov
add
inc
outsl
pop
sub
cmp
lret
sub
fsubrp
push
sbb
add
ljmp
aaa
cmpsb
fstps
jmp
es
cmp
mov
pop
adc
sbb
mov
pusha
popf
jbe
negl
mov
mov
lret
adcb
addr16
fistpll
mov
call
cmpsl
shl
je
ss
ret
cmp
daa
ss
fildll
xorb
jecxz
mov
fsubs
addr16
push
outsb
loop
aaa
iret
cli
cmp
das
js
xor
aas
test
cmp
jnp
sub
mov
ljmp
xchg
fcmove
sub
scas
pop
sbb
mov
addr16
mov
int3
cltd
out
sub
popf
aad
into
xchg
cmp
xlat
shl
or
popa
add
push
mov
rcll
xchg
cmp
dec
iret
je
dec
cmp
sub
rcrl
sbb
mov
xchg
jl
shlb
imul
mov
mov
aad
jmp
adc
pop
stos
cmp
ds
mov
cltd
ret
push
inc
dec
popf
push
into
xor
daa
ret
sub
and
jecxz
and
and
imul
or
lea
sbb
add
inc
out
enter
mov
mov
das
jmp
and
das
mov
jne
lock
aad
mov
inc
aam
daa
inc
shrb
mov
jae
jbe
and
mov
ret
inc
mov
das
and
daa
in
cmp
mov
pop
andl
ret
mov
mov
push
in
pop
enter
movsb
ror
push
inc
or
ret
dec
mov
mov
xlat
pop
mov
cmp
xor
ss
jo
shrl
mov
cmp
mov
scas
mov
cs
sarl
xor
frstor
subb
cmp
inc
in
mov
mov
icebp
es
movsl
leave
mov
sub
out
pop
dec
cmpsl
outsb
rorb
xor
jl
fwait
mov
js
movsb
xchg
leave
imul
out
cmp
outsl
cmpsl
jp
inc
iret
movsl
sub
cmp
xor
and
shrl
and
cmpsb
rorl
cmpsl
mov
lea
lods
jnp
mov
out
popa
dec
mov
stos
rorl
xchg
sbb
xor
jmp
shrl
in
ret
pop
dec
push
test
cmp
xchg
mov
mov
repz
inc
sbb
ret
fsubrp
lret
pop
mov
add
push
loopne
repz
or
movsl
inc
ret
jle
fs
iret
push
inc
cmpsb
or
push
fisttps
mov
mov
movsl
or
das
mov
movsl
shll
sub
xchg
add
das
push
movsb
iret
xchg
mov
jb,pt
mov
push
test
das
xchg
or
insb
sub
aad
push
mov
repz
sub
lods
xlat
in
aaa
adcb
aas
xchg
mov
test
mov
out
cmp
jns
push
aaa
push
xor
inc
jmp
addr16
inc
cli
push
mov
push
push
xchg
mov
xor
movsl
data16
ret
or
xchg
movsb
ret
and
mov
mov
rep
lret
lods
pop
xchg
and
sbb
stos
pop
xor
ret
fldcw
sub
ret
fs
ffreep
pop
imul
and
loope
inc
xor
mov
andb
inc
mov
jecxz
mov
fiaddl
rol
ret
dec
xchg
xchg
daa
sbb
and
push
jae
shll
mov
test
daa
fildl
fs
push
push
jo
test
orb
xchg
mov
shrb
mov
mov
mov
xlat
scas
out
mov
frstor
aas
in
stos
mov
loopne
xchg
ja
call
clc
aaa
sbb
cmp
push
aaa
sub
xchg
shlb
xor
add
pop
adc
mov
inc
loope
sti
sub
ret
pop
jmp
inc
push
out
insb
out
xor
rol
cmc
xor
jmp
pop
in
mov
jne
lods
bound
xchg
test
ss
fiadds
push
ja
mov
call
jbe
xchg
in
mov
repz
add
popf
xor
movsb
mov
mov
add
andb
add
xchg
out
push
pop
dec
daa
jp
adc
xlat
jns
inc
inc
and
push
mov
and
and
jmp
mov
jbe
mov
pop
mov
pushf
test
xchg
in
mov
or
mov
xchg
sub
ret
ljmp
xlat
xor
ljmp
sahf
jnp
adc
sub
xchg
cmp
aad
add
pop
dec
popf
sub
movsb
loopne,pn
jbe
add
xor
popf
test
flds
mov
add
mov
xlat
sub
push
add
data16
test
pop
mov
pop
mov
xor
jbe
xchg
mov
lret
add
push
pop
sub
fwait
dec
pop
xchg
ret
mov
mov
mov
inc
stos
xchg
loopne
sti
mov
repz
fiadds
and
mov
mov
cmp
mov
movsl
mov
addb
inc
cmp
lods
test
ret
dec
inc
add
mov
and
cmp
cmpsb
lds
jb
movsb
or
mov
cmp
cmp
jmp
lret
add
inc
sbb
test
xlat
sub
int3
mov
in
stos
ja
fs
jmp
pusha
cmp
inc
inc
jb
sbb
dec
mov
mulb
test
jl
mov
xchg
clc
popa
in
xor
loope
out
jl
jmp
push
sub
lahf
dec
aas
aas
bound
sub
movsl
aaa
mov
aad
das
sbb
mov
inc
pop
adc
mov
aad
push
mov
sub
lds
rcl
mov
mov
or
jg
pop
lret
jno
mov
cmp
cmp
push
dec
inc
aam
ss
movsb
movsl
xor
fs
mov
loop
jecxz
push
ret
mov
xchg
inc
loopne
sub
int
in
cs
xor
fwait
mov
data16
inc
ffreep
loope
adc
std
out
sub
daa
jecxz
xor
jecxz
push
dec
cmp
mov
xor
mov
scas
mov
rclb
ja
inc
out
xor
push
leave
cld
mov
xchg
adc
nop
pop
mov
xor
jno
adc
mov
or
ret
dec
mov
push
aaa
and
jmp
inc
lret
out
cld
mov
jge
bound
aad
push
pop
sub
dec
and
mov
mov
xlat
fiaddl
cld
pop
or
pop
icebp
in
xor
lds
inc
sbb
ds
xlat
pop
inc
aam
fidivl
cltd
scas
cmpsl
aaa
outsl
mov
into
push
mov
scas
sub
fdivs
pop
jns
clc
mov
pop
and
mov
das
ljmp
fnsave
ss
out
cmpsl
ret
cmp
stos
lods
shll
sub
and
shrb
xchg
mov
aaa
sub
mov
push
lods
sbb
push
mov
fwait
sub
pop
test
add
mov
andb
addl
and
into
lods
mov
cwtl
arpl
jo
xor
loop
hlt
sub
or
cmp
cmp
fs
ret
cld
mov
cmpsl
stos
mov
aad
push
pop
mov
scas
sub
xor
xor
push
mov
and
movsl
or
daa
add
adc
mov
jecxz
mov
jmp
sub
test
ret
add
ror
shr
daa
lds
call
cld
mov
sub
and
inc
stos
outsb
jns
into
adc
sub
out
int
sbb
ret
std
sub
es
ret
inc
xchg
and
fisubrl
add
imul
leave
xorb
push
mov
ljmp
xor
xor
rcrl
aad
data16
pop
jecxz,pt
inc
push
rcll
jmp
or
push
fwait
bound
or
daa
mov
jecxz
pop
mov
mov
mov
stos
or
es
and
sbb
mov
rorl
fsts
push
aas
cmp
and
into
enter
mov
aas
or
bound
mov
popa
iret
and
lds
xor
cld
pop
and
outsl
loopne
out
mov
stos
cs
lea
mov
fnstsw
stos
jns
insb
xor
fildl
xchg
push
push
mov
jbe
jno
sub
imul
ja
cmp
mov
imul
jne
push
and
pop
inc
cmp
arpl
dec
xor
loope
cmp
out
cltd
ret
push
imul
mov
fstpl
xor
fistl
out
mov
decb
dec
jle
and
cmp
loopne
sbb
mov
scas
test
mov
jo
mov
mov
popa
std
mov
daa
movl
inc
flds
xchg
dec
mov
mov
jg
mov
lods
daa
inc
push
out
je
and
push
and
aas
inc
cmp
test
jne
stc
lods
pcmpgtd
mov
gs
mov
mov
jnp
adc
iret
mov
xorb
aaa
mov
cmp
mov
sub
sub
pop
ret
shlb
mov
push
fs
test
jecxz
lock
and
out
mov
jnp
ret
push
shrl
das
mov
repnz
xor
test
ret
cmp
sarl
ret
movsl
je
pusha
jp
ljmp
arpl
xchg
into
rorb
ret
inc
das
rcrb
test
loop
xor
aaa
inc
mov
test
fildll
mov
data16
cli
xor
sti
jnp
loop
inc
leave
shrb
add
shrl
xor
push
cmpsl
ret
insb
pop
test
xchg
xchg
or
mov
dec
or
scas
mov
jl
incb
mov
add
xacquire
push
sub
jae
fdivl
push
cmpsb
imul
cmpsl
jno
ds
or
ds
and
clc
mov
pop
int3
lock
ds
mov
mov
sbb
bnd
push
mov
and
add
mov
movsl
add
mov
lds
orb
aas
jecxz
cld
push
mov
int
mov
pop
cld
aaa
outsl
jns
xor
pop
sub
xor
jns
xchg
dec
std
mov
dec
jecxz
push
and
ret
xchg
mov
mov
cmp
and
outsb
fs
jne
push
sub
jmp
js
in
lock
test
fnstcw
jae
xchg
imul
mov
inc
roll
js
add
daa
out
inc
dec
add
push
cmp
xchg
out
inc
gs
xchg
inc
mov
daa
mov
mov
pop
or
hlt
cmp
lds
xchg
lods
incb
push
xor
dec
add
int3
or
loop
pop
sub
and
or
arpl
ljmp
popf
cmp
ret
test
leave
outsl
and
fistl
iret
movsl
ret
add
ret
push
popf
cltd
idivl
mov
xchg
sub
jns
push
mov
push
insb
movsb
mov
jl
flds
xchg
mov
mov
jecxz
pushw
movsb
mov
out
and
sub
inc
mov
jo
dec
pop
stos
mov
dec
in
mov
dec
ss
mov
xor
les
shlb
mov
mov
cmpsb
test
aad
mov
outsl
or
test
imul
or
ret
rclb
cmp
and
sub
cwtl
jmp
int
jle
push
outsl
or
repnz
sbb
out
scas
and
xchg
add
cs
pushl
cmp
out
pop
xchg
into
push
das
cmp
cmp
lods
pusha
lods
arpl
cmpsb
inc
jnp
mov
jmp
pop
pop
ret
mov
cld
xor
outsb
mov
and
mov
fincstp
subl
and
vmovntps
mov
faddl
xor
xchg
clc
mov
ret
idivl
cmpsb
and
lods
jmp
xchg
jle
xchg
out
mov
or
test
movnti
aaa
adc
je
sti
test
js
ret
leave
pop
sub
cmp
mull
sub
mov
mov
loopne
jecxz
into
mov
ret
cmpsb
add
stos
sti
and
jge
inc
dec
jne
scas
jg
aaa
stos
mov
mov
mov
stos
push
adc
inc
arpl
mov
inc
jmp
ret
fisubrl
jle
mov
in
outsb
das
mov
pop
inc
loopne
mov
jns
loop
jp
nop
xor
ja
mov
adcb
ret
ret
shll
mov
pusha
mov
shlb
pop
inc
aaa
mov
and
xor
push
xor
ja
pusha
push
scas
mov
lods
mov
cmp
mov
ret
aad
mov
daa
lret
and
clc
sub
shlb
mov
xor
xor
psubd
inc
xchg
inc
js
daa
inc
fucomi
and
out
ret
push
mulb
pop
adc
dec
ds
test
lret
cmp
mov
adc
mov
cmp
jb
mov
cmpsb
mov
cmpsb
aam
ret
add
fnstenv
loopne
les
lods
shrb
es
int
sbb
mov
data16
push
subb
pop
stos
jnp
mov
sbb
fdivs
iret
xor
stos
xlat
pop
test
sub
popf
jecxz
jne
mov
stos
xlat
jmp
and
in
cwtl
ret
xchg
adc
sub
movsb
or
mov
cmpl
mov
filds
pusha
pushf
jle
imul
cmp
xor
push
clc
into
and
sar
xlat
mov
sbb
pusha
or
mov
cmp
sub
cmp
lret
xor
addb
ljmp
sub
jmp
or
jle,pn
je
shlb
out
jb
mov
push
rorl
data16
and
div
mov
test
stos
sahf
sub
xchg
inc
sub
leave
orl
mov
shrb
push
into
lods
movsb
mov
cmp
ds
push
arpl
xor
cmpsl
aad
pop
icebp
mov
sub
mov
mov
pop
sub
repnz
pop
sub
cmp
xchg
lahf
inc
inc
xor
callw
mov
fadds
push
loop
loop
sarb
fbld
jmp
dec
cld
add
lds
mov
mov
cmp
xor
mov
jp
outsb
or
and
cltd
or
sub
xchg
data16
es
stos
lods
push
movsb
repnz
inc
leave
dec
xchg
aaa
jge
push
mov
xlat
inc
ja
sub
js
push
jns
cli
mov
push
test
lahf
mov
jb
insb
xlat
xchg
loop
cmpsb
push
mov
inc
imulb
add
imul
push
cmpl
mov
jecxz
mov
jae
push
cmpsb
mov
jg
iret
icebp
push
aaa
out
rcrl
jbe
mov
sub
and
push
mov
loop
in
fwait
sub
movsb
fsubs
lods
mov
push
popa
rclb
xchg
movsb
or
rol
xlat
fcoml
pop
jbe
pop
mov
loope
pop
cmp
mov
lahf
mov
cmpsl
loope
xchg
pop
in
addr16
stos
ret
mov
adc
cmpxchg
daa
mov
push
pop
lahf
and
in
cmp
mov
xor
fildl
push
cltd
stos
mov
cmpsb
fcomps
movsb
or
out
insb
cmp
push
or
cmpsl
test
push
stos
sbb
popa
jg
test
mov
popl
das
es
fstps
add
aas
mov
pop
test
fadd
aad
or
sbbb
and
loope
sub
lock
xchg
jp
xor
mov
jle
mov
cmp
ret
mov
popf
inc
scas
cmpsl
xor
stos
lods
shrb
sub
sub
outsl
mov
cmpsl
arpl
cmpsb
daa
leave
jmp
stos
pop
cwtl
pop
cmc
es
sub
into
mov
aad
pusha
xor
addl
into
and
ret
push
sub
pop
or
mov
adc
lods
jno
fisttpll
inc
xchg
repz
cmp
xchg
inc
popa
cmpsb
pop
stos
ret
inc
cmpsl
test
loope
sarl
mov
and
inc
ret
sbbl
clc
push
cs
push
mov
pusha
daa
sub
mov
stos
movsl
push
xchg
inc
stos
movsl
lods
fistl
cld
pop
mov
add
insb
inc
ret
xlat
lds
mov
sbb
lods
inc
xchg
aad
mov
inc
xor
cmp
es
mov
cmp
cmp
ss
aaa
daa
push
mov
shll
out
mov
pop
in
scas
fildl
test
mov
cs
enter
mov
mov
cli
jb
mov
ljmp
xor
sbb
mov
or
test
notl
repnz
repz
pop
ret
mov
leave
out
out
mov
fs
mov
push
mov
cs
dec
dec
add
bound
jle
loope
movsl
jmp
cmp
loope
sub
test
shll
cwtl
imul
mov
mov
lret
jg
mov
ss
mov
das
xadd
sbb
sub
orb
lahf
movsl
jno
mov
xor
mov
or
pop
inc
xchg
jecxz
cmp
imul
inc
lock
imulb
lods
add
pop
or
cmp
ret
or
nop
sahf
mov
cmpsl
add
cmp
jne
mov
sbb
push
in
inc
push
mov
cmpsl
lret
add
xchg
les
sub
std
cli
inc
es
push
nop
jmp
sbb
ret
or
arpl
push
test
jbe
push
mov
movsl
cmc
clc
ss
idivl
lods
ret
imul
cmp
lods
repz
xchg
inc
test
cltd
jmp
inc
xor
fwait
into
mov
mov
pushf
add
pusha
outsl
shll
cmpsl
popl
lret
in
and
scas
cmp
pop
pop
xor
in
stos
mov
mov
sub
cs
or
movsl
pop
jmp
push
movsl
int
cmp
divb
iret
movsl
ret
orb
and
data16
sub
iret
add
mov
inc
mov
xor
dec
xchg
movsl
mov
xor
jp
int
pusha
add
mov
fcoml
mov
ret
mov
decb
test
popa
dec
xchg
daa
xchg
xor
mov
sarl
stos
mov
fildll
adc
ret
mov
aas
clc
sahf
xor
ja
aam
es
mov
fsubrp
test
mov
push
ds
into
call
cmp
shr
inc
sbb
repz
lret
inc
cs
insl
inc
xchg
inc
ret
xchg
mov
mov
xlat
into
jl
mov
xorb
test
call
mov
jmp
mov
rol
sub
int
ss
loopne
imul
dec
adc
sarb
loope
dec
imul
sbbb
dec
data16
les
stos
mov
ret
clc
popf
push
xor
pop
mov
inc
jmp
sub
jecxz
cmp
xorb
scas
xor
jo
mov
test
and
mov
test
sbb
jecxz
jne
movsb
lds
cwtl
mov
cmp
mov
stos
push
xlat
and
mov
mov
lret
lahf
ljmp
es
push
data16
ret
aam
popa
lea
or
out
bound
jl
lods
add
and
mov
jecxz
fnstsw
cmpsl
lds
cmpsb
pop
xchg
xor
rcll
push
pop
sub
push
mov
outsb
out
adc
cmp
scas
mov
ds
test
leave
add
sahf
mov
jmp
test
inc
cld
xchg
xor
aam
sub
jg
cmpsb
scas
mov
inc
sub
incb
jmp
fwait
mov
xchg
movsl
cmp
sub
inc
mov
or
cmp
and
jmp
xor
fisttpl
dec
mov
sub
sti
pusha
adc
mov
mov
faddl
out
fnstcw
arpl
aas
fists
jecxz
fcomps
mov
pop
leave
and
out
loope
inc
mov
iret
mov
test
fistpl
cmp
inc
jno
stos
mov
dec
sbb
mov
shlb
outsl
test
ljmp
scas
mov
xor
xchg
repnz
mov
scas
stos
cwtl
nop
fdivrl
cmp
scas
aas
ja
daa
mov
repz
push
test
add
rol
jno
pop
dec
sub
mov
flds
lock
ret
inc
repz
mov
mov
fwait
push
pop
leave
cwtl
cmp
cmp
cli
push
dec
sti
mov
leave
sbb
shlb
call
fildl
daa
xchg
inc
pop
dec
scas
ds
loop
stc
fs
pop
mov
ret
test
push
inc
aam
dec
sub
cmp
dec
out
dec
ljmp
xor
sbb
xchg
in
arpl
test
mov
jne
fdivs
mov
cmp
push
daa
mov
loope
cmp
add
add
cld
insb
mov
cs
scas
mov
and
or
jmp
out
mov
aam
arpl
push
adc
xorb
lock
and
xor
popa
and
mov
shlb
fldl
sbb
mov
fnstenv
cmpsl
or
dec
cwtl
cmp
sub
jno
in
push
mov
ret
mov
cmpsb
cmpsl
divb
mov
lahf
movsb
add
sbb
and
mov
leave
rep
mov
add
or
mov
sub
shll
mov
inc
or
push
sub
clc
lret
test
rcrl
cmp
sub
daa
iret
xor
loop
cld
inc
std
sarb
sarl
loope
cltd
jl
aaa
mov
ret
cli
outsl
jmp
mov
popa
fistps
or
inc
mov
fisttpll
jo
mov
mov
mov
shll
inc
mov
cmpsl
movsb
mov
mov
sub
addb
cltd
lods
mov
es
ss
int
ljmp
rcr
loope
and
sub
mov
cmp
mov
mov
mov
fwait
or
mov
fbstp
pop
mov
outsb
cmc
divb
loope
mov
lods
jmp
das
iret
xchg
stos
ret
mov
mov
std
cltd
mov
pop
repz
mov
mov
mov
mov
scas
xchg
push
mov
iret
fldl
xchg
mov
dec
xor
aas
inc
mov
inc
aaa
mov
cmpsb
data16
inc
fisttps
add
sbb
std
jge
jns
xor
mov
cmp
jl
std
inc
mov
xchg
push
inc
mov
pusha
fwait
stos
cmpsl
cmpsb
inc
cli
rcrl
mov
jmp
inc
mov
inc
and
test
cs
xlat
pop
cmp
scas
pop
test
inc
in
sbb
mov
mov
and
int3
ret
mov
popa
jecxz
jge
inc
cmp
xor
xchg
mov
and
cmpb
ret
jecxz
fwait
xchg
sbb
push
cmp
and
jbe
and
push
mov
mov
mov
adcl
jmp
sbb
xor
loop
shrb
cmpsb
mov
mov
loope
mov
jmp
stc
out
pop
adc
mov
adc
aam
ret
pop
cltd
cmp
mov
sarb
pop
or
iret
xchg
push
xchg
scas
cld
das
mov
iret
push
orb
dec
test
mov
lds
inc
loopne
mov
ret
jmp
ret
xorb
xor
pop
inc
add
mov
xchg
addr16
push
mov
cmp
inc
lods
mov
fnsave
rorb
mov
jl
push
leave
scas
stos
add
movsb
lods
fdiv
mov
cmp
dec
loopne
scas
pop
das
data16
movsb
jge
stos
mov
iret
lea
sub
xchg
mov
add
xor
stos
roll
test
aad
icebp
dec
cmp
ja
mov
mov
jb
daa
add
inc
mov
movsb
sbb
xchg
sub
xor
or
daa
mov
scas
outsb
ds
mov
xchg
xor
rcr
loope
lret
and
insb
rol
aad
imul
cmp
out
xlat
lods
and
into
xchg
cmp
aaa
mov
pop
cmpsl
jmp
and
in
ret
sbb
inc
mov
sarb
xlat
ret
aas
pop
orb
mov
add
fs
pop
xchg
xor
mov
pop
lock
fiadds
mov
xorb
mov
leave
popa
mov
add
scas
jecxz
getsec
enter
xor
xchg
scas
and
fdiv
cmpsl
ss
in
stos
sbb
xchg
and
xor
inc
xor
mov
insl
or
mov
and
and
jmp
pop
mov
imul
outsl
push
shlb
test
lahf
mov
out
jno
push
roll
js
lods
ret
mov
jns
mov
mov
xor
lret
stc
ds
out
aaa
cmp
xor
push
movsb
mov
out
psubusw
ja
mov
test
sub
xchg
pushf
pop
stos
outsb
cmp
pop
loope
mov
test
int3
pop
xor
cmpb
cmp
cmpsb
fwait
pop
cmpsb
jecxz
mov
cmpsl
movsl
xchg
jecxz
and
daa
scas
sub
push
xor
test
frstor
insl
or
jb
in
xlat
mov
mov
cmpsl
sbbb
subb
pop
cmpsl
js
pushf
rcll
sbb
push
std
leave
mov
push
push
test
jl
mov
sub
xchg
enter
imul
cmp
mov
les
ret
sbb
mov
lret
in
leave
addr16
add
cli
test
insb
mov
inc
ret
push
popa
jl
repnz
shlb
and
push
pop
and
pop
fwait
es
loop
lock
or
stos
mov
inc
sbb
or
cmp
push
mov
cli
das
std
mov
mov
loopne
bound
out
mov
loop
ret
insb
mov
mov
xlat
sub
je
aam
in
cmpsl
xchg
inc
mov
cmpsb
fndisi(8087
jl
sub
pop
test
lods
lock
lods
aaa
enter
cmp
pop
lds
jae
mov
sub
cmp
cmpsl
xor
stos
push
mov
aad
push
out
imull
and
inc
mov
push
lret
mov
scas
jle
rorb
sarl
push
scas
mov
jg
pop
jmp
mov
xchg
lahf
pop
rcll
ss
fndisi(8087
cmp
aaa
sbb
cmp
jecxz
cmp
xchg
scas
loope
nop
push
xchg
jmp
and
sub
stos
rorl
xor
mov
shrb
sub
loope
xlat
add
inc
mov
sub
add
in
mov
mov
js
loope
pop
loopne
cmp
xchg
xor
mov
xor
mov
jge
rcrb
mov
inc
int
pandn
aaa
jns
data16
sti
pop
mov
sub
shrl
popf
and
movsb
mov
mov
cmc
pop
inc
mov
rolb
cli
das
jle
aad
lods
xor
pop
pop
test
mov
xlat
xchg
push
xchg
jecxz
push
cmp
rorl
dec
nop
mov
popf
test
xchg
ffreep
mov
lods
aaa
clc
inc
xchg
and
mov
add
xor
stos
stos
mov
jnp
inc
cmp
sbb
mov
dec
fmull
mov
int
call
mov
mov
es
and
mov
loope
jbe
or
ss
outsl
xchg
push
aas
ret
leave
fmul
fs
push
ja,pt
sub
pop
push
cmp
or
adc
mov
fucomip
es
lcall
inc
test
ret
aad
dec
mov
cmc
sti
sub
pop
rcl
stos
mov
ret
sbb
lahf
lcall
cmpsl
fstps
sbb
xor
cld
sub
sub
xchg
or
daa
push
mov
cltd
jo
cmp
lret
aas
imul
outsl
xchg
mov
filds
sahf
sti
mov
in
mov
inc
rcrb
jmp
jns
mov
cmp
outsl
cmp
ret
icebp
popf
jae
rcl
rcrl
inc
shll
call
scas
mov
sub
fucom
mov
mov
mov
ret
pop
push
insb
mov
leave
std
sub
push
sbb
cltd
mov
xchg
dec
daa
aaa
sub
xchg
xor
ret
xchg
mov
xor
out
stos
int3
popa
sub
inc
daa
rclb
xchg
sti
xor
mov
mov
mov
jne
sub
dec
sub
test
fbstp
jbe
test
cvtpi2ps
cli
dec
mov
push
mov
add
pusha
mov
adc
and
inc
or
dec
xchg
ret
inc
jo
dec
je
out
mov
cli
dec
fwait
jnp
icebp
mov
dec
add
cli
leave
sbb
arpl
dec
das
mov
dec
lds
inc
xchg
es
xlat
stc
mov
mov
mov
pop
add
loop
lds
mov
jg
mov
test
and
out
inc
fmuls
mov
inc
loopne
cmp
inc
int
inc
mov
dec
ds
mov
sbb
sub
cltd
iret
stc
mov
int
ret
jp
inc
sarl
push
insl
enter
mov
sub
lods
shlb
insb
mov
pop
fbstp
fs
xor
push
dec
mov
and
bound
data16
fisubl
mov
mov
loopew
push
push
in
dec
mov
cmpsl
loope
jecxz
inc
adc
stos
aam
insb
das
rclb
dec
mov
or
add
in
inc
mov
incl
stos
mov
xchg
lods
push
cltd
fstpl
test
in
mov
mov
mov
mov
mov
push
dec
adcb
adcb
mov
inc
mov
adc
test
mov
out
cmp
fxch
rclb
mov
mov
sti
ds
mov
sub
aam
jmp
lds
xor
sbb
mov
std
jns
adc
inc
add
ds
test
pop
rcll
cmp
repz
mov
jne
inc
jl
ret
cmp
adc
insb
sub
or
and
jo
inc
rolb
mov
roll
add
call
aad
sarb
dec
aas
jnp
lock
mov
inc
cmpsl
mov
mov
gs
mov
sarl
dec
ficompl
mov
test
sbb
mov
pop
xor
pop
lahf
mov
jns
sti
aaa
mov
clc
jge
movsl
das
mov
jp
outsl
jnp
or
cs
xchg
daa
bound
mov
and
jecxz
cmp
cli
cmp
jns
mov
ja
jl
dec
mov
inc
es
scas
cs
dec
pop
mov
sub
leave
mov
xchg
mov
mov
pop
xlat
lods
jbe,pn
mov
add
mov
pop
xor
jae
aad
xchg
mov
imul
cld
sub
pop
sbb
rclb
jg
shrb
cmp
mov
pop
lret
cmp
add
mov
inc
outsl
add
or
cmp
enter
pop
frstor
into
xchg
cmp
aam
and
out
jbe
xchg
jecxz
lret
mov
xchg
rol
mov
push
out
pop
mov
loop
mov
mov
inc
add
inc
das
sub
sub
sbb
pop
in
ss
shl
lahf
jbe
sbbl
rcll
adcb
daa
xor
xchg
or
xchg
or
dec
jg
xor
or
xchg
loopne
negb
dec
cmpsl
xorl
xchg
data16
scas
mov
jp,pn
push
insb
jmp
mov
jecxz
mov
mov
pop
inc
leave
mov
imul
xor
pushf
push
cmp
lret
and
outsb
fcoml
lock
fistl
cmp
fwait
aad
sub
mov
std
mov
add
repnz
sub
inc
push
ss
mov
adc
movsl
mov
fidivrl
and
mov
cmpsb
mov
addr16
mov
cmp
ret
insb
mov
cmp
xchg
sub
scas
cmp
mov
int
in
stos
cmp
dec
adc
bound
mov
leave
fisubrs
mov
xchg
and
aam
sub
sbb
xor
ror
mov
ret
dec
lret
fucom
leave
inc
mov
seta
ret
loopne
mov
dec
xor
push
or
cs
add
mov
sub
pop
cmpsb
mov
adc
or
sbb
or
mov
insl
test
movsl
cmp
cmp
out
mov
jmp
std
xchg
pop
icebp
push
jb
in
dec
cmpsb
jo
movsl
xor
lahf
repnz
inc
test
cmp
dec
mov
sbb
mov
xchg
fstpl
mov
mov
mov
rol
pop
ljmp
scas
sub
or
mov
pusha
inc
cmp
mov
lret
loope
xchg
imul
mov
pop
jmp
ss
mov
sti
mov
mov
movsb
jbe
iret
or
and
aas
lods
sub
inc
comiss
mov
cmp
mov
cwtl
cltd
movsl
flds
scas
movsb
ds
cmpsl
mov
rolb
xor
inc
into
iret
ret
fdivs
popf
cmc
jmp
and
nop
sub
jnp
je
xor
and
lret
bound
lds
enter
ret
jno
popa
in
out
iret
divl
mov
cmp
mov
push
mov
xor
pushf
sbb
mov
mov
push
psubusw
mov
adcb
stos
jg
ret
jmp
mov
fldenv
mov
test
or
xor
mov
leave
mov
mov
mov
daa
movl
shrl
arpl
iret
xchg
bound
sbb
push
mov
je
pusha
icebp
iret
test
imulb
int
add
into
das
xor
popa
sub
stos
std
mov
dec
fidivl
mov
xlat
pop
stc
in
mov
out
xor
scas
cmpsl
js
mov
fcmovnbe
push
mov
test
out
loopne
imull
sub
push
sub
stc
scas
aad
add
insb
notb
mov
and
jge
subl
mov
xchg
mov
inc
aad
mov
mov
clc
sub
mov
sahf
fs
ret
jge
push
jle
pop
lock
push
data16
mov
xchg
mov
sbbb
or
push
loopne
sub
add
es
ret
add
mov
xchg
rcr
std
mov
pusha
sbb
stc
in
adc
stos
lods
xchg
loope
jb
insl
mov
leave
daa
sub
je
fucomip
das
shlb
inc
mov
xchg
sub
shrb
ss
xor
cld
ret
imul
lea
lds
mov
test
adc
mov
cmpsb
xchg
mov
xchg
je
pop
mov
stos
orb
push
inc
xor
mov
inc
loopne
insb
sbb
adc
mov
sub
stos
inc
adc
test
and
and
mov
clc
cmpsl
aas
mov
insb
in
inc
iret
mov
push
das
dec
cmp
cld
cmpsl
or
les
inc
dec
fs
mov
movsl
cmp
fnsave
fsubr
jae
cmp
sub
test
rol
outsb
sub
jne
outsl
leave
sub
fwait
xor
pop
es
mov
outsl
movsl
mov
add
nopl
sub
rorb
mov
int
dec
xchg
add
mov
cs
push
mov
add
xor
es
xor
loope
aad
xchg
scas
sub
subb
dec
jnp
mov
add
sar
mov
mov
xchg
loopne
out
mov
aaa
outsl
mov
rcrb
shlb
iret
subb
add
cmp
cmp
mov
jecxz
sub
inc
movsb
sbbb
cltd
xchg
outsb
dec
cmp
sub
mov
pop
dec
push
scas
ret
adc
sbb
into
cmp
mov
inc
movsb
aam
pushw
addr16
push
subl
call
outsb
mov
fildll
lods
sub
repnz
lds
xor
and
fsubrs
mov
iret
inc
dec
testb
inc
xlat
shlb
cmp
pop
fildl
push
mov
daa
adc
loop
and
adc
sub
test
clc
ss
test
test
cmp
jno
push
loopne
daa
jbe
jmp
movsb
ljmp
ret
sub
mov
repnz
pusha
sbbl
adc
inc
or
leave
test
xor
loope
rclb
ret
fsts
or
lods
ret
punpckhbw
mov
enter
cmpsb
mov
ss
xor
in
subl
iret
into
in
sbb
push
adc
stc
lods
inc
int
sub
sub
xor
pushf
aad
int3
push
mov
loop
inc
ret
mov
mov
cmp
mov
aas
ret
push
sub
int
push
sar
je
out
xor
push
jno
xchg
scas
ret
xchg
cmpsl
xlat
pusha
jl,pn
scas
mov
movnti
stos
mov
rcll
jb
jp
mov
aaa
in
mov
and
xchg
inc
shrl
or
sub
pushf
sub
mov
mov
test
and
adc
mov
repz
dec
cs
mov
mov
xlat
inc
sarl
mov
mov
test
out
nop
imul
inc
sbb
or
daa
mov
cmp
xlat
out
adc
in
pop
and
inc
sbb
lret
in
fildll
loopne
outsl
mov
adc
jecxz
jmp
es
mov
fnstsw
fsubr
mov
leave
sub
mov
pop
cld
les
mov
loopne
pop
aaa
xchg
and
insb
and
ret
adc
and
cld
es
cmc
data16
and
insl
into
or
mov
lahf
cmp
cmp
mov
out
xor
xchg
xchg
test
jne
scas
into
mov
aam
movsl
push
push
mov
and
pop
call
sarl
xchg
mov
stos
stos
lods
xorb
pusha
lret
and
cmp
sub
fidivl
loope
aad
imul
adc
mov
pop
push
cmp
jle
jg
or
mov
xchg
mov
test
cmp
mov
adc
jno
cmpsb
repz
aaa
mov
popf
mov
cmpsl
andb
mov
rcll
sahf
data16
sbb
cmpsl
fucom
js
cmp
mov
mov
iret
lret
in
inc
je
dec
aas
pop
and
mov
mov
push
popa
cltd
cmp
stos
lods
mov
je
test
cmpsb
test
add
loope
mov
xchg
cmp
shrl
mov
jl
std
lods
insb
xor
inc
mov
dec
es
test
and
add
leave
lahf
inc
pop
mov
inc
and
pop
and
mov
inc
push
cltd
sbb
mov
cmp
dec
pop
mov
roll
adc
ljmp
loop
inc
cmpsb
shlb
imul
xorb
jo
mov
mov
int
push
es
cwtl
sub
jecxz
mov
cmpsl
pop
fistps
inc
and
test
movsl
dec
gs
fcoml
push
xor
pop
inc
add
pop
mov
outsb
jecxz
mov
xor
int
pop
cmp
out
pop
ret
inc
xor
das
fwait
mov
mov
xor
xor
xor
lods
push
xor
xlat
int
es
inc
xchg
mov
in
jb
testb
mov
lock
inc
jle
int
and
movsb
adc
outsl
dec
cmp
xlat
adc
push
stos
add
call
mov
orb
sub
lret
stos
sarb
orl
test
fdiv
add
lods
out
jle
add
mov
fcmovb
inc
inc
lds
pop
imul
lds
mov
sub
or
pusha
scas
iret
mov
push
xor
cld
jb
daa
mov
push
mov
scas
mov
daa
std
mov
dec
xor
faddl
leave
xchg
scas
mov
sub
push
mov
or
xchg
cmp
dec
mov
push
dec
out
push
lods
lahf
aaa
stos
cltd
bound
push
daa
mov
pop
inc
es
cmp
scas
sub
fldenv
sbb
mov
inc
lret
cmp
sub
movsl
scas
sahf
jne
xor
aaa
shll
lahf
fdivrl
or
jno
jmp
test
inc
cmp
or
dec
addr16
pop
mov
fstps
or
fsubl
jmp
mov
mov
leave
in
loopne
jmp
loope
iret
xor
or
mov
clc
adc
mov
in
daa
mov
adc
mov
rcll
mov
xchg
xlat
add
aas
test
fbld
xchg
and
push
mov
mov
xchg
xor
mov
daa
sub
mov
or
inc
insl
test
lahf
cmpsl
cmp
add
mov
ds
sub
sub
test
lea
inc
pop
das
sub
adc
xor
subb
mov
mov
lods
leave
cmpb
xchg
movsl
mov
cli
mov
push
aas
movsb
mov
cmp
es
iret
ja
lock
ret
and
out
xor
aam
lret
xchg
popa
mov
inc
ljmp
jne
mov
fcmovbe
cmpsb
scas
mov
jecxz
or
push
dec
pop
push
cmpsb
lods
mov
cwtl
rcrl
sub
dec
sbb
aas
adc
test
out
cs
push
jle
enter
adc
xchg
sub
pop
and
movsl
xchg
xlat
xor
test
xchg
fists
sbb
aad
lods
jne
xchg
cmpsb
in
pop
rcrl
daa
push
sub
sub
in
mov
pop
sub
pusha
cmp
frstor
sahf
dec
mov
add
sub
clc
leave
mov
jg
mov
es
test
xchg
insl
mov
mov
pop
lahf
jb
mov
inc
cmpsl
mov
mov
loope
ljmp
leave
jb
loopne
movsl
rorb
xchg
dec
or
rorl
fdivrl
xor
fldl
add
leave
nop
fstp
insb
jmp
jecxz
aam
xchg
sbb
das
scas
fxch
stos
mov
mov
cwtl
mov
dec
shll
stos
mov
fadds
mov
xor
pop
lods
xor
iret
in
in
ljmp
cmpsl
sbb
push
push
mov
into
xchg
mov
mov
outsl
inc
fdivrl
lea
stos
mov
add
call
insb
lods
mov
push
inc
decb
mov
data16
xor
aaa
lods
das
adc
mov
fisttps
adcb
lods
mov
rclb
stos
xchg
mov
inc
in
mov
add
jle
dec
cmp
xchg
hlt
call
cmpsb
jb
and
mov
mov
fnstsw
mov
cmp
fdivrl
inc
xor
inc
iret
xchg
and
dec
jecxz
mov
or
lahf
jmp
aaa
or
mov
sub
lods
cli
rcr
mov
mov
scas
mov
push
jmpw
mov
int
pop
sub
mov
clc
cmpsb
mov
orb
adc
hlt
add
sub
push
mov
cli
inc
push
push
inc
data16
mov
jl
lods
sbb
ljmp
ds
and
aaa
lods
xchg
cmpsb
jge
mov
es
lock
sbb
das
sub
xor
xlat
je
ds
cs
out
movsl
jne
lods
aaa
movq
mulb
sub
in
jo
call
lods
xor
ljmp
xorl
mov
call
loope
and
sbbb
inc
popa
aad
jno
divb
clc
pusha
sbb
aaa
outsb
xchg
aad
test
xchg
stos
incb
push
or
push
into
mov
and
imul
mov
inc
test
cmp
ret
hlt
mov
shrb
popa
cli
mov
enter
fsubrp
add
and
mov
inc
xor
sbbl
cmpsb
ds
xlat
iret
int3
shlb
jmp
lods
aad
fucomp
xor
cmp
mov
aas
rol
push
inc
jbe
divb
inc
cmpsb
in
daa
shll
dec
ljmpw
into
mov
mov
jne
cmp
aad
cmp
push
xor
das
outsb
cwtl
pop
ret
daa
fstl
test
fdivrl
jbe
adc
outsb
xor
mov
inc
cmp
daa
and
repnz
ss
mov
sbb
fnstenv
movsl
scas
mov
leave
aas
inc
mov
daa
mov
fstpl
aam
cmp
inc
dec
call
jns
mov
push
out
pusha
cli
outsl
imul
xchg
cmpsb
jo
or
mov
iret
and
lods
inc
push
mov
inc
iret
mov
leave
lods
loop
cs
inc
jnp
inc
or
pop
fisttpll
flds
or
fstl
int3
popa
mov
shll
leave
mov
mov
jns
xor
jl
cmpsl
popf
xorl
out
mov
xchg
dec
sub
cwtl
aaa
sub
test
call
dec
cld
cmp
mov
fldt
sub
lret
sbb
js
mov
xlat
fs
fsub
cmp
mov
jmp
add
mov
es
iret
lea
push
subb
cmp
test
out
ret
in
movsb
mov
adc
xchg
or
mov
and
pop
stos
and
rcll
add
into
mov
and
lock
fnstcw
mov
loopne
xchg
mov
mov
mov
push
xchg
fidivrl
cmp
and
push
addb
fsubrs
cmp
into
mov
mov
or
ds
mov
ret
mov
addl
push
dec
gs
mov
popa
push
inc
lahf
ljmp
xor
xchg
lahf
sti
mov
inc
jp
fstpt
and
das
popa
sub
sbb
out
cmp
cmpsl
jmp
orl
cs
mov
fnstcw
faddp
daa
in
cwtl
push
fdivl
loope
adc
stos
in
out
add
dec
mov
fsubs
cmp
loope
jae
add
xchg
shl
fsubrs
xchg
ja
cmp
mov
fdivl
xchg
sub
mov
mov
jecxz
push
mov
test
pop
xchg
mov
mov
roll
mov
inc
mulb
loop
or
sub
xlat
rorb
fadds
sti
fistl
fsubrl
cs
mov
xor
mov
pushf
sub
pushf
stos
mov
mov
xlat
cmp
in
stc
daa
scas
outsl
mov
adcb
inc
cmp
mov
and
loopne
lea
mov
xchg
iret
addr16
mov
mov
out
aaa
fsubrs
scas
jp
jle
repz
in
sub
dec
dec
pcmpgtw
loopne
sbb
mov
ret
fwait
pushf
cli
lret
sbb
int
popa
nop
es
cwtl
loope,pt
fnstcw
jns
xchg
scas
test
jmp
outsb
xor
fstpt
mov
xor
loop
jmp
cmp
cli
shl
jle
repz
xor
sub
cmpsl
xor
daa
dec
fxch
xchg
ljmp
es
cli
xor
in
inc
subl
inc
out
pusha
cltd
pop
arpl
cmp
subb
push
sbb
mov
adc
in
scas
sub
lahf
movsl
loopne
imul
mov
ds
mov
movsb
aad
cmpsl
xchg
cmp
cmp
inc
popa
or
xchg
cmp
sti
pop
flds
jecxz
popa
jg
jo
ljmp
sti
xchg
movsb
inc
int
fnstcw
ret
inc
sbb
jmp
insl
movsb
jnp
and
hlt
cmpsl
sbbl
mov
clc
xchg
mov
mov
sub
and
in
sub
ret
sub
dec
in
cmp
xor
xchg
inc
fwait
jl
add
test
jecxz
dec
jae
lret
and
sub
cld
aaa
data16
fucomp
stos
addb
xchg
jp
xor
scas
movsb
stc
nop
xor
scas
rolb
fsubr
out
dec
das
mov
dec
dec
push
cmp
ret
sbb
sbb
sub
fs
ljmp
mov
pop
rcl
ss
xor
and
aaa
cmp
pusha
and
cltd
cwtl
daa
sub
leave
mov
or
std
test
mov
xor
sub
dec
out
mov
jge
adc
movsb
sarb
adcl
sub
jnp
movsb
inc
inc
popf
push
adc
pop
scas
stos
pop
or
mov
addr16
fs
cmpsl
sub
lss
inc
push
fildll
jge
mov
sub
data16
adc
movsl
mov
mov
xchg
xor
int
push
xor
sti
jnp
cmpsl
dec
adc
mov
fucomp
or
cmp
pusha
dec
subb
sbb
scas
mov
jne
xor
sub
wrmsr
mov
push
mov
mov
mov
mov
rcll
inc
inc
mov
cmp
push
mov
mov
sub
cmp
mov
mov
pmulhw
loopne
mov
cmp
push
ret
mov
cmp
mov
mov
das
xchg
hlt
ret
push
shlb
movsl
sub
outsl
movsl
xchg
cmp
shlb
pusha
fcoms
imul
pop
sub
inc
fstl
push
loope
mov
fnstcw
adc
cmp
je
int
xor
into
xor
daa
aas
popf
stos
cmp
cld
shlb
mov
xlat
inc
mov
pop
and
mov
mov
or
stos
mov
int
movsl
cld
adc
xor
fldenv
jne
pop
cmpsb
sub
mov
aad
jg
fcmovbe
inc
inc
jmp
mov
mov
mov
addr16
inc
mov
scas
mov
xor
fsubr
or
cmp
mov
mov
sub
ss
cmp
or
mov
cmc
push
inc
ret
cmpsb
sub
xor
mov
roll
iret
jbe
out
mov
xlat
sub
lret
xor
iret
xchg
mov
shrl
data16
aas
add
mov
outsl
je
mov
or
rcrb
aaa
loope
xchg
js
mov
gs
mov
iret
xor
testb
xor
stc
outsb
or
mov
out
pushf
mov
sub
pop
loopne
or
xor
ja
xor
mov
mov
int
sbb
daa
sbb
jecxz
clc
add
push
cmp
stos
pop
jle
or
shrb
arpl
pusha
cmpl
das
inc
jns
cmp
mov
jnp
scas
cs
mov
aad
xor
loope
data16
jns
jb
jo
inc
orb
iretw
add
xor
aas
jb
into
add
movsb
repz
mov
movsb
lods
aas
mov
loope
and
les
loope
sub
movsb
clc
xchg
setnp
std
mov
fs
gs
das
jcxz
pusha
lods
inc
push
aas
clc
jge
rcll
in
mov
xlat
pop
xchg
jecxz
sub
iret
movsl
cmp
imul
int
jno
loop
mov
fbld
and
outsl
ret
js
sbb
sti
jno
add
adc
mov
movsb
mov
scas
adc
or
mov
icebp
push
mov
out
xchg
sub
mov
aas
inc
or
inc
ret
outsl
insl
icebp
pop
rcll
and
clc
data16
aad
push
pop
jns
or
int
bnd
mov
movsb
cmp
sub
xchg
cli
in
and
or
pop
xor
iret
ds
and
push
jno
outsb
cmp
lds
jae
xlat
jbe
mov
inc
pop
hlt
aaa
adc
jge
shll
fistl
jmp
insb
into
mov
icebp
pop
or
cmpsl
xchg
out
das
push
dec
mov
sub
and
and
mov
cmp
mov
mov
and
incb
mov
sub
pop
add
cmp
sbbl
cltd
das
xor
js
ret
loopne
mov
mov
fwait
xchg
insl
je
loop
in
hlt
cwtl
in
mov
stc
orb
les
stos
nop
int
in
xchg
fwait
call
mov
and
test
jns
je
adc
mov
repz
cmp
add
clc
shlb
mov
in
clc
aaa
out
adc
pop
sbb
ret
rcrl
aaa
mov
cmpsb
xchg
add
jmp
xchg
and
hlt
bound
mov
mov
push
ja
xor
xor
sub
dec
aaa
push
mov
mov
fucompp
cs
inc
test
or
sbb
aas
sub
mov
imul
dec
sbb
fistl
lcall
xor
in
mov
xor
fmuls
mov
repz
sub
lods
mov
test
scas
mov
sub
sbbb
sub
xor
stos
scas
cmp
cmp
sub
adc
sub
mov
sbb
addr16
sub
scas
sub
jp
js
sub
int
popa
sbb
pop
imul
push
cmpsb
jo
stos
mov
sbb
mov
push
mov
pop
fstps
push
scas
aas
stos
xchg
mov
es
xor
lods
dec
cmp
mov
xor
cmp
aaa
cmpsl
scas
nop
sub
int3
lods
cmp
jnp
insl
in
sub
lret
xchg
cmpsb
cmpsl
xor
mov
push
idivb
mov
cmp
ret
push
cltd
mov
push
cmpsb
mov
cmp
sub
xor
es
add
push
jno
sbb
subb
or
hlt
mov
fadd
jo
mov
xchg
cld
push
test
insl
out
mov
cmpsb
or
jp
movsl
mov
sub
cli
stos
es
lret
pop
das
aaa
cmp
mov
data16
scas
dec
fisttpll
data16
stos
inc
mov
addr16
jnp
xchg
mov
and
sub
xchg
inc
cmpsl
mov
push
adc
mov
inc
mov
dec
xor
nop
xchg
mov
shll
std
cmp
pop
mov
cmp
dec
push
data16
ret
fcmove
loop
xchg
xchg
or
das
data16
mov
pop
mov
add
add
or
std
lods
imulb
pushw
stos
push
ljmp
inc
xlat
inc
sub
minps
addr16
push
dec
xchg
xor
rclb
mov
mov
xlat
dec
inc
jne
mov
lcall
test
scas
push
sub
into
je
mov
aad
mov
clc
test
xor
xor
lahf
scas
mov
es
inc
fldl
cmp
addr16
and
push
xorb
lods
mov
sub
cmp
add
jmp
mov
fiaddl
cs
cmp
dec
push
and
xor
xor
daa
fistl
dec
daa
cltd
data16
loop
cmp
das
aad
pop
adc
roll
mov
push
sub
daa
fstps
mov
inc
out
daa
xchg
mov
fildll
xchg
mov
out
mov
add
jb
out
xor
lock
jb
std
inc
clc
xor
inc
inc
sbb
aas
addr16
addr16
popa
cmp
mov
fnstcw
and
push
test
xor
and
xchg
sar
mov
stos
add
xlat
hlt
insb
mov
movsb
fisttpl
aas
insl
fst
mov
mov
rolb
scas
xor
adc
imul
stos
add
fnsave
xchg
and
divps
fmuls
and
mov
inc
stos
xchg
push
xchg
xor
xlat
xlat
fsubp
cwtl
cli
lahf
cmpsl
and
pop
dec
cmp
sub
mov
loop
cld
cmpsl
js
xor
dec
je
repz
xor
std
das
scas
mov
fiaddl
mov
and
fiaddl
mov
frstor
and
sahf
xor
mov
xlat
andb
sub
int
jae
decb
loope
mov
sub
popa
or
dec
shlb
lds
nop
imul
out
mov
dec
cli
scas
stos
insb
shll
xchg
mov
fidivl
cmp
mov
and
movsb
std
mov
rcll
cmp
mov
rcll
cs
jp
sub
ja
mov
cmp
cmpsb
xchg
pop
xor
mov
jl
mov
imul
xchg
sub
loope
pop
inc
mov
test
mov
sub
scas
and
xchg
xor
sub
lret
int3
fimuls
ss
in
xchg
jnp
xor
xchg
cmp
ror
fwait
pop
and
jnp
test
loopne
stos
xchg
into
mov
loop
ret
dec
adc
cmp
xor
scas
ss
iret
mov
push
aad
jne
clc
inc
dec
scas
mov
int
cmp
cmp
cmpsb
ja
out
daa
mov
int3
test
pop
mov
fstl
fnsave
mov
int3
je
cmp
repz
xchg
fstpl
jecxz
insb
cmp
push
jbe
xor
std
icebp
das
aaa
mov
adc
mov
mov
jcxz
inc
lock
xor
mov
test
iret
and
hlt
popf
andb
push
shl
push
mov
adc
ss
out
aad
movsl
pusha
fwait
lods
mov
adc
xor
inc
push
testl
ljmp
cmp
inc
loope
mov
jmp
xchg
mov
mov
outsl
in
push
jns
inc
cmp
leave
pop
das
test
add
mov
cmp
push
xor
mov
pusha
mov
test
mov
mov
jge
sub
or
pusha
fsubp
and
mov
xor
mov
sbb
push
add
in
test
pusha
xor
shrb
ret
fdivrs
cli
into
mov
iret
xor
mov
std
xchg
rolb
and
xchg
daa
movsb
loope
loop
push
aas
cld
mov
inc
mov
test
fnstenv
xor
std
js
xchg
test
sarb
fdivrs
mov
popa
pushl
mov
sbb
mov
jo
cmp
cmp
aaa
jg
shl
jg
xor
xor
cmp
daa
mov
lods
fwait
subb
sub
xor
movsb
nop
xor
mov
flds
cs
sbb
outsl
or
cmpsb
call
adc
sub
or
and
xor
out
lock
cmpsb
adc
mov
mov
xlat
sahf
repz
dec
xor
push
jo
mov
mov
int
mov
insb
cmp
mov
sub
push
stos
jnp
lock
mov
or
cmp
jle
mov
mov
mov
out
imul
fistl
or
into
mov
orl
rcrl
outsb
lods
std
das
or
scas
mov
sub
jecxz
call
pop
cwtl
inc
mov
mov
push
jp
inc
repnz
call
das
ds
pop
xor
mov
jecxz
repz
push
arpl
mov
mulb
aaa
inc
aam
mov
sbb
shlb
hlt
jns
xchg
shll
push
sbb
push
mov
movsb
imull
leave
cmp
fistl
xor
clc
cmp
cmp
dec
mov
mov
mov
cmp
jne
movsl
bound
dec
add
mov
movsb
adc
or
inc
mov
mov
add
push
dec
jmp
cmp
dec
iret
loopne
hlt
shll
mov
jmp
out
dec
stos
addr16
out
rclb
mov
shrl
adc
into
mov
fistl
inc
in
mov
sub
sti
fmull
mov
adc
xor
inc
stos
cmp
push
or
mov
mov
popf
mov
roll
jb
sbb
setg
scas
daa
add
cltd
add
adc
add
sbb
and
mov
loope
ja
xchg
pop
jne
and
jge
lods
add
fidivs
xor
jmp
mov
pop
cmp
cmp
mov
mov
out
add
sbb
pop
jmp
out
loop
pop
mov
clc
dec
out
sar
mulb
sbb
test
adc
mov
icebp
or
xor
mov
inc
iret
test
mov
shll
mov
shr
inc
mov
dec
movsl
cmp
daa
outsb
nop
pop
cmp
js
sbb
adc
push
sub
sahf
inc
push
mov
addr16
sub
inc
xor
imul
shr
mov
cmp
add
xchg
mov
jne
stos
iret
test
mov
es
mov
test
jl
lds
mov
pusha
outsb
and
lods
mov
clc
mov
mov
mov
adc
pop
int
scas
push
loope
jbe
movsl
stos
cmpsb
mov
mov
mov
aaa
adc
test
cld
push
or
mov
ja
lret
repz
sub
scas
sub
sub
or
callw
es
xchg
daa
data16
aaa
adc
cmpsb
xor
adc
ja
pop
xor
loope
jnp
or
movsb
pop
mov
cmp
xchg
pop
dec
pcmpgtd
fnstsw
push
jge
lahf
subb
cs
inc
jg
mov
mov
mov
clc
pop
out
cs
and
nop
jmp
sbb
daa
movsl
shlb
into
in
mov
aad
shl
dec
jbe
ret
leave
push
mov
clc
pusha
pop
adc
cmp
adc
xlat
xor
pop
cmpsb
mov
incb
lahf
or
scas
movsb
stos
mov
je
cmp
daa
fnsave
and
cmp
ficomps
shll
xchg
and
mov
inc
ds
roll
inc
stos
xlat
xchg
xor
movsb
xchg
es
mov
loopne
push
sub
in
idiv
fstps
xor
idivl
sbb
imul
dec
test
pop
fmull
fwait
jne
inc
pop
or
ss
pop
push
movsl
add
popf
sub
add
call
cld
jle
adc
daa
inc
pop
and
das
jb
adc
jmp
mov
push
movsb
cmp
fwait
stos
inc
lret
inc
cmp
shrl
inc
outsl
add
sub
pop
adc
fdivrs
daa
rcr
cmp
sub
mov
xlat
mov
andb
xor
daa
mov
in
xor
sub
pop
push
cmpsl
ss
lds
add
aaa
mov
cli
aas
lret
gs
leave
push
mov
stos
aaa
or
sub
inc
sub
test
push
leave
sbb
mov
mov
mov
gs
out
mov
cld
or
xor
jnp
scas
xor
jmp
in
mov
xchg
jmp
adc
inc
inc
or
ret
scas
insb
flds
cmpsl
mov
roll
push
imul
mov
scas
cmp
adc
xchg
cmp
inc
and
out
sahf
cmpsl
fbld
test
cmpsb
adc
mov
sub
das
push
int
xchg
adc
sub
and
cmp
mov
jb
lret
cmp
mov
jno
ja
mov
iret
cmpsl
dec
and
jmp
push
xor
add
data16
or
insl
loop
sti
outsl
shlb
fsts
fbstp
cld
lock
adc
sbb
shll
fstpt
cwtl
scas
push
mov
xchg
and
test
sub
gs
fbld
add
mov
pop
dec
cli
lds
jmp
lahf
stos
or
cmp
fucomp
or
mov
mov
movsl
xchg
lret
jno
faddl
lret
jae
jnp
das
jl
ret
loopne
mov
sbb
scas
add
fldt
ljmp
xlat
out
rcrl
test
lahf
cmpsb
int3
cmp
xchg
mov
inc
insl
dec
cmpsw
rcrb
inc
xor
xor
sahf
jp
sub
andb
rclb
psubb
test
lret
inc
bound
mov
mov
xchg
ljmp
mov
pop
mov
xchg
shr
jne
cmp
fcompl
mov
jmp
jb
movsl
xor
out
mov
jecxz
xor
dec
mov
pusha
cmp
stos
loope
pop
cltd
sbb
adc
in
into
mov
fsts
std
adc
scas
fmuls
lret
cmpsb
popf
sub
mov
das
mov
add
xchg
stc
mov
daa
addb
push
stos
pop
sahf
fsubrl
mov
mov
scas
scas
jmp
out
ret
fsubrl
aaa
add
loope
sub
lods
mov
insl
lret
aaa
adc
popa
dec
push
fcoml
pop
insl
add
mov
inc
stos
inc
jne
pusha
adc
sub
lret
es
ret
cmp
push
mov
outsl
imul
int
stos
jecxz
outsb
shlb
loop
inc
stos
shlb
xlat
enter
cmp
and
dec
popa
push
adc
jle
std
jae
testb
jmpw
sbb
or
movsb
jns
loope
es
cmpsl
xchg
adc
mov
inc
xor
push
mov
sbb
sub
xchg
mov
cmc
je
jle
mov
movsb
lds
xor
mov
das
mov
das
aaa
mov
sbb
cmp
loope
jne
cld
popa
xchg
mov
aas
lods
xchg
es
mov
lret
hlt
mov
fiadds
cmc
aaa
mov
sbbl
jmp
std
dec
sbb
and
ljmp
mov
adc
clc
cmp
xchg
je
ds
xor
cs
pop
and
jecxz
je
push
cmpsb
cmp
xchg
ss
jecxz
push
shll
push
test
adc
mov
inc
iret
and
mov
xchg
sub
xchg
in
mov
aaa
jno,pn
mov
mov
test
mov
addr16
adc
push
cmpsl
outsl
lock
sbb
push
scas
shrb
pop
lret
data16
ret
clc
into
daa
mov
ja
xor
ror
lods
es
mov
inc
ret
and
iret
fs
sub
iret
stos
jecxz
inc
cmpsl
mov
fldt
fs
stc
adc
roll
fidivrs
and
mov
sbb
adcb
test
mov
lret
add
test
adc
sbb
ss
add
stos
into
mov
xor
mov
mov
mov
ret
subb
je
mov
pop
lahf
cmpsb
xor
add
cmp
call
xor
loope
dec
push
mov
icebp
sbb
pop
lds
jno
xchg
mov
shrb
mov
mov
call
inc
fldl
cwtl
inc
lods
mov
cmpb
aam
jmp
lock
inc
scas
xchg
jo
iret
mov
test
fsubrl
sti
aaa
and
mov
xor
int3
popf
cmp
mov
lds
mov
and
movsb
cli
sub
mov
jecxz
pusha
or
xor
cmp
roll
mov
cli
or
mov
xorb
repnz
mov
scas
sub
or
mov
lds
cmpsb
push
sbb
xchg
fs
and
xor
lcall
movsb
test
rorl
aaa
repnz
mov
sahf
ljmp
fcoms
pop
or
mov
or
subb
data16
and
shll
sub
xchg
das
mov
fimull
test
mov
inc
sub
out
mov
ret
fldcw
mov
out
pop
lds
mov
mov
mov
into
xchg
test
in
sub
push
test
sub
je
pusha
mov
mov
dec
jg
fcoml
lods
cmc
movsl
mov
sub
and
add
adc
xor
xchg
jns
mov
loopne
mov
stos
mov
mov
jnp
lods
daa
dec
int3
mov
jmp
ljmp
jo
jp
mov
nop
xor
or
mov
outsl
cmp
sub
xchg
loopne
dec
or
push
addr16
bound
sbb
mov
sahf
popf
pusha
lods
adc
sub
cs
iret
stos
out
das
leave
fcoml
scas
aas
inc
cmp
mov
nop
cmp
cli
pop
lods
cs
cmp
cmp
mov
ret
leave
stos
cmp
pusha
cs
out
lods
xchg
loopne
test
data16
mov
or
rclb
mov
xchg
jle
xor
dec
dec
inc
adc
ret
inc
lods
mov
xor
and
out
mov
xchg
scas
mov
cmp
cmp
pop
xchg
jo
mov
mov
push
mov
mov
pop
pop
mov
mov
fldenv
xchg
xchg
adc
mov
fstpl
jnp
inc
jg
sahf
lods
xlat
fwait
sub
sub
scas
sbb
daa
sub
mov
mov
lret
loopne
sub
int3
popf
jmp
or
lret
adc
repz
sub
fldt
aas
rolb
test
or
mov
aad
mov
ficoml
adc
dec
mov
jmp
dec
scas
and
add
or
push
iret
mov
stos
jle
adc
mov
shrl
mov
int
popa
icebp
subb
lds
mov
pop
or
mov
dec
rcrb
andb
cs
sub
into
ja
sub
jae
hlt
sub
mov
popa
mov
push
leave
cmpsl
mov
shll
orl
loop
stos
sub
ja
shr
jb
push
mov
inc
mov
imulb
push
in
cmp
jnp
aas
pop
clc
iret
xor
xor
js
cmpsl
lret
and
pop
mov
dec
lret
daa
mov
mov
movsl
jb
into
mov
cmp
adc
test
add
lahf
fdivrl
ja
mov
add
mov
int3
or
sub
out
push
jmp
push
in
jnp
lock
mov
dec
jge
mov
addr16
movsb
cmp
sahf
test
hlt
sbb
ror
xor
cmc
mov
loope
push
stos
sub
loopne
mov
int3
lea
xchg
shll
stos
mov
loop
mov
popa
out
shlb
int
pop
xchg
daa
ljmp
cmp
lods
lret
cmpsl
inc
leave
mov
xor
add
cld
inc
inc
loope
ja
inc
cmp
movsl
cmp
add
mov
cmpsb
jnp
xor
lret
jg
mov
mov
mov
sub
mov
pop
in
fistps
inc
and
loope
test
mov
subl
sub
orb
push
test
mov
fbld
and
mov
das
lods
jo,pt
ds
cwtl
inc
ja
cmp
mov
or
mov
popa
mov
xor
fstps
mov
rclb
mov
mov
shrl
mov
leave
push
and
lahf
adc
ds
mov
test
cltd
imulb
cmp
notb
cwtl
outsl
rolb
adc
cmpsl
xchg
movsl
xor
ficompl
mov
ret
jg
and
cmpsl
xor
mov
xchg
shll
or
mov
les
mov
pop
movnti
fistpl
popa
mov
test
lret
inc
add
mov
leave
test
mov
insb
stos
ret
test
fucomip
rorl
in
xor
inc
sub
inc
jecxz
test
add
sub
mov
ret
test
sub
xchg
addl
xor
fbld
sub
mov
mov
dec
subb
out
pop
jmp
outsb
test
stos
ljmp
sbb
loop
fdivrl
test
ret
aad
cmc
push
push
in
mov
jae
pop
jmp
out
cmpsb
clc
inc
into
inc
xchg
fisttps
ret
dec
sub
data16
mov
dec
sti
pop
sub
in
stos
shr
fs
icebp
into
insb
jbe
inc
mov
addb
out
out
fmuls
sub
push
add
outsl
int3
cmp
mov
push
fidivl
test
pop
mov
sahf
push
es
leave
jp
sbb
push
sub
mov
lcall
js
push
mov
ret
and
daa
mov
and
xor
xchg
cmp
data16
dec
shll
cmp
mov
daa
bnd
or
sbbb
out
mov
mov
shll
mov
mov
bound
inc
jmp
mov
inc
ds
mov
je
add
mov
jecxz
outsl
fsubrl
pusha
jne
adc
cmp
pop
push
mov
sti
nop
test
jle
mov
mov
out
call
js
ret
jnp
and
rcll
adc
xor
dec
pop
ret
cmpsb
jmp
out
enter
fdivrs
rolb
cmp
cmp
inc
sbb
icebp
iret
inc
mov
fnstenv
mov
movsb
jb
cmp
cmp
and
add
add
es
push
stos
inc
or
xchg
mov
popa
shll
sti
xchg
andb
lods
das
mov
popa
cwtl
ja
clts
mov
xor
jecxz
sbb
cld
mov
aam
shll
push
popa
dec
sub
mov
rorl
iret
sub
jo
xorl
adc
fsubrs
mov
test
cmp
fidivl
mov
xor
or
dec
fwait
mov
outsl
mov
xchg
fdivs
ljmp
sbbb
sub
addr16
mov
ja
mov
xchg
or
aad
mov
int
mov
inc
lret
scas
lret
addr16
cld
or
add
test
in
xchg
mov
rcll
cmp
mov
out
stos
ret
popa
or
cli
scas
test
daa
iret
and
fwait
sub
test
mov
lds
sbb
shll
sub
in
mov
cmp
jp
in
dec
xor
ds
sub
aad
or
mov
stos
ds
mov
xor
sub
addr16
sub
sbb
adc
std
xor
sub
scas
and
fs
mov
sar
aas
test
mov
iret
bound
or
mov
loop
mov
je
data16
scas
push
inc
fldl
bound
cmp
and
and
fstpt
lods
sub
xchg
loope
mov
shl
aas
lcall
xchg
mov
insl
mov
adc
and
sbb
daa
ljmp
push
inc
mov
mov
add
cmp
xchg
sbb
xchg
mov
jno
cmp
mov
test
clc
hlt
mov
fiaddl
das
pop
scas
jl
mov
mov
std
loop
rcll
aaa
pusha
dec
and
mov
fstpt
fnsave
xchg
dec
lods
cltd
xor
and
mov
xor
ret
inc
xlat
sbbl
xor
imul
mov
mov
lret
add
xor
inc
xchg
out
adc
rolb
test
xlat
test
dec
xor
orb
mov
mov
mov
shlb
adc
in
xor
fcoms
lods
mov
add
testl
mov
aaa
cmpl
mov
aad
jecxz
xor
push
mov
xchg
inc
xlat
iret
scas
mov
fs
and
jge
shll
cmp
mov
out
div
test
dec
lods
adc
loopne
add
sub
mov
cmp
ja
mov
adc
sub
push
loop
cmpsl
ret
mov
push
mov
xchg
dec
xor
sbb
cmpsl
adc
sahf
shl
mov
divl
push
dec
sbb
mov
bound
cmpsl
data16
sbb
idivb
data16
fldcw
pop
ds
push
icebp
jbe
aaa
mov
mov
pop
shr
mov
shrl
aaa
scas
adc
movsb
mov
fnsave
out
pusha
sub
mov
sub
mov
pop
repz
push
dec
xor
jl
hlt
mov
loopne
insl
add
es
mov
mov
fsubs
jns
es
scas
or
les
lahf
enter
jmp
mov
pusha
les
inc
fcomip
popa
dec
sahf
pop
pop
cmp
mull
add
pop
jle
sub
icebp
mov
iret
xchg
fwait
loopne
testl
cmp
xor
pop
xor
hlt
popa
mov
leave
sbb
nop
aaa
inc
movsb
jb
shlb
jl
mov
mov
xchg
cmp
jns
pop
movsl
test
popa
sbb
pop
cmpb
ret
jge
cmpsb
jmp
adc
xor
and
jge
mov
lods
sub
and
les
addr16
clc
test
aas
data16
sarb
push
mov
jbe
icebp
sbb
jp
dec
das
ss
flds
mov
inc
shr
rolb
aaa
sbb
stos
ret
mov
stc
dec
push
sub
ficoms
insb
cmpsl
mov
cmp
in
jns
and
xor
les
in
xchg
sub
out
cld
lods
mov
mov
jecxz
mov
dec
jle
mov
sar
push
rolb
pushf
xchg
jae
jmp
call
mov
orb
dec
or
sarl
daa
mov
mov
ljmp
jnp
sub
movsl
pop
leave
scas
test
fndisi(8087
divb
push
xadd
push
jl
sub
xchg
jo
cmc
xor
test
pop
push
mov
js
mov
push
cmp
mov
sar
cmpsb
mov
shlb
ss
jg
hlt
iret
pop
repnz
mov
shl
sub
push
lret
scas
addr16
inc
rolb
inc
shlb
sub
sub
aaa
scas
mov
hlt
or
push
mov
test
sbbb
loop
pop
sbb
push
push
sub
daa
int
imul
testb
ret
test
add
mov
lods
pop
imulb
jp
sub
add
jnp
insb
xor
xchg
mov
push
cmpsl
and
mov
mov
shl
adc
push
cmpsl
leave
xchg
aaa
addb
out
mov
fldenv
outsb
or
ror
es
faddl
fmull
or
mov
mov
scas
sub
cmpsl
xor
mov
inc
jno
xor
mov
psubb
inc
mov
jecxz
movsb
xor
xor
fistl
inc
aas
mov
xchg
in
sub
movsb
adc
scas
sbb
clc
pop
and
xor
lret
inc
xchg
sbb
or
pop
mov
add
data16
jecxz
cmpsb
xchg
cmp
push
cmc
xor
roll
sub
mov
popa
mov
xor
fdivrl
or
inc
fwait
mov
test
vphadduwq
fidivrs
mov
test
inc
mov
dec
ss
loopne
adcl
test
mov
xor
cmc
test
cmp
mov
xor
sbb
sub
sub
or
xchg
scas
mov
lods
imul
xor
xchg
aaa
pop
lds
jecxz
dec
lock
cmpsl
mov
pop
push
lods
mov
in
or
xor
stos
movsl
xchg
add
cmpsl
cmp
ss
aam
dec
repz
mov
and
popf
addr16
ret
cmp
lods
ret
cmp
aad
xchg
jl
out
cmpsb
test
ret
hlt
push
les
jmp
movsb
lret
mov
cwtl
sub
addr16
mov
mov
dec
inc
pushl
ljmp
cmp
xor
jp
cmpsl
cmpb
cmpsb
mov
andb
shl
mov
popa
adc
cmp
cmpsb
test
pop
jbe
jmp
mov
mov
clc
out
es
cmpb
sub
inc
inc
lds
sbb
shlb
scas
fld
stos
mov
mov
cmpsl
mov
inc
pop
mov
scas
data16
push
push
xor
cs
cmp
sbb
pop
movntq
out
popa
jecxz
mov
daa
or
xchg
cmp
lret
std
fsubrs
jmp
mov
ds
ret
sub
data16
mov
push
xor
stos
repz
leave
inc
mov
xor
cmp
mov
out
mov
jns
mov
shrb
lods
dec
push
das
xor
push
sbb
cwtl
push
cmpsl
xchg
adc
mov
adc
popa
out
cmpb
and
fstpl
add
stc
clc
mov
daa
fstl
dec
cmpsb
or
mov
mov
jns
lods
and
mov
pop
fwait
xor
daa
sarl
ljmp
std
push
clc
cmpsw
movsl
mov
mov
ja
test
pop
in
mov
mov
pop
out
jmp
shr
icebp
xchg
cmp
and
xchg
fnsave
push
outsl
cmp
dec
leave
clc
scas
inc
ret
movsb
stos
pop
push
jmp
scas
sbb
addb
cmp
aaa
xchg
inc
fucomip
mov
mov
sub
cmpsl
mov
or
mov
xorb
push
insl
nop
mov
into
cld
sub
sub
adc
movsl
mov
addr16
mov
jl
xor
movaps
cmp
inc
mov
cmpsb
movsbl
sub
outsl
fldenv
aad
cltd
ret
and
sbb
loop
pop
int3
out
cmpb
push
popf
ljmp
push
sti
daa
push
mov
push
in
leave
insl
xor
ret
inc
push
scas
out
or
mov
leave
push
loope
adc
lea
mov
popa
mov
es
sbb
add
stos
xchg
ret
sub
mov
adc
push
cld
mov
inc
test
ffree
mov
mov
fadds
xchg
and
fucomp
lods
add
sub
xor
jecxz
mov
mov
mov
test
mov
mov
test
movsl
test
scas
sbb
sub
loope
push
out
in
xor
cmp
lds
mov
push
pop
ja
fstpl
mov
into
repz
cmp
lahf
mov
jo
nop
popf
cmpsb
add
mov
fsub
out
add
lods
ja
adc
ss
cmp
ret
out
dec
leave
clc
push
sub
daa
fwait
pop
xchg
and
dec
ja
popa
test
inc
inc
rcll
scas
jae
cs
dec
inc
or
mov
mov
sbb
jbe
push
out
inc
mov
mov
cmp
add
lock
dec
dec
or
mov
jns
xor
cmp
or
or
mov
xchg
add
push
dec
xor
pop
adc
lock
fldl
mov
cwtl
lods
loope
lods
pusha
mov
stos
aad
pop
push
mov
inc
cmp
mov
cmpsl
iret
mov
addr16
stos
ret
shll
jnp
adc
daa
dec
xchg
mov
or
fiadds
jbe
sbb
xchg
mov
lret
movsl
arpl
roll
scas
or
daa
iret
cmp
iret
jbe
out
adc
jg
orl
int
jnp
inc
cli
imull
das
adc
mov
cmpsb
jle
pop
add
push
test
fstpt
stos
popa
jno
dec
pop
aas
imul
mov
sbb
jmp
clc
cmp
fsts
stos
clc
cmpsl
loope
mov
out
inc
mov
aad
pop
xor
sbb
fidivrl
cmpsl
mov
in
jns
mov
inc
sbb
ret
jbe
mov
imul
mov
jmp
rolb
cmpsl
sbb
aaa
pop
loop
mov
cmp
or
fs
jle
mov
rolb
fwait
adc
out
sub
ret
div
mov
pop
lds
and
sub
in
mov
jecxz
dec
movd
dec
jg
into
cmpsl
xor
addr16
mov
adc
mov
aas
out
adc
pop
outsl
mov
jl
push
mov
imul
pop
mov
mov
shrd
mov
xchg
jge
mov
aaa
pushf
out
jne
push
mov
leave
xorl
inc
mov
push
jg
inc
xor
fnstsw
insb
inc
or
adcb
sub
aam
adc
mov
inc
inc
push
stc
and
jmp
daa
out
in
lret
jbe
jmp
ret
cltd
inc
test
xchg
inc
mov
rcl
in
imul
push
cli
push
leave
cmp
cmpsb
xor
jl
ss
push
dec
pushf
cld
mov
mov
or
cmp
mov
mov
sub
xlat
mov
push
push
fdivs
shll
movsl
cli
push
jbe
fdivrs
es
mov
out
roll
mov
xchg
push
test
iret
adc
sbb
mov
xchg
nop
lods
xor
cmp
das
mov
mov
cmp
adc
daa
mov
add
dec
data16
cltd
inc
sub
lds
adc
sub
fucomip
mov
and
mov
popa
mov
cmp
divb
cltd
dec
mov
es
movsl
mov
jl
or
stos
mov
dec
test
imul
sbb
stos
into
lret
cmp
aad
or
int
cmp
outsl
xchg
ja
xor
sub
pop
cmpsb
movsl
fdivs
leave
inc
out
mov
ret
divb
in
rorb
cltd
add
pop
sbb
fstp
and
das
mov
cmp
enter
xchg
sub
insl
add
mov
and
jb
pusha
shlb
lods
and
fldenv
fisttps
jbe
push
cmp
inc
mov
lret
mov
lds
fisttpll
sub
repnz
jns
daa
shrb
adc
js
xor
ds
into
mov
push
jmp
test
jmp
or
xor
jg
dec
sti
mov
aas
int
jbe
ret
push
icebp
dec
cmp
rep
xchg
andb
lahf
fdivrl
cmp
cmc
faddl
pop
ret
push
inc
and
add
sub
xchg
lahf
mov
mov
movsb
mov
subb
int
out
mov
jns
inc
pop
sbb
ret
stos
jecxz
mov
fmull
hlt
inc
mov
xchg
jb
mov
mov
and
movsl
xor
adc
mov
push
out
xchg
push
mov
cmp
xor
or
xor
xor
mov
mov
imull
mov
movl
and
mov
cwtl
cmpsb
push
test
sub
pop
mov
mov
xchg
push
clc
inc
test
xlat
xchg
push
scas
mov
and
ret
cwtl
in
pop
mov
out
pop
test
pop
outsb
sub
pop
sbb
fimull
fnsave
cmc
push
loope
mov
xchg
cmp
sarb
mov
data16
sbb
xchg
imull
sub
jb
sub
ljmp
cltd
mov
aaa
clc
sub
jns
outsb
mov
push
mov
iret
xor
or
lods
lods
es
fldl
daa
shll
and
or
mov
das
fdiv
cmpsb
mov
inc
outsb
ret
out
xchg
jle
xchg
insl
push
test
test
addr16
or
ret
push
push
gs
mov
inc
jnp
lahf
dec
out
mov
sub
cmp
mov
ljmp
testb
xor
ret
add
inc
daa
or
lods
push
fistl
jae
cmpsb
sub
daa
mov
arpl
cmpsl
frstor
add
ja
push
pop
push
test
cmp
mov
jo
lods
scas
xchg
fcompl
xchg
insl
and
aam
pop
cmp
ret
int
sbb
sbb
mov
sub
dec
das
outsl
mov
dec
sub
testb
fadd
mov
popf
jp
mov
xlat
add
mov
pusha
jge
mov
mov
jecxz
and
stc
sub
push
and
sub
pop
nop
aaa
fnsave
data16
add
sbbb
jns
in
mov
aad
iret
scas
stos
stos
loope
mov
mov
lahf
jae
mov
mov
scas
sub
into
in
and
rorb
or
mov
arpl
sahf
mov
test
inc
pop
outsl
mov
mov
cmp
mov
xchg
mov
cmp
mov
adcl
cmovl
leave
adc
lahf
jnp
mov
add
mulb
clc
cmpsl
lods
sub
dec
xor
fistpl
xchg
inc
pop
add
mov
in
adc
mov
jne
or
xchg
mov
add
sbb
mov
jp
add
cs
gs
in
out
adc
or
xchg
mov
mov
mov
cltd
shrl
dec
movsb
fdivrl
mov
fimuls
mov
movsb
pop
push
rol
aad
ljmp
daa
or
adc
cmc
aaa
mov
add
stos
gs
cmpsl
xor
inc
pop
cld
fs
xor
loopne
inc
movsb
leave
cvtps2pi
fnsave
stos
xor
mov
lret
sub
out
dec
jg
mov
inc
ds
xor
outsl
cmp
in
aad
mov
mov
cmp
cmp
jo
sbb
fs
enter
rol
xor
sahf
mov
cli
sub
js
mov
sub
and
lods
push
out
inc
mov
loope
iret
push
scas
ss
mov
loop
inc
xor
and
jg
outsb
inc
mov
xor
and
cld
xchg
sarl
cmp
pop
das
mov
mov
sbb
mov
pushf
aad
sbbl
out
sbb
std
outsl
xchg
cs
mov
loopne
gs
jns
sub
mov
fcomi
mov
adc
and
pop
jecxz
popa
mov
pop
add
bswap
dec
mov
sti
jo
addr16
pop
movsl
ret
jecxz
mov
imul
mov
or
repnz
cmc
push
mov
into
out
mov
cwtl
push
inc
fnstsw
sti
mov
push
movsl
xor
inc
cmp
mov
je
cltd
adc
xor
xchg
sub
mov
ret
mov
dec
mov
xlat
cmp
and
push
mov
cmpb
and
dec
mov
stc
and
push
lds
mov
inc
and
pusha
push
fwait
adc
mov
fdivrs
xorb
cmp
mov
lds
ja
ret
pop
movsl
inc
dec
cli
xlat
inc
mov
sub
or
jg
inc
loope
push
mov
mov
pusha
popf
rorl
sub
cmc
movsl
mov
add
ret
mov
daa
das
mov
inc
inc
stc
xchg
das
inc
mov
inc
sub
inc
and
and
fcomps
jge
inc
xor
stos
imul
int3
es
cmp
push
push
faddl
test
aad
sub
fidivl
mov
dec
imul
ss
fs
mov
cmp
repnz
scas
aaa
aas
mov
std
add
mov
call
mov
ja
cmc
movsl
ret
lods
cltd
or
cmpl
or
scas
andb
mov
sbb
jns
xor
les
hlt
sub
xchg
xor
stc
push
xor
inc
dec
insl
ds
cmp
je
rolb
out
xchg
jmp
dec
test
outsl
jb
cs
or
inc
in
shll
lahf
faddl
pop
inc
test
mov
lahf
mov
cmpsl
aad
xor
xor
fcoml
popf
lods
mov
enter
or
or
loop
clc
mov
mov
jl
push
lods
inc
fisttpll
mov
mov
fidivs
cwtl
test
adcb
fdivl
jmp
pushf
sub
mov
loopne
inc
ret
xor
addr16
mov
xor
mov
xor
push
cmpsb
add
leave
stos
pop
punpcklbw
or
aaa
mov
test
adc
jg
mov
jae
and
rclb
scas
push
lahf
jle
data16
loopne
xlat
mov
mov
push
mov
sub
testl
insl
daa
sub
inc
jmp
jg,pt
push
push
js
push
mov
arpl
test
mov
pusha
push
daa
mov
mov
pusha
bound
aad
mov
shrl
cmpsb
icebp
sbb
sub
inc
ss
iret
daa
jecxz
test
or
pushf
ret
jmp
fmul
shlb
or
xchg
das
ret
into
pop
gs
aaa
leave
lcall
std
fisubs
cmp
clc
mov
mov
xor
fmull
ja
push
jmp
arpl
xor
or
inc
sbbl
push
movsl
xchg
push
scas
xchg
lods
ret
cld
mov
mov
iret
and
and
stos
xchg
loopne
sub
xor
in
lret
inc
mov
int
pop
push
mov
ficompl
dec
adc
mov
in
cmpsb
aaa
movsb
mov
push
movsb
out
stc
or
scas
jnp
push
mov
test
popa
inc
clc
cmovl
mov
cmp
mov
xor
fstl
pop
das
jmp
or
movzwl
and
jbe
andb
inc
pop
mov
movsl
jp
fsts
pop
sub
outsl
test
xor
mov
mov
push
adc
test
cli
insl
sub
scas
cwtl
mov
lea
ds
pushf
pop
orl
lds
negb
mov
call
in
mov
xchg
mov
daa
aad
lea
std
mov
loope
adc
into
cli
scas
mov
jecxz
push
dec
shlb
mov
stos
jl
ret
cmp
or
cmp
ret
pop
cmc
and
mov
xor
rorl
ds
lret
push
inc
gs
push
xor
xchg
das
ss
int
add
out
cs
cmpsb
into
shlb
mov
test
mov
lret
cs
xor
lcall
sub
cld
rcrl
cmp
ret
sbb
cmp
mov
int
cltd
out
loop
ljmp
push
fildl
in
cmp
test
cld
sbbb
inc
int
add
dec
xchg
pop
leave
cmpsl
mov
cmpsl
sbb
mov
addr16
ljmp
jae
cmpsl
cmp
sbb
decb
test
mov
mov
sahf
push
mov
push
mov
lret
add
pop
or
insl
mov
shlb
jnp
inc
inc
jae
jns
das
cmpsl
data16
dec
cmp
and
mov
std
push
popa
mov
into
rol
mov
and
push
test
dec
andb
ds
xor
mov
xchg
sub
pop
rorb
or
cs
mov
pusha
push
imul
scas
ret
xor
cwtl
movsb
rcr
cmp
jo
mov
jae
movsb
and
jb
xor
lcall
frstor
mov
dec
inc
movsb
jecxz
xor
inc
pop
in
jae
mov
sbb
push
test
push
xchg
xchg
rcr
add
gs
mov
xchg
xlat
subb
xchg
leave
jge
add
mov
lea
mov
xchg
fistl
stos
mov
cmp
ljmp
daa
in
mov
clc
mov
outsb
or
add
push
pop
test
mov
mov
and
mov
aas
sub
iret
fidivrs
shl
and
pusha
das
pop
push
mov
ds
cmpsl
movsb
mov
sbb
push
fcmovu
or
loop
inc
outsl
sub
cltd
and
lods
subb
sub
stos
fcoms
hlt
mov
inc
aaa
mov
outsl
jecxz
xor
mov
mov
daa
jns
stos
loope
pop
aam
test
stc
aaa
and
test
call
sub
int
movsb
ljmp
cmp
fisubrl
mov
inc
call
inc
mov
gs
push
xor
lahf
decb
mov
jge
cs
or
aad
mov
lds
insl
test
test
mov
int
and
negb
lea
mov
int3
clc
cmp
in
cpuid
loop
test
inc
mov
out
aad
or
shl
out
or
rorb
cmpsb
dec
nop
push
stc
mov
and
push
lods
fsubrl
or
xchg
xchg
sub
fistl
and
mov
xor
xchg
test
stc
sbb
iret
sub
loopne
shrl
pop
mov
aaa
cmp
int
fildll
jmp
leave
inc
dec
shlb
decb
into
es
int
or
sub
imul
insb
es
xchg
mov
sub
imulb
stos
fcompl
mov
sub
rcll
call
cmpsb
sarl
pop
push
ret
ret
push
xor
out
push
cmp
jmp
cmpsb
mov
add
xor
xchg
hlt
xor
cmc
adc
cli
cmpsb
inc
and
imul
xor
addr16
xor
lea
mov
out
inc
sub
pushf
shlb
lds
insb
mov
adc
ficoms
test
ret
mov
adc
inc
xchg
pop
pop
shl
lret
pop
xchg
mov
mov
push
inc
xor
push
xor
mov
mov
push
lods
daa
dec
clc
mov
mov
lea
pusha
fwait
cmpsb
mov
and
frstor
aaa
jnp
and
mov
and
xlat
mov
das
out
cmp
shll
cltd
jnp
dec
test
mov
jl
rcrb
push
cmpsl
lods
xor
pusha
jg
iret
int3
lock
mov
scas
int
daa
add
or
dec
push
and
shlb
fildl
out
mov
inc
jecxz
mov
lret
ss
mov
sbb
into
mov
inc
cmp
cmp
pop
sbb
or
xor
mov
jl
dec
pop
inc
ret
test
stos
lock
popf
sbb
sub
cltd
adc
cmp
dec
lock
jecxz
or
mov
pop
insl
mov
cmp
xor
mov
jecxz
loope
cmovae
xor
mov
fs
mov
jmp
jecxz
insl
bound
cmpsb
test
ror
cmp
xor
sub
daa
ret
stos
dec
add
adc
mov
xlat
jg
sub
xor
sarl
test
mov
push
dec
or
cmp
int
mov
addr16
and
mov
test
add
dec
sbb
inc
fldl
mov
lret
mov
cmp
push
movsb
loop
stos
test
movsb
scas
das
leave
mov
push
push
push
and
leave
xchg
or
inc
mov
roll
decb
test
push
icebp
pushf
cmp
loope
leave
mov
clc
or
pop
push
xor
sub
xchg
xchg
scas
mov
loop
pop
test
jns
out
mov
mov
fwait
jecxz
inc
scas
insb
inc
ret
mov
out
or
into
pusha
mov
push
mov
lds
push
hlt
inc
and
xor
pop
push
mov
mov
scas
jecxz
adc
pusha
out
mov
mov
fwait
ss
and
pop
aad
xchg
and
daa
inc
mov
push
fsubrl
mov
add
cmp
sbb
scas
lea
push
mov
addl
ja
test
mov
mov
push
das
mov
sub
mov
sbb
addl
ret
cmp
das
out
push
sti
mov
jecxz
pop
cltd
lods
test
cli
push
cmp
test
inc
lods
fiaddl
rcrl
cmp
and
and
inc
mov
fs
sahf
repz
dec
jl
shlb
shrl
pop
push
sub
and
mov
pop
test
repnz
jmp
mov
and
test
jp
xchg
sub
cltd
out
test
pop
pop
pop
movsl
movsb
stos
mov
call
mov
sub
daa
fldt
and
cwtl
xor
xchg
cmpsb
nop
cmp
out
mov
jmp
mov
out
dec
sub
mov
ret
sbb
fwait
outsl
lods
mov
scas
shl
popa
fstps
jae
xor
fxch
mov
mov
dec
aas
fdivrl
loopne
shlb
loope
and
cmp
mov
mov
inc
mov
cmp
mov
sub
subl
dec
pushf
sub
rcl
cmp
mov
iret
std
bound
sarb
pusha
out
das
cmp
jl
adc
jns
das
sub
popf
mov
pop
sub
sub
out
push
xor
mov
shll
add
mov
or
xchg
lret
fidivl
call
in
mov
bound
data16
cmpsl
fistpl
push
cmpsl
or
mov
ror
sbb
clc
test
mov
sbb
cmp
xchg
mov
dec
dec
aaa
push
adc
push
aas
inc
loope
push
in
mov
and
cmc
cmpsb
push
imul
scas
mov
lds
pop
sub
addr16
inc
jl
mov
filds
pop
imul
lock
and
punpcklbw
sbb
es
push
insb
cs
mov
push
outsb
iret
adc
mov
packssdw
sub
data16
jo
jnp
dec
mov
mov
stos
cmc
mov
cli
je
mov
mov
test
fs
shrb
or
rolb
fnstcw
stc
mov
jle
sub
test
roll
xor
lock
fisttpll
call
test
mov
mov
dec
cltd
ds
call
sub
repz
lea
cmp
fstpt
adc
push
xor
jmp
mov
aad
adc
fdivrl
pop
and
cmpsb
jp
out
xlat
adc
rol
jecxz
and
test
fnstcw
dec
mov
jl
inc
xchg
subb
js
dec
sbb
jle
adc
test
mov
jl
movsb
jge
mov
stos
mov
jnp
loop
sbb
lret
cmp
outsl
cmp
sub
dec
mov
inc
shll
in
test
jl
pop
jb
out
sub
lcall
mov
ror
adc
stos
jno
aaa
xchg
cmp
scas
or
cmpsb
mov
mov
or
mov
mov
hlt
test
cmp
or
rorb
ffreep
and
jo
jmp
fcomp
jae
addr16
outsb
ret
ret
cs
mov
xor
scas
dec
mov
add
shr
mov
stos
inc
and
scas
xor
ljmp
stc
or
pusha
clc
lret
jo
mov
dec
in
push
jno
mov
aad
mov
push
ja
rcr
pop
mov
test
movsb
mov
xchg
fstpt
stos
cmc
sarl
pop
jmp
pop
loopne
stos
ret
out
lret
xchg
ret
or
mov
mov
fisttpll
mov
daa
lret
adcb
xchg
ret
sbb
dec
into
fwait
mov
int
pop
mov
xor
addr16
or
mov
jns
mov
adc
fidivl
mov
mov
inc
fidivrl
shlb
clc
insb
lods
sub
or
mov
mov
in
pop
jae
cltd
shlb
js
mov
jmp
data16
cmpsb
mov
loope
into
or
addr16
mov
frstor
fbstp
je
xor
out
sbb
mov
in
xchg
mov
into
mov
sub
in
cmp
outsw
pop
push
daa
stos
insb
lahf
lret
xor
xchg
cmpsl
cmpsb
shlb
int3
fmuls
out
mov
in
push
adc
or
daa
in
fmull
stos
sarl
sbb
shrb
mov
push
mov
dec
mov
adc
sarl
lds
mov
dec
and
mov
cmp
jo
insb
cmp
addr16
fisttpll
push
aam
mov
cltd
inc
insb
stos
pop
scas
sub
mov
cmp
cld
sbb
cmp
sub
mov
test
xlat
std
shl
into
stos
add
and
cld
mov
in
cmpsl
fsubrl
xchg
push
mov
pop
mov
aaa
mov
dec
popf
dec
test
sub
jmp
ss
add
ljmp
pop
test
out
push
std
jb
scas
mov
fcmovne
adc
mov
add
sub
repnz
adc
xor
daa
sub
xchg
inc
ret
shll
jns
dec
mov
push
dec
push
mov
fstpt
inc
mov
mov
xor
and
mov
sub
inc
inc
clc
dec
in
sub
sbb
lcall
fs
shrl
fldenv
mov
ror
mov
lret
xlat
leave
pop
cmc
test
mov
push
mov
fistl
push
inc
outsb
xor
mov
fistpll
pop
insl
sarb
xchg
movsb
mov
test
cmp
cmpb
jns
lret
cmp
mov
mov
out
popf
mov
add
ja
es
stos
and
roll
sti
mov
das
test
loopew
and
adc
xor
stos
xlat
gs
aaa
fmuls
out
mov
daa
sbb
jne
int
sbb
mov
inc
scas
inc
cmp
dec
mov
daa
jge
inc
sub
inc
mov
psrlq
mov
scas
aad
pusha
inc
cmp
xor
dec
test
aas
scas
add
daa
sub
sbb
scas
pop
enter
sub
pop
mov
jbe
test
inc
movsl
or
cmp
adc
stos
xor
test
shrb
stos
mov
popa
enter
mov
and
mov
pusha
insl
adc
pop
jo
lods
cmp
addr16
sbb
cmpsb
outsb
scas
test
pop
mov
movsb
fldenv
fsubr
stos
or
cmp
push
jb
cmpsl
mov
mov
test
int3
pop
lods
jmp
daa
mov
testb
xchg
mov
xor
sub
mov
gs
jmp
mov
inc
add
bound
inc
jmp
mov
hlt
in
jle
dec
das
pop
dec
xor
lods
xchg
xchg
or
adc
scas
rcrb
xor
jp
cmp
aam
mov
xor
mov
movsl
xchg
in
mov
mov
inc
aas
cmpb
in
mov
jmp
cmpsb
outsb
aam
push
pop
loope
ror
dec
cmpsl
test
inc
loopne
push
cmpsl
outsl
les
mov
cmp
xor
repz
jns
mov
mov
push
negl
mov
add
clc
pop
pusha
xchg
in
lods
fisubrl
stos
mov
cmpsl
and
dec
push
mov
fistps
scas
dec
mov
cld
jae
mov
into
add
dec
je
sbb
iret
xlat
pop
cs
shll
ret
stos
push
fcmovu
pop
lods
pop
movsl
push
mov
int
popa
push
in
dec
mov
icebp
fidivs
mov
mov
push
cmp
mov
movsb
subb
cmpsl
fnstsw
in
xor
testl
scas
xor
mov
ret
xor
inc
and
sub
mov
ret
shrl
js
add
cli
and
in
cli
sub
add
mov
out
cld
push
ret
and
xchg
lods
sub
cltd
sub
aaa
push
lock
add
adc
ja
cmp
xlat
mov
cmp
out
inc
rorl
pop
pusha
stc
test
movsl
movsl
mov
sahf
inc
cld
pop
jb
xor
outsl
jbe
sbb
mov
mov
leave
dec
popa
or
xchg
fisttpll
inc
cmp
xor
and
lods
and
and
fnstsw
popa
daa
sub
xor
lods
mov
xor
ds
icebp
jbe
pusha
mov
movsb
call
clflush
pop
lds
inc
jecxz
aaa
jae
mov
cmp
in
les
mov
adc
mov
ja
and
scas
shlb
push
testb
mov
stos
xor
out
les
add
pop
stc
cmp
mov
dec
push
aas
xchg
inc
xor
out
xor
ljmp
mov
push
push
dec
or
mov
neg
cs
mov
popa
inc
adc
mov
xor
cmp
xor
and
adc
and
loope
cmp
cmpsl
mov
int3
add
mov
gs
test
jns
movsb
mov
xor
clc
lods
xor
xlat
fstpl
mov
mov
out
jle
mov
xchg
test
jns
in
pushf
mov
cmp
into
adcl
roll
mov
test
adc
mov
sub
inc
fisttps
push
sub
int
xchg
sbb
ret
and
setns
mov
push
cmp
inc
cmp
xchg
movsl
pop
inc
jo
sbb
out
gs
pusha
aad
xchg
xor
push
inc
insl
js
add
das
and
inc
ss
lea
or
rcll
and
test
xlat
int
mov
or
or
sbb
iret
ret
and
jecxz
mov
or
mov
add
ror
sbb
push
cmpsb
inc
aad
outsb
inc
push
icebp
sub
sbb
mov
aad
pop
inc
ds
andb
nop
ja
mov
mov
scas
loop
or
cmp
inc
cmpsb
mov
pop
fbld
mov
mov
and
push
mov
add
cltd
stc
cmp
loope
inc
xor
dec
movsb
lods
mov
xlat
mov
and
adc
fsubs
lret
dec
fsub
loopne
ret
sub
adc
adc
nop
sub
movsl
jnp
ficoml
mov
cli
imul
fildl
and
jle
les
ffree
insl
inc
ret
dec
push
mov
add
xchg
mov
rcr
push
ds
jnp
mov
sbb
cltd
mov
stos
jg
mov
sub
mov
ss
jle
inc
mov
lretw
mov
adc
iret
or
xor
ret
xor
mov
fcoms
mov
sub
inc
mov
popa
cmp
leave
ret
xor
mov
out
mov
cwtl
or
or
cmpsl
sub
les
sub
fnstsw
mov
ret
outsl
and
dec
rorl
or
ret
adc
or
gs
cmp
leave
ja
mov
mov
seta
jb
jmp
mov
call
ret
lret
lahf
and
mov
sub
jne
scas
xor
nop
out
cld
mov
xchg
dec
adc
cmp
or
cmc
mov
push
lahf
dec
or
cs
inc
loope
in
jp,pt
adc
sub
lret
mov
cmpsb
shlb
loop,pt
ret
sub
jns
shl
mov
scas
xchg
cli
mov
fstpl
nop
mov
mov
sahf
jp
in
test
lret
stos
cmp
shll
push
or
inc
mov
mov
das
cltd
sub
leave
and
pop
xchg
add
jecxz
lods
jmp
mov
mov
sbb
or
mov
xor
xchg
ror
aas
mov
test
shrb
in
fmull
int3
mov
sbb
mov
mov
cmpsl
pop
ja
and
sub
cmpsl
sub
dec
test
std
mov
mov
jbe
leave
in
or
jae
sbbl
add
arpl
add
jno
jns
cmp
cmp
mov
sub
das
mov
cmpsb
or
mov
and
add
cmpsl
or
scas
mov
loope
inc
fcmovu
xchg
mov
push
push
int3
and
cwtl
add
into
xchg
mov
shll
push
xchg
cmpsl
and
fldenv
arpl
cmpsb
inc
adc
addr16
movsb
mov
int
int3
fdivrl
ret
insl
mov
mov
sub
cmp
adcb
inc
push
xchg
fs
cmp
das
inc
xchg
or
adc
fstpt
push
or
xor
sbb
popa
lret
test
bound
push
cwtl
push
xchg
loope
call
shrb
test
push
mov
sti
sarb
pusha
jecxz
xchg
mov
lods
lds
add
sub
in
icebp
gs
cld
xchg
mov
shr
mov
rdmsr
xchg
sbb
movsl
mov
fidivl
push
push
imul
mov
mov
test
scas
push
rcrl
cli
inc
scas
sub
pusha
addr16
pusha
in
shlb
xor
stos
cmp
xchg
sub
mov
pop
iret
popa
jne
and
push
sub
popf
call
xchg
ret
jg
shrb
xor
cmp
xchg
xor
mov
cmp
aam
add
cmpsl
ja
add
jno
fisttpll
out
mov
popa
fsubl
inc
cmp
aaa
iret
popa
push
movsl
cli
inc
and
push
mov
mov
inc
mov
push
cmc
ljmp
mov
inc
fldl
pop
ret
mov
sarl
pop
stos
ljmp
jnp
sub
mov
push
mov
mov
fidivl
mov
lea
je
sarl
jnp
data16
fistpl
lret
insb
cmpsb
inc
inc
cmpsl
icebp
mov
movl
inc
push
mov
inc
or
inc
jnp
out
cmp
arpl
sbb
mov
aaa
push
sub
or
mov
scas
xor
lret
mov
andb
pop
fcmovnu
inc
roll
push
ja
insb
xor
aas
loopne
test
iret
xchg
sub
inc
popa
sbb
and
jmp
sbb
xor
push
mov
jge
fs
movsl
sub
in
test
stos
push
cld
push
dec
jnp
loope
mov
in
xchg
js
mov
movsb
iret
loop
ret
shll
lahf
popa
pop
testb
mov
dec
fldl
mov
fldt
sarb
mov
cmpsl
cmp
jp
jae
test
lret
mov
fwait
inc
ret
sbb
adc
lds
lock
orb
les
movsl
hlt
mov
shlb
sub
mov
aam
in
sub
test
daa
push
sbb
sbb
mov
iret
pusha
mov
je
shlb
mov
mov
adc
sbb
inc
mov
push
or
sub
es
lods
adc
or
and
rcl
es
dec
ds
xor
fcomi
popf
fnsave
out
add
sub
mov
jle
arpl
push
jns
fs
jecxz
roll
lods
int
mov
mov
roll
pop
cld
pop
rclb
stos
mov
dec
push
cmp
inc
fistpll
sub
inc
xchg
xor
xchg
es
fiaddl
mov
notl
arpl
and
pop
xor
push
lock
test
and
adc
pop
sub
aaa
cmpsb
xlat
and
inc
loop
sub
call
mov
inc
xlat
mov
notb
and
lret
insl
mov
stos
mov
jecxz
xor
cld
dec
lods
jecxz
nop
outsl
and
imul
bound
xchg
addr16
mov
push
cld
je
es
data16
shll
lret
cmp
xlat
mov
int
loope
imul
mov
and
iret
cmp
mov
fldenv
mov
fst
xchg
fnsave
mov
sbbb
mov
jae
movsl
je
sub
fbld
int
sbb
mov
push
in
shlb
ret
loopne
stc
dec
push
xchg
xor
mov
push
fs
add
jge
or
xor
lret
push
mov
xor
cmpb
push
scas
fstpt
ret
outsb
cltd
sub
add
xlat
push
nop
ljmp
xchg
loopne
xorl
int
sbb
movsl
and
push
jmp
shrb
scas
dec
inc
jns
test
pop
and
add
xor
add
xchg
les
sub
addr16
insb
inc
push
sub
or
getsec
mov
stos
test
pusha
mov
lods
mov
push
and
push
mov
movsl
loope
hlt
push
jns
dec
xor
mov
jge
in
xchg
lods
fcoml
sub
sub
inc
jp
cmp
sbb
or
push
loopne
stc
sbb
push
xor
inc
mov
cmp
dec
sbb
xchg
inc
int3
jns
dec
lods
and
orl
in
es
movsl
xor
subl
push
add
sub
insb
sub
cs
cmp
jl
scas
out
std
adc
inc
mov
sub
data16
mov
fwait
daa
or
int3
mov
fisttpll
aaa
scas
jge
mov
adc
insl
insb
mov
inc
popa
mov
inc
movsb
fmuls
imul
mov
enter
add
push
and
int3
daa
cmp
out
xchg
sarb
mov
daa
mov
ss
test
jne
xor
dec
subb
xchg
hlt
fistl
sub
jbe
lret
subl
pop
jle
push
loop
xchg
push
fdiv
mov
popa
mov
inc
iret
aad
mov
ds
add
push
shlb
out
popa
stc
mov
fnstcw
out
xchg
mov
xor
cli
and
inc
xchg
xor
sub
jbe
pusha
sub
cmpsb
sub
xchg
adc
cmp
repnz
jge
cmp
inc
fsts
mov
lods
ret
inc
stc
mov
ss
int
sbb
mov
xlat
mov
jmp
adc
aaa
in
ds
dec
mov
jecxz
lret
pop
push
sarl
pop
xchg
or
fsubrl
and
push
xchg
mov
xchg
cmp
test
aam
mov
pop
push
popa
shll
push
mov
cmpsl
std
jne
mov
add
scas
jmp
inc
mov
es
inc
pusha
jb
fildll
das
mov
rorl
cltd
test
lds
rcrb
cmpsb
shlb
sbb
daa
inc
mov
fldt
in
loope
sbb
ss
andb
lods
cmpsl
leave
out
pusha
popa
lcall
pop
ss
inc
lret
rcrb
mov
ds
ret
popa
roll
mov
add
and
lret
mov
adc
sahf
add
mov
in
mov
lret
cmp
popa
jle
sbb
mov
push
out
sarb
and
sahf
cmpsb
subl
jo
les
movsl
daa
stos
mov
lret
fld
push
outsl
testb
xor
cs
loopne
clc
mov
mov
daa
mov
cmp
movsl
stos
insb
scas
fistpl
ds
daa
lods
out
call
mov
mov
repz
cmpsl
mov
xor
sub
cmp
popf
idivl
push
and
scas
mov
jecxz
pop
add
imul
adc
mov
loope
xlat
mov
add
cmpsb
test
dec
adc
out
mov
stos
push
shll
jo
icebp
iret
daa
movsb
mov
lds
leave
daa
mov
inc
push
mov
mov
int
lahf
pop
jp
mov
shrb
sbb
mov
and
mov
add
fldenv
mov
hlt
mov
pusha
push
leave
and
es
mov
iret
mov
add
inc
aad
or
xchg
insl
xchg
sub
sub
cmc
imul
clc
dec
sub
outsb
jmp
mov
mov
mov
mov
cmp
or
pop
imul
mov
dec
ret
popa
jle
sbb
inc
pop
mov
jns
in
mov
add
add
jbe
jecxz
jb
xchg
and
pop
xchg
into
int3
data16
je
mov
mov
aam
cmpsl
pop
test
in
inc
push
or
cld
pushf
das
mov
movsb
out
mov
add
idivb
loop
loope
push
nop
inc
aad
sub
pop
mov
inc
pop
xchg
ds
call
mov
jecxz
sub
cltd
or
hlt
mov
mov
out
mov
nop
mov
cwtl
addb
inc
je
loopne
rol
cmp
rcrb
outsb
mov
daa
lret
and
into
in
fsubr
xor
popa
and
retw
lods
inc
xchg
xchg
int3
cmove
andb
sbb
pop
mov
push
mov
mov
mov
sbb
aaa
or
add
or
dec
test
fsubs
fstl
mov
outsl
scas
cs
pop
sub
sub
jnp
ret
jo
mov
or
sub
sub
aaa
add
test
cmp
addl
mov
lods
imul
jmp
jnp,pt
cmp
aaa
mov
sub
mov
test
fsub
dec
pop
and
call
sub
cmp
adc
sub
out
push
jb
dec
test
sbb
aaa
cmp
push
fldl
fisttps
lds
fsts
das
into
xchg
pusha
inc
ja
inc
mov
dec
or
movsb
and
mov
ret
pusha
jns
testl
push
mov
std
mov
mov
outsb
arpl
pop
scas
mov
test
bound
dec
mov
xchg
in
mov
int
pop
cmp
ret
mov
jae
iret
ljmp
lods
cmp
dec
cli
es
sbb
mov
out
mov
mov
xchg
jp
xlat
inc
adc
test
dec
insl
loopne
das
rep
xor
cmpsb
movsb
or
mov
cmp
fsubr
xchg
jmp
mov
xchg
out
push
mov
movsb
negl
pusha
mov
adc
mov
mov
iret
jnp
cltd
pushf
pop
gs
ret
aad
pop
das
in
mov
iret
out
xchg
ljmp
xchg
sbb
gs
mov
mov
ret
sbb
cmp
inc
stos
and
cli
sub
mov
dec
es
sub
loop
mov
xor
xor
es
or
lahf
push
cmp
sahf
xchg
and
sub
sbb
ss
shlb
adc
adc
mov
fst
jb
mov
xorb
idiv
cmp
push
pop
or
sarb
lds
push
sub
cs
push
gs
cmp
mov
add
mov
in
xor
mov
imul
push
mov
lret
in
mov
mov
jmp
movsb
cmpsb
cmpsl
fs
jecxz
test
sbb
jecxz
int3
mov
or
mov
jbe
bound
iret
dec
sbbb
dec
cmpsl
xchg
mul
fistpl
cmpsb
fcoms
xor
inc
test
jae
mov
mov
add
adc
leave
ljmp
xor
lock
test
dec
or
test
iret
or
test
sbb
cmp
pop
fcomip
mov
push
cli
outsl
idivb
mov
sub
movsl
divl
xchg
push
mov
les
daa
das
mov
repnz
mov
test
sub
out
jne
sbbb
ss
sub
lods
mov
jge
xor
addr16
shlb
sub
xlat
jge
sub
sub
mov
jns
inc
mov
icebp
es
jns
scas
xor
les
cmpsl
fcomi
iret
inc
jns
cmpb
pop
insb
subb
dec
lahf
inc
pop
scas
mov
das
inc
mov
enter
mov
inc
xchg
mov
jns
and
mov
sbb
xor
in
loope
adc
pushl
fstpt
imul
or
es
insl
lock
lcall
inc
dec
scas
pop
push
aaa
xor
movsb
fistps
popa
fidivl
mov
mul
dec
mov
mov
adc
rcll
leave
ss
int
push
cli
shlb
mov
pop
adc
add
fnstsw
dec
push
cli
psubsb
fs
dec
mov
pusha
fwait
sub
add
popa
sub
cmpsb
pop
mov
in
push
insb
movsb
or
rolb
adc
aas
daa
mov
inc
sti
mov
mov
dec
fidivl
mov
mov
mov
clc
add
and
cmc
es
mov
data16
stc
cmp
lret
movsb
pop
push
fdivl
fiadds
std
in
cmp
and
leave
or
cmp
mov
xor
das
fimull
xchg
mov
xlat
repz
fisttpll
or
cli
std
mov
pop
adc
ds
fst
push
pushf
loop
mov
inc
fisttpl
push
jmp
fwait
xchg
imul
xchg
and
pop
gs
xchg
mov
cmp
cmpsl
mov
pop
mov
xorl
nop
lret
call
push
les
adc
inc
clc
ljmp
das
sub
sarl
int
inc
loopne
call
bound
in
push
shrb
and
jecxz
sub
into
jmp
pushf
loopne
adc
mov
popa
inc
mov
sub
test
xchg
pusha
fwait
sti
dec
cmpsl
mov
mov
push
cmp
sbb
enter
in
inc
mov
lret
mov
lcall
test
cmp
test
and
divb
jmp
inc
or
fwait
ret
ret
pop
lods
push
push
fimull
test
dec
lds
call
enter
or
cmp
mov
mov
inc
loope
mov
add
ds
xor
fstps
mov
test
jnp
push
iret
mov
mov
nop
lds
push
mov
data16
xlat
dec
test
shrl
sbb
test
je
fildl
ret
mov
lods
lods
mov
push
fisubrs
sti
es
sub
jecxz
mov
xchg
scas
stos
mov
inc
into
push
and
cmp
mov
lret
add
mov
shll
aas
rolb
rcr
dec
shll
fwait
or
sub
mov
mov
mov
fs
and
daa
shrb
mov
mov
ret
inc
lods
mov
aas
ret
dec
aas
xchg
xor
fstpl
adc
mov
pushf
cmp
xor
call
inc
loopne
lret
sub
push
lods
mov
cmp
shl
lods
imul
ret
cmp
pop
pusha
lret
pushf
fstpt
scas
xor
pop
push
lods
ljmp
cmpsb
mov
dec
push
mov
std
test
stos
and
lea
mov
mov
xchg
das
mov
ret
xchg
and
sub
scas
xor
adc
int
mov
xchg
mov
mov
sub
sub
ljmp
test
inc
fbstp
cmp
rcrl
scas
inc
jle
cmpsl
pop
add
call
shrd
dec
mov
cmpsb
sub
pop
xlat
mov
adc
inc
jne
mov
xchg
xor
sbb
in
sarb
sub
shrl
subl
xor
sub
jno
push
or
dec
and
bound
repz
cltd
jecxz
xor
je
xor
jg
sbb
adc
stos
xor
outsl
fnsave
loope
scas
iret
add
sub
repz
mov
jp
mov
and
inc
mov
pop
mov
xchg
stos
ret
sbb
loopne
fsubs
mov
ror
cmpsb
or
scas
out
dec
mov
mov
subb
cmp
das
fisubrl
shr
jmp
popa
comiss
repnz
xor
ds
inc
nop
popf
gs
sahf
lahf
mov
inc
xlat
jle
inc
outsl
lret
in
jbe
pushf
fisttps
mov
lock
xchg
mov
mov
out
lret
and
sbb
sub
inc
mov
mov
inc
popa
out
cltd
xor
xor
mov
mov
ss
pop
push
dec
jecxz
jne
dec
cmp
imul
sahf
sub
jecxz
xchg
roll
loope
dec
arpl
imul
push
dec
insb
aaa
xor
scas
daa
sub
xor
xchg
movsb
lods
sti
das
mov
mov
cmp
mov
pushf
add
sub
sub
ja
mov
ds
clc
push
scas
xor
inc
iret
mov
lret
aaa
jb
out
sbb
addl
loope
popa
repnz
xchg
jmp
jecxz
in
enter
scas
out
aad
mov
ljmp
mov
idivl
xchg
aad
sbb
xor
aaa
and
in
lods
jp
cmpsl
loop,pt
xor
add
lds
movsb
xor
mov
pop
dec
cmpsl
cli
and
jmp
jne
jge
push
cmpsl
das
cmp
xchg
lds
mov
cmp
popa
cltd
or
push
cmpsb
iret
stos
xor
test
insb
test
ljmp
insb
movsb
xlat
xchg
or
sub
lret
push
push
sbb
pop
icebp
add
shll
and
scas
ret
aaa
pop
mov
mov
leave
jb
sahf
test
mov
mov
cli
xchg
scas
inc
xor
xlat
aad
jecxz
in
fadds
inc
ret
lret
jb
jnp
or
lods
test
lods
repnz
xor
dec
cmp
dec
in
inc
addr16
xchg
fadds
mov
outsb
movsb
mov
jmp
out
xchg
pop
and
inc
test
pop
fstpl
jmp
mov
pusha
jne
je
xchg
cmpsb
movsb
xor
add
rcll
jp
adc
pop
cmpsb
test
hlt
mov
test
mov
adc
jl
ret
cmp
sahf
mov
mov
sbb
test
daa
lret
pop
popa
int
iret
in
or
mov
pop
xor
push
out
mov
xchg
inc
in
inc
cltd
xor
pop
in
data16
addr16
mov
add
and
pop
imul
push
push
lret
ss
loop
xlat
rolb
cltd
adc
movsb
fdiv
inc
mov
and
push
mov
cltd
ret
push
and
push
lcall
mov
cmc
testl
cmp
out
mov
pop
mov
es
in
jl
jp
sarb
push
inc
and
jp
shll
jnp
mov
popa
mov
or
pop
dec
sub
fnstcw
lret
addb
addr16
les
push
ljmp
jecxz
sbb
addr16
mov
xor
cld
scas
xor
lds
cmp
cmp
data16
stos
lods
xor
call
std
repnz
xlat
xor
popa
cmp
test
ret
jbe
popa
pushf
mov
xor
andb
daa
sub
xchg
je
mov
mov
push
push
mov
lods
cmp
in
bnd
outsl
mov
sbb
mov
cs
scas
sbb
test
lret
lods
cmp
lret
enter
sub
cmpsl
aas
xor
jl
int
addr16
push
mov
cmpsl
lret
into
and
jge
inc
dec
xor
sbb
daa
mov
pop
mov
fildl
jmp
push
data16
movsl
ret
cmp
and
xchg
stos
adcb
imul
xor
xlat
xor
jmp
popa
mov
jb
xchg
pop
das
aas
ret
pop
adc
leave
loopne,pn
or
inc
mov
push
lods
sub
daa
ret
pop
sbb
aad
add
pop
std
pusha
mov
aas
mov
fcmovne
shr
cli
pop
dec
sub
movsl
and
fs
sub
mov
sub
mov
cltd
int
add
or
mov
add
rol
mov
mov
sbb
xchg
test
aad
xor
sub
popa
mov
ds
dec
pop
popa
add
mov
push
xor
or
fildll
shrl
xor
nop
lods
lods
mov
repnz
fimull
cmp
sub
mov
es
mov
fbld
and
xor
fs
inc
icebp
cli
fiaddl
inc
mov
inc
jg
push
pop
push
into
mov
pop
or
jmp
mov
jle
or
inc
orb
in
test
int
xlat
cwtl
sub
test
jmp
inc
cmp
xor
cmp
jge
rolb
loopne
sub
aas
jmp
push
pusha
das
mov
pop
fbld
dec
dec
push
or
ljmp
stos
shll
xor
and
dec
inc
cs
movsl
repz
loopne
aad
jbe
nop
lret
mov
xor
jae
test
pop
dec
dec
popf
xchg
fucompp
xor
testb
shr
push
stc
fucomp
mov
adc
sub
pmullw
adc
xchg
movsl
ret
sbb
mov
sub
scas
cld
mov
jo
rolb
psrld
dec
out
mov
mov
xor
out
insl
add
adc
xor
outsb
sub
imul
xlat
pusha
sub
bnd
test
in
dec
mov
fstpl
fsubrl
cli
sahf
cmpsb
mov
sub
into
jecxz
dec
cmp
push
mov
loope
enter
outsb
in
data16
ret
mov
jno
inc
scas
aas
pop
lret
and
mov
jmp
mov
mov
lds
imul
lods
lret
popa
rcr
or
add
add
mov
fistpl
and
mov
push
cmp
shll
push
mov
jl
test
shrl
sti
push
movsb
ret
push
stc
or
mov
pusha
test
push
and
add
push
test
fidivl
inc
loopne
loope
mov
push
test
push
xor
mov
mov
jge
jne
movsb
addr16
push
addb
ficoms
lea
out
mov
sub
inc
adc
cmpsb
mov
ret
or
rorl
inc
out
xor
mov
ret
cmpsb
xor
and
dec
sbb
mull
fmul
insb
ds
iret
stos
adc
dec
fs
mov
rcl
jb
add
push
nop
test
jecxz
mov
pop
xlat
jmp
push
orb
fcmovnbe
dec
mov
es
leave
insb
inc
mov
mov
hlt
inc
sub
fcmovne
loop
shrb
loope
aad
ret
lds
out
inc
lds
cmp
inc
fsts
pop
outsl
mov
pusha
rcrl
ret
ds
xchg
xchg
scas
xor
iret
mov
andb
add
mov
mov
divb
inc
mov
jl
sbb
shrl
push
add
jge
out
test
daa
lds
sub
and
outsl
xchg
add
call
mov
jecxz
ljmp
or
mov
cs
ss
mov
and
push
mov
jns
fs
jecxz
and
clc
or
cmp
dec
jb
fwait
sbb
fucomi
scas
jle
mov
sarb
cmp
in
mov
in
sbb
push
mov
stos
movsb
testl
mov
nop
stos
lock
test
lds
arpl
adc
negl
sub
fistpll
mov
fisubl
rcr
sti
pop
daa
mov
inc
mov
cmp
mov
cmpl
jb,pt
push
pop
inc
xor
jno
frstor
and
iret
push
sbb
cmp
fstpl
xor
xchg
iret
xor
daa
xor
push
push
addr16
add
mov
daa
or
mov
fists
cltd
shl
mov
cmp
pop
cmp
mov
aaa
test
xchg
pusha
out
jecxz
insl
leave
test
je
and
imul
rol
mov
jne
cmc
dec
xor
mov
scas
or
mov
aam
inc
mov
sub
sub
ret
clc
sub
add
or
filds
out
mov
sub
pop
dec
lods
jo
sub
fiaddl
mov
shl
test
adc
mov
cwtl
aaa
jp
leave
xchg
xor
stos
add
mov
andb
nop
mov
aaa
ret
std
mov
xor
xchg
mov
scas
adc
lods
cwtl
dec
jge
movsb
xchg
leave
lret
inc
xrelease
ds
loopnew
addb
lret
movsb
mov
imul
into
fwait
in
fs
sbb
hlt
xchg
mov
mov
sbb
leave
add
sub
shlb
das
push
sub
cltd
pop
mov
aad
popa
push
push
pop
sub
cmpsb
mov
cmpsl
shlb
iret
lret
sub
mov
dec
shrl
jecxz
pop
dec
jb
jge
inc
bound
pop
sar
jg
cli
mov
sub
fmull
jne
mov
cmpsb
in
fsubl
cmpsl
out
std
test
hlt
mov
subb
gs
cmp
daa
fstpl
fisubrl
cmp
cmp
sub
test
leave
push
and
xchg
sub
pop
xchg
jle
mov
fisubs
inc
fisttpl
ljmp
jne
mov
clc
add
mov
jae
imul
ret
popa
or
mov
mov
push
frstor
fcmovnb
ret
sub
sbb
repnz
xor
dec
mov
nop
in
mov
xor
jmp
mov
lret
sbb
ds
mov
inc
aam
cmp
lds
rcll
iret
mov
fyl2xp1
and
cmp
mov
or
pop
subl
dec
addr16
lock
lcall
mov
adc
aaa
cwtl
mov
sub
dec
lods
xor
xchg
jns
inc
cmp
testb
jne
mov
call
pop
and
xor
frstor
jmp
in
data16
roll
cmpsl
mov
mov
fld
stos
cltd
mov
jb
xchg
sbb
out
aas
mov
imul
dec
ds
adc
pop
mov
pusha
sbb
or
movsl
orb
mov
fsubrl
fdivrl
cltd
in
movsl
jecxz
dec
data16
mov
cmpsb
add
pop
rcr
xchg
dec
test
loop
lahf
xor
inc
sub
inc
mov
iret
shll
pusha
cmpsb
ds
stos
fidivrl
dec
xor
faddl
push
mov
mov
imul
sub
gs
ret
add
imul
add
and
data16
loope
std
xor
xor
jl
ret
pop
lret
xchg
xchg
dec
movntps
xor
mov
test
test
mov
lods
test
repnz
lods
mov
jecxz
dec
mov
mov
xchg
pushf
mov
lret
repz
les
push
pop
xor
mov
inc
rcll
lcall
incb
data16
gs
mov
and
push
subb
xor
scas
sub
stos
mov
clc
fucom
sub
fstps
jno
sbb
inc
std
adcl
in
mov
lds
fnstsw
rcrl
xor
push
je
xor
dec
dec
ret
mov
jp
enter
xchg
jmp
mov
mov
shlb
stos
leave
aam
push
movsl
push
ret
mov
jmp
mov
ret
icebp
push
test
lods
scas
negw
cwtl
movsl
jbe
push
xchg
inc
ret
or
sub
popf
addr16
mov
sub
es
ds
outsb
xor
cwtl
mov
lret
jg
fadds
pop
iret
xor
mov
and
outsl
sbbw
mov
mov
rorb
into
stos
lret
mov
jo
cmp
mov
cmpb
mov
xchg
ret
mov
xor
ss
iret
push
negl
jno
dec
cmp
inc
xlat
roll
mov
lds
xchg
push
jg
scas
mov
mov
jl
int3
jge
sub
ds
mov
inc
sub
enter
notb
xchg
test
sbb
sub
ret
sbb
sub
mov
sbb
mov
shlb
cmpsl
shrl
lcall
mov
adc
cmp
add
pusha
lcall
loope
lret
dec
mov
pusha
mov
mov
push
jp
add
imul
xor
pop
mov
fwait
xor
iret
cwtl
ss
inc
dec
iret
pusha
cmp
mov
int3
inc
dec
mov
cmpsl
ret
push
fld
test
xchg
push
lahf
in
mov
ds
test
mov
pop
cmp
jg
ss
push
push
xchg
inc
shrl
pop
sub
pop
sub
inc
rcr
iret
pop
mov
add
fistps
sub
ret
in
scas
mov
jecxz
mov
lds
or
pusha
inc
movsl
scas
or
mov
push
movsb
or
das
fstps
je
adc
inc
pop
lret
fwait
mov
adc
lret
jnp
mov
mov
cmp
adc
xor
add
inc
fidivrl
and
out
fwait
iret
xchg
inc
mov
ret
add
scas
lods
idivb
scas
aaa
lretw
fsubrs
test
mull
xchg
mov
cmp
ds
or
jmp
mov
ffreep
xchg
push
add
loope
js
mov
sub
dec
jecxz
adc
insl
mov
fs
in
xor
xchg
xchg
es
or
stos
mov
and
fsub
daa
idivb
inc
aad
pop
popa
xor
imul
insl
andb
aas
inc
cmp
pop
mov
mov
stos
adc
loopne
mov
inc
fldt
daa
stos
mov
jno
sub
dec
out
xor
fmull
daa
jecxz
adc
sub
out
enter
inc
shlb
pop
mov
adc
xor
fiaddl
popa
inc
mov
xor
push
into
sub
mov
pushf
test
and
les
xor
mov
sbb
xor
fcompl
jmp
mov
rcr
jle
mov
mov
mov
xchg
xor
jl
pop
cwtl
lods
ret
loop
xchg
mov
add
xor
daa
shl
xlat
ret
cmpb
sub
les
das
cmp
mov
pop
mov
iret
inc
jge
notl
mov
lods
lahf
cmpb
and
jecxz
sub
insb
rol
aad
inc
push
sbb
shlb
mov
cltd
or
lret
inc
push
clc
scas
test
mov
sub
mov
cmp
pop
pop
bound
addl
dec
fistpll
scas
sbb
pop
push
adc
mov
test
or
pop
mov
popa
movl
cmp
push
dec
jb
xor
shrb
cwtl
adc
cmpsl
mov
call
mov
dec
xchg
out
cmp
add
sub
mov
fs
xchg
xchg
push
das
and
mov
loop
mov
sarb
fistl
mov
xor
jmp
loope
mov
sbb
ja,pn
popa
xchg
scas
stos
ljmp
outsl
popa
push
lretw
mov
aad
inc
push
xchg
sahf
mov
jecxz
outsb
pop
stc
roll
xor
push
sbb
and
nop
xchg
aam
jmp
xor
shlb
fs
fsubrl
mov
inc
mov
out
gs
and
and
outsl
imul
icebp
pop
scas
inc
sub
add
fmuls
cmpsl
mov
shl
mov
push
xchg
iret
mov
fldenv
cmpsb
adc
int3
es
data16
mov
add
sbbl
movsb
cld
or
movsb
jb
nop
push
sbb
test
mov
cmpsb
stos
test
cmpsl
pop
xchg
out
add
jecxz
mov
idivb
xchg
push
xor
jecxz
jb
outsl
cmp
jmp
iret
pushf
sarb
xchg
movsl
ret
cld
jge
cmpl
add
mov
xorb
jg
cs
iret
xchg
pop
pushaw
fiaddl
mov
push
mov
cmp
popa
outsl
fildl
aad
mov
sub
inc
sub
mov
mov
xchg
mov
mov
xor
mov
out
cmpsl
hlt
mov
outsb
loope
and
cmpsl
inc
shll
lret
rcr
or
xor
push
mov
and
outsb
fs
roll
pop
lods
mov
jbe
mov
xchg
insl
loop
cmp
lahf
sbb
mov
inc
fdivr
mov
xor
cmp
jne
cmpsl
cmp
sub
fwait
sub
lds
add
inc
ret
mov
xchg
shlb
cmpsb
xchg
in
fs
aaa
push
xor
ljmp
addr16
xlat
fldt
outsl
popa
xor
das
clc
adc
cmp
mov
mov
popa
cmp
pop
cmp
cmp
xchg
scas
ret
iret
lock
outsl
mov
out
mov
inc
sahf
mov
mov
ja
sub
loope
orb
sub
xchg
mov
jae
lods
sbb
les
adc
jl
lods
xor
sub
mov
pop
push
or
cmpsl
shll
loopne
or
xchg
in
jns
es
mov
repnz
or
mov
shll
adc
mov
sub
cmp
test
loopne
pop
imul
daa
xlat
fisubrs
jmp
push
stos
mov
mov
std
jb
cmp
or
test
sysexit
push
jecxz
mov
push
aaa
cmpsb
mov
lahf
in
mov
int
mov
insb
repz
sbb
mov
jae
or
fwait
pop
push
jmp
add
xor
pop
leave
jnp
iret
push
mov
mov
gs
mov
stos
frstor
sub
xchg
test
in
or
popa
lret
jne
sub
outsl
ss
mov
outsb
fldcw
sub
push
cmp
mov
xor
cmpsl
idivb
scas
cmpsb
push
mov
lret
xor
test
insl
and
and
aaa
cmp
mov
xchg
pop
lcall
mov
cltd
pop
loop
push
es
cmpsl
add
sbb
mov
cmpsl
mov
shrb
cmp
pop
cmpsb
cmpsl
sub
sarl
sub
lret
testl
test
das
lods
sahf
cmp
adc
cmp
pusha
out
dec
mov
cmp
push
ljmp
addb
mov
xchg
out
pop
inc
add
stos
cmp
mov
scas
xlat
xchg
sub
add
scas
mov
imul
iret
xchg
mov
jae
rorb
rcrl
fmul
inc
movsl
mov
imul
ret
dec
xor
iret
or
mov
repz
xor
inc
insb
cmp
jg
mov
fldcw
punpcklwd
insl
xor
or
cmp
mov
cmp
aad
xlat
mov
mov
cmpsl
rol
mov
xchg
and
cmp
adc
jno
sub
lods
pop
jne
and
adc
into
mov
pop
negl
test
or
pop
add
fimuls
fstpl
imul
jg
lods
movsb
mov
out
xchg
sub
cmp
test
dec
stos
sub
loope
les
dec
sub
lret
xchg
mov
hlt
cmpsl
leave
adc
roll
iret
aaa
rcrl
cld
adc
mov
mov
in
movsb
pop
movsb
mov
push
and
pop
xchg
int3
sbb
imul
inc
inc
inc
cmp
sub
shll
mov
mov
and
aad
iret
mov
mov
inc
ffreep
inc
dec
mov
int3
mov
xchg
pop
add
mov
inc
leave
inc
out
scas
jb
jns
aas
xchg
xchg
icebp
mov
add
mov
test
mov
test
loope
jle
aas
mov
daa
lds
jmp
jge
addr16
mov
popa
mov
ss
mov
mov
ffree
mov
mov
xlat
xor
inc
mov
mov
ret
xchg
aaa
push
cmp
lret
and
stos
outsl
das
jmp
in
sub
mov
sbbb
dec
jno
sbb
shr
aaa
mov
sbb
mov
mov
repnz
test
mov
mov
outsl
xor
inc
pop
cld
dec
popa
jmp
shlb
leave
cmpsl
fnstsw
mov
push
push
sub
xor
inc
std
jb
mov
popa
jno
insl
test
cmp
imul
dec
mov
add
and
mov
cwtl
cltd
xor
add
mov
inc
stos
imull
es
mov
mov
mov
add
outsl
and
mov
fstpl
push
daa
lods
dec
sbb
cmp
imul
xchg
int
add
stos
daa
lods
xor
and
jo
xchg
dec
int3
call
das
movsb
cli
incl
lret
dec
stos
daa
call
jmp
and
das
cmpb
or
jmp
xchg
xor
loope
int
sub
test
push
xor
nop
ret
mov
loope
repz
push
xchg
push
sbb
scas
loop
in
pop
mov
dec
std
xor
fimuls
loope
iret
mov
fxch
sub
jno
sbb
inc
flds
xorb
inc
sub
leave
sub
inc
mov
ss
mov
shrb
mov
jae
in
aaa
call
repz
adc
or
mov
mov
xchg
fwait
inc
sub
out
xor
les
mov
xor
mov
and
dec
cmp
inc
stos
inc
ds
stc
mov
cmp
test
dec
mov
pop
add
ds
insl
fistpl
mov
mov
fcmovnb
inc
xlat
cmpsw
aaa
cmpsb
cmpsb
shrl
mov
xor
in
ret
xor
mov
inc
mov
icebp
mov
test
jmp
fsubrl
cmp
sti
and
mov
inc
push
xchg
shlb
fsub
mov
inc
cmp
mov
inc
int
xchg
ljmp
fwait
or
pop
test
in
cmpsl
bound
mov
cli
in
mov
push
addr16
insb
scas
sbb
cmpsl
leave
xorb
xchg
fwait
lret
mov
mov
lret
cmpsl
movl
jecxz
sub
addr16
inc
xlat
mov
sub
ds
lods
mov
bound
mov
cmpsl
int
shl
push
sub
rcll
mov
inc
mov
fldenv
lret
mov
jns
lods
cmpsb
xchg
pop
mov
xchg
in
scas
test
inc
pushf
xchg
mov
das
data16
mov
inc
fnclex
cmp
loope
dec
and
gs
fsubrl
adc
mov
inc
cli
push
icebp
dec
inc
shll
out
mov
stos
mov
addr16
sub
aaa
daa
fbstp
in
mov
mov
data16
pop
add
pushf
mov
dec
icebp
das
mov
jle
xor
inc
inc
fld
test
push
add
jno
mov
jge
fstps
sahf
jnp
inc
cmp
rcrl
in
mov
fldt
mov
lret
or
xor
aad
dec
stos
sbb
out
inc
mov
push
daa
lods
mov
pop
rolb
test
lods
jae
hlt
outsb
mov
shll
in
movsb
pcmpgtw
and
iret
sbb
cmp
xchg
xchg
insb
or
mov
dec
sbb
pusha
and
xchg
fisubl
dec
aas
ret
xchg
enter
mov
ret
dec
cwtl
jge
in
cmc
stos
adcb
aas
rep
js
mov
ss
or
cmpsl
movsl
mov
std
scas
sti
dec
cli
mov
cmp
xor
and
nop
jns
outsb
and
and
push
dec
push
jbe
iret
idivb
fwait
sub
dec
test
mov
mov
jb
xor
aaa
cmp
push
orb
inc
mov
cmp
dec
push
or
loope
fstpt
push
push
pop
dec
data16
or
xor
lds
add
xchg
rcll
stos
lods
sbb
sub
adcb
jecxz
xor
sbb
bound
lock
sbbb
dec
movsb
mov
sbb
mov
aaa
jecxz
arpl
sub
pop
popa
sub
lods
rcl
pusha
movsl
leave
in
int3
pop
sub
jecxz
sub
mov
out
loop
addr16
sti
scas
test
pop
inc
jp
imul
jecxz
jns
in
dec
aas
sbb
mov
out
loope
mov
mov
mov
mov
mov
cmp
sbb
jecxz
mov
mov
xchg
nop
das
dec
das
jmp
mov
fldl
mov
inc
cmp
into
mov
sub
iret
stc
inc
xor
xchg
shlb
xchg
add
xor
mov
stos
out
xor
push
jecxz
mov
pop
jno
je
cld
inc
xor
in
xor
sbb
into
sub
jno
inc
fidivrl
stc
repz
outsb
inc
or
das
inc
mov
cmpb
fwait
inc
dec
mov
pop
pop
push
es
iret
mov
bound
stos
mov
rorb
xchg
mov
xchg
mov
xchg
and
xchg
mov
jg
adc
ss
data16
add
dec
inc
mov
cli
xchg
daa
and
test
and
mov
mov
mov
out
shll
imul
adc
jmp
lods
inc
mov
out
mov
testl
movsb
popf
sub
and
out
mov
in
fnstcw
pop
dec
adc
mov
mov
imul
lahf
adcb
push
es
xor
dec
jae
lret
aad
add
dec
test
mov
imul
addr16
icebp
add
cmp
jp
lret
scas
inc
cld
mov
sarb
lods
popa
push
jg
out
lcall
orb
cmp
pusha
lahf
or
in
mov
jecxz
lret
cmp
mov
mov
rcll
push
pop
stos
mov
fnstenv
adc
mov
add
popa
sub
lds
push
das
pop
leave
and
mov
sub
or
ret
aad
stos
pop
test
addb
rol
stos
adc
cld
lods
mov
add
sahf
cmp
cli
scas
std
adc
or
push
sub
sub
aaa
sub
in
cmpsl
mov
cmc
or
movsl
repz
call
cmp
jecxz
sub
loop
lods
lods
jl
in
mov
int3
frstor
xchg
stos
ret
insl
xor
mov
inc
je
xchg
shlb
adc
movsl
add
pop
das
ret
lret
lds
es
lahf
out
pop
lods
test
xor
fildl
mov
jnp
jne
mov
ljmp
fildl
sub
fdivr
mov
xor
stos
shll
mov
pop
and
sub
xchg
out
jecxz
fdivrl
mov
jbe
jo
mov
fistpl
mov
es
in
inc
aad
dec
adcl
mov
popa
mov
cmp
movsl
cld
and
pushf
fildll
cmp
xlat
mov
xchg
adc
push
jle
gs
mov
loope
cmpsl
test
cli
or
aas
dec
pop
push
push
lods
scas
mov
inc
xchg
jns
rcll
cmp
in
ss
enter
and
into
push
ds
lock
imul
mov
push
mov
jg
inc
pop
jmp
add
ret
insb
mov
xchg
mov
add
mov
iret
push
inc
ret
rorb
andb
cld
out
es
sbb
sar
or
into
mov
mov
or
mov
inc
cmp
movsl
xor
inc
in
je
push
movsl
movsl
roll
xchg
negl
cmp
frstor
add
lret
cli
scas
mov
popa
xor
jmp
sbb
mov
aas
mov
out
cltd
movsl
cli
lret
fldt
and
int
repnz
add
jle
aaa
mov
cltd
bound
sbb
movsb
aas
mov
jae
imul
pop
add
pop
sub
push
mov
fldl
mov
jmp
ret
fldenv
rcrl
out
jmp
add
daa
movsl
xor
js
mov
aaa
clc
xor
mov
mov
lods
outsl
shll
fsubs
adc
out
adc
inc
cmpsl
mov
pop
push
lret
sti
cmpl
fwait
ljmp
adc
es
mov
jge
mov
lret
mov
lret
out
popa
in
push
sub
sub
lds
loop
fs
ret
dec
sbb
iret
add
pop
add
lods
adcb
mov
fsubl
movsb
jmp
and
out
sbb
inc
daa
mov
std
pop
faddl
xchg
push
mov
inc
xor
jne
sub
ret
int3
adc
push
mov
xchg
sbb
enter
push
xor
sub
mov
shlb
test
call
ret
rcrb
outsl
adc
xor
icebp
in
pusha
mov
aad
fidivrs
mov
ror
loop
cmpsl
ss
xchg
add
mov
dec
into
cmp
lock
lods
stos
stc
iret
shlb
xor
cmpsl
mov
jnp
int3
mov
fmull
lock
popa
lahf
sub
ds
jecxz
fs
addr16
repnz
fwait
mov
ret
xchg
daa
fisubrl
leave
push
mov
roll
dec
inc
xor
ficoml
loope
cwtl
pop
andb
cmp
mov
rorl
outsl
insb
mov
cmp
in
orb
cwtl
sbb
inc
pop
fidivl
mov
inc
test
jg
fs
jno
add
push
ret
shlb
and
std
jo
fcomp
loope
jmp
fisubrl
stos
imul
fnstsw
out
aas
or
loop
mov
xorb
aam
add
xchg
jnp
jecxz
and
mov
mov
fwait
sbb
pop
mov
cmpsb
pop
ja
test
mov
fbld
aaa
shrl
scas
ret
mov
stos
adc
bound
iret
xor
out
mov
gs
cmp
shl
jmp
fwait
xchg
sar
mov
sub
ret
jb
and
fidivl
fdiv
mov
mov
sbb
and
xchg
inc
aaa
cmc
pop
push
adc
mov
push
push
insl
mov
add
push
mov
iret
nop
cmp
xor
aas
sub
xlat
inc
into
sarb
mov
stos
fisubrs
cmp
stc
ret
fcompl
lret
scas
icebp
popa
fs
or
jmp
ret
inc
mov
lret
xlat
test
hlt
pop
fidivrl
xchg
shlb
mov
sub
icebp
call
loope
clc
scas
lods
or
shrb
roll
inc
cmc
std
mov
scas
mov
add
push
scas
scas
data16
lret
adc
ss
cmp
mov
and
sub
push
out
dec
xor
sbb
fnstenv
cmpsl
jle
ret
fmuls
sbb
ret
mov
pop
push
test
inc
jecxz
dec
stos
and
in
dec
ds
shrl
mov
iret
or
and
and
mov
push
jnp
shll
inc
mov
adc
pop
xor
data16
int
into
xor
mov
jl
xor
and
addr16
xchg
insb
add
fnstcw
rcll
bound
mov
pop
iret
pop
inc
mov
sbb
jo
xor
sbbb
xlat
or
sahf
inc
jne
stos
sub
popa
mov
pusha
out
pop
lods
sbb
iret
ret
inc
and
sub
sarl
inc
aad
mov
fwait
idivb
pop
sbb
mov
stos
dec
push
rol
ret
inc
filds
push
mov
mov
ja,pn
insl
or
adc
mov
insb
add
fwait
xlat
push
xorb
add
xor
repz
ret
ss
sub
cmp
xlat
sub
fdivrl
lcall
lahf
or
or
aas
mov
pop
fisttps
mov
clc
lahf
out
mov
popa
jo
cmp
jo
mov
xor
imul
mov
hlt
bound
push
mov
and
loopne
orb
popw
aaa
das
sbb
mov
test
mov
mov
cmp
inc
nop
sub
rol
fldt
sbb
pop
pop
rcl
fisubrs
enterw
fcomps
mov
fildll
outsl
fs
addb
pop
jecxz
adc
daa
repnz
and
stos
add
mov
inc
ja
xchg
loope
cs
addr16
mov
push
loopne
loop
in
loopne
shll
scas
pop
xlat
rcrl
inc
sub
aas
outsl
lret
xorb
or
lahf
shl
mov
stos
xor
fidivl
shl
sub
jmp
cmp
in
lret
rolb
out
mov
out
fs
cmp
push
rol
cmp
cli
in
sub
inc
xlat
mov
inc
cs
xor
inc
push
xor
jle
xor
mov
insl
iret
mov
int
xorl
mov
sub
sti
test
insb
shl
fnsave
dec
mov
mov
loope
mov
movsl
mov
fbld
cld
cmpsl
push
sub
cmpsl
xor
xlat
cmp
pop
jnp
xchg
jne
ret
pop
mov
inc
test
adcb
scas
push
insb
ret
cmpsb
sahf
xor
bound
xor
push
iret
stos
inc
mov
mov
daa
cmpsl
jg
sub
jmp
stos
mov
push
mov
xor
xchg
lcall
inc
pop
lret
sarb
jo
into
mov
and
insb
fisubrs
mov
xlat
push
jmp
jne
mov
mov
add
movsb
mov
out
mov
ret
rcrl
add
pop
pop
xor
call
aas
or
es
xor
jno
fnsave
testb
scas
inc
es
lds
mov
sub
es
mov
push
mov
cmp
repnz
jmp
test
xchg
pop
les
add
in
nop
mov
mov
out
int
push
mov
movsb
loope
add
pop
leave
xor
lret
adc
mulb
ljmp
jp
inc
andl
push
jb
movsl
mov
inc
out
orb
dec
rcrl
movb
xor
repz
scas
stos
test
popa
or
mov
xabort
popa
jns
mov
repz
jp
jnp
inc
rcrl
mov
mov
add
sbb
mov
movsb
cmp
loopne
mov
adc
mov
add
movsb
jno
xor
mov
rorb
inc
lretw
xchg
or
and
mov
or
add
les
fdivrp
test
cmp
ja
dec
adc
xor
test
aam
xor
mov
orb
rolb
das
scas
cmp
push
mov
aas
addb
adc
xor
dec
or
ja
sub
stos
repz
mov
popa
mov
jle
mov
or
dec
sahf
lods
daa
rcrl
cmp
push
ret
xchg
sub
stos
or
das
or
ljmp
add
mov
adc
pop
jp
xchg
es
cmp
and
loop
and
mov
or
xor
mov
and
leave
adc
dec
popa
adc
mov
inc
xorl
mov
pop
pop
mov
mov
cmp
jne
push
mov
sarl
mov
cmp
xchg
fldl
sub
xor
mov
addr16
xor
es
cmp
dec
mov
addr16
mov
xchg
mov
fcomps
dec
mov
out
xchg
sub
mov
es
scas
mov
in
aaa
xor
xor
push
lret
inc
out
inc
cli
or
adc
aad
iret
ss
shl
aam
xor
mov
dec
mov
loop
cli
es
shlb
sahf
pushf
in
mov
xor
in
xor
fnstenv
mov
inc
inc
and
mov
lods
out
rcll
fcomi
daa
mov
pusha
mov
sahf
ja
fldcw
data16
ret
mov
addl
sbbb
cmp
mov
cmpb
mov
fs
sbb
and
pop
mov
mov
mov
mov
mov
fnstsw
ds
mov
iret
ret
insb
mov
jb
inc
mov
sub
std
pop
lods
mov
ljmp
aas
cmp
outsb
imul
fistpl
out
lds
data16
cmp
xor
inc
fdivrs
dec
mov
adc
pusha
popf
das
test
mov
cmpsl
out
arpl
sub
mov
add
addr16
mov
sub
xor
loop
adc
cmp
mov
add
jno
inc
push
sete
cmp
test
dec
and
cmpsb
inc
addl
int
call
aad
add
mov
pushf
cmp
push
mov
cmp
mov
fdivr
inc
mov
aad
addr16
sbb
cltd
lret
ret
sbb
insb
sub
fistpl
add
pop
insb
inc
jns
inc
mulb
in
mov
jle
pop
mov
aaa
xor
rcrb
mov
inc
cwtl
stos
xchg
adc
lods
pop
ss
aaa
ss
ret
subl
fstpt
mov
fdiv
adc
lods
test
stos
stos
loopne
sbb
push
cmp
stos
xchg
mov
xor
pusha
test
push
lods
das
xchg
fsubs
mov
xchg
mov
scas
mov
shll
mov
fs
aad
stos
test
add
iret
rol
mov
lods
mov
cmpsl
lret
inc
xchg
xchg
dec
sub
sbb
adcb
int3
sbb
inc
daa
mov
jb
mov
sub
xor
push
xchg
xor
into
sti
das
cwtl
or
xor
lods
mov
and
movsb
scas
and
loope
outsb
xchg
popf
and
insl
mov
clc
mov
cmp
sahf
mov
lret
sub
rclb
add
inc
inc
pop
push
test
out
repz
fwait
mov
loope
mov
test
icebp
in
insl
popa
test
pop
cmp
cli
scas
pusha
add
cmp
sub
popa
mov
scas
jecxz
mov
jne
mov
into
mov
movsl
scas
jnp
mov
inc
lahf
mov
call
mov
in
inc
mov
xor
data16
jmp
out
xchg
cmpsl
leave
je
xlat
and
and
xlat
pop
jp
sarl
mov
icebp
sbb
cli
scas
stos
mov
mov
in
mov
into
cwtl
aas
ret
mov
push
out
mov
aaa
inc
jb
arpl
xchg
xor
dec
fistl
adc
jno
aam
cmp
or
sub
add
xchg
inc
mov
lods
mov
iret
test
js
lods
mov
jmp
testb
jmp
dec
outsb
mov
loopne
mov
mov
fisttps
xchg
fs
das
push
dec
lret
out
cmpb
push
scas
cmp
dec
xchg
mov
push
pushf
add
ds
outsb
mov
mov
xor
aas
stos
mov
mov
aas
cltd
jns
test
popa
push
ja
sub
ret
in
ss
fs
xor
sar
push
mov
out
mov
in
sub
adc
iret
mov
fisubrs
ljmp
movsb
add
pusha
mov
test
and
cld
mov
lods
mov
inc
scas
ds
int
adc
cmp
insb
cmp
xchg
fwait
pop
push
pop
popa
pop
sub
mov
mov
xchg
cmp
mov
out
in
xchg
mov
les
mov
lods
imul
cltd
data16
sub
in
xchg
and
sub
loopne
or
and
adc
xor
add
movsl
flds
cs
fbld
push
adc
sub
andb
dec
dec
add
std
mov
add
cmp
js
mov
mov
cmc
adc
push
inc
cmp
mov
cmp
jecxz
dec
lods
scas
das
out
xor
outsb
outsl
push
inc
daa
fldcw
fiaddl
xlat
cwtl
aas
jp
in
or
dec
aam
jnp
out
mov
add
imul
inc
ss
repz
cmp
rolb
adc
sbb
fsubrl
xor
fldt
dec
aaa
push
popw
mov
pop
lret
loope
jp
in
dec
mov
cmp
rol
sub
mov
roll
sub
mov
in
scas
shrl
mov
cs
iret
and
fwait
enter
pop
cmpsl
leave
roll
add
jecxz
xchg
pop
fisttpll
add
add
dec
movsl
mov
ret
fsts
pop
aaa
in
mov
jo
lods
mov
test
mov
stos
lods
in
mov
sti
dec
int3
push
movsb
mov
popa
push
push
cli
xor
int
roll
lock
adc
cmpb
mov
scas
mov
fiadds
inc
add
xchg
push
mov
jecxz
fsubrl
loope
sti
ljmp
addr16
test
out
mov
mov
and
xchg
mov
inc
rcll
into
xchg
aas
mov
adc
or
cmpsl
sub
sub
addr16
repnz
push
fdiv
es
and
xchg
nop
xchg
mov
ljmp
or
lret
or
stos
and
dec
xchg
scas
sub
out
mov
push
stos
push
sub
push
inc
shrl
cwtl
push
incb
in
mov
jb
das
sub
xchg
add
inc
inc
dec
movsl
xor
rclb
xlat
fnstcw
mov
and
mov
sbb
cmc
cwtl
pop
subb
nop
mov
sub
and
sub
inc
mov
sahf
mov
push
jo
fidivl
add
popa
mov
iret
pop
and
loop
sbb
das
xor
mov
popa
pop
ss
bound
aaa
sbb
ficomps
xor
fs
outsb
xor
mov
rclb
test
jge
out
push
vpsrlw
pushf
lea
fcmovnb
scas
fdivl
mov
stos
lds
jge
test
rcr
loope
pop
lock
fstpl
mov
mov
jbe
jmp
push
xchg
inc
xlat
in
into
je
jns
ss
push
ds
inc
nop
and
mulb
jl
mov
sbb
sub
xchg
inc
dec
aaa
mov
fwait
scas
push
inc
mov
add
xchg
rorl
mov
cltd
xchg
cmpsl
lret
xor
scas
xor
mov
mov
sbb
mov
enter
fisttpl
mov
test
fnstsw
xor
repz
push
into
lret
sar
popa
pop
jmp
daa
cmpsb
aad
xchg
int
into
xor
andb
cmpsb
xor
or
mov
pop
jecxz
adc
movsb
repnz
jnp
movsl
jg
andb
int3
push
ss
insl
divl
mov
push
xor
mov
loopne
inc
ja
xor
fsubrs
in
es
sbb
cmp
cmp
jns
ja
pop
or
shrl
inc
sub
ljmp
inc
sti
and
aas
movq
sbb
lds
iret
es
mov
and
pusha
or
nop
popa
ja
dec
jno
inc
aas
ds
lret
pop
xlat
pop
fiadds
stos
lcall
sbb
shrl
lods
test
jecxz
xlat
sub
test
fistl
xchg
mov
sub
es
mov
pop
or
mov
fnstenv
inc
scas
adc
mov
ss
ret
lret
mov
xchg
mov
xor
js
pop
in
inc
mov
out
pusha
cwtl
cmp
test
xchg
aaa
inc
adc
je
ret
sub
add
push
or
inc
daa
ss
pop
push
aam
test
loopne
popa
sbb
mov
adc
sub
add
stc
xchg
push
sub
inc
data16
aam
mov
das
jno
push
into
aad
jecxz
fs
cmpsl
and
idivb
mov
mov
or
mov
cmpsb
add
aaa
mov
push
jg
lea
fs
cmp
fisubl
cmp
out
pop
outsl
out
scas
scas
cmp
jb
add
push
push
movsb
push
shlb
push
loope
ret
mov
mov
adc
icebp
inc
mov
andl
movsb
filds
inc
inc
scas
xchg
xchg
add
cmp
push
sub
push
jle
push
xor
mov
lds
int
mov
mov
sub
jae
inc
inc
mov
mov
divb
sbb
mov
pusha
push
cwtl
sbb
sti
and
cmp
pop
cltd
adc
sub
outsl
mov
ss
shll
add
in
lods
adc
mov
push
xchg
movsb
xchg
inc
data16
aaa
mov
das
lods
mov
mov
xchg
ret
cmp
outsl
sbb
and
fcmovnu
rcl
or
ret
sbb
aam
jns
fwait
stos
sbb
push
rcll
cmpsb
xchg
adc
inc
cld
pop
inc
pusha
or
hlt
pop
lret
test
or
and
sbbb
xchg
out
loope
hlt
add
mov
xorb
push
xor
popa
jl
sbb
aas
sbb
daa
ja
push
rolb
into
mov
sbb
cmpsl
mov
stos
cmp
mov
xchg
cmp
jle
jo
cmp
repz
int3
sub
jns
cmp
xor
data16
cs
pop
int
dec
int
loope
adc
cmp
xor
xchg
out
mov
scas
sarl
xor
nop
mov
fsubr
xor
mov
iret
into
loopne
mov
jmp
mov
out
sti
xor
push
adc
cmpsl
bnd
test
psadbw
jp
fxch
retw
mov
ret
sar
int3
clc
test
popf
push
jmp
lret
add
mov
mov
push
testb
mov
lret
xchg
mov
dec
cmp
scas
clc
push
sub
jnp
pop
and
stos
sbb
mov
xchg
inc
mov
sub
clc
lods
mov
mov
or
sub
scas
xlat
dec
pop
outsl
lock
mov
xchg
pushf
inc
pop
mov
push
test
loope
popf
cmp
add
insl
or
lds
mov
lods
mov
test
mov
mov
adc
lods
shlb
mov
cwtl
adcb
scas
cmp
ret
lret
dec
orl
imul
stos
mov
adc
sub
rcrl
shlb
and
ds
fld
lahf
popf
test
int
aas
pop
test
test
mov
bound
or
xchg
mov
mov
fs
sub
insb
add
cmpsl
ret
mov
loope
andb
inc
mov
push
add
sub
xor
push
ret
sub
pop
cld
mov
test
stc
and
rorl
mov
shrl
mov
xor
inc
lock
mov
xor
shrl
cs
out
dec
mov
aas
loope
xlat
mov
repz
or
lds
in
and
fstpt
cs
out
push
or
mov
sarb
pop
outsl
push
sub
and
mov
lods
cmp
jae
mov
scas
cmp
das
cmp
inc
das
sar
daa
loope
in
add
sets
xchg
mov
cmp
addr16
outsb
cmp
xor
mov
inc
sub
mov
addr16
mov
and
dec
ja
in
insb
ds
rclb
ds
mov
mov
fcoml
mov
cmp
aaa
jne
imul
fcomip
sbb
mov
test
mov
mov
pop
mov
jbe
xchg
mov
in
and
in
pop
push
inc
and
mov
stos
cmpsl
icebp
jb
cmpsb
test
xlat
sbb
daa
sti
iret
rcrl
test
fbstp
sub
push
inc
cmp
pusha
ja
mov
dec
xor
xchg
lods
je
inc
fcompl
mov
pop
sub
hlt
lret
call
lea
jbe
mov
daa
inc
pop
cmp
addb
repz
add
or
cli
sub
cmp
insl
sub
lods
mov
roll
stos
sbb
out
outsb
shlb
addr16
in
ret
mov
inc
into
test
loopew
mov
lret
cmpsb
lds
popa
test
das
jecxz
push
shl
jmp
cmp
sub
lahf
outsl
cmpsl
ljmp
or
setne
mov
rcl
out
cmp
xchg
jl
pop
out
and
cmpsb
mov
or
or
or
aaa
sub
repnz
lret
mov
int3
fstpl
ljmp
lret
adc
fistpll
mov
mov
ss
aad
ja
dec
fs
and
fdivrs
int3
cmp
xor
xchg
ja
and
jecxz
es
mov
push
inc
daa
out
flds
data16
movsl
movsb
mov
xor
xchg
mov
out
mov
out
bound
mov
cmp
das
mov
adc
clc
movsl
movsb
cmp
outsb
in
mov
into
mov
fmulp
xchg
fstpl
daa
mov
hlt
dec
pop
in
test
or
jmp
push
mov
xor
inc
stos
ret
ret
sub
shrb
mov
jnp
xor
mov
loopne
mov
dec
and
pop
xchg
inc
ljmp
fidivl
in
cmpsb
filds
scas
inc
xor
mov
popa
les
ljmp
xchg
movsl
das
test
subb
cmpsl
jns
loopne
jmp
test
xor
cmp
and
inc
ret
xor
jo
mov
or
cld
movsl
das
adc
popa
jb
cmp
ror
dec
and
mov
out
cmp
cmp
imul
xor
adc
ret
push
scas
outsb
inc
cmpsl
int
fucomip
and
lods
jmp
jae
inc
ret
push
pop
add
fcomps
xor
mov
and
pop
jnp
mov
out
cmp
dec
sbb
fwait
sub
pop
jg
daa
aam
test
jecxz
popa
fs
add
js
push
jae
aaa
push
mov
mov
mov
push
movsb
mov
mov
iret
aaa
adc
stos
jb
in
es
sub
jmp
loopne,pt
inc
lds
fs
loope
ja
mov
inc
stc
sub
imul
gs
mov
das
xor
sbb
mov
ss
out
mov
daa
inc
rcl
push
sbbb
jecxz
sbb
xchg
and
mov
sarb
inc
ss
pop
mov
movsl
jno
dec
push
stos
inc
mov
scas
fdivr
mov
mov
sbb
cmp
shlb
and
mov
iret
mov
fincstp
js
stos
jmp
sbb
mov
mov
loop
movsb
inc
sbb
mov
mov
pop
fisubl
addr16
jne
push
or
aaa
mov
sub
cmp
cmpsb
xor
iret
mov
iret
aad
subb
rcl
stos
or
mov
sub
scas
sub
pop
mov
gs
jle
lods
ja
shll
xchg
push
sbb
cmpsb
inc
or
lods
sub
shlb
xlat
lahf
xchg
jle
cs
mov
dec
pop
iret
pop
test
stos
adc
sub
fnstenv
push
xor
stos
cs
sahf
inc
clc
add
mov
test
out
ss
xchg
cmp
jnp
clc
js
xor
mov
jb
mov
stos
scas
pop
jge
mov
sub
sub
and
add
pop
aad
les
mov
pop
stos
mov
out
fdivs
fdivrl
fld
lock
not
inc
push
cmp
data16
dec
scas
mov
jecxz
push
jmp
pop
test
push
sub
mov
imul
aad
icebp
push
negl
jle
mov
adc
adc
dec
test
repz
in
je
cmpb
or
es
sbb
adc
mov
test
add
popf
rolb
cli
inc
sbb
push
dec
cltd
iret
sbb
cmp
das
test
ret
inc
sbb
imul
popl
xchg
mov
sbb
xor
in
shll
mov
scas
or
ret
cmpsl
xlat
jnp
nop
jg
cli
or
mov
loope
xchg
cmp
cmpsw
adcb
test
mov
sub
xor
lret
sahf
cmp
adc
cmp
popa
stos
addr16
aaa
sbb
test
xlat
lea
ret
repnz
and
push
cmp
aad
fdivp
rcrl
xchg
or
lds
iret
mov
lret
cwtl
test
push
add
dec
xchg
mov
aad
loopne
mov
and
out
and
adc
mov
in
outsb
sub
jnp
mov
daa
mov
xor
das
cld
mov
xlat
cmpb
ljmp
adc
ss
mov
mov
and
adc
scas
inc
or
mov
xchg
flds
xchg
pop
mov
mov
mov
and
call
clc
mov
adc
mov
popf
clc
aaa
inc
xchg
test
xor
inc
add
push
out
xor
and
dec
jle
jecxz
je
adc
insl
cmp
mov
add
push
lods
fstp
mov
orl
ret
jo
iret
cs
mov
add
stos
sarl
mov
inc
leave
or
test
into
mull
in
fsubs
and
stc
add
adc
je
pushf
or
rcll
or
in
mov
mov
inc
xchg
jbe
mov
std
cmp
cmp
mov
jecxz
fidivrl
inc
loopne
lods
add
mov
mov
shlb
sarl
push
jne
ret
fistpl
jmp
test
jb
out
push
rolb
test
add
gs
mov
enter
sti
lret
scas
ret
aaa
adc
inc
repnz
xchg
lea
scas
ljmp
test
sbb
mov
jae
xchg
out
and
push
outsb
cmpps
cwtl
sti
jnp
test
mov
rolb
ljmp
aam
adc
xor
and
dec
aaa
in
mov
sbb
push
push
pop
test
dec
addl
loop
mov
fs
std
mov
daa
sbb
scas
test
xor
xchg
jns
mov
mov
jl
mov
inc
das
sub
pusha
fists
jae
or
jno
ret
inc
xor
js
xor
mov
mov
mov
xlat
jp
testb
lret
test
loope
loop
or
push
in
hlt
test
xchg
stos
jle
mov
hlt
imul
inc
dec
pop
jnp
data16
mov
mov
mov
lods
call
leave
test
jmp
xchg
in
outsl
jnp
movsb
ret
ret
adc
push
movsl
ss
fisttpl
rolb
popa
roll
das
mov
cmp
loope
xor
int3
xchg
push
bound
mov
push
pop
shll
iret
mov
sub
mov
ljmp
and
inc
ret
xchg
inc
mov
and
dec
cmpsl
stos
lret
jno
jo
push
les
cmp
cmpsl
movsl
ret
out
jl
ja
mov
imulb
gs
or
aas
jp
xchg
lret
bound
add
or
mov
out
add
jns
ret
out
xchg
test
ljmp
mov
in
cmp
jne
sbb
cmp
adc
xchg
mov
or
dec
push
and
xchg
mov
sub
stc
lock
dec
jno
loope
push
mov
mov
sub
mov
pop
push
pusha
or
das
and
xchg
adc
in
movsl
mov
jno
das
mov
insl
lods
inc
mov
repnz
sub
movsb
xlat
outsl
int3
xor
jno
mov
iret
shrl
das
ds
push
push
lock
inc
in
ret
outsl
shlb
pop
stos
xor
dec
sbb
aas
in
test
inc
loope
inc
xor
mov
stos
push
imull
scas
adc
lcall
adc
push
mov
les
dec
mov
sbb
shll
push
cmp
sub
adc
sub
sub
adc
sub
push
loope
es
cltd
aad
sbb
xchg
lret
pop
mov
add
test
addr16
testl
inc
xchg
inc
mov
xchg
add
das
dec
sub
lods
mov
sahf
loope
mov
xor
fstl
mov
fwait
jg
xchg
je
sbbb
cmpsb
mov
icebp
fsubr
daa
mov
xor
sbb
je
xor
mov
fnstsw
cmpsb
out
rorl
mov
and
leave
iret
sub
xor
movsl
sub
mov
push
dec
call
mov
lds
mov
gs
aaa
jmp
ret
int3
inc
mov
pusha
or
outsb
test
je
fcomi
mov
mov
mov
sbb
outsb
inc
loope
jecxz
fwait
jbe
adc
cwtl
aaa
ret
repz
mov
adc
cwtl
popf
out
inc
jnp
mov
test
pop
sbbb
daa
rcll
cmp
cmp
jmp
cmp
lods
jg
mov
mov
ret
and
daa
adc
popa
xor
jo
out
dec
xor
mov
and
dec
inc
pop
imul
call
incb
cmp
mov
loope
add
fdiv
stos
movb
push
inc
or
mov
pusha
shl
call
xor
sbb
xchg
or
inc
or
mov
xchg
mov
stos
inc
ja
call
ror
shll
loopne
mov
sub
sbb
mov
dec
outsl
mov
push
daa
xor
mov
in
fisubs
sbb
mov
outsb
mov
gs
inc
inc
xor
pop
add
inc
xor
lds
add
sbb
test
mov
aad
pop
arpl
mov
mov
roll
sbb
in
add
push
daa
test
mov
push
push
cmpsl
pusha
sub
jp
dec
sbb
and
mov
cmp
ret
jo
loopne
ja
cmp
in
push
cmp
mov
ret
sbb
sub
mov
test
loopne
das
push
xor
mov
mov
leave
ror
ss
inc
mov
add
inc
or
xchg
cmpsl
inc
lds
imul
add
cmp
sub
outsb
scas
mov
xlat
stos
cmpsl
mov
aam
fwait
mov
dec
test
fiaddl
mov
cmp
xchg
cmp
fadd
pop
rep
mov
mov
fiaddl
stos
mov
pop
rol
sbb
mov
xor
pextrw
inc
jecxz
outsl
mov
mov
dec
xor
movl
jb
outsl
dec
iret
in
mov
pop
and
xchg
mov
test
inc
cmp
sub
outsl
fcompp
or
test
orb
dec
out
jns
ret
int
cmpsl
sub
ljmp
dec
or
scas
data16
sub
add
dec
test
add
popf
leave
outsl
mov
mov
xchg
xchg
js
mov
inc
inc
lret
lahf
fs
leave
push
jg
xor
mov
scas
and
inc
pop
popa
sub
data16
shll
xchg
jne
fistl
ret
cwtl
jno
mov
jg
or
es
imul
xchg
mov
sub
mov
push
xor
loope
or
stc
xor
scas
sub
push
sub
sub
scas
in
mov
fldenv
scas
sub
ficoml
movsb
int
pop
pusha
daa
pop
dec
lods
mov
inc
lret
mov
jae
xlat
in
mov
xor
inc
push
inc
adc
das
movsb
out
mov
adc
mov
xchg
rcrb
mov
sbb
xor
cmpsb
pop
add
inc
jle
inc
sbb
push
es
dec
adc
in
movsb
test
mov
and
sahf
inc
pop
ljmp
cmpsl
lods
xchg
hlt
test
shll
and
cmpsb
sbb
xchg
inc
mov
mov
pusha
stos
pop
cmpsb
out
stos
cmpsb
inc
dec
dec
jp
sub
stos
mov
mov
lds
jne
cli
fs
mov
sbb
push
jns
inc
jno
lock
fildl
add
inc
xchg
mov
inc
lods
cmpsl
scas
mov
xchg
fcomip
push
stos
sub
or
ds
push
xchg
mov
mov
pop
ret
loope
outsb
xor
mov
ljmp
cmp
stos
inc
iret
push
in
mov
lcall
pop
imul
mov
fldt
fisubrs
adc
arpl
mov
out
mov
add
and
mov
inc
xor
jns
cmpsl
shrl
in
mov
mov
filds
dec
push
mov
dec
es
or
xor
mov
fmuls
clc
pop
test
cmp
sti
mov
pop
jmp
pop
cmpsb
call
inc
shl
clc
jecxz
nop
mov
mov
mov
andb
pusha
dec
out
fnsave
imul
mov
cwtl
mov
cltd
xor
daa
ret
clc
cmp
int3
into
mov
mov
pop
xchg
dec
out
lods
jnp
add
outsl
fwait
cwtl
inc
jb
cmp
std
add
mov
cmpsl
aas
stos
iret
pop
xor
rclb
cmp
adc
std
sbb
int
cmp
call
mov
in
xor
loopne
mov
push
dec
pop
outsl
setnp
into
loope
jns
test
cmpsl
ret
hlt
or
mov
std
divl
in
sub
shll
push
push
movsl
mov
movsb
cs
imulb
data16
mov
fadd
scas
adc
movsl
pop
enter
mov
sub
jecxz
shll
out
mov
or
mov
mov
cmp
int
mov
mov
lcall
scas
sbb
cli
jae
mov
in
inc
fmull
push
jl
cli
fwait
mov
xor
jg
mov
out
mov
in
and
mov
test
mov
sbb
xchg
fstp
imul
into
fwait
mov
adc
sbb
add
mov
push
fs
inc
mov
push
scas
push
xor
jbe
outsl
mov
addb
or
jmp
into
pusha
dec
adc
bound
sbb
scas
lds
mov
mov
lret
movsb
stos
mov
sbb
xchg
loopne
idivl
test
pop
and
mov
stos
mov
fisttps
out
xchg
sub
cmpsl
inc
mov
imulb
pop
arpl
pmaxsw
aas
sub
sub
lds
jae
test
cmp
out
ja
sbb
xchg
fcoml
data16
mov
sbb
mov
repnz
out
js
andb
scas
dec
xchg
test
sub
pop
push
movsb
pop
gs
adc
cli
addr16
insb
sub
sar
pop
xchg
insb
mov
gs
mov
dec
cmpsb
nop
cwtl
pusha
sbb
dec
lock
mov
shlb
xor
sbb
mov
lea
in
mov
xor
adc
pop
sbb
stos
in
cmp
and
lods
mov
scas
dec
movsb
lret
iret
xchg
inc
rdmsr
and
adc
ret
in
stos
out
rdpmc
movsl
push
sub
pop
push
dec
xchg
push
das
pop
in
and
out
into
dec
mov
daa
mov
mov
cmpsl
push
data16
cmp
cmpsl
adc
sbb
addb
mov
loopne
out
lds
cmpsl
stos
std
in
cwtl
lods
push
xor
jne
jmp
mov
add
popa
xchg
dec
and
pusha
jecxz
xorb
fidivl
scas
or
outsl
sbb
mov
sub
pop
xor
movsb
add
cmpb
sub
in
ror
inc
mov
cwtl
fimuls
and
dec
je
xor
and
mov
ret
aad
stc
push
mov
push
and
add
sub
jecxz
in
fstpt
rolb
or
addr16
popa
adc
mov
roll
mov
sub
mov
iret
loop
ret
or
sub
lods
scas
ret
and
jb
frstor
shlb
mov
mov
push
mov
and
push
aam
popl
decb
push
shr
sub
inc
sbb
insl
test
out
cwtl
mov
mov
fldenv
ja
pop
jnp
das
xor
loope
mov
sub
adc
nop
clc
out
adc
and
fcom
jl
mov
popa
ret
adc
nop
pop
pop
jbe
pop
pop
xchg
sub
out
pushf
cmp
xchg
aaa
dec
mov
cmpsb
popf
test
daa
aad
cli
lods
adc
clc
lea
add
fidivrl
pop
lock
into
xor
in
loop
or
cmp
clc
sahf
int3
popa
cmp
lods
push
mov
rolb
lret
sbb
cmp
into
movsb
mov
scas
dec
push
mov
mov
arpl
inc
test
sarb
outsl
cmp
inc
cs
cs
movsl
std
mov
push
mov
mov
xchg
inc
xor
addr16
xchg
push
mov
push
stos
test
cmp
pop
je
sub
shlb
stos
fs
fwait
cltd
fstpl
and
sbb
xchg
cld
test
popa
fmull
inc
jo
or
xchg
ljmp
pusha
xor
jle
or
adc
mov
pop
push
and
xorb
rcll
repnz
into
xchg
sub
mov
cmpsl
ds
notl
push
cmp
fs
ja
scas
mov
imulb
jnp
and
test
adc
inc
gs
movsl
and
jbe
lods
test
fs
mov
cmp
lods
xchg
mov
cmpsl
dec
popa
mov
sbb
xor
dec
fdiv
mov
stc
jmp
lods
mov
jae
and
mov
iret
scas
cld
xor
mov
enter
cld
sub
test
cmp
cld
dec
adc
inc
mov
das
mov
xchg
cmp
mov
adcb
add
aad
rcrb
xorb
jmp
scas
test
out
sub
push
lods
mov
fstl
cli
sub
scas
ret
in
fidivrs
jmp
xor
out
inc
insb
lods
mov
ds
stos
es
inc
cmp
movsl
roll
mov
rcr
mov
hlt
dec
add
call
sbb
xor
roll
stos
int3
pushf
loop
jns
in
sub
xor
stos
cmp
scas
mov
shr
pop
mov
xlat
pushf
orb
sarl
aas
outsl
in
mov
mov
cli
mov
es
fucomip
jbe
lea
lret
cli
push
inc
and
dec
adc
mov
cmp
mov
pop
data16
inc
scas
cmp
out
push
pusha
pop
in
mov
jecxz
stc
jbe
test
cmpsl
lds
xor
mov
aad
or
sub
ret
cmpsb
adc
push
cmp
scas
jns
add
mov
inc
sarl
icebp
shrb
inc
adc
inc
mov
sbb
aaa
jge
sub
ror
repz
add
fs
xor
cmp
adc
cmp
add
ljmp
adc
ficompl
or
mov
cmp
testb
cmp
popa
out
sbb
push
xchg
lret
sub
push
xchg
adc
sarb
sbb
xor
mov
loope
loopne
outsl
inc
mov
inc
lods
adc
mov
mov
or
je
test
movl
inc
pop
iret
xorl
sub
mov
add
int
or
ds
mov
ss
das
cmc
rcr
fnstsw
adc
roll
int3
sbb
les
mov
cwtl
aaa
ss
es
stos
mov
fsubr
out
cmpsb
mov
dec
stos
insb
push
mov
mov
xlat
or
insl
mov
jl
mov
push
mov
mov
orl
testb
add
xchg
cli
mov
pop
hlt
mov
xor
push
xor
es
lods
inc
ficompl
mov
or
and
outsb
sub
mov
andb
scas
cmp
push
dec
mov
pop
jecxz
aas
jecxz
bound
aas
jb
fists
pop
lret
stos
mov
fsubrs
aaa
xorb
data16
sub
mov
stos
cmpsb
jno
cmp
mov
pop
subb
mov
jns
mov
add
pop
inc
outsl
or
insl
jl
aam
test
mov
loopne
mov
lods
test
fiadds
xchg
bound
arpl
enter
push
lds
iret
mov
and
mov
filds
sub
outsl
or
shl
cmp
or
sbb
push
ljmp
movsl
jecxz
and
dec
sub
mov
mov
fst
cltd
cli
ss
mov
mov
dec
mov
iret
and
mov
outsl
in
ds
jge
sbb
ds
mov
cmp
movsl
sbb
cli
xor
xor
sbbl
pop
mov
mov
sub
xchg
rclb
int3
mov
mov
ds
and
push
or
cmovbe
outsl
or
stos
or
in
cld
cmp
push
lea
mov
orb
lods
mov
mov
clc
or
mov
cs
in
popa
adcb
mov
cmp
shl
outsl
clc
jecxz
or
mov
nop
fucomp
xchg
testl
addb
push
cmpsb
pop
mov
fbld
out
xorb
jecxz
out
mov
pusha
jle
xor
mov
push
mov
stos
mov
adc
mov
scas
jae
jb
mov
ss
int
sarb
rol
mov
xchg
aad
lea
fmuls
inc
xor
or
test
mov
lds
jae
xchg
or
inc
inc
mov
stos
jbe
add
dec
dec
or
fdivrs
into
aaa
sub
iret
in
add
xor
dec
int
jmp
push
clc
inc
sub
nop
fistpl
cmp
outsb
js
pusha
hlt
cmpsl
mov
rorl
push
add
inc
inc
jb
int
scas
fwait
aas
fst
pop
fildll
cmp
les
lret
lcall
dec
cs
es
cli
std
jno
or
lds
out
xchg
mov
adc
mov
lahf
movb
pop
pushf
or
mov
mov
fwait
mov
shll
xor
add
lds
cmp
push
lret
scas
loop
jecxz
inc
insb
in
xor
pusha
mov
lret
jl
js
es
daa
test
ret
cmpl
mov
and
mov
test
mov
xchg
cmpb
mov
frstor
mov
or
dec
stos
int
cmpsb
mov
mov
add
fwait
mov
and
fidivs
lds
popa
daa
cmpb
and
cmp
mov
addb
xor
aad
pushf
inc
pusha
sbb
sub
in
insl
ljmp
mov
pop
das
imulb
xor
and
adc
inc
jmp
mov
jne
div
mov
pop
fistl
int
xchg
mov
aaa
or
insb
cmp
pop
mov
aaa
xchg
test
mov
loopne
test
inc
mov
cmp
fnsave
loope
pinsrw
cwtl
int3
cmp
inc
es
outsb
lock
dec
das
mov
sbb
pop
jmp
sub
es
repz
test
add
in
mov
cmp
mov
cmp
es
dec
xor
xor
enter
hlt
cmp
setno
mov
dec
inc
in
xor
rcll
or
sti
mov
addr16
in
loopne
cmp
out
scas
cmp
xchg
jmp
mov
loop
jp
cwtl
push
dec
sub
mov
lahf
cmp
xchg
insl
dec
test
cmpsl
lret
test
mov
sub
jbe
jle
lock
addl
outsl
or
cs
mov
int
xor
pushf
jg
jbe
mov
mov
ss
sbb
dec
aaa
cmp
andb
sbb
jmp
jg
repnz
ret
push
scas
fdivrl
lods
fsubl
mov
push
jbe
jmp
movsl
mov
mov
adc
aaa
addl
xor
test
push
fistps
movsl
xchg
incl
test
lea
and
fs
mov
xor
stc
loop
mov
inc
xor
push
gs
push
sub
jnp
stos
test
sbb
ret
xor
or
sarl
movsl
xlat
and
ja
insb
cmp
lds
xchg
icebp
mov
lds
adcb
jns
fsubrl
inc
test
insb
mov
inc
push
mov
outsl
mov
xor
es
xchg
and
imull
xchg
xchg
xlat
mov
std
test
sub
mov
fiadds
or
inc
lock
lret
mov
inc
jg
mov
inc
and
inc
or
lret
xor
xchg
lea
inc
test
call
ja
mov
adc
push
daa
xchg
xor
cmpsb
cld
xchg
xchg
push
mov
flds
hlt
fstl
pushf
mov
js
fstpl
push
xor
mov
loope
sub
mov
cmc
cmpsb
ja
ret
pusha
mov
or
cmp
fwait
mov
das
cmp
ret
xchg
sahf
loopne
rol
mov
pop
pusha
mov
stos
leave
jb
push
mov
std
out
or
mov
push
pusha
cmp
int
xchg
ret
fnstsw
shll
shl
call
jge
mov
jl
sub
daa
or
stos
popa
loop
xor
sbb
cmp
mov
pop
mov
mov
stos
stc
cmpsl
scas
adc
frstor
pop
push
mov
jae
fmull
xor
test
xchg
ret
rcr
roll
jle
in
dec
das
mov
scas
ret
and
dec
fadds
stos
xor
inc
shr
inc
mov
aam
lods
cmp
mov
sbb
mov
inc
adc
inc
enter
or
inc
jne
aam
xchg
dec
lock
popf
idivl
mov
inc
sub
ret
xor
push
shll
sarl
jb
pop
cmp
aaa
sbb
adc
dec
aaa
push
aaa
cwtl
xor
jb
add
in
pushf
adc
add
outsl
push
les
mov
test
cmp
inc
add
xchg
icebp
cmpsl
jp
sbb
xchg
adc
mov
cmpb
cmp
sbb
mov
ret
hlt
lret
std
sub
sub
popa
add
mov
aas
es
fstl
fmul
icebp
testb
outsb
cmp
hlt
pop
lods
lods
sub
xor
pushf
test
aad
mov
roll
cmp
fisubrs
xor
pop
mov
cs
fadds
xchg
cmp
lods
xor
shrl
inc
ret
enter
popf
adc
cmpb
cmp
xchg
and
rclb
mov
nopl
mov
inc
xchg
ja,pn
aam
cs
or
mov
dec
cmpsl
stos
jb
cmp
mov
mull
int3
xchg
incb
jl
and
loope
dec
stos
cmp
jecxz
jae
stc
cli
jns
mov
fildl
sahf
sub
scas
xor
and
or
movsb
xchg
inc
movsl
mov
jge
cmpsl
outsl
inc
add
ljmp
xchg
nop
bound
shlb
jno
adc
sub
cmc
jecxz
pop
test
xchg
jl
xor
sbb
sbb
xor
pop
adc
das
lds
pushf
leave
and
mov
push
pop
xchg
sbb
movsb
jns
gs
pusha
and
daa
inc
pop
int
push
xor
sub
mov
dec
scas
inc
cmp
pop
fnsave
fwait
daa
mov
stos
iret
jb
xor
sbb
dec
xor
xchg
mov
fsubrl
xchg
lea
mov
movsl
mov
or
cmpsl
ret
insb
sub
xchg
mov
push
les
jp
push
sti
test
sub
add
add
mov
mov
sub
jecxz
sub
and
sub
stc
ror
mov
fbld
mov
iret
loopne
mov
jns
test
push
add
jmp
xor
pop
shlb
push
repz
pop
pushl
push
pusha
mulb
mov
out
mov
fisttpl
sub
push
rclb
js
popa
push
mov
cli
je
aaa
insl
inc
xor
nop
fistps
adc
jnp
test
inc
push
and
inc
cmp
sub
out
das
xchg
cmpsb
pop
das
sub
out
stos
das
aaa
cmp
cmp
mov
sub
xchg
test
jge
test
dec
sarb
leave
out
outsb
xor
popf
aaa
iret
lods
push
mov
imull
inc
stos
jae
adc
std
mov
shrb
cmp
vpunpcklbw
push
movsb
mov
fisttpll
ds
sub
dec
cmp
iret
pop
add
iret
cli
test
and
xchg
mov
sbb
fwait
sub
ss
sbb
mov
mov
push
aaa
cmpsb
rcrl
xor
inc
sub
hlt
stos
cmp
fwait
sbb
inc
ljmp
lods
inc
lret
lret
fsubs
outsl
aam
push
fidivrl
or
xor
pushf
mov
cmp
mov
add
in
xor
push
movsl
or
jo
rcll
mov
xchg
aas
jae
mov
ds
leave
aas
mov
or
sub
stos
jne
pushf
fwait
repz
xchg
xchg
mov
imulb
add
sbb
ret
push
fmuls
aaa
aad
add
test
mov
out
movsb
push
mov
sbb
je
xlat
push
mov
sub
mov
jno
add
movsl
aaa
push
das
lods
cld
mov
das
cmp
jne
sub
addb
push
movsb
enter
std
mov
scas
mov
loopew
leave
data16
adc
mov
daa
iret
add
push
repnz
mov
push
mov
ds
mov
sub
cmpsl
leave
push
jge
bound
sub
lret
int3
xor
mov
mov
fcom
xchg
into
mov
ret
mov
leave
sarb
ss
adc
xor
jns
jecxz
sub
imulb
or
fsubrs
mov
addr16
andb
mov
pop
iret
adc
sbb
adc
sbb
popa
mov
cmp
fbstp
push
cld
mov
jecxz
sbb
pop
imulb
xor
leave
pop
xor
aaa
imul
fisubrl
xor
mov
leave
lods
cmp
push
pop
gs
inc
pop
mov
fmull
rolb
mov
sti
stos
stos
mov
xor
sub
xchg
adc
repz
xchg
or
mov
mov
or
cmpsb
fadd
push
sub
jo
in
sub
cltd
nop
out
cmpsl
xchg
lds
cvttps2pi
mov
push
mov
push
fnstsw
out
inc
jmp
in
addr16
lods
movsb
xor
cmpsl
je
xchg
out
add
pop
das
daa
outsb
adc
fmuls
mov
nop
mov
rcll
pop
mov
das
push
ja
subb
aad
and
sbb
jecxz
mov
xor
in
inc
ret
fisubrl
mov
xlat
or
div
push
xlat
cli
stos
xchg
xchg
idivb
mov
lret
mov
sahf
sbb
mov
leave
dec
sub
ret
out
and
xchg
popf
pushf
inc
inc
jmp
mov
inc
fidivrl
pop
cmpsl
mov
dec
out
iret
sub
out
mov
jmp
mov
data16
out
mov
int
arpl
movsb
mov
popa
dec
aas
cli
push
cmp
inc
mov
mov
sbb
sub
mov
mov
lcall
cmovg
mov
stc
mov
add
sub
call
movsb
push
ret
andl
sub
or
xor
mov
jno
xchg
mov
fstpt
mov
unpckhps
xor
mov
mov
pop
sbb
sub
insl
mov
sbbb
cmp
sub
xor
test
addb
scas
pusha
push
insl
mov
mov
fldl
and
xchg
xchg
sbb
and
mov
pop
mov
into
xchg
push
push
mov
fldt
idiv
enter
and
add
jnp
movsl
testb
stos
add
out
mov
setg
mov
adc
out
rclb
mov
loope
aas
es
add
mov
mov
cwtl
shll
mov
mov
mov
xchg
je
out
mov
add
rcll
das
sub
push
insl
nop
and
mov
lret
cmp
cmp
pop
ret
movsb
inc
mov
mov
xchg
pop
xor
xlat
or
das
lret
arpl
scas
jno
test
dec
por
pop
push
mov
cmpsl
xor
int3
inc
dec
sbb
mov
sarl
mov
mov
and
imul
aad
mov
insb
daa
mov
mov
cmp
les
xchg
hlt
test
movsb
xor
outsb
aas
dec
frstor
pop
mov
adc
stc
or
jl
mov
xor
ds
nop
cmpb
shlb
pop
mov
ss
lret
cmc
movsl
mov
andb
and
fistpl
adc
mov
nop
jmp
inc
sarl
pop
inc
xor
outsl
mov
clc
cmpsb
or
test
mov
lret
mov
dec
push
mov
mov
push
pop
in
shl
iret
test
cld
mov
ret
dec
xor
or
mov
xchg
ror
add
sub
lods
lahf
dec
fs
jg
mov
fsubl
xlat
inc
cli
fistpl
rolb
add
lods
or
inc
dec
and
xchg
ljmp
dec
xor
push
aam
dec
das
aas
mov
jecxz
jno
pusha
ja
dec
dec
lds
jg
pop
into
mov
subb
add
cmp
pusha
pushl
out
loope
jmp
out
aas
add
mov
repz
push
jnp
sub
aad
adc
jle
cmp
andb
adc
mov
enter
xlat
mov
test
movsb
les
stos
adc
popa
push
test
xor
rorb
in
call
stos
mov
jecxz
pop
call
xchg
ret
mov
sub
mov
push
xor
fucomp
popa
je
bound
fstpt
cli
mov
mov
inc
roll
jbe
jmp
xchg
xor
out
mov
popa
js
sub
fwait
cmpsb
or
addr16
add
iret
aas
out
push
out
mov
dec
int3
clc
xchg
push
sbb
ret
cli
xchg
stos
mov
sbb
mov
loope
adc
in
inc
add
mov
jns
sbb
scas
xlat
rol
popf
mov
clc
loopne
push
cmpsl
dec
and
mov
hlt
mov
push
out
test
sbb
mov
int
das
scas
cmp
or
shll
add
pop
es
movsb
jecxz
mov
test
pop
dec
mov
enter
inc
mov
inc
jns
std
jmp
pop
jle
inc
fcomps
xor
cmpsl
mov
ret
stos
push
aam
jns
pop
movsl
jecxz
xor
ficompl
mov
sub
cltd
pop
addr16
adc
mov
lds
sub
sti
imulb
sub
mov
mov
lds
iret
pop
push
adc
or
cmp
xor
mov
push
inc
or
mov
loopne
movsb
dec
ljmp
arpl
sub
cmpsb
mov
mov
cmp
inc
mov
aad
mov
mov
icebp
lods
mov
push
mov
xor
jmp
jecxz
sbb
cmp
mov
mov
roll
add
addr16
shrb
mov
lret
xchg
mov
insl
jo
mov
mov
daa
sub
or
inc
out
lret
xor
imul
outsb
add
popf
mov
daa
mov
clc
mov
inc
cmpsb
cmp
mov
cmpsl
pop
scas
dec
lods
cmpb
pop
inc
fcmovb
cmp
out
jb
cmp
shrb
jmp
sub
movhps
dec
push
test
mov
jno
xchg
jmp
daa
inc
ss
push
sbb
sub
es
test
mov
jmp
movsl
mov
mov
mov
enter
mov
movl
aad
and
and
cmpsl
or
mov
addr16
lods
xchg
push
or
cmpsl
rcl
test
or
stos
mov
mov
fistpll
inc
inc
push
iret
test
or
or
insl
cmpsl
lods
mov
jg
sub
stos
adc
inc
sbb
pop
cmp
dec
lea
inc
pop
mov
sbb
xlat
in
and
sub
or
in
aas
mov
subl
mov
inc
out
popa
push
lods
cmpsb
sub
push
sahf
cs
aad
cld
sub
js
or
shlb
sub
mov
pop
cmp
fadd
mov
add
test
fsubrs
aam
cmpsl
mov
xor
mov
ret
mov
jmp
mov
mov
mov
fnstcw
dec
cld
lods
mov
cmp
fs
jns
js
mov
movsl
aam
mov
int3
fs
arpl
in
push
scas
scas
mov
in
mov
push
ja
cmp
cmp
popa
jmp
cld
jecxz
icebp
cs
bt
mov
fldl
sub
or
repnz
mov
jae
sub
and
push
push
das
int3
testl
mov
xor
test
pop
inc
fmuls
push
out
imul
xchg
lahf
test
mov
mov
cmp
or
ret
rol
mov
iret
mov
mov
sub
mov
lret
std
xchg
mov
ret
lahf
push
ret
pop
jecxz
cmp
mov
sbb
pop
scas
cmp
inc
pop
sbb
sub
and
sub
mov
jecxz
and
dec
jno
sbb
in
jmp
mov
inc
add
ss
in
xor
mov
aas
pop
sbbb
lahf
daa
pop
ret
xor
das
aas
lock
xchg
pop
mov
js
loop
shll
and
inc
stos
fimull
mov
imul
daa
xchg
inc
dec
repnz
cmp
popf
loope
pop
stos
pop
scas
or
pop
aas
in
mov
xor
mov
jecxz
pop
push
lret
ds
roll
xchg
add
leave
test
push
lods
dec
int3
ljmp
arpl
xor
leave
lahf
pop
ds
shrl
mov
addb
xchg
mov
cli
inc
mov
fisttpll
hlt
push
xor
xorb
aad
addb
inc
jbe
cmp
les
stos
mov
jb
or
inc
push
in
push
cli
or
pusha
movsb
xor
pushf
inc
xlat
push
cwtl
sub
mov
mov
adc
and
mov
and
pop
imul
sub
loop
inc
push
cmp
sub
mov
adc
lret
inc
xor
pop
jno
dec
data16
add
add
scas
and
repz
jns
xchg
clc
mov
jae
xchg
aaa
ds
std
dec
xor
mov
add
or
mov
arpl
cmpsl
lret
adc
outsb
lret
sbb
cltd
mov
or
jns
sarb
daa
jle
in
inc
dec
mov
fnsaves
call
rol
sub
bound
cmp
xchg
mov
add
loopne
mov
leave
cli
in
adc
gs
push
push
sbb
test
mov
pop
das
movsb
leave
fistl
mov
lds
xor
pop
pusha
jp
mov
mov
jle
pop
loop
into
xor
shlb
push
call
int
repz
mov
xor
cld
fldl
in
lret
mov
xorl
addr16
mov
jno
cs
xor
cbtw
inc
incb
cs
mov
ret
scas
pop
and
into
jmp
mov
xchg
sbbl
and
je
sbb
xor
fcmovb
data16
test
dec
mov
dec
lods
rcl
pop
ret
and
mov
mov
in
inc
fcomps
cmp
mov
fcmovne
mov
jecxz
xchg
stos
sbb
ret
pushf
pop
cmc
push
cld
cld
jmp
jbe
lods
xchg
lods
in
cmpsb
test
ljmp
ret
and
sub
inc
pop
rcl
push
push
movsb
pop
enter
lds
or
stc
mov
cmp
in
setnp
and
inc
mov
pop
test
das
cwtl
dec
cld
call
inc
jns
out
stos
mov
ds
mov
push
or
add
mov
and
cmp
mov
sub
std
cmp
leave
out
das
stos
ret
lock
fdivl
jbe
push
ss
aam
shlb
popa
daa
mov
das
mov
pop
and
cmp
lods
xor
sub
adc
mov
fstpt
cmp
xlat
inc
add
insb
xchg
mov
add
pusha
cltd
xchg
jecxz
sub
mov
outsb
mov
fildl
mov
pop
ja
fstps
dec
mov
lods
and
popf
mov
xor
out
adc
shrb
dec
cmpsl
cmpsb
das
mov
mov
or
push
inc
stos
aaa
cmpsb
shlb
shll
les
sbb
int
inc
add
gs
jecxz
push
xchg
mov
mov
int
mov
ja
cmp
shrb
mov
push
imul
inc
xchg
or
xchg
dec
mov
inc
or
push
adc
add
mov
or
addb
lret
mov
ret
or
lods
sbb
stos
xchg
loop
cmp
mov
ret
shl
push
push
fcompl
sub
jns
mov
push
aam
cmp
jnp
das
cmp
sub
push
fs
xchg
xor
xor
cmpsl
mov
fnstenv
mov
cli
xor
jns
fs
loopne
add
or
xlat
stc
inc
and
bound
inc
insb
test
testb
mov
add
push
cmp
movsl
movsb
mov
scas
xor
jmp
xchg
scas
shlb
xchg
jmp
cmp
jmp
stos
call
das
adc
jae
fs
das
cmp
lods
test
inc
xor
lods
add
mov
jl
xor
fcmove
push
mov
mov
rolb
inc
jb
xchg
inc
sbb
mov
popf
and
stos
into
xchg
leave
rcrb
dec
xor
inc
or
cmc
in
and
aas
or
lret
inc
sbb
mov
dec
fld
repz
in
mov
aad
mov
mov
test
stos
xchg
sbb
movsb
add
push
int3
mov
jecxz
jbe
pop
jo
fsubr
sub
mov
fnstsw
outsb
sbb
mov
push
dec
shlb
mov
int
jnp
lea
xor
jbe
mov
ret
mov
rep
mov
jecxz
jl
insl
mov
push
repnz
fld1
mov
dec
outsb
adc
into
push
push
mov
push
add
test
fstl
aaa
mov
sub
scas
mov
fnstcw
aad
stos
clc
pop
out
push
scas
sbb
cmp
push
subb
outsb
sub
dec
aas
sub
dec
ss
mov
mov
and
xor
rol
data16
loop
sbb
clc
sub
lods
ret
adc
aas
sub
xchg
stos
push
cmpb
imul
lret
pop
mov
mov
lds
movsl
xor
scas
cs
xor
iret
or
inc
mov
push
mov
sti
mov
mov
mov
andb
mov
incl
mov
cmpsl
iret
subb
fstpl
out
pusha
mov
int
and
sbb
les
pop
cmp
sub
aas
xor
out
mov
gs
pusha
stos
mov
dec
insb
inc
sub
sub
add
mov
mov
inc
mov
mov
mov
in
xor
or
stos
inc
addb
les
cmp
test
sti
mov
fwait
pop
mov
sahf
rol
ja
jae
in
stos
and
test
dec
sub
aas
orb
xor
cmpsl
mov
nop
cmp
mov
or
sbbl
mov
aaa
mov
push
bound
mov
jecxz
es
lahf
sub
mov
mov
inc
mov
sub
push
inc
pop
mov
sbb
ja
out
orb
cwtl
mov
pop
mov
jge
fiadds
fmul
push
sub
sub
push
adc
and
sbb
xor
sbb
mov
scas
aas
pop
aad
mov
das
stos
mov
rcll
scas
xor
outsl
jle
ror
ss
add
or
movsb
aas
fisubs
and
test
loop
xor
test
stos
lock
mov
popa
data16
push
mov
xlat
push
adc
sbb
pop
push
mov
jp
test
push
int3
xchg
mov
mov
jns
lods
ret
repz
es
inc
lock
or
cmp
div
and
je
mov
or
mov
push
cltd
jecxz
popf
jge
lret
mov
loope
or
add
jl
mov
lods
aad
or
rorl
test
sub
ret
aad
pop
inc
sbb
xor
cmp
pmulhuw
xor
xchg
cmp
arpl
jp
dec
sub
dec
xchg
fldl
jp
push
pop
mov
xor
cmp
sarl
das
enter
fisubrl
mov
and
testb
pop
sbb
mov
das
xchg
xor
outsl
xchg
cmpsl
and
and
fisttps
mov
cmpsl
leave
dec
jb
arpl
sub
mov
loope
cwtl
mov
pushf
inc
sbbl
aad
push
out
adc
pop
mov
lahf
push
mov
mov
int
fsub
push
jnp
stos
fsubs
gs
cmpsb
push
outsl
lods
jecxz
sub
mov
sbbl
ljmp
ds
adc
cmp
sub
bound
pop
dec
mov
popa
adc
lret
iret
stc
aaa
adc
mov
inc
mov
scas
cmpsl
mov
rorl
cmp
fldt
jno
out
jg
xor
imul
pop
push
xlat
mov
inc
xlat
inc
or
frstor
push
pusha
inc
jp
les
xchg
and
sbb
cmpsb
cmpsl
jge
or
sub
mov
add
mov
outsb
push
xlat
fnstenv
mov
mov
fmul
insl
and
cmpsl
or
fwait
xor
cmp
leave
faddl
ds
xor
test
aad
ja
fnsave
popa
mov
roll
and
mov
repnz
push
xlat
inc
mov
and
setnp
flds
jns
xor
cmpsl
cmc
cmp
rol
cwtl
mov
movsl
push
adc
mov
mov
mov
mov
out
lret
xchg
add
adc
pop
shll
push
inc
ret
cltd
or
lret
cmpsl
movsl
mov
shll
cmp
push
popf
out
data16
lds
mov
or
arpl
rcrl
out
mov
shll
sbb
mov
subb
sub
ja
lea
mov
rorl
stos
cmpb
or
dec
sbb
mov
sarl
subl
cmp
daa
aas
xchg
popa
jg
cmp
lahf
inc
rcll
adc
loop
adcb
outsl
adc
ret
ret
test
mov
xlat
pop
add
loop
aas
inc
push
fcomip
dec
xchg
or
iret
and
mov
push
xor
mov
jle
iret
cmpsl
and
mov
into
mov
mov
loop
mov
push
or
sub
cmp
ja
addr16
mov
daa
sbb
dec
popl
out
mov
mov
pusha
aam
mov
aad
jmp
addr16
out
orb
cmp
ljmp
dec
imul
lret
gs
shrb
cmp
fidivs
cmpb
test
jecxz
ja
ds
mov
mov
movsl
lret
subb
sub
das
fildl
dec
popa
mov
arpl
fiaddl
mov
or
mov
mov
daa
test
adc
pop
scas
ds
or
mov
and
sub
mov
cmp
mov
popa
jnp
lahf
mov
cmp
imul
pop
dec
mov
add
data16
mov
jecxz
outsb
mov
xchg
mov
fnsave
add
lret
and
clc
sub
out
push
cmpsb
pusha
in
inc
fs
sub
push
or
pop
rol
push
mov
pop
mov
mov
stc
add
push
cmp
adc
push
scas
lret
sbb
mov
jecxz
xlat
mov
cmp
in
sub
inc
shlb
mov
push
push
sub
lea
mov
jbe
stos
sbb
ret
daa
test
fistps
loope
sahf
rcrb
sub
xor
cmp
test
or
loope
movsl
lret
popf
inc
push
mov
cmp
jl
popa
std
xchg
js
ret
movsb
lret
fldenv
cmp
mov
call
mov
scas
mov
mov
cmp
sub
test
cmp
rcr
sub
cmpsb
cltd
daa
mov
push
fwait
mov
insb
mov
movsl
xchg
pop
sub
adc
popa
pop
add
push
aam
fwait
aas
ret
xchg
fwait
add
cmp
fimuls
in
and
cmp
xor
cmp
pop
lods
cmp
daa
mov
and
xor
aaa
pop
int
insl
dec
mov
mov
xor
xor
mov
mov
icebp
ss
imul
xor
jl
inc
mov
and
mov
fs
add
inc
pop
xlat
sbb
jb
mov
mov
lods
xchg
fldt
sub
xor
stc
out
lods
inc
mov
imul
cmp
mov
in
ret
frstor
mov
cmp
scas
cmc
movsb
inc
pop
nop
inc
in
mov
sub
xor
outsl
in
pusha
cmpsl
mov
mov
cs
mov
into
dec
movsb
inc
mov
addr16
push
in
dec
mov
fcmovb
fsubrs
repz
push
popf
xchg
and
cmpsb
sbb
mov
ret
insb
aaa
pop
xchg
shlb
sub
pop
fildll
mov
add
cltd
xor
jne
cmp
ror
and
add
shrb
xor
mov
ret
andb
inc
leave
mov
fucom
cmp
xchg
pop
out
push
out
cmp
mov
sub
xor
or
cmp
sbb
fisttpl
cmpl
mov
bound
ljmp
fsubrs
sti
mov
inc
push
into
push
cmp
inc
fstpt
jecxz
xchg
xor
les
ret
mov
repnz
dec
lods
cmpsb
or
ret
aad
or
pop
xchg
mov
jecxz
pop
mov
inc
mov
stc
jmp
ds
faddl
lods
mov
out
rorl
pop
mov
roll
sub
add
xor
lods
scas
inc
icebp
push
into
sti
das
mov
inc
sar
das
stc
xorb
cmpsb
mov
popa
jne
outsb
dec
add
mov
roll
jecxz
push
dec
xchg
inc
sarl
xor
fstpt
sbb
xor
aaa
push
fimull
mov
fisttps
iret
mov
mov
mov
jecxz
jne
scas
jle
mov
ret
cmpsl
mov
ljmp
ss
mov
cmpl
stos
out
movsl
orb
test
mov
xchg
testb
movsb
xor
mov
xor
mov
in
jg
cmpsl
in
pop
ss
shr
test
mov
fimull
xchg
xchg
fisubrs
scas
jecxz
jg
jae
mov
bsr
push
mov
cs
lock
mov
int
lods
push
inc
jmp
inc
mov
pusha
add
jecxz
push
js
loopne
out
mov
pusha
je
scas
inc
push
cmpsl
fcompl
mov
dec
add
repz
fcoms
sbb
mov
cmp
into
dec
cmp
mov
mov
xchg
push
rolb
ret
jae
push
pop
push
out
ds
aad
mov
mov
stos
lret
popa
sbb
hlt
out
xchg
xor
test
fldcw
mov
jmp
repz
aas
frstor
loopne
stos
mov
mov
stos
add
popa
xchg
push
lahf
rol
xor
xlat
orb
xchg
xchg
es
lahf
jnp
mov
stos
add
mov
sbb
mov
cmp
cmp
add
out
movsb
cmpxchg
iret
std
lar
icebp
add
jno
das
mov
sti
and
jmp
mov
push
cmpsb
cmpsl
mov
or
clc
jle
xchg
mov
mov
fisubl
mov
inc
in
sub
call
test
mov
and
ja
xchg
and
cmpsl
sub
jg
jns
cs
and
std
xchg
out
add
sti
lahf
fdivr
test
xor
mov
movsb
iret
enter
imulb
mov
pusha
stc
outsl
mov
data16
popa
out
cmpsl
cs
push
add
and
mov
fnstsw
sub
cmpsl
lock
cli
mov
ja
ficompl
insl
mov
adc
mov
inc
and
sub
outsb
xor
test
inc
mov
fs
jb
mov
aas
pop
fistpll
addb
mov
push
nopl
dec
push
sub
mov
flds
sti
ja
mov
mov
outsb
xchg
xchg
andb
cmp
and
scas
into
mov
clc
mov
mov
test
daa
jl
add
mov
or
push
faddl
icebp
jae
jnp
fs
xor
xlat
push
jo
bound
xor
xchg
push
fsubrl
sub
xchg
ss
daa
rcl
sub
push
cmpsl
mov
in
inc
jo
popf
xlat
cwtl
movsb
ss
dec
daa
mov
insl
subl
filds
mov
mov
xor
outsb
sbb
insl
pop
cmpsb
ret
lods
inc
loopne
aaa
das
cmp
aas
sub
iret
mov
out
rol
sub
inc
andb
inc
sub
pop
pop
sub
and
daa
addr16
aam
adcl
jmp
mov
test
mov
dec
vmovapd
jp
and
push
sub
outsl
pop
push
mov
in
jmp
imul
jge
mov
dec
push
dec
ret
into
inc
aaa
mov
mov
leave
xchg
call
jmp
mov
cmp
cmp
jp
outsb
or
mov
test
cmp
mov
xchg
sbb
mov
cmpsl
push
repnz
outsl
push
daa
scas
mov
mov
cmp
cmp
scas
cli
call
xor
inc
fldl
inc
xchg
cmpsb
je
ret
sub
mov
mov
mov
mov
mov
xor
xchg
insb
jle
xchg
cmpsl
lret
mov
sub
inc
sub
inc
repnz
mov
push
mov
mov
out
bound
stos
mov
cli
repnz
cmp
movsl
lods
jle
or
stos
pusha
leave
les
and
mov
and
push
xor
ljmp
sub
add
ss
cmpsb
mov
rep
lock
push
scas
mov
mulb
pop
outsl
mov
adc
fnstsw
clc
inc
popf
mov
fsub
xor
orb
les
daa
jbe
pop
sub
push
mov
int
mov
or
insb
in
inc
cmp
and
mov
sub
xchg
jns
push
mov
mov
fidivl
push
enter
movsl
repnz
xor
push
int3
mov
push
mov
fucomip
mov
jne
xor
andb
mov
cmp
ljmp
xchg
cmpsb
sti
inc
ret
imul
sub
ficoms
mov
pop
das
mov
pusha
or
dec
test
imul
or
shrb
xor
dec
xor
mov
mov
insb
scas
insb
aaa
xor
test
mov
loope
mov
ror
sub
jmp
clc
dec
sub
mov
sub
sahf
cmp
inc
pmulhw
mov
inc
addr16
mov
pop
pop
mov
mov
mov
jo
fnsave
and
sub
cmp
out
mov
pop
inc
das
aas
pop
dec
xor
rolb
fnstenv
test
and
xchg
cmp
fstpl
sarl
inc
int
jle
mov
mov
mov
scas
aaa
dec
aad
fcompl
sub
scas
mov
add
ljmp
add
lds
loop
jp
sbb
mov
push
xor
addl
jae
ds
daa
fistpl
sbb
rcrb
inc
movsb
xchg
cmpsb
push
inc
lods
das
mov
pop
inc
loope
shl
xchg
out
iret
addb
mov
ds
mov
ja
scas
rcl
xchg
xor
in
pop
jp
add
fs
repz
sub
shl
jg
scas
xlat
push
fsubl
cmp
xor
sti
xor
xchg
daa
ret
and
cmp
test
or
cmp
mov
adcl
cmp
jg
rol
ret
and
les
mov
movsl
stos
push
int3
subl
mov
mov
xor
mov
mov
cmpsb
mov
cmp
mov
pop
test
cmp
mov
jmp
sub
fldenv
cmp
mov
jecxz
or
mov
cmpsb
int
adc
stos
test
inc
sbb
jns
xor
loope
xor
bound
data16
inc
shrl
pop
and
outsb
cmc
and
ret
adc
push
inc
aaa
mov
inc
cmp
outsb
imul
pusha
xchg
insb
xor
cmp
mov
or
and
mov
mov
xchg
int
in
jne
pop
dec
inc
xchg
xor
mov
mov
fldt
add
loope
int
nop
nop
rcl
pop
and
loope
pop
xchg
push
adcb
imul
xor
mov
mov
xor
jmp
test
mov
push
pop
pusha
jb
jmp
pushf
pop
lods
add
jmp
inc
fldt
leave
pop
jecxz
and
xchg
pop
mov
inc
sub
test
jmp
inc
xor
lods
das
stos
add
cmpl
ja
clc
into
call
and
fistl
cmpsl
sub
in
insl
inc
sbb
or
notl
ret
rcrb
leave
pop
int
xor
lods
orb
call
mov
and
jnp
xchg
stos
loope
mov
mov
cmp
sarl
sub
ret
xor
insl
xchg
xlat
ss
lds
scas
repnz
xchg
or
or
cmpsb
in
lods
adc
or
test
loope
fs
mov
inc
loop
or
out
add
mov
mov
iret
add
inc
ss
add
xchg
mov
mov
mov
inc
xchg
imul
xchg
sti
stos
fwait
jb
dec
test
mov
sub
xchg
dec
lahf
xor
fs
push
and
scas
ds
call
ss
dec
sbb
loope
xchg
pop
sub
xor
jb
cwtl
rcll
mov
lods
xchg
push
testl
insb
test
mov
lret
sub
das
mov
in
xor
repnz
jg
xor
repz
jne
cmpsl
ret
jle
mov
clc
push
lcall
popf
inc
cmp
mov
add
je
mov
mov
push
fisubrl
lret
hlt
addr16
sub
cld
pop
lods
loop
into
arpl
seta
mov
sub
xchg
mov
mov
and
inc
stos
popf
je
mov
loopne
sbb
cs
mov
iret
std
sbb
xor
loopne
adc
sub
lods
sub
data16
outsb
mov
mov
stos
fisubrs
xor
loope
jl
cld
out
sub
sahf
and
sub
and
jb
sub
inc
aas
mov
shlb
out
enter
lds
insl
lahf
cmp
roll
sub
xlat
jae
sbb
mov
push
in
ret
loope
pop
leave
inc
lret
sub
ret
adc
mov
mov
xchg
and
xchg
aam
jb
call
sub
adc
mov
lret
aaa
jnp
inc
ret
adc
ret
mov
movsl
ds
xor
xchg
das
aas
outsl
std
sub
push
dec
imul
pop
inc
sub
fwait
cmp
sbb
inc
jg
add
dec
mov
in
mov
into
cs
mov
dec
mov
lahf
xchg
jecxz
mov
and
ret
inc
das
loopne
jle
cwtl
ret
cmp
out
mov
cmp
jl
mov
cmp
xor
cmc
subl
inc
lds
dec
popa
stc
mov
addr16
ss
push
mov
xchg
dec
test
xor
ss
add
aad
sbb
push
test
movsb
shr
jbe
jl
mov
nop
clc
xor
sub
daa
lret
mov
mov
lods
mov
cmpl
jae
or
into
xchg
lods
cs
add
in
scas
das
jl
cmp
mov
lock
imul
adcb
lret
scas
pop
out
or
mov
pop
and
jecxz
int3
mov
andl
mov
jge
rcrb
mov
in
pop
jmp
mov
xorb
sub
cs
mov
sub
mov
add
shrl
sbb
test
divb
aas
test
pop
mov
dec
cmp
rcr
mov
sub
xor
aad
loopne
data16
ret
out
mov
aad
adc
sbb
rcrl
ja
in
push
mov
das
xor
sbb
xchg
add
gs
cwtl
ret
jg
push
fcmovne
iret
rolb
out
sbb
fsubl
daa
fisttpll
mov
or
xchg
mov
sbb
mov
psrld
jno
jmp
loope
in
push
ljmp
lds
pushf
xor
movsb
jecxz
iret
xchg
xchg
out
stos
mov
nop
int
in
sbb
sub
dec
test
shll
sbb
aam
in
pop
push
hlt
jb
jb
movsb
std
cmc
pusha
xchg
ffreep
adc
ret
popf
mov
or
sub
stos
iret
jl
mov
jg
out
out
data16
lods
sub
dec
or
loope
daa
in
push
cmp
jbe
push
push
nop
mov
loop
aad
inc
ds
lock
orb
cwtl
mov
leave
call
test
cmp
dec
push
in
sub
test
cmp
sbb
fldcw
fnsave
out
sub
mov
js
stos
mov
scas
lea
ret
es
mov
pushf
rcrb
mov
cld
push
push
mov
iret
mov
sub
mov
test
push
inc
mov
add
ss
mov
daa
loope
popa
or
aam
ss
xor
and
push
loopne
jp
push
ret
push
movsl
xor
cld
pop
inc
mov
push
jmp
mov
xor
or
cmpsb
inc
mov
mov
popa
add
mov
shl
andl
es
sub
out
cmp
cmp
aas
mov
cmpsb
sub
repnz
je
addb
and
andb
add
scas
xchg
out
shlb
int
test
and
and
pop
mov
mov
jl
scas
cmpsb
inc
addl
ffreep
popa
inc
ss
and
insb
cmpsl
adc
ret
ss
cmp
test
jno
mov
enter
mov
xchg
fstpl
mov
imulb
ss
daa
mov
mov
pop
lock
stos
sti
loop
mov
ret
cwtl
jno
incl
cmp
scas
ds
fwait
bswap
cmpsw
xor
test
adc
cld
mov
nop
scas
mov
data16
les
scas
in
mov
cmpsl
xchg
fldl
loope
test
lods
inc
rol
cmp
dec
loope
je
cmp
ret
add
in
mov
and
pop
fistl
mov
das
adc
ret
sub
mov
push
cmc
test
fistps
sahf
ficoms
scas
out
movsb
flds
test
sbb
movsb
bound
push
out
mov
data16
aam
lahf
mov
pop
xor
outsb
shl
inc
pop
push
sub
and
callw
and
fldenv
xor
repz
cmp
mov
xor
mov
cmpsb
loopne
xchg
push
lock
push
aaa
es
scas
mov
sbb
cld
pop
inc
out
sub
add
out
xchg
insl
push
es
scas
das
stos
mov
shl
jp
pusha
arpl
into
outsb
mov
dec
mov
xor
mov
dec
mov
subb
xchg
mov
cmpsl
fldt
cmp
cmp
aad
cli
push
cmp
jns
mov
inc
ret
insb
js
dec
dec
adc
scas
sub
cli
sbb
lods
into
insb
sub
fnstcw
jl
jae
xor
mov
sti
xlat
popf
mov
mov
stos
iret
clc
sub
repz
mov
test
mov
push
sti
cmp
inc
sarl
push
gs
btr
aaa
pusha
or
dec
lods
stos
xorb
inc
mov
and
pop
jecxz
jnp
iret
and
xchg
imul
jg
cmp
and
jno
insl
pushf
sub
sub
sti
dec
sub
shll
fisubs
stos
leave
cmp
call
mov
rolb
mov
popa
dec
and
jno
xor
loopne
lret
shrl
std
xchg
cmp
leave
fucomi
lods
fmulp
addb
lock
cmp
aaa
push
out
out
mov
xorb
mov
addr16
movsl
xor
int3
push
mov
cs
pop
xchg
icebp
sti
data16
sahf
lods
iret
out
inc
mov
lcall
mov
movsl
addr16
and
xor
mov
dec
adc
sub
inc
inc
aad
push
subb
insl
mov
ret
fs
daa
adc
cltd
mov
out
push
sahf
lret
adc
push
mov
push
sbb
test
ds
inc
mov
inc
stos
jno
mov
jb
aas
test
push
mov
mov
scas
stos
addr16
xor
rcr
cld
insl
sbb
mov
cmpb
fistl
sbb
imul
das
mov
add
sbb
mov
subb
mov
cmpsl
loope
loope
adc
imul
fsubl
testb
fstps
jbe
lret
mov
or
sub
imul
mov
mov
and
bound
inc
mov
mov
outsl
pop
ds
in
jnp
pop
cmpsb
scas
mov
aaa
lret
test
loope
fcmovnbe
lea
iret
popf
sbbl
mov
mov
and
stos
xor
push
mov
cmpsb
shrb
scas
mov
sub
mov
shll
cmpsb
rorb
sub
push
jne
sub
sbbl
decb
mov
xchg
out
mov
cltd
mov
inc
mov
push
mov
frstor
sbb
and
lods
test
ret
sti
adc
mov
pop
mov
cmpsl
movsl
mov
sub
and
mov
es
leave
cmpsb
push
lods
aaa
and
xor
inc
pop
es
cmpsl
sub
mov
jb
sarb
sbb
mov
ret
roll
subb
and
fchs
add
das
mov
fildl
gs
xchg
sbb
sbb
cmp
daa
mov
mov
int
out
or
in
mov
adc
inc
adc
inc
dec
sub
hlt
inc
sarl
pop
jbe
mov
movsl
stos
std
scas
cwtl
outsl
jge
das
insb
mov
ss
mov
jns
sub
cmp
pop
es
iret
mov
or
mov
push
push
rcll
mov
leave
mov
push
mov
ss
cmpsl
iret
mov
cmpsl
scas
xchg
inc
mov
cmpsb
mov
ss
mov
inc
ret
clc
test
mov
lret
ret
dec
shl
dec
out
iret
shlb
rorl
mov
movsl
push
or
mov
pop
cmpsb
ret
cmp
jl
jne
inc
aaa
push
and
push
mov
cmp
push
mov
cmovne
and
ret
mov
adc
inc
ret
frstor
mov
pop
mov
fsubl
call
and
lods
or
cmp
adc
and
lret
mov
mov
gs
mov
mov
pusha
setnp
dec
xchg
data16
cmp
mov
xchg
sub
cltd
lods
out
mov
loope
jle
sbb
jb
shrb
outsl
adc
in
xor
scas
mov
mov
cmc
sbb
test
inc
mov
cmpsb
pop
movswl
xor
sbb
inc
in
neg
and
outsb
test
push
addb
scas
stos
jnp
sahf
mov
data16
ret
cltd
push
mov
nop
movl
mov
push
pop
sbb
push
inc
cmp
inc
movsl
mov
rolb
fmuls
mov
iret
lock
jo
ret
push
jbe
cmp
out
ret
mov
push
scas
repz
fisttpll
loop
push
or
mov
scas
loopne
mov
mov
daa
mov
mov
jge
das
shll
mov
cld
xchg
inc
xor
addr16
dec
loop
pop
les
and
imul
dec
push
movsb
mov
inc
pop
add
fs
xor
mov
mov
fwait
daa
ljmp
push
fstpl
cs
inc
fmulp
inc
pop
and
mov
pushf
loopne,pt
mov
pop
cmpsl
repnz
xor
xchg
std
jge
mov
fs
xor
xchg
jl
fsubrs
and
pusha
push
xor
or
jp
mov
test
lahf
in
aaa
loop
dec
jnp
sub
fsub
scas
mov
xchg
jp
xlat
out
jge
outsb
scas
ret
lea
inc
in
pop
scas
cmpsl
xor
movsb
pop
movsl
dec
push
sub
push
faddl
jns
inc
cmp
in
outsb
cmp
or
test
xchg
sub
cmp
mov
cmpsb
fwait
cmp
int
pop
daa
divl
hlt
outsb
and
ror
adc
mov
mov
shll
xlat
xorl
out
sbb
push
lcall
aad
cmpb
sub
inc
pop
leave
roll
mov
stos
mov
fldl
call
test
movsb
loope
xchg
sub
js
xor
and
cld
xchg
mov
sub
into
and
shrb
dec
or
into
sub
cmpsb
call
xor
mov
cs
xor
or
fs
js
xchg
and
xchg
jnp,pt
les
ss
fldenv
scas
out
mov
fbstp
outsb
jns
daa
scas
push
test
lea
iret
popa
lock
cmpsb
cli
sub
rol
sub
push
and
sub
jecxz
scas
sub
cmp
mov
and
dec
lret
movsb
sub
filds
inc
pop
push
add
cmp
adc
jmp
xchg
cmp
push
mov
pop
xchg
xchg
andb
xchg
jecxz
dec
xchg
mov
xchg
insb
in
mov
jecxz
je
ljmp
in
sub
xlat
mov
jp
out
out
mov
ds
push
ret
dec
push
js
or
xor
xchg
lods
push
fsubrp
cmp
fisttpl
int3
sub
lret
jecxz
xchg
fsubr
test
in
mov
sbb
push
stos
lret
into
xchg
stos
mov
rcrl
xlat
out
mov
xor
idivb
pushf
mov
cmp
jle
insb
mov
call
scas
frstor
or
idivw
sbb
aas
xchg
clc
dec
mov
repz
mov
aaa
sbb
lods
scas
ss
xlat
into
cmp
mov
lods
fistpl
loopne
jno
imul
enter
push
lret
cwtl
jg
cmp
sub
orl
in
fiaddl
aam
xor
hlt
add
das
mov
insb
adc
fs
mov
cmp
imulb
lods
pop
push
fnstsw
sbb
lods
ds
mov
xchg
in
test
mov
test
cwtl
icebp
jnp
adc
sub
mov
sti
jge
cmp
sahf
or
cmp
push
aad
fcmove
mov
flds
mov
and
inc
fldcw
inc
aad
mov
popa
adc
jg
fs
add
mov
mov
es
or
xor
dec
lret
mov
sbb
inc
mov
das
scas
rol
mov
jmp
int
movsl
cmp
nop
clc
cmc
inc
sub
sbb
test
push
jae
je
cwtl
inc
int
test
mov
es
pusha
js
mov
loope
sbb
and
lret
mov
sub
movsl
adc
xor
mov
sbb
inc
mov
sbb
sahf
rcrl
dec
lock
lods
add
xor
inc
push
add
sahf
movsb
dec
xchg
fiadds
adc
in
mov
sub
imul
jb
jae
ret
adc
sar
push
mov
scas
mov
pop
ds
stos
xor
fnsave
sbb
test
scas
aaa
inc
sbb
test
fisubl
lock
scas
stos
shlb
mov
popf
jo
daa
out
loope
add
lahf
pop
jmp
inc
cltd
jae
add
test
mov
mov
sarb
stos
ret
fisubrs
sbbb
sub
and
mov
push
push
outsb
ds
mov
aaa
lahf
mov
jnp
rcrl
js
push
inc
fsubrl
mov
ljmp
cli
push
or
stos
pop
out
adc
jg
lods
push
faddl
je
xchg
lods
jno
pusha
daa
fisubl
xchg
mov
jae
flds
inc
rcll
rorb
popa
daa
out
cmp
aam
sub
aad
and
les
or
cmp
inc
outsl
mov
loop
mov
pusha
fdivp
mov
imul
inc
es
and
sar
out
sbb
xor
and
lock
in
jns
movsb
in
sub
ret
mov
lahf
rcrl
loopne
into
jno
aas
into
add
insl
mov
push
cmp
scas
ds
fisubrl
mov
stos
movsb
jg
insb
jns
mov
inc
jnp
scas
adc
and
sbbb
shll
sub
ja
mov
mov
xchg
shrb
pusha
jp
jl
jecxz
sbb
mov
rorl
sub
scas
sub
jno
dec
aas
fidivs
cmp
sub
shlb
pop
mov
or
lds
push
daa
sarl
adc
sarb
ja
test
add
fisubs
test
cmpsl
vmovaps
push
pop
sbb
mov
int
fldlg2
cli
xchg
scas
sarb
pop
fimuls
mov
ljmp
jmp
bnd
add
mov
inc
stos
iret
es
enter
inc
sub
jnp
xor
loop
stos
mov
jb
jne
bound
xchg
shll
jp
push
dec
adc
cmp
cmp
cmc
cmp
jle
mov
iret
data16
mov
xchg
mov
loope
sbb
mov
lret
mov
mov
xor
xchg
xlat
popf
cmpsl
ss
inc
subb
mov
hlt
add
jo
movsl
inc
mov
lds
mov
sbb
xchg
hlt
push
and
std
addb
xchg
test
stos
in
je
sbb
int
mov
pop
jno
ret
movsb
daa
nop
inc
sbb
out
cs
lds
ret
ret
mov
test
push
in
outsb
mov
fldl
js
xchg
xchg
xchg
addr16
movsb
icebp
jns
out
test
inc
dec
pushf
mov
push
outsl
popa
pop
jmp
mov
sarb
inc
add
jmp
inc
out
popa
movsb
shr
aaa
xor
mov
mov
xorl
xchg
outsl
or
mov
jo
lret
xchg
stos
faddl
aad
mov
sarb
cs
mov
faddl
pusha
lock
inc
fnstenv
dec
aaa
xor
mov
mov
adc
dec
cmp
sarl
mov
jmp
test
daa
imul
cs
sbb
test
hlt
bound
push
lret
outsl
inc
fimuls
mov
lods
sub
or
sub
mov
sti
sub
aad
out
mov
loopne
data16
lods
jno
ljmp
sub
popf
mov
ret
xchg
mov
das
push
test
mov
mov
andb
cmovae
std
mov
fld
adc
movsl
ret
aaa
jmp
insb
xor
xor
mov
movsl
fisttps
cld
pusha
inc
int
sbb
jecxz
mov
adc
lods
hlt
icebp
popa
adc
dec
inc
rol
fdivs
packsswb
xchg
xchg
pusha
cwtl
jns
fbstp
movsb
fildl
pop
cli
fsubs
cld
adc
mov
cmpsl
loopne
sbb
sub
mov
addb
cmp
pop
xor
xor
mov
xlat
loope
jmp
xchg
mov
cmpsl
ret
mov
fisttps
insl
sub
mov
mov
std
loope
repz
lods
and
out
sub
aas
jno
pusha
iret
test
in
sub
pusha
scas
cmpsb
xlat
or
push
dec
jl
mov
pop
cmp
mov
pop
xor
mov
push
in
sbb
push
cmp
sbb
rol
fistpll
add
mov
or
stos
mov
js
fs
or
inc
mov
fbld
and
xchg
dec
aas
mov
loopne
add
push
mov
lods
mov
scas
fwait
call
insl
into
cmp
out
adc
scas
fldl2e
out
or
mov
pop
add
test
stos
mov
mov
sbb
adc
pop
les
lret
pop
push
sbb
stos
xor
push
xor
dec
push
inc
xor
int3
mov
gs
push
adc
ret
mov
and
aaa
sub
jecxz
mov
inc
mov
addb
stos
fldl
xchg
fildl
sub
sbb
cmp
or
lods
mov
cli
push
dec
mov
mov
sbb
fisubrl
das
data16
es
daa
jp
cmpsl
sub
sub
inc
out
and
mov
insl
dec
cmpsb
sbb
mov
test
jne
push
cmp
lock
mov
xchg
inc
push
adc
mov
inc
repz
test
mov
enter
mov
jnp
sbb
test
push
inc
loop
ds
and
addr16
push
xor
and
out
cmpsb
test
ret
xchg
mov
test
int
popa
sarb
shrl
add
lods
jecxz
fnstcw
ds
push
test
out
mov
dec
test
inc
es
ret
sub
stos
std
add
adcb
add
pop
sbb
sti
push
cmpsb
das
add
push
ret
pop
pop
dec
cmpsb
inc
shrl
int3
lock
lds
mov
sarb
sub
movsb
xor
cmpsl
outsb
call
mov
insb
popa
xor
ljmp
or
dec
cli
jmp
aad
mov
xchg
mov
jg
xchg
or
addr16
mov
sarb
fidivl
das
loop
lds
dec
filds
scas
sbb
sub
mov
repz
mov
push
movsb
mov
rorl
das
cmp
mov
push
loope
stos
into
xchg
lret
js
inc
inc
push
movsl
test
pop
pusha
push
in
data16
inc
inc
mov
mov
mov
lahf
popa
andl
sub
mov
fildll
data16
stc
mov
into
hlt
adc
mov
push
mov
insl
daa
shlb
test
ss
dec
test
mov
add
daa
mov
xlat
incl
mov
leave
loope
xchg
imul
sar
fldenv
stos
shl
cld
cmp
jmp
or
outsl
xor
cmpsb
xor
jle
mov
icebp
scas
mov
out
dec
mov
aas
lds
outsb
add
inc
iret
add
mov
mov
inc
push
or
mov
bound
xor
pusha
lock
sarb
mov
lods
mov
lds
pop
fcomps
dec
mov
xor
jns
mov
dec
cmp
dec
inc
mov
ljmp
inc
dec
int
mov
mov
mov
mov
sub
sub
ret
cwtl
in
ret
out
sbbb
sub
mov
xchg
add
ja
xor
mov
scas
xor
aad
stos
arpl
cmp
push
cmpsb
cmpsb
xor
mov
clc
mov
pop
push
imulb
push
xchg
les
mov
sub
cmpsb
jecxz
arpl
out
test
test
inc
cmp
inc
daa
pop
inc
inc
jns
stos
inc
push
mov
push
sub
mov
push
loopne
cmp
addb
sbb
pop
add
xor
jl
sarl
jb
mov
rcrw
xchg
out
shrb
ss
fstl
mov
jecxz
sbb
das
inc
or
jmp
es
ret
cmp
push
jae
scas
lods
mov
out
pop
sub
xor
dec
xchg
push
mov
aad
adcb
xor
movsl
ret
inc
cltd
sub
movsb
jns
test
xchg
pop
loope
lret
loop
shll
jg
inc
imul
jb
in
jo
xchg
ss
jne
jecxz
fiadds
inc
ret
jo
iret
das
adc
ud1
sub
test
xor
loopne
jle
xchg
icebp
shlb
fpatan
add
pop
ss
ja
adc
ficoms
mov
push
subb
push
pop
pop
loopne
daa
sub
roll
mov
test
scas
imul
out
jmp
lods
imul
and
aaa
fs
add
inc
stos
jecxz
mov
es
scas
mov
out
pop
xor
fsubl
sub
nop
pop
dec
enter
ss
mov
jns
scas
jge
mov
mov
xor
mov
jae
sbb
mov
cmp
mov
jns
pop
scas
popa
ds
xchg
jo
mov
imul
xor
xchg
mov
shlb
cmp
aas
leave
lahf
cwtl
mov
xorb
pushf
xor
pop
xor
xchg
nop
push
scas
sub
mov
mov
xchg
fstps
mov
add
mov
addb
xor
mov
hlt
xchg
mov
js
stos
incb
ss
in
jl
pusha
mov
mov
mov
sbb
mov
jb
inc
push
xchg
mov
push
faddl
mov
mov
xchg
xchg
push
scas
mov
push
fdiv
scas
mov
popa
and
inc
fistpl
xchg
mov
popa
imul
leave
add
jmp
dec
jecxz
lock
mov
adc
push
int
sbb
sti
lods
in
sub
or
mov
and
fwait
fiadds
scas
mov
mov
scas
mov
jns
ffree
fisubrs
mov
cmp
movsb
jno
cld
dec
mov
sbb
daa
cmpsb
es
inc
sub
gs
xlat
mov
push
cmp
cs
cwtl
add
stos
and
cli
addr16
loop
mov
mov
lahf
or
sbb
xchg
shll
push
inc
data16
in
insb
fistps
cmpsb
shll
xchg
out
psubd
test
inc
mov
lahf
sub
mov
xor
dec
daa
mov
movsb
mov
fs
out
test
movsb
or
mov
xor
mov
mov
sub
shl
add
mov
jecxz
sbb
stos
cmpsl
loope
loop
xchg
sbb
or
gs
daa
adc
xor
sub
jnp
sub
aad
pop
add
mov
popa
insb
jb
andl
dec
sub
test
jae
sub
rol
or
push
les
aad
clc
sahf
pop
frstor
flds
test
pop
mov
adc
insb
ret
mov
mov
ficoms
mov
frstor
xchg
mov
and
sbbb
clc
or
mov
inc
data16
ret
cli
and
jg
sarb
jg
jb
lret
mov
fildl
mov
lds
xchg
mov
mov
mov
sub
inc
fidivs
lcall
or
or
es
roll
fmuls
mov
movsl
mov
lods
mov
popl
mov
jo
call
push
cmpsl
xchg
and
mov
inc
jecxz
loop
imul
rcrl
sub
and
inc
mov
mov
cmp
scas
sub
fildll
mov
add
xor
idivb
inc
mov
fnsave
out
xchg
test
insb
sub
push
iret
cwtl
aaa
loope
push
jecxz
es
outsl
outsb
stos
mov
cli
scas
ja
mov
cmp
and
iret
fisttpl
mov
mov
mov
int3
adc
movsl
sbb
in
aas
aam
mov
mov
mov
mov
test
movsl
sub
repz
pop
in
lock
aas
loope
lds
into
int
jmp
and
xlat
loopne
push
jae
and
cmp
jp
test
clc
stos
xor
fistps
adc
push
out
es
daa
popa
mov
xor
popa
cmp
inc
cmpsl
dec
mov
xchg
popl
mov
fld
sbb
and
mov
inc
loope
inc
test
mov
push
js
mov
sub
xor
mov
add
test
popa
loope
pop
ja
hlt
aaa
daa
repz
pop
sub
adc
mov
xlat
mov
jle
cli
and
mov
shll
ret
inc
sub
mov
cmp
dec
mov
in
cmpsl
pusha
outsb
iret
ds
arpl
mov
scas
add
sbb
scas
mov
rcll
push
adc
inc
test
mov
aaa
shrb
sbb
inc
and
out
mov
push
dec
mov
ds
sub
loope
sbb
leave
in
aaa
jnp
adc
cmpsl
cmp
out
xor
mov
shll
add
mov
sti
sub
adc
xchg
add
mull
adc
aad
or
cmpsl
mov
fildll
xor
in
rcl
add
push
scas
movsl
jle
jp
cmpsb
outsb
xor
mov
out
lods
xchg
out
mov
call
gs
rcrb
mov
xchg
mov
dec
mov
pusha
inc
sub
mov
pop
dec
cmpsl
cvtpi2ps
adc
enter
lret
jp
dec
sub
movsl
cmp
clc
push
test
insl
int3
xchg
dec
xor
cmpsl
mov
sbb
imul
cwtl
outsb
sub
out
popl
mov
daa
aad
sbb
adc
sub
clc
mov
stos
jecxz
sub
mov
shrl
or
movsb
ds
jmp
cmp
cmpsl
jne
test
out
adc
scas
dec
mov
push
push
std
mov
cmp
add
mov
inc
xchg
and
sbb
test
inc
xchg
scas
ds
adcl
movsb
add
pop
leave
outsb
cmp
xor
outsb
int3
test
mov
dec
test
daa
jmp
pusha
inc
iret
mov
mov
bound
sbb
mov
test
out
pop
ss
lea
mov
repnz
push
mov
dec
sub
cwtl
es
or
cmpsl
mov
xchg
mulb
cmpsl
loop
jmp
cmpsl
sbb
shrl
jp
push
imul
call
loope
push
jge
scas
ss
leave
lea
shl
sub
aaa
inc
shll
in
call
cmp
jbe
pusha
cmpsl
inc
xchg
and
add
aas
push
imul
in
inc
mov
or
aas
fnstsw
sub
call
xlat
inc
ret
jmp
adc
and
scas
or
jmp
dec
cmp
and
int
and
scas
fs
fcoml
ret
fs
jmp
push
fs
xor
xor
or
mov
mov
enter
mov
fistpll
dec
jmp
repnz
addr16
dec
fldcw
adc
mov
mov
test
jecxz
jns
into
pop
aas
mov
dec
or
xor
pop
fsts
sar
movsb
lods
orb
pusha
mov
fidivl
iret
test
pop
push
inc
xor
pop
in
lods
les
jno
sub
or
xchg
and
dec
ljmp
jp
stos
pop
push
data16
and
imul
xchg
lret
ja
stos
clc
mov
bound
shrl
out
and
add
stos
pop
outsl
clc
sbb
lds
and
and
test
pop
fwait
mov
jne
xor
insb
xor
out
enter
fnstenv
mov
pop
push
xchg
outsl
jmp
jecxz
fst
test
cmpsb
cltd
mov
push
mov
stos
dec
outsb
mov
add
int
unpcklps
xor
xlat
fistpl
movsl
pop
cwtl
ds
test
pop
mov
mov
loope
pop
sbb
incb
mov
lret
add
and
lret
loope
mov
sub
sbb
xlat
popa
das
adc
imul
je
jp
xor
ret
int
lret
sub
mov
pop
test
ret
es
xchg
sbbl
mov
adc
mov
mov
push
add
and
test
sub
inc
mov
sbb
dec
movsl
cmp
dec
or
mov
out
test
aam
xchg
subl
cmpsb
fucomi
nop
sbb
mov
mov
push
ja
lahf
aad
gs
mov
das
dec
mov
pop
roll
ret
mov
jns
jb
stos
mov
xor
scas
das
repz
mov
fistpl
add
mov
jg
mov
jns
das
mov
push
inc
cs
in
mov
push
mov
xchg
inc
jno
push
mov
pop
rcr
fnsave
insl
xchg
es
ds
es
mov
sti
xchg
dec
mov
cmp
aad
or
and
mov
fistps
jmp
lea
roll
outsl
cmpsl
out
nop
cmp
or
shrb
mov
outsb
lods
mov
push
cmpsb
mov
mov
add
mov
lods
daa
jo
shlb
or
jne
mov
popa
xchg
xchg
pop
nop/reserved
ret
addb
scas
sbb
xor
shll
xor
insb
or
mov
ds
pusha
mov
in
fs
insb
ret
sti
cmc
or
xor
lea
push
dec
push
mov
pop
pop
mov
push
inc
rclb
mov
or
mov
mov
sub
mov
pop
outsl
insl
fistpll
or
fsts
mov
stos
aaa
inc
repz
popa
pop
lods
outsl
stc
xor
scas
fmulp
mov
jbe
or
mov
and
jns
mov
shrl
int
imul
roll
dec
mov
daa
leave
push
xor
ljmp
fs
test
fs
das
mov
cmpsl
jg
pop
jmp
mov
mov
aaa
and
jp
inc
cmpsl
std
push
ss
mov
inc
mov
stc
cmp
sbb
ret
sbb
push
mov
int
mov
inc
ret
xchg
mov
insb
mov
jae
cmpsl
xor
mov
mov
iret
or
xor
out
leave
out
mov
pop
sub
in
xor
pop
push
dec
out
mov
jnp
lods
mov
sub
jge
or
mov
sbb
data16
out
mov
roll
decl
popa
sub
sub
cwtl
ret
hlt
mov
scas
adc
movsb
push
mul
imul
or
movsb
hlt
dec
addr16
cmc
mov
rcrl
rcrb
lret
push
scas
xchg
fdivrs
mov
sbb
mov
xchg
mov
xchg
or
inc
in
mov
and
out
xor
jmp
movsb
shll
test
mov
test
lods
mov
jle
and
mov
sbb
jno
mov
push
shl
stc
movsl
lods
cs
mov
add
popa
scas
in
stos
mov
scas
add
xor
xor
inc
push
gs
cli
pop
leave
mov
mov
rorb
sbb
sbb
mov
sub
out
mov
cmp
pcmpgtd
inc
jle
inc
mov
sahf
push
or
fisubrs
test
jp
fdivl
ret
sub
mov
add
je
stos
sub
mov
lods
movsb
stos
sbb
mov
inc
fwait
and
pop
lods
rolb
or
lods
xchg
mov
sub
cs
bound
push
dec
iret
jmp
lret
dec
rol
mov
xchg
dec
rep
push
inc
jecxz
xor
xor
gs
out
or
ljmp
lret
sarb
xor
and
cmp
xor
sub
data16
jmp
dec
lahf
jns
or
inc
sti
jecxz
shl
and
scas
and
cmpsb
jmp
push
cltd
pop
mov
imul
ret
aam
das
mov
mov
imul
mov
mov
dec
or
mov
imul
cmpsl
xchg
dec
sbb
in
pusha
jmp
mov
icebp
rep
scas
pop
ret
mov
pop
mov
xor
mov
add
test
cmpsl
loop
scas
inc
mov
cmp
rol
sub
ficompl
out
leave
sub
push
imul
data16
stos
sub
ret
jne
lods
and
mov
and
aas
leave
insb
es
adc
imul
cmp
xlat
inc
jne
cmpsl
inc
das
scas
xor
xor
outsl
cmpsb
sub
sbb
shlb
fcomi
xor
in
ret
mov
cmpsl
es
pop
dec
push
dec
das
mov
pop
sub
shll
enter
mov
add
xor
mov
cmp
std
sbb
cmpsb
mov
xchg
fistpll
cmp
jbe
inc
add
sub
or
stos
mov
push
mov
jns
xor
clc
mov
lods
flds
sbb
mov
andb
fs
in
cmc
mov
popa
mov
lret
sbb
xchg
mov
push
stos
cmpsb
andl
cmp
clc
sub
mov
dec
out
imul
fistl
fcomp
lea
cmp
stc
mov
add
mov
sbb
ss
pop
sbb
pop
xchg
xor
push
aad
idivb
fstpt
add
aam
shrb
outsl
or
mov
mov
testb
mov
mov
xchg
shll
fsubrl
incl
shll
cmp
or
add
push
sbb
jbe
sti
decb
and
mov
jno
xchg
mov
daa
dec
and
xchg
loope
fdivs
or
xchg
ret
sbb
cmp
dec
cs
sarb
mov
xchg
cmp
test
fwait
sub
shll
int
ljmp
jp
cmp
xchg
mov
push
sahf
cltd
cmpsb
jnp
mov
cmp
pop
je
ret
sub
cmp
arpl
xor
outsl
xor
xor
add
ret
mov
int3
fdivs
push
movsb
fs
aad
sbb
lods
outsb
sub
out
xlat
dec
nop
push
es
inc
addr16
mov
les
add
into
mov
orl
and
mov
movq
xor
ss
xchg
sub
xsha256
cmpsb
xchg
lds
ds
and
jmp
xor
jb
push
leave
scas
push
fstpt
cmp
inc
lret
rclb
xchg
jg
clc
sub
loope
or
inc
jbe
sbb
dec
push
mov
lret
xlat
add
movsl
iret
iret
stc
roll
stos
xlat
mov
dec
push
xorl
dec
in
sti
xchg
movsb
cmp
and
loopne
pop
loop
jmp
andb
xlat
push
cmp
push
lret
int
cmc
nop
cmp
jmp
jnp
stos
mov
add
ror
push
cmp
inc
xchg
mov
push
cltd
test
pop
loope
lahf
sbb
inc
inc
xor
mov
xor
fildl
mov
outsl
andb
das
cmp
fstl
cmp
je
pop
fwait
stos
mov
cmp
xlat
mov
sbb
adcl
es
mov
mov
stos
mov
mov
mov
ljmp
mov
or
sub
sti
sbb
inc
mov
out
das
pop
test
push
pop
or
jo
mov
push
mov
fsubr
inc
lods
adc
ljmp
dec
fstl
adc
ret
iret
mov
push
mov
movsl
shrl
pop
movsb
in
stos
jle
cmp
mov
pop
sbb
into
mov
jecxz
adc
mov
push
popf
dec
movb
pop
sti
xor
mov
xor
xor
stos
mov
push
mov
cvtps2pi
inc
sti
frstor
mov
into
subw
cmpsb
das
aaa
cs
push
adcb
outsl
or
pop
dec
loopne
test
cmp
pop
in
mov
rclb
lods
iret
xchg
sti
fs
or
cmp
lret
sub
push
sub
scas
adc
sub
mov
enter
sub
shr
mov
fldenv
and
sub
mov
pop
mov
insb
sub
ror
mov
test
push
xor
fisttpll
jmp
inc
ret
sbb
std
add
addr16
lret
jbe
int3
lret
test
fistps
int3
sub
mov
xchg
xorb
daa
iret
cmp
pop
fdivrl
fcmovnb
mov
or
sub
lret
mov
movsb
dec
fmull
cli
xchg
ds
outsl
cmp
iret
outsb
push
mov
adc
xor
or
xchg
lods
mov
sub
mov
cld
es
ret
fs
das
enter
icebp
pop
add
scas
inc
rorb
into
pop
pop
shrl
mov
mov
mov
data16
orl
lods
xor
int3
push
mov
cli
sbb
pop
outsl
mov
inc
add
out
cmp
cmpsb
fsubr
sub
jns
inc
and
mov
enter
jae
fidivl
inc
jno
or
and
cmp
sahf
aas
push
loopne
stos
ja
cmp
out
jbe
lret
ret
das
hlt
lret
test
xor
mov
push
push
jmp
cmp
and
jb
outsb
cmp
push
sbb
cmp
ret
push
into
dec
dec
out
sub
cmc
fmulp
div
iret
repz
test
mov
daa
hlt
call
cmc
pop
jo,pt
outsl
mov
ret
mov
imul
test
push
scas
mov
push
push
or
mov
stos
sub
in
cmpsl
mov
fdivrl
daa
mov
mov
repz
lods
jnp
and
and
push
je
scas
mov
lret
pop
mov
inc
lds
cmp
and
mov
loop
hlt
popl
movl
mov
out
inc
vphsubdq
test
or
xor
add
cmp
mov
movsb
mov
cli
cs
mov
add
mov
cli
outsl
shlb
frstor
push
aam
sti
ret
cs
pop
je
movsl
dec
adc
mov
sub
daa
push
das
mov
xchg
sub
pop
inc
dec
add
scas
ret
mov
mov
into
lret
mov
roll
inc
pop
daa
aad
push
testb
popa
mov
test
in
cmp
xchg
ror
mov
shrl
inc
jle
push
sbb
mov
fstl
adc
cmp
aad
xlat
testl
mov
fiaddl
mov
add
int
sti
test
jo
dec
mov
stos
xorl
into
movsb
fldenv
pop
popf
sub
aad
sub
pop
sub
mov
js
mov
cld
mov
cs
cmp
pop
xor
xchg
sub
icebp
shlb
pusha
jo
mov
ret
cld
test
pop
adc
aaa
fisubrl
mov
or
in
mov
test
mov
mov
or
scas
scas
mov
fnsave
lahf
add
in
or
scas
je
sbb
sbb
fcoms
scas
mov
mov
mov
inc
loopne
gs
mov
leave
or
push
test
fisubl
mov
call
inc
sub
xlat
sbb
mov
loope
js
sbb
mov
test
mov
xchg
mov
aad
or
sub
lods
lret
fs
fiadds
movsb
mov
add
mov
aam
adc
jno
or
jl
mov
pop
lret
out
daa
addb
lds
xlat
xor
pop
cmpsl
lods
loope
inc
cli
std
dec
sub
fisubl
jmp
in
mov
or
inc
dec
cmp
pop
fsubrl
jno
inc
je
jmp
rorl
xchg
xchg
sbb
clc
xor
mov
inc
jne
adc
dec
mov
ss
or
nop
xor
and
xor
push
xor
xchg
cmpsb
jmp
mov
mov
xchg
pop
imul
imul
scas
out
repnz
pop
mov
out
mov
inc
dec
out
pop
mov
xchg
pop
aaa
fwait
sub
adc
scas
cs
sbb
mov
test
testl
mov
mov
mov
mov
mov
inc
movsb
rcrl
jbe
and
test
sbb
jno
push
push
add
mov
xchg
repnz
xor
fdivl
jg
mov
pusha
inc
in
cmpsb
fs
adc
ficoms
pop
lret
mov
push
out
fiaddl
dec
cmp
das
xor
jb
push
mov
xchg
sub
gs
or
mov
popa
xchg
sbb
pop
iret
pop
sub
insb
push
ljmp
sub
mov
loope
push
inc
xor
idivl
out
mov
test
in
icebp
mov
out
mov
fbld
iret
add
dec
sbb
int3
jb
nop
pop
mov
ss
fistpl
pushf
sbb
aaa
jecxz
xor
adc
sub
mov
mulb
jbe
popf
jp
out
cmp
lods
cmpsl
es
fld
mov
xchg
inc
mov
fwait
xor
xor
jmp
pusha
xor
mov
daa
mov
loope
clc
in
push
out
sub
fcom
dec
xchg
orb
mov
jmp
inc
lret
out
shlb
and
decb
or
xor
mov
out
mov
scas
pop
or
ljmp
shlb
ror
add
cmp
loope
clc
mov
add
dec
sub
jecxz
xlat
fadds
clc
iret
sub
jl
movl
or
out
roll
add
xor
daa
aas
data16
cld
cmp
inc
mov
enter
push
test
sub
and
cwtl
mov
les
mov
cmp
and
sarl
mov
add
loopne
pop
out
jmp
cmp
scas
pusha
fisubrl
fwait
xlat
ret
lods
adc
mov
jno
pop
lods
jns
inc
aaa
fstl
xchg
es
iret
xor
pop
pop
push
addr16
mov
xchg
xor
scas
jns
int
sbb
insb
mov
loop
pop
lret
mov
jno
jp
pop
cs
aaa
and
sub
data16
adc
out
shll
fsubp
mov
mov
fstpt
mov
sbb
in
adc
xor
mov
idivl
jg
in
mull
sub
test
flds
ficoml
cmp
add
je
repz
jb
es
neg
add
sahf
jae
aaa
mov
leave
mov
cmpsl
cmp
sub
jp
mov
mov
divb
mov
popa
into
mov
mov
cmc
inc
or
test
mov
insl
xchg
mov
mov
pop
add
xor
ret
jecxz
popa
mov
in
or
loopne
pop
push
fwait
out
cmp
orb
insb
mov
pop
scas
gs
loopne
xor
cmp
out
pop
dec
cmpsl
ret
mov
imul
lods
inc
lods
ret
mov
adc
xor
je
into
mov
loope
popa
je
out
sti
lods
mov
loopne
stos
inc
outsl
xchg
mov
adc
das
xlat
enter
adc
fwait
scas
enter
mov
into
lods
daa
mov
aam
call
in
shl
testb
mov
in
popf
aaa
fnstsw
xor
mov
addl
xchg
lods
mov
rorl
fstpl
xor
testb
pusha
into
jmp
stc
push
daa
dec
cmc
sub
aas
cmp
lods
mov
aad
dec
mov
inc
fld
rcrb
fdivrl
sub
inc
insl
dec
add
loopne
xlat
loop
cmp
in
mov
lret
push
add
fcomps
das
xchg
xor
rcrl
dec
mov
mov
sub
or
mov
ret
jp
scas
test
jb
insb
lret
out
movsl
lods
jo
add
or
jnp
jb
jbe
cli
sub
sub
xor
xor
movsb
xor
out
aaa
daa
int
inc
lahf
or
frstor
add
push
inc
lret
test
insl
push
xchg
rcll
cmpsb
mov
mov
insb
movsl
and
or
ret
aas
dec
rolb
jmp
mov
cmpsl
lret
data16
sbb
cs
insb
popa
into
cmp
push
jo
stos
mov
daa
orb
push
xor
add
xor
xchg
cmpsb
iret
cmp
and
inc
addb
xor
mov
mov
bound
jmp
mov
out
jecxz
ret
std
add
push
int3
mov
jl
stos
mov
add
ds
mov
add
inc
adc
pop
mov
aad
mov
pop
mov
add
adc
aaa
mov
test
xor
xchg
popa
loopne
stc
mov
jne
lret
mov
inc
sub
jecxz,pn
hlt
sub
mov
pop
jg
xor
add
cltd
jno
ret
iret
xchg
ds
xor
lds
fs
mov
lods
cmp
mov
and
mov
das
pop
dec
ja
mov
stos
addb
hlt
iret
daa
aas
mov
lds
mov
scas
aas
cmpsl
int
pop
jg
mov
mov
clc
popa
les
pushf
jo
lcall
mull
insl
mov
mov
jbe
add
dec
insl
imul
rcll
adc
mov
cmpsb
mov
movsb
mov
sub
sbb
or
lods
pop
jmp
and
push
mov
cmpsb
sub
aad
or
dec
cmp
mov
pusha
add
and
mov
inc
jne
cmp
cmp
jns
into
mov
inc
mov
xchg
in
mov
mov
xchg
sub
or
aaa
inc
push
cld
jl
fmul
mov
and
jge
cmovbe
adc
fs
movsb
imul
data16
mov
and
mov
cmp
aad
add
sbb
mov
xlat
mov
push
fwait
xor
loopew
cmp
pop
jnp
out
cmp
shrl
aam
insl
mov
std
insl
pusha
pusha
imul
mov
pop
in
aas
ror
add
xor
inc
mov
insb
outsl
jge
mov
je
push
cld
sbb
mov
daa
mov
jg
out
mov
popa
int3
and
scas
gs
cs
scas
je
fwait
shlw
push
xlat
pop
test
dec
adc
lods
mov
movsb
imul
adc
jne
clc
mov
in
sbb
push
dec
or
and
cmp
stos
cltd
mov
enter
pop
popf
daa
mov
jbe
xchg
out
mov
inc
xlat
sub
in
mov
or
xlat
es
push
into
sub
lret
int
jns
mov
into
mov
test
add
mov
pop
les
sarl
mov
lea
leave
pop
data16
mov
cs
popf
dec
mov
xchg
imul
pop
leave
mov
pusha
sub
fsubs
mov
cmp
sub
and
adc
add
lods
mov
inc
dec
dec
insb
leave
pop
cwtl
mov
or
fdivl
sub
pop
sbbb
push
mov
jbe
pop
outsl
cmp
cmp
test
and
aad
jne
imul
mov
xlat
xor
mov
jecxz
mov
xchg
or
mov
sbb
stos
cmpsl
lods
push
mov
clc
loope
loope
stos
shll
es
cmp
lods
aaa
inc
les
nop
das
jg
adc
mov
out
cmp
daa
lret
cmpsb
push
outsl
mov
mov
in
fldcw
and
xor
in
int
inc
divl
mov
jb
scas
das
sbb
mov
jae
push
cmpsl
jbe
or
or
mov
aad
sbb
ret
fstpl
test
mov
cmpsl
loope
jb
lcall
mov
and
int3
sub
clc
out
mov
out
mov
cli
sub
in
jg
mov
stos
fnstsw
popf
aad
ds
mov
adc
and
inc
shll
mov
fistpl
jle
mov
xor
xchg
ficompl
cmp
daa
aaa
bound
xchg
cmp
xor
add
mov
xchg
sbb
mov
mov
mov
xchg
jae
xlat
xchg
and
mov
out
sub
maskmovq
mull
jmp
cltd
mov
and
jns
cmpsb
out
mov
jg
mov
cmp
mov
adc
das
xor
jecxz
stc
or
cmpsl
leave
js
xor
ja
cmp
mov
sub
xchg
daa
das
push
inc
lds
cltd
lret
rcll
cmp
sbb
fcmovnb
out
mov
cmpsl
clc
add
xchg
inc
int3
mov
iret
and
test
push
mov
mov
out
mov
or
addr16
movl
cli
cmpb
mov
jge
mov
mull
addb
fistpl
jecxz
lahf
cmpsl
test
xor
or
das
jnp
inc
mov
fnstcw
push
cltd
lahf
into
cmpsl
sti
mov
leave
inc
jne
cmp
mov
in
xchg
das
jecxz
fisttps
in
mov
push
scas
sub
jnp
fsub
fdivrl
ret
rclb
adc
pop
inc
jecxz
mov
orl
stos
and
pop
addb
cmp
int3
push
push
dec
cs
jecxz
and
cmpsb
push
out
push
ret
ret
es
dec
clc
outsl
mov
cmc
aam
inc
xor
lret
and
mov
fcmovne
or
es
in
lods
xchg
pop
cli
adc
mov
js
ret
scas
dec
xchg
cld
or
mov
in
rolb
pop
inc
sub
or
addl
mov
lods
cmpsb
inc
mov
cli
sbb
sbb
inc
cmp
cmp
push
mov
stc
test
subb
test
int
ficoms
inc
mov
mov
les
mov
mov
js
pop
lds
cmp
mov
ss
xlat
ljmp
scas
jle
mov
sub
xor
clc
and
scas
ror
add
popa
lods
sbb
das
scas
mov
mov
add
addr16
push
iret
andb
ret
enter
into
nop
mov
xchg
sub
mov
mov
dec
packsswb
sbb
ret
enter
pop
mov
xchg
and
int
mov
popa
xlat
or
sbbb
xchg
mov
int3
test
or
fisttpl
lods
ret
sub
hlt
cmc
cli
pop
in
lods
fs
fisttpll
fwait
inc
lods
faddl
sub
mov
and
loopne
jmp
xor
ret
mov
leave
mov
iret
mov
or
and
inc
cmp
sbb
pop
mov
cmp
or
sub
mov
sub
inc
mov
int
loope
sbb
daa
jmp
xchg
out
movsl
aad
es
cmp
jge
mov
push
sub
loop,pt
cmpsb
xor
jle
or
or
out
jne
aad
popa
dec
ljmp
insb
inc
jno
in
loopne
fisttpll
inc
pop
aaa
ret
and
rol
cmp
lock
ret
imul
xor
shll
or
sub
mov
jo
arpl
sub
jb
lea
sbb
jmp
ror
sub
dec
movsb
xchg
and
jmp
lods
aad
shl
xor
lahf
mov
pusha
push
cs
jo
xchg
lods
enter
cmp
test
fstps
mov
xor
lods
inc
fiaddl
int3
mov
pusha
and
cmp
outsl
cmpsb
daa
aam
xchg
cmp
mov
mov
mov
frstor
out
fdivs
lea
pop
mov
push
pop
push
or
in
mov
fst
jns
ss
mov
out
mov
cmpsl
fldl
std
and
push
pop
in
fldl
push
or
mov
xchg
jecxz
and
scas
sbb
fnstsw
std
xchg
int
aaa
int
insb
into
fdivrs
mov
sub
loopne
jecxz
in
xchg
inc
aad
mov
inc
or
xchg
and
lock
mov
daa
mov
or
pop
in
ds
das
lods
mov
ficoms
push
and
stos
addr16
pop
popf
mov
rorl
loopne
pop
sub
stos
mov
incb
and
xorb
ret
mov
aaa
cli
inc
xlat
aaa
mov
mov
in
sub
xchg
mov
add
inc
ret
pop
rol
test
mov
leave
and
or
sub
mov
push
sub
and
xor
outsl
add
movsb
push
inc
mov
fisubl
pop
push
scas
cs
fcomip
sub
pusha
mov
push
cmp
and
push
pop
lret
subb
xor
pop
lods
movsl
cmpsb
add
inc
out
mov
push
ficoms
and
fwait
dec
pop
scas
loop
lds
jmp
shll
cli
xor
js
push
outsl
into
and
int
cltd
ja
sub
iret
mov
jnp
enter
lret
sub
sub
mov
fnsave
test
imul
scas
mov
scas
mov
or
jmp
lock
stos
mov
int3
sbbl
pop
filds
in
les
aaa
push
lcall
mov
inc
mov
xchg
cmp
xlat
scas
lods
sbb
shll
add
cmpsl
fdivrl
js
jmp
xor
aad
pusha
jno
xor
mov
push
mov
pop
cmp
scas
je
inc
inc
ja
jmp
test
mov
inc
fsts
into
push
repz
mov
or
adcl
fiadds
in
mov
and
pop
stos
dec
cmpsb
jecxz
mov
repz
in
sub
xlat
mov
jecxz
dec
cld
mov
jb
or
cmpsl
pop
inc
and
dec
mov
jl
cmp
lret
sub
shll
jo,pn
sub
aad
pusha
pop
out
mov
jecxz
sbb
xchg
mov
xchg
cmp
mov
push
jle
sti
aaa
mov
mov
mov
sub
test
cmp
popa
jno
ds
cmp
xchg
xor
ret
data16
sub
in
movsb
outsb
xchg
cmp
sub
scas
ret
insb
xlat
pop
jo
sbb
sahf
push
nop
cmpsb
lret
or
sub
outsb
sar
inc
lods
inc
inc
decb
aaa
and
lret
sbb
mov
mov
test
cmp
sub
rolb
mov
mov
xchg
mov
iret
shlb
fldenv
arpl
cmp
iret
call
sub
inc
cmp
pusha
dec
leave
mov
inc
pop
xchg
mov
outsb
cmp
pop
jmp
bound
and
xorb
lods
test
movsb
push
jnp
xchg
sub
sbb
fdivs
or
aas
jo
sbbl
call
mov
test
das
and
daa
xor
iret
xor
cmp
enter
cmp
xchg
xchg
xor
or
inc
sub
sub
xchg
lret
hlt
test
jb
inc
int3
jmp
inc
and
out
add
add
or
jno
data16
mov
xlat
jbe
ds
scas
in
inc
and
jle
insl
gs
test
test
test
cmp
pop
inc
and
lods
cmp
sub
jnp
mov
inc
call
daa
mov
or
ret
xchg
xchg
and
pushl
rorl
movsl
and
mov
mov
push
inc
adc
das
data16
sub
jb
mov
xor
dec
mov
shll
pop
sahf
outsl
xchg
jcxz
rcrl
es
insl
outsb
std
push
xchg
sub
ret
mov
jg
addr16
cmp
sub
mov
mov
and
dec
stos
rcrl
sub
fisttps
cmpb
inc
mov
cltd
lahf
mov
or
xchg
aad
arpl
mov
call
je
xchg
roll
mov
into
adc
ret
cwtl
test
push
or
fwait
dec
idivb
inc
pop
ret
in
shr
test
cltd
mov
push
sbb
and
addr16
shll
mov
mov
roll
decb
inc
cmp
mov
nop
out
xor
sub
stc
shrl
dec
cmp
or
mov
subb
in
mov
xchg
jne
mov
ds
scas
fimull
cltd
fs
ret
ret
inc
hlt
data16
into
cmp
loopne
cmp
lds
shr
xchg
pop
cmpsb
xor
push
movsb
into
cmp
sar
mov
jmp
sub
subb
sub
mov
pop
outsl
faddl
mov
test
cmp
mov
mov
das
mov
stos
add
mov
mov
jge
les
movl
dec
mov
inc
mov
in
mov
mov
add
movsl
rcll
sub
push
fmuls
lret
pop
xchg
mov
mov
inc
sbb
pop
hlt
sub
adc
cli
popf
inc
jmp
movsb
mov
xchg
mov
mov
popf
andb
lret
je
ret
ss
cmpsl
mov
cwtl
mov
bound
daa
mov
fldz
and
adc
pop
ja
xchg
pop
add
cs
int
loopne
out
cmp
outsb
daa
ret
adc
rorl
cmpsl
sub
sbb
movsl
add
cmpsl
stos
mov
fisttpll
enter
push
mov
inc
xor
mov
cmp
sbbb
adc
test
rol
ja
js
fistpll
mov
sub
mov
jecxz
cli
jp
ret
jmp
popa
and
hlt
mov
mov
movb
lret
xchg
mov
ljmp
push
mov
cmp
sbb
outsb
adc
mov
mov
pop
or
lret
daa
roll
dec
leave
in
mov
or
mov
sar
loop
lret
xor
out
bound
adc
in
ffree
shrb
in
mov
int3
xchg
cmp
sti
pop
dec
daa
xor
das
in
scas
xor
xorb
mov
jnp
inc
repz
mov
mov
xor
mov
sbb
cmpsb
sub
roll
clc
add
out
sub
mov
mov
inc
xchg
mov
cmpsl
leave
fbld
es
cmpl
cs
in
test
push
loope
imul
scas
fnsave
mov
push
dec
mov
push
mov
fildl
jns
stos
cmp
xchg
sarb
xor
inc
aaa
in
jno
jp
stos
mov
mov
int3
repz
xor
mov
xor
xor
mov
sub
in
jmp
adc
cld
fucomip
test
xchg
in
scas
loope
loope
nop
int
and
add
idivl
repnz
dec
dec
pusha
or
aaa
mov
mov
data16
mov
lret
mov
jae
xor
inc
mov
les
fadds
sub
aaa
or
xor
bound
data16
sar
mov
leave
cmp
mov
pop
stos
cmp
dec
jnp
mov
loop
into
mov
add
cs
lods
ret
xchg
pop
fstl
xchg
ret
std
sub
push
sub
gs
sti
mov
stos
imul
cmp
lret
testl
ljmp
cmp
mov
xchg
inc
popl
mov
jne
or
sbb
sub
gs
cwtl
imul
cmp
in
or
aaa
fcomi
mov
pop
stos
es
popa
rcll
out
xor
test
push
ret
dec
ss
mov
aaa
ds
ret
mov
stos
inc
sub
xchg
pop
or
dec
sub
cmpsl
lods
push
cmpsb
repnz
in
xor
jcxz
push
cmpsl
scas
pop
data16
scas
push
jmp
sub
xor
imul
in
dec
dec
mov
mov
pusha
hlt
stos
fstpl
lret
sarb
lret
pusha
xor
mov
jnp
sub
lods
xchg
mov
add
clc
movsl
xor
out
mov
jp
test
and
cmp
jb
pushf
jecxz
out
repz
rorb
iret
xchg
mov
jns
adc
push
shrl
cmpsl
mov
pop
mov
pusha
jecxz
xchg
les
jns
inc
mov
inc
xlat
les
iret
push
push
mov
jecxz
sub
mov
xchg
iret
jmp
fisttpll
cmpl
inc
and
mov
cmpsb
es
dec
mov
inc
mov
stos
mov
ret
loope
jle
jecxz
mov
ret
sub
out
jae
cwtl
push
mov
loope
idivb
mov
out
lret
loop
mov
sub
mov
int
ret
lods
cmp
fstl
out
and
mov
sub
cmpsb
jns
addr16
inc
and
mov
mov
pop
gs
mov
jp
arpl
dec
or
and
mov
movsb
cmp
xchg
aad
mov
add
and
clc
adc
sub
ret
lret
mov
das
inc
lret
sbb
es
loopne
and
mov
mov
xor
fucomp
fcomps
adc
sub
cmp
lods
ja
das
daa
aas
sub
int
sbb
cli
sub
or
js
daa
and
int3
out
outsl
pop
cmp
stos
roll
jp
ret
ror
xchg
or
mov
lds
lret
sbb
int
andb
popf
scas
inc
lds
xor
fisubrl
inc
and
cwtl
rcrl
pop
gs
fmull
inc
scas
push
jg
xchg
scas
ret
adc
cmp
lods
stos
shll
subl
sub
lret
loope
dec
loopne
cmp
orb
mov
mov
jmp
xorb
pop
or
or
pop
push
adc
scas
xor
popl
mov
add
pop
mov
pushf
mov
cld
add
mov
push
testb
push
stos
sti
cmp
add
push
mov
jecxz
push
fisubrl
sub
cmpsl
mov
adc
or
mov
mov
mov
nop
and
cmpl
movsl
adc
sbb
lret
shll
pusha
test
xchg
and
inc
mov
xchg
lock
jb
cmp
outsl
jno
mov
inc
lret
push
test
jo
mov
roll
pop
iret
pop
sub
xchg
outsb
rcr
in
sbb
lods
dec
push
lods
cli
test
lods
adc
dec
lds
imul
push
sub
and
add
imul
pextrw
sub
mov
fwait
mov
jb
xor
pop
aad
mov
mov
and
into
data16
inc
aad
test
push
shll
inc
mov
pop
or
cmp
ret
pop
jl
cmp
out
push
das
inc
sbb
out
jle
cmpsl
xlat
popa
rol
sbb
cmpsl
rcll
sahf
dec
aad
mov
jns
fsubrs
mov
les
mov
das
scas
push
js
ficompl
rcl
in
mov
ss
push
pop
jb
out
sti
inc
mov
mov
and
push
sbb
mov
adc
pop
lods
mov
cmpsl
or
outsb
movsb
ret
test
test
in
mov
rorl
scas
mov
into
cmpsb
in
lret
aaa
xchg
add
lods
ret
jmp
sub
iret
sub
ror
icebp
es
or
sub
es
sbb
cmp
or
loop
aas
push
mov
xlat
adc
xchg
scas
sub
and
cmp
mov
cmp
xchg
and
mov
mov
les
jae
scas
mov
pop
insb
inc
rcl
sub
das
ja
sub
lahf
stos
inc
bound
cltd
iret
insl
or
jl
out
test
jno
idivb
shlb
lods
mov
dec
outsl
mov
fstpl
xchg
daa
sub
int3
insb
daa
xchg
mov
stos
add
out
mov
mov
shl
aaa
test
out
mov
mov
and
inc
add
jecxz
pushaw
subb
andb
sbb
ret
int3
cmp
dec
cs
adc
cmp
jne
mov
mov
sub
cmp
sub
daa
out
xchg
hlt
xchg
mov
inc
movsb
ljmp
fiaddl
test
xchg
repz
jg
aas
mov
into
xchg
or
into
fiadds
popa
pusha
std
loopne
xchg
lods
mov
test
adc
mov
jp
or
cmc
scas
into
fs
push
jo
sbb
clc
cs
ss
xchg
mov
cltd
xor
sti
add
sub
xchg
pop
fiaddl
idivl
dec
sbbb
cs
mov
and
cmc
int3
lds
in
lods
inc
jb
push
push
jbe
sbb
cmp
flds
mov
lret
jno
xchg
push
xor
ja
test
idivb
popa
cltd
outsw
daa
xor
jecxz
push
dec
test
jb
jp
jp
fidivl
clc
push
flds
or
xrelease
ret
push
jno
int
adc
mov
lret
bound
int
xchg
mov
das
ret
cs
bound
mov
pop
add
testb
cmp
ljmp
out
mov
jle
fcmovnb
mov
in
xchg
aaa
jmp
movsb
mov
insb
lret
jb
cld
mov
xchg
les
mov
and
pushf
mov
cli
jg
mov
pop
leave
outsb
imul
inc
movsl
andb
mov
adc
movsb
jnp
aas
add
call
inc
fdivl
cmpb
lcall
scas
jns
int3
xchg
mov
pop
repnz
jnp
jle
daa
stos
mov
push
xchg
mov
jno
movsb
fwait
or
and
stos
inc
fcoms
xchg
mov
lods
inc
adc
fsubl
cltd
in
repz
into
arpl
sub
sbb
mov
xchg
movsl
mov
or
or
push
test
cmc
push
in
movsb
or
nop
jecxz
inc
xchg
xor
daa
aaa
aas
adcl
je
call
sub
int3
inc
mov
mov
pusha
jmp
rcrl
outsb
sub
cmp
xchg
dec
js
ret
push
fbld
and
mov
movsb
loope
adc
cli
sub
mov
adc
mov
sar
jecxz
sbb
cmp
stc
jnp
outsb
xor
mov
cmp
xchg
in
lock
fs
andb
mov
jg
mov
xor
mov
dec
sahf
cmp
frstor
cs
ds
cmp
sub
mov
clc
sbbl
add
int3
push
mov
roll
je
jl
cmp
mov
inc
inc
mov
flds
sahf
loop
mov
ret
jecxz
in
repnz
es
dec
sbb
xor
repz
lods
out
fisubrl
das
addr16
xor
std
and
idivl
add
in
mov
rolb
lods
aaa
or
mov
xchg
sub
rclb
subb
xchg
mov
dec
or
test
inc
stos
mov
pop
data16
cmp
cmpsl
lock
mov
cmpsb
mov
and
shl
pop
lcall
ret
lods
inc
fldenv
rorl
push
pop
pusha
outsl
ds
dec
outsb
test
test
jmp
mov
mov
mov
and
xchg
cs
cmp
sbb
mov
mov
pop
cmp
scas
mov
mov
mov
mov
mov
aad
in
unpckhps
jo
fmuls
lcall
sub
jp
add
sub
loop
iret
cwtl
rol
cmp
cmc
cwtl
xchg
iret
fnsave
mov
fsubs
push
cmpsb
movsb
mov
rcrl
aaa
lret
mov
mov
stos
lods
jns
lds
mov
lds
xchg
sub
fdiv
lds
call
or
mov
cmpsl
in
movsb
int
and
std
addr16
lods
roll
or
stc
mov
sti
mov
push
mov
scas
aaa
and
mov
fucom
xor
stc
cltd
movsb
xchg
test
mov
orb
iret
add
add
popf
stos
jno
dec
mov
popa
add
mov
es
cmp
push
dec
es
into
cmp
into
sub
xchg
popa
xchg
add
sub
xchg
xchg
and
shl
stos
sub
ret
daa
lret
cmp
cwtl
mov
mov
sahf
push
adc
dec
iret
out
mov
jecxz
ljmp
and
jg
cli
cmpsb
gs
inc
test
or
cmp
divl
lret
mov
mov
xor
jge
push
jns
outsb
mov
mov
xor
pop
fisttps
pusha
sub
inc
sub
mov
frstor
daa
cs
push
mov
aas
jb
jmp
push
repnz
notl
mov
xchg
cmp
test
ds
mov
adc
xchg
cmp
leave
xor
test
daa
push
lods
dec
adc
xor
sub
and
pop
ret
add
or
pushf
jge
lahf
mov
push
arpl
mov
inc
rcr
movsl
lock
mov
pusha
cmc
lret
pop
movl
jp
sbb
ja
mov
lds
cmp
sbb
bound
je
mov
inc
ucomiss
loope
shrl
shlb
jecxz
jmp
inc
sbbb
dec
shrb
fucom
mov
mov
mov
dec
jno
ret
in
sbb
mov
inc
mov
jb
cld
aad
fucomi
sub
cmpsb
and
or
andl
lock
add
sub
mov
xor
xor
lahf
loope
in
testl
movsl
push
mov
das
into
mov
dec
xchg
mov
mov
lret
ficoml
daa
cmp
aad
test
cmp
std
shll
mov
sub
loope
mov
or
js
and
cmp
xlat
int
mov
loop
test
lret
or
jge
stos
lds
pusha
repnz
inc
push
stc
or
mov
loop
and
rolb
in
sbb
enter
bsf
fnstcw
movsl
mov
pop
lds
mov
mov
fldl
mov
mov
les
pusha
loope
mov
cmc
cmpsb
testb
mov
stos
mov
or
cld
push
std
cmp
push
ja
xchg
inc
loop
mov
fistl
test
jg
mov
lret
fisubs
inc
mov
sbb
xchg
push
idivb
add
cmp
mov
sbb
xor
xor
pop
cli
sub
lds
jae
jp
mov
dec
or
mov
loop
mov
lds
add
das
scas
insb
cmp
test
push
hlt
or
add
movsl
lret
sub
lods
mov
pop
pop
mov
or
imulb
mov
jb
aas
jp
outsl
test
or
sub
scas
aas
cwtl
scas
xor
sub
movsl
cmp
push
ss
loopne
push
insl
sub
mov
mov
mov
imul
lds
clc
scas
inc
xor
cmp
ficompl
jo
out
inc
hlt
mov
jp
push
lods
loope
jmp
adc
pushf
xor
mov
jae
mov
adc
test
cmp
mov
popa
cwtl
movsl
cmpsb
lds
cmp
or
pop
das
xchg
pushf
test
lret
cmp
lcall
xor
xchg
inc
rorl
lds
cmp
in
mov
add
push
outsl
dec
mov
popa
xor
inc
cmc
adc
pop
xchg
mov
cmpsb
in
aas
out
pop
pop
xor
jp
dec
scas
fsubs
lods
insl
inc
test
in
cli
test
inc
cmpsl
mov
shll
outsl
hlt
mov
frstor
sti
stos
add
sub
push
int3
push
ret
fsubr
inc
mov
jns
and
xor
sahf
mov
cmp
jb
sub
fwait
mov
insb
mulb
pop
pop
mov
int
pop
or
test
leave
jmp
test
cli
cmp
xor
adc
daa
mov
lods
inc
icebp
add
xchg
movsb
leave
mov
xchg
mov
scas
call
ret
test
in
das
mov
roll
mov
mov
repz
enter
mov
in
sub
xor
mov
mov
mov
sub
sub
add
jnp
lock
js
sub
leave
ljmp
in
sub
and
xor
push
out
into
push
mov
aaa
cmpsl
cmpsb
lods
pop
and
aas
jecxz
ds
inc
cmp
cmp
dec
inc
xor
xor
and
inc
mov
and
xchg
das
shrb
aaa
mov
jmp
mov
decb
mov
adcl
mov
inc
sub
lret
in
mov
jge
lahf
lods
cmp
mov
and
fnstenv
cmp
push
mov
aaa
and
mov
adc
fdivl
sub
iret
mov
push
adc
sub
jecxz
mov
lock
jnp
cld
aas
jmp
jl
jg
push
daa
xchg
xor
shll
ret
sbb
fildl
mov
outsb
outsl
lods
mov
pop
mov
jne
xlat
mov
inc
jns
xchg
mov
and
xchg
sbb
jg
mov
loop
mov
jg
inc
dec
dec
inc
mov
mov
jp
push
lret
mov
out
and
stos
lret
addr16
cmpsb
and
mov
add
mov
pop
leave
and
movsl
and
and
sub
mov
daa
aad
pop
sbb
pop
dec
sub
pop
mov
mov
mov
mov
mov
cld
cmpsb
inc
call
data16
loop
fdivs
cmp
mov
dec
or
xchg
inc
test
cmp
rsqrtps
aad
sub
cmpsl
sub
and
outsl
xor
cmpsl
xor
cmpsb
xchg
mov
add
xor
pop
stos
es
and
inc
in
pmulhuw
sub
stc
and
xchg
ss
das
xor
xor
mov
dec
lods
xlat
mov
mov
lret
sub
push
leave
mov
or
test
inc
in
mov
lret
pop
addb
xchg
in
mov
jp
in
mov
std
iret
test
mov
inc
frstor
icebp
and
data16
cmp
ret
ret
int
mov
mov
lret
inc
popa
jl
jmp
das
cmp
push
add
aaa
call
movsl
data16
dec
mov
cmp
bound
fcoml
push
xor
xor
clc
rolb
fsts
scas
mov
stos
fmuls
mov
lods
mov
lret
jnp
or
and
shrb
push
popa
daa
lret
pop
adc
cmpxchg
int
and
lea
stos
out
sahf
xor
inc
movsb
jg
cli
adc
daa
loope
sahf
add
push
aaa
cmpsb
mov
inc
jp,pt
mov
mov
inc
mov
cmp
enter
cwtl
sub
pop
push
xor
mov
jl
movsb
mov
mov
in
sbb
pop
add
inc
sar
add
lcall
mov
mov
into
xor
hlt
rcl
repz
jnp
inc
daa
xchg
xchg
or
call
mov
mov
or
lock
ret
xchg
jbe
punpcklwd
mov
mov
lods
push
in
clc
mov
shll
inc
mov
and
mov
mov
int
mov
add
daa
push
stos
outsl
outsb
sub
inc
sbb
sti
dec
int3
mov
enter
pop
push
sub
scas
inc
mov
test
xchg
or
fcmovne
mov
add
pop
mov
inc
out
add
es
add
mov
sub
xor
ss
mov
mov
sub
inc
xlat
in
xchg
cmpsl
orl
add
xor
jnp
outsb
xor
loopne
mov
stos
xacquire
cli
mov
scas
in
sub
lea
dec
mov
mov
stos
fsts
iret
data16
adc
mov
in
subl
jecxz
stos
loop
aad
sbb
gs
xchg
dec
xor
ret
jp
xchg
sub
mov
lret
push
decl
mov
xchg
fstp
outsl
mov
lret
mov
in
inc
sbb
xchg
ss
aas
rcr
pop
pop
jecxz
and
rep
jns
data16
sub
push
ret
test
es
es
bound
mov
das
mov
mov
js
sbb
push
inc
cmpsl
fstpl
flds
pop
fildl
pop
sub
inc
or
addr16
push
arpl
push
mov
es
loop
sahf
push
ret
enter
cmc
mov
push
or
sbb
ret
fsubrs
bound
push
ljmp
in
ret
cmpsb
mov
ret
mov
ret
add
inc
pop
mov
shl
xchg
jo
xor
cs
fldcw
sarb
and
ret
push
subl
pusha
gs
jo
pop
pop
repz
dec
xchg
mov
or
pushf
test
rolb
pop
ret
loopne
dec
mov
aaa
data16
xor
mov
loope
push
mov
into
push
bound
sub
sbb
jne
cmp
or
sbb
pop
jle
ret
inc
fs
mov
jb
dec
and
mov
stc
mull
es
pop
ret
add
pop
sub
inc
addr16
cwtl
cmp
lcall
mov
cmpsb
mov
or
enter
xchg
inc
out
les
shlb
pushf
insb
mov
ret
xor
bound
inc
adc
test
sub
sbb
xchg
xor
inc
out
push
fs
ret
loope
stos
ret
mov
adc
enter
loope
sub
ret
xor
cmpsw
lret
ret
movsl
adc
out
and
call
push
jns
lods
pushf
lds
jae
and
or
ret
mov
sub
ret
push
cmc
test
add
inc
cld
mov
ret
cmp
fidivrl
test
push
adc
out
addr16
xorl
mov
es
test
fdivrl
and
addr16
ss
stos
or
xchg
xor
xor
dec
mov
mov
sub
stc
push
or
lret
fucom
cld
rorb
inc
dec
xor
sti
ret
andl
movsl
clc
mov
adc
xchg
xchg
inc
ret
scas
inc
into
incl
cltd
xchg
add
fiadds
cli
mov
sbb
lods
leave
mov
repz
test
repnz
ja
ret
xchg
imul
mov
std
inc
test
outsl
fs
orb
ds
cmc
ret
gs
xor
sti
ret
mov
adc
ret
lock
das
cli
dec
inc
sbb
mov
jne
test
scas
xor
loope
cwtl
mov
adc
cltd
jnp
ret
jbe
stos
in
popf
ret
adc
scas
push
mov
mov
push
jne
es
push
out
icebp
dec
repz
loope
xchg
ret
mov
adc
dec
cmpsl
lret
or
xchg
sbb
pop
lret
jle
cmp
ret
ret
shll
std
ja
mov
mov
push
mov
dec
dec
ret
cmp
push
fcmovb
jp
sbb
adc
fldt
movsl
ret
icebp
mov
push
inc
cmp
dec
pusha
mov
jl
xchg
mov
dec
pop
mov
cmp
out
ret
add
je
notl
outsb
fwait
inc
iret
cmp
insl
cmp
sahf
in
mov
or
enter
movsb
add
out
dec
leave
push
push
mov
ret
xchg
mov
push
jbe
ret
fildl
lods
xlat
out
ret
jg
clc
sub
je
das
out
mov
fnsave
in
pop
xchg
aad
push
imul
or
adc
in
nop
repz
sbb
mov
loopne
or
ret
movsl
inc
lret
stos
push
mov
pusha
lahf
push
mov
cmpsl
xor
jbe
test
xor
jb
gs
sub
jbe
lret
mov
add
rclb
or
cmpps
mov
mov
inc
push
cmp
enter
shlb
dec
aas
in
mov
les
nop
orb
cmpsl
imul
fdiv
sbbb
mov
out
stc
ret
jle
push
ds
scas
mov
push
fs
loope
and
inc
shll
ret
pop
shr
inc
jecxz
pop
mov
sti
sub
ret
adcl
repnz
mov
pop
insl
ret
cs
imul
jle
and
imul
adc
inc
pop
and
mov
jns
rorb
jg
cmpsl
sbb
loope
cli
mov
add
adcl
aas
repnz
xor
mov
rol
outsl
ds
push
ja
adc
pop
pop
in
test
cmp
int
loope
jne
pop
sbb
lahf
in
mov
pop
lret
jmp
jmp
push
ret
aas
test
inc
pop
mov
bt
push
or
in
test
faddp
insb
and
movsb
ret
push
leave
ljmp
push
sahf
outsb
jae
add
addr16
ret
mov
dec
ds
pop
mov
es
int
sbb
cmp
pop
jle
mov
ret
push
and
insl
and
test
dec
rorl
repz
cmp
std
loope
imul
sbb
stos
ret
and
cmp
idiv
ret
dec
pusha
ljmp
mov
retw
pop
aam
inc
idivb
pop
xchg
add
ret
ds
lcall
mov
out
out
pop
addr16
icebp
daa
mov
jle
pop
or
ret
dec
bound
jmp
jmp
xchg
mov
pop
fcmovbe
or
ret
imul
ret
dec
inc
pop
pop
and
mov
mov
jge
sub
lret
mov
cmp
xor
scas
flds
and
daa
mov
jp
and
movsb
mov
mov
fimuls
add
push
and
pop
out
xor
jb
mov
loope
fcmovne
in
inc
movsl
mov
ret
and
mov
inc
scas
push
and
xor
mov
cltd
mov
xchg
push
fimuls
mov
sbb
mov
cli
ret
int3
dec
cwtl
xor
mov
add
jno
push
ror
ret
fwait
mov
inc
or
add
pusha
mov
scas
xchg
jmp
int3
test
rorb
mov
push
movsb
xchg
push
ret
fsubs
lock
or
jp
daa
lret
mov
outsl
inc
add
sub
jne
jge
scas
decl
ret
es
push
fwait
aad
ret
fildll
lea
add
dec
and
inc
imul
lock
or
sbb
sub
xchg
dec
pop
push
nop
add
mov
clc
call
sti
add
jg
ret
mov
xchg
ret
aaa
andb
loopne
dec
iret
add
adc
or
jge
insl
add
scas
jo
dec
cmp
adc
mov
add
inc
add
cld
cmc
fldcw
sbb
movsb
inc
icebp
ret
rorl
insl
mov
bound
jmp
dec
movb
pusha
ret
add
rorl
lods
add
enter
jns
sbb
fimull
movsb
xlat
ret
dec
mov
ret
mov
in
rcll
ret
push
lods
jbe
faddl
cmp
or
mov
lods
ret
hlt
adc
pushf
arpl
ret
push
mov
jo
xlat
jno
pop
mov
push
ret
cmc
push
fcmovnb
scas
clc
rorl
cmp
xor
xchg
jo
push
lahf
lret
ret
js
movb
and
dec
test
cmp
push
xor
bound
test
ljmp
adc
enter
mov
data16
cmp
in
pusha
fwait
call
jnp
enter
data16
pusha
enter
in
dec
mov
xchg
ret
lcall
fldlg2
out
mov
in
mov
ret
stc
push
test
adc
fimuls
cmpsb
push
push
mov
into
jb
jne
adc
fildl
mov
ret
pop
rcrb
push
xchg
mov
mov
ret
jnp
xchg
fwait
mov
ret
mov
ret
push
lahf
pop
out
ret
xchg
push
int3
clc
push
bnd
cltd
ret
dec
call
sahf
iret
pop
xor
pop
aaa
adc
cltd
xchg
into
cwtl
bnd
ret
fldl
movsl
pop
test
add
adc
ret
push
mov
mov
js
enter
loopne
mov
mov
jns
mov
ja
pop
and
aad
jb
mov
out
loopne
or
jecxz
dec
xor
ret
out
jmp
inc
cmp
pop
popa
daa
xor
ret
test
mov
test
arpl
mov
sub
push
jbe
push
dec
cwtl
addr16
jae
bound
das
lods
stc
lahf
add
jb
cmp
jmp
ja
js
imul
mov
into
jno
imul
push
xchg
xor
dec
arpl
push
scas
jecxz
fcmovb
mov
sub
mov
divb
ret
pushl
ret
ss
mov
xchg
add
lcall
ret
add
jo
xchg
call
lods
push
pop
aas
scas
andb
ret
mov
xchg
aas
lds
ret
and
xlat
or
cmc
call
push
idivl
xchg
lods
jmp
loope
nop
shlb
dec
and
out
ret
inc
mov
jge
daa
bound
mov
xchg
fisttpl
aad
mov
shll
mov
out
repz
add
das
mov
mov
and
jne
mov
pop
out
mov
ret
cld
sbb
inc
push
xchg
frstor
xor
out
movsb
mov
test
ret
or
adc
jle
loope
in
sbb
lods
data16
xor
add
setns
mov
das
mov
mov
xor
inc
sbb
or
inc
dec
std
ret
cmp
xchg
int3
ret
jno
hlt
mov
mov
pop
xor
rcrb
mov
loop
xchg
ds
mov
dec
movsb
fdivr
imull
out
lret
sub
xor
jo
mov
daa
sbbl
ret
sbb
int
jnp
cmpb
cmpsb
jp
fadd
fcmovbe
dec
int
fs
ret
popf
icebp
lds
stc
in
ret
sbb
mov
push
and
jnp
mov
data16
dec
xchg
sub
imul
sti
cmpsl
sbb
or
mov
lcall
mov
jnp
addb
jne
loopne
sbb
ret
pop
clc
in
imul
cmp
add
ret
xchg
inc
rorl
push
jae
sbb
fdivrl
sbb
inc
push
ret
outsl
xchg
mov
jl
in
mov
mov
mov
add
push
push
ret
stos
mov
ret
cwtl
dec
jns
and
xlat
fstps
std
paddd
pop
out
pushf
jae
push
cmp
sbb
es
mov
inc
jbe
push
and
mov
and
adcb
inc
clc
outsb
cltd
jle
push
lds
fisttpl
dec
test
aad
lret
xchg
lods
inc
sbb
loopne
xor
xor
dec
jle
jo
notb
push
mov
inc
fsubl
in
icebp
movsl
imulb
ficoml
cmpsb
ret
ret
pop
into
sahf
lods
and
insl
cmpsl
cmc
fndisi(8087
push
retw
mov
adc
jbe
sti
push
jmp
lods
shll
ret
xor
enter
ret
in
push
sbb
loope
mov
leave
mov
push
mov
xor
ret
imul
inc
mov
mov
mov
cmp
jo
jno
mov
inc
fs
insl
push
lods
ret
enter
ret
push
pop
out
inc
das
sub
frstor
push
lods
inc
add
lret
neg
ret
ret
repz
mov
jbe
mov
popl
ret
sub
xchg
gs
sbb
mov
sbb
jp
ret
rcrb
and
pop
cwtl
xchg
rep
ret
scas
xlat
sub
and
mov
add
in
sarb
cmp
aas
jecxz
lea
lods
ret
pop
or
mov
xorb
ret
popf
lahf
cmp
xchg
insb
mov
or
cmpsb
jecxz
iret
inc
movzwl
sbb
jle
ret
in
imul
and
sti
mov
fldl
rorl
test
mov
and
mov
rcrb
xchg
ret
jbe
cwtl
push
lahf
ret
cmc
jecxz
add
mov
add
add
xchg
pop
cld
cli
mov
mov
insb
push
xchg
rolb
mov
ret
cmp
arpl
ja
xor
push
pusha
mov
ret
in
cmp
stos
jle
fstpt
decl
xchg
mov
ss
inc
mov
data16
cwtl
mov
mov
popa
notl
aas
dec
pop
cmp
mov
ret
ret
call
ret
cwtl
popa
test
xchg
inc
shl
into
mov
ret
fimull
xchg
bound
push
insl
mov
or
jecxz
mov
mov
dec
jge
xchg
loop
in
add
in
outsb
mov
data16
gs
inc
sbb
mov
mov
inc
xchg
pop
fmuls
xor
int
push
scas
inc
movsb
inc
sub
out
bound
pop
movsl
jnp
fnstcw
mov
into
test
jbe
lea
push
ret
shlb
addr16
ret
push
sarl
lahf
or
bound
ljmp
repz
and
sbb
stc
add
and
iret
out
jb
mov
xor
arpl
fmuls
popf
ret
movb
lds
jle
fsubl
cwtl
mov
ret
cmp
xchg
loop
daa
sbb
pop
test
cwtl
flds
mov
adc
push
lcall
neg
loop
test
stos
mov
out
ret
mov
pop
ja
and
gs
dec
dec
stos
lock
xchg
xchg
fcmovnbe
jmp
ficoms
cmpsl
mov
out
or
xor
dec
mov
xor
lock
cmpb
in
mov
ret
jno
mov
aas
dec
test
cmp
ret
inc
lds
daa
mov
push
sbb
and
icebp
ret
lds
mov
cmp
push
mov
mov
scas
in
stos
adc
sub
adc
jl
push
add
adc
adcb
sbb
xchg
stos
push
hlt
mov
out
xor
and
dec
ret
es
mov
push
inc
jnp
les
pop
push
lods
mov
adc
jns
ret
sarb
sti
js
cld
das
cmpsb
stc
ret
sub
out
les
ss
lahf
shl
push
sbb
test
pop
ret
inc
cmc
xor
inc
loopne
jae
in
daa
mov
mov
cmp
clc
ret
push
xlat
push
or
pop
sub
push
aam
pop
mov
sahf
leave
mov
insl
push
ret
dec
jbe
into
ret
adc
mov
call
cmp
aas
fwait
test
adcb
enter
shlb
sbb
mov
push
cmp
icebp
jno
imul
mov
test
push
js
pop
loope
ret
jecxz
stc
pop
mov
daa
xor
mull
test
pop
add
aam
push
stos
bound
cmp
int3
loope
ljmp
push
loope
sbbb
xorl
fnsave
enter
pop
negl
ret
ror
mov
cmp
bound
jle
int
int3
ret
pop
dec
sbb
lcall
pop
js
ret
dec
pop
push
xchg
adc
inc
dec
or
test
add
bound
int3
pop
out
mov
loope
rorb
push
inc
mov
pop
mov
shlb
ljmp
daa
adc
aad
and
std
ret
out
add
cld
jns
test
cmp
pop
loope
or
add
bound
jg
sbb
shlb
test
jp
and
outsb
mov
inc
pop
sub
mov
sbb
ja
loope
xor
inc
mov
ret
mov
sub
xor
mov
or
xchg
mov
lods
sub
rcrl
add
mov
push
add
xor
adc
aam
out
orb
push
add
stos
in
lahf
cli
ljmp
dec
cmp
lock
data16
xchg
aam
aaa
push
mov
push
out
inc
popa
lock
aas
test
sub
jecxz
iret
sub
mov
xor
std
cmc
sub
mov
loopne
mov
inc
add
pop
push
fisubrl
sbb
cmpsb
mov
mov
stos
out
lret
notl
cli
and
js
ret
push
repnz
lret
push
mov
sti
mov
out
ret
ret
add
inc
daa
das
movsb
sub
stos
out
lods
mov
jp
loop
jb
mov
mov
cmp
arpl
rclb
outsl
xor
pop
mov
jnp
testl
mov
jg
dec
adc
ret
sub
repnz
adc
inc
adc
imul
fidivs
popf
add
sbb
mov
dec
divl
ret
sarl
or
mov
iret
adc
ret
cmp
or
inc
out
loope
dec
mull
jno,pt
out
cmpsb
mov
mov
fsubl
push
leave
movsb
add
inc
shl
loopne
testl
mov
push
test
mov
add
and
nop
adc
std
sbb
loop
sub
sar
push
loop
pop
mov
push
ret
adc
lock
dec
ret
int
adc
jne
add
test
and
push
sub
dec
repnz
add
loope
in
dec
mov
push
xor
ret
or
jbe
cmp
ret
cmpsb
push
scas
mov
adc
pop
clc
in
aas
add
dec
fcmovb
dec
cmp
xchg
stos
mov
ret
inc
imulb
rorl
ret
xchg
mov
ret
or
ret
in
rorl
jl
addb
aaa
mov
ret
aad
inc
add
ret
mov
xor
mov
dec
mov
jns
test
mov
dec
pushf
rorb
xorb
push
ret
push
fs
ret
inc
stos
lcall
lock
lods
inc
insb
push
adc
mov
clc
mov
jo
push
or
fs
popa
pop
xor
and
dec
mov
rcll
orb
ret
xor
stos
fiaddl
jo
inc
pop
lret
mov
xchg
push
sub
inc
inc
idivb
scas
cld
xor
sahf
ljmp
fistl
popa
ror
scas
addr16
cltd
push
dec
notl
rcl
loope
sub
nop
lods
jae
mov
push
enter
rcl
ret
sbb
add
inc
push
pop
int3
push
addb
mov
ljmp
mov
mov
xchg
ret
out
xchg
stc
cld
aad
aam
push
ret
popa
and
jnp
add
bound
loope
into
fisubrl
shr
pop
or
or
pop
mov
xor
sub
pop
pop
insb
mov
add
adc
inc
ret
jno
ret
repz
ret
in
shrl
enter
lahf
jle
jecxz
push
shll
int3
xchg
inc
test
jnp
sbbl
mov
and
aaa
ret
mov
cmp
sub
loope
pop
add
cmp
adc
lds
stos
pop
cmp
ret
les
js
leave
out
ret
outsl
mov
ret
aaa
xchg
daa
mov
and
ret
divl
popf
pusha
jecxz
sbb
loope
xchg
mov
sbb
push
ds
jmp
jle
pop
addr16
addb
pop
mov
jb
int
shl
cmp
mov
adc
and
and
aam
fistpl
and
push
dec
cmp
in
sub
mov
or
mov
dec
cvttps2pi
push
ret
mov
int
ret
sbb
ret
adc
fisubl
add
xor
cmp
imul
sub
ret
jg
fwait
outsl
lcall
push
out
cld
lretw
push
pop
aam
daa
movsl
mov
add
ss
call
popa
pop
test
ret
pop
pushf
xor
cmpb
lds
stos
mov
or
fstpt
jp
mov
inc
push
test
sbb
fcmovb
and
push
ret
mov
pushf
jg
inc
mov
pop
jle
sub
mov
push
lret
ds
push
mov
or
sarb
jl,pn
xchg
mov
lcall
sub
test
jg
idiv
mov
cmp
loopne
push
sub
pop
stos
out
mov
je
ret
gs
sbb
adc
les
cmpl
test
je
sbb
lds
jns
sahf
imul
lock
dec
gs
cmp
lcall
aad
iret
stos
mov
ds
cli
adc
mov
incb
mov
pop
xchg
push
mov
fmull
stos
movsb
loope
push
pop
or
fcomi
fs
dec
mov
into
daa
push
loopne
popl
fldenv
mov
add
aaa
std
stos
out
dec
cmp
cmp
push
loop
and
pop
call
out
test
out
inc
dec
mov
jbe
xchg
loopne
mov
gs
cmp
pop
das
dec
add
adc
rcr
xchg
xor
lret
cwtl
xchg
daa
jnp
ret
jmp
loopne
push
and
cltd
adc
ret
dec
clc
ret
sbb
lahf
ret
mov
ret
sarl
outsb
lods
and
rol
inc
sbb
icebp
test
and
dec
in
cmc
mov
mov
mov
ficoml
out
mov
push
jl
inc
add
arpl
push
fidivrl
ret
jg
daa
jns
sbb
mov
cli
sbb
mov
pop
aas
insb
out
inc
imul
or
shrb
sahf
jmp
les
subb
jp
pop
ret
push
cmp
pop
das
inc
call
xorl
jns
aad
arpl
sub
mov
jae
ret
xor
roll
cmp
cmp
mov
inc
inc
push
dec
cltd
mov
negb
jge
or
roll
xor
add
xchg
es
fldt
leave
movsl
scas
sbb
aam
adc
movsb
mov
push
pop
loope
leave
cmp
pop
out
ret
jae
enter
ret
jne
sbb
and
fs
ret
sbb
lods
imul
mov
mov
ret
daa
inc
stc
pushf
xchg
mov
push
jo
mov
aam
js
sti
add
into
sub
push
xchg
or
scas
hlt
ljmp
ja
sub
mov
ret
filds
or
xchg
pop
pop
test
lock
pop
sbb
mov
jnp
lods
enter
imul
das
inc
int3
imul
cmp
or
es
scas
adc
sahf
cmpsb
leave
ret
adc
ret
inc
gs
add
xchg
or
ret
repnz
adc
jnp
js
lret
fcmovbe
jae
orl
inc
push
adc
cld
sub
mov
aas
lock
lods
call
mov
loope
insb
sbb
mov
push
je
inc
pop
fxch
stos
inc
cmp
bt
mov
lods
shl
mov
fisttpl
sub
jne
pop
stc
sti
sahf
sub
sub
cwtl
ret
jae
push
sbb
jne
or
cmp
add
mov
jne
aaa
sub
mov
cmp
loope
stc
xor
sub
xchg
ret
xlat
dec
bnd
jbe
xlat
arpl
xor
mov
movsl
stos
ret
addr16
movl
fwait
adc
pushl
ret
pusha
xchg
shlb
sbb
inc
cmp
jne
adc
aam
mov
mov
add
cmpsb
jns
das
lcall
aas
cmp
and
pop
nop
stos
lds
mov
ret
cmc
imul
bound
movsb
ret
xor
ret
pop
fiaddl
push
dec
ret
sahf
scas
out
bound
and
mov
popf
pop
ret
pop
add
mov
and
movsl
repz
scas
ret
test
sub
mov
ret
xchg
mov
mov
mov
out
loop
xchg
inc
mov
xor
cmp
push
jnp
add
xchg
shlb
mov
ret
ret
jmp
mov
mov
ret
je
add
fsubrp
ret
mov
lods
ret
cli
xchg
xor
dec
cmp
ret
addr16
popa
loope
ret
jle
iret
inc
call
adc
pop
rolb
out
jns
dec
stos
fbld
scas
ret
cmp
xchg
outsb
les
mov
bound
aas
movsb
jbe
pop
or
ret
lock
addr16
daa
out
mov
daa
outsl
negl
pop
int
mov
mov
add
pop
mov
lock
sub
adc
push
insl
xchg
cmpsb
xchg
scas
add
add
pop
dec
mov
sub
xchg
std
xchg
or
mov
cmpsl
lcall
adc
ret
dec
cld
lcall
pop
dec
sbb
jne
push
js
repnz
lods
adc
in
ret
dec
pop
and
mov
sbbl
rclb
xchg
sbb
mov
dec
ret
dec
bswap
fnstcw
ret
mov
adc
les
in
je
and
and
gs
add
push
lock
dec
add
add
test
pop
ret
mov
imul
cmc
push
daa
jnp
pushf
es
xchg
push
xchg
sub
sub
nop
bound
stos
sub
clc
cld
fwait
dec
push
dec
add
inc
das
xchg
push
lret
inc
mov
aad
shlb
sbb
arpl
jo
push
int
sub
sbb
xor
fstpl
or
lret
clc
mov
lret
leave
ret
js
div
cmp
xor
sahf
inc
pop
int3
insl
sub
xor
scas
mov
and
adc
sbb
hlt
imul
cmp
dec
mov
push
sub
inc
js
sbb
ret
in
jo
sub
ret
inc
fmul
addr16
lret
imul
push
stos
push
mov
andb
cmpsb
push
mov
mov
or
lea
ret
inc
lahf
pop
or
loopne
ljmp
dec
sub
mov
sbbl
mov
mov
es
loopne
pop
xor
cmpsb
cs
pop
inc
lahf
and
mov
int3
lea
mov
rorb
repz
add
leave
out
pop
sar
pushf
aaa
ret
jnp
fs
jg
xor
loop
loopne
push
addl
ret
and
mov
sbb
mov
rolb
lahf
cmp
push
sub
ret
mov
mov
and
xchg
cmp
mov
lret
sbb
lcall
add
loop
fiadds
mov
push
pushf
bound
or
push
test
mov
and
jecxz
inc
hlt
dec
and
pop
sbbb
sub
sbb
or
loope
sbbb
mov
adc
or
mov
fs
dec
outsl
xchg
ret
sbb
cmc
loope
dec
fnstenv
add
dec
in
andb
jge
ret
xchg
mov
push
imul
outsb
push
les
pop
cld
addr16
lret
inc
pusha
scas
std
shlb
movsl
pop
ret
adc
fisubs
jae
insl
aam
rcr
leave
push
ret
fnstsw
call
popa
dec
andb
pushf
test
std
add
mov
not
or
cmc
sbb
lret
dec
movnti
andb
movsb
cmpsb
scas
outsb
cmpsl
push
ret
dec
out
sub
mov
ret
pusha
pop
in
mov
adc
pop
jge
push
outsb
lret
mov
push
mov
and
jmp
push
inc
xchg
mov
push
call
jp
mov
popf
cmp
test
loop
lret
inc
mov
fildl
push
jnp
pop
inc
mov
dec
inc
inc
adc
cli
ds
mov
fistpll
xor
cltd
je
ret
lcall
adc
push
add
fcoml
repnz
mov
ret
xchg
outsb
fisttpl
fs
insb
sbb
fiadds
push
pop
or
dec
pop
inc
jg
ds
popl
jno
and
xchg
sbb
ret
xchg
lahf
fwait
dec
mov
insb
daa
xchg
fucomip
outsl
and
adc
cmpsb
push
ret
dec
enter
shl
std
jg
rcl
dec
je
pop
sub
cmpsl
push
ret
cmp
push
test
ret
jge
scas
adc
mov
pop
ret
dec
aaa
ret
adc
pop
repz
outsl
push
add
push
pop
cmc
ret
test
scas
pop
loopne
dec
pop
out
push
xor
bound
mov
adcb
mov
pop
loope
pop
mov
outsl
cmpsl
sbb
repnz
cmp
ret
mov
ret
sarl
pop
mov
fcomi
jmp
mov
or
cmp
shlb
mov
jl
dec
xor
and
cmp
and
ffree
push
pcmpgtb
inc
jbe,pt
add
mov
ret
mov
xchg
ret
out
mov
mov
loope
or
das
pop
jbe
ret
les
mulb
mov
or
mov
andb
ret
inc
fs
xor
inc
aad
rcll
sbb
in
stc
ret
arpl
xor
negl
loopne
lret
mov
and
cmpsb
push
mov
into
cmp
xchg
mov
and
xor
pop
lds
fstpt
sub
adc
ret
add
cwtl
jb
lds
pop
ret
fs
ret
out
sbb
add
call
cltd
imul
mul
in
ret
fldcw
ret
and
stc
fistpll
xchg
ret
frstor
and
mov
dec
stos
fs
aaa
jmp
into
aas
test
or
out
ljmp
inc
mov
mov
cld
ret
fbstp
enter
xchg
push
lea
testl
pusha
xor
lahf
fptan
jle
mov
push
ret
sbb
xchg
insb
add
in
cltd
pop
cmp
leave
xchg
mov
daa
push
scas
shll
in
shlb
pop
jg
bound
pop
shrb
ret
inc
leave
js
jo
ret
cmp
mov
push
dec
subb
fistps
cmp
xchg
push
push
mov
mov
inc
and
movsl
inc
sbb
adc
lret
pop
push
test
inc
jns
inc
loope
add
jb
loopne
lods
sarb
mov
and
ret
hlt
cld
testl
add
rolb
cwtl
and
shlb
movsl
pop
inc
daa
xor
stos
jns
add
sub
xor
fadd
xchg
dec
ja
insb
xchg
ret
xor
jg
repz
adc
mov
popa
arpl
add
xor
dec
push
adc
lahf
xchg
push
ljmp
or
repnz
jle
cwtl
fs
loope
jnp
push
mov
xchg
ret
data16
iret
aam
ret
mov
in
outsl
cmc
call
jns
in
cmp
outsb
stos
push
pushf
rcrb
mov
movsl
mov
ret
or
cmpsb
mov
ret
icebp
lret
xchg
je
pusha
andb
add
fidivrl
mov
ret
inc
das
out
bound
jb
add
ret
mov
push
std
jge
test
or
xchg
xor
js
dec
repz
in
inc
scas
and
sub
mov
mov
mov
fadd
cs
mov
push
lret
loopne
es
dec
ret
mov
jnp
pop
push
sti
movsl
std
sub
mov
scas
mov
ret
int
into
cltd
xchg
sub
popl
fiadds
ret
pop
testb
out
inc
bound
cli
int
mov
fstl
stc
xchg
lahf
sub
iret
adcb
aad
lods
ret
push
fsub
mov
outsb
scas
sbb
and
or
mov
xchg
movsb
mov
arpl
addr16
push
inc
sub
aam
test
inc
xor
pop
sub
lods
outsl
mov
fidivs
mov
adc
xchg
outsb
pushf
dec
ret
inc
sub
adc
popf
mov
jbe
loop
enter
shrl
sbb
push
cmp
ret
sub
cmp
enter
shlb
in
iret
xlat
stos
or
addr16
sti
push
or
dec
sub
push
insl
xor
shrl
ret
mov
ret
rol
adc
fidivl
dec
cmp
aaa
int
jecxz
add
shll
les
ret
mov
icebp
mov
pop
mov
mov
jl
sub
addr16
incl
ret
fistl
push
and
loopne
sbb
jns
test
pop
ret
sub
bsr
loopne
push
cld
test
ret
jnp
xchg
mov
imul
fsubs
xor
mov
pop
clc
and
test
xchg
ret
das
iret
fmul
mov
pop
ret
fisubl
mov
sbb
sahf
bound
sub
or
test
test
mov
cld
enter
jl
mov
scas
jne
lret
mov
imulb
imul
xor
sahf
jg
ljmp
xchg
scas
aas
in
ret
push
outsb
addl
push
mov
add
fs
sub
push
xor
adc
bound
ret
inc
in
mov
mov
scas
nop
adc
aad
popa
xchg
sti
daa
xchg
mov
es
or
stc
jg
ret
into
mov
ret
sub
adc
mov
jns
fisttpl
bound
test
jle
lret
mov
sbbl
notl
pop
and
mov
adc
and
xchg
rorl
mov
out
jl
lret
and
mov
pop
scas
ret
sbb
popf
pop
loope
aad
aaa
outsb
ret
scas
dec
ret
sub
sti
test
in
sbb
mov
pop
mov
aam
lea
ret
outsb
data16
push
ret
sti
jp
push
insb
das
idiv
ret
gs
in
iret
cmp
xchg
fwait
cld
jne
aad
ret
movsl
xchg
mov
xchg
ret
loopne
pop
jmp
mov
iret
es
sbb
pushf
jg
cld
mov
push
test
sbb
movsl
mov
pop
pusha
loopne
push
lock
cwtl
pop
and
ret
lds
xchg
xor
pop
mov
pop
inc
sub
and
scas
insb
sub
pop
mov
xchg
or
ret
inc
jnp
inc
ret
xor
mov
dec
scas
imul
ret
stos
xor
lret
pop
aaa
ret
call
push
shlb
mov
shrl
mov
pop
jb
aam
lods
addr16
add
sarb
push
ret
popa
and
cmp
scas
pop
loope
ljmp
or
cmc
push
stos
leave
bound
dec
or
inc
cwtl
sbb
xchg
rcrb
xchg
fiaddl
sbb
cmp
inc
out
cld
insl
inc
pushf
mov
cmp
or
mov
das
mov
and
inc
pop
inc
loope
sub
sbb
mov
int3
jp
or
int
dec
cmp
ret
insl
cld
adc
popa
fnsave
imul
ret
sub
test
lret
movsl
mov
ret
dec
test
inc
stc
push
ret
fs
cltd
sarb
je
stos
add
dec
xchg
out
ret
aas
sbb
outsl
cli
ret
xor
cmp
ret
test
lcall
mov
jae
cmp
and
push
inc
ret
cmp
lcall
dec
outsb
lods
sbb
fadd
fcmovnb
movsb
push
in
or
shll
cs
ret
and
fistpll
test
push
xchg
mov
int
out
push
mov
outsb
xchg
cmp
dec
ret
sub
inc
clc
popf
ret
mov
loop
loope
cmc
scas
dec
mov
jp
cmp
cmp
dec
bt
cmpsl
scas
pop
ret
adc
cmp
mov
ficompl
dec
sti
std
push
xor
xchg
mov
push
xchg
stos
pop
es
jle
loopne
push
mov
xchg
ret
xchg
xorl
sub
xorl
sar
scas
out
cmpsb
mov
dec
push
sub
insl
dec
gs
cmp
popa
std
mov
jl
stos
mov
je
and
andb
loopne
add
pop
fcoms
mov
ret
mov
jns
cmp
loop
mov
fstpt
enter
out
add
icebp
push
pop
jle
inc
es
inc
inc
xchg
leave
mov
mov
cld
or
pop
ret
test
lret
in
pop
ret
out
push
das
data16
ret
je
mov
cli
bound
shll
ds
in
mov
jl
xor
sbb
pop
ss
in
jo
scas
xchg
test
inc
mov
jge
pusha
popl
lret
loop
mov
xchg
sub
shlb
cwtl
pushf
ret
and
sbb
movsb
jns
mov
cmp
inc
cwtl
outsl
add
iret
add
aam
out
cmp
cli
mov
icebp
jae
push
arpl
sahf
enter
shr
mov
imul
ret
mov
mov
es
test
ret
fldln2
and
pusha
and
ja
jecxz
call
or
and
jo
ja
fstps
mov
lods
pop
or
push
mov
pop
loope
add
int3
mov
inc
imul
ffreep
movsb
cmp
pushf
or
pop
mov
xorl
lcall
lcall
adc
jle
ret
int3
stc
outsb
jns
sahf
mov
cmp
ret
popf
gs
or
inc
jg
xlat
adcl
fucom
mov
jns
adc
fs
push
add
pop
mov
cs
lea
mov
add
aas
rolb
loope
mov
vphaddbd
mov
cmp
add
sarl
hlt
jecxz
ret
mov
dec
dec
sbb
ret
jmp
lahf
xchg
pop
push
loopne
repnz
mov
shlb
jb
icebp
or
jle
push
xchg
scas
hlt
and
mov
dec
sub
jae
cwtl
jg
jbe
pop
clc
xor
cmc
pop
mov
mov
outsl
add
add
popa
out
fs
ret
push
clc
xchg
mov
mov
insb
jecxz
and
mov
enter
xchg
pop
loope
cs
bound
aam
stos
mov
imul
xor
bound
pop
xchg
ljmp
bound
push
ss
push
std
movsb
push
adc
aam
dec
jle
mov
inc
add
andb
mov
cwtl
dec
ret
push
xchg
pushf
sbb
addr16
add
or
and
mov
push
sbb
aam
jns
cmc
in
sub
xor
ret
loop
xchg
mov
lods
jg
jno
test
cmpsb
mov
int3
xchg
out
sbb
inc
lcall
mov
bound
mov
jns
data16
rol
and
inc
lds
mov
and
add
out
mov
insl
jp
ret
fdivs
sahf
mov
lahf
or
ret
aaa
cld
adc
sbb
out
adc
mov
jnp
fwait
aaa
push
cld
repnz
sub
scas
jmp
inc
sbb
ret
sbbb
sub
fidivrs
cmc
mov
sbb
roll
dec
repnz
into
ret
push
movsb
xchg
aad
mov
std
iret
lock
ret
and
out
fsubp
loopne
ret
sub
pop
ret
outsb
pop
sub
inc
or
jnp
clc
in
ret
mov
insl
loope
jbe
xchg
repz
ret
mov
stos
ret
ds
std
aad
clc
ret
xchg
scas
sub
ljmp
push
std
xchg
push
scas
movsb
aad
ret
fildl
ret
mov
xchg
and
pusha
in
xchg
rol
bound
sbb
ret
sti
test
dec
jne
mov
push
dec
out
xchg
loopne
cmp
add
mov
adc
or
in
ret
dec
xchg
mov
incl
rorl
mov
pop
sti
mov
in
jg
icebp
ret
dec
xchg
mov
mov
mov
sbb
mov
or
stc
sub
mov
bound
imul
lods
add
mov
cmp
push
bound
divl
cmp
dec
es
pusha
and
repnz
jecxz
ret
les
pop
das
lods
and
fcoml
je
clc
outsl
ret
push
fisubrl
aas
das
and
mov
mov
push
ret
add
loope
frstor
je
xchg
movsl
addr16
insl
movsl
jo
shrl
and
jnp
mov
stos
test
ljmp
xchg
push
mov
xchg
fistpl
sahf
mov
cwtl
insl
mov
jno
mov
scas
cmp
jp
adc
add
pop
mov
or
roll
jnp
dec
pop
imul
rclb
test
inc
push
or
es
dec
sbb
loope
xchg
mov
scas
add
mov
and
mov
clc
pop
and
popa
dec
icebp
mov
push
fs
mov
stos
mov
fadd
or
jecxz
ljmp
adc
sub
xchg
mov
jg
fisubs
enter
and
mov
fwait
divl
xor
pop
stos
fcmovu
scas
mov
ret
jle
pop
int3
push
and
ret
inc
pop
sbb
movsb
outsb
loope
pop
fnstenv
pop
dec
lods
xor
xchg
clc
xchg
ret
xchg
sbb
cmpsl
pop
ret
lcall
in
mov
push
ret
sbb
or
js
jl
rcrb
imul
xor
icebp
push
stos
aas
test
xchg
pop
cmp
adc
cmp
push
ret
sbb
clc
insb
mov
nop
stc
xchg
sbb
push
mov
jns
cld
pop
js
mov
inc
push
xchg
mov
ret
or
rcrb
int3
push
sti
and
ret
insb
aaa
pop
test
mov
sub
lds
cwtl
shll
out
int3
ret
test
mov
or
out
dec
ret
addr16
sub
mov
ret
sub
xchg
jns
mov
sbb
inc
repnz
cmp
sub
mov
inc
mov
fs
addr16
stos
push
call
mov
ss
add
xchg
lahf
shll
mov
pop
ret
call
rol
mov
pop
pushf
ds
addr16
push
jmp
movsb
adc
xor
cmc
xchg
aad
bound
lds
iret
in
mov
mov
adc
jo
xor
mov
bound
and
cmp
jge
add
lret
repnz
push
ja
ret
leave
xchg
adc
pop
ds
push
int
sub
mov
iret
mov
mov
fmuls
inc
jo
mov
test
or
xor
and
xor
mov
movsl
shll
ret
arpl
loopne
push
ret
mov
pop
cltd
out
testl
test
cmp
sbb
imul
ret
sarb
adc
sahf
xchg
add
mov
cltd
iret
in
mov
jp
pop
pop
add
pusha
dec
aad
stos
ds
mov
ret
sti
fsubl
stc
stos
movsb
loopne
dec
and
mov
ja
scas
or
daa
ret
add
test
sti
mov
pop
mov
mov
gs
mov
sub
xchg
nop
pop
popf
sbb
pop
push
loop
lret
xor
cmp
mov
and
out
jno
mov
ret
xchg
js
gs
dec
ret
call
and
mov
dec
dec
ret
std
xor
lods
and
mov
lcall
jmp
ret
sti
in
repz
movsl
ret
cmp
loop
inc
loope
xor
sbb
std
lods
jmp
inc
sbb
imulb
ret
xchg
jmp
ret
lds
inc
or
lea
and
mov
int3
icebp
and
movzbl
sub
es
or
cmpl
out
xor
cwtl
in
mov
int
jbe
fucom
les
and
dec
fs
cwtl
repnz
push
adc
ret
sbb
mov
rclb
ja
lahf
adc
fcmovb
hlt
insb
and
mov
push
je
ret
cmp
test
ret
stc
dec
lahf
lret
mov
mov
mulb
icebp
push
ret
cmp
and
add
insl
bound
adc
add
mov
sbb
inc
cmp
testb
and
push
sbb
rolb
xor
ret
sarl
in
xchg
scas
ret
sub
ret
jo
fsubrl
jmp
iret
xor
sbb
jnp
enter
pop
xchg
ret
and
jmp
cld
mov
imul
addr16
lock
mov
pop
ret
jns
jne
cpuid
add
cmpl
dec
ret
int
pusha
pop
fldl
jmp
jnp
add
xor
mov
pop
sbb
ret
inc
sub
lea
movsl
fbstp
ret
jnp
pop
adc
imul
xchg
ffree
daa
or
add
in
dec
xor
pop
ret
testl
outsb
js
jle
shrb
mov
adcb
lock
ret
adc
ret
jo
jne
test
les
sbb
outsl
je
and
aaa
add
lahf
cld
mull
mov
push
lods
loop
test
ret
and
js
outsl
ret
pop
cmpsb
dec
imull
rol
std
mov
mov
in
ret
push
mov
or
push
jnp
lods
bound
cmpsb
lret
iret
movsl
insb
cmovae
notb
mov
cmpsl
loopne
mov
gs
repnz
cltd
jle
nop
push
and
xor
jge,pn
loopne
and
imul
and
ret
xchg
pop
xchg
xor
je
pusha
pop
leave
inc
mov
xchg
jbe
aam
inc
dec
ret
in
andl
cs
add
ret
jo
pushf
inc
andl
addr16
xor
lds
gs
std
cmc
and
outsl
add
lcall
mov
das
cmc
out
sbb
test
out
mov
inc
mov
lds
in
popa
mov
or
mov
xor
mov
xor
shrl
ret
ret
mov
mov
cwtl
call
mov
inc
das
ret
fisubs
cld
pop
icebp
dec
ret
push
add
ret
jno
jnp
cmp
movsl
cmp
ret
ljmp
inc
push
fmull
dec
call
outsl
insb
je
hlt
xor
mov
dec
cmp
sbb
insl
or
pop
fs
daa
ret
cmp
ret
jno
fnstenv
mov
and
pop
addr16
out
test
out
ret
data16
loop
test
and
pop
in
fsubl
popa
daa
xor
lret
jbe
sub
les
xchg
xchg
inc
daa
scas
mov
test
ret
outsl
inc
aam
int
ret
mov
fistl
loop
pop
icebp
mov
cmp
loop
push
xor
ret
cli
cmpsl
push
pop
bound
out
loopne
push
dec
imul
imul
lods
arpl
xchg
xor
dec
add
stc
sti
aam
mov
dec
rcr
xor
push
bound
sub
out
mov
and
lahf
dec
lret
in
lock
loope
add
adcl
ret
ret
cmpsl
lods
cwtl
and
mov
cmpsl
jecxz
mov
pop
mov
jl
adc
fmuls
ljmp
das
ret
push
lods
mov
pop
fistpl
test
mov
mov
push
pop
iret
fwait
mov
fisttpl
enter
jne
clc
nop
es
jg
inc
cld
das
and
inc
repz
pop
ret
and
adc
push
in
ret
mov
push
pop
pop
out
das
push
xor
mov
pop
lret
ret
sub
lcall
mov
adc
ret
push
mov
ret
test
ret
lret
divl
push
and
mov
pop
or
sahf
and
mov
fistl
xchg
adc
ret
std
fdivrl
add
xchg
ret
or
xchg
enter
rcr
mov
ret
movsl
out
push
dec
in
inc
ret
nop
test
xchg
imul
cld
fstps
cmp
xor
decl
stc
sub
movsl
ret
scas
sbb
mov
xchg
mov
push
rol
xchg
into
fnclex
sub
pop
or
lock
ljmp
adc
sub
sbb
sbb
ret
jbe
jmp
call
ret
pop
cli
mov
sbb
jle
pop
xor
xor
mov
mov
mov
ret
daa
ljmp
fldl
fildll
ret
imul
popf
cmpsl
pop
ret
push
jge
aad
ret
mov
in
je
bound
mov
call
mov
xor
outsb
mov
orl
dec
add
adc
xor
dec
or
jmp
test
dec
pop
movsb
addr16
add
repz
int3
mov
or
in
ret
and
loopne
sub
adc
ss
cmp
inc
fnstenv
jns
in
sub
lds
add
cld
xchg
mov
and
rorb
mov
sub
jecxz
pushf
push
repnz
arpl
mov
fwait
sbb
imul
mov
jp
ret
daa
mov
ret
in
ss
pop
ret
pop
test
aam
ds
adcl
add
cmpl
ret
popa
adc
dec
aas
xchg
ret
pushf
push
ret
lds
pop
mov
xor
ret
aaa
push
aam
ss
xchg
daa
inc
pop
xor
loope
sbb
fimull
cli
ret
movl
out
push
mov
add
adc
imul
lret
inc
mov
mov
and
jmp
xrelease
ret
push
inc
sub
leave
ret
cmp
ss
aam
mov
js
ret
mov
cld
repz
dec
push
mov
adc
mov
jnp
test
pop
outsb
movsl
adc
test
sti
inc
jb
fdivs
ret
cltd
and
ret
aas
cmpsb
mov
sbb
dec
xchg
and
sub
xchg
cmp
in
cli
iret
ret
mov
lahf
inc
pop
mov
sahf
xchg
cli
ds
sbb
out
and
pop
ret
push
pushf
movsb
lret
ret
lret
mov
cmpl
mov
fcoms
add
adc
popf
adc
std
movsb
ja
dec
sub
sub
inc
cltd
popf
pop
nop
and
ljmp
inc
cmp
js
out
nop
mov
subb
leave
shll
xor
or
cmpsl
ret
orl
sub
outsl
cmp
lret
fdivrs
xor
add
lds
ret
xchg
mov
ret
sbb
clc
fisttpll
dec
ret
push
cmp
imul
ret
sub
mov
icebp
cld
movsl
mov
push
cmp
mov
mov
pop
in
mov
ret
xchg
xor
ret
push
add
cltd
xchg
ret
imull
ret
jno
mov
andnps
mov
push
shrb
ds
dec
stc
loop
loopne
scas
mov
inc
aad
add
pop
dec
adc
jg
clc
push
add
push
push
sub
iret
in
mov
ja
dec
mov
jnp
pop
rol
mov
sbb
lods
add
pusha
push
mov
nop
xor
test
and
ret
mov
mov
negb
dec
push
sbb
ret
xor
or
out
ret
das
fwait
adc
and
bnd
lods
test
push
dec
mov
push
jp
jbe
stos
push
ret
enter
sarb
push
sbb
mov
inc
ret
mov
and
jno
outsl
fldcw
xor
mov
cmp
and
mov
fwait
sbb
mov
repz
jmp
mov
sub
fs
sbb
mov
sub
xor
lret
fnsave
xor
ret
sub
ret
andl
and
adc
adc
or
out
pop
sub
cmp
lahf
nop
cmp
idivb
mov
cwtl
mov
std
fcoms
ret
add
push
jno
pop
lods
dec
addr16
xchg
xchg
dec
es
mov
xchg
pusha
frstor
jb
jnp
pushf
jl
ret
popf
out
pop
xor
ret
into
scas
repnz
jo
mov
fnstsw
sub
dec
pop
cwtl
lret
add
push
and
jmp
cli
sbb
sub
mov
in
ret
pop
iret
mov
jb
ja
shl
outsb
roll
and
cmpsb
pushf
hlt
mov
jb
pop
out
pop
xchg
cmc
ret
cwtl
out
jae,pt
ret
loope
cltd
inc
mov
or
sub
mov
pop
cld
dec
sub
push
add
decb
cmp
adc
dec
mov
arpl
jecxz
xorl
pop
sbb
pop
dec
pop
mov
divb
sub
mov
pusha
xchg
adc
data16
add
fstpt
ret
call
es
aas
cs
jo
ret
and
lds
xchg
popa
jmp
cmc
fs
fbld
scas
jne
mov
aas
jae
sub
mov
fisubl
sbb
popa
test
xor
leave
sub
and
mov
in
fcmovne
pop
dec
pusha
stos
pop
sub
loop
aas
in
repz
fiadds
into
std
ret
mov
inc
sbb
jp
sbb
ret
jo,pn
popl
mov
xchg
test
les
pushf
xchg
das
mov
jnp
xor
xchg
repz
movsl
rcll
mov
ret
inc
nop
pop
lea
ret
je
xchg
lods
ret
scas
cli
mov
sbb
bound
cmp
mov
fists
xchg
shll
mov
in
mov
pusha
gs
mov
ss
ret
inc
cmpsl
loopne
jg
roll
add
fsubrl
movsb
lods
cmp
mov
dec
cld
pop
daa
add
jnp
outsl
jb
mov
loope
mov
repnz
push
scas
push
dec
pop
ret
sub
mov
push
outsb
ret
scas
insl
push
call
inc
out
sbb
mov
subl
ljmp
add
push
cmpsl
leave
cli
stos
adc
ret
inc
sahf
dec
in
sub
and
xchg
loope
adc
cmpsl
adc
mov
adc
es
xchg
jnp
or
daa
lock
mov
mov
test
xor
stos
sbb
jp
inc
ret
dec
sbb
test
pushf
mov
and
add
adc
and
out
add
ret
inc
nop
pop
int3
lcall
inc
movsb
xlat
pop
out
mov
mov
subb
push
shll
loope
ja
adc
cmp
add
les
ret
adc
sbb
stc
cmpl
cmp
fmul
adc
fwait
into
ret
add
sbb
in
repnz
loop
or
call
pop
jno
xchg
cmpsb
jmp
pushf
aas
or
out
add
add
out
mov
add
insl
cmp
mov
inc
pop
scas
mov
enter
icebp
out
mov
cmp
and
xchg
mov
adc
add
or
in
insl
lods
loope
nop
add
add
clc
push
cmpsb
rcrl
fcmove
fldcw
cmc
or
and
aaa
stc
cmp
xchg
ret
mov
sbb
repnz
fs
push
stos
and
mov
add
pop
sbb
sub
mov
mov
dec
imul
fisttps
sbb
stos
stos
aam
inc
ret
div
adc
daa
ret
cs
mov
lahf
mov
cwtl
popf
mov
lret
adc
sbb
add
push
add
je
ret
adc
insl
sub
jg
ret
xchg
or
in
cmp
repnz
pop
pop
adc
cmp
adc
jns
xor
xchg
aaa
rorb
push
test
sub
adc
jle
cmp
test
sbb
cmpsl
mov
dec
pop
xchg
ret
je
sbb
sti
cs
pop
lock
popa
inc
rcll
or
adc
or
sbb
and
mov
hlt
inc
int3
mov
loope
mov
test
jae
ret
loope
call
js
or
adc
add
pop
call
sub
xchg
inc
rol
insb
out
ret
or
cmpsl
adc
fadds
repnz
arpl
mov
add
sub
mov
xor
jae
mov
stos
in
pop
pop
cmc
leave
arpl
inc
xor
pusha
mov
idivb
imul
jmp
add
stos
mov
iret
inc
jns
popa
pop
ret
enter
mov
es
addr16
ret
mov
adc
or
cmc
adc
inc
aad
xor
inc
stos
daa
jae
pop
push
lcall
mov
and
test
add
dec
cmpsb
rcrb
inc
pop
ret
and
fadd
in
jge
sarb
jae
xchg
cmc
mov
push
mov
aam
inc
daa
clc
stos
bound
lahf
sub
stos
jp
xchg
pop
ret
daa
adc
mov
ret
cld
cmp
rol
xor
inc
loopne
pop
mov
fmul
cmpsb
aaa
inc
movsl
push
test
lcall
scas
ret
xor
dec
ljmp
push
stos
sbb
push
ret
mov
aad
or
cli
inc
inc
mov
fidivrl
sahf
mov
xchg
jnp
and
movsb
iret
insl
push
call
jle
les
mov
dec
sbb
ds
add
pop
or
adcl
imul
test
ss
call
lahf
pop
stos
test
ret
outsl
or
sub
cmpsl
ret
mov
inc
ret
std
out
mov
cmpsl
stc
add
push
cs
mov
pop
xchg
add
loop
dec
adc
addr16
xorb
cmpsb
ret
loopne
sub
add
int3
gs
ljmp
cmp
mov
sti
scas
xchg
ret
adc
push
xor
ret
jle
pop
andb
mov
mov
adc
in
ret
dec
or
les
movsb
jbe
ret
push
push
lods
push
pop
ret
push
xchg
in
jge
dec
cmp
pop
cmp
in
mov
ret
std
jne
cmp
ret
and
inc
jg
jl
mov
stos
lcall
mov
xlat
addr16
mov
test
roll
mov
dec
push
ret
inc
and
push
mov
daa
lods
sub
sub
clc
popf
out
push
ret
jmp
es
xchg
mov
inc
jg
ja
decb
ret
inc
jnp
loop
ret
mov
push
ret
iret
xor
cld
xchg
mov
out
icebp
lods
mov
push
push
mov
ret
push
dec
jno
xor
mov
mov
cmp
fstpt
or
push
inc
or
adc
mov
fbstp
loope
mov
fwait
test
nop
fisubrs
mov
ret
cmp
popf
in
and
push
mov
movsl
add
jle
nop
in
xchg
inc
imul
jae
stos
sbb
sbb
stc
fsubs
test
and
and
sub
fs
xor
cmp
test
or
scas
mov
pop
sahf
sub
add
mov
mov
jmp
jno
mov
push
add
addr16
stos
call
lods
ret
push
enter
jae
lahf
movb
sbb
mov
pop
sbb
ret
push
sbb
ret
aaa
enter
xchg
ret
jg
cld
stos
frstor
mov
add
in
iret
icebp
sbbb
pop
cmp
or
ret
pop
add
mov
sub
inc
mov
incb
test
cmp
xchg
lret
push
mov
mov
inc
ret
mov
aaa
aas
lea
dec
inc
outsb
fbld
jb
or
std
push
test
and
stos
int3
hlt
stc
mov
ficompl
lret
das
cmp
pop
jae
and
stos
cmpl
ret
xor
sbb
sbb
insb
out
ret
aaa
xor
mov
mov
in
adc
and
shll
movsl
mov
test
mov
push
test
imul
dec
fisubrs
ret
int
jg
fsubl
sub
push
xor
xchg
ret
mov
jb
repnz
std
mov
pop
popa
cmpsb
enter
addr16
stos
pushf
fildl
bound
mov
mov
ret
cmpsl
outsl
xchg
inc
ret
ljmp
mov
aaa
rclb
movsl
xchg
add
inc
mov
insb
inc
ret
addr16
and
mov
testl
loopne
push
aaa
mov
jno
ret
jge
push
inc
lods
jle
movsb
sub
push
dec
mov
ret
bound
ret
sbb
fwait
or
inc
and
inc
je
xor
shll
mov
jns
ret
fcmovb
jmp
hlt
adc
mov
mov
mov
inc
ret
aas
xor
shll
ret
or
sbb
adc
and
mov
mov
xor
into
xorb
cmp
pop
loop
test
mov
xchg
in
mov
roll
repz
jmp
test
mov
jnp
shrb
mov
testb
sub
stos
jmp
fs
jecxz
pushf
daa
and
test
ror
lahf
int
ret
idivl
adc
std
xchg
add
dec
test
sbb
sub
sti
push
push
cmpsb
mov
scas
mov
popa
popa
fsubr
push
mov
dec
icebp
lcall
xchg
inc
lods
push
pop
or
jp
shl
test
or
sti
push
push
sbb
dec
cmp
ret
sarl
fwait
ret
cmpb
inc
adc
es
lahf
ret
adc
push
jbe
mov
mov
shrl
sbb
in
sar
add
sbb
test
and
and
mov
dec
out
and
inc
dec
iret
fs
data16
aas
adc
sbb
movsl
inc
aad
repz
stos
and
jge
imul
out
je
ret
rcll
inc
es
sti
xchg
movsl
idivl
add
flds
arpl
adc
scas
je
xchg
mov
dec
ja
adc
hlt
rol
jo
sbb
bound
xchg
test
scas
adc
push
sub
lret
ret
aad
xchg
rcrl
into
push
js
ret
xor
icebp
sahf
fs
ret
jp
or
mov
out
sbb
add
push
ret
cmc
sbb
in
ret
loope
mov
sbb
rorb
adc
push
movsl
add
mov
sub
hlt
add
nop
sbb
ljmp
loop
scas
mov
das
sarl
and
lret
js
ret
push
fists
punpckhwd
lds
hlt
into
dec
sahf
test
or
pushf
cmp
push
pop
mov
mov
cmpsl
ret
mov
fistps
clc
dec
les
jne
ret
inc
ss
pop
jae
jg
cs
dec
lcall
and
fiaddl
bound
push
add
add
cmp
aaa
inc
addr16
shll
jns
jg
arpl
lods
test
pop
in
in
jg
rcrb
push
cmp
stc
pusha
rorb
jg
add
les
ret
cld
loopne
push
gs
ret
sbb
mov
xchg
push
and
jge
mov
data16
bound
xorb
pop
cmp
xchg
ja
pushf
inc
pop
rclb
adc
and
lret
xchg
ret
fcomps
sti
jp
ret
cs
inc
repz
ret
fucom
lret
mov
or
aam
ret
lcall
test
sub
fstpt
insb
ret
adc
arpl
jg
imul
pop
lcall
aaa
inc
loope
xor
shlb
stos
mov
ret
ret
lcall
pop
sub
adc
pop
adc
shlb
test
sti
and
xchg
dec
stc
mov
dec
in
ret
mov
lods
dec
ret
pop
mov
popa
pushf
popf
loope
aas
push
mov
push
cld
xor
addr16
in
ret
jmp
and
pop
ret
cmc
push
and
bound
lea
xchg
sahf
xchg
sbb
fcmovnbe
add
push
inc
int
out
or
sbb
icebp
and
mov
jge
test
lret
ret
outsl
mov
sub
imul
sub
inc
add
jg
sub
mov
call
mov
ret
aam
lock
cld
bound
sub
imul
mov
pop
ljmp
ret
or
adc
jmp
inc
out
dec
sbb
mov
cmp
jge
pop
fstp
dec
stc
daa
mov
sbb
inc
cli
ret
cmc
dec
lds
cmp
mov
jno
jo
addr16
mov
ret
xchg
pop
out
outsl
out
ret
dec
lcall
push
outsb
mov
fadd
inc
movsb
pop
lcall
lock
les
ret
daa
rolb
test
stos
ret
jnp
int
in
fidivrs
imul
inc
dec
rorl
sub
jns
movb
push
cwtl
ret
push
std
outsl
push
hlt
sarl
pop
dec
sbb
je
daa
inc
ret
pop
push
nop
gs
mov
xchg
ret
jnp
dec
sti
mov
pop
pop
xor
sub
sbbb
loopne
dec
add
sbb
mov
ret
imul
sub
pop
jne
mov
rol
ret
addl
ret
scas
xor
sbb
jmp
add
dec
jbe
or
loopne
adc
mov
add
jne
mov
mov
push
jae
inc
jb
xlat
push
push
push
inc
js
ret
clc
push
vmwrite
cs
mov
test
cmp
jmp
mov
aas
mov
arpl
inc
jbe
mov
std
sub
adc
paddd
clc
xchg
push
outsl
push
mov
push
mov
mov
mov
repz
push
pop
sarl
and
in
inc
jle
ret
push
xor
testb
jo
mov
lret
ret
addb
loopne
je
ret
push
mov
cltd
ret
je
insl
or
mov
inc
scas
xorb
cmp
filds
enter
vxorps
fwait
xor
out
and
shlb
ret
dec
repnz
push
cli
scas
inc
lea
stos
sub
xor
subl
cmp
mov
fcomip
repz
lea
push
mov
fisubs
lds
fs
push
into
ret
test
ret
or
dec
outsl
sbbl
and
cmp
mov
shl
or
mov
mov
cwtl
neg
adc
pop
test
jnp,pn
mov
jle
sbbl
mov
stos
ret
pop
inc
int
mov
ret
ss
aaa
push
add
xchg
fmul
jg,pt
push
fcmovnu
out
repnz
add
cmovl
pop
test
jne
sahf
arpl
ja
insl
js
adc
mov
mov
cmp
jno
and
cmp
xchg
mov
jne
je
push
bound
sbb
xchg
movsb
jmp
shll
inc
test
mov
cmp
cmp
mov
ljmp
cmp
popf
hlt
jno
mov
sub
cmp
cwtl
js
fnsave
inc
push
dec
loope
xlat
lret
mov
or
je
stos
pop
ss
cmp
loope
outsb
aam
cmpsb
xchg
dec
jnp
ret
test
outsl
loope
mov
cs
stc
mov
xchg
cmpsl
arpl
dec
push
xor
lds
push
imul
lret
jp
ret
adc
pop
std
jmpw
dec
fsubs
movsb
xchg
mov
loope
ret
sbb
sub
sbb
mov
scas
aaa
cmp
mov
add
addr16
mov
mov
or
or
out
loope
bound
imul
jle
dec
fcmovb
notl
enter
ret
test
cmpsl
repz
inc
ret
dec
and
xorb
cmp
stos
cmpsb
sbb
ret
jecxz
xchg
and
lods
loope
inc
clc
mov
sub
bound
fwait
mov
or
cmpsl
add
sub
or
mov
jmp
xor
enter
mov
in
leave
sbb
std
movsl
ret
adc
jmp
mov
or
xor
adc
inc
cltd
fsubp
daa
je
add
dec
add
daa
pop
ret
and
out
loope
jl
xchg
loop
ret
inc
mov
jp
pop
ret
and
mov
dec
dec
add
in
movsb
outsb
xchg
mov
fdivr
es
es
or
cmp
lock
mov
outsl
dec
arpl
insb
test
sbb
mov
add
ret
xor
pop
loop
std
mov
dec
shll
fsubrs
loop
push
push
mov
idivl
mov
scas
add
ret
push
ret
mov
xchg
mov
sbb
jg
ret
dec
mov
mov
mov
xchg
outsb
sti
sub
leavew
out
pop
xor
pop
or
orb
jae
bound
leave
fbld
and
xchg
dec
xchg
stos
ret
movsl
mov
dec
orl
jo
adc
andb
icebp
dec
ret
dec
xchg
cs
test
pop
adc
jl
push
aas
leave
xor
sahf
aas
mov
iret
and
mov
psllw
inc
leave
inc
ret
xor
ret
movsl
xlat
fisttps
or
out
xchg
out
cmp
mov
in
jecxz
xchg
loopne
sub
xor
and
mov
mov
ret
lret
loopne
das
push
dec
ret
mov
je
inc
pop
ret
sbb
jmp
pop
cli
mov
jne
fisubs
or
dec
xor
pusha
jl
jo
rorb
lret
pop
mov
adc
xchg
add
ret
addl
jno
mov
sub
insl
ret
nop
fcmovnb
out
scas
ret
std
adc
iret
add
jo
jge
out
and
mov
sbbb
add
shlb
sbb
je
daa
in
call
pop
fcoml
jmp
add
in
in
ret
and
mov
cmpsl
inc
sahf
and
stos
xor
mov
ret
cltd
mov
push
fs
js
mov
xor
inc
or
pop
sub
sti
insb
loope
pop
in
loop
lret
ret
inc
mov
imul
gs
sub
stos
pop
scas
cld
ret
jo
xchg
pop
mov
xchg
sti
sbb
ds
ja
ret
ror
mov
mov
cmp
push
sbb
repnz
popa
push
lock
fbstp
adc
jae
or
add
push
test
add
mov
fcmovbe
cmp
and
lret
xchg
js
cmpsb
mov
mov
addl
jbe
das
and
jo
adc
mov
ret
js
int
test
fwait
sbb
and
jmp
dec
bound
imul
mov
jb
mulb
test
shrl
and
cwtl
hlt
ret
push
pop
xchg
mov
sub
sysexit
mov
jae
jb
loope
or
mov
ret
cmpsb
add
xchg
cmp
mov
mov
mov
mov
fwait
ret
mov
imul
inc
xor
jmp
ret
bound
mov
inc
inc
dec
repz
jb
pop
addb
jmp
and
mov
ss
aad
xchg
mov
mov
adc
push
mov
push
int3
cmpsb
call
loopne
xor
pushf
sub
ret
pop
jbe
sub
scas
push
xchg
ret
inc
xor
xchg
dec
pop
mov
inc
fiadds
xchg
loopne
jecxz
addb
ficoml
ret
cmpsb
jne
mov
add
and
arpl
inc
loope
imul
dec
daa
test
lret
repz
mov
and
insb
adc
push
addr16
inc
ret
sub
mov
pop
ret
jp
push
sbb
ljmp
cld
movsl
ret
inc
sub
test
mov
dec
jbe
rolb
jb
sub
pop
movsl
aam
scas
adc
push
cli
jmp
mov
cld
xor
jbe
daa
inc
je
pop
xchg
push
xor
push
mov
mov
push
ret
dec
adcb
mov
lods
iret
in
add
les
push
arpl
lret
push
ds
pusha
sbb
outsb
cmc
inc
fstp
and
adc
mov
movsl
andb
xchg
mov
stos
mov
push
ret
inc
repnz
adcl
xchg
sub
dec
gs
ret
sub
lods
ret
cltd
add
pop
movsb
ret
mov
push
aaa
dec
ret
inc
adc
dec
push
pop
sub
in
xchg
cwtl
push
loope
bound
into
repz
inc
xchg
ret
add
sub
mov
xor
out
loopne
xchg
mov
mov
adc
cmp
ret
aas
in
int
dec
ret
idivl
push
lret
cmp
xorl
push
lods
in
pop
pusha
sbb
addr16
fwait
dec
mov
ficomps
mov
in
loope
lods
mov
repnz
and
push
test
mov
jns
adc
pop
xlat
out
push
cmpps
outsl
out
jae,pn
push
dec
ret
pushf
orb
jbe
and
les
mov
fistpl
add
mov
in
mov
jl
sbb
push
ss
in
in
mov
xorb
push
gs
dec
xor
xchg
adcl
mov
lret
sbb
pop
push
and
repnz
ret
fimull
and
ret
push
mov
fildl
call
inc
scas
mov
rcll
addl
sbb
test
ret
push
fwait
sub
or
enter
rol
sub
mov
xchg
push
mov
inc
ret
cmp
imul
popa
mov
ret
and
out
stc
pop
loopne
in
ss
stos
and
mov
icebp
add
ret
sbb
in
jmp
ret
pop
or
lahf
sub
push
in
jb
movl
ret
ret
pop
fimull
inc
xchg
pop
ret
cs
in
lahf
dec
addl
loope
daa
jg
mov
test
mov
out
or
clc
mov
and
push
in
xchg
or
sub
fldl
test
add
dec
ret
pop
in
lahf
cmp
out
ret
inc
js,pt
shrl
mov
test
push
pop
repz
push
pusha
daa
cmp
xchg
pop
or
adc
in
mov
push
sbb
pop
and
ret
jge
inc
call
jae
cmc
jb
xchg
and
shrb
pop
ret
mov
hlt
push
mov
xlat
or
jae
sbb
cmp
push
or
mov
sbbb
jno
mov
ret
insb
sbb
insl
pop
mov
mov
adc
rol
arpl
ret
mov
cmc
xor
ret
sbb
stos
adc
xchg
movsb
stc
xor
pusha
dec
ret
movl
xor
inc
mov
aam
jnp
mov
add
adc
std
ss
popa
not
in
in
push
adc
dec
ret
addr16
hlt
lds
xor
mov
arpl
or
cmc
inc
fwait
shll
ret
inc
andl
inc
int
test
shll
rclb
movsl
hlt
out
ret
inc
out
popf
leave
and
mov
xchg
or
aad
or
cmp
mov
std
inc
dec
and
fidivs
ret
fsubrs
xlat
jp
jle
ret
jmp
ret
lahf
xchg
cld
pop
cltd
ss
dec
insl
nop
xor
and
pushf
leave
pop
add
sub
outsl
xchg
xchg
ret
xchg
faddl
into
sahf
pop
xor
mov
cltd
sbb
aaa
xchg
loope
mov
aaa
mov
movsb
rorl
dec
dec
xor
ffreep
cmp
pop
and
or
ret
cwtl
xchg
pop
jl
nop
xchg
out
dec
dec
cld
pop
insb
jg,pt
adc
incl
dec
outsb
xchg
xchg
xchg
fsubr
mov
inc
lods
adc
ret
cmp
aaa
sub
pop
test
sub
out
int
dec
sbb
dec
adc
ret
pop
dec
or
sbb
loope
repnz
popf
es
ret
cmp
leave
scas
cmp
push
push
push
pop
lahf
out
fstl
inc
mov
ret
jl
nop
mov
mov
cmpsl
push
jb
sub
mov
jbe
ret
xor
mov
sbb
xchg
sub
and
mov
sbb
push
insl
dec
fdivr
ret
cmp
pop
adc
jmp
pop
gs
push
xor
dec
sbb
pop
inc
lock
shlb
jp
pop
in
ret
jl
fldl
add
mov
ret
xor
incl
sub
ret
mov
dec
jg
lcall
jbe
ret
sub
daa
ret
lds
push
test
es
mov
xchg
sub
mov
dec
xchg
lods
push
mov
adc
outsl
and
clc
mov
mov
das
ret
aad
add
repz
mov
add
lcall
in
int3
and
xor
sbb
daa
mov
sub
xchg
or
idivb
pop
sbb
jge
clc
inc
jecxz
cmpsb
lds
fneni(8087
adc
mov
xor
cwtl
add
adc
cmp
ret
imul
sbbb
stos
pop
enter
pusha
rcr
jp
rorl
dec
in
add
push
loope
mov
insl
ret
mov
or
adc
xchg
fldenv
sub
and
out
outsb
stc
cli
lds
mov
es
mov
mov
insl
fs
jae
into
ret
mov
or
sbb
les
inc
fcomps
mov
adcl
sbb
js
loopne
mov
xor
and
cs
cltd
push
ret
mov
dec
mov
xchg
cmp
jl
add
inc
push
aaa
in
add
cmp
aad
ffree
inc
jl
test
divl
gs
stc
or
mov
fimull
loope
repnz
out
mov
push
add
cmp
and
cmp
movsl
jmp
cmp
ret
push
ficomps
ret
mov
jmp
movsl
not
pop
mov
ss
and
add
jb
scas
cmp
ret
cmp
and
xchg
hlt
sbb
push
pop
fldcw
xchg
pusha
sti
rcrb
jae
dec
cmp
dec
dec
ret
aad
dec
or
jno
mov
lods
insb
pop
roll
mov
push
cmp
cmpsl
int3
cld
ret
jnp
add
sub
ret
repnz
push
std
arpl
mov
iret
loop
adc
inc
xchg
movl
mov
pop
mov
ret
pusha
adcl
andl
jns
pop
scas
stc
mov
add
mov
test
dec
loope
add
es
jno
dec
ret
pop
sbb
push
out
or
cmc
stos
ret
mov
inc
or
push
push
dec
mov
sub
rol
cmpsb
scas
xor
jmp
out
xor
mov
and
mov
sbb
or
ret
and
int
popa
repz
dec
and
lcall
out
and
fcom
ret
mov
mov
ja
ret
mov
outsb
jle
ret
add
inc
jnp
sbb
ffree
iret
lret
in
lcall
in
scas
jae
addr16
lods
ret
mov
cs
ret
mov
test
scas
sbb
xchg
loope
dec
or
cmp
xor
ret
notl
iret
movsl
mov
mov
fists
pop
mov
mov
out
push
adc
int
stos
or
ret
xor
ret
adc
iret
imul
pop
lock
push
out
mov
cmp
cmp
lds
int
adc
push
adc
shll
add
or
mov
jg
push
loope
cltd
scas
lds
ret
pop
out
jns
mov
sub
xchg
xchg
jo
inc
ret
sarl
fisubs
cmpsl
out
mov
jb
sti
jns
orl
cmpsl
lret
add
xor
fcompl
pop
mov
xor
in
ret
dec
dec
lret
ret
mov
cld
sub
outsl
lea
es
jbe,pn
sbb
inc
sub
ret
dec
repnz
add
lea
mov
jl
sub
in
push
xchg
sahf
ret
push
jp
fadd
loop
inc
out
bound
jns
aas
leave
xlat
xor
mov
mov
dec
ret
out
jge
cltd
push
pushf
gs
fldenv
xchg
push
jns
add
les
dec
cmp
add
ret
push
ds
scas
pop
mov
cltd
ja
ret
aad
pop
aam
aas
in
sbb
leave
pop
fstl
and
mov
jo
pop
ljmp
hlt
lock
ret
notb
push
psraw
mov
push
fs
insl
xchg
test
pop
scas
push
ret
cmpsb
fs
add
sub
cmp
addl
enter
rolb
mov
sub
push
add
inc
cmp
xlat
nop
cmpsl
mov
popa
push
fldcw
pop
mov
and
jbe
stc
xchg
ret
push
jb
das
and
ret
mov
fdiv
fs
ret
into
in
push
stos
in
ret
push
in
ljmp
pop
sbb
mov
cmpsl
ret
or
xorl
add
out
pop
or
jp
ret
sbb
leave
ret
jne
jle
push
jno
int3
outsl
das
out
mov
je
ret
adcb
inc
dec
dec
ret
mov
ret
addr16
jg
pop
rol
frstor
test
add
mov
insl
daa
inc
ret
cmp
out
mov
add
xor
shlb
and
rorl
and
inc
pop
mov
test
pop
mov
call
addl
jecxz
mov
mov
fs
ret
lock
jmp
add
pop
fbstp
popl
pop
icebp
bound
mov
lret
sar
loope
std
test
or
ret
adc
pop
lcall
add
out
shll
in
pop
adc
inc
loope
push
add
or
int
ret
mov
rcrb
sbb
cli
insb
mov
imul
adc
mov
test
ret
inc
or
int
popa
xor
ret
xchg
imul
dec
xchg
outsl
stos
bound
inc
loope
sub
das
ret
and
and
add
sti
sub
data16
ret
ljmp
add
mov
and
cmp
daa
mov
cwtl
mulb
cmp
mov
mov
andl
cmp
sub
xor
mov
ret
add
push
fsubrl
out
arpl
aas
and
movsb
imul
and
pop
sbb
stos
jnp
and
xlat
adc
das
sub
or
mov
sbb
insl
ret
cli
sbb
jmp
mov
loop
jnp
mov
cli
loope
xor
sbb
ret
fwait
jg
movsl
cmpsb
in
ret
mov
in
sbb
inc
mov
adc
cltd
ret
add
lods
inc
mov
fidivrl
nop
add
inc
cmp
hlt
stos
xchg
push
movsb
inc
adc
mov
jne
ret
or
mov
enter
repnz
fisubs
xchg
movsl
xchg
outsb
loop
out
ret
icebp
movsb
adc
or
aad
popa
lock
hlt
dec
lret
xchg
add
test
imul
add
mov
mov
into
inc
std
push
fwait
mov
movsl
sub
popf
inc
push
int3
jae
mov
cmp
push
nop
enter
adc
xchg
sub
xchg
rep
shll
jecxz
enter
aas
ret
lret
or
aam
pop
sti
and
dec
add
push
xor
xchg
mov
addb
mov
les
ret
and
mov
jne
xlat
sbb
mov
xlat
mov
mov
rcll
mov
pop
in
bound
dec
ret
xchg
cmp
dec
push
mov
jl
xor
adc
icebp
and
sbb
cmpl
inc
test
mov
xlat
ret
sub
addr16
ret
adc
enter
push
leave
jecxz
outsl
inc
mov
xchg
lcall
sub
scas
ret
jecxz
push
push
adc
das
ret
jo
sub
jg
popa
leave
stos
adc
lock
rcr
ret
sbb
mov
insl
xchg
push
shr
ret
and
ret
fstpt
xchg
dec
lret
push
dec
bound
push
or
pop
xchg
add
sahf
aaa
bound
add
scas
mov
sbb
addb
in
push
cmpsb
cli
cmp
add
jle
cwtl
mov
push
adc
jae
rorb
inc
sbbb
ret
pop
in
push
mov
mov
lret
nop
fdivrs
call
adc
mov
repnz
stc
ss
push
nop
test
cmc
int
jbe
sti
stos
add
sbb
ret
mov
or
retw
insl
sub
mov
ret
or
fldcw
lds
fisttps
jb
xor
ret
cmp
mov
xor
adc
mov
movd
push
ret
add
sub
nop
ret
rorb
pop
xchg
jbe
mov
stos
subb
mov
jo
lahf
pop
push
xchg
cmp
and
test
insl
shlb
mov
push
inc
and
sti
inc
add
mov
ret
cltd
inc
and
mov
dec
insl
jecxz
and
cmpsb
sbb
addr16
cmp
jle
inc
les
ret
dec
push
rorb
cmp
testb
rcll
xor
hlt
inc
jne
pop
push
cmp
imull
ret
cwtl
and
jae
ret
loope
jno
mov
or
push
and
inc
shll
scas
jbe
insb
clc
mov
mov
dec
scas
adc
hlt
jns
repnz
mov
arpl
scas
xchg
xor
cmp
adc
mov
jo
push
ret
or
add
jmp
aam
pusha
lods
dec
dec
ret
and
xchg
push
lods
fadd
xor
mov
add
std
mov
out
stos
xchg
lret
pusha
push
ret
push
test
mov
jnp
mov
str
cmc
adc
mov
jl
inc
ret
sbbb
and
mov
es
repnz
inc
dec
and
mov
fistl
ret
insb
fmulp
jo
popf
ret
mulb
push
pop
xlat
ret
or
ret
sub
jp
xchg
dec
fcomps
mov
movsl
mov
popf
adc
xor
mov
inc
mov
divl
cmp
xchg
ret
push
lods
jnp
xchg
stos
mov
ret
movsl
pop
pop
mov
les
adc
ret
mov
xor
ret
cltd
jo
adc
int3
neg
ret
mov
shlb
mov
bound
xchg
fcomp
xchg
xorb
mov
outsb
mov
mov
mov
icebp
adc
sub
mov
dec
test
ret
das
outsb
insb
pop
and
ret
stos
movsb
adc
xchg
or
lock
xor
daa
ret
insl
test
and
mov
movsb
cmp
mov
adc
add
cmp
sub
jno
sbb
mov
push
and
cmp
stos
scas
and
mov
mov
fsubr
ret
lahf
dec
fsubr
cvtps2pi
imulb
pop
xchg
or
xor
rol
push
sbb
or
test
and
mov
xor
sbb
orb
ret
xchg
ficoms
jge
ret
cmp
push
cmp
into
cmpsb
ret
std
sub
xor
cmpsb
dec
sbb
add
nop
cmp
test
movsb
mov
cmpsl
mov
sub
shlb
and
sahf
dec
xor
push
ret
ss
sub
mov
mov
enter
jo
ret
jg
test
inc
out
inc
lods
push
ds
scas
arpl
sbb
ret
test
xorb
ret
mov
jp
cs
adc
push
jg
clc
lcall
adc
aas
dec
and
loopew
aad
fldl
hlt
sarl
repnz
leave
in
call
xor
cmpsb
lahf
test
mov
lret
xchg
mov
cs
adc
leave
lods
mov
push
movsl
test
xor
push
sbb
cmpsl
ret
pop
scas
pop
add
dec
add
lock
rcrl
and
and
addr16
shrb
pop
mov
push
cmpsl
shrl
inc
jno
ret
in
das
imul
and
mov
pushf
ret
dec
stc
aad
ret
scas
shrl
mov
bound
into
mov
ret
data16
ljmp
push
es
int3
jb
addr16
cmpsb
cmp
repnz
push
pop
cs
ret
inc
testl
mov
fwait
ret
aaa
orl
pop
sbb
pop
ret
imul
out
ret
fst
ljmp
lods
movsb
test
jb
mov
addl
pop
jge
mov
inc
inc
mov
js
int3
cltd
sarb
test
sub
jle
les
inc
xor
scas
loop
jnp
bound
data16
mov
adc
jmp
pushf
jno
pop
or
push
inc
ret
pop
mov
ret
sbb
inc
mov
jg
and
xchg
lock
cli
cmp
loope
sub
aas
loope
jae
mov
xchg
mov
or
lock
add
add
pop
sub
sub
enter
pop
outsb
lock
mov
cmpb
xor
dec
mov
pop
adc
mov
ret
cltd
inc
test
pop
pop
loop
imul
jp
loop
insl
test
js
ret
jmp
ret
sub
data16
sbb
xchg
xor
mov
cli
lds
insb
pop
movsl
popa
lods
loop
js
pushf
loopne
dec
addr16
test
mov
int3
arpl
or
fistpll
bound
stos
xor
pushl
test
shlw
add
sbb
pop
inc
fisubrs
inc
je
mov
ret
pop
mov
loope
jge
sahf
or
mov
and
mov
xchg
inc
mov
xor
mov
add
push
jne
mov
xor
mov
pop
ret
repz
cld
lret
jno
roll
jle
xor
mov
leave
mov
stos
les
fisttpl
ret
movsl
jmp
pop
adc
push
gs
inc
fnsave
ret
mov
add
mov
mov
adc
loopne
cli
lret
adc
cmp
ss
add
fistl
iret
xchg
inc
movsl
mov
mov
cmp
call
pushf
ret
jne
xlat
ds
dec
ret
xorb
outsb
sbb
loopne
fdivl
push
mov
imul
test
das
call
mov
mov
ret
loopne
mov
adc
cmpsl
jne
dec
stos
jl
sub
stos
out
es
stos
lcall
push
rorb
out
dec
ret
dec
out
xchg
sub
mov
mov
gs
fsubl
add
cmpsl
aad
sub
push
ret
sti
push
xchg
add
movsl
jge
mov
ret
mov
mov
cmp
xor
mov
xchg
xchg
cmp
in
test
cmp
ret
push
add
ss
dec
shll
loopne
mov
or
icebp
mov
hlt
imul
jno
data16
mov
jl
bound
or
scas
push
add
ret
inc
into
jno
lcall
mov
xlat
push
cmpsb
loope
mov
mov
sub
dec
ret
add
test
movsl
retw
scas
sub
ret
fisubs
ret
jp
xor
ds
ret
xchg
ss
das
aad
dec
hlt
ja
jg
sbb
add
shl
mov
in
adc
push
or
paddq
push
xor
jb
jo
dec
das
lret
pop
ret
adcb
mov
bound
pop
lods
es
cmp
into
xchg
xor
scas
repz
adc
push
mov
enter
cmp
js
fwait
into
mov
push
ret
enter
rclb
aas
sbb
movsb
mov
out
ret
sbb
cmp
nop
pop
mov
inc
jecxz
jecxz
loope
xor
and
jne
cmp
xchg
or
pop
mov
sti
mov
fs
xlat
push
into
dec
in
ret
mov
or
inc
xor
sub
mov
mov
fbstp
std
mov
pop
outsb
addr16
ds
pop
xorb
cs
ret
lahf
hlt
fnstcw
jle
ret
int3
xchg
mov
aaa
cltd
ret
mov
aaa
es
js
bound
xorl
test
add
mov
mov
mov
lea
dec
cmpsl
push
loope
repnz
jle
jmp
dec
pop
jmp
arpl
cmp
enter
roll
mov
out
mov
and
sbbb
and
cmp
and
outsb
jnp
or
ret
rclb
sub
and
xchg
ret
repnz
into
ret
sarl
cwtl
dec
inc
loopne
test
xchg
stos
mov
mov
fisttpl
ret
mov
sub
jnp
ficoms
and
jle
pusha
and
ret
dec
fwait
adc
je
repnz
idiv
arpl
clc
ret
loopne
mov
stos
ret
pop
jg
ror
bound
and
ret
pusha
stc
add
ss
ret
xchg
shlb
ret
aam
lcall
add
inc
out
call
popa
lea
dec
pushf
in
cmpsl
addr16
ret
adc
insl
loop
iret
or
push
ror
bound
push
jp
mov
mov
aaa
ret
mov
inc
ret
enter
mov
mov
and
sbb
dec
sbb
lret
rol
pusha
mov
test
fimuls
repz
inc
mov
std
jl
imul
jp
out
cmp
mov
cwtl
lock
aad
cld
jg
pop
inc
inc
cli
insl
pop
xor
push
pop
mov
adc
pop
leave
jmp
mov
ret
lds
adc
jmp
jmp
cli
mov
cltd
mov
fdivl
adc
sbb
mov
aas
mov
inc
dec
adc
adc
and
mov
jae
iret
ret
xor
push
repz
out
lods
and
popl
push
test
jbe
in
add
stc
cmpsb
movsb
pop
xor
mov
in
jl
dec
ret
jle
lds
in
outsl
dec
mov
dec
mov
adc
ret
jmp
mov
add
ret
pop
popf
iret
cmpsb
adc
pop
push
or
scas
add
ret
mov
xlat
or
jmp
ret
or
enter
dec
mov
call
cmpsb
cmpsl
outsb
push
imul
jbe
inc
sti
out
mov
push
pushf
in
xor
mov
cld
orb
loopne
dec
shll
mov
xlat
xor
loope
mov
sahf
mov
test
adcl
roll
jno
lods
mov
pop
sbb
inc
hlt
mov
imul
cmp
popf
mov
jl
pop
and
mov
fsubrl
sub
popa
das
testb
sub
lock
inc
jecxz
ret
xchg
mov
ret
sub
ret
mov
push
or
in
cmp
in
add
lods
ret
dec
adc
xor
clc
es
mov
stos
das
jo
mov
ret
jge
mov
loopne
ret
push
sarl
dec
cltd
in
scas
add
pop
bound
cmc
cmp
cmpsb
subl
lret
sub
pop
push
fcos
imulb
cwtl
bound
xchg
fsubrs
sahf
ret
es
sbb
fndisi(8087
lods
inc
in
scas
mov
ret
lds
push
ret
or
adc
push
push
xor
dec
outsb
push
mov
hlt
gs
in
inc
cwtl
add
jmp
mov
cmpsb
in
nop
ret
push
imul
test
loopne
scas
and
mov
out
sbb
inc
into
add
fs
jne
sti
stos
and
or
popf
ret
dec
fisttpll
or
push
sub
mov
inc
lods
aas
mov
add
int3
ret
xchg
push
divl
repnz
jnp
push
mov
outsb
fdivrp
aas
int3
pop
movsb
ret
push
enter
mov
jecxz
sub
pop
ss
lds
jg
sbb
fucom
int3
xchg
and
mov
or
cmpsb
pop
mov
xchg
nop
sub
jl
daa
js
push
dec
int
add
les
mov
in
pop
ret
sub
jno
push
mov
sub
ret
mov
push
or
or
shlb
es
ret
sub
scas
shrb
ret
xor
xchg
dec
ret
mov
sub
jne
iret
cwtl
subl
push
out
mov
or
push
add
xor
int3
pop
data16
adc
lahf
lahf
push
xchg
icebp
loopne
insb
flds
mov
inc
mov
adc
loopne
jmp
arpl
sub
xor
adc
mov
vprotd
pop
push
add
mov
lea
movsb
gs
jl
xor
daa
ret
lock
mov
ret
and
leave
bound
ret
lods
in
aas
push
add
out
xchg
mov
lds
sub
shll
lret
mov
add
pop
bound
push
std
lds
ret
test
xchg
andb
sub
push
pop
out
out
inc
mov
test
ret
inc
sbb
ret
loope
push
lret
fdiv
ret
les
shrb
test
fsubp
sub
imul
and
js
fbstp
add
adc
sbb
out
sbb
imul
leave
sbb
ret
ds
ret
sbb
outsb
popf
je
stos
data16
jg
aad
pop
add
ret
hlt
cli
and
lret
dec
ret
pop
cmp
insl
xchg
and
ret
pop
push
add
lret
movsl
mov
mov
pop
inc
movsb
ret
mov
std
dec
rcrl
aam
mov
adc
push
sbb
movsb
ret
push
or
repz
lock
xchg
dec
push
pop
adc
ret
sahf
test
cmp
add
ss
xchg
rcrl
push
loopne
out
sub
push
pusha
into
popf
in
ret
add
clc
loop
add
jae
in
add
xchg
insl
dec
cmp
ret
into
icebp
xchg
xchg
fs
rcl
fndisi(8087
push
cmpsl
or
push
mov
popa
mov
dec
pop
xor
inc
add
xchg
enter
lods
movsb
loopne
out
pop
mov
inc
adc
ret
xchg
fmuls
cmp
mov
sarb
jnp
sahf
rcll
pop
dec
lods
popa
call
cwtl
mov
dec
add
mov
out
jl
test
jmp
stos
xorl
sub
add
data16
xlat
jg
push
inc
adc
lcall
imul
mov
in
lock
xchg
ret
push
das
inc
shll
out
arpl
jbe
test
ret
stos
aad
or
xchg
adc
lcall
fcomps
das
movntps
ja,pn
or
aad
lds
ret
into
and
fcmovnb
and
push
dec
sub
pushf
mov
ret
clc
jo
and
ret
pop
inc
mov
dec
stc
testb
loopne
idivb
mov
mov
stos
aas
ret
stos
mov
fcmovnb
mov
out
adc
ret
insl
mov
movsl
cmp
scas
fwait
mov
jns
ret
mov
pop
daa
sbb
pushf
sbb
in
clc
adc
or
inc
inc
push
sarl
imul
popa
aad
jno
mov
stos
and
stc
mov
or
add
fs
repnz
ret
mov
or
xlat
shlb
pop
std
cmpsb
jecxz
sub
and
mov
sbb
into
scas
and
xor
mov
dec
imull
mov
dec
mov
ret
sbb
cltd
int3
and
loope
mov
jo
into
scas
sbb
sbb
fists
aaa
lods
fxch
xchg
ret
push
jg
sub
cmp
sub
mov
popa
bound
lea
mov
leave
rcrb
movsb
fistpll
push
sub
ret
iret
rcrb
cltd
ret
nop
push
xchg
sub
fwait
add
shrb
pop
mov
lock
jmp
lea
ret
cli
add
jae
xor
es
pop
rcrb
fisubl
repnz
shll
jecxz
sub
ffree
cwtl
xchg
movsl
pushf
jae
mov
add
mov
nop
rep
add
test
sub
add
loope
jae
push
cwtl
ss
mov
inc
test
xchg
rolb
arpl
lret
xor
movsl
fistl
imul
icebp
add
pop
jg
lcall
es
ss
popf
loope
test
xchg
mov
aam
ret
mov
dec
popa
xchg
sbb
pop
ret
ror
or
aas
dec
ficompl
xor
test
enter
adc
cmc
xchg
loop
bound
pop
ret
popl
xchg
leave
cld
shl
adcb
neg
fnstenv
scas
cmpsb
jp
test
js
and
mov
inc
out
ret
dec
orl
lret
lock
mov
ffreep
icebp
repz
test
add
push
mov
mov
sub
mov
mov
movsl
mov
mov
ret
inc
aas
add
jmp
fistpl
pop
jnp
enter
jb
movsb
fsts
adc
cwtl
jmp
inc
cmp
cltd
hlt
ret
je
test
mov
mov
mov
stos
in
dec
xchg
ret
arpl
ret
es
repnz
std
mov
mov
pop
dec
scas
mov
dec
fs
dec
fisttpl
inc
dec
outsb
out
stc
fsubl
and
movsb
mov
mov
lock
mov
ret
push
inc
test
mov
scas
jmp
je
ret
std
andl
repnz
stc
jnp
popf
cli
pop
mov
rorb
push
sbb
jbe
scas
xchg
jo
push
sub
mov
out
inc
cli
repnz
popa
mov
ret
or
mov
out
outsl
mov
out
clc
repz
mov
or
sub
push
xor
ret
addb
pop
mov
ret
adc
and
insb
lret
stos
or
inc
sub
imul
ret
lods
icebp
shlb
sbb
mov
in
ret
dec
cmpsl
xchg
pop
cmp
ret
mov
cmp
cli
scas
pop
divb
and
sbb
add
add
inc
mov
mov
cmp
andb
mov
pop
mov
movups
out
das
ret
push
popa
add
es
and
ret
push
jo
les
jae
lods
shlb
ret
clc
or
sub
loopne
inc
das
movsl
scas
iret
mov
cmpsb
jecxz
ja
sub
aad
fsubr
gs
jo
sbb
imul
pop
push
jbe
mov
daa
loope
ret
inc
mov
rclb
mov
popf
push
sbb
adc
push
lret
in
lahf
xor
sahf
les
insl
pop
ret
mov
cmp
add
pop
pop
cwtl
cmp
or
push
inc
mov
enter
sarb
push
ret
mov
add
iret
test
out
nop
add
sbb
fnstenv
ret
mov
push
cmpsl
and
ret
stc
push
lea
push
sub
jae
mov
pop
into
lods
je
stos
pop
idivl
jmp
mov
ret
sub
ret
cmpl
test
sarl
cmc
stc
mov
and
hlt
inc
ret
je
lahf
push
movsl
retw
cmp
int3
and
push
fidivl
xor
add
mov
mov
outsl
mov
aaa
dec
fistps
mov
dec
stos
and
aas
ja
add
dec
sub
icebp
pop
cmc
js
cmp
xlat
push
movsl
out
shrb
cmp
aam
mov
and
in
mov
ret
loope
xchg
mov
jne
mov
jecxz
inc
cmp
mov
fsubl
ret
test
mov
std
inc
and
jb
gs
mov
mov
push
and
insl
fwait
hlt
leave
popl
sub
scas
xchg
je
cmpsl
insl
mov
fwait
mov
or
out
mov
add
sub
cmpsb
mov
jecxz
add
dec
jno
nop
lahf
jo
stos
pop
ffreep
repnz
xchg
out
xorl
ret
imul
sbb
pop
xchg
rcrb
cli
mov
pusha
pop
xor
ss
bound
xchg
cmpsl
les
ret
mov
ja
push
pop
popa
out
sub
aas
out
pushf
push
mov
ret
enter
ss
loope
push
pop
jmp
sarb
cmc
inc
ret
bound
xlat
inc
jbe
push
sbb
out
pop
jle
mov
sahf
and
sub
sub
push
fwait
mov
out
ja
ret
fists
and
mov
faddl
add
pop
out
cmp
and
inc
sbb
repz
or
inc
ss
rcll
jp
ret
fadd
and
nop
js
mov
pop
stc
cld
push
inc
jno
inc
pop
imul
push
mov
fmuls
jnp
lret
pop
and
ret
and
sub
xchg
lea
test
ret
cltd
push
xchg
xchg
je
xchg
dec
ret
sbb
addr16
push
idiv
push
and
jg
cmp
mov
daa
jno
ret
iret
sbb
repz
ret
pop
jne
test
add
jmp
mov
jo
popf
jbe
in
popa
outsb
nop
icebp
xchg
ret
test
movsb
cmp
call
jmp
ret
mov
daa
mov
xchg
inc
test
mov
dec
jbe
ret
adc
std
adc
jb
sbb
and
rcrl
push
cmp
js
scas
ds
mov
out
fisubs
xchg
popa
sub
mov
popf
sub
roll
ret
cmpsl
pop
xor
or
mov
stos
xchg
push
cmp
fs
add
inc
les
ret
push
adc
jb
in
arpl
mov
leave
and
cmp
repz
inc
stos
mov
rcll
xchg
lods
mov
cmp
adc
in
loope
inc
cmp
jecxz
lds
shrl
movb
les
ret
sub
push
rcll
inc
pusha
inc
ret
dec
lcall
mov
xchg
add
jmp
push
jnp
push
es
popf
xchg
aaa
fucomp
jbe
sti
sub
les
test
cli
cmpsb
sar
inc
daa
pop
push
bound
frstor
pusha
ret
xchg
pop
inc
loope
ret
sti
sbb
ret
fistl
popa
xchg
xor
leave
inc
pushf
test
cltd
fisubrs
mov
dec
sub
push
cmp
xchg
push
icebp
mov
xor
add
add
cmp
adc
jb
jle
test
add
dec
mov
fwait
ret
jb
mov
daa
enter
faddp
movb
sbb
loopne
push
dec
adc
leave
stc
nop
fwait
retw
loope
mov
cmp
in
mov
je
inc
xchg
and
mov
sub
xor
sbb
adc
ret
imul
mov
andl
std
insl
ret
ret
incb
int
ret
stos
pop
clc
pop
mov
or
jns
jl
ret
sub
dec
mov
mov
data16
sbb
mov
fdivl
aaa
out
ret
xor
scas
mov
mov
jecxz
ret
push
in
cli
nop
cmc
pop
bound
jle
imul
jecxz
std
mov
rclb
adc
and
movsl
test
push
jle
cmp
mov
jb
jecxz
data16
sbb
push
jmp
or
in
inc
pushf
data16
ret
xorb
mov
test
les
pushf
push
sbb
sbb
cltd
hlt
mov
cwtl
loopne
ffree
jae
mov
push
mov
ficoml
rolb
jecxz
pop
ret
sbb
xchg
insb
mov
mov
mov
ret
cmp
shrd
in
ret
cmpsb
in
rorb
imul
mov
add
pusha
jb
shll
imul
xchg
enter
lahf
out
aam
pop
lea
pop
or
clc
call
push
jae
push
aas
popf
test
jp
fisubl
orb
lds
mov
adc
orb
stos
bound
sbb
inc
dec
and
jne
fimull
adc
push
mov
xchg
out
or
popf
inc
or
and
jbe
lock
mov
lret
inc
bound
repnz
adc
and
repz
shrb
dec
pusha
outsl
mov
lods
mov
add
fcom
ret
mov
test
or
xor
ret
inc
xorl
pushl
mull
jnp
dec
jo
push
pop
sub
fwait
iret
pop
cmp
repz
je
xchg
xor
bound
cltd
cmp
in
add
leave
ret
in
mov
sbb
cmpsb
call
test
inc
cmpsl
cmp
jno
out
iret
inc
ret
mov
sbb
pop
mov
cwtl
and
add
pop
or
push
add
outsb
mov
mov
std
movsb
rclb
or
sub
lock
out
dec
cmpsb
scas
xor
push
mov
jnp
outsl
sub
andb
in
dec
jle
mov
das
pop
push
sub
fidivs
outsb
push
loop
cmp
push
push
mov
cwtl
jnp
dec
xchg
inc
in
and
xchg
fbld
and
xchg
ret
mov
cmpsl
lock
or
loop
sti
jbe
out
pop
dec
leave
daa
mov
ret
movsb
jnp
loop
lock
and
aad
bound
sub
clc
ret
movq
bnd
cmp
rolb
inc
xorb
push
and
ret
cmpl
cmp
and
jl
out
ljmp
and
jp
add
jge
push
leave
ret
inc
sti
test
fisubl
jns
pop
mov
xor
popa
add
addr16
jp
test
ret
es
push
xchg
pop
ret
jbe
inc
push
les
jnp
mov
leave
xor
clc
push
es
xor
mov
mov
lds
ret
pop
fadd
inc
add
sbb
cmpsb
ljmp
xor
imul
outsb
dec
lret
push
mov
stc
pop
xchg
fsts
xchg
scas
push
hlt
daa
push
ret
jp
inc
outsl
popf
sahf
ret
pop
insl
mov
sub
mov
add
ret
cmp
cmp
mov
fwait
push
push
cmp
enter
rol
repz
inc
shr
ret
mov
inc
ret
push
nop
lods
jle
imul
mov
mov
mov
stc
xchg
mov
ret
push
push
movsb
mov
rorl
fs
xchg
into
and
inc
mov
or
divb
ret
xchg
idivb
ret
arpl
ret
imul
ret
adc
push
xlat
mov
ret
mov
cs
dec
lahf
mov
in
mov
insb
push
or
mov
add
mov
ret
xor
jg
sbb
shll
jl
pop
add
ret
inc
pop
xor
cmp
push
sub
xor
test
shlb
cmc
mov
push
sbb
mov
loope
fldcw
ret
leave
jne
fucom
ret
test
sbb
jp
daa
stos
dec
sub
pop
int3
addb
aas
mov
mov
loopne
sub
shrb
inc
ret
mov
mov
insb
pop
in
inc
sub
add
stos
into
jae
movsl
loope
ret
mov
jmp
cmpl
repnz
fsts
insb
push
cmpsb
jecxz
cld
dec
repz
test
mov
arpl
mov
ljmp
xor
ret
stos
dec
outsl
rcr
fadd
pop
jmp
sbb
ret
ss
mov
xchg
ret
data16
in
aam
loope
dec
mov
shrl
lret
popa
sub
cmpb
ret
pushf
mov
ret
lds
ret
or
jle
inc
pop
bound
adc
ret
xchg
xchg
addb
int3
ret
aas
push
aad
mov
ret
jbe
and
mov
adc
pop
pop
mov
sub
sub
inc
xorb
ret
pushf
jecxz
add
and
add
call
fnstenv
or
ret
inc
mov
ret
mov
inc
ret
leave
cwtl
ljmp
adc
ret
inc
xchg
sub
xor
in
ret
test
je
sti
lock
outsb
mov
ret
in
push
cli
lea
ret
aam
cmp
push
add
pop
push
jb
mov
dec
mov
jmp
pop
scas
jns
out
test
je
cwtl
ret
cmp
push
loope
iret
rcl
ret
mov
and
ret
adc
daa
out
aam
ret
nop
xor
jae
or
and
mov
adc
cmc
push
std
dec
pop
sub
popf
dec
movsb
cmp
jnp
clc
adc
jo
aam
inc
lods
sub
mov
fidivrl
out
mov
jb
ret
enter
push
ret
clc
pop
ja
loopne
inc
outsl
rcll
push
and
sbb
insb
dec
repz
jg
pop
mov
ret
and
loopne
inc
dec
add
arpl
in
ret
dec
push
inc
sarb
and
nop
imul
rol
aaa
jmp
ret
out
jb
arpl
mov
push
add
mov
pop
aad
movb
jmp
and
dec
add
or
push
out
stos
inc
lcall
fnstsw
pop
sub
pop
and
mov
jb
popf
out
adc
xchg
mov
jge
rclb
jbe
aad
les
dec
lods
sahf
outsb
cli
adc
mov
out
push
popa
cltd
mov
ret
xor
fiaddl
pop
shl
cmpsl
sbb
in
loopne
push
xchg
pop
xchg
xor
mov
test
int
mov
lret
cmp
push
jne
imulb
in
jecxz
jle
es
xor
ret
lock
xor
ret
dec
scas
cmpsl
jp
adc
fdivrp
popf
add
xor
ret
es
ret
repz
mov
pop
sbb
jo
or
sbb
retw
imul
xchg
push
ret
stos
nop
loope
or
adc
mov
ret
xor
xor
aaa
ret
mov
test
inc
mov
int3
fs
pop
ret
adc
stos
xor
add
push
and
ljmp
mov
sub
add
mov
bound
fists
dec
loopne
ret
mov
mov
test
and
add
sbb
dec
int3
nop
jns
mov
pusha
mov
add
ret
pop
loope
adc
cmp
ja
jg
adc
loopne
test
icebp
scas
sbb
loopne
cmpsb
in
ss
pop
pusha
out
xchg
cmp
rol
sub
in
mov
ffreep
mov
cmp
mov
pop
movsb
and
fidivrl
ret
fmuls
ret
testl
jmp
mov
pop
testb
sbb
jb
ret
rorb
aam
dec
ret
and
fsubr
hlt
pusha
ret
pop
adc
sub
sub
test
mov
cmc
mov
or
inc
gs
loope
mov
jb
xchg
xor
out
insb
in
imul
mov
dec
adc
cmpsl
and
add
shll
and
xor
gs
fisubl
subl
ret
fstpl
icebp
dec
movsb
test
rorl
ret
aam
xor
ret
std
out
add
inc
cwtl
ret
ja
popa
pop
push
mov
test
loope
mov
js
scas
jae
mov
mov
add
cmc
push
cmpsb
icebp
fildl
adc
inc
dec
mov
xchg
dec
jae
ret
roll
mov
in
stc
sub
hlt
mov
loope
inc
pop
add
and
mov
leave
outsl
jge
jmp
inc
mov
dec
sub
ret
arpl
inc
mov
bound
test
outsb
mov
mov
jp
cmp
pop
sbb
rcll
xor
aam
inc
cmpsl
add
mov
jnp
inc
cli
in
ret
pop
xabort
loope
shll
mov
push
xor
ss
jns
inc
je
add
stos
jno
insl
push
adc
popa
lret
sbb
fldl
movl
fldl
daa
lds
jecxz
mov
push
fildl
inc
ret
lret
xor
push
ds
hlt
std
daa
in
ret
jns
push
fbld
push
jecxz
mov
push
dec
ret
cmp
test
and
or
mov
inc
add
imul
mov
xchg
mov
mov
add
cs
test
movsl
out
loope
std
je
leave
mov
or
xlat
ret
gs
shrl
pop
loope
inc
xchg
push
or
ret
sti
movsl
pop
icebp
dec
push
bound
xor
xor
mov
es
sbbb
ret
loopne
inc
mov
in
jbe
pop
dec
xor
add
cmp
sub
movsl
mov
ret
adc
rol
inc
ffreep
lods
je
mov
ret
mov
dec
cmp
pop
in
mov
cwtl
or
sub
movb
ret
inc
and
or
push
add
cmpsb
inc
cmp
enter
les
xlat
stos
sub
mov
setge
out
test
fnstcw
xor
xchg
mov
xorl
jge
les
fcompl
dec
cmp
mov
ja
sbb
das
xor
stc
mov
xor
ret
xlat
add
andl
out
fldenv
mov
mov
ret
jo
int
mov
out
mov
sub
cmp
jae
adcl
sbb
sahf
pop
popa
nop
insl
and
push
pop
roll
cmc
xor
ret
or
push
ret
mov
xor
ret
lds
sbb
pop
mov
fbstp
inc
inc
push
mov
cli
ret
imul
test
test
and
imul
ret
cmp
ret
std
inc
loopne
ds
scas
stos
iret
ret
or
loopne
sbb
sub
jmp
test
arpl
and
and
pop
ret
pop
shll
pop
mov
mov
lea
mov
lds
ret
insb
int3
mov
pmulhw
sbb
and
mov
popa
pop
notl
mov
mov
in
jg
mov
popf
test
add
lds
add
inc
jmp
ret
jg
js
out
stc
scas
pop
ret
mov
pop
cmp
bound
pop
pop
shlb
mov
xchg
sbb
jecxz
rcr
outsb
mov
ret
xchg
add
ret
sub
js
inc
ret
test
fdivl
mov
ret
add
pop
add
not
pop
cs
insl
ret
mov
sbb
pop
in
mov
lods
sbb
add
mov
cli
sub
das
fwait
les
lahf
mov
ret
repnz
addr16
xchg
cli
in
mov
add
mov
dec
stos
js
ret
cltd
push
stos
cwtl
mov
sbb
pushl
ret
aam
push
ss
sbb
push
mov
xchg
ret
dec
mov
ret
fld1
imul
out
insl
xchg
sub
dec
dec
test
sub
mov
rorl
or
xchg
dec
xchg
bound
ret
lock
xchg
jae
ret
sub
mov
jp
cltd
rcrl
out
add
adc
and
mov
ror
jge
insb
or
mov
sbb
bound
lock
mov
scas
ret
and
decb
jp
dec
cmp
mov
mov
or
iret
sar
les
push
inc
lds
loopne
mov
jnp
std
add
fmul
ret
in
enter
icebp
mov
imul
dec
xor
int3
and
je,pn
in
xchg
fisubs
loope
sbb
fwait
cld
mov
ret
int3
cmp
push
or
adc
ret
fwait
je
mov
scas
incb
pop
add
push
and
in
or
ret
leave
outsb
ret
fdivl
scas
ljmp
ret
aad
inc
mov
and
imul
insl
test
jne
outsl
ret
push
ret
mov
adc
call
xchg
adc
mov
mov
dec
push
test
ret
mov
mov
or
dec
ja
dec
divl
fbld
aaa
fwait
scas
mov
ret
xchg
cmp
or
cltd
sti
dec
fsubs
sub
lret
mov
xchg
scas
stc
ret
mov
add
mov
lea
js
int
pop
dec
push
mov
cmp
xor
fiadds
jle
rolb
xchg
lods
out
ret
test
xchg
ret
pop
loope
cmp
mov
cmp
imul
dec
pushf
xchg
ret
data16
mov
aas
push
cmp
inc
pop
inc
jecxz
insl
rcll
jns
fcmove
ret
adc
mov
push
lods
mov
push
repz
int
xchg
mov
outsb
imul
ret
adc
lods
lret
test
scas
ja
mov
lds
fimull
mov
ja
cmp
shll
pop
sbb
xchg
add
test
adc
xchg
or
lret
aaa
mov
int
ret
fwait
mulb
add
push
jp
and
sahf
jbe
mov
je
sbb
xchg
xor
scas
hlt
xchg
xor
ret
jmp
push
roll
cmp
mov
xlat
jns
ret
call
or
rclb
sbb
and
scas
scas
jns
fiaddl
push
nop
or
movsl
imul
ret
sti
mov
and
inc
stc
jb
test
and
push
bound
jecxz
inc
into
dec
ret
stos
push
mov
cwtl
mov
jb
addl
out
pop
pop
imul
push
idivl
stos
mov
mov
les
ret
sbb
ret
loop
fdivrs
mov
sbb
xlat
mov
mov
test
aaa
fisubrs
mov
test
lcall
lods
pop
push
in
add
mov
pushf
int3
bound
cmp
inc
dec
lea
jne
xlat
ror
dec
idivl
ret
sbb
loope
cmp
rcll
jne
faddl
lock
ljmp
inc
ds
inc
loop
insl
inc
mov
xorl
ds
ret
and
aaa
mov
mov
imul
xchg
lods
jecxz
bnd
inc
pop
jae
ds
loope
sbb
mov
or
push
add
je
pop
sahf
cmp
sub
adc
loop
xor
popa
sti
fwait
mov
add
mov
mov
repnz
pop
test
xor
lcall
imul
rcrl
stos
inc
pop
nop
es
ds
or
ret
ss
push
xchg
cmc
inc
iret
sub
int
mov
roll
ret
call
sahf
mov
insl
in
pushf
repnz
addr16
mov
jb
adc
cmpsl
cmc
dec
ret
bound
out
inc
fwait
ret
xchg
nop
lods
std
adc
adc
fcmovu
mov
movsl
push
aaa
mov
and
test
xchg
ret
or
or
cmp
shr
mov
and
xchg
inc
aam
pusha
sub
lock
mov
sub
int3
js
fadds
fnstenv
or
mov
xlat
cmpsl
jmp
loope
xor
loopne
xchg
shlb
and
movsl
popf
add
adc
inc
jmp
inc
in
cmp
ficomps
je
scas
in
jmp
clc
ret
sarb
cli
jo
rorb
mov
cmp
jp,pn
cmpsl
data16
mov
mov
ret
pop
or
ret
dec
pushf
int
ds
ret
xchg
mov
mov
movl
movsb
inc
in
or
inc
xchg
ret
mov
pop
inc
daa
fdivp
mov
outsl
pop
ret
int
out
mov
test
cmp
ret
sub
xchg
popf
aam
push
inc
loop
fisubrs
push
ljmp
push
addb
jns
push
add
gs
ret
inc
sarl
adc
sti
hlt
ret
dec
jo
inc
lods
xchg
ret
adcb
add
dec
pop
movsl
scas
aam
xchg
adc
pop
lods
dec
je
jne
cmp
ret
cmpl
roll
fs
ret
sub
and
icebp
ds
dec
js
push
ret
ja
mov
jl
movsb
mov
leave
inc
push
and
pop
inc
ret
adc
push
push
or
and
ret
lcall
lods
ret
adc
gs
xchg
jb
out
clc
jg
push
push
xchg
push
ret
lahf
push
loopne
loop
jbe
inc
les
add
adc
jns
inc
clc
loop
in
jnp
ret
gs
rorl
cmpsl
push
sbb
stc
dec
dec
shll
jo
in
and
push
das
ffree
cmp
out
and
xor
jo
sbb
lret
hlt
mov
insb
adc
push
in
test
dec
cmp
inc
sub
sahf
xchg
inc
mov
mov
scas
clc
popa
adc
sub
or
mov
cmp
cmp
mov
fwait
popa
in
rcll
shll
fbstp
and
stc
mulb
addr16
bound
incb
ds
ret
std
imul
inc
fld
lock
push
mov
pop
dec
and
shlb
adc
sbb
test
push
mov
popa
sbb
jbe
push
stos
ret
xor
mov
inc
xor
pop
aam
inc
sub
sub
subl
cmpsl
mov
pop
ret
fcomi
popf
arpl
mov
xchg
lahf
or
cmp
int3
cld
jecxz
mov
lea
push
sbb
loope
add
cmp
aaa
or
xchg
ret
jg
push
xchg
fucom
ret
test
pop
cld
sub
and
pop
dec
pop
stos
adc
ret
out
out
js
subl
cmpsl
ret
pop
fwait
mov
imul
data16
jmp
jne
push
xchg
ret
ffree
mov
test
sbbb
arpl
mov
pop
inc
ret
inc
mov
pop
mov
jb
ret
push
inc
dec
and
mov
jbe
jne
mov
sub
or
pusha
into
ret
mov
mov
jbe
mov
add
es
pop
jnp
mov
mov
test
mov
insl
xchg
mov
js
adc
mov
arpl
xchg
ret
add
mov
mov
neg
xor
sbbb
pop
dec
mov
mov
fidivs
ss
jb
ret
sub
mov
pop
mov
add
inc
mov
xor
inc
dec
xchg
ret
pushf
adc
mov
out
or
mov
ret
or
cld
ret
bound
or
ret
xchg
mov
popa
cmpb
fstp
cmc
sbb
mov
incb
out
xlat
test
mov
cmp
mov
jge
int
lret
fld
lods
mov
leave
aas
lret
ret
repz
adc
sub
mov
fwait
lret
xlat
fdivrs
pop
pop
mov
xchg
and
sbb
fstpt
or
push
mov
mov
jnp
mov
arpl
movsl
cs
adc
jmp
inc
loop
sbb
mov
sbb
jl
xchg
test
sbb
adcb
add
mov
jno
inc
fs
dec
cmp
pop
cmp
insl
out
pop
cld
ret
inc
adc
ret
or
cmpb
add
movsb
ret
or
sub
ret
hlt
add
loopne
ret
stos
cmp
negb
int
xchg
xchg
adc
std
int3
rorl
lcall
out
add
mov
ret
loop
mov
adc
push
shrl
loopne
sub
mov
insl
cmc
loop
dec
stos
pop
rcl
push
pop
mov
sub
fcmovb
sti
pushf
fdivrs
mov
xchg
fisttps
cmp
ret
mov
ffreep
aas
and
xchg
mov
mov
subl
lea
mov
cmp
ret
xchg
sbb
mov
mov
mov
movb
mov
retw
in
mov
ret
sub
std
pop
inc
addb
inc
adc
frstor
mov
ret
push
out
nop
data16
cmp
icebp
es
mov
shll
les
ret
adc
push
adc
push
ret
sub
push
leave
icebp
pop
shrb
in
mov
pop
xlat
call
shl
pop
dec
sbb
aam
ret
pop
xchg
sbbb
pop
lret
push
mov
mov
lds
jg
jmp
push
scas
negl
ret
adc
insl
mov
lds
scas
es
ret
add
xchg
push
in
ret
cmp
xchg
fwait
push
fidivs
xchg
enter
xchg
int
xcrypt-ecb
cmpsl
dec
mov
addb
mov
imul
dec
shlb
test
ret
sbb
and
gs
mov
ss
btc
into
ret
ljmp
ret
or
icebp
sub
sbb
loopne
mov
ret
jl
iret
sti
cmp
ret
or
mul
push
fstpl
int
cs
xchg
cmpsl
xor
loope
jle
aas
test
and
and
test
movsl
push
inc
pusha
jp
dec
movb
xchg
xchg
mull
add
jg
out
jb
push
inc
cmp
inc
add
mov
cmpsb
jecxz
fsubrs
ret
js
out
shlb
add
test
decb
scas
push
pop
sub
adc
sbb
jecxz
xor
jg
pop
mov
sbb
leave
push
jmp
addr16
pop
outsl
adc
jae
and
ret
rcrb
mov
and
inc
xor
push
aam
fwait
cmpsb
js
adc
mov
mov
xor
in
ret
add
ret
sub
lret
sbb
insb
jl
cltd
ret
mov
inc
fcoms
mov
inc
repnz
lods
mov
mov
add
mov
in
inc
ret
lods
lcall
cmp
ss
iret
mov
mov
push
ret
dec
inc
test
add
jp
push
jl
mov
aas
pop
ret
cmp
sub
addl
out
test
mov
bound
arpl
inc
xlat
inc
xchg
ret
sbbb
cmp
adc
push
sbb
andl
mov
inc
mov
stc
xchg
mov
cmpsb
jge,pt
lods
pop
lret
icebp
ret
mov
aam
and
inc
and
pop
push
sub
xchg
pop
mov
shl
jp
sbbb
pop
addr16
aad
or
lds
ret
mov
test
daa
xor
loopne
fdivrs
addb
leave
add
movsl
mov
dec
pop
fwait
inc
mov
mov
bound
in
std
lods
arpl
js
fimuls
jecxz
sbb
cli
stos
ret
dec
sbb
movsl
cmp
ret
xchg
std
mov
pop
cld
iret
repz
mov
ret
pop
inc
sbb
inc
ret
dec
enter
fcmovb
inc
xor
outsb
repz
jns
movsb
stos
push
inc
ret
imul
xor
sub
daa
adc
mov
xchg
ret
outsl
mov
push
int
mov
dec
or
std
jl
cld
sbb
inc
xor
hlt
popf
xchg
mov
push
sbb
xchg
jmp
cmc
out
cmp
or
push
ret
sub
mov
out
xchg
shrl
mov
std
cmpsl
movsb
add
sti
mov
cli
ret
push
dec
xor
hlt
pop
stos
adcb
js
mov
div
mov
dec
movsl
ret
pop
jb
mov
fadd
push
subl
ret
mov
loopne
addr16
jge
mov
inc
cmp
mov
adc
sub
inc
mov
xorl
add
ret
inc
stos
out
lcall
lds
sbb
or
mov
push
push
xlat
ret
jnp
xchg
pop
mov
popa
jbe
adc
mov
xchg
lods
movsl
ret
adc
push
mov
push
add
push
ret
das
mov
iret
rclb
cli
add
aad
mov
sbb
xchg
mov
add
loope
ja
cld
jo
fistpll
mov
push
adc
cmp
negb
mov
fadd
cs
xor
int
push
or
fucomi
mov
pusha
jg
scas
loop
and
xorb
xlat
push
adc
data16
out
jbe
leave
in
push
inc
fxch
mov
daa
xchg
mov
lods
ret
in
mov
lret
test
nop
outsl
ret
imul
dec
sahf
mov
add
and
out
ret
mov
and
pop
or
ret
imul
ret
stos
pop
mov
or
mov
cmpsl
int3
pop
or
sub
cld
mov
subl
pop
ret
fdivrl
enter
dec
mov
cwtl
subl
lahf
pop
jmp
pop
ret
add
fcmove
ret
sahf
pop
aaa
add
aam
inc
pop
jl
inc
mov
xchg
adcl
sbb
jg
jo
add
inc
stos
or
mov
sbb
push
js
push
ret
aas
xor
mov
push
aam
movsl
dec
mov
pop
pop
add
stc
cmp
sub
ret
jmp
mov
sbb
adc
xchg
xlat
jnp
inc
imulb
mov
jb
js
shlb
addb
je
ret
pop
mov
ret
cwtl
mov
push
jae
ret
loope
ljmp
or
imulb
pop
mov
lods
sub
out
bound
adc
dec
inc
mov
addr16
mov
mov
faddp
xor
jo
loope
fistpll
pop
sbb
lock
stos
rclb
mov
test
add
add
cs
xor
ret
add
add
mov
pusha
call
hlt
stc
aas
xor
ret
pushf
pop
lret
in
addr16
mov
dec
cmp
bound
or
cmp
ret
jle
mov
mov
clc
xchg
notl
andb
xchg
or
lea
pop
nop
ret
hlt
bound
cmp
and
scas
mov
xor
out
mov
and
sbb
mov
ret
mov
mov
fcomip
push
fadd
mov
cli
mov
xchg
into
or
ret
push
enter
mov
and
jnp
stc
or
lahf
movsl
loope
mov
jmp
inc
dec
cmpsb
mov
cltd
ret
gs
in
fisubrs
or
sbb
ret
push
xchg
popa
dec
ss
mov
xchg
dec
out
add
mov
and
and
add
or
in
stos
ret
popf
push
out
fsubrl
fld
lret
mov
or
ss
lock
jecxz
test
daa
pop
stos
cmpsb
adc
mov
inc
cs
inc
push
cmpsl
mov
mov
cmp
dec
push
bound
and
loope
and
leave
fistps
movsl
mov
inc
mov
fistpl
dec
jl
inc
sub
xchg
stos
push
xor
ret
roll
scas
cmpsl
pop
ret
or
push
movsl
sti
iret
ret
dec
mov
leave
xor
mov
cmp
cs
loopne
aam
and
iret
cmpsb
adc
cmp
in
test
xchg
cmp
jge
push
outsw
stos
or
push
inc
mov
mov
cli
sbb
scas
pop
icebp
sbb
dec
jns
add
mov
fcompl
loope
fbstp
and
daa
pmulhuw
inc
mov
push
ret
hlt
inc
dec
mov
push
jmp
mov
adc
mov
ret
fwait
out
jecxz
rcll
mov
bound
movsl
jbe
mov
mov
pop
add
unpcklps
add
push
add
push
stos
jmp
mov
lock
ja
xchg
rcl
pop
inc
daa
mov
fwait
jo
sbb
adc
push
lret
xchg
xor
movsb
cmp
xchg
xchg
pushf
lret
outsb
mov
push
mov
push
xor
ret
andb
adc
sahf
out
sbb
insl
inc
in
fistl
fcomp
scas
jnp
lock
popf
mov
imul
jbe
mov
lret
sub
push
fiadds
iret
xchg
daa
pop
xor
sbb
xchg
addr16
or
adcb
shrb
in
mov
and
cmpsl
stc
lock
aad
push
pop
jae
and
lods
cmpsb
mov
mov
in
ret
icebp
jae
jb
jecxz
ret
rorb
ret
orl
cmp
dec
pop
negl
or
ret
jle
lahf
xorb
and
int3
dec
loope
mov
aas
or
xchg
out
js
mov
pusha
mov
xchg
ds
jg
orl
faddl
in
negl
lea
mov
cmp
enter
out
xchg
arpl
pop
pop
lods
mov
push
testl
lcall
ret
fbstp
lret
jmp
ret
dec
mov
rcl
sbb
pop
sbb
ret
dec
out
xchg
mov
xchg
lods
mov
mov
dec
ret
sub
and
xchg
pop
fbld
ja
ret
sets
cltd
mov
cmp
dec
imul
sarl
daa
pop
sbb
xchg
sti
stos
imull
xor
shll
lahf
mov
push
and
jo
ret
xchg
push
mov
ret
and
call
mov
cmp
stos
ret
rcrl
stos
dec
bnd
jp
pusha
mov
cmp
jl
ret
loopne
insl
data16
scas
fs
mov
mov
xchg
pop
jl
ret
sbb
aas
loope
jecxz
pushf
loopew
mov
ret
mov
ret
cmp
iret
jae
inc
adc
sbb
orb
fimull
ret
mov
push
mov
adc
shlb
cltd
sub
in
inc
rclb
mov
gs
setno
repz
sbb
ljmp
hlt
test
push
aad
ret
cmc
or
int3
xor
ljmp
les
lock
bsf
jnp
xchg
js
imul
jae
nop
cmpsl
mov
ret
popl
cs
std
not
cltd
inc
dec
inc
je
adc
mov
mov
sbb
lods
push
movsb
pop
mov
xchg
ret
lea
adc
mov
ret
mov
xchg
rcrl
dec
loope
mov
cld
outsb
ret
mov
dec
mov
mov
bound
dec
lock
pop
dec
jg
sub
daa
inc
in
ret
test
mov
ret
subw
and
cmp
mov
cmp
insb
sub
test
popf
pop
mov
arpl
pop
mov
scas
ret
stc
push
fimuls
out
pop
ja
mov
xchg
sub
ret
call
shll
cmc
mulb
or
ja
add
xor
add
js
ret
or
loop
movsl
mov
adc
and
or
cld
idiv
cmp
popl
adc
andl
xor
inc
dec
fs
mov
mov
jecxz
mov
jl
popf
outsl
jmp
mov
ret
cmp
push
add
adc
sbbb
in
loope
lcall
ret
ss
mov
setb
test
es
dec
sbb
jbe
xchg
rorl
popa
repnz
call
clc
dec
cmpsb
gs
ret
mov
repz
ja
and
inc
push
mov
jp
ret
and
jnp
mul
cmpsl
jns
push
mov
arpl
gs
ret
mov
out
sub
inc
out
lret
fnstenv
ret
testb
push
ret
jl
pop
call
push
in
mov
loopne
scas
adc
fdivrl
and
ret
and
out
fwait
jno
push
ret
ja
shrb
sbb
adc
shr
dec
xorl
nop
mov
push
imul
imul
dec
stos
and
ret
stc
nop
xchg
loopne
dec
and
dec
popa
lahf
lock
dec
into
ljmp
cmp
sub
rcl
pop
lds
mov
sub
mov
ret
fbld
push
ret
push
lahf
pop
mov
notl
aas
pop
and
je
outsl
mov
xlat
push
ret
lock
insl
andl
in
cld
fisubrs
pop
sar
aaa
ret
inc
xchg
inc
aad
jg
mov
neg
push
inc
test
add
xchg
loopne
pop
daa
int3
ret
outsb
fimull
js
mov
out
call
jmp
inc
push
imul
fstl
addr16
jne
loopne
jecxz
ret
mov
cmpb
jmp
insl
mov
fstp
xchg
push
mov
outsb
mov
jb
xor
sar
dec
mov
test
mov
dec
arpl
and
sub
mov
cwtl
add
jae
pushf
cmc
loope
and
mov
xchg
adc
sub
mov
xor
sub
cltd
ret
xor
push
xchg
mov
shlb
adc
rcll
out
ret
fldt
xor
ds
mov
in
dec
or
mov
popa
fwait
jmp
mov
ret
cs
aad
imul
orb
add
loopne
addb
mov
xor
ret
int
mov
ds
sarb
mov
inc
inc
mov
mov
loope
fisubl
push
inc
add
out
stos
pop
inc
inc
lods
movsl
and
mov
push
mov
mov
dec
xchg
push
repz
ja
adc
ljmp
mov
push
rol
rcl
mov
jmp
loop
mov
xchg
xor
mov
stos
push
inc
push
es
mov
jb
movsl
mov
xlat
adc
cmpsl
mov
jbe
ret
daa
xor
jnp
cltd
ret
jle
cmpsb
stos
mov
dec
mov
pop
mov
ret
mov
dec
push
ret
decb
fwait
xchg
inc
mov
fdivl
stos
scas
iret
dec
cmc
ret
addb
push
out
fs
cmpsb
sbb
mov
outsb
fsubrs
ret
jae
or
subb
lock
popa
iret
dec
leave
test
addl
cmp
ret
and
xlat
or
cs
dec
mov
dec
mov
xor
es
jp
xchg
push
loop
adc
ret
mov
xlat
ret
mov
and
ret
push
gs
pusha
rol
push
out
cmpsl
mov
or
adc
push
dec
ret
xor
pusha
roll
imul
lahf
ds
pop
or
in
xchg
dec
stos
inc
cmp
inc
bound
subl
loop
lods
enter
jl
icebp
pop
dec
adc
sahf
fdivrl
cs
xchg
in
es
or
outsl
dec
movsb
and
and
orl
push
ret
xor
lcall
dec
xchg
xlat
pop
mov
je
movq
jne
ret
and
cmp
ret
sub
jbe
inc
rcll
aas
or
mov
test
push
mov
aaa
das
mov
aas
mov
pop
int3
ja
pop
adc
ret
mov
sbb
in
push
push
pop
rol
cmp
or
lock
push
incb
jo
fmulp
mov
jne
inc
bound
dec
imul
lods
test
cmp
ret
out
jne
sahf
and
fbld
inc
pop
in
lahf
test
mov
add
fs
data16
pop
dec
cmp
and
fwait
mov
mov
ret
xor
shl
xchg
mov
sub
and
ret
roll
cmp
nop
daa
pop
push
imul
enter
ret
clc
jo
and
xor
cmpsb
push
xchg
insl
inc
loope
add
mov
out
into
pop
int
mov
inc
ret
dec
mov
ljmp
insb
adc
scas
inc
adc
jo
push
mov
cmpsb
ret
mov
imul
sub
pop
pop
movsl
mov
test
popa
mov
sub
mov
ss
insb
ret
fnstsw
ret
sub
test
in
ret
fldl
and
movsb
add
aaa
ret
push
sarw
test
pmaxsw
js
or
cld
rclb
sbb
add
fsubl
ret
xchg
xchg
and
inc
jecxz
xchg
mov
jae
mov
jmp
repnz
pop
out
iret
inc
mov
int3
popa
fidivl
pop
ret
or
inc
ret
mov
int3
fs
mov
je
adc
xchg
stos
jo
ret
mov
ret
push
lret
sbb
ret
push
loope
sub
xor
mov
add
ret
dec
mov
inc
lcall
arpl
sub
adc
push
xor
xorl
daa
jne
mov
pop
jb
test
dec
pop
add
loope
ficomps
pusha
mov
inc
ss
lock
sbb
jge
xchg
stos
mov
loope
arpl
popf
loop
popa
dec
mov
aas
lret
or
ret
jecxz
shlb
ret
ss
popf
or
cmc
test
cli
inc
ret
rclb
ret
mov
cmpsb
ret
aaa
push
in
pop
xchg
out
lret
mov
mov
push
sbb
mov
mov
loope
lret
jb
xor
in
ja
lahf
popa
lock
inc
cltd
and
push
test
loopne
dec
or
mov
test
or
add
inc
mov
in
xor
inc
ret
push
mov
mov
scas
movsl
popa
dec
pushf
adc
and
push
inc
roll
xchg
cltd
subb
pop
cmpsl
jns
sbb
ret
loopne
jne
ss
dec
test
cmp
insl
ret
xor
pop
iret
jo
loopne
mov
jg
pop
shrl
sti
dec
popa
pop
test
ret
add
bound
fcoml
or
fwait
outsl
lock
dec
ret
decl
mov
enter
mov
xchg
mov
cmp
ret
lods
stos
dec
js
mov
xor
ret
mov
lock
ret
outsl
push
roll
ret
aad
fimuls
rclb
xorl
shrl
cmpsl
sub
int3
or
sti
mov
decb
mov
insl
xchg
jns
stc
andb
ret
nop
dec
jo
jae
ret
cmp
dec
inc
inc
xlat
loopne
les
aad
scas
sub
rcl
ror
lods
ret
jbe
xchg
adc
icebp
ret
push
dec
sub
les
mulb
mov
inc
and
insb
and
add
stos
xor
xor
lcall
loop
xlat
retw
cmp
xor
ret
daa
out
cmpsb
xor
into
adc
pop
xchg
ret
sub
pop
jo
bound
jne
adc
stc
mov
ret
loope
fs
das
andb
mov
dec
aad
mov
fwait
scas
sbb
in
stos
cs
add
add
cmp
movsl
cmp
jnp
add
lret
inc
mov
mov
movsb
testb
bound
popf
dec
xlat
sahf
dec
inc
mov
roll
inc
ja
popa
or
or
add
dec
ret
flds
ret
lcall
out
mov
out
sbb
fnstsw
in
mov
or
inc
ret
mov
ret
in
mov
mov
mov
pusha
and
rcll
ljmp
pop
fs
ret
arpl
inc
sbb
test
js
xor
ret
push
xchg
lods
shrl
bound
out
mov
lock
rcr
je
fcmovnb
arpl
scas
mull
dec
outsb
fsubrl
test
ret
frstor
push
jle
push
ret
mov
sbb
pop
jae
add
in
pop
aaa
lret
mov
sbb
jg
dec
bound
frstor
out
add
in
jp
pop
incb
mov
lea
or
mov
push
push
pusha
iret
inc
js
cmp
jecxz
sarl
xchg
cmp
stos
push
jb
mov
jmp
in
or
jne
inc
insl
ss
popa
in
pop
jb
js
rolb
jge
ret
xchg
and
jmp
hlt
ret
aaa
pop
inc
sti
sbb
out
cwtl
sub
xchg
loope
xor
xchg
mov
sub
add
sub
test
inc
es
dec
mov
test
ss
shll
adc
cltd
mov
out
pop
std
jne
shlb
in
xor
mov
lods
push
loope
lcall
pop
or
jecxz
jb
fwait
repz
lds
ss
ret
xchg
add
xor
aam
fcoms
fs
pusha
or
jge
cmp
aas
orb
cmp
ret
inc
lret
mov
ret
or
mov
cli
fwait
lahf
inc
in
mov
ret
inc
ret
je
cmpsb
sahf
and
inc
out
fnsave
clc
stos
ljmp
fdivrl
cmc
jnp
mov
pushf
aad
popf
sub
aas
repz
jmp
push
sub
loope
out
mov
ret
popa
jmp
push
mov
mov
in
ret
cld
loope
or
bound
xchg
test
dec
pop
ret
xor
leave
fsts
ret
pop
sbb
jmp
loopne
pop
inc
jecxz
xor
loop
ret
arpl
icebp
push
and
add
cli
loope
mov
mov
inc
inc
xchg
xchg
mov
sarl
iret
cwtl
stos
ret
mov
and
adc
aaa
out
and
jnp
ret
add
jb
scas
ret
add
dec
movsb
ret
inc
or
push
adc
and
push
pop
xchg
daa
xor
xor
int
lret
mov
push
loop
std
ret
pushf
dec
xchg
jbe
ret
cmp
ret
inc
loop
dec
sbb
ret
outsl
out
inc
push
sbb
in
subb
cmp
inc
adc
dec
rol
test
xor
ret
sbb
dec
sbb
and
xor
fwait
lret
cmc
pop
andb
adc
xor
xchg
ja
into
add
fisttpll
roll
jae
add
mov
jecxz
and
data16
fisubrl
mov
ss
ret
and
shlb
cmp
add
rcl
in
ret
andl
add
sub
push
icebp
ret
jns
fdivl
fs
shl
mov
push
add
mov
xchg
rol
jbe
cmp
pop
ret
or
ret
xchg
mov
loop
xchg
pop
enter
daa
mov
and
ja
out
sub
fimuls
ret
mov
ret
and
ret
mov
ret
cltd
ljmp
shll
idivb
outsl
inc
shlb
mov
mov
ret
mov
scas
stc
inc
dec
ret
fnstsw
cmp
mov
push
mov
das
cmp
repz
ds
push
les
jbe
pop
adc
fldlg2
scas
dec
pop
ret
sub
sub
nop
adc
cmp
loope
jns
mov
mov
and
jnp
stc
jae
pop
push
shrb
ret
cmp
ret
xor
dec
bound
mov
add
sub
jmp
loope
fistps
cmp
pop
adcb
idivl
lods
ret
mov
cs
cmpsl
sbb
addr16
sub
ret
pop
scas
mov
fcomp
ret
in
add
sbb
imul
jns
cld
mulb
lods
add
jb
or
pop
lea
cmp
mov
in
ret
js
xchg
lret
ret
mov
jo
pop
xlat
inc
mov
jp
enter
xchg
daa
xchg
jne
mov
test
mov
sbb
ret
pop
cs
push
mov
inc
or
rol
mov
xchg
push
adc
fwait
mov
hlt
test
pop
ret
cmp
gs
leave
lcall
add
mov
pop
ret
pop
dec
mov
xchg
jl
shrb
icebp
dec
bound
mov
loopne
cmp
dec
mov
sti
loope
es
xchg
xor
mov
jae
stos
dec
stos
es
cmp
decl
and
mov
jnp
ret
ror
push
xor
ret
fisubl
or
mov
call
xchg
ret
aas
sbb
ret
negl
vcmpss
jnp
aas
or
cmc
dec
mov
inc
inc
mov
push
xchg
sbbb
ret
jge
mov
ret
out
dec
mov
pusha
mov
test
jl
lret
ret
mov
fwait
loope
lock
mov
ret
dec
mov
push
loop
ljmp
mov
ret
or
xor
jne
bound
mov
mov
or
push
jmp
mov
ds
pop
repz
inc
std
sbb
cmp
cltd
movsb
mov
sub
mov
mov
ret
sbb
insl
test
dec
cmp
dec
adc
xchg
lods
iret
in
ja
and
rol
sti
mov
jo
pop
push
mov
mov
dec
lea
cwtl
xor
mov
adc
loopne
cmp
fsubs
test
lock
daa
rcr
movsb
daa
push
inc
cmp
outsl
xchg
aad
ljmp
aas
adc
loop
ret
jge
sub
mov
push
loop
sub
pop
dec
ret
mov
jns
test
sub
pop
loopne
mov
bound
sarl
arpl
or
push
test
push
ret
xor
xchg
scas
ret
andb
loopne
ret
mov
mov
jle
xchg
dec
gs
cmp
jge
mov
popa
inc
subl
roll
outsb
aaa
ret
test
scas
ret
cli
jae
imul
and
mov
jl
outsb
fcmovb
js
imul
ret
add
ret
in
into
inc
jnp
or
lcall
std
xlat
mov
arpl
mov
int3
ret
out
cmc
cmp
xor
repnz
xchg
leave
ret
jbe
hlt
mov
add
mov
outsb
cmp
dec
ds
test
lret
das
jp
test
add
bound
rcl
pop
push
lods
stos
bt
mov
xchg
push
cmp
ds
imul
lret
xchg
mov
cmpsl
cmp
push
iret
in
insb
neg
cmp
mov
fistpll
pushf
ret
insl
pop
jne
fldt
xchg
mov
adc
cmpsl
and
push
fmuls
cmp
mov
xchg
xor
loope
pop
add
and
mov
jns
in
ret
int3
push
jmp
mov
or
add
jae
out
ret
mov
lcall
stc
adc
mov
test
and
fs
into
jnp
jbe
stos
or
hlt
mov
dec
ljmp
cmpsb
mov
and
pop
and
ret
xorl
fsts
ret
nop
inc
and
pop
int3
aam
shll
pop
cwtl
ret
cs
inc
lahf
adc
inc
aas
jle
mov
and
ret
add
ret
aaa
sbb
mov
jecxz
fnsave
pop
roll
and
add
popf
test
outsb
hlt
imul
mov
push
mov
push
xchg
dec
mov
mov
imul
jg
scas
xchg
push
adc
ret
lcall
sbb
push
test
ret
aaa
rolb
fadd
mov
inc
popf
test
lret
in
xchg
and
jge
ret
mov
pop
leavew
jg
sub
mov
es
stc
dec
jecxz
mov
test
cli
add
ret
pop
push
ret
xchg
out
xor
cmp
outsb
cmp
imul
adcl
repnz
xchg
test
xor
inc
and
mov
mov
inc
sub
pop
in
sahf
inc
xorb
test
fadd
data16
xchg
aam
push
inc
ret
inc
xchg
add
lcall
popa
rol
mov
pushf
sbb
ret
lds
inc
in
mov
ret
or
stc
ja
loope
aaa
sub
inc
lcall
aas
andb
stc
lea
push
dec
icebp
jns
mov
stos
out
dec
and
mov
xor
jge
ret
lret
fisubrs
mov
and
dec
hlt
ret
xchg
jbe
stos
ret
add
inc
adc
add
mov
or
test
inc
pop
movsl
dec
xor
push
xlat
add
mov
ret
sbb
mov
xor
add
ret
sbb
pushf
xor
pop
ret
aad
fidivs
adc
ret
xor
sbb
cs
push
dec
notb
mov
ret
adc
fwait
ret
in
test
lock
lds
cmpsl
adc
mov
movsb
addr16
push
jmp
faddl
xchg
push
xchg
cld
repnz
or
dec
js
mov
int
push
push
daa
mov
and
add
mov
ret
mov
and
clc
adc
leave
ret
dec
imul
ret
xor
loop
ret
scas
bnd
push
and
mov
out
popf
mov
aam
sub
jbe
fbld
loop
shrl
dec
sbb
or
adc
dec
ret
pop
pop
xchg
les
ret
addr16
push
mov
adc
out
mov
adc
test
movsb
ret
mov
xorl
shl
or
ret
sbb
aad
ret
lret
jge
mov
pop
or
push
mov
push
bound
sbb
mov
push
push
ret
or
jbe
push
jge
insb
inc
sbb
xchg
idivl
push
sbb
loop
into
int
pop
or
psubq
add
out
lea
push
sub
in
ds
loope
mov
add
lods
push
ret
adc
popa
push
addl
pop
push
fisubs
mov
ja
mov
fnstcw
aaa
sbb
sarl
cmpps
cmp
test
mov
in
lret
mov
mov
pop
int3
push
out
into
idivb
sub
cmp
ret
out
insl
movsb
mov
xor
scas
das
lea
push
add
mov
and
lods
cwtl
dec
fwait
adc
jb
push
enterw
and
xchg
loop
in
div
ret
sub
inc
pop
dec
jnp
nop
arpl
mov
les
jg
int3
and
scas
ror
push
cmpps
jp
loopne
outsb
ret
sbb
into
xchg
mov
or
loope
ret
mov
pop
add
jg
lret
mov
stos
mov
ret
ret
cmp
out
lcall
xchg
xor
lahf
cmp
jle
ret
int3
and
xor
outsb
sbb
lea
dec
mov
ret
mov
cld
sub
jg
enter
inc
sub
imulb
pop
leave
pop
add
and
dec
lea
lods
and
int
mov
femms
scas
scas
jecxz
decb
dec
pop
ds
mov
cmp
adc
lods
pop
ret
decl
ret
mov
mov
adc
jae
ret
sub
loop
sbb
xchg
test
into
pushf
mov
hlt
iret
repnz
pop
mov
daa
push
cwtl
cmpsb
or
jae
dec
test
leave
stos
mov
xchg
lahf
or
fisubl
aas
sub
mov
xchg
mov
add
lahf
stos
divb
mov
pop
es
ret
js
int
push
nop
ret
test
dec
jno
ret
or
jnp
xor
lcall
sub
and
ss
or
icebp
lea
movsl
sbb
ret
cmc
jge
pop
hlt
mov
xor
and
idivl
pushf
inc
ret
sub
das
ret
mov
add
xchg
shl
mov
outsb
bound
mov
xchg
ret
in
jg
out
cmpsb
fs
push
ret
stos
out
and
inc
ret
ret
and
scas
dec
int3
jge
insl
pop
divb
pushf
mov
ret
aaa
aas
inc
adc
mov
loop
inc
ret
fmuls
ret
or
gs
cld
mov
cmp
pop
mov
mov
pop
push
shrb
movsl
and
pop
mov
inc
cmp
dec
mov
pusha
or
mov
pop
add
repz
or
or
inc
and
push
clc
iret
lock
mov
lea
pop
sti
out
icebp
stc
dec
fldcw
rol
int
jl
outsb
cld
mov
push
movsb
xchg
add
out
or
ret
and
cs
daa
add
add
int3
outsl
cltd
mov
int
mov
fisubl
mov
stos
pop
dec
lock
and
mov
popf
and
jns
loop
pop
and
sbb
cs
movsb
adcb
mov
movsl
xchg
ret
stos
gs
in
rol
in
push
cmpsl
test
mov
dec
ds
loopne
das
cmp
mov
push
std
aam
andb
inc
loopne
or
insl
adc
out
mov
orb
ret
push
fildl
daa
bound
cmpl
fsubrl
sbb
ret
movsl
jnp
cmp
dec
ret
sub
adc
loope
mov
fcmovnb
or
sbb
add
fwait
adc
mov
jge,pn
jns
rcrl
ret
les
mov
mov
pop
push
inc
outsl
and
ret
dec
jbe
fwait
ret
sub
ret
loope
sar
jae
mov
arpl
das
mov
cmp
ret
ja
fidivrl
stos
shr
push
ret
jl
andl
pop
dec
xor
cmp
and
sbb
lret
ret
stos
pop
dec
push
or
std
mulb
push
leave
mov
or
pop
sahf
fisubl
dec
data16
push
jb
loope
cli
jbe
jg
xchg
add
ret
add
push
out
mov
sub
mov
adc
addr16
sbb
push
mov
jbe
xchg
out
inc
in
add
imul
and
movsl
loope
test
and
lret
ret
dec
test
sub
fiaddl
fs
jecxz
mov
ja
bound
jne
hlt
mov
ret
sbb
ret
insl
jl
cmpl
sbb
ret
loope
jg
pop
ret
mull
jp
pop
ret
mov
lahf
mull
sarl
or
ret
fbstp
sbb
sahf
movsb
add
repz
adc
mov
aaa
ret
cmp
and
pop
outsl
sbb
lea
add
mull
nop
ret
lods
cmp
inc
decl
js
sub
rol
cmp
leave
mov
or
inc
ljmp
xor
shl
xchg
or
popa
jne
mov
add
ret
in
jmp
and
pop
mov
cmp
push
jb
dec
std
rol
mov
inc
test
inc
xchg
and
xorl
in
mov
movsb
push
neg
loope
jg
stos
xor
dec
loope
mov
js
call
jne
sub
ret
xchg
rcrl
and
cmpsb
pushf
aaa
mov
dec
mov
icebp
bnd
arpl
test
push
xchg
int3
imul
bound
xchg
cwtl
sahf
and
push
pusha
pop
xchg
sub
mov
es
xor
data16
and
aam
int
mov
add
out
call
popa
sub
ret
xlat
sbbl
bound
mov
mov
and
cmc
cmp
cwtl
ret
loop
inc
cmpb
pop
cmpsb
mov
sbb
cmpsb
adc
or
mov
mov
out
xor
inc
add
js
and
gs
scas
test
mov
mov
inc
out
loope
lods
repz
sub
fbld
fcomp
lock
mov
mov
inc
add
push
jo
scas
arpl
inc
cmc
mov
ljmp
shld
ret
inc
dec
jmp
inc
pop
xchg
push
xor
mov
loop
sbb
fidivs
ret
sbb
cld
cli
push
push
ret
adc
cmp
stos
mov
jno
in
ret
inc
mov
ss
out
add
imul
jl
jae
dec
repz
jp,pt
cmpsl
cli
ret
outsb
mov
mov
sub
out
frstor
push
add
rorl
mov
ret
ret
test
adc
int
push
stos
mov
adc
or
mov
push
sub
mov
pusha
push
loop
mov
scas
sub
jns
out
aam
jle
insl
xor
rcll
fwait
inc
adc
roll
mov
xor
ret
rcrb
test
adcb
push
shrl
inc
pop
sub
mov
fnsetpm(287
pop
xor
cmp
sub
cmpsb
addl
rcll
fsubrs
sbb
push
push
bound
cmc
sub
mov
jl
lret
fmull
sahf
mov
cmp
rolb
jb
push
mov
in
xchg
bound
jns
xlat
mov
mov
cmp
ret
xchg
or
mov
sbb
add
les
fisubrs
cmp
inc
scas
push
and
in
mov
imull
aad
dec
js
mov
adcb
mov
and
mov
loopne
xchg
sub
call
mov
out
push
out
ret
mov
loope
testl
sahf
ret
insl
jmp
ret
sbb
gs
xchg
mov
mov
ret
ret
cmp
aam
fwait
ret
gs
lret
add
jnp
shlb
mov
lds
movsb
mov
inc
nop
andb
leave
shrl
cmc
movsl
fldcw
push
shlb
add
int
push
dec
jg
andl
push
ret
inc
xchg
int
fistps
stos
add
or
test
es
xor
mov
frstor
sbb
xchg
fistps
dec
ret
in
shll
mov
in
jp
cs
add
lahf
ret
nop
jle
out
sub
mov
jo
pop
sbb
pop
and
pop
mov
in
ljmp
ret
icebp
fisttpll
push
test
add
pusha
lock
cmp
outsl
ret
js
lods
adc
jecxz
jle
add
das
ret
push
pop
jb
ret
push
rorl
mov
bnd
pop
mov
push
lcall
push
je
jmp
mov
inc
out
inc
cmpsb
jbe
mov
jb
push
add
and
sbb
pop
pop
int3
mov
add
cwtl
xor
loope
dec
fbstp
ret
stc
add
sahf
cs
pop
pop
mov
push
ds
xchg
add
lret
iret
mov
imul
repnz
add
inc
enter
clc
mov
lea
daa
fwait
cmpsl
stos
add
mov
std
mov
fldl
cmpsb
ljmp
insb
push
aam
xor
mov
loope
sbb
popa
sbb
ret
insb
ficompl
jp
ret
outsl
or
or
enter
bound
daa
in
xlat
push
ret
push
sarl
js
mov
pusha
ret
loope
inc
or
mov
rorb
ret
fcmovne
daa
mov
sub
cmpsb
addr16
lcall
mov
push
movsb
xchg
std
mov
cmpsl
push
fdivs
clc
orb
js
add
out
movsb
inc
andl
push
fidivrs
test
leave
push
ljmp
mov
dec
jmp
inc
jbe
scas
xor
test
mov
je
mov
ficomps
adc
lahf
push
fidivrs
ret
dec
popa
outsb
fistpll
ret
inc
xchg
inc
jb
jno
stc
and
popa
addr16
loop
ret
pop
add
sahf
pop
dec
push
jbe
cli
or
rorb
cmp
fmull
ret
pop
fisttps
test
loope
jne
cmovns
and
test
dec
outsl
int3
les
lods
imul
mov
add
loope
mov
cmp
aam
xor
popf
rolb
iret
lcall
scas
aam
mov
push
jl
mov
loope
fwait
mov
mov
sub
lock
rcrb
ret
sti
jo
outsl
dec
iret
add
fs
xor
ret
mov
jne
mov
cmp
pop
sub
ret
sub
mov
bnd
ret
roll
std
jge
ret
icebp
mov
add
sbb
mov
cmpl
call
popa
dec
and
mov
add
cmp
push
iret
push
cld
cmp
ret
push
loope
fcmovbe
cmp
mov
mulps
aad
je
sub
push
xchg
xchg
ret
dec
lds
and
xlat
bound
ret
test
push
ret
fldt
in
mov
xorb
aad
xchg
push
ret
adc
sbb
in
iret
add
jb
mov
test
ret
lret
inc
mov
ret
push
dec
jbe
testb
add
xchg
mov
dec
xchg
sahf
adc
cmp
insl
cltd
sub
xor
mov
mov
out
add
push
push
push
ret
cmp
ret
push
or
enter
mov
sbb
mov
test
mov
aas
cmpsb
ficoml
imul
scas
jb
inc
mov
ret
and
daa
lahf
stc
lea
insl
push
gs
dec
xchg
pop
scas
clc
mov
push
inc
mull
loopne
jmp
add
pushf
mov
gs
ret
jge
dec
xchg
int3
jg
scas
xchg
mov
subl
pop
dec
dec
mov
jp
ret
mov
ffreep
cs
lahf
xchg
dec
pop
ret
bound
int3
outsb
mov
loop
add
aas
loopne
cmp
adc
pop
mov
xchg
mov
inc
ret
bnd
mov
push
pop
data16
xchg
add
mov
ret
cmp
xchg
add
js
cmpsb
mov
ret
lret
or
in
ret
xor
pop
pushf
add
es
insb
shlb
jecxz
cld
dec
mov
ret
sbb
jmp
and
ret
enter
sub
jb
and
sar
clc
ret
xchg
jns
movsl
popa
push
xchg
hlt
cmpsb
xchg
rcrb
dec
movsb
sub
cld
mov
jae
lret
retw
popl
jne
push
ret
xchg
adc
jns
je
pop
add
dec
sub
push
leave
ret
mov
mov
mov
mov
jle
cmpsl
xor
push
stos
arpl
pop
out
push
ret
mov
rclb
add
push
mov
ds
mov
mov
and
xchg
ret
addr16
mov
add
cmp
call
popa
sub
aas
ret
pushf
xchg
or
loopnew
cwtl
inc
lds
push
cmp
inc
js
cmc
stos
jo
xlat
scas
ret
lods
loope
xchg
inc
xchg
and
cmp
pop
fisubrl
push
cmpsb
and
or
lret
xorl
inc
aaa
pop
into
and
mov
pcmpeqd
adc
pop
lret
pop
pop
ret
inc
push
inc
pop
add
repz
fld
inc
fs
sub
jp
mov
adc
pop
mov
fsubs
out
xlat
mov
loop
or
fwait
popa
ret
sub
repnz
out
ret
jnp
fmul
lcall
je
mov
jge
lahf
inc
xchg
pop
outsl
ret
cmp
ret
pop
scas
fsubrp
xor
adc
fs
inc
cli
mov
add
cmp
inc
test
ret
movsl
iret
dec
xor
sti
pop
mov
ret
dec
cmp
sbb
mov
sub
and
jo
ret
jle
jns
jp
lock
daa
or
hlt
jl
test
add
retw
int
sbb
cmpsb
sbb
adc
dec
or
ret
add
sub
xor
mov
ret
in
scas
adcl
mov
ja
push
dec
popa
xchg
test
andl
insl
mov
push
scas
mov
xchg
ret
or
ja
sti
sbb
lock
pop
sbb
loopne
addr16
cmp
push
lret
mov
mov
mov
mov
cwtl
mov
rcll
int
push
sbb
in
ret
pop
les
ja
ret
insl
xchg
mov
jl
inc
call
ret
xchg
ret
leave
addb
loop
ret
cmp
mov
sarb
pop
and
arpl
test
pcmpgtb
out
or
cltd
push
movsl
out
ret
icebp
and
jbe
stos
xor
lods
call
cmp
sahf
ret
es
inc
ret
das
mov
ret
ja
sbb
aad
loopne
fadd
into
ret
ficoml
in
call
mov
ret
add
stos
ret
divb
push
imul
ljmp
jns
add
and
pop
insl
das
ja
fisttpl
and
lods
out
adc
mov
bound
in
push
cmp
popa
or
fwait
xchg
mov
push
loopne
ret
inc
xor
jecxz
maskmovq
ret
sub
xchg
popa
ds
lds
out
xlat
and
or
mov
mov
mov
stc
sub
add
and
mov
pop
ret
test
into
adc
and
stos
cmp
mov
ljmp
dec
jb
push
ja
mov
sbbl
mov
loopnew
faddp
cmpsb
cld
mul
adc
adc
sbb
jle
push
jns
xchg
stos
sub
mov
xchg
mov
in
cmpsb
fcmovnb
add
lds
pop
ret
push
les
pop
scas
jge
mov
in
add
xor
loope
pop
bound
pop
mov
adc
jne
and
xor
rclb
rorl
fnstenv
pop
cmpsb
ret
cmp
mov
insb
push
jne
in
xchg
push
and
mov
cmp
loopne
out
cmp
hlt
call
ja
mov
push
ret
rorb
adc
jl
fdivrl
sub
pop
ret
pop
adc
sub
dec
cld
jae
ret
loope
out
scas
mov
or
addr16
cmp
sub
ret
xchg
daa
das
mov
mov
sbb
adc
inc
fdiv
pop
movsb
jnp
arpl
stc
pushl
cmc
cltd
push
std
mov
bound
imul
bound
stc
les
pop
scas
daa
inc
inc
leave
pusha
shlb
cmp
inc
push
data16
ret
mov
push
mov
fsubp
imul
jecxz
gs
pop
insb
ret
rorb
fisubl
xchg
lds
aas
and
push
or
adc
stos
inc
push
ret
xchg
pusha
imul
insb
fiaddl
add
out
mov
ret
xchg
and
mov
lea
ret
test
jmp
pop
fimuls
leave
mov
inc
mov
sbb
xor
ret
cmp
and
and
or
das
or
inc
movsl
inc
test
lret
mov
popa
mov
movsl
inc
cmc
xchg
ret
call
or
mov
test
cltd
outsl
ret
je
xorb
mov
fxam
addr16
aaa
ret
dec
xchg
stc
jae
xchg
lahf
or
jno
out
iret
mov
ret
pop
enter
loope
xor
dec
push
rcl
shrb
aaa
outsb
ja
pop
fadd
xchg
sbb
stos
or
mov
jns
dec
ret
shll
xchg
mov
inc
mov
and
int
inc
add
dec
push
adc
std
sti
xor
dec
ret
mov
and
lret
popf
pop
test
ret
mov
ret
push
imul
mov
stos
test
ret
icebp
ljmp
gs
loopne
shrl
ret
sub
add
and
ret
ja
dec
sbb
ret
aaa
and
movsb
inc
adc
outsl
xor
leave
jnp
xchg
test
adc
ret
xor
or
mov
fldcw
mov
inc
aas
rol
push
lock
jle
scas
imul
mov
mov
iret
mov
ret
mov
loope
movb
ret
stc
and
mov
pop
add
jo
jne
sub
and
mov
addr16
mov
or
dec
cmpsb
setae
and
ret
sub
mov
mov
xchg
mov
fisubrs
mov
add
or
ja
jne
mov
test
jne
ss
aad
mov
mov
sbb
in
add
cmpsl
xor
xor
shrb
lret
icebp
inc
mov
jmp
push
xchg
outsl
mulb
push
mov
mov
dec
inc
test
fmull
ret
and
scas
inc
inc
ret
jmp
jae
lea
push
popf
gs
shlb
into
fwait
lods
ds
mov
adc
enter
sarb
sbbb
stc
cmp
push
mov
push
inc
jo
in
nop
call
push
stos
pop
fnstenv
aas
out
and
mov
stc
push
xchg
les
or
movups
into
inc
int3
call
out
jno
push
or
outsb
sub
push
inc
scas
add
jg
cmp
scas
push
ret
in
jb
dec
push
bound
negl
and
cs
lret
jle
fs
cli
mov
push
mov
outsb
add
ss
jnp
aaa
faddl
ret
sub
jg
and
loope
stos
xchg
mov
xor
add
jecxz
and
adc
ret
mov
dec
aad
shrb
inc
push
dec
ret
jne
fs
rol
stc
add
cmpsb
fiadds
enter
popf
mov
cs
mov
ret
jmp
sub
pop
pop
ret
inc
adcb
mov
jb
fdivs
and
das
ret
ficomps
divl
pop
pop
mov
pop
sbb
inc
scas
pop
mov
jae
shrl
mov
mov
add
inc
stos
addb
jge
pop
ret
xor
push
or
xchg
ljmp
cwtl
mov
push
cltd
adc
xor
imul
add
jmp
loop
mov
jb
ret
lahf
pop
loopne
mov
add
dec
ret
cmp
stos
xchg
push
es
scas
sub
add
call
ret
aas
jnp
sub
and
out
aam
jecxz
movsb
pop
dec
ret
insb
pop
cmc
mov
jmp
sbb
fbld
bound
sub
test
mov
cld
out
ret
inc
imul
jne
int3
ret
test
ret
mov
ffreep
pop
repz
push
inc
mov
ret
cs
subl
inc
ret
or
and
inc
cld
loop
dec
inc
lret
mov
lea
mov
insl
mov
and
movsl
cli
ret
out
dec
jmp
inc
shrb
loope
cltd
pushf
xlat
ret
cmpsb
add
imul
mov
ret
cmp
dec
ret
ja
xor
mov
pop
pusha
pop
outsl
stos
cld
ret
mov
addr16
pop
out
aam
dec
cmp
bound
hlt
rorb
nop
outsb
ret
cld
fdivrl
xor
xor
dec
ret
adc
sub
ret
sub
repz
int
lret
fnop
stos
jmp
sub
std
das
repz
jle
test
inc
push
inc
mov
stos
xor
mov
movsb
out
ret
aam
cmc
shll
xchg
and
popf
testb
insb
inc
cmpsl
les
xchg
sti
ret
dec
ds
lods
inc
loop
mov
mov
mov
ret
cmp
xlat
mov
adc
cltd
ret
push
mov
ret
int3
jp
or
ret
ljmp
sbb
mov
in
dec
pop
es
cmp
jo
add
jl
pusha
push
xchg
dec
mov
ret
and
lods
test
push
cmp
inc
ret
cmp
jns
daa
out
xlat
xchg
xchg
jle
pop
test
test
pop
sub
push
ret
and
movsb
fcompl
test
dec
stos
fldl
ret
shl
jge
gs
cmpsl
clc
xor
sti
loopne
das
aam
mov
outsb
lsl
add
loope
fistps
add
in
sbb
xchg
fwait
mov
xor
dec
test
and
mov
lret
stc
inc
mov
movsb
adc
shl
cmpsl
mov
jl
inc
xor
sahf
push
dec
ret
fwait
jnp
scas
add
ret
pop
mov
add
cmpsl
fidivrl
xor
pop
punpckhdq
add
sbb
mov
mov
ret
inc
pop
xchg
mov
push
ret
imul
fld
addr16
ret
jecxz
and
xor
add
fwait
push
stos
inc
and
leave
add
xor
vcmpps
sbb
stos
jb
out
or
stos
xchg
pop
mov
xchg
jno,pn
adc
popa
in
mov
loope
mov
in
je
stos
jns
lock
ja
cwtl
cs
xlat
ss
stos
js
lret
rcll
mov
cwtl
and
mov
and
cmpsl
xorb
loope
mov
es
lret
ret
test
jmp
jae
arpl
ret
cmp
rolb
push
push
imul
mov
lock
jno
stos
adc
adc
adc
ret
cmp
divb
ja
mov
imul
cmp
aas
mov
ret
mov
inc
and
mov
jb
jmp
rclb
mov
push
and
ret
hlt
mov
xorb
and
cltd
jae
loopne
enter
les
push
bound
pop
mov
je
ret
mov
xchg
gs
ret
mov
inc
les
mov
sbb
adc
dec
ret
adc
arpl
xchg
stos
ret
sbb
mov
cmp
imul
fwait
jecxz
das
aas
ret
fcmovnu
decl
and
pusha
in
sbb
ss
hlt
cmc
ret
sbb
aam
bound
or
inc
lods
or
jmp
pop
popa
mov
adc
push
addr16
jp
mov
ret
mov
mov
push
cwtl
mov
ret
mov
sub
fcmovu
dec
jns
xor
mov
push
and
aaa
jmp
mov
mov
add
stos
lret
cmpsl
mov
mov
and
push
das
bound
and
int3
lods
mov
divl
jle
mov
and
cld
jb
in
inc
jmp
ret
mov
sbb
adc
leave
out
push
outsb
movsl
mov
arpl
push
fmull
pop
loopne
sub
repnz
mov
lods
add
gs
jae
mov
sbb
xchg
ret
loopnew
fisttpl
ret
xor
ret
sbb
je
ret
out
jmp
sub
xchg
popl
and
jne
movsb
dec
xor
rol
sub
out
iret
daa
dec
call
movsb
std
test
cmc
ret
cmpsb
or
loope
mov
dec
adc
cmp
sbb
sub
and
lret
push
cmpsb
or
ret
xchg
test
clc
mov
push
push
dec
and
sbb
dec
xchg
push
mov
sarl
ret
or
inc
sti
repnz
mov
ret
mov
cwtl
adcb
loopne
ret
mov
mov
cmpb
jbe
cmp
cmp
into
cmpsb
mov
imul
shl
or
es
sbb
push
ss
cmp
jmp
dec
jp
fwait
cmp
hlt
adc
mov
cmc
sbb
add
jns
xlat
inc
push
idivl
shrb
add
lods
loope
insb
jmp
scas
bound
jbe
xlat
mov
sub
das
add
divb
in
js
push
andb
push
inc
mov
add
push
sub
stos
test
clc
loopne
jbe
push
daa
lcall
xchg
ret
mov
dec
lods
std
ret
sbbb
inc
or
push
sub
hlt
iret
outsb
test
xchg
jo
dec
jae
jmp
jbe
mov
cli
js
ret
push
xchg
add
sahf
test
insl
add
lock
fwait
push
adc
ds
aad
fsubl
popa
push
ret
inc
cmp
jno
bound
push
jmp
enter
rol
push
loop
jo
lcall
call
inc
mov
aaa
mov
imul
insl
fld
div
mov
and
mov
popf
jl
ret
cli
and
xchg
dec
mov
inc
ret
cmc
fs
jp
inc
js
xorl
ret
jle
fidivl
sub
cmp
jp
cmp
scas
add
movsl
or
sti
pop
test
divl
int3
ret
mov
fldcw
incb
cmp
jne
mov
pushl
bound
ret
popa
cmp
pop
ret
adc
dec
xchg
loopne
jecxz
jg
ret
jmp
out
ret
sub
or
and
pop
lods
repz
ret
lea
aad
ret
enter
push
mov
push
mov
loop
sub
dec
lahf
int3
mov
jo
jge
add
mov
mov
jecxz
pop
ret
test
in
ret
into
xchg
pop
dec
jbe
jecxz
ret
adc
mov
jb
cwtl
rol
push
sahf
test
push
ret
inc
and
hlt
xor
jnp
sub
aam
jl
adc
add
xchg
mov
or
jns
stos
xor
pop
add
adcb
insb
ret
cmpsl
jae
or
loopne
cmp
out
repnz
jmp
arpl
push
movsl
gs
push
iret
mov
xchg
icebp
mov
mov
jecxz
and
ret
xlat
lcall
mov
mov
inc
push
xchg
mulb
in
sbb
imull
mov
add
shrl
popa
mov
push
aas
and
ret
push
and
ret
or
mov
push
sti
or
cmpsl
jo
inc
sub
add
ret
jnp
jb
lods
fisubl
filds
inc
call
dec
rolb
xor
mov
mov
loope
jge
lock
scas
fbld
mov
and
rolb
sub
xchg
pop
ret
int
xchg
cmpsl
sbb
ret
cli
mov
fsubr
or
or
ja
push
xor
ret
pop
and
mov
jnp
and
movsl
cmp
repz
or
jmp
inc
or
add
push
cltd
loop
mov
daa
fidivrs
sarb
sub
cli
push
xor
stos
dec
out
cltd
cmp
ret
movsl
inc
jno
cmp
mov
or
jp
nop
inc
dec
mov
jmp
ds
mov
lods
mov
inc
ret
stos
jle
add
test
lock
stc
ret
adc
daa
adcl
addr16
xchg
in
outsl
mov
cmp
or
dec
movsl
adc
lret
jge
xlat
fimull
cmc
mov
push
outsl
mov
mov
ret
lods
inc
out
lcall
mov
leave
mov
mov
push
rcl
or
jp
icebp
loope
sti
test
cltd
ret
mov
xor
sbb
cmp
sub
jg
fs
outsl
push
adc
xchg
cmp
dec
cwtl
out
sub
sbb
adc
andl
sub
pop
add
repnz
push
dec
fcmovnb
gs
cwtl
test
mov
lret
bound
add
jp
mov
out
and
cli
sahf
addb
cwtl
push
mov
fwait
jbe
adc
mov
lcall
ja
xlat
jecxz
into
mov
lock
out
mov
notb
and
iret
es
popf
cli
xchg
call
ret
test
ret
adc
adc
test
loop
jl
mov
das
or
cmpsl
decl
ret
aad
movl
and
ret
jl
xor
inc
mov
and
lret
das
mov
xchg
dec
in
ret
divb
push
mov
pushf
stos
xor
stos
fidivl
loopne
mov
fs
into
loope
pop
mov
cmp
lock
ret
push
cmpsb
mov
inc
rorb
dec
pop
in
repz
push
sbb
scas
pop
ret
push
clc
imul
jle
mov
mov
ret
hlt
in
stc
scas
shrb
push
sbb
ret
aam
mov
das
dec
fs
ret
stos
scas
pushf
adc
loop
cmp
in
pop
lock
bound
filds
push
mov
pop
xor
dec
int
xor
ds
pop
jno
fs
ret
loope
lahf
inc
mov
push
sub
mov
jnp
sbb
ret
add
mov
test
lods
pop
jne
in
insb
jmp
fisttpll
daa
out
mov
add
scas
and
ret
xchg
cmp
adc
ret
add
js
dec
dec
and
pop
push
stos
sbb
ret
outsl
mov
xor
ret
pop
jecxz
push
int
cmp
aas
rclb
push
ljmp
push
sahf
pop
insl
xchg
std
mov
mov
iret
ret
rcrb
lahf
and
pop
pop
arpl
enter
pop
cltd
in
jle
and
inc
cwtl
xchg
stos
mov
loope
daa
dec
mov
or
fnstenv
bound
in
sbb
daa
insb
jbe
test
in
loop
adc
sahf
and
repnz
addl
add
imul
imull
movsl
pop
ret
adc
pusha
ret
mov
sub
xchg
add
and
roll
scas
call
popa
les
ret
das
add
xor
xor
ret
cwtl
or
cmc
xchg
push
xor
inc
ret
test
addb
rol
cmpsb
leave
sub
push
addr16
in
dec
inc
and
mov
push
jge
lret
je
ret
jbe
insb
pop
cltd
and
lret
repz
js
inc
ret
pop
sub
mov
test
fadd
xchg
nop
sti
mov
push
add
ret
cmpsl
cld
mov
cs
xor
and
dec
mov
clc
orl
test
jmp
inc
das
lcall
cltd
mov
pcmpeqb
mov
pushf
fimuls
pop
push
sbb
xor
lret
into
ret
sbb
xchg
ret
cmpsl
outsl
aad
icebp
std
push
mov
rolb
push
stos
jge
pusha
mov
stos
decb
fidivrl
ret
pop
aam
add
xchg
lea
adc
das
add
dec
jne
negb
sbb
xor
xchg
fld
mov
mov
scas
ret
out
sti
dec
add
and
sub
pop
ret
rcr
and
xchg
aas
scas
mov
xor
mov
sub
xchg
pushf
hlt
jnp
divb
cmp
push
or
ds
loope
nop
loopne
divl
lods
stos
adcb
mov
loopne
shll
mov
in
sub
stos
sub
ret
jecxz
cmp
mov
subl
stos
shrb
and
jmp
mov
jae
mov
fadd
cmp
adc
mov
jl
loopne
mov
push
loopne
ret
push
test
add
call
out
lcall
stc
jno
jmp
pop
mov
nopl
arpl
inc
inc
push
push
push
xchg
and
xchg
add
push
iret
lock
mov
outsb
jl
mov
sahf
clc
and
stos
std
xlat
shrl
movsb
push
ret
fldl
ret
cmp
dec
shr
mov
shl
jle
movsb
ret
shr
inc
ret
test
push
jo
loop
push
lret
cmpsl
mov
scas
fldenv
push
pop
cmp
notb
pop
pop
push
fisubs
scas
dec
sahf
mov
sbb
insl
inc
add
fildl
iret
inc
daa
enter
adc
stos
or
xchg
pop
push
push
shr
cmp
scas
xor
add
mov
ret
sbb
push
inc
add
mull
aam
outsl
add
loope
pop
fdivs
lds
ret
fs
xchg
dec
and
mov
mov
rol
into
mov
xchg
dec
adcl
fwait
adc
pop
pcmpgtw
jle
cli
mov
andl
ret
lret
ret
sti
imul
cmp
lahf
cs
adc
loope
aam
mov
mov
sub
add
mov
pop
mov
in
ret
pop
bound
xor
pop
inc
xchg
pinsrw
jg
add
cmpsl
loopne
sub
pop
in
pop
mov
rolb
bound
pusha
inc
cmpsl
movsb
cmp
ficompl
lods
out
cs
pop
pop
popf
cmp
xchg
testb
jmp
and
cld
jmp
rol
pop
xchg
sub
inc
cld
ret
mov
imul
push
test
ret
and
scas
hlt
jl
pop
pushf
pop
mov
ret
cwtl
cmpsb
stos
jae
loope
push
loope
repz
ret
pop
daa
add
lock
mov
push
cmp
pusha
xchg
mov
leave
sbb
insb
or
repnz
stos
cli
add
mov
aaa
arpl
lods
rclb
aas
pop
mov
xor
mov
mov
inc
pop
sbb
add
xchg
ret
in
aaa
inc
pusha
push
ret
xchg
xor
xchg
addr16
incb
sbb
jle
test
icebp
ret
popa
cli
and
aas
add
xchg
dec
pushf
push
cmp
xchg
dec
inc
das
mov
ret
or
ss
bound
stos
xchg
in
mov
fidivl
bound
cmpsb
push
pop
sti
push
mov
ret
inc
repz
and
mov
sarb
and
lret
inc
es
bound
xchg
sub
ret
dec
add
test
int3
loope
int
fnstcw
ss
cmpsl
loopne
addr16
cmpsb
imul
jle
ret
sbb
xor
ret
mov
test
cltd
pop
movsl
jns
xchg
nop
adc
sahf
jmp
inc
dec
mov
jge
and
and
je
pop
scas
fidivs
xchg
imul
dec
loopne
fisttpl
xchg
xchg
sbb
inc
or
sbb
mov
mov
mov
pop
add
aad
sti
xor
mov
popl
ret
outsb
fwait
xor
fsubrl
ret
movsb
das
or
or
loope
sbb
shlb
dec
mov
ret
pop
insl
test
inc
stc
int
pop
mov
push
sbb
addr16
push
ret
dec
adc
iret
mov
push
loop
lea
sub
push
xor
loopne
jle
lods
cmpsb
adc
xchg
mov
test
push
roll
ret
cmpsl
dec
cltd
fisttpl
int3
ret
sti
lds
dec
mov
xor
xchg
xchg
xchg
sahf
xor
lods
and
scas
mov
sbb
dec
ret
dec
fdivrl
dec
mov
mov
movsb
adcl
mov
push
cmp
lods
xchg
ret
sbb
and
sbb
pop
pop
dec
aam
inc
cmp
loopne
js
popa
mov
jl
je
into
testb
and
inc
dec
rcll
shr
push
mov
xor
jns
jmp
mov
stos
dec
cmp
insl
out
fstps
push
insb
outsb
es
je
xchg
cs
jbe
cmpl
cmc
adc
loopne
xchg
clc
cmpsl
scas
test
sub
adc
cmp
int
mov
sbb
pop
dec
ret
mov
std
ds
ret
fwait
sahf
outsl
xor
ret
jo
push
mov
fwait
mov
sub
push
ret
push
imulb
test
xor
ret
add
fistpl
sbb
subl
lret
add
lret
cmp
loope
fwait
dec
imul
mov
int
leave
rol
pop
movsb
sbb
dec
in
cmp
cmp
inc
nop
xchg
outsl
ret
enter
inc
jecxz
inc
mov
cltd
sub
clc
popa
ret
out
lds
mov
mov
mov
bound
xchg
into
fdivl
ret
sbb
mov
jbe
and
movsl
and
xchg
mov
inc
push
ret
xorb
cmp
test
testb
lret
lahf
je
jle
pop
push
test
dec
and
aas
sbb
inc
adc
nop
sub
pop
ret
aaa
add
mov
cmpsl
ffree
dec
orb
and
in
mov
jno
pop
cmp
pop
fisubs
in
ret
pop
or
mov
cmpsb
or
push
fistps
push
mov
dec
outsb
ret
pop
xchg
clc
jne
int3
jmp
mov
pop
push
sbb
dec
arpl
jmp
fistpll
movsl
pop
ret
lahf
dec
dec
mov
jb
imul
lret
mov
adc
push
hlt
out
ret
frstor
loopne
cwtl
scas
jae
push
dec
in
leave
jl
or
add
ficompl
ret
inc
call
ret
sarl
xlat
call
and
sbb
push
adc
icebp
jno
ret
nop
arpl
hlt
xor
movsl
xor
mov
jne
mov
stos
lods
leave
pop
adc
incl
jae
movsl
ss
scas
xlat
or
aad
push
aam
sti
stc
mov
add
lea
call
popa
or
enter
cld
sub
ret
imul
jl
add
mov
aas
mov
ret
mov
imul
or
addb
daa
fimull
cmpsb
ret
push
shrl
jg
mov
add
leave
pop
mov
bound
and
mov
ret
lods
repz
mov
push
add
dec
push
cmp
jp
mov
fadd
jg
and
dec
or
jno
cld
add
mov
xor
sub
ret
mov
popf
and
ret
or
adc
fidivs
inc
imul
sbb
orl
xor
pop
je
js
faddp
es
daa
and
sbb
clc
pop
aas
dec
push
push
ret
into
and
jno
xor
mov
cld
inc
pop
sbb
out
xchg
dec
pop
dec
xchg
adc
ds
cmp
daa
or
test
ljmp
movsb
jecxz
rorb
clc
mov
push
dec
mov
push
pushf
icebp
test
clc
inc
outsl
ret
fs
jge
mov
adc
ret
lods
dec
ds
dec
sub
dec
int3
fldcw
mov
andb
or
ret
insl
adc
mov
ficoms
pop
push
xchg
fidivl
cld
gs
sub
fidivrs
aad
cmpsl
add
or
imul
jnp
ret
cmpsl
xchg
cmp
dec
sbbb
scas
loopne
leave
and
adc
jmp
push
ret
cltd
gs
mov
loopne
cmp
ret
pusha
shrb
sbb
shl
ret
bound
cltd
cmp
mov
push
pop
jl
lock
jmp
inc
in
and
add
lret
lahf
das
push
fsubrl
and
lcall
stos
xlat
loopne
test
mov
push
inc
es
divb
insb
xor
shll
ret
pop
mov
rol
jb
add
adc
or
enter
inc
or
stc
push
dec
mov
stos
xorb
mov
or
xor
cmp
ret
push
movsl
out
xor
ret
stos
sbb
mov
jp
mov
adc
testb
push
ret
push
xor
xor
mov
rcr
xor
dec
adc
ret
cmp
mov
xchg
fwait
ret
sti
push
add
add
mov
dec
test
into
ds
push
and
inc
ret
xor
imul
mov
cmp
ret
cmc
stc
mov
xchg
pop
and
js
mov
xor
sbb
call
xchg
ret
jnp
shlb
insl
pop
ret
fsubrl
cmpsl
jno
mov
subl
sbb
loopne
testl
arpl
ret
dec
lahf
popf
xchg
jle
out
xlat
jl
jae
mov
or
xchg
sbb
pop
jecxz
and
imul
mov
add
ret
lret
test
add
popf
call
scas
aad
or
jmp
js
in
xchg
ret
mov
mov
push
add
sbb
pop
lea
mov
xchg
mov
mov
std
cmp
cmp
or
sbb
movsb
jmp
ret
pop
jecxz
nop
inc
cmp
push
pusha
mov
movsb
or
ret
xchg
mov
loopne
and
mov
dec
fisubrs
add
lds
jae
pop
xor
jg
sbb
mov
hlt
ret
add
dec
pop
icebp
ret
sub
ljmp
insb
pop
mov
add
addb
jmp
repnz
mov
arpl
or
xor
inc
mov
aas
cmpsb
imul
dec
test
mov
incl
and
ss
pop
bound
jne
fs
stos
mov
add
jle
call
popa
aas
mov
leave
pushf
pop
lcall
lds
inc
loope
pop
jl
cmc
scas
insl
cwtl
bound
mov
in
sub
sub
int
push
mov
dec
push
out
mov
inc
andb
ret
mov
jg
push
movsl
call
mov
and
das
adc
ret
cmpsl
inc
jne
daa
sub
in
mov
jp
scas
ret
out
jl
mov
testb
xchg
add
inc
scas
inc
cmpsb
xor
test
mov
ret
lock
lahf
imul
push
jmp
inc
test
mov
sahf
fidivs
inc
pop
and
add
repz
mov
mov
loope
sbb
xorl
in
leave
xchg
ret
push
jno
loopne
iret
in
lahf
stos
mov
mov
ret
lods
dec
sub
add
shl
outsb
sbb
fcmovu
jno
frstor
jb
push
lock
mov
and
iret
daa
jmp
sti
push
pop
outsl
ja
sbbb
ret
scas
enter
pop
cmp
dec
ret
loopne
jo
sbbl
loop
ja
mov
push
ret
dec
out
or
fdivrs
call
and
shll
ret
or
dec
ret
adc
daa
ret
mov
push
xchg
push
adc
inc
xor
call
mov
adc
insl
in
fs
dec
mov
add
mov
test
mov
xchg
xlat
push
lods
add
fisubrs
mov
dec
ret
adc
cmp
sbb
jns
ret
jl
lret
inc
push
mov
loope
out
test
sub
rcpps
jmp
ret
sahf
das
xchg
jns
bound
pusha
cs
movsl
out
cmpps
out
or
adcl
clc
es
sub
jbe
adc
pop
or
xor
and
push
das
ret
outsl
mov
fst
mov
rcl
jg
sbb
dec
mov
push
xlat
mov
jbe
test
and
jo
iret
cmp
test
cmp
in
ss
out
loop
cmp
ret
cmp
insl
ret
fisttpl
xchg
adc
and
xchg
out
cmp
cmp
pushf
xchg
jmp
cmpsl
enter
rcrb
ret
add
in
jle
bound
inc
cmpsl
les
ret
sahf
imul
fdecstp
xchg
mov
fwait
popa
and
sub
std
xchg
pusha
ljmp
insb
ret
lahf
popa
cmp
adc
ds
or
lahf
sub
mov
jnp
jns
lods
sub
mov
xchg
orl
pop
mov
rcrb
stos
cmp
loope
mul
gs
ret
lret
add
jle
cltd
mov
int3
xchg
rolb
mov
mov
add
in
loopne
aam
push
aaa
cmpsl
xor
ret
mov
ffree
mov
mov
in
sub
push
pop
fnstcw
mov
mov
js
insb
in
pop
xchg
aam
mov
and
ret
fisubl
pop
mov
lea
pop
jne
js
jecxz
add
inc
movsl
sbb
imul
test
inc
ret
loop
jb
push
pusha
push
rclb
scas
pop
ret
mov
ret
and
ret
rcrb
jae
dec
mul
ja
ret
and
or
mov
add
arpl
pop
sub
lcall
insb
in
imul
or
shll
push
clc
add
pop
lret
cmpsb
repnz
push
mov
pushf
xor
mov
cld
mov
jg
je
movb
mul
mov
aam
xchg
pusha
mov
lods
ret
sbb
xchg
adc
scas
aam
cmpsb
sarl
xlat
xchg
call
popa
dec
leave
movsl
aas
rol
mov
pushf
ret
out
addr16
ret
mov
pop
mov
cmc
add
gs
dec
and
lahf
mov
orb
fcoml
cmpsb
call
or
out
pop
je
dec
cmc
pop
mov
mov
mov
jp
mov
push
movsb
push
addr16
ret
shll
loope
cmp
sbb
inc
sub
and
lret
ret
jo
cld
mov
mov
jae
xor
ret
dec
lock
jnp
fadd
sbb
scas
mov
std
adc
mov
jmp
ret
jnp
xor
je
push
ret
sbb
jle
mov
sbb
mov
mov
inc
cmp
fs
sbb
jns
fidivs
mov
adc
dec
ret
loop
mov
std
ds
inc
jmp
outsb
bound
inc
scas
movsb
or
lahf
or
jmp
lock
std
lcall
sbb
or
cmp
mov
ds
ret
hlt
mov
loop
sub
mov
jne
ret
jb
xchg
stos
and
mov
mov
mov
xchg
dec
fdivl
push
sub
inc
adc
bnd
cli
shrl
jnp
ret
jl
mov
ret
bound
stc
xor
sub
jns
outsl
lahf
sub
loopne
adc
mov
mov
inc
dec
in
lahf
ret
daa
jp
cmp
mov
int
xor
addb
cmpsl
cli
push
lods
mov
mov
mov
popf
cmp
shrb
stos
mov
cmpl
movb
adc
mov
inc
and
and
push
sbb
cli
scas
lcall
imul
xlat
push
mov
lret
scas
sarb
push
int3
loop
push
es
popf
ret
and
push
ret
cmpsb
fists
pop
fldenv
mov
dec
das
xor
mov
scas
ja
add
adc
mov
push
loope
imulb
in
add
ret
xor
jmp
jno
ret
xchg
inc
mov
nop
sub
dec
or
ret
xchg
fistpl
insl
leave
lods
test
dec
ret
adc
mov
add
mov
in
andl
sub
mov
paddsb
fildl
stos
and
nop
icebp
ret
imul
push
int
xchg
push
xchg
and
mov
stc
leave
and
sub
pop
mov
or
xor
stos
into
inc
cmp
subb
stos
ss
pop
les
call
out
xchg
fiadds
fbstp
mov
dec
cmp
ret
mov
negl
dec
aad
cs
jle
mov
les
sbb
decl
xchg
pop
ljmp
pop
xchg
mov
std
neg
test
and
test
jecxz
mov
loopne
andl
lea
jno
bound
gs
shrb
not
ret
push
test
jb
adc
stc
cmp
xchg
pushf
sub
ret
mov
jmp
adc
or
inc
ret
push
adc
jb
mov
fsubrs
and
jg
hlt
out
ret
pop
and
ljmp
aas
int
jae
in
loope
mov
mov
hlt
add
out
ret
cmpsl
setno
test
inc
cmp
dec
ret
das
repnz
nop
push
gs
sbb
arpl
lret
movsb
xor
bound
jecxz
pushf
xchg
inc
jl
ret
push
push
insl
ljmp
repz
lret
mov
ss
push
outsl
ret
xor
mov
mov
mov
mov
popa
sbbl
ret
pushf
les
addr16
ret
vmovaps
add
mov
test
lcall
dec
xor
pminub
sub
ret
sbb
add
movsb
and
mov
cltd
test
mov
scas
into
fisubs
and
pop
repz
ret
xor
mov
adc
jp
sub
xorb
mov
mov
add
inc
fsubs
out
mov
jp
or
jge
decl
xor
ret
jmp
loope
insl
mov
ret
int3
je
scas
mov
ret
ja
sbb
ret
movsb
cli
fbstp
dec
xchg
rol
cmp
xchg
pop
jno
sahf
sub
lcall
xchg
mov
jbe
ret
jns
ds
fs
outsb
push
out
dec
fdivrl
fadds
lock
pop
dec
adc
push
daa
pop
inc
cmp
outsl
cmpsb
rol
inc
int
int3
jecxz
in
mov
imul
addr16
mov
mov
mov
scas
ud0
xchg
in
add
or
mov
pusha
clc
loope
dec
ljmp
xchg
bound
inc
imul
scas
roll
leave
jle
or
sti
inc
test
push
xor
lret
xchg
test
ret
cmp
mov
jno
in
xor
movsb
dec
inc
xlat
add
jns
ret
aad
mov
adc
imul
icebp
xchg
mov
test
cmp
dec
arpl
jl
loopne
dec
mov
ret
lods
and
stos
or
scas
das
xor
inc
ret
fistps
out
ret
nop
lret
fs
movzwl
ret
out
pop
es
mov
fidivl
scas
les
and
lods
ret
adc
jmp
ret
cwtl
js
das
leave
loope
sbb
ret
ja
nop
ljmp
add
and
popa
push
adc
push
test
add
sbb
bound
loope
mov
adc
push
fidivrs
mov
movsl
xor
jno
push
push
jg
aam
cwtl
cmp
ret
cld
jns
sbb
fldl
xor
dec
cmp
ror
pop
push
mov
into
rolb
sbb
addr16
movsl
test
ret
pop
imul
or
imul
cmp
mov
mov
push
push
and
cmp
imul
popa
add
cmp
jbe
ret
loope
dec
addr16
stos
mov
ret
ljmp
push
sub
sbb
in
ret
add
scas
or
jle
xor
ret
push
push
cs
mov
or
aam
add
int3
inc
mov
lods
cld
sbb
push
xchg
and
je
jg
lods
ret
pop
bnd
out
mov
add
mov
cmpb
cmpsb
fnstsw
ret
mov
arpl
js
jl
xchg
ror
lahf
pop
mov
push
and
gs
ret
out
out
sbb
sub
sub
jecxz
mov
add
ret
xor
mov
push
dec
ret
adc
sti
jb
into
ret
pop
pop
subl
add
pop
hlt
sahf
call
dec
and
loop
ret
push
aas
jnp
mov
iret
adc
stos
dec
mov
rolb
psubw
adcl
ret
rclb
ret
scas
inc
das
in
mov
and
adc
cmpsb
lods
repnz
jns
ret
jb
xor
sub
xor
ds
movsb
out
stos
xor
pop
sub
ss
incl
xchg
pusha
std
pop
mov
lds
dec
add
xlat
mov
add
push
lods
call
popa
xchg
jbe
aas
or
sbb
jmp
scas
xor
in
push
adc
or
cmc
inc
mov
bound
pop
cmpsl
ret
pop
leave
xchg
fcoml
dec
cmpsb
xor
push
mov
out
push
bound
mov
and
mov
repnz
jge
loope
adc
mov
mov
inc
pop
repz
dec
fiaddl
push
sub
test
push
mov
fmuls
es
ret
or
test
cld
jae
mov
inc
movsl
cmpsb
xor
aaa
add
add
mov
ret
loopne
adc
js
ret
jns
inc
add
or
ficomps
je
mov
mov
mov
jae
adc
pop
mov
xor
gs
mov
scas
mov
das
mov
adc
sbb
test
dec
xchg
cli
ret
cwtl
imul
cmp
mov
inc
movsb
ret
xor
lock
rcr
mov
daa
fldcw
ret
je
pusha
jb
int
call
mov
adc
std
xor
xor
imull
inc
push
je
mov
push
loop
mov
cld
movsb
ret
out
jp
icebp
mov
idivl
adc
aaa
push
xchg
mov
inc
gs
ret
cmpsl
orb
je
fstps
dec
push
ret
xor
jno
mov
pop
call
loopne
xor
bound
mov
ds
ret
dec
imul
mov
inc
and
out
adc
lret
ret
icebp
xor
push
or
cmp
test
jl
loope
and
jp
mov
and
mov
inc
test
inc
mov
faddl
sub
jns
push
fucomip
mov
add
jnp
mov
sbb
cmc
icebp
xchg
fbstp
shl
out
je
outsl
out
call
clc
aad
ret
stos
push
loopne
fs
mov
ja
lods
or
ret
push
shll
mov
in
fists
cmpsl
adc
xor
adc
jo
and
pushf
jg
mov
ret
neg
dec
push
fwait
mov
cli
ss
mov
sbb
cmp
icebp
adc
push
mov
fidivs
or
fwait
jmp
ret
repnz
enter
ffreep
call
cmpsl
add
push
out
and
in
cmp
daa
mov
fincstp
jb
mov
ret
and
ret
push
repnz
mov
xchg
fs
pop
inc
into
jns
push
stos
adc
or
test
cs
inc
mov
mov
fisubs
add
push
lret
ret
pop
popf
ja
test
ret
cs
test
jle
cmpb
mov
les
pop
lods
clc
mov
mov
out
aaa
or
push
fucomp
loopne
ret
dec
cmp
sbb
stos
cmp
arpl
mov
js
out
shl
mov
pusha
mov
mov
ret
pop
push
add
cmp
xchg
aaa
shll
inc
movsb
jecxz
adc
ret
add
sbb
loop
jmp
add
pop
pop
cltd
int3
inc
mov
add
mov
aas
ret
shrb
sub
es
and
ret
hlt
xor
xor
pop
push
lods
xor
icebp
jae
fdivrl
loope
bound
mov
or
das
negb
ret
sub
push
add
insb
int
dec
jo
mov
jle
push
cmp
xor
fs
xor
xchg
loop
pushf
pop
subb
cli
ret
mov
xor
pop
push
shll
pusha
adc
dec
ss
rclb
data16
aam
es
ret
mov
sub
add
pusha
popa
cmpsl
sbb
je
adc
addr16
lds
pop
push
je
into
mov
sub
inc
cmp
ret
addb
mov
repnz
pop
ret
out
inc
es
lods
ret
and
cmp
aad
or
fsubl
fwait
mov
es
repz
in
out
push
mov
jp
xchg
xor
jl
and
orb
ret
cld
pop
ret
xor
jo
mov
jnp
insl
clc
leave
sbb
daa
outsb
movsl
cmp
xchg
adc
ret
add
xor
ret
stc
ret
mov
loop
fiadds
adc
sbb
pop
cli
pop
mov
hlt
xor
cmp
push
adcb
lock
into
push
mov
repnz
pop
daa
sub
xor
scas
pop
scas
xchg
dec
jae
mov
and
ret
sub
repnz
lock
ret
popf
out
daa
je
and
inc
outsl
stc
mov
mov
mov
mov
pop
std
mov
inc
imulb
out
mov
mov
push
loop
inc
loopne
lahf
sub
adc
scas
mov
fwait
jo
dec
aas
ret
sub
push
dec
dec
add
cmpsl
pop
loope
or
pusha
lea
dec
xchg
xor
push
cmpsl
fiaddl
insb
ret
push
test
test
jne
mov
lret
in
ret
dec
mov
lcall
or
mov
jg
push
ret
sbb
test
aam
loope
dec
mov
pushf
cmp
ret
mov
cwtl
mov
leave
das
fidivrs
jne
push
and
repz
push
push
add
inc
add
ficompl
jns
jno
xlat
loopne
loop
mov
jmp
mov
and
out
es
sbb
cmpsl
into
jbe
dec
and
std
or
hlt
and
scas
leave
dec
stos
and
clc
jns
inc
sub
das
and
sbbb
mov
push
enter
jns
push
add
aaa
push
in
mov
test
jg
dec
stos
add
jo
push
ret
ficompl
cmp
mov
rol
ret
loopne
xor
sahf
scas
into
aaa
insl
mov
enter
xor
daa
push
ret
jle
push
add
rol
cmp
adcb
push
mov
inc
ret
out
sbb
ret
push
push
dec
sbb
ret
nop
push
mov
imul
sti
js
gs
and
cmp
addr16
in
fs
push
arpl
adc
out
ret
jge
or
mov
ret
inc
and
add
in
sub
push
sti
mov
rol
inc
test
shlb
pop
inc
pop
mov
push
testl
sahf
sub
ret
and
jle
addr16
ret
les
addb
add
mov
mov
xchg
repnz
mov
cmpsb
ret
fisttpll
cmp
test
add
scas
lods
add
iret
adc
cs
mov
lea
mov
shlb
inc
out
xor
pop
push
rclb
pop
daa
movsb
inc
ret
xor
jne
loope
jecxz
insl
std
mov
ret
sbb
loopne
loopne
jle
mov
ret
rcr
jb
xchg
aas
xchg
rol
std
loopne
into
xor
sub
hlt
lds
pop
mov
ret
loope
cwtl
lcall
pop
ret
dec
mov
xchg
and
add
fsubl
mov
ret
mov
loop
addr16
pushf
mov
mov
xor
adc
xchg
ret
push
xorb
mov
add
inc
cltd
fs
hlt
loope
dec
stos
xorl
xchg
pusha
sub
ss
mov
fbld
stos
xor
sbb
popf
cs
push
jnp
mov
popa
aad
movsb
pop
or
ret
sbb
xor
lds
mov
or
cmc
xchg
scas
bound
imul
insb
xchg
int
xchg
addb
and
push
jl
daa
out
ret
inc
ficoml
and
lock
jge
jne
fmulp
hlt
adc
mov
jecxz
mov
add
adc
sub
xor
cmp
adc
nop
add
and
ret
cld
mov
cmp
xor
fistpll
movsl
add
sub
xor
push
ret
jmp
cmp
insb
or
cmpsb
jmp
clc
ret
je
fs
fimuls
xor
ret
gs
mov
adc
add
jno
xorb
bound
adc
lock
filds
ds
bound
jecxz
sti
outsb
mov
mov
ret
shlb
push
adc
lock
dec
cbtw
ret
adc
test
xchg
je
int
stos
add
daa
xchg
adc
ja
ret
ret
push
sub
cmp
leave
mov
ret
and
xor
pop
ret
outsb
aad
inc
imull
add
gs
fst
repnz
cmpsl
mov
lret
xchg
stos
sbb
mov
mov
cld
mov
pop
sbbb
push
sarb
std
ret
in
lret
scas
sub
cmp
sbb
xorl
out
in
add
icebp
je
pusha
add
pop
fildll
cmp
out
jl
aaa
sahf
mov
mov
inc
adc
and
icebp
call
mov
inc
cmpsb
pop
mov
test
out
xlat
call
movsl
dec
mov
movsb
xchg
jp
out
inc
adc
push
inc
aam
stos
cmp
mov
jbe
inc
aad
das
add
xchg
lods
mov
add
testl
outsb
push
repnz
pop
ds
push
aaa
ja
std
inc
pop
aad
aam
roll
popa
sbb
jg
ret
jp
jnp
cmp
dec
and
insl
ret
daa
nop
or
push
sbb
fdiv
push
sub
aam
adc
add
outsb
fildl
mov
js
adc
or
in
push
or
xchg
add
pop
fwait
scas
push
jae
sldt
loope
mov
jmp
scas
sbb
pop
ret
xor
inc
repz
ret
data16
sub
add
fnstenv
scas
mov
outsb
movsb
and
loop
data16
dec
popf
ljmp
rol
jne
xchg
fdivrs
ret
ss
mov
and
mov
sub
sub
ret
xorl
xorl
mov
ret
iret
pop
call
push
pop
lret
xchg
cs
movsb
jle
jecxz
int3
sub
test
setle
pop
jae
cmp
pop
inc
pop
lods
xchg
in
cmp
shlb
imul
ret
in
pop
and
sbb
aam
mov
js
mov
loope,pt
ret
add
push
jecxz
lock
outsb
ret
dec
in
es
push
cmpsl
jbe
jne
iret
mov
aas
mov
ret
sub
push
pop
stos
gs
inc
icebp
adc
mov
shlb
ret
and
xor
jns
std
push
pop
lods
mov
sub
in
add
mov
mov
mov
stos
cmpsl
bnd
add
loop
movsb
and
insb
sbb
addr16
test
xchg
mov
ret
adc
ret
arpl
ret
mov
add
imul
sbb
ret
pop
mov
out
mov
xchg
pusha
adc
mov
xchg
add
lds
jnp
dec
call
jmp
lods
ret
jne
pushf
pop
push
mov
inc
lds
and
mov
jnp
or
cmc
aaa
sbb
bound
in
inc
push
ret
xchg
bnd
bound
xor
mov
test
out
bnd
aad
jg
mov
jnp
je
jge
loope
lret
or
mov
mov
ret
adc
inc
cmp
daa
mov
fimull
jp
sbb
ret
cmpsb
mov
or
and
dec
ret
push
xor
ret
jnp
add
ret
movsl
jle
pop
adc
test
jmp
pop
cmp
adc
daa
mov
add
out
mov
ret
sbb
ds
dec
loope
stos
dec
sub
mov
mov
inc
ret
jp
jno
or
lahf
iret
pop
loop
mov
fnstsw
mov
dec
icebp
jecxz
ds
outsb
test
mov
test
add
mov
fistpll
mov
stos
test
mov
adc
pop
out
xor
cmp
test
pusha
out
pop
cmp
pop
jmp
cmc
xchg
inc
test
xor
mov
mov
pop
xor
out
gs
aaa
xor
xor
rolb
mov
cmc
leave
cmpb
jne
out
icebp
adc
push
jmp
push
push
inc
sub
push
ds
subb
loope
rcrb
insb
cli
xor
cmp
scas
adc
push
scas
adc
ds
loopne
xor
mov
out
dec
rclb
mov
pop
inc
mov
test
in
ret
jno
mov
popa
mov
mov
add
ret
push
aam
add
mov
bound
fs
stos
dec
ja
leave
repnz
sub
push
mov
and
add
shl
insl
mov
out
xchg
mov
mov
pop
lods
push
outsb
jmp
insl
ret
js
inc
jno
adc
mov
and
mov
mov
cltd
sahf
add
mov
negb
loopne
pop
scas
push
inc
hlt
ret
or
ret
es
addb
push
lods
mov
lds
cmp
push
xor
out
add
das
es
test
adcb
sub
and
jecxz
fbld
pushf
aas
dec
out
test
jp
test
jno
sbb
test
outsb
out
xchg
stos
fs
adc
mov
fld
rcr
clc
mov
mov
xchg
mov
mov
mov
pop
imulb
and
ret
pop
and
xor
pusha
ret
inc
enter
pop
jns
and
pop
test
pop
xor
repnz
lret
ret
xchg
mov
movsb
inc
cmpsb
pop
rolb
xchg
inc
cli
ret
dec
or
mov
mov
test
inc
ret
popa
mov
ret
cmc
cs
fidivrs
add
xchg
fsubrs
outsl
retw
mov
adc
cmp
in
insb
pushf
mov
mov
fs
add
movsl
iret
data16
lea
add
lods
sti
scas
ret
shl
fcompl
ret
stos
cltd
popa
scas
dec
jbe
adc
fwait
popf
jno
bound
mov
mov
inc
dec
mov
movsl
cmpsb
sbb
push
mov
aaa
add
les
fadd
mov
mov
mov
xchg
shl
dec
dec
testl
mov
add
mov
fcomps
out
adc
cmp
lock
mov
jae
dec
cmp
mov
sar
test
jno
ret
cmp
lock
push
mov
and
ret
fldl
ret
iret
sbb
mov
ret
sbb
fmulp
pop
cmpsl
ret
lahf
subl
std
or
sbb
mov
ficoms
sub
pushf
ret
sbb
add
mov
jp
ja
gs
sbb
xchg
mov
adc
lret
stc
lea
jl
inc
pop
loopne
xor
stos
jnp
test
repz
mov
mov
das
mov
test
push
std
pop
xlat
pop
jl
and
adc
fdivs
dec
mov
repnz
pop
and
push
clc
pop
fcmovnb
mov
loope
mov
cs
xchg
ffree
movsb
push
sahf
ret
orb
sbb
push
mov
jno
ret
mov
scas
scas
movsb
or
push
bound
lock
stos
mov
xor
cmp
aas
xchg
cltd
es
std
and
sbb
cmp
sbb
cmpsb
mov
ds
dec
jmp
outsl
cwtl
fs
out
call
mov
ja
ret
mov
inc
imul
mov
sub
out
jmp
ret
loope
int
cmp
bound
jnp
popf
push
ret
pop
push
jo
aad
ret
xchg
daa
outsb
mov
inc
dec
xchg
mov
jbe
loopne
jg
cmp
and
lret
add
add
push
pop
push
push
ret
pop
push
xor
ljmp
mov
ret
xchg
push
div
pop
std
inc
fcomp
sub
lret
ret
add
mov
rep
mov
add
mov
mov
adc
push
mov
cmpsb
fsubl
ret
mov
sbb
insl
lret
outsl
cmp
adc
pushf
lods
xchg
cwtl
xor
mov
push
scas
and
mov
pop
mov
repz
adc
and
sbb
fsubp
ret
cwtl
mov
ret
popa
lods
mov
cltd
xchg
ret
push
out
push
sbb
add
aas
inc
jecxz
in
or
push
int3
ret
lods
push
iret
lock
inc
loope
in
test
andb
jbe
dec
stc
imul
dec
popl
jns
cmpsb
loope
jo
inc
xor
fisubrl
mov
lods
nop
loop
push
adc
push
mov
pop
xor
jo
movsb
mov
idivb
lcall
pushf
push
mov
ret
fnstenv
ret
push
mov
popa
dec
lahf
cmpsb
cmp
rol
fistl
data16
testl
outsb
add
dec
gs
fwait
lock
icebp
pop
loop
outsl
das
scas
xor
ret
or
jg
imul
insb
or
cmp
cld
sbb
sub
imul
xor
add
inc
aam
scas
jp
inc
aas
fwait
mov
jno
ret
das
pushf
lahf
data16
es
aas
sbb
mov
lods
adc
sub
int3
jl
cli
es
ret
and
sbb
in
test
pop
loope
xor
xadd
pusha
push
imul
std
test
cmp
jecxz
arpl
stos
pushf
push
insl
shll
sbb
and
ret
insb
xchg
sub
cmpsl
int3
imul
pop
and
mov
mov
push
mov
mov
movsb
leave
sub
mov
jp
mov
mov
cli
mov
cmp
add
push
mov
or
lods
in
mov
mov
mov
rep
or
ret
inc
insl
lock
out
leave
outsl
jmp
test
aad
ja,pt
pop
cmpsb
and
cmp
add
and
js
or
or
bound
test
pop
mov
adc
vcvtsd2ss
lock
jmp
adc
xchg
jp
add
movsb
outsb
enter
sbb
mov
movsb
pop
arpl
popf
aam
mov
jmp
pop
inc
iret
sbb
in
mov
push
leave
mov
push
ds
push
aaa
dec
daa
lret
push
ret
adc
shll
add
int
jg
insl
gs
jno
js
enter
ret
mov
sub
into
ja
repnz
test
jp
incb
push
mov
or
adc
in
iret
cmpsb
outsl
in
or
clc
push
mov
mov
jns
cmp
cld
ret
jecxz
sbb
pop
jbe
inc
jmp
cmp
pop
in
sbb
mov
clc
fwait
cmp
inc
fcompl
mov
cwtl
push
push
inc
mov
ret
fidivrl
ret
push
popa
dec
je
das
ret
or
rolb
jno
or
sub
pop
daa
dec
mov
imul
xchg
add
cmpl
aad
or
imul
hlt
stos
pop
outsl
dec
lret
mov
ret
iret
add
sti
ret
mov
cmpsl
enter
ret
inc
clc
scas
inc
cmp
lret
sti
or
push
jg
mov
sub
adc
mov
test
jg
sbbb
xchg
dec
xchg
movsb
inc
cli
mov
inc
movsl
jmp
mov
sub
cmpb
cmc
xchg
out
sub
rolb
and
adc
mov
xor
fiaddl
adc
mov
xor
mov
loopne
test
daa
loope
inc
shlb
pop
dec
out
xor
inc
addr16
cmp
adc
or
into
mov
mov
jl
shrb
xor
jp
inc
ds
adc
and
push
mov
mov
shrb
xor
clc
push
add
bound
jns
add
mov
mov
inc
rorb
fcoml
stos
insl
mov
lret
subb
sbb
inc
loop
inc
ds
mov
mov
dec
add
stos
add
mov
out
cwtl
cmp
push
add
js
mov
stos
xchg
push
mov
mov
xchg
push
leave
repnz
mov
dec
dec
mov
movsl
arpl
lea
dec
pop
hlt
mov
lods
pop
pop
xchg
aas
jb
into
dec
lcall
xchg
cmpl
shlb
mov
jb
sbb
ret
movsb
push
jp
sbbb
mov
push
fisttpll
rcll
mov
into
test
aas
and
stos
rorb
cmc
shlb
movsb
mov
jge
lods
cmpl
fisubrl
xor
mov
adc
dec
xorb
jns
shlb
lret
push
or
add
pop
cmpb
out
movsl
mov
mov
mov
dec
inc
pop
or
andl
popa
inc
lea
adc
and
loopne
xchg
inc
xchg
xor
scas
mov
jo
jmp
ss
test
mov
cmp
mov
ror
les
movsl
adc
repnz
sbbb
scas
jns
or
enter
mov
cmp
std
cwtl
jb
call
xchg
inc
mov
jne
mov
lods
lea
sahf
mov
inc
test
mov
xorb
mov
xor
mov
ds
dec
cli
adc
xorb
cmc
and
loop,pt
adc
cld
cwtl
mov
mov
mov
lods
and
cmp
jmp
or
notb
enter
mov
shlb
sbb
sarl
icebp
cmp
mov
scas
sbb
inc
cmc
into
xor
push
shrb
pushf
adc
mov
sbb
inc
jbe
shlb
and
or
movsl
jmp
ret
jge
movsl
jo
jg
aam
test
dec
daa
rcrb
rolb
ret
mov
in
inc
lea
xchg
xor
add
xchg
and
xor
mov
xchg
mov
xorb
loopne
push
jbe
aam
xchg
inc
xor
scas
jmp
out
cmc
mov
sbb
push
jb
inc
dec
scas
shlb
sub
pop
fisubs
ds
jne
lret
js
push
push
xchg
dec
mov
ret
adc
xchg
xchg
jne
cmp
mov
fwait
cmp
std
test
mov
popf
fs
scas
adc
scas
xor
nop
jo
dec
mov
jl
lods
ficoms
in
dec
out
movsl
mov
cmpl
jb
inc
jo
mov
sahf
cmc
aas
cmp
jl
jno
stos
sarl
imul
inc
leave
dec
sub
les
push
inc
pop
add
popa
dec
pop
bound
xor
out
shlb
fiadds
pop
cwtl
test
mov
lea
cmpsl
sbb
push
push
ret
sub
cmp
test
popa
mov
push
nop
jo
mov
xchg
xchg
jno
mov
push
xor
adc
mov
leave
mov
cmp
pop
mov
mov
cmpsl
mov
mov
mov
dec
test
lret
xchg
inc
cwtl
lcall
cmp
jecxz
mov
shlb
mov
or
sti
sub
jne
test
jl
cmp
xchg
inc
pop
cmp
mov
popl
push
mov
push
lods
fldt
stos
popa
stc
cmp
std
mov
or
and
imul
inc
cs
test
xor
jnp
mov
cmp
test
fiadds
stos
push
ds
mov
mov
inc
push
mov
iret
ds
pop
add
xor
mov
jmp
leave
add
pushf
ja
ds
xchg
xlat
std
rol
pushf
cmp
fs
xchg
dec
push
jl
cmp
fs
xchg
dec
movsl
aaa
int3
jb
pop
test
xchg
sarb
jns
xor
inc
mov
rcrb
xchg
lret
dec
jp
cmp
cmp
inc
mov
pop
mov
fildl
cwtl
adc
repz
sbb
loope
js
xor
pop
pcmpeqb
cmp
and
mov
mov
lods
in
loop
js
adc
sbbb
mov
jo
cs
jge
pop
cmp
shrl
mov
sbb
cmp
sar
and
mov
cli
ljmp
jno
adc
mov
mov
mov
gs
outsl
mov
xchg
stos
adc
jne
ret
outsb
jle
mov
scas
add
mov
xchg
mov
testl
mov
movsl
scas
pop
jb
scas
mov
lods
jns
xchg
faddl
and
cld
addb
and
push
testl
mov
in
ret
add
daa
loope
sti
jne
sbb
dec
rcr
sub
loopne
pop
or
std
mov
ret
inc
loop
cltd
daa
dec
mov
push
stos
sub
test
push
and
mov
mov
outsb
fsave
push
xlat
adc
jbe
aam
les
sub
ret
dec
idiv
shlb
or
clc
es
xchg
lret
loopne
mov
dec
mov
mov
push
adcb
push
aad
mov
or
or
ret
push
mov
scas
ret
shll
mov
arpl
pop
add
scas
xchg
push
mov
sbb
xor
fdivrl
adcb
pushw
ret
and
push
and
out
or
into
add
lahf
sub
mov
daa
movsl
add
pusha
imul
lods
loopne
lds
popa
mov
pop
mov
ret
fs
ret
xlat
jnp
lea
or
sti
xchg
test
in
test
pop
gs
rcr
mov
fs
cmpsb
pop
or
pusha
cmp
test
outsl
ret
xchg
add
lods
std
cmpsb
pusha
jbe
movsl
ret
mov
pop
out
jecxz
rol
push
or
fwait
dec
mov
push
insl
inc
out
jo,pt
inc
cmp
fdivrl
ret
jge
cli
mov
jg
addr16
mov
mov
mov
sub
outsl
imul
loopne
xor
fadd
jl
mov
je
ret
outsb
add
into
pop
iret
jg
add
mov
mov
mov
sub
mov
ret
js
mov
aad
je
pop
and
jb
mov
cmpsl
ds
stos
pop
stos
stos
insb
mov
mov
mov
test
cmp
xlat
dec
mov
cmpsl
in
mov
js
ret
adc
push
outsb
je
in
pop
mov
mov
jg
mov
out
mov
ret
xor
xchg
ret
gs
nop
test
popw
ret
aad
aam
pop
inc
add
pop
std
dec
ja
pop
or
loopne
fcoml
mov
sbb
add
scas
push
push
pop
inc
in
ret
pop
repnz
push
gs
jmp
jecxz
fwait
jno
in
lds
ret
cmp
xor
add
scas
iret
ret
aad
in
leave
xchg
ret
insl
pop
loopne
sbb
ret
jbe
mov
lock
enter
clc
inc
out
mov
mov
sub
ret
fwait
movsb
int
add
aas
dec
in
push
mov
mov
dec
out
pop
jb
lret
mov
in
push
ret
mov
ret
loop
insl
add
cmp
add
sti
out
lret
xchg
xchg
adc
lods
xchg
lea
sbb
adc
jg
sbb
aas
add
jbe
movsb
jle
pusha
xchg
or
lcall
and
dec
ret
mov
dec
mov
leave
movsb
cmc
push
mov
arpl
xchg
das
ret
jmp
aas
dec
fs
bnd
sbb
mov
inc
clc
and
pop
shrb
inc
ja
fidivrs
loope
xor
subb
sarb
push
mov
ljmp
sarl
mov
sbb
mov
mov
mov
daa
mov
mov
stos
pop
push
push
lcall
mov
mov
enter
in
ds
pop
push
adc
xchg
leave
mov
mov
loope
inc
rolb
mov
pusha
ret
inc
ficoms
inc
loopne
or
stos
shlb
mov
test
scas
call
mov
bound
popa
mov
clc
add
shll
xchg
call
icebp
test
or
sub
cmp
sbb
orb
iret
mov
in
sub
test
mov
outsl
jbe
xchg
cmp
rolb
fstpt
pop
popf
jne
lods
data16
xlat
xchg
shr
lgs
push
xchg
ret
and
movsb
xlat
lea
add
inc
sbb
mov
aad
in
fldcw
aaa
imul
pop
pop
xchg
sti
jge
mov
or
fisttpll
mov
movsb
jno
addr16
sub
loope
cmp
sti
sbb
fimuls
pop
mov
mov
repnz
mov
jecxz
repz
test
cmp
stc
stc
mov
jg
std
roll
movsb
mov
xchg
jb
mov
leave
jl
sub
and
jle
sarl
inc
inc
push
push
insb
mov
mov
xor
xor
inc
outsl
sub
les
divb
imul
mov
ljmp
arpl
clc
push
mov
cmp
aaa
bound
push
mov
xchg
and
lea
and
mov
loope
test
mov
ret
je
dec
mov
lods
cmp
or
outsb
outsb
sbb
sbb
in
push
imulb
mov
mov
push
inc
clc
jns
mov
adc
pop
and
movsl
popa
xchg
mov
sub
pop
shrb
icebp
dec
mov
stos
mov
mov
cmp
mov
mov
pop
popa
add
inc
stos
test
mov
dec
movsb
pop
test
inc
in
lods
incl
mov
movsl
or
pop
and
clc
mov
jle
mov
movsl
in
jl
mov
dec
sbb
mov
and
and
mov
cli
inc
xor
jge
jmp
out
push
push
jb
je
loope
repz
mov
fdivp
prefetchnta
popa
movsl
addb
cmp
mov
daa
mov
or
in
stos
add
mov
cmp
lods
rcr
jp
popa
push
adc
xor
loope
mov
mov
mov
inc
adcb
mov
inc
negl
add
push
subl
loopne
out
insb
or
or
mov
test
pop
loope
mov
nop
xchg
popf
imul
imul
mov
shrl
mov
mov
jp
sbb
sbb
and
js
ffreep
sub
sbbl
orb
cmp
mov
notl
fnstsw
adc
mov
jge
jbe
mov
dec
sub
movsl
pop
lock
mov
push
adc
push
xchg
fs
mov
or
icebp
cmp
rcrl
ss
movsl
sbb
or
push
mov
pop
xor
movsb
lods
jl
test
inc
push
cmp
sbb
mov
leave
sbb
inc
xchg
xchg
bound
roll
pop
jb
sti
cwtl
cmpsl
mov
adc
fisttpll
movsl
mov
dec
lods
xorl
mov
inc
add
ds
in
xor
mov
lea
mov
mov
push
jno
inc
inc
into
pop
cmc
add
and
sbb
push
inc
scas
out
inc
loopne
mov
icebp
movsl
xor
sbb
mov
jae
sbb
pop
and
mov
mov
mov
fimull
gs
mov
mov
ja
xchg
mov
inc
add
jp
cmp
push
mov
out
xorl
fs
fcmovbe
out
mov
out
pusha
dec
ret
loopne
mov
xor
add
lcall
mov
cwtl
jo
test
int
mov
fdivr
jnp
sbb
in
fucomip
daa
sbb
adc
mov
orb
aam
sbb
gs
dec
inc
push
pusha
xchg
jmp
pop
mov
mov
mov
pop
loopne
mov
push
mov
mov
push
xor
xchg
sub
jns
jle
or
mov
push
movsb
sti
je
repnz
mov
sub
mov
stos
subb
add
or
xor
mov
push
gs
xor
pop
dec
andb
jl
mov
xchg
xor
or
push
mov
ret
movsl
fiadds
inc
ss
mov
jg
js
jbe
scas
add
push
popa
pop
mov
ds
cs
mov
sub
fs
mov
xchg
xchg
lret
mov
enter
mov
mov
testb
out
stos
fistpll
imul
mov
lcall
shlb
mov
gs
push
lods
cwtl
dec
daa
mov
cmp
adc
repnz
push
jmp
popa
sub
sbb
shlb
test
scas
and
pop
cmp
cld
notb
cmp
mov
inc
scas
das
jmp
mov
fldt
mov
cwtl
inc
xorb
bound
sti
shr
mov
cmc
fcmovu
cmc
add
addb
hlt
adc
cmp
aas
xchg
in
bound
les
xor
xor
inc
xorb
iret
mov
repz
pop
cs
mov
std
mov
daa
dec
cmp
dec
mov
jle
cmp
mov
cmp
adc
inc
sahf
into
pushf
cmpsb
insl
dec
mov
lret
fadds
imul
dec
outsb
outsl
xchg
mov
cmpl
js
mov
dec
cs
lret
lcall
mov
test
jl
mov
movsb
mov
mov
shll
notb
pop
pusha
or
push
fdiv
pop
mov
xor
inc
adcl
inc
jns
test
mov
mov
or
xlat
out
out
xchg
mov
ss
orl
loop
and
add
ret
test
insl
imul
cli
cld
ret
push
jb
mov
js
jne
in
outsb
mov
jns
ret
loope
mov
es
int
inc
outsb
mov
sbb
movsl
mov
mov
cmc
aas
arpl
fldenv
ret
jge
inc
inc
pop
test
in
hlt
pop
std
leave
testb
pop
add
push
dec
jmp
ret
cmp
sbb
hlt
inc
int3
testl
lea
push
mov
mov
bound
cmpsb
pop
stc
jbe
and
cltd
add
pushf
loop
loope
test
lret
hlt
adc
and
lret
jno
test
lds
cmc
int3
jo
sub
mov
and
insl
dec
dec
ret
xchg
in
adc
push
sahf
testl
addr16
lcall
in
adc
mov
lods
loop
lock
and
mov
xchg
int
push
dec
jno
aas
neg
loope
dec
add
mov
pushf
imul
mov
test
cmpsl
fcmove
std
cwtl
lret
idiv
je
adc
ss
scas
ret
jle
pop
push
into
and
sbb
test
mov
mov
pusha
iret
aad
sub
sbb
dec
and
sub
mov
lea
xchg
mov
mov
and
popf
sub
and
gs
xchg
and
jp
xorl
jmp
lods
adc
mov
out
aam
cmp
mov
mov
xchg
sahf
ja
cmp
ds
xchg
std
xor
stos
mov
mov
mov
dec
adc
jmp
decb
inc
daa
pop
scas
movsl
inc
push
push
sbb
cmp
inc
lods
push
inc
gs
mov
outsb
mov
jle
mov
js
leave
loope
iret
cs
divps
cmpsb
xchg
std
jp
mov
adc
pop
cmpsl
and
lea
add
mov
dec
add
xor
xor
test
icebp
cmpsb
negl
ds
sub
mov
in
insl
push
or
mov
xor
xor
push
js
push
test
inc
push
mov
in
xor
loop
jl
frstor
sub
in
mov
bound
adcb
xlat
jnp
stos
push
push
rcll
mov
inc
xchg
test
movsl
les
jecxz
sbb
insl
loope
call
lods
movsl
loop
loope
lret
sub
dec
jo
idiv
jae
mov
cltd
xor
addb
daa
scas
xor
sbb
test
insb
scas
popa
mov
xorb
or
adc
jecxz
sbb
lods
int
inc
out
sbb
in
fldl
test
movsl
jns
fwait
icebp
mov
cmp
lods
adcb
in
adc
fwait
pop
sbbb
movsl
data16
mov
cmp
popf
cld
cmpb
lods
and
lock
pop
ret
mov
fsubl
outsl
test
in
inc
push
sti
xchg
cli
mov
aas
sti
xlat
loopne
sbb
lahf
test
pop
mov
adcb
xor
ret
cli
fldl
insb
dec
push
inc
mov
pop
push
gs
mov
adc
addr16
repz
insb
shrl
xchg
movsl
xchg
movsb
in
inc
cmp
pop
and
fcoml
xchg
mov
loope
cld
xchg
inc
jne
cli
daa
in
jmp
cmp
mov
mov
ljmp
mov
pop
test
inc
pop
hlt
push
mov
inc
movsl
cmp
jo
pop
push
idivb
in
inc
and
mov
arpl
ja
cmpsl
cltd
bound
hlt
icebp
subl
jecxz
mov
xor
push
push
cmp
jno
clc
and
jle
mov
inc
xchg
jle
repz
mov
jmp
mov
ljmp
fwait
dec
xor
push
test
into
inc
adc
test
cmp
sub
imul
cmp
sbb
insl
aad
mov
push
dec
stos
cmpsl
loopne
mov
into
pop
pop
push
repnz
scas
or
xlat
sub
test
add
inc
out
sbb
dec
sub
xorb
je
sbb
or
add
test
inc
arpl
outsb
rclb
adc
add
daa
xchg
mov
mov
ja
ret
stos
pop
jecxz
mov
test
push
or
and
lods
cmpsb
sti
push
stos
mov
pop
mov
scas
xchg
and
and
cmpsb
xchg
andb
lods
jb
inc
or
mov
aad
mov
test
mov
mov
push
mov
in
mov
test
mov
push
and
int3
mov
mov
jne
add
jbe
xchg
dec
inc
mov
pop
aas
mov
shlb
fs
or
andb
test
shll
shll
rcrl
repz
repnz
jo
cmp
out
mov
inc
scas
sub
dec
js
dec
and
push
fstpt
mov
int3
out
mov
scas
movsl
push
cmp
lods
lcall
mov
xor
inc
pop
sub
push
imul
xchg
arpl
int3
std
jp
sti
jnp
dec
fadd
les
pop
inc
scas
add
push
loope
fsubp
pop
jnp
cmpsb
xchg
jecxz
jmp
add
ret
cwtl
andl
mov
rorb
and
pushf
ds
jge
insl
lcall
pop
xchg
inc
fiaddl
jp
xadd
fsubl
pop
and
xor
popa
fs
or
das
roll
stos
mov
mov
pop
shll
sub
pop
mov
or
int3
sbb
inc
jo
fildl
or
cmp
push
clc
es
loopne
jl
nop
mov
mov
inc
ds
push
cmp
ljmp
xchg
inc
dec
test
int
cmp
sbb
add
loopne
fucom
mov
idivb
push
dec
and
jo
dec
push
adc
dec
arpl
es
adc
rcrb
imul
stc
mov
int
pop
mov
stc
movsl
mov
fidivrl
xchg
ret
or
scas
inc
mov
dec
ds
jne
js
pop
cmc
ret
adc
aad
pop
test
cmpsl
add
dec
mov
or
sbb
cli
out
fwait
mov
jno
repz
pop
js
scas
sub
pop
and
sbb
jb
scas
lea
pop
cmp
dec
shll
inc
test
cwtl
pop
lret
loope
jb
rcll
test
fs
loopne
in
add
jmp
xor
pusha
test
mov
inc
test
imul
mov
push
cltd
cmp
inc
aaa
add
fldt
pop
lods
repz
inc
push
dec
rorl
sub
jmp
movswl
test
hlt
cld
add
insl
test
loop
mulb
fistpl
lcall
stos
rcrb
lret
shrl
push
enter
cmp
leave
mov
dec
xchg
lret
mov
sub
push
test
clc
pop
xchg
sarl
xchg
jnp
mov
into
jle
and
jp
mov
mov
outsl
push
fcompl
insb
push
testb
push
out
ret
or
sub
mov
js
sahf
aaa
or
xchg
loopne
divl
out
mov
mov
les
push
movsl
iret
out
cmc
inc
lods
test
lock
repz
je
mov
mov
fbstp
push
loopne
xorl
xor
pop
mov
call
mov
clc
cmpsb
lods
dec
push
pop
or
es
mov
mov
std
out
hlt
stos
xor
sub
mov
xchg
mov
fnstcw
out
push
cli
dec
movsb
xchg
adc
jo
out
and
sbb
mov
repz
insb
mov
inc
lret
dec
scas
mov
subl
adc
scas
in
ret
dec
cmc
into
imul
dec
ds
repnz
push
mov
fimull
popa
ljmp
movsl
fmul
or
jecxz
insb
adc
mov
mulb
adc
mov
mov
movsl
repz
sbb
mov
adc
push
in
xor
xchg
mov
nop
leave
dec
cld
stc
repz
lock
push
or
and
shlb
adc
cmp
mov
cmc
int
mov
aaa
loope
mov
sub
mov
out
mov
shlb
sbb
jmp
mov
out
xchg
mov
shlb
mov
ret
test
dec
inc
inc
adc
mov
push
ljmp
daa
adc
movsl
pushl
and
lea
movb
test
cmp
pop
mov
insb
pop
mov
lods
jg
sarl
push
push
xchg
and
dec
aam
imul
movsl
push
xchg
pusha
daa
adc
fwait
fcoml
mov
sbb
push
inc
movsl
test
cmpb
lea
leave
pop
mov
xor
mov
mov
ret
test
jo
das
xor
push
mov
lret
jl
mov
mov
in
jns
push
sbb
mov
inc
pusha
pop
push
jno
into
mov
lcall
add
mov
aas
sub
in
mov
es
or
pop
mov
out
mov
ret
call
fcoms
push
mov
js
in
cli
stos
jmp
mov
cmp
test
or
add
clc
sub
test
push
cmp
insl
mov
orb
xchg
out
popa
aaa
jno
loopne
push
in
gs
stos
mov
jo
cltd
js
and
les
pop
mov
and
or
jg
dec
mov
mov
ss
pop
xchg
lea
and
lret
ror
cmp
cltd
and
rcrl
mov
movsl
push
rcrl
sub
orb
andb
mov
xor
out
int3
cmp
push
adc
xchg
push
sarl
in
pop
fidivl
add
outsl
push
dec
icebp
std
mov
sti
dec
rorb
jmp
xlat
push
mov
lcall
mov
mov
and
rcrb
dec
test
loope
sahf
movsl
pop
adc
sti
mov
stc
imul
cltd
icebp
xor
movsl
mov
fists
dec
sub
in
xchg
push
cmp
pusha
sub
mov
cmp
jmp
inc
mov
ljmp
test
xor
xorb
mov
jne
stos
sbb
addb
sub
mov
ficompl
je
or
iret
loop
and
in
mov
cmc
in
insl
pusha
cmp
inc
mov
outsl
scas
cmc
iret
mov
mov
lret
hlt
add
out
and
mov
and
popf
push
jle
mov
mov
popf
test
xchg
sub
xchg
addr16
dec
mov
fdiv
pop
cmp
ret
pushf
mov
push
sub
cs
jns
fs
je
or
cli
sbb
dec
daa
push
push
push
aaa
clc
int3
mov
gs
pop
xchg
mov
out
movsl
jb
test
mov
inc
jno
sti
stos
push
mov
sbb
inc
repz
xor
or
aas
pop
arpl
cwtl
dec
clc
movsl
push
xorb
movsl
cld
jo
fs
cltd
fcoms
xchg
pushl
lret
push
mov
inc
mov
xor
jo
adc
pusha
scas
bound
shrl
mov
ss
jns
mov
shl
dec
nop
bound
gs
or
insl
ficompl
or
push
xchg
mov
mov
push
inc
sub
xor
icebp
jle
popa
bound
cli
add
rcrb
xor
outsb
mov
adc
mov
bound
gs
negb
outsb
lds
pop
in
ret
sub
orb
jb
sub
xchg
adc
ja
mov
sub
loop
push
jle
mov
movsl
fnsave
sub
jge
test
sarb
cmp
mov
pop
aaa
sbb
sti
jg
stos
fldl
ljmp
or
pop
mov
push
lahf
adc
push
icebp
js
jp
div
and
xor
popa
sbb
xchg
aam
mov
jg
jb
adcl
xchg
mov
ret
nopl
mov
cmp
mov
movsb
pop
out
adc
push
cmp
inc
and
scas
push
dec
test
and
mov
lods
inc
jo
shr
mov
mov
mov
jns
adcb
mov
cmp
rolb
xor
or
mov
cmp
xchg
jns
jb
mov
xchg
add
mov
cmp
add
xor
rol
jo
cmpsl
sub
es
test
clc
xor
jmp
xchg
mov
xchg
sbb
jl
sbb
loopne
leave
cmpsb
and
xchg
push
cwtl
mov
jp
ds
mov
inc
gs
sahf
and
scas
mov
shll
add
or
xchg
xchg
nop
in
bound
ret
sti
outsl
dec
and
scas
cmp
add
adc
cmpsl
jae
xor
jecxz
stc
test
ss
scas
out
mov
and
push
mov
insb
stos
in
lods
lock
jle
cltd
push
aas
push
arpl
push
dec
adc
fisubrs
enter
and
addb
xchg
or
fs
fmull
cmp
mov
orb
imul
bound
cwtl
dec
and
mov
push
in
cmpsl
xchg
adc
jb
mov
push
in
push
test
xchg
mov
and
adc
jmp
stos
mov
cmp
xchg
enter
sub
out
pop
mov
xchg
notl
cltd
mov
icebp
pop
pavgw
mov
adc
shrl
fdivrp
pop
add
mov
mov
ret
scas
nop
sub
xor
mov
cld
add
imul
movsl
or
daa
mov
mov
ret
sbb
in
pop
xor
xor
mov
jmp
add
lods
mov
and
xor
pop
fstpt
mov
xor
pop
mov
seto
add
push
cltd
repz
test
bound
dec
push
add
nop
jbe
je
out
std
push
daa
xchg
xchg
mov
add
jbe,pt
movsl
mov
fsubs
xor
es
cwtl
insb
adc
mov
sarl
mov
mov
cmp
scas
dec
cmpb
add
xchg
test
pushf
lods
into
add
cmp
mov
and
jb
add
out
mov
dec
xchg
mov
andl
xor
ja
adc
add
xor
xchg
loope
fiaddl
or
mov
mov
imul
mov
xor
jle
cmp
mov
arpl
scas
xchg
pop
and
mov
mov
cmpsb
adc
lea
mov
movsl
dec
adcb
sub
scas
mov
mov
insl
sbb
mov
fstpl
frstor
inc
test
pop
push
stos
ja
ss
or
xchg
or
mov
fdivs
pop
dec
add
jp
shrb
cmp
push
scas
cs
sub
aaa
and
cmp
jb
push
inc
adc
das
jo
jo
inc
xlat
popf
pushf
xchg
mov
sbb
mov
inc
dec
push
negl
iret
clc
mov
mov
dec
aad
xchg
xor
inc
dec
add
rcr
mov
xchg
pop
sub
and
cmp
jae
movsl
xchg
jb
into
imul
pop
xor
dec
cmp
cmp
ror
inc
test
or
jne
dec
xorb
cs
xchg
test
cmpsl
test
push
fnstsw
adc
inc
pop
jmp
mov
test
jns
xchg
jecxz
les
in
xorb
mov
push
jge
mov
into
mov
mov
fildll
cmp
add
test
mov
icebp
push
mov
add
sti
fidivl
mov
jnp
popf
pushf
int
push
rclb
in
rcrb
pushf
sub
fs
std
std
scas
xor
cmp
fsubrs
adc
or
pop
pop
push
mov
inc
jg
push
aam
and
and
mov
out
mov
mov
pop
fmull
rorb
mov
or
dec
jg
sbb
js
or
push
xlat
mov
sbb
cmc
xchg
mov
decb
mov
sbb
lret
cltd
addl
pop
add
enter
sub
sti
dec
test
addr16
jmp
lock
push
lea
push
xlat
popf
adc
in
ds
lahf
lods
mov
js
mov
ljmp
xorb
test
shrb
adc
mov
imul
mov
dec
rcrl
and
mov
xor
ds
inc
mov
clc
adc
nop
icebp
xor
test
xchg
inc
xor
clc
subb
mov
mov
adc
mov
out
add
pop
pop
movsl
and
mov
lea
cmp
pop
cmpb
xlat
inc
and
pusha
adc
jns
cmp
sbb
cmpsb
jl
push
mov
stos
mov
ret
push
lods
sub
sbb
sbb
out
test
sbb
jge
out
pusha
sub
scas
jle
daa
mov
das
cmc
insb
arpl
inc
push
sub
loop
pop
popf
mov
mov
adc
sahf
mov
and
mov
dec
sbb
lods
fs
fisttpl
jo
pop
clc
mov
mov
insb
mov
orb
test
mov
out
cmp
mov
mov
fnstsw
and
nop
mov
shrb
pushf
out
mov
mov
sbb
mov
cmp
out
inc
ret
test
movsl
mov
sahf
popa
rsm
jmp
pop
mov
fdivl
lea
mov
mov
mov
ror
or
push
and
or
nop
int
sti
sub
fsubrs
jns
add
arpl
mov
hlt
aas
fs
js
hlt
push
push
sbb
sub
dec
mov
jnp
loopne
stos
dec
inc
fucomp
xchg
inc
mov
ret
lret
mov
add
mov
mov
xchg
jnp
xchg
andb
push
pop
or
and
pusha
add
mov
jbe
adcl
jne
dec
lods
or
mov
inc
xchg
push
adc
jns
push
jne
mov
in
xor
insb
mov
mov
mov
out
insb
jo
dec
test
push
rcl
orps
inc
jle
rcll
push
bound
mov
sub
adc
pop
add
pusha
dec
fbld
adc
adc
mov
mov
mov
sub
mov
mov
jno
dec
xchg
mov
movsl
cmp
es
sbb
jecxz,pn
mov
sarl
adc
insl
cmpsl
push
push
cmp
jnp
fmuls
bound
add
adc
pop
xor
xor
out
pusha
enter
into
or
add
shlb
ja
adc
mov
cmp
sub
js
inc
push
cld
push
jmp
adc
jno
sbb
xor
mov
or
sbb
data16
mov
mov
xchg
add
push
dec
jno
sbb
popl
pop
cli
mov
jecxz
xlat
mov
cmovo
xor
lods
mov
test
mov
ss
push
gs
orb
push
stos
mov
aad
imulb
jmp
inc
lock
or
imul
ret
into
xorl
inc
ret
and
out
jae
add
jb
sub
add
xchg
jecxz
clc
fsubs
ret
inc
adc
mov
sahf
scas
cmp
fdivl
mov
cmp
and
les
ret
sub
add
mov
leave
loope
dec
rorl
ret
sbb
mov
xchg
sbb
dec
mov
ficoml
daa
cmpsl
push
dec
sub
add
jge
jp,pt
test
sti
addl
push
sub
call
push
bound
and
mov
push
sub
cmp
in
sub
mov
in
add
jbe
mov
cmp
inc
cwtl
mov
jne
mov
out
test
jb
mov
repnz
fs
repz
ss
dec
push
xor
adc
inc
dec
cltd
daa
mov
mov
inc
int
out
sub
dec
pop
xor
loope
and
rol
mov
push
jnp
adc
mov
test
mov
jno
or
mov
test
mov
push
scas
push
ficompl
dec
sub
adc
sbbl
test
pop
in
mov
lret
xor
test
cmp
inc
or
std
and
loope
pusha
adcb
imul
mov
fcmovnbe
aam
adcb
bound
sub
push
popa
dec
push
scas
mov
mov
or
dec
fsubs
push
xchg
stc
das
pop
mov
jl
stos
ljmp
out
es
mov
adc
push
aam
out
imul
sahf
das
movsl
mov
push
pop
push
mov
adc
into
cmp
fmull
imul
mov
mov
xor
insl
mov
andb
xor
and
stos
aaa
pushf
pop
cmc
push
cmp
inc
jp
into
cmpsl
lret
sbb
pop
inc
inc
inc
psrad
xchg
xchg
lcall
cmp
scas
loop
je
in
add
xor
adc
push
stos
inc
xor
int
pop
and
movsl
push
loop
jnp
adc
mov
pop
movsl
or
fidivrs
das
test
push
push
jg
push
in
enter
rcl
fldl
bound
ror
xor
lods
mov
push
push
or
jnp
jb
data16
sbb
mov
in
inc
aas
sbb
idivl
je
ror
pop
push
clc
inc
add
sti
enter
nop
sarb
jnp
mov
movsl
ss
xchg
aaa
into
sahf
fs
adc
xchg
stos
cli
mov
pop
test
pusha
mov
jle
jmp
xor
add
push
aam
xorb
inc
mov
jae
ret
jbe
and
les
dec
mov
inc
loopne
xchg
ss
mov
ret
fs
js
sub
aaa
jecxz
mov
stos
add
fsub
cmc
push
add
inc
dec
pop
mov
mov
mov
mov
je
jns
repz
fdivrs
adc
out
cmpsb
movsl
stc
pop
push
dec
adc
cmp
fwait
cmp
jecxz
outsb
jbe
test
or
add
pushf
pushf
mov
lcall
loop
ja
add
xorb
popl
adc
ret
jo
xchg
cmc
lahf
imul
add
rclb
scas
or
sbb
sti
stc
shrl
xor
inc
cmpsb
adc
js
xchg
pusha
ret
cmpsl
xchg
xchg
cmpsl
cmp
js
out
adc
adc
repnz
in
and
mov
ficoms
jnp
pop
jne
cmp
pop
repz
testb
sti
movsb
sbb
add
or
and
dec
data16
mov
sbb
add
jg
add
addb
test
jne
cwtl
into
repz
ret
jo
mov
movsl
dec
add
jbe
sbb
es
xor
sbb
adc
and
iret
jns
and
push
cmp
mov
xchg
jns
mov
cltd
hlt
xchg
jp
je
test
adc
rclb
test
pop
scas
dec
add
add
repnz
and
loop
dec
inc
rcll
cmp
push
addr16
cmp
frstpm(287
outsb
mov
fists
or
cmp
movsl
enter
stos
jb
rolb
sar
lcall
hlt
xchg
lret
xchg
add
add
xchg
sbbl
cmp
mov
inc
mov
lds
test
lods
jbe
push
stos
adc
fisubl
sub
xor
popa
iret
mov
and
test
sub
cmp
mov
xchg
daa
mov
mov
sub
inc
jo
cltd
inc
inc
cltd
jle
mov
cmpsl
sbb
mov
jecxz
xchg
int3
mov
scas
and
inc
cmpsl
mov
or
inc
mov
mov
dec
clc
ret
jge
jecxz
test
dec
mov
or
insb
fwait
cmpb
fstpt
test
sub
orl
cmp
xchg
leave
insl
outsb
cwtl
pop
imul
adc
cld
push
out
mov
ficoms
sbb
dec
jbe
mov
mov
ljmp
mov
mov
pop
mov
addl
push
xchg
ret
lret
push
mov
scas
lea
and
cltd
sbb
mov
xor
in
mov
or
push
and
shll
shlb
jp
lcall
lret
and
les
xchg
rolb
rol
pushf
push
mov
pushf
pop
inc
mulb
shrb
subl
je
ret
mov
andl
jg
divb
jbe
cmp
test
dec
sub
orl
arpl
add
shll
jp
dec
fwait
jne
sbb
xchg
adc
mov
sbb
inc
repz
mov
xor
adc
cmp
xor
inc
inc
mov
push
jne
adc
sbbb
addb
std
insl
cmp
test
lods
xchg
add
cltd
mov
cld
jle
cmp
arpl
mov
insb
adc
xchg
and
mov
fdiv
add
test
add
add
mov
sbb
imul
jmp
xorl
xor
add
xchg
roll
mov
mov
and
call
ret
mov
or
mov
xchg
aaa
add
xor
frstor
movsl
dec
addr16
push
movsb
xrelease
jae
sar
jl
imul
out
sahf
jle
call
hlt
xchg
mov
mov
adc
xchg
scas
xlat
xchg
ret
jnp
iret
sbb
scas
call
vmwrite
lret
mov
bound
xchg
insb
xor
test
ror
out
call
push
mov
sbb
mov
push
sbb
insb
xor
stos
loopne
mov
sbb
cmp
bound
xchg
mov
loope
and
or
cmp
insl
mov
sub
out
pushf
pop
jnp
lock
aad
pop
fidivl
shlb
mov
mov
jns
pop
cmpsl
jle
shl
jno
sbb
lea
mov
insb
adc
mov
imul
push
adc
clc
int
sub
cmpsl
adc
push
movsl
js
sbb
inc
imul
adc
inc
and
outsl
xchg
pop
sbbb
mov
sub
shll
aam
xor
xchg
cmp
outsl
adc
mov
clc
lock
shll
aam
scas
mov
push
lods
pop
imul
and
iret
std
mov
push
hlt
mov
mov
or
push
rolb
movsl
subb
xor
dec
add
daa
adc
popf
dec
mov
add
stc
adc
gs
jo
ret
mov
dec
mov
xchg
xchg
addr16
mov
mov
popf
hlt
mov
pop
xor
fcmovbe
outsb
adc
mov
jne
movsl
push
aaa
or
mov
fldl
mov
nop
mov
pop
mov
cld
cltd
jb
call
shll
bound
mov
je,pt
jmp
mov
out
imul
mov
ret
push
movsb
sub
test
jne
into
sbb
push
rorl
sub
pop
sub
sarl
sbb
mov
mov
js
fs
xor
xlat
jecxz
cmp
mov
sub
mov
and
shll
cmp
mov
fsubrl
movnti
daa
test
cmp
cltd
mov
dec
sbb
loopne
and
jne
popf
xor
mov
loope
cmpsl
mov
addb
xchg
out
enter
xchg
cmpsl
xchg
pop
push
mov
push
push
imul
in
cmc
pmaxub
lea
push
xchg
pop
arpl
fldl
xchg
mov
pop
xchg
arpl
andb
mov
outsl
arpl
cmp
xchg
scas
xorl
hlt
jo
sti
cmp
int3
clc
sub
push
or
sahf
jg
loop
sbb
das
lods
sarb
test
adcb
pop
xchg
nop
stos
test
gs
mov
in
jg
loop
andnps
mov
push
sti
sbb
xor
push
adc
xchg
les
push
lods
js
jle
cmp
add
nop
sarb
mov
jecxz
aam
cmpsl
movl
adc
xchg
mov
cmp
lock
andb
dec
test
push
shll
ja
push
cwtl
add
fisttpll
jl
xlat
jnp
xchg
add
mov
outsl
std
test
loopne
push
div
jle
inc
notb
aas
loopne
sahf
loope
in
clc
or
mov
roll
fstpl
adc
negb
sub
adc
outsb
mov
mov
out
mov
jp
mov
jge
sbb
pop
sub
sub
loopne
cltd
negl
mov
loopne
cs
scas
jecxz
out
mov
mov
loopne
or
in
test
repz
mov
test
jo
mov
dec
and
stc
add
das
fucomi
fwait
lret
cmp
test
ljmp
ja
and
pop
cwtl
pop
xchg
lcall
popa
inc
movsl
xchg
cld
push
mov
arpl
enter
cmp
or
xor
cmp
or
cmp
xchg
xchg
popf
ret
mov
mov
ret
fsubl
lds
ret
ss
pusha
sarl
lea
cmp
fldz
test
and
jne
mov
mov
mov
not
jno
and
mov
lock
nop
stos
mov
shll
push
aaa
and
xchg
adcl
imul
jo
mov
push
fiadds
jns
add
cwtl
mov
pop
nop
int
jl
push
jle
mov
repz
xor
fidivs
push
push
in
xor
inc
orb
cmp
push
mov
xchg
dec
mov
sbb
pop
mov
test
or
insb
addl
push
lods
call
and
add
add
shll
imul
pop
out
cmpsb
loop
mov
mov
push
leave
dec
mov
inc
jmp
test
and
mov
and
bound
movsl
pop
and
adc
in
scas
pop
aaa
fdivl
aam
imul
jno
repz
mov
mov
jp
jg
push
cmpsb
mov
mov
dec
cmpsb
popf
fnstenv
push
add
xchg
cmp
test
ret
sub
cmc
push
dec
sbbb
mov
test
fwait
aas
fisttpll
xchg
ja
in
inc
push
aas
leave
dec
jle
pop
sub
fwait
ret
cwtl
mov
pop
pop
shl
push
loopne
test
imull
aam
cmp
data16
js
les
ds
dec
mov
repnz
adc
insb
test
pop
or
mov
std
sbb
popf
xor
test
xor
xchg
jns
mov
pop
ret
adc
es
jno
mov
mov
aaa
dec
ret
fwait
cld
int3
out
fs
pop
imul
xchg
sbb
pop
inc
popf
ss
mov
jge
jo
mov
sbb
jl
pop
sti
mov
movsl
orl
xchg
pop
inc
stos
cli
addr16
and
mov
test
leave
and
dec
inc
xor
cmp
out
js
loopne
mov
into
rcrb
loopne
cmp
mov
cwtl
out
aas
xchg
pop
jp
movsb
in
cmpsl
mov
sbb
cmpb
rcll
jo
or
xchg
xor
push
mov
test
add
adc
xor
jb
dec
ret
push
loope
mov
rclb
push
sbb
adc
add
orb
lret
bound
in
cmpsl
xor
mov
mov
loopne
xor
mov
movsl
idivb
dec
lods
bound
add
stos
sbb
xchg
mov
shrl
cld
or
ss
cwtl
rep
ret
fiaddl
test
mov
inc
mov
test
out
nop
mov
cld
stos
out
inc
movl
popa
cmpsb
test
xor
insb
xchg
les
lods
icebp
mov
scas
push
cmp
push
cmp
cmp
and
adc
arpl
dec
aad
jb
mov
cmp
sub
cmp
add
push
push
and
out
push
inc
imull
pop
adc
cmpsb
mov
fcmovnb
jmp
and
sbb
iret
dec
rcl
ficompl
sbb
mov
xorb
xchg
mov
std
add
jne
cwtl
imul
jne
cmpsb
test
pop
outsb
test
push
mov
sub
inc
and
mov
aas
mov
out
lock
pop
push
adc
sbb
enter
push
stos
sub
ret
test
mov
mov
adc
fwait
loopne
movsl
cmpsb
dec
xchg
std
out
xor
stc
imul
mov
cmc
cwtl
jp
pop
pusha
xchg
mov
mov
ret
fldcw
mov
stos
enter
mov
sub
jmp
ss
mov
test
mov
sbb
sbb
sbb
dec
adc
add
loopne
jl
mov
and
or
push
push
mov
add
jnp
out
stc
mov
and
sub
push
push
inc
lock
or
adc
and
cmc
sbb
dec
dec
adc
mov
out
js
push
pop
lods
push
and
cltd
xor
insl
xchg
xor
movsl
cld
mov
cmp
mov
jns
sbb
cmp
dec
pusha
cwtl
jno
add
pop
sub
outsb
es
xchg
pushw
push
cmpsl
arpl
and
scas
imul
fsubrs
cmp
jp
mov
into
mov
push
jp
nop
inc
mov
add
add
addr16
sahf
mov
cmp
and
movsl
aaa
imul
xor
cmpsl
xchg
push
or
push
addr16
dec
ret
movsl
sbb
pop
adcb
enter
mov
sub
arpl
cmp
pop
icebp
push
add
shll
scas
xlat
xchg
clc
enter
pop
cli
popaw
andb
mov
mov
out
divb
ja
or
mov
test
mov
mov
movb
test
inc
mov
mov
rolb
test
das
mov
mov
sbb
xchg
sti
movsb
push
mov
mov
adc
jmp
test
or
fisubl
outsl
sbb
fstps
cmpsb
popa
or
addb
sub
fwait
xlat
xchg
push
rsm
scas
pop
addr16
rcrb
lds
mov
cltd
jo
and
fiaddl
xor
leave
les
cli
push
inc
cltd
and
dec
popa
outsb
mov
addr16
sbb
loopne
jmp
sbb
mov
inc
clc
out
fnstcw
inc
jg
ja
adc
pop
push
dec
scas
imul
add
scas
cmc
and
fwait
or
pusha
fldt
pop
push
mov
mov
adc
xor
mov
dec
rcrl
xchg
adc
mov
or
add
jnp
jmp
leave
ret
jo
or
scas
pop
or
aas
dec
lcall
jp
xor
lods
jns
jns
and
push
gs
mov
cmp
inc
mov
adc
stc
or
jae
es
inc
fdivrl
out
jmp
adc
xor
jne
pop
push
sbb
jmp
mov
cmpsl
andb
mov
xchg
sub
jg
sub
test
mov
add
orl
pop
dec
icebp
add
and
mov
mov
mov
mov
div
fldl
int3
lret
mov
mov
inc
movsl
pop
insl
add
dec
gs
movsb
cmp
js
xor
inc
add
jp
jmp
cs
pusha
or
clc
sub
outsl
gs
clc
stos
inc
sbb
sbb
xchg
xchg
cmc
fnstsw
jns
stc
and
jle
imul
mov
xor
xor
mov
loop
mov
mov
cmp
xor
xchg
aaa
stos
mov
fdivl
push
add
cwtl
mov
in
and
shr
outsl
enter
xlat
insl
imul
repnz
mov
test
mov
pop
adc
push
or
mov
mov
jge
pop
mov
mov
xchg
out
sub
cmp
fimull
jns
insl
shlb
push
out
nop
jbe
push
dec
xorb
jno
std
popa
mov
das
dec
rorl
insb
cli
insb
cmp
jo
sbb
xor
fs
mov
xchg
ret
dec
push
push
pop
into
push
movsb
test
jbe
cmp
mov
rclb
mov
or
inc
movsl
arpl
mov
stos
lods
rsm
mov
lahf
mov
xlat
jne
inc
xchg
mov
cmpsl
sbb
pop
sbb
xchg
test
test
dec
popf
add
mov
aaa
ret
mov
or
dec
mov
push
ja
adc
jecxz
addr16
lods
xchg
add
jmp
movsl
push
pusha
or
sarb
push
jnp
sbb
pop
out
jno
andb
xor
push
or
jecxz
inc
jo
je
or
push
dec
mov
xchg
ss
mov
movsl
out
push
mov
add
jmp
or
arpl
pop
dec
push
xchg
mov
scas
or
mov
lea
clc
add
js
or
adc
cmp
test
movsb
lea
mov
jp
sete
or
lock
lret
pushf
pop
cmp
dec
inc
pop
cmpsb
or
subb
movsb
ud0
dec
sahf
adc
pusha
scas
mov
insb
mov
mov
sub
push
add
jbe
cmp
adc
inc
fdivl
mov
hlt
push
mov
mov
mov
out
inc
or
add
pop
push
bound
push
dec
in
dec
inc
pop
repnz
pop
call
stos
xor
mov
lods
mov
pop
mov
js
les
cmp
nop
lea
mov
pop
add
or
pop
and
movsb
jnp
jecxz
fldenv
jp
push
cwtl
bound
shl
cmp
push
mov
scas
rclb
pmuludq
cwtl
rol
and
jbe
fcoms
mov
into
jnp
mov
iret
das
or
inc
insb
cmpsb
adc
pop
pop
xchg
jmp
push
stc
mov
icebp
test
inc
push
hlt
add
mov
push
jnp
dec
and
imul
sub
jbe
icebp
jp
mov
mov
mov
add
test
xchg
mov
pop
jns
fstpl
xor
movsl
pop
mov
fidivrl
fisubl
andl
loopne
leave
adc
dec
mov
jb
outsl
in
mov
mov
xchg
pusha
or
mov
jno
xor
jb
mov
xor
mov
lcall
sbb
out
cwtl
and
stc
movsb
adc
testb
cld
out
pop
insb
pop
mov
mov
repz
clc
xchg
or
or
das
js
mov
mov
mov
xchg
mov
and
icebp
cmp
lods
cld
test
add
aas
ja
std
xchg
mov
adc
aad
inc
mov
imul
loope
into
sbbb
cltd
jnp
jns
fdivs
jae
mov
movsb
dec
clc
adc
cmp
mov
lea
add
out
scas
dec
sub
ss
pop
mov
clc
push
orb
mov
mov
add
test
fmul
imul
fidivs
imul
xchg
inc
aas
and
push
inc
ja
mov
jo
movsl
push
mov
lahf
jb
adc
mov
dec
in
rcrb
jo
popf
xchg
jmp
fdivr
popa
loopne
mov
sub
leave
lods
sar
jno
xchg
bound
adc
sti
lcall
inc
jb
dec
shlb
and
sti
cmp
push
mov
sub
aas
mov
mov
shlb
jecxz
pop
je
out
cmp
test
mov
fwait
jo
and
flds
aam
xor
mov
imull
push
test
rolb
mov
int
and
mov
cli
test
mov
mov
add
js
shr
jge
scas
push
ss
mov
and
jne
xor
mov
ljmp
lock
nop
mov
mov
jae
jmp
insb
push
loop
jmp
in
int
test
adc
mov
test
sub
rorb
mov
xor
enter
lods
jo
arpl
cmp
clc
cmp
mov
test
xor
inc
or
add
aad
movsl
test
cwtl
std
mov
sub
mov
pusha
test
jb
test
cmc
lock
cltd
mov
lea
mov
addb
jnp
data16
shlb
add
dec
jns
jno
mov
ret
imul
jp
add
and
mov
shl
sub
insb
int
inc
das
cmp
mov
addr16
lock
mov
addr16
pop
lret
sub
popa
shrb
outsb
out
inc
mov
mov
cmpsb
fiadds
cltd
lret
ds
test
pop
repnz
xor
enter
fidivl
ret
test
fstl
pop
push
lock
imull
push
loope
push
dec
int3
testl
pop
push
outsb
xor
inc
sub
jmp
sbb
sub
lea
popf
mov
xchg
jne
ljmp
js
popf
mov
jge
ja
outsl
mov
out
je
adc
xchg
stos
cld
popf
sti
mov
xchg
sahf
cmp
popa
insb
fs
fidivrs
cli
cmp
dec
jmp
xchg
inc
jge
neg
test
outsb
cmp
fidivrl
dec
inc
jge
mov
movsl
inc
add
push
lea
adc
xchg
cmp
hlt
mov
and
enter
in
jg
scas
aaa
out
pop
loopne
push
inc
imul
lcall
ja
xchg
daa
add
xor
std
inc
into
inc
add
cmp
js
inc
push
push
or
ret
inc
xchg
repz
jo
sbb
inc
push
das
retw
sub
push
dec
push
xchg
add
xor
push
pop
mov
pusha
xchg
daa
xor
cmp
test
fcmovnb
or
cmp
mov
subb
or
xchg
cmp
cltd
inc
test
or
scas
popf
pop
or
popa
lods
xor
sub
mov
jnp
add
ds
fisubl
fildl
icebp
or
xorb
cmp
push
ja
adc
lret
bound
pop
mov
or
pusha
pop
iret
lea
in
and
fcoml
jg
jo
pop
fdivrs
out
movsl
rcl
scas
adc
scas
addr16
shlb
sbb
std
mov
repz
scas
imul
mov
dec
cmp
xchg
mov
movsl
stos
out
stos
scas
push
mov
cs
or
add
add
push
dec
fildl
cmpsl
idivb
popa
imul
jmp
ret
sbb
pop
test
mov
negb
and
cmp
arpl
inc
dec
adc
sbb
pop
jg
cmp
sub
out
mov
xlat
mov
movsl
loope
xor
addr16
fcmovu
out
es
rorl
aad
test
movsb
xchg
or
dec
loop
mov
mov
sahf
ret
mov
xchg
cmp
rorl
leave
repz
mov
or
jns
jnp
outsb
icebp
cmp
test
fwait
insb
ret
mov
movsb
loopne
cmpsl
outsl
movsl
add
mov
jbe
inc
sub
push
jl
add
xchg
xor
and
xchg
jno
jmp
sbbb
cmp
outsb
sbb
arpl
popf
push
mov
test
jp
pop
cmp
faddp
in
jge
popa
cld
mov
dec
add
mov
inc
stos
inc
stos
out
je
or
out
and
ret
push
or
cltd
mov
jp
cmp
in
adc
push
fldenv
push
fbstp
dec
jo
jle
fwait
xor
push
cmp
jne
mov
mov
jmp
and
rclb
loopne
xor
jl
dec
mov
lock
or
xor
xchg
sbb
pusha
xchg
sub
andb
sti
in
bound
hlt
sbb
mov
lea
idivl
mov
mov
lea
mov
jbe
ret
out
ss
insl
ret
cld
fwait
mov
xchg
arpl
jbe
loope
sub
or
mov
mov
insl
or
ret
and
rcl
js
pop
ret
mov
scas
ret
lods
pop
outsl
or
popa
fldl
cwtl
pusha
mov
or
and
lahf
inc
xor
push
stos
fstpt
insb
pop
sbb
pop
jns
xchg
ret
push
adc
mov
fmuls
scas
idiv
cmpsl
ret
shrb
popf
push
pop
stos
jne
sbb
mov
rcl
out
pop
pop
pop
cwtl
and
mov
adc
push
cmp
mov
leave
mov
cwtl
adc
or
xchg
mov
jmp
add
and
and
bound
ret
dec
mov
rolb
mov
or
mov
or
push
mov
pop
fs
inc
lahf
xchg
mov
popf
push
aad
xor
adc
cmpsl
sahf
test
push
adc
stos
jmp
enter
push
std
ficoms
add
jb
xchg
jnp
mov
movsb
and
rcrl
mov
out
ret
arpl
in
lcall
push
inc
xchg
popf
mov
push
pop
pop
dec
ret
js
ds
std
or
jle
inc
stos
sahf
test
fs
fidivl
fs
arpl
enter
mov
lahf
ss
sub
rolb
ret
flds
ljmp
nop
leave
adc
aaa
cmp
mov
fyl2x
mov
fisttps
and
xor
rdmsr
mov
push
jbe
inc
icebp
cs
outsl
loopne
lds
test
fisubrl
mov
mov
into
sub
ret
adc
ret
lods
lods
bound
add
loope
sbb
mov
push
xlat
ret
test
adc
mov
mov
adc
xor
loopne
push
insb
ret
add
hlt
mov
into
sti
xchg
movsb
dec
adc
dec
jae
xchg
lea
test
cli
ret
or
out
ret
scas
mov
ret
out
dec
inc
mov
ret
into
mov
push
xor
lods
lods
dec
sar
jge
fwait
xchg
and
jb
ret
add
xorl
stos
cmp
in
ret
pop
addl
ret
shll
ret
clc
sahf
dec
pushf
lcall
sub
add
and
nop
cmp
ret
dec
lods
jns
bound
jne
mov
ret
lods
ljmp
adcl
cmpsl
pushf
shlb
xor
mov
cmp
lods
or
mov
pop
mov
push
jp
and
pop
push
lods
ret
xlat
lds
test
push
inc
inc
adcb
sbb
push
loope
mov
xchg
inc
bound
lret
ret
insl
jle
push
es
movsl
mov
pop
test
add
or
jge
mov
cli
ret
xor
ret
mov
lods
ret
sbb
inc
jp
fdivrl
js
outsb
push
jne
jno
mov
inc
cmp
sub
ret
in
or
and
dec
int3
pop
addr16
pusha
ja
ret
add
inc
sahf
xor
ret
jl
pop
jge
sbb
lcall
popf
xchg
xchg
bound
inc
out
lods
xchg
pushf
retw
inc
gs
sbb
xor
pop
orb
jb
int
bound
add
inc
inc
subl
mov
fnstsw
pop
in
scas
dec
ret
pop
arpl
decb
and
mov
cli
popf
shl
xor
xlat
cmpb
fld
testl
in
ret
gs
xor
fdivp
ret
mov
inc
mov
mov
dec
push
loop
push
outsb
loope
lods
sti
test
gs
adc
pop
adc
shrb
lods
faddl
push
das
push
jl
bound
add
push
jno
loopne
adcb
push
inc
or
add
into
addb
movsl
fdivrl
mov
mov
fcomps
mov
mov
sub
sbb
inc
push
mov
popa
pop
pop
xchg
fimuls
push
cmc
add
cmp
sub
xchg
scas
leave
cmp
test
movsl
fnstsw
fistl
arpl
jmp
fs
sbb
mov
mov
loopne
cld
cmc
push
dec
imul
mov
and
aad
mov
mov
push
or
gs
add
pop
sti
or
xor
jmp
dec
clc
push
testb
cmp
mov
es
fstp
fiadds
insb
lea
jo
or
sub
xchg
mov
mov
jge
mov
push
jbe
cmp
rcll
xchg
test
mov
inc
sahf
sbb
movsl
fstl
fld1
mov
add
push
jnp
push
cmp
push
mov
mov
inc
mov
fwait
and
xchg
mov
jns
adc
and
out
fs
adc
or
aad
std
fsubs
pusha
cmp
mov
jp
mov
in
jmp
mov
lds
jns
fsubrs
xchg
pop
roll
pushf
roll
in
pop
inc
clc
out
ds
daa
mov
stos
or
scas
pop
jl
test
cmpsb
lods
rorb
xchg
daa
mov
movsl
adc
and
insb
lds
cltd
shlb
jns
push
movsl
jge
mov
sbb
mov
add
aad
adc
mov
xchg
cltd
sbb
mov
imul
js
mov
rcl
stc
mov
fwait
push
mov
pop
mov
outsl
push
mov
lods
shrl
jbe
jmp
inc
mov
ret
cmc
add
andb
mov
or
mov
xor
ret
adc
pop
popa
add
lea
mov
jo
les
jns
gs
xchg
mov
scas
push
jmp
pop
xor
inc
insl
test
xchg
lret
insl
rcll
pop
xchg
in
and
adc
mov
cld
or
pop
data16
xchg
or
loope
aad
push
push
out
mov
scas
mov
in
cmp
or
divb
lret
lcall
pushf
fs
sbb
hlt
push
xchg
cli
mov
jmp
pop
mov
movsl
cli
lahf
add
mov
adc
xchg
jge
mov
xlat
xchg
daa
test
lret
clc
fs
jg
test
pop
add
mov
jp
mov
jo
mov
cld
shlb
lods
sarl
xor
pop
xchg
xchg
outsb
mov
insb
imul
movsl
and
enter
sbb
mov
mov
jg
sti
xchg
jbe
movsb
or
cmp
idivl
testb
testl
xchg
sub
test
shl
adc
cs
push
xchg
and
into
sbb
nop
aam
mov
arpl
xor
test
rcl
mov
adc
shll
adc
dec
mov
add
cmpsb
pop
and
sub
pop
test
pop
xor
inc
dec
sar
xchg
test
or
add
outsl
out
push
jp
mov
stos
mov
mov
int3
mov
add
fwait
push
dec
loopne
das
and
inc
adc
mov
push
out
pusha
rolb
mov
divl
cmp
mov
loopne
or
adcb
and
xchg
das
mov
xor
fmuls
data16
jnp
ret
pusha
mov
jecxz
rcll
mov
add
adc
sti
xor
mov
das
push
ljmp
sbb
fdivrl
scas
and
leave
cltd
aas
ret
sarl
pop
or
mov
test
stos
xchg
xchg
mov
adc
sbb
inc
dec
add
mov
mov
mov
lcall
or
cmp
jo
shlb
cmp
xor
mov
movsl
ss
jp
in
pop
sbb
inc
jbe
xor
xchg
ljmp
jnp
jnp
push
shrl
lods
in
fwait
or
cmc
outsl
inc
into
mov
push
push
shrb
pusha
push
jb
lods
test
ret
and
push
pop
scas
xchg
cmpsl
jmp
sarb
loopne
scas
add
sar
subb
lcall
mov
rcll
stos
cmp
lods
xor
add
inc
jl
and
testb
push
sbb
popa
mov
lcall
xor
mov
mov
movsl
js
addr16
insb
dec
out
mov
pushf
stos
mov
test
ja
xchg
std
inc
cmp
push
pushf
adcb
iret
xlat
jg
xchg
mov
mov
outsl
adc
push
bound
inc
or
flds
mov
clc
ficoml
fdivp
ret
sub
adc
dec
std
jns
inc
pop
add
call
cmp
push
test
loopne
xchg
out
push
rcrl
daa
sbb
adc
adc
test
mov
pop
stos
mov
xor
push
or
sbb
orb
and
and
sti
mov
xor
jp
mov
pushf
scas
out
push
and
push
lea
mov
int3
icebp
test
lahf
rcr
popl
mov
ss
xchg
js
cmp
pop
xchg
mov
rcrl
cmp
cmp
jne
rclb
pop
fimull
pop
repnz
test
roll
push
sbb
cmp
and
push
pop
mov
loope
pop
fsubrl
test
mov
ret
and
ljmp
iret
lret
cwtl
shl
cmpsb
sub
xor
mov
outsl
adc
cld
mov
inc
xchg
push
scas
and
test
out
cltd
sbb
pcmpgtw
mov
rcrl
mov
test
call
mov
cmp
adc
push
mov
rcrl
pop
mov
inc
das
idiv
fstl
int3
imul
sub
lock
scas
xor
add
mov
push
inc
inc
mov
adc
adc
test
movsl
ror
add
dec
in
mov
shlb
mov
push
ficompl
clc
mov
or
dec
lods
xor
nop
sarb
outsb
and
mov
push
xchg
popf
rorl
bound
dec
jo
lea
sbb
inc
call
mov
rcr
cltd
pop
cltd
jne
sbb
cld
stos
incl
sahf
pop
movsb
sarl
mov
andl
scas
insb
lds
imul
xor
xchg
notl
aad
push
stos
adc
insl
push
loopne
arpl
cwtl
call
mov
ret
and
adc
xchg
test
mov
mov
scas
pop
xchg
enter
in
sbb
rorb
push
jnp
jbe
push
xchg
stos
sub
inc
adc
lahf
jne
adc
xlat
shll
xchg
loope
sti
or
xchg
daa
sarl
mov
cs
dec
fsubrl
sti
add
pushf
sub
and
jg
ljmp
test
lds
xor
icebp
dec
sbb
jnp
cmpsl
pop
jo
enter
icebp
add
test
js
sub
adc
dec
mov
mov
mov
es
push
xchg
test
jae
jb
cld
call
sub
movsl
ret
movsl
inc
lahf
aas
dec
daa
add
test
pushf
inc
pusha
jb
ret
adc
jge
pop
mov
dec
push
cltd
idivl
pushf
iret
push
lods
imul
ror
mov
out
fldl
jno
in
test
inc
fucomp
das
cmp
xchg
sub
shr
pop
or
insl
fdivs
es
shrb
push
mov
jp
aaa
ja
movups
insb
cmpsb
mov
scas
shll
aad
daa
pop
int
cmpsb
push
xchg
cmp
mov
push
aaa
cmp
pop
movsl
xor
pop
jmp
mov
jecxz
mov
test
push
movsl
ret
mov
mov
movsb
push
cli
add
mov
movsl
adc
pop
push
les
mov
dec
sub
pushf
mov
lcall
jbe
cmp
jg
es
push
ret
sbb
inc
pusha
mov
sbb
add
mov
inc
jo
add
popf
test
dec
insb
pop
and
movsl
adc
sub
cmc
nop
ds
aas
or
das
mov
dec
sbb
int3
jo
xor
cmpsb
test
int
lcall
fmull
repz
sub
shll
sti
mov
dec
jb
pop
pop
mov
mov
dec
outsl
ret
push
add
sbb
adc
notb
out
out
es
test
adc
je
adc
popa
and
pop
add
sub
mov
inc
iret
ret
bnd
mov
mov
and
into
test
shll
mov
mov
in
mov
mov
xor
movsl
pop
ss
ds
mov
hlt
push
jge
decl
aam
ret
in
cmpb
or
jecxz
xor
sub
or
cmp
ds
cmp
inc
mov
mov
jnp
call
lods
scas
jae
xchg
jno
shll
mov
mov
hlt
mov
or
test
sub
loopne
stos
mov
xchg
pop
ss
cmp
idivb
xchg
movsl
pop
jg
cmpsl
cld
cs
push
repz
mov
rclb
out
lea
pop
cwtl
movsl
cmp
jnp
and
mov
popa
add
push
jo
push
sub
add
and
jp
cmp
repz
mov
mov
mov
bound
mov
fsubs
push
pop
push
mov
and
cltd
fmulp
xchg
std
push
stos
add
lea
lret
pusha
aas
sti
cwtl
lea
push
push
jns
push
inc
mov
pop
sub
add
subb
pop
push
outsb
pusha
dec
sub
and
mov
dec
mov
mov
daa
pop
xor
push
mov
mov
loopne
test
rclb
mov
movsl
mov
jle
lds
dec
mov
pop
inc
popf
test
adc
cld
inc
popa
shl
lret
pushf
lods
xor
popf
cmp
cli
call
mov
sbb
mov
in
push
ret
mov
inc
and
insl
xor
fisubs
pushf
loop
mov
xchg
jb
jo
mov
movsl
dec
pop
push
idivb
sbb
and
fisubs
jae
mov
jge
or
adc
fisubrl
sub
cmp
or
jb
pop
bound
rcrl
idivb
mov
popa
jne
cmp
mov
mov
push
loopne
and
ja
out
js
fbld
clc
push
bts
or
mov
sub
adc
mov
jecxz
sub
clc
daa
fcomi
push
dec
ja
rcll
popf
sub
loopne
call
mov
sub
mov
push
vmwrite
scas
out
xchg
add
mov
sub
shrb
fisubs
hlt
pop
mov
ss
jb
movb
jnp
jmp
das
rclb
adc
bound
dec
xlat
jo
test
movsl
hlt
and
mov
xor
and
out
mov
lods
dec
sbb
in
shr
adc
xor
dec
sar
mov
addr16
addr16
lock
cmp
xchg
adc
je
adc
xchg
mov
jb
ljmp
popa
sbb
mov
adc
adc
pop
and
cmpsb
call
pop
jmp
dec
cmpsb
popa
int3
or
addb
pop
pop
movsl
cs
arpl
pop
xor
cmp
out
sti
test
dec
and
inc
mov
pop
addb
fdivrs
sub
jns
cs
outsb
in
je
aaa
mov
adc
mov
movsl
call
shr
imul
mov
lods
adc
mov
add
xor
in
dec
pop
pop
add
in
insl
stos
lock
mov
and
add
dec
fldl
mov
test
test
xor
movsl
popa
push
cmp
decl
add
pushf
cmp
outsl
mov
mov
push
mov
inc
adc
or
test
nop
aad
add
jns
xchg
repz
aam
pop
std
fs
lcall
jo
iret
test
aas
cmp
xlat
imul
jnp
stos
test
or
xorb
cmp
dec
daa
insl
mov
pop
mov
pop
lods
insl
mov
dec
mov
insb
fsubs
inc
rsqrtps
mov
shrl
mov
sbb
jp
sub
add
mov
cwtl
cmc
frstor
data16
pop
test
enter
test
call
fcomi
xchg
mov
test
cmp
jae
sbb
or
outsl
sub
xlat
push
fistps
mov
jb
mov
in
xchg
jno
sub
int
outsb
jnp
out
push
js
dec
push
mov
rcrl
xor
sarl
dec
dec
ret
repnz
adc
negl
adc
sbb
es
mov
pop
add
pop
mov
scas
insb
xor
push
push
test
ret
sub
xchg
sahf
push
cmp
cli
stos
sahf
mov
andb
sub
xchg
inc
adc
mov
xchg
dec
xor
and
inc
xor
gs
in
fstl
pop
sbb
xor
rolb
scas
fstpl
push
fstpt
shll
inc
xor
push
ja
mov
sbb
push
jo
pusha
dec
mov
cmp
jmp
test
mov
sbb
mov
fdivrs
sbb
lret
push
out
mov
pop
sbb
fs
push
out
jecxz
or
and
dec
dec
xor
imull
pushf
stc
cltd
into
mov
xorb
in
fmul
gs
loopne
cltd
out
jnp
ret
movsl
mov
cmpl
or
jp
mov
add
xor
insb
fs
mov
out
mov
or
outsl
nop
mov
mulb
stc
std
negl
test
push
rolb
lea
out
fsubrl
jp,pn
jp
push
xor
test
shrl
jmp
test
or
mov
mov
arpl
inc
insl
popa
mov
cmp
jg
insl
mov
cmp
cmpsb
cli
sub
add
incb
and
push
movsl
subb
adc
stos
inc
push
push
lea
loope
out
add
test
inc
aad
rcrl
mov
pop
test
loopne
mov
mov
in
pop
cmpsb
adc
push
xorb
imul
push
cwtl
int
outsl
and
enter
je
or
push
fs
roll
xor
mov
dec
pop
or
mov
mov
push
dec
mov
scas
adc
mov
xor
cli
adc
mov
mov
and
movsb
lret
push
dec
test
jae
fnstcw
push
sbb
icebp
or
adc
in
sahf
int3
js
es
add
xor
orb
mov
movsl
xor
rcll
aaa
aas
fadds
add
xor
lea
pop
cmp
or
sar
mov
into
jbe
dec
sub
dec
lock
mov
add
mov
adc
mov
inc
xchg
repnz
inc
movsl
add
adc
cmp
jns
dec
jns
rclb
loope
test
imulb
or
nop
rcrb
test
push
sbb
outsb
add
mov
push
and
pop
jmp
or
mov
cmpsl
loopne
in
loopne
jl
aaa
ljmp
cmpsl
fcmovnb
jo
pop
test
push
mov
movsl
push
adc
scas
pusha
or
es
fstl
sub
pop
popf
jnp
hlt
cmp
lods
adc
lods
rorl
testb
popf
out
cmpl
cmp
imul
pop
push
loope
xchg
dec
jb
sarl
jo
mov
adc
mov
scas
dec
shll
add
popf
popl
loope
sahf
hlt
sbb
je
movsl
mov
mov
mov
mov
test
fidivrl
shlb
inc
xor
in
jmp
mov
sbb
xchg
insb
js
aaa
fists
mov
push
mov
sub
mov
sub
add
movsl
and
pop
mov
movsb
and
and
push
push
int3
ret
leave
mov
scas
stc
js
fcompl
mov
sbb
mov
cmp
aas
jle
jecxz
mov
das
pop
sub
mov
mov
stos
addl
out
or
ds
popa
in
push
mov
pusha
mov
xchg
inc
cld
lea
js
sti
scas
into
pushf
cmpsl
test
pop
pop
sbb
gs
jmp
jge,pn
xchg
movsl
leave
aas
iret
cmp
cwtl
and
adc
cmp
mov
sbb
cs
add
xchg
std
mov
filds
mov
stc
mov
shll
pusha
out
neg
out
pop
xchg
pushf
fcompl
inc
or
xchg
push
mov
inc
testb
push
je
jo
jb
movb
gs
rolb
mov
xor
mov
mov
mov
fs
xchg
mov
ficompl
push
sub
mov
test
jne
mov
push
cmp
in
mov
scas
jle
ds
lahf
je
push
cmp
repz
xchg
cmpsl
jae
stos
movzwl
lcall
aam
inc
cmp
clc
mov
cmp
bound
xor
mov
xchg
mov
test
jmp
test
sti
push
inc
scas
movsl
faddl
cmp
cmp
lock
adc
sub
cmp
imul
mov
push
mov
stos
std
xchg
dec
inc
jb
jmp
std
movsl
dec
inc
fdiv
pop
push
cmp
cltd
scas
xchg
mov
inc
cmp
push
fidivl
add
adc
jp
test
cmpl
cmp
sti
cmp
jmp
sub
xor
mov
jno
pop
fmul
mov
push
cmpsb
ds
repz
and
inc
js
stos
into
jg
pop
xchg
test
cmp
out
adc
inc
aam
cwtl
sti
push
or
nop
lock
push
insl
scas
out
loope
dec
clc
mov
adc
sarl
mov
push
xor
daa
inc
inc
adc
mov
push
inc
movsl
cmp
mov
adc
stos
pop
push
scas
push
dec
mov
pop
cli
daa
xor
adc
les
out
sub
jns
out
mov
ret
adc
repnz
arpl
je
stos
xor
cmp
cmp
jl
test
bound
test
lea
or
mov
ret
ds
sbb
fstps
mov
in
xor
mov
adc
cwtl
cmp
fiaddl
mov
push
mov
jb
test
mov
xor
pcmpgtd
lods
jno
push
adc
por
cmpsb
testb
mov
sahf
shll
adc
aam
pop
mov
cmc
dec
insb
mov
inc
cmp
movsl
insl
jno
gs
xor
daa
lret
xor
jmp
xchg
mov
jns
add
jp
xchg
and
xor
in
test
mov
loopne
setne
sarb
xchg
jge
icebp
mov
cmp
sbb
jmp
insb
push
cmp
push
call
adc
jle
jo
jb
mov
jle
nop
std
add
inc
and
js
or
js
mov
cmpsb
into
jns
fucompp
jae
popa
aad
shlb
or
push
lods
xchg
or
and
mov
mov
outsb
jo
dec
mov
loopne
jmp
popf
pop
fdivl
cmpsl
outsb
mov
and
loopne
clc
adc
push
movsl
push
mov
and
mov
mov
cmp
push
pop
inc
mov
clc
pop
cmpsb
testb
xor
cmp
cld
jns
in
in
test
push
aaa
fsubs
push
sarb
push
test
mov
xchg
dec
or
orb
cmpsl
pop
sub
outsb
int3
lahf
adc
or
out
fiadds
ffree
sarb
popf
mov
xchg
movsl
mov
ja
push
mov
fwait
pusha
fimuls
pop
sbbb
mov
movsl
push
or
popl
hlt
cs
pop
jb
mov
bound
divl
pop
imul
adc
fildl
add
mov
in
inc
or
ss
mov
pop
mov
push
ret
pop
outsl
push
out
dec
jns
icebp
in
cmpb
sbb
dec
sbb
lcall
jecxz
addr16
and
fcmovnu
sub
fsubrl
sub
push
shll
test
dec
imul
mov
push
aad
xor
gs
mov
notl
ja
inc
inc
or
adc
fimull
inc
sub
xor
jb
popa
mov
outsl
sbb
aaa
into
cmpsb
clc
add
xor
or
out
push
inc
loope
stc
testl
and
push
xchg
daa
xchg
hlt
xchg
loopne
push
fidivrl
jecxz
fmul
inc
cwtl
dec
in
mov
fadds
lods
cltd
lock
scas
shll
addr16
inc
mov
mov
pusha
lret
jl
pushf
ss
cmpb
test
bound
bound
fnstenv
cmpsl
mov
mov
xor
push
jl
mov
rcrl
sub
mov
movsl
push
pop
mov
popf
push
jecxz
push
sahf
xor
inc
mov
iret
jo
fisubrs
push
ret
sbb
sbb
jecxz
pop
mov
fidivrs
add
ret
clc
sbb
pop
cli
leave
ret
cmp
rol
xor
xchg
lock
bound
ds
imul
push
jo
movsb
push
push
mov
xor
jp
mov
rorb
movsl
xchg
in
jns
out
xchg
jne
daa
test
lea
je
push
pop
mov
sbb
mov
test
mov
cmc
mov
jge
movsl
cltd
out
adc
xor
mov
ret
fs
ret
mov
add
push
nop
data16
sbb
fisubl
test
js
mov
push
loopne
xchg
mov
ret
or
es
mov
mov
inc
cmc
xchg
lahf
xchg
jmp
pop
adc
jmp
xlat
stos
dec
pop
jmp
cmp
pop
mov
imul
lock
ret
or
jecxz
mov
cmpb
dec
and
pop
mov
int3
mov
movsl
shll
daa
pop
xor
pushf
mov
iret
outsb
inc
in
push
add
ret
js
into
fbstp
sub
mov
mov
test
bnd
xor
xchg
in
out
add
lea
sbb
int3
jle
mov
dec
push
mov
push
shr
sub
mov
mov
lock
cmpsb
aas
cmovp
pop
xlat
lahf
inc
sub
data16
clc
test
pop
mov
inc
in
in
jbe
mov
xchg
outsl
pop
sbb
std
int3
sbb
xchg
xchg
outsl
cmp
fs
cwtl
cli
sub
fadds
fildll
push
hlt
out
repnz
mov
out
cmpsl
jno
sub
mov
pusha
repz
cmp
add
js
ffree
mov
in
movsl
ret
xchg
xchg
shlb
cli
or
dec
dec
xchg
mov
out
adc
je
outsl
cmp
stc
add
repnz
pusha
add
sbb
repz
pop
out
cld
sbbb
xchg
into
jle
mov
leave
sub
jnp
mov
adc
clc
jg
test
sub
stos
cltd
mov
std
lret
jbe
mov
btr
mov
inc
xchg
inc
push
jnp
inc
pop
cmp
add
jle
mov
mov
scas
pop
dec
xchg
repnz
rol
mov
and
inc
jmp
add
test
and
jecxz
jno
imul
cli
fadd
xchg
std
inc
into
test
xor
out
jmp
lods
out
fnsave
ss
inc
adc
sub
stos
add
mov
mov
jnp
sub
jl
mov
aaa
sub
mov
test
mov
stos
mov
xchg
movsl
sbbb
sahf
xor
bnd
and
and
ret
inc
icebp
or
jbe
mov
or
mov
mov
pop
sbb
add
pop
sub
sbb
and
inc
sahf
adc
mov
adc
mov
gs
mov
push
mov
dec
xchg
lahf
notb
out
insl
incl
lock
test
mov
jns
mov
jge
fidivl
cmp
cmpsl
sub
cwtl
rclb
inc
mov
rcrb
push
cmp
maxps
shl
add
pop
or
sbb
jmp
enter
bound
movsb
push
mov
scas
rol
ds
test
dec
addr16
das
stc
sbb
and
mov
cmp
mov
outsb
clc
jmp
mov
out
nop
ficoml
loope
movsl
movsb
or
mov
mov
mov
pop
lahf
mov
fdivs
dec
dec
cmpl
mov
mov
add
mov
lret
data16
xlat
jo
push
jae
imul
xchg
fwait
dec
inc
jb
or
sub
cld
lret
les
test
dec
add
test
add
or
dec
jge
jg
mov
mov
cltd
push
xor
imul
cmpb
mov
clc
testb
scas
adcb
cmp
scas
sub
inc
mov
outsl
jge
aaa
sbb
sbb
call
pusha
lea
int
in
mov
push
test
mov
adc
cmp
push
jl
pop
movsl
mov
test
xor
sti
sub
pop
lods
sti
fwait
add
cltd
into
mov
stc
les
mov
adc
inc
push
imul
test
mov
xor
pop
push
out
dec
mov
jp
lods
sarl
data16
add
rorl
push
jae,pn
adc
push
dec
outsl
inc
les
xchg
push
xchg
adcb
pushf
and
push
aad
jb
out
or
inc
nop
loope
mov
outsb
out
jmp
fldt
push
adc
loop
and
lret
out
stos
rcr
sahf
xor
xor
ja
xor
shll
mov
mov
add
sub
mov
pop
inc
fs
daa
stc
adc
sbb
jne
jg
mov
and
adcb
add
push
sub
bound
imul
mov
and
mov
int3
imul
adc
push
xchg
mov
sub
int3
mov
movsl
mov
or
cltd
xchg
dec
sbb
mov
mov
sub
xchg
jb
mov
xlat
inc
idivb
sbb
test
mov
fdivrs
pop
out
lock
mov
cmp
fimuls
js
inc
mov
mov
sahf
pop
movsl
dec
mov
xchg
inc
cwtl
popf
shlb
xchg
adc
test
mov
ljmp
cmp
or
jns
mov
lea
jne
into
ja
lods
fwait
adc
es
stos
mov
xchg
add
lods
lds
cwtl
or
mov
jle
hlt
lahf
mov
adc
pop
pop
pop
push
xor
mov
pop
movsb
or
popa
cmc
dec
movsl
ret
dec
and
inc
jno
fsubrs
pop
int3
test
arpl
sbb
xchg
xlat
ret
into
and
dec
cmp
mov
daa
cmpb
xchg
fs
push
pop
sbb
xor
dec
sub
xchg
jae
jb
lret
xor
sub
cwtl
mov
out
xor
pushf
sti
jmp
scas
js
pop
scas
jecxz
adc
sarl
jle
xchg
cmp
je,pt
dec
mov
iret
jnp
and
and
jne
iret
push
cltd
dec
mov
outsl
sub
mov
pushf
movsl
push
jge
adc
or
push
int3
xor
jl
xchg
cmp
mov
std
and
in
sub
xchg
ret
pop
outsl
test
stos
nop
pop
mov
dec
jo
repz
repnz
test
ljmp
push
popa
bound
xchg
mov
push
popa
call
sbb
mov
fsts
push
add
xchg
cmp
inc
shr
jl
in
adc
test
fistl
jecxz
clc
mov
js
test
jo
push
cmp
or
aaa
into
push
mov
mov
mov
mov
inc
fwait
dec
pop
fdivrl
ss
inc
jo
sbb
push
and
in
or
nop
ret
movsl
scas
loope
dec
lcall
or
icebp
mov
mov
popa
popa
andb
roll
movsb
mov
adc
adc
mov
cmp
mov
inc
ss
cmp
fcoms
insb
jle
scas
cwtl
and
movsl
jge
das
mov
decb
xor
imul
lods
icebp
pop
popf
icebp
pop
mov
jp
ret
inc
mov
popa
mov
inc
frstor
mov
stos
jge
test
and
adc
or
punpcklwd
adc
push
popa
mov
mov
xor
ret
xor
js
repz
es
inc
mov
sarl
xor
sub
int3
clc
stos
cmovl
test
cmpb
insl
cli
cs
jno
and
mov
mov
out
sti
adc
std
test
mov
cwtl
in
pop
js
sahf
cmpsb
or
into
jno
sarl
sbb
lea
sti
ret
adc
ds
mov
addr16
aam
aam
add
push
mov
in
in
jae
loope
push
mov
outsb
imul
popa
outsl
lods
in
adc
out
sub
mov
cwtl
inc
mov
cmc
push
pop
mov
ret
test
inc
or
xor
jb
hlt
bound
ret
lret
repnz
jae
bound
lods
xlat
adc
incl
mov
jno
loopne
aam
mov
fnstsw
js
pop
fdivp
pop
mov
xchg
sub
movsb
daa
into
mov
fcmovnbe
add
fstl
ss
shll
rcrl
ret
test
pop
dec
dec
enter
sbb
pop
fsubl
xchg
test
dec
pop
dec
addr16
pusha
movsl
pop
es
jnp
test
xchg
insl
mov
and
pop
stc
mov
push
cmp
jmp
rclb
outsb
xchg
mov
stos
or
mov
test
sbb
sbb
cmp
add
lods
or
cmpb
ja
jp
test
jg
lods
xchg
js
fldl
dec
jecxz
test
cwtl
js
and
mov
cmp
inc
dec
cltd
pop
adc
jl
inc
mov
mov
mov
cltd
or
push
sub
sbb
sarb
xor
inc
mov
jge
sub
pop
fidivrl
js
jecxz
push
loopne
xchg
clc
sahf
add
cmp
adc
into
jp
mov
inc
push
inc
loop
dec
sub
nop
imul
stos
into
mov
xchg
frstor
adc
std
mov
cmpsl
call
dec
sbb
jp
cmp
push
jns
mov
loope
sti
adc
sbb
mov
test
jo
call
lret
repnz
outsb
test
cli
and
adc
or
movsl
insb
scas
mov
lods
inc
movsl
loopne
nop
cmc
mov
sarl
inc
add
test
mov
popf
rcll
push
out
pop
cmpsb
movsl
fcoms
scas
aas
sti
xchg
mov
les
and
stc
cmp
inc
pushf
sub
test
push
xlat
xor
add
or
loopne
decl
pop
dec
cli
inc
cwtl
movsl
iret
fldenv
cmp
cmc
jnp
int
cmpsb
xchg
aas
lds
adc
mov
loopne
ret
lods
movsl
pop
cwtl
ss
push
push
pop
inc
cmpsl
lds
cli
in
pop
mov
add
out
jnp
jae
std
movsl
mov
test
jbe
lods
mov
add
movsl
add
sbb
out
punpcklwd
pushf
mov
dec
mov
mov
mov
cmp
jecxz
test
loopne
sahf
icebp
push
sub
std
dec
je
sqrtps
mov
and
aas
jmp
popl
add
outsl
xchg
addl
pusha
ss
xchg
in
push
sarb
dec
dec
shlb
or
jne
inc
daa
daa
xchg
inc
movsl
lods
pushl
mov
and
faddl
cmpsb
jno
pop
setle
mov
popa
xchg
js
aad
in
mov
mov
enter
ficompl
inc
pop
dec
nop
stos
sbb
pop
cmp
or
in
call
jnp
xor
frstor
ror
xchg
movsl
out
push
jno
mov
mov
adc
mov
cltd
push
mov
cmp
xchg
mov
lahf
cli
jmp
cmp
mov
pop
mov
mov
fistpl
mov
sbb
ss
fisubl
push
cli
mov
pop
mov
test
dec
ret
sbb
pop
mov
cmp
dec
shrl
adcl
fsubrs
mov
mov
push
ret
out
in
cmp
pop
cmpsb
pop
sti
iret
xchg
pop
mov
test
popf
xor
add
sub
mov
iret
lods
icebp
jb
cmp
or
adc
scas
mov
ljmp
mov
cmc
sbb
jge
insb
mov
test
cmp
or
mov
xor
sbb
mov
rcrb
jmp
xchg
movsl
push
xchg
xor
cmpsl
repz
movsl
sahf
jnp
leave
out
fcomps
sti
icebp
push
jg
add
scas
push
dec
lahf
mov
or
and
ret
mov
xchg
xor
cmp
cli
cltd
fisubrl
adc
aam
call
mov
jmp
cwtl
dec
adc
cmp
pop
jo
xchg
dec
sarb
mov
xor
adc
push
xchg
xchg
jne
inc
fcmovnu
scas
fucomi
std
push
daa
popa
sti
xchg
or
out
repz
ss
repnz
jl
frstor
mov
cmp
shl
or
js
mov
orb
notl
jmp
mov
stos
popa
movsl
shlb
cmp
fisubrs
inc
loopne
xchg
cmc
test
push
push
or
adc
cmc
mov
adc
and
std
jo
popa
movsl
push
shll
mov
pop
xchg
adc
fisttpl
sahf
clc
or
jmp
dec
inc
jl
std
cli
dec
cs
sarl
sbb
repz
or
mov
stos
mov
push
sub
adc
and
adc
inc
aad
ja
cs
cltd
lcall
out
jns
into
cli
cld
mov
lods
ss
push
fs
add
cmp
popa
cmp
fistpll
lods
mov
add
aam
sub
cmpsb
nop
mov
mov
lds
iret
pop
cli
outsl
icebp
cmp
cs
mov
test
dec
inc
incb
ret
scas
adc
out
inc
sti
mov
movsl
in
sub
or
cwtl
lret
push
add
in
insb
cmp
imul
aaa
mov
rcrb
cs
xchg
mov
test
test
adc
test
mov
adc
xor
sub
insb
add
out
cmp
sub
into
arpl
test
dec
insb
adc
xor
push
push
mov
fadds
pop
movsl
dec
fdivs
ss
cmp
dec
lds
call
fdivrl
xor
mov
add
outsb
sbb
inc
mov
mov
das
mov
lret
pusha
inc
jnp
movsl
adc
roll
sarl
ds
loop
dec
popa
xor
imul
icebp
mov
stos
les
ret
push
test
fidivrl
ret
ret
mov
pop
jbe
shrl
cli
sub
push
scas
push
mov
sub
mov
fstl
popf
mov
xchg
xor
mov
mov
adc
cmc
loopne
aas
sbb
fimuls
lcall
in
pusha
pop
cmp
jbe
adc
mov
xlat
cmp
lock
sahf
mov
or
lods
and
shl
and
and
mov
repz
ret
mov
test
pop
inc
dec
dec
data16
adc
mov
pop
xor
adcb
outsb
add
iret
inc
mov
cmc
dec
xor
mov
ss
mov
sbb
inc
push
sbbl
and
dec
inc
dec
mov
out
cmp
cmp
addr16
push
or
xor
inc
mov
shrl
cs
mov
outsl
jns
lods
add
mov
movsl
xchg
mov
popf
sahf
out
push
ljmp
rorb
std
mov
jecxz
mov
cmpsb
lret
push
push
fbld
lds
pop
cltd
cmpsl
lcall
addr16
popf
aas
jbe
cli
adc
nop
push
scas
repnz
add
iret
loop
cmp
popf
cmp
out
scas
loopne
dec
pusha
outsl
cmp
mov
mov
sub
xchg
test
outsl
clc
dec
pop
mov
dec
sub
in
outsl
xchg
data16
or
hlt
test
bound
mov
cmpsl
movsl
mov
lret
add
sub
cmp
jno
push
cltd
jo
sub
std
add
mov
and
ljmp
adc
mov
lret
lcall
outsb
cmp
mov
xchg
mov
jnp
scas
popl
rorb
lret
movsb
push
push
pusha
test
test
fwait
mov
sub
int3
cmp
or
push
jecxz
ficoml
addb
jae
push
sub
mov
jnp
insb
inc
mov
or
lret
and
add
mov
packuswb
movsl
sbb
repz
mov
and
jmp
out
call
xor
cmp
scas
mov
add
mov
bsr
jecxz
push
mov
mov
aam
data16
and
test
xchg
jae
jp
mov
inc
jno
cltd
mov
movsl
popf
pop
mov
fnsave
xlat
mov
mov
mov
outsb
mov
sub
mov
into
fs
out
loopne
sbb
adc
mov
out
cwtl
mov
mov
out
arpl
orb
mov
sarl
pop
xor
scas
jne
jle
dec
cs
fstpt
sarl
insb
mov
in
fimull
xor
shrl
sub
int3
cmp
or
popa
xor
or
je
pusha
inc
mov
xchg
nop
mov
push
adc
bnd
int
push
out
sbb
xchg
sbb
cwtl
pop
mov
xchg
or
cltd
aam
xchg
sbb
push
imul
mov
outsl
xchg
mov
push
movsl
jl
popa
imul
xor
in
push
andl
and
loope
xchg
jecxz
outsb
lcall
mov
adc
add
repnz
mov
and
sub
movsl
cli
dec
cmp
mov
adc
rclb
jle
adc
inc
mov
xor
insb
pop
push
jo
or
add
mov
nop
fadds
test
jnp
mov
iret
cmp
cmp
pop
fbld
movsl
push
or
mov
mov
lahf
loope
mov
notb
xchg
into
jecxz
inc
popf
or
jmp
outsb
faddl
aad
leave
scas
or
pop
ret
xlat
in
xchg
lock
lock
sbb
xor
sbb
jle
call
lahf
xchg
cltd
cmp
fadd
xchg
jo
cmp
les
out
add
mov
adc
pop
mov
cld
sbb
mov
fldt
or
jns
movsl
movsl
mov
push
clc
or
sbb
jp
incl
push
test
mov
jl
jp
cmpsl
sub
mov
jg
pop
outsl
mov
push
or
mov
mov
lret
xchg
cmp
mov
add
js
cli
into
int3
daa
mov
sbb
dec
push
loopne
xor
adc
sbb
data16
mov
in
test
int3
mov
mov
movsl
int
outsl
gs
dec
pushf
lods
jnp
push
xchg
loop
js
add
sahf
fisttpll
inc
add
and
mov
jmp
movl
jne
add
inc
add
or
add
lret
movb
adc
fs
into
ret
into
sub
mov
cli
mov
in
mov
xchg
enter
stos
jecxz
inc
mov
push
jg
xor
jne
mov
test
jl
jns
lret
sbb
mov
sbb
lds
cwtl
push
mull
dec
imul
das
rorb
pop
sub
dec
nop
adcl
adc
add
push
iret
cmp
add
outsb
jmp
adc
and
int3
dec
jl
mov
dec
mov
pop
fistps
movsb
xchg
dec
dec
mov
push
ljmp
jcxz
dec
repz
and
push
push
xchg
mov
imul
adc
sbb
fidivrl
or
pop
sahf
cmp
sub
out
mov
mov
sbb
xor
inc
add
sub
pop
jle
cmp
fwait
pop
xchg
sarl
icebp
lcall
test
fistpl
negl
scas
daa
mov
imul
mov
inc
stos
jae
fsubs
dec
mov
mov
jmp
loopne
and
mov
cwtl
js
dec
shll
sub
and
mov
jae
fsubs
enter
out
cmpb
jne
xchg
push
fisttps
cmpsb
xchg
push
mov
mov
out
pop
or
les
das
repz
out
push
dec
mov
sub
gs
mov
das
pop
lods
call
jge
scas
xchg
int3
std
xlat
icebp
cwtd
sbb
adc
sbb
je
cmc
sarb
test
and
repnz
ljmp
lret
test
fldt
xor
mov
sbb
in
mov
jl
sub
mov
push
movsl
fimuls
fisubrl
in
sbb
movsl
fwait
jne
mov
test
cli
mov
xor
push
loope
mov
xchg
jns
outsb
pop
add
pop
and
ss
xchg
sub
jnp
loop
mov
and
xor
add
inc
imul
pop
cmpsb
sbb
jae
mov
adc
cwtl
data16
push
cmpb
add
inc
pushf
dec
stos
adc
test
iret
lods
mov
mov
inc
sub
mov
ja
cmp
cwtl
mov
les
adc
cmp
mov
cmpsb
test
mov
dec
inc
fistpll
imul
cmp
adc
out
stc
cmp
fprem1
dec
adc
lods
push
xor
jnp
inc
mov
movsb
sahf
cltd
pop
orb
insl
cmp
pop
push
adc
cmpsb
mov
adc
scas
jmp
std
xchg
xchg
mov
inc
cld
test
test
sub
faddl
push
cmpsb
out
mov
sahf
bnd
mov
mov
xor
shlb
mov
mov
push
popf
add
out
outsb
or
inc
xchg
shlb
dec
loopne
push
scas
mov
nopl
stc
or
imul
shll
dec
sub
inc
jecxz
cwtl
xor
xchg
out
jnp
sub
jle
mov
mov
pop
daa
lock
mov
dec
pushf
pop
out
push
leave
js
dec
stos
ja
stos
cmp
movsl
cmp
rol
mov
andb
addr16
xorb
insb
iret
mov
movsl
fnstcw
fs
fnstsw
jbe
mov
or
pop
xchg
enter
setns
repz
ja
fdiv
shlb
mov
addr16
or
repz
xor
std
inc
cmpsb
imul
cwtl
movsl
and
sub
into
xor
add
jcxz
pop
enter
test
dec
sahf
adc
or
test
pop
arpl
sbb
fldl
stos
mov
or
xor
fs
cs
xchg
leave
scas
call
fwait
pop
fbld
xor
jns
push
adc
sbb
mov
cmp
sub
push
inc
mov
ja
mov
ja
add
jge
ljmp
aaa
jle
repnz
sub
insl
mov
push
mov
jns
addb
test
ret
jle
sub
rcr
add
test
mov
test
inc
shlb
mov
test
mov
adc
ficompl
loopne
int3
xchg
or
sub
mov
sub
outsb
or
xor
ja
cmp
repnz
stos
dec
xchg
sub
stos
push
pop
addb
cmp
mov
mov
sarb
cli
mov
xchg
daa
stos
cmp
xchg
rcrl
fsts
dec
sub
inc
aam
jb
jns
js
xchg
rcll
test
mov
fisubl
out
pop
xchg
arpl
push
shl
mov
imul
sbb
int3
jbe
mov
jl
fstpt
jecxz
test
lods
push
clc
mov
dec
pop
ljmp
rcr
xchg
dec
mov
rol
sarl
xchg
fwait
mov
xchg
mov
sbb
movsl
push
das
aaa
nop
or
mov
cwtl
sub
push
cmp
mov
lods
push
sbb
andl
sti
hlt
loope
out
cld
lret
in
jbe
rcl
lret
adc
xor
rorb
into
jg
mov
shlb
cltd
cmpsb
inc
inc
subb
pop
imul
test
cmpsl
fwait
adc
xor
mov
clc
sub
pop
dec
in
mov
push
and
xor
mov
shlb
mov
push
sbb
inc
mov
mov
inc
and
sbb
mov
mov
mov
rol
ja
inc
jmp
add
mov
outsl
xchg
int
insb
test
push
mov
movsb
pop
imul
hlt
xchg
mov
adc
adc
ret
sub
mov
repz
stos
lcall
ds
mov
sbb
fwait
imul
or
orl
xor
dec
pushf
clc
pusha
fistl
inc
inc
cmpsl
lods
sbb
outsl
sub
sub
lea
adc
xchg
xor
jp
sbb
and
std
or
fcoml
stos
pop
xchg
xchg
mov
test
and
les
mov
add
lock
cmpsl
cmp
jo
fldt
cmp
xlat
mov
bound
and
ja
adc
scas
adc
add
js
mov
xchg
in
inc
pushf
cmp
sbb
push
push
pop
pop
imul
leave
mov
mov
mov
test
dec
jmp
or
cltd
pop
jb
and
bound
push
xchg
arpl
cmpsl
imulb
mov
dec
in
mov
test
cmp
lods
mov
xchg
add
push
test
jno
fdivrp
xchg
mov
inc
cld
jo
out
xchg
adc
lret
mov
lea
jnp
inc
clc
mov
shlb
int3
imul
dec
scas
mov
cmpsb
popl
repnz
jb
in
popa
orb
shl
or
mov
test
sti
js
xcrypt-cbc
cmpsl
push
filds
jne
insl
test
lods
push
jb
mov
and
xchg
test
iret
shlb
bound
mov
pop
insl
xchg
mov
shlb
fidivrl
cli
push
inc
mov
cmp
addr16
or
fisttps
cld
mov
inc
dec
jno
imul
push
mov
lods
fadds
js
mov
arpl
push
popa
xchg
or
and
jno
and
xchg
add
fisubs
dec
fsubl
daa
rol
subl
les
mov
inc
mov
movsl
dec
mov
push
lcall
xor
cmp
cmc
cmpsb
je
xchg
popf
in
in
mov
outsb
mov
leave
xor
das
rcrb
and
sti
push
sub
fldcw
or
jno
test
adc
mov
mov
inc
cmp
fiaddl
xorl
inc
pusha
sub
jno
xchg
out
sbb
movsl
xor
lcall
pop
cwtl
insb
dec
jno
sbb
sbb
shrb
xor
imul
mov
jl
mov
push
inc
int3
mov
jbe
enter
pop
nop
or
mov
das
xchg
pop
sub
pop
js
outsb
xor
jo
shlb
pusha
push
call
adc
ret
xchg
scas
out
test
push
imul
sbb
push
dec
ds
data16
les
fistpl
test
mov
mov
shl
inc
mov
test
leave
cmp
cmp
xchg
mov
pop
and
iret
ret
adc
movsl
stos
push
addr16
js
mov
and
mov
ret
rorb
push
lock
jbe
add
sbb
lret
sub
adc
inc
sti
mov
stos
mov
aas
mov
sahf
jno
stc
fmull
jp
xor
stos
or
mov
sti
call
dec
jno
mov
dec
xorl
mov
dec
fnstenv
mov
push
faddl
insb
xor
cmp
inc
cmp
pop
shlb
aad
and
lods
outsl
repz
push
bound
xor
jne
sbb
sub
and
mov
sarb
ret
sbb
mov
movsb
sub
test
mov
push
fstpl
cmp
into
cltd
lea
push
xchg
popa
inc
push
pop
shlb
fistpl
test
mov
mov
dec
xchg
sbb
cmpsl
fcoms
fwait
add
mov
clc
cld
imul
dec
add
sub
sbb
mov
add
dec
mov
fdiv
cmp
fucom
fnstsw
in
mov
test
cmp
cwtl
aaa
aad
xchg
mov
xor
push
jb
push
adc
repz
cmp
addr16
xor
mov
dec
outsb
lea
inc
inc
test
mov
push
add
cmp
xchg
js
jg
push
cmpsb
add
jge
repz
pop
in
mov
xor
xchg
rcrb
jns
inc
xchg
pop
movsl
xchg
jge
and
dec
lods
pop
fsubs
jns
ss
xor
jecxz
out
stos
push
cmp
mov
xor
jbe
ja
cmp
xlat
xchg
shrl
sbb
out
scas
outsb
adc
mov
mov
fidivs
push
into
sbb
mov
outsl
xchg
inc
inc
int
sahf
cmpsl
mov
aas
or
or
mov
in
lock
pop
test
or
mov
pop
push
mov
test
mov
ss
jae
movsl
nop
fisttpll
movsb
xchg
inc
mov
sub
cmp
add
push
lock
insb
pop
dec
adc
test
in
stos
pusha
lods
lds
sbb
jne
mov
mov
or
sbb
test
fwait
out
aas
mov
call
cs
xor
cmp
mov
popl
sbb
pop
scas
clc
popa
stos
and
jg
mov
pop
xchg
cmp
jle
sti
lret
push
fisubrl
fwait
push
fistpl
jecxz
mov
cmp
bsr
jno
and
dec
dec
sub
xchg
addb
ret
xor
sarb
push
js
adc
and
push
xchg
adcl
stos
mov
cwtl
fldcw
shlb
andb
xchg
int
inc
inc
fdivrl
out
pop
sbb
push
es
je
andb
jmp
int
sbb
shr
je
in
lds
fwait
cmp
ret
hlt
pop
in
jnp
xchg
sub
outsb
add
pop
push
inc
cmp
add
lcall
inc
repz
inc
sahf
pop
inc
mov
pop
cld
incl
sarb
inc
or
out
repz
roll
cld
mov
sti
mov
or
mov
mov
daa
outsb
pop
mov
sbb
sub
adc
pop
mov
fsubrs
adc
jnp
lret
popa
or
mov
loope
sbb
push
cmp
or
ficoml
cmp
shlb
inc
sti
sub
push
insl
imul
xor
pop
bound
aad
mov
xchg
push
xchg
movsl
outsb
sub
ljmp
mov
mov
popa
push
dec
cmp
mov
mov
movsl
xor
mov
push
mov
lcall
icebp
andl
cmp
jo
cmc
fisubs
bound
or
inc
xor
add
and
mov
cmp
push
dec
mov
push
push
jae
into
mov
pop
xor
fneni(8087
ret
sub
cmp
mov
leave
add
mov
pusha
mov
lcall
push
stos
js
sbb
out
jnp
lods
lods
rorl
test
mov
fidivl
ds
scas
xor
fdivr
sahf
push
lret
shll
add
clc
scas
popf
pop
jg
mov
push
or
or
xsave
les
add
jns
jp
movsb
mull
push
pop
jne
nop
mov
pop
out
xchg
out
daa
cs
cmp
rorl
mov
and
jecxz
cmp
pop
sbb
stos
dec
mov
das
push
in
fisubrl
inc
sbb
popa
or
push
mov
insl
adc
xor
into
sub
data16
outsl
mov
xor
sub
mov
mov
inc
mov
ret
jmp
addr16
jg
or
sbb
pushf
adc
xrelease
dec
or
test
mov
pop
mov
mov
sbb
popa
jecxz
neg
int3
mov
jecxz
adc
adc
rcll
jp
movsl
sbb
daa
mov
inc
lods
mov
fldt
cmc
or
ret
mov
inc
jb
movsl
or
inc
adc
and
add
jbe
in
cmp
loop
lret
cltd
push
jbe
mov
push
outsl
sbb
rcr
adc
ret
and
iret
jno
xchg
mov
adc
cwtl
outsl
scas
or
test
jo
or
xchg
movsb
inc
leave
rorb
fwait
inc
pop
and
mov
pop
fwait
or
jg
or
jae
and
jae
mov
sbb
jbe
jb
mov
shl
cmp
movsl
pop
mov
or
mov
pop
sbb
aaa
sti
jbe
mov
xchg
mov
jb
push
cmp
out
jne
push
enter
pop
arpl
xorb
and
cmpsl
repnz
ss
sub
sbb
popl
add
mov
jge
fwait
inc
ja
add
nop
test
adc
rcrb
ljmp
push
scas
fsubrl
js
jmp
jp
fiaddl
pop
xlat
stos
mov
jg
push
push
stc
push
pop
jle
push
mov
fildl
movsl
and
outsl
mov
pop
cmp
ss
jge
stos
insb
fstpl
sbb
mov
pop
lods
sbb
lods
sti
mov
sbb
add
ss
jae
movsl
jp
xchg
jg
inc
fsubs
and
scas
jno
or
push
out
mov
dec
adc
sub
push
ljmp
test
out
xchg
jno
or
ret
jne
pop
sbb
mov
mov
daa
mov
mov
ds
inc
cmp
mov
rolb
or
sti
into
cmpsl
rcr
inc
inc
pop
add
dec
mov
aam
or
loopne
cmc
lods
xchg
fcmove
jo
cmp
jno
dec
fcoml
daa
sbb
test
dec
jecxz
rorb
jb
mov
xchg
jg
fbld
shlb
xchg
xorb
mov
adc
rcr
fwait
and
femms
mov
jecxz
shrl
loopne
xor
pop
jo
mov
addr16
popf
cwtl
cmovnp
incb
and
cmpsl
subb
fnsave
push
loop
push
popa
aas
leave
movb
lods
push
inc
out
rcl
mov
mov
es
mov
jmp
mov
xor
pushf
cmpb
adcb
and
loop
inc
fisttpll
sahf
ds
sbb
stos
pop
and
adc
outsl
jne
sbb
add
mov
push
imul
fldenv
andb
jle
mov
sbb
push
jne
out
add
xor
sub
add
data16
sbb
orb
xchg
mov
call
push
cmp
stc
cmc
cmp
leave
xchg
movsl
xor
bound
sbb
lcall
scas
cld
ret
or
mov
movsl
push
rcrl
lcall
cmp
cmpsl
push
and
int
dec
pop
rcrl
lods
roll
sub
popa
icebp
rcrb
addr16
test
iret
dec
sub
sub
jb
into
mov
mov
in
rcrl
and
jne
or
adc
out
movsl
loop
mov
jl
je
fs
adc
pop
jne,pt
jnp
mov
fisttpl
mov
arpl
inc
lods
mov
enter
mov
push
pop
fsubl
sbb
mov
in
inc
mov
shll
fimull
sar
mov
jnp
xchg
pop
xor
js
sarl
inc
adc
nop
mov
inc
push
sarb
insl
in
jecxz
call
lock
jecxz
and
movsl
push
adc
cmp
jmp
dec
es
cs
sub
cmp
pop
inc
inc
jge
rolb
mov
jecxz
xchg
mov
cmp
test
dec
rclb
mov
mov
sbb
testb
cmpsb
mov
fmul
push
mov
xchg
dec
fnstsw
sbb
xchg
push
xor
mov
lea
sti
xor
mov
std
add
pushf
adc
sub
aad
lret
push
mov
fldt
shrb
int3
sub
mov
prefetch
scas
outsl
jo
push
or
inc
pop
mull
or
movsb
js
addr16
jb
daa
cmp
push
test
mov
movsl
jae
shr
subb
aas
call
and
ja
mov
and
shll
test
sarb
lds
ljmp
jno
dec
mov
mov
movsl
mov
or
fs
pusha
xchg
js
push
adc
pop
pop
mov
scas
arpl
cmp
jl
mov
jecxz
fidivs
add
dec
or
push
and
movsl
gs
ret
inc
mov
outsb
repz
aas
loope
fidivl
and
xchg
xchg
loope
ds
scas
pop
lods
sub
leave
lcall
inc
std
xlat
xchg
mov
adc
mov
lods
repz
shrl
aaa
mov
rclb
loop
add
div
xchg
mov
repnz
adc
adc
mov
dec
mov
std
bnd
jo
sub
push
cli
aam
sbb
scas
and
test
and
add
inc
inc
xchg
jmp
cltd
adc
hlt
mov
jp
test
test
adc
data16
ret
out
flds
xor
movsl
mov
ret
mov
repz
or
pop
mov
dec
push
insl
stos
xor
xchg
and
xchg
test
mov
outsb
cltd
lret
jg
add
sub
add
movsl
push
fs
xchg
push
cmpb
jge
fdivrs
xchg
mov
bound
add
ja
push
scas
lods
push
and
xchg
sti
jns
pop
add
and
xor
stc
jo
pop
das
stos
add
je
mov
mov
push
sub
nop
cmp
test
inc
fidivl
sub
sar
lds
popf
pop
pop
xchg
loop
fs
xor
xor
or
cwtl
xchg
sahf
mov
mulb
aas
cwtl
mov
fisubl
sbb
inc
sbb
jne
sbb
jmp
mov
cltd
inc
das
leave
xchg
mov
mov
add
lea
daa
mov
lea
or
sti
call
mov
jae
shrb
ss
jo
int3
inc
xor
dec
ss
mov
cmp
sti
mov
sbb
out
imul
inc
pusha
dec
mov
ret
push
mov
push
jne
push
test
pop
bound
hlt
jp
movsl
pop
fstps
icebp
xchg
xor
stos
sti
add
cmpsb
mov
sub
pusha
stos
insl
jbe
rorl
xorb
inc
add
xchg
mov
hlt
cs
mov
pop
ss
imul
add
sub
inc
movsl
jmp
aas
std
sbb
out
enter
shll
addr16
adc
sbb
add
les
repnz
jle
lcall
add
mov
into
dec
popa
cmp
aas
std
cmp
sbb
imul
push
inc
shll
lods
and
fbstp
arpl
mov
std
cmp
lahf
pop
movsl
addb
std
fimull
lcall
lret
ds
lea
xchg
test
xor
icebp
test
adc
xchg
inc
dec
jl
ds
out
fimuls
dec
adc
outsb
sbb
and
or
xchg
jb
mov
jg
cmp
lret
add
push
cs
and
sahf
xchg
xchg
push
jle
into
mov
lahf
fdivp
pop
ja
adc
fisttpl
lods
fisubs
js
inc
ret
popa
rcrb
imul
jg
mov
dec
aaa
jns
mov
test
test
movsb
sub
sub
out
gs
stos
dec
cli
jo
rorb
stos
jnp
or
mov
jg
addb
test
fmuls
aas
repz
test
add
popa
mov
scas
mov
mov
out
mov
mov
aas
adc
add
or
mov
std
out
cmpsl
add
js
mov
daa
mov
inc
mov
cwtl
stc
imul
push
sbb
xor
sarl
stos
cmp
xchg
enter
stc
mov
push
sbb
pop
mov
icebp
call
or
loope
lock
decl
mov
jp
and
lret
out
dec
fcompl
scas
in
in
loope
mov
push
jl
lods
dec
mov
xchg
add
out
clc
xor
xor
mov
adc
push
jmp
sti
mov
xchg
mov
les
ds
leave
push
out
test
enter
dec
ja
scas
mov
dec
pop
dec
or
stos
mov
in
or
mov
xlat
test
cli
cmp
push
dec
xchg
mov
sub
cmp
xor
mov
cmp
fildll
xchg
stos
hlt
lods
sbb
mov
mov
push
xchg
add
jo
movsl
scas
test
adc
push
jae
xchg
ds
lods
out
cmp
ja
pop
mov
pop
push
mov
adc
loop
add
movsl
and
add
or
jp
test
cmp
shr
scas
bound
shrl
aad
add
bound
dec
add
pusha
lret
addr16
lods
les
adc
inc
sti
and
shrl
mov
fidivl
sbb
adcb
pop
jnp
scas
sbb
fsubr
xchg
inc
ret
cmc
sahf
nop
lods
xor
sub
sub
sub
pop
add
test
addr16
push
mov
push
fisubl
jle
pop
cwtl
lcall
sub
test
jmp
dec
les
sti
andl
es
or
mov
test
jne
mov
pusha
addb
hlt
cli
inc
mov
into
cld
mov
mov
xchg
adc
jle
jmp
popf
dec
inc
jb
daa
inc
adc
into
inc
sub
int
ficoml
add
inc
sbb
enter
lret
jns
jbe
push
dec
mov
xchg
ficomps
xor
jl
das
ss
jae
sbb
pusha
test
cltd
xor
add
mov
adc
out
movswl
movsl
fdivs
test
xchg
cmp
mov
adc
xchg
out
push
popf
outsb
adc
jecxz
jno
imulb
push
add
movsl
popf
iret
imul
clc
scas
bound
test
and
inc
dec
and
ret
fsubs
mov
negb
sub
loop
add
lret
jns
cmp
xchg
dec
or
lret
js
inc
adc
fcoms
sub
sbb
push
jbe
lods
fidivl
mov
adc
jmp
dec
mov
sbb
xor
sbb
inc
out
call
xchg
jmp
or
lcall
out
push
aas
jo
rcll
xor
cmp
popf
mov
push
sub
and
cwtl
sti
pop
adc
and
data16
xchg
mov
fs
add
or
mov
divl
cmp
mov
xchg
xor
test
scas
xor
jns
sub
jo
add
xor
sbb
mov
mov
les
pop
repz
cmp
fnstenv
mov
mov
xchg
inc
in
mov
int3
adc
cmp
pop
xor
test
push
mov
dec
rcll
mov
push
or
jnp
cmp
pop
cmp
sarb
xchg
and
adc
xor
push
stc
jnp
mov
movsl
fnsave
xchg
lahf
pop
jle
stc
and
cmp
fstl
scas
dec
into
jne
popa
inc
andl
add
jnp
pop
fldl
test
cmp
mov
xor
dec
dec
fwait
pop
adc
popa
pushf
mov
cmp
jmp
jno
popa
call
or
mov
fnsave
lods
xchg
xlat
adc
test
testb
fdivr
sbb
pop
dec
or
mov
dec
mov
aad
xor
testl
lods
cmc
mov
pop
je
scas
jns
aad
inc
xchg
loop
loop
mov
mov
andb
add
dec
sbb
fucom
in
jne
arpl
movsl
cmp
lahf
aas
enter
jo
sbb
enter
or
int
sbb
addr16
xor
sbb
inc
call
push
cmp
cmp
sbb
add
sbb
aam
test
xchg
sub
jmp
das
lods
push
and
dec
jl
adc
shrb
push
lds
fsubs
out
sub
scas
cltd
out
int3
jl
out
cmp
mov
adc
sub
xor
mov
inc
mov
lahf
andb
xchg
dec
or
push
pushf
mov
mov
in
sarl
cmp
enter
push
sub
movsl
je
xor
int3
xchg
inc
lds
adc
movsl
jb
xor
jne
and
in
jnp
adc
push
mov
dec
mov
push
loop
jecxz
inc
sbb
jle
jne
mov
rcl
pop
mov
mov
sbb
inc
into
and
sarb
xchg
std
lret
inc
sbb
aas
imul
jle
jb
sub
fbstp
lret
cmc
xor
iret
and
ljmp
inc
cmp
mov
lret
into
mov
lahf
mov
filds
inc
adc
js
aaa
sub
mov
sbb
push
push
sbb
popf
stos
addb
or
xor
jae
dec
inc
clc
mov
mov
in
into
push
push
xor
cli
sbb
mov
fstpt
cltd
mov
mov
and
test
add
adc
add
xor
rcl
loope
out
std
iret
fcoms
pop
or
mov
shll
inc
fwait
dec
sti
push
and
sbb
cmp
jbe
add
gs
daa
xchg
push
add
inc
pop
cmpsl
pushf
dec
not
ss
out
push
cmpl
adc
js
mov
xchg
and
fmull
clc
in
ds
in
mov
call
cmp
jmp
mov
push
inc
jb
sub
cld
fnstcw
nop
mov
cld
cmp
js
dec
cmp
mov
or
sub
push
out
mov
mov
out
fistps
jle
dec
fmul
sub
rolb
push
aas
mov
add
loopne
clc
lods
outsb
push
and
test
mov
aam
test
dec
shlb
cwtl
mov
std
pop
jp
jle
out
and
mov
sub
cli
test
mov
outsl
ds
jg
mov
dec
adc
daa
jecxz
leave
and
jnp
repz
mov
cmp
fisttpll
shrd
push
mov
ljmp
std
popf
add
pop
mov
lock
cmp
outsl
stos
mov
jo
xchg
inc
cmp
lock
pop
sbb
push
sbb
aaa
ret
scas
or
jmp
gs
mov
mov
and
xorb
lret
mov
dec
mov
in
mov
dec
outsl
fldenv
pop
push
pop
push
mov
sub
push
add
insl
mov
push
imul
test
ret
lea
movsl
imul
jne
xorb
in
and
push
test
or
cli
cli
cmp
andb
outsb
leave
aaa
fcoms
repnz
mov
fiadds
std
xchg
push
pusha
sub
adc
into
xchg
outsl
push
cmpsb
div
dec
xchg
sbb
cmpb
pop
mov
popf
cmp
js
inc
ss
jecxz
xor
popf
inc
inc
xor
mov
add
es
sarl
mov
icebp
jmp
xchg
int3
imul
sbb
push
or
outsb
les
mov
outsb
in
test
add
shl
jmp
push
dec
shll
push
mulb
daa
adc
mov
rolb
mov
sub
test
push
xorb
dec
test
rclb
xor
inc
je
iret
sbb
mov
loop
fwait
test
lea
in
mov
jnp
out
and
shll
add
mov
dec
mov
mov
xor
jne
gs
xlat
ret
das
mov
fimull
sub
sbb
outsb
ljmp
rcll
sub
jns
ret
and
add
ret
adc
movsl
cmp
jecxz
fidivrs
cmp
jbe
pop
or
mov
shll
sbb
cmp
mov
and
out
inc
popa
loopne
push
rsm
test
out
sub
mov
mov
mov
ss
or
dec
sbb
cmpl
std
pop
leave
in
aas
imulb
inc
push
fcomps
dec
or
cmpsl
cmp
mov
dec
cmp
imulb
sub
int3
popa
stos
sbb
pop
xchg
cmp
rcrb
outsl
sbb
and
js
add
inc
inc
adc
movsl
pop
out
push
mov
cmp
mov
dec
imul
or
inc
test
add
adc
sub
test
packuswb
scas
pusha
or
int3
mov
inc
or
jbe
out
pop
mov
insb
imul
movsl
dec
je
mov
adc
or
test
xchg
dec
xchg
movsl
imul
aas
leave
fwait
mov
mov
and
xor
mov
inc
mov
jge
in
cli
jns
popa
sub
int
mov
shrb
pop
cmpsl
movsb
jo
lcall
mov
mov
mov
cmpsb
popa
gs
pop
cmpsb
mov
adc
andl
jge
out
xchg
rolb
jne
push
mov
popa
and
mov
dec
adc
movsl
fadds
inc
popa
push
stos
sub
dec
arpl
xchg
mov
rorl
mov
jnp
and
daa
movsl
aaa
adc
push
ret
out
mov
iret
movsl
nop
mov
out
fcom
inc
adcb
mulb
xchg
jecxz
or
push
xor
imul
imul
mov
fdivrl
or
insl
mov
or
mov
cld
shll
mov
mov
test
mov
roll
sub
inc
or
xchg
pop
jnp
cmpsb
loopne
ja
jbe
pop
push
dec
mov
jb
rcl
pop
movsl
add
push
addb
mov
movsl
mov
call
push
jge
or
scas
xchg
xchg
icebp
and
sub
jns
in
mov
popa
jne
hlt
icebp
or
into
movsb
popa
push
xchg
push
fucom
jp
inc
cmp
mov
xchg
mov
leave
add
ficompl
pop
push
movsl
jns
sbb
jno
daa
and
cmp
sub
add
popa
cmp
dec
shrl
sbb
cmpsl
cli
pop
adc
cld
int3
aas
lcall
push
or
jne
or
js
xchg
or
xchg
movsl
icebp
ficomps
jl
mov
push
sub
mov
sub
jecxz
sub
inc
clc
push
push
roll
test
mov
or
setnp
or
sbb
shll
sbb
bound
out
mov
loope
jmp
mov
lcall
inc
hlt
or
out
div
test
jg
mov
mov
and
mov
dec
das
clc
and
inc
shr
mov
push
xchg
rorb
dec
pop
ja
add
fiaddl
add
gs
test
int3
xchg
sahf
sahf
hlt
push
insb
add
lret
movsb
movsl
fcompl
inc
in
and
jne
xlat
mov
fcoms
out
and
cs
cmp
faddl
stc
inc
mov
out
inc
test
add
cmpsl
ret
push
mov
rcrl
insl
in
out
mov
and
scas
and
or
mov
dec
inc
cmp
cld
and
mov
or
aaa
popf
push
in
jg
das
cwtl
sub
jbe
ret
mov
das
dec
xor
hlt
jg
leave
inc
mov
push
movl
pop
scas
sub
loope
sub
jp
add
jle
pop
insl
sbb
inc
jge
lcall
in
lahf
and
test
adc
jo
movsl
pop
fnstenv
xchg
pop
rclb
sub
enter
and
mov
int
mov
lret
idivl
movsl
pop
push
insb
push
repz
mov
iret
stos
sub
testb
mov
addl
std
in
cmp
pop
xchg
outsb
fbld
xchg
lea
xchg
and
dec
mov
in
stos
movsl
jnp
shrl
insb
scas
enter
test
dec
inc
cmp
push
out
bound
movsl
rolb
adc
mov
pop
inc
mov
addl
sahf
out
and
scas
movlps
push
clc
inc
sbb
ljmp
out
inc
fisubl
sub
dec
nop
inc
mov
xchg
stos
popa
sbb
hlt
xchg
or
insl
int3
ja
fnstsw
mov
popf
ficomps
icebp
in
push
inc
push
jo
scas
lcall
out
loopne
mov
cmp
cltd
dec
mov
lcall
xor
std
push
dec
ficoml
call
test
or
adc
jnp
add
sub
pop
pop
mov
pop
dec
sub
ss
jecxz
or
pop
mov
mov
movsl
add
pop
xchg
sbb
pop
mov
cld
stos
mov
std
dec
adc
repz
fs
adc
loopne
ljmp
fdivr
movsl
xchg
jno
stos
push
cmp
shll
js
cltd
mov
push
icebp
xor
sar
pop
push
out
int3
imul
xor
pop
pop
lcall
dec
jae
jge
test
adc
push
and
mov
jo
fnstsw
out
mov
mov
push
inc
inc
stos
mov
mov
movsl
ja
insl
push
or
ss
fiaddl
repz
stos
xchg
lret
xorb
pop
inc
dec
push
les
inc
movsl
push
jecxz
lods
sub
imul
adc
iret
mov
pop
gs
pop
jnp
and
dec
insb
out
xor
push
mov
sub
ror
xor
sbb
shlb
sti
pop
sub
popf
out
movsl
inc
iret
movsb
mov
cltd
mov
mov
scas
andb
mov
insl
lret
out
sbb
sub
out
decb
adc
mov
or
je
push
cli
lock
mov
minps
clc
sub
mov
out
push
and
jo
pop
stos
repnz
and
clc
mov
fisubs
xchg
jle
inc
or
mov
sub
popa
jp
pop
jge
int3
pop
scas
mov
rcll
mov
adc
and
pop
bound
fwait
cmp
insl
dec
data16
mov
xchg
fnstcw
fs
ret
imul
cld
movsl
add
ficoms
arpl
movsb
xchg
dec
leave
test
imul
ljmp
mov
rcrl
movsl
push
mov
stos
insb
xor
test
int
xchg
mov
fwait
cwtl
add
jns
pop
pushf
js
clc
inc
push
cmpsl
loop
lods
and
mov
sub
and
xlat
sub
adc
lret
pop
das
scas
mov
mov
sub
jecxz
movsl
jo
fldl
push
andb
mov
xchg
mov
repnz
sbb
sub
jecxz
sbb
mov
lahf
sub
push
loope
js
inc
test
xor
add
lcall
jns
lret
xchg
popf
movsb
inc
lods
fstl
arpl
jbe
fisubl
ljmp
test
cmc
push
ret
mov
pop
pusha
pop
rcrl
dec
jg
pop
icebp
sub
xor
iret
movsl
mov
ss
mov
icebp
popf
jmp
int3
and
pop
mov
mov
add
add
push
aam
out
mov
pusha
pop
movl
lahf
lret
mov
and
push
imul
ret
aam
test
xchg
daa
negb
in
pop
adc
fdivrl
mov
dec
sbb
out
cmpsb
gs
cmpsl
daa
leave
jb
and
cld
inc
mov
jns
xchg
sbb
jb
pop
repnz
mov
shrb
sarb
stos
xor
mov
lret
mov
aaa
in
pusha
mov
pop
push
mov
scas
adc
ja
adc
mov
lock
mov
xchg
lret
or
cmc
fs
jnp
sub
mov
scas
add
add
mov
pop
movsb
stos
aaa
rorb
imul
xor
adc
inc
mov
das
pop
mov
sti
adc
cmp
gs
fisubs
mov
scas
inc
test
rorl
out
stos
lret
add
fadds
pop
xor
mov
dec
cmc
ss
adc
outsl
leave
push
bound
pushf
test
or
or
jge
daa
repnz
pop
dec
jl
sbb
sub
mov
pop
ds
pop
inc
es
ret
movsl
mov
iret
mov
adc
xchg
aas
test
ss
ret
fisubs
movsl
out
aad
stc
jns
xorl
repnz
daa
mov
test
xor
sti
hlt
inc
mov
sbbb
popf
xor
stc
sbb
push
mov
push
mov
or
sbb
fldl
mov
aam
push
push
lret
std
loopne
inc
call
jmp
jb
hlt
sahf
pop
xchg
lea
mov
cmp
idiv
hlt
cmovge
dec
pushf
clc
sub
stos
pop
mov
int3
or
fwait
mov
out
xor
dec
out
test
test
mov
adc
cli
sbb
cmp
xchg
and
sahf
movsl
push
jno
and
push
cli
sub
fisttpll
cmp
add
bound
test
push
aaa
leave
loope
mov
and
add
pop
dec
scas
ss
cmpsb
and
inc
inc
imul
pop
ja
lods
imul
xchg
movsl
add
faddl
lods
dec
mov
push
ffree
xchg
divb
add
push
lods
into
mov
adc
popl
push
fiaddl
jg
data16
xor
xor
lret
inc
mov
cmpsb
mov
mov
push
mov
stos
andb
sub
mov
add
pushf
adc
aas
mov
add
dec
push
mov
inc
xchg
pop
mov
inc
mov
pop
andl
fisubl
iret
mov
adc
sbb
mov
scas
movsl
inc
xchg
jo
sti
push
jecxz
pop
fndisi(8087
lahf
test
shll
clc
sub
sahf
in
pusha
push
pusha
dec
and
lods
aaa
scas
out
xlat
sbb
dec
cmp
mov
mov
sbb
loope
movl
push
fs
mov
fchs
jle
jmp
js
xlat
movsl
pushl
mov
fdivrl
fs
push
scas
sub
xchg
ja
lea
sub
out
mov
out
push
sub
xchg
pop
adc
jns
in
adc
iret
movsb
push
test
repz
data16
clc
mov
out
imul
or
or
jae
mov
push
stos
gs
scas
scas
jmp
daa
aaa
sub
imul
sub
lods
push
jp
pop
movsl
or
scas
jecxz
test
stos
and
dec
mov
cmp
xchg
inc
jg
enter
lock
mov
mov
pushl
and
dec
shr
cwtl
xchg
jle
clc
jge
leave
in
push
out
cltd
mov
sahf
xchg
adc
add
shrl
lcall
add
sub
mov
sub
mov
inc
sbb
ja
jns
mulb
push
out
test
icebp
or
shll
mov
sarb
sub
nop
cmp
fwait
es
mov
sar
call
and
jle
cli
xchg
mov
cltd
xlat
mov
fwait
in
scas
xlat
dec
mov
cmpsl
sub
fisubl
scas
push
jle
cmp
pop
jns
push
repnz
inc
add
add
cmpsl
dec
mov
push
stc
mov
push
sub
sub
sbb
pop
cmp
fdiv
jecxz
rol
cltd
sahf
enter
sbb
sbb
push
sbb
push
xor
xchg
mov
nop
fcompl
dec
out
mov
nop
addr16
mov
je
shl
dec
or
mov
outsb
lds
xchg
ss
clc
jecxz
scas
popa
movsl
xchg
cmp
pop
movsl
loop,pt
ss
shrl
imul
out
jge
pop
pcmpgtw
jne
in
pop
jp
dec
cli
adc
fistpl
jb
or
iret
jecxz
add
imul
mov
sbb
mov
test
pop
fbld
inc
fisttpll
loope
scas
jb
xorb
stc
jnp
push
decb
dec
enter
push
shrl
mov
in
cmp
jns
nop
call
test
xlat
je
hlt
sub
pop
dec
cmp
cmp
cmp
pop
insl
je
mov
mov
pop
divb
ds
mov
mov
push
daa
mov
inc
dec
into
nop
test
push
cld
fstpt
xor
insb
das
gs
orb
scas
adc
ljmp
mov
xchg
xor
push
repz
fs
mov
insl
sub
and
xchg
mov
xor
mov
inc
pop
or
dec
rorb
ja
sbb
and
jg
mov
ss
push
cs
icebp
adc
mov
outsl
xchg
mov
int3
loope
test
mov
cltd
popa
lcall
jmp
mov
pusha
inc
cmp
sub
addr16
fnstcw
mov
adc
and
outsl
rcrb
inc
add
mov
push
movsb
jl
cmp
xor
dec
bound
xor
cli
and
fisubrl
inc
pop
lods
xchg
mov
and
mov
shll
mov
add
leave
mov
pop
repz
adc
repz
jp
mov
js
mov
mov
xor
mov
orb
insl
mov
inc
mov
mov
sti
mov
cmc
adc
jecxz
push
adc
addr16
or
jb
aad
mov
jle
fisubl
jmp
sbb
stos
js
push
cli
mov
push
mov
and
xchg
dec
xchg
cmpsb
jnp
out
imul
loope
fidivl
jp
sub
cmp
popa
lods
mov
push
test
cmp
mov
fdivs
dec
mov
inc
std
ret
and
jo
xor
cmp
mov
xchg
jo
test
test
fldl
xchg
lods
rcr
js
pop
std
pusha
xchg
mov
inc
movsl
ss
adc
orb
clc
adc
mov
or
ffree
push
cmp
addl
pop
mov
out
push
mov
sti
pop
jle
mov
jmp
pop
mov
movsb
or
testb
lods
add
imulb
mov
xor
jle
movsl
test
test
pop
cmp
mov
mov
movsl
lret
xlat
mov
js
sbb
outsl
repz
int
and
pop
cmp
test
xchg
push
imul
in
data16
out
sbb
shr
sub
mov
into
test
mov
outsl
adc
sub
push
ja
scas
push
push
mov
mov
xor
mov
mov
addr16
mov
jb
mov
inc
pushf
loopne
cwtl
fs
xchg
xchg
movsl
pop
aaa
pop
data16
cmp
shl
insl
add
mov
je
cmpsl
outsl
mov
jae
sbb
test
enter
cmp
inc
imul
sbb
xor
mov
cmpsb
adc
decb
lods
push
inc
pop
jbe
inc
jb
aaa
mov
test
push
push
insb
mov
mov
adc
ret
lock
ret
iret
repz
loop
or
loop
fsubrl
add
data16
rcrl
out
push
pop
iret
mov
fstp
adc
lds
lret
gs
daa
fstp
cmp
dec
les
test
jbe
push
pop
xchg
cs
adc
mov
andl
jo
sbb
ror
into
xorb
bound
addr16
sub
jecxz
out
nop
and
jbe
rcrb
pop
mov
mov
addr16
push
sbb
orb
add
add
mov
mov
or
adc
push
jecxz
push
iret
test
outsl
mov
lds
mov
jno
mov
in
addr16
movsl
loopne
and
daa
mov
out
test
pusha
push
xor
sbb
jne
adc
sub
lea
scas
popa
xchg
or
mov
lods
popa
scas
popf
push
push
shll
int
inc
sub
jecxz
pusha
cmp
pop
popa
shll
push
aaa
push
pop
ds
cli
shlb
xchg
pop
fldt
mov
fildl
mov
xor
scas
cmpsl
mov
aas
jne
xchg
mov
inc
lods
push
movsl
dec
pop
jnp
mov
jae
ud1
mov
sub
cmp
imul
movsl
cmp
test
pop
xlat
test
stos
xlat
outsl
shll
cmp
mov
mov
enter
movsl
repz
sti
aad
dec
ja
xchg
scas
push
ja
add
xor
iret
cmp
or
sbb
add
jl
pop
rcll
jmp
mov
icebp
shll
xor
push
movl
cmc
dec
dec
pop
mov
jne
mov
mov
dec
insl
jno
mov
mov
test
ss
clc
or
je
mov
mov
pop
xchg
jo
test
pop
push
mov
fidivs
les
cs
inc
arpl
push
cmp
fnsave
inc
popa
xchg
mov
insb
roll
and
push
fs
xchg
xchg
shll
mov
test
arpl
and
outsl
sub
bsr
lods
push
lea
into
std
nop
pop
out
sub
mov
mov
orl
jbe
jns
loop
xor
sub
aad
dec
sub
rcr
ret
sbb
movsl
cmp
xor
dec
mov
mov
inc
or
fsubr
ret
inc
or
xchg
mov
insb
mov
mov
bnd
adcl
xorb
dec
outsl
pop
mov
test
fdivrs
add
stos
inc
dec
inc
mov
lods
jge
sub
mov
clc
push
or
fldt
into
jecxz
out
xor
push
fisttpl
mov
imul
jns
push
lea
jnp
inc
jl
adc
dec
test
cmp
or
push
mov
fimuls
aam
push
test
mov
cmpsb
push
and
push
cmpsl
movsl
test
inc
nop
adc
fwait
mov
xchg
test
mov
out
mov
inc
push
xor
into
pop
inc
mov
test
jp
scas
inc
fidivl
add
cmp
out
sbb
jb
movsl
sbb
movsl
lods
push
xchg
sub
pop
movsb
dec
les
mov
aad
mov
ret
push
dec
push
test
pop
aad
xchg
sarl
cltd
jb
imul
and
cs
sbb
xor
mov
sub
out
out
loopne
scas
shlb
fcomp
fld
mov
imul
fwait
movsl
and
cmp
outsl
add
loop
pop
add
jne
jnp
jl
test
js
ret
test
cmp
and
pop
nop
clc
xor
in
rorb
das
mov
jge
jnp
mov
mov
inc
sbb
mov
mov
cmp
sbb
stos
mov
xchg
cwtl
ficomps
ja
loopne
stos
test
pop
xchg
cmp
jge
mov
wbinvd
or
cmp
loop
push
mov
and
cmp
int3
popf
aaa
mov
pop
mov
xor
push
cld
jb
dec
and
les
pop
xor
aaa
push
xchg
inc
xchg
add
pop
add
orl
cld
jmp
mov
adc
push
jb
xchg
inc
nop
adc
cmp
repz
das
mov
adc
sbb
and
xor
dec
cmp
jb
jp
fisttps
rcl
js
into
push
mov
sub
pop
and
or
jb
outsl
cmpsl
mov
push
je
daa
xchg
mov
sbb
mov
mov
ja
fwait
leave
sub
jns
mov
and
pop
mov
xchg
mov
inc
int3
outsb
xor
sub
je
pusha
test
cmp
mov
lds
shl
imulb
iret
es
test
jecxz
in
adc
ljmp
repz
push
fcmovu
or
pop
movsl
and
dec
sub
in
mov
mov
and
into
es
popa
mov
fstp
xor
push
jge
pushf
and
loop
or
jo
dec
test
xlat
ror
xchg
stos
addr16
decb
out
shlb
sub
scas
dec
clc
movsl
ljmp
jns
movsl
add
cmp
sbb
inc
cmp
loopne
leave
movsl
fdivr
icebp
rclb
sub
enter
movsl
xchg
mov
mov
xchg
push
es
sub
lods
mov
leave
cmpsb
cld
push
mov
sub
xlat
addb
adc
cltd
out
dec
jns
cli
pushf
jo
lcall
shlb
add
mov
xlat
and
das
adc
aad
jmp
cltd
gs
test
repz
mov
mov
pusha
ss
cmc
cmp
shlb
bound
sti
mov
xchg
push
fldt
jo
mov
cmpsb
mov
cmp
into
out
js
xchg
xchg
popa
adc
iret
push
jecxz
adc
adc
sahf
add
sub
pop
clc
scas
ljmp
clc
enter
mov
in
mov
adc
neg
mov
imul
mov
sub
setge
cltd
pop
call
stos
cltd
mov
pushf
mov
cwtl
inc
jg
mov
daa
jns
nop
daa
aaa
sarl
mov
and
test
cmp
adc
nop
sbb
cs
adc
mov
jns
ljmp
lods
stc
lds
sub
pushf
fists
test
lret
xor
jns
fstpt
mov
in
mov
or
mov
pop
pop
jle
rcrl
mov
jmp
pusha
clc
push
cmpb
push
jns
lret
je
or
ss
xchg
mov
sub
movsl
adc
sbb
add
adc
call
dec
mov
inc
xchg
xlat
pusha
jmp
inc
pop
sub
sahf
push
sub
lods
pop
mov
mov
xor
pop
fcmovu
aas
cmp
lret
and
push
mov
or
insl
imul
sarl
daa
mov
js
add
ds
into
nop
mov
and
js
mov
in
inc
sti
mov
adc
loop
mov
scas
cmp
mov
fstpl
add
int3
jp
test
js
shl
arpl
push
xchg
insl
mov
inc
movsl
jg
movsl
in
jo
jl
cltd
mov
mul
outsb
or
dec
jl
inc
ss
test
pop
mov
xchg
sahf
xorb
mov
fcoml
cmp
push
push
xor
inc
mov
xchg
iret
sbb
push
shll
imul
mov
push
or
loop
xchg
xor
mov
fnstsw
inc
out
push
lret
push
outsl
loopne
loope
stos
iret
jo
mov
or
enter
cmp
mov
add
dec
mov
ret
shll
cld
cld
pop
fwait
xchg
push
popa
mov
icebp
mov
mov
jnp
test
leave
inc
pop
subl
mov
test
out
cmp
lods
ret
sub
insl
cwtl
lret
mov
movsb
in
jbe
push
or
jl
mov
call
xchg
inc
xchg
mov
lret
push
xchg
xor
and
je
cmp
inc
inc
int3
shl
fisubl
clc
rorl
mov
rcl
aaa
into
cmc
aaa
xchg
rclb
jnp
mov
aaa
int
shlb
cmp
in
and
popa
int3
cwtl
push
sub
adc
xchg
shll
xchg
test
jp
lret
cmp
sub
ljmp
mov
rolb
xchg
leave
sub
dec
jo
fistpl
mov
pop
mov
inc
cmp
adc
cmpsl
xchg
ss
cwtl
fsubl
lods
cld
xor
add
clc
mov
pusha
sbb
arpl
or
push
sbb
test
xchg
imulb
cmp
lcall
test
dec
out
mov
js
or
ret
cmp
enter
rcl
ljmp
icebp
imul
into
xor
out
cli
add
xchg
or
cmp
out
sub
lcall
mov
sub
mov
cmp
sbb
icebp
cmp
and
cmp
push
xchg
xorb
ret
jp
shrl
loopne
and
fstps
inc
mov
ret
fbstp
out
add
lods
ret
push
mov
fld
test
mov
insl
into
push
cmp
jae
ret
enter
xor
gs
std
jo
push
xchg
in
inc
sbb
movsb
in
xchg
mov
push
xor
mov
cmpsb
sbb
out
xor
lcall
sub
xor
popa
push
inc
movsb
mov
ljmp
in
cmp
dec
add
inc
sub
movsl
in
jmp
rcr
popa
and
sbb
sbb
sub
fadds
ret
jle
adc
stos
mov
mov
jecxz
mov
movsl
enter
jl
inc
fcmove
iret
arpl
push
push
js
cmpsl
icebp
aaa
punpckhbw
xor
les
js
dec
or
pop
sub
dec
pop
fisubl
lods
cmpl
add
cmp
xor
shl
sti
jl
inc
popf
mov
adc
push
movsl
push
jo
adc
in
push
shll
mov
and
sbb
pop
pop
cmp
jmp
sbb
iret
mov
sbb
fdivrs
cli
push
mov
rclb
es
inc
notl
fsubl
mov
roll
loopne
out
aam
mov
lea
aad
clc
in
or
and
out
xorb
sarl
jnp
and
xchg
les
movsl
mov
js
data16
test
pop
dec
xorb
repz
out
xchg
xchg
sahf
mov
add
stos
and
decb
cmc
sbbl
shlb
arpl
stc
mov
test
fidivl
mov
mov
jge
inc
in
cmp
mov
sbb
add
fsubl
scas
adc
insl
adc
mov
mov
push
test
popa
jle
mov
mov
mov
sub
fildl
movsl
cld
cmp
mov
movsl
mov
push
je
xchg
in
mov
mov
lahf
out
cmpsl
jecxz
xchg
addr16
push
aas
mov
and
mov
inc
inc
loope
imul
in
rep
push
inc
test
sub
out
inc
clc
mov
fsubs
pop
ljmp
mov
mov
repz
icebp
outsl
xor
jb
lret
and
mov
cwtl
imul
xchg
lods
lds
dec
test
xchg
push
mov
add
dec
fldl
jb
sahf
stos
pop
es
cmc
je
push
les
pusha
cmp
cmp
roll
push
add
mov
fs
pop
fisubrl
in
punpckhbw
or
sbb
jbe
rorb
or
mov
push
push
hlt
add
push
fcmovu
inc
sbb
jp
sti
mov
ret
ret
mov
mov
jecxz
popl
mov
mov
push
lret
gs
and
test
cmp
mov
movsl
test
mov
nop
adc
jecxz
or
sahf
inc
cli
jo
mov
mov
sti
mov
adc
movsl
fcoml
fxch
inc
jne
fwait
dec
ss
test
or
push
outsb
push
stos
xchg
scas
cmpl
mov
inc
ss
test
lcall
imul
sbb
xlat
test
and
insl
mov
ret
nop
xchg
sbb
outsl
push
sbb
test
shr
movlps
test
jl
mov
rorb
movsl
rolb
mov
ret
test
popa
xor
insb
jmp
std
int
rcrl
ret
jb
into
cmp
ss
outsb
inc
ljmp
dec
outsl
push
movsl
or
jl
adc
in
xor
inc
add
mov
outsl
arpl
pop
bound
push
jnp
addl
movsl
mov
iret
hlt
cmpsb
jns
insl
xor
or
xchg
xchg
or
jno
lret
mov
lcall
cltd
adc
negl
lea
push
xor
add
sub
lock
fdivrs
les
pop
sub
bswap
pop
into
ds
rorl
std
sbb
mov
mov
jae
dec
mov
insb
sahf
cmp
jnp
je
push
mov
movsl
dec
cmp
mov
adc
jbe
cmp
mov
ret
pop
int3
and
movsl
out
scas
aaa
xor
mov
into
push
std
fnsave
cmp
mov
mov
xor
in
hlt
sarl
push
insl
mov
mov
or
std
add
jmp
cmp
sbbb
in
enter
aaa
clc
push
sti
xor
inc
or
push
lret
xchg
push
mov
and
cli
mov
sub
fcompl
push
or
mov
stc
aam
movsl
pop
mov
clc
push
les
sbb
push
and
mov
pop
cmp
inc
xor
push
cmpsb
pop
ret
adc
xlat
sbb
mov
sub
push
jg
sti
pusha
dec
pop
les
addr16
sbb
mov
nop
pop
adc
test
cli
xchg
ret
mov
dec
mov
das
push
inc
adc
adc
mov
mov
gs
jle
jp
bound
jb
ljmp
lret
xchg
xchg
outsl
xor
cli
push
push
int3
in
inc
xorl
pop
cmc
add
addr16
mov
and
push
cwtl
stos
cwtl
popf
fisubl
in
hlt
cmpb
sub
jb
movsl
cmp
mov
fcompl
xor
daa
sti
xchg
sti
fdivrl
sbbb
fucomi
dec
add
xor
call
push
into
lea
adc
ja
flds
test
dec
icebp
jecxz
jo
pop
lcall
insl
scas
mov
mov
sbbl
shll
mov
js
cmp
xchg
test
shll
adc
imulb
and
xchg
lret
movsb
inc
push
bound
fistpl
add
sub
and
rorb
cli
out
adcb
nop
ud2
jb
xchg
sti
int3
xor
or
cld
lea
pop
addr16
mov
rclb
mov
pcmpeqw
aaa
xchg
ret
mov
sti
and
mov
enter
xchg
jge
in
mov
mov
fiadds
aas
movsb
or
cmpsl
movsl
xchg
mov
lcall
fdivrs
dec
test
mov
imul
cmp
sub
inc
rcr
ret
pop
into
iret
add
mov
pop
mov
mov
loopne
jo
jmp
push
out
mov
cli
sarb
loop
mov
mov
leave
mov
mov
inc
mov
sbb
rep
lock
pushf
xchg
outsb
fdiv
cmpsl
jae
test
cmp
xlat
mov
sbb
push
mulb
dec
in
repnz
movsl
xchg
ss
push
test
push
pushf
or
or
add
popa
stc
je
cwtl
mov
test
lcall
jb
push
mov
sbb
lock
push
aam
bound
xchg
pop
jno
ljmp
addr16
adc
testb
test
shr
or
jp
fld
mov
jp
aam
mov
imul
shll
xor
shll
arpl
outsb
shll
ror
xchg
mov
es
addr16
xchg
mov
adc
jg
inc
cmp
fisttpl
mov
lahf
sti
jge
xor
mov
push
popf
cli
lret
push
cmp
xor
cmp
push
sbb
pop
cmp
mov
or
xchg
xchg
lmsw
cmp
pop
das
xchg
xchg
int
out
jbe
push
sbb
scas
ret
xchg
clc
stc
test
in
sbb
or
mov
mov
into
fsub
push
dec
xchg
test
movsl
filds
cmpsl
ret
xchg
imul
iret
mov
divb
ret
popa
push
outsb
imul
and
cmp
cwtl
push
adc
fsubl
scas
iret
sub
adc
push
pop
bound
xor
add
icebp
das
dec
ja
xchg
and
mov
pop
dec
jno
fisubl
aam
jecxz
into
pusha
add
add
sbb
shlb
or
addr16
data16
mov
bound
mov
sbb
stos
sub
ret
adc
leavew
push
fmull
out
pop
shlw
mov
inc
jno
and
and
adc
rclb
orl
loope
or
sbb
ja
fdivrl
push
dec
out
cltd
popa
stos
adc
out
lret
lcall
xchg
lock
mov
stos
insl
sub
stos
ret
xchg
stos
mov
movsl
sub
jbe
xor
push
dec
scas
xchg
je
xchg
xchg
pusha
ret
aaa
dec
push
jb
jle
arpl
ret
jae
xor
pushf
xchg
lods
jecxz
add
bound
mov
jmp
add
add
jae
ret
inc
mov
pop
xchg
ret
inc
xor
cwtl
mov
ret
pop
jg
leave
loope
xchg
inc
in
push
lahf
icebp
in
loopne
dec
lret
xor
ret
dec
push
imulb
pop
sti
shrl
cmp
jmp
and
add
fbstp
or
pop
sbb
je
ret
sbb
lock
ret
lret
push
insl
mov
iret
cmpb
push
ret
adcl
jmp
call
lock
mov
cmp
in
loop
mov
out
divl
lds
sahf
aas
imul
popa
xor
push
out
test
adc
pop
ljmp
fwait
pop
imul
fs
ret
pop
sub
mov
mov
addr16
dec
sahf
ret
push
cmp
shlb
mov
ds
es
faddl
clc
add
mov
mov
sbb
mov
push
mov
xchg
lods
and
icebp
ret
std
cld
xchg
rol
cmc
or
mov
loopne
add
in
aaa
pop
push
and
xor
fsub
add
and
mov
push
inc
out
inc
mov
cmpsl
and
dec
jle
ret
fimull
lahf
aas
sub
dec
dec
cltd
pop
inc
pop
add
fstpl
fidivl
mov
dec
cmp
lods
popa
push
roll
xchg
or
stos
and
ds
fs
jnp
loopne
pushf
mov
mov
pop
mov
lds
and
push
cmpsb
xor
mov
or
cltd
mov
cmpsb
fmulp
or
stos
push
stos
scas
mov
pop
mov
ret
cmpsb
lods
enter
daa
pop
jne
movsb
jecxz
clc
or
xor
push
rcr
out
in
add
loope
pop
popf
stos
cli
lea
cmp
data16
hlt
sbb
jmp
xchg
gs
lret
inc
sub
cli
ljmp
xor
mov
jl
shl
inc
imulb
ret
sub
pop
push
aas
scas
cmp
inc
push
push
ret
jmp
ja
ret
adc
pop
mull
por
es
shrl
mov
aas
call
sub
je
daa
mov
nop
das
sub
cmp
or
dec
imul
push
jbe
icebp
jg
xor
sahf
test
ret
mov
dec
ret
pusha
mov
es
testb
add
dec
or
ret
lods
jle
loope
xchg
and
fstl
mov
ret
movsl
jae
push
mov
loope
aad
cli
cwtl
stos
push
lcall
sbb
aas
pop
cmp
jb
sub
les
mov
jae
adc
test
aad
lods
imul
adc
jmp
icebp
sbb
gs
or
adc
add
ret
and
sti
lret
pop
adcl
and
sub
mov
shl
out
ret
pusha
rcrl
fidivl
jmp
xor
pop
test
ret
pushf
add
sbb
sub
loop
push
mov
stc
test
aam
ret
push
mov
ret
xor
loope
nop
inc
xchg
bound
dec
cwtl
cmp
lock
roll
dec
in
imul
fnstsw
mov
dec
jg
fcoml
rol
jo
cs
fimull
andb
into
push
adc
pop
fistl
inc
notl
and
daa
push
in
test
inc
sub
mov
inc
rclb
ret
out
push
cmc
xor
scas
iret
sti
mov
sbb
stos
ret
mov
ret
adc
out
loopne
mov
popf
lcall
push
jle
ret
adc
xor
gs
mov
push
repnz
cmpsb
daa
inc
retw
popa
es
and
imul
stc
pushf
mov
daa
inc
bound
push
fstps
jl
fcom
ret
xchg
and
test
ret
cmp
pushf
push
mov
adc
cmp
call
mov
push
ret
js
insl
jb
stos
ret
leave
inc
jbe
push
mov
ret
ret
push
dec
dec
daa
orb
subb
push
adc
inc
stos
jp
negb
sbb
cmp
lret
retw
sub
nop
ret
xchg
cmp
cs
out
pop
mov
lods
les
daa
pop
inc
xchg
add
ja
cmp
subb
sbb
mov
data16
stos
pop
xor
jbe
xor
mov
cmpsb
pusha
cmpl
cmp
mov
inc
mov
mov
sub
fdiv
enter
ret
jmp
out
xor
mov
lret
icebp
xchg
stos
push
and
adc
outsb
push
cmpsl
into
test
mov
sbb
lret
bound
mov
pop
mov
cmpsb
jl
bound
mov
or
xchg
daa
ret
xlat
repz
test
cmp
ret
lret
mov
mov
cmpsl
or
in
mov
lret
out
add
dec
mov
out
test
call
testb
cmp
sarb
addr16
push
outsb
adc
repnz
mov
getsec
int
in
push
jle
das
sbb
cmpsb
cltd
sub
test
add
lods
mov
lahf
ret
stos
jmp
mov
mov
mov
or
mov
divl
shlb
cltd
mov
loope
sub
shlb
ret
mov
or
dec
push
loope
orl
cmp
std
ret
add
test
pop
mov
mov
ret
cmp
out
lea
je
fwait
add
cmc
mov
inc
int
iret
and
ja
rcrl
insb
test
movsb
fadd
outsl
cs
sbb
xchg
or
ret
jae
xor
mov
ret
mov
jno
loope
ret
aad
push
or
pusha
andl
sbbb
testb
mov
outsl
adc
push
pop
ret
jle
mov
push
ret
outsb
push
adc
lcall
mov
and
and
adc
inc
testl
cmpl
pop
jp
add
insl
mov
xchg
or
mov
dec
push
ret
sahf
and
inc
imul
rol
loope
push
pop
lea
shlb
sbb
stc
enter
xchg
das
xlat
inc
push
jo
lret
testb
adc
insb
loopne
mov
push
addr16
mov
loopne
daa
js
mov
movsl
ret
sub
inc
out
aas
ret
xor
cwtl
imul
push
sub
insl
leave
push
das
mov
mov
add
adc
sub
ds
jmp
add
dec
sahf
xor
lcall
cmp
xor
mov
pop
test
std
stos
fs
xrelease
inc
ja
or
push
mov
jno
shr
ret
stc
clc
lret
add
and
jo
in
ret
je
push
sub
icebp
inc
fcmovne
loopne
out
daa
xchg
ret
jmp
scas
ret
repz
aam
mov
decl
and
mov
or
dec
sti
int3
dec
jne
pop
jp
push
insb
dec
out
adc
ret
repnz
add
adc
pop
lahf
sbb
sbb
insl
pop
adc
aam
js
dec
jp
stos
popf
imul
mov
mov
mov
sbb
in
lods
push
mov
inc
mov
stc
movsl
pop
xlat
ret
cmpsl
mov
inc
push
lock
mov
cmp
out
pop
cmpl
xor
in
data16
or
mov
mov
stc
push
nop
cmp
add
loop
push
imul
sti
sbb
loope
bound
xor
inc
cmpl
or
cwtl
mov
shl
ret
push
out
stos
mov
sub
repnz
call
repz
mov
xor
push
scas
lds
xor
jg
ret
ljmp
jne
adc
popf
cmp
mov
cmp
ffreep
or
xlat
sar
sub
or
sarl
ss
fstl
mov
and
movsb
enter
lcall
shll
adc
push
ret
jle
push
inc
mov
cld
subb
and
cmp
or
inc
jp
je
ret
pop
pop
mov
pop
jecxz
jne
lcall
xor
jbe
and
sub
jmp
or
popa
test
ret
std
push
sub
and
ret
sub
add
and
ret
xchg
loope
jnp
lods
xlat
mov
xor
sub
xchg
xor
fdivrl
pusha
lds
out
pusha
cli
pop
push
xchg
or
add
fwait
xlat
lods
movsl
sub
add
jmp
and
clc
pusha
lcall
mov
popa
mov
inc
out
lahf
leave
mov
xor
or
sub
add
add
cmpsl
and
stc
faddl
mov
and
dec
jg
hlt
outsl
push
out
subb
mov
adc
insb
cmc
lretw
ret
adc
jbe
scas
jns
cmpsl
leave
mov
cmpsb
add
push
fsts
jae
mov
sbb
dec
dec
mov
xor
push
cmp
jmp
sub
aas
cmp
loop
dec
mov
sti
mov
or
mov
push
dec
cmovs
cmp
inc
jecxz
jb
insb
mov
cwtl
test
int
mov
add
mov
nop
cmp
jecxz
push
jp
ret
fdivp
sbb
mov
into
and
jecxz
dec
push
mov
sbb
mov
or
insl
cltd
cmp
fildl
movsl
adc
aad
adc
jb
scas
lret
xor
stos
mov
push
enter
sub
add
movsl
push
push
inc
pop
dec
loope
js
loope
mov
adc
xorb
popf
outsl
adc
add
sbb
ljmp
push
imul
mov
scas
add
test
jns
mov
scas
dec
mov
inc
jb,pt
movsl
add
sbb
sbb
lret
pop
or
ret
push
mov
test
dec
iret
push
mov
loopne
xlat
and
andl
scas
fcoms
mov
mov
adc
sub
movsl
xor
xorb
sbb
and
add
int3
or
ds
jle
mov
inc
pop
stos
enter
sbb
inc
sub
dec
std
xchg
jns
popl
shll
inc
lahf
pop
cli
inc
inc
mov
rcl
jmp
js
movsl
nop
or
push
inc
push
push
in
mov
into
fcoml
or
push
pop
or
add
stos
inc
test
out
nop
addr16
insb
adc
mov
xchg
loope
dec
mov
shlb
mov
sbb
sbb
mov
movsl
inc
ljmp
mov
clc
jno
cmpsb
jl
outsl
das
fxch
push
sbb
cli
pusha
dec
add
push
nop
repz
push
mov
sbb
rcl
jnp
lcall
xor
inc
in
mov
fcomps
mov
adc
imul
ds
mov
jo
xlat
ja
popa
mov
jmp
mov
pop
mov
js
inc
or
pop
and
inc
xor
jp
into
inc
mov
leave
lcall
jne
mov
std
mov
scas
imul
mov
jo
daa
bound
das
xchg
or
adc
loopne
xor
stos
cmp
adc
xor
dec
push
or
xchg
cs
xor
mov
inc
push
sti
xor
cmc
mov
pop
enter
mov
int3
cmp
js
clc
and
mov
xor
jg
les
xor
mov
lock
outsl
mov
xchg
xchg
fdiv
scas
ss
xchg
mov
xor
sub
subb
jns
mov
jns
dec
jbe
sti
lret
mov
mov
aad
add
shrl
add
sub
addr16
sbb
int3
mov
rorb
mov
or
loope
sub
adc
fisttpll
mov
ret
xor
adc
dec
dec
sbb
cltd
and
ss
pop
enter
xchg
lds
or
inc
dec
mov
dec
mov
mov
sbb
pushf
mov
js
fbld
lea
jmp
shll
mov
inc
and
mov
push
xchg
pop
adc
lcall
fistl
adc
mov
mov
leave
mov
mov
inc
inc
test
push
test
mov
mov
iret
cmp
mov
xor
cld
and
test
stos
mov
dec
loopne
pop
mov
in
cmp
push
rolb
inc
das
fsubl
mov
ljmp
mov
add
insl
lds
sti
mov
lods
push
lods
test
enter
mov
cmp
dec
adc
cmpsl
cmc
mov
fstl
cmp
and
js
movsb
loop
jmp
aad
outsb
mov
sub
dec
js
dec
mov
cmp
call
movsl
lret
pusha
fcomip
jae
in
mov
or
aas
and
xor
sti
push
push
xchg
fidivl
inc
aad
movsl
dec
inc
fistps
sbb
cli
out
outsl
and
lds
mov
inc
adc
lods
push
ret
xor
adcb
pop
and
lahf
dec
int3
inc
push
lods
push
outsl
xchg
mov
mov
stc
movsl
pushf
add
or
inc
mov
add
mov
dec
inc
call
inc
sbb
repz
mov
mov
adc
mov
iret
ss
imul
sahf
inc
mulb
mov
shll
xor
cli
int
push
daa
or
sbb
cli
shr
cmc
ja
sbb
ficoml
cmp
mov
jmp
js
imul
dec
shlb
jne
add
mov
push
fnstsw
aam
jmp
push
loope
inc
cmp
mov
xchg
add
lret
fcomi
out
pop
test
repz
pop
int
mov
data16
sbb
shrd
inc
sbb
mov
in
pop
push
sub
pop
mov
jmp
sub
cmpsl
stos
aas
inc
stos
jb
mov
and
jnp
stos
or
mov
mov
lods
xor
jl
pop
mov
mov
inc
test
inc
add
sub
shl
std
push
jnp
fwait
addl
ret
pop
xor
push
cmpsb
fdivs
and
sbb
jo
andl
push
stos
jbe
outsb
sub
add
mov
ret
sbb
mov
or
lds
adc
mov
faddl
cmp
fadds
movsb
test
addr16
xorb
imul
cmp
adc
jl
stc
stos
add
or
push
xchg
or
add
clc
mov
je
mov
mov
cmp
push
test
std
inc
xor
jo
jecxz
push
sub
fisttpl
jnp
jno
mov
jge
bound
sbb
in
or
nop
inc
mov
sbb
push
cmp
outsb
mov
jnp
icebp
mov
sub
test
dec
in
inc
push
mov
testl
sub
scas
aas
and
or
fwait
sbb
pop
mov
jmp
fmul
xchg
test
insb
add
andl
pushf
mov
stos
cmp
xchg
ja
jae
add
jnp
cmc
lret
sub
lods
rolb
dec
push
pop
pushf
loopne
jge
adc
rorl
mov
mov
push
decb
loopne
cmp
js
icebp
add
xchg
inc
adc
inc
mov
sbb
mov
push
adc
dec
int
testb
sbb
add
scas
inc
pop
xchg
cmp
test
stos
xor
iret
cld
subb
ficoml
push
add
xor
sti
xchg
pop
pop
fnsave
mov
xorb
icebp
out
jb
xor
xor
mov
mov
mov
xor
sbb
mov
or
mov
mov
mov
dec
into
xor
jne
inc
sarl
in
pop
or
pop
leave
jp
pop
mov
cli
clc
dec
js
sbb
sti
sbb
inc
aas
dec
push
push
int3
sub
jns
stc
icebp
jmp
jo
add
mov
mov
rcll
out
js
scas
mov
or
into
loopne
out
jp
jmp
in
iretw
jbe
insb
sahf
fidivl
sbb
mov
inc
xor
arpl
test
jno
cmp
ret
xchg
movsl
add
mov
cmpsl
addr16
lcall
mov
cs
cmove
aaa
add
mov
mov
dec
jnp
mov
iret
outsb
int
pop
lret
movsl
enter
test
out
loope
outsl
fisttps
mov
push
xchg
ret
adc
subl
cmp
inc
lock
and
add
mov
pop
mov
cmp
or
cmpsb
int
fst
push
and
ss
in
and
lret
pop
dec
mov
sub
inc
add
xor
xor
jge
fisttps
fst
mov
std
lret
ret
pop
addb
in
sub
and
out
sbb
cmp
mov
stos
mov
scas
mov
mov
movsb
adc
sbb
dec
mov
fwait
mov
push
mov
gs
pusha
dec
movsb
aad
inc
or
pop
enter
sbb
or
int3
mov
xchg
jbe
jb
mov
lret
pop
shl
cmp
bound
fidivrl
loope
mov
jns
inc
sbb
mov
push
or
fwait
in
cmp
mov
sbb
enter
loope
jne
mov
popa
pop
jl
cmp
jns
adc
mov
sarb
sti
mov
jbe
pop
sub
mov
pop
in
push
data16
dec
cwtl
or
insb
jecxz
xchg
push
scas
xor
or
mov
mov
nop
dec
fsub
outsl
mov
sbb
mov
cli
gs
mov
mov
push
jno
fmull
in
bswap
addl
push
les
pop
fcoml
test
jb
pop
push
mov
shll
mov
mov
jp
cld
mov
xor
clc
mov
lock
std
addr16
aam
jecxz
jns
mov
and
push
movsb
jecxz
adc
fistpll
adc
jnp
cli
xor
cmpsl
sbb
xchg
cld
in
loopne
leave
fidivs
pop
rcr
sub
push
mov
lahf
xchg
mov
pusha
xchg
jo
sbb
push
subl
mov
jg
mov
stos
inc
cld
adc
jle
sbb
scas
adc
inc
jns
mulb
outsl
push
pop
popf
ret
mov
decb
push
pop
aad
add
jne
movsb
pop
push
or
cmpsl
mov
in
cld
loope
xchg
popa
cmp
aaa
arpl
xchg
outsl
xor
push
mov
pop
ds
sahf
adc
pop
mov
int
cmp
test
and
out
push
push
ja
je
and
mov
fistpl
out
lret
jnp
add
jecxz
psubusb
subb
jo
and
xor
adc
in
dec
inc
out
ficoml
sub
dec
and
mov
mov
dec
pop
fstl
lea
adc
jo
mov
mov
and
jnp
sbb
fstl
popf
mov
jmp
jmp
mov
test
mov
mov
les
inc
dec
xor
cld
sub
movsl
clc
push
ss
cmp
ja
jle
lods
test
xchg
out
in
stos
sub
mov
rclb
sub
loope
mov
out
xchg
add
dec
jne
dec
les
bound
lods
cmp
mov
lds
xchg
add
lock
stos
std
adc
lods
cmp
in
les
sub
xor
lahf
mov
jbe
test
jo
sti
inc
lcall
fiaddl
js
inc
mov
bound
fisubrs
pop
fiaddl
cmp
inc
mov
sbb
dec
movsl
jo
jns
and
fcomi
push
and
icebp
cwtl
push
out
xchg
sbb
test
aaa
aas
seta
or
in
std
sbbb
adc
addr16
cmp
jae
mov
add
xchg
sub
sbb
lods
sbb
pusha
xchg
push
dec
mov
sarb
lret
xchg
out
les
mov
mov
fs
mov
ja
sub
inc
outsb
loope
xchg
in
push
insb
jae
nop
jge
jo
mov
sti
loop
stc
sbb
dec
mov
fwait
push
push
in
jmp
ljmp
push
and
shrb
arpl
jmp
mov
add
mov
mov
popf
mov
mov
jae
inc
mov
dec
fwait
jb
movsl
push
insl
cmp
and
cmp
adc
insl
lods
test
dec
cltd
push
js
lock
sub
movsl
fmull
addr16
inc
push
or
or
mov
jo
into
mov
mov
in
fcmovbe
mov
test
adc
jbe
pop
test
mov
sbb
scas
addr16
nop
testb
or
decb
push
mov
fisubl
std
xor
lods
dec
fisubrl
test
xor
mov
sub
into
fdivr
lods
fcoms
sub
mov
icebp
sahf
inc
incb
repz
mov
popf
mov
and
mov
pop
inc
mov
sbb
sahf
lods
mov
imul
fcmovb
pop
push
fidivrl
scas
mov
mov
mov
cmpsb
sbb
js
mov
mov
mov
in
mov
subb
sub
xor
sub
mov
int3
xchg
sarl
cmp
je
cwtl
cs
mov
xchg
adc
mov
dec
and
shlb
dec
shll
mov
inc
sar
mov
test
rcll
imulb
dec
mov
xor
movsl
cmp
outsb
ja
std
jb
outsb
add
lods
mov
cmovp
or
leave
addl
popa
push
sub
lcall
scas
outsb
mov
jecxz
jecxz
jle
mov
rorb
movsb
emms
or
mov
clc
inc
gs
add
add
outsl
pop
loope
mov
ljmp
cmp
sub
pop
sub
hlt
hlt
bswap
and
xor
sub
sub
outsb
jo
jnp
insl
popf
dec
mov
inc
psrlq
xchg
cmp
mov
cmp
dec
inc
movsl
sub
xchg
psrlq
mov
jge
jp
jo
addl
adc
inc
jge
mov
mov
inc
aam
insl
jle
mov
push
leave
mov
je
cmp
aam
icebp
and
insb
mov
xor
rolb
xchg
shrl
sbb
mov
in
lcall
xchg
xchg
mov
sbb
frstor
aaa
xchg
xor
jns
popa
add
stos
add
movsl
fsubrl
adc
out
lods
aas
dec
dec
into
test
push
out
sbb
xchg
fmul
mov
mov
mov
or
sub
loopne
pop
mov
xor
stos
xchg
aam
jl
call
fisubs
dec
insl
inc
test
aas
movsl
xor
mov
inc
orb
jo
push
cld
fimull
cmp
mov
mov
sbb
jl
outsl
hlt
nop
ljmp
mov
mov
and
ss
cmpsb
dec
cltd
in
movb
out
sbb
xlat
lods
cmp
out
hlt
insb
xchg
inc
fimull
lods
mov
jl
daa
dec
outsb
and
sbb
xor
jp
insl
pop
cwtl
movsb
inc
fidivl
ffree
stc
clc
inc
addr16
mov
xchg
scas
adc
inc
jns
cmc
xchg
in
dec
jle
cwtl
popa
sbb
sub
adc
mov
cmp
imul
xchg
movsl
mov
xchg
jne
test
fisubrs
mov
into
popa
mull
punpckldq
or
sbb
into
cmpsb
pop
arpl
mov
and
or
xchg
insl
inc
jnp
mov
popa
enter
mov
mov
xor
cmp
out
xlat
test
in
push
xor
rclb
mov
inc
xchg
xchg
inc
aad
lds
sarb
jo
jmp
pop
orb
xchg
xorb
inc
sbb
repz
test
or
pop
sub
jecxz
xchg
cltd
into
ds
in
adc
mov
pushf
int3
jl
into
outsb
or
xchg
push
repnz
lock
mov
stos
pop
push
test
gs
shlb
jnp
push
pop
roll
and
sbb
add
pop
daa
stos
xor
mov
adcb
cld
test
mov
out
bound
mull
mov
daa
cmp
mov
mov
mov
push
cmp
jnp
ja
adc
fwait
mov
aas
sbb
adc
mov
daa
out
roll
jnp
jns,pn
fsub
cmp
jge
std
out
sbb
or
shrl
sub
mov
imul
mov
stos
test
les
xchg
jns
in
pop
jnp
pop
add
call
push
mov
sahf
arpl
aad
cmc
xchg
int
cmp
les
in
dec
jae
stc
xchg
mov
adc
into
outsl
cltd
insb
enter
ficomps
push
movl
sbb
lcall
shl
sbb
push
les
mov
lahf
push
jg
lret
lahf
mov
cmp
ljmp
mov
dec
xor
int3
and
cmpsl
movsb
adc
inc
or
ja
addr16
idivb
movsl
cli
shrl
push
fcoml
mov
pop
bound
lret
mov
lds
mov
or
rolb
scas
int3
add
test
pop
test
cmp
insb
inc
push
sub
dec
and
inc
movsl
jl
daa
loop
out
sub
fwait
outsl
sbb
jl
ret
jmp
push
pop
repnz
repnz
repnz
inc
xor
mov
addr16
xlat
push
xlat
push
pop
inc
cmp
inc
iret
shll
out
sub
int
sbb
adc
jle
sti
xor
mov
cmp
xor
inc
jae
jnp
fsubl
push
or
mov
xchg
jne
mov
pop
pop
sbb
mov
test
mov
jmp
test
cs
jbe
and
push
cmp
mov
movsl
fisttpl
or
movsl
and
addr16
jb
into
mov
xor
ret
roll
push
xchg
cmpl
mov
pop
rorb
or
insl
outsb
stos
mov
jecxz
in
xchg
xlat
and
or
sub
pop
inc
insl
xor
pop
out
out
scas
dec
push
jp
stos
jne
mull
clc
mov
fidivs
dec
cli
pop
aam
scas
pop
mov
cwtl
movsl
adc
jp
leave
test
sbb
sbb
xchg
aaa
jne
inc
cmpsl
popf
jno
cli
mov
out
loop
mov
popa
mov
arpl
push
adc
mov
sub
xchg
mov
mov
mov
movsl
push
outsb
mov
mov
cwtl
jae
pop
sbb
dec
std
pop
or
lea
daa
adc
insb
jno
std
cltd
cmp
push
mov
mov
mov
andb
mov
cmp
adc
aam
adc
daa
add
jmp
jge
cld
in
rcrb
mov
jno
call
adc
mov
pop
shl
aaa
popa
test
sub
inc
aad
loopne
xor
shl
ljmp
mov
mov
fisttpll
mov
movsb
js
cmp
ret
mov
dec
inc
add
mov
into
cwtl
aas
pusha
cs
into
and
les
lods
dec
sbb
lea
add
lods
outsl
mov
add
xchg
sbb
mov
mov
jge
outsb
lods
mov
jecxz
sub
fldt
mov
fldpi
cmp
pop
lcall
out
mov
out
inc
lods
dec
xchg
imul
cli
push
std
xchg
xchg
cmp
mov
xor
cs
push
adc
push
fstl
test
mov
fwait
sub
or
aaa
repnz
jp
movsl
insl
or
test
rcrl
ss
mov
imul
movsl
ja
cmp
in
cld
jbe
inc
mov
or
rcll
adc
int3
pop
and
cmp
sub
pusha
cltd
add
and
nop
dec
repnz
cltd
pop
lods
in
fnstsw
cmp
pop
shlb
std
mov
mov
sub
adc
ss
mov
lahf
in
and
sub
popa
lret
sub
leave
mov
decb
or
push
mov
roll
outsb
aaa
add
mov
shll
rolb
loopne
dec
sbb
sbb
int3
push
cmp
cmpb
xor
jecxz
mov
mov
gs
mov
mov
ficompl
in
jmp
mov
imul
mov
mov
jecxz
in
fistpll
xchg
ja
loop
mov
jb
std
test
cmp
xor
mov
lods
in
test
fcom
lods
sub
shlb
cltd
xlat
aas
or
sbb
cmp
push
and
rcr
dec
cmpsb
movsb
pop
icebp
fldl
sbb
cwtl
cli
popf
dec
add
ret
fimull
inc
into
movsb
push
fxch
ljmp
sub
mov
filds
mov
hlt
mov
fimuls
mov
push
nop
daa
outsl
xchg
repz
mov
lret
cs
inc
or
into
mov
pop
xor
xor
inc
mov
pop
scas
mov
jnp
mov
test
cmp
call
fldt
sahf
lret
shlb
fnstcw
push
lds
jp
repnz
mov
add
push
fdivrs
jl
mov
out
push
imul
mov
sub
push
mov
sub
xchg
inc
or
out
fs
adcb
inc
adc
sbb
lahf
lret
fstpt
xchg
inc
cmc
push
cmp
sbb
cld
xor
dec
mov
int3
xor
js
sti
pop
les
xor
mov
pop
mov
andl
mov
mov
mov
push
in
in
out
scas
sub
pushf
mov
xor
or
dec
mov
aam
mov
push
jb
mov
mov
adc
xchg
add
mov
jo
mov
or
add
mov
jg
push
mov
leave
mov
test
mov
jb
loopne
adc
lret
pop
add
rep
ret
movsl
call
push
insl
jo
sbb
or
add
cmp
iret
mulb
push
adc
mov
cmp
lea
push
mov
test
cld
movsl
dec
push
subb
out
adcl
and
mov
rcr
jo
movsl
stos
mov
lret
bound
mov
xor
mov
shll
andb
fisubrl
and
xor
ja
cmp
in
scas
out
setns
sbb
xor
mov
sbb
mov
cmp
fs
xchg
jo
fs
aas
cmp
dec
sbb
add
or
pushf
and
loope
mov
cmp
repnz
std
push
jns
mov
ret
icebp
inc
outsl
jae
push
clc
cmp
mov
mov
jno
fnsave
sub
cwtl
sbb
mov
addr16
fs
pop
addb
repz
xchg
push
lcall
xor
or
or
mov
dec
pop
xchg
cmp
arpl
fcmovu
pushf
ss
jne
movsb
dec
test
das
addb
or
repnz
addb
inc
inc
movsl
push
mov
mov
xchg
adcl
dec
inc
fsubs
pop
out
push
aad
mov
mov
ret
and
scas
add
dec
shrl
cltd
sub
int3
and
cmp
out
dec
mov
jne
mov
test
insb
cmpb
into
out
jbe
mov
cwtl
pop
adc
and
push
out
push
adc
dec
addr16
cmp
sbb
and
ss
cli
rcrb
ret
mov
push
repz
xchg
test
movsl
orb
out
push
mov
int
jmp
dec
push
les
push
sarb
mov
std
push
stos
int3
out
jb
sbb
pop
sbb
jle
and
lret
pop
mov
jo
add
or
dec
das
out
rcl
add
or
xchg
cmp
adc
adc
pushf
jmp
pusha
stos
loopw,pn
add
adc
out
jp
arpl
sub
stos
push
inc
dec
cs
out
jecxz
dec
inc
movsl
int
dec
stos
out
adc
scas
inc
push
popa
stc
xor
mov
test
loop
rcrb
gs
mov
mov
aas
push
mov
fsubs
and
xor
sub
inc
into
in
and
add
mov
dec
nop
ds
jne
inc
add
sti
push
add
out
outsl
js
mov
addb
dec
movsl
sti
negb
in
mov
push
fstpl
in
jae
dec
lods
xchg
xchg
sub
mov
xor
daa
cmp
lods
sbb
mulb
jae
cmp
imul
lret
clc
subb
jnp
setae
gs
test
mov
cltd
xchg
cmp
test
mov
jo
xchg
faddl
insb
inc
pusha
leave
imul
mov
in
cmp
in
lods
push
push
xor
movsl
sbb
add
cltd
aad
fstpt
pop
jl
fimull
mov
cmp
adc
adc
adc
xchg
gs
ret
movsl
xchg
sub
cmp
or
adc
inc
jae
sub
dec
mov
jae
notl
push
push
pop
sti
in
mov
in
mov
lcall
test
mulb
mov
popa
std
mov
clc
rclb
push
subb
pop
pop
cmp
and
pusha
in
pop
into
mov
sbb
ds
pop
or
ja
aam
sti
ja
push
push
lods
out
xchg
inc
or
mov
jns
mov
push
popf
shlb
out
movsl
cmp
or
out
mov
test
pusha
sbbb
imul
out
dec
xchg
fnstsw
popa
test
sahf
cmc
jns
mov
insb
ss
movl
or
sbb
rcr
and
sub
test
mov
pop
mov
movsl
inc
cmp
daa
cwtl
pop
test
xor
scas
xchg
and
mov
das
lods
mov
in
jp
jb
ret
push
mov
or
push
cmp
mov
pop
mov
xorb
inc
imul
mov
fs
and
mov
dec
cmpsl
or
addr16
mov
push
pushf
out
cld
and
adc
imul
rcr
fwait
push
jle
popa
cmp
mov
xchg
fistl
popa
inc
push
xlat
push
cli
inc
or
out
jle
mov
outsl
jbe
or
fisttpll
flds
push
not
jmp
imul
xor
or
imul
sub
jb
mov
fcompl
dec
ja
xor
mov
fwait
outsl
cltd
divb
pop
add
jno
and
jecxz
push
pusha
sbb
lret
inc
mov
mov
or
adc
pushf
ret
push
xchg
aaa
fabs
js
jno
aaa
jns
pavgw
or
inc
out
out
push
mov
xchg
leave
nop
aaa
inc
in
mov
pop
push
fisubrl
mov
and
sub
es
lods
loopne
cwtl
fstl
or
aas
jle
cld
js
and
xchg
add
ret
imul
jge
xor
rol
nop
inc
adc
orl
xor
clc
inc
dec
mov
pop
mov
cmpsl
xchg
insb
add
lock
call
mov
bound
jge
xor
cmp
sbb
cmp
stos
mov
scas
cmpl
or
push
dec
es
test
xchg
in
dec
push
add
fsts
adc
add
scas
or
mov
cmc
fidivl
stos
das
jo
xchg
cmpsb
mov
mov
xchg
cli
fmull
mov
xchg
ficompl
xchg
scas
insb
ret
jnp
shrb
push
add
fwait
add
jecxz
pop
insl
movsl
les
ljmp
cmp
rcrl
xlat
ret
cld
popf
push
mov
mov
sub
push
and
xchg
icebp
insb
das
or
pop
loopne
push
fnstsw
xor
add
xchg
inc
fucompp
std
jg
mov
push
jp
movsl
push
je
lods
mov
mov
stos
dec
les
movsl
repnz
pop
push
out
fwait
cmc
shll
test
add
or
push
inc
adc
cmpsb
or
mov
scas
mov
das
cltd
xchg
roll
mov
push
push
jns
mov
mov
ds
es
arpl
pop
arpl
nop
js
fucom
clc
les
push
mov
mov
pop
xor
fadds
xor
dec
adc
adc
inc
ret
xchg
adc
lcall
push
dec
jb
popl
mov
leave
xchg
jb
imul
push
mov
mov
push
insb
pop
xor
outsb
ja
sbb
adc
cmpsl
sub
cmp
xchg
stos
bsf
mov
bound
mov
pop
imul
out
or
sahf
add
ficoml
bound
cmc
cmpsl
or
add
jp
xchg
out
cmp
cwtl
xor
mov
cld
insl
push
cmc
cmp
es
mov
loope
flds
jns
inc
pop
mov
inc
fs
xor
and
movl
call
sbb
adc
add
pop
pushf
xchg
loopne
inc
mov
mov
ja
outsl
inc
popa
int
notb
fcmovu
popf
popf
cmc
lea
imul
mov
cmp
dec
mov
adc
xor
pushf
inc
push
aad
movsl
add
mov
scas
sbb
dec
and
push
outsb
lret
xchg
push
test
mov
sbb
bound
pop
int3
sbb
outsb
jecxz
xchg
sub
cmp
pop
into
cltd
dec
xor
cmp
loope
loop
or
cwtl
or
sub
popa
push
clc
push
sti
mov
ja
push
in
mov
xor
into
mov
arpl
mov
inc
pop
sahf
mov
cs
push
pushf
ret
add
push
or
out
mov
pop
mov
jo
push
mov
mov
dec
xchg
jo
xorb
mov
jo
sub
outsl
test
sub
sbb
ret
sub
mull
or
mov
mov
iret
adc
out
xorl
push
xor
gs
ret
js
add
cmp
mov
or
xchg
dec
mov
outsl
xor
push
push
ret
stos
cmp
mov
mov
mov
mov
mov
dec
int3
push
ja
mov
cs
push
mov
mov
and
xchg
out
xchg
push
push
jb
hlt
push
js
std
test
cmp
cltd
xchg
movsl
lds
mov
sahf
or
push
xchg
pop
aam
push
add
jecxz
scas
xchg
push
lods
pop
cwtl
out
jge
ja
ljmp
sub
push
and
movsl
cs
inc
dec
fists
push
in
dec
test
sbb
cmp
pop
pushf
or
psrld
pop
push
mov
es
xor
lret
push
and
test
jle
sub
mov
mov
mov
stos
sub
mov
stos
sbb
mov
fwait
push
cmpsl
jle
pop
call
mov
test
jb
sub
and
data16
push
dec
xor
mov
gs
jnp
rolb
pop
aaa
rcll
adc
xor
xchg
mov
fcomi
repz
pop
movsl
pop
push
lcall
nop
cmpsb
mov
int3
xor
mov
push
call
iret
jno
jo
mov
shrb
mov
xor
lods
add
jnp
setns
aad
jp
sub
inc
xchg
clc
jae
movsl
or
mov
sbb
mov
fcoms
dec
pop
les
inc
lahf
ret
dec
nop
popa
les
inc
push
sti
add
add
inc
sbb
aam
pop
sbb
add
xor
hlt
add
ficomps
test
ja
inc
mov
push
mov
inc
in
push
cld
mov
cmp
push
mov
sub
out
pop
testl
out
mov
mov
mov
push
mov
lcall
mov
mov
xchg
inc
xchg
test
ficompl
hlt
out
das
or
je
xchg
ret
test
js
push
xchg
imul
outsl
or
mov
int3
sub
sbb
pop
outsl
ss
xor
mov
sbb
pop
iret
pusha
xor
fcoml
out
pop
lret
mov
cmp
sub
outsb
iret
cli
push
cltd
ficoml
jae
out
push
stc
xchg
pop
jge
jb
mov
push
fwait
jbe
ret
stos
xchg
cmp
mov
popa
mov
repnz
test
int3
popa
mov
cli
pop
int3
dec
xchg
adc
xchg
push
pop
xor
fstpl
inc
loope
aas
lret
fdivrl
scas
jae
rcr
add
addb
pop
jo
xchg
ljmp
shll
push
jbe
aad
push
lods
fcompl
xchg
fdivrl
cltd
mov
fbstp
xchg
shrb
call
push
pop
xchg
sbb
pop
dec
ret
sub
dec
fsts
inc
mov
notl
aas
pop
rclb
sub
movsl
scas
jo
test
xchg
and
movsl
jnp
shl
jge
lea
xchg
inc
or
mov
mov
into
lods
dec
js
mov
pop
outsb
dec
test
cmp
ja
jo
cli
xor
jae
mov
pop
adc
movsb
pop
mov
mov
pop
bnd
loop
mov
fdivl
xor
xor
inc
jecxz
movsb
cmp
movsl
push
mov
popl
or
push
jecxz
mov
push
mov
or
fisttpl
je
test
fmull
ret
add
pop
movsl
mov
repz
or
xchg
sbb
test
sti
popa
fcoms
jmp
cmp
sahf
insl
outsb
aad
adc
push
lea
mov
jo
sbb
push
mov
fcom
daa
adc
hlt
ret
cmp
jne
push
dec
mov
divb
xchg
jne
sbb
in
mov
mov
dec
inc
dec
cs
scas
in
sub
in
pop
mov
sbb
test
push
or
jp
mov
cli
cmc
and
mov
jecxz
dec
repnz
hlt
push
jp
jmp
enter
or
daa
lods
lock
sub
cmp
inc
sti
jb
inc
test
add
pop
aaa
ficoml
mov
mov
popa
jg
and
and
mov
pop
ret
sahf
std
push
mov
int
movsl
clc
sahf
shlb
mov
es
push
ss
fs
fisubrl
shrb
lcall
mov
push
inc
adc
jo
dec
jnp
inc
jmp
cmp
jle
aas
jle
xchg
pop
inc
cli
adc
jecxz
js
sahf
dec
mov
fmul
lret
or
lods
jns
test
cmp
sub
sarl
add
out
xchg
mov
sub
je
test
cmpsl
pop
mov
movsb
cvtdq2ps
jns
mov
out
outsl
addl
aaa
sub
sbb
mov
je
sbb
cmp
jae
mov
sbb
or
push
dec
dec
pop
jl
mov
mov
pop
sbb
pop
lods
daa
cmp
out
bound
gs
jno
sub
call
in
std
inc
pop
push
mov
mov
mov
lret
push
adc
or
insl
scas
lock
jbe
gs
sbb
mov
test
cltd
inc
xor
bound
jbe
data16
mov
mov
cs
sub
sbb
es
pusha
movsl
repz
insl
dec
push
ja
cmp
mov
jge
ss
clc
push
jne
push
adc
mov
addr16
push
xchg
movsl
fbld
cmpb
push
mov
movsl
nop
subb
mov
fadds
add
orl
inc
and
dec
pop
dec
dec
fst
xchg
lret
pop
movsl
xchg
sub
sub
shll
adcl
out
stos
cmc
leave
faddl
insb
xor
and
sbb
sub
test
sub
rol
add
cmp
cmp
mov
mov
in
xor
and
xchg
outsb
ret
sub
inc
lcall
test
mov
js
loope
mov
inc
lea
loop
iret
xchg
mov
clc
adc
sbb
sti
dec
ret
jb
les
jnp
cmpsb
je
call
push
in
ja
push
add
xchg
sbb
mov
or
outsl
out
cmp
xor
mov
mov
adc
xor
jge
and
rolb
mov
xchg
inc
call
jbe
xor
sbb
dec
sbb
cmp
xchg
xor
outsb
movsl
and
pushf
dec
push
addb
loop
jnp
mov
std
xchg
fwait
cmp
paddusw
mov
rolb
cmp
xchg
adc
daa
sbb
lret
mov
inc
mov
cmpsb
jg
test
les
pusha
mov
fucomip
cs
mov
sub
jge
and
cmc
leave
loop
inc
xchg
mov
cld
add
popf
rol
movsl
mov
stos
loopne
bound
int3
pusha
dec
fwait
mov
xchg
push
mov
add
jmp
jae
dec
sub
shlb
pop
push
icebp
dec
lahf
xor
mov
xor
movsl
clc
mov
out
dec
lea
or
imul
adc
pop
jb
cli
movsl
outsl
jbe
jo
cmp
adc
cmp
pop
and
outsb
faddl
clc
and
cmp
mov
inc
mov
cli
test
test
idivl
loopne
mov
fs
jle
out
xchg
mov
dec
aaa
imul
fcmovne
sbb
movsb
bound
mov
fsubr
popf
jo
adc
mov
insb
stos
sbbb
mov
fmull
push
and
xchg
xor
roll
test
testb
adc
inc
xchg
push
pop
outsl
insb
add
adc
fstl
dec
daa
mov
mov
sub
movsl
push
into
xchg
or
push
andb
rolb
subl
mov
or
jnp
mov
inc
and
xchg
mov
push
pop
sub
jnp
or
inc
mov
ljmp
ds
test
adc
add
insl
movsl
fucom
bound
mov
mov
ljmp
stos
mov
pop
imul
test
ret
and
stos
or
mov
push
movsb
push
mov
pusha
xchg
daa
mov
test
mov
adc
pop
jecxz
sbb
popa
fs
adc
cmp
test
mov
xchg
and
cmc
adc
push
and
pop
inc
jbe
sbb
add
mov
icebp
and
adc
jg
sbb
or
and
test
stos
ret
mov
sbb
ret
inc
mov
jae
mov
cmp
fcoml
dec
add
sbb
fnstenv
pop
sbb
sub
in
pushf
leave
or
fsubl
add
dec
inc
test
sbb
pusha
mov
pusha
out
shr
fdivr
imul
and
filds
rcrb
inc
iret
jns
ficoml
xchg
pop
jmp
pop
dec
sub
int3
adcb
movsb
loop
mov
push
dec
jno
adc
add
cmp
cmpsb
popf
pop
cld
aad
and
jecxz
popf
in
mov
and
xchg
push
call
int3
sbb
js
imul
jno
insb
sbb
jne
sub
inc
movsl
scas
faddl
pop
ja
mov
shll
xor
movsl
into
or
push
pmaddwd
push
dec
mov
mov
xchg
xchg
add
fstp
stc
fwait
adc
mov
es
sti
outsl
mov
mov
adc
scas
ds
dec
jo
push
ret
stos
out
out
pop
hlt
movl
ret
inc
cmp
aaa
cwtl
jecxz
xor
mov
imul
pcmpgtd
negb
std
cmp
and
xor
pop
daa
rcrl
mov
jle
inc
test
testb
fnstenv
in
dec
inc
mov
jne
out
mov
js
pusha
jb
jmp
pop
rclb
into
stos
sub
push
pop
sbb
es
clc
scas
xor
iret
sbb
insb
js
push
push
fdivrl
imul
inc
mov
pop
into
lcall
sub
gs
push
jno
pop
jnp,pt
pusha
std
push
mov
idivb
dec
dec
adc
jg
je
test
or
js
sahf
xor
stc
cld
and
popa
sub
mov
sbb
rcrl
frstor
shlb
cmc
xchg
pop
addl
mov
dec
or
adc
inc
xchg
test
push
add
mov
mov
test
dec
movl
addl
mov
out
gs
inc
mov
mov
and
mov
jbe
jmp
adc
mov
decb
in
cmc
ss
les
test
xchg
aad
mov
or
inc
jnp
outsl
int3
xchg
push
imul
jle
jbe
mov
mov
iret
cmp
cltd
mov
lcall
cli
and
insl
jnp
push
imul
frstor
dec
pop
pop
nop
mov
loope
lret
ficoml
inc
ja
outsb
cmp
inc
jle
sub
dec
dec
shr
mov
rcr
or
lods
push
inc
or
iret
mov
jo
cmp
or
mov
mov
dec
mov
stos
es
cmc
in
cmp
lcall
test
fs
sahf
sbb
adc
pusha
push
mov
adc
pmulhw
inc
pop
pop
addb
incl
lret
sub
xchg
xchg
clc
push
mov
inc
sbb
jo
sub
repnz
and
push
fcomp
and
test
imul
je
add
push
push
sbb
scas
mov
das
fwait
cmp
or
jl
jns
mov
adc
push
divb
sbb
xor
xchg
jmp
adc
fwait
test
ficomps
mov
fs
sbb
add
xchg
add
mov
or
rclb
lods
fisubl
xchg
stc
sbb
jbe
pop
jne
cmp
in
or
push
or
sahf
popa
lea
sub
cmpsb
push
push
fwait
test
adc
inc
data16
mov
test
cld
sarb
pop
xor
gs
inc
test
pop
test
adc
movsl
jno
push
xchg
pop
mov
mov
test
sub
cmp
inc
mov
jae
jl
jae
fstpt
pop
rolb
mov
xor
xchg
rcr
addr16
and
lods
nop
mov
imul
gs
jno
cmp
lods
sbb
les
push
mov
adc
push
xchg
xchg
jge
frstor
adc
mov
mov
sbb
outsl
xor
sbb
mov
sbb
fcoms
stos
or
cmpb
in
xor
push
sti
sarl
cmp
pusha
pop
dec
in
pop
sarl
sbb
inc
outsb
std
push
into
mov
andl
scas
mov
js
push
xchg
int
push
add
push
xchg
shlb
pusha
test
cltd
add
inc
stos
andb
adc
popa
pusha
aad
testb
andb
movsl
sahf
jb
movsl
push
notb
inc
or
push
ds
test
roll
push
in
out
jge
mov
mov
mov
pop
cmp
mov
ret
mov
popa
jo
xchg
cmp
dec
cmp
test
out
mov
movsl
cld
clc
cmp
sbb
movsl
mov
cli
mov
pop
into
mov
mov
pusha
push
sub
xchg
adc
sub
push
stc
and
inc
xchg
popf
arpl
pushl
xor
fistps
movsb
fs
cli
mov
cltd
jmp
addl
xlat
pop
and
int3
and
mov
popa
push
int3
mov
dec
adc
sbb
pusha
mov
insb
xlat
and
scas
add
pminsw
roll
cmp
mov
mov
out
add
js
into
pushf
lret
adc
xor
inc
pop
icebp
cmc
daa
jg
push
fwait
aad
jne
shlb
inc
xor
jns
xchg
sbb
lea
dec
xchg
daa
mov
lods
fwait
xor
inc
xor
mov
outsb
xchg
jmp
popa
and
or
mov
push
mov
adc
aam
faddl
pop
sbbl
imul
xlat
add
aam
rclb
popa
rolb
pop
test
push
out
stos
scas
mov
jge
aas
sbb
sbb
addr16
dec
inc
mov
and
out
lods
ljmp
adc
xchg
ja
int3
mov
adc
faddl
inc
iret
pop
jnp
sbb
mov
cmovnp
pop
loopne
sub
inc
inc
test
leave
dec
mov
call
mov
arpl
cmp
loop
inc
inc
dec
dec
cmp
cmp
cmp
xchg
mov
ds
jns
add
pop
dec
and
jmp
xor
data16
mov
test
test
or
xchg
stc
notl
adcb
scas
or
movsl
shlb
xchg
dec
jle
pop
or
cmpsl
fidivl
inc
fsubrl
push
push
loop
push
lods
add
inc
out
xor
js
xor
mov
mov
cs
push
push
pop
xor
stos
pop
cli
addr16
adc
ret
les
pop
cltd
adc
cmp
mov
dec
out
popa
dec
jo
ss
inc
popf
in
push
pop
mov
pop
inc
fbld
dec
lea
popa
add
jmp
movsl
jp
popf
adc
sbbb
jae
xchg
mov
xor
jne
out
outsb
ljmp
adc
ljmp
lods
xchg
scas
xchg
mov
xor
icebp
push
lods
jae
movsl
idivl
jg
adc
test
sbb
out
mov
bound
inc
sub
in
lret
sub
dec
outsb
stc
xchg
xchg
cld
xor
add
pop
or
cmp
out
into
out
imul
xor
mov
mov
xchg
push
jo
sbb
test
jl
jne
cmpl
cmp
out
movsl
xor
fwait
popa
je
je
bound
mov
movsb
inc
inc
sbb
cld
les
sub
jbe
aaa
mov
sbb
mov
addr16
je
mov
xchg
movsb
test
push
aaa
rcrl
sahf
jb
movsl
mov
or
jmp
int3
fs
enter
inc
jne
lods
mov
ror
insb
ret
adc
add
cmp
roll
test
test
into
shrl
mov
cmp
xor
add
adc
mov
sub
push
adc
in
push
add
sbb
mov
mov
jle
adcl
push
inc
filds
lret
cmp
test
and
jg
in
in
ds
data16
imul
xor
mov
call
imul
cmove
mov
jns
sbb
mov
pusha
sbb
movsb
iret
ljmp
pushf
mov
cmc
fsubrl
scas
aam
dec
push
jmp
rclb
arpl
sbb
in
mov
pop
int3
ss
xchg
aas
jns
sub
add
out
test
xchg
int3
outsb
jb
sti
inc
or
cli
mov
addl
fsubrs
xchg
or
inc
lea
std
xor
dec
insb
xorl
push
xchg
mov
dec
std
je
jae
sti
test
add
adc
mov
jb
or
ficoml
aas
mov
mov
xor
push
lods
addr16
insb
mov
mov
test
and
mov
jo
rorl
dec
movsl
rcr
in
jb
inc
and
xlat
jae
inc
jl
and
pop
xchg
xchg
mov
inc
pop
aam
adc
movsl
in
xchg
and
rcrl
mov
test
sub
dec
ret
or
push
fdiv
stos
outsl
push
int3
add
xor
outsb
daa
mov
sti
andl
cs
or
jecxz
or
cwtl
or
xchg
lds
sub
in
je
mov
xchg
jl
mov
mov
fwait
test
mov
mov
les
cmp
jecxz
addr16
and
xchg
jo
in
shrl
cs
mov
adc
mov
fistpll
test
pusha
jnp
dec
fdivs
or
pushf
mov
pusha
xchg
cli
inc
outsl
outsb
lds
sbb
cmc
adc
xchg
pop
lahf
sub
mov
jge
or
adc
mov
cmp
jp
cmp
adc
mov
pop
add
std
jmp
push
sbb
jne
mov
or
popa
and
imul
sub
push
cmp
add
mov
or
xor
inc
sub
int3
jno
lcall
or
jge
mov
sub
pop
push
out
cs
sbb
adc
les
aad
loop
adc
and
loopne
and
jp
ja
inc
shlb
popf
dec
inc
movsl
fadds
inc
nop
addb
push
cltd
mov
lods
sub
into
in
lds
add
xor
inc
scas
bound
imul
or
cld
push
movl
or
mov
push
or
imul
fnstsw
movsb
dec
dec
adc
es
negl
push
cmp
fucomi
insw
add
stc
fnstenv
movsl
and
xor
mov
fimuls
rcll
or
lods
in
js
adc
inc
into
pop
inc
pop
rcrb
mov
sbbb
mov
pop
xchg
cmpsl
mov
cmp
pop
jno
pushf
mov
push
out
ret
inc
xor
and
dec
arpl
lds
sub
ret
rorb
dec
fcompl
outsl
nop
call
jno
aaa
xor
sub
jnp
repnz
push
xchg
xor
arpl
outsb
cmp
mov
inc
popf
xchg
or
outsb
cltd
push
iret
sub
test
movb
or
and
push
mov
add
mov
fsubs
adc
dec
mov
les
int
fdivl
pop
jae
mov
sbb
fimuls
push
popf
inc
add
mov
jbe
xchg
hlt
popa
shr
mov
cmp
sub
lds
push
scas
daa
mov
movl
inc
fisubl
mov
jl
test
mov
cltd
out
cmp
or
xchg
inc
mov
cmp
ret
add
outsb
add
out
mov
das
jmp
gs
cmp
insl
mov
loop
addb
mov
outsb
sbb
es
jbe
adc
out
flds
cltd
lea
adc
cld
add
sub
rcr
clc
cmp
sbb
out
pop
mov
adc
frstor
push
xor
or
push
pop
stos
test
rorl
mov
jmp
cmpb
and
xchg
leave
test
jp
jnp
popa
mov
pop
mov
jo
jb
fdivs
ja
iret
mov
test
jo
loopne
ret
or
mov
out
mov
inc
in
test
sbb
in
cmp
test
and
adc
mov
mov
sahf
jp
mov
int3
test
int3
pushf
jecxz
mov
cltd
or
mov
mov
fsubr
and
out
cltd
xlat
push
shlb
cli
jne
mov
dec
sbb
fs
cmpsb
loopne
fsubrs
lret
in
mov
clc
xor
aam
adc
mov
xor
adc
mov
mov
inc
imulb
mov
and
mov
push
dec
jp
test
ds
adc
pop
movsl
sub
clc
movsb
insb
jecxz
sub
xchg
xchg
jl
neg
sti
xchg
or
inc
ret
shlb
xlat
xor
mov
movsl
add
pop
int
xor
je
or
or
xchg
sarl
lods
imulb
mov
inc
mov
fistpll
leave
pop
inc
test
xor
lret
es
sbb
loope
cmp
xor
scas
ja
ret
outsl
scas
cs
lods
in
mov
lret
sub
push
pusha
test
idivb
pop
int
test
sbb
shrb
cmpsl
test
sbb
mov
adc
aas
rcrl
ffreep
mov
bound
jle
xor
faddl
fisttpl
lahf
pop
xchg
cmpl
inc
fs
and
push
inc
adc
in
push
push
push
into
pop
in
add
lcall
inc
dec
movsl
add
stc
mov
cmp
xchg
loop
out
outsb
dec
add
call
in
leave
movb
movsl
in
nop
leave
jb
outsl
jp
and
rol
jg,pt
adc
in
push
adc
push
aaa
push
cwtl
dec
fsubr
mov
jae
push
mov
add
push
pop
mov
sub
ret
mov
mov
jbe
xchg
clc
inc
adc
jp
sbb
int3
out
std
jmp
sbb
xor
pop
dec
js
sub
test
xchg
push
pop
mov
or
shlb
sbb
push
jo
js
test
or
inc
mov
pop
out
mov
or
or
or
cld
lcall
push
andb
inc
loopne
dec
fbstp
or
add
test
mov
sub
shr
add
mov
dec
fcomp
stos
push
jnp
pop
fildll
and
cli
push
pop
clc
das
sbb
mov
pop
inc
pop
loope
adcb
push
mov
inc
push
xchg
ror
insb
frstor
mov
add
scas
inc
sbb
movsl
push
cmp
lods
dec
jbe
sbb
lret
mov
jecxz
test
mulb
bnd
sub
pop
inc
fstl
sub
push
insb
inc
scas
out
mov
and
jno
pop
movsb
gs
inc
jle
scas
mov
sub
lea
inc
cld
push
mov
xchg
inc
mov
mov
nop
jnp
sbb
xchg
pusha
mov
lcall
dec
sbb
cmp
lret
add
subb
sti
adc
jne
cld
cmpxchg
gs
ret
or
pop
jns
xchg
mov
jmp
ret
mov
in
ret
push
je
add
cwtl
ret
cmpsl
ret
daa
pop
sbbl
inc
orl
andb
sub
xchg
and
jns
stos
jbe
dec
into
stos
xor
cwtl
fwait
jmp
push
adc
or
sbb
pop
ljmp
loopne
jno
and
or
es
add
pushf
scas
das
cmpsb
add
mov
add
test
out
add
scas
loope
pop
mov
orb
ss
cmovnp
pusha
js
mov
xor
mov
ret
xor
shlb
mov
in
lret
mov
fst
or
imul
fistpl
rcrl
ret
sti
push
nop
rol
inc
adc
fs
mov
mov
lcall
xchg
mov
dec
movl
jle
lods
popa
mov
fsubr
bound
sbb
out
hlt
dec
xchg
xor
pushf
cmp
pop
add
loope
popa
cmp
add
push
dec
jbe
xchg
imul
jne
mov
jno
sbb
and
ret
test
pop
fldcw
adc
ret
ret
stos
dec
sbb
ret
repz
ret
mov
hlt
lea
lss
insl
in
inc
pop
adc
ret
pop
ss
sbbb
push
sarl
or
dec
je
inc
lret
ret
add
xchg
rol
aam
sbb
sub
mov
pop
and
scas
mov
push
inc
pop
pop
loope
mov
sbb
dec
mulb
adc
cmpsb
das
pushf
bound
mov
lahf
mov
int
jo
sbb
gs
add
mov
mov
loop
xchg
aaa
cld
sub
add
insb
or
aad
adcb
mov
loope
cld
and
push
jnp
fldt
ret
jo
xor
loopne
and
push
leave
push
imul
ret
sub
push
pop
nop
ret
imul
fistl
xchg
lods
enter
add
int
es
push
orb
lcall
dec
dec
ret
jle
xor
ret
test
loope
lcall
pop
clc
push
ds
dec
jp
sbb
fdivrp
sub
mov
and
out
xlat
mov
push
and
cmc
ret
xor
aaa
cwtl
push
pop
dec
jnp
cmp
cltd
adc
stc
or
and
mov
mov
js
fldenv
ret
insb
jbe
xlat
lock
inc
adc
inc
mov
stos
rolb
mov
ss
mov
and
lahf
outsl
shll
push
popa
es
je
mov
adc
fnstcw
test
mov
xor
mov
cltd
add
mov
mov
fstpl
dec
xchg
ret
mov
adc
repnz
push
mov
aas
int3
lcall
add
lods
jo
and
mov
es
xor
xor
jp
loopne
jmp
jg
out
and
movsb
in
popf
inc
aad
mov
mov
gs
pop
loop
xchg
ret
jmp
test
fdivr
lods
xchg
mov
movsl
jge
or
xchg
fisttpll
pushf
clc
mov
mov
aaa
dec
shll
gs
stc
fstpl
inc
lret
cmp
ds
lret
loopne
dec
rol
ret
fsub
xor
xchg
in
xchg
add
add
xchg
sub
ss
mov
or
or
shll
sbb
mov
nop
shll
loopne
mov
or
sub
mov
adc
jge
js
popa
mov
mov
push
add
pop
loop
and
orb
test
ja
cmp
int3
dec
push
lcall
mov
fnstenv
sbb
adc
mov
jg
sub
dec
fstps
cmp
and
test
xor
adc
pop
popl
xchg
mov
cmp
ds
sub
pop
xchg
lcall
insb
in
fidivrs
lcall
mov
movsl
xor
popa
mov
inc
in
mov
out
or
cmp
xor
adcb
les
testb
push
mov
sub
je
insb
pop
push
inc
cwtl
and
add
xor
stc
mov
jg
fidivrl
fiaddl
std
mov
sub
add
test
push
cmp
mov
sbb
mov
xor
imul
iret
jb
bound
dec
xor
sub
rorl
sub
and
mov
mov
pop
out
std
sbb
jge
fwait
add
push
dec
mov
adc
sbbb
shl
stos
ss
in
cmpb
jge
int3
inc
inc
fisubl
shrb
xor
outsl
cli
mov
lock
mov
push
xchg
cli
daa
sub
push
int
gs
cmp
xor
jle
insb
mov
jae
dec
movsl
push
fildl
mov
imul
jp
adc
mov
paddb
mov
adc
push
mov
jo
mov
outsb
and
cmp
iret
roll
add
test
ss
xor
mov
mov
adc
mov
pop
xlat
and
movsl
cltd
clc
cmp
int3
fisubrs
xchg
fidivs
jb
stos
test
fimuls
pop
xor
cmp
sub
aaa
dec
daa
sahf
icebp
cmp
popa
jns
int3
sbb
cmpsb
fadds
cmp
push
pop
cmp
mul
xchg
sbb
mov
cmp
mov
cmpb
ret
test
mov
push
movsb
stos
test
jle
movsl
pop
sub
sbb
filds
dec
jno
add
mov
test
lods
adc
mov
and
sub
push
ss
addl
xlat
stc
push
scas
test
les
movsb
outsl
dec
lock
fwait
mov
cmc
mov
cwtl
and
push
xor
cmp
rcll
pusha
shl
jecxz
rorl
sbb
pusha
or
inc
inc
add
into
sarb
stc
shr
icebp
fdivs
and
mov
movsl
dec
cld
mov
frstor
stos
adcb
and
jp
jle
mov
jge
pusha
inc
out
sub
mov
ja
mov
hlt
shll
test
jbe
stos
movsl
rcr
repz
mov
inc
push
add
fisttpl
ds
cli
insb
rcll
out
add
divb
into
add
movsl
cmp
lahf
aam
cmp
ss
mov
cmp
push
sub
aaa
popa
loopne
pop
fistpl
inc
leave
ret
test
in
fbstp
dec
popa
fs
add
movsl
cmpsb
push
jo
add
lock
inc
icebp
ljmp
rcrb
push
pop
cmpb
movsb
bound
or
inc
movsl
sbb
add
stos
scas
sarl
mov
movsl
add
testb
mov
iret
adc
pop
push
dec
daa
add
adc
add
push
jecxz
ret
insb
rcr
mov
xchg
jle
fdivl
add
push
xchg
mov
adc
sub
xor
add
std
xor
xor
mov
sub
popa
push
repz
inc
cli
push
sbb
jns
fwait
scas
lods
cmc
cmp
fwait
mov
xor
inc
ja
mov
or
fst
cmp
add
mov
mov
xor
movsl
outsl
movsb
les
adc
xor
cltd
cmp
pusha
adc
cmc
jne
cld
add
inc
out
cltd
outsl
jno
ret
loopne
pop
lret
jecxz
ret
je
lods
sbb
mov
and
ret
sbb
inc
ret
jmp
out
ret
arpl
or
and
ja
das
sub
mov
jecxz
jge
dec
dec
ret
or
dec
inc
sahf
ret
and
mov
dec
mov
imul
dec
cmpxchg
xor
outsl
lahf
mov
mov
sti
xchg
test
cmpl
mov
xchg
cmpsl
jnp
out
arpl
ja
and
stos
loope
pushf
inc
mov
decl
stos
ret
xchg
adc
mov
add
pop
pop
ret
aad
lcall
cmc
cli
fiaddl
inc
add
mov
hlt
adc
test
jne
ret
mov
and
lods
outsb
testb
add
out
mov
idivl
cmp
and
iret
shll
add
push
imul
ret
loope
loopne
cltd
cwtl
mov
lods
pop
fistl
pop
bound
mov
dec
outsl
cmpsb
mov
fcoml
ret
rcr
mov
sbb
inc
mov
adc
jno
std
push
fisttps
movsb
jl
out
ret
outsb
aam
les
ret
test
pop
sub
ret
cmc
or
into
ret
rcr
mov
repz
mov
jecxz
jb
inc
loop
pop
dec
dec
inc
inc
pop
movsl
mov
nop
outsb
cmp
faddl
subb
lret
jnp
mov
ss
mov
inc
fstpl
imul
mov
mov
cli
cs
mov
xor
sbb
dec
and
test
ficomps
ret
sbb
popf
mov
mov
sub
rcl
js
outsl
out
mov
mov
jmp
js
js
pusha
out
gs
iret
mov
mov
out
push
cmpsl
mov
pop
enter
cmc
dec
jb
shrb
jl
jns
xchg
popa
movhps
pop
push
into
mov
lahf
adc
mov
inc
movsl
jb
jle
mov
push
cmp
loopne
lea
push
filds
fidivrl
jb
mov
fwait
pop
scas
imul
xchg
xchg
cmp
and
jle
pop
cmpsl
out
cwtl
adc
rclb
jb
inc
sbb
sarl
xor
int
andl
jp
aas
hlt
add
cmp
rcr
jl
hlt
pop
mov
test
inc
fidivrs
incb
fadd
cmp
in
pop
mov
adc
push
loope
or
das
ffreep
bound
inc
add
ret
xlat
decl
pop
and
test
ss
movsl
mov
jne
jae
scas
je
popa
shrb
stc
dec
or
insl
out
mov
roll
mov
scas
pop
mov
popf
cmp
movsl
sub
mov
clc
call
push
cmp
or
and
int
or
mov
fs
out
gs
dec
sub
mulb
mov
or
dec
arpl
add
inc
lss
popa
dec
mov
sbb
daa
xchg
adc
pop
sub
push
inc
fmul
mov
add
ds
shll
mov
jae
adc
ret
cli
mov
add
pop
xchg
push
mov
sbbb
lcall
dec
pop
pop
dec
gs
lret
sub
push
in
mov
sub
inc
push
add
lds
scas
fmuls
dec
mov
stos
out
into
xchg
mov
jcxz
jle
movsl
inc
shlb
push
mov
add
and
movsl
jae
sti
jle
dec
push
mov
pop
mov
xchg
movsl
gs
push
mov
jmp
test
xor
xor
xchg
cmp
cmp
fwait
movsl
arpl
mov
lods
pop
push
pop
jp
pop
sub
xor
lods
mov
stc
lock
cwtl
xor
fsub
movsl
mov
in
mov
push
popa
sahf
push
cmpsb
sbb
mov
adc
dec
mov
fisttpl
mov
pop
aas
dec
xor
and
xchg
push
lret
sti
mov
mov
cmp
out
cmpsb
cmpl
adc
or
jae
fcompl
mov
cmp
and
xchg
jnp
pop
mov
jp
daa
pushf
rolb
test
shl
xor
jo
iret
mov
dec
mov
mov
out
mov
aas
add
in
adc
and
test
enter
sbb
neg
test
push
loopne
xchg
ret
fs
inc
fidivrl
add
movsl
mov
dec
call
rcl
cmp
xchg
mov
sbb
aad
xchg
fstpl
cmp
outsl
push
in
fwait
sub
mov
jnp
mov
fmull
dec
adc
test
testb
out
stos
in
jae
mov
sbb
and
movsl
add
enter
fwait
cwtl
out
pop
xchg
test
sbb
add
mov
cmpsl
into
xchg
xor
mov
jle
clc
ret
mov
mov
test
scas
jle
jae
xor
sbb
addr16
dec
movsl
mov
mov
jnp
data16
inc
fcoml
ficomps
cmpsb
dec
daa
outsb
xchg
mov
repnz
mov
add
xchg
sbb
js
and
add
pop
mov
sti
mov
or
adc
cld
cmpxchg
roll
push
sahf
ss
in
cs
sbb
in
cmpl
loopne
aas
mov
mov
insb
test
pop
cli
data16
stos
mov
jp
in
mov
out
imul
cmpsl
outsl
mov
lds
cmc
mov
xchg
inc
lods
inc
fidivl
xchg
out
or
into
sti
fcomip
dec
shlb
jmp
xchg
scas
cmpsb
jge
ja
cmc
mov
movsb
ret
mov
push
movsb
ffree
inc
lret
fsubl
outsl
jo
mov
xchg
fildl
inc
mov
gs
or
sbb
test
movsb
xlat
int
popa
scas
add
test
jno
and
mov
add
fwait
dec
je
scas
pop
adcb
xor
mov
bound
out
mov
inc
add
stos
cmp
pop
pop
jo
or
sub
icebp
pop
scas
jg
fsub
outsl
mov
or
mov
or
jbe
ret
adc
sub
movb
aaa
mov
xchg
cmp
cmp
out
fwait
push
popa
out
sbb
mov
mov
shll
fsubrl
movsb
sub
inc
dec
mov
out
mov
cmpb
cmovne
sarl
and
push
mov
push
nop
mov
imul
push
ret
push
test
rcrb
scas
addl
call
mov
push
jae
sahf
xchg
or
sbb
jae
out
jle
and
mov
mov
mov
cs
jo
out
mov
xor
xchg
repz
std
pop
push
insl
ds
push
pusha
jmp
lea
cmp
xchg
jnp
addr16
mov
stc
inc
fidivrl
jbe
sbb
es
or
in
xchg
cli
pop
in
in
ja
lret
push
fadd
inc
imul
mov
repnz
push
sbb
push
repnz
insl
mov
xchg
mov
add
inc
out
loopne
pop
out
popf
push
movsl
outsb
dec
leave
mov
sub
cmp
shl
sub
jp
mov
loopne
ret
cmp
and
cmp
in
adc
test
aad
movsl
scas
or
ss
sub
push
into
mov
jle
icebp
xchg
pop
xchg
in
push
sub
jmp
pop
jno
jp,pt
outsl
jo
push
cltd
pop
std
add
pop
out
mov
xchg
jge
testb
test
mov
mov
ljmp
loopne
stos
mov
scas
jmp
mov
ljmp
inc
test
or
fdivl
inc
gs
adc
xchg
xor
je
in
sub
mov
lahf
push
fnclex
and
add
arpl
sbb
cltd
and
out
sbb
dec
mov
in
popf
out
and
arpl
inc
xor
dec
pop
insl
xchg
inc
pop
je
ret
shl
cwtl
or
xchg
outsb
movsl
mov
outsl
scas
mov
shll
add
mov
test
lret
inc
jo
dec
cmpb
mov
cmpsl
leave
ret
sti
je
jecxz
int3
ret
cmp
sub
scas
dec
mov
ds
add
xor
adc
push
mov
jp
cmp
cmp
cwtl
cli
stos
gs
aam
lret
iret
mov
jno
popa
xor
inc
lods
in
lods
pushf
pop
ret
shl
ret
frstor
ret
scas
in
stos
jge
ja
mov
adc
xor
cwtl
cli
leave
ss
sbb
aad
adc
popa
add
enter
scas
mov
ret
jae
and
mov
loop
repz
outsl
jg
sti
ret
adcl
jno
pop
and
and
int
pop
cltd
enter
ret
loope
test
push
pop
ret
js
int3
ror
clc
loope
and
movsl
mov
mov
jmp
inc
ret
in
adc
push
xor
sub
loop
or
loope
or
mov
cmpsb
jnp
jo
xchg
cwtl
xchg
movsb
ficoms
stc
addr16
rorl
jae
cmp
ja
sub
lock
stc
add
loope,pt
fistps
pop
sbb
ja
lods
mov
jg
ss
cwtl
inc
mov
xor
ret
into
push
jmp
outsb
sub
out
je
and
or
jle
lret
stc
ret
xchg
popl
sub
pop
push
aam
mov
ss
sub
jmp
sbb
jecxz
clc
cmpsl
cmp
insb
mov
inc
movsb
icebp
jb
push
mov
xor
loop
push
clc
and
inc
dec
jbe
cmpsb
shrb
fsubl
add
sti
pop
fyl2x
lahf
es
movsl
push
cmpsl
jnp
or
pop
or
mov
cmp
inc
mov
xchg
mov
mov
jnp
fstps
sub
inc
lret
test
out
lods
lea
leave
imull
push
jp
and
mov
test
aas
xorl
jg
fdivs
adc
imul
fcmovbe
imul
mov
sarb
sbb
pop
dec
test
sarb
cmp
or
or
in
adc
dec
pop
fstl
sahf
insl
out
jbe
in
imul
or
cld
test
outsl
dec
fstps
movsb
shrl
xchg
lods
jns
fdivs
into
cltd
push
cmp
push
sub
mov
and
mov
jb
pop
xor
mov
mov
adc
inc
data16
into
jns
and
or
jl
add
mov
jmp
rcrl
rsqrtps
pop
imul
push
nop
and
ret
stos
mov
mov
movsl
mov
out
push
dec
inc
sti
ss
sbb
out
je
movsb
mov
pop
loope
add
sbb
mov
adc
jmp
adc
aas
mov
xadd
outsl
mov
es
sahf
out
sahf
mov
push
lcall
sarl
stc
dec
test
loop
adc
ss
mov
pushf
ja
nop
inc
popa
js
or
xor
mov
stc
inc
movsb
cmp
fisubl
ret
pop
test
mov
cmpsl
int3
dec
outsl
cmp
mov
xchg
fsubrl
jecxz
cmp
push
sbb
cmc
push
nop
push
mov
fwait
cmc
nop
rorb
aaa
xor
dec
cs
nop
jle,pn
push
sbb
and
cwtl
inc
test
jo
fcomip
pop
pusha
inc
inc
icebp
sti
xor
nop
dec
mov
add
add
cmp
cld
shlb
das
bound
and
stos
sbb
mov
cwtl
adc
outsb
test
mov
lahf
std
leave
loopne
push
and
cmp
xchg
mov
dec
es
lea
aad
jbe
push
cmp
jb
mov
out
xor
fld
mov
flds
inc
das
inc
mov
mov
jns
clc
inc
insb
hlt
mov
sub
js
idivb
add
rorb
jecxz
int3
mov
inc
mov
mov
shl
std
jmp
fwait
pop
orb
mov
sbb
add
jno
mov
sahf
fsubrl
test
push
popa
jge
mov
mov
inc
ljmp
mov
es
mov
push
cmpsl
pop
xchg
lret
jg
pop
pop
or
cwtl
aad
mov
fnstsw
sbb
data16
addb
fmul
push
mov
inc
or
xor
es
int
ds
rcll
fisttpll
imul
add
pop
cli
add
dec
cmp
ffreep
mov
test
fimull
push
mov
inc
dec
mov
lods
pop
out
shll
pusha
push
push
jmp
cs
shll
sub
ret
fwait
sbbl
pop
xor
mov
hlt
arpl
pushf
sbb
cmp
fs
sbb
or
lcall
inc
sarb
jle
mov
inc
loope
outsl
add
shl
mov
cmpsl
mov
mov
fidivl
test
nop
mov
loope
stc
mov
pushf
sbb
outsl
adc
clc
inc
xchg
xchg
inc
push
js
cwtl
xor
add
mov
es
pop
pop
inc
push
aas
and
repnz
movsl
or
push
cld
mov
scas
adc
xchg
mov
adc
jg
roll
mov
popw
js
shlb
xchg
scas
sbbl
outsl
mov
pop
push
xor
fs
cmc
test
pop
int
out
sbb
loope
call
inc
sub
fmull
mov
addr16
jns
fnstenv
xchg
jnp
add
das
iret
das
mov
or
aaa
fidivl
and
cli
pop
mov
pusha
sbb
inc
sti
fiaddl
popf
cmp
fiaddl
outsl
shl
jp
or
fistl
xchg
lret
mov
mov
test
divl
mov
sub
leave
dec
xchg
lret
jnp
fiadds
lds
ljmp
das
sbb
movsl
dec
mov
xor
or
fdivrl
adc
adc
cltd
push
pushf
inc
movd
imul
scas
jg
xor
cs
test
mov
popf
jae
mov
push
adc
mov
sub
or
in
lods
or
or
push
fidivrl
jo
xor
push
xchg
xor
fnstsw
out
sbb
cmp
jne
scas
push
in
int3
in
int3
dec
pop
arpl
jne
lcall
and
mov
xchg
pop
mov
mov
and
add
inc
shl
jbe
in
dec
pusha
jae
je
pmulhw
addb
into
jno
mov
add
xlat
inc
xchg
cwtl
sub
mov
inc
jmp
sbbl
sarb
jp
rolb
mov
cmpsl
adc
clc
test
push
push
popa
stc
cltd
sbb
pusha
dec
inc
out
lock
popf
aas
fsubrl
and
sbb
cwtl
push
xchg
and
insb
nop
loopne
mov
inc
lock
sbb
out
decb
or
daa
sub
push
add
scas
jg
push
jmp
sbb
add
dec
lods
adc
or
mov
dec
xchg
loopne
shlb
out
jns
ljmp
fidivrl
mov
adcl
mov
or
testl
add
mov
test
ljmp
imul
inc
cmp
inc
push
cmc
mov
lods
mov
sub
xor
lcall
xchg
cmp
shlb
inc
out
push
and
cwtl
mov
dec
or
push
popa
jmp
outsb
shll
not
xor
cmpsb
xor
mov
sub
lods
mov
popa
or
loop
pop
in
and
dec
fmuls
pusha
sub
fadds
addl
jecxz
adc
or
lret
in
xor
into
popa
xchg
mov
repnz
push
je
lcall
pusha
push
stos
pop
andb
xchg
movsl
sahf
inc
popa
out
scas
inc
popf
mov
testb
addr16
inc
fldl
xchg
jbe
and
pop
pusha
ds
addl
int3
pop
repnz
test
mov
iret
iret
mov
iret
shrb
popf
xchg
sbb
ss
mov
mov
or
add
pop
dec
mov
test
sti
cld
fdivrs
mov
cmp
xor
lods
jo
cwtl
xor
addr16
clc
add
mov
adc
mov
sbb
aaa
mov
sub
test
mov
scas
pop
icebp
and
mov
xor
mov
movsl
xchg
xor
push
jns
dec
dec
dec
inc
mov
push
mov
jle
popa
jns
ss
jge
pop
cmp
mov
movsl
cwtl
rcrl
mov
push
mov
fmull
jecxz
lock
mov
and
je
cli
test
fnstenv
rolb
into
mov
test
adcb
imul
nop
fs
jne
push
fldt
sbb
int3
test
mov
mov
sub
mov
jb
jle
int
in
xchg
sbb
inc
push
xchg
mov
add
es
movsl
sbb
push
push
xchg
or
movsl
jo
orl
fmul
mov
mov
mov
or
addr16
xchg
xchg
mov
jns
out
mov
test
jg
or
or
sbb
aam
xchg
adc
xor
cs
js
or
adc
loopne
das
movsl
pop
inc
jge,pn
clc
mov
adc
sub
jp
test
aaa
or
sub
sahf
or
cmp
push
xchg
sub
jo
ja
in
dec
adc
adc
push
jns
sbb
out
mov
and
lret
shl
rcr
xor
sub
push
lcall
mov
aad
adc
adc
sub
inc
js
in
loop
scas
pop
adc
icebp
movsl
pop
popl
or
test
or
rcr
dec
data16
jmp
adc
mov
inc
jne
xor
pop
sbb
bound
mov
cmc
or
and
mov
xchg
lock
mov
lods
pushf
adc
push
test
shlb
mov
pusha
pop
outsl
jl
stc
inc
bt
sub
aad
leave
jns
inc
sahf
mov
test
in
add
inc
movsl
pusha
sbb
or
decb
sub
loopne
lcall
pop
andb
lea
push
mov
fcomi
arpl
and
add
dec
mov
test
fadd
and
add
lods
iret
ds
push
lahf
out
sub
jecxz
aad
les
mov
xchg
push
movsb
or
cld
push
mov
adc
add
aad
test
lret
hlt
gs
mov
dec
ds
fidivrl
out
cmp
fsubr
sbb
int3
mov
mov
mov
jb
jg
loope
mov
sbb
pushf
sub
push
pop
adc
outsl
xchg
jge
in
or
push
cmp
mov
scas
rclb
adc
out
fbld
shrl
movsb
mov
icebp
leave
mov
imul
dec
or
pop
rol
sbb
pop
ja
shll
aas
jmp
ret
hlt
cmc
psubq
ja
adcb
cmp
out
lcall
imul
add
andl
jb
mov
cmpsb
add
int
mov
or
movsl
mov
push
out
cmp
inc
mov
mov
popa
shrb
in
xchg
xor
add
cld
xor
fldt
aam
iret
arpl
into
ret
xlat
movsb
movsl
jle
and
into
psadbw
fisubrl
push
jl
sbb
mov
es
mov
fstp
cmp
mov
das
push
pop
ja
mov
mov
into
sti
adc
lret
mov
push
mov
xchg
sti
ja
popf
in
cmpsl
ret
or
cmpsl
mov
mov
mov
loopne
mov
mov
add
push
push
pop
xchg
mov
push
pop
adc
push
inc
inc
test
adc
ss
ja
adc
fwait
mov
cmp
mov
out
ja
cmp
and
dec
mov
fisubl
mov
jbe
mov
xchg
outsb
movsb
test
pop
mov
and
outsl
into
xchg
pop
mov
sub
mov
add
dec
sub
mov
js
mov
pop
nop
loopne
xchg
push
mov
mov
add
test
jb
sub
adc
push
mov
ja
fdivl
and
dec
sbb
cmpsb
fisttps
jnp
rol
xchg
jge
cld
movsl
rorb
mov
insb
and
test
scas
stos
pop
fisubl
cld
jge
xor
dec
loope
jmp
sti
dec
and
movsl
aaa
and
mov
fstl
push
mov
cli
je
add
sbb
sbb
push
sub
sti
add
lret
repnz
push
sbb
fs
je
mov
jo
mov
push
fst
imul
or
mov
inc
sbb
rcll
movsb
adc
mov
xor
sub
mov
xchg
sahf
lcall
sbb
fwait
mov
cltd
dec
mov
in
test
push
lock
insl
lods
out
mov
aas
std
mov
std
js
pusha
inc
insl
mov
gs
and
outsb
insl
mov
dec
popa
cltd
in
xor
lcall
loop,pt
jns
dec
xchg
das
and
daa
dec
fwait
jg
movsl
repz
aaa
paddusw
aaa
mov
or
add
fstp
stc
push
mov
les
jo
repz
stos
jne
mov
dec
push
shll
test
xchg
pop
sbb
iret
lds
sub
movsl
pop
mov
push
imul
jo
orl
mov
mov
loopne
sahf
dec
dec
jle
push
sbb
cmpsb
push
cwtl
in
cmp
test
xchg
lcall
add
pop
popa
fidivl
push
cld
xchg
jge
fs
mov
lds
fsts
pop
dec
and
js
out
push
sbb
xchg
add
sbb
in
mov
lock
jmp
xor
test
mov
leave
popa
dec
lahf
add
nop
addr16
mov
jg
lret
lods
stos
pushf
pop
mov
or
sahf
aad
jbe
movsl
cwtl
imul
sub
mov
outsl
sub
scas
xorb
js
fwait
jbe
mov
ljmp
mov
push
mov
xchg
into
je
loope
jne
pushf
mov
clc
fldenv
movsl
pop
xor
mov
adc
aad
das
enter
inc
or
dec
shrb
inc
mov
sbb
pop
fdivl
pusha
xorb
jp
sbb
cmp
shll
stos
jnp
jl
pop
outsl
iret
xchg
adc
lods
pop
xchg
cmp
sbb
sbbb
add
ret
push
xchg
inc
outsl
and
jp
es
sub
jnp
test
xchg
and
mov
xor
std
movsb
pop
gs
xchg
daa
jb
xor
aam
push
data16
movsl
ret
mov
cli
adc
mov
mov
lret
test
cli
adc
addr16
pop
clc
movsl
lock
cmp
inc
pop
cld
pusha
mov
rcl
jecxz
mov
or
mov
jecxz
test
mov
jns
push
mov
fistpl
adc
inc
scas
push
sub
pop
push
int3
lret
mov
insb
push
mov
xor
fwait
cmp
sbb
test
test
stos
mov
pusha
popa
xor
lds
jbe
adc
aam
pop
pop
ds
les
cmp
add
inc
inc
cmc
pop
inc
test
sbb
or
in
or
mov
inc
or
pop
fdivr
ret
scas
mov
mov
xchg
out
out
dec
ret
xor
dec
ret
lock
into
fs
shll
push
mov
lods
iret
inc
jl
xor
jne
sbb
ljmp
add
jae
pushw
adc
adc
mov
xchg
fcomp
mov
lods
les
sbb
rorl
sub
fbstp
int3
mov
test
push
cmp
xchg
ljmp
mov
xorb
out
sub
mov
cmp
push
test
setae
call
jne
fisubs
xor
movsl
add
sti
jmp
mov
cli
push
pop
cmp
cmpsb
pop
xchg
inc
mull
mov
mulb
dec
xor
mov
jns
or
xchg
xchg
scas
loope
jns
cmp
add
jb
and
adc
call
pop
std
or
addl
add
fisubl
inc
xchg
jb
out
jb
pop
je
xor
mov
mov
mov
jo
clc
inc
lahf
add
es
outsl
mov
loope
xor
mov
mov
cmp
adc
call
into
push
add
inc
inc
insl
jge
cwtl
lods
sub
xor
mov
sahf
mov
mov
push
out
sub
add
inc
test
add
push
pop
es
mov
daa
aam
pop
xor
add
sahf
jl
mov
and
xchg
into
rol
cli
adc
jne
xchg
fcompl
mov
shrb
ret
mov
pushf
fwait
jns
jecxz
inc
popf
loop
dec
dec
pop
in
stos
ljmp
nop
int
int
jbe
inc
add
test
test
jne
fnsave
jmp
movsl
imul
aaa
loop
lds
aad
sarl
movsl
inc
push
sub
xor
rorl
sbb
fadd
push
daa
and
out
jb
inc
clc
imul
rolb
pop
nop
dec
in
icebp
xchg
fdivrp
das
lret
cmp
inc
pop
pop
lods
xor
dec
or
push
mov
pop
test
sbb
push
jmp
sub
mov
fistl
sub
test
jnp
xorb
hlt
push
push
shrl
xchg
jge
data16
fbstp
aas
insb
pop
rclb
inc
aam
les
mov
repnz
jle
jae
subb
addr16
mov
sti
fdivrs
cmc
push
mov
das
jb
imul
inc
out
int
rorb
addr16
mov
push
jl
push
scas
sbbl
sub
cli
inc
scas
xchg
dec
movsl
jle
jecxz
cwtl
mov
je
jns
test
aaa
push
in
scas
stc
mov
roll
fiaddl
jle
popa
mov
test
pop
push
jnp
inc
stos
adc
sbb
add
enter
mov
and
mov
shl
aad
push
push
stos
inc
ja
jns
sub
inc
movsb
mov
xchg
jb
mov
mov
mov
or
inc
pusha
outsl
xor
daa
adc
pushf
les
mov
sarl
pcmpgtw
mov
aad
add
stos
adc
nop
jmp
scas
loope
xchg
dec
test
daa
xchg
gs
jnp
repz
inc
mov
outsl
sbb
das
mov
test
xor
loope
mov
cmpl
subl
andl
xchg
mov
mov
push
inc
and
fcomps
mov
adc
jne
sub
cmp
mov
mov
inc
fimull
cld
push
nop
rol
lret
jecxz
mov
shlb
xchg
push
mov
js,pt
sbb
or
and
outsb
ret
repnz
sub
repz
add
mov
mov
test
pop
movsl
and
jno
adc
and
pmaxub
cld
aam
push
xor
mov
test
jns
lods
push
aaa
je
sbb
repnz
xchg
or
jg
popa
mov
inc
xchg
test
xor
insb
pop
mov
test
js
fcmovbe
push
roll
and
test
movsl
fcomp
mov
aaa
in
es
push
or
mov
cmp
adc
mov
adc
jo
inc
push
mov
cmc
push
icebp
ret
mov
pusha
push
outsl
jecxz
pusha
add
mov
sbb
add
dec
add
sub
mov
fs
adc
mov
ljmp
mov
lret
fisubl
icebp
mov
pop
daa
insb
push
cli
mov
push
addr16
cmpb
adc
xor
insb
dec
cmp
das
daa
in
orb
cltd
scas
cmp
ss
push
out
inc
xor
push
cmp
jb
popf
mov
shll
xchg
cmp
movsl
dec
in
insl
in
mov
lock
pusha
inc
scas
xlat
lock
sub
push
pop
inc
dec
dec
mov
inc
imul
pop
stos
pusha
mov
daa
xchg
sbbb
cmp
cmp
jnp
inc
add
add
shlb
add
sti
int3
mov
loopne
pop
dec
mov
inc
dec
dec
adc
cli
add
push
adc
pusha
xchg
in
lret
inc
movsl
push
cmp
fisttps
lds
movsl
pop
fimull
xchg
mov
mov
sbb
mov
aas
inc
xorb
xor
sbb
inc
and
mov
movsl
add
sbb
mov
cli
in
daa
jnp
sahf
or
add
push
xchg
pusha
xchg
ret
pop
repz
fadds
lahf
or
movsl
popf
jl
int
pop
or
push
mov
pop
sbb
loopne
sar
dec
sub
sub
or
inc
pop
aaa
jns
addr16
sub
xchg
subl
loopne
lahf
inc
push
cwtl
push
out
sbb
aaa
pop
mov
add
pop
dec
jle
mov
test
cmp
popf
cld
pusha
pop
pop
in
mov
sub
inc
arpl
cmpsl
mov
jne
std
pop
jno
ds
mov
movsl
sub
imul
inc
add
adc
sbb
mov
nop
mov
add
mov
daa
rcrl
mov
sub
adc
mov
jns
inc
xchg
mov
jp
test
sub
mulb
aas
jmp
aad
js
rolb
scas
stos
mov
pop
adc
aaa
movsl
rcrl
jge
mov
jecxz
or
mov
push
movsl
lret
push
pop
jp
and
cmp
mov
inc
call
shrb
out
push
or
das
ja
pop
inc
sub
xor
scas
cmp
jle
outsb
jno
mov
dec
sbb
sbbb
enter
push
fisttpl
mov
sarb
repnz
mov
sbb
fstpt
decb
repnz
into
push
aaa
movsb
mov
jae
sar
mov
push
jns
lahf
or
fstpt
imul
ljmp
mov
xorl
cmp
lods
rorb
insb
andb
into
gs
lcall
mov
andb
sti
push
jp
std
or
rcll
jo
mov
adc
push
xchg
outsb
jnp
mov
sub
outsb
xchg
lods
mov
shrl
mov
mov
sub
rcl
aaa
or
stc
jp
loop
mov
mov
loopne
jmp
jp
jge
xor
sbb
sbb
mov
divl
cmp
pop
and
call
lock
mov
xchg
idivl
jl
add
xor
or
in
cld
test
faddl
adc
jbe
xchg
dec
adc
movsl
sbb
ss
loopne
inc
insl
adc
xchg
xlat
shrd
push
aaa
sub
push
mov
mov
gs
sub
outsb
sahf
xchg
xchg
testl
lea
pop
adc
es
push
cmpsl
or
inc
push
mov
sbb
xor
mov
dec
mov
scas
jno
lods
pusha
cmc
push
out
lds
xor
scas
mov
sub
sti
mov
data16
mov
jle
mov
loopne
movsb
pop
jge
jne
out
jo
cwtl
lret
or
fadd
stos
cmp
cmpsb
and
pop
sbb
cmp
inc
xor
into
sub
adc
inc
movsl
fnstcw
mov
mov
nop
pop
cmp
mov
inc
rcrl
pop
mov
fs
xor
add
mov
xor
mov
inc
lds
test
push
push
push
or
sub
jg
stos
inc
lret
lret
call
xorb
xor
cltd
je
repz
xor
loopne
mov
xorb
cwtl
sarb
lret
mov
adc
loopne
mov
xchg
jle
mov
pop
mov
jp
mov
inc
arpl
push
pop
xchg
jns
test
jl
lods
jp
pop
fs
mov
dec
mov
pop
xor
test
push
mov
push
or
ss
shrl
cli
dec
push
cmpb
xchg
cli
dec
pop
mov
test
fbstp
lods
or
sahf
jns
pop
int
repnz
pop
sub
jecxz
sub
movsb
mov
leave
lret
insb
or
pop
cmp
popf
fwait
jecxz
jb
mov
lea
lret
cltd
enter
inc
adcb
andb
pop
add
mov
rclb
xor
test
cmp
sti
sbb
pop
test
into
pop
jmp
pop
cmpsb
cmp
inc
aaa
scas
xchg
fisubrs
in
cmp
rorb
jg
xchg
adc
inc
out
xchg
xchg
or
xchg
je
jg
mov
shrb
ret
xchg
mov
into
sub
xchg
fidivrl
shlb
out
fstpl
mov
sti
aad
xorb
mov
jns
outsb
cmp
sub
stos
movsl
into
cmpsl
aam
mov
test
xor
repz
lret
cwtl
daa
and
ds
pop
punpcklbw
cli
push
push
sbb
dec
test
addr16
arpl
loop
sub
loope
popf
mov
mov
and
cwtl
jp
mov
lcall
loop
sti
rcr
adc
pusha
dec
insb
fsubl
add
add
ljmp
lret
ret
shrb
jecxz
adc
rcrl
jb
xchg
insb
clc
lret
mov
shll
divb
iret
jnp
sbb
push
cmp
mov
xchg
xor
call
sti
xchg
inc
cwtl
add
cmp
orb
sarl
xchg
cmpsl
sbb
cld
call
jo
and
cld
in
sarb
test
std
imul
adc
xchg
inc
or
out
inc
jge
nop
inc
pusha
test
xor
rcrl
add
mov
lcall
push
dec
mov
push
inc
cmp
pushf
mov
jp
insl
jb
movsl
int
jo
cmp
rolb
or
mov
and
dec
xor
lea
pusha
nop
dec
idivb
cmp
movsb
pop
cmp
popf
inc
out
xchg
loope
test
test
rorb
loope
mov
dec
popa
movsl
out
fsubrl
xchg
popa
adc
stos
mov
repz
sbb
or
pop
mov
daa
jg
out
sbb
jp
or
xor
mov
int
lods
jle
jns
movsl
insl
or
jp
les
stc
xor
sahf
xor
loope
xchg
stos
dec
outsb
adcb
test
cs
cs
or
in
leave
stc
cmpsl
data16
inc
or
into
cmp
mov
es
pushf
push
test
movsb
aaa
mov
mov
mov
pop
inc
xchg
push
cmc
insl
cwtl
jmp
mov
dec
xchg
add
jmp
movsl
sahf
fiaddl
push
hlt
cmp
mov
out
cmp
aas
pop
mov
cmp
and
inc
dec
jns
out
jl
mov
jae
mov
test
scas
mov
and
sbb
or
out
inc
mov
stos
pop
addr16
shl
das
add
nop
jnp
xor
out
mov
push
push
add
loope
iret
outsb
sbbl
cmp
sub
daa
xchg
test
pop
sbb
inc
add
sbb
dec
test
xor
gs
add
jae
in
mov
movb
pop
or
shll
test
insb
movsl
push
iret
xchg
inc
cmpl
mov
je
push
cmpsl
mov
loop
cltd
mov
into
shr
insl
pop
dec
sub
adc
dec
jne
xchg
sbb
cmp
and
insl
sbb
cwtl
shr
mov
daa
mov
xchg
pop
mov
out
gs
repnz
dec
movsl
andb
fdivrs
jno
jecxz
sbb
rclb
ret
xor
xchg
cmp
adcb
mov
inc
lock
dec
xchg
jnp
vaesenc
mov
int3
jno
lods
rcrb
cltd
ret
sbb
mov
stos
jns
dec
iret
jnp
out
clc
scas
ret
adc
test
xorl
push
jb
cmpsl
cmp
mov
sarb
ret
cmpsl
enter
leave
dec
sbbl
rcll
xchg
cmpb
scas
mov
rcl
inc
add
adc
jecxz
xchg
sbb
mov
push
popf
fwait
jecxz
call
cltd
ret
je
add
cmc
xchg
rol
movsl
inc
test
jecxz
fisubl
je
cs
inc
repz
inc
xchg
sbb
ja
notl
adc
inc
jg
jg
fdiv
xor
rorl
in
adc
adc
cltd
fcomps
inc
adc
into
sti
or
cmpsl
push
ss
push
xchg
in
mov
cmp
sbb
jo
or
lret
fsubs
popa
jno
dec
rdmsr
pop
xchg
in
sub
ror
fcomps
inc
and
mov
cwtl
mov
into
ficoms
ret
scas
mov
cmp
push
movsl
and
out
fcoml
fxch
mov
addb
data16
mov
test
mov
mov
enter
cmp
fs
outsb
leave
mov
mov
in
cwtl
imul
mov
mov
push
outsl
pop
inc
sbb
inc
mov
pop
mov
mov
rorb
mov
lcall
dec
mov
inc
inc
jmp
outsl
outsb
jbe
or
or
sbb
addr16
stos
rclb
xor
push
imul
cmp
mov
pcmpeqd
jmp
sub
sbb
mov
rorl
es
scas
pop
add
popf
sbb
mov
sbb
cmp
jbe
ss
fisubl
add
nop
inc
fs
mov
ss
adc
cwtl
mul
cmp
psrlq
sbb
ja
add
bound
mov
insl
xchg
sub
neg
jb
movsl
lahf
inc
movsl
jnp
stos
fnstcw
outsl
cmpb
sbb
jns
sbb
mov
lcall
lods
fdiv
add
ds
adcb
stos
prefetcht0
imul
cmp
mov
cld
das
and
ds
fnsave
mov
repz
je
add
or
imul
insl
or
dec
cmp
dec
and
lock
test
mov
mov
jecxz
test
xor
xor
xchg
or
fisubl
inc
mov
jo
xlat
mov
data16
xchg
stos
fdivrl
int3
ja
sbb
ss
add
mov
std
icebp
shll
pop
arpl
rolb
ret
mov
movsl
and
lret
jns
rcll
mov
sbb
adc
cmp
test
cmpl
addr16
pop
sbb
xchg
push
mov
int
sbb
and
mov
or
cmc
fdivl
fldl
adc
movsl
mov
and
cmp
cli
outsb
pop
andl
sbb
fidivrl
mov
cmc
and
xor
xor
fsubr
pushf
test
mov
mov
xchg
into
std
addr16
fwait
mov
jno
fwait
sub
sbb
sbb
jp
imul
jmp
int3
dec
sub
mov
fisubl
mov
cmp
mov
adc
mov
pop
pop
xor
scas
dec
test
nop
xchg
adc
cmp
into
inc
or
jg
aam
dec
ret
inc
movsl
dec
mov
aas
lcall
jge
inc
fadds
int3
jmp
movsl
push
outsl
sti
push
mov
scas
jnp
fnsave
mov
stc
push
stc
pop
dec
sbb
ret
adc
sbb
cmpsl
add
test
sub
dec
adcb
rcll
mov
pop
pop
cmpsl
adc
arpl
sbb
add
shrl
out
xlat
fwait
mov
mov
mov
negl
xchg
sbb
jb
dec
icebp
out
add
jbe
cmp
cmp
push
push
cmc
outsl
mov
mov
adc
jns
rcr
mov
cmp
pop
in
cmp
lcall
cwtl
mov
fisubrl
rcll
adc
mov
loope
mov
insb
xor
nop
sets
jmp
inc
dec
fs
adcb
lea
mov
test
xlat
mov
rol
test
sbb
add
add
stos
inc
add
out
adc
jge
into
xchg
jbe
hlt
push
mov
stos
mov
test
inc
jne
mov
fdivrl
mov
lahf
push
push
shlb
mov
mov
fwait
popa
sbbb
mov
pop
inc
mov
push
jae
add
arpl
sbb
cli
xor
call
dec
hlt
sbb
add
add
inc
xlat
jnp
sbb
dec
clc
mov
pushf
xchg
movl
pusha
and
cmpl
test
and
sbb
adc
mov
mov
lret
into
mov
mov
daa
scas
sarb
inc
mov
insl
mov
xor
out
lock
nop
and
pop
adc
dec
push
and
mov
pop
lods
shl
adc
lahf
movsl
mov
pop
jl
mov
fiaddl
cmp
hlt
out
cltd
loop
in
inc
fnstcw
jmp
aas
mov
mov
or
ja
stos
pop
xchg
sub
add
adc
ret
insb
cwtl
adc
test
in
mov
sub
test
lret
out
xchg
out
inc
arpl
ffree
fmuls
aam
or
mov
ljmp
cmp
popf
ret
dec
adc
out
ret
mov
mov
mov
ret
negb
ja
and
lods
in
jo
push
adc
rol
in
adc
repnz
ret
or
add
jo
push
xor
sbbb
scas
fnstenv
xchg
mov
sar
std
mov
cs
je
push
ret
inc
mov
mov
jne
mov
dec
sbb
fwait
mov
bound
pusha
decl
and
push
shlb
mov
push
mov
ret
mov
fldenv
push
sub
jmp
adc
bound
push
or
mov
push
pushl
xchg
stos
mov
sahf
notl
xor
outsb
loop
scas
mov
jb
jo
sbb
and
insb
call
add
ret
sar
lods
lock
loope
jbe
repnz
stos
xchg
mov
dec
lahf
mov
pop
inc
ret
stc
jbe
xorb
cmp
fsqrt
cmp
daa
sbb
mov
mov
pop
xchg
ret
dec
hlt
xchg
mov
xchg
cmpsl
shll
xchg
mov
repnz
enter
mov
or
sub
sbb
or
and
mov
cltd
mov
fs
mov
lret
sbb
das
ret
cmp
jl
cld
icebp
fwait
xchg
shlb
ret
xor
in
ret
icebp
hlt
lock
ret
roll
pop
clc
out
and
sbb
insl
ss
cmp
dec
inc
xor
sahf
xchg
push
aas
lahf
adc
addr16
push
ret
aaa
sbb
test
push
pop
sub
clc
popa
mov
inc
int3
ret
add
jp
push
lahf
loop
or
fcmovbe
pop
mov
pop
frstor
cmp
out
ret
add
lods
scas
rcrb
imul
aad
sarb
jmp
adc
sahf
popf
mov
cmpsb
adc
jno
xor
test
test
xchg
loope
mov
xlat
nop
mov
mov
aad
fidivrl
int
mov
movsl
sub
lea
ret
es
fstl
mov
mov
or
js
ret
jb
testl
mov
mov
cmpsb
bound
mov
xchg
push
ja
iret
orb
add
sub
lcall
mov
ret
push
fldl
jo
lock
ret
je
popa
cltd
cmc
stos
notl
outsb
int
and
xlat
shrb
ret
pop
add
ret
inc
inc
je
jg
loopne
stos
in
shlb
mov
ret
in
negl
rolb
jno
sub
loopne
sub
ret
lretw
xchg
push
iret
pop
ret
push
inc
ss
or
outsl
and
jge
mov
dec
mov
sub
ret
inc
fldln2
sbb
cltd
ret
and
and
imul
aam
mov
movsb
inc
in
repz
xchg
push
insb
mov
ret
push
das
push
pop
nop
add
std
xchg
and
addr16
sahf
rcl
mov
sub
pop
outsl
sbb
adc
cltd
and
mov
pushw
ret
lret
fsubp
jmp
iret
out
push
insl
mov
shll
out
shl
or
ret
out
inc
and
inc
fimuls
mov
mov
ret
mov
adc
xchg
mov
ret
scas
es
push
sub
mov
mov
scas
ja
subb
jb
pop
or
mov
ret
cli
xchg
test
mov
cwtl
xor
mov
popa
repz
movsl
int
mov
aam
cmpsb
mov
shlb
in
mov
push
aas
outsl
movsb
push
inc
mov
cld
notb
stos
add
shld
jmp
and
das
mov
gs
clc
inc
lahf
divl
inc
hlt
test
cmp
int
cwtl
mov
and
cmp
enter
dec
mov
sub
sbb
test
lret
outsb
ret
dec
insb
add
ret
lods
stos
fidivl
and
pop
lea
loope
scas
stos
inc
push
mov
push
es
lods
mov
in
aas
dec
adc
mov
arpl
popf
aaa
loop
ret
aas
je
clc
adc
andb
xlat
add
add
inc
mov
mov
roll
test
ret
repnz
loope
or
enter
cmp
ret
arpl
add
fwait
mov
mov
out
mov
cli
and
fcmovnu
andb
lea
out
push
lods
rcll
imul
jecxz
mov
dec
mov
and
adcb
ret
ljmp
fisttpl
test
std
sahf
movsl
loope
cmc
push
aam
shl
ret
add
addr16
jb
pop
xorb
inc
in
mov
dec
shl
hlt
add
scas
xchg
mov
inc
orb
sti
xchg
mov
es
scas
and
ret
fistps
and
outsb
shrl
shll
sbb
adc
fldcw
pop
mov
ret
or
cmp
sub
fcmovb
lea
js
lock
scas
mov
jb
pushf
shl
mov
sahf
pop
mov
add
sub
fwait
cmp
jg
clc
adc
je
mov
push
movb
add
pop
or
mov
fidivrs
sub
adc
sarb
mov
sar
sbb
ret
sti
add
cmp
mov
sub
add
aaa
leave
adc
outsl
xor
inc
rolb
ret
mov
scas
mov
into
fs
ret
mov
adc
jae
inc
dec
lods
add
ret
scas
xchg
jge
add
and
cli
ret
cld
imul
pusha
pop
mov
cmp
sarb
fdivrp
mov
add
mov
enter
mov
pop
ret
flds
sbb
sbb
repz
mov
xchg
ret
xor
sbb
dec
ret
mov
cld
inc
mov
ret
iret
sbb
inc
jns
ret
out
push
mov
xor
repz
mov
into
popa
roll
mov
inc
pusha
outsb
sub
pop
movsb
fadd
mov
xchg
loope
mov
push
movsl
xchg
ficoml
mov
scas
fiaddl
xor
mov
mov
sbb
add
shl
inc
cmp
ret
inc
and
add
repnz
mov
mov
outsl
jecxz
shl
int3
jb
push
cmp
out
outsb
movsl
lcall
cld
push
out
sbb
pop
inc
mov
lds
lods
and
stc
mov
adcb
test
testl
xsaveopt
mov
shlb
sbb
pop
stc
movsl
xchg
test
xchg
call
ljmp
or
out
add
sti
xchg
mov
inc
jmp
jg
sub
mov
add
xor
xor
aad
pop
mov
movsl
ja
adc
jmp
sub
popf
or
test
xorl
jnp
cmp
cmp
xor
lods
xor
in
xor
cmp
jno
xor
mov
movsl
test
fwait
xchg
mov
push
adc
pop
clc
incl
into
cmp
test
dec
and
int3
jb
push
aas
fucom
add
out
aas
or
aad
inc
outsl
mov
push
xor
xchg
sbb
inc
outsl
data16
add
out
pop
inc
test
out
fs
cmpsl
jl
mov
out
xchg
movsl
inc
xchg
into
pop
jnp
cmp
nop
rclb
jo
mov
imul
stos
test
ljmp
dec
mov
outsb
repnz
mov
xor
dec
fistl
inc
test
in
movsl
xlat
ljmp
movsb
mov
stc
adc
xchg
inc
or
dec
xlat
popf
insb
sub
mov
mov
in
out
bound
andl
test
bound
add
sti
movsl
fmuls
inc
mov
xor
xor
icebp
in
xor
inc
pusha
xor
dec
and
pop
xchg
repnz
les
jl
xor
enter
je
inc
sub
mov
popf
and
dec
push
cmp
insl
or
jne
loop
add
or
aam
mov
cmp
sarb
movsb
adc
or
sbb
push
jmp
ret
popa
jp
sbb
js
das
cli
add
iret
test
testb
enter
adc
add
xor
scas
mov
mov
stc
push
lret
repz
pop
rcrl
and
jl
jbe
push
mov
or
jne
gs
jmp
das
aad
lahf
test
adcb
lahf
push
clc
inc
scas
shrl
ror
scas
std
jle
sbb
scas
jno
ficompl
lret
cmp
jbe
shll
mov
test
lock
add
std
rol
and
inc
fyl2x
movsl
fisttpll
dec
inc
mov
divl
gs
xchg
pusha
test
mov
xchg
ret
arpl
sahf
aaa
dec
mov
aaa
shll
fcompl
jae
or
jae
movsl
dec
test
adc
movsl
adc
aam
add
clc
mov
mov
fsubl
sar
icebp
test
sti
int3
ss
mov
lock
dec
sbb
mov
xor
pop
das
out
mov
adc
sbb
inc
jo
sbb
mov
test
mov
scas
push
adc
rolb
add
scas
orl
xchg
or
jp
dec
sar
fcomi
shr
scas
repnz
add
mov
adc
push
push
adc
mov
into
pusha
enter
nop
lcall
inc
mov
xchg
out
mov
in
add
test
xor
lcall
dec
adc
adc
in
aas
mov
jb
repz
lret
jns
notl
mov
loope
sar
cmp
out
xchg
pop
imulb
jmp
inc
or
mov
mov
mov
imul
cmp
sarb
pop
pop
add
pushf
inc
mov
sti
sbb
into
daa
call
jecxz
push
enter
cli
sub
movsb
cmpsl
adc
loop
or
outsb
mov
movsl
es
std
mulb
cld
loope
fwait
or
xchg
scas
mov
jbe
xor
jecxz
mov
sahf
and
cwtl
aam
push
xor
addl
push
sub
outsb
sub
mov
std
stos
push
push
fisttpll
sub
adc
into
imul
stos
neg
push
or
push
mov
les
in
inc
cmp
sarb
cmp
or
psubw
or
sub
daa
into
pop
imul
int
sub
or
sbb
rorl
mov
movswl
push
push
pop
mov
sub
std
mov
or
dec
mov
clc
sbb
and
cltd
sub
daa
mov
cmp
fdivs
cmc
xchg
or
xor
int
shlb
aad
cwtl
mov
ret
scas
out
push
xchg
orps
fnsave
inc
test
pop
int3
sbb
insl
in
clc
xchg
jne
dec
adc
push
in
out
pop
pusha
ret
fbld
xchg
and
movsl
inc
jbe
add
sub
jmp
xchg
test
int3
lods
sahf
inc
test
imul
xlat
sub
inc
out
sahf
mov
fwait
mov
cli
dec
inc
cmp
jecxz
stos
jl
mov
inc
test
xchg
sbb
popf
mov
or
fsubr
mov
mov
mov
pop
jnp
in
test
faddl
or
ficompl
cmp
call
add
push
pop
ds
push
cmp
and
out
std
xchg
addb
push
push
inc
pop
sarb
nop
call
scas
sbb
adc
scas
mov
imul
pop
bound
mov
pop
xchg
add
es
fists
ret
inc
out
add
jbe
sahf
jecxz
ret
adc
or
mov
or
out
sbb
dec
andb
pop
mov
call
shrl
pusha
test
pop
dec
out
sahf
fisubrs
add
jo
push
sbb
sub
outsl
vpcomuq
rcl
adc
pop
mov
pop
or
jne
xorl
mov
xchg
push
add
mov
mov
mov
add
dec
mov
xchg
dec
and
add
aas
sbb
rcll
outsl
outsl
fcompl
ret
mov
and
mov
shl
cmp
cmp
push
mov
sub
lds
daa
fs
jecxz
inc
cmp
and
add
xchg
pop
movsb
cmp
pop
ljmp
je
aam
fcmovb
stc
inc
mov
inc
or
mov
sub
lret
test
cmp
fcmovb
mov
lock
cwtl
jo
adcl
lock
clc
dec
popa
sarb
lea
cmpb
je
jnp
pop
out
aaa
mov
mov
pop
sub
add
out
stos
mov
push
xchg
mov
add
ja
jmp
mov
fsubrl
mov
les
pusha
sahf
iret
jmp
add
orl
jecxz
lods
test
mov
test
xor
scas
insb
sub
xor
dec
fadd
mov
lods
insl
out
jns
cmpsl
mov
add
jb
dec
ja
mov
mov
faddl
jle
lahf
push
xchg
cmpsb
jo
out
xor
cmp
in
shrl
fdivrs
cld
mov
sbb
rolb
in
push
pop
into
dec
mov
and
inc
jb
xchg
mov
sbb
or
dec
dec
cmpsb
addr16
lods
or
inc
mov
mov
stos
fists
ljmp
shrb
xchg
and
adc
outsb
js
scas
stos
sbb
mov
rolb
xor
xchg
movsl
aam
cld
inc
movsl
add
ret
cmp
movsl
outsb
dec
jns
jae
inc
lods
popa
out
fwait
mov
roll
mov
in
sub
insb
push
ljmp
mov
mov
mov
pop
jmp
jbe
test
jge
xadd
test
mov
cmpsb
stos
add
out
pusha
mov
jns
jecxz
insl
mov
repnz
daa
and
popa
scas
or
aam
sbb
add
xchg
iret
mov
adc
pop
femms
in
mov
insl
sbb
stc
lret
ja
adc
jmp
or
lods
inc
add
mov
shr
inc
fdivl
andl
shrl
loope
mov
rdmsr
pusha
xor
imul
test
adc
fstpt
cmpsl
push
sbb
aas
sub
mov
test
stc
jg
mov
mov
mov
pop
pop
inc
cli
xchg
cmpsl
fisubrs
mov
test
add
ror
into
cmp
outsl
lea
int3
and
arpl
jns
pop
xchg
jmp
push
into
or
ljmp
test
std
addb
xchg
xor
sbb
or
or
divb
sub
sahf
lods
outsl
clc
ss
pop
mov
fs
sbb
sub
add
pop
xlat
shrl
cs
lret
dec
iret
fdivl
addr16
test
mov
xorb
shlb
hlt
add
arpl
rcrl
sbb
add
mov
cmp
dec
das
cmc
bound
movsl
ja,pt
push
xor
sub
xorl
cwtl
or
movsb
cmpb
mov
faddl
push
movb
sahf
xor
cli
mov
jne
jle
cwtl
mov
mov
mov
and
push
add
mov
xor
mov
push
dec
add
cmc
repz
std
or
loopne
pop
mov
inc
test
inc
pop
mov
pop
pop
sarl
in
sub
push
mov
mov
in
mov
sub
mov
jp
lods
pushf
shlb
pop
test
mov
adc
inc
pop
jo
mov
mov
stc
ret
cmp
inc
outsl
mov
mov
outsl
std
clc
into
lods
inc
push
mov
pop
cltd
push
add
push
mov
int3
test
in
cmpsb
cwtl
into
fadd
lods
jb
xlat
and
push
pop
cld
pushf
stos
xorl
sbb
push
lock
das
dec
addr16
push
mov
imul
mov
cmpsl
and
dec
fs
aad
movsl
inc
adc
xchg
dec
sbb
mov
shl
jg
mov
mov
or
pop
fcoml
xor
repz
imul
cmp
pop
push
or
inc
movsb
test
shll
sarl
outsl
fnstsw
jnp
mov
dec
push
or
cmp
clc
cli
xchg
and
adc
addl
cmpsl
add
movsl
sub
jbe
clc
cltd
cmpsl
popa
xlat
mov
jbe
xorb
cltd
rorl
insb
cmc
push
in
call
icebp
pop
push
mov
into
dec
jo
cwtl
mov
ss
inc
mov
add
je
sub
sti
inc
dec
sbb
cld
adc
cmp
sbb
mov
or
jne
stos
fdiv
test
cmp
hlt
inc
ret
sbbb
sub
sbb
or
jecxz
test
aaa
ja
push
lcall
ret
jl
mov
sbb
ret
dec
add
push
dec
sub
sbb
pop
mov
fnstenv
lcall
mov
test
ss
cmp
insl
in
mov
sub
jecxz
jo
jnp
jecxz
add
dec
lods
jge
scas
insb
mov
movsl
fsubs
inc
enter
aaa
rcrb
stos
pop
or
add
popa
into
mov
ficompl
xor
icebp
push
adc
sahf
xchg
ficompl
aaa
clc
jo
sub
incb
push
repnz
pusha
sub
adc
out
mov
dec
jno
jnp
push
mov
jnp
ret
sbb
loopne
les
push
repz
dec
fstl
mov
mov
lret
out
push
cmp
dec
jae
mov
push
mov
mov
repnz
push
push
sahf
clc
jp
mov
adc
xor
stos
mov
in
mov
cwtl
addr16
out
stc
pop
scas
xor
sub
std
das
dec
mov
outsb
repnz
add
test
aad
movsl
jge
mov
push
jnp
cmp
mov
test
dec
mov
mov
daa
fcomp
add
loopne
mov
jbe
pop
mov
dec
adc
ljmp
loopne
popf
push
mov
mov
adc
into
popf
imul
cwtl
inc
lcall
and
into
outsb
add
insl
test
ss
jp
addb
sub
in
inc
or
fnstenv
xor
xchg
faddl
ret
repnz
cs
test
es
nop
push
mov
fcmovnu
mov
loop
dec
fldl
inc
lret
out
push
cmp
mov
pop
push
mov
dec
mov
mov
xchg
aas
sub
mov
dec
fptan
jae
mov
test
mov
mov
add
mov
inc
cmp
add
fldt
dec
xchg
add
scas
jne
cmp
out
out
xor
mov
inc
loopne
sub
or
cvtpi2ps
iret
ljmp
jp
mov
rcl
fcmovnu
ficoml
test
add
sub
stc
stos
and
fsubs
enter
stc
test
pusha
mov
stc
fildll
push
cmc
xchg
inc
shl
in
movsl
stos
jmp
pop
in
inc
add
int
cmp
add
mov
mov
add
add
mov
inc
jecxz
nop
sbb
add
cltd
test
nop
lock
or
and
lods
or
inc
inc
mov
inc
mov
lahf
movsb
das
popa
test
adc
aam
negb
rol
lods
testb
out
mov
lret
stos
aam
in
daa
gs
test
mov
stos
lods
cwtl
aas
adc
push
out
jp
cmc
cmp
hlt
stos
ss
sbb
cmp
and
popa
jne
mov
sbb
cmp
adc
jmp
bound
push
push
fdivl
adc
sti
mov
bound
cmp
dec
xchg
lcall
repz
test
scas
add
jns
les
cli
imul
push
out
mov
lret
loopne
mov
mov
mov
adc
ds
js
stc
aaa
lcall
test
adcl
movsb
push
lods
mov
idivb
mov
fdivl
scas
jl
mov
loopne
sbb
loop
decb
inc
popa
movsl
or
or
mov
xor
inc
dec
pop
mov
mov
imul
icebp
sub
jae
jp
add
push
pop
mov
out
stos
jecxz
inc
fsubrs
fs
inc
add
dec
lret
mov
push
mov
lret
dec
sub
int
rolb
setp
cmp
push
pusha
pop
cmpsb
fs
shll
add
sbb
add
adc
flds
test
pop
es
sbb
ljmp
loopne
dec
movsl
mov
cltd
lods
sbb
ret
and
cwtl
mov
pop
out
inc
jge
mov
and
xchg
mov
xor
push
dec
push
mov
nop
and
xchg
inc
jne
pop
inc
add
xchg
inc
movsl
xchg
add
movsl
sbb
roll
popa
mov
jae
adc
int
or
sahf
dec
not
je
cld
lret
int3
push
jne
dec
fstps
pop
cmp
outsl
jnp
jnp
cltd
mov
stos
repnz
mov
and
push
and
les
mov
lock
jne
cmp
pop
adc
lds
in
mov
inc
mov
sbbl
faddl
sbb
mov
mov
aam
fisttpl
fcoms
hlt
movsb
stc
inc
or
dec
jb
mov
imul
int3
mov
das
push
loop
inc
xchg
sub
insb
mov
test
jb,pt
out
ret
outsb
mov
mov
push
clc
add
shl
xor
mov
mov
rclb
and
sbb
cwtl
loop
fsubs
test
jg
mov
push
jb
xor
dec
movsb
mov
mov
test
pop
push
push
setb
gs
xor
orb
mov
stos
mov
sub
jmp
into
xchg
cmp
xorb
and
mov
add
xor
out
mov
ljmp
mov
popa
pusha
nop
arpl
test
cmp
push
xchg
clc
lods
ret
test
ret
std
push
fsubrs
out
inc
xor
jecxz
mov
push
imull
mov
mov
outsl
jge
test
cmpb
jb
inc
push
sbb
xor
sub
movsl
lcall
shr
ss
mov
jecxz
outsl
mov
jo
mov
loope
repz
pop
sub
add
or
jecxz
inc
cwtl
popa
mov
out
clc
mov
mov
in
mov
inc
jb
addr16
xor
smsw
xchg
fstpt
or
rorl
loopne
sar
dec
sahf
lods
inc
pop
sub
imul
mov
scas
divl
adc
mov
std
mov
sarb
popa
sub
daa
or
adc
subb
push
orb
push
push
stos
sub
out
enter
out
xchg
cwtl
mov
lods
adc
mov
cmpb
mov
rcl
imul
mov
inc
mov
cli
mov
jmp
pusha
add
fwait
mov
cmpb
lea
xchg
jecxz
loop
dec
int
xor
les
lret
add
jae
pop
jle
mov
jmp
sbb
pop
je
es
sarb
loope
test
outsb
mov
add
fldl
cmc
mov
inc
out
push
push
pop
sub
xchg
mov
mov
xchg
pop
sub
mov
test
push
addr16
xchg
xchg
cli
insl
popa
loope
shll
rcrb
inc
adc
jg
xchg
test
mul
mov
sbb
mov
or
pop
daa
push
test
repz
lods
clc
cmp
jno
xchg
loop
sbb
popa
mov
mov
mulb
cmp
out
adc
fldt
popa
rcl
lods
rcrl
mov
jp
lcall
push
inc
mov
shrb
ret
jecxz
push
push
test
mov
xor
and
inc
addr16
insb
add
mov
mov
addr16
stos
cmp
xchg
or
dec
fdivl
jns
leave
sti
cmp
and
mov
sti
test
xchg
data16
inc
aas
movsl
push
not
mov
mov
xchg
jp
fstp
jg
incl
movsl
sub
cwtl
int3
inc
popa
add
sti
mov
sahf
pop
movsl
gs
and
mov
fidivl
push
pop
scas
nop
daa
repz
inc
cltd
inc
xor
and
xor
mov
add
dec
jns
sub
daa
or
xchg
out
push
cmpsb
fidivs
cmp
vmwrite
push
pop
cwtl
int3
mov
imul
jmp
push
movsl
icebp
push
add
or
daa
test
mov
aas
gs
cmp
fcmovbe
cwtl
fisubrs
jle
pop
bound
pop
addr16
lock
adcb
and
adc
adc
sbb
sti
xor
adc
and
mov
xchg
and
mov
push
test
shlb
mov
loopne
fwait
and
or
leave
int3
lods
imulb
sub
fbstp
jecxz
inc
in
mov
jne
adc
scas
mov
into
movsl
popa
mov
xchg
and
mov
mov
les
mov
dec
add
pop
mov
xchg
mov
stos
aas
enter
fstl
cmp
and
inc
push
nop
sbb
add
jl
xchg
xlat
aaa
ds
in
pop
fisubs
mov
mov
xlat
mov
push
mov
pop
lea
pop
shl
dec
mov
cmpb
cmp
or
cmp
les
mov
cli
jbe
clc
das
hlt
mov
and
dec
mov
fcmovbe
add
mov
movsl
push
jae
pop
mov
xor
push
and
jmp
int3
xchg
jo
adc
push
gs
fcoml
jne
push
mov
fcoml
mov
sub
movsl
pop
shrl
fidivl
xor
and
cmp
mov
push
sbb
mov
sbb
mov
inc
sbb
cmp
stos
jns
orl
in
cmc
cmp
inc
pop
fcmovnu
lods
aaa
mov
xchg
mov
cmp
std
xchg
aad
out
leave
mov
jae
std
shll
xchg
push
bound
pusha
testb
testb
and
push
mov
mov
fsubp
mov
in
xchg
notb
add
cmp
dec
adc
sub
and
out
bound
cld
push
roll
out
push
mov
mov
pusha
push
les
dec
jns
andb
add
inc
inc
cmp
mov
cs
movsl
cmp
iret
std
inc
dec
sbb
das
inc
jo
mov
push
test
xor
pop
pop
pop
je
xor
jnp
mov
fcoms
dec
mov
es
mov
enter
js
int3
inc
cs
movsb
sub
gs
jns
cmpsl
push
jge
rcrl
scas
ss
mov
or
fbstp
mov
mov
add
and
dec
divl
out
out
pop
cmpb
mov
and
mov
mov
insl
inc
jle
pop
mov
push
mov
xor
test
mov
es
mov
mov
pop
stos
mov
ss
repz
lret
sbbl
mov
pop
callw
xor
in
pop
fs
or
jmp
pop
adc
repz
push
es
and
into
imul
mov
sti
jecxz
sahf
cmpsl
js
mov
lret
mov
fimuls
mov
fbld
mov
pop
insl
inc
lcall
js
ds
add
mov
or
dec
mov
test
das
xchg
dec
mov
jae
mov
inc
and
popa
or
mov
int
xchg
out
stos
lcall
mov
test
push
outsb
mov
xchg
push
jg
mov
push
call
jae
sbb
lods
scas
push
inc
xor
xchg
push
fisubrs
mov
bound
not
cli
int3
lcall
jo
test
outsl
cmp
jp
push
imul
inc
jno
adc
scas
cmc
lods
movsl
fcompl
mov
xchg
and
in
cmpsl
xchg
cmp
inc
jmp
mov
loop
add
test
cmp
movsl
pop
add
xchg
popf
add
mov
dec
ror
test
pop
pop
sti
mov
stos
jnp
pop
mov
lcall
jle
cwtl
mov
insl
cltd
lea
cmp
xchg
xchg
arpl
lret
call
aaa
lret
out
outsl
mov
cmp
fdivl
cmpsl
movsl
push
fdiv
je
adc
popf
mov
mov
aam
xchg
and
or
sbb
iret
xchg
jecxz
or
aaa
sti
popa
inc
cltd
loopne
popf
pop
jns
pop
push
test
mov
pop
hlt
shll
imul
fnstenv
dec
xchg
sahf
das
lods
xor
test
pop
adc
xor
iret
ds
and
or
mov
imul
lea
outsb
inc
mov
cmp
iret
adc
push
pop
sbb
repz
dec
pop
loope
jno
add
pusha
aaa
test
dec
cmp
int3
or
fisubrs
xchg
jae
aaa
arpl
push
cltd
xchg
mov
jl
push
sub
cmp
das
shll
cmp
xchg
mov
ret
adc
movd
adcb
into
int
fucomi
int3
sub
push
andb
xchg
mov
or
xor
and
in
test
add
frstor
std
xchg
cltd
js
or
pop
outsl
xor
or
outsl
std
dec
sub
mov
adc
imul
es
mov
xor
push
ret
fisubs
clc
out
xchg
jns
xor
test
into
jno
inc
test
mov
jmp
and
mov
pop
mov
xor
jp
test
lahf
mov
cmp
jecxz
ss
xor
fsubrl
dec
push
push
adc
mov
fs
cmp
mov
into
jmp
adc
pop
add
inc
push
pusha
push
shlb
fwait
sub
cmc
push
xor
mov
inc
movsl
push
inc
scas
mov
lea
pop
inc
sub
dec
insb
int
inc
js
add
insb
iret
imul
pop
mov
inc
imul
lcall
je
sbb
pop
xchg
mov
testl
xor
mov
jp
sbb
mov
and
cltd
or
je
fdivrs
mov
xchg
push
push
outsl
mov
sub
js
inc
es
mov
mov
sbb
mov
clc
movsl
jb
adc
sub
or
push
insb
pop
cmpsl
dec
adc
jmp
clc
inc
xchg
xchg
mov
sub
xor
cmc
push
and
inc
fs
insb
mov
adc
mov
cli
dec
lahf
lret
push
inc
jb
movsb
add
push
cmp
sub
mov
pop
addr16
gs
movsl
sbb
xchg
mov
adc
stc
lcall
movsl
or
test
xor
es
cmp
out
into
ret
jg
mov
jl
cmpb
stos
or
and
out
mov
outsl
push
movsl
cli
cmp
mov
dec
subb
inc
and
movsl
or
sbb
lods
daa
ja
movsb
push
pop
addl
lret
dec
dec
test
repz
aas
loopne
fldenv
jmp
ljmp
arpl
outsb
addb
sub
test
and
pop
jns
cli
and
xchg
insb
inc
mov
inc
or
ficompl
movsb
mov
mov
sub
stos
push
clc
test
xchg
jg
and
cmp
inc
xchg
pop
out
push
insl
popw
mov
frstor
in
mov
and
xor
cld
push
sbb
sbb
out
insb
sub
movsl
sbb
fstpl
iret
rcl
mov
jecxz
pop
bound
sub
int3
mov
fxch
mov
or
xor
into
push
sub
out
or
sub
add
xchg
inc
mov
rcl
inc
popf
xor
lods
fimull
jno
sbb
jg
cltd
and
sbb
sub
sbb
mov
mov
sub
in
jle
cmp
xlat
jo
add
xorl
and
into
bound
inc
push
mov
pusha
mov
jmp
lock
pop
jp
pusha
mov
or
sarb
testb
mov
lds
pop
pop
push
iret
adc
cmpsl
clc
test
stos
jnp
mov
lahf
pop
mov
and
imul
mov
cvtps2pi
mov
iret
outsb
inc
aas
pop
pop
inc
xchg
jmp
jmp
pop
inc
or
int3
xchg
shlb
notb
inc
cmp
shrb
movsl
smsw
xor
sub
mov
xchg
mov
inc
add
push
pusha
add
cwtl
mov
xor
pop
add
dec
movsb
test
mov
add
movsl
lock
add
mov
scas
dec
pop
lods
sbb
jnp
test
jle
mov
call
inc
daa
sbb
outsb
push
test
xchg
popa
cld
in
js
insl
dec
cld
mov
dec
int
fimull
mov
movb
sbbb
lods
fcompl
xchg
pop
aas
into
or
int
sbb
jl
adc
add
push
cld
mov
mov
std
and
mov
mov
mov
ds
cmp
pop
cmp
sbb
stos
sbb
and
mov
jle
mov
pop
lock
loope
push
ds
mov
sahf
xchg
cld
cltd
xor
mov
and
shlb
out
add
xchg
movsl
sbb
fucomip
fcoml
jno
xor
stos
xor
or
enter
out
iret
aad
dec
js,pt
push
or
mov
test
jecxz
mov
fcom
bound
pop
cmpsl
sub
mov
out
loope
es
mov
jb
xchg
cld
mov
stos
mov
cmc
jle
pop
mov
pop
push
sub
sbb
cli
mov
xor
mov
shrb
xor
mov
rcr
lods
int
stos
or
sbb
adc
aaa
or
mov
pop
in
xchg
cmp
push
clc
or
imulb
jo
xor
sti
fwait
ret
pop
xor
jmp
sti
sub
jb
add
popa
sbb
out
jmp
jecxz
in
ret
sbb
test
xor
out
cltd
push
pop
push
mov
dec
push
sub
imul
mov
push
jo
push
fisubl
xor
outsl
test
out
movsl
pop
mov
sbb
lock
sbb
icebp
movsl
stc
cmp
dec
into
ret
mov
cmp
jo
test
and
mov
sub
mov
inc
or
fnstcw
jb
adc
cmpsl
jle
int
negb
sub
xchg
stos
mov
adc
addr16
out
add
insl
dec
xor
loopne
jl
cmp
rorl
pmulhw
in
lods
jbe
popa
addb
les
adc
shlb
xchg
repnz
jmp
fdivl
test
out
shrb
bound
daa
jnp
jae
out
aaa
dec
push
inc
mov
clc
sub
lea
or
in
dec
mov
pop
leave
fnsave
add
movsl
jo
and
lods
jno
scas
sub
and
inc
mov
push
mov
push
cltd
jae
fstpt
js
in
sbb
test
stos
and
imul
orb
mov
pushfw
pop
test
stos
loope
ds
adc
nop
pop
sub
inc
or
jmp
push
movsl
pop
std
sbbb
sbb
xchg
sarb
inc
xchg
mov
jmp
mov
push
fdivs
mov
lret
sub
jbe
out
outsb
add
sub
xchg
or
xchg
jne
push
andb
sbb
mov
pop
lods
pusha
movsl
mov
je
int
inc
mov
clc
mov
test
ret
mov
jnp
fisttpll
sub
jb
mov
idivb
add
xor
mov
scas
mov
loop,pt
je
cmp
mov
sarl
mov
add
addr16
inc
nop
or
sbbl
flds
push
jl
hlt
clc
xchg
insb
or
mov
jmp
stc
test
scas
jp
data16
add
jnp
repnz
je
lods
lahf
pop
lret
mov
sub
test
ficomps
mov
add
pop
test
cltd
sbb
ss
inc
in
sahf
cwtl
enter
out
jns
cmp
ljmp
xor
inc
popf
into
add
aaa
inc
loopne
mov
dec
xchg
or
scas
imulb
loopne
scas
mov
mov
out
inc
adc
dec
shr
aaa
mov
pop
sbbb
dec
out
ljmp
xor
movsl
push
pop
js
es
shll
push
adc
adc
sti
push
mov
scas
sbb
lds
mov
imul
adc
imul
mov
adc
fstl
outsl
jp
inc
adc
adc
packuswb
and
mov
or
aas
jbe
ret
add
cmp
mov
mov
aam
or
movsb
cmp
or
push
push
lahf
js
int
cwtl
mov
cmp
ss
and
mov
out
xchg
and
push
fdivrs
xlat
mov
mov
clc
js
xor
xor
int
test
idivb
es
mov
inc
push
shl
iret
scas
in
adc
out
xchg
mov
xchg
sti
in
mov
jl
ret
mov
test
mov
push
in
fwait
aaa
mov
stc
movsl
sbb
shll
jo
imul
imul
cmp
pop
outsb
or
cmp
push
lods
insl
lcall
inc
xor
andl
aam
out
sbb
sarl
cmp
in
repnz
ljmp
out
sub
sub
jg
mov
xor
dec
jo
push
dec
test
daa
add
sbb
icebp
popa
sbb
les
ret
mov
andl
inc
mov
mov
add
inc
mov
movsl
in
fisubrl
mov
es
xchg
and
cmp
ds
cli
ss
sub
jecxz
jno
adc
jne
xchg
pushf
push
mov
or
mov
pop
pusha
mov
notb
push
xlat
es
add
in
adc
jp
stc
add
popf
out
das
cmp
gs
into
xchg
push
pop
xlat
jo
ss
and
mov
xchg
int3
push
negb
movups
dec
dec
into
inc
xlat
scas
pop
in
sub
pop
daa
es
mov
rolb
movsl
scas
fnsave
push
cltd
sub
jo
into
scas
mov
ja
scas
mov
pop
jb
aaa
repnz
in
icebp
mov
bound
mov
mov
inc
inc
insb
loop
mov
push
stc
cmp
adc
int
test
mov
iret
ss
jo
jmp
xchg
add
and
stos
out
pop
jns
pop
sbb
das
cld
subb
inc
cmp
or
std
fnstsw
cs
test
insb
movsl
andb
das
inc
mov
ss
pusha
test
jbe
cmp
scas
sahf
stos
fcmovu
dec
jp
mov
popa
sub
out
fwait
stos
rcr
adc
mov
popa
arpl
mov
sub
mov
inc
mov
push
sbb
inc
adc
fisttpll
fs
test
mov
xchg
aad
mov
lock
xor
adc
mov
adc
xchg
add
jle
out
mov
insb
das
dec
dec
loop
mov
das
out
mov
scas
loope
push
gs
sub
dec
jo
sub
bound
shlb
sahf
mov
push
mov
mov
movb
add
dec
out
mov
scas
mov
push
and
mov
stc
inc
ret
fsub
mulb
js
inc
test
mov
sub
cmp
arpl
enter
adc
xor
jo
insl
xchg
shrl
add
sub
fnstsw
cmp
cmpsl
mov
lahf
out
jno
call
lods
cmp
and
dec
imul
push
adc
lcall
and
sub
xor
ja
push
xchg
repz
out
leave
xchg
sti
in
pop
sub
push
cmp
jp
lods
dec
out
aaa
jmp
mov
orb
int
or
lret
sarl
jle
and
mov
xchg
pop
or
addb
and
mov
out
sbb
or
data16
jg
iret
mov
xchg
int
jns
lea
cwtl
jnp
fdivrl
dec
aaa
mov
push
sbb
push
shrl
xor
sbb
arpl
movsl
outsw
xchg
sbb
mov
mov
movsl
stc
sbbb
push
jo
adc
jbe
js
ds
pop
movsl
adc
pop
les
mov
js
insb
mov
das
in
inc
ds
inc
push
and
imul
inc
push
loopne
rcl
xor
mov
addb
out
jae
es
rcr
lds
or
sbbb
popa
fcmovnb
adc
adc
cmp
sub
mov
xor
fidivs
lods
jbe
jmp
pop
xorb
sbb
test
outsl
inc
push
adc
sub
cmp
sbb
andl
add
lods
loopne
mov
arpl
mov
push
lea
sub
stos
sub
outsb
sti
sbb
xlat
inc
mov
popf
jb
rclb
cld
fistl
sbb
es
pushf
lea
adc
push
fiaddl
pop
mov
add
cmp
les
mov
out
xor
add
xchg
or
ljmp
push
jae
cwtl
inc
push
cmp
psubd
test
cmp
ret
out
outsl
mov
mov
pop
inc
shl
sarl
call
psrlq
mov
xlat
in
xor
mov
jge
shlb
mov
xchg
dec
cs
xor
push
aam
jbe
repz
push
jmp
push
push
add
cltd
jbe
jmp
in
cmp
leave
dec
xor
mov
insb
jne
cmp
inc
xchg
outsl
rcl
xchg
xor
addr16
popf
push
test
cmp
fistl
adc
lahf
xchg
loopne
adc
fdivrl
dec
mov
jg
push
and
loope
cld
mov
faddl
dec
jle
popf
inc
call
outsb
ss
sbb
imul
fwait
clc
lcall
into
cltd
pop
xchg
push
cmp
sbb
cmp
xor
sub
ret
test
sarl
lods
mov
sarb
xchg
add
adc
movsl
xchg
test
js
dec
cmp
aaa
add
notb
add
and
xor
test
fisubl
xchg
test
clc
xchg
and
pop
mov
jmp
mov
lock
scas
adc
pop
inc
popa
ljmp
dec
repz
js
add
arpl
xlat
lahf
jecxz
cmp
stc
pusha
mov
mov
or
fstpl
popf
mov
sub
and
cmp
dec
ds
lea
je
mov
jns
pop
jmp
cltd
ret
lret
xchg
dec
cmpsl
mov
push
das
fisubs
sbb
mov
sbbb
popa
or
imul
and
mov
scas
fimull
add
int
inc
movsl
or
outsl
cmpsb
ss
pushf
jmp
sub
mov
out
or
fmulp
neg
dec
lret
mov
movsl
cmp
imul
pop
scas
and
xor
push
dec
in
add
addr16
dec
ret
push
es
flds
sub
cmpsb
ds
aad
loop
rorb
jle
insl
call
pushf
sub
fcoml
jbe
or
xor
inc
out
test
lret
out
clc
lahf
fs
cmp
push
test
out
push
sub
dec
or
arpl
int3
out
xchg
out
mov
imul
xchg
nop
pop
mov
add
cmpsb
xor
jne
scas
sbb
inc
into
jl
cmp
pop
adc
mov
push
mov
dec
sub
dec
inc
jb
push
adc
imul
fcomi
testl
jp
inc
jge
into
xchg
push
and
test
xchg
mov
adc
xlat
mov
mov
jecxz
adc
test
nop
mov
cmp
mov
jle
out
mov
clc
iret
add
inc
lock
mov
fsubl
shr
js
xchg
push
cmpsl
pop
andl
mov
or
jp
orb
sbb
or
mov
xchg
enter
sbb
arpl
shlb
push
pop
cli
mov
test
inc
sti
or
and
sub
pop
push
mov
pop
mov
add
movsl
cltd
sbb
cmp
dec
mov
sbb
and
xor
mov
loop
xor
add
push
mov
xor
cld
test
pushf
add
jge
sahf
jae
mov
fwait
js
into
cltd
inc
push
insl
lds
test
jne
pop
xchg
mov
fimull
fst
mov
cmp
sbb
decb
cmp
add
or
jns
subl
inc
cmp
inc
add
mov
jnp
cmpsl
push
mov
pop
fs
jl
or
sarl
pop
or
stos
mov
add
mov
jecxz
addr16
push
out
and
test
mov
pop
imul
mov
test
push
pop
jecxz
leave
ret
rorb
aas
fildll
mov
out
pop
cmpsl
adc
cmp
cmp
int3
cmp
stos
test
imul
ds
pop
aam
mov
ljmp
lods
scas
adc
loope
mov
sar
cmp
sub
daa
adc
add
loopne
les
xor
cmp
mov
movsb
jnp
or
sub
mov
das
inc
sub
stc
push
shll
inc
push
jl
mov
pusha
lods
jo
push
cmpsb
mov
mov
in
mov
push
mov
ret
push
dec
rorl
xchg
pop
jl
inc
in
pushf
repz
sahf
xchg
inc
out
mov
sahf
pusha
js
xor
es
cmp
jns
fs
inc
mov
add
and
cmp
or
addb
fucom
popa
daa
mov
mov
std
push
inc
sbbl
dec
sahf
out
inc
gs
mov
add
and
into
cli
orl
xor
jle
test
xchg
inc
jno
stos
inc
jno
addr16
nop
inc
jnp
test
lds
or
jge
add
mov
enter
mov
cmp
or
in
jo
fs
pusha
mov
lret
das
adcb
mov
popa
jae
fildll
mov
add
mov
iret
jecxz
xchg
push
cmp
push
push
inc
add
movsl
subl
mov
fs
xor
mov
xchg
enter
mov
adc
adc
adc
nop
stos
mov
add
ret
test
movsl
popf
and
into
pop
push
nop
int3
shl
xor
fwait
mov
pop
jg
push
in
mov
idivb
out
out
xchg
sahf
out
and
lods
ja
pop
mov
popa
xchg
aaa
mov
loopne
dec
jo
addr16
adc
xlat
cmp
inc
xor
pop
insb
ret
fsubs
js
sbb
loop
ljmp
int3
sti
cmc
movd
pusha
movsl
xchg
xchg
fs
aas
out
sub
mov
mov
dec
pop
loopne
fbstp
dec
push
pop
dec
lcall
sbb
sbb
push
inc
xchg
cltd
das
push
rcrb
movsb
push
dec
sbb
jb,pt
sbbb
aam
or
std
mov
lods
rclb
add
sbb
imul
sahf
addr16
das
push
xor
or
movsl
pop
out
or
lret
cmpsb
inc
sbb
fldenv
push
loop
mov
mov
fistpll
dec
andb
mov
scas
jbe
jmp
jae
dec
test
daa
in
lahf
in
jmp
cld
mov
loop
scas
pop
in
call
loopne
out
popa
rcr
fiaddl
ds
mov
cmc
stc
or
iret
cli
fmull
ret
lret
inc
sub
test
xor
sub
sti
xchg
mov
jge
fwait
lds
adc
ffree
inc
mov
jp
addr16
sub
andb
mov
out
pusha
pop
mov
or
push
addr16
out
rorl
mov
cmp
jge
scas
popf
pop
movsb
xchg
jl
dec
insl
cmp
test
pop
mov
out
lret
lret
movsl
dec
cmp
cli
js
loop
shrb
mov
lds
pusha
testb
push
in
fs
bound
cltd
mov
mov
mov
sarb
std
or
inc
lods
mov
les
mov
or
pop
or
inc
andl
adc
mov
jne
or
sbb
outsl
lret
xchg
cwtl
scas
testl
jns
fs
frstor
mov
inc
adc
adc
pop
or
fidivrs
dec
dec
daa
xor
or
in
jns
js
ljmp
sbb
addr16
shlb
inc
cmp
in
add
lock
add
ljmp
leave
xor
inc
cmp
test
mov
xchg
js
jnp
pusha
test
insb
sbb
inc
pop
mov
imul
in
inc
ret
dec
push
nop
in
xor
jle
pop
add
xor
mov
loop
loopne
mov
xchg
cmp
orb
mov
popa
inc
fldt
push
lods
or
test
mov
inc
inc
scas
je
xchg
mov
rcr
imul
add
orb
cs
movsl
popf
lret
xchg
inc
mov
mov
xor
inc
gs
mov
test
outsb
hlt
aad
lcall
push
daa
shrb
sub
mov
inc
test
xlat
js
gs
lcall
cmpsl
push
pop
mov
xchg
mov
xor
xlat
sti
xchg
push
ljmp
push
mov
cmp
ljmp
rorb
ljmp
xor
cltd
shrl
jbe
inc
out
and
js
cli
mov
and
xor
xchg
movsl
mov
movsl
repnz
out
xchg
sbb
iret
cmp
jb
subb
jecxz
or
pop
testb
rorl
movsb
loope
ds
lods
call
aaa
jns
sub
icebp
inc
mov
in
mov
xor
inc
scas
jbe
mov
negl
jae
jo
xchg
daa
adc
ror
mov
loopne
rorl
test
push
adc
les
and
cmp
add
xor
mov
inc
fadd
stos
mov
push
or
lods
fdivrl
cmp
cmc
mov
sub
xor
mov
or
xchg
into
push
andb
loop
out
outsb
push
inc
imul
cmp
adc
xor
mov
sarb
out
mov
shl
rcr
movsl
leave
xchg
add
icebp
xorb
cmpsb
je
sub
popa
popa
sub
sbb
js
cmp
xchg
mov
andl
popa
add
addr16
xlat
cwtl
bnd
rcrl
xchg
cli
mov
xor
pushf
jmp
pop
dec
push
test
pop
inc
jge
mov
sub
push
mov
adc
les
fsub
das
mov
aad
push
shlb
xor
mov
jl
pusha
add
lret
clc
dec
lock
cmp
add
cmc
test
test
dec
leave
iret
clc
push
mov
test
sbb
cmp
dec
out
fidivl
sub
dec
or
pop
inc
or
adc
jns
mov
mov
sbb
dec
cmp
into
orb
and
pop
inc
movsl
fnsave
test
add
int3
es
test
out
repnz
imul
mov
jle
or
sub
adc
sub
xor
fstl
or
out
cmc
enter
cmpb
sbb
mov
bound
pop
push
aas
test
dec
push
lods
and
mov
mov
xor
xchg
int3
adc
mov
imul
movsb
mov
dec
subb
jecxz
push
inc
fimuls
into
xchg
mov
shll
out
jecxz
test
movsb
inc
sub
fwait
lds
sub
andps
divl
dec
inc
jecxz
mov
cwtl
mov
push
aam
mov
popl
adc
lcall
in
jae
mov
and
lea
movsb
mov
push
dec
sbb
cmp
icebp
xorl
loopne
jmp
outsb
outsl
push
cmpb
orb
and
mov
cld
cs
shld
lods
mov
push
cwtl
mov
mov
mov
adc
mov
pushf
das
rcrl
push
cmp
mov
int3
adc
adc
xchg
movsb
mov
out
cwtl
mov
push
ja
fnstcw
cmp
loopne
into
fucomp
xchg
imul
push
inc
popl
je
sbb
enter
not
jmp
out
push
adc
pop
adc
into
mov
mov
sub
mov
mov
pop
or
ret
imul
jne
xchg
in
push
outsl
cmpsl
xchg
popa
jbe
loop
ret
or
dec
mov
stos
mov
cmp
mov
xor
xor
imul
insb
mov
inc
xchg
xor
sbb
mov
jb
xchg
xchg
sbb
cli
adc
mov
dec
or
xchg
lret
scas
movsl
mov
adc
pop
imulb
fdivrs
jecxz
inc
pop
xlat
cmc
cmp
and
lcall
mov
insl
cs
add
dec
daa
test
movl
jl
insb
mov
pusha
sbb
leave
pop
mov
add
jle
cli
sbb
sbb
les
xchg
jl
jno
pop
sarb
icebp
lock
sarb
push
add
push
xchg
shlb
daa
jb
sarl
xor
push
js
xchg
aam
jp
lret
fcmovb
into
and
stos
mov
in
jb
sbb
add
or
mov
movsl
les
iret
cwtl
out
cld
dec
cmp
xor
mov
or
jp
or
shll
add
dec
or
xchg
mov
lret
cmp
data16
nop
lods
movsl
fidivl
daa
jns
sub
pop
es
neg
std
and
test
repz
mov
loopne
in
dec
sub
add
sti
cwtl
push
inc
dec
int3
jl
nop
mov
pop
xor
pop
frstor
and
xchg
mov
sbb
adc
inc
cltd
xorl
movb
imul
je
add
cld
mov
fstpl
xor
adc
jb
stos
popl
rclb
sbb
fsubl
faddl
inc
mov
pop
cmp
push
lret
jo
cmpsl
addr16
push
jnp
ja
jns
mov
pusha
bound
mov
in
and
adc
movsl
popf
xchg
jb
arpl
jbe
mov
mov
sub
mov
and
lret
arpl
mov
xchg
push
pushf
shll
jne
out
add
sahf
fstpt
push
jb
and
ret
add
cmp
rcr
pop
lods
mov
xor
out
pop
sbb
lret
add
fs
out
add
adc
imul
bound
mov
fstpl
ljmp
jge
mov
stos
pop
xchg
xor
scas
jbe
out
js
adc
imul
pop
push
roll
inc
mov
push
leave
pop
xorb
mov
test
jo
iret
movsl
and
jo
mov
cmp
fsubr
add
mov
dec
mov
pop
pop
lcall
xor
imul
cmp
iret
ss
fwait
outsl
sbb
dec
dec
mov
or
jecxz
sub
jle
mov
mov
ss
mov
adc
pop
xchg
cmc
rclb
rcrl
test
test
test
fdiv
inc
ss
sub
xorb
inc
out
int
popa
jge
popf
test
iret
xchg
lea
scas
std
cli
xchg
inc
sub
inc
bt
mov
popf
sub
adc
cmp
js
les
cmc
cltd
jne
jmp
or
cmp
and
xchg
xchg
dec
decb
jno
lret
mov
adc
insl
cmp
je
mov
movsb
pop
mov
adc
xchg
mov
loopne
dec
mov
fs
lret
pop
cmp
jns
stos
or
pop
xchg
roll
jecxz
sub
pusha
xchg
insb
sti
stos
jp
mov
inc
test
and
rorl
inc
jns
loope
lcall
jmp
xor
sbb
pop
insb
xor
adcb
push
cld
xorb
scas
jp
cmp
xchg
insb
andl
insb
ret
inc
push
cli
fs
ret
xchg
testb
push
loope
mov
cmp
and
push
lods
lods
ret
dec
xor
iret
ret
add
push
jbe
mov
inc
push
cmpsb
xor
ret
popf
flds
mov
inc
lea
ret
mov
add
jle
pop
test
mov
push
inc
mov
ror
dec
iret
ret
js
jg
jle
sub
loopne
stos
ljmp
sbb
cli
ss
xchg
mov
in
xchg
lods
pushf
inc
ret
lock
sub
sbb
aaa
stos
mov
push
cmpsl
cmpsb
stos
clc
add
fdivs
test
lods
outsl
je
rcll
cmpsl
inc
nop
sbb
fs
and
lods
mov
ret
mov
movsb
mov
inc
loop
js
enter
pop
inc
test
lret
scas
xchg
lret
ret
xor
je
imul
mov
in
add
xlat
cmc
sbb
push
ret
sbb
and
lret
adc
cmpsb
jbe
ja
lock
adc
arpl
imul
sbb
sbb
and
sti
mov
pop
movsl
mov
adc
hlt
ret
push
and
xor
mov
jl
xchg
and
pop
stos
cli
inc
test
and
enter
add
adc
lea
test
lods
add
sarb
bound
pop
cmp
push
aas
rclb
stos
aad
fiadds
xor
jbe
stos
lret
in
sbb
in
jp
insb
mov
jecxz
movd
mov
fists
imulb
orb
ror
jo
mov
cltd
pop
ss
fnstcw
add
insb
mov
jbe
lcall
adcb
aam
popa
out
push
stc
jmp
orb
sub
aam
pop
mov
out
inc
xor
sti
add
nop
enter
adc
fyl2xp1
fisubs
rcrl
pop
repnz
test
fcomps
jbe
test
sub
rep
xchg
push
pop
in
mov
jno
popf
loop
testb
lods
test
add
sbb
mov
ljmp
mov
sbb
scas
jge
dec
xchg
sbb
add
jo
push
int
xorb
xor
outsl
js
jecxz
add
dec
inc
enter
xchg
jl
into
sbb
push
movsbl
ds
out
std
xchg
inc
sbb
mov
and
pop
jecxz
test
loope
xchg
mov
lds
dec
mov
inc
movsl
adc
imul
call
push
xchg
adc
xchg
push
add
pop
test
xor
mov
js
or
mov
mov
mov
bound
cltd
jge
subb
andl
imul
add
test
inc
lea
hlt
out
push
mov
sub
adc
dec
out
jnp
mov
rcrl
fmull
sbbb
mov
cmp
push
repz
xor
out
push
ljmp
in
cmpsl
adc
mov
pusha
mov
lods
adc
mov
jle
inc
xchg
xchg
push
dec
mov
xchg
shrb
pop
aas
dec
arpl
dec
or
loope
shl
mov
jge
sbb
int
in
jo
dec
jns
xchg
jns
or
cmp
mov
in
mov
cld
repz
negb
xchg
cs
fcomps
loop
sub
aam
and
jge
adc
xchg
ret
inc
loop
ret
dec
or
dec
test
lcall
loop
aad
mov
xchg
push
xor
test
lcall
sub
scas
jo
cmp
loopne
test
dec
incl
lahf
or
mov
xchg
and
test
xor
and
decb
jne
or
sbb
sbb
lret
out
inc
out
jnp
data16
mov
mov
xchg
xor
outsl
pop
fnstenv
lcall
mov
dec
jb
ret
aaa
inc
push
imul
or
mov
aam
jg
leave
daa
inc
test
sbb
into
mov
cmp
xor
fs
pop
pusha
pusha
jp
shll
sub
movsl
ljmp
cmp
cmpsb
or
jae
aaa
push
inc
mov
dec
jp
pop
mov
mov
xor
scas
mov
jnp
rcrl
push
pop
int
and
jns
sub
rcrl
stc
sub
jle
cmp
jp
ret
xor
cmp
addl
mov
sbb
mov
pusha
cltd
pop
sub
fmuls
test
jl
adc
orl
push
sub
arpl
fsubrs
push
mov
test
xchg
xlat
ss
popa
arpl
dec
jbe
cli
ds
in
aaa
jnp
addr16
mov
scas
pop
jle
fcomps
xor
in
cmp
rol
pop
stc
mov
cmp
sbb
xchg
and
push
sbb
fadds
lret
loopne
sbbb
insl
popf
xchg
sub
out
fwait
mov
jb
fcompl
jae
fprem
mov
mov
inc
adc
mov
xor
cld
push
into
and
pop
sbbb
imul
push
fs
sbb
mov
mov
popa
cmp
mov
pop
inc
sarb
pop
sbb
push
cmp
mov
jle
adc
and
add
ss
sbb
cmp
push
fs
inc
pop
xor
subb
inc
movsl
mov
cmp
test
lret
repz
cltd
cwtl
fidivl
bts
cmp
test
jne
sbb
mov
add
push
les
movsl
push
jmp
cmp
inc
mov
incb
int3
fiadds
cmp
mov
dec
ss
gs
mov
call
bound
loop
sub
sti
cwtl
fnstenv
js
test
push
mov
scas
sbb
rolb
aas
mov
cmc
xlat
xchg
pop
pop
mov
mov
push
jns
pop
mov
rcl
orb
pushl
into
enter
jnp
bound
or
push
ret
or
jl
test
movsb
lock
dec
cmc
subl
cmpsb
lret
adc
jmp
cmp
pusha
push
fdivl
popf
sahf
inc
int
and
in
cmpsb
sbb
gs
cmp
push
in
fcompl
cmp
pop
pop
xor
jo
aam
lret
jnp
add
ret
mov
mov
adc
movsl
cmovne
insb
push
sbb
push
mov
add
je
cwtl
scas
xchg
lock
adc
xor
mov
bound
dec
fldl
gs
lds
push
sub
xor
into
mov
jnp
inc
xor
dec
cwtl
faddl
std
mov
into
pop
pop
inc
imul
pop
rol
fwait
test
dec
gs
test
test
mov
mov
mov
ljmp
faddl
adc
insl
sbb
push
push
mov
arpl
test
cwtl
inc
mov
pushf
sub
repz
xorb
dec
add
movsl
les
mov
push
subl
bsr
cmp
imul
outsb
dec
dec
bound
push
orl
rcll
mov
sbb
add
or
mov
ret
test
jecxz
ret
loope
pusha
xorb
cmp
pop
cmp
sahf
adc
test
je
fsubr
fldt
cwtl
inc
shrl
push
or
xchg
nop
dec
sti
adc
aam
movsl
pop
xchg
out
adc
int3
lods
rcrl
inc
fisttpll
add
imul
lods
test
ret
aaa
out
add
push
fistl
je
shrl
lods
xlat
loopne
call
inc
cwtl
lret
les
pop
mov
icebp
add
add
adc
add
into
iret
push
and
pop
addl
mov
enter
pop
dec
mov
inc
cld
xor
dec
es
shll
pop
jecxz
shrb
subb
stos
add
data16
test
addr16
adc
stos
test
insl
adc
jmp
xchg
es
jns
sti
jo
pop
in
lahf
jl
mov
xor
jnp
jmp
cmp
into
fstp
add
push
cmpsl
in
mov
dec
insl
pop
sarb
fadd
sbb
lcall
cmp
test
stc
jno
jbe
cli
fnstcw
jp
push
outsb
mov
inc
mov
mov
insl
cmp
iret
ss
popf
sbb
iret
loopne
push
lret
adc
and
mov
jbe
pop
jne
jp
frstpm(287
push
mov
or
iret
shll
ljmp
mov
sub
jle
call
cmc
fnstsw
fsubs
mov
mov
cmp
add
fistpl
mov
je
jmp
jl
xchg
push
sub
repz
es
xor
or
lret
jmp
inc
lods
push
cmp
scas
jle
jns
sub
scas
inc
jns
in
mov
inc
xor
push
popa
leave
movsl
out
sbb
es
mov
xchg
mov
jns
int
pop
into
js
popa
or
out
jp
dec
test
bound
mov
jo
fcompl
lock
enter
xchg
icebp
shl
addb
lret
data16
xor
cmp
mov
fadds
out
popf
mov
sub
and
aas
add
jp
or
adc
mov
cmpsl
push
dec
out
or
test
jbe
fcomp
lahf
mov
loop
push
daa
mov
outsl
sti
pusha
adc
stos
mov
pop
sbb
sub
pop
out
cmp
icebp
movsl
shll
fistl
out
sahf
lcall
or
hlt
shl
push
in
mov
mov
push
adc
cmp
adc
jmp
push
push
movsb
les
inc
mov
xchg
pop
cmp
push
rcr
loopne
scas
pop
or
sub
insl
pop
push
insl
mov
out
mov
jnp
data16
lods
pop
dec
outsb
mov
out
mov
jge
pop
cs
fisubl
insb
add
es
push
mov
call
mov
xchg
inc
cmp
shlb
les
mov
insb
jmp
pop
int3
jns
add
mov
mov
push
or
mov
mov
xchg
mov
jne
push
push
bound
jge
mov
jae
cmpsb
movsl
add
cmp
mov
push
ret
mov
arpl
dec
enter
cmp
mov
jecxz
pop
xlat
ret
aam
add
push
xchg
ret
add
fwait
cmp
mov
lret
mov
and
cmp
test
ret
fs
xor
repz
pop
and
mov
sub
push
enter
mov
das
add
jp
iret
jne
push
mov
adcb
stc
mov
loope
sub
rolb
sbb
popa
dec
lret
cmp
add
jbe
jmp
mov
fsubrp
loopne
out
mov
cmp
data16
movsw
pop
xchg
adc
jbe
mov
push
in
pushf
in
push
and
fsubrs
mov
outsl
jno
clc
adc
iret
es
dec
push
dec
outsl
js
xorb
cs
add
jo
out
sub
mov
xor
jnp
push
shll
lock
xchg
fnstsw
out
push
push
daa
rolb
push
mov
lret
push
aad
movsl
lea
mov
fs
shlb
and
das
xchg
hlt
data16
or
cmp
jp
sbb
aas
mov
or
out
js
jb
xchg
out
lods
cmp
mov
mov
inc
ss
mov
mov
sti
test
xor
add
fidivrl
and
inc
push
outsl
push
aad
dec
or
clc
cmp
cmpsb
jb
jmp
adc
in
xor
xor
andl
aas
cmp
lods
jne
mov
mov
pushf
in
add
xchg
inc
lahf
rclb
xor
pop
jmp
jo
mov
pop
into
push
jl
popf
and
test
inc
inc
xchg
test
repnz
mov
sbb
jbe
dec
sub
decl
imul
movsl
stos
stos
mov
jae
test
out
rcrb
movsl
adc
in
cltd
ss
sbb
cs
push
stc
clc
push
scas
shll
jo
pop
mov
mov
mov
mov
mov
subl
ret
adc
aaa
sbb
or
test
rolb
or
stos
mov
out
outsl
sub
mov
inc
fidivrs
inc
imul
pop
mov
sub
movsl
mov
ss
jp
aaa
mov
xchg
not
jno
mov
into
or
adc
lcall
leave
lret
fadd
fdiv
xor
sti
int3
daa
push
stos
in
in
mov
cmp
jl
sub
mov
ja
jno
or
test
out
pop
sub
movsl
test
adc
pop
movsl
push
subb
jmp
pop
nop
sbb
xchg
inc
push
mov
mov
outsb
and
int3
ret
mov
stos
inc
sub
mov
out
xor
inc
jbe
mov
ret
add
ret
movsb
out
das
fwait
xlat
push
ret
fmull
shl
ret
and
dec
in
add
stos
dec
push
mov
push
jo
push
ret
xrelease
hlt
pop
fstpt
push
ret
sub
add
fwait
out
add
mov
add
lods
jmp
push
ret
push
inc
jmp
xchg
in
add
sbb
xor
clc
popa
mov
fsubp
jb
xchg
es
inc
cmc
sbb
hlt
cwtl
ret
stc
cmpsb
movw
adc
gs
rcrb
xchg
dec
cmpsb
jae
test
xorb
push
out
ret
cmp
push
pop
dec
test
fs
jbe
mov
xchg
mov
and
dec
popa
cwtl
adc
cmp
ret
add
push
ret
scas
sbb
outsl
dec
cmp
ja
lahf
loop
add
push
jecxz,pn
mov
cmp
cmpsl
sahf
ret
push
mov
mov
clc
loop
idivb
dec
cmp
push
xlat
in
xchg
or
xor
cmp
mov
ret
out
mov
mov
dec
hlt
ret
nop
shr
inc
insb
xchg
loope
push
outsl
adc
ret
lods
or
outsl
jne
aam
cs
mov
in
js
aas
pop
lea
ret
xchg
jns
in
ret
aam
addr16
mov
pop
push
push
sti
push
cmpb
and
bound
es
dec
ret
pop
cwtl
xchg
cmp
cmp
popf
fsubl
push
in
ret
stos
cltd
movsl
xlat
jo
ret
lds
or
loope
std
dec
mov
stos
or
sub
jbe
shrb
push
loope
sar
les
loope
xchg
rcll
loope
out
mov
mov
push
ret
jae
pop
inc
sti
pop
pop
pop
add
loopne
dec
fnstsw
ret
cwtl
dec
push
mov
iret
and
add
shll
imul
push
scas
ret
test
jecxz
mov
dec
lock
inc
ret
in
xchg
dec
je
in
add
jno
cmp
movsl
bound
cmpl
test
fprem
ret
or
mov
popa
les
dec
cmp
xchg
xchg
cmp
das
pop
je
add
push
sbb
sbbl
leave
fs
mulb
inc
in
fst
adc
mov
jl
mov
add
jne
mov
hlt
lock
pop
cmp
xchg
mov
cld
sbb
mov
cltd
xchg
mov
and
dec
add
rorb
icebp
push
sub
mov
clc
xchg
mov
adc
inc
push
dec
sbbb
loop
ret
lret
shr
mov
gs
in
test
xchg
fidivrl
xor
ljmp
xchg
and
fimuls
aam
or
mov
out
imul
xchg
push
push
je
aas
stos
dec
je
mov
data16
mov
push
stos
popa
inc
imul
pop
bound
insl
pop
iret
mov
lret
mov
gs
jl
imul
cmc
sub
sub
fcmovb
sub
mov
repnz
out
lcall
shrb
pop
jp
or
adc
push
test
lret
lea
xor
popa
mov
push
iret
cwtl
push
scas
push
das
aam
insl
push
shl
add
into
and
push
cwtl
adc
mov
jp
rol
lret
fs
jl
xor
fsubrs
xchg
or
icebp
fistpl
push
mov
sbb
push
lret
test
sbb
dec
mov
scas
ret
mov
or
xor
pusha
or
in
mov
lock
adc
aas
out
cwtl
xchg
jg
jno
inc
inc
sbb
dec
cmp
mov
pop
jl
test
push
pop
lods
push
movsl
push
fmuls
xor
mov
xor
mov
mov
cmpl
cmp
ret
lea
cli
insl
in
test
popf
loop
movsb
lahf
push
js
mov
fmull
addb
cmpsl
and
ljmp
mov
adc
ss
mov
push
sbb
push
adc
adc
test
adcb
enter
sbb
movsl
loope
push
or
mov
outsl
out
cmpsl
jns
push
test
movsl
jns
imul
pop
xchg
lock
pop
xor
stos
sbb
lods
lds
and
repz
js
push
mov
in
movsb
jnp
fwait
sbb
cs
mov
jmp
rolb
mov
arpl
cmpsl
or
pop
pop
jo
push
jns
inc
je
out
sub
int3
ret
push
lods
test
mov
xlat
pop
in
mov
sarb
fiadds
enter
sub
imul
mov
ds
sub
lahf
adc
jecxz
test
xchg
push
mov
jno
xor
lcall
xor
dec
repnz
pop
ret
cli
cmp
fwait
and
xor
ret
fidivl
adc
shlb
push
inc
mov
inc
lea
and
inc
push
jmp
ret
loop
add
and
mov
lret
stc
or
hlt
mov
or
lock
jae
popf
pushf
imul
ret
repz
sti
or
inc
xchg
lret
cmp
andl
in
adc
sahf
lods
insl
xchg
inc
xchg
adc
ret
adc
ret
lahf
jb
cmp
add
sarl
dec
adc
push
int
sub
in
xor
jg
mov
imul
sarb
gs
mov
test
stc
outsl
and
jae
jp
adc
insl
pusha
xchg
scas
push
stos
adc
loop
sub
cmpsl
das
rcrb
je
ret
pop
xor
lods
aas
int3
xchg
scas
loop
ret
jmp
das
ret
jge
es
lahf
cmpsl
loope
stos
jno
mov
icebp
push
xchg
ret
mov
mov
ret
jbe
inc
mov
aaa
and
push
shll
ret
sar
jae
out
ret
jbe
adc
cwtl
arpl
push
mov
or
mov
cmpsl
leave
ret
pop
ret
jbe
bswap
fsub
ret
pop
push
and
loope
out
jae
popf
mov
push
int
std
mov
and
pop
dec
ja
xor
fists
jl
mov
ret
stos
test
mov
in
movsb
sahf
cltd
ret
sbb
mov
push
aad
mov
cld
mul
adc
cmc
xor
ret
xorl
dec
in
mov
ret
or
pop
ja
mov
gs
xlat
cmp
or
int
ds
fbld
dec
dec
adc
adc
mov
lods
rcl
ret
pop
pop
xchg
mov
scas
stos
mov
sub
gs
or
push
jbe
sti
mov
mov
js
cltd
movsl
enter
cmp
push
imul
ret
xchg
test
addr16
in
sub
bound
sub
jb
adc
lret
mov
pop
cli
add
adc
mov
das
insb
iret
cmc
out
dec
cmc
lds
clc
ret
test
push
cmp
inc
mov
inc
mov
out
std
mov
ss
xlat
jns
mov
sti
cmc
aas
icebp
mov
das
jae
mov
push
xor
pusha
stos
pushf
andb
cmp
xlat
mov
mov
sub
mov
loopne
xchg
xchg
imul
or
adcl
repz
or
adc
pusha
js
mov
mov
push
stos
or
jp
iret
idivl
sbb
push
inc
ret
outsl
adc
xchg
sahf
jne
cmp
ss
fcmovnbe
popf
or
mov
adc
lcall
insl
notb
sbb
mov
iret
jnp
shlb
and
addr16
push
xchg
enter
push
pusha
insl
insb
xchg
lret
xor
insb
out
sti
and
adc
call
and
add
adc
and
data16
xor
push
stos
testl
xchg
jne
jo
add
out
push
lcall
sar
js
fdivl
mov
jns
xchg
pop
sbb
movsl
mov
xchg
in
js
rcrb
jle
adc
jb
or
sbb
test
out
rcll
enter
ds
loope
imul
mov
sbb
loope
loopne
dec
mov
out
and
fiadds
mov
push
scas
cmp
dec
push
sahf
jmp
sub
push
fildll
cmpsb
cmc
shrb
cmc
iret
in
jae
mov
push
mov
lret
test
and
xchg
ret
xchg
mov
lea
mov
mov
cld
fs
lds
daa
lcall
clc
in
mov
ret
movsl
sub
divl
or
inc
push
xchg
cmp
jo
xchg
inc
inc
test
test
cltd
idiv
js
call
arpl
cmp
inc
out
xchg
jb
in
jge
cmpsb
dec
mov
sub
sbb
mov
inc
mov
int
sub
fucomp
cmp
iret
dec
out
xchg
mov
iret
test
xchg
inc
and
xchg
lahf
jns
test
sub
int
rcll
mov
push
xor
cmp
movsl
dec
test
xor
ja
repz
adc
fldl
or
stos
xor
mov
xchg
sub
pop
sarl
sbbl
mov
inc
mov
push
and
or
shll
rcrb
daa
pop
sbb
add
ja
push
int3
xchg
xor
cld
adc
leave
or
and
fmull
xor
cs
mov
mov
out
push
repnz
stc
and
lahf
ljmp
jb
dec
pop
mov
adc
mov
hlt
fistpll
cli
cmpb
out
stc
stos
loop
pop
pushf
mov
or
xchg
mov
pop
ljmp
xchg
arpl
popa
out
fidivrs
pusha
bound
lcall
mov
xor
and
mov
mov
addr16
shlb
ja
lock
out
std
add
pop
push
lret
ja
fldcw
push
rolb
std
cmp
inc
mov
jnp
jmp
sbbl
jmp
cs
cli
int3
stc
cmc
adc
mov
movsl
or
cmp
shlb
mov
jge
lods
mov
jecxz
orb
out
sbb
xchg
mov
xlat
lods
inc
stc
or
add
test
jnp
enter
push
jmp
mov
imul
inc
popf
cmp
mov
mov
cmp
jecxz
loope
push
or
inc
mov
arpl
xchg
pop
mov
jg
es
jecxz
lret
gs
add
ljmp
repnz
dec
mov
and
pop
bound
mov
mov
sbb
out
cli
bound
mulb
cmp
cmp
inc
xlat
sbb
mov
movsl
mov
or
add
dec
fsubrl
cmp
mov
pop
out
insl
jne
scas
sub
dec
jle
jg
mov
xchg
dec
das
cmp
out
cmpsl
fidivl
push
movsl
loop
and
ret
dec
adcl
xor
xchg
lret
test
adc
push
out
lcall
ucomiss
outsl
int3
or
add
mov
mov
movsl
cmpl
es
sbb
cmpl
cmp
fcoml
gs
sub
xchg
ds
xchg
int3
xchg
pop
orb
lcall
cmp
repnz
push
jg
pop
stc
xor
stos
clc
mov
mov
das
jp
or
xlat
pop
movsl
xchg
xchg
jae
cmp
add
adc
mov
add
push
mov
and
sti
xor
mov
and
jmp
xchg
sub
push
icebp
aaa
dec
lds
sub
jnp
xchg
mov
or
pop
mov
adc
adc
rorb
mov
sub
ret
test
jl
jecxz
ss
cmp
xor
mov
mov
mov
inc
pop
jg
push
repz
adc
pop
ret
jno
nop
cmc
sub
out
bound
mov
mov
fstpt
lcall
mov
negb
stos
jecxz
popl
pop
push
aas
in
loopne
in
xorl
pushf
mov
xchg
pop
inc
xchg
and
ret
jge
bound
add
pusha
lret
xchg
popw
fwait
push
dec
rcll
mov
je
sbb
inc
or
mov
roll
out
cltd
dec
fwait
js
jecxz
adc
push
jns
push
xor
aad
mov
mov
inc
js
stc
xlat
inc
cld
test
mov
rcrl
test
xchg
pushf
inc
in
or
ficomps
roll
mov
cmp
adc
cwtl
cmp
xlat
sarl
mov
add
mov
xchg
pop
mov
or
sub
and
or
jl
gs
scas
imul
mov
roll
mov
xor
dec
ret
mov
inc
cmp
sub
push
ja
sub
test
fists
call
loopne
xlat
test
or
mov
movsl
and
addl
add
push
jno
es
lods
mov
ret
lret
stos
add
mov
add
imul
pop
jo
pop
imul
mov
ret
lcall
rcrl
sbb
xchg
scas
data16
icebp
or
cmp
data16
movsl
sub
movsb
dec
mov
xchg
inc
jecxz
cmp
xchg
inc
gs
aad
gs
and
cmc
xor
mov
lret
cmp
mov
jl
shlb
inc
lods
mov
mov
leave
mulb
sti
or
rclb
push
stos
jno
push
push
scas
xor
aas
push
movsl
adc
in
pop
dec
std
push
and
ds
je
mov
imul
and
mov
fwait
stos
inc
test
sbb
xor
scas
jb
push
jo
push
movsl
sub
int3
xchg
leave
fnsave
mov
cmpsl
movsb
jo
xor
xor
mov
xlat
dec
aaa
mov
popf
arpl
in
xchg
js
test
add
rorb
adc
push
gs
add
pop
fstps
mov
xchg
jnp
mov
pop
or
in
pusha
out
jle
ret
mov
or
lods
rorb
add
inc
adc
mov
adc
notl
pop
inc
jnp
mov
cs
xor
mov
push
lahf
shrb
or
daa
inc
sbb
mov
sti
or
test
and
push
fucom
pusha
fcmovbe
lds
sahf
fs
int3
inc
mov
xchg
mov
arpl
fs
out
popa
mulb
shlb
mov
insb
fdivs
dec
shlb
lcall
call
adc
leave
mov
addr16
xchg
mov
out
in
push
xchg
in
jl
dec
jb
fldt
insb
mov
dec
mov
test
jnp
jmp
cmp
loope
cld
inc
js
mov
inc
dec
fwait
push
push
fnstsw
out
popa
fnsave
pop
inc
out
idivb
xlat
daa
ficoml
scas
loopne
test
add
out
test
jne
jb
or
push
scas
test
or
mov
repnz
loop
mov
icebp
push
mov
into
scas
jo
mov
mov
push
pop
add
add
ret
cwtl
lods
test
bound
je
daa
jns
mov
out
mov
movsl
mov
test
loope
mov
xor
sbb
dec
jb
ret
insl
imul
ret
outsb
ret
mov
cmpb
ret
scas
push
sbb
stos
dec
pop
sbbl
adc
add
mov
xchg
test
inc
ret
outsb
rcll
call
ret
mov
push
jb
test
stos
xchg
inc
inc
ja
nop
shl
mov
int
test
mov
xchg
into
push
out
loope
movsl
add
pop
insl
or
jle
pusha
sbb
std
je
movsl
test
idivl
nop
sub
push
xor
in
add
pusha
xchg
mov
imul
addb
cmp
mov
data16
and
mov
es
jecxz
movsl
jmp
fiadds
mov
and
ret
adcl
mov
cmpl
inc
cltd
lea
xor
shl
rcll
shlb
mov
aam
cmc
shrb
mov
pop
inc
pop
lea
xchg
stc
mov
roll
pop
aam
aaa
mul
mov
test
movsl
add
jp
pop
xchg
mov
xchg
repz
sub
pusha
fs
sub
inc
adc
shr
lret
dec
int3
lea
imul
sub
clc
add
adc
xchg
out
sbb
stos
js
push
xor
inc
push
push
mov
xchg
out
test
loopne
dec
mov
dec
lods
adc
sub
cmp
cmp
std
sub
and
stc
test
push
dec
dec
fistl
jmp
jo
outsl
insb
fistps
fstpl
les
jo
cmpsb
orb
fiaddl
cmp
add
in
data16
addb
loopne
cltd
add
fiadds
aas
jb
mov
imul
stc
ficompl
lods
sahf
push
cmp
jo
mov
inc
les
cmc
cltd
rcll
aaa
cmp
fidivrs
lret
xor
ljmp
enterw
jb
xchg
xchg
popa
jbe
stc
and
push
push
addr16
xchg
mov
scas
imul
movsl
pop
fdivrl
out
lods
rcl
push
jnp
mov
test
sbb
sub
stos
test
movsl
icebp
fwait
push
mov
imul
mov
movsb
fmull
lahf
out
sti
jb
sub
xchg
scas
mov
stos
outsb
jae
add
cmp
adc
hlt
jnp
push
test
push
push
popa
xchg
push
sub
mov
jb
fdivs
add
xchg
cmpb
jmp
or
push
into
ss
clc
shlb
arpl
cmpsl
dec
out
sub
add
xchg
xor
mov
and
push
push
xchg
xlat
mov
jno
xor
mov
clc
out
aaa
icebp
shll
cmc
rolb
hlt
xchg
sbb
add
rcll
inc
fs
addb
push
nop
dec
jge
jbe
mov
cmpsl
pop
xor
out
dec
dec
mov
sbbl
test
fstp
cmpsl
mov
call
inc
add
push
cmp
cmp
sub
clc
gs
adc
sub
xchg
adc
cli
cltd
push
stos
jo
mov
movsl
into
aam
adc
sbb
fistpll
int3
xor
psubd
daa
cmp
frstpm(287
fisubrl
mov
cli
xchg
cmp
mov
dec
xor
xor
fs
fidivl
dec
cmp
inc
push
cmpsl
push
shr
ja
push
lret
cmp
test
add
push
push
add
jmp
popa
jl
and
jl
add
add
push
sbb
mov
mov
mov
cmp
xor
mov
dec
inc
mov
out
inc
adc
or
movsl
mov
sub
insb
push
inc
cmp
aas
repz
loopne
test
stos
xchg
cmp
mov
push
aad
xchg
mov
popa
arpl
ljmp
mov
cmpsb
out
push
insb
imulb
inc
xor
js
push
arpl
cmp
ror
loopne
adc
jl
gs
sahf
movsl
cs
pop
cs
push
fs
jecxz
test
in
repnz
mov
cltd
shr
xor
movsl
daa
and
mov
inc
inc
push
mov
cmp
mov
inc
add
lock
xchg
enter
lcall
insb
inc
fs
rorl
sarl
pusha
inc
xchg
add
push
pop
xchg
mov
inc
enter
out
jge
ret
push
popa
cmpsl
mov
pop
and
fcmovb
and
or
sub
shll
into
rcl
outsl
inc
jl
sbb
inc
mov
push
cmp
and
sub
mov
mov
xlat
repz
dec
adc
rcrb
je
cwtl
dec
fildll
mov
cmp
dec
iret
xor
mov
sbb
cmp
popa
shrl
int3
imul
dec
test
int
pop
cmc
idivb
clc
jle
xchg
movsl
sub
cmp
les
push
dec
cli
into
xchg
and
out
fdivs
in
inc
pop
iret
jbe
mov
pusha
fistpl
out
pop
popf
adc
repnz
call
xchg
insb
push
or
dec
movsl
lcall
add
push
push
mov
add
inc
cs
sbb
pop
mov
fimull
xchg
xor
test
insl
dec
in
sub
movsl
mov
cltd
pusha
pop
pusha
jno
les
sub
cmpb
push
xorb
cld
mov
lret
vmovhpd
mov
jae
aaa
dec
aas
dec
stos
cli
xchg
xor
aad
dec
xchg
mov
imul
popa
adcl
inc
loop
test
sahf
mov
inc
test
in
loope
insb
mov
and
shrl
push
call
les
rolb
xor
lcall
mov
inc
leave
mov
shll
scas
shrl
jge
cmp
nop
mov
fisttpll
sti
jl
or
sarb
out
mov
test
sub
jno
and
xchg
movsl
sub
pop
sahf
cmpl
mov
scas
test
call
out
loopne
push
mov
sbb
enter
xorb
mov
push
sbb
pop
fwait
or
outsl
ret
fst
and
jae
cmpb
test
xchg
outsb
loope
sub
stos
shll
sub
push
or
dec
xchg
push
ss
mov
sahf
out
mov
jno
xchg
fwait
in
mov
mov
jl
mov
sub
cmpb
add
pop
cmp
call
or
jb
into
mov
fdivl
pop
rolb
stc
fsubrl
iret
xorb
sub
hlt
ljmp
shrb
loopne
xchg
jo
and
mov
push
and
add
stc
or
inc
sub
lcall
test
rolb
add
sub
pop
pop
or
pop
fidivl
dec
test
iret
insl
add
mov
push
in
movsl
xor
xchg
into
sti
test
lahf
jecxz
cmpsl
push
pop
iret
jnp
jmp
outsb
or
add
or
mov
push
push
in
and
mov
imul
push
pop
mov
mov
inc
mov
mov
or
xchg
ret
cli
movsb
in
shr
popf
lcall
in
adc
push
jmp
or
and
jbe
mov
dec
xchg
xlat
fdivrl
xchg
mov
shlb
jg
or
loopne
insl
jnp
andb
ss
popf
rcll
add
add
cmp
cwtl
or
xor
cmp
mov
dec
fimull
lods
movsl
mov
outsl
insb
pop
jle
and
and
mov
shlb
cwtl
cs
adc
orb
cmpsl
inc
xchg
cmp
push
jno
inc
outsl
cmp
dec
push
xchg
inc
movsl
aaa
fsts
and
cmpsb
std
scas
xchg
xor
js
mov
push
insl
jb
jb
push
and
mov
movsl
cltd
insb
adc
cmp
xchg
mov
and
jno
stos
sbb
pop
cmp
mov
repnz
mov
push
mov
mov
sbb
jo
fadds
sbb
fadds
cltd
adc
pushf
jnp
adc
mov
dec
jne
adc
data16
sbb
call
cs
rcl
sub
xchg
mov
aaa
mov
rcll
loopne
adc
hlt
cltd
nop
vpshufhw
shlb
or
xchg
lds
xor
mov
add
ret
daa
push
movsl
mov
fsubr
adc
add
jecxz
inc
jp
scas
lods
xchg
mov
and
out
cwtl
subl
push
movsb
ret
dec
addr16
movsl
push
int3
cmp
data16
push
mov
fwait
dec
pop
cld
pop
es
adc
lea
mov
popf
cwtl
push
cld
xchg
test
add
sbb
out
mov
push
aad
outsb
mov
das
aaa
push
pop
jo
dec
jp
pop
lret
mov
mov
ds
push
bound
mov
aas
aam
xchg
sub
lahf
popf
add
loope
mov
ljmp
mov
and
cmp
push
mov
fs
add
mov
jp
jle
divl
mov
jecxz
sub
mov
xorb
in
into
inc
jmp
inc
adc
and
nop
in
dec
xchg
popa
mov
sti
rcrl
xor
and
sarb
shr
cld
test
and
lret
in
and
ss
push
pop
push
xchg
mov
jo
sahf
pop
mov
mov
sub
in
sub
cmpsb
fwait
pop
call
dec
repnz
gs
fcmovbe
mov
clc
shrb
loope
and
inc
adc
mov
adc
insl
aad
fs
pop
dec
mov
ljmp
dec
loope
outsl
aad
lret
mov
push
xchg
sub
mov
dec
or
enter
xor
adc
mov
jne
cmp
sbb
sbb
cmp
pop
add
inc
mov
mov
ja
int
fucomip
push
mov
xchg
out
xor
xchg
in
xchg
test
hlt
movsl
fnop
sbb
int3
out
inc
movsl
shll
fisttpll
cmp
mov
cmc
cltd
mov
in
pop
pop
cltd
idiv
neg
sub
add
outsl
int
sbbb
mov
push
dec
arpl
xor
ret
mov
and
fidivs
fmull
push
inc
lret
sarl
jg
int3
dec
out
cwtl
int
stos
mov
fs
fnstsw
sub
mov
fistps
lret
pop
xlat
addr16
add
scas
mov
sbb
mov
ds
pop
aas
jno
fcmove
sbb
or
xor
mov
test
loopne
mov
or
imul
xchg
and
cmp
mov
stos
adc
xchg
fadd
mov
and
in
sub
daa
inc
inc
mov
pop
mov
test
test
mov
outsb
in
cmp
in
sub
daa
repnz
add
jp
inc
sub
cmc
out
cmp
add
jb
test
jae
out
mov
movsl
jns
movsb
inc
clc
mov
cmp
inc
mov
mov
pusha
or
inc
adc
xor
pop
mov
dec
fstpl
imul
psubb
inc
push
or
xor
mov
sbb
lea
cltd
mov
fdivrs
add
js
test
aam
cli
es
es
mov
scas
xlat
insl
inc
mov
nop
cmp
inc
lahf
xchg
jecxz
fidivrl
push
push
adc
subl
sbb
clc
mov
sub
addb
aam
dec
test
push
into
jg
inc
rcll
pusha
dec
jge
nop
out
mov
or
scas
mov
ds
and
jns
rclb
mov
loope
jp
sahf
mov
sbb
int3
xor
inc
mov
mov
cli
out
pop
push
cmp
ret
cmp
and
out
push
mov
outsb
add
nop
cltd
cmpl
jb
pop
js
imul
pop
pop
pop
ret
test
das
jnp
stc
jnp
out
movsl
test
sti
pop
popf
outsb
adc
lds
mov
test
or
pushf
push
test
mov
repz
imul
pop
int
pop
int3
sbb
add
mov
cmp
clc
sti
fcomi
or
out
xorb
jge
lfs
adc
imul
xorb
or
mov
test
rorl
adc
packssdw
pop
inc
pusha
mov
mov
lcall
movsl
adc
data16
push
sahf
std
pop
shl
cmp
mov
mov
shr
jge
int3
sub
sbb
add
test
imul
loopne
sbb
les
add
cmpsb
cmp
es
movsb
xchg
inc
or
mov
das
out
gs
into
mov
inc
lea
xor
nop
cmp
sbb
and
jb
mov
out
inc
scas
xchg
imul
insb
mov
or
xor
cltd
jno
lret
shll
sub
push
in
pop
mov
pusha
movsl
jge
rcll
rol
adc
fildl
enter
push
mov
xor
mov
loopne
xchg
lods
test
rol
inc
cmp
push
out
scas
xor
clc
lock
cli
dec
fnstenv
mov
xchg
pop
cld
mov
pop
jb
ss
mov
sbb
call
cmpsl
add
add
test
xor
push
inc
test
xchg
jmp
jecxz
adc
lcall
imul
in
or
push
xchg
push
adc
add
xor
jo
pushf
inc
sarb
movsl
sbb
jo
or
push
mov
sbb
add
inc
int3
ror
cmp
ss
call
add
pop
add
sub
xor
mov
fists
dec
or
outsb
movsb
jns
pop
addb
mov
mov
fdivrs
insb
adc
int3
andb
negl
mov
mov
add
stos
cmp
adc
xchg
mov
bound
shl
xchg
mov
aad
lods
pop
push
sbb
mov
push
jnp
stos
call
inc
and
sub
mov
sub
mov
fbstp
sbb
sbb
adc
jmp
xor
jle
jne
jns
lret
mov
jne
xlat
es
in
bnd
inc
mov
mov
mov
and
shlb
jecxz
dec
mov
inc
iret
outsl
cmp
push
out
test
push
cmp
fdivrs
or
dec
jmp
dec
push
xchg
lea
icebp
push
gs
jbe
std
pop
cmp
les
mov
cltd
stos
jecxz
loope
sub
cwtl
loope
mov
inc
fstpl
jge
mov
adc
repnz
in
jle
mov
into
mov
jl
clc
sbb
and
inc
loope
push
cli
xor
lret
xchg
ret
jge
xor
and
sarb
loopne
cmc
lahf
xor
adc
or
cmp
cwtl
pop
xchg
jo
ret
out
mov
es
inc
test
or
loop
inc
cmpsl
cmp
insl
and
push
popa
repnz
stos
dec
jns
enter
test
add
mov
ret
or
push
ret
out
cmpsb
xor
ret
jae
fwait
sarl
mov
mov
adc
mov
pop
stc
xchg
ret
dec
add
sbb
loope
mov
push
mov
call
sub
arpl
imul
cmp
xchg
hlt
ret
call
mov
ficoms
inc
mov
enter
scas
lods
ret
loop
in
fbstp
sub
daa
inc
lds
ret
jne
rcr
inc
and
stos
push
inc
push
cmp
jmp
imul
sub
stos
jns
rol
ret
mov
dec
cld
pop
xchg
mov
cmpsb
ret
pop
nop
sbb
lock
cmp
leave
adc
ret
xor
xchg
jmp
adcb
stc
cltd
ret
push
insb
or
mov
aas
stos
loope
add
adcb
test
mov
sbb
mov
stc
aas
inc
push
ret
mov
icebp
bound
test
leave
imul
popf
loope
xchg
dec
or
mov
das
mov
pop
stos
lock
clc
out
mov
jne
jmp
scas
xor
inc
add
mov
fcmovnb
lcall
push
jbe
mov
ret
inc
dec
js
testb
fcmove
out
ljmp
inc
inc
pop
add
add
mov
cld
adc
push
push
mov
gs
leave
ficompl
and
out
fcmove
inc
push
jmp
xor
adc
jns
fcmovnu
mull
sbbl
pop
aam
jle
inc
pop
inc
or
dec
dec
pop
movsl
or
cmpl
xor
mov
adc
jo
xchg
roll
sbb
scas
push
ja
jns
in
sarl
imul
mov
mov
int3
mov
pop
cmp
scas
dec
iret
cmp
ljmp
mov
adc
icebp
negl
mov
scas
and
ss
jns
test
fdivl
or
test
pop
or
das
test
add
add
pop
int
test
out
inc
fistpll
stos
mov
inc
sarb
mov
sbbb
test
pop
lods
in
ds
add
cwtl
mov
popf
repz
add
ficoml
fs
popa
test
pop
and
mov
mov
or
jbe
repnz
mov
aaa
cmp
aas
fldlg2
mov
test
inc
push
out
mov
shlb
sti
push
jle
pop
lods
stc
mov
mov
movsl
sbb
push
pop
mov
rclb
inc
jne
lock
pop
sub
imul
std
xlat
mov
cmp
xchg
jae
fsubrl
fwait
shlb
fwait
lods
cmp
lret
inc
mov
rcrl
jb
sbb
outsb
lret
cmp
fs
rcll
mov
inc
sbb
inc
dec
mov
daa
xchg
jecxz
cmp
xchg
movsl
xchg
mov
das
out
pop
jb
add
inc
movsl
iret
xchg
mov
cmpl
push
jnp
pop
mov
cltd
inc
push
mov
call
push
lea
scas
add
xchg
or
ss
jnp
subl
insb
push
pop
inc
adc
jg
cmc
xor
pop
push
add
outsl
mov
clc
or
movsl
movsb
mov
sbb
cs
insl
out
add
sub
ja
outsb
push
sbb
pop
jo
cmpsb
nop
mov
add
xlat
fcmovnbe
sti
or
jmp
cwtl
mov
add
scas
and
mov
add
cmp
mov
dec
ret
icebp
and
jno
mov
mov
mov
mov
xchg
xchg
rolb
nop
push
ljmp
dec
jl
nop
mov
cs
inc
mov
sub
pop
jo
cli
out
mov
mov
add
push
xchg
pop
mov
inc
sti
adc
movsl
insl
imul
mov
fistpll
dec
imul
push
cli
mov
jns
sub
jb
rcrl
xchg
push
ja
jno
sbb
lret
sbbb
cmp
and
or
jmp
movsb
pop
push
xchg
mov
das
ds
outsl
jle
add
mov
shlb
aaa
mov
jnp
scas
cld
mov
lcall
pusha
add
int
mov
xor
inc
mov
mov
mov
insl
pop
popa
pushf
pop
jge
imul
lods
rcr
sbb
test
push
and
mulb
fdivs
insl
pop
add
bound
xchg
cli
lcall
sbb
scas
shlb
sbb
call
jae
icebp
inc
nop
test
shll
imul
nop
repnz
aam
sbb
pop
pop
xchg
mov
stos
dec
xchg
subl
xor
addb
or
outsl
enter
adc
insl
dec
scas
adcb
les
dec
adc
lcall
outsb
subb
dec
xor
nop
jp
pusha
add
cmpsl
adc
xchg
jns
dec
xchg
into
jge
lret
outsb
adc
insb
inc
addr16
cmp
dec
sub
call
jg
push
daa
mov
xchg
mov
mov
adcl
fidivl
mov
test
jns
lods
hlt
test
bound
mov
xchg
repnz
xchg
popf
rorl
insb
stc
movsl
insb
mov
push
das
lea
xchg
cmpb
je
cmp
mov
sub
jae
jb
sub
jns
into
repz
push
cld
jp
jge
mov
in
addb
add
or
pop
jg
js
and
das
jns
jbe
xchg
out
push
add
pop
push
in
js
call
and
fsubrs
push
mov
push
and
push
sub
mov
mov
mov
inc
fsubr
mov
adc
movsl
fiaddl
add
ja
inc
mov
fdivl
xor
jle
int3
push
leave
into
xchg
push
inc
xlat
gs
xlat
loopne
sahf
call
mov
mov
push
test
pusha
fucomp
push
sub
sub
or
data16
inc
mov
sbb
push
jp
push
xchg
pop
mov
stos
xorb
bound
fcompl
hlt
cltd
out
xchg
lods
scas
popa
out
push
cmp
jno
dec
cmpsl
cwtl
lret
in
cs
pusha
dec
mov
outsb
dec
xor
add
push
xor
inc
sbb
roll
scas
sti
dec
fs
push
shrb
jge
mov
icebp
adc
cmp
int3
out
mov
xchg
xorb
incb
mov
sub
insl
repz
int
sub
add
push
frstor
or
lock
pop
xchg
add
stos
jno
scas
jns
popa
cmp
imul
sub
mov
sbb
pop
addl
shll
daa
pop
fldcw
xchg
cld
outsl
js
gs
ret
movsb
pushf
je
xor
sysenter
dec
xchg
mov
add
cmc
cld
gs
rcll
fistpll
cmc
jmp
push
ret
sub
scas
enter
sbb
cmp
mov
stc
push
lods
outsb
adc
test
xchg
pop
push
jae
test
mov
filds
sbb
dec
cwtl
cltd
xchg
and
repnz
add
sbb
sbb
fisubl
adc
cwtl
or
and
data16
push
and
jge
mov
inc
fildl
sbb
jmp
dec
mov
jecxz
jecxz
lcall
push
test
out
inc
out
jecxz
sub
xchg
test
decb
cmp
mov
into
pop
adc
jge
je
and
mov
xor
cmp
xchg
rcll
xchg
pop
adc
push
rol
mov
push
mov
addr16
jnp
in
inc
test
imul
stos
adc
popa
xor
jmp
add
inc
push
adc
mov
ljmp
dec
imul
inc
jmp
test
xor
sahf
push
push
xchg
xchg
xchg
enter
push
sub
movl
mov
repnz
adc
gs
call
mov
sbb
add
push
out
je
gs
adc
scas
cmc
shlb
inc
mov
rcll
outsb
dec
mov
inc
mov
shll
or
jecxz
inc
cmp
test
cltd
xchg
popa
inc
movsl
inc
push
mov
mov
repz
adc
mov
sub
fsubrs
dec
push
cltd
in
cld
insl
or
mov
inc
pop
mov
test
push
pop
push
stos
pop
fwait
jns
cmp
imul
sarl
loopne
inc
rcll
adc
cli
pop
cmp
lods
aas
std
add
out
loope
xchg
in
fs
push
mov
xchg
enter
xor
xor
test
xor
out
fsubl
sub
dec
aad
add
int3
sub
or
imul
xchg
sbb
push
mov
jnp
mov
jp
imul
jle
subb
and
repz
fcmovnb
cmp
sahf
xlat
sub
repz
xor
jmp
cltd
push
push
dec
ds
ss
adc
mov
out
mov
pop
mov
repz
or
arpl
cmp
mov
push
das
mov
rorb
cli
push
sub
das
subb
push
test
sub
pop
add
test
sub
push
cs
mov
inc
mov
cmp
lds
ret
les
mov
push
jne
aaa
dec
sbb
gs
jno
dec
push
or
sub
and
aam
loopne
cmpb
mov
cmp
out
mov
cmpsl
inc
inc
scas
inc
jb
pop
xor
outsb
sbb
xor
ss
repz
push
scas
test
mov
sbbb
fsubs
xchg
in
fisubl
xchg
mov
lret
andb
push
ja
mov
and
dec
and
sbb
sbb
mov
mov
jb
test
inc
mov
in
mov
cli
pop
jo
cwtl
dec
insb
outsb
mov
xchg
cmpsl
cli
xor
inc
sub
dec
jns
xchg
sbb
insl
pusha
test
push
mov
jo
cltd
dec
jl
pop
or
or
mov
nop
scas
loope
cmp
es
adc
pop
cmp
test
adc
jp
inc
xchg
cmp
and
mov
xchg
int3
xchg
repnz
out
orb
push
fldl
adcb
inc
testl
xchg
xlat
cmp
xor
inc
dec
mov
test
js
adc
icebp
push
out
or
inc
xchg
dec
push
inc
sbb
addb
movsl
jno
and
push
pop
jns
lret
sbb
adc
mov
test
ja
test
cmc
inc
pop
out
movb
popa
lds
push
sbb
xor
fwait
push
jp
mov
jle
movsl
mov
adc
jmp
and
popa
sarl
add
push
call
pop
fildl
in
inc
addb
or
jge
mov
and
push
test
das
push
testb
in
xchg
or
push
gs
sbb
sbb
les
bsf
loope
mov
je
out
lret
scas
nop
fisubrs
shlb
fwait
mov
test
jns
adc
test
sarb
or
cmp
push
daa
scas
mov
or
movsl
scas
or
mov
lea
jg
dec
stos
pop
adc
jbe
pop
in
jle
aas
lcall
jns
call
loopne
in
xchg
cmpb
data16
incb
mov
mov
popa
shr
out
clc
pop
loop
dec
adc
xor
add
ss
bound
jg
xchg
mov
push
call
int3
int3
psadbw
mov
jo
xchg
sbb
adc
xor
test
sub
dec
sub
inc
fcomps
mov
xor
mov
data16
rcll
adc
insl
inc
aas
movsl
jle
sub
jle
in
imul
fdiv
pop
int
push
pop
frstpm(287
mov
idivl
sar
stos
test
das
fsubl
mov
in
mov
mov
cltd
fisubl
mov
inc
add
sub
movsl
outsb
or
loopne
sbb
and
or
ss
js
or
es
roll
mov
mov
outsb
mov
test
inc
gs
add
out
test
and
mov
dec
cli
fbstp
mov
jnp
fstp
sub
mov
repz
cmp
hlt
dec
or
sbb
shr
push
punpcklbw
test
push
push
rorb
loop
popa
sbb
fwait
scas
cmpxchg
aas
popa
test
ljmp
add
insb
push
push
scas
lret
add
or
or
test
mull
mov
fadds
stc
ds
adc
popf
add
or
pop
sub
faddl
add
test
cmp
std
inc
and
push
fistl
test
add
test
cmp
xchg
jne
or
sub
add
jp
call
cmp
cmp
cmp
sbb
pop
sbb
xor
loopne
pop
mov
int3
movsl
push
mov
mov
pop
push
add
inc
pop
daa
push
add
subb
int3
stc
stc
aas
hlt
rorb
mov
inc
mov
shl
ret
mov
fcomps
pop
mov
add
aas
mov
inc
pop
lea
lret
mov
ja
rcll
lcall
mov
mov
inc
xor
jns
popf
dec
mov
test
into
dec
cmp
insl
outsb
cwtl
ffree
ds
inc
outsl
cmpsl
stos
or
shrb
or
mov
cmp
bound
and
or
pop
dec
fcmovne
dec
nop
ja
cmc
dec
lds
lods
and
pop
push
push
push
mov
cmp
cld
loope
into
outsb
adc
xchg
nop
inc
and
pushf
pop
xor
push
out
mov
cmpsl
mov
jbe
in
out
ret
lret
xor
cmpsl
xor
test
movsl
enter
add
cmp
xlat
ret
loopne
outsl
jge
sub
jbe
jnp
iret
out
push
sub
mov
or
push
outsb
jb
mov
cmp
and
add
aam
jg
jp
scas
jb
notl
dec
ficoml
insl
loop
push
inc
mov
cwtl
lret
push
scas
xchg
clc
mov
dec
sbb
xchg
mov
sahf
jle
lret
or
hlt
add
data16
and
out
fs
popa
movsl
dec
test
out
mov
jb
mov
xchg
or
fdivl
push
movsl
or
mov
addr16
jnp
mov
ret
mov
repnz
cmpl
mov
lods
jp
inc
xchg
and
jg
pop
addr16
dec
inc
mov
xchg
mov
pusha
loopne
ljmp
lods
popa
idiv
jbe
lods
xlat
hlt
lods
cli
imul
punpckhdq
mov
pop
mov
je
jp
xchg
nop
mov
imul
mov
es
xchg
xchg
mov
test
stc
xchg
adc
push
frstor
push
xor
lret
jecxz
add
data16
dec
test
sbb
push
sbb
cmp
data16
ffree
pop
jle
stos
sub
jge
jb
mov
popf
inc
mov
inc
adc
sarb
mov
add
out
cmpsb
mov
push
fstpl
mov
inc
sbb
jmp
fldz
cltd
and
popa
mov
pop
or
xor
roll
jo
out
sbb
ret
adc
ficoml
xchg
insl
into
imul
lcall
pop
jne
cmp
dec
fsubrs
int
mov
pop
pusha
cmpsl
outsl
push
test
lods
or
jg
std
mov
xchg
sub
enter
repz
fwait
into
sahf
cmp
adcl
outsl
int3
or
fcoml
xlat
insb
nop
sub
pusha
cmp
popf
adc
pushf
ss
sar
out
add
push
negl
xchg
movsl
je
xor
add
lock
mov
xchg
inc
popf
in
ds
inc
fmuls
addr16
sub
adc
je
mov
les
fwait
xchg
pop
xor
push
mov
add
cld
push
xor
nop
popf
mov
xchg
pop
popf
push
dec
xchg
popa
je
sti
negl
mov
mov
pop
ss
addr16
cmpsl
push
jb
fadds
mov
and
clc
xor
addr16
int3
ds
nop
and
js
dec
mov
iret
mov
inc
movsl
fstpl
adc
stos
sar
imul
cwtl
push
clc
cmpsb
mov
sub
fsubs
mov
cmp
dec
test
sti
and
cmpb
pop
cmp
fnstsw
out
movsb
sarl
call
lret
pushf
repnz
lret
test
stos
repnz
repz
sub
xchg
cvtdq2ps
std
pop
pop
cmp
cli
inc
mov
xchg
loope
xchg
inc
ret
pop
sbb
inc
testl
add
shlb
jbe
aas
sbb
mov
outsl
out
and
sub
dec
pop
sbb
dec
pushf
jne
mov
test
and
pop
xchg
outsb
or
loopne
mov
xor
fwait
mov
or
movsb
lcall
adc
dec
or
dec
inc
jnp
adc
jo
out
adc
add
mov
bound
dec
outsl
jns
fcoml
and
pop
cmp
clc
test
inc
xchg
jae
aas
test
rcrl
arpl
fwait
adc
mov
mov
popa
icebp
inc
jno
in
mov
xchg
or
aas
adcl
scas
imul
das
ja
sbbl
push
insl
cmp
xor
pop
fisubrl
out
add
pop
dec
adc
das
or
add
or
mov
mov
xchg
and
jne
cmpsl
xchg
test
fdivrl
mov
jecxz
test
cmp
or
repz
pop
jns
mov
mov
lahf
xor
dec
dec
fs
jecxz
pop
inc
ss
add
cmpsb
aas
lods
je
andb
add
cmp
adc
hlt
ret
repz
ret
and
cli
mov
rclb
mov
xor
fcomip
pop
xchg
push
roll
mov
mov
cmp
inc
push
xchg
popa
notb
cmc
js
imul
in
fs
dec
sahf
loope
call
addr16
mov
xlat
xor
mov
fcmovnu
xor
xchg
mov
sti
scas
adc
jne
mov
adc
xchg
mov
aas
cs
jae
das
jo
add
dec
push
cli
mov
and
sbb
sbb
sbb
mov
push
andb
cmpl
pop
sub
jmp
jmp
adc
jg
mov
movsl
xchg
and
add
mov
mov
jge
push
add
je
inc
adc
lods
ret
or
or
popl
cli
lods
adc
xor
rcll
add
lahf
adc
sbbl
dec
mov
jns
inc
or
jg
repz
and
into
sbb
roll
test
in
dec
mov
mov
inc
icebp
jns
test
cltd
sbb
jecxz
add
mov
mov
daa
inc
or
lahf
sub
aaa
fwait
jns
mov
scas
lods
jae
ss
into
pop
dec
push
mov
pop
xchg
add
cli
jge
lods
jg
imul
push
repnz
xor
mov
das
push
test
fistpll
push
es
negl
xor
or
mov
repz
imul
mov
lret
lods
dec
das
sbb
xchg
addb
add
xchg
ret
fisubl
mov
pusha
xchg
cmpsl
jns
test
ds
jnp
daa
mov
mov
aaa
test
push
das
das
repnz
jbe
sbb
ss
jl
es
loop
out
push
rorl
stos
adc
pop
jg
sbb
mov
std
xor
cmp
outsb
sahf
fnstsw
cmp
les
adc
dec
cmp
jle
ljmp
lahf
xchg
and
pop
repz
in
roll
outsl
repnz
sti
jno
fistl
cmp
insb
dec
mov
repnz
scas
xor
stos
pop
mov
mov
mov
sbb
push
mov
mov
xchg
xchg
and
jae
sub
mov
movaps
push
and
push
mov
xchg
outsb
adc
adc
or
test
push
test
imul
push
mov
je
push
sahf
addr16
sbb
in
mulb
sub
mov
inc
push
or
aad
jbe
stos
pop
es
test
roll
loopne
jmp
xchg
aam
int
lock
ror
out
adc
xchg
mov
outsb
pop
xlat
cmp
mov
sub
dec
shll
lods
out
jecxz
cmp
mov
pushf
cmpsl
mov
mov
cmp
imul
outsb
pop
loopne
dec
dec
ficoml
arpl
and
mov
xorb
les
js
stc
xchg
repz
mov
mov
daa
fdivrs
and
push
or
movsb
mov
push
mov
xchg
addr16
je
rcrb
xor
iret
mov
adc
ret
aas
hlt
pop
pminsw
ljmp
sbb
pop
add
movsl
pop
call
mov
cmp
mov
mov
fdivl
fidivs
inc
mov
mov
mov
add
xchg
jns
jo
gs
call
xor
mov
cmp
addb
mov
mov
test
push
insl
ljmp
bound
js
jmp
movsl
sbb
mov
xchg
jnp
stc
mov
xor
mov
sub
in
out
fisttpll
rorl
xchg
dec
xchg
cmp
pop
sbb
xchg
shrl
jbe
mov
adc
mov
mov
fldenv
std
jno
jg
leave
mov
cmpsl
and
mov
iret
dec
mov
xor
mov
pop
xchg
sti
pusha
mov
cmp
movsl
sarl
out
jnp
lahf
xor
in
les
test
xor
sahf
mov
pop
sub
mov
js
and
inc
cmpb
xchg
mov
clc
mov
shl
adc
sahf
mov
mov
or
ds
es
sub
lock
in
fisubs
mov
aam
leave
xchg
mov
mov
paddsb
pop
mov
mov
test
cltd
mov
push
dec
lret
cs
mov
or
dec
or
sbb
jbe
lahf
leave
xchg
into
mov
jecxz,pt
dec
pop
fs
bound
test
push
movsl
out
pop
push
es
mov
sti
or
push
sbb
addr16
mov
pop
fsubrl
mov
loope
pusha
inc
mov
sub
pop
ds
stc
pop
cwtl
cwtl
out
or
scas
xchg
xchg
push
fwait
push
mov
shll
push
sub
ljmp
clc
scas
test
xchg
mov
sub
aaa
ret
xor
push
mov
dec
sub
mov
data16
ret
outsl
jecxz
repnz
test
idivb
les
ss
out
test
jmp
xor
movsb
scas
jl
mov
ret
in
and
cmp
les
add
mov
movsb
inc
enter
je
push
shrl
adc
jecxz
jmp
rorb
jns
inc
jg
into
je,pt
cs
aas
cmpb
call
pop
es
into
lods
pop
test
ret
jnp
mov
es
mov
mov
cmp
aaa
daa
outsl
or
inc
cmp
fdivrs
jecxz
jnp
pop
or
lock
daa
xor
pop
mov
mov
push
jmp
and
sbbl
push
test
gs
lret
sbb
xchg
inc
testl
and
or
adc
jl
mov
pop
popa
or
in
jp
push
xor
lahf
movsb
lcall
and
mov
loopne
les
std
push
gs
sbb
bound
and
fucom
cld
xchg
xchg
and
xlat
cmp
cmp
xchg
lret
out
jns
mov
inc
adc
dec
mov
pop
orb
push
lods
cmp
cltd
sub
pop
test
pusha
fstpl
cmpsl
movsl
out
stos
jne
stos
and
or
shlb
scas
dec
cmp
pusha
addr16
imul
adc
call
and
sbb
add
mov
test
inc
cmc
daa
loope
test
sub
cmp
movsl
test
pop
adc
fwait
out
jns
int
push
mov
les
lret
xor
in
test
sarb
addr16
ror
orl
mov
fwait
cmp
inc
cltd
testb
addr16
es
xchg
jmp
pop
mov
lret
jae
or
lds
mov
dec
mov
mov
pop
cmp
sub
pop
scas
push
cmp
pop
mov
cmp
ficoml
cmp
lods
aam
adc
icebp
xchg
insl
sub
push
mov
cwtl
out
jmp
mov
scas
jg
test
jno
sub
jo
pop
sub
cltd
jae
clc
push
adc
sub
cwtl
sbb
push
sbb
das
adc
adc
popf
jb
pop
sti
je
mov
or
cli
xorl
ss
xchg
int3
int3
ja
mov
rcrb
lcall
sbb
mov
mov
or
cmp
add
roll
mov
and
inc
in
cmpb
out
mov
ljmp
cmp
into
pop
mov
aaa
loope
je
jns
push
push
in
inc
aaa
pusha
inc
rol
call
xchg
mov
dec
mov
push
pushf
mov
les
loope
xchg
movsl
scas
aas
gs
and
repnz
pop
cmc
inc
xor
mov
mov
cmp
jmp
inc
rcl
int
push
outsl
call
imul
push
fwait
movsb
out
sarb
adc
and
jb
push
iret
fcoml
js
mov
xlat
test
movsl
or
mov
jne
adc
lea
inc
mov
test
mov
cltd
lods
movsl
ret
mov
scas
mov
bound
icebp
scas
in
pop
insb
adc
cmp
mov
scas
jmp
inc
cmp
cs
addb
cmp
cld
and
testb
adc
sar
dec
sub
xchg
mov
mov
in
sti
mov
dec
pusha
mov
add
jae
sti
add
movsl
push
test
fsubl
cmp
jo
fsubrs
jge
mov
pop
jge
mov
add
xlat
mov
jl
mov
add
test
pop
push
pop
in
mov
mov
fnstcw
cli
and
int3
or
aaa
fadds
movsl
xorl
or
imul
jp
or
pop
test
call
jbe
test
movsl
mov
sbb
push
mov
enter
pop
jnp
test
test
adc
push
pop
jecxz
pop
pop
data16
or
out
test
inc
ljmp
jo
sub
add
lock
pop
ret
sbb
sbbb
inc
mov
movsl
negl
fdivr
adc
add
shlb
cmp
lret
les
andl
adc
movsl
movsl
or
in
xchg
mov
sub
mov
xchg
add
fadds
cmp
xchg
push
or
test
negb
mov
aaa
pop
adc
aaa
fwait
mov
gs
mov
push
cli
hlt
or
mov
fwait
lret
rclb
add
sti
pushf
mov
xchg
mov
inc
push
xor
fistl
and
jecxz
jns
dec
inc
jl
or
je
popa
fwait
and
jnp
xor
movsl
jecxz
xor
lret
lods
or
aaa
jns
out
aaa
mov
rol
cwtl
or
das
sti
outsb
mov
cwtl
dec
inc
movsl
add
gs
sbb
rorb
scas
mov
int
scas
stc
fisubl
std
or
sahf
jo
mov
jnp
mov
inc
ret
adc
data16
inc
ficoml
cli
dec
rcl
jmp
jnp
and
popf
clc
mov
imul
cmp
cmp
rclb
dec
out
movsb
pushf
pop
fsubl
xchg
xor
in
jmp
lods
out
add
xchg
mov
push
movsl
xchg
jae
out
and
add
jle
inc
xlat
xchg
jmp
jg
sti
jno
test
inc
dec
mov
arpl
icebp
fsubl
push
inc
cmp
call
mov
outsl
jmp
jl
movsb
addr16
mov
outsl
xchg
jmp
pop
mov
scas
lds
adc
jl
mov
mov
cmp
or
in
bound
and
jnp
dec
inc
out
int3
cs
xor
sbb
fst
sub
sub
test
inc
sub
lock
mov
cmp
lahf
add
mov
bound
or
xor
test
test
mov
pop
dec
stc
leave
mov
mov
test
stc
sbb
inc
inc
xor
je
push
repnz
scas
xchg
and
das
sub
into
sbb
outsl
cmpb
push
inc
adc
inc
jns
mov
mov
andb
jbe
jb
test
or
test
xchg
gs
xchg
xchg
lods
fists
ret
outsl
jmp
lods
push
push
test
mov
jbe
xor
stc
inc
insl
adc
mov
push
sub
in
lahf
test
add
scas
cmp
and
je
sbb
mov
cmp
xlat
ret
das
test
jne
mov
ja
int3
xor
cld
lods
sbb
mov
mov
sti
out
rcr
sub
dec
int
and
sub
inc
xchg
mov
lea
in
adc
roll
stos
inc
bound
je
in
rcll
rorb
popf
aas
jle
dec
sub
sbb
mov
jmp
inc
mov
jae
into
daa
sub
adc
push
arpl
ret
out
cmp
mov
sub
frstor
decb
lret
adc
rorl
lret
lcall
lods
sub
in
mov
ds
jmp
imul
cmp
jae
es
mov
lods
cmpsb
inc
rol
cli
ffree
decb
es
mov
and
jle
push
sbb
test
out
sub
dec
iret
mov
hlt
out
push
popa
add
xor
dec
repz
enter
pop
pop
sub
cmp
inc
pop
stc
mov
int3
movsl
lret
cs
outsb
out
push
cwtl
mov
aam
ja
xchg
out
movsl
push
add
out
call
jge
push
fidivrs
fucomi
pusha
rolb
add
cmpsl
sarb
sbb
rolb
out
fisttps
xchg
dec
lock
fsubrl
jle
faddl
push
movsb
outsl
mov
xchg
mov
test
popf
mov
jnp
and
push
mov
clc
jg
xlat
ret
repz
xchg
xor
cmpsb
dec
jg
insl
ffree
pop
xchg
ret
leave
xor
test
sub
in
movsb
insb
in
and
and
jae
sbb
mov
das
mov
mov
and
or
out
xor
fcmovu
mov
and
lds
jmp
dec
outsb
and
jns
cmpsb
mov
push
cmp
dec
cmpb
cli
test
cmp
push
insl
js
out
stos
into
inc
adc
jae
jle
add
cld
test
stos
cs
rcl
jns
push
sub
add
pushw
je
roll
sub
xor
xchg
dec
inc
scas
cmpsl
ja
mov
movsl
push
or
xlat
cltd
inc
shlb
sbb
jns
test
mov
mov
mov
aam
loopne
test
inc
adc
enter
and
into
pop
jno
xchg
mov
jg
inc
test
loope,pn
les
and
cmp
repnz
push
mov
mov
pop
pop
push
push
adc
xorl
les
lods
test
mov
mov
cmc
cmp
and
mov
ficompl
sbb
rcrl
mov
in
or
mov
fwait
mov
xchg
movsl
fildl
cmp
fnstsw
sahf
lret
xchg
lea
mov
aam
sahf
in
inc
pop
lock
test
dec
and
test
addb
or
int3
cmp
push
jno
test
sub
add
popf
push
pushl
push
sub
cli
adc
rorl
shl
jmp
mov
jae
cmp
mov
xor
xchg
xchg
push
fstpt
inc
mov
pop
stos
mov
insb
mov
mov
jmp
popa
sbb
cwtl
or
adc
xor
stos
mov
repnz
xchg
ljmp
inc
movsl
mov
ja
shll
inc
fcmovbe
mov
pop
xor
fidivrl
adc
and
call
or
adc
lods
mov
inc
dec
out
rorb
lea
lock
pop
or
and
shlb
sub
fnstenv
je
jnp
mov
cmp
push
shlb
inc
loopne
xchg
inc
push
jp
sub
test
repz
push
js
and
and
loopne
pop
int
mov
movl
cld
movsl
js
mov
fisttps
mov
rcrl
jae
inc
mov
inc
js
gs
jecxz
and
mov
fildl
pop
mov
dec
fsubl
push
adc
sub
jns
aad
sub
pop
popf
jl
xlat
fs
out
shlb
lret
mov
mov
andb
dec
mov
aas
daa
jp
mov
andb
lcall
fsub
add
mov
out
popf
out
push
pop
stos
jg
shl
out
cltd
pop
inc
push
mov
sub
push
cmp
push
shlb
pop
dec
cmp
jb
or
jg
adc
adcb
push
push
mov
loope
jne
xor
std
mov
dec
jno
std
mov
test
mov
push
imul
lcall
sbb
movsl
xchg
and
maxps
rclb
cltd
xchg
sbb
xor
cmp
loopne
movsl
stos
addl
aam
lcall
test
and
sbb
repnz
add
fiaddl
mov
mov
aad
mov
jmp
adc
and
setge
sub
aaa
mov
loop
dec
jle
cmpb
mov
sbb
xorb
cmp
mov
cmp
bound
jbe
sbb
ljmp
jo
jo
ror
dec
jno
and
xor
pop
mov
inc
inc
lds
mov
inc
das
out
xor
xor
std
lods
cmpl
xchg
sub
jne
in
cwtl
or
or
push
xchg
pop
mov
fbstp
int3
sarl
and
daa
aaa
ret
roll
xorl
jecxz
aam
mov
ret
inc
lds
aam
mov
adc
push
sbb
mov
pusha
jp
dec
push
bound
sub
sbb
cli
andb
adc
adc
insb
hlt
dec
inc
outsb
pop
xchg
rcrl
pop
xchg
xchg
xchg
test
in
sbbl
ja
adc
sub
rol
xchg
bound
lret
movsl
mov
pop
test
inc
pop
and
mov
repnz
mov
add
fs
loopne
mov
adc
out
pop
cli
jnp
jbe
test
fwait
iret
aaa
enter
in
sti
inc
cltd
jmp
push
mov
cmc
fcmovu
mov
cs
adc
shrb
or
fldcw
or
mov
aam
mov
jp
xchg
cmpsb
testb
rorb
sahf
dec
mov
jae
test
mov
mov
add
ret
mov
jp
sub
paddsb
jo
mov
push
xchg
xor
pushf
xor
jno
enter
into
mov
jno
mov
int3
cmp
lods
fistl
cmpb
fwait
add
popf
adc
sbb
mov
xchg
into
out
enter
cmp
idiv
ja
adc
ljmp
mov
push
adc
test
mov
leave
pop
push
mov
loope
rcrl
push
in
insb
push
addb
out
scas
les
cltd
das
adc
dec
nop
sahf
pop
xchg
jg
xor
out
loopne
leave
and
imul
shr
add
push
xchg
cmp
adc
out
je
fistps
mov
jbe
ljmp
cmp
clc
pop
rcrb
out
jb,pn
into
push
cmp
movsl
pop
sahf
and
or
andl
movsb
rcll
mov
and
cwtl
nop
xchg
in
dec
jl
cld
sbb
fdivl
xor
cmp
sbb
inc
cltd
push
push
add
test
cmp
mov
ret
sub
and
lock
xchg
dec
dec
ja
adc
push
sbb
sarb
test
clc
sbb
add
aad
jle
shl
add
and
cmpsb
loope
sahf
mov
dec
data16
sbb
ret
mov
daa
cmpsl
fnstcw
inc
jnp
mov
mov
call
xlat
fcompl
fildll
das
icebp
movsl
mov
rep
ret
insl
adcl
dec
rdpmc
pop
shll
add
add
jo
ret
sbb
test
pop
xor
lea
sub
push
push
ret
in
and
inc
adc
pop
test
dec
jle
out
and
enter
rorl
xor
mov
adc
pusha
cmp
add
pop
mov
sbb
adc
nop
mov
inc
test
and
addr16
inc
repz
out
cmc
adc
cmp
stos
dec
ret
wrmsr
xchg
inc
pop
jmp
xchg
ret
jle
mov
jp
enter
push
ret
mov
cs
jge
pop
inc
ret
inc
push
subb
and
pushf
and
fdivrl
in
loopne
add
insb
push
mov
cmp
fidivs
lret
pop
shlb
dec
call
aam
insb
bound
mov
pop
cmp
loope
xor
push
arpl
lock
inc
incl
jbe
mov
pushf
cmp
adc
out
aas
jmp
insb
int3
aaa
imul
jne
movups
push
pop
mov
ret
mov
mov
scas
cmp
xor
hlt
mov
ret
fcomp
mov
adc
aas
sbb
xchg
mov
mov
and
cmpb
shlb
mov
ja
xchg
mov
sub
aam
scas
xor
sbb
mov
out
or
ret
std
mov
pop
ret
test
aas
ret
mov
add
dec
jbe
mov
je
scas
cmp
pop
ret
sbb
or
and
mov
push
jb
aaa
stos
ret
lods
ror
or
std
add
ret
hlt
test
pop
ret
sti
xchg
test
fimull
xchg
inc
stos
out
adc
xchg
pop
movsb
jmp
ret
out
popf
xchg
ss
ret
pop
jae
xor
stc
pushf
lcall
jmp
sbb
pop
inc
arpl
loope
test
mov
mov
movsb
loopne
add
push
fwait
xchg
ret
jmp
sbb
addr16
out
ja
ss
jno
outsl
testl
test
sub
shld
call
arpl
test
adc
push
retw
test
xor
mov
ret
adc
repnz
sub
xor
shll
out
arpl
out
inc
mov
cmpsb
out
lahf
xor
ret
xchg
jl
dec
bnd
or
mov
jecxz
jae
popa
stos
pop
and
xchg
loope
lahf
cltd
mov
loop
push
xor
push
adc
mov
or
mov
cmpsl
bound
data16
es
sub
ret
mov
xor
jge
cltd
mov
mov
lds
push
and
loop
ljmp
ja
mov
loope
mov
jp
ficompl
inc
pop
mov
ret
inc
mov
ret
fsub
adc
xchg
mov
mov
and
inc
jecxz
cmpsb
and
ret
sar
les
pusha
add
sub
mov
or
pop
cmpsl
xchg
rcl
jecxz
fcmovne
popa
xor
jmp
push
shr
mov
mov
sub
or
mov
jmp
adc
mov
shlb
out
cli
sbb
jmp
jnp
cmp
or
pop
outsl
mov
leave
scas
xor
inc
pusha
sbb
mov
sbbl
int3
mov
bswap
call
inc
adc
cmp
lods
mov
hlt
mov
fcompl
lods
push
mov
popa
push
and
sub
mov
mov
jecxz
enter
pop
pop
arpl
daa
jge
push
aam
fs
mov
add
les
mov
les
adc
jg
loopne
gs
jb
mov
call
xchg
aaa
rep
cmp
std
cli
pop
xlat
mov
test
dec
and
lods
pop
pusha
fs
and
leave
push
cmp
loope
jne
mov
test
pop
push
inc
mov
pop
dec
ds
mov
cwtl
mov
mov
xor
push
dec
sub
adc
xchg
sahf
stc
iret
cli
xor
inc
addr16
sti
nop
mov
adc
mov
cltd
nop
call
movsb
movsl
sub
lret
xchg
lret
adc
add
sbb
mov
imul
ret
dec
sub
push
sub
test
xchg
mov
xchg
mov
stos
inc
inc
adc
xor
leave
pusha
add
scas
insl
iret
pop
cli
mov
fsubs
mov
in
sbb
stc
pop
xor
jp
jnp
jecxz
ret
mov
cmpsl
or
movsb
mov
in
pusha
mov
insl
cmp
out
pop
mov
fistl
mov
test
out
or
outsl
push
jg
pusha
mov
mov
movsl
cmp
sbb
out
dec
add
adc
mov
stos
in
mov
jg
cmp
adc
cld
popf
jno
iret
cwtl
popl
and
fs
add
add
xorb
push
jnp
sbb
aam
scas
xchg
pop
push
iret
cltd
stos
cmp
lods
mov
das
std
or
in
iret
pop
mov
cld
pusha
inc
push
jl
ret
adc
sarb
js
jecxz
daa
pop
scas
sbb
cmp
mov
out
out
mov
ds
and
xor
xchg
mov
inc
inc
fsubrs
and
inc
subl
jmp
filds
lcall
dec
adc
fs
cmp
or
pop
gs
mov
frstor
in
push
jbe
gs
dec
scas
ds
mov
imul
push
and
mov
and
mov
adc
insl
mov
lock
into
sbb
popa
in
cltd
scas
add
push
xchg
or
cmp
into
popf
lahf
lea
mov
int
mov
test
jne
je
inc
int3
ret
add
pop
loop
xor
cltd
outsb
cmp
adc
insb
lods
cwtl
add
push
scas
cmp
sub
push
cmp
push
xchg
movsl
repz
add
sbbl
jp
push
in
adc
fistl
xor
js
inc
stc
mov
mov
add
loope
ja
outsl
test
loop
cli
push
test
mov
xchg
sbb
pop
pop
xchg
or
pop
sub
into
dec
movsl
inc
mov
jbe
mov
scas
lods
mov
test
xchg
mov
adcl
movsl
sbb
mov
adc
cmp
fsubrs
or
xchg
andb
fidivl
cltd
fisubl
faddl
push
loop
sub
fcompl
mov
rcl
jo
rcr
xchg
int
push
out
ss
daa
scas
movsl
mov
xchg
popa
cmp
pop
sub
test
das
les
xor
je
adc
lret
mov
mulb
inc
cmpsb
xor
push
js
scas
dec
mov
mov
mov
addr16
and
cmp
jle
lret
cmpsl
cmpsb
lods
bswap
or
adc
jnp
movsl
mov
push
mov
insl
sahf
test
iret
xor
out
sbb
mov
xor
mov
sub
ret
fwait
pusha
or
and
es
fdivrs
xchg
sbb
js
rorb
adc
inc
push
and
inc
xor
fldt
cbtw
lods
lahf
mov
mov
loopne
jg
mov
inc
jne
fisubrl
lock
mov
jle
jg
popa
js
add
inc
stc
icebp
pop
data16
cwtl
les
std
das
jecxz
sbb
in
sbb
inc
mov
mov
push
scas
in
sbb
mov
loop,pt
mov
push
jo
fwait
les
and
or
mov
mov
sbb
mov
xchg
out
mov
aaa
shll
ss
sbb
jne
mov
sbb
mov
shrl
mov
add
gs
xor
inc
mov
clc
or
cwtl
fimull
inc
std
pusha
test
addr16
adc
ss
xor
sysexit
sti
filds
aam
js
push
pop
mov
add
ljmp
adc
push
mov
ret
les
aaa
mov
adc
jge
adc
daa
or
or
movsl
aad
nop
xor
pop
loope
loope
xchg
xchg
popa
ljmp
neg
jbe
jmp
jp
subb
sbb
push
das
mov
outsb
xchg
and
int
inc
mov
icebp
shrl
xchg
cmp
fildll
insl
jmp
push
push
ljmp
mov
movsl
int
cmp
cltd
movsb
jbe
cmpb
mov
xchg
push
hlt
jb
mov
sbbl
jge
repnz
inc
popf
mov
insl
fildll
push
mov
bound
mov
adc
jnp
je
int
pop
mov
and
lds
or
sahf
insb
movsl
cmp
pop
sub
inc
pop
ret
ja
arpl
scas
mov
adc
sbb
sub
mov
into
cmp
cmp
out
push
mov
jg
push
push
jg
xor
stos
mov
cmc
test
mov
push
fldenv
loope
cli
xor
or
int
loopne
xchg
lahf
out
push
fwait
sub
jne
add
xchg
sub
dec
hlt
test
or
popa
push
adc
push
movsl
xor
jmp
add
xchg
jns
insl
push
in
lea
jge
mov
fs
in
jns
xchg
sub
movsb
inc
add
jge
or
into
xchg
stc
rcrl
add
mov
or
dec
imulb
pop
jp
add
xchg
mov
mov
cwtl
mov
push
push
cmp
dec
cmpb
fwait
arpl
sti
into
xchg
xor
inc
sbb
or
in
lcall
stos
pop
mov
mov
or
repnz
test
xor
pop
jp
mov
test
faddl
sbb
xor
or
test
out
jae
cmc
adc
xorb
xor
jb
adc
mov
cmpsl
jmp
lods
in
sbb
cmp
pop
pop
pop
fsubrl
hlt
mov
push
mov
mulb
movzbl
out
cli
xor
xor
mov
in
and
movsl
push
gs
cld
movsl
inc
mov
mov
adc
cli
cmpsl
aaa
push
sub
sbb
mov
sysret
xchg
aam
rcll
sti
outsb
push
push
push
movsb
out
test
mov
adc
fadds
push
pop
dec
dec
icebp
jge
out
outsl
orb
inc
fdivrl
mov
mov
fwait
popl
in
adc
test
loope
xchg
xchg
inc
mov
lcall
addb
lods
add
fnstsw
into
sub
mov
pop
or
xchg
mov
scas
sub
shl
xor
ss
and
aad
sbb
jo
or
sub
jmp
out
outsb
movsl
lret
in
jecxz
test
jb
sub
movsb
dec
push
stos
arpl
add
ds
cmp
sbb
sub
mov
std
into
jp
xchg
sbb
add
sub
into
outsb
fidivs
xchg
loope
or
mov
js
jo
mov
cmc
sub
cltd
xchg
sbb
rcl
out
sbb
inc
jo
outsb
aaa
push
cmpsl
add
push
or
clc
sti
mov
ljmp
outsb
pop
mov
mov
fidivs
push
repz
lret
loop
bswap
push
cmc
xor
sbb
rcr
inc
add
pusha
stos
push
fiaddl
popa
lock
aaa
fldz
and
jp
movsl
int3
out
inc
mov
sbb
subb
clc
test
test
dec
xor
xchg
sarb
fwait
int
dec
mov
jp
or
test
inc
pop
xor
aas
inc
push
xchg
and
jp
in
in
shrb
cmc
xchg
mov
add
out
mov
or
cli
es
iret
divl
pop
jne
xor
mov
xor
int3
mov
pop
jecxz
test
dec
xchg
inc
adc
shr
movsl
push
das
adc
jl
imul
jns
push
icebp
jg
cmp
cltd
fcomps
insl
daa
push
cmp
push
movsb
cli
nop
addr16
cmp
lcall
js
pop
stc
mov
mov
push
push
and
test
in
mov
or
pop
mov
mov
mov
inc
in
movsl
sbb
insb
inc
push
mov
mov
scas
adc
clc
int3
pop
sub
xor
in
lcall
jns
jo
dec
in
or
mov
jle
jne
insb
mov
out
inc
jne
ljmp
fistps
pop
xlat
lea
outsb
mov
lret
cltd
and
imul
xchg
jns
jnp
std
sti
mov
xor
jns
add
sub
jns
cmp
por
aaa
scas
mov
sbb
xchg
mov
fistl
sarb
shrb
jecxz
jl
jb
loop
push
movsb
jb
fsubl
in
outsl
das
mov
andb
mov
mov
inc
sub
mov
std
pop
in
jle
xchg
inc
mov
out
jecxz
mov
lods
pushf
cmpsl
xchg
leave
dec
fimull
sbb
inc
mov
mov
jbe
cs
and
lret
test
lahf
loop
test
jo
cld
clc
sti
sub
leave
cmp
dec
in
cli
mov
or
xchg
pop
and
adc
mov
stos
popf
mov
mov
data16
lret
pop
scas
fsubl
fidivl
int3
mov
mov
and
popa
adc
mov
out
or
out
les
mov
jmp
push
in
jnp
fsubrl
mov
pop
xchg
jle
rcll
inc
scas
inc
rcrb
push
sub
movsb
dec
lea
arpl
out
clc
dec
push
pusha
or
cmp
push
lea
add
mov
mov
js
mov
jle
mov
dec
inc
dec
adc
clc
or
cmp
lea
mov
movsl
fs
xlat
sub
repnz
xor
das
xor
jbe
and
or
daa
shlb
cltd
fcompl
lret
dec
and
mov
in
mov
scas
fnstcw
xorb
addr16
fldl
adc
cmp
out
stos
jmp
scas
mov
lcall
fidivrs
cmpsl
jl
call
sti
mov
sub
sub
jle
inc
mov
add
sub
fdivl
test
sub
inc
scas
jb
ficoml
cmp
xchg
xchg
pusha
movsl
inc
aaa
xchg
popa
jnp
mov
leave
ds
inc
jb
inc
call
mov
nop
sub
xcrypt-ofb
cmpsl
imul
or
push
gs
or
xchg
pop
push
data16
cs
mov
cmp
fistpl
jb
push
xchg
mov
jp
cmp
outsl
movaps
mov
cmpb
inc
mov
cmpl
clc
cmp
aas
sub
pop
cwtl
inc
mov
inc
aaa
or
mov
inc
or
cmpsb
subb
sub
adc
mov
fnstsw
jg
jb
dec
mov
cmpb
out
mov
test
mov
jo
sub
dec
cltd
pop
ret
ja
and
out
cld
mov
ret
jbe
test
popa
pop
mov
ds
or
out
pop
lahf
mov
inc
dec
loope
xor
xchg
pushf
xlat
rcr
xchg
lret
dec
jne
lods
sbb
std
cmpsb
push
idiv
fidivl
cltd
shll
mov
pop
pushf
lea
stos
xchg
push
cmp
movsl
fiaddl
dec
scas
aad
lds
xchg
clc
les
in
inc
sub
rcl
imul
fs
repz
test
inc
loope
pop
mov
es
fstpl
cmp
cli
sub
lcall
dec
outsb
addr16
mov
clc
cmp
sbb
cmp
push
out
dec
pusha
or
shrl
lahf
imul
mov
jp
movsb
test
mov
mov
out
fnstcw
pop
inc
shlb
mov
or
stos
push
dec
fcmovnbe
and
xor
dec
frstor
push
in
es
ss
push
enter
and
nop
jmp
pushf
das
fildll
xchg
mov
movsl
mov
int3
mov
cltd
mov
mov
adc
cmp
xlat
addr16
mov
xchg
add
jno
sub
insb
xchg
lcall
test
mov
repz
jmp
movsl
jbe
pop
mov
adc
pop
aam
and
fdivrl
add
mov
ds
jg
mov
fwait
jnp
cmp
movsl
xorl
sbb
dec
cli
sbb
dec
jle
push
xchg
in
add
push
push
cmp
fcompl
rcr
mov
mov
pop
cmpsl
pushf
sub
shlb
jge
mov
mov
aaa
cmpsl
repz
iret
sbb
dec
movsl
inc
and
jbe
add
lock
lods
aaa
pusha
movsl
insl
pop
nop
stc
xor
scas
cmp
addb
adcl
mov
pop
push
cmp
push
ds
mov
divb
or
rorb
adc
ret
ret
nop
adc
not
js
ds
mov
pusha
cmp
stos
mov
adc
out
dec
inc
xchg
xor
mov
sub
jp
sarl
test
pop
inc
add
push
in
push
in
lds
lods
pop
fisubl
jb
out
or
and
mov
aas
mov
mov
gs
jne
dec
push
lods
sbbb
xchg
bnd
or
sbbb
sub
mov
insb
pop
rol
mov
movsl
fsubl
jb
addl
mov
incb
and
inc
jl
daa
lods
cmp
and
out
or
clc
add
std
and
scas
mov
dec
sbb
push
sbb
sbb
fucomip
je
mov
inc
mov
ss
mov
push
adc
scas
mov
sbb
pop
outsb
add
lret
pop
in
aaa
sbb
outsl
imul
jmp
adc
or
adc
rcll
mov
popa
dec
sbb
adc
addb
mov
popf
mov
mov
adc
cmp
shrb
pushl
adc
shrb
mov
pusha
int
sub
pop
mov
sub
jo
sbb
ljmp
lods
cltd
xchg
shlb
jl
xor
mov
inc
mov
mov
out
inc
and
jg
dec
jp
incb
mov
add
mov
fs
andb
xorb
push
sub
mov
dec
into
fwait
xchg
ret
or
movsl
cmpsb
clc
push
inc
jne
jecxz
addr16
pop
popa
int3
or
pop
fdivs
fwait
out
dec
cwtl
push
push
dec
fcmovnb
mov
push
xor
and
leave
pop
test
rorl
lretw
lahf
and
adc
adc
xor
pusha
mov
jo
ljmp
das
xor
imul
adc
loope
sbb
test
ret
lcall
fcmovne
and
cltd
jmp
js
jno
lds
mov
xchg
rcr
js
xor
test
aad
ret
inc
aas
cli
stc
out
jmp
out
cmc
add
or
sbbb
and
out
mov
push
ss
sarb
or
cmp
mov
jbe
int3
pop
movsb
xchg
repnz
shll
pop
push
lods
inc
mov
jbe
cmp
inc
sbb
lock
lock
scas
dec
and
mov
sbb
sub
xchg
mov
fisttpll
pop
mov
push
add
js
dec
pop
mov
aas
and
das
pop
in
push
xor
inc
je
push
rcl
xchg
cwtl
mov
mov
xor
lret
fadd
sahf
push
movsl
or
pop
mov
inc
pusha
sbb
pop
imul
xor
cmp
jb
sub
lods
dec
jmp
xor
push
pop
jns
cmpsl
add
xchg
mov
data16
xchg
or
ficoml
insl
add
js
fildl
xchg
dec
hlt
lods
mov
mov
pop
xchg
in
aam
iret
cld
add
repnz
mov
xchg
lock
xorb
call
dec
leavew
xchg
pop
cwtl
pop
and
mov
mov
ffreep
es
or
js
cmpsl
loopne
pushf
std
cmc
jl
int
mov
adc
push
rcr
jmp
ss
ljmp
push
pop
push
pusha
testb
jl
jbe
in
mov
jb
add
mov
lds
fisubrl
and
fcmovnb
dec
jle
mov
mov
in
add
mov
jnp
ljmp
fwait
and
fs
inc
orb
cmc
mov
dec
addb
jns
stos
xchg
mov
rorl
and
pop
sub
aam
rorb
bnd
xchg
insl
ds
dec
aas
mov
sub
testl
dec
movsl
sbb
xchg
push
mov
test
inc
xchg
into
out
sub
mov
sub
dec
sub
jb
rcrl
sub
movsl
jl
mov
test
aaa
std
inc
dec
jo
shll
into
sbb
pusha
out
xor
shlb
pop
cli
movsl
test
cmp
cmp
insl
sub
inc
cmp
cmp
add
outsl
adc
cmc
cltd
xchg
mov
fidivrl
dec
cli
mov
inc
mov
pop
rolb
dec
and
mov
mov
les
xchg
vpsubsb
clc
mov
movsl
xchg
jle
mov
xchg
enter
out
enter
pop
lcall
test
fwait
add
lea
fisubrl
inc
push
je
jl
leave
ret
mov
or
fsubrl
cld
and
mov
xchg
ss
xor
out
inc
add
loop
jo
mov
imul
xchg
xchg
and
mov
or
lret
addb
push
adc
dec
jle
pop
cmpsb
push
mov
into
push
popf
pushf
out
pop
push
lock
mov
mov
addb
cwtl
mov
lret
ret
ret
mov
test
rol
aam
sub
sub
pop
cwtl
test
test
dec
mov
mov
push
je
int3
xor
sbb
leave
add
loop
xchg
ret
enter
nopl
push
or
les
js
scas
cmpsl
fisubl
jno
jo
mov
mov
sub
xchg
mov
cmp
xlat
outsb
icebp
fdivrs
inc
inc
pop
int3
fisttpll
mov
mov
loop
add
ja
jno
sbb
test
mov
push
push
ret
mov
bound
dec
movsb
cwtl
gs
jnp
xchg
lods
or
ror
xor
ret
push
mov
pusha
lock
cmp
pop
add
or
cwtl
xchg
pop
lret
or
sti
adc
dec
jg
scas
fidivl
add
ret
adcl
out
or
ret
ljmp
sqrtps
adcb
mov
cwtl
lods
mov
ret
scas
jl
hlt
add
mov
add
lea
pop
loope
jge
xor
int
test
cmp
hlt
lcall
out
enter
push
ljmp
ret
test
push
ret
push
addr16
mov
ret
mov
in
xchg
push
xchg
bound
into
movsb
adc
pop
and
and
push
shlb
scas
shrb
sub
inc
stos
inc
fstps
mov
loope
fistps
ret
mov
xor
insb
ret
cmp
and
insl
dec
arpl
adcl
js
lahf
xor
cs
ret
mov
stos
mov
xchg
movsl
inc
mov
aas
jle
add
ret
ffreep
negl
popa
in
sbb
inc
adc
push
push
ret
adc
xlat
mov
mov
xchg
loopne
jecxz
pop
cmpsb
lret
fwait
xchg
add
pop
ret
outsl
jp
shlb
iret
ret
into
sbb
ret
out
daa
shl
cmc
stos
loope
lds
lods
aad
xchg
cmpsl
mov
push
add
xlat
adc
into
ret
in
rcrb
cmpsl
xchg
jae
xchg
mov
es
mov
lods
sbb
jl
jg
mov
decl
test
test
pushf
cmp
add
ret
sbb
inc
nop
pushf
add
cmp
and
mov
incb
xor
dec
inc
std
ret
pop
inc
lea
hlt
xchg
mov
test
jae
or
stc
mov
aas
mov
ret
jb
push
and
fsubl
fwait
loope
icebp
jge
or
cwtl
inc
fisttps
shll
xchg
imul
or
lods
xchg
jnp
scas
bnd
daa
out
cmpl
ret
lahf
inc
or
dec
push
shrb
jle
sub
push
mov
jnp
subb
pop
cmpsb
jae
call
inc
add
dec
lock
dec
bound
add
and
push
stos
cmpsb
or
mov
ret
in
rolb
mov
insl
sub
cmp
cwtl
ret
repz
jb
mov
push
fisubrs
cmp
mov
xchg
jb
xor
je
data16
jge
cmp
sbb
les
mov
cmpsl
lret
imul
fldcw
bound
jbe
negb
push
shll
ret
jne
adc
cmpsl
mov
xchg
push
test
ss
mov
dec
ret
ja
sbb
dec
xor
inc
push
jae
and
lods
push
mov
add
cmpsl
ret
pusha
xor
aas
sbb
adc
adc
icebp
mov
inc
push
loope
adc
movntps
ret
sbb
or
mov
xchg
mov
aaa
sar
xchg
mov
fisubl
sbb
stos
mov
sbb
repnz
dec
ret
int
push
mov
lods
push
cld
je
mov
and
movsl
pop
and
ret
cmc
jne
inc
add
cs
dec
mov
in
mov
outsl
pop
mov
lods
shl
add
std
imul
mov
inc
jne
clc
sbb
cmc
push
std
mov
rol
inc
mov
mov
fidivrs
ret
xchg
psubw
imul
or
gs
nop
inc
cmp
pop
ret
fnsave
sbb
push
bound
mov
inc
js
sbbl
dec
insl
xor
lret
or
aaa
add
rolb
ret
test
pushf
or
iret
mov
shr
xorb
or
jbe
sti
lea
or
ja
popa
movl
cmpb
lahf
pop
ret
sbb
add
cwtl
and
or
out
mov
inc
xchg
jno
ja
ret
int3
push
mov
into
jge
and
stos
orb
adc
fldt
movsl
xor
pop
ret
and
jne
xchg
mov
loope
clc
add
addr16
icebp
stc
mov
sub
lock
stos
inc
fcmovu
lahf
cmp
das
into
dec
jns
sbb
push
int
popf
pushf
clc
test
stos
jbe
int3
lea
mov
lods
lock
mov
test
nop
jmp
icebp
subb
pop
or
lock
inc
push
repnz
cld
push
not
ret
call
jb
je
dec
rcl
jecxz
fwait
ret
clc
repnz
stos
lret
divb
push
out
mov
pop
ret
or
test
ret
addr16
ror
mov
cli
inc
dec
outsb
or
ret
pushf
or
sbb
outsl
insl
inc
loope
sub
stos
cmpsb
add
repnz
mov
jns
or
xrstors
and
aas
dec
das
bound
lods
out
sbb
adc
or
push
ljmp
cmp
jns
jp
lock
and
adc
dec
addr16
loopne
sbb
mov
mov
dec
sahf
in
cmp
ret
dec
fnsave
ss
loope
popf
push
sbb
mov
adc
mov
xchg
mov
xor
pop
pop
or
popf
stc
push
sub
cmp
jle
fsubp
mov
ret
dec
in
leave
popf
in
mov
fwait
stos
xchg
out
ret
push
push
jp
mov
imul
stos
movsl
ret
xor
cld
cs
ret
push
cmpsl
mov
test
addr16
imulb
inc
leave
mov
ret
jmp
fwait
loope
and
ret
xor
dec
ret
sarl
push
and
mov
cltd
int
addl
fbstp
cs
outsl
mov
call
loope
xchg
pop
jle
mov
ret
call
lret
ret
mov
lahf
scas
push
mov
add
enter
lcall
pusha
repnz
scas
in
adc
lods
lods
ret
or
xor
pop
push
addb
pop
loop
sarl
lahf
mov
stos
xor
inc
xchg
fadds
rcrb
xchg
das
sti
rol
jge
or
daa
add
inc
out
add
fidivl
pusha
cmp
ret
xchg
insb
sbb
sarl
cmp
loope
xor
mov
adc
mov
inc
mov
mov
test
inc
aas
ret
cld
mov
ret
notb
ds
rcll
lds
cmp
mov
xchg
mov
loope
mov
and
popf
leave
xchg
aad
test
mov
inc
insl
xlat
ret
mov
mov
outsb
and
add
lret
mov
filds
ret
pop
mov
sub
pushf
shl
adc
loop
aaa
mov
leave
cmp
xchg
cmp
jle
cmp
mov
shl
popa
jg
sbb
lds
sbb
int3
or
test
mov
push
mov
test
fdivrl
cmp
stos
daa
and
xor
faddl
cld
dec
xor
adc
push
pop
jne
add
sub
shll
inc
xor
fimull
inc
mov
mov
xchg
fstps
inc
sub
cmpb
test
pop
mov
jb
aaa
inc
movsl
sbb
mov
cmp
int
jns
popa
out
sub
les
lds
fdivrl
pushf
lock
faddl
ljmp
pop
inc
test
pop
dec
testb
lods
ljmp
lods
mov
fcomps
or
pop
mov
mov
jle
jns
or
and
loope
inc
push
sub
mov
mov
fs
adc
xchg
dec
mov
test
dec
les
rol
mov
mov
mov
and
inc
outsl
gs
xorl
inc
inc
adc
push
push
and
in
pop
xor
ret
mov
mov
loop
addr16
and
int
pop
xor
loope
pushf
inc
movsb
pop
and
das
stc
mov
adc
test
hlt
rorb
mov
pop
pop
into
inc
leave
jecxz
push
daa
mov
jg
cmp
mov
loop
or
and
aad
ret
je
xchg
mov
sahf
add
inc
jns
iret
pushf
repz
test
decb
and
pop
push
lret
mov
test
mov
pop
or
xchg
and
aaa
lds
adcl
insb
shlb
popa
fs
add
mov
mov
sbb
cld
dec
cmp
or
adc
scas
jmp
clc
fldt
lds
rorl
pusha
scas
stc
push
movb
xchg
and
sub
and
mov
mov
mov
outsb
push
push
mov
stos
sbb
ljmp
mov
flds
xchg
sahf
mov
lods
sti
jbe
cmp
adc
add
cmpb
ret
out
scas
clc
jae
popf
xor
and
outsl
in
push
movsl
jg
lds
push
js
ficompl
out
pop
in
pop
add
or
mov
inc
sbb
out
mov
lcall
or
imul
adc
jecxz
add
cmpb
adc
mov
hlt
xchg
testl
jbe
rolb
fadds
sub
in
fidivl
xchg
rcr
jb
imul
xor
rcl
aam
js
ljmp
and
adc
mov
mov
add
mov
mov
push
add
lahf
jle
mov
cmp
mov
cmpsl
js
cmc
cmpsl
lahf
out
imul
fldl
stos
dec
add
movsb
ret
js
es
adc
into
int
es
add
fbstp
mov
or
out
pop
and
scas
div
clc
sub
push
inc
adc
xorl
dec
ficoml
lcall
sub
push
movsl
xlat
leave
mov
xchg
pop
mov
cli
pop
fisttpll
pop
cmp
mov
mov
repz
jl,pt
test
xchg
push
dec
xchg
pop
test
rcr
lea
stc
xchg
pop
mov
in
mov
jp
mov
adc
test
stos
dec
loop
xor
xchg
mov
mov
adc
pop
gs
inc
and
push
fld
rep
or
stc
mov
cmc
out
int3
fldl
popf
mov
mov
mov
aam
cs
into
pop
jns
rcll
fcmovbe
sub
adc
add
bound
outsb
mov
dec
pop
sahf
pusha
scas
push
lret
or
jg
mov
mov
idivl
pop
in
push
xchg
fwait
mov
pop
mov
daa
xchg
and
mov
adc
jnp
sub
pusha
fcmovnb
in
imul
mov
daa
push
push
rorl
push
aaa
pop
ret
cmp
dec
out
push
xor
adc
xor
or
mov
stos
mov
jbe
cltd
das
sub
or
ret
jns
jne
cltd
mov
lods
out
xchg
sub
jne
testl
push
push
fsubrl
push
cmp
nop
aas
mov
inc
xchg
movsl
imulb
mov
js
fdivrp
call
and
mov
dec
test
or
fwait
pusha
int
repz
add
pop
add
mov
xor
in
das
imul
jb
adc
cwtl
outsl
stos
pop
scas
inc
into
aas
inc
mov
push
je
push
inc
mov
shr
and
ret
aad
push
dec
adcl
ret
mull
bound
sbb
ja
sbb
cmp
sub
fadd
add
inc
push
outsl
test
sub
stc
aas
push
aas
jle
push
mul
negb
xchg
dec
movsl
ror
and
js
mov
sub
pop
testl
data16
ret
fldt
ret
je
sti
sub
js
cs
stos
cmp
mov
mov
inc
aad
push
stos
mov
enter
inc
adc
fimull
out
outsb
dec
ret
push
adc
pop
pusha
imul
and
fstpl
aam
popf
fldenv
repnz
ret
aam
or
sbb
fcomip
push
out
mov
stos
ret
mov
sub
or
stc
ret
sbb
nop
mov
lea
callw
mov
jne
sbb
mov
mov
fstl
cmp
mov
ret
iret
nop
lds
loope
sub
adc
mov
push
mov
int3
call
scas
lods
ret
sbb
das
stos
out
loopne
pop
shrb
inc
in
sti
daa
fs
mov
int3
mov
out
lea
jge
sub
ret
push
inc
pop
outsl
nop
mov
loope
xchg
sub
mov
movsl
cmp
imul
cltd
lds
mov
mov
push
into
mov
bound
test
movsl
imul
int
lcall
loopne
in
mov
cmp
std
sbb
cmp
dec
inc
mov
pop
adc
lcall
jo
cmp
push
xchg
push
js
jo
lahf
addr16
inc
cmp
or
xlat
mov
push
pop
sub
sub
sbbb
cmp
mov
sbb
daa
add
and
mov
ja
repz
jne
and
call
jmp
daa
xchg
insl
cwtl
mov
pop
jmp
mov
scas
iret
imul
addr16
xchg
jmp
daa
fdivrl
mov
mov
sub
mov
loopne
sub
xchg
push
mov
xchg
pusha
test
mov
push
dec
mov
sub
fldt
scas
sbb
rclb
inc
popa
sub
mov
inc
push
xorps
pusha
out
in
pop
mov
fs
adc
mov
andl
and
mov
push
decb
outsl
sbb
rolb
ret
imul
mov
leave
popa
sub
enter
negb
into
out
dec
jecxz
jns
das
movsb
rorl
jo
sbb
enter
sarb
fs
sub
or
insl
add
orb
inc
mov
fucomip
and
mov
lahf
inc
call
movsl
lret
cld
or
mov
mov
pushf
pop
fiaddl
xchg
or
mov
mov
popa
test
mov
or
mov
sbb
clc
adc
inc
sti
mov
mov
movsl
or
adc
add
xor
test
push
xchg
fwait
movsb
and
push
add
shlb
lcall
jmp
stc
shlb
jb
call
nop
scas
aas
test
fdivl
mov
push
sub
mul
mov
lods
scas
fdivrl
push
pop
inc
inc
sub
xor
xor
mov
test
fildl
ja
mov
decb
into
pusha
rcrl
fldt
xchg
pop
lret
and
sub
and
filds
inc
test
pop
stc
jb
xchg
pop
dec
stos
jmp
out
add
outsl
cld
fiaddl
ja
into
jns
mov
pusha
leave
out
ljmp
shlb
or
mov
sbb
hlt
js
les
add
inc
cmp
mov
insl
jo
cmp
lods
sbb
lcall
lret
and
mov
sahf
aam
adc
jg
adc
fistpll
jp
test
in
jnp
lods
sub
mov
outsl
pop
movsl
cmp
sub
mov
hlt
mov
jb
out
fsubrs
inc
imul
aad
clc
adc
pop
lret
iret
cmp
mov
inc
addl
inc
and
adc
sbb
sub
les
cmp
pop
mov
test
sbb
test
stos
test
sti
sub
cmp
adc
insl
ss
into
adc
inc
mov
data16
cmp
les
cmc
sub
ret
mov
add
pop
mov
and
xorb
ljmp
jmp
fldt
int
xchg
inc
sub
dec
sub
or
pop
lahf
push
out
xor
sti
ret
mov
adcl
pop
daa
subl
popf
add
pop
cld
out
mov
sbb
xchg
jmp
pop
sub
inc
gs
and
pop
push
or
jle
pop
mov
jnp
movsl
into
mov
aas
or
mov
aam
pushf
enter
mov
mov
dec
mov
add
js
or
scas
mov
fucom
lret
cmp
ret
imull
adc
push
jmp
stos
scas
mov
frstor
movsl
jb,pn
push
pushf
out
xchg
popa
pop
xchg
sub
mov
add
mov
dec
aas
adc
ja
mov
sbb
out
in
pop
cmp
shlb
pop
mov
pop
xor
xchg
repz
ss
mov
adc
pusha
pushf
gs
popa
daa
xor
ja
mov
arpl
jo
dec
and
mov
pop
outsl
outsb
ss
mov
cs
mov
test
cmova
pop
mov
lcall
dec
stc
push
dec
int
pop
mov
test
sub
in
add
inc
mov
pusha
insb
test
ret
stos
fs
int
dec
pop
leave
test
cltd
inc
cmp
daa
ljmp
les
adcb
jg
rclb
or
lock
add
ds
jmp
stos
pusha
popf
aas
movsl
add
pop
inc
mov
out
repnz
sarb
addb
sahf
movsl
or
sbb
addr16
xchg
pop
ret
sub
leave
decb
and
ss
jnp
insl
pop
insl
inc
dec
sub
outsb
js
fwait
xlat
ljmp
pop
and
adc
xchg
mov
adc
cltd
icebp
cmp
cmp
lcall
sbb
and
adc
std
pop
test
add
add
sti
fistl
movsl
data16
xor
push
mov
pop
gs
mov
sbb
mov
push
jle
pop
test
cmp
sub
inc
mov
jl
cwtl
stos
sbb
lahf
mov
adc
pop
xchg
addr16
mov
mov
push
cmp
pop
or
nop
cmpsb
pop
ret
push
fcmovu
movsl
scas
lock
hlt
shll
in
inc
xchg
sbb
xor
jae
clc
sahf
outsl
ds
repnz
out
inc
push
out
ljmp
les
push
push
or
mov
xchg
cmpb
popa
jns
sti
enter
sbb
mov
scas
imul
enter
sbb
out
cli
movb
sub
xchg
movsl
and
mov
mov
jnp
outsb
adc
stos
xor
and
es
cwtl
push
xchg
or
adc
test
addr16
xor
movsb
repnz
in
and
cmp
sbb
cld
adc
mov
push
test
ja
std
scas
fcompl
sbb
add
and
cmp
fcomps
and
xchg
movsl
ljmp
inc
data16
movsl
movsl
xchg
ret
stos
shlb
dec
xor
adc
xchg
stos
mov
push
inc
xchg
ds
inc
scas
and
jbe
rclb
cltd
add
mov
dec
mov
inc
sbb
push
popa
int3
in
pop
ljmp
or
dec
xchg
push
mov
movsb
shlb
testb
ret
out
adc
jnp
loopne
addr16
ss
data16
data16
push
andb
sbb
movsl
jb
jbe
es
out
pop
lahf
data16
out
sarl
dec
mov
sbb
insb
fwait
dec
push
cmpsb
movsl
or
stos
mov
pop
movsb
mov
inc
sbb
aam
clc
out
add
daa
subb
jo
jle
gs
imul
pop
out
cmpsb
xor
mov
andb
pop
test
cli
pushf
mov
mov
into
int3
jnp
fs
or
movsl
cld
addr16
fcoms
push
or
rorl
sbb
push
loope
add
imul
push
adc
mov
dec
jns
addb
push
or
mov
scas
scas
lods
shl
dec
xchg
rcrl
mov
push
mov
lret
mov
jnp
out
jmp
jo
cmp
pop
mov
test
jo
subl
xor
cmpsb
push
sub
loop
and
jne
shlb
iret
stos
pop
cmp
xchg
mov
ds
mov
jge
rcll
xor
popa
xor
xor
lds
stc
std
cltd
shll
dec
cmp
inc
ret
mov
jl
fsubrl
cmp
push
mov
xchg
xchg
loope
or
nop
data16
cli
add
subl
mov
fisubrs
push
mov
push
test
dec
pop
aas
pop
mov
int
cmp
add
mov
jnp
stos
repz
insb
test
mov
out
sbb
addr16
mov
jle
lret
jle,pn
out
into
out
pminsw
mov
mov
pusha
popf
leave
cmp
imul
jnp
pusha
add
daa
mov
pop
add
dec
int3
test
sahf
in
rclb
dec
hlt
adc
add
ret
imul
pop
fbstp
aas
sbb
and
leave
mov
jle
xchg
mov
cmp
addr16
scas
pusha
push
xchg
pop
mov
sub
mov
adc
fidivl
pop
test
shll
add
mov
pop
push
inc
xchg
cmp
frstor
adc
mov
add
stos
testl
push
hlt
aam
xlat
shl
in
sub
push
je
sti
and
xchg
sub
clc
and
add
dec
fnstenv
in
les
fmull
lahf
outsl
ret
test
fwait
mov
mov
dec
test
fst
es
cmp
push
jno
dec
mov
mov
jbe
repz
adc
lcall
in
mov
pop
je
xchg
inc
hlt
cmpsw
rcrl
ficoml
cli
add
outsl
fistps
cld
or
cmp
mov
adc
push
insb
int3
ret
cmpl
scas
sbb
mov
aam
lret
clc
mov
mov
je
push
push
sbb
pop
lds
xchg
insb
call
out
push
inc
mov
and
scas
mov
mov
stos
inc
addb
rorl
or
xchg
pusha
call
cmp
cltd
mov
sbb
movb
pop
ds
add
dec
pop
jo
outsb
add
fcmovnu
mov
push
cmpl
xchg
lcall
cmp
lahf
dec
add
inc
and
movsl
fstl
mov
adc
out
xchg
lods
jne
sbb
es
push
jge
mov
push
push
mov
movsl
mov
mov
xchg
bound
dec
loope
push
sub
scas
hlt
push
mov
popa
jnp
outsb
in
xor
sbb
andl
mov
loope
adc
movlps
les
cltd
pushf
sbb
fwait
lcall
ja
mov
stos
jb
or
add
mov
sbb
js
sbb
data16
xor
mov
rolb
test
insb
popf
cmp
loopne
test
push
loope
add
mov
fdivl
daa
xchg
adc
sti
je
xor
cltd
xor
cltd
out
test
or
loopne
xor
fidivrl
sub
add
mov
addr16
jg
repz
movsl
int3
in
rcrl
cli
pop
lds
mov
mov
mov
shlb
cmp
xchg
xor
inc
pop
popa
push
mov
fs
pop
test
adc
iret
jbe
lods
inc
xor
sub
test
lret
push
cmp
addb
xchg
sar
jo
pop
push
and
insl
inc
cmp
mov
jb
jmp
jnp
mov
xchg
mov
jecxz
mov
out
jno
sbb
dec
jne
xchg
lret
into
mov
inc
jo
adc
fwait
adc
sahf
call
xor
fwait
mov
hlt
scas
push
mov
rorl
ljmp
jae
xor
int
rorl
mov
fmull
mov
mov
adc
je
cli
imul
mov
push
sub
dec
mov
cmp
inc
inc
mov
lcall
xchg
cmp
in
jecxz
les
mov
test
pusha
jg
sahf
or
sbb
jle
jmp
mov
xor
xchg
sahf
cld
push
arpl
add
mov
out
push
shll
out
mov
scas
outsb
lret
loope
inc
out
mov
pop
rcll
outsl
lret
es
cltd
repnz
push
roll
xchg
loopew
adc
sbb
cmp
sahf
lahf
jp
divb
and
jo
arpl
cmpsl
lret
adc
mov
add
pushf
pop
jecxz
sub
mov
xchg
lcall
xchg
inc
jmp
lcall
pushf
pusha
mov
or
mov
inc
dec
lock
jbe
xchg
fisubl
and
lods
xchg
lods
dec
das
gs
test
xchg
add
js
mov
cmp
cmc
in
or
aaa
mov
add
adc
cmp
in
imul
enter
xchg
sbb
pop
xor
nop
jmp
cmpsl
outsl
sti
in
add
inc
sbb
add
movsl
xchg
and
push
aaa
cmp
leave
stc
jmp
outsl
mov
imul
and
sbb
and
push
pop
roll
xlat
mov
mov
inc
xchg
or
ficoml
jl
pop
or
mov
push
sub
addr16
mov
dec
pop
jg
or
or
in
lret
shl
jecxz
in
adc
cmpb
fbstp
shrl
stos
pop
shrl
movsl
ljmp
mov
clc
or
push
jb
mov
test
mov
ds
movsl
outsb
rolb
lahf
cmp
push
aaa
jb
push
ljmp
mov
repz
pop
sub
and
mov
jbe
sti
daa
rcl
xor
mov
test
pushf
push
cltd
lock
mov
add
pop
push
imul
mov
sub
scas
sbb
lock
mov
test
sar
add
pop
movsl
pusha
aam
pop
in
in
xchg
sbb
addr16
jns
cltd
xchg
add
es
shlb
xchg
mov
xor
and
cltd
sub
mov
add
pop
enter
mov
call
adc
out
mov
push
fistpll
push
mov
sub
out
test
xor
and
movsl
mov
mov
inc
ljmp
xor
mov
xlat
xchg
push
inc
test
adc
mov
inc
mov
lock
bswap
lcall
dec
shlb
lcall
shrl
sbb
rclb
push
movsl
outsb
inc
adc
int
mov
daa
ljmp
test
int3
xchg
push
xchg
mov
addb
sbb
dec
mov
and
jo
mov
adcb
pop
stos
mov
dec
mov
cmp
jo
lret
into
ror
or
into
insb
test
pop
filds
pop
mov
mov
inc
push
test
insb
dec
addb
xor
lcall
push
add
ret
pop
mov
aaa
mov
fs
test
repz
and
xchg
aaa
jp
push
mov
std
aad
jb
enter
jge
or
fdivrs
js
fadd
add
fs
fs
into
test
jmp
data16
xor
divb
sub
cmp
mov
cltd
add
ficoml
lret
cmp
push
lcall
and
add
dec
xorb
mov
jno
cmpb
lcall
mov
cmp
xchg
inc
jnp
xchg
cs
add
sub
aaa
int3
aad
mov
cwtl
js
repz
fimull
jmp
xchg
jg
mov
sbb
mov
jae
mov
loope
mov
fprem
cmc
lods
int
and
pop
imul
or
stos
lea
inc
out
xchg
or
neg
jmp
loope
pop
jo
stos
dec
daa
xor
cmpsl
hlt
jnp
cmpsl
scas
mov
shrl
out
xchg
and
cwtl
les
popf
lds
movsl
xchg
out
out
xchg
sbb
outsl
es
pmuludq
orb
mov
imul
push
add
stc
push
loop
in
push
ss
inc
fwait
jl
add
je
popa
inc
into
mov
cmpsl
rep
adc
call
push
sub
in
mov
or
test
mov
cmc
xor
and
popf
push
out
out
mov
mov
mov
xor
sub
push
mov
adcb
xchg
mov
pop
movsl
sarl
shlb
pop
adc
pop
ja
aaa
in
les
inc
cwtl
test
sub
das
outsb
lcall
push
cmpsl
call
lods
pusha
scas
mov
xchg
mov
mov
je
iret
outsb
adc
mov
popa
mov
cmpb
inc
adc
imul
mov
mov
pusha
ret
test
mov
sbb
push
andl
movsl
hlt
sti
and
movsb
je
mov
std
cmp
push
xchg
sbb
mov
fwait
and
inc
scas
xchg
shlb
jp
insl
and
and
sub
test
cmp
inc
movsl
jnp
mov
daa
in
rolb
cltd
mov
jl
dec
mov
ret
add
pop
outsl
addb
bound
adc
pushf
jg
mov
mov
int3
rorb
jmp
leave
std
cmp
lcall
in
cmovo
sbb
je
push
mov
shll
and
int
pop
or
xchg
cmp
jg
aam
lcall
dec
daa
add
sti
pop
push
inc
fstl
cltd
in
inc
push
fldenv
xchg
das
adc
imul
xor
push
movsl
ror
clc
mov
sub
jle
enter
movsl
ljmp
add
cwtl
cmovl
aam
out
fimuls
das
cli
out
sahf
call
xchg
popl
js
test
idivl
in
mov
mov
jo
cmp
jecxz
ret
mov
iret
jo
mov
or
mov
jmp
ret
repnz
loope
mov
fimull
aam
add
and
sub
stos
add
jp
movsl
pop
js
fstps
shrl
inc
adc
xor
push
stos
adc
adc
mov
out
sbb
ja
lret
push
aas
sti
cli
or
push
addb
push
mov
cld
cmpsl
jne
je
or
xchg
and
inc
jns
outsl
stos
js
test
push
loope
les
inc
adc
dec
xchg
mov
pushf
iret
add
fs
xchg
movsl
dec
push
push
pushf
mov
leave
popa
sti
mov
test
std
fs
subb
rcrb
mov
rcl
movsb
adc
int
sub
jmp
mov
sub
pusha
mov
cmp
sub
in
pop
mov
nop
int3
add
xor
outsb
popa
inc
mov
lods
lret
push
xor
sarl
adc
xor
jle
xor
lods
fsubrs
fmull
mov
into
inc
mov
mov
dec
shll
mov
mov
adc
dec
pop
jne
and
pop
dec
xchg
dec
inc
jp
data16
cwtl
test
cwtl
int3
repnz
and
or
outsl
out
pop
into
subb
or
fldt
push
inc
push
mov
mov
clc
inc
pop
jecxz
adc
add
pop
das
loopne
stos
lea
test
rorl
call
lcall
shlb
pop
and
scas
xchg
cmp
cmpsl
insl
ds
out
loope
cmpsb
sbb
mov
dec
and
sahf
fwait
inc
ljmp
mov
in
fimuls
cmp
jmp
sbb
cmpsl
push
lods
aam
std
jo
add
into
mov
daa
push
sbb
xor
mov
add
dec
mov
pop
push
mov
js
cld
fisttpll
loop
lcall
cs
or
xor
or
insb
daa
inc
ja
jmp
cmp
stos
xchg
sbb
mov
jg
pop
xchg
sbb
adcb
std
jb
mov
loope
in
sub
test
movsl
or
push
dec
pop
jecxz
sbb
movsb
jle
adc
scas
dec
shrb
subb
test
rcl
mov
push
mov
fstpt
es
mov
cld
inc
test
inc
aaa
mov
divl
sub
xchg
mov
decb
xchg
fs
inc
push
orb
test
cmpsl
movsb
sbb
daa
arpl
and
es
cmp
xor
sub
or
jmp
les
adc
fisubl
inc
xor
add
ss
rol
mov
adc
push
xor
push
sbb
test
cmp
gs
cwtl
lods
popa
movsl
cmpsb
adc
mov
xor
xchg
addl
addr16
or
xor
test
push
shll
popa
test
pop
jle
stos
insl
movsl
cmc
aas
xor
in
pop
mov
mov
outsb
insb
insl
popa
lods
adc
jmp
mov
dec
daa
test
sbb
mov
pop
cmpsl
push
xor
or
fidivrl
sub
movsl
jecxz,pt
sbb
ljmp
jg
fstpt
add
adc
lock
nop
mov
das
xorb
test
jb
mov
mov
mov
loopne
stos
push
fsub
cmp
into
jle
xlat
sbb
inc
scas
jae
add
outsl
jno
int3
aad
mov
icebp
fdivs
sub
add
and
daa
stos
add
lds
je
jecxz
mov
aas
out
jge
inc
insl
mov
adc
addr16
jbe
dec
mov
or
ss
push
mov
adc
cmp
mov
jo
adc
rdmsr
mov
pusha
lods
jle
mov
pop
repz
sahf
rol
pop
pop
mov
imul
inc
pop
mov
ss
pop
xchg
icebp
pop
and
jmp
nop
loope
outsb
xor
mov
iret
addr16
sbb
add
sbb
sbb
jae
lea
fildl
push
jo
jns
and
cltd
push
or
loop
push
pop
xor
fdivrl
adc
xor
out
out
bound
loope
ja
and
xchg
xor
pusha
movsl
adc
and
sahf
insb
push
sbb
imul
repnz
pop
movsb
leave
mov
js
outsl
test
bound
orl
sbb
je
push
cwtl
imul
lret
js
dec
add
dec
adc
hlt
pop
insb
test
push
lea
filds
push
fdivs
jp
movsl
ucomiss
nop
outsb
cmp
call
fdivrl
call
adc
dec
inc
fistpl
or
loope
movsl
jo
stc
out
sub
je
xor
in
hlt
or
out
xchg
rorb
fstps
mov
fwait
mov
mov
xchg
push
push
dec
mov
jbe
gs
in
dec
sub
ljmp
or
mov
lcall
shll
mov
dec
xor
mov
pop
ret
dec
mov
push
mov
mov
int3
add
or
int
or
arpl
mov
inc
adcb
mov
sub
fmul
movsb
adc
loope
pop
and
pushf
mov
ret
pop
cli
mov
cmp
jo
inc
into
ja
out
jmp
hlt
pop
cmpl
repnz
stc
out
jle
pop
xchg
ret
jl
imul
and
mov
lahf
testl
scas
pop
and
push
mov
or
sub
inc
js
outsl
stos
loope
pop
test
rolb
xchg
in
scas
loopne
sti
mov
lock
pop
aas
xchg
xchg
cwtl
mov
jb
jg
jl
mov
mov
das
lods
ficomps
fcoms
jne
push
rcl
scas
lea
xchg
pop
arpl
std
mov
push
sbb
data16
sbb
jb
stos
inc
inc
out
push
out
add
push
mov
jge
mov
ret
inc
xchg
hlt
xor
adc
sahf
sub
fdivr
sbb
cltd
loopne
xchg
cmp
mov
ret
aad
or
out
pop
ret
ljmp
push
outsb
fwait
test
popa
mov
push
js
movsb
ret
dec
pop
popf
xchg
inc
mov
xor
nop
cmp
mov
pop
rclb
mov
or
ret
mov
and
scas
cmpsb
push
add
xor
push
adc
xchg
insb
dec
inc
pop
out
outsl
rcrb
push
scas
aaa
mov
dec
inc
out
push
adc
test
lds
mov
add
jecxz
add
pop
and
test
sbb
loope
jno
pop
test
in
add
dec
sbbb
add
or
pop
mov
imul
inc
mov
fs
popa
mov
mov
jno
cmpsb
sub
pop
call
sub
dec
push
pop
mov
mov
test
sti
mov
mov
js
xchg
cld
mov
jmp
test
in
or
in
sub
xor
stos
push
or
xorl
pop
bound
push
lcallw
adc
pop
ret
add
aaa
fisttps
lahf
push
aam
pop
es
loop
push
jb
dec
lock
jecxz
sbb
mov
jl
jb
fiaddl
arpl
jne
sbb
test
pop
add
ret
adc
adc
sahf
ret
stc
mov
cmp
ret
xchg
enter
push
movsb
jge
dec
lods
lock
and
repz
ljmp
in
xor
or
cmp
imul
push
cmp
mov
sbb
push
stos
clc
sbb
ret
and
imul
loope
fiadds
movsl
push
mov
fisubrl
int3
or
dec
in
mov
xlat
jl
adc
push
push
mov
mov
pop
jle
add
add
fisubl
push
cmpsl
mov
lock
sti
out
fs
test
ret
ja
fadd
stos
rcrl
mov
cs
inc
test
xchg
aad
fldt
add
and
jl
int3
fwait
mov
sub
jp
add
gs
mov
cs
int3
bound
mov
push
sub
push
mov
insl
ret
jo
mov
mov
popa
dec
inc
scas
rol
test
fmul
ret
mov
mov
das
mov
stos
jo
push
mov
loop
jle
and
or
xchg
add
out
ret
mov
fs
xor
out
add
inc
sub
xchg
push
push
cmpsl
loope
adcb
idivb
mov
pushf
rorl
adcl
push
ret
push
shr
cmp
sti
pop
test
in
orw
mov
add
xchg
sarb
pop
xor
out
inc
es
mov
pop
dec
jno
xchg
dec
pop
mov
cmpl
mov
mov
pop
ljmp
lret
sbbb
add
add
sbb
jle
daa
mov
ror
cmp
in
xchg
mov
mov
scas
push
add
xchg
mov
jl
in
scas
xlat
in
ret
pop
loop
fwait
arpl
cld
pushf
cmpl
sarb
daa
and
mov
scas
cmp
outsb
mov
mov
ret
arpl
jb
pop
outsb
ret
cmpsl
push
add
xor
subl
int3
pop
push
pop
push
ret
mov
mov
stc
jp
mov
jge
dec
cmpsb
std
in
arpl
pop
ret
mov
aaa
ret
mov
ret
sbb
and
data16
mov
adc
imul
bound
mov
mov
mov
mov
fisubl
mov
pop
mov
imul
xchg
mov
jns
aaa
add
mov
and
bound
xchg
dec
push
mov
xchg
divl
add
add
shrl
addr16
mov
mov
jmp
mov
mov
cmpsb
push
mov
int
jge
lret
inc
ret
mov
pop
sbb
jmp
mov
aam
sti
pop
add
lds
and
loope
mov
sub
bound
or
rorl
cmp
sub
mov
ffree
je
inc
inc
int3
mov
jl
mov
mov
mov
pop
and
out
ret
aam
cld
lahf
ret
pop
mov
es
outsb
or
ret
cwtd
cmp
stc
or
cmc
not
addl
bound
addb
bound
xchg
stos
loope
hlt
add
inc
cmp
dec
pop
mov
fildll
ret
clc
jmp
push
mov
jno
rolb
sbb
rol
mov
xor
adc
ficoml
js
and
mov
mov
dec
bnd
das
leave
loopne
add
pop
pop
popf
cmc
sub
pushf
sub
cltd
and
sbb
hlt
pop
xor
adcb
stc
mov
xor
sbb
jno
call
clc
jge
or
cmp
insb
fsubs
dec
scas
sub
loope
shl
add
mov
push
stos
or
ja
arpl
lret
gs
xchg
ret
jno,pt
cli
push
sub
push
jae
pop
sub
sbb
xchg
push
shll
adc
cmp
std
cwtl
mov
push
stos
lret
pop
test
movsw
xchg
xor
frndint
mov
leave
ret
xchg
cmp
sti
push
dec
ret
and
aaa
mov
pop
cli
mov
ret
fwait
dec
mov
int3
repz
mov
sub
pop
dec
arpl
ret
mov
fucomp
pusha
xchg
loopne
stos
xlat
sti
pop
ret
mov
push
imul
lret
sub
roll
cltd
test
ret
push
notl
inc
imul
lods
add
sbb
test
and
push
lret
dec
ljmp
ffree
or
mov
dec
ss
aas
mov
cmpps
out
loopne
push
jle
aam
clc
sbb
add
cld
gs
sub
jge
rcll
movsb
xchg
cld
mov
addr16
adc
mov
cmp
ret
mov
loopne
dec
sbb
inc
inc
and
cmp
ret
in
jne
xchg
es
mov
out
ret
fwait
ss
jno
or
jecxz
pop
inc
mov
or
rolb
push
mov
push
cmp
add
subl
ret
mov
rcl
cmpsb
mov
mov
inc
in
mov
push
add
icebp
xchg
mov
lcall
dec
stos
jg
ret
scas
fwait
mov
mov
xchg
cmp
xor
ret
xor
in
mov
mov
mov
mov
mov
mov
xchg
adc
sbb
lahf
scas
ret
mov
bound
inc
lods
int
pop
ret
loopne
leave
xchg
enter
jbe
lea
pop
imul
jecxz
loope
lods
out
mov
jno
pusha
loope
orl
sbb
pop
adc
sub
ret
add
test
and
cmpsl
xorb
inc
sub
mov
pop
test
fcoml
inc
jbe
push
sti
add
cmp
xor
fisttps
ds
in
or
push
push
iret
test
lods
jl
mov
mov
nop
xor
mov
fnstsw
ret
sbb
mov
icebp
call
mov
mov
sbb
into
mov
sbb
sub
pop
add
pop
inc
into
loop
popa
pop
ret
imull
int
lcall
mov
mov
ret
lock
sub
cmp
sbb
sbb
mov
mov
insb
mov
out
mov
mov
jne
ret
xchg
pop
pop
lea
lret
add
xchg
dec
data16
mov
aaa
popa
push
ret
inc
jb
es
mov
movsl
aaa
xor
inc
jns
or
andb
and
adc
cmpl
and
mov
adc
push
int3
cmc
out
push
cmp
and
cli
mov
mov
mov
xchg
or
fmull
repnz
stos
mov
inc
sbb
stc
xchg
testb
das
xor
out
and
inc
sti
add
sbb
cmp
daa
movsb
into
pop
lea
fsubs
jno
dec
push
mov
mov
push
or
push
inc
movsl
cli
push
push
pop
sti
fcoms
daa
jge
je
inc
xor
outsb
rcrb
lock
js
push
push
push
aas
stos
cmp
leave
push
fs
pop
sub
fisubrs
jns
sbb
push
or
jle
dec
or
mov
adc
cmpsb
inc
sbb
pusha
dec
jns
xor
test
aas
ja
fstl
xor
out
movsb
inc
push
add
inc
notb
dec
and
mov
gs
mov
lods
and
test
rcll
insb
call
jbe
mov
repz
cmpsl
pop
sub
sub
push
out
fst
cmpsb
jg
xlat
mov
or
sti
int
jge
sub
jne
or
pop
inc
jbe
outsb
mov
jae
rolb
movsl
push
xchg
mov
in
test
into
stos
enter
movsb
pop
inc
add
les
je
ds
psubb
into
mull
mov
arpl
mov
cmpsl
test
mov
into
pop
jno
sahf
mov
push
rcrl
cmp
mov
lods
xchg
gs
lds
test
loopne
fdivl
or
ret
nop
je
negl
push
mov
or
out
push
pop
jle
jno
stc
ficoms
stos
jecxz
mov
cmp
scas
push
pop
in
pop
outsl
jl
loop
popa
xchg
jmp
fdiv
cld
shrl
adc
cltd
imul
test
sub
mov
cmpb
sbb
pop
inc
push
mov
mov
jle
pop
jmp
sbb
jge
roll
mov
in
mov
incb
sarb
imul
or
inc
or
iret
mov
pop
inc
nop
sbb
jg
xchg
sub
mov
icebp
inc
shlb
stos
jp
mov
push
js
out
push
pop
sub
lds
add
sbb
fadd
cmp
xor
negb
xchg
adc
inc
sbb
push
mov
cmpsb
lret
push
dec
adc
bound
push
push
sahf
mov
adc
dec
pop
mov
inc
movsl
pop
and
pop
sbb
lret
pop
call
inc
xor
xlat
movsl
jge
sub
or
add
gs
fstpl
pop
daa
es
adc
inc
addr16
in
pop
call
in
xchg
imul
jns
dec
mov
mov
test
mov
out
inc
push
add
push
mov
pusha
xor
mov
in
das
mov
mov
popa
or
in
ds
outsl
sahf
ret
xchg
push
fisttpll
sbb
pushf
cltd
fadd
lcall
sbb
mov
out
push
daa
and
or
jg
pop
adc
jecxz
sub
js
insl
dec
and
mov
fucomp
dec
stc
rclb
pop
ljmp
add
mov
sbb
mov
mov
add
jecxz
mov
cmc
jne
mov
subb
jno
call
pusha
xor
adc
push
cmp
mov
mov
mov
and
arpl
mov
pushf
lods
fnstcw
inc
xchg
sbb
jb
stos
aad
mov
es
xor
scas
inc
scas
cmpsb
andb
aaa
lret
pushl
pop
dec
stos
fwait
mov
sub
mov
scas
jae
out
jns
outsl
inc
xchg
imul
ret
push
mov
push
ret
int3
addb
fdivrs
cmpb
cmpsb
ds
jge
jo
mov
lcall
loopne
inc
sub
stos
nop
mov
xor
lret
inc
push
mov
fs
pop
xchg
jp
mov
xchg
leave
pusha
xorl
lea
jp
dec
pop
mov
iret
shrl
mov
push
push
sbb
and
jb
jnp
jne
out
push
add
dec
sub
add
xor
aas
mov
test
or
stos
in
mov
xlat
cwtl
sub
inc
jle
pop
mov
mov
push
jns
outsl
popa
popf
aaa
cli
loop
cmp
add
sbb
pop
dec
sahf
scas
mov
push
lods
or
ficoml
mov
adc
pop
add
sarl
xchg
inc
movsl
jecxz
jle
ja
jne
cmc
or
lock
in
dec
cmp
sub
into
mov
mov
int3
aad
or
add
add
pop
push
cli
dec
sub
adc
repz
cmp
sub
jns
dec
out
jns
ss
fisttps
mov
stos
mov
int3
inc
enter
jnp
adc
clc
lea
adc
sahf
jp
dec
lret
mov
rol
pop
hlt
dec
or
je
imul
inc
fistpl
xchg
test
cmp
nop
fisttps
data16
std
popa
movsl
cmp
xorl
xor
and
fisubl
jnp
movsl
push
sbb
cmp
and
je
inc
xchg
xor
loopne
cwtl
push
sti
xlat
shrb
xor
xor
ja
pop
fwait
mov
test
dec
addb
scas
std
sub
test
insl
adc
mov
movsl
push
add
nop
icebp
push
adc
push
stos
test
push
cmpsl
nop
leave
nop
sahf
xchg
cli
popa
out
mov
add
std
cmp
add
mov
mov
rcll
cwtl
mov
pop
jno
pop
je
popa
cmp
mov
inc
mov
test
mov
sarl
mov
roll
dec
outsb
pop
push
scas
imul
lcall
cmpsb
sub
jnp
fsubl
call
add
dec
pushf
mov
mov
mov
pop
xor
cmpsb
dec
mov
ror
dec
es
dec
jl
mov
sbb
push
jb
outsb
or
mov
inc
rorb
mov
jne
sub
mov
mov
outsb
fsubs
pop
mov
imul
push
inc
or
sahf
int
add
mov
out
mov
enter
lock
cmp
fs
test
cmp
inc
sub
mov
int3
sbb
cmp
jmp
xchg
enter
repnz
fsts
adc
cmp
and
data16
test
test
lods
adc
sub
in
jne
shll
or
movsl
std
or
xchg
mov
scas
sbb
pop
call
pop
push
in
in
xchg
cmp
fiaddl
mov
cmp
lret
test
pop
dec
nop
mov
sbb
or
mov
pop
pop
sbb
mov
insb
outsb
xchg
stos
adc
mov
out
fsubrl
push
test
dec
xchg
pop
sti
mov
fstpt
and
dec
into
sti
cmp
ljmp
mov
lods
dec
lock
pop
in
or
popf
inc
fistl
cmp
faddl
aas
add
outsl
adc
add
sub
push
jge
movsb
jns
stos
push
jno
xchg
dec
add
fisttpll
sbb
rcrb
cltd
js
or
popf
push
fsubs
cmp
nop
or
pop
mov
out
cwtl
mov
xchg
jmp
sub
enter
xor
inc
fcmovnbe
in
into
out
dec
mov
lret
dec
pop
sbb
je
out
xchg
or
out
sahf
lahf
mov
sarb
test
mov
loope
xchg
mov
test
pop
daa
sub
dec
mov
test
out
mov
push
lret
mov
and
and
call
push
pop
sbb
and
les
add
jbe
pop
dec
mov
cmp
cwtl
mov
mov
inc
sub
inc
outsb
xor
pusha
test
mov
test
imul
push
std
xor
scas
movsb
movsl
sub
in
push
rorb
add
sahf
mov
sbb
outsl
inc
addr16
int3
cs
sarl
hlt
push
test
in
xchg
scas
call
jbe
popf
or
iret
cmp
sub
push
outsl
loopne
jp
and
xor
leave
nop
cmp
int
fmull
test
rolb
fucomp
xlat
mov
sub
mov
aam
test
daa
negb
das
sbb
push
cwtl
dec
mov
lods
mov
out
fcoml
gs
cmc
adc
inc
mov
scas
lret
lods
aad
mov
push
push
jg
cwtl
sbb
les
cld
test
push
ret
fistl
leave
push
shll
orb
push
hlt
loopne
xor
pop
test
enter
xor
rorb
pop
outsl
pusha
imul
sbb
adc
movsb
daa
jae
popa
incl
mov
int3
cmpsb
mov
xchg
push
push
aaa
aam
scas
mov
scas
in
sbb
arpl
cwtl
lcall
std
cmpsl
mov
mov
outsb
loope
sub
int3
xchg
jp
xor
aaa
hlt
mov
cmp
andb
mov
pop
cwtl
fwait
xlat
mov
js
xor
test
jb
cwtl
adc
mov
out
dec
rolb
movsb
inc
stos
pop
mov
xchg
aas
je
loope
xor
outsl
pushf
jbe
sti
hlt
lret
mov
jg
fiaddl
mov
jne
mov
movsb
pop
sbb
out
movsb
out
fwait
sbb
mov
inc
outsb
and
leave
and
daa
add
sti
test
sub
scas
sbb
dec
or
sbb
out
es
insl
stos
sbb
cmpsl
fwait
jo
xor
data16
adcb
xchg
or
mov
fistps
xor
adc
push
movsl
cmp
loop
xchg
inc
bound
push
xchg
inc
out
ss
mov
or
jae
jecxz
sbb
mov
dec
adc
sbb
test
daa
movhps
pop
les
aad
ret
test
inc
mov
inc
xchg
push
push
iret
mov
or
ret
popf
mov
std
sbb
ret
jmp
fbld
xchg
shrl
ret
mov
add
ret
xchg
mov
outsb
enter
je
ret
test
ffreep
out
xchg
enter
pop
pop
outsb
push
pop
into
aas
mov
scas
scas
gs
jno
and
ret
jne
xlat
mov
or
pop
add
dec
out
pop
mov
in
lods
lods
push
ret
test
jae
or
jbe
pop
jp
pop
ret
into
aam
fwait
push
inc
ret
push
jmp
ret
pop
jno
add
ret
icebp
xchg
pop
push
push
pushf
ret
xchg
adcl
cmp
and
neg
sub
std
cltd
ret
cs
test
add
mov
fidivrs
xchg
add
push
clc
push
movsb
aam
or
ss
adc
fwait
bound
inc
jbe
mov
mov
ret
xor
jbe
movsl
movsb
xchg
adc
ret
int
outsl
hlt
push
cmp
icebp
xlat
loope
push
and
cmpsb
aad
mov
push
loope
outsl
cmp
adc
aam
sub
mov
insb
xchg
pusha
loop
push
hlt
cmc
dec
outsb
rorb
insb
jb
testl
push
cmp
popa
xor
mov
push
ljmp
ret
xor
ret
mov
adc
stos
push
ret
aam
mov
jmp
pusha
in
iret
mov
pushf
outsb
pop
ret
cmp
enter
ret
ljmp
fs
in
fisubs
sbb
ror
mov
bnd
lahf
xor
push
test
pop
and
stos
dec
mov
out
sub
jbe
add
lret
stos
xor
scas
add
mov
cs
out
add
or
pop
ds
movsw
lock
cmp
loopne
push
add
ret
jp
mov
negl
pop
push
jmp
lea
cmpsb
scas
shrb
sbb
incl
test
shll
hlt
mov
inc
movsb
imul
pop
pop
sub
pushf
lods
out
mov
cmpsl
push
ss
ret
mov
arpl
lds
cmpsl
inc
inc
ret
xor
ret
mov
mov
xor
rorl
pop
push
lock
cltd
xor
stos
mov
jae
insb
xchg
mov
scas
mov
push
sbbb
mov
ljmp
mov
ret
fcompl
jg
pop
bnd
xchg
loopne
es
jo
sbb
push
jp
and
into
loopne
sti
shll
mov
push
mov
xchg
loope
aas
scas
icebp
shll
rclb
mov
ret
lods
dec
jb
jmp
and
imul
and
mov
xchg
roll
sarb
hlt
ja
popa
out
mov
int
jae
cld
iret
ret
jmp
mov
mov
mov
gs
push
jp
cmp
or
ret
out
ljmp
dec
push
ficoml
and
stos
ret
jle
cmp
jae
inc
div
lahf
popa
xchg
ret
cmp
xchg
lret
fimull
xchg
cmp
inc
in
and
mov
push
into
stos
iret
and
es
out
sub
fs
popf
ret
adc
loopne
lea
mov
ret
sahf
sar
cmp
or
cmp
cmp
xor
sub
adc
lds
fninit
scas
mov
frstor
test
cmpsl
xor
repz
sbb
xchg
or
pop
mov
fisubrl
scas
cmp
dec
push
mov
icebp
repnz
out
cmp
aad
cmpsb
xchg
inc
je
les
cmp
rcrl
sub
xchg
mov
mov
cwtl
aas
aad
add
pusha
cwtl
pop
mov
mov
gs
inc
movsl
and
mov
sub
test
daa
mov
cltd
sbb
xchg
out
mov
mov
cli
out
jle
int3
jl
imul
push
cwtl
xchg
pop
ret
add
sbb
addr16
inc
mov
pusha
add
push
mov
mov
popl
lret
stos
rcrb
aaa
pusha
cmp
pop
sar
mov
rorl
scas
mov
xchg
inc
out
es
ror
xchg
sub
mov
fsubr
pop
ret
mov
pop
jmp
faddl
in
sub
in
jne
mov
mov
stc
adc
lret
and
xor
ret
fmul
lock
movsl
test
push
aaa
xor
cmp
inc
dec
cwtl
lret
mov
push
int
add
push
cld
addr16
push
mov
adc
out
rcll
cmp
mov
inc
icebp
pop
shll
in
cmpsl
movsl
mov
cli
jb
pop
and
mov
jge
repz
rolb
hlt
nop
jge
xor
ljmp
dec
or
xor
mov
sbb
xlat
inc
in
mov
dec
xchg
in
push
sub
cmp
stc
mov
arpl
xor
jge
lea
xchg
mov
pop
insl
sub
dec
xor
fcmovne
dec
mov
fwait
jb
inc
cmp
loope
fnsave
adc
lea
mov
sti
or
fwait
lds
jp
movsl
out
cmp
adc
xchg
lahf
and
jmp
dec
pop
loope
xchg
xor
in
arpl
xchg
cwtl
jmp
sbb
ret
in
dec
cmp
adc
xchg
faddl
cwtl
sub
push
lock
sbb
cmpsb
inc
sub
adc
or
xchg
xchg
js
cwtl
pop
add
jnp
sub
mov
mov
sub
jecxz
enter
xor
mov
outsb
mov
loop
icebp
sub
sbb
inc
mov
sbb
lret
aas
xorl
xor
inc
fadds
adc
adc
lcall
inc
jl
fstpl
stc
inc
iret
and
clc
xchg
cmp
cmp
data16
out
lea
fs
dec
pusha
ret
idivl
add
sbbb
stc
pop
fidivl
cmp
or
dec
sbb
test
shlb
jcxz
ds
fs
mov
pop
pop
test
in
loop
xchg
mov
jne
sub
out
cmp
hlt
xchg
bound
stos
nop
push
cmpb
out
fdivrl
pop
in
mov
cwtl
jns
sub
icebp
test
sub
fcompl
mov
out
dec
push
aaa
hlt
cmpsl
cmp
mov
xor
dec
dec
dec
mov
outsb
add
mov
insl
sub
jns
adc
test
out
mov
xchg
mov
shrl
sbb
loop
adc
adc
int
mov
xchg
fsubs
fiadds
xor
ljmp
out
test
or
out
add
mov
int3
insl
jae
pop
movsl
mov
jbe
imul
iret
cmpsl
les
dec
ljmp
sbb
add
imul
es
mov
add
fwait
iret
and
jp
xor
adc
jg
jno
aaa
and
mov
mov
mov
lret
push
lea
popf
xchg
icebp
cld
jb
mov
mov
fnsave
lret
sub
into
fistpll
pop
sar
xchg
leave
or
sbbl
ficompl
adc
out
add
pop
xor
das
shl
inc
xchg
jg
mov
xor
dec
xor
scas
mov
jo
ret
movsl
in
pop
jge
or
add
dec
popa
cmp
out
mov
lcall
xchg
mov
fidivs
add
and
mov
push
jno
idivb
imul
inc
out
data16
sbb
mov
pop
sub
mov
rep
xor
sbb
mov
ret
loop
cli
fdivrl
in
or
in
lcall
xor
mov
adc
pop
fldenv
push
cs
enter
jg
lret
mov
sbb
pusha
insl
jno
andl
into
inc
in
jp
in
xchg
xor
sub
add
outsl
xchg
scas
push
in
cmp
hlt
cs
cmp
mov
out
dec
push
mov
frstor
adc
leave
inc
or
fs
jle
rorl
xorb
xchg
out
jo
and
push
pushf
add
inc
xorb
roll
cltd
sub
imul
mov
adcb
orb
add
xor
and
mov
cmc
push
pop
movsl
dec
inc
popa
scas
loopne
xchg
mov
dec
ret
push
mov
in
loop
out
pop
adc
faddl
test
sub
into
jmp
sub
aad
xor
jecxz
fwait
mov
cmp
pop
mov
mov
xor
mov
mov
push
fwait
imul
mov
shr
cmp
add
ret
mov
cmp
test
adc
lret
out
pop
jmp
into
xchg
lods
mov
mov
ret
add
fadd
fucomi
push
cmp
ret
cmpsb
mov
add
mov
mov
sbb
mov
cmc
push
ret
test
je
lods
fadd
shll
ffree
decb
hlt
add
sub
mov
pop
ret
shll
ret
rclb
jg
ret
ret
je
mov
push
rcr
jns
add
aas
add
jg
icebp
scas
dec
cli
test
mov
mov
mov
test
xorb
xor
sub
test
mov
unpcklps
cmp
mov
inc
pusha
addr16
mov
sub
ss
cltd
add
mov
ret
and
into
and
inc
or
jmp
sarl
pop
jle
inc
fldt
cmpsb
xchg
adc
imul
loope
lret
xor
ret
insb
mov
lret
mov
mov
mov
pusha
pop
daa
xor
mov
sub
mov
int3
addr16
cmp
push
adc
push
xor
ja
push
add
inc
arpl
hlt
cmp
inc
mov
sbb
mov
mov
pop
bnd
inc
dec
pop
push
pop
cld
ret
cmp
fsubs
fucom
add
stos
outsb
cmc
mov
ret
dec
cmp
or
mov
jne
nop
gs
mov
ret
and
add
sbb
cltd
and
lea
loopne
jb
roll
inc
data16
push
faddl
ret
insb
jle
je
ret
dec
lods
lods
lock
inc
inc
in
into
outsb
leave
xor
mov
cmp
and
add
cmpsl
adc
xchg
pop
test
sahf
pop
mov
ret
daa
andb
icebp
ret
cli
addr16
xchg
and
sahf
dec
mov
sbb
pop
jge
mov
dec
adc
sub
pop
data16
in
out
loopne
aas
add
dec
jl
xor
repnz
sub
cmp
gs
fsincos
in
sbb
push
and
jae
xor
ss
ret
repnz
xchg
sarb
out
or
or
ret
scas
rorb
fs
dec
and
sub
int
out
fadds
roll
rol
ret
jle
les
bound
movl
sti
ret
sbb
or
ret
por
pop
cltd
hlt
ret
push
pop
and
shlb
ret
sbb
addl
cmp
mov
aam
sbb
sub
jns
pop
push
stc
adc
pop
pop
mov
mov
jns
lcall
add
repnz
sarb
imul
inc
xor
int3
cld
and
mov
inc
dec
loope
jo
or
and
jne
fldt
adc
movsb
popl
sub
ret
mov
popf
sbb
ss
shl
sbb
dec
jge
les
fcoms
xchg
dec
shrl
push
xor
jbe
stos
jle
dec
ret
mov
push
ret
pop
and
ds
bound
mov
bound
shrb
stos
adc
out
ret
push
je
repnz
push
test
scas
xor
ret
mov
ret
jno
movsl
mov
imul
enter
in
mov
sbb
sub
ret
dec
aas
dec
hlt
mov
ds
fcmovu
jmp
jae
sub
lods
dec
lea
push
mov
dec
aas
lods
ret
pop
mov
cmp
ss
repnz
ret
mov
hlt
leave
fistpl
divl
ret
sti
or
cmpl
aam
out
ja
popf
mov
xorb
mov
mov
push
sbbl
stos
xchg
sub
add
ret
xchg
cmp
ret
sub
adc
jo
ret
dec
pop
jb
ret
rcr
test
shlb
ret
mov
cmpsb
pop
mov
and
ja
ret
adc
xchg
and
pop
push
mov
push
enter
stos
ret
inc
lcall
dec
ret
fxch
sbb
xchg
sub
pop
jmp
or
xchg
dec
pop
imul
mov
int
dec
mov
jne
cmp
sbb
icebp
hlt
xchg
mov
rcll
jg
mov
jb
cs
or
mov
inc
hlt
or
mov
push
mov
mov
sbbb
cmpsb
push
push
pop
decb
ret
and
inc
cmp
ret
add
push
ret
cmp
jae
cmpsl
aas
in
popf
mov
or
push
pop
sub
sub
fsts
adc
pop
inc
push
pop
inc
ret
adc
bound
shll
mov
mov
push
pop
xlat
mov
ret
fidivs
out
ret
mov
out
ret
sbbl
push
adc
sbb
cwtl
xchg
push
out
adc
hlt
xchg
pusha
mov
add
add
jecxz
xchg
jp
in
mov
cmpsl
lea
aas
aam
out
push
mov
ret
mov
pop
ret
mov
cmc
nop
movsb
inc
xchg
arpl
insb
add
loope
dec
jbe
bound
loope
mov
mov
scas
fbstp
test
or
dec
icebp
jl
jg
mov
out
testb
mov
daa
xchg
ret
fcoms
add
call
repz
icebp
and
sub
shrd
jg
ljmp
rorl
loope
out
stos
pushf
daa
mov
pop
pop
fsubr
out
out
xor
or
jae
in
rolb
and
fdivs
cld
stos
pop
push
mov
dec
adc
jne
fcompl
add
iret
xchg
dec
scas
leave
mov
cmp
add
fildl
mov
push
stc
ret
jmp
mov
jle
add
and
addr16
jnp
test
mov
imul
fadd
hlt
push
out
lods
and
add
xchg
into
jae
leave
incb
xor
jg
pop
repz
mov
push
mov
cmpsl
jo
xor
dec
cmovae
add
mov
ss
fwait
push
out
ret
int3
sub
dec
push
es
adc
mov
orl
movl
xchg
sub
or
jl
mov
ret
or
push
stos
add
ret
push
and
sbb
lds
mov
push
add
add
lret
mov
sub
and
inc
dec
fcmovnbe
loope
jg
sub
cmc
push
je
xor
mov
push
jge
mov
bound
inc
call
or
and
fcompp
ret
int3
mov
fadd
cmpsb
or
mov
gs
mov
push
jne
sub
out
jbe
inc
les
adc
loopne
mov
push
fs
mov
sbb
push
sarl
add
mov
mov
bound
xchg
xor
pop
aas
ljmp
xlat
jo
push
lods
inc
inc
stos
xchg
rep
shlb
pushf
lret
test
mov
iret
imul
pop
jnp
inc
xor
sbb
test
mov
mov
or
sbb
jge
js
sub
inc
xstore-rng
cmpsl
inc
or
adc
mov
ret
icebp
in
popa
movsl
mov
mov
imulb
xchg
js
jl
adc
push
xchg
icebp
mov
cltd
int
pop
push
ret
movsl
xor
xor
sahf
push
rcl
mov
movsl
add
lods
ja
lcall
inc
cs
xchg
mov
into
and
pop
fidivl
mov
frstor
xchg
rcrb
faddl
popa
rcrl
lret
push
sbb
jp
jo
xor
loopne
flds
sbb
lods
iret
push
test
sbb
cmc
cwtl
movsl
adc
sub
aam
je
ljmp
mov
ficoml
leave
or
out
mov
add
imul
fnstsw
jo
les
lock
mov
inc
push
fimuls
sub
mov
cld
push
dec
or
scas
push
fucom
push
movsl
push
push
adc
mov
jge
ds
rorl
push
mov
test
mov
pop
sbb
mov
rcrb
fisttpl
fwait
dec
xor
andl
icebp
fld
mov
inc
adc
cmp
sarb
cld
insb
call
pop
xchg
lods
fwait
pop
rclb
sbb
inc
out
loope
push
pop
ss
test
mov
icebp
adc
xchg
push
mov
movsl
js
jmp
xchg
or
inc
adc
lods
enter
cltd
notl
movsl
cld
test
ss
test
adc
out
inc
movsl
and
xchg
andb
mov
ljmp
mov
xchg
iret
clc
sti
dec
test
aad
mov
scas
popa
xor
out
sbb
mov
pushw
fiadds
outsl
jae
stc
scas
or
out
das
iret
jp
sbb
test
and
das
fldl
lods
push
add
ss
pop
cltd
push
and
and
lea
popf
nop
es
pop
jbe
stos
xchg
inc
pop
movsl
ret
cmp
mov
xchg
xchg
add
inc
fdivrl
out
mov
stos
cltd
addr16
lret
test
jecxz
dec
outsl
push
adc
jns
sub
push
mov
and
cld
sbb
stos
jmp
imul
cmp
xor
lods
sti
jmp
pop
mov
lret
outsl
jo
jnp
out
sub
scas
mov
lahf
ss
test
frstor
cmp
shlb
lret
mov
ja
xlat
and
lret
push
outsl
mov
sahf
fsubl
mov
jb
mov
or
rcrl
pop
data16
mov
mov
xor
test
repnz
iret
sub
xor
jno
mov
lods
or
sub
shll
pop
xchg
and
jb
dec
jae
dec
dec
mov
dec
mov
pop
clc
add
ret
jae
pop
inc
pop
cmpsl
imul
add
call
out
pusha
orb
mov
out
hlt
daa
and
sub
cmp
adc
test
cmpb
sbb
out
out
sbb
or
inc
mov
sub
mov
jg
iret
int3
or
mov
jl
rol
cmp
sbbl
lret
dec
xchg
xlat
mov
shll
pop
inc
adc
ljmp
fmuls
popa
test
test
mov
cmp
dec
and
sbb
rolb
inc
in
mov
test
push
lret
inc
scas
mov
js
out
mov
adc
mov
xor
mov
lea
add
sbb
fs
test
mov
arpl
xor
lret
insl
int
pusha
call
ljmp
jb
xchg
sbb
inc
fstpl
push
mov
scas
cmp
lods
xchg
jb
jb
aaa
aad
and
fildll
in
ss
push
xchg
call
sub
mov
nop
inc
bound
mov
mov
cmp
or
jno
enter
adc
pusha
fwait
inc
dec
xor
gs
movsl
loopne
push
and
aas
in
negb
jp
cs
sbb
aaa
repz
test
mov
mov
nop
xor
popa
fimuls
aas
fidivl
jbe
int3
adc
imul
xor
push
ds
push
jae
mov
shrl
add
in
stc
cmp
fstpt
cmp
and
clc
cwtl
insb
out
gs
icebp
pop
mov
sti
sbb
lret
sub
negb
inc
cmp
cli
cmp
jnp
lods
int3
into
xor
jecxz,pt
cmp
inc
mov
sbbl
pop
imul
jg
jns
ret
xchg
out
test
add
outsl
repnz
inc
or
les
test
addr16
je
mov
fwait
sub
movl
push
lcall
mov
pop
fiadds
adc
sbb
hlt
jae
sub
mov
data16
hlt
mov
sbb
sbb
push
mov
adcb
push
lds
test
add
repz
outsb
cli
ficompl
or
fwait
sub
jmp
xchg
dec
and
test
pusha
xor
mov
shll
divb
icebp
or
sbb
test
popf
adc
in
adc
fistpll
dec
push
xor
and
mov
sbbb
insl
push
xor
movsl
out
repnz
loop
ret
outsl
dec
mov
mov
mov
nop
lret
jb
xchg
or
pop
mov
jbe
mov
arpl
add
das
into
mov
loope,pn
pop
lret
push
cmpb
xor
push
out
cmp
push
movsl
pusha
xor
and
adc
add
cmp
fdivs
xchg
xchg
js
adc
movsl
fwait
xor
mov
mov
pushf
pop
js
addb
xor
cmp
rcrl
push
or
out
aad
sub
inc
cmp
cmpsl
shll
sarl
sub
xchg
jle
xor
inc
cld
push
mov
jno
out
cltd
into
mov
outsb
mov
movl
pop
in
stos
je
mov
lret
les
mov
ret
adc
pop
mov
clc
cli
fs
fsubrs
testb
add
xchg
or
scas
fsubr
hlt
ret
in
dec
cli
inc
xor
adc
aas
lock
jg
jp
mov
xorb
and
inc
add
mov
and
xchg
sub
push
ret
aaa
sub
push
push
std
push
subb
and
loopne
fs
sub
sub
shrl
xchg
jnp
out
cmp
adc
xor
push
mov
lahf
ucomiss
inc
andb
jp
and
sub
mov
and
mov
pop
xor
pusha
sub
fildl
cmp
daa
ljmp
aas
jl
call
into
movsl
or
pop
mov
xchg
mov
fbstp
roll
mov
adc
mov
nop
inc
sub
sub
dec
arpl
cmpsl
out
jecxz
test
cmpsl
adc
jno
fisubl
daa
jno
dec
scas
adc
mov
mov
mov
subb
mov
and
int
push
out
sub
popf
lds
stc
ret
mov
or
dec
push
and
and
outsl
and
enter
into
leave
xchg
movlps
ja
iret
out
cmp
addr16
dec
adc
imul
call
inc
xor
lcall
andb
aaa
test
mov
pop
pop
jne
sub
cmp
movsl
cmp
stos
jbe
add
jp
cwtl
mov
fldenv
test
scas
sub
pusha
movsl
inc
lock
sbb
adc
in
sbb
mov
jl
add
cmp
xchg
subl
inc
loopne
rcll
xchg
pop
mov
lea
stos
mov
sahf
xor
mov
test
ja
mov
or
data16
cmp
cld
xor
jae
and
mov
pop
mov
fsub
mov
xor
adc
pop
arpl
jns
inc
test
xchg
inc
fildl
mov
mov
add
push
dec
xor
xchg
mov
fsubl
adc
and
int
rclb
add
push
xor
mov
orb
movsl
adc
push
add
imul
pop
sbb
mov
or
and
xor
push
xor
int
popa
cmp
ret
mov
insb
into
cmp
lea
mov
test
clc
xor
pop
mov
imulb
fidivs
adc
mov
lcall
push
arpl
test
fimull
das
enter
pop
jecxz
adc
xor
test
and
adc
popa
jae
jmp
mov
mov
repz
es
cmpb
or
cmp
add
cltd
inc
jp
or
inc
sarl
loope
pop
ret
jl
adc
dec
or
jo
pop
fwait
repz
repnz
sub
pop
mov
xchg
pop
and
pop
scas
mov
pop
test
sbb
or
mov
jno
xchg
sbb
xchg
xor
cmp
movsl
dec
xlat
mov
cli
jo
lods
jl
stc
and
js
add
jo
mov
inc
dec
mov
xor
bound
lods
adc
adc
dec
fiaddl
sub
movsl
pop
rclb
gs
push
jns
mov
mov
test
mov
ss
jmp
les
arpl
adc
mov
and
pusha
mov
ss
cld
xchg
jg
mov
xchg
jp
sbb
adc
xchg
mov
aas
mov
pop
test
pop
shll
push
sbb
lods
cmp
in
dec
shll
sub
cli
mov
fcoms
pop
mov
and
add
jbe
sub
imul
ljmp
inc
in
cli
xchg
mov
outsl
and
pop
sub
mov
mull
push
cmp
dec
test
insb
lcall
sbb
movsl
test
and
filds
xchg
push
or
cmp
push
daa
add
out
scas
cmp
repnz
std
jmp
enter
sbb
lret
das
out
push
fnstcw
push
stc
dec
or
mov
cmp
xchg
xor
dec
shlb
pop
rcr
xlat
adc
push
cmp
inc
sub
xor
or
add
dec
iret
sbb
cmp
std
jmp
outsl
cmp
mov
shlb
test
push
int3
xor
inc
jmp
inc
or
adc
lret
fmull
cwtl
jmp
cltd
rclb
pushf
in
aam
bound
ror
shlb
sarb
setl
movsl
or
fdivrs
ss
adc
movsl
cs
xchg
fisubl
test
scas
mov
std
pop
jae
lcall
fs
mov
imul
cs
jmp
jmp
cmp
int
cmp
xor
lret
push
inc
pop
add
mov
mov
icebp
cmpsl
out
mov
lahf
pop
cltd
mov
mov
test
inc
mov
shlb
sahf
xor
into
aaa
enter
cmp
int
mov
mov
movsl
sbb
jle
cmp
mov
sub
in
push
mov
mov
mov
dec
movsl
gs
gs
mov
inc
leave
stos
fsubl
push
scas
rcll
pop
jb
nop
xchg
adc
popa
repz
pop
ret
clc
pop
outsb
mov
addr16
push
lea
mov
ds
loope
push
hlt
add
scas
aam
pop
xor
jns
mov
mov
xor
pop
ret
sarl
dec
movsb
jmp
rol
jno
cmpsb
mov
clc
push
mov
pop
push
ds
bound
or
testb
fldcw
loop
in
inc
movsl
push
icebp
ret
lds
and
xchg
lret
pop
stos
fcmovnu
ret
in
sbb
addl
jmp
aaa
ljmp
mov
cld
cmpsl
sbb
cltd
xchg
out
xor
ret
outsl
adc
rcrb
out
fldcw
adc
mov
movsb
mov
push
fwait
sbb
loope
ret
rorl
cli
mulb
pop
or
movsl
jmp
hlt
cmpb
out
ss
and
ret
pushf
mov
xchg
lahf
mov
les
or
and
jecxz
out
test
in
cmp
sub
ret
fists
mov
mov
ret
add
cmp
ret
dec
dec
cli
jnp
pop
add
imul
mov
mov
ret
inc
add
mov
xor
icebp
adc
jp
popf
das
sahf
mov
dec
pusha
ret
mov
ret
xor
rorl
sahf
mov
ret
or
ret
test
vpmaxsd
movsb
in
pop
jle
loope
fs
dec
shlb
fidivs
inc
xchg
sub
jecxz
jmp
lcall
jge
dec
in
insl
ret
jmp
and
xor
cmp
mov
mov
mov
adc
ret
jecxz
int3
add
ret
mov
pop
pop
ss
ret
outsb
add
inc
ret
and
scas
fwait
lods
ret
cmp
and
loop
mov
push
fstl
lea
ret
or
ret
mov
sbb
xchg
sahf
or
sub
ficoms
mov
inc
push
mov
fisttpll
ret
xlat
cli
jno
faddp
lahf
push
in
xorb
and
push
push
cmp
int
sti
into
cmp
cmc
shrb
pop
test
mov
mov
xchg
shll
dec
cmp
vcmpsd
out
ret
pop
xchg
mov
jbe
mov
aas
inc
lret
ret
pop
cwtl
xchg
mov
inc
push
mov
mov
into
push
cld
negb
dec
out
cmpsb
dec
lahf
cmpsb
inc
xor
and
ds
inc
cmpsl
push
jmp
mov
ret
cmp
ret
push
cs
push
push
ret
and
jne
sbb
ret
mov
nop
cmp
shlb
shrb
sahf
je
imulb
mov
push
and
gs
cmc
adc
loope
push
shll
xchg
cmpsb
pop
sbb
ret
imul
add
ljmp
cmp
pusha
jg
dec
mov
push
mov
insl
in
ret
push
xor
add
subb
mov
dec
out
xorb
bound
imul
sub
push
enter
into
call
or
jne
testb
aas
inc
and
fistpll
cmp
dec
movsl
stos
and
sub
cmp
jno
cmpsl
pop
fadd
mov
test
pop
push
add
popf
ret
ja
jno
ret
mov
inc
mov
ret
js
paddusb
dec
test
add
or
pop
push
out
lods
fcomi
rol
mov
lahf
ret
xor
jmp
inc
out
xchg
repz
sbb
je
ret
mov
ffree
mov
ja
faddp
in
mov
mov
jecxz
es
ret
mov
push
sahf
mov
clc
push
std
sub
pop
cmp
cmp
aad
mov
mov
xor
adc
test
xchg
imul
and
push
js
xor
into
and
lret
addb
insl
adc
clc
xor
ljmp
ret
add
xchg
in
ret
pop
push
in
sbb
ret
call
popf
not
add
stos
lock
mov
bound
ret
mov
jl
mov
cmp
movsl
ret
jp
mov
cmp
outsl
aas
xchg
mov
jo
pusha
ficompl
add
cmp
sbb
xchg
mov
add
loop
jl
pushl
ret
cmp
insl
cmpb
inc
ja
pop
inc
in
mov
cmc
jae
or
mov
adc
cli
add
sub
loop
hlt
cmpb
pop
xchg
mov
mov
ret
in
dec
push
mov
adc
cmp
ret
mov
xchg
cmp
ret
mov
jg
xor
ret
pop
jge
mov
out
sub
mov
popa
mov
or
aam
sar
pop
pop
push
addr16
cmp
cmp
jae
in
and
inc
cmc
movsl
ret
add
xchg
ds
test
notb
mov
pop
cmp
ret
push
fidivl
sub
ret
and
cld
mov
cmp
cmp
movsl
into
out
loope
sbb
and
aaa
dec
jl
ret
push
lret
dec
adc
or
rcll
lahf
mov
in
cli
out
imul
mov
mov
xor
ret
stos
jnp
sti
lock
xorl
adc
dec
mov
ret
rcr
pop
pop
in
rol
mov
repz
gs
lret
in
scas
loopne
jae
in
xchg
sbb
fstpl
daa
orl
loopne
pop
das
xor
and
or
rol
mov
push
std
stos
out
cmp
fwait
or
dec
dec
ret
mov
push
loopne
mov
shrb
push
sti
mov
sub
loopne
and
std
push
mov
call
push
lret
push
push
mov
xchg
push
stos
aad
adcb
push
jecxz
out
push
adc
popa
jb
mov
jne
inc
div
mov
pop
push
out
in
fwait
insl
cmp
cmpsb
lods
sub
inc
sub
movl
out
fstpl
lock
gs
sbb
dec
sbb
mov
cli
loope
and
adc
into
ret
jle
push
movsl
lock
ret
mov
jae
iret
fstpl
fs
cmp
repnz
mov
cwtl
fs
and
dec
ret
xor
outsl
popa
add
adc
sbb
orb
mov
ret
data16
out
cmc
or
dec
xor
push
gs
jo
cmpsl
lret
ret
js
sub
inc
fiaddl
mov
fisttps
outsl
testl
and
dec
scas
pop
sahf
inc
pusha
pop
ja
sarl
out
repz
mov
mov
and
movsl
adc
insl
mov
mov
adc
cmpb
pop
in
into
ss
mov
mov
sti
popa
cmp
jp
jne
or
jns
into
add
mov
es
test
shrb
mov
adc
popf
or
aam
pusha
fs
cli
add
push
mov
push
frstor
adc
out
adc
or
jmp
fiaddl
mov
xor
int3
in
adc
and
add
cmp
cmpl
adc
repnz
jecxz
test
mov
dec
fidivs
jo
push
movsb
sete
lods
aas
cli
push
cmp
xchg
mov
pop
and
shlb
popa
shrl
adc
sahf
repnz
dec
or
test
add
xchg
xchg
ss
xchg
popf
cmp
cltd
bound
or
sbb
adc
insb
outsb
dec
cmp
aas
lods
bound
inc
or
dec
adc
shlb
mov
jb
divl
cmp
dec
ja
pushf
data16
push
sti
sbbb
mov
mov
popa
test
mov
mov
jge
repnz
sahf
inc
loop
pop
push
xlat
jnp
add
mov
cmp
ror
mov
push
shl
fldt
ret
mov
inc
fistps
or
ret
xchg
aaa
fisttpl
or
decl
jns
pushf
cld
rcrl
aam
loope
sbb
movsl
mov
shrb
xchg
mov
subb
ret
std
call
push
fldenv
into
mov
xchg
sub
jg
xlat
push
sub
push
cmp
pop
jns
mov
mov
mov
fldt
push
scas
ficomps
faddl
add
mov
sbb
movsb
cwtl
ja
leave
dec
sub
shll
sbb
pop
out
sbb
mov
inc
sub
cmp
ds
movsw
push
sub
dec
mov
pop
shll
jb
sti
and
or
daa
les
std
roll
mov
pop
xchg
insb
lret
jbe
cld
mov
sbb
dec
xchg
test
aaa
xor
mov
int
loopne
dec
sub
lods
mov
std
test
repnz
mov
mov
test
int
lret
movsb
mov
adc
dec
scas
fisubrs
cmp
sbb
shl
jns
cwtl
test
or
jle
loope
dec
outsb
mov
call
cmp
mov
jl
mov
xchg
js
push
cmp
mov
in
test
push
lahf
movsb
inc
xchg
cld
fdivrs
popf
test
lea
shlb
mov
mov
mov
out
mov
add
in
push
sbb
scas
xchg
lret
rcrb
mov
adc
or
test
ss
gs
aad
pop
shlb
pop
movsl
cmp
pop
sbb
mov
sub
mov
ljmp
sub
stos
jge
xor
push
mov
mov
cmc
dec
mov
lret
outsl
repz
adc
xchg
mov
lahf
push
dec
lods
roll
movsl
js
inc
mov
cmpsl
mov
and
xor
daa
mov
jae
test
cmpsb
aam
xchg
or
insl
mov
out
test
ret
nop
loop
call
popa
repz
lret
adc
in
push
dec
xor
rcl
es
jne
xorb
inc
jbe
jmp
popa
fcomi
js
push
mov
mov
jb
xchg
lods
scas
or
sbb
in
sahf
xor
pusha
mov
test
cli
lcall
jbe
ss
add
dec
xchg
pop
popf
call
mov
dec
inc
cmpsl
mov
imul
push
cmpsb
rorl
movsb
lcall
cmp
lahf
cld
inc
sahf
adc
movsl
cmc
add
sub
cmp
jecxz
mov
cli
sub
outsb
adc
dec
inc
xor
das
popa
movsl
stos
ja
scas
cmpsl
mov
mov
jns
cli
sbb
ss
fcmovb
xor
aaa
iret
jle
pop
fs
sti
pop
sub
xor
cmp
pop
shrl
mov
cwtl
daa
adc
cltd
push
mov
mov
mov
push
lods
test
es
pop
sub
or
xchg
dec
sbb
xlat
cmp
sar
arpl
stos
clc
es
jae
mov
mov
push
pop
scas
fsubrp
fimull
mov
mov
or
xchg
mov
xchg
test
fst
jg
lret
shll
mov
jb
es
neg
into
xorb
cmp
push
push
pusha
add
inc
mov
outsl
cmc
daa
dec
push
cmp
xor
pusha
test
dec
or
std
mov
nop
push
mov
jo
inc
imul
jmp
js
inc
pop
mov
testb
dec
ja
jg
cwtl
and
inc
ja
ds
mov
mov
mov
jecxz
cmp
xor
movl
ror
js
daa
pop
dec
dec
sbb
dec
lret
in
mov
cmp
xor
insb
lea
push
mov
movsl
jle
mov
push
shr
adc
adc
xor
movsl
jmp
xor
cmpsb
cmp
or
popf
xchg
mov
std
imul
adc
out
push
loope
sbb
cmpsl
jns
les
stos
jecxz
pop
mov
enter
clc
mov
lcall
adc
xchg
jmp
ret
loopne
mov
add
cmp
add
adc
jle
ret
mov
dec
cmpsl
sbb
pop
add
fwait
scas
mov
ror
xchg
xor
hlt
xchg
mov
pop
out
xor
mov
inc
js
mov
addr16
jnp
lods
xor
movsb
in
fs
jae
pop
mov
jl
cmp
inc
jnp
xchg
pop
mov
inc
punpckldq
fbld
daa
adc
mov
sub
push
ret
fiaddl
pop
fnsave
aad
mov
enter
pop
ja
push
mov
xor
js
enter
cld
cmp
push
ret
xor
push
ret
notb
popa
stc
in
inc
xlat
mov
cmc
lods
xor
add
call
mov
mov
out
xchg
add
sub
mov
std
pop
sbb
push
repz
xchg
xor
lods
aas
mulb
jl
data16
adc
sarl
mov
pop
test
xor
int3
test
xor
mov
inc
fists
addb
add
cli
shr
adc
or
and
into
daa
xor
lds
jg
fldln2
into
in
lea
adc
jge
popa
pushf
scas
stos
add
mov
fsubl
mov
outsl
inc
cmp
stc
call
lret
sbb
cwtl
paddusw
mov
fnstsw
inc
adc
add
pop
outsl
jno
jge
nop
idivb
xchg
jns
fidivrl
mov
cmp
pop
mov
or
xor
pop
je
test
ja
cmp
mov
mov
xchg
sti
jne
and
xchg
aaa
mov
xchg
aam
dec
movsb
cmpb
sub
out
xchg
mov
mov
sbb
pop
addb
mov
fwait
mov
or
push
sub
and
arpl
push
rclb
xchg
icebp
mov
push
jne
leave
mov
into
pop
xor
into
mov
orps
cmp
adc
outsb
loopne,pt
sub
add
push
xchg
test
jp
daa
inc
xchg
adc
mov
sub
fcoms
outsl
xor
aad
repnz
cmp
mov
mov
cmc
and
jmp
mov
cmp
inc
test
dec
push
pop
xor
inc
inc
mov
insl
mov
cmp
addr16
addr16
cmp
aas
mov
mov
xor
test
adc
scas
add
cmp
xchg
mov
lods
jne
and
insl
inc
movsl
insl
bound
nop
pop
cmp
jb
imul
fidivrl
jecxz
mov
fists
jno
int3
cs
mov
shlb
mov
cmp
ja
mov
inc
nop
js
or
inc
cli
adc
mov
frstor
es
sbb
add
sbb
scas
sahf
xor
pop
sub
push
sub
add
dec
dec
add
sbb
shll
stos
or
or
mov
imul
xchg
out
loopne
test
adc
jge
xchg
test
shrb
movsb
jg
into
cli
cmp
shrl
gs
xchg
pop
addb
repz
jge
adc
fdivrl
adc
fdivl
test
push
repz
adc
adc
test
popf
pop
sub
cs
jno
push
mov
sbb
sub
scas
dec
inc
jecxz
or
in
fadd
xlat
lds
cli
xor
dec
push
pop
pop
jmp
mov
mov
test
les
pop
cmpsl
jne
icebp
sub
or
fidivrl
int3
aas
mov
test
movsl
sbb
loope
push
push
dec
cmp
icebp
sbb
xor
lds
mov
mov
es
jb
jno
cmp
inc
leave
clc
lret
fmull
outsl
addr16
gs
andb
adc
fst
mov
leave
lret
imul
loop
es
pop
dec
repz
xchg
pop
cmp
imul
popa
jae
shlb
sub
ja
adc
and
jnp
cmpsb
xor
cmp
pop
outsb
mov
js
ret
insb
jb
scas
add
orb
mov
lods
jae
ret
outsl
in
adc
dec
ret
inc
dec
popf
movsb
das
and
imull
ret
pop
jne
cwtl
dec
dec
add
mov
mov
sub
mov
sub
insb
movsl
mov
jl
push
or
imul
fmuls
xchg
decb
xchg
cld
pop
push
mov
cmp
stos
rorb
or
inc
ret
mov
out
sub
mov
inc
ret
add
outsl
mov
and
xchg
ret
cmp
mov
xchg
lret
movb
imul
dec
inc
push
ret
xchg
cwtl
sbb
pop
xorb
pop
pop
sbb
push
jmp
loope
je
in
hlt
and
enter
push
lods
into
cmc
loope
mov
sub
and
adc
loopne
stos
sub
addl
inc
mov
sbb
pop
mov
jno
addr16
fidivs
movsb
fsubs
ret
and
movsb
add
rcll
pop
and
movsl
xor
mov
jae
mov
push
pop
jo
push
ret
push
xchg
in
scas
ret
dec
inc
popa
and
ret
clc
hlt
jae
mov
bound
xchg
lods
fnstsw
lretw
scas
dec
pusha
repz
mov
ret
push
cmp
in
xor
insl
mov
adc
ss
addr16
lock
push
pop
pushf
add
fiaddl
mov
lea
ret
push
gs
sbb
daa
imul
cmp
mov
ret
fistpl
mov
xchg
mov
lret
push
mov
addr16
call
mov
adc
loopne
xchg
test
fucomi
ret
sbb
iret
ret
mov
and
and
ljmp
mov
or
ror
fisubrl
je
mov
dec
xchg
and
loopne
xchg
ret
adc
mov
lock
cmp
xor
inc
mov
inc
ss
hlt
movl
dec
ja
sub
test
aaa
inc
mov
sub
insb
or
ret
mov
sub
inc
jmp
ret
roll
xchg
dec
mov
scas
xchg
stos
ffree
loopne
lds
test
ret
cld
dec
sbb
jg
fisubrl
jmp
sub
dec
lods
inc
mov
xor
movsb
dec
inc
insl
nop
lods
cmp
dec
or
shl
repz
ret
out
add
loope
sub
adc
mov
and
push
imul
dec
cmp
dec
ret
sarl
or
aaa
ret
out
out
fidivrl
inc
cmpsl
lods
pop
fbstp
xor
fisubrs
outsl
pop
out
negl
jle
je
pop
jg
dec
pop
add
dec
mov
push
fidivl
mov
lds
mov
ret
sbb
adc
jg
ret
cmp
cmp
stc
ret
loopne
aam
mov
loope
scas
mov
mov
cmp
cmc
dec
clc
mov
lret
stos
mov
popa
pusha
add
cmp
add
xchg
adc
and
xor
outsb
ret
rcrl
dec
mov
mov
sub
inc
mov
in
out
hlt
jno
mov
push
xor
and
repz
fisubrs
and
ret
or
dec
jmp
jle
xor
ret
out
push
ret
popf
ret
bound
push
pop
movsb
enter
bnd
lcall
jg
loop
or
xchg
ret
mov
fimuls
cmp
stc
imul
lcall
jg
aam
int
lods
or
ret
jecxz
sub
repz
test
jb
frstor
mov
xchg
addr16
push
lods
mov
push
ret
mov
pop
add
mov
outsb
out
scas
sub
inc
ret
mov
push
loope
imul
shl
mov
ret
faddl
mov
imul
clc
jne
mov
xlat
test
mov
pop
xor
mov
pop
cmpps
cwtl
lahf
fwait
data16
dec
ljmp
mov
and
scas
fnstenv
xor
repnz
pusha
inc
fisubrl
iret
scas
add
mov
mov
pop
mov
xor
mov
mov
sbb
ret
jbe
in
jb
mov
mov
sti
and
mov
cmp
mov
dec
jg
jge
stc
mov
pop
sbb
jecxz
nop
cmp
cmpsl
ret
sub
push
fs
ds
mov
movzbl
xchg
pop
ret
pushf
fucom
loope
imul
or
ret
cmp
mov
loopne
jo
mov
pusha
addr16
lods
aad
cmpsb
mov
in
mov
xorl
or
mov
movsb
jnp
mov
xor
xchg
adc
rorl
jecxz
cmp
ret
pop
mov
arpl
ret
mov
icebp
dec
xchg
ret
pop
or
cmp
ret
push
fldt
xchg
ret
cmp
rdmsr
or
insl
leave
jl
xor
pop
jnp
test
cltd
pop
xorl
insl
mov
ret
add
jmp
pop
mov
mov
ja
or
xchg
stos
cmp
mov
out
xchg
dec
push
lret
in
cli
faddl
fsubrs
out
xchg
movsl
dec
repnz
add
mov
xchg
cmp
mov
pop
add
mov
lock
dec
ja
data16
mulb
cmp
jge
add
loope
adc
mov
insl
andl
sub
out
js
sub
pop
cmp
test
repz
sub
fmuls
orl
andb
lret
je
adc
xor
fadd
frstor
daa
lahf
dec
gs
mov
jg
mov
popa
cmpsb
and
cli
inc
mov
xchg
mov
cmc
and
sbb
push
test
jecxz
dec
test
cmp
dec
pop
cmc
into
add
mov
shll
fnsave
rorb
fimull
jl
cmp
les
andb
and
addr16
loopne
jno
sbb
hlt
jns
pop
aas
iret
cli
xlat
mov
mov
aam
cld
sbb
add
test
arpl
mov
push
lods
int3
mov
cmp
data16
dec
xor
loopne
dec
mov
ficoml
push
fdivl
cwtl
inc
movsl
cld
ss
mov
mov
test
inc
sub
pop
cmpsl
jb
movsl
insl
xlat
mov
and
shlb
sahf
jl
inc
outsb
out
sar
cmc
outsb
sbb
test
sbb
ret
les
pop
dec
jmp
or
incl
push
sub
xor
fcmove
mov
xorl
mov
jns
divl
es
daa
adc
nop
imulb
mov
inc
cmp
cmpb
movsl
push
mov
xor
cmp
mov
jo
and
mov
jns
rol
stc
and
repz
test
mov
je
sbbl
sub
push
sbb
inc
out
cwtl
jne
dec
cmpsl
mov
or
xchg
fisttpll
cld
out
mov
xchg
cmpb
adc
mov
jnp
shll
js
out
mov
stos
and
mov
push
inc
adc
mov
adc
test
or
push
xlat
cmp
fadds
ret
shll
mov
mov
cmpsb
pop
mov
popa
sub
push
or
les
dec
push
xchg
jo
aad
pop
movsl
cs
scas
xlat
lret
in
lret
cmp
inc
ret
dec
cmc
cwtl
mov
push
push
xor
mov
in
imul
fs
adc
imul
scas
std
fs
ss
sahf
inc
xchg
pusha
loop,pt
cmp
out
call
mov
add
movsl
loop
mov
pushf
rcr
es
ss
pop
clc
or
inc
fdivs
pop
mov
or
ret
pop
les
jne
mov
mov
pop
scas
and
cmp
push
pop
outsl
pop
aaa
add
mov
sahf
sarl
mov
dec
mov
adc
jno
jl
push
xor
sub
mov
sbb
and
mov
pusha
mov
in
cmpb
xchg
jnp
sub
xor
testb
xchg
mov
jg
pop
mov
dec
lret
in
rcr
ljmp
popa
sbb
mov
fbstp
daa
fldt
lock
dec
inc
pop
jns
jbe
out
push
lock
dec
jne
pop
enter
sbbb
add
inc
lcall
adc
push
dec
jns
lock
test
push
je
movsl
cmp
add
xor
shlb
lods
inc
sbb
das
jae
push
sub
cmp
fnsave
repnz
je
aaa
iret
xchg
fmull
xlat
xor
cmpsl
movsl
jmp
lcall
jecxz
repnz
icebp
dec
into
pop
inc
inc
ss
sbb
lret
sbb
adcb
mov
adc
pop
or
mov
inc
adc
mov
or
dec
mov
cmp
pushf
sub
fstpt
or
cmc
fucom
mov
clc
mov
adc
clc
adc
inc
sub
jp
divl
cmp
xchg
ror
or
jb
roll
adc
aaa
test
mov
mov
cltd
sbb
mov
cmp
push
ret
xchg
outsb
xor
and
dec
insb
int3
mov
jecxz
mov
bound
xchg
push
jo
loope
repnz
pop
and
dec
fwait
loopne
ret
or
or
into
js
movsl
inc
sbb
addr16
mov
jge
arpl
int3
push
lahf
inc
and
stc
into
inc
test
clc
inc
mov
fnstsw
out
or
sar
inc
inc
jo
nop
leave
sbb
dec
sub
push
cmpsl
or
push
pop
mov
imul
lahf
por
cmpb
add
sbb
popa
mov
inc
outsb
fnstsw
mov
insl
or
sahf
idivl
dec
cmpsl
sub
push
mov
mov
cwtl
inc
cmpsl
clc
movsl
jge
insl
inc
mov
mov
jo
pop
mov
js
push
hlt
mov
rol
or
test
xchg
pop
mov
push
mov
add
xchg
stc
addl
fs
icebp
and
out
pop
inc
fsub
stos
leave
divl
mov
ret
subl
add
ret
enter
cmpsb
les
lea
clc
and
dec
xor
or
mov
mov
dec
ja
test
adc
push
and
sub
inc
jb
clc
mov
xchg
movsl
ret
popa
ljmp
jmp
mov
and
and
pop
test
dec
int
pushf
or
sbb
mov
ret
cs
cli
xchg
dec
subb
stos
push
dec
ja
mov
add
test
ret
dec
lock
ret
clc
or
and
fmulp
jg
ljmp
sbb
mov
xchg
icebp
ret
jge
mov
repz
out
sbb
ret
ret
call
fiadds
test
pop
fmull
ret
xor
out
les
cmp
xchg
push
xor
push
mov
add
ret
mov
jle
movsb
xor
inc
jno
mov
push
and
ret
dec
sahf
xor
lods
ret
mov
jne
aas
add
push
test
decb
cmc
jnp
cmp
pop
ret
dec
cmp
int
mov
mov
stos
pop
sbb
imul
push
mov
dec
push
fidivs
inc
push
ret
cmpsb
pop
std
andl
mov
push
mov
sahf
xchg
lret
ret
jecxz
popa
outsb
or
loopne
jbe
pop
ret
cwtl
andl
jl
pusha
adc
mov
inc
je
and
inc
movsw
cwtl
mov
out
test
lock
add
add
or
inc
and
loopne
test
imul
aad
add
aaa
aaa
mov
adc
iret
int
std
ret
or
push
repz
adc
sub
push
jmp
shl
mov
xchg
imul
popa
sahf
loop
aad
mov
enter
cmp
ja
mov
jmp
pushf
mov
mov
ret
inc
push
mul
cmp
test
lods
sbb
retw
xchg
scas
in
je
in
mov
ret
ret
iret
movsl
notb
ret
pop
xor
popa
ja
ret
sbb
loopne
loop
dec
daa
mov
insl
pop
cmpsl
xor
ja
test
or
ds
ss
xor
and
inc
loope
pop
addr16
sub
aad
push
es
mov
mull
fbstp
jnp
lods
xor
out
push
test
ret
ja
pop
ret
in
in
push
sti
je
ret
cmpb
mov
lret
adc
mov
imul
test
mov
xor
cld
push
cli
loopne
sarl
mov
repz
imul
push
fcomip
pop
cmp
or
jecxz
notb
bound
mov
xchg
mov
in
test
mov
and
adc
ret
xchg
cwtl
fsubs
std
cmp
ret
or
sarb
ret
mov
mov
and
dec
or
sub
inc
call
sbb
aad
dec
jecxz
ret
cwtl
popf
scas
sbbb
mov
fwait
sub
movsl
cmp
push
ret
shrb
aam
pop
ret
test
cmp
xchg
loopne
fldt
int
pop
inc
xor
add
outsb
rcrb
jle
sti
sub
dec
ret
clc
mov
sub
push
sbb
cmp
mov
cmpsb
orb
addr16
mov
mov
lock
adc
mov
cmc
pusha
xchg
cmp
ret
les
pop
xor
ret
sar
loop
jbe
ret
mov
ret
ret
shl
enter
popf
xor
xchg
cwtl
mov
mov
fldenv
mov
ljmp
out
arpl
fisttpl
test
ljmp
xlat
repnz
mov
pavgw
filds
push
mov
stos
fucomp
mov
jne
jo
repnz
loope
xor
dec
lea
icebp
xor
fnsave
loope
and
add
flds
aaa
mov
adc
or
mov
test
scas
sbb
xchg
jmp
dec
fwait
ja
ret
insb
sbb
loopne
ret
fwait
aaa
xchg
pop
jb
ret
movsl
fidivrl
fsubr
ret
call
dec
add
sbb
cmp
cmp
ss
shrb
cmp
fs
mov
xor
adc
stos
das
xorb
outsb
lahf
fsubrs
fmull
mov
ret
and
lods
xor
ret
sub
or
jmp
lock
daa
sbb
and
jl
jg
pop
mov
insb
cmp
jnp
je
fmuls
clc
mov
mov
xchg
mov
mov
js
mov
adc
lret
inc
pop
mov
sti
dec
rcll
mov
arpl
xchg
jle
pop
inc
repnz
loop
ret
push
fcompl
push
push
shrb
pop
sub
sbb
cmc
mov
cmpb
stos
cltd
mov
ret
inc
dec
pop
mov
clc
cmp
fmulp
bnd
ret
xchg
mov
loop
xchg
push
jb
fisubs
movsb
testl
mov
add
dec
lea
lret
js
pop
std
mov
je
sti
ret
inc
push
insb
dec
inc
push
and
bound
mov
cmp
pop
stc
sahf
jge
in
stos
and
push
pop
ret
or
imul
imul
lea
xchg
or
dec
pop
dec
or
ss
ja
cmp
hlt
lods
test
pop
sahf
imul
inc
dec
in
and
push
jb
test
sbb
fs
pop
insl
sbb
js
mov
mov
push
ljmp
sahf
xchg
ret
scas
imul
loope
or
scas
mov
adc
dec
cli
icebp
pop
xor
fstl
mov
imul
pop
je
ret
xlat
sbb
push
data16
gs
divb
ret
or
ret
data16
push
test
lods
aaa
pop
sahf
cmc
std
and
cmp
inc
out
mov
incb
ret
cmp
or
int3
aaa
xlat
mov
push
sub
pop
ret
sarl
mulb
cmp
imul
mov
mov
pop
inc
loop
adc
mov
xlat
or
lds
mov
ret
add
fidivs
xor
sub
cmp
lret
mov
mov
fdivrl
ret
pop
xchg
iret
js
inc
lock
sahf
jo
push
ret
mov
mov
pop
idivb
std
incb
or
je
xchg
mov
shrl
mov
jb
popf
aad
rep
std
mov
movsb
xchg
test
jecxz
sti
push
xchg
jb
inc
stos
cmp
arpl
mov
adcb
in
ret
push
js
test
xor
sbb
test
sbb
pop
mov
aaa
jle
icebp
push
out
sbb
mov
lcall
dec
repz
incb
cmp
in
fsubs
push
dec
cs
sbb
hlt
adc
pop
push
xchg
cmc
push
fs
test
test
out
cltd
add
cmp
scas
sub
mov
push
sub
test
aaa
cmpsb
lret
sbb
fdivs
je
cli
xchg
sbb
sarl
das
loope
lods
push
mov
outsl
rclb
sbb
jbe
movsb
test
add
repnz
cltd
fcompl
mov
adc
jns
lods
nop
xor
movsl
xchg
pushf
ja
jns
les
sbb
out
push
pop
inc
xlat
pusha
fiadds
xorl
add
xchg
lock
push
das
mov
fs
fcmovnb
aad
mov
xor
or
sbb
movsb
pop
cwtl
mov
movsl
mov
cmp
pop
or
xchg
mov
in
adc
out
mov
rorl
and
xchg
cld
sub
shr
mov
adc
daa
or
xor
test
pusha
fisttpl
dec
sub
cld
sbbl
inc
inc
adc
add
js
xor
stos
mov
fstl
movsl
mov
cs
scas
aad
stos
fisubl
pop
clc
mov
sbb
scas
xchg
add
cwtl
sub
mov
mov
pusha
pop
jnp
insl
mov
stc
pop
or
stos
popa
test
jmp
sti
pop
hlt
jo
ret
xor
jnp
lods
add
dec
push
mov
popl
out
stos
push
jo
scas
xchg
pop
dec
pop
add
mov
pop
shl
xor
xchg
pop
sub
jne
sub
jb
gs
jae
push
inc
push
clc
faddl
add
ja
pusha
xor
lods
ljmp
in
pushf
stos
loopne
and
jmp
xor
seta
jne
sbb
aam
fwait
fs
adc
push
cmp
js
loope,pt
sbb
stos
dec
xor
xor
es
stos
aad
rorb
cs
cmpsl
leave
or
ss
sti
outsl
fwait
mov
mov
pusha
cmp
xorl
jns
cmp
xorb
aaa
mov
sbb
out
and
jg
jecxz
mov
fnsave
mov
out
into
shrl
subl
xchg
cmp
pop
jo
and
nop
jecxz
sbb
xchg
xlat
movsl
jne
push
mov
sbbb
faddl
scas
xor
mov
imul
cmp
mov
das
punpcklbw
push
sbb
fisttpll
hlt
mov
add
mov
pop
inc
test
inc
insb
pop
scas
mov
dec
fs
xchg
lods
test
bnd
mov
mov
out
xchg
inc
adc
inc
arpl
mulb
add
shlb
add
mov
mov
cwtl
sub
test
testb
addr16
seto
push
notl
sbb
and
addb
test
sub
imul
icebp
in
ret
aaa
test
cmpsb
xchg
cli
arpl
test
inc
push
sti
jne
jo
js
fwait
add
xlat
xchg
mov
cmpsl
adc
pushf
and
push
jnp
test
test
adc
inc
mov
jp
rcr
cs
add
jb
mov
popa
xchg
loope
pop
popf
add
mov
jb
push
test
pop
out
lcall
sbb
das
repz
pop
xor
adc
call
movsl
xor
cmp
imul
xor
and
xor
ja
cmc
push
push
add
cwtl
fidivl
bound
lods
in
cwtl
cmp
mov
fwait
xor
inc
push
dec
shll
std
fisubs
iret
sbb
les
xchg
sbb
pop
push
test
aas
stos
or
xchg
xor
rcr
fdivl
jo
mov
mov
cld
and
addr16
negl
push
sbb
or
and
cmpsl
test
mov
mov
test
inc
movsl
jmp
out
fisttps
loope
push
sbb
sarb
pop
xchg
arpl
test
popf
jo
popa
sub
jo
adc
mov
and
and
pop
ds
mov
fldenv
sub
inc
sbb
popa
stos
mov
push
add
sbb
cmp
push
pop
in
cmp
rorl
mov
int3
mov
mov
fwait
push
dec
test
adc
mov
cmp
add
jo
insl
mov
mov
jo
mov
adc
jl
and
jns
ret
jle
pusha
push
gs
xchg
add
cmp
or
xor
aam
mov
xor
fwait
add
cltd
rclb
cmp
shr
push
ja
xchg
imul
or
fistpll
cmp
addr16
daa
and
shlb
dec
iret
test
int3
test
test
into
mov
jl
sbbb
add
mov
push
xchg
adc
ja
sti
sub
data16
rol
pop
ds
and
sub
fs
sub
cmpsl
push
and
cltd
xlat
inc
inc
into
push
fs
movsl
roll
mov
adc
push
cli
outsb
insl
sbb
xor
xchg
imull
push
aas
push
pop
cltd
fstpt
xchg
mov
or
int
jecxz
push
pop
sbb
imulb
aas
out
cmp
push
sub
pop
adc
lock
push
jo
sub
test
cmp
mov
sar
fsubrs
sub
mov
aaa
and
mov
sbb
sbb
xor
jbe
popa
sti
xchg
test
jo
dec
out
adc
nop
xor
dec
mov
sarb
mov
mov
lock
dec
xchg
jecxz
inc
dec
movsl
ret
dec
sub
cmp
jle
xchg
pop
test
fcoml
cmpl
and
xchg
inc
scas
push
pop
or
mov
jle
jo
inc
fdivrs
dec
and
pop
mov
out
sub
pop
in
fistpl
cmpb
inc
ret
adc
sub
mov
movsl
rolb
pop
jmp
call
ret
rcrb
bound
jns
pusha
pop
iret
int3
std
std
pop
pop
push
sub
inc
in
ljmp
fs
movsl
adc
mov
mov
cwtl
inc
jmp
test
pop
fldt
insl
cmpsl
xchg
clc
push
scas
nop
xor
add
imul
xor
pushl
push
mov
test
xchg
data16
or
mov
out
jne
mov
out
pop
xchg
or
rol
pop
rcll
jle
mov
cmpl
jle
sbb
sti
mov
cmp
xchg
jb
fisubl
pusha
insb
cmp
xchg
in
jbe
xlat
mov
into
jo
sbb
xor
mov
mov
scas
rorb
cmpsl
xchg
add
mov
xchg
dec
cwtl
add
sub
inc
lods
or
shlb
and
xorl
mov
sub
cmc
sub
cmp
daa
mov
aad
sub
mov
popa
cli
xor
jne
add
push
mov
jecxz
mov
testl
cmp
test
filds
jp
lcall
xor
shll
jg
movl
xlat
sbb
fistpl
dec
pusha
push
fcomps
sbb
pop
fnstsw
sub
mov
jmp
xorb
push
bts
sbb
pop
ss
xchg
cmpb
out
push
lcall
in
aaa
fdivs
sbb
mov
xchg
pop
cltd
xchg
xchg
pusha
or
movsl
fsubl
mov
inc
mov
inc
lret
xlat
and
push
add
jne
jmp
jb
test
movsl
iret
inc
adc
cmpsl
inc
fs
mov
movsl
mov
cmp
psubb
inc
pop
xchg
cmp
mov
mov
fs
xor
xor
mov
mov
pop
out
fs
jo
mov
push
mov
inc
or
pop
loope
cs
mov
std
out
fcomp
movsb
mov
fistpll
sbb
add
xor
or
fmull
loope
push
fildl
inc
fstpt
mov
sti
pop
cmp
pop
shl
mov
in
xor
adc
mov
jo
js
add
imul
mov
jle
mov
sarb
pop
xor
mov
cmp
fcmovu
lahf
jl
int
mov
ret
xchg
repnz
sub
cld
das
mov
addr16
cmpb
and
stos
test
or
orb
test
dec
movsb
bound
mov
push
inc
test
xlat
xchg
push
and
xor
mov
leave
adc
scas
push
mov
jns
mov
mov
sbb
fbstp
shll
cwtl
fldt
pop
jg
jo
popa
scas
or
pop
stc
jg
outsb
xchg
stc
out
dec
mull
fcompl
pop
fwait
mov
negl
mov
std
inc
int3
mov
popa
inc
or
sbb
mov
das
add
daa
int
pop
xor
cld
or
cmpsb
in
lret
loope
push
es
cmp
popa
jp
pop
jg
mov
scas
mov
stc
loope
mov
xchg
cmpl
orb
sub
jp
sbb
sbb
daa
pushf
movl
sub
outsb
xchg
cmp
outsb
stos
out
fmull
xchg
movsl
cld
les
xor
popa
mov
mov
xchg
cmp
xchg
mov
mov
xorb
cmp
cli
add
mov
xchg
rcll
mov
lods
imulb
shll
arpl
std
jle
js
cs
mov
out
fiadds
nop
mov
sahf
xor
adc
adc
fidivrl
sub
test
fcomip
jns
cmp
jp,pt
inc
mov
fsubl
xor
imul
mov
xchg
or
idiv
mov
mov
xchg
out
xor
xor
add
test
ja
stos
cmp
xchg
cld
aas
scas
clc
adc
dec
xorb
jl
hlt
mov
movsl
xchg
push
insb
jno
and
lret
test
cmp
fldl
movsb
nopl
bound
pop
xchg
and
scas
ss
dec
pop
movsl
ja
xchg
std
xor
test
fcoml
cwtl
pop
insl
andb
add
push
xor
mov
lcall
cmp
movsl
or
push
mov
jle
sub
inc
jp
push
lahf
les
addr16
aad
imul
rol
cltd
mov
lcall
jne
cmp
movsl
xchg
test
pop
pusha
cmpsl
xchg
cs
cltd
stc
and
xchg
iret
and
ficomps
cmp
gs
mov
test
in
stos
cwtl
sarb
mov
jecxz
jle
cmpsb
in
push
sbb
fdivl
pop
inc
adc
mov
ret
into
push
add
jno
inc
or
mov
jb
jecxz
xor
je
sub
iret
xchg
cs
inc
push
mov
rolb
adc
push
test
das
pop
xor
dec
and
cmpsl
push
sarl
sar
call
rep
aaa
sub
test
inc
sub
sub
movsl
mov
cmp
push
pop
lret
shll
ja
adc
lret
and
cwtl
inc
cs
and
movsl
fistpll
and
or
hlt
daa
aad
xor
add
jge
fpatan
testl
call
mov
or
xchg
mov
fisubs
addr16
test
add
pop
pop
in
or
mov
push
sbb
cmp
cltd
test
loope
adc
push
and
mov
mov
lock
inc
adc
shrb
mov
cli
cmp
mov
in
ds
mov
cmp
ret
loop
mov
xchg
mov
arpl
push
jae
in
sub
pop
imul
inc
js
nop
xchg
push
icebp
flds
shlb
fmull
leave
shll
pop
in
jge
mov
out
pop
adc
mov
std
jb
hlt
and
add
fisttpl
dec
movsl
pop
pop
pop
cmp
xorl
inc
and
xor
fstpt
imul
iret
adc
out
lods
dec
into
mov
xchg
movsw
xor
cli
dec
lods
mov
mov
jo
pop
dec
out
jne
movsl
and
push
xlat
stc
data16
addl
mov
xor
mov
xchg
int
inc
popf
mov
adc
sarl
mov
sbb
sbb
leave
inc
jae
push
loop
movsl
loopne
cmp
sbb
push
jg
pop
xchg
int
mov
test
pop
inc
stos
int
out
popf
push
sub
lea
mov
movsl
fistl
jnp
subb
mov
repz
movsl
leave
push
xchg
data16
jecxz
or
mov
mov
out
mov
gs
mov
into
push
or
in
imul
mov
stos
mov
in
inc
arpl
imul
mov
pop
adc
into
cmp
sbb
shlb
jo
out
mov
jne
pop
adc
ljmp
pop
mov
dec
bound
adc
add
mov
test
lods
mov
push
dec
and
pop
cmp
and
inc
ret
xchg
std
push
add
add
and
mov
xor
fisttpll
sbb
jle
push
xor
mov
mov
ret
mov
pop
in
sbb
fucomi
and
sub
nop
cld
mov
xlat
lea
sbb
shl
mov
jmp
inc
and
jo
cmpsb
push
xor
mov
cld
movsl
push
repz
std
mov
add
cmpsl
or
adc
sahf
shll
jg
xor
adc
shll
dec
xchg
xor
push
xorb
mov
dec
xorb
outsl
and
sbb
jnp
xchg
sub
add
jmp
xor
sbb
movsw
mov
adc
sbb
sbb
sahf
lods
lahf
mov
mov
mov
fildl
xchg
mov
shll
pop
xchg
iret
cli
mov
jb
mov
and
test
daa
cmp
add
outsl
repz
sub
cmp
pop
andb
sahf
cwtl
test
in
cmc
fidivrs
push
jo
rolb
or
push
mov
shrb
jmp
int3
push
in
movsl
mov
lods
pop
aaa
fimull
stos
mov
mov
out
and
adc
xchg
mov
push
add
mov
xor
cs
cli
or
out
cmc
dec
clc
cmovg
adc
enter
adcb
rclb
mov
test
push
cmpsl
cwtl
add
jns
mov
pop
stos
testb
or
dec
xorb
cs
sub
xor
pop
mov
sub
mov
mov
cmp
or
fwait
iret
xor
daa
les
xchg
mov
mov
sbb
fcmove
imul
or
sbb
movsl
inc
sarl
aaa
pop
mov
pop
popa
out
lock
mov
in
js
scas
pop
cmp
out
lcall
mulb
mov
ss
sbb
add
mov
add
cmp
push
mov
mov
in
adc
ret
out
enter
cmc
mov
xchg
sub
sub
add
mov
or
mov
dec
ficompl
sbb
inc
and
lods
inc
rorl
xchg
mov
movsl
xor
mov
enter
mov
adc
or
pop
cwtl
ja
pop
and
stos
inc
jae
push
fmul
dec
cmp
xchg
or
inc
sti
in
dec
fisubs
aam
lods
xchg
pop
movsl
cmpl
add
movups
movsb
cmpsl
cmp
add
in
mov
shll
cltd
test
dec
mov
dec
mov
inc
adc
ret
xchg
roll
rcrb
xor
inc
out
cmpsl
dec
or
xor
jecxz
insb
fcompl
ret
sub
movsb
mov
lcall
jo
sub
mov
into
lahf
push
jge
and
mov
roll
aas
mov
inc
jb
daa
dec
push
adc
mov
out
fdivs
ja
int3
xchg
lods
shlb
loope
mov
stos
dec
lret
push
add
xor
fisttpl
int
cmc
leave
pop
andl
cmp
mov
stc
and
push
jnp
pusha
pop
adc
adc
pop
movsl
and
push
in
ds
sub
ljmp
push
pop
rclb
movsl
in
lea
stc
jbe
popa
adc
pop
push
xchg
push
into
inc
jg
and
push
icebp
dec
jbe
inc
or
into
imul
inc
je
xchg
and
xor
cwtl
push
sarl
test
daa
xlat
dec
xor
sub
cmp
les
xchg
xor
pop
xchg
push
mov
cmpsl
or
sbb
sub
aas
call
sahf
xchg
add
push
hlt
inc
inc
sbb
jp
sub
cli
js
mov
mov
pop
and
movsl
repz
imul
insb
insl
mulb
bound
test
test
shrl
cmp
je
outsb
and
gs
cld
sbb
test
mov
cmp
outsb
xchg
mov
sbb
lds
and
cmp
xorl
pop
push
hlt
movsl
mov
and
test
xchg
xchg
add
mov
add
cld
outsl
bound
mov
sub
je
mov
cmp
inc
iret
popa
add
mov
mov
mov
inc
inc
xchg
add
test
ret
in
mov
dec
push
xor
pop
cmp
xchg
cmp
clc
mov
shll
ds
and
stos
ja
add
pushf
dec
je
cmpsl
lock
dec
je
movsl
jns
ret
push
sbb
mov
mov
out
pop
aas
push
xor
jb
pop
push
dec
out
cmpsb
inc
xchg
cld
mov
sbb
js
mov
pusha
cmp
lods
bound
pop
movsl
out
cmp
cmpsb
dec
sbb
push
adc
stos
pop
inc
das
cmp
mov
xor
dec
scas
add
mov
andb
sub
push
pinsrw
cmc
clc
sub
fists
mov
and
ret
inc
add
or
repnz
insb
movsb
mov
loope
enter
and
daa
xchg
int3
adc
push
mov
mov
decb
sbb
sub
out
jb
js
adc
mov
cmp
out
adcb
dec
mov
insb
push
pop
loope
or
std
out
cli
push
mov
pop
cmc
mov
mov
cwtl
lret
pop
addr16
xchg
jecxz
test
and
push
lret
sbb
xor
push
gs
out
std
idiv
es
xchg
xchg
adc
jp
cs
test
add
push
ja
pusha
movb
out
dec
mov
popa
imul
in
es
js
push
sbb
fildl
jno
xor
jmp
adc
adc
daa
push
push
ficoms
jnp
push
cmp
xor
imul
je
mov
lret
mov
sahf
rcl
or
cmp
jge
xchg
or
mov
lret
shlb
shrb
xor
test
cmp
in
push
shlb
pop
jns
pop
cmc
mov
test
bound
fldcw
popf
jle
stos
fldt
rcll
mov
scas
push
xchg
popa
daa
mov
addb
jl
shr
mov
xchg
out
pop
cmp
popa
sub
aas
fisubl
xor
nop
and
out
mov
mov
stc
sub
pushf
repnz
and
and
int3
lock
push
xchg
test
mov
push
scas
sbb
dec
push
xchg
daa
fcomi
je
enter
cmp
mov
js
adc
je
insb
nop
xchg
popa
repz
outsl
jl
push
sub
movsl
addb
or
push
das
imul
test
push
ret
testb
test
add
jl
pop
scas
dec
and
inc
ret
fstpl
jg
cmp
out
fst
xor
insb
addr16
mov
dec
cmp
clc
inc
push
xor
cwtl
shll
lods
das
lods
popa
addr16
xchg
adc
and
lods
adc
xchg
dec
mov
out
or
insb
xchg
cmp
mov
daa
and
into
cmp
loop
daa
cli
xchg
push
or
stos
mov
mov
mov
xchg
mov
loop
xor
sbb
cld
aad
jg
ds
push
pop
and
les
movups
roll
mov
icebp
dec
jle
test
cmp
addr16
scas
movsl
cmp
jle
xlat
mov
cmp
push
ljmp
rclb
daa
shrb
je
pusha
shl
outsl
sub
xchg
cmp
inc
lods
jecxz
add
mov
out
into
sbb
cmp
clc
je
xchg
cmpsl
in
dec
inc
cmp
or
mov
push
mov
stc
movsl
stos
fwait
popf
movsb
ret
add
mov
mov
mov
into
mov
lret
movsl
mov
popa
push
mov
rcrl
push
shll
cmc
test
mov
cmp
out
iret
jo,pn
pop
mov
incl
pop
mov
add
int
xorb
sub
inc
add
mov
and
jecxz
sub
scas
jl
jb
jmp
insl
jl
inc
bound
mov
sbb
inc
mov
sarl
add
icebp
addr16
push
add
and
aaa
inc
xor
push
jns
lret
fiadds
jnp
cmpsb
loopne
adc
outsl
add
es
lods
cwtl
es
sbbl
mov
jo
mov
ret
pop
push
in
out
loope
les
cltd
stos
out
pop
mov
sbb
mov
aaa
push
xchg
dec
xchg
jle
test
sub
int3
sub
dec
jo
jne
inc
inc
mov
fcmovu
movsl
pop
xor
int3
into
shll
daa
adc
inc
lret
ror
scas
dec
mov
je
push
dec
sbb
cli
pop
fs
shlb
les
mov
cmp
in
adc
mov
xchg
adc
jbe
pop
ja
jne
inc
bound
cld
jno
sub
cmp
outsl
dec
mov
fistps
pop
cs
push
movsl
orb
sub
bound
testl
lods
ljmp
add
dec
stos
adc
sub
push
cld
push
or
jl
por
fwait
adc
aad
lcall
andb
cmc
jg
sbb
scas
pop
jle
xchg
shll
rcrl
mov
movsl
mov
lds
push
mov
test
mulb
aad
inc
movzbl
dec
push
push
scas
dec
pushf
sbb
pop
mov
loope
das
out
dec
ret
xor
mov
push
push
push
add
add
jnp
stos
dec
mov
les
mov
ja
frstor
aaa
adc
ret
sbb
test
mov
stos
dec
cmpsl
push
cmp
push
jb
rcll
jnp
shr
pusha
add
xlat
leave
lcall
jnp
mov
inc
xor
xorb
icebp
mov
fwait
cmp
mov
fsubrp
es
lret
jle
mov
js
fadds
add
cltd
push
mov
jge
mov
inc
or
incl
bound
mov
pop
push
out
pop
dec
lret
cli
mov
mov
nop
push
mov
mov
mov
xor
gs
inc
inc
jb
dec
or
jo
xchg
je
test
enter
sti
movsl
lretw
jecxz
xchg
adc
rcl
out
xchg
rclb
cmp
cltd
into
das
loope
inc
in
in
mov
test
xchg
fwait
clc
sbb
lods
pop
test
xchg
insb
scas
filds
subb
mov
mov
dec
popf
jge
push
das
mov
xor
cmpsl
outsb
lea
dec
push
loopne
mov
lock
mov
sub
push
mov
lret
push
movsl
movsb
imul
xchg
outsb
ficompl
imulb
repz
lahf
sbb
dec
mov
test
push
lret
adc
mov
lret
sbb
scas
push
sbb
shrb
and
xchg
push
cmp
das
mov
addl
jecxz
add
add
sti
ljmp
mov
jno
cmp
jmp
mov
fnsave
imul
ret
mov
ret
and
inc
jns
outsb
enter
nop
addb
xlat
pop
fwait
pop
xor
mov
or
cmp
jne
test
sub
daa
dec
add
popa
mov
mov
mov
dec
es
inc
popa
movsb
test
popa
inc
pop
push
and
movsl
ds
call
inc
push
stc
ss
mov
ret
mov
cli
outsl
cs
stc
mov
scas
cltd
in
adc
pushf
mov
test
cwtl
sbb
adcb
fsubp
shrl
cmc
icebp
fsubl
cmp
sarl
cmpsl
icebp
shrl
sbb
mov
xor
cwtl
mov
pop
add
cmp
int3
lahf
popf
jg
mov
addb
pusha
ret
invd
rolb
test
push
test
faddl
dec
jge
sbb
sub
mov
push
mov
sarl
ret
mov
cli
sub
bound
cs
jp
lods
xchg
or
dec
js
adc
pop
add
insl
mov
ficoms
orl
jmp
fildl
or
add
mov
jo
push
iret
fs
shlb
repnz
lods
nop
outsb
and
in
dec
fisttpll
and
into
daa
imul
leave
shrl
ret
pop
cltd
adc
adc
mov
jnp
stc
mov
pop
repnz
pushl
or
daa
push
inc
fisubl
scas
std
andb
push
cmpsl
pop
in
sub
ds
jno
inc
ret
jns
mov
pop
ret
jp
incb
bound
push
lret
dec
rep
stc
call
out
mov
push
jle
lahf
push
ret
in
sbb
jo
push
pusha
insb
mov
mov
sub
push
inc
enter
mov
jbe
loopne
sbbl
hlt
mov
mov
pop
mov
jp
inc
test
mov
or
jg
lahf
mov
cmpsl
inc
push
jns
ret
cltd
aas
push
pusha
mov
clc
ret
enter
push
fwait
mov
daa
xchg
add
push
repnz
loope
ret
outsl
pop
out
in
add
pop
cltd
mov
mov
cmp
pop
loopne,pn
mov
ret
sahf
je
sub
ficomps
add
jb
xor
shrl
sbb
daa
inc
adc
push
or
sub
mov
xchg
lea
or
xor
sbb
dec
test
push
imul
je
and
xor
fmull
push
loopne
pusha
cmp
mov
pop
les
outsb
inc
faddl
sub
outsb
or
cld
insl
shlb
mov
subb
rorl
out
pushf
pop
movsl
lahf
mov
xor
mov
mov
or
pop
int3
sbb
test
and
and
inc
xor
pop
mov
gs
jb
dec
xor
insl
pop
mov
mov
cltd
pop
cmpsb
sarl
sub
sbb
fwait
sub
icebp
add
ffree
push
ljmp
ss
dec
cs
dec
outsb
pop
mov
repnz
add
xor
in
push
clc
mov
mov
cwtl
or
ljmp
es
xor
bound
into
test
xchg
add
loopne
leave
xchg
sar
pop
icebp
imul
movsl
imul
jo
popf
ss
add
int3
data16
scas
push
or
dec
jle
in
cmp
push
xor
mov
xchg
pop
jecxz
mov
lock
push
jp
addr16
sbb
dec
mov
test
test
div
inc
and
cmc
test
mov
fs
jnp
stos
inc
and
mov
dec
mov
mov
dec
sbb
test
jno
incb
aas
sbb
out
rcrb
les
xorl
lret
sahf
jmp
rcr
lods
mov
cmp
imul
out
xor
stos
lret
xchg
sub
test
fidivs
cld
js
inc
or
mov
pop
mov
sets
mov
jp
pop
pop
mov
xor
adc
xorl
add
lcall
inc
sbb
sahf
fmull
fmull
je
fstpl
mov
dec
subb
xor
orl
lret
pop
cmp
hlt
stos
aas
push
add
popa
jne
test
mov
scas
icebp
push
mov
add
das
mov
or
adc
jge
cwtl
stos
in
inc
movsl
push
cwtl
mov
or
hlt
or
hlt
test
test
scas
pop
xor
std
lock
mov
jns
gs
push
movsl
fwait
into
add
mov
pop
adc
or
clc
stos
mov
dec
xorl
fldt
sbbl
sbb
ret
sysret
xchg
nop
ja
mov
fistl
call
pop
fidivs
outsb
mov
xchg
sub
js
or
clc
faddl
push
add
cmp
inc
test
mov
incb
inc
jbe
into
fisubrl
cld
out
push
mov
out
inc
sbb
cmp
inc
data16
sub
shl
sbb
xor
arpl
adc
mov
mov
ds
loopne
cmp
or
sti
dec
lcall
insl
fisubl
xor
sbb
dec
add
adc
adc
movsb
mov
xlat
cmp
outsl
xchg
mov
xchg
mov
lahf
adc
xchg
and
into
ss
sbb
pusha
pop
mov
stos
inc
lcall
jbe
daa
mov
mov
fs
test
lods
mov
dec
ret
jbe
clc
cmp
dec
dec
into
or
xor
fadd
shr
jno
lea
out
cmp
lret
sub
xchg
inc
ds
push
popa
and
or
mov
iret
test
mov
fimull
jnp
test
sbb
adc
mov
jge
andb
inc
mov
push
icebp
std
mov
jae
fldt
adc
cmp
sub
jns
scas
ds
dec
xchg
test
dec
inc
gs
push
pop
xchg
subl
xor
fsubl
xchg
add
mov
xchg
pop
orl
rcrb
or
fs
es
test
imulb
xor
rcl
aas
movsl
rorb
dec
js
fneni(8087
in
cwtl
or
stos
and
lahf
mov
outsb
fcmovnu
jp
xor
xor
xchg
scas
lds
pop
dec
shr
bound
or
mov
lcall
lea
jg
pop
mov
mov
inc
lea
test
sub
mov
cltd
popf
jb,pt
xor
int3
mov
jecxz
shll
nop
outsl
mov
pop
pop
inc
shl
ss
movsl
push
std
insl
mov
mov
jb
push
aas
dec
dec
scas
fistpll
add
sbbl
xor
leave
pop
push
cwtl
sub
ss
and
pop
jbe
loop
pop
sub
cmp
pop
data16
das
lea
test
ficoms
inc
inc
xchg
fdivl
mov
adc
adc
cld
pop
lret
in
es
mov
inc
test
pop
pop
add
jge
out
pop
adc
pop
std
mov
inc
outsl
push
push
iret
mov
or
in
insl
mov
out
dec
mov
xchg
pop
lods
fdivrs
sub
clc
test
cli
mov
inc
loope
bound
into
push
add
jle
mov
insl
xchg
jne
sub
fnstsw
int
or
adc
sti
lods
out
mov
js
push
sbb
test
and
pop
jecxz
loopne
mov
ljmp
xchg
stos
inc
cmpsb
rolb
outsl
cmc
mov
rcr
movl
gs
or
jp
push
adc
xchg
lods
iret
xor
and
adc
clc
or
fcomip
ret
cmpsl
ds
into
imul
inc
pop
and
add
test
ret
pop
leave
pushf
lahf
jge
ret
xor
pop
aad
jns
stos
rcll
or
push
ds
inc
cmpsb
rorb
call
adc
outsl
mov
mov
cmovg
cmp
aad
jne
mov
xlat
je
shrl
test
xor
adc
les
pop
inc
pop
mov
push
in
out
add
cld
push
dec
fld
add
cmpb
mov
mov
cmp
xorb
jb
sub
inc
push
sub
daa
ficoml
xchg
xchg
mov
nop
push
dec
popf
cmp
pop
cmp
pop
dec
sbb
mov
loopne
jp
pop
sub
jo
dec
clc
cmpsb
cli
mov
sti
mov
pop
addb
pusha
call
jmp
popf
mov
jl
pop
xchg
in
lods
xchg
mov
push
pop
inc
in
daa
dec
sarb
mov
push
in
push
mov
ja
cld
add
shlb
dec
xor
adc
ss
sbb
dec
andb
mul
jo
aas
push
inc
inc
inc
je
movb
shrl
pop
mov
add
jp
cwtl
dec
sub
push
mov
inc
ds
or
repnz
movsl
dec
or
iret
aad
shlb
jae
mov
xlat
mov
jo
aaa
shrl
out
cmp
in
cmpsb
or
fwait
pop
mov
into
mov
aam
jb
jmp
mov
add
filds
aam
rclb
cwtl
mov
test
mov
xlat
in
jb
outsb
xchg
xor
or
push
jae
dec
cmp
jp
jmp
or
mov
jns
cmpsb
sbb
cmp
xor
lret
scas
loop
scas
jmp
mov
sti
dec
pop
pusha
ret
adc
sbb
mov
lcall
mov
test
add
pop
fmul
mov
push
mov
mov
push
or
mov
xchg
mov
scas
inc
mov
mov
pop
test
roll
inc
addl
pop
jns
or
jo
sbb
in
push
and
test
push
out
jb
mov
xor
inc
outsl
int
aas
mov
fs
mov
mov
movd
and
mov
shl
jecxz
dec
pop
nop
push
int3
pop
cltd
adc
les
cmp
aam
jns
jb
add
sbb
fdivrs
lods
fldl
dec
sub
test
mov
cmp
mov
movl
mov
xchg
mov
mov
add
add
jmp
pop
stos
adc
out
adc
in
mov
inc
cmp
out
mov
pop
orb
int
lea
repnz
jp
adc
dec
adc
ljmp
push
inc
out
outsl
es
dec
cli
pop
xchg
loop
out
aas
pop
jb
call
push
sub
les
mov
jg
jbe
push
in
sahf
sti
mov
mov
into
ljmp
xchg
jp
icebp
mov
xlat
outsb
lret
sti
push
or
mov
mov
in
xchg
ss
insl
sub
push
cmp
pop
push
mov
sbb
push
mov
sbb
mov
andl
int
loope
div
push
stos
cwtl
daa
ljmp
sbb
popf
xor
lret
cmp
insl
xchg
lds
enter
out
jo
xor
dec
inc
push
push
aas
or
inc
int3
ja
jl
nop
add
movsb
mov
popa
lods
and
hlt
ljmp
mov
je
mov
movsl
xchg
mov
leave
pop
clc
dec
inc
fisttpll
lods
pop
xchg
lods
in
shrb
adc
ret
mov
sub
cmp
test
jns
mov
test
outsl
add
pop
insb
mov
jb
jg
shlb
icebp
sbb
inc
dec
jbe
out
jecxz
mov
lret
add
imul
and
cltd
int
addl
mov
aam
icebp
dec
data16
mov
cmpsl
sub
mov
mov
arpl
mov
test
rolb
xor
push
movb
insb
pushf
jl
xchg
inc
adc
imul
shll
test
repnz
or
mov
icebp
and
mov
xlat
inc
mov
repnz
iret
test
mov
lcall
shrb
rcr
pop
push
jl
xchg
ret
iret
imul
jo
sahf
data16
cmp
rol
lret
xor
sbb
pop
scas
fstpl
mov
mov
cmp
xlat
inc
pushf
lds
or
mov
pop
cmp
mov
inc
lahf
movsl
sbb
add
out
mov
inc
orb
aad
test
dec
mov
cmp
mov
sub
sbb
mov
xchg
std
incb
cli
daa
mov
frstor
dec
mov
jl
jmp
call
mov
mov
insb
sbb
lret
pop
ret
js
gs
pop
fmuls
adcb
and
inc
adc
imul
mov
inc
pop
xor
in
rcrb
pop
hlt
out
inc
dec
fs
adc
imul
movsl
push
int3
paddw
insl
in
lock
jp
outsl
sub
cmp
fcmovne
dec
mov
test
push
movsb
leave
stos
mov
scas
out
sti
hlt
xor
xchg
inc
dec
mov
sub
movsl
ss
pop
stos
mov
xor
shrl
or
jno
push
pop
xchg
shl
ja
cmp
pusha
mov
mov
push
xor
push
lods
gs
fsubs
repnz
and
add
cs
sub
sub
xchg
jbe
std
test
sbb
cmp
ja
popa
loopne
sbb
and
dec
xor
rcll
inc
sti
fldl
adcb
jnp
pop
mov
xor
test
movsl
sbb
add
and
dec
popa
rcl
xchg
out
pop
add
fmull
rclb
inc
dec
cmpsb
jnp
push
mov
cli
test
outsl
test
movsl
lods
popa
fs
cmp
sbb
inc
cmp
popa
sub
into
add
xchg
aad
movsl
leave
rcrl
mov
pop
in
lods
inc
out
imul
cli
movsl
pop
xchg
add
adc
sub
fs
mov
dec
js
pushf
pop
mov
sub
out
sbb
iret
mov
into
subl
cmp
jnp
mov
sbbl
and
lods
and
mov
bound
mov
push
pop
arpl
sub
pushf
lods
mov
xor
js
in
rorl
fisttpll
mov
jmp
mov
shll
push
enter
movsl
das
dec
push
sub
sbb
jne
hlt
sbb
mov
cmp
xchg
subl
mov
arpl
mov
nop
rolb
fstp
imul
fldlg2
and
sub
movsl
pop
mov
hlt
mov
pop
cli
push
add
mov
adc
scas
sbbb
dec
pop
lea
jb
mov
out
loopne
cmpsl
jle
aas
sbb
dec
sbb
insl
and
js
or
wrmsr
shll
cmp
pop
push
insb
call
shrb
adc
push
hlt
in
cmp
jo
pop
clc
inc
jl
sub
inc
pusha
int3
sub
test
leave
in
pop
cs
cmpsl
pop
stos
fidivl
mov
jle
lret
and
ror
push
add
xchg
pop
test
gs
add
adc
iret
incb
cmp
outsb
xor
pushf
push
shrl
ss
cmp
es
mov
cmpb
mov
roll
js
cmp
jns
push
xor
jne
inc
mov
pusha
jnp
xchg
inc
aam
cs
adc
loopne
or
xor
aam
jne
fldl
jbe
cmp
adc
xchg
jne
ret
cmc
mov
mov
lret
inc
test
repz
fsubrl
insl
xchg
stc
lahf
jo
fstpl
in
nop
mov
ja
test
mov
sbb
mov
dec
mov
push
inc
cmp
outsb
lret
pop
cltd
dec
movsl
fsubl
jmp
mov
inc
pop
add
stc
lcall
xchg
cmp
sub
jge
getsec
cmpsl
and
flds
adc
addl
jmp
sbb
dec
inc
test
jo
fdivrl
popf
add
mov
repz
push
ds
or
add
cltd
mov
fnsave
cmp
jge
sub
stos
mov
jle
or
into
movsl
cld
jmp
push
jo
scas
adc
adc
mov
cli
cmc
inc
popf
loope
das
inc
mov
mov
jmp
leave
repnz
call
aam
arpl
adc
pusha
ss
rcr
das
mov
js
adc
je
mov
push
jnp
cli
adc
jno
xlat
push
pop
cs
jo
or
cmpsl
push
pop
bound
adc
inc
mov
dec
cmp
popa
test
push
pop
add
das
sub
xchg
daa
ds
insl
pop
cmpsb
cmp
clc
adc
mov
push
push
fldenv
mov
pop
xchg
dec
and
and
dec
stc
jecxz
mov
dec
jnp
lcall
pop
idivl
rcl
subl
fsts
xorb
mov
inc
inc
inc
fidivl
cmpsb
or
aaa
ffreep
popf
adc
bound
std
or
add
jbe
loopne
and
xchg
xchg
adc
sub
imul
std
inc
mov
jns
mov
mov
mov
out
dec
lret
scas
jge
xchg
fiaddl
push
jecxz
xchg
call
daa
iret
jmp
dec
mov
jp
pop
pop
jnp
push
lcall
push
pop
add
mov
aam
inc
xlat
es
or
xor
shlb
adc
adc
fwait
push
xchg
xchg
sub
jb
mov
adc
dec
inc
sub
cmpsb
lcall
cmp
pushf
int3
outsb
add
mulb
popf
cwtl
adc
test
inc
pop
andl
dec
ja
cld
test
jne
daa
jmp
push
xor
movsl
push
dec
mov
rcr
or
sbb
pushf
lcall
sbb
cmp
xor
mov
movsl
shrl
xor
out
sub
sbb
adc
in
mov
lcall
mov
aas
mov
sbbl
int
ja
pushf
fdivs
es
sub
psllq
outsl
test
jb,pt
mov
inc
in
adcl
bnd
or
xchg
nop
mov
std
sub
cli
gs
dec
cmpsb
sub
inc
fstpl
add
and
push
inc
push
mov
add
xchg
jb
cmp
fiaddl
and
fs
fnstsw
test
mov
cmp
inc
mov
rorb
xor
xchg
jno
shll
rol
shlb
xorb
push
loop
xchg
sti
mov
mov
popf
mov
cmc
into
negl
movsl
aam
daa
sub
inc
popa
xor
dec
fsubs
out
test
pop
cmc
mov
sub
sbb
jnp
cmpsb
dec
popa
mov
ret
shll
sarl
adc
mov
dec
sti
iret
sub
cmp
ljmp
sbb
fnsave
scas
lret
mov
adc
adc
sbb
jae
pop
shlb
rcl
cmpsl
stos
jecxz
arpl
int3
dec
dec
push
cltd
insb
push
ret
inc
xchg
inc
test
cmp
mov
movb
arpl
adc
ja
mov
or
or
test
scas
push
or
xchg
xlat
movsl
shll
stos
and
popa
push
mov
adc
lahf
mov
mov
bound
jb
mov
sub
jnp
jbe
mov
sub
ret
js
add
xor
lock
jbe
sbb
jp
add
gs
xor
or
daa
stos
pop
sub
ffree
cli
sub
xorb
mov
or
in
mov
mov
inc
dec
lret
jle
mov
ljmp
lods
inc
xor
inc
or
push
cmp
sub
call
add
insl
push
push
mov
test
pop
mov
sti
mov
sub
lret
mov
cmp
and
imul
sub
test
cmp
push
imul
notb
into
call
ror
bound
fildl
push
mov
pop
icebp
lods
mov
adc
scas
daa
lea
and
in
ret
movsl
test
cwtl
mov
cwtl
imul
sub
les
fwait
aas
jno
pushl
daa
adc
mov
push
pop
insb
in
fnstsw
sbb
push
pop
mov
das
or
cmp
fidivrl
jo
sbb
inc
sarl
and
rol
jg
out
jb
mov
int
cmpsb
cmp
push
shlb
mov
jp
add
scas
aas
loopne
out
sbb
lcall
cmp
dec
mov
pop
push
fwait
mulb
pushf
gs
mov
into
mov
jl
bound
mov
es
std
inc
fstpl
and
inc
in
mov
jns
xchg
or
nop
test
and
sbb
std
into
cltd
xor
xchg
push
mov
sub
stos
xor
mov
mov
out
sbb
rcl
das
adcb
popa
out
test
nop
xchg
loopne
lret
jmp
invd
jnp
push
stos
into
out
fwait
movsl
push
jne
ljmp
and
out
jg
lret
mov
jne
mov
aas
mov
int
add
subb
je
iret
adc
cmpsb
aaa
icebp
mov
push
pop
jo
fildl
inc
jno
lcall
fsubrl
mov
repnz
ffree
dec
adc
push
adc
mov
mov
inc
js
push
xor
out
ret
pop
outsl
pop
jmp
pushf
or
jo
fsubrl
xor
jmp
pusha
add
dec
aam
scas
rsm
cmpsb
or
jle
clc
in
xchg
iret
mov
cmpsl
fcoms
push
lcallw
pop
out
clc
sbb
ljmp
mov
movsl
decl
adc
icebp
mov
outsl
int3
xchg
rol
pop
sub
lock
mov
adc
mov
stos
in
in
mov
sbb
adc
push
cmp
sbb
pop
inc
fmul
imul
pop
clc
mov
lods
xchg
xor
test
and
jb
add
into
shlb
gs
sbb
cwtl
mov
jmp
cmc
rorl
roll
fistl
sbb
dec
sbb
in
sti
adc
fbstp
or
cmp
jle
popa
idiv
mov
aad
movsl
cmp
shll
addb
test
mov
dec
push
jns
xlat
mov
cmp
mov
insb
push
dec
mov
cmp
xor
xchg
mov
daa
cmp
sub
test
jg
push
daa
fstpt
xchg
insb
mov
or
incb
fwait
xchg
pop
rcr
sbb
mov
adc
sahf
lods
lock
rolb
sub
jns
cmpsl
cmp
lock
ljmp
into
pop
jae
fs
mov
or
cmc
aas
lea
jno
clc
lahf
int3
cmp
lods
cmpb
cld
mov
lcall
out
sub
daa
cmp
pop
call
movl
xor
cmpsl
xor
scas
pop
ret
gs
imul
insl
pop
jle
sbb
mov
mov
addb
xor
inc
out
mov
pop
std
xor
add
popa
mov
jbe
cli
pop
mov
cmp
int3
popa
push
and
add
cmpsb
xorl
inc
sub
jnp
dec
shll
out
jne
cmp
inc
popa
sbb
jo
xlat
ss
ror
daa
cmp
les
daa
loope
insb
pushf
out
xchg
inc
clc
or
ja
bound
imul
loop
jecxz
mov
repnz
filds
std
push
xor
sbb
inc
pop
mov
inc
cmpsl
leave
stos
fs
inc
mov
or
xor
cmpsl
pop
leave
push
mov
test
add
movsl
push
cmp
roll
or
pop
add
insb
cld
xchg
loopne
mov
cmpl
push
ret
cld
test
pop
fnsave
lds
pop
pushf
mov
shlb
dec
cmp
test
adc
insb
mov
inc
or
push
in
test
js
xchg
pop
jnp
data16
out
xchg
xor
clc
shll
or
adc
xchg
in
hlt
pop
inc
out
xchg
loopne
sub
loop
dec
sub
ss
inc
xchg
scas
cmc
stc
movsl
ss
popa
add
push
out
clc
ret
adc
scas
mov
cmp
mov
mov
inc
test
test
mov
pop
sbb
sarl
sub
xor
inc
mov
push
arpl
dec
scas
ljmp
and
adc
in
pushf
fisubrs
pop
jns
sub
ljmp
arpl
insl
pop
jmp
jp
push
div
xor
xor
divb
faddl
mov
mov
aas
add
lea
pusha
test
jns
and
and
push
and
ret
js
sub
sub
adcb
jo
popa
lods
ds
ja
xchg
dec
pusha
rcrl
lret
mov
push
adc
scas
arpl
ja
adc
fsubl
daa
sbb
push
in
mov
mov
cmp
movsb
and
jle
rcr
mov
adc
loop
push
mov
mov
push
test
adc
shll
sti
outsb
and
or
dec
loope
testb
es
iret
mov
iret
mov
loopne
cld
lea
push
int
lea
popf
arpl
int
cmp
movsl
adc
mov
lods
sub
dec
sbb
mov
and
xchg
push
xchg
mov
test
pop
out
bound
int3
insb
mov
in
adc
pop
jmp
pop
test
push
cmp
mov
and
int
fsub
jg
mov
mov
rorl
scas
push
into
lods
or
pop
test
xor
subb
gs
outsb
lea
xchg
fidivs
pop
test
cmpb
cmc
stos
sbb
mov
fidivrl
test
or
jo
pop
fsubs
loope
popa
mov
xor
push
xor
ret
sbb
cmp
ljmp
insb
xchg
lock
stos
inc
rcll
sarl
push
cwtl
in
mov
inc
jo
lods
add
mov
or
xchg
or
xchg
add
aas
push
sbb
pop
inc
jl
and
pop
sub
nop
daa
cs
inc
dec
xlat
inc
movsl
outsl
adc
sbb
push
je
popa
mov
push
jno
cmp
out
add
rol
rorb
inc
mov
adc
mov
xor
jecxz
xchg
add
ljmp
lcall
adc
pop
and
add
sub
add
outsl
fwait
push
iret
movsb
gs
repnz
push
sub
pushf
mov
pop
or
popa
and
cmp
pop
mov
pushf
cmp
add
ds
mov
daa
xor
sbb
shrb
or
js
mov
mov
shl
pop
mov
xlat
addl
cmp
and
test
adc
fidivrl
mov
lret
test
cwtd
lea
test
mov
inc
popf
adc
ss
scas
loope
out
lock
pop
jl
in
push
sahf
xchg
iret
aas
adc
mov
loopne
mov
orl
stos
ja
ficompl
mov
mov
and
movsb
jp
nop
sbb
xor
fldcw
mov
inc
cmp
insb
pop
inc
cli
les
movsl
out
test
adcl
inc
mov
fwait
lret
push
test
jmp
int
into
ret
loopne
shlb
imul
mov
jnp
pop
test
xchg
fistl
lds
loope
push
data16
in
rcrb
pop
loop
in
adc
stos
rol
inc
out
scas
push
lret
lods
test
sub
popl
mov
xor
shrb
push
enter
divb
mov
and
sti
sub
dec
xlat
fimuls
mov
rcll
or
sub
call
xchg
push
push
out
movhlps
fs
adc
add
rorb
dec
imul
mov
jge
sub
sub
push
mov
ja
push
out
js
sbb
test
push
push
push
loopne
addr16
bound
mov
jecxz
out
mov
fwait
int3
daa
inc
pop
pop
out
cwtl
aas
push
lea
jae
add
mov
push
fistps
cs
push
inc
lret
in
pop
dec
adcb
ja
addr16
test
inc
dec
movsl
popa
cmp
dec
lcall
fsts
pop
aas
jnp
jbe
in
xor
stos
adc
jae
and
test
mov
adc
loop,pn
test
roll
xchg
xor
jbe
pop
jno
xor
inc
sbb
adcb
enter
jp
sbb
and
shr
std
pop
mov
pop
pusha
mov
out
jne
fisubrl
es
dec
inc
jp
xor
outsl
bound
je
inc
fsubl
mov
inc
cmpsl
cmp
cli
push
xchg
pop
mov
xor
cmp
cli
pusha
adc
xor
dec
imul
test
icebp
faddl
fwait
mov
cmpsb
jno
xor
outsb
and
test
mov
pop
jo
mov
sbb
add
xor
fists
mov
cmp
iret
shlb
and
test
mov
je
mulw
fcmovne
mov
mov
cld
inc
dec
jge
data16
movsb
xchg
pusha
fisubs
or
js
gs
fiaddl
or
xchg
fsubrl
dec
inc
adc
pop
je
dec
inc
xchg
mov
jb
adc
and
lret
mov
cmp
data16
jmp
xchg
scas
add
and
movsl
xchg
iret
lcall
cmpsl
out
xchg
loope
adc
icebp
inc
inc
insb
clc
stos
ljmp
repz
push
cwtl
in
mov
shlb
mov
icebp
xlat
nop
adcb
lcall
jnp
mov
in
mov
andl
push
xchg
or
or
mov
sbb
jo
xor
stc
addl
cmp
mov
push
in
cmp
outsb
mov
mov
jle
xchg
mov
fsub
ret
push
add
lds
rcr
cmp
mov
mov
sti
fbld
mov
aas
bound
test
xor
push
insl
enter
mov
ficomps
in
pop
jbe
movsb
ljmp
jnp
jle
stos
cmp
rorb
outsl
jg
mul
jbe
cmp
mov
mov
push
popa
pop
mov
imul
mov
inc
fsubrs
in
out
mov
sbbb
pop
xchg
mov
and
jl
pop
fdivrs
sbb
mov
js
xchg
in
jae
fldcw
cmpsb
mov
imul
jnp
adc
fcmovne
mov
into
gs
lahf
daa
testb
bound
inc
into
sbbb
mov
sbbb
mov
and
add
cmp
push
dec
and
cmp
push
mov
test
push
out
fcom
sbb
dec
cmp
mov
nop
movsl
inc
push
ds
les
into
push
pop
pop
sti
xor
dec
cmp
daa
insb
testb
loopne
leave
fdivl
mov
mov
mov
test
adc
xor
mov
xchg
pop
out
sbb
and
int3
scas
movsb
insl
test
push
mov
cs
cmp
cmp
xchg
sub
cmovle
popa
addl
mov
movsl
mov
push
xor
and
mov
les
adcl
mov
in
xor
mov
idiv
pop
add
stc
jne
add
xchg
mov
addr16
rclb
sahf
push
es
in
jbe
int
fdivr
cmp
push
fsubrs
sbb
push
enter
mov
adc
pop
add
and
adc
aas
iret
and
lcall
xor
mov
stos
sbb
inc
jl
mov
mov
xor
xchg
in
inc
xor
aam
fwait
rcll
push
jne
addl
dec
dec
mov
ret
nop
icebp
outsl
push
test
hlt
push
popa
pop
pop
mov
mov
xor
lcall
xor
test
loop
rol
mov
lahf
repnz
pop
fwait
and
mov
into
cmp
inc
fs
jp
js
mov
pop
inc
inc
mov
sub
add
mov
mov
push
sbb
push
push
repnz
nop
cmp
push
into
xchg
out
xor
js
jge
int
ret
jmp
jo
shlb
movsb
mov
jmp
pushf
push
adc
xchg
cmp
jmp
inc
sbb
adcb
adc
or
cmp
mov
or
mov
adc
sbb
out
mov
xor
xchg
dec
decl
push
lods
push
sbb
fisttpll
out
mov
out
jbe
icebp
mulb
adc
dec
sbb
sub
mov
pop
mov
jp
cmpxchg
pop
pop
in
dec
daa
cmp
cvtps2pi
adc
or
jbe
inc
insb
ficoml
pop
xchg
and
out
cltd
movsb
mov
mov
push
inc
xchg
nop
sbb
add
adc
cmpsb
dec
push
mov
xchg
in
push
movsl
and
movsl
mov
outsb
cmp
dec
int3
inc
or
test
add
jle
inc
push
addl
mov
xchg
push
lea
inc
mov
cmp
push
xor
sbb
sahf
xchg
cmp
or
icebp
jae
xchg
mov
pop
icebp
addr16
enter
jno
mov
mov
pop
push
stc
pushf
xchg
or
arpl
movups
mov
je
jns
xchg
test
or
jl
mov
mov
mov
push
cltd
mov
pop
mov
adc
stos
cmp
notb
mov
stos
jno
in
sub
mov
inc
mov
test
sbb
inc
cmp
ja
push
xlat
ja
ds
in
aaa
cli
imul
fucomp
xorb
out
mov
mov
loopne
or
sub
icebp
pop
imul
push
jl
mov
sbb
dec
jge
inc
sub
or
adc
lcall
js
out
subb
lds
mov
shll
xchg
call
pop
ret
fsin
push
add
orl
divb
inc
imul
popf
adc
or
push
dec
mov
cvtdq2ps
fdivl
add
cmp
add
into
adc
pop
sbb
adc
adc
out
popf
mov
movsb
mov
lret
test
push
xorl
push
data16
pop
cmovge
jnp
ret
cli
movsl
push
mov
repz
inc
loopne
cmp
in
mov
enter
jge
cs
int
test
lret
push
add
push
shll
out
jecxz
dec
sub
sbb
fwait
pushf
jl
jl
dec
mov
mov
xlat
in
out
dec
xor
pmaddwd
jne
mov
ret
or
in
xor
iret
orb
outsl
daa
lret
inc
sub
movsl
push
pop
pusha
bound
lret
jns
lods
lcall
into
shlb
and
push
sub
jp
movsl
out
iret
cmpsl
cld
mov
lret
cmp
test
aam
push
imul
push
mov
aad
and
pop
inc
pop
mov
mov
pusha
jb
daa
subb
shlb
xor
mov
je
cmp
push
mov
outsl
mov
shll
fnstsw
sub
inc
sbb
sahf
mov
push
xchg
loopne
testb
pusha
arpl
mov
xchg
cmp
cmp
pusha
xchg
adc
lahf
mov
mov
xchg
mov
xchg
dec
icebp
int3
cmpsb
repnz
sub
cli
ret
add
sbb
dec
mov
nop
idivb
sbb
je
cli
cmp
aas
xchg
push
lret
mov
sbb
popa
lods
jle
insb
sbb
popf
sbb
cmpsl
xchg
dec
mov
push
push
repnz
mov
popa
dec
movsl
roll
clc
dec
cli
jl
sub
ret
nop
dec
test
in
sbbl
sbb
mov
cmpsl
pop
xchg
sbb
cld
loopne
jmp
scas
lods
sub
pop
shll
fdivl
in
adc
frstor
fstpt
inc
mov
in
std
mov
sbb
xor
pop
jle
inc
and
movsl
push
data16
lea
dec
les
inc
in
jp
pop
sbb
mov
mov
cmp
je
and
lret
ja
adc
sbb
js
lds
jnp
xchg
test
imul
cmp
add
addl
xchg
mov
push
push
mov
push
rolb
cmp
iret
push
xor
bound
in
or
popf
push
imul
mov
lock
cmp
cmp
pop
dec
xchg
repz
xor
out
data16
sahf
xchg
cmp
insl
test
fs
xor
lret
test
insl
jle
sarb
loop
ret
xchg
jno
add
xchg
cmp
cld
cmp
push
test
sub
lret
add
test
std
push
push
sub
cs
insl
insb
pop
push
mov
adc
add
sub
push
pop
fs
cmp
arpl
or
push
mov
mov
xchg
popf
dec
fdivrs
jp
adc
pop
sbb
js
mov
add
sarb
out
lds
ss
sbb
hlt
pop
insl
mov
mov
fsubrs
and
mov
lcall
xor
dec
push
ja
je
xor
jp
pop
or
outsb
mov
cmp
jge
mov
lret
aam
sahf
push
test
inc
repnz
cwtl
add
cmp
mov
mov
xchg
ret
in
xor
sub
add
into
addr16
xorl
xchg
sbb
pusha
push
leave
test
push
cmp
fisttpl
add
mov
jae
ret
xor
push
iret
int
push
or
shll
rcrb
out
das
fdivrs
dec
mov
mov
cmp
adc
gs
aaa
insl
adc
jmp
imul
inc
inc
out
pop
xor
aam
and
aad
cmpsb
mov
push
or
cli
dec
mov
mov
ret
sbb
outsl
and
mov
cwtl
aam
jnp
test
arpl
std
leave
inc
mov
push
push
popf
and
pushf
inc
add
dec
ds
or
in
inc
jnp
fsubl
iret
lea
inc
fisttpll
cltd
and
jg
jp
add
js
inc
dec
push
movsl
popa
cmp
mov
test
cld
test
jecxz
ret
push
bound
mov
xor
xor
cmp
ror
mov
into
push
scas
jne
ret
mov
adc
pusha
test
jo
and
sbb
mov
add
mov
inc
mov
int
test
cmp
sahf
cmp
incb
fs
xorb
scas
cmp
movsl
mov
mov
ss
or
adcl
pushf
fstps
adc
mov
aad
mov
xlat
lds
pop
sub
jns
jo
daa
cmp
inc
fcmovne
jle
mov
andb
je
adc
clc
pop
jb
dec
inc
mov
push
and
dec
cmp
repnz
bound
jl
pop
shlb
scas
repz
mov
ffreep
push
cmp
ja
inc
mov
add
mov
cld
jb,pt
xchg
sbb
and
rclb
jmp
loopne
or
sti
in
mov
mov
or
repz
or
hlt
add
mulb
mov
push
sub
and
mov
or
xor
jnp
dec
jns
xor
test
imul
test
inc
into
mov
dec
in
movsl
insb
mov
mov
xor
stos
mov
mov
and
movsl
mov
int
or
sub
mov
out
dec
push
mov
call
cwtl
push
mov
bound
jae
mov
jle
mov
movsl
add
lret
mov
jns
lret
adc
movsl
inc
outsb
lods
dec
inc
sbb
push
fs
dec
ret
out
test
push
enter
mov
arpl
insb
hlt
jns
les
test
inc
mov
sbbb
stos
and
mov
in
cmp
jmp
sbb
jns
gs
and
cmpsl
neg
mov
out
repz
mov
sahf
push
push
es
mov
xchg
cmp
xchg
mov
mov
inc
mov
xchg
pushf
icebp
lock
mov
jnp
bound
and
mov
or
or
sbb
add
or
xchg
mov
loopne
push
push
gs
adc
ret
shll
cmp
movsb
jle
dec
mov
movsl
jp
cli
pop
ds
mov
in
inc
push
sub
cltd
stos
lock
cmpsl
out
addb
inc
inc
add
xor
pop
scas
cmc
repz
jmp
and
jp
xchg
ljmp
mov
cmp
mov
clc
jge
or
mov
movsl
ret
cwtl
cmp
mov
mov
dec
cld
xchg
pop
out
push
hlt
xor
mov
popa
sahf
xlat
jo
cwtl
ret
mov
pusha
out
stos
add
sahf
mov
jge
in
or
shlb
pop
sbb
inc
das
sahf
rcll
cld
out
cmp
cmp
jo
add
sub
mov
or
or
xchg
mov
push
pop
test
pop
jns
mov
jnp
inc
push
inc
mov
lea
xor
lcall
pop
ficoml
gs
or
outsb
andps
xor
shlb
loopne
jecxz
jne
fs
mov
cli
xlat
inc
movsl
pushf
insb
test
jmp
push
jl
mov
inc
sarl
es
adc
call
mov
out
mov
xchg
cmpsb
jg
mov
push
out
inc
inc
xor
in
cli
dec
out
jns
sbb
sbb
mov
xor
loopne
dec
sahf
sub
mov
outsb
aam
sub
hlt
cmp
fcoms
in
mov
xor
pop
mov
adc
fidivs
xchg
or
sbb
test
repz
push
stos
adc
popa
mov
es
xchg
push
mov
mov
cltd
int3
xor
mov
adcl
out
mov
sbb
push
sti
int3
cmp
cli
and
mov
js
push
and
pop
scas
lods
jecxz
mov
cmp
nop
nop
adc
mov
xchg
inc
popf
adc
repz
movsl
or
ljmp
xor
shlb
mov
xchg
test
or
mov
mov
jl
add
mov
outsb
test
cmovp
dec
in
addr16
test
repz
inc
jno
int
mov
outsl
pop
and
xor
fsubr
stc
out
repz
jnp
mov
mov
movsl
dec
pop
test
push
inc
push
adc
ret
je
jno
xchg
fcmovu
push
mov
mov
lds
jecxz
xchg
mov
cmp
shrb
xor
insl
in
jbe
mov
or
pop
outsl
pop
jge
xor
repz
out
ljmp
pusha
xor
repz
cmp
rol
and
push
in
mov
add
inc
mov
fst
pop
mov
sub
dec
or
dec
insb
insl
fsubs
loopne
clc
iret
test
divb
addr16
add
xchg
faddl
jge
subb
scas
pop
fildl
test
ffreep
test
js
addl
inc
cmpb
addb
faddl
and
lds
lea
test
mov
rolb
cmp
sbb
adc
pop
cmc
repz
pop
es
xchg
fldenv
out
sub
sbb
dec
mov
sub
loopne
je
cmp
push
dec
push
fdivr
fcmove
imul
pusha
adc
lods
movsb
push
movsl
iret
push
cmp
loop
ds
loop
hlt
lods
add
cs
iret
inc
pop
daa
adc
sub
aas
ficoml
jle
lret
add
pop
sahf
push
movsl
mov
jb
mov
popa
cs
xor
pop
and
mov
inc
inc
rdpmc
xor
jle
mov
fdivrs
cmp
dec
lret
inc
mov
movsl
insl
fcoms
jo
pop
xchg
test
aas
mov
inc
repnz
push
dec
ja
xchg
push
loope
shll
out
popf
fs
mov
mov
mulb
aaa
repnz
cmpsb
insl
sbb
mov
rorl
add
movsb
sbb
jb
lret
cmp
les
orb
jne
mov
pop
xchg
pop
loope
adc
sti
addb
adc
out
fstpl
jo
cmp
insl
sbb
out
adc
imul
dec
mov
mov
cmp
std
and
leave
pop
test
push
cmpb
dec
enter
mov
leave
inc
mov
iret
mov
or
jge
pop
mov
inc
xchg
dec
push
cld
mov
jecxz
jecxz
in
mov
bound
cmp
lods
inc
inc
cmpsb
mov
mov
inc
hlt
mov
int3
mov
popf
cld
xor
push
icebp
les
dec
cli
mov
sbb
insb
pushf
fcoms
bound
rorb
scas
scas
ss
scas
mov
mov
mov
mov
ds
cmp
sbb
or
imul
dec
dec
sub
xchg
cmp
fsubrp
je
mov
fistpl
and
inc
sub
or
lcall
scas
cmp
fcoml
jae
push
mov
cmpsl
ds
lret
jbe
sub
repz
push
out
lcall
xor
cmp
stos
inc
fadds
pop
out
fs
mov
xor
sbb
rorb
rorl
add
aas
mov
outsl
sub
movsl
notb
scas
out
xor
nop
les
pop
xchg
jne
jmp
iret
test
sbb
jnp
pop
dec
mov
movsl
int
into
cltd
lcall
cmp
push
mov
out
jne
ljmp
mov
into
aad
lret
loopne
in
sbb
sbb
movsl
addr16
xor
jmp
je
lds
and
xchg
out
insb
lret
mov
imul
jae
pop
dec
ljmp
xor
shl
adc
loopne
adc
inc
sub
lods
nop
mov
sub
fdivrs
movsl
and
mov
xorb
rorb
mov
iret
and
mov
test
jns
stc
or
xchg
add
mov
adc
jmp
ja
jbe
ljmp
pop
orb
add
mov
mov
repz
cmp
ret
adc
cli
mov
sbb
xorl
sub
jbe
cmp
xchg
ret
in
pop
pop
jp
inc
cltd
adc
mov
sub
int3
cmp
pop
insl
or
pop
sbb
imul
sahf
test
fistl
scas
jbe
cmp
xor
cmpsb
cmpb
faddl
ss
pop
stos
lods
leave
lods
shlb
xlat
divb
jne
and
mov
pusha
inc
push
aaa
inc
mov
fistpl
shlb
mov
test
cmp
jnp
mov
add
bound
int3
gs
pop
hlt
dec
insl
testl
fnsave
out
stos
inc
movsl
fcompl
fs
or
ljmp
push
mov
xchg
push
repz
lret
push
out
dec
push
jg
jl
faddl
ret
mov
jno
pop
fidivrl
test
cltd
out
mov
mov
jle
addr16
inc
int
mov
aaa
and
push
hlt
fs
fnstsw
fwait
mov
test
fs
inc
sub
sbb
fcmove
adc
inc
addb
aam
movsl
jo
mov
in
fwait
mov
cmpxchg
mov
movsl
lcall
cmp
pop
out
fcomps
jnp
pop
xor
xor
std
stos
mov
punpcklwd
leave
push
rcr
lret
sub
into
xchg
aam
daa
pop
loopne
nop
dec
xor
xchg
sub
fucomp
lret
jb
mov
mov
das
addb
out
push
or
and
test
pop
or
movsl
stos
or
dec
push
mov
xlat
add
add
test
loope
cmp
aad
icebp
mov
xchg
std
out
fidivl
aaa
rcr
mov
pop
mov
pushf
dec
jbe
out
fstpt
mov
imul
mov
jle
adc
xor
adc
cmpb
lock
pop
sbb
adc
ss
add
add
int
pop
rorl
je
jmp
inc
inc
shlb
dec
sub
jb
hlt
cmp
mov
test
mov
sbb
repnz
out
sbb
stos
adc
or
jle
into
and
ljmp
jmp
xchg
das
cs
jo
push
xor
xchg
and
xlat
xor
jb
out
adc
sbb
cmp
push
cli
adc
xchg
fdivrl
movsb
rorb
and
inc
sub
xchg
in
sbb
push
lret
add
cwtl
loope
mov
pushf
xor
mov
jae
adcb
push
fdivr
push
lahf
repz
js
adc
das
movsl
cmp
iret
or
fwait
inc
pop
xchg
outsl
xor
sar
xor
pop
fisttpll
xlat
sub
inc
sti
test
repnz
sub
scas
mov
jno
jno
lods
sub
mov
sbb
pop
incl
stos
xchg
aaa
in
mov
push
adc
cwtl
mov
fldl
mov
dec
xchg
mov
cmp
movsl
inc
pop
cwtl
cmp
inc
push
lcall
mov
test
jo
sbb
gs
subl
mov
repnz
dec
dec
mov
push
sbb
sub
stos
dec
add
int3
lds
xchg
out
pop
or
scas
fs
jge
adc
fmuls
inc
rcrl
cmp
out
sbb
add
jp
js
xor
scas
inc
cltd
inc
pop
mov
push
pusha
aas
or
lods
jge
test
mov
int
rcll
xchg
je
orl
sti
inc
jmp
movsl
sub
or
push
sbb
dec
add
sahf
xlat
xor
push
popf
out
stos
ss
mov
mov
dec
xor
and
mov
adc
or
push
push
mov
cwtl
iret
cs
pop
stos
mov
pop
lcall
or
mov
cltd
xor
adc
jne
lahf
popa
test
fdivl
jno
aaa
or
gs
cmc
mov
inc
fucomi
add
andb
pop
popa
mov
outsl
add
jae
xchg
jne
ja
sti
mov
sub
test
mov
sbb
sarb
popf
roll
sti
or
movsl
in
pop
aaa
fdivrl
cltd
adc
jle
mov
sbb
imul
cmp
adc
es
shll
inc
imul
rolb
and
push
mov
or
je
and
shlb
mov
sbb
pop
pop
into
data16
mov
mov
or
je
adc
mov
or
adc
lods
and
cmp
cmpsb
mov
adcb
mov
push
pop
cmpsb
pop
ds
push
push
mov
push
stos
add
xchg
std
pop
mov
xchg
push
jb
pushf
pop
dec
jno
mov
adc
jne
mov
decb
lret
dec
cli
aas
jp
xchg
xlat
sub
ja
sub
mov
out
cs
inc
ret
lods
clc
sbb
inc
push
jl
int
mov
pop
leave
inc
pop
les
sti
lret
xlat
fwait
jmp
data16
xchg
cmp
cli
inc
add
adcl
xchg
jge
push
scas
xor
es
inc
dec
ret
mov
pop
popa
push
out
cltd
addr16
jo,pt
insl
sbb
adc
jo
mov
ljmp
js
rol
movsl
jle
insb
xlat
push
mov
fiaddl
cltd
xor
push
popa
imul
popa
adcb
pushf
dec
shlb
pop
pusha
cwtl
push
or
push
sub
jp
cmp
xor
or
mov
outsl
pop
jecxz
fsubr
test
adcb
loopne
mov
jecxz
sbb
js
clc
mov
repz
xchg
jbe
mov
out
adc
mov
enter
mov
andb
jp
jae
or
or
fisubs
movsl
loope
dec
ds
or
mov
sahf
movsl
out
jno
and
cmc
mov
ret
xor
enter
add
shrl
fnstenv
test
das
std
fsubs
jnp
int3
aad
xor
jecxz
in
lahf
sti
jnp
pop
clc
dec
mov
inc
mov
outsl
icebp
mov
arpl
cs
mov
lea
les
inc
or
xor
add
or
mov
inc
or
clc
pop
test
imul
jns
pushf
jecxz
cmp
movsl
mov
or
add
xor
popl
lods
leave
jno
lock
pop
push
xor
xorb
in
pop
hlt
sbb
int3
lds
mov
sbb
cmpsl
mov
sub
scas
add
repnz
rcrl
dec
adc
dec
pusha
jle
mov
push
and
mov
cmpsl
std
push
mov
sbb
pusha
push
lret
xor
adc
lods
test
cli
rclb
bound
adc
subl
dec
jo
sbb
hlt
aas
and
stos
loope
inc
fldl
popa
fstenv
insl
sti
cltd
xor
xchg
adc
xchg
lret
mov
push
mov
dec
lods
xor
mov
enter
cwtl
dec
mov
sub
add
out
mov
add
test
pop
movsl
xchg
stos
sub
clc
scas
sub
dec
out
mov
imul
dec
pop
push
shll
xor
sub
fadds
cmpsl
push
mov
mov
lea
outsl
xor
sbb
push
pop
xor
lock
aaa
pop
cmp
mov
cmp
mov
andl
push
push
gs
aaa
xchg
dec
or
xchg
in
xchg
cli
lea
pop
mov
adc
dec
push
push
insb
xchg
sub
cltd
scas
int3
je
or
xor
aam
out
pop
xchg
or
inc
fwait
and
pop
subb
lock
test
push
mov
in
incl
fsubp
outsb
sub
jp
mov
notl
es
mov
sbb
scas
mov
popa
fisubl
cmpsb
cwtl
xor
xor
adc
cmp
mov
insb
mov
sbb
pop
addr16
movzbl
movsb
imul
outsl
test
jne
jno
loopne
sbb
out
psllq
xchg
jmp
outsl
roll
mov
ds
adc
ja
pop
inc
dec
lock
jl
ret
fs
nop
rorl
ret
pop
and
push
bound
mov
jl
mov
jns
add
sbb
adc
dec
mov
test
lods
pop
fcoml
sub
push
jns
adc
insl
mov
dec
jge
mov
sub
mov
xchg
pop
mov
push
std
cmp
mov
xchg
xor
xor
shl
inc
sbb
sbb
add
cmp
mov
iret
testb
pushf
mov
scas
xchg
sbb
inc
adc
scas
loop
dec
inc
into
mov
cmp
lret
push
sub
cmp
adc
inc
inc
imul
out
push
test
add
mov
mov
rcr
fs
or
mov
mov
mov
sar
scas
pop
fsubrs
pop
test
int3
add
dec
push
mov
fwait
insl
adc
lods
idivl
insb
fsubs
pop
jle
pop
mov
jg
sub
push
mov
insl
mov
cmp
jecxz
fwait
in
sub
or
insl
cmp
and
iret
jne
push
popa
push
push
sbb
daa
out
pusha
mov
sti
int
adcb
ja
shll
jp
xor
addb
mov
shlb
xchg
aad
fimull
fwait
subl
mov
xchg
cmpsl
fimuls
mov
jns
push
xor
jmp
inc
or
iret
push
mov
ss
and
mov
fs
pop
sbb
add
mov
sbb
shl
roll
in
pop
in
mov
mov
fsubrp
fldcw
std
aaa
out
mov
push
mov
add
jo
push
in
icebp
and
lock
bound
and
mov
inc
mov
inc
jo
std
sar
pop
or
nop
sub
mov
add
stos
mov
pop
mov
xchg
insl
jle
jo
and
test
sti
mov
or
movb
dec
pusha
push
mov
movsl
sbb
repnz
pop
aas
test
idivb
inc
inc
in
fsubrl
loope
push
xor
iret
push
xchg
dec
scas
sub
rol
add
sub
mov
movsl
mov
mov
cli
sbb
cwtl
out
popa
mov
mul
mov
fstl
lar
out
mov
mov
mov
popa
mov
out
mov
mov
adc
mov
es
mov
leave
or
rcr
mov
scas
add
jl
xchg
inc
pop
aad
jno
sbb
pop
aam
inc
add
xor
or
or
mov
or
iret
imulb
int
lods
fcomps
faddl
cltd
push
add
or
ljmp
dec
push
rorl
adc
jecxz
imul
sub
cwtl
jns
stos
dec
pop
clc
add
jno
mov
lea
mov
mov
into
push
into
mov
sbb
cmp
ds
inc
int3
adc
inc
fcomps
xor
lea
jo
js
sub
jge
jb
outsb
out
sub
sub
and
fisttps
js
push
jmp
fstpt
pop
xchg
ss
pusha
movsl
in
outsb
inc
or
sbb
pop
insb
cmp
inc
xchg
pop
adcl
or
fnstcw
roll
sbb
adc
pusha
sub
mov
scas
enter
xor
mov
jg
jo
mov
and
mov
jae
iret
jo
add
jge
mov
icebp
mov
xchg
xchg
adc
and
clc
fadds
sbb
int3
push
aaa
loope
jge
pop
jmp
sub
cmpl
lret
out
adc
inc
xlat
xor
cltd
xchg
mov
cmp
das
iret
or
aaa
sbb
gs
adc
and
iret
adc
or
or
mov
int3
imul
cmp
sahf
mov
lret
sti
add
stc
xchg
gs
scas
sbbl
jl
jmp
push
negb
cld
pop
rorb
pop
loope
cld
mov
popa
sub
mov
or
xor
outsl
jmp
and
pop
mov
mov
mov
jecxz
and
out
inc
je
jb
movsl
mov
cld
test
js
cmp
and
jb
outsb
jne
sbb
aad
orl
mov
nop
jmp
js
sahf
scas
shlb
cmc
jg
addr16
mov
out
fsubl
mov
stos
jo
pop
cmpb
data16
inc
mov
dec
dec
out
or
xor
dec
mov
lock
inc
xor
rcll
mov
mov
pop
rclb
add
call
jmp
mov
cs
jne
mov
scas
lret
mov
inc
aad
push
mov
fnsave
arpl
jg
push
aas
add
jp
leave
jnp
xorb
mov
les
jne
rcrl
inc
sub
jns
push
push
filds
adc
jge
mov
pop
xchg
inc
mov
rolb
add
xor
pop
fisubrs
mov
aas
dec
mov
cmpsb
adc
inc
stc
mov
mov
cmp
inc
push
out
mov
mov
out
lock
outsb
imul
pop
xchg
cmp
adc
outsb
movsb
icebp
add
ret
lods
pop
push
mov
fiaddl
and
xor
jo
jns
incl
pop
test
insl
imul
flds
xchg
adc
jecxz
and
adc
mov
mov
imul
lret
jl
sbbl
add
push
fdiv
sbb
ret
lret
cmp
addr16
iret
in
and
jb
mov
pop
ret
and
js
jecxz
jmp
sbb
mov
mov
pop
out
out
aad
pop
cmp
scas
mov
sub
data16
test
and
pop
pop
adc
fwait
mov
add
lock
pop
add
or
lods
jne
ret
pop
aaa
cmc
add
ret
andl
xor
jmp
outsb
sbb
jbe
mov
push
fnstenv
or
ret
add
mov
mulb
sub
cld
leave
je
mov
add
sub
ret
std
mov
test
movsb
inc
xchg
add
inc
inc
daa
mov
ret
movsl
jbe
push
sti
dec
ret
xchg
jne
fs
dec
ret
mov
jle
jecxz
xchg
and
xchg
cmc
jmp
sarl
stos
mov
cmp
xlat
jo
add
lods
popf
push
stos
or
push
jno
xchg
mov
jne
mov
ret
push
cmp
mov
push
ret
stc
repnz
pusha
sbb
test
sbbb
jno
add
popa
inc
or
outsl
popl
dec
cmp
rol
mov
jns
fisttpll
fldenv
mov
loope
and
mov
je
testb
add
ret
and
cmp
inc
ret
add
fstp
sbb
ret
enter
scas
addr16
cmpb
cmp
or
popf
insl
lahf
ret
inc
mov
dec
sti
js
bound
ret
cs
push
and
mov
dec
jecxz
pop
enter
mov
mov
add
pop
loopne
pop
sub
lcall
sar
or
fisubl
fucom
cmpsl
test
jle
and
sbb
mov
or
add
pusha
gs
adc
sbb
pop
gs
mov
add
hlt
xor
inc
popf
pop
ret
adc
movsl
mov
mov
inc
sbb
add
das
outsb
mov
mov
test
mov
xchg
push
sti
sbb
adc
fnstsw
out
test
sahf
movntq
out
sbb
mov
push
loop
add
push
adc
mov
jnp
and
test
mov
inc
shll
inc
sbb
test
cltd
mov
mov
mov
pushf
sarb
pusha
mov
addr16
movsl
sbb
lods
insb
subb
es
jb
stos
movsl
adc
ss
in
cs
aad
cmp
mov
push
inc
fstpl
test
dec
add
pop
bound
jp
mov
scas
mov
jecxz
pop
out
test
loopne
imul
leave
out
pop
movsl
sub
push
dec
icebp
xchg
add
jae
outsl
dec
jnp
mov
loop
pop
adc
test
cli
inc
mov
nop
mov
out
push
mov
push
xor
or
gs
stos
pop
inc
dec
movsl
mov
pop
mov
pusha
push
outsl
and
or
xor
int3
xor
mov
inc
daa
movb
in
sub
popf
xchg
xor
mov
xor
repz
mov
ss
add
cmp
inc
add
xchg
movsb
loop
sub
ret
icebp
sti
sbb
pop
jl
xchg
scas
enter
dec
jle
mov
aaa
or
pop
stos
clc
mov
push
pusha
ret
lods
fwait
mov
icebp
push
ret
out
nop
jae
push
sub
cmp
sbb
aaa
push
insl
xlat
mov
daa
mov
cmpsb
sti
push
cli
cmp
mov
mov
cmpsb
pushf
aas
repnz
add
ret
lret
shll
inc
lods
dec
cmpsb
pop
mov
push
loop
cmp
xchg
dec
ret
sbb
mov
xlat
fstl
test
subb
pop
into
xchg
push
mov
cld
es
clc
jnp
ret
fs
xor
scas
mov
and
scas
nop
pop
fbld
push
je
mov
xor
pop
xchg
ret
inc
fsubrs
xor
dec
daa
or
lods
push
mov
mov
ret
popf
and
add
sbb
xchg
cld
ljmp
jbe
enter
inc
mov
mov
repnz
lcall
add
ret
js
adc
jg
ret
rcl
je
add
hlt
out
testl
and
in
push
shr
xchg
pop
js
and
aam
stc
sub
and
cmp
xor
lret
lods
inc
outsb
inc
add
int3
and
loope
jnp
cmp
mov
mov
sbb
jp
mov
mov
jb
bound
test
adc
fisubl
ret
mov
rcrl
push
mov
jmp
xchg
out
xorb
mov
sub
rcrl
bound
xchg
push
loopne
incl
das
testl
mov
or
mov
dec
and
ret
mov
lret
fldcw
inc
lock
push
mov
mov
ret
aas
xchg
hlt
jle
sbb
and
jmp
int
dec
sub
mov
aad
ret
shll
stos
out
ds
or
ret
xor
fildll
shl
adc
or
dec
push
loop
orb
movsb
mov
ss
mov
icebp
sbb
jecxz
out
ret
imulb
out
sub
ret
lock
mov
xchg
enter
inc
dec
cmpsb
mov
mov
fstps
ret
inc
xor
stc
out
mov
sub
mov
cwtl
inc
aaa
or
movsb
sti
dec
mov
xor
stos
cmp
cmc
push
loope
into
dec
fsubp
mov
rorb
ret
das
jae
push
jl
ret
sub
cmp
inc
aaa
or
stos
sbb
outsb
adc
aam
push
xchg
movsl
insb
cmp
mov
fldenv
cmp
sbb
js
enter
mov
add
ret
insb
jmp
inc
mov
mov
cwtl
dec
arpl
dec
adc
xchg
push
mov
mov
mov
push
mov
sahf
ret
jb
fwait
lret
mov
cmp
cs
push
dec
in
sub
and
ret
rorl
ficoms
mov
inc
addb
sub
xor
ret
pop
dec
mov
xor
pop
jl
aaa
mov
add
loop
mov
cltd
mov
bound
ret
dec
in
jg
mov
mov
fsubs
jl
insl
sbb
pusha
mov
add
lods
ret
cmp
xor
xchg
cmp
mov
sub
xlat
jp
mov
cmp
ds
into
ret
imul
jne
jg
xchg
mov
aam
clc
pop
mov
mov
jnp
jecxz
scas
cli
ja
mov
cld
adc
stos
jmp
mov
and
and
pop
pop
xchg
ret
clc
lods
push
int3
pusha
pop
ret
xlat
adc
sub
imul
orl
sbbl
pusha
sbb
cmp
mov
movsl
jo
int
rolb
mov
pop
fucom
cmp
fisubrs
lret
add
negl
jbe
mov
call
pushf
inc
adc
xchg
push
fldenv
icebp
fwait
inc
lss
ss
js
movsl
dec
ficoms
push
rclb
cmpsb
shr
fdivrp
jge
ret
aas
in
or
cli
push
mov
popa
sahf
enter
and
xor
orl
push
jl
int3
inc
ljmp
push
adc
xchg
daa
mov
adc
mov
outsb
cmpsl
pusha
ret
int3
cmpl
xchg
dec
push
mov
rclb
cs
loop
out
mov
add
loope
xchg
movsl
dec
ret
sub
loopne
mov
pop
cltd
stc
es
es
jno
test
sub
lcallw
lock
insl
ret
mov
inc
add
dec
stc
pop
add
jecxz
addl
mov
ret
int
dec
movsb
cmp
mov
ret
push
pop
in
lods
pop
daa
rol
cli
xchg
scas
fmul
dec
ret
xchg
int
shlb
andb
mov
mov
push
aaa
push
cmp
pop
ret
insl
xchg
xchg
sbb
or
pop
pop
inc
int3
js
ret
fldl
adc
sub
ror
cli
xchg
outsl
aas
xor
mov
or
in
xchg
ret
cmova
loop
ljmp
ret
lds
jb
lret
bound
movsb
dec
push
jbe
movsl
fldln2
sbb
xor
iret
je
fiaddl
in
mov
ret
pop
movsl
ror
inc
cmp
jg
push
test
sbb
push
ret
dec
mov
jo
or
jmp
ror
ret
mov
push
mov
test
adc
dec
add
fadd
ja
ret
iret
jno
sbb
ret
fisttpl
add
pop
ja
ds
dec
sbb
int
mov
push
dec
mov
sbb
iret
push
push
fwait
test
in
je
mov
xor
into
test
mov
push
mov
ret
adc
cmpsl
insb
bound
pop
or
mov
leave
clc
into
cmpsl
inc
mov
aam
movsl
mov
mov
pusha
pop
sub
int
cltd
mov
push
adc
add
and
push
loopne
xchg
repnz
repnz
ret
fcmovnbe
xchg
movb
imul
testb
bound
div
xor
mov
or
lcall
xchg
add
and
sub
mov
sub
ret
cmpsb
xchg
test
ds
ret
je
lea
rorb
iret
push
lock
jnp
addr16
mov
xchg
pushf
ret
minps
ffree
push
sub
shl
jne
nop
shlb
inc
cld
outsl
push
mov
mov
ret
or
bound
xor
and
je
test
mov
dec
ret
insl
loop
jmp
dec
ret
fstp
pop
jge
mov
bound
loopne
ljmp
fwait
icebp
dec
lret
ja
cwtl
ret
jmp
jl
pushf
rcll
stos
stc
ret
aad
outsb
or
cld
fxch
or
ret
loopne
ret
lret
iret
hlt
add
pop
sub
cld
and
dec
or
ret
mov
cmp
dec
imul
lds
push
in
stos
mov
test
jne
adc
push
mov
inc
repz
inc
xor
pop
xchg
xchg
jp
fwait
rcrl
ss
xor
xchg
int3
stos
pushf
inc
scas
xchg
and
sub
push
push
aam
aaa
sub
dec
repz
mov
ret
or
or
and
ret
lea
dec
int3
ljmp
mov
divl
mov
sub
or
jl
rcrl
loope
mov
lea
scas
fsin
punpcklbw
inc
idiv
outsb
xchg
loop
fs
pop
add
clc
push
stc
sub
aas
xchg
and
pop
pop
lahf
sub
arpl
daa
ds
scas
mov
mov
out
getsec
pop
imul
sub
sbb
les
or
lds
xor
shll
add
fsub
or
es
adc
pop
mov
jno
mov
cwtl
test
outsl
into
push
mov
scas
sbb
fs
lods
aam
mov
inc
imulb
fs
scas
and
xchg
pop
cmp
sbb
jecxz
mov
mov
inc
mov
and
lods
ret
xchg
enter
jecxz
mov
cld
ror
shr
andb
repz
xchg
movsl
mov
xchg
jbe
jge
test
daa
push
mov
jmp
xchg
mov
subb
sbb
sub
push
insl
test
movsb
loopne
aas
xor
mov
mov
jb
lret
int
or
inc
movsb
psrlq
popa
sub
cmp
sbb
pop
xchg
popa
les
scas
adc
add
mov
cmp
out
cltd
xchg
std
xchg
loop
jmp
pop
push
daa
aam
and
ds
cmpl
stos
test
int3
cmp
addr16
aam
jmp
and
mov
sub
movsb
insl
xchg
xchg
rolb
stos
movsl
xchg
iret
mov
cmpsl
adc
std
pop
xchg
scas
cltd
jmp
rcrb
sahf
push
rorb
aam
push
adc
xor
xor
xchg
jo
ljmp
mov
adc
jg
mov
cmp
hlt
in
das
sub
mov
inc
sti
mov
idivb
or
xor
sub
jmp
lods
mov
mov
adc
mov
xchg
cwtl
aam
scas
in
data16
jecxz
mov
pop
stos
dec
mov
pop
xchg
movsl
stc
mov
sub
dec
cmpb
pop
outsb
adc
fstps
outsb
aaa
pop
movsl
xchg
neg
add
add
adc
les
popa
or
dec
fistpl
ja
cmp
sarl
sti
add
cli
push
popa
test
mov
mov
subb
in
sbbb
add
xchg
cmp
rorb
outsl
in
call
cmp
inc
and
sarl
leave
out
pop
outsl
ret
frstor
movsb
mov
or
or
inc
test
sub
mov
xor
pop
insl
out
insb
xor
xor
xor
add
add
test
cmp
push
adc
addb
mov
mov
fistps
mov
sbbb
dec
les
movsl
mov
sbb
shlb
clc
jg
jbe
adc
stos
mov
jo
mov
xchg
aam
int3
test
call
dec
test
fs
or
inc
mov
stos
and
jmp
sbb
outsb
es
push
pop
sub
fldcw
add
fiaddl
sbb
std
lret
push
js
dec
lds
cmp
add
mov
int3
clc
push
cmp
add
mov
out
cmp
addl
lret
test
outsb
or
push
mov
mov
fdivs
xor
hlt
fdivp
aam
xor
mov
inc
cmpsl
in
stos
into
xchg
jo
mov
mov
xchg
jle
std
movsb
add
out
sub
test
ds
add
mov
adc
jl
mov
stos
stos
aad
sub
jecxz
lds
mov
add
mov
subl
mov
sub
xor
orb
jae
sbb
mov
or
add
adc
sarl
lcall
mov
lea
daa
hlt
mov
leave
jecxz
incb
and
mov
mov
jg
mov
test
sbb
adc
pop
mov
loope
test
xor
fcmove
mov
hlt
fbstp
inc
add
mov
jmp
cltd
scas
and
fwait
xchg
iret
ja
fwait
dec
mov
push
outsb
xor
lcall
movsl
mov
into
mov
pop
push
into
repz
cmp
repnz
mov
out
fwait
add
inc
bound
lcall
sub
daa
fldpi
int3
jmp
adc
roll
popa
movsl
jne
aaa
sbb
pusha
fidivl
divl
mov
loop
jge
faddp
sets
test
xor
aad
cld
ret
test
imul
popf
push
adc
pop
test
movsl
mov
pop
mov
enter
in
test
ja
cmp
pusha
mov
mov
call
daa
pop
insl
out
addb
xorl
push
jecxz
fstp
out
pop
iret
mov
jmp
xorb
push
popa
xlat
cmpsb
adc
push
push
sti
je
jl
sbb
adc
jns
cltd
pop
mov
stos
push
test
jl
jns
shlb
push
sarb
outsl
sub
xchg
cli
xor
sub
xchg
xor
dec
imul
rcrb
test
fs
fisttpll
add
movsl
cmpsb
jns
outsl
adc
xchg
push
sbb
call
inc
fmull
loopne
icebp
fcoml
xchg
out
sti
adc
inc
and
pop
sarb
fdivl
test
das
push
push
push
mov
js
jp
mov
shld
ret
mov
outsl
imul
lds
into
inc
fisttpll
xor
enter
jp
sbb
push
sbb
imul
add
stc
xorb
xchg
cmp
mov
sub
gs
mov
iret
and
into
jp
movsl
cmp
jnp
clc
mov
ret
bound
fwait
mov
cmp
xchg
test
mov
jns
push
fstpt
in
mov
das
stos
or
mov
dec
addl
lret
mov
test
sbb
test
outsb
jle
das
mov
js
push
insb
fstps
lock
mov
stos
jge
lret
adc
jne
xor
jecxz
mov
cmp
mulb
stos
fs
mull
movsl
add
push
mov
mov
int
mov
xor
stc
stos
lret
xor
mov
dec
jmp
in
mov
incb
rcrb
push
cmp
and
inc
add
addb
mov
jl
sbb
rcl
cli
sub
add
mov
add
add
loope
add
or
xorl
cmp
int3
jns
adc
iret
lods
cltd
bound
adc
xor
fdivs
mov
jecxz
sub
shll
push
das
xor
lea
lcall
bound
xor
xchg
cmpsb
repz
adc
ja
mov
sbb
loopne
dec
aas
mov
loope
jle
mov
adc
fldl
inc
xor
inc
sbb
test
in
scas
mov
in
cld
pop
xchg
xchg
mov
push
adc
mov
xchg
cmp
fsts
cwtl
xchg
std
pop
pusha
leave
out
jmp
mov
or
xchg
add
movsl
enter
sarb
repz
stc
inc
sub
andl
or
mov
cmp
loopne
pop
jo
push
jecxz
movsl
stc
je
imul
inc
dec
repnz
or
test
push
pop
mov
into
test
cmpsb
sbb
mov
push
sarb
fadds
les
pop
or
movsl
add
add
pop
dec
in
push
add
enter
add
fmuls
and
mov
repz
or
inc
test
cli
lods
movsl
insb
xor
mov
sahf
sub
cmp
mov
std
andl
out
cmc
mov
sti
stos
sbb
mov
lods
es
mov
and
bound
xchg
int3
jle
mov
mov
sahf
jmp
out
lods
fdiv
cmpsl
xor
mov
popa
jecxz
mov
rol
cmp
sub
sbb
inc
inc
mov
mov
shll
cmp
scas
and
imul
out
aaa
cmpb
sub
das
xchg
pop
pop
aas
push
mov
mov
mov
mov
cmp
inc
add
rcll
and
push
push
dec
add
or
push
mov
fbld
jbe
push
test
adc
in
push
test
lret
ret
fists
cltd
cli
inc
std
or
cli
xchg
pop
xorb
stos
add
mov
sbb
lahf
daa
push
fsubrs
inc
testb
cmpsl
pop
mov
or
jg
mov
outsb
fdivrl
adc
cmpsl
sbb
push
sub
xchg
inc
cmpsl
sub
sbb
stc
inc
int3
mov
add
dec
scas
fldt
lahf
rorb
jle
call
test
addr16
repnz
cs
inc
jbe
cmp
aaa
dec
push
fistl
test
shl
test
jmp
jle
dec
fiaddl
mov
in
cwtl
fs
in
or
pusha
lret
inc
cmp
scas
cs
xchg
jo
mov
mov
dec
inc
inc
jae
fisubs
stos
mov
scas
pop
pop
jg
out
mov
mov
mov
stos
jge
mov
dec
pop
insl
or
dec
dec
pusha
in
push
out
lcall
adc
mov
mov
aad
pop
adc
mov
cmp
mov
aam
and
dec
lret
mov
out
dec
and
pop
lret
rcll
jmp
movsl
lods
test
sub
mov
pop
jb
xor
jno
mov
shlb
add
out
sbb
mov
pop
sarl
dec
mov
arpl
jnp
int
cmp
push
adc
mov
sbb
mov
xchg
addl
stos
ret
xor
into
fwait
push
dec
xchg
outsl
mov
inc
inc
or
popa
into
xor
outsb
or
imul
clc
jnp
sub
inc
clc
jecxz
call
or
inc
jnp
out
popf
sbb
daa
xor
mov
adc
xlat
and
ss
xchg
movsl
jnp
sub
pushf
lcall
mov
hlt
loop
not
test
fcmove
jbe
or
inc
daa
xor
sbb
lods
or
mov
adcb
pop
jne
xchg
inc
cmpsl
lret
dec
sbb
stc
aas
or
movsb
mov
push
bound
cmpl
and
pop
outsl
cwtl
in
inc
cmp
mov
inc
lock
cmc
insl
add
fstpt
aas
jb
mov
rorl
sbb
lret
loopne
pop
test
into
pop
and
in
mov
sarb
mov
lret
push
xchg
xor
push
out
push
sbb
cmp
fimull
js
mov
frstor
imul
in
out
mov
mov
test
xor
les
adc
popl
xlat
cli
add
movsb
les
jo
fildl
gs
aas
push
mov
inc
sub
jb
mov
lret
imul
mov
mov
mov
pop
in
mov
mov
cwtl
xor
shlb
push
jne
push
mov
or
fcmovu
mov
setno
inc
sbb
cld
jnp
iret
and
in
sbb
mov
out
push
and
pop
push
inc
imul
movsl
out
xchg
arpl
es
movsl
lcall
inc
test
sub
or
data16
jbe
imul
test
iret
call
fwait
mov
outsl
add
inc
shlb
adc
pop
data16
loopne
inc
mov
aaa
popa
mov
out
jbe
stos
mov
mov
movsl
scas
lods
js
cmpsl
jb
jge
mov
movsl
cmp
sub
popa
rcrb
cmpb
imul
xor
and
jecxz
mov
mov
or
test
mov
inc
scas
in
mov
mov
inc
fldt
ds
adc
jno
or
mov
dec
or
mov
mov
out
mov
push
cmp
pop
inc
and
xchg
pop
cltd
sub
mov
pop
push
adc
and
pop
or
push
out
add
cltd
dec
mov
stos
fsubrs
inc
into
insb
mov
lret
loop
ds
mov
xlat
mov
cmp
adc
xchg
insb
mov
cmc
sahf
rcrl
pop
icebp
fsubrl
xchg
rcr
and
inc
mov
fsts
imul
pop
sub
sbb
jo
push
add
or
sbb
jcxz
xchg
outsb
in
ss
fcmovnb
sub
out
adc
mov
jge
insb
jle
add
sti
std
mov
push
std
push
jb
push
mov
movsl
int
stc
xchg
sub
pop
or
and
pop
dec
xor
jle
or
aaa
mov
scas
rol
mov
test
cmpsb
outsl
and
jae
cli
add
fnstcw
repnz
adc
mov
cwtl
xchg
pusha
xor
xlat
xorb
sbbb
push
cli
cmp
int3
test
iret
jns
cli
inc
pusha
sbb
leave
and
stos
dec
adc
xchg
pop
cmpsb
movsl
jb
push
adc
mov
sbb
pop
cmp
mov
call
mov
mov
xchg
push
xor
fdivp
cmp
cmp
data16
jg
fisubl
cmp
mov
test
lds
xchg
les
mov
xchg
adc
outsl
test
gs
out
test
xchg
push
outsl
push
jae
icebp
inc
push
into
cmpsb
aas
mov
outsl
cli
outsb
push
push
orl
dec
imul
movl
and
ret
pushf
pusha
jb
arpl
lret
pop
or
shll
fsubl
mov
fsub
xchg
into
pop
xchg
push
and
xchg
and
mov
push
push
push
add
mov
pop
jmp
cmpsl
inc
jns
xchg
cmp
xchg
mov
xor
lods
enter
cmpb
adc
test
dec
in
mov
jp
sti
xchg
jbe
adc
mov
adc
jne
mov
inc
sbb
ficomps
cmp
popa
dec
sub
and
ss
add
popa
test
call
push
mov
mov
dec
insl
or
movsb
inc
push
lea
adc
and
pop
imul
aad
sbb
popa
aad
jae
add
jmp
in
mov
sbbb
and
and
fiaddl
xorb
sub
repz
cld
sub
push
adc
adc
or
stos
int
movsl
fs
ja
rorb
cld
push
lods
or
rcr
pop
inc
lods
insb
lahf
test
inc
movsl
mov
mov
sarl
in
nop
data16
fmull
aaa
outsl
add
outsb
push
aad
movsb
je
ret
add
jmp
mov
sbb
js,pn
and
mov
xchg
push
mov
icebp
pop
mov
out
xchg
mov
add
mov
jnp
inc
fiadds
pop
dec
lods
enter
addl
pop
ret
inc
testl
inc
mov
shl
popa
mov
fs
inc
nop
push
sbbb
push
pop
cmp
test
mov
in
jmp
pop
dec
std
ss
sub
rorl
int3
and
push
es
inc
sbb
push
xor
xchg
ret
popa
test
psubsw
mov
ds
jge
pusha
mov
push
test
pop
xor
ret
pop
test
mov
sbb
mov
pop
cmp
mov
repz
mov
sbb
clc
mov
loope
sbb
mov
cmp
dec
popa
cmp
stc
sbb
dec
daa
jb
adcl
xor
xorl
loopne
rclb
scas
jmp
inc
mov
incl
dec
jnp
or
pop
mov
out
fs
mov
mov
das
imul
lods
push
outsl
fs
pop
pushaw
sub
mov
pop
xlat
mov
ds
insb
int3
mov
jne
test
add
psrlw
dec
pop
adcl
into
pop
and
cltd
push
push
jns
adc
sub
nop
add
add
xchg
fsubs
cld
dec
outsl
push
pop
cld
mov
cmp
bound
mul
cmp
adc
xor
icebp
stc
jg
adc
cmp
neg
push
mov
jp
sub
lcall
mov
outsl
dec
add
mov
jne
in
jmp
hlt
lret
add
sbb
adc
xor
jno
push
nop
mov
pusha
test
or
push
movsl
outsb
or
loopne
js
sub
sbb
push
push
idivb
xor
fcompl
scas
and
adcb
addr16
jnp
mov
movsl
jge
movnti
clc
enter
scas
jecxz
movsl
clc
enter
outsb
push
push
mov
or
or
mov
out
gs
xchg
clc
cmpsl
insl
ret
jle
jb
dec
push
lods
cmp
shrb
pop
iret
jne
sbb
pop
test
pop
push
addb
cwtl
push
pop
xchg
movsl
mov
mov
test
daa
mov
ror
pop
inc
xor
mov
insb
loop
cmp
xor
iret
cwtl
les
push
inc
dec
lret
stc
jp
xor
sbb
shrb
pop
jl
pop
lea
mov
sahf
cmp
repz
or
into
mov
dec
out
push
cltd
pop
inc
mov
jae
or
jmp
es
repz
push
jmp
imul
pop
adc
lds
mov
fildll
subb
out
cmpsb
movsl
fists
daa
or
jge
loop
ret
dec
jae
lods
out
clc
jbe
inc
add
sti
mov
jge
push
test
jmp
cmp
nop
pop
imul
inc
mov
lret
mov
jmp
cwtl
or
aam
outsl
test
xor
sbb
insl
cmp
cmp
outsl
mov
sub
orb
jne
js
mov
lcall
mull
faddl
mov
jl
and
add
repz
inc
ret
out
cmpsb
inc
fimull
scas
pop
rcll
stos
dec
test
outsl
push
add
mov
jns
stos
xchg
iret
xor
jo
push
scas
les
aas
lds
dec
outsb
push
xor
popf
mov
lea
adc
lds
cmp
loop
pushf
popa
dec
xchg
jno
testl
movsl
dec
test
sbb
sub
push
shlb
mov
shll
inc
add
clc
aam
jne
lea
pushf
add
loopne
fstpl
test
cld
jle
cmp
sub
fs
movsb
mov
push
pusha
movsl
push
stos
test
mov
mov
pushf
push
rcrb
scas
add
cli
into
inc
or
adc
cmpb
adc
loopne
cmp
inc
add
stc
lock
jp
scas
or
repnz
ret
or
dec
addr16
ret
add
xor
xchg
ret
cmp
fmuls
mov
fiaddl
jb
ret
out
xchg
push
es
ret
mov
lcall
xor
outsb
cmpps
popf
sub
out
xchg
ret
mov
stc
ret
lds
les
sbb
mov
inc
incl
and
out
mov
pushf
sbb
test
jl
out
adc
test
out
xchg
push
lds
mov
loope
lea
mov
ficoml
jle
sbb
ds
aas
mov
enter
cmc
push
aam
lcall
xchg
dec
push
push
xchg
mov
push
scas
jg
adc
inc
jb
mov
stos
jbe
push
bound
call
movsb
stc
test
sub
sbbb
nop
add
push
stos
lods
jg
ret
das
pop
data16
xchg
lahf
mov
adc
bound
mov
scas
ja
mov
pop
sbb
out
sbb
loop
ret
cmp
mov
fs
xchg
add
pusha
ret
scas
mov
int3
ret
sub
sbb
ret
push
dec
test
xor
mov
sbb
pop
cli
mov
jg
ds
inc
mov
stc
jnp
mov
sub
mov
fcompp
add
jg
sbb
adc
ret
mov
mov
cmp
sub
jo
xchg
int3
das
ret
push
into
adc
scas
xor
ret
pop
scas
fbld
cwtl
xchg
sbb
fstp
ret
sbbl
push
and
pop
xchg
cld
loope
add
test
pop
push
add
je
loope
xchg
cmpsl
imul
mov
jge
pushf
sub
jno
ret
test
insb
adc
mov
in
mov
ret
pop
gs
lds
mov
fwait
cmp
fbld
add
push
je
bound
rcrb
mov
mov
cmp
mov
negb
cmp
xchg
fiadds
inc
test
pop
insb
push
xorl
add
mov
mov
test
addr16
cmp
out
xor
sbb
lret
nop
insb
mov
icebp
mov
sbb
push
cmp
and
mov
sbb
add
mov
jg
pop
pusha
jbe
movsl
or
nop
mov
cs
mov
push
fldcw
xor
jecxz
aam
daa
pop
roll
std
jno
sbb
lret
mov
or
cltd
mov
xor
dec
mov
mov
mov
jmp
pusha
mov
jp
movsl
mov
test
fnsave
je
lret
xor
jae
or
mov
daa
lret
test
adc
and
dec
cltd
xor
pop
out
das
shrl
fwait
out
fisttpl
int3
xchg
std
lea
jle
stos
cmp
loope
es
aam
loopne
jge
scas
in
imul
aaa
iret
and
int
jmp
mov
test
push
mov
data16
pop
lea
stc
in
jno
int
rcrl
push
pop
jb
jo
mov
outsl
sub
je
scas
jb
je
ja,pt
notb
pusha
mov
fsub
jp
test
fiaddl
fstl
mov
pop
mov
adc
daa
mov
aas
and
fwait
pop
movsl
and
imul
fstp
adc
mov
ret
fs
out
xor
xchg
xor
sbb
push
bound
rep
fdivs
aaa
xchg
idivb
mov
inc
xor
xchg
xor
jp
je
rep
adc
mov
arpl
xchg
bound
mov
lret
stos
mov
movsl
test
or
xchg
xchg
or
mov
mov
add
xor
mov
add
add
lcall
aad
cmp
jp
rorl
or
jecxz
lea
stos
mov
pusha
test
into
push
shll
sbb
stos
fcmovne
cmp
jp
and
fmull
ret
pop
outsl
mov
push
repnz
pop
sbb
sub
mov
push
jp
pop
mov
jno
jp
xor
adc
jecxz
test
js
pop
test
shrb
rcr
repnz
add
loopne
sbb
inc
add
dec
push
and
cmp
rcrl
roll
hlt
xchg
scas
jle
pusha
movsl
mov
add
movsb
dec
adc
stc
aaa
pop
cli
int
out
adc
daa
imul
andl
ljmp
push
sti
jae
mov
ss
out
jne
xchg
jo
cli
cmpsl
jge
test
iret
jp,pt
mov
pop
pop
or
mov
nop
lea
inc
roll
xchg
hlt
negl
lods
ljmp
sbb
push
psubsw
ret
mov
mov
rcll
push
xchg
mov
jl
sbbb
xlat
cmp
pop
mov
add
pop
loope
xchg
imul
rep
movsb
dec
fnstsw
pusha
aam
cwtl
scas
data16
addr16
sub
xlat
and
outsl
insb
push
test
lods
stos
mov
and
xchg
ss
ror
rclb
movsl
addb
in
int
stos
inc
or
xor
xchg
cmp
in
xor
subl
jnp
jge
xchg
shl
adcb
divb
add
push
movsl
jge
and
enter
repnz
test
sub
std
dec
and
int3
mov
sti
dec
sub
push
mov
and
out
jecxz
loopne
movsb
add
xchg
jle
sub
aaa
scas
popa
scas
ret
adc
dec
std
dec
shll
xchg
lods
nop
push
outsl
out
jg
jnp
mov
jbe
or
shrb
f2xm1
lds
in
mov
adc
inc
out
push
xchg
dec
lahf
inc
dec
or
test
vpsubd
data16
lock
adc
push
xchg
fdivp
dec
cmp
mov
les
push
ja
adc
out
mov
test
dec
pop
adc
add
fwait
pop
cmp
fbld
cmp
movsl
lcall
addr16
insl
push
test
or
push
das
rcrl
pushf
fnsave
or
and
fcmovbe
cmp
xor
inc
mov
mov
adc
sbb
mov
mov
aam
loop
jnp
adc
pop
mov
pop
pushf
mov
xor
popa
cltd
aas
pop
pop
mov
mov
or
add
sbb
pop
or
cmp
mov
mov
dec
mov
lock
hlt
add
inc
movsl
fsubr
fcoms
sub
and
test
mov
es
sub
test
lcall
daa
dec
push
xlat
movsb
lea
push
shl
test
add
and
sbb
fcompl
repnz
gs
test
adc
pusha
clc
pop
xor
scas
and
test
jg
data16
adc
out
jecxz
out
sub
and
insb
mov
arpl
aad
aaa
fwait
mov
jns
lods
cmp
ret
fidivl
fcoms
inc
mov
mov
ss
mov
fs
mov
cltd
jns
testl
push
out
xchg
mov
jecxz
pop
mov
sub
mov
jne
cltd
ficoms
sti
mov
and
jns
movsb
lret
cwtl
mov
inc
mov
andb
cmp
xchg
mov
xchg
and
xchg
movsb
jns
inc
push
test
dec
mov
dec
jg
mov
xor
out
jbe
pop
int3
test
inc
mov
sti
adc
test
icebp
adc
out
and
or
jle
mov
test
push
fsubrs
test
sub
loopne
adc
pop
adc
mov
andb
jp
dec
mov
lods
jle
aam
and
mov
sti
repz
ret
push
push
in
and
mov
fstl
push
sbb
xlat
cmpl
pushw
mov
inc
test
xchg
pop
jnp
sub
mov
aam
aam
ds
stc
cmp
jnp
add
push
cmp
dec
mov
and
xor
cltd
repz
stos
or
int
les
or
jne
pmuludq
or
into
mov
je
shlb
call
xor
sub
jge
rorl
mov
sahf
test
inc
xlat
int3
cld
cmp
out
mov
cmc
xchg
pop
cli
xchg
fs
push
cs
arpl
jp
mov
sbb
int
popa
daa
fidivl
divb
sbb
ret
int
movsl
fisubl
and
in
inc
shl
fidivl
cmp
ret
movsl
dec
push
xchg
jge
mov
xor
ret
mov
adc
mov
outsl
ret
dec
testb
pop
jo
mov
mov
icebp
aaa
lahf
insb
inc
xchg
hlt
push
and
orb
adc
adc
jg
loopne
mov
in
fsubrl
push
fwait
sub
inc
mov
pop
imul
adc
sub
pop
out
ja
test
inc
cmp
xor
scas
imul
gs
and
or
pop
and
fistl
sti
jp
mov
xchg
mov
jl
cmpsl
ds
inc
mov
add
int3
aaa
leave
jb
insl
lret
dec
jbe
xor
into
jb
test
nop
jp
dec
mov
mov
mov
adc
or
inc
xor
mov
xchg
out
data16
mov
and
outsl
insl
test
and
dec
add
fisubl
push
sub
out
and
ja
cltd
fcoms
xchg
cs
test
or
jo
push
and
pop
out
fld
dec
mul
cmp
mov
mov
test
push
test
or
movl
gs
mov
cld
xor
aas
cmp
xchg
push
push
mov
cmpsl
movsl
stos
mov
mov
inc
idivb
lds
cmp
mov
sbb
orl
pop
jp
movsb
xchg
jnp
js
or
mov
lds
pop
and
sbb
test
into
jg
cmpsb
adcb
out
ss
adc
pop
jp
push
out
imul
lgs
pop
movsl
jb
xchg
outsl
daa
and
adc
ja
into
enter
dec
je
jge
jne
mov
cmpsb
inc
dec
and
inc
adc
xor
mov
insb
sahf
adc
iret
shll
jnp
cmc
xchg
push
loopne
sbb
pop
cmpsl
popl
mov
cmp
mov
nop
adc
in
repz
shrb
mov
add
push
xchg
iret
adc
test
and
negb
jle
adc
mov
mov
lds
adc
mov
mov
push
pop
mov
sub
test
jle
lret
lahf
adc
adc
pop
pusha
fidivrl
loop
pusha
or
cmp
outsb
xchg
sub
add
addb
xor
cltd
outsl
call
mov
pop
rcr
lods
cs
cmp
sahf
xor
nop
mov
add
push
inc
dec
fisubl
popa
jb
or
sarb
or
js
addr16
push
pusha
movsl
sbb
inc
lods
fcomps
dec
sti
out
mov
test
or
sarl
cmp
int
ret
lea
insb
inc
cmp
test
xchg
and
add
fbld
xchg
loopne
addl
fcompl
mov
outsl
add
jp
fcmove
mov
hlt
push
out
nop
clc
in
lock
xchg
pusha
in
shll
fcmovnu
lcall
xlat
mov
mov
adc
nop
mov
mov
push
jge
or
sub
cmp
movsl
bound
push
mov
popa
jge
mov
lahf
sarb
push
push
sbb
and
sti
or
fbstp
stos
insl
clc
call
add
mov
xor
mov
dec
es
pop
push
test
out
rclb
sbb
adc
mov
mov
pusha
mov
pop
cs
jnp
adc
push
inc
leave
loopne
dec
push
out
lods
mov
cli
mov
rcll
inc
sbb
scas
call
fcoml
lock
mov
mov
cmp
mov
sub
aad
popf
push
lock
push
outsb
std
push
fwait
in
sub
mov
mov
loope
or
push
mov
bound
lock
je
pop
aas
movsl
sub
lods
loope
repz
pop
in
mov
xorb
adc
push
lods
mov
or
xchg
add
mov
loopne
mov
cld
ret
cwtl
push
add
inc
fiaddl
push
jp
mov
ficoms
aad
push
out
movsl
aas
ljmp
es
loopne
jb
dec
jns
lret
pop
cmp
cli
push
fstpt
popa
rorb
stos
lret
mov
mov
imul
andb
lret
out
mov
je
mov
fcmovu
jl
push
ds
rorb
xchg
movsb
repz
xor
mov
dec
mov
push
fldt
je
jb
cwtl
outsl
jo
inc
xchg
mov
add
into
dec
test
rep
scas
and
addl
sbb
inc
test
call
pop
es
lea
or
ja
xor
popa
mov
adc
cmp
lret
sbb
testl
mov
or
adc
lcall
orb
mov
scas
add
popa
insl
push
mov
fcmovnb
mov
add
popa
pop
mov
into
mov
nop
dec
add
mov
loop
das
ja
cmp
cwtl
pop
push
xor
pop
adc
ror
xchg
push
xor
inc
cmp
or
cmpsl
movsb
xor
repz
mov
js
cmp
jno
in
mov
sbb
mov
repnz
cmp
mov
push
ss
xchg
pusha
jbe
add
mov
test
sbb
aam
or
sbb
pop
sbb
cmc
or
ret
mov
pop
and
jp
ja
mov
mov
mov
push
addr16
mulb
cmp
xorb
cwtl
push
xchg
daa
test
rclb
and
mov
sarb
jno
data16
mov
iret
in
xor
pop
dec
sub
mulb
xor
mov
fcoms
inc
arpl
cmpb
add
mov
xchg
and
mov
les
jo
xor
xor
das
stos
imul
push
cmp
cli
cmpsb
mov
xlat
cmp
jl
push
cmp
dec
rcr
push
mov
mov
jb
out
cli
add
fimuls
mov
mov
adc
push
pop
inc
or
fnstsw
sbbb
mov
jno
mov
pop
je
sub
addb
xor
mov
repz
pop
pusha
xor
out
clc
and
xchg
aam
movsl
jp
test
fs
or
pop
sbb
mov
mov
std
inc
mov
push
xchg
stos
outsb
aam
pop
popf
popa
rorb
mov
push
jb
xor
xchg
xor
pop
pop
lahf
pop
mov
ret
push
out
ficomps
popa
add
dec
xor
imulb
mov
bound
popa
inc
inc
dec
mov
fadds
in
jl
cmp
pop
mov
inc
push
sbb
mov
nop
outsl
in
fwait
inc
lods
or
ljmp
cli
addb
add
test
sub
mov
movsl
fimull
push
xchg
adc
popa
ret
dec
xchg
and
adc
cmp
cvtps2pi
mov
scas
dec
movsl
leave
add
cld
js
ret
lahf
test
mov
and
insb
jmp
add
inc
adc
add
enter
inc
cld
es
or
pop
mov
test
scas
sti
into
or
mov
shlb
mov
aas
je
mov
in
scas
cli
push
or
sti
nop
mov
cmpsl
inc
nop
or
sub
test
cmp
mov
and
pop
iret
jmp
lret
in
cli
sarl
fcmovne
test
fnstenv
adc
dec
fs
lahf
into
repz
add
jmp
xor
jnp
cltd
mov
xchg
inc
lret
iret
rol
in
out
clc
xchg
sbbb
es
jmp
in
dec
inc
mov
add
sahf
rorl
lahf
push
adc
jns
shll
dec
enter
in
xchg
insl
xor
cli
pop
lds
jns
scas
add
or
mov
jb
orb
enter
ja,pt
xor
pop
out
xchg
icebp
add
and
out
jg
adc
jbe
adc
adc
push
add
xor
por
xor
movsl
xchg
popa
adc
inc
push
mov
dec
insl
cmp
adc
cmpsl
jb
push
repz
out
xor
add
xor
jae
push
mov
sahf
add
and
mov
jae
fldenv
jge
sub
in
inc
popa
mov
pop
and
cwtl
insl
cltd
ja
mov
leave
outsb
cmpsl
mov
test
movsb
sbb
xor
xchg
adc
mov
scas
xor
mov
aad
push
mov
pop
push
sti
sbb
in
aaa
inc
jb
outsl
js
cmpsl
mov
jecxz
push
dec
test
pop
xor
xor
andb
movsl
pushf
ja
cmp
lods
loopne
dec
scas
repnz
jbe
inc
jb
scas
or
in
add
xor
pop
xchg
popa
or
push
mov
adc
jge
pusha
mov
clc
arpl
fstl
jg
in
add
adc
pop
mov
jb,pt
repz
es
mov
arpl
add
adc
sub
data16
or
lahf
mov
add
out
add
insl
jl
lcall
test
data16
jecxz
es
adc
sub
jb
or
jmp
jmp
mov
pop
cli
rolb
leave
inc
cmp
out
or
mov
sub
inc
dec
mov
xor
sub
mov
aad
xor
cli
imul
mov
ds
or
repnz
shl
daa
xorb
xchg
mov
in
pop
cld
push
xor
test
js
or
rorb
dec
xchg
imul
jae
inc
insb
xchg
mov
fidivl
cmp
jmp
lods
jmp
stos
pop
imul
sub
out
arpl
daa
push
roll
jp
js
fstpl
js
pop
loope
mov
mov
cld
pusha
mov
dec
hlt
cmpsl
cmp
cmp
insl
pop
cmpsl
jne
sbb
movsb
ds
jge
dec
movsl
cs
adc
push
xor
mov
fimuls
xor
mov
mov
push
movsb
mov
xchg
xor
shl
add
scas
out
nop
sbb
loope
mov
dec
leave
cmpsl
hlt
in
push
push
mov
inc
fidivrl
mov
clc
add
sub
shrl
rorb
mov
xor
xor
pop
daa
movsb
mov
clc
push
js
mov
cmp
popf
arpl
lret
shrb
push
xchg
ret
cmp
or
mov
hlt
subl
shrb
push
sbb
loopne
faddl
cmpb
mov
pop
push
movsl
sbb
mov
je
popl
mov
sbb
pcmpgtw
xor
jp
out
or
test
jl
jle
jl
sub
insb
movsb
inc
cmp
loopne
mov
push
inc
xchg
mov
push
mov
imul
sbb
mov
loopne
xor
sub
std
movsb
lds
movsl
pop
dec
jnp
adc
ret
mov
xchg
and
clc
add
sar
xlat
aaa
loope
sub
cmp
jnp
iret
cwtl
pop
ret
mov
xchg
or
xor
fdivrl
push
add
inc
test
pop
xchg
mov
popa
pop
popf
fmull
cmp
fdivrl
ja
add
lock
sub
loope
icebp
push
cmp
mov
push
jecxz
cmc
pop
push
cltd
adc
pop
push
mov
out
adc
and
ja
inc
mov
aaa
pop
lods
movsl
cmp
or
stc
sub
mov
hlt
lock
adc
and
mov
push
or
js
test
and
sarl
mov
cwtl
mov
test
pop
ja
add
test
lds
xchg
sub
pop
jg
push
mov
sbb
sbb
adc
mov
cltd
repnz
ja
inc
pushf
fwait
add
mov
xchg
negl
fs
jns
and
jp
xlat
call
jp
jg
sub
add
xchg
jecxz
jecxz
das
aam
sbb
test
fnstsw
fcomi
mov
in
frstor
inc
mov
push
sbb
sbb
std
mov
xchg
mov
out
lock
sub
movb
ds
ret
xor
fiaddl
clc
frstor
sub
sti
pop
into
test
das
inc
sub
xchg
aas
outsb
loopne
test
adc
sahf
clc
aad
js
xchg
push
mov
stos
test
out
mov
out
sbb
daa
jae
outsb
and
out
jo
jge
fistpl
addr16
mov
movsl
bound
test
sbb
les
pusha
xor
inc
dec
mov
push
xor
shrl
scas
mov
jl
out
mov
ficoml
pusha
mov
inc
or
in
pop
jl
xchg
add
movsl
lock
jno
jns
or
jg
repnz
pop
hlt
test
xchg
jnp
dec
add
out
mov
dec
push
and
cmpsb
test
int3
xor
in
mov
in
shlb
xchg
lret
sbb
movsl
pop
fmull
sti
mov
jmp
or
inc
loope
das
hlt
sbb
mov
pop
mov
outsl
xchg
mov
stc
sbb
hlt
mov
pop
jnp
js
pop
jns
sub
bound
aad
dec
add
xor
lahf
stos
cmp
cmp
stos
push
dec
call
xor
pop
jae
sarb
push
lret
inc
mov
test
test
shr
push
fcom
push
icebp
fstpt
je
xchg
inc
fcmovnb
pop
out
adc
xchg
sub
fdivrs
jl
push
push
pop
jo
mov
adc
adc
push
roll
push
xor
stos
mov
mov
xor
mov
not
fucomp
or
dec
mov
add
sbb
mov
dec
push
mov
outsb
in
xor
pop
push
lds
sbb
xchg
inc
addr16
add
xbegin
lea
cmpsl
or
movsb
cmpsl
negl
out
or
mov
ret
inc
roll
es
pop
jnp
cmp
jnp
in
push
mov
push
mov
movl
inc
mov
push
lcall
mov
dec
addr16
clc
mov
inc
insb
jns
mov
clc
aaa
dec
mov
ret
mov
pop
js
jp
std
lea
call
push
out
xor
dec
clc
and
push
mov
sub
ja
pop
popa
test
sbb
pop
loopne
aad
sbb
lea
dec
sbb
cmp
push
ljmp
mov
ja
push
lds
movsl
jno,pt
in
scas
mov
jo
mov
aam
mov
inc
bound
daa
add
xchg
into
jle
mov
in
sub
xchg
or
mov
ror
lret
insb
inc
jne
or
mov
fstp
cs
ss
shrl
and
outsl
adc
lods
push
mov
mov
dec
push
cmpsb
cmp
or
mov
sarl
cwtl
call
popa
mov
jmp
mov
mov
or
jl
out
test
out
push
mov
sbb
orb
repz
rcr
mov
movsl
xchg
shl
mov
mov
inc
insl
clc
push
test
and
popa
pop
add
cmp
and
adc
xchg
sti
fs
xor
lahf
mov
lds
pop
inc
loope
adc
mov
cmp
ffree
lods
xlat
sub
std
out
movsb
pop
cmp
sub
pop
mov
stos
jne
dec
cmp
mov
mov
inc
sbb
and
pop
or
jns
sub
dec
sub
fs
popa
jno
and
push
sti
jbe
in
shrl
and
inc
cmpsl
push
mov
mov
and
cmp
sub
mov
shrl
inc
mov
push
gs
inc
jnp
sub
test
imul
push
stc
stc
fmulp
xor
andb
mov
mov
rcrl
xor
mov
cmp
mov
cmc
pop
test
out
test
pop
pop
and
jle
fmul
into
jae
mov
xchg
addr16
fs
mov
call
test
into
jl
loopne
mov
jo
ffree
mov
jbe
out
cmp
adc
mov
jae
pop
lahf
inc
ret
insb
xchg
loopne
push
cmp
pop
rorb
sahf
jnp
inc
jecxz
and
push
push
popa
push
xchg
mov
mov
cld
jb
sub
jle
pushf
daa
mov
mull
xor
cmpb
and
shlb
mov
movsb
mov
mov
nop
cld
mov
popf
mov
pop
jbe
sub
mov
adc
mov
rclb
mov
fs
push
jecxz
sbb
std
xchg
addr16
repnz
test
xchg
cld
insl
lahf
push
pop
fsubl
into
xor
lret
insb
loope
pop
and
mov
aas
js
add
dec
pop
daa
andb
cmp
push
pop
loopne
lret
xchg
fwait
adc
add
mov
pop
add
scas
push
fwait
bound
movsl
les
add
popf
pushf
loopne
scas
dec
data16
jle
stos
jns
sbb
adc
mov
dec
ret
dec
andl
loopne
addl
cmp
scas
adc
das
push
jge
loope
adc
add
aad
test
mov
loopne
std
nop
ss
cmp
pushf
sbb
mov
push
ss
xchg
sub
or
add
out
pusha
outsb
mov
test
rcrb
adc
sbb
or
or
push
orb
fs
add
test
cli
cmpsb
sbb
jb
pop
fcomp
call
inc
lret
dec
aam
or
ljmp
shll
cmp
ret
xchg
pop
out
stos
sub
adc
dec
lret
add
and
cmp
ret
inc
dec
sbb
mov
fsub
imul
movsl
jecxz
sub
jp
mov
pushf
xor
cmp
dec
mov
outsl
mov
push
imul
push
mov
movsl
ljmp
mov
mov
test
push
add
mov
cmp
cwtl
fildll
sbb
cmp
xchg
popa
movsl
pop
in
out
sbbb
je
adc
mov
xchg
test
movsl
add
andb
jbe
xor
sbb
stc
cld
movsl
xchg
mov
mov
jo
or
lcall
stos
out
insb
dec
cld
sbb
jae
stc
mov
inc
pop
outsl
ljmp
xor
enter
mov
cmp
test
out
pop
dec
cmp
in
pop
shrl
pusha
adc
sbb
pop
cmp
sub
ds
inc
pop
subb
mov
push
mov
aam
loope
ret
cmpsb
pusha
pusha
test
xlat
lods
adc
mov
iret
iret
sahf
daa
sub
int
cltd
cwtl
shrl
xor
jmp
cmpsl
outsb
mov
sub
xlat
mov
ja
sbbl
push
lahf
stos
enter
add
cmp
cmp
popa
and
and
mov
test
add
loope
jg
int3
pop
dec
mov
stos
fisubs
or
fnsave
popf
scas
xor
jne
sbb
dec
movups
jbe
std
push
cltd
and
pop
lds
add
cwtl
inc
loope
stc
or
in
or
push
pop
jl
jns
fs
and
mov
pop
clc
and
xor
ja
cwtl
movsl
jnp
outsl
mov
fdivl
daa
and
loope
mov
inc
or
mov
pop
pmulhw
and
push
jo
cli
sub
aad
dec
pop
movsl
out
adcl
mov
and
dec
push
adc
test
pop
jge
iret
jo
mov
xchg
nop
cmc
fdivs
dec
jg
push
imul
aas
mov
adc
je
sbb
aas
lds
inc
cmp
fcoml
aas
inc
adc
in
movsl
add
xchg
gs
sbb
movsl
cmp
mov
stos
je
jmp
jb
dec
pop
out
push
lods
ret
mov
xlat
iret
int
jg
inc
loope
push
aaa
dec
fldenv
andb
or
rorb
adc
and
scas
adc
push
mov
xlat
int3
ret
icebp
pop
test
xchg
pusha
negb
xchg
idiv
and
or
subb
lods
scas
bound
push
mov
sub
movsb
add
into
sub
cmp
jns
leave
fstps
cmp
dec
inc
fstps
jl
xor
shll
xorb
call
fdivrs
loop
xlat
mov
mov
iret
stos
pop
out
out
jge
inc
popa
pusha
jbe
jnp
pop
jge
mov
ret
popf
cmp
push
mov
lds
jb
cmp
push
js
inc
movsl
movsb
xchg
repnz
into
inc
pop
cmp
add
inc
or
sub
adc
mov
std
cmp
jae
outsl
mov
rclb
jb
xor
addr16
test
out
add
in
or
add
xor
push
xor
test
ffree
imul
mov
stos
cmp
adc
jl
out
enter
and
cmp
mov
ds
inc
mov
scas
cwtl
mov
inc
aas
xor
lock
add
mov
xchg
ss
pop
mov
xchg
out
mov
movsl
inc
cmp
lods
aam
jno
adc
mov
xchg
ja
cmp
in
mov
push
mov
out
mov
js
loope
mov
inc
sbb
test
push
or
test
add
add
test
or
sahf
fs
dec
mov
sbb
jne
aam
cmc
and
mov
fidivl
sahf
fwait
add
xlat
mov
adc
in
test
movsl
sar
fwait
mov
dec
cwtl
or
lret
push
shll
jno
add
dec
jbe
sbb
stos
fucom
lods
stc
aam
test
lret
fwait
nop
jns
push
mov
or
loopne
mov
lcall
test
jl
cmpsb
pop
je
xor
notl
hlt
ja
aaa
or
lret
mov
add
ja
loope
dec
ffreep
sahf
pusha
mov
fisttpl
test
outsb
xchg
xchg
xchg
cmpsl
popa
lahf
je
xor
notl
aaa
or
inc
loopne
mov
repnz
add
rorb
test
and
fstp
fstps
aad
rcll
dec
leave
mov
test
movb
mov
push
xchg
xchg
cmpsl
and
je
xor
not
mov
ja
aaa
insb
testb
inc
inc
popa
sahf
adc
add
rorb
rolb
fstp
fsts
aad
rcll
dec
leave
mov
test
xchg
mov
add
mov
pop
enter
fcoms
enter
enter
enter
dec
mov
dec
xchg
dec
roll
inc
mov
dec
inc
les
movsl
pop
and
push
cmpsl
shll
or
daa
inc
daa
mov
pop
pop
fidivrs
sbb
xchg
ficoms
fimuls
fimuls
add
lock
enter
fcom
rorb
enter
enter
dec
and
push
fisttps
dec
xchg
dec
xlat
dec
push
inc
mov
dec
inc
lret
movsb
mov
movsl
cltd
and
shll
leave
daa
dec
daa
test
and
pop
sbb
fwait
pop
aam
push
ficoms
mov
mov
lock
rorb
rolb
lahf
fstp
pop
fstps
int
leave
push
lds
enter
xchg
pop
shl
lock
push
loopne
fcoms
rorb
enter
mov
cmc
clc
sbb
cltd
enter
fcoms
leave
lds
lds
pushf
mov
mov
aam
adc
xchg
pop
cltd
jecxz
pop
lcall
ficoms
fimuls
into
mov
test
shll
popf
faddl
and
aad
pop
cs
mov
pop
xchg
es
movsl
sub
jg
pop
and
nop
sbb
clc
mov
and
or
or
mov
test
dec
leave
inc
lds
mov
push
pop
out
push
dec
lods
inc
sub
movsl
mov
adc
std
pop
cmpb
mov
das
lods
mov
cld
jg
pop
negl
mov
push
jl
jo
notl
insl
lds
add
into
lock
enter
js
mov
jg
ds
repnz
rorb
and
mov
lock
lret
iret
dec
fisubrs
frstor
mov
rcl
lods
dec
ljmp
xor
inc
int3
inc
test
cltd
idivb
sub
das
test
jge
hlt
aam
cmpsb
cltd
adc
ds
push
repnz
mov
pushaw
add
imul
enter
fmuls
imul
clc
cmp
scas
enter
fsubs
clc
adc
pop
mov
jns
mov
mov
test
test
pop
cltd
push
repz
rorb
dec
enter
addb
jge
and
adc
in
repnz
add
inc
push
adc
push
push
fsubrs
lahf
push
sbb
dec
mov
dec
or
movsb
sbbl
movsl
adc
push
lahf
cmp
jg
pop
je
outsl
pop
movb
adc
pusha
push
cltd
mov
fstpl
ror
cs
dec
lock
mov
movsl
sbb
mov
jns
js
mov
stos
jae
inc
and
out
push
ds
dec
push
roll
movsl
mov
movsb
dec
and
cmpsl
loopne
jecxz
mov
movsb
sub
call
daa
cmp
pop
nop
aas
iret
pop
test
les
and
fstps
push
addb
fs
push
mov
xchg
lret
fidivrs
sub
mov
fstpt
lods
cmp
movsl
mov
jl
add
xchg
jne
movsb
xor
jae
scas
stos
bound
fnsave
notl
aaa
inc
inc
jl
push
adc
and
shl
fbstp
dec
sub
sub
mov
dec
std
mov
xor
jno
das
loope
and
sub
add
cmc
movsl
xchg
and
stos
push
mov
stos
ja
mov
call
pop
jbe
icebp
movsl
and
jg
pop
add
pop
fisubrs
lods
cmp
ja
scas
jmp
sub
dec
dec
inc
push
mov
adc
pop
ret
inc
sbb
push
dec
outsb
cmpsb
cmp
test
clc
jae
xor
inc
add
adc
std
and
and
and
rol
loope
aas
fstp
xor
shll
push
sbb
lea
jl
aaa
add
adc
or
pop
es
inc
mov
cmp
in
mov
gs
aas
rcrl
push
and
shrb
mov
dec
movsl
and
jl
jg
pop
lea
int3
pop
call
inc
pop
ret
and
add
rol
loop
shll
cmp
fstl
xor
lods
inc
jns
push
movsl
cs
inc
lcall
adc
mov
cmpsl
ljmp
sbb
aas
lea
data16
in
sarb
orb
cli
es
inc
ficomps
xor
mov
adc
sub
lock
fs
pop
jne
xor
dec
or
test
aas
sbb
aad
and
in
std
je
xor
div
pop
cmpsb
cmp
and
mov
fidivs
sbb
push
mov
sub
inc
xor
add
dec
in
dec
lret
movsb
jbe
adc
sub
into
add
jno
xor
push
test
cmp
and
sub
test
xor
sar
mov
cmp
dec
fisttpll
fists
mov
cmp
or
dec
daa
and
mov
pop
std
push
shrb
loop
shlb
loope
ds
xor
push
lods
dec
push
out
pusha
add
lock
enter
pop
jno
outsl
or
enter
cmpsb
inc
pop
add
pushf
movsl
clc
and
nop
cmpsl
sub
repz
dec
mov
mov
and
cmpsl
and
add
nop
xchg
jmp
stos
subb
mov
in
xor
mull
inc
mov
fsubr
push
imul
jmp
int
and
dec
add
movsb
dec
inc
fistps
aaa
outsb
sarl
sahf
mov
xchg
lahf
xor
out
cmp
outsb
shll
je
inc
int
adc
jae
enter
cltd
add
lcall
ds
xor
mull
jl
stos
add
lcall
iret
fmuls
addr16
and
bound
jl
push
adc
dec
or
dec
xchg
cli
cmpsl
cmpsl
loop
je
xor
divl
in
ja
aaa
ljmp
clc
pop
cmp
push
xchg
mov
sub
pop
fdivrs
xchg
pop
xor
int
fdivr
jg
aam
nop
mov
push
outsb
and
test
shl
pop
idivb
cmpsb
mov
dec
fwait
dec
xchg
dec
aaa
push
cmp
cmc
mov
inc
mov
mov
mov
lods
test
test
ss
mov
adc
movsb
cmc
and
cmpsl
mov
int3
daa
mov
out
outsl
lahf
call
stos
shrb
inc
adc
mov
cli
jg
mov
movsl
jg
add
pop
lcall
cmp
mov
data16
jns
cmp
mov
inc
inc
fistps
mov
stc
lahf
mov
cld
addr16
js
or
xchg
rcr
std
mov
nop
dec
mov
clc
cltd
lock
pushf
je
jnp
xorb
test
stos
fsubl
jl
sahf
jge
mov
das
sbb
cmp
jg
fstpl
stos
lea
dec
and
aas
shr
push
mov
scas
jl
add
das
je
test
cmp
test
xchg
xchg
xchg
repz
movsl
xor
and
jo
je
cmp
mov
clc
scas
mov
add
popa
aas
cmp
fbld
pop
loop
shrl
cltd
mov
int
dec
ftst
xchg
gs
test
cmp
cld
xor
lcallw
xor
jl
cmc
push
xchg
and
aam
or
je
add
pusha
js
loopne
popa
add
mov
ds
cmp
js
jnp
repnz
fs
test
pop
cmp
sub
pop
stos
ja
inc
pop
sar
dec
sbb
mov
stos
in
sbb
cmp
pop
add
insl
pop
loope
rclb
dec
insb
mov
cmp
add
cmp
pop
addr16
loopne
pop
push
fldt
push
sbb
ret
mov
es
jmp
lahf
fidivrs
movsl
leave
and
insb
outsl
mov
popf
sarl
scas
sahf
pop
pop
aad
je
push
mov
fdivr
out
jae
arpl
test
fwait
or
jge
das
add
out
mov
cmpsb
sbb
lret
mov
scas
or
and
dec
pop
push
mov
jle
mov
in
pusha
pushf
jns
mov
repz
jl
repz
stos
mov
pop
movsl
mov
fcomps
fstpl
popa
stc
inc
js
test
jecxz
pop
push
out
outsb
xchg
lods
mov
fs
notl
cmp
sbb
mov
lret
ficomps
push
cmc
rorl
inc
push
mov
mov
ljmp
cmp
sbb
es
movsl
xchg
fisttps
test
cs
add
pop
fistps
repz
dec
aas
in
out
sarl
jb
les
mov
lods
loopne
insb
test
pushf
jecxz
jl
jp
sbbb
jns
popa
or
xorl
pop
clc
xchg
loopne
mov
sub
fs
sub
cltd
add
fs
sbb
test
lds
in
push
jb
stos
xchg
mov
jle
incl
cld
jb
pop
movsb
data16
ja
aaa
popl
ds
sbb
icebp
xchg
enter
fsubrs
aas
mov
mov
inc
aaa
pop
iret
roll
gs
mov
ja
xor
xchg
mov
sub
push
push
clc
mov
test
jl
jo
xchg
xor
add
cli
push
add
add
dec
clc
in
scas
sbb
push
lds
insb
addb
and
shll
fs
mov
xor
cmpsl
add
lahf
lcall
pop
outsb
cli
dec
push
push
cmpsl
icebp
fwait
inc
add
aas
cwtl
mov
out
ja
aaa
inc
clc
and
cli
add
mov
push
loopne
jns
lods
add
loop
jge
aaa
insl
test
enter
sub
pop
lock
pop
pop
movsb
and
mov
mov
jp
sbb
jg
pop
test
ss
adc
bound
mov
cmp
loope
lahf
pop
push
jb
sub
aas
push
gs
jg
enter
xor
mull
aas
cs
sub
mov
stos
cmp
scas
add
xchg
int3
jp
shrl
clc
aad
push
roll
sarl
mov
jno
mov
push
lds
test
mov
inc
jae
in
and
shll
jo
ds
mov
test
jl
lods
cmp
into
mov
or
push
ja
gs
addr16
aas
in
mov
cmp
shll
filds
pop
movsb
cmp
jns
sahf
jg
adc
cs
push
aas
ds
or
notb
rcr
sbb
in
mov
sarb
lahf
inc
jg
std
fsub
adc
and
loope
jg
fisttps
lock
pushw
mov
jl
sub
mov
add
dec
sub
jnp
fwait
mov
pushf
inc
xchg
js
cmp
int3
sbb
popf
call
dec
xor
test
fbstp
mov
mov
xor
xchg
repz
mov
xor
movsl
enter
xor
sbb
add
lret
sbb
cmp
add
mov
cmpsb
lret
cmp
inc
jg
xor
pop
xorb
cmp
jecxz
leave
mov
mov
mov
lahf
jl
jg
pop
xchg
aas
nop
push
fsubrs
inc
mov
je
pusha
lcall
dec
add
shlb
adc
cmp
repnz
andb
in
cmp
add
mov
xchg
je
jns
mov
push
mov
jg
mov
clc
push
mov
stc
dec
xor
or
cmp
xorb
pop
rclb
pop
dec
hlt
dec
xchg
push
lahf
xor
mov
outsb
out
jp
ss
cs
add
iret
dec
and
xchg
mov
out
mov
dec
addl
clc
xchg
lock
outsb
loopne
cltd
leave
fldl
addr16
push
mov
stos
dec
inc
stos
and
es
mov
out
mov
mov
mov
stc
inc
cmpsl
clc
sub
and
subb
push
mov
inc
cltd
mov
xor
dec
data16
outsb
jno
jle
cld
loopne
mov
xchg
lods
jl
xchg
scas
pop
dec
mov
jnp
add
btsl
fisubrs
or
mov
cld
aaa
adc
push
shll
jns
add
adc
push
loop
rol
roll
fstps
mov
push
dec
popa
jnp
fs
mov
aas
and
scas
adc
push
push
dec
cmpsb
sahf
push
cmp
es
movsl
stos
repnz
lcall
fstpt
jb
add
in
xchg
inc
cmp
sub
sub
dec
sbb
pop
mov
in
stos
lcall
stc
cmpsl
inc
pop
mov
xlat
repnz
orb
ljmp
mov
adc
push
cld
xchg
dec
sub
lock
mull
cmpsl
inc
cltd
push
sysenter
testl
out
bound
mov
add
pop
sbb
pop
lcall
mov
cmp
movsl
cwtl
and
mul
push
rclb
shrb
lcall
fbld
push
cmpsl
xor
xor
adc
daa
dec
test
inc
and
jns
ret
sti
lcall
push
xor
out
and
cmp
cmpb
daa
lods
out
ss
test
dec
stos
repnz
sub
push
outsl
mov
test
jg
addr16
scas
clc
cs
lods
pop
scas
mov
mov
mov
cld
lret
cmp
mov
ss
jne
test
sbb
push
jmp
stos
sub
aas
je
inc
lret
jo
lods
sub
mov
mov
mov
and
xchg
cmpb
pusha
cmc
scas
cmc
and
pop
fidivrl
add
sbb
cltd
dec
xchg
scas
inc
aaa
cmpsl
add
std
cltd
cwtl
lcall
add
scas
mov
lahf
arpl
inc
mov
pop
add
fsubrl
mov
cmp
push
cmp
sub
sbb
insl
pusha
fdivrp
mov
dec
xchg
pop
je
mov
mov
add
and
test
aaa
jns
mov
xchg
mov
mov
cmp
xor
call
lahf
fists
jg
cmp
aas
movsl
pop
and
cmpsl
xchg
addr16
nop
inc
xchg
sub
mov
rclb
cmpsb
and
daa
mov
daa
cmp
out
cmpsb
test
pop
je
inc
mov
xor
mov
aaa
repnz
xor
mov
xor
mov
xor
cmpsb
jb
daa
lods
daa
sub
mov
mov
jns
mov
lcall
cld
loopne
sub
xchg
inc
mov
xchg
xchg
test
orb
jg
cld
dec
add
in
and
jl
fnstsw
cmpb
and
repnz
add
orb
and
loop
mov
dec
jp
scas
mov
rcrl
adc
orb
ds
lahf
mov
aas
cmp
scas
sbb
loop
rol
rcr
jg
mov
je
clc
cmp
cmp
push
xchg
jns
mov
xorb
sahf
lcall
mov
test
out
jecxz
fbld
cltd
pushf
lcall
jno
mov
jg
bound
jle
push
push
push
jnp
mov
insb
mov
inc
jl
xchg
daa
mov
mov
sub
testb
jo
mov
mov
pop
lea
test
pop
cltd
push
clc
pop
ljmp
lock
mov
xor
mov
xor
dec
sub
sbb
push
es
movsl
gs
shrb
jb
jg
ja
stc
aaa
jnp
ss
fidivl
aaa
loopne
push
pushf
sbb
jl
push
push
jp
push
decl
cmp
mov
ja
lea
movsb
scas
lahf
clc
cs
mov
dec
lods
push
mov
and
cmp
sub
shll
jns
sub
outsl
stos
clc
push
pop
push
push
dec
enter
mov
lcall
out
mov
cmp
mov
pop
mov
ss
xor
jns
mov
idivb
movsb
cld
jp
mov
clc
divl
mov
jecxz
fists
lods
test
ret
xor
in
inc
push
adc
push
scas
pop
mov
in
mov
add
and
pushf
pop
jne
mov
scas
cmp
jl
or
add
mov
cmpsb
cmpsl
pop
mov
lahf
sbb
inc
stc
fistpll
xor
ja
rcll
in
insb
maskmovq
jecxz
jb
push
cltd
jae
mov
adc
cs
inc
jmp
scas
out
mov
test
mov
pop
or
pop
jp
adc
add
lock
test
sub
stos
shrb
push
cmpsl
adc
scas
loope
mov
mov
out
movsb
xor
xor
cmpsl
in
test
sub
jns
fdivs
es
enter
enter
push
popf
xchg
adcb
stos
push
xchg
cs
and
cmp
adc
add
cltd
mov
mov
popl
xchg
mov
lcall
mulb
add
sbb
dec
repnz
xchg
jg
jg
pop
stos
aas
leave
fldl
add
ret
ss
cmpsb
inc
cmpsl
mov
jo
fldt
js
sub
inc
push
loope
sub
pop
aaa
repz
icebp
push
add
adc
dec
test
inc
sbb
pusha
jl
fadd
push
inc
sub
cmp
mov
rcrb
mov
aad
inc
cmp
push
notb
jo
jae
shrb
lea
mov
or
push
xchg
imul
popa
cltd
repz
cld
negb
jb
cmp
push
jbe
stos
loop
shlb
aas
popf
pop
xchg
imul
inc
sub
mov
jl
lahf
pop
in
in
cmp
jp
sbb
jmp
mov
dec
jecxz
add
cmp
loop
sarb
repz
mov
add
cmp
movsb
in
push
or
mov
rcr
fsubrl
xor
sub
insb
inc
xchg
dec
xchg
sub
mov
data16
push
cmp
add
dec
inc
jnp
fisubrl
stc
loopne
pop
enter
test
fcoms
in
inc
push
inc
insl
fs
aaa
mov
dec
repnz
mov
imul
sbb
push
das
mov
mov
pop
jb,pt
pushf
movsb
sbb
fcompp
cmp
jb
lds
jne
mov
adc
ja
jo
xor
jge
repz
outsb
insb
div
or
imul
imulb
sbb
imul
shl
gs
repz
mov
push
sbb
std
fwait
pop
jge
clc
inc
stos
mov
outsb
rclb
mov
pop
fidivrl
jne
cmp
jo
or
imul
je
jnp
push
mov
std
mov
cmc
and
in
add
in
lahf
sarl
mov
sub
mov
jb
xlat
movsb
mov
mov
pop
mov
outsl
lahf
call
jb
mov
xchg
mov
or
sar
scas
sbb
lock
mov
sub
fisubrs
add
cltd
fstl
callw
mov
fs
mov
jae
ret
jl
cmp
int3
push
push
clc
mov
data16
in
pop
je
xor
testl
fsubrs
mov
lret
clc
add
fcoml
xor
incl
pop
mov
out
mov
mov
fsubs
xor
iret
xchg
es
jl
mov
jg
pop
lods
sbb
leave
scas
lds
inc
and
inc
push
shll
leave
inc
push
mov
push
cmp
in
enter
push
std
pusha
xor
les
mov
pop
pushl
dec
ret
or
rolb
in
and
outsb
xchg
mov
std
xor
adc
pusha
mov
cmp
xor
lods
cld
add
mov
mov
or
push
mov
hlt
jecxz
jb
or
mov
iret
sarb
aas
call
enter
pop
data16
jae
cltd
mov
push
sti
mov
cmp
xchg
sti
mov
jp
aam
in
xchg
fmul
rorb
sbb
call
es
jae
xor
inc
das
repz
nop
addr16
jb
pushf
mov
outsb
pop
or
push
sub
pop
xor
mov
in
mov
loope
push
push
jmp
test
xor
insb
and
repnz
add
shlb
and
ret
cmpsl
lds
push
push
das
jb
lret
jg
in
bound
jnp
lock
cmp
pop
cmp
mov
mov
xor
mov
jg
enter
enter
mov
aas
test
sub
test
sub
cmpsb
xchg
movsl
mov
fisubs
bnd
imull
mov
test
aam
aaa
add
push
das
mov
sbb
shll
in
fistpll
and
icebp
jg
es
pop
jmp
ss
mov
mulb
jbe
jmp
scas
pop
bound
shll
aaa
cmc
add
push
mov
adc
daa
scas
mov
cmp
scas
aaa
xor
es
sbb
jecxz
mov
mov
jge
mov
inc
mov
xor
fs
fidivl
insb
divb
divb
imulb
cli
sub
push
popa
cmp
mov
mov
xor
mov
xor
xor
mov
lods
lods
fisubrs
xor
in
jo
loopne
cmp
clc
cmpsb
rcl
das
xor
push
lods
inc
outsl
jae
pop
bound
js
adc
movsb
mov
bnd
mov
cmpsb
push
cld
cwtl
cmpsl
ja
adc
jg
movsb
jnp
sub
adcb
in
es
xchg
cltd
cmp
test
stos
divl
int
shlb
adc
outsb
and
or
je
and
std
enter
cs
lahf
std
loope
or
push
jge
inc
mov
dec
mov
mov
std
mov
cwtl
jo
mov
jmp
movsl
adc
lahf
repnz
mov
xchg
mov
loop
jns
push
jb
mov
add
jmp
lcall
push
fildll
aas
sub
scas
lds
es
cmpsl
scas
pop
test
fs
mov
imul
jb,pt
cmp
loopne
sub
xor
push
sub
movsb
bound
inc
cmp
sub
movsl
xor
and
in
cmpsl
xor
js
adc
pop
je
sub
push
push
jne
jge
xor
jo
clc
das
xchg
add
jg
push
push
mov
push
out
xorb
repnz
out
test
clc
inc
popa
jne
cmpsl
scas
fcom
stos
sub
pop
pop
incl
mov
pop
fdivr
inc
mov
in
imulb
mov
mov
add
jne
jb
ss
adc
testb
jns
mov
xor
mov
xor
lock
mov
cli
mov
xor
shr
xor
mov
xor
ja
es
add
repz
test
ljmp
mov
jg
pop
sbb
sub
ret
insb
jb
jbe
test
fcomps
int3
mov
mov
jg
aas
rcrb
xor
mov
insl
mov
jae
xor
and
mov
xor
xor
aaa
inc
lods
inc
sub
add
sub
test
enter
mov
mov
fisubl
popa
sub
ja
daa
mov
je
xor
jns
mov
dec
mov
cmp
pop
sbb
xor
lahf
movsl
jp
mov
inc
mov
sarb
ffree
xchg
mov
std
pop
repz
clc
jns
cltd
xchg
test
cli
bound
scas
mov
movsl
or
xor
mov
loopne
xchg
mov
cmp
xchg
movsl
rclb
mov
add
popa
inc
fistps
jo
lods
aas
push
mov
addr16
dec
out
cmpsb
fdivs
aas
lahf
pop
cltd
add
popa
xorl
xchg
adc
out
inc
aas
pop
mov
stc
fstp
jb
sub
cmpsb
add
sub
jecxz
test
xor
cmp
and
xchg
inc
push
stos
mov
jno
pop
mov
xor
and
xor
icebp
sub
pop
mov
cli
mov
lock
jns
mov
mov
adc
imulb
and
test
mov
mov
mov
pusha
scas
scas
cmp
into
mov
inc
jl
das
jno
mov
xchg
mov
mov
aas
sbb
jmp
clc
cmc
into
and
outsb
xchg
jmp
push
mov
xor
shlb
pop
add
inc
mov
inc
xchg
xor
jp
mov
pop
aaa
cmp
scas
inc
lods
xor
shrb
xor
cmp
sahf
push
sbb
mov
cld
rcl
push
int
or
in
fisttpll
cs
mov
cmp
xchg
mov
push
xor
add
les
lea
mov
and
dec
sub
daa
xchg
decb
dec
jo
pushf
daa
outsb
mov
push
mov
jge
stc
push
mov
sub
cmp
sbbl
inc
je
out
mov
cmp
jae,pn
ficompl
popf
xor
scas
fsubl
lcall
movsb
push
xor
dec
mov
hlt
lahf
inc
pop
push
mov
dec
std
add
xor
cmp
jl
adc
and
cmp
jle
movsb
inc
idivb
lcall
jns
jo
sbb
call
push
test
mov
ficoms
es
inc
add
stos
jae
jg
sbb
mov
mov
mov
jns
mov
adc
push
loopne
mov
xchg
xchg
sub
fisubrs
sub
scas
cmpsl
mov
cmp
fadd
xor
negl
ficoml
push
mov
sub
int
or
cmp
mov
mov
stos
negl
dec
jl
pop
pusha
scas
stos
jne
xchg
jo
ja
fwait
in
sbb
outsl
popa
jecxz,pn
call
mov
es
enter
inc
cltd
inc
aaa
ret
pop
mov
mov
xchg
sarl
pushf
mov
mov
roll
lcall
pop
pop
jg
fisttpll
and
cmp
mov
xor
mov
cld
scas
scas
jne
pop
adc
cli
sub
mov
popa
cmpl
mov
cmp
test
imul
mov
mov
mov
mov
pop
fdivrl
xor
add
adc
fcoms
notl
ljmp
mov
mov
jg
outsl
cmp
pop
movsb
cmp
xchg
or
daa
inc
mov
cmp
mov
push
inc
imull
xchg
ret
inc
mov
mov
fsubp
js
mov
cmpsl
pusha
nop
test
fsubp
jg
cmp
movsb
xchg
popf
mov
cmp
jno
mov
cld
hlt
xchg
sarl
jbe
mov
mov
cmp
pop
dec
push
xor
dec
push
push
arpl
pop
sbb
xor
sbb
in
lret
ds
scas
roll
decb
xor
popa
daa
incb
sbbb
ret
pusha
out
das
popa
jp
xchg
push
mov
shlb
stos
scas
sub
jg
mov
pop
insb
push
dec
ss
mov
add
sbbl
out
out
scas
in
imul
mov
daa
mov
cltd
test
cmp
mov
in
jg
sbb
ja
out
push
dec
int
lods
outsl
mov
jp
push
idivl
bound
add
cli
push
mov
cld
and
dec
repz
jp
add
mov
inc
xchg
out
add
sbb
movsb
ficomps
scas
xchg
out
cli
cmp
mov
xor
loopne
inc
dec
loop
push
jo
jbe
in
mov
pop
dec
cmp
aam
mov
sbb
shlb
std
xchg
scas
jmp
jp
aas
push
pop
mov
inc
fidivrs
and
mov
xchg
test
mov
mov
and
repz
lods
mov
sbbb
xchg
jle
mov
test
sbb
sub
loopne
cld
xchg
test
fistps
mov
sub
add
inc
jg
scas
jmp
sbb
add
cltd
out
in
test
loope
pop
sbb
fidivrs
push
inc
bound
loopne
negb
push
sub
inc
mov
mov
pop
dec
pop
push
sbb
mov
loopne
int3
enter
cs
and
pop
pop
scas
out
jo
shlb
mov
mov
fiadds
cmp
or
mov
ljmp
je
cli
push
push
mov
push
adc
jmp
xor
ja
icebp
or
mov
imulb
jns
lods
lods
movsl
shll
mov
out
mov
xor
xor
rcr
aad
roll
ret
leave
inc
es
xchg
stos
mov
cmp
mov
ds
push
pop
inc
frstor
push
mov
bound
adc
xorb
mov
xor
mov
sub
cmp
sbb
xchg
cmp
lahf
mov
rcrb
mov
cli
push
cmpsb
adc
cwtl
lods
jb
leave
inc
aas
adc
mov
cltd
out
add
lock
add
pop
jb
enter
cwtl
mov
mov
mov
es
rcrl
mov
movsb
or
add
push
xor
loope
sbb
pusha
xchg
jg
call
imul
and
cli
int
xchg
popa
pop
sahf
adc
cmp
lea
jmp
fistps
popa
lock
xchg
mov
xchg
dec
loope
pop
fs
cmp
mov
xchg
jne
xchg
mov
and
pop
mov
inc
jne
xor
hlt
shll
cmc
dec
das
js
xor
cmp
mov
push
js
dec
pushf
insb
jns
jns
aad
sar
lock
cwtl
es
cmp
fiadds
inc
inc
add
jae
stos
icebp
pop
inc
cmp
cmpsl
leave
repnz
mov
popf
push
lods
rolb
addr16
mov
push
add
movsl
mov
out
lods
inc
add
mov
mov
mov
scas
je
cltd
pop
cli
xchg
mov
cmp
cmp
jb
ds
xchg
jp
aas
xor
js
inc
shrl
sub
jl
das
ret
lahf
mov
outsl
push
lahf
in
jge
cld
jg
clc
push
xchg
push
es
inc
adc
and
daa
das
pop
xor
xor
cmpsb
std
cs
lods
daa
sub
lods
mov
movsl
pop
insb
repz
testl
add
mov
scas
clc
adc
loope
sbb
push
push
xor
xchg
cmp
pop
scas
sbbb
xlat
and
xchg
lods
mov
shlb
jns
dec
cmpsb
imul
lea
mov
mov
pop
add
imul
sbb
mov
xor
stos
pusha
mov
mov
dec
pop
sbb
and
xor
das
test
lea
pop
shll
mov
stos
hlt
orb
pusha
ficomps
pop
xchg
cmp
adcl
xchg
push
push
jno
jno
cmp
mov
movsl
mov
lcall
jg
pop
sarl
or
sarl
imul
dec
ds
mov
test
jnp
loopne
inc
push
testl
shlb
jae
insl
mov
sbb
addb
movsb
and
bnd
mov
mov
jno
mov
rcrb
cwtl
mov
add
mov
cltd
scas
je
cmp
mov
enter
cmp
xchg
inc
jp
mov
cmp
xchg
fnsave
mov
lea
xchg
mov
cmp
nop
or
mov
pusha
xchg
pop
fs
inc
push
aas
ss
xor
mov
jl
movsl
sub
outsl
popa
in
pushf
insb
int
jmp
cmpsb
int3
popa
in
test
mov
pop
add
in
jecxz
push
sbb
mov
in
loopne
lock
pop
pop
mov
testl
inc
movsl
jne
mov
xchg
sub
call
sub
lods
mov
and
js
fdivrs
mov
aad
fcoms
clc
adc
cmpb
adc
adc
sub
sarb
outsl
enter
stc
and
push
adc
cmpsl
mov
sub
pop
loopne
mov
lahf
pushf
add
lock
adc
shrd
fdivrs
push
lea
gs
gs
pop
mov
mov
je
dec
cmp
repz
mov
lods
adc
pusha
into
test
hlt
fadds
push
lahf
sbb
add
das
add
sti
lods
jmp
cmp
cmp
mov
push
pop
cmp
mov
mov
and
add
idivl
adcb
dec
ja
es
inc
and
in
jo
or
aaa
loope
sub
lods
fbstp
repnz
jge
mov
xchg
scas
push
fsub
scas
adc
push
js
das
cmp
jb
push
cli
and
loop
ror
push
xor
fs
test
add
arpl
pop
insl
clc
lcall
jae
idiv
jecxz
cmpsb
call
hlt
das
sbb
daa
imul
xchg
test
jg
pop
lret
mov
ljmp
lahf
fdivrp
fnstsw
and
mov
mov
xchg
xchg
adc
push
xchg
inc
mov
mov
adc
jne
repz
adc
cmp
loopne
pop
mov
xor
cmpsb
out
mov
data16
lcall
jnp
jg
pushf
mov
mov
inc
mov
inc
mov
xor
out
ret
xor
jge
insb
mov
xor
xchg
mov
mov
fdivs
mov
cmp
add
shll
fld
ss
dec
loopne
sarb
fsubrs
xor
rolb
testb
bound
ficoms
andb
inc
mov
subb
jle
mov
je
jns
mov
outsl
test
mov
jnp
inc
addl
jb
sbb
cld
dec
stos
dec
fs
addr16
xchg
jmp
ss
and
push
jg
cli
sub
fimuls
fsubp
cmp
scas
ret
dec
adc
in
add
jl
jp
mov
shll
xchg
add
lahf
add
xor
imul
fisubl
mov
inc
rolb
jo
scas
jb
out
das
andb
pop
fstl
push
repz
inc
jo
aaa
ds
out
das
add
popa
fdivrp
mov
xor
stos
mov
xchg
shrl
xor
xchg
mov
jns
mov
fsubrp
ds
lods
adc
pop
jge
jmp
insb
sti
cltd
cs
jmp
fcoml
out
or
sbb
ds
repz
rclb
in
loop
fisttps
testl
inc
daa
lods
mov
fidivl
push
jno
dec
push
insb
or
and
jmp
jno
add
repz
stos
lea
mov
cmpsb
xor
shrl
loopne
pushf
scas
cmp
movsb
fimull
aaa
push
outsb
inc
inc
inc
movsb
rcrb
fwait
movsl
xor
sub
das
icebp
popa
out
mov
xchg
movsb
icebp
pop
cld
jg
push
xchg
jo
lods
adc
shl
and
and
mov
mov
repnz
push
pop
test
inc
add
out
jmp
mov
dec
rcrl
sub
movsb
xor
xlat
mov
sbb
sti
repnz
add
popa
mov
inc
loopne
inc
jb
aas
xchg
out
mov
ds
daa
cmp
jl
popa
mov
addb
mov
je
xlat
xor
mov
mov
inc
pop
daa
push
cmpb
pop
dec
push
lret
sub
add
sti
ss
and
test
loopne
dec
dec
ljmp
pop
loope
mov
movsb
xorb
idivb
sbb
scas
loope
mov
mov
add
mov
cltd
negb
jg
cmc
int3
out
pusha
test
sbb
out
add
mov
jo
aad
jnp
daa
shl
mov
inc
push
movsb
sbb
outsb
es
pusha
sub
mov
push
icebp
movsb
add
js
dec
xchg
jecxz
lods
loope
cmp
push
mov
lods
xor
jbe
sbb
dec
mov
lods
xor
insb
scas
div
sbbb
out
in
loopne
mov
jp
imul
cmp
inc
enter
pop
ds
daa
mov
and
lods
and
cmp
push
mov
je
cltd
aaa
cmpb
ret
pusha
mov
mov
loope
mov
in
push
xor
cltd
and
clc
insl
add
or
dec
and
jbe
fistpll
idiv
and
shrl
insl
lcall
stc
jno
jbe
mov
cmp
outsl
push
xchg
movsb
in
sbb
ficoms
mov
sbb
movsl
shll
roll
sbb
push
subl
test
mov
imulb
std
int
popa
jle
xor
loop
shlb
loopne
add
out
adc
mov
sti
rolb
jo
mov
xor
adcb
and
out
int3
jle
dec
mov
testb
inc
loope
loopne
jecxz
sahf
push
jge
outsl
cltd
adc
ja
push
rclb
fs
test
icebp
mov
fmull
int3
push
xchg
inc
mov
imul
cmp
shll
cmp
lods
loop
rorb
repz
cli
movsl
push
sbb
jb
fildl
inc
dec
mov
xchg
movsl
xor
add
inc
sbb
add
add
and
mov
dec
and
stos
mov
aas
cmpsb
repnz
inc
loop
xchg
mov
xchg
fisubs
movsb
ficoms
fstl
outsb
jbe
and
sub
jb
or
out
xchg
jp
mov
push
jbe
clc
lods
hlt
push
loopne
stos
fsts
ss
xlat
xchg
cmp
sti
scas
jecxz
adc
neg
push
test
mov
cmc
cs
lods
imul
test
or
gs
xorl
and
cltd
add
and
sti
and
pop
add
lods
jnp
fistpl
lods
xor
xchg
daa
outsb
jae
clc
outsl
fs
std
push
es
push
repnz
popa
addr16
jae
mov
jmp
stos
and
mov
repnz
pop
mov
and
ss
lcall
cld
outsl
dec
dec
add
push
lods
xchg
adc
popa
ret
mov
mov
or
ljmp
adc
dec
add
leave
push
popa
jns
sarl
mov
movsb
cli
mov
push
shrl
xchg
cmpl
push
jae
test
fwait
mov
inc
add
xor
femms
stos
aas
daa
mov
cltd
cmp
hlt
push
in
mov
pop
jb
lcall
out
in
mov
call
mov
inc
xor
lods
cs
out
cmp
lods
adc
inc
mov
mov
mov
pop
jb
gs
movsl
fisttps
lahf
pop
mov
cmpsb
aad
mov
add
mov
inc
xor
jl
cmpsl
jle
ss
ss
mov
into
jo
and
fstl
adc
sbb
push
xlat
xchg
ljmp
in
xor
dec
jp
dec
daa
lods
sti
fidivs
loope
imul
mov
mov
sarb
loopne
jo
daa
mov
jbe
lahf
mov
and
fisubrl
xchg
rcr
movsb
cmp
adc
lods
xor
dec
and
mov
sbb
push
mov
pop
inc
out
dec
jo
inc
mov
addr16
es
test
cmpb
mov
divl
stos
mov
in
mov
jo
adcb
jge
and
cmp
cmpsl
das
push
lret
mov
lds
jnp
add
or
andl
sbb
cmpsl
inc
push
subl
insl
sub
sub
jp
mov
shrl
jo
cltd
daa
xchg
sbb
clc
ljmp
movsb
test
cmp
add
xor
cmpsb
pop
lods
std
fistps
out
jo
sub
cwtl
fstpl
inc
sbbl
notl
and
lods
add
xchg
daa
pop
repnz
adcb
outsl
adc
adc
jle
jo
jns
movsb
ds
jb
or
or
adc
ds
push
xchg
popa
lret
xor
xchg
lods
stc
or
sbb
lahf
lahf
push
fwait
xchg
testl
mov
sub
addb
cmpl
jo
sub
std
popf
shll
sub
jmp
or
insb
push
or
mov
mov
loopne
fwait
into
popa
inc
and
movsb
cmp
test
out
je
xor
sbb
fdiv
xchg
daa
xchg
mov
xorb
jb
sub
call
mov
sahf
pop
imul
andb
xchg
cli
aas
pusha
lret
icebp
daa
lods
cmp
push
rcl
sub
rclb
insb
sti
jnp
lods
inc
xchg
jo
fwait
mov
adc
lods
hlt
fisttpll
xor
popa
jnp
mov
jnp
loopne
or
xchg
add
repnz
cmpsl
mov
mov
jb
mov
shll
add
scas
sub
repz
lahf
sbb
mov
mov
jne
cmc
jmp
lods
xor
mov
cmc
mov
popa
mov
ret
mov
outsb
in
lock
jns
ja
jae
jmp
and
movsl
pushw
lds
cmpsl
jecxz
jg
movsb
cmc
xor
push
mov
inc
dec
mov
sti
xchg
movsl
xchg
outsl
mov
push
aaa
js
jmp
jbe
jle
repnz
mov
pusha
ja
mov
mov
aas
cmpsb
jp
gs
pusha
lahf
daa
imul
pop
and
std
or
negb
pop
mov
ds
daa
lods
jg
fnsave
lcall
movsl
sar
add
lods
add
das
jns
pop
sbb
dec
mov
add
dec
movsl
lods
push
jns
inc
clc
jno
sub
test
fidivl
data16
test
aaa
sbb
inc
pusha
mov
fmull
ja
call
lock
ja
outsl
jge
jae
sub
stos
cmpsl
mov
push
testb
xorl
sub
xchg
and
shr
jo
cltd
cmp
lcall
loopne
and
insb
std
adc
std
cli
leave
jne
jno
test
daa
lret
daa
bnd
shl
adc
mov
ss
aaa
jb
push
push
lods
lea
push
inc
lods
mov
sbbb
push
mov
or
pushf
je
jns
scas
testl
loope
call
add
sar
insl
push
mov
mov
mulb
jns
lods
inc
fmull
xor
and
ljmp
cld
push
fs
or
cltd
cmpsl
jb
imul
stos
sub
aas
inc
or
mov
cltd
sbb
aam
cmp
mov
leave
push
push
in
aas
add
daa
fsubl
adc
push
scas
jno
adc
das
mov
in
fadds
and
add
cmp
daa
xor
int
inc
subl
mov
negb
jb
and
push
popf
int
enter
xchg
inc
pop
ja
ja
outsl
cmp
xor
inc
mov
daa
scas
fiadds
mov
mov
pop
mov
sbb
dec
rol
lods
stc
faddl
ljmp
mov
inc
jae
daa
inc
sbb
adc
test
xchg
sub
add
jg
jo
test
xor
xchg
loopne
jmp
cld
ja
pop
fdivrl
fwait
xor
xchg
push
andb
jae
sahf
jns
mov
xor
mov
shll
inc
cmp
lcall
mov
mov
sub
fimull
pop
out
pop
testl
mov
scas
mov
xchg
jge
mov
sub
mov
inc
aas
cmp
movsl
jne
sub
mov
xchg
rorl
popa
popa
pop
gs
cli
lods
mov
rolb
mov
mov
popf
jns
xor
add
add
mov
lret
fcoms
call
and
pop
lret
jns
cwtl
stos
cmp
nop
mov
xchg
sub
sbb
fwait
mov
aas
jle
popf
fcompl
inc
sarl
int
sub
pop
jmp
mov
fmul
lcall
ljmp
roll
movsb
shll
mov
mov
add
lods
lock
mov
mov
add
cltd
push
jno
negl
adc
xchg
and
cmp
xchg
aas
jmp
mov
jno
and
inc
lods
test
jnp
in
jle
jns
mov
leave
dec
lcall
adc
sub
js
xor
repz
inc
aas
pushf
stc
clc
sbb
in
das
lea
scas
repz
sub
data16
mov
and
sub
sbbl
xchg
pop
imul
mov
das
movsl
mov
jl
jge
mov
push
xchg
daa
sub
mov
fstl
outsb
sbb
mov
loop
rorb
roll
mov
lcall
test
in
mov
in
xchg
mov
and
repz
mov
into
imul
js
adc
cmp
js
xchg
jecxz
dec
cmp
mov
sti
jns
sub
lahf
jle
fcoms
jb
and
stos
jg
sbbb
stos
xor
xor
sub
jns
sbb
jp
mov
cmp
mov
adc
xor
test
repz
shl
sti
mov
xor
jge
push
cmpsl
jle
jnp
cli
dec
cmp
xor
mov
aaa
mov
jno
xor
ja
sub
popa
sti
das
sti
sub
sub
mov
test
mov
cli
sub
movsb
pop
lds
ss
mov
repnz
jo
mov
aaa
inc
mov
inc
xchg
scas
jne
jp
lcall
xchg
xchg
xchg
movsl
xchg
cmpsl
daa
daa
psraw
shrl
xor
in
scas
mov
scas
insb
mov
cmp
mov
mov
stos
scas
jnp
loopne
xor
mov
insl
fidivs
das
test
cli
sub
cmp
mov
out
lds
rcrl
or
insl
daa
ss
fdivrs
mov
movsb
jle
xor
xor
xchg
lods
scas
jmp
lods
lcall
mov
mov
call
daa
mov
cmp
cmpsb
xchg
inc
inc
ds
movsl
mov
stos
fistl
cmpsb
cld
clc
nop
jnp
jns
fs
data16
inc
mov
xchg
icebp
jg
cmpb
mov
pop
mov
pushf
mov
sbb
xor
es
adc
ss
das
cltd
std
mov
push
incl
lods
ret
inc
in
clc
cmpsl
jp
sti
mov
idiv
shr
jp
jb
and
jo
ss
repnz
imul
cmp
lcall
xchg
mov
ja
push
test
fs
movsb
lods
jns
mov
repnz
fsubr
inc
insb
in
cmpsb
jmp
out
adc
add
lds
call
fisubrs
ljmp
in
fs
out
xor
out
data16
andl
add
jle
out
loop
insl
cmpsl
mov
jl
std
daa
nop
ds
xor
shrb
cmp
adc
jecxz
dec
xor
aaa
add
scas
cmp
inc
mov
in
lcall
jge
cld
es
fadds
jo
cmp
add
xor
sub
ds
xor
repnz
fsubrs
loopne
and
lods
shlb
sti
jl
cmp
je
xchg
sub
sub
inc
jmp
and
cmp
aaa
ret
sub
sbb
jl
mov
cmp
sub
pop
cmpb
sbb
cli
scas
add
outsb
scas
ds
data16
add
pusha
xor
xchg
sub
xor
mov
sbb
jne
inc
das
daa
ljmp
jg
jne
lcall
inc
gs
std
cmp
jo
mov
das
xor
and
add
ds
aas
xchg
in
push
stos
cmp
cltd
movsb
inc
sub
sub
xor
je
cmp
js
popa
mov
push
xor
cmpsl
sub
lods
inc
pop
repnz
cmp
ss
sub
sub
in
add
jge
clc
es
ds
add
mov
je
pop
inc
jb
cmp
loope
xor
sub
fs
stc
icebp
inc
rcr
repz
xchg
scas
xor
popa
das
es
scas
pusha
cmp
aaa
sti
jle
sub
daa
fs
adc
xor
mov
xor
lods
xor
sub
jb
sarb
cmp
jb
xor
inc
shrl
jle
cmpsl
stc
xor
out
mov
mov
cmp
lock
jge
jnp
js
dec
sub
in
rolb
xor
mov
push
shrb
aas
stos
in
cmp
mov
mov
mov
ss
je
xchg
push
aaa
ljmp
mov
mov
fwait
scas
cmp
stos
pop
aam
stos
push
stos
loope
cmpsb
lds
movsl
push
mulb
push
lods
rorl
xchg
dec
cmp
mov
xchg
daa
xor
sar
aaa
es
rcr
mov
xchg
cs
lods
adc
scas
rcll
xor
das
inc
fisubrs
sti
push
pop
int
xor
jno
xor
imull
xchg
aas
clc
popa
inc
pop
inc
shll
xchg
jnp
mov
pop
inc
fadd
lcall
xchg
jge
xor
mov
cmp
mov
cmp
lods
or
mov
je
xor
cli
aas
scas
jae
repz
sub
jl
lods
out
jecxz
jbe
test
aaa
bound
ljmp
dec
xor
loopne
scas
enter
cmpsb
lods
lods
jne
daa
das
daa
stos
daa
sub
mov
cmpsb
test
movsl
xchg
xchg
lock
stc
ja
xor
mov
cmp
idivb
lods
dec
sub
pop
cmp
sub
rcrb
push
and
jne
jb,pt
cmp
call
push
cmp
xor
shrb
shrl
inc
rep
fs
jge
clc
mov
xorb
mov
js
xor
sub
stos
push
cmp
fwait
das
ja
mov
inc
cmp
cmp
cmp
aas
or
xor
dec
cs
mov
mov
sbb
es
clc
cmp
cmp
ss
aaa
mov
es
sbb
mov
inc
mov
xor
int
mov
xor
mov
out
mov
imulb
sub
shrb
int3
fwait
aaa
sti
je
mov
add
cmpsl
jne
ret
andb
add
repz
mov
fdivl
push
xor
cmpsb
lods
roll
scas
xchg
sbbb
fisubs
and
mov
je
xor
testl
in
sbb
lds
es
aaa
xchg
cmpsb
mov
pop
out
dec
addr16
jge
cs
enter
mov
fnstsw
lock
ret
pop
jl
cmp
push
cmp
xorb
ret
xor
sbb
ljmp
and
insb
pop
xor
sub
pusha
mov
aas
out
jg
xorb
xor
mov
cmc
jne
inc
jns
ljmp
push
mov
sub
sbb
and
jo
jae
fdivrl
cmp
lods
enter
mov
cmp
lcall
std
mov
push
mov
insb
stos
outsb
cmpsb
lret
repz
mov
mov
mov
lods
scas
daa
test
add
add
sub
std
mov
dec
add
sub
test
sub
stos
daa
sub
mov
push
movsb
cmpsb
mov
repz
inc
jl
adc
and
popf
xor
sti
mov
and
cmp
adc
xchg
lcall
xchg
mov
jge
mov
cmc
outsl
faddl
ds
test
test
repz
xor
lods
sub
sub
mov
cmp
pop
stos
cltd
iret
jmp
mov
cwtl
mov
dec
mov
sarl
out
mov
call
lods
and
mov
sub
into
and
sub
mov
jnp
mov
cmpsb
aas
je
xor
testl
ljmp
aaa
mov
outsb
mov
cmp
mov
jle
out
bswap
add
mov
push
into
ss
inc
repnz
mov
mov
test
mov
ds
xor
imul
adc
xor
lock
xor
shl
pop
mov
sarl
add
sub
or
push
jmp
jno
mov
cs
rcr
xchg
hlt
pop
xor
sti
fisubrs
push
sub
jp
shlb
push
lods
sub
pop
stos
xchg
mov
mov
mov
lods
mov
sbb
icebp
cmp
pop
xchg
ds
fs
jo
push
std
xchg
ret
adc
jae
movsb
js
dec
pop
mov
mov
xor
mov
clc
jo
mov
cmp
mov
mov
out
cmpsl
nop
out
out
inc
cmp
xchg
mov
std
scas
cld
adc
xchg
ds
jo
mov
mov
cmp
inc
xchg
add
or
mov
cmpsl
cmp
stos
mov
inc
nop
movsl
nop
mov
clc
mov
std
sub
xlat
data16
hlt
cmp
ret
push
cmpb
clc
test
and
out
aas
push
jle
mov
aam
out
lods
sbb
jl
rcrl
xor
je
repz
test
repz
inc
insb
jbe
mov
jle
mov
lock
sub
movsb
cli
xor
cmpsl
outsb
aaa
cwtl
movsl
xorb
stc
loop
push
clc
jg
cmp
ljmp
and
scas
jnp
out
movsl
imul
test
xor
popa
sarl
push
mov
pop
and
jmp
and
mov
push
mov
rep
test
fldenv
cmp
jae
aaa
mov
mov
idivb
sub
sbb
hlt
popa
mov
mov
cmp
sbb
jne
mov
xchg
ja
mov
hlt
cmp
mov
mov
mov
popf
add
inc
shll
lock
sub
rclb
cld
lods
sub
sub
addr16
mov
cmp
aam
inc
mov
mov
xchg
mov
imul
sub
jmp
sub
add
ljmp
xor
jg
push
cmp
mov
aaa
jno
scas
pop
je
cs
es
outsb
cmpsl
fs
test
xor
sbb
repz
inc
ds
mov
lock
xor
jno
fsubrs
scas
mov
ljmp
xor
scas
jecxz
jl
and
repz
pop
cmp
ja
xor
cmp
repnz
sub
sub
cmp
cmp
cmp
xor
aaa
push
mov
scas
gs
scas
xor
cmpsb
mov
mov
mov
xor
aaa
push
sbb
jbe
sub
cmp
es
movsb
mov
cmp
fnstsw
xor
repnz
jne
xchg
cmc
push
inc
cltd
ss
mov
xchg
mov
out
mulb
jb
mov
and
xor
sub
mov
cs
les
ds
jbe
pop
popa
and
xor
std
xor
scas
jae
clc
movsb
popa
jmp
cmp
nop
ss
xor
fdivrs
mov
and
cmp
jae
and
cmp
sbb
jns
xor
je
lods
push
and
cmp
pusha
inc
mov
lods
scas
xor
mov
xor
jae
xchg
outsb
cmp
popa
shll
mov
sub
call
aas
mov
jnp
push
aas
mov
sbb
fidivrs
cld
ss
gs
sub
xchg
jmp
shll
pop
cmp
cmp
jg
es
xor
sbb
adc
movsb
shrb
jp
mov
xor
sub
das
std
test
cmpsb
inc
mov
lock
jp
xor
shlb
push
xor
xor
cmpsb
lods
dec
sub
cmpsb
test
pop
mov
fnstenv
je
xor
cmp
mov
outsl
push
xor
cmp
cmpsb
inc
sub
das
xchg
jnp
sub
sub
daa
push
inc
push
repz
push
mov
test
xor
lods
cmc
xchg
and
cld
inc
adc
inc
push
cmp
push
loop
shrl
in
jbe
lcall
mov
xor
ret
movsl
mov
xor
xor
test
xor
stos
sub
pushf
jb
mov
shrw
cmpsl
movsb
cmpb
jmp
cmc
mov
xor
lods
jmp
sub
sub
and
mov
imul
cmc
aaa
pop
cmp
mov
and
push
mov
jb
ficoml
cmp
push
icebp
inc
and
repnz
cmp
mov
cs
sub
lock
cld
and
inc
push
ja
xor
mov
fsubs
mov
push
sub
sub
jae
inc
cld
cmp
mov
sti
loop
jo
mov
sbb
jmp
mov
inc
fidivs
std
mov
xchg
mov
mov
push
mov
sub
scas
mov
xchg
mov
sub
push
lret
pop
add
dec
lock
mov
jo
dec
jle
sub
rcl
gs
sbb
sub
xor
shll
int
mov
xor
sbb
sub
cmpb
lock
xchg
and
sub
mov
cmpsb
cmp
stos
xchg
aaa
shll
mov
mov
mov
jl
cmp
sub
jae
sbb
xor
js
test
addr16
test
mov
mov
cmp
das
mov
and
inc
jo
or
fidivs
cld
scas
sub
test
es
jmp
xor
jecxz
push
mov
sub
xor
std
sub
das
adc
inc
xor
inc
cmp
or
add
pop
mov
and
sbb
fnstcw
dec
xor
sbb
dec
je
aas
add
out
neg
daa
jo
sub
mov
ror
push
cmc
mov
sub
fisubrl
popa
andb
sarl
mov
aad
shll
ret
push
jg
push
aaa
pop
mov
xor
jl
enter
mov
mov
cmc
je
stos
jb
es
je
xchg
pop
test
xchg
cmp
lods
pusha
sub
mov
mov
add
clc
sub
and
mov
add
mov
fnstsw
push
lods
mov
fisubrs
cld
movsb
in
mov
cmp
mov
xor
in
test
add
int
jmp
jmp
lods
cld
scas
push
mov
and
sarl
icebp
push
jb
scas
das
sub
xchg
test
cmp
movsb
cmp
mov
cmp
ret
data16
sbb
cltd
xor
aaa
enter
idivl
je
scas
cmc
sbb
popa
cmp
scas
cmp
sub
stos
or
pop
mov
lods
xor
stos
push
in
and
fs
nop
out
mov
int
neg
ret
mov
mov
xor
aaa
outsl
insb
divb
clc
xor
js
mov
mov
fnsave
mov
fs
jg
lods
jle
cmp
mov
cmp
fidivl
std
xor
jb
sub
sub
in
fnsave
sub
mov
and
add
lods
fdivrl
adc
xor
scas
insb
jo
scas
mov
xor
cwtl
mov
mov
scas
mov
jge
jo
test
mov
push
clc
stos
inc
inc
std
cmp
mov
cmpl
out
cmpb
xor
cmp
and
mov
mov
call
aaa
mov
notl
mov
inc
lock
cmp
cmp
cmc
ds
cmp
mov
push
mov
mov
push
mov
jle
cmp
push
mov
cli
xor
sub
cmpsb
xchg
ss
sub
inc
pop
cs
sub
cld
inc
cli
fwait
mov
mov
cs
push
stos
sub
xor
mov
stc
sbb
ret
jb
mov
jg
scas
push
cmpsb
sub
or
mov
jle
stos
movsb
idivl
cmp
mov
shrb
insb
cmp
mov
mov
mov
data16
and
movsl
or
je
cmp
mov
mov
shlb
xchg
mov
cli
sub
cli
xor
loop
nop
sub
sub
icebp
inc
inc
sarl
imul
iret
and
mov
mov
fs
sub
and
jecxz
cmp
subb
cmpsl
lods
bound
cmp
mov
jae
test
movsb
cmp
cmpsl
fs
jge
std
inc
mov
ds
stos
cmp
stos
jle
shll
sbb
sbb
js
shll
sbb
xchg
jmp
mov
jmp
sub
pushf
fs
ss
pop
popf
in
xor
and
clc
or
and
adc
stos
mov
inc
movsl
or
jge
cld
mov
jae
sbb
sbb
divl
xchg
stos
mov
mov
lods
sbb
ffree
ss
fs
daa
pop
cmpsl
scas
xor
insb
outsl
clc
sub
jmp
cltd
xor
pop
jg
cmpl
sar
mov
cmpsb
jno
clc
sub
and
xchg
sub
sub
lods
sbb
hlt
sbb
sbb
sub
xchg
sti
adcl
xchg
repnz
divl
jo
div
fnsave
mov
jae
divl
cmc
mov
mov
cltd
xor
aam
mov
cmp
fnsave
sti
adc
idivl
fnsave
mov
fnsave
idiv
cltd
stos
mov
jge
sub
iret
popa
call
cmp
ds
mov
shrl
ret
push
mov
iret
addb
sbb
mov
in
movsl
sbb
sub
sbb
call
jmp
ljmp
xchg
jle
test
jle
cmp
ss
mov
daa
mov
pop
lods
xor
sub
sbb
stos
jl
stos
subb
jg
and
jo
lock
icebp
push
pop
mov
ja
notl
push
rclb
xor
pop
cs
jbe
cmp
mov
ficoml
stc
idivb
test
fnstsw
mov
push
cltd
sub
dec
add
scas
nop
fisubrs
or
jno
call
cmp
sub
adc
xor
sbb
das
insb
mov
mov
cs
ds
pusha
mov
xor
cmpsl
add
xchg
sar
insb
xor
ret
lods
xchg
movsb
sub
mov
cmp
pop
push
stc
mov
hlt
sbb
ss
push
fwait
cmp
cmp
sbb
fwait
cmp
test
adc
and
push
cmp
jmp
pop
fwait
decl
insb
out
pop
mov
add
clc
dec
in
clc
dec
cs
mov
jg
mov
adc
xchg
jns
jbe
jmp
pop
mov
jmp
sbb
aaa
sub
scas
jg
jns
push
cmp
mul
aaa
idiv
adc
ret
roll
cmpsl
jnp
xchg
cmp
mov
cmp
outsl
cmp
outsl
cmp
outsl
sbb
cmpsl
cli
lret
xchg
push
sti
sub
push
add
sub
push
pusha
andb
jle
xchg
inc
ficoms
rcr
cmp
xchg
repz
sub
dec
mov
sub
sub
out
cwtl
stos
jbe
sub
out
or
pop
in
cmp
fsubrl
mov
jecxz
insb
mov
das
xchg
cmp
in
sarl
divb
js
mov
jae
stc
in
jnp
xchg
mov
insb
sahf
mov
xor
jns
push
test
scas
push
and
xor
xor
cltd
jbe
pop
jns
jae
fwait
jp
xchg
push
jg
das
push
jo
jnp
sqrtps
mov
xor
jbe
out
dec
stos
ss
addl
adc
inc
adc
rcll
out
jl
sbb
sbb
mov
negb
jnp
cmp
mov
push
jecxz
out
jp
xorb
idiv
or
pop
inc
gs
cmc
aaa
shlb
pop
jo
mul
int
jbe
mov
sarl
jle
adc
out
cltd
sti
out
sbb
xchg
sub
pop
jl
movsb
pop
mov
int3
jbe
out
pop
stos
decb
mov
push
std
lods
cmp
mov
inc
hlt
fldt
mov
nop
mov
inc
push
movsl
sub
push
daa
lods
inc
cli
xchg
fs
and
xor
ds
jecxz
out
out
mov
je
jp
sub
in
jnp
cmp
fstpt
orb
lret
mov
ja
movsl
cmpsl
add
test
sub
or
sub
xor
sti
inc
test
rcll
test
out
cmp
xchg
cmp
cwtl
mov
imul
negb
or
sub
shll
cs
jo
mov
repnz
cltd
gs
fsubl
and
outsb
into
push
imul
xorb
push
mov
push
test
sarl
je
jns
sbb
mov
and
imul
sub
jecxz
out
pop
adc
daa
das
fimull
mov
inc
jno
es
mov
movsl
sbb
xchg
xchg
fadds
test
dec
jns
pusha
daa
mov
out
jno
cltd
ja
mov
enter
inc
cmpsb
lea
ljmp
ljmp
fdivrs
imul
cmp
push
mov
data16
xor
push
cs
neg
movsb
jmp
mov
push
sub
jbe
add
data16
fcomps
sub
fs
cmp
sub
dec
lods
pop
dec
sub
adc
cld
xor
outsl
jle
lods
ljmp
sub
inc
lods
test
cmp
into
or
or
movsb
jb
cmp
xor
pop
push
ret
sub
push
scas
sbb
bnd
jae
insb
cli
push
push
jno
scas
icebp
push
mov
daa
push
ljmp
jl
daa
cld
push
mov
inc
mov
inc
in
jns
outsb
jns
mov
data16
pop
pop
jg
sub
mov
push
mov
out
ds
dec
fdivrl
mov
mov
adc
test
xchg
lret
out
sbb
cmp
mov
ficomps
ljmp
mov
mov
aam
repnz
mov
mov
mov
imul
cmpsb
scas
es
pop
test
imul
add
xor
test
cld
shrb
pop
das
mov
es
ret
jns
outsb
add
mov
shrb
xchg
in
mov
xor
cli
lahf
ret
cld
mov
insb
scas
test
test
jb
rolb
mov
shrl
jg
cmp
push
lods
mov
movsl
in
ds
repz
lods
cltd
test
pusha
ret
or
sub
jp
inc
xor
push
lods
xchg
lods
imul
nop
and
pop
pushl
imul
jg
fs
jecxz
mov
push
es
mov
cmpl
fisubrl
cmp
sbb
data16
iret
decb
lods
fwait
insb
test
test
out
xchg
jmp
xchg
jmp
imul
xchg
in
fs
xchg
out
scas
mov
andl
add
jle
inc
jge
cld
inc
jl
xor
idiv
idivb
stc
idivb
clc
js
sti
idivb
cli
divb
cmc
divb
hlt
divb
divb
div
jb
icebp
divb
lock
repz
cs
push
jl
xlat
pop
mov
mov
mov
cmpl
shl
test
es
addr16
stos
pop
inc
xchg
cmp
shll
out
loope
mov
lods
mov
aas
fisubrl
mov
rorb
inc
lfs
je
fdiv
sub
cli
in
jl
aas
dec
pop
mov
les
cmp
mov
out
mov
out
int3
mov
insb
addb
jg
lock
dec
fidivrl
push
inc
jb,pn
push
adc
inc
arpl
je
pusha
clc
mov
fcmovbe
inc
xchg
pop
cmpsb
stos
mov
je
add
outsb
pop
idivb
mov
push
and
pushf
call
pop
lcall
adc
lods
clc
push
jg
push
push
sti
aas
mov
into
push
mov
mov
lcall
jle
mov
cmp
pushf
pop
movsl
cmp
es
mull
inc
aad
orl
shll
ret
in
jg
shll
add
mov
mov
pop
dec
std
arpl
sub
dec
icebp
jecxz
mov
lods
pushf
mov
scas
xor
mov
adc
xor
fnstsw
adc
cs
xchg
sub
mov
jb
mov
xchg
jl
xchg
cltd
adc
mov
popa
sti
and
or
out
add
xchg
fimull
jg
scas
dec
insb
jae
movsl
pop
xchg
lods
xor
fwait
sub
in
push
cmp
mov
mov
mov
cmpsb
jo
pop
int3
add
pop
or
jbe
push
cmpsb
cmc
es
movsl
fdivrl
and
sarb
xor
dec
push
push
sbb
cld
aam
shl
and
dec
cmpsl
sub
mov
aas
imul
xchg
xor
mov
mov
sub
into
jb
flds
out
fldl
pop
sbb
mov
pop
pop
cmp
clc
outsb
xchg
and
insb
clc
es
test
sub
mov
test
pop
aas
insb
in
mov
mov
loop
dec
mov
sahf
xor
cmpsb
cmp
test
mov
je
clc
sbb
pop
sbb
mov
pop
scas
add
mov
xor
cmp
addr16
push
jne
xchg
scas
pusha
pop
sub
pop
fisttpll
fidivrs
pusha
xor
aas
xchg
xchg
ret
mov
push
sti
xor
mov
sbb
jbe
pop
sarb
cmc
fcoml
xchg
ret
xorb
inc
andb
mov
add
cmp
loope
call
jae,pt
jne
cmp
filds
daa
jp
aaa
pop
stos
aas
jg
cltd
mov
or
mov
add
daa
adc
sub
jno
test
cmp
mov
cmp
cmp
repz
push
in
pop
cmp
es
mov
jb
pop
fisubl
xor
es
push
xor
jo
or
cmpsl
cmpsl
mov
clc
adc
pusha
xchg
sub
es
cmp
xchg
nop
into
fisubl
test
push
mov
movsb
jge
jl
pop
lret
lahf
sbb
insl
call
xor
cmp
xchg
cs
lods
icebp
jg
cmp
mov
lods
fistps
rcrl
adc
xor
adc
mov
insb
inc
ds
and
nop
orb
xor
movsl
and
mov
mov
pop
aas
push
cmp
lock
or
in
mov
shrb
pop
lods
and
jnp
inc
mov
cmp
test
stos
jnp
jmp
mov
sub
lds
fidivrl
insb
divb
aas
pop
add
cltd
idiv
subl
fbstp
add
pushf
popa
subl
jge
in
pusha
frstor
mov
mov
std
sbb
les
or
cmpsl
jle
push
pop
fsubl
rcrl
xchg
jmp
popf
shll
fisubl
stos
sbb
and
shll
popa
sub
add
pop
mov
push
lods
mov
jns
push
insb
jp
adc
cld
xchg
hlt
scas
mov
fdivrl
or
mov
xor
mov
add
sub
fnsave
out
or
ss
sbb
aaa
std
fstl
in
fistpll
sub
jmp
jmp
xorb
sbb
mov
nop
and
mov
push
lahf
xor
shrl
adc
loope
jo
leave
sbb
fcoml
outsl
popa
add
lahf
mov
inc
mov
movsl
mov
and
and
jo
inc
mov
out
divl
imul
movsb
je
xor
inc
mov
add
fstl
mov
lds
out
clc
xor
push
repz
jge
lods
and
out
inc
pop
and
mov
mov
ja
ja
ja
adc
stc
cld
mov
imul
xchg
cmpsb
jns
dec
jo
lock
cmp
pop
push
jb
inc
dec
mov
push
int
add
addr16
mov
cmp
pushf
sbb
mov
sbbl
in
movsl
lds
sbb
xchg
mov
cli
or
repz
mov
dec
stos
add
scas
repz
cli
addr16
mul
jb
hlt
push
scas
cltd
icebp
scas
cltd
cmp
jbe
lret
cmp
movsb
inc
dec
movsl
cmc
push
pop
xor
pop
idivl
cmpsl
jo
or
mov
sahf
xchg
xor
inc
pushf
jg
inc
pop
loop
movsb
cmp
sub
add
lods
pop
inc
mov
es
repz
and
outsb
ffree
cmp
and
xorb
stos
cmp
cmp
dec
scas
add
es
adc
dec
cs
movsl
add
fbstp
mov
sahf
pop
das
add
lret
adc
rorb
inc
bound
idivl
xor
sbb
cmp
jmp
lahf
lret
leave
into
movsb
cmp
lcall
mov
jb
pop
xchg
fiaddl
orl
mov
mov
mov
mov
jmp
adc
jp
mov
lcall
adc
bound
pop
sub
push
mov
inc
rcr
jo
inc
jl
movsb
push
movsb
inc
adc
inc
stos
dec
jl
sbb
out
fucom
cmp
shll
push
int
sub
in
sbb
inc
iret
test
fisubl
cwtl
incb
cmp
sub
adc
stos
inc
lcall
jg
lods
shlb
add
stc
push
stos
mov
jg
pop
cmp
pop
popf
daa
jge
ljmp
shrb
pop
inc
add
sub
fstp
addr16
mov
cmp
adc
movsb
mov
xor
loope
fcmovu
push
mov
addr16
in
and
out
mov
push
outsl
aam
sub
movsl
ljmp
mov
jbe
cltd
ja
lcall
mov
cmp
xor
pop
sbb
in
push
mov
dec
dec
addr16
inc
dec
inc
fs
add
mov
dec
push
cld
dec
outsb
cmp
mov
mov
rol
mov
cli
inc
shl
mov
repnz
sub
test
jecxz
mov
push
dec
xor
aas
cmp
adc
movsb
sbb
lret
scas
lahf
sbbb
cmpsb
add
in
out
jecxz
jg
sbb
shl
pushf
jbe
imul
inc
insl
popl
mov
jecxz
ss
and
pop
lods
in
imul
es
lods
ret
daa
stos
push
mov
nop
stos
repz
sbb
jne
lods
es
pop
and
pop
int
mov
insb
rcll
lcall
clc
adc
inc
or
inc
stos
jb
aas
push
and
test
xchg
jo
lods
mov
pushf
adc
and
and
and
shrl
into
push
imul
in
fstpt
jg
mov
fstpl
clc
mov
pop
int
xchg
stc
mov
inc
stc
xor
mov
pop
jl
jo
xchg
cmp
neg
aaa
popa
jns
mov
xor
fimull
add
dec
jg
test
test
aas
jns
push
inc
mov
cld
dec
rorb
xor
pushf
mov
shlb
fisubrl
sbb
mov
pop
in
add
jp
mov
mov
or
popa
lcall
xor
mov
nop
pop
fistpll
mov
in
jbe
jp
jge
dec
jmp
push
push
lods
xor
es
pop
fstpt
pop
lret
pop
inc
clc
popf
subb
and
scas
fcompl
jg
xor
test
add
mov
jns
inc
mov
clc
insb
repz
mov
xchg
mov
clc
or
popa
repz
inc
and
clc
xchg
or
fadds
and
mov
sbb
imul
test
mov
stos
jl
xor
subb
jl
jl,pt
es
into
cwtl
inc
and
dec
push
in
fwait
push
mov
lods
xchg
sbb
jbe
adc
mov
faddl
jmp
xchg
jno
jns
popa
cmp
lods
subb
jbe
or
add
jb
fstps
pop
dec
outsl
ljmp
movsb
xor
insl
mov
ds
sbb
pop
mov
mov
add
out
divb
and
aas
test
lods
mov
pop
xor
cld
bound
pop
dec
push
or
mov
cli
mov
stos
and
addr16
pop
or
jg
addr16
andb
pop
jg
mov
cltd
jg
test
mov
fsubrs
insb
mov
addb
incl
inc
pop
sub
mov
push
call
fidivrl
into
popf
lock
pop
cltd
push
lcall
cld
shll
jg
pop
idivl
nop
pop
dec
push
sub
mov
push
add
cli
adc
pusha
adc
cmpsb
cmp
lahf
adc
aas
fstps
outsb
mov
addr16
outsb
es
daa
jns
mov
call
add
aaa
sbb
jbe
lods
jo
xor
sbbb
popa
std
xor
outsl
movsw
jb
xchg
sti
cmp
mov
xchg
fsubrl
mov
xor
icebp
pop
add
xor
fnsave
lods
xor
sbb
sarb
decl
cmp
scas
add
out
mov
les
ret
mov
cmp
aaa
test
in
out
ret
pop
fdivrl
rclb
dec
push
mov
mov
sti
jae
inc
cmp
and
roll
add
insl
xor
inc
movsb
add
or
lret
jg
mov
fimull
ja
inc
mov
das
frstor
jbe
and
add
xor
mov
mov
jmp
push
push
daa
mov
call
inc
out
jmp
lods
ja
or
ss
lds
ret
loope
aas
ja
xchg
add
bound
sbb
cmpl
mov
ss
push
mov
sbb
sbb
in
mov
xchg
cmpsl
add
mov
cmp
dec
cli
mov
sub
inc
testl
sub
jg
cmp
add
jne
lods
jp,pn
popa
pusha
mov
mov
mov
pop
sarb
and
loop
lret
lea
mov
sbb
adc
and
and
pop
adc
mov
fsubrl
fistpll
xlat
xor
fdivrs
stos
nop
mov
stc
stos
xor
repz
cmpsl
ljmp
xchg
inc
mov
and
inc
inc
dec
mov
dec
mov
pop
aaa
mov
cmp
lea
sub
jg
stos
push
pop
leave
cli
mov
mov
push
cltd
dec
int
mov
sti
cmp
shrb
jle
add
pusha
repz
inc
aam
out
movsb
leave
sub
leave
xor
jo
sub
mov
hlt
lahf
fcmovbe
mov
fimull
fldl
xor
inc
mov
xchg
and
push
insl
jo
inc
imul
mov
xor
pop
jo
jbe
cmp
inc
add
fldenv
lcall
or
xor
cmpb
popa
cld
aas
adc
push
lock
pop
clc
push
lock
mov
mov
mov
mov
repz
shll
xorb
mov
je
rcr
lods
cmc
mov
repz
nop
adc
mov
cmp
jbe
cmp
add
sbb
push
roll
add
jg
cmp
dec
popa
stc
cmp
lcall
cmc
es
repnz
subb
inc
mov
movsb
pop
and
mov
inc
das
shll
inc
add
push
aas
push
jnp
and
and
cmp
lods
repz
movsl
mov
nop
and
cli
and
cld
push
sub
mov
or
jbe
out
aaa
incl
pop
movsb
add
out
jle
shlb
aad
xchg
lods
std
scas
es
inc
test
cmp
mov
pop
or
mov
das
sahf
lods
inc
jl
push
in
mov
and
jg
pop
push
xor
add
push
and
pop
xchg
dec
pop
xlat
push
rolb
push
mov
mov
rclb
ljmp
fsubs
gs
lock
imull
clc
and
push
stos
outsl
add
test
test
xchg
jg
std
pop
ja
push
fsubs
jecxz
decb
dec
push
or
cmp
sub
cltd
cmp
movsl
cmp
inc
jp
lcall
cmp
iret
xchg
mov
ss
lret
es
mov
pop
insb
in
lods
mov
sub
mov
add
mov
xor
lods
jl
fistpl
mov
cmp
jp
incb
and
mov
fsubp
push
pushf
jle
xorl
les
ss
call
adc
jecxz
cmp
jmp
xlat
lahf
in
out
rdmsr
daa
mov
sub
scas
fxch
cmp
sub
lods
cmp
addr16
mov
push
cmp
sub
dec
mov
outsb
add
jb
cmp
sbb
repz
jle
xlat
lahf
inc
pop
lods
daa
loope
mov
fdivs
xor
stos
mov
out
iret
mov
lahf
test
mov
cmc
lahf
repnz
xor
push
fidivl
mov
insl
cltd
outsb
mov
int3
inc
cmpsl
mov
insl
es
mov
sahf
repz
es
movsl
les
push
xorb
gs
out
gs
test
mov
mov
mov
ljmp
push
mov
int3
mov
sar
inc
sar
push
jmp
cmp
sti
bound
sahf
dec
popf
mov
scas
push
xchg
aam
adcb
mov
and
jae
pop
je
push
roll
stos
add
inc
test
add
je
pop
in
in
push
dec
push
lea
adc
imul
cmp
scas
cmp
or
add
movsb
stos
mov
sbb
pop
mov
sub
sar
sbb
fadd
mov
mov
pushf
in
repz
mov
cli
or
jae
add
pop
push
std
aam
ret
pop
pop
adc
xchg
jns
and
jmp
jmp
pushl
lea
je
pusha
or
pusha
mov
lea
je
setge
rol
xor
daa
xor
inc
mov
sar
shrd
cwtl
ror
mov
shrd
pusha
shr
add
btr
adc
dec
not
mov
test
clc
cmp
or
call
add
sub
cmp
jmp
aam
inc
jno
cmpsl
imul
sbb
push
mov
sbb
dec
xchg
jl
scas
loope
daa
sbb
ja,pt
test
mov
fisttps
icebp
inc
insl
pop
leave
sbb
lret
aas
shll
jmp
xor
xlat
mov
mov
mov
bt
rol
jmp
pushf
xchg
cmc
mov
call
shlb
and
pop
dec
cld
imul
dec
scas
movsl
or
mov
sbb
pushf
insb
imul
fbstp
in
or
lods
iret
flds
pushf
cmp
out
js
fwait
test
bound
mov
sbb
icebp
fcomp
imul
adc
xor
in
fs
outsl
inc
xor
jb
push
sbb
fildl
imul
rorl
or
sbbb
into
popf
fs
stc
call
sub
push
vrcpps
lret
mov
movsb
xchg
inc
shrb
pop
gs
and
scas
testb
out
orb
mov
adc
jge,pn
pushf
repz
hlt
pop
cmp
push
subb
or
divb
inc
push
push
ss
cmp
push
adc
out
je
stc
pop
mov
jo
aaa
xchg
push
out
out
dec
xchg
adc
mov
inc
and
mov
cmp
fsubl
loopne
mov
mov
jmp
popa
cwtl
pop
push
and
enter
insb
mov
in
test
test
inc
cmc
pushl
lahf
lcall
xor
inc
lods
cmpsb
imul
divb
cld
cmpsw
loope
xlat
aaa
movsl
adc
gs
sub
loopne
movsl
or
ljmp
imul
roll
jno
je
inc
into
or
mov
pusha
inc
incb
nop
das
out
and
xor
out
mov
push
or
and
ds
inc
pop
shlb
xchg
call
jl
je
outsb
push
test
and
mov
dec
xor
push
xor
inc
xchg
xor
cwtl
ret
push
roll
pop
mov
jl
dec
push
cmpsb
jecxz
out
add
mov
xlat
pop
cmp
adc
js
testb
xor
jmp
push
and
aam
xor
sub
fidivrl
stos
out
fcomps
lods
aas
push
inc
incb
jne
scas
dec
inc
lret
insl
mov
fsubr
mov
add
sbb
loop
pop
mov
push
jae
xorl
clc
mov
jl
jg
add
and
fistpll
xor
xchg
fsubl
fisttps
jae
add
ficompl
push
test
adc
mov
jl
ret
or
jne
mov
fnstenv
xchg
rolb
nop
outsl
aad
daa
das
add
add
in
lock
mov
push
rcll
add
mov
cmpsl
popf
pop
jecxz
mov
cmp
test
inc
mov
daa
inc
enter
xchg
push
add
push
mov
es
std
fdivl
xchg
inc
xor
pop
dec
lea
mov
es
mov
es
call
movl
movl
lea
jmp
scas
pop
scas
lods
je
cltd
cmp
pusha
xchg
out
and
shrb
and
mov
loop
cltd
xchg
add
aaa
out
stc
jo
scas
rclb
fwait
lret
fmuls
sub
fistpl
icebp
sbb
dec
pop
or
pop
cmp
inc
or
sbbl
pop
lea
mov
or
mov
loope
das
fsubl
flds
aad
ljmp
pop
fnstenv
lahf
into
cmp
push
leave
pushl
fdivrl
xor
popa
xchg
add
and
or
xchg
and
xor
movsl
mov
and
stos
adc
push
addr16
sub
data16
data16
data16
inc
mov
pop
insl
xor
pushf
stos
push
jbe
enter
imul
inc
push
les
mov
movsl
mov
and
mov
and
push
outsb
iret
cltd
clc
pop
mov
jecxz
push
lock
popfw
pushf
or
and
xchg
push
jae
add
cmp
sbb
push
fidivrl
popa
test
or
jmp
xor
cwtl
xchg
rcrl
data16
stos
les
add
mov
ss
or
icebp
cs
sbb
mov
mov
adc
mov
popf
test
pop
xorl
scas
ret
outsl
movsl
movsb
jnp
stc
mov
dec
and
or
add
xchg
mov
lods
jmp
leave
add
int
cmp
mov
add
xchg
pop
mov
pop
mov
pop
push
cmp
sub
repnz
inc
add
dec
pop
andb
loope
clc
popf
popf
jl
mov
movsl
mov
movsl
test
mov
test
mov
mov
mov
stos
dec
lahf
push
push
sbb
sti
cmp
and
packsswb
dec
lea
test
cmp
cmp
mov
fstpt
pop
adc
and
bound
aaa
add
jp
xchg
mov
fildl
test
out
mov
cltd
dec
sub
jne
dec
pop
sbb
sub
mov
iret
repnz
xchg
inc
push
mov
xchg
mov
scas
sbb
sbb
popa
sub
mov
jbe
cmc
call
inc
in
les
add
mov
sub
jae
mov
clc
mov
in
and
jnp
and
push
out
test
push
mov
jnp
leave
orb
fcompl
cmp
bsr
movzbw
add
rcl
lea
movl
pusha
sar
mov
lea
clc
cmp
pushf
pusha
pusha
mov
lea
jbe
stc
movsbl
sub
cmc
cmc
inc
stc
mov
and
test
shld
bsf
mov
shr
call
inc
hlt
and
xchg
push
aas
out
pop
sbb
mov
fwait
dec
shrb
inc
inc
andl
test
add
enter
adc
push
add
pop
and
stc
out
mov
xor
icebp
xor
imul
gs
out
mov
inc
mov
loop
mov
fildl
and
int
pop
daa
fdivrs
scas
cmpl
mov
icebp
and
lods
adc
lret
lss
daa
aas
ret
adc
scas
jg
ret
cmp
and
std
dec
inc
lods
cmpsb
inc
push
xchg
shll
subb
sub
popa
adc
frstor
insl
jl
pop
push
popf
in
repz
lds
scas
cmpl
pop
cltd
pop
xlat
jle
hlt
repz
loopne
sub
and
imul
les
pop
stos
sarl
cmpsl
push
cmp
nop
mov
insb
pop
repnz
mov
out
and
pop
jnp
cmp
inc
fcomi
push
cmp
cmp
shlb
pop
jecxz
fdiv
push
fdivp
idivb
add
sub
mov
and
fucom
add
jne
iret
arpl
cli
in
mov
cmp
dec
jae
dec
jle
das
push
fnstsw
inc
push
or
fsubl
fisubrl
dec
mov
inc
dec
xor
cs
insb
add
sub
call
mov
pop
mov
pop
cltd
dec
cmp
xchg
or
pop
das
call
xor
repz
movsb
add
nop
xchg
xchg
mov
sub
ljmp
add
subl
pop
int3
pop
jo
or
imul
adc
arpl
lcall
jmp
loope
jmp
add
pushf
push
adc
push
add
push
pop
push
jno
push
in
push
xchg
push
repnz
lea
cs
pushf
xor
shrl
in
xchg
inc
fsubl
fstps
stos
dec
mov
push
and
subb
push
cmp
dec
sbb
cmp
leave
cmp
inc
cmp
hlt
and
stos
mov
mov
xchg
mov
adc
pop
jle
jg
mov
xchg
aam
fists
jg
lods
pop
subl
es
sar
cmpb
add
inc
push
mov
push
decl
push
mov
xor
jno
jp
xchg
inc
lcall
or
fstpt
sub
xor
dec
sub
addb
cs
std
inc
fadds
sbb
scas
adc
shrb
push
dec
mov
fidivrs
jo
sub
sbb
mov
in
inc
mov
pop
daa
mov
cmp
and
sarb
pop
push
andl
xor
pop
movsl
jge
sahf
mov
test
push
mov
std
jl
movsb
inc
and
insb
lahf
sbb
movsl
out
lret
shrl
je
loopne
stos
mov
and
xor
pop
and
insl
xlat
mov
xchg
cmp
push
and
in
lea
add
lcall
flds
cmpsl
push
movsb
cmp
imul
mov
xor
movsl
and
sahf
cmpsl
jp
mov
mov
pop
scas
mov
movsl
rcll
shr
mov
divl
fwait
test
dec
and
sub
mov
add
movsl
or
mov
loop
mov
jp
cmpsl
xor
loop
inc
shlb
mov
and
mov
add
mov
rorb
inc
cmp
fnsave
add
shlb
ret
es
push
dec
ja
jbe
add
bound
push
and
add
mov
lods
add
cmpsl
les
addr16
cmp
xchg
rorl
inc
mov
movsb
cltd
pop
xor
sub
adc
sub
es
cmpsb
cmp
lods
push
inc
push
mov
insb
jae
adcb
jge
scas
fldln2
subl
nop
sub
scas
test
push
push
fidivrs
push
xor
and
popf
bound
addl
out
mov
mov
cltd
jno
push
or
popa
adc
aad
addl
push
aad
mov
ja,pt
lea
sti
fistl
loopne
pop
jo
fistl
lods
cltd
push
inc
dec
mov
mov
pop
loopne,pn
adc
push
leave
outsl
out
imulb
push
jb
pop
push
pop
hlt
in
mov
lcall
insb
inc
lea
shlb
lcall
jl
mov
mov
cmpsb
adcb
ds
mulb
push
add
inc
cwtl
jge
xchg
push
cmp
loope
leave
sub
movsl
dec
arpl
adc
fisttpl
fidivrs
jl
bound
cs
pusha
mov
dec
mov
fnsave
inc
addb
or
mov
das
push
mov
push
push
jmp
adc
sahf
add
cmpsl
aad
es
insb
ret
out
test
sub
pop
add
arpl
mov
mov
iret
stc
jne
adc
nop
repnz
jecxz
push
data16
jecxz
mov
inc
cli
sahf
popa
sbb
inc
mov
cmpb
mov
mov
cmp
xor
repnz
data16
popa
xchg
aas
jp
cmpsl
xor
shll
sbb
sub
mov
adc
pop
and
ss
add
jle
ret
dec
cltd
in
in
popa
mov
test
outsw
fbld
sub
hlt
mov
adc
jno
andb
fsts
pop
insl
lcall
sub
mov
mov
jne
mov
and
jb
insb
xchg
les
jp
mov
aam
pop
out
xchg
mov
js
xchg
cltd
subl
sub
sti
xchg
mov
movsl
mov
lcall
xor
outsb
pop
js
push
sub
jns
in
adc
cli
hlt
pop
lods
xchg
int
mov
sub
les
jg
jge
pop
jno
inc
jns
add
jp
mov
sub
mov
test
cmp
mov
aad
test
jp
jge
mov
mov
stc
cmp
xchg
sub
pop
imul
imulb
scas
inc
rol
jl
jmp
adc
mov
sarl
jae
fnstcw
and
inc
add
stc
loopne
lods
sub
sub
cwtl
cwtl
sub
scas
mov
mov
mov
roll
jmp
add
pop
test
shl
pop
in
sub
pop
aaa
push
pop
sbb
js
cmp
mov
shl
mov
arpl
mov
movsb
pushf
cmp
ss
aam
sub
mov
adc
cmp
cwtl
xchg
subl
inc
xor
mov
adc
xor
mov
stc
sti
insb
mov
add
stc
nop
xchg
popa
arpl
xchg
insb
add
shlb
mov
mov
mov
subl
out
sub
pop
xor
or
and
mov
data16
shll
mov
arpl
mov
movsb
arpl
ss
mov
adc
aas
mov
adc
xorb
stos
and
ss
mov
adc
xor
mov
adc
mov
insb
add
stc
jns
and
sub
mov
sub
insb
hlt
aas
stc
lcall
cmpl
scas
xchg
jmp
sub
scas
je
mov
mov
rcrl
ss
int
pop
scas
sub
hlt
pop
imull
mov
nop
cmp
fbld
shll
call
sub
mov
mov
es
mov
mov
stc
add
data16
jp
outsb
and
fcmove
scas
fwait
bound
adcl
shll
sub
mov
adc
loope
pop
push
cmp
jge
mov
adc
cmp
cmp
sar
sahf
mov
lret
adcb
xchg
in
sbbl
adc
inc
xorl
jnp
lret
sub
jge
adcb
mov
les
mov
mov
fdivr
pushf
sahf
cmpb
nop
add
das
pushf
adc
lds
pop
add
das
clc
pushf
sahf
and
push
xor
data16
mov
add
mov
pop
add
movsb
pushf
and
cmpsb
push
out
movsl
adc
mov
ret
es
sbb
cmpsl
lahf
push
mov
cmp
jge
in
sub
aas
cmpsl
mov
pop
xchg
mov
xchg
loopne
and
jno
popa
pushf
fwait
push
loop
cmp
and
mov
daa
mov
loopne
adc
cmp
cmpsl
xchg
inc
orl
cli
rcr
add
js
ficomps
add
or
mov
lahf
inc
cmp
mov
sbb
push
and
jp
out
mov
inc
jge
clc
xor
jle
jp
imul
cmp
push
and
sub
lods
in
jns
test
mov
cmp
stc
nop
sahf
icebp
test
shll
dec
cs
jns
cli
mov
aaa
pop
inc
loopne
aad
cltd
shll
ror
push
inc
add
test
xchg
mov
add
xchg
pusha
icebp
push
nop
out
push
cwtl
adc
stos
outsl
sbb
scas
mov
lahf
pop
scas
test
lods
jno
xor
clc
and
and
icebp
js
and
daa
or
mov
cld
and
aaa
and
xor
bound
mov
fdivrl
mov
xchg
fstp
inc
dec
aas
test
push
bound
fwait
out
pop
mov
jo
lock
jp
pop
xorb
xchg
adc
roll
sub
rcl
popf
sbb
xorb
pop
dec
cmp
cld
xchg
dec
sbb
mov
imul
cmp
inc
pop
pop
ror
mov
lcall
shll
inc
daa
cmpsb
or
inc
rcll
or
arpl
je
inc
sbb
mov
inc
dec
mov
xchg
daa
xchg
xor
mov
mov
inc
ljmp
mov
push
in
ss
ja
insl
fwait
mov
and
mov
add
sub
mov
addr16
clc
push
xchg
into
sbb
cmpl
lock
cmp
jge
scas
cmpsb
in
mov
ljmp
pop
adc
lods
bnd
aam
test
xchg
mov
sub
pop
cmp
mov
stos
mov
xchg
mov
outsb
loopne
sbb
adc
pop
popf
or
mov
arpl
nop
scas
aam
cmpsl
xor
push
pop
sbb
mov
in
icebp
test
insl
shlb
insb
add
sahf
push
sub
lahf
popa
mov
push
sub
mov
shlb
sub
aam
rol
pop
shlb
sarb
cmp
mov
mov
fwait
push
fldcw
mov
inc
dec
bound
ds
mov
inc
nop
movsl
sbbb
out
push
mov
mov
dec
mov
mov
scas
loopne
fwait
and
lret
out
jae
mov
add
mov
add
mov
sarl
mov
cmp
cltd
idivb
sbb
xchg
sub
and
xchg
add
inc
jae
pop
fistpll
js
outsl
pop
pop
mov
add
scas
pop
and
roll
arpl
ficompl
std
push
fidivs
mov
aaa
jmp
xchg
loop
test
adc
mov
movsl
fldcw
jp
mov
adc
xchg
rorl
and
jae
inc
mov
sarb
pop
sahf
jge
cmp
push
or
js
imul
inc
fdivrs
mov
add
sbb
mov
test
sbb
mov
mov
push
cmp
aas
cltd
sub
insb
xchg
addb
sahf
and
cli
jp
mov
daa
ja
mov
jp
push
xchg
pop
jp
sub
pop
mov
ds
addr16
push
jno
pop
das
push
imul
jnp
pop
rcrb
push
shlb
dec
and
pop
inc
xor
sub
movsl
push
cmp
cld
sub
jp
push
and
xchg
es
mov
test
cmp
push
or
pop
out
jle
stos
mov
cmc
or
ja
into
lahf
adc
dec
out
std
in
jns
mov
shlb
es
cmpsb
pusha
sub
lock
test
sub
mov
scas
mov
xor
js
data16
andl
cmpsl
mov
js
mov
or
inc
mov
out
inc
stc
das
insb
mov
es
call
mov
stos
cs
dec
ss
arpl
nop
xor
pop
es
push
or
inc
and
test
dec
add
sbb
sub
push
adc
ret
push
test
xchg
lret
movsl
mov
xchg
loop
stos
push
add
les
out
inc
pop
pop
mov
roll
mov
movsb
jle
imul
mov
and
movsl
testb
pop
inc
daa
sbb
les
push
repnz
jp
sahf
movsb
es
sub
in
ucomiss
ljmp
dec
std
mov
dec
nop
rclb
scas
cs
jge
sbb
sub
inc
cwtl
hlt
sbb
xor
sub
repnz
cli
sub
xor
cmp
in
mov
mull
sahf
movsb
add
mov
popa
xor
add
xor
jle
jle
outsl
clc
cmpsl
cmp
sbb
adc
cmp
dec
sub
movsl
cmp
and
and
ss
jg
gs
mov
xor
and
jb
ss
mov
mov
and
repnz
mov
stos
sub
subl
shrb
nop
mov
int
mov
jp
lods
mov
xor
repnz
subl
mov
shrl
jg
addr16
mov
jbe
arpl
rorl
stos
inc
cmp
xor
and
and
inc
xchg
add
roll
fidivl
mov
mov
jnp
lods
jbe
or
jp
test
pop
pop
test
ljmp
push
or
cli
fdivl
loop
popl
push
and
je
adc
stos
out
js
fwait
and
into
lahf
mov
test
arpl
sti
or
jb
adcb
vdivss
inc
sahf
sub
clc
mov
sti
sahf
mov
idiv
cmp
ljmp
in
cmpsb
stc
in
inc
scas
jbe
jecxz
add
in
flds
xor
in
in
sub
push
stc
imul
rol
fidivl
and
roll
jp
test
push
add
xlat
push
cmpsl
je
mov
mov
inc
es
mov
orl
xor
and
add
test
fidivs
mov
clc
stos
add
sarl
jb
imul
daa
leave
into
mov
stc
loop
xor
call
shrb
rcrl
add
jp
daa
xchg
mov
sbbl
adc
mov
xchg
bound
xor
xlat
mov
adc
adc
cmp
add
faddl
sub
cld
rorb
lods
adc
or
jp
xchg
sahf
xchg
xchg
pop
cli
pop
pusha
cmp
cmpsb
cmp
and
cmpsb
sbb
jae
inc
sahf
sub
popa
stc
mov
sub
cmpsb
fdivl
cmp
pop
mov
mov
lock
js
scas
sahf
stos
dec
neg
xor
shrb
jbe
lret
jo
loop
xor
lret
in
mov
push
pop
cmpsb
roll
cmpsb
and
pop
mov
ljmp
mulb
test
and
xchg
cli
pop
stc
push
pop
pop
or
or
ds
sar
insb
sarb
cmpsl
xchg
or
push
cmpl
sahf
add
push
inc
shrb
rcrl
into
pusha
scas
sub
sub
xor
mov
mov
jb
je
jp
lea
jb
cmp
out
inc
sbb
movsb
into
into
pop
sub
mov
shrb
into
rcl
sub
xor
add
fwait
dec
aas
and
jno
testl
fistpll
imul
outsb
imul
jecxz
iret
mov
lahf
sahf
imul
out
xor
mov
mov
shll
and
or
cmpsl
pop
mov
push
add
pop
fisttps
sarl
das
mov
das
adc
outsl
stos
jecxz
adc
stos
test
in
daa
mov
scas
adc
enter
lret
add
and
lret
es
jno
and
mov
mov
cld
lret
xchg
lret
inc
sub
pop
push
xor
jmp
cmp
fsubl
push
jmp
push
jmp
xor
outsl
hlt
jno
cli
mov
mov
jp
xchg
addb
dec
or
xor
xchg
inc
sarl
rcll
jne
negb
orl
out
and
jb
inc
scas
fmul
sub
mov
add
outsl
data16
sbb
cmc
sub
jge
shlb
rolb
sub
subb
xor
adc
and
sub
movsb
xor
mov
sub
popf
gs
sbb
outsb
cmpsb
pushf
sbb
pop
sub
fmul
dec
movsl
test
mov
push
cmpsl
cmp
shl
idivb
sub
pop
push
rcrb
cmp
push
xchg
jecxz
mov
xor
xor
das
dec
sub
add
pop
xor
push
dec
adc
mov
add
mov
cld
mov
cmp
jle
das
push
frstor
test
push
mov
push
imul
mov
jno
mov
test
jmp
lret
push
sub
mov
roll
mov
mov
repz
pusha
jae
push
lea
sti
enter
and
mov
pusha
mov
inc
fmull
pusha
or
in
pushf
out
test
ljmp
mov
adc
adc
add
out
dec
inc
cmpsb
mov
ja
pop
pusha
std
test
and
stos
movsl
rcrl
in
sub
cli
mov
adc
sub
push
mov
push
push
and
shlb
mov
arpl
and
mov
mov
mov
xchg
adc
pop
and
cmc
sub
stc
xor
pop
ror
test
pop
test
cmp
jp
repnz
cwtl
adc
mov
mov
inc
jl
and
enter
or
jmp
jno
or
cmp
jle
jp
repnz
shrl
rcrl
mov
imull
push
movsl
lcall
mov
and
add
daa
mov
jecxz
movsl
cmp
jle
frstor
movsb
sub
fbstp
popf
rolb
adc
je
push
imul
mov
repz
cmp
inc
or
pusha
movsl
std
pop
lret
push
xor
movsl
pop
pushf
jl
popf
jl
and
pop
ljmp
popf
fcomps
andl
repz
bound
scas
enter
test
ret
jbe
dec
xchg
pusha
xor
mov
adcl
cmp
subb
add
inc
and
add
mov
push
stos
movsl
push
mov
ss
orb
psubq
rol
or
mov
inc
push
ljmp
mov
or
in
mov
enter
imul
inc
cmp
jp
test
inc
fpatan
test
cmp
scas
popa
or
shlb
js
ret
adc
inc
mov
inc
mov
push
mov
clc
adc
in
pop
xchg
xchg
sarl
je
xor
out
dec
jmp
negl
and
xlat
sahf
das
movsl
adcb
dec
jge
cmp
bound
fsubl
adc
mov
pop
popf
xchg
mov
roll
add
movsl
cwtl
scas
movsb
push
leave
xrelease
punpcklwd
dec
mov
leave
lock
sub
subb
pop
sbbl
pop
call
or
xchg
mov
leave
lock
and
jmp
daa
repz
jmp
repnz
cmp
movsl
popf
in
xchg
jp
pop
inc
pop
xor
mov
inc
cmpsb
sti
stos
xor
xchg
subb
mov
shrb
sub
or
lret
mov
xchg
into
roll
sti
scas
xchg
cld
pop
pusha
cmp
jno
mov
neg
pop
popf
lcall
andb
out
push
jbe
ds
cli
mov
imul
hlt
ljmp
and
leave
int3
outsb
jmp
mov
ret
daa
aas
mov
xchg
popa
mov
test
rol
jle
jmp
mov
xchg
and
movsl
mov
adc
adc
dec
sub
dec
pop
clc
mov
sub
aaa
inc
xchg
and
mov
xchg
addb
rol
mov
jno
mov
pop
loopne
push
add
xorl
rorl
mov
popa
mov
imul
push
ficompl
fldenv
inc
mov
push
dec
cli
cmp
jp
mov
push
imul
and
ret
push
movsl
dec
mov
and
xchg
cld
popf
sti
dec
test
pop
mov
pop
idiv
cltd
data16
fmul
cmp
adc
fists
mov
jae
mov
fnstsw
mov
sahf
xchg
mov
push
addr16
mov
inc
mov
xor
cli
jg
xor
push
dec
adc
adc
loope
pop
cli
dec
push
mov
inc
xor
ret
inc
mov
insl
xchg
in
imul
pusha
jp
sarl
ljmp
dec
pop
mov
cmp
mov
xchg
pop
lcall
mov
mov
or
and
rorl
ljmp
push
arpl
es
xor
mov
out
movsl
gs
jnp
test
mov
subb
sub
push
btc
push
xchg
xchg
popf
jb
push
cli
scas
push
push
aas
jp
stos
and
andl
cmpsb
test
jb
outsb
jno
inc
addl
test
lock
mov
mov
ds
xor
addr16
pop
loope
sahf
lods
mov
ror
aam
andl
add
fidivl
cltd
fwait
adc
stc
adc
dec
pop
sbb
outsb
hlt
lcall
mov
mov
fnstsw
movsb
cmp
push
jns
test
push
rclb
xchg
dec
out
cmp
call
mov
dec
or
pop
call
lods
mov
clc
cmp
cmp
leave
in
jo
sub
pop
pop
sbb
subl
popf
adc
cmp
into
and
lret
pop
sub
lea
pop
jg
insb
xor
mov
lock
sub
clc
dec
mov
das
subl
jae
adc
cmp
and
test
push
out
cltd
jp
data16
pop
inc
mov
scas
mov
cmp
cs
dec
cld
loopne
xor
and
stos
shlb
add
test
jno
stc
loopne
push
mov
loope
neg
inc
test
jnp
stc
sbb
stos
lahf
dec
insb
sar
aaa
xor
mov
push
test
scas
popl
loope
inc
mov
pop
push
mov
xchg
sub
cmpsl
mov
mov
mov
and
lcall
jae
lods
xor
mov
je
lock
out
cmp
sbb
dec
mov
data16
and
or
mov
jle
fs
sahf
dec
pop
or
pop
cmc
sbb
lret
or
pushf
cmp
add
push
sub
inc
ficomps
orl
xchg
mov
lahf
push
cmpsb
icebp
sub
pmulhw
cmp
push
sub
mov
enter
cmpsb
ret
inc
scas
shld
adc
daa
mov
sbb
cmp
dec
jbe
fcompl
mov
jge
add
jns
roll
push
aas
test
lahf
daa
ret
mov
rclb
pop
imul
aam
mov
pop
or
scas
sbb
or
pop
inc
insb
xchg
out
mov
xchg
pusha
mov
mov
or
enter
push
dec
and
in
addl
xor
adc
ss
or
cmp
xor
jge
aaa
sahf
ljmp
es
dec
test
cmp
sahf
idivb
and
hlt
jg
fdivl
fadds
jns
pop
shrl
add
arpl
mov
jle
pop
inc
lret
imul
negl
cmp
xchg
ss
xchg
outsb
or
in
jnp
filds
mov
push
bound
jo
adc
das
mov
cmpb
jmp
mov
iret
pop
sub
cltd
or
mov
dec
pop
jns
loopne
add
or
cmpsb
cli
jg
roll
sub
cmpsb
inc
add
dec
jno
imul
mov
inc
rol
xor
stos
inc
rcll
out
imul
sub
test
pop
jl
movsb
add
popa
mov
cmp
subl
push
xchg
mov
push
cmc
jns
xchg
out
out
cmp
outsb
dec
pusha
mov
mov
xor
cmp
inc
shrb
dec
sub
iret
cmp
int
rorb
pop
adcb
rcll
jp
cmp
shlb
push
and
mov
repz
cmpsb
scas
rol
ja
cs
ret
arpl
mov
inc
push
jle
insb
mov
xor
sub
cltd
mov
cmp
data16
and
xchg
insb
sti
push
clc
insb
out
test
test
test
xor
aam
daa
sbb
jo
jae
inc
je
mov
jle
aad
cmp
sbb
jmp
mov
sbb
pop
imul
lea
mov
fwait
adc
mov
ss
ret
push
ds
cmpsl
jle
shl
mov
sarb
jmp
movsb
jecxz
mov
loope
sub
movsb
or
mov
loopne
push
fwait
mov
loop
push
jmp
test
sub
and
out
push
cli
cmc
into
add
rorb
test
andb
notb
stos
int3
pop
dec
fimuls
xchg
in
xor
in
cld
iret
push
xchg
add
push
sbb
inc
xor
mov
push
ffreep
jno
aam
xchg
popa
movsb
adc
inc
rolw
cld
outsb
push
repnz
aam
in
push
cmpsb
dec
cmp
pop
outsl
mov
lcall
adc
push
fcompl
faddl
pop
hlt
pop
push
iret
or
lret
movsb
mov
iret
nop
je
int3
aaa
insb
mov
push
adc
cmpsb
lahf
xor
psubw
inc
out
lods
pop
cmpsb
nop
movsl
sahf
shlb
xchg
push
lods
insb
mov
sti
fildl
pushf
jbe
sbbl
mov
pop
cmp
mov
rcrb
insl
mov
shlb
sub
add
test
sbb
cmpsb
xor
mov
mov
pop
jo
xchg
dec
andb
fwait
mov
sub
cmc
xchg
mov
arpl
dec
mov
mov
mov
adc
push
jnp
cltd
arpl
add
das
insl
lahf
dec
in
cmp
xchg
ret
xchg
movsl
adc
sub
ja
sub
jnp
es
mov
and
add
es
lea
xor
insb
mov
xor
adc
nop
adc
lret
add
imul
xor
and
nop
jg
fldl
inc
inc
jle
sbbb
aaa
dec
pop
xchg
and
jne
lods
lret
fs
fimuls
lock
mov
pop
mov
sbb
sti
jo
fbld
int
cmpsl
out
or
mov
aad
mov
int
addr16
dec
out
shll
pusha
or
and
leave
mov
clc
dec
pop
mov
enter
jno
into
jno
xchg
inc
daa
into
cmpsl
xor
and
jnp
fsubr
fsubl
sbb
scas
add
add
sub
cld
ss
and
scas
loop
andb
stos
mov
test
int
es
xorb
inc
pop
cld
mov
sahf
mov
and
outsl
cmpsl
xchg
mov
into
mov
jl
xor
add
call
push
repnz
jp
push
fmuls
jecxz
mov
out
movsb
out
jnp
stc
mov
nop
sar
and
xchg
sahf
jp
cs
cmpsb
adc
sahf
jle
stos
dec
add
fwait
int3
in
clc
and
pop
pusha
sbb
fistps
in
aad
cwtl
push
inc
add
xor
mov
outsb
cli
mov
insl
int3
and
lea
in
mov
in
sbb
and
movsl
lock
xchg
fwait
inc
cmp
dec
je
fcmovbe
pushf
out
dec
mov
loop
rcll
sub
mov
loop
std
rorl
mov
daa
test
pop
icebp
sub
ljmp
rcrl
rcrb
shl
cmpsl
mov
loop
lret
push
xor
popa
rcl
scas
push
fldcw
jbe
xor
xor
or
fstl
push
adc
adc
mov
jmp
push
sub
push
popa
shr
inc
leave
and
movsl
jo
movb
inc
or
repnz
loopne
jns
inc
xlat
pusha
adc
mov
mov
jp
lahf
ds
cmp
loop
leave
cmc
mov
jo
inc
pop
and
leave
int3
jle
movsb
add
movsl
pop
movsb
cmpsl
mov
cmp
aad
dec
adc
rcr
scas
test
sbb
push
jo
sbb
lret
dec
and
popf
pop
aas
test
cmpl
cwtl
es
bound
addr16
lds
das
dec
mov
lock
add
mov
pushf
mov
shlb
jne
into
je
movsb
add
sbb
test
jp
rcrb
pop
je
and
andl
push
adc
das
xor
sub
jne
sub
subb
fdivrl
shlb
adc
xor
loopne
jp
popaw
sbb
es
insb
repnz
test
ror
xchg
lcall
test
rol
mov
rolb
sbb
adc
outsb
mov
xchg
das
loope
movsl
out
inc
add
rcl
call
sahf
add
lods
repnz
sti
adc
mov
add
sahf
cmp
or
pop
lock
or
xor
xor
jg
jno
jge
pusha
ss
sub
xor
mov
push
orl
aam
outsb
push
cmpsl
stos
pushf
sub
aas
push
scas
fcomp
xor
inc
lret
roll
lods
lock
sub
sahf
clc
dec
jmp
fwait
jae
cmp
push
push
jae
jbe
jae
mov
xchg
daa
pop
popa
lods
xor
jg
rcll
pushf
xchg
orl
out
lahf
int
mov
loop
mov
mov
pop
pop
sub
pop
jecxz
cmp
xchg
aas
pop
shll
pop
add
int3
shl
mov
mov
sub
mov
push
roll
inc
mov
repz
gs
xchg
sahf
pop
leave
add
xchg
roll
mov
arpl
daa
fsts
xchg
cs
loopne
push
cmp
pop
int
push
adc
cltd
adc
adc
dec
aas
pop
push
iret
mov
jbe
inc
jl
inc
mov
fiaddl
shll
mov
scas
jg
dec
push
mov
sbb
leave
shrl
xchg
and
mov
es
cs
aaa
sbbb
mov
pop
ret
mov
imul
fstpl
dec
push
mov
push
arpl
mov
jo
popf
sub
pusha
dec
std
repnz
add
loope
fstps
mov
xchg
shrb
int
xor
pop
sub
loop
testl
addb
popa
popa
out
cmpsl
fcoml
int3
cwtl
out
mov
push
pop
adcb
xchg
in
ds
cld
and
push
lret
and
aas
aaa
ret
lret
push
bound
mov
adc
add
fnstcw
jecxz
imul
fcmovne
loope
pop
push
leave
cmp
add
movsl
out
jae
push
test
xchg
xor
pop
inc
int
clc
daa
hlt
fistl
mov
cld
inc
ja
test
jmp
push
stos
xchg
jne
sub
test
adc
test
cmpsb
icebp
add
and
xchg
cmp
mov
cmp
pop
mov
adc
push
mov
dec
scas
xlat
sarb
dec
pusha
jno
inc
andb
adc
mov
movsl
pusha
pop
mov
jnp
or
adc
xchg
jo
nop
and
out
jle
lcall
jl
ja
es
rcl
popf
out
fidivrs
sar
nop
int
addr16
shll
and
aas
jb
fstl
rcrl
into
je
cmpsl
lcall
pop
mov
pushf
push
cld
xor
cmpsl
adc
ret
pusha
add
inc
inc
aas
jno
push
push
lods
pop
mov
test
mov
rorl
inc
stos
xor
add
jl
insb
mov
imul
movsb
xor
jbe
mov
and
sahf
adc
fnstenv
insb
dec
sub
pop
mov
mov
shlb
jnp
imul
jp
push
jg
push
out
pop
lods
rorb
push
jnp
cmp
rclb
inc
sub
sahf
fcmovbe
stos
mov
pop
mov
test
jle
rcrb
sti
sbb
pop
je
adc
mov
dec
cli
inc
xlat
adc
popf
mov
lock
add
fstpt
push
jbe
jmp
ja
sbb
popa
clc
adc
ja
cmp
xor
mov
jnp
rcrb
imul
lret
adc
mov
jbe
dec
sub
and
test
in
incl
and
in
xchg
lock
mov
call
xchg
es
adc
adc
add
xchg
les
jle
negl
aaa
fsubl
sbb
mov
xor
movsb
loopne
pop
dec
lods
fiaddl
xor
lret
nop
lret
pop
xlat
lock
sub
mov
shlb
or
and
adc
mov
in
inc
loop
aam
push
add
cmp
rcrb
je
fwait
cmp
rcrb
mov
je
adcb
shll
cmp
adc
xchg
js
shl
shlb
loopne
stc
push
addr16
pop
push
mov
pop
stos
negl
inc
push
shlb
sahf
xor
fldt
les
mov
xchg
mov
add
cmp
fsts
sub
xor
test
mov
push
and
xchg
and
cltd
fwait
inc
sbbl
sub
mov
push
sti
sahf
dec
shrl
test
mov
lods
rcl
insb
push
popa
xor
popa
mov
jne
shrb
lods
xor
cwtl
pop
push
xrelease
cltd
adc
test
daa
pop
daa
inc
in
cwtl
push
shrb
jns
dec
add
fldcw
mov
jnp
lcall
xor
cmp
jmp
adc
push
je
aas
or
sbb
mov
pop
daa
dec
std
lds
push
ljmp
movsb
pop
inc
jp
mov
icebp
mov
jecxz
pop
adcb
mov
xor
xor
adc
cmpsl
xor
in
ret
lds
daa
movb
sahf
sbb
dec
pop
xor
cld
pop
jle
xor
sahf
pushf
mov
es
xor
dec
cmpsl
movsl
addr16
adc
addr16
jbe
adc
stc
pusha
cli
test
arpl
adc
mov
xor
sahf
mov
out
dec
mov
stc
mov
adc
shl
in
push
imul
mov
add
in
lock
or
sarb
xor
xor
mov
cli
cmp
lret
and
jae
xlat
push
int3
popf
lahf
jns
mov
xor
pop
mov
pop
aad
push
push
gs
popa
pop
in
out
pop
out
jnp
inc
std
jecxz
sti
pop
lods
xchg
add
mov
push
push
dec
test
repz
nop
dec
shrl
stos
dec
jp
sub
jbe
mov
rcr
lock
sbb
in
mov
adc
scas
add
movsl
cmp
jbe
imulb
cmp
scas
out
add
xor
nop
add
jb
jnp
inc
es
les
cmp
and
loopne
mov
and
push
fisubs
dec
sbb
xor
repnz
inc
inc
push
sahf
jg
cmp
out
xchg
add
dec
pushf
add
scas
scas
cs
mov
xchg
shlb
xchg
jmp
test
adc
pop
pop
cmp
insl
insb
lds
and
push
push
mov
add
scas
sub
push
mov
add
jl
pop
pop
mov
add
mov
sbb
sahf
filds
lods
sahf
clc
xchg
fldcw
popf
add
dec
jl
popf
jge
mov
movsl
addr16
mov
jmp
mov
popf
sti
mov
and
stos
jecxz
stos
lock
jns
cpuid
xchg
pop
stc
inc
fs
lret
loopne
bound
faddp
out
jp
iret
mov
mov
jb
arpl
in
jbe
add
mov
jp
sahf
xor
and
mov
imulb
fnstcw
sahf
xchg
aas
pop
scas
mulb
std
movsb
imul
scas
in
mov
lahf
stos
xlat
icebp
cli
stos
insb
mov
cmpsb
int
sahf
stos
fisubrs
add
jne
adc
pop
jbe
add
and
call
push
adc
xor
adc
add
or
lock
movsb
mov
test
sub
adc
bnd
dec
sub
lods
pusha
movsl
lds
pop
movsl
or
mov
movsb
int
cwtl
movsb
add
test
aaa
adc
daa
sahf
sub
ss
xchg
aaa
scas
cmpsb
push
jge
inc
shll
daa
adc
int
push
aaa
mov
cltd
ljmp
or
insl
fistpll
mov
aaa
mov
push
xor
loop
cmp
sub
shll
add
pop
test
xorb
or
mov
mov
daa
mov
test
pop
adc
and
cmp
aam
lret
popf
pop
push
add
call
mov
mov
jge
popf
mov
aaa
fimull
int
pop
popf
xor
push
pop
xchg
sbb
mov
aaa
loope
inc
leave
cmp
pop
or
fnsave
lods
stos
leave
gs
xor
and
mov
stos
sub
popa
mov
movsl
pop
addl
pop
movsb
sarl
js
fwait
mov
dec
push
mov
movsl
imul
jbe
mov
dec
xor
sub
dec
or
ds
stc
mov
xor
ss
test
xor
push
int3
dec
out
mov
mov
test
push
xchg
sub
in
add
push
arpl
cmpsb
mov
sub
lds
roll
jne
adc
cltd
xchg
shll
mov
sub
pushf
movsl
loope
adc
push
push
xor
fnstenv
sbb
sub
cmp
mov
xorl
jns
inc
xor
stos
movsl
psrld
mov
jp
sahf
test
mov
cmp
sahf
push
mov
lahf
call
xor
inc
push
mov
roll
xlat
inc
imul
mov
data16
fdivr
in
in
xchg
xor
jp
mov
sahf
adc
decb
and
inc
outsb
shl
sbb
push
movsb
in
jo
cmc
and
in
scas
jnp
mov
push
inc
popf
subb
mov
daa
scas
fcomps
sbb
inc
add
push
out
daa
ret
out
or
mov
cmpsl
jecxz
or
outsb
pushf
jmp
sbb
jmp
sub
rcr
and
mull
shll
mov
jnp
sahf
xor
adc
int3
push
sub
sahf
or
xlat
mov
ss
data16
loop
ds
sti
adc
adc
mov
aad
mov
data16
adc
push
mov
popa
mov
pop
fs
fadd
sub
das
push
mov
fldt
xor
call
pop
push
hlt
sub
jnp
inc
cltd
fldt
jp
mov
je
xor
je
xor
je
enter
shrb
dec
jp
mov
xchg
popa
xor
sbb
xchg
mov
jp
out
into
lret
cmp
jbe
mov
mov
mov
out
sub
sub
xor
fiadds
push
jns
mov
mov
inc
aam
imul
mov
pop
adc
aam
nop
cmp
mov
das
cli
inc
repnz
jp
mov
cmp
xchg
hlt
fadd
repz
inc
mov
mov
negb
inc
je
sbb
adc
or
cwtl
clc
subl
xchg
shlb
out
subl
sub
cmpsl
xchg
mov
arpl
mov
pop
adc
aam
sub
xor
faddp
push
xor
int3
sub
ja
sub
jge
andnps
mov
pop
push
mov
push
scas
cltd
jp
movsl
popf
pop
push
test
pop
jne
rclb
mov
inc
jne
ror
dec
xor
fmull
mov
xchg
dec
xor
push
mov
jp
mov
scas
rorl
sbb
movsl
push
add
sbbl
push
lods
jp
jnp
movsl
sub
pop
xor
mov
rcr
pop
iret
je
adc
push
inc
sbb
jge
ret
movsl
pusha
fists
fiaddl
insl
popf
xor
shr
push
sarb
pop
rcr
data16
cmp
hlt
adc
scas
imul
test
mov
mov
rcl
jno
jb
pop
xor
iret
push
je
aad
clc
outsb
sbb
fldl
mov
cltd
inc
les
test
aad
fidivs
mov
dec
push
cmpsl
mov
fs
inc
mov
xchg
xor
test
movsw
or
cmp
jnp
ljmp
lock
mov
mov
aam
or
and
cmp
pop
cmc
xor
pusha
inc
mov
cwtl
sbb
roll
js
add
hlt
cmc
xor
jg
xchg
in
out
add
inc
dec
ret
sbb
sub
add
or
pop
mov
sbbb
adc
mov
jp
hlt
jno
mov
jecxz
mov
scas
cmp
imulb
xchg
jl
pop
mov
jg
je
icebp
cmp
repz
xchg
sub
outsb
xor
scas
cld
arpl
enter
inc
pop
mov
wrmsr
scas
fsubl
jl
dec
mov
and
pop
dec
mov
repnz
pusha
roll
test
and
mov
and
divb
add
xorb
fs
sbbb
add
enter
lock
xchg
or
std
pop
sub
aas
test
mov
movsl
ds
fisttpll
dec
rol
pushf
sahf
pop
shll
test
pushf
test
and
mov
out
inc
push
test
gs
iret
dec
cmp
xor
mov
out
mov
jns
insb
popf
sbb
popa
jp
pop
arpl
sbb
shrl
arpl
xor
out
dec
test
xchg
cld
outsb
pop
or
sub
insl
pop
or
adc
int3
fmuls
push
cld
lahf
sub
inc
sub
push
mov
xor
idivb
and
out
sarl
jbe
jbe
iret
add
sahf
shlb
movsb
xchg
jo
popf
sbb
xchg
sub
scas
shr
inc
sub
test
inc
xor
mov
lock
sbb
mov
xchg
mov
or
dec
cmp
call
mov
jnp
mov
pop
ror
jle
rolb
test
mov
out
adc
outsb
push
jg
test
push
fsubrl
jl
test
aas
mov
imul
mov
test
cmp
or
sahf
sub
sahf
enter
lahf
xor
and
mov
xchg
dec
xchg
jne
push
sahf
and
adc
lock
mov
ficompl
or
cmp
and
jnp
push
das
loope
movsl
hlt
cmp
popf
data16
scas
push
scas
das
mov
mov
lods
sub
sbb
sub
cs
mov
xor
sti
sahf
sar
ss
inc
movsl
sub
subl
inc
pop
adc
mov
mov
sub
add
jmp
in
ror
dec
xor
enter
hlt
or
out
xor
add
or
mov
mov
sub
sbb
add
insb
jg
insb
mov
test
pop
sub
push
sbb
cmp
movsb
xchg
xor
imul
mov
xor
addr16
mov
cmp
repnz
rorb
js
inc
adc
fistpll
adc
sti
xchg
ret
mov
shll
in
out
mov
pushl
dec
fcmovnbe
mov
ror
pop
enter
fwait
cs
mov
daa
jmp
push
movsl
ds
add
dec
repnz
push
jno
jecxz
inc
nop
mov
push
pop
inc
and
mov
sub
sub
jp
imul
shll
fsubr
inc
cmpsl
scas
aas
adc
mov
insb
and
test
inc
xlat
cli
mov
pop
dec
shrb
clc
ja
jne
sub
xchg
insb
pop
jno
imulb
daa
addr16
imul
xorb
inc
and
add
nop
icebp
roll
lods
xor
jo
dec
mov
in
in
jl
scas
pop
inc
xchg
lds
jge
aas
stc
pushf
sub
mov
rep
push
pusha
sub
pusha
xor
ret
outsb
fidivrl
bndstx
stc
sti
inc
push
mov
ljmp
mov
push
pushf
mov
inc
xor
xchg
pop
jg
xchg
sbb
jg
daa
les
adc
xacquire
gs
add
mov
lcall
pusha
and
fldcw
mov
sbb
add
lods
adc
cmc
pop
mov
fidivrl
fs
sub
flds
js
lods
and
test
lea
stc
xor
and
call
or
cmp
cwtl
sbb
pusha
movsb
in
lock
popf
add
and
aam
fldcw
fldenv
or
sti
les
cmp
jo
xlat
mov
fsubrl
cmp
xor
sahf
scas
dec
mov
push
jb
arpl
mov
pop
sbb
jo
test
shrb
inc
sub
mov
movsl
xchg
rol
sub
cmpsl
lods
pop
mov
out
push
sub
mov
jle
fwait
push
repnz
daa
add
cmp
add
clc
sahf
divl
scas
jmp
fcomp
fcmovnb
ret
test
sbb
lea
and
sub
test
inc
movsl
movsb
push
lea
stos
xchg
push
pop
cltd
sahf
mov
rcrb
mov
mov
adc
mov
adc
addr16
xchg
or
xorb
mov
cmp
cltd
iret
sti
push
stc
cmp
xchg
or
hlt
lds
rorb
mov
sahf
xlat
cltd
xor
mov
jnp
pop
js
mov
aaa
push
fwait
rorl
out
inc
xor
jge
lods
sub
lret
andb
or
mov
push
and
lret
add
jmp
pop
inc
mov
inc
adc
mov
jecxz
icebp
and
lds
lods
movsl
sbb
sbb
test
xlat
and
stc
cmp
and
ret
adcb
mov
movsl
sbb
mov
jmp
js,pn
xor
btc
push
push
mov
push
rorb
or
sbb
outsb
std
in
inc
scas
pusha
adc
cwtl
es
sahf
xor
loopne
js
xchg
jge
xchg
subb
add
add
push
jle
out
call
and
mov
inc
pusha
data16
inc
lods
and
mov
fidivrl
mull
push
xor
cwtl
xchg
xchg
jne
or
push
shrb
mov
push
icebp
shrb
arpl
or
imul
shr
ret
loope
roll
and
jle
ds
scas
popf
stos
add
lds
mov
mov
aad
and
inc
fidivs
iret
arpl
adc
mov
or
xor
cld
adc
in
cli
cmp
mov
sbb
ss
add
mov
or
sbb
sbb
mov
mov
shrl
loopne
jg
cwtl
sub
push
push
push
andb
push
sub
cmp
xor
enter
das
imull
add
scas
in
inc
jb
adc
fisttps
lcall
push
pop
movsl
clc
or
and
dec
mov
inc
push
scas
sahf
int3
fwait
lcall
movsl
and
popa
mov
add
mov
ficompl
orb
xor
cmp
and
adc
mov
and
aas
jmp
sbb
or
inc
in
dec
sbb
push
adc
mov
ja
xor
jns
popa
movsl
out
clc
pop
jmp
es
in
sub
rcrb
add
push
push
push
jno
mov
push
pop
sbb
pop
mov
lods
popa
mov
lahf
sub
cmpsl
jae
xchg
aaa
mov
mov
movsl
cmp
fildl
add
mov
sbb
int
fs
addr16
test
aad
or
movsb
xor
push
loopne
fistl
icebp
imul
jns
sahf
nop
jo
inc
mov
jg
sbb
sahf
and
mov
clc
mov
loop
enter
les
cwtl
cmpsb
test
add
xchg
aam
iret
lods
pop
sub
push
scas
push
cmp
shl
sub
in
popf
lods
shll
dec
jecxz
push
jle
roll
lock
add
inc
mov
jl
ja
fldenv
inc
aaa
stc
out
test
ja
ret
push
cwtl
xor
mov
ret
stos
hlt
adcb
test
pop
jb
mov
xor
pop
dec
int3
js
iret
inc
negl
dec
mov
mov
es
in
jp
outsb
adc
sub
push
and
cltd
mov
cmp
fmuls
push
aam
and
sbb
into
push
sbbb
xchg
cld
hlt
xchg
add
repz
inc
insb
mov
sub
out
jp
pop
sub
aad
cmpsl
xchg
sar
mov
cmp
inc
loop
jg
push
mov
push
add
xchg
pop
sub
mov
fldenv
mov
jle
rclb
shl
xchg
sbb
pop
pop
ds
cmp
mov
or
adc
sar
adc
sbb
ss
outsb
stc
mov
jg
rcr
sbb
subl
xchg
ss
dec
mull
aas
mov
repnz
adc
inc
sub
ficomps
leave
data16
add
adc
mov
movsb
stc
cmp
dec
test
mov
fimull
jns
jle
fldenv
push
test
inc
xlat
rcrb
sub
iret
popa
data16
mov
push
push
cwtl
inc
cmp
pop
shll
shll
imul
nop
jnp
pop
aaa
push
cwtl
inc
negl
jp
cwtl
cwtl
shl
jno
fs
push
daa
sti
lods
fdivl
sbb
pop
lcall
lcall
test
clc
dec
mov
ljmp
push
mov
cmp
mov
andb
inc
jp
inc
inc
xlat
xchg
fiadds
fiadds
repz
adc
jnp
pushf
mov
lcall
mov
pop
xlat
xchg
incb
faddl
mov
outsl
decb
or
fdiv
xor
sbb
mov
jecxz
test
and
pop
push
pop
aas
pop
xchg
pop
push
pop
fisubs
pop
pop
mov
pop
xor
sub
aas
aad
cmpsl
int
lods
xchg
mov
test
imul
pop
cmp
mov
into
in
pop
cmp
pusha
test
xchg
sbb
jbe
and
lock
sbb
and
pop
sub
movsl
sti
int3
cmp
mov
shll
cmp
notl
rolb
inc
jp
test
sahf
pop
cmp
cmp
sub
int
shlb
jbe
jg
fsubrl
ficoml
jae
lret
inc
mov
enter
sti
jnp
imul
fstpt
dec
sete
push
xor
pop
jp
add
adc
cld
je
fwait
cltd
int3
and
mov
loope
mov
mov
mov
cmp
cmpsl
lahf
int
rolb
sbb
add
mov
mov
cmp
ds
dec
or
out
sbb
outsb
inc
mov
inc
and
sbb
jb
outsb
xchg
dec
rcll
sti
es
shlb
push
mov
loop
and
push
je
stc
js
fsubrs
ret
das
jl
xchg
into
imul
sbb
cmp
sahf
mov
arpl
push
enter
jnp
jl
lahf
aam
sbb
xchg
pop
addr16
scas
imul
js
and
xchg
sbb
aad
inc
adc
xor
sub
bound
sbb
and
ret
push
or
push
jo
cwtl
adc
clc
movsl
outsl
mov
add
pushf
mov
dec
fs
insb
lods
add
dec
das
jae
xchg
adcb
mov
fucomi
pop
mov
sbb
pop
popf
or
jnp
lods
cmpsl
sbb
xor
sub
xor
movsl
sti
cmc
fidivl
xor
std
cmp
inc
test
mov
push
sbb
addb
nop
cmpsl
and
test
test
in
clc
int
pop
pop
mov
push
loopne
shlb
stos
insb
je
or
mov
mov
adc
add
inc
pusha
inc
insl
lock
rcrl
andl
sbb
out
rclb
std
sahf
fwait
popa
or
pop
stos
adc
leave
mov
cltd
rcrb
inc
mov
popf
cmpb
in
out
push
push
in
fcmovnbe
in
pop
sbb
jns
mov
and
xor
jp
xchg
jo
mov
mov
out
mov
out
in
movl
lea
test
movsl
arpl
mov
mov
jl
inc
and
push
inc
fsubs
fs
xor
imul
jl
divl
or
rorl
fsubrl
jns
nop
inc
mov
adc
adcl
fsub
xchg
jno
fldcw
pop
inc
jl
pop
rcrb
xor
cs
daa
mov
mov
xor
xor
xor
iret
adc
cmp
xchg
pop
jg
dec
lds
pushf
jge
mov
xchg
push
lods
pushf
andl
data16
pushf
call
cwtl
shll
pop
push
pop
sahf
sub
pusha
cld
sahf
mov
sub
fsubrl
insb
mov
not
mov
xor
fistpll
jl
loop
or
or
pushf
shlb
sub
pusha
mov
negb
pop
das
int
sub
je,pn
jno
ljmp
sub
sbb
sti
adc
aad
sarb
and
pop
sbb
das
ret
insb
cmp
aas
sahf
add
cltd
push
sbb
aas
ffreep
xor
or
test
jo
pop
mov
icebp
fwait
sbb
push
or
pop
jbe
push
cmp
dec
sbb
xchg
rcrl
mov
dec
in
mov
jno
clc
mov
cwtl
jno
scas
cli
aas
and
pop
mov
inc
xor
rcrb
test
loopne
and
jp
add
sbb
cmp
or
jmp
add
ljmp
and
push
pop
mov
and
shl
cltd
sbb
sbb
jg
add
mov
cs
sbb
ret
mov
sub
and
pop
jnp
mov
testb
mov
arpl
adc
js
pushf
test
cmp
inc
sarb
jns
dec
jo
push
lret
push
pop
shl
xor
adc
or
xor
iret
mov
popa
repnz
movsl
push
cld
out
xchg
cmpb
mov
aad
push
xor
pop
pusha
mov
cmp
ss
sti
insb
inc
test
adc
inc
imul
test
jmp
jb
jp
sub
dec
pop
rdmsr
mov
out
inc
lcall
fnstenv
mov
jp
pop
js
cltd
and
sub
int3
push
xchg
outsb
scas
insb
pop
mov
jl
rorl
cmp
xchg
mov
mov
and
dec
dec
inc
inc
scas
mov
movsl
test
jecxz
sub
sbb
cmp
jbe
jge
sub
adc
insb
xchg
repz
sub
scas
cmp
and
jns
cmp
add
movsl
jge
adc
add
es
xchg
movsb
loopne
mov
lahf
push
xchg
xchg
cmp
xchg
fstl
xor
jb
sbb
jp
mov
movsb
xor
popa
test
mov
jo
inc
xchg
adc
cmp
idivb
and
popf
sub
js
push
cmp
imul
cmp
movsl
sbb
or
lcall
popa
dec
nop
pop
ss
fsubrl
jp
push
pop
repnz
jp
adc
roll
mov
and
lss
repnz
or
mov
bound
mov
push
inc
testl
or
mov
dec
jb
and
ss
jle
aas
jp
xchg
and
pop
das
testb
or
and
fiaddl
or
scas
sbb
enter
movsl
arpl
xor
and
mov
fstl
cmp
frstor
xor
bswap
rcll
jbe
aaa
fnsave
push
cmpsb
xchg
int
out
mov
rol
aad
push
push
out
mov
push
sbb
out
cmp
mov
or
std
cs
into
xor
cmp
shr
jle
mov
cli
mov
movsl
mov
add
cltd
lret
dec
mov
shrl
jecxz
sbbl
cmpsl
shlb
cs
fxch
push
orl
out
pop
int
in
adc
add
or
dec
pop
and
dec
inc
mov
repz
cmp
test
push
and
add
push
xor
mov
push
jl,pn
mov
out
enter
jbe
xor
lsl
jns
iret
cmp
mov
inc
mov
push
fs
sarl
mov
ds
pop
push
push
ds
lahf
cmp
imul
push
inc
ss
jecxz
mov
or
ss
and
addr16
pop
xor
push
inc
repnz
sahf
sub
mov
dec
pop
cmp
and
dec
push
mov
fidivrl
std
mov
out
fwait
lcall
pop
gs
mov
fistl
call
cwtl
jecxz
jbe
test
xor
cld
add
xor
ljmp
inc
push
mov
scas
xor
sub
pop
lea
ret
or
outsb
push
mov
or
movsb
mov
jb
jp
dec
test
jle
mov
jne
movlps
movsl
inc
in
enter
push
adc
cs
and
rclb
sahf
push
mov
ja
mov
or
test
gs
and
pushf
imul
mov
sbb
out
adcb
adc
and
jmp
mov
mov
cmp
inc
push
mov
pop
mov
cltd
loop
dec
sub
xchg
jne
add
fimuls
ss
cmp
loop
pop
and
xchg
es
add
enter
stc
cmp
push
fwait
mov
mov
jg
enter
mov
xchg
jge
cmp
mov
cmpsb
dec
add
and
sub
aad
dec
mov
push
movsb
pop
mov
jp
notl
loop
inc
jo
imul
inc
repz
and
pop
push
scas
rcrb
mov
inc
sub
jge
or
imul
ja
pop
inc
mov
test
pop
stc
inc
enter
imul
lock
mov
mov
mov
dec
xchg
daa
xor
xor
xor
pop
sbb
imul
ret
insb
rolb
mov
daa
int
outsb
mov
mov
sub
xor
push
cmc
xchg
sub
xchg
jp
cli
pop
mov
inc
add
and
inc
leave
adc
test
lock
inc
dec
jp
pop
js
inc
movsb
xchg
icebp
adc
xor
or
daa
lock
mov
mov
sub
push
mov
push
pop
or
dec
push
push
in
adc
jo
out
and
pop
insb
jbe
xchg
bound
cmp
ret
xor
pushf
push
out
cld
sbb
push
inc
lods
or
ds
hlt
cltd
mull
jle
inc
mov
das
adc
rol
xor
out
clc
xchg
ret
xchg
jge
sub
stos
mov
icebp
xchg
and
mov
mov
cwtl
mov
aad
pop
jnp
cmpsl
sbb
xchg
hlt
cmp
pushf
cmp
lcall
cmp
and
fwait
sub
pop
dec
pusha
nop
gs
add
xchg
push
fs
add
push
testb
inc
lods
sub
inc
inc
scas
mov
cmp
or
push
fcomi
xchg
push
sbb
sahf
shlb
push
and
adc
nop
sbb
push
stc
add
sbb
pop
loop
inc
mov
sahf
adc
xchg
cmp
inc
mov
loopne
jge
popf
dec
cmp
cmpsl
xchg
mov
mov
scas
inc
adc
push
adc
loop
xor
stos
loope
cltd
xchg
cmp
mov
outsl
adc
lret
jp
mov
adc
jp
shlb
test
jno
cwtl
push
or
jbe
loop
adc
in
repz
push
sub
in
mov
iret
insl
shlb
test
xchg
insb
pop
std
cmp
sahf
sbb
pop
pop
fwait
scas
add
ss
push
cmp
outsl
dec
sbb
jae
mov
or
push
imul
movsl
xor
pop
pushf
stos
daa
pusha
cmpl
cmp
mov
add
xor
jae
shll
adc
and
aam
and
jl
in
jge
cmp
loope
cmpsl
pop
lret
add
test
pusha
and
lret
add
movsl
dec
insl
mov
fistpll
paddb
dec
imull
push
pop
sub
in
jno
stc
mov
stc
xchg
fistps
and
mov
iret
push
jecxz
inc
xor
std
sahf
sbb
push
ja
xor
aas
xor
js
outsl
xchg
pusha
add
inc
sbb
xlat
pop
ret
cmp
stc
repnz
ss
jns
xor
mulb
mov
mov
leave
mov
call
pusha
xor
jnp
ficoml
and
mov
loopne
jmp
loopne
pop
push
aas
sub
sti
push
call
test
xor
std
sub
mov
imul
mov
test
lea
adc
push
ja
pusha
cmp
imul
push
orb
popf
jns
sbb
imul
popf
or
sub
ficompl
fcompl
sub
out
mov
sarl
push
push
cmp
test
mov
xchg
das
loope
sti
in
adc
lods
push
adc
cmp
call
fisttps
ja
add
mov
in
jg
ss
push
cmpsl
mov
add
mov
repz
bound
push
cltd
je
adc
stos
test
xor
shrl
pushf
pop
mov
jmp
adcb
lret
xchg
push
call
add
mov
push
sbb
pop
xor
lods
push
shr
sar
test
add
ja
out
clc
pop
fdivs
stos
movsb
or
fidivl
loopne
mov
jo
pop
push
rcrl
jb
fcomp
test
xor
push
and
ljmp
xor
enter
and
sub
lods
movsl
sbb
mov
sub
loopne
icebp
mov
es
mov
mov
test
mov
push
hlt
mov
test
dec
sub
outsb
les
das
pop
inc
in
mov
lahf
and
out
pop
shr
test
leave
test
mov
and
fbld
ret
mov
addr16
shrl
leave
push
add
xor
add
icebp
inc
dec
xchg
daa
aam
aas
inc
test
subl
add
repnz
stc
outsl
or
loopne
insl
popa
xchg
and
jle
cmp
ljmp
fsubrs
enter
mov
add
sahf
cs
sbb
adc
les
out
or
aad
cmpsl
movsb
cld
shl
adc
outsb
xchg
pop
inc
sbb
xor
mov
out
mov
push
add
and
rcrl
add
loopne
push
outsb
cld
push
sub
test
jg
mov
mov
out
icebp
mov
stos
sarb
test
js
stos
call
pop
sar
dec
xor
or
add
pop
hlt
subb
call
jecxz
xor
sub
sub
mov
mov
fsubs
xor
sub
xor
ljmpw
mov
xchg
fwait
jp
add
jae
sub
cmpsb
inc
push
dec
mov
xchg
adc
mov
push
xor
xor
adc
es
filds
sub
imul
push
aad
inc
or
mov
test
scas
jg
or
rolb
xchg
fisubrs
and
mov
repnz
dec
lock
rolb
outsl
mov
cmp
clc
popa
ljmp
sub
pop
mov
es
sahf
inc
fwait
mov
clc
mov
insl
rcrl
mov
inc
test
sahf
test
pop
xchg
adc
xor
subl
pop
mov
push
pop
movb
leave
nop
daa
rorl
icebp
add
int
xor
add
mov
jp
daa
cmp
stc
dec
fxch
xor
fbld
ror
negl
xchg
and
cmpsl
movsb
scas
cmpsl
adc
adc
adc
add
mov
sbb
movsb
sarl
pop
sbb
stos
cmpsl
jp
mov
push
push
dec
jge
sahf
sub
adc
stc
out
xor
fildl
push
fbld
jno
outsl
sti
pop
fs
push
mov
mov
sti
out
mov
out
push
mov
adc
sti
cmpsl
stc
xchg
mov
pop
out
mov
rcrl
jno
rcl
and
pop
leave
call
pop
push
lret
fs
ret
pop
sub
cmp
out
aam
hlt
insl
adc
or
mov
inc
push
sbb
inc
xchg
movsl
jo
or
add
shr
inc
xchg
jbe
inc
addr16
push
adc
and
mov
sub
xchg
data16
aam
sub
and
insb
inc
jo
or
push
inc
movsb
test
jp
and
shll
loope
pop
inc
pop
jle
sbbb
mov
mov
mov
sub
and
mov
sub
cmp
cmpl
inc
shlb
inc
inc
pop
in
and
adc
adcb
subl
scas
jecxz
fsubs
push
pop
and
push
inc
pop
jecxz
pop
inc
movsl
cltd
inc
out
mov
and
adc
test
pop
cmp
popf
inc
xchg
out
lea
loop
and
ja
sahf
xor
xchg
arpl
dec
movsl
rcrb
es
pop
push
popf
gs
out
add
push
call
push
cmpsl
lods
test
rorl
movsb
pop
mov
cmpsl
adc
in
cmp
movsl
xor
add
test
jbe
jb
xchg
add
test
push
rclb
lods
mov
fs
dec
fucom
nop
js
lahf
inc
sub
adc
jnp
je
das
add
rcrl
jecxz
pushf
dec
or
enter
mov
int3
mov
mov
pop
inc
cmc
jmp
push
dec
mov
jge
inc
pushf
ja
mov
dec
jae
lock
jp
inc
cmp
pop
outsb
mov
test
inc
lods
addr16
add
push
roll
ret
lds
movsl
call
in
sub
pop
fsubrs
sahf
cmpsb
cltd
repnz
jp
mov
jo
mov
out
dec
cmc
mov
lock
sub
je
lods
push
call
lret
jecxz
adc
dec
outsl
mov
jle
jae
sub
mov
cmp
xchg
out
add
imul
sub
rclb
ficompl
cmc
inc
rcrb
inc
test
or
lods
cmpb
push
popa
stos
adc
dec
sarb
mov
add
mov
enter
xchg
dec
xor
fisubl
inc
scas
lret
lock
mov
xorl
add
sub
pop
inc
loopne
loop
jne
and
rolb
fbld
rcll
js
ret
insb
gs
gs
jne
gs
adc
stos
sar
adc
jmp
shlb
aad
test
popf
inc
jne
loopne
inc
push
sub
sub
push
xor
gs
cmp
inc
cmpsl
xor
mov
lds
jecxz
jle
lret
jnp
dec
or
sub
inc
fwait
inc
ja
fs
push
inc
jns
sub
mov
xchg
cmp
fcompl
xor
dec
outsb
or
xor
add
cltd
daa
fldt
rcl
fwait
jne
daa
je
inc
mov
jnp
sub
pop
inc
cmpsl
cmp
shll
in
cmpsl
lahf
data16
leave
nop
ffree
mov
mull
fucomp
jne
fidivrs
push
push
mov
icebp
push
jp
iret
lds
xor
mov
psubsw
scas
andl
jbe
and
or
test
jns
add
insl
jp
subb
xor
cld
insl
sbb
mov
jle
push
mov
and
xchg
dec
aaa
outsl
adc
rcrl
js
pop
and
fidivrl
cli
mov
dec
or
add
test
adc
jp
es
push
daa
outsl
pop
adc
insb
push
es
jp
and
sbb
push
jno
fisubs
mov
push
cmpl
mov
les
sub
inc
mov
cmp
cli
xor
lods
inc
xchg
daa
inc
out
cli
das
xchg
mov
inc
cld
jbe
sbb
mov
mov
xchg
xor
pop
mov
pop
call
xor
pop
mov
push
insb
addb
mov
and
jo
and
ss
popf
pop
in
rcrl
and
data16
xor
mov
data16
shll
rcr
xchg
cmpsl
dec
adc
fwait
cli
mov
rorl
arpl
mov
push
and
movsb
inc
data16
sarb
cmpsl
aad
cmpsl
mov
jl
aad
adc
fstpt
js
xor
out
ljmp
jo
sbb
lods
xchg
mov
or
sub
jb
movsb
jg
shll
icebp
mov
scas
cmc
fs
xchg
mov
cvtpi2ps
xchg
pop
jmp
int3
lret
or
add
cmpsb
mov
hlt
mov
out
aaa
add
fildl
jnp
in
ffree
movsl
cmp
int
movsb
inc
scas
xchg
pushf
mov
test
fcoml
fcomp
or
add
jno
repz
push
jmp
test
cmpsb
xor
mov
lret
pop
add
lock
mov
adc
lahf
ds
es
loope
push
inc
xchg
testb
cmp
mov
add
outsl
pop
dec
mov
jecxz
sbb
test
rcll
in
ret
jnp
jle
test
mov
sti
stos
mov
jo
out
imul
xchg
pop
in
xor
loope
nop
sub
ljmp
xchg
clc
adc
cwtl
in
test
pop
fs
and
shlb
mov
cmp
repz
mov
shrb
push
lret
sub
movsl
in
rorl
pop
adc
test
jle
movsl
fwait
in
ret
sti
mov
lds
mov
mov
or
cmp
add
add
shrb
xchg
fs
test
js
or
out
je
xchg
xchg
pop
push
sub
jbe
loopne
divl
dec
inc
fisubl
jns
test
jp
insb
sarb
sbb
sti
jp
xchg
dec
popa
push
es
arpl
sbb
cmpsb
insl
adc
pop
sub
pop
mov
imul
clc
ret
stc
sub
movsl
scas
test
stc
mov
mov
fmuls
adc
dec
and
sub
jp
lds
push
or
sub
inc
mov
cmp
test
sub
push
fldcw
xchg
test
and
imul
mov
ss
sub
xchg
push
test
lods
shll
mov
lock
sti
js
jns
jp
int
mov
and
test
and
jmp
mov
je
cmp
repnz
xchg
xchg
jns
mov
xchg
test
mov
jl
and
daa
in
and
push
orb
mov
push
cs
pop
jle
and
in
divl
aaa
loop
pop
stos
jge
jecxz
stos
iret
nop
pop
out
xor
insl
ror
sbb
mov
cmp
out
sahf
pop
stos
sti
xor
ja
imul
bound
push
lret
loopne
jno
pop
mov
jl
sub
imul
xor
xor
outsl
jmp
lods
je
jmp
jge
lods
nop
andl
mov
test
enter
loope
pop
sahf
test
mov
lret
pop
push
sub
rorl
pop
shlb
jl
repz
adc
movsb
iret
cmp
cwtl
or
stos
subb
movsb
shrl
pop
aaa
inc
sub
jl
inc
jo
jne
sbb
mov
xor
jno
mov
cli
mov
cmp
lret
mov
sub
aaa
jnp
jbe
adc
add
sub
repnz
push
les
lds
mov
fistl
sub
les
call
gs
xchg
sub
les
lock
aam
ds
xchg
pop
push
movsl
inc
fldcw
dec
push
sub
dec
daa
lods
mov
xchg
push
into
mov
movsl
xchg
int3
popl
stos
popf
cmp
clc
xor
pop
push
adc
call
pusha
cld
outsl
repnz
jecxz
mov
popf
nop
clc
mov
dec
sti
data16
mov
addr16
xchg
aad
rorl
mov
xlat
jecxz
and
push
sub
add
fs
out
adc
mov
popa
pop
mov
mov
scas
add
int3
fcmovu
cld
mov
cmpsb
test
sub
sarb
xorb
negb
xchg
jg
cli
xorb
addr16
mov
pop
jb
fsubs
mov
negb
test
imul
enterw
pop
adc
mov
subl
sub
xchg
mov
pop
and
cli
gs
cwtl
jns
fistpl
mov
movsb
iret
jecxz
add
xor
sahf
mov
repz
push
inc
sub
push
push
sub
leave
ret
pop
mov
dec
cmp
movsl
lret
sub
test
test
xor
ret
jo
imul
testb
jne
cs
push
fwait
mulb
cmp
mov
or
shlb
jge
jns
ss
or
xor
andb
shl
test
mov
das
shll
dec
aas
xor
mov
sarl
iret
push
push
mov
mov
sub
nop
andb
push
fldcw
jnp
mov
pop
mov
mov
daa
xorl
dec
add
mov
dec
dec
in
add
dec
mov
stos
shll
xlat
dec
dec
adc
pop
movsb
push
mov
gs
ftst
mov
mov
cmp
mov
inc
jg
push
shlb
push
cs
scas
cwtl
imul
leave
sbb
add
and
dec
or
jns
lret
mov
out
jp
imul
repz
das
fwait
outsb
pop
int3
mov
out
cmpsb
aas
in
enter
push
into
add
and
fldcw
inc
adc
fmulp
sub
mov
loop
push
push
repnz
cmp
out
lret
inc
aam
jp
sahf
cltd
cmp
xor
adc
inc
jp
in
out
cmpxchg
xchg
ror
iret
push
test
js
fiaddl
lods
sub
jno
sbb
lock
mov
mov
test
leave
pop
shll
icebp
xchg
xchg
das
push
les
in
loop
push
cmpsb
cmp
leave
adc
test
es
push
sbb
data16
dec
add
pop
daa
ja
bound
pop
dec
mov
inc
push
add
shrb
fdivl
loope
cmp
out
insb
jmp
jnp
or
mov
shlb
and
xor
loopne
pop
dec
pop
cmp
mov
xor
sub
imul
je
jns
inc
gs
pusha
jmp
rclb
add
mov
mov
lahf
imul
dec
push
push
fs
mov
mov
push
scas
inc
push
out
pop
dec
or
popf
pop
mul
mov
or
aam
in
cmp
addr16
aas
cmp
int3
lods
xor
pusha
test
jbe
mov
es
lods
mov
movsl
xchg
mov
or
aas
iret
jns
pop
aaa
xchg
popf
xlat
repnz
jae
shrb
jns
int
jnp
sbb
mov
lcall
adc
adc
cmp
repnz
sahf
gs
push
or
popa
jle
shlb
je
test
push
and
out
fstpt
insl
mov
jecxz
or
xor
sub
push
xchg
test
jbe
pop
inc
jae
fisubl
pop
test
or
sub
xchg
and
rolb
xor
adc
aas
mov
sub
sub
mov
stos
das
xchg
sub
scas
movsl
fstpt
mov
sub
jecxz
pop
push
mov
lock
das
test
add
push
mov
sub
js
cmpsb
inc
mov
lahf
stc
stos
ret
jp,pn
push
stos
sbb
mov
push
push
pop
out
testl
push
aad
jo
ljmp
bound
sarb
adc
add
and
mov
pop
stos
test
sbb
xchg
incl
mov
pushf
mov
dec
cmp
sti
xchg
je
aas
pop
jbe
int3
pushf
cwtl
js
mov
stos
adc
fcomi
pop
xchg
jle
shrb
ret
add
repnz
mov
out
ficoms
fwait
add
inc
pop
mov
xchg
sub
into
imul
dec
inc
inc
jp
or
jp
jno
push
test
into
int
jae
ljmp
jmp
sub
mov
cmp
push
pop
mov
xchg
rcrb
push
insb
rcll
outsb
sub
out
movsb
shr
xchg
jl
fs
repnz
cmp
out
mov
and
mov
aas
or
outsb
and
inc
int
xor
mov
inc
inc
adc
lds
cmp
outsb
jge
frstor
movhlps
fadds
push
shld
data16
aad
inc
inc
push
xlat
pop
xlat
fcompl
movsb
adc
int
mov
push
lock
das
pop
jp
das
add
ret
out
loopne
mov
mov
in
jg
pop
movsb
push
das
call
rcrb
pop
pop
movsb
xchg
lret
pop
movsb
jns
daa
dec
into
cmp
outsb
mov
xor
pop
movsb
jns
les
pop
sbb
push
popf
popf
jge
lahf
inc
repz
mov
xor
xor
mov
daa
mov
xchg
and
les
daa
jno
movsl
jge
lahf
cs
fsubs
movsb
jb
test
sbb
faddl
mov
add
mov
fstpt
ficompl
int3
inc
movsb
jmp
dec
sti
pop
inc
pop
pushf
sub
fisttps
pop
das
push
out
movsb
cmp
adc
push
push
xor
xor
movsb
mov
jmp
cmp
fs
aaa
mov
inc
daa
movsb
out
ret
scas
shll
mov
cmc
jge
into
jno
jnp
ret
pusha
mov
push
mov
mov
sbb
sti
sbb
xor
push
lcall
ficomps
and
pop
fisubrs
int
inc
jp
iret
add
leave
jno
es
stos
loope
fdivs
iret
or
mov
in
rolb
cmp
adc
lds
scas
out
shlb
out
out
cmp
mov
pop
out
jnp
stos
out
xchg
repnz
cld
jnp
fidivl
repz
xlat
outsb
sahf
lds
and
sahf
scas
out
inc
stc
push
arpl
xor
shr
pop
xor
mov
div
test
repz
fistpl
or
pop
dec
xor
or
pop
decl
and
sahf
and
shlb
aam
add
iret
adc
or
mov
or
or
push
pop
and
xor
inc
fistl
ljmp
sbb
movsl
add
push
fisubs
outsl
sub
jge
pop
test
xchg
loop
mov
xor
sbb
pcmpeqb
mov
mov
push
fnstsw
addb
pop
fs
add
in
nop
xchg
lods
inc
cmpsb
sti
mov
mull
mov
xor
fnstcw
sub
jno
xor
std
clc
popf
frstor
rol
repnz
lock
sub
mov
fcmovb
push
or
imul
mov
xchg
mov
sti
das
pop
sub
movsl
and
pop
ds
push
mov
or
mov
mov
sub
aad
sub
insb
sub
shl
jp
outsb
mov
mov
add
inc
in
ret
or
cmp
pop
and
fildll
sti
shrb
cltd
sub
mov
mov
fldcw
dec
jle
loopne
das
scas
rcrl
insb
scas
lahf
lods
popa
sarb
sub
push
or
je
xchg
cmc
dec
sbb
sub
aaa
int3
cmpsl
push
cmp
aaa
inc
sbb
movsl
inc
dec
iretw
mov
mov
scas
push
ror
xchg
test
jb
cmp
insb
subl
fiaddl
and
rorb
popa
xor
test
movsl
fadds
jle
lret
sub
jecxz
out
mov
lock
dec
lret
scas
xchg
int3
xor
or
int3
imul
lods
xor
xor
xchg
xchg
dec
inc
mov
push
das
std
mov
sarl
mov
push
xor
jo
jge
in
movsb
roll
push
mov
shr
lock
shlb
xchg
pop
inc
xor
cmp
mov
cld
scas
shl
in
rorl
cwtl
and
and
rorb
add
imul
jecxz
or
imul
divb
prefetch
sahf
pop
cmp
jns
into
jl
cmpsb
andb
and
test
sub
inc
mov
xchg
jecxz
or
ljmp
movsl
fwait
sbb
inc
pop
sbb
mov
hlt
cmp
mov
pop
sbb
add
cmp
add
fs
notl
andb
adc
ret
and
add
sub
into
jae
and
jecxz
outsb
in
pushf
dec
cmp
dec
js
ret
leave
aas
mov
xchg
push
sub
mov
cs
scas
ja
xchg
push
and
xchg
xor
sbb
pop
gs
outsl
push
sub
sub
rol
or
dec
shlb
test
pop
mov
adc
dec
xor
jnp
cli
mov
andb
xchg
mov
arpl
cli
fwait
add
adc
popa
fsubrl
adc
ljmp
popf
xlat
cwtl
cmp
sbb
movsb
shl
push
insl
shrb
fnstsw
jns
mov
aas
push
adc
ret
ds
lea
mov
lods
mov
jge
pop
lea
mov
sub
jge
mov
call
push
out
jnp
adc
ds
daa
nop
test
popa
fwait
in
aas
lea
sete
sbb
mov
xor
aam
inc
jbe
xorl
lods
adc
lret
and
imul
mov
subl
dec
imul
cli
out
lods
jp
out
fdivrs
fwait
cmpsl
inc
adc
dec
test
and
nop
dec
adcb
xor
jae
inc
jge
mov
pop
mov
lock
pop
sub
int
jno
scas
push
pop
mov
jl
pop
adc
mov
pop
mov
not
test
mov
lods
ss
ss
or
shrl
scas
xor
xor
daa
sub
mov
xchg
loop
cmpsl
adc
adc
lds
in
xor
xor
adc
push
jns
inc
jmp
lods
mov
int
add
push
dec
ljmp
dec
adc
stc
sub
in
sbb
rcrl
or
or
and
push
jle
inc
pop
stc
mov
sar
imull
jle
das
xor
lock
imul
jb
mov
lahf
xchg
sub
test
dec
jmp
sub
pop
xchg
ja,pn
mov
cs
or
push
and
mov
pop
je
cmpsl
or
insb
ret
negl
cmp
mov
mov
mov
dec
push
cmp
arpl
adc
lods
or
cwtl
mov
mov
out
lods
push
dec
jo
jbe
mov
mov
fs
lods
cwtl
cmpsl
mov
sarb
arpl
jp
data16
push
loope
test
outsl
mov
es
out
xor
dec
outsb
xor
fimuls
ss
adc
insl
shrb
xchg
xor
push
cmp
cmp
dec
sbb
dec
aam
int3
inc
inc
mov
sub
mov
scas
adc
repnz
enter
xchg
lods
xor
repnz
test
sbb
stc
jle
in
jnp
adc
popa
sahf
xor
lock
rcrb
fsubrs
cwtl
mov
xor
sub
mov
mov
sahf
orl
cmp
fxch
push
scas
jg
gs
paddusb
xor
fs
scas
aas
ret
xor
push
sub
xor
or
sbb
mov
mov
pop
sub
stc
std
jns
in
lcall
sbb
inc
lods
les
rclb
aad
cmpsl
sub
int
pop
inc
pop
sarb
push
lods
mov
push
xor
fucomi
scas
rcrl
pop
mov
shl
sahf
rclb
inc
movsl
cltd
rorl
jecxz
mov
pop
loopne
push
aaa
insl
lds
dec
aaa
jbe
mov
adc
aam
mov
into
movsb
shll
xacquire
sarb
lods
pop
adc
inc
movsl
sbb
rcrl
sbb
adc
aam
dec
rclb
and
shrl
movsb
sbb
ror
and
mov
out
inc
rclb
pop
fnstenv
mov
and
jno
push
adc
push
es
adc
pop
inc
and
lock
rolb
xchg
lds
xchg
mov
test
lahf
loope
push
imul
movsl
lret
xor
jge
idivl
nop
fsts
sbb
sbb
rcrl
pop
adc
jg
push
movsl
mov
push
adc
es
ljmp
xchg
sahf
mov
pop
push
jns
dec
hlt
js
int3
dec
std
dec
rcrl
cld
les
jae
mov
fldenv
repnz
in
shrl
jae
enter
stos
lahf
stos
adc
aam
xor
pop
movsl
dec
add
mov
mov
and
and
jecxz
shlb
fisttpl
movsb
ljmp
call
rep
loope
inc
movsl
mov
push
shrb
xor
push
mov
cwtl
stos
and
addr16
icebp
pop
fcoms
xchg
inc
mov
or
pop
js
and
nop
out
xor
add
xchg
mov
lret
iret
insl
dec
fsubl
mov
xor
leave
mov
jle
fimuls
je
jne
pop
mov
mov
jbe
mov
inc
sar
jmp
mov
rorl
das
mov
stc
mov
or
lahf
jae
push
repnz
pop
ror
fs
cmp
xchg
ror
repz
aas
xchg
push
or
sub
rcll
jns
divl
sti
jno
mov
fstps
mov
inc
leave
pause
cmpsl
xor
ljmp
xchg
cmp
sub
adc
es
subb
jp
adc
mov
rol
pop
and
mov
addl
and
xchg
loope
cmp
or
xchg
sub
xor
xor
mov
pop
ss
aaa
push
cmp
jae
cmpsl
outsl
jnp
xchg
xor
push
je
sub
movsb
enter
adc
sub
xchg
das
sub
jl
sub
dec
out
or
inc
sub
mov
xlat
jbe
push
stc
cmpsb
shl
das
push
stc
push
jle
rolb
mov
call
adc
push
pop
shrb
out
adc
cmp
out
iret
jo
cmp
seta
shl
das
sbb
ja
enter
inc
outsl
adc
jp
jo
add
leave
sbb
xchg
cmpsb
jp
jo
imul
jmp
sub
in
test
mov
xlat
rol
movsb
cmpsl
nop
bswap
sub
dec
mov
out
xchg
mov
mov
mov
inc
or
aas
mov
nop
push
add
mov
stos
stc
or
adc
aas
negl
ds
int
adc
aas
test
mov
push
jl
push
aas
lret
inc
pop
mov
mov
xchg
aas
push
pushf
in
rcr
push
pop
leave
fst
adc
pop
xor
xor
sbb
xchg
cmp
dec
cmc
cmp
add
out
popl
mov
lock
out
repnz
sub
js
lock
les
add
hlt
dec
sarb
mov
lock
or
les
cmp
or
xor
pop
les
jnp
sahf
testl
pop
adc
xor
ljmp
popl
push
leave
xor
mov
sarb
push
lret
xor
dec
aas
das
sub
xor
xchg
xor
xor
mov
aaa
mov
mov
les
cld
das
cs
fstl
jno
and
xlat
adc
daa
mov
inc
mov
sahf
aad
call
xchg
xor
bound
jg
leave
add
mov
mov
xchg
fs
loop
or
push
xchg
sbbl
sub
jnp
pop
jne
or
adc
sub
push
pop
aas
pop
cmp
push
outsl
data16
xor
jne
arpl
sbb
cld
or
mov
mov
daa
push
rorb
das
sub
pop
mov
xchg
fcmovb
dec
pop
mov
cmpsl
jge
push
icebp
push
mov
cmp
dec
into
lock
adc
xor
pushf
push
aas
adc
fisttpll
into
sarb
sub
pop
mov
xor
mov
xor
push
movsb
es
in
in
mov
adc
push
xor
es
out
sub
pop
mov
mov
sahf
mov
push
xchg
and
cmpsb
jb
aad
cmpsl
js
inc
jge
push
jb
subl
popf
int3
iret
mov
jge
icebp
jb
ljmp
lret
xchg
and
xchg
add
xlat
test
sarb
shl
test
xchg
xchg
pop
rorl
push
rorl
fiaddl
sub
shlb
mov
movsb
cwtl
jb
rcrl
inc
lahf
mov
mov
shll
xchg
loop
rcl
xor
shrl
xchg
adc
int
and
jle
out
adc
xchg
fiaddl
cld
jle
xchg
jecxz
insb
ja
daa
jge
repz
je
mov
sti
stc
pop
dec
into
lock
sahf
mov
or
jmp
xorl
loopne
mov
xor
pop
pop
push
mov
iret
and
dec
aaa
adc
scas
xchg
pusha
adc
out
dec
dec
inc
shll
sahf
cwtl
xor
std
jecxz
xchg
jb
out
outsb
jno
jne
mov
inc
fsts
out
jge
test
push
rolb
sub
mov
mov
es
ss
in
test
push
push
mov
stos
ja
adc
dec
ja
outsl
push
or
ficoms
sarb
js
dec
mov
pusha
add
jge
mov
ja
add
hlt
jge
inc
shl
ds
jbe
xchg
out
mov
jge
xor
stc
out
adcl
mov
or
jo
sarb
shll
mov
mov
fs
add
xlat
pop
ret
repnz
sahf
outsb
xchg
mov
xchg
xlat
cmp
negb
out
enter
call
inc
add
jge
jnp
stc
out
mov
xor
jnp
or
ret
nop
dec
data16
xlat
and
xchg
pop
in
cltd
lret
lds
pop
daa
jge
imul
aas
mov
movb
out
jge
mov
jbe
int3
mov
daa
xor
xchg
xchg
divl
xor
pop
add
cmc
jb
clc
out
jge
dec
push
rcrl
adc
ret
jmp
xlat
test
xchg
add
and
je
ror
inc
scas
xchg
ds
xor
cmp
je
mov
lret
inc
fbstp
shrl
xchg
es
push
xchg
addr16
out
xor
insl
xchg
jle
inc
adc
adc
jge
mov
xchg
sub
dec
sub
mov
push
je
rorb
pop
mov
in
out
sarb
lock
xor
mov
xor
xchg
insl
out
test
pop
repz
pop
cmp
aad
cmpsl
movsl
xor
push
sarl
mov
mov
pop
out
daa
jge
xor
shll
xor
in
pusha
rcl
test
inc
loop
sahf
lcall
mov
sarl
leave
dec
xor
xor
xor
xchg
push
rol
pop
scas
xor
pop
adc
int3
mov
out
sub
jb
jne
sub
xchg
mov
sti
mov
inc
stos
xchg
sahf
lcall
push
out
jae
jae
inc
jge
rclb
xlat
out
dec
jp
imul
add
xor
das
mov
popf
xlat
and
cmp
xchg
fsubr
fildll
cmp
pusha
into
dec
jge
aaa
inc
mov
aad
int3
push
mov
push
clc
xor
mov
jno
mov
decl
sub
mov
xchg
push
mov
leave
cmc
sahf
xor
xlat
mov
into
dec
jge
test
enter
les
mov
xchg
xchg
sar
roll
sarb
adc
inc
lock
jge
pop
int3
push
xor
mov
push
push
lock
shrb
pop
push
out
leave
mov
add
rorl
jo
out
mov
mov
les
sub
ffreep
adc
stc
push
mov
xchg
arpl
mov
xchg
shlb
mov
subl
rclb
popf
les
cmp
test
jbe
out
xchg
test
out
sub
movsb
mov
xchg
xor
in
movsl
lcall
dec
out
leave
ja
rcll
cli
shlb
and
xchg
mov
sbb
add
aad
dec
jns
jae
fdivp
leave
push
into
sarb
xor
pop
arpl
sbb
mov
or
adcl
test
jge
call
mov
daa
sahf
sbb
dec
jbe
fwait
call
dec
rolb
adc
out
mov
mov
in
xor
ja
sbb
cmp
stc
fwait
jne
cmp
push
push
pushf
fwait
leave
sti
shrl
xchg
data16
ror
out
push
ss
mov
xor
mov
sarb
sti
sahf
imul
cld
nop
jnp
push
adc
in
scas
jg
ret
push
fld
nop
aaa
popf
jecxz
xchg
shl
push
dec
sti
ret
xchg
cmp
jo
shlb
leave
inc
or
fidivrs
add
sti
mov
and
adc
popa
adc
push
rcrl
jb
fst
and
lock
leave
into
cwtl
shll
pop
aam
aad
cmpsl
test
or
xor
and
mov
xchg
stos
xchg
js
cwtl
aad
xor
jb
cli
out
dec
or
xor
inc
jge
pop
sahf
sbb
adc
sahf
push
negb
fcom
and
les
mov
insl
xor
sbb
jb
dec
sub
sbb
inc
jp
inc
shrb
sub
mov
stc
clc
lods
sbb
cmp
dec
inc
arpl
mov
fidivs
sub
mov
jp
mov
adc
shlb
mov
mov
arpl
sbb
cltd
rcr
das
enter
test
adc
shlb
mov
mov
jmp
mov
stc
jns
mov
jno
xor
mov
clc
out
jge
loop
shrl
cmpb
adc
jb
jb
add
inc
pop
fstps
rcr
popa
mov
stc
push
mov
stc
xchg
sub
lcall
jp
dec
scas
mov
aas
lea
xchg
sbb
sub
xor
fs
data16
adc
jge
push
stc
and
pop
lods
cmp
cmp
test
mov
stc
adc
mov
orl
pop
mov
xor
sub
pop
cmc
adc
adc
jge
jg
sbb
pop
xor
jge
pop
adc
mov
mov
mov
jp
and
push
jp
inc
jnp
xchg
jp
fcompp
dec
clc
out
jge
lcall
pop
mov
push
mov
pop
cmp
pop
mov
mov
jp
push
inc
push
mov
mov
mov
shl
mov
cmp
sarl
pop
ficomps
mov
add
or
dec
inc
out
pop
dec
out
mov
mov
ret
insb
loop
fimuls
pop
fs
jbe
insl
inc
arpl
sti
fisubrs
pop
xor
popa
pop
cmpsl
stc
lods
push
clc
aas
jg
sub
aas
in
mov
stc
decb
jmp
mov
pop
xorl
lock
lret
add
rorb
stos
hlt
pop
xchg
scas
and
and
adc
jecxz
into
jg
jnp
insl
daa
xor
inc
jge
hlt
mov
adc
aam
mov
dec
and
and
nop
jb
ret
jg
cmp
xchg
bound
lret
push
and
arpl
lahf
aas
cli
mov
into
jae
fs
pop
outsb
lahf
sbb
jae
mov
test
mov
lahf
sub
fdivs
pop
cmpsl
jge
mov
ja
pusha
test
sub
loope
add
xchg
lret
push
into
mov
int3
roll
pop
mov
inc
mov
push
inc
push
dec
fistps
mov
jne
shrl
fbstp
leave
sbb
add
imul
adc
insl
call
aam
out
mov
xchg
mov
mov
clc
add
push
jge
add
cmp
test
sarl
nop
lods
push
pop
inc
inc
and
push
pop
cmp
jge
or
and
or
cmp
xchg
cmp
mov
mov
inc
pop
push
push
iret
pop
xor
rcr
mov
push
inc
cmp
shlb
loope
sahf
aaa
mov
into
jl
and
jl
jge
icebp
jl
mov
xchg
jl
jecxz
jl,pt
jge
and
test
push
dec
repnz
xor
das
fiadds
pop
pushf
sahf
mov
lea
mov
pushf
push
mov
addr16
mov
jl
in
mov
mov
mov
push
pop
pop
nop
sahf
and
jp
int
fcompl
or
sub
inc
jge
dec
fsubrl
pop
dec
fdivl
jge
cltd
fcompl
negl
shll
push
mov
lahf
inc
out
jp
mov
subl
cmpsl
jge
rcll
rol
jg
mov
rol
cmp
adc
sbb
sbb
inc
fisubrs
clc
out
jge
xor
fdivrs
cmp
pop
xchg
cwtl
loope
xlat
inc
jge
add
stos
nop
cmp
cmp
cmp
push
mov
mov
cmpsb
pop
xor
lods
pop
roll
xchg
pop
shlb
pop
push
inc
rcrl
inc
test
aaa
mov
scas
jge
test
cmp
xor
leave
mov
fldt
jp
dec
cmpsb
clc
cmp
push
jge
push
ss
in
shlb
pop
ffreep
outsb
fbstp
sarl
rcr
inc
popf
shrb
mov
shl
mov
cmp
xor
inc
sahf
mov
das
mov
xchg
sub
pop
ljmp
std
push
dec
mov
xor
shrl
fldcw
jp
bound
add
shrb
xchg
pop
cmpsl
jge
dec
mov
adc
frstor
lock
push
rolb
push
pop
push
pop
and
mov
shlb
add
jp
mov
leave
and
out
ds
addr16
out
jge
mov
rolb
xor
test
pop
xchg
and
mov
mov
push
cli
out
shl
out
pop
push
mov
pushf
shl
add
lods
inc
mov
adc
sub
jle
sbb
jle
fimuls
mov
lods
sahf
rcrl
adc
xchg
adc
leave
fs
mov
pop
xchg
scas
xchg
rorl
cltd
mov
cld
aam
movsb
loop
add
or
shrb
sbb
xchg
sbb
pop
lcall
loop
mov
sahf
adc
shl
setle
pop
cmpsl
jge
or
out
rorb
adc
add
xor
je
fidivl
adc
jge
lock
add
movsl
xorb
loop
repnz
mov
jb
pop
mov
and
and
mov
dec
inc
push
mov
inc
xchg
sarb
inc
leave
arpl
out
mov
adc
mov
ficomps
xor
shrl
dec
cmpl
push
sbbl
incl
add
jmp
in
mov
fucomp
mov
pop
mov
ret
xchg
pop
pop
rol
xor
aam
pop
ljmp
mov
shrl
leave
inc
jecxz
xor
stos
jecxz
sub
mov
inc
mov
js
mov
mov
stc
test
cwtl
arpl
add
dec
loopne,pt
icebp
add
addl
pusha
add
dec
or
and
mov
sarl
cmp
cmpsl
clc
and
lods
xchg
out
mov
add
adc
xor
inc
inc
xor
into
sarb
cmpsl
pusha
sahf
aad
call
push
stos
mov
xchg
mov
sahf
add
add
into
inc
sub
mov
pop
adc
xor
jbe
sahf
sti
mov
ds
adc
mov
mov
adc
mov
mov
jnp
test
ja
jp
mov
mov
mov
push
inc
mov
push
inc
xor
ror
jbe
fldenv
popf
jge
mov
les
shll
cltd
loopne
add
loopne
or
test
add
out
ror
out
roll
xor
sahf
xor
mov
xchg
nop
fistps
shll
pop
popf
lret
sbb
cwtl
push
jmp
jge
lahf
scas
and
sbb
lret
outsl
jecxz
inc
daa
movsb
sti
ret
xchg
inc
dec
movsb
cs
cmpsl
cwtl
inc
adc
sub
and
arpl
inc
sahf
sub
out
popa
push
add
mov
pop
xlat
inc
xlat
out
leave
inc
add
xor
xlat
rol
cmp
ljmp
push
outsl
mov
int
and
js
es
mov
pop
rcrl
add
lods
lret
mov
sub
rcll
insl
sbbl
roll
faddl
rcrl
sbb
xor
fsubs
ja
dec
add
fcmovnb
sub
add
push
add
shll
js
mov
inc
jge
sahf
js
add
or
pop
xchg
or
push
mov
dec
loope
mov
out
pop
sahf
sbb
push
lock
and
scas
data16
mov
push
inc
in
cmp
int
cltd
lret
jbe
add
sbb
mov
sbb
add
daa
jge
mov
daa
arpl
bound
scas
iret
inc
push
mov
push
xor
pop
push
bound
push
sar
stos
jmp
arpl
bound
and
inc
loop
es
mov
addb
adc
cmp
ss
pop
lret
fwait
inc
dec
xor
pop
xor
mov
xor
mov
outsb
push
ss
mov
daa
jbe
pop
mov
loopne
jle
test
xor
xor
int3
jns
inc
mov
loopne
adc
mov
faddl
aam
mov
js
xchg
inc
cmp
xor
cmp
fisubl
sub
ret
sub
jne
repz
pop
loopne
daa
dec
inc
inc
stos
fnsave
sbb
push
pop
stos
xchg
pop
jmp
mov
cld
add
lret
pop
mov
mov
cmp
ds
ret
mov
test
cmp
mov
cmp
scas
sub
sar
mov
xlat
sti
xor
fnstcw
xchg
cmp
testb
shl
fiaddl
push
xor
sub
inc
pop
mov
movsb
jg
mov
in
mov
mov
mov
adc
bound
aad
ret
cmp
mov
xor
mov
inc
lds
adc
inc
ror
js
cmp
xorb
add
xchg
cmp
push
push
mov
repz
inc
mov
ss
mov
rclb
mov
mov
xchg
jmp
add
mov
and
inc
inc
fbld
dec
popa
out
ficoml
mov
push
pusha
orb
test
mov
mov
ss
add
xor
fidivrl
arpl
loopne
fbstp
cmpsl
xchg
mov
aaa
ds
adc
popa
adc
lcall
fiaddl
aad
mov
jne
fildl
and
xor
mov
fstl
jge
sbb
cli
sbb
flds
leave
ficoml
inc
sahf
xlat
rcrb
mov
xlat
jge
jno
ret
mov
mov
mov
fcmovb
iret
push
es
cmc
add
lahf
xor
inc
adc
arpl
lret
aas
scas
popa
in
mov
mov
xchg
rolb
outsb
mov
sbb
jno
mov
pop
inc
xchg
mov
xor
push
xor
xor
std
movsl
ss
imul
xchg
and
inc
or
js
data16
fiadds
mov
push
lahf
cmpsl
add
sar
adc
loopne
add
dec
ds
out
sbb
loopne
mov
mul
adc
sub
stos
ds
push
xchg
jmp
loope
test
lar
adc
inc
lahf
push
push
jmp
adc
add
sbb
fidivrl
and
out
daa
test
xchg
add
sti
std
cs
cmpl
dec
jmp
mov
lahf
add
sbbl
sbbb
inc
stc
xchg
mov
pop
cli
subl
sahf
movsl
mov
mov
rcrb
scas
andb
cmp
and
fisttpl
adc
ret
inc
dec
push
stc
mov
les
cwtl
loope
jb
inc
cmp
test
pop
leave
pop
and
idivb
and
cmc
lret
mov
mov
push
jg
subb
fildll
in
cmpl
add
cmpb
arpl
mov
sbb
or
out
ret
outsl
mov
in
pop
pop
pusha
inc
xor
shl
loopne
pusha
jne
in
pop
dec
inc
popa
mov
jo
out
cwtl
leave
dec
adc
jo
mov
addb
arpl
xchg
lahf
cmpl
cs
dec
cmpsb
and
inc
mov
jle,pn
inc
fistl
xor
leave
loope
xchg
inc
mov
mov
jmp
movsl
adc
mov
push
add
sti
cmp
das
inc
xor
in
sbb
pop
jo
cltd
inc
and
push
adc
jmp
sbb
test
xor
mov
cltd
fidivl
or
loope
mov
pop
mov
dec
js
push
shlb
mov
sbb
mov
test
mov
rclb
mov
mov
shll
mov
and
mov
movb
subb
movsl
sahf
es
fwait
mov
jecxz
adcl
xorb
enter
push
cmpsb
and
arpl
leave
xchg
movsl
ret
cmpl
mov
stc
scas
sbb
pop
jl
xchg
out
lcall
loopne
push
pop
test
fs
sbb
sub
mov
cltd
pop
enter
call
add
adc
xor
jl
cli
dec
pop
jmp
cwtl
into
and
jg
movsl
sti
inc
out
xchg
pop
push
clc
fldcw
mov
jmp
int3
inc
push
mov
push
mov
mov
xchg
fsub
lahf
fstl
xchg
js
mov
push
adc
push
mov
out
sub
sar
jp
push
packuswb
test
lcall
mov
sub
cli
ljmp
xchg
jl
notl
ja
jp
js
stos
sarl
mov
idivb
xchg
bound
sbb
cld
mov
mov
pop
sbb
pop
mov
mov
leave
lods
popa
jns
xchg
and
nop
mov
mov
jmp
pop
dec
jne
stc
xor
dec
pop
pop
test
js
mov
pop
aas
lret
adc
cld
idivb
jmp
mov
movsb
bound
mov
ror
and
mulb
or
jne
ds
adc
mov
loopne
scas
mov
fbld
and
insb
js
cli
sbb
push
pop
mov
adc
adc
sub
pusha
js
shll
pop
ss
popf
fldl
aas
and
pop
imul
mov
outsl
add
inc
in
adc
das
sahf
pop
fdivl
mov
je
xor
test
sub
push
sbb
mov
mov
add
xor
cmp
xorb
movsb
or
and
mov
test
pop
jecxz,pt
xchg
push
in
js
iret
cmpb
mov
je
jns
xorl
loopne
dec
mov
sub
in
dec
inc
sub
mov
jl
cs
mov
jno
shll
lcall
je
xorl
mov
out
roll
mov
xor
mov
xor
js
test
mov
repz
sahf
pop
or
adc
inc
rclb
mov
jp
inc
sub
lods
nop
std
inc
out
push
cmp
std
sbb
xchg
inc
mov
arpl
ret
cli
call
mov
add
mov
mov
scas
insl
pop
mov
adc
pop
sti
add
rcll
xor
add
cwtl
jne
dec
arpl
lods
inc
inc
jle
in
jmp
ret
push
add
sbb
mov
lret
popa
push
loop
call
inc
pop
or
mov
or
mov
inc
dec
dec
hlt
add
sub
arpl
repnz
insb
sub
jg
push
scas
arpl
xor
fnsave
movsl
std
bound
cli
xchg
pushf
dec
dec
mov
loopne
add
xchg
push
cmp
fsub
imul
bound
cmp
je
dec
stc
pop
mov
nop
push
pop
mov
pop
stc
mov
and
push
inc
cmpl
lods
stos
jo
inc
gs
stos
outsb
inc
cmp
ds
cmp
push
lcall
lock
lea
cmp
xchg
sarb
ret
aad
push
pop
cmp
cmp
mov
movsl
ds
ret
cmp
inc
xor
sbb
add
mov
addl
mov
xor
arpl
arpl
lret
mov
mov
sub
jecxz
inc
fildl
pusha
sub
and
push
jg
std
mov
pop
mov
pop
push
scas
inc
daa
and
mov
dec
cmp
mov
push
push
mov
mov
pop
add
popl
pop
inc
mov
out
pop
xor
xchg
sarb
mov
imul
aas
loopne
sub
gs
nop
xchg
mov
mov
mov
add
or
mov
cmp
movsl
call
jmp
mov
rcll
cmp
sahf
aas
mov
adc
mov
inc
lods
std
and
shll
or
daa
add
stc
push
enter
aas
jno
out
lahf
jbe
dec
testb
mov
sub
mov
lds
cmp
mov
adc
and
dec
mov
xor
xchg
shl
negb
cmp
insl
jmp
cmp
data16
mov
lcall
loop
clc
js
cmp
jnp
scas
xchg
cmc
dec
sahf
cmpsl
mov
insb
stc
inc
orb
shlb
mov
pop
sub
jne
mov
cltd
mov
ljmp
mov
mov
bound
lret
mov
pushf
ds
cmp
adc
push
aad
push
cmp
stos
and
das
addr16
jp
jge
rol
int
mov
xorl
jmp
bound
addr16
mov
mov
sbb
js
or
jl
loope
inc
and
mov
mov
push
sbb
jns
push
test
mov
mov
mov
mov
out
adc
cmpsl
inc
loopne
lods
frstor
jmp
sbb
xor
pop
test
movsl
pop
add
dec
aaa
cwtl
xor
inc
int
inc
or
test
scas
mov
cwtl
jbe
and
push
adc
or
loopne
dec
xor
cltd
jns
jbe
mov
cmp
addw
pop
xor
add
xor
push
popf
push
cmpsl
out
in
jbe
stos
inc
cmc
scas
add
lds
fcmovnb
mov
adc
leave
test
xor
test
xchg
ror
xchg
mov
jne
outsb
mov
push
xchg
mov
mov
jns
shll
gs
jl
pop
es
mov
lds
mov
mov
stos
mov
repnz
and
and
push
les
stc
daa
push
xchg
iret
inc
sbb
xor
fcmovnbe
scas
lods
ja
push
mov
adc
cld
xchg
cmpsl
fsubs
add
adc
icebp
mov
inc
adc
and
sub
movsb
jns
mov
mov
fidivl
pop
clc
dec
xchg
push
inc
or
jmp
movsb
mov
jle
ret
pop
adc
out
mov
test
scas
push
mov
mov
cmp
or
insl
cli
popf
lcall
inc
cli
jns
adc
xchg
sub
inc
jo
pop
cmc
xchg
mov
mov
inc
aad
sbb
mov
aad
jg
xor
mov
jb
rolb
mov
jo
fneni(8087
xchg
sbb
mov
push
or
subb
add
cmpsb
out
xchg
nop
imul
inc
popf
inc
sub
push
push
and
mov
stos
bound
push
pusha
mov
sbb
sbb
mov
popa
mov
xor
movsl
mov
mov
ret
mov
mov
mov
loope
aaa
and
xor
mov
mov
js
jl
ss
andb
mov
mov
cmpb
cmp
add
mov
mov
inc
add
bound
loopne
leave
or
out
xor
jge
pusha
mov
cmpsb
aaa
mov
jns
xchg
xor
mov
mov
shll
jge
bound
jne
sbb
sub
fucompp
sub
into
mov
mov
stos
pop
mov
testl
inc
pusha
dec
push
or
je
mov
stos
push
and
cmp
cmp
inc
mov
std
test
fcomps
adc
and
inc
pop
adc
mov
add
ret
adc
addb
mov
adc
outsb
push
cmc
mov
pushf
negl
pop
data16
cmp
testb
inc
add
cmp
xor
jl
popf
cwtl
push
movsl
mov
mov
jp
mov
mov
mov
cwtl
loopne
ret
jno
lret
adc
xchg
dec
aad
pop
push
jg
jbe
adcl
daa
pop
jmp
mov
jmp
xor
mov
pop
test
ret
sbb
out
mov
mov
sbb
jae
ss
sti
push
dec
and
mov
mov
gs
lods
aaa
pop
and
mov
mov
adcb
xchg
and
popa
pop
movsb
push
add
daa
inc
mov
cmp
inc
adcl
cmp
or
es
mov
inc
mov
jno
pop
mov
sub
sbb
jecxz
push
js
mov
mov
jl
adc
pop
fdivs
sub
inc
pop
jle
sbb
orb
pop
pop
mov
pop
lea
mov
andb
fwait
pop
xor
vhsubpd
popf
mov
sub
test
mov
repz
aas
lods
push
test
imull
add
je
sarl
paddb
test
push
sub
fisubl
rcll
repnz
sbb
xor
mov
sub
loopne
icebp
xor
mov
lea
bound
sarl
stos
pop
sbbb
mov
mov
push
jne
mov
add
jne
js
pop
and
sub
or
je
inc
adc
push
push
mov
mov
mov
ds
push
pop
imul
push
in
mov
inc
push
jecxz
jp
xchg
loop
loop
subb
jo
std
push
fiadds
fisubl
jle
xor
je
repz
stos
xchg
push
pop
mov
cmpsb
iret
dec
mov
sub
aaa
repz
and
icebp
adc
mov
jo
sbb
aam
movsl
adc
ss
dec
xor
sarl
inc
push
adc
mov
xor
ret
xorb
std
jns
sub
cmpsb
or
mov
mov
loopne
pop
pop
lds
out
in
mov
mov
jnp
inc
cmp
push
mov
ss
jne
aam
dec
push
mov
stc
mov
js
bound
inc
mov
js
test
and
sahf
or
cmp
mov
xor
mov
pop
add
mov
pop
mov
pop
inc
inc
lahf
mov
adc
insl
lcall
mov
xchg
push
xor
mov
pop
cmpsl
sahf
push
push
aas
scas
inc
cmp
aas
and
in
sub
inc
mov
les
loope
dec
shl
inc
mov
loopne
movsl
cld
xlat
mov
fisubl
mov
mov
cmpsl
add
cmpb
sar
and
repz
popa
ret
xor
inc
test
and
inc
adc
dec
cltd
mov
mov
pusha
movsb
pop
mov
cmp
movsl
test
cmp
loopne
pop
mov
cmovo
sbb
bound
sbb
pusha
add
sbb
pop
and
js
lret
push
mov
sbb
neg
shlb
pushf
and
in
jns
shrb
jle
jne
xchg
lcall
sahf
cmp
fcompl
push
add
cmp
cmp
jp
mov
clc
lcall
dec
xchg
or
and
mov
pop
inc
cli
xor
jo
movsb
aaa
pusha
xor
sbb
dec
mov
test
test
out
mov
sbb
loopne
adc
cmpsb
adc
mov
dec
call
and
mull
push
add
xchg
popa
lcall
aam
cltd
jbe
aad
and
mov
lret
sbb
out
inc
bsr
scas
test
push
movsb
data16
sub
fnstenv
outsl
movsl
xchg
push
int
lahf
fndisi(8087
push
and
push
fdivrs
jecxz
cmp
xchg
fcmovnb
xchg
test
inc
iret
rorl
mov
jecxz
inc
std
outsb
test
mov
inc
xchg
add
dec
mov
xor
bound
scas
out
jne
cmp
mov
xchg
mov
cs
mov
fs
in
and
xchg
mov
scas
inc
movsl
ss
inc
mov
xchg
int
jle
fsubr
cmp
push
mov
mov
and
popf
jg
sbb
push
pop
ja
ljmp
rcr
push
push
adc
nop
mov
mov
jo
ljmp
mov
or
cmp
dec
mov
mov
enter
sti
out
je
clc
jne
stc
jo
cmp
lret
jmp
negl
cmpsb
xorb
cmp
rclb
dec
inc
loope
xor
pusha
and
add
fisttpll
mov
cwtl
popl
popa
or
outsl
jl
test
xor
cwtl
jg
aaa
cmp
cli
mov
movsl
dec
pop
jo
cmp
lods
jne
cwtl
repnz
cmp
mov
in
movsl
enter
mov
inc
mov
mov
mov
sbb
mov
pop
ficompl
xchg
fsubrp
les
jne
stos
sub
push
fmuls
add
pusha
incl
lea
sarb
iret
sub
mov
mov
out
popf
push
push
jo
mul
paddusb
shll
js
fs
xor
jae
iret
stc
aas
mov
notb
js
popa
and
cmp
push
hlt
sbb
mov
push
mov
jbe
push
mov
push
mov
call
bound
aam
cmp
popa
movsl
jns
and
movsl
data16
xor
in
jns
ret
ret
mov
cmpsl
js
inc
mov
and
add
cmp
or
inc
leave
and
ss
jp
rolb
inc
dec
fmull
mov
cmpsb
mov
sub
mov
cmp
push
inc
mov
xchg
jb
mov
pop
adc
push
cld
sbb
mov
ds
jns
ret
dec
icebp
adc
clc
mov
mov
mov
xor
mov
test
inc
push
jmp
int
mov
pop
testb
mov
repz
jns
jnp
xchg
inc
jp
jns
dec
clc
xchg
xor
xor
mov
mov
dec
xchg
mov
jecxz
cmp
sub
and
icebp
stc
and
es
and
add
movsb
mov
dec
xchg
add
cmp
jnp
and
jge
pusha
mov
inc
cmpsb
daa
adc
in
push
push
sub
xchg
inc
test
inc
push
fnstenv
adcb
jle
mov
jb
mov
dec
xchg
icebp
mov
mov
mov
leave
divl
xchg
mov
bound
dec
cli
lock
push
push
int3
adc
adc
das
shl
orb
mov
xchg
push
int
cmp
pop
aas
dec
rorl
fidivrl
xlat
clc
jge
cmc
mov
cmp
jp
adc
mov
stc
inc
lahf
mov
fimull
cmpb
mov
cmp
loopne
adc
es
outsl
push
movsl
cmp
lcall
sbb
adc
and
adc
aam
addr16
lock
push
pop
fs
inc
sti
adc
movsl
out
jo
jl
fiaddl
or
push
dec
movsl
loope
xchg
cmp
and
adc
cwtl
ss
push
je
xchg
mov
in
mov
loope
sub
pop
or
ret
push
out
xchg
adcl
dec
push
shlb
add
adc
adc
outsl
cwtl
xor
push
cmp
icebp
pop
je
ljmp
xchg
or
movsb
lds
add
cwtl
rcl
mov
stos
inc
nop
mov
maxps
scas
xor
js
xchg
or
das
ljmp
sbb
insl
lret
jns
push
insl
pop
lea
jp
push
lods
daa
xchg
in
cmp
mov
je
cmp
push
jle
out
bound
push
movsl
addr16
push
cmpsl
mov
adc
cmp
shll
ds
fcmovnu
mov
and
inc
lods
mov
push
inc
pop
test
inc
xorb
rcrl
cmc
fs
xchg
cmp
sbb
lcall
mov
sub
pop
adc
mov
jno
jno
mov
pop
cmpl
mov
je
ret
lcall
stos
fldenv
cmc
mov
lds
xchg
xchg
dec
inc
cmc
mov
sahf
lret
es
inc
loop
dec
ret
inc
add
movsb
notl
pusha
int
push
es
mov
icebp
addb
lods
xchg
jns
xchg
mov
fidivl
test
inc
or
ds
adcl
mov
inc
daa
fnstenv
mov
rorl
daa
jl
xor
enter
std
inc
stc
stc
inc
clc
mov
mov
and
outsb
stc
or
sbb
ret
and
pop
xchg
inc
arpl
fstpl
addr16
mov
addr16
rcl
js
out
mov
sbb
mov
mov
pop
inc
mov
sbb
mov
nop
aaa
scas
and
adc
cmc
or
adc
jp
or
and
lea
push
pusha
fistl
std
adc
sbbl
mov
out
inc
in
in
aaa
xchg
mov
test
xor
fstpt
push
push
mov
jns
xchg
iret
adc
outsb
mov
pop
daa
and
mov
xchg
add
sbb
pop
ljmp
enter
fs
decb
sbb
cli
and
add
in
adc
popa
dec
mov
gs
das
push
mov
insb
rorb
add
push
or
dec
cmp
aas
rclb
mov
xchg
ss
mov
xchg
jns
lret
jp
xchg
dec
sub
push
jo
sbb
jae
sbb
hlt
scas
clc
adc
gs
mov
sarl
decl
out
mov
sub
dec
pop
ds
inc
cmp
xorb
sbb
sbb
jp
movsl
or
enter
lods
jl
cli
sbb
or
mov
pop
ljmp
push
xor
outsl
jle
pop
dec
cmpsb
sub
pushf
bound
mov
inc
adc
ret
xor
cmp
bound
ret
pop
rcrb
or
mov
subb
jns
sbb
pop
add
mov
fcmovu
dec
mov
pop
shll
xchg
cmp
rolb
inc
inc
and
sti
jle
pop
loope
jmp
inc
mov
ficomps
fimull
sbb
test
imul
add
insb
xchg
popf
xchg
dec
loopne
inc
rcr
pop
lret
loopne
ja
ljmp
js
fldt
mov
test
pop
stos
fcomi
add
inc
leave
pop
loop
lahf
jp
bound
adc
pop
dec
sahf
cltd
adc
sbb
cld
bound
cmp
inc
add
mov
lcall
xor
cmp
cltd
and
jo
movsl
nop
mov
xchg
sar
jp
mov
inc
mov
xchg
int
mov
jbe
mov
outsb
xor
mov
imul
mov
sahf
push
adc
rclb
movsl
cmp
shrl
jnp
jb
popa
xor
sbb
fbld
aas
pushf
jmp
loop
loop
add
lods
clc
imul
arpl
inc
inc
mov
push
mov
ficoml
xorb
sub
movl
add
ljmp
shlb
fcmovb
push
mov
fdiv
mov
cs
and
cltd
pop
jno
mov
dec
je
sti
loopne
aas
cmc
call
push
std
cmp
decl
and
pop
dec
jle
ffree
fwait
mov
push
mov
scas
repz
cmpsl
sbb
test
neg
or
test
shll
fstpt
shll
fs
lcall
iret
mov
jnp
jo
cltd
imul
out
stc
mov
leave
pop
inc
push
jmp
addb
jmp
pusha
stc
lods
jmp
add
in
jp
lods
push
and
ljmp
mov
dec
flds
outsl
test
sbb
fdivrl
inc
mov
mov
mov
jl
popf
test
into
sarb
stos
sbb
movsl
repz
adc
inc
mov
mov
xchg
pusha
fldl
sub
aas
and
mov
adc
icebp
js
test
scas
aas
js
mov
fsts
jmp
xor
pop
add
sbb
xor
inc
imul
mov
sub
jg
jno
mov
mov
scas
add
mov
lods
mov
pop
das
mov
inc
pusha
mov
inc
mov
shlb
mov
mov
jle
push
sbb
push
mov
mov
shrl
mov
xor
pop
cmp
sbb
popf
out
mov
mov
idivl
dec
xor
xor
hlt
addr16
mov
mov
rcrb
xchg
test
sarl
inc
into
loop
mov
and
push
out
xorl
std
arpl
lret
sti
add
hlt
add
adc
mulb
push
popf
aaa
mov
aas
jl
push
cmp
add
jle
loope
inc
test
cwtl
mov
xchg
dec
shlb
push
adc
frstor
popf
xor
cmpb
ret
mov
sbb
add
ret
mov
sub
pop
mov
cmp
repnz
popa
jle
sub
pop
adc
jecxz
repz
mov
clc
mov
shl
mov
test
jb
out
push
ljmp
mov
cmp
fisttpll
or
fcoml
js
pop
push
ss
jo
pop
shll
clc
incb
fld
xor
psrld
loop
insl
sub
pop
ret
sarb
pop
cmp
in
sub
pop
js
clc
add
add
sti
aam
push
cwtl
inc
das
fwait
jle
insl
xchg
add
icebp
testl
mov
aas
andb
adc
inc
aam
inc
cwtl
adc
clc
stos
pop
push
mov
stc
imul
fnstcw
test
cld
cmp
sbbb
sbb
shll
inc
nop
rolb
inc
sbb
sub
xchg
movsl
movsl
ret
shlb
aaa
xchg
or
ljmp
in
or
mov
dec
xchg
cmc
add
mov
sbb
sbbb
shlb
push
enter
lods
shll
call
clc
cmp
scas
in
sub
mov
lods
lret
iret
cltd
fwait
outsb
pop
jnp
mov
mov
cmp
insb
jb
pop
movsl
push
mov
adc
cld
xchg
outsl
mov
cltd
jecxz
inc
nop
inc
sub
leave
jbe
mov
push
ss
icebp
pusha
mov
mov
xchg
rcrl
adc
or
cmp
stc
stos
rolb
and
and
int3
pushl
bound
inc
xchg
sbb
jl
sbb
jnp
shr
mov
dec
cmpsl
shll
jle
dec
jmp
pop
lods
mov
sub
mov
xchg
pop
das
and
inc
cmp
push
incl
adc
movsb
lcall
in
cmpsl
and
inc
movsl
pop
dec
movsb
icebp
mov
leave
stc
rcrl
testb
jne
int
movsb
aaa
pop
cmp
add
aas
cmc
cld
mov
mov
mov
mov
dec
insl
xor
dec
in
mov
mov
mov
pop
inc
out
xchg
fmull
mov
xorb
insb
ljmp
incb
loopne
loopne
cltd
cmp
jb
pop
lds
push
fwait
sbb
and
addb
xchg
xchg
sarl
fsubs
fsts
sarl
mov
jecxz
decb
push
jmp
push
jle
fsubrl
xor
ds
js
shlb
push
push
cmp
loop
mov
push
fs
add
mov
mov
out
sarb
fcoms
push
sub
js
xor
xorb
mov
jno
pop
mov
mov
ss
cmp
lods
xchg
test
cltd
pop
sbbb
orb
pop
cmp
leave
cmpsb
addb
pop
xchg
pop
movsl
nop
popf
scas
push
int
fiaddl
jp
add
sahf
hlt
pop
or
es
cmovbe
pop
mov
sahf
jns
data16
pop
ret
call
pop
orb
push
cs
cmp
andl
aas
sahf
inc
inc
movsb
cmc
test
subb
jle
cmc
xor
flds
jle
rcll
cmp
jno
ds
mov
push
jle
daa
mov
cmpsl
cmp
mov
jg
test
shrb
pop
adc
cltd
jecxz
ss
fld
xor
and
jo,pt
add
mov
xchg
sub
pop
or
cmp
inc
and
jns
push
cmpsl
push
int3
xchg
leave
mov
push
inc
jo
sti
clc
data16
mov
pop
ret
inc
frstor
movsl
push
movsl
dec
sub
cld
negb
scas
cmp
sahf
jns
cwtl
sbb
sti
mov
dec
movsl
push
jns
iret
rcrl
pusha
xor
cmp
pusha
pop
movsb
js
adc
push
clc
loop
add
mov
aad
andb
add
sbb
cmp
push
inc
xchg
mov
gs
icebp
scas
lret
ss
or
mov
xchg
fsubl
add
cs
idivb
stc
add
mov
jle
shl
fdivl
mov
mov
mov
adc
push
inc
add
sarl
pushf
dec
shl
xchg
or
dec
jge
mov
mov
shrl
mov
cmp
add
mov
enter
or
sbb
mov
jmp
js
lret
mov
inc
sbb
mov
add
pusha
or
add
enter
mov
xor
filds
xchg
pop
daa
movsb
and
mov
jge
pop
pop
rcl
cld
js
or
mov
mov
jnp
loopne
clc
xchg
aaa
stc
mov
mov
test
or
xor
sub
cmp
ds
jns
jne
movsl
cli
inc
das
push
adc
rcrb
ja
movsl
jnp
xor
jge
mov
lahf
sub
jge
xchg
jbe
inc
xchg
push
out
and
push
movb
rcr
push
test
inc
cmp
inc
aaa
test
push
cmp
xchg
adc
nop
mulb
out
mov
in
shll
mov
pop
movsb
jge
mov
loopne
ss
mov
add
jo
mov
ss
xchg
cld
mov
mov
jbe
sarl
sbb
push
fwait
stos
in
in
mov
cmp
lods
xchg
mov
dec
adc
scas
cs
lahf
fiaddl
mov
ret
sbbb
jne
mov
fnsave
mov
test
mov
adc
les
mov
add
inc
popa
mov
pop
sub
into
mov
push
sub
and
mov
mov
push
stos
ja
shl
repnz
jne
mov
js
or
xlat
adc
aas
fnstenv
or
clc
inc
jae
mov
cltd
cmc
adc
sbbb
lret
pop
add
jo
mov
cmp
pop
shll
mov
out
inc
jp
inc
ss
mov
mov
imul
lea
push
jg
adc
out
hlt
dec
inc
pop
rolb
popa
fadds
mov
shlb
mov
xor
ss
mov
pop
inc
fcmovnbe
mov
test
and
cmp
testl
xor
dec
and
cmpsb
xlat
out
mov
mov
mov
sub
cmp
jecxz
call
cli
xchg
repnz
testl
iret
mov
test
inc
fcoml
cmp
and
les
sbb
sahf
mov
movsl
push
mov
test
imul
mov
inc
test
cmp
xor
out
xchg
mov
push
icebp
pop
rol
and
mov
pop
scas
arpl
sbb
sbb
push
inc
lods
push
mov
mov
jge
mov
cmp
xchg
sbb
mov
add
jp
daa
leave
pusha
mov
cmc
sbbl
movsl
dec
mov
mov
sub
mov
js
fwait
shlb
mov
test
mov
xor
mov
lret
sbbl
add
jbe
pop
seto
addl
lods
pop
push
out
xor
js
xor
clc
xor
push
out
push
ficomps
adc
mov
jbe
rcrb
aam
jno
in
cwtl
orb
test
xchg
and
in
rorl
shlb
jge
popa
jb
mov
adc
pop
cmp
jnp
stc
adc
addb
testb
mov
mov
cmp
lahf
pop
cmp
and
mov
jg
outsl
aaa
xchg
sub
pop
cmp
sbb
cmc
pop
pop
mov
cwtl
movsl
lcall
jb
sbb
in
xor
jbe
mov
jle
lods
icebp
cmp
lahf
inc
jp
aaa
adc
and
add
jge
rcll
cmp
push
test
mov
lahf
mov
hlt
inc
dec
out
movsb
ljmp
pop
xor
cmp
int
inc
adc
dec
jle
xchg
lea
xchg
jge
sub
mov
mov
mov
lcall
dec
adc
push
mov
repz
xchg
bound
mov
or
fsts
cwtl
test
outsb
mov
inc
sahf
nop
xchg
mov
mov
in
mov
mov
call
xor
lret
adc
mov
sbb
inc
cmp
inc
cmp
mov
lahf
sub
loopne
xor
adc
adc
movsl
xchg
mov
dec
xchg
jmp
ja
rclb
insl
je
dec
test
mov
cmp
in
xorl
adcb
lahf
adc
ja
dec
fldenv
fs
insl
jno
das
scas
push
lods
imul
lcall
flds
jbe
aaa
pop
adcl
mov
scas
adc
scas
ljmp
jo
dec
push
add
inc
xor
cmp
mov
cmp
fidivrs
mov
adc
mov
lods
adc
loop
lcall
mov
ss
push
rolb
mov
mov
xor
mov
push
xchg
mov
aaa
mov
int
sbb
mov
loop
push
lock
fsubrp
cmp
lods
push
adc
mov
dec
loope
js
lods
popa
push
aaa
pop
in
test
mov
dec
mov
leave
mov
ret
lret
dec
jmp
push
cli
std
inc
cld
mov
inc
fisubrl
xor
icebp
das
jg
fisttpl
out
mov
jno
xchg
sbb
js
add
push
and
std
les
adc
pop
and
movsl
jecxz
arpl
hlt
fs
lret
xchg
xor
push
inc
mov
xlat
mov
mov
inc
xchg
sar
idivb
cmp
ljmp
ds
mov
imul
jno
out
cmpsb
int
cld
mov
adc
mov
addb
fsubs
cmc
push
movsb
mov
cwtl
pop
xor
andb
lcall
stos
pop
cmpsb
cmpsb
pop
jnp
adc
xchg
scas
jle
cmp
cmpb
push
ret
ljmp
shll
mov
idivb
xor
fsts
sub
lds
jns
lcall
adc
das
inc
cmp
insb
loop
mov
fbld
mov
js
inc
bound
cwtl
pop
pop
and
mov
movsb
push
fisubl
xor
ss
pop
add
test
push
inc
mov
push
cmp
dec
mov
jbe
xor
xor
fsubr
dec
jg
mov
cmp
mov
mov
aaa
das
pushf
nop
rolb
clc
cmp
or
mov
inc
push
xor
pop
xchg
mov
inc
movsl
aam
movsb
data16
sub
ss
scas
lods
adc
into
ja
arpl
test
inc
add
mov
cmpsb
frstor
xchg
pop
sahf
nop
outsl
add
or
mov
das
add
jmp
lcall
and
shlb
mov
dec
pop
cmp
lret
movsl
mov
mov
hlt
mov
clc
aas
cmp
xchg
mov
and
pop
loope
and
inc
adc
mov
shl
mov
adc
cmp
and
out
sar
lahf
test
jne
sub
sbb
fnstsw
xchg
xor
stc
dec
sti
dec
in
inc
ja
clc
xor
inc
mov
mov
inc
aaa
and
xor
sarb
into
pop
test
fstpt
xor
dec
popf
mov
test
dec
xchg
lret
test
and
std
das
repz
loop
sub
fcmovnbe
add
movsl
jecxz
cmpsb
and
fdivs
and
cmpsl
jbe
pop
sbb
xor
aas
icebp
pop
sub
lods
pop
jmp
or
faddl
pop
outsb
in
sub
and
adc
mov
stos
adc
pusha
fstpl
sbb
loopne
imul
sahf
xor
sbb
popa
into
sar
ds
cltd
cmp
or
ds
add
jae
mov
inc
mov
cmp
jae
lods
mov
imul
and
in
repz
insl
fdivrl
loop
lea
into
or
jmp
hlt
and
jle
mov
and
adc
scas
sub
shrb
mov
mov
ret
bound
jmp
bswap
mov
adc
push
jbe
ret
pop
and
out
test
lods
mov
and
js
ja
pop
inc
or
push
mov
imul
jbe
rorl
scas
sahf
lods
dec
xor
roll
imul
sahf
mov
adc
sarl
scas
test
sub
mov
pop
pop
sbb
jp
sub
test
movsl
pop
xchg
jo
lock
movsl
dec
xor
fidivrs
mov
bound
movsl
mov
cs
lods
cmp
ds
sub
andl
addr16
icebp
jp
push
rcrl
cld
insl
inc
pusha
mov
popa
sbb
mov
push
jmp
mov
int
cmp
iret
xchg
rcll
pop
jp
xchg
loope
pop
jno
fldl
mov
add
sarl
js
add
cmp
inc
arpl
cs
loopne
dec
push
or
sbb
mov
or
push
pop
je
repnz
in
push
inc
loope
jnp
xchg
mov
in
sbb
test
push
cmpsl
inc
lods
or
cmp
mov
rolb
cld
test
mov
adc
mov
cltd
lods
jnp
icebp
iret
push
mov
mov
push
out
inc
int3
xchg
cli
daa
xor
outsl
dec
mov
fidivrl
inc
sbb
leave
or
mov
add
xorl
loop
pushf
shlb
es
mov
jae
test
mov
xor
clc
sbb
ds
lods
sbb
cwtl
cmp
mov
and
xchg
into
push
out
inc
cli
arpl
mov
das
sbb
leave
sti
lret
sub
adcb
dec
jge
pop
and
mov
inc
scas
xorb
mov
jno
add
mov
mov
inc
lea
in
notl
out
sbb
das
cli
imul
and
mov
rclb
mov
jne
int
mov
cmp
into
mov
movsl
cli
pusha
rcrb
cmpsl
inc
mov
dec
mov
xchg
or
mov
xchg
xchg
fsubrs
mov
jecxz
bound
outsl
jmp
push
aaa
stc
gs
fwait
mov
mov
mov
or
jecxz
daa
mov
mov
xchg
cwtl
jp
xchg
xchg
mov
icebp
jne
daa
mov
inc
cmp
rcrl
sbb
push
jbe
fsubrs
ds
aas
mov
xor
movups
out
pop
dec
sub
fildl
xchg
fstl
rol
or
xchg
mov
sbb
mov
jg
lods
lock
and
enter
fiadds
push
rolb
ret
movsl
mov
shll
xlat
loop
jno
incl
aaa
adc
js
pop
jbe
sub
jns
loope
loope
js
bound
shrb
jl
shll
inc
sub
sub
rcll
in
shll
ss
loopne
fiadds
mov
nop
mov
jb
lods
cmp
and
add
push
cmpb
cwtl
xchg
stos
cmp
mov
mov
or
ja
aaa
xchg
xchg
mov
xorb
into
mov
adc
cli
scas
stos
scas
sub
push
testb
pop
jge
aam
adc
mov
mov
ds
mov
cmp
push
xchg
mov
jmp
or
add
pop
xchg
inc
jae
dec
cmpsb
int
daa
fnsave
or
adcl
jmp
adc
lret
pusha
outsb
mov
ss
lods
sbb
sub
or
sub
sub
sub
nop
mov
sbb
dec
dec
mov
inc
cwtl
adc
push
pop
mov
inc
fidivrl
sbb
cmp
movsl
jp
push
sbb
push
int3
pop
rcrb
cmp
out
gs
fidivrs
cld
loop
jecxz
andb
imul
xlat
push
pop
sti
or
inc
jmp
movsb
jl
je
lcall
andl
mov
inc
daa
movsb
mov
bnd
adc
addr16
cld
movsl
inc
sarl
insb
and
xlat
add
movsl
cmc
insl
repz
inc
add
push
xor
jbe
mov
insb
sub
mov
fldcw
or
cmp
fisubl
add
fwait
shrl
add
sbb
popa
dec
pop
push
popf
sbb
subl
ret
test
rcrb
mov
inc
pop
repz
jl
scas
jb
inc
xor
idivb
inc
popa
jp
mov
mov
mov
push
je
in
jo
xlat
mov
loope
andb
mov
ret
pop
mov
mov
loopne
xchg
loope
inc
ss
in
jle
lods
mov
cmp
clc
add
xor
jp
mov
sub
xchg
cmp
add
cltd
fstpt
movsl
add
shlb
bnd
inc
divb
adcl
mov
fistpl
fnstcw
lcall
inc
add
loopne
cwtl
or
cmp
arpl
movsl
xor
pop
imul
pop
mov
xor
sub
jbe
cmp
xor
mov
in
bnd
adc
pop
add
mov
mov
adc
jo
jle
mov
es
pop
sub
cmp
les
jecxz
inc
push
mov
xchg
xor
xor
int3
sti
aas
mov
out
test
clc
mov
clc
push
jg
fiaddl
xchg
movsl
cltd
jge
fcomps
inc
fldenv
popf
iret
sti
jg
push
sahf
ljmp
popf
push
test
sbb
cmp
dec
shl
cmp
cmp
mov
dec
mov
xor
ljmp
mulb
les
aad
movsl
push
mov
pop
jle
push
xchg
lds
mov
cwtl
pop
aad
test
push
divl
push
les
cmp
and
incb
test
movsl
xchg
mov
sbb
jge
dec
mov
in
aam
cli
xchg
aas
arpl
cltd
jg
jge
popf
push
cmpsl
lret
dec
or
pop
mov
mov
lcall
mov
subb
outsb
mov
and
mov
adc
test
stos
xchg
xor
sub
aam
and
and
mov
cmpsl
push
outsb
fdivr
hlt
mov
mov
pop
test
and
push
xchg
ss
push
dec
jnp
rorb
cmp
ret
sti
jo
aaa
xchg
cmp
fs
adc
sti
pop
xor
call
cs
mov
jne
mov
inc
fwait
sbbb
cwtl
movsb
and
pop
pop
insb
adc
mov
pop
shlb
xchg
inc
cli
xor
test
mov
mov
xor
cmpsl
sub
fs
xor
insb
mov
or
or
xor
jecxz
sarb
xor
cs
out
jle
inc
mov
test
repz
cltd
stc
xorb
adc
push
sti
aaa
scas
push
xchg
push
inc
outsl
jno
pop
lds
mov
es
mov
fs
or
mov
pop
add
addr16
clc
cli
push
mov
repz
and
jp
or
adc
push
xchg
fdivs
ret
mov
push
sub
pop
pusha
jno
std
dec
mov
xchg
lods
xor
out
cmp
cld
icebp
sbb
inc
in
jecxz
mov
mov
test
out
in
mov
push
arpl
clc
inc
mov
pop
dec
pop
pop
cs
pop
cmp
mov
js
loop
fs
dec
mov
cmp
dec
sub
ficompl
dec
xchg
pop
xor
xor
in
mov
cmp
mov
xor
cmpsl
aam
xorl
nop
pop
sbb
xor
repz
mov
xchg
fimuls
push
notb
sub
inc
inc
and
adc
into
clc
mov
jp
icebp
mov
popf
adc
popf
mov
pop
icebp
pop
mov
testb
inc
xchg
ret
mov
lock
gs
fildl
mov
cmpsl
mov
lods
xchg
mov
aad
fisttpll
int
mov
aas
ds
pop
xlat
sbbl
mov
outsl
lock
lods
jge
movsb
sub
pop
movsb
adc
mov
sub
scas
ljmp
sbb
aaa
xchg
cmp
adc
cltd
dec
mov
push
mov
xchg
inc
xchg
jb
roll
push
popf
mov
mov
sub
sub
ret
mov
rcrb
mov
and
stos
insb
sub
insl
pushf
sub
xor
xor
jp
ljmp
les
xchg
pop
xor
adc
cmp
fsubrl
adc
mov
jo
mov
clc
pop
test
mov
cmp
inc
bound
fstpt
xor
mov
and
arpl
xor
add
add
jb
and
stos
sbb
push
xchg
rcll
rcrl
fidivrl
sbb
outsl
adc
rorl
xlat
pop
icebp
mov
mov
mov
dec
and
cmp
int
inc
mov
and
loopne
movsb
lcall
add
push
dec
sub
mov
rcrb
aas
ret
mov
adc
imul
mov
add
and
pop
mov
xor
add
or
arpl
aad
stos
inc
outsb
aaa
xchg
test
dec
adc
mov
movsb
push
arpl
mov
inc
sub
sbb
fidivrl
mov
push
pop
xor
into
and
in
sarb
sbb
es
sahf
insl
push
cld
js
ja
hlt
mov
das
in
xor
jge
jg
xor
jnp
pop
pop
or
testl
mov
mov
dec
movsl
call
pop
int3
or
test
stos
inc
ret
pop
ss
std
mov
jae
jno
lea
add
or
mov
cmp
mov
inc
clc
mov
cmp
nop
mov
mov
cltd
loopne
mov
lock
inc
repz
cmp
sub
jp
test
bound
inc
fnstenv
push
xor
movsl
sbb
lret
xlat
pop
ljmp
mov
and
jle
mov
ds
jnp
mov
aad
sarl
iret
sbb
mov
inc
pushf
adc
gs
movsl
xchg
sti
pop
add
movsl
fistpll
cmp
push
sbb
sub
mov
fidivrl
lock
mov
mov
test
push
in
sub
xchg
and
lods
cs
mov
fs
add
sub
movsl
xor
in
aas
adcb
nop
or
hlt
pusha
push
inc
out
mov
mov
call
popf
sahf
mov
rcrl
push
xor
pop
sti
adc
inc
movsl
es
cmp
and
add
inc
stos
lea
mov
cmp
aad
xchg
dec
in
mov
aad
cwtl
cwtl
scas
cmp
iret
xchg
rcrb
sub
cmpsl
mov
adc
test
iret
push
inc
xchg
mov
stos
in
xorb
cmp
sbb
mov
outsb
pop
jbe
mov
adcb
mov
rcrl
out
fnsave
pop
cmp
cmp
push
sub
ss
bound
mov
out
pop
shlb
outsl
andb
nop
aam
inc
cwtl
ret
xor
lds
pop
inc
or
lahf
in
add
and
push
or
pushf
das
frndint
cmp
xchg
icebp
insl
push
jnp
ja
insl
sub
insl
cmp
test
inc
jns
sti
cmp
cmp
test
and
data16
das
and
popa
adc
sub
sti
xor
mov
mov
int
icebp
mov
mov
shrl
es
mov
mov
mov
repz
mov
mov
inc
jnp
test
adc
bound
adc
lahf
pop
out
sub
add
sub
test
or
imul
adc
cmp
iret
jbe
jns
pop
lcall
pop
push
and
movsl
pop
idivl
xchg
fidivrl
jne
cmc
cmp
xchg
dec
xchg
lahf
mov
adc
das
xchg
leave
inc
bound
inc
cmp
push
ds
mov
scas
lcall
lcall
jb
mov
pop
push
iret
xchg
and
mov
inc
ss
aas
lret
or
mov
dec
aas
test
jne
cmpsb
mov
ss
mov
scas
xor
jecxz
xor
add
clc
and
mov
cld
fistpll
sahf
enter
nop
cli
lods
mov
rclb
inc
and
cmpl
cmp
aas
dec
pop
adc
xor
cmp
xor
mov
pop
mov
push
cmc
xor
outsb
xor
mov
rcll
es
adc
mov
push
jbe
pop
cmp
mov
mov
ja
cmpsl
jne
sbb
pop
push
and
fs
nop
loop
adc
js
nop
enter
jno
packssdw
cmpsb
es
sbb
mov
aas
sbb
movsl
shl
and
and
stc
aaa
dec
popa
mov
or
leave
and
lods
lds
xchg
sub
pop
sub
xchg
mov
add
mov
fcmovne
mov
mov
dec
and
les
fisubrl
xor
lcall
and
inc
test
xor
out
inc
add
sub
ret
inc
mov
inc
and
xchg
out
jl
test
data16
inc
push
mov
adc
xor
pop
outsb
out
push
dec
adc
das
loop
test
add
and
orl
sbbb
sbb
stos
sarb
in
xor
mov
lods
mov
mov
loope
out
mov
adc
shrl
mov
mov
pop
sbb
mov
mov
jne
adc
stc
enter
mov
push
clc
movsb
cmpsl
aad
mov
pop
jle
xor
xchg
sbb
sbb
cmp
scas
test
cmpsb
cli
loope
xchg
orb
std
popa
inc
andb
sub
enter
ja
jne
inc
xchg
push
ljmp
cltd
jl
ss
pop
cld
add
inc
add
movsl
lcall
pop
jp
mov
xor
inc
imul
push
jbe
dec
pop
or
sarl
push
cmp
cmp
jae
sahf
mov
sub
mov
sarl
push
out
jbe
popf
cwtl
push
popa
lock
cmp
scas
inc
adc
pop
stos
xchg
lcall
and
das
xor
push
add
sti
push
inc
adcb
add
out
ficompl
mov
mov
cmpb
pop
cmp
jbe
inc
pushf
cwtl
xchg
mov
cmpsl
adcb
test
gs
mov
jecxz
lahf
push
dec
jecxz
fstl
mov
inc
negb
pop
addr16
mov
hlt
sbb
xor
movsl
repnz
out
inc
pop
mov
cmp
ss
mov
mov
cwtl
sti
sarl
and
mov
inc
ss
loop
fcmovu
cmp
cs
inc
aas
cmpl
or
add
mov
sub
loopne
loope
outsl
mov
add
add
pop
mov
pop
xor
mov
xchg
popf
andb
mov
jnp
pop
call
xchg
aad
outsb
dec
or
lcall
aaa
adc
inc
xchg
mov
out
test
enter
bound
pop
out
cmp
pop
jns
xor
xor
pop
inc
loopne
stos
lahf
ret
inc
pop
cmpsl
push
sbbl
mov
adc
mov
mov
mov
movsl
subl
repz
pop
popf
adc
popf
push
cmp
mov
jb
repnz
pushf
pop
mov
inc
pop
fs
cmp
mov
repz
dec
stos
bound
aaa
xchg
and
pusha
xor
mov
cli
arpl
cltd
cmp
jae
test
outsl
arpl
ds
nop
sub
push
jnp
std
ret
inc
mov
fmull
test
sbb
fsubrl
out
pop
scas
aad
ret
in
addr16
push
andl
les
inc
nop
push
pop
mov
gs
mov
movsl
jge
leave
pop
jp
divb
adc
adc
das
pop
ss
xorl
and
lock
cmp
inc
fdivrs
pop
sar
daa
test
sbb
das
xchg
mov
cwtl
cwtl
cmp
sub
cmp
jo
xor
loopne
push
out
cli
cltd
es
adc
mov
or
ficomps
jo
test
xchg
in
and
cmp
movsl
jge
mov
mov
push
sub
inc
stos
xchg
mov
int
mov
je
push
out
dec
stos
mov
call
and
in
or
lock
add
aaa
inc
test
enter
call
adcb
in
pusha
or
adc
dec
test
movsl
nop
data16
stc
xchg
or
jo
pusha
dec
test
into
rolb
insb
and
mov
push
sti
dec
jne
cmp
push
cmp
cli
ss
jbe
js
aad
mov
std
ss
cmpb
fistl
outsb
pop
adc
es
jnp
gs
lret
shr
mov
inc
lahf
inc
jns
sub
mov
xchg
ret
stc
dec
clc
sti
mov
mov
in
pop
leave
repnz
xchg
mov
pop
in
xlat
test
scas
sahf
jnp
shlb
pop
rolb
jne
movsl
int3
hlt
sbb
sub
mov
mov
popa
jle
stc
ret
shlb
test
into
push
dec
push
sti
cmp
mov
cmp
xchg
jecxz
mov
xchg
and
cmpsl
sub
xor
stc
fimull
std
adc
loope,pt
adc
inc
out
hlt
add
jecxz
or
scas
cmp
hlt
leave
test
popa
test
xchg
push
aaa
cmp
push
cwtl
out
adc
jae
xor
jmp
outsl
pop
mov
add
into
xor
mov
mov
adc
out
push
push
daa
mov
inc
out
push
push
cli
and
pop
pop
shll
cld
out
loopne
and
clc
adc
cli
mov
xor
add
pop
daa
cli
cmpsl
mov
enter
sbb
or
pop
mov
nop
cmp
push
mov
movsl
cmpsb
cmp
jl
mov
mov
and
enter
cmp
pushf
jb
fcomp
rcrl
loop
adc
aas
sub
stos
jnp
sub
mov
imul
pop
clc
cmpsb
sub
cmp
andb
push
xor
mov
mov
cltd
add
jl
mov
das
mov
daa
jo,pn
rorl
sahf
add
repz
arpl
sarb
cmp
sbb
sbbl
xorb
mov
mov
jp
inc
jle
push
xor
ret
xchg
pop
jle
or
mov
mov
sub
or
outsb
mov
mov
xlat
sub
repz
and
pop
adc
jne
pop
outsb
lahf
add
sti
and
mov
jg
jbe
insb
mov
stc
mov
push
mov
sbb
push
inc
addr16
pop
pop
in
std
sub
repz
mov
lods
stc
sub
aaa
pop
scas
pop
in
push
jne
cmp
js
xchg
clc
pop
int
or
push
jb
jle
inc
xor
mov
sub
dec
xor
jnp
add
ret
mov
dec
ret
pop
mov
jp
enter
into
outsl
push
imul
bound
fnstenv
adc
les
and
xchg
ja
out
mov
push
adc
lds
test
mov
cmpsb
out
scas
or
mov
sbbb
jbe
xlat
adc
jns
sub
mov
rclb
push
add
shl
andl
mov
scas
sbb
mov
xchg
or
and
adc
xor
mov
fcomps
jnp,pt
mov
mov
in
sbb
mov
out
push
sti
mov
out
cmpsb
movsl
fnstenv
pusha
mov
imul
xlat
daa
mov
test
push
mov
mov
cmp
jnp
inc
pushf
dec
insl
push
lahf
xchg
xchg
mov
xor
mov
in
mov
mov
mov
aam
mov
sub
pop
sbb
mov
dec
adc
std
jg
push
mov
ret
rol
rorl
mov
not
aas
mov
cs
dec
in
add
pusha
push
leave
inc
mov
mov
hlt
loop
dec
sub
sbb
mov
clc
ret
jb
mov
repz
popa
inc
pop
add
xor
popa
push
jnp
xchg
sbb
jne
outsl
xor
loop
aas
dec
sub
ficomps
sahf
loop
pusha
dec
cmp
sub
jle
mov
xchg
mov
adc
aam
into
xchg
clc
aaa
cltd
adc
dec
into
mov
cmp
daa
inc
and
pop
and
sub
jp
test
mov
mov
push
into
std
aam
add
ss
cltd
sbb
sbb
sbb
js
nop
xchg
out
mov
repz
jnp
pop
bound
inc
bound
pop
scas
mov
out
jb
pop
pop
test
fstps
add
clc
xor
xchg
rorl
ret
xchg
mov
ss
rcrb
mov
mov
push
sub
pop
ret
add
mov
mov
pop
mov
cltd
sbb
in
adc
shl
lock
ss
lret
rep
cmp
leave
int3
cmpsl
test
cld
into
cmc
adc
ja
or
lock
pop
dec
xchg
xchg
jmp
push
mov
jecxz
mov
push
push
pop
ja
test
jl
shrb
mov
loope
sbbb
jo
into
popf
push
popa
sub
xor
das
sbb
test
clc
adc
and
pushf
jno
pop
xor
fldcw
in
xor
std
fistps
cmp
int
sbb
mov
sti
cli
mov
mov
sbb
subb
pop
jp
in
ds
push
aam
data16
mov
das
scas
mov
ds
mov
inc
sahf
loopne
push
std
stos
insb
repz
push
sbb
pushf
add
cmp
mov
inc
sbb
cwtl
and
in
mov
fidivs
mov
pop
scas
subb
sbb
and
fsubr
push
push
mov
jbe
test
pop
add
adc
fcmovbe
xchg
inc
shl
clc
out
lret
mov
sbb
cli
xor
inc
xor
push
cs
cmp
sti
xchg
aad
mov
daa
test
dec
sbb
cmp
cmpsb
loop
test
lret
push
cmp
shrl
fldt
in
mov
into
and
mov
push
loop
jecxz
xchg
jns
ds
xchg
sbb
jl
ss
cltd
cwtl
cmp
int
into
xor
xor
popa
movsl
mov
mov
aad
cmp
insl
test
jbe
mul
repnz
and
or
cmp
mov
mov
mov
repnz
push
jmp
add
push
mov
push
or
sub
mov
cmp
mov
adc
popl
das
mov
pop
cltd
xor
push
mov
mov
stc
mov
xchg
mov
jmp
insb
mov
pop
lods
push
xor
sahf
xor
mov
mov
test
cli
jmp
scas
lcall
jmp
push
and
leave
mov
dec
mov
inc
lahf
shrb
adc
xchg
std
cmpsb
inc
les
adc
add
jl
inc
add
popa
xchg
mov
fisubl
ret
iret
nop
mov
sbb
js
inc
popa
adc
mov
cmp
sub
mov
mov
xor
xor
bound
repnz
loop
jae
push
enter
inc
cmpsb
and
bound
out
test
mov
lcall
addr16
outsl
jge
rclb
lea
lds
cmp
mov
test
testl
loopne
movsb
clc
rolb
mov
sbb
nop
inc
jle
mov
cli
int
sub
icebp
mov
adc
stos
and
gs
inc
mov
cmp
pusha
popa
loopne
dec
push
mov
jo
les
ss
loope
mov
cmp
xchg
mov
mov
pop
xor
adc
aas
xlat
cmp
rolb
test
mov
mov
xor
push
les
ds
pop
jmp
cmp
inc
push
add
mov
int3
jmp
dec
fnstenv
sti
ljmp
push
pcmpeqd
fdivrs
jns
sbb
loop
inc
jl
mov
mov
mov
mov
insb
nop
mov
jmp
lea
inc
inc
or
mov
movsb
movsl
push
mov
ret
out
mov
outsl
sbb
nop
aaa
push
fidivrl
xorl
mov
scas
xchg
stc
out
data16
mov
pushf
push
daa
cmp
xor
loope
inc
fistpl
lock
int3
sbb
sti
xor
test
jge
fstpt
mov
aaa
dec
sarl
sub
and
ret
mov
nop
jno
jp
fs
cmp
and
mov
scas
dec
cwtl
jecxz
ficompl
pushf
sbb
mov
mov
sub
fdivrl
xor
mov
popa
mov
cs
mov
jp
scas
imul
and
xchg
pop
add
sbbl
mov
into
lcall
adc
pop
sbb
mov
ret
fisubrs
insb
xchg
pop
shlb
sarb
adc
jle
xor
mov
sbb
add
mov
lcall
push
jg
pop
add
outsb
cmp
and
inc
adcl
mov
adc
shrl
pushf
out
inc
mov
mov
pop
pop
movsl
sahf
dec
mov
mov
and
add
negl
mov
sbb
jg
iret
jns
dec
inc
fstpl
lods
les
sbb
ret
pop
popf
jp
pusha
add
pop
cwtl
pop
aas
mov
fimull
gs
divb
xchg
fs
movsb
push
scas
mov
lds
ljmp
stos
xchg
xor
sbb
or
add
pop
or
mov
xchg
mov
pop
scas
sbb
pop
stc
js
inc
cmpsb
pusha
adc
xor
stos
pushf
xlat
mov
push
pop
sbb
insb
jecxz
lret
jae
add
movsb
xchg
and
mov
aam
pop
lcall
je
ja
dec
repnz
mov
mov
pop
dec
fistpl
xor
rsm
mov
int
xchg
adcb
cli
mov
pop
mov
cwtl
push
mov
std
arpl
fs
aaa
ljmp
cmp
aad
loopne
and
js
cmpsb
in
iret
and
popl
mov
xor
insl
and
cld
mov
xchg
in
cmp
loop
fwait
xor
mov
mov
dec
adc
xchg
mov
add
sbb
xchg
mov
jmp
test
cmpsl
jne
mov
fcompl
testb
or
push
rol
mov
movsl
inc
lcall
mov
jae
cmpsl
xor
and
insl
pop
xor
pusha
jns
nop
add
add
test
cltd
pop
icebp
in
xor
into
cmp
dec
pop
stc
jge
mov
xorl
mov
mov
call
cmp
std
add
pop
das
in
fcmovbe
int3
and
add
andb
push
push
bound
sub
adc
cmp
xchg
or
inc
sbb
xor
mov
mov
ljmp
sbb
addr16
mov
rcr
mov
rclb
call
and
push
pop
call
scas
decb
cli
pop
aas
push
pop
sbb
data16
mov
xor
push
sti
cwtl
cmp
pop
popa
lcall
cmp
dec
mov
xor
xor
mov
sti
sub
shr
sbb
loop
orb
cmp
xor
cmp
rclb
sti
jge
movsl
xor
cmp
loop
or
int3
loope
mov
movsl
mov
rolb
dec
mov
pop
stc
and
shlb
pop
mov
pop
mov
dec
test
mov
jl
mov
xchg
repnz
cmp
adc
push
adc
add
mov
dec
and
lock
clc
push
add
popa
lods
aas
and
sbb
sub
xor
and
adc
cmp
loop
cmp
jl
adc
push
mov
cmpb
pop
hlt
push
jns
cmpsb
jl
lcall
dec
ret
je
pushl
clc
test
imul
pop
fs
inc
ret
push
cmp
or
fdivs
clc
enter
adc
fstpt
and
jg
lods
mov
inc
cmp
push
ret
sbb
jbe
js
fdivr
inc
cwtl
cmp
loope,pt
jbe
mov
inc
sbb
ljmp
dec
popa
sti
adc
push
push
inc
add
or
and
ret
dec
cmp
mov
or
mov
xchg
fadds
cltd
sbb
mov
fiaddl
pop
mov
mov
dec
cmp
fdivs
ret
add
cmp
add
fwait
mov
and
inc
lods
inc
mov
dec
loop
inc
mov
jo
mov
pop
add
cltd
mov
and
cmp
adc
mov
mov
sbb
jl
sbb
sahf
mov
test
mov
mov
sbb
insl
inc
negb
jp
or
dec
cmp
dec
int
inc
mov
sub
cwtl
push
xchg
gs
enter
xor
popa
pop
cmpsl
aaa
iret
dec
fldcw
xchg
lods
push
jno
inc
arpl
pop
outsl
mov
fcompl
shlb
or
xlat
repz
cmp
jns
dec
jae
xchg
mov
mov
mov
or
lea
inc
mov
inc
jmp
das
mov
inc
cmpsl
test
hlt
bound
push
or
subb
fs
sub
in
pop
leave
adc
lret
movsl
or
jle
jbe
clc
mov
mov
sub
mov
mov
and
shlb
dec
lahf
cmpb
cs
in
ds
jnp
and
xchg
out
jbe
jne
push
in
add
popa
xchg
mov
xor
sbb
add
sahf
xchg
mov
jns
pop
xor
inc
sahf
mov
mov
cwtl
testl
addb
adc
xor
mov
lret
push
cmp
jle
insb
inc
pop
cmpsb
dec
dec
push
pop
or
ss
into
enter
inc
add
xor
mov
inc
mov
pusha
pusha
and
adcb
jle
repnz
inc
dec
jne
mov
movsl
insb
out
jecxz
pop
popf
inc
pop
cmp
mov
inc
je
adc
add
mov
pop
idivl
inc
mov
pop
xchg
pop
mov
ja
mov
xorb
mov
fdivrs
js
adc
inc
mov
inc
flds
cmp
test
xor
push
mov
sbb
push
lcall
mov
sub
xor
movsl
jge
jb
adc
loopne
shll
testb
sub
inc
xor
rcll
lea
push
xchg
cmp
lahf
cld
jbe
movsl
mov
adc
jne
insl
mov
jg
jmp
jbe,pn
outsb
push
sbb
inc
mov
inc
or
dec
sub
movsb
cmpl
insb
outsl
jge
addr16
cmp
addb
add
jns
bnd
out
mov
imul
sbb
shrb
sbb
das
mov
mov
or
lea
popf
fcmove
cmp
add
mov
mov
push
insl
jl
or
jp
adc
jno
or
sbb
xorl
mov
cmpsb
and
mov
and
mov
sbb
mov
adc
inc
sbb
dec
mov
movsl
stos
insl
push
cmp
dec
mov
out
fwait
cmp
or
inc
sarb
popa
enter
push
cmp
cs
popl
idiv
call
mov
and
out
mov
loop
gs
cmp
lods
fmul
dec
dec
add
cld
lahf
out
mov
inc
rolb
push
mov
dec
insl
xchg
mov
sub
push
dec
frstor
jnp
jns
xor
nop
xor
bound
sub
cli
shrb
test
movhps
jl
adc
jae
aaa
lock
xchg
inc
sub
mov
mov
adc
adc
lea
lds
mov
inc
movsl
adc
inc
mov
stc
cmp
cmp
sbb
fstps
cmp
call
cli
aas
in
add
push
ljmp
cs
sub
shl
push
dec
loope
push
data16
mov
shlb
test
insb
lret
scas
leave
lcall
mov
mov
insl
sarb
cli
sbb
iret
and
add
pop
shrb
xchg
fsubs
ret
push
inc
cltd
shl
inc
shr
scas
pop
dec
out
rol
or
mov
inc
mov
out
shl
jecxz
lahf
fwait
aaa
adc
jns
rcrb
js
mov
shl
fldt
fsubs
xor
inc
daa
xchg
mov
outsl
fsub
mov
jecxz
add
rorl
mov
mov
mov
jp
inc
fisubrs
cmp
lcall
mov
mov
add
mov
push
test
daa
shlb
jbe
shll
xchg
mov
pop
inc
sarl
arpl
stos
test
jmp
add
xchg
rolb
addr16
xchg
push
mov
movb
lcall
push
idivb
fstp
out
mov
mov
mov
mov
test
mov
daa
loop
leave
daa
imul
fdivp
cmp
popa
fsubs
mov
fiadds
outsl
andb
push
cmpsl
mov
test
jo
add
sarl
add
roll
add
rcll
iret
push
fimull
rcll
lahf
test
sub
fidivrs
jbe
jnp
dec
cmp
clc
mov
in
cmpsl
add
xor
and
adc
movsl
mov
lods
int
test
stos
or
in
sbb
scas
orb
pop
testl
js
xchg
cmp
pop
inc
mov
jnp
mov
inc
xchg
cs
sbb
idivl
ds
es
sbb
push
pusha
pop
ror
inc
mov
pop
daa
aad
cltd
clc
sbb
cmpsb
stos
jecxz
push
mov
lock
imul
daa
sbb
movsb
or
daa
sub
loop
dec
mov
jp
rorb
xor
mov
jge
xor
cs
mov
sahf
fwait
lods
sti
icebp
jno
mov
insb
mov
mov
push
mov
outsb
xchg
shrb
and
cwtl
mov
repz
scas
cmp
icebp
push
cmp
add
jns
in
mov
mov
mov
fnstcw
mov
jg
jo
js
mov
sti
lret
stc
negl
mov
pop
mov
pop
xchg
arpl
stos
les
sahf
xor
rolb
ror
icebp
stos
sub
dec
cmpsl
adc
sti
sahf
repz
jmp
xor
mov
mov
jle
jnp
clc
jmp
jns
andb
shr
jge
mov
push
in
xchg
mov
and
jnp
outsb
leave
mov
add
roll
add
mov
inc
outsl
cmp
xchg
inc
jb
fcmovnu
jae
stc
fnstsw
cmp
loope
sub
pop
rolb
arpl
mov
dec
dec
mov
ret
push
outsb
lcall
sbb
imulb
pop
in
and
mov
push
dec
jecxz
inc
rol
jp
mov
cwtl
mov
imul
inc
sahf
clc
mov
mov
ss
jle
pop
add
fsts
or
aad
xchg
out
or
inc
cmpl
mov
dec
movsl
mov
ds
jae
cmp
rolb
lods
push
popa
imul
mov
std
pop
sub
imulb
lods
add
jo
sarl
rclb
andb
push
cmpsl
mov
in
shlb
dec
add
pop
sbb
xlat
and
xchg
in
jecxz
ror
outsb
and
cmp
jns
pusha
mov
andb
add
mov
je
mov
cmp
bound
fnstenv
mov
ljmp
jo
mov
sbb
mov
fwait
imul
pop
test
pop
xchg
dec
xchg
jg
push
mov
mov
mov
shl
fwait
andb
sub
imul
pop
cwtl
mov
mov
cs
pop
add
hlt
push
adc
or
orb
mov
sub
xor
cli
pop
fmull
pop
mov
adc
lock
push
xor
repz
mov
mov
cmp
mov
icebp
mov
xchg
inc
mov
pop
add
loopne
pop
bound
dec
loope
push
idivb
sti
addb
enter
mov
jecxz
repnz
mov
sbb
mov
xchg
jne
imul
mov
pop
popa
pop
xor
mov
scas
insl
cmpsb
into
clc
loope
mov
mov
sar
sbb
icebp
lods
xchg
xchg
insl
cmc
mov
jns
movsl
lcall
test
imul
xor
fsubs
add
lcall
in
sarl
sbb
adc
test
negb
inc
mov
xor
cmc
inc
repz
loop
jae
insb
xor
inc
popa
ret
mov
sbb
pop
or
adc
ja
inc
test
and
testb
mov
repnz
sbb
xorb
jmp
mov
cmc
xchg
nop
jmp
mov
cwtl
data16
add
dec
jp
mov
dec
push
mov
sahf
int
push
and
subb
jnp
cmpsl
add
xchg
add
add
pusha
xor
or
xchg
mov
pop
mov
dec
loopne
pop
or
stos
add
pop
pop
mov
lods
lahf
outsb
imul
ficoml
popf
adc
pop
pop
sbb
out
lcall
add
mov
mov
jno
xor
scas
mov
cltd
and
stos
sub
dec
sbb
mov
add
test
cmp
inc
insl
loopne
repnz
jp
inc
mov
icebp
rclb
jp
mov
ds
int3
pushf
lea
inc
lahf
inc
xorb
xchg
cmpsl
mov
sbb
push
movsl
xor
mov
push
test
jecxz
cmpsl
add
mov
and
mov
cmp
rcrb
mov
mov
fs
inc
gs
mov
cmp
ja
nop
jnp
xchg
loopne
fildl
mov
mov
cmpsl
cs
adc
push
and
push
mov
push
push
pop
repnz
push
pop
push
inc
sar
test
mov
aad
outsl
lods
subl
mov
aaa
pop
pop
cwtl
xor
es
pop
mov
pushf
xchg
sub
cmpsl
sbb
fstpt
cli
push
pop
leave
xor
pop
ret
movsl
imul
jbe
pop
pusha
sbb
cmp
inc
bound
sbb
cmp
popa
adc
sub
mov
out
fistpll
push
pusha
xchg
cltd
xor
test
sbb
and
and
xchg
pop
mulb
lahf
pop
lods
and
movsl
mov
pusha
pop
lea
test
daa
sub
jecxz
cmp
push
movsl
subb
cmp
xlat
jge
sbb
push
cli
push
mov
aaa
dec
add
rcrb
mov
add
cmp
cmp
or
clc
rclb
add
cs
adcb
xchg
pop
enter
fisubl
cmp
mov
and
out
scas
jecxz
daa
or
mov
in
scas
or
movsl
xchg
iret
sub
sbb
jb
sbbb
xchg
dec
inc
xchg
mov
ss
jbe
js
sti
daa
lahf
dec
and
mov
ja
rorl
mov
out
cwtl
sbb
bound
test
ret
mov
bound
pop
rcrb
jle
clc
inc
dec
mov
test
inc
mov
mov
jmp
aaa
clc
adcb
loopne
jne
mov
das
xchg
lahf
jnp
fnstsw
aam
notb
ljmp
jmp
dec
je
xorl
loope
sub
push
sbb
mov
sbb
repz
push
test
shlb
ret
sbb
mov
fimull
mov
cwtl
add
mov
xor
mov
cmpb
mov
jae
lret
xchg
mov
std
cmp
push
movsb
scas
sub
inc
adc
sahf
lods
cmp
mov
jge
sbb
rcrl
imul
cmp
cmpsb
inc
xchg
sub
jnp
scas
ss
ror
cmp
mov
mov
xor
faddl
ds
js
mov
mov
push
mov
cli
lea
push
mov
and
mov
jb
outsb
mov
out
repnz
mov
lret
sti
cmp
pop
mov
jg
pop
inc
xor
xor
mov
jnp
pop
mov
mov
mov
pop
lcall
stc
subb
fnsave
push
cmp
divb
sahf
stc
sub
fldenv
test
push
pop
ljmp
or
cmpsb
mov
mov
and
cmpsb
add
xor
mov
pop
mov
mov
pop
cmpsl
cld
sub
pop
loope
inc
push
rcl
inc
andb
cld
int3
sti
xor
xor
sub
push
mov
mov
sbb
aam
pop
mov
or
notl
adc
cmpsb
sar
scas
cwtl
xor
pop
std
add
cwtl
fldenv
pop
adcl
add
arpl
jno
mov
aad
scas
pop
clc
add
pop
pop
sub
xchg
dec
pop
jae
mov
aaa
xchg
sar
sub
pop
bound
in
push
sbb
out
sub
test
dec
movsb
mov
and
and
loop
fidivl
loop
stos
sbb
sub
aas
insb
cmpsl
push
pop
lret
lock
rorl
mov
mov
pusha
mov
push
outsb
and
and
mov
sbb
int
and
jae
add
inc
and
repz
cmpsb
xor
jo
fdivs
adc
adc
add
mov
fld
mov
jle
cmp
xchg
jo
lret
cmpb
mov
sarl
in
xchg
mov
adc
jo
mov
push
subb
aas
inc
mov
sub
sub
pop
test
insl
inc
xor
mov
fsubrs
xor
addb
dec
jp
mov
dec
subb
fcom
test
pop
mov
pop
adc
cmp
and
jle
into
sbb
jecxz
in
adc
loope
popf
data16
add
out
popf
mov
adc
xchg
aaa
cmp
ss
and
imul
jns
sbb
push
inc
or
push
mov
lods
sarb
lds
out
gs
mov
or
xor
fmull
mov
sahf
bound
lea
cmp
orb
lds
mov
jp
pop
mov
rorl
enter
add
in
push
into
mov
mov
mov
pop
out
mov
es
cmp
test
lea
push
pop
jp
loope
push
push
ficoms
shll
test
mov
rolb
and
fidivrl
cmpsl
and
icebp
jns
dec
fdivrs
stos
pop
fistl
mov
sub
add
fimuls
in
das
fcmovb
jle
test
xor
inc
movsl
mov
push
jmp
xchg
icebp
cmpsb
out
es
and
xchg
pop
lock
ret
mov
mov
mov
in
inc
movsb
xor
out
and
aas
fwait
test
xchg
inc
stos
mov
jle
enter
sub
pop
ret
jb
pop
push
lret
adc
in
cld
scas
add
sub
rolb
xor
int3
aaa
std
cmp
lods
subl
xchg
sbbb
fistpll
mov
movsl
push
aam
insl
mov
loop
mov
cmpl
inc
les
and
fstpt
int3
mov
insb
outsl
imul
stos
idivb
andl
jbe
rclb
cmp
mov
hlt
xor
sbb
sub
jle
jecxz
call
add
sarl
sbb
push
xor
inc
test
rolb
dec
xor
add
insb
fistps
lea
lret
pusha
inc
das
insl
clc
cmp
adc
std
sbb
mov
test
test
popf
out
lods
mov
jg
mov
mov
push
jle
mov
inc
aad
mov
lods
add
push
leave
mov
pop
push
into
xchg
stos
add
add
dec
inc
mov
xchg
movsl
inc
inc
cmpsb
sub
jbe
ret
mov
rclb
mov
data16
sbb
out
es
sub
out
jmp
mov
sbb
icebp
movsb
dec
fnstsw
bound
ds
movsl
ret
lea
pop
inc
mov
push
jne
leave
in
int3
movsb
mov
roll
cwtl
lods
pop
sbb
pop
in
mov
push
out
and
pushf
cli
test
push
movsb
ljmp
mov
mov
sub
je
mov
dec
xchg
inc
sbb
push
idivb
pop
cmpsl
inc
adc
mov
sub
mov
cmp
lret
and
popa
adc
mov
adc
mov
pop
cmp
sbb
lods
mov
mov
fdivrs
dec
sbb
xor
dec
mov
mov
xchg
pop
bound
scas
sub
mov
pop
pop
adc
xchg
std
adc
or
lock
movsl
leave
or
mov
incl
test
dec
movsb
sahf
xor
pop
pop
test
scas
mov
out
xor
pop
out
ret
jge
mov
jp
leave
add
mov
movsl
jge
sub
scas
xchg
jp
mov
leave
ret
cmp
inc
rcr
sub
xor
lds
mov
mov
lret
std
inc
cmp
cmpsl
mov
rorb
mov
jp
lcall
or
into
es
mov
mov
mull
mov
mov
aaa
sub
mov
pop
cmp
push
cli
cmpsl
scas
pop
adc
xorl
ret
pop
and
into
pop
ror
movsb
popf
pop
lods
test
hlt
inc
mov
mov
dec
out
aas
cmp
sbb
ffree
push
inc
stos
push
inc
push
jle
mov
bound
xor
pop
inc
aaa
in
pop
dec
xchg
iret
sbb
sbb
in
mov
push
idivb
lods
push
out
aad
xor
push
xchg
mov
inc
cmpsl
push
or
xchg
ss
mov
push
mov
pop
lret
inc
and
mov
or
ret
pop
test
imul
xchg
cmp
idiv
mov
mov
xor
cwtl
fsts
mov
adc
shlb
jae
push
mov
push
jecxz
lea
sbb
jno
push
mov
pushf
fwait
and
fninit
fisttpl
sbb
cmp
aaa
test
js
cltd
xor
jecxz
xchg
je
js
sbb
xor
std
rcrb
subl
sub
jnp
ret
arpl
pop
add
loopne
pusha
cwtl
and
xor
test
ret
jno
es
jg
sbb
inc
aaa
add
xchg
sbb
jl
out
hlt
xor
inc
xor
xchg
faddl
les
stos
inc
fistpll
pop
mov
pop
mov
fnstsw
mov
ja
jmp
or
jg
pop
mov
cmpl
popf
movsl
inc
pop
imul
sahf
mov
jp
pop
cmp
push
mov
ret
daa
inc
add
mov
cwtl
aam
add
hlt
mov
fidivs
sub
mov
jl
stos
pop
push
icebp
pop
xor
shll
in
push
adc
shll
rcr
mov
mov
dec
add
shll
xchg
arpl
mov
cmp
push
jbe
fimuls
outsb
andb
nop
loope
ret
jns
stc
cli
pop
je
icebp
mov
jb
das
push
popa
lret
push
aaa
outsl
inc
ss
shll
cmp
leave
and
loopne
bound
aas
adc
mov
loop
mov
mov
mov
mov
cld
xor
xor
jge
loop
mov
xor
mov
xor
jle
mov
cmp
in
stc
xorb
sub
scas
xor
fstpl
cmp
sub
sub
test
push
jp
mov
ss
js
cmp
cmpb
mov
jae
outsl
shr
fiaddl
jl
in
fisubl
mov
out
cli
loope
out
xchg
movsl
clc
sub
sub
jl
mov
das
js
test
jo
inc
or
cmp
jge
pushf
xchg
lock
fisubrl
dec
fdivs
cmpsb
movsl
add
push
mov
push
fs
fwait
or
jbe
mov
push
daa
call
insb
jmp
lods
jbe
fdivrs
lcall
fbstp
mov
add
andb
subl
inc
dec
movsl
jns
lods
push
stc
pop
push
jb
int3
lahf
jae
mov
stc
into
sbb
int3
test
push
add
jb
pop
fucomi
xor
sti
movsl
pop
push
mov
mov
outsb
jae
cmc
xchg
insl
jno
sahf
inc
lahf
inc
ss
pop
pop
ret
inc
add
fisubrl
cmp
sbb
sti
push
mov
mov
inc
pop
inc
fmull
sbb
sub
movsb
sbb
icebp
lcall
stos
gs
xchg
adc
enter
jp
mov
jne
movsl
ljmp
in
mov
test
push
mov
xor
mov
sbb
in
sub
add
add
cmp
sub
xchg
clc
call
rolb
rcrl
stc
scas
or
inc
mov
push
jo
stos
lret
out
xchg
sbb
aas
inc
mov
inc
movsl
pop
push
out
and
or
jecxz
or
push
mov
mov
je
subl
pop
and
inc
adc
dec
sti
les
cmpb
movsl
test
dec
xor
addr16
cltd
popa
jp
dec
push
or
mov
pop
sbb
lock
inc
ja
mov
push
mov
cmc
push
mov
jle
ret
adc
movsl
fistpl
sub
add
inc
repz
sahf
jne
movsb
cld
mov
mov
in
mov
scas
add
or
jecxz
in
push
fsubrs
jno
jb
or
out
cmp
pop
xor
adc
movsl
push
lcall
aas
imul
ret
shld
mov
aaa
xchg
push
cmp
jo
inc
sub
aaa
sub
lret
div
mov
push
ds
pop
pusha
js
xchg
ror
mov
pop
inc
xor
add
mov
xor
imul
cli
outsl
xchg
test
insb
mov
add
adc
push
repz
adc
int
sbb
repnz
jle
icebp
das
push
jns
xchg
dec
in
mov
xor
push
lods
or
sub
cmp
push
lock
fidivs
cmp
jo
test
cmc
mov
push
data16
jle
mov
xor
sahf
mov
fdivs
out
xchg
add
mov
scas
lcall
fnsave
movsl
push
xlat
nop
push
das
pop
seta
mov
lods
rclb
or
orb
jns
rorb
push
sbb
xor
hlt
adc
jbe
inc
xlat
mov
lock
and
xchg
mov
lods
jmp
mov
xchg
dec
push
mov
icebp
jne
mov
popa
arpl
mov
rolb
xor
jl
push
sahf
jno
mov
out
mov
xor
movsl
sbb
mov
push
jo
test
push
or
in
pop
mov
movsl
and
test
and
out
mov
inc
adc
stos
jne
shlb
loopne
das
mov
clc
dec
jbe
ficompl
pushf
std
dec
pop
loope
push
mov
inc
ret
jmp
mov
popa
mov
mov
addr16
add
pop
divb
inc
outsl
xor
mov
xorl
xchg
testl
dec
idiv
aaa
subb
mov
pop
mov
adc
sub
das
jnp
jl
mov
into
mov
mov
jge
repnz
iret
icebp
mov
imull
inc
mov
movsl
scas
fnstcw
add
sbb
jg
sub
mov
cmp
popf
mov
subl
xlat
outsb
movsl
stc
mov
cld
mov
inc
adc
lret
jbe
idivb
fsubs
and
jle
icebp
jg
fisubrs
sbb
xor
les
lahf
inc
mov
jmp
bound
rcrl
mov
adc
or
scas
dec
mov
sbb
stos
jo
js
pop
adc
mov
mov
jmp
and
inc
enter
sub
cmp
or
mov
mov
mov
adc
into
jmp
test
cwtl
pop
mov
out
scas
cmpl
les
std
lret
sbb
test
pop
mov
xor
dec
xor
inc
ret
fisubrs
out
repz
xchg
pop
sbb
inc
mov
sub
push
jo
insb
inc
add
lea
fstpt
outsb
adc
mov
xchg
movsl
xor
sbb
pop
cmpsl
jno
mov
lahf
pop
fldenv
and
sahf
in
arpl
sahf
addl
std
xor
mov
dec
sbb
in
mov
jbe
dec
xchg
sub
push
dec
push
lock
xchg
mov
cli
push
pop
xchg
hlt
sub
cmp
push
rcll
add
push
mov
ljmp
xchg
mov
sub
mov
and
push
push
int
xor
pop
mov
decb
jb
adc
lcall
sub
movsl
cld
dec
repnz
xor
repz
xchg
jle
ds
xchg
dec
and
ficomps
sbb
cmp
dec
mov
push
fisttpl
out
push
cmp
xchg
xchg
and
and
sti
pop
fldenv
fisttps
cmp
pop
sub
inc
cmp
loope
jno
pop
fsubl
mov
pop
into
je
push
cmp
out
inc
xchg
dec
scas
and
sub
jno
test
scas
sub
sub
push
shrb
jle
mov
jle
fdivl
and
daa
std
mov
xor
add
inc
and
sub
inc
and
sahf
inc
sarb
leave
and
jge
add
mov
mov
std
mov
jp
cmp
jp
jle
and
cs
cmp
add
jp
sahf
cmp
mov
ss
and
xor
jecxz
mov
xchg
aaa
cs
pop
negb
mov
xor
loope
in
pop
outsl
mov
mov
add
popf
cwtl
mov
xor
mov
and
adc
xor
sahf
lods
mov
mov
mov
cmp
jle
pushf
sub
xor
sahf
stos
mov
jno
pop
mov
mov
cmp
js
cmpsl
mov
pusha
inc
sub
inc
rolb
and
cs
pop
inc
sahf
mov
cmp
sarl
cmpb
loopne
cs
mov
sarl
stc
mov
mov
cmp
jle
pushf
xor
mov
xor
mov
aaa
sub
shll
mov
xor
repz
pop
pop
mov
mov
add
xor
sti
int
icebp
cmp
push
lcall
sbb
nop
inc
mov
sahf
scas
pop
lods
movsbl
jns
mov
sbb
in
mov
or
and
xchg
test
and
aaa
div
and
xchg
cmp
xor
outsl
test
out
push
mov
es
inc
movsl
cmpsb
imul
arpl
jg
mov
cmp
movsl
mov
cmp
xor
movsl
inc
test
cld
cmp
test
aad
js
mov
pop
adcb
adc
mov
jb
adc
outsb
mov
fucompp
std
or
bound
sbb
nop
inc
xchg
mov
xor
mov
cli
mov
mov
enter
push
inc
ficompl
pop
sbb
movsl
and
inc
mov
cld
inc
cli
sbb
add
jmp
outsl
jl
test
jns
add
mov
adc
push
xchg
out
cmp
jmp
add
leave
mov
shrb
test
andl
push
push
sub
sub
shrl
ret
push
lcall
movsb
and
mov
andl
add
movsl
call
mov
out
mov
mov
fdivrs
inc
sbb
add
sbb
jmp
loop
aas
mov
inc
mov
pusha
jne
jl
ds
mov
popf
mov
jne
cwtl
jnp
pop
xor
js
mov
pop
pushf
cmp
add
jno
aas
xchg
fistl
idivl
mov
fiaddl
dec
arpl
cmp
mov
cmpsb
sub
fmull
pusha
push
pop
shlb
fwait
xchg
inc
xor
xor
or
mov
sbb
and
int
loope
mov
push
jnp
mov
inc
pop
cmp
movsl
pop
dec
nopl
xor
sbb
repz
jb
adc
cmp
movb
cmp
push
fldcw
fsts
xchg
xchg
les
bound
mov
pop
jl
mov
hlt
out
das
cmpsl
std
dec
sub
pop
mov
sbb
mov
mov
jmp
lret
and
cmpsl
and
xchg
fsubrs
lcall
mov
std
in
cltd
call
push
addb
jle
mov
movups
dec
cli
cmp
push
push
pusha
call
lock
ljmp
inc
jbe
adc
jmp
mov
fidivrl
sahf
in
test
xor
adc
int
pop
jbe
add
cmpsb
mov
sarb
add
jl
inc
pop
stc
adc
icebp
sti
cmp
pop
jl
daa
lahf
pop
inc
cmp
dec
jb
jmp
xorb
stos
fnstsw
mov
cltd
mov
add
or
pop
xor
sub
cld
sbb
out
cli
sub
leave
roll
sub
into
outsb
in
mov
sbb
mov
adc
test
movsl
fnsave
pop
sbb
out
xchg
lcall
hlt
jae
jne
xchg
inc
jne
push
adc
cmp
lret
mov
jle
fadd
int
jnp
icebp
push
mov
xlat
mov
int3
jmp
in
pop
pushf
not
cmpsb
add
sbb
mov
xchg
jbe
testb
mov
movsl
jnp
and
sbbl
xorb
cmpsl
sbb
mov
insb
fwait
inc
and
mov
sub
and
rol
subb
xor
xchg
cmp
xor
jbe
sbb
jo
js
data16
fstpl
cmp
mov
adc
dec
cmp
insl
jo
inc
cli
lcall
repz
js
or
lret
or
dec
sub
repz
cmp
repz
mov
sahf
ljmp
outsl
lcall
into
es
shrl
adc
xchg
pusha
pop
mov
sbbb
inc
shlb
pop
lret
cmp
ja
mov
pop
jmp
cmpsb
and
xchg
fwait
cld
mov
sahf
pop
or
mov
jne
mov
or
mov
pop
xchg
rolb
or
xchg
or
mov
or
push
pusha
dec
outsl
jae
lcall
shlb
aaa
sti
jg
mov
and
adc
push
repz
adc
xchg
andb
outsl
dec
ret
sbb
aaa
sbb
mov
scas
stos
shlb
sbb
mov
dec
jnp
jle
jle
add
iret
xchg
cmp
mov
adc
cmpsl
mov
pop
lcall
sub
sarb
call
jp
jbe
add
insb
adc
scas
adc
xor
mov
movsl
push
adc
pop
shll
test
mov
sbb
or
sti
mov
push
push
ss
rorl
mov
mov
aam
xchg
cmp
mov
pop
mov
and
mov
icebp
mov
adcb
pushl
inc
pop
mov
js
xor
pop
js
mov
xchg
pop
jbe
jp
mov
or
xchg
dec
loope
add
insb
test
cmp
mov
lahf
mov
xchg
ret
popa
mov
sub
aas
movsl
xor
pop
cmp
cmp
mov
shr
push
aaa
insl
xor
lahf
mov
jnp
rcrb
or
fisubs
xchg
mov
push
lock
mov
inc
loopne
mov
icebp
mov
push
jae
leave
pop
mov
push
call
push
icebp
jl
sbbb
jns
imul
in
roll
cmpb
mov
outsl
jbe
cli
je
mov
jne
and
ja
enter
in
add
mov
mov
cmp
push
inc
jle
inc
jp
jmp
mov
inc
stos
lcall
jge
push
jnp
cmp
mov
mov
notl
pop
fistpl
sbb
dec
pop
stos
mov
scas
in
shlb
mov
aas
add
ja
mov
mov
adc
js
pop
rolb
jo
cmpl
push
mov
cmpsl
sbb
add
inc
std
sub
xchg
cwtl
cmp
cmpsb
mov
inc
je
adc
dec
ret
xchg
filds
pop
aam
in
popf
ficoml
cwtl
in
sarb
fildl
xor
and
in
fstpt
and
repz
mov
mov
push
push
adc
pop
mov
int
pop
std
fisubl
xor
lods
inc
cmp
mov
jge
ss
jmp
dec
shrb
sub
sarb
mov
inc
test
jge
test
test
fldenv
sub
pusha
subb
mov
add
mov
push
sub
cli
jge
sub
adc
int
sti
repnz
dec
cmp
jns
mov
rclb
add
divb
xchg
daa
addb
mov
pusha
jbe
xlat
mov
mov
fs
jl
lcall
adc
and
inc
mov
xlat
imul
push
repnz
out
rclb
int
inc
or
in
add
in
mov
xchg
mov
mov
stos
insb
shrl
inc
mov
push
fildll
ljmp
push
clc
decl
pop
mov
mov
pop
dec
sahf
cmp
adc
mov
bound
call
xchg
mov
adc
add
outsb
pop
sub
push
mov
xchg
dec
bound
adc
push
dec
adc
xchg
dec
inc
push
push
mov
mov
mov
mov
lret
test
cmp
les
mov
movsb
enter
mov
ret
js
inc
mov
movsl
fcompl
mov
mov
pop
out
fucomi
addl
leave
pusha
movsl
fsubr
mov
push
pop
sbb
sbb
push
mov
mov
jne
leave
faddp
mov
dec
sti
rolb
or
shll
inc
or
dec
mov
mov
call
rorb
push
dec
out
pusha
push
sbb
push
xchg
inc
add
dec
mov
out
nop
jle
pushf
js
fidivrs
jns
daa
outsl
jp
sbb
inc
mov
in
lock
lods
outsb
fistl
pop
js
mov
sub
js
inc
add
sahf
dec
pushf
sub
push
inc
ret
adc
mov
adc
fnsave
inc
divb
mov
movsl
jnp
lock
xchg
scas
jns
or
loop
inc
or
mov
or
mov
shlb
lds
adc
bound
inc
mov
mov
in
adc
cmp
lret
add
push
jp
hlt
cmpsl
pushf
mov
inc
js
and
stc
std
in
out
imull
add
cltd
sti
pop
and
scas
push
movsl
fisubrl
outsb
inc
jnp
pop
sub
mov
fsubrs
gs
aas
inc
adc
mov
das
sbb
popa
fcomps
mov
sub
aam
lods
cmp
fldt
js
fcmovb
add
sti
decb
adc
and
into
bswap
and
fcmovb
hlt
fs
fistpll
pop
aam
mov
sbbl
inc
xor
adc
clc
pop
ss
cmp
mov
icebp
sub
push
sub
add
dec
loopne
scas
cmp
inc
test
adc
pop
outsl
cmp
cli
dec
lret
cmp
push
scas
sti
fstl
mov
sahf
pushf
addr16
xor
test
mov
dec
jp
and
push
iret
xchg
roll
fcmovu
xchg
pop
cli
hlt
test
push
es
nop
cli
push
cmp
dec
jno
lret
lods
lods
inc
loope
jmp
mov
cmc
mov
cmp
lds
fneni(8087
xor
pop
lahf
mov
pop
inc
xchg
add
or
loopne
xchg
sbb
adc
jge
cmpsl
xorb
jecxz
out
mov
xor
xchg
sahf
cmpsl
icebp
sbb
out
sbb
dec
and
push
cmp
pop
xor
cltd
test
es
fs
xchg
bound
or
cltd
cmovne
push
insb
enter
aas
push
mov
push
rclb
mov
jne
insl
les
lret
or
mov
pop
fildl
push
mov
push
cmpsl
or
adc
mov
adc
idiv
in
jle
cmc
cmp
filds
jmp
mov
fisubl
sbb
out
push
lahf
shlb
repnz
repz
mov
jb
xor
cmp
mov
cmpb
cmp
fisttpll
jle
test
jl
ds
data16
add
jne
sbb
std
bound
push
stos
xor
ljmp
inc
pusha
stc
inc
insl
dec
cli
andl
dec
jne
ds
adc
inc
and
fwait
xchg
aaa
and
dec
jno
pop
js
jb
push
inc
or
hlt
push
dec
fs
jne
subl
lock
sbb
lea
push
bound
inc
jo
mov
mov
jg
imul
sub
call
cmp
loop
cmp
xor
xchg
imul
pop
lods
mov
and
mov
popa
jne
jp
mov
jb
sti
jbe
jno
push
pop
repz
fsubrs
imul
sbb
scas
je
inc
mov
dec
shrl
out
cmp
xchg
dec
andl
neg
adc
dec
mov
pop
insl
or
subl
lock
mov
xor
sbb
fisubs
mov
insl
incl
call
cmp
out
mov
repz
inc
les
sub
and
sarb
test
mov
mov
jns
lds
ret
jne
decl
or
push
inc
jo
sub
aas
jl
popf
or
mov
test
pop
push
fidivs
cmpsl
rcrb
nop
jmp
aaa
ss
fldl
mov
call
insl
ds
or
jo
mov
scas
fdivrs
lcall
push
xchg
push
xchg
xor
inc
mov
mov
aaa
adc
sahf
jge
pop
cmp
pop
jne
fisttps
cwtl
dec
pushf
mov
loop
xchg
jp
xor
push
nop
test
mov
fisttps
or
repz
test
inc
and
enter
mov
push
enter
lds
or
loop
add
dec
rolb
dec
icebp
andl
and
pop
fcoml
lret
orl
inc
mov
mov
lret
adc
inc
into
xchg
push
pop
pop
add
sbb
cmpsb
and
cmp
rcrl
inc
test
cmp
push
and
movsb
pop
add
adcl
sbbb
pusha
mov
cli
shll
roll
leave
add
jmp
xor
push
xchg
mov
inc
inc
mov
sub
push
inc
xor
stos
jnp
cs
mov
mov
orl
pop
repz
sub
iret
ljmp
lret
inc
loop
jne
mov
stos
test
scas
mov
xlat
push
push
jmp
cmc
popa
inc
movsl
fs
add
or
push
mov
or
cmp
test
dec
push
mov
cwtl
sti
inc
jo
mov
cmp
push
jno
xor
enter
jl
or
fstpt
push
das
push
sbb
mov
pop
stos
sbb
inc
out
int
rorl
adc
jo
js
adc
lcall
jnp
fst
aad
push
popf
and
cltd
mov
scas
pop
loopne
xchg
dec
jbe
or
out
xchg
xor
aas
sbb
cmp
cli
sub
jbe
add
movsl
clc
repnz
adc
push
cwtl
sub
xor
pushf
mov
aad
jecxz
lret
loope
test
mov
mov
mov
scas
mov
jnp
inc
mov
pop
lock
pushf
mov
push
rcl
lea
mov
inc
push
mov
dec
mov
dec
sbb
and
xchg
aaa
sbb
push
sti
sbb
pop
mov
mov
sbb
push
xchg
ret
or
mov
sbb
cmp
je
inc
dec
xchg
and
sbb
cmp
and
fisttpl
fcomps
out
jmp
ret
adc
push
mov
adc
insl
ss
les
insl
jle
loopne
fs
mov
jns
std
fimull
andl
cmpsb
sbb
bnd
inc
out
inc
sub
clc
add
xchg
and
rolb
fcoml
cs
pop
push
dec
cwtl
push
cmp
leave
adc
push
dec
fldenv
inc
and
lods
gs
mov
fyl2xp1
jbe
lret
loope
push
and
mov
ret
lret
gs
ret
mov
mov
fsub
pop
push
mov
push
cmp
jmp
cmpl
push
mov
insb
movsb
pusha
or
idivb
stc
jmp
pop
add
xor
stos
sbb
sti
jle
loopne
mov
adc
fimuls
in
pop
sbb
jmp
pop
pop
inc
aam
inc
movsb
push
inc
cmpsl
cmp
pop
aas
jo
mov
add
or
pop
mov
mov
fadd
rcrl
jmp
lods
sarb
adc
mov
test
jge
sub
int3
loope
cmpsl
push
add
inc
daa
ret
inc
fcoms
fs
fwait
mov
mov
ss
pop
inc
fbld
add
in
psllq
aas
out
test
mov
add
or
push
outsb
stos
sar
mov
add
in
test
and
pop
jle
loope
push
jp
sbb
imul
mov
push
sbb
add
pop
jp
lcall
mov
stc
fisubrl
sbb
pop
sarb
sub
pop
sahf
addb
xchg
xor
mov
hlt
dec
pop
pop
cltd
imul
inc
icebp
into
lcall
push
imul
cwtl
add
xor
mov
jbe
mov
shll
int3
andl
fyl2x
pop
xor
adcl
bswap
scas
pusha
mov
mov
push
pop
or
cmpb
cld
test
test
pop
mov
pop
lock
xor
and
stos
enter
movsb
out
shlb
dec
aad
mov
out
rorl
icebp
inc
pusha
and
mov
jns
sbb
aam
std
cmp
fistpll
mov
cmp
mov
out
sub
jbe
add
mov
stos
es
lock
xor
add
mov
es
mov
mov
inc
cmpb
add
mov
jbe
inc
jle
cmp
mov
push
jp
sahf
pop
mov
mov
lods
mov
mov
stc
push
push
js
rolb
mov
cmp
xor
repnz
rolb
mov
push
mov
xorb
ret
xor
mov
mov
add
movsl
xchg
or
pop
sub
test
repnz
fs
cmp
mov
mov
out
std
cmp
inc
cmpsb
lea
mov
pop
movsb
shlb
mov
leave
pop
mov
mov
xor
in
push
cmp
inc
js
ret
mov
shrl
aas
cmp
jecxz
mov
fisubrs
push
in
rorb
mov
in
mov
popa
movsl
mov
xor
push
jmp
cmp
mov
dec
xor
pop
xchg
jnp
mov
pop
adc
adc
jecxz
xlat
out
xchg
jae
lcall
stc
stos
test
shlb
lcall
lret
test
movb
popf
pop
pop
and
cwtl
pop
rclb
lret
mov
imul
test
addr16
ret
inc
loop
xchg
dec
cmpsl
test
push
sahf
mov
negb
and
popa
jle
test
xor
sub
into
or
xchg
pop
inc
adc
cmp
jno
inc
adc
inc
push
aad
sub
shrb
sahf
xor
jp
pop
aaa
xor
cld
jo
sub
xor
rclb
xor
add
and
inc
add
pop
lods
pop
cmp
leave
sahf
jae
mov
jl
lahf
pusha
inc
hlt
icebp
flds
xorb
mov
add
jl
in
rol
movsl
test
adc
mov
sub
shlb
mov
push
inc
jl
in
xor
lock
test
mov
subl
mov
lock
cmp
loope
mov
mov
xor
inc
adc
jp
imul
adc
arpl
shl
pop
cmp
movsl
pushf
push
pop
sahf
and
mov
cmp
mov
shrb
xor
sub
test
cmpl
fcmovb
sbb
adc
mov
pushf
imulb
idivl
jbe
sub
adc
mov
xor
in
sbb
inc
mov
mov
stos
inc
ret
fstl
test
pop
repz
test
iret
nop
stc
leave
pop
mov
jns
fldenv
test
in
adc
xor
pop
ret
adc
fsts
bound
adc
cmp
xchg
outsl
add
scas
lahf
hlt
inc
adc
ficoml
or
xor
fcmovnu
mov
jo
cmp
cmp
mov
in
imul
pop
mov
xchg
insl
popa
adc
test
rcr
xchg
inc
cmp
xor
inc
outsl
andb
frstor
in
pop
scas
pushf
mov
sahf
dec
sbb
test
mov
lcall
lret
cmp
in
fadds
push
add
xlat
dec
xchg
mov
mov
adc
sahf
sbb
in
inc
adc
mov
and
mov
fwait
adc
adc
xchg
add
test
cmp
cmpsb
cmpsl
lret
rol
push
shlb
sbb
mov
pop
pop
sbb
cmp
sbb
pop
cmp
adc
stos
and
jne
aas
and
mov
mov
cmp
jmp
cwtl
mov
dec
or
stos
inc
adc
mov
push
jmp
jle
cmp
push
or
inc
mov
popf
test
ret
ss
js
fstl
push
mov
shll
out
nop
mov
adc
push
mov
xlat
fmull
cs
sarb
test
pop
sbb
movb
jns
fstps
mov
jnp
mov
pusha
cmp
jbe
pop
mov
inc
in
sbb
addb
xchg
jbe
addr16
or
pop
xor
push
jne
push
mov
cmpsl
xor
fwait
sbb
arpl
xor
adc
iret
add
push
and
xchg
fcmove
ds
jge
es
mov
mov
mov
test
movsl
fbld
fld
push
test
sbb
lods
pop
cmp
aaa
icebp
adc
jbe
pop
mov
adc
js
jmp
cmp
mov
test
js
fadds
mov
popl
cmp
es
negb
clc
mov
adc
jg
sbb
lret
int
inc
and
stos
fidivl
loopne
frstor
cmpsl
mov
in
aad
lds
sbb
add
rcrl
pop
sbb
fstp
xchg
cmp
loope
xor
pop
pop
lret
push
stos
xchg
mov
in
sbb
cmp
fisttpl
popa
sub
rorb
adc
jbe
lahf
stos
sahf
and
inc
out
mov
mov
das
and
movsl
js
stos
es
adcl
cmp
cmp
shrl
sarl
sbb
sbb
sub
loope
pusha
lods
aaa
push
rcll
and
test
xchg
mov
pop
mov
push
xchg
jmp
loope
inc
jno
mov
mov
mov
mov
cmpsl
sbb
pop
fdiv
and
idivl
jp
ret
adc
scas
loopne
stos
jno
cmp
cmovo
cmp
cmpb
pop
add
loop
push
sbb
mov
aad
push
jmp
mov
add
out
add
leave
jbe
and
pop
sbb
outsl
pop
aam
and
adc
push
pop
sub
mov
ja
iret
xchg
inc
pop
pop
aam
shlb
mov
mov
adc
lret
adc
stc
scas
and
ds
inc
fs
cmp
add
filds
out
fstl
mov
jno
mov
movsb
mov
fimuls
mov
sbb
xchg
scas
test
or
xchg
pop
rcrb
pop
xlat
jne
sarl
add
sub
stos
jae
and
or
sub
nop
arpl
orb
xchg
jmp
clc
mov
mov
pusha
xchg
pop
xchg
push
fcmovnbe
fsub
cltd
push
add
pop
and
pop
inc
add
fisubrl
ds
std
jae
dec
test
mov
xchg
imul
adc
ss
mov
push
cltd
mov
xchg
loop
movsl
fidivl
inc
add
and
mov
fdivrs
inc
mov
jo
inc
jbe
rorb
xor
xor
shr
mov
shlb
pop
adcb
sbb
add
cs
jne
rorb
pop
test
mov
fmull
arpl
leave
cld
outsl
push
pop
push
test
rcr
mov
stos
push
cltd
adc
jb
pusha
mov
lea
jp
fcoms
adc
mov
push
jmp
push
adc
cmp
test
cmp
inc
test
dec
movsl
mov
mov
roll
push
je
xor
cs
xchg
mov
add
inc
lods
inc
xchg
jbe
sbbb
pop
sub
sbbb
icebp
sub
mov
inc
push
fs
sarb
rorl
cmpsl
xor
movsb
ss
dec
jge
sahf
and
ds
xorb
push
addb
mov
fadd
mov
and
and
scas
add
scas
xor
jns,pn
inc
mov
leave
mov
fisttpl
cmpsl
into
mov
mov
cmc
nop
in
xor
mov
mov
ret
jl
mov
mov
scas
and
loopne
mov
mov
jns
xchg
scas
cmp
pop
pop
mov
pop
jp
int
mov
and
lock
shr
xor
imul
push
movsb
stos
inc
and
push
int3
adcl
movsb
lds
mov
adc
mov
or
sahf
test
xor
mov
xlat
nop
stc
or
inc
adc
leave
xchg
inc
xchg
inc
mov
imul
xor
push
mov
pop
mov
ss
jns
cwtl
adc
mov
loop
aas
add
or
mov
jp
lret
addl
shlb
fistl
jecxz
test
adc
ss
push
sarl
cmpl
hlt
in
add
push
pop
lret
pop
cmpsl
mov
shll
scas
fildll
mov
xchg
dec
lret
jmp
sbb
push
rorl
pop
out
imul
inc
push
lea
add
xor
sbb
cmp
lret
mov
fwait
mov
std
inc
fldl
icebp
jns
inc
xlat
dec
pop
inc
mov
aas
pop
jb
push
ss
inc
dec
fiaddl
les
bound
mov
inc
pop
inc
jb
xor
mov
nop
movd
lds
jge
lcall
pop
xchg
pop
nop
mov
xor
cmp
sahf
daa
sub
mov
mov
repz
andb
fdivs
dec
mov
lahf
mov
mov
sti
xchg
mov
insl
ds
cmp
pusha
xor
lcall
repz
testb
pop
stos
pushf
movsl
or
imul
or
icebp
sub
or
mov
shrb
jb
jo
fwait
rcr
adc
sbb
jbe
sbb
push
lods
je
jmp
lahf
xor
scas
jnp
xor
cmp
movsb
fldcw
sub
inc
fwait
mov
cwtl
push
leave
ss
lods
mov
cld
dec
add
xchg
xchg
ret
mov
and
add
popf
out
pop
xchg
rolb
loopne
pop
lea
icebp
jns
movl
dec
add
push
mov
inc
dec
push
out
lods
cmp
push
sahf
imul
pop
sub
or
mov
inc
sti
sbb
mov
lret
jecxz
or
jns
loop
adc
dec
fsubs
stos
mov
movsl
sub
sbbl
out
adc
sub
jecxz
int3
icebp
sub
clc
imul
mov
cli
dec
lret
enter
dec
cmp
cmp
dec
mov
mov
dec
fsub
lea
movsl
loopne
es
adc
and
sbb
cmp
jns
push
jl
and
sub
bound
cmp
clc
xor
mov
test
shrb
sahf
and
adcb
jb
scas
outsl
pop
pushf
mov
and
push
pop
adc
fnstenv
jnp
sarb
sbb
sbb
hlt
int3
cmp
fstpt
cmp
adc
movsl
sub
popa
sbb
gs
add
cmc
popf
mov
sbb
iret
xor
pop
lcall
jb
out
xor
repz
mov
stos
cmc
out
mov
clc
jb
shrl
popa
xchg
xchg
leave
addr16
sahf
stc
push
sub
inc
pop
hlt
ds
jno
pop
int3
ss
push
mov
sbb
ja
test
push
or
mov
mov
mov
mov
xchg
xchg
push
rclb
add
fdivs
xor
loopne
repnz
and
pop
inc
lods
shlb
movsl
pusha
rcrl
dec
je
mov
hlt
xor
mov
adc
sbb
xchg
imul
sbb
push
jecxz
aaa
fcoms
jle
mov
adc
jle
inc
inc
mov
movsl
loope
push
pushf
sub
dec
xor
loope
sbb
xchg
and
mov
dec
or
push
mov
push
movsl
das
clc
call
xor
and
and
enter
ljmp
cwtl
and
adc
adc
fwait
pop
push
int
adc
pop
dec
mov
cmp
ljmp
les
ds
inc
or
lods
cmpsl
mov
push
adc
cs
jle
arpl
mov
gs
adc
les
ss
mov
sub
jle
xor
loopne
dec
rcl
cmp
mov
sbb
pop
cmp
int3
clc
fidivrl
enter
sbb
cmp
cmp
xchg
adc
mov
stos
push
movsl
jge
imul
add
insl
jle
in
push
divb
ss
xchg
sub
sub
xchg
shrb
in
out
out
pop
adc
shlb
insb
sub
cmp
and
push
push
ret
push
ljmp
aad
lock
je
faddl
cs
xor
push
loopne
and
mov
scas
dec
jnp
pop
imul
or
jg
test
pop
jg
repnz
stos
push
mov
mov
in
mov
inc
bound
push
out
fsubs
pop
ds
mov
stos
add
xchg
pop
movsl
jmp
les
xchg
add
mul
jecxz
mov
pop
inc
cmpsb
ret
rcll
test
movsl
or
or
gs
mov
rcll
lret
jae
out
jno,pn
jp
add
not
pop
and
shlb
jle
fists
sub
add
push
and
aad
popf
imull
or
xor
int3
mov
push
xor
xor
inc
arpl
faddl
sbb
mov
mov
inc
out
xchg
or
mov
sbb
dec
jne
cli
test
fistpl
mov
sbb
cmova
adc
push
in
mov
loopne
pop
mov
pop
jo
clc
sbb
cmp
testb
fnstcw
mov
push
insb
pop
sete
ds
add
sub
push
test
nop
lods
int3
fsubrl
pop
sub
pop
mov
cmp
jle
pop
xor
pushf
mov
mov
adcl
jecxz
jle
mov
insb
xor
sti
sti
lret
das
cmp
or
mov
xor
jp
pop
inc
mov
fdivl
pop
jmp
push
mov
inc
cmp
fadds
xchg
xchg
dec
dec
xlat
in
push
mov
shlb
pop
imul
fidivl
cmpb
roll
mov
filds
push
lret
test
loope
loopne
push
or
pop
and
test
adcb
js
inc
fstpl
rcll
cltd
popa
xor
fldt
negb
popf
movsb
test
clc
out
into
push
sbb
push
lret
xor
movsb
inc
inc
aaa
mov
xor
push
cmp
jmp
aam
push
dec
mov
fldcw
mov
and
data16
shrb
jb
lods
dec
gs
xorb
mov
xchg
addb
or
ret
faddp
ja
rolb
or
pop
hlt
adc
inc
jb
add
mov
mov
gs
jnp
sbb
jae
push
sbb
imul
ja
jbe
cmpl
push
in
aam
mov
pop
cmp
mov
cld
repz
test
xchg
or
push
lods
sub
stc
lcall
cltd
mov
adc
mov
sahf
out
inc
mov
lret
leave
or
or
ds
aaa
lahf
jle
mov
mov
arpl
mov
or
lock
aam
ret
cmp
pop
adc
pop
leave
pop
lea
mov
push
cwtl
sbbb
stc
lea
into
sarl
fidivl
mov
mov
test
popf
ficomps
mov
push
xor
add
sub
inc
dec
pop
cli
out
popa
jmp
stc
movsl
adc
or
sti
orb
cmp
mov
popa
inc
inc
fisubrl
sbb
movsl
cmpsl
rolb
movsb
mov
sub
cltd
push
mov
ds
int
sub
in
cmpsb
mov
xor
movsl
xor
jnp
pop
mov
adc
scas
nop
push
dec
sbb
mov
adc
mov
pop
mov
jl
pop
mov
or
es
mov
fdiv
xor
aam
lret
xor
repnz
orb
into
sbb
inc
add
sbb
ret
idivb
xchg
adc
cmpsl
popa
out
imul
xchg
jmp
rcll
mov
jnp
scas
ret
pop
movsb
aaa
xchg
cmp
pusha
mov
mov
jno
pusha
into
push
std
mov
inc
xchg
jno
inc
movsl
sub
sbbl
mov
scas
mov
testb
insl
or
or
mov
xor
loope
test
movsl
jbe
fdivl
cwtl
sub
pop
push
dec
rcrb
sbb
mov
xor
int
sarb
ret
js
sub
mov
sti
sub
js
sarl
and
mov
mov
sbb
cmpb
test
rcrb
nop
pop
and
lds
fisubrl
loope
adc
xchg
jb
lret
pop
or
sahf
push
mov
scas
pop
call
xchg
xchg
fidivl
mov
xor
cmp
jmp
adc
sub
fmul
sbb
aas
pop
subb
adc
xchg
out
ret
fdivrl
out
outsb
and
or
pop
sbb
mov
mov
pop
xchg
dec
lcall
mov
pop
push
or
aas
mov
xor
mov
jb
inc
cwtl
add
jle
pop
js
push
lret
push
inc
sti
jns
sbb
fwait
dec
cltd
enter
popa
cmp
xchg
ret
leave
push
mov
sub
rcl
xchg
xchg
lds
stos
xchg
orl
sti
mov
popa
sbb
cmp
test
jno
mov
data16
xchg
mov
divl
inc
lcall
xor
fisubs
leave
and
daa
sbb
dec
mov
mov
fwait
jl
pop
arpl
dec
insb
lods
mov
dec
fcompl
jnp
adcb
pop
inc
mov
out
sub
mov
lods
dec
inc
mov
bound
xor
cmpsb
and
xor
adc
enter
mov
lret
or
imull
cs
and
ja
arpl
jb
pusha
mov
lgs
mov
jp
xchg
ds
lods
jno
xor
cmp
mov
xchg
inc
rcll
inc
sbb
aaa
repnz
xlat
fidivs
sbb
das
jo
cmpsb
cmpl
popf
mov
jle
clc
push
mov
dec
loope
fadd
push
rcrb
mov
shrb
xor
pop
jae
lcall
mov
sub
xchg
sub
push
mov
dec
psubd
pop
sar
fistps
data16
jle
add
sarl
and
movsl
std
test
or
add
fdivl
mulb
jp
inc
or
sub
and
or
iret
jns
xor
mov
mov
dec
cmp
mov
fdivrl
add
inc
mov
dec
pop
add
adc
out
mov
mov
adc
xor
push
cs
dec
je
daa
aaa
push
jp
push
adc
mov
xor
sti
fcoml
cmp
adc
pop
cltd
shll
xlat
jno
movl
sahf
cli
ficompl
enter
pop
add
cmp
or
popa
cmp
mov
shll
sahf
clc
iret
jb
es
lahf
lret
shrl
cmp
pop
bound
jecxz
lret
xor
outsb
outsl
and
or
int
mov
jle
rclb
mov
icebp
rcll
and
sahf
mov
adc
jl
cmp
pop
adc
dec
mov
mov
js
dec
dec
inc
jns
lret
inc
add
shlb
cmp
mov
adc
outsl
sub
inc
pop
push
out
add
loope
aam
cmp
imul
inc
pushf
mov
in
adc
mov
jo
inc
xchg
andl
add
int3
test
inc
push
jmp
inc
mov
push
lods
mov
jg
mulb
xor
in
rol
and
daa
sbb
push
scas
mov
mov
adcb
dec
jmp
push
xchg
es
mov
sbb
or
outsb
add
jnp
xchg
gs
ja
sbb
mov
mov
into
sub
bound
test
push
repz
inc
stos
pop
inc
cltd
lods
cmp
rcll
iret
icebp
fistpl
cltd
pop
mov
in
jne
cmp
and
test
cs
cmpsl
outsb
jnp
mov
inc
in
cmp
mov
mov
cmp
aas
pop
mov
cwtl
and
pusha
xor
fmull
mov
sbb
aas
cltd
sbb
and
xchg
push
mov
fmull
fadds
push
add
test
aam
pushl
imul
cld
test
jbe
mov
push
out
jle
js
push
pop
test
mov
sub
push
cmp
inc
mov
js
test
enter
scas
std
mov
inc
mov
mov
movsl
int
mov
xor
lret
mov
aad
mov
add
mov
mov
mov
xchg
in
addl
out
fs
sub
jge
mov
fnstsw
jo
subb
sbb
xchg
gs
jnp
push
mov
mov
mov
aad
sub
inc
push
xchg
pop
jb
jl
out
movl
test
dec
mov
sarb
cs
out
cmp
adc
adc
fiadds
mov
dec
inc
cmp
add
sub
lcall
dec
or
fiadds
je
mov
xchg
jle
iret
sub
es
sbb
iret
shll
mov
cmc
cld
dec
pop
mov
in
inc
neg
popf
repz
adcb
sbb
clc
xor
pop
mov
xchg
fwait
es
fst
xor
shlb
fiaddl
iret
mov
pop
inc
out
xchg
mov
ret
jp
sar
outsl
sub
movsl
xchg
push
lcall
push
cltd
nop
fiaddl
adc
push
leave
xorl
or
and
aam
mov
iret
adc
sbb
test
mov
lods
inc
movb
mov
lds
fwait
lods
mov
jo
les
ret
lods
fimuls
clc
and
lahf
nop
cld
popl
mov
push
pop
jbe
aas
jnp
call
cwtl
out
in
pushf
jp
popf
jmp
ds
sub
mov
or
push
jb
in
fdivrs
mov
or
stos
outsl
in
fdivl
cmp
ret
pop
adc
adc
cmp
xchg
push
jge
push
inc
inc
adcb
mov
rol
stos
add
sbb
stos
pusha
mov
sub
sbb
cmp
lea
bound
and
pop
dec
mov
push
pop
ljmp
aam
ror
pusha
js
jae
sahf
sahf
int
sahf
scas
xchg
inc
mov
jle
mov
mov
fcmovnu
repnz
push
sarb
subb
test
rol
cmp
inc
cmp
jne
jg
mov
mov
cmc
jl
test
roll
fnstsw
iret
or
movsl
mov
nop
pop
pop
or
outsb
fsubl
movsb
movsl
mov
jo
out
idivb
xor
rclb
push
mov
push
pop
adc
cli
pop
movsl
push
stc
ss
inc
push
sub
lret
mov
add
fiaddl
cwtl
cmpsl
sub
add
fwait
inc
mov
mov
or
mov
cwtl
lcall
cs
aaa
push
data16
mov
imul
lea
ret
xchg
inc
pop
psubd
add
test
insb
pop
fstpl
adcb
jae
fimull
mov
mov
mov
shlb
push
aas
mov
adc
bound
inc
xchg
pop
mov
cmc
xor
jp
into
xor
jnp
stos
mov
mov
xor
jns
pop
sbb
mov
jae
jmp
cwtl
sub
leave
filds
sbb
movl
fstp
push
xchg
push
lods
mov
jo
push
movsl
js
bound
pushf
shlb
jnp
inc
shll
mov
mov
mov
nop
int3
push
out
push
pop
pop
fcomip
jno
jmp
lods
mov
int
sbb
xchg
xor
fidivs
dec
cld
and
cli
cmp
rcrl
cli
shrl
pop
scas
or
cmpsb
cs
test
shl
pop
mov
out
sbb
leave
and
nop
xchg
repz
or
jno
cmpl
insl
mov
jae
negb
and
and
popf
stos
movsb
mov
lock
xchg
icebp
fs
std
movsl
addr16
inc
pushf
in
mov
inc
pop
xchg
mov
add
mov
xchg
or
andb
mov
rorl
inc
cmpsl
inc
xor
or
lea
gs
and
and
inc
adc
mov
inc
sbb
jb
mov
movsb
outsl
push
push
dec
push
scas
mov
pusha
add
js
inc
pop
dec
jb
mov
adc
push
inc
jbe
mov
cmp
cmp
push
mov
adc
in
ss
addr16
pop
mov
pop
and
mov
clc
arpl
inc
xchg
inc
adc
cld
movsb
es
test
lahf
mov
inc
cmp
jmp
jo
xor
jnp
add
ret
fildll
push
cmp
xor
mov
add
xor
dec
mov
ds
dec
daa
mov
je
sbb
notl
xchg
push
jg
ret
cmpsl
cmp
lds
js
push
jae
push
mov
sub
out
imul
cltd
outsb
mov
cmc
and
lahf
pop
or
jmp
pop
adc
xor
mov
cmpsl
fistpl
aas
adc
sub
mov
mov
xchg
push
sub
xchg
pop
mov
outsb
xchg
cwtl
inc
sub
inc
pop
les
rolb
jge
fnsave
mov
stos
xchg
pop
push
add
fsubrl
mulb
lahf
push
mov
adc
mov
and
bound
mov
pop
inc
or
les
lret
repnz
xchg
adc
dec
mov
cmp
xchg
xchg
sub
outsb
add
sti
outsb
test
mov
js
mov
jge
mov
mov
out
adc
rcr
jno
sub
rcr
shlb
jg
test
rol
mov
ds
das
xor
out
pop
fstl
adc
cli
mov
and
jg
mov
jbe
divl
adc
mov
mov
ds
movsl
fcom
xchg
xchg
lea
sub
ja
in
stos
sbb
cwtl
jne
lods
jbe
jg
mov
les
pop
pop
loop,pn
fstl
push
loopne,pt
mov
subb
lret
loopne
aas
push
loopne
xchg
xor
push
jo
mov
outsl
mov
mov
int
mov
lret
sub
repz
sbb
xchg
mov
mov
cmpsb
adc
push
pop
mov
iret
inc
push
xor
fucom
shlb
sbb
sbb
pop
mov
loopne
lods
jb
divb
pop
add
mov
bound
test
call
jl
xor
out
jno
es
andb
shl
ja
cmp
fcomps
cmc
aam
sbb
mov
popf
ret
repnz
fstl
add
sbb
mov
les
movsbl
in
nop
cmp
pop
testb
and
sub
mov
xlat
sub
jb
insl
loopne
cmc
sub
movsl
inc
cltd
fsubp
jnp
cmpl
jle
cmp
bound
sub
dec
sbb
sbb
or
divb
std
jle
mov
stc
push
call
dec
mov
push
mov
sbb
jl
and
lea
jns
jbe
pop
test
lods
sub
xor
cld
sbb
cmc
ja
pop
lods
inc
sbb
push
das
int3
xchg
in
push
jno
ja
and
inc
jp
mov
jp
and
popf
push
and
xchg
jo
pop
inc
xchg
dec
cmc
cwtl
insb
inc
push
cmp
loop
divl
inc
js
mov
lcall
cld
orb
popa
fildll
push
ret
pop
add
cltd
lea
push
scas
cltd
sbb
sahf
fcmovnbe
fwait
push
pop
jno
xchg
cmp
mov
std
xor
loope
adcb
jne
daa
sahf
xchg
lock
xor
addr16
push
jecxz
je
rorb
int3
icebp
imul
adc
add
inc
sub
and
jae
cmp
mov
jmp
lcall
sarl
pop
cli
addr16
faddl
jne
pusha
daa
xor
cmp
xorb
mov
pop
sbb
bound
fimuls
mov
out
mov
mov
icebp
popa
lds
repz
cs
test
sbbb
mov
sbb
rolb
fdiv
mov
aaa
inc
inc
xor
jl
and
and
addb
popa
sahf
addl
jecxz
test
loope
xchg
push
mov
xchg
adc
mov
adc
add
pop
sub
mov
shlb
push
cmp
fdivl
int3
push
insb
dec
imul
scas
ss
mov
stc
adc
xchg
and
scas
sbb
rorb
les
psubsw
outsb
movsb
jp,pt
jle
cs
mov
sarl
sbb
jp
lock
inc
adc
inc
or
faddl
xor
inc
mov
pusha
decb
pop
and
scas
shrl
sub
std
pop
clc
out
shlb
xchg
and
adcb
shl
lea
ds
sahf
movsb
bound
mov
push
push
loopne
sub
movsl
inc
sub
mov
mov
ja
pop
and
mulb
mov
pop
dec
daa
mov
mov
dec
mov
adc
movsl
mov
lods
cmp
push
sbb
or
push
fstpt
pop
aad
aaa
mov
sti
adc
add
imulb
mov
xor
or
inc
mov
sarb
xor
xor
push
mov
pop
subl
lods
sbb
push
jl
fwait
cmp
in
mov
push
scas
cmp
mov
stos
sub
or
cmpsl
testb
ljmp
mov
loopne
movsb
mov
insb
mov
xor
jnp
sbb
rclb
call
push
repnz
adc
sbbb
jno
xchg
pop
test
xchg
and
fbstp
push
cs
subl
mov
jge
mov
into
xchg
cmpsb
mov
adc
mov
mov
lret
stc
ljmp
jmp
pop
test
aas
aam
fcom
xor
imul
scas
or
xor
sub
cwtl
or
js
add
daa
lods
cld
insl
popf
mov
pop
sub
mov
mov
loopne
push
push
mov
xorb
cmp
xchg
and
or
jl
fwait
mov
insb
inc
and
scas
xor
lock
sub
mov
jg
das
sbb
xchg
adc
std
mov
xchg
sbb
sub
mov
inc
push
mov
movsl
sbb
xor
jmp
mov
decb
xor
lret
pop
sub
dec
std
dec
call
pop
stos
scas
jle
or
xchg
xchg
and
pop
mov
mov
and
test
mov
scas
mov
xchg
and
and
jecxz
xchg
inc
imul
mov
test
cmpb
shll
and
sub
ficompl
mov
fwait
popf
sbb
in
fs
mov
sbb
jecxz
add
sbb
jmp
mov
fldl
je
mov
subb
mov
aam
xor
pop
add
cwtl
dec
mov
add
dec
aas
jle
mov
jbe
pop
mov
jno
movsl
shrb
pushf
test
sahf
loope
add
fs
js
mov
adc
xchg
ret
pop
sbb
jmp
cmpl
leave
mov
mov
and
neg
loope
in
mov
adc
repnz
mov
jmp
hlt
mov
daa
mov
int3
pop
inc
xor
jae
xor
shll
cs
inc
push
cld
lods
cmpl
xchg
or
mov
mov
jae
mov
mov
inc
pop
adc
push
jb
ds
jg
arpl
cs
xor
adcb
dec
add
jo
scas
lahf
sub
dec
xor
aad
xlat
pop
daa
jp
adc
inc
sbb
lahf
fadds
and
push
cmovne
movsb
fs
lcall
cmp
mov
stc
and
dec
adcb
mov
adc
cli
pop
xorb
sbb
lcall
lret
outsl
push
sbb
cltd
and
push
adc
pusha
mov
mov
pop
sub
pop
jle
pop
add
rcrl
es
push
add
je
pop
push
cld
fstpl
ds
popa
stos
imul
xchg
pop
aas
add
jg
fucom
add
xchg
add
or
lods
jg
push
pusha
roll
sarl
loopne
jb
mov
cli
scas
adc
in
mov
push
cmp
cmpsl
pop
sbb
and
cmp
dec
xor
ret
out
jecxz
add
lea
xchg
pop
inc
xchg
fbld
inc
sub
inc
push
lret
pop
xchg
in
data16
cltd
xchg
xchg
mov
nop
mov
inc
mov
mov
push
mov
jo
jbe
fidivl
ljmp
les
aaa
cli
adc
mov
mov
in
pop
jno
iret
lcall
sarl
sub
mov
mov
pop
mov
into
ja,pn
mov
jmp
cld
imull
jmp
cld
fdivl
cmpsl
int
jo
inc
mov
out
jno
mov
or
pop
push
adc
or
inc
and
fwait
mov
cld
pop
lcall
xor
cmp
imul
jge
xor
adc
mov
cmp
cmpb
in
jecxz
shll
into
xchg
sub
sahf
mov
dec
jp
xor
jp
mov
and
adc
cmp
push
pushf
fisttpll
pop
push
dec
jp
pop
push
in
push
jp
push
lcall
inc
inc
bound
xchg
sub
jl
sub
into
es
jl
mov
pop
mov
sub
jl
mov
push
inc
fadd
dec
call
pusha
aaa
outsb
lret
add
js
ds
nop
lret
jne
xchg
sbb
popa
stos
cmp
add
fnstenv
mov
loopne
jge
pop
push
cmp
sub
push
inc
pop
mov
mov
movsb
push
ret
adc
andb
sahf
mov
mov
nop
aas
ss
mov
sbbb
aas
test
xor
mov
and
or
sub
xchg
push
negb
xor
mov
idivb
pop
jp
add
mov
jle
pop
aas
add
and
sub
adc
mov
cmpsb
inc
test
mov
jb
fstpl
fistpl
xor
push
addb
lds
fsubs
cwtl
xchg
and
arpl
xchg
clc
lea
xchg
add
cmp
in
movsl
and
xchg
mov
lcall
adcb
cmp
lahf
lahf
add
inc
mov
add
mov
jp
into
jo
sbb
jae
mov
out
mov
sub
cmp
jne
inc
ret
mov
mov
jnp
arpl
cld
mov
les
mov
xlat
dec
mov
stos
inc
adc
shll
fdivrs
inc
sahf
mov
imul
and
inc
xchg
lock
loope
and
ret
mov
cmc
sarl
rclb
or
mov
sub
lcall
mov
fstpt
pop
loope
mov
rcr
rcll
insl
adc
sub
mov
decb
xchg
xor
rcr
cmp
cmp
in
mov
call
popa
mov
push
test
sbb
test
movsl
pop
or
sti
push
add
ljmp
pop
sub
dec
into
mov
xchg
add
gs
mov
das
xlat
push
xor
dec
ds
mov
shll
stos
stos
inc
call
cmp
push
cmp
inc
xchg
test
mov
push
cli
xor
inc
aas
push
subl
and
scas
add
imul
xor
xor
loop
sub
movsl
fsubr
mov
bound
pop
movsb
fcomps
pop
and
add
xchg
xchg
out
loopne
stos
out
and
inc
pop
jg
jecxz
fcomps
add
flds
or
out
or
test
add
adc
repz
imul
mov
and
xchg
mov
sub
div
inc
fadds
xchg
js
inc
cs
add
mov
inc
cmp
adc
push
rclb
jle
jb
jns
xor
or
lods
inc
or
or
ficoml
pop
leave
jns
inc
jns
pop
xor
test
add
jns
sarb
sahf
jno
addr16
popf
inc
aas
pop
inc
popf
cmpsb
inc
xor
rorl
lcall
sarl
pop
push
jl
mov
add
rcrl
sub
add
adc
nop
xchg
shlb
xor
ret
shll
lock
movsl
cmp
xor
sbb
pop
dec
push
dec
aaa
das
push
sub
jle
adc
push
ret
sbb
inc
inc
iret
popf
sub
jae
and
jbe
xchg
sub
lock
clc
jmp
and
fs
rorl
push
mov
adc
adc
sub
lea
lret
out
mov
rclb
fidivrl
sahf
outsl
mov
ret
mov
jns
movsb
clc
cltd
and
mov
push
incl
lea
aas
inc
cmp
leave
popa
push
addl
rorl
mov
adc
lahf
mov
jp
inc
mov
and
test
sarl
andb
mov
loope
lods
aas
int
and
jbe
xor
and
add
mov
std
enter
pop
sbb
fildl
lods
push
push
fs
js
mov
pop
pusha
sbb
out
scas
test
ja
mov
push
lds
jbe
pop
dec
sar
repz
add
insl
dec
in
jecxz
pop
mov
or
ds
gs
pop
add
jae
nop
outsb
idivb
inc
cmp
mov
cwtl
sbb
leave
push
mov
insb
cmp
nop
inc
ret
mov
jne
negl
dec
inc
sbb
cmp
scas
xchg
xorl
sub
cmp
push
js
movsl
push
test
xor
mov
mov
cmp
fldt
rcll
sub
adc
ret
std
xor
test
add
mov
mov
pushf
cli
inc
ss
insb
xchg
cmp
sti
mov
dec
mov
adc
xor
scas
sub
ret
aaa
arpl
inc
mov
inc
data16
adc
jnp
sahf
andb
lret
popa
cwtl
mov
push
das
orl
repz
jecxz
cli
bound
lods
dec
fwait
mov
mov
into
cmpsl
sub
mov
lret
int3
or
stos
xchg
popa
xorb
fiaddl
shr
jbe
adc
enter
idivb
inc
pop
imul
and
mov
or
inc
xor
xor
filds
jns
sahf
cs
jle
das
mov
clc
sahf
bound
cmpb
sub
sbbl
lods
arpl
cmc
or
mov
lret
sub
jle
mov
rcl
popa
jmp
hlt
jle
mull
jle
scas
cmp
xchg
out
dec
sarb
sbb
cmp
pop
repnz
test
pop
mov
xor
adc
mov
cwtl
lea
popa
xchg
or
mul
mov
jmp
cmpsl
movsb
fcmovnb
sbb
in
sub
sahf
adc
push
xlat
imul
rclb
adc
inc
rsqrtps
inc
and
inc
add
pusha
dec
hlt
push
mov
and
stos
sbb
pop
test
jb
xchg
cld
or
ja
popf
fstpt
sub
mov
jnp
dec
pop
xor
adc
pop
enter
or
cld
cs
pop
push
fs
cmp
test
test
jb
push
das
jae
ret
push
or
arpl
xchg
fucomip
fcomp
inc
and
jmp
mov
pop
leave
jne
mov
mov
and
shl
popf
xchg
inc
fs
pop
mov
inc
stos
adc
clc
jno
fldl
and
xchg
ret
pop
mov
fcomp
in
fdivrl
movsl
push
sub
jmp
adc
jbe
mov
pop
adc
pop
mov
push
mov
dec
pop
push
ficomps
push
inc
fbstp
push
pop
movsl
repz
test
xor
fistpl
icebp
repz
mov
ret
sbb
addr16
and
cmp
mov
pop
rcrb
sti
idivl
sbb
inc
test
nop
lcall
dec
pop
mov
mov
filds
or
es
ss
dec
icebp
cmp
mov
repnz
repz
jle
fnstenv
mov
cmp
nop
outsl
push
add
movsl
call
loope
jl
movsl
lret
xlat
mov
cwtl
xorl
cmp
arpl
fcmovne
jmp
sbb
jl
and
ds
add
ret
mov
add
pop
mov
and
push
adc
adc
stc
push
aas
dec
cmp
adc
fsubs
mulb
mov
pushf
sub
out
adc
push
mov
jle
arpl
fidivl
ss
outsl
sar
imulb
inc
test
scas
sub
loope
es
insb
pop
mov
pop
add
jge
mov
pop
dec
cltd
jb
cwtl
inc
ljmp
adc
mov
add
test
and
sbb
add
mov
push
aad
and
sbb
mov
push
test
sbb
and
ret
or
andb
cmp
gs
xchg
dec
inc
cpuid
test
in
mov
sbb
pop
std
sti
mov
adc
mov
push
adcb
and
xchg
aad
adc
iret
dec
adc
xchg
into
mov
movsb
push
push
test
lcall
call
daa
or
mov
sbb
pushf
movsl
ja
jnp
jo
mov
dec
arpl
pop
or
xchg
push
pop
ljmp
sub
mov
mov
sbb
inc
cltd
jae
out
or
push
jp
sti
xchg
jp
push
xchg
mov
dec
int
jae
or
mov
das
cwtl
adc
jg
cmpsb
sub
push
push
imul
mov
movsl
jp
inc
popa
xchg
loope
outsl
pusha
ret
out
xchg
jb
inc
or
test
mov
xor
inc
inc
cwtl
cmc
in
ja
jp
adc
test
mov
mov
mov
jno
lods
xor
pop
adc
xor
enter
icebp
rcl
pop
js
jns
inc
cmpb
js
jecxz
xor
clc
inc
jl
xchg
sub
test
mov
jp
pop
out
mov
clc
xchg
fnstsw
repnz
jmp
lock
cmp
shll
pop
popf
inc
bound
adc
js
cli
decl
mov
push
lret
push
mov
push
lahf
nop
and
mov
jae
xchg
pop
mov
aas
iret
adc
lcall
cmp
cmc
icebp
jne
cmpsl
jmp
and
xor
jp
mov
nop
and
mov
cmpsb
test
push
fnstsw
adc
or
sub
xor
cmp
sarb
scas
cmp
push
test
sub
adc
jnp
clc
jo
xchg
xor
jb
cmp
adc
xchg
pushf
loopne
pop
clc
rclb
outsb
mov
jp
popf
sub
cld
sub
out
adc
push
jmp
add
repz
mov
mov
mov
cmpsl
xchg
xor
xor
test
lahf
mov
adc
insl
add
inc
js
sub
inc
leave
fnstcw
iret
push
pop
ss
cmp
iret
scas
rcr
pushl
jo
mov
in
mov
call
sahf
adc
sahf
xchg
shrl
pop
ja
lea
imul
sbb
mov
xchg
pop
jo
aaa
xor
movsl
adc
dec
jns
pop
loope
pop
ja
adcl
push
mov
xchg
push
aam
cmp
pop
stc
push
mov
shlb
shlb
es
mov
daa
jle
xchg
loope
mov
dec
mov
pop
mov
sbbb
test
xchg
cmpsb
xor
pushf
inc
and
mul
cmp
dec
mov
cmp
in
push
mov
hlt
test
ret
or
jo
leave
fimuls
orb
cmpsl
adc
and
or
xor
mov
dec
adc
loop
inc
mov
mov
and
leave
jnp
sbbb
ds
xchg
movsl
scas
jge
movsb
xor
mov
fadd
and
std
sub
or
push
nop
daa
test
xchg
add
out
push
in
push
lahf
add
scas
mov
mov
and
mov
movsl
mov
mov
push
int3
lcall
or
mov
pop
scas
shrl
lods
mov
mulb
jns
push
das
cmpsl
stos
add
ret
stc
roll
inc
mov
movsl
sbb
add
outsl
pop
sub
mov
mov
mov
mov
mov
divb
jne
xor
lcall
imulb
in
ret
repz
dec
jae
lret
jo
scas
xor
mov
inc
rolb
xchg
sbb
xor
mov
or
fdivrs
insl
scas
cwtl
cltd
dec
add
dec
cli
inc
xchg
data16
out
sub
xchg
inc
mov
or
lcall
in
pop
pop
jp
shlb
sbb
mov
jl
mov
pop
jmp
test
push
pop
and
popf
push
aaa
js
les
popf
inc
repnz
ljmp
mov
jle
mov
push
mov
std
sbb
mov
sahf
insb
jbe
clc
and
popf
shll
jl
clc
nop
inc
add
divb
iret
sub
lods
adc
lret
cmp
jno
leave
sbb
cmpsl
cmp
cmpsb
add
xchg
cwtl
fsts
jb
fwait
mov
movsb
xor
arpl
xchg
sarl
pushf
or
mov
aaa
or
inc
repnz
cmp
mov
push
push
sbb
pop
shrb
add
popf
mov
scas
push
shll
mov
ss
mov
idivl
retw
and
add
insb
mov
rclb
aaa
adc
xor
std
rclb
xchg
pop
inc
insb
mov
mov
inc
xor
xor
roll
sbb
dec
jecxz
mov
and
std
ljmp
sub
xor
fs
xor
loope
inc
sub
mov
leave
xor
inc
pop
in
xor
sti
jge
pop
inc
arpl
bound
inc
js
call
addl
cmc
or
lea
xchg
push
cmpsl
mov
mov
loope
mov
xchg
pop
mov
fwait
popa
fidivs
mov
xchg
nop
jg
inc
data16
icebp
cmp
shrl
dec
sti
lcall
and
ja
xor
add
pop
fstpl
sarb
aam
mov
ljmp
adc
roll
loop
push
mov
adc
cmp
shll
test
int
xor
ljmp
inc
pop
pop
addr16
adc
mov
sarl
jle
mov
cmp
lods
xor
ficoml
xchg
orb
pop
std
out
hlt
scas
xchg
inc
jbe
add
adc
cmp
sub
pop
mov
xor
cs
adc
add
adc
mov
xor
into
xchg
hlt
cmpsl
sub
popf
mov
mov
mov
jns
or
mov
sahf
adc
cs
mov
pusha
xchg
cmp
xor
test
arpl
pop
xchg
lock
inc
ljmp
inc
cs
fisttps
push
lret
mov
inc
cld
setae
inc
roll
inc
mov
adc
mov
inc
test
movsl
mov
stos
popa
inc
adc
pop
fldt
inc
pushf
add
andb
add
and
dec
mov
mov
jo
popa
cmp
cltd
faddl
pusha
into
mov
mov
inc
dec
pop
push
inc
int3
fidivl
pop
push
inc
pop
or
orb
orl
xchg
ljmp
sub
mov
pusha
xchg
sahf
jns
pop
dec
ret
lcall
sub
lods
dec
test
fdivl
or
jnp
addl
xchg
and
subb
lock
sub
mov
add
or
lahf
and
and
aas
xchg
mov
jmp
jecxz
pop
imul
std
ljmp
subl
inc
loopne
mov
sbb
mov
add
xlat
cmp
mov
lcall
fwait
add
xor
adcb
mov
jo
mov
jnp
rcll
lea
sbb
scas
sub
cmp
inc
mov
xor
add
aas
lea
cmp
xor
jl
mov
pushf
and
pusha
mov
dec
pop
testl
mov
aaa
mov
addl
mov
xor
mov
inc
adc
lret
mov
mov
mov
mov
xor
sbb
out
rclb
xor
cwtl
mov
push
pop
shll
mov
and
scas
xchg
ret
pop
mov
sub
adc
icebp
pop
adc
pop
repz
cmp
lock
mov
mov
js
and
and
fistl
cmp
rcr
repnz
sub
daa
inc
in
pop
inc
sub
frstor
jo
pusha
add
sbb
das
push
mov
sbb
sbb
sbb
cltd
push
push
loop
mov
xor
outsb
xor
xchg
push
out
push
icebp
cmpsb
inc
les
cmp
dec
fs
out
leave
jecxz
and
movsl
xadd
rcr
hlt
lret
in
lods
pop
sub
dec
mov
test
sti
inc
adc
jbe
mov
test
fst
cmp
dec
mov
jmp
mov
movsb
add
std
orl
sub
inc
lods
shrb
lods
mov
mov
xor
mov
and
out
mov
push
push
cmp
pop
and
jp
lahf
stc
xor
into
mov
pop
jnp
gs
mov
push
jg
pop
mov
fstl
ds
cmp
dec
ss
lods
stos
jne,pt
int3
jl
rcrb
sbb
sub
push
pop
jmp
pusha
xorl
fidivl
repnz
inc
mov
jecxz
jbe
loope
mov
jb
lods
ret
xchg
iret
mov
jle
cmp
lods
popa
push
fbld
aaa
xor
sub
cwtl
jl
icebp
add
xchg
enter
jp
popa
movsb
pop
inc
inc
loopne
into
cmpsl
out
cmp
cmp
insl
ret
cltd
rcrl
pop
pop
popa
and
lret
fistps
cmp
inc
cli
jb
xor
sub
push
cmp
cmpsb
cmp
mov
jnp
and
cmp
mov
out
and
inc
pop
loopne
movsl
call
out
loopne
mov
inc
xchg
push
and
andl
inc
xchg
add
mov
je
adc
mov
cmp
mov
inc
pop
punpckhdq
das
sbb
add
out
int3
test
cmp
mov
andl
push
mov
fsubl
pushf
pop
nop
push
je
ja
mov
fs
mov
xchg
inc
imul
sarb
dec
mov
push
stos
pop
in
xchg
xorl
sbb
int3
mov
sub
subb
inc
xchg
negb
inc
cmpsb
pop
or
push
xlat
sub
jl
test
mov
sub
sbb
mov
stos
stos
pop
cmpsl
or
int3
sub
cld
or
push
mov
push
ffree
pop
les
mov
lahf
fisubrs
std
sub
cmp
int3
jle
push
clc
jge
adc
insl
cmp
mov
jg
ds
loope
adcb
xchg
xor
cmp
mov
jle
sbb
lret
jo
sbb
dec
adc
jnp
sbb
iret
arpl
pop
hlt
popa
inc
out
inc
jecxz
mov
test
add
out
cmp
pop
out
in
xor
or
add
dec
jns
cli
pop
pop
mov
lock
out
mov
insl
hlt
addr16
pop
sub
scas
xor
jp
sub
mov
arpl
dec
int3
push
sar
fcomps
jo
test
or
sbbb
pop
cltd
dec
pusha
hlt
adc
insb
xchg
xchg
cmpsb
mov
inc
cmp
jb
dec
lahf
in
push
and
es
adc
cwtl
rcr
and
scas
fsubr
lcall
sbb
sbb
xchg
cmp
xchg
roll
pushf
aaa
data16
shrl
into
jb
in
sbb
insl
popa
dec
push
shrl
in
ss
inc
scas
pushf
adc
test
sbb
test
jge
cmp
test
cmp
or
test
stos
lahf
dec
inc
push
mov
xchg
sub
add
fmuls
jle
mov
int3
cmp
sbb
dec
mov
inc
mov
mov
fst
sub
subb
cmp
jo
int
mov
aas
push
cmpb
lods
mov
mov
bound
add
mov
fwait
cmp
push
sti
inc
enter
clc
mov
andb
inc
movsl
pop
push
inc
mov
add
clc
fcomps
ds
imul
xchg
adc
test
outsb
inc
fcomi
xchg
js
or
nop
mov
nop
out
dec
orb
sarl
pop
mov
mov
dec
mov
pause
push
data16
popf
icebp
mov
mov
cwtl
outsb
mov
and
sub
dec
pop
pop
mov
mov
lods
ficoms
das
add
outsb
test
out
xchg
adc
test
mov
jle
fnstsw
sbb
xchg
mov
gs
daa
rcrb
jle
cmp
test
push
mov
mov
clc
push
jno
shlb
and
out
xchg
add
cmc
push
push
movsb
leave
adc
or
insl
push
dec
test
xor
push
adc
lods
popa
sbb
mov
mov
fidivs
test
test
push
inc
ficompl
lret
pop
and
jle
shl
jb
mov
mov
sbb
nop
jns
jecxz
add
fisttpl
cmpsl
add
sbbb
movsl
shll
mov
lods
call
lret
jns
shlb
lea
popa
mov
inc
sbb
sarl
aam
bound
inc
pusha
jb
xlat
aaa
cmpl
shll
mov
lods
sahf
rolb
fnstsw
test
or
ret
and
xchg
xlat
pop
andb
or
mov
popf
mov
fxsave
jo
xor
xor
ds
sbb
jne
mov
mov
aas
adc
sbb
and
sub
xchg
sahf
pusha
arpl
andl
add
loope
and
and
stc
lock
inc
or
mov
outsb
cmp
dec
push
leave
mov
pop
xchg
or
fnstenv
mov
add
adc
xor
sahf
mov
js
mov
inc
outsb
out
aas
mov
jbe
mov
dec
dec
adc
jge
aas
pop
std
aaa
push
adc
dec
push
adc
inc
iret
cmpsl
nop
inc
ss
ret
dec
mov
and
cltd
mov
pop
rclb
cmp
or
inc
ss
dec
add
ds
mov
pop
bound
dec
xchg
imul
xor
js
test
sbb
mov
js
and
cwtl
sbb
cmc
lea
push
stc
xor
mov
xchg
nop
insb
push
popf
add
cmpsb
movsl
scas
or
xchg
sbb
movsl
sbb
pop
ror
xchg
mov
push
int
push
or
scas
xchg
dec
mov
call
add
cmp
inc
jne
sbb
subb
imul
inc
xor
add
xchg
xor
shl
inc
inc
int
cmp
jb
jp
sbb
mov
mov
data16
sbb
mov
outsb
mov
cli
aas
pop
movb
out
mov
jns
out
and
cwtl
aas
and
test
sarl
and
pop
xor
stos
into
push
mov
bound
xchg
les
mov
fisubrl
movsl
cwtl
or
mov
icebp
sub
and
test
inc
pop
sub
and
mov
das
inc
lods
lea
cs
movsl
ret
lods
inc
sub
pop
sub
scas
jle
and
add
insl
push
jbe
les
sahf
cli
cwtl
sub
in
sarb
push
test
jmp
cltd
dec
or
insl
mov
enter
mov
leave
pop
sub
fisubrs
inc
xchg
fistpl
lods
lds
cmc
sar
add
push
nop
mov
adc
sub
pop
pop
fldt
ds
and
jo
je
mov
adc
je
mov
xchg
jl
inc
mov
andl
and
rol
xor
jp
xor
inc
mov
rcrb
adc
push
fsubrl
push
mov
mov
mov
jbe
xor
popf
shlb
cmpsb
mov
mov
std
push
into
xchg
sbb
movsl
sbb
mov
pop
shrl
push
movsl
stos
cli
fs
pop
inc
mov
fs
lods
inc
push
sbb
lods
add
mov
push
aam
iret
movsb
push
push
cmpsb
ret
movsl
fwait
mov
es
jb
cld
in
test
xchg
leave
add
or
and
or
cwtl
jae
mov
insl
mov
pop
xchg
orb
out
leave
loop
fldl
mov
mov
sub
in
pop
nop
scas
sahf
xchg
nop
cmp
popf
mov
imul
pop
mov
jae
rolb
xorl
add
mov
roll
push
das
lea
mov
scas
mov
stos
jne
adc
pop
rcrb
lods
mov
imul
scas
fistps
mov
addb
pop
sahf
adc
mov
sahf
dec
movsl
xchg
push
lods
cmpl
and
mov
sub
sahf
ds
mov
cmp
mov
jecxz
cmp
test
fisubrl
mov
stos
fstl
popf
outsl
sub
mov
shrb
sub
shll
jp
lret
add
and
xchg
js
push
cmp
jg
or
push
xchg
movsl
xor
add
adc
and
test
cltd
loopne
xor
loopne
jbe
jb
stos
daa
icebp
fs
scas
loope
and
push
add
insb
xchg
or
addl
bound
inc
mov
inc
mov
jmp
fstpt
pop
pushf
rcrl
andb
sbb
sti
xorb
outsb
dec
mov
add
rcr
mov
jmp
mov
cltd
lock
das
dec
in
jno
sarl
sti
lock
cmp
cmp
and
push
jo
mov
rolb
mov
fstl
aas
fst
loopne
sbb
xchg
shrl
popa
movsl
xchg
and
sbb
pop
inc
jb
mov
jmp
jg
rclb
inc
push
data16
cli
push
ja
leave
addl
cmpsl
aad
test
scas
jbe
mov
daa
test
xlat
xchg
push
pop
inc
shlb
jmp
adc
sub
mov
fimull
andb
dec
xchg
inc
jns
mov
mov
pop
aad
jle
orl
inc
insl
push
jge
addl
push
out
xor
jge
sub
sti
movsl
sub
inc
xchg
jmp
test
inc
sbb
pusha
mov
clc
inc
lahf
push
decb
fst
movsl
repnz
ret
test
scas
cmp
fdivl
fiaddl
jp
gs
or
frstor
sti
jmp
mov
dec
adcl
das
mov
push
clc
sub
rorl
and
inc
mov
fs
add
fldenv
mov
pop
aam
cmp
pop
hlt
test
daa
popf
xchg
in
shrl
inc
inc
dec
cli
cwtl
sbb
mov
or
or
arpl
push
inc
aad
mov
bound
fadds
adcl
das
fcos
xchg
stos
dec
aaa
push
jo
add
pop
loopne
jp
push
push
cmpsb
popa
sbb
sbb
sbb
dec
jle
pcmpeqw
scas
adc
pop
out
sub
xor
ljmp
mov
cmc
popa
sub
shlb
fsubr
push
xchg
outsb
fidivs
cmp
scas
or
mov
mov
cmp
jmp
sub
and
outsb
inc
out
dec
push
daa
xor
cmp
imul
fmull
push
subb
cmp
movsl
scas
jae
insl
push
addl
stos
dec
mov
cmp
ss
mov
fwait
mov
lret
scas
inc
cltd
ficoml
add
pop
jl
cwtl
cmp
int3
iret
xlat
shl
sbbl
ss
pop
mov
enter
addr16
out
fs
sarb
rolb
xlat
mov
hlt
cmp
out
jns
jo
jo
addl
mov
sti
jmp
xor
cmp
mov
xor
movhps
aaa
sub
shl
sub
inc
dec
mov
movsl
pusha
bound
pop
xchg
and
insl
fidivrs
inc
jl
mov
pop
jmp
xchg
push
mov
lods
mov
les
fisubl
pop
dec
loope
aaa
js
stos
sahf
push
into
cwtl
fidivl
mov
fldl
out
fsubrs
mov
cmpsl
dec
add
mov
xor
push
jbe
nop
inc
bound
adc
sub
push
push
stos
xor
cmpsl
fistl
fwait
mov
mov
xchg
xor
pop
test
imul
inc
mov
fldl
or
dec
push
enter
test
pop
mov
mov
push
out
add
and
fsubl
and
or
cltd
push
mov
icebp
shlb
bound
sarb
mov
out
lods
inc
inc
shlb
addl
andb
mov
inc
shll
sarb
ljmp
mov
mov
cmp
jle
push
xor
jmp
leave
subb
daa
jg
int
sub
ss
xor
push
sbb
gs
sub
add
xorb
cmc
or
shl
std
sbb
sub
push
jnp
cld
lods
dec
cmp
loope
sti
fnstsw
xchg
adc
popa
jns
dec
mov
push
sbb
cmp
pop
inc
shl
mov
cltd
xor
xchg
insl
addr16
adc
cmpsb
iret
jmp
cwtl
es
xor
xor
pop
xchg
pop
or
leave
jo
data16
mov
fcomi
xchg
jns
lods
loop
fnsave
outsl
data16
mov
hlt
pop
pop
pop
dec
rcrb
out
sarb
sub
jbe
sub
inc
bound
filds
mov
lcall
into
lcall
mov
jg
inc
mov
aaa
xor
mov
aas
js
mov
fs
shl
pop
out
cmp
sbb
push
lret
repnz
inc
stos
adc
xchg
push
lcall
int3
lahf
rclb
add
dec
cmp
insl
das
or
enter
int3
imulb
push
sbb
add
leave
shlw
mov
cmp
mov
or
pop
add
push
test
lods
jb
dec
insl
sub
inc
out
pop
lahf
daa
xchg
repnz
push
mov
punpcklwd
sarb
enter
jns
jno
loopne
push
test
lret
mov
pop
push
cli
sti
icebp
or
sahf
and
mov
mov
fcoml
sub
repz
jnp
cmpsb
loopne
sub
cmpsb
inc
bound
roll
xchg
test
mov
js
pop
jbe
fdivrs
add
insl
jecxz
mov
sub
xor
jo
clc
pop
iret
fwait
add
setge
xchg
mov
xor
movsb
ljmp
push
inc
dec
in
test
push
mov
push
je
pusha
rcrl
fs
adc
sbb
punpckhdq
add
ss
idivb
aaa
pop
rcrl
fisubl
ficoms
aaa
xor
clc
jge
jbe
sahf
ret
leave
sbb
mov
je
mov
ljmp
hlt
and
cmpsb
in
mov
out
fidivrl
dec
inc
xor
in
inc
cwtl
jnp
inc
or
push
into
es
push
xorl
inc
sub
arpl
cmp
mov
sbb
or
iret
fsubrp
fcoml
aas
xchg
psraw
cmpsb
dec
outsb
mov
sbb
fs
hlt
pop
cltd
mov
test
xor
jb
jne
iret
negl
push
int3
cmp
fisubl
push
pop
sub
insb
addl
xchg
fwait
xchg
daa
jbe
jns
cmp
xchg
sbb
inc
xchg
push
pusha
xor
xor
stc
into
mov
sbb
ss
dec
cmp
cmp
jno
ror
out
push
ljmp
test
incb
cmp
cmp
mov
jg
cmp
outsl
scas
lods
jns
xor
icebp
sbb
pop
inc
and
ret
outsl
sub
in
pop
or
sub
loop
pop
sbb
cmpsb
xchg
cmp
xor
ret
inc
xor
cmp
mov
mov
ret
and
jg
jp
adc
xchg
repnz
addr16
jbe
xchg
push
or
aaa
pop
fs
pop
gs
adc
ret
mov
jnp
mov
xor
in
fidivl
mov
hlt
jo
inc
stos
dec
lods
inc
or
sbb
fdivl
and
in
leave
jp
cwtl
ja
mov
popa
pop
out
sbb
test
and
sbb
cli
mov
inc
mov
mov
fstp
jl
mov
jns
mov
or
jo
lock
lcall
inc
add
test
xlat
lea
fisttpl
sub
ret
popw
pop
dec
pushf
adc
loop
cmc
sub
roll
cmp
movsb
aaa
dec
inc
fisubs
jno
cmpsb
xor
adc
push
pop
mov
push
js
sbb
adc
jo
shrl
ret
sbb
jmp
stc
cmp
incl
test
je
mov
sub
in
pop
call
cld
repz
inc
in
cmpsl
jecxz
mov
popf
mov
lock
sub
in
aam
movsl
jge
cwtl
jnp
rol
push
int3
mov
dec
arpl
insb
imul
into
xor
mov
lea
mov
sub
mov
sub
dec
mov
dec
jp
sbb
icebp
jnp
mov
inc
mov
and
fsubl
mov
js
add
pop
jmp
sbb
gs
into
test
bound
repz
fisttpl
dec
cli
add
mov
pop
sub
or
fsubrl
pop
sub
add
setnp
cmpl
inc
call
aaa
sbb
or
or
mov
ljmp
icebp
or
push
mov
adc
pop
jo
mov
inc
mov
cwtl
cmp
inc
and
clc
pop
sbb
dec
adc
push
push
sti
xchg
mov
cltd
mov
es
mov
in
cmp
add
outsb
rcll
decb
push
fldt
mov
cs
mov
add
mov
jmp
xchg
cmp
mov
fisttpll
es
push
mov
push
rcr
fwait
cwtl
popa
cmp
ljmp
clc
xor
lcall
mov
inc
dec
push
mov
jnp
mov
ja
call
jo
popa
and
leave
inc
adc
call
sub
mov
cmp
pusha
xchg
mov
stc
xchg
xor
pop
mov
xchg
mov
aad
mov
cld
jle
mov
push
sbb
popf
int3
ret
inc
jb
mov
push
test
stos
pop
and
xor
lock
adc
loop
add
gs
push
notl
scas
rolb
mov
mov
xchg
rcrb
add
xlat
ret
or
xchg
andb
test
out
fwait
or
cmp
cmpsb
outsb
ljmp
adc
mov
or
fsubl
xchg
mov
inc
dec
adc
sbb
lret
scas
pop
aaa
test
jno
xor
mov
jns
ret
push
movsl
scas
imul
push
in
xlat
arpl
jo
xchg
fistpl
inc
scas
pop
movsl
xor
adc
insb
out
jo
adc
adc
dec
cmp
xor
add
lahf
cmp
es
repnz
bound
xlat
fidivl
cmp
pop
stos
dec
movsl
mov
xchg
lods
inc
mov
pop
cli
dec
mov
jo
pop
sbb
mov
notl
test
jne
mov
mov
daa
sbb
xor
push
sbb
pop
add
movsl
fsubrl
cli
xchg
sub
mov
xor
data16
sbb
movsl
add
mov
push
shll
leave
jl
stos
dec
pushf
inc
mov
lods
fsqrt
sbb
xchg
push
add
mov
cltd
lret
add
dec
popa
sub
pusha
lock
test
inc
out
int3
adc
out
push
mov
cmp
xchg
cmp
mov
movsl
jmp
pop
sub
in
lret
jp
mov
arpl
mov
mov
push
dec
mov
repz
stos
bound
imul
mov
mov
lea
sti
sub
cmp
cmp
jae
push
mov
fcomps
jo
cmp
jle
fcomps
cltd
mov
fisubl
sarl
rorb
pop
int3
fdiv
sbb
test
jb
pop
mov
xchg
hlt
jecxz
add
int
jge
int3
push
rcll
jb
mov
push
xchg
mov
leave
jge
insb
bndldx
pusha
xor
push
mov
add
mov
cld
jbe
pop
movsl
or
fsub
pop
inc
push
stc
out
xchg
inc
xor
sbb
rclb
mov
add
jg
mov
xor
inc
nop
ret
fadd
or
into
sub
adc
add
xchg
lods
sbb
movsl
dec
addb
and
add
out
int3
shl
mov
and
jle
and
mov
push
mov
jns
xchg
sub
xor
push
sub
push
fidivrl
loop
int3
add
mov
stos
inc
shll
mov
sbb
hlt
push
iret
pop
jns
lds
mov
arpl
daa
sbb
sub
int
fldl
inc
js
adc
hlt
cwtl
sahf
scas
outsl
and
push
mov
repz
mov
xor
js
fs
les
imul
and
pop
pushf
xchg
xor
cli
xor
inc
pop
push
out
dec
xorb
adc
sbb
enter
push
addr16
pushf
or
ss
push
ss
push
fisubl
mov
xor
js
out
xor
inc
mov
push
rcrb
sahf
rol
adc
inc
jmp
push
rcll
pop
mov
scas
test
rcrl
xchg
mov
fmull
xchg
insb
jp
mov
lock
cwtl
imul
mov
mov
and
movsl
adc
mov
jnp
jg
movl
rclb
mov
inc
bound
movsl
sarl
cld
xchg
iret
decb
push
jne
jp
daa
sbb
push
adc
mov
push
inc
mov
cld
add
inc
dec
negl
mov
stos
or
shr
and
cmpsl
std
lahf
cmpsl
roll
xor
xor
icebp
add
pusha
sbb
outsl
xorb
cmp
sbb
mov
mov
sub
dec
jo
dec
jo
mov
cli
sbb
out
repnz
test
push
int3
aas
mov
lods
test
xor
test
movsl
and
pop
jp
mov
adc
or
sbb
sbb
xor
mov
jb
or
push
test
sbb
xor
rorb
jl
fistpl
pop
pop
cmpb
adc
call
jnp
rorl
sbbb
mov
sub
sub
jnp
add
mov
and
movsl
data16
add
jge
push
sarb
popa
inc
xor
mov
clc
loopne
movsb
aam
add
push
out
pop
stos
stos
inc
mov
push
push
push
pop
sbb
jno
pop
jecxz
fcomps
cmp
into
cwtl
add
clc
add
push
add
add
adc
and
push
sub
mov
gs
jmp
jg
insl
sub
loope
cwtl
cmp
xchg
dec
movsl
hlt
out
clc
dec
into
and
cmp
pop
fcomps
aas
xor
jne
xchg
cltd
adc
push
popf
or
or
push
cmp
mov
xor
xor
xor
push
repnz
mov
push
mov
push
sbb
jo
mov
loope
divl
add
fcomp
sub
movsl
push
inc
pop
outsl
xchg
jbe
fwait
pop
cmp
pop
push
mov
scas
inc
sbb
xor
add
cwtl
loopne
mov
inc
inc
sbb
mov
mov
push
andl
push
lcall
or
xorb
adc
in
adc
jns
inc
nop
fmul
cwtl
mov
fmull
ret
movsl
cmp
dec
js
cmc
movsl
int3
clc
cmp
cmp
dec
ss
cmpsb
inc
adc
sub
push
shll
cltd
fwait
movswl
into
xor
jbe
xchg
andb
mov
js
and
mov
pop
jb
mov
mov
lods
dec
mov
pop
fs
sbb
jbe
sarb
push
mov
fucomip
lock
dec
cmp
jb
loope
outsl
inc
push
sbb
imul
pop
mov
in
adc
mov
sbb
xchg
jnp
fwait
mov
xor
cmp
inc
repz
pop
test
pop
jecxz
ja
js
mov
sar
shlb
stos
nop
movsl
cwtl
js
hlt
jl
push
repz
jnp
pop
ljmp
jmp
mov
mov
and
lods
push
push
mov
mov
imul
cld
imul
jo
mov
sub
pushf
mull
sbbl
notb
mov
movsl
sub
pusha
xor
push
cmp
and
fnstcw
mov
pop
stc
and
fidivrl
push
js
and
xchg
cmc
mov
addl
and
add
popa
les
adcl
sbb
test
xchg
adc
mov
jle
test
data16
popf
addr16
mov
adc
cmc
scas
inc
mov
mov
mov
lahf
mulb
lcall
mov
jnp
pusha
inc
jno
mov
mov
mov
inc
clc
stc
jne
sbb
shlb
repnz
jbe
out
dec
idivb
in
xor
aam
out
lods
inc
jne
setl
shlb
mov
mov
ficoms
inc
jno
pop
das
push
jge
push
mov
push
repz
ret
js
dec
pop
daa
mov
dec
cmp
pop
nop
push
cltd
fcoml
adcb
sub
ret
xor
push
push
add
add
adc
xor
pop
dec
loop
dec
pop
cmp
repnz
clc
lret
mov
jle
xchg
mov
cmp
sarl
mov
or
mov
cmp
jnp
js
movl
in
scas
mov
in
sti
pushf
fcmovne
les
loop
cld
xorl
inc
test
inc
leave
addb
lret
xor
mov
fs
movsb
xchg
outsb
mov
aam
pop
push
test
outsl
push
cmp
js
cmp
cmp
bnd
mov
je
icebp
cld
movaps
je
in
icebp
cmp
jg
pushf
mov
lahf
pop
stos
adc
std
mov
test
jecxz
outsb
out
add
mov
fidivrl
xor
jmp
shlb
mov
xchg
mov
mov
popa
jmp
mov
and
push
pop
and
ret
mov
mov
adc
test
incl
xchg
fdivs
and
mov
in
test
push
dec
lods
inc
test
lret
and
and
lret
or
fisttpll
mov
add
lods
inc
mov
jae
lcall
imul
jp
adc
test
and
push
sbb
mov
mov
insb
dec
int
arpl
push
out
sahf
pop
sarb
adc
stc
out
jp
or
xchg
ja
add
pop
sbb
add
pop
repz
sti
sub
xor
cmp
pop
mov
cmp
xor
cld
add
pop
addl
cltd
sub
push
jnp
mov
xor
mov
inc
and
mov
xor
filds
xchg
orb
xor
cltd
push
adc
mov
imul
jle
cmp
cmpsl
loopne
iret
sbb
and
inc
fldl
lds
stos
mov
mov
xchg
mov
enter
jp
fisttps
loop
inc
sub
fbstp
pop
inc
mov
mov
lret
fdivl
adc
jne
mov
lahf
mov
sahf
xchg
pop
sbb
and
dec
loope
fsubr
dec
xor
mov
push
add
movsl
pop
jl
mov
pop
cmc
sub
mov
ss
aad
xchg
fld
push
mov
movb
mov
scas
adc
lcall
mov
mov
pop
stos
jecxz
mov
push
aas
les
and
adc
jae
xchg
scas
jmp
xchg
popf
pop
dec
ficoms
jne
pusha
sub
inc
pop
dec
push
xchg
mov
dec
or
jl
mov
cs
sub
rcl
cmp
idiv
movsl
push
clc
lods
xor
xchg
mov
seto
movl
imul
mov
jge
lods
lcall
add
cmp
in
xor
cs
in
dec
jp
inc
xor
outsb
test
cltd
repnz
jle
mov
add
fwait
hlt
int3
popa
outsl
add
and
inc
cmpb
inc
jne
mov
jb
sarb
ficoms
cmp
fld
adc
popf
cld
jecxz
fs
addl
addb
mov
out
mov
ja
iret
jmp
cmp
cmpb
sbbw
stos
ds
mov
adc
adc
xchg
mov
jb
mov
sub
mov
sub
dec
mov
xor
jae
lret
cmc
mov
call
push
cmpsb
pusha
mov
dec
xchg
adc
stc
xorl
mov
xchg
fnstsw
or
pop
xor
cltd
mov
or
fs
cli
testl
push
fisubl
test
sbb
xor
mov
mov
adc
sarl
adc
jp
lea
stos
mov
cmpsl
mov
test
dec
mov
rcrl
mov
mov
lds
js
push
mov
pop
inc
fidivs
jmp
cmp
inc
shlb
mov
jo
lret
fwait
mov
pop
xor
addr16
mov
inc
xorb
add
mov
adc
sbb
in
test
into
scas
lods
bound
rorb
nop
mov
inc
movsl
xorb
mov
bound
and
movsl
pop
aam
cli
ficoml
mov
pop
mov
xchg
jle
ret
or
imul
fnstsw
cwtl
inc
out
stos
inc
and
pop
movsb
xor
xlat
jb
inc
jle
pop
jmp
mov
or
inc
addr16
ss
pop
xchg
push
or
fcomps
outsl
adc
imul
add
mov
adc
js
popf
shl
inc
and
sbb
xchg
xor
and
cmp
aaa
aam
fs
xchg
test
dec
xor
cmp
outsb
mov
nop
shlb
xchg
add
mov
popf
test
movsl
cmpsl
adc
leave
push
or
out
inc
inc
and
cmp
int
xchg
stos
push
jns
stos
jae
ss
shlb
cltd
stos
les
cli
stos
enter
fwait
inc
mov
xchg
mov
jo
inc
mov
xchg
dec
sbb
nop
out
js
movntps
jecxz
ljmp
jle
pusha
mov
inc
mov
jg
jae
int3
cld
mov
test
xchg
je
cmpsl
jb
loopne
bound
mov
pop
xor
pop
jp
push
xchg
mov
add
mov
inc
mov
adc
sahf
cli
inc
sbb
ljmp
fisubl
dec
xor
inc
insl
pushf
dec
adc
jne
jg
pusha
inc
cmpsb
mov
xor
mov
mov
je
sub
push
sbb
jbe
mov
movsl
cmp
lods
mov
mov
dec
adc
daa
sub
or
mov
movsl
xchg
jno
pusha
jp
mov
popf
rcrb
dec
repz
shlb
xor
push
mov
lods
xor
xor
add
mov
add
mov
fucom
test
jno
push
xchg
into
shll
testb
push
addb
cmc
shrl
into
scas
pop
push
and
sbb
mov
adc
xor
scas
sub
and
lret
dec
lahf
jo
xchg
dec
push
push
movsl
add
ja
icebp
popa
sbb
sahf
shl
idivb
shll
cmp
and
fucom
mov
push
cwtl
xchg
sbb
ja
in
into
je
mov
aaa
lahf
or
leave
xchg
addl
mov
jl
sbbb
inc
fs
mov
add
lods
nop
add
stos
inc
int3
add
inc
pop
jb
ror
mov
mov
mov
mov
adc
mov
cli
sahf
popa
data16
push
pop
push
push
stos
add
mov
xor
sar
push
inc
jmp
mov
icebp
adc
insl
mov
mov
pop
loope
inc
js
daa
aam
je
inc
xchg
rol
and
dec
add
xor
gs
jns
jle
jp
pop
outsb
jne
iret
inc
orl
test
pop
jno
movsl
int
jp
pop
imul
xor
mov
int3
sbb
push
lahf
pop
movsb
xor
aad
mov
inc
push
jl
mov
mov
add
pop
bound
adc
scas
pop
cmp
adc
inc
lret
or
sub
cmpsl
jg
add
jb
add
stos
xor
sub
mov
sbb
scas
clc
lods
pop
and
lods
cmp
movb
sub
jecxz
mov
test
pusha
sub
popa
arpl
neg
pop
jp
mov
rclb
stos
leave
test
mov
add
and
and
xchg
sbb
cmp
loop
jne
jecxz
xchg
xchg
ja
out
pop
or
adc
mov
dec
aam
je
sbb
jb
test
mov
xchg
pop
lds
mov
pop
popf
mov
insl
pusha
mov
xchg
mov
int
push
add
inc
mov
loop
mov
mov
xor
sbb
in
or
decb
inc
notb
in
in
xchg
xchg
rcrl
xor
inc
jg
xchg
mov
mov
test
jnp
and
inc
sbb
das
inc
add
inc
fistpll
xor
hlt
sub
mov
and
add
sbb
xchg
andl
inc
sbb
dec
and
adc
add
push
sub
sub
in
lock
jl
mov
mov
fisttpl
dec
push
ss
mov
outsb
jne
out
pop
push
mov
pop
scas
push
adc
movsb
mov
inc
add
dec
mov
pop
mov
pusha
cmp
lods
cs
outsb
nop
mov
shlb
pop
xor
and
xchg
leave
and
sarl
push
or
or
pop
fwait
mov
test
dec
imull
stc
mov
inc
pusha
outsl
xchg
adc
movsl
or
and
rcrl
testb
sarb
das
dec
adc
mov
icebp
and
lods
mov
repz
gs
sti
and
fwait
adc
cwtl
lahf
mov
pushf
inc
pop
shr
and
mov
push
mov
in
roll
fwait
mov
jl
pop
sub
pop
xchg
jne
and
imul
out
ja
mov
test
and
mov
insb
mov
mov
jnp
daa
shlb
xabort
mov
add
lods
mov
mov
or
rcrl
xchg
int
pop
lcall
cmpsb
ret
arpl
je,pt
cwtl
enter
ljmp
mov
out
ror
mov
pop
mov
xchg
and
push
bound
adc
mov
cmp
mov
inc
ds
jp
mov
add
dec
in
cmpsb
fadd
sbb
addr16
dec
pushf
mov
fstp
add
adc
lods
xchg
daa
popa
out
cmp
xor
inc
or
mov
push
gs
pop
lret
aaa
or
movsb
or
scas
wrmsr
lods
pop
movsl
test
loope
adc
add
std
daa
cmpsl
inc
daa
cld
mov
mov
jl
pop
leave
idivb
adc
sti
sub
les
test
loopne
inc
movb
cld
mov
or
pop
pop
mov
movb
jo
in
imul
popa
or
nop
pop
lods
pop
mov
or
dec
mov
inc
lcall
add
ds
popf
mov
ds
sbb
lods
cltd
mov
fidivs
iret
ret
pop
push
test
push
out
je
mov
xchg
jmp
mov
lret
fcompl
add
and
sbb
cld
mov
mov
sbb
fists
mov
hlt
arpl
int3
push
lods
into
sbb
mov
mov
pusha
pop
mov
scas
scas
loope
or
shl
inc
jecxz
add
fwait
aaa
mov
int
sub
mov
jle
test
loope
cltd
insl
jecxz
test
enter
cwtl
pop
insl
or
loop
adcl
cs
scas
xchg
add
sub
lcall
ret
mov
mov
xchg
dec
cs
mov
jmp
xchg
xchg
out
and
mov
xchg
loopne
scas
lea
pop
mov
inc
je
ror
mov
fnstenv
jno
and
stc
jg
xchg
mov
mov
inc
mov
cmp
popa
sbb
fwait
stos
call
mov
lods
push
movsb
test
pop
shlb
bound
mov
out
sub
xchg
sbb
dec
daa
inc
lods
and
jbe
movsb
insl
fs
add
shlb
movsl
jb
pushf
sbb
cmpsl
mov
xchg
sub
inc
bound
sbb
push
push
cmp
or
mov
fildl
mov
inc
ss
rol
clc
test
sbb
sbb
mov
sbb
cmp
xor
and
jne
mov
and
sahf
mov
and
cli
pop
cmp
add
mov
xor
lock
sahf
mov
xchg
mov
roll
jb
mov
pop
pop
fcmovu
or
mov
mov
mov
cmpsb
jmp
hlt
dec
sbb
out
out
les
movsl
pop
in
ret
test
int3
sahf
inc
movsl
popl
aaa
push
sub
aaa
outsb
jnp
pop
mov
test
fisttps
xor
andb
cmp
mov
test
mov
inc
or
mov
insb
xchg
das
ficoml
mov
cmpb
mov
mov
in
cwtl
xchg
or
add
jnp
adc
pop
cmp
mov
jg
sbb
les
mov
jle
inc
out
pop
jb
lcall
jae
push
mov
mov
lock
out
sub
mov
in
push
mov
es
inc
add
push
fs
pop
mov
fistl
mov
sbb
popa
sbb
jecxz
repz
mov
orb
sub
sbb
dec
pop
sbb
jmp
pop
add
fcomps
add
cmp
jle
sub
in
lret
jl
loope
aas
lcall
push
dec
add
loopne
imul
fcoms
aad
aas
pop
adc
mov
in
mov
mov
movsb
jae
xchg
inc
nop
mov
cmp
adc
add
cmpl
xchg
fsubrl
ret
das
lods
lock
and
mov
aas
pusha
sub
mov
adc
add
cmc
mov
and
fcmove
shrb
fs
sbb
sub
fwait
push
mov
fsubl
mov
jg
out
mov
push
fucomi
pop
cmp
in
jae
addr16
imul
pusha
pop
je
jns
pop
mov
lods
dec
shll
mov
std
scas
sub
sbbl
xchg
lds
pop
sarb
test
fdivrs
mov
fsubrl
and
cmp
test
add
bound
addb
shlb
mov
xor
jge
test
loop
cmpl
shrl
rorl
lods
inc
shlb
in
cmp
cltd
lea
imulb
mov
sbb
jp
jge
push
jge
shlb
test
push
lret
or
sub
in
add
sbb
fistpl
sbb
mov
mov
cmp
and
push
out
or
xor
enter
jmp
sbb
or
nop
jae
in
cmpb
inc
dec
loopne
outsl
sbb
jbe
cmp
cmp
cmpl
sbb
inc
rol
cmc
adc
mov
in
jl
cmp
ret
pop
cmpsl
adc
aaa
jae
and
cmp
jne
add
or
cli
shl
shll
sti
sahf
inc
xchg
sbbb
sbb
fcoml
test
jo
mov
pop
xor
or
movsl
fcmovnbe
out
pop
push
sarb
inc
lret
popf
mov
jmp
int
and
inc
push
shll
popa
movsl
out
xor
dec
jbe
mov
loopne
and
out
mov
adc
aaa
xchg
xor
cli
shl
jp
sti
ret
int3
or
xchg
loopne
js
cwtl
mov
jns
adc
jb
xchg
mov
hlt
mov
and
inc
les
imul
jne
ret
or
aas
xor
add
testb
loopne
and
dec
in
les
dec
jge
mov
and
push
inc
push
cmpsb
inc
dec
jl
test
pushf
inc
js
sarb
mov
inc
sub
fs
push
test
mov
mov
sbb
mov
mov
pop
imul
testb
lcall
lock
mov
mov
stos
xchg
into
mov
and
dec
pusha
out
mov
out
mov
inc
mov
dec
decl
mov
xor
inc
sti
adc
mov
mull
fdiv
adc
mov
dec
imul
stos
cli
fimull
xchg
sarl
push
inc
ja
pusha
out
int
out
jl
inc
out
lcall
sbb
fldenv
cmp
add
stc
ja
pop
or
cs
movsl
fmull
jne
cmp
mov
and
adcl
cmpsb
cmpsb
xchg
dec
shrl
mov
cmpb
sub
pop
lret
pop
xchg
xor
pop
orb
rolb
pop
mov
xchg
cmp
sub
test
mov
out
mov
movsb
leave
hlt
xor
mov
inc
xchg
test
out
pop
int
rcr
inc
dec
pop
lds
test
xor
sbb
sarb
jle
into
sub
sub
mov
jecxz
lods
mov
sub
out
lods
loope
or
jb
pop
outsb
cmp
xor
sub
adc
outsb
into
shl
cwtl
push
sbb
and
roll
jne
movsl
sarb
mov
outsl
jle
lcall
mov
inc
pop
jmp
inc
movsb
mov
enter
push
and
ss
sub
sti
xchg
xchg
xchg
lcall
call
pop
inc
mov
inc
lods
inc
dec
pop
xorb
sbb
xor
sbb
mov
insl
aad
xor
add
mov
and
mov
cld
push
push
aas
pop
inc
fbld
mov
adc
inc
and
js
sti
xchg
inc
jge
xor
testl
inc
mov
pop
and
mov
dec
pop
jnp
mov
icebp
imulb
fcmovnb
cmp
mov
mov
pop
insl
cmp
das
pop
mov
xchg
and
cltd
mov
jns
sbbl
xor
pop
or
mov
sarb
mov
shrb
or
mov
pusha
xlat
inc
inc
movsl
add
inc
outsb
shlb
pop
xchg
ficoms
fiaddl
sub
repnz
sahf
scas
push
or
idivl
sub
jne
pusha
fcompl
das
scas
iret
mov
xlat
loop
jecxz
jge
cld
rcl
add
cmp
leave
bound
push
cmpb
test
inc
xor
enter
and
test
and
scas
inc
mov
sbb
add
xchg
xchg
adc
mov
shll
push
inc
test
dec
and
fdivr
lods
movsl
mov
mov
lahf
pushf
outsl
or
push
aaa
and
adc
scas
lret
fdivr
push
popa
push
inc
dec
cmp
xor
add
inc
ja
cmp
xor
mov
adc
inc
or
ja
dec
aaa
popa
pop
sbb
cmp
mov
xor
inc
xchg
out
mov
adc
shll
fcmovu
movsl
outsb
jno
fildl
mov
cld
jecxz
bound
js
les
cmpsl
fcompl
pushf
test
sbbb
mov
add
xlat
cltd
jp
shlb
fsubrs
frstor
cli
mov
or
cmc
add
add
pop
inc
and
mov
js
popf
rcl
sti
xorb
jmp
divl
inc
push
js
mov
das
fisubrl
push
negl
pop
mov
test
jbe
rcrl
cwtl
shrb
push
fcoms
scas
mov
pop
movb
pop
sub
fdivrl
or
push
scas
mov
mov
lret
or
repz
xchg
mov
add
divb
mov
mov
test
orb
mov
fwait
mov
and
push
pusha
inc
mov
enter
jl
cwtl
pop
mov
push
pusha
and
sarl
inc
cld
bound
push
pushf
stc
sbb
sti
mov
adc
jne
cwtl
mov
pop
out
mov
and
sarl
es
mov
dec
add
lret
iret
mov
jl
cmp
ja
out
jnp
shlb
popa
xor
inc
scas
jecxz
add
push
mov
pop
push
movl
xchg
and
sbb
mov
mov
jmp
test
mov
add
cmp
mov
stos
xor
inc
jmp
inc
scas
es
addb
shlb
loop
ja
rcll
cmc
mov
stos
mov
test
pop
movsl
adcl
js
jmp
push
adc
or
pusha
push
ds
mov
sub
dec
xlat
sbb
addr16
jns
dec
mov
push
repnz
into
jbe
jno
js
xchg
shlb
lldt
aas
jl
aas
rcr
fnstsw
incl
mov
scas
pusha
dec
sbb
sahf
and
bound
adcl
loop
mov
cmp
loopne,pn
add
push
xchg
add
gs
movsl
mov
test
into
sbb
int
add
loop
add
cli
jmp
mov
mov
pop
jmp
test
mov
mov
inc
inc
dec
cmc
xchg
adc
sarl
outsl
mov
pcmpeqw
mov
in
pop
andb
pop
xchg
addr16
lods
call
dec
insl
add
mov
and
aas
push
inc
insb
ja
sbb
xchg
sti
mov
mov
inc
push
mov
add
add
xor
imul
jge
cmp
cmp
inc
xchg
jg
test
inc
out
fnstsw
jo
add
adc
or
jecxz
idiv
adc
outsb
push
orb
jns
mov
or
xchg
mov
in
stc
mov
inc
ss
sbb
or
repnz
roll
mov
fdivrl
mov
cmp
repz
hlt
bound
aaa
das
lds
pop
jne
mov
pop
das
in
sbb
int
pop
into
jns
inc
jle
or
roll
cmpb
jns
in
icebp
adc
or
mov
jnp
test
mov
bound
sbb
xorl
pop
imul
lcall
mov
repnz
hlt
mov
stc
sbb
mov
pop
out
lret
dec
mov
sbb
inc
mov
dec
jmp
imul
loope
bound
or
push
xchg
mov
rcrl
lcall
xchg
jnp
mov
add
inc
stos
adc
mov
inc
stc
xchg
out
xchg
outsb
pop
sbb
mov
shl
xchg
pushf
cmpsl
jno
fstps
push
sarb
in
adc
movsb
enter
sbb
scas
ret
test
cmp
cmpb
iret
add
cltd
adc
dec
xchg
cmp
stc
iret
fistps
aam
rcl
xor
jp
or
mov
mov
or
jno
mov
and
mov
fdivrs
add
inc
nop
inc
mov
inc
add
push
mov
aam
gs
mov
nop
mov
xchg
cmp
pop
or
or
adc
mov
cmp
add
ret
mov
cmp
arpl
arpl
xchg
andl
inc
scas
loopne
adc
or
sbb
jmp
sub
push
mov
xchg
sub
out
je
fnstsw
leave
and
mov
mov
push
mov
cmp
mov
js
jb
xchg
lods
jge
cmpsl
scas
sarl
adc
push
pop
push
call
mov
xchg
enter
mov
les
in
mov
fidivl
outsb
sbbl
sbb
enter
fnstenv
add
cmp
push
xchg
test
incb
cwtl
mov
pop
dec
jne
pop
js
xchg
pop
fstpt
cmp
cmp
sub
aad
scas
inc
shrb
or
mov
mov
adc
popf
cmpb
sub
sub
inc
bound
sbb
sbb
inc
add
jge
cwtl
add
xor
dec
in
test
xlat
lock
test
loop
ds
xchg
inc
fiadds
cltd
cmp
mov
mov
jge
xchg
flds
sub
inc
xchg
cmp
mov
mov
pop
mov
rcl
mov
es
ficompl
sub
mov
mov
mov
loop
cmp
mov
cmp
push
mov
cmp
clc
loop
jno
cmc
popf
inc
add
mov
aaa
pop
les
addr16
pop
repnz
aas
andb
andb
mov
sbb
sar
adc
cmp
add
insl
addl
movsl
fdivrs
mov
push
std
nop
ss
jp
cmp
mov
aam
sub
pop
mov
ljmp
mov
outsb
sahf
push
or
and
push
nop
out
ficompl
fsubrl
mov
pop
cli
fs
jmp
shll
sahf
and
lods
cmpsb
push
idivb
adc
xlat
mov
cmp
cmp
dec
std
mov
sti
inc
mov
lret
mov
setne
fildll
xlat
xor
mov
push
mov
int
movsl
addl
jmp
pop
jp
shr
jp
inc
xlat
imul
mov
jle
test
iret
cmpsl
ljmp
fisubl
pop
popf
pop
mov
adc
stos
test
dec
and
je
inc
jg
gs
pop
lret
insb
inc
dec
stos
es
sbb
sub
jae
pop
lret
pop
pop
cmp
lret
popf
test
daa
or
testb
jne
adc
or
out
in
add
sti
test
sub
ret
dec
aad
mov
xchg
lret
lret
sti
sbbl
notl
rcrl
pushf
cmp
cwtl
ret
ds
xchg
loope
test
mov
mov
add
pop
pusha
fcompl
pusha
mov
or
mov
cmpb
cli
movsb
add
jns
orl
cld
dec
dec
mov
mov
aad
mov
pop
aam
repz
out
movsl
mov
fwait
es
shl
outsb
add
cmc
push
loop
test
mov
ljmp
jge
shr
push
or
jbe
mov
dec
je
mov
add
sbb
fstp
jo
push
pop
cltd
add
lods
ret
movsl
add
cli
mov
mov
mov
pop
andl
cmp
inc
sbb
adc
cmp
out
test
mov
adc
sbb
sub
pop
test
mov
add
push
pop
aaa
test
sub
mov
push
cmp
cld
xchg
mov
ss
sbb
cmp
mov
adc
das
pop
test
mov
shrl
push
mov
mov
fimuls
cwtl
ss
xchg
cs
sub
xor
adc
mov
mov
testb
bound
hlt
test
mov
lret
test
mov
push
push
shlb
mov
cmpsl
or
mov
jle
pushf
lods
pushf
cmp
sbb
mov
mov
pop
inc
mov
inc
push
mov
xchg
insl
int3
push
jl
ss
sarb
jne
jo
data16
lods
jecxz
movsl
pop
xor
stc
dec
inc
mov
pop
mov
stos
rol
adc
push
cmp
mov
jo
adc
cli
les
js
rcrl
and
icebp
mov
xor
into
test
push
mov
pop
mov
pop
inc
clc
mov
xchg
les
ss
in
mov
mov
add
sbb
xor
int
pop
lds
out
lds
iret
cmp
test
addr16
jmp
pop
xor
dec
jl,pt
jae
fstpt
in
jno
xchg
stc
js
in
mov
shrl
idivb
xchg
hlt
sbbl
mov
sbb
mov
fildl
fwait
pop
cmp
add
mov
dec
lods
dec
ljmp
or
or
test
push
push
shll
out
test
pop
mov
push
movsl
data16
jb
shlb
pop
ss
shll
outsb
flds
lahf
iret
rclb
jp
inc
mov
pop
push
das
xchg
ds
mov
sarb
mov
mov
outsb
mulb
dec
mov
mov
xlat
movsl
imul
pusha
cmp
stos
insb
loope
ret
js
mov
out
andl
adc
inc
mov
addb
jle
das
sbb
loope
cmpsb
fcompl
pop
sbb
and
pop
scas
or
test
dec
mov
in
fcmove
push
cmp
mov
sbbb
sahf
fstl
mov
jl
movsbl
sbb
mov
scas
scas
loope
xchg
imul
cmp
loope
mov
jns
inc
add
xchg
mov
pushl
push
test
pop
mov
inc
cmp
mov
push
pusha
scas
loope
leave
sbb
xchg
jnp
pop
add
shll
jmp
lcall
popf
popa
mov
sbb
sbb
in
cmp
mov
fldl
in
lahf
lea
aad
add
shll
fst
pop
movl
and
cmp
ja
cmpsb
adc
add
push
adc
push
popa
push
lret
rcr
push
push
mov
cmp
fistpl
ss
adc
push
ret
mov
sub
sbb
inc
inc
fldl
adc
dec
negb
lods
mov
orl
lock
movsb
mov
loope
xor
jmp
mov
mov
xor
aaa
addr16
call
cmp
scas
mov
add
mov
jnp
jno
and
cmpsl
mov
inc
mov
cmp
and
adc
sbb
mov
and
bound
ljmp
pop
into
mov
rclb
jb
or
pop
orl
bound
add
jns
negl
sbb
inc
mov
jmp
inc
fnstsw
insb
push
ja
cwtl
lods
pop
cmp
mov
sub
sub
bound
pop
and
movsb
aaa
jecxz
sbb
xchg
popa
mov
sbb
mov
test
sub
cs
adc
and
sbb
inc
es
ret
mov
test
adc
cmp
imul
and
divl
sbb
jne
push
sarb
loope
int3
pushf
leave
mov
sub
mov
xlat
fdivl
adc
mov
dec
and
cmp
and
adc
push
in
jnp
repnz
jl
add
push
adc
jbe
inc
movsl
fistpl
pop
sahf
jecxz
pusha
mov
das
out
std
fildl
sbbb
cmp
inc
xchg
lods
nop
enter
lahf
add
adc
popa
dec
pusha
mov
and
imul
or
sahf
xchg
pop
je
mov
mov
xchg
rcll
jg
push
icebp
pop
sbb
les
inc
ja
mov
inc
dec
cmpsb
mov
mov
xor
xchg
mov
frstor
push
sarb
xor
adc
mov
mov
mov
nop
andb
cmp
jnp
dec
and
xchg
mov
stos
pop
dec
jle
dec
mov
inc
les
push
adc
jmp
in
call
andb
sti
js
das
addr16
jb
cs
pop
nop
mov
mov
mov
sbb
adcl
fstsw
lcall
jo
xor
mov
dec
and
push
mov
pusha
sub
loopne
es
xchg
ja
and
jb
sub
cmp
popf
adc
loope
jno
mov
and
sbb
mov
lahf
add
lds
push
enter
push
test
out
jbe
stos
jb,pn
jle
test
dec
mov
cli
inc
pop
fbstp
push
push
and
mov
sahf
or
mov
pushf
mov
popa
jl
movsb
rcrl
arpl
mov
mov
outsl
pop
jl
jnp
nop
or
push
lods
jp
dec
bound
iret
or
adc
lret
dec
lret
clc
icebp
adc
movsl
ljmp
scas
push
call
xor
push
sub
add
xor
xorl
mov
cmp
loope
imul
mov
xlat
mov
insb
mov
rcrb
mov
or
leave
subb
sarl
imul
mov
jl
mov
mov
ds
pusha
push
test
loopne
lds
pop
dec
push
lcall
push
inc
cltd
fmuls
lcall
jg
mov
insb
jnp
mov
mov
out
add
int
mov
popa
dec
call
jo
xchg
mov
scas
jnp
add
and
imul
daa
sub
jo
mov
rol
xchg
ret
inc
scas
cmp
daa
jb
add
sub
inc
idivb
popa
dec
mov
sub
rcr
in
scas
jle
push
xchg
insb
xchg
sbb
sti
jg
add
daa
dec
sbb
pop
aaa
mov
fsubrs
xlat
adc
pop
out
cmc
cmp
lds
daa
sub
pushf
outsl
xchg
push
xlat
hlt
xor
insb
or
mov
ret
adc
push
sub
push
shr
mov
jbe
sub
and
jnp
int3
lea
inc
movsl
fnsave
jp
xor
sbb
mov
push
pushf
dec
cmp
mov
mov
cmpsl
xchg
and
icebp
and
mov
stos
or
sti
fisubs
mov
cmp
lock
outsl
adc
push
nop
sahf
mov
andb
cwtl
cmpsb
and
cmp
pop
bound
mov
adc
xlat
inc
inc
cmp
bound
lcall
por
xchg
test
sub
hlt
dec
lods
imull
cwtl
ja
fs
pop
push
add
cmp
jbe
addb
rcll
popf
cmp
pop
sub
mov
adcb
orb
loope
test
out
and
cmp
fs
xor
test
leave
cmpb
mov
test
sbbl
lods
les
push
xchg
pop
dec
pop
adc
cmp
adc
adc
jle
add
popa
mov
mov
cs
stc
sbbb
mov
push
ret
ror
adc
insb
adc
in
xchg
pushf
cmpl
and
testb
orb
pushf
inc
pop
and
mov
xchg
cmp
fadd
cmpsl
stos
fs
and
int3
cmp
movsl
xor
movsl
fucomp
xlat
xor
push
sub
stos
or
dec
cmpb
rcll
or
out
dec
mov
sarl
mov
mov
clc
daa
stc
cmpb
mov
xchg
xchg
cmp
cmpl
clc
fadds
xchg
mov
inc
fistl
xchg
shll
sahf
sub
or
mov
filds
sub
dec
pop
push
push
mov
pop
imul
adc
arpl
js
ficompl
push
jo
cmp
push
pop
mov
scas
das
adcb
jmp
fnstsw
push
out
xchg
cmpsb
mov
push
ds
into
dec
mov
movsb
mov
icebp
mov
jnp
jae
mov
cmpl
adc
lret
add
cmp
inc
sub
lods
dec
pop
pop
imul
jecxz
xor
xlat
add
ljmp
cmp
lea
adc
push
inc
cld
and
xchg
lret
sti
mov
outsl
jno
call
lahf
pusha
daa
dec
popa
mov
cmp
fs
sub
jbe
movsl
inc
out
adc
ret
stos
cmp
xor
ss
mov
sbb
add
mov
xchg
sub
ds
jle
imull
xor
popf
mov
and
mov
das
mov
sbb
pop
mov
sahf
andl
clc
pop
jmp
push
sbb
movsl
add
or
clc
xor
aam
mov
decb
out
mov
ret
pusha
nop
scas
cs
mov
out
insb
out
das
xchg
ret
bound
stc
mov
js
adc
add
mov
daa
adc
mov
add
lahf
pop
sbb
fisubrl
and
mov
addr16
sub
adc
lcall
std
jmp
adcl
inc
push
fcmovb
lods
lods
scas
lods
enter
lcallw
jbe
sbb
sbb
xor
mov
adc
adc
ja
ljmp
gs
pusha
test
mov
xor
mov
pop
mov
xchg
xchg
int
aaa
lods
dec
pop
dec
xor
lahf
mov
push
daa
or
add
add
push
std
cmp
jp
popf
and
inc
pop
mov
mov
mov
mov
sbb
xorb
mov
out
pushf
cltd
negb
leave
jnp
mov
lcall
jno
push
fstpt
mov
mov
adc
mov
mov
mov
pushf
pop
or
pop
jne
pop
mov
insb
aas
mov
aaa
out
ja
and
mov
les
jl
xchg
jne
popa
mov
sbb
sbb
fs
cwtl
and
outsb
fdivs
or
notb
xor
and
cmp
js
fiaddl
roll
jb
clc
xor
xor
insl
mov
add
pop
popa
das
push
out
xor
sbb
cmp
ret
movsb
test
test
bound
dec
xchg
jge
aam
pop
inc
sbb
sub
jo
inc
or
scas
stos
sahf
xor
cmp
and
pushf
sub
inc
mov
sbb
adc
inc
cmp
push
mov
cli
sbb
out
mov
jnp
sarl
std
popa
xor
mov
ror
xor
aas
xchg
notb
jns
lock
pop
pop
adcl
nop
lds
mov
mov
subl
imul
repz
mov
loope
adc
cli
mov
sbb
adc
adc
push
fcompl
test
push
stc
fwait
sahf
jmp
pop
pop
mov
sbbl
out
and
sub
jbe
add
dec
xor
test
adcb
sbb
jecxz
insl
xor
sahf
int
dec
ss
push
fsubs
adcb
xor
xor
sbb
cmp
mov
dec
sbbb
push
sub
xor
sbb
rcrb
add
adc
jns
mov
lahf
orb
mov
mov
inc
jmp
mov
in
leave
mov
xchg
scas
xchg
jge
stos
jmp
lea
outsb
inc
sbb
jo
pop
xchg
push
push
je
loop
sti
js
add
push
fcmovnu
in
cmpsb
pop
xor
and
fisttps
mov
leave
faddl
jae
lods
lcall
ss
jecxz
mov
pop
pusha
push
or
push
out
xor
test
push
or
insb
test
int3
adcl
ljmp
ja
shr
lds
mov
fdivrs
je
leave
lret
js
fidivrl
mov
into
and
mov
fisttps
inc
fidivl
not
fsubs
lret
loope
subb
insl
pop
sbb
add
mov
inc
xchg
mov
cmpb
loopw
pop
pop
movsl
orl
dec
pop
pop
cmc
mov
test
xor
cmp
jb
sub
imul
dec
sub
push
leave
cwtl
fs
repz
xchg
xchg
loope
shlb
sti
cmp
jo
or
and
std
movsl
das
jle
mov
mov
dec
mov
cmp
mov
cmp
or
jge
sahf
shll
or
lahf
adc
push
aas
daa
data16
popl
xchg
jg
cmpsl
xchg
xor
fisubrs
sahf
push
cmp
test
rcl
pop
imul
inc
andb
lret
sti
jns
cwtl
imul
xchg
data16
ret
sub
or
ret
stos
mov
cmpsl
jno
pop
imul
sbb
bound
xchg
fwait
and
rolb
mov
pop
mov
ds
inc
lret
sub
jo
xchg
pop
pushf
adc
ss
xor
mov
inc
xor
popl
scas
int3
orb
and
jns
outsl
adc
addr16
inc
popf
xchg
adc
ljmp
cmc
or
inc
ja
ret
stc
inc
lea
lahf
hlt
mov
pop
add
dec
inc
sbb
scas
push
push
inc
mov
js
test
popf
sub
cs
mov
jne
inc
push
scas
rcr
jae
ret
inc
bound
xor
adc
mov
pop
xchg
jne
mov
mov
xchg
lods
pop
mov
dec
jecxz
movsbl
pop
int3
lahf
mov
mov
outsl
fs
inc
aaa
sbb
jp
cli
xor
dec
lcall
inc
mov
mov
call
outsb
pop
push
add
or
popf
and
pop
sbb
and
shrb
and
shll
repz
out
clc
ds
pushf
mov
jmp
mov
mov
rclb
push
inc
mov
mov
sub
xor
popf
sub
ss
loop
push
testl
push
adc
movsl
add
nop
cmp
dec
out
pop
mov
cli
fisubl
pop
clc
mov
adc
fcomps
std
int
xorb
sahf
xlat
push
push
mov
sbbb
shlb
and
xor
mov
mov
adc
test
shlb
cli
cmpsb
cli
push
inc
adc
jmp
shl
mov
andl
out
dec
imul
into
xor
movsl
ficompl
pusha
ja
mov
or
addl
addl
scas
jp
es
ret
cltd
sbb
popa
jno
clc
cs
gs
dec
mov
push
mov
out
jae
js
movsl
hlt
sbb
loopne
jp
jp
xor
sbb
jecxz
insl
pop
sub
jp
xor
jmp
xchg
push
inc
mov
stc
inc
shlb
cmpsl
mov
mov
fxch
inc
fistpl
mov
movsl
popf
pop
and
arpl
sbb
dec
out
xor
bound
mulb
sbb
shlb
data16
stos
stos
mov
sbb
test
add
pop
addb
push
loopne
cwtl
fldt
xor
adc
xor
loopne
sbb
mov
cwtl
out
stc
mov
push
xlat
mov
jp
sbb
mov
test
pop
movsl
push
mov
fs
xchg
mov
jmp
xchg
out
test
sahf
push
jns
movsl
push
adc
mov
rorl
pop
cmp
addr16
add
add
xor
cmp
add
cmp
rcll
cmpsl
loop
dec
ss
push
pop
loopne
aam
mov
das
inc
mov
mov
mov
jne
out
aas
mov
aas
fbld
insl
test
adc
jg
cmp
and
cmp
lahf
pusha
mov
loop
dec
inc
sub
or
pusha
jns
and
loope
pop
cwtl
cmp
mov
ret
test
dec
inc
out
xor
add
in
js
dec
push
pop
cmpsb
mulb
push
fucomip
mov
icebp
xchg
sub
cmp
sti
pop
mov
ss
incb
adc
lock
dec
push
sub
xor
fdivl
sub
xchg
cmp
leave
ja
push
xchg
jno
dec
outsb
aad
ret
jno
loopne
lcall
sahf
movsl
mov
loope
adc
xchg
ret
sahf
inc
mov
push
stc
insb
pop
orl
add
cmp
scas
add
outsl
lea
mov
sub
out
mov
cs
mov
pop
mov
jmp
xchg
popf
mov
xor
std
sbb
dec
stos
sbb
sbb
push
or
add
loop
test
push
js
jp
cmp
sub
fdiv
inc
cmc
mov
pop
push
enter
adc
pop
pop
movsb
divl
pop
mov
pop
sub
push
ret
test
mov
mov
mov
fisubl
push
scas
lcall
sub
outsb
jg
hlt
fs
xchg
xchg
pop
test
add
mov
cmp
test
add
fcoms
test
pop
jno
stos
lods
lods
inc
xor
and
roll
xchg
push
subb
loop
inc
and
lods
negl
sarl
sub
cmp
xor
add
sbb
cli
or
or
mov
jbe
xor
inc
push
or
mov
das
and
jbe
jmp
cmp
imul
popa
cltd
inc
call
mov
mov
mov
xchg
arpl
fldt
movsl
sti
cwtl
aaa
fisubl
mov
pop
sti
cmpsb
cmp
inc
xor
sub
mov
mov
dec
xchg
mov
sbb
and
andl
mov
mov
loopne
add
cmp
xor
xor
sbb
daa
and
cwtl
test
ret
push
adc
pop
int3
xor
pop
ljmp
inc
roll
aaa
mov
mov
daa
outsl
cmp
and
xorl
lea
test
in
xor
ds
cmp
loopne
inc
inc
fwait
add
mov
dec
cmp
inc
aas
mov
cmp
ss
nop
xorb
orb
jb
mov
lret
cld
movsl
movsb
xor
mov
push
add
xor
cmpsl
jg
sti
cwtl
sbb
test
sbb
mov
pop
or
inc
popl
je
cmpsl
mov
dec
or
add
xchg
nop
add
popf
rcrb
scas
scas
out
cmp
sete
loopne
test
repnz
call
loope
push
mov
aaa
pop
mov
ss
dec
fs
adc
push
fs
mov
jmp
adc
adc
lea
cmp
pop
frstor
shrb
mov
rolb
bound
xor
outsl
mov
lods
cmp
pop
sub
rcrb
ljmp
jecxz
mov
push
inc
decb
pop
imull
mov
jl
cltd
out
dec
cmpsl
mov
sbb
and
pop
cmp
repnz
rcrb
lods
mov
push
adc
inc
mov
std
push
movsb
cmp
jg
and
sbbl
push
stc
test
cmpsl
fwait
imul
push
xor
ret
pop
cmc
cmp
shr
mov
call
cmc
sub
mov
jne
sub
pop
xchg
pushw
cmpsb
pop
loop
and
pop
mov
add
mov
and
stos
das
dec
add
inc
and
les
bound
push
dec
push
mov
in
je
mov
mov
push
flds
sub
xor
cli
scas
add
mov
sub
iret
movsl
jp
or
adc
xor
pop
ret
dec
push
pop
inc
adcl
mov
jne
ss
je
sbb
pop
push
ret
pop
add
stos
push
cmpsl
fldt
adc
push
lock
rcrb
imul
xor
mov
rol
mov
push
jg
aaa
cmpsb
xchg
and
sahf
xor
jnp,pn
cvtpi2ps
out
cltd
mov
icebp
sub
pop
cmc
cltd
adc
popa
imull
lods
xchg
bts
movsl
popf
aas
jb
icebp
sbb
mov
or
mov
mov
adc
xchg
pop
sub
adc
insl
lds
mov
inc
outsb
sti
mov
mov
cmc
fsubs
mov
outsb
pop
stos
xchg
jb
cmp
cmp
push
mov
inc
xchg
mov
cwtl
out
mov
push
outsb
cmp
mov
xor
pop
cmp
and
add
std
cmp
cmp
jl
sbb
paddusb
xor
push
cmp
pop
mov
ficomps
or
data16
lret
xchg
add
pop
mov
and
out
or
xchg
sarl
sbb
mov
js
cmp
cltd
xchg
in
je
fwait
movsb
ret
js
in
and
cmpb
dec
addr16
sbb
pushf
or
sbb
outsl
fs
movsl
jg
addr16
movsb
in
movsl
push
add
icebp
sub
cmp
xchg
jnp
movsl
bound
mov
mov
xor
mov
jp
add
out
add
ret
mov
insb
cmp
push
mov
inc
sbb
movsl
inc
into
ss
mov
test
jp
mov
pop
add
push
leave
adc
xchg
clc
mov
lret
mov
sahf
lods
push
xor
lret
sbb
jl
test
pop
mov
ja
or
and
mov
mov
cmp
push
pusha
push
fcoml
in
cmpsl
out
xchg
mov
jae
mov
sbb
shrb
ss
mov
repz
outsl
mov
dec
mov
xchg
sub
les
out
push
inc
dec
clc
inc
cmpb
pop
test
push
sbb
daa
in
shlb
orb
fcoml
jmp
jecxz
lahf
loopne
mov
mov
loope
inc
mov
jo
jp
pop
push
push
pop
cmp
mov
add
push
mov
adc
clc
mov
dec
fnsave
mov
push
mov
leave
add
dec
or
cmp
lods
std
adc
mov
loope
fst
je
shlb
xorl
mov
icebp
ds
jb
or
repz
xchg
stc
je
jno
jp
pusha
arpl
mov
aam
mov
nop
inc
cmp
mov
dec
addr16
cmp
jg
cmp
ss
test
dec
es
sti
ljmp
jns
push
push
xchg
or
mov
sub
pusha
and
cli
aam
xlat
jno
insl
cmp
daa
mov
jb
add
cld
push
imull
inc
push
mov
inc
pop
clc
or
mov
inc
xchg
mov
mov
rcll
fistpll
bound
ljmp
sahf
out
adcl
mov
xor
jl
fdivs
mov
movsl
pop
out
fdivr
leave
sbb
mov
or
add
jl
mov
xor
lcall
cmpsl
mov
sub
pop
push
fadds
or
mov
ds
sahf
mov
nop
jns
or
sub
fs
decb
ds
inc
sbb
adcb
pop
stos
jo
flds
cmc
dec
shl
xchg
xchg
add
mov
adc
jae
imul
jae
out
mov
adc
adc
or
fldt
xchg
pop
mov
std
mov
dec
std
mov
cmpl
xor
imul
movsl
sbb
andb
xor
stc
cmp
xchg
and
pop
dec
rcrb
ss
mov
ss
mov
std
popa
sbb
sbb
mov
js
mov
filds
lea
adc
inc
mov
jmp
push
inc
cwtl
sbb
cmp
cmp
or
sub
mov
cmp
mov
fsubrl
loop
je
add
es
sub
pop
xor
outsb
lods
popf
pushf
aaa
int
jl
adc
addb
lcall
dec
jno
cmp
fadds
lods
push
pushf
jbe
xchg
roll
rcl
fiaddl
outsb
lods
lcall
cmp
xchg
xchg
sarl
push
fiadds
xchg
mov
aaa
dec
fsubrs
ret
aam
neg
bound
cmc
mov
inc
movsb
mov
inc
push
imul
mov
inc
andps
shrb
orl
je
mov
int3
add
dec
and
mov
mov
dec
testb
lods
mov
aas
repz
mov
mov
mov
lock
sbb
clc
mov
pusha
xor
pop
mov
lock
sub
imul
icebp
mov
push
sbb
shl
lahf
insb
xchg
jb
xchg
out
out
and
adc
test
jg
xchg
mov
xchg
jbe
dec
out
mov
push
and
xchg
aas
mov
mov
call
mov
push
cwtl
popf
fidivrs
xchg
scas
pop
cmp
pop
cmp
loopne
dec
pop
sbb
mov
gs
pop
adc
push
mov
cmpsl
pop
sbb
jae
shr
cmp
js
leave
mov
sub
xchg
scas
and
or
inc
test
sti
aaa
mov
andl
int3
stos
xor
je
sarb
mov
pop
xor
insl
mov
js
loope
fdivrl
mov
aad
out
inc
pushl
jmp
ds
addb
mov
bound
std
flds
test
outsl
mov
mov
ficompl
inc
xchg
popa
pop
stos
jns
fs
ljmp
pushf
and
or
test
and
and
aaa
andl
or
mov
mov
pop
lea
movsl
stos
divb
insb
les
and
addr16
stos
and
stos
movsl
nop
enter
repz
jnp
cmp
ds
xor
cmpb
inc
movsl
push
mov
add
lds
popf
and
nop
mov
scas
repnz
neg
push
dec
adcb
sbb
nop
leave
mov
mov
icebp
add
fsts
inc
mov
aaa
test
cmp
push
sahf
andb
mov
mov
shrb
rorb
jp
jo
jg
cmpsl
mov
bound
mov
mov
ficomps
mov
stos
cmp
mov
int
test
jbe
pop
jp
daa
push
fdivrs
adc
outsl
and
ja
jb
lea
inc
mov
adc
sahf
xchg
cmp
push
lock
cmp
xor
adc
mov
mov
pop
cmpsb
stos
imul
pop
mov
inc
jnp
test
sub
sahf
and
push
pushf
pop
or
scas
cmp
fstpt
mov
lea
adc
mov
mov
bound
into
mov
cmp
shll
js
or
mov
pushf
pushf
push
mov
sub
jae
pop
fisttpl
cld
leave
sub
js
xor
inc
je
and
lock
mov
adc
cmp
jne
andb
add
mov
in
jno
ss
cs
lret
sub
fcmovnu
out
sahf
fimull
mov
xchg
frstor
push
push
lahf
fs
mov
xchg
cmp
pop
push
mov
pop
fdivl
sbb
inc
cmc
inc
out
rorl
std
cmp
push
cld
clc
xor
stos
aaa
and
mov
pop
lcall
fsubr
xchg
xor
nop
flds
inc
scas
data16
sub
icebp
sarb
mov
ret
pop
test
leave
mov
mov
scas
push
cs
scas
sub
jno
xor
data16
ficomps
iret
or
mov
jno
push
hlt
out
xor
lcall
adc
ds
repz
gs
adc
dec
xor
outsl
test
xchg
inc
cwtl
mov
inc
xor
mov
mov
sbb
pop
jl
xor
xchg
fnstcw
fcoms
add
cmp
add
insb
cmp
js
das
xchg
mov
inc
cmp
cmp
mov
sub
idivl
mov
and
fiaddl
in
push
out
push
xor
repnz
push
cld
and
pop
inc
inc
addb
push
pop
pop
test
movl
lea
pusha
push
insl
aad
mov
xchg
lods
dec
es
arpl
lret
add
dec
mov
lock
mov
movsl
cmc
xchg
mov
shll
aam
or
sti
adc
add
mov
sub
jo
mov
stos
pop
xor
mov
scas
fdivrp
and
inc
mov
mov
jg
sbb
xchg
dec
arpl
mov
mov
pop
sti
popa
or
mov
mov
addl
das
seta
cld
inc
and
mov
popa
xor
mov
cltd
jns,pt
ret
loopne
call
and
xchg
mov
mov
ror
push
adc
shll
mov
and
cmp
xor
gs
dec
sbb
jl
pop
push
aas
arpl
inc
push
daa
icebp
xchg
movsl
test
cmpsl
bound
je
pop
push
xchg
pop
popa
adc
jmp
rcrb
sbb
sti
popa
lock
rcr
inc
cmp
inc
jle
sar
and
pop
cltd
mov
js
dec
test
xor
mov
aad
mov
lds
jo
xor
lock
sbb
fcmovb
stos
jle
jns
cmp
mov
pusha
sbb
into
fistps
xor
pop
xchg
mov
mov
cmpsl
popa
mov
add
mov
in
xor
lret
xchg
cli
adc
push
xchg
dec
mov
dec
shld
cmpsb
out
xchg
inc
bound
rcrb
push
pop
pop
and
in
cmp
cmpsb
jl
inc
jne
cmpsb
shll
jp
pop
mov
xor
xchg
and
push
sub
push
pop
subb
xchg
mov
push
lahf
jb
or
je
jp
pushf
push
cmpsl
sbb
sub
test
xchg
pop
xorl
into
xchg
jnp
loopne
add
mov
sbb
mov
jo
pop
mov
insl
fucomip
movsb
stc
inc
mov
lret
pop
push
dec
test
ss
xchg
mov
mov
rcrl
adc
xchg
inc
fs
mov
adc
outsl
inc
cmp
push
dec
loop
cwtl
mov
imul
inc
divb
dec
jmp
mov
imul
inc
movsl
bound
mov
adc
adc
mov
shrb
xor
xor
scas
dec
sbb
xchg
es
sete
and
mov
fimuls
out
adc
pop
into
push
push
inc
sub
xor
xchg
inc
cwtl
lcall
shrl
addr16
adcb
inc
cmpb
sbb
iret
pop
mov
and
lcall
mov
adc
jle
lea
mov
mov
fisubl
xor
ds
push
cltd
testl
dec
xchg
pop
out
adc
adc
sbb
mov
mov
adc
jp
ret
ds
movsl
fadds
adc
mov
in
inc
rcll
dec
push
cmp
sbb
mov
and
fwait
jecxz
daa
xorb
push
jg
lods
test
cmp
pushf
sub
cli
cld
sbb
insl
out
sbb
pop
in
or
and
sbb
hlt
xchg
fmul
mov
mov
mov
cli
addr16
ds
or
hlt
mov
cmp
push
pop
cwtl
cmp
sbb
sarl
sbbb
into
inc
in
mov
xchg
sbb
fadds
jb
adc
push
jle
mov
lret
push
jmp
fistpll
fistpl
cld
sbb
jl
ljmp
mov
mov
out
cwtl
cltd
sar
lea
dec
daa
test
int
mov
and
cmc
stc
fisubrl
mov
cmp
jne
movsl
sbb
jbe
out
ds
lret
les
pop
cmpl
repz
cmp
notb
mov
adc
xchg
cltd
inc
inc
aas
fsubs
xchg
inc
test
cs
sbb
aas
in
dec
adcl
out
int3
out
mov
cmp
xor
loopne
mov
mov
scas
inc
add
mov
popf
jmp
jmp
scas
lods
fsubrl
clc
inc
ds
add
aas
mov
adc
mov
cmp
jbe
push
cmp
and
cmpsl
or
repz
mov
daa
jb
sub
nop
cmp
xchg
fmuls
xor
gs
xor
push
mov
pop
jne
popa
add
pop
add
mov
push
dec
cli
mov
pop
rorl
lret
jb
sbb
out
mov
sbb
mov
mov
xchg
lret
push
gs
and
shlb
jecxz
cmpsl
andl
push
jmp
push
xchg
push
adc
insl
mov
idiv
cmp
inc
test
movsl
insb
loopne
or
sub
mov
ret
xlat
mov
clc
adc
imulb
mov
pop
les
es
adcb
fistl
idivl
sub
jo
jl
out
push
lret
sbb
loop
jp
sahf
cmpsl
sbb
pusha
xchg
adc
fst
jo
cmp
push
daa
push
nop
fidivl
dec
xor
jnp
pop
pop
test
or
int3
dec
push
cs
push
loop
xchg
mov
movsb
sti
mov
jo
dec
fidivs
pusha
mov
popf
mov
ret
mov
pushf
jp
push
or
je
fstpt
mov
repnz
test
insb
xchg
inc
fisubl
mov
insl
dec
xchg
rolb
ret
mov
mov
inc
and
inc
mov
movsb
dec
or
movsl
xchg
lea
not
sbb
pop
inc
testl
and
insb
movsl
test
cs
out
inc
int
pop
stos
cs
movsl
inc
inc
inc
hlt
sbb
insb
in
nop
mov
sub
es
and
leave
jnp
lea
fisubrs
jmp
nop
sbb
das
cli
inc
sti
movsl
adc
outsb
xchg
jbe
mov
inc
mov
push
inc
jno
mov
popf
add
sbb
aam
add
icebp
scas
adc
shll
dec
xor
inc
scas
push
dec
jl
fcmovnu
ljmp
lock
sub
sbb
inc
or
xor
inc
push
cltd
popa
inc
pop
out
jb
and
or
nop
or
mov
cld
test
inc
or
pushf
js
mov
add
mov
sub
jmp
rcrb
mov
mov
ds
addl
test
mov
mov
fidivrl
mov
pop
lahf
sarb
jns
es
mov
out
push
pusha
pop
dec
cmp
rolb
bound
add
addr16
jns
loop
cmp
repz
sti
inc
int3
jle
mov
jbe
mov
subb
and
sub
movsb
adc
ror
cli
leave
dec
jnp
rcl
daa
addl
inc
cmp
mov
sarl
pop
or
cmpsl
lret
popf
mov
mov
cwtl
fisubl
gs
addr16
xlat
mov
mov
stos
rcrb
incl
push
pushf
cmp
sti
rcl
call
inc
loope
and
cmp
dec
jle
mov
fsubp
mov
jnp
sbb
jecxz
sti
inc
in
movsl
test
daa
rcrb
jo
and
lcall
cltd
adc
inc
or
rclb
jnp
sets
jbe
aam
lret
jbe
jl
aad
jl
add
shlb
jp
jbe
cld
or
jl
xor
dec
dec
sbb
push
add
mov
fistpl
shll
mov
inc
in
jecxz
lret
stos
arpl
cld
jl
cmc
arpl
xchg
sar
mov
mov
mov
pop
mov
sbbl
scas
fwait
add
xor
mov
sbb
scas
and
out
clc
inc
imul
mov
out
inc
inc
mov
stc
sahf
movsl
xor
les
shlb
cmc
dec
mov
dec
sbb
xchg
xorb
packsswb
movsb
cmpsb
ljmp
add
repnz
add
lret
jp
js
pop
into
and
movsl
clc
sbbl
dec
lret
into
jno
aaa
sbbb
inc
stc
fstpl
xchg
bound
add
mov
stos
fldenv
or
in
push
inc
cltd
sbb
cmp
jp
jne
js
xchg
jns
popf
pop
loopne
sbb
xchg
inc
dec
fstp
mov
cli
push
arpl
and
scas
or
pmaxsw
push
cwtl
mov
arpl
mov
xor
insb
sti
push
aas
cmc
lret
stos
mov
pop
or
test
inc
push
mov
mov
pop
sub
loope
and
mov
movsl
adc
popa
push
push
inc
cwtl
add
inc
stc
jb
pusha
mov
rolb
push
xchg
push
pop
xor
fdivp
xor
sarb
add
or
mov
mov
cmpsb
mov
jg
cltd
mov
stos
fistpll
mov
mov
mov
mov
sub
mov
outsb
adc
ds
xor
pop
jg
pop
cli
pop
pushl
repnz
mov
cwtl
repnz
jnp
cmp
lods
ljmp
enter
call
popf
js
inc
nop
inc
mov
cmp
xlat
rclb
mov
mov
movsb
and
pusha
inc
fmuls
push
sbb
push
jnp
and
fcoms
inc
dec
mov
jl
flds
xchg
push
dec
push
sbb
sti
xlat
and
fsubs
cmpb
xlat
leave
std
rcll
mov
cli
leave
jne
jne
cmp
aaa
insl
fld
jns
mov
mov
pop
fidivrs
mov
jns
xchg
dec
inc
sarl
or
adc
sub
roll
push
out
push
mov
jno
fst
sbb
add
dec
mov
in
ficompl
enter
push
push
out
pusha
xor
pushf
xchg
movsl
jecxz
repz
incl
into
movsb
gs
push
ret
jo
cmp
lret
jne
add
cld
adc
fistps
cmpsl
sti
mov
repnz
mov
cmp
jecxz
pop
dec
popa
sbb
fdivrs
popf
out
jb
adc
je
pop
jl
addb
sbb
test
fsubl
pop
pop
adcb
and
inc
in
sar
pop
dec
push
mov
mov
outsl
nop
cmp
sti
lods
lock
push
rolb
jae
inc
clc
fisttpll
ret
leave
push
jbe
push
repnz
pop
rcrl
mov
std
push
mov
jne
jb
inc
pusha
inc
rcrl
movsl
push
pushf
pop
fcmove
or
icebp
fistpl
xchg
subl
mov
sbb
aas
jecxz,pt
test
pop
push
outsb
push
cmpsb
movsl
repnz
add
outsl
insb
bound
mov
push
loop
adc
mov
bound
aad
orl
das
and
lcall
and
dec
fimull
mov
test
dec
jl
sbb
cmp
mov
mov
pop
lret
add
xor
xchg
mov
icebp
inc
add
jne
jne
adc
mov
inc
ret
pop
bound
inc
sbb
inc
adc
sub
mov
sahf
pop
and
add
loopne
jo
add
shlb
xor
hlt
mov
inc
nop
outsb
sbb
sti
stos
sub
lods
cli
ficomps
and
mov
inc
mov
andb
inc
loopne
loop
add
fucomp
adc
pop
and
push
inc
scas
test
mov
jb
mov
xchg
push
sbb
test
lods
mov
jp
lods
loopne
stos
xor
fadd
pop
outsl
test
mov
shrl
jecxz
inc
xchg
sahf
popa
xor
and
mov
pop
in
lcall
pop
fisubl
dec
jbe
pop
and
movsl
clc
inc
popa
shrl
int3
shl
mov
gs
loopne
pusha
es
adc
adc
inc
adc
mov
sbb
add
xchg
addb
sbb
push
sarb
dec
scas
data16
and
iret
dec
mov
push
inc
loopne
dec
int3
stos
bound
shlb
xchg
cltd
sbb
sbb
ss
mov
mov
push
fnstsw
cmp
inc
idivl
bound
es
adc
xor
adc
clc
cltd
sub
mov
filds
jns
xchg
or
xor
adcl
push
rcr
add
pusha
adc
addl
jae
cmp
ret
roll
sub
rcll
jne
cwtl
enter
ljmp
jns
sahf
xchg
adc
fsubl
mov
push
xchg
les
jp,pt
jnp
cld
mov
mov
outsb
mov
jp
test
loopne
xchg
shrl
pop
lret
popa
jns
nop
cwtl
adcl
out
or
shl
mov
jle
dec
lcall
daa
movsl
test
sub
test
nop
sahf
xchg
sarb
and
jns
mov
mov
xchg
dec
adcl
in
cmpsb
imul
jns
popf
inc
push
mov
mov
cmpsl
lock
scas
add
push
pop
fsubrs
sub
mov
pop
cwtl
fs
mov
push
sti
push
cmpl
sarl
je
aad
stos
adc
jno
pop
sub
roll
data16
flds
jp
sub
pop
popa
inc
xchg
pop
and
outsb
lock
sti
jmp
insl
pop
ret
xor
imul
jb
pop
mov
sub
mov
push
es
outsl
clc
jnp
or
repz
mov
insl
repz
adc
lret
sub
mov
cmpsl
ret
add
mov
pop
mov
mov
pop
fs
lea
jns
xor
inc
iret
jp
subl
inc
stc
shlb
bound
push
sarb
sub
xchg
mov
rcll
mov
fnstsw
out
cmp
mov
loopne
and
mov
pop
jne
jns
ret
cmp
and
loop
sub
stos
xor
jge
xchg
and
mov
dec
cmp
and
roll
dec
jp
aaa
mov
das
xchg
add
test
nop
jp
adc
add
mov
jecxz
leave
xor
xchg
sbb
lea
inc
mov
sub
adc
sub
mov
and
xchg
mov
les
mov
lock
xchg
cltd
fisubs
push
mov
mov
mov
lahf
pusha
stos
xor
cmp
push
jmp
es
xor
scas
inc
loope
lods
mov
stos
mov
push
xor
push
rcrb
jl
cmp
mov
adcl
sti
pop
dec
jp
push
movsl
inc
repz
mov
xchg
inc
or
mov
mov
lods
adc
inc
mov
imull
jb
mov
xchg
ret
mov
mov
lret
icebp
es
or
adc
inc
fdivrs
xchg
jns
lahf
lods
jnp
adc
push
mov
jmp
adc
cwtl
pop
addr16
aaa
shlb
inc
xchg
dec
cmc
push
jl
shl
xlat
nop
cmpsl
fisubrs
mov
mov
xlat
mov
lret
fisubrs
xchg
mov
ja
stc
cmp
mov
cmp
inc
and
adc
cmpsl
lret
imul
fisubrl
xor
les
scas
or
inc
int3
inc
enter
mov
or
dec
movsl
scas
mov
sbb
mov
sbb
mov
mov
jns
or
mov
inc
jecxz
andb
loopne
adc
and
push
xchg
jg
pop
clc
insl
and
mov
mov
pop
jmp
icebp
xor
dec
jecxz
dec
fisubs
into
pusha
out
mov
mov
inc
mov
cmp
jo
mov
gs
jb
lea
scas
inc
xlat
arpl
pop
xchg
xchg
addr16
push
testw
loop
test
xchg
dec
mov
add
rcl
in
lret
movsl
fcoms
mov
sti
insl
and
cmp
movsl
addr16
adcb
int
sarl
inc
sbb
pop
xchg
add
fsubs
mov
xchg
pop
xor
jle
std
loope
mov
arpl
imul
js
mov
leave
mov
pop
andb
add
mov
mov
orb
sbb
jbe
shll
adc
jp
aas
mov
jae
mov
inc
dec
pop
inc
xchg
inc
cmovae
mov
jg
lods
or
incb
mov
stc
jl
popa
xor
xchg
jns
sbb
lods
pushf
pop
enter
jecxz
cwtl
js
xor
inc
adc
or
sub
cmc
jge
xor
roll
and
sbb
inc
imul
dec
filds
xchg
hlt
das
je
dec
imul
loopne
cli
or
mov
mov
repz
icebp
jp
hlt
sbb
movsb
lock
mov
faddl
mov
mov
pop
mov
inc
es
push
and
xlat
push
clc
mov
insl
inc
sarb
mov
daa
or
repz
out
int
popa
repz
cwtd
xor
dec
cmp
test
sub
cmp
xrelease
int
push
adc
jge
jle
cmp
and
out
pop
pushf
repnz
xchg
mov
push
dec
push
mov
or
mov
dec
fs
inc
rol
inc
cmp
leave
xorb
stos
shrb
pushf
and
inc
mov
test
cs
addr16
xor
andl
adc
cmpl
or
fdivl
jecxz
daa
inc
cmp
fidivs
in
sbb
sarl
mov
jno
fldcw
xlat
push
out
mov
mov
mov
xor
lahf
fwait
xlat
mov
fnstsw
sbb
dec
fiaddl
mov
insl
or
outsb
jnp
jp
push
fisttpl
test
sbb
pop
cmpb
int
fnstsw
add
adc
fstps
nop
insb
and
jns
mov
xor
jl
mov
xchg
and
addr16
adc
add
icebp
in
mov
scas
inc
or
mov
and
jecxz
mov
and
cld
mov
push
clc
jnp
lret
mov
adc
jp
lds
pusha
test
mov
jle
fadd
mov
or
mov
jle
rclb
cmp
cltd
andb
add
in
outsb
in
mov
lods
sarl
adc
cmc
aad
ja
out
in
xchg
test
pusha
sbb
sahf
cmp
scas
fcompl
dec
or
adc
push
jge
inc
jmp
ret
lods
cmp
outsl
scas
mov
or
pop
loopne
mov
scas
faddl
movsl
xor
icebp
xadd
cltd
fmul
out
repz
adc
pop
test
rcll
xchg
xlat
mov
xchg
sti
adc
stc
test
mov
les
ret
mov
jl
add
rclb
mov
mov
adc
lret
fnstsw
movsl
ds
cmp
pop
insl
insl
xor
rcrl
faddl
stos
pop
mov
jno
loopne
gs
mov
movsl
pop
adc
adc
dec
cs
aas
fcomps
mov
lock
inc
ret
cmpsb
shl
inc
sbb
dec
xor
int3
dec
dec
push
gs
pop
mov
inc
mov
inc
loopne
or
pop
sbb
mov
adc
stos
pop
cmpsb
mov
enter
push
mov
out
dec
rorb
push
movsl
stc
fimuls
inc
mov
xchg
cld
mov
fnstcw
mov
ret
leave
push
jmp
mov
mov
imul
fiadds
stc
out
cltd
adc
adc
mov
lock
sti
push
mov
push
test
inc
mov
mov
mov
gs
out
jecxz
pop
inc
out
lock
fistpl
cmp
push
cmpsl
add
sub
jmp
fldcw
mov
xchg
xchg
sbb
mov
lcall
fbld
pusha
cld
mov
sub
int3
or
push
xchg
push
sbbb
repnz
pop
stc
cltd
cmpsl
mov
pushf
clc
clc
cmp
mov
int3
jmp
adc
add
rcrb
cmp
notb
cmpb
negl
inc
push
sbb
jnp
inc
cld
xchg
idivb
cmp
imul
clc
aad
nop
inc
xchg
imul
mov
xchg
addl
mov
shr
bound
movsb
call
call
cwtl
inc
into
inc
jae
mov
sbb
and
call
push
addb
cltd
push
and
mov
stos
repnz
mov
push
add
dec
arpl
cs
fs
ss
push
inc
mov
jno
add
add
inc
mov
loopne
in
sbbb
neg
loopne
mov
push
test
adc
bound
sbb
xor
lods
rcl
mov
fisubrs
popa
out
xchg
movsb
mov
or
pmulhuw
jo
inc
pop
xchg
sti
lret
cltd
push
ret
xor
xor
aaa
call
outsb
adc
pop
or
insl
dec
addr16
cmpsb
xchg
shll
rcrb
adc
pop
stc
cmp
divb
dec
and
mov
mov
cli
xor
add
in
fidivrl
je
dec
pushf
jo
xorb
fadd
inc
pop
xchg
addb
andb
dec
mov
outsb
pop
inc
repnz
dec
out
or
sbb
jne
jp
jns
insl
not
sub
out
or
cld
adc
sbb
mov
add
push
icebp
mov
fistpll
push
aam
jmp
xchg
sahf
or
ljmp
scas
das
lea
mov
loop
ljmp
sahf
cmp
xchg
xor
inc
nop
pop
ss
jae
jo
inc
lods
mov
pop
movsl
mov
fiaddl
outsb
cmpsb
repz
popa
out
adc
sbb
and
inc
sarb
mov
leave
inc
mov
fwait
mov
mov
inc
mov
mov
scas
mov
fistl
jle
xor
xchg
push
push
mov
mov
std
push
mov
mov
xor
xor
sub
dec
add
jnp
inc
adc
xor
jp
mov
fucomip
sbb
test
sbb
xor
xor
out
xor
xchg
mov
scas
aaa
xchg
jmp
inc
pop
xor
mov
popa
inc
testl
adc
shrl
jmp
dec
fistpl
fsts
sub
sbb
and
cmp
inc
das
addr16
cmp
imul
pop
leave
call
in
mov
shlb
orl
dec
push
and
sub
hlt
roll
add
and
cmp
rolb
testl
sbb
sbb
shrb
lods
jns
cwtl
inc
jmp
das
sbb
pushf
daa
lret
sub
subb
icebp
andl
fwait
scas
adc
jge
push
xchg
push
sbb
lods
fldl
mov
jb
or
xor
or
pop
ficoml
xchg
mov
xor
shl
mov
test
cmp
test
mov
ds
cmp
sub
movsl
sbb
xor
pushf
pop
mov
inc
mov
pop
stos
sbb
mov
test
test
push
pop
pop
and
xor
loopne
xchg
scas
cmp
xchg
ficoms
adc
push
in
cwtl
mov
test
jae
jno
cmp
mov
add
cmp
sarl
aad
jnp
out
aaa
popf
inc
enter
xchg
rcrl
jge
pop
xchg
and
mov
rcr
lret
test
inc
dec
jl
fbstp
pop
test
aas
sbb
push
xlat
ljmp
cwtl
dec
and
push
imul
inc
imul
xchg
aam
push
lds
pusha
mov
add
push
jns
out
cmp
xchg
pop
and
nop
fisubrs
into
fldt
popf
sub
pop
mov
xor
sahf
cwtl
fisubs
mov
cmp
sbb
add
test
mov
inc
movsl
xchg
mov
imul
lret
cmp
fistpll
loope
jge
mov
dec
imul
push
pop
out
add
clc
ret
rcll
mov
sahf
bound
dec
es
jo
jne
cmp
adc
pop
lret
sbb
cmp
pusha
shlb
ss
push
sbb
add
cmp
xor
daa
insl
mov
int3
pop
jecxz
bound
hlt
sti
mov
cmp
popa
jge
ljmp
push
xor
jne
mov
adc
ds
inc
xor
cmpsb
movsl
ja
mov
mov
rcr
xlat
push
aaa
lods
jb
bnd
cmp
js
mov
lea
mov
push
je
inc
add
andb
cwtl
pushf
add
adc
hlt
sub
int
dec
gs
sbb
shll
jecxz
insl
shrl
idiv
jmp
pop
lock
jmp
fldt
push
push
lods
add
push
fadds
inc
add
test
scas
cmp
xor
test
aas
stc
or
jmp
sub
mov
xchg
cld
fldt
xor
adc
jnp
sbb
popf
add
andb
mov
imul
icebp
stc
and
xor
cmp
and
test
xchg
sbb
sbbb
sub
movsl
cltd
icebp
push
movsb
outsl
xchg
pop
jno
xchg
aas
lahf
bound
and
xor
adc
fstl
pop
dec
in
and
pop
xor
and
fiaddl
jg
insl
cmc
mov
lahf
repnz
jne
cwtl
push
mov
jns
push
cmp
mov
mov
adc
rcrl
clc
ss
ljmp
jecxz
inc
popf
daa
lods
mov
pop
push
mov
mov
repz
iret
imul
inc
into
clc
or
or
mov
inc
inc
push
mov
jp
and
leave
stos
int
pop
cwtl
mov
xchg
bound
jge
sbb
out
push
incl
jecxz
mov
mov
lea
repz
fdivl
arpl
push
lahf
cli
btl
cli
std
aaa
test
sbb
or
jge
inc
push
daa
lcall
jno
pop
loop
cmp
insb
push
int3
inc
test
pop
test
push
jnp
mov
mov
adc
add
inc
xor
mov
mov
jno
xlat
movsb
loope
inc
aas
stos
leave
push
cmp
sbb
call
cwtl
sti
and
int3
pop
imul
arpl
xchg
pop
xor
mov
mov
movsb
sub
inc
call
movsb
adc
shrb
test
add
lcall
push
add
cmpsl
test
mov
pusha
or
adc
xor
mov
test
sub
iret
clc
dec
movsl
icebp
xchg
sbb
inc
adc
sahf
fst
adc
icebp
push
or
or
roll
in
mov
mov
flds
add
mov
dec
mov
pop
idivl
repnz
imul
sbb
jno
rcrb
sbb
popa
loope
je
test
fcompl
adc
std
add
outsl
and
push
mov
lock
cwtl
movsl
sub
xor
pusha
mov
adc
cmp
xor
clc
jecxz
sbb
fstp
cltd
rorl
mov
popf
call
ds
mov
repz
lods
imul
cmpsl
sbb
in
fisubrl
mov
aam
cmpb
push
add
cmpl
xor
pop
or
inc
mov
push
cmpsb
movsl
in
loope
movsb
out
mov
das
mov
fidivrl
fcompl
ret
mov
xchg
mov
test
std
fistl
push
mov
and
test
pop
dec
pop
leave
mull
sbbb
xor
ficoml
xchg
push
leave
sbb
sub
lds
cmpsl
pop
imulb
scas
loop
mov
out
xchg
inc
push
jns
cmp
mov
jo
push
jp
daa
adcl
mov
loope
dec
and
idivl
sahf
lcall
sbb
mov
jno
lods
mov
dec
push
adc
pop
jmp
jns
lahf
jno
push
add
and
hlt
test
dec
mov
cld
lods
xchg
rcll
loope
pop
xchg
cltd
sarl
cmpsl
and
push
stos
inc
cli
add
xor
sub
cwtl
xor
lahf
repz
loope
pop
mov
sub
push
test
sbb
add
push
pop
cmp
popa
lahf
loopne
push
inc
mov
test
fildl
and
adc
pop
sbb
fwait
push
int
mov
lahf
and
cmp
jl
mov
cmp
popa
sub
arpl
rorb
add
add
mov
cmp
les
pop
dec
fildl
ja
cld
scas
inc
lock
or
movsl
pop
mov
sbbl
mov
pop
mov
adc
pop
dec
jle
mov
ss
xor
mov
icebp
adc
lcall
in
push
mov
ficompl
sarl
insb
inc
dec
subl
inc
fnstsw
mov
sahf
test
pop
arpl
in
cli
icebp
sbb
mov
or
pusha
xor
test
cmp
inc
adc
mov
xor
ds
jo
pop
mov
mov
push
pushf
or
rol
repnz
push
mov
mov
xor
lcall
mov
jmp
xchg
xor
jge
aaa
sti
iret
jle
inc
or
sahf
imul
inc
nop
mov
dec
mov
adc
jge
lcall
sbb
js,pt
mov
mov
cmpl
or
fcompl
cmp
jne
inc
mov
loopne
out
xor
lea
mov
xchg
test
xchg
pusha
xchg
mov
adc
sbb
xchg
jle
inc
jb
out
mov
jecxz
in
andb
shr
out
sbb
pop
insb
cmp
icebp
mov
lcall
loopne
jmp
data16
pop
aas
shr
arpl
xor
arpl
cmp
cli
lahf
pop
pop
xchg
movsl
adc
pop
mov
mov
scas
hlt
push
aas
push
mov
push
leave
fs
sub
shll
stos
or
in
jl
inc
mov
adc
je
es
outsb
std
inc
mov
mov
ret
test
pop
mov
and
lcall
xchg
adcb
inc
jp
mov
mov
test
dec
pop
cmp
in
sti
movsb
pusha
in
in
cmpsl
ss
js
jbe
and
cmp
ljmp
mov
repz
mov
jp
xchg
and
push
sbb
xchg
nop
shl
in
inc
xchg
aaa
cmpb
xchg
cmp
jo
ja
sahf
mov
dec
pusha
jl
mov
xchg
jg
mov
out
sbb
leave
xchg
adc
mov
xchg
jne
cwtl
pusha
cmp
mov
fistl
scas
stos
push
pop
dec
and
inc
mov
jnp
or
or
smsw
or
jne
sub
add
push
movsb
iret
std
aas
lods
add
xchg
in
cltd
call
mov
xor
push
in
in
xor
inc
in
aas
mov
or
in
loope
test
shrl
xchg
inc
insb
mov
mov
out
fnstsw
fstps
jno
stc
or
aas
mov
shlb
mov
fdivrs
dec
add
jns
inc
pop
pop
jno
mov
push
loope
mov
lods
sbbl
mov
insl
inc
jno
xor
push
addb
out
mov
inc
inc
and
and
pop
xor
jae
dec
pushf
mov
inc
mov
imul
pop
mov
shll
cld
xchg
mov
jg
fdiv
pusha
cltd
insb
popf
out
adc
push
inc
js
popa
shll
imul
ss
mov
mov
iret
sub
cmp
adc
mov
ja
inc
pop
jns
jae
and
loopne
ss
xlat
mov
jge
or
call
push
pop
gs
je
or
mov
push
ljmp
and
andb
and
cmp
lea
xorl
mov
sbb
and
jb
loopne
inc
aad
sahf
addr16
push
aam
mov
stos
ret
sub
mov
push
add
or
fs
or
push
sbb
push
mov
add
adc
pop
jmp
sbb
idivl
push
cli
cmpsl
call
inc
mov
mov
adc
lret
mov
xor
aam
faddp
sbb
shr
icebp
mov
lea
arpl
add
inc
bound
pop
ret
ljmp
inc
dec
lahf
push
jl
fdiv
push
sarl
addr16
adc
shrl
sbb
xchg
aaa
pushf
xor
jge
lahf
mov
sahf
imul
and
jne
outsb
or
dec
imul
sub
cs
orb
daa
ss
and
add
push
pop
add
ret
pop
fs
imul
ret
fstpl
mov
in
outsl
pusha
mov
outsb
js
sub
jb
mov
push
bound
jmp
mov
in
lret
or
ja
cmp
movsl
xor
test
sub
jecxz
sbbl
ss
jno
adc
repnz
scas
dec
arpl
pop
xchg
dec
sbb
sbb
xor
imul
xor
jo
inc
or
inc
aaa
test
sbb
sbb
xlat
hlt
xchg
xor
pop
fld
pop
test
pop
or
fcmovnb
and
imul
push
pusha
xchg
cmpsb
lods
bound
pusha
testl
mov
andb
push
adc
pop
or
lret
fs
ret
test
lcall
inc
jns
adc
adc
outsl
add
lods
cmp
jmp
xor
cltd
mov
out
cmp
mov
mov
in
aas
mov
das
mov
mov
outsl
js
jb
or
push
ja
jge
mov
jl
scas
ficoml
ss
jno
popa
or
shll
dec
andb
or
lahf
xchg
incb
xor
test
mov
int3
test
inc
iret
cmpsl
jbe
rorl
sbb
xchg
pop
mov
add
add
xchg
lret
idivw
jbe
test
or
stc
nop
out
mov
in
cltd
cmc
hlt
shrl
daa
xchg
ss
pushf
adc
cli
inc
cmp
loopne
loopne
jl
mov
rcll
enter
mov
cltd
stc
inc
ja
jns
adcl
shrb
hlt
cmp
rol
pop
popa
pop
enter
mov
movb
push
add
je
imul
add
sbb
or
push
cli
cmp
jns
mov
and
frstor
stos
add
and
xlat
cld
mov
pop
and
outsb
jp
mov
int
scas
dec
mov
cmp
aaa
xor
ret
ret
rcll
pop
cmp
cmp
outsb
mov
sarb
jle
ficoml
dec
cmc
pop
jg
rcrb
pop
in
cmp
pop
inc
shlb
jno
mov
sub
mov
pop
cltd
lret
inc
xchg
mov
lahf
mov
jo
mov
cmp
and
xor
stc
mov
jno
dec
and
jo
andb
shr
ss
dec
jae
cmpsl
sarb
add
jae
xor
xchg
mov
jae
fisttpl
hlt
ja
mov
adc
mov
sarb
xchg
inc
out
xor
dec
xor
ffreep
cmpsl
mov
dec
xchg
pop
dec
stc
loop
adc
lods
mov
inc
aam
fdivrs
les
jecxz
or
adc
add
mov
inc
add
pusha
and
cli
jbe
sub
loope
inc
shlb
sbb
ret
jl
testl
sbb
cmp
insl
scas
jo
jb
inc
pop
sbbb
inc
dec
into
mov
inc
imul
movsb
lds
pop
sub
in
bound
mov
push
ja
lret
add
sbb
negl
pop
into
scas
sbb
movsl
popa
repz
pop
lret
gs
dec
adc
xchg
mov
ror
mov
inc
lret
icebp
mov
mov
mov
pop
add
lcall
adc
aaa
out
mov
inc
jns
sbb
mov
cmpsb
outsb
mov
pop
mov
sbb
dec
mov
xchg
cmc
adc
fldt
sbb
xchg
fisubrl
movsl
fsubrp
pushf
xchg
icebp
cmp
popa
and
movsl
mov
mov
das
add
cmp
add
xorl
jl
mov
push
iret
mov
lods
jns
stc
mov
jmp
xchg
push
ret
movsl
fcomps
imul
sub
xor
cltd
popa
ds
psrld
inc
mov
jb
mov
scas
inc
inc
dec
xor
push
insb
and
push
sbb
fsubr
jbe
inc
ds
push
cmpl
mov
cmc
jae
add
pop
ss
dec
mov
pop
lcall
or
into
adc
pop
fsubl
sbbl
pop
inc
inc
or
and
and
out
push
lret
cmpl
jl,pn
push
jle
inc
ds
inc
pop
jne
mov
mov
pop
fcmovnu
fs
out
cmp
jmp
lods
stos
cs
aad
loop
sub
dec
cmp
roll
clc
mov
mov
fiaddl
jp
call
ss
cmp
sbb
fdivs
bound
xchg
lret
sub
adc
daa
adc
jge
or
ret
fbstp
in
lahf
fidivrl
pop
mull
mov
adc
mov
mov
mov
fdivrs
and
mov
and
dec
jl
push
test
jle
inc
or
xor
lods
jns
mov
mov
popl
add
sti
cmp
es
mov
adc
jecxz
ret
test
lcallw
mov
mov
inc
push
jno
sbb
in
sbb
push
sub
cmc
pop
jae
sbb
sub
sub
pop
mov
inc
sub
xor
pop
dec
xchg
ss
mov
movsl
pop
rorl
dec
out
inc
mov
pop
push
outsl
mov
xchg
frstor
mov
sbbl
cli
mov
repz
mov
mov
clc
nop
mov
inc
addr16
lret
cmp
or
lahf
mov
std
andb
add
add
xchg
test
xchg
leave
add
cmp
pop
movsl
sbb
add
cmp
dec
outsl
aas
mov
or
mov
mov
scas
pop
sub
out
lods
xor
out
lods
mov
push
jmp
mov
loop
out
mov
mov
inc
mov
adc
push
lods
js
add
sub
in
xchg
mov
push
mov
cmp
mov
mov
jmp
jb
pop
mov
push
insb
stos
rolb
pushl
dec
mov
dec
pop
mov
loopne
pop
mov
pushf
adc
sbb
xchg
test
push
pop
daa
and
addr16
pop
ds
in
testb
out
adc
rorl
xor
andb
in
cmp
aaa
xchg
xor
bound
inc
mov
push
jne
mov
aas
jne
shlb
jge
loope
ret
sub
jno
mov
sbbl
push
dec
ret
inc
and
scas
arpl
mov
xor
inc
mov
das
or
lahf
int3
cwtl
rclb
mulb
xchg
inc
jecxz
push
mov
mov
sub
inc
pusha
int3
movsb
or
cmp
and
pusha
ss
cmpsb
je
fwait
inc
cld
inc
ret
adc
mov
or
push
pushf
push
pop
enter
lea
adc
mov
cmp
cmp
cmp
cmp
arpl
sbb
dec
push
mov
xchg
xchg
xor
pop
test
jecxz
cwtl
add
mov
xchg
cli
sub
mov
scas
in
inc
pop
add
mov
inc
cld
inc
pop
cmp
mulb
in
andb
inc
stc
in
shlb
cli
xor
mov
je
mul
push
rclb
inc
fisubs
cmp
cwtl
adc
je
sub
xor
xchg
pop
shlb
sbb
pop
sti
ret
jae
out
repnz
xor
les
movsl
lods
loope
inc
pop
test
outsb
push
mov
pop
and
sbb
ja
push
or
push
cwtl
inc
jo
jb
push
rcrl
aad
xchg
test
shrb
mov
xchg
fisubs
call
or
xor
mov
out
sub
aaa
fadds
movsb
pop
mov
out
mov
rcrb
daa
push
or
sti
mov
imul
mov
insb
mov
cmp
pop
fistl
pop
sbb
fnstsw
mov
out
mov
cmc
xchg
add
mov
pop
stc
aas
mov
mov
clc
test
mul
cltd
pop
xor
shll
inc
jno
pop
lcall
mov
loopne
push
add
push
inc
gs
xor
mov
stos
and
rcll
pop
hlt
mov
out
xchg
mov
movb
call
test
inc
imul
cmpb
out
outsb
sbb
ss
pop
shl
xchg
xchg
lea
fcoms
and
sahf
ret
sahf
shlb
push
mov
outsl
push
pop
push
cmc
adcl
jo
js
mov
stos
mov
out
out
mov
xor
in
mov
mov
mov
into
xchg
or
add
mov
dec
jge
sbb
mov
lret
push
and
pop
add
inc
imul
aas
add
xor
cmp
mov
cli
mov
push
mov
mov
les
push
mov
adc
ficoml
jl
pop
jl
sub
lods
cli
mov
sub
cltd
add
and
lods
mov
dec
shrb
cs
sub
cltd
mov
mov
mov
ds
and
in
sbb
shl
jnp
pop
dec
inc
mov
mov
cmp
jne
jae
nop
pop
ret
int3
sahf
sbb
cmp
js
orl
into
push
mov
jge
cmc
ret
mov
lock
xchg
cli
sub
add
inc
xlat
shlb
adc
ss
dec
popa
movsl
mov
cwtl
inc
cmpsl
fiaddl
out
add
mov
push
adc
int3
negl
call
pop
in
sub
adc
mov
push
cli
adc
jo
xor
add
xlat
pop
cmpb
push
loopne
mov
fwait
push
or
add
std
add
add
mov
fsubs
out
test
dec
mov
call
mov
cli
inc
les
icebp
roll
and
mov
dec
push
in
jns
pop
fistpll
jb
mov
sarb
imul
mov
negb
das
stos
rolb
sahf
dec
push
movsb
ds
adc
out
jno
enter
xor
insb
xchg
cmpsl
adc
adc
mov
sbb
je
or
adc
xor
xchg
add
out
mov
or
lods
dec
pop
sbb
mov
hlt
jno
ljmp
xchg
pop
cmp
jbe
xor
mov
fs
xchg
jno
xchg
push
call
push
jo
insl
sub
jae
dec
xor
add
repz
and
sbb
mov
or
test
loopne
adc
xor
inc
inc
cmp
and
aam
mov
inc
inc
rcrb
and
adcl
mov
or
fcompl
push
xchg
rdpmc
out
sbb
mov
stos
push
jo
mov
pop
in
add
pop
mov
outsb
mov
add
inc
imul
sti
inc
ja
sbb
es
lret
or
aaa
movsb
mov
sbb
fisttpl
push
sbb
cwtl
mov
xrelease
out
in
cmp
shll
shrl
push
mov
dec
pop
push
and
pop
movsl
push
js
mov
call
xchg
inc
xor
orl
fstps
jp
and
addl
xchg
subl
mov
and
inc
jnp
ljmp
ror
jo
popa
mov
lods
jge
jl
pop
add
push
mov
fldl
lea
inc
rcll
and
cwtl
test
inc
loopne
imulb
pop
clc
testb
lret
outsl
mov
enter
fdivp
or
mov
xchg
lea
stc
cmc
test
mov
addl
ret
inc
loope
xchg
rol
loopne
xchg
xor
pop
cmp
fisttpll
mov
mov
test
std
dec
or
mov
jne
push
cs
mov
push
leave
xor
lret
mov
xor
mov
divb
cld
sub
mov
mov
dec
lahf
mov
xchg
jge
mov
or
and
xchg
mov
enter
mov
jecxz
mov
cmp
and
lds
mov
cmpsb
add
rclb
shll
pushf
sub
roll
sub
aam
cmp
inc
mov
fnstcw
shlb
inc
lcall
inc
add
mov
and
sbb
inc
pop
scas
jno
sub
inc
shlb
andl
pop
mov
adc
mov
lahf
test
mov
xor
mov
movsl
sahf
fcmovnb
mov
cmpsb
inc
movsl
popa
xor
in
xor
addl
lods
mov
jp
leave
jl
mov
test
int3
outsl
add
sbb
mov
out
cmp
repnz
jl
push
fstpt
rcrl
movsl
fimuls
pop
adc
adc
adc
adc
xor
jge
movsl
pusha
in
popf
shlb
movsl
rol
lods
ffree
movsl
push
lds
lds
jl
int
sub
lds
inc
pop
movsl
mov
jle
inc
inc
pop
lds
push
sahf
movsl
rcrl
mov
mov
sarb
push
cmp
and
movsl
lret
lods
inc
shlb
cmp
es
sbbl
fnsave
icebp
cli
push
imulb
sub
push
cmp
jbe
add
cli
sub
sub
jp
and
mov
push
movsl
pushf
sbb
lock
ss
mov
inc
sahf
xor
lods
jb
or
popf
lock
or
pop
inc
sub
adc
test
push
rclb
xor
shlb
and
inc
and
cmpsb
jmp
mov
adc
rorb
jg
cli
sbb
cmp
cwtl
shlb
shrb
js
shlb
mov
sbb
mov
pop
sbb
push
and
jge
sbb
mov
lea
or
jg
dec
mov
mov
lock
rorb
jg
pushf
mov
sbb
sub
jle
daa
cld
jns
mov
sarb
add
xchg
push
cmp
cmpsb
mov
add
and
pop
push
jb
mov
xor
subb
fimull
movsl
or
hlt
mov
cmp
clc
xor
sbb
ret
movsl
push
popa
frstor
scas
pop
xorb
push
icebp
cmpb
mov
cwtl
cli
mov
je
mov
and
xor
testl
sti
out
sub
frstor
xchg
add
addb
in
adc
or
push
in
and
add
jae
adc
jle
aas
jg
ss
icebp
and
lods
jbe
shll
pop
xor
test
ja
ret
js
push
sti
xor
jnp
cmp
dec
mov
cmpsl
aam
xchg
cli
daa
das
stc
ret
lcall
mov
mov
xlat
sbb
inc
jns
dec
cmp
movsl
rcrl
iret
mov
aam
mov
push
ljmp
addr16
pusha
jnp
cltd
adc
sbb
cs
movntq
xchg
lret
cmp
xchg
mov
xor
add
push
inc
fcoml
push
aaa
or
pop
sbb
jg
lret
cltd
pop
mov
ficoml
jbe
cwtl
fdivrs
mov
cwtl
jne
xchg
pushf
mov
addr16
mov
mov
push
test
mov
jg
inc
jae
push
popf
mov
out
nop
pop
out
inc
sti
movsb
daa
enter
lds
sub
in
adc
xchg
iret
sub
mov
dec
fidivl
mov
pop
sub
cmp
xchg
ficompl
or
loopne
mov
jp
enter
pop
pop
and
stos
jno
add
or
jo
sbb
cmp
pop
jns
sbb
xor
mov
cld
subl
sbb
or
imul
and
mov
sbb
add
dec
ds
dec
sahf
mov
sbb
xor
sub
fsubrs
outsb
cli
cld
shlb
jmp
inc
mov
flds
lods
outsb
add
sbb
shll
pop
xor
ds
jmp
std
rorl
movsl
pop
add
sub
sti
negb
bound
movsb
mov
mov
fsub
xlat
jns
in
xor
xor
adc
xchg
mov
in
ljmp
ss
cmp
push
addl
movl
sub
fsincos
inc
xchg
idivl
inc
loop
adc
push
mov
lcall
mulb
jmp
lods
xor
popa
int3
sarb
icebp
push
or
addr16
popa
xchg
js
addr16
pop
xchg
xlat
pop
xor
sti
jl
mov
cmp
inc
pop
movsb
add
shrb
mov
out
fadds
pop
cmp
dec
test
fwait
ret
cwtl
out
sbb
dec
jnp
in
xor
mov
pop
pop
inc
push
aam
neg
xor
inc
das
into
jb
xlat
mov
mov
jnp
stc
das
mov
aas
push
sbb
negb
mov
pop
cwtl
das
pop
xorl
mov
inc
mov
data16
aas
lea
test
and
sbb
cmpsl
push
fwait
jns
jns
ret
ret
adc
cmpl
mov
xchg
sahf
fldenv
ret
mov
roll
inc
rcll
cwtl
cwtl
adc
icebp
mov
mov
jmp
jp
loopne
cmp
fdivrl
push
in
sub
mov
loop
fwait
hlt
xor
ds
sbb
adc
xadd
mov
mov
inc
lahf
xor
stos
jnp
and
adc
lahf
lods
into
into
push
mov
je
and
mov
std
xchg
and
cmp
leave
mov
ss
jecxz
test
mov
xchg
fcompl
pop
in
lcall
fwait
mov
push
jns
pop
mov
mov
fnstsw
mov
stos
test
adc
adc
mov
jle
mov
inc
jns
and
cltd
movsl
movsb
cli
repnz
ss
xor
out
sbb
mov
mov
and
push
xchg
or
mov
jne
jg
mov
mov
lock
cld
out
xor
mov
pushf
and
inc
inc
insb
inc
sahf
aas
mov
push
je
jle
sub
fs
cmc
mov
out
cs
ja
jns
inc
and
push
mov
out
push
adc
jno
cmpsb
aas
jns
es
aaa
mov
mov
movsl
sbb
push
aam
mov
test
pop
mov
test
add
sarb
loopne
mov
icebp
mov
daa
add
movsb
adc
mov
mulb
stos
or
jl
aad
rolb
ds
sahf
movsl
mov
pusha
jp
lahf
in
pop
sub
inc
push
test
fcomps
in
cld
cmpsb
cli
or
orb
adc
leave
sub
aad
arpl
shl
rcl
enter
roll
lret
push
flds
or
sahf
push
inc
inc
xor
and
faddl
test
xor
xor
adc
pop
mov
sub
cs
inc
adc
je
mov
addr16
inc
out
cmp
popa
gs
sbb
pop
fwait
mov
xchg
out
xor
cmp
ja
femms
pop
test
inc
add
cs
dec
iret
daa
inc
mov
add
das
sbb
xor
mov
xchg
mov
inc
adc
call
xor
data16
cs
pop
mov
xchg
xchg
lods
imul
outsl
unpcklps
xor
sbb
mov
jge
mov
mov
in
jnp
sub
movsl
cmp
mov
andl
std
cmp
adc
jo
ds
cs
mov
mov
jno
jle
sub
mov
leave
stc
cmp
or
sbbb
out
aaa
sbbb
bound
loope
push
xchg
pop
add
sub
lds
add
jg
testb
nopl
subb
cmpsb
adc
lea
xlat
mov
roll
popa
lcall
cmpsl
sti
mov
shrl
fstps
bound
fsubs
adc
inc
mov
inc
mov
jl
and
mov
mov
sub
xchg
cmp
xchg
mov
mov
fld
aaa
popf
lock
inc
dec
xor
cwtl
pop
jns
ret
add
cwtl
cmp
hlt
shll
stc
mov
inc
push
insl
insb
pop
cmpsb
and
mov
adcl
cmpsb
pop
mov
lods
sti
mov
mov
inc
cmc
add
cld
mov
push
sbb
mov
push
mov
inc
jo
lock
push
mov
loope
pop
fcmovnbe
xchg
xchg
xor
enter
js
sbb
mov
xor
es
dec
out
mov
xorb
mov
jno
xchg
mov
dec
rorb
inc
fucomi
sub
fmull
inc
int3
cmpsb
mov
clc
dec
xor
lcall
pop
out
and
shll
mov
sub
and
lahf
cli
mov
add
mov
cwtl
add
xor
scas
adc
inc
fildl
shl
xor
mov
mov
inc
sbb
mov
xchg
fldt
scas
movsb
fiadds
lahf
ret
jne
sahf
pop
push
imul
shlb
lea
adc
outsb
xchg
mov
fidivrs
hlt
sub
aaa
inc
pop
pop
icebp
jb
jne
out
jp
sbb
mov
cmp
clc
inc
pop
rcrb
lcall
push
lcall
inc
xor
dec
rorb
cmpsb
inc
mov
scas
ljmp
and
lcall
daa
sbb
loopne
lods
cld
scas
push
jbe
cwtl
xchg
or
mov
xchg
mov
cmpsb
mov
stc
cld
inc
mov
push
movsl
loope
adc
pop
out
cs
into
sahf
leave
loopne
sub
popa
push
cmp
in
leave
mov
sub
inc
std
cwtl
cltd
ret
adc
cmp
push
push
enter
cli
daa
in
pop
pop
cld
insl
lods
out
test
push
inc
sbb
repz
subl
leave
push
cwtl
sbb
mov
mov
mov
fwait
loopne
cwtl
lret
mov
cmp
jbe
xchg
push
xchg
test
jae
rcll
xchg
cmp
pop
jecxz
fistpl
xchg
push
inc
dec
pushw
fsincos
fnstcw
rcll
cmc
mov
sahf
push
sbb
inc
add
mov
lahf
int3
jge
cld
push
insb
je
mov
stos
jne
vpshuflw
jp
pop
dec
mov
outsb
test
daa
pop
test
xchg
xchg
clc
push
mov
add
mulb
adc
cmc
xchg
jmp
push
push
add
sub
movsl
mov
pop
xchg
pop
sbb
shll
add
rorl
in
orb
push
push
flds
js
cli
jb
sbb
in
adc
lods
add
addr16
sti
pop
jecxz
cmpsl
roll
in
cmp
mov
fldenv
sub
int3
mov
dec
add
sub
mov
sub
pop
inc
int3
xor
mov
dec
jns
sub
in
rolb
fmul
xchg
iret
mov
movsl
add
js
or
xor
pushf
cmp
loop
cld
cltd
into
mov
inc
inc
and
gs
push
mulb
adc
push
fwait
ret
xor
mulb
negb
sti
sbb
xchg
js
adc
mov
mov
jecxz
sub
jle
inc
sbb
cmpsl
lods
adc
inc
jne
mov
cmp
aaa
loope
mov
test
notb
or
pop
dec
movsl
cmp
out
cmovno
test
cmp
push
orl
stos
popa
mov
jb
xchg
inc
sub
rol
mov
sbb
inc
es
pop
in
iret
adc
mov
call
fstl
adc
sarb
popf
push
xorb
cmp
inc
mov
mov
cmp
cmp
sahf
mov
rcr
and
fldl
ss
aas
rcll
cmp
out
inc
in
insb
es
jmp
inc
into
stos
fdivs
and
inc
jmp
adc
sub
xchg
out
bound
or
adcl
movsl
mov
data16
cwtl
xchg
je
insl
push
jo
fs
cmp
pusha
fld1
insb
inc
add
mov
cmpl
test
pop
mov
jge
pop
fstps
xor
push
shlb
int3
xchg
sbb
aaa
in
rorb
sarb
loopne
hlt
leave
push
pop
add
or
push
sbb
fdivrs
cltd
jb
fwait
dec
in
mov
mov
xchg
out
in
jmp
jns
adc
fstl
mov
fadds
lret
shl
pop
inc
inc
fidivrl
je
test
scas
jne
pushf
pop
cmp
inc
sarb
daa
add
mov
xchg
lahf
pop
enter
cwtl
movsl
adc
mov
pusha
push
dec
aaa
in
jns
cmp
cmpsl
mov
adc
sbb
mov
cmc
dec
loop
cli
inc
sbb
data16
stos
fildll
in
xor
cmpsb
mov
test
xchg
push
mov
xor
mov
shr
jp
cltd
inc
mov
push
mov
cmp
jp
jle
mov
sbb
xor
and
mov
sti
cmp
cwtl
pop
in
gs
sub
pop
add
inc
cwtl
pop
rolb
notb
sub
fsubrl
lea
cmpsb
jmp
sbb
add
sub
cmpsb
pop
cwtl
insb
push
insb
add
add
aad
movsl
cmpsl
cld
dec
adc
mov
stc
cmp
leave
push
test
jge
pop
mov
sbb
pop
lods
sahf
inc
jp
mov
sahf
imul
inc
cmpsl
lahf
mov
loop
dec
data16
insb
pop
or
nop
jp
idivl
or
jae
pop
lods
ss
repz
pop
or
sub
cmp
lods
sbb
mul
mov
andl
cwtl
add
xchg
inc
lahf
mov
or
mov
shll
jle
es
jbe
cmp
lret
lahf
aas
movsl
mov
dec
sbb
mov
sbb
in
mov
js
push
xchg
ret
mov
lock
cwtl
dec
add
subl
movsl
and
mov
inc
movsl
jnp
mov
imul
sub
push
test
mov
adc
scas
aaa
xchg
cmp
sbb
jns
xchg
xor
ret
inc
push
mov
jp
andb
inc
cs
addr16
in
jno
mov
nop
cmp
or
lret
inc
xor
mov
mov
xchg
xor
xchg
cltd
mov
movsb
cmp
cmpsb
negl
cld
jle
fistpl
movsb
sub
adc
pop
loop
mov
out
push
incb
mov
jne
cwtl
inc
mov
xchg
mov
mov
insl
mov
adc
add
xchg
cmp
in
imul
in
aas
mov
cwtl
sub
push
fldt
sti
shl
mov
inc
dec
fadd
push
enter
clc
push
repnz
lods
dec
jmp
jecxz
jle
xor
mov
pop
mov
mov
mov
cltd
or
push
inc
mov
jno
lods
lods
or
mov
or
adc
addr16
testb
bound
hlt
xor
add
push
aad
sub
cmpsl
adc
xorl
pop
push
mov
and
movsb
mov
jge
popa
jl
push
pop
leave
ja
je
inc
mov
mov
lret
pop
push
fidivs
sub
cmp
or
jbe
pop
dec
mov
sbb
dec
cmpsb
in
xor
adcb
stc
fcmovnbe
cmp
mov
or
lods
and
mov
pop
rep
in
mov
subl
lcall
adc
xchg
into
out
sub
in
fwait
in
sarb
js
xchg
in
shlb
mov
jle
mov
daa
mov
xor
mov
inc
rclb
cwtl
mov
push
xchg
test
push
decb
push
in
xor
fwait
add
mov
push
push
add
xchg
aas
dec
cmpsl
xlat
dec
push
ljmp
inc
inc
inc
and
movsl
sti
cli
mov
iret
out
hlt
call
fistl
xchg
iret
adc
inc
mov
add
sbb
or
mov
das
mov
inc
sti
pop
push
sbb
inc
nop
sbb
mov
add
jecxz
call
movsb
add
ja
mov
mov
clc
push
fsts
ja
sub
jbe
mov
adc
cmpb
xchg
pop
add
mov
jbe
movsb
and
xchg
and
mov
jne
stos
and
jb
lods
sahf
pop
add
xlat
sub
cs
jbe
rcrb
cltd
ja
and
and
shl
inc
js
loopne
pop
call
in
add
je
pop
sub
sbbb
sub
sub
or
cmpsl
enter
pusha
mov
adc
ret
xor
rcll
mov
sub
movsl
push
adc
or
lahf
sub
movsl
pop
xchg
mov
mov
cmpsb
and
adc
xor
xchg
mov
idiv
push
jae
repnz
jne
jbe
sbb
and
inc
daa
clc
dec
mov
jns,pt
test
ds
fbld
inc
pop
js
cmp
in
mov
cmp
mov
inc
adc
lea
enter
mov
imul
aaa
cwtl
rcll
ljmp
dec
dec
stc
ja
pop
xor
cmp
js
ja
cmp
ds
test
fsubs
aaa
mov
or
in
shlb
andl
fdivr
bswap
cmp
dec
addr16
mov
leave
js
mov
cmp
push
lea
cltd
mov
xlat
sub
int
mov
mul
cmpb
roll
add
dec
test
mov
inc
mov
mov
aad
push
mov
jl
outsb
cmp
sbb
sbb
mov
push
cmp
cmp
cmp
push
and
mov
loop
cmp
shrb
fcom
xor
mov
fidivrs
jp
rolb
dec
iret
mov
mov
or
fsub
cwtl
xor
xor
aaa
mov
sahf
jne
js
test
mov
jne
and
add
mov
and
call
scas
sbbb
cmp
mov
pandn
jp
imul
xchg
lods
bound
fisubl
xorl
sub
jo
mov
aas
daa
xor
mov
outsb
push
mov
insl
push
dec
pusha
ss
xor
and
outsb
inc
push
push
jnp
cli
aas
push
ljmp
mov
pop
sub
mov
xor
loopne
adc
mov
mov
xchg
jno
js
xchg
sbb
dec
mov
fbstp
icebp
mov
xchg
sbb
test
mov
scas
and
loope
pushf
mov
imul
mov
or
in
and
popf
push
in
or
shrb
rorl
inc
cmpsb
push
adc
sarl
and
lahf
lcall
cmpsl
inc
dec
mov
sti
jne
push
fcompl
cltd
aas
mov
popa
popa
leave
insb
push
fstpt
test
imull
paddb
addr16
mov
inc
loope
xor
flds
and
stos
loope
jmp
mov
cmp
and
leave
xor
or
pop
jns
ljmp
call
test
clc
jle
mov
es
repnz
jmp
xor
cld
bound
xchg
jmp
in
dec
or
pop
or
or
test
jne
and
and
movsl
pop
shlb
mov
loopne
enter
insb
push
in
sbb
mov
gs
inc
adc
pop
fistpll
jnp
sarb
cmp
cmp
push
mov
push
xor
push
enter
jae
xchg
into
test
fisttpl
mov
test
push
push
jmp
adc
mov
fcompl
int
loopne
sti
fstps
mov
push
stc
sahf
idivl
std
pop
ret
or
pop
xorl
xchg
xor
mov
cltd
cmc
pop
mov
std
adc
mov
daa
jb
xor
jb
pop
pusha
lret
jbe
sub
push
cs
sbb
jo
fnstsw
lods
movsl
jno
xor
xchg
push
sbb
sbb
push
jmp
sbb
inc
jle
xor
test
inc
pop
mov
adc
sbb
outsb
out
pusha
fistl
rorl
xchg
cwtl
mov
js
xchg
es
xorb
shlb
inc
jae
sub
jp
fsubl
repnz
fiadds
jns
test
aas
jo
mov
loopne
js
sub
in
push
mov
fisubl
pushl
ja
movsl
jbe
push
pop
inc
jns
adc
mov
cmp
cmp
insb
cmp
pushf
cmp
sbb
mov
aas
sbb
jns
push
rolb
pop
insb
std
fmull
jl
ret
cmp
inc
test
les
mov
pop
rcrl
mov
jo
imul
filds
lahf
shlb
jbe
or
mov
cmp
and
inc
sub
aas
mov
cmp
adc
adc
pop
mov
dec
jbe
mov
sbbb
add
push
add
sarb
dec
push
add
xchg
sbb
jle
pop
sub
pop
mov
adc
adc
imul
xor
mov
test
sti
in
jb
jnp
shll
cwtl
bsf
mov
cld
in
xor
lcall
fsts
jb
or
push
fs
add
mov
test
pop
cmc
and
mov
push
sbb
aas
inc
aam
nop
sub
inc
fwait
imul
adc
mov
push
jmp
inc
mov
inc
cmp
dec
roll
adc
aaa
jo
loop
movntps
and
mov
out
popl
sub
shlb
add
loopne
mov
cld
xor
mov
pop
test
sub
popf
ficompl
lahf
push
stc
sub
leave
popa
js
push
mov
mov
rcrb
mov
and
fmul
sub
jg
mov
jp
xchg
pop
js
xchg
inc
xchg
movsb
mov
loopne
and
std
pop
insl
nop
mov
add
or
cmp
sub
pop
mov
push
or
fnstsw
addr16
push
xchg
stos
addr16
popl
jp
sar
pop
xchg
and
pop
ss
jo
ja
jb
insl
sub
test
sbb
mov
mov
push
insl
push
lahf
xor
jp
pop
mov
push
int
adc
imul
inc
sub
fistps
pop
xchg
nop
int
push
jge
jne
jmp
mov
push
adcl
lret
mov
sub
pop
jne
js
mov
nop
xor
jecxz
cwtl
xchg
mov
adc
fisubrs
push
gs
or
rorl
xor
mov
sbb
lods
cmp
push
lds
mov
mov
stos
popl
out
push
outsb
mov
cwtl
js
pop
mov
sbb
push
mov
push
xor
and
sti
lds
pop
xor
fldenv
add
xor
xchg
sub
insb
aas
ja
mull
push
fnstenv
mov
stc
mov
inc
fadds
in
into
mov
lods
xchg
and
lcall
sarb
mov
frstor
dec
into
nop
mov
xchg
movsl
cmc
inc
push
inc
inc
jo
mov
mov
flds
bound
mov
gs
pusha
pushf
add
arpl
out
aam
std
je
mov
sub
inc
std
and
adc
rcll
in
pop
scas
jno
adc
pop
and
in
ljmp
mov
sub
push
aam
lahf
movsl
pop
cwtl
out
adc
mov
pop
mov
mov
sub
mov
xor
insl
xchg
mov
mov
xor
lahf
js
sub
lcall
push
lds
addr16
pop
pop
cmp
adcl
shll
rcrl
cmp
jl
cmpsb
lods
sub
rcll
push
pop
or
repz
jp
pop
imul
adc
inc
cmp
popa
adc
sbb
inc
out
adc
cmp
stos
mov
mov
jecxz
int3
rcrb
addb
mov
jne
js
movsl
ffree
inc
cmp
cmp
sbb
mov
inc
outsl
cmp
mov
les
xor
and
aas
jb
aaa
cmp
jl
cmp
mov
leave
movsb
loopne
sbb
mov
loop
or
das
lds
popf
subb
cmp
adcb
sub
mov
jno
push
mov
lods
mov
mov
push
daa
jg
pushf
xor
add
and
push
mov
adc
std
in
pushf
enter
mov
pop
or
ret
aam
es
lds
mov
popa
je
dec
xchg
icebp
insb
cmp
push
xchg
xchg
inc
push
stc
scas
lods
popf
xor
xor
cli
in
sti
xor
rclb
sub
jo
cmp
jl
jbe
mov
ss
xchg
mov
dec
sbb
loopne
add
pop
cwtl
cmp
adc
adc
mov
cmp
xor
add
sbbb
and
fldz
adc
aas
mov
add
mov
cmp
iret
adc
jnp
mov
pop
or
sub
sub
xor
or
rolb
jmp
inc
bound
pop
cwtl
aas
sarl
xchg
stos
insb
xchg
dec
xchg
push
inc
test
xor
fadds
call
mov
cmp
scas
push
clc
popf
dec
bound
mov
pminsw
xor
mov
mov
stc
filds
das
mov
arpl
ljmp
mov
movsb
cmpsb
add
icebp
les
shl
mov
fiaddl
movsl
pop
push
ss
mov
and
mov
push
add
andl
inc
mov
arpl
cmp
roll
movsl
or
sbb
mov
sbb
inc
mov
mov
mov
mov
mov
add
popa
sbb
das
fcmovne
outsl
imul
cwtl
leave
cltd
inc
push
sahf
add
add
jnp
dec
adc
sub
mov
cmpsl
add
dec
roll
ret
adc
insl
js
addr16
pop
daa
lock
mov
aad
mov
test
adc
mov
sahf
stos
sbb
add
nop
imul
and
jns
jge
addr16
mov
mov
movsl
mov
xor
or
in
mov
xchg
cltd
jb
xchg
mov
mov
ret
movsb
dec
jge
mov
mov
pop
stos
fdiv
cmp
or
daa
mov
idivb
lret
into
fldcw
out
xlat
mov
mov
mov
jns
cmpsl
or
mov
movsl
sarb
xchg
enter
cli
mov
push
lea
push
test
roll
lret
dec
sti
xchg
lcall
lret
clc
mov
test
jo
and
add
stos
repz
shr
mov
and
mov
mov
cmp
cltd
mov
fistl
clc
addl
jmp
mov
rolb
enter
mov
pop
xchg
xchg
cmp
shlb
scas
mov
mov
mov
insl
push
test
call
insb
mov
cmp
inc
jb
cmp
fisubl
cmp
xchg
push
jae
sbb
popa
arpl
fstpt
add
jno
jne
and
push
mov
divl
sub
es
cmp
cltd
sub
xchg
sbb
movl
bound
xchg
add
dec
inc
inc
movsl
divb
bound
add
cmpsb
nop
bound
dec
mov
out
test
fcompl
rclb
jns
sahf
or
lds
repz
pop
into
push
pop
mov
lcall
js
idivb
sar
pop
push
mov
cmpsl
jne
lds
pop
mov
jns
sbb
movsb
adc
cmp
push
xor
mov
xor
pop
aam
mov
fdivs
vmwrite
xlat
cmp
inc
mov
or
cmp
outsl
mov
in
in
inc
xor
imul
outsb
mov
pop
push
push
inc
pop
xchg
imul
insb
mov
mov
movsl
dec
bswap
ss
addb
cmpl
jp
mov
add
cmp
mov
add
cmp
cmc
cmp
ret
fwait
jb
call
push
mov
jae
rolb
add
andb
into
ds
add
xor
jmp
sub
jl
sbbb
ja
push
insl
pop
cmpb
jns
in
nop
stos
pop
int3
lahf
mov
cmpsb
push
xchg
and
nop
dec
and
mulb
jp
div
inc
test
arpl
xchg
mov
pop
addl
pop
inc
cmp
fstps
cmp
pusha
pop
push
mov
sti
ret
sbb
stc
das
pusha
fstpt
shrl
mov
fcoml
cmp
xchg
arpl
sbb
xor
sub
jae
dec
or
cmp
cmc
adc
mov
push
int
push
mov
jle
adc
sbb
cwtl
pop
pop
mov
mov
nop
cmp
mov
clc
shlb
mov
out
mov
push
testb
mov
mov
dec
lahf
into
rcll
insl
sub
ret
sub
pop
xchg
jne
test
mov
jle
push
stc
mov
and
mov
cli
sar
gs
and
mulps
ss
aas
in
mov
dec
loope
lahf
hlt
mov
cmp
xor
xor
or
mov
jae
xchg
jns
xchg
sbb
sti
popf
push
xchg
enter
mov
call
in
nop
jno
and
and
addr16
stos
fistl
ss
ds
std
jg
mov
sub
aam
or
addr16
xor
arpl
cwtl
xchg
jno
mov
xchg
cwtl
dec
sub
shrl
pop
addb
mov
add
add
notl
xchg
mov
push
test
adc
mov
adc
dec
mov
cmpsb
enter
jns
testl
lock
es
gs
mov
out
stos
dec
push
and
fimull
movsb
pusha
inc
sahf
or
pop
dec
jle
push
lea
inc
adc
int3
ss
pop
cmp
test
lods
cmp
mov
js
aam
pop
xor
fnsave
sbb
cmp
push
or
push
mov
sbb
dec
shlb
popa
inc
rcll
es
test
clc
shlb
adc
lahf
add
dec
add
jne
inc
lods
test
ss
cmp
gs
enter
mov
or
mov
mov
mov
cwtl
fnsave
jo
sbb
xor
add
insb
inc
cwtl
add
mov
out
cmpsb
jp
or
push
cmp
es
inc
shr
std
xor
lock
pop
cmp
mov
dec
movsl
les
in
xor
bound
clc
add
add
in
in
mov
stos
outsb
mov
ss
mov
test
jo
sub
add
pusha
popa
insb
mov
leave
mov
mov
in
mov
or
mov
sub
mov
xchg
popf
pop
cmpsl
add
std
nop
call
cmp
popa
mov
adc
dec
inc
andl
sbb
and
fsub
insl
push
movsl
cmp
or
sbb
xchg
popf
clc
or
es
lcall
test
pushf
notb
rcll
cltd
enter
dec
mov
adc
mov
fs
jmp
jg
xor
jns
fistl
out
pop
subl
xchg
jl
sbb
mov
and
std
sub
add
inc
xor
faddp
inc
cld
notl
add
cltd
test
pushf
test
cmp
ss
adc
jmp
cmpsl
and
cmp
sbb
jno
cmp
shl
jmp
pop
les
lcall
mov
shl
adc
mov
mov
mov
shrb
ss
push
inc
mov
jp
sub
adc
push
fidivs
call
loope
push
mov
lcall
add
push
addb
cmp
mov
cmp
jns
mov
icebp
and
mov
je
mov
jg
jmp
cmp
popf
fimull
test
mov
movsl
sub
ds
outsb
scas
mov
addr16
add
mov
pop
cmpsl
hlt
jmp
rclb
pop
lock
adc
stos
jl
fisttpl
bound
pusha
pusha
iret
rcrb
ljmp
xchg
les
cmp
jo
dec
xchg
inc
mov
std
daa
pop
pop
pop
mov
mov
out
or
icebp
bound
cmp
pop
repz
cltd
fimull
mov
cltd
sbbl
xor
mov
orb
cmp
mov
jge
addb
cmp
jle
shlb
cmp
loop
cmc
test
idivb
aaa
adc
pop
je
testb
mov
xchg
cmp
popa
cltd
scas
mov
test
inc
adc
and
pop
or
sub
mov
add
test
or
pusha
xor
je
test
dec
jecxz
jmp
scas
xchg
mov
pop
push
repnz
or
jnp
xchg
iret
cmc
lods
cmp
jp
mov
jle
mov
lahf
mov
icebp
sub
testb
inc
imul
xor
adc
mov
xchg
inc
fiadds
add
jle
outsb
sti
sbb
leave
pop
push
cwtl
jno
mov
daa
out
mov
sbb
jae
mov
imul
testb
mov
test
and
cmp
aaa
sbb
or
pop
imul
mov
leave
fsubrl
mov
cmpsb
or
mov
mov
aas
mov
movsl
cltd
pop
test
cmc
and
movsb
cmp
xor
enter
mov
xchg
mov
outsb
mov
into
jmp
test
inc
mov
dec
mov
mov
test
movsb
xchg
add
fcmovnu
iret
stos
adc
pop
sahf
movsb
xchg
cmp
ds
xchg
scas
leave
ds
adc
or
test
and
dec
jno
mov
adc
pusha
fldenv
xchg
mov
push
addr16
mov
or
adc
outsb
ror
and
mov
rolb
adc
jl
ds
lds
repnz
insb
sbb
mov
lock
jmp
popf
repz
pop
dec
ss
xchg
pop
out
aad
mov
adc
pop
je
dec
or
pop
adc
xor
movsl
scas
lret
int3
pop
lock
or
movsl
out
xor
xor
sub
sub
scas
xchg
das
push
inc
mov
push
test
sub
sub
test
test
movsl
jmp
imul
jno
jmp
sub
push
movsl
cmp
cmp
loopne
dec
out
dec
scas
or
xor
and
arpl
mov
lea
in
dec
jb
addr16
out
movsl
sahf
push
or
lret
xor
js
lods
xor
cmpsb
sub
jg
adc
mov
adc
push
mov
fmul
xor
inc
pop
js
inc
adc
jp
cltd
ss
aad
jae
cmpsl
incl
pop
es
add
and
xor
mov
sbb
movsl
in
push
test
cltd
inc
popa
sbb
mov
fisttpl
inc
shlb
js
pop
mov
jne
mov
mov
mov
jne
in
fdivrl
cld
pop
imul
xor
lcall
mov
xorl
fsubs
xor
push
mov
cmp
lods
sbb
add
cmp
or
aad
mov
xchg
inc
mov
pop
cli
add
jbe
adc
jmp
mov
sub
int
es
scas
jno
out
ja
stos
sbb
nop
out
push
mov
imul
leave
jmp
loope
xor
xchg
ja
push
mov
stos
xchg
mov
out
pop
bound
sub
inc
pop
or
test
rcr
mov
adc
popa
movsl
and
lods
movsbl
dec
js
lea
add
pop
in
sbb
bound
or
into
xchg
sahf
movsl
stos
aaa
push
or
icebp
xlat
sbb
pop
mov
call
dec
mov
mov
pop
imul
inc
in
jp
xchg
test
jae
pushf
cmp
jle
jbe
rcl
mov
inc
or
movsl
xchg
nop
imul
mov
fadds
mov
mov
repz
mov
mov
sbb
sbb
mov
out
dec
sahf
aaa
outsl
xchg
xor
fstpl
scas
aam
and
mov
ss
arpl
mov
aaa
andl
addb
sub
mov
pop
lcall
cmp
mov
jge
pop
into
or
bound
inc
jne
sub
sbb
rcr
in
xor
and
cli
xchg
push
mov
mov
imul
mov
inc
out
in
insb
mov
jbe
or
mov
inc
out
inc
sahf
jmp
xor
lret
jbe
mov
cwtl
xchg
push
mov
mov
pop
add
mov
sbb
mov
std
push
cmc
jnp
xor
movsl
and
jg
scas
sbb
lcall
imul
inc
xchg
push
bound
mov
mov
push
mov
test
movsl
adc
movsb
adc
ficompl
pusha
cmp
xor
cli
push
inc
popa
stos
pop
cwtl
xchg
jmp
shll
cli
add
fistpll
jnp
test
or
add
jns,pt
in
loope
jp
cmp
jbe
pop
sbb
jbe
jmp
push
negb
mov
mov
push
ret
pop
pop
stos
mov
mov
mov
mov
shlb
cmp
notb
pop
gs
fnstsw
jnp
mov
inc
cmpsl
add
sbb
jo
mov
push
popa
test
je
inc
xor
mov
cli
and
js
enter
mov
insl
test
xorb
fidivrl
mov
loop
dec
push
bound
popa
enter
js
clc
fwait
push
mov
test
std
cmp
mov
cltd
xorb
int3
and
lret
sub
push
pop
mov
mov
mov
sbb
jb
cmp
pusha
imul
dec
int3
mov
ret
sarl
or
or
push
push
jecxz
or
stos
mov
xor
mov
imul
ja
push
lds
jae
and
es
fdivl
push
xor
mov
clc
ret
and
sbb
sub
fsubrs
jl
cmp
fsubr
xor
mov
jecxz
jg
push
sarb
movsb
dec
stos
scas
push
xchg
and
xor
sarb
fists
mov
sbb
out
mov
xchg
aas
cli
pop
add
mov
movb
movsl
lahf
mov
ds
in
push
pop
mov
mov
inc
insb
int3
mov
cmp
mov
popa
rcrl
shll
xchg
dec
pop
repz
adc
adc
jae
xchg
loopne
loope
movsl
pop
test
ficoml
pop
push
fsubs
bound
xchg
sbb
pop
insb
jmp
adc
insl
adc
mov
test
daa
mov
test
jno
cmp
sub
cmp
xchg
sub
cmp
xchg
mov
sarl
mov
push
scas
scas
nop
mov
js
fldcw
jno
cmp
inc
out
inc
imul
fistpl
aas
adc
js
sub
jns
movsl
mov
mov
push
pop
mov
fnstcw
dec
fidivl
jnp
mov
mov
jbe
mov
scas
stos
xorb
sub
sbb
mov
out
cmp
mov
outsb
out
add
jp
xchg
arpl
sbb
fisttps
sub
in
lcall
stos
sbb
inc
pop
cmp
cwtl
push
jle
leave
mov
jne
shlb
inc
xor
clc
cmp
xchg
mov
push
xor
lods
push
lcall
arpl
outsb
adc
aam
fwait
lods
daa
sbb
insb
dec
stos
sbb
push
ss
mov
push
cmpsb
insb
and
cltd
xchg
mov
inc
jns
inc
mov
and
mov
mov
sbb
std
lock
push
and
daa
arpl
cmp
faddl
in
je
mov
sub
xorb
dec
inc
idivb
pop
rcl
lods
mov
test
aam
pop
lea
xchg
pop
xor
inc
sbb
scas
dec
mov
mov
mov
mov
mov
hlt
and
out
cmp
or
fwait
mov
rcrb
sbb
adc
lcall
nop
icebp
fs
jl
cmp
hlt
test
pushf
adc
mov
movsl
adc
jle
movsl
leave
lret
inc
movsl
mov
pop
mov
ds
mov
lods
mov
cmc
jo
cmp
fs
xchg
jl
inc
subb
dec
inc
dec
int3
inc
aad
jns
xchg
inc
ret
push
jbe
jae
imulb
xor
ret
insl
dec
mov
sub
mov
stos
data16
popf
inc
mov
adc
or
mov
insb
lods
subb
push
push
lods
pushf
and
or
adc
daa
jnp
lret
mov
adc
inc
jne
and
mov
outsl
fsubrs
pusha
lods
mov
jne
out
test
leave
rclb
mov
mov
jl
shll
leave
rclb
inc
sahf
fcoms
mov
dec
sahf
mov
mov
js
hlt
pushf
shll
js
add
sbb
sahf
jbe
std
adc
daa
call
call
sahf
mov
pop
mov
test
pop
call
sahf
mov
es
sahf
jbe
fs
repnz
sbb
stos
and
mov
mov
sub
inc
sbb
mov
xchg
and
xor
sarl
test
jo
daa
hlt
xchg
mov
ljmp
cmpsl
or
arpl
loopne
inc
ret
inc
mov
push
les
addl
stc
pop
pushf
add
ljmp
int
mov
dec
jge
mov
pop
jae
mov
cltd
push
and
mov
sbb
movsl
sahf
imul
mov
push
fcoms
adc
stos
into
and
add
nop
movd
or
inc
push
sub
test
in
pop
loop
pop
push
sbb
jecxz
sbb
mov
add
xor
jo
xor
fcmove
sbb
mov
jb
mov
andb
sub
pop
iret
mov
dec
mov
pop
imul
cmp
mov
aad
jo
leave
imul
stc
push
cmp
dec
test
popa
movsl
mov
nop
cmp
inc
les
push
mov
pusha
push
sbb
mov
bound
movb
test
nop
xor
ret
and
pop
xor
aad
pop
inc
mov
add
jl
dec
jecxz
jp
inc
pop
mov
int
insb
into
lods
maxps
pcmpgtb
aas
dec
test
mul
sbb
push
pop
das
add
jmp
mov
cwtl
ficompl
ret
cmpsb
or
movsl
pop
iret
repz
das
xchg
mov
pop
enter
mov
es
pop
adc
ret
movsl
lahf
das
xchg
jnp
pop
sbb
inc
jb
pop
test
dec
add
push
sarb
pop
movsl
sub
push
jne
stos
negl
mov
jo
outsl
xchg
mov
cmp
push
mov
xor
call
cmp
pop
pop
bound
addr16
loope
and
loopne
movsl
aas
loop
test
and
add
cmp
icebp
stc
arpl
adcb
int3
dec
std
jecxz
push
xchg
sarb
pushf
enter
and
cmp
mov
lock
cmp
icebp
aas
mov
pusha
push
jle
mov
jl
cmp
pop
sub
mov
sbb
mov
sbb
rcr
lret
inc
lcall
pusha
adc
shl
cmp
cmp
sbb
jns
cmpsl
add
push
cmp
cli
hlt
test
faddl
rorb
jle
data16
sbb
jecxz
add
and
cwtl
lahf
imulb
cmpsl
js
mov
icebp
repz
mov
cmp
add
jl
sarl
loope
stc
mov
xor
mov
stc
cld
lcall
call
pop
inc
das
jl
mov
or
adc
sub
and
sub
mov
popf
inc
push
sahf
jl
cmp
fildl
mov
iret
mov
jmp
out
and
leave
fsubrs
jle
in
fcomi
and
ret
nop
es
ljmp
adc
mov
cmp
repz
mov
lods
imul
pop
jp
scas
lock
mov
lock
xorb
jl
mov
dec
ret
inc
jecxz
push
xchg
cltd
cmp
xchg
mov
cmpl
add
roll
out
roll
movsb
aas
ret
jecxz
scas
hlt
sbb
inc
cld
pop
cmp
ficomps
jl
cmc
xor
jg
test
dec
adcb
pusha
push
pop
xchg
das
je
push
sbb
addb
js
mov
or
inc
mov
popa
pop
inc
mov
fsubr
push
pop
add
out
inc
jnp
cmp
imul
and
stos
xchg
js
into
lret
jns
cmp
movsl
cmp
js
jg
xor
push
sbb
push
jmp
lods
mov
adc
iret
pop
dec
sti
test
lret
inc
jb
test
sub
adc
cmp
out
sbb
test
jl
or
pop
xor
aas
int
call
sbbb
ret
push
imul
adc
dec
mov
loopne
push
jbe
mov
sahf
jecxz
or
repnz
jae
xor
sbb
cmpsl
in
cmpsb
ds
in
mov
jb
jne
and
ss
fiaddl
mov
mov
orb
mov
stos
in
adc
xchg
jnp
mov
test
fwait
push
pushf
jl
mov
mov
jnp
sub
les
cmpsl
fwait
popf
pop
xor
addb
push
iret
and
cmp
sub
jecxz
push
jnp
test
rolb
sub
jp
sarb
shrl
mov
xchg
ja
cmp
mov
sub
mov
adc
mov
or
mov
aas
mov
cwtl
movsl
inc
xor
test
push
xchg
dec
insl
pop
cmp
les
out
xchg
add
movsl
sbb
hlt
pop
popa
mov
movsb
mov
ss
xor
cmp
push
adc
ficomps
fildl
xchg
shlb
outsb
mov
xor
mov
outsb
xchg
xorb
das
mov
dec
adc
jge
mov
or
shlb
orb
pop
dec
xchg
repz
or
push
xchg
mov
cmp
mov
outsb
lock
mov
repz
imul
ss
fimull
adc
lods
mov
jecxz
adc
dec
sti
mov
cmp
movsl
pop
addr16
mov
pop
jno
fs
pop
mov
push
fs
inc
scas
loopne
pop
clc
les
pop
xchg
clc
sub
popa
mov
and
cld
xor
and
cmp
out
jle
jmp
sbb
jmp
popa
xor
xchg
aam
and
sub
inc
and
rcrb
add
pop
mov
lods
adc
jo
mov
mov
lea
cmp
jp
push
out
sti
dec
xchg
mov
sub
mov
test
dec
sbb
and
movsl
mov
push
mov
test
inc
add
stos
rcr
daa
push
pop
mov
xchg
sbb
scas
xchg
sub
inc
jle
ds
sub
aad
pushf
cmp
push
lock
data16
xchg
test
mov
cmp
or
pop
mov
negl
push
dec
cmp
mov
push
mov
cltd
lret
call
or
addr16
sub
sub
dec
aad
and
sub
addr16
cmp
data16
popa
mov
mov
outsb
lahf
clc
jp
bound
sub
imul
inc
sarb
repnz
mov
sbb
mov
outsb
pop
push
mov
push
filds
leave
dec
add
sbb
cmp
cmp
mov
movsl
sub
in
out
sahf
mov
jae
fstpl
dec
add
test
xchg
mov
mov
mov
cmpsl
bswap
jl
inc
sbb
mov
xchg
and
movsl
inc
mov
jmp
inc
cmc
ss
insl
xchg
mov
movsb
jnp
ficoml
dec
jp
movsl
xchg
mov
ret
add
adcl
sti
loopne
cld
xlat
cmp
and
lahf
std
jno
test
xchg
mov
mov
aad
add
outsb
sar
xor
mov
fistpl
popf
sub
mov
ret
shll
fwait
inc
mov
add
aaa
sub
icebp
push
pop
pusha
inc
mov
mov
shl
pusha
ror
pop
int3
cmp
mov
lcall
enter
cmp
les
in
jbe
loop
xchg
jns
mov
mov
fnsave
xor
cmp
push
or
jbe
cmp
out
mov
pop
xchg
dec
fs
push
push
xorb
das
or
cmp
xor
jp
int3
adc
dec
cmp
cmp
xchg
pop
mov
adcl
ss
cmpsb
jne
xor
rol
testb
lcall
jne
jge
mov
bound
and
ss
es
std
test
sub
mov
mov
divb
mov
adcb
dec
push
pusha
pop
lret
jnp
jp
adc
cltd
hlt
cmp
out
lods
pop
push
xchg
icebp
movb
sub
inc
js
mov
stc
mov
jg
sahf
add
sub
xchg
pusha
idivw
ja
mov
mov
push
jge
pusha
roll
jmp
pop
stos
pop
or
xadd
inc
mov
inc
or
mov
sbb
sbb
pop
mov
inc
cmpsb
clc
add
mov
push
xlat
xchg
sbb
mov
xor
popa
sbbb
push
add
jnp
repnz
subb
push
mov
mov
fwait
scas
out
push
xor
or
orb
pop
in
fcmovb
mov
mov
movb
sub
pop
mov
push
or
lods
lcall
sti
ret
pop
test
mov
inc
popa
pop
inc
adc
cmp
gs
cltd
add
mov
fs
dec
ja
icebp
sbb
xor
push
movsl
add
and
mov
out
add
xor
mov
jns
lret
bound
xor
scas
lds
int3
sbb
cltd
xchg
jecxz
pusha
aaa
push
cmpsb
sbb
sub
fdivs
dec
dec
mov
inc
fimuls
popa
sahf
sahf
loopne
xor
mov
fdiv
and
fdivl
or
mov
fstpt
jmp
push
rorl
movsl
out
jne
cmp
sub
jl
jp
xchg
fs
rcrb
shlb
rolb
mov
and
inc
xchg
int
fcomi
sbb
mov
imul
push
cmp
add
xorb
sahf
aam
mov
in
shl
cmp
movsl
add
xor
pop
std
fdivrs
lcall
xor
imul
sbb
arpl
jo
loope
inc
mov
push
fcomps
arpl
jo
sub
test
test
pop
out
adc
pusha
adcb
shrl
push
data16
push
cwtl
addl
push
mov
sbb
subb
cmp
jp
rorb
jmp
sub
dec
jo
mov
xchg
xor
cmp
sbb
add
mov
dec
lock
adc
out
movsl
clc
push
test
test
or
push
and
pop
scas
shrl
xor
jmp
and
movsl
scas
xor
or
inc
orl
inc
sbb
ss
stos
push
inc
or
jb
jnp
cmp
mov
cwtl
inc
lea
addr16
cmp
aam
jg
nop
scas
jecxz
xor
into
xchg
dec
movsl
sbb
adc
dec
pop
adc
adc
adc
imul
dec
outsl
sbbb
cmpsl
lret
stos
and
adc
xchg
mov
mov
inc
sbb
mov
pop
data16
popa
leave
shrb
mov
pop
arpl
jae
sbb
insb
in
mov
sub
cmp
lret
mov
lret
aam
mov
push
movsl
mov
push
sub
sbb
mov
lretw
mov
lret
jl
pusha
inc
int
enter
in
sbb
lret
xor
sub
insl
aad
xor
inc
ret
pop
lea
inc
shll
mov
push
pop
frstor
shll
jae
mov
mov
mov
pusha
movsl
stos
dec
daa
loop
shr
jns
inc
leave
mov
xchg
daa
inc
or
fstp
aad
inc
dec
fcoml
adcl
add
scas
into
cmp
test
scas
movsbl
movsl
jmp
scas
jns
xlat
adc
std
mov
jns
push
or
nop
mov
xchg
xchg
mov
cmpsl
mov
pop
and
pop
mov
adc
jo
mov
test
addr16
inc
and
sbb
mov
repz
fstl
sbbb
xchg
cmp
sbb
enter
add
je
cmp
inc
xorb
idivb
out
int3
xor
mov
inc
test
stos
adc
mov
pop
or
cmp
inc
bound
push
loopne
mov
and
mov
mov
in
push
std
aas
ss
xorl
int
push
fisttpll
jmp
ds
and
add
les
clc
fucompp
or
cmpsl
mov
lret
xlat
cmp
or
daa
sbb
add
sahf
pop
push
jle
adc
xlat
mov
push
adc
ret
mov
cmpsb
fimull
inc
movsl
pop
cmp
and
test
inc
fmul
arpl
pushf
lods
lcall
fldl
sti
xor
mov
cld
shll
xchg
cmp
jne
cmp
xchg
test
clc
push
pop
leave
inc
in
ret
arpl
in
stos
and
shrb
sbb
dec
or
dec
mov
mov
push
sbb
mov
aas
pop
aad
push
lods
pushf
jle
inc
xor
mov
ds
pop
jecxz
loope
pop
addl
add
mov
fistpl
out
cli
fs
jl
or
stos
mov
jge
pop
scas
test
int
sbb
loopne,pt
adc
adc
mov
stos
fadds
add
sub
ds
pop
or
mov
pop
cmp
push
aaa
mov
popf
pop
mov
outsb
sar
mov
sti
pop
out
movsb
cmp
add
mov
sti
push
out
mov
insb
mov
jp
movsl
outsb
int
daa
mov
cmp
push
dec
mov
mov
mov
xorb
push
and
dec
mov
mov
adc
sarb
jecxz
sbb
daa
outsl
dec
xchg
adc
add
fdivrs
mov
inc
jo
xor
lods
jge
in
sbb
arpl
scas
lret
sbb
xchg
dec
rcll
dec
aas
stos
cwtl
jno
pusha
loopne
mov
jg
jne
adc
push
leave
cld
fldcw
shlb
mov
mov
jmp
fsubs
stos
in
js
rcll
adc
xor
in
je
fldl
jbe
push
cmp
mov
ss
add
testl
lock
pop
cmp
jne
mov
and
sub
mov
into
fadd
insb
in
cmp
mov
mov
pop
jg
aad
rcll
repnz
stc
clc
inc
shll
mov
xor
lret
rol
out
add
repnz
mov
pop
push
mov
mov
shlb
xchg
push
xor
inc
lea
jo
mov
mov
pop
test
dec
lcall
mov
sub
gs
fimull
dec
fistpl
testl
call
dec
les
scas
fsubs
out
adc
popf
daa
jbe
xor
movsl
jle
fs
fiaddl
sbb
adc
mov
andb
xor
int3
xor
inc
jb
lds
mov
movsl
mov
adc
mov
adc
lret
push
mov
add
test
jae
mov
xchg
sbb
adc
push
adc
xorl
inc
movsl
adc
adc
pop
inc
xor
shrl
shll
cmp
xor
das
sbb
movsl
nop
pop
xor
sub
cs
xorb
jnp
sbb
push
fsubs
xchg
fcmove
dec
jo
inc
mov
stos
dec
insb
inc
scas
push
paddusb
xchg
mov
ret
popa
cmp
and
frstor
dec
sbb
inc
cmp
ljmp
cs
mov
dec
sti
sahf
pusha
inc
shr
push
jmp
test
xchg
mov
jp
dec
in
or
xor
call
jp
mov
mov
jmp
cmp
std
mov
xor
xor
fs
das
mov
adc
mov
fcoms
fcoms
daa
std
pop
cmp
dec
xchg
stos
xchg
cltd
fnstsw
cwtl
jmp
notl
inc
xor
addl
jecxz
and
add
fdivrs
and
dec
and
inc
mov
lahf
inc
push
dec
pop
mov
mov
lret
jbe
mov
cltd
and
xor
push
xchg
inc
test
mov
inc
sahf
adc
xchg
out
pop
xlat
jne
inc
or
xchg
or
lret
pop
mov
and
push
fstpl
xchg
inc
mov
loopne
into
cli
sub
test
movsl
out
pop
mov
stc
sarb
mov
inc
popf
mov
sub
fs
movsl
cmpsb
push
fistps
pop
or
ret
out
mov
pop
test
dec
movsl
xchg
mov
jecxz
pop
add
js
sarl
push
loop
xlat
pop
push
sub
cwtl
mov
daa
orb
xchg
adc
pop
aam
add
data16
pushf
adc
xchg
bound
or
pop
jge
xchg
sahf
adc
jae
aas
mov
aas
ss
xchg
bound
dec
shlb
and
sub
popa
ljmp
mov
inc
int3
mov
fildl
nop
inc
mov
jae
cmp
jmp
pop
test
out
stc
mov
fs
adc
in
cli
mov
into
push
inc
test
dec
push
aas
movb
lahf
cmp
data16
gs
andb
push
insb
sbb
push
popa
movsl
pop
or
or
stos
inc
push
inc
mov
mov
pop
int
test
jae
outsb
xchg
adc
scas
and
pop
mov
pop
mov
cmp
rcll
pop
mov
aam
ret
dec
fisttpll
sti
sbb
dec
sub
fwait
mov
dec
mov
movsl
inc
rolb
sti
jbe
ret
nop
push
rcrl
push
out
ret
push
idivb
cli
aad
xchg
cmp
jb
dec
lea
lahf
mov
mov
mov
imul
mov
xchg
cmp
xchg
je
add
movsb
xchg
jp
scas
xchg
and
push
sarl
mov
inc
lcall
testb
daa
xchg
pop
xchg
notl
lret
mov
jae
xchg
mov
dec
imul
fsubs
das
arpl
inc
jl
inc
ficoml
xor
es
cmp
xor
leave
iret
jmp
jbe
inc
and
push
jmp
adc
enter
mov
mov
sbb
lahf
mov
add
push
rclb
lret
jo
dec
mov
mov
mov
sbbb
das
insl
inc
cmpsb
push
call
jbe
jp
addb
movsl
popa
arpl
js
fdivrs
and
sbbb
sbb
aam
push
fidivrl
sarb
sub
lods
mov
push
loopne
outsb
mov
ss
js
xor
jp
lds
fcoml
and
or
dec
jae
cmp
or
push
bound
sbb
aaa
test
dec
push
inc
or
pop
stos
cltd
or
out
out
call
or
sti
pop
sarb
popa
jle
stc
daa
jle
stc
inc
jle
stc
addr16
xchg
xchg
loope
sub
jbe
ds
cmpl
and
inc
ds
jbe
ds
movsl
add
test
cmpsb
ja
loop
int
add
mov
leave
loope
add
lcall
iret
adcb
mov
xchg
ds
push
add
mov
mov
into
pop
inc
cmpl
inc
cltd
push
mov
ret
xlat
xor
repnz
fld
adc
out
cli
aas
shll
mov
inc
testb
fsubrs
push
inc
outsb
lret
iret
aaa
scas
mov
jno
mov
insl
fcmovbe
push
ret
movsl
push
mov
fidivrl
mov
fcom
out
inc
pop
ret
cmp
push
out
mov
xor
mov
cmpb
xor
fsubr
pushf
jge
loopne
mov
es
push
outsl
mov
mov
int3
test
nop
cmp
cmp
rep
pop
ret
and
inc
scas
mov
jo
mov
lret
add
xor
cmpsb
jl
mov
sbb
jle
inc
jb
pop
movb
mov
adc
lahf
mov
mov
mov
add
adc
addr16
mov
testb
lahf
fidivrs
mov
inc
and
popa
mov
cmp
pop
dec
push
leave
mov
test
mov
int
mov
fs
jmp
xchg
jo
add
jp
xchg
pop
jnp
clc
faddl
js
jecxz
pop
cwtl
shrb
sub
sub
inc
mov
mov
orb
push
and
scas
sahf
xorb
cli
sbb
scas
cmp
inc
xlat
cmc
cmp
jne
lret
stos
fs
xchg
movsl
in
cwtl
cmp
ret
inc
in
jle
cmp
push
cld
jns
dec
add
dec
loop
mov
clc
adc
jmp
andb
sbbb
jns
enter
xorl
frstor
mov
cmp
adc
push
or
loope
mulb
xor
xor
pop
into
adc
sbb
ljmp
sub
js
cmpl
cwtl
scas
pop
fldenv
lret
add
js
xchg
jle
stc
push
pop
mov
add
aam
sub
xchg
inc
mov
xor
sub
cmp
icebp
pusha
adc
cmp
inc
cmp
data16
mov
mov
hlt
and
mov
and
fisubrs
inc
pusha
inc
cmp
outsl
dec
fistpll
cltd
adc
or
pop
rcrl
arpl
mov
mov
aas
inc
ds
add
add
js
pop
add
rorb
add
jp
bound
movsl
add
inc
sti
mov
movsl
mov
cmp
xchg
and
push
imul
inc
fldln2
stc
test
or
shrl
scas
sbb
outsl
fs
push
xchg
add
es
xchg
pop
mov
sti
sub
push
jp
cmpsb
dec
bound
call
sarb
repnz
sbb
xor
mov
mov
jmp
repz
cmp
jle
and
fidivrs
fidivl
inc
and
mov
pop
int3
leave
and
mov
pop
icebp
jecxz
cmp
sub
add
rcll
push
bndstx
enter
pop
xchg
cmpl
jmp
incl
ss
lds
sbbb
xchg
sti
sub
leave
fimuls
xor
popa
aaa
es
rol
fnsave
test
mov
popf
outsb
pop
push
shll
push
mov
sub
inc
fcomp
adc
add
jp
add
or
dec
mov
jne
pop
aas
cmp
orl
shl
cs
shll
xchg
jb
jp
cmp
movsl
jl
jecxz
jmp
xchg
rcll
inc
movsb
loope
fsubrl
or
popf
inc
daa
int3
sub
xchg
int
and
pop
jb
inc
sub
outsb
xor
push
sbb
ret
mov
mov
xor
stos
mov
adc
xchg
inc
mov
test
xorb
add
dec
sub
inc
in
movl
les
and
mov
scas
out
and
mov
jecxz
in
jmp
inc
pop
inc
dec
fwait
sub
fistl
pop
jnp
mov
cwtd
repnz
in
or
leave
or
jns
jecxz
insl
xor
es
pop
jns
xchg
dec
ljmp
pop
mov
and
inc
xchg
mov
mov
mov
sbb
xchg
imul
and
dec
mov
idivb
add
push
pop
mov
test
icebp
subb
cmpsb
mov
jne
inc
repnz
sub
xchg
xor
pusha
subb
jb
pop
inc
inc
xchg
xchg
insl
and
cmpsb
adc
addb
jo
mov
cwtl
sti
movzwl
sti
daa
psrld
jae
les
mov
shlb
sbb
js
fnstenv
iret
pushf
cmp
xchg
out
aas
and
sub
pop
push
mov
mov
push
adc
mov
sbb
jle
cmp
fstl
mull
outsl
shl
mov
imul
xor
imul
std
adc
adc
test
add
call
mov
push
test
sub
sbb
cmp
outsb
xor
in
addr16
inc
leave
adc
mov
sbb
test
out
lock
lds
mov
and
ret
xlat
clc
sbb
mov
or
enter
mov
dec
orl
in
lock
scas
test
sub
add
inc
cmp
xchg
jp
sahf
sbb
jns
jne
dec
or
xlat
push
inc
mov
inc
mov
andb
pusha
fstpt
xchg
imul
sahf
stos
cmpb
sbb
pop
leave
adc
cmp
call
out
cmp
repz
cwtl
inc
mov
push
cmp
xchg
ja
popf
or
scas
adc
mov
movsl
and
addr16
xor
fsub
or
pop
rcrl
xor
jle
fldt
mov
ss
call
push
mov
adc
loopne
dec
xor
pop
xchg
pop
pop
test
bound
sub
ds
movsl
andl
imulb
jmp
xchg
push
lock
dec
std
push
xchg
pop
les
int3
ds
clc
cmc
cmpsb
push
sahf
shrb
arpl
and
adc
and
imul
inc
stc
add
mov
jl
aas
fcmovnu
jns
adc
cmc
sub
js
push
push
andl
test
xchg
sti
pop
cmp
adc
xor
cltd
sbb
gs
sub
push
test
stos
push
sti
fstl
das
cmpsl
cwtl
loop
js
fnstenv
pop
add
push
clc
pop
enter
push
pop
add
imul
inc
mov
les
mov
sbb
and
fwait
mov
pop
pusha
push
sbb
cmp
andb
pop
shrb
roll
pop
mov
fildl
orb
pushf
mov
lret
push
inc
or
inc
and
leave
sahf
sbb
mov
ja
ret
push
stc
inc
fisubrl
insb
cmp
adc
fidivl
sub
inc
and
xchg
rclb
add
out
stos
ds
cmp
pusha
jmp
mov
cmpsb
fiaddl
mov
jg
mov
roll
adc
mov
xchg
aam
stos
cmp
cmp
push
adc
jo
popa
xor
add
mov
testl
inc
lock
xchg
subl
jmp
icebp
mov
jbe
mov
lcall
and
mov
pop
pop
jno
fistpll
mul
adc
lret
inc
sti
push
and
out
sub
test
mov
clc
shrl
mov
mov
js
test
push
mov
dec
bound
scas
lret
add
inc
repz
cltd
lods
arpl
shlb
push
adc
jg
fisubrl
adc
ret
xchg
loopne
jp
inc
xchg
pusha
inc
push
icebp
leave
repnz
mov
bound
mov
sub
push
outsb
cmp
sbb
xor
pusha
xor
rcrb
sbb
repz
jmp
pusha
test
fsts
jbe
sbb
lock
in
jp
pop
add
shll
mov
dec
add
cs
pop
out
mov
mov
inc
adc
cmp
fcmove
outsl
sbb
adc
cmp
mov
inc
stc
mov
jno
arpl
gs
or
sub
cmpl
mov
add
cmp
sbb
std
scas
in
mov
aam
pop
jle
rcr
addb
mov
clc
rcrb
push
ss
movsl
pusha
or
inc
mov
orb
push
fmull
loop
sbb
xor
pop
jbe
addb
pop
jmp
mov
dec
mov
bound
cs
dec
dec
clc
push
rol
cmp
xchg
xor
jl
jmp
mul
cltd
mov
mov
xor
movb
jbe
cmpsb
jecxz
mov
movsl
xor
xor
pop
mov
pushf
mov
movsl
and
cmpsl
and
jns
imul
jo
cmp
and
das
les
pop
cmp
fisubrl
xor
cmp
lock
cmp
icebp
xor
xor
inc
inc
cvtps2pd
xlat
jns
stos
out
xor
sbbl
pop
dec
cmovno
loope
push
gs
outsb
inc
call
loop
fistpl
int
inc
rcrl
mov
testb
imul
out
sub
fcompl
dec
mov
push
daa
sbb
mov
adc
out
daa
pop
popf
scas
stos
push
inc
xchg
icebp
test
leave
mov
into
mov
or
data16
mov
jg
lods
shll
xor
xchg
xor
mov
and
cmp
xchg
jl
cmp
lods
fildl
mov
xor
jb
loopne
pop
xchg
cmp
loopne
fsubrs
aaa
adc
cmp
push
xor
aaa
cli
imul
pop
jo
mulb
pop
sarl
ror
xor
ljmp
jmp
xchg
mov
cli
es
jl
mov
icebp
pop
pop
sub
push
movsl
inc
adc
fstl
lock
cmp
out
fcomps
mov
pop
mov
stos
iret
mov
cmp
dec
popl
push
movsl
sbb
xchg
and
movsl
dec
test
push
lods
xchg
xor
pop
mov
xchg
cmpsl
fnstenv
jns
test
pusha
bound
nop
cld
imul
pop
xor
lcall
sub
fisttps
rorl
inc
loopne
or
pop
addr16
sbb
mov
inc
fwait
xor
in
cmp
js
popa
adc
iret
int
mov
cmp
outsb
popa
push
cwtl
mov
enter
xor
mov
adc
or
mov
aam
add
xchg
enter
into
lods
cmp
xchg
cwtl
dec
test
mov
add
cltd
ds
pop
shrb
push
test
or
and
pop
out
inc
inc
int
ja
adcb
jle
mov
ja
xchg
mov
jns
andb
push
pushf
rcll
cmpsb
mov
pusha
shlb
cmp
xchg
push
mulb
cltd
xchg
xchg
movsl
out
mov
mov
bound
gs
repnz
pop
pop
movsl
movsl
out
dec
mov
pop
inc
xchg
jno
add
pop
shrl
ss
jle
popa
jmp
ja
cmc
cmp
mov
jns
bound
cmp
fmul
sub
xor
rcr
lret
mov
ret
pop
popa
inc
jb
push
jns
push
jmp
add
sub
xchg
and
mov
add
lret
bound
subb
adcl
cmp
pop
jmp
fisttpll
repz
out
mov
jle
xor
iret
pop
mov
jmp
cwtl
push
push
jl
mov
ja
sub
cli
dec
jne
popf
movsl
mov
das
add
mov
movsl
icebp
push
cmp
push
mov
cmc
out
shlb
cmpsl
jne
cli
inc
ds
xchg
bound
aad
inc
mov
insb
cmp
mov
rcll
addl
clc
xor
inc
mov
jnp
fidivrs
mov
add
std
xchg
cld
jmp
fyl2xp1
test
cmc
pop
push
loope
add
mov
push
cmp
dec
cmpsb
push
test
aas
and
inc
lahf
mov
add
fsts
jecxz
add
pop
sbb
dec
sub
pop
mov
xor
mov
adc
cli
lahf
cmpsb
daa
test
stos
add
mov
loopne
js
loopne
scas
push
xchg
jbe
push
or
sub
mov
push
inc
addb
rorb
and
loop
and
and
jno,pn
inc
inc
push
pop
xor
jne
and
pop
inc
and
nop
cwtl
mov
std
iret
mov
sbb
mov
popa
mov
xorb
rcll
repnz
add
gs
out
mov
pop
sbb
inc
fidivrl
push
iret
lcall
in
push
mov
sbbb
or
add
mov
dec
mov
popf
fistl
push
mov
fnsave
adc
xchg
ret
inc
mov
xor
push
mov
adc
out
stc
inc
bound
push
xorl
clc
jg
movsl
hlt
push
adc
aas
leave
jmp
jg
imul
mov
sub
mov
sbb
pop
mov
push
lea
mov
adc
xor
push
dec
out
loop
jp
in
cmp
pop
out
andb
scas
mov
cmp
mov
pushf
mov
adcb
mov
xor
mov
mov
sarb
cmpsl
fcomi
and
pushf
or
mov
sti
adc
movsb
pop
in
js
pushf
push
pop
xchg
jno
dec
xor
mov
ljmp
pop
add
pop
ret
xorb
jnp
in
inc
xchg
mov
icebp
mov
mov
mov
aas
sub
add
xchg
je
mov
xlat
add
scas
push
jg
push
jge
add
ret
cmp
push
xchg
test
inc
mov
add
stos
test
add
mov
addr16
jle
cmp
jmp
ds
dec
cltd
mov
pop
mov
mov
int3
inc
loope
std
xlat
add
add
stc
xchg
add
mov
xor
mov
inc
pop
mov
cmp
rcll
jge
roll
insb
mov
mov
inc
pop
mov
xor
jno
enter
mov
call
mov
rclb
cmc
mov
and
enter
aas
call
loopne
call
jb
adc
cmp
cmp
mov
popa
and
jne
xor
push
nop
jge
cmp
adc
xorb
pop
subl
iret
rcrb
xlat
sbb
inc
rcll
loopne
fidivl
xchg
shlb
aad
rorl
lds
test
xchg
dec
pop
pop
scas
inc
inc
sub
jle
pop
xchg
shl
pop
fadds
pop
push
stc
loope
cli
push
push
xlat
mov
push
lahf
or
jbe
rorb
movsb
mov
mov
cld
or
subb
lret
inc
js
cmc
jle
add
mov
cmp
in
data16
int3
pop
stc
mov
add
or
and
js
mov
cmp
shrb
xor
jns
stos
push
cmp
jmp
sbb
mov
mov
lahf
es
dec
inc
or
cmp
daa
icebp
gs
dec
sub
ss
add
xor
fisttpll
push
xlat
adc
mov
cmp
jns
test
mov
in
std
sbb
jge
cmp
call
inc
push
mov
ds
xor
lret
out
jne
inc
pop
pushf
mov
jbe
mov
jg
loop
scas
leave
or
test
sti
rcrb
mov
mov
les
inc
or
jge
push
stc
inc
fidivrl
clc
popa
mov
daa
or
sub
xlat
sub
subb
in
mov
shr
push
cmpsl
jno
stos
in
and
loop
fs
test
inc
mov
fiadds
xor
fcmovnbe
push
mov
mov
mov
cld
mov
sbb
cwtl
cmp
in
cltd
cltd
repz
mov
mov
loopne
push
mov
fcoml
inc
outsb
push
shll
mov
addr16
jmp
shll
push
test
out
push
outsl
cmpsl
jns
mov
sti
cmp
cmp
adc
mov
push
dec
sti
add
scas
xor
adc
sbbb
pusha
sub
ds
xchg
push
cmpb
push
sbb
sbb
jbe
mov
mov
fs
loop
mov
mov
pop
icebp
aas
ja
stos
adc
ds
mov
cmp
cmc
leave
hlt
bound
out
push
in
mov
outsl
push
jge
outsl
xchg
scas
out
nop
jmp
mov
stc
mov
push
fldenv
rcrb
sub
popf
lahf
mov
leave
xor
jns
pop
inc
xchg
outsl
mov
idivb
inc
in
xor
scas
pop
jle
pop
testl
jno
mov
pop
popf
dec
ja
andb
dec
in
inc
and
mov
pop
inc
pop
out
mov
ljmp
stc
or
xchg
jmp
outsb
lds
cwtl
sub
inc
sbb
sbb
cmp
jle
xchg
jo
mov
push
subb
jnp
dec
lahf
nop
sbbb
jmp
jp
js
in
cmp
cmpsb
inc
pop
fldt
xor
push
or
adc
out
test
dec
insl
jno
jge
mov
push
xor
jmp
test
stc
cwtl
movsl
xor
pop
inc
xor
jbe
inc
cmc
cwtl
push
jle
inc
cmpsl
jp
adc
xchg
sbb
mov
mov
jge
lcall
cmp
movsb
ja
mov
cmp
adc
adc
mov
jmp
mov
notb
lods
sarl
jle
nop
inc
dec
mov
adc
pushf
sbb
pop
addr16
movsl
lret
test
mov
mov
adc
sbb
jns
int
lahf
xor
sub
xchg
or
ss
mov
or
pop
rorl
test
push
jp
dec
adc
jmp
mov
sbb
pop
mov
sub
mov
pushf
movsl
jae
push
mov
mov
in
sbb
lods
out
dec
cmp
or
icebp
sub
mov
pop
xor
mov
nop
mov
mov
cwtl
push
dec
mov
lcall
mov
cmp
sub
shll
sbb
popa
mov
movl
inc
push
jg
dec
mov
ret
mov
mov
xchg
std
xor
push
pusha
dec
fs
lahf
xor
push
shlb
ret
mov
push
fidivrl
int3
jns
inc
addr16
or
shll
pop
mov
out
xlat
test
nop
xor
lods
mov
and
call
dec
int
aas
orl
and
aad
lock
adc
js
outsb
test
pop
insl
jle
shlb
jmp
outsb
negl
cs
sbb
cmp
aaa
loopne
dec
imul
addb
shlb
and
out
cli
jge
inc
fs
inc
sti
jl
cmp
or
into
jp
enter
push
xchg
out
inc
adcl
pop
xchg
lock
insb
icebp
pop
mov
sub
in
icebp
xchg
and
push
enter
stc
test
lret
adc
roll
daa
mov
test
sub
in
jl
rcrb
pusha
push
repnz
imul
pop
iret
sub
mov
stc
ret
sbb
xchg
push
cmpsl
adc
adc
add
pop
sbb
sbb
pop
pop
addl
sbb
pop
xor
gs
or
nop
aas
jp
gs
mov
call
int3
mov
sub
fistps
data16
mov
outsb
cwtl
mov
icebp
scas
jno
xor
sbb
sbb
cltd
ja
pop
ds
xor
jno
pop
mov
jp
jbe
mov
inc
repnz
sub
jmp
mov
mov
call
xchg
mov
loop
sub
cmpsl
cmp
out
popa
cmp
outsl
add
stc
adc
sti
and
pop
or
inc
cmp
dec
inc
ret
and
test
xor
pushf
inc
sahf
pop
mov
nop
adc
data16
call
jg
js
test
mov
mov
add
adc
push
mov
xchg
mov
adcb
push
xlat
aaa
sti
imul
dec
addb
inc
xchg
loopne
mov
shl
cmp
adc
xor
stos
cwtl
sub
addr16
loop
mov
adc
inc
rcl
adc
stc
ds
out
frstor
jecxz
mov
jp
sub
mov
outsl
mov
adc
add
lret
fadds
adc
cwtl
jnp
push
lea
or
mov
xorb
cli
shlb
cmpsl
pop
mov
cli
loope
sbb
adc
mov
xchg
push
ds
addr16
mov
sub
repnz
mov
test
and
shr
xor
cmpsl
add
daa
in
jnp,pn
repz
adc
adc
mov
movsb
xor
pop
shlb
arpl
and
test
push
xchg
add
aad
cwtl
inc
jne
add
cmp
push
mov
in
in
xchg
sti
movsl
outsl
movsb
cmc
jge
lds
cmpsl
cmp
inc
xchg
xor
push
inc
in
mov
xchg
repz
push
negl
push
sahf
xchg
xor
idiv
xor
inc
arpl
jge
shll
call
mov
icebp
mov
mov
test
icebp
adc
gs
push
lea
jl
lahf
fdivs
or
popa
bound
fdivrs
lcall
pusha
pop
push
mov
pusha
movsl
sbb
sub
insl
pop
cmp
mov
clc
sbb
fldt
adc
das
in
ss
ljmp
stc
pop
add
stos
pop
jbe
clc
aas
adc
pop
jge
jb
mov
fcoml
int3
xchg
ficompl
cmp
pop
mov
stc
xor
mov
push
adc
daa
int3
lret
fwait
lods
rcrl
insl
mov
mov
fstpl
cmp
jecxz
pop
mov
std
adc
dec
jmp
adc
lret
dec
mov
sub
fmul
adc
ds
push
fs
mov
sbb
fs
orb
jns
loope
add
es
lock
pop
mov
test
cltd
loop
mov
sub
sbb
cli
in
xchg
jp
outsl
xorl
cmp
xchg
orb
repz
xchg
pop
cmpl
cmpl
dec
sti
or
jae
add
fcoml
sub
cs
test
adc
sub
fsubrl
ljmp
mov
adc
xor
sbb
push
mov
cltd
cwtl
rcll
mov
inc
mov
daa
jbe
shlb
cwtl
mov
lds
or
adc
ret
ds
fnstsw
sbb
mov
fadd
xchg
add
add
mov
dec
sbb
xor
jmp
xchg
fsubr
mov
sbb
mov
mov
hlt
movsl
in
sbb
test
mov
adc
pop
mov
pop
cs
or
cmp
loop
jle
outsb
pop
pop
jae
mov
jne
lea
fmuls
mov
leave
or
jo
aas
push
jp
movsl
fwait
and
loope
imul
sub
sbb
int3
jo
sti
xchg
cmp
sub
and
mov
cmpsb
dec
push
mov
push
jno
andl
push
xor
ds
ds
adc
outsl
or
cmc
and
popf
fs
pusha
clc
rcrb
fdivrs
mov
jle
addr16
stc
xchg
lea
pusha
and
push
jge
cmp
push
lods
adc
mov
jmp
mov
mov
mov
pop
or
ret
jp
rcrl
pop
jl
inc
sub
in
scas
xchg
js
jl
inc
adc
cmpb
insl
inc
adc
cmc
rorb
xchg
es
pop
mov
cmp
jp
or
adc
notl
lahf
in
add
push
gs
push
loope
scas
test
idivl
xchg
mov
inc
jl
cmp
cld
out
pop
ret
sbb
or
or
mov
cs
dec
insb
outsb
std
inc
push
data16
stc
pop
jns
gs
jecxz
movsl
jecxz
or
pop
pusha
xchg
lock
cmp
mov
sub
add
cmp
mov
fistps
mov
lds
movsl
outsl
inc
or
xor
je
inc
adc
inc
mov
cmp
jae
fnstsw
xchg
jecxz
mov
int3
and
or
sub
lods
cmpsl
call
cs
mov
cmp
cmc
es
and
cmpb
inc
data16
inc
jg
outsl
int3
or
shll
pop
test
mov
mov
test
xlat
xor
cmp
inc
mov
nop
fnsave
test
sarl
or
or
mov
xchg
orb
add
mov
ret
add
or
mov
cld
addr16
lcall
pop
lret
mov
std
xor
cld
and
sti
adc
movsl
das
imul
or
lods
pop
shll
imul
setno
mov
test
sub
icebp
sbb
add
cltd
push
fadds
add
cltd
mov
mov
aaa
rcrb
mov
cmc
mov
mov
jae
pop
imulb
mov
pop
adc
test
bound
push
test
dec
cmp
mov
push
mov
xor
lds
add
dec
adc
sbb
xor
or
scas
vmovshdup
in
sub
jge
cmpsb
cwtl
jne
in
int3
sub
add
test
movsb
dec
scas
xchg
xchg
push
mov
into
sub
sbb
xor
mov
pop
movsb
xor
data16
jle
testb
sub
jge
xor
mov
aam
lods
or
fstpt
pop
mov
cmovs
inc
roll
fisubs
inc
test
xor
or
inc
aas
sahf
mov
js
stos
in
sub
repz
movsl
xchg
xor
in
out
test
lods
mov
cmp
mov
data16
notl
sub
rol
jne
cmp
cli
jl
dec
lock
sub
jle
cmp
ficoms
adc
mov
cmp
xchg
push
hlt
mov
lds
pop
stc
push
cmpsb
mov
ret
mov
adcl
jae
xchg
pop
rolb
ret
sahf
into
jmp
or
loopne
jge
and
dec
and
cmpsl
gs
lds
ljmp
js
fs
inc
jmp
popa
mov
rcrb
imul
ds
adc
mov
mov
shrd
jbe
push
and
fstps
in
adc
and
cmp
into
andl
or
movsl
fldl
sbb
push
popa
or
cmpsb
fcmovne
mov
aas
xor
jg
push
lcall
jns
pop
fdivrl
mov
movsb
jp
inc
dec
jbe
mov
xchg
jo
adc
sub
int3
imul
or
bound
shl
push
jg
mov
mov
lcall
jne
cmp
adc
push
jle
out
cmp
inc
adc
add
push
clc
daa
fs
jns
popl
lds
and
mov
cld
and
xor
sbb
fsubrs
in
push
adc
jne
popf
clc
cltd
adc
xor
rcll
mov
sbb
jae
cmp
sub
push
push
fldt
mov
outsb
cmp
leave
rol
sub
push
movsl
enter
mov
lds
divb
mov
jnp
insb
jnp
push
push
xchg
lahf
inc
out
ret
pop
hlt
mov
rolb
clc
lea
jecxz
mov
push
sarb
dec
mov
mov
loopne
stos
adc
cmp
scas
in
jecxz
loop
outsl
popf
mov
push
push
inc
jno
roll
jge
into
mov
sub
pop
mov
notb
cmpsl
push
pop
xchg
xor
cli
sti
in
jge
add
mov
sbbb
jae
xchg
ficompl
das
pop
idivb
push
push
lcall
jmp
mov
xor
nop
shlb
mov
sub
mov
fisttpl
mov
mov
mov
xor
sbb
outsb
and
sbb
dec
imul
dec
or
and
push
cmc
inc
inc
cmp
test
cmpsl
xchg
cmp
cmpsl
movsl
cmpsb
js
shr
sub
xor
outsl
xor
clc
add
fbld
cmp
mov
sub
sbbb
xor
call
daa
arpl
fldl
xlat
lahf
lea
push
mov
lret
mov
jne
dec
sub
push
dec
mov
movsl
mov
shl
xchg
stc
xchg
mov
pop
inc
mov
mov
mov
cmp
lcall
dec
pop
jns
xor
mov
mov
outsl
push
fcmovbe
inc
xor
push
call
sahf
leave
push
pop
or
mov
jns
mov
jo
push
jp
pop
fldt
xor
shl
jo
mov
xor
int3
jo
dec
lcall
mov
jge
leave
pushf
jb
movsl
testl
sbb
lods
push
dec
ljmp
ss
mov
add
fstpt
test
mov
divb
pop
mov
mov
nop
lret
adc
popa
das
cmp
xchg
and
icebp
adc
jecxz
imul
mov
dec
out
inc
add
mov
cmpsl
stos
stos
lahf
stc
ss
push
xchg
sbbl
mov
mov
popf
fs
mov
or
sbb
xchg
lea
ja
add
adc
mov
call
push
and
hlt
hlt
sbb
scas
test
mov
add
mov
or
js
aaa
gs
jne
sahf
inc
add
ret
mov
mov
in
xor
into
inc
mov
jns
sub
movsl
sub
sbb
cltd
jp
int
sub
pushl
fadd
dec
mov
xchg
xor
mov
pusha
in
jae
test
jb
clc
ss
push
sti
ds
arpl
aaa
mov
addl
mov
bound
jge
jne
pop
movsl
shlb
push
inc
or
movsl
xchg
xor
sbb
outsl
fsubr
jecxz
stos
add
movsb
shll
int3
or
pusha
outsl
xor
mov
leave
sbb
popf
ds
fstp
mov
pop
mov
push
cwtl
int3
or
cmp
rcll
cmpsl
test
ret
aam
mov
flds
test
mov
jnp
lods
mov
mov
add
ret
pop
sbb
in
cmpsb
in
jno
scas
adc
add
cli
adc
fisubrs
lahf
mov
into
pop
out
pop
addl
pushf
ret
dec
fsubl
push
and
rcrl
mov
mov
lea
mov
shlb
fstp
ss
cltd
cwtl
and
ret
mov
mov
into
push
fildl
add
pop
add
add
sahf
push
fcoml
pushf
mov
inc
adc
addps
enter
stc
imul
sahf
mov
lcall
dec
mov
cmp
dec
decl
movsl
lods
insb
mov
test
mov
pop
ret
mov
mov
pop
xor
push
sbb
lret
addr16
test
push
xchg
or
fdivrs
mov
xchg
and
shrl
out
xchg
cmp
mov
cmp
ret
mov
pop
js
pop
xchg
out
jne
jmp
adc
movsl
push
sahf
addb
adc
xchg
mov
mov
mov
pop
fsubrl
xlat
cltd
and
dec
pop
jae
adc
jmp
pop
dec
mov
popa
or
incl
add
aas
push
cmp
aas
xlat
scas
jb
bound
outsb
sbb
sti
inc
ja
adc
mov
mov
jae
inc
adc
jno
sbb
rcl
sub
scas
addr16
fstpt
mov
push
test
mov
or
dec
cmpsb
das
fscale
cmp
and
and
out
push
lods
push
or
xor
bound
andb
pop
cltd
pop
sub
mov
ret
xor
adc
pop
test
adc
in
pusha
clc
inc
js
les
fdivs
call
xchg
cmp
popa
or
mov
push
cmp
shlb
shrb
sub
jo
mov
jne
mulb
mov
dec
push
movsb
ficomps
out
adc
pop
cmp
filds
xchg
add
mov
dec
push
fcompl
mov
adc
shll
repz
cmp
rol
fdivrs
cli
and
ficomps
ftst
jns
js
pop
aaa
nop
fcmovne
add
push
xor
mov
movsl
lods
outsb
mov
jns
adc
push
pop
mov
rcl
sub
lods
jg
movsl
push
loope
or
and
xchg
xorb
mov
lods
int
pop
popa
sub
xchg
jb
jbe
in
loope
mov
push
xchg
cmp
pusha
inc
out
loop
jl
cmp
mov
enter
bound
pop
xchg
stc
int
dec
mov
and
clc
mov
adc
mov
adc
sub
lea
jb
and
mov
jmp
ds
movsl
and
inc
push
pop
pop
mov
add
fcompl
into
fbld
sbb
mov
aam
add
popa
inc
cmpl
xor
jno
test
or
xor
add
lret
movsl
andb
fldenv
add
stc
xor
push
inc
icebp
das
sbb
or
daa
push
enter
bound
sub
mov
shlb
stc
push
inc
dec
xor
sti
mov
add
jmp
fmul
sub
jmp
sub
xor
icebp
lods
movsl
pop
stos
out
push
imul
mov
enter
xor
mov
jle
mov
testb
pop
mov
add
outsl
cmpsb
cltd
mov
dec
adc
shll
jbe
mov
mov
scas
call
sbb
dec
xchg
pop
push
pop
out
pop
std
arpl
mov
fstl
xchg
fdivl
push
arpl
rcll
in
and
cmp
aas
pop
pop
sub
mov
sub
lock
mov
pop
addb
ss
pop
cmp
mov
ds
scas
add
pusha
ss
mov
sar
stos
sbb
mov
fists
mov
rcrb
outsb
stos
mov
mov
cld
inc
mov
mov
xlat
mov
movaps
out
push
test
daa
cs
js
rol
mov
xor
mov
dec
mov
mov
shll
aad
cli
lock
jb
popf
cltd
xorb
ror
insb
mov
out
and
in
sub
int3
sub
subb
mov
dec
adc
jno
popl
sahf
orl
push
jmp
lods
and
insl
mov
ret
pushf
jne
pop
movsb
and
mov
push
mov
and
shll
jno
or
fisttpl
mov
call
idivb
xor
test
fisttpl
mov
stc
mov
es
mov
pop
mov
roll
xchg
inc
push
xchg
xor
xor
inc
hlt
orb
std
cltd
test
push
int3
mov
push
addl
dec
adc
pop
mov
sbb
into
xor
in
and
jbe
test
flds
mov
movsl
aaa
hlt
cli
dec
push
fstl
scas
jno
stc
mov
test
ja
icebp
test
call
ss
inc
movsb
icebp
cmp
movsl
push
xorb
ret
lret
scas
mov
jg
mov
mov
rcrb
push
xchg
loopne
lods
pushf
mov
or
lods
je
js
test
push
lcall
shrl
pop
push
popf
call
shlb
mov
rolb
adc
fwait
leave
xchg
scas
nop
pop
pop
lcall
cmp
inc
xor
pop
cs
stos
mov
test
lcall
mov
cmp
out
xor
jl
stos
lea
sub
icebp
cmp
dec
subb
xor
scas
stos
out
jg
cmp
xchg
call
adc
in
jb
pop
and
adc
ror
iret
jnp
int
sbb
hlt
inc
or
shlb
mov
imull
mov
pop
inc
pop
sahf
and
iret
mov
jl
shrb
xchg
and
mov
in
xchg
inc
pop
cmpsb
mov
and
adc
pusha
jo
out
fs
jns
pop
sbb
loop
pushf
pop
inc
pop
incl
fnstenv
pusha
subl
push
xchg
cltd
fidivrl
shll
lock
mov
sarb
or
push
fildl
inc
pop
les
adc
cmp
orb
cmp
je
fsubp
shlb
sbb
loopne
mov
mov
cs
pop
lods
mov
cli
scas
adc
shll
mov
jl
sbb
xchg
shl
sub
add
ljmp
xchg
insl
imul
stos
iret
pusha
sti
pop
or
rcr
pop
bound
pop
ja
inc
std
lods
fisubrl
push
out
mov
into
data16
sbb
jge
test
lahf
out
aas
inc
adc
cmp
mov
adc
cmp
imul
jb
pop
cmpb
clc
ljmp
subb
cli
mov
add
into
pop
push
sti
mov
pop
test
lahf
in
lea
xor
mov
shll
adcb
push
in
outsb
stos
shll
scas
inc
jl
inc
insl
sub
cmpl
sahf
cmp
inc
daa
movsl
pop
inc
cmpsl
sub
mov
sbbb
mov
test
pop
aad
stc
mov
inc
and
cwtl
rorl
or
enter
mov
bound
jns
fwait
pop
out
mov
rclb
fadd
ficoml
push
icebp
sub
cltd
cltd
sti
fstpt
mov
jmp
out
ds
std
popa
inc
sbb
mov
rolb
cmp
mov
iret
sub
in
cmp
outsb
leave
jo
xor
mov
add
cwtl
push
xchg
sbb
xor
in
jns
fmuls
xchg
popf
sbb
jp
mov
gs
pop
fs
xor
sbb
xor
inc
xchg
nop
arpl
shrb
jecxz
mov
popf
and
repnz
popa
mov
jb
out
test
lahf
push
out
sbb
sahf
jmp
cmpb
mov
cmp
push
loope
jle
lods
sub
and
sarb
xor
dec
addr16
mov
mov
sub
fstpl
mov
add
push
test
mov
sbb
and
popf
push
dec
in
adc
outsl
sub
sbb
ss
sbb
pop
push
scas
push
adc
hlt
cmpsl
jmp
call
xchg
fsubl
mov
and
dec
or
mov
sbb
ljmp
out
aad
or
ret
fiaddl
mov
push
dec
fstpt
and
add
inc
xor
stos
sti
push
pop
xchg
lcall
sub
icebp
pop
mov
xor
jb
inc
in
xor
pop
lods
cli
pop
scas
sub
and
aas
clc
sub
jnp
mov
fadd
popa
lea
sbb
movsl
test
sbb
inc
arpl
test
jl
rclb
jecxz
in
into
inc
movsl
dec
and
jae
iret
mov
xchg
jp
adc
jl
mov
sub
cli
inc
jbe
mov
xchg
inc
out
mov
xor
ret
xor
popf
mov
and
mov
addb
fimull
movsl
dec
lretw
inc
test
clc
jno
and
roll
mov
cwtl
cmp
sti
dec
pop
push
cmp
cmp
ret
xor
les
rorl
xchg
push
cmp
mov
es
icebp
jnp
daa
mov
jecxz
mov
sub
pop
add
incl
jb
xchg
in
insb
pop
sarb
lds
sbb
and
sbb
mov
mov
pop
xchg
jo
negl
adc
lcall
sbbb
int
popf
or
icebp
and
rorb
pop
fwait
mov
stos
movsl
lea
sub
or
test
shrb
ja
mov
sub
dec
outsb
loope
sbb
pop
xor
jo
lea
fwait
mov
insl
cmp
cld
sti
mov
cmp
xorl
in
mov
std
gs
jne
xchg
testl
jne
inc
xchg
jmp
out
fisttpl
sbb
es
je
jp
pop
jle
adc
cmp
addl
mov
cltd
or
inc
cmp
adc
mov
rcr
cwtl
cmc
das
xchg
ror
push
push
mov
mov
and
inc
mov
xchg
pop
push
inc
adcb
mov
xor
push
inc
inc
adc
cld
cmp
mov
xor
jecxz
cmp
inc
xor
adc
stos
mov
mov
ret
test
loope
pop
pop
jb
mov
fcoml
pushf
push
xor
loopne
jg
out
add
jge
leave
lahf
cltd
addb
fstpt
mov
dec
mov
xor
fistpl
fpatan
mov
lods
push
pusha
cmp
mov
push
xor
adc
dec
jae
pop
int3
fidivrs
cld
inc
push
out
subb
mov
push
xor
lock
inc
mov
inc
fldpi
call
and
mov
cmp
push
mov
mov
sbb
fbstp
rcrl
xchg
mov
movsb
push
aas
sbb
mov
or
outsl
mov
popa
adc
into
mov
out
mov
xlat
push
jns
xor
jl
cmpsb
js
popf
pop
pop
mov
into
leave
daa
xor
inc
pop
xchg
les
add
pop
fs
add
sbb
inc
mov
dec
maskmovq
testl
and
repnz
fldcw
jno
mov
and
or
mov
inc
mov
pop
sbb
leave
arpl
inc
sub
pop
add
test
cwtl
test
xchg
xchg
dec
test
xor
es
jae
jl
je
fsubrl
incb
push
gs
stos
add
pop
sbb
mov
sub
pop
mov
ljmp
es
dec
xor
in
xchg
cmpsl
xor
imul
cltd
mov
lods
pop
cmp
cmp
test
insl
je
cwtl
mov
pop
pop
cmp
mov
xchg
mov
fsubl
test
loope
loop
mov
insl
lahf
lea
sarb
push
mov
mov
sub
jae
add
adc
loopne
stc
cmp
cs
push
inc
shrl
mov
movsb
push
mov
push
inc
imul
xchg
jno
lcall
mov
mov
jmp
cmpsb
mov
pop
test
jg
mov
loope
pusha
daa
or
cmp
stc
pop
push
popa
adcl
lahf
xor
lret
cmpsl
sahf
jp
out
arpl
sarl
cmp
add
ljmp
mov
mov
adc
fldt
push
xor
nop
loopne
mov
cli
cmp
mov
jp
jmp
nop
xor
ds
xor
loope
lock
and
dec
movsl
xor
mov
push
shl
mov
int3
mov
rolb
xchg
mov
xchg
xchg
pushf
mov
inc
fisubl
cmp
jle
test
pop
fisubrl
dec
jp
mov
dec
fs
add
pop
pop
aam
js
sti
cmp
mov
jns
stc
cmp
bound
cmp
pop
xor
xor
jnp
sub
mov
int3
mov
es
frstor
mov
fdivrp
pop
sub
jg
mov
iret
xchg
leave
clc
pop
adc
mov
mov
sub
dec
je
scas
mov
jnp
push
aaa
cmc
inc
fwait
ljmp
adc
adc
cmpb
hlt
xor
and
imul
cmc
fmul
flds
pop
and
inc
add
sarb
sub
jno
pop
sub
into
adc
mov
lds
jae
lock
sbb
cmp
jno
xorb
mov
mov
adc
scas
lea
xor
and
pop
inc
xchg
jp
loopne
or
pop
jno
mov
js
add
jp
xor
mov
pop
scas
imul
jno
cmp
jp
and
sub
mov
adc
inc
ss
mov
lods
sarb
jl
cmp
mov
aam
gs
jno
pop
adc
testb
jecxz
imul
xchg
pusha
mov
xor
lcall
push
jno
jle
adc
sbb
push
pop
pop
cmp
mov
sti
cmp
inc
aaa
pushf
fcoms
lret
jmp
lcall
pop
add
in
rcl
stos
pop
mov
jno
aas
dec
mov
pop
inc
pop
pusha
out
int3
or
mov
push
inc
pop
cmpsb
lock
mov
mov
test
jmp
mov
enter
je
cmp
xor
fucomi
jns
push
cwtl
mov
cmc
bound
dec
ret
xor
sbbb
xorb
fwait
lret
inc
sbb
and
jns
sbb
lcall
test
jle
mov
pop
test
cmp
test
dec
xchg
mov
in
pusha
outsl
push
std
pop
mov
test
lahf
ljmp
insl
mov
roll
mov
lock
imul
xorl
jb
adc
out
jae
jbe
jg
aas
mov
cmp
adc
in
xchg
cmc
and
addr16
addb
cmpsb
idiv
cmp
clc
inc
mov
shll
dec
aaa
jl
sub
or
mov
movsb
xchg
adc
test
mov
ds
xor
inc
addb
je
mov
lds
je
lret
push
test
test
mov
cli
aas
je
mov
out
push
js
inc
es
movsl
test
mov
imul
ds
cwtl
and
arpl
stos
setp
jns
cltd
pop
nop
les
cmp
add
sti
inc
imul
push
mov
bound
lahf
inc
inc
rolb
sbb
pop
jle
sub
mov
jo
mov
subb
push
jno
push
jbe
mov
mov
cmpsb
jg
stos
mov
push
mov
push
in
xchg
fidivl
dec
sbb
jbe
stos
pusha
jnp
ret
stc
pop
mov
push
mov
sbb
dec
ss
fadds
jl
roll
push
das
pop
adcb
xor
cmp
pusha
mov
xor
sti
sbb
aam
jns
xor
push
mov
mov
fdivrl
stos
test
add
aaa
test
and
sub
mov
mov
sub
xchg
lods
sbb
stc
jmp
clc
pop
movb
inc
cmpsb
jp
sarl
xchg
mov
test
testl
cmp
inc
cmc
outsl
dec
daa
dec
iret
lahf
mov
pop
stos
loop
push
dec
xchg
jl
std
pushf
ss
call
push
sti
push
mov
add
xorb
popf
in
xchg
inc
idivb
add
neg
mov
repz
sti
sbb
sbb
inc
popf
ret
fiaddl
jl,pn
je
cmp
xchg
inc
cmc
jecxz
mov
xchg
pop
cmc
jo
test
inc
mov
cmp
or
aaa
roll
nop
jnp
test
mov
mov
test
mov
jo
mov
inc
xor
jno
js
pop
inc
sub
and
flds
test
out
ret
imul
sub
and
ud1
arpl
adc
cltd
pop
filds
andb
mov
pop
ja
mov
les
inc
ss
mov
jecxz,pt
pop
adc
inc
cmp
sbb
dec
sub
out
aad
xchg
cmp
outsb
mov
mov
cltd
loopne
sub
push
into
roll
adc
loopne
mov
cwtl
subb
cmp
and
sarb
aas
dec
xor
jecxz
je
js
imul
test
xchg
arpl
xchg
pop
pop
pop
cmp
pop
mov
cmp
shll
pop
shrb
adc
ss
jo
xor
sbb
ret
movsl
inc
icebp
mov
aaa
inc
push
loopne
inc
jle
inc
cmp
imul
cmp
or
int
ds
pop
ds
or
add
test
push
dec
movsb
loopne
cmp
pop
int3
push
pushf
into
lret
shll
movsl
leave
je
inc
and
sub
and
movsl
xchg
adc
mov
fdivs
aam
pop
fwait
rcl
push
leave
mov
fnstenv
pop
jle
sar
pop
lock
shrl
lock
xchg
fidivrs
or
push
jno
inc
pop
sbb
mov
sbb
or
lret
insl
ljmp
stc
fcompl
xor
cmpsb
or
fimuls
test
mov
mov
xlat
inc
popf
loopne
push
push
mov
fdivl
sbb
and
orl
cld
jno
int3
sbb
in
inc
gs
sub
and
add
mov
xchg
lods
rcrb
pusha
out
andb
es
sti
pop
mov
insl
xor
push
xchg
lret
inc
jmp
movsl
shrb
sbb
add
sahf
int
mov
inc
popa
test
imul
js
sbb
je
dec
sbb
clc
adc
push
clc
rorb
jne
xor
push
pusha
movsl
xchg
movsl
mov
fisubl
test
je
xor
gs
dec
fistpl
repz
jns
or
test
leave
lcall
adc
pop
push
jbe
mov
dec
scas
add
jge
shlb
test
aad
nop
pusha
mov
jno
mov
lret
mov
cwtl
xchg
xor
mov
outsl
loopne
mov
mov
shll
push
shlb
push
push
pop
mov
inc
movsl
out
aam
dec
call
ljmp
mov
adc
mov
jmp
inc
shlb
scas
fidivl
xchg
xor
es
mov
xor
mov
addr16
fcoms
ficoml
movsb
or
lods
jo
sub
test
add
psrad
sub
mov
fstpt
nop
dec
mov
pop
jne
fwait
gs
pop
or
sbb
mov
sti
movsl
arpl
inc
imul
daa
cmpsl
adc
pop
dec
adc
movsl
sub
in
cltd
dec
aad
lods
inc
xchg
mov
sti
lea
sahf
ret
mov
sahf
jl
and
sub
push
pop
cli
mov
xor
push
and
loope
test
inc
lods
mov
push
push
mov
loop
out
and
stc
and
pop
pop
mov
mov
loopne
xor
adc
mov
dec
outsl
cwtl
loop
mov
scas
dec
je
cmc
lret
mov
jb
adc
popf
rcrb
test
std
je
add
sahf
in
int
imul
cmp
fistps
xchg
add
add
mov
rol
xor
mov
popa
roll
sti
cltd
sbb
jno
inc
mov
sub
loopne
lret
aad
xchg
mov
js
jno
xlat
xchg
mov
rol
int3
repz
add
call
xchg
outsl
test
aam
xor
movsl
adc
int
rcll
lock
or
lret
jl
adc
ror
out
les
in
test
fsub
shll
ret
test
fimuls
mov
cmpsl
add
ja
xor
sbb
shlb
js
push
cmp
add
mov
pusha
or
jg
pop
ds
insb
mov
dec
insl
jecxz
add
or
leave
jp
adc
mov
rcll
inc
add
cwtl
mov
mov
add
mov
mov
into
sub
leave
add
mov
rolb
mov
and
and
popa
push
mov
sub
mov
lods
jge
movlps
sbbb
lcall
cmpsb
mov
mov
pop
test
movsb
add
mov
cmp
fmul
push
push
int
imul
cld
gs
int3
lods
les
push
mov
enter
pop
out
or
xlat
dec
xchg
lret
jae
lock
dec
mov
adc
ficoml
test
pushf
mov
icebp
xchg
arpl
mov
sti
sahf
cmp
jmp
inc
jl
mov
movsl
aaa
mov
rcl
insb
jne
sbb
cmp
xchg
sbb
adc
sbb
adc
adcb
inc
dec
pop
js
or
mov
mov
adc
mov
mov
push
jmp
jle
xchg
jecxz
leave
mov
and
pop
cltd
mov
test
lods
pop
pop
movsb
xor
cmpsb
ror
push
test
push
mov
pusha
mov
mov
std
mov
adc
cmp
push
and
dec
jle
mov
cwtl
mov
popf
add
test
xchg
pop
inc
xor
scas
cmp
sbb
mov
movsl
rcrb
cli
dec
push
iret
push
xor
jg
sbb
mov
sub
rorl
mov
mov
in
ret
scas
push
sbb
inc
and
bound
loop
repz
mov
mov
mov
jbe
xor
inc
insl
jp
mov
pop
jns
jbe
loopne
sbb
cmp
pop
inc
repnz
fwait
test
sbbb
fsubs
daa
xchg
inc
aas
cltd
mov
adc
mov
pop
mov
fcoms
jmp
and
inc
mov
xchg
mov
test
sbb
push
leave
leave
and
mov
mov
fisubrs
or
mov
add
mov
cmp
mov
pushf
fldt
test
adc
sbb
addr16
std
jb
adc
add
pop
cmpsl
adc
out
xchg
sbb
xor
xchg
out
cmp
bound
mov
xorb
jmp
sbb
jne
dec
mov
cmp
mov
jb
dec
insb
xlat
push
sbb
add
cmp
pusha
jmp
xchg
mov
cmp
mov
mov
pushf
jg
push
jp
loop
pop
fwait
lods
sarl
fldl
popf
xor
dec
pop
jnp
inc
xchg
addb
cmpsl
clc
push
out
sbb
sbb
dec
flds
daa
lret
cld
js
cmpsl
sub
jp
cmpsl
and
cmp
mov
sub
inc
fists
lret
sti
pop
sbb
or
add
idivb
movsl
or
sti
inc
test
mov
sub
cmp
cld
popa
mov
jae
clc
cli
add
mov
pusha
rorl
sbb
add
in
dec
jnp
mov
pop
addr16
pushf
xchg
sub
add
or
mov
lret
jns
ljmp
nop
sbb
push
sbb
cltd
adc
sbb
pop
das
lods
or
mov
mov
rorl
and
ja
pop
clc
outsl
xchg
mov
int3
mov
sbb
mov
cmpsb
add
cwtl
and
daa
fcoml
cmc
movsl
push
jp
out
into
nop
icebp
cmpb
mov
or
jae
divb
bound
add
cmp
idivb
xchg
mov
inc
adc
pushf
adc
adc
fs
loope
jb
mov
sbb
cmp
pop
pop
pop
mov
movsl
fcmovu
test
mov
add
mov
out
push
lret
adc
and
jle
bound
fs
test
mov
mov
clc
and
fstl
aad
out
stos
lock
pusha
and
cmpsl
loope
mov
test
fisttpl
sti
fnstsw
das
icebp
jle
in
dec
mov
cmp
mov
jl
jmp
icebp
mov
and
outsb
add
sbb
mov
bound
mov
and
jecxz
aad
loopne
inc
pop
and
dec
ja
mov
inc
lods
mov
add
xchg
leave
mov
bound
dec
sahf
loopne
and
mov
pop
pop
repnz
idivb
cmpsb
inc
pop
xchg
jb
aas
stos
ja
mov
xor
add
aad
ds
js
pop
adc
aaa
mov
cwtl
push
xchg
in
jmp
sti
push
or
dec
dec
inc
mov
push
push
lods
mov
inc
sub
cmp
xchg
xor
test
fdivr
loopne
test
stos
push
jb
and
mov
lock
mov
adc
adc
jp
int
lahf
pop
cs
loopne
sbb
mov
sbb
gs
sbb
sub
lret
movsl
nop
push
push
sbbb
xor
sbb
out
jle
mov
mov
cmpsl
and
mov
lahf
mov
sub
push
mov
outsb
lcall
push
cmp
mov
popa
push
mov
inc
movsl
rsqrtps
pop
pushf
add
inc
mov
inc
push
jne
jp
push
jle
test
lea
cmpsb
mov
mov
test
es
scas
fstl
inc
mov
or
pop
or
push
mov
movsl
test
mov
push
pop
ds
in
ja
aaa
xchg
push
inc
test
mov
ret
cltd
mov
bound
add
inc
aas
orb
jmp
ss
scas
xor
cmpsb
loopne
xchg
xor
adc
xchg
add
jb
add
enter
je
inc
mov
mov
cmp
mov
sarl
or
mov
mov
sbb
jmp
xor
push
pop
rcll
lods
adc
xor
dec
sub
nop
dec
jb
adc
xchg
add
adc
mov
movsl
jl
outsb
imul
and
in
movsl
xor
iret
fnstsw
andl
andl
jns
je
or
cmovge
mov
add
lcall
loope
divl
sbb
repnz
sbb
sti
scas
int
movsb
xchg
cmp
sbb
subl
mov
ljmp
dec
sbb
mov
data16
cmp
out
fmul
mov
lret
pop
pop
jb
in
cmp
rcl
xorb
rolb
rolb
adc
enter
insb
sbbb
pop
mov
push
mov
adc
addr16
mov
pop
or
xorl
mov
jne
jmp
cmp
repz
lea
ljmp
jno
scas
or
dec
popa
leave
mov
imul
jno
adc
xor
mov
out
jmp
lods
shlb
jg
mov
dec
jge
test
xor
lds
fstl
inc
outsb
repnz
push
or
pop
mov
adc
pusha
dec
mov
inc
addr16
xchg
loopne
inc
mov
jns
pop
inc
leave
fldcw
bound
call
lds
and
andl
mov
xchg
inc
popf
mov
mov
adc
mov
movsl
cmpsl
mov
mov
cmpsb
loope
bound
mov
dec
mov
fstpt
jne
jb
jmp
addb
js
dec
lcall
stc
mov
mov
dec
aas
rorl
push
data16
sarb
dec
mov
pop
test
push
mov
cmpsb
das
jecxz
mov
mov
lods
lret
fs
repnz
cwtl
addr16
pop
cmpb
leave
mov
shlb
mov
test
dec
test
or
inc
mov
nop
cmp
xor
lret
cmp
repnz
stc
repnz
js
pop
repnz
aam
fs
jle
mov
jle
inc
loope
or
xchg
mov
cmp
lcall
inc
xchg
inc
and
dec
jg
ss
mov
or
xchg
in
shl
mov
cltd
jne
add
jns
mov
cmp
movsb
lret
loope
sahf
shrl
addr16
cld
gs
orb
and
sahf
in
mov
sahf
fiaddl
add
xchg
jb
bound
jno
cmp
mov
mov
test
cwtl
dec
dec
dec
test
fbstp
cmp
cli
std
rolb
mov
gs
xor
mov
and
out
mov
movsl
push
leave
int3
cmp
mov
sbb
sbb
fcoml
jmp
dec
arpl
mov
popa
mov
xor
mov
mov
cmc
cmp
ffreep
pop
inc
cmp
pop
mov
icebp
lret
fwait
cmp
outsb
clc
sahf
dec
xchg
in
fldl2e
jge
cmp
or
imul
das
loop
inc
dec
lea
rorl
mov
xor
cmp
imul
cmp
in
mov
push
lcall
aam
lea
pop
popl
loope
dec
jle
inc
mov
xorb
xor
in
mov
and
out
rorl
add
xor
or
mov
inc
jnp
sbb
lret
mov
gs
push
popa
mov
jl
nop
in
mov
and
sahf
in
insb
jge
jmp
test
mov
shlb
cmpsl
rorb
repnz
mov
mov
xor
inc
xor
mov
aad
jecxz
dec
adcb
or
in
mov
imul
cmpsb
test
outsb
imull
shr
add
test
popa
jp
addr16
sbb
inc
cs
inc
pop
stos
lods
movsl
xor
cmp
and
roll
inc
push
popa
xor
mov
dec
pop
test
mov
jecxz
xchg
cmp
xor
sar
popa
jb
pusha
and
lret
jns
ss
aam
lea
rolb
and
test
subb
popa
negl
pop
push
mov
jo
mov
mov
cmc
fiadds
pop
imul
push
ljmp
lcall
movsl
adc
loop
dec
sbb
dec
mov
lret
lcall
inc
push
xchg
mov
out
nop
cs
mov
dec
pop
inc
js
mov
mov
shll
mov
dec
mov
jge
fisttpll
mov
add
mov
aaa
pusha
adc
and
ds
xchg
lret
push
fldenv
popf
andl
mov
in
cltd
dec
loopne
mov
mov
movsb
lcall
inc
fucom
mov
xchg
ds
in
cmp
shll
sbb
ret
outsb
loop
cmp
ds
dec
mov
lahf
scas
push
daa
mov
mov
sti
sub
cmp
test
adc
gs
mov
mov
orl
xchg
sub
fisttpll
adc
shlb
jge
mov
jl
mov
cwtl
cmp
xor
lcall
in
mov
xchg
xchg
inc
dec
dec
cs
mov
test
add
jl
xorb
or
sbb
fsubl
fadd
xchg
push
mov
mov
sub
fdivl
inc
and
js
xchg
fsubrs
and
cmpsb
mov
and
add
jne
lea
adc
cmp
xchg
mov
xlat
lahf
push
mov
xor
jle
adc
inc
mov
mov
mov
imulb
sahf
mov
mov
inc
mov
in
out
cs
push
cmp
outsl
cmp
and
xor
dec
add
cld
xor
and
cmp
in
mov
mov
cmc
in
mov
ljmp
das
mov
movl
call
xlat
lods
loop
sbb
fs
xor
mov
mov
dec
inc
push
out
leave
ss
cmp
setns
icebp
inc
rclb
pop
mov
cli
cmp
add
ret
bound
xor
dec
jge
push
jle
pop
stc
mov
fidivl
cwtl
push
push
aad
int3
cli
lea
cmp
and
test
jmp
pop
adc
lds
je
xorl
mov
pop
enter
sbb
xchg
push
sbbl
cmc
push
mov
stos
cmp
inc
leave
subb
jp
add
mov
mov
add
ret
sub
testl
movsb
mov
push
incb
and
pop
fs
mov
and
cwtl
mov
insl
rol
mov
mov
xchg
lret
ret
lret
je
add
mov
dec
sub
shl
adc
nop
loope
mov
pop
bound
cmpsb
fmulp
cmpsl
bound
mov
sahf
pop
test
imul
mov
lea
sti
inc
out
jo
sub
sbb
imull
jle
sbb
sbb
jno
inc
inc
ja
data16
into
movsb
push
inc
jge
and
and
and
test
push
or
push
cmp
daa
ret
sbb
rcrl
push
pop
xchg
sub
movsl
loope
imul
jmp
sbb
xchg
inc
cs
mov
int
jle
adc
mov
cmp
mov
sub
mov
aad
jl
data16
pop
mov
push
adc
mov
mov
pop
add
pop
or
sub
ret
inc
dec
xor
out
fmuls
pop
rcll
mov
push
adc
mov
mov
jbe
pop
push
jmp
cmp
fsub
out
xchg
gs
xchg
rcrl
xchg
push
xor
push
fs
dec
xlat
clc
push
lods
xchg
jo
sbb
and
adc
dec
push
push
js
sub
movsl
mov
adc
movsb
fisubrs
add
leave
movsl
mov
cli
mov
xor
xchg
adc
and
or
aaa
sub
mov
push
test
and
sti
fwait
jp
shll
cwtl
xor
loop
pop
sbb
cmpsl
fistps
sbb
mov
scas
xchg
mov
sbb
mov
fists
je
adc
xor
rcrb
subb
sbb
mov
cmpsl
cwtl
lods
mov
js
mov
test
mov
fdivr
shrl
and
cmp
pusha
movsb
add
mov
lea
mov
pushf
jecxz
test
pop
jecxz
jbe
adc
pop
int
or
adc
sti
andb
int
mov
lods
mov
mov
lods
mov
imul
idivb
rcrl
pop
cmp
push
mov
dec
mov
add
inc
dec
sbb
add
adc
pop
pop
cli
dec
mov
js
sbbb
mov
jg
mov
lock
test
pusha
aaa
add
shlb
pop
clc
inc
mov
and
sbb
mov
js
add
fldt
test
scas
clc
xor
jne
fwait
adcb
movsl
scas
nop
mov
dec
jle
ficomps
cld
jne
jp
xor
xchg
ret
or
mov
scas
jge
iret
ret
aaa
or
mov
push
pop
pop
in
in
mov
sbb
and
xor
adc
daa
xor
bsr
xor
adcb
sbb
lock
pop
icebp
xchg
lods
cmpsl
xorb
mov
jg
pop
call
cmc
adc
insb
fdivrs
mov
jmp
pop
sub
mov
jns
stos
mov
dec
cmpsb
push
sbb
push
and
mov
in
loop
rcr
movsb
orb
outsl
pop
mov
xchg
cmp
fwait
es
xor
call
fidivl
mov
mov
test
out
test
and
scas
js
js
mov
jno
cltd
sub
shrb
out
stos
lcall
loope
inc
aaa
sub
cmpl
movsl
or
mov
test
sub
add
pop
mov
movsl
fcomp
out
jo
sbb
std
pop
mov
xchg
mov
cmpsb
sbb
inc
lock
add
daa
lea
dec
clc
ret
bound
lret
shlb
xchg
xchg
sub
or
or
cmp
dec
xchg
push
xchg
lcall
xchg
gs
xor
inc
push
sub
dec
pop
sbb
push
adc
add
push
jmp
aaa
jge
cmp
shlb
fcoms
adc
out
sub
or
xor
subl
push
jno
and
mov
sub
and
push
jmp
shl
adc
imul
lods
mulb
xchg
mov
out
push
cmp
mov
cmp
cmp
daa
sti
jnp
inc
xorl
add
or
sub
jl
xchg
sub
sub
test
push
rcll
xchg
xchg
jmp
aaa
or
cmpl
fnstcw
std
cmp
sub
lret
lods
roll
inc
out
idivb
sbb
setg
adc
jne
jle
rorb
push
pushf
cmp
rorl
mov
icebp
adc
js
mov
shll
pop
adc
rcll
pop
dec
scas
std
inc
sbb
sarl
pop
jns
dec
jge
roll
gs
mov
negb
and
jmp
clc
mov
andb
gs
sub
sub
add
mov
enter
ret
jge
cmpb
sub
dec
imulb
inc
xchg
shlb
xchg
jmp
sub
movsl
fiadds
adc
fcomi
add
jns
fildl
inc
xor
insl
scas
andb
adc
sbb
fwait
pop
in
loope
mov
stos
frndint
push
push
xor
sahf
pushf
jmp
fstp
jno
rclb
mov
mov
imul
or
cmpb
mov
mov
mov
sbb
or
rcrl
and
cmp
fcompl
xorb
jle
repnz
xchg
cmp
in
jnp
push
ficoms
mov
adc
push
adc
add
sbb
test
inc
adcb
push
stc
mov
jbe
cmp
lret
mov
or
inc
out
fldcw
jle
pop
int3
sub
jmp
mov
nop
rcrl
test
lahf
addl
ret
sub
loop
mov
cmp
loope
nop
cs
xchg
cmpsb
inc
loopne
lret
loopne
inc
jmp
mov
cmp
pop
xor
jle
js
mov
jns
ret
mov
sbb
fnstcw
mov
xor
add
lock
jecxz
pop
inc
xchg
ficoml
negb
outsb
test
leave
add
pop
xlat
addr16
cmp
cmp
push
stc
cmp
movsl
test
cwtl
mov
bound
lret
shl
mov
mov
or
cmp
notl
icebp
sahf
cmp
mov
sahf
mov
rcrb
sub
pop
and
jle
mov
mov
mov
sar
pop
fstps
sbb
movsb
jl
mov
bound
jp
mov
test
sbb
mov
pop
sub
jp
orb
inc
xchg
lcall
mov
fidivs
iret
pop
xor
jle
mov
pop
fcomps
cmp
and
pop
fwait
jle
std
xchg
jmp
fidivrl
sbb
pop
inc
aas
mov
lock
pop
cmp
nop
cmp
ret
inc
adc
mov
pop
mov
test
adc
ds
jns
jnp
lcall
cltd
clc
insl
mov
cwtl
xor
mov
mov
cmp
popa
jns
push
movsl
cmp
lret
jns
mov
cmp
mov
sbb
fldt
pop
dec
xchg
xor
pop
fistl
in
test
fnstsw
ret
push
cmpsl
mov
push
daa
fisttpl
xchg
and
mov
push
pop
leave
push
adc
stos
lods
add
or
lret
and
ss
inc
lret
inc
jne
sti
mov
dec
lods
cmp
pop
addr16
add
aam
xchg
add
jbe
adcl
cmp
mov
shll
jnp
push
sahf
push
mov
jno
pop
cld
in
ret
cmp
jg
pop
push
mov
les
jns
adc
and
mov
jl
nop
out
mov
divb
jne
ljmp
mov
pop
push
xor
and
mov
dec
roll
dec
mov
mov
daa
mov
mov
loope
lods
insb
adcl
mov
or
pop
fstl
push
xor
sbb
jg
inc
lret
movsl
stos
mov
ss
inc
in
mov
xchg
push
sbb
pop
cmpsb
clc
dec
sbb
rclb
fs
cltd
pop
nop
pop
inc
lcall
jp
es
mov
test
cmp
xor
sbb
stc
adc
xor
sub
sbbb
pop
mov
test
mov
sti
aaa
add
add
daa
cmp
or
lret
inc
sbb
movsl
xchg
orb
cltd
mulb
fidivl
mov
add
adc
repnz
cltd
sbb
movsl
pop
iret
and
inc
add
cmp
pop
add
jl
stos
mov
cmp
jnp
dec
mov
lahf
dec
add
push
pop
stc
js
inc
test
xchg
push
mov
hlt
ss
mov
inc
or
sub
movsl
mov
lret
enter
mov
xchg
mov
push
mov
mov
nop
xchg
ret
cmp
jge
add
mov
push
xor
mov
stc
cmp
movsb
orb
sahf
stos
pop
cmp
nop
movsb
pop
lods
mov
shlb
jge
xor
les
jne
cmp
fidivrl
jno
filds
sub
int
xlat
mov
sti
xchg
xorb
outsl
popf
repnz
xor
repnz
xor
rolb
xor
cltd
adc
gs
pop
mov
xor
daa
pop
dec
ss
into
cmp
push
xor
cmp
jo
dec
add
lret
mov
jge
xor
dec
fiaddl
dec
addb
lods
test
jp
mov
adc
jp
xor
pushf
mov
inc
cmp
in
cmpsl
and
in
insb
popf
sbb
jl
mov
mov
shll
ss
out
mov
sbbb
or
lahf
cbtw
xchg
inc
inc
add
daa
and
incb
pop
dec
sub
mov
insb
adc
mov
repz
inc
jle
cwtl
cltd
sbbb
add
int3
fs
inc
lcall
bound
gs
mov
jae
pop
mov
lock
mov
stos
and
scas
in
clc
pusha
pop
inc
insl
jl
cwtl
sbb
lcall
sub
rolb
mov
sahf
arpl
popa
mov
push
mov
mov
pop
cmp
repz
js
fwait
orb
mov
push
and
cmp
or
cwtl
jo
movsb
ret
add
cmc
fistpl
movsl
xor
jne
or
movsl
stc
jl
sub
adc
mov
fstpt
repz
xchg
lock
js
xchg
inc
push
lahf
out
es
mov
dec
ss
push
inc
cmpl
movsb
inc
shlb
mov
pop
fists
and
and
inc
mov
push
push
mov
inc
jbe
cmc
lods
inc
repnz
imul
rcll
movsl
ss
cmpsw
popf
daa
lahf
pusha
jle
outsl
je
cwtl
pushf
cmp
jg
cmp
mov
arpl
pushf
fsubl
fisubl
push
adc
scas
sbb
adc
leave
das
clc
out
mov
sub
movsb
icebp
adc
xchg
mov
aaa
mov
push
mov
movsl
push
aad
mov
dec
orl
sub
stos
mov
clc
jge
xchg
push
movsb
xchg
xchg
dec
sbb
jbe
fcoms
mov
stos
out
cmp
add
pop
dec
xlat
test
lock
test
xlat
xor
sbb
hlt
jecxz
js
or
jp
cmp
fstpt
stc
in
jle
fcmovu
fildll
aaa
adc
ret
popf
jg
outsb
pop
inc
shrl
and
cmp
pop
jbe
jo
lods
xchg
push
scas
bound
push
loopne
or
mov
mov
sbb
cmp
mov
cs
mov
xor
lahf
xchg
adc
jle
shl
dec
je
andb
aad
dec
or
push
inc
and
and
cmp
test
pop
inc
jmp
push
inc
mov
js
cmp
fsub
xchg
out
push
mov
inc
mov
dec
shr
or
adcl
sarl
mov
and
and
pop
and
int
test
js
mov
sub
clc
shrl
and
sti
xor
fdivl
pop
xor
test
mov
aad
pushl
jecxz
lds
jp
xchg
cmp
xorb
or
icebp
pop
repz
adc
sti
mov
adc
lcall
pop
ret
pop
inc
and
ss
mov
add
fstpl
pop
mov
add
jle
cmpb
les
mov
cltd
out
out
or
mov
mov
ret
lock
cmc
push
notl
push
mov
out
jl
mov
std
in
ja
and
xor
pop
fistps
popf
icebp
addl
or
cmp
cltd
adc
cmpsl
cmp
cld
inc
sbb
inc
leave
icebp
mov
sbbl
popa
sbb
or
and
aad
test
xorl
scas
cmp
testb
outsb
and
inc
loop
adc
sub
mov
push
stos
cs
push
mov
push
sbb
inc
jb
pushf
xor
mov
test
sbb
pop
fdivrl
rolb
ret
inc
inc
mov
mov
cmp
xchg
js
sahf
out
cmp
jl
mov
xor
pop
jl
xchg
mov
movsl
mov
pushf
iret
lea
mov
out
aas
fadds
lock
cwtl
or
add
data16
xor
inc
cmp
test
cmpsl
mov
mov
mov
ss
dec
int
jecxz
inc
dec
jbe
cltd
sbb
push
in
sahf
add
inc
into
jle
icebp
jle
and
lods
mov
and
mov
push
stos
cmp
xchg
shll
sbbl
adc
mov
pop
mov
mov
xlat
ss
xchg
mov
inc
mov
mov
sbb
mov
shll
in
test
mov
sahf
mov
movsb
xchg
shlb
lahf
jge
and
mov
xchg
pop
aaa
ret
popf
repz
nop
movd
mov
test
insb
cmp
push
xchg
inc
fcmovnu
inc
mov
and
pop
ficoml
sub
shlb
and
dec
mov
aam
faddl
sub
enter
and
mov
mov
mov
mov
popf
sarl
je
cmp
mov
adc
movb
and
bound
push
inc
imul
movsl
mov
scas
lret
pusha
addr16
addl
mov
lods
cmp
cmp
xchg
add
cmp
rol
cmpsl
cmpsb
sbb
repnz
mov
mov
mov
loope
js
ds
notl
shrb
jge
adc
sbb
faddl
mov
xchg
orb
movsl
popf
or
push
or
lds
mov
rol
adc
sbb
xchg
add
jno
cmpsl
ds
inc
inc
dec
xchg
rolb
out
fcmovbe
mov
pop
jmp
jg
xchg
mov
shll
add
cmp
add
filds
repz
mov
xorps
loope
insl
add
iret
into
xor
inc
dec
mov
mov
inc
cmc
mov
sti
or
addr16
dec
jb
xchg
orb
fldcw
scas
sbb
cwtl
pop
shrb
mov
data16
mov
mov
inc
ret
sti
mov
inc
push
shlb
and
test
test
loopne
aaa
enter
pop
ja
frstor
and
mov
or
stos
sub
in
and
movsb
or
inc
xor
jo
in
iret
mov
jge
stos
adc
sti
cmp
xchg
leave
cmp
fadds
sbb
jle
repnz
xor
mov
dec
sbb
mov
xor
sub
cld
mov
movsl
pop
and
adc
ljmp
lret
in
insb
jle
pop
scas
jno
adc
push
jo
arpl
cmp
dec
pusha
sbb
lock
lcall
mov
pop
dec
data16
lcall
out
cwtl
sbb
inc
mov
rorl
jecxz
fistpl
jae
popa
mov
jbe
adc
bound
jmp
fwait
push
jo
jbe
jbe
mov
mov
orl
fsubl
adc
jp
sub
mov
fistpll
inc
loope
sub
adc
fs
cmpsb
cwtl
orl
pop
lcall
popf
jmp
and
arpl
scas
popa
inc
cmp
sub
movsl
sub
cmp
and
or
js
dec
pop
mov
push
or
or
out
mov
jmp
inc
call
test
sti
shl
mov
mov
xor
sub
int3
cmpsl
mov
mov
data16
fs
jmp
out
mov
xor
xchg
mov
mov
fxch
or
andb
add
hlt
lds
lret
jp
mov
punpckhbw
sbb
sub
cmpb
sarb
pop
mov
dec
out
xchg
inc
cwtl
test
xchg
loopne
fistl
addr16
mov
xor
or
add
iret
fisubrs
cld
mov
idivb
leave
stc
mov
sub
jae
popa
loopne
jns
loope
fdivl
jl
mov
cmp
xchg
sahf
clc
inc
push
sti
add
ds
pop
sarb
fildl
cmp
pop
mov
fimuls
es
cmp
push
add
cmpsl
mov
bound
xor
xor
mov
loopne
dec
daa
cli
xor
lods
jae
jp
js
xchg
lret
cmp
sub
aaa
mov
addl
into
daa
mov
mov
mov
loop
pop
jns
sbb
xor
cli
dec
inc
lret
pusha
sbb
fdivrl
loope
rcl
mov
or
mov
dec
xor
cwtl
mov
cmc
mov
sbb
orb
ja
mov
xchg
mov
xchg
std
cld
scas
cmp
jns
inc
xor
int3
sub
out
cmc
mov
sub
in
sub
or
int3
xor
shr
fcmovnb
repnz
sahf
pop
mov
addb
call
mov
add
test
jno
sbb
hlt
nop
jle
adc
add
shl
subb
mov
cmp
and
jb
mov
cmp
in
jo
adc
inc
fldenv
pop
and
pop
movsl
mov
jne
xchg
jae
or
lods
add
xchg
sub
mov
pop
in
inc
pop
sbb
cmp
sbb
js
hlt
push
shll
repz
into
sub
xor
andb
cltd
inc
pop
push
pop
push
negb
movl
inc
jns
shrb
or
in
push
mov
mov
cmp
clc
icebp
into
xchg
lahf
xlat
mov
pop
adc
mov
sbb
incb
push
sbb
or
andb
daa
popf
ds
add
fldl
push
cltd
cmp
add
aad
stc
xchg
push
in
sub
or
pop
pop
iret
xor
repz
ds
xor
push
lods
daa
xchg
mov
enter
loopne
hlt
push
xlat
sub
sti
or
fwait
mov
cmc
test
out
loopne
mov
stos
mov
push
inc
and
cmp
mov
add
mov
sahf
pop
std
nop
cmpl
and
mov
and
xor
sbb
xor
shll
pop
xor
fwait
lret
cmp
xchg
out
mov
repz
dec
mov
sbb
push
scas
jecxz
sahf
push
repz
pusha
bound
pusha
aaa
test
xchg
pushf
pop
sbb
mov
xor
pusha
adcl
push
movsl
fimull
arpl
cmc
add
js
fstps
jp
sub
popf
and
int3
lock
ret
scas
loop
inc
fcomps
ljmp
frstor
cmpsl
dec
loope
inc
pop
aaa
mov
mov
mov
sahf
jp
mov
mov
mov
mov
nop
adc
xor
ljmp
mov
xchg
lea
aaa
sbb
or
in
jne
cmpl
pop
out
inc
sbb
push
sarl
push
mov
stc
push
sbbb
jno
jne
mov
inc
adc
std
pop
lret
inc
loop
xchg
jmp
ja
sti
push
xchg
mov
add
add
lahf
mov
imul
push
pushf
stos
add
mov
mov
imulb
mov
push
cmc
sbbl
lock
mov
mov
pop
ret
das
adc
lcall
pop
fdiv
jo
mov
adc
pop
push
xor
shl
sub
mov
xor
xor
sbb
cltd
out
sbb
inc
loop
dec
sbb
mov
mov
inc
repnz
les
hlt
mov
sbb
jp
sbb
into
loope
hlt
mov
push
mov
stc
pop
icebp
data16
or
dec
jmp
mov
ss
xor
scas
mov
mov
cmp
or
sti
sbb
aas
mov
and
dec
in
dec
fcomps
sbb
in
or
push
or
pop
mov
or
popf
aas
sbb
lret
jmp
push
jno
pushf
lret
ja
push
pop
jo
cli
aas
addr16
loopne
dec
filds
iret
mov
xor
fmuls
lods
pop
fwait
mov
xor
jl
hlt
out
loope
test
mov
mov
pop
mov
add
leave
jle
lret
fcomp
stos
jno
inc
popa
repz
xor
sarb
pop
and
adc
outsl
xor
rcrl
divl
dec
push
push
jge
fistpll
adc
lcall
aaa
inc
inc
add
or
addw
jnp
cmp
lds
scas
mov
jmp
lea
jle
bound
inc
cmp
or
adc
and
xor
mov
pop
mov
fldenv
shrl
push
mov
mov
pop
sub
pusha
jecxz,pt
sarb
ret
mov
std
jge
pop
aaa
mov
scas
adc
cwtl
and
mov
loopne
pop
arpl
sbb
int3
pusha
aam
sbb
xchg
out
fadds
jnp
lahf
adc
inc
adc
test
loope
mov
cmp
mov
loopne
cmpsb
or
add
xchg
inc
xchg
add
pop
roll
xlat
mov
push
fstpt
inc
lcall
loope
jp
mov
sbb
mov
pop
loopne
and
xchg
sbb
mov
mov
insl
or
or
sub
inc
repnz
out
jmp
push
cwtl
mov
outsl
mov
cmp
mov
push
dec
push
negb
cmpsb
mov
xchg
fnsave
push
adc
roll
adc
xor
mov
cmc
dec
pop
add
inc
lock
add
cmpsb
roll
pop
cli
jecxz
in
mov
push
xor
mov
jg
xchg
or
inc
jle
jmp
cmp
dec
jl
inc
jp
and
ljmp
ljmp
mov
stos
mov
mov
cmp
pusha
cmc
js
insl
dec
dec
jle
or
pop
cmpsl
repnz
push
popa
cli
pop
add
inc
jg
rolb
ret
fistpll
jns
outsl
adc
lods
push
rcrb
gs
test
mov
adc
daa
lcall
or
cltd
dec
test
in
xchg
outsb
fwait
cli
sti
cmp
outsl
js
subb
cwtl
xor
stc
adc
pushf
mov
pushf
sti
pop
pop
cmp
repz
pop
and
fstpl
call
pop
xor
sub
mov
arpl
push
mov
test
cli
js
adc
movsl
lock
fstpt
ret
das
ret
adc
inc
mov
adc
xchg
fistps
test
sbb
inc
pop
stos
pop
xor
mov
xorb
imul
lret
mov
nop
inc
jno
jecxz
addr16
flds
repnz
fnstcw
mov
popf
rcrb
xor
popf
clc
mov
fldenv
inc
inc
subb
into
dec
inc
sbb
add
out
mov
inc
mov
lods
inc
fcomi
dec
sbb
push
and
add
outsb
stos
pop
or
lahf
cmp
fcmovb
push
test
xor
jl
loope
aas
jb
mov
mov
test
push
fcomi
mov
push
stos
loope
test
loop
addr16
mov
adcb
mov
movsl
pop
fsubs
rclb
insl
test
xchg
cmp
mov
imul
jmp
into
xchg
pop
bound
mov
js
mov
or
jmp
test
xchg
add
loopnew
stos
mov
mov
dec
jnp
jmp
inc
test
cmp
pop
mov
outsb
push
cmp
xor
movsl
clc
and
xor
scas
mov
das
mov
jns
test
clc
jecxz
cmp
push
dec
mov
mov
mov
arpl
mov
mov
fists
outsl
out
lret
aam
push
fwait
ret
inc
pop
dec
jmp
ret
into
jne
loop
adc
add
pop
xchg
iret
movsl
lcall
push
mov
xor
stos
mov
lcall
pop
mov
sti
daa
in
jae
jns
ret
jo
sbbl
vmwrite
pusha
sahf
cmp
lcall
mov
mov
jo
inc
popf
push
mov
sahf
xchg
loop
xchg
jns
hlt
xor
dec
cs
cltd
repz
jnp
mov
test
jge
add
push
popf
popa
stc
fcmovnb
pop
rcrb
daa
cmp
and
jno
xchg
mov
dec
dec
xchg
cli
pop
call
mov
aaa
inc
mov
sbb
push
js
push
adc
cli
xor
or
and
add
sbb
adcl
movsl
push
enter
pushf
jb
and
jmp
or
ljmp
push
push
mov
jmp
xchg
jmp
aam
jle
shlb
ljmp
adc
iret
mov
dec
cld
sbbb
mov
test
dec
leave
inc
mov
arpl
jge
or
sbb
mov
push
adc
xchg
ret
test
push
pop
mov
daa
push
lret
ss
sub
sarl
jmp
push
scas
inc
popa
ret
inc
pop
lods
mov
nop
push
sub
cmc
leave
lods
repnz
add
jg
cs
and
push
jle
mov
cmp
sbb
mov
test
sub
in
push
pop
jmp
scas
pop
pop
out
pushf
mov
mov
inc
loope
test
push
inc
cmc
push
mov
jecxz,pn
cmp
test
and
mov
arpl
jae
mov
dec
inc
cmpb
movsl
push
lcall
enter
xchg
xorl
fldl
aaa
adc
js
cwtl
rcll
lods
inc
adc
stc
mov
sub
xchg
jb
pushf
es
cmp
test
inc
das
fs
sub
sub
movsl
push
les
xor
fstpl
inc
aas
outsl
xchg
sarl
es
jns
sub
mov
int3
adc
sbb
mov
pusha
lods
into
jmp
push
cli
mov
rol
neg
push
and
pop
push
sbb
dec
mov
sub
mov
repnz
jo
lds
stos
shl
repz
push
xchg
dec
sbb
adc
into
push
inc
xor
push
ss
jnp
jns
inc
mov
cwtl
jns
mov
xor
pusha
movsl
fs
lds
ss
cmp
add
test
mov
lret
mov
mov
nop
sub
outsb
xchg
movsl
mov
jge
sbb
or
sub
mov
scas
jle
mov
ret
mov
inc
mov
cmp
leave
test
sbb
and
mov
xor
in
in
xor
xchg
loope
sbb
mov
cwtl
add
xor
and
mov
push
or
pop
aaa
pop
dec
out
fbld
out
imulb
push
scas
xchg
mov
lods
push
cmp
inc
sbb
adc
xchg
push
lock
adc
sub
inc
shl
inc
xor
add
lods
jg
aas
mov
push
push
ret
mov
mov
test
pop
test
cmp
shll
pop
aad
inc
mov
fstl
add
mov
rcl
shll
ret
movsl
shlb
fiaddl
sbbb
push
and
mov
pop
jnp
pop
dec
loopne
stos
orb
fsubrs
orb
and
jno
cmpsl
sub
sub
xor
jge
mov
adc
push
loopne
push
and
xlat
lahf
cmp
cwtl
and
mov
stc
adc
push
push
push
mov
lcall
aad
jmp
mov
sahf
dec
popl
roll
pop
loopne
xorl
jp
cmp
fwait
push
or
mov
pop
mov
scas
adc
pop
mov
mov
jmp
inc
inc
sub
fnstcw
cmpsb
xchg
in
sub
xor
jne
out
pop
and
cmpsl
jns
das
and
outsl
jg
pop
fcomi
ljmp
aam
xor
inc
lock
jnp
fdivs
jo
jge
js
rcrb
xchg
push
pop
inc
and
or
inc
das
lods
sbb
lock
add
mov
popa
sub
sub
push
shll
sbb
add
test
xor
scas
dec
stc
js
lock
pusha
adc
outsl
xor
aas
iret
shlb
push
mov
cmpsl
or
pop
aas
mov
jnp
stos
fldl
mov
push
repz
add
aam
xor
pushl
bound
bound
pop
mov
sarb
cmp
mov
addl
cmp
sbb
xor
xor
cmpsl
jle
adc
lret
sahf
xchg
inc
stos
in
das
xchg
scas
out
js
inc
xor
rdtsc
mov
inc
outsl
xor
shlb
repnz
cmc
inc
cltd
pop
mov
hlt
loope
inc
shl
cmp
mov
in
std
sub
fcomps
mov
inc
mov
out
adc
pusha
and
dec
test
pop
rcll
pop
test
rol
cmpsl
std
inc
es
xchg
mov
sarb
movsl
mov
xchg
sarb
pop
gs
mov
mov
out
push
addb
ret
pop
jno
stc
je
leave
icebp
lret
test
cmp
mov
sbb
mov
jmp
leave
add
cmpsb
jg
sbb
mov
cmp
xor
rclb
rclb
hlt
insb
mov
lret
push
cld
and
ja
jno
lods
adcb
xorb
lret
scas
mov
loopne
xchg
xor
ja
xlat
push
pop
lock
and
mov
leave
stc
aas
mov
push
adc
cli
mov
mov
add
add
pop
mov
lret
lea
scas
cmp
push
cmp
and
inc
xor
pop
cmp
mov
mov
and
jne
jae
sbb
and
movsl
mov
lcall
xor
push
mov
fcom
scas
cmp
shl
cmc
out
mov
gs
bound
inc
add
jge
daa
mov
add
sub
xchg
mov
mov
adc
rcrb
test
loope
sti
push
aam
or
scas
jns
dec
aam
in
mov
iret
jo
xor
imul
imul
mov
pusha
cmp
pop
cltd
arpl
scas
in
mov
fdivrl
movsl
push
pop
adc
add
sbb
inc
mov
and
mov
pop
rclb
push
gs
test
setge
cmp
clc
jl
loopne
push
je
mov
movsl
gs
stos
cmp
testl
lea
sub
mov
xchg
ss
add
mov
push
xor
adc
insl
dec
push
lcall
xor
push
and
push
cmp
andb
mov
mov
inc
loope
jb
pushf
pop
mov
stc
inc
xchg
xlat
xchg
movsb
rorb
mov
and
test
movsl
je
scas
mov
outsl
pop
mov
cmc
scas
cs
push
mov
mov
mov
pop
or
stc
fnstsw
stc
rolb
inc
movsl
pop
sbb
loopne
push
mov
xchg
sbb
dec
xchg
jbe
mov
mov
out
lds
add
xchg
inc
aaa
cmp
add
xor
das
fsub
std
movsb
cwtl
aam
sbb
arpl
mov
pop
loopne
mov
hlt
scas
xchg
adc
sub
fstp
dec
pop
mov
mov
xor
sbb
repz
cmp
subl
out
mov
mov
xchg
jle
push
std
adc
mov
add
adc
add
jmp
jns
popf
pop
iret
arpl
shrb
clc
pop
pop
push
mov
xchg
sub
mov
mov
adc
mov
add
push
jno
std
aad
pusha
and
sbb
mov
pop
aaa
and
aad
aam
fisubs
adc
push
sbb
jg
add
xchg
or
mov
sbb
rcll
xchg
inc
hlt
mov
lcall
ret
movsb
cltd
cwtl
inc
jne
cltd
inc
or
cmp
clc
imul
xchg
inc
fdivrl
js
adc
and
fistl
clc
and
pop
stos
mov
mov
shl
daa
fs
push
push
xchg
push
jae
jns
xor
fisttpll
loop
add
mov
in
shll
dec
and
jg
mov
mov
movsl
adc
popf
adc
adc
repnz
adc
mov
testl
xor
xchg
add
inc
jne
pop
stc
popa
pop
mov
fistpl
mov
movsl
movsb
mov
shl
dec
loop
inc
sarb
mov
shll
inc
push
adc
cmp
push
push
ret
lret
fisttpll
mov
cwtl
cmpxchg
ret
loop
mov
out
test
pop
and
test
push
adc
shll
cmp
mov
pusha
aaa
cmp
pop
idivb
out
mov
dec
and
pop
mov
push
clc
fildll
cmp
pop
mov
cmp
jo
mov
jae
leave
and
rcl
mov
pop
and
cmpl
mov
js
cs
mov
lahf
leave
icebp
push
fidivl
fcom
mov
push
out
pushf
adc
cltd
popf
push
pop
movsl
jmp
push
je
xchg
xlat
mov
mov
stos
outsb
jle
shlb
fwait
push
fidivrs
jg
je
adc
lcall
out
inc
and
xor
ficoml
add
jmp
cwtl
pop
add
mov
daa
push
jg
ret
pop
cwtl
cmp
pusha
bnd
and
lret
test
jmp
add
add
ret
imul
cld
pop
sbbb
jecxz
pop
xor
lcall
adc
mov
in
mov
andl
rcll
js
inc
pop
mov
pop
cmp
xchg
dec
mov
mov
je
leave
inc
cmp
mov
jns
cmp
mov
jecxz
xor
out
adc
add
fs
inc
mov
xchg
jle
test
in
jecxz
inc
out
mov
test
sbb
scas
mov
out
push
inc
or
repnz
mov
in
xor
imul
pop
and
sbb
les
xchg
mov
bound
mov
push
mov
cmp
mov
inc
push
ljmp
out
lret
cli
cmp
mov
mov
mov
aad
shl
ret
aaa
sarl
xchg
fcos
mov
jp
inc
testb
lret
push
inc
sub
fisttpl
adc
inc
pop
and
iret
pop
sub
cmp
push
mov
push
repz
pushf
iret
mov
mov
scas
in
popf
mov
push
cmp
jmp
mov
ret
pop
and
inc
add
sub
mov
sbbl
andb
and
mov
fwait
xchg
lea
dec
adc
cltd
xor
inc
sbb
mov
scas
push
push
cltd
jo
pop
and
stc
mov
out
data16
xchg
negb
cmp
addl
fiaddl
int
or
lock
jno
mov
test
push
mov
jbe
arpl
sub
dec
shlb
or
mov
js
cmpsb
mov
fstpt
inc
pop
imul
cmpsb
bound
dec
lcall
adc
mov
stos
pop
imul
imul
loope
push
xchg
ja
mov
clc
data16
icebp
xor
subl
adc
subb
mov
and
repz
aam
adc
mov
unpckhps
loop
daa
insl
or
add
sbb
cld
adc
xchg
int3
sub
adc
lahf
push
in
inc
into
mov
push
mov
mov
jne
or
mov
stos
add
pop
sbb
inc
imul
loope
add
sub
int3
sbb
std
inc
xor
les
xchg
cli
shll
inc
jns
lret
call
jb,pn
inc
cmc
insl
push
lods
ret
movsl
insl
mov
sub
pop
dec
cmpsl
lods
dec
daa
or
jo
gs
popa
movsl
mov
push
bound
and
mov
pushf
sti
pop
fbld
adc
fsts
shrl
in
fistpl
jge
mov
pusha
fucomi
or
fstpl
aas
sub
pop
xchg
xor
into
test
enter
ret
cmpl
data16
cmpl
std
std
cwtl
roll
divb
js
nop
clc
in
and
clc
mov
pusha
repz
xchg
mov
xor
jge,pn
push
mov
and
lods
inc
cmp
and
sbbl
in
add
ljmp
lock
jge
inc
lds
stos
xor
mov
repz
add
add
scas
mov
xchg
mov
xor
inc
cmp
mov
inc
jb
sub
xchg
push
adc
lds
int3
xor
sub
in
inc
movsl
jl
sub
xchg
imul
insb
fimull
pop
ds
pushf
aas
rolb
hlt
sub
je
cs
les
stc
jb
xlat
orb
xchg
sahf
jbe
sub
mov
bnd
into
mulb
xorb
cmc
dec
mov
mov
divb
hlt
mov
fildl
add
cwtl
shll
mov
xchg
cmpsl
fs
ucomiss
adc
jns
sub
lock
shr
pop
inc
jne
pop
movsl
xchg
mov
mov
push
push
into
jne
sub
pop
test
inc
lcall
in
cmc
out
xor
into
mov
shrb
mov
jl
aas
popf
pop
mov
sbb
and
cmp
inc
shlb
jb
xor
stc
add
outsl
lods
in
inc
add
fbld
frstor
inc
xchg
sbb
gs
sbb
idivl
cmp
cli
sbb
fdivrl
add
adc
orb
xor
fsubs
fisubl
mov
in
lods
dec
idivl
mov
mov
sti
sahf
mov
popf
test
xchg
pop
adc
add
mov
jle
and
movsl
and
divl
xor
cmp
xchg
les
nop
push
and
pop
inc
movsl
cmc
or
or
push
or
stos
clc
cmp
sbb
inc
addl
push
aaa
mov
ret
in
lea
sub
xor
fcomi
shrb
xchg
mov
push
mov
fs
mov
cwtl
pop
lret
test
dec
and
movsl
dec
xor
int
imul
or
jne
and
xchg
mov
or
popf
mov
test
rcrl
cs
push
inc
aaa
loopne
fsts
rcr
jp
pusha
cwtl
js
cwtl
fs
mov
lret
fs
adc
cmp
cmp
add
jecxz
cwtl
sbb
inc
in
mov
mov
test
pop
stos
ss
pop
cwtl
pop
mov
out
lods
aas
sbb
xchg
xor
in
lds
popa
rcr
cmp
add
mov
lahf
outsb
or
fcmove
cltd
shlb
sbbl
stos
rcl
test
mov
test
clc
dec
clc
xor
lahf
mov
jno
lcall
xor
idivl
fnstcw
jl
cmpb
pop
insb
mov
or
test
sub
shl
mov
mov
shlw
inc
mov
push
jg
adc
mov
addb
mov
sbb
push
aam
mov
sbb
gs
mov
lds
mov
add
stc
aas
mov
mov
scas
data16
sbb
jb
and
bound
rorb
mov
push
pop
popa
jns
scas
shr
cmp
repnz
cwtl
pop
cli
mov
andb
xor
inc
cmp
flds
scas
jno
cmp
sub
jle
ss
movsl
out
xor
test
rcll
lcall
scas
ror
mov
mov
lea
add
lods
mov
test
or
fsubl
mov
out
xor
push
sub
or
inc
adc
adc
cld
sub
pop
int3
add
rclb
and
mov
pop
sbb
xchg
pop
xchg
in
ret
dec
push
cmpsl
pop
xchg
cli
push
inc
test
add
dec
sti
and
jo
jle
mov
mov
ds
sti
loop
sub
stc
inc
insb
or
jmp
roll
dec
idivl
ret
lods
jno
inc
popa
nop
sub
fmul
mov
mov
add
push
push
ror
jle
adc
dec
lcall
mov
rcrb
xor
loopne
les
enter
icebp
aas
sahf
mov
push
int
and
sahf
mov
jp
pop
mov
jbe
dec
rcrb
sbb
scas
inc
adc
hlt
mov
cmp
aam
outsb
js
push
inc
add
shrl
inc
push
lock
fistl
mov
pop
imul
imul
arpl
lret
xchg
test
mov
in
inc
jbe
inc
call
mov
mov
xor
mov
popf
pop
xor
inc
nop
add
mov
insb
mov
xor
bound
pop
imul
xchg
and
push
and
xchg
divb
dec
roll
popa
dec
icebp
lahf
bnd
xchg
jl
pusha
sbb
add
mov
xor
fwait
imul
sbb
inc
cmc
movsl
subb
pop
test
pop
mov
fsubl
or
sbbb
mov
xchg
push
sti
mov
pop
js
cmpl
jp
rcrb
add
inc
shlb
mov
add
add
hlt
ja
fs
mov
movsb
fiadds
add
add
cmpl
mov
xchg
aaa
mov
aas
inc
push
push
mov
xor
mov
or
inc
das
imul
xorl
push
lock
repz
idiv
arpl
cmp
inc
loop
enter
sarb
pop
jmp
mov
inc
imul
leave
ds
test
push
cwtl
lods
push
xchg
mov
dec
push
test
sub
loopne
mov
js
mov
or
mov
stc
lcall
aam
xchg
mov
inc
scas
nop
movsl
mov
cmpsl
adc
rcrw
ret
bound
imul
adc
mov
and
mov
aaa
loopne
aas
jns
mov
inc
sub
push
nop
add
mov
subl
push
pop
insb
cmp
cld
lahf
add
cwtl
icebp
push
aam
in
loop
jecxz
mov
xchg
test
dec
lcall
adc
nop
insl
jo
aad
jg
or
jle
sti
loope
insl
lock
popf
je
fmull
ja
push
add
loope
pop
test
dec
and
or
daa
gs
loope
mov
lds
sub
jg
xchg
loopne
push
or
pushf
dec
push
add
ss
loopne
lock
mov
loopne
add
mov
mov
stos
or
adc
es
mov
sbb
jle
or
jl
inc
lcall
clc
push
xor
mov
hlt
ret
cmpsb
fnstcw
cmc
inc
cli
leave
mov
filds
sub
fildll
scas
pop
inc
shll
andb
inc
inc
fimuls
rorb
movsb
cmpsb
lock
lcall
xor
jp
sti
insl
xchg
sbb
xlat
xlat
ss
and
jbe
loopne
subl
cltd
outsb
and
cmpb
jns
std
add
inc
lds
jge
jb
cwtl
inc
js
fwait
movsb
dec
int3
pop
jns
out
out
sbbb
movsl
aam
dec
jbe
push
ds
in
sub
loopne
pop
jmp
rcll
sahf
stos
sbbl
fdivs
inc
and
mov
test
add
sahf
mov
push
mov
fstpt
mov
movsl
jge
ret
sahf
mov
push
mov
xor
pop
test
push
ret
popa
xchg
adc
addl
xchg
mov
das
lcall
in
push
lods
mov
mov
test
subl
bound
icebp
sahf
iret
xchg
push
cmpsb
decl
inc
movsl
in
add
negl
xor
sbb
rcr
adc
into
call
jns
outsl
sub
insb
test
sub
andb
shr
cs
popa
js
mov
mov
pop
cmpsl
clc
pop
inc
mov
outsl
xor
rclb
dec
addr16
mov
dec
test
pop
xlat
shrb
pop
add
mov
jne
out
jb
inc
pushf
cmp
mov
mov
pushf
stos
jge
mov
lret
loope
ret
cmp
jno
icebp
jmp
int3
mov
scas
adc
aas
sub
lods
jno
lock
jns
adc
push
mov
cwtl
orb
cmp
xor
dec
inc
lcall
lods
sub
lods
negl
push
cmpb
fwait
cmp
add
lock
push
lret
daa
cwtl
mov
push
sbbb
cmp
repz
inc
aad
jno
mov
data16
xchg
push
mov
cmp
add
out
ja
sarb
jb
cmpsl
sbb
scas
mov
or
mov
out
pusha
push
in
jp
loopne
mov
sbb
test
mov
inc
loopne
lret
jmp
idivb
or
lret
out
nop
dec
nop
sub
jp
and
add
rorb
sub
popa
cli
bound
je
lods
fisttps
jp
adc
div
outsb
loop
mov
mov
rcll
int
aam
pushf
clc
out
ds
shl
pop
cmp
sbb
popf
xchg
lret
mov
pusha
pop
sbb
in
test
mov
popf
mov
lret
adc
xchg
lret
repnz
popa
movsb
xor
out
fdivrs
movb
jmp
imul
sahf
cmp
push
xchg
dec
xor
or
das
in
jmp
test
push
fcmovb
mov
cmp
cmp
test
out
scas
xchg
xchg
cmp
xchg
push
flds
out
in
fmuls
into
shll
mov
ja
lahf
ret
leave
ljmp
cmp
sub
arpl
addr16
sti
dec
loop
pop
fistpl
lcall
push
cli
fsubl
push
lods
cmp
xchg
faddl
jnp
xor
subb
stc
inc
and
push
or
fmulp
sbb
jae
adc
sar
rcrl
dec
pop
dec
cmp
xchg
imul
push
sti
adc
push
jmp
mov
sbb
push
bound
sbb
popa
jb
cli
daa
sahf
mov
inc
jle
ret
pop
push
leave
cmp
pushl
or
xchg
ss
cld
outsl
std
cld
in
inc
mov
clc
pop
std
fcoms
mov
xchg
loope
jl
inc
cmc
pop
out
push
xchg
cs
pop
mov
or
subb
jp
inc
cmp
shlb
cld
sar
jmp
xor
pop
cs
leave
jp
ss
dec
sub
stos
shll
aas
mov
pop
test
pop
movsl
sbb
leave
push
loopne
int
xlat
and
dec
lock
lcall
popf
cmp
dec
loop
gs
dec
pop
xor
daa
scas
mov
es
out
mov
jmp
pop
sbb
pusha
adc
push
pop
loope
xchg
mov
aaa
clc
nop
ror
stc
adc
push
xchg
loope
mov
pop
ret
call
pop
adcb
mov
std
hlt
or
movsb
outsl
cli
out
insl
sbb
js
mov
push
stc
fsubl
xor
add
jp
sbb
fs
popa
outsb
mov
and
adc
inc
aad
sbb
stos
fsubl
pop
xor
adc
call
add
jno
ret
repz
inc
jno
fstps
lcall
add
push
pop
xlat
mov
jp
neg
or
mov
adc
or
pop
stc
sub
push
sbb
mov
adc
mov
popf
xchg
xchg
adc
cmpb
or
xchg
xor
mov
jecxz
cmp
add
xchg
js
adc
dec
jb
inc
shll
rcrl
sbb
clc
and
mov
mov
shll
add
and
mov
repz
jp
jns
and
sbb
sub
les
sbb
daa
scas
mov
aam
xor
mov
data16
jl
lret
je
jo
roll
in
adc
imul
jle
and
cmpsl
xor
jp
adc
fstpl
pop
aas
pop
insl
adc
fbstp
bound
xor
outsb
sbb
pop
notb
and
pop
mov
cmp
shl
jecxz
mov
mov
mov
or
cmpsb
jno
push
push
test
sbb
sbb
fdivr
jno
add
lods
stc
jg
inc
cmp
mov
aaa
jl
cltd
add
mov
test
dec
xchg
data16
mov
mov
bound
movsb
dec
pop
inc
and
ret
dec
filds
jns
mov
mov
inc
insb
and
arpl
mov
inc
je
add
fdivr
jle
cmp
ds
bound
ja
lea
push
mov
push
jno
or
bound
test
sahf
dec
mov
cmpsb
mov
movsb
xor
xor
movsb
pusha
outsb
cmp
sub
cs
fstpl
jp
notb
jae
rcrb
ss
xor
das
scas
shr
popa
pop
mov
mov
jbe
sahf
mov
ljmp
lea
push
gs
mov
xchg
xor
mov
dec
push
jnp
xor
jl
popa
xor
sbb
sar
pop
jle
lcall
and
stos
cltd
loopne
aam
jp
jecxz
daa
pop
mov
push
daa
cmp
ficoml
sti
add
aad
mov
push
mov
ds
cld
sub
xchg
mov
loop
loopne
or
mov
inc
pop
push
jge
ret
push
sbb
mov
lret
stos
jnp
ljmp
jbe
sti
in
jle
sbb
pop
pop
or
sahf
fisubrs
and
frstor
gs
jne
xchg
jge
fdivs
xchg
pop
sbb
shll
repz
cmp
adc
movsb
cmp
lahf
out
mov
adc
dec
data16
enter
andb
insb
jl
sbb
addr16
in
sbbb
scas
cmp
bound
mov
mov
or
scas
rcll
loopne
sti
movsl
scas
sbb
popf
inc
inc
add
adc
mov
pop
bound
inc
sarl
test
pusha
cmp
cli
popf
inc
nop
push
ret
mov
je
adc
daa
sahf
ss
icebp
popa
popa
sahf
cmpsb
sub
pushf
jnp
popa
not
shll
xchg
popf
mov
push
scas
mov
repz
js
cwtl
mov
mov
xor
jl
mov
popf
and
js
xor
ret
ss
or
pop
into
xchg
fdivrl
ret
fsubrs
mov
xor
mov
mov
jns
inc
xchg
subb
lea
and
inc
cmp
mov
ds
cmp
pop
mov
enter
and
arpl
loopne
mov
mov
add
stc
push
loopne
ret
int
push
inc
push
scas
dec
mov
cli
xor
aas
pcmpeqb
iret
pop
call
mov
or
mov
adc
aaa
in
mov
add
mov
fnsave
leave
cld
icebp
add
pusha
mov
push
mov
or
mov
sbb
adc
xchg
push
push
adc
xchg
pop
cli
jp
addb
clc
fistpll
das
mov
mov
push
jp
mov
clc
bound
jg
mov
fldl
xchg
xchg
fs
pop
inc
jle
inc
mov
inc
aam
or
outsb
sub
xchg
hlt
fadd
pop
fadd
adc
ret
jno
jecxz
imul
push
push
sub
or
clc
ja
sbbb
nop
les
out
push
sub
daa
shll
pop
xchg
pop
inc
xor
testl
cmpb
mov
inc
sbb
pop
push
pop
outsb
stos
xchg
mov
xor
push
sbb
mov
clc
mov
push
mov
pushf
jge
mov
insb
and
hlt
lds
stos
mov
stos
mov
dec
sbb
push
test
and
loopne
addr16
cmp
xchg
lcall
fs
xor
cmp
fs
std
push
lret
cmp
pop
sub
inc
mov
mov
jns
pusha
push
xor
inc
push
cmp
fistpl
testb
pop
ret
pop
mov
aam
push
mov
into
sbb
js
lret
xor
sbb
mov
aas
xchg
xor
and
sbb
add
cmp
cmc
lcall
cmp
adc
outsl
mov
adc
mov
aaa
pop
ss
or
adc
leavew
ss
movsl
mov
mov
scas
push
pop
xor
mov
mov
mov
adc
cmp
ret
repz
bound
cmc
fcmovbe
xor
pusha
mov
pop
lahf
jecxz
ss
lcall
sub
nop
sub
sbb
and
adc
fcmovnu
ret
pop
scas
fsub
lret
shll
adc
mov
sbb
jp
adc
push
xor
or
fwait
jg
cltd
jp
push
sub
xchg
xor
push
sbb
push
ror
mov
es
cmpsl
pop
jge
xchg
mov
lock
sbb
fadds
pop
stos
mov
dec
int
pop
outsl
fwait
pop
xchg
add
fisttpl
mov
pop
sbb
cld
stc
cld
movsb
test
push
xor
mov
std
popa
add
stc
jbe
popa
test
mov
sbb
punpcklwd
fstl
add
xorb
jp
mov
cmpsb
fnop
pop
mov
mov
mov
fdiv
rclb
mov
add
bound
mov
fsubl
pop
pop
ret
pop
mov
repz
lret
xor
mov
cltd
jp
pusha
xchg
pop
cmpsl
rcrl
sub
outsb
pop
repz
mov
pop
dec
sub
mov
cwtl
fidivl
outsb
fcoml
dec
dec
mov
fdivrl
inc
pop
jno
sbbl
cmp
outsb
xchg
add
cmpl
sbb
xchg
sbbl
mov
dec
aas
dec
mov
rcrl
sbb
push
pop
pop
sti
pop
adc
scas
mov
xchg
xchg
fwait
out
mov
push
xor
mov
push
inc
jmp
rorl
add
bound
mov
imulb
outsl
push
jo
push
push
sbb
jbe
outsl
jo
mov
and
rclb
adc
shl
inc
sbb
dec
adc
js
adc
stos
and
jl
test
add
sbb
sub
dec
mov
into
dec
sbb
sub
movsl
adc
outsl
push
andb
hlt
jbe
adc
repz
movsl
rcrl
test
insl
inc
mov
mov
xchg
mov
lcall
lods
cmp
inc
inc
loop
mov
sub
cmpsb
mov
int3
inc
push
mov
ret
cwtl
shlb
sub
fsubl
fimull
rclb
and
fdivrs
push
mov
dec
mov
movsl
and
cmp
adc
mov
jno
stc
fidivrs
or
rorb
inc
dec
sahf
xchg
cmp
mov
scas
cmp
dec
js
cmp
cmp
dec
lods
push
pop
fsub
dec
stc
mov
mov
loopne
shr
mov
aaa
sbb
aaa
xchg
dec
xor
adc
mov
shrl
ja
jb
cwtl
xchg
ret
fidivs
xor
xchg
test
loopne
mov
jp
or
dec
in
xor
stos
inc
sti
add
xor
adc
inc
stc
or
pusha
jmp
pop
stos
pop
mov
inc
jns
fnsave
mov
xchg
mov
aaa
mov
xor
shrb
jb
adc
xlat
in
daa
test
lcall
xchg
mov
jnp
dec
dec
int3
sub
xchg
add
and
cltd
fwait
jl
test
sub
cmp
xchg
ret
sbb
or
in
popa
mov
xchg
mov
push
pop
bnd
cmp
mov
push
fcoms
js
add
add
test
rolb
ss
bound
cmp
popf
push
inc
mov
ds
scas
inc
rcr
pop
ds
xor
shr
fsubrs
mov
xchg
push
test
push
mov
mov
dec
push
repz
cmpb
lcall
bound
icebp
sub
iret
pop
test
xchg
stos
add
inc
sbb
cmp
jle
jecxz
es
xchg
mov
filds
mov
jbe
mov
mov
cmp
mov
and
fcomi
movsl
or
fdivl
ss
mov
dec
sub
pop
loopne
adc
fildl
mov
popa
add
inc
mov
stos
xchg
inc
mov
mov
inc
mov
sahf
ret
test
inc
mov
mov
or
imul
mov
in
loop
cmp
aaa
mov
cmpsl
adc
fldenv
mov
pop
daa
xlat
jb
dec
jmp
mov
pop
into
mov
jl
cmp
xorl
pop
imul
adc
adc
testl
jl
inc
loope
mov
xchg
cmp
arpl
cli
mov
jl
and
mov
add
cmpsb
fldt
mov
cmpsl
mov
sbb
iret
loope
testl
lods
push
xchg
lcall
call
dec
inc
lods
into
mov
jecxz
popa
mov
push
xor
inc
inc
push
shll
leave
sarb
test
test
movsb
xchg
leave
pop
int
sub
adcb
cwtl
jb
add
pop
mov
sub
repz
js
subl
xor
push
inc
xlat
pop
popa
xchg
mov
mov
add
int3
cmp
int3
mov
xchg
mov
fstl
aaa
and
out
in
addr16
rclb
rcrl
iret
add
out
jns
fs
add
fstpl
mov
mov
into
mov
fs
bnd
sbb
mov
aam
pop
cmc
outsb
test
loopne
inc
and
movsl
jno
fstps
adc
xchg
shlb
dec
mov
mov
mov
xchg
cmpb
popf
scas
adc
xchg
push
movsb
lods
adc
mov
mov
mov
cli
xor
jo
xor
or
out
push
in
cli
jecxz
pop
adc
testl
call
dec
sar
shlb
out
mull
das
stc
jmp
ret
out
mov
dec
bound
out
pop
je
fwait
pop
inc
rcrb
inc
loope
dec
insb
pop
inc
mov
daa
ficoml
fstps
mov
nop
mov
loop
adc
inc
mov
call
add
jns
pusha
or
in
mov
ja
mov
call
aaa
mov
inc
clc
cmp
lock
xchg
mov
fwait
roll
shrl
inc
inc
fistpl
mov
fistl
mov
pop
movsb
imul
mov
test
mov
jnp
fsubp
fwait
popf
dec
jecxz
orb
xchg
mov
pop
andb
aaa
loope
xchg
imul
out
pop
ja
or
imul
out
adc
cmpsl
stc
adc
inc
jne
cli
addr16
xor
in
sar
push
lret
lret
adc
sbb
pop
into
scas
sti
orb
pop
cwtl
rcrb
js
cmpsl
movsl
ljmp
push
sbb
test
mov
ret
add
ds
idivl
movsl
cmp
sti
loope
arpl
test
adc
mov
stc
pop
push
and
movsb
mov
jo
xlat
jp
test
jns
add
inc
dec
mov
popa
inc
mov
xlat
sub
mov
js
mov
inc
imul
pop
jmp
subb
mov
fistpl
sbb
movsl
or
rcrb
xor
xchg
adcl
lea
xchg
orb
outsb
xor
inc
push
mov
sub
inc
pusha
clc
xchg
pushl
inc
push
outsb
rep
popf
pusha
bound
push
mov
rcrl
stos
mov
or
lods
cli
fs
xor
stc
fnstcw
or
inc
fnsave
adc
sbb
fistpll
pop
movsl
mov
jo
jb
jge
xchg
or
sbbl
xchg
inc
out
xor
fs
sub
es
idiv
xlat
fs
mov
inc
xchg
inc
pop
inc
mov
inc
enter
sub
popa
mov
neg
dec
testl
bound
insl
outsl
movsl
out
cwtl
scas
xorb
addr16
mov
adc
mov
int3
fs
lock
outsl
les
cmp
jg
inc
mov
push
lods
adc
cmp
int3
sahf
stos
cmp
cli
fnstsw
shl
pop
push
pop
flds
cmp
nop
dec
pop
hlt
mov
mov
cmp
dec
pop
pop
mov
nop
cmp
pop
cmp
cmp
or
fistpll
mov
stc
repz
cs
or
and
ds
jo
cld
inc
mov
imul
xchg
mov
mov
ds
fwait
push
xor
and
sbb
cmp
xor
lahf
fidivrl
scas
adc
mov
rcr
mov
cmp
in
jp
enter
jns
insl
mov
shll
out
xchg
aam
adc
mov
movsl
sub
daa
xchg
mov
push
leave
test
ret
adc
mov
mov
xorl
fdivrl
ljmp
sar
inc
lret
mov
push
int
out
enter
fcomp
inc
xchg
dec
int3
xchg
mov
inc
mov
push
pop
inc
insl
popl
mov
mov
add
test
mov
stos
ficoms
mov
add
mov
inc
mov
inc
dec
ss
out
mov
mov
paddusw
cmp
mov
fnstsw
mov
push
cmp
inc
add
bound
add
xor
in
test
inc
notb
popf
inc
adc
mov
mov
mov
sbbb
fnstenv
cmp
icebp
fscale
test
gs
ret
push
roll
pop
negb
cli
pcmpgtd
shlb
jbe
rcll
fs
enter
aas
addr16
daa
inc
stos
mov
pop
lret
in
sbb
cmp
jecxz
add
mov
pop
inc
loope
stos
mov
mov
mov
mov
popa
clc
test
clc
iret
or
sbb
ss
ds
leave
stos
sbb
pusha
jecxz
sbb
fadd
mov
adc
mov
pop
pop
pop
and
dec
shrl
add
shrl
mov
ret
lock
lods
bound
insb
loopne
inc
mov
pop
imul
out
xor
and
subl
arpl
pop
mov
push
mov
jl
lock
ljmp
dec
jns
xchg
pop
pop
xchg
test
ds
jb,pn
mov
sbb
mov
dec
js
add
stos
add
xchg
sarl
and
dec
mov
add
cmp
adc
daa
lcall
mov
xchg
xchg
xchg
or
adc
mov
jb
fimull
rolb
xchg
cmp
aad
loopne
mov
fwait
xor
mov
icebp
mov
mov
inc
bnd
movsl
daa
jl
bound
pop
loopne
xchg
push
inc
push
popa
js
aam
insb
adc
cmp
popf
shlb
lahf
cmpsb
stos
adc
lods
xor
add
xchg
xchg
cld
cmp
sbb
inc
sahf
roll
push
es
mov
cltd
inc
mov
shr
jl
mov
ljmp
iret
cwtl
sbb
andb
lcall
push
xchg
pop
inc
cld
xor
loopne
xor
mov
scas
sti
mov
cmp
ret
inc
ja
fisubs
cli
mov
xor
dec
and
mov
fisttpll
push
inc
mov
xchg
jecxz
stc
test
inc
loope
cs
and
xor
lods
mov
ja
outsb
and
xchg
dec
sub
lea
dec
int3
xor
jle
bound
add
cwtl
cli
push
push
inc
enter
pop
cmp
dec
xor
std
div
jo
adc
je
adcb
pop
sbb
cmp
ljmp
inc
iret
adc
shl
inc
mov
rcrl
lcall
ds
mov
dec
push
fs
loopne
repz
arpl
outsl
xchg
sub
mov
rolb
testb
push
mov
dec
adcl
and
jp
shlb
push
out
sbb
mov
pop
aas
test
scas
ja
mov
jp
test
mov
mov
cs
dec
jb
ret
movl
adc
cmp
loopne
sub
testl
xor
incl
add
or
pop
in
jl
mov
add
inc
popf
dec
nop
mov
test
fwait
mov
push
xor
movsl
mov
icebp
into
push
sub
test
sbb
iret
cmc
mov
js
pop
push
jae
mov
lret
fnstcw
pop
fcompl
in
cwtl
cmc
iret
mov
pop
jge
pop
aaa
js
mov
out
jo
std
jbe
shll
mov
sbb
jnp
jo
xchg
add
add
ds
cmp
sub
pop
fsubrs
lods
mov
or
cmp
xchg
sahf
rcl
mov
inc
nop
negb
cld
jecxz
insb
dec
pop
mov
adc
xor
push
add
daa
notl
push
fs
fstp
or
cmpsl
jge
test
mov
pop
adcb
jbe
loope
dec
sub
insl
cmpsw
add
sub
mov
or
int
inc
xchg
dec
mov
stc
insl
xchg
jae
mov
mov
push
mov
xor
mov
faddl
rorb
pushf
and
popf
push
out
data16
ja
daa
mov
stos
andb
cmpl
rorb
shlb
add
ret
adc
mov
adc
jno
mov
sub
sbb
insb
jp
fldenv
js
sarl
sub
mov
movsl
aaa
test
mov
dec
add
sub
mov
pop
mov
fnstcw
out
scas
inc
inc
mov
inc
aas
xchg
jnp
rcrl
push
or
cmpsl
mov
inc
adc
xchg
test
icebp
lock
adc
push
cmpsl
ds
push
ds
cmp
mov
sub
cmp
call
mov
xchg
cltd
aas
jle
mov
xchg
lcall
cli
jnp
mov
subb
xor
push
test
sub
fmuls
and
cltd
shll
mov
mov
icebp
sbb
mov
bound
pop
mov
push
push
mov
cmp
sarl
adc
in
push
pop
sbb
js
lods
cmpsl
inc
loopne
inc
sbb
lcall
pop
jbe
inc
movb
insb
push
fdivrl
xor
jecxz
push
inc
insl
mov
lea
insl
cmp
adc
clc
test
fdivp
jl
les
mov
inc
cmp
nop
pop
add
add
pusha
insb
sbb
mov
mov
movsb
or
cmp
adc
insb
lock
pop
pop
dec
aas
inc
out
add
shll
xchg
loope
jge
hlt
daa
adcl
cmpsb
roll
cmp
pop
repz
pop
jmp
xchg
aas
ret
adc
outsl
and
xor
stc
inc
cmp
xor
stc
push
test
mov
sub
ficompl
lea
push
mov
test
iret
xchg
or
mov
rcrl
aaa
jo
popa
icebp
mov
or
push
rcr
cmp
fs
mov
ja
cli
cmp
sbb
adc
cmp
pop
or
je
adc
inc
mov
hlt
mov
test
sub
pop
aaa
sbb
mov
js
dec
out
dec
mov
stc
cmp
lret
add
inc
cmp
xor
sub
add
ss
in
pushf
faddl
in
cwtl
xchg
outsb
mov
mov
js
outsb
mov
mov
jb
insb
dec
jnp
xchg
mov
mov
pusha
sti
xor
cs
cltd
xchg
jo
sbb
xchg
jne
mov
std
jnp
std
mov
inc
and
fcomps
mov
fstpl
mov
jl
pop
or
xchg
pop
pop
bound
and
int3
roll
pusha
mov
jnp
int3
addl
mov
shll
mov
mull
sbb
sub
sub
pop
sti
iret
pop
inc
jno
inc
aas
fmul
cmp
fcmovnbe
les
out
push
sub
in
xchg
mov
ss
cmpsl
cmp
adc
out
into
mov
orl
insb
xlat
cmp
cmp
jg
out
gs
insl
cmp
daa
add
mov
pushf
or
jmp
inc
orb
data16
iret
pop
subl
or
adc
cmp
xor
lods
or
ds
jb
lahf
jle
fiaddl
cwtl
mov
cmp
repnz
inc
mov
neg
push
fldt
cmpsl
mov
and
pop
popa
jns
dec
lods
imul
fisubl
fldl
stc
mov
lds
in
sbb
inc
sar
jecxz
mov
mov
jne
lods
divb
mov
xchg
daa
adc
adc
jl
mov
lods
adcb
xchg
adc
mov
popa
fadds
enter
enter
lock
imul
lods
mov
stos
aam
jbe
cmp
sarl
mov
pop
adc
jp
fstpt
and
notb
dec
mov
loope
inc
test
cltd
push
hlt
inc
cwtl
jp
cmpsl
mov
ja
and
js
xor
inc
scas
inc
xchg
test
add
insb
outsb
push
fcompl
inc
and
cmp
mov
in
jo
sahf
xchg
pop
sbb
bound
rolb
cmp
pop
loop
mov
pusha
xchg
mov
pop
jnp
pop
and
or
mov
fisubrs
scas
push
jb
out
lods
cmpb
fisubl
cmp
push
outsl
xor
mov
xchg
fs
jge
nop
aas
mov
mov
pop
mov
mov
jbe
mov
mov
loopne
cwtl
cmp
add
inc
sahf
lods
nop
rcrb
out
clc
cmpsb
sahf
sti
movsl
mov
adc
flds
push
mov
xor
mov
add
push
nop
mov
push
cs
test
shrl
aas
push
cmp
lret
shl
adc
pusha
out
rcll
aas
mov
jmp
jbe
cmpsb
loope
sub
out
push
scas
sub
hlt
or
or
gs
mov
ret
xchg
cmp
lds
outsl
mov
cmp
push
mov
dec
cmp
outsb
rcrl
ret
lods
inc
bound
test
pusha
pop
cmpb
add
sbb
push
cmc
mov
mov
call
hlt
insb
xchg
out
mov
push
popa
cmp
cmp
divb
sbb
lahf
push
pop
test
je
int3
mov
pop
pop
cltd
jecxz
mov
mov
cmp
cmp
sbb
sub
inc
push
pop
mov
jae
lcall
sub
cmp
dec
pushf
dec
sti
cmp
js
in
mov
dec
xor
test
xor
sbbl
std
jecxz
das
cltd
nop
ds
es
adc
inc
inc
adc
icebp
push
jl
cmp
stos
lret
aam
fnstenv
xor
imul
es
cmp
jp
inc
jae
jge
mov
push
jge
movsl
cld
jne
add
jbe
mov
aam
popf
in
cli
jbe
popf
jmp
into
inc
frndint
mov
push
and
mov
aam
or
negb
test
dec
ret
sub
adc
cltd
push
addb
mov
shll
lcall
fisubrl
inc
pop
push
sbbb
pop
stos
jo
outsb
push
aaa
or
test
sub
lock
xchg
mov
inc
faddp
mov
push
imul
pop
fdivrl
xor
das
enter
cmp
adc
rorl
xchg
push
fwait
lahf
mov
inc
mov
roll
push
loopne
mov
sbb
stos
bound
cli
push
and
xor
xchg
adc
dec
jb
jp
popa
sbb
push
mov
cmp
xchg
jns
into
xchg
mov
sbb
mov
fisttpll
jmp
push
jnp
xchg
outsb
repz
adc
mov
cli
dec
pop
out
cltd
jl
andb
dec
mov
stos
shl
xor
mov
out
lods
xlat
std
mov
mov
mov
push
fs
test
xchg
repnz
dec
ds
in
adc
jge
xchg
inc
aaa
adcb
pusha
xlat
add
dec
jbe
and
mov
mov
pop
dec
pusha
push
sub
lock
xchg
lods
pop
xchg
jne
and
mov
xchg
jae
fucomi
loop
inc
push
pop
push
mov
sub
mov
add
xchg
insl
loopne
and
inc
lcall
out
sbb
mov
inc
dec
jne
sub
lods
dec
cmp
push
xchg
repnz
inc
adc
ret
mov
fisttpl
mov
jmp
sti
enter
inc
fmul
cmp
or
movsb
scas
mov
jecxz
mov
inc
repz
push
inc
cltd
sbb
add
cmp
cwtl
mov
sub
push
pop
xchg
fistpl
adc
iret
outsl
and
mov
fimull
gs
mov
xchg
pop
and
sub
out
mov
cmp
data16
and
lahf
shrb
sar
mov
rcrb
or
int
jns
pop
popa
sbb
cmc
jge
testl
loopne
data16
in
sub
push
pop
cmc
push
push
mov
mov
jecxz
icebp
jnp
jl,pt
loopne
loopne
mov
mov
push
js
push
jns
or
imul
jmp
lcall
jecxz
xchg
cmp
lods
sbb
xchg
sbb
mov
stos
add
pop
mov
cmpsb
mov
mov
lahf
cmp
aad
cltd
sbb
and
and
das
ss
jecxz
lret
mov
std
outsb
lret
sub
std
shll
inc
mov
clc
shrl
adc
lcall
mov
rcrb
cmp
loopne
loopne
mov
xlat
add
popa
aaa
and
pusha
xchg
and
insb
sub
push
and
cmp
mov
pusha
adc
xor
xor
cwtl
enter
loop
into
pop
and
mov
ss
sub
sub
mov
iret
sbb
inc
pop
movsb
push
push
orb
mov
and
es
push
loop
outsb
call
std
fldl
cmp
mov
std
pop
add
xorb
arpl
int
pusha
xchg
lcall
pusha
adc
mov
cmp
sub
xor
frstor
inc
sbb
sarl
mov
jnp
outsb
or
outsl
cmc
push
rorl
andb
icebp
cmp
aaa
icebp
cmp
ja
inc
push
cmpl
mov
addl
push
out
movsl
int
sbb
push
mov
inc
testb
jge
enter
inc
icebp
pop
mov
push
aam
push
imul
inc
pushf
and
lahf
jge
xchg
xchg
icebp
loopne
into
jl
sbb
lahf
add
jns
pop
jp
mov
cmp
inc
cmpb
ror
pop
mov
xor
jl
mov
sbb
fnsave
clc
insb
jge
sahf
mov
sub
mov
mov
and
add
int3
hlt
xchg
mov
mov
push
je
cmp
hlt
repz
add
test
mov
loop
mov
push
rcrl
dec
data16
movb
pop
mov
xchg
bound
cmp
int3
cmp
mov
lods
inc
aad
push
mov
mov
pop
lret
jo
cmc
gs
inc
jp
sahf
scas
xchg
xchg
inc
mov
inc
add
cli
pop
mov
mov
les
push
shl
mov
cld
mov
cmp
mov
cmp
lods
mov
mov
leave
xchg
lds
mov
inc
insl
push
add
shll
pop
hlt
testb
loope
add
xor
cltd
xor
cmp
dec
pop
and
adc
pop
jecxz
add
mov
in
pop
fdivs
mov
getsec
out
aas
out
ss
mov
mov
xor
roll
mov
test
inc
push
leave
adc
int
lret
sbb
ret
pop
pushf
aas
mov
fucom
loopne
icebp
in
js
clc
sbb
rol
mov
jl
rclb
pop
cld
lcall
inc
into
insb
xor
fdivs
dec
mov
or
xor
mov
js
je
sbb
icebp
shll
sub
shll
push
les
xor
add
enter
cmp
arpl
jge
test
xor
jp
test
push
jb
movsb
add
inc
lret
push
out
aaa
sbb
xchg
inc
xchg
xchg
jo
mov
dec
mov
inc
aas
push
fwait
shll
movups
push
addr16
test
and
mov
push
xor
cmpl
adc
jb
xor
mov
cmc
sbb
in
movsb
xchg
jno
mov
or
mov
mov
sbb
xor
jl
mov
in
mov
inc
mov
ds
inc
push
bound
sub
jnp
imul
int3
xchg
leave
sub
jmp
mov
pop
jg
xchg
push
mov
stos
loopne
inc
ja
xor
std
dec
nop
ss
xchg
and
mov
xchg
or
movsb
push
orb
xchg
je
pop
test
shrl
inc
xor
mov
mov
adc
pop
arpl
sahf
lahf
sar
ret
jns
xor
lods
sub
mov
push
cwtl
testb
xor
jns
insl
or
sub
lahf
jg
inc
rolb
mov
loopne
pop
dec
push
test
mov
mov
push
inc
sti
inc
push
cmp
es
jp
jb
mov
clc
ja
jbe
inc
aaa
xor
sbb
or
jge
cmpsb
pop
popa
sahf
pop
movsb
sar
ret
es
push
jne
insl
stos
scas
sti
dec
std
daa
std
push
or
cli
iret
cltd
or
stos
sbbb
sub
sahf
mov
scas
lret
gs
mov
mov
insb
inc
and
push
jecxz
adc
xchg
adc
pop
pop
fcmove
repnz
test
mov
adc
insl
mov
daa
out
cmp
mov
pop
rolb
fcmovu
test
sbb
push
out
enter
xor
bound
xchg
pop
test
mov
adc
jecxz
fnstsw
xor
jp
insb
nop
stc
mov
push
cltd
dec
pop
xchg
push
fs
add
and
mov
sub
idiv
pop
dec
add
cmpsl
addr16
ss
mov
insb
pusha
popa
dec
xor
daa
cmp
sti
xchg
cmp
xlat
aas
add
sub
lret
mov
xchg
mov
xor
ret
mov
xor
adc
lcall
sahf
insl
pop
fmull
scas
roll
jle
icebp
test
mov
inc
mov
fisubs
lahf
aam
pusha
inc
rol
jno
adc
lea
inc
icebp
ss
or
inc
adc
inc
push
rcr
xor
xchg
jp
lods
mov
mov
ret
adc
hlt
aaa
out
addr16
pop
out
sub
cli
mov
mov
jae
mov
jns
dec
mov
icebp
std
popa
adc
adc
inc
pop
insb
leave
sbb
fsubl
call
push
inc
out
es
jbe
push
mov
addr16
test
inc
mov
sarl
fstp
push
lock
cmp
pop
inc
movsb
inc
sahf
repnz
fdivrl
movsb
fdivs
add
in
jecxz
daa
imul
sti
data16
fcomps
rcll
fs
xor
pop
daa
aaa
jnp
xchg
mov
xor
loopne
fiadds
mov
cmp
mov
cli
bound
cmp
xor
cmp
sub
andl
xor
sub
sbb
sar
xor
outsl
cmp
dec
push
pop
sbb
repz
inc
hlt
sub
mov
pop
loope
jbe
inc
cmp
lret
fisttpll
and
jne
shl
push
jb
loopne
movsb
pop
jno
jl
jb
test
adc
insb
pop
jnp
push
movsl
mov
test
xchg
ljmp
mov
jmp
push
pop
clc
jno
mov
lret
loopne
outsb
lret
dec
fimull
cmpsb
inc
or
loope
mov
pop
mov
jb
bound
mov
cmp
xor
sbb
mov
mov
jp
lcall
xchg
xchg
xchg
add
rorl
mov
push
add
sub
cmp
sub
lahf
and
addr16
aad
cltd
test
jg
push
outsb
pop
inc
lret
or
xor
lods
ret
jns
inc
inc
loopne
adc
rclb
mov
test
xchg
xchg
shlb
xor
aas
stos
jp
fs
pop
mov
jnp
popa
inc
shrl
and
mov
fildll
fisubl
lcall
lcall
insb
mov
pop
call
xor
mov
in
mull
nop
dec
push
mov
cmp
mov
cmp
cmp
ret
adc
out
mov
inc
cli
cmp
xor
mov
out
push
mov
inc
xchg
aam
das
int3
stos
call
cmpsl
movsb
test
push
jae
mov
pushf
pop
bound
idiv
jb
adc
inc
and
sub
mov
sub
fdivrs
pop
inc
inc
dec
gs
mov
pop
shl
data16
push
mov
add
aam
inc
add
push
sub
cmp
inc
sarb
ds
fisttpl
test
mov
aaa
daa
jbe
fidivl
dec
dec
fsubrp
scas
pop
in
stc
jne
push
and
cmp
add
sbbb
xor
in
sbb
jle
sbbl
jnp
cwtl
and
add
addr16
setge
in
popf
xor
jl
xor
sbb
mov
mov
lcall
cmp
push
dec
ret
test
xchg
fcoms
in
xor
add
sub
fadds
push
pop
add
xchg
mov
jno
xor
aas
rorb
loope
inc
and
push
popf
test
mov
pop
xchg
loope
fistps
mov
insb
dec
cmp
rclb
adc
rolb
adc
inc
xorl
inc
popa
mov
adc
mov
inc
cmp
scas
cmp
mov
xor
or
test
ljmp
jl
sbb
xor
dec
xchg
inc
adc
push
pop
adc
cmc
cltd
hlt
adc
outsl
cmp
pop
inc
jp
test
cmp
pop
xchg
cmpb
cmp
mov
pusha
dec
push
xchg
mov
insb
jne
cltd
aad
nop
ret
xor
pop
add
xchg
aam
inc
add
addb
mov
fdivrs
out
mov
mov
xchg
shlb
scas
jmp
inc
inc
outsl
cmp
idivb
jp
and
sbb
movsl
out
sbb
test
cmp
je
call
and
fwait
or
adc
dec
test
adc
sub
pusha
inc
adc
or
xor
cmp
pop
mov
aam
negb
xor
cmpb
andl
cltd
mov
xor
ss
pop
js
fsubl
repnz
dec
mov
scas
dec
xor
insb
dec
jmp
out
cmp
mov
imul
ss
jl
ds
lret
lahf
stos
add
jle
mov
ret
pushf
inc
dec
push
in
inc
push
jl
je
adc
mov
adc
stos
xchg
mov
shr
xchg
or
inc
sbb
pushf
cs
xchg
aas
jns
shr
cmp
cwtl
imul
xor
inc
filds
sbb
call
pop
push
sbb
leave
jnp
insl
pop
add
dec
pop
mov
mov
ss
icebp
pop
stc
sub
pusha
inc
xor
movsl
pop
nop
imul
adc
fcmovb
lds
rcrl
pusha
pop
mov
add
adc
test
fistl
jle
repz
jl
mov
add
aas
adc
aam
push
add
xor
inc
mov
mov
repnz
cmp
scas
fsubl
push
pushl
sahf
sbb
add
rcll
or
rcr
mov
lcall
adc
lods
bound
out
mov
push
shlb
repz
mov
adc
pop
xchg
inc
aas
jnp
pop
mov
push
inc
cmp
sbb
mov
cmp
sbbl
jecxz
inc
data16
inc
jge
out
aad
dec
aaa
mov
pop
add
std
mov
cmp
push
jno
mov
sub
mov
popa
jmp
sbb
dec
cmpsl
test
popa
sti
inc
addr16
xchg
jge
ds
inc
sub
int
jecxz
cmp
ret
inc
cmpsl
jns
insl
jno
xchg
mov
pop
dec
cmpsb
mov
xor
fnstenv
push
leave
daa
xor
mov
dec
ffree
test
fdivs
mov
cmp
xor
cmp
popf
cmp
push
add
jge
and
cwtl
mov
mov
les
roll
test
imul
cmc
aad
cli
test
lret
push
push
cmp
cwtl
pop
je
pushf
imul
pop
sub
subl
xchg
xor
pop
pop
inc
outsb
adc
mov
inc
mov
fbstp
idivl
outsb
lods
test
in
cmc
sbb
jge
int3
sbb
jp
jae
inc
movsl
shll
pop
loop
sbb
inc
ret
adc
into
cmp
fmul
je
iret
in
jns
pop
sahf
rcrl
xor
mov
adc
push
sbb
cmpsl
daa
jns
jb
aas
cmp
inc
int
iret
sbb
test
fs
pop
cmp
mov
cmp
outsl
or
pop
cwtl
movsl
dec
add
bound
xor
xor
std
fcoml
cmp
clc
xchg
out
dec
dec
mov
cmc
setle
test
jl
gs
es
mov
mov
scas
in
push
mov
xorb
movl
clc
push
inc
mov
push
xor
pusha
jne
int3
popf
mov
and
mov
popf
repz
or
aas
clc
sub
or
mov
adc
fmuls
mov
lods
sahf
push
test
lds
cmp
cmpsb
fstpt
fnstenv
fistpl
jp
or
sub
loope
ljmp
add
sti
aaa
loope
mov
jns
inc
sbbb
nop
xchg
mov
jp
pop
xchg
test
xchg
push
push
stos
pop
pop
jne
out
daa
mov
int
mov
lahf
pushf
idivb
fdecstp
push
fisubrl
pusha
incb
ds
enter
popa
cmp
sub
ret
ret
pop
test
mov
push
inc
add
or
data16
movsb
jge
imul
leave
iret
pusha
decb
sbb
jb
icebp
dec
ljmp
icebp
leave
xor
inc
adc
mov
or
jnp
lcall
sar
shll
jae
pop
mov
lods
fwait
mov
pop
inc
sbb
in
xor
inc
fld
mulb
push
jle
fnstenv
push
xchg
cmp
lds
aad
push
jp
ret
clc
rcrb
popf
out
scas
test
mov
sbb
jnp
sub
mov
cmp
cmp
imul
add
cmp
sahf
cmp
das
pop
scas
sub
add
adc
mov
mov
popa
adc
mov
shrb
inc
pop
cmpsl
int
mov
leave
jnp
mov
test
outsb
cmp
ficompl
jge
dec
inc
xchg
mov
jns
lea
adc
lret
sarb
sbb
mov
xchg
scas
mov
loope
roll
arpl
mov
add
or
xchg
inc
popf
inc
push
rol
or
push
je
pop
sbb
jg
hlt
xor
fwait
scas
and
into
into
xchg
sti
and
cmp
pop
pusha
mov
pop
jp
mov
sbb
fcompl
stos
xor
cmpsb
les
inc
subb
cltd
add
arpl
xchg
cmp
fwait
cmpsl
cmc
push
add
in
je
test
aas
fsin
movsb
imul
es
ficoml
and
leave
mov
dec
leave
repnz
popf
aam
ss
js
pusha
js
mov
pop
stos
rcrl
sub
jnp
fdivl
dec
jmp
adcl
lret
shlb
add
mov
repz
inc
or
test
jecxz
xchg
dec
jo
mov
negl
lock
inc
push
xor
add
xchg
xchg
xchg
daa
jns
rcr
dec
push
push
test
xor
mov
ficoml
sub
push
sbb
xorb
addb
and
jne
daa
and
sahf
xchg
out
sub
push
xor
in
dec
hlt
mov
sti
push
push
inc
push
pushf
push
cmp
mov
jb
mov
or
mov
lock
pusha
mov
sbb
inc
push
mov
das
pop
sub
xor
incl
lahf
jnp
fs
adc
movsb
mov
mov
es
mov
jnp
lds
xlat
jp
jbe
clc
rcll
ss
fistpll
mov
std
aaa
lock
sub
jnp
inc
pop
mov
inc
lret
cltd
mov
add
cli
xor
stc
inc
incb
inc
sub
mov
hlt
shll
les
xor
fadd
lcall
push
cmp
sarl
jmp
pop
sub
dec
and
pusha
fistps
dec
xor
mov
push
in
cmp
cmp
push
add
push
dec
mov
ret
adc
push
imul
fcmovnu
push
ss
mov
sahf
popf
shl
mov
mov
popa
lret
lret
push
cmp
mov
xchg
pop
out
adc
pop
push
inc
insl
mov
int
mov
mov
pop
test
jnp
inc
outsl
jns
fadds
or
into
adc
lods
dec
cltd
lods
orb
in
lcall
idivb
pop
repnz
sbb
fwait
dec
fbstp
cmp
fcmove
sub
xchg
fistl
inc
mov
dec
adc
and
sbb
pop
int
adc
or
outsl
inc
or
rclb
pop
cmp
mov
mov
inc
mov
dec
mov
mov
jne
and
je
inc
rclb
cmp
popf
shll
in
loop
idivb
pop
pop
sbb
mov
in
fcoms
or
cmc
fisubl
cmp
movsb
push
sbb
mov
add
lods
clc
pop
jle
sbb
jae
adc
stos
cmp
fdiv
repz
pop
aam
pop
inc
adc
cmp
test
cmpsl
adc
jno
jecxz
shlb
mov
jo
imul
xor
fnstcw
add
jae
ja
iret
lcall
cmp
cmc
pusha
and
ficoml
insb
xor
pop
inc
sti
add
inc
int3
inc
inc
mov
add
cmp
mov
aaa
gs
mov
xor
imul
jb
loopne
pop
jmp
xchg
cmp
out
push
jb
mov
push
fisubrl
sbb
xchg
insb
cmp
in
push
pop
stos
mov
jns
push
or
cmp
cmp
call
mov
out
pop
jnp
cmpsl
sbb
mov
dec
in
cmp
cmp
push
shlb
mov
jbe
sub
cmc
xlat
ds
addr16
pop
shlb
idiv
xchg
push
push
inc
cmp
sti
mov
inc
and
cmpsb
fwait
js
clc
mov
fsubr
lods
scas
in
mov
out
lahf
xchg
gs
or
leave
cmp
push
pop
scas
mov
mov
pop
fs
push
xor
add
pop
test
test
and
jb
mov
push
outsl
std
add
pop
divb
jmp
call
sbb
sbb
mov
xchg
pop
stos
pop
aaa
add
sbb
out
cmpsl
xchg
rcr
rcrb
es
mov
xor
pushf
xchg
push
mov
sub
add
ficompl
jno
xchg
xor
sti
jecxz
push
add
inc
repz
xor
cmp
out
scas
das
enter
adc
push
mov
mov
sar
mov
add
mov
sub
idivb
out
mov
mov
xchg
aad
cmp
xchg
sub
in
push
cmp
shlb
push
mov
mov
mov
mov
mov
in
incl
lock
je
js
sarb
jne
mov
mov
js
pop
dec
fnstsw
stos
addr16
mov
jge
je
push
xchg
ja
stos
negb
cmpl
lods
fsubr
jo
adcb
stc
mov
inc
jbe
xorl
lret
ljmp
cli
sub
and
fwait
mov
xchg
push
add
xchg
xor
xchg
js
or
aad
jecxz
and
mov
movsb
je
movsl
jmp
jp
mov
outsb
jb
and
pushf
xor
xchg
xor
aam
push
cltd
mov
jno
push
jno
push
or
xchg
and
lods
push
lcall
adc
addr16
lock
gs
xor
les
push
js
cwtl
jbe
jns
mov
and
and
cli
mov
insl
mov
or
cmp
popa
cmp
test
out
or
cmp
push
out
cmpsb
xor
pop
fidivl
sti
push
cld
adc
sti
pop
fwait
imul
xchg
clc
sahf
aas
fstl
xor
sahf
das
div
daa
fwait
xchg
fwait
inc
cld
xchg
ret
xchg
xor
mov
iret
arpl
add
dec
daa
xor
xchg
fwait
shrb
out
std
hlt
nop
imul
mull
flds
ss
or
mov
negb
mov
sbb
mov
sarb
loope
fldl
push
pop
mov
inc
outsl
and
xor
or
sub
dec
sub
stos
cmp
shrl
pushf
dec
mov
pop
pop
sbbb
pop
mov
mov
adc
in
dec
mov
cmp
cwtl
roll
add
aad
cmp
daa
jo
sti
loope
push
hlt
cmpsl
xchg
cmp
push
sahf
fwait
cld
xor
sahf
sub
stc
push
nop
pop
cli
push
adc
sar
out
sbb
dec
aaa
mov
das
stos
test
mov
lret
test
iret
mov
add
mov
sahf
rcrb
and
pop
or
jle
mov
mov
xor
packuswb
mov
adc
es
xor
pop
mov
mov
xor
repz
jae
pop
cmc
scas
cmpsl
test
dec
andl
jo
xor
sahf
bound
adc
xor
inc
ss
aam
sti
hlt
inc
and
sub
mov
hlt
loopne
dec
addl
jns
test
and
pusha
xor
stos
xor
jg
sahf
das
aaa
lds
pop
imul
and
lea
inc
out
lock
ret
in
iret
nop
lock
lcall
mov
dec
push
bnd
rclb
mov
adcl
outsl
mov
sbb
mov
mov
incl
add
add
xchg
push
cmc
test
mov
xchg
leave
outsb
or
add
ret
inc
inc
push
test
aas
das
xchg
or
dec
rcll
jg
cwtl
add
jge
sub
cli
mov
movsb
add
aaa
sub
repz
push
cmp
mov
cmp
mov
sub
push
sahf
lock
out
les
cmp
jns
das
adc
lahf
jne
adc
pop
mov
dec
loopne
mov
fadds
test
mov
out
xchg
dec
sbb
pop
pop
sbb
inc
cmp
adc
inc
insb
pop
xchg
loop
ljmp
je
cmc
add
mov
into
sub
push
pop
out
pop
mov
ss
dec
inc
cmp
jge
lret
lds
jl
adc
push
subb
mov
sbb
clc
add
mov
mov
mov
cmp
rolb
push
adc
faddl
movsb
mov
jns
test
sahf
ds
sarl
adc
testl
mov
stos
lods
fcoms
jmp
pusha
mov
sub
clc
adc
mov
mov
lahf
mov
inc
cwtl
dec
inc
mov
scas
dec
js
pop
or
pushf
add
movsl
pop
into
sub
push
ret
outsb
rorb
xor
movsb
mov
mov
pop
cs
sarb
mov
addr16
cmpb
test
cmp
cwtl
cmp
andl
arpl
aas
mov
daa
jo
mov
int3
test
mov
dec
cmpsl
fcmovu
xor
adc
inc
mov
xlat
inc
pop
inc
dec
lret
jo
push
shll
mov
cmp
lock
inc
jp
jno
xor
adc
add
cmp
and
jno
insl
pop
popf
mov
add
push
mov
mov
stc
dec
push
aas
sbb
ds
mov
and
mov
insb
stos
xchg
jns
xor
mov
shll
push
clc
mov
popa
adc
rclb
in
pop
push
mov
mov
xor
cld
sbb
shrl
pop
scas
test
mov
outsb
mov
lods
mov
inc
test
rolb
outsb
ret
incb
mov
mov
cltd
lods
xchg
cmpb
mov
jl
mov
inc
fnstenv
mov
jl
lds
fisttpll
cs
adc
pop
pop
clc
mov
movsl
bound
cmpl
pop
inc
xchg
cmp
cmp
leave
push
push
pop
mov
sbb
test
cmp
int3
xchg
mov
mov
clc
lea
dec
out
aas
mov
push
mov
js
mov
mov
xor
imul
mov
mov
sbb
push
sbb
pop
xlat
in
add
dec
sub
and
mov
pusha
ret
insl
popa
in
cwtl
add
mov
and
dec
pop
xor
add
scas
in
jns
and
stos
xor
sarb
add
inc
and
sarb
dec
in
mov
aas
xchg
icebp
mov
scas
ret
cmp
inc
jb
nop
pop
sbb
loopne
dec
sub
push
jb
jle
pusha
mov
pushf
sarl
adc
lcall
in
push
jnp
test
loop
inc
insl
push
insb
mov
out
mov
popa
loope
mov
addr16
cld
out
mov
popf
xchg
daa
jp
add
and
addb
xchg
scas
inc
popf
push
stc
jne
daa
mov
adc
push
adc
pop
mov
mov
add
test
cmovge
adc
inc
arpl
push
xor
sub
jns
addl
jb
mov
adc
dec
iret
je
out
cs
cwtl
xor
scas
lds
pop
cmpsb
cltd
in
ds
cmp
mov
jmp
into
pop
sub
ret
adc
sarl
test
mov
and
inc
aaa
js
call
fstps
xchg
cmp
push
test
cmp
push
bound
scas
rorb
arpl
push
cwtl
sbb
dec
dec
xor
fbld
cmp
and
lods
ja
in
scas
les
inc
rcrb
popa
jns
mov
inc
jp
test
out
cli
adcl
add
jnp
insl
lret
push
into
cmp
sub
out
cmp
mov
pop
ds
xlat
out
dec
fstpl
popa
cmpl
std
mov
add
out
xchg
stc
gs
push
push
mov
fcompl
push
and
jl
fisttpll
mov
cli
adc
inc
pop
in
stc
arpl
dec
inc
scas
mov
stos
dec
jb
fwait
subl
push
daa
jge
push
push
dec
inc
fcomps
or
inc
orb
push
out
sahf
and
mov
fdiv
xchg
clc
jno
xchg
inc
jge
sub
mov
xor
pop
movsl
popf
call
push
inc
sar
imul
leave
aas
inc
clc
dec
add
dec
nop
xchg
add
mov
loope
cmp
mov
movb
sar
or
add
fwait
mov
into
dec
sbb
adc
mov
mov
xchg
imul
push
cltd
arpl
pop
xorl
das
add
xadd
inc
enter
cltd
push
movsb
lcall
pop
pop
lahf
les
test
mov
mov
mov
fisttps
cmp
imul
mov
addr16
lahf
mov
ds
cmp
aas
addl
clc
inc
fs
mov
movsl
add
push
jnp
mov
loope
gs
cmp
xchg
je
dec
loop
cmpsb
cwtl
test
iret
mov
mov
or
push
sub
out
outsb
jbe
insl
adc
sub
mov
repnz
inc
dec
push
xor
mov
out
aaa
fdivrs
adc
adc
cwtl
pop
aam
call
pop
call
or
stc
mov
out
loopne
out
jbe
ljmp
std
mov
rolb
sbb
js
dec
or
ffree
sahf
pop
pop
adc
cmp
outsl
push
pop
or
lret
mov
loop
xchg
test
idivb
lds
popa
loopne
add
sahf
push
stos
jno
mov
lcall
and
mov
inc
icebp
jg
pop
shl
out
rcl
push
xchg
push
mov
adc
jo
inc
int3
aad
rorb
insb
lock
int
mov
jp
jne
mov
loopne
loopne
push
cld
inc
mov
sbb
sbb
xor
lahf
pop
sub
cmp
xor
jo
stc
jne
xor
pop
repnz
push
movsl
outsl
xchg
out
mov
cld
lds
xchg
fisubrs
mov
push
xor
scas
jg
outsl
movsl
or
loopne
mov
inc
in
sub
std
dec
inc
xor
clc
out
stos
pop
push
adc
jmp
xchg
and
aas
lods
loopne
mov
pop
mov
fldt
ss
jle
scas
addb
pop
repz
mov
ja
jbe
adc
ret
inc
mov
and
imul
or
cwtl
lcall
pop
cli
int3
std
mov
clc
mov
sbb
lods
mov
ret
push
sarb
jbe
sub
inc
mov
cmpsb
xchg
xchg
xor
out
insl
xlat
imul
nop
inc
and
cmp
adc
jnp
jbe
fucomip
into
shl
mov
adc
out
jecxz
dec
sahf
fiaddl
jp
lret
test
mov
mov
and
jle
icebp
mov
pop
addr16
inc
mov
xchg
pop
cmpsl
push
popa
adc
inc
es
xchg
adc
jp
cmp
xor
iret
cmp
mov
cwtl
mov
mov
mov
movsl
mov
cld
adc
xor
cwtl
sbb
jp
mov
pop
aad
popf
inc
inc
cmp
rorl
cld
xchg
fwait
push
int3
push
cmpb
mov
pop
mov
decl
pop
mov
push
sti
popf
mov
ret
add
mov
test
pop
and
ljmp
inc
mov
pop
fwait
outsl
and
push
out
inc
sub
out
les
das
bound
negb
push
add
enter
arpl
cld
push
mov
imul
pop
dec
pop
pop
jge
inc
fsubl
inc
mov
call
and
mov
adc
cmp
sub
fiaddl
cmp
dec
and
lret
movsl
mov
mov
dec
xchg
or
cmp
in
jbe
dec
sub
xorb
add
rcrb
jne
mov
scas
mov
mov
dec
aaa
cltd
gs
sarb
mov
fistpl
cltd
or
or
lock
sbbb
ljmp
out
mov
jle
jb
inc
roll
psubw
lcall
mov
mov
aas
inc
addl
js
inc
sahf
mov
jo
or
shlb
adc
fdiv
addb
sbb
rcr
movsb
mov
xor
mov
leave
mov
fldl
cmp
pop
add
clc
and
or
pop
sbbb
test
fdivl
sub
push
cltd
adc
arpl
adc
ljmp
sub
hlt
inc
out
cmp
xor
cltd
cmp
lahf
sub
jle
xchg
mov
and
sti
fcomip
insb
mov
mov
push
inc
ds
out
pop
shrl
and
fwait
mov
jae
sti
int
mov
sub
insb
nop
xor
adc
imul
mov
pop
les
stc
add
pop
dec
cli
out
mov
jnp
add
gs
fstpl
push
xchg
mov
mov
mov
shl
push
notb
cltd
bound
xor
mov
hlt
mov
mov
inc
mulb
sub
adc
mov
imul
mov
cmp
fwait
sti
xorb
mov
into
cmp
mov
fs
jo
fidivl
xchg
xor
les
adc
std
add
sarl
push
mov
sarb
rcrl
cmp
xor
out
pop
and
mov
jmp
pusha
cmpsl
mov
xor
dec
xor
pop
sbb
jg
fisubs
nop
sbb
ljmp
idivb
inc
dec
sbb
adc
or
pop
push
subb
scas
mov
ss
mov
push
fnstenv
jmp
loopne
cmp
jl
popa
mov
addr16
adc
inc
incl
push
scas
call
dec
shl
sbb
movsl
and
xchg
or
jp
movb
push
sub
leave
xchg
std
lret
shrl
aam
rcrb
xor
bound
flds
cmp
xchg
mov
ffree
mov
ds
xchg
cmp
ret
sbb
bound
pop
mov
jecxz
loopne
mul
sub
aas
int
repz
shl
in
add
mov
and
inc
xchg
inc
push
cmp
mov
xor
mov
jo
or
xchg
or
jmp
pop
sbb
mov
shrl
in
fidivrs
or
jb
cwtl
cli
enter
mov
sti
out
mov
mov
cli
sub
ja
clc
inc
sub
nop
cmc
rcrl
ds
inc
mulb
data16
cmp
jmp
icebp
lret
push
xchg
int3
lea
lret
push
int
mov
sbbb
jns
scas
push
fcompl
xor
jb
mov
push
pop
mov
xor
xchg
aaa
pop
aaa
out
cli
or
adc
mov
not
sub
jne
push
mov
outsb
pop
fidivrl
ljmp
mov
aas
or
test
mov
push
mov
insl
icebp
stc
push
push
aaa
xbegin
inc
es
shrl
insb
subb
dec
sarb
cld
push
sub
test
inc
divb
adc
ds
nop
push
cli
stc
jmp
jle
mov
sub
xchg
mov
cmp
xchg
std
into
mov
add
or
jl
jns,pt
arpl
jle
xor
jnp
bound
cltd
sarb
aam
or
inc
leave
sarl
jb
ds
mov
nop
rcl
xor
adc
pop
dec
sub
mov
cmpsl
neg
push
push
jmp
lea
push
adc
testb
adc
pop
out
notb
pop
adc
cmpl
cmp
add
adc
inc
sbb
add
mov
aaa
cmp
data16
popf
xchg
jae
shlb
insb
mov
enter
push
pop
lods
add
bound
add
sub
adc
fstpl
xor
shll
sbb
xchg
cmp
scas
std
jne
popa
or
mov
sahf
mov
mov
cmp
mov
adc
mov
dec
in
aaa
mov
jnp
mov
lret
pop
and
aas
or
xchg
imul
sbb
int3
add
inc
repnz
shrb
push
xchg
mov
mov
inc
fstpl
imul
sbb
inc
cmp
push
xor
pop
mov
jne
push
cltd
imul
sub
test
and
pop
mov
sbb
sbbb
push
cwtl
mov
mov
mov
sbb
adcb
insb
pusha
aaa
sbb
jb
loopne,pt
adc
dec
rclb
inc
lea
push
mov
jnp
xchg
movsl
fiadds
lret
xchg
rol
push
inc
ds
adc
xor
xor
push
or
test
loope
orb
loop
push
sub
jbe
ljmp
and
test
add
or
push
lret
aaa
inc
daa
adc
sti
inc
cmp
loop
push
sti
xchg
add
shll
setae
insb
bound
leave
idivb
js
cmp
lret
mov
push
push
mov
lahf
jl
mov
ret
inc
bound
rcl
pusha
and
mov
and
out
daa
inc
xorb
fildl
ja
es
cwtl
jecxz
movsl
or
add
popf
sbb
xchg
shlb
cmpb
mov
jae
fildl
inc
sub
leave
adc
scas
imul
push
mov
push
cmp
out
xor
pusha
inc
mov
mov
push
fwait
pop
daa
inc
sub
fs
and
movsl
pop
cmp
inc
ss
ret
notl
adc
mov
push
xor
mov
inc
push
pusha
cmp
inc
stos
and
mov
js
gs
and
cmp
daa
ss
popa
testl
adc
popa
cmp
int
mov
mov
in
xchg
fstpt
pusha
pop
sbb
or
and
inc
pop
movsl
cmp
adc
jge
mov
jnp
js
sbbl
dec
cmp
sbb
pop
mov
cmp
bound
imul
shlb
inc
out
test
lds
jo
movsl
andl
xorb
cmp
mul
adc
insb
aas
sbb
ja
jecxz
cmp
lcall
popf
mov
jl
adc
mov
push
xchg
inc
and
xorl
inc
and
andb
rcr
fsubl
out
jl
test
lahf
push
ret
nop
mov
xchg
xor
xorl
cmp
cmp
rcrb
scas
inc
xchg
imul
push
mov
inc
aam
ds
int
push
and
jle
fcmovne
fnstsw
mov
sbb
jg
adc
mov
and
jb
pop
mov
mov
jns
dec
jge
aam
neg
outsb
adc
or
test
mov
xchg
dec
loopne
dec
andb
xchg
jmp
add
imull
jge
stc
pop
pop
sub
jb
divb
dec
pop
xchg
ljmp
pop
sbb
fs
jns
mov
out
stos
insb
fsubl
sbbb
aaa
and
cwtl
mov
sbb
aaa
sub
push
push
mov
jns
push
pop
sub
xor
jl
ja
jno
jg
mov
fwait
jno
pop
jne
xchg
xchg
cmp
sub
push
pusha
pop
fdivs
ljmp
pop
test
cli
aam
xlat
roll
es
mov
inc
sbbb
ret
mulb
mov
in
inc
pop
push
add
pop
popf
mull
test
out
mov
shrl
jmp
dec
sub
jns
xchg
cmpsb
jge
int3
pop
inc
aam
idivb
push
pop
jp
push
lret
mov
push
xchg
or
sahf
fadd
jle
jl
adc
inc
xor
aas
pop
lods
sbb
xor
adc
mov
mov
fstl
cmpsb
xchg
mov
fnsetpm(287
outsl
xchg
ret
xorb
inc
adc
mov
adc
adc
mov
sarb
mov
popa
movsb
mov
sar
pop
jns
sbb
cli
or
dec
and
xor
mul
dec
clc
mov
adc
lods
sub
adc
and
out
enter
mov
aam
push
daa
push
daa
fucomp
jmp
or
push
jns
cld
idivl
adc
adc
cmp
adc
pop
dec
cmp
stos
cli
inc
xchg
cmp
call
jmp
mov
sub
add
addr16
mov
clc
sbb
or
cmp
or
in
mul
jmp
inc
mov
mov
jb
test
xchg
push
add
xchg
out
clc
test
aad
xchg
in
fstl
add
pop
mov
mov
aaa
push
mov
adc
fisubrs
dec
mov
test
dec
fisubrl
fisubs
push
cli
lahf
pop
mov
mov
mov
sub
clc
add
mov
rclb
mov
pop
xlat
xor
dec
fisubrl
dec
dec
es
in
mov
movsb
div
out
aad
or
add
mov
ja
cmp
pusha
push
lods
cmp
je
sbb
jle
cmc
pop
arpl
mov
xchg
push
mov
pusha
mov
stos
idivb
xchg
pop
fstpl
ljmp
fsts
pop
dec
cwtl
push
shrl
out
inc
or
mov
pop
inc
lahf
cmp
fldl
sbb
inc
aas
cmp
lcall
push
daa
ret
push
dec
clc
test
fistl
pop
leave
ret
xchg
movb
sbb
subl
adc
adc
js
subl
je
and
mov
fisttpl
imul
mov
roll
push
add
sti
mov
jno
loopne
cmpsb
cmp
js
mov
push
lcall
add
fisttpll
pop
mov
fldt
sub
cwtl
out
addb
into
rorl
dec
aaa
lock
hlt
or
mov
pop
mov
cmc
mov
pusha
or
xchg
jns
xlat
mov
add
mov
xchg
lods
cmpsl
cmpsb
jo
and
stc
fcoms
idiv
ret
sbb
sarl
jo
jmp
cmp
push
pop
adc
mov
pop
fisubrl
lods
push
inc
ror
jbe
mov
push
out
inc
push
clc
xchg
sahf
push
jo
xchg
pop
lods
xchg
push
pop
mov
mov
scas
or
jp
pushf
mov
test
mov
jno
push
popa
dec
mov
sahf
and
imul
push
jl
dec
test
stos
mov
stos
scas
xchg
push
mov
icebp
push
rcll
inc
int
pop
flds
test
scas
data16
jb
inc
das
popa
inc
inc
test
xor
pop
pop
xlat
mov
add
adc
fnstenv
fs
cmp
jae
insb
adcl
repz
loope
xor
out
mov
mov
sub
inc
iret
mov
bound
mov
mov
mov
std
dec
lcall
std
adc
lea
xor
or
aaa
rcll
xor
fdivrl
jp
or
cmp
sbb
jl
aad
shrb
cltd
xor
ss
shrl
cmp
pushw
ds
xchg
cmc
mov
scas
lock
das
adc
mov
pop
jl
fcmovne
mov
aas
insl
mov
jns
sbb
jne
mov
push
stos
lods
je
mov
push
xchg
mov
std
test
call
hlt
js
aad
mov
jp
fldt
in
cmp
pusha
call
mov
jmp
jbe
mov
dec
mov
hlt
mov
mov
jp
pusha
cltd
xchg
adc
xor
adc
scas
cwtl
mov
aas
and
push
aas
sub
xor
aam
adc
mov
mov
mov
mov
push
or
xor
aas
cmpb
inc
fucom
jb
enter
lea
sbb
jne
and
sub
push
sbb
mov
cld
adc
pop
mov
cmp
stos
dec
into
mov
pop
mov
dec
xchg
dec
enter
add
push
sbb
push
mov
xor
cmpb
rorb
lret
cwtl
adc
sbb
lcall
stos
das
push
mov
and
loopne
jb
or
xchg
into
inc
testb
push
pop
jno
pop
cmp
jb
bound
sbb
push
pushf
inc
push
into
sbb
sbb
mov
subb
int3
stos
ja
cmc
add
xchg
cmp
clc
cmp
pop
insb
inc
mov
cmp
jb
adc
xor
cltd
cmpsl
stc
adc
pusha
inc
ds
jle
mov
jg
movsb
loopne
mov
push
pop
cmp
mov
push
sahf
pop
or
leave
and
nop
int3
fnstenv
and
aas
jno
and
xor
cwtl
mov
cmp
xchg
mov
or
jmp
jns
jmp
adc
push
push
daa
and
push
sarb
mov
mov
xor
xchg
jecxz,pn
stos
adc
fidivs
cmpsl
rolb
bound
andb
mov
xorb
mov
fcmovnb
mov
adc
addb
movsl
adcb
adcl
adc
mov
out
bound
sub
testl
push
enter
cmp
adc
inc
fistps
call
arpl
push
in
fdivrp
leave
dec
aas
jbe
pushf
cmp
mov
mov
push
xor
cmp
or
leave
cld
fwait
int
and
fiadds
inc
decb
sub
outsl
cmp
repz
fnsave
jbe
sbb
lea
add
int3
movsb
jecxz
inc
cmpl
testl
inc
or
mov
das
daa
dec
and
loopne
xchg
add
mov
dec
jae
push
and
mov
out
inc
pop
imul
adc
shlb
fwait
icebp
dec
cmpl
stos
sarl
add
popa
jp
lcall
dec
xchg
sub
cld
or
imul
and
mov
xchg
js
mov
and
pop
pop
add
repz
and
ret
xchg
dec
cmp
cmp
fmull
imulb
xchg
or
nop
out
jl
cli
mov
pop
add
adc
sub
test
popa
mov
pop
fidivrs
inc
pop
pop
sbbl
jbe
pop
adc
or
jecxz
xchg
mov
xor
jp
xchg
fwait
mov
or
jp
adc
mov
mov
mov
popa
mov
ss
mov
inc
pop
xchg
pusha
mov
pop
pop
inc
mov
cmp
ja
stc
shll
bound
out
pop
sti
or
cld
xor
shrl
popa
test
in
xchg
cmp
add
dec
rcrb
das
xor
and
xchg
shlb
add
mov
xchg
mov
cmp
mov
out
andb
outsl
cli
mov
or
ljmp
sub
inc
rol
adc
mov
fldl
ja
dec
and
shrb
xor
sub
xor
mov
idivb
movsl
xor
mov
sbb
mov
sub
dec
or
out
pop
cmc
ret
jns
cmp
jo
adc
push
xor
inc
dec
jp
sub
inc
dec
mov
or
pop
cmp
mov
xchg
xor
out
mov
ljmp
xor
movb
inc
mov
inc
nop
imul
mov
out
mov
add
mov
leave
js
data16
lea
frstor
cmpsl
fisttps
jne
ss
jns,pt
and
ds
ficomps
sbb
mov
inc
add
jmp
nop
in
mov
cld
push
sub
int3
cmp
mov
rolb
jmp
mov
stc
cmp
mov
fstps
cltd
mov
jnp
fs
mov
mov
aaa
jmp
xor
push
jne
cwtl
mov
ja
mov
arpl
mov
xchg
ret
sarl
xorb
adcl
in
cmp
jo
add
xchg
sbb
notl
cmp
data16
scas
dec
jge
add
push
cmpsb
out
test
test
mov
push
xchg
mov
push
pop
pop
inc
sbbb
mov
xchg
push
aaa
or
pop
mov
in
inc
add
jno
inc
sbb
in
fisubl
cmp
jmp
sbb
outsl
xchg
cmp
cwtl
mov
mov
jo
dec
add
mov
sub
adcl
inc
xor
ljmpw
pop
loopne
test
lock
pop
mov
add
sub
ljmp
push
mov
subb
or
bound
bound
cmp
inc
xor
add
iret
aad
inc
or
scas
leave
fs
lret
pop
cmpsl
adc
mov
popf
jae
push
shl
jo
movsl
inc
mov
xchg
mov
mov
or
mov
cmc
cmp
ss
stos
sbb
mov
jle
daa
mov
push
iret
fisubs
mov
jl
mov
sarb
mov
pusha
int3
in
sbb
inc
mov
jo
sbb
mov
mov
aaa
xor
jp
xchg
rcll
cwtl
inc
rolb
add
mov
pop
ds
xor
adc
push
inc
pop
cmp
fcmove
fsubs
jle
shrb
inc
loope
jge
mov
jl
or
subb
and
jle
mov
imul
mov
inc
ss
add
mov
popf
dec
test
sub
fldcw
sbb
mov
mov
sbb
sahf
and
pushl
cmp
lods
mov
sub
mov
push
addb
or
lea
orb
xchg
and
push
mov
repz
arpl
push
ret
push
inc
pop
repz
dec
sub
or
sub
lret
dec
dec
cmp
push
sub
loope
stc
vpandn
out
lahf
mov
lock
dec
mov
adc
mov
mov
aam
addr16
or
xchg
filds
cmp
ret
jge
pop
gs
out
out
fdivrl
cwtl
cmp
cld
jae
add
cmp
into
cmp
jg
dec
test
popa
dec
imul
inc
pop
and
ds
mov
mov
sub
pusha
fistl
lods
cmp
mov
mov
shll
mov
dec
in
aaa
sbb
jl
sti
repz
jle,pn
mov
es
loopne
jne
fstpt
mov
jecxz
dec
jl
jge
lods
pusha
sbb
add
push
lcall
mov
jbe
mov
cs
push
pop
mov
divl
cltd
mov
stos
push
mov
mov
push
rcrl
arpl
mov
in
lahf
inc
jae
cmp
push
add
pop
lea
pop
jl
inc
mov
movsb
mov
xchg
sub
mov
mov
scas
adc
cmp
sbb
push
shll
and
ficompl
dec
adc
shll
and
js
dec
jge
mov
pop
ret
rorb
cmp
and
push
dec
notb
push
ss
into
aaa
or
insl
mov
cmp
push
rorb
sub
and
scas
inc
inc
mov
scas
pusha
inc
fwait
js
mov
add
lahf
scas
mov
xchg
dec
pop
inc
sahf
adc
xchg
and
dec
fwait
push
sbb
leave
imul
stos
dec
cmpsl
inc
rclb
cmc
push
pop
ss
cmp
or
enter
fcoms
push
nop
mov
cli
xchg
xor
sub
sub
add
out
dec
jg
add
stc
adc
mov
cmp
nop
push
xchg
js
test
jns
js
push
movsl
dec
cmp
mov
fisubl
inc
ret
mov
movsl
out
pop
pop
and
scas
ds
xchg
xchg
mov
sarl
mov
and
fildl
movsl
jne
sbb
inc
cmp
add
mov
fnsave
inc
test
addr16
mov
js
lds
adc
push
cmp
stc
jmp
mov
xor
pop
lods
push
loopne
sub
test
inc
add
mov
outsl
xchg
ret
std
sub
pusha
jecxz
adc
inc
fdivrs
and
xor
xlat
mov
mov
popf
mov
mov
inc
xor
popa
outsb
jle
cld
mov
adcl
movsb
idivb
ljmp
outsl
scas
add
jecxz
cli
xchg
cwtl
cmpsb
push
mov
mov
fcom
jl
cmp
insb
fiadds
mov
add
rcll
fdivrs
cli
test
pop
popa
xorb
and
bound
ds
aam
bound
je
dec
cmpsl
lods
mov
jmp
pop
imul
sbb
mov
imul
lea
rorl
or
push
mov
movsl
xchg
add
xchg
push
xor
push
jmp
popf
add
nop
bound
add
adc
push
pop
push
cmpl
adc
in
sahf
ret
mov
jnp
ss
add
out
lcall
lahf
or
pop
inc
xchg
fs
scas
popa
jecxz
lcall
cltd
mov
ret
inc
xchg
lcall
movsb
adc
cmp
out
sub
cmp
adc
rcl
mov
or
call
mov
loopne
sar
out
fcomps
stos
xchg
xchg
mov
adc
fdivrl
fisubrs
js
mov
popl
inc
call
xchg
ret
inc
popa
fs
aad
les
mov
inc
push
mov
push
rclb
mov
inc
fdivr
insb
push
jl
xor
jns
test
jns
dec
popf
mov
addl
push
mov
mov
jp
mov
movsl
pop
inc
mov
ret
pusha
cmp
push
inc
mov
cs
push
xor
xchg
insl
or
mov
or
in
or
int
sahf
push
cmp
fnstsw
int
xchg
mov
mov
mov
and
add
mov
mov
lea
jb
mov
cmp
sbb
sarb
addb
xor
es
nop
dec
int
dec
sarl
scas
push
sarb
hlt
cwtl
loop
pop
pop
mov
cmp
insb
addr16
scas
mov
add
cmp
loop
fs
cmp
or
inc
dec
jl
inc
imul
fstpt
aaa
std
fsts
addb
xchg
movsb
inc
loope
adcl
mov
mov
sbb
pop
push
mov
gs
in
loope
adc
push
loop
nop
xchg
sti
or
jp
cltd
mov
mov
gs
xchg
fidivl
int3
fstpl
jmp
dec
or
outsl
mov
inc
fstpt
and
stc
roll
mov
mov
sub
jl
popf
push
mov
xchg
cmp
loopne
xor
testl
les
loope
in
push
adc
ret
pop
es
fwait
inc
cs
into
fsub
mov
jge
or
es
push
and
pusha
inc
or
inc
aaa
icebp
repz
cmc
cli
mov
adc
fs
xchg
sub
jo
repnz
repz
sub
sbb
imul
faddp
inc
jmp
inc
hlt
mulb
mov
push
pusha
or
fldenv
mov
daa
mov
data16
pop
into
or
xchg
fisubl
xchg
jb
pop
xor
subb
mov
add
inc
orl
rcrl
push
xchg
mov
rolb
fistl
ret
fisubl
pop
lret
scas
sbb
push
out
cli
movsl
mov
add
pop
jmp
stc
fdivrs
mov
sbb
pop
outsl
bound
and
inc
xor
aam
gs
int
mov
in
das
or
cwtl
cld
and
test
inc
jae
scas
pushf
leave
and
jnp
mov
mov
push
mov
rclb
jae
ret
loop
inc
das
rolb
pusha
adc
push
sub
mov
cmp
ljmp
add
fmull
sub
out
jl
stc
cmpsb
fistl
inc
bound
mov
adc
xor
sbb
mov
xchg
pop
mov
push
pop
ja
cwtl
outsl
ds
aad
sbb
lret
iret
aaa
mov
lret
inc
cmp
mov
mov
call
xchg
fdivr
outsb
movsl
inc
or
xchg
and
xchg
sub
inc
xlat
negl
adc
xor
fsubl
and
sbb
cwtl
addr16
lret
loop
xchg
sbb
push
into
cli
insl
mov
xchg
movsl
mul
jne
jo
sarb
or
aam
icebp
cmp
push
or
sub
add
jbe
inc
or
inc
pop
push
adc
mov
fistl
gs
lock
jnp
int
jp
das
cmpsl
sarb
pop
pop
in
pop
lea
push
mov
or
pop
lds
std
mov
cmp
adc
and
and
jns
sbb
adc
stc
xchg
ja
mov
mov
lods
mov
ja
mov
xchg
lret
movl
push
adcb
mov
test
xor
mov
inc
into
xchg
xchg
leave
and
fmul
cmp
mov
push
jmp
aad
cmp
xchg
push
jae
daa
out
push
dec
and
lods
push
movb
cmc
rcrl
xchg
mov
rcrb
cmp
adcb
in
mov
jnp
outsl
lahf
add
jno
push
push
sub
in
js
mov
inc
mov
cli
fiaddl
idiv
push
inc
dec
xor
ds
push
mov
inc
mov
js
aam
hlt
rcll
cmp
or
pusha
pushf
jmp
lods
out
inc
mov
test
scas
jmp
add
daa
shlb
ds
std
mov
nop
xlat
push
and
jge
cmp
xchg
roll
push
int
movsl
sbb
push
imul
push
shlb
js
sub
call
dec
movsb
mov
adc
adc
fiaddl
mov
test
je
test
fiaddl
popf
subb
nop
stc
test
xor
fstl
repnz
lcall
std
stos
mov
mov
sub
xchg
lret
cwtl
in
ret
mov
jns
dec
xor
testb
sti
pop
pop
jo
or
mov
lock
cmpb
inc
jle
cld
jp
sub
xchg
mov
jle
push
jne
arpl
inc
daa
dec
push
pop
addr16
add
cmp
inc
in
insb
push
adc
fisubl
insl
ja
cwtl
adc
fldt
pusha
dec
fld
cli
jns
les
cltd
sub
aas
mov
xor
cmp
sbb
pop
movsb
les
xor
mov
andb
pop
sahf
jne
jne
cmp
dec
dec
dec
xchg
cwtl
ss
lods
adc
add
rolb
fldenv
jo
in
lea
mov
xchg
test
mov
pusha
mov
xor
in
lods
add
push
iret
cli
aam
shll
mov
lret
test
iret
jmp
outsl
test
adc
mov
jae
fistpl
subb
scas
mov
mov
cmpsb
inc
mov
mov
jge
push
push
jmp
mov
icebp
movsl
sub
adcl
adc
out
ret
xorb
ret
xchg
and
pusha
outsl
data16
fucomi
test
fbld
jp
jnp
cmp
inc
lret
xchg
sub
lods
mov
xchg
mov
add
or
xchg
push
movsb
mov
cmp
je
andl
cmp
sbbb
adc
sbb
movsb
push
mov
shl
mov
das
pusha
icebp
push
cmp
jp
mov
xchg
mov
push
mov
cmpsl
out
into
sbb
cmp
adc
xchg
idivw
push
les
jae
stc
loop
ljmp
es
adc
dec
xor
sub
jne
clc
pusha
pop
les
das
imul
inc
xor
je
outsl
daa
int
int
rcrb
movsb
jne
ds
mov
mov
inc
in
subl
mov
popf
popa
dec
lcall
out
out
xor
int
js
arpl
inc
je
and
fadd
sbb
add
cld
stc
sbb
mov
cmp
rcrl
pop
pop
stc
inc
mov
pop
inc
mov
and
sub
das
push
sub
daa
adc
lret
jmp
push
inc
mov
aas
adc
jl
xor
xor
mov
pop
and
mov
test
test
xor
cmp
dec
sbb
xor
add
sar
xor
out
xchg
std
fdivrl
mov
pop
and
and
xor
pusha
jle
or
jp
out
loopne
icebp
sub
ss
push
mov
movsl
aaa
repz
mov
mov
mov
cmp
jl
cwtl
sub
mov
mov
jl
sbb
pop
fwait
hlt
sbb
inc
movsl
lahf
loopne
mov
jge
sub
pop
inc
fdivrl
fwait
jnp
xchg
cwtl
dec
pop
cmp
data16
imul
movsb
or
jmp
lods
das
test
inc
dec
push
test
inc
jns
dec
push
jns
push
aaa
adcb
repz
jmp
stos
mov
sub
leave
mov
jbe
movsl
fstpt
out
push
ret
mov
shrl
int
mov
inc
int3
fistpll
mov
mov
int
mov
cmp
jno
inc
xor
xor
cmpl
add
inc
adc
mov
mov
cltd
push
lds
inc
ret
push
push
xor
inc
shrl
push
mov
cmpsb
fcmove
cmpxchg
mov
std
cmp
xor
scas
aad
sbb
insl
popf
mov
rol
sbb
push
cli
je
mov
inc
mov
adc
imul
push
xchg
mov
jo
scas
insb
inc
pop
inc
adc
jnp
daa
push
cwtl
sti
cmp
xchg
cli
clc
xlat
pushf
cwtl
sbb
js
inc
xchg
dec
adc
xchg
mov
dec
imul
inc
jecxz
fwait
call
push
mov
pop
jmp
shrl
xor
jecxz
or
mov
fwait
dec
iret
test
and
push
les
xchg
adc
push
in
inc
push
xchg
pop
sub
mov
mov
dec
push
in
sbb
dec
pop
mov
stos
sbb
and
cmpsb
cs
mov
inc
xchg
nop
js
cmp
repz
add
pop
mov
mov
out
inc
movsl
in
jle
ss
push
in
in
xor
fldcw
mov
fstl
and
cmp
punpckhwd
inc
nop
mov
shlb
adc
test
stc
mov
fwait
pop
mov
cmp
inc
cmp
mov
mov
pushf
and
adc
out
aam
push
jg
cld
cmp
push
ljmp
add
int3
loop
shl
sub
rcr
out
xchg
sub
arpl
xchg
and
ljmp
add
fisubrl
call
jmp
sti
movsl
lcall
dec
sbb
inc
sahf
sbb
sbb
add
jo
sbb
into
inc
push
cltd
lods
push
mov
sbb
iret
clc
rcrl
std
mov
and
popa
roll
inc
movsl
test
gs
jb
sbbb
mov
stc
cmp
mov
sbb
sbb
sbb
je
push
push
movsb
movsb
outsb
stc
inc
inc
push
cmpsb
mov
cmpsb
jecxz
addb
sbb
loopne
inc
in
adc
pusha
pop
loopne
out
adc
outsb
ret
shrl
lret
xchg
aas
loopne
das
sbb
cmp
jb
fcomps
pop
jp
push
pop
mov
test
push
fistl
mov
je
inc
or
cmp
pop
mov
fidivrs
inc
test
in
mov
dec
adc
mul
jae
in
in
sub
xchg
jl
sbb
pop
lea
sbb
mov
lahf
sbb
popf
sahf
mov
cmp
cmp
mov
stc
ds
aaa
into
test
cld
mov
movsw
xor
jns
js
gs
mov
in
rcr
out
jns
push
frstor
add
sub
xchg
pop
jg
movsl
data16
cltd
sbb
xchg
mov
les
cmp
xchg
mov
push
test
push
mov
dec
popa
cwtl
js
pop
shlb
pusha
scas
dec
addb
inc
es
in
in
mov
addr16
mov
fcompl
add
adc
cmp
dec
push
mov
pop
mov
jbe
sbb
filds
andb
mov
jno
outsl
pushl
jle
add
sbb
repz
inc
out
or
mov
shrl
incl
and
mov
mov
add
xchg
xchg
ds
fistpll
lods
mov
cli
bound
movsl
rcrb
jne
or
mov
xor
jle
mov
cmp
sbb
push
jns
adcb
lret
sub
into
jno
push
mov
adcl
js
inc
pop
add
jecxz
sub
mov
loop
jne
je
mov
andl
dec
mov
cmp
add
push
je
inc
mov
loop
mov
mov
mov
jns
lcall
shl
mov
imul
mov
add
push
mov
lea
inc
jns
loopne
jns
mov
movsl
movsb
lods
movsb
and
enter
adc
mov
ds
fdivl
mov
in
pop
mov
cmp
pop
mulb
adc
pop
outsb
inc
mov
or
mov
sub
lcall
fwait
and
cmp
inc
cmp
and
mov
xchg
mov
xchg
mov
movsl
push
and
jae
inc
in
std
mov
sbb
or
adcb
adc
lds
aas
cs
inc
jo
mov
shll
cs
lds
inc
cmp
ljmp
and
pusha
and
stc
test
popa
dec
in
lock
mov
and
fstl
pop
mov
out
jns
imul
dec
fnstsw
ss
adc
mov
add
adc
push
sub
cli
out
je
mov
mov
cmp
aaa
jo
push
rorl
int
xor
stc
bound
sbb
mov
lret
push
dec
lea
sbb
mov
cmp
out
inc
shr
or
js
in
and
sub
data16
cmp
mov
jp
cmp
cli
or
loope
mov
test
mov
add
les
sub
jl
addl
mov
sbb
sbb
mov
jno
pop
int
and
ret
sti
movsl
movsl
add
xchg
xchg
inc
inc
sbb
aam
add
ror
jne
sti
in
cmp
mov
out
enter
outsl
mov
dec
push
xchg
mov
mov
mov
mov
in
idiv
mov
movsb
xchg
fcmovnb
mov
sub
adcl
push
cwtl
pop
dec
jecxz
mov
mov
test
mov
mov
mov
shlb
jmp
nop
xchg
xor
push
pop
mov
push
push
add
cmpsb
push
pop
fdivrl
loop
movsl
cltd
xor
adc
shl
int
aaa
lods
outsl
loope
pop
push
jo
xchg
hlt
inc
mov
mov
pop
sub
mov
iret
lds
int3
movsb
push
daa
mov
leave
imul
nop
mov
xor
fadds
pusha
shrl
push
xchg
mov
jg
mov
mov
shll
mov
push
mov
lret
push
cli
adc
jecxz
cmp
mov
and
adc
push
pop
adc
mov
repz
mov
or
mov
mov
aam
jecxz
stc
mov
pusha
xor
addr16
in
cmpsb
adc
jo
addr16
dec
xor
mov
test
cmp
inc
sbb
xlat
mov
jl
pop
ret
push
rcrl
fistpl
loopne
cmp
xchg
cmpsl
adc
cmp
aas
int
push
stos
ficoml
sbb
inc
mov
test
inc
xor
push
cmp
mov
test
sti
sarl
jne
mov
cmp
cmp
scas
scas
aas
iret
sub
int3
jmp
sub
ret
or
pop
push
insb
fstpl
leave
mov
mov
cmpl
cli
into
lcall
jmp
mov
inc
and
cmp
inc
movsb
enter
or
mov
bound
and
bound
jge
shll
sbb
ret
jge
mov
xchg
xchg
test
out
fsubs
pop
cwtl
cltd
pop
mov
push
xchg
push
mov
test
cmp
pop
and
cmp
mov
jo
mov
sahf
aad
fisttpl
pop
sbb
mov
xorl
cmp
insl
adc
rol
mov
movsb
aam
jnp
sbb
cmp
outsb
popf
or
push
sub
lret
into
adc
lret
repnz
mov
lea
push
into
mov
sub
adc
or
test
sub
test
addb
mov
dec
in
mov
dec
cli
fnsave
loope
cmpb
and
inc
jne
and
insb
mov
cmpsb
fnstenv
pop
in
fwait
push
mov
jmp
cmpsb
js
test
xor
jo
xchg
jb
imul
xchg
dec
jmp
rorb
mov
sub
inc
frstpm(287
test
nop
sbb
fists
mov
mov
nop
inc
int
lcall
xchg
or
mov
dec
leave
cmc
sbb
xor
or
push
sbb
lods
push
adc
push
aaa
inc
outsb
mov
lds
xchg
xor
sahf
clc
or
add
das
rol
in
pushf
jns
ss
jb
shlb
xchg
sbb
push
lea
arpl
das
or
loopne
movsl
xchg
cltd
sarb
test
pop
cmp
sbb
cld
clc
call
pop
test
add
mov
cli
fwait
hlt
dec
xor
sbb
mov
pop
jns
jecxz
jne
add
ret
adc
pop
inc
push
fstps
test
loop
stc
inc
mov
lcall
mov
push
fisttpl
call
mov
mov
cmc
xor
cmpl
mov
mov
clc
stos
adc
xchg
adc
cmp
cmp
cwtl
mov
jne
ja
mov
push
clc
jge
inc
scas
cmpsb
xlat
mov
jp
lahf
fistpl
push
outsb
pop
jne
pop
ds
loop
and
lcall
jmp
outsb
mov
loopne
dec
loopne
adc
jle
pop
jne
mov
mov
aas
sbb
mov
adc
call
addr16
cwtl
sub
out
mov
out
push
pop
dec
push
adc
mov
fildl
mov
cwtl
ss
and
and
ja
push
fsub
xchg
loope
hlt
mov
inc
pop
or
pop
ret
sub
pop
pop
or
dec
mov
mov
loopne
pop
sbb
mov
adc
xchg
adc
outsl
cmp
add
mov
je
les
jg
inc
push
or
iret
clc
cmpsl
into
xchg
divb
rcrl
in
mov
outsb
lock
dec
pop
and
sti
js
or
jle
sarb
pop
inc
cld
sbb
mov
dec
insl
jne
pop
int
xor
xchg
cmp
mov
je
cmp
push
jle
bound
push
movsl
addr16
xlat
xor
ret
mov
mov
cli
mov
and
lds
xlat
jmp
shlb
jb
cmp
add
ret
inc
iret
sub
xor
sbbb
push
cltd
shlb
lret
jmp
out
mov
insb
pusha
jecxz
test
mov
push
xchg
shll
outsb
mov
pop
lock
push
jb
sarl
negb
adc
push
inc
jge
xor
call
jbe
popf
movl
pop
push
test
jae
clc
rol
cwtl
jne
inc
pop
dec
mov
popf
mov
rolb
addb
inc
insl
mov
adc
stc
mov
inc
iret
mov
xor
mov
mov
sti
dec
movsl
loop
std
inc
ljmp
push
outsl
lock
jbe
xor
aaa
mov
adc
sbb
addl
leave
mov
scas
inc
pop
xchg
inc
addr16
cmc
adc
test
jno
sbb
lds
fmuls
lods
mov
mov
neg
jmp
daa
shlb
test
ss
sbb
mov
sbb
pop
mov
adc
jnp
xchg
repnz
out
mov
mov
mov
dec
mov
pop
push
mov
mov
xor
push
dec
rorb
fidivrl
pop
test
inc
mov
pop
sbb
adc
xchg
and
rolb
shll
xlat
pop
sbb
lods
out
xchg
xor
rcl
scas
and
nop
mov
ss
add
lds
bound
inc
mov
mov
mov
mov
cmp
int3
test
push
mov
xchg
jbe
xor
fstp
adc
mov
popf
mov
cmp
add
inc
cmp
cwtl
movsl
pop
icebp
xor
inc
and
popa
sahf
adc
and
inc
movsl
es
cmp
ljmpw
jo
cmpb
xchg
insl
pop
stos
mov
cmp
or
lret
dec
mov
dec
push
add
or
inc
int
scas
test
mov
out
inc
subl
dec
mov
xor
movsl
nop
fisubs
test
addl
stos
addr16
mov
test
loope
shlb
mov
lods
jbe
lods
add
test
into
fnsave
xor
lcall
xlat
sti
xor
in
daa
inc
or
scas
mov
cmp
lea
jl
inc
frstor
mov
test
inc
push
or
movsl
pop
mov
lea
xor
jl
add
push
jecxz
sbb
xchg
or
add
adc
pop
in
std
mov
insb
mov
leave
xchg
addb
std
mov
lods
inc
shll
jp
mov
mov
leave
bound
fldl
dec
mov
mov
push
push
mov
push
hlt
lock
data16
cmp
sub
xchg
in
pop
xchg
lock
daa
sub
sbb
mov
inc
test
inc
and
roll
lahf
mov
and
push
mov
fdivs
mov
inc
mov
cmp
xor
mov
push
pcmpeqd
cmc
and
lcall
cwtl
mov
jle
push
adc
pop
pop
jg
dec
das
jnp
cmc
adc
jns
xor
ds
mov
push
mov
xor
cmp
mov
mov
pop
sbb
scas
mov
or
xor
loope
sbbl
stos
icebp
scas
push
and
and
rcrl
xacquire
push
mov
or
sahf
push
xchg
jno
pop
xor
mov
test
mov
add
mov
mov
adc
jle
push
sarb
and
and
mov
jge
pop
cmpsb
pop
clc
add
jb
and
cmp
and
push
push
pop
outsl
lret
xchg
sahf
fwait
addr16
inc
mov
or
fildl
sbb
iret
out
iret
xchg
popa
dec
pop
data16
clc
mov
mov
into
leave
addb
xchg
insl
cltd
in
mov
aas
lock
mov
popa
mov
inc
mov
or
sbb
push
lods
addr16
hlt
pop
lret
mov
mov
xchg
lret
mov
movsl
cmp
rcll
dec
pushl
loopne
add
push
out
adc
adc
jbe
pop
pusha
inc
and
xchg
and
mov
mov
movsl
lods
into
xlat
mov
adc
popf
mov
or
gs
popf
xor
adc
sbb
dec
xor
pop
shl
shll
pusha
rcl
jmp
out
jb
mov
inc
cmp
sahf
out
rcl
jl
iret
lods
outsl
mov
jne
xchg
pop
movl
mov
pop
in
out
loope
pop
shlb
icebp
daa
mov
cld
jmp
pop
nop
xor
inc
jmp
repnz
mov
enter
mov
inc
lahf
inc
sbb
icebp
jecxz
leave
xchg
ret
mov
loopne
push
push
notl
inc
jecxz
in
popa
xor
pop
rcll
inc
dec
xlat
idivb
xlat
ja
cwtl
call
bound
adc
cli
out
inc
dec
sbb
xlat
mov
inc
icebp
add
cltd
mov
sbb
ret
push
stos
ret
push
test
repz
xchg
cli
lds
dec
mov
and
orb
out
cmpsb
dec
stos
add
int3
popa
add
fst
mov
mov
or
sub
test
cmpl
lss
subb
stos
js
loope
cmp
rorl
stos
dec
ds
add
sarb
orb
lea
push
or
xchg
js
rolb
scas
pop
adc
aam
pop
push
xchg
cmpsl
and
sub
lret
adcl
pop
orl
into
mov
jg
rolb
lret
jns
mov
cwtl
ret
cmp
loopne
push
out
sub
push
addr16
in
push
rcrb
stos
movsb
xor
mov
out
or
loop
adc
aas
ja
popf
leave
loop
test
mov
into
mov
out
js
stos
pushf
cli
scas
sbb
mov
ds
mov
mov
jne
imul
inc
push
jl
adc
loope
sbb
pop
lret
dec
test
sbb
adc
test
ljmp
dec
adc
cs
sub
mov
push
inc
xor
pop
xorl
bound
scas
rclb
ds
ret
add
pop
mov
inc
push
movsb
fcoml
imul
inc
sarl
push
cmp
lret
andl
ficoms
mov
clc
inc
push
and
and
cmp
mov
fsubrs
in
sub
add
or
sbb
inc
and
and
stos
add
push
inc
adc
leave
push
aas
add
stos
xchg
sarl
add
enter
mov
cmc
adc
mov
daa
mov
call
loopne
xchg
rcll
mov
sbb
out
movsb
cmp
and
and
xor
mov
mov
xchg
add
cmpsb
xchg
andl
test
lods
stc
stc
jb
cmp
inc
jl
xor
jb
adc
sub
sahf
dec
daa
mov
popa
movsb
mov
adc
jge
mov
fldenv
loop
sbb
fwait
cmpsb
loop
mov
cmpsb
addr16
arpl
cmp
iret
jle
mov
ja
push
fwait
mov
sti
cwtl
add
jp
pushf
rol
inc
add
daa
and
adc
push
in
sbb
cmp
or
cwtl
cmp
mov
pop
dec
sbb
xchg
sub
sub
stos
arpl
sahf
xchg
fwait
aad
pop
push
inc
jnp
mov
ret
addb
mov
xchg
mov
rep
orb
lods
adc
cmc
aaa
jl
rclb
leave
add
subb
mov
cmp
inc
inc
addl
sbb
in
cmp
cmpsl
mov
negb
fs
fwait
add
test
loopne
roll
sbb
inc
xchg
inc
mov
jmp
pop
movsl
cmp
push
rolb
inc
cmp
sarb
cmpb
divb
mov
jno
mov
or
jg
shrb
stos
mov
inc
shl
notl
jb
mov
pop
jo
imul
shrb
mov
xchg
pop
clc
cmp
movsl
xchg
cltd
call
roll
dec
sub
mov
das
test
pop
dec
lahf
and
push
xor
mov
adc
test
push
mov
cmpsl
out
jo
loope
cmpsb
push
scas
pop
inc
xor
cmpsl
icebp
push
sub
ja
out
mov
dec
dec
test
sbb
mov
mov
mov
ss
mov
mov
jb
mov
add
shll
fwait
cmpsb
roll
inc
inc
mov
inc
sub
sub
icebp
mov
leave
and
adc
cwtl
fsubrl
mov
movsl
sahf
cli
movb
imul
int3
fbstp
adc
pop
imul
test
subl
mov
fisubs
add
mov
inc
aaa
test
cmp
insl
xor
push
test
imul
je
and
out
std
lock
addr16
push
movsl
mov
rcrl
mov
mov
or
test
sub
icebp
mov
insl
insb
sub
pop
hlt
and
insb
cmpsb
mov
xchg
adc
push
push
sbb
mov
jnp
sub
sti
dec
mov
cs
pop
fistl
sarl
mov
or
adc
pushf
adc
push
dec
xor
mov
shl
sarb
fidivl
popa
mov
dec
and
dec
iret
cmp
nop
fisttpll
mov
addb
loope
add
bnd
testl
pop
loopne
mov
mov
push
cltd
inc
roll
jae
pop
adc
cli
jmp
mov
adc
jg
and
lret
sub
sbb
xor
scas
xor
sbb
icebp
pushf
in
sbb
jecxz
adcl
into
lahf
sub
adc
test
repnz
repz
cmp
adc
xchg
inc
sbb
add
mov
shlb
in
dec
mov
mov
icebp
xor
mov
add
daa
xor
fstps
test
mov
mov
adc
add
inc
and
movsl
or
testb
push
sbb
cmp
in
ss
or
pop
mov
mov
inc
mov
add
inc
push
pop
mov
push
mov
fistl
testb
lock
add
pop
clc
loop
xor
jge
push
fadd
cld
clc
pop
imul
ss
loopne
pop
data16
ljmp
cli
aas
ret
dec
sbb
lret
divb
cmp
push
xchg
rcrl
add
adc
loopne
lcall
pop
add
call
and
cld
dec
mov
pop
or
sbb
inc
stos
test
and
aam
jle
mov
jae
popa
icebp
mov
xor
add
jnp
push
lock
jl
and
pop
sub
je
into
xchg
cmp
push
jp
movsl
adcb
dec
mov
roll
sbb
mov
push
and
xchg
mov
sbb
scas
and
adc
and
mov
dec
xor
shlb
sbb
je
stc
mov
out
dec
cs
add
cmp
ret
jp
dec
sbb
cmp
in
mov
stos
pop
mov
cmp
testb
shrl
adc
sub
cmp
lcall
jne
mov
lea
push
mov
cmc
dec
add
popa
push
inc
adc
sahf
shlb
adc
fmulp
shl
aaa
add
imul
mov
add
mov
xor
sti
xchg
clc
dec
mov
mov
mov
and
enter
add
out
mov
mov
stc
inc
cmp
scas
mov
add
ss
aas
xor
icebp
and
ss
sahf
xchg
sbb
rolb
inc
test
jbe
cmp
xlat
push
xor
push
mov
or
rorb
mov
xorb
add
popa
hlt
fwait
pop
dec
ljmp
fidivs
dec
xorb
mov
mov
cmp
adc
mov
nop
add
xor
jns
pop
mov
sbb
mov
negb
movsl
and
insb
cmc
xor
out
outsl
dec
or
bound
and
xorb
rcrb
movsb
enter
xchg
movsl
fbld
loop
lea
cmp
fcmovnbe
dec
push
mov
xor
mov
pop
sub
lods
lret
xor
sub
outsl
adc
test
fstps
movsl
xchg
pop
cmpb
xchg
xchg
pop
jmp
fbstp
loopne
bound
dec
xchg
jl
fldl
add
mov
push
add
cmp
movsb
andl
faddp
pop
out
adc
sub
test
push
in
inc
xchg
mov
popa
arpl
popa
pop
insb
scas
aaa
data16
xor
sub
inc
jp
mov
cmp
testl
mov
sbb
shll
xchg
sti
inc
xchg
mov
add
stos
pop
mov
pop
jmp
fsubl
stos
add
jecxz
pushf
xor
orb
fpatan
xor
lea
fwait
mov
out
test
insb
ds
scas
sub
out
xor
cmpsb
loope
movsl
mov
in
testb
popf
xor
inc
in
sbb
stos
test
cmpsb
push
das
adc
mov
mov
ljmp
dec
hlt
das
outsb
repz
test
cmp
mov
in
xchg
stos
push
cmpsl
sbb
adc
dec
test
or
mov
or
cmpsb
push
leave
push
pop
pop
aaa
add
sahf
fstpt
sbbb
mov
sbb
pop
jo
adcl
push
mov
cmp
popf
fisubrs
gs
movsb
pop
adc
pop
ret
inc
xor
pop
sub
cmpsb
sub
ljmp
add
jp
fwait
cs
sarb
inc
and
xor
and
jns
pusha
cltd
cmp
cmp
pop
push
xlat
js
leave
xchg
push
fisubrs
outsl
mov
mov
sbbl
das
mov
xchg
mov
cmpsl
aam
pop
xor
bnd
or
in
push
fucomi
rcll
inc
std
push
int3
cmp
out
addb
jno
mov
jg
xlat
aad
xor
mov
inc
push
in
nop
shlb
fstpl
cwtl
jle
adc
adc
inc
adc
movsl
jmp
xor
sahf
pop
lea
popa
movsl
or
lods
in
pop
jns,pn
xchg
fisubrl
cmp
inc
mov
lock
jle
lock
nop
mov
test
dec
mov
fisubs
lods
iret
je
test
or
mov
fldz
cwtl
mov
inc
ljmp
lret
inc
fsubl
aas
adc
cmpsl
jmp
lods
js
add
xor
rol
pop
imul
test
mov
out
xchg
mov
push
push
mov
push
inc
jns
nop
negb
dec
sub
inc
push
add
je
jmp
pusha
popa
add
cmp
aad
popa
add
popf
xor
jp
cmp
xchg
ds
mov
jge
mov
adc
popa
and
jmp
shll
mov
pop
outsb
fcomps
add
adcb
cmp
std
arpl
cmp
add
jne
mov
push
mov
sarb
push
stc
mov
dec
cmp
mov
mov
xchg
mov
xchg
ret
arpl
and
fcomps
xor
jge
pushf
repnz
ror
mov
pop
add
mov
pop
leave
fwait
mul
ret
aas
mov
push
pop
jge
std
jne
xlat
and
mov
mov
hlt
or
xor
fisubl
test
insl
rcll
test
in
pop
cmpsb
cli
fidivrl
inc
ds
sbb
jno
pop
or
test
loop
mov
out
test
rorl
pop
mov
mov
test
lcall
sub
jnp
dec
test
stc
inc
mov
daa
lock
mov
fidivrs
hlt
nop
mov
jns
out
sbb
jmp
sbb
inc
lods
mov
imul
inc
mov
adc
in
dec
xchg
movsl
sbb
push
mov
mov
push
je
hlt
mov
jne
mov
mov
icebp
xchg
sbb
xor
cmpsb
sub
push
pop
jne
sub
roll
sbb
adc
movsb
jne
and
mov
movsb
shll
push
std
popf
adc
inc
xchg
icebp
xchg
jl
adc
xor
adc
mov
mov
mov
call
nop
jecxz,pt
jnp
fwait
stos
cmp
push
lds
jbe,pn
nop
push
popa
push
cmpsb
cmc
fisubl
loope
leave
or
adc
or
imul
add
jne
or
cmp
mov
or
cmp
sub
sbb
and
ret
or
and
fists
jo
fstpt
cmc
xlat
cmp
jae
jmp
daa
aaa
lahf
push
out
mov
movsl
push
or
ret
clc
adc
lahf
jg
push
and
pop
mov
popf
inc
cmpsl
pusha
sbb
in
push
push
mov
or
and
xchg
pushf
inc
mov
sbb
fldl
xchg
movsb
lret
adc
lret
jge
call
stos
sahf
mov
xor
sbb
mov
mov
mov
mov
xor
mov
adc
subb
fstl
jne
mov
mov
cmp
mov
shrb
pop
push
mov
dec
push
sub
daa
addb
aaa
jo
bound
xorb
daa
mov
addb
shlb
lods
push
dec
inc
adcb
xor
and
xchg
push
push
cwtl
add
hlt
lahf
enter
xor
xor
mov
add
push
push
inc
sbb
cli
ret
push
test
cli
mov
xchg
jp
mul
sub
add
cmp
movsb
inc
stc
loopne
cmpsl
aad
pushl
lcall
inc
mov
movsl
mov
push
cltd
mov
mov
jp
mov
cli
jp
fistpl
sahf
sbb
loope
xchg
add
xorl
push
insl
out
inc
pop
adc
shlb
dec
cmp
xchg
scas
xchg
mov
mov
shlb
in
mov
inc
enter
dec
mov
fiaddl
xor
cwtl
shll
ret
jge
xorb
jo
adc
push
rorb
movsl
popf
mov
shll
adc
andb
aad
ret
bound
pop
in
ds
cmpsl
cmp
jle
popa
add
or
push
addb
mov
andl
add
and
xchg
shlb
and
mov
cmpsl
inc
fistps
or
cmpsb
inc
bound
pop
cmpsl
push
stos
sub
push
repz
cmp
or
mov
xchg
mov
jno
paddsw
jae
fwait
mov
xchg
mov
out
mov
xor
inc
xor
add
xor
adc
adc
pop
push
test
sbb
sbb
mov
stc
sub
add
pop
pop
stc
add
cmc
lahf
sbb
out
or
jle
imul
dec
cmpb
fwait
push
addr16
popf
adc
mov
mov
mov
cmpsb
fisttpll
xchg
lcall
xor
pop
jb
mov
movb
pop
cmp
or
das
cmpsl
pop
mov
xor
and
cld
mov
inc
ret
aas
ret
or
cli
pop
mov
pop
pop
movsl
jnp
cmpsl
das
cmp
andb
iret
stos
jno
push
cmc
mov
cmp
sbb
rcll
test
stc
xchg
mov
mov
push
jb
inc
xchg
jecxz
and
cmp
inc
addb
pop
inc
dec
rol
in
movsb
jbe
dec
inc
jecxz
shll
jno
jb,pt
aas
xor
sarl
faddl
inc
loop
das
ds
test
data16
mov
insl
push
push
add
sbb
sti
mov
sahf
jp
xchg
mov
push
sub
mov
popa
cmpsl
addr16
fstps
dec
push
clc
pusha
insl
mov
inc
outsb
ret
inc
sbb
jg
adc
addr16
inc
movsb
loop
mov
xchg
lcall
lahf
mov
mov
mov
loopne
movsb
jae
testl
bound
cwtl
xlat
rcl
xor
jae
jmp
imul
adc
lods
pop
pop
fcmovne
adc
inc
data16
jle
cwtl
pusha
xchg
andl
arpl
jl
arpl
jmp
ret
fadds
mov
int3
mov
cmp
jbe
rcr
add
and
arpl
iret
mov
inc
mov
mov
mov
mov
mov
jmp
mov
ret
bound
or
data16
or
push
ds
lods
repnz
or
pop
add
cmpsb
xlat
xorl
mov
fidivs
sub
arpl
push
sub
dec
fptan
inc
adc
sub
jge
sbb
leave
adc
dec
lcall
mov
ds
imul
mov
xor
xor
xor
lcall
test
and
xor
and
mov
daa
jecxz
adc
push
mov
jle
repnz
test
cmpsb
popf
push
xlat
js
repnz
inc
nop
addr16
mov
sti
add
popa
stc
cmp
test
xor
push
mov
xchg
pop
pop
es
rolb
cmc
movsb
jge
movsb
jns
pop
xchg
pop
xor
cmp
scas
insb
sub
pop
adc
push
clc
dec
fadd
fucomi
push
stc
xchg
mov
add
nop
divb
xor
mov
mov
in
sub
stc
jnp
bound
sbb
pop
mov
mov
xchg
fbld
fidivl
ret
xor
inc
jecxz
nop
shlb
jecxz
nop
shll
jecxz
aas
mov
mov
mov
repz
jge
mov
jge
xor
or
iret
push
mov
mov
sbb
sub
and
rcll
fidivrl
inc
fsubrs
push
pop
jns
repz
inc
sbb
ret
add
mov
gs
mov
insb
ret
pop
movsl
jp
das
lods
adc
shr
hlt
push
adc
cmpsb
notl
fildl
mov
adc
adc
je
stos
testl
xchg
push
test
add
shll
fs
jnp
cmp
mov
mov
mov
test
dec
gs
fst
inc
xchg
push
inc
cs
jne
arpl
add
and
repz
test
fwait
adc
es
cwtl
mov
push
mov
aam
sbb
cltd
enter
adc
add
sbb
ds
addl
ret
xchg
push
and
xor
testl
cwtl
sbb
lret
cli
fimuls
nop
int
add
xor
addr16
test
dec
pushf
fwait
push
cmp
cmp
pusha
jge
mov
sub
cltd
fldl
nop
xor
int
fists
shrb
xchg
mov
aaa
ss
jbe
pop
xchg
fcomps
test
in
inc
mov
jbe
cmp
sub
fnsave
or
jmp
mov
cmp
aam
push
sahf
addr16
mov
fstps
dec
xor
bound
cwtl
push
inc
xchg
cltd
sahf
push
pop
fcompl
nop
mov
dec
jg
xor
jno
cmp
in
stc
xor
sti
mov
sar
jecxz
mov
mov
sub
push
loop
bound
push
add
loope
xor
xor
cmp
push
je
insb
inc
rcll
jmp
push
and
int3
nop
inc
add
cmp
push
ljmp
adc
cmpsl
mov
adc
jns
cld
mov
mov
add
inc
cmp
insb
jbe
mov
mov
jne
movsl
not
push
jns
mov
sti
and
fisubl
sbb
das
dec
push
mov
mov
push
insb
xchg
dec
test
mov
pop
shr
ret
pop
adc
cmpsb
rcl
stos
cmp
push
jns
jmp
push
fwait
loopne
mov
std
sbb
sbbb
sub
dec
mov
jnp
adc
cmp
xor
dec
push
movsl
mov
rcrl
adc
ret
push
aaa
mov
xlat
fidivrl
mov
frstor
mov
inc
sub
xor
pop
mov
test
pop
inc
ds
pushf
icebp
pop
sbb
and
jle
mov
out
test
sarb
icebp
pop
shl
mov
stc
hlt
push
adc
scas
or
shl
jnp
aad
dec
xlat
cld
sahf
fildl
test
movsl
mov
pop
xchg
pop
cli
sahf
and
sbb
adc
adc
fcoml
push
push
movsb
mov
mov
clc
sar
mov
arpl
add
mov
add
les
jne
pop
adc
dec
mov
dec
nop
pushf
sahf
adc
sti
xchg
sbb
inc
movsl
sbbl
movsl
jns
xor
stos
scas
test
jns
and
dec
sbb
jmp
sahf
outsl
cmpsb
pusha
test
out
pop
loop
cmp
mov
rcll
inc
stos
in
xchg
icebp
addl
push
mov
sbb
xor
xorb
xor
test
aaa
xchg
jno
push
ret
je
pop
mov
pop
in
cmpsl
mov
inc
dec
iret
imul
add
dec
fcoml
push
pop
popa
mov
jne
pop
aas
stc
fbstp
add
pop
xchg
mov
jl
xchg
gs
push
scas
mov
fidivl
cmp
mov
jne
loopne
popa
pop
fs
adcb
int3
pop
imul
xchg
inc
cmp
inc
mov
xchg
mov
and
inc
out
stc
movsl
in
mov
inc
aad
xchg
shr
bound
lret
lea
xor
jne
movsl
push
push
popf
jle
xchg
lock
mov
cmp
outsb
mov
pushf
adc
ja
cmp
movsl
mov
cmp
cwtl
movsl
xor
mov
or
cmpsb
inc
pusha
cmpsl
aas
idivb
pop
push
xchg
shlb
dec
das
inc
sbbl
shrb
push
cwtl
pop
mov
pop
xchg
addb
xchg
loopne
int3
imul
test
fidivrs
rcrl
xchg
mov
adcb
test
cmpb
push
jp
and
jp
sarl
mov
mov
lods
pop
push
adcl
mov
les
sub
aas
mov
mov
bound
mov
arpl
sahf
push
sarb
jge
mov
and
add
jo
push
jns
sti
pop
inc
mov
mov
xchg
and
jns
loopne
fsubs
loope
stc
mov
jnp
imul
popa
andl
and
roll
test
xchg
xorb
mov
bound
lcall
and
pop
movsl
lret
mov
insl
pop
int3
das
sub
and
test
push
loopne
push
xor
lods
push
ss
push
cmp
xorb
cmpsl
push
cmp
mov
and
xlat
fadd
inc
mov
pop
test
sarl
lods
mov
mov
les
add
push
inc
push
inc
or
jno
mov
mov
add
int
adcl
popw
dec
std
xor
xchg
push
stc
bound
cmpl
mov
cwtl
cs
inc
adc
popa
stos
inc
adc
andb
lret
scas
rorb
mov
xchg
je
test
jmp
xchg
adc
push
xchg
mov
dec
or
adc
pop
into
mov
stos
xor
mov
fnsave
pop
std
in
pop
ss
add
inc
repz
cmp
out
loope
pop
mov
pop
in
repnz
jns
in
lcall
ret
pop
inc
fnstcw
rcr
daa
out
push
ljmp
adc
stos
push
fisttpl
sub
pop
mov
shrl
mov
jno
mov
cmpb
and
gs
adc
jmp
or
fdivp
into
jns
ljmp
movsl
popf
test
ret
push
sbb
jecxz
xor
in
add
and
jnp
shr
dec
mov
cmpsb
pusha
loope
dec
inc
pop
add
pushf
imul
adc
and
adc
stc
lret
push
sbb
push
inc
je
cmp
cwtl
movsb
and
pop
stos
js
inc
mov
bound
cmp
xor
mov
and
jecxz
sti
ds
push
mov
push
icebp
jle
daa
add
xchg
xor
popa
pop
push
mov
push
out
or
jae
cmp
jo
mov
add
nop
cmp
nop
loopne
mov
in
arpl
je
shlb
sbbb
lret
rol
jecxz
push
stos
mov
js
cld
inc
mov
mov
mov
clc
mov
nop
cltd
push
xor
out
jns
fwait
xor
push
inc
inc
mov
inc
jno
and
arpl
rolb
xchg
jge
jnp
ja
pop
je
out
scas
aad
ds
lahf
inc
leave
push
mov
cmp
sub
std
pop
out
ss
dec
jecxz
inc
pop
jle
popa
xchg
sbbl
push
inc
sahf
mov
shlb
mov
daa
inc
mov
add
and
mov
sbb
stos
daa
movsl
cwtl
mov
add
ss
insb
sub
xlat
sub
movb
out
cmpb
sarl
jmp
jo
xchg
ds
sbbb
scas
das
dec
ret
inc
lcall
aad
inc
dec
mov
mov
ja
dec
push
cmp
test
jg
aad
ss
or
ds
leave
lds
cltd
roll
cmp
lds
js
fisubs
adc
shl
inc
punpcklbw
add
xor
xchg
mulb
inc
mov
cwtl
dec
mov
pushf
cmpsl
pop
ficoml
push
adc
imul
jbe
add
mov
sub
test
mov
inc
adc
push
into
dec
mov
cmc
jb
mov
cmp
insl
cwtl
outsb
dec
sahf
jp
lea
aaa
js
mov
push
fistpl
push
mov
push
lods
andl
mov
andb
js
imul
scas
push
xchg
fstpl
inc
popa
mov
xor
pop
insl
mov
stos
stc
xchg
or
jb
lret
pop
push
xor
std
divb
dec
inc
shrb
jp
jmp
test
shlb
push
ss
pop
xorb
std
iret
jle
fstpt
in
pop
jmp
or
leave
adc
add
jle
mov
pop
mov
adc
mov
mov
test
subb
mov
xor
sti
or
mov
rolb
cmpsb
test
adc
sbb
mov
mov
mov
pop
leave
loopne
push
cs
cmc
mov
xlat
cmp
outsb
push
cmpsl
aad
xchg
mov
sbb
xchg
daa
sbb
or
sub
sub
scas
fcmove
pusha
pop
push
mov
ret
lahf
addr16
lea
push
sbb
dec
icebp
popa
cwtl
movsl
vprotq
pop
fcompl
xchg
pop
mov
jnp
insb
stos
adc
mov
pop
cmp
loope
icebp
hlt
jnp
inc
push
jnp
rorl
lahf
pop
adc
mov
das
xchg
xchg
decl
jne
mov
pushf
js
cmp
add
cmp
xchg
jne
sbb
xor
subb
mov
cmp
cmp
sub
jns
inc
inc
jl
cmp
push
jmp
push
ljmp
sub
test
and
sub
mov
cli
xor
jge
addr16
sub
sahf
into
orb
lds
cmp
push
mov
call
sbb
cs
jp
push
jl
scas
repz
dec
addb
cwtl
lcall
lcall
adc
cmc
fcomi
xor
jp
rcl
pop
es
cmp
xchg
mov
cmp
cltd
inc
sbb
mov
je
dec
and
and
decl
jmp
push
dec
jo
dec
jbe
repz
dec
adc
aam
cmp
xchg
movsb
fdivrl
rcll
jne
add
push
cltd
andl
sub
fstps
mov
lcall
loopne
orb
loopne
adc
push
add
movsb
outsl
and
out
int
mov
in
and
rcrb
leave
inc
sub
xchg
pop
dec
mov
mov
cmp
shrl
cli
pushf
push
rclb
cltd
inc
xlat
mov
mov
lcall
lret
mov
sbb
pop
dec
pop
int3
ds
xchg
mov
xor
mov
loopne
orb
gs
and
in
dec
xchg
xorb
icebp
jle
ds
inc
mov
loope
mov
loopne
sbb
adc
xor
das
cld
pop
cltd
dec
arpl
out
add
loop
popa
ds
sahf
or
cld
push
adc
xor
cmpsb
into
pop
jbe
fimull
stc
cli
mov
shll
cmp
mov
xor
imul
dec
cmpb
mov
jl
mov
lret
lea
jns
push
lea
insb
xchg
dec
push
xchg
push
shlb
cmpsl
pop
test
xor
jmp
adc
mov
rcrb
sbb
rol
ret
sbb
pop
mov
aas
sbb
jns
cmp
aam
or
shll
inc
push
cmp
push
arpl
cmp
inc
mov
xlat
mov
jne
nop
mov
push
out
inc
sub
nop
pop
popf
jne
lods
mov
inc
push
push
dec
xchg
jne
fwait
out
ret
cmp
inc
push
jl
inc
mov
xchg
es
cmpsb
movsl
inc
imul
xabort
shl
mov
sti
mov
pop
inc
push
cltd
aaa
subb
mov
push
inc
inc
je
mov
mov
and
loopne
mov
cmp
enter
xchg
xchg
idiv
cmc
jg
or
mov
out
dec
sarl
movsl
shl
enter
fcmovu
pop
hlt
fidivl
xorb
adc
sbb
push
and
ds
clc
cltd
shr
push
and
xchg
mov
inc
pop
mov
mov
inc
int
cwtl
inc
cmp
sbb
int
addl
xchg
ret
aaa
dec
shr
ss
mov
movsl
movsl
jp
movsl
movsl
stc
pop
cs
mov
mov
sub
sub
ja
mov
mov
roll
nopl
repnz
icebp
jle
sbb
mov
scas
mov
mov
mov
cmp
aas
jle
cmp
cmp
xchg
cmp
outsb
mov
mov
mov
mov
pop
mov
push
mov
popa
adc
add
mov
adc
pop
mov
lods
xor
push
hlt
add
xchg
je
xchg
xor
mov
sti
das
mov
notl
adc
das
inc
xor
lods
dec
jl
jns
dec
ljmp
jbe
fildl
cmp
test
add
inc
xor
inc
lds
ds
dec
out
mov
add
jns
mov
push
mov
movb
arpl
push
pop
xlat
jo
xlat
sub
xor
adc
xor
adc
adc
and
data16
jbe
sub
test
loope
cltd
imul
inc
dec
not
test
jae
and
scas
mov
jno
xchg
dec
shll
mov
clc
jecxz
arpl
xchg
dec
xchg
test
xor
mov
mov
cmp
adcl
and
dec
mov
les
mov
ss
fwait
jl
adc
lea
pusha
loopne
adc
cmc
or
sti
mov
out
pop
popa
pop
daa
push
or
mov
fs
sbb
add
repz
adc
js
fnstcw
jecxz
pop
mov
lahf
fildl
and
mov
iret
movsl
add
cli
in
cmpsb
nop
std
rcrl
int
fucom
clc
sub
sbb
xchg
add
and
lret
jmp
lcall
ficoml
nop
jne
pop
sub
ret
mov
test
cmpsb
add
pop
mov
jne
mov
mov
xchg
mov
pusha
xor
movsl
mov
ljmp
sub
dec
cld
sub
and
sahf
ficoms
daa
decb
sbb
inc
fldl
pusha
or
inc
pop
add
xchg
dec
mov
mov
sahf
push
testl
test
mov
pushf
mov
mov
jp
fcmovu
movsl
fsubl
pop
sbb
daa
std
push
fsubl
ss
pushf
or
add
mov
jge
inc
mov
std
jnp
or
bound
test
icebp
jo
mov
push
scas
idivb
in
mov
jno
xchg
push
pushf
fisubl
push
imul
psubd
iret
fimuls
mov
arpl
stc
mov
js
subl
mov
ja
rcr
lcall
xchg
subb
add
bound
push
inc
push
mov
inc
dec
pop
pusha
fdivrp
bound
mov
mov
arpl
insl
jle
out
pop
add
fwait
push
mov
ret
hlt
push
fwait
dec
fwait
stc
ljmp
inc
out
add
sahf
rcll
cmp
jns
dec
mov
jmp
popa
loop
clc
sbb
js
inc
xor
repnz
sub
adc
sub
xor
mov
leave
ds
dec
push
subl
ja
rcll
cmp
loope
add
mov
lods
shl
subb
fs
test
mov
pop
dec
in
jns
aas
fsubs
pusha
mov
dec
addr16
xchg
loopne
data16
jge
lahf
pop
sub
out
shll
cmpsb
aad
mov
loopne
aaa
aaa
mov
pop
xchg
test
mov
sub
aas
ljmp
xor
daa
pop
movsb
je
pusha
sti
add
push
in
outsb
push
adcb
cmpsl
nop
mov
rcrl
mov
inc
mov
daa
sahf
jl
adc
xor
cld
js
inc
xchg
lock
js
xlat
adc
and
test
mov
adc
and
dec
daa
test
mov
idivb
pop
mov
out
notl
jno
push
fidivl
insb
shrb
fdivrs
fidivrl
cmpsb
cmp
jge
adc
push
adc
adc
pop
sub
adcb
cmpsb
mov
test
mov
pushf
xor
push
out
mov
sbb
sub
push
pushf
push
cmpsb
pop
jge
and
negb
jbe
das
data16
sub
test
xor
fildll
mov
ficoms
aad
shrb
sub
cmp
xor
fsubl
loop
xor
imul
and
insl
fnstenv
mov
pop
adc
xchg
cmpsb
dec
sbb
jle
popa
push
mull
push
mov
hlt
bound
push
fstl
push
sahf
push
mov
cwtl
add
mov
jnp
mov
sbb
fisubl
push
mov
scas
mov
jmp
shlb
push
cmp
push
mov
pop
or
xchg
aam
in
loop
xlat
mov
xchg
xchg
dec
mov
adc
int
mov
stc
inc
test
mov
sbb
in
inc
addb
pop
add
jns
xor
mov
xor
pop
xlat
pushf
pusha
jne
fwait
adc
add
mov
cmp
add
mov
and
shl
into
fs
jmp
orb
sar
rcl
jns
mov
add
add
into
bound
cmovb
inc
pushf
mov
shl
dec
movsl
test
stc
xchg
icebp
cmc
push
mov
jns
dec
xchg
inc
inc
data16
mov
pop
adc
cmpsl
pop
in
stos
call
inc
xor
fs
into
mov
dec
inc
bound
sub
jno
outsl
inc
sub
sar
pop
clc
add
daa
cmp
inc
out
flds
adc
sbb
lcall
mov
in
jle
cmp
frstor
xor
mov
or
mov
and
pop
xor
cmp
mov
inc
pop
imul
mov
fwait
sti
aas
cwtl
or
inc
gs
addr16
test
xor
inc
scas
mov
shll
push
stos
dec
stc
pop
dec
xchg
add
pusha
dec
mov
clc
movsl
mov
ss
adc
inc
add
lret
xor
xchg
xchg
pop
je
jle
imul
sbb
and
xchg
jb
add
adcb
ja
mov
mov
mov
xor
js
jg
jo
jae
popa
idiv
pop
mov
mov
sbb
inc
mov
stos
inc
fcmovnb
bound
loope
push
cltd
cmp
rcl
mov
mov
out
lods
fwait
addl
push
addr16
mov
xchg
mov
adc
bound
xor
cltd
fcomp
aaa
add
aaa
add
mov
add
nop
mov
filds
gs
pushf
and
sbb
mov
mov
mov
adc
aaa
shl
cli
mov
cltd
stc
stos
mov
mov
and
push
mov
mov
sahf
mov
jp
sub
loope
out
xchg
sbb
or
inc
pop
adc
out
xor
cli
outsb
mov
movsl
fmuls
frstor
adc
sbb
xor
inc
ret
mov
mov
jle
js
push
test
add
ret
test
repz
and
fmuls
xchg
mov
lahf
popf
mov
push
and
cwtl
out
cmpsl
xchg
dec
leave
mov
mov
and
movsl
ret
sub
xchg
flds
push
xor
out
mov
into
mov
push
icebp
loope
rcl
test
push
bound
stc
xchg
scas
cmpsb
pop
xchg
arpl
jp
inc
xchg
scas
jno
data16
andl
ja
xchg
arpl
out
arpl
outsl
mov
jmp
in
out
bound
rolb
jns
and
fcmovb
inc
lahf
pusha
pop
add
cmc
out
mov
loope
inc
shr
out
or
aad
inc
call
aas
rcl
mov
inc
rolb
pushf
ret
xor
mov
leave
out
movsb
test
mov
mov
push
xchg
ss
jo
push
push
cmp
inc
std
adc
adc
mov
arpl
out
mov
ret
xor
sub
pop
repnz
ret
xor
fs
jp
repz
dec
outsl
loope
mov
inc
shrl
and
in
mov
add
jecxz
or
dec
jge
xchg
cli
jecxz
icebp
inc
sahf
push
pop
in
cmp
adc
les
and
adc
mov
out
lcall
shll
sbb
dec
mov
clc
in
popa
in
jl
lcall
insl
jo
stos
outsb
adc
xor
jge
dec
mov
push
or
sub
addr16
leave
xlat
inc
push
sbb
cld
jno
cmp
mov
mov
add
adc
inc
ds
jnp
dec
xchg
inc
je
jp
and
push
fucomi
popf
mov
call
mov
push
sub
mov
mov
jns
jns
jmp
sub
icebp
data16
sbb
cmp
mov
jae
jns
xorb
adc
xor
loopne
adc
test
jbe
scas
push
call
pop
fistpl
sbbb
cld
movsl
fcomip
dec
lds
mov
xor
mov
sbb
or
movsl
lret
sti
jecxz
fisubl
push
add
mov
leave
negl
addb
rol
xchg
into
lock
mov
in
test
sub
jbe
and
sti
mov
movsl
insb
testl
aaa
incb
and
bound
sbb
xor
mov
pop
fistl
sbb
or
xlat
and
out
lods
pop
lcall
pop
cmc
and
mov
jne
test
ficompl
pop
mov
ficoms
sahf
sbb
sub
mov
mov
loop
mov
in
jp,pt
es
ss
mov
cmp
cmc
push
pop
mov
dec
inc
mov
xor
dec
push
test
lock
cmp
scas
and
into
ds
cltd
add
ss
mov
dec
cmp
test
imul
push
pusha
xorl
adc
pop
inc
cmpsb
sbb
movsb
xor
pop
movsl
ss
or
and
lods
sub
adc
push
dec
dec
shr
jg
jne
sahf
push
push
sbb
cmp
popf
mov
arpl
pop
inc
cmp
fwait
mov
mov
insb
add
xor
add
cmp
cwtl
mov
movsl
testl
cmpb
aam
leave
mov
addl
push
adc
mov
inc
sbb
mov
movsl
inc
ficoms
adcl
test
xchg
push
and
mov
popa
xchg
inc
dec
ja
in
out
adc
mov
mov
dec
push
push
insb
sarb
adc
and
or
fnsave
adc
fs
mov
mov
sub
sub
fs
les
insb
sub
loope
testl
mov
stc
push
movsl
mov
icebp
add
ss
adc
pop
adc
mov
jle
mov
pop
movsb
push
add
adcb
notb
xchg
jmp
fnstcw
mov
imulb
rclb
mov
mov
adc
mov
sbb
mov
std
pop
lods
bound
cmpsl
aaa
daa
jb
lahf
pop
mov
pop
sti
out
ss
xor
sbb
sbb
xor
push
inc
adc
inc
push
shll
mov
subl
jp
add
iret
scas
pusha
sbb
fdiv
cmp
or
sub
jno
out
push
jl
mov
cld
cmpsb
mov
push
push
call
addr16
in
inc
adc
rolb
xchg
adc
shll
mov
pop
push
xor
mov
sbbl
push
aas
xchg
or
adc
push
adc
and
mov
mov
jbe
sub
daa
and
ret
out
fistl
lret
add
inc
push
jle
cmp
add
adc
xchg
and
and
aaa
rcrl
adc
outsb
sarb
out
out
outsb
aaa
sti
jp
fildll
sahf
bound
fiaddl
push
daa
xor
cmc
mov
push
sarl
aas
dec
mov
je
incl
data16
cmp
mov
jae
dec
ss
test
mov
movsl
cmp
sbb
push
cmp
jg
dec
xor
aas
pop
jp
fnstenv
adc
add
dec
xchg
clc
dec
xchg
aas
xor
xchg
insl
xchg
out
test
cwtl
aaa
mov
xor
sbb
scas
pop
adc
add
mov
push
pop
dec
mov
aad
fldt
sbb
bound
mov
adc
mov
add
mov
push
pop
in
stc
out
sub
repz
mov
lcall
pushf
cs
xchg
push
out
jmp
adc
push
cmp
mov
cmpsl
push
in
mov
sbbb
sbb
movsl
jle
outsl
xor
mov
movsl
jecxz
jmp
mov
sub
lods
loopne
call
inc
and
sub
jecxz
dec
ss
out
das
and
xchg
inc
mov
jge
mov
mov
addr16
clc
pop
ljmp
test
sub
mov
call
sub
cwtl
lcall
and
cmc
cmpl
mov
add
or
orb
mov
cmc
stos
nop
push
push
ret
xchg
repnz
nop
cmpsb
mov
cmp
out
test
ret
test
sbb
addb
push
stos
ret
icebp
stc
cmp
mov
inc
push
xchg
cmp
push
mov
hlt
loopne
mov
adc
jecxz
inc
sub
scas
and
cmp
loope
loopne
push
inc
mov
in
mov
add
xchg
sub
sbb
push
lods
jns
inc
adcl
xor
stc
cld
pop
pop
mov
mov
lcall
test
into
mov
test
sarb
in
mov
jns
mov
mov
and
loope
mov
push
sbb
fstps
aaa
inc
rol
inc
loope
js
and
neg
test
jp
gs
outsl
dec
fdivrl
push
cmp
mov
cmc
lahf
add
popa
and
popf
adc
loope
fs
jmp
loopne
cmp
cmpsl
sarb
add
cli
rcl
repnz
lret
cmp
inc
or
add
ss
into
cmp
mov
pop
in
addb
es
test
mov
dec
cmp
cwtl
movsl
daa
imull
xchg
popa
test
push
cmp
in
ret
icebp
xor
add
add
mov
and
pop
les
add
enter
sahf
jo
sbb
mov
pop
pop
xchg
ds
cmp
lret
cmpsl
and
stos
mov
adc
mov
or
xchg
mov
cmpb
loope
mov
xorl
stc
pop
mov
sahf
aaa
movsl
pop
sub
adc
xlat
mov
rcrl
movsl
push
pop
lcall
push
movzwl
cmp
sub
notl
sub
inc
shll
lods
and
jns
sti
stos
addr16
jnp
lods
adc
and
and
xchg
aaa
shrl
mov
mov
add
cmp
sub
js
andl
idivl
arpl
stos
sbb
scas
inc
loopne
test
popf
mov
gs
add
jbe
inc
and
ds
push
add
mov
inc
lods
aas
fs
sbbl
cwtl
insl
xor
adc
mov
push
mov
mov
mov
fwait
sbb
lods
imulb
lret
dec
in
jo
push
lcall
and
pop
and
inc
push
aam
push
inc
or
and
lahf
mov
inc
cmpsl
inc
mov
cmp
inc
loopne
sbb
push
sti
mov
dec
cmc
xor
nop
cmp
pop
fistl
sahf
popa
outsl
sbb
inc
mov
and
loope
adc
adc
roll
lea
popa
cmc
xor
mov
inc
pop
pop
fsts
aaa
call
inc
mov
push
mov
jo
lcall
pop
mov
ret
mov
sbb
or
addr16
and
mov
pop
sahf
in
daa
jns
jnp
cmp
fwait
in
push
dec
add
pop
fwait
in
shlb
sbb
fisubl
jb
pop
jp
lret
loopne
sub
je
ja
mov
in
mov
push
je
xor
nop
inc
and
lods
xchg
or
test
bound
push
scas
push
cmp
les
pushf
popf
pusha
ret
adc
ja
popf
xor
pusha
fcmovnb
adc
ret
cmpl
mov
xor
cmp
inc
jne
notb
mov
les
xchg
imul
mov
or
xor
and
mov
mov
out
and
ds
fdivs
mov
outsb
push
std
das
test
insl
pushf
lea
adc
pop
add
and
fwait
mov
sti
mov
movsb
out
bound
mov
movsl
lock
je
call
and
lods
fsubs
sub
xor
ret
dec
movsl
add
add
xchg
clc
pop
test
mov
scas
sub
sbb
nop
dec
mull
jo
jb
es
mov
test
test
loopne
out
add
mov
xchg
ss
or
sarb
or
jge
push
adc
and
fldt
cs
sar
dec
mov
xor
push
pop
addr16
add
add
jg
repnz
or
mov
loopne
jge
mov
mov
sbb
loopne
mov
addr16
loope
mov
jne
sub
mov
rcll
jne
xchg
adc
adc
pusha
arpl
movsl
push
rcrb
jg
daa
push
mov
aad
jle
arpl
lcall
stos
sti
mov
mov
push
push
sbb
cmpl
add
loop
stc
mov
sbb
mov
rorb
imul
xor
push
jb
adc
and
cmp
sbb
jo
inc
notb
scas
cs
mov
lods
hlt
mov
cwtl
mov
leave
lcall
mov
jmp
mov
test
in
cmp
adcb
xchg
add
xchg
xchg
adc
inc
xor
jb
inc
jb
adc
lret
test
mov
jle
aas
aas
mov
inc
pop
xchg
and
dec
mov
ss
mov
shlb
mov
ljmp
pop
xor
inc
leave
sbb
lods
int
jbe
adc
movsl
and
movsb
jle
imul
jno
fninit
mov
in
xchg
in
adc
inc
mov
sbbl
cwtl
and
dec
shl
jmp
pop
sub
fstpl
notb
push
xchg
pushf
pop
in
sub
xor
fwait
mov
xor
add
inc
andb
jb
mov
scas
jle
push
fwait
movsb
scas
xor
fldcw
push
movsb
ljmp
jo
bound
adc
jne
mov
and
inc
sahf
daa
test
fisttpl
push
mov
repz
cmp
mov
and
mov
loopne
mov
test
std
mov
jle
add
fidivl
jge
pop
xchg
dec
test
ds
inc
push
push
inc
inc
and
cwtl
js
and
pop
adc
xchg
pop
rclb
cmp
jl
cmp
jo
add
js
xor
adc
pusha
adc
dec
sub
popl
js
mov
or
cmc
into
fstpt
movsl
jle
jmp
bound
mov
mov
gs
sahf
mov
adc
inc
sbb
cmp
ljmp
push
inc
dec
incb
mov
test
pushf
movsl
stc
xchg
popa
stos
sub
lock
test
xchg
test
loope
mov
xchg
xchg
orb
jb
es
or
js
les
push
sbbb
ss
cli
and
arpl
jno
test
xlat
inc
enter
pop
add
xor
xor
xor
add
push
xlat
cmp
adc
push
in
cmp
insl
mov
movsb
inc
test
js
leave
bound
orb
xor
add
xchg
ljmp
daa
jns
shlb
out
inc
cmc
inc
mov
movsb
scas
pop
daa
stos
adc
sub
xchg
push
lret
add
js
ljmp
test
pop
cs
and
and
dec
add
dec
sar
rolb
cmc
add
pushf
test
push
and
add
push
adc
fistl
loope
inc
inc
cmc
dec
xchg
adc
mov
dec
inc
cmp
mov
sbb
lods
gs
call
add
inc
or
loopne,pt
loopne
xchg
dec
add
mov
bound
pop
adc
jnp
pop
mov
aas
jns
push
jle
clc
xchg
push
clc
pop
rorb
xor
cmpsb
int
jl
pop
xor
insb
cmp
or
addr16
and
cmp
mov
pop
sbb
mov
dec
pcmpeqd
dec
xor
mov
xor
shll
loope
cmpsb
mov
les
sbb
repnz
cld
cmp
jp
fs
add
ds
and
and
xor
int
imul
es
ret
movsb
icebp
and
xchg
push
sbb
lahf
cld
shl
inc
or
test
cmpsb
out
adc
xor
insl
ds
dec
add
out
pop
jecxz
bound
gs
mov
add
xchg
sbbb
fimull
hlt
jp
pop
test
inc
add
lea
and
mov
pop
movsb
andb
push
jp
adc
sub
adcb
mov
or
sub
mov
mov
inc
movsl
dec
cmp
int
imul
cmp
mov
push
push
scas
sbb
jnp
into
and
pop
loop
movsl
push
cmpsb
idivl
mov
rep
inc
icebp
sub
jno
ss
mov
iret
mov
inc
jns
adc
jle
fimull
jp
mov
aam
and
rcll
lea
inc
pusha
mov
out
nop
jl
mov
lods
sahf
xchg
repnz
inc
or
push
leave
push
and
into
js
loop
inc
cmp
mull
cmp
in
fadds
sti
pop
push
mov
test
int3
mov
sbb
inc
adc
clc
sbb
fistpl
sbb
adc
adc
lahf
fcompl
lds
test
lret
sbb
add
nop
jp
and
inc
les
lods
pushf
mov
mov
push
int3
mov
cmpsl
ss
xchg
xlat
clc
add
push
aad
xchg
inc
push
das
or
lahf
sub
je
loope
pop
and
push
rcrb
and
jecxz
and
ret
push
push
pop
jns
insb
inc
movsl
lods
test
sbb
mov
movsb
dec
lahf
lods
mov
adc
pusha
call
lods
cmp
mov
jge
inc
sbb
inc
jne
subb
fstpl
pop
scas
into
lock
popf
xchg
jae
inc
sub
push
pop
dec
loopne
ja
andb
mov
jb
stos
cmpsb
cmpsl
icebp
adc
aas
jmp
inc
movsl
sub
jle
jnp
and
test
dec
jge
out
ret
mov
bound
pop
jle
frstor
push
cmpsb
out
in
sarb
lods
test
ret
inc
pushf
test
cwtl
shll
bound
adc
fnstenv
mov
inc
mov
push
push
test
add
repnz
push
addr16
mov
inc
add
jecxz
sti
test
and
test
pop
add
das
in
add
push
mov
mov
add
mov
dec
cwtl
nop
mov
lock
mov
sub
jle
lock
mov
pop
popa
dec
push
les
fimull
fs
push
sbb
xlat
std
mov
jecxz
dec
test
pop
cld
inc
aaa
mov
test
enter
and
movsl
and
xchg
shlb
dec
xchg
mov
and
lods
inc
popa
rolb
out
add
inc
push
add
mov
and
or
scas
daa
mov
add
sbb
addb
push
mov
bound
mov
aaa
enter
mov
pop
fstps
push
daa
mov
cmpb
mov
rol
fmuls
aam
mov
mov
cmp
loopne
data16
xchg
repnz
inc
and
in
pushf
cltd
dec
adc
jge
shl
mov
mov
cmp
mov
push
mov
clc
pop
and
es
sub
pop
mov
push
std
out
pusha
xchg
mov
sahf
andb
xor
popa
outsl
mov
and
push
add
mov
clc
add
add
push
inc
sub
shll
add
cmp
xor
loope
cmp
loopne
jbe
xor
cmpb
imul
or
into
je
repnz
sbb
insb
mov
pop
xor
xor
pop
insl
cmp
fwait
cmp
jno
stos
xchg
add
adc
xchg
andl
loopne
push
rol
sbb
jle
scas
cmpsb
lods
push
mov
mov
sbb
rcrb
mov
stc
inc
or
shll
mov
in
and
popf
inc
hlt
mov
cltd
sbb
call
add
mov
cmpsl
ss
mov
jmp
mov
orb
lret
sub
addb
sti
and
popf
mov
rcrb
inc
xchg
mov
mov
inc
fsubl
and
call
mov
pop
inc
cmp
push
xchg
push
daa
loopne
clc
pushf
cmc
xchg
subb
bound
loop
mov
cmp
jo
mov
lods
test
ret
sbb
cmp
xchg
popf
leave
shrl
inc
sbb
adc
pop
call
sub
popf
adc
add
add
out
hlt
mov
or
outsb
and
es
fnsave
sti
jmp
cmp
pop
mov
cmc
mov
and
mov
xchg
fsubrl
daa
adc
dec
ja
xor
jns
xor
dec
dec
cmpsb
xor
mov
mov
out
js
pop
mov
fmuls
add
jecxz
into
imul
out
dec
jno
inc
mov
push
lods
into
mov
pop
sub
mov
ret
cmpsl
pop
aaa
add
inc
or
mov
pop
mulb
and
sub
add
shlb
mov
test
lahf
mov
test
repz
and
push
push
cmc
mov
cli
movsb
cmp
ds
xrelease
inc
xchg
pop
inc
and
adc
mov
aas
cs
mov
scas
cmpsl
movsl
insl
test
fldl
jecxz
xchg
inc
loope
and
fwait
mov
inc
mov
jp
jbe
sti
je
cmp
mov
movaps
mov
xor
mov
pop
dec
cmp
fistpl
mov
cmc
out
shr
mov
inc
andb
test
add
inc
kmovb
xchg
push
mov
es
insl
repz
fisttpll
add
adc
flds
test
push
mov
ds
in
jns
insl
ret
clc
xchg
stos
lcall
out
sarb
push
loopne
out
out
jo
fistpl
lret
popa
push
xchg
loope
mov
xchg
jno
cmp
add
mov
jo
or
push
andb
sbb
cmp
or
sbb
xor
stos
and
mov
xchg
sub
push
pop
xor
lea
xlat
repnz
xchg
add
bound
repnz
sbb
movsb
fists
jns
xchg
aaa
cmpsb
sbb
xor
and
pop
arpl
mov
inc
movsl
jnp
mov
mov
es
outsb
clc
mov
cwtl
inc
into
popf
mov
sahf
fwait
mov
sub
xchg
cmp
nop/reserved
mov
and
stos
mov
fdivrl
and
mov
mov
pushf
adc
xor
push
cmc
push
xor
pop
jle
and
inc
leave
sahf
mov
lcall
mov
sbb
pop
jno
jne
cmp
jbe
inc
out
nop
cmp
inc
inc
out
cmpsl
xchg
push
cmp
and
or
bound
aaa
movsb
lock
inc
mov
pop
pop
xchg
outsb
idivl
out
pop
mov
andl
punpckldq
emms
mov
push
shr
push
jle
filds
jno
xchg
into
pop
mov
pop
js
lcall
test
jbe
mov
jno
jne
pop
mov
mov
push
je
out
push
imul
fs
mov
sub
and
cmc
add
unpcklps
adc
xchg
pop
dec
push
add
mov
stos
popa
inc
or
out
dec
adc
push
mull
shlb
stos
loopne
icebp
mov
sbb
add
add
xchg
fadds
scas
mov
loopne
xchg
imul
mov
sbb
sub
ficomps
mov
inc
mov
ret
sbb
and
adc
pop
rcrl
dec
add
mov
ficoms
adc
js
hlt
sub
jl
push
inc
mov
push
jge
shrl
xchg
je
lret
jmp
mov
inc
pusha
ret
push
xor
test
ljmp
mov
fneni(8087
adc
push
add
popa
nop
add
mov
orb
stos
pusha
mov
mov
lahf
mov
inc
movsl
xchg
aad
push
stc
add
mov
movsl
mov
stc
mov
popf
movsl
jg
flds
js
imul
test
mov
in
loop
loopne
add
movsb
test
mov
mov
test
jle,pn
xor
cmp
sti
xor
jne
imul
mov
imul
sar
fidivrs
cs
mov
xor
ret
shlb
cwtl
jmp
sub
dec
adc
loop
xchg
mov
js,pn
fidivs
xor
pop
dec
ret
clc
adc
outsb
sub
cli
jp
sahf
sub
or
sub
loop
pop
dec
add
push
inc
inc
adc
sahf
fdivrp
mov
mov
xor
lods
jbe
inc
sub
sti
mov
jno
cli
cwtl
test
xor
pop
pop
pop
dec
imul
stc
jp
test
cs
cmpsl
mov
js
xor
xor
mov
and
addr16
imul
xchg
cs
adc
xacquire
xor
cs
mov
xor
and
mov
xchg
fnsave
out
mov
adc
adc
pop
lret
inc
mov
mov
je
jns
scas
sbb
mov
inc
movsl
outsb
popf
stos
dec
or
stos
cmpsl
or
inc
cmp
xchg
mov
push
mov
mov
mov
dec
jge
sub
test
aas
mov
fdivl
mov
xor
subl
out
lahf
push
in
add
ret
out
or
out
aaa
sbb
xchg
out
aaa
pop
sarb
sbb
and
xchg
addr16
mov
cmpsl
ss
and
and
pop
cwtl
fldenv
jg
lea
loopne
adc
mov
movsl
popa
mov
cmp
pop
mov
inc
cltd
add
sahf
mov
cs
pop
cld
add
mov
cmp
incl
inc
mov
stos
fcomp
and
mov
cli
pop
sbbl
loopne
or
int3
inc
and
not
dec
mov
les
out
ja
mov
xor
aad
fwait
shlb
test
push
cmp
ss
push
lcall
mov
mov
dec
mov
cmp
mov
lods
je
xchg
stc
cmp
xchg
mov
stos
mov
adc
add
sbb
and
aas
sub
outsb
pop
pop
jo
fwait
inc
inc
sbb
add
mov
fdivl
mov
adcl
sti
or
mov
mov
xor
mov
aaa
repnz
arpl
rolb
dec
cmp
xchg
ss
movsb
gs
or
jp
daa
into
scas
lcall
js
mov
pop
jbe
xchg
add
andl
cli
xchg
xchg
out
or
adc
xchg
jmp
imul
xor
mov
popa
xlat
ret
mov
xor
imulb
xor
pop
mov
scas
dec
lock
loop
add
loope
scas
inc
sahf
dec
pop
ss
pop
add
rep
inc
sbb
sahf
imul
cwtl
aaa
movsl
jnp
mov
pop
mov
fs
cli
adc
sbb
cmc
div
ss
sub
cs
cli
dec
js
cld
icebp
jbe
xchg
out
scas
int
xchg
pop
xchg
out
sbb
pop
shrb
arpl
mov
fidivl
adc
jbe
popa
and
jl
lret
push
push
or
push
jno
aam
in
lret
sti
inc
push
aas
adc
shll
fildl
sub
in
mov
ja
pop
mov
enter
push
movsb
out
mov
addr16
loop
xchg
fadds
sbb
add
cli
dec
and
xor
testl
mov
sub
xor
sub
adc
dec
je
pop
sahf
ljmp
inc
cmp
inc
addr16
push
adc
out
out
rcl
pop
adc
andb
scas
test
mov
loopne
test
add
xchg
stos
das
les
mov
push
xchg
leave
ret
fsubr
sbb
jle
repnz
stos
punpcklbw
mov
jne
out
fstl
dec
ss
pop
add
push
xchg
loop
xor
jne
sahf
dec
fisttps
sub
lret
cmpsl
xor
lahf
adc
cmpsl
mov
cli
mov
sbb
scas
and
mov
push
stos
fwait
cwtl
dec
inc
adc
xchg
or
cltd
pcmpgtd
dec
cmp
dec
outsl
sahf
push
pop
lret
inc
jno
movsb
adcl
mov
pop
fcomip
outsb
sbb
sub
pop
daa
mov
mov
mov
loope
pop
push
fisubs
stos
div
mov
add
adc
jbe
mov
pop
popa
ljmp
inc
mov
mov
daa
movsl
or
jge
cmp
inc
sbb
cld
rolb
inc
jl
adc
ja
ljmp
jbe
adc
mov
repz
or
jae
mov
pop
jo
xchg
mov
dec
dec
lds
jnp
mov
pop
or
insl
mov
arpl
dec
pop
stos
push
pop
jg
cmpsb
pushf
mov
add
outsb
int3
dec
mov
adc
or
cmc
mov
push
mov
pop
out
fldenv
cmpb
lcall
mov
jbe
call
mov
dec
shrb
addb
sahf
lock
adcl
ret
lods
jnp
push
rcrb
lret
rcll
mov
adc
in
popf
or
pusha
mov
shl
fisubrl
jp
test
push
adc
fs
xor
cmp
inc
jne
xchg
insb
int3
aaa
popf
sub
mov
push
imulb
out
pop
xorl
add
xchg
pop
fwait
and
pop
bound
daa
dec
pop
inc
mov
mov
push
mov
fnstenv
and
ljmp
xchg
jnp
sbb
subb
leave
push
cmc
mov
jmp
and
mov
xchg
fcmovb
rol
mov
adc
addr16
mov
xor
inc
cmc
xchg
push
testb
aam
inc
inc
xor
jne
sti
gs
jb
frstpm(287
push
sti
lods
ret
mov
adc
inc
push
mov
mov
and
out
sbbb
js
mov
sti
adc
and
inc
loop
in
fistps
adcl
xorb
ret
and
inc
jo
mov
movsb
fidivl
mov
ret
pop
lcall
pop
in
out
gs
mov
dec
push
add
pop
mov
loop
dec
jg
sub
add
inc
mov
mov
rcr
lcall
xchg
pop
sarl
shr
and
rcrl
dec
loope
loope
xchg
in
mov
xor
dec
ss
mov
sbb
and
popf
fcmovnb
rol
cltd
scas
nop
jmp
cltd
adc
mov
loopne
dec
pushf
mov
aaa
and
inc
xlat
addr16
sarl
dec
inc
mov
pop
outsl
dec
je
movsl
adc
andb
pop
fbstp
xor
out
sbb
xchg
add
jb
or
loop
push
js,pt
cmp
push
pop
js
insl
lock
mov
push
pop
rclb
rorl
pushf
pop
mov
sarb
jmp
mov
jbe
movsb
sub
in
dec
mov
cmp
sbb
sti
mov
push
mov
sahf
fildll
pop
icebp
adc
mov
and
std
mov
mov
movsb
mov
aas
aaa
pop
sub
imul
aam
shlb
std
and
push
add
add
movsb
push
cltd
or
call
popf
mov
sub
inc
lea
imul
fnstenv
mov
jg
mov
mov
out
xor
shll
jle
dec
lock
out
nop
outsl
mov
lods
mov
pop
mov
jo
cmp
inc
mov
inc
sbb
mov
gs
in
push
notb
pop
lcall
divb
cmp
dec
sarb
fistl
cmp
sbb
in
loopne
jne
fistps
daa
scas
mov
push
fmull
sbb
xor
add
push
sbb
movsb
iret
inc
in
in
jmp
in
rolb
push
or
pop
fiaddl
mov
push
inc
cmp
fdivrs
fimuls
dec
je
mov
rcr
mov
jg
xor
call
xor
push
and
xchg
stc
dec
das
out
jle
mov
push
inc
lea
rcrb
xor
int3
pop
sbb
sti
icebp
cmpl
fdivrl
hlt
aam
out
sub
iret
stc
stos
mov
movsl
pushf
jns
push
mov
test
test
cmp
pop
mov
popf
popa
frstor
imull
mov
pop
sub
stos
std
jb
xor
sahf
mov
movsl
jg
fsts
js
sahf
hlt
hlt
hlt
sub
lock
in
or
xchg
adcb
lods
or
xchg
shlb
push
popa
mov
faddp
popf
popf
push
sbb
pop
ficomps
cmp
push
pusha
push
fisttpll
xor
movsl
mulps
inc
push
pop
fldt
pop
xchg
pusha
inc
sub
sbbl
fcoml
sbb
mov
in
adc
mov
dec
cmp
jge
cmp
aaa
sarb
xchg
cmp
movsb
add
and
xchg
ds
rcr
int
adc
sbb
pop
mov
cmp
ret
inc
rorl
mov
lret
std
cmp
cmp
mov
push
fdivrs
inc
mul
inc
ret
loopne
out
pop
push
loope
pop
sub
stos
dec
sar
aad
cmp
cmp
sbb
stc
pop
xor
testb
rclb
popf
sbb
arpl
popf
cwtl
mov
imul
mov
mov
stos
fnstenv
or
loop
adcl
add
mov
js
cltd
js
test
jno
sub
mov
dec
jmp
jle
arpl
insl
lcall
dec
and
and
sbb
sub
insb
sub
sti
cmpsl
fldenv
jmp
and
jl
jle
inc
add
fadd
ror
test
cwtl
in
jbe
sbb
jle
adc
jb
repz
mov
cmpsl
adc
inc
negb
sbb
sbb
jmp
sbb
ret
mov
fwait
loop
enter
push
ret
out
lahf
ds
popa
pop
test
mov
jns
outsb
mov
mov
aad
jle
add
andb
inc
loope
sti
cmp
add
jae
in
bound
aaa
inc
shlb
mov
repz
test
inc
out
mov
mov
bound
and
add
mov
sbb
mov
sbb
into
mov
push
sub
adcb
pop
daa
pop
cld
jmp
mov
cli
test
fcomps
xor
lret
jno
jnp
xlat
inc
sbb
lcall
and
xlat
mov
out
mov
out
push
mov
or
arpl
xchg
sbb
push
inc
or
jb
sub
nop
or
dec
mov
pop
dec
push
subb
mov
or
cmp
push
jg
scas
cld
dec
loopne
std
inc
xchg
sbbb
es
mov
mov
add
shl
fildll
jmp
jae
mov
loope
cmpsb
mov
testb
push
jp
test
andb
cmp
imul
into
xor
lret
push
scas
into
mov
mov
xchg
xchg
stc
pop
ret
pop
pop
mov
push
scas
xor
jns
in
jne
and
inc
jle
jp
inc
addb
inc
pop
add
jecxz
and
inc
mul
fstpt
rcrb
cmp
and
adc
mov
lret
sbb
jl
xchg
gs
mov
fcompl
mov
sarl
icebp
in
je
sbb
fidivl
xchg
xor
mov
arpl
roll
mov
inc
sbb
test
mov
sub
je
movsl
xor
shlb
jbe
cmp
loope
cmp
fs
in
mov
mov
and
mov
stos
pop
loopne
jl
sbb
pop
inc
fs
push
pop
and
add
dec
popf
pop
mov
xor
shrb
fldcw
adc
test
scas
sub
jmp
sub
sub
sbbb
push
dec
add
lret
sti
dec
mov
movsl
cmp
daa
shlb
xor
inc
roll
adc
sub
js
inc
dec
stos
mov
xchg
pop
xchg
jmp
lods
push
cmpsb
sarb
test
cli
stos
add
lea
fdivrl
mull
inc
mov
sbb
loop
in
mov
mov
in
ja
cwtl
xor
inc
mov
inc
rcl
test
sarb
inc
cmove
pop
pop
jle
sbb
push
inc
les
and
mov
sub
into
jno
pusha
stos
popa
jo
xchg
gs
sub
add
mov
push
and
loop
adc
cmpl
inc
fisubs
xchg
inc
cmpsl
test
inc
inc
movsl
in
imul
pop
addr16
mov
xchg
cmpsl
mov
loopne
enter
gs
xor
stos
and
cltd
rorl
std
andb
arpl
pop
cmpsl
inc
pushf
adc
sbb
inc
cmpsl
out
sbb
push
gs
testb
fdivp
bound
jnp
pop
cmpsl
pop
in
mov
push
add
dec
outsb
mov
push
imul
subb
int3
jb
mov
cmpsb
cmp
sub
fwait
xchg
inc
inc
jle
inc
bound
pop
roll
jnp
cld
sbb
adc
inc
popa
pop
pushf
mov
inc
sarl
push
pop
adc
push
orl
mov
and
adcb
cmp
and
push
dec
lods
imul
call
push
inc
mov
out
icebp
mov
jmp
xor
outsl
cmp
popf
adc
jae
pushf
mov
pop
cmpsb
cmp
jns
sub
or
xchg
shll
sub
mov
adc
sbb
imulb
and
xchg
adc
xchg
mov
btrl
dec
push
js
fidivl
add
jno
mov
and
out
mov
push
push
mov
pop
mov
add
lock
mov
in
lea
rcrb
std
cwtl
sti
mov
outsl
enter
push
mov
add
cmp
into
mov
negb
js
sub
and
cli
and
mov
push
in
push
mov
cwtl
jmp
mov
mov
mov
out
cs
imul
pop
popa
mov
mov
xchg
scas
lods
mov
out
xchg
jns
push
xchg
pop
aad
inc
sbb
pusha
popl
pop
sub
out
pop
and
inc
mov
mov
pop
das
stos
cmp
adc
pop
mov
mov
lcall
mov
inc
fmull
pop
sbb
cwtl
add
lods
imul
or
inc
aas
jb
cmp
xchg
inc
cltd
xor
mov
sbb
insl
pop
scas
jb
inc
mov
clc
cmpsb
and
dec
movsl
loop
addl
mov
rcll
enter
call
mov
dec
inc
mov
daa
pop
je
mov
pop
stos
jp
and
cmp
inc
aam
cmp
fwait
pop
push
mulb
out
popf
sbb
std
jno
inc
outsb
mov
movsl
mov
dec
pop
loop
inc
pop
mov
fwait
sub
movsb
dec
push
mov
scas
pushf
loopne
xchg
and
in
jge
cld
add
cmp
mov
aaa
sub
xchg
dec
filds
sbb
ja
dec
loopne
popa
push
test
jecxz
nop
xor
cs
pop
push
dec
fisubrl
xor
xchg
jae
mov
mov
sub
call
mov
jg
jo
bound
push
ret
pop
cmp
loop
test
shr
out
clc
push
mov
divb
jg
and
jle
adcb
pushf
mov
dec
aaa
sbb
pusha
pop
cmp
loopne
adc
test
sahf
popa
inc
popa
imul
mov
icebp
mov
xchg
sbb
dec
push
adcl
out
xor
xorb
xor
mov
stos
add
stc
lds
mov
push
repnz
pop
popf
mov
pop
and
mov
call
xor
fidivl
inc
fcompl
sbb
nop
jecxz
das
sbb
sub
fisttps
cmpsl
cmpsb
cltd
popa
xchg
je
lods
mov
xchg
adc
mov
jl
push
scas
or
xor
adc
std
pop
and
in
outsb
mov
xor
adc
andl
or
xor
push
pop
sub
add
sub
loope
and
jno
xchg
push
adcl
sahf
scas
popa
add
sbb
jp
pop
sub
pop
mov
stc
movsb
xor
jne
xor
mov
jno
xor
push
xor
sub
clc
jle
jmp
sbb
push
jae
push
jle
gs
call
push
xchg
mov
xor
mov
xchg
mov
cmp
std
mov
mov
mov
inc
and
mov
push
xchg
sbb
data16
out
add
cmp
jno
hlt
mov
push
jle
mov
pop
xlat
aas
cmp
movsb
mov
dec
pop
rcl
or
and
add
sub
mov
movsl
scas
pop
and
in
stos
js
push
push
and
fsub
lcall
inc
bound
icebp
das
test
pop
jae
mov
xor
clc
mov
inc
outsl
sbb
push
cmp
inc
or
stos
lret
adc
gs
in
sub
xchg
push
mov
pop
sbb
cli
inc
cltd
add
dec
fs
sub
adc
pusha
bound
daa
stos
adc
and
sub
add
fwait
mov
push
xchg
mov
loop
cmp
adc
mov
mov
ret
jle
xor
imul
sub
mov
cmpsl
pop
lahf
movsb
mov
insl
push
sub
cmpsb
jge
mov
inc
cmc
fdivs
mov
and
inc
inc
mov
out
addb
stc
dec
ret
inc
sub
pop
add
cmp
mov
xor
out
mov
enter
jb
lods
cmc
enter
sahf
mov
test
sbb
cld
outsl
fdivrs
adc
jl
pop
xchg
xor
jbe
jns
repnz
jle
jge
test
fcmovnbe
push
negl
and
jg
mov
xchg
popf
or
cs
hlt
cmp
imul
std
test
push
in
stos
jnp
cmpsl
aam
push
jmp
pop
and
lea
mov
mov
xorb
ja
sub
fwait
clc
add
add
imull
in
mov
rclb
in
pop
inc
imul
mov
add
push
xchg
in
inc
jecxz
sbb
ret
xchg
jbe
in
mov
mov
call
in
mov
pop
clc
push
xchg
cmp
daa
pop
lods
push
scas
pushf
fs
out
mov
mov
inc
mov
lods
mov
rcr
shl
out
out
add
mov
adc
xor
enter
mov
pop
or
nop
int3
mov
movsb
adc
es
subl
lods
shll
and
inc
push
sbb
mov
shl
mov
lock
enter
xchg
fisubs
mov
aaa
enter
loopne
push
pop
mov
sbb
xchg
jl
test
jnp
add
mov
repnz
mov
bound
daa
and
arpl
neg
sahf
xchg
push
daa
mov
or
cmpsb
push
rcrl
fistpl
popf
cmp
sub
xchg
fs
adcl
cmp
shl
dec
add
jns
sbb
push
xchg
cmc
rol
xor
pop
pop
fistpll
push
xchg
cmp
or
inc
insl
mov
pop
and
push
lret
adc
pop
pusha
adc
push
movsb
fidivs
outsl
cld
adc
or
lret
and
mov
push
push
or
xchg
test
cltd
lds
sahf
ss
leave
inc
sarl
push
repnz
lahf
dec
scas
jecxz
mov
push
les
adc
insb
mov
mov
cmpsb
aaa
xchg
sbb
adc
mov
cmp
les
jp
lock
ret
push
xor
dec
mulb
fwait
push
sbb
out
jmp
mull
jno
inc
je
loop
faddp
xor
inc
in
loopne
cmp
xchg
in
mov
pop
fs
jns
mov
test
fwait
bound
mov
pop
push
pusha
cmpsl
inc
add
fistpl
rcrb
jg
test
test
loopne
mov
sahf
mov
cmp
mov
js
inc
mov
aam
les
out
insb
dec
adc
stc
in
pop
fildl
mov
test
jne
ss
test
adc
xchg
loopne
call
lahf
and
inc
mull
pop
cmpsb
fisttpll
pop
mov
jp
cmp
add
stc
popa
clc
bound
cmpsl
adc
mov
push
pop
push
loope
dec
mov
inc
pop
fwait
or
jne
sub
xchg
xchg
sub
pop
inc
cmpsl
je
stc
sar
xor
mov
test
xor
loop
or
test
push
nop
mov
aad
inc
mov
sub
push
inc
movsl
cmpsl
fimull
stos
outsl
inc
mov
pop
and
mov
xlat
push
sbbb
mov
dec
fadd
xchg
popf
mov
pop
inc
lret
mov
icebp
movsl
loop
lods
fadd
or
push
add
jb
mov
cmpsl
cmp
adc
dec
mulb
mov
mov
or
outsl
cmp
leave
lcall
mov
jmp
pop
or
pop
test
pushf
cmpsl
and
fs
inc
aaa
and
add
jno
inc
pop
inc
popf
bound
leave
mov
xchg
icebp
jo
add
in
movsl
jo
fistl
loopne
fwait
jl
cmp
jle
pop
dec
stos
cmp
mov
fstp
insb
out
push
test
jp
mov
xchg
mov
lods
adc
adc
mov
ret
loope
mov
mov
mov
jno
or
ret
test
pop
mov
out
cld
adc
ret
pop
jno
xor
dec
adc
clc
aas
mov
ljmp
loop
push
clc
sbb
push
sbb
rorb
scas
inc
bound
adc
movsl
movq
out
into
mov
jns
in
adc
xor
push
pop
mov
int3
mov
icebp
sub
aas
stos
pushf
ds
push
inc
ret
push
pusha
popf
sbb
movsb
mov
bound
sub
lcall
andnps
and
push
es
push
icebp
sub
inc
mov
inc
pop
sbb
and
leave
ret
testl
pop
loopne
flds
push
scas
popf
dec
push
cmpb
int3
mov
push
xorl
ret
jp
stc
jne
push
out
pushf
xlat
pop
cmp
fnstsw
out
jl
add
aas
mov
mov
js
dec
jle
inc
mov
push
add
cltd
add
jg
stc
push
test
jle
inc
arpl
cmp
pop
mov
sti
negb
sub
and
mov
jecxz
test
outsl
jbe
inc
and
inc
in
mov
xor
add
sbbl
xor
inc
gs
mov
xor
in
or
loope
pop
sub
roll
adc
fs
lods
xchg
jmp
insb
test
push
lcall
shll
pop
andl
loop
shl
andb
cmc
xor
mov
js
mov
add
lds
jb
addb
jge
pop
pop
rolb
subl
test
cwtl
and
fsubr
dec
lock
test
je
lahf
in
mov
cmp
addl
lea
cwtl
mov
repnz
cmp
test
stos
mov
jno
adc
inc
and
mov
cmp
pop
pop
mov
inc
push
sub
aad
or
icebp
mov
or
jne
negb
cwtl
add
je
adc
leave
faddl
cmpsl
aad
rcl
cmp
leave
repz
cmp
pusha
sub
ret
movsl
pop
orb
xor
adc
inc
inc
cmc
jb
mov
push
lcall
cmpsl
mov
test
inc
and
add
jmp
adc
mov
scas
dec
das
xchg
push
mov
xor
push
inc
lods
shll
and
cmp
jo
xchg
mov
sub
sub
in
or
jp
add
test
mov
adcb
xlat
dec
jno
or
sarb
jbe
movsb
bound
jl
imulb
or
jnp
dec
andl
test
bound
fwait
mov
sahf
sti
movsb
sahf
mov
arpl
inc
or
push
mov
mov
dec
mov
jecxz
mov
mov
movsl
es
dec
lds
test
cltd
mov
mov
mov
movsl
push
add
insl
xlat
fwait
push
inc
sbb
push
push
mulb
add
pop
xchg
ds
fwait
and
aad
movsl
sbb
xchg
test
loope
and
and
inc
mov
std
push
mov
mov
cwtl
cmpsl
xor
aas
sbb
mov
ret
mov
mull
dec
sti
sub
jno
in
xor
sbbb
pop
jl
xor
fwait
mov
lea
sbb
fldenv
dec
fwait
and
pusha
xchg
outsl
fiadds
xchg
das
add
xor
cmpsb
sarl
mov
data16
fnstsw
aas
lret
test
cmp
clc
pusha
xchg
xor
mov
test
jge
lods
fistpll
loope
movsb
das
cltd
mov
jle
mov
jmp
inc
cwtl
sub
jno
xchg
jle
sarl
sbb
mov
sub
mov
incl
mov
test
xorb
mov
in
pop
xorl
fwait
inc
lcall
xchg
push
icebp
inc
movsl
add
mov
xchg
inc
push
or
or
shll
sub
xorl
inc
mov
push
pop
pusha
rorl
mov
mov
mov
and
inc
add
scas
mov
jmp
lea
in
mov
jo
in
mov
lahf
sbb
adcl
cmp
dec
lods
fwait
push
adc
outsl
stos
popf
roll
faddp
movsb
aaa
xchg
mulb
sti
add
rcrb
and
xchg
cs
mov
loope
inc
lahf
push
notb
and
xchg
mov
inc
int3
push
int3
pop
arpl
add
xorb
xor
mov
in
sub
and
dec
sahf
jmp
in
test
test
out
add
mov
sbb
popa
pop
pop
scas
mov
mov
aam
xchg
dec
add
outsl
es
insl
push
jge
jae
inc
add
into
fwait
test
into
jnp
xor
addl
cmpsl
pop
jns
mov
mov
loope
je
fdivs
pop
nop
das
dec
lods
movsl
dec
pushf
iret
inc
shlb
cwtl
xchg
mov
movsl
inc
cs
and
fsubrs
fisubrs
test
push
add
xchg
in
sub
xor
test
and
fcoms
mov
push
fwait
cmp
in
popa
insl
cmpsl
jnp
clc
and
loope
rcl
shll
test
dec
sahf
in
cmp
pop
bound
cltd
inc
mov
mov
sbb
jb
inc
popa
mov
movsl
sub
inc
scas
fidivs
cmpsl
rol
or
jae
jae
mov
pop
add
es
loopne
inc
movsl
sub
incb
lea
hlt
and
inc
or
je
std
xlat
cli
jmp
add
stc
lret
rolb
test
aam
push
pop
cmp
hlt
inc
inc
movsb
outsl
ss
and
jb
cwtl
daa
xor
div
push
and
enter
int3
lcall
arpl
cmp
or
sbb
dec
jmp
aas
and
lods
dec
lock
pop
es
pop
mov
addr16
dec
pushw
daa
xchg
in
lret
es
repz
jl
loopne
lahf
idiv
xor
add
inc
mov
addl
sub
test
sbb
lea
cmpsb
fs
cmp
roll
mov
pop
pop
aam
xor
shrl
lods
loopne
dec
mov
and
imul
add
rcll
cltd
dec
lods
inc
jp
pop
cmpsl
movsl
and
loop
into
xchg
dec
scas
or
jns
inc
ret
mov
andb
imul
lea
inc
adc
xchg
mov
aaa
popf
cs
push
adc
inc
jb
mov
out
mov
and
jge
pop
cmp
aaa
push
cli
movsl
out
mov
mov
iret
pop
int3
stos
dec
and
xchg
dec
ret
stc
and
stos
loop
mov
cli
arpl
faddl
mov
ljmp
fcomip
shrl
pop
jg
and
mov
mov
xchg
adc
dec
cli
add
fisubrl
pop
lods
scas
jnp
ja
clc
jg
arpl
push
mov
inc
mov
adc
stos
adcb
lock
fbld
popf
adcb
cmp
xor
and
fidivl
mov
in
out
in
mov
mov
jp
jb
inc
xabort
andl
sbb
xor
notb
popa
push
sbb
lods
scas
mov
pop
xor
aaa
xor
adc
mov
adc
jmp
push
loopne
leave
out
das
ds
push
sub
mov
mov
push
shll
mov
push
fs
movsb
sahf
ljmp
arpl
mov
shrb
sub
cmovb
clc
movsl
and
jecxz
fisttpl
loop
aas
pcmpeqw
inc
mov
pushf
shlb
into
stos
scas
mov
sbb
fidivl
aas
jbe
call
test
mov
inc
shll
or
loope
stc
mov
shlb
add
xlat
lcall
aaa
lahf
push
cwtl
mov
out
lods
rolb
dec
dec
mov
stos
clc
iret
lcall
pop
cs
andl
add
flds
mov
sub
adcb
cmpsl
jle
stos
ja
add
adc
cltd
push
lret
pop
mov
addb
aam
cmc
jb
jecxz
mov
mov
out
in
jbe
dec
mov
push
dec
mov
lock
loop
pop
iret
call
mov
inc
lcall
mov
pop
xorb
divl
into
dec
sbb
adc
jle
imul
cwtl
mov
daa
rcl
sbb
imul
pop
fisubs
andl
push
bound
xor
push
adc
mov
xchg
addr16
mov
mov
adc
pop
popa
lret
pop
ljmp
roll
out
cmp
stos
mov
sbbl
inc
pop
ljmp
stos
sarl
adc
push
movsb
add
stc
movl
jae
rolb
test
mov
cmp
leave
inc
mov
mov
dec
mov
fs
stos
mov
insb
sbb
add
inc
mov
cli
jb
add
adc
dec
push
lret
lret
ja
je
jns
pop
addr16
ret
inc
clc
xor
dec
add
lods
inc
stc
dec
cmp
sbbl
inc
xor
cmp
xor
fs
mov
test
data16
pop
shlb
inc
aad
stc
fs
jle
mov
xor
roll
add
xchg
mov
test
adc
fadds
push
lahf
sbb
lods
sbb
inc
aam
clc
sub
gs
fwait
inc
fidivrs
jae
pop
out
mov
dec
add
mov
mov
mov
hlt
jb
xor
mov
cmpl
nop
lods
or
rol
popa
loop
loop
testl
mov
jb
aaa
jl
sub
aad
aam
sar
cmpb
andl
cmp
cmpsl
inc
pushf
lock
loopne
idivb
arpl
addb
hlt
cmp
rolb
ss
adc
jp
jno
lods
test
pop
adc
out
cmpsl
xchg
sbb
stc
popa
jle
pop
sahf
mov
jecxz
sbb
call
stos
mov
fsubr
sti
inc
pop
mov
test
mov
add
and
push
sti
mov
jecxz
lods
es
mov
stos
dec
mov
adc
je
cmp
pop
mov
scas
inc
xorl
add
add
mov
adc
popa
mov
inc
push
push
push
add
inc
lahf
testl
dec
mov
adc
xor
stc
mov
add
push
sub
or
arpl
sahf
mov
cli
je
adc
cmc
mov
add
sub
aas
out
mov
inc
mov
jle
adc
movsl
popf
js
js
add
jo
cltd
out
idivb
stos
jno
test
pop
jnp
push
call
orb
cmpsl
dec
shrl
repz
pusha
xor
mov
daa
pop
mov
test
and
icebp
dec
inc
shll
test
popa
fsts
cli
jns
int
leave
adc
mov
ds
aad
jl
jle
cmp
mov
test
sub
inc
mov
mov
ret
push
pop
xor
call
rolb
sahf
es
cli
test
sbb
inc
pop
jg
mov
mov
mov
mov
mov
enter
test
or
jne
push
xor
stos
ja
or
mov
loope
ficomps
pop
mov
sti
int
out
sbb
loope
cmpsl
xor
adc
lods
dec
xchg
mov
daa
loopne
mov
mov
push
inc
mov
dec
lret
mov
push
fs
push
je
clc
push
adc
stos
aas
xor
pop
jl
inc
sub
test
mov
dec
inc
push
cltd
and
jp
ds
clc
or
cmp
out
push
sbbl
push
mov
clc
inc
popf
mov
add
notb
jne
mov
mov
sbb
mov
and
pop
dec
adc
pop
adc
jl
xor
sbb
push
and
ret
inc
cld
mov
mov
pushf
push
and
jb
or
xchg
xor
das
bound
and
sub
xchg
mov
je
inc
cmp
push
sbb
dec
bound
push
mov
pop
sbbb
ss
je
pusha
icebp
push
scas
sub
mov
mov
imull
adc
ds
sub
pop
mov
jo
mov
ds
xchg
adc
cmp
mov
mov
push
outsb
jecxz
sbb
ss
jl
sub
cld
std
pop
xchg
dec
clc
cmp
sub
stc
sbb
cmpl
add
lahf
scas
aaa
clc
andl
sarb
mov
mov
xchg
mov
push
adc
movsb
adc
ds
push
roll
mov
xorb
sub
sbb
xchg
mov
into
add
xchg
mov
dec
xor
jg
mov
jg
jbe
dec
and
divl
lds
inc
ficoms
aas
into
mov
push
dec
add
xor
dec
js
imul
ljmp
rcrb
xor
mov
jg
test
call
adc
sti
xchg
mov
out
sbb
sub
pop
jbe
daa
mov
and
pop
jo
jp
gs
insl
xlat
jbe
mov
inc
jo
sbb
ret
inc
iret
xchg
mov
sbbl
add
rorl
hlt
aas
cmp
xchg
sti
lods
pop
and
leave
push
cli
sub
xor
push
dec
stc
rolb
jecxz
std
pop
test
ret
xchg
push
push
sti
dec
push
mov
hlt
mov
mov
out
idiv
xor
out
xor
testb
mov
pop
lret
sahf
into
xchg
enter
in
mov
or
jns
mov
dec
subl
js
stc
inc
xchg
loopne
aaa
sbb
loopne
sub
movsl
fidivrl
pop
sbb
push
xor
sbb
push
cmpsl
pop
cmpsb
mov
push
adc
xor
pop
pop
and
into
push
add
pop
jg
adc
push
mov
mov
xchg
and
sub
inc
les
insl
movsb
aam
fists
mov
mov
dec
stos
ficomps
jmp
mov
sbbb
add
es
xor
mov
test
inc
gs
and
insb
and
aad
push
jns
clc
xchg
aas
inc
jle
bound
loop
cmpsl
and
loopne
mov
mov
cli
insb
mov
add
cmpsb
pop
iret
jae
xchg
test
mov
int3
aad
stc
cmc
xchg
jp
movl
and
inc
push
popa
sub
sbb
cltd
inc
pusha
sahf
negl
inc
xor
clc
outsl
pushf
cmp
cmpsl
cmp
rolb
dec
mov
out
push
stos
jg
stos
push
test
cmp
stos
ljmp
mov
mov
repz
iret
pop
subb
jno
and
orl
cmp
pop
mov
cmp
mov
or
cmp
movsl
push
divl
lahf
cli
inc
outsb
and
jne
and
xchg
popl
mov
daa
mov
adc
cmp
iret
mov
push
jecxz
mov
call
inc
jno
jmp
in
pop
adc
popa
or
sub
lcall
rcr
mov
inc
loopne
dec
push
pop
inc
jno
aas
xor
cmp
cmp
ret
pop
mov
cltd
lahf
add
push
ret
sbb
pop
out
addb
pop
ljmp
adc
mov
adc
mov
cmp
xchg
jg
push
and
xchg
and
loope
cmp
loop
pusha
jno
in
loop
rol
push
loopne
mov
pushf
and
popf
pop
cmpsl
sub
test
ret
sub
in
in
cltd
pop
xchg
push
xor
mov
stos
cmp
jb
or
cwtd
sbb
and
lods
mov
movsb
pop
jmp
jecxz
in
xlat
xchg
les
test
pop
mov
mov
fnstcw
inc
sbb
pop
jb
imul
lcall
jmp
or
adc
sub
jb
ror
je
sbb
lea
imul
lret
jl
or
popa
shrb
sub
mov
movsb
rclb
ret
sub
shll
cmpsl
out
rcrl
les
jle
out
movsb
cmp
sbb
push
arpl
nop
mov
lcall
movl
dec
adc
ret
cltd
xchg
xchg
push
negb
push
lock
pop
inc
ljmp
xor
cmp
scas
push
cmp
stos
inc
mov
push
cmp
in
ffree
not
and
mov
sti
sarb
xor
adc
adc
aas
ja
jmp
rcrl
movsl
pop
add
jp
enter
cld
push
cmpsb
les
sbb
cmovb
movsb
out
int3
cmc
and
adc
rcrl
xchg
jbe
cld
cld
in
bound
mov
dec
pop
add
bound
inc
in
iret
nop
mov
in
lcall
icebp
fisubl
jmp
into
add
jno
ljmp
jmp
cmp
and
pop
imul
mov
aas
pop
test
sub
in
es
lods
jnp
pop
incl
pusha
ds
dec
pushl
popa
inc
imul
fldcw
inc
fcoml
lret
xor
lahf
inc
cmp
pop
lea
adc
enter
mov
add
cwtl
xchg
repz
shrb
push
pop
jle
popa
push
push
int
and
and
cltd
sbb
push
push
xchg
cmp
mov
mov
jecxz
aas
aam
sarl
mov
movsb
mov
mov
mov
inc
stc
loopne
xor
sbb
shll
mov
cmp
cmpb
out
xorl
push
mov
ficoms
pop
jnp
ds
fsubr
mov
mov
mov
mov
subb
mov
imul
inc
push
xor
aaa
les
sbb
fucomi
call
ljmp
aas
loope
add
inc
push
jae
outsb
fiaddl
out
xor
pop
test
xchg
jns
mov
aaa
mov
xor
or
mov
and
mov
fstp
mov
mov
call
mov
ret
adc
cmp
mov
mov
push
and
pushf
dec
adc
adc
es
and
cli
sti
gs
push
int3
mov
fsubrs
fdivr
cwtl
or
jp
js
icebp
test
cmp
fcoml
scas
ja
mov
inc
hlt
inc
adc
pop
mov
add
leave
and
sub
xor
jl
rorb
sbb
add
adc
sbb
test
rclb
lock
push
stos
dec
adc
shll
test
sti
movsl
dec
sub
aas
sar
xlat
and
lret
in
pop
cmp
mov
or
cmpsb
sti
std
mov
mov
sub
lock
sbb
shrb
mov
mov
push
sub
fldenv
ret
out
adc
pop
mov
fcoms
stc
push
xchg
out
sbb
cmpsl
push
add
std
pop
loope
add
xchg
jne
loop
dec
mov
je
cs
inc
mov
add
and
movsl
subb
adc
cmp
test
addr16
add
dec
test
cmpsl
movsl
ljmp
push
or
and
std
sbb
movsl
mov
inc
mov
lret
add
pop
test
lcall
cmpb
inc
inc
stos
jo
lahf
mulb
scas
push
mov
adc
out
push
out
sbb
sti
inc
fnstcw
jbe
andl
loopne
mov
sti
cmp
inc
inc
lock
shl
and
jb
inc
jp
or
mov
js
cmp
inc
fstp
or
out
mov
jp
mov
cmp
mov
sti
mov
lahf
mov
pop
jns
sti
or
idivl
pusha
rclb
roll
jle
cmp
mov
jecxz
scas
sbb
pop
jmp
sbb
xor
movsl
jmp
jle
sbb
or
mov
inc
aad
fs
cld
sub
jb
into
iret
bound
pop
aad
inc
mov
pop
inc
insl
inc
push
jmp
and
inc
in
add
lods
push
mov
push
test
and
xor
sarl
loope
lahf
stc
filds
jne
adc
jle
sbb
push
jle
bound
jp
jle
sbb
mov
test
daa
mov
shll
call
movsl
sbb
jnp
cmp
add
mov
lcall
sub
fmuls
cmp
push
nop
push
fsubs
into
mov
int
lret
fwait
imul
xchg
cltd
ss
jp
xchg
jnp
clc
pop
mov
inc
pop
and
shlb
jnp
mov
ret
sub
adc
jne
cmc
jge
mov
sahf
add
mov
adc
and
ss
pusha
inc
cmc
arpl
inc
inc
mov
sbb
jo
mov
lcall
cmp
xor
ret
shrl
mov
mov
sbb
sbbb
cmp
jge
test
inc
jp
jno
mov
aas
inc
or
fs
sbb
sbb
mull
js
cmp
and
mov
popa
stos
clc
inc
pop
test
add
into
loop
add
and
mov
es
test
inc
aaa
out
mov
jge
jno
xor
mov
inc
lcall
mov
scas
add
aam
dec
pop
adc
loopne
shll
add
in
repz
xor
flds
adcl
cltd
cwtl
jmp
adc
cmp
inc
cmp
dec
stos
cmp
xchg
push
bound
mov
loope
mov
jg
xor
bnd
ret
mov
inc
add
mulb
push
stos
insb
xchg
sub
gs
and
fsubl
and
push
out
mov
cmp
loop
test
or
clc
fadds
pop
xchg
loope
pusha
mov
pop
shll
xchg
test
imul
dec
insl
mov
inc
cmp
mov
sbb
add
jne
add
mov
mov
std
and
outsl
and
push
daa
mov
lcall
or
sbb
mov
adc
mov
mov
aad
test
jno
cld
cmpsb
shll
sub
and
mov
frstor
dec
adc
xor
mov
mov
inc
jns
xor
xor
push
inc
mov
aaa
push
jp
cmpsl
jnp
jnp
or
pop
dec
dec
sbb
test
adc
rcll
dec
std
or
fmul
std
call
lea
insb
mov
push
sub
sub
fsubs
jne
mov
addb
xchg
loopne
jle
inc
cmpb
repz
add
mov
mov
or
cmpsb
jnp
daa
mov
jmp
int3
test
jl
inc
test
pusha
jmp
mov
sbb
ret
sub
xor
pop
or
adc
and
sbb
ficompl
and
sub
mov
sbb
add
mov
add
mov
adc
outsl
cmp
and
mov
jbe
mov
arpl
roll
jnp
push
adc
xor
fdivs
cwtl
adc
popa
lods
inc
xor
push
mov
pop
rclb
xchg
fwait
loopne
loop
movsb
lret
xchg
sub
mov
push
loopne
dec
data16
push
incb
xchg
out
pop
mov
mov
stos
jmp
jge
fs
jnp
iret
mov
rcrl
mov
jle
add
adc
dec
jmp
sub
dec
cmpsb
mov
fbld
mov
cmp
inc
lahf
push
inc
and
fsub
pop
mov
inc
fsubl
call
fisubl
and
test
mov
cli
xchg
in
sub
test
inc
cli
jno
rclb
mov
xchg
pop
fs
call
cli
sahf
pop
jnp
clc
push
inc
dec
out
les
add
rcrl
mov
in
cmp
lods
aas
and
sub
test
pusha
inc
dec
xchg
inc
adc
out
mov
add
cwtl
add
aam
fsubrs
dec
sbb
fldl
jo
std
and
pop
xchg
or
jno
je
popf
push
pop
pop
xor
push
leave
sbb
lret
push
enter
inc
js
or
imulb
cmpsl
jmp
mov
sti
dec
pop
fbld
jnp
jne
jp
xchg
clc
movsb
aam
in
sub
pop
mov
sub
fwait
outsl
jmp
pop
lret
push
inc
pop
pop
jmp
mov
out
adc
imul
xchg
adc
mov
cli
mov
mov
je
and
sub
xlat
cmc
cmpsb
and
add
push
inc
popa
ds
mov
jp
cmpsl
lds
pop
out
adc
fwait
mov
jl
sub
mov
mov
ss
outsl
xchg
xlat
cmp
jle
rclb
sub
mov
pop
fsubrs
and
aas
pop
stos
ficomps
cmp
xor
sub
cmpsb
insb
in
push
pop
mov
pop
pushf
icebp
inc
mov
fwait
mov
lock
imul
outsb
sarb
push
std
xlat
inc
push
xchg
fbld
test
mov
mov
bound
sar
jl
das
mov
sarb
mov
cmp
mov
loope
mov
jnp
mov
lcall
and
push
mov
vaddps
mov
jb
push
ja
cmp
xchg
push
xor
push
imul
loopne
inc
int
pusha
jno
mov
adc
jg
fcmovne
add
push
ret
mov
adc
leave
cmp
xchg
sbb
shlb
loopne
or
mov
out
add
lcall
sbb
and
mov
mov
out
adcb
test
lea
inc
ds
dec
push
lret
clc
sti
jb
fisttpl
inc
cmc
stos
rcll
adc
mov
push
push
cmc
movsl
pminub
in
push
mov
icebp
adc
cmp
sub
lods
xor
push
divb
sbb
in
mov
add
ss
test
mov
cmp
cld
lock
adcb
out
sbb
jmp
push
sub
xor
add
jo
mov
inc
std
mov
sahf
fwait
push
and
cmp
xchg
mov
das
inc
xchg
inc
pop
clc
mov
jb
in
and
popa
push
test
andb
popf
in
ret
adc
push
and
imul
inc
mov
xchg
leave
sbb
cmp
popa
jbe
jae
shl
or
and
jg
mov
movsl
cs
mov
in
sub
add
out
pop
dec
pusha
pusha
dec
sub
add
push
mov
loope
adc
hlt
jne
inc
sub
add
sbb
xorb
mov
xchg
push
pop
lret
cwtl
lods
add
dec
lcall
addl
stos
or
cmpsl
pop
outsb
add
pop
xchg
sbb
daa
adc
mov
sarl
jb
lret
adc
add
shlb
lock
adc
push
sub
jb
jg
inc
jns
or
pop
and
cmp
xor
mov
adc
mov
mov
xchg
jb
mov
std
pop
jg
popa
rclb
xor
leave
and
sahf
pusha
ds
inc
add
imulb
sti
in
push
mov
testb
inc
lahf
sbb
jge
hlt
or
loopne
mov
jo
arpl
in
clc
xor
bound
int
sbb
adc
cltd
sbb
add
int
cmp
adc
fstpt
fldl
jae
xor
lcall
into
and
fwait
mov
cwtl
sbb
lods
bound
ret
xorb
mov
andl
jg
xchg
mov
push
pop
aas
mov
mov
or
sbb
push
out
jno
pushf
bswap
pop
adc
repz
ret
mov
or
andl
jecxz
push
mov
mov
clc
rorb
fsubl
mov
jb
enter
bound
cmp
aam
rolb
dec
sbb
sbbb
mov
mov
push
imul
mov
ret
fcmovne
movsl
iret
mov
nop
imul
sub
ja
cmpsb
push
pop
xchg
into
xorb
mov
jge
inc
adc
push
sub
xor
arpl
movsl
out
insl
inc
sbb
gs
sbb
jl
cld
nop
sub
inc
sbb
push
adc
xor
sti
ror
stos
in
test
shll
and
fidivs
push
add
pop
mov
repz
into
mov
fstps
sub
shlb
inc
sub
cmpb
loopne
ret
mov
and
pop
dec
add
mov
fdivrl
insb
inc
jbe
cmp
pushf
ja,pn
inc
mov
pop
sbb
movsb
cmpsl
aas
mov
insb
add
loop
and
in
stc
repnz
lcall
adc
fnstcw
cli
jno
xchg
mov
popa
loopne
xlat
pop
andb
mov
pushf
aaa
inc
add
test
jo
jg
mov
add
pop
stc
and
adc
add
jnp
stos
subb
in
or
mov
movsl
cmp
inc
clc
int
testb
mov
aaa
and
imul
cltd
pop
pop
daa
ficoms
pop
jno
sbbl
loopne
xchg
subb
push
test
push
shlb
jne
test
repnz
in
jle
jmp
in
cwtl
or
adc
jne
fsts
mov
lahf
and
fdivp
mov
movsb
sub
or
cmpsb
push
add
aad
xchg
pop
jmp
aam
push
clc
shrb
mov
mov
bound
cltd
cmpsl
jge
cltd
iret
popa
mov
orb
jnp
into
add
out
outsb
mov
pop
ljmp
scas
movsl
fstps
xor
stc
test
les
cli
mov
push
clc
gs
cmpsl
out
fistl
fsub
xchg
xor
push
test
adc
inc
push
insb
cmpsb
nop
or
mov
inc
mov
test
add
mov
fadds
adc
cmp
dec
stc
popf
xor
or
imul
into
dec
incl
out
ss
push
out
pop
icebp
gs
cli
xchg
rcll
mov
jp
adc
aam
push
lret
mov
aaa
dec
mov
add
inc
gs
pop
out
shlb
movsb
inc
in
dec
xchg
out
push
cwtl
mov
push
insb
sbb
mov
adc
sub
pop
movsb
idivb
jne
mov
mov
and
out
int
xchg
mov
mov
icebp
push
clc
sbb
push
xchg
lds
mov
add
cs
push
frstor
xchg
jne
pop
andb
push
pusha
bound
mov
sarb
inc
pop
cs
idivb
inc
enter
sbb
mov
pusha
scas
sub
push
inc
cli
pop
lods
test
mov
fadds
or
ret
cli
and
adc
lahf
jo
sub
imul
stos
icebp
push
repz
sub
cmp
outsl
jle
loopne
jecxz
roll
sbb
popa
mov
add
fwait
adc
pushf
lcall
mov
push
push
data16
mov
adcb
cmp
inc
addr16
xchg
nop
mov
pop
pop
push
je
push
test
inc
roll
and
daa
pushf
dec
into
xor
js
movsl
out
test
mov
pusha
push
inc
mov
pushf
inc
outsb
lret
out
dec
jns,pn
dec
adc
xlat
addr16
inc
sbb
jge
mov
cmp
out
pop
insb
xor
jbe
mov
xlat
lahf
mov
sarl
or
movsb
cwtl
xchg
or
idivl
adc
movsl
xchg
ss
mov
add
sbb
jle
iret
xor
scas
push
or
mov
divb
jo
aas
pop
push
xchg
loope
or
inc
pop
shrl
jl
fwait
nop
rcrb
movsb
inc
repnz
jge
lods
pop
sbbl
xor
mov
xchg
and
hlt
ljmp
bound
adcb
lods
orb
adcb
test
and
fcmovb
cmp
jns
pop
cli
pop
lock
leave
lods
ret
inc
pushf
inc
mov
inc
scas
jl
repnz
sbb
mov
push
sub
push
scas
fs
aas
xchg
cmp
jle
loop
ret
mov
adc
cs
les
sbb
daa
scas
push
ds
out
into
and
mov
in
mov
icebp
fsubrs
mov
out
dec
mov
das
outsl
inc
idivb
sub
mov
shl
mov
sub
sti
dec
sti
or
sbb
adc
or
je
insl
leave
mov
mov
jmp
inc
sbb
jecxz
ss
inc
xchg
movsl
pop
inc
mov
popf
aas
movb
cmpsb
add
mov
insl
mov
xor
roll
stos
cld
push
test
sbb
test
or
fdivrp
out
mov
mov
mov
mov
push
pop
cwtl
js
dec
mov
les
cld
sahf
hlt
jge
xchg
xchg
mov
pop
and
mov
ja
or
push
cld
inc
loop
loop
test
shrl
inc
xor
and
repz
pop
xor
pop
mov
movsl
pop
jns
outsb
hlt
rcrb
or
cmp
xchg
xchg
std
mov
cmp
mov
cmc
cmp
mov
sub
cmp
adc
inc
loope
aas
stos
mov
mov
pop
jne
sub
and
inc
cmpsb
adc
mov
scas
mov
filds
rol
js
adc
cmp
pop
and
into
xor
cld
xchg
ja
popa
jns
in
and
clc
jo
mov
xorb
xor
add
ret
cld
shrl
stc
ja
fsubl
daa
adc
jp
jp
adc
lcall
and
scas
xor
negl
sarb
sbbb
les
loop
and
and
fbld
scas
loope
adc
mov
pop
add
jb
sbb
daa
fwait
mov
popa
lret
call
lods
inc
movsl
and
jnp
sbb
fcmove
sub
addl
sti
push
cmp
and
lahf
das
clc
out
cltd
inc
mov
dec
xchg
ds
pushf
adc
loopne
shlb
iret
inc
pop
mov
mov
mov
fnstenv
xor
pop
ret
addr16
enter
int3
popf
xchg
loopne
sahf
mov
adc
inc
fs
adc
mov
mov
cmp
or
popa
insb
mov
inc
or
xchg
cmpsl
cmp
xor
mov
scas
mov
pop
out
cs
and
js
lods
xchg
xor
push
sbbb
icebp
mov
lahf
mov
xor
les
enter
loopne
xor
leave
dec
push
or
fildll
mov
ja
call
pop
divb
rorl
fists
lahf
and
pop
inc
xchg
mov
iret
inc
mov
sbb
fisubrs
ss
rclb
call
std
mov
shll
out
in
je
mov
test
popa
test
sub
lret
movsl
int
gs
xchg
mov
fs
test
ss
and
jmp
daa
enter
bnd
push
mov
sbb
outsl
adc
inc
jmp
mov
mov
pop
inc
mov
shl
fistl
sub
mov
movsl
jns
rol
cmc
jne
sarb
sbbl
mov
or
out
imul
pop
xchg
inc
in
aas
adc
test
mov
sbb
add
jle
in
xchg
in
xchg
addr16
std
push
out
bound
out
test
inc
jl
shl
sbb
mov
cmpsb
clc
pop
adc
test
xlat
mov
out
shlb
aaa
fwait
mov
jg
sbb
sub
push
xchg
in
lds
movsl
mov
inc
cmp
mov
fimuls
call
ds
and
fiadds
inc
mov
jg
add
mov
subl
mov
dec
mov
add
test
push
pop
cmc
xchg
mov
scas
repnz
mov
leave
cld
roll
cmpsl
dec
in
xchg
faddp
lds
cmpsb
loope
ret
add
cmpsl
out
cmp
shll
and
xchg
and
cld
mov
inc
and
pop
xor
pop
adc
mov
mov
jmp
pop
test
mov
pop
lock
ret
loopne
push
cltd
enter
ret
xchg
stos
rcrb
cmp
ror
clc
movsb
test
dec
clc
mov
loope
addr16
mov
push
pop
out
sub
daa
add
mov
mov
andb
stos
movsl
jbe
mov
cmc
xchg
add
addr16
fidivs
pop
stc
mov
mov
test
mov
xor
cmpsl
fcoml
adc
roll
frstor
cmp
jg
fcoml
sub
rcr
inc
fistl
das
sbb
cld
pop
or
test
ret
ljmp
and
mov
imul
mov
adc
mov
push
mov
aas
insl
mov
xlat
add
inc
push
imul
inc
inc
mov
mov
in
shlb
mov
xchg
mov
aaa
mov
loopne
fwait
add
mov
bound
cmc
out
jge
cmp
mov
adc
test
mov
and
mov
inc
es
fmuls
popf
insb
ds
xchg
or
sbbb
es
stc
xorl
push
imul
jns
lods
sub
shl
scas
push
fsubrs
or
and
fisubrs
jg
mov
adc
shll
or
repz
cmp
adc
mov
add
pop
mov
lahf
aad
jg
cmp
adc
fists
add
mov
inc
cmp
push
mov
stos
adc
pushf
repnz
sub
jge
add
fcompl
and
lods
sbb
or
add
daa
push
inc
or
movsl
push
daa
shll
in
sti
orb
movsl
adc
test
lods
ret
inc
lcall
mov
add
fwait
lds
cltd
addl
add
lahf
add
shr
xchg
iret
mov
aaa
sub
lcall
pop
gs
and
mov
test
incb
addl
idivl
cmp
dec
mov
add
stc
mov
lods
dec
jg
or
add
shr
addr16
adc
ljmp
aaa
ret
popa
leave
add
clc
cmpb
mov
inc
inc
lret
adc
push
lret
pusha
inc
dec
leave
push
shll
mov
or
cmp
or
or
mov
xor
jns
pop
xor
lock
xchg
ja
jecxz
or
into
inc
scas
jle
sti
cmp
push
fmull
xchg
fsubl
cmpsb
loope
push
pusha
xor
adc
insb
xchg
aas
or
cmp
jbe
xchg
mov
ss
movsl
pop
insb
movsl
add
sbb
mov
push
dec
push
aaa
cwtl
adcb
lcall
mov
and
xor
fists
arpl
shr
pop
je
outsl
push
pop
cwtl
xchg
mov
das
dec
or
cmp
xchg
test
mov
fadds
xor
mov
pop
inc
jnp
cwtl
dec
mov
mov
cwtl
pusha
movsl
test
sub
adc
andl
mov
or
adc
es
pop
scas
jle
push
imul
pop
add
xorl
and
pop
addl
xchg
in
repz
xchg
bound
mov
lea
sbbb
loopne
mov
dec
stc
stc
and
iret
in
jb
xchg
nop
inc
test
leave
push
rolb
test
lret
and
mov
cmp
jge
nop
mov
mov
jbe
xchg
imul
mov
jp
mov
stc
xor
mov
pop
push
test
insb
roll
adc
mov
sub
cld
push
cwtl
push
xchg
xor
xchg
cmpsl
sarl
inc
cmpsb
sub
stc
cmp
out
inc
ret
into
leave
sub
roll
lret
stc
xchg
mov
mov
push
shrb
out
inc
faddl
cmp
pop
pop
ret
cmp
and
mov
enter
push
aas
lods
inc
mov
movsl
pmaddwd
or
pop
mov
or
mov
mov
sub
cli
mov
cmp
add
cli
test
add
and
jnp
jle
or
out
mov
aaa
movb
xchg
adc
imul
in
fisubrs
shll
imul
push
or
xor
mov
pop
xchg
mull
mov
pop
push
jmp
mov
icebp
loope
cmp
inc
ret
or
inc
fbld
cs
xchg
and
cli
lds
sbb
xchg
inc
ss
add
push
loopne
dec
cli
sbb
xor
cmp
arpl
nop
psubd
fldt
scas
lds
mov
pop
mov
xor
fwait
rcll
or
addr16
aaa
js
pop
lds
add
push
ds
jp
inc
data16
fldl
pusha
addb
stos
test
pop
jp
xor
sahf
jbe
sbb
cli
lcall
fs
aam
mov
stc
sahf
test
outsl
or
push
and
sub
cmpsl
addb
fisttpl
hlt
test
inc
je
inc
xchg
sub
cmp
into
xor
inc
ja
sub
int3
test
imul
movsl
insl
stos
out
enter
sub
xor
fstps
stos
pop
pop
popa
lcall
mov
jge
dec
jmp
into
sub
in
loopne
aas
sbb
mov
mov
jo
adc
testb
jb
popf
mov
mov
mov
test
mov
popa
aas
jle
sbb
cmc
inc
xchg
fldenv
cld
adc
popf
and
incl
jp
mov
aas
popf
and
pop
ret
mov
mov
pop
cmp
leave
bound
lcall
vfnmadd231ss
ret
mov
push
xchg
xor
inc
sub
fnstcw
mov
cmpsl
stc
xor
pop
adc
mov
lahf
dec
test
inc
adc
lea
addb
push
adc
pushf
xchg
popa
std
push
int
sbb
adc
sbb
mov
shlb
aam
cmp
shrl
roll
test
fcompl
mov
cmpsl
xchg
sub
mov
fxch
push
push
mov
addb
out
mov
mov
enter
pop
sbb
call
inc
sub
shll
xchg
adc
inc
scas
repz
mov
sarl
push
or
jecxz
cmp
cmp
jl
add
mov
gs
inc
movsb
imulb
add
cltd
fwait
mov
mov
cmp
divl
decb
ret
test
mov
or
inc
idivb
sahf
loope
add
mov
cwtl
leave
stos
dec
add
lods
mov
inc
fidivrl
mov
daa
mov
jo
into
xor
cmp
lcall
add
xor
jl
rcrl
inc
enter
arpl
inc
add
scas
jmp
dec
scas
hlt
fnsave
inc
data16
sbb
xor
es
pop
movsb
jnp
dec
gs
fwait
inc
jmp
daa
xor
rcr
movsb
out
mov
movsl
xchg
ds
mov
add
push
call
pop
fcoml
push
sbb
cwtl
pop
in
or
cwtl
stc
mov
fwait
dec
push
cli
data16
adc
inc
leave
pop
movl
lcall
popf
and
sub
inc
and
pushf
cli
xor
pop
fstpt
push
leave
loope
add
lret
stos
sub
cmp
add
mov
addr16
or
adc
cwtl
xchg
mov
cmp
xor
mov
adc
xchg
scas
cld
clc
and
mov
mov
dec
or
in
bound
mov
sub
sub
inc
cmp
jmp
add
xor
cltd
sbb
sahf
cmp
sub
xor
lods
and
data16
xorl
adc
jno
and
mov
xchg
repnz
add
out
mov
mov
aaa
inc
mov
addr16
xchg
xchg
mov
inc
add
jecxz
movsl
icebp
push
andl
fiadds
gs
in
leave
mov
lods
mov
imulb
inc
jp
mov
fisubrl
sbb
mov
or
mov
cmp
lcall
jle
jne
sbb
xchg
icebp
loope
ret
mov
inc
insb
insb
mov
xchg
repnz
inc
xchg
into
sti
sbb
xlat
sbb
cs
dec
sbb
divl
xor
stc
pop
cwtl
jge
sub
sub
dec
mov
lret
cmpsl
mov
arpl
cld
shll
jb
pop
or
cmpsb
cli
inc
out
sub
cmpsb
pop
add
mov
rcr
aad
sub
pushf
mov
mov
mov
xchg
push
ret
inc
add
stos
aas
mov
dec
mov
or
and
stc
test
iret
leave
or
out
pop
jl
mov
fimull
mov
push
cmpsb
lea
icebp
sbb
jo
cmpsl
lods
push
sbb
cmpsb
cmp
jb
scas
dec
jp
pop
out
jae
fildl
out
or
stos
mov
xchg
clc
xchg
sbb
jg
daa
pushl
fbstp
cmp
jne
jge
stos
movsl
cld
mov
push
xchg
and
push
pop
inc
dec
mov
xchg
sbbl
leave
rclb
mov
pushf
cmp
cwtl
shl
sbb
lcall
cmp
jp
inc
cs
jle
fstl
daa
pop
imul
lods
aaa
fstl
xchg
pop
jne
push
jp
je
xchg
jecxz
xor
cmp
inc
subl
movl
cmp
sbb
imul
test
adc
dec
or
daa
cmpsl
mov
fld
push
pop
mov
adc
repz
lea
rorl
sbb
cs
loope
es
pop
jge
in
mov
pop
mov
sub
push
xchg
nop
inc
cmpsb
rcrl
jp
mov
jp
test
test
mov
mov
and
stc
xchg
or
jns
test
cmp
inc
js
fstps
mov
int
push
mov
scas
push
or
mov
popa
leave
subb
sub
mov
movsl
pusha
jno
sahf
mov
xor
push
stc
mov
fadds
mov
popf
cmp
jne
pop
fcomps
pop
push
div
pop
ds
das
popa
add
cld
aas
loope
push
into
cmp
sbb
outsl
xor
mov
pop
es
adc
sbb
clc
mov
jo
dec
xor
ds
sub
cmp
and
adc
or
jge
jl,pn
cmp
push
inc
inc
shr
mov
in
jo
fidivl
pop
leave
inc
pusha
ds
cs
mov
scas
jo
push
subl
inc
dec
push
lea
jge
xor
outsb
daa
add
inc
int3
jmp
jns
pop
mov
dec
push
daa
nop
mov
or
push
movsb
cld
lahf
test
cmpl
bnd
mov
ds
xor
fisubl
pop
inc
mov
aas
dec
popa
xor
fsubrs
mov
shl
sahf
aas
mov
aas
jbe
mov
pop
cmp
jmp
addl
dec
mov
scas
mov
mov
mov
add
xchg
lahf
jb
scas
jg
aaa
pop
sub
test
adc
mov
nop
scas
mov
xchg
in
xchg
jl
ja
aas
mov
jbe
or
sub
lock
in
shlb
sbb
cmp
and
mov
add
mov
outsl
fsub
and
mov
inc
and
cmc
lret
movsl
ds
arpl
jno
call
sahf
add
mov
and
mov
loopne
adc
out
cmp
leave
inc
push
sub
push
rolb
jbe
mov
dec
mov
mov
xchg
daa
mull
push
add
pop
stc
aam
fadds
xchg
inc
xor
dec
inc
inc
sbb
icebp
addr16
mov
push
add
mov
mov
adc
jnp
or
jae
sbb
lcall
xor
mov
push
jl
cmpsl
inc
int
mov
jne
std
push
inc
dec
mov
mov
lret
ret
lods
xchg
inc
popa
stos
jle
je
mov
add
popf
sbb
fwait
rcr
pop
pop
roll
jo
jns
mov
mov
sbb
in
jp
add
mov
push
test
adc
jno
push
xchg
ror
cmp
insl
jle
sub
mov
xchg
cltd
test
sbb
movsl
fnsave
jg
push
inc
fdivl
push
adc
or
dec
dec
jmp
das
xchg
xor
and
or
xor
cli
insb
loopne
push
xor
fcomps
dec
dec
subb
add
incl
jle
shl
xchg
mov
mov
cmp
jmp
repnz
cmp
jbe
sahf
pop
scas
dec
jle
rcrb
popf
add
inc
scas
ficoml
out
cmc
test
daa
addr16
pop
lods
inc
pop
xchg
addl
aad
mov
fistl
cmpsl
stos
repnz
out
dec
jle
xchg
pop
jbe
push
pop
movsb
sti
cli
enter
jg
cltd
clc
sub
jle
push
mov
imul
push
cmpsl
bound
lea
fisubs
mov
jp
jle
rcll
test
mov
jbe
stos
inc
xor
sti
jnp
inc
xor
icebp
sar
outsl
sahf
cwtl
nop
and
xor
mov
std
and
cmp
mov
cmpsl
mov
mov
mov
and
add
sbb
xchg
scas
xor
cmpsl
movsl
or
inc
xchg
xchg
lock
cmp
les
cli
inc
sbb
ja
xchg
into
mov
repnz
scas
ss
aas
shll
sbb
jp
mov
orb
mov
push
cmc
ret
xchg
cmp
rcrl
push
add
mov
push
idivb
and
and
mov
push
test
adc
lods
and
dec
pusha
les
adc
or
xor
mov
inc
mov
mov
mov
jl
fistps
ss
dec
push
mov
aad
inc
leave
loopne
add
daa
mov
adc
pop
and
lret
movsl
add
int3
lret
scas
ret
xor
pop
out
jge
xchg
push
mov
mov
cmp
cmc
leave
dec
in
xchg
pop
subb
movsl
test
mov
icebp
repnz
mov
mov
xor
xor
popa
cmp
mov
sarl
pop
jae
xchg
mov
stos
jne
adc
aas
mov
pop
inc
xor
cwtl
stos
adc
rcrb
shld
mov
jge
cmp
out
sub
sbb
inc
inc
sti
fstpt
andb
addr16
mov
movsl
mov
jmp
mov
push
mov
inc
mov
xor
add
mov
mov
pop
mov
pushf
xorl
mov
fisttps
popf
out
mov
fsubrs
popa
pop
sub
mov
xchg
iret
sbb
lret
dec
pushf
push
aas
mov
movsl
aaa
int3
mov
test
mov
roll
paddsb
subl
shll
scas
adc
jmp
fwait
mov
insb
aam
mov
sub
imul
loope
jp
lds
fdiv
out
sbb
cltd
sti
inc
inc
jnp
jbe
jmp
loope
cmc
repnz
pusha
cmp
movsl
fdiv
int3
icebp
stc
adc
or
jno
sbb
sbb
adc
dec
xor
jecxz
mov
je
mov
cmp
lods
add
xor
mov
mov
in
mov
andl
pop
sub
ss
mov
outsl
mov
out
lahf
inc
es
inc
rol
jg
decb
sub
inc
sub
out
sti
fisttpl
push
leave
inc
mov
inc
xorl
call
adc
testb
sbb
xchg
push
inc
inc
xor
mov
mov
aad
push
xor
fstl
scas
mov
mov
and
movsl
mov
in
stos
int
lods
cwtl
roll
push
cli
mov
xchg
push
popa
dec
mov
xlat
mov
popf
fnstcw
jb
inc
clc
adc
sbb
bnd
fisttpl
test
pusha
cmpsb
outsl
push
lods
scas
ds
fwait
jns
xchg
mov
sub
and
fisubrl
pcmpeqb
add
out
fwait
movsl
ja
xlat
fisttpl
jnp
shr
loope
cmp
popf
out
pop
int3
leave
mov
lret
fadd
add
js
sarb
stos
pop
leave
cmc
jle
mov
int
xlat
addr16
or
jne
add
outsb
outsb
bound
orb
and
and
sti
clc
mov
cvtps2pd
jno
movsb
addl
mov
pop
movsl
fcompl
enter
push
iret
mov
imul
lea
dec
jle
push
pop
jne
xor
jp
ss
test
mov
in
cltd
cmp
push
mov
adc
xchg
push
aaa
popa
adc
cmp
push
sarb
flds
pushf
adc
pop
mov
fnsave
js
push
bound
out
mov
bound
mov
lods
mov
sarb
xorb
mov
pusha
ss
cmp
popf
shrl
inc
sbb
cmp
mov
leave
mov
jmp
push
mov
lret
jb
inc
lcall
ja
mov
add
xchg
in
int
sbb
xchg
sbb
mov
inc
jle
sarl
push
sbb
std
jae
jecxz
movsb
cwtl
fistps
push
lret
inc
subb
jne
sub
cmp
rorb
push
loopne
mulb
sahf
adc
bound
mov
js
xchg
movsl
loopne
mov
sub
push
cmpsl
push
jp
mov
mov
xorb
jo
adcb
sub
std
mov
jge
xchg
add
xchg
rol
xlat
xor
mov
je
repz
cmp
inc
ficoml
fsubrl
lea
pop
push
adc
cmp
sti
xorb
pop
inc
pushf
loopne
testl
movb
inc
cmc
push
jp
inc
enter
pusha
cmp
mov
movsl
xor
inc
ss
js
jbe
lods
iret
ds
fwait
sbb
cs
mov
fildll
mov
jl
movsb
xor
fisubrs
lret
mov
jb
adc
mov
sti
push
jl
jp
test
mov
xchg
sbb
ja
les
cmp
jo
cmp
mov
js
jl
xchg
add
jne
xchg
dec
fsts
push
popa
movsl
or
scas
jge
sub
popf
inc
pop
push
push
mov
call
out
inc
xor
shrb
or
inc
xor
sbbl
jnp
scas
cmp
fwait
lahf
push
push
out
jno
jo
rcll
iret
test
adc
inc
pop
and
fldenv
mov
inc
cmp
pop
cmp
pop
inc
dec
adc
jno
pushf
cwtl
movsl
pusha
arpl
mov
test
inc
xchg
sti
xor
mov
mov
pop
mov
fisubrs
lahf
xchg
rcl
lret
xor
insl
push
sbb
xor
jb
out
push
inc
pop
popa
jno
cld
cltd
mov
pop
nop
fcoms
test
adc
fdivl
pop
adc
ret
insl
adc
adc
ja
xchg
and
aaa
loopne
mov
lock
inc
cltd
std
adc
mov
pslld
rol
lock
pop
cmp
pop
push
xchg
sub
aaa
jo
xchg
push
add
jns
xlat
int
add
add
jb
out
xor
ss
lret
leave
jg
inc
repz
add
xorb
jp
cmp
push
stc
cmp
jo
adc
pop
popf
ret
cltd
ds
fildl
loop
mov
sub
xchg
mov
push
pop
nop
daa
inc
nop
inc
or
inc
fiaddl
gs
fwait
jl
adc
repz
mov
sbbl
mov
std
movsl
daa
mov
mov
jo
pop
lahf
bound
mov
rol
inc
push
std
enter
fnstcw
pop
sbb
inc
ds
xchg
fwait
sarl
push
inc
sbb
faddp
jp
sbb
in
or
xchg
mov
in
mov
dec
cmp
cmc
cmp
and
sub
mov
adc
mov
ja
ss
add
popa
lahf
xchg
xor
jbe
dec
fimull
sub
scas
dec
pop
add
add
shl
add
dec
mov
iret
mov
xor
fiadds
movsb
pop
pop
cmc
je
es
int3
xchg
xchg
xchg
xchg
mov
jbe
xlat
push
or
mov
mov
jle
mov
das
and
mov
pushf
jne
add
dec
add
sub
movsb
lret
hlt
out
ja
loope
mov
adc
out
std
adcl
mov
stos
dec
jno
jecxz
lock
jo
insl
loope
bound
sti
mov
mov
lcall
aaa
test
ret
in
mov
jae
popa
sarl
dec
mov
loopne
inc
dec
out
cmp
shrl
outsl
xchg
push
push
sub
or
sub
adc
jmp
xchg
fs
pop
rcl
js
or
fldcw
and
enter
mov
push
push
pop
jno
test
dec
sti
in
daa
iret
mov
xchg
jo
movsl
pop
ficomps
or
ds
mov
mov
add
leave
mov
dec
stos
pop
mov
cmpsl
sbb
data16
fcoml
shrl
loope
xor
mov
bound
aaa
add
mov
repz
loopne
cmp
fcmovb
inc
add
fwait
pushf
lods
jecxz
int
clc
dec
inc
jle
lahf
jne
mov
mov
imul
lahf
lods
ret
mov
jno
faddl
loopne
jnp
rclb
jecxz
mov
jno
xor
mov
test
stos
cmp
shll
jp
pop
je
mov
jp
xchg
mov
push
mov
mov
fcmovb
andl
outsb
pop
mov
jge
pushf
push
pushf
loope
dec
inc
in
cmpsb
mov
mov
mov
out
popa
sahf
aam
into
xchg
mov
ror
cmpsb
mov
ss
shll
push
dec
xchg
inc
cwtl
hlt
mov
jno
pop
jne
rolb
push
and
mov
cmp
or
out
scas
add
mov
inc
leave
adc
inc
sbb
push
mov
test
mov
dec
or
idivb
cld
subb
or
fbstp
mov
xchg
and
fimuls
in
jno
nop
in
neg
xchg
fists
and
pushf
loop
pop
pop
jle
cmpsl
xchg
or
dec
daa
dec
filds
icebp
xchg
mov
adc
daa
divb
loopne
cmp
pop
orl
mov
fmuls
or
inc
out
rcr
into
addb
pop
out
xor
repnz
mov
pop
bound
rclb
ds
ficoml
sbb
dec
loope
xor
push
dec
in
inc
jnp
shlb
loopne
out
jnp
movsb
pop
pop
xchg
and
jns
inc
mov
pop
loopne
pop
dec
lret
jns
push
cmp
out
push
popf
movsl
mov
inc
pop
outsl
inc
jnp
clc
lcall
mov
add
lahf
push
xchg
adc
jb
mov
aam
push
sub
mov
mov
dec
inc
and
in
jae
xchg
mov
ss
adc
push
lret
jo
fidivl
pop
out
out
push
cmp
push
mov
fisttpll
cmp
add
fwait
push
ret
sbb
xor
fldcw
dec
push
popf
les
inc
sbb
add
add
loop
cmp
sub
cmp
and
mov
jo
sbb
inc
adc
filds
les
cmp
xchg
imul
scas
or
push
adc
test
enter
inc
out
imul
ljmp
jl
sub
jp
popf
adc
js
xchg
int3
sbb
jecxz
adc
fxch
xor
adc
out
cmpsl
mov
sahf
and
lcall
data16
xchg
mov
mov
pop
jno
mov
xor
push
add
dec
outsb
pop
sbb
in
imul
adc
mov
pop
mov
mov
cwtl
movsl
pop
jle
rcrl
jno
add
pop
cltd
inc
xchg
mov
mov
pusha
ljmp
out
xchg
push
das
hlt
es
int
xor
jnp
in
mov
mov
in
je
sarb
es
movsl
cwtl
imul
fldenv
rorb
sahf
in
das
fwait
pop
cmp
js
mov
stc
hlt
jg
jle
shll
outsl
cmp
cmpsb
add
cli
in
out
push
sbb
ja
pop
pop
inc
sub
in
lods
pop
inc
bound
loopne
dec
movsl
pop
jbe
adc
add
sbb
mov
pop
inc
das
ljmp
pop
sti
jne
loopne
andl
cmp
mov
mov
jge
dec
push
xor
pusha
xor
jp
cld
ret
and
pushf
mov
sub
jbe
mov
lods
ror
mov
mulb
das
jecxz
push
movsl
adc
adc
adc
sub
js
adc
int
push
je
into
push
fbld
adc
pusha
add
xor
inc
arpl
adc
xor
mov
xchg
rorl
and
pop
mov
xchg
push
pop
outsl
sti
cmc
mov
jp
mov
stc
push
or
mov
push
inc
jns
fmuls
cmp
push
insl
inc
vcmpss
mov
pop
pop
popa
pop
test
cmp
adc
pop
and
stos
lods
mov
or
mov
add
pop
test
xchg
lock
lea
sahf
jns
push
fsts
outsb
dec
push
jle
cld
je
and
jnp
stos
sub
popa
add
mov
xor
add
mov
jmp
repz
inc
sub
and
aaa
mov
push
jmp
cmp
bnd
in
addl
inc
and
cmp
pop
mov
cli
adc
cmp
loope
add
mov
das
pop
inc
cmp
lahf
repz
jl
pop
roll
sub
mov
shlb
push
fstpt
cmp
out
test
push
cmpsl
stc
mov
jge
and
xor
mov
leave
iret
mov
pop
mov
sub
js
xorl
and
mov
add
mov
adc
testl
mov
adc
loopne
mov
rclb
mov
ret
push
pop
dec
stos
jg
inc
adc
ds
dec
cmpsb
xchg
mov
jnp
add
movsl
sbb
inc
xchg
div
in
xchg
mov
js
cwtl
adc
std
outsb
cmp
push
and
add
outsl
inc
notb
dec
sub
clc
iret
jge
add
inc
lret
cli
jge
sahf
lret
out
cltd
or
adc
mov
fisubs
ja
push
mov
ret
and
and
adc
inc
xor
pop
jno
lahf
shl
and
fists
rcrl
sub
jo
cmpsb
pop
not
lahf
cli
xor
popf
fldenv
and
jb
add
in
les
aaa
sbb
clc
xor
aas
fdivp
clc
pop
inc
and
mov
jno
cmp
xchg
fisubl
and
std
jns
fstps
in
les
pop
dec
aaa
in
jnp
mov
test
imul
loope
ss
dec
test
jno
fst
add
jle
inc
clc
fs
cmp
jle
js
jl
cmp
or
mov
scas
sub
sbb
sti
rcrb
pop
ss
insb
fimuls
fwait
nop
aad
lcall
popf
outsb
pop
mov
xchg
inc
jbe
loop
add
mov
jb
sahf
test
popf
shlb
adc
addr16
incl
cmp
lods
mov
pmaddwd
jne
xor
sbb
popf
add
pop
sbb
fcmovnbe
cmp
and
cmpsb
fldt
add
scas
mov
xor
insb
add
pop
mov
test
sub
inc
mov
les
std
test
ja
xchg
fisttpll
push
sbb
xchg
pop
out
divl
leave
ja
fdivr
xlat
gs
cli
out
iret
sub
mov
xor
jp
jl
adc
jnp
and
shlb
sti
cmp
icebp
mov
add
push
arpl
out
and
and
div
mov
cmpsb
mov
imul
ss
sahf
add
movsl
fwait
jmp
sbbb
in
xor
add
mov
jle
fldl
sbbb
mov
dec
xor
mov
cmp
xchg
aad
mov
mov
xchg
stos
xchg
fwait
jno
inc
imul
dec
mov
jns
pusha
sahf
rolb
mov
vmovshdup
xorl
js
test
bound
test
fnsave
cmpsl
outsl
and
push
dec
jmp
jb
cmp
dec
adc
rcr
inc
adc
or
xor
jmp
xchg
inc
sub
pop
gs
push
mov
out
clc
sti
jl
mov
inc
xchg
hlt
adc
mov
adc
pop
jle
mov
fistpl
test
pop
daa
cmp
sub
mov
mov
loope
ret
stc
mov
pop
jnp
add
xchg
repnz
xor
fwait
fs
mov
ffree
dec
adc
mov
repnz
bound
jne
cmpsl
or
push
lods
sti
push
jl
and
pop
cltd
inc
js
pushf
jbe
daa
xor
push
cmpb
ret
orl
jecxz
xchg
or
jle
shll
enter
xor
push
addr16
jge
loopne
mov
pop
aas
in
cld
mov
add
mov
fcoms
push
xchg
fldcw
inc
in
icebp
cwtl
pusha
fidivrs
ret
and
xchg
mov
inc
ret
and
adc
or
movb
inc
cmp
cmp
arpl
inc
shlb
inc
fildl
pop
lods
andb
xor
add
push
es
test
sub
lods
push
iret
push
rcll
out
jns
sub
outsl
pop
pop
popa
rcll
xlat
sub
mov
and
shl
popa
and
test
jns
mov
sub
fdivl
dec
mov
mov
adc
jl
inc
call
or
add
lret
inc
popa
pop
movsl
mov
je
sete
jge
adc
sbb
loope
mov
add
test
movsl
frstor
std
mov
pusha
sub
and
xchg
cmpsb
into
movsb
cld
xor
rep
movsl
pop
sahf
fucom
add
jp
fcmovnb
sub
mov
inc
and
loop
scas
jo
pop
dec
and
mov
push
clc
cmp
movsl
xor
cmp
in
mov
ds
xchg
add
dec
pop
mov
dec
adc
cs
xchg
insl
movsb
mov
sub
cmpsl
pushf
mov
jbe
call
or
pop
mov
mov
add
ss
rcr
ss
pop
and
lret
push
sub
push
stos
jbe
lods
insb
outsl
cmp
mov
dec
pusha
sbb
adc
or
std
int
shll
mov
and
adc
aas
jne
mov
jb
mov
stc
xchg
mov
test
mov
je
adc
imulb
aad
out
shlb
and
sahf
cli
adc
rcrb
subb
cwtl
decb
imul
mov
imul
loopne
nop
enter
pop
and
jle
cli
jbe,pn
cmp
add
xor
ret
pusha
sub
es
out
xor
js
mov
xor
inc
xor
imul
xorl
or
sarb
daa
mov
andb
mov
add
dec
scas
outsb
dec
rorl
lea
sub
pop
push
sbb
js
inc
ret
push
aas
push
jnp
mov
sub
and
add
clc
push
ljmp
pop
xchg
sub
daa
mov
jle
test
pop
movsl
fwait
sub
out
test
loope
jmp
cltd
ds
jge
in
movsl
xorb
lds
iret
pushf
addb
sub
cmp
inc
test
call
jle
adc
cmpsb
jp
lock
or
jbe
xchg
or
inc
inc
adc
lock
pushf
pop
mov
insb
std
cmp
outsb
ret
xor
mov
testl
loopne
or
xor
test
xor
xchg
jl
add
xchg
jg
adc
cmp
sub
push
push
mov
hlt
mov
jl
gs
sti
cmp
mov
inc
inc
inc
ja
jo
lret
mov
inc
pop
hlt
out
xor
sbb
push
push
add
inc
std
scas
ds
pop
add
xchg
test
and
daa
jg
cmp
das
leave
jmp
test
mov
dec
jb
sub
inc
ret
mov
adcb
cmpsb
int3
sub
cmpsl
cwtl
xor
dec
addb
icebp
jb
push
push
and
loop
push
fidivl
jae
roll
shrb
xor
gs
mov
or
and
and
movl
xor
and
jg
mov
adc
add
xor
in
cmpl
cmpl
xchg
add
cmp
adc
movsl
push
xlat
daa
lods
ja
cmpsb
outsb
xor
sbb
std
add
les
fs
xor
mov
negb
andb
inc
inc
pop
dec
addb
testl
mov
mov
sbb
pop
cmp
bound
jle
or
insb
repz
fdivs
mov
mov
lahf
xchg
imul
out
cwtl
dec
add
sbb
and
xchg
js
std
mov
call
dec
sub
faddl
mov
ljmp
add
xchg
out
and
pushf
mov
lods
mov
push
clc
inc
test
data16
pop
outsl
shll
jno
stos
jp
sahf
cs
mov
xchg
inc
adcl
out
test
xor
dec
sar
into
push
jne
jecxz
outsl
subl
jl
mov
jb
leave
add
xchg
sbb
js
jle
adcl
mov
adc
mov
inc
vpsrlw
mov
jnp
xor
out
mov
jecxz
loop
and
mov
popa
scas
inc
pop
mov
xchg
mov
in
ret
mov
aas
mov
inc
jecxz
cwtl
arpl
cli
loope
mov
inc
int3
enter
movsb
and
add
stc
mov
sub
sub
cmp
pop
popa
imul
fimuls
ja
iret
pusha
outsb
sti
adc
out
movsl
pop
mov
setp
mov
aas
pop
sub
rcrl
adc
jae
test
cmpsb
fbstp
cwtl
and
or
jmp
imulb
outsl
insl
sahf
mov
pop
push
pop
adc
xchg
inc
daa
jge
sarb
lcall
mov
repnz
int3
adcb
cmp
pop
daa
inc
insb
flds
inc
data16
lock
push
adc
mov
cwtl
adc
mov
loope
mov
jns
adc
jecxz
dec
testb
push
and
popf
jno
repnz
les
xor
bnd
pop
mov
addr16
daa
popa
mov
sbb
cli
sub
dec
jp
fldt
pusha
xchg
outsb
ja
dec
sbb
mov
cmp
dec
pop
cmp
repz
and
push
xchg
fmuls
sbb
loopne
andb
aas
insl
stc
sti
push
mov
fdivrs
pop
xor
xchg
jle
add
stc
jo
je
negb
cmp
inc
jo
mov
inc
sbb
jo
adc
popf
mov
cmp
push
in
test
leave
fmul
mov
cwtl
data16
pushf
js
sbb
sub
add
scas
xchg
pop
shrb
push
cmp
stos
adc
xchg
sub
and
cs
cmpsl
pop
xchg
jb
cmp
lods
pop
add
xchg
stc
cmp
add
adc
pop
clc
mov
push
cmp
mov
fistpll
mov
add
mov
scas
push
cmp
out
sahf
fwait
push
loopne
leave
jecxz
aaa
jl
inc
and
push
inc
fidivs
cmpsl
push
mov
rolb
push
pop
arpl
xchg
push
nop
pop
movsl
adc
and
lcall
jge
mov
fstl
adc
adc
fsubl
dec
arpl
sarl
stc
cmpsl
out
cli
inc
adc
js
jno
bound
test
dec
lock
sbb
and
xor
or
jmp
shl
xchg
jmp
insl
adc
mov
bound
jl
cmp
push
lahf
push
dec
addr16
xor
mov
xor
sub
scas
adc
sbb
inc
add
mov
out
ret
std
cmpsl
mov
and
add
sbb
call
xor
xorl
lods
mov
sbb
pop
jo
aaa
int
mov
test
add
fwait
xchg
rcl
push
fildll
cmp
adc
cs
sbb
hlt
jle
and
insb
jnp
dec
add
fs
cmpsl
in
clc
mov
jp
ss
mov
mov
inc
fisubrs
cmp
popa
sbb
scas
cmp
fwait
incl
mov
inc
addl
push
mov
mov
mov
mov
xchg
pop
sub
jae
push
mov
mov
roll
out
shrb
inc
fisubrl
scas
inc
add
fsubs
sub
js
add
add
mov
popa
fimull
ss
xchg
mov
int3
mov
aad
mov
stos
fsts
dec
mov
ret
sahf
mov
rol
cmp
adc
stos
repnz
cltd
shr
adc
or
jmp
and
icebp
xchg
mov
push
sub
xchg
inc
enter
negb
fstps
bound
xchg
ret
jp
cmp
mov
por
or
movsl
mov
xchg
sbb
cmpsl
mov
push
sbb
pop
test
in
xchg
xchg
mov
test
in
or
pusha
xor
mov
insb
mov
fnstcw
lods
ret
adc
jecxz
sbb
loopne
jne
mov
xchg
ja
cmpsb
jle
pop
mov
xchg
out
mov
jbe
dec
xor
jmp
dec
dec
pop
pop
gs
add
aad
pop
sub
dec
fstpt
insb
xchg
in
add
mov
xor
test
cwtl
push
mov
ss
aam
xchg
sti
push
jmp
mov
inc
or
mov
daa
pop
shll
stc
and
lds
movsl
sahf
ret
mov
and
push
mov
mov
xchg
jno
cmc
mov
fistpl
jno
mov
cli
lods
fistpll
fdivl
or
andb
sbb
mov
mov
jb
ret
pop
clc
adc
or
popl
jle
mov
dec
nop
outsl
lahf
mov
push
mov
and
add
in
aas
jne
stos
bound
loopne
push
test
pop
add
mov
loope,pt
push
lea
xor
fs
xchg
lcall
xor
adc
jmp
sbb
cld
insb
insl
sbb
inc
lcall
outsl
sbb
cmp
fnstsw
add
adc
mov
mov
xor
incb
xor
dec
pop
sbb
pop
sti
imul
fistpl
jbe
dec
push
add
mov
pop
jnp
mov
mov
sub
shrb
sar
jne
test
sub
mov
js
dec
cltd
push
add
clc
push
cmpsl
xchg
jle
test
sub
stos
rolb
mov
xchg
or
ss
test
push
inc
push
faddl
inc
imul
push
add
cmp
adc
jle
cmp
clc
mov
inc
add
dec
stc
push
cmp
bound
in
popa
xlat
fstpt
or
das
mov
fidivl
daa
cmp
imul
addr16
data16
pop
sti
mov
out
repz
daa
cmp
sahf
push
shll
testl
and
mov
jle
subb
sahf
ja
cmp
lahf
push
ja
adcl
jg
mov
xor
mov
insb
sbb
pop
lahf
fldcw
inc
cltd
or
lahf
or
inc
faddl
jg
mov
xlat
inc
adc
movsl
xor
mov
in
ja
jns
dec
fisubs
cs
add
inc
mov
xchg
jl
inc
sti
mov
push
mov
out
mov
cli
inc
xor
mov
ds
cmp
xor
cli
sbb
movsl
daa
xchg
mov
xor
dec
pop
inc
inc
and
jne
mov
mov
sarl
es
fmul
add
pushf
and
sbb
movsl
cmp
mov
loopne
mov
sahf
ror
iret
or
fidivl
out
jge
mov
test
cltd
cmp
jle
nop
mov
xchg
cmp
dec
mov
sbb
pusha
add
pushf
push
inc
mov
mov
jae
mov
inc
stc
lret
push
clc
pop
mov
popa
scas
jnp
pop
lods
pop
sbbb
sbb
lods
jo
stos
imull
and
popf
mov
ss
lcall
mov
cwtl
or
lock
lahf
inc
push
and
mov
adc
lcall
pop
mov
rol
xchg
and
clc
push
test
push
xchg
jb
xor
mov
xchg
sub
xchg
mov
in
mov
and
inc
cmp
sbb
aad
out
jge
repz
dec
adc
adc
in
jle
mov
stos
cwtl
fcoml
inc
mov
inc
loopne
stos
lret
xor
gs
mov
pop
inc
xchg
ret
sarl
notb
sub
idiv
inc
xor
sub
fs
sbb
mov
pop
stos
mov
ficompl
ds
pop
cmp
cs
mov
mov
sub
jl
pop
inc
xor
mov
xor
gs
cmp
mov
rcl
imul
jae
ret
je
or
enter
leave
clc
insb
dec
dec
or
and
test
sbb
push
insl
jl
inc
cmp
inc
and
cli
int
cmp
jo
std
inc
movsl
fisttpll
jp
fsubrl
loop
push
subb
pop
outsb
lods
jl
sub
dec
jno
mov
movsb
lret
idivb
movsl
mov
inc
and
mov
mov
mov
and
inc
xchg
inc
bound
nop
inc
xchg
cmp
mov
inc
popa
adcb
and
notl
inc
mov
mov
mov
jmp
xchg
adc
popf
fiadds
in
cld
pusha
mov
movsl
es
add
nop
mov
scas
in
mov
imul
cltd
pop
jb
xchg
push
sti
insb
push
add
out
adc
leave
push
cmc
mov
mov
jb
cs
mov
arpl
mov
sbb
adc
jmp
movsl
mov
popa
inc
jmp
xchg
es
das
int
enter
popf
movsl
in
mov
pop
push
push
movsb
mov
out
mov
lods
loopne
mov
fists
fdivl
das
sbb
and
adc
cwtl
add
push
inc
cmp
cmp
sub
addb
arpl
xchg
ret
cld
mov
mov
pusha
mov
out
jnp
test
pop
lret
sarb
mov
push
movsb
mov
pshufw
mov
inc
inc
adc
push
movsl
xor
ret
mov
jl
add
add
xorl
push
ror
push
jne
stos
push
mov
mov
inc
enter
adc
cmp
mov
call
lods
mov
stos
xchg
movsb
jno
jl
jb
jne
cwtl
jno
lock
cmp
push
lcall
inc
pop
xor
pop
cmpsb
scas
popa
pop
dec
mov
add
scas
push
outsl
and
xor
sub
jle
xchg
rcrb
sub
dec
mov
dec
std
xor
sub
push
scas
mov
jns
ja
and
pop
ds
push
pop
push
andb
daa
and
xchg
pop
inc
adc
daa
pop
ffreep
je
js
xlat
out
pop
addb
xchg
push
and
das
jno
xchg
or
push
sub
sbb
stos
imul
xorb
andl
inc
fs
adc
mov
call
cmpb
push
dec
into
sahf
int
inc
negb
and
adc
sbb
mov
mov
push
mov
sahf
push
rolb
inc
jecxz
pusha
movsb
cwtl
sub
scas
lcall
inc
sbbb
jno
mov
cmp
cmc
jp
jmp
jg
test
cs
push
xchg
or
and
icebp
pop
add
bound
std
jno
test
or
pop
es
mov
popf
popa
inc
pop
pop
jb
lods
mov
imul
adc
and
sar
adc
cmp
sbb
or
push
jae
loopne
xchg
rcrl
or
or
xchg
popa
dec
mov
add
mov
jne
xor
xchg
push
out
test
hlt
adc
popa
mov
jecxz
xor
in
repz
mov
mov
ret
stos
ret
cwtl
mov
adc
cmc
sbb
lock
push
cmpsl
loope
movsl
in
cli
adc
sbb
xchg
daa
jne
pop
xor
fwait
pop
pusha
pop
bound
roll
and
sarb
pop
aas
inc
arpl
fdivrl
shr
or
xchg
pusha
pop
jns
mov
movsl
in
jmp
ljmp
hlt
xchg
mov
test
fdivrl
push
bound
adc
and
xchg
bound
nop
scas
outsl
and
mov
push
push
mov
cld
faddp
add
insb
rol
pop
das
adc
call
xchg
pop
subb
pop
ljmp
das
and
test
fcmovnb
mov
negl
scas
cmpsb
bnd
sub
cmp
mov
pop
sbb
into
jo
subb
sbb
in
loopne
loopne
rolb
insl
andl
pop
sahf
aaa
lea
inc
mov
add
mov
test
pop
leave
iret
imul
xlat
into
ret
inc
loopne
leave
mov
movsb
addl
inc
cmovae
or
inc
movsb
adc
jl
inc
ljmp
xor
add
add
in
jge
cwtl
sbb
nop
repnz
data16
rcll
pop
nop
inc
push
adc
std
fwait
loop
in
mov
pushf
pushf
and
aad
adc
mov
loopne
jns
js
inc
sti
xchg
insb
and
out
adc
add
jge
sti
loope
xchg
push
js
fcmovnb
mov
bnd
cmp
in
push
rcrl
mov
add
jp
mov
mov
mov
adc
fcoml
and
xor
je
or
fcmovu
mov
ss
mov
push
mov
mov
xchg
inc
je
mov
jl
mov
add
mov
addb
mov
xchg
clc
sbb
cmc
je
or
dec
jae
cmpb
jns
inc
jb
mov
shll
popf
in
xor
push
add
cmpsl
jecxz
dec
mov
inc
scas
sahf
lcall
adc
cmp
jecxz
xor
clc
lahf
adc
jb
jg
ds
popa
loope
lret
xorb
cwtl
jne
andl
repz
pop
cmp
xor
pop
push
fisttpl
pop
sti
fisttps
xor
mulb
in
xor
inc
es
out
jg
sub
inc
add
inc
mov
jge
lret
ljmp
add
stc
clc
rcrl
xor
rcr
outsb
fstps
push
xor
xchg
xchg
mov
jb
inc
xchg
mov
xchg
cltd
out
loope
dec
pop
xor
add
cmpsl
in
jo
ja
sahf
sub
inc
and
data16
push
adc
gs
jl
xor
mov
sbb
test
jmp
out
repz
push
shrb
fcmovu
mov
movsb
mov
lds
xor
int3
push
ret
jne
in
jae
jne
cmp
xchg
cltd
sbb
push
in
push
cs
aaa
cmp
ret
dec
popf
fs
loopne
adcl
dec
mov
dec
or
mov
add
roll
jg
adc
aad
jb
jno
ja
xor
repz
mov
cmp
aas
sbb
sti
imul
scas
ficompl
add
cmpsl
cmp
cld
mov
mov
push
sub
das
xor
fimuls
and
loope
jnp
dec
pop
pushf
dec
ja
pop
jecxz
shrb
lahf
sti
arpl
inc
and
adc
sbb
sti
sbb
xchg
out
sarl
sub
cmpsb
cmp
and
add
std
cmp
sbb
addb
jmp
xchg
adc
mov
fwait
sub
xor
mov
ret
pop
dec
jae
adc
fidivs
adc
js
mov
fwait
in
adc
cmc
cli
lea
mov
mov
push
and
iret
pop
pop
mov
jge
jbe
in
popf
data16
push
test
mov
push
pop
xchg
aad
sbb
mov
pop
mov
popf
or
into
pop
loope
sbb
cltd
inc
dec
fbstp
fdivrl
pop
icebp
loopne
sar
xor
stos
sbb
rclb
adc
inc
push
aam
and
das
add
dec
sahf
jo
out
rolb
scas
cmp
popa
mov
push
cmpsl
stos
cmc
leave
in
push
xor
inc
idivb
xchg
mov
sub
mov
xor
jbe
je
gs
adcb
rolb
sbb
and
fistps
stos
pop
or
mov
cs
icebp
mov
mov
lcall
incl
rcll
pop
pop
pop
mov
das
xor
icebp
out
sarb
xchg
out
pop
je
jle
mov
sbbb
outsl
data16
push
mov
xchg
das
das
xchg
outsl
adc
ret
xor
push
cmpsl
pop
fsub
jb
in
fdivrl
sbbl
les
xchg
mov
call
cmp
das
cmpsb
shl
push
and
inc
in
aas
iret
ret
sti
sbb
syscall
nop
filds
adc
mov
inc
ss
inc
mov
leave
loopne
loope
sub
push
das
inc
pusha
scas
sub
lods
clc
and
lcall
dec
cmpsb
fstpl
call
inc
xchg
add
callw
mov
movsl
xorl
adc
push
or
ja
mov
xor
dec
popa
lods
adcb
cmc
or
cmp
mov
movsl
imul
mov
inc
outsb
cmp
lret
jnp
loopne
pop
orl
sub
xor
js
cmpsl
bnd
cltd
pusha
add
push
scas
sbb
inc
inc
push
test
xchg
jge
sbb
add
xor
arpl
push
sub
cli
xor
or
xchg
mov
push
js
mov
and
ljmp
pushf
mov
mov
push
popa
push
push
cs
push
push
fimull
loopne
test
rclb
sbb
nop
pushf
adcb
mov
inc
orl
jl
or
mov
or
dec
xchg
xchg
mov
mov
fdivl
stc
add
out
out
ret
pop
mov
jge
mov
mov
es
pop
imul
xor
rorb
pop
int3
les
movsl
ficomps
xlat
adc
popf
in
sub
fs
cmp
outsb
mov
inc
movsl
add
mov
sbb
popa
outsb
ds
inc
push
sbb
xchg
cwtd
cmp
or
out
movsl
in
jp
cmpsb
out
mov
cmpsl
es
es
xor
adc
and
call
inc
jg
inc
sub
jge
data16
int
cld
jo
mov
mov
jns
bound
pop
idivb
adc
adc
and
sbb
addb
inc
jecxz
lea
cmp
adc
popf
sub
sbb
inc
push
sbb
sbb
enter
cmp
popa
pop
and
insl
std
push
nop
xor
jno
into
movsl
add
fs
sarl
xchg
sbb
push
add
jne
sub
sub
cmp
lret
pusha
push
imul
aas
push
mov
mov
movsl
lods
xchg
push
data16
shll
bound
mov
pop
and
jno
roll
ficoms
movsl
leave
push
shrl
cltd
jle
into
jmp
mov
imul
dec
fldt
and
add
ljmp
sbb
or
add
or
fs
mov
jae
loope
movsl
xor
adcl
inc
mov
mov
flds
testl
icebp
popa
mov
xchg
aas
fstpt
test
and
sbb
xchg
fchs
adc
mov
adc
inc
inc
adc
ret
xor
loope
mov
lcall
movsl
loop
outsl
out
dec
cmp
icebp
div
mov
adc
or
loop
sub
xchg
shrl
mov
sti
outsb
addb
dec
add
scas
shrl
mov
mov
push
fsts
inc
cmpsl
popf
inc
sbb
stos
iret
roll
sub
jae
lcall
dec
stc
fidivl
push
inc
outsb
cli
stos
xchg
cmpsb
and
pop
fisubrl
xlat
push
enter
leave
dec
and
sbb
mov
sbb
sub
mov
loopne
out
out
mov
jns
sarl
push
bound
pop
pop
jo
lock
test
sbb
add
and
mov
gs
out
jne
and
inc
sti
cwtl
fdivl
pop
arpl
mov
adc
xor
movsl
mov
mov
ds
xchg
xchg
mov
cmp
pop
leave
push
mov
mov
cmp
jnp
movsb
add
fldt
add
inc
imul
push
xchg
aam
jae
sbb
and
and
push
add
inc
test
mov
stc
leave
cmp
add
sbbb
subb
dec
push
aad
mov
adc
andl
lods
pop
outsb
ret
inc
arpl
sub
inc
or
dec
outsl
jp
xchg
sbb
inc
pusha
jp
pushl
inc
jnp
adc
adc
mov
mov
inc
jp
ror
ljmp
mov
imul
xchg
xchg
movsl
and
std
jg
in
aas
jp
lods
and
pop
jp
add
push
int3
inc
loopne
mov
xchg
jl
negl
xchg
fsubl
push
sbb
pop
sub
mov
repnz
ret
add
xchg
dec
aas
push
mov
aam
sbb
adc
jecxz
out
aaa
and
or
xor
sbb
popa
lds
nop
outsl
aad
pop
mov
xlat
mov
mov
dec
arpl
test
inc
mov
enter
pusha
lahf
fildl
dec
mov
xchg
sub
data16
mov
call
push
loope
inc
xor
pop
jo
cmp
pop
jp
xor
ret
cli
scas
inc
adcb
test
push
mov
xchg
aas
movsl
cmp
sbb
leave
push
in
pop
jno
or
cmp
jecxz
test
pop
mov
sub
adc
cwtl
cmc
lds
popf
cmpsb
and
jno
rcrb
ds
cmpsb
sub
cmp
pusha
test
das
ret
test
movsl
mov
or
lret
mov
add
iret
cmp
lods
sarl
imul
pop
popa
mov
imul
arpl
jg
and
add
scas
es
inc
adc
xchg
fldt
rcrl
sbbb
inc
inc
into
movsb
fimuls
xor
test
pop
lea
and
mov
repnz
mov
adc
movsl
jb
test
cmc
xchg
call
mov
mov
sbb
xor
mov
ret
test
sahf
sub
das
inc
xor
outsl
inc
push
clc
pop
xor
sub
mov
scas
jo
jo
daa
test
out
xchg
jne
es
jne
das
sub
jnp
lods
jecxz
sbb
adc
sub
mov
movsl
dec
das
pop
cmc
bound
mov
mov
sub
mov
outsl
xchg
mov
and
pop
mov
dec
shrl
sbb
adc
fwait
xchg
push
sbb
adc
out
adc
int3
sub
mov
xchg
push
cmp
cmp
insl
lahf
sbb
push
push
mov
mov
ficomps
shlb
jle
ds
movsb
stc
bound
rcr
rcr
xor
adc
mov
mov
jecxz
mov
xchg
inc
cmp
cmp
int
popf
movsl
bound
xor
in
inc
dec
mov
imul
inc
sarl
mov
shlb
cmp
mov
je
mov
fwait
cmp
mov
fsubrs
sahf
sub
cmp
jae
outsl
jne
mov
loope
cmpsl
pop
addr16
popf
xor
push
call
dec
cmp
je
in
pop
clc
andl
push
push
mov
test
mull
test
ds
orb
rcrl
adc
mov
jle
pop
add
and
adcb
gs
fsubrs
scas
push
mov
cltd
cmp
mov
cmp
pop
lcall
mov
sbb
sub
inc
cmp
lcall
adc
cli
sbb
loopne
and
xor
mov
clc
into
sub
mov
pop
push
js
lock
jle
xor
xchg
idivb
pop
les
mov
xor
push
cmp
mov
fstps
mov
test
inc
pop
and
mov
lods
sbb
in
stos
sbb
or
jbe
and
xor
imul
inc
sub
jg,pn
mov
popa
js
sub
pushf
sub
jg
aaa
sahf
cld
and
stc
xchg
call
inc
mov
cmp
adc
adc
and
outsb
mov
xlat
cmp
addr16
movsl
cmp
jnp
mov
add
stos
shrb
inc
lcall
adc
and
pushf
xchg
in
inc
shlb
adc
fadd
out
push
mov
shrb
loope
outsb
cs
cmp
mov
jbe
xchg
xlat
dec
mov
or
gs
jmp
xchg
cmp
push
sbb
or
outsl
cmp
das
adc
jo
xor
mov
fists
fwait
outsl
mov
fisubrs
movsl
fldenv
and
and
notb
xor
out
gs
push
cli
movsb
xchg
movsl
xorl
into
insl
movzwl
in
rolb
sbb
fmull
jae
pop
scas
sbb
jle
loop
jle
inc
and
mov
push
imul
rcll
mov
and
xchg
mov
inc
push
jle
cmp
mov
adc
ja
cmp
adc
lods
sahf
retw
fistl
jl
js
mov
adc
aad
sysexit
out
xor
mov
push
dec
out
stos
sbb
shll
mov
xchg
mov
mov
inc
sub
rorl
shrl
mov
push
push
call
mov
sarb
movsl
pop
mov
xor
mov
adc
ss
mov
xchg
outsb
mov
out
sbb
jle
xchg
cmp
lretw
notl
mov
stos
addr16
dec
fisubrl
lock
stos
sbb
push
rcll
push
push
mov
repnz
or
jns
inc
popf
popa
sbb
xor
mov
xor
mov
clc
loope
cmp
add
fucomi
leave
fidivrl
pop
movntq
into
mov
adc
mov
cli
dec
mov
or
icebp
ja
adc
test
inc
and
and
adc
jge
mov
js
inc
push
movsl
dec
xchg
push
cli
jge
pop
ljmp
lods
fisubrl
add
cmp
mov
cld
sahf
adcl
add
pushf
fidivl
jp
pop
ret
inc
and
mov
nop
mov
or
loopne
mov
pop
adc
sbb
leave
lcall
fildl
push
xorb
movsl
incb
lds
fwait
int
fidivl
mov
insb
xor
lods
insb
fnstcw
aad
addr16
adc
xor
sti
jle
mov
push
sub
inc
or
out
pop
mov
cmp
mov
pop
call
inc
ss
mov
fisubs
xlat
pop
sahf
cmpsb
out
rcr
adc
mov
daa
clc
inc
and
jbe
jg
xor
aaa
xor
insl
test
xchg
xor
mov
movsl
andl
add
adc
pushf
stc
ret
adc
insl
sbb
js
adc
shll
jno
popa
jno
xchg
inc
inc
sbb
and
ret
mov
fmuls
mov
mov
ret
jg
pop
popa
stc
jg
pop
add
mov
cli
lods
dec
sbb
inc
loop
fdivs
aad
fs
sbb
movsb
or
addr16
in
outsl
mov
pop
mov
push
cli
sbb
xchg
mov
enter
push
push
sbb
mov
pop
mov
cmp
and
in
mov
jp
jecxz
lahf
push
jl
push
and
inc
push
into
es
lods
xorb
movsl
mov
mov
cmc
add
jmp
inc
mov
lods
insb
sub
mov
test
dec
sarl
shr
insb
enter
or
into
fmuls
xchg
xchg
pop
push
xor
nop
mov
add
push
xlat
pushf
add
repz
js
clc
jns
sbbb
adc
mov
xchg
dec
movsl
sarl
and
rcll
scas
mov
mov
lods
push
inc
lcall
out
jecxz
mov
and
inc
jae
mov
scas
cmp
xchg
mov
rcrb
mov
dec
cltd
jl
paddw
pop
aaa
js
into
leave
mov
xchg
stos
ret
pusha
or
inc
cltd
pushl
cmp
das
or
testb
dec
popa
cmpsb
jno
jp
jb
xlat
push
dec
xor
mov
nop
in
pop
inc
insb
ss
movsb
or
cmp
addb
addr16
in
fdivrs
ffree
mov
cmp
fmull
pusha
repz
call
cmp
outsl
and
pop
out
or
lret
movsb
in
push
pusha
lahf
fistpl
iret
jnp
test
mov
jb
add
inc
imul
sbb
rcrb
mov
sub
cmp
sbb
jle
push
movsl
aaa
iret
inc
cld
and
imul
push
mov
sub
addl
cmc
push
inc
pusha
out
leave
sbb
fiaddl
popa
add
sub
jb
sahf
dec
movsl
mov
idivl
cld
sti
cltd
inc
mov
push
inc
dec
and
stc
fs
sbbb
push
jns
sti
shlb
add
xchg
and
mov
xchg
mov
or
cmpsl
mov
ss
pop
scas
cmp
cmp
add
and
dec
rcrl
int3
movsb
xlat
mov
loopnew
sub
dec
jl
jle
pop
push
lcall
enter
mov
xchg
ret
xchg
out
fldenv
dec
jl
mov
cmp
mov
jnp
xchg
repnz
rclb
outsb
insb
sbb
adc
adc
cmp
xchg
bound
movsl
insl
inc
add
test
add
and
stc
cmp
popf
rclb
std
mov
jle
xor
mov
and
daa
jbe
inc
fidivl
push
hlt
adc
jl
add
fstp
aaa
adc
mov
andl
loopne
roll
and
push
xor
loop
leave
lahf
cwtl
cmp
cmpl
xchg
inc
ss
and
mov
xchg
lahf
out
mov
xchg
dec
ret
mov
sti
mov
fneni(8087
shrb
or
dec
push
cmpsb
hlt
pop
pop
xor
xor
adc
fstpl
sbb
cli
cmp
jo
shrb
add
hlt
inc
xchg
arpl
mov
dec
lcall
mov
pop
add
ret
xor
fcmovu
outsl
pop
ds
mov
lock
movsl
out
or
aaa
into
xchg
gs
or
aaa
and
lret
pop
cmp
mov
mov
jns
icebp
push
mov
lods
xor
cwtl
lock
movsl
xor
sbb
cmp
lahf
xor
repz
imull
loopne
jl
cmpsl
inc
mov
loopne
xor
push
mov
xchg
ja
rcrb
dec
shlb
cmp
into
jg
mov
pop
inc
pop
leave
inc
push
jecxz
aad
insl
pop
adc
mov
push
hlt
jns
es
cmp
mov
fs
xor
jmp
repnz
mov
jg
dec
inc
es
pop
push
add
lods
shl
adc
mov
xchg
jp
fidivrs
add
mov
xchg
out
push
dec
xchg
pop
mov
cmc
pop
sub
mov
loop
jb
inc
test
ljmp
xor
push
or
and
mov
mov
or
mov
aam
aad
xchg
in
stc
call
pop
pop
mov
movsl
push
mov
cmp
inc
sahf
cmp
mov
cltd
icebp
pop
stc
inc
jg
mov
jecxz
xlat
inc
mov
cs
push
xchg
mov
inc
push
filds
push
mov
pushf
jbe
fimull
out
bswap
add
in
fidivl
jb
jmp
jecxz
fsubs
and
mov
xchg
sbb
jb
sbb
xchg
fwait
mov
pop
dec
xor
mov
addb
pusha
push
pop
out
inc
leave
mov
dec
cmpb
mov
jo
fsub
test
in
cmp
daa
sbb
insb
push
inc
jno
fwait
xchg
bnd
test
push
inc
xorb
mov
mov
push
mov
add
xchg
pop
inc
jb
pop
pop
sahf
aad
push
add
and
sbb
push
popf
sarb
jge
sub
test
xor
movsb
stc
or
add
inc
xlat
mov
js
and
mov
jne
loope
pop
cmpsb
fwait
leave
push
stc
loopne
cmpsb
inc
pop
push
test
ret
movsl
sub
movsb
xchg
arpl
cs
cmpsb
sahf
mov
and
js
popf
mov
leave
jne
pusha
cmpsl
icebp
dec
scas
stos
ds
xor
jmp
clc
xor
adc
loop
stos
cmpsl
or
pop
adc
xchg
neg
cmp
xor
push
adc
cld
es
inc
mov
xorb
inc
pop
ret
cld
dec
scas
fadds
mov
jp
adcb
inc
aaa
arpl
push
inc
mov
out
mov
and
jb
movsl
jns
inc
xchg
and
lret
push
sub
ss
rcl
jmp
xor
jmp
test
lret
inc
call
lret
mov
inc
mov
into
xchg
ss
push
jp
je
leave
push
scas
pop
je
rep
loope
enter
xor
xorb
xor
mov
pop
lods
daa
mov
pop
mov
add
dec
jmp
adc
leave
sbb
mull
idivb
shll
outsl
mov
mov
insl
sub
movsb
cmpsl
lds
mov
in
mov
insb
dec
es
pop
jne
mov
fwait
push
jae
test
scas
fcmovnu
stos
int3
sub
mov
mov
push
sbb
adc
insl
cwtl
jbe
sbb
add
adc
jge
xor
xor
mov
call
jp
popa
sbb
bswap
mov
xor
mov
xor
js
add
cmp
not
xchg
jb
xchg
test
mov
out
loope
daa
int3
lods
cmp
scas
out
popa
mov
loop
mov
lds
xorb
jne
inc
mulb
stc
sahf
roll
cmp
ret
or
mov
push
stos
sub
test
js
add
ret
pop
mov
xor
add
das
negl
cmp
pushf
add
add
jae
mov
jo
add
pusha
push
add
movsb
xor
dec
insl
lods
and
jns
cmp
and
xlat
cwtl
xor
repnz
es
xor
nop
add
aam
push
add
dec
and
jl
push
mov
nop
loope
add
mov
lcall
and
sbb
mov
mov
sbb
jl
subl
fdivs
outsl
ss
loopne
sub
loopne
mov
mov
mov
ja
and
adc
adc
pop
test
sbb
or
jno
loope
ret
std
mov
test
loopne
je
cmp
mov
push
rol
lods
popf
in
mov
mov
jl
and
mov
jle
fwait
popf
lods
shrl
add
xor
xchg
js
lods
sti
and
or
ja
imul
int
shrl
xchg
fistpl
mov
adc
stc
cs
loop
or
insl
sub
xchg
push
xor
movsl
cmp
sub
adc
inc
jb
ret
pop
imull
out
xor
ds
lods
and
and
lret
adc
test
pop
cltd
jo
test
divl
stos
js
mov
jo
aas
sub
push
in
mov
jmp
or
or
punpckhwd
xchg
andl
loopne
sti
push
xor
movsl
mov
mov
pop
rol
mov
cli
pop
mov
sbb
inc
cmp
cld
mov
xchg
out
aam
loopne
jl
lret
out
fildl
push
into
sbb
push
add
adc
jnp
mov
out
iret
frstor
adc
mov
mulb
inc
fnstsw
jle
cli
pop
fucom
adc
inc
ds
cld
mov
lods
enter
int3
into
jo
inc
es
adc
les
fnstsw
pop
inc
sahf
data16
mov
sub
jle
scas
orl
dec
jo
mov
cmp
das
daa
mov
insl
call
jecxz
jmp
cmpsb
jns
mov
push
movsl
jnp,pt
pop
bnd
mov
pop
mov
bound
adcb
xchg
inc
inc
pop
push
rep
add
aas
scas
push
test
adc
loop
imul
jae
icebp
jae
xchg
insl
rorl
xor
mov
and
icebp
les
in
jmp
sbb
shll
mov
mov
inc
push
out
ret
fdivr
cmp
xor
mov
add
pop
jb
and
rcrb
pop
bound
cmp
xchg
cmpsl
mov
int3
insl
outsb
push
pusha
xchg
jae
mov
repz
rorb
pop
pop
lock
cmpsl
mov
cmpsl
cmpb
test
cmpsb
lods
push
popa
out
mov
aad
fbld
neg
mov
cmp
mov
lcall
leave
pop
dec
cmp
or
mov
js
dec
ds
addr16
subl
lahf
cmc
jbe
push
mov
mov
push
sbb
adc
mov
das
fldcw
negl
cmpsl
push
adcl
jbe
mov
adc
xor
mov
sbb
mov
movsl
dec
mov
ds
dec
mov
lcall
xchg
jns
xchg
dec
ftst
push
xor
cmp
test
mov
mov
lods
imul
aam
mov
fcmovnb
stos
lea
enter
push
cmp
test
cmpl
shll
jge
mov
mov
push
mov
shll
gs
pop
and
out
hlt
jbe
hlt
push
or
or
pop
xchg
fldt
mov
out
mov
fistl
adc
mov
bound
fidivl
xchg
in
cmp
sbb
mov
xchg
idivl
in
cmpsb
jmp
mov
mov
push
inc
mov
dec
mov
xor
fabs
hlt
mov
jns
pop
push
or
or
push
ljmp
add
xor
add
push
add
sbbl
push
in
sub
cmp
popa
imul
loop
add
and
push
fcompl
inc
mov
push
gs
mov
mov
clc
cmpsl
scas
daa
lock
sarb
add
ss
icebp
xor
pop
lods
cmc
stc
cwtl
mov
push
push
xorb
mov
cmpsb
mov
push
dec
loope
cmp
lcall
mov
popa
pop
and
clc
or
fwait
in
ret
adc
pop
mov
addb
stos
cmpsl
sar
lahf
pop
inc
xor
jl
mov
loopne,pt
aaa
pop
cmp
subb
mov
int
jecxz
cli
add
addr16
jle
pop
arpl
xor
cld
push
sbbb
fwait
inc
pop
movsb
cs
mov
les
jmp
outsb
jno
call
fmulp
jmp
mov
pop
mov
int
and
insl
dec
adc
popf
cmp
cmp
or
pop
into
test
jns
mov
and
sbb
cwtl
or
add
call
adc
sub
lock
xchg
insb
xchg
out
ret
stos
xchg
xorb
sti
js
sub
cmpsl
mov
mov
xchg
sbb
test
stos
movsl
inc
mov
cmc
xchg
test
sbb
dec
cmp
or
icebp
and
add
loopne
push
fdiv
das
mov
xchg
addb
push
mov
arpl
cmpl
mov
jg
dec
push
dec
mov
push
popa
add
shll
mov
xorb
movsl
or
testb
das
mov
out
cmp
sahf
cmc
sub
in
pusha
jne
sub
fistpll
ror
push
daa
aas
inc
sahf
incb
insb
xchg
fdivs
mov
cmp
jp
mov
lret
xor
sti
movsl
cmp
sbb
inc
and
xor
sti
cmp
vsqrtpd
and
xor
inc
les
or
es
jle
pop
jbe
fistl
or
and
fs
xchg
pop
adc
out
test
adc
inc
outsb
cmp
mov
adc
and
fmulp
out
push
mov
xorb
repz
xchg
push
in
popa
push
out
jo
xor
sbb
inc
jno
inc
or
push
or
xchg
mov
cltd
aaa
jbe
and
adc
add
fidivs
add
jb
ficoml
mov
sub
dec
clc
mov
adc
sarl
adc
movb
xchg
idivb
in
fiaddl
and
jmp
cmp
cmp
inc
jnp
lods
pop
sahf
insb
cmp
stos
or
in
idiv
add
push
cltd
push
sub
pop
cmp
mov
adc
out
pop
inc
mov
ss
cwtl
add
sahf
fstpt
ljmp
pop
or
xor
dec
fisttps
imul
shl
or
jge
enter
addr16
sbb
mov
sbb
pop
addr16
jg
lahf
mov
sarl
test
cmp
rolb
es
cmp
xor
and
dec
push
jb
or
jae
pop
rol
cmp
cltd
ljmp
icebp
and
mov
cmp
xchg
cmpsl
icebp
fiaddl
push
cmp
shl
xchg
add
add
jns
xchg
adc
cmpsb
push
in
cmp
pusha
pop
dec
cmp
test
adc
scas
jg
and
testb
mov
jecxz
js
mov
xchg
xor
push
xchg
jae
fistl
sbb
lcall
jno
mov
ret
loopne
leave
repnz
add
movsb
mov
dec
dec
pushf
mov
test
cmpsl
inc
sbb
rep
xchg
clc
or
aam
push
dec
mov
and
ret
dec
push
mov
adc
add
sub
mov
pop
outsb
scas
clc
dec
cmpsl
dec
push
sub
jle
xchg
adc
xchg
ficoms
and
out
mov
rcrl
movsb
jle
add
sahf
popa
xchg
loopne
cs
sbb
mov
sbb
movsl
shlb
mov
out
sub
push
dec
popf
femms
mull
fwait
pusha
pop
mov
lock
faddp
mov
jbe
test
xchg
add
inc
fsubr
movsb
push
pushf
or
int
movsb
in
frstor
or
cmp
repz
cmp
aad
push
inc
pop
xor
adc
adcl
xchg
repz
popl
sub
push
sub
scas
sub
cmpsl
cmpsl
mov
fsubrl
stos
dec
stos
ret
add
test
pop
lods
adc
js
jl
sbb
xchg
cmp
jne
jno
inc
clc
jmp
rclb
stos
jb
dec
out
add
ss
movsl
and
or
xor
sbb
sbb
jp
xchg
lds
add
sub
mov
out
stos
loope
sub
mov
mov
jo
inc
inc
mov
mov
sub
push
mov
and
daa
lock
inc
test
clc
inc
jns
cwtl
sub
xchg
fisttpll
cmp
flds
xor
ljmp
mov
lock
lret
lods
pop
fwait
sbb
lods
std
mov
inc
add
fadd
popf
mov
cmp
das
cmp
int
inc
mov
mov
stc
xchg
add
and
test
and
add
dec
mov
lahf
ds
pop
jnp
mov
sarl
mov
rcrb
dec
xor
pop
inc
outsb
scas
cmp
rcrl
stos
add
pusha
mov
cmp
insl
xchg
push
mov
xlat
sahf
out
out
xchg
xor
test
cmpsl
pop
test
pop
and
shll
ret
xchg
mov
aas
xchg
add
add
pusha
push
scas
repnz
mov
lret
add
pop
sbb
andl
mov
mov
cmc
cli
nopl
xor
pusha
repz
pop
mov
clc
mov
add
push
add
out
mov
mov
adc
add
or
and
and
xchg
enter
inc
addl
mov
test
cmp
pop
daa
xlat
cmp
xchg
xchg
decl
push
mov
shll
sahf
adc
int3
cld
ds
nop
les
adc
xchg
jecxz
add
enter
shlb
divb
out
gs
out
cld
movb
mov
adc
aas
jmp
mov
movsl
xor
push
nop
sarb
subb
pop
lods
mov
mov
cs
cwtl
ds
bound
ret
adc
push
inc
xchg
adc
enter
add
xor
loopne
cs
mov
add
inc
push
jb
leave
pop
aas
rcrb
test
pusha
mov
cmc
ret
cmc
cmp
mov
fidivrs
test
jne
xchg
inc
rcr
xor
sti
adc
test
shrb
cmp
leave
mov
cmp
mov
pusha
test
xor
lcall
push
push
adc
cwtl
xor
in
mov
xor
int
cmp
mov
jae
jp
pop
call
cmp
add
pushf
shl
xor
cs
xor
sub
cmp
into
sbb
std
push
mov
mov
dec
loop
inc
leave
cmc
clc
out
adc
cmpsl
cmp
pusha
pop
outsb
fistpll
xchg
jmp
ss
lret
fldl
ss
or
mov
das
mov
pop
lret
ret
jecxz
dec
into
inc
sbb
jbe
pop
addr16
sub
cmp
or
mov
cmpsl
popf
pushf
sbb
mov
lret
cmpsl
xchg
lahf
in
notb
xchg
xchg
sub
inc
push
mov
xlat
bound
fnstsw
jb
push
fstps
dec
mov
adc
inc
je
cmp
insl
adc
mov
push
mov
sahf
popa
mov
int
js
mov
sbb
sahf
sub
test
dec
dec
out
js
and
shl
or
sbb
std
add
mov
cmp
pop
ret
cwtl
jns
xor
jno
cmp
int
mov
mov
jnp
insl
add
mov
push
arpl
pop
push
and
fistpl
push
insl
stc
push
cli
rorl
adc
pop
push
sbb
jge
js
mov
inc
fstpl
mov
in
inc
push
or
ror
sbb
std
xor
js
cltd
std
nop
nop
jl
push
ficoml
arpl
xor
fnsave
cmpl
bound
enter
cltd
cmp
pop
mov
cwtl
hlt
popa
jecxz
or
push
repz
test
inc
sbb
jp
bound
enter
mov
pop
stos
imul
xor
cltd
ljmp
call
scas
xor
pushl
scas
inc
mov
pop
pop
dec
scas
pop
jne
subb
xor
daa
outsl
orb
jnp
mov
inc
push
mov
adc
dec
inc
sub
stos
lods
adc
out
orb
cwtl
cmp
mov
mov
jge
mov
movsl
push
aaa
cwtl
cmp
sub
cmpl
mov
xchg
sub
hlt
mov
popaw
inc
pop
addr16
lret
push
sbb
loop
sahf
movsb
mov
mov
sub
sub
mov
mov
pop
mov
mov
nop
inc
push
mov
das
xor
inc
stos
mov
int3
add
cld
imul
mov
jne
outsl
add
test
outsb
inc
shrb
cmp
pop
cs
orl
mov
and
lcall
and
sbb
mov
jl
js
stos
sub
out
dec
repz
sbb
insl
add
sub
pop
mov
cmp
loope
add
shl
or
loop
fs
pop
daa
mov
sti
or
icebp
insl
icebp
imul
testl
nop
and
iret
push
jmp
pusha
mov
das
cli
dec
mov
popf
das
fidivl
mov
out
cmp
mov
mov
ret
les
movsl
mov
dec
xchg
test
sub
mov
ss
mov
mov
mov
icebp
or
jbe
ffree
mov
push
cmp
vmread
and
movsl
or
pop
jge
sub
movsl
push
xchg
loope
pop
jns
loop
push
cmpsl
cmpl
cld
scas
mov
pop
int
add
sbb
out
je
fsubrs
cmp
add
push
popf
inc
mov
cs
sarl
sahf
loopne
cld
pop
and
out
xor
pop
cwtl
cmp
mov
sub
push
mov
clc
fwait
cs
adc
cwtl
inc
nop
jecxz
dec
jp
movsl
les
out
xor
fwait
loope
pop
mov
push
inc
mov
pop
inc
aam
sub
mov
jmp
ljmp
test
xchg
jl
ss
fsubp
mov
pop
jns
xchg
adc
and
popa
xchg
xchg
subb
inc
lret
mov
xchg
lcall
loopne
test
push
cwtl
mov
repz
pop
aam
jge
add
arpl
inc
xchg
inc
mov
mov
push
add
clc
mov
popa
and
ret
push
lcall
xor
int3
ljmp
jae
in
mov
movsl
xlat
in
jo
lret
clc
inc
add
mov
adc
test
push
daa
lcall
cmp
jecxz
inc
popf
into
movl
out
pop
add
scas
aad
out
fcoml
add
pop
mov
test
inc
repnz
dec
data16
mov
int
nop
fcmovb
mul
dec
sub
divl
push
inc
push
bound
xchg
test
out
idivl
rorl
addr16
jne
add
fsubl
aaa
bound
sub
icebp
mov
cwtl
popa
mov
inc
leave
pop
sub
std
add
mov
cmc
mov
fistl
sbb
idiv
icebp
adcl
test
inc
setno
push
fiaddl
mov
and
clc
dec
xlat
adc
andl
orl
sub
test
sbb
mov
mov
popa
mov
nop
mov
mov
ja
cmp
xchg
cmp
mov
scas
sti
push
inc
push
bound
xchg
push
jno
sub
xor
stc
jnp
cmp
addb
xor
sbb
mov
push
cmc
lcall
add
jae
jnp
lcall
and
add
add
adc
mov
inc
push
cli
lahf
sub
fnstenv
fcmovb
iret
inc
movsl
inc
movsl
and
jbe
add
aad
into
jl
mov
mov
out
scas
mov
test
inc
mov
xor
movsl
xlat
push
mov
out
dec
mul
lds
out
mov
fdiv
ficoms
clc
ret
cld
xor
test
andl
inc
xchg
sbb
pop
push
jae
pop
lea
aam
inc
add
push
xchg
jmp
lahf
adc
mov
xorb
das
add
mov
mov
adcl
and
push
cmovb
movsl
mov
xchg
xor
and
lcall
arpl
icebp
or
adc
xlat
push
test
xchg
movsl
mov
fsubl
push
iret
push
jmp
pop
sub
jp
mov
push
sbb
jle
repz
pop
push
push
outsb
insl
push
lret
cmp
rol
pop
jb
mov
push
sub
xor
cwtl
or
int
add
movsl
mov
sbb
pop
mov
jo
cmp
xor
mov
sti
push
and
data16
and
adcb
jg
fcmovnb
push
lcall
rol
sbb
pop
out
pop
add
adc
inc
fstl
mov
pop
add
pop
mov
cli
xor
test
sub
imul
iret
mov
pop
dec
or
mov
mov
adc
lea
negb
icebp
mov
imul
mov
and
icebp
cs
fisubrs
push
in
outsb
jecxz
push
jmp
imul
jns
xchg
pop
push
mov
out
js
cmp
xor
ret
rcrb
push
adc
sbbb
je
shll
sti
popa
add
mov
and
and
sub
mov
scas
inc
pop
xor
aaa
rcrl
pop
fsubr
sbb
cli
sbbb
fidivrl
mov
popf
push
cmp
repnz
push
mov
sbb
push
adc
pop
or
ljmp
mov
ficoms
inc
mov
adc
outsl
jl
lahf
xchg
xor
mov
fimull
ffreep
jbe
aaa
xchg
gs
jl
pusha
mov
xchg
push
pushf
add
add
inc
mov
mov
cmp
pop
and
push
add
xchg
xchg
xor
push
xor
test
rclb
inc
push
xor
cmpsl
pushf
hlt
dec
mov
sbb
int
cmpsb
mov
or
sub
arpl
test
adcl
xor
mov
and
lcall
xor
or
pop
test
dec
jl
jnp
cld
stos
mov
push
andl
pop
sbb
adc
jl
xchg
enter
sub
stos
mov
pop
inc
xchg
ret
js
or
icebp
dec
popf
push
jns
adc
xor
sbb
mov
fdivr
stc
mov
into
push
stc
xor
aaa
scas
jmp
fldt
mov
movsb
ficoms
outsb
bsf
cmpsl
inc
push
rorl
stc
out
test
pop
cmc
daa
cmp
iret
sub
xor
push
movsl
dec
lea
mov
inc
cmp
das
inc
ret
movsl
frstor
push
pop
rcrl
inc
jp
mov
mov
mov
mov
cmp
sbbb
mov
dec
sbb
add
scas
cwtl
testl
lcall
mov
mov
imul
rclb
mov
push
faddp
jnp
sub
or
es
jne
shrb
push
sbb
cmp
scas
imul
int3
out
mov
mov
sbb
test
and
fistl
sbbl
jmp
inc
sub
mov
cmp
roll
xchg
inc
fs
addr16
inc
and
adc
sti
test
xor
cmpl
mov
adc
movsl
pushf
ficomps
mov
mov
mov
xchg
pop
add
dec
inc
xchg
leave
inc
xor
xor
int3
stc
mov
call
sub
lcall
mov
inc
dec
into
mov
iret
cmpb
adc
sbb
fadds
or
es
loope
test
push
inc
lcall
frstor
bound
imul
xchg
mov
jo
pop
mov
push
fadd
ja
shlb
rol
out
out
adc
xor
mov
add
jle
orb
hlt
push
and
jge
jbe
pop
mov
shll
mov
push
jle
fsubs
and
stos
ret
cmp
cmp
mov
jmp
out
mov
ret
push
lds
jo
inc
cmpsb
mov
pop
sti
lret
xchg
movsw
or
decb
mov
idivl
mov
in
rclb
pop
jp
adc
lods
pop
xchg
aas
mov
outsb
mov
sbb
xchg
jl
and
inc
xchg
iret
inc
fnstcw
add
ficoml
xor
sub
mov
sti
cmp
das
rcrl
int
adcb
movsl
xor
and
or
ja
mov
sub
addr16
je
pop
call
rcrl
adc
sub
sahf
dec
mov
push
sub
lret
sarl
pop
loopne
int3
incb
adc
call
mov
ret
cld
xchg
mov
and
push
adcl
add
loopne
adcb
adc
cwtl
mov
adc
jo
fs
imul
and
dec
add
inc
or
in
pop
es
push
and
dec
xor
push
pop
and
inc
mov
mov
insb
mov
mov
sbb
adc
pop
mov
jle
xchg
sahf
stos
call
pop
mov
jle
lcall
mov
adc
xor
movsl
add
stc
out
push
leave
inc
clc
adc
popa
fcoml
movsb
xlat
inc
adc
jae
mov
jo
or
fisubl
stos
push
js
in
leave
or
dec
jl
and
ljmp
fcmovnb
fnstcw
cmc
push
ja
cli
cmpsl
mov
test
sub
lcall
mov
stos
js
xchg
sbb
cltd
xchg
dec
and
xor
and
mov
jmp
or
clc
sub
popa
pushf
cli
inc
and
mov
mov
roll
lcall
nop
inc
clc
dec
ds
and
pop
xor
xor
inc
nop
test
jg
cwtl
je
cli
mov
loopne
cmp
or
cltd
mov
repz
sbbl
mov
mov
jns
add
imul
mov
push
push
sbb
xorb
or
cmp
pop
jg
cmp
mov
in
push
repnz
inc
jb
nop
arpl
std
mov
lods
subb
push
xor
sub
pop
add
insl
gs
inc
movsl
addr16
mov
xchg
mov
mov
callw
pop
mov
mov
jl
nop
idivb
fcompl
cmc
xchg
sahf
adc
mov
fs
testl
int3
imul
fucomi
rclb
pop
test
out
andl
popf
lods
loop
stc
push
add
sahf
mov
and
or
and
test
insl
data16
push
popa
lcall
adc
mov
sbb
jo
inc
stc
andl
mov
fisubrs
inc
js
lea
push
rcll
jl
sbb
pop
cmp
push
pop
loop
pushl
fdivr
popf
adc
push
jns
pop
int
jecxz
jl
mov
inc
stos
push
pop
sbb
arpl
sbb
or
scas
loope
jmp
sub
mov
nop
mov
iret
inc
addr16
sbb
mov
xchg
loopne
sahf
je
rolb
xor
rclb
sahf
jp
adc
and
adc
inc
leave
mov
jno
mov
int
mov
cmp
push
add
cwtl
pop
pop
fisubs
test
cmp
add
fwait
xchg
pop
push
pusha
fisubrs
movsl
fadd
mov
sti
adc
stc
lea
cli
stc
stos
jnp
popf
pop
cmp
mov
movsb
pop
jl
xchg
orb
add
jae
roll
and
filds
out
cli
xor
sub
xor
pop
xchg
and
andb
jge
cli
iret
add
or
imul
rorb
aaa
bound
xor
xchg
pop
inc
out
test
xor
sub
loopne
addr16
testl
cmp
add
leave
mov
pop
mov
movsl
stos
sub
scas
loope
push
push
pop
and
movsl
mov
mov
rorl
jge
add
popf
or
push
adc
mov
sbb
dec
dec
inc
and
sub
inc
mov
mov
mov
pop
inc
pmaxub
cmpl
movsl
and
pop
sbb
push
shl
gs
or
jmp
scas
mov
sarl
popa
mov
dec
cmp
push
sahf
dec
icebp
mov
andb
fs
mov
and
dec
push
sbb
and
mov
mov
mov
adc
lods
test
xor
jecxz
popf
and
jge
xor
mov
out
mov
sbb
in
jae
and
push
sbb
mov
xor
xlat
pop
push
cld
sub
cld
mov
or
mov
mov
sbb
jmp
xchg
cli
and
inc
sbb
cmpsb
js
adc
lea
mov
mov
sarb
inc
popa
leave
push
jns
lret
jl
mov
sub
add
sti
and
popa
add
and
push
mov
jo
pop
dec
sub
xchg
in
push
popa
pushf
sbb
xchg
inc
xor
pop
mov
shr
inc
mov
dec
pop
jo
test
nop
and
jle
xchg
fldcw
ja
mov
or
sub
pop
sub
aam
in
inc
sub
cli
jp
or
out
fadd
xlat
daa
dec
test
test
jbe
mov
mov
xor
xor
fstpl
jp
rcrb
andl
xor
and
test
sarl
shlb
and
add
jmp
push
scas
adc
xor
xchg
cmp
xor
lock
aas
cs
popf
shl
test
add
scas
mov
popf
sbb
shrl
repz
dec
incb
sub
jne
movsl
or
or
addr16
push
mov
rol
test
cmp
test
mov
fxch
xor
lret
test
and
scas
sbb
scas
es
cld
cmpb
xorl
sub
mov
test
mov
jecxz
adc
test
jns
add
insb
jbe
out
jnp
into
xorb
fnstsw
push
out
xor
mov
dec
cltd
and
xchg
jno
cmp
and
add
xor
inc
fdivrl
and
mov
xor
insl
xchg
es
mov
mov
pop
push
xchg
mov
mov
daa
cwtl
mov
shlb
daa
pop
xor
mov
mov
add
ljmp
mov
mov
int3
mov
repz
mov
sbb
addl
fcompl
xor
test
adc
or
jp
fcmovnb
ja
mov
fbld
popf
cmp
das
push
push
roll
mov
test
pop
ds
cli
pop
cltd
int3
mov
fsubs
jp
jg
sub
notl
mov
addl
aas
mov
mov
fpatan
mov
movsl
pcmpeqd
test
ds
jl
test
mov
cmpl
pop
push
std
mov
cmp
jl
rcrb
outsl
and
push
xchg
xor
mov
outsl
xor
add
xchg
cmp
movb
pop
fstp
jb
mov
jl
jle
pusha
aas
insl
push
out
outsl
mov
les
and
mov
lods
cs
push
stc
out
sti
mov
shufps
sub
fsubs
adc
test
repz
push
adc
test
movsb
jp
clc
cmc
cmp
shll
mov
push
pop
push
addb
xchg
cmp
sbb
rcl
adc
push
jo
mov
jmp
icebp
into
lcall
mov
xchg
mov
mov
rcr
sub
jno
mov
push
call
test
inc
cmp
mov
movsl
sub
sub
cmp
dec
test
mov
popf
jne
int3
sarl
addl
push
pop
popa
add
pop
add
je
fmulp
or
loop
fdivl
movsl
fdivrs
cmp
test
out
push
inc
leave
adc
in
adcb
mov
push
jmp
push
dec
cmp
inc
stos
and
jmp
xchg
mov
add
pop
popa
xor
xor
push
ds
hlt
mov
pop
pop
and
adc
push
dec
scas
sub
or
jb
pop
ret
mulb
push
stos
mov
adc
fldenv
aaa
xchg
inc
shl
sarl
push
cmpsl
pop
adc
shll
cmpsb
cmpsb
test
addb
mov
inc
jle
mov
and
js
stos
lock
sbb
mov
jp
unpcklps
sbb
pop
cs
arpl
out
xor
dec
imul
out
dec
sbb
ds
gs
jns
loop
or
dec
mov
pop
mov
outsl
cmp
cli
jae
sub
imulb
cwtl
and
pop
outsb
mov
mov
div
inc
xor
pop
sbb
fiadds
scas
movsl
jl
loope
sub
add
rcrl
cli
push
pop
jecxz
adc
mov
iret
and
mov
testl
adc
andb
fildll
movsl
push
mov
je
push
jp
call
xchg
add
add
jb
adc
lcall
fstpt
je
lods
addb
or
aaa
adc
subl
or
push
aad
outsl
lcall
sub
repnz
sub
push
pop
mov
std
flds
outsb
mul
fst
mov
outsl
mov
inc
adcb
or
push
xchg
js
xchg
xchg
cmp
popa
stc
adcb
inc
inc
sub
loop
dec
fdivrs
imul
dec
shlb
sbb
jmp
jmp
jne
mov
clc
mov
dec
mov
daa
jmp
testb
sub
mov
loop,pn
lcall
adc
ficoml
sub
aaa
xchg
leave
mov
sub
nop
mov
jecxz
adc
jp
test
fneni(8087
lahf
cmp
jp
scas
cmpsl
ljmp
inc
es
in
cmp
and
out
add
test
cmpsb
hlt
shll
push
mov
mov
rclb
mov
push
fiaddl
xchg
sub
adc
inc
cmpsl
jne
lret
xorl
outsl
orl
in
mov
add
dec
pop
jecxz
mov
test
mov
inc
fisubrl
adc
lahf
andb
xchg
imul
sbb
ja
inc
popl
inc
mov
fs
sbb
mov
hlt
imul
mov
mov
mov
mov
mov
hlt
movsl
mov
aad
sub
cmp
pop
out
cmp
aas
cmp
mov
cmpsb
inc
adc
fstpl
cs
out
lea
scas
test
xor
mov
lahf
rcll
jns
fs
decl
pusha
and
movb
or
xor
out
cmp
je
jb
push
sarl
rcrb
dec
mov
and
cmp
mov
push
mov
add
push
xchg
clc
xchg
jns
inc
adc
push
pop
arpl
repz
adc
jl
inc
mov
dec
cmp
mov
xor
xchg
mov
and
fidivrl
repnz
lea
jbe
lahf
pop
ss
popf
in
push
push
mov
loope
neg
jmp
stos
pop
repnz
fs
inc
stos
clc
xchg
setb
aas
mov
popa
sarl
and
inc
aas
jne
or
imul
lods
mov
add
lea
subb
dec
aam
inc
mov
sub
das
inc
xor
jg
pop
jne
cli
jnp
mov
jl
adc
and
jle
push
shll
decb
arpl
add
pop
sub
fwait
popa
inc
int3
mov
cmp
int
mov
xor
jg
and
insl
add
add
mov
es
push
cld
lcall
jp
and
mov
cmp
addr16
dec
xor
lret
in
arpl
jle
fldt
add
or
or
nop
sbb
lock
mov
cmpsl
mov
dec
jb
mov
sarl
mov
shlb
shr
dec
pop
insl
clc
popa
jp
sahf
pop
mov
mov
in
adc
inc
and
popa
scas
add
lods
popa
rcrl
mov
mov
es
sarl
mulb
mov
sahf
mov
and
movsl
insl
add
cmp
jle
loope
pop
je
icebp
das
jle
pop
outsb
cmp
dec
test
insl
mov
adc
mov
arpl
xchg
add
mov
mov
mov
lds
inc
ds
sub
cmc
ja
fsubrs
add
fstpt
movsb
xor
out
mov
mov
xor
scas
mov
jo
aad
mov
js
inc
in
xchg
lods
jb
test
cld
and
bound
pop
adc
popa
pavgb
addr16
inc
cld
cs
mov
shll
nop
pop
inc
push
push
inc
outsl
pop
mov
test
pushf
or
jg
cli
adc
jecxz
fwait
pushf
mov
sub
push
push
stos
addr16
movsb
mov
out
jno
pop
adc
or
mov
cmc
loopne
loopne
cmpsb
stos
add
test
sub
bound
jmp
aaa
xor
sti
push
mov
and
cli
sbb
cmpsb
mull
gs
pop
inc
add
sbb
inc
rol
pop
aam
mov
pop
scas
shrb
jmp
add
jne
cltd
cmp
xor
shll
cmp
jb
jo
sbb
jno
mov
rclb
cmp
and
hlt
test
ss
lods
sub
nop
mov
jp
cmp
xor
pop
out
xor
roll
mov
roll
jnp
inc
xor
pop
xorl
rol
sbb
repnz
rolb
xchg
pop
sub
mov
push
daa
pop
add
lods
rorl
sbb
inc
xchg
mov
stos
mov
adc
dec
sahf
mov
inc
inc
pop
push
mov
cmpsb
jnp
into
xchg
push
sbb
pop
adc
pop
ljmp
mov
pop
jge
add
add
cmp
scas
rorl
les
lods
in
mov
mov
stos
dec
jmp
and
mov
je
xchg
mov
inc
addr16
mov
sub
add
aam
add
jecxz
gs
sbb
dec
lods
jb
fidivl
mov
inc
mov
mov
inc
mov
xchg
fld
or
inc
insl
inc
sub
popa
pop
mov
daa
movsl
aaa
mov
mov
push
jb
in
mov
daa
cmp
add
fwait
cmp
adc
add
cmp
movsl
icebp
scas
and
jl
daa
jg
fwait
mov
cmpsb
mov
popa
mov
inc
add
mov
adc
adcb
bnd
push
sbb
mov
stos
inc
orl
lds
xchg
loope
pop
mov
imul
scas
pop
pop
movsb
cmpsb
xchg
outsl
mov
mov
jg
pcmpgtw
aas
cmp
inc
dec
fmull
stos
jg
mov
pop
sub
add
pop
mov
popa
ret
js
pop
fisttpll
popf
pushf
jmp
mov
xor
inc
sti
adc
inc
cmpsb
fstpl
and
mov
lea
xchg
fsubs
pop
push
push
push
add
imul
orl
and
mov
sbb
leave
ficoml
popf
test
pop
add
out
das
mov
dec
ret
imul
outsb
dec
ret
and
pop
and
movsl
gs
ds
cmpb
subl
inc
btc
movsl
push
mov
cmp
adc
popf
sbb
or
inc
add
sbb
clc
mov
std
negb
js
arpl
xor
mov
mov
mov
inc
xchg
into
mov
dec
xchg
ja
lods
cli
and
stc
cmp
dec
pop
dec
cltd
and
push
dec
mov
mov
jp
jb
jmp
shrb
mov
xor
jp
adc
ljmp
inc
hlt
jbe
pop
push
in
inc
adc
cmp
lods
and
std
cmpl
sbb
or
sub
mov
cmp
out
data16
push
sub
and
jb
bound
sahf
and
cmp
mov
sub
loope
in
fisubrl
std
mov
jle
stos
xchg
xor
mov
loopne
test
add
imul
xchg
inc
cld
mov
and
pop
test
sbb
mov
mov
cmpb
pop
movsl
mov
cld
mov
mov
add
dec
dec
mov
push
add
xchg
lock
shl
aas
add
push
repnz
mov
cwtl
adc
nop
pop
pop
cld
inc
pushf
dec
adc
imul
inc
cwtl
sub
xchg
pop
and
xor
xor
stos
mov
cwtl
lret
dec
adc
sbbb
xchg
out
loop
jl
pop
iret
fldl
outsb
mov
lea
jecxz
and
idivl
inc
dec
jo
jg
sub
movsl
cmpsl
lods
movsb
stos
jnp
push
cmp
push
jle
shll
arpl
and
push
jp
jle
lods
inc
pop
sub
dec
lahf
xor
or
xchg
fsubr
xor
sbb
push
mov
cmp
push
pop
push
int3
jo
out
jne
sti
mov
push
insl
stos
ss
mov
popl
cmp
mov
sub
cmp
mov
dec
divb
iret
fdivl
mov
mov
shlb
out
sub
addb
nop
subb
xor
sti
daa
movsl
pop
push
testb
mov
loope
xor
insl
mov
adc
adc
dec
dec
add
iret
mov
sbb
sbb
jmp
cmp
faddl
stos
lret
push
xor
cmpsl
aad
loop
mov
shlb
sbb
adc
mov
mov
sub
aam
dec
push
pop
popa
xchg
dec
inc
sti
out
loopne
push
xor
lahf
movsl
xchg
push
pushf
movsb
scas
pop
jmp
xchg
cmpsb
add
mov
out
add
xchg
out
sbb
xchg
negl
sti
pop
out
ficompl
cli
mov
lret
insl
fnstsw
loopne
lods
shlb
jmp
std
push
loopne
xchg
test
pop
loope
out
mov
pop
sub
cmp
cmp
cmpsl
jle
add
test
add
mov
push
scas
mov
scas
mov
shlb
inc
and
mov
adc
mov
loope
pop
mov
movsb
mov
push
es
ret
mov
sti
adc
xor
movsl
scas
xor
sahf
ljmp
mov
fnstenv
stos
mov
xor
test
rcrb
repz
pop
mov
mov
xchg
cltd
aaa
movl
push
mov
stc
pop
aad
mov
adc
and
pushl
ret
mov
dec
ljmp
push
pop
daa
cmp
sbb
mov
scas
mov
js
jns
ret
aaa
mov
out
popa
jne
mov
test
repnz
jp
aas
xor
mov
aam
scas
mov
jp
sub
popa
inc
jbe
aam
pushf
cmp
mov
nop
mov
rolb
nop
cmpsb
test
dec
in
sbb
sahf
add
gs
adc
pushf
jno
jp
shll
sub
mov
dec
pop
adc
ds
mov
repnz
mov
mov
jle
arpl
je
arpl
mov
push
jp
div
sbb
shlb
cs
sahf
in
aam
adc
rcr
adc
xor
jb
in
sbb
lods
xor
out
cmp
mov
movsl
adc
mov
adc
mov
scas
test
cmp
xor
mov
scas
mov
and
jp
sahf
cld
ja
mov
or
sub
cmpsb
shll
xchg
shrb
out
pop
mov
rol
sahf
movsl
shr
xlat
mov
inc
dec
jecxz
cmp
popa
jns
loopne
sub
fs
jbe
fstp
or
xor
movsl
rcrl
cwtl
jg
ret
cmp
lea
cmpsb
rol
or
and
repz
pushf
ds
lods
dec
daa
scas
scas
xchg
mov
jle
popa
push
cmpsl
scas
and
ret
add
outsl
pop
icebp
mov
jle
xor
jl
mov
mov
add
nop
icebp
sahf
ljmp
cmp
mov
jecxz
mov
mov
mov
negb
test
sahf
cli
jnp
stos
sahf
shll
aas
add
cmpsb
mov
rcrl
out
mov
rolb
stos
gs
scas
sahf
and
jb
cmc
push
shlb
movsb
mov
push
push
push
sar
cmp
cmp
lods
mov
lock
cmp
xor
stos
gs
mov
mov
cld
fdivrs
and
adc
jmp
cmp
cmpsb
xor
or
or
mov
cmp
xor
orb
jno
sub
sahf
out
cltd
repnz
xchg
pop
sarl
push
rcrb
cmc
mov
ret
sub
ffree
stos
xor
mov
push
mov
lcall
je
ss
mov
scas
jno
mov
mov
sahf
fcmovne
shlb
jp
pop
xor
mov
rorl
mov
jecxz
test
or
cmpsb
mov
mov
and
lods
sub
add
xor
pop
mov
subl
pop
xor
test
mov
movsb
sar
aad
movsb
fists
inc
mov
insb
in
xor
push
sahf
aaa
shlb
sbb
adc
pusha
aas
mov
adc
mov
fucom
mov
mov
adc
mov
or
cmp
sub
mov
rol
sbb
jle
icebp
popf
daa
cltd
ret
rol
loope
mov
rcrl
loope
sub
add
xor
lahf
push
sarb
mov
add
out
adc
mov
adc
sahf
mov
enter
xchg
mov
xor
jb
pushf
cmc
sahf
lahf
das
mov
jp
int3
push
stos
shrb
sub
mov
arpl
ja
jle
inc
mov
imul
jnp
stc
in
mov
stos
inc
push
adc
mov
xor
in
mov
add
push
lahf
jbe
push
add
mov
sub
popf
cmpsb
inc
add
mov
cmp
shll
jle,pt
mov
adc
or
jns
mov
scas
mov
movsl
cmp
mov
sahf
out
mov
ljmp
mov
sub
rcll
mov
roll
mov
adc
mov
shrl
out
mov
lods
ds
pop
sbb
fmuls
sbb
pop
mov
mov
sahf
ret
mov
lock
jno
push
lods
mov
mov
repnz
mov
popa
out
lds
subl
stc
mov
mov
das
stc
mov
mov
mov
cmp
pop
leave
aas
xor
sahf
cmc
jne
lcall
sbb
pop
pop
jl
ret
and
stos
xor
pop
mov
inc
test
jp
push
popa
inc
mov
cli
jno
scas
movsl
jmp
flds
mov
cmpsb
frstor
pop
jle
pop
test
repz
adc
stos
mov
cwtl
sub
mov
mov
sub
xor
sahf
mov
inc
jp
sahf
aas
cmp
sahf
mov
inc
jp
sahf
inc
cmp
out
mov
sahf
sub
out
outsb
cmpsl
shrb
in
mov
out
add
mov
cmp
xor
mov
shlb
sahf
lods
inc
inc
in
inc
xchg
mov
sar
daa
xor
ds
add
jp
inc
inc
dec
mov
cmp
jbe
shlb
mov
mov
or
inc
sbb
rorl
movsb
data16
pusha
sub
mov
sahf
sub
mov
stos
mov
rcll
inc
nop
mov
mov
mov
sarb
cwtl
mov
cmp
add
shlb
sahf
cmp
sub
stos
jp
pop
xor
mov
jp,pn
jp
sahf
repz
stc
mov
mov
mov
shlb
mov
sarb
sahf
lods
inc
daa
dec
inc
xor
lock
mov
scas
inc
and
mov
jl
jbe
shrb
jg
add
xor
leave
cli
xchg
scas
rorl
pop
lcall
jecxz
cmp
ja
mov
fidivs
sub
lret
mov
mov
xchg
test
scas
sarb
jns
mov
inc
lods
ret
xor
mov
sbb
test
xor
scas
test
mov
or
sub
sti
or
rcl
mov
jle
mov
out
scas
jp
sbb
mov
ret
ljmp
mov
test
repnz
neg
fdivs
ret
mov
mov
shll
mov
test
add
addr16
cmp
rol
fidivs
lds
mov
mov
or
ficomps
adc
sub
push
fsubrp
cld
pop
xor
inc
nop
adc
stc
shll
fdivs
xchg
mov
add
push
andb
cmp
push
popa
mov
xor
or
clc
cmp
adc
cmp
sahf
mov
mov
mov
mov
test
mov
addr16
popf
mov
pop
mov
xchg
pushf
aas
lods
jge
lahf
mov
mov
sahf
sarb
lret
mov
pop
imul
mov
mov
pop
fucom
test
cmp
fcom
subl
mov
stc
and
mov
xchg
jmp
scas
adc
jnp
push
jae
adc
shrb
test
adc
mov
rorl
mov
sub
mov
hlt
mov
xchg
cli
arpl
xchg
mov
mov
cmp
mov
imul
pop
jmp
cmp
or
scas
mov
adc
mov
fwait
mov
dec
rcrl
mov
call
xor
aas
jl
xor
ss
sahf
scas
mov
or
ret
xchg
ds
shr
ret
jp
add
decb
imul
stos
es
xchg
cmpsb
roll
movsl
mov
movsl
mov
out
pop
mov
pop
inc
adc
jo
roll
push
inc
lahf
shrl
mov
mov
in
nop
lods
sarb
shlb
addr16
cmp
cmp
mov
adc
std
data16
mov
dec
xchg
fists
cld
pop
clc
movsb
xor
mov
insb
movsl
ja
in
jg
movsl
mov
aas
push
stos
jo
scas
xor
scas
or
mov
out
jnp
leave
sahf
mov
mov
mov
movsb
xor
adc
pop
mov
fs
mov
xorb
jg
cmp
in
popa
fidivs
sahf
inc
lahf
shrb
popa
loop
dec
data16
sub
dec
jle
cld
inc
aas
sarb
sti
xor
jecxz
pop
push
lret
mov
and
xor
mov
mov
sub
pop
shrb
push
sub
xor
lcall
xor
stc
cmp
mov
ret
cmp
adc
push
sti
imull
jmp
jne
int
cwtl
jecxz
sbb
inc
mov
std
sub
pop
mov
mov
mov
and
pop
nop
lea
daa
lcall
adc
mov
stos
mov
arpl
ret
jp
std
jg
xor
mov
hlt
adc
shll
sarl
mov
cmp
mov
inc
movsb
mov
scas
mov
mov
fisttpll
cli
sbb
scas
cmpsl
and
mov
pop
xchg
dec
mov
pop
sbb
int3
imul
lahf
fwait
lods
push
mov
ret
mov
repnz
mov
mov
inc
mov
mov
nop
sarl
cmc
mov
sbb
xor
jge
inc
sar
scas
mov
cmpsl
cmp
mov
es
mov
mov
sub
pop
mov
adc
hlt
cmp
inc
scas
mov
mov
mov
shr
adc
shlb
mov
das
sub
clc
xchg
hlt
popa
test
inc
mov
out
movd
inc
lods
pop
pop
pop
popf
mov
rorl
cld
adc
or
add
stos
test
popa
in
xchg
mov
or
dec
andl
outsb
push
inc
lahf
or
inc
mov
imul
adc
sahf
mov
rclb
mov
dec
sahf
mov
mov
in
mov
inc
add
in
mov
push
adc
mov
and
or
lret
xor
sahf
mov
mov
and
sahf
bnd
scas
or
xorb
shlb
pop
push
pushf
pop
mov
cwtl
stos
mov
jnp
movsb
fsubl
mov
sarl
mov
pushf
popa
mov
addr16
dec
mov
jp
sahf
jno
test
jbe
inc
ds
or
jp
sahf
jns
stos
xor
jle
sbb
mov
xor
outsb
add
jge
popa
jp
sahf
shll
mov
inc
scas
xor
sahf
sub
xor
ret
out
jmp
xorb
jle
mov
insb
faddp
sub
lea
jp
jae
jmp
mov
sahf
mov
add
adc
ja
aad
scas
fwait
xor
add
scas
mov
mov
add
sub
repnz
push
add
aad
scas
mov
out
xchg
subb
and
add
xor
cmp
jns
data16
mov
fidivrs
pop
fnsave
lds
js
xor
mov
shl
shlb
mov
addb
fldcw
and
call
mov
out
jp
sahf
fdivrs
mov
roll
jmp
xchg
mov
inc
test
xor
jp
mov
sbb
cmp
xor
std
mov
stos
sbb
jl
mov
and
nop
inc
rolb
jno
popa
sarl
and
shll
sbb
test
mov
ret
mov
sbb
jl
mov
sub
fsubrl
pop
pushf
jg
cmpb
aas
add
out
mov
push
mov
sti
scas
test
es
mov
fdivrl
mov
pop
cli
iret
mov
and
add
mov
xor
movsl
enter
xchg
ljmp
out
and
repnz
sahf
aam
mov
idivb
data16
repnz
mov
xchg
stos
mov
xchg
test
sub
icebp
jle
pop
pop
in
sahf
stos
rorb
out
test
sbb
shll
push
leave
icebp
aas
xchg
das
inc
sub
xchg
and
imull
mov
mov
sbb
adc
cmp
cmp
push
ss
xchg
fwait
in
rclb
push
push
repnz
test
mov
in
lds
push
pop
repnz
shrb
test
rcr
fcoml
lea
mov
pop
xchg
scas
rcll
ss
test
cmp
ret
jle
mov
shlb
std
icebp
scas
ret
fwait
cwtl
jp
push
mov
nop
ret
imul
mov
ja
mov
cmp
jp
mov
mov
jmp
inc
mov
pop
ss
popa
shlb
mov
jno
subl
mov
cmp
mov
cmp
scas
jmp
pop
mov
mov
mov
pop
mov
mov
cmp
jnp
mov
adc
movsb
push
mov
cwtl
mov
negl
enter
cmp
fdivrl
mov
mov
inc
das
movsb
mov
add
jbe
les
mov
test
cmp
aas
inc
andl
ljmp
mov
mov
adc
repnz
jbe
sub
mov
shll
mov
mov
outsb
ret
cmp
mov
rcl
pushf
mov
xchg
mov
mov
add
push
scas
mov
ret
out
dec
mov
rol
adc
daa
mov
cwtl
lods
jp
lea
xchg
fisubrs
lcall
cmp
stc
lea
mov
js
je
sbb
jle
sbb
pop
xchg
mov
mov
and
pop
das
shlb
mov
cld
push
mov
fwait
xchg
lods
roll
inc
rcrb
xor
movsb
cltd
inc
test
cmp
jge
mov
push
adc
fiaddl
mov
mov
test
mov
mov
mov
faddl
movsl
sub
cmc
jnp
mov
cmp
scas
mov
rcll
mov
std
jge
shlb
jle
jge
mov
mov
in
and
scas
mov
cmp
pop
sahf
mov
stos
mov
idivl
sahf
movsl
shl
or
jl
lcall
flds
jp
jle
mov
mov
sarl
clc
mov
sbb
xor
rorb
ret
shlb
pop
mov
stos
inc
in
mov
lods
shll
loope
les
adc
shll
out
mov
push
push
adc
in
lds
ret
in
jecxz
mov
mov
push
sahf
pop
mov
pop
repz
xlat
lea
inc
or
cmp
mov
fnstsw
cs
movsb
push
xchg
roll
mov
movsb
lret
adc
shl
cmpsb
xor
mov
or
test
fdivrl
mov
sarb
mov
xor
mov
cmp
fstl
scas
mov
lcall
xor
lods
sbb
mov
popa
push
fwait
xchg
sarb
clc
xor
dec
imul
adc
xchg
shlb
dec
cld
stos
jp
daa
jne
andb
std
adc
cmc
xor
mov
icebp
mov
sub
mov
stc
sub
mov
add
mov
pop
jge
mov
stc
dec
shrb
dec
ljmp
testl
lcall
mov
sbb
stc
rolb
mov
decl
mov
inc
stc
xor
outsb
mov
inc
sbb
jmp
rcl
xchg
push
mov
add
fiadds
jmp
sahf
or
jp
sub
xchg
mov
imul
ds
ret
shlb
ret
mov
mov
xor
xor
scas
jb
fs
shll
fsub
push
xor
sahf
movsl
lahf
mov
mov
fcoml
jle
xchg
mov
cmp
jp
sahf
pop
imul
jle
jecxz
stos
fmul
xor
shlb
mov
jp
repnz
popa
fisttps
sahf
mov
cmp
push
outsb
push
xor
sbb
movsb
jno
mov
movsl
ret
jne
add
test
les
mov
das
mov
out
lahf
jp
cs
mov
ljmp
jmp
rorl
mov
test
sti
mov
dec
add
sti
ds
and
xor
jle
lods
imul
mov
fstpt
push
iret
mov
jp
adc
stc
inc
outsl
mov
or
test
jp
loop
mov
rorb
repnz
lahf
xor
addr16
jmp
addr16
and
mov
scas
mov
mov
pop
cmp
cmpb
iret
jno
cmpsl
xor
add
ret
test
xor
loopne
mov
stos
mov
pop
inc
mov
insl
aaa
ret
sub
sub
shll
scas
sub
sahf
out
push
ss
mov
mov
jl
ret
cmp
adc
ret
jp
sahf
cli
ja
lods
stos
push
sbb
rol
mov
adc
repz
add
mov
and
movsl
xor
loop
lods
test
sub
mov
and
mov
mov
mov
pop
jno
pop
shrb
ror
sbb
mov
cmpsl
add
loop
cmpsb
sbb
movsl
mov
mov
cmp
mov
mov
mov
fnsave
call
inc
mov
push
es
push
shll
jp
push
insl
pushf
fsubrs
xchg
outsl
pop
mov
mov
mov
or
and
xchg
shlb
inc
mov
mov
mov
test
jmp
test
sbb
sahf
loopne
stos
pop
sahf
insl
mov
xor
cmp
jl
mov
cmp
mov
sbb
pusha
rorb
push
cwtl
cld
sbbl
adc
xchg
dec
xlat
outsb
fbld
xchg
jmp
cmp
es
lcall
add
inc
mov
lods
jp
movsb
mov
mov
mov
push
adc
inc
pop
inc
fcmovnu
outsl
or
rclb
stos
xchg
mov
xchg
sub
aas
or
mov
jae
inc
inc
xor
icebp
adc
je
dec
xor
xor
cli
test
jns
jp
sahf
mov
js
mov
add
lods
mov
mov
shll
xor
in
bound
mov
out
data16
mull
mov
mov
inc
insl
xchg
mov
shlb
add
imul
mov
dec
xchg
jle
xlat
pop
jne
mov
ja
jl
loopne
lods
xor
je
lcall
mov
push
jle
push
test
ds
std
into
ja
pop
lahf
cmp
inc
mov
cs
ds
and
fwait
sub
sub
cmp
mov
inc
mov
mov
xchg
mov
orl
rorl
mov
into
mov
cmp
cmp
sahf
ja
sarl
mov
add
es
xlat
rcll
stos
mov
loop
jb
shlb
cmp
lods
xor
jle
adc
mov
jne
jle
jle
jecxz
repz
sub
in
mov
pop
cs
inc
jp
test
mov
jle
dec
jp
jle
xchg
mov
push
adc
cmp
fadds
icebp
test
inc
sahf
imulb
xchg
pop
pop
cmp
cmp
add
movsl
mov
test
mov
ret
aaa
popf
xorb
fisttpll
shl
cwtl
pusha
shll
xor
outsb
icebp
mov
arpl
fwait
dec
ret
sahf
stos
mov
cld
and
popf
divb
nop
pop
sahf
jne
cmp
icebp
pusha
mov
mov
aaa
mov
cmpb
inc
cltd
mov
fs
mov
pop
in
mov
ret
mov
nop
mov
mov
das
shll
jp
jecxz
xor
movsl
cmp
int
dec
cltd
ljmp
mov
mov
mov
outsl
adc
xor
imul
cmp
testb
inc
pop
je
xor
sbb
inc
sahf
dec
shrb
cmc
subb
mov
paddsb
mov
jle
imul
mov
cmp
inc
adc
add
imul
lock
sarl
insb
aas
mov
mov
je
mov
xor
dec
cmp
cwtl
mov
ja
sarl
inc
sbb
loopne
scas
jp
pop
sbbl
dec
sahf
nop
test
stc
lret
inc
jg
rorl
inc
cmp
lods
call
pusha
ret
ja
mov
cmp
cmp
rcll
sub
dec
xor
popf
mov
jp
test
outsl
add
mov
xchg
or
ret
xor
pop
incb
cmp
mov
sbb
dec
mov
or
pusha
xchg
push
pusha
add
xchg
mov
shrb
lods
lods
mov
cmp
addr16
cmpsl
mov
push
movsl
inc
inc
pop
lret
and
cltd
and
mov
dec
cmp
xor
pop
mov
inc
scas
shlb
adc
xchg
push
shrb
mov
cmp
pop
int3
jnp
mov
movsb
mov
fcompl
xchg
mov
mov
in
fstps
jle
aam
lret
scas
jle
or
push
testl
push
ja
bound
orb
lahf
fwait
nop
push
ss
mov
pop
fwait
icebp
pop
push
out
mov
daa
sub
jnp,pt
inc
int3
imul
xlat
mov
fdivrl
push
sbb
sbb
dec
out
imul
in
cmp
mov
out
pushf
jecxz
sarl
push
mov
pop
sub
out
jns
outsl
fists
inc
mov
nop
outsl
or
cmp
dec
insl
rcrb
sbb
pushf
lock
cmovnp
mov
popf
pop
ret
or
xchg
lcall
stc
push
jae
icebp
mov
xchg
fcompl
xchg
test
mov
mov
js
sbb
bound
jl
ss
rcr
cmc
jnp
mov
lret
out
outsl
popf
dec
sbb
daa
fidivrl
sub
sbb
inc
mov
scas
stos
sbb
adc
jl
lods
inc
dec
leave
cltd
push
cmp
push
cmp
jp
and
gs
jp
filds
scas
imul
cmp
test
mov
es
jb
sti
adc
ret
and
out
or
push
or
lods
dec
add
shll
repnz
xchg
inc
rolb
add
jge
sbb
add
add
adc
add
add
sbb
add
add
xchg
aaa
and
add
sbbb
add
add
in
jnp
add
add
add
push
sbb
add
add
mov
sbb
add
add
ret
add
add
add
add
add
add
addb
add
dec
icebp
sbb
add
add
mov
adc
add
sub
add
xor
add
and
add
cli
cmc
pushf
lea
jmp
jmp
roll
sahf
sub
loop
movsb
mov
cmpsb
aad
fwait
out
rcrl
addr16
inc
aad
jno
ret
xchg
jnp
daa
lods
movsb
pop
jae
ja
movsb
xchg
inc
adc
call
jnp
rorl
xchg
inc
repz
lods
jecxz
bound
pcmpeqd
shlb
insl
and
dec
mov
sub
std
hlt
ds
inc
push
add
inc
or
jnp
cmp
pop
testb
jg
rolb
pop
call
loope
mov
xchg
popa
lahf
shrl
xor
fmull
jmp
insl
lods
mov
loopne
lahf
fwait
ret
fs
sub
out
and
and
outsb
sbb
jg
mov
sub
add
rclb
cmp
push
test
rol
dec
cmp
xchg
dec
iret
fcompl
xchg
lret
sub
inc
rcrb
movsb
push
cmp
fstpt
cmp
orl
or
pop
inc
addr16
jecxz
and
jmp
out
cltd
mov
in
call
out
popf
in
repz
cld
sub
sub
and
int3
aaa
dec
in
gs
lods
jae
dec
jle
mov
pop
or
loope
test
and
in
cmpsl
lret
pop
rcrb
iret
sahf
je
imul
adc
and
xchg
push
lods
loopne
jg
imul
xchg
pop
aas
loopne
dec
movsb
in
pop
aam
ret
out
mov
loopne
cmpsb
mov
sbb
add
shlb
lret
jnp
mov
cmp
loope
push
push
leave
fcompl
xchg
or
cwtl
aaa
jle
cmp
inc
mov
add
stos
cmp
cmpsb
mov
fmull
push
lock
sarl
push
sbb
mov
imul
add
scas
adc
clc
dec
rclb
or
push
jge
and
das
and
pop
xchg
mov
adc
call
lods
push
xor
popf
xor
loop
add
jge
cmp
xor
ja
xchg
adc
inc
jo
insl
sti
cmp
and
popa
xor
movsb
mov
push
pop
daa
rorb
jmp
inc
adc
mov
adc
mov
push
and
stos
mov
xor
pop
aad
sbb
push
outsl
iret
loop
in
dec
jns
loopne
push
aam
sub
push
cmp
and
out
pushf
je
loop
shlb
and
cs
add
out
nop
mov
mull
inc
ds
rcll
fwait
or
lea
push
aam
je
fbstp
jge
in
dec
arpl
push
aad
test
xchg
out
movsb
rcrl
stos
mulb
jae
jnp
pop
pushaw
inc
mov
pop
in
sbb
push
or
pop
push
rcrl
pop
loopne
shr
out
shrl
test
xchg
xchg
pop
lods
jl
jnp
aad
add
das
pop
push
sub
or
or
or
pop
cs
jnp
mov
sbb
dec
jp
or
mov
dec
sahf
lds
mov
mov
loope
push
jle
shrl
sub
std
dec
xchg
jnp
or
push
test
dec
std
adc
jb
sub
aam
sub
push
jmp
in
les
clc
fistpl
jo
push
pop
data16
aaa
dec
add
pop
jge
fwait
sub
add
fnstsw
mov
push
dec
cmpsl
popf
sbb
jle
in
jecxz
lock
clc
test
rorb
icebp
fwait
rolb
xchg
mov
loope,pt
je
imul
inc
inc
loopne
sbb
sahf
mov
inc
mov
not
pop
maxps
enter
pop
adc
test
pop
push
cld
adc
or
and
out
or
push
cmpsb
mov
test
mov
fisttpll
adc
imul
xchg
nop
and
shll
shlb
sti
leave
sti
icebp
nop
xchg
unpcklps
dec
pop
jg
leave
push
loopne
repz
into
fldenv
fs
inc
ftst
movsl
mov
push
or
iret
mov
loope
shll
aaa
lds
mov
xor
iret
add
sti
testl
cmpsl
mov
mov
mov
fdivs
lods
movsl
and
out
sbb
mov
adc
sbb
cmp
inc
xorl
jo
and
cmp
xchg
int
xchg
add
shll
mov
mov
scas
in
and
into
dec
std
nop
inc
xorb
pop
dec
out
xchg
xor
je
xchg
sbb
pop
push
int
add
inc
push
and
xor
push
xor
mov
test
mov
ljmp
pop
fistpll
mov
repz
inc
cmp
adc
lret
pop
sbb
jne
leave
dec
push
out
movsb
mov
jbe
mov
dec
push
aaa
push
adc
ljmp
sbb
ljmp
sti
fidivs
hlt
xchg
xchg
xlat
daa
or
inc
ljmp
mov
cli
xchg
add
adc
aam
stos
pop
or
or
sbb
or
fldt
cwtl
call
pop
popf
push
jbe
or
jge
ficomps
sbb
out
lods
fcomps
and
or
adc
or
fisubrs
xchg
jge
iret
pop
addl
add
sub
and
cmpsl
or
mov
cmp
xchg
push
dec
sub
jo
fisubs
pop
push
cltd
rcrl
add
lcall
cmp
leave
fs
sbb
int3
sbb
and
inc
fisttpl
ds
cmp
push
sahf
mov
rorl
and
cli
flds
sub
mov
cmpsl
loop
inc
dec
pop
in
jg
inc
scas
std
in
dec
mov
fisubs
repnz
lcall
mov
testb
xor
sbb
mov
dec
dec
mov
inc
fidivs
lods
jo
test
or
sbb
mov
or
xchg
sbbb
fdivs
push
sub
pop
or
cmp
ja
inc
icebp
inc
pminsw
jecxz
mov
mov
mov
shr
popa
insb
shll
xchg
jecxz
inc
and
mov
jecxz
js
sub
or
sbb
add
or
dec
push
or
pop
dec
andl
pushf
cmpsl
and
into
sarb
xchg
loope
data16
movsb
xchg
mov
rclb
cltd
orb
xchg
bndstx
sub
xor
imul
outsb
or
jbe
pop
sar
lea
adc
loope
in
nop
mov
xchg
jmp
jmp
mov
xor
or
popf
sbb
pop
into
add
xor
cmp
pop
addr16
mov
sub
pusha
rorb
lret
and
mov
fstpt
mov
loope
mov
test
mov
dec
jbe
fs
lea
stc
test
fdivrl
iret
aaa
movsl
mov
cltd
movsb
sbb
mov
xchg
jo
cs
orb
or
sub
and
aad
imul
pop
popf
pop
ud2
push
stc
out
fmull
push
shr
data16
and
adc
ds
dec
fldt
popf
test
leave
sub
aad
fs
push
jl
sub
inc
testb
mov
outsl
cli
aam
sbb
cmp
xor
mov
mov
movsl
in
mov
and
nop
push
adc
in
xor
test
xor
mov
aas
mov
pop
mov
pushl
mov
xor
pop
movsl
pusha
rorb
mov
sub
dec
lock
adc
add
cmpsb
repnz
out
aas
push
aam
mov
inc
std
das
add
push
pushf
fstpt
movsb
push
add
jp
int3
notl
or
mov
xchg
jle,pn
in
mov
popf
out
repnz
cmp
sub
or
imul
outsb
aaa
dec
ja
nop
incb
add
xor
clc
hlt
pusha
jo
add
mov
mov
outsb
cmp
mov
mov
test
fldenv
fs
mov
int
inc
gs
push
cltd
hlt
in
ror
push
xor
pop
inc
pop
es
pop
xchg
insl
test
cmp
cmp
sbb
cmc
fdivrl
mov
popf
or
sbb
dec
cli
xlat
or
sbb
mov
test
add
hlt
xorl
mov
pop
xchg
xchg
je
scas
cmc
mov
or
hlt
bound
insb
xchg
shl
test
mov
js
and
scas
jle
sbb
imul
jns
shlb
es
jecxz
ljmp
rorb
je
nop
jmp
mov
icebp
imul
in
aam
xlat
les
sbb
cmpsl
inc
ret
and
iret
fidivl
push
mov
xchg
std
push
mov
inc
mov
cmp
xchg
stos
insl
das
out
int3
jl
outsl
cs
jecxz
enter
cwtl
shlb
fsubp
mov
sub
add
test
inc
clc
cmp
or
cmp
adc
pushf
test
add
icebp
push
inc
loope
sahf
rcrl
mov
or
lds
jecxz
lret
cwtl
mov
ret
icebp
add
jmp
adcl
lea
cmpsl
shlb
xor
dec
ret
dec
out
test
ja
mov
ja
mov
fisttpl
add
int3
xlat
insb
mov
adc
sub
arpl
add
mov
loop
clc
pop
outsb
cmp
adc
cltd
or
pop
mov
sarl
rcrl
maxps
addr16
add
mov
inc
cmpsb
adc
jb
fs
pop
lods
in
lods
jge
sbb
aam
das
popa
shlb
std
lods
aam
loop
jnp
out
mov
shlb
inc
ficompl
stos
add
xor
ds
ja
shl
mov
into
pushf
rcll
push
pop
jecxz
push
xchg
xor
movsb
inc
jbe
xchg
loop
add
lods
pop
nop
inc
jns
inc
cmpsb
sub
mov
add
std
mull
cwtl
adc
pop
daa
cmc
mov
insb
je
xchg
mov
cmc
mov
fnstenv
and
js
dec
push
leave
jl
push
popf
imul
pop
jge
syscall
test
pop
enter
and
rol
and
xorb
jmp
adc
cmp
enter
xchg
mov
fists
insl
xchg
cltd
jmp
movsl
cmp
repz
sbb
popa
sub
int
pop
cmc
xchg
add
ret
mov
adc
cmpsb
inc
in
inc
mov
mov
fsubs
clc
hlt
mov
pop
cltd
sbb
cli
fimuls
ret
in
lock
jbe
fmull
out
imul
mov
pop
scas
cmc
mov
int3
push
add
stos
jecxz
jnp
fiaddl
lcall
and
in
mov
jmp
fstpl
ficoms
outsl
gs
mov
daa
lcall
or
pop
cli
popf
in
mov
imul
leave
popl
jno
mov
ja
cmp
mov
mov
push
mov
mov
push
mov
sub
and
scas
jno
in
inc
cmp
scas
xor
pop
faddl
fwait
jmp
jno
adc
jne
ja
push
adc
lds
fdecstp
mov
stos
inc
mov
cmp
mov
cmp
jle
out
sbb
add
aaa
test
setge
mov
lock
out
or
int
outsl
imull
jl
popa
cmp
push
xchg
push
out
sti
ljmp
mov
movsl
push
mov
add
cmpsb
in
jmp
and
adc
xchg
jle
insl
and
call
or
push
imul
popf
lret
and
pop
mov
pop
add
rclw
outsl
dec
sti
push
inc
sbb
call
dec
cmpsl
shlb
bound
xchg
cmp
stos
inc
mov
jle
push
fwait
jmp
pop
mov
insb
ja
lret
fimuls
xchg
mov
fisubrl
push
dec
in
sub
je
les
sub
sbbb
data16
cltd
push
pusha
inc
jb
dec
jnp
push
jmp
int
xor
and
fdivs
mov
movsl
in
cmpsl
rorl
adc
inc
cmpb
push
fisubrs
popf
lods
aas
cmp
les
mov
pop
gs
sbb
shll
insl
jl
mov
lret
rorb
xor
ljmp
mov
call
jp
jns
in
outsl
aas
jle
sbb
and
or
lods
shll
in
mov
mov
out
push
pop
push
cmp
push
mov
cwtl
lahf
es
lcall
clc
lcall
mov
jb
sbbb
lods
sbb
mov
mov
ja
push
data16
mov
hlt
test
scas
sub
or
sub
sti
fidivrs
push
sub
call
xchg
dec
fildl
sahf
leave
lret
cli
lock
add
xchg
mov
xor
push
icebp
xchg
enter
xor
mov
jno
movsb
push
movb
jle
movsl
and
sub
mov
pushf
xchg
dec
enter
aad
sub
mov
or
aam
ja
imul
mov
roll
stc
xchg
jnp
mov
call
fistps
data16
fsubrl
movsl
push
cmpsb
adc
jge
fnstsw
add
mov
push
push
pop
push
mov
jo
jg
and
sti
jl
inc
lcall
mov
cmc
mov
out
adc
dec
in
adc
or
or
hlt
mul
push
lods
lds
test
add
or
inc
mov
cmp
lods
aam
shrb
insl
xor
sahf
cmp
loope
sbb
mov
rolb
cld
clc
rclb
call
or
mov
aaa
stos
fdivl
xor
icebp
inc
push
jno
adc
xor
xchg
ret
pop
adc
push
cmp
fs
aaa
into
jg
loop
scas
pop
into
mov
xchg
scas
mov
fisttpll
mov
xchg
inc
imul
push
movsl
pusha
testl
addl
xor
int3
sbb
jno
cmp
sahf
std
repz
mov
ret
out
xchg
adc
stos
sti
dec
or
lahf
or
xor
roll
cmpsl
push
inc
pop
push
test
adc
call
push
dec
adc
hlt
inc
imul
or
jg
dec
push
and
xchg
sub
pop
mov
and
mov
mov
imul
rdmsr
stos
jmp
cmp
sbb
out
in
lcall
cmp
mov
and
add
stos
in
aam
stos
pop
popa
add
neg
inc
lahf
shll
es
fisttpl
clc
adc
std
and
test
push
jne
xor
sahf
or
sbb
jecxz
shrb
push
nop
ret
push
aaa
into
sbb
vrcpps
scas
mov
mov
adc
cmp
mov
push
out
or
xchg
adc
and
pop
push
push
fwait
insb
aaa
lods
or
iret
sahf
popa
xlat
xor
sbb
imul
aam
rcl
adc
mov
or
js
sub
xchg
sub
mov
mov
dec
push
dec
mov
mov
test
inc
adc
addl
mov
dec
fdiv
jbe
add
push
pop
add
sbb
repnz
lds
das
jne
outsb
lea
leave
ja
insb
stos
sti
push
daa
ret
imulb
sbbl
jle,pn
pushf
sbb
cmc
ds
mov
xor
or
int3
fwait
xor
sbb
or
scas
ljmp
dec
ret
jp
sahf
mov
ss
imul
int3
arpl
sub
addr16
dec
sub
sub
call
fstl
mov
mov
xchg
push
xchg
fistpl
sub
cmpsb
sub
mov
cmp
mov
mov
xchg
and
jmp
xor
and
subw
mov
cs
mov
shr
mov
jle
or
pop
mov
sub
push
dec
insb
jmp
xchg
pop
aaa
and
add
mov
mov
inc
insb
mov
cmp
in
jmp
es
sub
lock
leave
or
popa
mull
repz
les
dec
or
adc
out
data16
and
rcrl
xor
sets
arpl
mov
arpl
mov
add
mov
lahf
out
insb
ja
negb
in
test
jle
push
hlt
test
and
int
js
inc
imul
test
inc
mov
xchg
mov
mov
nop
pushf
mov
lcall
movsl
inc
cmc
inc
adc
out
stc
xor
subl
stos
mov
in
cmp
mov
fs
cli
push
cmp
jmp
adc
or
idiv
test
jne
and
jecxz
test
stos
pop
aam
xchg
lahf
lods
xor
stos
ficoms
mov
push
out
outsb
xor
stc
sub
inc
lea
xchg
xchg
push
pop
xor
push
dec
fs
mov
test
pop
cwtl
xor
sub
and
and
mov
daa
icebp
mov
and
and
xor
xor
stos
fst
push
pop
mov
in
cmp
icebp
add
rcrl
outsb
push
and
lock
dec
mov
cmpsb
int
or
fisttpl
xor
call
hlt
into
push
or
push
out
les
pop
addr16
mov
das
popa
mov
xor
jle
push
pushf
cmp
add
and
xor
push
and
out
andl
mov
inc
or
xchg
sbb
and
mov
xchg
inc
aaa
test
rcr
insb
mov
bound
test
pop
xchg
jl
dec
bound
cmc
adcl
shrl
pop
dec
cmp
or
mov
sti
push
add
pop
inc
pop
mov
mov
repnz
insl
sub
adc
mov
ja
jle
xchg
mov
push
incl
test
ds
lds
test
repz
test
shll
pop
idivb
mov
lret
mov
pusha
xlat
or
pusha
mov
fidivl
int
ss
rclb
jecxz
fwait
pop
jb
in
cmp
bound
xor
movswl
xchg
push
mov
push
cltd
outsl
pop
out
adcb
cmpsl
dec
adc
aad
push
mov
js
push
xor
hlt
call
test
or
aad
dec
rcrl
jnp
iret
mov
roll
sahf
dec
xchg
mov
sbb
dec
sub
xchg
je
ljmp
mov
dec
pusha
xor
out
or
into
out
mov
clc
mov
push
pop
inc
mov
adc
ffree
insb
and
repz
mov
in
xchg
pop
lcall
cmp
test
cld
repnz
xor
push
xor
popa
sub
orl
lret
sub
mov
push
inc
adc
mov
xor
aas
sbb
sti
fwait
push
test
repz
repnz
cmpsl
out
fs
jmp
cltd
mov
lds
mov
inc
cmp
inc
out
jle
clc
sti
out
mov
mov
mov
mov
out
adc
xor
add
pop
mov
loopne
jns
enter
inc
test
fisttpl
jle
insl
or
inc
dec
pop
ja
lods
mov
cld
mov
mov
loopne
pop
sub
loope
mov
loopne
out
dec
movsl
sahf
gs
cli
pop
lcall
adc
mov
and
fs
pop
xchg
ret
push
sahf
mov
mov
pop
scas
divb
or
adc
test
test
pop
and
aaa
iret
sbb
mov
movsb
clc
mov
scas
sbb
mov
inc
fistpll
mov
xchg
and
rcr
into
jnp
insb
or
add
int
lods
out
and
adc
lcall
shrl
dec
mov
fimull
cmpsb
push
sahf
shrb
inc
ja
shlb
imul
push
icebp
lods
mov
test
jg
xchg
in
mov
inc
nop
xor
and
jl
or
into
lret
mov
cltd
push
lods
mov
adc
aaa
mov
inc
sbb
xor
ret
daa
mov
cmc
add
cmp
fidivs
pop
xchg
ss
cmc
or
xor
push
pushf
inc
mov
std
xchg
mov
or
mov
jae
xchg
enter
xor
daa
out
push
mov
std
nop
mov
xchg
fs
cmp
int3
jl
mov
and
adc
push
cmp
sar
lret
lds
xchg
ja
dec
jne
adc
mov
mov
mov
fs
push
out
aaa
jge
mov
rcrb
shlb
daa
push
add
pusha
cmp
xor
loope
movsl
sbb
rcrb
jge
std
pop
mov
xchg
lahf
cmp
cmp
es
lods
imul
imul
mov
xlat
xor
sbb
es
mov
adc
pushf
xor
cs
mov
jo
aam
xchg
addb
movhps
fwait
pop
bound
shlb
mov
pop
pop
jle,pn
mov
push
fsubs
or
out
mov
fnclex
imul
gs
add
insb
cmpsb
and
pop
sbb
fs
int3
mov
scas
mov
and
xchg
leave
sub
and
dec
push
adc
in
aam
out
dec
sbb
shrl
or
push
call
or
push
xor
loope
inc
push
pop
inc
shlb
aad
cld
lcall
jmp
sbb
push
out
mulb
push
push
jl
imul
jecxz
inc
cmp
jmp
sub
dec
adc
or
xor
xor
hlt
test
hlt
test
dec
jge
and
cmpb
push
and
push
ljmp
in
mov
inc
jl
insb
mov
lret
sub
imul
iret
dec
pop
mov
xchg
add
enter
sub
push
addr16
pop
ljmp
mov
xchg
jno
jb
cmp
ja
add
add
out
test
mov
sub
adc
adc
jmp
arpl
inc
dec
aad
xor
out
or
outsl
lcall
push
mov
mov
lods
xchg
test
cmp
add
ror
mov
fldl
stc
xchg
in
inc
or
ds
aas
dec
or
cmp
enter
sub
jl
xchg
mov
mov
popa
cltd
push
in
push
jge
sub
cmp
pop
push
or
pop
pusha
xor
cltd
and
sahf
ret
add
arpl
sub
sub
pop
push
repnz
test
pop
std
les
cmp
inc
mov
and
jb
jge
and
loopne
or
xor
mov
sbb
or
mov
ret
addr16
mov
xor
jae
ret
pop
or
lcall
jmp
es
inc
fistl
loopne
stos
sarl
imulb
xchg
push
fisttps
pop
ss
data16
push
cmpsl
pop
stos
mov
pusha
in
xor
or
insb
dec
imul
jae
xor
xchg
inc
and
and
xor
int3
loop
add
sbb
popa
lahf
insb
push
mov
push
popa
fs
pop
mov
sbb
scas
cmp
adc
testb
testl
jmp
lahf
lcall
inc
cld
lds
outsl
mov
rcl
nop
test
or
in
jae
cmp
add
inc
shr
xlat
add
stc
cmp
dec
xchg
pop
sbb
cmpsb
or
dec
out
push
in
sar
push
adc
sbb
add
jp
lret
adc
shlb
xor
add
mov
xchg
xchg
sbb
fcomps
pop
jg
mov
call
xchg
dec
jne
fwait
xor
push
mov
leave
xor
inc
ss
pop
es
or
inc
out
ds
ror
cmpb
push
in
push
mov
shlb
cli
cmp
xchg
daa
iret
lods
repz
cwtl
pop
xchg
into
and
mov
xchg
loope
aas
xor
xor
jno
inc
outsl
movsb
mov
popf
fs
nop
mov
inc
and
fbstp
inc
jo
test
ret
in
fadd
sbb
jae
mov
mov
and
jl
sub
loope
pop
testb
xor
mov
or
lcall
and
lods
mov
andb
ds
shlb
lret
fmull
sub
jo
ss
out
pop
in
adc
push
sti
icebp
mov
and
xchg
jle
add
mov
pop
push
stos
mov
xor
pushf
mov
inc
adc
add
icebp
mov
std
insb
ja
cs
fbld
push
mov
pop
sbb
inc
xchg
arpl
pop
mov
add
dec
js
pop
mov
ljmp
les
jne
ret
jl
sub
mov
jl
sarl
bnd
push
lea
pop
mov
stc
cli
dec
sub
mov
inc
ss
jae
and
pusha
scas
dec
push
out
mov
or
sub
mov
mov
loope
outsl
push
adcl
mov
xor
mov
mov
js
push
in
pushf
addl
jbe
movsl
push
scas
and
shlb
cmpsb
pop
adc
jno
xlat
cs
test
adc
out
test
or
roll
shlb
je
mov
adc
add
mov
je
imul
add
sbb
insl
fistpl
sbb
jno
push
pop
xchg
sub
mov
pop
sub
cli
push
mov
ja
xor
mov
std
das
xchg
dec
mov
jg
adc
loopne
jbe
int3
mov
adc
clc
pushf
neg
call
roll
insl
pop
inc
mov
jl
adc
xor
sarb
in
push
xor
movsl
in
shll
movsl
and
mov
add
cmpsl
lock
stos
and
aam
mov
scas
insb
add
out
inc
mov
mov
ss
inc
mov
inc
cmpsl
or
and
inc
imul
sbb
push
sarl
xchg
push
pop
out
add
cmp
adc
jle
add
ret
fcompl
jne
mov
or
pushf
lahf
mov
dec
decl
aam
bound
jl
incb
mov
test
rcrb
or
jne
fists
inc
pop
dec
imul
std
repz
hlt
aaa
das
ret
push
pop
dec
inc
sub
jno
jl
loop
lods
pushf
nop
xchg
add
inc
mov
enter
jne
xorl
iret
scas
insl
and
mov
pop
jne
inc
rcrb
andb
cmp
fdivrs
xchg
sbb
lds
scas
push
jns
mov
cmp
pop
and
loope
and
dec
aaa
or
es
pop
mov
loopne
mov
dec
or
or
pop
int3
push
loope
pushf
mov
stc
jle
int
ss
leave
pop
or
clc
jl
loope
out
push
push
outsl
and
sbb
repnz
out
out
adc
cli
leave
cwtl
das
in
jnp
add
je
xchg
in
sub
and
ja
cmc
bt
bt
pusha
imul
push
add
mov
pushf
movb
lea
jmp
mov
imul
imul
sbb
mov
lods
shlb
push
xchg
insb
icebp
pop
outsl
pop
les
xchg
xchg
nop
stos
dec
imul
push
movl
lret
data16
mov
adc
popf
or
mov
jle
xchg
jmp
xchg
mov
mov
aam
fistpll
xlat
gs
scas
xchg
imul
lret
mov
mov
fcompl
jae
int3
sbb
xor
xchg
bt
lea
pop
sbb
push
shl
push
btc
or
push
pusha
stc
shl
bsr
mov
stc
btc
rol
cmp
mov
xchg
shrd
or
mov
mov
xchg
adc
shld
mov
ror
mov
pushf
cmp
or
pusha
jmp
call
call
hlt
mov
pmaxub
into
sbb
adc
rclb
jno
pop
cmp
jecxz
sahf
xor
cmp
loope
xor
lret
mov
adc
xor
loop
out
shr
mov
loopne
mov
scas
adc
jbe
mov
push
ja
mov
push
push
pop
xchg
sti
xchg
dec
sarb
fcompl
jb
fadds
pusha
cmpsl
movsl
rcr
jbe
xchg
test
pop
mov
sbb
fcmovbe
js
addb
adc
arpl
jnp
rol
sbb
std
jle
add
sar
pop
jl
outsb
push
inc
cs
hlt
mov
xor
mov
or
sarb
pop
push
xor
push
and
repnz
jmp
outsl
xor
jecxz
mov
jecxz
aam
push
mov
hlt
les
or
ss
pop
out
xchg
sub
ret
out
jge
rorl
pop
jno
mov
push
push
dec
dec
dec
cs
push
push
add
dec
xchg
shll
pop
dec
clc
xchg
adc
sub
xchg
frstor
ficoms
mov
sub
sub
push
movsl
push
divl
dec
inc
in
pop
add
or
test
inc
mov
aam
pop
repnz
push
and
xor
sbb
cmp
pop
inc
je
fidivl
pop
jb
insb
cmp
movsb
mov
lds
adc
cmpsb
in
je
lret
pop
dec
lea
mov
add
mov
mov
inc
scas
cmp
pusha
addr16
leave
push
xor
sub
aas
inc
mov
xor
inc
leave
inc
sbb
and
mov
cmpsl
adc
xlat
mov
lea
pop
lods
mov
mov
mov
test
mov
or
fistl
xor
push
cmp
sbb
mov
fcompl
jno
jge
sub
xchg
pop
mov
movsl
aam
or
out
jbe
add
xor
xchg
subl
shl
lods
loop
test
sub
adc
or
sub
cmp
jb
adc
outsb
cld
repnz
xchg
lea
mov
imull
in
push
into
les
cmp
cmp
cmpsb
inc
test
lcall
fisttpl
push
push
and
pusha
dec
lds
test
jp
cmp
adc
into
in
dec
jae
icebp
pop
addr16
in
sbbb
mov
into
xchg
sub
shll
in
jp
clc
filds
aad
js
sub
adc
and
push
xchg
and
push
scas
and
out
incl
and
jae
mov
daa
push
aad
arpl
rcll
or
jl
in
mov
pop
add
stos
sbb
aad
xor
clc
pop
cmpsb
in
outsl
fdivrs
pmaxsw
pop
pop
xchg
jne
xor
jg
shll
dec
xor
sbb
mov
or
fistpl
xor
xor
ss
jg
mov
pop
cmp
xorb
out
jae
insl
mov
cmp
inc
mov
mov
ret
add
xchg
inc
ret
in
jae
je
in
pop
pop
mov
cwtl
pop
scas
xchg
je
repnz
fcompl
outsl
nop
mov
faddl
pushf
fsts
fadds
mov
jae
and
mov
lds
mov
or
push
mov
push
vpsubsw
nop
inc
addr16
xchg
mov
dec
mov
mov
inc
outsb
addr16
sbb
addb
or
scas
leave
xor
cmpsl
adc
xchg
and
aad
dec
add
icebp
fisttpl
sbb
adc
and
clc
je
xlat
or
imul
nop
aaa
push
or
xlat
mull
imul
inc
pop
nop
filds
int3
adc
cltd
and
shlb
jecxz
cli
mov
and
cmpsl
lret
dec
stos
xchg
bound
bound
mov
adc
jge
loop
stc
sbb
mov
pop
jmp
jecxz
cmc
and
jo
out
and
dec
scas
jmp
xchg
mov
ds
in
push
or
xchg
loope
mov
loope
mov
fcomip
add
cmp
cwtl
jg
in
mov
out
cwtl
call
xor
xchg
or
mov
cwtl
out
popf
xor
inc
fimull
mov
daa
pop
mov
lahf
clc
sbb
add
jns
pop
mov
push
pusha
int3
in
lahf
jl
insb
inc
push
mov
aaa
sbb
cltd
push
fs
loope
cmovg
and
je
jo
je
sub
icebp
mov
call
jmp
cmp
mov
xor
pop
mov
pop
bound
jne
inc
mov
cltd
xor
scas
jge
or
jns
fcompl
insl
mov
cmp
shr
call
pop
out
add
ffreep
mov
inc
jle
or
cmp
sbb
dec
jbe
sbb
xchg
fisubrs
mov
fcom
push
roll
jno
or
mov
xchg
call
xchg
in
setne
jg
repz
lret
jl
or
inc
sub
jne
add
inc
scas
sbb
pop
xor
fdivr
rcrl
jl
test
sti
mov
dec
cmp
xchg
mov
iret
fcompl
insb
mov
mov
push
mov
pop
int3
repz
adc
ljmp
ja
push
lea
loopne
mov
mov
mov
mov
leave
les
or
xor
pop
or
aas
daa
cmpsb
xchg
pop
jne
mov
into
and
dec
xchg
cmp
cwtl
pop
in
mov
lods
pushf
imul
cmpb
pop
insb
movsb
les
stos
jmp
movsb
roll
mov
xlat
pushf
neg
mov
sub
neg
call
lret
and
jmp
int
push
adcl
hlt
cmp
nop
xchg
jo
sbb
push
xor
stc
test
or
jb
mov
or
xor
cmp
adc
stos
fmuls
sbb
and
std
mov
dec
sbb
or
loopne
push
ss
mov
push
outsb
mov
add
xchg
pop
call
imul
push
loop
fldt
jno
or
and
popa
call
mov
orl
daa
hlt
roll
repnz
mov
out
ja
sbb
dec
fdiv
and
push
mov
xlat
enter
rcrb
xor
push
sbb
inc
xchg
cli
data16
inc
sbb
lea
mov
loop
stos
mov
adc
sub
in
add
mov
mov
addr16
xchg
sbb
pop
aas
push
adc
test
sub
pop
insb
and
jbe
pusha
sub
add
sarl
inc
mov
xor
push
jg
int
lock
and
push
pop
sub
rolb
outsb
pushf
in
outsl
ja
xchg
push
iret
inc
repz
xchg
adc
mov
aas
popf
sbb
shll
icebp
pop
push
pop
xor
jmp
push
aas
stos
repz
ja
dec
jle
fs
pop
pop
bswap
lods
and
ret
fcompl
push
or
mov
dec
sub
push
ror
mov
clc
movb
cmc
test
add
push
mov
pusha
cmc
stc
bt
test
jmp
inc
ljmp
mov
or
inc
mov
pop
es
cmp
inc
dec
sbb
and
jl
in
out
mov
bound
in
mov
into
push
lret
mull
adc
mov
xor
mov
cmc
jp
pusha
iret
jo
xor
xor
jo
notb
sahf
outsb
aad
cmp
enter
mov
js
xchg
jno
lahf
push
movsl
mov
push
add
mov
fcompl
push
outsb
mov
pushf
cmpsl
cmp
arpl
enter
or
ret
inc
or
cld
fildll
cmp
inc
jno
fcompl
xchg
bound
in
cwtl
mov
or
adc
inc
sti
dec
pop
adc
arpl
inc
jbe
jno
lds
dec
lea
aaa
sub
addl
jg
or
dec
js
inc
js
or
add
lock
jle
stc
daa
aam
xchg
jle
fdivl
push
in
jl
push
fcompl
push
insl
cmp
ja
pusha
pushf
mov
clc
imul
cmp
pusha
pushl
add
mov
pushf
movl
lea
jmp
push
enter
sub
sub
fists
mov
inc
pop
mov
and
adc
jmp
pop
sti
fbstp
adc
jno
cmc
clc
mov
adc
add
stos
cmc
ss
mov
pop
mov
jne
and
fcomps
mov
mov
pop
popa
imul
insl
loopne
clc
loope
lea
add
sarl
fs
or
mov
pop
popa
fcompl
push
insb
and
push
push
movb
pushl
ret
pushf
lea
je
cmc
add
stc
pushf
cmp
jmp
adcb
jb
pop
xlat
imul
push
mov
add
idiv
sub
lcall
outsl
push
rorb
sub
mov
jnp
sbb
xchg
addl
cmpb
imul
lea
pop
std
repz
or
push
lds
inc
and
inc
test
mov
test
ret
inc
mov
cmp
sti
cmp
clc
aaa
push
in
imul
js
into
fnstsw
pop
xor
xorb
fbstp
xchg
xchg
inc
mov
inc
mov
bound
pop
and
add
sbb
lds
lock
sub
pop
jg
pop
bound
lahf
xchg
push
push
adcl
out
pop
or
push
lret
cmp
fadds
xor
enter
sahf
sub
pop
ret
mov
jl
loopne
mov
xor
popf
xchg
dec
repnz
test
fcompl
cmpsl
pop
movb
push
jmp
stos
and
test
jmp
lret
loop
and
xor
pushf
adc
push
cmp
push
jbe
insb
into
cld
repz
cmpsl
cmc
cmp
rorl
xchg
bound
das
in
pushw
and
or
dec
xor
and
push
arpl
je
cmp
mov
das
jg
add
call
hlt
dec
xchg
xor
xlat
into
insl
and
xchg
cmp
idiv
int
pop
sbb
jmp
imul
jp
xor
repnz
pop
outsb
adc
mov
sub
xor
inc
add
xlat
daa
shl
sub
stos
inc
ljmp
sbb
add
jns
sub
xchg
xchg
sbb
push
fdivrs
jl
pop
pop
stc
rcr
cmp
in
stos
loope
pop
sub
in
xchg
mov
pop
add
ljmp
fucomip
cmp
jne
sbb
mov
lock
push
cmc
movsb
jp
push
mov
pop
idiv
dec
idiv
inc
mov
dec
rolb
inc
adcb
jne
mov
mov
jle
jmp
sub
cmp
add
or
jg
or
jae
lret
outsb
xchg
lods
les
xor
mov
mov
rol
jo
ficoms
aam
pop
dec
mov
push
sbb
or
push
mov
repnz
bound
or
in
inc
js
push
jne
mov
or
sub
cwtl
ja
es
dec
jp
popf
cltd
mov
adc
pop
shll
testb
mov
les
sbb
cld
push
add
fiaddl
int3
cmp
sar
pusha
adc
in
flds
std
sub
aaa
cmp
xlat
les
pushf
mov
lods
aad
jae
pop
adc
add
inc
mov
imul
leave
inc
jecxz
repnz
repnz
cmpsb
lea
ret
aaa
test
fcompl
cmpsb
ss
and
popa
mov
adcb
dec
insw
xchg
or
js
out
sbb
jecxz
std
shlb
mov
fisubrs
pop
xchg
mov
loop
cmpsb
stos
sbb
fadds
clc
data16
add
mov
and
rcrb
or
fstpl
push
push
dec
ds
lret
pop
fiadds
js
pop
fs
out
push
dec
dec
dec
dec
cs
insb
add
pop
stos
mov
out
xor
sarb
xchg
mov
adc
and
jle
mov
jbe
xlat
into
js
in
iret
pop
lock
addr16
shlb
dec
adc
cmp
inc
outsl
jle
add
js
into
pop
loop
adc
xchg
popa
push
notb
push
xchg
mov
xchg
ret
mov
mov
lock
inc
mov
xchg
xchg
rol
sub
shlb
mov
adc
mov
cmp
add
xlat
sarl
or
inc
lret
add
inc
mov
or
test
scas
outsb
inc
or
mov
pop
cmpsl
aaa
xchg
push
aad
xchg
xor
push
jnp
shr
ds
jno
andb
mov
jp
icebp
loopne
mov
or
fisubl
xor
sbb
nop
fmull
add
xlat
sbb
inc
cmp
xchg
shlb
xchg
scas
lahf
push
sbb
mov
push
jae
sub
inc
fldcw
xor
cmp
add
bound
mov
inc
loopne
ds
loopne
pop
fcompl
arpl
or
sbb
sbb
add
cmp
rcrb
xchg
je
dec
and
xchg
test
push
rcrb
out
js
inc
or
daa
jl
mov
cmp
fisubl
adc
jae
in
out
out
scas
mov
es
les
repz
jecxz
xor
lret
lcall
add
pop
arpl
push
dec
dec
and
dec
cmp
sbb
lock
pop
gs
lds
or
pop
sub
pop
in
mov
jo
pushf
jp
jp
sti
xchg
sahf
outsb
test
push
add
jge
add
adc
push
jle
add
and
sbb
shr
addr16
aaa
mov
dec
ja
sahf
sub
cmp
push
xchg
mov
mov
arpl
shlb
jl
cli
leave
mov
arpl
jnp
pop
ss
aas
sub
ret
lret
xlat
push
pop
je
add
mov
lcall
and
or
jae
lret
ds
test
adc
xchg
sar
in
xchg
and
js
mull
aad
jns
imul
mov
ss
aaa
in
lcall
adcl
push
movsl
movsb
push
imul
push
add
adcl
jmp
jns
pop
fcompl
bound
add
fstpt
clc
pop
sahf
adc
push
cmpsl
mov
push
pop
jns
ss
sbb
dec
jnp
ljmp
adc
stc
into
loop
dec
inc
adc
mov
in
pop
xor
jg
pop
fimuls
push
push
push
xchg
pop
cmp
idiv
insb
bound
nop
lret
lods
inc
inc
mov
push
mov
imul
adc
add
jle
in
sub
nop
daa
out
int
dec
fcompl
popa
cltd
mov
loopne
adc
call
std
insb
fwait
sub
daa
ss
fistl
inc
lock
push
mov
dec
sub
mov
jbe
rolb
nop
and
jb
add
jne
xchg
mov
sahf
lea
in
test
mov
sub
fwait
sub
mov
pop
jae
cmp
mov
rclb
dec
test
mov
mov
jae
mov
xor
push
push
sbb
imul
cmp
lods
fcompl
pusha
in
adc
rcrl
mov
push
inc
xchg
sbb
push
jge
shr
sub
push
and
cmpb
insb
inc
mov
add
pop
inc
or
addr16
insb
xchg
cmp
daa
arpl
mov
and
mov
daa
pop
fisttpl
or
adc
dec
xchg
sbb
fistps
push
sbb
push
xchg
adc
mov
mov
iret
fimuls
sbbl
push
or
fisubrs
and
pop
std
in
and
call
fcompl
pusha
mov
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
movsb
ret
dec
dec
mov
sbb
jne
subl
in
mov
aaa
sbb
into
xchg
inc
out
in
or
movsl
fwait
lret
test
in
mov
ret
mov
shrl
push
fld
popa
add
mov
fimull
lods
pop
mov
je
sub
xchg
inc
mov
xchg
xchg
xor
ret
aam
adc
cwtl
push
cmp
lcall
mov
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
out
mov
mov
movsl
mov
inc
jle
xor
ret
fs
sub
in
int3
jl
xchg
std
inc
lret
lahf
pop
xchg
sbb
xchg
mov
cmp
jae
clc
stos
adc
add
daa
in
rcl
mov
in
sbb
cmp
std
mov
inc
daa
push
mov
sbb
insb
jp
cld
push
adc
call
xchg
dec
roll
pop
cmp
push
lret
out
sahf
sbb
std
insb
ret
repnz
enter
int3
xor
int3
aam
sbb
es
inc
sub
jns
scas
dec
add
daa
mov
lahf
mov
decb
clc
adc
adc
mul
mov
cmpsl
pop
cmp
pop
or
cltd
sbb
ja
jne
lcall
and
lcall
pop
cmpl
scas
js
in
push
jle
pop
jns
mov
out
fmuls
in
lret
negb
and
iret
cmp
pop
xor
insl
mov
xchg
inc
lods
cmp
subl
and
and
out
jge
mov
jle
fcompl
pop
pusha
test
mov
pusha
lea
call
call
xchg
daa
xchg
cmpl
dec
arpl
or
out
push
xor
movswl
xchg
stos
clc
aad
mov
ds
pop
rcl
ss
jle
fst
fst
dec
push
lcall
add
sbb
jge
rcr
inc
mov
dec
inc
fiadds
sbb
test
nop
aaa
rolb
xchg
int3
ja
lahf
add
push
mov
inc
loop
in
pop
lods
mov
nop
mov
fistl
mov
jb
call
sti
xchg
jns
inc
out
fcompl
pop
mov
inc
mov
dec
mov
xchg
push
xor
push
arpl
cmp
xchg
jne
sbb
xchg
jecxz
loope
pushf
repz
scas
add
cmp
fdiv
enter
mov
mulb
xor
push
popf
sti
imul
or
mov
xor
push
xchg
mov
call
lods
mov
notl
jge
dec
mov
jecxz
dec
cmp
lret
popa
jae
orl
sub
rcrb
aam
les
jp
hlt
cmp
jmp
call
pop
repz
and
repz
nop
scas
push
jge
mov
and
push
jne
ret
push
je
jb
jmp
xor
stos
fmuls
ja
push
dec
in
mov
mov
dec
arpl
inc
sbb
dec
xor
ss
pushf
sub
in
insl
je
cmp
xchg
pop
pop
sbb
and
push
and
lds
lock
cmp
mov
fwait
pop
push
popf
test
adc
test
aaa
sbb
bound
pop
mulb
fcompl
pop
xchg
mov
mov
cmp
mov
hlt
xor
adc
cmc
test
jns
stos
inc
das
push
jle
lds
sbb
enter
dec
inc
arpl
shlb
in
mov
adc
cli
pop
sub
adc
andl
sub
mov
jp
push
pop
mov
and
or
dec
pop
mov
inc
xchg
loope
pop
ss
nop
pop
fstl
mov
adc
lea
push
pushl
cmp
add
pushl
jmp
xor
xlat
into
aad
mov
jae
fsts
mov
shll
popa
test
repnz
std
adc
lret
jl
xor
out
mov
jnp
xor
divb
xchg
lods
mov
aaa
stos
mov
add
jecxz,pt
int3
enter
jnp
jnp
push
decl
flds
setge
in
cmp
loope
sahf
jmp
lahf
and
jge
or
stc
nop
pop
into
mov
loopne
pop
pop
cs
push
push
dec
xchg
add
mov
pop
ret
out
fs
xchg
enter
xchg
mov
dec
mov
loop
adcb
cwtl
cmp
sbbb
xchg
ret
push
dec
mov
mov
outsb
fs
mov
mov
sub
cmp
outsl
pop
nop
lds
add
lahf
jbe
pushf
dec
repnz
adc
movsl
shl
icebp
enter
imul
jmp
mov
imul
loopne
sbb
jp
mov
inc
sub
cmc
loopne
sbb
test
pop
cs
divb
add
mov
or
cli
mov
jle
mov
fwait
into
mov
jno
fs
dec
cwtl
push
mov
stos
dec
inc
and
into
aad
xchg
add
in
lcall
bound
iret
jnp
lcall
imul
and
cwtl
push
inc
fcompl
pop
andl
cmpsb
cmc
xchg
test
or
push
pop
movsb
repz
orl
jmp
mov
mov
jno
pop
inc
enter
stos
in
fidivrl
sbb
inc
adc
divl
xchg
mulb
cli
lock
pop
jl
pop
test
jbe
sti
hlt
pop
cmp
jp
mov
cmp
daa
mov
dec
in
push
bnd
fcompl
pop
mov
popl
or
pop
add
cmp
mov
or
sbb
add
and
pop
jl
loope
push
shrb
sub
xchg
fsubp
add
out
ret
ljmp
gs
cli
into
inc
sub
or
scas
add
cmp
lods
xor
sbb
fwait
cld
lahf
cmpsl
testb
dec
outsb
adc
enter
inc
jg
push
cmc
int3
jae
or
inc
sub
imul
scas
or
sbb
or
add
jns
das
cmc
test
and
out
sbb
xor
xchg
sub
or
xlat
add
add
xchg
shll
mov
cmp
std
jae
mov
xlat
movsl
jl
xchg
popa
xchg
lret
arpl
cmc
in
subl
jbe
idivl
imul
mov
xor
xchg
ss
dec
repnz
add
xorb
popl
xlat
clc
daa
imulb
jne
xor
fldl
mov
dec
mov
out
inc
mov
movsb
sti
inc
or
adc
stos
push
mov
xchg
imul
out
stos
pop
inc
xchg
push
sub
or
or
rorl
jb
adc
shlb
xor
ds
cld
nop
in
data16
loopne
mov
xor
adc
push
push
cmp
mov
dec
sbb
repnz
xchg
ds
dec
push
push
fs
stos
add
out
das
pushl
std
int3
pop
add
fsubrs
xor
pop
add
loope,pt
add
add
mov
xchg
mov
mov
dec
sbb
pop
sub
icebp
mov
jle,pn
push
enter
sbb
or
shrl
imul
mov
jae
mov
sbb
xlat
icebp
add
push
cwtl
cmpsl
mov
jmp
lods
clc
jmp
loopne
pop
test
mov
loopne
sbb
mov
adc
fdivs
in
imul
push
mov
lods
int3
scas
arpl
pop
loopne
das
lahf
xchg
popf
or
xor
and
outsb
jbe
pop
mov
pmaxsw
jo
je
mov
push
loope
push
mov
inc
jae
in
xchg
aam
jp
push
dec
dec
inc
mov
jo
or
mov
rolb
insl
lds
in
leave
mov
fistl
sbb
mov
adc
cmp
sbb
das
inc
mov
push
mov
not
roll
jp
add
add
into
push
lods
or
push
fsubl
mov
sbb
bswap
not
call
test
clc
fldl
jmp
cli
dec
js
push
insl
mov
and
pop
lahf
dec
cwtl
sbb
js
shll
cmp
lea
xor
add
xlat
out
loopne
orb
pushf
xchg
jns
pushf
std
sbb
clc
xor
jns,pn
adc
dec
ja
mov
mov
mov
mov
or
fcompl
push
dec
imul
imul
push
lds
push
jns
notl
movsl
les
or
ficomps
jns
sbb
mov
jae
sub
scas
xor
jge
stos
add
adc
fidivrs
jg
mov
int3
adc
in
movsb
pop
ret
mov
enter
loope
cmp
loopne
outsb
sub
mov
push
dec
loope
pop
movsb
stos
repnz
rcrb
xchg
pusha
fcompl
push
lahf
ret
xor
mov
sahf
sbb
hlt
and
add
data16
fsubl
xchg
xchg
or
lret
push
sbb
sub
inc
leave
cmp
mull
inc
xchg
push
cmp
mov
pop
cmpsb
xchg
xor
hlt
dec
add
out
gs
sub
mov
rcr
pop
push
cmpsl
lret
cmp
lods
adc
mov
out
sub
cld
mov
xadd
mov
into
rolb
dec
stos
mov
fisubl
cltd
dec
nop
orb
aas
rcl
add
pop
jecxz
insb
cmp
adc
xor
push
cmp
arpl
dec
mov
jae
and
lahf
mov
jae
leave
sarb
push
dec
push
hlt
imul
dec
int3
add
xchg
rorb
int3
sub
fwait
scas
jno
xor
in
jo
sub
mov
subb
xchg
adc
jae
inc
and
scas
sub
add
filds
stos
pop
adc
jbe
aaa
out
fprem1
cmc
lcall
das
inc
jge
lret
jp
lock
push
jne
inc
lea
jns
cmc
bt
shr
pushf
cmp
pusha
clc
cmp
push
call
pusha
shld
mov
lea
lea
movzbw
bswap
lea
aas
sar
rcr
mov
sub
movzbw
bsf
push
movsbw
or
push
xor
push
lea
and
or
push
setl
mov
test
test
pushf
call
fsubl
mov
das
movsl
lods
sbb
xor
faddl
in
mov
stc
jnp
in
mov
jnp
pop
or
int
mov
ret
push
inc
pop
xor
jae
addr16
push
test
dec
js
dec
jge
test
and
pop
cmpsl
idivl
lret
lods
ret
fcoml
fld
mov
outsb
mov
mov
ja
in
stos
and
mov
push
mov
cwtl
addr16
pop
push
inc
fs
inc
test
sbb
push
mov
and
ficoml
or
add
pop
aaa
cmpsl
es
dec
aas
pop
mov
test
dec
jge
orb
xor
mov
fildll
fdivp
jmp
std
push
mov
add
outsb
lret
xor
hlt
jno
popa
jnp
adc
and
lahf
and
mov
cmp
push
add
or
aas
pop
psrad
or
jl
jb
call
pop
push
lock
test
fldl
clts
sub
mov
jmp
add
dec
xor
orl
bound
orl
xor
enter
inc
js
ffree
iret
dec
push
pusha
dec
lea
cmp
les
mov
mov
fstpl
vpsubq
fld
jae
das
loope
mov
xchg
orl
cmova
out
loopne
dec
enter
xchg
pop
xor
sbb
scas
and
pop
jp
sub
lcall
loopne
rcll
je
repnz
testb
hlt
mov
cmp
xor
or
add
xchg
mov
das
mov
js
pop
or
aam
xchg
mov
mov
add
inc
pusha
rep
in
enter
ljmp
nop
dec
ss
jmp
adc
cld
pop
ror
cwtl
mov
xchg
loop
lds
lahf
mov
scas
ds
les
dec
lds
push
dec
outsl
aas
inc
or
add
mov
ficoml
xor
mov
cld
addr16
lret
sbb
popf
adc
hlt
xchg
mov
cmovle
sbb
iret
fsubs
arpl
imul
leave
test
pop
push
pop
mov
or
scas
in
add
push
cmp
and
push
mov
mov
xor
pop
push
jno
add
adc
repz
jmp
movzbw
pop
pusha
mov
movw
pusha
pushf
call
imulb
fnstcw
pop
enter
aam
xchg
icebp
inc
ja
add
clc
pop
jg
scas
std
hlt
rcr
aas
sti
pop
mov
cmpsl
sub
sbb
xchg
lcall
out
add
jge
mov
lret
sub
rolb
cmc
in
push
ficomps
mov
lods
ret
sar
sbb
mov
lret
fdiv
leave
cmpsl
mov
push
cld
mov
clc
cmpsl
mov
push
inc
inc
jmp
adc
sahf
inc
jo
out
xlat
jmp
lods
push
or
xor
pop
int3
fcompl
push
sbb
or
sub
push
out
gs
jnp
and
out
cmp
fists
jb
push
fisubrl
xor
push
dec
cld
jg
in
add
xor
pusha
and
scas
mov
pop
cmc
pop
or
mov
jb
dec
inc
icebp
cmp
call
xchg
sti
mov
mov
mov
dec
add
push
or
jbe
pop
dec
call
xor
push
outsb
pop
fwait
mov
sbb
inc
ret
pop
out
in
ljmp
call
lret
stc
xchg
idiv
xchg
dec
inc
ret
xor
into
out
pop
adc
pop
lret
push
push
jnp
adc
add
hlt
jae
cmp
add
push
test
pop
mov
aam
in
insb
imul
loope
push
inc
negl
sbbl
sbb
add
jmp
fnstcw
ss
nop
fcompl
push
adc
add
nop
iret
stos
pop
leave
clc
dec
cmp
adc
mov
xchg
xchg
rorl
adc
or
gs
pop
aaa
xchg
outsb
mull
pushf
repz
imul
and
jns
leave
mov
xchg
and
stc
adc
cltd
lcall
push
jo
scas
add
dec
pop
gs
stos
shlb
or
in
dec
sub
cwtl
addr16
in
fsubl
stos
fcompl
dec
jmp
cmc
cmp
es
jp
loopne
mov
push
imul
push
push
pop
mulb
into
sub
repnz
cmc
sub
push
jne
je
sub
lahf
mov
out
enter
and
rcll
push
test
push
xchg
rclb
add
cmc
push
scas
jmp
faddp
pushf
bound
popa
xchg
aam
or
pop
dec
cli
rcr
pop
dec
pop
aas
out
out
mov
je
jmp
mov
mov
sub
std
maskmovq
idivl
jmp
mov
sbb
cli
loope
stc
lea
jae
fcoms
jle
negb
mov
pop
ljmp
push
in
sub
xchg
sbb
gs
dec
sub
mov
ja
insb
mov
aaa
lret
fsubs
lahf
cwtl
arpl
aas
inc
rolb
fbld
cmp
les
daa
jae
test
adc
loopne
xchg
add
gs
pop
dec
cmpsl
aaa
sub
jb
dec
inc
mov
inc
xchg
std
inc
xor
cwtl
cmovbe
and
std
dec
je
inc
sbb
xchg
lds
ss
lcall
dec
cmp
cltd
lret
imul
cmp
mov
jnp
add
add
mov
sub
mov
test
pushf
and
out
jno,pn
es
mov
fwait
pop
xchg
xor
aam
xorb
mov
fcompl
dec
jbe
push
mov
cmc
fcoms
dec
pushf
mov
pop
popf
in
jmp
mov
pop
in
and
lret
sahf
ffreep
in
loop
loopne
push
push
outsb
jbe
lds
into
icebp
jmp
sub
icebp
push
or
movsb
lock
mov
das
pop
push
adc
mov
adc
int
mov
jbe
xchg
mov
into
push
pop
cmp
or
push
popf
push
fldcw
inc
jle
iret
push
cmc
lods
jnp
adcl
bound
pop
dec
cmpsb
lret
lcall
mov
repz
dec
jae
cmc
std
cmpsl
push
in
fldcw
nop
xchg
stc
sbb
xchg
adc
add
push
mov
incb
enter
cmp
inc
cmp
and
add
sub
into
pop
push
xor
dec
insb
dec
push
shr
jnp
xchg
pop
orl
int3
cmp
inc
sti
addr16
lret
dec
inc
dec
sub
sub
in
inc
xchg
jmp
jp
sti
stos
dec
inc
ffreep
movsl
sbb
shlb
pop
dec
adc
push
xchg
sarb
adc
dec
popf
add
jb
inc
dec
mov
inc
in
ret
push
les
ret
mov
mov
int3
cmp
push
pop
pusha
test
cmpsl
add
pop
xor
stos
mov
fstl
ljmp
call
fstpl
cltd
push
cwtl
cmp
mov
lea
cltd
mov
pop
dec
mov
movsb
and
insb
pop
test
insb
fwait
mov
or
ljmp
test
mov
lock
and
cwtl
jg
popa
and
lcall
and
dec
or
shlb
xor
aad
jb
push
je
subb
push
xchg
lcall
lcall
jmp
inc
fcompl
dec
sbb
lods
mov
pushf
add
xchg
clc
xchg
jns
pcmpgtd
mov
test
mov
xchg
push
iret
push
cld
dec
fwait
mov
nop
mov
mov
lahf
dec
scas
shrb
or
xor
sub
enter
subl
out
sub
pusha
jg
add
sti
notl
sti
jl
sub
pushf
jg
loope
lcall
cmp
and
scas
inc
aam
cmpsl
xor
sub
sub
cmpsl
fstps
dec
sbb
jl
pop
dec
mov
xor
rol
push
jo
inc
gs
fisttpl
push
jg
shll
ffree
cmp
rcl
std
or
jmp
sbb
adc
cmp
adc
scas
jmp
jmp
out
inc
jecxz
jns
pop
mov
cld
fwait
adc
pop
dec
pusha
adc
mov
inc
xchg
jle
add
push
lods
mov
test
scas
ljmp
pop
pop
fmull
mov
fcomp
js
sbb
out
test
repnz
popf
and
shlb
mov
inc
ds
lods
cmpsb
mov
popa
push
pop
sub
cs
pop
outsb
jbe
repnz
loope
cmpsl
ror
cmp
fiadds
xlat
cmp
aam
adc
dec
push
lea
push
dec
mov
subb
lea
mov
mov
push
xchg
outsb
mov
jb
data16
adc
pop
faddl
test
xchg
enter
bound
xchg
dec
int
mov
std
int
scas
mov
lahf
mov
push
cmpsl
pop
dec
push
aam
pop
push
pop
iret
les
and
add
mov
sub
cmp
mov
inc
mov
out
pushf
sbb
add
cltd
test
out
fabs
sub
ja
ljmp
pop
add
div
sti
test
das
mov
fwait
xchg
sbb
jl
pop
in
and
push
cmp
push
test
or
dec
mov
ljmp
adc
jnp
ficompl
out
hlt
popa
adc
adc
inc
add
jle
inc
xchg
mov
cmpl
push
scas
push
arpl
jne
call
enter
aaa
loopne
mov
jns
add
mov
subl
arpl
xchg
aaa
push
sub
push
mov
mov
sbb
int
mov
test
imul
push
pop
push
ljmp
sbb
push
outsl
repnz
mov
sbb
insl
sub
mov
je
jle
loope
stc
dec
js
cli
or
adc
leave
roll
das
aad
push
cli
fcompl
dec
dec
push
jae
and
loope
mov
fisubs
cmp
in
cwtl
cmc
fmull
enter
and
lret
push
xorb
add
xchg
mov
inc
int3
dec
imul
push
sbb
test
shrb
xor
jae
inc
int
jo
xor
dec
aaa
testb
or
cmpsb
lods
inc
sti
loop
mov
inc
fcompl
inc
xchg
mov
jge
dec
jnp
sbb
cmc
fs
repnz
fsubrl
mov
cmp
loop
stos
sub
jp
cmp
inc
imul
mov
push
pop
test
cmp
dec
fiadds
push
js
dec
mov
movsl
adc
pushf
mov
dec
pop
daa
mov
jbe
fcompl
dec
push
je
sbb
or
add
arpl
mov
cmp
xor
rcrb
ret
test
fistps
sbb
mov
inc
loopne
jp
cmp
js
mov
push
inc
shr
mov
rorl
xchg
and
fadds
dec
cwtl
pop
adc
jne
cli
repz
in
xorl
subb
dec
pushf
add
xor
cmp
lods
inc
pop
push
pusha
daa
push
fcoml
push
mov
imul
pop
fcompl
inc
cmpsb
lret
xor
add
cwtl
popf
xor
call
jae
jmp
pop
repz
fstpt
in
call
stc
test
scas
into
in
mov
rolb
sarl
pop
jmp
xlat
mov
and
neg
fcoms
fdivl
test
dec
jmp
popa
xor
or
loopne
dec
mov
test
jge
sahf
cli
arpl
inc
or
mov
jp
mov
sbb
imul
cli
rorl
mov
sub
fcompl
inc
cs
sahf
cmpsl
out
fcoml
dec
andl
fs
add
inc
pop
and
fwait
dec
jp
xchg
dec
test
test
push
cld
xor
jb
popa
or
test
or
dec
inc
cmp
or
fstpl
rcl
xchg
cmp
out
push
inc
jecxz
loope
addr16
mov
pop
inc
add
jae
inc
mov
push
or
imul
cmp
cli
adc
fs
or
stc
dec
jo
xor
ffree
psubusw
pop
push
or
inc
jge
adc
mov
xor
xlat
je
daa
adc
out
mov
enter
mov
push
inc
pushf
jae
cltd
cmp
cmp
es
mov
adc
popf
leave
sub
call
xorl
mov
sahf
or
sahf
in
or
adc
cmovbe
in
add
xchg
mov
ds
or
dec
int3
push
popa
mov
xor
loope
je
cmpsl
mov
mov
xor
jmp
test
add
add
xchg
mov
sbb
stos
cmp
cli
sti
push
sbb
insl
stos
ret
pop
pop
inc
data16
push
daa
inc
in
inc
mov
enter
cmp
sahf
push
sahf
hlt
aad
out
into
gs
fwait
push
push
scas
lods
movsb
xor
pop
inc
andl
ss
push
enter
inc
pop
stos
shrl
shrb
pop
leave
fstl
add
stos
sub
outsb
xlat
sbb
mov
scas
xchg
shll
or
push
dec
sub
sahf
js
dec
faddp
xchg
mov
test
push
clc
push
push
scas
fisubs
jecxz
cmp
mov
pop
and
or
gs
repz
mov
adc
fcompl
inc
adc
add
jmp
mov
pop
mov
adc
enter
stos
or
ljmp
loop
fisttpl
aad
pusha
mov
mov
push
cmpb
xor
mov
or
lea
stc
push
mov
jmp
pop
or
scas
pop
cs
or
fimuls
mov
int
pushf
or
repz
jge
mov
pusha
pop
sub
add
repnz
test
popa
sub
or
rolb
inc
xchg
mov
sub
inc
test
lea
sub
xor
fisttpll
mov
adc
cmpsl
adc
mov
pop
mov
push
mov
jo
adc
mov
sub
inc
xchg
shll
in
mov
push
mov
loop
cmp
pop
scas
adc
mov
sub
pop
xor
out
xor
mov
fbld
jp
or
mov
lock
fcompl
inc
sbb
lret
fwait
lcall
dec
mov
ja
pop
insb
sbb
inc
push
lcall
jmp
outsb
dec
arpl
jge
and
mov
jnp
mov
push
outsb
stc
push
or
adc
inc
test
mov
sbb
out
mov
in
je
pop
jbe
int
mov
in
cmpsb
adc
or
pop
or
bound
inc
xor
aaa
push
mov
sbbl
cwtl
ja
pop
inc
daa
icebp
dec
pop
cmpsl
inc
jno
mov
xchg
xchg
sbb
jmp
mov
rcrb
rclb
cs
jmp
mov
cmpsl
lahf
jmp
cld
faddp
and
lahf
daa
scas
lds
daa
inc
dec
sbb
push
or
push
inc
jmp
adc
leave
xchg
jns
push
push
aad
xchg
iret
lock
xchg
loopne
jns
xor
into
icebp
or
mov
in
dec
loope
psadbw
insb
fcompl
inc
stos
lret
fwait
in
xchg
push
pop
sbb
icebp
sbb
inc
xor
sbb
incl
sbb
sub
outsb
mov
loope
jo
icebp
jne
lahf
int
add
sbb
js
sub
pop
inc
mov
mov
arpl
adc
dec
out
incl
shll
std
in
jecxz
mov
out
movsb
hlt
shl
repz
pop
sbb
popa
loopne
lods
jl
or
pop
inc
pop
jnp
add
ret
pushf
into
aam
lahf
out
ss
jmp
dec
pop
xchg
sbb
push
xlat
mov
sub
test
lds
es
and
lret
cmp
sbb
jo
sbb
insl
bound
or
outsb
push
stc
xchg
mov
add
pop
xchg
jne
or
sarl
cli
lods
fcompl
inc
in
or
inc
mov
dec
popa
shrb
loopne
cmpsb
popf
add
pop
or
or
push
add
inc
xchg
bound
rorb
inc
push
or
adc
mov
mov
test
ret
xor
cld
mov
sub
push
jl
mov
push
cmpb
fstl
mov
cmp
fldl
xchg
lock
hlt
scas
stos
test
rolb
iret
jle
mov
sub
jge
sbb
mov
sub
cld
xchg
mov
dec
subb
arpl
movsl
hlt
pop
stos
inc
rcrb
into
das
and
jecxz
push
ret
in
in
dec
js
push
mov
inc
test
in
pop
addl
pop
xchg
scas
popf
mov
adc
sub
or
mov
jbe
or
orb
pop
mov
ret
pop
add
cli
imul
std
mov
inc
and
lea
mov
cld
sbb
icebp
mov
lea
push
stc
out
insl
mov
pop
mov
aas
jbe
sub
cli
test
insl
dec
pushf
lret
dec
lea
mov
mov
outsl
mov
or
outsb
ret
xor
adc
loopne
push
fcmovu
add
cmp
dec
jecxz
dec
push
shll
cs
push
inc
cmp
mov
push
loopne
cmp
mov
sbb
into
gs
add
jns
pop
mov
stos
pushl
pushl
movl
push
push
lea
jmp
int
popa
push
sbbb
mov
arpl
lock
scas
and
in
hlt
fwait
cs
xor
jae
push
stc
or
cmpsl
inc
ds
iret
fisubl
adc
data16
xchg
cmp
cmpsb
cltd
lahf
mov
cmc
jb
dec
push
sbb
sub
jp
cmp
popf
adc
inc
enter
lahf
inc
ficoml
xor
mov
inc
in
or
add
stos
and
cmp
dec
cmpsb
fdivs
test
adcl
loopne
ss
fadd
scas
fcompl
ds
or
loope
bt
cmc
add
bt
clc
mov
pusha
stc
cmc
cmp
add
clc
stc
test
jmp
fstl
adc
mov
cmp
pop
es
mov
push
popf
add
sub
roll
mov
inc
call
sub
outsl
pop
popa
rclb
mov
inc
stos
pcmpeqd
sti
xchg
imul
and
sbb
sbb
aam
mov
jno
adc
movsb
inc
inc
and
jno
push
insl
pusha
insb
adc
jbe
out
gs
mov
clc
out
outsb
cmp
pop
cmp
mov
lea
call
call
jmp
add
add
push
push
lock
add
add
mov
add
add
add
add
add
add
and
add
call
cmpsb
pop
and
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
rol
lds
add
add
pushf
sub
jmp
cmpsl
pop
ss
adc
scas
insl
pop
lret
pop
cmpsb
in
add
or
dec
jae
pop
movsl
jmp
cli
in
xor
stos
outsb
xchg
in
inc
sbb
add
dec
ja
sahf
push
sbb
aam
insb
mov
sub
and
pop
outsb
scas
sub
negl
mov
movsb
fadds
inc
out
mov
mov
xchg
xor
lds
and
in
aas
ja
mov
jg
pop
sbb
cltd
js
push
mov
xor
pop
cmp
mov
inc
or
mov
mov
loope
popl
xchg
mov
aam
sbb
cld
sub
test
inc
fcomps
inc
movsl
push
sbb
xchg
lods
inc
dec
cmc
jno
lods
sub
push
or
sti
test
insl
xor
cmc
arpl
cmc
adc
lret
in
inc
js
xchg
mov
outsb
cmp
pop
cmp
pushf
ret
mov
lea
pushf
pusha
pusha
pushl
lea
call
pusha
lea
jae
clc
cmp
cmc
xor
jmp
jae
outsl
into
jno
fdivrs
add
bound
pop
pop
cld
arpl
dec
push
jl
je
cltd
js
stos
add
mov
sub
xchg
xor
xlat
cli
cmp
sbb
mov
sub
push
shr
pusha
out
loopne
aaa
js
jae
push
in
jbe
mov
rclb
cs
lods
fiadds
rclb
cmp
daa
push
jg
or
call
xchg
push
fcompl
cmp
shlb
fcoml
jl
xchg
shr
dec
xchg
out
test
sbb
popf
and
push
pop
ret
mov
mov
push
fimuls
fsubr
xchg
addr16
iret
scas
cwtl
lret
or
sbbb
fadds
add
loope
leave
mov
inc
mov
jb
dec
sbb
pop
sub
mov
les
or
out
rcl
dec
in
mov
xchg
inc
mov
loope
imul
ret
xchg
pop
push
fcompl
cmp
xor
inc
xor
shlb
dec
cwtl
pop
repnz
push
jle
ror
outsb
ds
add
jno
pop
push
jge
orl
push
in
push
add
pushf
or
lret
repz
ds
mov
inc
dec
push
loopne
lahf
mov
jle
inc
fidivrs
and
jge
call
pop
sahf
pop
pop
repz
cmp
jle
xor
jb
test
mov
test
pop
insl
les
pop
sahf
fucom
mov
pop
cmp
inc
xlat
jge
inc
xor
sbb
push
mov
inc
out
insl
lds
xchg
adc
adc
divb
jmp
push
lahf
xchg
push
lcall
ja
mov
jb
rclb
mov
inc
je
bound
imul
fidivrs
and
in
call
sub
js
scas
pop
sbb
sbbb
or
push
sub
mov
repnz
pop
andb
mov
xor
loope
pop
cmp
dec
lahf
movsw
inc
dec
or
ds
add
mov
mov
jge
or
mov
cli
popa
lahf
mov
dec
out
push
call
dec
out
repz
dec
sbb
xchg
divb
ficoms
fwait
ljmp
mov
movsw
lds
mov
repnz
lds
inc
jg
imulb
je
and
inc
cs
mov
mov
out
enter
mov
pop
push
cld
add
fcompl
cmp
hlt
cmp
mov
pushf
jecxz
and
mov
dec
int3
add
mov
mov
outsb
int3
stos
pop
xchg
fnsave
jo
arpl
dec
mov
dec
cmp
jg
adc
mov
shll
jl
test
or
fsubl
pop
aaa
loope
inc
xchg
jl
xchg
pop
mov
add
sub
stos
xchg
pop
dec
dec
add
mov
pop
cmp
cmp
dec
notl
scas
scas
cmc
sub
mov
sbb
jbe
xor
xor
clc
div
dec
lods
fisttpl
out
sbb
lret
lds
loop
fisubs
sbb
icebp
inc
mov
xor
int
js
imul
push
stos
jb
cmp
add
out
outsl
les
pop
mov
or
lcall
rcrb
les
lret
inc
enter
sub
and
xchg
xchg
lea
adcb
addr16
daa
dec
mov
fisubrl
data16
jp
pop
cwtl
sahf
or
mov
ss
add
mov
add
ret
aam
lret
or
out
cmp
add
inc
and
daa
aam
pop
push
jge
mov
sbb
pop
push
aam
sbb
lds
stos
mov
inc
inc
addr16
cmc
int3
imul
pop
pop
jne
repz
pop
aaa
shl
mov
push
mov
and
sub
imul
adc
mov
mov
rcrl
mov
flds
mov
sahf
cmpsb
das
ss
mov
mov
cmp
cmp
mov
push
and
lcall
aad
lret
loopne
pop
jmp
into
dec
inc
fists
js
push
mov
scas
mov
or
test
push
mov
dec
and
xchg
sub
add
pop
cmp
pop
scas
jbe
and
cmp
xchg
loop
inc
pop
xchg
add
out
jp
outsb
shlb
mov
sar
outsb
dec
push
pusha
pop
sahf
pop
mov
negb
mov
add
notb
jbe
nop
xor
and
mov
pop
out
lods
fmuls
push
push
cmp
mov
pop
ds
mov
ss
xor
jge
pop
ss
das
ss
cli
or
mov
inc
xchg
xor
pusha
fcomip
insl
or
sbb
lahf
adc
mov
cs
fistpll
xor
mov
dec
and
push
cmp
adc
nop
pop
jne
pop
jne
repz
xor
mov
xor
cmp
add
inc
insl
lods
sbb
outsb
xlat
sbb
out
lea
xchg
jo
out
sarl
add
or
jb
mov
maxps
pop
inc
or
and
xor
pushl
neg
jmp
rcrl
sub
popa
test
sbb
or
pop
inc
std
js
or
imul
iret
lahf
sbb
xor
mov
call
pop
jmp
and
jge
dec
int3
dec
jecxz
inc
fmul
maxps
rorb
insb
lea
adc
scas
mov
cwtl
ret
adc
pop
pop
out
sub
jne
sbb
mov
mov
xor
pop
xor
movsl
int3
sub
rolb
pop
dec
mov
jbe
cmp
push
loope
dec
not
pop
xor
xor
popa
inc
rcrb
inc
sub
fwait
testb
sbb
andl
push
add
pop
ljmp
dec
inc
rolb
iret
int
mov
mov
in
popa
cmp
pop
push
scas
call
add
lods
dec
stos
hlt
outsl
cmp
into
jne
fcmovne
mov
and
jp
pop
xor
call
aad
pop
pusha
mul
into
push
dec
int3
and
call
inc
push
stc
mov
push
mov
pop
push
push
pop
mov
aam
je
out
mov
int
pop
addr16
mov
cmp
sub
outsb
inc
pop
push
xor
inc
pop
out
sti
sbb
add
icebp
pop
push
in
sub
jle
sub
loope
addr16
out
dec
movsl
mov
popf
cmp
lret
xchg
outsb
jne
mov
or
out
pop
mov
xchg
cmc
mov
mov
lret
xor
dec
xchg
stc
faddl
add
jle
movb
inc
cmp
xorb
cmp
je
or
iret
leave
or
add
adc
cmp
jp
addr16
cmp
into
aam
stos
dec
and
pop
add
sbb
push
and
ja
testb
adc
sbb
mov
or
mov
or
scas
fcompl
xor
or
mov
outsl
pop
dec
mov
sbb
ret
pcmpeqd
popf
fs
dec
sbb
and
mov
daa
das
mov
ret
xchg
inc
add
or
push
out
inc
jbe
aad
sub
popa
pop
jp
jmp
in
sub
adc
or
mov
aam
adc
test
rcll
xchg
cmpl
scas
mov
mov
pop
push
negl
mov
pop
arpl
sbb
mov
out
mov
dec
xor
loop
mov
jb
xor
notl
inc
mov
test
dec
adc
jne
sbb
push
fbld
mov
cmp
mov
sbb
enter
mov
add
and
pop
incl
fwait
push
or
out
adc
push
pop
add
mov
mov
mov
fstl
in
adc
dec
out
sbb
out
mov
enter
push
aas
loop
je
xchg
ffreep
test
repz
popf
lahf
mov
call
push
jno
mov
xlat
inc
push
jo
mov
ljmp
inc
pop
sbb
mov
jg
imul
dec
lds
cmc
clc
dec
lock
into
lock
mov
mov
jns
movsb
push
jmp
or
pop
xor
mov
mov
daa
xor
cld
xor
cmp
cmpsb
mov
pop
aam
roll
jb
iret
lahf
sub
xor
jge
fstpt
sub
stos
jne
sbb
sbb
icebp
inc
push
fwait
loop
inc
addr16
xor
cmp
neg
push
mov
and
outsb
mov
add
loopne
fsubs
xor
in
lods
cmpsl
mov
out
jo
in
dec
sbb
adc
mulb
xor
pavgb
pop
jmp
incb
es
movsb
pop
fwait
mov
sub
dec
fidivl
mov
xor
pop
mov
inc
decl
jbe
push
addr16
cmc
icebp
jno
cmp
and
mov
lret
mov
pop
xor
in
stos
les
inc
iret
dec
gs
and
mov
aas
out
push
and
mov
cltd
pop
enter
cmp
iret
mov
pop
dec
arpl
adc
xchg
aad
xor
loopne
xchg
cmp
and
into
stc
adc
mov
inc
pusha
xchg
es
lods
sbb
and
push
inc
inc
mov
sarb
pushf
mov
lret
ret
ljmp
cmpb
xor
and
fists
and
xlat
cmpsb
jge
fcompl
xor
fnsave
cmpsb
sub
insl
aad
xor
daa
jle
int3
jmp
jno
pop
ds
xchg
adc
inc
push
push
test
push
inc
and
or
bnd
and
push
sub
dec
sub
inc
aaa
fisubs
and
in
enter
push
scas
iret
sbb
adc
test
xlat
push
jno
cmp
inc
or
clc
fstpl
pop
xor
ds
in
lds
pop
xlat
test
push
mov
into
xor
js
pop
dec
mov
mov
loop
pop
xor
mov
scas
inc
lahf
mov
xor
xorb
lcall
xlat
push
jo
and
aam
mov
cltd
cmpsb
mov
xchg
mov
sub
lret
loopne
mov
js
mov
or
inc
mov
repnz
jb
rcll
jne
mov
jno
aaa
into
fcompl
xor
sub
gs
stos
loop
xorl
je
shl
cmp
lds
in
xchg
inc
xchg
sbb
push
jg
sbb
sbb
cwtl
leave
in
sti
popf
pop
jnp
dec
fsubl
xchg
inc
clc
ja
mov
cmc
push
popa
sbb
mov
push
js
fld
xchg
lods
push
repnz
sti
mov
xor
scas
in
add
cmp
add
outsb
in
mov
push
and
sub
xorl
hlt
icebp
pop
cld
jnp
sbb
push
std
cld
jae
dec
and
pop
das
outsb
xchg
add
bound
add
jbe
pusha
movl
pushl
mov
lea
jmp
xchg
mov
push
add
out
mov
mov
xor
push
jnp
test
fwait
or
cmp
dec
pusha
mov
mov
xchg
sahf
fdivr
xor
xchg
mov
add
push
cwtl
scas
sbb
and
mov
lahf
call
and
cmpsb
xchg
add
insl
xor
daa
lods
cld
jmp
lock
je
arpl
jo
out
sub
jp
shrb
pop
cs
and
call
push
pushl
pushf
pushf
lea
jmp
arpl
stos
popa
mov
repnz
incb
shl
out
stc
enter
ja
call
mov
mov
addr16
scas
faddl
jle
lods
mov
fmuls
sub
adc
into
popf
enter
push
dec
addr16
loop
sti
xchg
dec
cmpb
ret
adc
push
bound
lret
repnz
mov
dec
add
ss
and
shll
pop
sub
bswap
jmp
fwait
adc
insl
test
sbb
or
sub
sahf
fnsave
rolb
call
jmp
int3
mov
fcoml
pop
test
mov
adc
adc
bound
aam
fistpll
add
xchg
ret
add
dec
and
jp
ja
mov
pop
ficompl
inc
cli
inc
sbb
add
out
or
sbb
add
sbb
loope
pop
push
cmc
shlb
mov
mov
js
jge
mov
sahf
sub
inc
out
mov
jecxz
test
push
ja
xor
lcall
xor
sahf
add
and
sub
out
push
cmpsl
into
xchg
lcall
xchg
std
call
sub
test
jmp
cltd
push
inc
cmp
pop
pop
daa
sbb
jne
inc
out
sub
outsb
clc
icebp
fcom
jno
adcb
jns
xor
arpl
es
jg
add
shr
jmp
xor
bswap
enter
test
or
mov
jne
mov
adc
imul
jae
inc
inc
push
inc
push
dec
xor
cs
insb
add
jae
add
adc
sbb
jmp
sahf
sub
loop
cmp
insl
test
cld
pop
outsb
sahf
lcall
arpl
and
inc
dec
inc
mov
add
sub
test
clc
addps
test
xor
jae
aad
push
enter
adc
notb
stos
loope
push
out
mov
fadd
into
insl
sub
pop
sub
mov
pusha
movb
pusha
movl
jmp
jle
jo
cmpsl
jge
dec
aaa
pop
inc
jge
xor
cltd
enter
cld
lret
xchg
into
lods
jge
cmpsl
fnstcw
ret
pusha
push
mov
addl
xchg
adc
sahf
lret
jns
push
sub
mov
xor
jne
fcmovbe
jns
mov
xor
fwait
inc
push
sub
ret
cmp
xchg
cmc
and
ret
loopne
jnp
jp
test
adc
aaa
sub
cltd
test
fiadds
push
neg
fcompl
sub
dec
sbb
mov
cmpl
push
xchg
xor
xchg
int3
and
aad
aam
mov
imul
jge
mov
push
xor
adc
lods
rcl
or
repz
dec
dec
dec
flds
orb
aad
mov
out
mov
sbb
fisttpl
lret
push
add
push
inc
sub
aas
and
repz
cmp
into
inc
or
subb
fcompl
sub
push
pushl
lea
jae
call
inc
in
sti
sbbb
addr16
sub
enter
lods
sbb
cltd
mov
outsb
lods
pop
or
jp
add
das
push
pop
jmp
pop
lret
cmpsb
mov
dec
ret
adc
fdivrs
jge
mov
push
mov
pop
mov
sub
clc
insb
fldenv
int
jb
mov
mov
loope
sub
ja
in
inc
movsl
jne
lods
inc
out
jns
ret
mov
mov
jmp
les
ds
jne
dec
mov
scas
inc
add
clc
xchg
cmpsb
inc
xor
pop
sub
fbstp
xor
imul
fadds
push
popf
hlt
xor
push
adc
sbb
xor
cs
lds
mov
icebp
fldcw
cmp
cmpsb
lahf
pop
imul
ret
inc
pusha
lds
or
sbb
and
call
mov
fcoms
or
pop
sub
and
pusha
jmp
pushf
lea
jae
sar
sar
or
pushf
mov
bsr
or
sub
cmc
mov
bts
bsr
mov
movb
jmp
ja
js
push
cmpsb
pop
sbb
mov
push
fwait
repnz
mov
test
ljmp
jne
je
cmpsb
jae
jnp
stc
movsb
lods
sti
dec
int
shr
nop
and
fadds
call
push
dec
out
imul
faddp
xor
jbe
rcll
push
sbb
stos
inc
test
outsl
or
shl
sahf
sbbl
les
incb
rorl
stc
push
jno
fs
lret
push
pop
push
or
bound
fcompl
sub
add
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
xor
loopne
jge
or
shl
pop
xchg
fildl
push
clc
fwait
ret
ss
dec
mov
hlt
sahf
push
adcl
jp
dec
cmc
je
bound
add
ret
data16
or
inc
popf
jbe
movsl
sbb
push
cli
mov
sub
mov
pop
pop
popa
ljmp
inc
inc
dec
aam
inc
mov
inc
sub
mov
pop
sbb
aaa
test
fisttpll
push
call
dec
or
sub
mov
nop
cli
and
inc
xor
testl
cltd
clc
dec
mov
fdivrs
and
sub
test
and
andb
ret
imul
pop
loope
ss
xchg
jb
aad
mov
dec
cmp
mov
addr16
push
aad
jnp
hlt
hlt
iret
jmp
and
inc
test
add
js
mov
xor
jnp
pop
daa
mov
xchg
or
dec
sbb
mov
decl
or
pusha
into
xor
movsl
lock
lret
add
mov
mov
sti
sub
dec
mov
mov
mov
mov
jnp
int
adc
xchg
and
add
xchg
dec
mov
push
cmp
add
fistpll
inc
js
fstpl
jns
das
push
fldl
daa
notb
out
fs
jae
push
pushf
cmp
pusha
jmp
mov
mov
bound
fsubrl
pop
cltd
clc
aaa
into
jno
sub
out
and
sbb
mov
in
sarb
and
pop
loope
xchg
insb
jne
stc
mov
into
mov
mov
mov
lret
sbb
xchg
cli
stos
mov
pop
push
add
repnz
xlat
daa
jbe
sub
loope
popf
insl
mov
xor
sti
ret
popa
js
jp
lock
ds
inc
jecxz
popa
clc
xlat
scas
fcompl
es
and
bt
rol
stc
cmc
cmc
sub
cmc
pusha
bt
ror
call
bt
cmp
pusha
lea
je
push
pushf
pusha
pushf
lea
jmp
adc
cmpsb
in
scas
and
sub
inc
dec
dec
adc
mov
cltd
jmp
push
xor
fabs
push
into
dec
arpl
mov
xor
icebp
out
cltd
sbb
or
inc
invd
repnz
mov
mov
push
mov
adc
jmp
adc
cmp
es
mov
std
fs
push
test
cmp
dec
xlat
xchg
adc
cmpsb
sub
and
mov
and
jbe
fcoml
adcb
sub
lods
mov
shlb
int
pop
cmp
bound
in
imul
inc
add
filds
jne
adc
int
xor
sbb
int3
mov
pusha
mov
sbb
and
mov
ljmp
ss
cmp
int
imul
lods
cmp
ret
fdivrp
adc
dec
jns
int3
adc
nop
lahf
push
mov
pop
movsbl
cwtl
call
hlt
inc
sub
jge
stos
ficoml
cmp
std
insb
mov
xlat
mov
shl
jns
test
es
add
cli
xlat
data16
xchg
out
sbb
sub
cmp
push
sbb
stos
rclb
push
jbe
test
dec
in
cmp
in
dec
in
in
inc
in
cmc
cwtl
or
mov
pop
int3
add
pop
stos
push
push
pop
add
decb
fcompl
and
mov
or
fmulp
fwait
rcr
or
lahf
jp
or
mov
add
scas
das
adc
adcl
ljmp
xor
mov
xchg
xchg
mov
repz
jne
cmp
clc
mov
bnd
adc
push
and
das
push
clc
lret
repz
dec
sub
call
fcompl
and
loop
mov
pushf
lea
jae
stc
cmc
push
stc
cmp
pusha
pushf
pushf
jmp
adcb
lds
in
in
pushf
and
nop
mov
shr
jo
mov
xchg
mov
test
pop
jns
divl
pusha
sbb
lea
mov
cmpsb
js
dec
mov
jle
outsb
xchg
mov
fadds
sbb
jae
mov
push
ds
movsb
push
stos
fmuls
or
out
or
out
lret
sbb
stos
mov
out
jl
loop
sub
and
jne
add
pushf
clc
call
call
sahf
sub
cmp
push
jge
add
call
fsubs
sbb
cmp
inc
aad
pop
cmp
mov
enter
jbe
les
adc
ficoms
nop
pop
cmpsb
jne
and
jno
clts
test
fcompl
and
and
in
mov
adc
pop
xchg
adc
test
jl
lret
pop
mov
inc
repz
psllq
mov
and
rolb
sub
call
test
add
sbbb
and
stc
out
lods
and
test
lock
mov
pop
movsl
add
jp
lock
jle
mov
sub
mov
int
pop
pop
or
inc
jns
cld
in
pop
ret
ja
adc
mov
xchg
clc
mov
sbb
or
aad
pop
andl
loop
pop
cmp
lods
xchg
enter
imul
das
cmp
cmp
adc
xor
lock
loope
mov
xchg
xchg
inc
or
test
inc
nop
ret
pusha
mov
ret
ret
pop
sbb
int
or
and
push
out
test
test
neg
jmp
push
mov
push
lea
jne
push
stos
pusha
lea
jmp
cmp
inc
pop
mov
icebp
sbb
sbb
test
into
jne
jg
sbb
jbe
inc
xor
pop
mov
push
adc
push
push
shl
jb
cmp
or
sub
pushf
mov
das
pop
xchg
leave
fwait
pop
jmp
addr16
or
jb
mov
cli
pop
loop
iret
push
mov
call
mov
add
addr16
push
inc
mov
mov
and
aad
ss
mov
pop
std
add
cmpsb
fcompl
and
bound
rol
sub
mov
or
in
rclb
shl
shrb
sarb
fisubs
rcrb
ror
mov
mov
mov
in
lcall
jg
sarl
movsb
test
stos
add
sub
mov
sti
dec
mov
sub
mov
pushf
mov
jle
cmp
mov
call
fsubr
fwait
cmc
and
mov
sbb
xchg
scas
jecxz
mov
ret
test
mov
ret
mov
shrb
inc
xor
mov
mov
mov
mov
mov
hlt
cli
xor
and
loope
add
bound
addb
inc
add
lods
inc
mov
xchg
mov
cmp
mov
dec
fwait
mov
bound
insl
ret
mov
in
subb
shrl
shlb
dec
out
out
pop
dec
sub
call
lret
out
or
ret
imul
jp
shll
das
iret
mov
call
data16
in
add
insb
ret
sub
inc
dec
cmpsb
imul
cmp
add
cs
out
out
or
stos
loop
test
stc
mov
pop
jmp
ljmp
mov
sub
sub
test
imul
cmp
mov
sti
pop
sbb
xor
aam
mov
mov
inc
pop
adc
push
pop
je
push
ss
and
pop
dec
cmc
movsl
xlat
xchg
je
push
xor
xor
movq
je
sub
imul
das
add
mov
jge
aaa
loope
dec
and
lods
and
dec
int3
add
stos
in
jmp
and
lods
lret
ja
call
sub
mov
xor
sub
sub
jle
jmp
das
sahf
push
popa
mov
addb
inc
fcmovb
add
inc
clc
mov
in
rcrb
popf
xchg
add
mov
push
test
mov
inc
rolb
mov
scas
or
test
xor
roll
adc
fdivrl
jae
test
xor
fstps
rcll
mov
xor
mov
and
mov
inc
push
fidivrs
mov
cmp
imul
jg
mov
cmp
mov
jp
outsl
mov
or
mov
pop
lods
xor
xor
or
and
xchg
cmp
das
out
inc
ss
sarb
fidivrs
push
cmp
adc
pop
mov
testb
mov
aam
sbb
into
fstpt
test
ret
in
sahf
mov
mov
gs
mov
mov
fsubl
scas
ret
mov
in
cwtl
adc
cmp
and
cmpsl
add
imul
test
sbb
rolb
leave
mov
inc
cltd
pop
ss
xchg
add
cmp
dec
mov
ffree
or
movsl
mov
inc
ja
mov
cmpsl
xor
mov
add
inc
out
ss
mov
test
inc
fwait
xor
popf
dec
cmp
pop
inc
jo
sub
add
ret
or
or
mov
jg
es
in
mov
das
gs
sbbb
mov
inc
or
sbb
add
leave
mov
das
aas
xlat
int3
push
and
add
xlat
cltd
adc
scas
sub
mov
mov
sti
mov
and
add
inc
cltd
shll
pop
out
es
pop
dec
mov
sti
lods
outsl
ds
das
gs
js
and
cmp
or
shll
add
dec
in
iret
shrl
or
sarl
adc
cwtl
fildl
loopne
jle
pop
mov
push
mov
xor
and
xchg
cmpb
xchg
mov
rorl
movsl
icebp
xlat
in
roll
and
ret
shrl
xchg
cmpsb
pop
cmpsb
cmc
shr
sbb
aaa
mov
mov
mov
mov
mov
mov
aam
and
aaa
and
or
shrl
mov
inc
xchg
xchg
pop
cmpb
rcll
sub
inc
adc
mov
jl
mov
and
inc
cs
adc
pop
insb
fnsave
push
mov
je
clc
push
enter
es
push
push
and
je
fstpl
lds
pop
iret
std
lret
inc
mov
add
or
pop
jb
jae
xor
inc
test
mov
sbb
mov
dec
cli
or
add
add
sub
hlt
xchg
inc
cmpb
rcl
adc
aas
and
rorb
testl
mov
hlt
pop
and
shrl
ss
out
or
inc
xor
mov
mov
ror
aas
int
shr
fsubs
fisubs
add
xor
dec
ret
pop
mov
pcmpeqw
cmp
jecxz
je
inc
imul
movsb
int
adc
xor
push
nop
idivl
adc
scas
lea
inc
out
push
out
mov
out
test
mov
into
fldl
inc
dec
mov
push
inc
xchg
xchg
mov
xor
jbe
lods
ss
shlb
mov
add
mov
mov
cmp
aaa
inc
xorl
cmp
pop
mov
xor
ss
inc
sbbl
lcall
xor
push
je
lock
mov
hlt
aaa
mov
sub
outsb
or
fldt
test
iret
inc
outsl
enter
mov
mov
out
lods
mov
orb
ret
call
sub
and
inc
flds
fs
cmp
imul
cmpsb
and
in
imul
push
test
mov
out
dec
lock
add
int
rorl
test
jmp
push
hlt
stos
mov
rol
mov
push
out
es
sub
or
stos
dec
jl
cmp
lret
lods
leave
leave
enter
test
mov
cmpsb
test
push
rol
scas
pop
or
inc
sub
ret
iret
outsb
enter
and
dec
sub
call
mov
jmp
ret
mov
dec
mov
mov
and
popf
inc
shl
test
ret
stc
ds
push
inc
inc
divl
push
and
into
leave
lods
mov
mov
scas
xchg
out
pop
jo
movsl
inc
mov
xor
pop
lods
nop
xor
push
cmp
icebp
cmc
jge
loope
push
push
xor
mov
adc
hlt
inc
inc
sbbb
cltd
cmp
push
ss
mov
cmp
sub
push
add
pop
mov
mov
jp
icebp
inc
mov
jle
andl
mov
hlt
iret
push
aad
jecxz
aaa
jae
aas
mov
mov
and
xor
jg
mov
mov
pop
fcomps
mov
pop
mov
stos
mov
ja
mov
fcom
xchg
cmp
mov
rolb
xor
rcr
pop
lock
aam
movsl
push
xchg
scas
aad
inc
pop
cmp
inc
push
imul
int
repnz
inc
stos
test
mov
cmpsl
call
fs
pop
int3
mov
lods
into
sub
inc
add
jecxz
out
jno
mov
and
mov
out
mov
int
sub
icebp
jb
pop
ret
fisubrl
mov
cmp
jmp
int3
fs
nop
cmp
and
iret
jmp
aas
mov
xchg
packssdw
imul
or
outsb
dec
push
outsl
ret
and
or
push
mov
pushf
cmp
data16
loop
mov
je
aad
mov
testl
scas
aaa
sbb
lcall
loope
clc
mov
cmp
mov
mov
xor
setp
ss
cmp
push
mov
mov
and
cmp
jg
lcall
arpl
hlt
and
xchg
movsl
cmp
and
mov
into
aam
test
clc
fisubrs
pop
xor
inc
cli
xor
cmpsl
cmpsl
outsb
test
inc
or
aad
movsl
rol
or
test
rolb
jb
jge
jge
adc
mov
mov
and
es
push
mov
jbe
xor
loop
mov
aaa
jbe
pusha
jp
mov
inc
pushf
test
add
xchg
mov
push
push
cmc
rcrb
pusha
mov
sarl
pop
lcall
cmp
inc
rclb
inc
jp,pt
pop
xchg
and
mov
lahf
cmp
pop
or
jnp
mov
movsb
jns
out
ds
mov
cmp
sbbb
sti
mov
shlb
mov
inc
cld
sub
push
mov
daa
xchg
xor
sub
mov
mov
add
aam
dec
mov
and
cmpl
xor
pop
jge
or
lock
test
ret
cmc
std
inc
and
add
inc
add
xor
add
loope
jne
imul
mov
push
cmpsb
mov
fld
add
or
mov
push
aam
stc
xchg
xor
adcl
fistpll
adc
lods
cmp
jle
push
jb
cltd
mov
sub
xchg
hlt
iret
mov
inc
inc
sub
fucomp
fidivs
scas
out
aam
jae
jns
outsl
sub
mov
cmp
mov
insb
add
pop
mov
xor
cltd
je
cmp
cmp
mov
std
pop
je
add
inc
add
lcall
rorl
scas
inc
cmc
cmc
cmp
push
js
cmp
std
add
test
xor
roll
jb
inc
mov
mov
cmp
xor
out
jl
out
inc
jp
adc
sarl
stc
test
loopne
mov
jnp
pop
push
pop
fistl
je
sbb
inc
xor
xchg
cmp
cmp
movsb
scas
sub
and
mov
mov
popf
dec
arpl
sub
shrl
jle
lea
jle
cmp
xchg
mov
icebp
ds
mov
xor
inc
xchg
xchg
loopne
xlat
push
cld
call
adc
rcrl
inc
shrl
or
outsl
sub
mov
cmp
jno
fs
sub
mov
cs
and
xor
xchg
mov
loope
xor
mov
mov
lods
nop
xor
cmp
add
mov
loopne
xor
xchg
mov
mov
nop
mov
pusha
cmp
inc
xchg
mov
and
cmp
jecxz
cmp
xchg
mov
mov
arpl
cmp
mov
mov
loop
cmp
xchg
mov
mov
pop
sbb
push
nop
inc
jle
cmp
xchg
roll
scas
cmp
daa
lahf
xchg
pop
andb
sbb
and
ds
jle
cmp
pop
subb
sbb
test
ljmp
xchg
filds
jbe
ss
mov
jne
xor
xchg
je
xor
testl
loope
add
add
mov
mov
or
cmp
sub
xor
push
xor
lods
ret
pop
ds
pop
loop
ret
addl
pushf
jle
sbb
cld
jge
mov
sbb
popf
xor
mov
mov
jne
xor
ja
aam
push
ret
mov
add
loop
sahf
jle
pop
aaa
dec
add
fwait
ret
and
add
sahf
and
xorb
fbld
ret
jns
fwait
addl
ret
push
mov
add
enter
imul
imul
or
adcb
popa
dec
popa
imulb
cmp
add
mov
je
lahf
pushf
loopne
fstpl
mov
inc
shlb
fbld
inc
sahf
es
xchg
addl
ret
xor
inc
in
sub
pop
and
sbbb
jecxz
ret
jl
arpl
andl
mov
out
inc
arpl
lea
cmpb
popl
inc
cmp
jle
mov
shlb
fistpll
jno
xchg
pop
jns
pop
mov
ds
rcrl
or
test
push
roll
ffree
jne
mov
insb
jl
ds
aas
inc
incl
and
sbb
sbb
mov
scas
imul
sahf
inc
inc
pop
mov
into
sahf
arpl
aas
cmp
inc
cmpb
pop
inc
fs
add
jmp
mov
ret
fstpt
aas
rcrb
mov
cmpb
out
xor
pop
mov
adc
and
filds
sbbb
dec
aas
jge
sbb
cmpsl
daa
fisubs
sbb
adc
call
pop
repz
sahf
aaa
xorl
sbb
andb
pop
sahf
mov
mov
inc
mov
fnstcw
cmpb
jge
adc
inc
sahf
andb
mov
and
insb
inc
cmp
pop
mov
sti
pop
addb
add
xorb
ret
loop
and
and
pop
filds
popf
cmp
ss
jl
and
ds
xor
cmpb
pop
mov
cwtl
jl
sbbb
add
cld
sarl
mov
ret
mov
mov
mov
nop
fwait
pop
xorb
mov
cmpb
mov
and
cmp
add
xorb
pop
popf
fidivl
sub
inc
jge
adcb
arpl
mov
cmp
jl
jmp
xorb
mov
popa
adc
sbb
iret
cld
mov
mov
xor
rorl
int
test
mov
rcr
flds
mov
loop
rcrb
mov
shll
mov
fdivr
pop
faddl
add
pop
mov
xchg
add
jno
sbb
ja
fnstsw
push
shrb
cld
sbb
sub
sbbb
jbe
jge
sbbb
pop
mov
shl
jl
adc
mov
enter
jb
shlb
add
push
xorb
roll
jl
pop
cmp
adc
loop
andb
test
cmp
nop
popf
test
sbb
add
push
jno
sbb
andb
push
inc
xor
jns
arpl
jnp
test
fcomip
xor
mov
nop
inc
mov
adcb
mov
pop
daa
cmp
pop
pop
lcall
fdivrl
sbbb
xchg
repz
add
cmpsb
shll
cmp
and
sbbb
mov
sbb
test
mov
add
stos
add
dec
adc
repnz
inc
mov
mov
sarl
dec
and
sbbb
mov
rorl
mov
cmp
lods
icebp
test
mov
rcrl
jle
pop
pushf
test
jle
insl
mov
sub
and
or
in
mov
int3
call
into
pop
arpl
shlb
ret
mov
dec
dec
pop
ds
fs
mov
cmpb
cmp
xchg
loopne
cld
mov
xor
mov
and
mov
pop
cmpb
lcall
mov
subl
inc
inc
dec
cmc
das
mov
test
call
push
mov
inc
cmp
cmp
pushf
adc
jne
jmp
cmp
mov
pop
filds
adc
sub
inc
jmp
test
addb
sahf
mov
imul
mov
add
cmpb
cmpb
mov
pop
add
cmpb
pop
das
sbbb
dec
inc
sub
mov
or
xor
std
mov
or
popf
adcb
and
orb
flds
jl
loop,pt
jle
idiv
jp
and
mov
test
push
and
out
pop
addl
pop
sub
mov
sahf
inc
ljmp
xchg
lret
pop
andb
cmpsb
mov
mov
mov
subb
inc
mov
rcrb
push
imul
pop
lds
shll
gs
and
adcb
shlb
in
cmpb
pushf
cmp
popf
movsb
outsl
ret
and
ds
xor
call
fs
nop
inc
mov
mov
lods
add
mov
jge
sbbb
pop
out
cmp
sbbb
add
arpl
cmpsl
popf
mov
orb
mov
andl
mov
inc
mov
cmp
fdivl
and
nop
jge
sbb
jl
pop
dec
fs
and
nop
rol
jecxz
fadds
int
xchg
and
ret
inc
mov
sahf
mov
subb
jbe
adc
mov
sbbb
gs
mov
xchg
rcr
cmp
or
test
xorb
push
and
cmp
adc
loopne
je
pop
push
add
mov
mov
rcrb
daa
inc
test
andb
inc
and
cmpb
filds
outsl
cmp
inc
jecxz
adc
jge
xorb
jl
addl
sahf
cmpsl
andl
roll
into
sahf
ret
sti
flds
pop
jecxz
and
jge
mov
mov
pushf
pop
sahf
mov
int
fstpl
jle
mov
inc
xor
orb
cwtl
pop
into
mov
subb
mov
cmp
mov
mov
loopne
pusha
sahf
jl
cmp
popf
xchg
jge
jle
pop
ret
mov
sub
cmp
and
bound
neg
popf
mov
and
lock
subb
fadds
inc
dec
pop
xorl
mov
sbb
data16
daa
pop
fistpll
outsb
mov
cmp
lahf
adc
and
xor
pop
xchg
rol
jo
roll
jge
pop
xor
incb
fidivrs
fistpl
sbb
mov
ss
sub
xor
mov
push
shll
sbb
sbb
add
sbb
sar
cmp
bound
scas
inc
arpl
and
fdivl
inc
mov
fwait
mov
mov
mov
stos
and
sbb
mov
mov
jo
shlb
pop
pop
mov
bound
idivb
mov
out
inc
cmp
lods
outsl
mov
frstor
xchg
fistps
mov
shl
xchg
shlb
jecxz
rol
fnsave
mov
and
icebp
xor
aas
out
fcmovbe
push
and
icebp
icebp
xorl
sub
inc
push
in
icebp
add
cmpl
mov
loopne
cmpl
arpl
sarl
xchg
loope
movsb
cmp
inc
push
jecxz
cmp
mov
andl
pusha
movsl
cmp
mov
sbb
xor
dec
xor
cld
out
incb
roll
mov
test
inc
iret
mov
mov
jge
movsb
push
ffreep
je
sub
jle
mov
add
sub
push
jmp
es
sub
hlt
cmp
inc
xchg
jb
fst
inc
loopne
xor
shrb
outsl
xor
stc
test
mov
sbb
shl
mov
jp
adc
jb
shrl
and
mov
pop
inc
push
and
mov
cmp
loopne
jle
ret
xor
repz
dec
mov
add
mov
js
ret
pop
xor
add
sub
sbb
add
cmp
push
std
cmpsb
add
ds
mov
mov
sti
mov
fcompl
xor
jl
jbe
push
gs
loope
in
mov
jge
jp
xchg
test
scas
popa
fstpl
inc
jge
arpl
lahf
inc
ja
mov
and
shl
in
lods
dec
ljmp
cld
roll
mov
insb
mov
mov
incl
test
xchg
pop
lods
inc
rcll
mov
pop
mov
mov
loopne
fcompl
shll
cmpb
mov
hlt
jo
aas
push
sbbl
and
inc
shll
mov
mov
das
mov
out
movsb
pushf
outsb
cmc
lea
cmpb
rcrl
push
imul
movsl
cmp
jb
loope
sbb
cli
mov
ret
mov
push
cmp
push
xor
ja
cs
inc
inc
sahf
xor
adc
roll
pop
sarl
ficoml
andb
jbe
sub
xor
push
sarb
das
mov
xor
aas
ss
cmp
arpl
or
outsb
and
jle
addr16
add
mov
pop
sbb
loop
xor
insb
push
movsb
jl
push
fldt
sub
inc
inc
jnp
sub
mov
xchg
sub
mov
jmp
cwtl
ss
push
rol
ds
push
push
xor
jne
sbbl
subl
ljmp
sahf
cmp
add
mov
loop
daa
sbb
xlat
sub
cmp
and
out
xor
shll
mov
cmp
arpl
ret
mov
cltd
jmp
and
inc
mov
mov
loope
mov
cmp
sub
lcall
cmp
pop
js
cs
hlt
xor
cwtl
lcall
add
push
inc
adc
ret
add
std
mov
inc
hlt
xchg
aam
cmpsb
sbbb
cmp
sbb
jl
cmp
subl
enter
mov
and
push
mov
subl
cld
imul
sub
popf
push
mov
test
test
mov
in
hlt
pusha
jl
sub
mov
or
cmp
mov
cmp
mov
add
sub
je
pop
sub
shr
cmp
sub
daa
sub
mov
ffree
mov
das
addb
or
rolb
pop
mov
notl
sbb
inc
pusha
xor
cmp
jmp
andb
xor
mov
and
sbb
lcall
cmp
mov
filds
inc
cmp
dec
cmp
test
push
ja
add
add
loopne
mov
xor
cmp
mov
lcall
out
xor
mov
add
mov
pop
xchg
les
mov
pop
mov
ja
ljmp
and
popa
pop
sarb
inc
jo
roll
xchg
subl
clc
out
jle
xor
jp
cmp
mov
mov
and
lret
jl
test
jb
mov
jl
add
sub
shrb
mov
clc
inc
sub
repz
cmp
adc
mov
jp
outsb
and
popa
add
jns
xor
jge
icebp
inc
and
icebp
xchg
shrl
imul
mov
mov
cmp
js
mov
negl
subb
xchg
in
and
insb
or
roll
and
ret
xchg
inc
jae
cmpsl
ret
scas
inc
ljmp
jge
xchg
push
jmp
pushf
jl
repnz
inc
cs
mov
loope
lods
lods
cs
scas
lods
cmpsl
xor
or
repnz
pusha
add
push
sahf
push
mov
es
sub
popf
mov
ds
lahf
xor
sbb
ss
cmp
mov
out
add
imull
lods
sbb
xor
cli
shlb
add
sbb
cld
mov
and
add
loope
xchg
orb
xor
iret
inc
mov
dec
jle
and
icebp
mov
mov
push
adc
mov
pop
scas
loope
inc
inc
sub
scas
mov
imul
xor
push
and
jecxz
xor
std
jnp
mov
mov
pusha
popa
mov
lods
popa
mov
jne
sub
imul
jb
mov
je
sub
push
cld
gs
mov
stos
int
mov
mov
inc
lock
mov
repz
mov
pushf
call
cmp
jp
and
xchg
push
cmp
cli
pushf
jb
in
mov
xchg
mov
mov
and
lcall
mov
jb
jl
fsubl
repnz
js
js
sub
divl
add
sbb
cld
xorb
xchg
pushf
jmp
inc
insl
lock
sbb
add
xchg
sub
aaa
mov
sub
mov
cmp
out
out
mov
and
cmp
jle
mov
dec
or
and
add
outsb
xor
sub
add
in
push
xorb
cmpb
lods
stos
xor
out
lods
mov
sub
and
repz
fidivrl
mov
xchg
or
cmp
sub
mov
mov
movsb
adc
dec
std
mov
mov
mov
push
pop
inc
fisubrl
test
xor
add
add
sub
add
out
jo
push
popf
pop
inc
ds
insb
inc
cmp
xor
mov
clc
mov
loopnew
push
repnz
cmp
loope
xor
ss
bound
jo
push
xor
clc
pusha
xor
inc
mov
mov
shlb
xchg
test
imul
cli
xor
jp
pop
inc
ss
andl
mov
popa
mulb
mov
imul
mov
clc
mov
sub
push
xor
inc
mov
jae
lret
inc
ja
push
shll
cmp
pop
push
inc
push
push
mov
mov
and
cltd
inc
cltd
mov
insl
sub
imul
jl
lods
cltd
inc
jne
loope
lret
rorb
jl
sti
push
mov
and
xor
fisubl
pushf
add
pusha
jne
pop
jg
stos
sbb
and
sub
das
popf
scas
lcall
das
shrb
faddl
icebp
pusha
mov
sbb
gs
mov
arpl
inc
rcrb
mov
daa
and
and
inc
test
xchg
cmp
mov
mov
popf
hlt
push
rcrl
jecxz
sub
addb
sbb
adc
mov
je
subl
jbe
jb
sub
outsb
aas
pusha
jecxz
loop
addr16
inc
loop
cs
mov
jo
cmp
push
push
das
sbbb
pusha
mov
loope
sahf
mov
jnp
inc
insl
lock
outsb
out
cltd
sub
cmp
jmp
push
xchg
mov
xor
test
mov
mov
cmp
xchg
ss
add
shrb
pop
mov
inc
dec
shll
mov
sub
xor
and
insl
mov
pop
fs
ss
adc
inc
and
andb
popf
outsb
and
lock
scas
sarl
data16
sbb
jne
test
lods
mov
cmc
mov
xor
jae
jb
jp
popf
jmp
testl
daa
cmp
mov
pusha
jl
push
std
pop
js
add
jle
jb
jp
lcall
cmpl
roll
and
testb
xor
rcrl
add
call
pushf
sarl
cmp
sub
addb
mov
mov
cmpsb
dec
test
jle
div
in
fldl
imul
push
cmpsl
jns
jl
add
ja
jle
mov
shll
movsb
pop
pop
mov
mov
imul
add
rcrb
int3
xchg
xchg
jb
sub
arpl
jne
jl
jle
mov
sub
inc
repz
sbb
xor
mov
inc
gs
jae
lods
xchg
lods
subb
xor
mov
sub
and
pop
shlb
xor
sub
sarl
stos
and
mov
cmp
sbbb
inc
and
mov
lods
in
cmp
and
sub
and
data16
mov
pusha
sbb
cwtl
cmp
sub
addl
cmpsl
in
and
jb
shll
icebp
inc
out
mov
cwtl
bnd
ds
add
sub
cmp
mov
pop
mov
popf
push
mov
pushf
stc
pushf
push
add
sub
and
cmp
add
ljmp
sub
cs
or
mov
inc
jns
jb
sarl
push
push
mov
popf
scas
hlt
add
scas
xchg
jo
insb
test
clc
mov
mov
out
cmp
push
ret
ds
das
and
dec
jb
div
sub
std
stc
xor
mov
imul
push
jmp
mov
ret
iret
mov
sbbb
cmp
or
lods
in
jne
lock
mov
out
cmp
inc
in
cmp
mov
insb
dec
xor
mov
fnstenv
mov
mov
sbb
mov
xor
popaw
mov
stos
or
jmp
cmp
sbb
sub
insb
cmp
movsb
test
fbstp
fistpl
inc
add
addb
in
mov
sub
and
xchg
cmpsl
fldl
xchg
out
jae
sub
jb
popf
mov
and
and
mov
mov
mov
mov
jae
mov
xchg
loope
loop
pop
sahf
jmp
in
push
sub
xchg
cmp
and
mov
shr
add
out
add
popa
stos
jbe
xchg
shlb
mov
mov
and
dec
stos
mov
ret
movsb
cmp
dec
cmpsb
xor
cmp
sub
add
adc
sub
test
jb
jne
inc
lock
ret
cmpsb
rcrl
lods
out
cld
fucomip
in
cmp
stos
das
aaa
leave
sub
inc
lods
mov
sbb
sbb
and
and
mov
in
sahf
std
ss
xchg
in
rcll
sahf
in
sahf
js
data16
mov
rorb
dec
push
cmp
ja
mov
xchg
pop
cmp
mov
cmp
addr16
mov
pusha
test
add
mov
xchg
shlb
xor
and
sub
shrl
sbb
inc
push
cwtl
loopne
cld
ret
push
daa
addb
je
jp
push
xchg
xor
adc
cmp
leave
xor
outsb
mov
cmp
and
cmpsl
mov
mulb
jle
ljmp
inc
ret
addr16
jle
ljmp
xor
pop
cli
dec
cmp
cwtl
add
jb
das
or
pop
push
mov
daa
clc
cmp
add
jb
popa
jbe
inc
insb
sub
pop
lods
cmp
js
inc
shll
pop
add
dec
movsb
cmp
repz
cmp
mov
pusha
arpl
out
push
xor
xchg
jne
and
mov
cmp
inc
sbb
ja
fisttps
cmpl
pop
aaa
jo
sti
out
mov
push
mov
mov
pop
enter
mov
and
mov
insb
mov
inc
jmp
fadds
ljmp
std
mov
mov
popf
repnz
cwtl
es
fisttpll
int
lret
mov
sbb
add
xchg
sub
and
enter
fdivl
aaa
pop
lea
mov
scas
subb
imul
jne
incl
inc
jecxz
mov
push
xor
xorb
dec
test
xor
test
xchg
out
jae
sbb
push
mov
adcl
cli
movsl
cmp
mov
rcrb
cld
jle
add
jnp
sbb
lea
popa
mov
lods
gs
fs
inc
xor
or
out
sub
jmp
stos
mov
outsl
lcall
add
cltd
mov
popaw
inc
in
hlt
ret
ds
push
cmpsl
and
ds
add
add
sahf
add
push
lods
mov
movsb
mov
je
scas
js
xor
rcrl
outsl
in
out
jns
mov
mov
popa
sub
cld
fisubs
pop
add
mov
dec
xor
cmp
inc
mov
pusha
mov
adc
icebp
sub
mov
subl
mov
mov
lods
scas
jge
fdivl
pop
jge
ljmp
pushf
push
jle
xorb
popa
arpl
int
xchg
ds
adcl
sarl
mov
cmp
repz
mov
mov
dec
fs
data16
mov
addr16
cmp
xchg
add
repz
cmp
and
fbld
stos
mov
jle
xchg
jle
push
inc
dec
jne
sub
cmp
mov
push
out
popa
stos
xchg
mov
clc
inc
shll
popf
sub
adc
mov
xor
adc
mov
movsb
in
mov
or
roll
mov
mov
gs
scas
inc
xor
jno
xor
sti
xchg
loopne
cmp
xchg
mov
push
jns
testb
jbe
jle
arpl
outsb
ss
or
pop
lock
sbb
popf
sbb
cmpsl
dec
xchg
dec
mov
div
popf
mov
shrl
sub
inc
loope
sbb
scas
cli
ret
test
dec
clc
xchg
mov
or
mov
ja
mov
or
adc
mov
das
mov
sbb
inc
outsb
adc
daa
mov
xor
inc
in
loopne
loopne
sub
ljmp
cs
mov
push
xor
repz
aas
mov
sub
sub
cwtl
mov
aas
pop
adc
push
clc
inc
push
outsb
cmp
bound
xchg
movsl
mov
pusha
jae
mov
sbbb
outsl
sbb
mov
sbb
xchg
cmp
xor
add
inc
xor
mov
jl
stos
lods
movsl
push
rol
jno
das
cltd
and
push
add
and
jp
aaa
ret
xor
dec
jge
pushf
jbe
push
popa
sub
pop
mov
sbb
xchg
ret
mov
sub
mov
jg
inc
cmp
out
add
xor
mov
cmp
inc
push
std
sbb
jl
cltd
aaa
cld
mov
sub
mov
xor
in
sub
mov
and
cld
add
lret
jp
or
mov
dec
and
mov
ja
jle
adc
adc
mov
add
mov
filds
mov
jne
ret
pusha
hlt
push
call
add
inc
mov
test
sub
jae
mov
mov
push
jecxz
mov
lock
mov
sarl
lea
cmp
sbbb
inc
pop
adc
pusha
sti
add
js
test
popa
imul
out
push
mov
push
negb
lea
lcall
in
and
lret
push
imul
and
add
and
inc
add
mov
lods
cmp
jmp
jecxz
mov
add
mov
mov
mov
inc
in
sti
or
in
mov
dec
xorb
sahf
xor
loopne
add
or
jmp
mov
cld
and
pop
inc
jmp
jne
in
jns
filds
inc
cs
aas
adc
jne
jl
jnp
xchg
int3
push
xor
and
add
out
and
test
mov
sbb
jl
cmp
cmp
add
stc
xchg
and
mov
filds
and
hlt
mov
mov
push
scas
cmp
add
shlb
outsl
jge
add
out
arpl
mov
cmp
jmp
ss
rol
idivb
jp
cmp
jae
test
ret
imul
add
test
push
add
cli
sarb
imul
clc
and
push
add
mov
pop
es
inc
xchg
jne
repz
xorl
in
rclb
repz
test
cmp
leave
and
inc
loopne
test
cwtl
sub
pop
jge
inc
mulb
jp
rolb
insb
cmp
lods
add
pop
pop
dec
and
outsb
mov
cmp
sbb
orl
cmp
jmp
fwait
outsl
rol
add
popa
rcrb
fisubs
cmp
mov
push
sub
les
cmp
and
mov
rolb
ss
mov
xlat
adc
xchg
incl
insb
and
add
add
and
pop
mov
add
popf
mov
pop
bound
cmp
fbstp
fstpl
pushf
test
push
cli
insl
mov
xor
cmpsl
lahf
sbbb
adc
loopne
fsubs
xor
mov
add
cmpb
xor
and
jg
das
inc
add
fldt
mov
pop
icebp
aaa
and
and
icebp
mov
lock
neg
sbb
cmp
lods
add
pop
imul
xor
xor
inc
inc
jp
std
repz
fcoml
and
xchg
jp
fdiv
push
pushl
fimull
mov
add
xor
xchg
cld
mov
je
pop
sar
scas
jle
cmp
jle
sbb
fistpll
lahf
jmp
repz
mov
pop
add
jge
insl
cmp
push
mov
add
sbb
rolb
mov
mov
sarb
addl
pushf
cli
push
pop
int3
add
mov
out
loopne
inc
mov
pushf
jle
cmovp
mov
ffreep
outsl
jge
fcoms
shll
and
inc
jge
inc
cmp
repnz
in
mov
insl
add
dec
ds
inc
jl
div
pop
dec
test
insb
loop
sub
cwtl
xor
imul
popf
sbb
fdivs
add
pusha
mov
mov
push
xor
inc
mov
int
sub
ds
jnp
mov
ss
mov
je
ds
inc
pop
test
shlb
adc
roll
mov
int3
cmp
divb
je
xor
filds
mov
pusha
xorb
das
mov
insb
sub
in
loope
jnp
mov
dec
insl
mov
test
sbb
outsb
imul
dec
mov
mov
call
mov
andb
xorl
add
xor
lods
add
mov
out
jne
sbb
sub
shlb
fbstp
mov
popf
mov
cmp
cmp
sub
add
sub
cs
sub
jne
inc
and
outsb
inc
shlb
movsb
pop
adc
das
mov
sub
sbb
mov
and
mov
aaa
jae
mov
add
jg
xor
bound
and
mov
add
sar
ret
pushf
mov
loop
jge
sub
mov
add
mov
jns
repnz
mov
add
insb
scas
jae
mov
loope
inc
adc
div
cmp
lods
sarl
dec
mov
sub
xor
jo
xchg
mov
mov
cmpsb
adc
sahf
mov
push
xor
fwait
in
push
pop
push
daa
jecxz
addb
outsb
in
mov
add
push
sbbl
inc
imul
repz
cmp
shlb
dec
xor
sub
fistpl
xchg
inc
fbstp
test
lea
ja
sti
and
std
ret
mov
cltd
xor
imul
jns
repz
add
jb
sbb
fs
std
push
and
rcr
icebp
daa
pop
out
icebp
fdivl
jno
mull
jle
hlt
xchg
mov
mov
out
pop
sbb
das
cwtl
adc
aad
jne
mov
mov
dec
mov
push
hlt
ret
xchg
push
lea
jle
adc
pop
rcrl
pop
cmc
xlat
cwtl
xchg
mov
ja
je
mov
xchg
nop
jne
mov
push
bound
cmp
xchg
cmc
adcb
push
pop
push
mov
ja
push
adc
xor
mov
sbb
fnsave
cld
mov
mov
in
jmp
sub
leave
push
push
inc
xor
mov
push
push
fsub
mov
daa
mov
dec
mov
dec
pop
pop
jl
pop
mov
mov
insb
test
sub
xor
aaa
add
orl
mov
xchg
dec
lret
jg
cwtl
fsubl
or
jmp
adc
les
movsb
xchg
sarb
dec
xor
fs
mov
inc
fistpl
cmp
cmp
and
inc
or
sbb
jecxz
pop
adc
pop
mov
arpl
xor
mov
rcrl
stc
jp
clc
or
popa
shlb
jle
cmp
ds
jle
cmp
fmull
mov
mov
test
test
das
ds
mov
sub
scas
xorb
mov
mov
mov
mov
mov
xchg
mov
mov
mov
jle
cmp
sarl
inc
movsb
mov
sub
stos
sub
lods
xorb
xor
cmp
cmp
xchg
cmp
cmp
inc
and
sbb
jle
jno
test
ds
mov
stc
cmp
mov
ds
mov
clc
cmp
mov
ds
mov
sti
cmp
mov
call
dec
push
lahf
lock
cli
cmp
xor
push
sub
je
push
ds
adc
idivl
cmp
mov
inc
push
fidivrl
jecxz
out
sbb
aaa
xchg
inc
jecxz
das
sbb
aaa
push
fidivrl
jecxz
out
sbb
sbb
cmp
push
scas
js
cltd
hlt
mov
xor
fs
loopne
mov
cmc
and
stc
pushf
jl
rorb
mov
sub
jmp
fnstcw
pop
xchg
pushf
rorl
pop
iret
sub
movl
xchg
shlb
sub
and
scas
mov
xchg
mov
nop
mov
je
lahf
cmp
pop
lock
aad
fidivl
sub
jmp
call
sub
in
pusha
in
es
popf
jnp
nop
fwait
test
sti
lahf
sbb
lock
js
cwtl
test
clc
lahf
sbb
lock
jns
cltd
test
stc
lahf
sbb
lock
inc
jp
mov
call
jmp
sub
inc
xlat
xchg
mov
leave
jp
les
and
sti
hlt
and
pop
loop
aaa
lahf
inc
jns
stc
adc
jecxz
sbb
sub
cmc
add
mov
mov
lea
imul
cld
xor
mov
add
push
jg
nop
es
aam
push
push
adc
notl
xlat
into
xchg
out
push
rcr
cmp
mov
cmp
mov
jle
sub
scas
stos
xchg
and
xchg
pop
sbb
movsl
xchg
ss
lods
pop
inc
xor
or
imul
aam
mov
bound
nop
mov
daa
xchg
inc
addb
mov
mov
subb
out
sub
and
aaa
ds
mov
cmp
test
movsb
mov
mov
pop
add
xor
cmp
movsl
jle
jns
lds
scas
cmp
xor
inc
mov
cmp
xchg
cmpsb
jecxz
nop
lret
cltd
jle
cmp
or
xor
cmp
xchg
cmp
stos
nop
cmp
lret
cmp
mov
mov
cld
nop
jle
cmp
xchg
push
mov
aaa
cmp
ss
call
mov
cmp
mov
orb
sub
jmp
ds
dec
std
movsl
insb
cmp
push
mov
aas
mov
into
nop
ret
jle
cmp
mov
stc
xchg
das
subb
dec
mov
das
cmp
aaa
ds
mov
mov
sub
jle
dec
sub
orb
clc
pop
insl
mov
push
xchg
js
loope
ljmp
jg
mov
daa
test
jle
into
xchg
add
movsb
fucomp
sub
jno
ret
pop
cmp
mov
xor
cmp
push
xchg
mov
dec
sub
sub
into
insl
cmpsl
sub
mov
jnp
jg
fdivs
fmuls
lea
clc
lods
out
dec
and
repz
insb
enter
iret
repnz
rorl
jmp
out
add
inc
mov
insb
test
push
into
dec
icebp
inc
mov
lods
out
jbe
xor
mov
fwait
cmp
cmpsl
repnz
cmp
pop
add
imull
pop
mov
test
mov
test
jno
mov
addl
mov
sarl
inc
das
rcr
push
jno
repnz
mov
std
jne
sahf
inc
pop
call
imul
fsubr
add
shrl
pop
sarl
mov
lret
mov
scas
out
imul
test
insl
out
dec
das
inc
xor
inc
mov
fimuls
mov
ja
mov
xlat
js,pn
cmp
xchg
push
dec
test
das
sbb
in
inc
lcall
mov
nop
inc
outsb
test
movsb
lea
gs
shlb
mov
sub
mov
andb
in
es
inc
mov
inc
test
jns
cmp
pop
test
das
js
je
sub
hlt
jbe
sti
sarb
add
dec
jno
mov
cmpb
dec
ss
xor
jb
pop
in
or
cmp
jb
cmp
dec
scas
add
jl
in
inc
mov
xor
or
aaa
sub
jns
lcall
hlt
jg,pn
stc
fldcw
cmc
orb
cmp
jl
sbb
push
lahf
mov
xor
cwtl
jl
xor
ds
mov
lret
cmp
inc
mov
jo
iret
or
subb
cmp
leave
mov
outsl
mov
jmp
cmp
das
inc
xor
popf
mov
lret
ds
lods
xor
inc
leave
movsl
mov
pop
das
imul
cmp
mov
mov
jmp
stos
scas
or
mov
inc
dec
jmp
ds
rolb
add
gs
je
cs
test
add
pop
mov
push
add
imul
xchg
rol
imul
test
or
sub
lods
add
js
and
mov
mov
jbe
dec
push
or
mov
insb
mov
push
mov
inc
push
divl
icebp
cwtl
addr16
push
ds
nop
sbb
and
inc
cmp
outsl
or
or
xor
jp
loopne
iret
out
and
mov
cmc
inc
repz
push
mov
xchg
aam
test
xchg
push
push
sbb
mov
mov
dec
push
cmc
adc
movsb
xlat
sbb
stc
xor
adc
xor
dec
lods
push
mov
cmpsl
jnp
clc
sahf
imul
into
mov
in
adc
rorl
popa
cli
movsl
mov
mov
outsl
sbb
inc
inc
mov
inc
mov
xchg
test
sbb
inc
ret
mov
lret
inc
insl
loope
sbb
lock
push
pop
les
inc
and
or
cs
popa
insb
into
stos
jb
out
and
in
enter
das
icebp
leave
bound
xchg
cmpsl
inc
mov
jg
inc
cmp
sahf
inc
jmp
pop
dec
nop
ret
jb
ss
xchg
pop
xchg
cmp
ficoml
jbe
sub
mov
mov
ret
push
and
dec
popa
mov
xor
into
jp
add
add
sub
ret
jo
jl
shl
jns
cmp
popf
and
cli
stc
inc
fdiv
cmp
cmp
movsl
jae
fs
sbb
or
xor
pop
pushl
sahf
aam
inc
inc
mov
adc
xor
jg
xor
sub
add
cmc
sbb
outsb
rcrl
adc
test
stos
rcll
mov
dec
sarb
mov
xlat
xchg
mov
xor
loop
mov
sarl
mov
insb
xorb
mov
rcrb
sarb
stos
mov
mov
mov
mov
andb
mov
mov
scas
test
loop
jbe
lods
rcll
sbb
sarb
sub
in
push
mov
ret
dec
shrb
stos
out
mov
mov
lret
enter
mov
cmpsl
lods
movsl
rcrl
popf
mov
ds
rcrl
std
mov
xor
sub
mov
mov
test
shlb
mov
dec
mov
mov
mov
jp
inc
sub
cs
shrb
mov
adc
mov
push
clc
int3
xchg
pop
aaa
ficoms
orl
jg
test
lret
insl
cmp
mov
popf
fcoml
fdivl
jns
inc
sbb
sbb
js
mov
xorb
aaa
pop
testb
add
imul
test
inc
dec
loope
or
push
sub
add
mov
int3
test
mov
fmuls
pop
xor
xor
roll
scas
shrl
mov
nop
mov
mov
loope
out
in
outsl
mov
add
shlb
mov
mov
jnp
rorl
sub
dec
mov
adc
sar
fdivs
add
mov
xchg
adc
jbe
mov
xorl
insb
ficoms
ret
cli
mov
int
and
adc
movsl
mov
pop
add
je
test
test
sub
xor
pop
ret
jmp
cmp
jge
cmpl
pop
repnz
adc
cmp
sub
popf
mov
xchg
cmp
cmp
xor
xor
cmpsb
scas
push
add
aam
cli
mov
fdivrp
adc
cmp
sub
lods
cmp
mov
mov
mov
inc
jne
imull
fdivl
push
push
fnstcw
stc
xor
dec
ja
pop
cmp
iret
movb
divl
xor
xor
and
jp
xor
rcrb
jbe
jp
mov
sub
xor
inc
mov
cltd
rclb
notb
mov
pop
mov
cmp
ja
mov
add
mov
cmp
pushf
pop
mov
fdivrs
sbb
sbb
es
mov
jp
pop
sbb
clc
push
xorb
pop
mov
dec
rorl
mov
outsb
les
mov
lods
sbb
push
xchg
ss
repz
xor
mov
inc
fistpl
mov
cmpsl
hlt
mov
adc
jl
ds
xor
jge
cmpb
jmp
fstpl
lea
iret
rorl
inc
scas
adcb
xchg
test
mov
in
ss
js
cmp
pop
mov
adc
mov
cmp
mov
loopne
cmp
aam
ss
mov
mov
loop
cmp
sbb
cmp
popa
aad
adc
xchg
mov
int
shrl
js
mov
aad
mov
fs
ss
dec
scas
je
inc
rorl
dec
pop
loope
adc
sub
push
mov
sti
cmp
in
stos
cmpsb
fidivs
or
mov
ss
ret
arpl
fsubrs
cmp
jnp
popf
sbb
xlat
shrl
stos
fsubp
mov
mov
fisubrs
xchg
mov
fisubrl
lret
scas
adc
shlb
mov
test
xchg
or
mov
mov
mov
dec
cmpb
mov
subb
mov
insl
sub
arpl
popf
mov
cmp
mov
cmp
inc
fmull
cmp
and
nop
cmpsb
jle
cmp
sub
sub
lods
mov
cmp
mov
ss
cmp
mov
repz
cmp
sarl
ret
xchg
and
mov
adc
cmp
add
aas
add
aas
xchg
shl
mov
mov
ret
sahf
inc
sbb
rcr
pop
pop
xor
push
pop
jl
fistl
xor
mov
inc
pop
mov
mov
popf
xchg
shll
mov
jl
nop
ds
jns
rclb
je
cs
mov
inc
iret
in
scas
pop
call
ret
loope
inc
mov
cmp
mov
xchg
std
sahf
mov
rorl
cmpsb
daa
lcall
xchg
mov
jo
aad
xchg
out
sarl
lcall
es
testl
sub
mov
xorl
je
call
sarl
stos
ljmp
adc
lahf
roll
aas
cmp
aas
jl
mov
cli
outsb
sbb
in
mov
data16
pusha
frstor
stos
cmp
mov
arpl
shlb
nop
cmpsb
jle
cmp
xchg
pusha
stos
sbbl
mov
sub
adc
mov
push
jne
inc
lcall
inc
mov
out
pop
ficomps
mov
fdivrl
ss
xor
cmpsb
js
sub
xor
mov
outsb
imul
gs
jp
xchg
pushf
pop
call
inc
jae
ja
mov
and
data16
nop
mov
subb
sahf
mov
sub
and
fcompl
xchg
add
xor
inc
mov
popa
xorb
inc
jle
cmp
mov
nop
add
cmp
mov
ds
mov
cmp
and
cmc
pop
cmpsl
xchg
test
pop
sbb
sarb
cmp
dec
sbb
inc
dec
push
adcl
mov
in
cwtl
pop
cmp
pop
lock
imul
ss
mov
outsl
jle
cmp
sub
inc
cmp
jge
jg
clc
cli
xchg
testb
nop
push
jmp
in
mov
sbbb
ja
jo
in
jmp
ds
jle
cmp
xchg
xchg
xor
in
mov
in
add
jl
js
cmc
mov
insb
cmp
mov
adcl
pop
cmpsb
and
rcrb
lahf
rol
mov
addr16
sti
inc
cwtl
jo
fs
mov
xor
cmpl
xorb
fsubrl
cmpb
ret
aas
mov
pop
mov
pusha
mov
rol
pop
lods
push
hlt
ret
aad
lahf
test
push
je
pushf
cmpsb
mov
jmp
popf
xor
mov
sbb
pop
rcr
mov
mov
xchg
mov
mov
cmp
mov
das
fnstsw
push
inc
movsl
rolb
and
adc
mov
fs
pop
nop
test
jl
mov
xorl
jle
cmp
sub
dec
pusha
fs
mov
mov
adc
nop
popa
jle
pop
pop
adc
ret
sarl
std
aaa
sbb
mov
and
xor
mov
ds
mov
add
mov
arpl
cmp
mov
add
dec
clc
stos
mov
mov
lods
or
test
ret
push
xor
mov
xchg
repz
adc
and
loop
int3
bnd
scas
cmp
shlb
pop
mov
or
enter
aam
ja
aam
cmpsb
xor
outsl
push
lods
lcall
lahf
adc
mov
cmpsb
aaa
jp
or
ljmp
insl
cwtl
pop
mov
test
fdivl
xchg
std
mov
insl
cmpsl
in
sub
sub
inc
int
inc
lods
xchg
ret
sbb
sub
nop
add
in
in
scas
mov
jcxz
inc
adc
icebp
mov
mov
es
lahf
pop
sbb
loop
add
sbb
or
scas
push
bnd
and
ret
mov
xchg
mov
push
jnp
stos
push
sbb
insl
adc
outsb
test
cmp
jno
js
sub
js
inc
orl
inc
shlb
or
cmpsl
stos
jnp
pop
lret
adc
hlt
adcb
dec
dec
ret
mov
mov
test
loopne
xor
arpl
in
mov
int3
and
loop
icebp
inc
ret
das
jp
push
loope
xor
jmp
dec
push
mov
xchg
xor
mov
stos
fdivrl
pop
xchg
adc
mov
adc
or
jae
stos
ljmp
or
stos
ds
jmp
pop
pushf
xchg
push
ja
mov
fwait
mov
mov
pop
aaa
orb
lret
in
adc
and
into
mov
mov
gs
lods
jge
pop
ret
es
ss
stc
test
or
push
push
add
pop
mov
nop
xchg
pop
sub
ret
push
push
pop
pushf
stos
sub
mov
scas
ret
pop
sub
mov
cmpsb
jmp
loope
xchg
adc
dec
cld
bound
xchg
inc
push
cltd
ret
lahf
in
shr
stos
fildl
imul
ret
jl
mov
mov
cmp
ret
sbb
in
pop
call
inc
cs
ljmp
add
lds
aas
into
mov
clc
pop
push
jbe
stos
ror
add
xor
mov
call
in
stos
adcl
in
mov
xchg
adc
fbld
sarl
test
cltd
inc
repnz
aas
and
hlt
sbb
and
adc
sub
and
insb
sarb
inc
and
and
sub
js
repnz
inc
pop
and
arpl
xchg
push
pushf
mov
jbe
cmp
pop
rolb
inc
sarl
aaa
mov
mov
mov
mov
jge
lahf
jb
jmp
popf
rcll
es
pop
mov
roll
scas
mov
xchg
rdpmc
rcll
push
mov
sbb
pop
mov
pop
xorb
push
das
pusha
mov
in
xchg
jp
mov
sbb
rolb
push
cltd
icebp
xchg
mov
push
jle
mov
jp
sbb
int3
mov
xor
cltd
roll
fistps
leave
shl
and
test
jnp
es
sahf
mov
cmp
cmpsl
xor
les
jb
push
mov
es
push
xor
cld
std
pop
jmp
add
aas
mov
adc
xchg
cmp
pop
adc
ja
cld
addl
mov
mov
push
sbbb
cld
lcall
jbe
jp
mov
mov
das
cmp
adc
mov
add
inc
pusha
cmp
inc
xorb
pop
movsb
and
lahf
mov
jo
sbb
push
fdivrl
inc
inc
push
jne
mov
rclb
lds
lcall
cwtl
pop
jp
aam
int
mov
mov
repz
push
ret
mov
rolb
sbb
xor
push
dec
jmp
out
xor
xor
pushf
rcll
jl
nop
mov
cmc
pop
shl
push
js
jo
mov
addr16
lock
adc
shl
xchg
dec
push
loopne
fdivs
or
mov
mov
bt
xor
push
clc
bt
call
and
bt
add
pushf
push
lea
jmp
lea
ja
not
pusha
inc
movb
inc
dec
inc
not
stc
sbb
inc
xchg
pushf
rcl
aas
mov
mov
rol
mov
bt
push
mov
pusha
neg
mov
test
cmp
clc
push
sub
jmp
mov
pop
mov
mov
mull
in
xor
cmp
in
adc
add
mov
inc
cld
insb
imul
std
repz
mov
lcall
mov
dec
cs
loope
sub
fcoms
mov
frstor
fdivrl
outsl
push
mov
pop
mov
push
mov
inc
cld
fwait
xchg
sbb
pop
ds
rolb
iret
push
adc
imul
out
popf
cmp
ljmp
or
fcompl
fsts
aaa
xchg
cli
dec
outsl
push
mull
sbb
popa
addb
xchg
mov
pop
jns
inc
dec
push
out
cmp
and
out
mov
and
test
and
fwait
test
pop
outsb
xor
enter
ja
or
sbb
in
out
sbb
lcall
loop
or
push
push
jge
les
ret
add
aaa
xor
gs
xlat
push
lds
sbb
add
and
sub
push
mov
jmp
lock
jle
in
mov
fcompl
fcoms
imul
sub
mov
ss
jmp
add
pop
xlat
mov
xor
xor
push
add
arpl
inc
aam
mov
rcrl
or
inc
call
outsb
repz
pop
pop
and
mov
stc
jl
bound
or
push
jo
cmp
cld
mulb
xor
scas
lea
xor
test
movsl
mov
push
xlat
leave
jmp
push
add
xchg
push
pop
aam
sbb
xchg
mov
nop
xor
add
xorb
sub
jmp
adc
fldl
imul
sbb
into
sbb
inc
aam
mov
into
jno
outsb
cmp
mov
int
lret
pop
aas
scas
movsl
movsb
mov
lret
dec
push
inc
mov
jmp
js
sub
dec
pop
orl
movsl
adc
jbe
xchg
xor
pusha
push
lcall
push
cmp
mov
mov
pop
sub
fcompl
xlat
adc
fwait
mov
clc
cmp
pusha
lea
jae
push
stc
add
pushl
push
pushf
pushf
mov
movw
lea
jmp
sbb
mov
jge
cld
push
lcall
jmp
loope
pop
adc
push
inc
pushl
mov
mov
out
dec
outsl
outsl
inc
fs
push
insl
in
add
mov
fldenv
adc
leave
dec
mov
jo
xchg
dec
mov
int
dec
sbb
subb
mov
mov
cmp
adc
push
xlat
push
jne
lcall
add
add
add
add
add
sbb
cld
add
add
and
add
and
add
and
add
and
add
adc
add
and
add
and
and
add
and
add
xchg
sbb
lret
ljmp
ficoml
add
add
add
jle
add
and
add
add
and
add
sbb
inc
add
add
sbb
dec
add
add
and
push
add
call
lock
pop
or
data16
sarl
jns
iret
push
lods
int3
sti
xchg
add
mov
push
fnstenv
lock
mov
jne
imul
mov
xor
ljmp
pusha
out
je
pop
xor
pop
sub
ds
sbb
or
xchg
pop
mov
pop
in
jb
fcomps
aam
movsb
je
aad
aaa
xor
lods
les
jb
or
sub
or
in
cmp
cmpsb
mov
ret
ljmp
sahf
inc
orb
addr16
cmc
movsl
out
mov
int3
in
jb
adc
sbb
imul
lea
mov
leave
xor
lods
jmp
jge
dec
outsb
test
sub
repnz
pop
inc
inc
jns
mov
ret
sti
mov
pop
test
push
mov
subl
aaa
push
in
fcoml
cmc
fcompl
aam
in
pushf
mov
jne
xchg
popa
mov
das
jbe
fcoml
and
adc
mov
enter
cli
dec
jmp
out
loop
pop
jge
pop
js
pusha
out
add
rorl
popa
addr16
add
lods
leave
dec
sbb
movsl
fldt
mov
mov
call
jge
pop
adc
mov
sarb
rcl
cmc
inc
roll
les
push
jmp
mov
push
enter
and
shll
in
mov
xlat
jp
movsl
cmp
push
sub
mov
cmp
cltd
or
shll
ljmp
add
jg
mov
and
jae
jns
mov
dec
xor
out
xlat
dec
jae
push
and
jmp
aam
jmp
push
cmpsl
lcall
and
xchg
shl
jne,pn
xor
addb
roll
addb
dec
sub
or
aad
cltd
mov
cs
cmp
ljmp
add
cmp
lds
insb
ja
mov
jne
ljmp
xor
mov
push
inc
lods
fists
insl
xor
xchg
dec
sub
xchg
xor
mov
fcompl
shlb
and
jmp
call
jmp
pop
mov
test
dec
cltd
loopne
push
lea
push
pop
push
daa
mov
and
push
cmp
icebp
fsub
ficoml
jne
adc
fsts
cmp
out
jp
lock
aad
in
or
mov
cmpps
lods
jl
xor
push
jno
aad
outsl
fisttpll
add
and
cli
mov
setbe
sbb
or
dec
cwtl
jg
lods
dec
pop
popf
mov
push
popa
pusha
insl
adc
mov
push
sar
sbb
sbb
jl
cmp
xchg
mov
int
pop
pop
ds
fidivrl
jb
push
test
cmp
nop
daa
adc
jno
popa
mov
mov
jae
subb
lahf
ret
sbb
ds
nop
mov
jno
xchg
daa
jno
xchg
push
lods
mov
dec
mov
psllq
test
mov
out
inc
push
mov
push
jno
dec
notb
mov
out
push
shlb
inc
mulb
nop
mov
dec
std
fs
cltd
shl
push
inc
cmp
mov
mov
lds
adc
aad
orl
loopne
xor
fdivp
stos
pushf
ret
das
inc
je
cmp
jo
fstps
or
lcall
and
adc
pop
dec
mov
fwait
push
inc
jno
pop
cltd
sub
mov
divb
mov
imul
ficoml
hlt
jmp
jge
jne
pop
adc
sbb
fisttps
lods
fcoml
push
fnstenv
jg
cmp
cld
inc
cltd
mov
and
jae
push
jbe
xor
adc
mov
sarb
add
mov
in
negl
out
aad
jne
imul
or
es
push
sub
push
mov
xor
lret
fldenv
adc
lods
xchg
shl
push
stos
xchg
xchg
jge
jecxz
cs
pop
inc
xchg
cltd
adc
test
mov
xchg
ss
xlat
cs
shlb
jp
fcompl
rcll
inc
lea
lea
movb
lahf
pop
movzbw
push
cwtl
lea
push
push
pusha
movl
pusha
pushf
pushf
mov
mov
pushl
ret
aaa
lods
mov
cmp
into
or
loopne
xchg
and
mov
adc
push
mov
push
and
aaa
aas
enter
push
lock
xchg
and
mov
outsl
hlt
es
sbb
push
add
jns
sbb
cmp
push
adc
out
ds
mov
sbb
orl
jmp
sbb
pop
push
pop
inc
adc
sub
or
add
enter
iret
aad
inc
pushf
mov
setge
mov
bswap
mov
seto
pusha
bswap
bswap
mov
call
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
pushfw
popw
call
adc
cmp
push
xchg
mov
testl
popa
cwtl
xlat
es
fcmovnu
cmp
fcoml
sahf
mov
push
mov
mov
jb
pushf
es
out
push
adc
and
cmpsl
iret
cltd
pusha
scas
sbb
add
and
push
and
subl
divps
int3
ljmp
fwait
ss
inc
jl
xchg
ljmp
push
add
or
into
cwtl
mov
lds
inc
jnp
or
xchg
adc
fisubl
and
outsb
mov
push
xor
push
aas
scas
dec
iret
add
add
xlat
movsb
insl
jns
sbb
mov
adc
mov
cmc
clc
test
aad
imul
dec
adc
or
push
dec
movl
in
rcll
nop
push
out
lds
push
iret
xor
fs
pop
xlat
loop
adc
outsl
scas
cmp
add
jnp
mov
inc
negb
pop
jge
pop
push
push
jne
jo
xor
cmp
out
dec
das
pop
cmp
pop
cmp
dec
sbb
adc
cld
push
xor
push
cmc
lcall
stos
sub
and
sti
inc
lret
adc
mov
push
hlt
xchg
mov
lea
fcompl
int
loope
mov
push
pusha
lea
jmp
test
jmp
frstor
lods
xchg
inc
nop
xchg
push
insl
int3
lret
sbb
push
jne
testb
and
sbb
fmul
dec
jl
adc
loop
jb
push
dec
jae
outsl
jl
leave
jbe
mov
mov
cmp
arpl
sub
cmp
dec
dec
or
lock
inc
inc
ror
ss
lea
das
dec
sbb
add
aas
push
loope
fisubrl
loope
subl
shl
les
mov
mov
adc
hlt
jmp
fcompl
int
aas
scas
js
imul
xor
fcomip
and
pop
jmp
test
leave
loope
in
fcom
hlt
fcoms
push
adc
push
mul
lods
cwtl
mov
mov
imul
arpl
pusha
into
jno
leave
push
push
test
push
xchg
cmp
lret
fcompl
int3
fwait
mov
add
mov
movsbw
movsbw
mov
bswap
pop
pusha
pusha
mov
movb
pushl
ret
test
push
add
clc
jbe
int3
mov
std
or
mov
movsl
and
inc
cmp
and
clc
shr
sbb
imul
pop
dec
mov
jae
stc
nop
fwait
push
cmp
in
lret
lds
sub
mov
inc
xor
dec
scas
out
sbbl
daa
pop
mov
fwait
orb
xchg
push
or
int3
dec
outsb
mov
xor
orl
fsubl
xchg
mov
push
ss
movsb
jp
jmp
mov
xor
scas
loopne
jg
push
add
mov
ret
ds
xor
push
and
add
sub
sbb
dec
push
outsb
push
mov
mov
js
fisubrs
clc
xchg
ds
push
lret
jo
pusha
lret
inc
xchg
inc
xor
xchg
adc
jb
ror
popf
pusha
push
inc
es
add
scas
push
aam
sahf
sub
movsl
aad
adc
movsb
xor
push
loop
xchg
scas
cmpsl
mov
mov
das
mov
xor
mov
jbe
dec
arpl
jae
and
inc
cmp
pop
sub
inc
mov
and
fcompl
lret
push
cmp
lods
pop
les
mov
jge
gs
repz
sub
jo
cmp
push
fistpll
in
lret
cmp
cmp
lahf
xor
mov
xlat
js
pusha
fcomp
movsl
enter
xor
cmpsl
mov
adc
js
pop
shll
mov
aad
lock
stos
dec
gs
jns
sbb
movsb
mov
xchg
dec
or
gs
lcall
cmp
repz
adc
dec
xor
mov
popa
enter
jl
sub
rcll
adc
out
mov
out
cmp
insb
jg
pop
jno
xor
mov
pop
out
enter
mov
ret
and
cltd
mov
mov
xor
xor
and
mov
imull
les
lcall
xchg
sub
stc
test
sub
bound
adc
addr16
xchg
lock
sbbb
and
jmp
lods
arpl
mov
lret
lds
js
es
loope
mov
sbb
cmp
cmc
sub
inc
sbb
inc
and
push
ljmp
jb
xchg
jnp
xchg
jmp
mov
aaa
dec
add
les
or
add
push
rcl
fcomps
inc
jge
inc
cwtl
outsb
fdivp
push
push
cs
push
in
mov
sub
fildl
cli
cltd
mov
xlat
xchg
aad
and
out
das
ljmp
rol
push
pop
adc
push
push
leave
mov
inc
dec
push
lea
adc
inc
repz
leave
fdivr
jge,pn
fldt
loopne
mov
xlat
loope
lds
imul
sub
mov
xor
jnp
pop
outsb
pop
push
hlt
push
ret
adc
push
sbb
inc
inc
adc
push
mov
das
sbb
sbb
ss
sbb
cltd
sub
out
insl
adc
mov
push
enter
fldcw
add
xchg
mov
cltd
test
cmp
pop
scas
mov
popa
fsubs
lret
cmp
xchg
mov
test
aam
inc
jne
lods
or
fmul
xchg
lds
scas
and
mov
and
jle
pop
mov
or
ret
jp
pop
dec
adcb
cmc
lods
pop
cli
xorl
enter
xchg
mov
shll
pop
es
fs
rorb
outsl
imulb
or
outsb
lds
aas
cmp
xor
xchg
ja
mov
lcall
lds
sub
stos
adc
aad
sti
mov
fists
js
ret
mov
push
sahf
mov
push
cs
shlb
aad
sbb
fcompl
enter
cmp
push
test
jmp
cmc
cmc
cmp
pushf
call
test
pop
mov
mov
cmp
add
mov
aaa
ss
je
cli
and
mov
pop
out
jne
out
test
test
dec
jnp
add
shlb
cmpsl
imul
inc
shlb
stos
ret
dec
add
inc
lock
ret
jne
and
or
cmp
scas
popf
lds
mov
or
sahf
mov
mov
test
sbb
mov
jmp
mov
lahf
fcompl
mov
das
pop
data16
popa
dec
mov
leave
add
outsb
fstp
dec
ret
jne
test
in
addr16
imul
lahf
mov
adc
js
push
dec
shll
jno
jne
scas
add
xor
inc
xchg
push
ret
dec
int3
adc
out
pop
pushf
arpl
mov
cld
fistl
inc
inc
fcompl
ds
into
pop
pushf
sti
cmp
leave
js
push
js
mov
arpl
lea
cli
fldcw
push
pop
cmp
stos
fsubrl
and
shrl
lahf
loope
scas
aad
add
sbb
lock
rep
mov
hlt
mov
lcall
xchg
fistpl
repz
js
push
adc
push
cmp
push
les
test
mov
fiaddl
stos
pop
stos
cltd
insb
popf
inc
testb
cmp
adcl
push
add
in
add
fcompl
cmp
fs
cs
xchg
lods
adc
arpl
stos
outsb
hlt
insl
sbb
ss
orb
das
xchg
cli
mov
xchg
cmovnp
mov
test
jno
and
or
cld
xor
xchg
and
adc
scas
imul
xorl
mov
lea
xorb
xor
ja
int3
aaa
in
push
aad
insb
lret
mov
dec
loopne
ret
pop
ss
lcall
into
sbb
sub
das
iret
jp
jns
push
or
cmp
pop
popa
push
popa
jno
into
stos
push
lret
jmp
mov
lea
je
pusha
pusha
pushf
lea
jmp
inc
mov
sti
push
loop
pop
lea
outsb
jne
fwait
mov
xchg
add
ret
lret
inc
mov
jnp
pop
enter
or
add
mov
lret
push
xchg
sub
movsb
add
mov
stc
out
push
cmpsb
push
in
rcll
pushf
pop
jo
ljmp
jl
loop
push
imul
fcompl
lds
mov
pop
push
sbb
or
mov
mov
cvtps2pd
ret
call
mov
or
mov
js
movsb
adc
sbb
call
mov
movsl
fwait
sbb
dec
mov
jmp
dec
inc
ss
cli
inc
xor
inc
xchg
gs
inc
addr16
xor
sar
xchg
xor
and
push
lea
xor
shrb
popa
sub
mov
dec
mov
and
rolb
cltd
dec
fcompl
les
lcall
xlat
enter
repz
aaa
push
xchg
hlt
sbb
xchg
popf
and
push
mov
mov
lods
fimull
inc
and
sbb
loopne
mov
fistpl
fnsave
xor
mov
add
sbb
mov
fbstp
iret
outsb
std
add
xorb
mov
push
ret
mov
push
outsb
and
pop
hlt
sti
push
shrb
popf
and
mov
dec
sbb
inc
pop
xlat
jnp
pop
mov
mov
shlb
je
cmp
add
jnp
clc
outsb
xor
inc
loop
sar
pop
out
dec
movsl
loopne
imul
fcoml
cmp
or
movsb
inc
outsb
pop
mov
mov
and
mov
sub
sahf
insl
pop
mov
push
xor
adc
aam
fs
movl
mov
push
pusha
lea
jmp
movb
jmp
and
mov
pushf
pusha
call
into
lahf
mov
nop
mov
mov
dec
mov
or
pop
xchg
lods
xlat
lcall
sub
ja
pop
push
test
push
out
add
mov
test
adc
cmp
das
sbb
xchg
enter
dec
pusha
pop
inc
and
movsb
sub
mov
pop
jmp
dec
mov
adc
sarb
in
pop
xchg
insl
int3
lret
inc
dec
and
xchg
cmp
iret
fcompl
ret
or
jl
jp
mov
fcmovne
pop
jno
decl
cmp
fiaddl
cmp
pop
bound
mov
aas
pusha
push
pop
test
push
lcall
les
mov
fisttpl
xorb
out
inc
loop
repz
sbb
mov
xor
ret
dec
imul
push
ret
xchg
adc
push
jne
sub
jne
xchg
mov
popf
bnd
and
lret
sti
idiv
mov
xorb
fsubl
loopne
mov
xchg
sub
out
inc
leave
ljmp
push
cli
mov
or
mov
int3
lahf
push
dec
mov
repz
popa
push
xchg
loopne
push
sub
push
jnp
int
push
ret
jl
xor
or
mov
dec
aad
imul
in
sbb
psubw
testb
pop
sarb
xchg
cld
inc
imul
dec
fs
sbb
insl
xor
adc
popf
lret
add
stos
mov
push
fwait
and
pop
sahf
test
std
sbb
xchg
shlb
or
scas
outsb
fisubrs
mov
xchg
xchg
sbb
ja
movsl
jl
xor
lock
cld
fisttpl
lahf
mov
hlt
mov
mov
sub
pop
dec
fsubr
push
xchg
aam
xor
lods
inc
jmp
add
ret
jecxz
inc
mov
push
test
cwtl
out
ret
and
jno
dec
push
lcall
push
adc
cltd
mov
pop
add
add
lret
xor
in
js
or
int
scas
pop
jge
push
inc
hlt
in
cmp
popf
iret
push
xor
call
push
pop
stc
lods
fcompl
rcr
push
dec
cmpsl
out
xchg
clc
add
test
into
or
inc
jge
nop
femms
in
mov
pop
pop
adc
mov
into
mov
dec
cli
cltd
in
jb
pop
push
aam
add
rolb
int
jle
int3
pop
fcompl
shrb
and
btc
inc
mov
push
bt
cmpb
pusha
lea
jne
stc
clc
bt
neg
sub
shr
mov
xor
mov
cmc
sub
add
pushf
mov
cmc
jmp
pushl
popl
mov
movb
movb
lea
jmp
add
jmp
stc
cmc
or
clc
bt
stc
xor
push
movb
inc
mov
decl
pushl
lea
jne
jne
push
call
lea
js
dec
jne
dec
pusha
rol
jmp
pushl
push
mov
cmc
pushf
stc
movb
mov
pushl
xchg
stc
xchg
rcl
bswap
mov
not
rcr
stc
mov
xchg
lea
jne
movsbw
push
lea
pushf
pusha
bts
pushl
popl
bt
rol
movl
xchg
setnp
bt
mov
rol
sete
btr
rol
pushf
xchg
inc
xor
jmp
bswap
pushf
push
mov
jmp
aas
jmp
mov
pusha
push
mov
mov
lea
jmp
movl
clc
mov
pushf
call
jmp
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
pushl
pushl
popl
pusha
movl
push
movw
lea
jmp
bt
and
clc
stc
cmc
cmp
pushf
call
push
mov
pushf
movb
lea
jmp
pushf
pushf
popl
pushf
push
mov
bt
mov
mov
call
push
rol
movb
bt
cmc
not
cmc
movb
push
call
call
pushf
mov
pushf
push
lea
jmp
rol
jmp
clc
add
pushf
pusha
mov
movb
mov
pushf
push
lea
jmp
cmc
add
pushf
pusha
jmp
jmp
pusha
jmp
pushf
pushl
popl
push
lea
jmp
mov
pushf
pushf
lea
jmp
stc
cmc
jmp
pushf
popl
pushf
mov
stc
mov
cmc
call
mov
cmc
mov
pushf
jmp
shl
shld
setns
mov
shr
shl
sbb
dec
mov
pusha
stc
sub
clc
shl
mov
mov
push
call
call
cmp
add
bt
mov
stc
call
clc
cwtl
jmp
lea
js
mov
jmp
lea
jne
pushf
cmc
sub
mov
xchg
movb
mov
movl
push
mov
movb
pushl
mov
pushl
push
mov
pushl
ret
cmc
mov
jmp
push
movl
pushf
popl
movl
jmp
pushl
popl
pushl
mov
pushf
lea
jmp
pushf
jmp
pushf
popl
push
call
clc
mov
stc
mov
stc
clc
pusha
cmc
mov
pusha
stc
cmc
mov
clc
bt
jmp
bt
mov
call
pushf
shr
mov
cmc
jmp
call
stc
mov
pushf
mov
clc
clc
pusha
mov
bt
mov
pushf
bt
mov
bt
stc
mov
jmp
mov
mov
jmp
clc
pusha
shld
push
pusha
push
mov
jmp
test
mov
pusha
sub
jmp
rcr
inc
add
sbb
xadd
mov
ror
shl
add
dec
neg
stc
bsf
sub
or
add
bt
rcr
neg
call
jmp
mov
movl
pushf
mov
jmp
aaa
dec
aad
notl
rcr
add
adc
pushf
mov
stc
cmp
pusha
jmp
jmp
pushf
pushf
pushl
popl
push
mov
lea
jmp
adc
test
bsf
movzww
jmp
push
call
pusha
pushf
popl
jmp
sar
rcl
shl
rcr
movzbl
pushf
jmp
cmp
sub
pusha
stc
test
neg
clc
call
cmc
call
not
bswap
mov
call
push
pusha
pushf
mov
push
lea
jmp
add
jmp
pop
clc
pushl
popl
clc
not
movl
lea
bts
rcl
call
movsbw
rol
not
movl
add
ror
and
movsbw
movsbl
mov
bt
add
jmp
rol
jmp
jmp
cmc
pusha
stc
mov
call
call
bt
movb
rol
test
xor
call
pushl
popl
mov
movw
mov
lea
jmp
pop
bswap
setae
inc
add
call
dec
dec
movsbw
rol
bt
ror
bswap
neg
inc
movzbw
lea
btc
shl
add
adc
push
shl
shrd
mov
pushf
clc
call
pushf
clc
pushl
mov
bt
stc
pushl
mov
call
mov
pushf
push
lea
jmp
pusha
jmp
pushf
pushf
push
pushl
popl
push
pushf
movw
lea
jmp
push
pushl
popl
movl
mov
lea
jmp
movzbw
cmp
ror
bts
and
ror
mov
pushf
sub
movb
movb
call
bt
xor
jmp
mov
pusha
neg
mov
jmp
push
mov
push
pusha
push
pushf
lea
jmp
call
inc
aaa
shld
mov
not
test
rcr
mov
clc
add
call
mov
clc
rol
mov
neg
movb
cmc
bt
call
mov
push
bt
jmp
ror
bt
clc
pop
pusha
cmp
pushl
popf
push
lea
jmp
mov
bt
clc
stc
mov
lea
pushl
popl
btc
pushf
ror
clc
movl
lea
rcl
stc
mov
pushf
clc
rol
cmp
pushf
movw
xor
mov
pushf
mov
inc
mov
mov
pushf
push
lea
jmp
pushf
pushf
popl
jmp
mov
mov
push
pushf
movb
lea
jmp
call
mov
cmc
push
pushf
pusha
cmc
call
pushf
pusha
mov
pusha
lea
jmp
pusha
pusha
jmp
sub
sbb
ror
mov
stc
sub
clc
add
push
jmp
jmp
pushf
mov
pusha
lea
jle
bt
push
mov
rcr
btr
bt
pushl
movzbw
push
cmc
not
jmp
clc
xor
jmp
push
stc
mov
bt
movb
jmp
jmp
sbb
clc
aam
mov
bt
cmp
xchg
call
shrd
lea
ror
lea
jle
sub
pushf
bts
inc
xchg
lea
sub
neg
seta
mov
ror
or
add
dec
mov
shl
setne
add
cmp
sub
neg
pushf
sub
btc
movsbw
add
bsf
xor
call
mov
push
pusha
lea
jmp
dec
bt
cbtw
stc
call
pushf
stc
cmc
stc
sub
pusha
pusha
jmp
jmp
call
not
mov
mov
jmp
pushf
pushf
popl
pushf
mov
pusha
pushf
mov
pusha
mov
stc
mov
jmp
sub
bt
mov
stc
pushf
mov
push
sub
pushf
lea
jmp
setne
movsbw
movsbw
mov
pushf
pushf
lea
pusha
pushf
lea
jle
pusha
mov
pushf
lea
jmp
mov
push
lea
jmp
inc
push
pushf
pushl
movb
lea
jmp
pushf
popl
pusha
call
pusha
test
xor
call
mov
pushl
jmp
cmp
sub
btr
push
bts
lea
xor
neg
and
sub
push
clc
and
sub
movw
movzbw
pop
mov
lea
pushf
movsbl
cld
push
cld
mov
movzbw
lea
push
std
mov
std
jmp
call
bt
push
jmp
mov
pusha
pusha
mov
pushl
lea
jmp
and
pushl
mov
mov
pushf
popl
push
pushl
popl
pushf
push
pushf
lea
jmp
shl
or
sub
xadd
mov
or
jmp
pusha
pushf
pushf
popl
pushf
clc
mov
clc
clc
mov
movw
jmp
pushf
mov
jmp
pushf
pushf
popl
pushl
call
pusha
clc
bt
mov
pushf
bt
jmp
aaa
cltd
neg
bswap
mov
movzbl
shl
mov
jmp
movsbw
call
call
call
call
pusha
mov
pusha
jmp
pushf
mov
jmp
pushf
pushf
mov
mov
movb
lea
jmp
movb
sub
cmc
pushl
shr
pusha
push
call
add
call
pushf
pushl
call
jmp
pushf
dec
jmp
xor
pushf
push
movw
inc
pushf
lea
jmp
pushf
pusha
call
dec
call
jmp
pushf
popl
pushf
mov
mov
jmp
bt
stc
xchg
pushf
rcr
bt
pushl
popl
lea
push
clc
mov
stc
push
mov
rol
movw
jmp
mov
ror
movzbl
test
cmp
pusha
mov
sub
pushf
neg
clc
push
stc
movb
xor
pushf
inc
test
sub
jmp
mov
movb
pushf
mov
lea
jmp
movl
pushf
mov
pushf
movl
stc
jmp
mov
bt
jmp
jmp
clc
add
clc
shrd
pusha
pushl
mov
push
pushf
popl
pushl
pushl
call
pusha
call
mov
mov
jmp
jmp
pushf
call
setl
push
pushf
lahf
mov
call
add
cmp
bt
call
clc
rcr
shl
movzbl
jmp
clc
mov
cmc
lea
jp
push
bt
cmc
stc
push
push
bt
pushl
popl
stc
push
cmc
clc
mov
stc
jmp
movl
pushf
mov
push
pushf
mov
push
mov
call
jmp
stc
sub
jmp
pusha
sub
mov
bt
shr
pushf
pushf
mov
pushf
pushf
popl
call
shl
sub
mov
mov
pusha
add
pusha
pushf
pushf
mov
lea
jmp
call
mov
mov
push
push
pushl
pushl
ret
movl
pushf
bswap
mov
clc
rol
push
mov
jmp
bswap
mov
dec
jmp
pushf
popl
push
stc
stc
mov
mov
pushl
jmp
dec
push
call
shr
xadd
mov
pushf
sbb
not
mov
call
mov
jmp
jmp
pushf
jmp
pushf
push
pushl
popl
pushl
pushf
movb
lea
jmp
call
pusha
push
bt
mov
movb
bt
mov
stc
jmp
pushf
pushf
popl
pushf
mov
pusha
jmp
lea
bt
push
jmp
bt
mov
pushl
mov
clc
cmc
movw
pushf
mov
jmp
jmp
xchg
ror
push
ror
jmp
pushf
jmp
push
call
lea
jp
pushf
pushf
mov
pusha
pushf
lea
jmp
sub
lea
jp
pusha
mov
pushf
mov
push
movw
mov
movb
lea
jmp
bt
rol
stc
xor
call
cmc
pushf
btc
rol
lea
not
not
not
call
pusha
call
jmp
mov
push
pushf
popl
call
lahf
and
bts
mov
cmp
sub
jmp
mov
call
pushl
popl
rcr
movzbw
jmp
rol
movw
test
neg
pushf
call
mov
jmp
movw
call
mov
clc
jmp
mov
push
pushf
lea
jmp
pusha
call
pushf
mov
movb
pushl
push
mov
bt
btr
cmc
pushl
popl
mov
jmp
push
push
pushl
popl
test
call
movsbw
mov
call
pushf
mov
pusha
pushf
popl
clc
pushf
pusha
mov
call
movb
pushf
dec
call
not
clc
dec
mov
shr
or
not
add
call
stc
stc
mov
pop
pushf
pushl
popl
movsbw
pop
movl
bswap
mov
clc
call
lea
jne
xor
xorb
bswap
movsbw
pop
push
pusha
pushf
pushl
lea
jmp
jmp
bt
mov
bt
pushf
pushl
mov
mov
call
mov
stc
pushl
cmc
mov
clc
bt
clc
mov
pushf
stc
xchg
movsbw
pushl
popl
mov
pushf
clc
movl
mov
ror
bt
rcr
mov
clc
stc
stc
clc
rol
bt
pushf
clc
xor
jmp
pusha
call
shld
mov
movzbl
ror
bt
mov
cmc
test
pusha
add
push
push
pushf
mov
push
pushf
push
lea
jmp
mov
call
pushf
call
pusha
mov
push
push
lea
jmp
mov
call
movb
pushf
bt
mov
pushf
movb
mov
jmp
mov
bt
push
mov
pushl
push
mov
pusha
stc
call
jmp
push
pushl
pushl
popl
pusha
mov
lea
jmp
inc
pushf
lea
jmp
sub
stc
mov
call
pusha
add
push
jmp
pushl
mov
push
clc
bt
mov
cmc
call
call
mov
bt
stc
mov
bt
pushf
mov
bt
push
push
clc
cmc
pushf
mov
jmp
cmp
ds
int3
lret
ds
pop
in
insb
adc
ds
dec
lret
ds
adc
ds
xchg
adc
ds
lret
insb
lret
insb
lret
insb
cmp
lock
mov
adc
cmp
insb
adc
ds
leave
ljmp
popf
cmc
ds
xchg
adc
ds
out
iret
ds
int3
lret
ds
mov
in
ds
shl
insb
or
adc
ds
out
iret
ds
adc
ds
es
dec
lret
ds
cmp
ljmp
mov
call
ds
data16
insb
fs
insb
mov
jecxz
insb
xchg
adc
ds
out
iret
ds
sbb
ds
shl
insb
enter
mov
in
ds
xchg
adc
ds
or
out
ds
stos
int
insb
jne
ds
push
idivl
insb
mov
adc
ds
mov
lock
inc
idivb
insb
int3
lret
ds
test
lock
xchg
adc
ds
xchg
rep
jne
ds
or
ds
and
ds
es
jnp
ds
xchg
adc
ds
shr
ds
popf
cld
ds
lret
insb
cmp
ds
dec
lret
ds
push
lock
xchg
adc
ds
shr
ds
mov
lret
inc
in
ds
inc
in
ds
leave
ljmp
mov
iret
ds
or
insb
jne
ds
lret
insb
inc
idivb
insb
inc
idivb
insb
xchg
adc
ds
std
in
insb
sbb
ds
popf
cld
ds
and
ds
mov
out
insb
xchg
adc
ds
inc
idivb
insb
leave
cli
ds
mov
lret
or
ds
data16
insb
xchg
adc
cmp
insb
stos
int
insb
mov
cmc
ds
push
idivl
insb
push
out
ds
xchg
adc
cmp
insb
or
lock
mov
push
cmp
insb
jnp
ds
adc
ds
lret
insb
and
ds
mov
loope
insb
stos
int
insb
jnp
ds
jne
ds
lret
insb
jnp
ds
sbb
int3
ds
inc
idivb
insb
stos
int
insb
jnp
ds
or
idivl
insb
shl
insb
lret
insb
cmp
cmp
insb
jnp
ds
jnp
ds
sbb
in
insb
mov
lock
adc
ds
shl
insb
jnp
ds
push
out
ds
leave
ljmp
enter
and
ds
std
in
insb
out
iret
ds
jnp
ds
push
lock
es
or
out
ds
stos
int
insb
es
or
insb
jnp
ds
leave
ljmp
inc
idivb
insb
or
ds
sbb
ds
xchg
rep
mov
repnz
enter
cmp
cmp
insb
or
insb
out
iret
ds
adc
ds
jnp
ds
or
ds
sbb
lock
sbb
ds
push
out
ds
jne
ds
cmp
ds
jnp
ds
enter
or
ds
mov
idivl
insb
adc
ds
popf
cld
ds
jnp
ds
inc
push
cmp
insb
leave
ljmp
sbb
ds
push
lock
stos
int
insb
jnp
ds
inc
in
ds
jle
ds
mov
ds
fs
insb
jne
ds
adc
ds
jnp
ds
data16
insb
es
stos
int
insb
out
ds
shr
ds
pop
in
insb
popf
cld
ds
jnp
ds
enter
cmp
ds
cmp
lret
stos
int
insb
shr
ds
jnp
ds
out
iret
ds
sbb
ds
mov
int3
ds
lret
insb
cmp
lret
jnp
ds
pushf
cmp
bsr
pusha
movzbl
not
pusha
neg
add
shld
stc
mov
not
add
sub
rol
test
add
sub
shld
neg
not
test
add
movsbw
shl
mov
clc
call
bts
not
pushl
push
ror
rol
movl
cmc
xchg
mov
movsbw
push
rol
cmp
xor
movzbl
bswap
inc
pop
seta
btr
mov
shr
btc
sub
bsr
jmp
bt
add
pusha
pushf
mov
pushf
push
pushl
pushl
pushl
ret
not
push
not
bt
test
bt
sub
bt
test
pusha
and
lea
jne
pushf
pushf
pusha
mov
call
jmp
mov
lea
jg
push
pushf
mov
pushf
popl
push
mov
pushl
popl
push
lea
jmp
pushf
popl
call
cmc
xchg
mov
pushl
popl
bts
movw
cmc
jmp
mov
dec
rcl
bts
rol
mov
bt
push
lea
jo
bt
add
pushf
mov
pusha
mov
pusha
mov
lea
jmp
cmc
mov
stc
clc
call
pushf
pushl
popl
movb
pusha
pushl
push
lea
jmp
call
pushl
push
pushf
pushf
popl
mov
jmp
mov
pusha
pushf
mov
mov
mov
jmp
movb
divl
call
pusha
pushf
not
stc
not
jmp
jmp
pushf
pushl
pushf
inc
mov
movb
mov
lea
jmp
pushf
rol
pusha
test
pushl
cmp
xor
movb
call
push
mov
movb
pushf
pushf
popl
call
sub
mov
movw
mov
pusha
push
movb
push
lea
jmp
clc
not
rcr
mov
bt
jmp
mov
pusha
stc
movb
mov
stc
stc
push
clc
mov
rcr
jmp
inc
pushf
lea
jmp
bt
stc
mov
clc
clc
bt
mov
clc
bt
xchg
stc
bt
movsbw
pop
pushl
popl
lea
clc
stc
movl
pop
rcl
movzbw
clc
mov
bt
rol
mov
stc
stc
xor
pusha
inc
movb
lea
jmp
mov
cmc
inc
mov
jmp
call
dec
pushf
shr
mov
shl
mov
stc
stc
bt
sub
pushf
shl
pushl
lea
jo
push
mov
pushf
call
jmp
cmp
call
pushl
popl
pushf
lea
jmp
movb
mov
call
pusha
push
pushf
popl
jmp
push
pushl
pushf
popl
mov
mov
push
call
movl
pop
mov
jmp
bts
bswap
pushl
popl
ror
call
movzbw
movl
stc
mov
cmc
rol
cmc
clc
pushf
xor
push
inc
push
lea
jmp
shrd
mov
clc
cmc
pushf
add
pushl
pusha
mov
push
lea
jmp
clc
mov
clc
stc
mov
call
jmp
cmp
pusha
pushl
popf
pushl
pushf
pushf
pushf
lea
jmp
rcr
inc
movzbw
movzbl
btr
mov
cmp
xor
cmc
jmp
sub
pushf
pushf
movb
jmp
push
push
pusha
jmp
cmc
mov
jmp
pushf
popl
clc
push
bt
mov
pusha
cmc
jmp
pushf
popl
cmc
lea
jle
push
bt
clc
push
pushl
mov
clc
mov
bt
pusha
mov
pusha
jmp
push
mov
pushl
pushf
popl
pusha
movb
call
mov
inc
mov
pushf
mov
pushl
lea
jmp
call
cmc
xor
mov
inc
cmc
mov
pushf
sub
movw
cmp
cmc
call
pushf
popl
call
cmp
stc
call
mov
pushf
popl
lea
jle
push
movb
movb
pushl
popl
movw
pusha
pushl
lea
jmp
clc
stc
push
jmp
bt
call
sub
bt
add
clc
pushl
rol
push
not
cmc
ror
pusha
clc
sub
pushf
cmc
push
call
xor
mov
bt
sub
stc
push
shl
mov
call
sub
jmp
push
mov
call
sub
clc
bt
pushf
cmc
and
mov
call
cmc
xor
pushf
inc
movb
lea
jmp
shr
mov
rcl
clc
sbb
sbb
mov
call
push
movb
mov
pusha
pushf
push
lea
jmp
cmpl
jmp
pushl
call
add
cmp
mov
cmp
cmp
add
jmp
bt
pushl
sub
push
jmp
sar
xadd
mov
btr
mov
clc
bt
test
sub
push
push
bt
movl
mul
lea
je
mov
jmp
add
pushf
movb
jmp
mov
pusha
add
and
mov
jmp
pusha
mov
pusha
push
pushf
lea
jmp
jmp
mov
mov
mov
lea
mov
push
mov
lea
jmp
jmp
pushf
mov
mov
push
pushl
lea
jmp
shl
push
mov
pusha
call
pushf
mov
pushf
mov
pushl
pushf
pushf
push
lea
jmp
add
call
jmp
mov
jmp
pusha
pushf
popl
call
pusha
rcr
ror
jmp
jmp
call
movb
pushf
popl
push
movb
push
push
pushl
popl
mov
mov
movb
push
lea
jmp
call
mov
clc
cmc
lea
js
push
cmc
push
mov
cmc
stc
push
xchg
pusha
stc
stc
pushl
popl
bts
movl
bswap
btr
mov
pushl
clc
clc
cmc
rol
pusha
xor
mov
jmp
mov
cmc
stc
mov
cmc
mov
clc
clc
pusha
cmc
mov
mov
movb
bt
clc
mov
clc
bswap
pushl
popl
pop
bts
bswap
bswap
movl
cmc
bt
pusha
mov
jmp
mov
jmp
call
pushf
mov
mov
pushf
lea
jmp
push
mov
movb
call
bswap
jmp
test
cmp
sub
clc
jmp
jmp
mov
push
lea
jmp
call
not
movzbl
bt
pushl
push
rcl
btc
lea
movl
lea
movsbl
push
mov
jmp
call
mov
jmp
not
dec
btr
mov
push
inc
add
ror
ror
add
xor
sub
shrd
ror
sub
mov
cmc
clc
clc
shl
pusha
cmp
pushf
clc
shr
bt
call
pushf
pushf
popl
jmp
mov
movb
pushf
pushf
lea
jmp
clc
pushl
popf
mov
mov
movb
pusha
lea
jmp
rcr
mov
jmp
setno
shld
das
btc
mov
jmp
shr
jmp
rol
pushl
cmp
cmp
movb
xor
pushl
pusha
inc
pushl
pushf
push
lea
jmp
std
cld
mov
movl
pusha
rep
not
sbb
mov
add
jbe
pop
call
mov
call
pushl
add
cmp
jmp
pushf
stc
sub
stc
test
bt
call
bts
daa
daa
bswap
rdtsc
pusha
clc
pusha
cmc
sub
call
pushf
mov
push
pushf
push
pusha
lea
jmp
push
push
pusha
bt
bt
mov
pushl
clc
mov
call
jmp
push
jmp
jmp
clc
cmc
sub
jmp
pushl
movb
mov
pushf
lea
jmp
sub
push
call
bsf
movzbl
not
sub
add
inc
jmp
mov
jmp
xor
pushf
bsf
and
neg
add
cmp
clc
movzbw
cmc
movzbl
bsr
shl
call
lea
jns
pusha
mov
push
pusha
movl
call
movw
lea
jge
mov
call
pusha
lea
jne
jmp
ror
pushl
bt
push
add
call
pushl
popl
pushf
pushl
pushf
movb
lea
jmp
mov
pusha
call
movsbw
mov
push
rol
pusha
xor
mov
call
not
xor
test
mov
bswap
mov
jmp
ror
call
mov
bt
xor
bt
jmp
mov
or
cmc
cmp
test
mov
pushf
sub
js
sub
push
cmp
shr
lea
jo
push
mov
mov
pusha
mov
pushf
popl
call
mov
call
pushl
mov
movw
pusha
movl
lea
cpuid
jmp
pusha
mov
pusha
pushf
movb
pushf
popl
pushf
movb
mov
pushf
pushl
popl
mov
mov
movw
lea
jmp
push
mov
push
push
lea
jmp
sub
call
mov
push
pushf
mov
pushf
mov
pushf
lea
jmp
lea
ja
dec
cwtl
or
pushf
lea
aam
shld
lea
jmp
push
call
clc
mov
push
mov
call
bt
clc
mov
clc
pushf
push
jmp
call
clc
not
bt
mov
cmp
pusha
sub
pusha
bt
not
movl
cmc
add
movb
push
mov
call
bts
mov
adc
dec
btc
inc
mov
xor
sub
and
mov
cmc
add
jmp
ror
mov
pushf
call
mov
and
mov
bts
bswap
movzbw
shld
mov
cmc
jge
sub
push
div
mov
jmp
call
pushf
jmp
bswap
xadd
test
movzbl
stc
rcr
pusha
inc
sub
jmp
pusha
call
pushl
mov
pushl
push
push
pushf
popl
pushf
pushl
popl
push
pushf
pushf
lea
jmp
inc
pusha
pushf
pushf
movb
lea
jmp
rol
stc
clc
xor
pushf
pushl
push
mov
inc
mov
push
lea
jmp
cmp
sub
call
pusha
movb
mov
pushf
mov
push
lea
jmp
mov
pushf
mov
jmp
call
test
test
sub
cmc
cmp
add
jmp
pushf
inc
pushf
mov
pushl
lea
jmp
mov
movzbw
mov
rcr
add
mov
test
sub
jmp
movb
inc
pushl
pushf
pushf
lea
jmp
clc
cmc
add
std
pushl
jmp
mov
jmp
pushl
lea
je
stc
bt
clc
sub
test
xchg
bt
bt
cmc
clc
push
call
not
lea
jle
sub
bt
cmc
push
xor
stc
pushf
push
cmc
ror
jmp
stc
xor
movw
inc
pushf
push
movw
lea
jmp
cmc
adc
sub
neg
lea
neg
neg
cmc
pusha
movzbw
xor
not
movzbw
mov
setns
inc
test
xor
sub
inc
movzbl
mov
stc
clc
clc
mov
pushf
or
jmp
mov
pushf
popl
pusha
pushf
pushl
popl
push
mov
lea
jmp
call
mov
jmp
pushf
add
pushl
push
mov
movw
movl
lea
jmp
pushl
popl
pushl
movb
lea
jmp
movw
inc
pushf
pushl
push
lea
jmp
add
add
bts
shr
sub
stc
jmp
rol
stc
call
mov
mov
pusha
call
jmp
test
movzbw
lea
mov
dec
stc
push
sar
add
seta
jmp
add
movw
jmp
mov
jmp
sub
call
pushf
pushf
xor
call
push
pusha
pushf
push
mov
movb
pushf
lea
jmp
pushf
push
call
xor
pusha
inc
movb
pushl
pushf
lea
jmp
pushl
popl
push
lea
jmp
pushl
popl
mov
mov
movw
mov
lea
jmp
pusha
mov
movl
jmp
add
pusha
jmp
clc
stc
rol
jmp
pushl
cmc
mov
mov
mov
stc
call
bsf
mov
sub
sar
rcl
mov
clc
add
pushf
pusha
mov
pushf
mov
pushf
lea
jmp
mov
bt
mov
sbb
add
sar
shr
bts
mov
btc
adc
shl
add
not
shrd
neg
bsf
sub
shr
bsf
add
clc
shr
xor
rcr
mov
push
add
dec
movzbl
movsbw
shr
mov
cmc
xor
test
mov
add
pushf
movb
mov
mov
pushl
ret
jmp
cmc
cmc
add
mov
stc
mov
jmp
call
pusha
xchg
cmp
cmc
jmp
mov
pushf
mov
pushf
mov
lea
jne
shl
ror
btr
mov
bt
bt
call
aas
mov
rcl
pushf
ror
rol
mov
clc
bt
cmp
movb
add
pushf
call
push
call
inc
push
lea
jmp
inc
mov
jmp
clc
cmc
push
pushf
stc
call
call
call
mov
cmc
cmc
xchg
rcr
btr
movsbw
pushl
popl
rcr
stc
rcl
movl
call
cmc
pushf
mov
stc
movw
mov
clc
mov
clc
cmc
jmp
aad
adc
aaa
aam
mov
pushf
test
add
jmp
lahf
mov
ror
pop
seto
pop
bsr
test
bsr
pop
shl
das
pop
btc
btc
bsf
pop
or
pop
cmc
sbb
pop
rol
rcl
pusha
mov
movsbl
cmc
bsr
mov
btc
mov
stc
pushf
pushl
popf
pushf
push
mov
pushl
ret
stc
bts
ror
rol
mov
bswap
clc
not
rcr
rol
setle
jns
cmp
pushf
and
sub
rol
mov
pushf
pusha
sub
call
bt
call
pushl
mov
lea
btr
pushf
pushl
popl
btc
rol
pop
btr
movl
btc
movzbl
push
call
mov
pushl
push
bt
stc
rol
jmp
pushf
pushf
pushf
pushf
popl
pushf
mov
pushf
call
neg
cwtl
shl
mov
call
push
call
div
lea
jge
mov
jmp
mov
pushf
pushl
pushl
lea
jmp
mov
movw
pushf
popl
pusha
mov
mov
pushl
popl
pusha
lea
jmp
mov
cmc
stc
cmc
mov
mov
clc
jmp
cmc
pushf
mov
jmp
mov
stc
pushf
push
mov
mov
bt
xchg
movsbw
bts
rol
pushl
bts
rcr
pushf
pop
push
push
mov
pushf
rol
clc
test
lea
jne
bt
xor
pusha
push
movw
call
mov
movl
stc
clc
clc
xchg
mov
btr
ror
pushl
popl
rol
rol
movl
bt
bt
pushl
mov
jmp
cmc
cwtl
cmp
jmp
pushf
popl
cmc
mov
stc
jmp
push
movl
mov
pushf
pushf
stc
stc
mov
stc
jmp
mov
pushf
popl
movw
movl
pushl
pushl
popl
pushf
pushl
pushf
lea
jmp
xor
pushf
lea
ja
inc
pusha
pushf
lea
jmp
inc
pushf
pushf
lea
jmp
pushf
popl
push
cmc
jmp
pushl
popl
pushf
pushf
pusha
lea
jmp
jmp
clc
bt
jmp
mov
movb
mov
movl
lea
jmp
