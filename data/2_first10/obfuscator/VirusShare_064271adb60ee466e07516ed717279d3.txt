nop
add
divb
je
cmp
jp
notl
orl
insb
stc
imull
cmc
jle
lcall
and
jns
sub
addb
and
fmulp
stc
and
cmc
pop
cmp
int
cmp
leave
dec
xchg
out
or
hlt
jne
repz
dec
or
add
dec
pop
and
or
notb
scas
and
aam
daa
mov
sbb
jbe
cmp
push
inc
and
ret
dec
push
pop
sbb
negb
pop
pop
into
and
pop
jp
mov
mov
flds
mov
cmp
pop
cmove
cs
lahf
mov
mov
cmpsl
int
movsb
stos
xlat
bound
or
ljmp
cld
xchg
shrl
fsubrl
inc
ret
xchg
int
lret
clc
shrl
unpcklps
xor
test
sub
faddl
pop
loope
xlat
in
cmp
or
pop
pop
and
mov
pop
dec
ja
loopne
jge
popf
cmpsb
xchg
addl
addr16
add
stos
mov
bound
lahf
rol
test
and
int
enter
dec
into
fcmove
or
loopne
leave
shl
mov
or
xchg
dec
push
mov
sub
lea
and
in
mov
xchg
sbb
lock
pop
int3
dec
xor
mov
sub
cmpsl
aas
add
test
dec
fcoms
add
pop
lods
push
pusha
pop
test
arpl
into
gs
pop
push
mov
jns
cltd
sbb
push
sbb
fcoml
pop
mov
cltd
ja
mov
jp
lods
fst
lahf
test
fsubrs
fwait
xor
add
mov
fcompl
ljmp
inc
filds
dec
in
pop
addr16
and
mov
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
js
push
outsl
xor
cmp
jns
push
push
add
push
mov
pushf
ja
add
jge
mov
cli
mov
mov
scas
popf
inc
add
stos
pop
inc
or
out
add
mov
mov
add
add
mov
dec
add
pushf
push
add
ret
add
pop
iret
jle
out
mov
add
add
sarl
and
lock
testb
push
dec
je
push
push
fdivl
mov
fs
mov
test
gs
mov
scas
jns
add
inc
mov
mov
mov
das
jns
fwait
movsl
cmp
jmp
inc
or
pop
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
jo
bound
mov
fsubrs
scas
lods
pushf
mov
data16
or
xchg
push
gs
dec
sbb
jo
pushl
clc
and
jne
jns
xchg
lahf
add
adc
push
sahf
popa
pop
loope
and
pop
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
and
or
and
xor
add
cld
in
xchg
mov
xchg
cmp
jl
dec
xor
jbe
inc
loop
add
pop
add
clc
jae
lret
test
stc
and
movsb
sbb
fdivs
outsl
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
pushl
jge
repnz
test
testl
dec
cmpsl
pop
xchg
xchg
les
dec
aad
lret
negl
or
call
ret
mov
mov
dec
out
fs
cmp
push
mov
adc
addr16
aad
es
add
xorb
mov
bound
push
jecxz
aaa
jne
or
and
lods
sbb
fs
les
adc
and
and
enter
or
testl
push
data16
cwtl
enter
rcrb
cwtl
enter
mov
addb
pop
add
pop
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
inc
jmp
ds
imul
rcrb
cwtl
enter
rcrb
cwtl
enter
mov
mov
lahf
dec
push
dec
pop
or
imul
inc
rcrb
cwtl
enter
push
push
jle
sub
call
pusha
mov
and
lret
mov
dec
ret
fmull
xlat
rcrb
cwtl
enter
and
es
jge
test
inc
push
lcall
jo
adc
jae
xor
mov
lahf
pop
push
add
lock
mov
sbb
sbb
sbb
shlb
fwait
jns
rcrb
cwtl
enter
stos
sub
cmp
ret
xchg
shrl
xchg
mov
xor
xor
mov
inc
or
mov
testl
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
jge
int3
aas
sub
cltd
popf
test
gs
sub
mov
sbb
lret
sub
js
jge
cli
push
mov
loop
xchg
popa
jle
dec
sbb
ljmp
cmp
aaa
sub
inc
pop
movsb
sub
push
pop
mov
scas
test
frstor
pop
je
sbb
mov
xchg
or
push
inc
mov
xchg
addr16
sahf
sarb
loop
sbb
ret
repnz
mov
dec
rolb
xor
gs
jg
fdivs
pop
push
xor
dec
out
sub
jp
xchg
test
clc
sahf
jl
std
dec
jne
fiadds
sti
iret
in
sbb
lcall
pusha
rcl
cli
dec
ljmp
dec
ljmp
stos
jle
call
mov
int3
pop
sub
std
adc
push
xchg
jl
dec
pusha
pop
dec
lods
lret
or
in
push
cmc
pop
cmp
and
arpl
in
mov
cltd
sub
call
rcrl
fsubs
js
addl
push
shll
pushf
adc
mov
in
loopne
dec
inc
dec
push
int
dec
pop
lahf
pushf
xchg
dec
jnp
lds
add
lret
imul
fsubl
push
in
cwtl
push
mov
gs
aad
adc
adc
pop
pushf
shr
xor
dec
sbb
es
mov
hlt
mov
movsl
or
xchg
addr16
pop
inc
push
shrl
fdiv
cmp
pop
add
mov
cmc
hlt
jno
and
ds
out
fsubrs
daa
test
inc
nop
jle
nop
and
outsb
je
cmp
mov
jno
jmp
sbb
sbb
imul
fisubrl
inc
insb
xchg
mov
xchg
fdivrp
mov
push
dec
push
lds
in
add
adc
fcoms
mov
xor
mov
or
xchg
in
arpl
pusha
jo
adc
pop
mov
mov
adcb
std
jle
push
int3
cmp
fdivrs
jne
add
ss
or
jl
hlt
shrl
jns
jae
push
mov
out
les
out
add
pop
inc
cmpsb
or
call
shl
imul
shll
rcrb
lahf
fdivrs
mov
mov
inc
ret
inc
insl
push
push
pusha
push
jnp
mov
push
sub
mov
jno
loopne
fwait
mov
popa
subb
jmp
jmp
jge
pushf
lods
xor
dec
movb
adc
xchg
jmp
sub
lods
mov
xor
mov
push
add
mov
ud2
repnz
inc
sbb
jle
mov
mov
sub
negl
push
les
xor
test
sbb
sbb
adc
mov
out
divb
xchg
add
mov
leave
xchg
adc
das
mov
pop
or
outsl
scas
fnsave
fdivrs
sub
cmp
lahf
jl
xor
fdivl
rcll
jno
leave
add
pop
mov
mov
mov
cwtl
andl
sub
pop
lods
lahf
inc
and
xchg
popf
data16
xchg
lret
cmp
and
cmc
sub
mov
test
rorl
inc
cltd
dec
or
jo
ss
push
leave
push
decl
cltd
push
xchg
fwait
pushf
aaa
sbb
mov
dec
shrb
in
mov
incb
xchg
cs
call
jne
pop
sbb
jo
add
mov
mov
js
sarb
sti
lock
sbb
inc
nop
xchg
sub
repnz
push
jne
xchg
inc
pop
xchg
lret
or
cmp
dec
roll
cmp
add
pop
cli
inc
insb
xchg
cmp
mov
sbb
sbb
xorb
aaa
pushl
dec
mov
aad
negb
xchg
insl
mov
das
push
dec
xchg
dec
les
push
gs
mov
mov
mov
cmp
pop
or
mov
das
ror
cwtl
jno
mov
jge
loop
leave
dec
lods
push
or
rclb
dec
lds
jno
nop
inc
xlat
jno
int
sub
pop
dec
fisubl
sub
add
push
pop
imul
mov
sarb
gs
mov
leave
lock
in
sub
jne
js
or
lldt
pop
xchg
xchg
in
pop
gs
sbbb
mov
lcall
push
xchg
add
inc
adc
test
mov
mov
les
mov
rcrl
mov
mov
mov
leave
and
out
hlt
outsl
insl
jmp
arpl
aam
shll
ds
add
movsb
add
sbb
lea
inc
sti
popf
fdivr
xchg
cmp
mov
aad
cwtl
ja
insl
mov
js
push
cmp
test
jg
scas
ret
inc
imul
outsb
xor
dec
ficompl
scas
sbb
adc
sbbl
fisubl
push
ds
push
mov
xchg
mov
cmp
push
int
cmpsb
sub
loope
xchg
or
jns
shll
or
ret
movsl
push
test
push
mov
loopne
jle
xchg
xchg
in
pop
gs
xorb
cmp
movsb
sub
or
inc
mov
ss
or
in
test
cmpl
pop
test
inc
inc
in
push
mov
cli
cld
push
pop
mov
sub
cwtl
xor
jb
ja
loope
push
pop
out
pop
sarb
xor
jmp
notb
sub
adc
fcoml
stc
xchg
jbe
iret
sarl
pop
inc
andb
xor
cltd
inc
push
lea
add
pop
or
fstps
std
pop
push
cs
popf
pop
jbe
or
pop
push
adc
insl
mov
mov
dec
jb
ss
jne
gs
into
push
stos
or
dec
mov
ffree
cmp
aam
loopne
mov
or
nop
pop
add
je
sub
xor
xor
mov
ret
cwtl
pushl
push
mov
and
and
iret
and
dec
lods
mov
mov
in
xor
addr16
or
cli
mov
fwait
or
loopne
xchg
ss
movsl
das
mov
outsl
inc
inc
pop
or
mov
xor
mov
daa
aam
dec
mov
cmpsb
inc
test
cld
roll
call
cld
popf
and
in
cmp
lea
sub
pop
es
mov
in
rol
push
fstps
inc
xchg
and
xchg
scas
and
sub
cli
sub
arpl
xor
insb
rorl
cmp
inc
sub
add
jle
xchg
sub
mov
scas
inc
and
fwait
mov
jmp
xor
push
ljmp
jle
sbb
and
lock
scas
jmp
xor
imul
jmp
ja
and
cmp
rcl
inc
movaps
in
xor
xor
ja
outsb
in
stc
fmull
inc
addr16
xchg
adc
xchg
inc
leave
testl
fildl
nop
adc
cmp
fwait
mov
jmp
xor
loope
and
cwtl
xchg
add
sub
sub
pop
xor
loopne
sbb
pop
idivb
xor
out
ret
jbe
aaa
shl
aad
adc
sub
mov
insl
cltd
sbb
jg
dec
xor
jmp
mov
mov
add
ffree
fcmovne
sarl
hlt
push
into
test
mov
xchg
xchg
fsubr
dec
jge
inc
inc
popa
adc
mov
cmp
popf
cs
pop
repnz
xchg
scas
cmp
jp
pop
movsb
arpl
dec
jbe
inc
xor
pop
mov
pop
lods
outsl
jo
push
das
icebp
sbb
inc
push
mov
jbe
inc
jnp
pushf
lods
add
fisubrs
in
dec
lods
leave
mov
aaa
sub
mov
and
and
test
aad
add
jno
in
push
mov
sub
sbb
js
mov
lea
inc
adcb
sbb
dec
inc
rclb
hlt
xor
adc
or
hlt
fsubrs
mov
mov
mov
mov
cwtl
jp
add
sar
dec
xchg
fistl
sbb
push
cld
and
mov
jl
xchg
or
hlt
push
mov
add
fistpll
jp
in
mov
ljmp
sbb
add
mov
push
clc
cmc
push
lds
jae
pop
mov
mov
adc
pop
jno
pushf
sbb
loop
mov
addr16
cmp
push
xor
xchg
and
sbbl
loop
pop
mov
cltd
sbb
mov
icebp
push
jo
add
fdivl
cmp
leave
lret
xor
jne
outsb
jle
mov
sub
fisttpll
ss
inc
insl
es
out
cmp
jge
pop
and
hlt
stc
mov
nop
in
cmp
xchg
mov
movsl
or
pushf
mov
movsl
js
mov
mov
sub
push
enter
xchg
scas
shrl
push
cmp
mov
sbb
jle
and
jb
jns
mov
inc
leave
push
out
dec
xor
popa
repz
and
push
mov
pop
push
xchg
push
cmp
ss
test
or
cmp
pop
pop
adc
dec
mov
jno
mov
sub
xlat
pop
dec
jb
bsr
test
push
ret
jb
fs
int
popa
pop
stc
pushf
pop
xlat
jno
xchg
pop
mov
mov
pop
or
jnp
in
fs
fwait
mov
pop
in
cltd
mov
jns
xchg
cmp
mov
and
push
inc
enterw
sbb
sahf
mov
push
shlb
and
push
xchg
pop
test
lea
pop
and
ja
push
cmp
fldcw
inc
lahf
sub
jnp
jl
in
arpl
add
xchg
lods
inc
gs
scas
rorl
jnp
push
in
pop
dec
rorb
jns
not
mov
in
dec
xor
iret
andb
pop
push
stos
cmpsl
popf
mov
cmp
test
imul
dec
aad
mov
scas
adc
shrb
push
mov
sbb
test
aam
js
hlt
std
push
push
jbe
pushf
cmpsl
mov
daa
xchg
repz
jnp
rcrl
push
je
mov
insb
aaa
jbe
push
popa
inc
outsb
sar
shll
xor
push
lret
aas
icebp
cmp
sub
push
pop
adc
jecxz
hlt
out
cwtl
xor
fsubp
faddp
rcll
push
sti
pop
adc
test
xchg
incb
adc
jae
inc
hlt
jbe
pushf
ss
addr16
push
mov
xchg
outsb
andb
sbbb
push
mov
push
lock
test
push
pop
cmp
shll
xchg
pop
dec
jecxz
add
dec
push
in
mov
fsts
push
mov
adc
in
ja
or
jle
es
xor
push
stos
inc
fwait
mov
sub
leave
xchg
pop
lds
pop
xorb
fiadds
xor
std
ret
movsl
dec
pop
popa
lea
jp
imul
iret
lods
cli
aaa
out
les
outsb
xlat
mov
fbld
and
fbstp
mov
js
imul
outsl
pop
add
or
inc
out
dec
lea
add
xchg
enter
push
sub
dec
scas
push
ret
dec
incb
push
and
push
xor
ja
es
push
jecxz
andb
out
dec
dec
orb
xor
into
mov
enter
js
adcl
or
popf
adc
fidivs
cmpsb
push
fldt
mov
int3
push
pop
push
pop
adc
shlb
mov
ret
pushf
les
rcrb
xchg
cmp
sub
cmpsl
jge
mov
fisttpll
mov
xchg
jb
add
movsl
cmp
insb
iret
inc
into
movsl
fs
aaa
push
sbb
mov
fadds
gs
push
mov
sub
sbb
pop
mov
mov
enter
push
or
dec
cwtl
je
clc
out
dec
sbb
test
pop
sbb
ss
fiaddl
les
sub
mov
fs
jno
jbe
sub
pop
std
ljmp
out
push
iret
fwait
push
sbb
pop
mov
mov
divb
out
xchg
jns
jecxz
aad
mov
sar
adc
addb
add
inc
fcoms
dec
inc
loop
hlt
cmp
lods
xchg
dec
popf
aaa
sbb
outsb
scas
add
adc
xchg
pop
jnp
cmpl
in
dec
push
xchg
mov
mov
fsubr
sub
pmuludq
mov
jl
aas
dec
cmp
inc
das
add
or
adc
sub
push
ljmp
and
add
scas
sub
lods
inc
mov
sbb
subb
pop
ficompl
cld
sub
cmp
rcrb
cmpsb
out
xchg
lret
aas
push
sbb
es
lds
push
push
je
lret
gs
shl
xchg
repz
sti
or
sbbl
pusha
fldenv
mov
sbb
rcll
pop
adcl
repz
test
fwait
add
push
xor
xor
push
or
cmpsl
jae
hlt
adc
mov
xor
adc
in
idivl
push
mov
rolb
lock
push
fld
xor
xor
mulb
sub
stos
pop
add
adc
inc
in
aas
sub
pop
js
mov
push
xchg
push
pushf
inc
mov
xor
repnz
lock
cmp
cmp
mov
cltd
or
test
stos
in
ret
ljmp
inc
pushf
jp
sar
mov
aad
sbb
aaa
ret
inc
aam
dec
and
imul
pop
pop
xchg
mov
cld
cs
add
shll
xchg
xor
sub
cs
hlt
mov
inc
mov
push
std
fildll
movsb
arpl
cmp
jo
cmc
sub
pop
sub
cmc
lea
leave
mov
into
adc
testb
in
test
rcrl
push
pop
mov
adc
or
adc
out
in
cmc
ss
std
jmp
dec
push
lret
add
push
clc
jmp
jle
repz
int
push
fstl
or
jnp
scas
jge
lcall
nop
int
and
push
adc
gs
add
cmpsl
std
dec
lds
sub
mov
notl
mov
xor
mov
pop
lahf
or
pop
push
pusha
or
dec
pop
repnz
les
and
mov
jae
jp
mov
xchg
fisubrl
rolb
aam
lock
mov
jo
insb
push
dec
mov
lret
je
lcall
pop
scas
inc
push
jb
sbb
cmpsb
push
lods
sbbl
jae
jne
mov
add
sub
xor
jecxz
dec
and
and
lret
mov
loope
js
mov
mov
push
or
fwait
adc
lret
sbb
sbb
fmuls
xchg
push
mov
add
ret
sub
or
js
xchg
add
and
or
sahf
push
addb
xor
stos
stos
loop
cmp
mov
rclb
mov
cmp
call
inc
mov
sub
mov
and
imul
int
xchg
and
stos
pop
in
dec
cmp
or
inc
je
call
lods
mov
cmpsb
sub
xchg
jge
sbb
xchg
loope
sub
xchg
popa
push
pusha
push
jg
push
or
pop
shlb
and
pusha
lcall
add
push
mov
mov
jae
imul
sub
sbbl
idiv
sbb
push
mov
aad
fstpt
push
sbb
paddw
cmpsb
popf
je
cli
in
outsl
and
jo
jno
sub
out
sbb
dec
mov
jle
jb
repnz
sub
addr16
xchg
add
adc
and
and
mov
xchg
dec
jne
pushf
jbe
fidivl
mov
pop
pop
icebp
sarl
or
inc
jae
clc
aad
jg
out
lock
imul
mov
sub
sbb
lods
sti
mov
mov
ret
push
jb
fcompl
xchg
rcrl
jae,pt
or
jae
lods
cmpsb
dec
fdivrp
pop
movsb
lock
ljmp
mov
push
push
into
or
outsb
stos
lock
cmpsb
or
sbb
dec
pop
rolb
lret
es
popf
sahf
adcb
add
cwtl
cmp
movsl
loope
lcall
mov
push
js
push
push
add
loop
pop
outsl
dec
fiaddl
xchg
adc
movsb
pop
xchg
add
aad
add
and
pop
mov
push
pushf
out
add
inc
xchg
push
std
inc
repz
arpl
mov
out
cmpsb
dec
push
jge
mov
and
jo
pop
in
sti
inc
mov
push
dec
xorl
xor
sbb
aam
push
icebp
push
pop
les
push
scas
ss
xor
cmp
xor
push
jmp
mov
insl
and
es
push
addr16
cmp
xchg
test
cmp
icebp
arpl
and
andl
daa
xor
clc
int
out
pop
pop
data16
inc
adc
xor
je
outsl
push
cwtl
sbb
mov
lods
sbb
push
repz
jl
jle
adc
addl
sub
jecxz
imul
jp
cmpsb
pop
pop
inc
cmpl
out
imul
out
out
jmp
and
and
aam
in
mov
insb
in
cwtl
sbb
xchg
sbb
jns
sub
cmp
ror
rolb
mov
ss
push
outsl
xchg
mov
sbb
and
ficoml
jnp
pop
movsl
mov
xchg
sub
push
jo
inc
inc
data16
mov
fidivs
inc
out
mov
mov
scas
sub
dec
in
push
cs
int
lret
je
in
mov
jns
lret
dec
stos
lds
mov
ret
test
out
and
pushf
stos
sarl
into
inc
xchg
sbb
sbb
mov
adc
mov
fstpl
pop
sub
xchg
aad
out
dec
add
xchg
es
stos
fwait
into
push
stos
dec
lods
movsb
test
dec
mov
or
lods
push
decl
fidivrl
push
cmp
hlt
sbb
xchg
adc
jbe
adc
aad
cmp
mulb
mov
push
inc
and
imul
fs
clc
imul
into
inc
xchg
sbb
icebp
andl
inc
xor
jg
cmp
inc
popf
xor
insb
xor
mov
dec
das
push
int
stos
xchg
sub
or
es
or
insb
mov
pop
ds
test
jmp
mov
sub
jg
and
or
fistps
shll
xchg
sbb
sub
iret
mov
sahf
push
cmp
test
xchg
xchg
xchg
bound
sbb
out
insl
mov
mov
addr16
push
jl
xorb
mov
cmp
cmp
movsb
xchg
dec
stos
into
mov
imul
dec
dec
adc
push
push
xchg
scas
jnp
outsb
xlat
inc
pop
dec
push
in
in
sub
fcomps
or
sub
push
movsb
inc
pushf
out
int
add
xchg
enter
jo
and
sahf
movsb
cld
popf
cwtl
pop
push
mov
jae
es
sbb
adcl
mov
andb
imul
mov
or
adc
into
push
repnz
iret
inc
cld
xor
hlt
sbb
in
or
and
mov
lea
pop
aam
iret
sub
addr16
pop
sub
sbb
fcom
fs
int
addr16
bound
mov
mov
jmp
xor
mov
or
pop
jb
js
dec
mov
mov
nop
sbb
pop
push
adc
mov
mov
xlat
dec
cmp
mov
loopne
cmc
incl
rcrb
jp
push
popf
jnp
adc
int
iret
sub
pop
jns
or
add
mov
mov
int
xchg
sbb
mov
fldt
mov
out
push
leave
push
in
inc
sahf
pop
mov
aam
jg
push
lock
test
lcall
pop
or
pop
add
jecxz
lret
mov
mov
pop
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
mov
sbb
aas
dec
xchg
stc
xor
cmp
in
cltd
sub
and
in
adc
ror
pop
add
jns
fisttpl
or
mov
dec
imul
loop
in
in
lret
scas
jmp
add
sahf
movsl
xchg
jne
mov
cmp
sbb
inc
shlb
std
aas
hlt
mov
adc
es
xchg
stos
aaa
jns,pn
xchg
or
int3
sub
push
mov
or
rcrb
cwtl
enter
dec
mov
out
ficoms
mov
or
ret
cmp
std
into
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
push
adc
cmpsl
int3
mov
inc
xchg
sub
push
or
repz
lcall
inc
adc
adc
jle
or
rol
shl
sbb
add
mov
outsb
pop
rcll
cmp
mov
sub
jb
xor
push
mov
nop
jns
sbbb
in
out
xor
arpl
outsb
fisubrs
xchg
loope
mov
test
xlat
leave
repnz
repnz
push
push
mov
cmp
mov
stos
test
mov
pop
or
sub
insb
mov
lea
repnz
xchg
xchg
js
rorb
adc
sbb
adc
pusha
xor
icebp
and
mov
or
dec
inc
mov
rorb
inc
mov
xor
cmc
cwtl
out
adc
fildll
and
xchg
pop
push
lahf
jecxz
mov
jnp
xchg
stos
dec
lock
mov
jge
push
lods
jo
loop
cltd
jmp
sahf
jl
fwait
pop
adc
les
or
lock
jbe
scas
popa
pop
sub
inc
xor
scas
aas
ds
dec
sbb
aas
std
lds
cmc
ja
xchg
jmp
pusha
sub
mov
aaa
mov
test
mov
dec
adc
clc
outsb
xor
push
add
xor
inc
sbb
mov
daa
jnp
lret
divl
loop
mov
and
arpl
xchg
mov
push
mov
mov
or
leave
insl
test
pop
xchg
imul
clc
nop
xchg
xor
out
or
and
cld
mov
push
pop
jl
hlt
push
jae
push
cmp
mov
xchg
rcll
mov
jne
mov
xchg
shrl
std
daa
sti
mov
fisttpll
cmp
cmpsl
nop
dec
dec
shl
std
dec
fists
movb
pop
mov
aas
stc
add
adc
mov
in
jnp
dec
repnz
sarl
cmpb
mov
add
int3
shrb
mov
inc
mov
add
xor
sub
es
adc
aas
das
push
dec
push
fisubrs
divb
mov
xchg
lock
aam
aam
mov
mov
adcb
pop
sbb
repz
lock
add
aaa
jbe
imul
lods
inc
push
xchg
jmp
or
scas
push
ss
dec
aam
ret
add
inc
addr16
inc
adc
cs
test
fcompl
gs
aam
inc
popa
xchg
jne
push
pop
xchg
iretw
ficompl
push
inc
inc
sub
inc
mov
mov
pop
mov
es
cmp
repnz
cmc
or
jg
in
lea
adc
lret
bound
or
inc
mov
shrb
gs
xor
pop
nop
pop
sbb
lcall
xchg
or
int3
pop
pop
jbe
sti
xchg
clc
push
xor
jge
into
add
test
pop
gs
iret
shlb
push
sub
xorl
cmp
cltd
mov
cmpsl
dec
imull
int3
mov
ja
orl
inc
pop
pop
mov
inc
out
fwait
fwait
xchg
jmp
icebp
xchg
rep
add
fwait
rcrl
push
adc
pop
mov
stc
scas
popf
sbb
es
ret
mov
rcl
xchg
mov
push
sbb
add
outsb
scas
xor
jle
ljmp
pop
mov
dec
or
xor
add
lea
adc
sbb
out
out
mov
test
mov
pushf
cs
call
mov
sbb
pop
sub
xchg
mov
mov
inc
test
shrl
push
lods
sti
mov
in
fidivl
mov
insb
pop
xchg
or
dec
adc
sbb
mov
addr16
lods
les
mov
and
pop
repnz
inc
dec
sbbl
xchg
or
push
shl
cwtl
data16
push
dec
mov
sub
add
outsl
sahf
xor
sub
xor
xor
jle
sbb
es
out
cmp
movsb
pop
pop
sub
xchg
jns
movsl
gs
push
repz
sub
jecxz
test
cmpsb
enter
sub
les
xchg
cmpsl
sbbb
sti
jnp
xorb
lds
ds
add
mov
repnz
mov
or
sub
test
sbb
mov
push
sarl
pop
add
push
cmc
sub
add
fdivrl
or
adc
mov
sti
out
sbb
lods
aaa
pop
shll
repnz
aas
xorb
adc
aaa
xchg
or
mov
push
mov
sbb
sbb
fdivrs
test
lcall
loopne
sub
out
xor
push
and
sbb
outsb
xchg
dec
jp
add
into
inc
popf
in
add
fidivrs
inc
dec
lea
scas
push
repnz
xchg
xchg
mov
cltd
and
mov
mov
mov
sub
rclw
jbe
push
and
decl
enter
ret
insl
fidivl
into
sarb
arpl
mov
lods
lretw
inc
inc
sub
loope
daa
sahf
setnp
cmpsb
mov
fistl
clc
out
xchg
out
lret
adc
fldl
repz
les
test
popa
in
in
bound
aas
insl
and
pop
push
mov
sub
popa
cs
or
mov
mov
popa
dec
sub
mov
mov
inc
outsb
sti
mov
dec
ret
and
push
fdivs
pop
je
mov
decb
or
arpl
and
ljmp
pop
in
sbb
push
sbb
inc
lds
add
out
xor
mov
xchg
and
popf
and
imul
mov
data16
ja
and
clc
into
or
xchg
sarl
dec
call
mov
sub
sarb
inc
aad
arpl
xor
cmp
or
movsl
pushf
lock
lcall
mov
sbb
lds
pop
mov
and
jno
adc
sub
ljmp
jp
sbb
jbe
mov
bound
stos
mov
mov
scas
mov
mov
jne
sub
rcll
cwtl
mov
cmpsl
add
lock
rcrl
pop
repz
push
add
or
loopne
sbb
push
push
pop
sub
xor
mov
out
or
imul
sbbb
ret
aaa
jg
mov
mov
inc
sub
xor
sbb
cmpsb
lahf
cmp
sbb
call
fldl
nop
mov
lahf
rcll
push
lcall
sub
push
mov
push
mov
test
test
aaa
add
cwtl
aad
cli
cmp
addr16
outsb
sub
fdivrs
lcall
push
add
popa
cmpb
push
inc
icebp
inc
cmp
pusha
repz
idivl
mov
pop
icebp
int3
rcl
pushf
mov
repz
jae
je
out
adc
dec
ret
mov
loop
das
push
ds
into
mov
rorb
ret
std
test
sbb
mov
pop
push
cmp
push
push
clc
push
in
push
pusha
mov
mov
dec
lods
mov
stos
stc
lahf
repz
inc
jmp
xor
int
loopne
or
mov
insb
lods
out
mov
iret
std
mov
mov
jne
cmpsb
push
stos
pushf
pusha
or
xor
cmpsl
fadds
fs
popa
xorl
sub
cmpsb
push
jnp
mov
sbb
rcl
xchg
sahf
cwtl
call
xchg
jae
hlt
push
sbb
cmpsb
data16
dec
cld
jle
push
mov
inc
subl
ret
or
sbb
pop
dec
adc
cmp
mov
lret
mov
push
scas
mov
aas
add
or
and
leave
stc
jnp
fwait
jp
add
stos
imulb
cmp
rorb
pop
mov
jg
stc
popf
adc
jl
sub
mov
dec
fimuls
mov
inc
insl
sub
ja
add
jnp
sti
je
sar
pop
idivl
jmp
inc
and
les
test
scas
xor
daa
jmp
incb
xchg
mov
movsb
pop
mov
loop
or
jmp
notb
in
adc
cmpsb
rol
pop
mov
push
pop
bound
pop
mov
sarl
mov
dec
xchg
jns
xor
mov
hlt
movsl
cltd
push
pop
pop
cs
fsubp
std
dec
orl
aas
subb
mov
popf
add
popf
ret
loopne
mov
cs
jmp
push
paddq
adc
dec
pop
cli
push
sbb
xor
scas
ret
enter
leave
mov
mov
mov
mull
shl
aas
mov
mov
movsb
stos
push
aad
ret
mov
fsubp
inc
xor
mov
dec
les
push
into
in
sbb
adc
and
ljmp
sbb
cmpsl
dec
mov
cmpsl
insb
mov
jmp
adc
punpckhdq
mov
dec
fisubl
pop
daa
pop
or
mov
mov
nop
dec
push
cltd
loopw
movsl
push
dec
sbb
pop
dec
insb
in
mov
je
dec
mov
dec
or
cmp
hlt
mov
pop
or
jno
push
sbb
les
pop
lret
jle
adc
nop
sub
or
cmc
mov
push
jle
inc
xchg
fists
push
jmp
imul
sbb
leave
pop
cs
jmp
push
pop
in
lds
jmp
ss
lahf
insl
mov
cltd
je
paddb
leave
sbbb
mov
stos
imul
cltd
pop
out
ss
sub
sbb
jno
push
push
data16
sbb
iret
or
push
xor
cmp
pushf
mov
fwait
and
dec
gs
jecxz
lods
jo
test
adc
or
stos
mov
test
mov
cmp
adc
xchg
loope
mov
arpl
jo
sahf
mov
mov
int3
xchg
int3
repz
call
cld
test
mov
movsl
or
fld
mov
in
add
and
faddl
xor
pop
lahf
ss
dec
notb
outsl
in
fistl
sub
push
std
push
fstl
lahf
out
test
pop
pop
fadd
test
adc
incb
xor
inc
out
push
sbb
jbe
add
inc
mov
orl
jnp
adc
outsb
or
jae
jle
andb
shlb
pslld
pop
cld
cmp
add
bound
pop
mov
jbe
mov
pusha
fwait
call
dec
aas
inc
push
lods
cltd
lahf
xchg
pop
mov
add
sub
jno
test
xchg
xchg
pop
or
cld
bound
shl
mov
jns
xchg
mov
cld
addr16
push
decb
dec
sbb
mov
sub
out
dec
hlt
repnz
scas
aam
std
mov
or
mov
push
int3
xchg
int3
mov
lods
or
es
sub
inc
push
mov
add
ret
adc
bound
xor
loop
bound
popa
daa
sub
xchg
data16
test
push
mov
clc
into
arpl
sub
dec
jo
xchg
push
pop
push
js
loopne
inc
dec
sahf
hlt
inc
add
scas
sbb
mov
push
cmp
sbb
inc
mov
ret
or
mov
cli
fisttpl
and
xchg
dec
hlt
or
xor
jmp
loop
orl
test
aam
sub
aam
cmp
mov
cltd
inc
iret
les
fldenv
lods
xchg
fisubrs
loop
jno
out
ds
in
jae
and
push
cmp
xor
push
rolb
adc
rclb
movsb
xor
sbb
inc
push
or
mov
out
jge
mov
stc
mov
xor
jns
sbb
dec
sub
pop
out
leave
mov
mov
mov
pusha
test
push
mov
push
scas
pop
pop
pusha
fs
ja
repz
or
fistpl
mov
jmp
insb
xlat
pop
dec
aas
outsb
sub
cmp
mov
dec
mov
push
repnz
jnp
or
dec
subb
arpl
mov
vprotw
jnp
scas
and
adc
stc
pop
add
stos
ret
lds
enter
ss
shl
xor
fbstp
inc
pop
arpl
out
mov
iret
pop
sbb
dec
pop
arpl
mov
lea
int3
push
xchg
ja
push
or
mov
test
jns
push
fadds
imul
jo
js
adc
pop
add
in
cmc
lea
jge
movsb
inc
mov
mov
pushf
and
test
mov
subl
and
mov
jno
xchg
or
and
in
lcall
pop
push
in
xor
nop
mov
insb
aas
mov
daa
jno
iret
inc
por
enter
xchg
pusha
ret
xor
xchg
fwait
xchg
inc
ret
in
mov
adc
pop
ljmp
fwait
outsb
int
test
mov
lock
rcrb
js
mov
sub
xor
xlat
faddp
mov
pop
pop
push
jecxz
adc
cld
ret
insb
rcrl
jns
sbb
jne
push
and
sbb
cli
iret
imul
sbb
inc
xor
bound
out
in
push
dec
or
int
ficoml
outsl
cmp
and
mov
mov
xchg
imul
or
nop
pop
test
in
mov
jae
shrl
xor
stos
pop
pop
scas
jnp
in
out
adc
dec
and
scas
sbb
ror
ret
sbb
std
jae
mov
inc
sub
or
outsl
mov
daa
add
mov
mov
sbb
push
dec
xchg
and
and
pop
daa
imul
js
xor
leave
mov
sub
jmp
sbb
scas
out
xor
imul
add
hlt
movsb
addb
test
pop
fisttpl
push
push
int3
jnp
jne
test
rorl
fidivl
mull
push
outsl
or
outsl
outsb
nop
cs
pop
loope
pop
mov
sbb
mov
xchg
out
jmp
sahf
repz
pop
push
shlb
loope
jl
aam
les
fstl
mov
aad
mov
lods
rol
pop
sub
mov
dec
cmpsl
out
fstps
mov
fidivs
jbe
cmpl
xchg
mov
popf
pushf
loopne
or
jmp
jg
les
leave
mov
loopne
imul
dec
push
ret
jno
mov
pop
ret
popf
inc
cltd
repz
jp
pop
and
testb
adc
jp
mov
xchg
push
js
push
fiadds
sub
sti
clc
add
ss
add
push
jnp
cmp
sbb
hlt
pushf
addr16
nop
test
scas
adc
mov
pop
push
fdivrs
cs
cmp
arpl
mov
in
xor
leave
mov
das
stos
inc
int3
jae
out
stc
out
dec
sub
or
out
mov
sub
or
dec
push
dec
and
repnz
adc
xchg
dec
jne
cs
cmp
mov
jo
lret
ljmp
xor
lock
sbb
jb
xchg
inc
or
mov
mov
cwtl
lret
push
test
iret
fcomp
call
cld
lret
and
cmpsl
roll
fsub
ljmp
and
or
sbb
mov
pop
adc
mov
sarl
out
push
cmp
mov
xchg
paddusw
push
popf
xor
push
or
and
cmp
push
inc
cs
adcb
lret
aam
ficoml
insb
cmc
shll
in
xchg
ja
fs
test
fdivs
adc
and
mov
jo
lods
jno
push
stc
jecxz
cli
push
cltd
ja,pn
lahf
adc
inc
lods
bound
cmp
dec
sub
jbe
mov
inc
mov
out
jp
arpl
and
rcr
mov
je
and
bound
xchg
and
xchg
pop
push
adc
cmp
dec
jnp
mov
and
push
outsl
ss
neg
pop
dec
outsb
push
mov
daa
lret
scas
adcb
out
imul
push
push
adc
xchg
lods
and
fcoml
subb
dec
int
ret
mov
nop
in
xor
dec
insb
cwtl
fnstsw
jecxz
out
pushf
bound
xchg
sub
clc
ss
cmc
insb
mov
nop
sub
cltd
cwtl
in
push
add
inc
lret
pop
enterw
dec
fdivs
mov
cli
xchg
jl
jo
outsb
mov
pusha
jp
out
shrb
cmc
or
sahf
mov
xchg
dec
lcall
fisttps
leave
pop
aas
imul
xor
xor
movsl
cmp
imul
lea
cmp
add
push
gs
pusha
xchg
and
stos
sbb
stos
jae
mov
and
dec
inc
outsl
cmp
and
aaa
data16
push
dec
in
sub
shrl
pop
mov
sub
xor
add
cmp
sbb
push
dec
aas
push
mov
mov
lds
jno
xchg
sub
ret
inc
xor
pop
mov
sub
xchg
dec
lds
ficoms
inc
fistpll
arpl
ds
lock
dec
xor
mov
inc
mov
leave
mov
test
push
cmp
mov
push
jno
shlb
inc
ret
loopne
mov
pushf
jmp
push
or
in
sbb
xchg
mov
cmp
shll
sbb
xlat
insb
pop
fmuls
cwtl
cmp
mov
sub
test
roll
cld
xor
adc
dec
push
movsl
adc
lods
arpl
lods
jge
lods
scas
jecxz
push
cmp
and
stos
and
fwait
adcb
adc
inc
add
sub
repnz
cmp
push
inc
mov
xchg
jae
pop
clc
cmp
mov
xchg
xchg
aaa
dec
popf
mov
lds
hlt
cmpsl
ret
daa
data16
lock
xor
aaa
ret
dec
pop
jle
sbb
ss
in
pop
out
mov
cs
dec
mov
icebp
lods
shl
pop
repz
mov
das
and
loop
aad
test
push
ds
mov
inc
xchg
adc
outsl
cld
lahf
xor
test
push
lret
sub
jp
jge
dec
jno
aad
adc
push
jbe
aas
ror
mov
jl
cmp
adc
xchg
negb
test
pop
mov
pop
jno
sub
add
jecxz
or
mov
sub
stos
or
mov
imulb
movsl
scas
pop
cmp
hlt
jne
add
int
lahf
cltd
aad
cmp
clc
std
push
mov
daa
and
jae
and
fisubs
push
fisubrs
test
sub
xor
pop
inc
aad
sahf
mov
mov
shlb
sbb
fiaddl
hlt
xor
xchg
mov
enter
xlat
mov
push
add
mov
shl
mov
xor
cld
jecxz
inc
insb
mov
insl
cmp
in
mov
test
jae
xor
outsb
and
cmp
std
mov
lods
lcall
push
int
aam
js
adc
mov
notb
sbb
push
xchg
sbb
jo
mov
test
sahf
mov
xchg
ficomps
mov
ret
ret
push
sahf
cmp
or
int3
enter
cmp
jp
mov
jecxz
jno
std
lcall
inc
clc
icebp
sti
jle
loop
jp
inc
out
push
jae
aam
ja
lcall
cli
stos
dec
jb
and
lea
ljmp
in
inc
dec
sub
pop
test
cli
test
jmp
ror
inc
or
sub
dec
pusha
imul
repnz
clc
idivb
dec
or
sub
rorb
adc
push
or
loopne
and
adc
cld
out
inc
push
xchg
insl
lret
cmp
stos
add
daa
imul
scas
pop
psubsb
imul
pop
mov
lcall
sbb
in
mov
and
dec
pop
int
sbb
jg
dec
frstor
adc
sub
cmp
ret
dec
je
xor
out
outsb
std
enter
test
or
in
lea
lahf
call
sbb
xchg
mov
mov
mov
jae
push
imull
jno
mov
push
ss
sbb
cmc
call
jp
mov
xchg
mov
adc
cltd
push
out
subb
test
shlb
test
aam
dec
sbb
sub
sbb
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
xor
fs
adc
sub
dec
mov
or
cmp
adc
pop
mov
rcrb
cwtl
enter
mov
sbb
aas
dec
xchg
stc
xor
cmp
in
cltd
sub
and
in
adc
ror
pop
add
jns
fisttpl
or
mov
dec
imul
loop
in
in
lret
scas
jmp
add
sahf
movsl
xchg
jne
mov
cmp
sbb
inc
shlb
std
aas
hlt
mov
adc
es
xchg
stos
aaa
jns,pn
xchg
or
int3
sub
push
mov
or
xchg
orb
mov
sbb
into
aam
mov
push
mov
mov
mov
mov
xchg
push
mov
xlat
jl
sub
movsb
adc
lods
aas
adc
ret
shlb
mov
int3
call
xlat
adc
push
mov
xchg
pop
jl
pop
js
je
inc
pop
lret
or
cmc
jecxz
sbb
mov
cli
pop
ljmp
into
lret
and
outsb
ja
dec
popa
insb
push
mov
mov
pushf
data16
mov
mov
scas
popa
sti
es
rorl
push
mov
in
insl
lcall
inc
dec
pushf
jmp
daa
in
xchg
insb
aam
test
inc
test
push
stos
les
mov
add
pushf
pushf
jns
mov
outsl
shll
pop
mov
inc
scas
arpl
ljmp
dec
cmp
xor
aas
sbb
cmp
inc
shrb
or
push
fldl
sbb
insb
lret
lds
out
jg
mov
mov
sbb
mov
jnp
mov
test
sub
sub
xchg
hlt
pop
add
or
xor
or
addl
add
lock
std
inc
cli
loope
fistpl
push
test
inc
inc
sbb
lea
loop
icebp
in
dec
and
movsb
cmpsl
mov
jnp
call
outsb
int3
xchg
inc
sbb
xchg
sbb
jns
jbe
push
jne
mov
clc
inc
jo
jg
xor
lcall
fwait
movsb
add
ret
jge
push
bound
sub
repnz
sbb
lahf
adc
or
clc
sbb
icebp
mov
xchg
loopne
in
repz
sarl
dec
jmp
shl
or
lret
jbe
loope
add
shr
test
xchg
inc
or
cmp
test
dec
ss
ja
pushf
xchg
jae
push
jecxz
mov
ljmp
addr16
mov
sahf
leave
sbbl
mov
xorb
mov
movsl
jbe
xchg
pop
dec
stos
add
mov
inc
dec
in
repz
cmp
popa
sbb
or
lret
and
sbb
out
push
lahf
test
sub
sbb
push
pop
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
dec
push
popa
jns
inc
xchg
mov
xor
icebp
stc
shll
mov
add
scas
cmp
popa
xor
daa
push
or
xor
into
pop
dec
jmp
ljmp
notb
jnp
jo
icebp
movsl
jl
lahf
lock
or
mov
mov
arpl
adc
mov
sub
bound
pop
ds
insb
les
sub
push
insb
xor
pop
out
cs
jecxz
add
adc
dec
push
fwait
sbb
daa
in
aad
rcrb
xchg
sub
sbb
cmpl
inc
inc
jo
and
or
mov
cmp
xor
fdivs
stos
add
icebp
in
call
fnstenv
xor
jo
mov
mov
cmpsb
xor
mov
xor
dec
xchg
mov
push
rcrb
mov
inc
jns
ret
push
lods
enter
scas
mov
sub
cltd
jl
push
mov
pop
je
jnp
or
loope
jmp
fnstcw
cmp
stc
call
popa
push
xchg
scas
pop
insl
mov
es
sbb
repnz
daa
cmp
iret
mov
lcall
les
pop
mov
adc
jbe
into
pop
and
test
lret
sub
cs
frstor
es
lahf
jb
mov
out
pop
pop
xchg
dec
jo
test
imul
mov
cmpsl
jge
sbb
call
and
jle
mov
adc
push
mov
pop
in
pop
mov
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
rcrb
cwtl
enter
push
xor
xchg
push
ret
push
mov
movsl
jnp
ja
sbb
xor
xor
mov
lock
loop
inc
das
mov
push
sub
xchg
cmp
rclb
cmpsl
jg
shrb
out
sub
data16
nop
clc
jno
cs
mov
push
ja
frstor
shrb
repz
jns
test
push
movsb
fiaddl
and
mov
nop
xchg
inc
pusha
dec
outsl
cs
clc
into
in
stc
mov
dec
inc
rclb
orl
repz
push
pop
decl
xchg
neg
jbe
into
add
sbb
or
xchg
scas
out
xchg
adc
push
repnz
mov
je
std
xchg
cmpsl
cmp
loope
cmp
mov
fmul
fdivs
out
inc
mov
sbb
stos
fdivp
push
mov
add
sti
adc
sbb
pop
cwtl
sbb
jmp
dec
arpl
jbe
xorl
ss
mov
sub
push
mov
in
popa
pop
push
shl
cwtl
add
out
loop
sub
xchg
xchg
push
scas
xchg
iret
push
imul
inc
je
and
push
pop
mov
repz
cmp
jb
repz
cmp
fs
dec
push
iret
aas
les
ret
xor
xchg
or
loope
push
in
mov
or
fs
in
pusha
sahf
or
in
aad
xchg
inc
dec
fstl
subl
iret
pop
sub
mov
outsb
xor
jbe
insl
push
addr16
ja
imul
sub
movsb
jg
lret
lods
orl
adc
stc
adcb
jmp
xor
stos
pop
xchg
repnz
in
std
dec
out
into
repnz
shl
pushf
add
rcrl
call
inc
mov
mov
fiaddl
jns
into
aad
lods
outsl
stc
or
scas
or
loope
mov
idiv
jl
loope
loopne
sub
fcomps
mov
dec
aas
add
xor
and
cmpb
das
pop
mov
cmp
mov
jbe
repnz
shr
int3
shll
jo
iret
addr16
push
js
mov
in
mov
cli
aas
push
dec
dec
xchg
cltd
ret
arpl
inc
loope
out
push
cs
and
mov
sahf
cmp
push
movsl
inc
mov
inc
nop
sbb
mov
sti
popa
les
repnz
insl
hlt
push
add
sub
pop
arpl
mov
aad
adc
cmp
push
or
leave
xchg
adc
pop
incl
mov
rcrl
cli
mov
fstl
jo
jb
pop
sbb
ljmp
neg
xchg
mov
xchg
mov
mov
pop
jbe
nop
std
mov
cmpsb
dec
and
push
cld
out
pop
and
push
mov
rorw
test
jg
loopne
rorl
mov
fwait
dec
pop
mul
push
push
mov
pop
mov
add
shrl
push
and
sbb
out
push
and
adc
push
cmp
inc
mov
sti
leave
mov
inc
add
mov
xchg
dec
mov
out
aaa
nop
aaa
in
pop
or
add
call
sbb
fnstsw
into
es
sbb
aaa
pop
popf
adc
push
out
pop
pop
jae,pn
jmp
mov
inc
cmp
cmc
scas
aaa
push
jno
pop
jns
mov
xchg
hlt
cmp
sti
sub
outsl
adc
test
mov
mov
lea
push
mov
stos
cli
cmp
mov
pusha
arpl
cmpsb
in
cld
cmp
xchg
mov
rclb
cwtl
imul
push
mov
rdtsc
mov
clc
mov
jg
fisubl
sbb
mov
xor
int3
rclb
lods
test
hlt
lock
cli
test
xor
xor
fimull
jecxz
loopne
imul
cmp
test
dec
sti
jmp
incl
out
das
test
jo
mov
addr16
ja
mov
sbb
pop
sbb
rorb
mov
outsb
xor
rorb
cmp
sbb
push
and
enter
mov
lea
add
lock
add
orb
jle
fcoms
sub
push
mov
push
push
push
jmp
xchg
ret
repz
insl
jnp
mov
in
adcb
xor
xor
sbb
orb
pop
out
scas
inc
imul
sbb
or
roll
adc
xor
fnsave
jmp
xchg
xchg
loope
pop
xor
xor
jbe
xchg
mov
daa
bound
in
mov
dec
loop
sub
cmpb
scas
mov
adc
jo
sub
and
jnp
out
dec
cmp
aaa
pop
adcb
loopne
nop
xor
sub
jae
push
mov
inc
jmp
cwtl
stc
or
movsl
xchg
mov
mov
inc
arpl
push
int
or
cwtl
add
dec
jb
inc
jp
out
jae
int3
fistl
in
mov
fidivs
cmpsl
mov
mov
mov
cld
push
loope
inc
sbb
lods
jns
jg
xchg
mov
pop
roll
test
outsb
xchg
xlat
adc
jge
adc
movsl
xor
inc
dec
inc
loopne
xor
xchg
fdivp
aas
addr16
repnz
or
mov
das
negl
sbb
das
push
leave
xor
push
push
out
mov
mov
lcall
aad
loop
clc
pusha
or
ja
cmp
jl
int
push
dec
repnz
pop
cli
sti
push
dec
gs
aas
xor
mov
sar
xor
loope
pop
ficoml
leave
lret
push
dec
neg
fisubs
mov
mov
xchg
mov
fimull
xor
mov
pushf
xlat
inc
pop
mov
sub
test
adc
out
inc
rclb
outsl
popf
sbb
fsubp
ss
cmpsb
popa
mov
and
xchg
push
cli
cli
daa
jns
mov
cwtl
cmp
mov
pusha
aas
inc
or
lea
std
cmp
ret
pushf
nop
movl
dec
dec
dec
mov
xchg
mov
mov
pop
lods
cmp
dec
jg
ja
dec
notb
jl
mov
stos
das
sub
inc
data16
adc
cli
mov
jo
add
sbb
or
mov
pop
inc
notb
cwtl
jle
icebp
pop
cmpsb
cmp
jl
jae
jns
stc
xchg
fs
mov
ficomps
sub
sbb
pop
add
mov
std
rcl
cs
xchg
sub
into
fisubrs
adc
inc
scas
inc
dec
leave
int3
jno
add
dec
push
xor
xchg
mov
pop
lea
fistpll
fnstcw
xchg
jmp
cmp
sbb
or
add
mov
adc
sub
or
fistps
or
test
xchg
bound
sbb
pause
mov
and
inc
mov
int3
jmp
xchg
pop
sub
xlat
cli
mulb
mov
scas
inc
cmp
xchg
mov
mov
int
xchg
sar
lahf
jb
popf
cmpsl
rorb
adc
lea
mov
cld
lock
inc
out
jbe
gs
sub
in
fmul
into
ds
lock
loope
dec
stc
movsb
or
jb
sbb
mov
xchg
into
fnsave
or
push
xchg
scas
xchg
popa
pushf
scas
inc
sub
loop
lret
cmpsl
aam
test
mov
pop
js
ret
enter
hlt
mov
pop
std
movsb
jae
stc
inc
push
daa
je
xchg
cmpsl
pop
fimuls
aaa
sub
pop
mov
decl
cmpsl
xchg
aaa
std
es
popa
les
xor
out
mov
f2xm1
add
xor
subb
inc
fs
test
and
pop
in
cmc
in
iret
and
sbb
add
push
xchg
adc
in
and
xor
push
int
lcall
clc
insl
mov
adc
ret
cmp
xchg
inc
dec
int3
fs
mov
and
stos
push
jg
subl
mov
fisubrs
fldt
cmp
aas
add
loope
movl
push
and
cld
stos
sbb
fwait
mov
jae
lahf
adc
mov
jge
add
jmp
std
xchg
loop
rorb
in
mov
dec
add
cmp
mov
sbb
scas
mov
push
fstpt
mov
outsl
cmp
xchg
push
xor
pop
dec
cmc
mov
jno
jno
adc
mov
xchg
add
inc
pop
sbb
lcall
inc
out
fdivl
fiadds
cmp
jge
and
aaa
add
dec
iret
jno
mov
pop
pop
lock
icebp
mov
mov
pop
aam
testb
dec
out
push
pushf
add
mov
add
es
fldenv
mov
pushf
xchg
int3
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
jmp
inc
cmp
cmp
pop
fistl
std
pop
scas
dec
mov
adc
clc
cmp
xchg
pop
pop
data16
sub
cmpb
or
inc
out
test
and
pop
std
and
ja
add
pushf
xchg
mov
out
int3
nop
repz
fwait
scas
mov
push
repnz
ret
scas
test
subl
lds
pop
mov
sti
lods
fwait
das
rorb
in
std
ds
enter
jl
repnz
or
ret
mov
add
clc
out
fdiv
scas
inc
mov
jb
or
cwtl
pop
arpl
xor
arpl
daa
cmp
out
cmp
ljmp
inc
orb
sbb
lea
xchg
aaa
addb
xor
cmp
stc
lock
mov
xor
aas
dec
xchg
