push
call
ret
ret
and
mov
xor
shlb
fwait
fs
add
jno
popf
into
sbbl
stc
xlat
stos
mov
xchg
add
dec
sbb
dec
inc
cmp
lods
jge
cli
mov
insl
lcall
call
and
sub
mov
or
sub
cmp
fstpt
in
cmp
data16
pop
push
xchg
insb
arpl
cmpsl
add
push
fwait
add
int
push
pop
dec
xor
out
aad
fildl
mov
inc
test
imulb
shlb
roll
pop
ret
inc
jb
shl
in
vpsllq
subl
pop
imul
mov
test
or
sub
dec
insl
push
loope
aam
jle
jp
flds
in
push
addr16
push
inc
adc
jecxz
push
or
add
popf
mov
shufps
scas
dec
outsl
mov
cmp
xor
popf
test
or
mov
and
in
jae
rcrl
test
jl
out
aad
mov
sub
and
mov
cld
push
sti
bound
mul
cmc
cmc
push
mov
xor
dec
sbb
je
inc
andb
out
insl
aam
and
fptan
dec
and
stos
out
nop
sub
mov
push
jge
mov
sbb
ret
cmp
scas
pop
mov
push
int
add
cmp
push
mov
test
inc
lods
and
adc
pop
daa
sbb
inc
sub
jmp
add
push
adc
or
daa
sarl
mov
inc
or
xchg
addr16
insl
cmp
ret
cmp
stos
inc
push
int
or
mov
scas
jae
xchg
insl
cmpsl
cmpsb
jecxz
pop
sub
inc
test
insl
out
popa
test
mov
out
inc
xchg
cltd
cmp
jle
sub
lea
lods
mov
xchg
inc
aaa
xchg
in
in
aas
and
jle
in
lret
push
lods
push
xchg
testb
daa
add
test
xlat
aam
sub
dec
jns
mov
mov
sbb
add
pop
fcmovnb
pop
push
xor
nop
xor
xor
fwait
inc
jmp
mov
and
sbb
adc
inc
dec
stc
aam
imul
dec
or
mov
ljmp
mov
popf
test
xchg
into
dec
and
repnz
ja
inc
stos
adc
push
add
add
dec
push
ja
mov
and
or
fidivrl
sarb
and
inc
xlat
dec
ss
scas
xor
decb
cmp
and
int3
dec
dec
fistpll
cmc
sbbb
push
enter
xchg
mov
aas
mov
lahf
shr
mov
lcall
pop
cmp
pop
out
mov
int3
mov
xor
enter
pop
inc
in
fcom
cld
push
mov
mov
dec
ficomps
lock
sbbb
icebp
xor
cmp
mov
or
mov
sbb
inc
outsb
mov
sbbb
out
inc
mov
adcb
lods
pop
addl
cmc
int
sub
aad
loopne
cmp
js
cmpb
pop
out
les
push
mov
fsts
lods
fstpt
mov
push
push
jecxz
cwtl
clc
mov
jbe
sub
xchg
cltd
sub
mov
iret
mov
ljmp
lea
mov
pop
dec
leave
movsl
or
adc
rolb
inc
es
or
in
adc
mov
xor
cmp
adc
fsubrl
ljmp
sub
out
rcrb
ror
lds
mov
insb
jnp
push
adc
cmp
dec
std
jae
push
sbb
lret
mov
mov
loop
mov
inc
pop
xorb
mov
out
mov
les
sbb
push
call
mov
repnz
movsl
mov
mov
add
xchg
xchg
scas
xor
enter
jae
out
sub
es
aam
cs
in
jb
mov
outsl
sub
es
lret
stc
ja
ljmp
xor
push
dec
mov
fcmovnbe
jp
xor
jge
xor
aad
aad
testb
repnz
push
sub
jnp
mov
xchg
dec
or
xlat
push
rcll
insl
sbb
sbb
mov
fcomps
inc
ror
cmp
das
xchg
sbb
jno
pop
insl
sub
popf
jne
push
jp
lock
and
clc
jb
mov
cs
sbb
sbb
fcmovnu
or
push
xbegin
fidivrs
loop
int3
cmc
push
mov
jecxz
pop
push
sub
icebp
das
xor
popf
inc
mov
add
int
out
xor
movsl
jge
cmp
movsl
mov
sbb
push
jne
lea
repz
jle
pop
out
scas
dec
pop
or
out
test
add
inc
add
jecxz
pop
lock
sbb
js
add
ja
and
xchg
lret
and
ds
mov
ficoml
test
dec
cmpl
jns
xchg
add
std
pushf
arpl
adc
in
sub
loope
add
push
xor
fisttpll
push
test
mov
test
cmpsl
xlat
mov
ljmp
imul
inc
xor
test
scas
fadds
xchg
sbb
les
mov
jb
lret
in
popa
fs
pop
xchg
arpl
xor
pusha
pop
fnsave
fincstp
mov
mov
iret
jne
dec
sub
call
sbbb
mov
xor
mov
repz
test
pop
imul
cmp
xor
gs
sub
jle
outsb
push
lds
ret
lods
mov
push
insb
and
or
jo
xlat
stos
lahf
pop
inc
sbb
lock
adc
or
aas
sub
push
or
popf
dec
aad
call
aam
and
sub
rorl
and
addr16
or
cs
ror
pushf
jno
xor
mov
cmp
inc
popa
mov
xlat
sub
fisubrs
or
shll
cmp
inc
mov
adc
inc
rcrl
xlat
inc
mov
mov
inc
dec
out
fimull
test
mov
es
jecxz
mov
popl
dec
icebp
add
jno
test
mov
dec
mov
jg
decl
sub
daa
adc
lret
sbb
and
pop
jp
jg
and
data16
call
rorl
push
push
adcb
cmp
fldenv
nop
dec
rolb
mov
rcrl
xchg
mov
push
aaa
stos
dec
in
dec
icebp
lret
inc
inc
and
adcl
stos
xchg
mov
imul
cs
call
jns
xchg
shrl
add
jle
or
aad
fs
mov
or
fisttpl
xorb
push
jp
int3
dec
movsb
sbb
xor
push
inc
adc
dec
add
fstp
lahf
mov
dec
mov
enter
cmp
test
mov
mov
ljmp
or
pop
lea
mov
jge
movsl
lock
fwait
or
mov
test
jmp
aas
addl
mov
xchg
lock
push
or
fs
lret
outsb
negb
push
push
xchg
add
shlb
imul
jge
icebp
ret
lds
push
iret
ficompl
xlat
out
cli
ficoml
scas
push
loopne
mov
les
sub
or
sub
js
jle
cwtl
dec
add
pop
and
xacquire
cs
inc
sbb
subl
js
sub
add
ljmp
je
pushf
mov
jnp
je
std
or
xchg
mov
sub
cmp
lret
xchg
sbbb
jbe
jle
push
push
and
push
adc
imul
push
mov
inc
push
add
aam
bound
test
and
sbb
ds
jle
insb
adc
adc
mov
pop
push
dec
hlt
pushf
hlt
movsl
push
mov
pop
outsb
rolb
sahf
mov
cwtl
sub
repnz
mov
inc
cmp
imul
inc
subl
loop
xchg
mov
mov
lcall
xor
subb
xor
pop
std
fxch
cli
push
mov
jb
stos
out
mov
xchg
jbe
mov
dec
stc
sbb
cmc
mov
mov
sbb
pushf
hlt
shlb
fwait
dec
je
subl
movsl
mov
xchg
call
stos
nop
lods
adc
rolb
jg
jae
ret
inc
mov
pop
cmpsl
sbb
addr16
inc
bound
xorb
inc
mov
add
jge
push
ljmp
inc
repnz
out
push
testl
loope
fdivrs
shrl
add
push
ret
cmp
xchg
dec
push
dec
pop
inc
outsb
pop
insl
and
dec
pop
or
sbb
sub
fidivl
testl
mov
sub
jns
pop
or
add
jno
or
movsb
lods
orb
into
mov
addr16
adc
pop
mov
inc
aam
in
inc
sbb
sbb
pop
fdivl
mov
std
popf
aaa
add
insb
iret
mov
std
and
push
pop
insl
sub
xchg
cs
stos
lahf
mov
fstp
sub
aaa
sbb
faddl
outsl
orb
xchg
mov
or
jle
jne
mov
lea
shrb
xlat
add
xchg
add
fbld
mov
mov
xor
xchg
or
in
sub
imul
cmp
adc
and
icebp
xchg
mov
pop
pop
and
sub
mov
mov
popa
or
hlt
cli
and
pop
fsubrp
ja
enter
jns
add
test
pop
mov
repnz
pusha
cmp
idiv
repnz
jg
repz
aad
inc
pop
cmp
aaa
mov
fistl
test
notl
lcall
leave
xlat
imul
lods
nop
mov
loopne
adc
mov
xchg
jmp
repnz
lock
nop
int
gs
idivb
test
out
testb
jno
sbb
add
sbb
adc
xchg
mov
rcl
sbb
dec
add
into
pop
xchg
push
sbb
insb
jnp
push
xor
mov
sar
push
dec
aas
mov
jp
pusha
add
int3
xchg
xor
std
mov
out
gs
and
jb
aaa
hlt
and
inc
iret
fdivr
jae
cs
mov
in
and
sub
pop
insl
dec
mov
roll
or
leave
orl
mov
rcr
push
xor
mov
sarb
mov
jg
addr16
daa
push
pop
cmpsb
pop
sbb
inc
mov
pushf
shll
adc
dec
mov
cli
push
pop
ficomps
add
mov
clc
test
push
hlt
lret
movsl
bound
scas
dec
std
push
addb
ljmp
dec
jmp
vpmacsswd
daa
push
sbb
outsl
stos
inc
mov
stc
cmpsb
scas
fsubrs
mov
insl
int
fprem1
cmp
dec
stos
sub
test
insl
hlt
or
imul
mov
cmpsb
and
test
dec
cmp
int3
gs
mov
leave
and
xor
icebp
jmp
imul
sub
inc
mov
mov
mov
bound
es
or
adc
addr16
xchg
sar
pop
rcrb
shlb
shl
jmp
pop
lock
fwait
adc
pop
inc
pop
mov
and
sahf
insb
lods
push
mov
cltd
fidivs
xchg
jne
cmp
out
inc
mov
repnz
or
cltd
int
sub
inc
jp
lods
pop
jb
mov
and
push
jmp
push
stos
pop
mov
leave
cmc
xor
fcomp
sbb
daa
sub
in
lret
push
punpckhbw
je
mov
popf
jbe
mov
in
push
cwtl
jns
imul
xor
lcall
scas
in
sahf
jmp
pop
mov
fs
fistl
push
mov
int
sbb
adc
stos
dec
cmpsb
stc
xchg
scas
fwait
nop
adc
loopne
jmp
mov
in
arpl
cld
scas
cli
push
mov
jmp
adc
mov
iret
call
jg
stos
lds
mov
fsubp
sti
cmc
cltd
gs
dec
mov
mov
in
jl
in
mov
mov
int3
cwtl
inc
ds
xlat
call
loope
lds
lods
es
lret
fwait
sahf
xor
xchg
xlat
cmp
push
cmp
andb
sbbl
and
adc
sar
sub
mov
or
jns
ljmp
sbb
mov
insb
in
push
push
mov
xchg
or
mov
imul
mov
insl
in
orl
andl
pusha
push
push
fmuls
lret
jp
nop
pop
mov
add
movsl
mov
in
and
push
das
add
repnz
and
push
loopne
test
pop
lea
imulb
add
dec
pushf
fs
cmp
scas
mov
movsl
fdivp
mov
nop
arpl
lods
cmp
xchg
clc
add
cwtl
mov
sbb
ss
mov
repnz
int3
fsubrs
mov
jmp
lret
mov
cs
pop
pop
mov
sbb
or
xchg
rcrl
xchg
xchg
cmpsb
scas
or
cmp
cli
sbb
iret
mov
insb
enter
pop
sub
push
repnz
sbb
mov
fnstcw
sbb
or
cmp
fwait
sbb
cmpsl
xlat
sbb
ret
stc
push
lcall
add
pop
pushf
xor
pushf
mov
clc
add
sbb
mov
cmp
ja
lahf
stos
add
dec
mov
cwtl
add
or
add
sbb
mov
roll
fbld
sahf
jmp
xchg
rorl
or
imul
shrb
fcmovne
int
sbb
pop
add
push
jno
ficompl
pushf
cmp
or
dec
pop
pusha
outsl
xor
add
testl
sub
jecxz
push
test
fidivl
subl
sub
stos
mov
daa
mov
lahf
jae
lea
icebp
mov
shlb
push
dec
das
push
fwait
mov
ret
and
inc
dec
adc
mov
cli
xchg
add
mov
xchg
and
subb
sub
fwait
cmp
jmp
adc
jne
insl
adc
cld
fistpl
es
cmova
cmpb
sub
dec
xor
sbb
frstor
and
add
pop
fs
cmp
push
pop
jno
aam
hlt
outsl
in
int3
cmp
mov
pusha
es
xor
cs
or
aad
jo
add
mov
iret
cmpsl
lahf
test
outsb
pusha
sub
mov
add
sbb
ja
scas
xor
stos
loopne
iret
mov
mov
xor
aam
repz
stos
inc
jae
inc
inc
sahf
int
xchg
gs
xchg
das
mov
sbb
sbb
sar
lods
inc
dec
loopne
cmc
and
push
iret
shrl
sahf
fildll
mov
das
mov
jl
mov
js
loope
pop
push
lahf
out
movsl
jg
xchg
outsl
test
or
add
sbb
mov
fcoms
repz
xchg
subl
jl
fcmovnb
shrb
stc
mov
rolb
jge
and
test
sbbb
jb
cmp
jg
mov
dec
aaa
cmpsl
sbb
ds
jae
cltd
pop
lods
dec
lret
imul
mull
scas
fcmovb
push
xchg
mov
dec
sbb
xchg
aas
call
into
cmp
mov
xorl
lret
inc
test
int3
loope
xchg
push
xor
inc
sbb
xchg
xchg
sub
sbb
sbbb
push
insl
push
pop
mov
leave
leave
push
mov
adc
dec
sub
mov
cmp
arpl
jns
xchg
sbb
sub
fwait
sti
decb
xor
sub
stc
fsubrl
pop
insl
mov
lcall
scas
inc
cmp
ja
pop
clc
and
sub
and
outsb
movsb
jae
jno
xchg
push
add
lret
mov
adc
or
and
xor
mov
add
shll
cmp
stc
push
lock
and
pop
out
arpl
stos
xor
pop
add
push
inc
test
jns
fdivs
fcompl
aas
xor
xchg
cmp
adc
mov
cmc
mov
inc
xchg
popf
push
pop
sub
adc
nop
imul
cmp
dec
inc
out
pop
in
adc
mov
mov
jo
iret
push
jp
mov
dec
jg
xrelease
mov
sbb
imul
lods
mov
mov
mov
xor
sahf
fldl
jo
pop
clc
mov
mov
rcrl
mov
fdivrs
std
in
lahf
lds
scas
lahf
adcl
xor
sbb
mov
mov
jne
inc
popa
mov
mov
xor
sbb
jg
cmpsb
ret
adc
jle
out
push
cmpsl
ret
sub
mov
dec
outsl
inc
sub
daa
inc
bound
outsb
fbld
aad
cmp
ss
xlat
mov
pushf
adc
jge
pushw
popf
int3
andl
or
dec
mov
jbe
pop
call
inc
repz
dec
xlat
notb
xchg
in
xchg
jo
movl
popa
mov
push
push
pop
mov
sbb
mov
cs
movsb
mov
cltd
mov
lret
pushf
dec
sub
sti
ror
cli
lcall
les
cmpsb
shlb
adc
cmp
les
pop
icebp
adc
or
fildll
cmp
das
stc
ret
dec
test
enter
test
cs
fcoml
stos
lret
xchg
fiadds
pop
adcl
shl
in
das
inc
mov
cltd
clc
aad
mov
sbbb
inc
testl
insl
jge
and
jle,pn
and
clc
and
sbb
push
jl
mov
fcmovu
push
push
stos
inc
in
cmp
jle
dec
xor
adc
rclb
or
scas
stos
adc
mov
xchg
pop
cltd
pop
push
jbe
gs
movsl
in
jae
mov
mov
mov
aad
das
pusha
test
imull
inc
fidivrl
add
xchg
cmp
dec
lock
ljmp
sbb
scas
dec
or
aaa
dec
loope
inc
outsl
mov
lahf
sbb
pop
mov
dec
lahf
jp
cmpsb
pop
and
stc
cmp
and
and
je
iret
push
sub
das
les
test
fwait
xor
testl
movsl
sbb
nop
push
stos
mov
sahf
sub
or
sub
pushf
mov
xchg
mov
mov
mov
aam
inc
cmpsl
stc
ret
cmp
jge
sub
stc
jecxz
clc
xor
xchg
ljmp
leave
mov
pop
test
jmp
mov
push
out
push
jp,pn
ficoml
push
cmp
lods
mov
sbb
xchg
das
shrb
flds
repz
rcrb
pop
in
jno
aas
dec
dec
mov
inc
pop
ss
int
hlt
loope
push
dec
pushf
idivb
mov
addl
testb
add
imul
jle
stc
out
das
or
or
les
jp
aas
pusha
imulb
jmp
inc
jl
mov
leave
ret
test
clc
push
pop
sub
and
push
dec
test
popa
adc
inc
aas
mov
in
push
lret
sbb
and
pop
subl
sar
push
aad
in
mov
dec
mov
scas
mov
add
in
rol
test
jno
aas
or
or
jle
or
mov
jbe
add
xor
push
aas
inc
mov
incl
jnp
ja
add
cs
repnz
jns
add
mov
or
xor
in
repz
dec
in
outsl
inc
test
lods
rol
xchg
arpl
adc
xchg
in
pushf
shrl
inc
int
je
cmp
pushl
inc
movsb
iret
adc
cmpsb
push
imul
adc
push
push
xor
jne
push
out
or
aam
dec
bound
mov
lea
popa
mov
sub
mov
jnp
inc
rolb
cmp
out
jecxz
cmpsl
fdivl
test
jle
aas
nop
shrb
mov
aaa
jnp
xchg
mov
push
ja
aaa
adc
fisttpll
and
jmpw
orl
outsl
dec
mov
pop
adc
bound
shrl
je
daa
popf
pop
outsb
pop
sbb
mov
push
divb
mov
ret
adc
test
add
and
loope
loopne
push
pop
bound
fimuls
arpl
xchg
orl
and
std
clc
pusha
mov
in
jmp
hlt
jmp
out
push
adc
sbbl
push
jmp
pop
jp
stc
push
in
push
ja
imul
xor
inc
mov
inc
imul
inc
lds
push
xchg
test
rcrl
cmp
cli
jns
push
mov
jge
bound
call
sub
sbb
out
int3
sub
rorl
pop
sahf
mov
cmp
rclb
adc
jo
mov
in
ror
add
ss
in
sub
stos
clc
in
jmp
lret
ss
xorl
dec
or
pop
jl
rcll
jo
push
mov
iret
cmc
daa
fidivrl
sbb
pushf
inc
adc
jne
mov
or
or
xchg
outsl
scas
push
inc
mov
push
adc
mov
or
xchg
or
mov
mov
jle
add
and
rorl
or
push
test
loopne
xor
push
outsl
add
push
je
cs
xchg
inc
mov
add
sub
aaa
ja
push
arpl
sarb
sub
or
add
add
stos
fsub
int3
aad
test
iret
aad
cli
and
pusha
test
imul
shlb
pop
or
in
je
jle
loope
jnp
cmp
sub
sbb
or
cmpb
les
out
gs
mov
popa
sbb
mov
mov
dec
and
imul
ja
out
lcall
adcl
ret
sbb
rolb
pushf
out
test
ret
fwait
popa
jbe
sub
cmp
push
rolb
or
push
push
fcoms
cmp
dec
push
pop
cwtl
mov
jmp
push
and
sub
jno
mov
add
cwtl
stos
dec
ljmp
adc
out
popa
popf
nop
jno
add
xor
pop
fistpl
adc
outsl
xor
add
sbb
push
xchg
xor
fcmovu
jp
cwtl
push
mov
lahf
xor
pop
sahf
insl
push
lods
aaa
pop
jo
mov
in
arpl
sub
fbstp
call
push
int3
xchg
mov
ror
push
popa
aaa
lea
mov
adc
sub
add
imulb
fs
xor
gs
jo
stos
jae
adc
push
dec
inc
add
sub
sahf
dec
cmp
adc
sahf
scas
decb
cmp
out
push
sub
mov
idivl
xor
sbb
pushaw
clc
jecxz
cmp
loopne
jo
insb
sbb
sub
sub
popf
jle,pt
lock
or
pop
xlat
mov
mov
mov
adc
movsl
clc
aam
mov
xorl
inc
sbb
lcall
lods
xor
mov
cmp
jo
push
enter
rcl
sub
stc
test
cmp
fsts
mov
retw
inc
inc
push
mov
add
lahf
loop
stos
jecxz
fcoml
lahf
shll
adc
insl
daa
arpl
mov
ss
xchg
adc
adc
lods
mov
outsb
data16
rcr
mov
inc
xchg
or
push
push
cmp
or
shlb
into
sub
mov
dec
sahf
or
add
inc
cltd
lea
out
mov
mov
ret
lods
mov
cltd
cmp
popf
sbb
enter
dec
mov
mov
add
ret
lods
or
popa
fisubl
mov
xchg
cmp
stc
fs
movsl
lcall
pop
popf
mov
cmp
cmpsl
mov
adc
sub
icebp
cmp
or
mov
inc
push
push
lods
push
mov
and
pop
dec
and
cmp
cwtl
nop
outsl
rcll
jle
adc
lcall
sarb
nop
scas
mov
mov
out
cmp
sbb
in
adc
sbb
mov
lret
inc
addb
lods
xchg
cld
mov
pop
adcl
shll
and
mov
lods
std
push
imul
lock
mov
inc
mov
mov
mov
leave
es
sub
jns
mov
dec
push
pop
jmp
lcall
ret
mov
jle
into
dec
shlb
push
stc
push
mov
out
push
mov
or
outsb
push
cmc
int
xchg
cli
and
lret
jmp
adc
popa
push
inc
jecxz
add
sub
ljmp
leave
push
shlb
test
andb
test
gs
jne
pop
arpl
push
cld
jg
fidivs
jecxz
cmp
push
pop
pop
es
int3
push
arpl
xchg
add
rcr
testb
jbe
iret
rorb
cmp
arpl
cmc
fxch
mov
mov
xchg
push
dec
shlb
xor
jl
out
aaa
repz
fidivl
sub
mov
call
aam
jo
ret
lcall
cli
jb
scas
movsb
mov
or
sbb
mov
jp
aam
dec
mov
and
cmp
fisttpl
mov
or
push
pop
push
pavgw
and
inc
jbe
faddl
cmp
ljmp
jp
jo
xchg
gs
mov
outsb
pop
fisubrl
mov
pushw
inc
pop
jmp
push
fisttpl
jne
in
mov
imul
and
or
arpl
ljmp
xchg
movsb
ret
ret
mov
fs
fs
mov
xor
fmuls
out
insb
mov
js
movsb
jle
lcall
mov
les
and
and
out
fwait
and
pop
mov
mov
lret
sbb
jecxz
inc
outsb
fwait
jmp
lret
arpl
fstpt
sbb
inc
jne
into
cmp
add
sbb
or
cmp
mov
clc
push
xchg
cs
cmp
filds
or
push
sub
out
push
or
fs
roll
xchg
insb
out
add
or
push
icebp
int
mov
stos
adc
gs
push
sub
and
in
mov
dec
bound
out
or
pop
inc
adc
mov
leave
push
inc
fwait
inc
aam
das
jne
icebp
insl
cwtl
aam
pop
xlat
mov
or
mov
shlb
sub
cld
xlat
dec
roll
lock
xlat
xor
sti
scas
idiv
sbb
dec
push
push
out
cmc
sbb
dec
out
add
jne
mov
fstpt
mov
add
xchg
sub
pop
jne
jne
mov
js
add
fwait
pop
icebp
mov
imul
push
jne
fs
lods
fwait
test
repz
ds
adc
add
push
mov
mov
mov
les
pop
mov
imul
ljmp
ret
out
fcmovnu
add
pop
addr16
jl
add
bound
shlb
pop
lcall
mov
out
push
sbb
in
dec
jmp
or
add
mov
mov
xchg
cmp
inc
sbb
pushf
cmp
mov
iret
push
push
data16
pop
push
push
push
dec
fidivl
lock
out
xor
dec
mov
jp
repz
xchg
cmp
icebp
jmp
cmp
jp
jnp
dec
jmp
add
es
mov
cmpsb
rorl
std
pop
dec
aam
xchg
sbb
cld
hlt
scas
push
mul
rcl
mul
mov
xchg
out
outsl
lock
test
add
stc
mov
sbb
test
mov
jbe
js
call
push
dec
pop
adc
cmp
inc
jb
out
cmpsl
pop
mov
dec
mov
cmp
out
dec
jge
inc
popa
xor
insb
mov
mov
sbb
pop
xchg
int3
or
gs
mov
sbb
test
sbb
shl
add
cmpsl
mov
fs
inc
aaa
pop
lea
cmp
sbb
and
repnz
lret
push
xchg
sub
fld
jg
jns
mov
loope
or
push
loope
jecxz
pop
imul
test
dec
inc
mov
and
mov
lods
cli
jmp
cwtl
dec
bound
movzwl
mov
cmpsl
jns
sahf
std
jbe
mov
jge
testb
das
xchg
sbb
cs
filds
mov
xor
out
mov
cmp
inc
mov
clc
cmpsl
imul
shlb
addr16
aad
into
dec
ffree
pushf
icebp
mov
or
mov
ds
insb
push
scas
sub
call
fs
inc
fisubrs
lods
jmp
loope
pop
sbb
pop
sbb
cs
push
mov
sub
xchg
push
mov
cs
fs
xchg
loope
sbb
cmp
shl
mov
lahf
dec
xor
adc
imull
pop
mov
shlb
fnstcw
add
pop
pop
adcl
out
subl
mov
cmp
test
or
and
stc
sahf
iret
push
xchg
inc
addr16
and
arpl
xchg
adc
jo
pop
scas
je
or
jp
and
stos
jg
mov
cmc
xlat
cmp
and
mov
das
mov
sbb
inc
sbbl
pushl
sbb
popa
cwtl
jmp
lret
fsubrp
push
sub
in
adc
inc
cli
pushf
xchg
pop
mov
in
mov
ss
fisubrs
xorb
cmc
jge
mov
stos
mov
in
mov
shrb
loopne
dec
cltd
pop
insl
daa
outsl
in
pop
sbb
pop
aam
cmpsl
cmpsb
adc
in
fwait
push
push
movsb
add
pop
aaa
test
notb
ret
jae
sbbb
jo
inc
adc
add
imul
sub
pop
dec
lahf
jno
jg
popa
lds
subb
mov
sbb
add
xchg
xorl
xchg
push
jmp
xlat
mov
xchg
dec
out
fwait
leave
hlt
mov
xchg
dec
in
dec
mov
in
movsb
pop
inc
and
movsb
xlat
pop
xlat
mov
adc
pop
jecxz
daa
fchs
call
mov
int
icebp
popa
stos
dec
idivb
cmp
jne
leave
gs
imul
sub
jb
and
xchg
loopne
mov
repz
mov
inc
ret
sub
lods
int3
push
loopne
loop
inc
andb
mulb
sahf
ds
and
inc
cmp
mov
test
adc
stc
test
sub
stos
out
cli
popf
ret
lret
mov
xchg
mov
mov
jmp
pop
xor
mov
lock
push
inc
lods
sub
cmp
sbbb
cmc
lods
mov
and
cmc
ljmp
cmc
pop
fwait
adc
rcrl
or
adc
call
ss
out
fdivr
imull
sar
mov
and
sbb
cmc
mov
pop
stos
pushf
daa
sub
cmp
ret
loope
movsl
loopne
clc
cmpsb
fldl
inc
push
les
mov
aaa
sub
mov
subl
leave
shll
and
inc
out
mov
lret
in
nop
inc
lret
lcall
shlb
ret
push
imul
adc
cmpsb
push
push
fidivl
fmulp
xor
push
mov
xchg
int3
xchg
popf
pop
inc
ficomps
xchg
xchg
clc
inc
jo
loopne
push
cmp
lea
pop
call
inc
pop
cs
inc
je
pop
call
adc
out
push
sub
ret
add
lock
scas
mov
pop
lret
test
fisubl
jmp
adcb
pusha
imul
sub
leave
push
and
cmp
idivl
scas
dec
sbb
pushf
push
or
pop
xor
cwtl
xchg
subw
push
int3
mov
imul
ljmp
test
lcall
dec
popf
sbb
dec
sbb
js
and
push
sar
fcmovnu
jae
jns
cwtl
sbbb
rolb
xor
inc
rcrl
cmpsb
inc
lcall
inc
dec
repnz
mov
pop
shll
ret
push
stos
pop
xor
cltd
inc
pusha
xchg
push
insb
sub
int3
mov
js
inc
cmp
inc
mov
or
cmp
jl
int3
push
scas
sarb
mov
push
mov
or
push
fs
mov
aaa
aas
das
test
divl
xor
add
arpl
xchg
pop
notl
xchg
sub
test
repnz
dec
test
shrl
pop
xchg
stc
pop
sub
jnp
jo
int3
imul
mov
xchg
aam
xor
std
fdivl
insb
bound
push
stos
add
push
mov
movsb
jge
mov
fcoms
pushf
daa
movsb
aad
mov
movsb
jns
jb
cwtl
and
icebp
mov
outsb
std
push
gs
fdivs
xor
and
into
ja
stc
and
test
icebp
adc
clc
int3
fisubl
inc
mov
icebp
in
jae
enter
mov
ljmp
pop
out
ret
jl
dec
decb
xor
fsub
pop
mov
cmpsl
stos
mov
pusha
arpl
dec
add
filds
cli
std
pushf
adc
cltd
bound
and
out
inc
sub
adc
and
aad
pop
roll
stos
gs
mov
outsb
jp
or
jle
outsl
daa
add
jne
shll
jae
imul
aad
imulb
sub
fisubrs
pusha
incl
mov
add
cmp
dec
jmp
cltd
mov
and
or
ljmp
stos
xchg
jl
inc
dec
cmp
std
cmp
push
in
jns
mov
loope
test
sbb
pushf
xor
dec
sbb
cmp
add
inc
sub
and
das
sar
stos
xchg
push
pop
push
js
mov
xchg
add
mov
or
and
xor
lcall
mov
repz
sub
lods
popa
push
and
int3
orb
or
push
cmp
clc
jbe
outsb
lcall
gs
movsl
inc
jbe
sbbl
lahf
xchg
cli
or
push
jns
inc
add
es
lds
xor
sub
sbb
mov
jno
iret
fidivrl
pusha
incl
or
cmp
into
sub
aad
jge
dec
dec
inc
jl
test
jecxz
popl
push
xor
inc
mov
push
test
dec
and
xor
je
cmpsl
dec
stc
add
lcall
and
xor
xchg
adc
popf
xchg
mov
pop
add
pop
pop
int3
ds
gs
in
or
push
inc
popa
or
cmpsl
jo
std
and
dec
mov
rep
test
lsl
les
scas
sar
xor
pop
ficompl
leave
aad
mov
hlt
xchg
cltd
sub
stos
popf
bound
mov
aas
inc
fnstenv
pop
out
jns
add
ds
push
insb
cwtl
lock
cld
rorb
adc
mov
push
and
aas
inc
pop
mov
sbb
or
sbb
lret
cmp
mov
pop
shll
mov
pop
or
sub
sahf
mov
sarl
mov
adc
mov
pop
adc
outsb
dec
xchg
div
inc
and
sbb
movsb
mov
jmp
and
ss
cld
and
or
scas
pop
and
push
fmull
scas
cmp
fsubrp
les
hlt
pop
xor
enter
fidivrs
int
pop
jbe
mov
int
ljmp
pop
sbb
movsl
fsts
rorl
jae
mov
inc
sbb
cli
and
repz
mov
xor
fcoml
fadd
cwtl
mov
ljmp
xor
invd
pop
insl
leave
xchg
pop
je
mov
ret
mov
fdivs
mov
stos
xchg
ja
cmp
mov
subl
outsb
fldt
and
add
jno,pn
mov
dec
mov
mov
jecxz
mov
xchg
pop
popa
adc
xchg
ret
push
mov
push
and
adc
push
cld
stos
mov
dec
and
add
arpl
or
inc
dec
adc
add
and
jge
and
and
rcl
push
int
sbb
push
jp
or
dec
inc
aaa
dec
inc
je
mov
xor
movsb
adc
fistpll
pop
xchg
flds
int3
testl
gs
mov
icebp
lock
cld
ds
xor
into
pushf
aas
call
mov
testb
cmp
out
add
add
cmp
enter
sbb
cli
jo
lods
mov
sub
bound
gs
or
add
int3
push
out
addr16
or
sbb
loop
sti
ffree
sbbb
cmc
shlb
fsubr
xchg
xor
xor
jb
mov
inc
inc
loop
mov
orl
jne
inc
ljmp
and
js
clc
in
imul
push
jno
pop
loope
mov
out
test
arpl
icebp
mov
jp
stos
mov
inc
in
jmp
out
jbe
test
mov
mov
xor
push
xchg
dec
pop
ss
icebp
out
mov
movl
xlat
fistpl
mov
in
dec
push
cmp
das
inc
xchg
jle
pop
or
pop
sarl
inc
sahf
arpl
and
mov
jmp
mov
and
sbb
clc
fisubrs
mov
mov
mov
sub
mov
sti
xchg
push
mov
sbb
push
adc
sbb
repnz
mov
jl
xchg
aad
lds
mov
test
dec
fwait
push
scas
add
mov
int3
xchg
cld
inc
lea
pop
lds
jecxz
fisubrl
fstpt
cmp
push
xor
add
in
push
mov
sbb
lods
popl
mov
in
mov
insb
cwtl
dec
popf
insb
pushf
jp
aam
lods
add
jg
add
mov
inc
jmp
or
jecxz
sub
jno
xorl
xchg
mov
inc
xchg
lods
movsb
rclb
jecxz
pop
sub
xchg
jb
ret
or
lods
inc
mov
mov
xchg
mov
sbb
sbb
xchg
dec
cld
mov
xlat
std
dec
cli
jb
jne
adc
scas
cmpsl
cmpsb
xchg
mov
incb
pusha
jno
js
pop
pop
jp
enter
pop
sbbl
xchg
pop
push
mov
enter
pop
fstps
push
jge
shrb
imull
bound
and
hlt
add
jecxz
ds
mov
loopne
sbb
xor
adc
push
imul
xchg
cld
cltd
adc
mov
push
and
aad
xor
fists
mov
push
push
dec
xchg
cs
mov
les
pop
xchg
repnz
out
aam
xchg
jg
arpl
xchg
xchg
mov
pop
sbb
movsb
dec
inc
xchg
out
idivl
ficomps
movsb
outsl
inc
pop
pop
call
inc
inc
gs
mov
shr
stos
jne
and
sub
adcb
loopne
ss
movsl
test
scas
lds
add
into
mov
pop
sub
jp
rorb
and
fldcw
sahf
pop
fiadds
and
dec
sbb
outsl
lcall
xchg
daa
push
dec
in
pop
bnd
adc
sbb
out
repnz
in
dec
movsl
loopne
mov
sub
xor
ss
bound
xor
mov
add
mov
popa
jae
movsb
push
test
adc
movsb
dec
sbb
xchg
cmp
dec
xchg
push
sub
int3
and
pop
fldcw
and
xchg
cmpsb
cli
jb
movsl
fdivrs
out
cmpl
ss
sub
loop
sarb
and
xor
mov
ja
pop
ret
adc
inc
inc
or
sub
pop
pop
repnz
cmpsb
mov
out
sbb
and
popf
ds
push
stos
shll
lods
inc
adc
dec
pop
xlat
shrb
or
insb
push
jbe
ret
mov
add
pop
mov
xchg
shr
cltd
sub
mov
or
dec
test
push
cmp
dec
cli
and
pop
iret
lret
movsl
pop
loop
push
pop
mov
and
call
gs
int3
jae
mov
iret
addr16
lret
and
je
push
scas
test
out
jge
dec
fdivrl
xchg
cmc
cmpsb
mov
lret
stc
das
inc
dec
dec
flds
inc
movsb
jb
push
add
mov
rcll
ljmp
xchg
jae
rcrb
and
mov
jbe
aaa
shll
push
adc
cwtl
mov
pusha
mov
xor
push
inc
cmp
mov
xor
dec
fisttpll
or
adc
incb
loopne
adc
aas
pop
dec
add
pop
repz
fcomp
lock
cmpsl
repz
loop
lcall
leave
int3
sbb
sub
ja
adc
adc
pop
std
push
xchg
xchg
bound
sbb
call
mov
push
sbb
inc
cmp
fldcw
sbb
jb
aam
sbb
in
mov
daa
cmc
cmp
pop
and
clc
cmp
jp
adc
adc
sahf
clc
aaa
lock
cli
inc
test
in
in
jl
mov
jbe
popf
push
push
and
mov
cmp
pop
mov
pop
out
pop
sbb
xchg
insl
cmp
pop
mov
orl
pop
inc
pop
adc
dec
xor
jmp
sbb
inc
mov
faddl
dec
outsb
push
test
mov
paddq
into
pop
or
nop
add
scas
push
mov
mov
push
repz
cmp
inc
jge
cmp
push
push
arpl
out
aaa
xchg
push
mov
cli
xor
dec
fstpl
and
fdivrs
pusha
call
lcall
mov
cmpsb
push
mov
mov
inc
and
ss
icebp
repz
hlt
popa
push
add
stc
leave
jmp
and
ss
adc
mov
insb
mov
adc
and
sbb
nop
jp
data16
xchg
mov
daa
adc
test
lret
lcall
fnstcw
push
pop
outsb
movsl
mov
shl
and
inc
mov
mov
xchg
mov
fists
dec
add
xor
pop
ljmp
test
mov
imul
ja
jb
fidivrl
dec
hlt
aam
mov
adc
mov
push
xor
dec
push
push
int3
sbb
jg
or
xchg
inc
sarb
stc
mov
outsb
mov
adc
push
sbb
jle
mov
or
daa
sub
fs
js
cmp
xchg
xchg
xlat
xor
inc
insl
lods
mov
in
sbb
cmp
and
jo
imul
lret
ret
test
cmp
jecxz
jno
daa
pop
jo
test
ss
repz
ret
jno
aas
inc
shll
push
out
adcl
rcrl
popa
jge
aaa
adc
cmpl
jns
cmp
dec
and
pop
inc
xchg
pop
jnp
fisubl
add
daa
and
lods
xchg
loope
movsb
shrb
stc
cmp
cmp
ja
cmpsl
and
jge
insb
ret
push
sbb
pop
mov
jmp
sbb
dec
add
shll
hlt
or
inc
loopne
adc
cwtl
jae
out
divl
dec
add
mov
or
sbb
fdivs
js
push
cs
mov
xor
cltd
stos
mov
inc
sub
sarl
push
sbb
dec
pop
xchg
jge
pop
jb
dec
mov
mov
xor
scas
xor
adc
lahf
add
pop
mov
shr
in
arpl
insl
ror
lret
scas
mov
fwait
cmp
mov
push
mov
cmpsl
lock
shl
test
test
mov
push
sarl
ret
test
mov
cmp
cmp
jl
sbbb
add
xchg
pop
movsl
xlat
xchg
push
xchg
rcrb
push
push
inc
xchg
add
rcrb
ret
jge
xchg
or
jle
mov
xchg
jae
push
incl
das
dec
popa
sbb
dec
and
push
mov
cmp
dec
dec
or
test
icebp
inc
rcll
rorb
push
jl
scas
hlt
daa
jo
aad
xor
lret
movsl
adcb
adc
push
pop
mov
dec
dec
sbb
mov
mov
fnstsw
fidivrl
pop
nop
sub
cmp
cmpsb
push
into
test
inc
insb
out
jl
xchg
push
in
and
pop
mov
in
idivb
mov
lcall
pop
sub
push
sarb
test
lods
xor
pop
adc
inc
iret
or
or
or
test
into
stc
imul
out
mov
inc
mov
adc
jg
jo
mov
sbb
scas
jl
dec
cli
cmp
out
xor
dec
mov
xchg
lea
mov
jecxz
insl
push
addl
jns
je
pop
xchg
and
cmp
jp
pop
hlt
xchg
je
xchg
jnp
push
xor
shlb
dec
adc
mov
jb
mov
aas
orb
sub
and
xor
lret
xor
sbb
out
das
mov
insl
or
rorb
in
flds
mov
jge
aas
jnp
mov
fwait
lcall
fidivrl
js
shrb
push
cmp
bound
sti
adc
scas
js
call
mov
jle
call
pop
inc
mov
imul
jg
repz
sti
mov
in
ljmp
inc
pop
pop
repnz
mov
jp
sub
cmp
xchg
sub
popf
addl
and
xchg
mov
ljmp
fldcw
std
out
mov
push
dec
dec
in
in
test
pop
pop
jg
test
mov
xor
jle
jo
cmp
dec
jg
push
mov
scas
insl
jecxz
mov
pusha
push
movsb
sub
in
mov
gs
push
xchg
dec
adc
fs
ret
sbb
fdivrl
xor
mov
push
lock
jne
shrb
mov
inc
push
dec
mov
rorl
jne
jle
sub
push
push
repz
sbb
leave
and
mov
loop
mov
call
jp
sbb
vpaddsb
imull
cli
cltd
xor
in
test
ja
sub
rclb
imul
fmull
jl
movsb
ss
mov
fcmovu
pop
or
jbe
imul
sbb
inc
or
jge
sbb
and
jle
and
test
dec
scas
cltd
or
imul
cld
sub
std
loope
xor
std
mov
std
jmp
pop
jae
das
xlat
xor
je
add
ficoms
arpl
mov
jl
push
jge
jp
or
pop
daa
insb
sbb
or
pop
pop
mov
push
imul
ret
mov
mov
jno
xchg
out
mov
sub
cwtl
xchg
loope
mov
clc
in
sub
seta
sub
or
fisttpll
push
iret
lock
test
xor
lea
sub
push
mov
push
or
cltd
lret
cwtl
jae
in
js
mov
data16
stc
das
mov
out
sub
mov
dec
dec
dec
dec
lock
mov
js
icebp
es
push
popf
mov
cltd
mull
outsl
out
jp
push
lcall
cmp
scas
fwait
pushf
sbb
mov
jp
mulb
xchg
pop
loop
call
jns,pt
lods
pop
cs
xor
aad
fmulp
xor
les
sub
call
iret
out
cmpsl
mov
mov
data16
das
push
gs
cltd
sub
lock
jne
dec
sbb
fs
fidivl
aas
jecxz
pop
setae
mov
in
js
lods
mov
mov
sub
push
cmp
xchg
jns
leave
inc
dec
lret
xchg
mov
in
xchg
into
lret
dec
xor
pop
adc
inc
jmp
test
inc
mov
cmp
decl
mov
mov
lds
inc
push
jg
sbb
lock
lock
add
andb
ret
inc
shrl
cwtl
repnz
ret
cltd
xchg
fsubrs
jmp
adc
daa
enter
mov
xchg
push
insl
cwtl
lds
mov
fcompl
test
stos
scas
jae
movsb
imul
icebp
and
push
aad
je
inc
mov
mov
aas
adcl
nop
dec
xor
inc
mov
test
addl
cwtl
mov
inc
jmp
test
mov
hlt
mov
mov
pusha
adc
enter
scas
test
mov
sahf
cmp
sbb
rorl
enter
inc
pop
cltd
mov
into
lock
test
dec
lods
xor
sub
xlat
inc
filds
jmp
sub
adc
scas
dec
data16
cmp
arpl
popa
mov
dec
outsl
ja
cmp
push
shll
cli
loope
repnz
bound
adc
mov
sbb
cwtl
popa
mov
xchg
push
jp
sub
or
bound
pop
mov
xor
mov
jbe
add
xor
or
clc
mov
and
xor
push
leave
xor
icebp
inc
xchg
out
dec
and
push
xor
int3
add
pusha
cld
push
mov
mov
or
mov
sbb
or
sub
movsb
pop
mov
inc
jmp
jmp
insl
adc
shl
cld
call
test
in
iret
popf
xor
push
sbb
dec
mov
lret
push
jp
cmc
rcrb
test
std
mov
push
lods
add
insb
imul
iret
call
lock
xor
inc
dec
mov
cmp
shlb
mov
cmp
nop
dec
int3
sub
lret
and
jo
scas
stc
xchg
jmp
dec
mov
out
sub
and
mov
adc
mov
push
packuswb
inc
cmp
faddl
lea
cmp
icebp
lret
xor
adc
lret
test
pop
pop
adc
fstps
inc
lret
insb
xor
add
mul
lahf
fwait
shlb
cwtl
xor
mov
mov
jle
xchg
mov
or
jle
cmp
push
inc
repz
ljmp
loopne
loopne
sub
xchg
sbb
stos
adc
mov
and
and
idivb
or
insb
into
cmp
xchg
push
mov
daa
jle
fcomps
jns
jecxz
inc
divl
mov
clc
add
fwait
mov
mov
xor
add
pop
in
jmp
sub
sub
sbb
pop
or
push
lock
or
in
incb
jmp
cwtl
ror
or
push
push
cmpl
mov
nop
movsb
pop
dec
pop
lcall
lds
mov
mov
in
sub
mov
push
sti
add
xchg
fiaddl
scas
ss
jbe
outsl
xor
sub
scas
cmpsl
push
aad
jge
pop
sbb
mov
sub
cltd
adc
lcall
out
inc
ret
out
stos
sti
inc
sub
andb
rcrl
insl
add
dec
clc
stos
dec
jbe
in
cmpsb
mov
out
jno
jp
rorb
pop
xor
adc
lods
mov
jmp
and
cli
xchg
mov
or
scas
or
inc
mov
test
mul
xchg
call
dec
int
int3
xchg
xlat
mov
mov
mov
and
mov
push
aas
cmp
fdivs
ret
fimull
and
mov
mov
sbb
cli
cmp
lcall
xor
movsb
orb
mov
mov
inc
add
fwait
mov
jl
xor
or
cmp
pop
or
push
mov
pop
decb
mov
mov
and
jb
gs
adc
mov
and
sub
mov
fld1
lods
mov
sbb
jnp
lahf
hlt
xor
pop
scas
ljmp
in
and
pop
pop
xchg
iret
divl
clc
fmull
xchg
adc
inc
dec
in
cmpsl
dec
movsl
and
sub
stos
stos
mov
aaa
lock
nop
adcl
out
jno
subl
and
mov
sub
mov
and
adc
jg
mov
mov
loopne
dec
cmpsl
or
lret
imul
or
stos
cmp
push
push
in
dec
dec
mov
dec
std
sbb
stc
movsl
xchg
clc
pop
lcall
in
jne
and
test
push
clc
fiaddl
sub
dec
aam
mov
add
daa
test
lret
addl
mov
shufps
pop
adc
and
dec
aad
roll
arpl
leave
lock
jecxz
frndint
adc
outsb
daa
insl
dec
push
dec
sbbl
subl
je
xlat
dec
sar
mov
jp
stc
ljmp
push
mov
pop
inc
adc
sbb
or
xchg
jno
ljmp
movb
pop
fimull
pop
mov
and
sbb
add
fs
add
xchg
add
rorl
mov
jne
insb
insb
mov
popa
push
insl
shl
iret
jmp
xor
add
mov
or
push
icebp
clc
jg
xor
aam
repz
in
xchg
ljmp
pop
pop
xchg
inc
ss
xchg
fstl
pop
jmp
out
test
dec
insl
pop
loopne
iret
ds
shrl
es
sbb
mov
lahf
adc
and
adc
jns
dec
data16
inc
push
mov
rcrb
out
jle
mov
ja
mov
jl
in
js
lret
push
cmp
push
xchg
and
jo
mov
in
fimull
insb
loopne
add
dec
movsb
push
push
inc
cs
je
xorl
andb
hlt
dec
in
ficoml
push
sub
scas
jg
movsb
pusha
adc
arpl
xchg
notb
fisubs
push
mov
pop
mov
cmpsl
xchg
scas
sarl
dec
lods
subps
addr16
sub
add
push
rclb
inc
add
imul
cld
push
mov
jl
push
dec
out
mov
js
add
mov
cmp
jnp
les
adc
movsb
cmpl
jg
popf
adc
data16
mov
push
add
out
pop
pop
je
pop
jne
pop
mov
cwtl
or
push
setne
lea
mov
adc
and
jle
out
mov
negb
insl
fisubrl
push
mov
fidivrl
jnp
adc
into
add
cmp
lret
movsb
popa
sub
cmpsl
jmp
ss
inc
movsl
movsl
fstpl
stos
cmp
icebp
clc
ds
inc
ret
in
daa
xchg
jle
and
data16
test
or
int3
jl
and
ljmp
mov
pop
dec
dec
fsubl
filds
pop
mov
jo
lahf
aas
gs
sbb
lahf
leave
mov
pushw
cli
fldt
ss
lock
mov
jo
fbstp
popf
xor
loop
faddl
cmp
sbb
aad
inc
imul
cld
cmp
jg
lcall
pusha
push
fistpl
pop
xchg
xchg
std
es
push
test
test
jp
outsl
jae
mov
mov
data16
jb
ret
mov
mov
out
and
cwtl
bound
mov
jecxz
jmp
mov
add
dec
xor
push
fiadds
xor
and
mov
dec
pop
jg
jnp
test
mov
pop
rcrl
imul
add
loop
adcl
lea
dec
mov
ss
in
flds
mov
negl
xchg
int
imul
cmp
jge
adc
add
or
mov
inc
push
xchg
gs
mov
sub
sbb
xor
stos
and
in
mov
gs
aam
mov
add
movsl
cmpsl
mov
mov
outsl
sub
jge
xor
xchg
xor
lahf
jnp
sahf
mov
aaa
popa
insb
inc
popa
xchg
inc
out
int
in
test
filds
cmc
in
sbb
sarb
loope
pop
lea
sub
and
cli
mov
sub
pop
test
leave
mulb
jecxz
mov
aas
push
mov
and
jge,pn
pop
stc
je
mov
dec
fcomp
or
lds
and
mov
ja
sbb
adc
lds
cmpsb
inc
mov
insl
xchg
xchg
cmc
lea
jbe
adcb
push
or
and
cmp
scas
cs
xor
cli
es
pop
lock
ret
mov
mov
lcall
sbb
push
ds
lea
and
les
hlt
jecxz
dec
pushf
js
iret
stc
fstl
ret
fistl
cwtl
insl
out
int3
or
cmp
push
je
mov
adc
jnp
insb
xor
lcall
push
pusha
mov
ret
ja
sti
xchg
cmp
push
xchg
cmp
cs
popf
xchg
and
mov
icebp
cmp
jbe
shr
popa
jle
mov
cmp
cmc
pop
inc
xor
sbb
or
xchg
in
or
in
xor
jb
sbb
jmp
xor
or
loopne
adc
icebp
mov
das
sti
cli
ss
xchg
pop
dec
ja
out
lods
ret
cmpsl
xor
dec
xor
sub
lret
or
mov
shll
jno
pop
inc
sbb
gs
mov
push
test
ret
insb
imul
fmull
ds
xchg
dec
or
addb
repz
jno
push
push
mov
xacquire
and
inc
add
mov
aaa
jge
scas
jl
aad
jbe
dec
mov
mov
das
hlt
dec
cmp
and
sbb
rol
std
xchg
jnp
jae
nop
or
add
pop
imul
sti
push
mov
mov
insl
sti
inc
in
repnz
mov
jae
push
in
rcrb
popf
xchg
cmp
in
les
ret
rcll
lret
push
fcom
sub
loopne
aaa
mov
mov
mov
xor
icebp
mov
mov
push
pop
ret
mov
insl
xor
mov
dec
dec
xchg
inc
xchg
pop
lock
test
pushf
movsl
xor
cmp
xchg
hlt
pushf
mov
push
mov
xchg
dec
jle
and
pop
jle
xchg
inc
sti
xchg
mov
aam
cwtl
mov
int
and
rcll
xchg
push
lret
in
or
sub
mov
jge
sbb
jg
xor
jno
cli
xchg
mov
push
sbb
mov
xchg
dec
movsb
xchg
es
sahf
hlt
dec
jl
int3
mov
gs
test
pop
mov
dec
pop
xor
scas
xchg
dec
cmp
sub
hlt
push
xchg
mov
push
lds
sbb
pop
mov
pop
jge
add
mov
stos
push
out
jge
or
nop
mov
rclb
sti
fnstenv
push
andl
repnz
sub
pop
mul
cmp
mov
rcr
ret
pop
ja
pusha
loop
mov
jge
and
sub
inc
popl
aam
sahf
jl
jne
in
lahf
or
movb
sbb
fmul
addl
xor
mov
sbb
fwait
pop
repz
mov
into
add
sbb
pop
insb
mov
cmc
and
sub
cmp
mov
cmp
add
jmp
in
mov
clc
in
mov
sub
inc
out
fmul
push
flds
je
in
jns
dec
inc
addr16
xor
push
pop
cltd
lock
cmp
test
out
cld
mov
mov
add
cmp
or
mov
lcall
lret
push
out
rolb
pop
and
cld
test
fidivs
inc
arpl
into
imul
ljmp
sbb
cwtl
xchg
lea
into
pusha
repz
scas
adc
jmp
push
dec
aas
sub
out
mov
nop
test
ds
cmp
lods
sbb
mov
out
dec
fwait
aad
sub
int3
imul
jmp
or
adc
pop
decb
imul
push
xchg
ljmp
bound
jb
pop
ljmp
test
cld
rolb
fiaddl
dec
cltd
adc
out
lret
inc
sahf
sub
sar
ficomps
mov
rol
fistps
cmc
ret
mov
sbb
jl
addl
out
or
push
push
jp
jl
xchg
cmp
int
int3
leave
sub
dec
or
cmpsb
add
ficomps
xchg
jno
and
das
cld
fstl
loopne
pop
inc
out
sbb
mov
push
pop
ja
mov
sbb
cmp
dec
mov
push
mov
mov
cmpsb
pop
dec
push
shl
mov
or
in
mov
sti
mov
mov
add
fnsave
cmp
leave
hlt
inc
les
mov
xlat
xchg
pop
cmc
push
stc
inc
jge
push
sahf
dec
mov
icebp
push
shlb
nop
insb
lods
popl
push
sub
xchg
sbb
lods
mov
push
les
outsl
dec
stos
push
adc
mov
dec
mov
in
mov
jmp
or
test
or
jmp
mov
mov
mov
test
xchg
adc
jecxz
repz
or
xor
ret
popfw
xchg
incl
mov
xor
cmp
xor
pop
push
xor
cmpsb
sbb
rcrb
xchg
pop
int3
and
stos
daa
xor
and
dec
hlt
lcall
and
and
mov
jne
push
jae
lds
jge
fimull
aaa
out
cmc
scas
sub
and
loope
mov
scas
std
fcoms
cmp
dec
ret
xor
call
imul
mov
push
cmp
in
push
fidivl
popf
adc
mov
cmp
pushl
cld
pop
and
iret
add
mov
std
jbe
pop
loopne
ret
lods
mov
add
or
pop
data16
pusha
add
jl
roll
inc
mov
lods
rorb
cwtl
xor
push
repz
fstp
lret
mov
jp
fmull
aam
arpl
xor
jecxz
xor
jmp
scas
pop
insl
aad
imul
adc
xchg
insl
sub
sbb
dec
loope
xor
mov
pop
inc
out
inc
push
jb
pop
pop
cwtl
sbb
cs
pop
push
roll
inc
pop
inc
gs
inc
fiadds
mov
mov
jne
cmc
adc
xor
loope
stos
xorb
lret
xchg
cmpsl
cmpsb
subb
cwtl
mov
cltd
fbstp
mov
jecxz
add
push
push
mov
sub
gs
mov
test
xor
push
adc
dec
lahf
xchg
sub
adc
inc
rolb
fildl
pop
rcrb
dec
and
xor
loopne
aaa
mov
push
pushf
andl
xchg
pop
cs
pop
negl
jl
ret
sub
jb
data16
add
pop
test
repnz
sti
loopne
into
mov
sub
in
inc
cmp
inc
and
or
inc
out
ficoms
outsb
mov
shrl
jp
mov
lock
push
dec
test
push
insl
aam
test
inc
out
dec
inc
jae
aaa
dec
mov
jne
gs
sub
int
aas
inc
lds
fwait
cmp
in
sbb
xchg
lock
cmpl
outsb
jae
test
cli
cmp
xchg
stos
sbb
mov
sub
cli
ss
sahf
out
adc
jl
inc
push
mov
jbe,pt
mov
ljmp
push
mov
sub
xchg
mov
test
loopne
sbb
pslld
adc
jmp
std
in
jmp
push
mov
out
sub
add
jno
fisubrl
pop
and
lret
je
js
adc
mov
mov
leave
fwait
hlt
adc
rcll
popf
ss
push
call
jg
push
loopne
dec
pop
jge
imul
outsl
mov
push
lods
pop
cmc
rcrl
sub
push
mov
ljmp
jno
inc
cli
xchg
pop
mov
xchg
out
lret
movsl
test
xchg
in
jae
movsl
fldcw
loope
mov
mov
das
add
and
xchg
in
mov
jae
es
and
jle
jle
mov
or
imul
xchg
pop
loop
push
fs
in
xchg
xor
into
jns
cmp
push
mov
and
sub
add
pop
lock
addr16
dec
sbb
gs
xor
mov
stc
cld
insb
popa
add
lret
jne
mov
jb
jmp
iret
xlat
out
ret
pop
pop
shrb
adc
jmp
dec
cmp
push
cltd
jno
cmp
mov
or
pop
ja
test
jae
sbb
scas
call
cld
mov
nop
mov
icebp
push
mov
push
sti
mov
mov
inc
adc
xor
shrl
or
mov
pop
jno
jno
ds
xchg
stos
dec
and
cli
inc
xchg
xchg
xchg
leave
testl
sub
mov
pop
fs
sbb
and
jecxz
repnz
jmp
sub
shl
mov
pop
stc
insb
bound
incl
ja
cmp
test
push
xor
mov
es
ljmp
xor
mov
mov
outsl
lcall
test
xor
pop
pushf
adc
outsl
sbbl
lahf
pop
into
lret
xor
xchg
fistl
cld
aaa
adc
lods
sub
in
mov
fcom
mov
pop
rorb
push
cmp
test
adc
cmc
pop
push
imul
jle
pop
inc
sub
arpl
or
ror
add
mov
xchg
push
push
add
mov
pop
sbb
and
inc
cmp
fisttpl
movsb
mov
pop
in
lods
jg
test
mov
cmp
push
cmp
je
iret
cltd
incb
jle
repnz
insb
inc
inc
mov
inc
xchg
push
push
and
std
fnstenv
mov
and
das
inc
jne
mov
pushf
mov
xor
mov
mov
pop
pop
jo
xor
imul
aas
push
push
lock
notl
mov
pop
xchg
cmpsb
mov
test
pop
popf
subl
and
jb
dec
cmp
repz
sub
xchg
xor
pop
in
into
or
mov
leave
lcall
or
fcmovnu
loope
push
inc
rsm
mov
imul
cwtl
push
call
in
mov
cs
push
fsubl
sti
dec
jbe
in
jae
lret
aas
mov
in
and
xchg
dec
dec
fcmovne
aas
dec
cwtl
insl
inc
fucomip
scas
iret
lahf
out
xor
sub
push
push
sbb
xor
into
popa
xor
dec
jge
adc
stos
and
mov
add
aam
pop
pop
sbb
push
and
in
push
loope
cli
mov
mov
test
das
jle
mov
dec
movsl
data16
enter
das
lods
in
jno
xchg
jbe
rorb
cmp
xchg
outsb
arpl
jae
mov
jno
enter
stos
mov
push
mov
jp
xchg
ljmp
mov
idivb
mov
adc
sbb
mov
je
mov
in
mov
loope
jo
sbb
hlt
jo
ret
rcll
sbb
mov
sbb
pushf
sub
std
cmp
test
in
mov
xchg
push
fucomp
pusha
pop
jbe
adc
incb
xlat
out
inc
jbe
ret
sbb
idivl
inc
test
dec
ret
in
dec
pop
out
fbstp
imul
int
lret
mov
xlat
mov
cmp
scas
push
lahf
cmp
dec
mov
sub
and
xor
shrl
ljmp
enter
out
fcomp
xchg
outsl
cmp
sub
call
xchg
push
dec
pop
imul
cmp
sbb
cmc
mov
icebp
sbb
cmp
xor
or
es
cmpsb
and
scas
jo
cli
cld
sti
and
pop
aaa
jno
push
lret
push
xchg
adc
push
repz
call
dec
xor
das
adc
movsb
stos
adc
cs
aas
roll
sbb
sub
imul
push
mov
inc
mov
jns
ds
fiaddl
es
sub
jp
push
push
and
xrelease
add
rcl
add
mov
sahf
test
iret
add
add
xchg
inc
stos
add
add
add
pop
add
pop
add
add
add
push
add
add
add
add
add
add
add
orb
add
xor
add
mov
add
enter
add
add
xchg
inc
stos
add
add
add
add
mov
add
addb
add
xchg
inc
stos
add
add
add
add
cmp
add
add
add
xchg
inc
stos
add
add
add
add
xor
add
adc
add
sub
add
xchg
inc
stos
add
add
add
push
add
pop
add
inc
add
adc
add
pop
add
adc
add
jo
add
mov
add
mov
pop
add
mov
add
add
add
add
add
add
add
add
add
addb
add
add
orb
add
add
sbb
add
xor
add
dec
add
adcb
add
add
js
add
xchg
inc
stos
add
add
push
add
add
add
push
pop
add
pusha
pop
add
jbe
add
mov
add
sahf
pop
add
scas
pop
add
lret
cmpb
add
push
add
xor
add
or
add
and
add
or
xorb
add
add
add
xchg
inc
stos
add
add
add
add
mov
add
addb
add
xchg
inc
stos
add
add
add
add
add
add
clc
add
addb
add
xchg
inc
stos
add
add
add
add
add
add
adc
add
xchg
inc
stos
add
add
add
add
add
add
and
add
xchg
inc
stos
add
add
add
add
add
add
xor
add
xchg
inc
stos
add
add
add
add
add
add
inc
add
add
xchg
inc
stos
add
add
add
add
add
add
push
add
add
xchg
inc
stos
add
add
add
add
add
add
pusha
add
add
xchg
inc
stos
add
add
add
add
add
add
jo
add
add
add
xchg
inc
stos
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
xchg
inc
stos
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
xchg
inc
stos
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
xchg
inc
stos
add
add
add
add
add
add
loopne
add
add
add
xchg
inc
stos
add
add
add
add
add
add
lock
add
xchg
inc
stos
add
add
add
add
add
add
add
add
add
add
xchg
inc
stos
add
add
add
add
add
add
adc
add
add
add
xchg
inc
stos
add
add
add
add
add
add
and
add
add
add
xchg
inc
stos
add
add
add
add
or
add
push
add
add
add
xchg
inc
stos
add
add
add
add
or
add
add
add
add
xchg
inc
stos
add
add
add
add
or
add
add
add
add
xchg
inc
stos
add
add
add
add
or
add
add
add
add
xchg
inc
stos
add
add
add
add
or
add
add
add
add
xchg
inc
stos
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
inc
stos
add
add
add
add
or
add
push
add
add
add
xchg
inc
stos
add
add
add
add
or
add
push
add
add
add
xchg
inc
stos
add
add
add
add
or
add
push
add
add
add
xchg
inc
stos
add
add
add
add
or
add
pop
add
add
add
xchg
inc
stos
add
add
add
add
add
add
adc
add
add
add
xchg
inc
stos
add
add
add
add
add
add
and
add
push
enter
add
in
add
add
add
insb
testb
inc
xor
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
add
in
add
add
add
je
add
ljmp
add
add
add
add
faddl
add
in
add
add
add
cmp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
dec
xor
add
add
add
add
add
add
add
add
in
add
add
add
jl
add
addb
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
mov
add
in
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
xchg
add
add
add
add
push
add
add
in
add
add
add
inc
push
add
add
in
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
jl
push
add
add
add
add
add
add
add
add
in
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pushf
push
add
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
sbb
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
xor
sbbb
es
loope
cltd
xor
mul
ret
outsb
loopne
add
adcl
mov
xor
enter
mov
fidivrs
dec
jne
push
call
sbb
ret
pop
and
out
xchg
lcall
xlat
mov
fldz
or
outsb
cwtl
ss
and
stos
push
push
fcoml
int
xchg
sbb
fidivs
inc
js
jecxz
lahf
mov
clc
push
xlat
xor
or
in
clc
adc
bound
mov
push
cmp
rorb
popf
lret
or
ret
or
out
jbe
cmpsl
aas
mov
loope
pop
scas
mov
roll
inc
mov
in
xor
mov
dec
call
je
int
mov
sbb
clc
jle
sbb
xchg
mov
testl
mov
cmp
add
push
loop
int3
int
mov
gs
lret
dec
xchg
mov
lods
ds
dec
imulb
inc
es
sti
ror
daa
sub
imul
jne
add
fcompl
mov
push
into
ret
and
sbb
pop
and
lahf
mov
stos
lods
pop
ret
loopne
mov
pop
loope
outsl
enter
les
stc
add
shlb
cmp
add
sub
pop
scas
call
add
fists
loope
hlt
xchg
cwtl
mov
or
xchg
cmc
out
dec
faddl
sub
add
inc
ja
sti
pop
jle
and
insb
out
sbb
je
cmp
jmp
push
jp
mov
mov
push
fcomi
xor
dec
and
dec
or
cs
dec
inc
jne
fmulp
icebp
xor
cwtl
cld
shlb
fbstp
sub
xchg
push
xor
push
test
pusha
cli
mov
adc
repnz
inc
and
dec
add
or
push
les
addr16
les
inc
pusha
fs
sub
xor
xchg
into
popa
in
out
sub
mov
jns
jl
mov
cmpb
hlt
popf
cmpsb
std
and
inc
xchg
mov
adc
and
pop
sbb
or
imul
mov
pop
sbb
add
or
inc
rcrl
jb
push
andl
ja
test
jecxz
loop
shlb
ljmp
jno
call
pop
rorb
add
les
jnp
pop
imul
or
stos
xchg
shl
push
es
pop
cmp
mov
and
xchg
jns
dec
or
sbb
jnp
push
jne
shlb
sub
stos
dec
popf
lods
in
int3
add
add
out
and
dec
pop
lods
lds
repnz
mov
and
add
aaa
dec
sub
insb
add
aam
add
lcall
sahf
ljmp
xor
mov
jno
imul
movsl
scas
subb
xor
fnsave
mov
out
daa
aam
andb
test
in
inc
and
inc
lcall
inc
pop
add
mov
mov
icebp
sub
gs
push
mov
pop
mov
add
inc
dec
mov
hlt
and
pop
push
stc
push
mov
lds
dec
les
dec
aas
popa
cmp
cld
dec
pop
xchg
cs
cwtl
sbb
push
je
divb
in
out
jno
int3
std
dec
jne
mov
cmc
stc
pop
push
mov
nop
adc
int
and
mov
mov
mov
fdivs
sub
outsl
mov
loop
adc
inc
loopne
test
int
test
mov
xlat
dec
push
sbb
inc
stos
aaa
add
ret
in
add
rcll
stos
xor
std
int3
mov
into
jl
clc
xchg
cmpsl
lods
add
push
xor
inc
cmpsb
xor
sub
mov
sti
das
ffreep
mov
cld
sub
mov
add
mov
xlat
repz
neg
sub
push
or
cli
stc
jae
inc
pop
mov
pop
shlb
adc
cltd
daa
inc
mov
sbb
inc
sub
insb
nop
mov
roll
pushf
push
aad
out
mov
cmp
push
jge
stos
pop
lock
add
sbb
insb
jle
out
jmp
sbb
aaa
xor
push
adc
fwait
or
cmp
xor
mov
fistpl
xlat
xor
cli
push
fmuls
fsubrl
dec
inc
sub
call
inc
cmp
jne
lods
jnp
and
sub
xor
outsb
xor
jecxz
push
sarb
jmp
outsl
pop
cmpsl
jl
shl
shrb
push
and
inc
loope
rcll
dec
ljmp
inc
inc
sub
or
scas
jle
je
addr16
pcmpeqd
push
mov
or
push
inc
sub
cmpsb
imul
test
push
stos
dec
mov
subb
xor
inc
and
fmul
pop
cli
subb
popa
xor
xor
rcl
stos
test
pop
shlb
jne
mov
loopne
pushf
nop
jle
leave
sub
push
xchg
jbe
lcall
inc
pop
sar
jnp
in
in
repz
into
repz
jge
lods
xor
pop
int3
push
mov
stos
inc
xchg
aam
cmpb
call
outsl
stos
pop
int
or
push
jns
pop
out
je
or
inc
int3
or
push
out
xchg
sub
ja
dec
mov
aaa
movsb
hlt
movsb
mov
cmp
stos
into
ret
out
loop
jmp
in
sbb
pop
cld
or
and
cmp
test
mov
daa
inc
lea
stc
xor
aam
push
bound
sahf
addb
movb
ljmp
and
addl
adcl
ret
repnz
dec
adc
shlb
push
sbb
jecxz
push
and
je
xchg
xchg
imul
cltd
cmp
lods
movsl
js
add
cmpsl
add
push
lock
hlt
inc
loopne
outsb
push
jp
xor
ja
fwait
mov
fstps
pop
addr16
pusha
test
cmp
div
in
je
bound
je
dec
fcmovnu
ja
push
add
inc
sub
jae
and
inc
or
cmpsb
mov
jns
mov
sbb
dec
inc
lahf
jmp
cs
inc
dec
inc
pop
xor
cmp
les
js
test
test
stos
clc
mov
mov
and
bnd
dec
inc
cmp
sub
sub
ret
ljmp
sti
dec
dec
adc
push
shr
xchg
imulb
fidivrs
mov
lods
mov
in
adc
adc
repz
dec
or
pop
and
xchg
inc
push
cmpsl
mov
fld1
loop
andl
mov
clc
mov
in
add
repz
enter
daa
dec
xchg
push
sbb
push
xor
ja
cld
push
aas
popf
lods
push
gs
fwait
sub
mov
insb
stos
adc
and
and
dec
push
enter
ret
adc
dec
push
negl
add
enter
sub
mov
sbb
test
sub
adc
xor
sub
orl
mov
mov
lock
push
sti
enter
stos
dec
jne
xchg
or
jo
jmp
pop
cltd
stos
adc
stos
loope
xchg
hlt
int3
push
mov
mov
sti
mov
mov
sub
pop
lret
jne
scas
call
testb
mov
mov
push
fwait
mov
scas
mov
or
mov
shrl
inc
test
shll
sti
fstl
push
or
push
out
dec
loope
add
sub
xor
pop
or
push
xchg
mov
pop
ss
sub
cld
cmp
sahf
mov
adc
or
push
push
ljmp
inc
std
ss
dec
add
jae
jno
fbld
inc
xor
or
nop
gs
push
sarb
insl
mov
popa
sub
sti
sub
mov
notb
movsl
push
test
lret
mov
movsb
xchg
movsl
sub
sub
roll
imul
popf
sbb
adc
testl
sub
xor
inc
pop
prefetcht1
pusha
lret
adc
jmp
packuswb
je
mov
in
es
mov
daa
test
or
clc
pop
repnz
cmp
out
xchg
mov
or
mov
lock
fildl
call
mov
cli
push
pop
jmp
fsubr
sbb
fmul
cmpsl
fs
dec
dec
dec
dec
rolb
adc
mov
imul
loope
or
jo
hlt
je
icebp
sbb
pop
loopne
mov
xchg
decl
pop
stos
arpl
adc
ljmp
jae
mov
rol
xor
adcb
ficompl
int3
sub
xchg
jecxz
inc
ljmp
and
jae
int3
mov
mov
loop
cs
loopne
fdivr
cmp
xchg
cltd
cmp
ja
cmp
cld
or
pop
lock
lret
cmp
shll
data16
imul
iret
inc
jecxz
adc
loope
mov
cmp
sti
popf
cmp
xchg
mov
dec
jle
or
int
pmovmskb
mov
xchg
ss
mov
neg
popa
lods
out
test
insl
and
xchg
in
pop
sbb
pop
adc
mov
inc
or
fcompl
mov
or
adc
cmp
pop
aas
cmp
pusha
pop
lock
jae
xchg
and
mov
in
pusha
mov
or
subb
neg
or
mov
mov
cli
mov
arpl
jne
rol
add
es
ss
adc
pop
cltd
fwait
inc
or
add
sbb
lret
enter
jp
lret
rclb
sti
mov
add
loop
addb
mov
push
popf
call
cld
mov
or
loopne
inc
mov
test
mov
dec
lcall
lcall
popa
shrb
cmp
dec
mov
inc
and
cmp
out
mov
aad
andl
and
insl
in
repz
push
mov
mov
pop
push
mov
adc
stc
mov
aaa
cmp
pop
or
adc
cmp
mov
sbb
adc
and
sbb
push
push
add
inc
add
xor
mov
ljmp
fwait
subl
cltd
xor
std
es
pop
icebp
aas
and
mov
mov
ret
mov
fcomi
and
pop
mov
cli
subl
sbb
insl
stc
cmp
cmpsl
fs
inc
xor
mov
das
mov
push
pop
or
push
lds
dec
out
ja
lahf
sahf
inc
fildl
mov
leave
dec
sub
mov
popf
movsb
fdivrs
xor
fnstenv
jmp
test
sarb
cmp
popf
adc
shl
call
enter
push
inc
inc
xchg
adc
fdivrp
fisubs
pop
sti
ljmp
or
mov
ret
mov
mov
jge
lods
push
xchg
scas
inc
xchg
mov
jge
and
add
aas
sub
mov
ja
sbb
pop
sarb
add
dec
mov
stos
cmp
in
jmp
cmp
ljmp
adc
sbb
and
movsb
test
test
sub
xchg
dec
mov
xor
mov
fldl
popf
push
stc
fstpl
inc
or
in
and
outsl
rorl
loope
cmp
mov
testb
sqrtps
sub
mov
loopne
aaa
pop
pop
fmul
mov
les
mov
add
inc
jnp
pop
and
andb
jae
dec
mov
call
mov
imul
mov
pop
add
and
xor
cmp
pop
rorb
fstpl
jnp
ds
lods
fisubs
mov
xor
and
jl
aas
xchg
js
sarl
jae
jmp
lods
mov
ret
jb
fsubs
fcmovne
push
mov
ds
dec
negb
sbb
jb
mov
neg
shlb
mov
sbb
mov
xchg
mulb
dec
je
or
xor
mov
shll
mov
or
xorb
shr
add
add
and
mov
test
pop
cs
push
xchg
inc
cmp
repz
lcall
push
xchg
cmp
ret
lea
jge
adc
sub
aas
xlat
xchg
dec
mov
xchg
sti
ja
cmpsb
js
cmp
xor
sub
xchg
mov
jns
int
je
cmpsb
shll
mov
std
xchg
pop
sbb
pop
les
push
in
inc
mov
and
fnclex
add
xlat
out
jecxz
or
es
mov
icebp
pop
push
xchg
das
aad
outsl
loop
xchg
pushf
push
pop
shl
inc
enter
out
faddp
lods
mov
into
das
jecxz
cld
push
fwait
cmp
je
iret
mov
dec
inc
jb
inc
inc
push
ss
ja
scas
push
pop
add
int
cli
mov
gs
outsb
jecxz
mov
repz
out
cmpsb
or
push
arpl
nop
test
jnp
jnp
les
iret
adc
and
sbb
pop
inc
cltd
push
ja
cmpsb
out
ljmp
mov
pop
pop
fistl
js
mov
repz
loop
fildll
dec
dec
push
fstpt
ret
push
xchg
xlat
popf
and
sub
pushf
mov
cli
dec
pop
cmpsl
and
push
enter
mov
push
inc
pop
aam
mov
jle
dec
cmpl
jo
dec
jg
dec
pop
sbb
aam
icebp
cs
pusha
xor
ret
sub
mov
stc
dec
push
stos
cwtl
xchg
sbb
inc
dec
lods
inc
lret
loopne
mov
clc
mov
push
lahf
mov
adc
and
and
pop
dec
arpl
test
sub
inc
call
jnp
dec
jecxz
dec
xor
test
je
xchg
push
pop
pop
mov
sti
xor
xor
jne
sub
jmp
adc
or
stos
rcr
sub
je
int3
sbb
mov
push
lcall
lock
or
adc
out
pop
jbe
push
push
sub
cwtl
jne
add
adc
dec
and
gs
fdiv
inc
adc
dec
pusha
js
fcmovbe
or
jo
loope
push
shl
xchg
dec
cld
nop
das
in
sbb
leave
adc
lea
mov
sbb
dec
int3
lock
adc
shll
lods
pop
adc
inc
imul
add
pop
out
outsl
sbb
out
in
cwtl
mov
push
inc
sub
pop
cmp
push
xchg
ret
sub
mov
test
sbbb
insl
ja
call
or
fs
les
pusha
outsb
pop
or
shll
insb
adc
cld
push
adc
mov
sahf
pop
pop
lods
xchg
mov
pop
mov
dec
adc
es
daa
jle
jp
jp
mov
in
ss
daa
xchg
or
xchg
lret
push
daa
fdivl
xchg
bound
enter
aam
pushf
mov
pop
sbb
push
sbb
loope
aad
xchg
sub
xchg
out
mov
or
mov
testb
pop
xchg
push
mov
ffree
negl
xchg
pop
loopne
gs
mov
push
or
sub
loope
fsts
sub
cmp
mov
enter
sub
mov
xor
lock
bound
stc
sbb
dec
shlb
cmp
jo
repz
fwait
dec
mov
cmp
int
jo
and
test
sbb
outsb
out
ret
add
mov
push
clc
aam
sub
scas
push
xchg
sti
cmp
ss
dec
ljmp
or
pop
cmpsb
mov
mov
stos
jno
ffree
popf
out
imul
push
mov
sub
loop
jne
mov
xor
popa
cmpsb
pop
mov
push
mov
pop
imul
cmc
mov
rcrl
mov
out
and
jbe
pop
mov
jnp
cld
push
inc
mov
in
imul
mov
xor
js
mov
es
pop
mov
cli
stc
dec
popf
pusha
cmp
fstp
jl
dec
loop
and
mov
ds
or
out
std
popa
iret
ret
push
outsl
in
into
or
mov
jmp
pop
or
cmp
mov
xchg
cmp
or
pop
adc
divl
push
or
lock
out
mov
xor
aad
lods
ds
and
out
adc
stos
jb
ja
jnp
add
lock
insb
and
sub
sub
mov
push
xchg
dec
repz
test
xchg
and
cmpsb
movsl
fdivrl
cmp
cmpsl
mov
jge,pt
inc
xchg
cs
xchg
rorb
pop
cmpsb
enter
add
cli
into
mulb
and
adc
and
and
lcall
mov
mov
sbb
cmpsb
repz
mov
sbb
cltd
pop
loop
mov
je
add
sub
cmc
jo
ljmp
jle
or
orb
aam
in
ds
fistps
jns
or
or
popa
cmpsl
mov
fidivrl
repnz
js
pop
cli
cmpsb
pop
xor
les
xchg
push
aam
jnp
mov
lea
push
scas
mov
stos
jle
addr16
push
sbb
nop
jb
mov
xchg
imul
test
lret
mov
out
sbb
push
cmpsb
push
test
sbb
pop
je
or
xchg
push
cmp
and
add
lods
jmp
jbe
mov
fnstenv
pop
sub
cmp
mov
lret
call
lahf
or
xchg
loopne
jecxz
sbbb
aam
adc
fbld
punpckhdq
imul
fbstp
fcmovnb
mov
mov
dec
pop
cmp
shlb
xchg
adc
jge
notl
popa
and
dec
xchg
icebp
scas
lret
into
inc
imul
dec
lret
cld
mov
cmp
lods
mov
enter
or
dec
pop
insl
shlb
and
xor
out
xor
push
outsb
outsb
js
pushf
or
cmpxchg
push
xchg
sub
mov
cs
dec
lcall
and
insb
mov
arpl
xor
int3
sbb
fmuls
mov
stos
in
mov
dec
rcrl
sbb
dec
cmpsl
movl
mov
mov
lods
and
inc
filds
inc
hlt
jge
out
xlat
aam
call
add
jge
mov
mov
mov
xchg
push
daa
mov
les
loop
mov
loope
jp
shll
cmpl
sbb
out
dec
icebp
mov
sbb
mov
add
pminub
sbb
pop
test
jmp
mov
pop
or
jecxz
mov
fs
lahf
rolb
aaa
hlt
data16
jne
jmp
and
jnp
cmc
loopne
add
or
lea
repz
push
push
sbb
cld
mov
mov
insl
gs
xchg
sbbb
repnz
sahf
xor
cltd
cmp
xchg
in
xchg
push
inc
out
shrb
push
out
addr16
xor
fisttps
xchg
notb
sbb
adc
xchg
jbe
cmp
movsl
stos
lea
push
or
jl
divl
add
dec
jmp
push
dec
nop
addr16
nop
fisttpl
push
dec
loopne
pop
adc
push
jo
or
cmp
mov
mov
add
hlt
add
xor
incl
stos
or
addr16
inc
adc
lret
mov
push
scas
sub
mov
mov
sti
push
or
ja
data16
ljmp
inc
out
and
add
sahf
out
popf
add
mov
cmp
es
mov
xor
or
movsb
jl
jne
mov
cmp
pop
out
ret
mov
loope
pop
dec
daa
sbb
cmp
adc
dec
sbb
add
jle
inc
jmp
mov
lahf
popl
das
push
inc
and
sbb
nop
inc
jne
pop
cmpsl
ret
push
into
jmp
incl
dec
push
mov
sub
leave
jg
mov
xchg
loop
sbb
mov
sub
xchg
and
push
or
loop
fwait
stos
or
pop
xor
rcl
xor
test
movsb
pop
xchg
je
or
das
pop
sub
xchg
movsb
mov
jg
fs
cmpsb
dec
mov
insb
sub
test
xchg
pop
movsl
adc
fistpll
mov
fiadds
xchg
or
cmp
imul
addl
pop
mov
jo
arpl
mov
mov
stos
sarb
ds
ret
sbb
lods
in
xchg
add
js
jge
mov
mov
dec
filds
cmp
jno
or
push
sbb
ja
out
mov
sbb
push
daa
js
pop
sbb
int
or
outsl
sti
je
lods
cltd
lcall
cmc
lods
and
pusha
push
ljmp
xchg
mov
xchg
mov
or
xor
mov
dec
mov
jmp
pop
ss
hlt
inc
addr16
addr16
pop
loop
inc
rol
jmp
xchg
xor
mov
aas
aas
int
test
pop
lods
sub
into
aas
xchg
imul
jg
cmp
mov
cmp
aas
lock
insb
add
xchg
pop
nop
aaa
dec
xor
sub
and
inc
ljmp
add
cmpsl
cmp
das
loopne
out
and
push
mov
push
push
aam
ret
mov
push
daa
push
div
test
sahf
aaa
out
or
fisubrl
or
lock
jp
cwtl
dec
sbbb
cld
push
ret
pop
adc
push
sub
or
fidivl
lret
scas
in
mov
popl
test
xor
test
push
lcall
mov
pop
inc
ret
add
jmp
or
adc
repz
idivb
stos
cs
xchg
pop
call
fldl
mov
out
mov
mov
fisubrl
rcl
adc
mov
fwait
push
sub
lods
pop
rolb
add
inc
in
cmp
es
jne
or
pushf
jnp
jmp
mov
lcall
xchg
aaa
xor
mov
xchg
out
sbb
mov
cmp
imul
les
cmp
movsb
fs
push
mov
and
loope,pn
xor
mov
jb
mov
cmp
jl
test
loop
xor
mov
and
mov
mov
adc
lcall
mov
or
adc
les
jge
xchg
inc
stc
aam
xchg
sbb
adc
imul
fs
fcoms
dec
cmpsb
in
idivb
mov
pop
ds
add
lods
cmp
insb
sub
shll
push
loopne
pop
inc
lcall
push
push
sahf
pushf
push
sbb
mov
lds
lret
rcrl
popf
fidivrs
mov
rorl
fnstsw
stos
cmp
mov
ljmp
jg
xor
cmp
sbb
mov
push
fs
cmpsw
ja
cmpsb
orps
and
push
push
aad
pop
rcr
inc
adc
dec
hlt
mov
mov
push
out
xchg
aad
insb
xorl
std
fucom
cmp
add
jns
jo
sti
push
sub
dec
pop
dec
dec
dec
fnstcw
testb
cmc
cmp
mov
xchg
jb
xor
js
or
ffree
or
pop
lea
insl
fcomp
inc
mov
fldcw
shlb
jmp
xor
add
xchg
and
mov
pop
sbb
daa
js
add
lret
jo
mov
mov
mov
or
out
push
pop
push
hlt
jno
cli
fstpt
gs
dec
ljmp
jo
and
dec
gs
mov
outsl
dec
das
adcb
mov
adc
mov
ss
inc
xchg
cli
fisubs
out
push
shll
pushf
and
jecxz
mov
in
gs
fsts
mov
jne
mov
pop
popa
push
mov
stos
mov
inc
rcl
inc
sbb
scas
loop
pop
enter
xchg
jge
in
lcall
mov
je
pop
push
lea
data16
hlt
movsb
jmp
jg
inc
and
test
mov
in
icebp
in
adc
jg
cltd
or
cmp
pop
fisubs
mov
mov
je
loope
and
loope
std
pop
xor
popl
sub
add
add
roll
xchg
jecxz
pushf
insb
dec
sbb
bound
xor
cli
xchg
insb
push
aaa
fsubrs
imul
dec
call
enter
in
mov
iret
orb
xor
sbb
inc
test
ud1
fcomps
sti
stos
xor
call
mov
push
lods
je
cmp
xchg
inc
add
mov
insl
loop
inc
loope
sahf
pop
into
and
out
add
shlb
pop
mov
aad
xchg
xchg
xlat
ror
loop
dec
sti
mov
add
imul
mov
loope
xchg
out
rclb
rcr
adc
jo
jle
ror
jg
mov
ja
cmpsl
xor
add
int3
adc
pushf
mov
or
push
xchg
push
push
arpl
mov
inc
xorl
ss
rorb
xchg
outsl
cmp
pop
mov
hlt
xor
jno
setle
push
pop
mov
mov
inc
jns
pop
jb
outsb
adc
es
jle
loope
xor
popa
stos
push
mov
ds
cmp
ficoml
xor
repz
xchg
inc
mov
push
cwtl
xchg
add
cld
cmp
jno
add
cmc
push
inc
adc
jb
clc
add
sbb
inc
jle
in
arpl
out
push
mov
xlat
mov
jmp
mov
mov
push
lcall
adc
mov
outsl
lcall
sar
inc
cmp
gs
cmp
jge
pop
push
popf
repz
nop
lret
xchg
sub
push
jns
in
mov
mov
mov
adc
cs
adcb
push
push
scas
inc
das
dec
pop
cmc
mov
pop
scas
mov
orb
adc
frstor
and
pushf
loop
dec
lcall
insb
push
pop
ret
js
cmpsb
out
enter
fidivl
push
mov
inc
das
mov
lock
pop
lahf
in
mov
xchg
cmp
insb
stos
mov
clc
repnz
rol
out
add
xchg
test
test
add
xchg
sub
rcrb
outsb
mov
stc
imul
adc
popf
adc
xchg
mov
xchg
mov
mov
mov
xchg
sbb
mov
push
xchg
push
in
push
in
ror
push
negl
das
cmp
in
out
pop
pop
outsb
scas
aaa
scas
pop
jne
in
test
cwtl
adc
lds
sarb
movsb
mov
shlb
xchg
negl
ret
jmp
or
mov
popf
sbb
ror
mov
les
inc
movsl
sub
xchg
es
pop
gs
push
js
xor
insl
cmpb
popa
sbb
xchg
gs
mov
mov
int
into
mov
mov
jecxz
outsl
push
sbb
jmp
or
stc
jle
mov
push
and
add
nop
mov
bound
gs
in
into
sub
dec
inc
cmpb
aam
jecxz
mov
mov
out
icebp
sbb
dec
icebp
jl
cs
test
mov
push
inc
loop
repz
add
inc
xor
inc
inc
rcrl
jb
add
pop
movsb
push
xor
imul
sbb
xor
pop
or
and
xchg
pop
enter
add
out
dec
mov
dec
ret
xchg
add
call
test
testl
lret
imul
pop
arpl
out
xlat
stos
es
pusha
pop
pop
gs
jbe
push
out
divl
mov
xlat
neg
outsb
loope
jl
xchg
adc
into
push
popf
inc
push
dec
mov
into
adc
mov
jge
or
loop
pop
mov
stc
inc
jmp
insl
movsl
cmpsl
movsb
inc
push
add
xchg
movsl
push
in
sbb
ss
out
subb
bound
insb
and
push
daa
lea
xlat
add
lret
and
enter
shlb
xor
arpl
pop
fs
lcall
in
test
mov
cmp
out
mov
push
gs
fildll
xchg
sbb
les
xor
sti
movsl
dec
bound
pop
sub
mov
loope
mov
ss
mov
loopne
and
lret
lock
call
jge
ret
int3
cmp
ret
inc
loope
outsl
xor
jo
mov
rclb
call
scas
sar
call
xor
icebp
mov
pop
aaa
mov
ret
fidivl
dec
push
xor
rorl
decb
rcll
add
jmp
leave
jecxz
pop
cmp
ret
xchg
xor
and
loope
mov
cwtl
inc
testb
add
call
sub
xchg
push
mov
ret
hlt
mov
call
push
es
cltd
fsubs
aaa
jp
arpl
xchg
jno
jne
cmpsb
fstpt
sbb
mov
mov
xchg
jmp
sbb
call
or
dec
push
mov
or
xchg
xchg
lahf
sbb
imul
and
dec
icebp
fs
sbb
adc
jno
mov
xor
mov
jne
or
cs
cmp
mov
inc
test
sbbb
out
push
adc
sbb
in
jp
ret
adc
lock
mov
repz
mov
fstpl
lahf
push
add
sub
dec
jns
sbb
jb
mov
and
mov
mov
ja
push
lahf
cmp
push
mov
call
fildll
pop
jge
add
add
pusha
mov
mov
mul
push
ficomps
xor
cmp
jae
rcl
add
sbb
fs
dec
pop
fimull
and
das
ret
out
jp
jecxz
fwait
push
push
out
scas
mov
addr16
pop
inc
mov
rolb
mov
cld
or
push
sub
or
add
dec
test
or
mov
repnz
hlt
dec
push
inc
xchg
aad
or
and
jo
icebp
xor
push
dec
push
test
adc
aad
cmp
rorl
push
scas
sub
jnp
gs
idivl
daa
gs
inc
aas
idivb
in
jge
pop
push
mov
jb
out
je
cmc
or
gs
jnp
in
stc
add
test
adc
jp
loop
mov
xor
inc
adc
in
lahf
sub
rcrl
pop
xchg
xchg
jecxz
lcall
fsubrp
in
jecxz
or
xchg
lret
add
xchg
sbb
mov
testl
shl
popa
mull
ljmp
and
dec
jecxz
sub
and
add
popf
push
insb
dec
into
or
cmp
cmp
daa
push
push
test
jns
pop
or
nop
decl
jecxz
rcr
outsb
xor
mov
dec
jae
or
adc
xchg
aaa
push
les
xor
push
mov
ret
pop
pop
or
test
sahf
pop
subb
or
push
or
jno
cmp
push
outsb
lods
iret
fnstsw
dec
mov
pop
sub
mov
and
inc
push
xchg
scas
in
ja
divb
pop
inc
adc
ss
leave
xacquire
ss
push
jg
scas
inc
sbb
fs
xchg
mov
lods
rcr
jmp
test
es
subl
mov
mov
fisubrl
jb
adc
adc
adc
arpl
adc
add
jmp
fists
dec
test
and
add
mov
repnz
movsl
out
or
test
or
sub
add
sar
mov
cmp
fmul
call
insl
or
push
add
add
add
dec
adc
stos
mov
pusha
bound
stc
mov
mov
aaa
addb
hlt
inc
cmpsb
mov
cmp
lds
adc
sbb
adc
into
loope
sbb
fsubrs
jne
ss
pusha
inc
xchg
fld1
xchg
cmove
jnp
cmp
mov
jmp
sti
stos
xlat
pop
xchg
outsl
adc
inc
sub
and
pop
pop
fs
mov
aas
xor
inc
adc
pop
rorb
xchg
xor
dec
mov
popa
std
mov
dec
pop
jmp
mov
inc
in
cs
and
out
xchg
xor
xor
inc
pushf
add
mov
sub
inc
divb
fiaddl
mov
test
jmp
testl
test
daa
fwait
sti
sbb
pop
fmull
aas
andnps
cmp
inc
jno
xchg
repz
outsl
adc
mov
arpl
lret
inc
and
dec
fmull
mov
and
out
sub
outsl
cmpsb
andl
inc
sahf
std
stos
repnz
testb
ds
jmp
test
lods
sub
jg,pt
push
jp
mov
bound
xchg
xchg
hlt
mov
jne
in
lcall
pavgw
pop
jns
xchg
pop
lcall
sub
movsb
cmc
mov
sti
repz
dec
into
cmpsl
jg
fsubrs
out
xlat
mov
dec
pop
xchg
sub
push
fstpt
pop
cs
loop
cwtl
add
xor
pusha
pop
and
xor
jne
data16
push
fdivrl
jmp
mov
cmp
sub
xchg
sar
xchg
jmp
xor
insb
xchg
jle
pop
or
ret
add
xchg
stos
dec
fcmovnu
shrb
lret
sub
xchg
in
push
pop
popa
inc
hlt
cmp
push
js
add
iret
jmp
fsubl
xorl
arpl
in
pop
add
push
dec
mov
adc
mov
sub
cwtl
es
aam
fs
es
sbb
xor
fsubrl
xor
nop
xchg
pop
insb
xor
inc
pushf
mov
ret
mov
sub
pop
popf
mov
xor
xor
fcomps
ja
inc
into
das
and
in
loope
daa
jbe
add
test
cmp
mov
xchg
pop
push
int3
popa
mov
mov
mov
cmc
cli
es
sbb
dec
or
icebp
jno
and
xor
cltd
outsb
mov
mov
add
inc
push
dec
adc
movsb
data16
ljmp
outsb
into
or
pop
and
xchg
je
fwait
inc
cmpsb
mov
data16
outsb
xor
mov
xor
repz
imul
arpl
notl
fiaddl
repz
adc
idivl
adc
cmc
cmp
outsb
jb
in
lock
shll
sub
hlt
test
hlt
fistpll
lods
mov
in
adc
test
push
ljmp
and
ret
dec
xor
mov
mov
lea
xor
es
cmp
in
push
clc
je
fldcw
push
mov
mov
mov
mov
mov
sbb
das
dec
push
jns
mov
loope,pt
mov
cld
mov
flds
movsb
add
cmp
lea
push
imul
lea
pop
mov
mov
aam
sub
scas
and
daa
lods
jo
inc
add
push
cld
mov
cwtl
adc
or
cs
popw
dec
jge
mov
xchg
cmp
sbb
add
adc
jmp
push
fsub
rolb
pop
xor
fbstp
lcall
sahf
daa
les
adc
in
cmp
mov
adc
xor
push
aam
push
jbe
divl
inc
stos
stos
cmp
inc
sti
adc
cmpsb
xchg
adc
idivb
add
testl
lea
xchg
pop
ficoms
pop
and
push
mov
dec
push
jp
adcl
xchg
out
push
mov
or
mov
dec
fs
or
dec
sub
cmpsb
out
dec
xchg
push
and
test
cmp
pop
flds
or
in
adc
neg
jae
cmp
inc
dec
cwtl
fwait
fists
xor
inc
cmpsb
mov
lcall
aaa
sbbb
xor
pusha
inc
mov
ss
loop
push
pop
adcl
rolb
lds
mov
sbb
jno
cltd
bound
dec
cmp
pop
pop
lods
add
adcb
clc
pusha
aas
push
mov
cmc
cmpsl
push
cmpsl
pop
sbb
mov
iret
mov
pop
mov
mov
jp
call
dec
pushf
add
cwtl
or
loopne
dec
mov
movsb
sub
xchg
loopne
lret
push
or
dec
push
sbb
xchg
push
insb
jnp
sbb
shl
sbb
aaa
inc
mov
add
fisubrl
mov
into
cmp
jge
cmp
xor
in
pop
mov
cli
inc
jno
push
push
inc
dec
shll
dec
cmc
jne
and
xor
pusha
jmp
jns
test
jnp
pop
out
pop
xchg
mov
aas
lahf
adc
xor
out
cmp
add
roll
out
iret
es
jne
xchg
cli
popa
repnz
mov
sub
inc
pop
lret
xchg
cmpsl
pop
loopne
pop
pusha
dec
repnz
dec
scas
movsb
jnp
lret
pop
rcll
fucomip
pop
inc
cwtl
cmpsl
setbe
sub
lret
cmpsl
push
lcall
mov
seta
xchg
sub
rcl
imul
pop
mov
cmp
fadds
sub
enter
sbb
xchg
arpl
sub
cmp
xlat
cmp
push
fdivr
mov
movsl
loopne
adc
scas
ljmp
lahf
stos
sti
shr
sbb
sub
xlat
fiadds
fwait
push
jl
sarb
call
jns
pop
sbb
pop
and
or
ljmp
repz
xor
mov
mov
adc
int3
sbb
xor
lods
clc
ja
lret
mov
ss
xor
orb
adc
mov
mov
fistpll
cmpb
je
xchg
or
mov
and
push
jne
xchg
ret
jbe
inc
mov
cld
jno
mov
out
pop
out
or
cmpsb
test
stos
sbb
xor
sbb
jp
jmp
adc
ret
mov
pop
mov
adc
sub
sub
sbb
sarl
pop
inc
dec
rclb
filds
adc
xor
push
flds
fsubrs
lret
aam
xor
mov
sub
mov
scas
jg
int
jecxz
call
adc
in
xlat
pop
push
sub
add
ss
push
xor
cmp
xchg
insl
cli
dec
lret
rcr
fwait
cmc
movsb
enter
jecxz
jae
jo
mov
cs
pop
mov
sbb
pusha
inc
loope
dec
lock
in
fidivs
push
pushf
jbe
and
sbb
js
fcomps
mov
push
rcll
dec
and
push
jae
sbb
fs
fnstenv
orb
mov
negb
cld
js
je
lods
push
or
or
xchg
mov
add
test
scas
fcmovb
mov
popf
sbb
outsb
and
inc
cmp
push
fwait
movsb
cwtl
ret
shlb
xor
enter
xchg
daa
jmp
jae
pop
ret
inc
sahf
fisubrl
cli
sahf
aas
or
or
punpckhwd
and
stos
dec
aas
jae
ss
or
test
adc
and
sti
mov
out
leave
add
rcr
pushf
xchg
das
xor
xchg
cmpsb
gs
lahf
add
loope
aaa
pop
mov
inc
fdivs
aad
scas
sbb
es
pusha
ljmp
dec
leave
push
push
sbb
int
add
inc
cmp
popf
inc
dec
dec
sbb
push
push
popf
jg
jp
push
mov
pushf
xchg
ror
imul
fscale
arpl
xchg
add
dec
sub
out
xchg
mov
cmpsb
cli
and
jl
lds
call
movb
enter
lcall
fistps
outsl
jl
jmp
lds
aas
mov
mov
and
jge
jecxz
mov
mov
je
and
inc
iret
dec
enter
cmpsb
leave
cwtl
and
aam
push
fs
and
or
aam
repnz
lea
insl
pop
jnp
in
leave
sti
js
cmpsb
sbb
push
xchg
xor
push
jno
insb
data16
into
testl
fbstp
gs
icebp
addl
repnz
push
test
sti
shlb
int3
push
xor
cld
pop
cmpsb
addl
inc
je
sbb
cmpsl
xchg
dec
fs
aas
cmpsb
push
inc
adc
push
cmp
out
stos
xchg
inc
lret
pop
jns
adc
add
or
cwtl
js
push
mov
imul
aas
mov
mov
dec
and
mov
push
movsl
ljmp
rcrl
inc
sub
in
fstps
jge
into
fnsave
jge
mov
pop
mov
shrb
push
test
and
out
jns
mov
lds
or
test
mov
jno
bound
lds
iret
rclb
mov
add
sub
xchg
pusha
jae,pn
mov
add
mov
test
ljmp
mov
jnp
das
movsb
fiaddl
adc
out
rcll
lret
std
test
jge
lods
adc
sti
out
in
and
pop
stos
loope
jp
mov
fmull
fdivp
fidivl
arpl
pop
rep
jg
rcl
adc
popf
pop
dec
hlt
adc
nop
push
mov
xchg
lcall
popa
pop
mov
sub
push
clc
mov
mov
add
dec
int3
jbe
inc
jmp
fsub
cmp
ja
imul
aas
add
push
cli
xor
repnz
cmc
or
jl
add
cmp
imul
loop
mov
test
and
gs
rcrb
outsl
test
jmp
aam
pop
sti
add
push
and
mov
mov
scas
cmp
mov
mov
mov
insb
sarb
inc
mov
xor
lock
xchg
pop
xor
ljmp
outsl
sub
adc
xor
hlt
shlb
in
lods
fwait
xor
test
orb
push
jo
push
xchg
pop
daa
and
cmp
gs
fcomps
pop
andb
out
cvttps2pi
aaa
call
enter
nopl
mov
subb
mov
or
pop
cmpsb
sbbl
mov
pop
mov
xchg
jo
into
mov
sbb
and
fnsave
ja
mull
dec
mov
ror
cmc
shrl
bound
xchg
lret
aaa
repz
sbb
orl
std
jo
lods
imul
les
imul
and
inc
outsl
sti
jecxz
inc
adc
aaa
pop
xchg
jg
or
loope
scas
adc
mov
mov
movsl
push
pop
sub
mov
cs
sbb
add
js
or
push
xchg
cwtl
adc
imul
psubsw
xlat
pop
stos
clc
sbb
cmp
push
pop
mov
inc
inc
vpsadbw
xchg
loop
cmpsl
sarb
lods
cmpsl
mov
mov
movsb
xor
or
cltd
iret
call
scas
cmp
sbb
push
inc
pop
lods
adc
js
aam
sub
jno
xchg
jmp
mov
bound
inc
addl
lea
js
and
je
xchg
std
sub
add
push
mov
adc
dec
lock
xchg
push
hlt
sub
cld
jmp
iret
and
insl
mov
xor
je
test
mov
add
pop
notb
mov
aas
lock
or
push
and
push
xchg
mov
imull
sahf
inc
subl
pop
rolb
addr16
mov
movsl
jecxz
sub
daa
cs
stos
pop
mov
sbb
sahf
jmp
inc
cmp
adc
aam
sbb
and
mov
xor
pop
sub
in
adc
or
xor
pusha
mov
cmp
cltd
enter
fnstsw
mov
out
out
mov
mov
adc
cmp
xchg
je
les
cmp
mov
fwait
adc
push
imull
mov
cld
ret
dec
gs
push
mov
cli
mov
mov
outsl
cmp
and
dec
bnd
pop
jo
adc
cli
sub
pop
jnp
mov
mov
inc
adc
xchg
rorb
mov
xchg
outsl
mov
leave
cmp
cmpsl
mov
jno
lret
scas
mov
sbb
sbb
xchg
fwait
rorb
sarb
sbb
stos
inc
pop
push
xchg
sub
loope
sbb
stc
pop
mov
orl
cld
sbbb
adc
sbb
sbb
mov
jle
movsb
ljmpw
xchg
sbb
adc
inc
sbb
jecxz
sar
fs
loope
inc
rcrb
into
inc
aas
fwait
or
movsb
mov
pop
sbb
popa
imul
mov
ret
fs
xchg
lods
push
lea
das
inc
lock
push
bound
roll
add
lcall
push
or
push
ret
or
shl
adc
nop
loope
adcl
stos
cs
cmc
mov
push
push
sbb
jbe
cli
sbb
mov
imul
push
and
inc
dec
jb
and
mov
bound
inc
lahf
pop
adc
mov
push
movsl
mov
jno
xor
ds
pop
sbb
aas
bnd
ja
clc
mov
xor
aaa
loopne
testl
and
xor
pop
inc
insb
pusha
test
xor
cld
or
push
jg
and
mov
arpl
xchg
shlb
dec
jl
clc
jg
aam
mov
test
popa
test
cmp
cmp
ret
xchg
mov
movb
pop
and
inc
xchg
notb
mov
insl
push
xor
cmp
mov
iret
or
inc
aaa
dec
ficompl
fs
repnz
fidivs
aas
and
cmp
sub
out
aaa
cmp
call
call
test
pushf
and
push
call
xacquire
pop
and
push
inc
add
cli
add
mov
push
push
and
sbb
in
fcmovbe
popa
in
mov
mov
adc
cmp
ds
test
mov
xor
lea
cmpb
inc
hlt
sbb
cmpl
lahf
movsl
scas
cmp
mov
mov
cmp
sub
insl
push
xchg
sub
mov
shl
js
mov
sahf
mov
cli
pop
cltd
mov
jg
hlt
mov
scas
fxch
shlb
cmp
sarb
add
shl
mov
mov
jmp
in
mov
loope
cmp
pop
and
pmaxsw
cs
inc
mov
mov
out
add
stc
inc
pop
orb
or
push
in
xor
nop
scas
movsb
ljmp
xchg
dec
xor
shrl
lcall
leave
js
jb
cwtl
lahf
inc
scas
aam
cld
xor
and
push
lods
imul
inc
test
or
scas
jmp
into
adc
or
ds
js
lret
pop
lcall
insb
cmp
or
ret
leave
in
aam
mov
sub
push
stc
adc
repz
and
xchg
and
mov
stc
sub
mov
add
push
sbb
hlt
inc
js
test
xor
cmp
mov
xor
pop
setne
int
xchg
fidivl
pop
cs
dec
cmp
lods
push
ret
dec
les
add
dec
cltd
test
or
xchg
dec
and
dec
clc
in
lret
inc
loopne
cmp
push
sbb
add
jo
loop
add
pop
mov
lods
idiv
add
cmpsb
stos
cmp
jbe
fstpt
xchg
push
xlat
inc
xlat
pushf
jp
das
int
sub
cmp
fisttpl
jbe
lret
push
enter
xchg
jge
mov
pop
js
xor
add
pop
or
xlat
xor
shrl
jno
mov
clc
in
xor
push
out
dec
lds
cmp
adc
cli
shrl
daa
xchg
lret
mov
scas
ljmp
sbbb
mov
lods
sahf
mov
mov
adc
stos
sub
shl
pop
scas
mov
out
jge
jno
mov
jns
push
shlb
xchg
cs
cmp
cmpsb
push
outsb
mov
stc
les
cmp
xlat
ret
push
dec
add
fwait
leave
xlat
mov
data16
xchg
sbb
xchg
xchg
or
add
jl
xor
mov
cld
std
movsl
lea
push
sarb
scas
stos
mov
fcoml
add
into
inc
cwtl
stc
push
mov
aad
test
xchg
out
fdivrs
xor
sbb
loope
and
or
sbb
push
nop
mov
add
popa
mov
mov
addr16
lds
popa
xchg
dec
adc
pop
dec
push
inc
pop
xor
mov
bound
loope
xchg
out
addb
stc
loope
lret
jmp
push
jns
mov
inc
shr
sbb
pop
paddsb
test
ret
mov
pop
fisubrs
daa
pushf
inc
ljmp
test
lods
dec
push
out
jge
dec
add
sub
stc
dec
mov
cltd
mov
push
sahf
push
imul
nop
loop
es
out
inc
xchg
pop
pop
inc
add
fs
jae
fisubl
sbb
icebp
add
outsb
pop
pop
lods
fists
test
aas
test
push
aas
jnp
cmp
in
mov
imul
pop
fs
sbb
aad
add
fldl
sbb
fidivrl
aam
jp
cld
pop
dec
scas
outsb
les
xor
repnz
xchg
pop
sahf
xlat
sbb
fwait
add
jmp
pop
fbstp
pop
xor
or
mov
divl
sbbl
ret
pop
cmc
inc
shl
sbb
dec
into
jle
jge
add
dec
js
and
jae
sbb
mov
xor
sbb
mov
cmpsb
or
mov
cli
call
dec
pop
jne
pop
mov
sub
rorl
loope
fcom
push
jbe
cmpsl
push
cmp
lods
xor
mov
scas
cltd
sub
ret
cmp
dec
sahf
lcall
adc
ds
cmp
jp
lret
lahf
add
or
dec
add
dec
call
pusha
pop
loope
xor
out
in
out
dec
xor
pop
enter
mov
rcrl
xorb
int3
jl
ficomps
or
ret
ss
loop
in
inc
cmpb
push
mov
lahf
mov
push
push
cmpl
sbb
mov
or
lret
xchg
dec
mov
sbb
add
cmp
pop
aaa
into
insl
xchg
jmp
mov
pop
xchg
rorl
cmp
jecxz
mov
sti
in
call
clc
sbb
in
loopne
add
ja
in
dec
pop
push
or
cmp
popa
clc
dec
and
inc
rorl
pusha
xlat
mov
inc
rorl
xchg
aaa
or
xorl
gs
xlat
addr16
insl
fs
jmp
aas
mul
lret
out
add
xchg
adc
into
in
shl
push
idivl
add
loop
sbb
adc
jecxz
cmp
in
movsl
rorb
xor
gs
popa
fcomip
or
js
icebp
out
cltd
mov
test
add
inc
repz
test
outsl
mov
nop
lcall
sbb
sbb
sbb
sbb
dec
lods
inc
in
mov
push
inc
add
inc
cmp
sbb
mov
sbb
es
xor
mov
lea
lahf
cmp
pop
sub
mov
jecxz
je
inc
push
jmp
cmc
jmp
pop
push
cmp
or
aas
sbb
mov
jge,pt
std
lock
cs
imul
xor
add
pop
ret
dec
xor
popf
adcl
roll
cli
cmpsb
das
pop
loopne
popf
nop
inc
nop
jecxz
mov
clc
jb
or
aam
add
add
xchg
dec
mov
stc
mov
imul
andl
push
push
pop
xlat
push
add
push
repz
add
add
adc
dec
sbb
push
aas
and
or
xchg
adc
add
das
mov
and
addr16
xchg
inc
popf
pusha
adc
js
jno
ljmp
pop
xchg
inc
int
and
lret
mov
dec
ja
cwtl
into
fstl
cwtl
mov
jle
stos
dec
icebp
jnp
out
jo
clc
std
cmp
ds
fmuls
push
test
pop
jno
pop
xlat
pop
popf
cmpsb
or
fs
mov
das
push
outsl
out
loope
jge
lret
movsl
adc
xchg
aaa
xor
push
mov
adc
sti
adc
aam
jno
sub
inc
mov
test
das
js
insb
mov
movsl
mov
stc
xchg
popa
jmp
nop
adc
mov
fists
push
repnz
fnstcw
movsl
ds
push
mov
and
repz
or
ds
out
xlat
mov
jno
xchg
fisttpl
call
push
jmp
push
lahf
xchg
enter
jl
sbb
repnz
jne
cmpsl
repnz
pop
cmc
std
push
shrl
add
mov
movsl
pop
dec
adc
and
loope
fwait
in
sbb
icebp
test
loope
push
sbb
or
mov
repnz
mov
push
aas
sbb
call
cmp
es
push
mov
xchg
adc
les
pop
push
fwait
jnp
out
xchg
int
push
in
neg
sbb
pushf
pop
fmul
inc
fs
repz
jns
cmp
cmc
insb
xor
dec
cmpsb
mov
cmp
mov
mov
mov
adc
fdiv
ds
add
test
fs
stos
and
gs
popl
xchg
push
movsb
dec
and
mov
xchg
data16
call
js
ds
es
sub
xchg
lret
gs
dec
push
pushf
xorb
inc
cmc
subl
inc
idiv
xor
pusha
iret
xchg
mov
xchg
nop
in
inc
mov
pop
outsb
xchg
aaa
fdivrl
inc
jl
mov
loop
pop
mov
cmp
loop
repz
nop
scas
and
push
pop
xor
or
mov
ret
sahf
xchg
mov
stos
std
jge
fcoms
dec
aas
mov
aas
int3
jns
mov
push
scas
push
cli
out
lds
and
cmp
and
or
dec
xor
outsb
adc
or
pop
mov
sub
sbb
test
das
ret
popa
fimuls
xlat
sub
popa
jg
lcall
pop
jecxz
xlat
mov
cli
test
mov
inc
and
add
push
mov
fldpi
pop
push
add
xchg
icebp
lret
stc
xor
mov
jns
dec
movsb
cmpsl
call
test
sbb
jns
or
scas
int
lcall
xor
push
push
xchg
scas
gs
jge
stos
jmp
push
push
pop
pop
int3
inc
mov
out
mov
push
add
cmp
add
pop
or
pop
mov
mov
jb
mov
fidivl
shrb
inc
sarb
ja
repz
mov
outsl
pusha
scas
mov
jp
es
cmp
push
mov
add
les
dec
add
hlt
in
mov
sbb
push
in
int
mov
cli
sarl
int3
add
insb
or
loope
shl
test
lds
fidivrs
and
mov
xchg
inc
mov
dec
jg
sub
or
dec
insl
dec
cmpsb
adc
xor
sarb
xor
jae
lods
push
xchg
dec
push
push
mov
sbb
into
push
xor
imul
push
mov
sbb
outsb
xlat
cmc
imul
cwtl
cmc
clc
pop
jno
adc
push
cmp
push
sub
sub
rcll
inc
pop
push
push
push
ret
jecxz
adc
pop
jno
inc
or
and
sahf
out
sbb
enter
ret
pop
daa
pop
out
hlt
sub
daa
sbb
inc
xchg
inc
fstl
cld
ret
hlt
xchg
jmp
pop
mulb
xchg
sub
fstl
push
scas
jp
lahf
addr16
dec
xchg
inc
sbb
or
cmp
mov
cmp
cli
mov
and
or
sbb
adc
add
mov
inc
fcoml
jns
scas
int3
jae
jne
sub
movsl
pop
outsl
rcrl
dec
mov
add
xor
xor
add
lcall
or
enter
xlat
sub
scas
mov
adc
fs
outsb
sbb
and
push
mov
xchg
sub
popf
pop
xchg
je
wrmsr
dec
inc
hlt
add
shlb
das
mov
lods
push
pusha
pop
mov
push
jl
cmp
subl
xorb
cmp
imul
sub
inc
loop
clc
adc
jmp
fwait
sbb
push
jecxz
mov
sbb
jmp
bound
sbb
push
cmp
lahf
shrb
lock
std
out
cmp
mov
xor
jle
sarb
subl
mov
out
adc
cwtl
ret
push
jne
and
jae
fisubl
scas
xchg
cmp
adc
mov
mov
mov
pop
and
push
int
sub
daa
pop
mov
xchg
icebp
leave
xor
dec
fldcw
mov
in
fldenv
xchg
cltd
imul
stos
in
pop
notl
pop
cwtl
ret
cmp
in
pushf
or
mov
insb
jbe
jle
ret
push
mov
xor
add
jmp
lcall
jl
sub
jle
or
ljmp
rclb
out
jg
shlb
rcrb
inc
mov
cltd
dec
pusha
test
sahf
sub
sbb
xor
mov
in
push
ljmp
addr16
jge
mov
xor
pop
stc
pusha
pop
xor
decl
mov
jmp
inc
cltd
mov
mov
clc
mov
dec
add
mov
test
push
push
mov
push
hlt
push
loop
pop
xor
movsl
mov
dec
shrl
lock
test
jecxz
dec
out
and
inc
xor
cs
push
movsb
mov
sub
add
pop
cmp
orl
popf
dec
xchg
sub
adcl
dec
popa
aas
sbb
pop
mov
insb
stc
inc
insl
jae
xchg
orl
rcl
sbb
mov
pop
or
xor
into
arpl
mov
ds
cmp
mov
inc
or
sbb
in
pushw
sub
sub
gs
and
mov
jo
ret
sbb
cmp
adcl
mov
pop
pop
je
popf
or
or
jle
xchg
dec
cmp
test
jo
mov
movsb
push
cmpb
into
xchg
lea
jnp
movb
cwtl
jl
dec
and
aad
push
ret
idivl
or
inc
mov
imul
push
test
and
inc
bound
ficomps
sbbb
push
mov
mov
jecxz
out
lret
xor
push
adc
aas
mov
movsl
sub
dec
fldt
add
sub
scas
sub
sub
mov
aas
mov
cmp
add
int
mov
cmpsl
out
dec
fwait
and
lcall
dec
or
sahf
aam
cmp
fs
fcmovb
loope
mov
lcall
mov
mov
push
lods
psraw
inc
or
mov
pop
sub
add
std
push
ret
mov
in
addr16
shll
fs
sub
add
cmp
push
sbb
sub
jns
insb
add
rcll
inc
add
pop
outsb
pusha
inc
or
enter
repnz
in
int3
and
inc
cmpsl
out
cmpsb
mov
lock
shrb
jecxz
inc
in
mov
push
mov
ljmp
out
push
loope
adc
push
ds
lods
xor
adc
jb
fisttpl
subl
sahf
sub
lds
out
mov
bound
sti
in
and
push
adc
popa
mov
pop
jecxz
loop
cmp
or
int
mov
mov
inc
cs
test
and
add
add
popf
xchg
mov
pop
ret
and
ds
out
cmpsl
xchg
dec
and
mov
push
jmp
add
ret
test
xor
or
jo
insb
dec
dec
dec
cmp
cmp
cld
addb
mov
jb
lock
lret
mov
mov
std
push
cmc
test
mov
arpl
push
add
sbb
adc
mov
cmpsl
or
jecxz
sbb
bound
cmp
shll
lret
pushf
sub
mov
mov
subl
jno
fisttpll
dec
mov
das
inc
and
add
jo
pop
fdivs
pop
data16
and
stos
mov
push
jecxz
dec
fldenv
or
and
insl
outsb
mov
inc
jbe
or
daa
xor
arpl
jmp
jmp
xor
push
fwait
inc
push
xor
and
jae
loope
fstpl
cmp
mov
cmp
arpl
inc
sub
lods
inc
imul
push
mov
fisttpl
dec
adc
sub
cmp
js
pop
cmp
sub
jmp
mov
stos
and
nop
jg
and
and
cmp
or
outsb
fildl
or
mov
shl
stos
mov
push
push
mulb
loope
jbe
push
dec
inc
pop
add
adc
jno
ljmp
out
les
xchg
cld
mov
jp
insb
js
int
mov
inc
cwtl
inc
cmc
xchg
ss
adc
mov
fildll
mov
and
addr16
fimull
xchg
cmc
or
fisubl
sbb
lret
fs
jg
nop
push
std
jae
enter
cmp
aas
dec
add
ret
mov
xlat
inc
inc
out
lcall
xchg
cmp
insb
js
cmp
scas
nop
mov
loopne
out
add
rclb
dec
lods
pusha
pushf
pop
add
sbb
adc
dec
sbb
das
mov
sbb
inc
out
sbb
bound
xor
and
in
outsl
das
xor
xor
pop
xchg
xlat
sarb
lret
jne
add
cmp
push
xchg
rcrl
imul
fidivs
jb
inc
sub
decb
dec
xlat
popf
sub
dec
aas
ja
pop
in
xchg
loopne
fsubrs
pusha
aaa
repz
sub
test
mov
les
jb
into
lret
jmp
fwait
mov
pop
lahf
movsl
aaa
lea
pop
or
popf
push
pop
add
jmp
jb
repnz
mov
aam
stos
pop
inc
lret
rorl
insb
in
inc
push
sbb
aad
aam
test
push
hlt
jmp
js
outsl
or
sub
orb
outsb
xor
jb
das
mov
xchg
movsb
sub
push
push
lods
ss
sub
jno
ret
adc
xchg
popf
shlb
dec
les
int
push
insl
mov
scas
sub
sbb
inc
dec
or
pop
mov
push
cmp
xor
repz
mull
jne
lea
push
jmp
jle
jp
sbb
icebp
lcall
mov
xchg
stc
mov
mov
mov
cs
xchg
mov
pop
xchg
mov
push
hlt
test
and
and
jg
push
in
in
aaa
pop
fcomi
ljmp
and
jge
pop
pop
push
mov
aas
pop
xchg
sbb
cld
jne
and
lcall
mov
push
iret
in
pop
cli
jnp
jl
sub
lret
adc
lock
scas
mov
pushf
inc
mov
fdivl
mov
push
xor
and
add
push
adc
out
cmc
mov
std
add
shrb
mov
imul
das
jne
add
add
lea
mov
fwait
cltd
mov
lret
lahf
xor
cmp
sbb
or
jne
hlt
sub
cwtl
lods
push
adc
pusha
stc
or
inc
scas
sbb
cmpb
push
gs
inc
sbb
pop
xor
mov
mov
inc
fiadds
push
pop
movsl
xor
cwtl
pop
pop
add
pushf
in
cmp
xlat
insb
gs
lock
mov
mov
jo
push
pop
test
dec
adc
push
xor
jg
cmpb
icebp
xor
mov
cwtl
dec
mov
push
jne
lock
and
loope
stc
sbb
sub
rol
out
and
mov
add
or
pop
push
nop
cmp
mov
or
dec
push
mov
pushf
bound
js
xchg
jb
jl
pop
mov
dec
fmuls
mov
adc
jae
icebp
mov
mov
stc
cmp
scas
sbb
and
mov
shll
subb
js
sub
jl
insl
jne
js
add
pop
adc
divl
sbb
sbb
cld
dec
mov
xlat
jge
insb
fnsave
imul
sbb
xor
add
cmpsb
jg
push
jp
sub
pop
imul
jno
aad
lds
shll
pusha
sub
inc
jb
arpl
push
mov
sti
cld
add
scas
sahf
lea
in
xor
cmp
pop
or
xor
push
add
arpl
mov
jbe
lcall
jnp
mov
mov
push
outsb
aam
mov
comiss
jecxz
seta
fs
sbb
and
push
data16
test
cli
add
ljmp
lret
inc
jne
cmc
ror
cmp
clc
fsts
sub
push
cmc
push
jb
loop
mov
jne
popf
and
adc
gs
adc
out
xor
aaa
lret
cmc
and
nop
adc
inc
mov
mov
cld
push
sbbb
jno
jl
xlat
push
movsl
test
mov
push
fsubp
mov
jp
scas
mov
repz
dec
cmpsl
xchg
cmp
mov
enter
test
ss
adc
outsb
ljmp
pop
pop
out
das
data16
mov
rcrl
cwtl
add
ds
mov
cwtl
test
mov
add
jle
cmp
cs
insb
sub
loop
test
cmp
leave
jns
dec
mov
bound
das
inc
pop
jge
test
adc
sbb
lds
add
cmpb
loope
mov
stos
cs
std
or
and
nop
pop
adcb
test
or
push
and
sti
xchg
mov
das
movsl
fnstcw
sbb
clc
xchg
jge
cmpsb
shlb
cmp
mov
jle
adc
mov
fistpl
ja
sub
cmpsl
sti
adc
stos
sbb
adc
fdivr
add
mov
out
fimuls
iret
addr16
mov
test
pop
adc
inc
jle
cmc
mov
jl
js
xor
aas
movsl
scas
frstor
rcr
in
fs
cmc
push
pop
jle
cmpsl
frndint
js
mov
cmp
sub
imul
jns
std
sbb
popf
lea
cltd
jno
bswap
and
cmpsl
jl
push
cld
in
cwtl
std
call
shrl
pushf
mov
hlt
dec
pop
push
cli
jo
les
mov
or
lds
mov
cmp
aam
pop
push
pop
out
sbb
test
mull
stos
into
mov
fimuls
jge
mov
cmpl
sub
outsl
lcall
lahf
pop
negb
subb
lock
ret
fimull
movsb
test
adc
jmp
adc
popa
push
test
mov
push
mov
sbb
iret
jecxz
cwtl
imul
les
rolb
jge
inc
and
aaa
push
xor
xchg
pop
lret
mov
shlb
insl
pusha
call
jl
push
lret
dec
fildll
inc
pop
mull
lds
push
or
push
pusha
sub
cwtl
xchg
iret
or
ret
xchg
repnz
and
fidivs
enter
push
out
stos
sbb
je,pt
adc
divb
frstor
xor
cwtl
cld
dec
dec
ss
push
jns
xlat
xchg
jecxz
or
in
mov
jle
mov
aam
icebp
sbb
data16
cmc
mov
jmp
sbb
lods
mov
jne
pop
jmp
sbb
mov
mov
jnp
in
movsl
iret
mov
mov
ljmp
mov
pushf
shrb
pop
aam
mov
jbe
or
scas
subl
adc
cltd
xor
ret
cs
decl
and
hlt
mov
cltd
push
lahf
inc
fidivl
sbb
inc
loope
inc
sub
inc
mov
jle
addr16
add
push
cmp
cmc
add
or
ja
jle
aam
mov
push
add
jo
push
cld
sbb
decl
es
fcmovnu
jnp
and
data16
rclb
jge
divb
loop
fists
sbb
pop
mov
mov
add
outsb
pop
fsubp
mov
mov
mul
outsb
inc
pushf
lods
pop
sub
test
divl
in
lods
aaa
data16
cmp
imul
lods
mov
sbb
jg
icebp
nop
dec
imul
lods
ja
addr16
mov
mov
or
out
mov
aas
jl
cs
xor
insl
pop
jg
mov
orb
cmpsb
stc
js
push
pop
lret
bound
xor
in
lret
jno
or
pop
mov
mov
lods
push
in
jbe
cmp
nop
push
dec
cltd
cmpsb
xchg
lea
adc
xlat
test
mov
in
add
push
inc
xor
scas
fs
sub
fsubs
and
pop
gs
mov
xchg
popa
bound
pop
push
mov
scas
cmc
adc
cwtl
jno
ret
jns
adc
dec
pop
cmpl
test
div
imul
fisttpll
add
pushf
jno
push
add
sti
push
out
cwtl
lret
mov
mov
addr16
adc
mov
fcmove
and
jl
imulb
add
sbb
mov
xor
aas
mov
pop
mov
out
lock
push
sub
pushf
movsl
les
clc
jae
hlt
jp
int3
xchg
out
pop
ret
mov
test
inc
add
dec
cmp
sbb
inc
sbb
mov
jne
inc
or
movsl
mov
fcoms
inc
pop
or
les
and
cmp
cltd
sbb
jge,pn
movsb
mov
scas
mov
hlt
cmp
lcall
sub
data16
push
scas
mov
adcl
add
insl
pcmpgtw
sub
jb
mov
sbbl
sub
xchg
mov
sbb
daa
xchg
mov
and
sbb
jb
cld
dec
pop
jmp
shrl
aad
lea
outsb
dec
pop
pushf
mov
iret
mov
and
sahf
shll
adc
stos
ss
repz
test
jmp
ret
cmp
pop
and
inc
mov
roll
mov
fbld
lods
xor
push
dec
xchg
fidivl
jle
iret
addb
gs
ficoml
fmuls
sahf
xchg
dec
inc
adc
lahf
hlt
sub
cld
mov
pusha
sbb
cmp
push
xlat
gs
push
add
imull
adc
decl
lea
icebp
push
mov
adc
xor
push
cld
repnz
xchg
jg
xor
mov
mov
and
pop
push
shl
je
cli
std
adcb
inc
jbe
xor
shr
sti
dec
repz
mov
sti
sbb
add
pop
dec
inc
mov
mov
jb
aad
mov
loop
insb
sbb
jge
aaa
fs
inc
mov
adc
push
insb
mov
mov
or
ljmp
cmpsl
int3
cmpsb
jns
mov
mov
imul
negb
mov
mov
sub
rcrb
or
pop
lods
xor
ss
je
pop
adc
sbb
cmpsl
popf
fimull
lea
or
fwait
mov
jns
call
inc
pop
jne
push
repnz
pop
aaa
adc
ljmp
pop
js
addr16
dec
in
cmp
std
sbb
outsb
test
lret
out
loope
jg
movsb
ja
aaa
lret
mov
mov
sub
hlt
add
or
popf
test
mov
out
je
mov
in
ret
mov
lea
les
daa
adc
jle
es
ljmp
aad
fwait
push
mov
mov
mov
pop
add
in
adc
mov
pushf
pop
pop
sahf
cmp
mov
mov
xor
or
sti
xor
adc
in
scas
push
imul
fwait
xor
dec
push
lret
and
and
push
imul
movsl
lret
nop
push
adc
or
popa
neg
or
sarb
or
inc
push
mov
xchg
das
adc
cmp
lcall
negb
jecxz
repz
and
cmp
add
xchg
sbb
popa
and
arpl
nopl
sahf
add
cld
pop
out
mov
mov
jno
add
jp
ret
stos
xchg
cmp
fbld
out
scas
into
pop
filds
into
pushf
jb
push
pop
mov
in
mov
add
sub
push
jne
mov
lods
rcll
mov
insb
or
lcall
lea
test
je
cld
push
divb
enter
idivb
loop
cltd
push
movsb
sbb
sub
xlat
sarl
sbb
scas
push
jns
push
jns
and
mov
or
fucomp
push
cmpsl
cmp
mov
test
jg
xor
and
cmpsl
lds
mov
sbb
push
int
or
inc
xchg
enter
mov
lcall
mov
mov
sub
call
sti
not
hlt
or
mov
sbb
inc
cmp
in
int
icebp
mov
xchg
sub
cmp
jg
pop
movsb
iret
cld
aas
test
adc
aas
clc
mov
cmpsl
cmpsl
mov
outsb
mov
fdivl
scas
push
inc
mov
mov
mov
adc
nop
add
stos
pushf
test
and
xchg
leave
mov
gs
mov
cmc
test
ljmp
cli
pusha
push
std
loope
js
stc
shrl
add
movsl
cmpsb
imul
sbb
jo
push
pushf
fiadds
shll
testb
adc
dec
orb
xlat
adc
xor
inc
popf
cmc
clc
adc
push
sbb
dec
fstps
or
push
shrl
fists
mov
push
inc
push
jmp
sub
mov
rcl
xor
popf
outsl
push
mov
pop
push
xchg
aad
mov
setp
sbb
mov
jns
xor
test
or
fsubrl
hlt
xchg
jmp
cmp
fmulp
jo
iret
stc
aam
sbb
sub
xor
push
or
mov
mov
and
rclb
pop
mov
scas
dec
lods
and
add
cltd
hlt
rclb
pop
imul
xor
psllw
insb
mov
in
nop
mov
faddl
in
jnp
mov
push
scas
push
cmovno
lds
xchg
add
mov
jnp
jns
addr16
mov
cs
xchg
stc
jne
je
ds
clc
pop
mov
insl
jo
jl
jmp
adc
pop
mov
inc
mov
cmp
pop
pop
insb
stos
cmp
shrl
bound
icebp
in
pusha
sbb
out
push
jae
rcll
mov
push
aaa
push
sbb
insb
fwait
inc
shl
clc
shll
pop
inc
movsb
adc
push
xchg
or
imul
movlps
mov
inc
cmpsb
pop
mov
and
mov
ret
pop
mov
in
mov
addr16
push
jmp
mov
inc
pop
div
cmp
push
sbb
enter
hlt
pop
movsb
mov
pop
lods
andl
push
out
xchg
flds
cmpsl
aam
filds
or
arpl
xchg
jp
or
push
sti
xchg
movhps
cli
push
pslld
fstl
mov
popf
out
rcrl
dec
cmp
in
in
xor
adc
insl
adc
test
in
into
fs
xor
inc
sub
add
rcrb
mov
lock
xor
push
add
and
pushf
mov
movsl
push
loopne
jbe
insb
sbb
lods
xor
jo
jp
jae
ss
mov
cli
stos
dec
into
les
lahf
inc
inc
pop
nop
push
cmp
lcall
sbb
lock
xor
icebp
leave
sbb
movsb
jns
fimull
insl
mov
lret
push
xchg
dec
cmp
xchg
out
push
xlat
out
aas
data16
mov
xchg
in
testl
and
cmp
in
jb
fiaddl
ds
cli
int
int3
imul
arpl
sbb
scas
repz
jmp
cmp
fcmovnb
dec
pop
jl
dec
mov
sahf
outsl
adc
dec
test
and
dec
lret
inc
shll
lret
mull
negb
pop
push
dec
mov
fcoml
and
xchg
fcomps
mov
sub
xor
xchg
mov
repz
mov
test
ret
out
outsb
mov
jnp
cmp
inc
and
push
jge
sub
ret
cmp
dec
sbb
xchg
jle
mov
push
or
mov
and
je
pop
fs
sub
or
icebp
mov
adc
cmp
inc
mov
jns
and
mov
addr16
dec
repnz
pop
pushf
mov
imul
inc
cli
jge
jb
lods
sahf
jnp
add
mov
inc
xchg
fwait
scas
aaa
ficomps
test
dec
jae
push
cmp
scas
popa
xlat
add
icebp
incl
fildll
scas
dec
mov
aad
lretw
mov
hlt
clc
lahf
push
add
cmpps
out
xchg
add
mov
fisttps
sub
out
xchg
cmp
push
subb
mov
imul
push
aas
test
mov
ret
aaa
test
repnz
inc
sub
add
mov
icebp
mov
mov
notl
test
xchg
test
xor
nop
out
jnp
fbld
xor
fnstcw
ret
jo
lods
into
adc
into
jnp
jle
sub
out
xor
sub
sbb
and
test
pop
push
pushf
jne
pusha
mov
nop
mov
push
and
sub
mov
cmpsl
fisubs
xchg
fnstenv
jns
or
inc
dec
dec
mov
aad
aam
leave
xor
jb
push
push
shll
test
movhps
and
fldt
call
mov
jno
stc
dec
fstpt
inc
xorl
add
mov
xchg
loopne
pop
adc
imul
push
push
fisubrl
or
lcallw
fs
and
mov
rcrl
ja
push
hlt
xchg
dec
stc
subl
dec
push
push
pop
enter
pushf
test
xor
outsb
and
and
fstps
jae
das
shl
das
or
adc
jns
xchg
xor
inc
std
dec
add
mov
jecxz
pop
mov
fisubrl
hlt
mov
icebp
mov
sti
mov
test
or
stos
movsb
std
out
sbb
test
cmp
xor
test
or
out
adc
jecxz
dec
sahf
sbb
enter
in
push
adc
cld
xchg
js
int3
mov
cmpb
insb
jns
sub
sbb
aam
sbb
sub
inc
leave
imul
push
inc
out
xchg
lahf
pop
xchg
jbe
mov
pop
push
inc
pop
das
push
push
dec
mov
call
test
fisubl
pushf
fisubl
lock
jnp
stos
xor
cltd
std
js
xor
push
test
xchg
pop
adc
inc
add
pop
sbb
jecxz
outsb
pop
mov
leave
jg
xlat
out
fs
pop
jne
out
xor
imul
fistpl
mov
add
clc
lea
pop
jmp
sbb
jae
adc
fistps
add
sub
or
roll
push
and
sbb
or
pushf
outsl
rorl
std
push
sbb
pop
or
lahf
pop
fldcw
dec
mov
cmpsl
out
or
mulb
mov
decb
ret
xor
xchg
lahf
lods
push
and
adc
pushl
push
adcb
addr16
xor
add
decl
adc
cs
jbe
loop
imul
xchg
jg
mov
sub
inc
mov
dec
outsl
pop
sub
cltd
fildll
pop
pop
in
add
pop
aam
lret
pushf
imul
shll
test
fmull
dec
fs
sub
shll
into
int
cld
xchg
mov
repz
fsts
test
or
xlat
fmull
mov
std
push
adc
pop
pop
into
iret
dec
or
inc
mov
jmp
std
dec
and
jecxz
hlt
xchg
or
sahf
gs
fbstp
add
lds
rcrl
out
ret
mov
cmp
repz
jae
shll
cltd
lds
in
in
xor
sbbb
cld
inc
xchg
push
dec
push
mov
jge
push
out
out
jmp
das
pusha
les
lcall
pop
or
push
add
hlt
adc
mov
jge
rorb
lds
repnz
shlb
mov
pop
sub
sbb
aaa
sti
cmp
lock
in
int3
daa
imul
jp
subb
cmp
pop
add
rolb
xor
lret
mov
fbstp
jno
sbb
cmpsl
adc
inc
fwait
sub
fstpl
in
and
fistpll
js
std
mov
jb
lcall
xchg
and
lret
and
aas
lret
out
lret
ljmp
imul
inc
pop
imul
das
outsb
cwtl
mov
xchg
pop
lods
sub
mov
mov
mov
scas
push
add
jns
daa
dec
sub
in
or
pop
ljmp
push
inc
sbb
pushf
aam
pop
sbb
mov
push
sti
pop
jg
jl
pop
dec
xchg
add
pop
and
mov
cmp
xchg
pop
sti
pusha
icebp
xchg
jle
cwtl
inc
mov
cltd
loop
dec
aas
adc
ja
xor
test
inc
ljmp
pop
adc
filds
fistpl
aas
pop
stc
pop
xor
mov
sub
lea
mov
gs
jge
dec
fmuls
pop
out
sbb
ss
fstps
mov
cltd
vxorps
mov
pop
add
mov
mov
cmp
push
or
test
fstps
in
sti
add
scas
movsb
xchg
fwait
pop
xor
and
aad
mov
das
push
cld
xor
jge
mov
xchg
mov
push
gs
xacquire
loope
lea
into
xor
pop
movsl
xchg
nop
push
test
cmpb
sub
lods
or
push
sub
enter
sub
jns
cmpb
adc
xor
pop
pop
push
dec
in
jns
iret
iret
rcl
mov
lcall
orl
push
test
jnp
jne
pop
cmp
fs
lahf
ret
imul
push
push
popa
sub
in
lahf
sub
xor
lods
stos
sub
repnz
xchg
jge
cmp
and
and
push
and
and
pop
mov
ja
iret
jae
adc
sti
clc
pop
or
nop
addb
lret
loop
ss
mov
outsb
cmp
sbb
loop
out
cmp
xchg
test
cmp
sahf
les
dec
aam
call
push
shl
push
mov
and
mov
int3
cmp
ficompl
sub
pop
dec
iret
push
shl
xchg
std
sbb
jno
popa
cli
or
dec
mov
loop
cld
aad
jns
out
or
sbb
jne
or
repnz
test
mov
push
jnp
loopne
jno
adc
out
cmpsl
fnstsw
push
jg
inc
jno
addl
ss
cmp
xchg
push
xlat
out
jle
inc
xchg
mov
outsb
ret
mov
jno
ror
fiaddl
pusha
mov
ljmp
ret
repnz
or
insb
mov
adcl
adcb
or
mov
xchg
add
shrl
fbld
aas
xchg
icebp
dec
lahf
dec
out
jnp
in
mul
mov
jbe
movsl
fs
sbb
fisttps
inc
fstpt
xor
mov
pop
xchg
mov
sahf
test
fwait
sarl
sbb
pop
dec
sub
fsts
adc
or
and
xchg
mov
inc
sarb
and
lea
or
nop
adc
lea
mov
lds
or
std
lods
rcll
xchg
add
movsb
pop
jo
icebp
xor
je
ljmp
aad
data16
sahf
xchg
xor
iret
push
or
sub
mov
stos
xchg
jae
fisubrs
mov
nop
cmpsl
jnp
pop
addl
jecxz
lock
or
mov
push
adc
dec
inc
mov
adc
aas
jo
sbb
sub
test
jo
and
mov
push
faddp
sub
push
cmpsl
or
je
cld
gs
adc
push
cwtl
add
and
xor
xor
or
mov
fldcw
cmpb
test
or
inc
pop
lcall
out
mov
in
fst
pop
lock
cmp
inc
cmp
ret
out
test
leave
int
stos
inc
scas
ja
mov
cmpsl
les
rcrb
pop
inc
cmpsl
hlt
xor
ds
enter
or
mov
jmp
rolb
add
sbb
add
push
mov
mov
and
mov
addb
imul
mov
out
cmp
mov
cs
xchg
xor
lock
ret
lret
sbb
pop
dec
dec
in
push
adc
mov
xchg
push
adc
xchg
mov
mov
sub
pop
pop
mov
mov
mov
cltd
xchg
faddl
cmp
sbb
repz
test
flds
dec
pop
jl
sub
jle
cwtl
add
mov
imul
sbb
xchg
dec
pop
sti
popa
ljmp
out
sahf
cmp
mov
mov
imul
lret
mov
pop
or
pop
jne
out
lea
iret
repz
loop
and
imul
aaa
lds
mov
mov
inc
inc
gs
cmc
mov
dec
xchg
dec
xor
sub
out
and
ds
xor
and
out
orb
into
rorl
arpl
adc
dec
rcrl
out
cwtl
movsl
cmp
mov
lret
mov
call
adc
jle
xchg
insb
in
daa
fidivrs
out
jle
mov
xor
lahf
pop
pusha
pop
adc
jecxz
lcall
adc
outsl
add
aaa
fidivrs
jmp
into
fadd
jno
push
andl
andps
arpl
mov
mov
leave
cmp
xchg
mov
into
inc
lret
imul
push
dec
subl
jne
dec
test
into
and
jno
pushf
lret
xor
and
cli
sub
jb
cmovl
je
jo
push
xor
les
xor
mov
scas
push
lods
lahf
mov
xor
mov
pop
cld
ljmp
arpl
jno
ds
lcall
movsl
jno
outsl
pop
ljmp
scas
xlat
outsl
pop
ljmp
sub
pop
repnz
adc
adc
cmpsl
mov
jb
imul
leave
jl
sub
xor
cli
fistpl
out
mov
and
pop
popf
or
sbb
push
push
popa
xchg
lods
mov
push
push
pop
outsl
push
inc
lcall
sbb
push
leave
cltd
mov
cwtl
xor
adc
mov
adc
sub
lods
outsb
sti
loope
adc
testl
cmp
pushf
lret
fisubl
pop
outsb
sbb
andb
sbb
jl
rcll
movsl
pop
daa
les
mov
dec
mov
xchg
mov
mov
add
incl
bound
mov
fiaddl
leave
push
cs
mov
hlt
cltd
mov
lahf
lcall
popa
pushf
adc
mov
lea
js
fidivs
mov
xor
iret
movsb
sub
mov
sbb
inc
mov
lock
mov
adc
or
xchg
jmp
mov
lret
ficoml
pop
je
popa
in
sub
xchg
je
arpl
mov
sub
imul
popa
test
sub
push
lock
mov
pop
out
out
mov
pop
stos
ljmp
dec
insl
jge
in
testb
stc
xlat
stos
outsb
xchg
sbb
mov
js
test
into
in
das
dec
or
mov
jl
nop
insb
xchg
fldenv
xorl
push
jg
addr16
mov
xor
xchg
pop
pop
imul
mov
xchg
popa
dec
scas
out
mov
mov
and
out
rorb
jne
lods
mov
mov
mov
xor
lahf
or
inc
push
dec
shll
or
jnp
sahf
xchg
adc
popf
xlat
add
dec
cmp
fistpl
inc
dec
inc
add
les
sbb
sarb
sti
into
cmpsb
call
jno
sbb
iret
push
lds
inc
push
repnz
cld
insl
mov
or
push
fimull
in
and
movsl
and
mov
mov
ss
push
mov
xor
shl
pop
mov
add
nop
mov
sbbl
shll
je
cwtl
inc
cmp
in
mov
sbb
sbb
mov
jecxz
shlb
in
push
and
mov
mov
loop
pop
add
shll
mov
mov
insl
lods
fdiv
mov
pushf
cmp
out
jno
push
sub
cltd
push
inc
std
popf
mov
les
dec
pop
cltd
je
xor
in
cmpsl
std
fmuls
push
repz
adc
test
xor
fwait
cmp
gs
ret
xchg
push
and
xbegin
mov
mov
scas
xchg
pop
mov
jmp
jecxz
idivb
icebp
sbb
and
push
push
and
mov
cld
repnz
js
jo
mov
pop
jle
or
out
pop
xchg
jnp
je
jl
mov
inc
inc
mov
mov
push
dec
cmp
std
xor
sbb
sub
inc
cmpsl
test
jg
push
popa
ljmp
cmpsb
mov
cmp
jl
nop
mov
es
popf
sti
sbb
adc
das
push
std
sbb
shld
int
jnp
in
pushf
xchg
aad
pop
adcl
and
inc
ficoml
sbb
add
sbb
sbb
pop
std
addr16
adc
xor
sbb
or
bound
mov
mov
mov
test
rorb
push
mov
xchg
out
mov
inc
cmp
jno
testl
push
movsb
mov
aas
popa
outsb
mov
movd
jecxz
adc
adc
inc
div
jb
adc
scas
xchg
repz
add
aas
pop
mov
es
jnp
sub
push
jnp
mov
lret
pop
insl
jecxz
jle
mov
push
std
aam
rcr
in
stos
cmpl
jecxz
xor
mov
or
mov
imul
pop
or
icebp
mov
jl
shrb
out
fisubrs
mov
stos
notl
pop
push
movsl
fsubl
inc
cld
pop
adc
xchg
mov
aad
fnsave
jno
pop
shll
push
jg
pop
lods
sub
in
mov
inc
ljmp
jb
jp
leave
sub
shlb
aam
xor
aas
mov
and
cmp
insb
and
adc
mov
addb
addr16
or
dec
adc
add
mov
imul
push
mov
fiadds
inc
fwait
dec
mov
or
pop
and
sahf
adc
xor
inc
add
mov
pusha
popa
push
pushf
sub
ja
mov
test
mov
push
push
jnp
mov
cld
sub
sti
repz
scas
inc
out
pop
inc
cmpsb
repnz
movsb
mov
pop
lret
daa
cmp
jns
movsl
push
push
repz
pop
sahf
and
outsl
sub
sbb
inc
xchg
mov
jns
jecxz
dec
mov
aam
jle
shl
repz
inc
mov
jae
sarl
popf
jmp
int
jecxz
xchg
mov
test
test
fs
add
jecxz
dec
lret
push
loope
movsl
cmp
out
aaa
cmp
pop
adc
movsb
adc
lret
jo
nop
data16
fildll
stos
mov
jbe
mov
in
jb
mov
sbb
mov
mov
jg
aam
pop
ret
push
out
repnz
nop
sub
mov
sub
outsl
mov
cmp
lods
out
push
xchg
cmp
inc
jmp
or
jle
xor
cmp
sbb
mov
loope
inc
lahf
pop
movsl
inc
sub
sub
cmc
inc
dec
lret
and
sbb
and
mov
mov
jne
addl
xchg
std
int
inc
dec
xchg
xchg
mov
ja
adc
add
sarl
das
adc
notb
leave
fildl
mov
mov
or
cs
sahf
adc
mov
push
aaa
cltd
cwtl
pushf
out
aam
cld
mov
scas
mov
lcall
in
ret
mov
jmp
and
or
add
sub
pop
push
inc
je
push
fcoml
js
push
jecxz
fnstsw
cmp
fadds
sub
out
inc
mov
add
dec
lods
aam
push
inc
clc
mov
std
xor
gs
fdivl
stos
mov
jmp
ljmp
xchg
js
cmp
mov
vpmacsdd
push
mov
in
cld
test
xor
jne
mov
nop
jge
pop
mov
loop
xor
or
mov
add
push
jle
mov
and
mov
pop
int
sahf
stos
xchg
dec
in
push
mov
pop
xchg
scas
pop
popf
inc
xchg
mov
dec
pusha
dec
xchg
push
std
dec
lods
pop
add
cmp
sub
jns
stc
shr
sbb
xchg
inc
in
bound
adc
push
xchg
cli
clc
scas
or
cli
insb
xchg
sub
in
pop
adc
mov
mov
idiv
je
sbb
pop
dec
cmp
sub
popa
inc
sub
dec
and
movsl
xchg
in
andb
int
mov
cmp
mov
xchg
sti
popf
popf
and
cmp
adc
inc
movsb
add
loopne
sahf
jbe
mull
das
mov
and
push
cmpsl
mov
in
pop
jmp
arpl
sarb
pop
mov
mov
rclb
pop
sub
push
xchg
and
ds
jmp
clc
or
call
lret
leave
arpl
xor
cmp
mov
test
jmp
repnz
jae
inc
fildl
roll
pop
mov
cmpsb
jno
popf
and
scas
lret
pushf
push
test
pop
das
jle
push
out
movsb
mov
lock
dec
mov
sbb
testl
shrl
pop
das
mov
ja
sub
sub
dec
push
or
lahf
insb
add
subb
sbb
inc
xor
lods
xor
aad
mov
fnsave
cmp
int3
push
sub
xchg
jae
jo
loop
mov
imul
push
mov
pop
loop
test
jns
adcb
insb
mov
push
jl
push
jnp
sub
add
mov
pushf
scas
imul
inc
mov
mov
icebp
mov
push
mov
mov
jle
test
adc
cmp
xor
sar
insb
dec
ret
jmp
xchg
sbb
in
add
sub
sbb
mov
and
mov
xor
adc
bndldx
sbb
mov
in
les
enter
scas
lods
scas
xchg
push
jge
add
int
mov
fildl
dec
sbb
imul
xchg
add
fstp
pop
pop
shl
cwtl
mov
mov
test
scas
and
gs
xchg
mov
add
mov
mov
xchg
pop
fdiv
test
and
inc
sub
cmc
dec
xchg
add
and
outsl
jge
mov
lret
ja
mov
inc
mov
or
mov
jbe
scas
pop
mov
gs
adc
lds
rorb
push
addb
in
dec
mov
or
imul
dec
adc
daa
add
or
cld
mov
lahf
cs
pop
cmp
pop
sub
bound
pop
cmp
or
call
sub
fistpl
ret
xchg
lock
leave
xor
pop
jo
popa
movsb
dec
cwtd
cmp
push
lret
je
or
andb
xchg
adc
push
jne
shrb
inc
into
test
jo
sbb
stc
bound
and
pop
jmp
inc
mov
xor
arpl
jo
add
dec
fstpl
cwtl
dec
out
mov
jge
push
or
jae
xorl
lods
inc
int
xor
test
push
test
dec
out
mov
mov
repnz
push
or
pop
adc
mov
xchg
pop
clc
or
cmp
cli
dec
insl
mov
xchg
sub
out
fucomip
inc
loop
movsb
loop
rcr
jmp
pop
ret
js
jns
mov
or
adc
mov
cld
xlat
or
fcomip
lods
add
xor
pop
xchg
rol
adc
add
push
lret
jp
imul
jmp
std
dec
jg
dec
out
or
loop
mov
pop
inc
fldcw
push
pop
dec
add
cmp
aad
xlat
cmp
fs
jp
cmpsl
scas
fistpl
xchg
mov
and
xchg
pop
das
out
scas
jle
sarb
cmp
inc
fiadds
lahf
rol
les
and
out
xor
xchg
cmp
out
icebp
andb
cld
pop
cmpsl
cmc
fs
xchg
test
addb
push
fdivr
daa
rolb
sub
dec
call
inc
push
aaa
mov
push
sub
mov
ficompl
xor
jecxz
popa
mov
xchg
mov
cmpsb
mov
call
pusha
mov
outsb
xchg
leave
or
test
leave
lods
scas
cmp
pop
outsl
fisubrs
or
enter
inc
repz
loopne
inc
push
stos
outsb
out
pusha
and
add
sbb
jbe
std
les
mov
cli
icebp
add
gs
sub
or
mov
por
xchg
pop
aas
cltd
movsl
insb
sbb
je
je
lods
shrl
adc
clc
dec
cmp
pop
inc
xchg
cli
out
enter
fadds
mov
mov
repz
mov
xor
or
outsb
mov
ret
cmpsl
cs
sub
jmp
repnz
sbb
mov
in
pop
pusha
leave
popf
pop
mov
and
inc
test
jo
in
jecxz
or
negl
cwtl
xor
sub
repz
in
add
mov
fldt
idiv
bound
add
mov
or
call
mov
orb
dec
test
mov
lahf
jae
pop
mov
mov
pop
fmull
call
aam
push
jb,pn
fadds
enter
jmp
push
ds
outsb
imul
xchg
dec
hlt
psrlq
shrl
inc
addr16
push
mov
sbb
mov
mov
cltd
mov
and
or
pushf
repz
cmc
repnz
test
bound
and
mov
sbbb
push
xchg
pop
adc
aas
mov
jmp
rorl
mov
enter
ficoms
out
imul
ljmp
icebp
out
cs
inc
inc
les
call
lret
dec
out
inc
test
sbb
push
mov
ret
out
or
and
cli
sbb
mov
lcall
add
sub
cmp
test
pusha
cwtl
pop
xchg
daa
test
loop
out
jge
fwait
loop
xchg
shll
xchg
push
jo
pop
insb
adc
gs
test
xlat
imul
pop
pop
inc
mov
xor
mov
mov
jae
dec
mov
inc
mov
dec
in
and
adc
cmp
dec
cmc
adc
jle
jge
jbe
fiadds
xchg
gs
pop
ja
bnd
jbe
in
mov
xchg
mov
cmp
pop
push
outsb
mov
pop
out
cmp
nop
aam
add
jo
sahf
enter
adc
stos
imul
mov
orb
imul
dec
dec
aas
popa
or
push
cltd
jb
lret
adc
sti
dec
push
inc
out
popf
es
xchg
sbb
adc
and
cmp
pop
jb
dec
imul
aaa
or
mov
dec
mov
mov
jae
in
dec
lods
test
adc
cmp
in
leave
adc
sti
lret
ja
pop
neg
xor
js
fidivrl
push
test
dec
jnp
or
xchg
das
push
in
add
iret
outsb
push
mov
adc
mov
pop
sub
fldl
xchg
rclb
and
push
in
inc
or
daa
and
jns
ret
lea
movb
movsb
test
stc
add
test
vmovdqa
sbb
add
adc
enter
or
add
mov
push
adc
ja
mov
xor
dec
or
or
and
fdiv
push
lcall
inc
mov
push
jl
repz
sbbl
sbb
adc
add
fisttpl
int
mov
out
es
jnp
push
or
pop
sar
sbb
pop
xlat
dec
iret
int
insl
aad
out
sbbl
cli
in
lret
jnp
int3
jne
clc
int
cld
out
in
out
inc
test
jmp
add
xlat
stos
shl
aaa
lret
jl
nop
pop
fidivl
pop
fs
dec
xor
jmp
mov
pop
pop
pop
in
cmp
inc
jp
out
and
daa
lahf
jl
addr16
fidivrs
mov
rcr
jg
xchg
nop
loope
fisubrs
inc
xchg
dec
adc
pop
insl
das
lahf
mov
push
fwait
pop
lea
adc
adc
cmpsb
and
pop
fcoms
xor
jb
xchg
scas
sub
outsl
dec
lahf
das
in
in
xor
cmp
xor
outsl
aas
cwtl
xor
rcrl
add
sbb
test
adc
mov
cmp
es
pop
outsl
pop
es
inc
mov
push
test
pop
roll
rcll
sbb
cld
xor
testb
xor
push
and
xchg
out
push
movsb
cmpsb
jae
jge
dec
dec
pop
enter
mov
xchg
inc
pop
cli
imul
push
je
dec
xor
push
mov
fldl
cmp
les
inc
test
and
stos
add
inc
cmp
or
divl
xor
or
add
mov
out
and
sti
fwait
aas
push
jne
sub
dec
pop
out
dec
es
jl
add
scas
ds
divl
movsb
mov
test
call
add
mov
movsl
and
ficomps
pop
data16
imul
sbb
aaa
dec
gs
scas
jne
xchg
loope
cmc
inc
mov
and
out
arpl
sbbl
daa
lret
fmull
repnz
push
pushf
jbe
jmp
inc
pop
inc
pushf
mov
push
pop
loope
sarb
jecxz
subl
addr16
lock
mov
loopne
xor
ret
test
xchg
cmp
mov
xor
rcll
mov
dec
setnp
jmp
adc
psubd
xabort
ret
or
jnp
stos
push
inc
xchg
divb
test
adc
jns
jl
sbb
pop
pop
xchg
lcall
jb
pop
sub
cmp
inc
mov
mov
push
push
push
and
mov
xchg
sar
sub
scas
cmp
sbb
in
mov
dec
xor
andl
lods
rorb
push
movsb
and
out
int3
test
sbb
cmp
addl
sub
fisubs
ss
je
adc
mov
mov
xor
hlt
icebp
nop
and
insl
loope
jg
les
and
xor
xchg
outsl
psraw
dec
jns
lods
jns
dec
add
push
push
pop
push
dec
and
xlat
lret
test
loope
adc
push
mov
xlat
inc
lret
loope
push
add
and
add
cmp
or
mov
fsubr
add
pop
mov
and
dec
fdivs
sbb
pusha
sbb
xlat
ja
dec
jne
insl
push
mov
lods
fildll
divb
mov
jno
adc
xor
jae
push
xor
push
xorl
sahf
jbe
push
aaa
dec
enter
or
lods
aam
ss
mov
fucom
sbb
fildl
xor
sbb
jp
aaa
notl
inc
xchg
cmp
inc
pusha
aas
lcall
out
dec
push
lods
jp
jb
mov
xlat
add
into
jbe
mov
ret
hlt
jmp
inc
mov
dec
mov
jae
cmp
jbe
outsb
fsubs
mov
lret
testb
lahf
or
jns
repz
aas
and
je
sbb
fisubrl
or
sbb
enter
popf
aas
scas
test
lds
pop
adc
cmp
gs
out
cmpsl
lret
test
sbb
push
cltd
push
or
fidivl
movsb
out
add
xlat
cmpsl
jo
popa
push
mov
dec
mov
push
pop
sahf
mov
stc
sub
fimuls
mov
aaa
xchg
pop
cmpsl
out
outsl
jnp
iret
ss
gs
xor
jg
aam
ja
inc
in
inc
mov
pop
push
in
lret
mov
aam
mov
push
insl
lahf
shl
clc
dec
xchg
aad
xor
out
in
pop
xchg
jecxz
cmp
loop
xchg
lret
mov
mov
add
xchg
mov
cmp
in
shlb
add
xchg
lock
or
jg
leave
adc
mov
pusha
lret
insb
sarb
outsl
cltd
xchg
xchg
fcoms
adc
and
loop
xorl
fistpll
ret
adc
cmpsb
sbb
clc
int
imul
add
dec
enter
fwait
dec
pop
ret
repz
dec
popf
and
pop
push
shlb
mov
ret
aad
fwait
mov
insb
mov
cmp
popa
xor
mov
outsb
add
adc
loop
xchg
pop
add
aad
jle
jecxz
es
add
lds
lock
push
or
mov
jecxz
and
cli
inc
test
insb
cld
hlt
dec
mov
mov
pop
push
shrb
das
out
jg
aad
ficomps
aad
jno
xlat
out
sub
or
push
out
jo
inc
or
arpl
fiaddl
cltd
xor
jecxz
gs
mov
add
cmp
cmp
pop
sarl
jp
xchg
adc
sbb
push
scas
mov
in
and
sti
mov
jae
les
add
cmp
outsl
jne
sbb
and
dec
out
js
cmp
mov
mov
cwtl
push
sti
ret
mov
adc
jno
nop
jmp
fwait
sbbb
cmp
adc
jb
sbb
out
testl
push
or
xchg
clc
dec
insl
test
mov
mov
or
push
leave
sub
in
push
sbb
lret
ficoml
pop
enter
sub
fwait
and
inc
xor
fbstp
enter
mov
outsb
cltd
jnp
in
pusha
sub
js
jl
sbb
out
fucom
pop
mov
add
aaa
fcmovnu
in
loop
pop
and
enter
hlt
repz
fwait
push
or
xor
inc
lret
dec
pop
imul
aad
repz
jle
xor
movl
cmp
mov
dec
shr
mov
test
ss
int
hlt
mov
mov
inc
sbb
inc
xchg
repz
popf
and
sbb
test
pop
jns
cmp
cmpsb
mov
je
sub
mov
mov
faddl
xchg
add
push
or
lahf
int3
or
push
mov
push
pop
testl
push
out
xor
dec
xor
mov
xor
fists
repnz
push
je
in
fs
fcomps
lea
mov
and
mov
xchg
cmc
lods
pop
adc
push
insb
adc
add
xchg
fsubr
sub
pop
dec
orb
shrl
pop
stos
and
loope
arpl
lods
lea
and
sub
adc
stos
jno
rclb
idivb
sub
loop
mov
mov
stc
aaa
icebp
into
xor
pushf
roll
stos
mov
push
pop
int3
jno
add
subl
cmpsb
ljmp
dec
mov
mov
das
push
dec
push
popa
cltd
arpl
mov
xlat
rcr
jnp
inc
jnp
push
test
inc
dec
mov
adc
mov
pushw
int
clc
jne
mov
and
mov
and
das
push
int
popf
stos
sbb
pop
push
dec
jne
sbb
insb
hlt
lds
push
cmp
pop
scas
sar
add
mov
repnz
xor
fscale
pop
fwait
imul
sub
xor
push
or
fbld
daa
cwtl
mov
inc
iret
jmp
pop
pop
shll
inc
sbb
popf
lea
dec
xchg
enter
jae
mov
test
sbbb
shll
repnz
mov
xchg
inc
push
sbb
mov
ret
jecxz
inc
arpl
dec
push
loope
dec
fisttps
rcrb
sub
movsl
cmp
and
add
call
jge
ljmp
mov
fdivl
cmc
in
push
stc
mov
out
adc
inc
xchg
add
cmp
or
xchg
daa
mov
js
repnz
filds
sbb
sahf
xor
mov
inc
sub
adc
js
test
repz
xchg
inc
mov
xor
cmpb
cmpb
dec
and
dec
aam
jle
or
add
push
cli
aas
bnd
dec
ret
hlt
lods
cmp
dec
inc
inc
fnstenv
xor
lret
jle
xor
xchg
mov
loop
dec
mov
adc
xor
pop
imul
jle
mov
cld
repz
and
xlat
adc
or
lock
stos
xlat
push
mov
test
or
jae
xchg
push
dec
in
inc
ja
mov
js
outsb
sahf
push
adc
dec
mov
push
adc
ss
mov
mov
adc
dec
mov
rcrl
orl
shll
add
sbb
mov
mov
ret
push
inc
xchg
sub
int3
enter
xchg
shr
ljmp
fnstenv
jg
pop
frstpm(287
ret
sbb
mov
test
fildl
gs
adc
popf
das
fidivrl
mov
orb
testb
sbb
and
mov
ret
loope
je
pop
mov
pop
test
mov
pop
mov
mov
fcomip
sbb
mov
loope
xor
leave
into
mov
mov
jp
fnstcw
inc
daa
leave
add
adc
xchg
push
ficompl
int3
imul
jecxz
lcall
and
lret
mov
dec
xor
mov
push
icebp
stos
incb
mov
out
repnz
jns
in
xor
dec
jo
pop
fmuls
inc
sub
cs
clc
shrl
clc
int3
test
int3
sub
cmp
sbb
mov
mov
pop
in
xchg
jle
sub
lcall
test
xor
popa
inc
push
lcall
fcompl
xchg
aaa
imul
fisttpl
movsl
popf
out
sub
lcall
sbb
ret
pop
ds
pop
jle
add
repnz
push
dec
insb
sub
mov
sbb
push
xor
mull
subl
cltd
xor
sbb
in
mov
xchg
mov
cmp
cmp
in
xchg
inc
push
mov
insl
scas
push
inc
notb
fs
pop
jnp
or
cmpsl
addl
out
stos
mov
mov
pop
or
pop
ds
or
iret
fidivl
mov
mov
stos
push
sti
out
xor
lahf
sarl
pop
mov
xchg
loop
fldl
and
test
filds
pcmpeqb
bnd
fcoml
add
js
sbb
leave
add
inc
pop
mov
icebp
inc
sti
xor
testb
pmaddwd
sub
xor
popf
xor
lds
pop
mov
loop
imul
movsl
mov
fwait
xchg
out
xor
jmp
es
jp
decb
daa
jns
imul
outsb
dec
out
cltd
xor
popa
mov
pop
jb
sub
test
addr16
scas
push
jae
sbb
push
jmp
xchg
pop
pusha
es
xchg
xchg
mov
mov
dec
or
or
gs
mov
sub
cmpb
in
loope
inc
push
cwtl
icebp
shll
hlt
pop
add
cli
jae
cmp
loopne
lock
lea
cli
nop
imul
mov
pusha
jnp
cmc
rcrl
in
lds
in
shrb
mov
jg
lock
in
jmp
lods
imul
cmpsb
pop
bound
mov
mov
xchg
push
sbb
mov
call
gs
push
lock
pop
push
push
sbb
bound
outsb
inc
nop
scas
sbb
pop
mov
insl
punpcklwd
xchg
sbb
sub
mov
xlat
push
mov
xor
or
cwtl
in
out
out
mov
out
mov
inc
mov
adc
out
mov
and
xor
jecxz
rcrl
scas
out
fwait
or
pop
mov
jmp
out
and
nop
mov
std
jg
stc
and
popf
push
xchg
inc
repz
cmpsl
mulb
in
mov
adc
js
dec
adc
push
mov
inc
jg
or
lahf
add
jg
in
sti
jbe
or
es
js
sbb
xchg
mov
leave
mov
pusha
test
fistpl
jmp
mov
cmp
out
adc
rclb
mov
jo
jge
mov
ja
sub
nop
mov
divb
mov
or
and
je
mov
add
in
loope
ss
jp
jmp
ret
fwait
sbb
out
pop
in
mov
paddusb
fsts
mov
out
mov
stos
icebp
adc
lret
jnp
mov
bound
testl
lcall
sbb
dec
arpl
lock
adc
push
dec
add
mull
push
push
jle
ja
mov
cld
sub
fistpl
inc
xchg
mov
mov
mov
jnp
test
jns
add
cmp
imul
mov
or
jge
push
dec
ficompl
daa
jnp
mov
daa
or
test
pop
out
insb
in
xchg
jae
mov
les
jl
adc
lods
sub
test
call
sbb
xor
js
out
repz
out
repz
cwtl
push
inc
int3
stc
aad
push
repnz
test
push
sub
pop
and
stos
gs
dec
aaa
inc
add
push
cld
dec
loope
mov
movsl
flds
aaa
inc
fdivl
mov
int3
push
sbb
push
jae
popf
iret
pop
jne
data16
lret
outsb
xor
sbb
aas
hlt
imul
lret
jl
insb
and
mov
fsubs
lods
in
mov
push
mov
and
int3
aam
rclb
dec
ret
neg
mov
inc
and
mov
loope
subb
add
xor
aas
enter
mov
out
jmp
jne,pn
push
dec
or
lods
shl
pop
sbb
xchg
mov
loop
cld
clc
dec
xchg
movb
int3
jne
ds
push
je
dec
fsub
adc
cs
fnsave
and
dec
and
scas
lock
mov
jne
push
lea
int3
xor
arpl
lods
repnz
les
push
cmpb
jbe
outsb
sub
hlt
pop
das
dec
sbb
sbb
inc
lcall
dec
mov
fnstenv
arpl
test
mov
enter
in
clc
fs
mov
shrl
imul
push
cmpsl
xchg
orl
mov
test
cs
sub
fstl
mov
pop
push
mov
pop
ljmp
ja
mov
idivb
add
xor
xchg
mov
hlt
out
clc
pop
int3
das
pop
sub
pusha
and
jo
sbb
popf
pop
add
pop
fistl
fmull
dec
leave
xor
inc
or
hlt
and
aaa
inc
push
add
bnd
dec
mov
dec
popa
push
xchg
and
mov
and
xor
xchg
inc
out
pop
add
mov
push
inc
adc
push
filds
fldl
pop
jmp
dec
in
fsubs
clc
lock
xor
movsl
rcrb
fldl2e
ret
dec
in
mov
imul
add
loope
int
orl
imul
sahf
loopne
repz
fwait
sbb
cld
inc
repz
push
mov
cmp
fwait
or
repnz
test
ljmp
fiadds
fwait
test
xor
int
and
xor
sbb
aas
push
xchg
sbb
scas
mov
jb
pop
sub
bound
inc
xchg
pop
jae
jle
mov
dec
aaa
or
aam
pop
cld
shlb
push
ret
mov
inc
aas
sbb
xchg
lds
test
sbb
xchg
sub
add
xchg
inc
fsubrl
ja
ficoml
xor
imul
inc
and
test
repz
mov
aas
pushf
or
or
pop
imul
xchg
shr
cltd
jle
cmp
ret
jmp
inc
ljmp
outsl
pop
jns
lcall
inc
mov
enter
inc
jbe
andl
ljmp
xchg
scas
cld
jg
jo
or
loop
nop
es
lea
sbb
sbb
pusha
test
inc
imul
inc
cmp
mov
pop
mov
lret
lods
jl
mov
and
jb
stc
adc
fsubrp
sub
lret
xor
jmp
cmp
mov
popa
xchg
in
shll
or
aas
popf
inc
ficoms
leave
lea
xchg
mov
and
mov
repnz
add
sahf
aaa
repnz
ret
mov
movsb
cmc
cmpsl
in
movsb
jb
mov
in
aad
and
test
mov
xchg
mov
inc
inc
aad
jecxz
xlat
mov
xor
inc
lcall
pushf
loope
mov
fisubrl
dec
pusha
cmp
arpl
adc
mov
loope
movsb
bound
dec
rcrl
and
bound
stos
das
dec
cmc
mov
sub
cmpsl
gs
pushf
pop
call
lods
pop
sbbl
sub
movsb
jp
push
push
pop
or
inc
and
mov
fabs
mov
or
test
sbb
insb
add
faddp
cmp
or
rorl
add
adc
popf
cld
add
scas
int3
inc
cmpsb
add
push
imul
sub
stc
mov
jecxz
dec
sbb
jl
pop
dec
and
sbb
enter
add
adc
repz
sub
clc
sbb
lods
les
outsl
insb
ljmp
mov
push
or
pop
and
lret
pop
pusha
lods
nop
sub
mov
lods
mov
xchg
jl
stos
loop
aad
pop
das
rsqrtps
xchg
addr16
push
lock
inc
cmc
popf
xlat
lret
test
jp
repz
fdivl
cmp
mov
and
mov
and
stc
cli
pop
xchg
xlat
js
rep
xor
enter
pop
sti
push
dec
lds
mov
roll
jb
movsl
inc
out
cmp
fsubrs
mov
push
jg
fstl
mov
popl
js
mov
cli
cmp
test
and
gs
nop
adc
mov
scas
ljmp
push
or
enter
sbb
cmc
add
jno
dec
fcmove
adc
add
data16
insb
aas
movsl
int
jmp
aad
adc
hlt
dec
int3
push
mov
jae
pop
sahf
push
mov
lret
imul
out
movsl
stos
notb
mov
lds
outsb
cmpb
cmp
adc
outsb
push
roll
jae
pop
movups
pop
movsl
aam
push
sub
iret
in
out
lret
adc
mov
fcoml
popa
push
movsl
imul
daa
jl
jle
jne
pushf
repz
xor
jo
dec
aas
fdivrl
jl
clc
pop
push
stc
and
mov
and
hlt
mov
int
call
push
iret
je
leave
xor
mov
fcoml
xlat
in
mov
xor
mov
call
stc
testl
das
and
ret
pop
cmpsb
lods
jmp
add
andl
out
jbe
fstps
mov
cli
in
loope
fmull
xchg
sub
and
repnz
push
sub
lret
xlat
loop
inc
mov
addr16
mov
aaa
ljmp
movsb
cwtl
fcmovne
dec
stc
fld
mov
in
shl
adc
sub
mov
jno
push
dec
pop
imul
cmpsb
add
mov
aad
jl
hlt
cld
and
out
or
insl
outsl
popa
fnstenv
cld
xor
aaa
pop
pop
fdivrl
xchg
mov
in
fcom
loope
stc
mov
inc
jne
nop
adc
sbb
adc
cwtl
in
inc
loopne
loopne
in
lods
or
and
lds
cmp
sub
jns
jnp
fdivl
dec
jnp
adc
int
mov
test
in
icebp
adc
xchg
or
sub
adc
add
andb
out
jecxz
add
sbb
stos
dec
dec
outsl
lea
pop
push
ljmp
adc
mov
and
xchg
jbe
jae
cltd
daa
cmpb
xchg
xchg
pop
fstps
shlb
out
inc
nop
int3
jae
and
and
into
aad
hlt
jne
outsl
cmp
xchg
jns
mov
mov
in
cwtl
sub
cwtl
test
xchg
jo
aad
mov
cli
icebp
adc
jne
add
test
rcrl
jle
ljmp
lahf
es
movsb
dec
pop
jp
sbb
inc
push
dec
dec
jae
insl
mov
mov
not
addb
pop
rdpmc
or
pop
test
cwtl
xchg
int3
dec
cmp
incb
das
push
pop
pop
call
insl
mov
movsb
push
cltd
loop
mov
pop
sbb
pop
mov
and
fsubrs
test
out
lods
cmp
xor
mov
loope
aas
adc
je
push
js
jp,pn
shlb
mov
out
in
or
and
enter
in
mov
or
lret
cmp
addr16
test
outsl
loope
out
dec
sub
daa
inc
std
mov
cmp
inc
int
mov
mov
leave
and
jns
aaa
sub
fwait
sbb
xchg
xchg
jns
outsl
mov
dec
mov
jle
faddl
addr16
sti
inc
mov
aaa
xor
or
dec
mov
mov
fildll
daa
es
jo
mov
test
out
addps
js
cld
add
xchg
jg
lret
or
lcall
or
mov
mov
sub
sbb
int3
mov
fld
testb
add
add
sub
lcall
decl
movsl
testl
xor
ds
jge
fildll
hlt
popa
add
gs
mov
loope
fiadds
rorb
jp
cmp
sbb
add
lea
mov
jns
rcrb
lret
xlat
cmp
mov
lock
in
sbb
push
dec
add
sbb
movsl
outsl
sbb
repz
xchg
dec
divb
movsl
in
test
push
jnp
push
jg
mov
pushl
insl
call
or
sub
rcrb
data16
pop
push
pop
dec
std
xor
daa
pop
push
adc
scas
scas
daa
cld
test
ljmp
push
jbe
je
cmp
push
cmpsl
sub
cmp
push
xorl
xor
fstl
pop
hlt
rcrb
rcrb
cli
sub
add
or
xchg
mov
or
jge
jge
ljmp
pop
push
lret
sbb
in
ret
fildl
inc
or
in
jne
ret
mov
cmpsb
fcmovnbe
notb
or
cmp
inc
bound
repz
push
sub
into
dec
pusha
mov
adc
in
and
das
or
call
push
bsf
fdivrl
popa
int3
adc
leave
push
mov
sub
cltd
mov
loop
lds
pop
fbld
cmp
push
in
mov
lcall
ret
inc
insl
jg
mov
add
cltd
mov
fs
dec
cltd
aam
lock
push
or
xchg
cmp
std
add
pop
call
ret
out
or
psadbw
dec
mov
sub
pop
pop
jns
or
lods
mov
repz
mov
mov
jge
pop
jmp
ret
fidivs
push
jg
nop
rcrl
push
dec
fcmovnu
mov
movzwl
and
shl
jl
push
nop
aaa
mov
gs
sbb
jbe
inc
inc
sarl
sbb
xchg
jle
push
in
mov
lahf
jmp
push
and
inc
adc
hlt
jg
jge
and
pop
std
daa
or
xor
mov
scas
lret
scas
and
cmp
add
adc
and
mov
dec
inc
inc
add
sbb
lods
mov
add
or
or
mov
dec
mov
inc
ret
aas
shll
repnz
mov
mov
lods
cmpsb
loopne
int
sub
sub
outsl
daa
pop
dec
rcrl
cmp
dec
pop
fwait
pop
inc
cmp
mov
pop
or
enter
imul
mov
xor
or
jecxz
push
cmp
push
pop
popf
xchg
mov
cmp
shll
push
les
imul
or
insl
and
aas
sbb
rclb
xchg
push
loope
mov
mov
cltd
lcall
xchg
adc
out
pop
or
enter
das
sub
sub
pop
push
imul
sub
adc
lret
adc
testb
lret
xor
mov
add
xchg
inc
sbb
aas
jge
test
insb
mov
sbb
insb
add
fmuls
jae
arpl
mov
push
sub
xchg
mov
mov
and
push
sahf
add
and
pop
xor
aas
mov
mov
xor
icebp
mov
aad
mov
push
dec
xor
inc
pop
xor
adc
js
les
icebp
or
jbe
add
lahf
je
xchg
adc
lahf
add
rcr
mov
lret
mov
out
xor
push
or
add
mov
mov
push
incb
outsb
jecxz
adc
inc
adc
test
or
jbe
inc
push
in
push
jnp
sub
lcall
cmpsb
into
cmpsb
out
out
mov
les
adc
pop
mov
sub
adc
cmp
in
mov
pop
mov
divb
cld
dec
nop
xor
out
pop
inc
push
sbb
test
mov
enter
fwait
movb
mov
arpl
cmp
mov
cmpsl
stos
andb
or
push
and
in
mov
jp
out
sbbl
lds
mov
mov
int
setp
in
testl
adc
ljmp
xor
cmc
mov
loop
movsb
push
xor
les
dec
cmp
xor
arpl
mov
push
pop
mov
insl
inc
nop
mov
xchg
roll
sahf
mov
fnsave
or
sbb
adc
jmp
cld
das
lods
lret
shl
arpl
in
arpl
repnz
pop
push
mov
lods
ret
stc
sub
jl
jb
aaa
pop
out
insl
and
fimuls
out
xchg
mov
and
scas
pushf
das
inc
outsl
rclb
popf
push
push
inc
loopne
cmpsb
and
fs
int
mov
sarl
mov
cwtl
ret
scas
cmp
jmp
adc
test
xor
push
mov
push
fiaddl
xor
mov
or
add
mov
mov
adc
ret
inc
into
xchg
push
icebp
sub
xchg
out
sbb
push
cmpsl
stos
orb
pop
es
mov
fwait
daa
sub
pusha
mov
outsl
leave
sahf
ficompl
out
mov
cs
sub
cli
cmpsl
add
mov
or
mov
push
int3
add
sti
popf
stos
pop
xchg
mov
sub
test
lcall
xchg
add
imulb
jns
bound
repz
and
mov
test
and
xchg
std
mov
jb
mov
push
jl
test
call
sahf
sbb
pop
and
mov
test
insb
pusha
and
push
into
hlt
push
out
leave
dec
xor
aaa
ftst
incl
loope
jcxz
dec
add
andb
mul
imul
add
popa
mov
shl
pushf
adc
ret
mov
insb
dec
adc
pop
xchg
leave
test
xor
or
dec
and
dec
inc
xor
push
xor
pop
fwait
rcrb
xchg
mov
inc
andb
fimuls
outsl
xchg
push
xor
js
frstor
pop
adc
shr
mov
leave
loopne
das
jns
cmp
jae
sbb
jg
ss
lret
xchg
aaa
cmp
adc
jbe
int
aad
scas
test
ret
pusha
xlat
and
xor
or
mov
or
ret
cmp
mov
fnstenv
sbb
sub
pop
xchg
jle
popa
push
jns
inc
jl
cmp
stos
out
and
pop
popf
pop
cmp
fidivrs
xor
and
pop
test
jecxz
adc
push
jns
inc
aam
fsubs
hlt
ja,pn
xchg
lea
mov
or
push
cmp
jg
cmp
movsl
fistpll
sub
scas
fwait
or
movsl
xchg
gs
sbb
outsl
dec
scas
adc
pop
subb
xchg
das
xchg
jbe
jb
hlt
mov
shll
and
sbb
xchg
push
dec
mov
lret
test
mov
stos
add
int
cmp
lcall
jne
inc
fnstsw
dec
pushl
daa
in
push
xchg
sahf
fwait
aad
cs
popa
repnz
or
in
xchg
mov
loop
jno
xchg
mov
je
in
xchg
loop
xchg
movsb
jns
stos
jg
cmp
sub
push
mov
xchg
mov
nop
in
mov
sbb
mov
sti
lds
dec
in
and
int
push
jle
sbb
add
xor
stos
andl
outsb
or
sub
mov
inc
out
inc
add
and
lcall
les
jbe
dec
jle
lcall
push
fcoms
push
aam
popf
lret
mov
cltd
jnp
daa
in
push
lcall
jbe
scas
lcall
das
mov
test
loope
out
lcall
adc
pushf
mov
int3
sbb
idivl
and
in
pop
rcrb
inc
inc
jp
or
aad
mov
shrl
stos
out
jae
push
iret
bound
daa
cmpsb
test
sbb
loopne
sbb
add
call
outsl
mov
stc
scas
mov
sahf
je
js
mov
dec
cmp
ljmp
cmp
add
aam
adc
clc
pusha
aad
bound
pop
push
iret
inc
jecxz
cmp
aas
out
pop
ljmp
xchg
push
cwtl
inc
rolb
out
dec
push
jnp
loope
lret
jne
ret
loop
cmp
push
xchg
xor
popa
je
xchg
mov
sbb
sbb
mov
maskmovq
notl
sub
ret
out
fldcw
in
in
pop
ror
stos
pusha
js
mov
add
push
lahf
movsb
cmp
es
sarl
lea
push
cs
stc
test
cmpsl
jbe
push
jge
jmp
dec
int
cmp
cmp
xchg
adc
pop
dec
popa
test
jmp
jge
pop
hlt
imul
inc
stos
shl
lcall
inc
rolb
sbb
pop
filds
pushf
pop
sub
mov
jne
ljmp
xchg
pop
add
jle
sti
test
loop
sub
mov
je
jae
outsl
pop
sbb
add
shlb
pop
je
dec
adcl
loopne
shlb
dec
shrb
in
cmpsl
scas
lret
inc
add
mov
ficoms
pop
sbb
bound
or
in
repz
repz
in
ret
test
repnz
decb
sahf
and
cmp
shlb
mov
jmp
mov
xor
out
mov
pop
pop
dec
call
lods
sbb
ret
xor
and
mov
mov
out
sti
scas
mov
xor
push
mov
dec
add
jl
jnp
arpl
jns
pop
cmp
adc
int
dec
xchg
dec
dec
hlt
cmp
aas
xor
icebp
inc
mov
rorb
imul
sub
jp
mov
in
xor
cmp
lahf
faddp
lahf
mov
jle
cmp
inc
out
shll
sbb
ficomps
xor
sub
add
jmp
mov
inc
jecxz
or
jns
cli
repz
mov
sub
cmpsb
push
pop
in
pop
adc
sub
lahf
outsb
ss
xor
in
pmaxub
mulb
mov
push
xchg
sub
jns
mov
push
add
fcoml
dec
sub
cmpsl
lods
jne
mov
repnz
nop
and
fcoml
mov
imul
call
push
mov
clc
lock
xor
pop
aaa
fists
in
mov
test
dec
lea
test
mov
sub
xchg
popa
pop
push
add
cwtl
das
lcall
mov
int
andb
inc
dec
aam
or
jb
fsub
ret
jp
subl
xor
aam
movsb
xchg
mov
cmp
stos
das
pop
cmpsl
repnz
inc
fwait
and
mov
lahf
cmp
mov
cli
insl
mov
xor
or
ror
sbb
or
sub
or
pop
jns
add
lret
incb
sub
mov
xor
mov
xchg
lods
fs
add
lods
xchg
jno
bound
fldenv
hlt
lahf
inc
mov
popf
clc
js
leavew
lods
iret
into
pop
push
cltd
mov
or
pop
inc
cmp
sub
into
jo
xor
loope
popf
js
fidivs
inc
mov
scas
imul
sbb
cmc
fldcw
fcom
lea
xor
sub
lret
pop
ds
push
cmp
clc
and
cmp
sbb
mov
sbb
aas
adc
or
adc
mov
and
sub
in
out
leave
popf
pop
pusha
xor
and
mov
push
jo
cmp
stos
out
inc
xchg
cmp
leave
sbb
jae
xchg
xor
stos
mov
mov
das
and
jmp
faddl
int3
pop
xor
push
mov
xchg
in
movl
mov
xchg
fcmovnbe
jne
mov
dec
push
sub
inc
in
fildl
repnz
adc
cmp
jp
adc
test
dec
lret
mov
adc
rcll
xor
pusha
jns
add
push
adc
jge
aas
and
out
enter
push
sbb
fisubrs
or
sub
clc
mov
loop
sbb
cli
pop
jp
call
fnstsw
ljmp
sbb
push
call
nop
pusha
cmp
mov
cmp
xor
dec
or
repz
mov
imul
movb
movsb
sbb
cs
shlb
sbb
fcmovnbe
fwait
gs
inc
mov
and
mov
xor
sbb
adc
test
mov
out
or
adc
dec
mov
hlt
push
je
or
jns
or
arpl
and
jno
enter
cmp
mov
mov
scas
jne
sbb
psrlw
and
cmp
gs
scas
into
dec
cmpsb
ss
movsb
adc
xchg
test
test
clc
divl
jns
aaa
add
adc
stos
loopne
cmp
or
xor
ja
shlb
loope
mov
sbb
xchg
mov
call
imul
or
data16
mov
xor
call
mulb
sbb
fdivl
or
in
cwtl
push
inc
dec
sbb
out
inc
aad
fbstp
pop
lcall
pushf
push
cmp
adc
pop
add
jbe
orb
lock
xor
cli
xchg
adc
jns
and
fpatan
lea
jmp
jmp
in
arpl
inc
out
cmc
pop
sub
mov
cwtl
mov
in
sti
mov
ja
cmpsl
in
cmp
push
push
mov
mov
jge
sub
cmp
jmp
mov
xor
or
dec
stos
jne
cmp
insl
xchg
pop
xchg
jbe,pt
push
push
cli
mov
add
adc
sbb
sbb
ret
jmp
sbb
or
push
out
and
icebp
push
js
sar
mov
int3
lcall
imul
push
mov
mov
jne
pop
push
cmpsl
sub
int3
dec
pop
jnp
or
in
stos
and
iret
popf
push
inc
mov
or
add
cmp
mov
inc
jno
xchg
push
into
ret
xchg
inc
and
iret
cwtl
lahf
or
ss
inc
jg
aam
pop
rclb
aam
jmp
out
mov
imul
insl
jae
jmp
repnz
orl
lret
insl
xchg
addr16
jge
dec
in
aaa
jecxz
push
scas
xor
mov
repz
xor
mov
jmp
xor
cwtl
xchg
les
cs
mov
cld
mov
sub
cmpl
xlat
ror
jg
cmc
rol
and
nop
sub
xchg
add
inc
jnp
shlb
lahf
jecxz
popf
dec
dec
sub
pop
lds
insl
inc
mov
xor
mov
into
mov
adc
aaa
lahf
sub
pop
fidivl
dec
mov
xchg
stc
clc
add
jmp
mov
push
xor
xchg
bound
loop
bswap
aaa
cmp
xor
jno
call
sub
in
push
rolb
stos
sbb
mov
sti
sbb
or
popf
andb
outsl
jae
inc
cmp
xchg
cmpb
fidivs
mov
aaa
addr16
or
out
mov
jecxz
and
xchg
mov
sub
repz
ds
popf
dec
sub
jae
lcall
cmp
pop
mov
inc
mov
push
jmp
inc
lcall
add
sub
add
mov
std
or
xor
sbb
lea
xchg
es
mov
rcrb
andl
stc
dec
ss
ljmp
mov
jle
jp
test
into
fbstp
lods
sub
fildll
loop
nop
loope
pop
push
cwtd
cltd
pop
xor
xor
sti
push
jbe
mov
sahf
xchg
cli
inc
daa
imul
push
fsubl
cmp
add
pop
iret
jns
push
std
cmp
inc
mov
mov
dec
adc
repnz
or
lock
mov
lcall
or
out
jg
cltd
pop
in
jecxz
ljmp
lcall
sub
repnz
movsb
mov
outsb
fstpt
inc
insb
xchg
int3
std
js
pop
cmc
pop
jge
mov
xor
cltd
repz
sti
sub
cld
sbb
test
pop
es
pop
lock
and
sub
pop
clc
ljmp
neg
cmp
std
adc
movsl
cmc
dec
je
sub
inc
sub
xchg
add
lea
jl
or
int
movsb
cli
jbe
je
in
cmpsb
in
add
test
dec
out
xchg
popf
mov
pop
lock
mov
aam
lods
ds
mov
cmp
rorl
test
mov
jae
mov
mov
add
pop
pop
jo
mov
pop
push
shrb
fistpll
in
imul
cmp
push
mov
jle
stos
xor
xchg
shll
and
inc
push
add
sbb
xchg
mov
mov
push
rcrb
mov
push
shr
je
sbb
sub
add
push
sbb
iret
inc
xorl
in
xor
push
jo
mov
inc
addr16
adc
push
jg
pop
and
rol
xor
addr16
pop
adc
add
sbb
and
test
push
cli
mov
mov
in
push
addr16
jo
out
adc
ds
bound
outsb
leave
in
xor
inc
inc
clc
int
stos
dec
xchg
add
jl
sbb
subb
icebp
dec
int3
das
out
inc
fdivs
inc
pop
rcr
jae
xor
adc
pop
xchg
cmpl
lods
lret
addr16
pop
xchg
xchg
sbb
rcll
aam
xchg
int3
scas
mov
xchg
push
mov
aaa
mov
jnp
jecxz
sub
cmp
sahf
sahf
add
mov
lret
push
mov
sahf
adc
lret
and
sub
cmp
adc
push
xchg
pop
in
dec
push
xchg
into
xchg
pop
adc
ljmp
or
mov
add
sub
sub
sbb
lock
mov
imul
mov
inc
jmp
lahf
jle
ljmp
ss
fs
xchg
pop
ret
mov
and
ljmp
add
adc
int3
dec
aad
sub
int3
scas
roll
mov
fwait
rcll
jmp
inc
pop
and
out
xor
in
lods
rcl
aaa
sarl
cvtdq2ps
mov
and
lret
cmp
in
aam
ljmp
inc
or
nop
xchg
inc
pop
mov
dec
cmp
xor
enter
loop
repnz
cmp
xchg
adcb
mov
ss
flds
push
sub
xor
int3
jbe
sahf
push
leave
negb
xor
jae
loope
adc
adc
xor
or
jne
pop
cmp
and
add
jb
scas
in
sub
mov
imul
mov
inc
sub
sar
fidivs
mov
sarl
sub
mov
and
inc
insb
int
shlb
insb
sub
repnz
popa
ss
inc
ja
sub
and
stos
in
jge
and
adc
pop
jp
pop
imul
xchg
mov
fistpll
sub
popf
lea
into
aaa
or
rcrb
xchg
out
loope
cmp
mov
dec
scas
xor
inc
xchg
out
lret
dec
into
mov
iret
xor
pop
mov
lcall
adc
cltd
pop
or
inc
sbb
xchg
mov
test
dec
ja
push
aaa
imul
movsl
cmp
les
cs
or
fistps
ss
in
pop
mov
fst
pop
loop
dec
fcompl
int
jae
cmp
jge
dec
sub
int
lds
cmp
lret
dec
das
push
push
mov
addr16
outsl
xchg
xchg
sbb
test
mov
dec
jo
cmpsw
cld
mov
dec
pop
fsubs
popf
outsb
mov
push
adc
mov
out
sbb
add
xchg
xor
arpl
sbb
iret
cmp
testl
dec
stos
mov
loop
push
rcrb
in
in
shll
daa
mov
adc
ret
mov
add
or
arpl
shll
sub
int
notl
movsl
jne
dec
orl
jnp
sarb
add
push
rorl
sbb
gs
mov
lcall
pop
inc
daa
inc
jl
pushf
outsl
cmpl
jbe
js
pop
mov
into
or
lret
popf
in
mov
and
in
jmp
fcoms
data16
push
jae
cli
je
data16
xchg
pop
gs
pushf
idivb
ficompl
xor
stos
or
sbb
pop
push
jmp
scas
sti
dec
ja
pop
jb
enter
pop
lea
and
stos
pslld
pop
rorl
sti
mov
pop
mov
add
or
cmpsl
gs
add
lods
sbbb
out
loopne
jle
add
push
push
push
inc
mov
xchg
push
mov
push
jns
data16
fldz
in
and
mov
and
scas
test
jge
adc
jbe
int
xor
jne
push
mov
pop
cmpsb
cwtl
insl
fcoml
jecxz
xchg
fidivrs
inc
jg
aas
loop
xchg
add
fadds
jno
sub
out
in
inc
pop
sbb
std
pop
scas
mov
sub
mov
add
fndisi(8087
movsl
mov
xchg
mov
imull
fldt
dec
dec
clc
stc
fwait
insl
sub
ror
inc
lahf
dec
bound
dec
addr16
pop
xorb
xchg
faddl
jl
mov
sbb
mov
xchg
orb
adc
and
jle
cmc
and
insb
mov
imul
and
jbe
leave
sbb
aam
cltd
push
and
loopne
les
sub
lret
mov
sbb
lret
das
xor
sub
jnp
xchg
test
fcoms
stc
or
fxch
inc
int
push
movsb
mov
inc
ss
inc
add
sbb
mov
fcomp
loop
sub
fstl
ljmp
aam
xchg
fistpl
add
xor
mov
test
add
adc
xor
and
pop
cwtl
add
cld
ret
ljmp
xor
and
and
xchg
mov
mov
inc
scas
out
inc
xchg
xchg
push
les
dec
stos
or
pop
and
ljmp
rorb
fs
out
cmp
les
sbb
and
jle
mov
xchg
mov
xchg
or
scas
dec
mov
mov
and
mov
leave
mov
cmpsl
jae
lea
fwait
or
inc
in
cmp
shrl
sub
mov
movsl
pop
dec
pop
adc
in
fwait
inc
in
sub
mov
inc
daa
pop
aaa
int
incb
or
add
and
dec
dec
shr
jg
dec
or
dec
pop
adc
and
dec
jmp
sub
insb
fcomip
movsb
repnz
dec
dec
sub
jmp
inc
std
jp
lds
sbb
lods
xor
xchg
inc
jecxz
add
in
xchg
mov
sarl
jl
cmc
inc
jnp
push
sahf
push
dec
mov
xchg
push
pusha
cmpsl
shlb
adc
ret
and
loope
mov
sub
add
and
ds
xchg
add
mov
jl
inc
pop
jmp
xlat
icebp
sarl
in
cwtl
repz
fucomp
adcl
in
pop
addr16
dec
jmp
dec
ss
cmp
mov
mov
repz
cmp
stc
xchg
movsl
mov
jl
stos
in
test
out
in
fwait
sahf
rclb
push
inc
enter
push
pushf
push
rclb
test
mov
cld
fistpl
pop
lahf
xchg
in
addb
xchg
sarl
cli
data16
adc
gs
ret
and
rorl
push
mov
lcall
jns
add
inc
inc
loopne
sbb
and
inc
mov
push
call
xor
pmaxub
mov
sbb
mov
sahf
dec
jnp
je
push
and
inc
ljmp
test
and
pop
push
jl
jns
pop
aad
lcall
cwtl
dec
jl
shrb
inc
sar
orl
std
pop
cmc
lcall
jbe
and
test
mov
sub
int
leave
in
pop
sub
fs
pop
out
rorb
imul
push
outsl
mov
cmp
dec
pop
out
add
enter
sti
xchg
addr16
lock
sbb
inc
jg
dec
icebp
and
roll
jmp
test
aam
mov
xor
repnz
ret
jmp
inc
push
mov
notb
test
sbb
ss
sbb
mov
loop
idivb
push
sbb
jecxz
jp
cmp
fmuls
mov
sub
xchg
pop
push
nop
sbb
jae
pop
dec
adc
adc
and
scas
xchg
sbb
mov
dec
imull
xor
js
cmp
cld
icebp
or
jo
lret
xchg
xor
pop
xlat
cmpsl
mov
cmpsl
fimuls
iret
inc
mov
and
or
outsl
das
dec
aas
jecxz
popa
xor
push
adc
mov
push
mov
xchg
fisttpll
pop
mov
mov
mov
mov
neg
iret
and
aaa
xchg
popf
aad
add
dec
movsl
dec
pop
arpl
lea
and
adc
stos
xchg
pop
out
push
adc
gs
push
mov
mov
sbb
gs
mov
das
leave
xor
fwait
test
lock
cld
and
gs
dec
and
insl
pop
lods
iret
push
lret
xor
mov
cmp
fs
cmp
xchg
jno
mov
push
push
adc
lock
adc
repnz
scas
ja
push
stc
xchg
xor
fidivrs
cli
xor
movsl
push
fs
cmp
fstl
mov
mov
push
inc
hlt
flds
xor
rorb
sub
rcll
arpl
in
leave
dec
mov
mov
push
add
push
fmuls
rcrl
adc
fs
push
jne
loop
shrb
repz
subb
cwtl
sbb
mov
mov
mov
flds
call
outsl
sub
ret
mov
mov
mov
pop
xchg
js
aaa
stos
int
mov
int
push
pop
jne
jbe
insb
pop
adc
sbb
jmp
push
dec
popf
test
pop
fildl
xor
test
fisubs
shrb
and
testl
movsl
mov
pop
sar
lock
mov
adc
sub
popa
adc
ja
shlb
mov
fstpt
jns
dec
xchg
xor
mov
xor
stc
push
mov
mov
inc
outsl
cmp
add
adc
sbbb
popf
fwait
xchg
dec
fbld
outsl
inc
aaa
push
xchg
js
dec
adc
lret
jp
popa
je
cs
mov
mov
add
add
sbb
mov
je
adc
jo
dec
les
shlb
xor
xor
mov
andl
lea
sti
inc
loope
lods
xor
fisubrl
mov
push
sbb
sar
and
mov
decl
dec
cld
nop
ljmp
in
std
fadd
push
dec
lock
inc
jl
mov
xchg
enter
lds
jae
xchg
int
mov
ljmp
repz
pop
pop
mov
outsl
into
push
sbb
and
cltd
ds
cmpsb
inc
je
js
xchg
cmp
and
jbe
adc
lret
xchg
and
icebp
je
add
ds
mov
jl
mov
push
push
movsb
inc
adc
or
lock
loope
push
adc
shlb
loopne
or
fildl
test
fiadds
sbb
dec
lods
mov
jg
pop
inc
inc
sbb
add
in
and
jecxz
test
inc
jg
xor
cmc
loope
scas
mov
dec
lcall
push
jge
call
and
in
in
fdivs
adc
int
adc
nop
rorl
dec
addr16
push
mov
pop
xor
cmp
gs
dec
xchg
and
inc
or
pop
fadds
outsb
fs
idivl
mov
out
movsb
adc
xor
sub
push
jno
inc
nop
sbb
ss
jmp
orb
fidivs
and
add
pop
stc
add
sbb
mov
imul
pushf
cmp
xchg
rclb
sub
std
iret
jno
in
pop
fistpll
push
adcb
mov
dec
sub
sbb
jae,pn
sbb
les
insb
nop
mov
daa
jno
pop
xorb
pop
inc
hlt
cmpsb
test
pop
cld
iret
lret
jb
insl
mov
fbstp
sub
adc
call
mov
add
mov
aad
push
int3
xor
push
lock
adc
arpl
xchg
shlb
inc
orb
jns
cmpsl
cmp
scas
fsubrl
cmp
nop
icebp
dec
adc
dec
ja
addb
cmpsl
sti
pop
pop
cmpsl
test
mov
loopne
jno
mov
mov
or
sub
je
sbb
cmp
push
pop
mov
lcall
nop
and
inc
imul
jae
lcall
test
dec
xchg
jae
dec
repnz
shl
scas
out
fisttps
test
push
xor
mov
pop
mov
add
and
push
dec
push
jne
cmpsl
add
push
loope
push
in
pop
sbb
stos
adc
out
and
decb
addb
xchg
aaa
add
adc
xchg
mov
or
sbb
or
fsts
mov
imul
lods
or
and
insb
push
ja
scas
mov
test
pop
dec
add
sbb
xchg
lods
data16
mov
mov
push
mov
mov
movsl
sub
and
fsubr
rcl
fwait
dec
stc
je
pop
xchg
scas
imul
push
jg
dec
mov
addr16
dec
movsb
fsubr
in
stos
in
jbe,pt
out
mov
lret
or
mov
repz
pop
stc
orb
popa
clc
out
push
mov
adcl
ja
les
hlt
in
pop
push
mov
jmp
sub
cmp
cs
dec
pop
sub
lods
mov
dec
mov
sbb
sub
loope
mov
dec
adc
xchg
inc
cmp
cmp
lret
lahf
sub
data16
or
iret
xor
lcall
sbb
and
rorl
pop
mov
cs
cmpsb
mov
jns
clc
shr
je
cli
nop
ja
push
stos
das
leave
aaa
lret
sbbb
pop
xor
jmp
add
stos
cli
mov
jo
popa
push
mov
arpl
leave
jno
es
pop
stos
sub
mov
jecxz
inc
add
sahf
xor
mov
xchg
xsha1
cmpsb
leave
dec
int3
dec
cmpsb
fs
cmp
push
mov
in
add
xlat
and
push
decl
sub
fucomip
adc
adc
or
fs
xchg
mov
dec
or
lcall
jne
and
pushf
stos
inc
adc
test
lds
daa
jb
mov
fs
pop
and
test
dec
xchg
cmpl
lds
lahf
inc
adc
in
lcall
into
sbb
mov
mov
fs
pop
les
cld
mov
ror
pop
outsb
push
sahf
push
jbe
dec
xor
mov
ret
fcoml
pop
pop
stos
xchg
jbe
cmc
sub
out
imul
push
adc
iret
sbb
repz
xor
sub
cmp
mov
movsb
aaa
mov
jl
es
call
les
out
inc
add
enter
fwait
jl
sub
mov
xchg
add
mov
and
adc
data16
outsb
cmp
jb
mov
mov
movsl
pop
mov
fisubl
sub
aas
ljmp
lea
push
mov
lret
arpl
push
add
xorl
xchg
out
lds
push
sarl
jge
out
add
xor
aas
sub
mov
ss
push
stos
mov
frstor
jp
ljmp
std
jge
push
mov
add
sub
pop
pxor
inc
inc
inc
xchg
les
push
mov
dec
mov
sub
cmp
fimuls
lea
jmp
mov
cmp
and
addr16
cmc
popf
or
lret
push
mov
cmp
push
test
mov
push
popf
or
fisubrs
inc
and
je
test
fadd
in
jl
xchg
or
sbb
mov
das
sbb
or
das
loop
xchg
fmull
sbb
push
mov
xor
or
jecxz
cli
pop
xor
add
out
dec
in
popf
sbb
mov
ja
cmpsl
pop
sbb
adc
push
fs
repnz
sti
imul
int3
jecxz
pushf
lock
ret
orb
outsl
into
outsb
dec
or
cmpb
and
adc
inc
stos
cmp
loope
mov
orl
sarl
roll
jbe
push
mov
jecxz
movsb
addr16
dec
xchg
lock
lods
inc
pop
xor
pop
cwtl
cmp
ss
aas
mov
jmp
pop
mov
lcall
dec
leave
dec
hlt
jmp
cmp
dec
in
and
and
push
daa
loop
sub
push
adc
arpl
lea
loope
jno
pop
ss
mov
pop
dec
rcl
jo
pushf
jns
lret
pop
popa
bound
inc
cmpsb
dec
insb
xchg
pop
cltd
xor
xor
add
scas
mov
scas
mov
mov
je
mov
adc
iret
sbbb
dec
sbb
or
cmp
es
fcmovnb
fstl
cltd
negb
std
rolb
aas
mov
mov
aad
inc
xor
add
jge
pop
addr16
cmpsl
mov
lahf
mov
cmc
inc
push
popa
in
insb
jmp
mov
fwait
aam
cmp
mov
fcmovnb
shlb
leave
scas
ficompl
jae
arpl
mov
fistpll
int3
xlat
push
and
push
jo
lods
push
cwtl
push
popa
sbb
push
jp
in
add
fs
insl
adc
xlat
mov
sub
testb
dec
or
cltd
add
sbb
push
rcl
jecxz
out
xchg
movsl
mov
adc
dec
xorb
rorl
lret
aad
addr16
jnp
pop
pushf
cmp
mov
fldt
mov
popa
nop
add
inc
xchg
mov
mov
cmp
cs
push
add
cmp
call
into
pop
outsl
test
aas
out
push
push
pop
or
clc
sahf
loop
or
adc
sti
pop
cmp
mov
mov
test
xchg
aam
mov
push
jae
sub
dec
push
xchg
cmpsl
mov
rep
mov
dec
mov
jl
loopne
std
or
js
mov
movb
mov
mov
xchg
stc
xor
lds
lahf
mov
mov
fimuls
jne
scas
sbb
cltd
inc
in
insb
out
sti
adc
test
adc
xchg
pop
iret
icebp
and
push
outsb
xchg
mov
mov
jae
js
lods
cwtl
test
jbe
inc
sbb
js
mov
nop
push
sub
sub
jecxz
jecxz
fdivs
adc
hlt
movsb
addr16
xchg
dec
mov
gs
xchg
inc
push
shlb
sub
movsb
ds
pop
sub
lds
jp
out
mov
jns
push
mov
xchg
cmc
daa
push
pop
cwtl
and
mov
fists
xor
dec
add
adc
das
test
fsubrp
imul
imul
nop
xchg
pop
aam
imul
mov
popa
fdivrl
nop
inc
adc
pop
enter
sub
mov
lock
lock
mov
gs
add
jb
repz
loope
outsb
in
notl
insl
push
sbb
or
out
add
imul
insl
cmpsb
cmp
cmp
pop
pop
xor
push
fmuls
stos
popa
mov
sbb
mov
lock
lret
movsl
in
int
cmpsb
es
adc
dec
arpl
add
cltd
push
sub
jb
repnz
popf
cltd
dec
gs
psubsw
fistps
repnz
jp
nop
mov
inc
lods
push
inc
and
lods
sub
incl
sub
jmp
fwait
loope
stos
inc
repnz
jne
mul
aam
push
xchg
sub
adc
jge
push
add
loopne
jmp
sub
cmpsl
stc
nop
cwtl
add
movl
mov
pop
fnstenv
pop
mov
xchg
scas
add
in
push
mov
add
mov
aad
push
loop
cmpb
sbb
repnz
insb
fistl
cmp
out
mov
enter
xchg
jo
dec
lret
cmpsb
leave
stc
and
pop
and
mov
aaa
ror
mulb
movsl
enter
popf
push
loopne
loopne
jnp
or
std
push
fnstcw
out
roll
out
mov
aam
pop
adc
gs
mulb
push
arpl
dec
dec
dec
pop
dec
push
sbb
ret
rorl
xor
mov
stos
and
jecxz
sub
mov
cmovne
punpcklbw
sbb
pop
push
repz
cmp
movsl
inc
and
lea
scas
fucomi
cli
sbb
mov
fwait
xor
lods
push
and
in
mov
sbb
movsl
aam
cltd
ret
mov
and
int
int
jmp
mov
mov
push
aas
adc
pop
faddl
adc
lret
ja
mov
mov
sub
xchg
xchg
mov
aas
inc
inc
dec
scas
arpl
xchg
je
out
inc
ret
dec
add
str
pop
xchg
ret
mov
cmp
pusha
push
adc
push
push
jnp
pop
mov
movsb
jmp
vpunpcklwd
iret
test
fidivl
mov
clc
in
ljmp
stc
mov
add
xchg
aaa
cmp
xorl
xchg
gs
lods
cs
ficoml
mov
int
xchg
out
addl
insl
popf
popa
sub
cmp
ret
add
es
aas
imul
dec
rcrb
aaa
mov
cltd
lahf
dec
mov
sbb
in
fistpl
mov
jg
mov
lcall
int
frstor
js
add
lret
jnp
dec
cmc
xchg
outsl
or
cs
xchg
mov
sahf
dec
ss
iret
icebp
or
call
js
fwait
lret
int3
or
repz
push
mov
push
sahf
pop
cmc
or
out
jb
inc
pop
cmp
lock
xor
cmc
aas
test
sbb
stc
test
jge
dec
inc
inc
push
mov
insl
push
inc
xchg
fdivrs
pushf
imul
sub
movsb
cmp
dec
aam
enter
pop
mov
fisubrs
aam
dec
inc
loop
and
xchg
mov
ficoms
lcall
les
movsb
adc
aas
mov
jp
in
jmp
mov
mov
adc
push
orb
aad
xor
lahf
mov
popa
jecxz
mov
cwtl
pop
xorl
xchg
push
imul
push
out
or
mov
xchg
mov
stos
mov
jnp
xor
dec
push
jns
fidivrl
inc
add
enter
shll
repz
inc
sbb
pop
push
fwait
shl
mov
daa
add
pushf
mov
cltd
or
push
test
sbb
jmp
in
movsl
dec
xlat
leave
pop
lds
push
lahf
aaa
or
inc
xchg
xchg
cmp
mov
std
leave
outsl
ja
mov
test
shll
push
mov
mov
jae
mov
sub
das
xorb
sub
inc
sub
adc
mov
mov
dec
subb
lcall
test
lods
sbb
fstps
std
xor
and
jno
roll
cwtl
xchg
jae
mov
jne
cmp
ja
mov
std
push
das
pop
sbb
mov
call
sub
pop
jo
add
sarb
call
mov
js
mov
dec
fstpt
jmp
pop
xor
xor
mov
fisttps
sub
mov
jns
xor
or
xchg
mov
aas
lahf
aad
out
pop
sub
dec
mov
mov
es
push
fs
xchg
jle
xor
out
mov
out
test
xchg
out
sub
cmpsb
in
popa
cltd
inc
or
pushf
mov
out
inc
rcr
or
sub
pop
or
add
mov
sub
stos
pop
sub
sub
or
cmc
repz
outsb
shrl
xchg
cmc
mov
xchg
fisubs
inc
mov
scas
out
call
call
jb
lock
popl
in
sahf
adc
das
cwtl
es
mov
cld
jg
sub
inc
and
out
xchg
ret
iret
and
mov
pop
push
test
add
mov
ds
and
push
sub
dec
adc
fcompl
cmpsb
and
into
push
sbb
inc
leave
inc
shl
ja
xchg
and
jne
inc
cmpsb
xor
mov
jnp
jg
outsb
xchg
inc
cmpsb
pop
push
test
jbe
mov
cmpsb
jmp
sub
dec
shll
sub
cmp
mov
cmp
push
inc
and
out
test
push
nop
mov
fiadds
cmp
xor
cs
dec
jle
int3
sarb
test
cli
push
in
shlb
arpl
mov
xor
lods
add
jo
xchg
pop
iret
push
mov
int3
adc
push
mov
dec
jl
mulb
pop
pop
ret
aam
vmovaps
jo
out
mov
cltd
add
stos
dec
mov
jno
iret
mov
in
shl
cmpsl
push
xchg
cmc
xchg
or
repnz
xchg
or
loopne
cld
pop
inc
sti
ljmp
sbb
or
xor
loope
push
ss
movsb
iret
lea
daa
cmp
test
imul
aaa
int
cmp
mov
jae
fcomip
into
mov
adc
rolb
inc
sbb
popa
or
push
cli
mov
mov
and
jecxz
xchg
mov
addr16
roll
scas
push
outsb
dec
lock
pushf
jecxz
cwtl
mov
adc
push
inc
in
test
add
leave
adc
mov
push
mov
movsb
mov
nop
sbb
sbb
roll
or
xchg
pop
mov
repnz
aad
or
sbb
adc
aad
sub
mov
xchg
daa
dec
mov
mov
jp
cmpsl
mov
pop
or
xor
sub
je
test
xchg
mov
push
aas
push
adc
jmp
loopne
push
mov
sti
push
in
xchg
scas
xchg
cmp
dec
outsb
cmpsl
cmp
jmp
je
cmp
adc
fisttpll
sbb
repnz
sbb
or
test
cltd
jo
pop
or
std
and
iret
and
push
xchg
loopne
inc
ficompl
or
dec
push
mov
push
xchg
fadds
mov
and
das
jmp
jp
push
mov
push
adc
ret
pusha
mov
or
push
cmp
subb
rcrl
adc
sub
incl
jno
aam
arpl
mov
popa
xor
mov
pop
push
subb
mov
ds
jae
faddl
xchg
jno
pop
fildl
or
out
inc
cs
test
push
xchg
ljmp
mov
push
fists
mov
inc
dec
cli
repnz
and
mov
rcr
movsl
sub
mov
fdiv
mov
sub
push
cmpsb
mov
adc
push
push
stc
push
add
push
lock
les
enter
jo
adc
fmuls
in
sbb
inc
outsb
jl
in
out
subl
add
fidivrs
jbe
std
cmpsl
push
lods
fcmovnb
mov
pusha
lahf
pop
in
fmull
insb
add
ds
mov
push
xchg
inc
dec
cmp
xor
je
xor
push
mov
mov
or
jge
addr16
xor
rcll
lcall
loopne
sub
repnz
mov
aaa
aaa
int
or
and
aaa
mov
xor
jecxz
flds
inc
inc
lret
dec
and
add
sub
jecxz
stos
lea
in
bound
enter
fldcw
push
mov
push
lea
inc
xchg
adc
stos
dec
dec
js
xor
lea
rcrb
mov
dec
inc
das
out
pop
nop
aas
xlat
test
sub
cmp
sub
mov
or
pop
loop
int3
cmp
mov
push
jb
fcmovnbe
push
mov
xorb
and
add
cltd
jp
add
and
stc
ss
xor
fsubr
jb
mov
fs
nop
cmp
xor
add
dec
or
and
jno
inc
lds
mov
mov
test
push
push
int3
nop
dec
fsubr
cmc
mov
and
out
aad
cmc
fldcw
iret
loope
in
cmp
incl
sub
stos
ret
loopne
adc
add
jns,pn
xor
shlb
iret
enter
subl
add
push
int
lods
cli
mov
ret
enter
xor
cli
mov
stc
sub
mov
lea
mov
inc
mov
and
sbb
sub
jae
dec
adc
cld
cmp
mov
sub
arpl
aad
push
loop
jns
sub
mov
sub
mov
cltd
lret
push
adc
into
sub
mov
and
imul
mov
movsl
loop
addb
bound
jmp
jl
rorb
adc
stos
inc
mov
push
pop
lcall
push
in
dec
mov
out
in
cli
js
fistpll
jmp
xlat
push
push
gs
xchg
xorl
shlb
test
mov
mov
out
insb
sti
pop
mov
pop
lret
je
into
jo
icebp
call
sub
push
in
mov
fisttps
inc
dec
jmp
mov
xchg
xchg
push
je
gs
push
adc
push
jg
lret
mov
mov
mov
and
lods
mov
js
lahf
into
movsl
mov
insl
sub
cli
xchg
nop
call
inc
push
fbstp
mov
lcall
test
inc
popf
gs
aas
ds
fisubrl
fnstsw
jmp
call
pop
lock
call
stos
adc
add
and
jbe
mov
cwtl
aam
jge
in
fcom
lret
pop
test
cwtl
cmp
jmp
imul
aam
ret
cmp
xchg
lret
test
jp
mov
outsb
add
push
jmp
xor
cwtl
xor
imul
push
clc
rcrb
gs
adc
push
adc
xlat
icebp
jmp
push
ds
lock
jg
dec
mov
into
imul
dec
mov
pop
jb
push
sub
mov
mov
mov
mov
or
add
or
lea
imul
jp
aad
push
add
mov
fsubrp
stos
xchg
das
jl
adc
mov
sbb
int3
adc
xchg
or
sti
lock
ljmp
cli
jnp
adc
mov
pop
pop
pop
xlat
sbb
jns
push
mov
mov
mov
insl
mov
sbb
in
adc
stos
xchg
mov
icebp
xor
inc
decb
test
cld
lock
sbb
leave
pusha
lea
xchg
or
aaa
jns
ds
fbstp
adc
push
pop
cmp
inc
jmp
sub
notb
lods
jno
add
cmp
dec
in
adc
imull
pop
mov
lods
aad
cmp
inc
sti
data16
out
pop
or
arpl
roll
pop
fcomi
dec
jb
xor
pusha
inc
push
cmpsl
mov
test
add
fisttpll
out
loopne
ss
jb
and
movsl
mov
rol
dec
lock
pop
loope
test
jno
sti
mov
push
xchg
cmp
pop
shl
aaa
in
sbb
aam
xchg
cmpb
adc
mov
loope
shrl
mov
dec
arpl
outsl
or
in
pusha
dec
mov
mov
outsb
adc
stos
pop
in
fwait
lods
inc
or
ljmp
pop
xchg
and
loopne
inc
pusha
inc
fstl
mov
test
ss
inc
ret
gs
lcall
push
loope
mov
arpl
pop
gs
shlb
inc
mov
inc
fistl
stc
pop
inc
fstl
pop
scas
cmp
mov
mov
jo
adc
add
sti
jb
jecxz
mov
movsb
js
aam
mov
cmp
rcrl
sbb
imul
jmp
add
dec
xor
andb
mov
xor
pushf
adc
xor
sub
xchg
pop
in
les
push
jge
mov
add
dec
daa
aad
mov
sub
push
dec
pushf
adc
jno
dec
insb
inc
roll
outsb
shll
mov
outsl
imul
pop
das
add
in
dec
pop
cmove
in
cmp
lock
mov
dec
cmp
pushf
adc
ds
xor
adc
jp
and
repz
ss
mov
pop
cwtl
aam
jb
add
and
sahf
movsl
add
std
cmp
jecxz
aaa
pop
sahf
sub
ret
mov
shlb
cmc
cwtl
adc
movsl
dec
xor
pop
das
xor
or
xchg
into
xchg
and
outsb
or
cwtl
in
or
mov
test
popf
jnp
cmp
and
mov
push
popa
xchg
roll
mov
mov
mov
dec
insb
push
add
inc
lcall
std
cli
cmp
or
repz
cld
pop
mov
movsl
nop
mov
sub
leave
mov
xlat
fs
rclb
out
jp
nop
dec
fidivrs
popa
xor
arpl
cmp
push
dec
jbe
jns
arpl
into
mov
cwtl
stos
pop
mov
lods
orb
inc
inc
add
sbb
push
mov
inc
rcrl
pusha
dec
add
xor
jmp
data16
jmp
sub
sub
mov
push
mov
cmpb
push
cmpl
repz
sub
scas
loope
jnp
cmp
mov
sbb
jmp
ja
pushf
or
lret
sub
js
or
cmp
inc
xor
test
aam
sbb
dec
sbb
mov
psubd
sub
cmp
out
std
scas
movsl
pop
mov
sbb
or
push
dec
xchg
jp
enter
jne
lods
dec
mov
push
push
mov
sub
mov
inc
add
or
pusha
aas
sub
mov
and
bound
decb
sub
jmp
sbbb
mov
icebp
into
rolb
xchg
cli
lods
nop
cmc
mov
pop
or
sbb
add
pop
pop
inc
lock
adc
lds
adc
das
xor
dec
jecxz
aam
pop
xchg
andps
mov
xchg
bound
lea
leave
mov
leave
in
lock
mov
jmp
inc
mov
cmc
stos
dec
call
sub
test
lock
lea
pop
mov
xchg
dec
mov
pop
xchg
sbb
in
lret
and
bound
vmwrite
jo
jl
shll
dec
imulb
leave
and
or
cmpsl
jmp
movsb
lods
push
dec
add
mov
test
aas
outsb
jae
lcall
or
lret
mov
mov
jo
dec
mov
dec
int3
pop
mov
pop
sub
add
inc
jb
mov
mov
mov
lock
mov
enter
in
xlat
outsl
inc
mov
cmp
pmullw
dec
xchg
out
inc
arpl
mov
popf
test
aad
call
push
mov
mov
push
ret
outsl
add
stos
test
inc
adc
mov
in
dec
enter
inc
jge
adc
cmp
lret
es
into
fbstp
cmp
out
jg
dec
icebp
jl
sbb
fstpt
rol
arpl
dec
mov
stos
sub
and
xchg
xor
xor
mov
sbb
loopne
xchg
icebp
inc
inc
popa
icebp
adc
hlt
jae
push
xlat
lret
ds
xchg
shrl
xor
mov
ret
dec
jbe
push
sbb
mov
pop
rcll
xchg
push
sub
gs
loope
cmp
or
dec
out
xchg
popf
repnz
bnd
inc
xchg
jp
je
pop
pop
add
mov
jge
mov
inc
pop
pop
push
out
pop
dec
add
inc
popf
repz
gs
jge
xchg
mov
mov
inc
sub
enter
out
ret
push
or
movsl
xlat
flds
mov
fmull
or
pop
pop
aam
cmc
cmc
mov
in
in
shlb
push
sbbb
cmp
in
mov
mov
sbb
loopne
cmp
xor
mov
leave
push
jmp
lret
rcl
aas
test
pop
sbb
sub
xchg
sbb
cmp
scas
adc
fisubrl
add
loope
nop
push
insb
mov
inc
jnp
mov
cld
lret
adc
aam
mov
repz
icebp
call
fcompl
in
push
dec
dec
jno
adc
add
je
sbb
sbbb
popf
cmovb
or
daa
leave
jg
mov
adc
sub
pop
popf
sti
ret
arpl
push
dec
shll
mov
sbb
add
push
xchg
or
divb
xorl
xchg
mov
daa
repnz
fcmovb
in
sub
push
adc
mov
mov
shlb
in
scas
loop
pop
fcmovnu
xor
jae
test
or
cmp
aaa
dec
pop
pop
testl
dec
andb
movsb
push
cmp
xlat
mov
adc
cmp
insb
int
mov
andb
aad
push
mov
pop
cmp
in
imul
cwtl
lock
div
jns
sbb
and
dec
popf
bound
fistl
cs
outsl
fistpll
jmp
mov
ljmp
sub
add
mov
add
push
divl
adc
mov
jnp
mov
mov
call
add
xor
add
dec
divl
push
bound
lcall
or
mov
insb
aad
mov
xchg
jne
or
scas
and
sub
sub
cwtl
popf
add
inc
fs
mov
pop
repz
clc
dec
sbb
sbb
add
sub
adc
stos
aas
lcall
sarl
mov
fdiv
lock
outsl
push
lea
je
aas
out
add
cmp
pop
dec
xor
xchg
ret
dec
cltd
fadds
in
jl
test
aam
ret
mov
movsb
lret
dec
out
push
mov
mov
sbb
mov
push
adc
mov
adc
rcr
xor
jp
es
mov
pop
in
insb
and
fimuls
fiaddl
xor
testl
ljmp
jmp
push
out
wrmsr
int
mov
insl
mov
int3
daa
push
mov
scas
jmp
sub
pop
rclb
mov
push
sbb
or
adc
push
jo
addr16
ja
cs
mov
hlt
push
idivb
js
push
call
test
ret
sbb
cmp
or
add
cmpsl
add
dec
push
pop
fwait
outsb
inc
in
out
stos
dec
stc
xchg
test
xchg
push
adc
ja
xchg
xchg
mov
outsb
mov
dec
icebp
js
add
add
lods
repnz
lds
pop
aas
icebp
add
inc
dec
bound
repnz
mov
mov
push
mov
clc
push
sti
push
ret
pusha
xchg
and
addb
dec
aad
pop
jo
jno
add
std
dec
fwait
adc
or
xor
inc
popf
sahf
fisttpll
lret
jp
add
daa
cmc
sub
xor
and
push
ljmp
xchg
les
lret
add
sub
add
add
in
cs
cmpsb
jno
mov
cmpsb
mov
es
dec
cmp
or
loopne
jle
push
adc
arpl
int
es
jnp
jp
test
cli
cwtl
jl
dec
es
push
push
cli
dec
les
shll
push
leave
jbe
adc
and
xor
loope
daa
push
pop
lds
pop
cmpsb
inc
loopne
mov
mov
mov
push
or
rcrb
jo
inc
or
loop
cmp
flds
lcall
pop
inc
call
xchg
push
scas
push
pop
pop
mov
pop
leave
inc
jmp
aad
mov
jbe
xchg
in
shrl
mov
mov
sub
adc
lret
cltd
stos
and
jle
cmp
es
inc
pop
add
jb
clc
aaa
or
pushf
or
mov
and
and
mov
xchg
xchg
mov
cmp
pop
pop
sbb
out
mov
sbb
dec
mov
repnz
sbb
rorl
fadds
ja
jp
sti
mov
enter
negl
mov
mov
push
or
enter
stos
add
outsb
rdpmc
pop
pop
lahf
add
negb
stos
movsl
scas
pushf
pusha
cld
mov
js
xor
aam
sbb
call
cmpsl
fwait
and
dec
hlt
rcrl
pushf
xchg
scas
pop
jle
inc
data16
xor
out
stos
mov
sub
adc
mov
fldz
add
sahf
jbe
das
repz
fcom
push
sub
inc
jge
push
push
imul
andb
mov
lret
icebp
mov
dec
sub
lds
fs
sub
adc
gs
loopne
jl
sahf
enter
loope
jbe
ret
push
lods
mov
in
std
and
jmp
ret
cmpsb
fstpt
movsb
js
and
pop
push
cltd
mov
pusha
out
add
add
test
xchg
fldt
enter
in
dec
and
fsubl
mov
das
sbb
neg
lock
or
out
inc
push
jns
cmp
jp
movsb
cwtl
fwait
jno
in
mov
mov
jae
mov
fnstenv
mov
jnp
mov
pop
jmp
or
imul
jns
push
mov
insb
fwait
jae
aaa
sbb
les
jp
loop
mov
push
std
xchg
bnd
add
pusha
push
dec
jp
mov
dec
pop
pop
and
ret
mov
rclb
jno
popf
and
push
imul
push
and
mov
movb
sub
xor
add
or
jno
and
adc
outsl
xchg
sub
mov
mov
and
pop
mov
repnz
inc
popa
adc
and
loopne
mov
xor
sbb
fldcw
enter
sbb
xchg
sbb
mov
pop
pop
sub
out
mov
inc
jge
pusha
out
scas
je,pn
push
cmpsb
sub
mov
imul
call
enter
inc
fdivl
push
popa
fs
xor
mov
mov
cltd
repnz
stos
jl
loop
mov
int
sbb
jp
sar
inc
fwait
and
imul
or
and
out
mov
and
pop
add
and
and
add
xchg
push
int3
in
mov
pop
es
jne
jg
in
iret
lea
sbb
lcall
icebp
mov
iret
movsb
mov
dec
mov
pop
fwait
sbb
dec
xor
dec
movsb
outsb
push
jmp
les
push
scas
sub
pop
add
out
fs
push
pop
jae
data16
add
popf
ret
inc
in
cmp
imul
test
cmp
jae
adc
adc
jbe
add
xor
shr
pop
push
fcomps
ret
sub
pop
dec
pop
cmpsb
push
jp
sub
jmp
xor
fistpl
or
in
outsb
rclb
in
lahf
scas
sbb
add
sbb
xor
mov
sbb
mov
adc
lret
stc
cld
in
fs
inc
mov
xchg
add
movsb
or
js
cli
pusha
ret
cmp
dec
lret
mov
mov
in
cmp
lcall
adc
pop
das
dec
inc
mov
mov
mov
popf
lcall
pop
das
mov
repz
imul
xchg
mov
dec
jle
in
popf
adc
pusha
ret
decb
outsb
sub
mov
and
movsl
jne
pop
gs
cld
pop
push
push
fstl
add
push
lds
push
cmp
push
scas
or
dec
jno
insl
sub
jno
mov
mov
lcall
xchg
cmp
cmpsb
hlt
movsb
xor
ret
cmpsb
imul
xchg
pop
lock
cmpsb
cmp
test
mov
fisubrl
mov
in
mov
je
les
mov
jns
or
xchg
add
dec
mov
ja
aaa
ret
leave
pop
adc
jb
pushf
les
mov
cli
les
out
call
dec
cmp
xor
test
inc
mov
ficoms
lcall
dec
sub
push
enter
call
mov
into
and
push
jno
insl
stos
xchg
cmp
and
mov
out
out
and
and
je
leave
mov
pop
jge
and
cmp
bound
adc
xor
xchg
fstl
mov
add
in
dec
andl
repnz
dec
lcall
jmp
xor
push
mov
aad
sbb
sub
pop
mov
push
mov
mov
mov
mov
insl
mov
add
cmpb
jnp
xor
jmp
movsb
fldt
xchg
push
jmp
lds
into
cmp
push
rolb
xchg
lahf
outsl
stos
push
mov
xor
into
icebp
lods
arpl
test
cmp
adc
xchg
pop
andw
mov
les
int
dec
xchg
push
in
mov
push
movsl
xchg
stos
sti
sub
test
rclb
mov
jne
pop
mov
sti
lahf
adc
jbe
repz
out
icebp
inc
or
jns
hlt
mov
lods
mov
int3
xchg
sbb
sbbl
jb
jmp
notb
stos
repz
aaa
rcrb
test
mov
mov
lret
adc
js
inc
ja
mov
outsb
inc
push
sbb
xchg
cmc
jno
push
shl
cwtl
mov
add
mov
ja
in
sti
push
pop
push
cmpsb
stos
push
dec
adc
pop
xor
inc
sbb
ja
ljmp
jb
sti
cmp
aad
sub
cmp
in
lahf
pop
push
lock
inc
insl
pop
lock
popa
lods
shrb
inc
int3
mov
test
mov
cwtl
cmp
inc
movsb
cmpsb
jne
aaa
add
push
inc
aaa
push
cmpsl
aam
loope
stc
mov
and
addb
sub
stos
scas
movsl
push
movsl
loope
sub
inc
mov
cli
sbb
mov
inc
mov
lret
popa
aaa
lcall
hlt
into
cmp
test
jmp
cwtl
mov
or
jb
inc
dec
pop
or
std
add
dec
inc
pop
ds
pop
arpl
roll
sti
lods
inc
jb
or
sbb
neg
sbb
inc
xchg
in
sbb
leave
inc
inc
xor
clc
push
test
cwtl
adc
in
movsb
ss
iret
mov
ss
ret
pop
stos
aad
lods
push
leave
nopl
cmp
inc
lret
ret
jnp
in
fisubs
add
mov
fldenv
sub
adc
mov
in
and
ja
call
bnd
cwtl
mov
push
mov
dec
cmpsl
mov
bnd
outsb
jle
pop
addl
sbb
dec
adc
jecxz
sub
loope
xchg
popa
adc
es
jns
xchg
pop
xchg
dec
push
cmp
jo
movsl
jecxz
xchg
xor
and
in
inc
mov
mov
data16
cmp
aas
aaa
pop
push
sti
dec
xchg
mov
cmp
mov
or
sarl
out
mov
xor
cmp
adc
push
cmp
addb
add
and
xchg
sbbb
inc
pop
loope
outsb
inc
ret
std
ljmp
lods
into
mov
jns
sub
in
aad
divl
cmp
mov
jns
repnz
mov
mov
rcl
bound
mov
push
cmp
mov
push
adc
lret
push
arpl
aas
and
mov
cmp
cld
jno
dec
adc
and
inc
inc
push
pop
sbb
mov
imul
ret
je
xlat
pusha
pop
int
add
out
fstpt
call
lock
movsl
int
push
clc
fldl
movsb
xchg
aaa
in
es
or
sub
loope
inc
cli
shlb
fmuls
nop
fsubr
icebp
jg
pop
xor
mov
mov
or
addb
inc
pop
loop
fmulp
inc
out
jmp
and
cmp
out
les
xchg
jae
fsubl
mov
into
int
mov
dec
and
xchg
fxch
inc
dec
jl
fsubr
es
push
in
int
push
adc
popa
out
and
fsubrs
pop
popf
out
or
jbe
ret
inc
nop
or
push
lea
aas
fnstsw
out
adc
fcompl
inc
int3
in
lcall
jg
call
dec
addr16
mov
repnz
push
mov
repz
pop
mov
push
test
sub
pop
ja
dec
aad
push
stc
inc
les
pop
arpl
fcomip
movsb
xchg
scas
and
push
mov
leave
imul
jecxz
pop
loope
ret
fisttpll
repnz
sar
dec
adc
or
ljmp
fwait
pop
pop
out
scas
adc
loop
testb
mov
add
push
sbb
mov
out
mov
push
orb
jb
fwait
pop
cmpsl
in
cld
xchg
sub
jb
sub
in
inc
dec
pop
and
add
push
or
aad
add
pop
push
xchg
jmp
dec
sub
arpl
xlat
ret
scas
pop
ds
add
add
xchg
dec
ret
cs
lret
roll
ds
sbb
inc
mov
mov
xchg
je
je
ja
xchg
ret
dec
or
jle
inc
outsb
pushf
xor
lock
push
daa
jecxz
call
movsl
mov
cmc
std
lcall
push
dec
inc
lods
je
scas
add
scas
frstor
jne
roll
push
jns
cltd
or
aaa
jle
jno
loopne
mov
adc
fs
popa
adcl
mov
les
mov
inc
add
cmp
shl
pop
shll
sbb
enter
fdivl
hlt
ret
popa
in
idiv
adc
inc
sbb
mov
adc
push
pusha
call
pop
mov
jo
mov
rdpmc
add
adc
xchg
sbb
je
xchg
insb
pop
adc
jecxz
xchg
ss
dec
cmp
dec
or
imul
out
push
leave
cmpsl
les
and
shlb
rcll
movsb
cmpsb
aad
mov
mov
mov
imul
loop
xchg
mov
push
fstpl
shlb
clc
sbb
push
stos
mov
ss
sbb
ja
cmovae
add
movsb
std
mov
inc
mov
adc
imul
xchg
mov
mov
mov
dec
shrl
pop
inc
mov
xlat
xor
hlt
dec
xor
jge
mov
in
mov
pop
cmp
sub
test
and
aaa
jecxz
cmpsl
filds
test
jo
stos
mov
and
hlt
sbb
lcall
stos
mov
adc
lock
fsubr
xlat
mov
jecxz
inc
push
rorb
cld
aad
mov
xlat
xor
mov
jmp
mov
xchg
jbe
or
mov
xor
ja
arpl
inc
xchg
mov
push
test
loope
jnp
call
pop
stos
xchg
int3
cwtl
jmp
movsl
or
add
xchg
pop
leave
push
popf
fsts
dec
jne
mov
xor
pop
dec
sbb
fmull
xor
pop
xchg
xlat
loop
loope
nop
fsubs
xchg
jecxz
outsl
scas
mov
inc
out
mov
sub
xor
sub
out
int
js
cmpsl
mov
and
push
fstpt
ljmp
out
es
push
push
out
xlat
inc
call
dec
xchg
sbb
pop
ds
push
pop
ds
movsb
inc
adc
test
and
and
std
out
aad
adc
scas
mov
mov
movsb
mov
sub
push
gs
enter
pop
pop
fscale
fld
dec
add
fistpl
fdiv
testl
mov
iret
or
push
mov
popf
shlb
and
flds
adc
push
outsb
fstpl
pop
dec
mov
mov
sbb
pop
data16
test
mov
mov
jbe
jp
fwait
test
fldt
mov
gs
xchg
or
mov
xor
mov
movsb
mov
inc
cmp
gs
stc
mov
jnp
inc
fcoms
fwait
pop
scas
pusha
mov
mov
jmp
dec
std
cmc
push
std
inc
outsl
rcrl
outsl
dec
out
mov
dec
or
lea
push
or
in
mov
stos
das
mov
or
add
cmc
dec
dec
pop
push
cs
repz
bound
jbe
and
xchg
add
cltd
decl
mov
pop
out
loopne
sub
popf
out
roll
dec
or
nop
pop
mov
fmuls
push
xchg
mov
and
in
push
mov
ljmp
in
push
aas
ret
sti
push
xor
mov
sbb
jg
pop
add
add
loope
mov
js
dec
cmp
movsl
or
add
inc
sbb
lea
cs
xor
stos
shlb
add
leave
inc
test
rcll
cmp
jbe
push
daa
loopne
ds
fcmovne
push
fildl
cmp
pop
subb
rorb
mov
inc
and
or
and
imul
scas
into
jns
ror
iret
push
shl
je
test
into
inc
stos
xchg
dec
cmp
adc
sub
push
pop
mov
stc
in
out
sbb
sub
scas
jnp
mov
dec
jge
add
repnz
int
into
push
mov
jo
test
mov
pop
aam
lods
mov
aam
dec
clc
faddl
sub
mov
sbb
push
lcall
cmp
mov
and
lcall
fisttpl
pop
outsl
mov
cmp
in
ss
int
inc
jno
mov
imul
fsubrl
enter
loopne
adc
adc
movsb
inc
popa
psrld
dec
fmull
dec
push
rcrb
pushl
sbb
inc
leave
xchg
aam
xor
cmpb
lods
ror
pushf
addr16
sahf
jecxz
mov
cmp
dec
mov
cs
or
adc
sti
pop
ss
ret
jae
test
ret
dec
mov
xchg
pop
fsts
cli
inc
cmp
and
dec
in
xlat
xchg
dec
push
sahf
inc
or
pop
rorl
out
push
cltd
int3
and
jnp
push
lret
lcall
jecxz
push
pop
shlb
addr16
sub
cvtpi2ps
sbb
xchg
fiadds
test
dec
cmp
or
lret
lcall
out
lock
sub
pop
dec
fisubrl
xchg
cmp
sbb
lret
inc
pop
neg
out
add
xchg
adc
mov
xor
mov
icebp
add
dec
mov
fstl
gs
jl
fsub
ret
fstpl
pop
stos
js
jo
lods
jmp
fists
test
jp
push
das
inc
xor
hlt
mov
sbb
cmp
mov
icebp
clc
xor
scas
pop
rcr
mov
cmc
iret
push
mov
stc
pop
ret
data16
repz
dec
push
mov
rorl
xchg
jecxz
mov
adc
xchg
lea
negl
fsubrl
stos
inc
test
movsb
bound
jle,pn
xor
mov
dec
xchg
movsl
pop
pop
aam
cmpl
or
shlb
xor
inc
adc
dec
mov
xor
inc
mov
pop
sub
adc
js
pop
push
mov
pop
icebp
jle
push
mov
mov
ja
stc
push
xchg
push
xor
andl
pop
and
fdivrs
mov
aas
jecxz
mov
out
fidivrs
sub
pushf
mov
sahf
stc
cmc
xchg
cmp
and
sbb
sub
xor
int3
cld
mov
cmp
addr16
pop
shl
shl
xor
mov
mov
push
and
or
mov
repnz
psadbw
and
frstor
xchg
je
inc
jp
xchg
into
sbb
mov
jmp
inc
mov
ret
int3
in
sub
cltd
push
push
ja
mov
fldcw
jb
repz
shrb
rcll
mov
dec
into
sbb
ret
and
jbe
dec
stos
mov
cld
and
sbb
cs
js
rorl
bound
loop
cmp
and
or
sti
imul
stos
dec
sub
sbb
xchg
rcrb
sbbl
les
iret
gs
push
and
icebp
add
push
movsb
nop
fsubs
push
or
mov
in
int
mov
cltd
popf
dec
sbb
xor
hlt
jne
iret
push
fldenv
and
je
xor
pushw
jae
fcompl
imul
xor
imul
add
hlt
and
leave
ds
scas
mov
addr16
xlat
add
xchg
imul
mov
pop
adc
xchg
cli
pop
stc
ds
push
add
inc
push
mov
jmp
pop
add
xor
sub
jb
or
aad
repnz
movsl
cltd
into
popf
leave
call
mov
push
in
dec
xchg
ret
in
data16
lea
sub
mov
fildll
dec
neg
push
and
jp
frstor
test
push
addl
inc
iret
cmp
and
xchg
jl
xchg
daa
loop
or
popa
rol
mov
xchg
mov
lcall
jnp
xlat
xchg
enter
or
iret
gs
cltd
and
add
es
adc
push
dec
lods
push
mov
and
movsl
out
cli
sti
xor
mov
test
or
out
push
push
pop
or
sub
fstps
insb
es
mov
fwait
aad
icebp
jecxz
pop
aas
fwait
jns
and
lds
shl
xchg
lret
push
xor
jecxz
outsl
icebp
and
and
adc
jns
push
pushf
push
rcrl
jecxz
loope
mov
cmpsl
imul
call
mov
in
mov
pop
add
xchg
cltd
insl
pop
and
shll
fucomi
xchg
cld
or
mov
subb
or
ret
repnz
popa
push
icebp
or
in
cmp
sbb
loop
push
fimuls
out
mov
inc
push
sub
jmp
lcall
popa
fistpll
mov
jle
clc
aam
aad
ret
jo
add
aas
inc
adc
sub
out
jg
xchg
mov
lcall
filds
adc
in
pop
mov
imul
push
push
jb
pop
mov
mov
das
daa
sub
xchg
mov
xchg
ljmp
dec
jp
sysenter
popf
xchg
mov
cld
xchg
push
or
cld
pop
mov
xor
cmc
sub
inc
lcall
dec
jecxz,pt
add
mov
xchg
push
sub
ds
lret
push
stos
pop
js
cmp
mov
xchg
mov
in
jecxz
sahf
push
test
cltd
cmp
inc
and
sbb
pushf
dec
ljmp
das
adc
mov
sub
icebp
jmp
lods
out
lret
aad
jo
outsl
clc
aaa
les
aaa
push
mov
push
add
xchg
sbb
ret
xchg
in
inc
js
les
cltd
or
mov
cli
xor
je
cwtl
out
mov
shll
int
popf
scas
xlat
xchg
pop
inc
push
pop
subb
mov
xchg
sbb
push
ds
lcall
leave
mov
adc
mov
xor
out
xchg
ret
out
xchg
adc
fnstsw
out
cmp
mov
pop
insl
push
inc
les
fsubs
xchg
and
mov
iret
jae
loopne
mov
incl
outsl
dec
pop
mov
faddl
js
xlat
stc
xor
push
add
in
lods
fucomi
fidivs
je
add
insb
arpl
mov
aaa
shrl
mov
lcall
sti
push
outsb
fcmovnbe
and
cmp
inc
sahf
jg
xor
les
add
mov
mov
mov
dec
je
push
cli
mov
ret
cmp
sahf
xchg
push
or
mov
jbe
sub
mov
push
dec
inc
insb
dec
cwtl
mov
push
xor
sub
sub
pop
cmp
ret
mov
jns
xchg
jl
loope
int3
popa
outsl
pop
popf
in
add
sarb
out
jo
stos
ficoms
popf
dec
sub
ljmp
es
loope
int3
call
neg
imul
fcoms
jecxz
sbb
adc
push
push
es
push
sti
sbb
mov
sub
mov
out
dec
jecxz
stos
or
mov
lcall
inc
jo,pt
sbb
dec
lret
aad
push
pop
mov
fsubl
push
cmp
jbe
mov
stos
cs
std
push
inc
jnp
std
dec
sub
call
repz
mov
pop
jp
jae
subb
push
ljmp
or
shlb
push
xchg
inc
xchg
mov
mov
mulb
mov
aas
cli
orl
ret
mov
jle
mov
clc
add
sbb
cltd
cmp
dec
repz
or
dec
mov
cmc
push
pop
xor
or
mov
and
xor
lock
dec
rcrl
rclb
add
push
pushl
jo
aad
add
pop
jmp
std
filds
xchg
adc
leave
ss
fidivs
das
ja
insb
pop
iret
dec
aam
cmpl
std
inc
inc
sub
mov
scas
adc
mov
push
inc
mov
jne
sbb
xchg
daa
dec
pop
movsb
or
out
or
or
push
pop
inc
pop
movsb
xchg
iret
jnp
fndisi(8087
insl
jo
cld
and
mov
stos
shlb
dec
rorl
mov
cld
pop
out
pop
lret
or
mov
jbe
mov
dec
not
in
lds
aaa
ss
test
bound
mov
in
dec
jge
xor
inc
dec
in
mov
mov
popf
hlt
mov
push
sbb
les
in
mov
fnstsw
sub
mov
xchg
push
mov
push
mov
mov
dec
jnp
pusha
mov
push
jg
pop
xchg
and
arpl
mov
int
test
sub
lret
sub
jmp
mov
push
push
mov
sub
imul
pop
lret
cmp
jle
imul
adcb
lret
pop
cltd
clc
aad
jecxz
push
pop
dec
or
setb
jmp
adc
sub
mov
aad
loopne
icebp
inc
roll
sub
fwait
add
mov
inc
stos
push
subl
cmpsl
mov
in
dec
loopne
dec
cli
mov
cmp
xchg
jg
add
push
mov
aad
insl
punpckhdq
lahf
adc
jp
push
jmp
mov
jmp
cld
dec
lret
cmp
rcl
mov
cmp
pop
fstpt
js
sub
adc
stos
xchg
fstpt
push
scas
xor
and
xorb
icebp
pop
dec
xorb
mov
fidivs
icebp
mov
add
rcl
mov
inc
enter
add
and
xor
iret
pop
in
xor
sarl
jb
ds
sbb
jne
in
sbb
aam
mov
fdivrp
xor
es
bound
push
xlat
stos
pop
pushf
adc
cmp
bound
enter
mov
shr
ficomps
aam
daa
ret
lock
int
push
shl
rcrl
xchg
jne
int
lods
xor
outsl
xor
xchg
and
cmp
mov
in
push
mov
mov
push
xchg
vdivsd
or
xor
or
mov
push
cs
clc
jno
icebp
jge
daa
or
dec
sbb
cltd
sbb
xor
dec
add
pushl
pushf
cmp
push
jle
xor
push
mov
add
in
mov
outsb
dec
dec
push
int3
adc
lods
jg
pushf
movsb
je
adc
fadds
lods
stos
lcall
in
loop
or
push
clc
cltd
jg
daa
inc
dec
rclb
in
in
test
mov
out
xchg
cmp
test
ret
imul
inc
addr16
push
ficomps
pusha
inc
pop
dec
cmove
inc
lods
aad
fidivrs
or
ret
arpl
test
fisttpl
cmpsl
push
cmp
push
and
mov
xchg
stos
inc
and
jnp
inc
ret
test
inc
loope
lods
or
jl
mov
out
iret
or
dec
cwtl
test
cmp
or
dec
loopne
fisubrl
rcr
je
jno
imul
ss
sbb
jg
sbb
push
ret
rorl
xchg
jb
jno
shlb
sub
into
mov
pop
push
xchg
sti
inc
push
ljmp
jg
dec
mov
repz
pop
aas
jns
mov
rcr
icebp
inc
mov
ds
dec
inc
test
bound
das
mov
rclb
mov
add
ja
push
pop
ljmp
jnp
xlat
inc
adc
mov
inc
daa
push
movsb
jbe
adc
push
xor
lock
xchg
adc
xchg
xchg
out
sub
add
pop
add
adc
or
adc
add
push
jl
sub
adc
aam
dec
xchg
insb
mov
or
or
sti
xor
mov
shrl
in
faddl
mov
ljmp
pop
pop
scas
mov
sub
leave
sbb
jnp
lret
mov
stos
es
inc
jb
pop
lahf
leave
notb
notl
sbb
aaa
ss
mov
mov
movsb
xor
out
xchg
out
movsl
or
mov
cmp
and
out
sub
cmp
jge
pusha
xchg
scas
mov
mov
pop
or
pop
mov
sbb
shlb
in
push
xor
sbb
repz
faddl
push
stc
mov
cmc
sbb
loop
cmc
push
xchg
repz
movsl
mov
and
pop
cs
jns
stc
mov
clc
sbb
and
je
sbb
cmpsl
shll
in
cmpsl
ds
negb
xor
add
cmp
aas
rcrl
mov
cmpsb
pusha
movsl
mov
pop
js
mov
popa
push
mov
jl
out
inc
push
lea
or
push
fdivrs
fcmovnb
popa
jae
dec
test
mov
cmp
mov
push
out
and
xor
xchg
push
inc
stos
loop
push
or
stos
mov
lret
movsl
das
ficoml
out
mov
push
pop
aaa
addr16
cmp
dec
movsb
xchg
mov
daa
cmp
pop
mov
or
int
adc
shlb
mov
mov
jg
pop
ds
and
in
push
in
cli
pop
dec
outsb
xor
xchg
shlb
xchg
les
jae
fwait
inc
imul
and
add
loopne
push
cmp
xlat
cli
mov
pop
fs
xchg
decb
xchg
mov
sub
in
repnz
mov
or
push
not
mov
pop
pop
repnz
push
popf
out
std
or
push
mov
pushf
xchg
jge
test
ficoms
adc
inc
movsl
xchg
xor
popa
add
insb
sub
sub
add
cld
addr16
ret
insl
cmp
js
pop
outsb
outsb
add
mov
jno
in
mov
and
adc
cmpsl
out
push
xor
cmc
cmp
adc
mov
adc
xchg
imul
shrl
inc
sbb
or
xor
movb
sub
add
vmread
icebp
clc
outsb
out
push
mov
jb
mov
or
jmp
mov
dec
mov
mov
push
lods
add
xlat
jg
jbe
cli
mov
dec
inc
pop
sub
ja
subb
shll
insb
outsl
inc
lods
add
adc
xor
or
pop
lea
adc
push
data16
mov
mov
arpl
in
jecxz
mov
int3
dec
shlb
xchg
sub
or
and
xchg
dec
and
mov
ret
arpl
mov
mulb
mov
es
je
in
test
in
sbb
mov
dec
dec
mov
lods
xor
test
adc
adc
and
or
inc
fisttpll
out
inc
sub
loopne
push
pop
lds
and
aam
out
push
rorb
negl
add
jg
push
addr16
lcall
cmc
mov
add
cmpsb
dec
divl
loop
or
nop
cs
add
xor
loopne
movsl
and
movsl
sbb
dec
push
mov
jl
lea
cmp
add
sar
mov
push
cltd
and
testl
adc
outsb
xchg
xchg
dec
sar
push
inc
inc
aas
fs
pop
and
jle
out
pop
call
lcall
mov
mov
jno
fwait
movsb
fmull
ljmp
mov
rorl
das
stos
jns
outsl
mov
in
jbe
aaa
inc
insl
mov
cltd
cs
jns
push
lock
push
mov
mov
scas
mov
pop
sub
dec
pop
xor
orl
pop
mov
nop
insl
pop
enter
dec
cmpps
adc
das
mov
cmp
lods
loop
gs
xchg
addr16
cmpb
aad
addr16
adc
inc
push
pop
mov
xchg
sub
adc
dec
aas
adc
jp
out
std
adcl
jns
mov
shll
loop
mov
not
cmp
dec
add
adc
lret
mov
hlt
in
mov
jg
andb
sub
mov
inc
cwtl
loopne
bound
inc
mov
out
fidivs
std
test
sbb
or
shrb
xchg
cmc
inc
pop
mov
and
mov
sbb
cwtl
int
dec
mov
adc
sub
inc
lret
call
sub
cmp
inc
call
repz
mov
mov
xor
adc
xchg
outsl
or
outsl
sbb
pop
push
ljmp
loop
pop
xchg
cltd
inc
lcall
or
cmc
mov
call
movb
sbbl
adc
xchg
and
push
cli
cmp
insb
sti
fisttpl
inc
lret
and
xchg
dec
xor
arpl
test
ja
cwtl
fiaddl
push
dec
mov
add
aaa
insb
and
xor
mov
test
dec
pop
jmp
aad
loope
sub
movsl
cs
clc
mov
ret
sbb
mov
loop
scas
jo
sbb
clc
jns
daa
push
pop
lods
repnz
or
jecxz
jb
insb
push
sbb
lds
xchg
mov
es
sbb
sbb
enter
outsb
out
cltd
add
pushf
addl
clc
xchg
push
aad
test
xchg
mov
fstpl
cld
sub
mov
and
inc
hlt
inc
in
push
push
ljmp
and
arpl
mov
pop
imulb
pop
scas
adc
out
fiadds
cmp
in
pushf
xchg
enter
and
stc
pop
movsb
inc
imul
aam
add
fwait
rcll
ss
adc
sub
pcmpgtw
out
scas
mov
int3
mov
lcall
xlat
pop
xor
cld
pop
or
cmpsl
mov
jbe
sbb
xor
xor
xlat
fsts
nop
in
xchg
xor
stos
sub
fwait
dec
insl
jb
xchg
or
cmp
and
inc
repz
pop
scas
adc
je
das
out
lahf
mov
pop
mov
jns
pop
sbb
hlt
lret
mov
out
outsl
add
insb
push
mov
push
bnd
jecxz
xor
iret
mov
jns
addb
rcll
jecxz
paddusb
sub
mov
fldenv
adc
sub
pop
jne
popl
mov
in
push
fisttpll
subb
loopne
dec
jle
insl
ds
repnz
loop
insb
pop
mov
adc
enter
addb
addb
andl
ss
out
and
popa
dec
add
mov
jmp
or
xchg
out
jecxz
xor
es
nop
dec
iret
push
xor
pop
push
xchg
bound
dec
icebp
gs
scas
lea
shll
mov
adc
ljmp
fsubr
fwait
cmp
pop
inc
mov
repz
add
subb
movsb
push
sbb
xlat
ds
add
jnp
lds
js
in
sbb
xchg
mov
clc
and
jmp
in
imul
pop
inc
push
out
rcrl
fistpl
add
inc
fsubr
jecxz
push
or
pop
xor
ja
pop
push
lret
data16
sbb
inc
shr
or
pop
popa
xchg
stos
xchg
xlat
pop
jl
or
cmp
sbb
add
cld
push
movsl
scas
xor
dec
movsb
xor
shrb
sub
fwait
ret
fisubl
mov
push
lods
scas
out
pop
ljmp
gs
jecxz
jae
lret
fldt
repz
jecxz
sbb
jle
fwait
loop
loop
fisubrs
pop
jmp
ja
lods
jnp
insb
cmp
pop
int
int
xlat
jl
jecxz
inc
rorb
sbb
mov
adc
into
loop
mov
enter
ss
cmc
insb
loop
cld
out
icebp
and
and
outsb
mov
pop
sbb
pop
adc
fnsave
push
push
insb
jge
addr16
sbb
pop
outsb
push
addb
sbb
adc
fnstcw
gs
mov
sub
and
popa
fstl
jge
cs
icebp
cmp
loopne
push
sbb
push
jmp
lret
push
sahf
mov
loope
xchg
jge
fbld
cmpl
aam
inc
sbb
xor
dec
push
mov
divb
inc
inc
or
insl
dec
lds
mov
mov
or
add
adc
jmp
fcomp
jmp
pop
mov
jae
lods
lea
push
or
std
scas
adc
std
mov
jp
icebp
pop
in
jb
mov
or
rcrl
das
scas
mov
xchg
mov
jle
lods
or
in
sub
xor
fs
sub
jge
pusha
push
and
pop
pop
outsb
es
in
loop
pop
out
or
imul
jns
in
adc
pop
call
pop
mov
xor
push
and
out
push
cmpsl
sbb
fldcw
aad
sub
jmp
cbtw
dec
and
sub
aam
in
std
push
sbb
shrl
push
movsb
add
push
cmpsl
test
xor
xor
roll
push
push
movsl
sbb
pop
sarb
arpl
jb
inc
sbbl
or
inc
jmp
notb
add
push
fstps
shll
cs
mov
cmp
xchg
add
add
push
pop
cld
sub
cltd
dec
std
lock
stos
mov
aaa
and
insl
mov
cmp
decb
jg
xchg
inc
cmpsl
inc
xchg
xchg
xchg
mov
jns
ds
fs
add
cli
test
sbb
aad
mov
out
jp
mov
js
pop
rcr
inc
in
addr16
movsl
xchg
xorb
fdivrs
fs
inc
cwtl
outsb
bound
xor
xor
and
dec
and
fnstenv
stc
xor
mov
gs
mov
push
test
nop
pushf
and
arpl
fcoms
ret
stos
jle
inc
sub
dec
lea
adc
out
sahf
or
scas
out
inc
stos
pop
fnstcw
pusha
ficomps
idiv
sbb
jp
aam
inc
jns
repz
jne
notb
xchg
hlt
add
sbb
rorl
pop
cmp
inc
or
outsb
clc
fcmovne
mov
jmp
addr16
ds
jno
push
stos
pop
outsb
out
andl
mov
movsl
or
push
outsb
cltd
stos
xor
fsubs
sbbl
xor
inc
fimuls
push
jecxz
inc
mov
cmp
into
mov
xchg
mov
jg
mov
adc
hlt
push
lods
out
cli
cmpsl
fisttps
xor
or
in
sti
sbb
push
sub
cmp
lea
xchg
arpl
jp
push
push
xchg
lods
sub
out
fisubrl
mov
ljmp
jo
mov
add
je
rclb
or
cmp
scas
icebp
bound
in
aam
mov
xor
insl
in
fxch
and
dec
jge
cwtl
inc
ret
sbb
outsb
pop
sti
clc
repz
lcall
data16
cli
hlt
pop
pushf
loop
sub
pusha
loopne
jp
jbe
mov
inc
test
inc
je
cmp
jae
xor
mov
push
sub
cli
xor
add
cmp
or
and
mov
sbb
mov
pop
ds
lahf
fs
cmp
bound
andb
fdivrp
mov
mov
sbb
fmulp
popf
or
stc
and
pop
or
jmp
cmc
sub
push
push
mov
lods
icebp
adc
and
jno
adc
fucomip
cmp
pushf
jp
xchg
mov
stos
sbb
pop
addl
aam
dec
xchg
repz
mov
aam
push
xor
scas
test
rclb
push
dec
push
jne
push
jmp
push
xor
outsb
aad
fdiv
fsts
in
incl
pop
mov
xorl
pushf
xchg
and
add
movsl
and
mov
imulb
cmpsl
repnz
xor
push
fstps
outsl
jecxz
aad
push
push
xchg
test
cmp
and
ret
cmp
aad
xor
rcr
cmpsl
xchg
test
pop
jecxz
cld
cmp
cmc
in
arpl
dec
push
test
fisttps
mov
inc
stc
inc
stos
add
pop
and
jbe
inc
lods
or
cmpsl
adc
jge
cmp
cmp
ss
pop
inc
arpl
push
xor
lods
sub
test
pop
dec
call
add
sub
adc
fsubl
mov
jle
sub
cld
or
xchg
or
xchg
mov
add
jb
sahf
cmp
cli
das
into
mov
xchg
mov
enter
add
mov
cmp
shrb
imul
push
sub
outsl
cli
mov
dec
xchg
push
cltd
lret
stos
xor
push
sbb
out
jne
mov
add
push
fwait
outsb
pop
lcall
push
jl
pop
cs
lods
jecxz
fs
cmp
mov
xlat
push
int3
pop
dec
cmp
or
out
xor
lret
xor
daa
sub
or
inc
dec
fistps
in
add
mov
das
cwtl
inc
push
push
fimuls
dec
repz
jmp
push
xchg
loop
xchg
dec
das
daa
add
shrl
push
inc
fisubrl
test
stc
test
push
cltd
and
jbe
cmp
jmp
xor
leave
je
xor
fidivrl
or
push
jecxz
and
imul
sub
sbb
dec
or
add
cmp
mov
fiaddl
mov
cmc
addr16
inc
fcmovnbe
lahf
mov
xchg
mov
push
push
popa
mov
mov
pusha
mov
daa
out
cmpsb
fcmovb
cmc
inc
loop
cltd
lret
dec
dec
fadd
ret
lret
lret
adc
sti
icebp
sbb
cwtl
lds
xchg
loopne
das
data16
jecxz
testb
cmp
mov
cmc
pop
dec
xchg
adc
mov
dec
imul
rorb
fsubrs
fistpl
jp
mov
dec
push
pop
fwait
push
loopne
mov
inc
and
and
mov
add
adc
cmp
push
mov
mov
cwtl
mov
pop
xlat
push
xchg
ja
insl
mov
ret
cmp
add
xchg
clc
jg
xorl
sub
int3
icebp
test
lret
xchg
push
add
jnp
imul
shl
xor
jmp
dec
adc
jp
popa
xor
push
xchg
movsb
or
pop
pop
xchg
sub
add
push
ds
pop
push
push
mov
ljmp
pop
ds
dec
inc
pop
mov
aas
mov
add
cmp
cli
xor
inc
xchg
or
hlt
push
inc
int
jns
lahf
xchg
adc
push
cmp
ret
in
mov
ficompl
push
idivb
push
test
cltd
sti
jne
jne
xor
stos
mov
push
ret
scas
in
add
loopne
sbb
dec
fidivrl
fldenv
jne
add
out
popf
scas
test
push
sbb
jge
insl
pop
pushf
mov
xor
sub
sti
popf
movsb
xor
jo
test
aaa
lret
mov
mov
mov
ljmp
fstps
sbb
sub
push
test
xor
rol
push
jo
push
jle
filds
adc
pop
dec
call
xor
cmp
add
cld
sbb
test
adc
popl
nop
mov
mov
mov
cmp
in
xor
xchg
mov
mov
fwait
adc
cmpsl
test
pop
sbb
repz
cmp
jg
dec
jl
sbb
pop
jne
inc
addr16
or
xchg
dec
mov
pusha
testl
xor
ja
or
stos
cmp
call
jmp
into
mov
mov
and
add
out
ror
mov
fadds
dec
pop
inc
add
jle
mov
mov
lret
push
xchg
xchg
pop
jne
ret
add
repz
mov
inc
or
clc
xchg
js
test
std
int
mov
dec
cmp
lahf
pop
pop
xchg
pushf
mov
aad
aaa
lcall
stc
js
leave
push
rolb
fs
sbb
and
push
jbe
adc
sub
ja
jl
cmp
and
push
sub
dec
lret
loope
sub
out
mov
push
ds
xor
mov
out
jmp
and
and
and
data16
pop
pop
adc
test
jmp
cs
out
and
sub
jecxz
lods
repnz
xchg
xchg
int3
aaa
scas
inc
lock
roll
mov
lods
or
push
add
adc
and
add
frstor
push
cmc
shrl
push
mov
and
mov
jno,pt
cmc
xchg
mov
mov
cs
and
cmpsb
leave
xchg
cs
inc
jl
and
push
or
imul
add
rorb
mov
bound
lret
mov
cli
movsl
add
sbb
lret
cltd
or
dec
xchg
sub
dec
insl
mov
and
sbb
rcr
lea
push
nop
lret
inc
or
xchg
sbb
lock
xchg
je
inc
outsl
dec
int
sbb
sub
xchg
pushf
mov
fsubs
int
push
push
or
mov
jbe
xor
xorl
loope
les
mov
xchg
int3
and
jns
mov
call
sub
sub
xor
mov
pop
lods
pusha
mov
jns
ret
and
lret
jnp
fstl
mov
add
nop
lock
in
xchg
dec
sbb
pop
lods
es
adc
sub
shll
movsl
sub
add
mov
ret
jp
daa
sbb
sub
shlb
cmp
dec
dec
and
pop
pop
imul
add
mov
push
imul
imul
or
add
adc
lcall
adc
mov
decb
stc
dec
cmc
push
inc
lods
cmp
insb
scas
jb
int
sti
out
mov
pop
lret
std
xchg
add
je
outsl
das
mov
leave
scas
or
test
out
bound
loop
btc
pop
sub
sbb
and
dec
into
sub
and
or
dec
lds
dec
stc
sub
test
hlt
loopne
add
ret
outsl
push
inc
sti
cmp
adc
cli
mov
add
stc
mov
sub
aam
out
and
arpl
int3
fisubrl
sarb
add
mov
lds
push
insb
popf
adc
or
roll
outsl
xchg
rcl
mov
popf
push
in
mov
in
lds
sub
jg
jg
lcall
lahf
adc
push
jnp
xchg
push
adc
xor
insb
lds
cs
jae
das
lds
imul
cltd
jo
mov
pushf
xchg
push
lahf
in
outsb
cmp
cmp
xor
in
mov
dec
mov
cltd
lcall
inc
mov
sub
push
adc
cwtl
fistpl
aaa
repz
pop
xchg
sarb
inc
pop
bound
jge
rorl
xchg
in
in
fisttpl
mov
or
and
jge
mov
clc
rcrb
insl
repz
ljmp
addr16
mov
lock
imul
adc
int
enter
cmp
inc
jle
mov
ds
lods
and
aam
cs
xchg
mov
in
popf
push
adc
imul
xor
movsl
adc
and
inc
pushf
dec
xchg
mov
loope
in
sbb
ret
cmp
sub
lahf
add
aaa
cltd
sbb
sub
sub
xchg
lcall
mov
or
rcl
std
outsl
sub
in
movsl
outsb
mov
push
icebp
and
pop
and
fdivs
testb
pop
gs
xchg
pop
push
cmp
jo
mov
call
xchg
mov
push
or
sahf
or
test
cmp
in
mov
lret
xor
sahf
pop
dec
stc
dec
dec
repz
push
pushl
dec
mov
sub
insb
sub
sbb
sbbl
ret
adc
cmpsl
aaa
jne
xor
popf
jo
lods
cli
imul
push
roll
ret
or
jmp
adc
stos
ret
add
pop
mov
xor
sahf
gs
mov
pop
mov
popf
jns
jb
mov
bound
pop
lret
xor
mov
popf
xchg
loopne
mov
push
dec
inc
je
in
shl
mov
cmpl
icebp
mull
ds
fildl
dec
popf
cmp
sahf
xchg
sarl
xchg
mov
icebp
jp
dec
add
imul
das
int3
fwait
mov
add
mov
sub
jg
inc
gs
cwtl
ja
subl
sbb
les
sbb
mov
mov
mov
adc
mov
push
jecxz
sbb
mov
adc
cmp
icebp
jae
mov
data16
out
std
aaa
in
jnp
aaa
cmp
mov
int
dec
call
call
or
push
mov
into
pushf
fsts
dec
pop
push
scas
dec
rcr
mov
and
gs
mov
mov
fisttpll
clc
insb
adcl
loopne
ljmp
nop
aaa
mov
pop
cmpsl
or
lds
add
cmp
movsl
push
roll
in
pop
cmp
jg
pop
int
push
mov
mov
in
adc
push
dec
test
mov
jns
dec
adc
dec
call
mov
adc
dec
sbb
in
aam
jbe
test
xor
insl
xlat
shlb
push
inc
loope
xor
and
fimuls
inc
push
cltd
mov
jne
decl
filds
fbld
mov
sub
xchg
fstpl
fstl
cmp
fisttps
clc
xor
ljmp
repz
pop
in
xchg
add
ffree
pop
pop
push
or
ret
mov
cs
stc
jae
mov
cmpsb
pushf
rdtsc
jns
xchg
mov
push
lods
aas
xchg
mov
and
push
call
stos
jns
cmp
jo,pt
pop
push
lret
sbb
mov
push
int
into
pop
pop
or
hlt
mov
xchg
mov
xchg
rcll
xchg
out
sbb
aad
push
xor
pop
es
movl
stos
jecxz
add
call
adc
push
fmuls
dec
in
push
arpl
inc
mov
das
pop
cmpsl
or
pop
int
xchg
sbb
or
and
mov
stos
outsb
adcl
lods
ret
dec
rolb
push
xchg
push
mov
and
test
gs
stos
lock
inc
js
fstpt
cmp
sub
cmp
pop
inc
push
adc
iret
sub
mov
jmp
pusha
xor
jns
lods
jle
scas
pop
fiadds
sti
xor
push
adc
rdmsr
jnp
inc
ja
cmpsl
cmpsb
dec
adc
scas
xchg
cld
push
and
repnz
pushf
push
int
sub
adc
jp
mov
mov
push
jecxz
jle
ret
dec
outsb
dec
aam
out
jnp
jp
dec
sti
lock
mov
in
vcvtdq2pd
dec
jle
jbe
lahf
xor
stos
or
ret
mov
sub
adc
aaa
fnsave
ss
in
push
pop
es
sar
mov
push
sbb
outsb
insb
or
jmp
lret
scas
xor
data16
jb
inc
orl
jno
ds
in
jb
xor
cmpsb
push
gs
sahf
and
push
cs
scas
jno
iret
mov
std
cmp
add
cmpb
push
filds
cwtl
test
movsb
push
add
cmp
ljmp
andl
jp
mov
test
insl
aas
adc
push
cmp
aas
push
jge
imul
or
adc
jae
push
js
cli
ret
adc
call
or
push
xorl
fwait
sub
mov
push
pop
std
int
and
xchg
mov
clc
push
inc
outsl
sbb
jecxz
loopne
icebp
jp
cmpb
sub
test
int3
pop
in
sti
orb
xor
enter
add
pop
ljmp
dec
push
fisttpll
pop
outsl
sbb
test
jge
lret
add
dec
aaa
test
stos
lods
repnz
pusha
sbbb
notl
rcr
sub
xor
mov
test
dec
nop
push
fdivl
ljmp
mov
mov
push
cs
or
test
shl
sbb
in
dec
mov
stos
xchg
cmp
jns
out
or
sbb
mov
cmp
rorl
mov
sbb
mov
mov
mov
call
cmpsl
push
pop
xchg
es
stos
lods
cmpsl
mov
adcl
popf
pop
mov
inc
xchg
xor
dec
add
pop
or
pop
mov
sub
mov
es
loopne
push
pop
aad
adcl
loopne
sub
jecxz
inc
jno,pt
mov
aad
sbb
dec
or
lods
fildll
repz
cmp
xchg
jge
push
bound
dec
test
mov
jecxz
out
orb
iret
out
pusha
mov
cs
adc
test
in
mov
repz
clc
dec
mov
int
out
xor
mov
mov
jne
dec
inc
adc
test
adc
lret
add
inc
mov
jbe
jl
xor
inc
xor
dec
leave
loope
jb
sbb
ret
and
ja
jno
or
inc
ljmp
test
into
dec
shlb
movsl
sbb
xchg
xlat
loop
xchg
out
int3
push
and
imul
inc
fldenv
ret
add
les
sbbl
inc
jno
pop
mov
data16
push
sub
cld
pop
mov
loopne
xbegin
push
jbe
in
popf
adc
nop
loopne
popa
jb
xchg
pop
mov
divb
or
icebp
adc
sbb
faddl
inc
les
add
int
sub
jge
addl
fldenv
jmp
ss
repnz
sahf
jmp
mov
pop
loop
jp
xchg
fmuls
xor
pop
shr
lahf
scas
add
sti
fisttps
mov
gs
jmp
mov
xlat
xchg
sahf
neg
pop
mov
cmp
dec
or
push
cwtl
mov
adc
popf
test
lret
mov
idiv
loop
repz
pop
ljmp
add
cmpb
scas
pushl
movsl
stos
dec
mov
dec
pop
mov
cmp
inc
and
and
push
cltd
xor
xchg
mov
or
xchg
fs
xchg
jb
pushf
sub
aas
popa
sub
repnz
mov
jp
or
add
scas
add
or
aaa
jo
mov
adc
adc
scas
mov
dec
insl
iret
mov
loopne
add
pop
pop
mov
lahf
xchg
cltd
xchg
xor
push
test
imul
orl
movsb
popa
pop
push
push
shlb
mov
adc
mov
test
add
mov
xchg
xchg
xor
xchg
push
popf
addb
xchg
and
enter
imul
mov
pop
test
aam
lret
fdiv
adc
or
ljmp
sbb
inc
jne
jnp
pop
mov
add
xor
dec
jb
loope
sub
cmp
scas
pop
xchg
mulb
mov
out
adc
dec
nop
mov
repnz
movsl
sub
xchg
mov
ljmp
fwait
out
ss
fidivrs
xor
xor
mov
js
mov
jb
filds
hlt
lcall
pop
mov
mov
stos
or
int
xor
xchg
sbb
pop
mov
iret
adc
imul
mov
data16
lock
push
and
pop
or
push
pop
jg
mov
shrl
jo
lret
adc
push
and
ret
les
pop
mov
push
add
loope
inc
xor
sbb
jle
pop
jns
xchg
or
dec
add
into
int
jmp
xchg
mov
into
add
les
clc
inc
std
lea
mov
ds
and
jg
and
sti
outsl
outsb
add
in
jbe
scas
mov
xchg
xlat
ret
push
out
push
xchg
or
sarb
cmp
sub
sub
or
pop
lcall
xchg
cmp
loope
push
daa
ficomps
js
pop
inc
push
and
call
fsubrs
mov
rcrb
fwait
cmp
out
dec
mov
movsb
enter
cwtl
xchg
pop
sarl
push
and
xchg
or
lret
outsl
mov
dec
mov
pushf
lods
aam
imul
dec
sbb
aas
pop
and
pop
dec
out
cmc
in
dec
dec
xchg
lods
adc
mov
rolb
fisubl
popf
xchg
rorl
cmpsl
jbe
lock
jmp
mull
dec
cmp
test
xor
test
push
pop
cltd
imul
scas
mov
pusha
mov
test
mov
cmp
fdivl
jg
cmp
sbb
loopne
scas
lret
mov
adc
inc
sub
and
sbb
loope
leave
mov
loope
push
outsl
adc
cmp
int
nop
dec
nop
lret
jecxz
das
dec
dec
push
out
addb
aam
sbb
inc
xchg
movsl
add
inc
pop
pop
push
clc
dec
mov
repnz
sub
lock
or
mov
dec
jb
imul
shrb
push
lret
loope
mov
call
ljmp
mov
pop
push
fiaddl
icebp
xlat
adc
jno
aam
adc
xchg
cmp
pop
adc
rcr
mov
mov
lock
loope
xchg
jae
jmp
inc
je
fcom
xor
fidivl
loopne
cltd
push
cmp
add
cmp
inc
in
jno
cmpsb
je
jnp
inc
sti
cmp
int3
cmp
sub
jg
adc
add
arpl
jmp
xchg
xor
imul
cmp
sub
sbb
sub
dec
push
mov
test
sbb
out
movsb
dec
jb
and
loopne
xchg
xor
push
imul
add
pop
adc
out
ret
dec
aaa
inc
and
ret
xor
sub
hlt
cmp
mov
ljmp
or
jne
push
jbe
dec
and
sbb
loopne
jae
rcr
cs
and
gs
mov
mull
fsubrl
cmp
pop
inc
in
jo
xlat
movsb
mov
sbb
xchg
push
outsb
push
cli
pop
aaa
sahf
pop
mov
fistpl
inc
les
orb
xchg
sti
sub
inc
adc
push
push
xchg
mov
imul
lret
shll
pop
adc
mov
push
into
xchg
lods
imul
filds
jae
out
jl
xchg
cmp
std
popa
xchg
cmp
popf
xchg
dec
xchg
jno
rorl
xchg
mov
lock
ljmp
add
js
push
std
and
pop
fdivrs
js
mov
jb
cmp
sahf
adc
xchg
pop
js
test
xchg
addb
sub
or
fs
and
xchg
loop
cltd
shr
pop
ret
mov
sub
jne
xchg
dec
add
and
add
and
loope
push
adc
or
jg
jns
sbb
bound
sbb
scas
mov
test
adc
shlb
add
sarl
sbb
faddl
sub
popf
stos
or
cmc
mov
andl
gs
and
lret
scas
cmc
int3
pop
sahf
into
dec
imul
and
int
inc
lcall
push
sbb
popa
cs
and
dec
inc
jae
sbb
sti
cmp
inc
pop
out
cmc
lock
sarb
mov
lahf
mov
mov
mov
je
pop
push
lcall
mov
ret
lret
push
dec
out
jmp
sbb
repnz
dec
lods
mov
dec
add
es
cmc
push
vunpckhps
xchg
push
out
sbb
or
aaa
jno
mov
repnz
out
stos
or
clc
xchg
lea
or
in
push
xchg
ds
pop
mov
in
cld
pop
push
mov
or
sbb
fiadds
mov
push
jge
daa
xchg
test
lea
pusha
mov
xchg
push
sbb
dec
xlat
pop
lds
and
and
mov
pop
xchg
push
xchg
pop
jmp
imul
jne
pop
cwtl
and
aam
lcall
loopne
push
sbb
mov
lods
add
ss
jecxz
mov
cli
loopne
jmp
mov
ror
dec
out
mov
mov
and
cmpsb
and
rcrb
sub
mov
or
mov
nop
dec
and
inc
mov
cwtl
add
pop
shl
push
sbb
mulb
hlt
xchg
or
or
clc
fwait
fs
pop
mov
add
jno
mov
mov
in
icebp
sub
loop
and
add
aad
dec
and
sbb
dec
addl
push
aad
jae
fwait
stc
sbb
shrb
xchg
add
mov
inc
xchg
adc
cmpsb
dec
in
fildl
repz
mov
loop
mov
add
lret
pop
loope
loope
daa
fdivrs
out
mov
cwtl
dec
scas
inc
popa
push
jbe
imul
inc
test
out
jns
jae
mov
xor
mov
sbb
mov
cmpsl
dec
cmp
rcrl
stc
mov
add
aad
mov
shll
mov
sbb
xor
lds
popf
sbb
outsb
and
push
mov
jp
jbe
inc
daa
push
movsl
jg
or
or
das
sub
sti
inc
sbb
cli
mov
fisubrs
adc
cld
pop
sbb
nop
movsl
push
sbbl
aas
dec
sbbb
and
pop
sahf
mov
test
js
int
adc
iret
loop
jmp
je
add
ljmp
sbbb
or
fsubrp
stos
jl
push
std
cld
xor
popa
fdivrl
mov
pop
jns
and
xchg
dec
sub
mov
push
push
nop
scas
out
push
sub
loope
call
lock
stos
lret
adc
adc
pop
fsub
inc
call
mov
pusha
jns
mov
adcb
pop
in
mov
pusha
jae
mov
arpl
call
ja
in
fbstp
sub
dec
add
inc
hlt
call
pop
rcl
dec
out
ss
fisttpl
push
xchg
lock
addl
lcall
push
add
jnp
test
pop
jg
scas
pushf
push
shlb
adcl
insb
test
je
add
sbb
aaa
xlat
jne
jbe
adc
movsl
in
cmc
sbb
loop
stos
inc
popf
jmp
dec
hlt
mov
loop
movsl
lds
xchg
leave
and
cmp
inc
mulb
add
adc
ds
mov
insb
pop
movsl
push
sub
mov
pop
fstl
jecxz
xchg
cmpsb
and
clc
mov
pusha
mov
jmp
bound
lock
or
sub
xchg
pushf
hlt
mov
push
jb
scas
test
clc
dec
int3
fs
cmp
and
insb
lcall
xchg
dec
mov
repz
aam
pop
int
sbb
pop
jbe
cmp
dec
pop
jmp
adc
popa
push
imul
cld
inc
clc
or
out
repnz
insl
xlat
clc
cmp
sub
cli
andb
pop
neg
pop
sub
mov
xchg
and
cmpsl
aad
aas
in
dec
icebp
aas
jmp
or
cmpsl
dec
addr16
xchg
icebp
ret
out
aaa
inc
fidivrl
ret
insb
add
mov
pop
incb
inc
inc
add
lods
ss
mov
mov
into
jg
aaa
repnz
add
mov
push
fldt
jecxz
test
mov
cmpsb
rcll
sbb
fnstenv
mov
or
enter
dec
jns
cmc
rclb
enter
add
fnstcw
jle
out
mov
add
adc
push
sahf
inc
push
push
pushf
data16
cmpsb
ficompl
stos
and
xchg
je
inc
mov
sbb
jmp
or
inc
xchg
test
push
cli
cmp
sbb
push
sbb
out
dec
inc
nop
lcall
mov
mov
xchg
iret
adc
inc
aam
or
lds
jecxz
cmpsl
aas
pop
jae
lods
xchg
cmpsl
subb
sbb
jecxz
ret
icebp
pop
test
lret
xchg
add
mov
lret
lcall
mov
jmp
mov
dec
popf
and
in
sbb
xchg
rcl
clc
and
mov
outsb
push
test
fcmovnbe
ret
dec
stos
mov
inc
daa
mov
orl
or
xchg
cmp
in
cli
data16
lret
xor
test
mov
fwait
push
push
mov
call
push
adc
inc
mov
pop
xor
fisttpll
cmpsb
pushf
push
movsl
xchg
or
stc
mov
push
int3
or
push
jge
add
or
dec
je
and
addr16
jmp
ret
mov
mov
or
jo
sbb
and
insl
pop
lret
mov
outsb
sub
fisubrs
push
lret
xchg
movsl
mov
pusha
js
fwait
xor
sub
adc
shlb
fidivs
test
cwtl
sub
xchg
scas
mov
sub
dec
cltd
xor
cmc
pop
or
inc
fists
dec
sbb
test
jge
pop
jg
cmp
notl
cmp
in
adc
cmp
push
mov
add
inc
andl
gs
popa
insl
or
data16
mov
pusha
push
mov
data16
out
pop
push
xchg
sub
fsubr
add
icebp
sub
stos
in
lock
nop
or
lock
outsb
sti
mov
fnstsw
rcll
sbb
into
cmpsb
pop
das
xlat
imull
lcall
jns
push
icebp
xor
mov
xor
jo
ret
pop
je
adc
cmp
loop
mov
mov
inc
or
pop
xor
aam
pop
add
filds
ret
mov
and
mov
rol
mov
inc
loopne
cmp
jb
dec
add
mov
jle
adc
pop
jge
inc
push
imul
push
pop
loopne
lods
cmp
jmp
or
test
xchg
repnz
sbb
dec
ljmp
sub
ficomps
aaa
adc
test
push
inc
mov
js
sub
and
sbb
cmp
insb
pop
out
clc
pop
aad
out
nop
ljmp
ds
xchg
sti
ljmp
scas
ret
xchg
add
cmp
and
mov
adc
dec
call
cmp
mov
ret
and
fistl
add
notb
xchg
imul
or
stos
pop
mov
cwtl
push
mov
cwtl
push
xchg
and
adc
or
dec
addl
pop
imul
lahf
pop
add
inc
push
dec
xchg
jb
daa
cmp
mov
jbe
pop
sub
sarb
cld
sbb
clc
sub
fbstp
inc
cmp
jb
in
mov
negb
test
mov
inc
lods
sbb
subb
sbb
addr16
repz
push
cmp
pop
shrl
popf
test
test
clc
sbb
push
add
mov
jl
jg
add
mov
add
or
les
test
pop
lcall
mov
and
gs
inc
cmp
xor
jp
out
movsb
in
int
or
popa
enter
inc
xor
xchg
dec
jg
dec
or
sub
mov
push
mov
jbe
aam
mov
push
shrl
fmull
sub
nop
sarl
stos
pop
xchg
hlt
nop
ret
jecxz
jae
stos
clc
push
stos
adc
shrl
out
lods
push
add
jle
das
sbb
mov
sar
mov
fdivs
cmp
test
je
pop
push
enter
hlt
mov
movsl
sbb
arpl
pop
inc
dec
in
imul
xor
decl
mov
fisubl
push
popa
das
loopne
pushl
mov
cmp
cmp
mov
loop
mov
test
dec
sahf
movsb
pop
subb
js
add
movsl
sbb
je
mov
sub
pop
push
mov
mov
dec
jnp
dec
push
pop
inc
fiaddl
ficomps
je
inc
insb
stos
shll
movsl
mul
and
fdivr
xchg
nop
into
je
lahf
repnz
je
pop
test
push
dec
adc
jmp
dec
pop
xlat
mov
out
sub
movsb
imulb
xchg
pop
adc
out
arpl
xchg
inc
and
mov
out
aad
inc
insl
jnp
sub
xor
jnp
inc
add
out
shlb
sub
mov
enter
popf
hlt
xchg
call
dec
stc
dec
std
lret
stc
arpl
mov
xchg
lcall
stc
enter
rol
lods
je
enter
fcomip
sub
cmpsl
idivb
rcrl
rcll
enter
enter
stos
shr
jns
addr16
add
add
mov
add
pushf
push
sub
jle
fsubrs
sahf
or
mov
jno
jno
andb
pop
out
jo
sbb
adc
aaa
scas
nopl
std
out
cld
sbb
es
cmp
inc
cs
scas
pop
mov
nop
or
pop
shl
sbb
jp
sti
lock
mov
mov
xor
cltd
int
inc
mov
filds
xchg
adc
daa
adc
scas
cmp
ljmp
jbe
dec
ds
xchg
xchg
div
or
rolb
mov
data16
test
pop
xchg
mov
mov
dec
scas
lods
gs
pop
in
lock
enter
xchg
mov
pop
mov
shll
add
mov
lahf
xchg
dec
mov
inc
mov
ret
popl
inc
mov
jno
pop
jnp
sbb
stc
mov
rol
add
mov
cwtl
xor
sbbl
jno
fcmovb
nop
scas
sub
jae
mov
adc
mov
in
mov
push
imul
dec
les
add
ss
push
jp
cmp
jge
aad
lea
push
orb
xor
int3
lret
fdiv
push
sub
mov
popa
scas
pushf
pushf
pop
and
mov
loope
test
jnp
xor
in
pop
imul
sbb
cmc
sub
push
or
inc
cmp
loopne
js
notl
inc
mov
in
dec
mov
icebp
mov
jle
xchg
add
stos
mov
push
pop
repnz
mov
pop
cmpsl
daa
push
gs
jbe
xchg
or
push
pushf
ret
les
outsb
mov
xor
adcb
cmpsb
mov
fcmovnu
add
add
or
mov
mov
push
jo
push
imull
fwait
sbb
clc
mov
stos
xchg
arpl
mov
out
mov
jae
pushf
out
xor
sub
out
mov
aad
add
mov
int3
nop
clc
and
ds
out
mov
or
pop
mov
in
lahf
ss
sbb
out
sub
sbb
push
lock
push
jmp
and
jl
dec
xor
mov
in
lods
test
loop
add
jge
mov
outsl
push
cmp
fimull
in
xchg
sub
push
dec
mov
xchg
mov
in
mov
pop
icebp
enter
lret
fwait
xchg
daa
push
inc
xor
ds
rcll
mov
xchg
int
jl
lret
jnp
sub
test
ret
and
xchg
andb
sub
xor
push
gs
mov
or
inc
or
stos
loopne
fldl
and
cmp
sbb
mov
cmp
sub
add
shll
cmp
dec
mov
fstps
add
pushf
pop
loop
add
xchg
iret
cmp
mov
mov
sahf
xchg
xchg
icebp
or
cmp
push
pop
hlt
dec
insb
repnz
stc
loope
fs
and
mov
rcl
sub
int
or
dec
jecxz
shlb
dec
bound
xor
fstl
push
cmpsl
subb
inc
and
xor
cmp
inc
cmp
sbb
and
mov
stos
hlt
fsubrs
xor
iret
cmp
test
into
aaa
mov
jae
fs
xor
test
stos
xor
repz
mov
lods
add
cmp
sbb
add
xchg
arpl
jmp
push
popa
xor
fs
movsl
shrl
dec
imul
sub
aas
sbb
xor
ljmp
int3
jb
pop
xchg
adc
lock
addr16
into
push
popf
xchg
in
cmp
out
movsb
mov
push
je
sahf
add
mov
rcrl
repz
sbb
adc
inc
sbb
daa
mov
out
insl
add
rclb
and
pop
test
mov
and
fwait
mov
inc
in
fiadds
iret
sbb
les
mov
add
xchg
xchg
adc
imulb
insl
das
or
pop
loopne
daa
dec
test
add
jmp
push
cli
adc
stos
xchg
and
loope
scas
lret
cmp
push
ficomps
lcall
adc
mov
repnz
or
cmp
sub
std
push
pop
jb
xchg
iret
lea
ret
out
jae
xor
xchg
fs
mov
aaa
pop
or
xor
or
sbb
add
popf
mov
inc
and
dec
movsl
test
dec
jns
fsubr
or
mov
jmp
mov
cmpsb
jle
mov
clc
mov
adc
sahf
jne
ljmp
imul
lret
mov
push
cmp
mov
cmc
xchg
je
xlat
dec
lahf
fidivrs
ss
loop
push
mov
lds
xchg
es
js
cmp
ljmp
movsl
hlt
leave
push
inc
call
cwtl
push
add
je
cmp
cmc
pusha
add
xchg
pop
xor
cmp
hlt
sbb
mov
push
pop
dec
adc
popl
and
test
faddl
and
or
cmc
mov
pusha
mul
sub
pop
cli
popa
jbe
out
in
aas
add
add
je
and
push
push
js
ret
enter
lcall
test
ja
movsb
hlt
mov
xlat
je
jecxz
push
icebp
imul
push
jmp
ljmp
cli
bound
fnsave
adc
cmp
test
sbb
adcb
xor
xchg
xchg
jle
xor
cmp
mov
out
xor
xor
fsubr
xor
pop
adc
lret
movsl
filds
mov
in
push
rolb
shl
popf
cmp
dec
scas
pusha
js
test
call
xchg
xchg
push
mov
lret
mov
out
push
subl
inc
cmp
push
jns
int
loop
nop
subb
ja
jbe
adc
sbb
out
jp
lahf
xchg
std
ljmp
aad
mov
xchg
imull
cmpsb
std
fwait
cmp
or
fldcw
scas
mov
lahf
daa
icebp
xchg
dec
lret
fldenv
jo
loopne
out
ljmp
shl
pop
sarb
or
fimuls
or
sub
movups
sub
mov
pop
mov
or
xor
dec
mov
xchg
sub
pop
mov
stos
icebp
test
dec
dec
insb
popf
lock
loop
sbb
adcb
sub
mov
imul
mov
rcrl
loop
ret
jns
movsb
mov
jne
mov
test
pop
movsl
and
sbb
mov
fistpl
and
or
repz
enter
cmp
cs
pop
pop
mov
push
cmc
and
sbb
fcmove
cmpsl
add
add
adcl
cmp
arpl
shll
aad
jecxz
or
fsqrt
adc
or
testb
push
hlt
sbb
xor
cmp
mov
fistpll
cmp
fwait
xorl
scas
push
lea
and
iretw
jle
push
out
jl
sbb
inc
xchg
jge
jbe
outsl
dec
es
das
dec
jno
pusha
testl
sub
mov
imul
jg
dec
push
jecxz
push
das
dec
cmp
inc
xor
xchg
pop
jno
pop
outsl
repz
sub
mov
jmp
mov
sub
bound
shll
xor
inc
push
addb
push
mov
xchg
sbb
dec
jle
data16
xor
mov
inc
xlat
out
push
jnp
pop
jns
pop
xchg
adc
shl
and
adc
xor
mov
and
sub
test
pop
mov
push
rcll
fwait
mov
inc
fldenv
or
pop
fadd
cmp
dec
mov
mov
pop
xchg
mov
mov
cld
dec
push
xchg
or
mov
or
addb
sarl
loopne
mov
jno
xchg
pop
or
rep
pop
or
cmp
mov
test
ret
mov
dec
push
frstor
pop
cmp
sbb
pusha
ss
fldl
dec
aad
xchg
jno
sbb
jp
sbb
les
pop
pop
mov
lahf
dec
shld
inc
pop
and
repz
pop
cmp
and
xchg
push
adc
jo
mov
inc
shrb
adc
mov
addr16
pop
popa
cmp
movmskps
test
repz
cmp
insl
jg
mov
fs
stos
mov
xchg
dec
mov
pop
sbb
xchg
sbb
in
rcl
enter
repz
dec
sbb
mov
clc
pop
and
cmp
in
inc
push
mov
jmp
cmc
repnz
sub
imul
jmp
push
popf
xlat
stos
sub
sbb
jnp
dec
stos
in
xlat
mov
xor
mov
mov
mov
ja
js
xchg
int3
stc
xchg
and
out
jno
jp
mov
mov
xchg
std
inc
jp
fnstenv
sbbb
xchg
sahf
jle
or
mov
clc
data16
jg
push
aaa
mov
mov
enter
dec
cmp
mov
addr16
psllq
lds
mov
xchg
add
ret
push
jp
and
jmp
fdivrl
cmc
jle
add
pop
jns
sahf
nop
rolb
inc
inc
push
shll
xor
mov
mov
in
dec
dec
sti
ret
pop
or
pusha
lea
jp
mov
mov
sub
stc
inc
dec
test
mov
sub
stos
mov
mov
cmpsl
testb
adc
xlat
fldt
and
lret
shrl
ror
jmp
into
dec
xchg
lret
cli
cwtl
cld
xchg
fcmovbe
cmp
cmp
insb
xor
pop
add
inc
cmp
dec
cmp
leave
mov
cs
test
out
mov
and
pushf
sbb
aaa
dec
jge
ja
mov
jns
jo
push
or
in
push
and
pusha
add
outsb
add
je
push
fwait
outsl
test
or
inc
stos
jbe
stos
mov
xor
movsl
lcall
out
scas
xchg
sub
mov
pushf
incl
lahf
or
push
xchg
push
mov
xor
push
push
mov
addr16
sbb
insb
sbb
jne
push
or
sbb
jbe
mov
or
pusha
xor
rorl
inc
movb
dec
rol
out
jbe
clc
popa
pusha
fbld
inc
test
addb
or
lcall
mov
jp
fs
mov
lea
add
cmp
cmp
cmp
adc
lret
sub
mov
lock
dec
bound
xchg
mov
pop
cld
xor
scas
add
adc
out
fnstcw
loopne
insl
add
das
mov
cld
mov
mov
vmovsldup
pop
adc
sbb
out
add
das
sub
mov
lret
cmpl
test
sub
fbld
or
mov
cmpsb
xchg
mov
xchg
mov
sbb
or
mov
icebp
xchg
pop
stos
xor
fsubr
xchg
popa
cmc
adc
and
mov
add
shlb
outsl
dec
mov
adcb
lods
shl
les
pop
xor
notl
aad
cmp
push
cmpsb
dec
xor
data16
dec
sbb
mov
popa
repnz
out
hlt
lret
loope
mov
fwait
pop
lret
dec
or
or
or
stc
cmp
loop
sub
adc
loopne
call
push
adc
add
mov
je
mov
loope
andl
out
push
mov
sbb
cmp
inc
jnp
xor
test
pop
sub
rclb
inc
sti
arpl
push
inc
mov
xorb
cmp
adc
loope
pop
in
cmp
push
rcrl
pusha
addr16
mov
pop
movsb
mov
cmpsl
xlat
adc
mov
lahf
testb
mov
js
rorl
ds
xchg
xchg
inc
adc
in
inc
mov
dec
pusha
test
fistpll
xchg
pop
jb
push
stc
jmp
and
cmpsb
ljmp
pop
gs
jle
rcrb
je
jl
lahf
cmp
cmp
inc
inc
in
and
les
negl
inc
add
dec
or
call
loop
mov
repz
mov
nop
aam
cmp
mov
xchg
push
jb
inc
add
cmp
std
cmp
xor
dec
xor
push
ss
das
add
movb
add
scas
xlat
jae
mov
jne
movsb
stos
or
adc
pop
push
cmpsb
xchg
fldcw
inc
fbstp
push
leave
ds
mov
pop
out
pop
repz
sub
inc
mov
pop
in
test
inc
xchg
adc
push
jecxz
mov
mov
cwtl
mov
subl
dec
mov
adc
in
repz
lock
mov
xchg
rorb
push
scas
shl
push
xchg
inc
lahf
xchg
mov
orl
inc
in
push
imul
jle
pop
mov
mov
in
lods
and
movsl
or
sbb
jae
xchg
nop
jne
and
imul
cmp
in
loop
pop
xor
cmp
insl
fwait
dec
les
cli
mov
stc
jl
mov
je
bound
and
aad
lods
fimull
xor
sub
xor
push
fsts
imul
adc
inc
dec
jno
mov
insl
and
xor
scas
negb
xor
call
cwtl
insl
movsb
cmp
test
out
sbb
sbb
js
jb
push
lcall
dec
xchg
xlat
mov
jbe
mov
sarl
flds
insb
int
or
xlat
inc
ret
fsubl
mov
lcall
adc
mov
into
dec
enter
lds
sub
mov
cld
xchg
or
mov
dec
ds
lock
jnp
jns
aam
sahf
shlb
es
adc
or
xchg
cwtl
or
out
sub
repz
mov
stc
pop
or
clc
push
push
out
cmp
pop
push
leave
add
pop
and
jbe
push
popf
loop
jno
mov
dec
mov
mov
cmpsl
mov
dec
lods
js
mov
pushf
push
push
push
iret
sub
mov
push
popa
jl
dec
pop
and
add
stc
push
mov
loope
call
enter
cltd
insb
pop
xor
xlat
int
sbb
push
cmp
hlt
insl
xchg
out
cmp
mov
push
push
push
and
pop
je
jns
xchg
push
mov
fldt
pop
xor
in
sub
cmp
push
psllq
fidivrs
xlat
loopne
sbb
fscale
xchg
pop
jp
dec
ljmp
jae
aad
pop
rcrb
dec
mov
jbe
sahf
sub
dec
sub
stos
sbb
and
jbe
xor
or
xchg
pop
in
dec
nop
and
stos
aaa
loope
mov
lahf
xlat
xor
mov
dec
cwtl
cmpsb
xchg
fcomip
out
outsl
dec
push
push
outsl
mov
les
push
ret
pop
test
sbb
mov
xchg
pop
dec
push
scas
pop
mov
jecxz
out
xchg
in
mov
mov
mov
and
lods
jmp
mov
ss
add
dec
call
xchg
data16
adc
cli
cltd
repz
sbb
movsb
fwait
push
add
xchg
pop
sti
dec
aas
and
push
aaa
repnz
in
mov
pop
lock
aad
mov
mov
and
lret
nop
jle
xor
xchg
xchg
aas
jp
pop
into
sbb
mov
mov
fiaddl
sbb
cmp
cmpsb
popf
lods
dec
cltd
push
jge
or
ja
insb
imul
mov
xchg
sbb
push
aas
mov
mov
cs
xchg
push
inc
ljmp
test
xor
inc
aas
fs
cmp
out
repnz
mov
and
imul
mov
enter
sbb
shl
xlat
mov
inc
mov
mov
jle
clc
jae
cld
mov
cwtl
sbb
rcrl
loope
sarl
mov
cld
dec
stos
and
xchg
addr16
add
adc
cld
push
mov
fstpt
sbb
mov
or
repz
push
das
add
and
sub
ljmp
fdivrl
insb
push
mov
fstpt
shlb
imull
cmp
xchg
repz
jl
inc
popf
cld
pop
jnp
jecxz
mov
mov
out
mov
push
sbb
sub
lock
iret
add
ds
fsubrl
fnsave
xor
push
dec
je
hlt
push
pop
jmp
test
jns
fildl
leave
push
rol
idivb
add
pop
mov
mov
adc
scas
xor
sub
out
mov
outsl
cmp
xchg
add
inc
shl
jno
ja
xor
cmp
jns
cmp
cld
xchg
sub
mov
mov
stos
push
sub
shrl
mov
jae
pop
dec
sub
jmp
sub
inc
inc
mov
sub
aad
aaa
js
sbb
iret
mov
mov
or
push
dec
mov
mov
cmp
mov
add
out
bound
or
fcoms
movl
leave
mov
xchg
sbb
sub
xor
and
aam
push
dec
sahf
mov
push
mov
fsubrl
push
nop
xor
aad
test
sub
cmpl
in
aas
insb
xchg
div
mov
mov
and
fmuls
xor
cmp
push
sub
out
xchg
jg
cmp
mov
bound
sti
cmp
mov
mov
jnp
xchg
stc
stos
or
xor
mov
je
xchg
sbb
push
arpl
sbb
sbb
insb
mov
ja
push
orl
cmpsb
stc
mov
xchg
push
and
into
jae
es
lret
pop
lret
out
popa
and
and
es
hlt
cmp
cmp
or
shl
push
fwait
add
sti
out
scas
mov
out
inc
cwtl
mov
int
mov
pop
imul
in
push
push
lahf
xor
mov
xchg
inc
mov
ret
int3
and
jmp
out
ljmp
cmpsb
sbb
in
push
ljmp
add
dec
and
and
xor
pusha
pop
dec
cltd
push
mov
ret
fnstsw
push
add
imul
std
popa
leave
sub
in
movsl
mov
push
mov
mov
inc
les
mov
clc
shlb
mov
lea
in
enter
insb
andl
or
int
sub
push
and
pop
scas
test
outsb
std
fldt
pop
popa
sub
pusha
xchg
lret
scas
mov
mov
cwtl
pause
gs
sbb
dec
mov
int3
popa
or
lods
pop
dec
test
push
pop
je
sbb
out
or
test
dec
hlt
in
mov
jp
aaa
bound
insl
jo
pop
xchg
sbb
js
or
sahf
pop
mov
mov
adc
jmp
daa
subb
fsubrs
pop
cld
movsl
lods
sar
pushf
xchg
xchg
aad
int3
cld
enter
fsubrl
scas
fwait
and
lret
dec
jne
mov
sarb
in
out
rcrb
notl
or
or
or
jg
repz
out
xor
dec
fdivrl
mov
outsb
jp
xchg
popa
enter
adc
mov
mov
addr16
icebp
jne
outsl
mov
or
inc
roll
or
stos
adc
xlat
out
aas
sub
inc
adc
pop
or
addr16
xor
lcall
lock
clc
pop
and
push
sub
imul
shl
cmp
cwtl
pushf
mov
jns
mov
and
inc
adc
leave
sti
lahf
push
jp
stc
sub
cmp
aaa
ja
sbb
pop
inc
icebp
dec
cmp
jle
enter
and
out
aaa
fstp
lods
mov
sti
iret
xor
add
insl
jns
adc
das
dec
repz
dec
sub
movsl
gs
test
jle
fisttpll
cmpsl
cld
jl
int3
mov
mov
xchg
adc
sbb
cmp
lea
jns
mov
sar
adc
jp
mov
pop
mov
cmpsl
inc
jp
je
lret
and
or
or
loope
dec
jb
or
pushf
or
out
or
dec
insl
push
enter
out
xchg
cmpb
or
cwtl
shll
jmp
xor
nop
dec
fmul
dec
sahf
mov
loope
pop
inc
insb
xor
adc
jbe
cmp
and
fwait
loop
mov
sbb
std
fs
popa
fcoms
cmp
pop
dec
pop
cld
lahf
stos
pop
decb
dec
ds
repz
pcmpeqb
loope
or
es
outsb
inc
mov
aam
mov
push
pusha
ds
rclb
push
xchg
pop
inc
bound
and
mov
rorl
cmp
adc
sbb
shl
popf
pop
and
or
dec
in
mov
ret
imul
outsl
sbb
xchg
pop
jecxz
iret
cltd
aas
cwtl
in
mov
jecxz
push
lock
cmp
mov
lea
or
stos
lds
call
adc
andb
push
shlb
and
adc
sbb
cwtl
cmp
mov
mov
insl
xor
cmp
lods
cmpsl
mov
loop
insb
scas
out
jmp
xchg
insl
cmc
and
push
sbb
aas
push
arpl
jmp
push
mov
xchg
xchg
sarl
xchg
jo
push
outsl
out
pop
jae
bound
loopne
inc
ja
push
or
push
fwait
movsb
fisttpll
dec
ds
push
adc
mov
repnz
out
mov
arpl
lret
fstpt
mov
clc
cmc
fdivl
imul
mov
mov
repz
mov
es
lcall
mov
sbb
sbb
lods
xchg
ds
nop
das
mov
pop
cmc
insb
insb
push
shll
or
stos
mov
push
rorl
push
aad
dec
lss
sbb
inc
sti
sahf
frstor
std
loop
add
or
std
and
icebp
xor
inc
xchg
adc
push
call
mov
stos
jge
adc
jl
dec
insl
fld
cmpl
xchg
stos
int3
sbb
xor
mov
or
dec
imul
into
push
jmp
sub
pop
clc
frstor
cmpsb
mov
cli
jbe
scas
leave
or
xchg
push
push
enter
or
pop
mov
or
test
lods
sub
out
fs
jl
pop
adc
icebp
in
dec
fisttpll
loope
fstpt
jg
and
mov
mov
xchg
lock
adc
and
hlt
sub
jg
push
imul
mov
sbb
mov
in
and
mov
flds
jo
mov
inc
mov
mov
mov
ficoml
mov
pop
hlt
cmpsl
aam
sub
cmc
ja
arpl
push
and
mov
jmp
daa
cltd
and
test
xchg
data16
jb
push
out
jge
js
ds
push
insb
pop
dec
mov
add
jmp
pop
scas
sahf
or
jmp
dec
push
orl
mov
push
js
jle
data16
orl
int3
aad
mov
cmp
orb
sbb
or
mov
inc
sub
aam
pusha
ret
mov
fadds
subl
sbb
sbbb
aas
iret
out
sbb
pop
in
lret
or
int3
mov
or
sahf
pop
dec
cmpb
mov
lods
in
add
mov
aas
or
pop
mov
mov
ja
subl
addb
push
lds
mov
mov
lret
xor
out
sbb
mov
or
iret
adc
dec
lods
repz
add
aam
xchg
data16
mov
stos
cli
cld
shrb
jno
mov
pop
mov
jecxz
fimull
and
adc
pop
jb
test
xchg
insl
adc
push
clc
sbb
jmp
test
aam
xor
or
std
popa
jge
mov
clc
sbb
pop
in
pcmpeqw
xor
xor
sbb
ss
adcb
inc
repnz
dec
addr16
adc
inc
iret
mov
cmp
dec
mov
sbb
imul
movsb
test
popa
mov
lret
push
out
inc
xchg
dec
lods
sub
or
mov
push
adc
idiv
push
pop
sbb
loop
int3
ror
add
sbb
jbe
dec
ja
sbb
into
xchg
sbb
and
mov
imul
jbe
mov
inc
mov
insl
dec
mov
push
and
jg
fs
cli
leave
mov
shlb
or
jnp
jae
mov
roll
cmpb
dec
mov
loope
add
ja
jle
sbb
mov
mov
mov
roll
and
gs
xor
enter
cmp
pop
int3
push
into
mov
addr16
cmp
mov
icebp
push
loop
faddp
mov
movsb
and
mov
lds
std
push
push
sbb
dec
jne
mov
fadds
loope
hlt
sbb
das
sahf
mov
clc
push
add
icebp
subb
out
push
leave
cli
mov
outsl
and
jb
xchg
int3
inc
or
jp
movl
rol
clc
sbb
push
sub
lods
mov
mov
cli
jg
cld
sub
mov
arpl
cltd
fildll
ss
stc
lret
mov
and
and
sbb
and
and
adc
mov
cltd
sbb
in
adc
pusha
leave
jns
sbb
dec
stos
add
adc
pushl
push
add
stc
ret
out
mov
and
repz
sti
sbb
es
enter
test
lret
dec
add
lods
sahf
faddl
xchg
fwait
inc
inc
aas
shl
in
ja
lea
movsb
mov
cltd
sub
mov
shlb
pop
test
mov
fidivs
xor
in
std
in
sub
push
jae
std
push
dec
fmul
mov
cs
in
mov
xchg
lret
sbb
int3
mov
push
jno
popa
mov
mov
dec
jno
sub
fs
ret
cs
fists
ds
mov
lods
dec
add
outsl
xchg
fstpt
mov
das
or
and
scas
mov
in
stos
cmp
add
inc
je
cli
cli
sbb
jecxz
sbb
jle
xchg
mov
jl
roll
aas
repnz
js
scas
ja
mov
imul
adcl
mov
pop
fs
sbb
mov
mov
cwtl
test
ret
ss
xchg
cmp
pop
insl
dec
xchg
cs
out
inc
mov
push
inc
repnz
dec
and
mov
cmpb
dec
fldlg2
cmp
repz
sbb
pop
and
ljmp
xchg
lahf
dec
jmp
out
out
inc
les
mov
add
stos
pop
addr16
and
and
cmp
pusha
call
insl
mov
in
and
and
dec
inc
sub
mov
out
pushf
les
mov
dec
mov
test
dec
cmp
dec
test
or
stc
dec
stc
cld
mov
mov
adc
dec
mov
in
jl
addr16
pop
movl
or
cmp
mov
or
int3
and
in
push
cmp
mov
les
adc
jae
dec
aas
and
push
lret
out
jb
push
iret
pop
mov
push
negl
in
xor
test
out
gs
xchg
dec
stos
and
mov
push
pop
stos
dec
hlt
nop
std
jle
mov
jmp
sbb
inc
outsl
add
lcall
lcall
lock
sbb
sub
sbb
sahf
int3
in
cmp
cmp
jl
fnsave
sti
rcll
push
mov
clc
adc
cs
ror
jge
lret
and
cltd
jecxz
aaa
dec
lret
mov
jne
push
in
xor
dec
mov
mov
mov
cli
test
loopne
push
daa
sbb
iret
nop
shl
loope
popf
movl
jl
lret
sub
inc
and
sbb
mov
push
lods
cmp
in
rcr
adc
popa
aas
jecxz
dec
pop
or
mov
dec
insl
out
mov
and
iret
inc
scas
cmpsl
stos
jl
loope
jg
out
or
das
xor
out
shlb
stos
movsl
pop
xor
in
xchg
add
mov
test
into
pop
and
leave
stos
mov
loope
adc
loope
cmc
in
rol
mov
adc
pop
add
arpl
ds
lret
dec
out
mov
mov
xchg
outsb
adc
lods
dec
jno
and
mov
push
bound
xchg
inc
pusha
pop
popf
push
out
pusha
stc
xchg
dec
push
scas
adc
jb
out
mov
loop
and
mov
shlb
inc
aad
jg
je
jl
mov
gs
leave
dec
mov
fdiv
or
push
jg
jae
lahf
adc
lods
loopne
inc
or
call
mov
invd
aam
leave
and
mov
pop
xor
xchg
add
jge
cmp
inc
xor
test
jecxz
aaa
pop
and
mov
sbb
sub
cmp
sub
xor
ljmp
cmp
addr16
xor
inc
out
sbb
int3
mov
cwtl
in
cmp
int3
jo
dec
xlat
or
jmp
mov
rclb
xchg
push
sar
sub
lock
mov
daa
lea
pop
or
dec
sarl
lcall
cs
inc
add
sbb
mov
mov
xchg
dec
loope,pt
test
pop
fcmovne
adc
outsb
xchg
mov
pop
movsl
and
or
sub
repnz
cwtl
insl
loopne
push
loope
add
dec
lret
mov
sub
pop
and
inc
sub
in
jmp
add
fists
jo
lahf
ss
add
jl
faddl
loope
push
cmc
adc
push
xchg
clc
mov
pop
jle
adc
sub
mov
xor
imul
cmp
lods
mov
fstps
shr
push
insl
fistpl
out
mov
jge
sub
insl
scas
stos
ss
sbb
xchg
stos
pop
xor
pop
jmp
arpl
mov
icebp
sbb
mov
xor
divb
sub
fisttpl
jb
out
mov
fcompl
push
scas
xlat
iret
sub
adc
mov
xchg
dec
sub
cmpsl
lods
xlat
jmp
shll
xor
cmpsl
pusha
cmc
and
out
and
repz
inc
cld
adc
mov
ljmp
xor
fidivrs
xor
and
mov
cld
jecxz
cmp
jmp
dec
or
hlt
inc
ja
xchg
xchg
jle
add
mov
lret
enter
movsb
rcll
jno
xchg
pop
shrl
js
adc
lods
pushl
mov
mov
lods
aam
lock
mov
mov
sbb
mov
aaa
add
mov
mov
push
add
dec
cmpb
mov
dec
popf
nop
into
pop
cmp
mov
repz
jl
ljmp
insb
fndisi(8087
insl
or
movsl
pop
lock
mov
push
cmp
push
jge
push
add
cs
lahf
pop
stc
cs
push
mov
sbb
xchg
adc
push
mov
adc
je
lds
pop
outsl
outsl
add
push
push
aaa
add
data16
mov
test
cli
jp
hlt
in
cwtl
mov
mov
or
leave
push
test
sub
ret
push
pop
add
mov
inc
mov
xchg
pop
add
mov
sbb
adc
sti
xchg
movsl
sub
leave
inc
lret
aad
daa
pop
gs
cmpsl
int
les
or
push
cli
cmp
push
inc
jne
aaa
jge
out
pop
inc
hlt
jne
enter
inc
add
call
test
js
daa
ja
cmp
xchg
jp
or
xchg
test
mov
jg
mov
insb
rcl
out
inc
bound
mov
push
test
jne
adc
dec
add
dec
jmp
inc
imul
loopne
push
shll
dec
mov
fcoml
out
loop
ret
ror
pop
cmc
bound
sub
stc
movsl
jns
outsl
or
cld
fnstcw
adc
pop
mov
sbb
push
pop
cmc
sub
dec
mov
push
int
jle
push
sti
mov
mov
shr
push
in
adc
adc
cmp
mov
push
jmp
cmp
outsb
fs
and
enter
ljmp
ret
pop
or
fdiv
or
push
inc
lock
arpl
or
cltd
cwtl
dec
cltd
mov
int
xchg
into
fsubl
cmpsl
mov
les
jb
sbbl
dec
jecxz
loope
loop
xor
out
leave
pop
pop
sbb
mov
rol
sub
enter
loopne
dec
jnp
cs
movsb
sub
cmpsl
mov
lock
enter
jg
pop
mov
jno
jmp
test
lret
enter
arpl
cmp
cmpsl
xchg
movsb
into
aad
popf
sbb
xor
push
cmp
or
mov
test
scas
fistpl
lahf
dec
jo
xchg
mov
call
out
hlt
xchg
adc
add
jl
cmp
cwtl
cld
mov
int
fcoml
fidivrl
jne
nop
adc
movsb
jle
pop
jmp
xlat
ret
ss
and
adcl
sub
fidivrl
mov
jb
sub
and
xor
ret
pop
push
outsl
push
sub
cmp
adc
js
imul
pusha
les
adc
outsb
ret
xor
mov
mov
push
adc
xor
jne
std
xor
add
fsubrl
jae
jge
sti
add
ret
adc
push
js
shll
out
leave
hlt
mov
loopw
sti
lret
dec
cmpb
or
cmp
push
test
mov
sbbb
and
lret
mov
xchg
mov
cli
inc
insl
into
mov
cs
push
pop
arpl
add
xlat
int3
xor
jl
cmp
inc
insl
dec
mov
int
dec
in
cmp
mov
add
stos
lea
sub
dec
jl
sbb
loope
out
dec
popf
push
outsl
mov
cmp
insb
movsl
jbe
insl
jg
inc
dec
push
sbb
and
or
mov
mov
lods
fsubl
pop
push
fisttpl
add
cwtl
jae
sbb
sarl
dec
pop
dec
push
daa
shrl
shrb
push
lds
jno
mov
adc
das
cmovbe
loope
test
pop
sahf
xchg
idiv
fsub
pusha
aam
shll
mov
add
iret
inc
jns
ret
mov
cwtl
mov
rcl
xchg
cmc
mov
das
mov
mov
jecxz
mov
iretw
cltd
jnp
dec
jb
add
inc
cwtl
out
inc
pop
iretw
dec
xchg
sub
adc
jns
jle
daa
subl
das
sbbb
nop
sarl
test
adc
loop
subb
and
ret
mov
add
ss
mull
and
out
daa
scas
sub
bound
dec
cmp
fwait
xor
and
aad
js
add
cld
and
inc
fisttpl
test
dec
and
ss
mov
lock
pop
cmp
outsl
add
and
push
repnz
xor
adc
movsb
mov
ficompl
rcl
mov
ds
cs
lea
cmp
pop
dec
adc
adc
jl
push
xor
imulb
addb
stos
cmp
cmp
cld
fdivs
aas
sarb
or
pop
jo
in
fs
dec
mov
jno
or
rorl
xchg
dec
les
dec
loop
mov
dec
aaa
test
jns
lea
lahf
or
mov
sahf
fpatan
jmp
sbb
imul
int3
pop
push
or
jle
sub
jmp
jno
hlt
repnz
or
dec
xchg
int
sbb
mov
dec
cld
fs
ficoms
lods
cs
or
out
mov
test
push
test
lcall
xor
daa
ljmp
xor
rcl
xor
fcoms
and
inc
xor
test
cwtl
shlb
rclb
lods
repz
mov
mov
mov
pop
fidivl
xchg
stos
mov
clc
test
push
mov
shll
sub
push
xor
test
sbbl
xchg
hlt
into
clc
out
ja
test
in
mov
out
aaa
fisttps
cmp
fbstp
ret
lcall
pop
pop
fisubrl
or
mov
dec
dec
mov
enter
mov
in
mov
mov
or
mov
or
pop
jmp
pop
ss
fwait
add
mov
daa
push
mov
clc
test
pop
mov
xchg
mov
stc
jecxz
sbb
fsubr
push
andl
punpckhbw
subb
jne
outsl
test
jl
jle
mov
or
lcall
push
xchg
inc
imul
push
sbb
push
adcl
sarb
mov
test
fwait
addl
lret
das
mov
cmp
mov
ret
jb
mov
xchg
cmc
xor
in
out
cwtl
jge
dec
adc
xlat
and
dec
cmp
iret
add
loop
or
insl
mov
movsb
das
ljmp
cld
das
mov
jle
gs
lods
notl
xor
aas
pop
ljmp
jnp
mov
lods
daa
push
pop
sbb
dec
mov
or
cwtl
ret
sub
imul
mov
mov
fwait
xchg
mov
xchg
ret
mov
jne
dec
fidivrl
nop
xor
icebp
es
xlat
imul
add
xor
pop
xor
or
adc
rorb
out
mov
or
jl
mov
outsl
insl
cmp
or
movnti
mov
in
mov
xchg
inc
push
lods
and
xchg
divl
jae
cmpsl
inc
jmp
and
dec
adc
add
shlb
std
mov
or
and
cwtl
and
pop
jg
lcall
dec
sbb
push
test
cs
enter
xchg
lret
inc
aam
sbb
mov
push
jge
pop
popf
push
repz
jmp
mov
jne
loope
mov
inc
inc
mov
push
adc
stos
sbb
mov
xchg
bound
rorb
es
jl
mov
sbb
xchg
xchg
sbb
das
outsb
loop
shl
pop
sbb
test
mov
test
subl
cltd
shll
aam
addr16
repz
out
dec
add
in
pushf
inc
cmpsl
sbb
std
icebp
sbb
aad
pop
mov
out
jbe
mov
test
ficoml
mov
aam
shlb
imul
xchg
dec
cmp
sbb
push
out
out
je
aas
clc
test
jmp
out
rcl
pop
mov
int
or
imul
sbb
std
inc
lods
and
and
test
lock
out
rol
or
pop
cmp
jp
int
mov
stos
mov
lret
bound
in
cmp
bound
mov
sti
sahf
mov
sbb
fwait
or
jbe
lods
out
xor
pushf
jp
mov
mov
xchg
mov
loope
and
aam
movsl
xor
jp
mov
mov
shlb
test
sbb
xchg
push
arpl
inc
outsb
lds
imul
ljmp
call
jo
inc
jge
mov
pushf
jnp
sub
das
pusha
data16
or
and
pop
adc
in
or
movsb
sub
fwait
pushf
out
mov
lahf
mov
je
sbb
sarb
or
repz
sti
in
repnz
push
mov
add
imul
adc
bnd
sbb
xlat
aas
sbb
adc
inc
test
fnsave
out
cs
and
lret
jne
les
enter
out
cmp
sbbb
iret
arpl
outsb
out
cmp
add
add
daa
insb
mov
push
loope
jne
adc
push
stc
and
inc
or
hlt
pop
ss
stos
xchg
jmp
std
sbb
mov
push
insl
xchg
jle
sub
insb
add
mov
in
xchg
xchg
stos
pop
in
mov
jecxz
inc
mov
in
push
mov
repz
jecxz
mov
rol
xchg
or
and
les
xchg
jo
aaa
pop
fs
hlt
ret
adc
movsl
std
lea
ret
add
fstpt
gs
push
dec
mov
movhps
cwtl
jo
or
stc
jecxz
push
xchg
xor
push
rcrl
rcrl
cmp
mov
dec
pop
xchg
mov
xlat
cmp
pushl
in
cmp
pushf
pop
fisubl
dec
cmp
and
insb
dec
push
es
inc
cmp
mov
cmpb
mov
rcrb
cmpb
sbb
xor
stc
fs
xchg
inc
shr
repz
lds
and
test
lret
repnz
mov
fs
adc
push
pushf
sbb
push
dec
addr16
stc
sbbb
dec
pop
call
loopne
les
mov
add
pop
cltd
adcl
sub
scas
test
lock
pop
pop
push
or
xor
imul
jg
es
and
stos
push
sbb
push
les
leave
cmp
xchg
cmp
outsb
push
shlb
cmp
aad
xlat
sub
cltd
and
int
push
into
scas
or
shlb
sub
lods
mov
cmp
test
clc
cmp
inc
and
push
repnz
fidivrl
xchg
insb
cmc
sub
enterw
cwtl
lods
lock
inc
and
sub
xchg
clc
xor
shrl
push
mov
fisttpll
pop
shll
scas
xchg
arpl
call
inc
cld
mov
and
adcb
push
pop
mov
std
loop
xlat
test
mov
out
sub
cmpb
dec
or
xchg
cmpsb
sti
lock
fdivrl
loop
jmp
add
pop
jo
mov
sbb
test
pop
xor
sub
xor
ficompl
add
dec
jl
cmpsb
cmp
mov
incb
fldcw
stc
iret
xor
fcompl
js
or
pop
call
add
data16
inc
je
pop
jnp
out
xor
lcall
jne
push
sub
jge
lods
repz
push
orl
pop
inc
jns
subl
pusha
in
jae
cmc
loop
jb
pop
adc
jecxz
xchg
fadds
mov
addr16
lcall
stos
lahf
xchg
xchg
lds
out
jle
movsb
adc
push
clc
mov
das
sbb
dec
inc
repz
sti
jbe
aad
mov
pop
sbb
add
xorb
test
loop
mov
rcl
shrl
cmp
enter
int3
test
sbb
xor
pop
pop
mov
pop
dec
push
xor
pop
mov
clc
in
jecxz
les
stos
leave
and
rcrl
xor
sub
cmpl
mov
adc
scas
orl
arpl
das
cltd
out
js
in
mov
mov
jle
xchg
loope
push
lods
test
aad
aaa
push
or
mov
cmp
pop
mov
cmp
lret
test
cld
mov
cwtl
xorl
adc
out
push
clc
jns
js
jns
sti
mov
out
push
les
fistps
je
loopne
ss
or
rorl
and
rclb
fdivr
stc
xor
lock
fists
pop
mov
lds
adc
or
test
xchg
adc
pop
pop
subb
push
or
loopne
in
scas
xchg
das
cwtl
dec
jge
xchg
inc
lock
xchg
stc
cs
xor
xchg
push
push
scas
int
xchg
dec
ljmp
testb
or
mov
ljmp
scas
lea
jns
push
sti
xchg
repz
push
imul
xchg
imul
mov
dec
jns
add
test
xchg
push
jae
aad
pop
in
mov
sub
test
mov
add
out
mov
pop
xchg
pop
pop
enter
in
and
lahf
invd
ret
fxch
adc
insl
pushf
or
rorl
mov
inc
adc
loope
push
ljmp
cmp
pop
add
test
test
jbe
cld
adc
inc
insl
sub
jmp
ljmp
push
in
gs
stos
arpl
dec
loope
jns
and
aas
scas
mov
pop
fwait
and
ja
push
or
or
cmp
sub
pop
xor
enter
jae
rorl
mov
mov
je
shll
jb
xchg
test
pushf
sub
sub
fsubl
test
mov
and
sbb
and
and
jle
sbb
movsb
daa
and
test
xchg
jle
adc
sbb
pop
jns
loop
xchg
iret
imul
test
push
lds
lret
lea
pop
dec
mov
jl
add
ja
push
into
xlat
outsb
rcrl
stos
adc
loop
mov
sub
and
pop
cmpsb
cltd
iret
out
xchg
lahf
stos
sub
lcall
inc
jo
push
pop
pop
pop
adc
ret
lods
and
int3
xor
sbb
mov
mov
cmp
jbe
cmp
inc
jle
out
mov
pop
loop
in
xlat
cld
cmc
fucomi
xor
adc
ljmp
leave
ja
popf
mov
jp
jns
sub
cli
outsl
mov
popa
jne
adc
jecxz
cmp
jp
adc
or
lahf
xor
and
imul
fstl
xor
xchg
mov
popa
test
movsb
lahf
push
inc
stos
out
and
repnz
adc
cmpsl
mov
cmp
data16
or
call
movsl
fmull
jl
pop
ja
mov
mov
fs
mov
or
lds
enter
adc
hlt
xor
je
test
or
leave
dec
sti
roll
das
jnp
xchg
ja
rdpmc
lahf
jbe
mov
mov
mov
mov
lahf
shll
mov
xchg
shl
divl
add
sub
jb
jle
js
rolb
in
ror
or
or
daa
pop
pusha
loop
loop
xlat
xchg
push
cmp
mov
mov
movsb
mov
push
cwtl
lret
rcll
ret
mov
cmp
sub
mov
mov
sarl
push
mov
lods
and
adc
jle
push
add
or
sub
in
aaa
push
dec
push
daa
cmpsb
xor
cmc
pop
notl
aaa
cmp
push
push
mov
in
cwtl
and
cmc
imul
adc
mov
sbb
pop
add
lcall
dec
les
insb
test
cs
daa
push
out
mov
cmp
std
dec
dec
or
jae
and
lds
pop
cmp
sub
popa
lcall
xchg
icebp
and
mov
dec
push
sbb
repnz
dec
repnz
ljmp
inc
mov
cmp
ficomps
aas
or
iret
lods
jle
jno
and
in
gs
add
insl
out
movsb
sub
xchg
cmp
fiaddl
jl
push
out
and
mov
adc
push
push
push
mov
sbb
fisubrl
dec
andb
mov
js
add
mov
insl
pop
jmp
and
push
push
add
mov
js
arpl
xchg
mov
rorl
add
loope
data16
adc
mov
adc
pop
adc
or
and
inc
popf
jmp
adc
pop
xor
clc
leave
imul
aaa
rcrb
mov
jb
adc
inc
sbb
mov
push
ljmp
mov
pop
test
aad
mov
jmp
dec
push
add
cmp
adc
mov
cli
sub
in
jno
xlat
xor
jge
push
je
jnp
iret
dec
jnp
jnp
dec
mov
out
jg
jbe
inc
fdivr
shr
push
jmp
push
stos
jle
jp
sub
rolb
subb
clc
incw
xchg
notl
int3
daa
outsl
xchg
int
fs
or
stos
in
dec
mov
pop
and
daa
cwtl
bnd
xchg
push
jne
cmp
cli
xor
mov
and
push
js
mov
in
pop
cmp
dec
xchg
fs
or
fs
popf
push
es
pop
rcll
lret
dec
cmc
jne
xchg
dec
xor
jge
sbb
imul
xor
cld
mov
arpl
push
sti
jecxz
out
jns
mov
jecxz
push
iret
leave
push
or
pop
stc
js
out
ljmp
add
sub
ja
lret
inc
std
and
add
push
scas
sbb
movsl
jnp
mov
mov
sub
mov
and
mov
lcall
adc
lahf
cmc
shl
mov
lea
jno
loopne
mov
leave
enter
cltd
fs
mov
movsb
movsb
repnz
pop
mov
sbb
inc
addr16
xchg
push
cli
cmpsl
loopne
pop
or
jne
movsl
sub
mov
data16
push
xchg
jo
add
fidivs
xor
fstl
push
xor
dec
adcb
sub
jbe
adc
or
dec
pop
cmp
adc
push
mov
imul
cmpsl
mov
fmull
or
mov
jle
sub
fnstenv
jmp
adc
jno
mov
push
mov
ja
inc
movsl
push
popa
sarb
cmp
xor
fdivs
daa
gs
cmp
dec
inc
scas
mov
pop
pusha
adc
and
sahf
mov
and
loope
js
xchg
out
dec
aad
out
lock
jge
xlat
stc
ljmp
repz
ret
cmp
mov
mov
inc
movsb
mov
jle
push
nop
pop
cli
adc
test
mov
mov
mov
add
jmp
sbb
jg
or
push
cmp
push
cmp
xor
dec
cmpsl
and
sti
icebp
mov
test
sub
add
int3
pop
lret
ds
cwtl
adc
dec
orb
ret
inc
vmovshdup
or
fldcw
mov
inc
mov
dec
mov
xchg
cmc
leave
in
jp
movsb
mov
dec
lahf
sbb
adc
mov
imull
gs
minps
test
mov
repnz
dec
sub
mov
cwtl
outsb
mov
xchg
pop
out
jne
and
pop
ud0
rcll
cli
daa
xchg
and
xor
dec
push
cmp
dec
push
pushf
adc
std
dec
popa
adc
ret
mov
outsl
push
addr16
les
aaa
or
jo
pushl
inc
cmpsl
gs
mov
xchg
bound
loopne
jge
sbb
jbe
adc
std
jnp
inc
mov
test
inc
scas
pop
mov
nop
call
ljmp
fcmovb
xor
jb
int
inc
out
xor
push
sub
ss
adc
xchg
cvttps2pi
pop
dec
addr16
scas
test
add
sub
adc
pop
gs
loop
jle
sbb
repz
aam
les
cwtl
imul
ljmp
xor
dec
add
ret
dec
sbb
mov
test
lahf
or
leave
fidivl
jge
pop
push
clc
clc
bound
orl
mov
push
aad
mov
cli
push
int3
xor
movsb
cmp
out
movsb
outsl
or
add
nop
inc
movsl
negl
test
add
jo
jp
loope
mov
xchg
add
icebp
arpl
fsub
imul
loope
mov
push
sub
mov
and
out
sub
dec
aaa
xchg
xor
fisttpll
jno
jl
xor
jecxz
cmp
fucom
in
inc
mov
jae
sbb
push
jg
push
lds
mov
mov
ret
inc
mov
scas
repz
or
imul
mov
dec
das
and
mov
adc
dec
fisttpll
mov
inc
std
mov
lret
imul
in
lcall
add
pop
and
lock
and
in
cmp
or
xchg
pop
mov
pop
insl
xchg
cmpsl
cmp
jl
rcrb
aaa
leave
cmp
imul
mov
popa
std
jle
insl
sub
and
jbe
cmpsb
jp
jp
fs
cmpsl
stc
adc
mov
mov
push
xor
adc
scas
push
popa
lret
jbe
jge
out
negl
inc
lret
inc
lret
jmp
sub
sub
push
rcll
lock
out
fdivrs
push
outsb
imul
aam
inc
test
addr16
xchg
sbb
xchg
jg
call
aas
jl
je
pop
stos
int3
test
jg
lods
ss
and
sub
xor
sbb
xor
mov
pop
push
jb
mov
idivb
aad
and
testl
ss
and
mov
std
shrb
sub
sbb
stos
out
loopne
aaa
lret
sbb
stos
jbe
stos
rcr
mov
mov
aaa
movsb
loop
pop
notb
in
bound
jl
inc
pop
shll
pop
aam
test
or
inc
ret
adc
pop
movsl
or
divb
pushf
lock
inc
in
sbb
fmull
xchg
pop
icebp
in
cmp
das
daa
jge
sbb
push
mov
pop
inc
bound
push
xor
mov
inc
subb
mov
sahf
outsb
cmp
fistps
cli
insb
and
adc
xor
sbb
stos
fisubs
orb
call
std
ficoms
adcb
jl
inc
or
or
testl
xor
and
cmp
jmp
cmpsb
sub
adc
adc
ret
mov
and
rcll
sbb
mov
lret
or
inc
aam
out
clc
jl
ds
adc
dec
cmp
mov
xchg
nop
lahf
cmp
push
xchg
mov
adc
inc
cmpsl
mov
jo
or
shlb
movsb
sub
xchg
and
lcall
sub
jne
xchg
dec
and
and
fsubp
pop
test
cmp
insb
cmp
movsb
iret
sub
adc
xchg
xor
jb
pop
mov
add
stos
sub
jecxz
arpl
mov
cmp
xor
mov
test
scas
jle
push
pop
dec
test
cmp
mov
pusha
cltd
in
jb
aas
cwtl
adc
inc
repz
fistpll
data16
push
insb
insb
scas
aad
dec
gs
and
loope
cmp
mov
inc
jbe
push
or
adc
cmp
and
cmp
in
and
test
pop
or
or
xor
pop
rcll
jno
rcrl
cmp
jae
xor
push
jno
leave
sub
xor
loop
outsb
ljmp
das
jne
add
xchg
inc
mov
popf
hlt
cmp
pop
sub
xchg
pop
sbb
insl
add
xchg
xchg
adc
adcl
pop
jle
cmpsl
nop
mov
cmp
pop
mov
cmp
pop
icebp
hlt
jl
js
or
pushf
loopne
xor
jae
push
movsb
cmp
cmp
mov
psraw
xchg
mov
adc
jge
add
adc
hlt
sbb
scas
sbb
xor
xchg
gs
imul
dec
xchg
add
inc
cmove
pop
loopne
out
mov
cmc
or
inc
movsb
jmp
repnz
sbb
lahf
adc
sbb
lahf
mov
jle
push
dec
in
popl
xchg
and
push
popf
adc
sub
mov
jno
dec
fldenv
jl
xchg
push
sub
and
push
into
in
sets
mov
insl
add
mov
xor
in
andl
mov
jp
sarb
mov
out
jle
pop
dec
loopne
fisubs
out
fld
push
test
xchg
push
mov
shll
dec
pusha
mov
dec
movsb
jne
gs
leave
inc
sbbl
mov
cld
popf
cltd
or
or
pop
push
jl
fcmovne
dec
movb
adc
sarb
sbb
mov
pop
loop
repnz
test
rorb
out
and
cmp
add
das
sbb
ss
and
mov
jmp
push
and
cmp
jp
xchg
jns
push
data16
fdivl
mov
popl
add
xlat
lret
cmpsl
push
cltd
movsl
scas
lret
sti
pop
or
cmpsb
fstps
dec
fisubrs
cmc
inc
cmc
aas
mov
mov
ret
mov
dec
mov
repz
outsl
clc
mov
cmpsb
fnsave
pushf
jo
aas
sti
pop
sahf
sbb
lock
xchg
add
cmp
push
inc
and
adc
aas
jecxz
inc
pop
insb
push
adc
lock
xchg
test
fidivrl
rcrb
cmp
fdivs
mov
dec
hlt
aaa
test
sub
fstl
pop
or
pop
icebp
mov
call
out
sbb
push
in
xchg
repz
jecxz
dec
cmp
je
jl
push
or
adc
jmp
pop
fistl
mov
cmpsb
add
push
lods
scas
mov
aaa
out
add
xor
dec
or
test
pop
scas
rclb
mov
adc
xchg
push
xor
pop
pushf
xchg
movsb
sti
and
and
mov
jp
or
cmc
fwait
push
aam
fstpt
fmuls
jns
sub
inc
mov
push
mov
pop
jge
sub
jge
push
out
or
add
cmpsb
and
jg
push
inc
bound
xor
jle
lcall
scas
scas
push
mov
jb
repz
lret
mov
lods
pop
lahf
mov
mov
fbld
sbb
movsb
sbb
daa
hlt
rorb
jmp
cmp
nop/reserved
xor
xor
jge
stc
jbe
jae
push
jg
rcl
lea
enter
jnp
shlb
sub
sub
insl
das
aam
daa
mov
shr
aas
mov
push
pop
push
lcall
lea
mov
xchg
shrb
mov
mov
scas
popf
int
js
dec
jo
mov
mov
movsl
ret
imul
adc
xchg
test
sbb
jo
mov
loopne
movsb
mov
addr16
aam
out
push
mov
sub
xchg
aad
cmp
negl
mov
popf
test
mov
mov
cwtl
push
add
push
ljmp
sbb
rcll
cs
outsl
xchg
inc
adc
mov
inc
out
in
ljmp
lock
test
push
jmp
inc
pop
mov
int
mov
add
jbe
mov
dec
add
hlt
ja
fstps
mov
cs
cmp
cmp
mov
mov
add
mov
fxtract
fcompl
aas
hlt
inc
cmpsl
aas
ljmp
or
lods
fisubrl
jge,pn
mov
or
outsl
xor
or
or
xor
into
pop
pop
fcmovne
ljmp
add
cltd
fildll
int
xor
mov
inc
pusha
and
mov
push
jo
mov
xlat
mov
push
fidivrs
movsb
jae
movsb
cmp
and
je
ja
jl
cmp
cmpsl
cmpsl
mov
fs
jnp
jmp
mov
and
sub
sbb
push
mov
cmp
cmpsb
or
fnstsw
cmc
out
push
orb
cmp
cmp
sbb
fistps
jl
into
xor
pop
in
aas
cmc
jne
dec
push
cmp
out
lock
xchg
sub
dec
cmpsl
lock
loopne
in
xchg
sub
ja
push
andl
ret
mov
sti
das
dec
cltd
mov
push
in
push
xchg
insl
sbb
and
bound
es
arpl
dec
sub
mov
scas
add
push
jo
jge
push
push
add
xor
adc
jnp
sbb
jns
cmp
jb
enter
pop
inc
and
mov
popf
ret
mov
mov
jle
insl
mov
mov
xchg
pop
mov
mov
and
dec
xor
jl
adc
push
icebp
push
jmp
pop
js
es
sub
lock
popf
lds
sbb
fnsave
add
sbb
outsl
into
xchg
outsl
sub
orb
and
pop
mull
and
adc
movsb
cmp
aaa
xchg
dec
decb
pop
fwait
leave
jmp
mov
jl
mov
xor
popf
and
push
std
sbb
loop
dec
ret
dec
les
pop
or
add
add
jmp
lcall
das
daa
lock
xor
ja
leave
lret
mov
ljmp
push
gs
insb
mov
mov
adc
mov
mov
or
and
into
jg
pop
sahf
dec
dec
mov
daa
ds
jle
lret
stos
dec
in
or
jb
cmp
das
out
repz
call
js
mov
sub
pop
stc
clc
xchg
xchg
repnz
push
ret
out
pop
xor
cmp
dec
imulb
sarb
cmp
mov
fisttpll
cld
pop
fs
mov
popf
mov
dec
add
push
or
sub
push
das
scas
sub
jbe
sub
push
push
mov
xor
leave
cli
out
pop
jp
adc
xor
mov
mov
xchg
mov
ret
cld
sub
repz
mov
adc
out
or
call
mov
aam
jmp
call
sub
in
inc
sub
inc
in
sahf
ficoms
jne
fs
dec
cmp
sub
push
idivl
push
lret
push
fsqrt
pop
in
xor
mov
jbe
sbb
sub
mov
adc
test
andb
jecxz
xchg
int
ss
and
ljmp
std
in
pusha
xchg
mov
jp
push
fisubs
xchg
add
adc
mov
das
cwtl
mov
adc
loope
inc
mov
idiv
mov
out
call
add
xor
cmpsl
test
sbb
mov
cmp
push
push
mov
fldt
push
gs
pop
in
xchg
pop
lds
xchg
bound
aam
or
fnsave
je
mull
fisttps
jne
sarb
insb
mov
clc
jbe
inc
xchg
xor
mov
adcl
cli
push
in
out
mov
inc
jecxz
aad
inc
stos
outsl
mov
pop
call
sbb
jnp
dec
inc
mov
shrb
popf
pop
xchg
sub
dec
inc
xor
rorb
in
pop
mov
daa
ljmp
pop
arpl
fsts
out
aaa
mov
xor
sbb
jns
dec
dec
jo
fcompl
test
add
ret
out
repz
cld
push
cltd
insl
xchg
mov
jg
sahf
or
xchg
cmp
push
test
cmpsl
mov
sub
or
or
adc
xor
lds
mov
sub
mov
hlt
dec
xlat
aad
pop
lcall
inc
jae
inc
sbb
arpl
xor
sub
test
inc
sbb
stc
or
out
out
sbb
mov
xorb
add
pop
mov
test
daa
cmc
jg
int
cmp
shrb
dec
cwtl
xchg
shlb
repnz
mov
test
jl
sbb
xlat
stos
or
xchg
jnp
out
lods
push
movsl
mov
sbb
xlat
ret
daa
xchg
out
mov
sub
sarb
daa
and
setae
pop
pushl
push
insl
popa
xchg
inc
mov
dec
scas
sbbl
jp
hlt
sub
jb
add
lods
sahf
std
dec
out
imul
aam
iret
xor
in
out
mov
or
shrl
xchg
outsb
into
cmpsb
insb
xchg
mov
xchg
cmp
mov
pop
push
add
pop
mov
in
push
cli
pusha
cmp
insb
pop
arpl
and
call
add
cld
rep
repnz
lods
cmp
aaa
mov
add
xor
lock
push
mov
jae
pop
out
pop
add
push
mov
sbb
cmpsl
push
int
out
adc
jns
mov
outsl
lahf
test
loopne
js
push
sbb
aas
push
mov
rclb
jp
dec
popf
inc
insl
scas
fnstenv
push
push
ret
es
mov
mov
fs
hlt
lahf
mov
inc
jmp
adc
rorb
repnz
insb
mov
dec
mov
sub
fs
mov
and
in
in
pop
stc
ja
dec
lea
rcrl
sub
pop
mov
mov
cltd
push
call
mov
mov
add
loope
dec
push
xor
push
mov
xchg
pop
push
xor
dec
divl
insb
mov
mov
nop
mov
shrb
popa
lret
jle
xchg
fiaddl
mov
sarl
shlb
dec
push
iret
push
ljmp
aaa
xchg
cltd
icebp
mov
push
js
jo
pop
mov
jnp
pop
push
rcrl
lret
ss
mov
push
xchg
xor
pop
ds
roll
or
rcr
inc
pusha
jle
loope
jge
fisttpl
xor
sbb
int
aad
loop
cli
adc
xor
push
fwait
sahf
addl
lahf
adc
inc
aam
cwtl
dec
iret
and
add
inc
sub
mov
jae
movsl
outsl
out
clc
insb
popa
mov
daa
inc
ds
pusha
push
xlat
mov
fsubr
aad
int
sub
clc
sub
sbb
loope
addr16
out
inc
jl
out
push
dec
arpl
pop
lret
lods
ret
and
mov
jno
icebp
dec
cmpsb
bound
jecxz
cmc
mov
pop
mov
test
sar
sub
nop
push
call
out
mov
mov
mov
xor
outsb
sti
bound
cwtl
fs
lods
iret
aam
fstl
pop
add
sub
add
pop
pop
push
pushf
test
jb
inc
xor
shll
jb
mov
hlt
cmpsl
sub
inc
mov
mov
lods
outsl
adc
cmp
test
xor
fmull
mov
daa
dec
hlt
inc
sub
mov
addb
ljmp
inc
hlt
insl
pop
fcmovu
sub
push
pop
lds
stc
jmp
fs
mov
dec
rolb
xor
sub
pop
test
mov
nop
dec
shrl
dec
adc
scas
mov
lea
mov
sbb
lcall
xor
std
push
push
and
mov
and
out
xchg
mov
icebp
dec
in
inc
adcb
add
dec
cmpb
jns
lods
push
cmpl
in
cmp
xor
ljmp
push
fcom
ja
out
jge
push
stos
out
mov
in
ficomps
popf
mov
shrd
bound
inc
push
fisubl
jle
int
sbb
mov
pop
sahf
fwait
push
lods
fiaddl
out
jmp
lcall
hlt
sub
test
push
test
sbb
int
sub
xlat
rorb
mov
pop
pop
mov
xor
shlb
or
in
cmp
movsb
ficoml
rclb
and
jb
dec
push
pop
sbb
sti
ss
sub
imul
outsb
push
and
and
inc
jo
aas
mov
sbb
shrl
mov
dec
mov
test
mov
dec
adc
adc
inc
xchg
or
cmc
push
sub
fwait
pop
adc
insb
imul
sub
dec
pop
ds
mov
adc
std
xchg
xor
fmuls
sub
aad
sbb
cmp
jbe
cmpsb
mov
pop
loop
lods
idivl
lds
dec
push
mov
stc
jbe
cmpsb
xor
inc
sub
push
mov
ja
rcrb
mov
adc
sbb
movsb
lock
pop
or
pop
insl
mov
inc
cmp
inc
int
sbb
dec
dec
pop
sbb
mov
add
mov
fs
insb
inc
iret
js
ret
dec
pusha
stos
mov
adc
sub
xlat
pop
sub
sub
add
and
mov
pop
popa
pushl
add
xorl
add
mov
out
aaa
scas
stos
sbb
shll
xorb
pop
jmp
scas
mov
inc
rcr
int
push
mov
mov
inc
cmp
aas
xor
add
mov
mov
dec
mov
fnsave
test
cltd
push
or
xchg
pop
xchg
mov
repz
mov
pop
dec
stos
add
cmpsb
push
mov
push
lcall
xchg
mov
and
rcll
and
or
movsb
gs
push
mov
movsb
aas
xor
inc
sbb
rcl
daa
mov
xor
stos
sbbl
dec
adc
jge
mov
jne
sbb
int3
push
icebp
lea
stos
cmp
daa
sbb
or
lahf
sub
mov
pop
pop
fwait
pop
jge
add
movsl
out
pop
lret
sub
xor
pop
xchg
cmp
pusha
pop
data16
pop
rcll
cmp
sub
and
mov
icebp
int3
mov
lds
hlt
mov
push
call
jl
push
mov
xchg
mov
cmpsb
rcll
iret
jle
fcomi
lahf
mov
imul
rcr
fdivrs
mov
jge
inc
jg
aaa
xchg
or
bound
aas
cltd
inc
jo
xchg
pop
pop
jns
scas
mov
call
out
mov
xchg
fwait
add
imul
and
movl
inc
popf
imul
out
cmp
pop
repnz
daa
push
mov
jl
or
mov
fwait
pop
or
cmp
sub
mov
fstpt
pop
out
andl
adc
cmp
adc
jo
adc
pop
pop
sub
mov
rcrl
cld
jmp
ja
outsl
nop
cmp
mov
cmp
or
cmp
sahf
popf
fistpll
jl
xchg
push
pop
mov
and
std
and
test
mov
fisubrl
es
cmpsb
jnp
sbb
pop
iret
push
movsl
inc
cltd
int3
inc
imul
shrl
testb
mov
push
dec
and
adc
fldt
das
inc
mov
test
cmpsl
jb
movsl
in
sbb
pop
jge
mov
adc
loop
inc
mov
mov
cltd
out
xorb
inc
inc
sbb
or
sub
data16
ss
jg
orl
add
mov
nop
mov
out
dec
pusha
pop
iret
mov
popf
test
pushf
push
pop
das
add
jle
mov
iret
adc
aaa
lret
mov
mov
cwtl
and
pusha
xor
jecxz
mulb
push
cmpsl
mov
hlt
or
fstps
roll
add
std
data16
jno
dec
sub
xchg
pop
hlt
dec
lock
or
enter
adc
loope
std
and
cltd
ds
addl
cmc
pop
rclb
xchg
imul
in
orb
add
int3
dec
pop
add
fmulp
mov
push
movsl
xchg
xor
int3
sti
mov
push
adc
pop
andl
push
mov
jb
fnsave
iret
mov
dec
test
pushf
push
add
xor
mov
jge
xor
mov
inc
ss
pop
outsb
rorb
cmc
ja
dec
sbb
add
daa
or
add
mov
xchg
pushf
fimuls
xchg
loope
cmp
sub
pop
sub
in
lret
pop
outsb
xor
or
enter
adc
mov
lahf
add
stc
mov
ja
inc
sarl
sbb
lret
jno
dec
sub
fmulp
pusha
mov
int3
xlat
jae
frstor
shll
push
and
sub
stos
iret
aad
pop
leave
sub
add
js
scas
test
sbb
inc
testb
inc
fstpt
outsb
adc
mov
or
nop
les
mov
jg
and
cli
ret
sar
divl
push
jle
jp
cli
mov
mov
es
into
fldz
lret
fcoms
mulb
negb
jmp
and
fcomp
nop
sub
nop
or
stc
js
mov
and
jp
cmpsl
in
or
inc
arpl
sub
mov
dec
andl
cld
inc
xchg
pop
cmpsb
or
adc
cld
and
cmpsb
xchg
add
push
test
into
clc
dec
sub
cmp
xor
mov
xchg
cmp
fidivrl
sub
movsl
jbe
sbb
sub
or
popa
dec
adcl
rcll
mov
xchg
imul
out
push
dec
loopne
movb
pop
nop
add
cltd
nop
lcall
sbb
push
scas
xchg
sbb
arpl
pop
mov
dec
jnp
icebp
out
mov
dec
pop
add
cmp
adc
push
dec
xchg
mov
movb
and
mov
xor
push
mov
adc
fimull
and
ret
outsl
push
pop
gs
sub
pop
sti
and
dec
shrl
outsl
addr16
leave
inc
std
jp
notl
mov
insl
inc
test
push
jb
mov
mov
pop
mov
loope
inc
inc
mov
pop
pop
rolb
jg
into
adc
out
lret
test
aad
mov
or
aaa
cmp
pop
adc
shl
stos
rcrl
inc
sbb
std
in
insl
fisubrs
sahf
fidivrl
cli
ja
push
push
dec
push
add
sub
enter
ja
aad
cmp
cmc
cmp
add
and
sahf
in
jns
jl
jge
aaa
sti
mov
pop
jmp
rcr
push
sahf
adc
inc
push
xchg
mov
dec
jae
jnp
repz
jne
stc
adc
dec
in
or
add
arpl
cmp
or
sbb
adc
push
push
add
ret
mov
in
sbb
ret
call
mov
pop
sbb
imul
adc
mov
jns
fs
sarb
clc
stos
sbb
push
insl
arpl
fs
inc
mov
fidivs
loope
inc
pop
cmpsb
add
int3
movsb
xchg
hlt
fildll
and
mov
in
daa
sti
lahf
cmp
mov
mov
inc
adc
jne
and
mov
js
data16
rcrb
stos
out
sub
push
xchg
jl
inc
aad
in
sbb
mov
dec
jb
rclb
mov
sub
test
xor
mov
aaa
or
cmpsl
out
add
ret
stc
inc
mov
add
lea
add
inc
jbe
inc
pop
fidivrl
stos
xchg
sbb
test
repz
les
rorb
popf
loop
pop
and
pop
je
pusha
mov
mov
mov
jle
xor
std
xor
cli
pop
movsb
adc
cmp
pop
bound
outsl
lea
in
out
xchg
cmp
jmp
cli
leave
xchg
push
stos
clc
lock
mov
loop
or
inc
scas
xor
test
jl
stos
or
cmpsl
and
out
imul
cs
imul
pop
stos
repz
stos
in
push
adc
shlb
les
imul
daa
incl
jae
test
test
pop
jmp
loopne
insb
jo
push
lods
outsl
sar
stc
cmc
cwtl
inc
ja
push
lock
fwait
jge
or
xchg
xor
pop
mov
mov
or
call
add
inc
jmp
cmpsl
xor
aas
aam
sbb
das
add
pop
ds
ds
or
mov
inc
loop
ljmp
xchg
sub
jl
mov
aad
mov
mov
aas
iret
mov
xor
dec
in
clc
jmp
mov
jp
incl
icebp
mov
subl
mov
cmp
loop
and
mov
imul
push
gs
push
ja
sub
vpmullw
cmp
pusha
adc
pop
in
lahf
adcb
iret
dec
mov
sbb
cmpsb
add
xor
mov
mov
sub
mov
fmulp
imul
jl
les
xor
sub
xchg
xchg
xor
xchg
sub
rclb
inc
sbb
ja
adc
pop
push
js
jnp
aaa
xchg
aaa
mov
mov
mov
cmpsb
hlt
xor
sub
dec
push
dec
add
mov
scas
je
clc
inc
sbb
pop
fs
push
fldt
xchg
bound
mov
dec
xchg
xchg
repnz
sbb
inc
out
cli
cmc
sbb
dec
out
lock
sub
jmp
cld
adcb
mov
sub
inc
adc
nop
push
mov
arpl
add
js
addr16
leave
xor
pop
pop
rcl
leave
inc
fwait
add
or
jno
and
mov
push
sbb
cwtl
jp
outsb
mov
sbb
inc
xchg
mov
data16
jae
add
mov
xlat
xor
mov
in
jb
or
in
aaa
xor
je
sti
shlb
cmp
sub
pop
jbe
out
or
pop
aam
fdivrs
add
imul
xorl
int
leave
je
add
subb
inc
push
push
or
in
inc
push
pop
mov
mov
sub
sub
aaa
loope
jmp
shlb
pop
cmc
xor
inc
imul
and
test
movsl
mov
test
lret
jno
cltd
cmp
dec
mov
inc
inc
push
mov
cmp
scas
cwtl
aad
scas
loopne
adc
fyl2xp1
in
gs
loop
mov
notl
xchg
gs
lahf
push
ret
hlt
push
lods
dec
fs
mov
push
cmpsl
cmpsl
xchg
repz
push
out
out
test
mov
or
xchg
inc
dec
xchg
xchg
lret
repz
call
out
outsl
pushf
ds
and
lahf
or
je
js
push
sub
cltd
pop
int
push
mulb
cmp
mov
ja
xchg
mov
lods
fwait
loop
cmp
mov
sub
mov
inc
add
inc
nop
hlt
ja
mov
pusha
push
xor
int
inc
mov
push
jl
aas
mov
mov
adc
lods
cmpsl
cmpb
lahf
into
test
cmp
push
lret
inc
out
rol
xchg
fcoml
ss
xchg
jmp
mov
and
mov
xor
pop
sbb
pusha
sub
insb
adc
ficoms
lret
fstps
in
xchg
dec
inc
cmc
frstor
cwtl
dec
mov
adc
push
push
mov
daa
sub
addr16
outsl
andl
pop
rolb
cltd
sub
push
imul
cmp
jo
repz
xchg
enter
dec
arpl
lea
in
cmp
sti
and
or
scas
jmp
push
loopne
pushf
mov
frstor
push
ret
enter
add
lret
dec
dec
loopne
mov
fs
test
jmp
shll
std
jg
rcrl
pop
dec
sahf
cmp
ret
out
test
pop
sub
adc
ja
sbb
mov
cmpsl
xchg
mov
sbb
mov
dec
and
mov
add
dec
movsb
fwait
andl
mov
add
dec
repz
push
leave
sbb
outsb
lcall
cmpsl
mov
stc
mov
loope
and
and
out
or
jo
mov
xchg
dec
bnd
sahf
in
ds
mov
pop
loop
pushf
xorb
ret
mov
xor
sarb
pop
inc
and
inc
test
in
or
xor
dec
mov
cs
test
add
push
pusha
inc
cmp
ja
xchg
xchg
out
gs
in
fimuls
sbb
or
gs
jne
xlat
mov
popa
mov
ret
jle
imul
popf
aaa
and
inc
or
jmp
cmp
sub
dec
xor
sub
je
mov
dec
sub
jecxz
in
or
andb
pop
xchg
into
icebp
jbe
mov
push
dec
or
pop
fcmovnu
or
aad
sub
dec
dec
pop
dec
xchg
jne
ds
push
fadd
push
add
push
mov
and
inc
clc
daa
push
xchg
popa
jl
in
xchg
pop
jae
mov
arpl
xchg
xchg
mov
adc
call
mov
loop
adc
jns
hlt
push
xchg
out
adc
add
loop
jp
mov
lcall
int
ja
sub
in
shrl
loopne
sbb
repz
pop
xchg
ss
test
inc
mov
xchg
sub
jb
cmp
xlat
push
jbe
lods
push
cmp
mov
adc
jb
jns
mov
xor
pop
mov
jo
and
dec
mov
cmpsl
or
inc
cmc
xchg
jbe
les
cmp
jns
fisubs
sbb
xor
push
mov
insl
iret
jb
xchg
mov
cld
aaa
mov
inc
push
icebp
sbb
lock
stc
mov
dec
orb
pop
outsl
ds
dec
sub
repnz
push
xchg
cmc
jne
mov
aaa
dec
inc
cmp
ret
and
jmp
inc
pop
sub
sti
enter
aam
stc
or
add
ljmp
cmp
ja
fnstcw
cmpsl
ss
into
je
inc
xor
icebp
lret
sbb
mov
out
mov
adc
and
jg
pop
fdivrl
jnp
outsl
popf
rcrl
push
data16
lcall
lea
mov
pop
xchg
outsl
inc
jge
mov
mov
xchg
cmp
sarl
push
fcmovnb
push
imul
stc
jns
inc
loope
xchg
mov
push
cs
aam
loope
dec
loopne
dec
jbe
call
rolb
sti
pop
adc
lahf
cmpsb
sub
fimull
cmp
sahf
mull
lods
test
divb
inc
xchg
adc
mov
push
adc
std
das
ds
mov
xor
mov
insb
push
mov
cmp
fstl
pop
bound
lret
xchg
in
sbb
inc
push
andb
cli
jl
fisubs
xor
jo
das
jp
xchg
push
pop
jl
aam
pushf
mull
dec
cmpsb
jecxz
inc
push
xchg
adc
repnz
sub
iret
lahf
mov
sbb
addl
pop
vpsubsw
xor
push
mov
jbe
sbb
cld
test
xor
pop
sub
pusha
lcall
cmp
hlt
mov
call
bound
test
push
jne
jae
pop
mov
jge
mov
xchg
push
lret
push
push
jns
mov
rolb
ja
rcrb
inc
outsb
popa
adc
cmp
jge,pn
cwtl
out
movsb
pop
mov
rorl
xor
cmp
mov
jbe
shll
mov
jbe
paddusb
fwait
or
jae
repz
jnp
stos
cs
sbb
jne
and
add
sub
or
rcll
or
and
scas
xchg
sarl
imul
in
iret
icebp
xchg
insb
ret
and
mov
rcrl
pop
push
jmp
jmp
pusha
sti
cmpsl
cmpsb
jl
cwtl
jp
in
pop
lcall
int
push
nop
inc
push
inc
push
mov
bound
and
into
cmp
mov
inc
dec
jns
jbe
pop
les
sub
jno
enter
inc
or
std
cmp
jmp
sub
divb
rolb
mov
outsb
imull
sub
in
scas
dec
comiss
inc
imul
cli
or
sbb
lcall
mov
or
movsl
adc
loopne
jae
and
cmc
in
ljmp
frstor
jg
xchg
sti
push
fs
pop
ss
fistpll
pop
ds
test
mov
adc
add
jbe
push
loope
push
dec
scas
or
imul
mov
mov
into
pop
jnp
aad
add
mov
pop
add
cld
push
xchg
push
inc
jne
idivb
dec
xor
jmp
dec
movsl
cwtl
in
lds
xor
leave
popa
sub
ljmp
in
add
jle
out
repz
inc
push
mov
jmp
push
mov
stos
cld
jne
cmp
mov
xor
mov
in
cmp
in
lods
sub
lds
adc
fsubl
add
xchg
pop
bound
sahf
aas
push
js
mov
dec
fs
xchg
add
mov
xchg
push
xor
fsts
stos
mov
dec
jae
repnz
out
stc
imull
shrl
xor
mov
mov
repz
xchg
popf
mov
mov
xor
fdivs
bound
ss
aaa
and
add
inc
icebp
or
repnz
clc
or
stos
pop
cmp
cmc
das
or
mov
stos
out
inc
jo
push
in
mov
mov
sbb
mov
mov
sbb
jbe
outsb
pushf
es
cmp
cmpsl
shlb
movsb
or
lret
popa
mov
fs
lock
in
pop
sbb
jo
outsl
mov
mov
fimull
in
sti
mov
jl
push
pop
mov
jbe
dec
sbb
cmp
into
int
hlt
push
xchg
adc
out
ss
sub
sti
test
sbbb
movsl
push
pusha
ss
jbe
arpl
mov
cld
jmp
mov
clc
xchg
loop
mov
mov
pop
jne
cmp
and
dec
inc
cmpsb
repnz
shlb
in
icebp
sub
xor
mov
ror
aaa
sub
out
cmp
mov
rorl
lcall
cli
and
and
add
jae
daa
mov
mov
and
pop
mov
lahf
push
ret
cmpl
cli
add
jl
pusha
fdivrl
movsb
or
jmp
mov
mov
mov
pop
and
push
add
lods
push
sub
cmp
fwait
cmp
add
shlb
mov
dec
inc
and
and
call
xor
clc
enter
dec
sbb
xor
mov
repz
fiadds
lret
pop
cmp
icebp
sub
pop
inc
in
pop
es
aaa
xor
iret
jle
adc
int3
sbb
cmpsl
push
cmpsb
int3
add
xchg
loope
pusha
pushf
push
xchg
lods
fs
jo
or
addb
jae
fmull
stos
cld
push
cmpsl
sbb
sub
loope
push
roll
clc
mul
adc
ffree
lahf
out
fisubl
sub
adcl
out
out
xchg
in
fidivs
push
or
sub
or
int
lds
insb
inc
lret
mov
insb
mov
sub
fdivs
sbb
imul
repnz
fisttpll
nop
rol
dec
or
insl
sahf
out
push
aas
into
dec
mov
push
lret
scas
and
je
add
cltd
lcall
xchg
cmp
jne
sub
ret
insl
sarl
add
daa
push
sub
lret
jp
push
mov
repnz
adc
jge
or
pop
jl
scas
call
rcrl
fwait
and
int3
inc
mov
rorb
clc
push
test
push
inc
pushf
shl
add
and
pop
loope
nop
jae
pusha
inc
fcompl
sbb
fimuls
fnstsw
cmp
fsubrs
mov
sub
lret
in
pop
arpl
mov
hlt
fldt
adc
ficompl
in
cmp
mov
inc
outsl
mov
add
push
fnstsw
out
or
in
int3
pop
test
sub
dec
fwait
jae
pop
lret
and
sbb
stos
imul
lret
push
ja
adc
mov
xchg
icebp
ficoms
push
add
imul
push
fwait
inc
js
addr16
jle
xor
popf
cvtps2pi
data16
sbb
mov
sub
loopne
inc
mov
adc
pop
pop
mov
xor
mov
adc
sbb
lods
movsl
push
cld
sbb
inc
aam
pop
aas
stc
pop
mov
sbbb
mov
add
xchg
addr16
cmp
push
js
inc
xor
sti
jbe
pop
xor
mov
jnp
xor
loopne
mull
add
aad
ret
xor
cltd
loopne
mov
pop
dec
sub
ret
xchg
icebp
pusha
push
repz
lea
lock
jne
mov
gs
int
pop
pop
or
adc
and
mov
scas
push
fisubrl
xchg
jle
xchg
pop
pop
cld
icebp
push
mov
repnz
inc
repz
dec
jne
push
or
clc
push
sub
or
xchg
mov
inc
clc
fiadds
repz
shrl
xor
loope
jnp
push
addr16
lahf
mov
addr16
inc
mov
testl
jo
pushl
xor
sti
popl
cwtl
dec
cmp
mov
mov
sbb
mov
outsb
xchg
push
inc
jmp
repnz
mov
in
or
push
push
fcmovb
aam
ja,pt
inc
enter
push
dec
push
je,pt
aas
enter
adcb
int3
or
push
cmp
sub
leave
fiaddl
xchg
jb
addr16
adc
imul
add
adc
xchg
decb
mov
das
in
int3
cmp
subb
sub
add
cld
sbb
cltd
push
shrl
push
loop
jbe
add
imul
mov
xor
mov
aad
mov
pop
xchg
sbb
push
ja
sub
or
ljmp
cs
lcall
or
inc
sbb
mov
sbb
lock
cltd
sub
jae
testl
aam
je
sbbl
and
les
push
popa
rol
jp
cmpsb
or
xchg
rol
pusha
loope
idivl
jne
xor
xchg
or
arpl
cmpsb
jle
mov
dec
jb
jae
testl
inc
lea
fisubrl
add
jb
push
pop
fsubrl
xchg
push
ds
cmpsb
push
mov
push
pop
pop
sub
xchg
jg
xchg
repnz
inc
dec
mov
mov
and
adcb
sbb
mov
pop
cmp
stc
and
js
lock
ror
aaa
out
in
movsb
xchg
lahf
ja
ja
mov
sub
cmpsl
sub
ljmp
cmp
cmp
jns
inc
repz
arpl
lods
pop
push
pop
mov
loope
mov
and
nop
idivb
sbb
pop
aam
xchg
lret
mov
subl
sbb
push
add
pushl
mov
inc
imul
inc
idivb
enter
sbb
adc
repz
dec
imul
cmp
in
mov
sub
gs
jae
cmc
jbe
or
je
test
push
mov
push
cmp
or
inc
stos
inc
add
xor
movsb
andl
icebp
adc
int
sbb
out
dec
xchg
push
fstpt
push
mov
out
shl
dec
xor
ret
jbe
or
push
cmp
repnz
mov
pop
xlat
in
mov
out
cmp
sbb
aas
inc
rcrb
fldcw
call
daa
sub
jb
ljmp
xor
mov
or
scas
gs
adc
cmp
stos
mov
and
xor
or
insl
insb
dec
inc
add
dec
hlt
imul
dec
rolb
pop
inc
les
xchg
cmp
scas
jge
aaa
and
jmp
int3
pop
in
fiadds
faddl
dec
sub
push
dec
jmp
fstl
repnz
pusha
fsts
repz
xchg
dec
stos
cmp
and
jo
jae
mov
std
dec
xchg
shlb
ret
gs
les
jno
loopne
sbb
popa
mov
loope
test
leave
filds
push
pushf
loope
lods
shlb
out
icebp
stos
sbb
xchg
or
stos
or
xchg
mov
mov
cmp
add
jecxz
sti
inc
cmpsb
out
mov
or
subl
pop
cmp
inc
out
push
lds
and
jg
ret
rclb
ss
call
add
popa
dec
or
mov
xor
popa
lret
mov
xor
and
pop
mov
xor
fwait
out
sbb
xor
mov
mov
cwtl
lret
xchg
and
sbb
jno
mov
ljmp
mov
mov
mov
and
cmp
lcall
orl
sbb
mov
and
icebp
js
pop
test
xchg
test
clc
cmpsb
out
data16
jbe
pop
nop
pop
inc
je
push
push
dec
pop
fsubrl
push
mov
into
mov
int3
loope
sahf
cmp
out
cmp
mov
incl
les
out
push
jmp
jmp
mov
mov
loope
mov
hlt
stos
sbb
xorl
xlat
push
bound
lods
xor
in
fidivs
ss
call
xchg
cmp
inc
ja
outsb
fnstenv
jmp
arpl
xchg
scas
lret
xchg
pusha
xor
and
xchg
lcall
addr16
lret
push
adc
cmpsl
mov
xchg
scas
insl
fnsave
xor
outsb
loop
and
std
lahf
xor
aaa
jle
cmp
xchg
cmc
loopne
push
push
adcl
mov
into
nop
add
add
adc
jle
aad
in
push
fwait
data16
insl
xlat
and
inc
push
or
mov
cld
inc
cmp
mov
fisttpl
mov
dec
lea
stos
push
pop
decl
lcall
sub
mov
adc
nop
mov
xor
fsubs
sbbl
fistps
push
mov
jb
mov
xchg
add
jmp
nop
or
jo
sub
movsl
clc
xorl
repz
jg
fistps
mov
mov
add
cli
mov
cmp
lods
imul
arpl
jl
cs
nop
dec
jns
jge
xor
adc
pop
fiadds
lret
add
mov
scas
push
add
out
icebp
arpl
pop
ja
test
shl
mov
inc
nop
shlb
fdivr
push
dec
and
mov
shrb
shlb
adc
mov
sahf
jb
fldenv
dec
scas
lock
cli
xchg
pushf
push
je
lods
push
cmpsl
sbb
push
lret
and
mov
xchg
inc
adc
data16
syscall
cmp
jl
insl
ret
inc
cmp
and
add
xor
xchg
repz
xor
push
fs
out
insl
sbb
xchg
daa
mov
push
bound
stc
in
clc
cmpsb
mov
or
xchg
sarl
pop
mov
cltd
int3
cmp
repz
arpl
mov
rolb
popf
push
popa
mov
sub
popf
xchg
lods
and
jae
clc
cmc
push
mov
subb
xor
mov
js
fdivrl
or
in
dec
lret
sub
into
sub
shlb
imul
mov
out
sti
sbb
mov
in
or
jo
popf
stos
test
inc
inc
subb
imul
enter
sti
cmc
inc
push
sub
mov
mov
mov
sub
pushf
sub
lds
push
ficompl
pop
cmp
ret
xor
pop
ljmp
xchg
cmpl
xchg
mov
pushf
xchg
adc
shrb
jno
or
ror
pusha
hlt
sub
jg
dec
push
jg
in
mov
jae
mov
xchg
cmp
and
outsb
cli
xor
outsb
dec
xchg
xor
push
sbb
aaa
push
mov
mov
gs
outsb
data16
data16
dec
andl
test
xchg
mov
sub
out
out
push
ljmp
adc
cwtl
sarl
dec
sbb
leave
pushf
inc
pop
adc
pusha
add
imul
jns
jge
cmc
jg
stos
push
or
jae
pop
add
cmpsl
pushf
aad
inc
fst
pop
out
or
mov
mov
inc
cmpsb
pop
dec
bound
add
jle
jb
iret
fidivrl
subl
jl
pop
push
cmpsl
cli
mov
test
pusha
lea
push
lock
dec
jmp
notb
xor
ret
orb
xchg
lcall
lret
or
sub
sbb
js
cmp
in
or
dec
push
xor
mov
cmp
mov
pop
nop
inc
into
in
cwtl
push
ja
dec
lea
and
add
cmp
in
ficomps
adc
jnp
inc
xor
mulb
andb
xchg
inc
sub
jne
or
pusha
xchg
and
push
xchg
and
test
int
testb
sub
inc
daa
jmp
ficomps
test
and
mov
out
jnp
jnp
or
cmp
out
add
jge
mov
jnp
dec
out
sub
push
and
subl
loopne
xchg
push
cmc
movsl
je
scas
add
jbe
sbb
out
ror
test
enter
fs
nop
lret
inc
jae
sbb
rorb
into
pop
rcr
add
adc
xchg
test
scas
repz
pop
out
dec
adc
ret
jb
dec
stc
jae
test
jecxz
inc
mov
xchg
xchg
adc
push
sub
jae
mov
shr
xchg
mov
call
test
sbb
out
imul
aas
add
inc
or
ss
jp
fstpt
out
pop
xor
aaa
test
pop
sub
push
xor
rcrl
inc
out
mov
mov
or
stc
insb
imul
stc
or
cmp
mov
in
fisubl
adc
aas
stos
mov
or
mov
sub
inc
dec
ror
outsb
insl
dec
aam
orb
pop
mov
inc
pushf
pop
dec
and
icebp
inc
aas
pop
out
mov
pop
sti
js
sbb
rorb
je
fstps
sub
dec
adc
mov
dec
nop
mov
movsb
jmp
gs
xlat
pop
stc
mov
iret
add
dec
ret
inc
dec
xchg
jo
adc
push
sbb
or
push
fidivrl
xchg
orl
aas
push
les
sub
pop
xchg
mov
push
jl
or
cwtl
pushf
loop
dec
into
scas
into
roll
sub
jo
xor
hlt
xchg
xchg
jp
and
jo
lahf
cmp
lods
mov
mov
add
mov
push
mov
aad
jle
jns
sub
sub
cmpsb
jb
xchg
push
sbb
pop
cmpsb
inc
xor
jmp
scas
into
shlb
fwait
cmp
ss
pop
or
movsb
cmp
popf
lret
mov
fisttps
fidivrl
mov
jb
jg
imul
mov
xchg
ds
stos
or
leave
xchg
scas
or
enter
add
adc
imul
inc
cwtl
sti
dec
stos
lods
add
jno
xchg
icebp
push
inc
sbb
cwtl
mov
or
inc
jo
mov
inc
jmp
es
jae
xor
pop
addb
sub
xchg
sbb
call
xchg
pusha
pop
or
out
lahf
mov
jbe
imul
cmp
int
jb
lods
pop
scas
repnz
sub
inc
shl
mov
inc
pop
mov
lods
loope
fwait
adc
pop
mov
push
cli
sub
mov
repz
fistl
in
add
gs
dec
mov
testb
adc
mov
in
test
lahf
push
in
outsl
and
shll
mov
sub
jecxz
pop
cmp
sub
adc
and
pusha
inc
in
pop
ljmp
hlt
inc
xchg
stos
add
or
imul
jno
fidivrl
out
sub
mov
nop
jl
test
fsubrl
fwait
rcrl
push
push
loopne
mov
jb
mov
stos
mov
mov
cmp
lds
mov
cmp
pusha
fwait
imul
dec
fldenv
jno
mov
outsb
nop
dec
popl
movsb
mov
ljmp
sbb
xor
xlat
mov
not
pusha
cmp
xchg
mov
pushl
repnz
adc
test
mov
repz
lods
aad
aad
mov
cmp
rcll
jp
enter
std
push
xchg
adcb
dec
push
repnz
jecxz
xchg
or
fisttps
sbb
in
and
push
add
imul
cs
push
add
xchg
jne
mov
add
es
mov
jno
enter
sahf
push
mov
popf
mov
inc
sbb
sub
pop
cmp
cltd
and
inc
mov
jmp
push
adc
pop
sysenter
pusha
loope
insb
test
or
jbe
push
cmp
pop
lods
dec
cmpsb
enter
std
or
movsl
stos
cmp
or
mov
test
mov
mov
add
ficompl
es
push
dec
es
mov
cs
adc
adc
fs
fsub
gs
jmp
out
mov
push
push
shll
push
fwait
sbb
lahf
pop
dec
fistps
jecxz
scas
in
outsl
ret
xchg
in
add
inc
stos
insb
jge
in
orb
mov
daa
js
movl
jge
jecxz,pn
hlt
pop
jecxz
push
mov
add
sbb
jne
int
fildll
inc
jbe
ja
mov
dec
out
aad
xor
sbb
inc
jb
add
xorl
sahf
cwtl
aaa
adc
jns
adc
sbb
and
and
mov
push
subb
or
or
inc
stos
leave
xor
push
xor
xchg
test
imul
mov
das
adc
scas
cmpl
cmp
mov
ja
in
mov
push
and
negl
scas
sbb
stos
das
adc
push
je
lods
xchg
negb
add
int
mov
mov
clc
xchg
mov
sahf
test
xchg
mov
pop
data16
frstor
push
insl
inc
ss
pop
pop
adc
xchg
sti
ret
sub
cmp
pop
movsb
orl
stc
pop
cmp
mov
mov
addb
jo
jg
cmp
adc
inc
jae
xchg
movsl
adc
add
sub
xor
jo
lock
xor
push
daa
cltd
in
add
cwtl
mov
bound
in
inc
bound
sbb
lods
mov
insl
cmc
cltd
fsubl
jns
adc
mov
popa
push
sbb
pop
and
sti
xchg
mov
call
out
fsubs
mov
xor
mov
xorb
test
lds
ror
sub
xchg
into
pop
leave
repnz
cli
add
dec
sub
jne
dec
hlt
xor
icebp
scas
and
dec
pop
or
pop
lea
dec
sbb
imul
xor
sbb
rorl
das
cmp
movsb
bound
addr16
sahf
insb
mov
outsb
int3
mov
aad
fildl
in
cmc
or
pop
xor
mov
add
mov
or
sbb
cmp
add
sub
std
mov
and
das
inc
or
pop
push
sbb
fisubrl
aas
push
lock
cmc
xchg
mov
pop
and
or
aad
rclb
scas
push
mov
or
pop
mov
and
popa
insl
inc
push
pmaddwd
mov
ja
outsb
mov
scas
std
push
xchg
jmp
jecxz
mov
mov
dec
je
scas
sub
jp
bound
dec
les
loop
fs
cmp
add
scas
xchg
dec
out
sub
pop
mov
hlt
cmp
lret
xchg
movsb
pop
int
inc
imul
pop
pop
cmp
adc
subl
push
mov
nop
scas
mov
mov
mov
xor
cmp
or
xor
jg
dec
dec
add
cmp
bnd
insl
test
xchg
scas
or
or
sbb
mov
aas
mov
mov
xchg
sub
sub
pusha
add
push
icebp
xchg
fmull
mov
ja
imul
aam
loope
imul
xorb
mov
jmp
xchg
push
js
sub
xchg
je
cmp
je
inc
js
and
pop
lahf
sub
test
jmp
and
jp
leave
add
ja
loope
arpl
outsl
fsubl
push
out
lahf
pop
sbb
negl
xor
test
jg
negl
cmp
cli
mov
xor
xchg
inc
mov
ja
daa
test
dec
inc
test
add
add
out
inc
inc
xchg
bound
jge
pop
jle
jae
xor
lds
repz
or
rcrb
lea
pop
xor
repz
dec
addr16
adc
jo
lret
addr16
add
xor
mov
push
push
jb
test
dec
mov
cmp
sti
imul
sbb
and
xor
fimull
cmp
fsubrs
inc
or
mov
mov
xlat
call
stos
das
sub
adc
pop
ljmp
cwtl
cmp
aam
mov
pop
lock
push
rcl
pop
inc
pusha
and
xor
push
gs
test
mov
and
add
cmp
sbb
fucomi
jecxz
mov
cld
pop
scas
add
cmp
loop
mov
test
int
lret
xor
fs
pop
insl
pop
sarl
adc
xor
sahf
shr
adc
add
xchg
xor
lea
and
pop
in
lahf
scas
cmp
or
jo
push
mov
cmpsl
or
leave
mov
mov
jg
cli
les
adc
push
gs
ds
ret
jmp
stc
mov
pusha
bound
push
lods
outsb
or
movsl
hlt
inc
aas
push
adc
ljmp
stos
out
popa
sarb
and
cwtl
movsb
cmp
fwait
ja
sub
popa
in
dec
mov
cwtl
and
mov
lea
imul
das
ret
sbb
cs
movsb
pop
mov
cltd
dec
lret
or
xchg
xchg
sbb
dec
mov
mov
jl
test
dec
and
notb
fs
jmp
ja
push
push
dec
aas
mov
das
ret
insl
inc
cmp
lcall
mov
push
aam
sarb
ficompl
hlt
pusha
sub
push
rclb
adc
outsb
pusha
icebp
clc
cmp
sti
mov
and
add
test
add
sahf
mov
adc
add
pop
push
shr
xchg
cld
and
dec
lret
xchg
call
lea
push
and
mov
mov
push
dec
outsb
mov
inc
xchg
inc
in
mov
popl
jno
sbb
data16
mov
push
lret
dec
mov
loopne
loop
inc
inc
xor
leave
arpl
xor
std
scas
add
shll
inc
or
xor
mov
jmp
stos
xchg
mov
testl
sbbl
fbstp
sarb
jbe
fnstsw
dec
out
pop
in
cmp
sti
adc
je
adc
xchg
insb
orb
adc
leave
cli
stc
ret
pop
jae
jo
cs
aam
enter
mov
cs
dec
leave
cmpsb
cmpsl
mov
in
mov
inc
fmul
push
movsb
pop
push
decl
test
lock
and
cmp
pop
mov
out
js
cmp
cmc
in
jns
lahf
ss
sub
push
xchg
jl
sub
mov
push
lods
clc
in
xchg
fs
je
lock
fwait
jmp
push
popf
dec
hlt
test
pusha
gs
sti
bound
out
or
mov
int
pop
and
add
mov
or
pushf
movsl
jbe
in
into
sub
cmp
mov
sub
and
stos
call
pop
nop
mov
cli
jg
jecxz
jae
xchg
sti
lds
xchg
xchg
mov
inc
repnz
push
push
push
adc
adc
lock
repnz
sub
mov
mov
mov
loop
dec
movsl
jecxz
in
leave
flds
fldenv
jae
movl
jnp
xor
xorl
sbb
mov
mov
fdivrl
jmp
mov
jno
xchg
nop
fbld
test
loope
loope
push
out
push
mov
fadd
inc
decb
inc
push
or
scas
fwait
into
cld
cld
jge
push
add
leave
dec
or
push
jecxz
ret
xor
xor
inc
cli
arpl
sbb
insb
mov
push
xor
in
inc
inc
xor
jb
mov
imul
mov
push
loop
mov
out
hlt
das
jp
pop
lret
inc
dec
push
fbld
shr
aaa
mov
cmc
or
pop
jmp
mov
repz
mov
or
mov
aad
adc
lods
or
inc
int
popf
inc
xor
pop
cmp
stos
sbb
push
or
lahf
xchg
pushf
out
or
js
xor
cmp
outsb
mov
mov
enter
mov
adc
outsb
pop
sub
lcall
sub
mov
jno
mov
push
inc
and
pop
jge
xor
inc
dec
and
aas
loope
popa
jnp
in
int3
nop
cmc
adc
addl
sub
jle
lcall
rclb
mov
arpl
lret
inc
fimuls
lds
push
in
add
dec
jle
cmp
aam
mov
movsb
push
and
movsb
mov
jl
cmp
mov
fldcw
sti
leave
les
cmpl
pop
loopne
adcb
jmp
hlt
cmp
push
jbe
fiaddl
mov
les
or
cmpsl
adc
sar
dec
adc
sbb
std
test
in
jns
scas
sbb
in
xchg
cs
mov
lcall
push
inc
movsb
hlt
fildll
pusha
cltd
jg
jle
mov
mov
in
sbb
mov
jmp
sbb
sbb
ljmp
xchg
xor
and
xor
ficompl
daa
xor
pop
enter
jae
cmp
sub
sti
sahf
ds
mov
fiaddl
push
cmpsb
out
xlat
mov
loopne
cmp
cmp
xchg
sarb
xchg
repz
popf
scas
xchg
sbbb
push
dec
or
orl
cltd
rolb
cmp
fidivrl
repz
mov
and
cmc
cmp
xor
cmp
repz
inc
mov
adc
mov
ljmp
sub
dec
add
mov
dec
les
xorb
mov
mov
mov
rcrb
mov
inc
arpl
add
jle
inc
xchg
lods
neg
xlat
out
push
cld
pop
or
in
push
mov
jg
xchg
cs
mov
lea
inc
mov
pop
adc
cltd
lret
negl
xor
loopne
push
xchg
nop
outsl
and
adc
rcrl
pushf
jne
lcall
fwait
stos
stos
fcmovb
inc
imul
loope
or
in
push
stc
cmp
ljmp
test
ja
ret
mov
fdivl
cmp
divl
or
add
mov
push
dec
push
arpl
sbb
mov
and
cmp
outsb
pop
andb
cmpsb
ss
aas
iret
inc
push
loop
ror
fisubrl
xor
mov
subl
cmp
adc
std
xchg
out
sahf
shll
lret
mov
pop
es
jl
lods
outsl
adc
bound
mov
xor
in
mov
outsl
fadds
daa
xor
push
or
xchg
lcall
mov
ficoms
enter
cmp
cli
xor
loop
jg
sbbb
add
loopne
add
jl
inc
sarl
xchg
lock
xchg
in
jmp
pop
xor
jle
loope
add
and
mov
cs
xor
mov
andl
push
cld
movsl
ds
sbb
clc
daa
mov
push
cmc
xchg
cmpsl
sub
fs
push
add
mov
jns
inc
sbb
stos
xor
jno
out
stos
inc
jb
inc
fcmovb
adc
push
sub
ss
movsl
mov
jl
jnp
cld
mov
sbb
pop
mov
out
push
int
and
mov
mov
out
test
adc
and
mov
stos
adc
adc
pop
std
dec
push
inc
addb
fistl
inc
sub
mov
jmp
add
dec
testb
frstor
pushl
mov
cmp
cmp
sbb
nop
pop
inc
adc
das
lods
jne
insl
xchg
pop
ljmp
imul
mov
test
or
packssdw
mov
mov
mov
inc
mov
cli
aas
jne
dec
mov
jae
sti
jne
push
fmull
pop
test
ljmp
pushf
cmp
push
mov
mov
test
mov
sbb
xor
daa
mov
push
insb
or
xchg
dec
dec
mov
jo
movsb
jmp
jl
fisttpll
xor
movsb
cmp
shr
push
hlt
loopne
jle
mov
or
mov
ret
pop
lock
dec
cwtl
xchg
cmp
lock
inc
sbb
mov
or
jae
je
lods
cmpsb
and
mov
add
mov
mov
inc
popa
cld
jle
push
in
fwait
adc
mull
pop
stos
in
mov
jl
sub
jnp
sbb
aas
mov
stos
insl
lret
xor
cmc
mov
jg
scas
sub
dec
xlat
in
inc
inc
mov
pop
mov
loopne
pop
mov
ror
scas
dec
mov
shrl
xlat
pop
orb
pop
adc
xlat
bt
mov
pop
mov
xchg
mov
sbb
cmc
leave
jge
shrb
sub
scas
cmp
or
jne
aaa
mov
sub
xor
mov
pop
rclb
iret
data16
lock
push
out
adc
clc
pop
jmp
outsb
sahf
mov
outsl
int3
push
movsb
adc
aaa
lret
jmp
lods
or
jecxz
xchg
jo
mov
int3
psadbw
mov
lock
iret
pop
cmp
cmc
pop
mov
andb
movsl
out
xchg
mov
jo
pop
incl
pusha
mov
xchg
js
mov
mov
enter
or
loopne
push
test
ret
jb
es
pop
into
adc
in
repz
popf
rcrb
adc
adc
xchg
ret
mov
faddl
mov
pop
dec
mov
mov
ret
fcomps
push
and
fdivrl
lret
lahf
sub
mov
lahf
dec
mov
inc
jb
adc
pop
lock
mov
aam
inc
push
cmp
xchg
pop
in
pop
cmp
jmp
xor
arpl
or
mov
push
jg
mov
fadds
sahf
sbb
push
adc
mov
adc
popf
enter
out
adc
and
adc
ds
enter
outsl
push
cmp
push
pop
insl
das
dec
add
ss
fildll
cld
mov
add
pop
jg
jmp
xor
mov
pop
sbb
inc
rcll
push
imul
rorb
mov
xor
cmpsl
incl
xchg
mov
scas
aas
and
dec
push
test
mov
inc
daa
in
pop
aad
or
mov
insb
xchg
in
rcl
and
push
mov
jnp
sub
adc
adc
pop
les
pop
lahf
imul
shlb
stos
cmp
dec
stos
mov
cmp
or
lret
mov
and
xchg
or
dec
adc
inc
fdivrs
stos
inc
xlat
mov
jo
mov
push
sbb
mov
loope
or
ss
sbb
push
add
inc
push
mov
lahf
jge
push
pop
mov
addr16
or
mov
xchg
mov
rorl
mov
xor
xor
orb
dec
popf
cmp
sub
jno
popf
xchg
data16
ffreep
xor
and
xlat
aad
dec
cwtl
stos
push
test
mov
gs
lods
das
into
cltd
test
std
mov
sahf
mov
lcall
fnstcw
jmp
jecxz
int3
push
mov
scas
fcmovne
and
jmp
loopne
movsl
mov
in
push
pop
hlt
push
popa
push
adc
shl
es
gs
in
push
xchg
icebp
inc
icebp
mov
setb
add
insl
pop
jge
mov
jecxz
fiadds
sbb
scas
ficomps
fs
dec
js
mov
cmpsl
bound
and
mov
pop
orb
aad
xchg
popf
dec
mov
out
std
stc
test
and
test
sbb
pop
call
popa
mov
jns
mov
adc
and
out
imul
dec
fwait
dec
mov
xchg
shlb
pop
push
xchg
decl
scas
sbb
xor
add
push
add
lcall
imul
pusha
mov
movsl
outsl
popa
arpl
xchg
mov
cmp
push
mov
jl
test
out
scas
jp
out
cmpsb
xor
fdivs
repz
imul
adc
test
shlb
aad
icebp
and
push
pop
lret
push
cmp
push
inc
mov
repz
and
lea
loope
mov
out
leave
inc
dec
roll
and
lret
cmc
push
cli
dec
inc
jns
mov
fnstcw
dec
jmp
dec
icebp
jp
hlt
push
xchg
mov
mov
cmpb
int3
jge
cwtl
and
push
xor
or
and
jl
adc
push
jp
add
adc
lods
and
pop
cltd
stc
add
call
stos
mov
pop
outsl
stc
fs
lock
mov
jne
xor
jge
pop
shll
std
adc
gs
xor
adc
jg
xor
dec
and
mov
addr16
mov
dec
adcb
xor
test
push
xchg
mov
lea
std
cmp
ljmp
repnz
xorb
jbe
sub
jmp
rcl
push
cmp
aam
mov
jecxz
es
inc
in
and
mov
fwait
adc
out
outsb
mov
pop
scas
xor
in
xlat
fbld
stc
inc
cmp
aam
jne
movsb
xor
and
fdivl
xor
lods
adc
xchg
mov
out
mov
mov
mov
dec
sti
pop
push
lock
inc
lock
adc
mov
push
xchg
jp
push
icebp
dec
insl
lcall
stc
adcl
pop
xchg
arpl
cld
mov
xchg
andb
cld
or
xchg
adc
aad
mov
int3
xor
bound
popa
dec
aaa
fbstp
push
jmp
ja
xchg
dec
js
arpl
mov
and
clc
pop
sub
pop
sbb
fdiv
in
in
stc
daa
imul
bound
xchg
addr16
aam
sub
hlt
sub
sub
pop
movsb
lahf
insl
fistpl
push
xor
and
xchg
mov
js
into
aaa
cmp
cwtl
cld
gs
lods
loopne
push
add
int3
and
sub
outsb
lods
pop
imul
arpl
inc
add
fstl
inc
mov
adc
lock
add
jge
dec
push
cmp
shll
push
inc
mov
orl
push
mov
inc
or
lea
or
inc
cld
or
push
cli
ljmp
jmp
inc
sti
xchg
mov
lock
in
pop
mov
stos
ss
pop
ja
and
xchg
iret
std
xor
scas
shrb
mov
idivb
sti
mov
das
popf
adc
jp
cld
mov
test
cmp
and
add
inc
test
dec
fadd
aad
mov
mov
in
add
das
not
push
cmc
jns
sarl
xchg
mov
xorb
xchg
ror
cmp
pop
andl
and
jb
shlb
cli
sub
mov
iret
aas
shrl
nop
sub
add
inc
adc
lret
inc
rclb
xor
xchg
negb
imul
and
arpl
out
mov
mov
sbb
and
addr16
cli
rorb
sub
nop
jp
icebp
jne
add
shl
sti
mov
psllw
push
mov
call
test
sarb
inc
int3
xor
sbb
mov
ja
imulb
jmp
outsb
and
cmp
jae
push
js
sbb
mov
sbb
outsl
add
ss
jge
popa
mov
repnz
xchg
js
ljmp
movsl
js
fstpl
in
adc
into
fdivrp
fdivs
jge
mov
test
sbb
pop
loopne
imul
fsubrs
movsl
or
sbb
std
jg,pn
adc
mov
scas
bound
jae
pop
cmp
sub
jg
and
popf
sub
xchg
test
mov
repz
mov
inc
std
xor
mov
add
cmp
or
mov
add
mov
cwtl
outsl
imul
fidivrs
jns
movsl
add
je
loopne
cmp
in
cmp
fmulp
test
cmpsl
movsb
pop
mov
popa
lods
gs
clc
or
ja
or
xchg
xchg
or
xchg
popf
js
pop
les
test
jbe
push
and
daa
xchg
or
jno
xchg
sahf
movsl
sbb
leave
leave
inc
adc
orb
or
cvtps2pd
push
lods
or
push
loopne
pop
xchg
out
test
sti
inc
xor
fs
add
push
cmp
call
repz
cmp
mov
lcall
sub
cmpsl
mov
dec
in
add
enter
data16
cmp
add
push
mov
stos
inc
push
rclb
imul
int
popfw
fnstcw
cmp
pop
cli
inc
jp
cmp
sbb
stc
das
in
into
mov
imul
jne
icebp
cmp
cwtl
xlat
aad
js
movsb
pop
jecxz
sub
not
int
mov
sti
jl
das
adc
adc
std
test
sub
inc
adc
outsb
add
fwait
lods
fcom
mov
cmp
pop
test
popa
push
repnz
or
sub
enter
adc
leave
inc
incl
in
xchg
adc
out
ds
inc
mov
je
and
lret
nop
leave
les
pop
outsb
inc
mov
fists
mov
insl
popa
cwtl
arpl
or
xchg
sti
cmp
pop
add
cltd
fisubrl
and
jmp
cmp
ss
loope
inc
pusha
inc
pop
loop
jg
push
sub
mov
push
mov
hlt
sti
pop
xchg
adc
popf
das
pop
gs
add
and
cwtl
and
sub
add
cmp
pop
jecxz
mov
xor
push
jp
sbb
aam
and
jns
js
aas
into
cmpsb
fucom
or
subl
pushl
fisubl
xor
pusha
mov
add
push
xchg
fsubl
pusha
add
xor
jge
neg
popa
dec
inc
mov
aas
mov
loop
mov
pop
jge
xchg
pop
js
pop
insb
sub
or
inc
ret
stos
sbb
adc
inc
adc
orb
repnz
pop
cltd
mov
dec
dec
enter
xchg
test
pushf
jp
test
xchg
and
sub
cmp
xlat
nop
rolb
add
jb
jmp
mov
xchg
out
push
aas
pop
push
in
mov
jle
lcall
rorl
jge
push
mov
outsl
fmul
jbe
push
stc
imul
pop
mov
jge
jo
stos
shll
int3
adc
fildl
aad
inc
push
lret
ret
push
cli
aaa
in
gs
pop
jns
sbb
mov
push
cmpsl
and
iret
and
bound
or
mov
xchg
shll
mov
cmpsl
dec
fbld
xchg
call
push
xchg
scas
add
stos
out
jmp
and
je
mov
ljmp
and
cs
or
dec
das
mov
or
adc
adc
dec
xchg
xchg
push
in
pop
test
push
ja
sub
lret
or
test
lret
cmp
dec
xor
insl
sub
testb
imul
jno
cwtl
push
mov
scas
sub
jbe
fsubrl
pushf
xchg
cmp
mov
push
leave
mov
push
js
adcb
jl
mov
int3
jne
nop
cmpsl
mov
push
jge
lods
leave
outsb
xchg
lcall
fdivp
xlat
cmp
and
xchg
jae
jg
push
inc
pop
xchg
popf
in
sbb
fnstcw
movb
xchg
xchg
aad
jecxz
fmulp
xchg
sbb
and
je
pop
nop
xchg
pop
cmp
adc
push
fisubrl
arpl
add
cli
cmp
jecxz
jbe
mov
add
cmp
test
cmp
insl
fwait
inc
push
dec
cli
inc
dec
jae
mov
test
mov
test
loope
inc
and
daa
or
dec
fldt
dec
add
add
push
push
hlt
add
sub
jb
js
add
sti
sub
and
pusha
sub
inc
pushf
dec
xor
push
add
lods
and
cwtl
push
push
rcr
and
sbb
jecxz
cmp
jbe
je
in
rorl
sahf
pop
xchg
inc
iret
test
push
gs
push
push
int3
out
hlt
push
push
sbb
rcl
add
add
xor
push
jmp
inc
mov
sbb
add
add
aaa
jo
pop
jecxz
lea
mov
outsb
aam
incl
sbb
into
push
testl
jo
adc
jecxz
mov
hlt
push
lods
lret
push
stc
inc
add
mov
ljmp
push
cmp
and
push
out
sbb
test
cmp
push
jne
out
push
int
dec
sub
ss
stos
pushf
loopne
stos
cmp
cmp
aad
sub
ljmp
fisubl
andl
xchg
mov
pop
push
mov
adc
xor
sub
test
lock
gs
sub
test
xchg
mov
adc
repz
push
jl
rorb
push
adc
inc
adc
mov
mov
loopne
push
cmp
sbb
addr16
add
dec
jno
outsl
pop
pop
dec
inc
adc
adc
ss
cltd
sub
mov
lret
aas
cmp
les
lcall
popa
mov
popf
pop
jns
dec
mov
insl
stos
rol
mov
xchg
daa
or
gs
mov
pop
fxsave
in
ror
dec
mov
or
and
sbbb
dec
daa
pusha
sbb
mov
movsb
daa
or
mov
push
es
test
push
xlat
adc
in
xchg
nop
and
adc
xor
ret
pusha
ret
and
ljmp
mov
mov
je
mov
xor
mov
sbb
les
stos
fstp
mov
aas
pushf
xchg
cltd
push
cmp
mov
mov
cltd
inc
pop
add
dec
dec
daa
pop
mov
and
dec
out
outsl
mov
jg
lcall
fisubrl
mov
jns
sbb
hlt
mov
mov
hlt
lock
xor
sbb
ret
dec
repz
sbb
subl
mov
movb
xchg
mov
jl
fildl
mov
testb
loope
loopne
mov
adc
or
pop
ror
test
dec
sub
jae
outsl
in
sbb
adc
aaa
cmpsb
addl
rclb
roll
das
cmp
stos
or
jecxz
mov
ss
dec
lods
push
xchg
dec
jo
pushf
loop
mov
mov
shr
or
dec
inc
aas
pop
or
add
lods
push
jnp
mov
sbb
adcl
loope
int
xor
hlt
aam
jo
mov
addr16
ret
imull
xchg
sbb
and
and
jbe
cmp
inc
insb
pop
xor
push
sub
int
je
addl
fcmovbe
enter
add
das
pop
cmp
mov
in
add
or
testb
mov
xchg
dec
lock
inc
cmp
insb
cwtl
jb
pushf
and
add
pop
in
xchg
push
inc
sbb
out
sbb
xchg
push
and
xchg
fdivrl
movsl
pusha
icebp
inc
sarb
ds
xchg
sub
xor
in
pop
xor
cmp
and
std
ss
sbb
sub
cmp
sbb
or
inc
fs
ffree
hlt
and
mov
pop
or
dec
pop
add
nop
add
xlat
xlat
les
sbb
out
notb
jno
mov
add
push
jnp
inc
jb
jl
xchg
es
loop
lahf
add
gs
dec
adc
or
js
inc
mov
mov
lret
and
dec
and
sub
fldenv
and
fwait
push
mov
pop
add
cwtl
pcmpeqd
inc
inc
loop
xor
sbb
ja
jge
fcmovne
inc
pop
pushf
inc
out
test
mov
loop,pt
or
std
xchg
mov
or
cmp
xchg
xchg
sahf
inc
in
lea
cmp
or
outsl
lods
cmp
scas
push
mov
out
div
pop
sub
add
or
outsl
mov
mov
mov
insl
insb
fwait
xchg
popa
sbb
hlt
fmul
bound
cmpsl
addl
xor
mov
cld
cmp
outsb
fdivr
add
dec
ss
or
push
push
rol
je
repz
sub
cmpsb
insb
mov
inc
out
xchg
data16
and
sub
pop
push
and
andl
mov
cmpsb
sub
roll
test
sbb
push
into
cwtl
jge
ret
das
int3
pop
stos
cmp
cmp
dec
xor
sbb
shrb
jg
xor
pop
mov
mov
pop
imul
mov
fmull
ss
mov
mov
das
xor
mov
pop
adc
incl
adc
jnp
retw
test
pop
fmuls
xor
jo
into
hlt
adc
cltd
pop
adc
loop
and
push
lds
or
icebp
mov
mov
aaa
jo
mov
mov
pop
dec
push
xchg
fiaddl
mov
mov
or
repnz
inc
in
rcr
push
push
repz
push
stos
xor
inc
fiaddl
test
cmp
jp
lods
xchg
cwtl
jnp
push
xor
mov
push
adc
repnz
dec
xorb
jnp
stos
fwait
scas
jmp
push
adc
mov
and
adc
mov
sbb
pusha
fs
mull
pop
jno
ja
popf
xor
jle
cmp
clc
cs
mov
mov
sbb
jmp
icebp
adcl
rclb
pop
mov
xchg
shll
std
or
fidivrl
in
mov
xlat
lldt
xor
adc
test
add
dec
adc
fistpl
movb
and
ds
repz
ficoms
or
adc
mov
and
mov
mov
xchg
loop
imul
imul
into
xor
loop
rcrb
icebp
cs
jl
jmp
xchg
mov
push
cmp
mov
adc
mov
pop
fwait
cwtl
adc
add
js
inc
in
jnp
int
sti
jp
aaa
ficompl
mov
rorb
adc
push
lret
xchg
orb
inc
test
iret
imul
xor
pop
in
cwtl
out
or
sub
mov
and
push
pop
or
push
or
lea
divps
add
or
divb
pop
mov
jns
cmp
add
pop
pusha
xor
fbld
leave
xor
cld
xchg
divl
or
gs
sti
add
lret
lret
subb
outsl
scas
xchg
and
mov
xchg
push
je
lea
add
xor
mov
add
addr16
add
inc
or
movsl
shrb
mov
xor
out
inc
pop
leave
icebp
xor
adc
pop
xchg
push
mov
sahf
sahf
mov
push
fmuls
out
mov
dec
outsb
dec
jp
shr
iret
loope
aam
mov
out
fidivs
xchg
mov
jb
dec
sub
out
push
das
mov
loope
data16
scas
dec
adc
fbld
or
int3
xchg
mull
test
pop
lock
xlat
xchg
mov
pop
out
call
push
add
push
mov
mov
loope
loope
lcall
sub
insl
js
xor
mov
mov
inc
push
cmp
cltd
sbb
sahf
pop
lcall
movlps
xor
mov
cmpsl
mov
lds
setbe
sahf
daa
sbb
pop
or
add
call
sbb
mov
incl
mov
hlt
clc
mov
stc
jg
call
lods
push
pop
loope
orb
sbb
mov
pop
fsubl
mov
or
inc
test
sbb
mov
jb
xchg
enter
jl
push
add
inc
test
dec
insl
repnz
inc
cwtl
insb
stc
dec
cmc
shll
jae
xchg
adc
popf
pop
rorb
adc
in
or
mov
js
sbb
add
cmpsl
push
or
les
aam
push
push
inc
lcall
push
adc
lods
loope
cld
xchg
imul
bound
lods
add
test
bound
pusha
stos
mov
adc
pop
and
push
test
cld
leave
scas
ret
inc
icebp
sub
push
xchg
test
jp
pusha
stos
add
das
sbb
inc
aam
mov
sbb
hlt
arpl
xor
rclb
sub
add
icebp
gs
pop
test
out
std
or
jnp
dec
pop
jecxz
mov
mov
xchg
sarb
scas
xchg
ds
jle
popl
enter
sub
sbb
push
pop
repnz
fnsave
sbb
out
lds
popf
jb
lds
push
pop
jnp
mov
xlat
arpl
mov
jns
cmp
movsb
shl
xor
push
jle
adc
mov
hlt
aaa
lret
aad
pop
leave
in
pop
add
mov
sbb
enter
test
shll
int
and
cli
inc
mov
pop
push
addl
sahf
mov
push
push
jmp
push
jecxz
xor
pop
arpl
adc
fwait
insb
pop
xchg
sub
inc
xor
add
xchg
push
test
aad
bound
nop
and
sbb
push
add
push
dec
adc
bound
cmpsb
test
pop
jns
sahf
fs
add
mov
scas
jge
in
mov
popa
mov
test
lock
fsubrl
sti
imul
lahf
cmc
inc
sahf
faddl
push
ja
push
or
mov
jge
adc
pop
movsl
and
aas
aas
pushl
das
fimull
inc
hlt
fisttpl
cmp
cmp
and
push
leave
cmpb
lret
mov
scas
lahf
jmp
mov
mov
sbb
sub
jg
mov
or
adc
dec
imul
cmp
in
mov
push
xchg
jp
inc
cmp
mov
pop
call
jne
mov
cmc
pop
sbb
sbbl
movsb
fidivs
loop
lret
xlat
add
xchg
add
in
cmc
enter
pop
scas
adc
imul
jmp
sub
adc
je
dec
jo
mov
sahf
dec
mov
outsl
popa
nop
out
ret
xchg
add
daa
push
es
push
mov
sarb
insl
mov
cmp
test
fdivrl
cmpsl
mov
imul
inc
cwtl
insb
ret
mov
push
pop
cmpsb
cld
mov
sub
in
adc
lcall
jbe
les
fsubrs
sub
sti
jecxz
fcomi
jp
mov
sub
mov
rol
inc
cmp
es
imul
in
dec
mov
aaa
pop
cmp
mov
subl
fisubs
mov
shrl
rorb
or
xchg
out
int3
push
iret
and
lret
or
push
nop
inc
adcl
xor
push
xchg
loopne
push
loopne
xor
sbb
cmc
or
stc
jle
and
arpl
mov
test
shrb
test
fidivl
les
scas
mov
pop
mov
scas
jnp
jl
shll
sub
and
je,pt
push
xor
xchg
sti
rcrb
scas
push
test
test
fisubrl
fistpll
sub
cmp
fldenv
sti
dec
ret
cmc
loopne
mul
jbe
mov
cmp
loope
jno
sti
pminsw
cmp
inc
mov
mov
or
loope
cmp
lret
lds
js
mov
or
jae
dec
sbb
insb
jo
cmc
pop
jnp
sub
adc
or
int
pop
mov
mov
call
lds
jns
repz
addr16
into
pop
sbb
aad
imul
stos
loope
mov
adc
mov
sub
shlb
mov
jno
popf
mov
mov
adc
lds
jecxz
xchg
pushf
sahf
test
add
shrl
insl
cmpsb
cmpsl
dec
out
clc
notb
fisubs
mov
cld
push
std
cmc
fildll
push
jbe
fs
clc
push
or
jae
mov
ljmp
mov
outsl
scas
pop
inc
sub
push
lret
ret
inc
push
jae
out
push
shll
inc
mov
lods
inc
pushf
outsb
dec
mov
or
push
push
bound
lcall
lret
inc
divl
gs
and
inc
out
cmpsb
inc
int3
adc
js
mov
or
mov
or
or
iret
shr
pop
daa
mov
stos
cs
add
into
mov
cmpsb
fnsave
fs
es
push
adc
mov
rcl
push
popl
or
sti
in
scas
pop
xchg
cmc
in
pop
sub
repz
dec
sti
aam
mov
cmpsl
nop
pop
icebp
dec
push
in
fists
xchg
mov
push
mov
jnp
or
pop
int3
mov
or
filds
sub
inc
jmp
cwtl
cmpsb
xor
lret
imul
mov
repz
test
mov
dec
fs
nop
fnstcw
or
inc
jmp
sbb
or
fsubs
sbb
xchg
nop
ljmp
jnp
cmpsl
dec
mov
cmc
cmp
loop
sub
mov
orl
mov
jecxz
and
addr16
out
aas
jae
push
pop
fmuls
inc
stos
push
push
outsl
lock
mov
aaa
xchg
ret
lahf
push
icebp
cmc
movsl
out
push
xor
lods
jns
xlat
push
jmp
fbld
cltd
out
jg
sub
cmp
push
mov
adc
ret
cmpsb
xchg
dec
cmpsl
jmp
std
call
jle
cmpsl
mov
aam
test
repz
sub
xchg
push
ret
pop
outsb
daa
popf
push
loopne
jmp
pop
jle
xlat
fwait
shrb
xchg
push
cmp
clc
daa
push
push
scas
ss
fbld
cmp
mov
paddd
dec
mov
and
push
in
mov
ud1
das
cmp
xor
inc
pop
sbb
pop
shrb
sbb
push
test
sti
cmc
mov
pushf
adc
jnp
or
int3
jmp
cli
lcall
notb
movsb
push
loopne
test
fs
mov
mov
pop
cli
sub
shlb
in
or
pop
lret
add
into
xlat
lds
adc
mov
rolb
xor
sahf
push
mov
orl
cmp
push
orb
out
sub
and
mov
sti
pop
testl
call
push
gs
pop
fisubrl
dec
std
scas
rcl
inc
adc
add
daa
popf
fsub
xchg
fisttpl
or
stc
mov
fnstsw
pop
lds
mov
cmp
pop
mov
test
sbb
in
push
decl
and
jae
jne
sbb
out
sbb
jmp
sbb
out
bound
xchg
dec
add
fwait
aaa
add
daa
shll
push
adc
dec
dec
int3
into
out
push
sub
xchg
ljmp
test
or
lds
push
jo
pop
mov
or
xchg
mov
repnz
mov
es
sub
jo
inc
push
in
fsubl
dec
mov
mov
jge
jge
lods
aad
les
xor
inc
and
shr
shll
addl
or
pop
inc
sub
mov
data16
push
mul
mov
jmp
pop
insb
jb
or
dec
ficomps
gs
cmp
dec
cmc
cli
aaa
xchg
mov
jg
das
stos
data16
int3
lea
pusha
loope
jne
cs
and
aad
inc
add
pop
ljmp
pop
mov
sar
add
insb
jns
cmp
fisttpll
clc
inc
enter
pop
sub
jno
dec
push
and
jecxz
pop
sub
push
mov
dec
sbb
sbb
mov
testb
lahf
cwtl
in
xor
cmpsb
sbb
les
lds
mov
iret
sbb
adc
rcrl
or
adc
lods
imul
lret
jae
dec
sub
add
popa
in
mov
sbb
dec
jge
mov
negl
adc
int3
int3
int3
push
mov
pop
cmp
add
mov
jl
call
fidivrs
jns
inc
jns
fld
jbe
shlb
aam
sbb
xchg
pop
cmp
cmp
cmp
outsb
cmpsl
pop
aaa
sub
in
ja
iret
stos
les
cld
inc
xorb
xchg
movsl
popf
xlat
or
popf
movsl
lea
jg
push
leave
enter
xlat
lahf
repz
outsb
scas
jnp
lcall
inc
and
popa
xchg
dec
sbb
cli
hlt
and
pop
mov
sub
push
pop
xor
sti
ss
jb
jp
push
repnz
aam
add
xorb
pop
xchg
icebp
jbe
cld
cmpb
lea
dec
les
mov
rcrl
xchg
fimuls
call
pop
xor
repz
sti
mov
cmp
inc
cmpsb
mov
jp
int
pushf
aas
xor
bound
std
mov
mov
bound
jne
out
sub
je
and
lea
jl
sahf
sbb
xchg
lea
cmp
loop
imul
fstpl
mov
xchg
call
xor
addr16
sub
bound
scas
cltd
cs
aaa
mov
jmp
add
aad
push
ss
adc
hlt
xchg
cmp
orl
cltd
xchg
xchg
mov
inc
jne
fmull
push
mov
stos
outsl
outsl
rcl
mov
xchg
int
jne
jns
cmp
pop
pushf
mov
movsb
jmp
dec
or
mov
jno
js
out
cmp
rol
xchg
push
and
add
push
adcb
out
adc
or
push
and
inc
or
arpl
jns
xor
shrl
scas
lea
stos
and
out
into
lock
clc
clc
inc
je
ficomps
lret
icebp
push
test
pop
into
scas
fildll
icebp
sub
cmpsl
roll
dec
lds
mov
sub
mov
jb
jmp
outsl
sub
dec
outsl
faddp
adc
andl
std
xor
outsl
sarl
in
fldt
shl
aad
jecxz
movsb
mov
outsl
jo
adc
aam
addl
mov
pop
sub
push
sahf
lcall
scas
xorl
jb
cmp
jle
ja
add
mov
cmp
xor
sub
add
or
repnz
jbe
lds
sub
clc
lock
jae
add
test
jecxz
cltd
ret
mov
inc
loopne
rorb
push
adc
add
xchg
jno
cli
fidivrl
cmp
push
dec
ret
xchg
adc
mov
outsl
adc
push
push
xor
add
aad
test
iret
into
xchg
filds
jle
stos
jbe
xchg
xchg
invd
jmp
push
sub
push
mov
pop
cmp
jnp
pop
ret
dec
mov
push
dec
popa
sti
xchg
add
xor
sbb
dec
aas
xor
fndisi(8087
adc
stos
mov
enter
sub
sub
cld
push
cmp
icebp
ja
sarb
cmp
jecxz
out
pop
loopne
xchg
cmp
cwtl
jae
dec
jle
and
mov
jecxz
mov
jb
inc
clc
lret
xchg
popf
mov
adc
adc
test
rorb
inc
pop
movsl
ljmp
lahf
das
in
dec
loope
jle
add
repnz
fs
pop
data16
in
loop
inc
mov
ljmp
cmc
icebp
pop
push
sub
inc
add
sarl
and
mov
cmc
sub
in
das
mov
imul
cs
mov
bound
mov
and
and
mov
pop
xchg
push
sbb
mov
mov
jp
add
idivl
pop
ficoms
adc
rcrb
insb
int3
stos
dec
pop
mov
add
enter
loope
push
inc
cmp
jae
iret
ss
and
or
loop
xor
inc
cmc
imul
cmp
xchg
lret
fbld
push
jne
mov
dec
pop
mov
cmp
fstp
shrl
adc
dec
jbe
sbb
mov
xchg
int
jle
rclb
xchg
and
sub
mov
jge
or
inc
ret
stos
out
ds
dec
fsubs
mov
xor
adc
mov
pop
xor
in
in
in
xlat
sarb
outsb
aas
push
xchg
or
xchg
aas
xchg
mov
movb
mov
jb
outsb
icebp
out
int3
lcall
sti
adc
ja
pop
mov
adc
std
and
cmp
lea
mov
imul
or
or
lds
cli
adc
int
outsb
mov
xchg
bound
fimuls
addb
cli
add
and
sbb
lea
sarb
loop
daa
sbb
insl
stc
xchg
into
gs
dec
dec
int3
mov
mov
xchg
sbb
sti
les
push
jbe
jo
repnz
daa
cmp
ss
in
mov
xor
mov
test
stos
mov
shl
in
add
mov
cmpsb
push
iret
mov
inc
mov
add
pop
inc
sahf
sti
rcr
mov
ljmp
pop
jge
adc
les
arpl
popa
push
into
push
testb
mov
inc
test
add
or
adcl
pop
pop
inc
sbb
cmpsl
in
dec
stc
add
mov
sub
fsubs
hlt
into
or
dec
in
icebp
xchg
jb
int3
jb
cld
xchg
lcall
mov
lods
cmp
fidivrl
inc
mov
xor
push
jae
lock
sub
mov
fistps
mov
scas
adc
xor
sub
icebp
shrl
inc
arpl
rolb
clc
insl
push
jmp
push
dec
mov
ret
scas
dec
icebp
cmp
cmp
sbb
in
jg
xchg
fcmovnu
test
dec
xchg
or
xlat
repz
pop
int3
and
push
fsts
and
mov
pop
jl
pop
add
jno
sub
jb
jge
lcall
lahf
imulb
cmpsb
and
imul
adc
xor
mov
xchg
mov
or
lret
int3
cmp
pop
stos
jnp
inc
mov
dec
xor
mov
lea
mov
into
mov
cmovp
jg
mov
dec
inc
loopne
dec
push
pop
adc
cs
lret
and
and
push
xchg
xchg
aaa
xorb
pop
cmp
bound
scas
les
mov
mov
xchg
jmp
fdivrs
repnz
hlt
push
in
loop
unpcklps
xlat
aam
pop
scas
in
clc
sarb
outsl
aas
cmp
cmpsb
jecxz
jle
pop
mov
dec
pusha
mov
push
repz
sbb
xor
xor
stc
jno
inc
in
dec
jbe
mov
or
inc
jbe
xchg
popf
loop
popf
adc
call
dec
push
inc
fstpt
adc
lahf
lods
add
lock
cmp
mov
lds
sbb
je
push
push
es
gs
das
adc
push
pop
sbbb
es
mov
jbe
ljmp
cmc
xchg
mov
rcl
loop
lahf
and
enter
fistpll
or
lods
sbb
push
dec
push
jnp
pop
sbbl
adc
int
out
movsb
loope
mov
cmp
scas
cmc
jae
push
dec
movsl
sahf
fbld
lods
call
xchg
sub
sti
clc
jp
fwait
jle
pop
outsb
lret
add
cld
int3
inc
decb
fwait
cmp
add
das
push
test
xor
cld
out
call
fisubrl
cmp
lahf
mov
xchg
or
mov
inc
pop
jbe
ret
daa
jle
jbe
push
movsb
nop
gs
adc
mov
jb
or
in
push
movsb
daa
pop
cmp
mov
fwait
sbb
mov
dec
cmp
pop
mov
lods
stc
xor
leave
neg
cmp
lcall
ret
imul
jmp
dec
call
out
out
cmp
push
xchg
pop
ret
sarb
ror
or
push
xor
les
cmp
repnz
iret
icebp
xor
push
fwait
mov
jle
mov
inc
jbe
scas
addl
out
xchg
fs
add
push
movsb
repnz
pushf
fdivs
in
cmp
jecxz
or
popf
jg
lret
mov
inc
pop
xchg
or
sub
dec
cwtl
add
pop
pop
cmp
xchg
mov
lret
xchg
adc
mov
ljmp
mov
pop
xor
inc
xchg
in
pop
fistl
lahf
js
cmp
cmp
jl
std
fldcw
mov
jge
mov
fidivl
inc
scas
lcall
xchg
les
test
mov
mov
jo
mov
test
rcr
gs
int3
int3
imul
push
movsb
xchg
jg
lcall
and
lahf
cmp
shll
or
dec
shl
fsubp
cld
pop
lcall
mov
adc
or
scas
inc
es
pop
push
push
sub
jns
outsl
out
push
sbb
lcall
add
daa
cwtl
push
jbe
in
into
mov
mov
fisubrl
addl
mull
cltd
leave
out
xor
pop
fs
inc
mov
lret
mov
xor
rcrl
jae
sub
add
in
sub
fs
nop
test
dec
leave
push
test
mov
ljmp
mov
into
stc
int
ljmp
cmp
jns
aad
lds
cmp
xchg
jmp
push
test
fs
cmp
sub
xor
addr16
mov
mov
div
fst
stos
sub
jl
jmp
nop
dec
or
push
or
mov
test
mov
push
sub
push
leave
mov
loopne
or
into
xor
xor
xor
cltd
rcl
jmp
cmpsl
int3
push
std
cld
test
ljmp
jbe
shrl
or
daa
cli
add
pop
jmp
vmovups
adc
popf
rcll
lock
lahf
idivl
cmp
mov
xchg
jl
sbb
dec
xor
data16
push
push
fs
sti
pusha
fstps
inc
adc
lock
and
mov
jns
xchg
in
or
leave
insl
mov
sub
xchg
pop
inc
out
mov
add
sub
js
cmc
call
int3
pop
pop
out
mov
nop
movsb
add
adc
cmc
fs
mov
xchg
mov
jbe
out
push
loopne
inc
lcall
cmpsl
xor
mov
jae
jg
mov
sub
dec
out
mov
xor
xor
pop
lret
push
pop
jp
sbbl
hlt
dec
and
fbld
mov
xor
mov
stos
rcrb
daa
subl
wbinvd
enter
cmp
jle
mov
aad
fisubrs
lods
arpl
sbb
pop
aas
insb
push
mov
outsb
pop
rolb
push
push
test
push
ficompl
xor
mov
and
cltd
in
aad
push
cmp
popa
bound
les
test
push
dec
into
gs
and
out
leave
xchg
sbb
xor
lahf
in
jle
push
popa
sub
fidivl
lret
lret
cmpsl
sub
mov
mov
movsl
insl
je
aam
je
loopne
mov
dec
testb
in
sbb
push
pusha
scas
je
dec
jecxz
idivl
dec
cmp
jmp
lods
mov
mov
imul
push
adc
add
sub
clc
arpl
jns
mov
aad
push
cmp
in
and
cld
push
js
js
repz
jp
dec
push
inc
dec
add
push
rcrl
sbb
js
ss
add
shl
add
mov
mov
imul
out
mov
test
lret
xor
xor
xor
das
into
in
dec
or
xchg
das
out
pop
aad
lret
or
nop
popa
sub
daa
les
inc
repz
cmp
pop
sbb
imul
jnp
adc
mov
xchg
mov
sub
pop
mov
imul
in
or
pushf
push
add
aas
mov
jmp
and
or
popl
cltd
mov
xchg
gs
les
mov
ret
pop
adc
mov
lea
jl
in
jle
dec
in
out
std
adc
ret
inc
rorl
xchg
mov
sahf
and
cmpsl
cld
inc
js
mov
jge
push
adc
out
jo
cs
mov
sbb
imull
ret
jo
hlt
and
xchg
test
push
dec
add
or
adc
dec
stos
mov
ret
fstl
pop
fildll
ror
cmp
mov
sub
mov
dec
lcall
fwait
ret
jl
mov
scas
aaa
mov
hlt
sbb
pop
lock
dec
mov
sbb
addr16
sub
or
or
cmp
data16
cld
xchg
loopne
push
and
in
dec
sahf
ret
mov
adcb
mov
loope
xlat
mov
add
dec
pop
jno
mov
mov
mov
setne
mov
push
cmpsl
into
rcrb
gs
cltd
fwait
lods
jecxz
lret
adc
scas
push
mov
call
sbb
in
or
arpl
push
adc
lahf
aaa
popa
mov
jb
mov
fldt
sub
sbb
fisttpll
inc
xor
xchg
out
jo
sub
jbe
leave
gs
sub
push
mov
in
not
mov
jl
jmp
subl
push
pop
mov
fnstcw
mov
inc
or
jo
je
pop
cmp
insb
popa
dec
jl
sub
mov
add
mov
sbb
xchg
xor
call
data16
mov
jle
push
idivl
pop
sar
lock
shl
or
adc
ret
addr16
add
add
int
cmp
jecxz
daa
cmpsb
pop
jle
loopne
test
jbe
out
adc
adc
dec
int3
add
and
dec
xchg
aam
scas
sbb
push
push
enter
jnp
or
lods
lret
lock
cmp
imul
mov
sbb
js
lea
cmp
xchg
pusha
pop
shrb
mov
fprem1
mov
sbb
loope
and
jecxz
jecxz
dec
xor
sahf
xor
mov
cmp
jmp
xchg
fwait
sub
mov
mov
adc
mov
push
pop
sbb
clc
or
repz
sbb
inc
add
mov
pop
xchg
ljmp
leave
dec
mov
sub
popf
leave
dec
cmpsb
adc
sub
jne
clc
in
test
pop
pop
mov
nop
or
je
ss
mov
dec
or
popa
adc
mov
scas
jno
mov
test
jbe
mov
out
xchg
lret
hlt
test
xchg
enter
pop
dec
sbb
mov
in
jle
pop
imul
hlt
xlat
cltd
loop
xchg
outsb
dec
enter
jns
dec
loop
mov
pop
adc
jns
sahf
aad
mov
test
stos
test
adc
dec
movb
std
cmp
fnstcw
jmp
repz
loope
lods
jno
pop
pushf
sbbb
push
mov
dec
adc
or
push
xchg
addb
push
pop
add
xor
dec
adc
or
fwait
mov
lods
mov
leave
adc
fistps
sbb
mov
mov
or
fwait
insl
pop
fdivrl
xchg
or
pop
js
mov
inc
mov
notl
loop
and
sub
int
cmp
jg
ret
out
mov
cli
bsr
push
gs
aad
sbb
xchg
imul
insb
dec
sub
dec
add
fidivs
push
jge
rcll
or
lods
fwait
push
mov
jae
mov
mov
pop
cmp
mov
and
push
sbb
adc
cmp
push
jno
or
daa
push
aam
pop
mov
and
stos
test
push
ss
lret
out
xor
mov
sbb
or
cli
loope
jmp
cltd
mov
jge
cwtl
xchg
jb
mov
or
aam
mov
mov
lcall
pop
lods
std
inc
cmp
mov
or
jnp
aaa
clc
adc
dec
sub
jae
ss
stos
and
mov
jge
mov
js
pop
jb
popa
jne
out
mov
lret
jbe
push
into
adc
iret
mov
fcomp
shrl
clc
mov
push
cmp
sbb
add
pop
or
and
mov
aad
push
imul
fisubs
enter
adc
mov
fsubl
push
mov
cli
out
imul
mov
or
adc
or
mov
and
mov
or
inc
movsl
mov
adcb
jbe
adc
cmc
push
pop
scas
fs
stc
or
or
imul
pusha
in
outsl
push
lods
and
inc
call
shr
imul
lret
lods
jb
pusha
and
je
mov
pusha
clc
lock
mov
xor
jg
push
imul
jg
repnz
mov
out
mov
gs
movsb
mov
mov
out
mov
movsb
icebp
pop
mov
test
setne
mov
dec
xor
cmp
adc
sub
mov
xchg
push
test
int
ret
cli
bound
mov
cmp
mov
clc
mov
sti
subb
mov
stos
mov
outsb
js
xor
dec
lcall
add
mov
dec
mov
and
pop
mov
imul
dec
jb
pop
cmpsb
and
cmp
sbbb
jmp
push
pop
shr
push
fists
ljmp
stos
test
xor
je
jb
pop
call
mov
add
push
mov
xchg
or
ljmp
xor
mov
push
xor
dec
mov
fbstp
inc
push
mov
cmc
sbb
pop
out
and
fsubrp
sub
xor
outsb
mov
ljmp
roll
adc
sub
test
jbe
out
jge
push
mov
adc
add
hlt
sub
add
cmc
mov
mov
or
aad
and
cld
jbe
dec
btr
movsl
outsl
mov
rorb
jle
jl
or
sub
push
mov
jecxz
dec
ja
out
test
mov
cmpsl
mov
test
push
sub
jmp
cmc
adc
and
stos
ss
add
loop
aad
add
mov
jb
push
add
jne
inc
push
xchg
jl
xorb
mov
mov
cmp
mov
jmp
ljmp
ss
pop
mov
test
sar
loopne
or
or
lock
lcall
pop
pop
mov
incl
divl
test
rorl
jo
mov
dec
fidivrs
dec
sub
js
push
xlat
and
lret
lds
jne
cmp
xchg
add
push
push
rcr
cwtl
jecxz
shr
cmp
add
mov
lock
add
push
movsb
lahf
cld
mov
orb
test
adc
loope
push
ficompl
es
into
xor
loope
pusha
insb
pop
jns
aad
jnp
rorl
mov
mov
inc
sub
jp
fsubrs
movsb
or
daa
stc
pop
inc
sbb
cli
int3
das
mov
stos
mov
mov
ret
pushf
sub
icebp
sub
and
fnsave
sbb
lods
in
xchg
fimuls
dec
shrl
adc
mov
rclb
aad
mov
icebp
daa
jnp
cmp
push
iret
and
pusha
xchg
in
or
cmp
jle
sti
lret
popa
popf
push
inc
cmpsl
xor
test
aam
icebp
mov
jne
je
bound
jle
sub
jbe
lcall
dec
sub
mov
add
ss
popf
in
xor
nop
ja
mov
sbb
inc
or
icebp
sub
or
sti
aas
add
or
enter
xor
jnp
add
dec
push
out
adcl
outsl
jmp
arpl
sub
in
mov
mov
inc
aad
outsb
rclb
jne
outsb
outsb
ret
scas
adc
aad
subl
lea
std
push
cltd
dec
or
dec
jo
push
pusha
jne
loopne
std
inc
sbb
aaa
push
imul
and
adc
push
sub
psrld
stc
lret
hlt
outsb
pop
jo
mov
add
mov
xchg
cli
paddw
rorb
or
cmp
or
ret
add
dec
imul
dec
push
hlt
adc
imul
inc
sahf
into
aam
stos
hlt
and
mov
xchg
add
mov
std
sbb
test
in
mov
call
pop
inc
icebp
mov
pinsrw
outsl
sahf
push
push
adc
push
or
jo
adc
cmp
nop
push
push
bound
in
fldcw
mulb
out
inc
out
dec
sbb
cs
push
mov
inc
xor
enter
std
stc
in
cmp
nop
xor
inc
mov
jp
sbb
adc
jb
or
and
add
and
push
jp
mov
imul
mov
jne
jae
push
xchg
bound
mov
in
pop
jne
in
dec
lods
xor
lahf
jge
orb
adcl
subb
push
dec
push
fs
mov
call
cwtl
cli
mov
mov
cmp
xchg
mov
aad
mov
push
test
cmc
aam
or
adc
fsub
popa
push
or
out
inc
movsbl
and
inc
imul
in
sbb
push
imul
dec
mov
popf
outsl
sub
aam
jns
aaa
mov
sub
push
mov
sub
push
iret
mov
ja
outsb
sbb
dec
lea
cmpl
fnstsw
pop
setae
jmp
ret
repz
mov
jnp
and
dec
stos
sub
mov
sub
pusha
jmp
fildll
nop
cmc
mov
sub
sbb
les
mov
pop
dec
push
into
dec
mov
jns
ss
stos
shl
fidivrs
in
dec
push
xchg
push
sub
jl
pusha
ja
xchg
and
sub
sub
roll
sti
jg
mov
dec
sub
cs
mov
lods
scas
in
ljmp
call
lea
push
sub
aas
xchg
pop
shrl
iret
push
mov
pop
jno
out
daa
jg
movsb
mov
push
leave
shrl
stos
dec
cwtl
xor
xchg
xchg
dec
loope
shlb
jnp
leave
in
ljmp
xchg
jl
sub
pop
or
jp
lahf
pushf
faddl
les
mov
lods
push
movsb
and
rclb
cmp
dec
nop
imul
add
push
inc
scas
jmp
inc
and
mov
cmc
and
lahf
cmpl
das
jle
rorl
sbb
adcb
sub
adc
push
data16
negl
push
or
inc
cmpsb
aad
or
cmp
cmpsl
ja
aam
insl
andl
sbb
or
xchg
sbb
test
jecxz
mov
mov
add
pop
repnz
pop
js
jb
inc
cld
test
dec
daa
adc
sub
pop
movsl
pop
insl
lret
mov
and
arpl
pop
lods
jo
lret
mov
xchg
mov
dec
das
out
mov
mov
and
dec
mov
aas
push
sub
dec
mov
jge
js
xchg
rol
hlt
nop
push
test
mov
lahf
mov
xor
lea
xlat
xor
fwait
ret
call
pop
pop
loopne
inc
fisttps
jge
rcrl
push
leave
ret
lods
ret
mov
jne
int
in
sbb
push
rcrl
mov
mov
fisttpll
in
sbb
imul
mov
fstpl
cmc
sub
int
pusha
push
lahf
pushf
pushf
divb
or
jo
lcall
dec
sbb
inc
sbb
adc
nop
fs
and
xor
arpl
int
inc
dec
loop
dec
test
cmpsl
push
add
inc
movsl
sbb
mov
adc
das
xchg
pop
pop
pop
jp
and
cli
aas
xchg
lods
pushf
lea
outsl
push
dec
add
or
pop
lahf
jae
pop
jae
pop
mov
adc
push
iret
pop
dec
xor
lds
inc
dec
sub
mov
pop
scas
xchg
pop
inc
cmp
xchg
mov
fildll
imul
in
lock
add
call
mov
and
stc
push
insb
sub
and
add
add
pop
roll
xchg
and
daa
sub
ds
adc
popa
mov
das
insl
ffree
fdiv
push
cltd
add
dec
cmp
cs
sahf
xchg
dec
or
lahf
sbb
scas
cmp
adcb
in
push
push
aaa
jo
pop
push
in
sbb
cmpb
out
xchg
mov
in
xor
xchg
inc
subb
lods
mov
xor
xor
lods
cltd
dec
fisttpl
sbb
dec
mov
push
xchg
adc
mov
out
lock
jns
mov
popa
mov
cli
inc
jmp
xchg
imul
cli
push
int3
dec
push
jmp
sbb
arpl
xor
add
or
loopne
mov
jbe
or
jecxz
out
lods
adc
out
lods
or
outsb
mov
sbb
mov
bound
rolb
or
in
rclb
rorl
inc
add
leave
dec
mov
and
std
xor
mov
movzwl
sbb
lret
adc
sbb
xor
mov
mov
push
test
fstpt
testl
sbb
inc
xor
add
insb
les
icebp
lahf
in
xor
sub
bound
pop
add
aam
dec
lock
and
xchg
in
add
addb
shlb
ret
add
adc
jge
nop
jns
push
loope
lcall
dec
lea
jbe
pop
cmpsb
insb
popf
and
pusha
stos
movsb
arpl
mov
addr16
test
fistpl
lcall
pop
dec
lea
hlt
sub
outsb
and
idivl
sarl
faddl
pop
xchg
mov
mov
inc
and
jp
xor
popa
lret
inc
lcall
or
or
adcb
mov
sbb
push
fisubs
pop
out
pusha
aad
sbbb
inc
ffree
in
jg
sub
mov
nop
mov
mov
das
mulb
lcall
and
cmpsb
jnp
xchg
cwtl
or
dec
ficompl
shl
je
jns
jmp
inc
push
pop
imul
xchg
sub
jl
dec
mov
out
xor
lods
pop
mov
sti
push
hlt
rclb
in
or
adcl
add
cld
xchg
lcall
int3
dec
and
lock
sub
adc
or
jnp
das
andb
jno
inc
iret
mov
jae
cld
xor
add
xchg
ret
in
imul
xor
push
jecxz
xchg
or
es
mov
rcr
mov
nop
mov
or
jecxz
push
jno
or
push
dec
push
cmc
pop
xor
lock
add
cwtl
ljmp
fstpl
sub
push
in
lock
mov
add
scas
fsts
fs
mov
push
shl
ss
das
test
imul
ret
arpl
incb
or
inc
out
js
xor
sub
or
sbb
or
mov
cmpsb
nop
pop
cli
xor
xchg
fldenv
push
push
stc
jno
push
out
jle
mov
imul
mov
mov
std
jo
and
push
cmp
dec
stc
sub
or
pop
dec
inc
les
mov
add
push
mul
adc
jg
adc
mov
jbe
adc
xchg
push
mov
subb
stc
sbb
repnz
repz
aaa
xchg
shl
fs
and
push
sbbl
popa
bound
sub
loope
add
bound
jo
adc
lds
fwait
jg
test
xor
adc
int
popa
mov
mov
movsl
ljmp
cmp
clc
jno
and
mov
pop
dec
push
xor
popf
js
fnstenv
jae
aam
push
and
insb
xlat
jno
movsl
test
inc
push
fstl
cld
outsb
xchg
roll
scas
dec
xchg
jne
inc
and
cli
and
mov
gs
xchg
xlat
rcrl
nop
iret
stos
ret
adc
or
adc
gs
and
push
or
into
repnz
outsb
mov
loop
outsl
sbb
aam
mov
mov
dec
lea
lods
jecxz
lods
jmp
adc
xchg
das
loop
insl
dec
in
lea
mov
rolb
bnd
dec
adc
cmpsl
call
pop
cmp
sub
sub
out
push
cmp
cmp
jg
andb
push
fstps
and
mov
jo
bound
push
imul
enter
mov
aad
xor
out
jne
fwait
adc
bound
mov
pop
adcl
lods
cltd
nop
adc
mov
mov
dec
js
shlb
jns
mov
jns
mov
std
add
jp
ficomps
add
sbb
sub
fucomi
jp
std
add
mov
std
pop
push
push
mov
shll
push
pop
jl
mov
sti
mov
xchg
lcall
mov
cmp
xchg
aad
jp
leave
lock
cmpsl
xchg
inc
xor
xchg
adc
push
jne
test
and
sbb
orb
fwait
mov
ljmp
pop
roll
cmc
rorb
aas
mov
cmpsl
xchg
or
push
icebp
scas
xchg
imul
xchg
inc
jns
test
push
pop
std
arpl
sahf
jmp
insb
mov
xchg
jge
sub
push
subb
xor
inc
ljmp
xchg
or
es
popf
fsubs
clc
call
jle
popf
test
inc
stc
iret
ds
insl
inc
inc
and
inc
jbe
inc
mov
pusha
popf
pop
ljmp
pop
notb
xor
pop
push
fidivs
lods
hlt
jecxz
imul
aas
and
fimull
or
inc
xchg
or
mov
and
sub
pop
cli
cmpsl
ss
xchg
jle
sub
and
or
loop
push
dec
push
cmpb
repz
or
in
stos
mov
mov
lret
ss
jg
jno
test
sbbb
mov
mov
popa
xor
xchg
add
in
lods
sub
shlb
dec
jp
negl
cli
imul
aam
and
aad
mov
or
cmp
jno
orl
push
insl
add
jg
push
mov
sbb
sarl
pop
mov
jb
lcall
fcoml
and
rcrb
sub
scas
add
pop
push
cld
cwtl
mov
xchg
xor
pusha
jl
shlb
inc
push
das
inc
xor
mov
mov
cmc
fcomp
dec
or
push
or
adc
sub
fnsave
push
mov
pop
and
mov
cli
jecxz
or
cmp
dec
add
enter
fisttpll
repz
loop
mov
xor
fiadds
push
mov
jg
add
dec
arpl
out
dec
addb
insb
test
lret
popf
pushf
std
lahf
in
mov
xorb
pop
push
mov
loop
xor
loop
sbb
roll
out
adcl
sbb
mov
mov
fwait
inc
outsl
xchg
lods
sbbl
or
mov
loopne
xchg
jno
aaa
mov
dec
adc
es
scas
or
std
fisttps
pop
jle
mov
sahf
pop
pop
adc
xchg
call
lock
enter
cmp
lea
rolb
pop
xor
jno
lods
add
pop
insb
or
movsb
push
std
lods
cmpl
sub
jg
fcmovne
jmp
pop
jle
lcall
cmp
sahf
or
inc
sarb
dec
and
stos
lods
shrb
fildl
mov
loope
data16
popa
mul
inc
pop
cmpsb
jnp
fimull
cwtl
xchg
dec
lods
mov
orb
push
jge
or
xor
push
les
jne
add
loopne
mov
mov
mov
xor
sub
jne
jg
es
movsl
and
insb
jle
cmp
loope
sbb
es
movsb
hlt
ret
push
and
rorb
rcrb
xor
mov
inc
push
dec
popa
jg
es
mov
aam
roll
insb
fdivrs
add
and
test
mov
stc
fisubs
lret
mov
mov
dec
into
icebp
inc
lret
cltd
xchg
je
enter
dec
and
dec
mov
pop
sbb
cli
add
fldcw
lds
xchg
cld
cltd
lock
cmc
xor
push
pop
nop
push
lds
jmp
sti
mov
negb
notl
cmpsl
dec
add
das
sbb
pop
sbbl
data16
cli
bound
rclb
inc
enter
repz
pop
in
or
adcl
in
mov
lods
add
icebp
xchg
test
in
push
in
test
inc
out
mov
lods
fs
enter
ret
mov
dec
clc
pushf
and
adc
or
adc
xor
aam
lea
lds
xchg
push
dec
cli
aas
sti
pop
or
push
popf
das
mov
xorw
fcom
xor
adc
jae
mov
imul
add
icebp
push
lahf
aad
shll
arpl
stc
in
mov
add
mov
and
mov
pop
fs
and
test
xlat
test
pop
ret
push
test
in
mov
rcll
mov
mov
daa
ror
outsb
idivb
stos
int
inc
rorl
fwait
push
xchg
mov
pop
push
inc
repz
jmp
neg
outsl
aaa
xchg
xor
push
adc
xor
leave
lea
in
jmp
pop
fiadds
lock
mov
xor
call
fcoml
mov
and
popa
sub
cld
jge
fidivrl
scas
out
cmpl
dec
mov
gs
push
es
pop
stc
into
pop
and
cmp
sbbl
stos
xor
mov
fldenv
mov
gs
stos
pop
push
sbb
mov
test
imul
addr16
dec
mov
ss
out
adc
lret
inc
notl
or
pop
out
xchg
cmpsb
aad
mov
jmp
jne
inc
mov
int
push
dec
pop
lods
int3
xchg
mov
dec
lcall
int3
adc
sti
xchg
in
xor
dec
lods
mov
cmp
notl
jno
jle
add
push
aaa
popa
ret
ret
cmp
lods
sub
push
adc
cld
ljmp
push
pop
cs
sarl
or
popf
aam
sub
jne
sahf
lcall
insb
cltd
mov
jle
inc
mov
push
cmp
jne
fdivp
aad
test
ja
mov
mov
psubsw
mov
add
or
jl
mov
dec
xchg
add
jg
sti
or
cmovo
ret
mov
rcr
out
fldt
fsubl
and
cmp
pop
lret
std
add
pop
popf
scas
mov
dec
ret
pop
aam
jmp
cmp
sbb
mov
lahf
enter
js
scas
jb
lahf
add
mov
stos
clc
add
adc
das
movsl
xor
xor
sbbl
dec
push
xchg
dec
fistl
stos
test
sbb
mov
sub
rcrl
push
push
push
cmc
stos
jecxz
sbb
scas
repz
add
mov
add
sti
movsl
pop
mov
xchg
mov
sub
cs
mov
aaa
jmp
mov
bswap
int3
or
xchg
popf
lcall
dec
es
icebp
addb
mov
les
mov
mov
cltd
cmp
jle
jp
gs
pop
sbb
cwtl
jge
iret
cld
add
dec
inc
sti
in
popa
pushf
jmp
xchg
je
jns
lahf
add
ret
rcr
pop
xchg
mov
cmpsl
gs
fists
test
mov
jg
mov
aad
mov
dec
jne
xchg
cmpsb
movsl
pop
sarl
or
int
adc
roll
out
imul
push
ret
lods
sbb
sub
jne
xchg
enter
push
xor
loop
daa
cmc
repnz
cmc
xchg
dec
mov
or
mov
mov
or
cmp
pop
pop
adc
rcl
decl
or
inc
xchg
outsb
pop
mov
iret
test
xlat
mov
xchg
push
lds
out
daa
addr16
imul
dec
cmp
test
xchg
rcll
add
test
jne
dec
mov
cltd
inc
mov
aad
mov
fs
lcall
add
dec
cli
scas
push
jle
mov
cmp
ljmp
daa
nop
loope
xchg
inc
not
faddl
cmpsl
into
push
lods
repz
inc
sbb
sarl
and
std
push
aam
ljmp
jg
stc
jne
cmpsb
cmp
xor
call
jnp
pop
add
shrb
out
dec
xor
adc
inc
loop
jp
cmpsl
mov
mov
arpl
fdivr
loopne
insl
scas
imul
mov
out
fisubrl
ss
shll
pushf
push
aas
filds
xor
test
sti
xchg
mov
ficomps
xchg
and
mov
sbb
aam
andl
daa
push
push
rolb
fnstenv
movsl
pop
shll
shlb
imul
testb
adc
call
jmp
xchg
loopne
shl
cmpsl
test
adc
adc
or
int
rcl
out
cmp
inc
jg
scas
add
pop
and
jae
dec
cmpb
push
mov
rorl
cmpl
xor
jle
test
subl
mov
dec
push
dec
orb
insb
mov
xchg
xchg
les
rolb
mov
jecxz
iret
fisttpll
ds
stos
add
decb
push
mov
adc
js
xor
dec
or
loope
lahf
mov
icebp
sbb
fsubrs
mov
enter
loopne
mov
sub
dec
cmc
dec
fidivrl
in
xor
add
stc
sbb
orl
sbb
jne
adc
fdivrl
or
push
fbstp
push
sbb
not
push
shrl
mov
test
es
out
roll
call
lahf
inc
cmp
push
insl
jmp
push
pop
cmp
pop
sahf
mov
and
insl
jns
lods
in
movsl
adc
shll
aaa
leave
cmovs
add
push
aad
mov
pop
loopne
subl
adc
je
adc
flds
add
mov
pop
mov
es
aad
push
jno
cld
pop
xchg
repz
pop
xchg
add
leave
lea
push
cmp
mov
mov
push
inc
aas
jo
sti
jmp
pop
aad
mov
fdivs
sub
cs
pop
data16
push
movsl
cltd
mov
into
mov
sub
mov
sbb
dec
nop
mulb
popf
sbb
mov
outsb
lods
mov
lods
push
shl
adc
frstor
mov
test
or
xor
mov
adc
test
jae
mov
std
mov
push
sub
and
sti
xchg
ficoms
sub
cmpb
or
pop
movsl
push
in
mov
inc
mov
mov
cmp
adc
sahf
inc
add
pop
add
or
flds
mov
xchg
xchg
sbb
sub
inc
cltd
sbb
out
aad
mov
lret
ds
mov
inc
data16
push
xchg
jne
jmp
jle
sbb
ss
clc
cmc
daa
adc
cmp
fxch
lock
enter
dec
loope
enter
xchg
push
dec
pop
pushf
pushf
push
mov
insb
add
push
imul
and
pop
int3
add
fmull
add
sbb
xchg
push
xchg
xchg
cmp
shlb
mov
lods
out
popaw
in
dec
out
mov
inc
inc
mov
fwait
push
inc
mov
or
aas
lods
mov
push
imul
add
sbb
outsl
push
vpperm
in
rep
inc
scas
bt
jne
dec
add
fstps
jg
shll
push
jb
pop
nop
scas
pop
adc
sar
cmc
icebp
jo
mov
mov
fwait
enter
inc
movsl
mov
push
sbb
jmp
rolb
jge
daa
jne
test
leave
in
dec
push
and
inc
xchg
dec
dec
fildll
adcl
lret
xchg
push
test
jae
ret
pop
mov
mov
call
cmpsl
sub
mov
mov
pop
xor
lret
vpmaddwd
loope
ja
pop
or
icebp
cmpsb
pop
and
pop
sbb
aaa
lock
mov
dec
mov
jne
mov
ljmp
and
fwait
test
pushf
pop
and
sbb
or
add
shlb
stos
lock
rcrb
push
xchg
mov
jns
sti
push
std
divb
add
pop
insb
test
sbb
mov
push
call
sub
jae
mov
repz
jge
imul
mov
mov
jo
sub
insl
adc
mov
fsubp
lahf
iret
xor
sti
es
cmp
sub
push
push
imul
inc
inc
xor
xor
testb
test
test
adcl
mov
shll
testb
imul
pop
pop
jmp
sub
xchg
cmp
test
cmp
stc
cmc
test
or
sub
lds
pushf
adc
xchg
loopne
mov
cmp
loopne
out
call
cmp
fisubrs
add
frndint
cmp
cmpb
mov
lds
std
in
pop
les
sub
adc
outsl
push
addr16
add
mov
fistpl
sub
or
push
loopne
sbb
pusha
inc
sbb
xor
mov
wrmsr
lds
xor
xor
adc
cli
mov
mov
push
in
outsl
sub
lahf
add
mov
pop
dec
mov
jo
or
or
pop
bound
cmp
fnstcw
or
fiadds
push
lret
sbb
cwtl
stos
aam
add
nop
int
test
mov
in
cmp
push
add
or
sub
iret
lret
pusha
or
adc
add
fcmovnbe
mov
shrl
aas
pop
data16
jbe
add
outsb
sub
out
sub
dec
imul
mov
sbb
cmp
in
dec
shrb
sbb
mov
jg
imul
cmp
pop
jo
out
imul
sbb
adc
jae
jp
rclb
or
mov
sub
imul
push
mov
icebp
jge
aam
jp
outsb
stos
pmaddwd
orl
lret
adc
jmp
lds
stos
pop
sub
jle
xor
mov
xchg
dec
divl
gs
insl
jmp
add
leave
sbb
sbb
aas
lods
pop
paddd
kmovw
or
xor
outsb
jne
sub
and
or
jge
rorl
mov
iret
cmp
in
push
mov
scas
xor
jmp
stos
loopne
adcb
cmp
rcll
pop
adc
stc
inc
mov
loop
mov
addb
jle
dec
insl
mov
js
stc
jno
scas
jbe
out
dec
insb
sbb
cltd
fistps
mov
pop
sbb
enter
cmpsl
adc
imul
and
fists
push
mov
ljmp
jne
adc
push
pop
dec
fidivrl
sub
xchg
push
xchg
stos
cmpsb
cmp
xchg
pop
xchg
sar
std
lahf
xchg
cmp
jmp
push
mov
mov
push
xor
fmul
test
or
mov
rep
sbb
inc
mov
or
and
lretw
lret
pusha
mov
push
loope
or
add
movsl
pop
jne
xor
aad
xchg
pop
lahf
and
jne
and
stos
cmc
xchg
cmpsb
stos
repnz
or
sti
pop
sarb
inc
xlat
out
rclb
enter
mov
cmp
mov
leave
xor
ss
add
jl
mov
mov
jo
sub
push
push
lods
sbb
lock
inc
cmp
pushf
or
sub
movsl
insl
and
lret
sub
inc
mov
call
push
sbb
inc
ret
cmc
mov
mov
movswl
mov
loop
hlt
test
pusha
loop
mov
push
pop
sub
cli
out
lret
test
scas
jbe
test
inc
inc
repz
iret
cmp
lods
gs
adcl
dec
fs
pop
fistl
xor
xor
push
push
inc
into
inc
push
outsb
mov
cmpsb
push
imul
imul
fsubs
add
or
mov
call
dec
push
insl
mov
mov
mov
inc
and
xor
scas
add
sub
pop
jp
jmp
and
mov
out
xchg
mov
mov
roll
js
shll
and
shll
std
fs
jle
repz
fcmovb
cs
lahf
mov
jb
not
adc
lea
xchg
mov
cmc
xchg
insb
aas
sub
aas
test
xor
push
fsubrs
test
scas
or
mov
fldcw
subl
lods
xor
inc
lds
and
push
ljmp
inc
or
inc
adc
dec
dec
popa
cwtl
mov
hlt
ret
xor
mov
pop
jle
sbb
dec
orl
mov
lret
arpl
xchg
out
ljmp
hlt
push
cmp
push
nop
pop
loop
fisttpl
mov
push
jecxz
mov
sub
sbb
scas
xchg
js
popa
lods
lea
push
loopne
int3
movsl
mov
outsl
inc
in
out
dec
adc
loopne
sbb
add
cmp
xchg
lcall
jno
mov
lret
or
jne
mov
or
loope
call
push
xchg
movsl
out
mov
xor
jecxz
push
icebp
dec
or
xor
mov
xchg
sub
lods
inc
outsb
and
pop
xor
sti
jecxz
nop
pop
sub
jle
js
pop
les
sbb
jne
or
ljmp
mov
sbb
ficoms
lea
fwait
sbb
or
data16
les
test
cli
cmc
xor
push
mov
or
xchg
push
xlat
gs
xor
sub
fs
jmp
dec
iret
test
mov
in
popa
int
inc
jg
cmp
lods
mov
in
je
xor
loope
or
mov
ja
or
pop
lods
cmc
mov
pop
xchg
lods
mov
xor
xchg
ja
pop
and
add
jne
cmp
sbb
in
out
add
mov
dec
mov
mov
or
mov
inc
mov
shrl
inc
scas
adc
icebp
loope
xchg
cmp
fwait
adc
adc
add
lret
dec
mov
xor
jo
pop
jmp
add
xor
xor
xor
test
pop
push
mov
push
in
and
jno
sbb
test
cs
lods
cmp
int3
daa
aad
mov
and
dec
push
push
fbstp
aaa
xor
jmp
popf
sbb
les
js,pn
jecxz
mov
push
xchg
inc
cmp
icebp
sub
mov
jg
testl
pop
add
leave
in
mov
inc
or
xchg
es
idivb
push
push
mov
int3
insb
push
cltd
pop
ret
inc
mov
push
cld
iret
int3
jo
xor
mov
jo
in
lret
xchg
mov
daa
dec
sarl
jecxz
or
jo
call
rcrb
lret
inc
ds
push
or
movsb
add
and
dec
pop
fisubrs
pop
in
pop
popf
and
pop
xor
push
insl
repz
repnz
xchg
push
loope
and
jl
inc
aaa
cmp
stc
mov
loopne
xchg
xor
inc
fadd
dec
loope
and
inc
and
in
xchg
pop
cmp
lock
in
mov
cmc
hlt
movsl
das
fimull
dec
inc
shll
sahf
adc
sub
xchg
mov
inc
mov
mov
cmp
mov
and
add
pop
ja
adc
andb
cs
adc
add
addr16
push
adc
les
inc
mov
mov
rol
in
imul
push
sbb
dec
enter
dec
xorb
std
lods
out
lret
adc
js
fs
push
sub
jl
mov
icebp
cmp
inc
inc
mov
adc
sbb
or
pop
mov
mov
lahf
wbinvd
sub
jbe
sbb
out
dec
adc
or
push
or
imul
pop
popa
jmp
add
jns
push
imul
loop
pop
sub
imul
mov
inc
shll
je
and
ret
push
sbb
or
jb
xchg
aad
mov
rorl
pop
dec
movsb
mov
inc
insl
out
pop
mov
mov
test
cmc
xor
ljmp
pop
or
ljmp
and
or
outsl
mov
je
fsub
stc
daa
jmp
jl
das
mov
inc
inc
jns
sbbl
mov
mov
into
xchg
jp
xchg
jmp
adc
mov
mov
cmp
jmp
movsl
test
add
jno
xor
mov
mov
or
cld
push
cmp
adc
sbb
jp
pop
jns
jae
xor
es
xchg
stc
sbbb
xchg
and
test
inc
jns
sbb
nop
sahf
popa
and
roll
movsl
sbb
and
add
bswap
insl
repnz
mov
jge
lcall
data16
xlat
enter
mov
in
insb
cs
mov
mov
pop
jle
dec
mov
push
cmp
dec
sbb
mov
icebp
flds
cmp
pop
in
pop
repz
stos
pop
mov
xchg
cmp
rcrb
lods
scas
sbb
xchg
jns
in
addr16
jg
xchg
mov
jmp
mov
stc
imul
shlb
pop
or
sub
fwait
add
bnd
pop
sub
test
dec
mov
loope
repnz
aad
int
fnstsw
lds
mov
popa
lds
mov
insl
lock
bound
mov
dec
inc
pop
and
mov
outsl
mov
sahf
and
imul
pop
xchg
push
or
add
xor
popa
ds
cmpsb
mov
push
pop
cs
frstor
add
mov
das
mov
ficoms
sub
fidivrs
dec
das
aas
arpl
cs
idivb
and
add
cmp
xor
inc
cmpsb
pop
mov
fsub
clc
or
es
adc
mov
popa
inc
data16
adcl
sbb
pushf
jno
inc
jge
jns
sub
out
lea
pop
dec
in
xchg
xchg
xor
popf
ja
mov
aas
push
xchg
add
dec
ret
mov
out
aam
mov
shl
cmpsl
int
mov
mov
pop
push
jo
adc
in
xchg
push
rol
mov
push
int
cld
cmp
push
clc
or
pusha
int
stos
mov
test
jne
add
dec
sarl
xlat
iret
jb
ljmp
js
out
xorb
hlt
fimull
mov
arpl
shrb
lds
fnstsw
mov
call
pop
or
mov
add
mov
inc
push
fisubrs
add
orps
ds
data16
push
jae
mov
js
or
push
adc
or
movsb
stos
jle
or
pusha
jnp
jg
dec
outsl
shlb
filds
cmp
xor
stos
dec
ds
mov
pop
daa
pop
xor
dec
mov
ret
cmp
pusha
lcall
xor
aaa
mov
sarb
es
gs
ds
or
test
mov
add
jns
outsb
enter
ljmp
repz
inc
lcall
ret
fdivrs
pop
jg
adc
sub
imul
jb
adc
xlat
test
or
in
adc
ja
enter
cs
cmp
sub
jecxz
cmpsl
inc
popw
dec
and
imul
or
in
in
jmp
or
push
sub
lods
push
insb
dec
int
dec
mov
ficoml
into
pop
in
mov
push
add
and
or
incb
insl
lret
stos
shl
pop
jmp
scas
mov
outsb
cwtl
punpcklbw
push
mov
cmp
dec
push
adc
xor
push
call
cmpsl
scas
sub
fldcw
clc
out
setbe
cwtl
cli
test
fcmovnu
push
sti
pop
mov
imul
ret
mov
fs
dec
sub
fdivp
xor
xor
imul
mov
daa
add
xchg
and
movsl
mov
and
nop
jbe
xlat
pop
icebp
mov
mov
mov
fisubrs
push
push
shl
leave
xchg
jmp
xchg
dec
dec
add
jno
pushf
cwtl
leave
xchg
pop
insl
xor
xchg
add
pusha
add
mov
add
pop
out
gs
data16
push
sti
adcb
dec
call
mov
outsl
outsl
nop
divl
pop
cmpsl
mov
mov
xchg
sbb
je
repnz
lahf
sub
cld
push
and
lock
cmp
add
sbb
pop
inc
aam
out
jne
jb
insb
andb
lahf
arpl
in
dec
mov
cld
push
lahf
or
enter
repz
repnz
sti
add
jl
testb
xor
jnp
imul
lret
mov
ja
or
inc
mov
jnp
in
cli
or
push
sub
or
into
out
dec
push
cmc
xchg
ljmp
dec
addb
daa
pop
out
lods
les
sbb
imul
movsl
jne
mov
movsb
sti
xchg
lcall
mov
jecxz
inc
in
stos
adc
xchg
fadds
xor
addr16
pushf
and
sub
outsb
jp
pop
jle,pt
lcall
jne
es
repnz
icebp
push
and
xchg
jmp
jp
push
insb
sbb
and
push
adc
cmp
mov
mov
mov
push
imul
lds
vcvtss2sd
dec
push
scas
dec
jno
jnp
out
push
std
push
xchg
jb
sub
push
mov
add
stos
jo
xchg
out
ds
cmp
stc
push
pushf
pushf
jle
lods
cmpsl
dec
mov
fs
jnp
stos
jae
mov
or
and
cmovnp
xor
cltd
stos
cmpsb
loop
xor
dec
leave
adc
and
roll
in
dec
in
out
aaa
jp
xchg
push
push
jo
in
mov
xchg
insb
arpl
cmc
aaa
push
fidivrl
jl
and
lods
mov
xchg
jae
mov
jbe
or
mov
push
xchg
lea
xchg
jmp
cmp
out
sbb
inc
add
cmp
gs
add
push
in
or
icebp
xor
mov
sbb
outsb
stc
pop
xchg
int
in
dec
daa
jo
jnp
and
push
mov
dec
pop
mov
mov
fcoml
cwtl
arpl
dec
ret
mov
outsb
mov
add
mov
cmp
mov
jb
stos
pop
imul
loope
pop
jb
lds
push
test
pop
inc
push
push
ss
and
sub
nop
mov
jno
int
mov
mov
lods
jae
jle
jmp
and
inc
xor
adc
aaa
nopl
mov
add
add
shlb
mov
mov
xor
les
adc
adc
xchg
out
cli
stc
test
xchg
pop
pop
pop
es
test
add
imul
mov
dec
sbb
mov
and
mov
or
ljmp
cli
mov
sbb
inc
sbb
lret
data16
aas
incb
stos
mov
rorl
es
outsb
int3
outsb
mov
sbb
scas
jle
pusha
or
pop
adc
pusha
and
cltd
into
into
loopne
xchg
sub
cmpsb
pop
mov
test
cmp
sub
or
push
popa
push
mov
pop
data16
sbb
outsl
js
les
mov
inc
dec
js
cli
jmp
addr16
sarb
push
sahf
repnz
add
js
stos
and
test
add
mov
jge
cmp
in
mov
bound
mov
jno
std
push
add
outsb
xchg
or
dec
mov
jle
outsl
ljmp
sti
inc
mov
cmp
and
or
jno
add
adc
xor
dec
pop
rorb
xchg
sbb
pop
mov
les
out
lcall
fs
insl
addr16
loope
das
out
int
xchg
jne
test
cmp
aas
jo
mov
pop
add
fstl
mov
push
mov
movsb
sub
leave
dec
std
out
inc
jnp
lods
fldl
ja
in
addr16
xlat
std
subb
push
lock
jns
adc
cmp
or
ljmp
push
das
push
xor
dec
or
xor
xor
push
pop
es
adcl
stos
mov
lahf
bound
insl
loop
mov
adc
int3
pusha
mov
push
test
fildll
les
aaa
das
mov
add
gs
mov
jg
lcall
xchg
jmp
sub
je
test
xorl
xchg
mov
jmp
cwtl
cmp
pop
sbbl
je
push
movsb
mov
xchg
push
dec
call
pusha
xchg
hlt
sub
mov
xchg
or
call
in
dec
std
nop
cmp
rcrl
dec
sub
cmp
add
mov
and
sub
cld
cmp
xchg
sub
sbb
mov
lods
push
dec
stc
das
outsl
and
or
xor
xor
and
xor
std
cmp
out
sbb
nop
mov
fadd
sarl
fiaddl
add
std
jecxz
pop
mov
dec
addr16
push
sbb
inc
xor
xchg
push
lock
sub
ja
sbb
call
movsl
mov
test
dec
mov
call
xor
cmpsb
xchg
call
inc
mov
aam
jl
mov
aad
push
cwtl
dec
sti
inc
push
or
or
inc
rol
xchg
push
das
fwait
je
xor
sub
fdivrs
dec
jecxz
les
jle
inc
fcoml
icebp
aad
dec
fsubrl
pop
mov
inc
mov
mov
lret
xchg
jae
add
mov
in
and
pop
dec
jge
inc
js
lea
inc
les
stos
and
clc
lods
push
and
push
xchg
aad
pop
push
dec
mov
cmp
dec
scas
xor
mov
push
movsl
xor
push
out
mov
iret
out
lcall
test
inc
mov
and
aam
pop
jb
sub
cmp
mov
xor
push
cmpl
imul
shlb
pop
outsl
or
mov
sub
lds
xchg
inc
cmp
sbb
ss
jecxz
inc
add
sbb
sub
popa
adc
and
stos
insl
jg
jmp
and
push
sub
adc
mov
push
push
or
clc
bound
jg
push
mov
aas
test
mov
test
mov
fdivr
sub
inc
lock
pmovmskb
xchg
lret
es
pop
pop
fildl
iret
sahf
inc
mov
adc
xor
push
das
jge
lock
packuswb
inc
xchg
dec
test
out
dec
out
sub
push
mov
fimull
jbe
insb
xchg
lret
xor
loopne
and
cmp
sbb
lods
inc
dec
inc
sub
cmp
push
adc
pusha
dec
movsl
lods
jecxz
ljmp
or
add
mov
push
lods
jns
add
add
inc
testb
cwtl
dec
pop
mov
outsl
pop
cmp
push
mulb
ror
rolb
rclb
dec
jle
movsl
xor
test
inc
add
add
and
or
adc
mov
xchg
dec
not
loope
push
mov
daa
pushf
mov
ss
inc
rorb
sub
aas
mov
mov
jbe
ljmp
adc
test
and
bound
in
and
mov
scas
mov
lods
pop
pop
repz
sub
adc
cld
mov
sbb
sbb
or
call
fcoml
outsb
push
out
and
fwait
movsl
pop
adcb
in
cmp
xchg
insb
gs
ljmp
shll
push
rcrb
mov
notl
stos
sbb
sbbb
clc
pop
pop
push
pop
movsl
mov
jb
inc
pop
enter
daa
das
adc
mov
push
cld
and
inc
ficoms
jns
dec
cs
cwtl
popf
pop
push
jno
int
xor
cwtl
xor
pop
das
int
out
mov
mov
push
popa
push
adc
sbb
xor
or
cmc
add
inc
bound
push
push
aaa
jo
ss
addr16
pusha
sbb
jecxz
imul
out
push
repnz
or
scas
mov
or
in
xor
jb
int3
scas
divl
repz
pop
jg
mulb
mov
daa
push
enter
data16
and
mov
push
hlt
outsl
cmc
clc
sub
loope
loop
push
dec
mov
sbb
xor
cs
add
or
movsb
mov
mov
mov
dec
dec
aas
xchg
shll
arpl
cmp
aad
inc
sub
push
lcall
mov
imul
fisttps
sbb
xchg
jb
cmpl
add
mov
sub
aam
shll
ret
xor
adc
mov
ret
sbb
loope
mov
mov
push
test
dec
dec
dec
add
movsl
fisubrs
out
jnp
mov
and
outsb
test
mov
addl
sbb
ljmp
xor
or
jge
cmp
in
pop
push
cld
jae
lds
popf
mov
sahf
fistpl
push
fistpl
mov
dec
jmp
repz
repz
stos
out
lds
jle
and
int3
mov
xlat
mov
arpl
fdivs
pop
iret
cli
cltd
jae
out
aas
pop
jge
ret
push
and
lret
ret
xor
pop
out
in
sub
sbb
sub
jmp
insl
sub
sbb
add
out
repz
mov
fisttpll
clc
std
les
scas
mov
jmp
insl
in
mov
inc
pop
clc
out
inc
mov
jo
repnz
imul
adc
lret
cs
mov
test
test
shll
cmc
mov
in
or
test
jo
mov
push
mov
lcall
lods
jmp
push
xchg
std
sbb
adc
test
outsl
mov
dec
xlat
jo
inc
push
xlat
repnz
mov
jle
js
data16
and
and
setge
sub
mov
inc
pop
or
add
pop
in
adc
rorb
mov
mov
pop
xor
mov
sbb
xchg
xchg
and
push
dec
stos
cmovp
add
push
jp
std
dec
jo
mov
jo
testl
jo
popf
or
xor
xchg
and
or
sbb
lahf
adc
iret
jp
mov
in
jle
movsb
xor
clc
enter
and
daa
mov
rorl
mov
sub
movsb
nop
js
inc
pop
popa
push
xchg
test
mov
bnd
fistpl
sbb
fst
test
inc
pop
loopne
pop
into
xchg
cmp
mov
add
cld
lret
rol
cmp
mov
out
ljmp
or
hlt
push
and
cmc
movsl
jbe
jp
sub
test
mov
and
fs
aam
ret
dec
mov
sub
subl
daa
mov
xchg
std
fimull
fistpl
out
movsb
mov
repz
movsl
cmp
out
test
xchg
jae
sub
popa
test
and
adc
or
outsb
ret
pop
and
push
xchg
in
daa
push
mov
sub
mov
lahf
and
shlb
roll
inc
or
repnz
popf
pop
pop
pop
pop
cmpsl
xchg
out
inc
fnsave
xchg
repz
fwait
push
inc
xor
pop
dec
jbe
jg
adc
and
xchg
dec
cmp
pop
iret
jns
pop
in
movsb
pushf
fwait
aaa
daa
pop
cmp
int
or
push
cmp
int3
cmp
mov
xor
sub
fs
xchg
mov
inc
je
iret
in
int3
repnz
lds
jmp
lcall
stos
sahf
pop
aaa
jmp
push
mov
testl
or
loop
sbb
add
imul
add
pop
adc
addr16
mov
xor
sti
aad
dec
pop
mov
fiadds
mov
clc
inc
jmp
dec
mov
test
jl
dec
sarl
sbb
pop
test
xchg
or
idivl
shrl
fs
mov
stc
inc
ds
shlb
jecxz
in
int
add
popa
adc
ret
xlat
adc
dec
sub
js
sub
xchg
mov
and
test
ret
js
bound
push
sbb
mov
call
and
repnz
pop
ss
sub
mov
fwait
sbb
rorl
push
mov
mov
xchg
in
xor
push
stc
and
ret
call
lea
je
lods
dec
mov
mov
rorb
ret
lret
dec
mov
dec
outsb
inc
rclb
and
jno
ljmp
jecxz
dec
mov
and
sahf
pop
mov
pop
mov
std
repnz
mov
adc
push
dec
insl
in
push
add
adc
jne
and
mov
and
cld
pop
pop
flds
cli
mov
lcall
mov
jnp
jle
sbb
jbe
lock
xlat
scas
outsb
nop
lds
jmp
dec
fidivrl
mov
cltd
int
cvtpi2ps
out
adc
je
sbb
dec
add
imul
fsts
add
mov
arpl
cli
mov
add
push
ror
loop
xchg
mov
ret
and
lock
aam
popf
jg
mov
out
or
aaa
adcl
xchg
xchg
int
lock
xchg
pop
bound
imul
stos
addb
stos
pop
movsl
cld
in
cmpsl
add
xchg
xor
mov
xchg
cmp
add
pop
test
cmp
fimull
test
mov
mov
push
pop
adc
shrb
nop
push
lods
adc
pusha
dec
xor
xchg
dec
cli
dec
and
xor
daa
arpl
adc
shlb
out
adc
inc
aad
leave
dec
int3
sarb
xchg
inc
and
cmp
sub
inc
sbb
orb
jp
jmp
jmp
pop
fwait
into
pushf
repnz
xorb
pop
mov
inc
stc
int
dec
cwtl
in
mov
pop
iret
xchg
scas
mov
inc
mov
js
xchg
inc
fmuls
lods
mov
mov
xchg
nop
sahf
repz
lret
adc
gs
ljmp
push
repnz
jecxz
sub
jb
movsl
cli
bound
or
imul
or
cmc
in
jmp
jecxz
mov
sarl
insb
scas
cmp
pop
xor
jle
shlb
out
popa
and
add
lret
add
sub
movsl
das
loop
ret
mov
dec
js
mov
pop
xchg
pop
fwait
xlat
nop
shll
xor
mov
arpl
or
divb
inc
and
in
lcall
jnp
cmp
pop
das
pop
insb
mov
jp
inc
and
dec
scas
int3
lods
pushf
pop
lods
bnd
mov
jne
popa
inc
or
jno
cmp
xlat
pop
mov
xchg
mov
jo
aaa
ret
dec
mov
lea
movsb
lock
shlb
outsb
test
repnz
mov
mov
rcrl
shl
cmpsl
mov
dec
idivb
clc
inc
dec
mul
loope
test
cmp
pop
mov
jbe
rep
sti
and
popf
pop
adc
lock
xor
xchg
pop
inc
cmp
cs
add
adc
adc
mov
in
adc
adc
out
movsb
imul
xor
pop
pop
push
or
mov
jno
je
push
fwait
daa
pushl
fldl
sbb
or
call
mov
rcrb
dec
inc
movsb
xor
pop
call
data16
orb
push
sbb
mov
pop
fs
push
cli
cmp
mov
lea
or
dec
push
icebp
scas
fidivl
mov
arpl
lea
mov
rcr
ds
sahf
nop
or
mov
jnp
shll
roll
shrb
cltd
bsr
jmp
xor
dec
add
movsl
fsubl
mov
xor
movsb
leave
shlb
cli
add
jmp
ds
movsb
adc
in
int
mov
out
in
or
ja
or
es
mov
xor
cmc
icebp
insl
cmp
xor
cli
out
push
hlt
scas
int3
in
add
inc
dec
adc
outsl
xchg
cld
int
jecxz
addr16
xchg
lcall
sbb
sbb
repnz
sub
push
in
cmp
ror
cli
xchg
les
inc
mov
dec
xchg
and
shll
xor
mov
jae
jnp
inc
popf
mov
int3
mov
sbb
insl
in
push
gs
xchg
jmp
xchg
mov
ljmp
stos
daa
mov
xor
cmp
mov
lods
pushf
icebp
movsl
scas
mov
push
inc
xchg
sbb
subb
push
mov
addr16
mov
das
cmp
jge
cs
andb
adc
cmpsb
jne
jbe
add
out
mov
repz
je
lock
or
inc
cmpsb
xorb
loope
stc
cmc
dec
xor
dec
stos
cmp
mov
inc
in
xor
push
push
push
lods
jne
dec
into
cmp
jb
push
mov
stos
xor
adc
lods
in
jo,pn
test
scas
pop
int3
fstl
clc
xchg
ljmp
pop
mov
jg
xchg
cwtl
outsl
inc
inc
out
ljmp
je
pop
enter
jo
lret
fidivl
sbb
loop
inc
fnstenv
xchg
js
add
pop
pop
sub
dec
and
sbb
sbb
mov
and
ds
and
inc
add
leave
jno
or
push
push
dec
fwait
sbbl
or
mov
nop
sbb
xchg
mov
pop
vpermil2pd
inc
in
push
inc
fs
add
repnz
mull
aas
pop
imul
popa
lea
test
aad
adcb
outsl
xchg
pop
or
or
mov
add
adc
int3
outsb
jge
mov
sub
add
add
add
and
decl
push
mov
add
dec
dec
jp
xchg
mov
jle
jge
mov
xor
pop
mov
sbb
fnstcw
bound
test
pop
pop
jmp
mov
push
pushf
outsl
in
enter
push
dec
clc
jge
add
pusha
jb
cvtps2pd
adc
push
cmp
jo
in
sbbb
rcrl
adcb
xchg
imul
nop
sbb
or
push
imull
xor
xchg
dec
lea
movsb
add
stos
mov
fidivl
pop
jmp
cmc
test
cmpsb
mov
cld
push
rcrb
scas
cmc
ja
xor
sub
lcall
pop
jmp
repz
pop
jle
adc
inc
mov
ja
lahf
and
pop
or
repz
lcall
jge
inc
xor
sbb
sub
repnz
rclb
push
hlt
into
pop
bound
sub
mov
imul
insl
insb
inc
mov
fidivrs
adc
rolb
cmp
cmpsl
dec
mov
pop
xchg
int
xor
in
pop
adc
das
or
jg
lret
add
out
xor
fisubs
pop
pop
xchg
xchg
pop
clc
push
je
cltd
mov
xchg
call
sti
mov
loopne
add
jnp
pop
pop
mov
std
dec
cmp
enter
cmp
mov
mov
push
dec
pop
loope
into
cmp
or
roll
pop
rclb
and
stc
call
pop
jle
dec
dec
add
jle
sub
arpl
mov
add
popf
dec
add
rcrb
aad
pusha
inc
das
stc
add
add
push
roll
sti
loopne
pop
xchg
das
jns
push
fistps
adc
or
adc
je
test
shrb
je
outsl
sbb
pop
mov
addr16
dec
push
lcall
cs
mov
rclb
sbb
push
or
shrl
pop
pushf
mov
and
adc
aad
imul
test
loopne
aas
sbb
mov
jl
imul
cmpsl
aaa
lret
gs
mov
dec
push
mov
insb
or
push
inc
inc
and
rol
cwtl
fnsave
push
sti
cs
push
dec
inc
in
nop
int
jns
out
xchg
mov
xchg
rorb
dec
dec
and
mov
insl
into
pusha
push
fiadds
sbb
das
arpl
xor
jns
pop
test
push
cwtl
add
inc
jno
inc
rcl
lods
mov
jecxz
fucomi
test
xor
daa
lods
outsl
xor
push
mov
outsb
repnz
pop
addb
sbb
cmc
shr
adc
and
adc
adc
fldcw
cltd
fcoms
fidivrs
mov
add
test
jle
pop
bound
lock
lods
sub
mov
jecxz
lahf
ds
dec
sbb
ss
mov
call
pop
sub
sarl
adc
ljmp
or
xor
pop
push
inc
rcll
xor
mov
cmpsl
mov
add
jp
sahf
pushl
mov
lahf
repnz
jg
mov
jg
sub
mov
enter
fimuls
mov
adc
cltd
jo
shr
mov
imul
jns
mov
ss
int3
mov
aas
repnz
popl
outsl
cli
cwtl
scas
stc
loope
bound
mov
sbb
push
aam
sub
out
stc
dec
js
imul
push
xchg
sahf
mov
out
pop
add
insb
mov
daa
pop
fwait
mov
mov
push
div
jne
icebp
into
aam
cli
add
mov
movsl
xchg
pop
adc
push
xor
pop
sub
cld
cmp
sbb
test
popf
or
mov
pop
ficoml
xchg
rorl
mov
dec
jbe
hlt
dec
nop
ror
jbe
and
mov
bound
and
or
mov
push
mov
daa
mov
jae
sbb
jnp
jo
in
pop
jns
lcall
or
and
xchg
lcall
push
add
xor
push
adc
inc
mov
int3
scas
loopne
sbb
mov
push
rcrb
ja
stos
movsb
add
jle
push
push
jle
into
or
fprem
lcall
ret
mov
mov
in
sbb
xchg
mov
mov
inc
pop
jae
sbb
enter
out
int3
pop
xchg
imul
lahf
scas
aad
adc
outsl
rcrl
in
stos
sub
sub
es
hlt
or
xor
inc
jnp
xchg
daa
mov
add
lea
rcrb
adc
sub
adc
leave
xor
pop
and
push
mov
ds
xchg
mov
xchg
pop
push
aas
rclb
mov
xchg
adc
loope
fbstp
cmc
mov
aam
adcb
mov
pop
outsl
je
popa
pop
mov
out
incl
cmp
out
cmp
popf
fstps
cmc
es
xchg
lahf
mov
imul
flds
in
jo
lds
jg
movsl
and
jge
mov
jg
aam
push
pop
aaa
add
and
mov
mov
jae
loop
mov
mov
push
cld
inc
push
pushf
push
add
lds
xchg
lock
loope
jp
out
adc
test
add
je
mov
xchg
inc
test
les
and
cmpsl
sub
ffreep
xor
and
cmpsb
int
mov
ss
sbb
not
dec
inc
sahf
sub
test
imul
inc
adc
lods
sub
dec
xchg
push
jg
pop
orl
negl
inc
push
inc
nop
jno
test
les
or
jecxz
pop
push
or
fildll
sbb
dec
jno
pop
repz
sbb
rcr
gs
push
cmp
popa
xchg
cmp
jno
inc
jmp
mov
inc
insb
data16
repnz
mov
test
ret
lods
les
mov
nop
mov
pop
int
jp
stc
or
aas
mov
push
je
decb
push
push
arpl
in
jo
mov
popa
cltd
negl
addr16
push
fisubrl
ror
and
std
in
jge
ds
cs
sub
xor
xchg
and
cmpsl
xor
jb
dec
fildl
and
mov
das
movsl
pushl
ret
mov
cmp
inc
inc
xchg
das
sahf
mov
mov
and
dec
sahf
out
cmp
jge
inc
sbb
fnstcw
mov
inc
das
je
outsl
mov
adc
pop
pop
enter
insb
jbe
xor
mov
ja
jns
arpl
int3
fisttpll
mov
aad
arpl
and
jmp
xchg
add
mov
push
je
sti
ds
jg
lret
in
test
subb
aam
inc
fucomp
jbe
loope
roll
jg
pop
lret
push
rcr
insb
mov
adc
rclb
pop
in
movsl
gs
xchg
xchg
or
int
aaa
sbb
and
mov
test
mov
aas
dec
mov
xchg
loop
jecxz
test
mov
movsl
aad
aaa
mov
dec
fcomps
imul
sbb
dec
and
pop
jns
jnp
iret
enter
sbbl
mov
scas
lahf
ds
mov
cmpsb
std
jne
pop
test
inc
out
fstps
mov
pop
test
mov
sub
cmp
loope
cmp
push
push
cmpsl
mov
stos
sub
les
pushf
adc
xor
insl
push
pop
cmp
inc
dec
daa
imul
ss
pop
add
adc
bound
cmp
scas
jmp
dec
jns
das
adc
pop
in
mov
int3
aad
rcrl
mov
mov
out
mov
repz
mov
mov
sub
push
loopne
push
inc
rorb
mov
aas
dec
stos
mov
dec
xchg
mov
mov
dec
jne
notb
pandn
sub
nop
ss
test
cmpsl
lret
out
sub
gs
leave
cli
sub
add
jne
roll
lahf
jmp
lock
stos
cmpsb
mov
jae
arpl
xlat
repz
fwait
in
pop
dec
aad
or
insl
ret
mov
pusha
inc
jge
data16
inc
lods
aas
inc
and
adc
dec
in
inc
int
out
out
fwait
cmpsb
add
icebp
push
mov
and
ss
adc
lock
ret
and
and
test
cltd
mov
in
in
sbb
dec
mov
shll
in
pop
out
sub
mov
sbb
mov
fcoms
ljmp
scas
push
insl
pushw
cltd
std
int
xchg
out
add
jmp
mov
out
orl
xchg
pop
mov
push
pusha
cmp
ja
adc
pop
enter
ljmp
xchg
xor
push
xorb
jno
aas
imul
rclb
push
add
in
mov
hlt
loope
ljmp
xchg
lds
mov
shl
cltd
inc
mov
mov
imull
ret
mov
or
ret
or
fnclex
es
insl
pop
adc
push
adc
xchg
xor
das
jle
fsubr
xlat
fiadds
das
xor
jbe
inc
xor
sub
push
add
push
fdivrl
test
jle
out
inc
mov
ret
inc
in
out
jl
sub
cli
adc
cmpl
outsl
inc
jl
add
push
mov
stos
cli
push
dec
pop
call
cld
jmp
push
xchg
gs
test
test
popa
filds
cmpsl
adc
scas
cmp
jle
push
gs
mov
stc
xchg
adc
not
es
push
cltd
sub
cmp
pop
jl
test
cmpsl
std
cmc
aaa
pop
pusha
divb
fs
or
xor
xor
add
mov
sarb
mov
mov
adc
das
icebp
sti
pop
or
test
mov
jge
cmp
icebp
int3
mov
and
jno
xchg
jg
xor
mov
push
int
add
and
lock
std
sahf
hlt
mov
jnp
pop
test
xor
out
push
ret
cmp
dec
cmp
stos
call
dec
lods
dec
xchg
jmp
jecxz
mov
in
movsl
fs
push
adc
pop
push
pop
aas
cwtl
mov
and
mov
cmp
dec
mov
inc
ljmp
lahf
cmpsl
es
test
cli
jl
mov
sub
jbe
loopne
mov
inc
mov
mov
xor
dec
add
xchg
movsb
mov
fstpt
mov
xchg
sbb
out
sub
add
mov
inc
lods
shlb
pop
mov
test
imul
push
cmp
or
cmp
inc
mov
imul
cltd
pusha
repnz
pop
xor
dec
aam
sub
cmpsl
outsb
mov
push
fmuls
dec
add
cmpsb
sub
mov
jb
jmp
add
add
stos
mov
outsl
cmp
xor
adc
sahf
xor
lret
cmp
int
clc
in
fsubrs
dec
sbb
jno
xchg
sbb
test
adc
out
jge
push
adc
lret
in
adc
ret
cmp
pop
jg
bound
fstpl
pop
aam
xor
adc
xchg
dec
mov
ljmp
sub
cmpsl
ja
adc
movsl
leave
call
pop
test
pop
rcll
push
sub
jo
or
lret
fsubrs
cmp
clc
xchg
jae
hlt
lods
lret
add
pop
int
cs
repz
icebp
loopne
addr16
mov
xchg
arpl
jmp
add
cmc
ret
xor
movsb
pop
js
call
jns
bound
loop
adc
fbstp
adc
xchg
ds
mov
movb
insl
xor
filds
std
lret
mov
stos
lock
in
out
cmp
fisttps
lods
faddl
andl
cld
scas
add
repz
iret
jb
jmp
jo
test
scas
inc
mov
inc
jg
pop
cld
bound
jmp
pop
cmp
lahf
stc
hlt
mov
push
inc
mov
xchg
and
and
push
ljmp
das
inc
jmp
into
je
iret
imul
cltd
das
bound
add
pop
push
nop
push
xchg
int3
nop
subl
mov
push
dec
sub
jl
inc
mov
je
jb
ret
aas
scas
mov
pop
mov
add
xchg
xchg
sti
pop
jg
int
rcr
fidivrl
pop
cmp
jg
test
mov
stos
mov
cltd
cmp
adc
push
sahf
inc
sub
std
inc
cmp
imul
jnp
push
repz
lock
into
mov
jmp
xor
out
mov
arpl
add
jns
adc
mov
add
adc
ret
out
adc
outsb
xor
arpl
push
repz
inc
dec
cmp
lds
or
or
fsubrl
nop
in
push
incl
inc
lods
pop
adc
jb
insb
outsb
test
lds
sbb
push
mov
jnp
or
mov
mov
dec
xchg
lods
into
fstl
sub
add
push
pop
and
lret
lds
sub
shr
xor
subb
or
xchg
cmp
in
pop
out
add
pop
push
outsb
lea
adc
das
call
out
mov
lahf
out
inc
call
adc
in
mov
adc
std
mov
aaa
and
out
sahf
pop
insl
aas
insb
mov
lret
into
jbe
add
adcl
fcompl
lret
aam
les
test
push
rorb
pop
fstpt
imul
test
xor
jbe
mulb
lahf
or
cmp
sub
mov
mov
les
out
jp
ds
in
fdivl
aad
adc
insb
rcrl
push
cmpsb
xor
icebp
or
pop
popf
sti
add
rol
xchg
imul
xchg
mov
ss
imul
sub
inc
fimull
mov
mov
movq
mov
loop
repz
fsts
fstl
push
mov
andl
jg
add
dec
into
inc
jbe
lods
ja
test
pop
dec
xchg
imul
add
inc
xor
and
jmp
adc
iret
pusha
push
mov
testb
push
test
movsb
mov
pop
pop
pop
jle
mov
scas
hlt
scas
push
or
push
bswap
or
addb
insb
and
jp
xor
cld
mov
leave
icebp
in
and
call
fld
pop
aaa
adc
sahf
in
cmp
sub
out
or
ljmp
mov
imul
sahf
decl
imul
scas
fnstenv
int3
jns
inc
push
push
stos
xchg
arpl
je
cmp
fs
lahf
and
in
jecxz
sub
test
xor
daa
into
lcall
enter
pop
fistl
xor
xor
iretw
xchg
pusha
and
negl
xor
mov
mov
sahf
sub
daa
nop
dec
lods
fldcw
pop
sbb
int3
add
popa
arpl
inc
jns
adc
xchg
dec
js
cwtl
je
xor
or
or
fistps
adc
dec
pop
mov
aaa
jmp
mov
pop
jp
and
outsb
jne
scas
cmp
mov
test
jns,pn
push
mov
inc
les
ljmp
mov
cmp
shl
adc
fsubs
enter
xchg
jge
cwtl
lods
shr
outsl
pop
outsl
shll
js
rcr
mov
cltd
pop
aaa
dec
xchg
push
fisttps
lock
mov
xlat
test
imull
ja
sub
add
dec
jmp
test
sub
jg
jae
scas
adc
adc
adc
aad
fldl
mov
loop
in
sahf
call
mov
and
fdivl
imul
push
mov
aaa
xchg
in
mov
push
scas
insl
out
repnz
out
in
daa
and
in
xor
pop
fucomp
sahf
out
jl
loopne
mov
arpl
mov
jge
xor
dec
lret
mov
or
cmpb
shlb
jb
jo
add
ljmp
call
lea
push
add
in
xor
shll
daa
repnz
xor
in
insl
mov
xchg
addr16
and
inc
loopne
jne
iretw
lret
mov
and
push
enter
lret
sub
cmpsb
aad
leave
xchg
fs
movl
sub
dec
and
xchg
idivl
xchg
loopne
add
rolb
fildll
out
inc
das
add
cmp
inc
lods
je
dec
divb
cmp
testb
jmp
repnz
xchg
ljmp
mov
es
mov
call
mov
cmpsb
mov
mov
call
addb
cmc
sbb
aam
ss
es
shll
sbb
mov
out
jle
push
sbb
or
jo
subl
jns
xchg
push
xchg
pop
jl
push
icebp
outsl
cmp
push
outsb
push
das
add
pop
pop
push
fldenv
lods
incl
mov
outsl
xchg
fimuls
mov
xchg
lds
subl
insl
pop
repnz
das
cs
mov
dec
stos
ret
in
mov
icebp
cmp
and
push
cmp
fwait
or
inc
adc
incb
out
lods
enter
xchg
insb
insl
out
inc
mov
dec
mov
roll
xlat
inc
iret
push
imul
cli
daa
out
arpl
imul
test
xchg
fs
or
pop
cmp
sub
ret
jmp
cmp
sti
mov
mov
pop
test
imull
adc
push
aad
xchg
hlt
sti
daa
or
pop
andl
adc
into
lahf
and
cltd
jecxz
lock
out
and
sub
repnz
call
mov
and
mov
or
push
inc
bound
mov
xchg
sbb
mov
jae
inc
pop
stc
test
push
ret
xchg
in
xchg
pop
or
push
jb
mov
xchg
and
cmp
into
mov
popa
xor
xchg
sbb
subb
int
hlt
push
and
push
or
loope
pop
scas
xor
insl
lea
jge
lock
outsl
test
xchg
inc
cmp
lods
stos
xchg
int3
repz
pop
and
lods
loopne
loop
xchg
sbb
mov
into
rolb
repz
scas
xlat
adc
shlb
rclb
jmp
adc
ret
mov
popf
movb
adc
insl
popf
sub
les
xchg
push
testl
mov
sbbl
lods
movsb
rorb
cld
dec
hlt
jae
xor
sbb
cwtl
push
rolb
dec
dec
cmpsl
hlt
xchg
push
aas
lcall
out
jae
fnsave
adc
or
lods
push
cli
cli
or
scas
pop
mov
in
call
test
and
orb
jecxz,pt
jns
jl
sbb
roll
dec
push
arpl
mov
sbb
sarb
insb
insb
jl
jg
in
insl
fwait
jo
pusha
popa
icebp
jge
fstpl
mov
pushf
gs
enter
ficoms
mov
dec
es
ret
in
int3
mov
jne
mov
inc
outsb
cwtl
andl
mov
movsl
fwait
adc
stos
push
jbe
push
sbb
clc
sbb
cwtl
insl
push
ds
test
xchg
arpl
xchg
mov
and
int
mov
mov
add
push
popa
mov
mov
mov
mov
sub
repz
sub
xchg
test
pop
movsb
jp
or
dec
jp
loope
xlat
mov
mov
loope
sbb
lds
push
pop
into
std
js
lea
push
pop
icebp
cli
xchg
and
js
testl
aas
jo
mov
stos
stc
dec
inc
push
nop
and
xor
add
test
in
mov
cmp
orb
sub
xor
pusha
cltd
addr16
mov
xlat
mov
stc
je
mov
jno
in
pop
rcr
push
pop
sbb
aaa
arpl
pusha
pop
pop
mull
cmp
out
push
negl
push
fdivrl
or
push
dec
addr16
data16
mov
cmp
pop
ds
lea
cmpsl
cmp
jns
rol
ficoms
adc
cmpsl
cmp
es
sbb
add
aad
out
fsubs
push
jp
out
cmp
es
rorl
mov
inc
mov
mov
shlb
xor
push
sub
roll
or
outsl
das
int
shl
cmc
loop
cmpb
sub
inc
sub
inc
inc
cmp
cld
ljmp
adc
xor
in
and
pop
repnz
xor
ss
ret
jle
add
cmp
mov
xchg
push
or
lcall
jmp
xchg
jp
aas
jmp
jp
or
je
sbb
imul
sbb
sti
sub
scas
and
rcll
mov
jg
or
jns
out
adc
sarb
andl
mov
call
cmp
pop
pop
pop
push
lcall
jbe
sti
adc
sub
dec
jnp
jne
aam
leave
and
xchg
jle
cmp
xor
out
stos
repz
or
and
scas
cmp
mov
insl
mulb
adc
and
insl
cmpsl
out
or
ret
or
inc
xor
push
xor
pop
cmp
das
jle
fstpt
movsl
inc
or
ret
out
hlt
add
jnp
hlt
enter
cltd
setns
push
mov
sbb
out
cmp
icebp
fisubrl
adcl
scas
sarl
sub
mov
imull
sub
jle
das
cli
arpl
mov
enter
mov
into
test
ficoml
and
sbb
push
out
clc
sub
lahf
jbe
fbld
pop
cmp
xor
fstpl
sbb
mul
arpl
pushf
push
popf
sub
fstps
ret
sub
repnz
ror
addr16
xchg
xorb
push
mov
jge
lret
xor
movsb
scas
xor
inc
xchg
inc
and
push
cmpsb
mov
jns
adc
enter
int3
das
pusha
mov
std
out
int3
sbb
sbbl
fnstcw
rcrb
cwtl
add
jmp
dec
test
pop
push
mov
cmpsl
xor
jne
and
dec
dec
pop
add
pusha
mov
push
lea
dec
ror
inc
stos
int
adc
ret
ret
stos
sbb
dec
mov
mov
cli
inc
inc
xchg
daa
dec
pop
mov
adc
cli
mov
cli
xor
xlat
xchg
sbbb
nop
dec
test
idivl
cmp
rcr
dec
xchg
cmp
cli
in
sub
imul
pusha
adc
pop
push
pusha
subb
lock
inc
mov
mov
jae
sub
aaa
in
data16
inc
lcall
mov
inc
test
xor
int3
in
bound
ret
jl
mov
pop
push
aam
jg
pop
imul
jne
cltd
sub
cmc
add
in
arpl
jne
fstl
in
mov
aas
and
push
xor
xor
movsb
push
mov
fs
mov
int
fisttps
pusha
jmp
xor
pop
movsb
mov
adc
enter
mov
lock
cmpsl
cmpl
push
scas
adc
mov
loop
push
mov
push
in
arpl
and
addr16
imul
out
cmp
ss
sarb
jp
shlb
test
dec
sub
rcrl
or
mov
aas
sar
push
std
mov
sbb
out
mov
call
cmc
jecxz
cld
lock
lods
and
xchg
lret
push
pop
sbb
sahf
cwtl
fisttpll
inc
mov
adc
xor
nop
xchg
fistpl
push
mov
aad
fidivrs
shll
cmp
out
and
jg
push
dec
xor
lds
jo
mov
ret
push
sti
push
xor
push
cmpsl
add
stos
pop
ret
lret
addb
push
int
or
je
sub
shr
sub
movsb
inc
stc
jl
sbb
jmp
inc
ficoml
xor
mov
add
out
xchg
jo
je
fisubl
cli
pop
lcall
loopne
cmc
add
jbe
lret
sarl
arpl
stos
push
sbb
sbb
sub
xor
cmp
cmp
sub
jmp
cs
jb
nop
sub
loop
push
loop
icebp
fdivrl
or
out
and
mov
sbb
xchg
pop
lea
rcrl
aas
aas
into
enter
daa
dec
lcall
cmp
mov
mov
fwait
scas
imul
mov
dec
or
cmpb
xchg
push
out
lock
xor
shrb
push
inc
adc
push
nop
dec
fs
lahf
into
cmp
into
mov
cmpsb
push
enter
out
ficoms
shlb
push
xor
dec
sub
je
push
jns
lods
testl
xor
mov
or
js
decb
xchg
pop
jo
mov
pop
and
add
in
stos
inc
adc
jmp
notl
inc
mov
aas
out
push
pop
push
test
mov
sbb
scas
lahf
int
dec
fstl
aam
sbb
ljmp
xorb
lds
jae
inc
jmp
mov
sub
or
sarl
push
ror
test
add
enter
fsubrp
push
push
addr16
cmp
jl
jbe
mov
push
ljmp
inc
lods
fisubrl
sbb
fwait
stos
mov
in
or
imul
sbb
sub
lods
rorb
jle
jle
or
add
fstpl
jl
outsl
test
lss
push
imul
pop
in
int3
and
mov
mov
popa
insb
nop
push
jp
dec
sub
out
sahf
dec
fcomps
pop
add
or
pushf
ror
jg
test
sbb
jmp
mov
pop
push
cmp
sbb
hlt
in
mov
stos
xchg
add
sbb
insb
dec
aaa
add
test
lds
mov
mov
inc
std
adc
ficoml
scas
pop
ss
pop
pushf
rep
into
jnp
repnz
rorl
mov
je
mov
push
push
xchg
rcl
mov
das
or
mov
push
insl
and
sbb
iret
jge
test
mov
aam
or
add
cmp
es
popa
inc
cltd
addr16
paddsw
xchg
idivb
dec
lcall
cmp
or
mov
fnsave
ss
cmp
cmpsl
push
cmpsb
xchg
lahf
lret
inc
pop
mov
mov
insl
inc
gs
jmp
ljmp
jbe
fs
insl
sub
or
pop
sub
ja
mov
push
add
jge
pop
mov
daa
and
xorl
dec
fisttpl
and
xchg
icebp
add
movq
scas
jbe
sub
pushf
adc
into
sbb
push
pop
cmp
adc
push
xchg
jp
inc
sbb
not
sbb
lock
pop
hlt
sahf
sbb
jp
scas
jle
cmpsb
or
loop
repnz
fcmovne
pop
mov
jb
das
cmp
sbb
lahf
stos
stos
repnz
divb
test
jae
mov
xchg
ja
mov
loope
daa
jne
and
push
out
jl
cmp
arpl
xchg
sub
js
fwait
sub
cmpsb
fdivr
test
dec
sahf
mov
pop
cmp
add
fwait
inc
fcomip
cmp
xorb
cld
aas
fbstp
jb
fxch
xchg
add
jmp
dec
or
inc
out
popf
out
pop
jmp
js
mov
cwtl
inc
xor
lret
mov
adcl
lods
repz
test
rorb
outsl
movsb
xor
cmp
add
dec
sub
cmp
xor
ret
mov
ljmp
xchg
fdivrs
into
or
aaa
lock
mov
roll
push
dec
mov
sbb
ds
mov
idivl
xor
xchg
adc
ja
in
data16
in
xchg
popa
mov
ljmp
jp
and
dec
lea
lahf
lret
stos
subb
lret
xchg
mov
cli
push
xchg
test
out
popf
add
xor
out
jns
inc
push
dec
jnp
inc
cltd
add
jns
and
test
xchg
and
sbb
or
jmp
xor
sub
pop
mov
mov
push
arpl
addr16
ret
xlat
sbb
jmp
dec
in
pop
xor
imul
imul
jo
add
negb
fldenv
pop
sti
insl
inc
aaa
insb
icebp
cmp
out
ficoms
les
dec
or
int
adc
adc
js
bound
rorb
sti
gs
jbe
jle
pop
pop
add
sub
xor
mov
in
in
adc
xcrypt-ofb
cmpsl
lods
or
jb
addr16
lret
loope
mov
sti
rcrl
cltd
adc
outsl
fisttps
or
insb
xchg
and
fsubs
push
icebp
andnps
xor
pop
mov
lret
popf
cwtl
mov
pop
push
out
ja
or
xchg
lea
mov
mov
sarb
mov
outsb
inc
mov
and
or
in
jo
sub
insl
cs
outsl
mov
test
cmp
scas
test
sub
mov
test
outsl
cli
movsb
adc
in
icebp
sub
stos
test
mov
add
cs
scas
jp
addr16
cmpsb
sbb
adc
inc
dec
repnz
sub
mov
in
jnp
push
scas
sahf
xchg
fidivl
mov
xor
add
mov
aaa
les
aas
mov
jmp
jns
cwtl
mov
jbe
and
adc
push
lea
dec
lahf
fcmovbe
push
add
adc
cmp
dec
fildl
bound
xor
sub
test
xchg
loopne
cwtl
loop
push
scas
leave
cltd
loope
xor
xchg
subl
mov
xchg
mov
lret
pusha
xchg
js
pop
in
test
lock
jbe
mov
bound
add
ret
jae
jne
cmp
adc
fistpl
ret
jmp
pop
int
push
out
mov
stos
mov
or
dec
or
aad
xchg
jl
in
mov
mov
iret
movsl
repz
inc
test
in
lods
and
inc
cmpl
jg
iret
andb
dec
dec
ljmp
addr16
daa
nop
out
cli
das
cwtl
pop
push
fcoms
cmc
jle
push
popf
std
or
scas
pop
aad
push
jle
repz
js
enter
xlat
sub
lock
hlt
inc
mov
sbb
arpl
xchg
in
rcrb
sub
fwait
push
aas
pop
or
lret
mov
stos
loope
xchg
loop
imul
dec
dec
popl
aam
sub
mov
mov
inc
xor
icebp
push
testl
xchg
pop
add
adc
hlt
enter
cmp
xchg
mov
addr16
das
jno
push
add
aaa
ret
mov
roll
sub
dec
or
stos
fadds
fidivrl
jbe
lock
jnp
jb
testb
xor
out
ret
and
pop
mov
syscall
mov
mov
jno
jp
in
push
mov
mov
lret
sub
cmp
pop
test
imul
aas
into
lds
gs
cmp
orl
xor
aaa
jl
imull
test
cmp
leave
add
or
xlat
sbbb
sub
mov
sahf
push
imul
movswl
cmp
or
dec
in
cli
push
sub
dec
cmpsl
nop
jb
xchg
clc
mov
mov
push
test
pop
movl
sub
xchg
lock
xor
aaa
or
dec
mov
test
pop
fs
xor
xchg
mov
imul
mov
xlat
dec
pop
fisttpll
ja
lcall
mov
sahf
xchg
es
ds
divb
push
leave
es
dec
mov
lret
ret
addr16
xchg
sub
cmc
xchg
test
daa
jae
push
aam
mov
lea
ds
mov
je
or
pop
repnz
sbb
filds
jge
or
loope
xor
dec
adc
xorb
mov
clc
adc
sbb
lcall
sub
xor
inc
mov
outsl
shlb
ss
gs
dec
stos
cmp
push
dec
mov
xor
arpl
mov
test
leave
sti
jo
mov
adc
sub
jo
or
das
add
imul
dec
aad
add
sbb
mov
lret
and
shlb
adc
syscall
mov
mov
das
in
mov
fildl
mov
roll
add
adc
repz
test
setnp
movsb
jge
test
inc
dec
call
or
xchg
jns
stos
in
and
andb
push
mov
xor
mov
xchg
lods
imul
pop
leave
xchg
movb
pushf
nop
mov
mov
scas
je
arpl
movq
stc
jnp
xchg
xchg
mov
adc
dec
jnp
pop
repz
cmp
mov
adc
imul
out
or
lret
lods
insb
xor
test
rcll
imul
notl
repnz
adc
lcall
cs
xchg
sub
and
add
push
inc
lock
mov
pop
sub
cltd
inc
push
xchg
pop
mov
das
insl
shlb
iret
ss
inc
sbb
add
jo
push
aaa
dec
cwtl
inc
or
jne
sbb
stos
push
out
lret
add
inc
sub
into
xchg
sbb
xor
hlt
into
or
dec
test
jno
adc
xchg
mov
call
or
mov
arpl
lods
jbe
mov
cmpsl
rcll
lods
mov
pop
adc
dec
jecxz
or
adc
jnp
jo
test
les
pop
jb
pop
jns
fcomp
sbb
jge
lods
sub
shr
cmp
jae
and
jge
fisttpl
mov
dec
cwtl
xchg
cmc
pop
lea
mov
addr16
pop
rcrl
loope
xorl
mov
xchg
adc
repz
pop
jnp
push
xchg
ret
shll
arpl
lahf
mov
int3
push
or
mov
xchg
inc
test
pushf
pushf
lods
ret
mov
mov
inc
pusha
lods
orl
or
cmp
dec
ficomps
cmp
dec
cmpsb
pop
jmp
add
je
add
in
sub
rolb
xchg
pushl
mov
cmpsb
cld
in
jge
xor
xor
cmp
test
imul
mov
aam
stos
mov
and
aaa
dec
sub
pusha
mov
and
aas
add
test
movsl
out
xor
add
imul
call
fistl
ret
jno
adc
ja
or
and
mov
movl
push
fisubs
gs
sbb
push
in
cltd
fnstenv
sub
cwtl
addr16
jl
sub
jb
cmp
movsl
add
xor
push
stc
mov
shl
stc
xor
jle
pushf
xor
sbb
dec
aam
repz
scas
xlat
imul
dec
int
daa
out
into
ss
push
xchg
and
mov
adc
pop
insl
adc
add
inc
dec
out
xor
cltd
les
cs
bound
shll
inc
not
es
es
out
into
or
dec
aad
mov
xor
or
or
dec
inc
mov
or
cmp
lods
and
or
outsb
xchg
leave
xchg
out
cmp
or
aam
add
pmulhw
jle
movsl
jmp
pop
xchg
nop
cmp
and
enter
xchg
movsl
or
mov
sub
shrl
xor
jo
inc
stc
lea
xchg
popf
movsl
mov
sub
inc
sbb
push
lds
pop
jnp
lret
daa
leave
sbb
pop
lcall
mov
pop
inc
mov
shrb
and
push
sti
mov
and
mov
or
jge
loop
data16
and
je
dec
inc
jg
mov
xchg
rcr
mov
notb
shll
pop
test
inc
int
roll
mov
cmc
dec
mull
shll
inc
inc
or
aas
jne
add
in
and
mov
push
push
out
in
mov
int3
shl
aaa
push
jmp
mov
pop
mov
movsb
test
adc
push
xchg
mov
subb
lea
fdiv
push
aas
push
inc
ss
dec
sub
out
pop
adc
jl,pn
mov
jnp
loope
jg
popa
stos
lods
mov
cmp
xor
push
cltd
dec
mov
sbb
inc
les
nop
xor
push
scas
xchg
adc
ljmp
jecxz
pop
fnsetpm(287
sub
scas
jo
leave
and
mov
jge
sub
dec
sub
xchg
aaa
data16
lret
enter
jmp
pop
in
push
cltd
jl
into
jns
cmp
ljmp
xor
das
out
in
push
rolb
repz
cmpsl
shlb
pushw
xor
jae
sbb
in
sti
mov
movsl
and
imul
dec
xchg
mov
jl
sarl
ror
push
mov
stos
push
gs
sub
pop
popf
les
int3
sbb
adc
shlb
in
push
testb
loope
vsubpd
lods
sub
fnstenv
fs
faddl
stc
test
sub
dec
xor
mov
mov
hlt
int3
add
adc
xchg
jae
sbb
aas
mov
mov
jp
xchg
ljmp
ja
jnp
sbb
movsl
in
sahf
sub
adc
cmp
dec
lcall
cmp
int
test
or
ss
in
es
cmpb
sar
out
inc
inc
xor
sbb
jno
add
xor
fistpl
insb
pusha
out
cmc
mov
pop
jl
mov
pop
push
mov
insb
and
fwait
clc
or
cld
push
sbb
mov
inc
pop
inc
pop
fisubrs
sbb
mov
xchg
fs
shld
jne
mov
sub
mov
jle
sub
jp
bound
or
fdivrl
mov
push
push
pop
xchg
ds
adc
push
xchg
clc
lcall
xchg
add
mov
xchg
cwtl
mov
add
ja
xor
push
outsb
sbb
cld
pop
xor
sti
add
add
fldl
lcall
push
data16
mov
jae
addr16
jns
sub
daa
mov
sub
cs
add
int3
mov
xchg
xchg
dec
das
inc
or
bound
pop
loopne
jbe
dec
in
mov
mov
adc
cmp
lds
xchg
cltd
sbb
sbb
push
ss
pop
ss
xchg
sti
xor
ret
stos
ret
movsl
mov
pop
sahf
xchg
push
loopne
je
pop
sbb
mov
adc
ret
mov
out
jbe
push
cmp
jbe
scas
daa
jb
pop
push
fisttpll
push
and
outsl
xor
inc
std
ss
push
pop
jg
shll
fwait
xchg
xor
mov
ja
aas
mov
stos
mov
sahf
inc
push
clc
imul
push
jo
mov
lds
pop
mov
rorb
aaa
jp
add
push
in
mov
popa
pushf
push
sub
les
popf
xor
ret
mov
add
icebp
xor
mov
aaa
push
xchg
idivl
mov
movsb
mov
push
inc
xor
stos
cli
xchg
shll
and
jp
mov
int
inc
and
sub
add
adc
fs
stc
inc
scas
push
sub
cltd
test
add
jb
fcomps
std
lret
mov
xchg
cmpsl
pop
icebp
std
sahf
mov
loopne
jo
loopne
data16
fdivrl
test
fmuls
mov
je
int3
stos
bswap
scas
xlat
sbb
ds
ljmp
cmp
add
cs
sahf
icebp
inc
add
dec
mov
orl
push
into
rorb
fstl
adc
cmpsl
lret
inc
inc
cmp
xchg
clc
mov
mov
push
sub
ss
aad
iret
pop
aaa
xlat
call
ja
es
dec
out
dec
push
and
add
fimull
sub
pushf
fs
imul
rclb
out
adc
and
and
loopne
out
cmp
sub
jo
jne
jmp
pop
outsb
cmp
mov
jp
testb
xor
mov
sbb
add
movsl
in
adc
jecxz
push
ss
sarl
fnstcw
push
jno
movsb
sub
mov
xchg
inc
sbb
ret
mov
ds
sbb
inc
dec
icebp
ljmp
mov
xchg
jge
je
jnp
sbb
jo
mov
sbb
shl
mov
arpl
add
popa
iret
dec
xor
out
sbb
dec
cmpsb
add
add
fsub
cmp
lcall
sub
mov
int3
mov
push
cmp
mull
outsb
xchg
insl
addb
xor
icebp
cmpb
or
mul
cmp
shll
imul
xchg
call
or
lcall
insb
add
enter
gs
lcall
roll
fnstenv
ret
pop
repz
inc
and
je
push
xchg
leave
add
mov
push
les
ljmp
js
movsb
adc
or
insl
mov
leave
lea
arpl
je
mov
sub
adc
xor
jbe
mov
call
add
mov
loop
dec
xchg
pushw
add
arpl
stos
fsubs
xchg
sbb
push
fs
push
stc
push
es
dec
fnstcw
insb
arpl
mov
insb
push
ret
xor
jmp
scas
xchg
xor
mov
xor
mov
dec
inc
mov
pop
mov
in
inc
das
dec
sub
movsl
in
lret
xor
pop
ss
pop
and
les
inc
adc
lea
fs
movsb
cwtl
fstl
pop
sbb
jmp
rcr
out
xchg
sbb
stos
shll
xchg
pop
dec
mov
aaa
xor
shl
xchg
div
movsl
test
fisubrl
fistpl
call
mov
dec
inc
stc
xchg
ss
or
adc
js
jecxz
jg
jg
add
mov
gs
pop
sbb
sub
inc
rol
lods
rcrb
jb
xor
jp
mov
or
out
adc
lret
push
jge
jno
iret
shl
loope
jns
and
push
call
call
adc
les
and
push
adc
mov
pop
mov
jo
in
daa
iret
int3
mov
imul
bswap
outsl
dec
ds
fldl
sbbb
je
push
sbb
ret
sbb
jb
mov
movsb
jmp
mov
push
mov
sub
repnz
push
and
fstl
fcompl
inc
mov
xchg
div
push
into
call
data16
out
dec
dec
push
repz
xchg
adc
push
push
push
jmp
adc
push
mov
cmp
jnp
jg,pt
imulb
mov
mov
xchg
gs
xlat
loop
sbbl
xlat
fucomp
cli
pushf
push
cli
xlat
add
jge
sbb
cli
dec
xor
or
lret
lcall
adc
ja
push
add
and
mov
rcl
lret
lock
push
scas
leave
pop
pop
jg
roll
jp
js
xor
push
push
addl
xlat
pop
ss
jno
fcompl
sbb
fldt
fildll
dec
xchg
sbb
xchg
scas
ret
push
mov
add
rol
add
jge
movsl
ja
pop
repnz
sbb
es
mov
out
jnp
jmp
ret
mov
mov
lock
adc
ret
pusha
dec
cmpb
lds
adc
jecxz
inc
mov
sbb
push
test
dec
xor
cmp
jp
loopne
mov
xchg
or
xor
lret
pop
jmp
xor
icebp
popa
mov
lret
pop
repnz
inc
fwait
mov
and
push
xchg
lret
out
pop
cwtl
mov
mov
dec
test
lahf
mov
xchg
in
dec
insb
dec
fistpl
cmp
roll
cltd
mov
cmp
and
pop
mov
inc
lahf
add
rclb
cmpsb
aas
adc
loope
xchg
cmpsl
lcall
lock
adc
aas
xchg
push
shll
imul
mov
xchg
loope
push
jne
inc
sti
mov
pop
jge
dec
mov
cmp
dec
jno
sbb
sbb
sbb
push
jno
pop
stc
xor
and
es
sarb
je
pop
lods
cmp
xchg
fwait
add
jbe
mov
sub
mov
pusha
pop
dec
cli
repnz
cltd
cs
sti
fnstsw
adc
movsl
je
lock
decb
movsb
icebp
pushf
out
and
push
dec
mov
jb
add
repnz
sbb
inc
cmp
testl
into
les
xorl
pop
jge,pt
in
xchg
test
jge
jecxz
xchg
les
add
mov
pop
ret
xor
lods
xor
cmp
movsl
xor
xchg
lods
pushf
fstpl
xchg
mov
xchg
inc
sar
pop
int3
idivl
jle
mov
imul
mov
gs
jnp
jno
insl
or
mov
push
insl
or
fdivs
lock
es
std
cmc
jbe
hlt
pop
hlt
insb
bound
cmp
push
adc
pop
pusha
push
add
lret
jae
pop
pop
addr16
insb
or
sbb
mov
mov
pushf
cmp
xor
mov
daa
cli
fdiv
cmpsb
frstor
push
jnp
or
test
add
stos
fs
fidivrl
add
cmp
fiadds
mov
mov
fs
inc
xchg
push
xorb
inc
pusha
test
mov
jl
frstor
inc
repnz
cmpsb
push
xchg
dec
and
cltd
xchg
aam
pop
xor
push
mov
sbb
jecxz
xlat
scas
xor
scas
xor
insb
test
push
lret
lcall
repnz
mov
aaa
cli
or
pop
test
jl
xor
sbb
adc
fdivs
testb
in
or
mov
fisubl
addb
test
aad
or
in
push
dec
fwait
mov
repnz
arpl
mov
sbb
subb
pop
push
inc
and
outsb
and
adcl
jae
xchg
add
not
push
cmp
sub
repnz
fstpt
mov
arpl
push
dec
cmp
jle
mov
subl
fnstcw
dec
mov
into
xor
add
test
xchg
fbstp
clc
jge
iret
or
sahf
jae
call
popa
clc
clc
push
and
adc
std
out
cld
les
jae
inc
add
xor
dec
test
repnz
adc
pop
ds
dec
add
jo
roll
sti
pop
movsl
mov
fbld
stc
jmp
xchg
ret
mov
cmp
xlat
clc
sarl
out
mov
push
pop
push
insb
iret
pop
ret
aad
pop
shll
xchg
enter
jne
inc
jo
sbb
ljmp
xchg
filds
cmp
test
mov
mov
arpl
aaa
and
or
mov
xor
lods
push
pop
std
mov
out
frstor
arpl
aaa
in
dec
add
sbb
or
jae
movsb
cmp
bound
mov
add
push
mov
or
mov
and
imul
add
stc
iret
aas
lcall
aas
or
jge
adc
inc
sub
imul
mov
in
lods
pop
push
inc
inc
xlat
dec
popf
loopne
and
iret
cmp
stc
loop
inc
jbe
fidivs
fcoml
ljmp
and
or
xchg
out
sub
pop
scas
daa
in
adc
dec
and
push
push
popl
rclb
jl
mov
sub
ret
adc
fwait
xor
xchg
sub
adc
sub
dec
or
push
jns
push
scas
and
dec
mov
test
cmpsb
adc
ds
xchg
jle
dec
dec
xchg
ret
rclb
loop
push
add
scas
stos
ret
sarb
pop
fisubrl
gs
xor
jns
ljmp
xor
inc
add
repnz
pop
inc
adcl
or
stos
mov
pushf
adc
xchg
and
pop
push
or
movsl
mov
cmpsl
mov
cld
bound
insl
aam
pop
push
pop
cmp
int3
or
sbb
call
mov
adc
test
jecxz
mov
aad
fstps
mov
sub
scas
das
das
les
unpckhps
push
xchg
mov
pop
pusha
mov
repz
in
inc
add
and
test
mov
adc
sub
mov
sub
dec
sbb
adc
mov
sbb
push
outsl
sti
inc
stc
or
pop
sbb
jb
xor
xchg
xorl
jo
ficompl
rorl
xor
cli
inc
sbb
ljmp
and
mov
test
faddl
mov
out
inc
sbb
in
xor
out
pop
mov
cmp
pop
call
adc
data16
push
in
leave
fcomip
imull
sub
pop
imul
out
pop
fnsave
rcll
push
cmp
and
adc
sub
sub
mov
cwtl
mov
aas
inc
arpl
xchg
mov
and
cs
or
push
xchg
push
pop
aaa
and
and
sbb
jnp
pusha
sbb
push
into
and
scas
aas
push
ss
pop
lcall
call
mov
xor
ret
mov
lret
or
scas
fs
data16
add
jno
mov
sahf
cmp
xchg
ja
repz
push
imul
mov
loopne
into
scas
ss
sbb
jnp
inc
mov
out
js
inc
movsl
movsl
in
aad
mov
cs
cmc
sbb
repnz
movsl
data16
in
leave
adc
sub
adc
push
mov
int
sbb
lods
test
and
imul
jle
pop
add
out
insl
sub
testb
leave
mov
push
out
lcall
loop
shlb
jge
cmp
adc
sub
jo
dec
fnsave
dec
into
ret
pushf
sbb
test
lahf
push
test
pop
sub
sbb
jae
in
cld
popa
cmp
mov
repz
imul
movsl
ds
push
xor
std
leave
mov
pop
jo
loopne
sahf
in
push
cmp
adc
lods
dec
inc
popa
inc
ljmp
push
sbb
in
in
mov
cmpsl
pop
in
ja
mov
out
push
ret
push
fwait
aam
fistps
and
pop
movq
pop
sbb
mov
clc
shlb
sub
call
push
aad
lret
pushl
adc
sub
mov
shl
pop
in
inc
adc
mov
sahf
xchg
mov
xor
dec
mov
cmp
mov
lret
mov
xchg
pop
inc
repnz
in
fptan
cwtl
cmpsb
cmpsl
test
movsb
mov
pusha
lds
cmpl
ljmp
js
imul
sbb
add
aas
inc
xchg
es
xor
loope
add
xchg
sbb
cmp
pop
popf
adc
ret
add
comiss
cli
xchg
jns
mov
xor
stos
lock
inc
push
jp
dec
dec
fidivl
pop
inc
push
cmp
or
out
sub
cs
xor
cmp
aam
xlat
clc
sub
cld
xchg
or
mov
fidivrs
dec
jp
mov
push
xchg
jmp
lcall
sbb
pop
mov
inc
in
or
jo
adc
or
aad
add
pop
leave
outsb
jb
lahf
popa
incb
pop
or
or
loop
iret
sbb
clc
push
mov
mov
sarb
insb
adc
mov
addb
popa
jp
push
jmp
ja
jp
repz
sub
sbb
mov
pop
mov
pop
xchg
movb
lds
pop
inc
repz
lahf
add
lea
xor
or
xlat
inc
mov
js
or
sub
outsb
dec
xchg
sbb
hlt
adc
aam
mov
rcr
aad
cmp
pop
pop
push
shrb
xchg
out
es
cmp
sbb
mov
or
push
fstl
int3
xchg
es
or
sub
cli
lret
fmuls
lret
add
pop
cmc
sub
fdiv
dec
test
pop
xor
imul
enter
adc
add
mov
sarb
adc
imulb
jp
push
dec
pop
mov
xchg
xor
sub
cmpb
cmp
leave
jecxz
sub
imul
mulb
push
jnp
mov
lcall
mov
sbb
dec
mov
or
iret
addr16
fnstenv
pop
mov
jae
imul
pop
test
inc
cmpsb
mov
das
imul
stos
cwtl
icebp
call
mov
mov
mov
test
jae
sub
add
shlb
mov
cmp
sbb
dec
js
test
and
xchg
push
add
incl
lock
into
jae
hlt
arpl
rorl
mov
fdivrl
inc
xor
scas
cmp
xchg
mov
sbb
and
dec
adcb
mov
or
push
xor
mov
ret
fxtract
mov
daa
add
or
lret
jmp
test
mov
or
xor
dec
dec
cmpsb
std
popa
sub
aad
stos
pop
inc
enter
in
das
cld
pusha
test
sahf
in
sub
push
adc
fists
fsts
push
ja
in
add
mov
test
jp
je
mov
in
lahf
add
jg
push
test
div
sbb
xchg
xchg
and
loop
ss
xor
mov
fsubrs
sub
jne
je
mov
jbe
inc
nop
inc
xchg
lcall
aam
insl
addr16
pop
fisttpl
shlb
mov
addl
sub
push
and
cmp
fstp
cmpsb
pushf
mov
das
ja
xor
mov
sbb
mov
sarb
mov
test
jmp
mov
cmp
cmpsl
push
cmp
mov
mov
and
data16
jnp
scas
xor
or
jmp
sub
je
call
lret
push
inc
test
mov
xor
and
mov
jecxz
jnp
test
cmp
cmp
pop
sub
push
xchg
cmc
inc
push
pop
aad
sbb
mov
jae
add
sbb
add
sub
scas
test
cwtl
mov
sub
out
jmp
jmp
pop
cmp
and
mov
mov
adc
and
jbe
into
add
mov
sbbb
mov
int
xchg
and
cmp
jp
mov
cld
and
sub
aas
push
and
xchg
push
mov
lcall
and
jo
mov
push
jnp
mov
in
jns
negb
dec
cmp
jge
mov
pop
jg
fs
sub
fs
push
inc
or
cmp
add
dec
jbe
sub
popa
dec
push
mov
mov
dec
mov
js
imul
or
pushf
xchg
lods
outsb
lret
ds
adc
imull
out
into
lcall
imul
std
sub
dec
sub
and
gs
imul
xor
lea
inc
shll
lea
outsb
dec
std
xor
insb
xchg
lock
add
aam
addb
je
inc
mov
dec
xor
jp
cmp
bound
and
mov
negb
repz
pop
mov
jmp
push
imul
popa
xchg
xchg
imul
jno
inc
pop
and
aam
sbb
cmp
inc
dec
push
push
rclb
mov
and
push
xor
orb
xor
aas
mov
out
and
xchg
gs
scas
mov
loop,pn
mov
mov
sahf
mov
cwtl
or
dec
cld
and
jl
adc
jb
insb
roll
shrl
push
jnp
jae
std
js
cmpsb
std
frstor
lret
fsubr
mov
cmpsl
ficomps
mov
inc
jge
jno
inc
dec
das
pop
lds
enter
popa
adc
and
daa
gs
inc
mov
mov
pusha
outsl
jp
jb
roll
adc
cs
push
dec
lds
andb
enter
fucomip
call
cs
aas
push
stos
out
in
ja
decl
cmc
sti
xor
movsl
je
push
incl
xor
lea
pop
push
mov
nop
dec
out
into
popf
or
out
pop
dec
xor
xchg
repz
mov
ret
popf
sub
dec
push
mov
pop
xchg
sub
xchg
aas
fisttps
lea
rorl
xor
lds
pop
dec
insl
pop
mov
movsb
rolb
imul
xchg
cmp
push
data16
jge
scas
push
lret
das
mov
jo
inc
or
push
sub
add
data16
scas
cmpsb
xchg
repnz
leave
jecxz
fadds
or
adc
xor
xor
ret
mov
mov
dec
and
push
lret
fldenv
or
add
jbe
add
mov
out
jecxz
addb
test
outsb
ret
stos
jmp
cld
je
and
pop
cmpsl
pop
cmp
fwait
das
popf
mov
jb
push
test
lret
sub
mov
jg
lahf
stc
imul
hlt
adc
jecxz
insb
adc
cmp
xor
sub
lock
ss
incb
fdivr
clc
xchg
push
pusha
sti
jbe
movsb
pop
in
cmp
in
das
push
fldcw
mov
mov
jno
pop
loop
enter
sbb
sti
outsb
xor
sbb
cmp
and
popf
repnz
adc
insb
insb
pusha
mov
hlt
or
inc
lods
imul
mov
and
jbe
lcall
test
sbb
jp
idivb
xchg
out
add
mov
cmpsl
jo
aad
call
repnz
sub
fwait
movsb
pop
mov
xchg
xchg
add
mov
add
push
push
or
or
loop
das
jns
ret
aaa
push
xorb
das
loop
imul
jne
xor
mov
out
fs
hlt
orl
imul
fisubrl
in
popf
mov
call
ja
cltd
mov
mov
testl
push
shll
rcr
rcrb
into
imul
mov
mov
cmp
iret
mov
jg
and
hlt
mov
mov
mov
xor
mov
and
pop
adc
ret
jb
inc
dec
and
shll
sub
inc
or
into
cmpsl
pushf
loope
or
xchg
mov
cmp
call
lods
mov
mov
mov
mov
movsl
popa
popf
test
dec
add
fistps
adc
out
loop
in
dec
dec
lret
mov
fildll
cmpsl
mov
add
sub
aad
dec
mov
pop
and
or
lret
pop
jle
ljmp
in
mov
cltd
inc
fisttps
ret
mov
xchg
jae
or
pop
rcrb
xor
add
call
inc
jl
mov
rorl
xorb
bts
test
or
push
jg
mov
sbb
ret
sbb
movq
insl
les
mov
ret
rorb
sarl
xchg
lods
mov
lea
mov
adc
fadds
jno
test
imul
rcll
jnp
xchg
mov
jmp
cld
add
mov
add
fdivrl
adc
inc
cld
jbe
es
add
in
push
fstps
setg
paddb
int3
popa
fisttps
push
mov
lock
mov
jmp
mov
repz
adc
and
sub
push
iret
and
push
scas
or
xchg
ss
xor
leave
mov
mov
jp
xchg
popa
shlb
mov
dec
lret
arpl
xchg
ror
pop
jnp
pop
cmp
pop
outsl
fwait
adc
jl
scas
stos
popf
mov
xchg
mov
stos
xor
mov
sub
mov
dec
xchg
test
stos
lcall
out
xlat
std
subb
pop
xchg
aaa
lahf
xchg
add
add
repnz
or
mov
dec
out
and
ja
and
xchg
ficoml
dec
jns
mov
sbb
dec
sub
jecxz
mov
mov
in
insb
int
pop
mov
mov
and
or
lock
jl
jno
inc
iret
and
int
sub
xor
sub
ficoms
jns
flds
mov
addr16
push
sbb
xchg
mov
sbb
into
mov
arpl
xchg
cmp
sub
sbb
daa
mov
or
xor
cmp
mov
pop
popf
add
cmc
stc
inc
aam
test
xchg
repnz
pop
jp
cmovge
divl
jmp
rcrl
aad
es
xchg
lods
loope
sbb
or
xlat
test
xor
aaa
stos
sbb
outsb
fwait
divb
cmp
in
xor
lods
dec
cmpsb
mov
jl
inc
xchg
movsb
push
or
adc
xor
xchg
mov
inc
insl
loope
push
rcrl
mov
std
jp
es
test
and
sbb
cmp
or
sbb
cmpsb
fxch
sub
mov
add
test
xor
fsubs
paddq
pop
fs
adc
push
cmp
inc
icebp
aas
inc
mov
insb
aas
cmp
das
sbbl
loope
sub
push
mov
sbb
xchg
dec
jb
xor
sbb
fisttpll
push
adcb
adc
stos
sbb
pop
jg
sbb
cmp
dec
nop
repnz
mov
pop
sbb
aad
je
fsubs
lahf
xor
fsubl
and
and
mov
jecxz
imul
jns
pop
xchg
push
jmp
push
test
mov
or
arpl
jmp
adc
mov
mov
push
xchg
sbb
cmp
sti
mov
mov
shrb
cmp
mov
sbb
push
sbb
xchg
pop
xor
popa
dec
mov
cmpsl
repnz
das
int3
mov
mov
push
test
mov
fsubs
int3
dec
jg
lret
orb
push
popf
popa
shrb
fsts
je
push
insb
das
sub
add
ret
push
cmpsl
dec
add
stos
sub
cmp
and
and
add
jg
mov
add
and
jbe
fistpll
test
inc
nop
push
jmp
adc
mov
adc
stos
test
sub
xor
pop
out
jae
cmp
adc
jb
out
cli
ss
adc
pop
pop
jne
push
int3
rcr
cmp
fmul
push
shl
pop
jp
sbb
adc
dec
clc
mov
imul
sub
aam
inc
adc
sub
repnz
or
ljmp
jmp
or
outsl
repnz
scas
mov
lods
xchg
adc
rclb
jl
imull
leave
pop
cmp
push
bound
pop
lea
push
xchg
mov
mov
dec
or
and
rcl
and
dec
aaa
mov
dec
push
xchg
in
xor
sbb
jge
repz
pop
jecxz
in
je
mov
je
addb
fwait
push
xor
push
adc
cmp
repnz
enter
push
xor
dec
lods
ds
xor
pop
imul
popf
les
cmp
push
stos
std
xor
aam
scas
inc
leave
call
pop
in
jnp
jge
push
aaa
lret
push
and
outsl
add
inc
test
sarl
push
mov
sub
xchg
and
enter
mov
mov
mov
xchg
inc
rcrb
cmp
pop
popf
dec
out
mov
dec
pop
xchg
scas
xchg
add
xchg
push
gs
jns
and
iret
dec
lods
nop
jecxz
mov
and
imul
or
loope
cld
inc
xchg
mov
rcll
and
sub
js
dec
mov
mov
and
insl
test
jnp
push
mov
inc
je
jns
loopne
mov
or
adc
fucomp
imul
aam
pop
push
bound
or
leave
add
sub
inc
pop
cltd
pop
and
in
pusha
scas
pop
cwtl
add
jg
and
outsb
aam
push
repnz
mov
repnz
jns
sub
xor
sbb
outsb
sar
push
ret
std
popa
iret
fsubrs
xor
js
fsubs
popa
mov
cmp
imul
pop
xchg
add
fdivrs
jecxz
loop
and
push
mov
jge
push
xor
jne
stos
arpl
add
xchg
aad
adc
cmp
jmp
fcoml
sahf
repz
add
jp
jge
sarl
add
fldenv
movsb
mov
loope
lds
dec
pop
and
inc
test
idivb
pop
add
push
xchg
enter
daa
je
xor
push
jae
cmp
push
lcall
push
jnp
sahf
jns
js
arpl
dec
je
or
ret
es
add
repnz
dec
in
lahf
incl
adc
icebp
pushl
imul
add
add
sbb
or
or
mov
adc
jo
fdivrp
cltd
scas
js
stos
aam
push
lods
std
jnp
xchg
xchg
jo
cmpsb
mov
xorl
shl
xchg
roll
adc
inc
mov
imul
add
sbb
daa
rol
and
cli
cmp
or
jl
mov
cs
inc
cs
jb
xchg
fidivl
jg
lods
mov
out
mov
loope
ss
pop
mov
mov
dec
sbb
into
aaa
out
scas
cwtl
mov
mov
cs
fwait
mov
ja
test
outsl
mov
and
jg
divb
xor
pop
jle
pop
sbbl
movsl
cmp
xor
push
enter
in
sub
jbe
stos
pop
mov
or
pop
pushf
jmp
xchg
xchg
or
add
iret
lret
fs
cwtl
jg
xor
add
push
icebp
out
mov
jno
movl
sbb
lret
in
test
je
lea
mov
ss
xlat
icebp
cmp
test
repnz
cli
xchg
out
xor
insb
sti
out
icebp
and
mov
add
dec
mov
mov
adc
sbb
jmp
or
imul
pop
push
jl
out
shlb
add
push
xchg
mov
push
aam
or
jl
jno
cld
xchg
mov
xor
ja
scas
lahf
cmp
repnz
dec
mov
xchg
nop/reserved
dec
mov
xchg
sti
jle
push
adc
dec
add
sub
stc
call
lcall
shlb
or
push
lret
jo
mov
mov
and
mov
push
repz
jecxz
jmp
gs
in
loop
shlb
mov
push
loopne
inc
int3
test
mov
or
sarl
test
adc
cli
mov
and
mov
sub
mov
shll
ret
mov
iret
out
sub
test
jecxz
or
mov
das
cmp
dec
dec
fnsave
out
xchg
outsb
pop
or
test
push
lahf
cs
push
xchg
cmp
xchg
dec
imul
or
lahf
notb
movsl
test
cmpl
sub
mov
out
jne
adc
ljmp
mov
mov
mov
mov
jb
or
xor
jnp
aad
mov
sub
fistl
xchg
jp
inc
ss
pop
cs
mov
mov
xchg
push
cmpsb
mov
lods
aaa
mov
or
xchg
lcall
rorb
cmpsb
dec
xchg
fwait
adc
sti
lods
mov
sub
imul
mov
js
inc
dec
ja
out
mov
dec
test
and
inc
aam
xor
add
out
xchg
pop
mov
add
cmp
mov
mov
test
mov
push
int
adcl
jmp
push
jo
lahf
mov
xor
sbb
or
aad
out
or
or
inc
rclb
sbb
or
js
jb
call
xchg
aaa
inc
enter
lea
lahf
cli
mov
add
outsb
in
xchg
push
mov
fists
dec
jl
lods
inc
or
cwtl
or
add
jne
mov
mov
cmp
jno
push
jo
fidivs
dec
jne
jns
fists
sbb
xchg
xchg
push
dec
arpl
cwtl
cmp
movsb
stc
push
fs
cmp
inc
scas
mov
repz
in
std
adc
sub
shrl
ret
ja
pop
pop
out
lea
xchg
dec
popf
sarb
inc
leave
dec
xor
dec
sahf
ret
lret
mov
dec
sti
inc
fs
xor
imul
fwait
sbb
inc
nop
sub
imul
fs
inc
add
idivl
xor
rcrl
adc
nop
adc
jbe
xor
std
sbb
mov
cwtl
pop
cltd
roll
mov
sub
cs
inc
mov
ficompl
push
test
xchg
mov
rcl
popf
adc
mov
ljmp
subb
adc
andb
inc
adc
popa
fcmovnb
lcall
mov
dec
xchg
loop
add
cmp
or
mov
cwtl
sbb
pop
mov
cmp
jo
fidivs
jmp
pop
sbbl
lret
add
notb
arpl
and
inc
movups
jmp
jb
aas
sbb
pop
or
push
adc
in
orb
sub
addl
lds
loopne
loope
test
push
negl
ds
jno
dec
push
testb
popa
cmpsl
fbstp
mov
fnstsw
mov
jp
and
mov
fbld
xor
faddl
cmp
adc
mov
shr
cmp
xchg
hlt
mov
mov
shr
cltd
and
in
jo
rcll
mov
adc
out
sbb
mov
jmp
add
les
mov
clc
mov
je
pushf
outsl
sub
ficoms
or
lahf
test
arpl
push
sbb
sti
in
mov
sub
push
pop
fsubr
cltd
int
or
clc
dec
hlt
dec
push
mov
cwtl
push
mov
mov
cmp
sbb
xor
popa
fwait
and
outsl
xor
or
pusha
sub
sub
add
or
das
arpl
repnz
clc
hlt
fisttpl
mov
mov
or
fwait
cwtl
sub
jecxz
cmc
lret
add
mov
xchg
lods
icebp
jae
cmp
sbb
pop
icebp
and
mov
out
and
xor
fcomip
sbb
mov
lahf
mov
dec
mov
xchg
movsb
lods
push
dec
cmc
adc
or
mov
lret
rorb
mov
push
pop
inc
call
sub
mov
pop
push
or
in
dec
push
or
sub
jecxz
scas
fsubr
repnz
push
push
push
add
sar
xor
xor
les
xlat
lahf
inc
xchg
lods
orb
mov
dec
pop
sub
in
je
pop
jle
xchg
xchg
out
mov
add
out
movl
sbb
lcall
mov
or
sbb
cmp
jl
inc
xor
mov
mov
push
xchg
ja
jno
or
mov
inc
inc
and
cli
jae
shll
inc
add
add
cmpsl
lcall
push
mov
sub
pop
cmp
fsubrp
sahf
jge
arpl
push
in
int
test
and
push
sbb
lds
jns
nop
jg
popa
jp
aaa
pop
filds
mov
and
jecxz
test
push
push
sub
push
popa
ja
into
adc
or
mov
shrb
sarl
jb
in
pushf
inc
mov
nop
adc
push
mov
adc
xor
cli
push
pop
les
dec
pop
fs
jg
insb
sbb
daa
stc
push
xchg
push
mov
dec
cmp
xor
lahf
leave
cmpsb
or
xchg
sub
dec
int
addr16
or
pop
leave
outsb
fidivrl
pop
jle
dec
pop
test
mov
mov
push
mov
jo
mov
push
sbb
dec
enter
push
aas
pop
arpl
mov
xchg
push
cmp
sbb
mov
xchg
jle
sbb
dec
js
test
insb
or
movl
loopne
scas
mov
int
adc
pop
push
ret
shrb
cmpsl
test
repz
cmp
and
in
cmp
call
fists
repnz
xor
or
cs
jmp
mov
sbb
in
out
and
xor
imull
push
cmp
push
out
pop
popa
out
xchg
inc
inc
lds
or
inc
fstps
sahf
dec
or
popa
mov
lock
loope
push
xchg
ret
cmp
sub
xor
mov
stos
jp
add
repz
ret
jmp
mov
stos
sbb
inc
repz
lret
mov
rcrb
push
fdivrs
lret
mov
push
enter
push
in
sbb
jae
add
cli
xlat
mov
push
pop
mov
ds
cmp
jmp
movsb
outsb
push
lahf
inc
subl
dec
shll
imul
pop
icebp
push
inc
sbb
into
mov
mov
add
jns
pop
mov
sub
gs
je
push
cmp
test
fimuls
inc
loopne
cld
dec
jge
pop
fdivr
inc
mov
incl
ss
dec
divb
and
and
xchg
mov
hlt
jbe
cld
jge
push
mov
or
mov
enter
int3
xor
cs
or
sbb
adc
in
mov
mov
mov
xor
outsb
and
out
out
pop
adcb
hlt
pop
mov
leave
ret
lods
fistpl
mov
pop
xor
fcmovnu
jmp
cmp
pop
pop
mov
pushf
adc
dec
mov
adc
out
cmpsl
cmp
ret
ret
jnp
inc
and
fcmovnb
sbb
fs
aam
shrb
fwait
xor
adc
fneni(8087
out
dec
xchg
insb
out
ja
xchg
ret
cmp
dec
pop
in
mov
test
data16
in
out
mov
fiadds
jecxz
jge
cmp
push
scas
test
dec
mov
cwtl
ljmp
mov
jl
fucom
mov
scas
jge
sahf
lret
mov
mov
mov
push
jp
cmp
lcall
pop
xchg
call
push
iret
cmpsl
pushf
xchg
nop
loop
push
mov
mov
and
sbb
xchg
or
lock
outsb
sbb
add
ret
mov
les
lcall
sti
inc
inc
into
aas
sub
loopne
sub
push
cmpsl
mov
push
rep
xor
push
inc
jae
mov
sti
cli
cmp
scas
xor
adc
int
push
out
cmpsb
sub
jge
ds
addr16
mov
pop
sub
leave
fst
adc
lods
xchg
fldt
xchg
fisubl
jno
push
out
mov
sub
jge
mov
xor
ss
mull
push
push
adcb
movsl
jecxz
call
cmpsl
cmp
lods
xor
mov
mov
mov
arpl
mov
in
fs
in
loop
sbb
jae
cmp
push
mov
mov
inc
test
cmp
shlb
push
push
push
jmp
fnstcw
nop
xchg
ljmp
mov
pushf
insb
mov
inc
imul
in
push
xchg
cmp
outsb
or
movsb
xlat
int3
or
jge
pop
and
cmp
cmp
daa
lret
mov
push
lock
out
mov
adc
test
or
into
mov
mov
pop
sub
add
stos
daa
sub
push
test
jbe
stc
aam
xchg
sbb
mov
sbb
int3
xchg
rcll
xchg
bound
xor
jae
cld
lds
dec
js
test
cmp
xor
or
sub
movsl
sub
pop
jnp
sbb
js
push
add
mov
mov
test
jns
insl
mov
pop
mov
pop
out
pop
inc
mov
xor
push
push
sub
into
les
sti
mov
nop
sahf
cmc
ds
push
xchg
movsb
int3
std
test
clc
faddl
mov
cmp
xchg
inc
fsubs
rcr
repz
push
sub
aaa
testl
mov
cmp
mov
and
dec
mov
jno
jne
pop
sti
jb
push
jbe
mov
dec
sbb
pop
or
sbb
jle
push
sbb
negl
cs
daa
subl
fstpl
xchg
filds
jae
in
insl
std
stos
les
jnp
leave
stos
and
jmp
mov
aas
mov
mov
cmpsl
aam
or
outsb
pop
test
arpl
dec
add
mov
cld
sub
insl
adc
push
fisubl
push
sub
cmpb
and
movsl
scas
in
jg
les
mov
mov
rorl
dec
or
data16
mov
fstpl
nop
fdivrs
ud1
pop
push
dec
sahf
rcll
lods
xor
xor
mov
enter
dec
imul
jno
mov
mov
rcrl
cld
in
nop
stos
daa
es
lock
jmp
ja
je
adcl
cwtl
inc
jle
test
in
fwait
test
adc
cltd
jb
movsl
adc
sbbl
loope
sbb
xor
push
loop
adc
mov
pop
in
lahf
jno
cltd
or
adc
cmp
or
lock
push
sahf
jb
sub
jne
lret
fwait
sbb
mov
aaa
jl
jb
adc
inc
das
mov
pand
int
popa
sub
cmp
hlt
fnstenv
mov
jno
data16
mov
sub
outsl
call
test
scas
out
cmp
mov
imul
arpl
adc
popf
popf
pop
push
cmpsb
es
or
je
clc
sub
dec
sub
lods
pop
xor
and
fisubrl
push
jge
cmpsb
sbb
and
shr
imul
mov
sub
int
sbb
mov
ljmp
stc
lea
enter
sbb
js
add
aas
xor
xor
dec
sub
push
adc
and
mov
add
das
inc
mov
sub
mov
inc
dec
fucompp
sbb
xlat
and
pop
mov
ja
mov
aad
adc
push
sbb
push
cmp
cwtl
call
cmp
aas
popa
lods
mov
scas
shl
out
adc
jl
aad
int3
jp
lea
cmovo
pop
adc
xor
sub
pushl
leave
rorb
adc
xor
in
loopne
aas
add
xlat
lods
push
mov
adc
call
and
add
jae
imul
push
sub
lds
sub
sub
sub
and
lods
jnp
je
ss
stos
popf
and
adc
pop
adc
js
and
push
movsb
ss
icebp
aas
mov
sbb
jge
sbbb
or
insb
push
push
mov
mov
insl
and
jb
jg
mov
fistpl
mov
int3
xchg
xchg
xchg
test
loopne
test
lea
scas
inc
nop
or
push
cmp
jp
mov
movsl
xchg
gs
shrb
xchg
and
iret
jae
sub
cmp
nop
clc
aaa
lods
jno
push
test
or
es
push
push
mov
mov
pop
xor
dec
ss
add
stc
popw
cmp
inc
pop
repz
scas
ja
pop
stc
push
fidivrs
aaa
aaa
add
mov
mov
lds
idivl
enter
arpl
mov
pop
into
xchg
mov
or
aam
xor
cltd
jno
outsl
cltd
xor
test
mov
scas
mov
bnd
icebp
jecxz
and
fisttps
pop
ss
mov
loop
cmp
cmpsb
int3
mov
mov
mov
addr16
push
push
dec
mov
js
or
cmpb
inc
xor
cmpsb
cs
mov
jl
repnz
mov
inc
mov
cmc
dec
outsb
fadd
mov
es
jmp
jmp
sbb
jns
xchg
mov
enter
into
outsl
hlt
fstpl
stc
out
add
sti
mov
fcompl
stos
test
mov
mov
daa
in
pusha
lret
dec
idivb
sbb
xor
mov
pop
inc
scas
xchg
fdiv
push
jecxz
xor
bound
jns
es
test
mov
mov
test
out
mov
ljmp
cmpsb
aad
and
and
push
icebp
add
nop
xchg
sbb
fstpt
jnp
xlat
or
and
negl
rorb
pushl
negl
stc
dec
or
sbb
mov
xor
fldenv
mov
mov
push
div
into
mov
jp
fs
arpl
mov
sub
mov
pop
mov
lret
cwtl
setne
adc
cwtl
test
push
lods
pop
movswl
daa
dec
loop
in
rcl
sar
dec
ja
popf
xchg
xlat
cmp
inc
dec
mov
xorb
in
xor
pushf
outsb
hlt
or
cmpsl
out
iret
fdivrs
sarb
sbb
inc
addr16
sub
lods
mov
sahf
aam
inc
dec
decb
mov
add
inc
mov
test
sbb
inc
xlat
mov
and
scas
add
and
hlt
repnz
test
in
push
sti
mov
icebp
fwait
js
pop
sbb
mov
inc
imul
in
movsb
mov
outsl
out
cmc
jecxz
sti
sarb
js
inc
cmp
push
xchg
test
jg
push
add
into
adc
out
mov
je
aam
sbb
psadbw
jne
and
adc
pushf
xchg
xchg
mov
cs
pop
xchg
and
jge,pt
cmp
inc
inc
push
mov
or
mov
mov
jle
xor
adc
inc
imul
xchg
stc
lock
out
mov
ss
das
inc
es
push
jae
or
outsb
pop
xor
int3
stos
jp
cmp
sti
fadd
jae
push
dec
and
or
sbb
push
into
inc
pop
xor
xorl
sub
test
ret
out
fcomi
pusha
out
scas
lods
jns
repnz
ret
pop
push
arpl
pop
rep
xchg
pop
jge
insb
xor
and
xchg
js
test
insl
add
xchg
sete
xchg
xchg
je
into
sbb
inc
adc
jle
pop
jmp
rorb
jo
imul
push
sbb
xchg
adc
ret
dec
lods
jl
add
mov
fwait
cmp
pop
mov
gs
cmp
fwait
mov
pop
push
pop
adc
xchg
out
or
xchg
in
rol
out
out
dec
comiss
jg
push
popf
add
adc
daa
cwtl
xchg
jmp
cmp
sbbl
loop
cmp
loop
sbb
mov
mov
jb
vandps
test
and
mov
or
jnp
xor
jle
cmp
out
pop
mov
jp
shl
pop
add
inc
jns
out
leave
mov
fucomp
mov
out
add
cmp
mov
in
cmpsl
dec
loop
test
rcr
cmpsb
nop
jmp
push
or
lcall
sub
loopne
cli
add
jg
xor
add
sbb
sahf
icebp
mov
incb
sub
jl
leave
inc
push
imull
sbb
jnp
aaa
and
xor
int3
lods
sbb
inc
adc
aam
cmp
jle
push
xchg
sbb
bound
pop
ret
in
jp
sar
fbld
stos
rolb
cld
pop
pop
popa
lods
out
dec
ret
mov
mov
mov
cmp
out
add
pushl
inc
fsts
add
out
rolb
inc
xchg
test
and
or
sarb
notb
add
xor
inc
fnsave
popf
xor
ret
lock
in
stc
pop
es
les
enter
mov
jno
jecxz
dec
fisubl
outsb
inc
mov
push
xchg
sub
xor
iret
mov
div
leave
mov
push
push
jae
jne
mov
jp
jge
scas
je
fadds
test
arpl
adc
sub
pop
mov
rcll
call
and
sub
ds
or
push
sbb
sub
movsl
mov
test
and
es
fwait
cltd
sub
dec
mov
insb
cmpsl
int3
xchg
enter
push
sub
cmp
inc
sbb
out
lock
mov
movsl
push
mov
push
mov
xor
icebp
mov
lcall
shll
stos
inc
mov
into
xchg
sbb
outsl
dec
mov
fnsave
push
and
clc
stos
mov
out
ret
cmp
adc
cld
dec
sbb
push
and
std
push
cmp
int3
xchg
jge
xor
movsb
shlb
sarb
test
lods
incb
or
loope
int
mov
mov
fildl
sub
adcb
cmp
mov
test
and
sub
cmp
add
sub
mov
add
or
jle
mov
ljmp
arpl
add
insl
sahf
mov
dec
loope
jl
pop
dec
cwtl
js
not
fmuls
sbb
pushf
stos
ret
pop
mov
mov
add
mov
dec
and
mov
bound
pop
xchg
out
adc
out
hlt
sbb
popa
testl
lcall
xor
jno
and
adc
mov
jnp
pop
mov
fmull
decl
pop
outsl
cmp
ret
adc
out
insb
jno
adc
imul
cmp
inc
arpl
gs
mov
push
fcomps
mov
fstp
and
jmp
loopne
adc
in
jbe
repnz
jecxz
dec
push
or
orb
popf
pop
adc
pop
and
int3
movsl
and
inc
dec
inc
arpl
cmp
imul
movsb
ja
dec
jno
xchg
or
cmc
clc
jecxz
insb
pop
out
stos
xor
test
lods
xor
jmp
stos
sub
pop
lcall
test
push
jg
pop
mov
inc
xchg
inc
pop
inc
dec
jmp
sbb
fimuls
in
jnp
jo
and
or
dec
aaa
popa
daa
test
mov
pop
out
xchg
lcall
add
add
cvtps2pi
lret
mov
or
xor
out
and
pop
sahf
ret
xchg
mov
test
in
cmp
es
xor
popa
inc
iret
mov
daa
push
notb
fisubs
sarl
and
repnz
pop
fstl
stc
push
fsubl
adc
sahf
fnstcw
nop
cmp
mov
mov
mov
mov
add
and
adc
mov
jno
add
icebp
mov
cmp
clc
sub
pop
sub
push
loope
or
xor
ret
xchg
dec
push
mov
pop
push
leave
mov
hlt
lods
dec
mov
mov
inc
pop
fimuls
dec
xor
rcrl
dec
int
sbb
movsb
mov
cmpsl
cld
adc
je
js
cld
push
xor
test
rcr
lahf
sub
fisubrs
adc
mov
mov
pop
adc
fstpl
inc
and
and
mov
sub
add
outsb
add
es
pop
js
jge
neg
mov
adc
jae
mov
call
cmp
mov
cmp
ret
inc
pop
jg
add
mov
mov
loope
in
mov
mov
shrb
insb
bound
cmp
push
fdivrs
cli
nop
js
cwtl
sbb
adc
push
ljmp
pop
out
imul
mov
push
inc
repnz
scas
fdivr
jnp
mov
or
incb
push
aad
xchg
xor
mov
push
add
mov
add
data16
xchg
jecxz
lret
mov
xchg
shrb
xor
pop
out
ss
xchg
jle
mov
push
mov
in
adc
in
add
hlt
or
fnstenv
cmpb
mov
pusha
sti
cmp
or
push
loop
adc
pop
loopne
pop
jl
xor
xor
cli
mov
leave
daa
shrb
fmul
imulb
arpl
mov
jp
data16
mov
shll
nop
fstpl
jnp
mov
xchg
fs
sbb
inc
adc
push
or
cld
test
mov
ret
cwtl
or
xor
test
sub
pop
dec
sub
movsl
lea
fucom
das
lcall
adc
cld
mov
cmpsl
aaa
dec
pmulhw
jl
jmp
stos
sub
sbb
cmp
leave
gs
popf
jo
data16
test
iret
and
xchg
test
sti
cmp
lods
inc
testb
in
bound
sbb
sbb
push
xor
push
pop
pop
push
stos
push
inc
push
adc
scas
fnsave
ss
or
lret
out
jae
psllw
fnstenv
imull
in
adc
inc
fidivl
adc
mov
ret
insb
xor
xor
ja
xchg
lods
cwtl
repnz
mov
faddl
inc
fimuls
push
jnp
scas
pusha
adc
pop
sti
cmpl
sub
dec
stc
inc
es
cmp
push
in
iret
les
xchg
dec
aaa
leave
jb
test
or
scas
daa
and
xlat
imul
adc
sub
xor
sub
cmp
out
push
pop
xchg
xor
sub
loop
cmp
mov
jb
sbb
cmp
andl
sti
pushw
arpl
outsb
cs
ret
cmp
mov
cli
inc
mov
push
push
add
in
dec
int
inc
das
stos
xor
pop
xchg
mov
sahf
mov
jp
fisubrs
sub
popf
pop
xor
call
lods
mov
and
andb
jo
adc
gs
jae
adc
movsb
fcmovbe
sbb
jnp
fcmovu
mov
ds
xor
insb
and
enter
out
sub
xor
ss
dec
js
lret
sbb
jnp
inc
mov
daa
rolb
inc
xor
lcall
fdivl
stos
pop
mov
mov
ret
cmp
ja
add
in
jo
aas
ja
add
adc
insb
aam
scas
push
decl
sub
test
mov
or
cltd
jns
mov
mov
or
outsb
jo
sbb
lret
in
data16
idivb
mov
mov
push
and
outsl
rclb
outsl
aam
jnp
call
push
or
mov
call
sbb
mov
outsb
pop
push
adc
pop
jge
mov
inc
mov
mov
in
mov
and
mov
cmc
jb
xchg
jg
mov
pop
add
lods
lods
push
cltd
xchg
cltd
dec
ja
cld
insl
js
jbe
outsb
test
pop
in
mov
cmpsl
addb
ss
push
fcmovbe
dec
push
enter
mov
in
or
inc
jno
mov
movsb
add
jbe
aam
mov
ja
dec
xor
mov
fmul
sub
mov
or
mov
pop
dec
loope
mov
pop
sbb
pop
jecxz
addr16
pop
fwait
pop
adc
rclb
lods
push
jl
std
in
fstpl
mov
add
sbb
mov
xor
or
jns
jne
mov
hlt
xchg
lds
int3
jb
mov
pop
xorl
jle
les
mov
xchg
jae
jne
or
shlb
or
mov
subl
pop
shl
sbb
into
pop
dec
in
mov
jno
sbb
adc
add
mov
mov
and
cs
mov
cltd
repnz
mov
rol
iret
mov
jb
dec
add
mov
xor
push
mov
xchg
xor
xlat
adc
and
push
nop
fbstp
adc
out
xchg
ja
loop
dec
inc
or
in
int3
push
loope
pop
adc
je
ret
push
int
shl
int3
xor
sub
mov
sub
pop
jbe
xchg
sbb
gs
cmp
sbb
sub
outsl
in
ds
rcl
mov
jb
mov
mov
add
push
pop
push
cmpl
add
stc
lahf
sahf
lods
adc
adc
pop
lret
mov
ljmp
xor
mov
loope
add
enter
inc
movsb
push
adc
pop
stc
ficoms
les
pop
push
rorb
pop
jecxz
add
and
cmp
mov
dec
pop
mov
inc
add
adc
test
icebp
imul
aam
scas
stc
js
ljmpw
dec
les
cmp
jle
xchg
dec
adc
inc
clc
fdivp
push
stc
mov
insl
aas
or
jg
add
pop
cmpsb
shlb
xor
inc
jg
jb
ds
insl
push
out
lods
data16
out
mov
mov
xchg
mov
cli
inc
xor
test
push
push
push
adc
add
push
push
fs
jbe
imull
aas
leave
es
mov
cmpsl
dec
adc
loop
mov
int
lret
test
push
adc
cmc
push
and
lahf
xchg
mov
fidivl
xchg
in
dec
in
mov
xchg
mov
jne
push
mov
rolb
pop
sbb
repnz
add
jmp
out
movsb
stos
jge
rclb
sub
add
sbb
pop
fists
aad
jnp
dec
pop
inc
inc
sub
sub
js
and
push
xchg
gs
pop
stc
dec
mov
iret
clc
lea
cli
mov
fwait
or
push
jno
mov
mov
lods
addl
lret
aam
cmp
call
fs
xlat
mov
push
xchg
je
xchg
sbb
jmp
pop
inc
push
loopne
sbb
inc
imul
mov
pusha
hlt
sbb
mov
and
sub
sbb
imul
in
xor
jo
xchg
repnz
outsb
jmp
push
mov
sbbl
mov
aas
test
dec
sub
pusha
ficoms
cmpsl
xor
les
mov
int3
je
xor
ja
dec
mov
ds
mov
iret
push
mov
mov
xor
xchg
mov
imul
lret
mov
add
pusha
adc
in
cltd
mov
sub
dec
adc
and
xchg
mov
sbb
pop
xor
ds
mov
ss
xlat
push
jge
add
adc
popf
imul
or
or
mov
sar
ret
cmp
cmc
and
lods
pop
add
clc
cmc
pop
or
fisttpl
xchg
mov
lods
rcr
push
call
imulb
adc
mov
pop
lods
push
shll
or
test
lcall
cmpsl
pop
fisubs
call
adc
enter
lcall
fwait
jecxz
dec
fwait
jne
subb
js,pt
lahf
cmpsb
test
leave
mov
add
jno
mov
sbb
pop
shll
inc
scas
push
xchg
fiadds
out
nop
je
adc
inc
xchg
negl
push
cmp
adc
out
lahf
jmp
add
sar
cmp
mov
and
or
repnz
insb
test
adc
cmp
iret
in
icebp
mov
cmc
jg
mov
and
xchg
call
fs
jl
pop
fcmovnbe
jg
mov
and
jge
pop
mov
je
sbb
push
gs
pop
sub
sbb
lcall
mov
int3
mov
loop
ja
push
outsl
stos
xchg
unpckhps
mov
mov
xchg
jge
mov
xchg
jmp
pop
mov
push
pop
jl
jge
outsl
lea
int3
call
xor
ret
insl
cmp
lea
or
sbb
add
int3
mov
dec
outsl
xchg
push
scas
shrl
enter
enter
sub
notb
sar
mov
lahf
das
imul
mov
sub
int
and
rcrl
sahf
cs
mov
cmp
fistpll
mov
jge
in
sbb
in
dec
sbb
lds
mov
fldt
cmp
shlb
xor
cltd
push
in
or
dec
sbb
or
shll
int
les
pop
sub
fs
shlb
test
sbb
test
ljmp
jp
pop
adc
shll
and
in
cli
pop
mov
jbe
filds
test
pop
fnstenv
loop
out
lahf
adc
xchg
daa
xchg
mov
decb
mov
out
cmpsb
push
dec
adc
mov
stos
inc
cli
xlat
out
inc
jmp
jbe
fidivrl
dec
or
icebp
sub
int
pusha
cmp
cld
xchg
fidivrl
test
jnp
adc
in
add
bound
in
jae
adc
sbb
fiadds
clc
cli
pop
lods
pop
xlat
and
and
mov
pop
aaa
call
push
mov
jmp
mov
lcall
leave
xchg
cmp
repnz
dec
fldcw
out
std
pop
inc
and
nop
test
sbb
xor
and
jae
jbe
jns
mov
cmp
push
outsb
add
loopne
pop
push
movsl
imul
imul
mov
xor
dec
call
ss
xor
adc
pop
loope
inc
arpl
mov
push
mov
int
hlt
sub
test
lods
lock
dec
jp
outsb
loop
inc
les
fisubs
mov
sahf
mov
push
mov
mov
cmp
sbb
jbe
cmp
pop
mov
pushf
inc
jecxz
xor
xor
das
push
fwait
mov
aad
icebp
mov
lea
pop
movsb
or
pop
jl
push
mov
cmpsb
insb
mov
push
mov
daa
inc
das
xchg
xlat
or
inc
lock
xchg
pop
imul
pop
bound
fdivs
das
adc
mov
sbb
and
aaa
push
inc
and
insb
fstpl
pop
sub
jae
sbb
inc
and
lods
aad
bound
fs
push
sub
outsl
inc
jbe
cmp
xlat
clc
jp
fisubs
mov
add
xor
ret
mov
lds
and
sub
ret
shrb
arpl
xchg
fadds
testl
cli
pop
add
or
mov
and
lds
cmp
dec
aaa
lret
cmp
or
push
xchg
cwtl
mov
pop
in
pusha
loop
cmp
mov
add
aad
dec
lcall
rorl
mov
cmp
add
pop
in
int
out
hlt
or
jge
pop
push
jbe
leave
in
mov
movsl
adc
mov
mov
insl
mov
nop
pop
pop
scas
outsl
icebp
mov
or
imul
imul
add
xchg
rcl
sti
mov
xchg
adc
and
add
fcompl
ds
or
push
adcb
gs
push
notb
sbb
pusha
nop
lret
jg
xor
add
jecxz
out
push
loope
push
insb
push
repz
loope
arpl
dec
out
int3
stc
and
and
cs
ret
bound
adc
out
sarb
loope
add
je
movsb
outsb
into
add
hlt
out
and
xchg
pop
test
dec
xchg
xor
ljmp
jmp
push
sbb
jb
cmpsb
mov
in
xchg
inc
sub
mov
mov
push
jnp
mov
imull
mov
aam
push
sub
shr
inc
movsl
mov
jb
xchg
pusha
aam
cmp
lret
ja
jo
jge
sbb
imul
inc
stos
inc
push
stos
mov
jge
fcomi
dec
xchg
clc
and
insb
jo
lret
jo
sarl
movsl
mov
aaa
push
movsb
cwtl
and
fdivp
mov
add
cwtl
add
cltd
xor
sub
into
xor
icebp
xor
push
mov
ret
scas
stos
int
mov
mov
imul
inc
mov
dec
jns
jecxz
jge
ss
sbb
hlt
iret
arpl
dec
mov
and
add
fildll
ds
cmp
xorb
ja
movsl
jae
int3
mov
xor
xor
jae
addr16
adc
ret
rcrb
add
sbb
xor
add
dec
in
repnz
loopne
enter
lcall
sub
imul
jno
sub
sbb
sbb
movsb
push
aad
xchg
jne
cmp
mov
mov
adcl
or
inc
xchg
aad
adc
push
sub
fisubrs
sbb
loop
xor
fwait
cmp
dec
std
xlat
jno
push
fldenv
and
inc
rorl
xor
outsb
mov
aaa
cmc
inc
add
jecxz
mov
add
cmp
scas
repnz
call
pop
pop
ds
test
adc
sbb
sbb
pusha
jb
cld
jae
and
scas
bound
shl
stc
mov
inc
lahf
pop
imul
fs
into
cmpsb
pop
mov
pop
cli
pop
cwtl
jmp
push
repnz
mov
sbb
aad
or
dec
outsb
xor
inc
leave
lret
shlb
addb
fisttpl
push
adcl
jns
sahf
imulb
and
cwtl
dec
push
push
cwtl
lret
lods
in
xchg
imul
adc
jnp
push
subb
xchg
enter
xor
or
int
mov
and
push
lods
cmp
xlat
mov
imul
out
mov
out
jp
and
mov
loope
test
mov
or
mov
push
es
inc
mov
xchg
lahf
push
lds
adc
sbb
and
jp
scas
sti
repz
adc
repnz
orps
push
rorl
je
adc
push
mov
add
insb
std
subb
jns
fisttpl
push
notl
xor
aad
cltd
xor
loopne
bound
rorb
ficoml
pop
nop
push
lahf
sarl
cmp
pushf
and
mov
push
ljmp
pop
add
lahf
leave
inc
sub
mov
add
aad
sub
arpl
imul
xchg
movsl
mov
sbb
movsl
push
and
out
pop
mov
iret
in
cltd
push
push
fstps
xchg
jbe
arpl
out
add
std
sub
icebp
dec
call
scas
push
scas
cmp
add
or
mov
sahf
divl
mov
mov
mov
jns
test
leave
mov
insb
divl
subl
inc
notl
sbb
add
sub
or
push
xor
dec
repz
imul
mov
jbe
mov
or
fstpt
jmp
push
xor
inc
push
lea
xchg
mov
rcll
shl
cmpsl
jne
sub
and
pop
jo
pop
jmp
sub
inc
adc
mov
cs
bound
negb
or
cmp
push
cmp
mov
cmc
das
sub
incl
push
dec
insl
out
or
movsl
lds
sub
aam
add
and
xchg
sub
int3
sbb
or
out
push
mov
jp
rolb
pop
das
outsl
cli
xchg
dec
or
das
mov
push
loope
xor
push
or
mov
sub
cld
add
out
lea
and
rcll
jns,pn
insb
mov
fmull
mov
out
mov
cmp
testb
jl
mov
push
mov
jecxz
scas
popa
dec
push
mov
popa
xchg
fcmovnb
pop
dec
cwtl
cpuid
in
adc
rcl
mov
cltd
push
fildl
jb
fucomi
push
mov
or
cmp
or
mov
jne
out
push
or
lahf
mov
xchg
sbb
mov
mov
sub
push
aaa
inc
outsb
in
jp
jge
stos
or
das
xchg
push
push
mov
fdivl
test
mov
jno
pushf
sub
test
cmp
pop
cmpsb
push
adc
pop
in
leave
pop
stos
shll
pop
scas
pushl
ss
jge
pop
cmp
dec
ret
cwtl
mov
sti
sbbl
inc
adc
jge
inc
jbe
rcll
and
hlt
int3
cmp
enter
dec
add
test
xchg
out
add
mov
int
sub
add
cmpsb
outsb
adc
mov
enter
je
mov
sbb
bound
aam
pop
jecxz
sub
fldcw
xchg
xchg
jae
push
pop
imul
sbb
fsubl
adc
inc
les
fisttpll
leave
xchg
adc
cld
inc
int3
push
xor
shll
xor
jne
add
jne
xor
mov
fnstenv
xchg
inc
scas
mov
sbb
aad
fwait
popa
push
test
mov
imul
xchg
call
scas
push
mov
jl
pop
push
mov
ds
mov
cmp
int
lahf
sub
jp
ljmp
add
inc
pusha
pushf
js
out
cmpsb
imul
je
js
movsb
cmp
sbb
sub
add
pop
stos
out
inc
dec
lock
mov
loop
repz
fcoml
jmp
mov
rol
mov
aaa
rorl
adc
sti
fidivs
dec
mov
ficomps
insl
jnp
rcll
test
xchg
shlb
aad
jnp
in
ret
xor
dec
pop
lahf
fsts
cld
fiadds
or
mov
inc
mov
mov
pop
stos
add
pop
xchg
mov
data16
int3
jle
mov
mov
jbe
lds
jg
xchg
out
inc
push
subl
subl
dec
pop
xor
in
loope
imull
adc
adc
jo
sbb
rorl
int
sub
dec
test
mov
and
insb
icebp
lock
mov
pop
add
dec
fcmovu
in
cmpsb
test
shlb
lods
sub
pop
icebp
sbb
sahf
lock
loop
or
mov
scas
aad
inc
sbb
pushl
pop
jg
bound
add
or
adc
loope
leave
and
js
sub
dec
outsb
fistpl
mov
pop
cmp
sbb
pop
les
cld
sbb
call
imul
push
ljmp
arpl
pop
pop
loope
imul
jno
lock
mov
add
ret
sbb
pop
hlt
pop
xchg
hlt
arpl
fldl
sbb
mov
sbb
mov
stos
out
ss
test
xchg
sub
dec
mul
ss
loope
pop
and
dec
test
sbbl
adcl
xchg
lods
push
adc
dec
and
pop
xchg
dec
sbb
loop
aad
pop
sahf
jne
sti
sub
ror
stc
pop
ds
test
roll
jae
dec
les
out
sub
je
add
aas
fidivs
ja
ds
mov
mov
popf
mul
dec
lods
ret
hlt
int3
sbb
push
jns
add
xchg
movsl
pop
gs
cmpsb
rcll
inc
push
test
pop
pop
imul
xor
cmp
mov
rolb
pop
jb
inc
imulb
roll
das
adc
sub
ret
adc
jae
es
jecxz
push
ss
inc
mov
test
sbb
mov
inc
pop
mov
aas
into
pushf
insb
shrl
xor
outsb
dec
push
cmpsl
inc
mov
xor
inc
push
sub
mov
mov
cmpb
or
or
push
jmp
cs
scas
repnz
scas
movsb
adc
repz
cmpsb
jnp
cmp
adc
ret
jp
push
inc
aam
test
xchg
ss
dec
sbb
inc
shl
push
push
mov
cli
or
adc
dec
dec
dec
jnp
add
popa
std
ficompl
pop
outsl
pop
hlt
push
jg
inc
int
lods
sub
xchg
xchg
mov
and
and
cli
lea
aam
ficompl
push
int
test
jns
adc
xor
repnz
jne
fstpl
cmpsw
jmp
mov
seta
cmp
popf
push
push
push
push
push
mov
fdivrl
clc
popf
adc
clc
pop
shlb
cmp
cmc
sahf
lods
pop
mov
jno
dec
inc
and
test
mov
pop
dec
adc
ja
pusha
ja
xor
subb
ret
mov
outsb
clc
divss
jo
sub
jae
inc
fs
imul
jg
pop
pop
fimuls
cwtl
aam
in
aam
out
sub
push
js
repnz
lods
dec
mov
xor
or
scas
movb
push
ljmp
sbb
outsb
nop
ffree
movb
rcr
sbb
mov
lods
xor
sti
rcr
jae
jae
xchg
enter
push
out
pop
jnp
rcr
mov
cmp
in
loope
mov
ret
cmp
shll
mov
sub
pop
push
pusha
inc
stos
sti
xchg
sub
or
add
mov
jl
pop
jl
scas
cmc
cmp
dec
push
lea
rolb
aad
sbb
nop
sahf
jne
ret
sbb
loope
insb
fldt
and
sub
fdivrl
push
jo
test
jecxz
xor
adc
repz
std
jnp
cli
push
insl
cltd
add
ja
sbb
sub
sub
mov
int3
sbb
gs
xor
mov
sbb
pop
int
and
sub
insl
jge
nop
leave
mov
adc
jp
movsb
sub
std
push
push
imulb
popa
mov
jno
ror
lods
xchg
jmp
push
iret
loop
sbb
es
jne
pop
pushw
insl
call
fildll
out
and
push
mov
and
push
jle
dec
shrl
fs
sbb
inc
dec
mov
std
cmp
sub
icebp
dec
pop
mov
and
shll
jns
cmp
xchg
xchg
inc
sbb
sbb
pop
mov
les
and
xor
xor
lds
orl
mov
sub
cmpsl
out
ds
je
mov
push
mov
inc
pop
bound
repz
dec
setg
xchg
aad
sub
mov
wrmsr
mov
sbb
mov
mov
mov
mov
add
stos
rorb
xchg
jp
sti
push
pop
mov
out
outsb
pusha
lret
bound
sti
sbb
mov
ret
adc
cld
mov
xor
jecxz
inc
pop
xchg
fnsave
das
roll
movb
pshufw
addr16
std
or
mov
movq
xchg
or
sub
or
lea
push
xchg
fwait
in
pop
xchg
ret
ljmp
jno
mov
push
std
pop
add
and
stos
dec
outsl
xor
mov
add
jbe
fstp
lret
fs
std
ljmp
in
cmp
dec
add
sub
cs
sti
sbb
pop
rcll
and
xor
js
lea
aad
inc
js
or
jnp
jo
pop
imul
jl
jp
inc
ror
rorl
or
or
push
js
xor
sub
imul
mov
idivl
mov
sub
mov
scas
xchg
sbb
xor
ret
cmpsb
add
jg
push
jecxz
push
sbb
cld
aad
in
ljmp
xchg
fadds
setb
stos
fistps
addr16
sbb
cmp
js
daa
pusha
push
xchg
or
out
movsl
adc
cmp
cmp
das
or
arpl
cmp
xchg
jbe
mov
out
xchg
jge
fisubrl
cmpsb
fmuls
int3
andb
jbe
aad
mov
sub
cld
enter
icebp
pop
pop
ja
lret
sub
jnp
push
loope
push
sbb
cmpsb
add
or
repz
imul
and
in
mov
popa
sbb
jo
std
pop
dec
and
pop
jo
icebp
cmc
cmpxchg
cltd
add
cltd
mov
rolb
push
mov
sub
sti
insb
scas
stc
sub
or
add
orb
xor
push
jle
and
inc
mov
jnp
jae
imul
and
push
adc
xlat
cmp
out
add
or
push
pop
ficomps
ja
mov
sbb
push
mov
cmpsb
stc
ja
and
or
mov
js
std
cmp
repz
add
pop
das
cmp
add
cld
push
in
je
pop
ljmp
lahf
shl
clts
aas
lahf
repz
fsub
push
clc
mov
repz
mov
loop
cmp
pop
mov
inc
and
sbb
cmpsl
jne
push
aad
jle
cmpsl
add
and
mov
mov
cmp
inc
pop
lock
jne
shlb
sahf
in
neg
jbe
cmp
into
mov
data16
mov
jne
lods
inc
js
mov
jne
outsl
xchg
push
mov
jne
int3
inc
xor
cmp
mov
push
icebp
ja
xchg
dec
gs
cmp
push
or
test
or
ds
and
arpl
add
push
lret
mov
or
sahf
push
mov
stos
jp
mov
outsb
int3
sbb
mov
xor
add
or
push
cwtl
cmc
pushf
loop
and
dec
rorl
pop
jecxz
mov
negb
xor
in
cmc
stc
push
int
push
ret
orb
mov
outsb
sbb
adc
aaa
xchg
cmp
in
movsb
lods
inc
dec
inc
out
push
repnz
dec
push
add
or
and
fwait
xchg
xor
jno
sbb
imul
mov
inc
clc
ja
jg
and
iret
orl
inc
pop
imul
aam
or
xor
in
cwtl
adc
lds
sub
fists
mov
xor
mov
dec
dec
scas
or
pop
sub
scas
mov
dec
cmp
sahf
mov
add
and
pop
flds
stos
daa
cltd
inc
add
arpl
out
inc
ret
fst
aaa
jo
inc
sbb
inc
sub
pusha
jmp
cmpsb
dec
push
shll
fmull
movsb
cmovbe
add
inc
lock
ss
aaa
clc
iret
adc
ss
dec
cmp
push
lret
les
add
xor
add
xchg
ficompl
testb
cwtl
cmp
push
jp
test
inc
inc
mov
popf
xchg
push
and
mov
cmp
loop
das
or
lea
push
ficomps
cmpsl
xchg
or
movsl
mov
jmp
mov
aad
shll
xor
add
clc
cs
lret
sub
and
aas
cmp
cmp
adc
sub
nop
in
int
push
loope
lock
cmp
aas
fcomps
pop
or
xchg
das
cli
inc
fisttps
sub
pop
test
sbb
ficompl
add
pop
das
pop
pop
lahf
add
pop
js
test
add
sahf
jmp
std
jae
mov
iret
push
dec
xchg
mov
xor
xchg
fildl
shll
loopw
loope
xchg
dec
clc
and
test
inc
xchg
call
pusha
fdivl
jne
iret
imul
fdivr
rcl
pop
call
pop
dec
xchg
dec
sub
pop
cwtl
mov
test
jecxz
push
cwtl
std
in
out
cmp
xor
xlat
fimuls
imulb
cmp
xor
mov
je
jne
dec
in
cmp
inc
push
loope
inc
jnp
lcall
adc
out
aas
fdivrs
push
sbb
push
loop
jns
sbb
aas
lret
xlat
out
jp
adcl
xchg
add
lcall
push
cmp
cmp
roll
xor
ljmp
mov
lahf
xor
adc
pop
lret
jle
dec
dec
pop
sti
add
in
xlat
icebp
movsl
nop
jl
cmp
inc
xor
cmp
or
mov
fisttpll
loope
nop
lcall
mov
or
shl
cmp
mov
add
inc
stos
addl
adc
push
xchg
xor
bound
enter
xchg
mov
dec
lcall
mov
dec
insb
popa
mov
sub
jg
adc
fcomi
mov
xor
movsb
adc
ficoms
femms
pop
xchg
int
mov
mov
cmp
mov
stos
out
mov
push
test
and
cltd
or
cltd
sub
xchg
loop
movsl
cwtl
inc
add
in
inc
mov
cmp
fcomip
lds
mov
mov
jl
mov
scas
inc
jb
lods
add
xor
add
cmp
xorb
mov
adc
add
testb
adc
xor
push
mov
ret
idiv
push
dec
int3
inc
jae
inc
pop
jne
test
subb
aaa
dec
xchg
imull
xor
or
xchg
adc
xor
jp
cmp
pop
scas
add
js
push
aaa
test
xchg
repnz
out
cmc
paddq
inc
sub
pop
push
das
mov
mov
add
or
lahf
xchg
outsb
ja
adc
fidivrl
repz
int3
mov
movsl
notb
icebp
jno
and
adcl
add
lock
xchg
sub
inc
add
cmp
jle
xchg
ds
cwtl
aas
scas
xor
push
adc
fnstsw
mov
jns
push
xor
mov
mov
adc
cwtl
push
mov
xor
and
jbe
sti
jbe
dec
cltd
jae
sbb
inc
xchg
mov
imul
jnp
add
push
call
stc
dec
push
cmp
add
loop
pop
lret
push
cmp
shrb
jb
cmp
sub
push
push
jb
inc
loope
lds
test
adc
dec
popf
stos
les
mov
loop
nop
decl
fldl
adc
mov
mov
fsubrs
idiv
jp
dec
or
movl
enter
ljmp
movsl
in
fs
lods
sbb
arpl
lds
sbb
adc
mov
push
cmp
shll
dec
ss
mov
testb
sub
sbb
and
loop
xor
jns
in
inc
test
push
call
roll
adc
js
mov
xchg
add
xchg
push
test
push
cmpsl
cmpsb
in
cmp
adc
inc
repz
out
xlat
pop
xchg
loopne
adc
or
jno
inc
add
inc
leave
add
jl
aad
inc
mov
jno
cmp
xor
lret
and
fsubrp
pop
sahf
add
es
out
xor
sub
xchg
imul
ja
test
adcb
and
bound
or
add
sub
dec
cld
daa
sti
jo
pop
arpl
shrb
jns
dec
in
js
adc
push
inc
int3
pop
mov
xchg
xchg
ss
shrb
push
sbbb
movsl
in
imul
out
in
xor
lods
aas
xchg
mov
jl
mov
sbb
test
jo
fistpll
cmpsl
daa
push
mulb
test
lret
and
addb
push
daa
pop
mov
xchg
sub
mov
push
insl
mov
inc
stos
bound
jl
out
add
cmp
xor
stos
sahf
cmp
fstl
outsb
imul
adc
pop
mov
nop
movsb
ret
or
mov
repz
add
cld
add
sbbl
sahf
mov
sahf
loopne
mov
xor
jo
call
push
int3
pop
sbb
cmp
and
fwait
push
addr16
mov
mov
out
popa
std
add
fs
mov
add
push
jl
xor
mov
push
mov
push
mov
aad
repnz
add
jmp
insb
hlt
mov
jno
orb
dec
push
lock
xor
mov
iret
cmp
mov
dec
bound
lds
xchg
xchg
cmp
cwtl
jg
sub
xor
cmc
fnsave
popl
sub
dec
in
inc
push
cmp
pop
or
adc
es
pop
jnp
push
dec
cs
push
aaa
mov
mov
xchg
mov
mov
mov
enter
paddusb
mov
fs
xchg
inc
pop
cmp
dec
es
mov
aad
jbe
cltd
and
cmp
idivl
pop
xchg
xacquire
popa
cmp
repnz
into
mov
mov
dec
fwait
inc
sbb
fists
out
hlt
xor
sahf
stos
mov
jle
mov
out
and
xor
std
sub
jle
pop
xchg
gs
cmpsb
fistpl
adc
cmp
aad
pop
adc
add
push
les
inc
inc
sar
jne
ds
push
dec
sbb
cli
lret
add
das
das
ss
sub
inc
cmp
lds
loope
iret
popl
mov
cmc
fisttpl
leave
cmp
push
fstps
scas
shll
mov
fwait
lcall
xor
push
addr16
int3
in
mov
fs
mov
enter
inc
push
lods
and
scas
andb
add
inc
stos
jne
mov
incb
mulb
xchg
sarl
sbb
xor
sti
mov
addr16
push
test
mov
shl
xchg
xchg
sbb
inc
notb
sub
sub
mov
xor
dec
sub
fsubs
cmp
and
das
sarl
mov
shr
xchg
mov
fisttpll
jno
mov
adc
jmp
lea
inc
cli
adc
jle
and
mov
cmpsb
cmp
jecxz
movsb
xor
sbb
jo
jne
jne
rclb
xchg
in
test
jb
xchg
adc
push
repnz
decb
test
cmpsl
sub
add
hlt
popf
jae
push
dec
dec
hlt
in
clc
cmpsl
insb
mov
adc
fwait
test
cmp
xchg
mov
stos
sarb
pop
add
add
movsl
cmp
fdecstp
dec
cmp
xchg
add
je
insl
fiadds
inc
pop
hlt
mov
jl
pop
ja
jnp
insb
mov
daa
lods
or
sub
mov
sub
outsl
shrb
lea
aas
lods
in
pop
jne
and
in
outsb
cmpsb
fucomip
ljmp
stos
mov
das
jns
in
cltd
gs
push
out
sbb
cs
cs
add
dec
ret
imul
idiv
mov
pop
cmp
mov
push
stos
add
shrb
push
or
jnp
add
sbb
insb
in
movsl
mov
iret
outsb
sub
out
inc
sbb
and
rcr
mov
pop
js
out
and
test
jno
scas
add
dec
xchg
pop
mov
inc
sahf
jge
mov
mov
pop
push
sbbl
lahf
sub
xchg
push
mov
rcll
fsubr
scas
xchg
push
das
aas
sarl
jne
imul
imul
inc
ds
hlt
arpl
cld
or
dec
aaa
sub
cmc
pop
fs
mov
sub
jns
pop
sub
pop
std
rorl
xor
test
cmp
lds
js
insl
lcall
lds
movsl
int
adc
pusha
sbb
sub
loop
add
icebp
test
gs
out
int
jecxz
and
ret
mov
lock
cmpsb
jmp
xor
adc
outsb
sub
pop
cltd
lret
lea
or
xor
jmp
and
push
shlb
dec
cltd
test
xabort
jg
outsl
sub
and
je
cmp
add
std
inc
arpl
sub
iret
dec
out
in
mov
mov
jmp
subl
cltd
sahf
or
mov
popa
iret
jle
add
pop
in
leave
lcall
pop
sahf
pop
in
or
in
sbb
add
and
mov
mov
fnstenv
mov
shll
mov
or
xchg
test
sbb
cmpsb
repz
fiadds
pop
adc
aam
push
sarl
jno
push
mov
jae
mov
dec
xor
sbb
or
ret
sbb
mov
sbb
sbb
mov
fucom
pushf
xchg
cmp
sti
push
cmc
adcb
pop
add
aas
iret
lea
rorb
icebp
or
mov
aad
orb
mov
es
frstor
je
js
mov
xchg
or
bound
jmp
sub
inc
into
pop
inc
stos
sti
xor
ljmp
fwait
rcl
mov
inc
arpl
pop
je
mov
sub
pop
lahf
fcompl
xor
jb
mov
leave
ljmp
mov
hlt
sub
sar
mov
daa
scas
stos
movsb
out
jmp
jbe
rolb
popf
jge
mov
imul
adc
pop
pop
adc
pop
sub
out
jg
out
stos
push
xor
push
pop
in
ret
daa
xor
and
std
es
stc
out
jnp
sub
movsb
adc
stos
pop
push
adc
cmpsb
mov
sbb
out
push
lock
stc
xor
push
es
popf
stos
sbb
loope
pop
data16
mov
pop
xchg
pusha
pop
dec
mov
jns
dec
scas
mov
dec
mov
out
mov
pushf
mov
and
xchg
push
pop
imul
pop
test
das
xchg
xor
arpl
aas
fstpl
mov
sar
jp
pop
mov
adc
push
mov
iret
mov
adc
dec
fwait
mov
pop
xchg
cmp
lahf
test
dec
push
insl
enter
jp
xor
nop
add
dec
loop
mov
hlt
sbb
sbb
or
cmp
daa
jns
scas
leave
test
hlt
mov
dec
es
jae
push
pop
fxch
subb
adc
jae
cs
add
fsubrs
jle
mov
and
mulb
adc
mov
dec
jb
mov
cld
lods
scas
gs
and
mov
jbe
xchg
out
aam
andb
pop
inc
stos
push
cmp
pop
dec
cmc
mov
jmp
hlt
and
xor
sbb
test
cmp
int3
add
mov
daa
cli
sbb
stc
dec
cmpsb
std
xchg
mov
inc
repz
mov
pop
les
cmp
sti
imul
arpl
fs
popa
pop
test
push
or
stos
or
sbb
iret
mov
ret
jecxz
dec
inc
dec
gs
fldl
mov
fldenv
sbb
mov
jns
gs
cwtl
stos
adc
sarl
push
and
and
imul
fwait
jp
jmp
mov
pop
mov
sbbb
fsts
divl
fidivl
dec
sub
loop
call
repnz
inc
inc
mov
xchg
xor
je
dec
movsb
xchg
adc
dec
xchg
gs
mov
fcmovnbe
mov
mov
push
ss
mov
xchg
sti
shr
loop
add
xchg
ss
outsl
sbb
jnp
outsl
push
dec
or
das
sbb
mov
mov
jecxz
rorl
jbe
in
scas
test
pusha
addr16
sbb
sub
mov
dec
xor
mov
mov
repnz
iret
fidivs
xchg
pop
mov
rorl
lret
call
mov
data16
addr16
jle
nop
loop
repz
dec
xchg
icebp
faddl
dec
push
pop
jg
roll
push
scas
jno
push
dec
add
push
cmc
jle
cmpxchg
stos
or
xchg
ljmp
out
jb
gs
mov
lds
sahf
add
adc
ds
or
jne
sbb
int
rclb
jl
jmp
loope
push
or
and
les
test
add
bound
test
xchg
test
call
xchg
inc
sbb
in
loope
repnz
jbe
out
stos
mov
mov
sub
or
add
mov
xchg
les
mov
mov
add
lcall
jmp
ret
or
mov
lea
pop
push
mov
es
xor
inc
mov
out
push
sbb
test
shlb
js
js
sbb
subb
inc
iret
in
dec
jmp
subl
push
int3
imul
int3
ret
lds
popa
xchg
pop
test
adc
out
xor
dec
sbb
ss
or
or
outsl
jo
and
fidivs
mov
add
xchg
lds
stc
jecxz
xchg
mov
aas
pop
xor
lahf
std
lahf
or
outsl
mov
gs
add
aad
pushf
pop
sahf
inc
fs
xchg
adc
outsb
fs
dec
mov
inc
pushf
add
aaa
push
cmp
xor
subl
xor
pusha
push
stos
cmp
jmp
in
jne
jno
shrl
cmp
and
daa
sub
lret
cld
stc
or
mov
adc
loope
shlb
subl
sti
mov
jecxz
repnz
lret
sti
loopne
adc
testb
outsb
mov
push
popa
adc
fstps
jns
xchg
cwtl
cs
xchg
insl
ret
cmp
loopne
subb
adc
mov
push
icebp
inc
mov
add
mov
hlt
sahf
dec
in
mov
jp
pop
cmpsb
and
mov
jmp
scas
mov
xchg
jl
mov
xor
fimuls
sti
lods
test
cmp
in
or
xor
popf
jo
scas
adcl
test
xchg
aam
mov
enter
shll
loope
push
xor
in
push
inc
lods
sbb
scas
out
mov
pop
sarb
addr16
ja
sbb
testb
aaa
pop
adc
scas
or
jg
cmp
add
jb
rorb
dec
pop
xchg
sahf
push
cltd
inc
sub
inc
call
ror
adc
leave
aad
mov
and
imul
je
nop
scas
add
pop
push
inc
lea
jecxz
js
subb
ljmp
mov
xor
subl
and
xchg
addb
jnp
sbb
sub
adc
test
icebp
mov
pop
movsb
insb
int3
loope
ja
cmp
mov
inc
dec
test
jl
mov
aad
inc
int
dec
mov
testl
movsb
call
inc
mov
push
mov
pop
dec
inc
aas
fstps
add
cmpsl
mov
rcll
sub
xchg
or
push
dec
mov
repnz
jnp
adc
dec
inc
leave
in
out
movsb
or
shlb
ret
jp
sbb
xor
jle
scas
andb
mov
call
xor
addr16
lcall
jae
call
dec
bound
sbb
into
mov
stos
cmpsl
pusha
inc
mov
mov
loopne
adc
jle
xor
cmp
adc
xor
ja
mov
jecxz
pop
jns
mov
loope
notb
stos
aam
jge
sub
jp
cmpsl
mov
mov
ret
inc
mov
test
sahf
cmp
shrb
inc
insb
stc
push
cwtl
clc
aad
mov
aaa
test
pop
inc
rorb
test
mov
mov
aas
and
repz
nop
push
adc
lcall
lahf
in
addr16
test
inc
and
out
stc
enter
in
pop
xchg
or
xchg
jae
lods
sarb
sub
add
aam
popa
sbb
lcall
fists
movsl
or
xchg
xchg
gs
int
sub
adc
mov
stos
inc
roll
xchg
lcall
inc
cwtl
xchg
xchg
sbbl
addr16
repnz
jp
movsl
lds
mov
and
and
add
ds
jmp
leave
dec
mov
fcoms
xor
fmull
mov
or
sbb
scas
lods
js
xchg
push
loopne
pop
xor
adc
lret
fldcw
cli
mov
mov
xchg
arpl
fdivs
dec
cmp
cmp
sub
scas
jl
addb
daa
cmpsl
xchg
adc
int3
sahf
xor
pop
push
sbb
sub
adc
xor
sub
mov
jae
outsl
loope
insl
in
fdiv
add
sub
adcl
pop
push
idiv
adc
pop
scas
add
push
xor
nop
fmulp
outsl
stc
push
ds
jge
das
sbb
scas
sub
gs
push
movsl
outsb
fdivr
outsb
popa
ljmp
clc
or
mov
cmp
dec
out
add
inc
add
add
mov
or
rorb
pop
cli
scas
mov
pop
hlt
pop
xor
cvtdq2ps
adc
cld
test
stos
xchg
in
mov
inc
inc
adc
data16
jge
push
pop
inc
jle
imul
cs
cmp
test
xchg
stos
hlt
loope
push
jnp
jb
daa
mov
xchg
xchg
xchg
js
rcrb
xchg
mov
push
popf
nop
call
and
mul
flds
xor
xlat
dec
mov
aas
sahf
int3
lea
ljmp
pop
test
js
push
pop
and
stos
imul
and
xchg
mov
adc
inc
fs
mulb
rolb
movl
inc
movb
xchg
sarb
fldl
mov
ja
inc
jg
add
enter
decb
cmp
or
push
add
mov
iret
pop
cmc
mov
jmp
pusha
mov
and
sub
push
pop
and
je
jnp
ret
std
lods
ss
mov
bnd
testb
push
cmp
jg
push
or
stc
and
rcr
shlb
pop
movsb
inc
jne
fdivr
dec
test
ljmp
push
out
jns
mov
ljmp
ret
sbb
mov
dec
pop
imul
adc
and
sti
cmp
into
insl
cltd
or
movsl
push
cmpl
cltd
mov
add
pop
push
arpl
push
lret
hlt
addb
int
rcrl
lods
lds
sbb
push
mov
jns
test
cld
mov
pop
or
adc
pop
cli
mov
adc
adc
add
jmp
imul
test
setge
xchg
fisubs
mov
enter
xchg
xor
daa
fnstenv
je
inc
xor
cld
aam
sub
cmp
leave
jl
sub
arpl
ret
cmovno
adc
sbb
and
push
je
mov
xchg
mov
out
inc
es
das
xor
call
cmpsb
fidivrs
mov
into
jo
mov
mov
push
push
mov
gs
addr16
jmp
dec
imul
testl
mov
shlb
jecxz
shl
add
js
mov
fwait
negb
into
aad
imul
sub
daa
stc
pop
pushf
fdiv
jb
push
xchg
inc
xchg
jmp
dec
cltd
push
shlb
xor
sahf
sbb
int3
icebp
fcmovnb
scas
ret
std
rolb
mov
in
sub
or
sub
dec
fs
sbb
dec
fimull
jno
sub
xor
adc
sub
mov
cmpsb
lock
mov
mov
test
cwtl
cmp
mov
cmc
xor
adc
push
sbb
dec
js
cmc
or
cmpb
mov
dec
mov
push
jo
and
adc
pop
jno
pop
cmp
pop
and
lret
sub
scas
das
push
loopne
cltd
imul
sbb
cmp
jl
mov
jb
mov
clc
ret
or
aaa
mov
inc
lods
sbb
and
inc
mov
sub
std
add
mov
push
mov
int3
in
andl
push
lds
fisttpll
mov
fwait
sub
push
mov
stos
dec
lods
test
popf
cmp
push
add
adc
adc
xlat
insb
push
movsb
pusha
addb
in
lea
cmc
sub
and
ror
insl
imul
jecxz
xor
adc
insb
enter
cmp
inc
sbb
leave
dec
mov
cmpsb
xchg
jge
dec
xor
push
fs
mov
shl
pop
mov
iret
out
test
fdivl
pop
sbb
nop
cmc
xor
dec
clc
stos
je
add
inc
outsl
nop
outsb
daa
cmp
xor
xchg
ficoms
mov
pop
push
mov
push
adc
daa
stos
xor
xchg
dec
or
inc
lods
es
adc
ja
sub
lods
xor
cmpsb
stc
and
cmpl
or
cmp
clc
push
adc
cmp
hlt
push
scas
testl
push
lret
popa
inc
lock
mov
or
ret
inc
jle
mov
rcll
mov
cwtl
add
aas
cmp
and
aad
stos
inc
pop
add
mov
mov
data16
xchg
and
push
xchg
cmp
sbb
mov
sub
aam
repnz
mov
call
aam
jne
xor
inc
dec
xlat
pop
mov
cmp
test
cmp
jne
xchg
jo
aam
std
mov
jmp
adc
cmp
xor
fstps
scas
fidivrl
jo
cmp
inc
jae
aaa
sbb
push
cld
sub
sbbl
and
lods
add
lods
cmpsb
sbb
push
leave
bound
adc
sub
mov
dec
pusha
pop
pop
mov
xchg
cmp
sub
mov
sbb
push
je
inc
jp
and
jne
sub
or
adc
xor
push
push
push
fnstsw
cwtl
push
or
push
mov
rorl
pop
shl
and
mov
mov
int
mov
scas
pop
mov
push
mov
insb
xor
xor
xor
fcoml
mov
movsl
lock
pushf
fiaddl
aad
aam
mov
push
hlt
xor
lret
or
lea
mov
xor
push
fwait
jg
adc
or
xchg
sub
and
insl
test
imul
cli
fdivs
xor
int
fmulp
call
xor
mov
mov
mov
sbb
jbe
xor
mov
pop
and
lret
inc
inc
cmp
out
push
pusha
sub
jo
test
sub
ljmp
cmpsl
popa
push
pop
mov
out
add
imul
ljmp
mov
sahf
les
pop
sbb
gs
mov
or
call
mov
shll
pop
ret
outsb
mov
rcl
cmp
cmp
cmp
fsubrl
mov
lcall
xor
add
adcb
pop
insb
repnz
mov
decl
push
inc
imul
mov
or
sub
aas
fcompl
shl
cmp
rcrl
inc
stos
xor
mov
loope
mov
jg
out
add
sbb
or
shrl
lds
mov
add
fadd
jb
push
xor
lcall
push
or
rcrl
fadd
pushf
push
arpl
xlat
jecxz
add
sarb
xor
adc
ja
into
imul
jae
ret
mov
aam
jmp
movsb
sub
mov
rcr
rep
leave
test
test
fidivrs
fsubrs
fistl
cmp
sub
mov
pop
inc
fldl
loopew
decl
pop
fwait
xchg
shlb
divps
adc
das
sbb
decl
loop
xchg
sub
and
sbb
sarb
mov
sbb
addl
int
sbb
scas
nop
or
sbb
sarb
pop
cld
cmp
and
push
and
dec
aaa
int3
sbb
mov
inc
sbb
sbb
mov
hlt
repz
aam
and
cmpsb
pop
xor
mov
aam
xchg
cmp
jno
xchg
pop
push
sarb
mov
repz
inc
adcb
sub
test
sub
sbb
inc
sbb
xlat
jg
cmp
andl
test
in
adc
stos
mov
ret
out
jne
out
add
xor
outsb
pusha
add
shlb
adc
sbb
stc
adc
cmp
insl
dec
push
fwait
jnp
jle
test
push
mov
xchg
adc
and
loopne
fimuls
movsl
movsl
jne
cld
pop
repz
and
sbb
or
jecxz
mov
adc
xor
mov
dec
lods
mov
jo
push
xor
push
inc
sbb
clc
idiv
call
jle
pop
test
mov
les
loopne
xchg
inc
cs
and
bound
scas
fisubrl
sbb
outsb
imul
lahf
or
outsb
mov
lret
pop
xchg
repnz
sbb
mov
js
js
sub
lea
test
mov
adc
jbe
inc
mov
and
imulb
lods
sbb
xchg
loopne
jl
jbe
rorl
std
enter
push
into
ret
fcmovnbe
outsb
xchg
push
and
and
mov
imul
cmp
out
pop
cmp
adcb
lock
adc
outsb
pop
jne
lea
loop
jb
cmpsb
je
frstpm(287
jnp
push
in
dec
add
and
outsl
jne
sbb
idivl
jmp
xor
pop
xchg
movsb
pop
add
or
mov
mov
cld
jns
into
adc
and
and
leave
cltd
popf
into
and
cmp
mov
lret
dec
ret
and
sti
xchg
mov
and
sti
movsl
mov
clc
pop
inc
repnz
stos
data16
divl
mov
or
adc
cmpsb
loop
cmp
adc
das
mov
fwait
xchg
repz
aad
jmp
int3
and
push
inc
inc
fdivr
push
testl
pop
lods
shrb
stos
shll
sbb
imul
mov
and
add
cmpl
rorl
fsts
lahf
jecxz
inc
sahf
lds
int3
pop
dec
push
inc
jle
mov
iret
in
orb
mov
push
xchg
push
loop
iret
sub
push
clc
lods
or
sub
jmp
lods
push
mov
mov
imul
push
or
cltd
xchg
stos
jmp
outsl
in
jp
in
aam
mov
cmp
xlat
movsb
movb
popf
pop
mov
ror
repnz
xchg
push
test
sbb
jne
inc
xchg
jo
mov
stos
cmp
insb
lcall
je
rcll
sahf
push
fdivl
adc
xchg
fldl
push
sbb
lea
mov
mov
test
aam
std
mov
rorb
sub
sbb
movsb
jns
fcmovnbe
insl
xor
popf
gs
hlt
pop
push
std
mov
into
cmp
dec
sbb
add
push
sbb
jmp
xchg
movsl
jp
scas
fldl
inc
imul
or
mov
push
mov
fwait
push
lea
mov
mov
push
decb
dec
cmpsb
add
icebp
jo
enter
lock
cmpsb
lods
cs
dec
divl
out
dec
lcall
xchg
push
lock
cmp
andl
sub
mov
xor
imul
loope
faddl
dec
push
cmp
dec
adc
movsb
fcomip
cmp
jp
fsubrl
out
jle
popf
cmpsl
sti
mov
add
movsl
or
mov
pop
push
pop
jg
mov
cmp
dec
and
imul
pop
xchg
mov
and
xchg
jb
sub
jmp
inc
lock
js
sti
test
lock
push
and
adc
dec
stos
add
into
add
cmp
jae
sbb
sbb
cli
push
add
aas
mov
xor
cmp
aam
mov
mov
insl
ljmp
cmp
and
add
adc
loopne
and
jl
pop
rcrb
push
push
pop
jo
xlat
pop
popf
aad
bound
sbb
jmp
xor
push
repz
xor
and
fiadds
push
jp
clc
inc
sbb
cltd
stc
add
jnp
cmp
cmp
negl
cs
push
dec
mov
outsb
jecxz
push
jae
pop
fldcw
daa
lret
sub
in
add
jge
popf
roll
pusha
and
fisttps
mov
inc
cmp
sbb
repz
push
cld
scas
loop
mov
arpl
push
iret
adc
and
mov
ljmp
cwtl
and
mov
xor
add
jle
xchg
outsl
mov
and
sbb
cmp
jb,pt
data16
mov
addr16
cmp
push
test
jp
inc
jb
cmp
insl
out
and
mov
sti
sbb
fwait
jnp
push
int
xchg
push
or
pop
pop
imul
pop
pop
xchg
enter
lahf
push
sub
loopne
xchg
frstor
inc
push
into
add
pop
xchg
sub
jb
insb
je
jae
sbb
insb
aas
jmp
daa
push
mov
fst
jno
sbbl
lods
pushf
inc
jo
pop
bound
or
test
movsb
adc
adc
mov
fcmovnu
cmp
mov
repnz
push
mov
mov
sbb
enter
push
dec
push
mov
sub
lret
lret
movsl
push
fisubrs
imul
imul
loopne
repnz
sbb
pushf
stc
es
mov
and
cli
leave
enter
insl
adc
jns
jno
xor
or
and
pop
fwait
mov
inc
rol
inc
imul
dec
jl
sub
dec
mov
mov
jnp
xchg
xor
jg
jmp
inc
inc
pop
xor
clc
mov
xchg
imul
xchg
cmp
and
and
mov
mov
push
push
enter
dec
sub
mov
test
or
adc
ret
xchg
and
shl
pushf
iret
iret
pop
lret
stos
cltd
jg
and
xor
mov
push
push
mov
mov
imul
dec
or
mov
dec
shrl
inc
jle
cmp
pop
jmp
lea
dec
std
dec
mov
pop
jle
loopne
add
sub
push
lods
loopne
call
je
inc
inc
push
shlb
pop
mov
ds
jge
rolb
add
out
push
fwait
jge
repz
jnp
mov
add
out
fsts
out
mov
stc
push
mov
ds
push
pop
aad
or
scas
dec
pop
cmp
inc
in
prefetch
or
xchg
in
das
lock
mov
es
xor
push
cld
mov
leave
hlt
icebp
loope
in
fs
stos
arpl
std
outsb
jl
out
cwtl
ret
lods
loopne
out
pop
cmc
cmp
roll
push
mov
mov
mov
sahf
dec
xchg
and
popa
add
dec
add
movsb
mov
or
fiaddl
cmpsl
mov
cmpsb
mov
mov
sbb
lret
jne
repz
call
hlt
loope,pt
cmpl
rcl
xchg
ret
dec
daa
call
dec
jo
clc
add
sarb
or
mov
sbb
fldenv
jecxz
repz
cmp
jb
mov
jb
rcll
dec
or
mov
outsb
fwait
jle
pop
push
insl
mov
pop
movl
out
lea
dec
dec
jae
test
test
aam
aad
fimuls
fldl
mov
fisubrl
jae
adc
and
jle
adc
jae
int
in
jb
lcall
sahf
or
pop
pop
pop
pop
lods
sbb
insb
or
es
cli
mov
cmp
adc
pop
ret
push
pop
xor
test
enter
mov
test
call
lret
push
or
jnp
out
mov
hlt
mov
repnz
jo
pop
sahf
xor
cs
xor
notb
sbb
rclb
stos
inc
inc
inc
pusha
add
scas
sub
test
pop
call
xor
and
mov
pop
arpl
shll
mov
pop
enter
adc
xor
ljmp
push
add
test
std
popf
sarb
dec
jns
fnclex
pop
mov
int
dec
roll
out
lds
pop
mov
data16
push
divb
jbe
pop
mov
mov
bound
sub
cmp
cmp
pop
in
xchg
inc
xchg
pop
lret
fildll
mov
out
xchg
ja
lret
mov
mov
sub
ret
cmp
adc
jns
loop
int3
inc
jp
jl
int3
mov
mov
movsb
out
pop
jnp
addl
push
sub
int
gs
fstpt
addl
mov
mov
and
pop
push
xchg
push
inc
mov
push
fisubrl
enter
adc
sbb
lahf
fsubrs
add
nop
pop
lods
lds
das
sub
lret
pusha
in
insl
sti
and
push
repz
xlat
testl
lods
and
mov
mov
stc
ficoms
xchg
and
xor
pop
xchg
addr16
dec
add
cmc
fwait
push
push
inc
cld
ret
adc
pop
xor
mov
cwtl
push
dec
sbb
pop
jl
xchg
adc
iret
cmp
enter
out
out
bswap
jmp
ja
out
and
je
sub
lret
pop
and
pop
dec
push
inc
jbe
cmp
cmp
mov
cmc
sbb
sbb
mov
outsb
mov
xchg
imul
push
xor
stos
aaa
push
cmp
sub
jge
cmp
push
mov
mov
mov
orb
clc
in
in
test
xor
sub
es
adc
mov
aad
dec
les
or
or
jl
mov
out
pop
xchg
rorl
imul
inc
mov
sarb
jnp
xchg
push
cltd
cld
xor
mov
pop
and
mov
sub
jg
loop
mov
dec
mov
adc
aas
jne
cli
dec
aad
jae
stc
jp
dec
sbb
push
dec
hlt
movsb
outsb
push
inc
fbstp
mov
outsb
repnz
scas
jmp
xchg
pop
loope
testb
hlt
sbb
out
mov
pop
mov
pushf
neg
mov
test
pop
dec
dec
pop
cli
and
pop
call
xor
gs
jb
jnp
iret
testl
cmp
mov
xor
insl
test
jmp
loopne
mov
hlt
and
ljmp
popf
add
hlt
loope
lock
push
dec
adc
in
dec
xchg
adc
dec
aad
or
push
xor
and
mov
pop
aaa
mov
pop
ret
jno
lods
pusha
ja
push
xor
js
scas
out
jns
or
jns
push
cltd
int3
movl
imul
addr16
movsl
scas
inc
push
xor
push
dec
xchg
es
push
pop
or
popf
out
mov
pop
dec
out
jae
inc
xchg
loopne
xchg
or
in
dec
arpl
cs
lods
sbb
pop
fisubrs
shrb
jbe
jbe
dec
test
jle
cmpsb
push
pop
gs
mov
push
xchg
aas
sub
iret
fwait
mov
lcall
shll
cmp
jle
popf
and
sub
nopl
lea
mov
cmp
fdivp
out
dec
pop
adc
mov
leave
out
or
pop
jmp
jecxz
sub
mov
pop
pop
scas
cmp
jae
pop
imul
loopne
imul
mov
mov
leave
rorb
or
daa
pop
inc
push
add
pop
mov
fiadds
outsl
xor
pop
lret
push
mov
add
and
aam
or
repz
dec
push
and
pop
sub
adc
or
jg
rcr
dec
mov
sub
push
lea
aaa
mov
adc
pop
mov
bound
loopne
and
add
out
xchg
cmp
xchg
aaa
pop
fcoml
mov
pop
pusha
pop
lcall
cmpsl
add
lods
pusha
addr16
daa
pop
jnp
in
mov
jl
repz
mov
lods
push
mov
dec
mov
mov
inc
dec
lock
pop
xor
int3
ljmp
dec
or
test
pushf
shrb
flds
orl
dec
fidivl
cmpsb
cli
aam
test
add
inc
fsts
out
or
loop
fstpt
outsl
pop
test
xor
push
cltd
sbb
icebp
push
fstpl
mov
dec
sub
sbb
gs
fldcw
inc
mov
pop
mov
push
dec
ds
push
icebp
pop
stos
adc
pop
stos
mov
inc
pop
pop
or
ss
cwtl
test
cmp
and
lods
lods
rcll
adc
aam
popf
push
shrb
jnp
xlat
sbb
dec
gs
xchg
inc
adc
dec
outsl
or
push
jne
cmp
imul
sbb
inc
push
pop
loopne
fldt
inc
cs
out
mov
ret
scas
out
push
sub
sbb
fwait
insl
fimull
nop
and
dec
and
sbb
aas
pop
xchg
imul
jo
repnz
pusha
cs
popa
imull
push
adc
and
popa
or
push
sub
divb
leave
inc
cmp
sub
fsubp
rcrl
or
jl
add
jo
inc
inc
fildll
ret
fildl
cmp
out
adc
ret
test
scas
cmpsl
repnz
das
push
add
sbb
jmp
xor
in
pop
add
mov
and
cmp
or
pop
es
cs
mov
pop
cld
test
outsl
mov
and
push
jge
pop
adc
jns
sahf
and
mov
andl
dec
cmp
movsb
mov
xchg
mov
rcl
in
int
inc
nop
cmp
mov
in
mov
cmp
add
cmc
or
mov
lea
sahf
sub
icebp
pop
lcall
mov
xor
cmpb
sub
fbld
push
pop
dec
xor
pusha
in
insl
inc
inc
pop
dec
lcall
push
and
pop
xchg
stos
gs
cld
out
bound
incl
xchg
test
lods
cwtl
push
mov
sarl
aas
loop
enter
cmpsl
ds
add
faddp
test
out
mov
adcl
adc
jp
adc
scas
into
std
mov
out
movsb
nop
lea
scas
scas
daa
dec
inc
shll
je
out
jg
adc
mov
xor
push
mov
jle
xor
jle
jle
pop
mov
subl
test
js
imul
pop
idivl
mov
clc
jg
and
pop
adc
dec
sbb
sbb
mov
outsl
mov
xor
ja
sub
les
push
push
mov
js
mov
mull
lock
dec
insb
push
push
out
push
xchg
test
stc
daa
xchg
mov
xchg
and
pushf
inc
aaa
dec
cmpsl
or
gs
sbb
xchg
test
sbb
adc
mov
sbb
jbe
and
add
psllq
xchg
shll
adc
pop
mov
xor
lret
fldl
push
in
add
pop
sbb
cmp
or
jno
and
ret
inc
cltd
arpl
lret
xchg
outsl
xchg
xchg
jecxz
adc
cmp
push
pop
lea
movsl
loopne
and
mov
mov
dec
mov
sub
cli
aad
imul
orb
inc
jle
ss
mov
xchg
mov
fs
popl
hlt
dec
jp
ret
sbb
add
mov
insb
lds
pop
mov
call
sub
xchg
dec
out
cmpsl
shrb
cmpsb
add
fs
xchg
mov
loope
xchg
add
stc
mov
jo
mov
imul
js
xchg
ret
xchg
cmc
mov
push
pop
fsubrp
fnstcw
fwait
leave
cld
shrb
lret
mov
sti
iret
cmp
fsubrs
cmp
sbb
and
dec
bnd
out
xchg
mov
cltd
pop
xchg
pop
lea
mov
adc
imul
ret
std
imul
sub
js
cmpb
pop
shlb
loopne
loopne
je
inc
push
roll
pop
je
and
and
mov
push
sub
cmp
inc
notl
rcrb
les
or
adc
push
enter
mov
mov
fadd
or
add
sbb
imul
xchg
in
test
xor
or
cmpsb
fistpll
xor
movsl
loope
bound
add
enter
pop
xor
dec
jae
fstpt
nopl
insb
arpl
test
and
fmuls
inc
leave
lcall
iret
daa
sbb
hlt
or
ds
cmp
jmp
loopne
iret
subb
test
jmp
push
mov
and
jne
out
jns
repnz
and
push
cmc
lea
movsb
aaa
addr16
jp
ficoms
push
mov
es
imul
movsl
lret
adc
mov
les
lock
fsubrl
mov
std
mov
inc
push
cwtl
mov
jl
loopne
and
lods
push
jmp
add
ja
out
js
and
xor
ds
pop
adc
sbb
mov
push
adc
fs
lea
add
xchg
mov
mov
jae
and
nop
cs
scas
es
shr
std
mov
repnz
push
mov
push
add
adc
mov
cmp
movsl
sbb
imul
lahf
dec
js
cwtl
sbb
shrl
xlat
pop
inc
push
pop
shlb
cmp
dec
mov
in
push
cmp
mov
popa
cld
xchg
inc
lock
dec
push
push
test
inc
data16
sbb
in
adc
pop
add
repnz
sbb
icebp
push
jg
and
nop
iret
lods
cmp
in
jmp
lock
xor
lods
int
lods
clc
cmp
mov
xchg
in
sub
mov
out
pop
xchg
into
cmpsb
test
mov
adc
test
jmp
lret
addb
pop
je
mov
popa
pop
loop
popf
std
ds
stos
enter
mov
scas
hlt
adc
loopne
or
xor
mov
push
shll
push
aas
iret
inc
dec
xor
mov
cmc
xchg
fimull
idivb
jmp
ljmp
jae
push
inc
pushf
mov
xchg
inc
push
xchg
push
mov
adc
jbe
hlt
cltd
mov
repz
incl
push
shrd
or
add
push
clc
cld
stos
inc
ficoml
cmp
int
cmpb
repz
fsubl
jbe
in
fwait
pop
sbb
mov
mov
vpaddb
out
mov
pop
sub
cld
es
jb
jno
pop
je,pn
sbb
add
mov
xor
jne
push
xlat
fucomip
xlat
lea
lods
push
in
arpl
sub
add
mov
dec
xor
pop
add
push
stos
enter
outsl
je
and
inc
mov
aad
cs
lret
cmp
popa
cmpsl
push
fsubs
andb
jne
pop
loopne
pop
sub
fs
adc
leave
ja
or
out
arpl
or
cltd
sti
icebp
lcall
imul
sbb
popf
aam
push
jns
stos
ret
clc
inc
xchg
jmp
leave
outsb
loop
jne
scas
xchg
mov
adc
mov
sub
nop
mov
cmp
lret
aam
inc
sti
pop
xor
pop
test
or
fwait
rorb
fcoml
fsubr
cmpsb
pop
xor
outsl
inc
add
jbe
es
sahf
es
and
and
adc
mov
add
and
mov
ret
lods
repz
nop
jae
mov
pop
cmpsb
fiadds
loope
push
hlt
sbb
imul
loopne
idivl
lds
test
notb
imul
test
test
int
out
lods
mov
adc
jecxz
lret
test
xor
lds
mov
cs
cmp
sbb
lds
nop
repnz
pop
mov
ss
jns
lret
xor
push
mov
jb
adc
xchg
add
dec
fwait
mov
ret
imul
ds
pop
ucomiss
sub
xchg
fwait
js
add
push
sbb
lds
addr16
mov
mov
je
or
push
lret
dec
adc
lea
daa
inc
dec
aam
push
ljmp
in
sbb
cmc
mov
into
dec
sub
xchg
xor
and
push
in
push
pop
push
add
ficompl
sub
jmp
ds
sti
iret
cwtl
cmp
add
add
mov
flds
fildll
sub
mov
mov
xor
inc
xchg
repnz
jle
jno
insl
jae
pop
xchg
jl
mov
push
or
inc
and
mov
pop
andl
iret
mov
call
lock
add
jmp
fcoml
fdiv
pushf
test
pop
js
shlb
mov
iret
mov
sub
int
mov
stos
mov
mov
sbb
sbbb
push
sub
cmp
mov
pushf
test
or
pop
mov
cmp
sbb
or
sub
push
les
push
in
sti
sub
fucom
cmp
lret
dec
mov
add
sbb
rcl
insl
mov
test
imul
test
cmp
xor
xor
jecxz
inc
cmp
push
mov
nop
jnp
cmpsl
nop
inc
insl
out
cmc
in
mov
mov
add
inc
inc
cmpsb
xchg
and
sub
dec
or
test
leave
push
inc
aad
mov
jg
mov
ficomps
aam
ds
jae
jnp
pop
test
mov
mov
fistl
and
ficoml
fwait
in
push
cmpsl
rol
push
push
sbb
mov
mov
pop
xchg
mov
or
mov
sarb
aaa
sbb
push
icebp
nopl
and
xchg
int3
cmp
mov
daa
mov
outsb
sub
and
jbe
jge
out
sub
xor
mov
sahf
adc
lock
fucomip
add
rclb
pop
mov
add
cmp
mov
scas
pop
loope
int
popf
xor
jge
xor
lahf
ret
or
mov
adc
cmp
xchg
jno
imul
inc
push
jge
sbb
sub
loop
into
lret
lods
dec
jbe
jle
test
mov
int
pop
stc
repz
push
in
and
xchg
xor
mov
jp
pusha
push
rol
ja
fnsave
leave
pop
and
lds
pop
lea
clc
mov
icebp
adc
jns
imul
or
insb
cwtl
sub
loop
mov
ljmp
sub
mov
aam
cmp
fistl
jle
sub
inc
push
in
sub
outsl
rcrl
cmp
xchg
lods
add
mov
xor
test
stos
cmc
ss
out
sbbl
dec
dec
push
scas
push
cmc
out
aam
jp
js
mov
pop
pop
jb
insb
add
fnstenv
filds
sbb
sbb
sbb
les
call
push
out
out
pop
out
in
mov
and
push
rcll
adc
sbb
or
in
or
mov
xorl
fisubrs
pushl
inc
cmp
or
mov
sbb
shl
out
mov
out
jae
push
imul
movsb
jae
jmp
mov
out
or
jo
rorw
sbb
mov
movsl
pop
js
out
push
fwait
mov
mov
push
push
push
js
pop
js
sbb
jmp
xor
out
popf
lret
dec
out
lock
ljmp
inc
arpl
push
sub
xchg
xchg
inc
fucom
or
imul
push
push
loopne
mov
ud2
pop
out
clc
inc
mov
fldl
repnz
lret
pop
ret
lds
fnstenv
xor
jns
xlat
pop
out
add
cmpsl
pop
lea
xor
es
inc
je
shlb
sub
sahf
movsb
cld
jle
push
clc
adc
dec
cli
pushf
push
xchg
jg
cld
ja
or
push
flds
push
fdivrp
fstpl
fstp
cmp
sbb
push
in
adc
pop
cmpsl
and
dec
cmp
mov
clc
fcomps
pushf
jg
jae
sbb
dec
aas
lds
xor
scas
fcmovb
push
mov
pop
dec
loopne
jp
jl
jecxz
adc
mov
fwait
push
push
scas
fldenv
xor
mov
lds
push
cwtl
dec
pop
or
xchg
xchg
iret
test
jge
pop
pop
or
dec
mov
and
inc
or
jl
push
push
push
mov
mov
in
mov
dec
repz
pop
pop
imul
jns
les
mov
lods
mov
push
sti
push
mov
jbe
mov
or
jnp
movsl
call
sarl
xchg
arpl
nop
icebp
cmpsb
xlat
fldlg2
loopne
scas
mov
cwtl
lret
sub
dec
jl
mov
and
je
mov
adc
insl
xor
das
push
and
cmp
inc
mov
fidivrl
and
inc
jnp
jo
test
stc
add
out
fldenv
cli
cmpsl
push
or
mov
dec
jg
xor
loopne
jecxz
sahf
jae
stc
sub
jmp
stos
fnstsw
pop
mov
scas
cmp
cmpsl
inc
das
mov
push
xchg
inc
push
nop
inc
js
dec
mov
loop
lcall
fistl
pop
xor
inc
jl
aam
mov
movsb
inc
sarb
mov
mov
out
in
insl
fsubl
test
sub
pand
push
dec
xor
xchg
pop
sti
shlb
push
or
fcmovnu
jle
add
pop
mov
push
and
call
mov
add
cld
jp,pt
lcall
out
add
jp
mov
jl
fnstenv
sbb
sahf
aas
and
sub
out
sti
aam
adc
ljmp
xchg
push
sahf
je
dec
pop
sbb
xor
xchg
div
mov
sti
loopne
inc
icebp
and
push
xor
sub
mov
push
xor
lret
ljmp
sbb
mov
or
popa
in
lret
test
sbbb
mov
xchg
push
sbb
inc
nop
cmpb
add
out
pop
movsb
mov
leave
push
adc
push
xchg
cmpsl
xchg
roll
leave
mov
negl
mul
or
loop
cmp
adc
inc
dec
push
ja
xor
dec
movsl
sbb
outsl
rcrb
or
rorb
lret
push
hlt
ret
adcl
pop
mov
jae
dec
mov
insl
call
inc
fisubs
push
sbb
xchg
fcoms
inc
int
rcrl
daa
push
dec
mov
daa
test
or
repz
fisttpll
sub
repz
push
inc
jnp
sub
sbb
cmp
fidivrs
cmpsb
pop
orb
popa
sbb
andb
fimull
mov
mov
fbstp
into
jns
add
cmp
xchg
into
push
mov
loope
fiadds
mov
push
daa
jo
pop
push
sbb
and
out
aas
xchg
inc
sbb
test
sub
aas
xchg
jno
in
cli
cwtl
sub
rclb
aaa
and
repnz
cld
cmp
adc
sub
mov
sub
gs
mov
in
data16
push
xchg
ss
pop
or
fwait
pop
jg
pop
and
sbb
stos
dec
shlb
divb
inc
pop
negb
xor
int
pop
inc
fistpl
push
stos
iret
or
sub
xchg
icebp
push
mov
xor
lock
rorl
adc
and
loop
es
shll
xor
xorl
aaa
fldt
xor
mov
lods
out
push
ja
sarb
popf
test
and
test
cld
in
lret
push
push
mov
mov
push
sbb
pop
jle
inc
addr16
insl
pop
xor
cmp
sarl
sub
repnz
xlat
loop
lcall
repnz
inc
dec
adc
aad
jecxz
push
sub
pop
pop
pop
fsubrl
jae
dec
sub
ss
push
push
imul
mov
lcall
lds
lret
pop
push
mov
dec
pop
pop
pushf
inc
adc
stos
loope
popf
fwait
out
adc
pop
inc
loope
xchg
lods
nop
ret
inc
mov
xlat
aas
jg
pushf
xlat
mov
add
jecxz
mov
push
xchg
fsts
mov
pop
lahf
lcall
push
dec
mov
sarb
pusha
test
or
mov
int3
cmp
je
movsl
and
cld
cmpsl
adc
mov
xchg
aas
mov
mov
push
jge
xor
push
or
jb
pop
mov
xor
fisttps
adc
inc
mov
sub
fs
or
sahf
orb
cmp
xor
add
pop
mov
pushf
jno
jno
pop
mov
out
ja
adc
add
jp
loop
sub
mov
sbb
insb
pop
sub
mov
sbb
cmp
push
push
cmp
sub
sarl
mov
pushf
sti
pop
stos
jne
lret
mov
sbb
bound
push
dec
mov
xor
inc
popa
add
add
stos
ret
cs
cmp
xchg
paddsb
cmp
addr16
ss
push
jge
mov
sbb
and
lock
mov
mov
repnz
xchg
lods
push
add
jge
dec
in
neg
cld
push
fnstenv
lods
in
bound
outsb
cs
aas
lds
lods
mov
mov
adc
clc
and
cmpsl
fstl
pop
inc
jle
in
or
jb
inc
aas
out
push
inc
pushf
inc
sahf
sbb
lock
sub
jbe
jns
mov
mov
in
pusha
adc
cmpl
jl
sbb
sbb
push
xchg
popf
dec
inc
gs
out
mov
jo
je
int3
dec
popf
gs
popl
push
mov
call
jne
mov
loop
or
mov
push
rcll
and
cmp
jo
cmp
jno
hlt
ja
pop
ficoms
pushf
pop
out
push
xchg
jne
inc
lret
mov
jg
sub
adcb
pusha
ljmp
jg
xchg
jecxz
outsb
push
js
dec
movsl
or
in
mov
push
jp
pusha
xchg
cmp
pop
ret
mov
fucomi
sahf
stos
fsubrl
out
movsb
pop
pop
movsb
sub
imul
cmp
jnp
bound
ficoms
add
jno
into
inc
mov
mov
pop
sub
inc
dec
pop
dec
mov
es
cmp
loop
das
mov
jno
scas
xchg
fwait
enter
in
mov
sahf
inc
cmp
mov
enter
sub
jge
stos
clc
jno
aaa
repnz
pop
inc
sbb
adc
mov
cmc
push
orl
aad
mov
xor
fdivr
pop
sub
flds
sbb
cs
xchg
and
mov
cmp
dec
pop
pop
outsb
mov
or
je
clc
addl
jg
mov
sbb
scas
pop
mov
dec
mov
cmc
cmp
aaa
sbb
scas
xor
jae
push
push
ret
inc
pop
cltd
addr16
xchg
or
movsb
mov
jmp
es
pushf
aas
and
and
lret
mov
data16
sbb
aad
add
ljmp
loopne
xchg
inc
out
shll
lods
add
mov
xchg
add
test
cmp
mov
cltd
mov
add
dec
imul
and
scas
dec
mov
test
inc
inc
mov
sbb
out
pop
xor
ljmp
lock
out
jle
cwtl
or
and
sbb
stos
pop
push
cmp
xchg
in
xchg
sbb
cmpsl
jge
sub
aaa
jmp
and
rorl
mov
ret
or
cmpsl
inc
pop
mov
out
das
add
sub
out
sbb
mov
mov
test
adc
push
and
xchg
add
ds
mov
lds
pop
push
idivb
add
mov
out
nop
mov
orl
jnp
push
rolb
dec
push
clc
ss
cwtl
aaa
xchg
xchg
test
mov
mov
dec
xchg
add
fnsave
adc
jp
lret
cmp
sti
mov
cmpsl
mov
inc
inc
add
lods
call
ja
xchg
adc
xchg
xchg
jnp,pn
add
sarl
mov
cmc
mov
scas
sbbb
pushf
inc
mov
inc
test
xchg
aas
cmp
xor
gs
pop
sbb
aad
fildll
mov
mov
clc
daa
in
loope
icebp
inc
or
cmp
xchg
or
mov
inc
lahf
cmp
xchg
sbb
mov
jbe
add
fld
ds
clc
scas
cmp
shll
popa
jecxz
scas
dec
ret
adc
fsubrl
sbb
bound
mov
inc
pop
and
inc
repz
pop
popf
jae
lock
fnstcw
sub
pushf
pop
and
fs
mov
ficoml
push
lret
sbb
adc
pop
push
std
inc
jge
popa
mov
sbb
cmc
add
jle
jl
repz
push
mov
or
aam
aad
jno
fiadds
bound
inc
jo
rolb
pop
test
mov
in
sub
ret
ja
imul
repz
int
mov
test
add
fcomps
notl
lea
or
pop
push
mov
inc
outsl
iret
inc
inc
int
dec
add
lea
pop
mov
addr16
dec
sahf
scas
je
loopne
mov
sub
shl
test
xchg
xor
xor
mov
movsb
lahf
aas
inc
adc
daa
sbb
xchg
push
addb
int3
xchg
inc
sub
push
aad
pop
loopne
andb
scas
jge
stc
push
cmc
sti
sbb
xor
xchg
mov
fsubr
cmpsb
cmpl
cmp
xor
xchg
rcr
and
dec
jb
std
je
cld
jmp
ret
and
cli
xor
testl
aad
dec
mov
fiaddl
cwtl
pop
setb
push
cs
mov
push
cli
pop
xlat
hlt
mov
add
and
cli
push
les
cmpl
inc
rcrb
jle
fs
loop
test
mov
push
mov
xor
in
and
adc
sbb
int3
add
or
mov
xor
dec
sbb
sub
xor
dec
arpl
movsb
or
fstpt
sub
and
adc
dec
xor
push
std
pop
inc
and
or
xor
lea
das
gs
imul
jo
and
leave
mov
xchg
push
jecxz
fcomps
adc
adc
inc
pusha
mov
and
mov
icebp
pop
fildl
cmp
in
ljmp
mov
insl
jl
dec
or
pop
and
cmp
mov
sbbb
push
cmpsl
push
inc
and
test
rcrb
xchg
rorb
jno
loop
fdivs
test
jl
sbb
mov
cmp
lret
out
icebp
mov
stc
lret
cmpb
int3
inc
movsl
jo
adc
mov
leavew
cmpsl
decb
add
xchg
pop
imul
jbe
xor
cmp
repz
pop
jp
rorl
push
dec
loope
das
pop
sub
lret
or
mov
ljmp
mov
loop
jae
movsl
fisttpl
inc
inc
mov
cmc
popf
repz
mov
pop
ds
jb
into
xor
mov
inc
aas
jnp
test
negb
jne
pop
mov
jge
pop
push
out
pusha
stos
and
js
mov
adc
movsl
sub
movsb
stc
add
mov
popa
jo
xchg
mov
inc
cli
push
adc
aaa
les
inc
inc
mov
ret
push
pop
enter
mov
jecxz
xor
push
jae
mov
xchg
pusha
jg
cwtl
mov
or
pop
je
out
or
mov
mov
push
dec
push
push
lret
sub
mov
cmpsb
in
sub
push
mov
enter
sahf
out
movsl
or
dec
test
roll
lea
repz
or
jp
jle
movsb
fs
iret
inc
push
sarb
int
mov
mov
add
repnz
imul
cli
mov
adc
xor
cmp
fldt
cmpsl
sub
sarb
ja
shll
ss
push
frstor
enter
rcrb
nop
or
xchg
test
out
test
mov
test
outsb
popf
lods
xor
insb
push
jecxz
jmp
ss
testl
dec
pop
repz
dec
sahf
mov
out
jns
cli
pop
in
cmpsl
sub
mov
loope
fcoms
data16
lods
test
mov
sbb
jae
rclb
fmuls
add
dec
jmp
pop
movsb
mov
stos
and
sbb
jo
jg
cmp
aaa
xchg
data16
mov
add
or
cmp
leave
cmp
xchg
cmpsb
cmp
in
push
sbb
adc
das
sbb
xchg
aad
pop
lds
fldt
cmp
aaa
cmpl
pushf
pop
and
sbb
pop
in
popa
in
jle
lcall
test
mov
push
push
jb
scas
fisttpll
pushf
lds
cmpsb
cmp
mov
jecxz
jmp
adcb
xchg
hlt
push
fucomi
inc
andl
test
es
lds
in
shl
cli
fwait
sub
mov
loop
cmovbe
in
mov
sbb
fnstenv
xchg
xchg
adc
out
scas
aaa
out
or
cwtl
cmp
jno
dec
insb
or
es
dec
jb
push
mov
mov
repz
inc
ret
jecxz
stos
hlt
dec
aam
mov
stc
rcll
inc
mov
push
mov
adc
sub
or
mov
add
jmp
mov
ss
stc
mov
jmp
push
jbe
sub
outsb
out
loope
xchg
push
out
scas
hlt
or
add
fstpt
pop
ror
loop
das
ss
or
xchg
mov
pop
sbb
es
testb
and
adc
sub
out
outsl
fadd
lea
arpl
mov
and
dec
negb
jo
shrl
push
lods
loope
mov
mov
add
pop
jno
push
inc
fwait
aaa
movsl
or
nop
adc
adc
out
arpl
push
jg
out
fldcw
stos
mov
dec
inc
jo
mov
xor
push
shll
scas
sbb
mov
mov
rorb
pop
sbb
add
sbb
pop
or
dec
add
dec
pusha
xchg
dec
popf
stc
call
dec
jno
xor
and
pop
dec
rorb
pop
sti
xchg
lds
push
push
push
pop
lds
push
mov
cwtl
pop
sbb
push
sbb
inc
lahf
inc
les
dec
inc
fldcw
das
adc
iret
and
sbb
sub
ret
and
cli
inc
sub
pop
cmp
sbb
scas
pushf
mov
mov
add
cwtl
and
pop
bound
out
push
das
test
into
mov
adc
movsl
shr
test
xor
ret
fdivrl
subb
out
adc
xor
inc
mov
push
inc
or
adc
or
test
subl
adcl
jnp
mov
in
sbb
jmp
loop
mov
movsb
dec
cmp
xor
xchg
fildl
jne
pop
push
inc
ja
xchg
insl
fwait
sbb
cmpl
fimuls
mov
mov
fidivl
adcb
in
push
xchg
dec
sbb
pop
push
add
and
push
or
aam
addr16
mov
mov
pop
lret
sar
or
shlb
rcr
in
cmp
nop
inc
sbb
scas
jp
and
cmpsb
mov
pop
std
xchg
jnp
pop
mov
int3
cmp
lcall
subb
inc
jmp
mov
add
fs
ret
add
mov
scas
jp
notb
xchg
rcl
test
scas
stc
jecxz
push
and
mov
pop
add
imul
pop
xor
ss
jb
or
mov
pop
xorb
jmp
dec
pop
movl
orl
jmp
fisubrs
out
pop
jbe
fwait
bound
jge
mov
push
push
and
lahf
stc
in
sub
pop
sbb
adc
cli
xchg
out
mov
iret
dec
mov
cwtl
jge
cmp
adc
mov
int
cld
dec
inc
xchg
leave
ljmp
mulb
lods
icebp
aad
sbb
mov
xchg
xchg
mov
sbb
add
enter
fldenv
adc
divb
sarb
xor
mov
add
xor
inc
repnz
mov
sub
pop
ficoms
lret
arpl
frstor
xor
jnp
das
mov
stos
mov
push
jb
pop
aas
mov
fisttpll
cmp
jge
repnz
insl
inc
dec
dec
fildll
test
mov
test
dec
ljmp
inc
lock
mov
xchg
js
das
pop
loopne
stos
jl
addr16
cld
pusha
loop
mov
jns
insb
addr16
mov
xor
roll
outsb
orl
sbb
mov
lock
push
mov
out
jle
je
in
mov
xchg
add
push
jnp
inc
and
scas
lret
adc
pop
sub
mov
inc
dec
je
cmp
sti
mov
es
mov
push
lods
pop
enter
cmpsb
or
daa
out
sti
xor
cli
cwtl
push
mov
cmp
mov
lret
mov
into
test
aaa
cmp
loop
jno
imul
jg
dec
insb
stc
insl
sub
incl
xlat
or
adc
push
in
pop
fsubrs
sarb
ljmp
xchg
mov
mov
push
je
fidivrl
pop
test
inc
incl
and
imul
and
fstp
ss
je
icebp
adc
mov
mov
inc
das
push
sub
test
movsb
dec
mov
add
and
xor
adc
imul
cs
iret
int3
addl
ret
dec
push
mov
push
sub
push
or
sbb
adc
div
xor
push
movsb
outsl
jne
hlt
jp
cs
jnp
frstor
adc
insl
shll
xor
dec
icebp
pop
cmpsl
sbb
xchg
pop
repnz
iret
je
shr
adc
inc
iret
adc
mov
xchg
xlat
bsr
xchg
stos
lods
insl
insl
xor
sub
dec
sarb
adc
adc
jne
ret
stos
daa
or
gs
lret
test
outsl
dec
sub
jno
test
pop
lods
sub
sub
call
iret
push
pop
fstpl
leave
dec
inc
sar
push
xchg
mov
mov
int
fnstcw
clc
mov
push
fdivrs
dec
sub
ds
idivb
xchg
dec
out
shlb
out
insb
mov
and
cltd
xor
sub
aam
and
test
loope
sahf
or
lds
xlat
clc
addb
cmp
xlat
xchg
mov
and
xchg
hlt
gs
push
nop
cmc
mov
pop
sub
ficomps
dec
outsl
insb
or
sbb
and
mov
pop
out
rcrb
outsl
ljmp
dec
push
and
or
inc
or
xchg
ret
lret
int
dec
mov
lcall
daa
stc
pop
sub
mov
cmpsl
arpl
xor
pop
adc
push
xor
push
fstps
mov
shll
xor
mov
call
dec
lcall
add
pusha
insb
lcall
rol
je
xchg
je
cwtl
cwtl
adc
mov
and
adc
ret
jo
pop
cmpsb
mov
add
push
jge
mov
add
out
and
xchg
jl
dec
ret
push
jecxz
hlt
stc
repnz
cs
adc
enter
cld
jae
xor
imul
adc
mov
mov
mov
xorl
sub
cltd
push
mov
out
outsl
rcl
sub
sbb
or
xor
jle
mov
ret
adcl
roll
sarb
push
adc
dec
mov
dec
rclb
mov
jne
lret
test
and
lret
ja
iret
or
inc
fs
jo
xorl
lret
push
jb
ljmp
and
call
lcall
aam
fucomi
push
mov
stos
xchg
cmpb
xor
int3
mov
subb
loope
js
sub
fs
cmpsl
adc
lea
sbb
outsb
inc
sbb
in
adc
icebp
test
bound
pop
jl
adc
adc
shrb
fisubl
add
notl
xchg
sbb
repz
adc
mov
pop
pop
mov
imul
mov
cmpsb
loop
mov
sahf
lcall
jecxz
out
mov
add
hlt
arpl
mov
sub
rol
ja
sbb
or
mov
jns,pt
push
jecxz
ds
jne
mov
enter
xchg
fsubr
inc
push
cmpsl
into
in
xchg
test
movsl
add
test
pop
sarl
or
inc
xlat
adc
repz
das
icebp
dec
outsb
jb
xor
or
cmp
xchg
aam
mov
mov
stos
push
sub
cli
adc
jno
push
sub
jbe
add
pop
mov
ds
mov
lret
pop
sbb
out
jmp
lds
lea
mov
mov
in
xor
adc
adc
loope
clc
fldenv
dec
gs
push
cltd
fdivrl
cld
add
mov
mov
push
in
js
dec
ljmp
push
lods
lock
lods
sahf
repz
or
cs
pop
data16
inc
cmpsb
rolb
adc
inc
sbb
add
fildll
pop
loop
lock
xorl
gs
cwtl
or
out
movq
dec
xchg
sub
dec
mov
movsl
incb
fwait
std
and
xchg
out
push
sbb
or
mov
push
dec
adcl
shr
mov
jo
inc
xlat
pop
int
mov
mov
pop
mov
fwait
mov
scas
sar
std
fnstenv
in
test
stc
in
xchg
adc
test
popf
shll
cli
xchg
aad
jae
daa
imul
xor
push
mov
outsb
sarl
mov
xor
mov
sbb
pop
int3
push
inc
xchg
cmc
xor
cli
shll
jmp
xor
push
jo
dec
jg
mov
aad
xchg
ror
movsb
aas
dec
lods
or
lret
mov
jne
sbb
lahf
repnz
pop
xchg
ds
dec
stos
dec
pusha
jns
adc
movsl
or
sarl
daa
rcll
ljmp
mov
dec
push
mov
ret
push
cmp
mov
test
or
lods
fldcw
push
xor
add
inc
mov
fstps
sub
cs
add
xor
stc
mov
inc
cs
imul
jge
pop
sbb
cmpsl
pop
scas
push
aaa
jne
inc
jno
sbb
push
in
push
cmp
push
xlat
out
pop
mov
add
cmp
xlat
aad
out
insl
add
pop
rcrb
jo
rorl
pop
insb
rcll
cltd
faddl
jbe
dec
pop
push
fsubl
outsl
mov
je
pop
jge
xchg
jge
push
outsl
and
jmp
cmp
or
sbb
out
lahf
cmp
mov
inc
dec
mov
mov
inc
jmp
js
outsl
imul
inc
rorl
test
push
mov
cmp
test
ljmp
inc
or
or
in
cltd
lret
daa
mov
in
sahf
cpuid
stos
and
lds
push
sbb
fdivrl
cmpsl
adc
scas
scas
xlat
cltd
lods
pop
mov
cltd
jecxz
add
add
in
dec
mov
pop
xchg
shll
loop
cld
pusha
add
enter
in
je
lds
enter
xchg
aaa
stc
xor
mov
push
mov
and
sub
ffree
shlb
fwait
insl
insb
loope
scas
or
cs
stos
movsl
aad
subl
les
lret
sbb
cli
jp
in
and
push
pop
movsb
add
pop
imul
or
insb
in
sbb
cmpsl
push
aaa
mov
xchg
cs
jmp
mov
and
mov
sbbb
cld
cmpsl
mov
sbb
aas
mov
pop
xchg
repnz
aas
pop
xor
and
sahf
cwtl
or
pop
outsl
mov
push
in
ret
in
dec
and
or
cmp
lea
les
jne
cld
jg
adc
push
imul
and
cmpsb
pop
test
lahf
hlt
cli
lcall
dec
and
mov
cltd
pop
sbb
pop
dec
stc
fdivs
sbb
imul
lods
rorb
mov
xor
add
fistps
loop
gs
jne
addr16
pop
dec
fs
cmp
bound
inc
and
cmpsb
pop
add
jne
jge
shll
mov
movsl
push
xchg
jg
push
dec
sbb
sub
cmpsl
pop
stc
subb
mov
and
ss
popa
cmp
andl
dec
xchg
jmp
add
mov
pop
pop
aas
fcmovnb
ret
popa
jmp
loop
and
cmp
jmp
mov
jmp
sub
inc
inc
fstpt
loop
mov
or
je
sbbl
jbe,pn
nop
jnp
ret
and
push
and
push
push
inc
aaa
test
mov
mov
mov
aam
cmpsb
out
mov
fiaddl
aad
inc
pop
popa
mov
pop
nop
sbb
cmpsb
mov
negb
inc
dec
sbb
jae
fnstsw
xchg
xchg
xchg
dec
data16
xlat
inc
inc
or
jle
mov
sarb
popf
hlt
or
rcrb
and
add
lcall
xchg
mov
fildl
std
sub
outsl
and
inc
push
add
mov
or
mov
insb
inc
outsl
dec
sub
push
clc
hlt
mov
push
mov
dec
out
stc
shlb
insb
pop
cmp
add
sti
pop
push
mov
stos
rcrl
cltd
and
cmp
add
lock
adc
arpl
cmc
mov
add
sbb
mov
pop
inc
loope
push
popa
push
dec
pop
movsb
adc
into
sub
into
xchg
leave
pop
sub
mov
mov
jae
push
mov
loop
aas
cmpsl
dec
cmp
mov
and
mov
add
xor
inc
inc
add
sub
pusha
notl
nop
mov
data16
dec
ja
or
jecxz
cmp
xchg
pop
cmpsl
movsl
shr
in
mov
push
cmp
inc
and
dec
fwait
stos
fsubrs
into
repz
nop
movsl
xor
ret
mov
dec
shl
mov
and
fxtract
pop
pop
enter
mov
ja
xchg
repnz
push
jns
mov
lret
repz
jb
in
cs
and
fadd
fucomi
push
lret
jbe
lret
xchg
mov
mov
inc
sub
scas
adc
lret
push
cmpsb
mov
aam
insb
xchg
dec
dec
cmpsb
jl
push
data16
jb
pop
pop
leave
mov
push
std
mov
cltd
call
cmp
push
or
push
cmp
in
inc
adc
rorl
test
scas
lahf
mov
inc
or
fdivrs
sbb
push
add
push
testl
jecxz
add
test
dec
stos
outsb
jns
jae
jbe
call
mov
out
out
popa
dec
scas
xchg
jl
dec
jle
mov
inc
push
cmp
pushf
loopne
int
loop
jb
inc
cmp
loop
sbb
jge
add
or
or
insl
cmpsl
push
dec
int3
mov
jp
gs
pop
imul
nop
push
int3
xchg
push
mov
add
cmpsl
sub
das
xchg
mov
dec
enter
dec
adc
out
pushf
in
xor
inc
aad
in
push
cmp
mov
jnp
stc
dec
push
int3
insb
inc
loope
or
fldcw
adc
test
shrl
inc
xchg
push
loope
push
or
inc
scas
inc
cmp
lahf
mov
mov
inc
int3
movsb
rcr
add
push
repz
xor
popa
mov
sbb
sbb
mov
outsb
ja
push
mov
push
insb
push
or
push
in
xchg
xchg
ljmp
into
fbld
sub
mov
adc
add
or
rcll
mov
and
mov
js
test
and
fwait
aas
add
das
pop
jecxz
in
mov
cmp
pusha
mov
fisttps
xchg
ror
mov
lea
pushf
dec
jb
in
jne
cmpsl
add
aam
test
imul
movb
pop
pusha
jnp
mov
add
mov
jo
and
das
dec
cmpsl
std
add
pushf
cmc
sahf
rcrl
dec
xchg
mov
jg
scas
add
dec
mov
jae
pop
loope
lret
xor
jp
mov
sbb
jne
dec
lcall
xor
aam
inc
out
xchg
outsl
in
xor
stos
mov
pop
add
or
jmp
jne
enter
int
popf
ss
ret
jae
sbb
psrad
in
addr16
jne
or
lock
imul
out
pop
jae
ss
ds
int3
sbbb
repz
jo
inc
sub
cmp
lods
sbb
sahf
sub
fdivs
out
cmp
push
sbb
mov
stc
push
xchg
std
lret
into
aad
sub
dec
xor
outsl
push
pushf
sub
inc
pop
cmp
icebp
pop
ja
inc
sbb
sahf
lret
and
lahf
lods
mov
mov
xor
mov
sub
jo
push
xchg
xchg
addr16
inc
mov
dec
cmp
stc
xchg
std
aaa
testl
xor
xchg
shrb
xor
adc
sub
pop
add
pushf
data16
xchg
js
sbb
pop
outsb
rcrb
pop
mov
push
dec
sub
jle
insl
sub
ljmp
insb
dec
inc
jbe
adc
repnz
dec
leave
in
lds
push
pop
jno
add
aam
in
xor
pop
adc
jg
dec
push
imulb
in
loop
mov
jae
mov
rclb
dec
inc
jbe
outsb
js
xchg
jmp
lods
sbb
mov
cmp
movsl
loope
xor
mulb
xorl
xor
lds
mov
mov
xchg
push
pop
jp
xor
xchg
adc
sbb
mov
mov
jb
pushf
and
lret
in
inc
sub
mov
pop
ljmp
testb
jecxz
data16
jle
push
sub
sub
mov
xchg
pop
lds
jecxz
lock
lods
stos
test
xchg
cwtl
inc
lret
fnstsw
add
pop
dec
lret
in
andl
sbb
aas
cmpsb
rcll
mov
ss
or
mov
add
loope
mov
leave
add
cmc
xchg
mov
adc
jmp
pusha
lods
bound
loop
imul
imul
push
push
test
mov
aam
pop
imull
push
xchg
mov
and
sbb
xchg
jl
notb
scas
push
mov
sbb
pop
xor
in
fidivrl
std
mov
sbb
xchg
mov
mov
loop
push
imulb
pop
shrl
inc
add
rcrb
lret
data16
imul
xchg
js
lea
cmpsl
rcrl
mov
mov
xor
sbb
lea
inc
cmp
mov
cmp
icebp
icebp
pushf
xchg
mov
mov
inc
into
ja
adc
cmp
jnp
hlt
push
xchg
mov
stos
ja
dec
push
mov
fwait
shrl
add
jg
xor
stos
std
icebp
jmp
xchg
and
jno
pop
xchg
insb
pop
xchg
jne
hlt
pop
dec
sbb
mov
lahf
inc
insl
dec
int3
mov
js
inc
imul
jp
mov
mov
jecxz
pusha
and
inc
add
fstpt
out
jno
aaa
movsb
pop
sbb
repz
xor
and
xor
push
rclb
cmp
mov
es
hlt
pop
fisubl
sahf
inc
mov
xchg
pcmpgtw
xchg
push
add
jge
das
mov
dec
inc
xadd
sysret
mov
adc
stos
data16
mov
mov
inc
shrb
lret
inc
call
lret
lahf
lock
outsl
dec
or
xchg
fisttpl
dec
adc
push
in
and
sarb
aad
ret
add
dec
andl
aad
push
out
sub
cmc
repnz
data16
repz
sbb
xor
xchg
jo
popa
inc
daa
mov
aad
mov
das
cmpsb
xchg
lret
jmp
xor
pop
push
lods
out
sub
or
adc
test
fxch
push
pop
mov
loope
xor
outsl
xor
mov
cmp
inc
ret
adc
test
fadds
inc
jnp
je
and
and
mov
scas
mov
pop
xchg
adc
cli
scas
push
test
and
inc
test
es
out
aas
jno
rorl
push
fstpl
sub
test
insb
daa
inc
ljmp
sti
addr16
addr16
dec
adc
sub
mov
pop
adc
daa
idivb
xor
gs
in
lcall
xchg
mov
out
pusha
mov
mov
or
and
mov
sarl
mov
or
xor
jns
nop
add
mov
cmpsl
dec
pop
outsl
ret
dec
insb
mov
mov
shll
cmp
out
pop
adc
pop
jb
out
mov
ret
int
xor
scas
xchg
insl
push
test
xor
cli
xlat
push
inc
jae
fsubrs
fildl
jmp
lret
adc
xchg
out
add
jns
les
popa
push
dec
fists
push
aam
daa
ss
or
cwtl
sub
sub
jmp
mov
shrb
stc
jecxz
mov
mulb
sbb
test
nop
cld
push
repz
mov
das
xchg
stos
cltd
scas
negb
addr16
das
mov
bound
aas
ds
xorb
mov
jecxz
dec
mov
sti
test
push
jne
sti
pop
cltd
add
and
fdivl
lock
push
lds
test
or
inc
cmc
mov
mov
sahf
cmp
push
jl
insl
xchg
lods
sbb
les
or
xchg
lahf
add
lcall
xchg
add
out
pop
mov
ljmp
or
xchg
xlat
rcrl
arpl
test
test
pop
loopne
mov
cmp
xor
xchg
and
sub
mov
sub
dec
and
loop
adc
pop
dec
imul
mov
bnd
lcall
xchg
inc
jno
jb
gs
fcmovu
addr16
xlat
mov
add
arpl
xchg
movsw
jne
orb
pop
and
loop
push
outsl
or
sbb
sbb
mov
ja
cmp
mov
sbb
jo
pushf
xchg
xchg
and
or
mov
jnp
jne
adc
add
in
pop
push
xchg
mov
mov
seta
fs
xor
jns
push
testl
add
mov
cmovg
cltd
push
aaa
add
cmp
mov
xchg
jge
sub
stos
fistl
xchg
imul
mov
mov
je
lcall
push
push
sub
in
out
or
loopne
dec
negl
pop
xor
jl
push
jg
icebp
or
jecxz
or
xchg
jae
cmpsb
leave
pop
dec
push
pop
xchg
nop
dec
jbe
rcl
lods
lret
addb
or
fnsave
sbb
lds
aad
scas
jo
aam
xor
xchg
cmp
cmpsb
mov
ja
ljmp
ficoml
push
xchg
fildll
jle
or
xchg
sub
cmpsb
pop
mov
std
negb
jmp
rcrl
mov
mov
mov
xchg
jbe
dec
push
ds
stc
and
or
imul
xor
inc
out
lea
jno
movsl
mov
les
add
mov
cmc
aad
outsb
add
cmp
insb
mov
mov
cltd
pop
sbb
addr16
or
mov
jno
adc
or
push
sbb
or
ffree
outsb
bound
fdivrs
ror
mov
popa
fnstenv
pusha
int3
mov
xor
orb
adc
jno
jns
enter
add
xor
mov
lock
xchg
mov
xlat
mov
inc
fldenv
int
and
mov
addr16
sub
inc
lret
pop
mov
outsb
push
dec
pusha
popf
pop
push
testl
ret
pop
push
jne
cwtl
stos
insl
test
mov
aam
add
vcvtpd2ps
push
stos
jmp
inc
ds
push
imul
push
and
lods
and
shll
outsb
adc
jl
aam
jno
pusha
scas
gs
arpl
pop
cmp
cmp
into
scas
sarl
cmp
adc
jne
mov
lods
lret
sbb
jne
xchg
cmp
fmull
stc
iret
mov
push
inc
pop
xor
test
loope
push
mov
mov
mov
ret
std
mov
xor
stos
mov
inc
mov
pop
adc
fstp
mov
outsl
fsubrs
jb
into
xchg
cmp
les
mov
int3
xchg
push
addb
lds
mov
inc
fsubl
sub
add
mov
jg
adc
aad
push
mov
pop
fdivr
inc
mov
sbb
sub
xchg
jl
popf
mov
cwtl
stos
out
add
inc
jp
push
sub
fxch
pusha
imul
mov
movsb
iret
test
xchg
cli
repz
mov
repz
das
jne
ss
mov
mov
mov
rcl
mov
jnp
out
iret
jg
mov
mov
mov
lea
cmp
sub
or
cmpsl
aad
sbb
fst
into
in
out
in
and
dec
adc
push
and
jns
jmp
lcall
xchg
cmc
pop
fwait
sbb
cmp
pop
pop
jns
addr16
and
pop
xchg
in
push
inc
addr16
rcr
stc
mov
mov
scas
lds
pop
cmp
subl
out
mov
ja
popf
iret
fs
xchg
imul
mov
push
in
fnstsw
test
inc
out
sbb
pop
das
jb
dec
out
mov
repz
sub
test
push
cmovno
mov
add
and
pop
push
mov
dec
jb
js
push
and
ja
cmp
test
sahf
pop
js
cmp
ficompl
and
repnz
movsl
mov
ja
cmp
dec
sbb
ret
push
aad
push
sub
insl
jne
fiadds
push
imul
pusha
ret
mov
adc
xor
fists
or
mov
cmp
push
push
loopne
lahf
cltd
enter
fisttpll
sub
adc
or
dec
mov
stos
test
fildl
pop
jnp
ret
jo
dec
cwtl
xor
shll
aad
inc
mov
xchg
jae
adcb
ret
rol
mov
dec
sbb
mov
cmp
je
int3
adc
aas
pushf
add
test
rolb
rcrb
pop
pop
lock
out
adc
lods
bound
xor
dec
xchg
popa
mov
xor
out
cmp
addb
cli
outsb
filds
pop
sahf
call
xor
loop
sub
xor
lea
or
jle
sahf
fstpl
push
in
jmp
mov
imulb
and
stos
shlb
add
arpl
aaa
xchg
arpl
loopne
test
pop
and
or
popf
cmp
or
jb
faddl
push
loope
arpl
bound
arpl
test
inc
gs
dec
push
gs
idivb
push
loop
lcall
mov
js
and
pop
jmp
test
pop
nop
gs
xchg
pop
int
mov
fdivs
inc
lods
sub
in
ja
push
pusha
mov
mov
addr16
aam
mov
mov
jns
jp
dec
sti
dec
mov
mov
insl
push
lret
std
dec
pop
adc
addr16
lahf
into
adc
cltd
or
jb
or
popa
mov
xchg
add
push
add
js
inc
push
scas
pop
repz
into
xchg
repnz
push
sti
hlt
xchg
inc
clc
imul
movsl
sbb
mov
jl
test
dec
fs
out
pop
xor
xchg
push
or
sbb
mov
scas
sbb
iret
test
aaa
pop
adc
xor
std
jl
dec
daa
cmpsb
add
cmpsb
xchg
dec
xchg
sbb
mov
dec
test
mov
roll
add
arpl
pop
inc
scas
es
movsl
push
lcall
jg
lock
dec
mov
fsubrl
push
dec
test
inc
hlt
scas
call
mov
mov
pop
inc
mov
cmp
inc
imulb
xor
and
inc
jl
rclb
stos
loope
inc
sbbb
push
andl
outsb
fidivs
push
push
xor
mov
add
mov
xchg
push
sbbb
mov
xchg
testl
xor
push
call
xchg
imul
gs
pop
fildll
mov
mov
push
or
lfs
xchg
mov
sub
inc
stos
add
push
das
arpl
mov
int3
mov
out
mov
pusha
mov
pusha
and
lds
mulb
pop
sbbl
jl
xlat
and
ss
mov
testl
add
outsb
xor
divb
jbe
pop
jb
cli
pop
int3
stc
add
ficoml
mov
push
test
aas
push
mov
mov
fldenv
inc
sbb
xchg
cmp
mov
sub
xchg
xchg
scas
push
adc
pop
iret
xchg
ret
out
rclb
adc
test
lret
or
xchg
xchg
sahf
xchg
movsb
ds
sbbb
add
ja
stos
fdivrl
in
call
and
mov
incl
adc
inc
test
adc
cli
inc
loop
sbb
shl
mov
leave
dec
cmp
add
jge
fcomip
aad
addl
xchg
cmpsb
adc
jmp
rol
mov
verw
test
adc
or
lock
fnsave
mov
lret
xchg
xchg
jno
cli
pop
dec
insb
cmp
jne
mov
lea
enter
outsl
sar
fwait
das
pushf
mov
pop
push
stos
xchg
outsb
add
test
jmp
fildll
fsubr
cmp
mov
mov
sub
cltd
pop
popf
adc
and
test
rorb
data16
mov
mov
pop
in
mov
push
dec
aad
adc
lods
xchg
lea
push
mov
cmp
mul
jl
push
jp
jp
inc
cmp
cmpsb
mov
sti
ja
jg
fcmovnu
aad
aas
lods
pop
fsub
push
mov
and
aad
stc
fisttpll
test
lods
and
xchg
and
or
test
jmp
adc
addr16
pop
mov
leave
jnp
cmp
pop
xor
repnz
dec
dec
jae
jle
fucomip
mov
aas
adc
xor
mov
addr16
daa
popw
dec
rcrl
ret
cwtl
mov
call
cli
pop
fucomi
nop
jae
push
pop
scas
in
mov
lcall
test
xor
inc
repz
or
lea
push
sub
in
test
xchg
inc
sbb
adc
call
ja
jl
popa
std
sub
stos
pop
movsl
imul
sbbl
pop
stc
push
repnz
arpl
in
aas
dec
stos
sbbl
js,pt
loope
xchg
push
ds
aaa
sub
movsb
nop
test
xchg
fwait
movsb
jae
jnp
sti
pop
add
sbb
xchg
mov
sbb
test
shrl
xchg
test
xor
or
xor
outsb
push
enter
repnz
sarl
xchg
xor
cmp
stc
popf
xor
inc
sbb
inc
sub
adc
push
jo
cld
lahf
sub
or
push
mov
pushf
cs
adc
mov
adc
inc
dec
std
and
sbb
sub
out
push
aad
and
imul
pop
repz
lahf
sub
mov
sbb
nop
andb
push
daa
into
ljmp
mov
inc
add
sti
dec
adc
xor
sub
sbb
insl
add
ja
cwtl
mov
and
cmpsb
ljmp
push
arpl
mov
lds
adc
ds
in
add
pop
and
fimull
test
jmp
ds
inc
rorl
aaa
ss
sarb
push
jae
inc
mov
cmp
sti
pop
repz
push
roll
dec
jne
cltd
inc
adc
shll
pop
add
pop
popa
inc
sbb
sub
mov
std
iret
sub
sub
test
movsl
push
sub
inc
add
in
imul
sub
jbe
sbb
mov
jne
cld
xchg
es
int3
xchg
mov
rcll
or
mov
push
ja
pop
lds
roll
loopne
adc
loopne
mov
push
fistl
and
test
cmp
dec
or
outsl
adc
and
test
xlat
int
lods
adc
xchg
inc
dec
xor
aad
lret
into
sub
std
sbb
mov
sub
mov
jb
jo
sahf
ret
sahf
lret
cld
push
add
jnp
movsl
mov
and
popf
xlat
movsb
in
rolb
insb
mov
inc
jle
jmp
rcrl
mov
mov
daa
je
mov
jl
push
sub
rorb
mov
in
add
cwtl
mov
das
incb
push
lds
cli
sbb
add
sub
enter
daa
sbb
ja
pop
mov
mov
sbb
jle
sbb
sahf
push
or
inc
sub
xlat
ljmp
shrb
inc
popf
add
sbb
or
pop
int
and
cmp
js
xchg
and
pop
shrb
inc
xor
shl
cltd
jecxz
bnd
dec
mov
js
jg
in
shrl
repz
int
cld
inc
cmpsl
mov
ss
push
mov
mov
aaa
mov
xchg
mov
mov
insb
call
cmp
pop
jmp
adc
out
xor
out
jbe
or
std
ret
xchg
sahf
push
inc
sub
ret
ret
leave
jns
push
mov
fdivl
loop
scas
jnp
jns
movsb
inc
pop
hlt
xchg
xchg
imul
jns
push
push
das
scas
mov
xor
sub
lcall
fldt
out
test
pushf
xchg
add
inc
cli
cmpsb
test
cmpsl
clc
in
cmc
imul
mov
sub
inc
pushf
push
insl
xchg
out
fldl
push
or
add
or
cmpsl
sub
cmp
mov
xchg
mov
add
cmp
es
xor
daa
mov
fsubrs
insl
dec
nop
jno
and
std
pop
or
loope
fiaddl
jo
nop
jno
or
daa
pop
lds
sbb
cmpsb
addb
sbb
cmp
iret
cmp
add
rcrl
xchg
icebp
faddl
shl
rorl
cmp
ret
in
push
lds
cmp
add
mov
and
js
nop
popf
idivl
pop
inc
xchg
xor
int
frndint
xchg
xor
ja
or
pusha
dec
aam
les
jp
outsl
popa
push
adc
pop
rsqrtps
lods
addb
fnsave
mov
cmpb
adc
pushf
push
mov
lods
imul
sahf
in
decb
mov
pushf
aad
mov
jbe
mov
in
in
outsl
pop
jno
push
test
inc
daa
in
scas
cltd
aas
decl
inc
mov
testl
andb
rcll
fs
cmp
inc
adc
lds
push
mov
movsl
fmull
push
or
movsb
pop
mov
mov
imul
mov
cmp
pop
cmp
push
jge
icebp
or
xchg
push
imul
inc
cmpsl
jecxz
mov
je
jnp
xchg
pushf
dec
sahf
lods
xchg
xor
ja
shl
aam
push
imul
jnp
jbe
test
sbb
fistpll
mov
fstpt
fistpll
xchg
aad
movsb
cmpsb
xchg
push
es
jns
int
in
daa
push
mov
addb
dec
cmpsl
shrb
push
bound
mov
sbb
call
lods
mov
dec
xor
jmp
push
or
sbb
movups
xchg
stos
outsl
sbb
pop
inc
in
rclb
popf
rorb
push
cpuid
mov
push
repz
aas
push
sti
repnz
fcomps
ret
inc
popa
std
ljmp
mov
inc
mov
roll
jno
and
mov
jno
arpl
push
repnz
pop
mov
xchg
jbe
cmp
nop
subb
push
dec
negb
mov
or
mov
mov
and
je
jle
adc
or
test
xchg
adc
ret
mov
ja
and
inc
sti
cli
mov
out
int3
cmc
jo
cwtl
mov
cmp
ss
add
out
sbb
frstor
ja
out
loopne
sub
in
fldcw
in
push
pop
das
fwait
fs
mov
adc
mov
pop
xchg
cmp
fsubs
mov
add
dec
scas
inc
jns,pn
mov
pop
iret
arpl
mov
xchg
inc
mov
mov
sub
sub
sbb
pop
inc
add
or
popa
add
aaa
mov
pop
in
sub
pop
inc
mov
mov
cmp
shll
inc
mov
fs
in
sbb
add
sub
xchg
xor
and
das
into
popl
vaddsubps
hlt
test
fwait
lock
adc
adc
popf
das
in
ficompl
xchg
mov
ret
mov
push
dec
rcll
mov
iret
imul
test
das
scas
mov
divl
lock
mov
push
iret
mov
cmp
es
lret
mov
push
and
enter
sahf
add
sti
movsl
rcrl
fcompl
or
lods
psrad
loop
add
pop
inc
mov
div
jae
mov
dec
add
loop
cmpsb
cwtl
fwait
jecxz
xlat
dec
test
add
lret
mov
sbb
outsb
bound
loope
adc
jae
jmp
cltd
subl
xchg
outsb
and
imul
dec
xor
push
fdivp
jecxz
nop
test
adc
mov
dec
out
ss
gs
ja
mov
mov
push
insl
cmp
jl
push
jmp
sbb
xchg
sbbl
sti
add
pop
out
sub
ljmp
cld
inc
dec
add
mov
adc
adc
xor
mov
jg
push
rcr
sub
icebp
in
pop
out
jg
dec
xchg
adc
xor
pop
push
aas
test
mov
out
inc
in
or
jne
inc
ja
data16
xor
push
adc
and
clc
mov
stc
sub
mov
dec
es
rorl
jne
jbe
out
call
jae
pop
ret
std
ret
insl
test
push
xchg
call
cmp
outsb
daa
mov
dec
jge
shrb
shll
xor
pop
hlt
mov
enter
pop
xchg
push
scas
scas
lods
popf
sub
icebp
pop
ret
or
mov
loopne
pop
imul
sbb
test
xor
xchg
xchg
daa
push
add
xchg
sbb
addr16
or
or
lret
and
test
xchg
lret
pushf
and
jmp
add
pop
fdivs
mov
hlt
fs
adc
and
mov
sbb
add
mov
stos
jnp
daa
and
cmp
mov
dec
or
or
sub
dec
pop
mov
popf
mov
sahf
scas
push
jb
pop
adc
insl
jmp
inc
mov
insb
and
push
lret
scas
mov
imul
or
jecxz
js
jae
rclb
lcall
mov
inc
fcom
movsl
iret
inc
gs
mov
test
stos
push
ficoml
lods
mov
mov
insl
out
pop
mov
leave
int3
pusha
in
arpl
jb
es
stos
sbb
mov
mov
inc
fldt
mov
fistl
cmp
jbe
push
pop
jo
cltd
or
repnz
mov
inc
lret
mov
outsb
jb
fisubrs
inc
inc
insl
das
aas
scas
in
out
mov
xchg
test
je
cmp
in
imul
xor
and
mov
int
lods
sub
push
mov
cmp
sbb
add
adc
xor
and
dec
es
daa
inc
and
inc
dec
sar
cmpsb
sbb
dec
add
add
in
xor
fwait
mov
cmp
push
clc
setle
xchg
jbe
add
adc
cwtl
addr16
add
sbbb
cltd
xor
and
sub
add
jb
aaa
mov
cld
ret
ss
push
insl
push
or
cmc
mov
mov
call
rorl
dec
lret
fiadds
xchg
inc
fs
push
test
lods
or
mov
test
xlat
mov
lret
fucomip
cmp
push
inc
fisubs
data16
arpl
fisubrs
jae
sti
xchg
stos
mov
pushf
aad
mov
add
dec
fwait
cmp
imul
xchg
pop
jge
lahf
lret
mov
jecxz
cmpsl
sub
or
cmp
jmp
cmp
xchg
mov
ds
mov
call
xchg
rorl
pop
sahf
push
or
xor
lcall
mov
inc
fisubrl
mov
xchg
mov
out
repz
lcall
icebp
push
sbb
pop
mov
inc
xchg
add
xchg
inc
incb
lret
add
mov
push
shll
or
push
mov
outsb
jb
mov
sbb
in
dec
pushf
into
and
inc
and
cmp
push
enter
cmp
push
jmp
in
jle
xchg
adc
ficompl
fildl
gs
out
sbb
movsl
or
pop
pop
jb
xchg
and
shlb
cld
dec
mov
sub
dec
pop
xor
hlt
inc
adc
push
loopne
in
or
xchg
and
popf
in
push
push
pop
pushf
nop
sub
pop
lea
bound
ret
test
add
fnstenv
jbe
int3
shr
pusha
sub
cmp
test
cmp
out
push
cmc
movsb
imul
filds
scas
iret
imul
pop
das
ja
add
push
inc
sub
add
and
lods
lods
inc
repz
mov
js
xchg
mov
fimull
shll
sbb
lods
add
lods
and
jno
in
call
insb
subl
or
xchg
lret
inc
fcmove
pop
xor
daa
gs
add
fsubrs
and
xor
stos
xor
sahf
sbbl
ror
pop
adc
cli
js
stos
push
push
movsl
lahf
mov
push
insl
jmp
inc
in
push
hlt
sbb
in
cmp
pop
xchg
push
push
or
loope
push
out
ss
cmpsl
mov
in
mov
inc
jecxz
xchg
cltd
lret
xchg
adc
sar
jno
jns
dec
push
add
scas
jle
sbb
rorl
or
jno
icebp
movsb
pop
jno
pop
fcompl
ss
lcall
roll
mov
jne
jp
lods
cmp
push
cmc
daa
cmp
and
jb
mov
xor
mov
dec
lea
push
inc
xchg
mov
jle
xor
aaa
jo
pusha
dec
clc
or
dec
or
push
xor
xor
stos
xor
pushf
std
xchg
pop
mov
mov
xchg
push
sbb
push
cmp
push
repz
loopne
sub
mov
std
dec
or
push
test
mov
aam
mov
xor
pop
xchg
pop
cmpsb
into
jmp
push
js
xor
in
clc
add
xorb
pop
sub
das
add
fwait
outsb
xchg
and
pop
ja
mov
decl
push
jo
jo
mov
aaa
ja
popa
push
aas
cmc
adc
push
mov
and
mov
shl
pop
sbb
or
je
inc
push
sbb
mov
ljmp
iret
rcrl
xor
lcall
push
rclb
cld
std
popa
lods
ja
sbb
lods
jnp
push
jle
mov
adc
cmpsl
mov
pushf
fisttpl
test
push
lods
dec
sbb
stos
ja
cmpsb
fdivrl
leave
mov
decb
out
xor
ror
pop
push
mov
sti
daa
jne
in
inc
out
inc
mov
fstl
jg
test
or
in
pop
stos
mov
incl
repnz
mov
inc
mov
pop
sti
out
push
in
jg
hlt
mov
lds
cld
js
cmc
sub
mov
popf
subb
pop
xchg
shr
cmp
pop
sbb
push
rcl
cmp
xchg
cmpsl
imul
pop
idivb
cmc
imul
sti
dec
jns
cmp
inc
fmuls
ret
mov
push
jp
sub
sti
pop
jge
scas
pop
lea
sub
push
lock
insl
mov
pusha
mov
outsl
mov
sti
push
arpl
mov
add
test
int3
test
aas
pop
add
mov
mov
mov
cmp
xchg
je
pop
xchg
push
mov
mov
cmc
push
and
sub
mov
out
push
movsb
aad
mov
mov
xchg
clc
fdivp
jecxz
dec
enter
rorb
daa
add
dec
push
enter
jnp
ror
xchg
and
in
dec
and
pop
stos
sub
fbstp
addr16
scas
xlat
jns
mov
adc
subb
pop
fcmovne
sbb
dec
add
fcmovnbe
into
andl
test
xor
loop
dec
xchg
xor
lcall
imul
jbe
test
fadds
mov
and
loop
test
mov
je
xchg
les
in
sub
xor
test
jnp
enter
jecxz
xchg
out
lea
cld
out
or
dec
and
xor
xor
or
xchg
fdivrs
mov
mov
mov
test
lods
leave
adc
dec
jp
cmpl
outsl
js
cwtl
add
sub
pop
and
ret
mov
test
xchg
jmp
cmp
lcall
sub
pusha
jmp
aad
cmp
icebp
lcall
or
pop
ljmpw
mov
dec
outsb
mov
push
sbb
test
sbb
inc
repz
loope
fcmovb
or
scas
cwtl
lahf
fwait
leave
and
cltd
sarl
push
cld
or
pop
xchg
dec
jbe
and
pop
jns
js
in
cmp
rcrb
aas
push
and
pop
add
mov
or
sub
cmp
out
ja
scas
pop
stos
inc
fst
jecxz
movsl
pop
cmp
mov
test
sbb
sub
jne
int3
push
and
loope
push
pop
push
std
inc
ret
adc
pop
je
call
mov
dec
sbb
or
test
or
adc
outsl
cmp
dec
cli
push
mov
xor
fstps
xchg
jecxz
cmpsb
inc
lea
stos
and
jmp
cltd
ss
mov
cmpsl
sbb
and
aam
sahf
rsqrtps
jb
out
mov
push
movsb
adc
xchg
test
push
dec
jle
push
or
mov
fidivrs
std
das
xchg
sbb
mov
push
lret
loop
out
or
sbb
add
mov
fisttps
andl
and
and
pop
xchg
mov
in
dec
lds
cmp
pop
mov
jne
and
inc
sub
loop
xor
xor
xchg
xchg
jmp
das
cltd
rcrb
push
call
fbld
push
and
xchg
pop
out
cmp
gs
cld
jg
out
pop
imul
rcr
inc
int3
je
xchg
pop
loope
imul
mov
lahf
mov
out
ret
jb
enter
sbb
xor
cmp
push
mov
or
jle
test
xchg
mov
das
mov
xor
push
xor
sbb
cltd
cs
jb
mov
sbb
jbe
mov
test
scas
bnd
in
lcall
nop
shlb
aam
adc
push
cmp
mov
cwtl
stos
mull
mov
and
dec
or
xchg
pop
jae
mov
mov
xor
pop
loop
push
xchg
enter
in
xchg
cltd
loop
and
loope
hlt
sahf
sbb
or
jae
out
or
aaa
inc
lds
dec
mov
mov
imull
popl
mov
test
inc
cmc
jl
jmp
pusha
adc
mov
or
sbbb
push
dec
lcall
sub
nop
mov
scas
pop
fstp
ret
push
cmp
push
mov
fstps
cmpsb
add
pop
add
aas
or
sarl
loope
mov
stos
js
sahf
lcall
jns
xlat
jne
mov
or
out
jecxz
xchg
lcall
out
jl
pop
or
push
pop
cmp
push
sub
jno
ljmp
pushf
adcb
arpl
fisttpl
clc
xor
clc
leave
fst
iret
push
aam
xor
mov
sub
sti
aad
lock
dec
sti
pop
insl
and
pop
cltd
mov
js
mov
shrb
inc
mov
jnp
and
add
or
push
sbb
xchg
sub
xchg
ljmp
stos
jg
mov
fmuls
or
bound
pusha
popf
sbb
inc
inc
adc
mov
test
inc
ds
bound
filds
xor
jbe
scas
js
outsl
aad
divl
in
lods
test
loop
jb
xchg
sbb
sbb
popf
jns
into
sbb
lods
lea
mov
ljmp
or
ret
cmp
or
ljmp
rolb
adc
sub
aaa
mov
scas
push
je
stc
enter
xchg
inc
mov
mov
insb
and
adc
idivb
mov
scas
mov
movsl
and
xchg
sbb
and
enter
insl
scas
mov
sub
rolb
adc
arpl
int
mov
movsb
ds
mov
mov
ficomps
or
cmpsb
dec
and
dec
idivl
insb
out
pop
sbb
pop
out
cmp
and
in
sahf
int
and
or
into
mov
dec
aam
pop
loopne
and
ds
push
mov
inc
sub
xor
shll
push
mov
ret
mov
xor
cmp
popa
sub
arpl
fs
add
mov
lds
dec
imul
repnz
popa
xor
mov
inc
aas
push
repz
repnz
mov
push
jl
test
loop
mov
or
mov
data16
mov
stos
sub
jg
sbb
movsl
xlat
scas
sub
iret
dec
pop
call
lds
shlb
cmp
mov
inc
loopne
in
nop
mov
mov
dec
jns
inc
rol
stos
daa
imul
movsb
aam
jmp
pop
sbb
mov
xor
or
sub
mov
lea
pop
push
stc
dec
sbb
xor
and
jle
mov
shlb
push
ficompl
push
test
push
insb
mov
xlat
mov
adc
dec
inc
leave
fwait
dec
push
pop
call
clc
bound
sarb
push
push
or
add
sti
shrl
add
inc
dec
fwait
jae
lods
ljmp
xchg
mov
icebp
xlat
std
mov
sub
cmpsl
stc
or
fiaddl
add
jge
cmp
xchg
and
adc
mov
inc
xor
and
or
pop
inc
push
fmull
sbb
subb
sbb
xchg
mov
flds
test
sub
inc
orl
jns
repz
inc
in
and
pop
push
cld
ret
int3
mov
jbe
push
mov
xor
adc
mov
movsb
insb
pop
jbe
fcmovnbe
mov
imul
pop
popa
inc
mov
rdpmc
xchg
xor
sub
jne
and
push
in
enter
jne
enter
outsl
hlt
jl
cmpl
jbe
cmp
inc
out
psrlw
out
cmp
dec
mov
pop
cmp
jno
ret
jmp
xor
gs
cmp
adcb
movsb
add
mov
iret
xchg
into
jmp
aas
adc
aam
loop
add
cmpsb
loope
pop
shrl
jno
aad
ss
sbb
xchg
mov
and
fxch
adc
dec
jg
push
mov
inc
repnz
adc
out
pop
ljmp
cmp
or
xchg
pop
ds
addb
cmp
mov
or
sbb
pop
xor
jns
fildll
and
cltd
arpl
pop
test
inc
mov
xchg
sbb
daa
adcb
pushf
jp
mov
pop
cmp
mov
icebp
ret
hlt
addr16
cmpsl
les
xlat
jmp
test
icebp
repz
je
pop
mov
push
aas
sub
in
stc
imul
cmp
add
xchg
pop
enter
xchg
adc
add
or
popa
repnz
and
imul
xor
loop
jbe
out
sub
push
push
cwtl
fs
ds
jl
sbbb
and
das
ljmp
sub
sahf
fidivs
dec
rcll
sub
inc
sti
insl
jge
lods
xchg
outsl
in
daa
ffreep
push
sub
movsb
scas
in
stos
insl
push
add
add
leave
xchg
pop
cmpl
push
or
push
sub
dec
push
lret
mov
scas
testl
popf
lahf
out
fisubl
repnz
neg
xchg
cmp
push
and
lcall
fistpll
daa
decl
stos
ss
fwait
loope
sub
mov
ljmp
movsl
iret
sub
aad
cmp
dec
stos
pusha
loopne
xor
out
icebp
add
fwait
cs
cwtl
xchg
add
sbb
out
xor
int
dec
pop
movsb
sbb
adc
cmp
insb
insb
popf
sbb
filds
arpl
jecxz
rorb
and
lret
pop
push
sbb
adc
int
flds
and
test
push
adc
xor
pushf
call
push
sbb
and
decb
ljmp
scas
je
sti
dec
xor
lock
sub
adcb
and
cmpsb
inc
mov
mov
xor
fdivl
sbb
clc
nop
scas
out
pop
and
loopne
clc
loopne
mov
mov
stos
insl
enter
jge
push
sub
in
add
ljmp
push
dec
cmpsl
lret
ljmp
fwait
adc
xorb
mov
or
push
xchg
lods
xor
shlb
cmc
popa
das
lcall
out
dec
inc
hlt
fsqrt
aas
bound
stos
lock
or
jl
xchg
imul
cmp
repz
ja
inc
icebp
inc
dec
test
in
xchg
outsl
cmp
mov
andb
iret
and
cmp
dec
mov
xchg
lea
xor
add
sbb
dec
lret
mov
cmpsb
scas
mov
dec
pop
in
das
mov
dec
cmp
daa
pop
jne
aam
hlt
je
cmpl
inc
stos
popf
cmp
xor
aas
cli
stos
mov
mov
sub
mov
clc
out
inc
mov
loopne
fs
mov
adc
mov
outsb
arpl
jo
outsb
add
bound
pop
nop
and
lret
jb
mov
or
sbb
xor
jecxz
cmpsb
xchg
mov
ret
icebp
inc
ljmp
xlat
and
pop
fldlg2
out
stos
and
or
ljmp
data16
insl
pop
push
cmp
push
das
fsubs
outsb
mov
mov
pop
sbb
testl
jb
sti
xor
mov
loopne
daa
pusha
add
sub
xchg
xchg
cmp
mov
mov
stc
cmp
arpl
addr16
push
sub
dec
push
es
inc
jge
adc
stos
xor
in
cmpsb
jae
dec
test
rcrb
dec
je
dec
cmp
pop
mov
mov
cld
es
push
mov
leave
or
cmpsl
repnz
cmp
int
std
sbb
xchg
stos
std
jnp
fistpll
push
popf
sub
add
imul
or
in
cmp
sub
dec
dec
xor
cmpsb
add
sbbb
lock
fwait
adc
arpl
and
pop
ljmp
mov
dec
mov
ljmp
xlat
inc
std
adcb
jo
shll
and
mov
sbb
mov
mov
imul
movsl
ret
int3
inc
lcall
arpl
hlt
repnz
xchg
xchg
sti
loopne
or
push
sbb
imul
xchg
jae
aas
subl
pop
js
pop
lret
or
mov
mov
out
sbb
mov
rolb
inc
adcl
ss
adc
push
stc
stc
add
cmpsb
sarb
jmp
call
enter
fldenv
push
out
dec
add
enter
popa
insb
pop
inc
stos
jg
adc
lret
xor
int
out
add
cwtl
mov
xchg
popa
cmp
jl
test
mov
dec
and
ja
mov
inc
imull
inc
clc
jg
add
iret
push
in
ja
mov
mov
fisttpll
icebp
xchg
sahf
mov
push
mov
fwait
gs
rcrb
ds
std
pop
mov
adc
mov
daa
xor
pusha
xchg
cmp
jne
nop
pop
unpckhps
dec
mov
sbb
popa
cld
mov
shll
or
mov
adc
and
and
mov
lods
dec
cld
or
add
pop
sub
test
ljmp
or
aam
cmp
iret
loope
jmp
mov
add
sub
jmp
and
dec
cmp
into
add
fs
aam
data16
out
inc
pop
pop
cltd
sti
sbb
pop
movlps
jge
inc
jno
mov
outsb
dec
in
aas
ret
hlt
arpl
hlt
mov
xchg
xor
push
push
fnstcw
sarl
inc
outsb
cmpsb
out
scas
subb
in
xchg
mov
cvtdq2ps
stc
fcmovb
pop
xchg
push
andl
lods
dec
out
mov
sub
rcrl
mov
add
in
xlat
adc
pop
inc
or
adc
pop
and
mov
push
push
popf
xchg
jle
xlat
pop
adc
les
jo
adc
cli
pop
mov
xor
cmp
movb
ds
icebp
arpl
adc
inc
mov
call
iret
push
call
test
lea
pop
inc
push
pushf
dec
xor
pop
enter
push
mov
jp
nop
jg
cmp
sub
insl
ret
cmc
cmp
js
or
aam
int
xchg
mov
popa
push
xchg
dec
scas
std
mov
mov
mov
icebp
lock
or
jl
mov
in
repnz
imul
cmc
jns,pt
imul
mov
je
scas
movsb
jl
mov
fcmovb
cmpsb
pop
orl
xor
pop
push
sub
sbb
es
pop
or
mull
mov
xchg
dec
add
mov
xchg
mov
inc
mov
mov
into
hlt
cmp
cmp
dec
enter
inc
test
call
cli
int
push
repnz
mov
adc
out
sub
outsl
test
dec
xchg
or
pop
add
cmp
cmp
lea
scas
sub
fsubrs
es
rorb
sub
jo
or
xchg
sub
pop
test
and
fsubrl
je
xchg
mov
mov
aad
xor
xchg
ds
jae
dec
push
jmp
fcmovu
pusha
fimull
mov
jnp
xor
pusha
dec
movl
icebp
push
xlat
cmp
fcmovu
lahf
mov
cmpb
jno
sub
in
popf
dec
clc
add
jbe
in
pop
push
sti
jle
inc
sbb
aaa
das
and
movsb
cmp
pop
mov
push
stc
pop
sbb
lock
inc
mov
xor
lock
mov
dec
or
xor
push
test
loope
jmp
int
mov
sahf
shl
mov
movlps
addr16
cmp
or
mov
jmp
pmaddwd
push
dec
cld
and
xor
test
mov
dec
ret
xor
popa
push
mov
cli
xchg
std
mov
sbb
test
fs
sub
xchg
popf
ja
cmp
push
sarl
adc
inc
cltd
push
xor
test
xor
add
mov
mov
mov
inc
addr16
jae
mov
hlt
into
add
push
outsl
stc
dec
jl
mov
movsl
mov
shrb
cmpsb
pop
push
add
int
ds
inc
mov
test
arpl
fucomip
dec
outsb
cli
lds
ret
xor
lret
in
mov
js
repnz
es
test
xchg
imull
movsl
addr16
or
repnz
xchg
cmp
rorb
out
stc
jmp
loopne
mov
in
jmp
es
xchg
adc
fsubrs
movsl
xchg
sbb
shll
in
aam
pop
or
fldenv
pop
ds
cmpsb
mov
notb
fisubs
imul
jbe
cmp
dec
cmpsl
inc
sbb
sub
sub
pop
xor
loope
and
push
mov
fsubs
arpl
jmp
cld
cmp
mov
fistpll
mov
dec
sub
jo
dec
pop
xchg
outsl
ficoms
test
mov
xor
push
popf
je
ret
je
rolb
in
add
sti
mov
xor
jmp
pop
imul
in
cltd
xlat
push
xor
fsubs
push
js
xchg
sub
aad
lods
mov
insb
mov
rcll
adc
inc
add
popf
add
stc
and
movsl
inc
sbb
or
sahf
stos
push
sbb
mov
ficoms
pop
sub
jnp
inc
mov
nop
xchg
push
rep
push
in
pop
scas
sub
bound
and
add
mov
fprem
lret
iret
jge
jle
push
xchg
mov
sbb
mov
push
fucom
lahf
add
dec
loopne
xchg
pop
mov
loopne
sbb
loopne
aaa
daa
adc
add
pusha
jp
pop
jp
dec
cmp
adc
aas
aam
in
out
push
mov
dec
mov
out
fidivrl
ret
xor
repnz
in
cmp
testb
popf
xor
mov
test
sbbl
leave
xchg
and
jb
xor
sbb
dec
push
or
jne
dec
bound
adc
ret
jge
mov
movsb
into
adc
or
jge
mov
outsb
je
adc
add
cmp
and
jns
mov
mov
insl
addr16
dec
pop
fldt
int
lret
lea
imul
add
icebp
and
icebp
test
sbb
das
and
stc
jo
inc
mov
pop
jle
fistpl
loop
or
js
arpl
gs
imul
push
mov
dec
xchg
push
aaa
adc
dec
mov
push
cld
popa
pop
in
xor
xor
dec
sbb
inc
int
cmpsl
xchg
xor
test
xchg
clc
cmpsb
in
or
xchg
mov
jo
mov
fcomp
mov
adcb
cmp
cmpsb
cs
jbe
fists
xchg
loopne
jecxz
xchg
cmp
and
xchg
mov
cli
pop
call
push
inc
pop
aad
adc
test
add
insb
movsl
insl
add
mov
test
pop
push
pop
or
and
outsb
js
loop
inc
insl
mov
mov
outsl
or
mov
lret
shl
out
mov
mov
sbb
stc
lock
xchg
popf
mov
add
dec
int3
xchg
xchg
xor
or
fwait
adc
add
xchg
dec
jne
cmp
adc
sub
mov
adc
xchg
out
jnp
mov
jecxz
popa
outsb
jmp
in
jl
add
sub
cli
enter
push
jae
addr16
add
fbstp
ja
push
or
pusha
push
faddl
cld
pushf
daa
sub
mulb
fcomip
mov
cmp
xchg
insb
jb
or
enter
lret
mov
inc
insb
mov
jmp
jnp
mov
fsubl
daa
adc
mov
mov
lods
mull
hlt
bound
cmp
pop
je
push
jmp
nop
bound
es
loopne
sbbl
lret
xor
or
cs
leave
inc
gs
mov
dec
mov
vpunpcklqdq
mov
sub
aad
cmp
nop
adc
push
sub
cmpsl
enter
jbe
enter
xchg
in
adc
adc
clc
adc
adc
cmpl
adc
ljmp
mov
cmpsl
idivb
jle
jge
mov
mov
inc
lahf
divl
adc
leave
dec
out
xlat
pop
push
pop
cmpsl
lods
sbb
insb
sbb
cmp
rclb
xchg
jl
mov
jg
add
jp
sub
jae
pop
jmp
cmp
xchg
test
roll
lret
xchg
cmpsb
xchg
push
popl
outsb
jnp
pop
fs
rep
inc
mov
jmp
and
pop
cmpsl
inc
xor
add
popf
pusha
dec
jecxz
cmp
jmp
arpl
adc
cltd
insl
pextrw
xor
pusha
add
and
pop
nop
sbb
pop
jle
push
les
lea
bound
in
sti
rcll
sub
ds
loop
or
inc
and
repz
sub
mov
and
xlat
imul
cmp
pop
lods
and
and
cmp
mov
xlat
inc
mov
mov
fistl
dec
out
icebp
jge
stc
lcall
sar
shl
or
pop
and
jno
faddp
and
jl
cmp
xchg
cmp
jmp
stos
and
jnp
pop
shl
inc
mov
mov
int3
mov
mul
xor
cltd
sti
icebp
lock
notl
jmp
cmp
jl
or
dec
xchg
cmp
cwtl
cli
fidivl
cli
lods
lahf
movsb
scas
adc
mov
dec
lods
filds
cmpsl
hlt
and
inc
cld
sahf
rorb
out
xchg
mov
outsb
fnstcw
and
pop
sbb
sbb
and
mov
pushf
imul
mov
aad
cltd
mov
cmp
fiaddl
or
loop
inc
mov
int
iret
mov
dec
mov
xor
rcr
mov
aaa
jnp
dec
sub
hlt
insl
fsts
mov
in
ja
sub
add
add
dec
test
outsl
jl
and
pop
and
sbb
inc
cmp
jp
stos
sub
or
pop
adc
in
sbbb
sbb
dec
cmp
add
dec
mov
or
pusha
xchg
sbb
out
repz
inc
or
push
jle
and
jmp
fsubr
push
mov
sbb
incb
cwtl
out
jle
push
mov
mov
jmp
mov
pop
into
subl
or
out
push
ret
jp
mov
stos
in
repz
rolb
aam
cmp
lds
xor
int3
cld
inc
ret
or
fs
xlat
or
jns
movsl
popf
insb
or
cmpsl
and
mov
subl
fs
xlat
add
stos
test
dec
cmp
push
cmp
insb
div
inc
dec
inc
mov
jl
loop
ret
pushf
int3
jo
lods
int3
cld
clc
lret
das
inc
add
and
sbb
data16
daa
jb
pop
xor
xor
inc
les
pop
in
jnp
divl
je
lea
cmc
out
fldt
lods
dec
xlat
or
mov
int3
jo
mov
push
xchg
adc
cmp
pop
xchg
or
push
pop
add
sbbb
xchg
and
mov
in
lret
leave
in
mov
repnz
jmp
sub
jge
and
jp
sub
mov
add
nop
aas
outsb
in
shlb
cmp
rolb
outsl
jmp
add
or
jl
les
inc
push
dec
cmp
les
pop
stos
pop
jmp
cmpsl
rcrb
fcompl
sub
jl
pop
fdivrl
inc
push
pop
pop
stos
or
loope
cmp
into
fwait
fwait
dec
mov
dec
pop
xlat
daa
mov
xor
push
pop
pop
cmp
clc
cmp
stos
test
js
fs
mov
mov
jg
mov
adc
cmpsb
jno
stos
pushf
or
sbb
push
adc
add
sub
loopne
popf
push
push
fstps
dec
adc
push
shl
dec
dec
fldt
inc
addr16
cmp
mov
xchg
test
and
push
sbb
push
jge
mov
pop
repz
cltd
daa
cwtl
stos
cltd
cmp
sub
aam
push
xor
idivl
mov
adc
sub
sub
dec
jo
cmp
add
xor
cmp
cmp
sub
sbb
cmp
lahf
adc
fdiv
mov
mov
cmpsl
mull
or
add
dec
into
notb
mov
mov
repnz
jbe
inc
out
cmp
rorl
and
test
cmp
fmulp
cs
cwtl
sub
out
add
inc
scas
mov
mov
es
fsubrl
sub
jp
mov
cmc
jecxz
jne
mov
loopne
add
xor
das
or
cmp
sahf
add
mov
out
pop
ret
pop
mov
cltd
inc
or
out
lea
fstps
std
fdivl
or
mov
mov
jns
ljmp
lea
mov
scas
iret
mov
test
sarl
movsl
xor
test
xchg
dec
pop
push
sbb
js
popa
fistl
dec
test
sahf
add
test
adc
xchg
scas
xchg
jo
inc
hlt
pop
leave
fldt
movsl
dec
push
int
jb
sub
dec
cmp
push
sbb
mov
pop
ss
iret
push
mov
notl
adc
aam
stos
jo
leave
cltd
mov
xchg
mov
das
mov
xchg
lcall
fnstenv
push
stos
shrb
adc
les
rcrl
cmp
dec
sub
sbb
add
ret
xchg
shrb
or
mov
jae
mov
inc
inc
jmp
xchg
inc
jns
dec
add
insl
and
dec
mov
pop
into
push
and
insl
jno
arpl
pop
mov
cld
or
pop
dec
inc
ret
and
xchg
popfw
call
mov
out
jecxz
xor
dec
imul
clc
lea
das
mov
aaa
xchg
dec
out
adc
sbb
mov
adc
mov
inc
lcall
push
pop
lret
nop
ficompl
xchg
es
lret
mov
xor
iret
jle
in
xor
es
fidivrs
and
movsb
hlt
outsb
mov
cltd
std
fcoms
dec
xorb
add
subl
scas
xor
loope
nop
dec
sub
testl
ljmp
fisubrs
push
test
in
lods
jno
xchg
sbb
bound
and
push
sub
or
out
pop
push
jg
add
in
movsl
adc
inc
dec
push
push
add
or
fwait
jo
pop
push
add
xchg
mov
dec
mov
mov
inc
jns
or
outsb
out
inc
inc
sub
sub
push
out
or
scas
sahf
pop
loop
mov
icebp
scas
loop
lret
inc
aam
sarl
add
cli
clc
outsl
out
inc
mov
call
fisubl
jnp
sub
scas
xchg
mov
and
push
mov
push
or
rcll
lret
inc
pop
cmpsb
xchg
fldenv
pop
add
jecxz
icebp
mov
or
les
sub
notl
lods
je
and
pop
xchg
lock
or
iret
jle
sbb
dec
ficomps
sub
dec
pop
mov
sbb
sbb
mov
aaa
rcr
mov
out
adc
jg
mov
jno
mov
mov
cmpsl
outsl
jbe
cmp
pop
mov
mov
mov
add
and
xor
sbb
or
shlb
inc
sub
push
sbb
dec
loopne
sbb
hlt
mov
mov
repz
jge
jp
jecxz
inc
mov
rcll
stos
orb
repz
andl
in
aad
aad
lret
push
pop
push
ret
add
push
mov
lahf
insb
inc
push
addb
or
inc
sub
jle
pushf
js
ret
or
adc
aaa
cwtl
xchg
loop
xchg
lock
ror
jl
je
mov
sti
mov
rorb
jecxz
insl
mov
add
cmp
inc
ds
cld
pusha
fs
pop
xor
fcomp
stos
cmp
push
pop
cld
out
mov
mov
mov
inc
sbb
les
push
push
mov
test
ss
jecxz
xor
cmp
xchg
sbb
dec
mov
pushf
mov
jecxz
push
mov
faddl
das
adc
test
mov
jle
lret
push
in
push
pushf
outsl
and
mov
js
out
adc
hlt
sti
ret
jp
arpl
and
jle
cmpsl
aas
or
cmpb
cwtl
stos
arpl
jp
mov
jmp
or
dec
sbb
mov
xchg
sbb
or
jne
mov
jo
mov
fsubrs
int
je
jle
jo
int3
repnz
sub
out
lods
jno
dec
inc
xchg
jmp
mov
leave
sub
popf
push
adc
stos
loope
cmp
out
add
ficompl
add
out
jl
repz
xor
mov
popa
mov
xor
xor
and
push
jge
inc
and
add
mov
fwait
lods
jle
rclb
je
push
pop
xor
andl
sbb
fidivl
out
and
dec
add
sub
jnp
cld
gs
pop
inc
loope
xor
pop
push
call
sahf
push
push
popw
fcoml
adc
xchg
and
test
stc
adc
sbbl
and
lea
lcall
dec
shl
loope
cmc
faddl
shl
mov
repnz
cmp
push
idivl
push
out
add
ret
rcl
pop
lock
int
inc
mov
sub
inc
dec
aas
adc
xor
sub
into
imul
cmc
dec
push
cmp
cmp
jbe
sbbb
jmp
clc
ret
loopne
aam
into
push
xor
test
sub
sub
inc
aam
pop
out
mov
outsb
inc
dec
pop
stos
vmovss
mov
js
add
lahf
aaa
jmp
stc
cmpsl
test
sbb
push
inc
data16
xor
jmp
and
mov
jp
jle
dec
cmp
lahf
and
jo
xchg
pop
inc
pop
dec
pop
enter
xor
mov
xchg
xor
and
mov
in
cmc
scas
ss
xchg
cmp
or
cmp
mov
or
shll
psadbw
jnp
mov
out
shll
mov
and
add
dec
xchg
xor
mov
push
int3
mov
fsubl
sub
jmp
sbb
mov
xchg
xor
stos
pop
in
shlb
or
xorb
nop
or
loop
pop
shlb
out
in
and
mov
sarb
xor
dec
lds
push
or
test
call
xchg
xchg
push
push
cmp
jl
ljmp
or
pop
xor
inc
push
mov
aam
xchg
call
adc
int3
mov
jns
adc
mov
mov
mov
xchg
cmpsl
mov
and
movsb
push
insb
or
adc
jge
ljmp
pop
repnz
test
lds
fldt
xor
and
sbb
leave
inc
loopne
stc
pop
cld
mov
push
inc
cmp
aad
mov
pushf
test
adc
aad
sub
sub
ja
mov
faddl
repz
rclb
inc
jnp
inc
push
dec
int3
fbld
lahf
test
ss
fs
cwtl
mov
xor
xor
cs
std
pop
adc
pop
and
pop
push
inc
loope
jnp
sub
fwait
push
test
movb
xchg
xor
popf
mov
dec
jl
xchg
push
adcb
icebp
lock
xor
jns
sub
sbb
cld
data16
cmp
adc
sbb
inc
push
push
leave
sbbb
pop
loopne
lods
repnz
jnp
cmp
push
ret
jmp
sti
sub
cmp
mov
aam
mov
sbb
xor
jae
ss
inc
sbbb
push
out
int3
mov
inc
frstor
stos
jnp
xchg
dec
dec
out
mov
subl
add
cmpsl
push
frstor
sub
push
dec
xor
popf
jmp
pop
lahf
or
ljmp
jp
fisubs
dec
inc
jnp
mov
jle
in
pop
aam
jne
mov
cli
mov
cltd
cmp
dec
sub
push
push
dec
jae
mov
or
in
icebp
cli
fsubrs
push
or
fs
xchg
push
lods
mov
inc
movsb
aam
daa
arpl
mov
sbb
adc
sub
mov
cmpsb
xor
mov
lret
out
leave
sbb
jl
and
loopne
xor
sub
jnp
js
push
mov
fcmovnb
xchg
and
rorb
arpl
pop
in
enter
repnz
sti
cmp
test
cmp
icebp
addb
xchg
push
in
cmpsb
sub
clc
pop
pushf
loop
imul
mov
insb
cmpsl
cld
xchg
xor
jns
xchg
fmuls
repnz
cwtl
mov
push
push
repz
mov
or
addr16
sbb
sub
clc
xchg
and
mov
mov
mov
mov
mov
mov
push
jmp
dec
orl
loop
push
bound
mov
mov
sub
scas
rcrb
mov
sbb
lahf
mov
jo
aam
cmp
imul
sti
sub
mov
rcrl
and
mov
xor
push
mov
lds
add
jo
lods
xchg
es
mov
dec
je
decb
pop
inc
ret
popf
rorl
add
arpl
pop
pmuludq
movsb
cmova
and
inc
js
fimull
lcall
add
adc
and
popf
adc
ss
pop
loop
mov
lock
push
mov
in
mov
jmp
in
fmul
pop
pop
lods
pushf
xchg
fsubrl
cmp
cmpsb
pcmpeqb
dec
adc
in
push
jge
lods
insl
clc
or
insb
pop
leave
xadd
fdivp
arpl
je
adc
lds
js
in
sahf
dec
incl
les
mov
loop
lods
inc
enter
or
inc
lret
push
mov
add
xchg
pop
notl
faddl
add
or
shlb
cmpsl
test
cmc
jle
inc
dec
call
pop
sarl
test
push
out
inc
sti
fmull
xchg
add
imul
lret
fucomip
cmp
es
cmp
lcall
outsb
or
flds
dec
and
add
add
cli
dec
xor
xor
mov
frstor
loop
roll
lods
pop
push
pop
mov
jmp
rolb
pop
cmpsb
cltd
jno
sub
sub
sbb
dec
aas
sbbl
and
or
jbe
xchg
sti
mov
sbb
shl
sbb
fdivrs
les
pop
mov
ss
mov
mov
or
mov
das
rcll
es
pop
cltd
pop
js
inc
imul
or
das
sub
sbb
movsl
insl
push
sub
pop
lahf
lcall
dec
ret
repnz
adc
xor
push
clc
shlb
fildll
rorb
cmp
xor
mov
cld
mov
rcrl
loopne
popf
push
mov
iret
in
rorb
add
mov
lcall
dec
sbb
cltd
shl
leave
adc
iret
in
cmp
das
cltd
repz
add
push
push
xor
lret
mov
inc
jp
mov
test
lret
ret
and
jecxz
stos
push
mov
and
hlt
cvtdq2ps
sub
das
adc
add
loop
xchg
ljmp
out
repnz
add
jbe
in
pushl
lahf
dec
aaa
mov
or
cmp
xchg
in
arpl
jb
add
lock
pop
daa
lods
sbb
dec
xor
sbb
in
in
lods
inc
pop
pop
mov
imul
inc
test
ficompl
nop
rcr
cwtl
push
gs
insb
xor
push
je
mov
scas
movsl
hlt
push
dec
inc
cmp
xchg
leave
fwait
ret
push
mov
xchg
lahf
adc
cmp
in
shll
stos
sbb
cli
in
push
out
int3
repz
sub
pop
dec
rdpmc
test
movsb
lock
rorl
dec
pop
roll
ljmp
test
xor
lret
pop
push
movsl
adc
insb
jne
dec
andl
and
mov
mov
mov
add
test
push
dec
shlb
lahf
mov
sbb
adc
hlt
mov
push
and
and
jecxz
xor
mov
push
adc
mov
pop
sbb
cli
and
fstps
stos
add
outsb
bound
scas
mov
inc
dec
or
outsl
sbb
fbld
mov
ret
mov
scas
pop
fadds
sbb
roll
fisttpll
dec
jecxz
push
filds
repz
inc
sbb
xor
cld
ret
hlt
and
mov
xor
mov
enter
and
push
mov
mov
pop
dec
mov
mov
out
loop
mov
pop
lds
xor
push
shll
into
aaa
lcall
js
xchg
push
adc
cmp
arpl
cmpsl
popa
jo
and
pop
cs
inc
xor
aam
jns
arpl
xchg
lock
test
sbbl
rcrb
cmpsl
mov
icebp
jl
pop
mov
push
out
cwtl
mov
jl
popa
into
and
ss
cmpb
sbb
sub
or
and
add
sahf
mov
clc
and
xor
mov
lock
aam
xor
in
sub
movsb
popa
arpl
nop
adc
das
ret
push
je
push
jp
nop
mov
xchg
dec
mov
push
adc
pop
mov
aad
adc
js
xor
xchg
adc
call
xor
into
icebp
dec
repz
xchg
mov
mov
call
or
sbbb
je
sarl
std
mov
add
imul
mov
mov
jno
xor
xlat
add
cmpsb
ret
or
dec
push
aad
lret
or
outsb
jnp
mov
mov
rcll
xchg
lahf
pushf
adc
xchg
popa
cld
sbb
inc
jno
xchg
push
xor
inc
pop
stc
mov
les
sbbl
adc
jg
inc
out
mov
cmp
cmpsb
push
in
jle
sbb
sub
push
test
inc
xor
leave
add
jo
xor
adc
stc
push
in
addr16
cmpl
iret
inc
ret
scas
and
xor
lahf
icebp
sub
jae
scas
or
test
imul
ss
or
lea
rcrl
loop
es
mov
or
jns
pusha
flds
inc
sub
cld
adc
nop
pushf
cmp
repnz
cld
pop
shlb
call
mov
mov
les
adc
loop
cmpb
lea
jecxz
inc
xchg
inc
mov
xchg
push
add
test
mov
pop
mov
or
divl
fwait
mov
movsb
push
xor
insb
jb
sub
in
insl
ja
cmpsl
pxor
or
mov
sbb
xor
lret
cwtl
data16
sub
xor
pop
xchg
je
mov
ja
jae
inc
ljmp
call
adc
in
inc
and
lret
mov
mov
in
add
sbb
shlb
stos
mulb
mov
push
je
dec
test
sar
into
into
popf
mov
xchg
xor
inc
sbb
push
jp
cmp
out
sti
das
sbb
out
or
dec
stos
sub
xor
inc
fstpl
fcoms
and
dec
ds
fsubrp
mov
mov
jl
enter
push
fldcw
rcll
test
or
xor
adc
data16
inc
imul
cmpsb
sbb
test
mov
popf
out
aad
nop
dec
pop
jle
int
lret
push
in
movsb
inc
mov
jb
push
lods
inc
pop
xchg
jae
ret
shlb
xchg
lods
xlat
rcr
adc
mov
push
out
xchg
aam
call
sti
pop
jbe
in
jg
xor
out
mov
sahf
mov
sub
fildll
cmc
pushf
data16
mov
fists
pop
testl
insb
lds
xor
pop
or
adc
popf
or
add
sub
subl
add
mov
sub
aas
sbbl
sbb
lea
call
aaa
flds
pusha
pop
mov
dec
pop
xor
add
lods
xchg
jbe
pop
sub
nopl
cwtl
push
adc
lret
ret
mov
bound
popa
adc
mov
lods
insb
adc
adc
inc
std
dec
je
jb
jne
in
sub
nop
push
int3
push
movd
test
aam
psrlw
or
inc
and
cmp
imul
rcrb
outsb
inc
mov
scas
lock
jb
mov
outsl
arpl
mov
pop
cmpsb
dec
add
mov
add
push
in
shlb
les
fstpt
repz
sarl
rorb
cmp
outsb
dec
fildll
pusha
cmc
popf
mov
aaa
add
xor
inc
cltd
push
fcoml
pop
cltd
rcr
or
lea
sbb
jb
scas
mov
add
vpackuswb
test
mov
fisubs
data16
icebp
xchg
mov
xchg
stos
sub
addr16
mov
add
out
pop
pop
adc
mov
mov
idivl
call
repnz
jg
clc
jb
arpl
out
idivb
mov
icebp
jl
enter
or
nop
enter
pop
sub
dec
arpl
or
and
rolb
nop
or
popf
stc
cmp
mov
dec
ds
dec
or
popf
cmc
xor
push
xchg
in
and
jbe
fcomi
lret
out
xchg
push
jl
and
insl
xchg
pop
push
aad
aam
mov
mov
dec
dec
mov
enter
mov
pop
fdivp
push
sarb
dec
or
ficomps
pop
fstps
sbbb
cwtl
mov
jb
push
cs
jg
stos
mov
aaa
insb
xchg
push
cmp
jae
jb
jnp
outsb
sbb
ljmp
sbb
stos
add
mov
call
push
push
je
fst
mov
clc
ror
in
xor
fs
jno
mulb
push
mov
xor
dec
ss
and
or
mov
and
fsub
cs
dec
cltd
stc
imul
fcmovne
xor
inc
adc
ret
sbb
sbb
cmpsb
or
sub
das
sbb
iret
cmc
aaa
push
shrb
xlat
ror
mov
fdecstp
cltd
mov
mov
or
loop
mov
mov
cmpl
hlt
mov
xor
inc
inc
inc
pushf
ret
push
jg
pop
ficoml
in
movsb
adc
aad
lods
push
pop
push
sbb
addr16
fsub
in
or
int
test
dec
xor
andb
fnstenv
loopne
lcall
or
or
sbb
mov
mov
stos
and
push
orb
inc
repz
push
xor
ret
mov
addr16
int
pop
xor
daa
xchg
xchg
les
cmp
imul
push
xchg
das
rcr
xchg
mov
test
movsl
outsl
adc
out
inc
addr16
pushf
jg
cltd
cmc
jno
inc
loopne
sbb
stos
pusha
sub
dec
stos
push
xor
cmpsl
pop
test
dec
mov
ljmp
pop
xor
dec
cmpsl
movsl
adc
sbb
fwait
jmp
addb
mov
hlt
stc
test
aad
mov
test
out
mov
pop
add
sub
sbb
cmp
jge
jg
nop
popf
push
xchg
mov
jmp
ret
mov
notl
push
cmp
mov
mov
jnp
adc
dec
pop
notl
leave
mov
aas
cmpsb
sub
mov
jge
cmpsb
push
xchg
push
mov
lret
pop
jnp
rorb
cltd
jecxz
aas
stc
lret
je
inc
fmull
stc
xlat
mov
fs
fcmovnu
inc
test
xchg
push
pusha
cmp
adc
or
mov
inc
adc
scas
into
std
sbb
dec
cmp
stos
adc
dec
dec
sbb
cmp
jnp
mov
lcall
adc
nop
repnz
es
jnp
test
pusha
dec
jbe
xor
add
and
test
lret
xorl
cs
push
push
fisubrs
aas
xchg
lret
mov
dec
aad
mov
test
sub
mov
dec
idivb
imul
test
fldenv
mov
mov
add
lods
mov
lret
mov
out
pop
push
out
push
pop
fisubrl
jne
aad
pushw
sahf
addr16
cmc
mov
inc
pop
xor
dec
inc
add
or
sbb
mov
fcomps
cld
aas
inc
inc
out
pop
mov
dec
das
sub
lret
cmp
and
mov
xchg
jne
xchg
mov
or
or
mov
jns
imul
mov
push
idivb
xor
repz
adc
or
jmp
scas
mov
mov
popa
mov
cmc
imul
ja
dec
push
xchg
nop
call
jmp
iret
sbb
dec
shlb
stc
xchg
rcrb
es
sbb
outsb
rorl
sub
xor
mov
sub
adc
pop
push
sbb
xor
cmpb
outsl
cmp
sahf
or
mov
test
clc
xor
test
inc
dec
jl
cs
popa
in
loopne
mov
mov
push
jae
out
js
mov
mov
das
in
push
push
mov
xchg
mov
sbb
jmp
xchg
xor
or
mov
insl
cltd
orb
fimull
jg
je
adc
inc
and
mov
or
pop
je
ss
leave
je
loop
push
stc
jo
lods
sub
mov
xor
push
cmpsl
mov
or
xlat
mov
sbb
aam
lods
inc
ja
or
out
add
fistpll
add
mov
jl
or
sbb
or
pop
xlat
xchg
xchg
ret
sub
cltd
mov
add
cmp
push
xchg
rolb
push
and
stos
hlt
clc
sbb
inc
stos
in
mov
cmp
test
daa
adc
dec
push
mov
lahf
aas
bound
pushl
push
or
and
dec
imul
push
inc
and
cld
or
aaa
and
lret
inc
repz
std
xor
pop
add
add
sbb
cmp
xchg
rol
mov
jl
aaa
mov
sahf
ret
xor
ds
dec
fs
xlat
das
fstps
xchg
sbb
pop
mov
xor
loope
cmp
shll
xlat
cmp
nop
addr16
int
daa
stos
test
adc
js
pushf
and
inc
inc
pushf
xchg
inc
xchg
cmp
imul
gs
jne
mov
sub
jecxz
jmp
xor
add
jg
aas
cwtl
xor
push
adc
fistpl
jecxz
inc
mov
iret
xchg
call
mov
sarb
sub
fadd
sbb
das
pop
pop
mulb
jl
out
test
xchg
das
xchg
cmp
in
in
aad
xlat
cmp
cmp
inc
repz
stos
shll
xchg
push
fstpt
aam
daa
sbb
jno
mov
insl
imul
mov
mov
das
jne
adc
adc
lcall
inc
ss
sbbl
mov
mul
repz
lea
mov
sub
push
jnp
daa
push
pop
inc
mov
into
and
sub
inc
xor
js
mov
stos
aam
sub
pop
aas
and
add
fldl
mov
fadd
stc
in
push
xchg
mov
ficoml
test
std
cltd
and
pop
or
mov
inc
nop
lret
fxch
push
fisubrl
test
lds
cmc
cmp
rorb
jae
dec
test
test
scas
mov
das
test
push
add
sub
push
cmc
outsb
push
lods
or
mov
movsb
cmp
mov
add
shll
jle
mov
clc
sub
out
test
adc
imull
inc
xor
mov
shlb
jp
gs
push
jl
div
sarb
cld
pop
mov
push
mov
sahf
or
jb
mov
push
pusha
sbb
inc
outsb
sub
xchg
mov
xor
inc
stos
out
inc
movsl
ret
mov
andl
mov
mov
pop
xor
and
cmpsb
mov
mov
add
pop
dec
push
ljmp
lcall
fucomip
pcmpgtd
add
or
dec
sahf
hlt
mov
jg
call
shlb
mov
mov
push
pop
dec
lock
xchg
loope
aaa
in
in
mov
and
rorl
and
or
loope
out
xlat
into
jne
fstpt
insl
mov
xchg
stc
rorl
stos
cld
stos
jbe
fildll
fcoml
je
call
test
rolb
cmp
out
outsb
fisttpl
stc
fwait
and
testb
mov
es
in
and
fmul
xor
out
inc
aas
enter
xchg
inc
jae
jb
push
rorb
ret
add
cwtl
and
jle
push
shll
cmp
push
repz
ja
jns
adc
int
jecxz
loop
das
jne
cmp
mov
or
stc
imul
and
aad
dec
xor
cmp
push
dec
or
xchg
sbb
mov
fadds
mov
xor
jne
mov
out
jmp
xchg
cmp
je
add
or
mov
outsb
das
movl
and
push
hlt
lgs
pop
iret
fstps
jp
pop
jl
push
add
in
mov
pop
out
push
sub
push
repz
lret
inc
adc
dec
lock
scas
jno
out
sub
icebp
inc
sub
jne
inc
scas
sahf
pop
xlat
sub
jmp
adc
adc
fdivrl
pop
or
mov
test
jnp
xchg
insb
rcrb
jne
dec
sar
out
add
rcrl
push
ret
in
fwait
mov
jp
mov
test
mov
sbb
sarb
pop
out
mov
out
sbb
jg
in
ja
rorl
lahf
dec
mov
dec
mov
push
mov
pop
jnp
mov
push
mov
inc
outsl
mov
cmpsl
jp
ror
and
shl
jge
leave
or
push
cld
ret
sub
sbb
xchg
and
cmpsb
dec
test
add
ret
jle
rcll
or
inc
scas
nop
pop
and
orb
jns
jns
into
aam
mov
mov
sar
dec
jne
aam
add
mov
mov
xchg
and
xchg
cs
add
lcall
mov
enter
ja
xchg
jl
push
ret
stos
xor
test
shlb
out
xor
dec
loop
into
lcall
call
repnz
push
es
pop
adc
add
aad
push
lcall
pop
sbb
mov
xlat
les
leave
xchg
loope
sub
stc
add
subl
aaa
adc
mov
shlb
repnz
push
jo
sahf
data16
test
int3
jl
lods
loopne
in
rcrl
pop
sarl
add
inc
push
lret
jp
aaa
adcb
aam
mov
and
hlt
loop
test
imul
pop
int3
jae
out
xchg
ss
and
pop
push
mov
repz
jle
inc
push
stc
jo
leave
ja
xor
fisttps
clc
inc
fimuls
adc
jb
test
leave
cltd
lret
sbb
push
mov
or
into
pop
int3
or
push
mov
mov
loope
mov
scas
shr
lods
aas
aaa
popf
ja
xor
enterw
mov
sub
aam
inc
dec
push
das
imul
out
iret
sbb
js
cmp
inc
decb
pop
and
loopne
dec
outsl
fistpll
test
or
out
loope
loop
xor
idivb
or
jno
mov
add
and
lods
inc
mov
or
dec
and
stc
mov
xor
iret
jbe
not
push
imull
sbb
popf
jle
out
fwait
adc
fnsave
sub
fsubrl
fs
js
cltd
sub
xlat
dec
fucom
or
inc
fisubrs
jno
les
sahf
shl
scas
imul
jecxz
push
xchg
jo
out
cwtl
loopne
leave
push
push
mov
xchg
and
test
out
movsb
push
push
jo
sti
push
push
cmpsl
js
das
arpl
mov
lret
inc
mov
jl
xor
sub
insb
mov
sbb
lods
mov
and
sti
add
push
sarl
push
data16
mov
insb
notb
std
inc
lock
pop
xor
fcomp
in
sbb
mov
arpl
cmpsb
out
dec
adc
fsts
jmp
mov
sub
jnp
xlat
jg
adc
popa
mov
sarl
add
call
xchg
mov
mov
rolb
cwtl
or
test
insl
xchg
mov
push
cwtl
jle
cmp
mov
ds
and
addr16
gs
jo
dec
in
jbe
push
lahf
lods
sarl
pop
dec
test
sub
dec
das
popa
xchg
cmp
jnp
push
pop
cmp
mov
rcll
scas
pop
test
push
mov
mov
fsubp
mov
out
push
in
xchg
xchg
push
sub
mov
xor
lock
pushf
sub
jb
and
leave
in
jo
and
adc
mov
sti
insb
xchg
fistps
cld
arpl
std
fsubrs
cmc
mov
int3
adc
in
mov
or
fnstenv
clc
imul
or
and
mov
dec
inc
sub
jge,pt
int
test
jno
cmp
mov
sub
jbe
loop
xchg
movsl
xchg
jno
rclb
cmc
xor
test
aad
pop
mov
rorl
mov
ja
vmaskmovdqu
loope
pop
in
xchg
rclb
xchg
icebp
sub
push
add
mov
or
dec
ljmp
aas
jp
inc
ret
pushf
popa
jne
outsl
and
dec
sub
movsl
fadds
mov
aas
push
cltd
adc
out
dec
inc
jns
add
xlat
jecxz
dec
call
out
fbld
xor
mov
pop
fildll
pop
je
cmp
arpl
mov
fidivrl
push
sbb
popa
lods
aas
scas
add
xchg
lods
xchg
cs
sub
or
popf
rcrb
popa
xor
jg
and
xchg
xor
test
mov
sbb
adc
jecxz
adc
aam
sbbb
adc
popf
ss
aad
adc
stos
jae
cmp
cmc
adc
pop
das
loop
fdivrl
rcll
jg
push
test
shlb
xlat
dec
push
int3
add
jne,pt
and
or
mov
or
inc
fwait
mov
adc
in
pop
loopne
cli
cltd
push
out
frndint
rorb
cmp
sub
jl
fs
mov
add
dec
jo
inc
cmpsl
sti
stos
push
jno
test
add
pop
popa
sbb
fnstenv
mov
mov
ljmp
shll
xor
jae
test
and
cmp
cmpsb
in
test
and
aas
sub
out
pop
and
lret
mov
jbe
out
add
out
dec
and
xchg
push
push
shl
mov
inc
mov
and
xor
pop
icebp
push
lods
mov
inc
fdivl
xchg
pop
fisubrs
mov
adc
and
lcall
mov
sub
mov
scas
jg
in
mov
push
jl
aas
pushf
cmp
mov
pop
push
mov
mov
sub
xchg
xor
cwtl
xor
inc
aas
adc
adc
in
add
fpatan
outsl
mov
enter
add
fisttpl
push
iret
test
or
out
mov
lea
jne
xchg
add
inc
mov
pusha
adc
stos
push
or
pop
and
fs
add
int
sub
sarl
mov
mov
push
addr16
addl
aas
adc
stc
data16
add
jmp
mov
xchg
pop
fsubrp
xchg
or
or
arpl
fdivp
jnp
pop
out
sahf
mov
outsb
fidivl
icebp
lods
rorb
enter
pop
or
mov
bound
lds
sbb
mov
push
in
iret
pop
das
in
in
insb
cmpsb
lea
jno
mov
mov
aad
sub
jmp
repz
int3
pop
in
enter
jbe
ret
icebp
and
sub
dec
xchg
fldcw
jmp
sbb
adc
test
jne
aad
xchg
push
jns
add
xchg
mov
jl
lret
scas
mov
mov
nop
outsb
cmp
push
dec
clc
test
push
shrb
mov
inc
mov
enter
loop
das
push
loop
hlt
adcb
mov
andl
in
and
mov
mov
sarl
xchg
rcll
das
fstpl
data16
xchg
addb
mov
sbbl
add
aas
inc
jno
push
cmp
test
aam
in
outsl
ljmp
cmp
mov
adc
lea
sub
mov
jbe
out
sbb
pop
clc
sub
mov
daa
xor
xor
inc
mov
stos
sub
popa
repz
and
cmp
pop
cmc
xor
insl
dec
mov
sub
sub
daa
rorl
or
push
into
mov
mov
repz
ret
leave
and
movsl
sbb
xchg
and
iret
xchg
mov
stos
loop
pop
sub
mov
hlt
jecxz
xlat
cmp
les
jno
ljmp
subb
xor
sub
dec
jecxz
mov
cli
adc
test
es
mov
mov
mov
popf
sbbb
shlb
or
cli
pop
inc
loopne
js
ret
jecxz
nop
pushf
cmpsb
dec
test
dec
push
or
cmpsb
nop
pop
icebp
je
clc
sbb
and
mov
cli
test
dec
sub
ss
cmp
push
in
and
test
sbb
pop
jge
call
push
push
mov
add
das
ret
add
mov
dec
dec
jo
out
and
mull
mov
scas
sbb
je
lods
sbb
add
mov
pop
and
and
push
cmc
mov
xor
cmp
dec
or
jne
xchg
push
cmpsb
mov
outsl
adcb
insb
leave
inc
add
jmp
mov
push
popf
jmp
push
jbe
lcall
adc
mov
xor
sub
call
xor
and
dec
and
dec
into
sbbl
pop
inc
add
mov
add
xchg
enter
shrb
mov
cli
mov
shr
pusha
sarb
mov
xor
pop
xchg
hlt
out
into
dec
repz
sub
inc
jl
out
push
imulb
stc
bound
mov
xchg
jne
fdivrp
mov
jmp
sub
fwait
adc
pop
or
add
shrd
jb
or
sbb
mov
mov
fildl
cwtl
stos
xor
xor
xor
mov
xchg
sbb
in
cmpsl
xor
or
data16
jl
cmp
scas
and
inc
pop
mov
scas
inc
xchg
out
mov
mov
cmp
outsl
imul
rcl
in
in
adc
aas
imul
push
pop
or
lret
lcall
fcmovne
cmp
jb
mov
js
loopne
into
mov
adc
fucom
dec
aas
lds
push
icebp
and
mov
ret
sti
cltd
ss
fisubs
jae
mov
dec
test
xchg
push
xchg
cmc
roll
adc
lret
pop
dec
into
dec
lock
and
fwait
enter
ret
sub
adc
insb
add
leave
scas
icebp
imul
cs
xchg
or
orb
cmp
jmp
lds
les
jo
adc
push
test
push
mov
int3
jg
aad
adc
add
xchg
das
sub
stc
imul
xchg
mov
jns
stos
stos
jbe
mov
stos
jo
add
stc
or
mov
xchg
cmp
and
out
sbb
aas
jnp
push
adc
push
pop
mov
fcomi
cmc
popa
dec
movaps
out
mov
ja
loop
push
sub
pop
popf
repz
test
push
imul
insb
push
or
out
pop
and
and
clc
aam
in
mov
inc
mov
fistps
jbe
jbe
into
jmp
xchg
test
adc
les
in
aam
mov
jmp
mov
mov
ret
xchg
jge
jmp
pop
imul
out
pop
nop
dec
cli
mov
repz
test
or
pop
rcl
stc
mov
sahf
or
aaa
aam
xlat
adc
pop
jp
mov
stc
inc
cmp
cmp
pop
adc
mov
bound
adc
test
jbe
push
xchg
add
outsb
lock
outsl
push
pop
test
fdivr
dec
and
and
jb
aaa
movsl
sbb
push
mov
mov
adc
stos
loope
lods
mov
pop
fldt
jge
mov
inc
mov
repz
test
push
ss
dec
pop
lock
or
les
mov
sarb
call
gs
mov
push
mov
push
mov
inc
pop
add
dec
and
lret
js
das
mov
inc
shll
loope
jge
push
pop
inc
jne
inc
cltd
adc
xor
fmull
dec
test
lods
stos
sbb
jns
and
daa
mov
dec
gs
loope
ja
cmpl
xchg
lea
sbb
xor
pop
loope
cmpsb
addr16
aaa
mov
inc
rorb
mov
imul
cld
push
jg
push
xor
and
es
xchg
push
inc
and
testb
pop
add
fsubs
rorb
arpl
shll
push
scas
add
mov
jecxz
cld
ljmp
das
xchg
flds
fstl
inc
cmpsb
insb
mov
repz
dec
xchg
xchg
sbb
leave
mov
jno
rcll
mov
mov
nop
rcrb
int
dec
push
shl
adc
pop
xor
add
in
les
sbb
mov
in
movsl
add
mov
addr16
jns
add
ja
lcall
xor
rorb
popa
jecxz
xor
subl
mov
xchg
outsl
adc
add
inc
mov
cs
sub
lcall
xlat
or
mov
add
or
cli
das
jle
cld
popa
push
xchg
daa
mov
dec
call
push
push
les
js
jl
imul
or
mov
inc
pusha
mov
pop
cli
movsl
sahf
jg
aas
add
lock
ljmp
imul
les
and
sahf
dec
cmp
dec
xor
out
shll
xor
mov
iret
jle
adc
or
jmp
repnz
cmp
jno
xorl
cmpl
pusha
add
mov
push
and
pop
jg
shlb
or
push
pop
out
stos
repz
into
add
and
mov
inc
push
out
icebp
add
mov
prefetchwt1
or
mov
pushf
imul
jno
xchg
inc
outsl
ret
push
fwait
or
xor
mov
add
in
mov
dec
sub
push
xchg
and
pop
mov
in
test
cld
xor
ds
dec
inc
sub
test
cltd
push
lret
xor
sbb
lcall
imul
jae
cld
call
stos
loope
cmp
fldcw
push
movsb
or
enter
and
mov
movsb
enter
adc
mov
ret
pusha
fidivl
lods
add
mov
dec
je
dec
cmp
scas
mov
out
sub
daa
repz
rol
mov
mov
inc
push
adc
and
out
xchg
mov
push
mov
cmc
cltd
inc
imull
dec
sbb
sbbb
ret
mov
lds
pop
cmp
add
or
pop
test
jnp
jne
mov
cmp
jle
mov
repnz
aaa
test
mov
cmovno
sbb
jle
xchg
jno
add
mov
mov
adc
add
sbb
jecxz
dec
cltd
push
mov
xorb
xor
test
sbb
mov
insl
sti
mov
sub
mov
and
fucomip
negb
or
pop
aad
ds
icebp
fldt
pop
cmp
cli
sbb
inc
sbb
ret
push
cmc
mov
pop
scas
into
enter
ror
cs
jno
mov
rorb
xchg
mov
cld
into
fldcw
ja
and
pop
arpl
fcomps
pusha
cmpsb
add
adc
cltd
xlat
loop
fdivrl
mov
imul
or
mov
inc
sbb
scas
mov
xor
jecxz
pop
arpl
cmc
pop
mov
mov
pop
add
cmp
or
mov
push
push
push
jb
pop
inc
jnp
nop
dec
cmp
pusha
icebp
pop
out
add
adc
imull
enter
les
or
sub
mov
mov
cmpsl
jmp
jnp
adc
daa
push
out
clc
add
faddl
push
in
sbb
mov
mov
jbe
push
mov
jmp
loope
lret
jbe
dec
clc
mov
ret
push
mov
scas
int3
sub
mov
and
pop
ljmp
cs
xchg
mov
loope
jp
shll
popa
add
or
adc
mov
mov
mov
test
and
mov
inc
ret
and
fcmovnu
xchg
push
mov
jmp
xor
out
lret
int
outsl
aam
cmc
aaa
adc
sbbl
xlat
test
sub
imull
jge
sahf
pop
int3
iret
inc
sbb
repz
cmp
lahf
call
call
adcb
or
fadd
leave
sbb
add
add
lret
inc
inc
je
dec
out
outsb
hlt
cmc
xor
movsb
cmp
xchg
mov
imul
jmp
mov
xchg
aaa
repz
cltd
in
sbb
pop
or
enter
jns
and
test
pop
jecxz
in
pop
mov
incb
dec
adc
out
sbb
dec
hlt
inc
xor
mov
xor
inc
or
mov
fadd
add
lods
mov
out
sbb
dec
lods
pop
push
fdivl
lods
ret
scas
add
in
fisubl
cltd
mov
out
mov
mov
xor
mov
outsb
jnp
repnz
sbb
cmp
cld
xor
ret
dec
fnsave
ret
in
aad
jb
sbb
mov
out
les
mov
and
dec
aad
push
dec
cld
scas
stc
adc
lret
ret
lret
lea
sub
add
ss
inc
rclb
add
xchg
push
push
cmpb
aad
mov
or
ja
in
jb
pop
mov
and
xchg
jne
or
and
imul
cmp
pop
cmp
jge
int3
or
in
inc
add
sbb
sub
sbb
rep
fistpl
adc
mov
mov
dec
sahf
jbe
mov
or
push
push
inc
pop
xor
lcall
in
loop
arpl
or
cwtl
cmp
jnp
clc
fdivrs
je
js
mov
jp
mov
hlt
mov
jnp
xchg
inc
hlt
inc
data16
push
xor
fadds
sub
mov
mov
popf
xor
dec
rolb
mov
push
loope
gs
mov
jns
cmpsb
push
sarb
dec
cltd
push
repnz
inc
pop
hlt
inc
orb
xor
or
lods
cmc
dec
adc
xchg
push
jp
stos
aam
and
mov
js
mov
mov
xchg
xor
in
adc
push
out
in
shll
pop
test
jecxz
sub
add
lret
outsl
and
lods
jmp
jno
dec
je
cmp
iret
jp
out
loopne
sub
adc
xchg
push
mov
insb
movsl
jb
dec
in
adc
fiadds
loop
fsubl
lds
adc
addl
xchg
fldt
sbb
mov
and
incl
mov
sbb
or
mov
mov
out
rorb
in
movl
mov
ljmp
xlat
dec
insb
dec
sub
cltd
xor
daa
mov
dec
imul
jp
adcb
js
jo
pushf
fwait
xchg
mov
cli
scas
sbb
add
mov
adc
mov
mov
aas
iret
push
int
das
fisubl
xchg
lahf
jmp
cmc
mov
roll
pop
fidivrl
dec
test
imul
jge
mov
pop
mov
test
push
and
push
test
fs
jp
rorb
jle
das
imulb
mov
mov
lock
or
mov
es
bts
xchg
xchg
fsubp
push
pop
leave
pop
xchg
add
push
add
cwtl
or
hlt
add
in
scas
ja
loopne
or
xchg
jecxz
hlt
xor
repz
xor
pop
mov
push
inc
mov
cld
sub
test
out
sub
add
and
shll
or
jmp
push
sub
add
xchg
lea
xor
sub
sbb
cmp
jo
mov
dec
mulb
insl
scas
fldenv
pop
push
jmp
adc
pop
push
add
adc
push
mov
push
cmp
jno
mov
stos
pop
rcr
dec
mov
movsl
pop
xlat
xchg
sahf
cmp
sbb
cmpsb
mov
in
cmp
xchg
movsb
aas
hlt
pop
dec
mov
out
jae
out
sub
bound
mov
and
push
jmpw
loop
movsb
and
and
sbb
addr16
jmp
push
add
ss
and
in
cltd
cmpsl
or
or
ja
push
outsb
mov
shl
loope
pop
mov
mov
cmp
xchg
push
out
xor
ret
xchg
pop
pushf
xor
jg
dec
push
dec
and
fcomps
jp
test
xor
jnp
ret
and
cld
push
iret
lret
loop
out
push
es
cmp
mov
push
cmp
pop
rcrb
popa
sahf
inc
jl
xchg
jno
shr
enter
mov
in
imul
mov
rcr
mov
sub
inc
mov
mov
push
mov
mov
cmp
repnz
or
add
cli
aad
stos
adc
push
add
movsl
xorl
loopne
fisubl
test
cli
js
decl
mov
mov
stos
rol
js
sbb
sahf
shr
pop
sti
sub
xor
xorb
adc
jmp
inc
mov
jmp
jb
andl
movsl
or
lret
sub
sbb
sarl
loopne
or
shll
into
pop
insb
lahf
xor
bound
jmp
jo
test
xlat
inc
jle
mov
fadds
fimuls
pop
adc
jae
inc
cmc
lds
jo
idivb
data16
loopne
xchg
sbb
fpatan
repnz
push
xor
dec
lock
leave
jg
push
inc
mov
test
fwait
loop
dec
sbb
mov
add
lahf
call
cmpl
and
xchg
lods
mov
push
test
repz
cmpsl
or
ds
cmpsl
mov
adc
push
mov
pop
pop
ds
push
sub
lods
pop
inc
iret
mov
push
out
ja
lcall
fisubs
out
jecxz
sub
mov
jbe
jmp
jne
aaa
jo
inc
and
in
push
xor
out
inc
arpl
enter
inc
push
ss
dec
sbb
adc
push
xchg
inc
mov
xorb
arpl
xchg
pop
les
sti
mov
flds
pop
clc
shlb
push
sub
jmp
nop
out
pushf
scas
fnstcw
lcall
dec
add
or
jo
in
pusha
rol
inc
leave
gs
outsl
call
packssdw
cwtl
std
inc
jle
xor
sub
ss
jnp
out
pop
mov
push
mov
loope
sbb
adcl
aam
or
xchg
scas
sahf
sub
cli
mov
jecxz
adc
fsub
pop
inc
aaa
push
out
movsb
push
push
jle
add
aam
jns
cmp
fld
decb
mov
jne
aas
push
rcl
fadds
jno
add
popf
push
sbb
cmc
mov
dec
fisttpll
cmpsl
les
pop
cwtl
and
cmp
jmp
cmc
insl
call
sub
cmp
sahf
adc
jae
cltd
sbb
and
xor
dec
pop
push
jmp
orl
and
cmp
cmp
lahf
or
and
fldcw
outsl
xchg
addr16
dec
cli
cmp
and
icebp
jae
test
icebp
lds
fninit
push
mov
outsb
fcmovnb
hlt
popf
push
aam
dec
ret
pop
mov
lock
or
pop
mov
and
sub
cmp
cwtl
or
jmp
sbb
mov
fadd
or
aam
out
sbbb
adc
xor
shlb
inc
jg
pop
jge
mov
daa
cmp
scas
repnz
pusha
add
cli
cs
movb
out
lcall
mov
adc
insl
add
sub
mov
lret
movsl
adc
cmp
pop
push
je
xchg
pop
dec
ljmp
push
xchg
popa
xorb
pop
ror
les
cld
cltd
cltd
mov
jp
mov
mov
add
nop
push
xlat
aas
xsha1
sub
xor
xchg
xor
dec
xchg
ret
das
sub
push
std
push
bound
lret
adc
cmpb
jle
mov
insb
dec
xor
adc
jmp
cmpsb
clc
jmp
es
enter
jmp
lret
cmp
pop
cmp
push
in
mov
jmp
sub
mov
in
jnp
lahf
gs
pop
and
push
pop
jb
stc
repnz
adc
call
xchg
push
mov
cwtl
xchg
lea
jnp
adc
stos
add
out
popf
xchg
jns
lcall
sub
jp
xor
adc
aam
hlt
es
testb
out
add
paddusw
xor
add
cld
test
mov
pushl
ds
inc
cmpsb
jg
sub
ljmp
mov
mov
cmp
arpl
dec
mov
jb
ljmp
xor
xchg
in
lret
jne
adc
xlat
lock
cmp
fdivrl
cwtl
push
mov
fwait
xor
std
ret
and
mov
cmp
das
call
leave
xchg
daa
xchg
icebp
cmp
inc
call
sbb
les
cmp
jns
adc
iret
jno
mov
push
data16
lds
rcrl
addr16
mov
arpl
std
repnz
sarb
jne,pt
add
mov
inc
jecxz
shll
jns
in
inc
repnz
or
jg
sbb
jp
es
cmp
or
dec
add
aam
shll
and
lcall
sahf
inc
fwait
out
jbe
sbb
inc
jl
add
sarb
mov
mov
test
push
jnp
jnp
jecxz
mov
aam
ljmp
int3
add
in
std
sbbb
dec
insl
pop
xchg
xchg
out
xor
fdivp
jnp
pushl
and
mov
adcl
mov
loop
and
data16
or
stos
xor
ljmp
testl
les
mov
mov
xor
flds
bndldx
adc
movsl
mov
es
jle
iret
rcll
mov
cld
idivl
or
and
cmc
pop
repnz
sub
gs
popf
loop
jg
jmp
and
jmp
cmp
repz
aam
ds
ljmp
rorl
dec
jle
test
adc
sbb
push
in
gs
push
pop
push
aaa
lcall
outsl
push
loopne
adc
adc
dec
push
sub
xchg
int
insb
inc
cmpsb
or
xchg
and
sbb
in
jge
inc
movsb
orb
mov
rorl
cmp
mov
jbe
mov
mov
jbe
and
leave
adc
jae
xchg
pushf
lret
sarl
subl
lret
lahf
je
sbb
jmp
js
sbb
ljmp
push
cmpsl
sub
mov
fcomi
iret
sbb
xchg
push
sti
adc
and
loop
dec
mov
or
xor
adc
mov
dec
xchg
subb
lahf
sti
inc
cs
mov
jmp
mov
loopne
jmp
cmpsl
in
repnz
pop
popa
xchg
sub
sub
jle
roll
sub
cmp
push
aaa
cmp
push
inc
xor
add
scas
mov
mov
jecxz
lods
test
stc
cmp
pop
mov
push
loop
iret
lea
lea
xchg
xorl
stc
arpl
pop
repnz
orb
mov
dec
fs
mulb
dec
pop
insl
les
xor
adc
cwtl
cmp
mov
mov
cmp
xchg
rorb
test
push
int3
fsub
ds
es
pop
adc
or
scas
dec
fcompl
ret
fcomp
inc
js
add
cltd
sub
movl
movsb
mov
fdivs
stc
sbb
push
int
sbb
pusha
sarb
sub
dec
daa
inc
cli
dec
or
out
or
jne
insl
mov
xor
imul
ffreep
in
or
xchg
ja
cwtl
xchg
nop
ja
subb
jecxz
inc
sub
inc
adc
sub
add
adc
mov
popa
mov
jmp
lds
lret
jecxz
xchg
popf
or
ret
outsb
push
cmp
pop
ljmp
mov
out
loop
xchg
popf
pop
fsubr
enter
movsb
cmp
lods
xor
jle
loopne
fcompl
imul
out
adc
les
hlt
outsb
sbbb
mov
or
loop
dec
dec
jb
mov
test
out
push
stos
adc
mov
je
mov
gs
sub
lcall
xchg
xchg
imull
mov
fs
sub
push
js
dec
dec
mov
je
mov
insl
xchg
in
aaa
inc
mov
adc
repz
stos
jo
shrl
js
mov
sub
xchg
loop,pt
xchg
jbe
bound
sbb
xor
sbb
or
push
pop
stc
ret
mov
dec
fs
inc
into
xchg
hlt
mov
jmp
xchg
cwtl
or
xchg
push
jae
adc
xchg
or
adc
dec
loopne
jno
test
jp
movsl
jbe
sbb
cmpsb
loop
ds
and
mov
int
outsb
pop
push
adc
stc
add
cmp
xlat
jno
inc
lds
cmp
sbb
inc
push
mov
imul
inc
mov
jno
fs
mov
jb
mov
and
testl
pop
in
cmp
pop
inc
out
xor
sbb
cltd
fnsave
repnz
sti
mov
jno
stos
sub
pop
inc
out
sahf
sub
cmc
sub
pop
sbb
xor
and
stos
fdivrs
cmpsl
mov
aas
lea
mov
out
movsl
sub
scas
or
xchg
jnp
int
bound
imul
dec
and
leave
mov
popa
ljmp
xchg
ds
jns
in
fcoms
mov
mov
adc
pop
and
jno
adc
into
mov
cld
xchg
shrl
out
xor
and
out
stos
insb
xor
push
fldt
dec
or
cmp
xchg
jl
in
mov
jl
dec
mov
cltd
adc
jmp
mov
push
pop
iret
add
lret
lods
popa
dec
pop
dec
mov
pop
pop
or
dec
mov
bound
mov
ds
pop
mov
mull
ss
add
pusha
shl
fnstenv
and
inc
cmp
pop
andl
jmp
adc
adc
push
inc
cld
sbb
add
int3
in
xor
xor
sahf
xor
cltd
xchg
es
push
inc
jns
or
dec
movsl
adc
push
frstor
inc
loopne
push
stc
mov
das
cmc
or
mov
idivb
fcom
and
ljmp
lods
or
jecxz
lods
gs
mov
int3
std
leave
icebp
inc
cld
scas
rclb
xor
ja
nop
add
mov
sti
adc
mov
out
call
bts
adc
in
inc
pushf
mov
addr16
add
pop
jecxz
repnz
loop
loopne
push
xchg
xchg
mov
imul
pop
faddl
sub
mov
sbb
mov
mov
push
cmp
cmp
adc
add
sbb
jg
mov
lahf
loop
adc
std
unpcklps
movsb
sbb
mov
orb
int3
lods
push
jp
addr16
fistpll
lods
cli
fiadds
sbb
rclb
call
fisttpll
cwtl
jp
out
adc
movl
xor
stos
push
lcall
sbb
dec
fidivrl
sub
jmp
popa
mov
push
cmpsb
cltd
lahf
mov
jo
hlt
xchg
and
cmp
mov
mov
sahf
mov
stc
adc
lret
sbb
aaa
mov
inc
pop
mov
and
sbbb
ja
outsl
and
and
mov
push
ret
int3
push
xchg
es
hlt
pop
mov
ret
push
cmp
xor
push
adc
cmpsb
push
inc
repz
xchg
loop
fdivp
mov
or
iret
dec
popa
enter
sbb
cmpsb
mov
or
pop
pop
pop
dec
cltd
mov
push
lret
mov
push
es
xor
jno
pop
mov
subb
stos
lods
inc
adc
ja
mov
inc
fsubrl
pop
aam
cmpsl
sbb
jmp
clc
jb
add
cmp
fwait
sub
dec
adc
mov
cmc
gs
nop
mov
push
xchg
push
rorb
insb
aaa
lock
dec
pop
lret
outsb
xor
xor
jge
int
mov
xchg
and
adc
push
mov
insl
jp
int
notb
ficoml
mov
adc
xchg
gs
push
stos
sub
xchg
out
in
jl
add
xor
sahf
call
fistl
push
mov
imul
cmp
int
cmpsl
xor
gs
cli
push
pop
fisubrs
or
inc
pushf
mov
dec
stc
jecxz
daa
mov
loopne
clc
outsl
popf
addb
sbb
ror
aam
xchg
ljmp
mov
adc
add
lods
in
jo
xchg
push
mov
push
pop
xlat
pop
push
scas
addr16
push
lcall
xor
test
ret
add
jg
cwtl
jns
mov
mov
fucomp
cmp
cmp
xor
lcall
fisttpll
mov
repz
cmc
out
imull
inc
cmp
repz
sbb
push
dec
inc
out
nop
xchg
fcoml
mov
inc
inc
loopne
ret
fsub
hlt
mov
jmp
jo
das
loop
mulb
out
mov
jmp
fildl
dec
push
mov
pusha
fwait
sub
std
mov
ss
jo
cmp
repz
xlat
xor
mov
sbb
pop
mov
xchg
xlat
pop
movsb
insb
jo
inc
in
cmpsb
shlb
ds
ret
movsl
insl
das
mov
sbb
pop
scas
adc
rcrl
cmp
jecxz
movsb
pop
mull
mov
fnstsw
push
dec
fwait
loop
lea
lods
mov
ljmp
lods
dec
dec
gs
fistl
xlat
fadds
xor
loop
out
cwtl
jge
out
imull
and
in
add
mov
int
pop
int3
mov
sti
and
andb
aam
pusha
add
stos
in
cmp
imul
subw
out
imul
call
shlb
jbe
mov
std
loop
and
mov
test
dec
mov
es
cmp
outsl
mov
mov
in
pop
pop
rolb
dec
les
shll
testb
cmp
insl
push
dec
push
leave
cmpsl
clc
mov
in
mov
inc
arpl
into
std
orps
adc
pop
pop
rcl
in
cmc
ljmp
or
xchg
mov
inc
movsl
push
sub
data16
sahf
into
mov
pushf
or
clc
or
xor
loope
push
xchg
mov
and
add
or
push
addl
bound
xor
adc
or
jl
sbb
cwtl
cmp
mov
or
and
cmpsb
gs
rcrl
imulb
mov
jmp
scas
pop
sbb
in
mov
roll
pop
dec
lods
mov
scas
mov
xorl
xlat
push
lret
xor
in
mov
adc
xor
test
fmuls
xchg
enter
in
jno
repz
ljmp
sbb
inc
popa
xchg
cmp
dec
mov
xchg
out
lods
dec
imul
xor
into
mov
xchg
inc
into
xchg
mov
push
insl
pop
cmp
jnp
das
stc
imulb
or
xchg
cltd
and
xlat
inc
sub
testl
les
fisubrs
xchg
jge
and
lds
scas
dec
or
outsl
push
in
out
add
lret
std
pop
shll
sbb
pop
clc
insb
test
out
mov
jg
jne
imul
aad
aas
out
bound
xor
test
and
popf
daa
lahf
je
cmp
dec
xchg
mov
imul
dec
insb
jae
sbb
stos
add
sub
mov
mov
daa
jmp
rclb
lret
int3
pop
and
sbb
mov
test
xor
push
push
add
in
xor
pusha
mov
sbb
repnz
and
das
sbb
and
xor
xlat
iret
pop
cmp
daa
sub
rcr
cmp
js
scas
rcll
pop
in
lahf
mov
sbb
pop
cmp
shll
adc
xor
xchg
fstpt
scas
mov
mov
push
js
arpl
fld
sbb
adc
inc
aad
jp
dec
in
fcmovb
std
popa
iret
sub
rclb
pop
mov
sub
test
and
pop
push
lea
in
hlt
aam
cmp
sub
jge
push
or
lahf
adc
push
jecxz
cli
loopne
dec
gs
jge
aas
data16
out
leave
push
pop
fnstsw
daa
or
into
ljmp
jp
fwait
ljmp
adc
mov
pop
or
xchg
mov
pop
hlt
test
push
jl
out
fcmovu
in
roll
fidivrl
arpl
stos
shll
xchg
push
ret
adc
mov
in
mov
and
mov
or
xlat
mov
test
xor
pop
jp
inc
movsl
fwait
lcall
xor
xchg
shrl
xlat
pop
cmp
in
inc
adc
mov
aad
sbb
bound
stc
sbb
sahf
fs
push
mov
lods
leave
jno
fcomip
add
call
add
jb
lods
int3
and
cltd
imul
imul
pop
and
pop
mov
add
cmp
call
jecxz
fdiv
std
arpl
add
je
cmp
in
int3
push
cmc
lcall
nop
andb
push
insl
lods
outsb
rcrb
and
cmp
jp
sub
shr
jg
pop
ret
out
daa
jbe
or
enter
test
cltd
xor
pop
mov
inc
pop
xchg
sti
ljmp
inc
inc
push
jg
test
scas
mov
shrb
inc
adc
int3
mov
mov
dec
xchg
jno
adc
dec
sub
cs
insl
dec
add
sbb
jns
and
fldenv
daa
or
cmp
adc
jo
mov
adc
cmp
fwait
clc
xchg
cmp
adc
out
xor
call
popa
in
into
cmpsb
mov
es
cltd
or
xor
xchg
iret
inc
add
arpl
push
mov
mov
loopne
pushf
in
or
inc
lret
jle
imul
movl
cmc
sahf
cmpl
pop
pushf
xchg
cmp
popa
inc
jl
stos
cltd
mov
das
cwtl
testb
sub
mov
dec
repnz
mov
xor
stos
jns
fsubl
daa
dec
jae
jb
loope
xor
inc
mov
or
pop
adc
iret
push
sbb
rcll
jl
push
sbb
xor
loope
test
std
jbe
add
stc
inc
int3
jno
or
mov
sahf
sbb
fldcw
xor
sbb
or
sub
sbb
andl
xchg
pop
aam
insb
arpl
pusha
push
inc
fistpll
cmp
sub
mov
mov
rorl
or
arpl
rorb
popa
loope
test
outsl
addl
mov
repz
jecxz
adc
ljmp
sbb
push
mov
push
inc
mov
movsb
adc
cmp
jno
xor
ret
in
cmpsb
xchg
mov
mov
sub
push
jle
adc
mov
push
mov
gs
jmp
repnz
outsl
imul
aas
lea
das
cmp
aas
fistpl
sbb
cmp
sbb
dec
movsb
fcoms
mov
mov
hlt
cmp
stc
xchg
dec
jne
stos
adc
aas
sahf
sahf
pop
dec
ret
lods
je
xlat
sahf
loopne
arpl
dec
mov
outsb
mov
add
pop
or
shlb
lea
push
pop
pop
push
adc
cmp
cmc
xchg
gs
push
mov
aam
xor
jne
jb
cmp
popf
arpl
and
mov
clc
jle
imul
arpl
cmp
inc
inc
ljmp
mov
sbb
pop
and
inc
nop
mov
ja
test
inc
lret
repnz
ljmp
mov
leave
scas
mov
xchg
aaa
bound
xor
xchg
cwtl
cli
inc
xchg
mov
es
pop
sarl
rorb
adc
mov
test
pop
fs
lds
ds
gs
dec
pop
mov
ss
inc
jnp
inc
adcb
scas
sbb
xchg
mov
xchg
or
iret
mov
or
loop,pt
mov
adcb
dec
mov
cmpsb
jnp
or
xlat
sbb
and
rorb
or
daa
adc
dec
loop
inc
pop
jmp
mov
loop
mov
shrb
aaa
test
aas
xchg
inc
icebp
mov
sbb
mov
scas
test
xchg
and
jmp
pop
cmpsb
cld
das
test
cmp
lods
cmp
xor
insl
adcb
sbb
sbb
stos
test
shll
xor
xor
mov
cs
jg
cmp
add
and
jnp
bound
inc
cli
xchg
lret
pop
push
push
movsb
jecxz
push
hlt
aad
lds
and
xchg
push
jae
jo
sub
aaa
pop
aad
xchg
push
xchg
mov
mov
pop
mov
sbb
fadds
shr
test
xchg
push
les
out
mov
pop
mov
and
sub
adc
scas
test
push
push
xorl
adc
mov
jne
mov
repnz
inc
frstor
mov
sbb
shll
push
sarb
add
sub
out
iret
xchg
movsl
push
dec
aas
sub
sub
les
insb
and
imul
cld
add
push
xchg
ja
dec
in
outsb
das
fdivr
dec
addr16
fs
cmpsb
imul
aad
into
and
mov
add
mov
jecxz
insl
push
divl
pop
nop
and
sub
out
imul
mov
xor
shlb
jmp
orb
add
popl
fucomp
rorb
fwait
insb
iret
sar
test
dec
add
add
mov
pop
jo
fisubs
mov
sub
f2xm1
in
jae
pop
xchg
in
lahf
cmp
xor
xor
test
cwtl
and
fwait
sub
jb
stos
jge
stc
insl
stos
data16
xchg
and
out
push
dec
idivb
jmp
out
mov
addl
int
push
jge
add
int
dec
fwait
ljmp
sar
out
ja
and
mov
shl
sbb
bound
in
jp
push
out
movsl
cmp
sbb
add
push
dec
cmp
gs
gs
outsb
sbb
xor
out
mov
cmp
xor
mov
jmp
and
pop
repnz
outsl
adc
pop
roll
or
ds
adc
and
adc
insb
mov
repz
jne
mov
insb
fildl
cltd
hlt
adc
or
enter
cmp
adc
pop
daa
sub
mov
mov
cmp
add
cltd
cmp
push
leave
loope
xchg
mov
sbb
push
mov
push
inc
mov
mov
lcall
pop
pushf
xor
cwtl
fwait
loopne
pop
jmp
mov
mov
mov
lock
cli
icebp
mov
push
xor
mov
inc
iret
jnp
cmpsl
ret
lcall
dec
les
push
lds
xlat
sub
xchg
imul
mov
dec
pop
pop
sub
sbb
cmp
lods
xchg
inc
sub
fsts
data16
lods
aad
cwtl
jl
or
jp
aaa
sub
jae
xor
insb
icebp
mov
lods
hlt
sub
ret
xchg
mov
jmp
xor
icebp
and
fs
pop
push
adc
mov
aam
sbb
xlat
push
pop
hlt
int
xchg
and
sti
int
pop
dec
push
jnp
out
les
mov
andb
int
push
addl
sbb
pop
adc
aaa
push
inc
in
lret
shlb
pop
loopne
and
adc
cltd
js
daa
inc
in
rcrl
sub
cmp
cs
lret
out
test
cmp
insl
xchg
fs
jae
mov
add
push
push
movsl
mov
mov
sbb
lea
xor
cltd
xor
fucomi
cs
push
push
fdivrs
inc
aaa
inc
stc
pop
add
add
add
mov
clc
ret
addr16
jle
out
and
pop
cmpsl
fiadds
adc
in
pop
test
mov
cvtdq2ps
bound
sbb
inc
rcrl
mov
and
pop
sbb
scas
push
xchg
xchg
outsl
mov
sub
test
jge
fcompl
pop
cmp
scas
mov
lahf
insl
cmpb
pop
fnstcw
push
mov
pop
rcrl
pop
shll
push
adc
test
popa
cmpsb
into
incb
lea
out
sub
mull
dec
jecxz
mov
rcrl
std
jne
ljmp
lret
jecxz
push
shlb
popa
call
out
cmp
adc
outsb
push
imul
jl
mov
imul
lcall
cwtl
add
js
leave
push
cmp
inc
popa
lcall
pop
push
mov
push
sbb
addb
in
in
ror
cwtl
or
fsubr
sbb
mov
insl
filds
xchg
inc
jno
mov
push
jl
cmp
sub
adcl
aam
jl
sbb
hlt
aas
pop
leave
stos
icebp
cmpsl
jb
aad
lahf
pop
cmc
test
lea
mov
std
mov
sarb
jle
push
jb
in
adc
mov
lods
rcrb
int3
loop
jmp
sbb
add
les
fldenv
orl
mov
loope
hlt
and
dec
push
fistps
or
mov
loopne
ret
ret
leave
xor
das
jmp
jle
push
adc
scas
sub
sub
fwait
pop
push
dec
sub
push
fwait
lret
ljmp
icebp
je
test
fucom
push
xor
jge
push
inc
hlt
push
jne
cs
push
cmp
fistps
xlat
mov
pop
add
inc
dec
sbb
std
cwtl
mov
popa
xchg
fcmovnu
inc
xor
add
xchg
mov
and
and
push
mov
lret
mov
jbe
lcall
inc
jg
mov
in
xor
pop
or
in
pushf
call
jg
pop
push
inc
xchg
sbb
popa
cmp
or
sub
scas
push
mov
nop
jle
clc
add
inc
gs
push
jb
scas
xchg
dec
xchg
leave
sahf
dec
dec
std
aad
jmp
cmpsb
dec
cltd
inc
loopne
push
or
sub
outsb
xchg
mov
mov
loope
fcmovnb
and
lods
xchg
mov
pop
aam
sbb
out
ss
shrb
loopne
inc
sbb
jge
pop
and
in
popf
sahf
bnd
pop
and
daa
movsl
cmpsl
arpl
in
pop
adc
das
mov
ljmp
cmpsb
push
inc
cmp
mov
in
jns
aad
mov
je
aad
push
repz
lods
add
xor
loope
ret
arpl
enter
stos
ss
mov
ds
movsb
lock
pop
cltd
inc
call
pushf
aad
stos
push
cmc
sbbl
xchg
xor
push
fists
cmp
dec
in
addr16
testl
int
xchg
nop
jns
iret
fs
and
out
jb
sub
sub
jno
sbb
adc
add
lahf
pop
push
and
jmp
lea
inc
fistps
flds
ds
int3
addb
mov
push
mov
mov
in
add
or
xlat
mov
in
mov
adc
jnp
mov
addl
pusha
sbb
cmpsl
adc
inc
loop
xchg
nop
fbstp
push
adc
xchg
jmp
pop
in
mov
xchg
sub
rcr
push
adc
and
xchg
lods
lods
jle
or
push
insl
push
out
mov
mov
out
pop
mov
cmpsl
lret
mov
inc
mov
sub
aad
or
lock
lcall
sub
pop
mov
fists
sbb
andl
std
adc
mov
ljmp
das
jecxz
xchg
in
cli
cmp
or
int3
pop
test
lret
add
aam
pop
stos
inc
imul
repz
pop
insb
adc
repz
mov
jmp
das
call
mov
test
adc
cltd
ljmp
inc
hlt
jle
mov
jbe
lret
call
dec
adc
mov
mov
mov
in
sbb
sub
push
push
push
les
lea
add
pushf
rcrb
daa
pushf
xor
fprem
push
iret
sti
mull
mov
repnz
jge
pop
jmp
mov
ficomps
sbb
movsb
mov
outsb
mov
popa
mov
xchg
adc
mov
or
dec
daa
xchg
ja
jmp
movsb
mov
push
mov
and
dec
sbb
movsb
cwtl
dec
jnp
inc
jns
sub
jl
xchg
fistpll
jg
sbb
stos
fs
outsl
lcall
sub
jns
push
inc
dec
lcall
xor
jmp
sub
and
fisubl
push
jmp
in
imul
mov
mov
mov
popf
movsb
outsb
jbe
and
mov
test
roll
lods
jmp
dec
mov
mov
mov
loopne
cmp
in
outsl
call
dec
je
int
add
sub
jbe
mov
jmp
and
shrl
out
pop
rclb
int3
shrb
daa
mov
test
ret
fwait
out
and
inc
je
push
fdivl
int
out
out
rclb
pop
push
push
int
mov
hlt
repnz
out
fstl
aad
cs
cmp
push
fwait
loope
testl
and
roll
or
lahf
sbb
pushf
std
inc
in
cmp
pop
popf
out
xchg
les
and
out
push
adc
or
cwtl
gs
cmp
and
jbe
push
sub
pushf
or
fists
add
sbb
sahf
inc
sbb
or
and
fistpl
sub
nop
xchg
sarb
jnp
repnz
sub
fsubs
lock
in
rcrb
sbb
loope
add
cli
sbb
jmp
not
gs
inc
mov
je
mov
add
add
sahf
loop
mov
out
pop
incb
dec
fidivrs
cmp
xor
popa
outsb
sub
lret
sub
das
xchg
adc
xchg
mov
outsl
pop
xor
jecxz
insl
dec
out
inc
fldcw
or
es
out
mov
inc
in
test
push
mov
xchg
cmpsl
sub
std
dec
jbe
sbb
mov
fsubrs
andl
cmp
xor
sub
subb
pop
fwait
lds
shrb
push
add
int3
outsl
mov
xlat
sub
xchg
or
decb
popf
jle
or
or
mov
test
adc
test
mov
int3
jns
arpl
idivb
and
mov
jo
dec
xor
pop
adc
enter
pop
jl
dec
outsl
mov
pop
test
dec
jl
das
out
mov
aad
inc
mov
popf
push
adc
mov
imul
loopne
ds
int3
jo,pt
les
bound
jge
mov
pop
mov
lods
cmp
dec
or
rclb
xchg
insb
int3
test
mov
lcall
mov
dec
cmp
ja
loop
movl
lock
and
and
jmp
xchg
dec
and
bsr
xchg
leave
inc
in
arpl
dec
call
pop
push
shll
xchg
cwtl
movsb
jecxz
rcr
mov
mov
push
idivl
fidivs
faddl
les
mov
mov
mov
mov
push
rorl
insl
or
lds
sbb
sub
enter
mov
and
jl
xchg
scas
push
aaa
mov
lods
xchg
inc
sbb
nop
add
xorb
lret
adc
cs
es
push
aaa
lock
pop
stos
stos
pop
mov
xor
jbe
loopne
aas
dec
jl
int
cmp
test
xchg
jg
cli
adc
stos
xchg
mov
ss
daa
mov
xor
sub
xchg
insl
inc
or
push
jmp
sbb
mov
adc
jbe
orl
push
mov
jl
sub
dec
daa
push
mov
imul
mov
outsl
in
and
push
mov
stc
movsl
lods
inc
pusha
sub
lods
pop
stos
and
inc
fwait
add
in
cmp
xchg
out
jae
lahf
push
daa
dec
or
ror
xchg
mov
leave
mov
mov
mov
dec
fiadds
cmpsb
xchg
out
xor
or
pop
mov
out
ffree
cmp
fistpl
incb
mov
fs
sahf
push
sti
imul
iret
mov
outsb
pop
sub
mov
adc
push
pop
rcll
mov
sar
test
dec
lods
gs
push
jne
leave
negl
push
sbbl
rorb
mov
sbb
mov
mov
pop
mov
loop
outsb
out
mov
xchg
ficompl
icebp
inc
std
xchg
fnsave
xchg
adc
clc
mov
or
cmp
enter
pop
xor
xor
adc
leave
cmp
cmp
out
inc
push
push
push
call
stos
insb
rdpmc
xor
mov
xchg
mov
push
cmp
mov
js
mov
mov
mov
in
sbbb
jmp
cmpsl
push
stc
lcall
repnz
push
or
fnsave
je
mov
sub
dec
std
loop
adc
sahf
inc
ss
pop
pop
jl,pt
xor
xor
bts
jbe
scas
ror
or
mov
mov
inc
rcll
mov
shll
mov
mov
add
mov
adc
sub
mov
inc
and
or
or
out
out
sti
aad
inc
iret
jns
mov
ret
add
out
dec
pop
out
fucomp
inc
xchg
mov
call
sub
lods
fimull
or
cmc
xor
ja
xor
sbb
roll
mov
lock
call
arpl
cmpsl
notl
loopne
xor
rcl
cltd
push
ljmp
jl
xor
add
cwtl
jp
iret
or
xor
mov
shl
pop
popa
xchg
test
cmp
test
leave
jl
push
nop
sub
xchg
adc
out
rcll
cmpsb
dec
pop
add
and
call
xchg
mov
aam
in
xchg
out
jg
cmc
inc
push
add
arpl
jnp
sti
imul
lret
ret
inc
or
pop
test
push
lock
inc
sbb
clc
bound
imul
aam
ffree
aad
sahf
adc
pop
lea
out
insb
xchg
aad
data16
sub
clc
sub
mov
cwtl
shll
stos
cltd
std
inc
pop
mov
xor
jmp
pop
mov
les
dec
cmp
add
in
cs
inc
ljmp
mov
inc
mov
push
arpl
mov
jmp
xor
xchg
sbb
push
testl
xor
jge
pop
iret
and
scas
out
dec
push
cmp
adc
jmp
enter
insl
test
add
cwtl
in
jne
test
imul
mov
xchg
pop
push
or
jmp
lods
movsl
adc
gs
dec
xchg
cli
lahf
mov
dec
mov
mov
xchg
push
mov
arpl
roll
add
push
or
sbb
mov
push
push
mov
mov
sub
pop
cmpsb
jbe
movsb
push
arpl
and
shll
fsubl
mov
or
subb
pop
or
popl
fbstp
test
test
das
jge
std
xchg
and
ficoms
push
xchg
or
sti
insb
sub
mov
jge
aas
int3
sub
insl
movsb
out
iret
or
out
test
add
lods
std
xor
xchg
and
push
push
lds
push
scas
int
sub
jl
movsl
out
mov
push
cs
adc
mov
gs
and
mov
mov
xor
movsb
xchg
ljmp
shl
imul
and
or
jne
out
mov
mov
lahf
sub
dec
mov
in
xor
in
xor
clc
dec
jmp
xchg
dec
sbb
pushf
shrl
pop
test
jg
nop
data16
fcoml
daa
mov
jno
pop
sbb
pop
push
and
js
jne
cmp
daa
nop
sbb
adc
fdivrl
out
mov
fdiv
cld
icebp
fcmovu
inc
mov
fldl
adc
adcb
lret
ja
or
lock
push
dec
loopne
popf
add
pusha
pop
lcall
out
jp
pop
sti
lds
mov
ljmp
inc
pop
push
mov
fwait
add
in
scas
and
aad
sbb
sbb
call
mov
mov
pop
push
push
das
repz
movsl
aad
fcomps
scas
cmp
add
mov
arpl
cmp
scas
mov
or
or
add
jge
cld
lock
pop
pushf
mov
xor
push
scas
pop
jecxz
adc
es
mov
mov
cmp
shrl
add
pop
sbb
hlt
mov
dec
jecxz
fnstcw
xchg
subl
lret
insb
clc
lods
repnz
mov
pop
lods
jge
push
jne
sbb
das
dec
fdivp
fistpl
sub
sub
mov
pop
es
inc
inc
push
or
or
jmp
fidivrs
lods
pop
mov
pop
mov
fs
push
lock
outsb
and
ljmp
lds
aad
popf
ja
adc
ss
imul
mov
fsubrl
fisubs
mov
sub
lock
test
shrl
fimull
cmp
sbb
aad
stos
or
cwtl
movsb
cmp
cmp
push
jl
div
js
and
cmp
add
xlat
or
mov
jecxz
jecxz
jge
cmp
push
adc
push
pop
mov
and
or
bound
cld
stos
test
mov
or
in
stos
jecxz
fwait
and
jmp
aad
sbb
sub
fidivrl
outsl
imull
push
xchg
xlat
cmp
adc
test
lock
jmp
add
sub
xor
into
jge
or
pusha
pop
leave
cmp
imul
addr16
shlb
push
pop
sti
lahf
pushf
je
and
fwait
test
inc
cltd
insl
cmp
push
adc
sbb
jmp
sbb
loopne
cmp
imul
pop
push
xor
arpl
addr16
xchg
inc
adcb
aam
xor
out
nop
xor
cmp
jae
mov
leave
fld
xchg
in
ficompl
cmp
cld
mov
xchg
inc
xchg
xchg
popa
into
data16
in
cmc
lret
inc
enter
call
lahf
mov
dec
pop
mov
push
mov
or
and
push
inc
insl
stc
sub
fsubs
iret
mov
sahf
mov
mov
pusha
addr16
pop
ljmp
jl
inc
es
mov
inc
jecxz
mov
pushf
push
daa
in
lods
es
rcrl
ja
push
js
lret
sbb
adc
pop
pop
mov
jbe
jp
jle
cmp
dec
pop
mov
mov
jge
sbb
outsb
push
popa
ljmp
push
push
push
imulb
fs
cltd
repz
enter
lcall
or
lret
int3
push
sbb
popa
sub
fmull
bound
clc
lret
adc
imul
out
idivb
cmp
xor
pop
dec
mov
xor
sarb
sbb
xor
out
fs
push
orl
int
sub
cmp
adc
cld
jnp
stos
and
sub
mov
rcr
or
inc
out
sbb
out
fistl
push
sub
rorb
sbb
ret
push
data16
sub
divl
bound
add
cmp
add
idivb
jge
int3
in
mov
or
scas
mov
jns
repnz
bound
adc
sbb
cld
fs
xchg
test
mov
rcl
pop
cmp
rcl
scas
push
mov
or
add
mov
enter
inc
fidivrs
cmp
or
jae
and
sub
mov
pop
pop
dec
dec
cmp
and
cmp
hlt
pop
mov
xor
dec
enter
mov
pop
daa
fmull
ret
clc
push
mov
xor
outsb
mov
out
test
jns
inc
cmpsl
mov
loop
mov
cmp
push
mov
sbb
mov
sbb
sub
stc
scas
imul
jmp
pop
subb
xor
push
test
xchg
mov
push
xor
test
xchg
adcb
filds
mov
cld
addl
scas
dec
daa
ret
fistps
pop
jg
adc
mov
mov
out
mov
in
push
push
pop
fidivrl
dec
push
jg
sub
nop
add
jecxz
cmpb
jae
andb
sahf
mov
fwait
pop
jb
stos
daa
dec
outsb
push
or
push
push
mov
in
arpl
sub
stos
push
cli
popf
xchg
in
fiaddl
scas
xor
push
jg
jl
jmp
add
into
push
inc
push
cmpsb
rcll
rcll
cmpsl
test
in
aas
fs
dec
and
das
jae
fstl
scas
xlat
mov
dec
inc
adc
out
sbb
xchg
arpl
mov
out
push
adcb
arpl
lcall
xchg
cmpsb
sbb
int
ds
push
adc
out
cmp
ss
jnp
mov
and
or
fstpt
adc
jnp
or
push
push
mov
pop
and
je
jbe
imul
rorl
js
out
or
mov
sub
jl
jbe
fistpl
loopne
repz
loop
dec
xchg
and
addl
call
aaa
ret
outsb
pushf
sub
stos
and
cmpsl
test
test
xchg
cmpl
sub
pop
ret
lds
dec
notb
pop
cmp
mov
add
pop
int
imulb
sub
mov
pop
hlt
inc
dec
ret
shlb
inc
je
aam
lahf
jo
xchg
sub
cwtl
jp
push
jae
aam
push
sbb
sbb
xlat
add
out
jbe
xchg
add
push
push
and
mov
rcrl
mov
add
jnp
and
mov
jmp
mov
idivl
dec
cmp
mov
fdivs
sub
sub
xchg
sahf
sbb
add
jno
dec
in
xor
scas
mov
enter
fdivrs
xor
imul
ja
insb
in
jp
inc
sahf
fs
iret
adc
jmp
sub
scas
popa
mov
test
cmp
and
loop
cmp
jge
jbe
xchg
in
jmp
sub
push
cmc
adc
fiadds
movb
rorb
cs
inc
into
ljmp
adc
es
push
add
add
pop
pop
xchg
mov
mov
stos
mov
mov
out
fisubrl
mov
mov
fsubrs
xor
shll
repnz
mov
xchg
test
dec
adc
push
daa
movsb
jne
clc
or
jecxz
add
iret
out
xor
xor
in
aad
inc
and
jp
ja
pop
lds
sbb
ds
pop
mov
addl
test
call
xchg
outsb
add
push
mov
pop
outsl
fsts
movsb
push
leave
push
cmp
das
fidivrl
inc
add
adc
insl
sbb
in
fcmovu
adcl
aad
and
icebp
cs
imull
test
mov
cmpb
ror
sbb
add
mov
mov
stc
dec
shll
adc
rcrl
sbb
psllq
fcmove
adc
cwtl
mov
xor
xor
pushl
std
xchg
xor
icebp
rcrb
out
stos
sbb
jnp
jbe
xor
filds
pop
add
cmc
jg
adc
jl
insl
jns
imul
sbb
push
xor
or
nop
and
test
int3
sub
push
mov
call
jnp
pop
icebp
ja
or
mov
pop
les
icebp
add
imul
lds
popa
popf
cmp
roll
mov
jle
ja
xchg
inc
push
divb
in
xchg
enter
xor
iret
inc
cmp
jbe
ret
cltd
stos
add
jmp
pop
mov
jp
mov
or
stos
jg
lods
fidivrl
cmpsb
adc
dec
jl
lret
or
shl
adc
aam
pop
stc
sub
leave
pop
mov
dec
mov
faddp
push
data16
test
fldenv
sub
out
dec
gs
xor
decl
clc
cmp
hlt
xor
es
push
daa
and
push
lret
and
popf
sbb
int3
push
jl
mov
dec
or
hlt
sbb
outsl
dec
jecxz
sti
cmp
popa
mov
jmp
cmp
pop
inc
inc
fs
mov
xlat
xor
add
push
adc
mov
sbb
scas
std
sub
sub
pop
out
pop
fwait
mov
cmp
sub
jecxz
add
jb
std
loope
jp
es
cli
ss
addr16
cmp
jno
mov
jbe
ds
out
pop
pop
test
and
mov
sub
or
lcall
add
sub
mov
jl
pop
pop
outsb
outsl
jne
cmp
faddp
adc
sub
inc
icebp
jnp
das
xor
out
js
mov
and
sub
sub
jmp
mov
mov
adc
add
push
mov
bound
jns
stos
and
adc
add
jno
jno
cmp
mov
and
push
adc
daa
dec
or
lret
dec
int3
fidivs
out
push
imul
ret
inc
pop
fisttpll
test
ret
enter
push
xchg
push
loopne
cli
xchg
ja
lret
adc
mov
sub
aas
push
sbb
std
pop
cmp
mov
mov
sbb
and
out
imul
xchg
lcall
push
lret
out
xor
scas
lea
sbb
pop
fnsetpm(287
adc
fs
push
ljmp
pop
add
cs
test
ljmp
sub
cwtl
mov
pop
lcall
imull
inc
stc
test
ret
es
cs
insl
fistpl
aas
sub
negl
and
int
xor
mov
jl
nop
mov
popf
adcl
int
mov
lret
orb
mov
outsl
add
mov
xchg
cmp
sub
fs
rolb
push
or
cmp
stc
jl
cmp
sub
aaa
or
jle
mov
push
inc
in
outsb
stos
cmp
jae
fistl
mov
addl
loop,pn
test
inc
pop
js
divb
ss
inc
popf
sub
mov
imul
in
push
inc
aad
fwait
ljmp
mov
push
arpl
push
sub
out
cmpsb
in
jo
mov
xor
adc
or
mov
cmp
jno
cld
fsubs
mov
adc
push
jb
sbbb
hlt
mov
cmpsl
xchg
inc
imul
test
pusha
loop
pusha
cmpsb
mov
push
jo
test
repz
jae
and
cli
or
nop
cmpb
inc
jo
xor
lods
sbb
jmp
cmp
add
xor
or
or
sub
aad
bound
inc
xor
ja
add
std
xor
ljmp
adc
mov
sub
jle
push
dec
repnz
testb
sub
dec
jno
test
shlb
add
data16
add
movsl
sub
dec
addl
imul
pop
stos
call
inc
and
mov
in
cs
inc
lock
adc
sarl
push
insl
jmp
pop
and
cmp
jle
stos
jns
test
jmp
mov
sub
pop
jg
rcrl
call
adc
aas
jle
inc
arpl
pushf
inc
sub
dec
mov
movsl
xor
icebp
test
int
add
or
push
mov
add
or
and
mov
push
mov
mov
sbbb
cmpsb
call
loop
mov
xor
je
xor
cmp
bnd
xor
mov
xlat
pop
push
stos
imul
jne
jle
push
inc
lret
mov
je
fsubr
sbb
mov
pop
adc
mov
add
jg
add
mov
mov
push
push
xor
js
pop
inc
fucomi
lret
out
stos
xchg
inc
aam
fs
aaa
iret
add
jmp
int3
cld
lcall
mov
mov
shlb
jecxz
cld
add
insb
sbb
dec
or
or
popf
push
jl
bound
sbb
fnstsw
add
jp
adc
int
push
mov
arpl
cs
xor
outsl
dec
pushf
push
call
cli
sub
mov
shr
pushf
mov
xchg
lds
enter
add
cld
dec
or
aas
fistpll
adc
or
mov
xchg
add
subb
test
jl
add
pop
test
mov
adc
sub
leave
xchg
cmp
push
jge
dec
and
lret
jns
push
push
dec
mov
adcb
je
test
mov
inc
sbb
push
mov
mov
cmpsl
out
test
out
imul
iret
int3
push
xchg
xor
mov
mov
rolb
js
out
pop
aam
ror
cli
and
ds
mov
xchg
xchg
mov
pop
and
fisubl
lahf
in
push
clc
stc
dec
stos
push
jae
es
xor
cmp
sub
xlat
out
mov
inc
loope,pn
jge
inc
mov
jecxz
xchg
stos
mov
rcr
xchg
or
mov
sbb
mov
lret
pop
sub
or
push
inc
xchg
cld
movsl
push
js
bnd
sub
in
sbb
and
call
fmuls
stc
popa
cmpsb
popa
mov
into
sbb
cmp
pop
inc
movsl
cs
mov
addr16
bound
xchg
add
test
rcrl
sbb
cld
cwtl
ja
jns
stos
add
cs
inc
cmp
jns
cmp
pandn
mov
insb
push
imulb
sti
pusha
mov
or
add
ret
movsl
cs
lret
inc
jo
dec
arpl
xor
movsl
jmp
roll
jge
inc
xorb
aad
adc
mov
popa
add
les
dec
xlat
das
mov
dec
nop
fildll
xlat
dec
cmpsb
subl
loop
ret
xchg
and
mov
lds
jmp
cmp
pop
lret
shl
mov
jecxz
add
cld
fstps
fstpt
fwait
aad
sub
test
pop
leave
and
inc
shlb
push
jp
fadds
lcall
call
gs
cwtl
pop
push
ret
sub
sbb
data16
les
das
cmc
push
push
sub
mov
orl
inc
xchg
sub
ss
jmp
lret
mov
in
xor
add
das
mov
les
push
push
pop
cmc
in
pusha
popf
in
or
xchg
dec
xor
int
pop
add
lcall
pop
out
jmp
pusha
sub
fldenv
mov
cs
jge
fstpl
jnp
cli
popf
pop
jno
xchg
inc
call
enter
xor
jmp
mov
add
addl
jmp
stc
jecxz
fcomip
xor
sti
sbb
sbb
xor
cltd
and
xor
sub
pop
pop
pop
mov
mov
decl
sub
in
mov
sbbl
jl
mov
outsb
movsl
pop
jns
les
jp
pop
add
mov
inc
cmpxchg
clc
xlat
leavew
xor
add
popf
dec
inc
mov
mov
cmp
stc
push
or
hlt
stc
mov
dec
movsb
fdivrl
repnz
loope
bound
sbb
push
jae
fldcw
jo
out
ss
xor
call
ja
xchg
xor
push
enter
sbb
pop
push
cmp
aam
bound
pop
ds
and
adc
inc
imul
add
fwait
hlt
std
inc
dec
insb
addr16
dec
imul
pushf
ja
sbb
cmp
scas
inc
cmpsl
stos
mov
movl
pop
in
sub
popf
daa
arpl
clc
repz
jbe
mov
arpl
arpl
push
in
in
movsl
sub
dec
inc
pop
pop
sbb
repz
js
mov
stos
xchg
and
clc
mov
mov
mov
inc
fs
rol
ret
aas
mov
call
aam
repnz
rcrb
and
mov
push
cltd
aad
dec
push
or
int
int
pop
imul
dec
mov
out
popf
lock
hlt
scas
sbb
jns
imul
pop
pop
dec
mov
push
push
fstps
push
cmpl
fistpl
inc
xchg
jo
jge
mov
pop
mov
jbe
clc
test
inc
repz
or
loope
jle
nop
scas
sub
cs
jae
lods
mov
xor
sbb
xchg
hlt
les
push
stos
cmpsb
dec
jno
jne
sbb
sbb
sbb
jl
lahf
lret
xor
aas
mov
inc
aas
test
adc
shlb
add
movsl
add
ds
enter
test
mov
leave
sub
jno
out
dec
bound
divb
and
arpl
andl
adc
add
mov
sarb
pop
dec
xchg
or
jg
ret
ret
adc
push
add
outsl
mov
jno
call
arpl
or
jl
mov
mov
lret
cmp
fwait
or
xchg
mov
lret
jbe,pn
pushf
mov
dec
xor
sahf
lods
cmc
insb
aas
mov
or
or
or
inc
or
sbb
ljmp
push
push
pop
mov
stc
and
mov
ror
sub
adc
cwtl
add
mov
fbld
imull
jae
sub
mov
mov
xchg
aad
inc
or
dec
inc
sar
adc
add
lret
aaa
xchg
into
inc
addr16
test
jnp
pop
xor
xchg
jbe
or
pop
out
fcmove
mov
cmp
std
add
cmp
xor
inc
adc
push
ja
out
jns
filds
shll
stos
pop
aam
add
add
or
out
adc
stos
rcrb
inc
add
pop
push
pop
lock
and
out
jne
outsb
jne
and
adc
out
add
push
out
and
sti
dec
rolb
jge
lock
cmp
sbb
add
cwtl
int3
mov
fwait
test
int
fimull
mov
pop
push
pop
aam
push
pop
call
mov
sbb
mov
in
dec
mov
repnz
insb
mov
ficompl
jmp
xor
outsl
ss
cs
push
jge
faddl
mov
xchg
imul
jno
xchg
loope
inc
push
push
sahf
popf
ret
mov
sbb
mov
hlt
and
nop
insb
lods
xor
xor
sub
sti
mov
and
mov
and
pop
xchg
xchg
and
gs
xchg
or
add
out
add
movsb
out
or
mov
cmp
cli
jno
pop
mov
or
int
in
adc
jb
xchg
mov
cmp
aas
out
xchg
or
bound
fcomi
cmpl
cmp
insl
gs
inc
sub
xchg
add
xchg
in
inc
xchg
sub
xchg
pop
jo
shlb
push
cmp
xlat
add
sbb
add
push
test
fsubrl
mov
push
iret
cld
push
rcll
jns
inc
mov
or
in
inc
mov
lds
mov
rcll
adc
push
addb
jmp
jnp
mov
divl
push
cld
push
mov
pop
jg
mov
mov
lods
push
shl
lcall
cs
and
sarb
push
popf
lret
lock
pop
loopne
in
inc
int3
add
adc
sbb
repz
mov
mov
mov
sbb
and
mul
enter
sbb
scas
push
aas
push
ret
push
add
sbb
pop
fldenv
into
stc
push
iret
jns
or
xchg
cmpsb
icebp
dec
or
addr16
je
sbb
mov
andb
stos
add
push
sarb
add
in
and
mov
scas
fdiv
mov
lea
lds
arpl
std
adc
shrb
lret
cmpl
jge
cmp
xor
pop
js
add
dec
hlt
sub
addr16
pop
stos
fisttpl
pop
iret
dec
jno
sub
sbb
std
mov
sbb
dec
int
mov
aas
cmp
popa
aas
leave
aam
sbb
enter
xchg
sbb
testl
test
dec
ret
inc
sub
dec
rcl
jmp
inc
pop
aas
xor
enter
ja
popa
jb
xchg
pop
test
mov
sbb
rorb
or
test
test
in
jl
lahf
lock
and
imul
in
fst
stos
jmp
cmp
inc
stos
aad
hlt
lahf
outsb
xor
xchg
mov
sbbb
fistl
rcr
and
ss
push
lods
ljmp
cmp
mov
bound
cmp
pusha
push
mov
push
sarl
mov
mov
pop
movsb
add
mov
rcll
fsubrs
push
mov
add
imul
sub
ja
outsl
pop
adc
fdivs
aad
int
call
pop
sub
or
data16
inc
and
stos
loopne
add
jmp
scas
shl
hlt
fcoml
cmpsl
imul
loop
out
pop
mov
xorl
xor
jbe
gs
mov
sub
pop
popf
add
cmp
and
cmp
push
je
inc
es
pop
hlt
inc
leave
fsubs
ljmp
push
cmp
daa
sbb
adc
lret
aaa
lret
lds
adc
dec
mov
xchg
pop
ret
cwtl
cmpsl
dec
and
push
sub
imul
adc
dec
fs
ret
and
test
add
add
fwait
and
push
dec
mov
add
xchg
nop
scas
adc
mov
out
icebp
sbbl
daa
je
call
adc
mov
data16
movb
aas
jbe
jmp
cmp
pushf
dec
and
sbb
push
mov
cwtl
push
mov
leave
test
hlt
subl
hlt
inc
or
adcl
xchg
sub
xchg
sbb
rclb
mov
push
or
adc
push
fstpt
mov
mov
mov
test
call
jo
scas
inc
xchg
cmpsb
jg
and
out
push
cld
repz
je
mov
push
movsb
lods
subb
push
add
xchg
dec
sarb
xchg
call
sbb
cmpsb
clc
aaa
xchg
les
push
sub
push
sahf
call
sti
or
pop
dec
test
jge
push
inc
fisubrl
xor
jo
xlat
popa
mov
sbb
add
mov
mov
arpl
mov
push
jno
and
xchg
adcl
call
daa
inc
xlat
pusha
dec
sbb
arpl
jbe
xor
call
push
inc
in
adc
fsubrl
sbb
xchg
dec
xor
cltd
leave
call
hlt
pavgw
mov
imulb
popa
cmpsl
push
scas
lahf
imul
in
fcoml
and
mov
xchg
loopne
lods
mov
insl
lahf
std
mov
dec
sub
xor
sbbl
cmp
ret
rcr
xor
hlt
add
dec
push
fwait
bound
ja
adc
or
sub
adc
mov
dec
fwait
pushf
fcmovnu
movsl
push
es
inc
mov
jg
int3
xchg
gs
cmc
lcall
call
in
cmp
xchg
xchg
push
lahf
mov
mov
jle
addl
pop
cld
sub
fisubs
or
jns
aaa
cmp
pusha
mov
dec
incl
jecxz
dec
and
xchg
adc
lcall
jns
lds
inc
add
rcrb
test
inc
rcr
dec
push
imul
cmp
pop
in
sbb
dec
scas
lcall
xchg
push
cmp
cltd
mov
xchg
icebp
sahf
mov
sahf
adc
adc
xor
lock
bound
lcall
int
in
dec
jno
xor
insl
adc
mulb
fnsave
xchg
in
push
xchg
pop
jl
push
out
lret
in
cmp
loope
and
in
addl
test
test
sbb
inc
sbb
lret
idivl
lcall
dec
out
mov
mov
or
pushf
je
rcrb
push
push
inc
cli
push
aas
movsl
fstpt
xor
cmpsb
out
out
pop
stc
and
leave
cmp
int
push
loope
adc
pop
sub
out
mov
ds
cmp
adc
mov
jl
loopne
add
jmp
pop
lods
je
lret
mov
movsl
js
sti
cmp
rcrl
test
data16
push
addl
sub
daa
and
and
pop
int
sbb
shrl
push
adc
int
fwait
add
js
pop
xor
push
xor
mov
mov
data16
mov
inc
rcll
dec
fs
das
cmp
dec
adc
lcall
add
jmp
nop
nop
mov
pop
xchg
add
das
icebp
add
leave
pop
push
fs
jmp
cmpsb
bound
ds
ljmp
fnsave
jp
xchg
fistps
popa
subl
add
shl
dec
mov
jb
jnp
pushf
in
and
ret
scas
je
addr16
ret
in
outsb
fcomps
imul
lods
xchg
jecxz
out
dec
push
jb
pop
ficoml
mov
cmpsl
xor
pushf
mov
test
xchg
inc
out
sbb
jle
bound
jle
sbb
movb
std
scas
mov
push
outsb
or
mov
mov
xor
stos
out
jne
or
ds
pop
lods
xchg
inc
mov
inc
add
mov
or
mov
mov
into
fucomip
mov
fwait
lret
cmp
and
sahf
in
out
push
loopne
cmp
or
sbb
add
lds
push
test
sbb
je
ljmp
adc
or
hlt
jnp
in
ljmp
sbb
pop
out
gs
test
fldt
or
scas
fcomip
push
xor
iret
pop
dec
inc
cmp
xor
dec
mov
push
sub
fisttpl
inc
jo
pushf
push
lea
push
mov
dec
dec
filds
testb
lahf
pop
pop
mov
cwtl
add
fyl2x
cmp
push
jae
daa
popf
jecxz
cmp
scas
jge
cmp
jp
repz
xor
push
push
in
xor
fprem
sti
insl
outsb
mov
push
dec
test
push
movsl
jl
dec
hlt
sbb
cmp
mov
popf
add
cmp
sahf
rorb
sub
hlt
jnp
dec
mov
xor
lods
ror
push
lea
leave
mov
in
or
dec
and
rclb
test
movsl
mov
in
shr
xchg
add
pop
test
or
cmpsl
scas
pushf
xchg
int
test
repnz
test
add
aaa
pop
daa
xorl
cmp
push
scas
lea
mov
faddl
std
fdivl
insl
mov
or
push
adc
aaa
fstpl
outsl
cld
das
and
add
imul
push
stos
stos
imul
fmuls
and
sbb
popf
mov
cwtl
xchg
xor
mov
subb
cmc
gs
andl
and
pop
aaa
lret
pop
sti
mov
mov
cmp
xchg
aas
pusha
mov
adc
sbb
daa
push
js
cmpsb
shll
or
dec
ret
sti
push
sbb
jb
mov
adc
rcrb
mov
test
jge
or
lods
mov
push
dec
outsl
lock
adc
dec
push
pop
adc
js
dec
roll
inc
mov
mov
adc
sarl
int3
adc
xor
int
popf
inc
mov
leave
lock
sarb
ret
inc
mov
aaa
dec
test
push
loop
add
subl
sbbb
testl
insb
jo
test
ss
data16
lock
mov
aaa
cmpsb
push
in
mov
jo
fs
jp
add
cltd
sub
sub
or
fnstcw
dec
jge
negb
out
out
imulb
shll
add
outsl
fiaddl
and
in
pop
aaa
xchg
push
daa
xorb
rcll
cmpsl
sub
imul
test
jp
testw
and
rol
jae
sub
mov
icebp
dec
lea
inc
lcall
je
sub
sti
data16
into
xchg
orb
and
jl
sub
and
jecxz
jmp
fbld
int3
popf
popa
sbb
jmp
xor
sub
fists
adc
test
loop
fdiv
cli
add
fwait
jle
cmp
xlat
dec
sub
push
in
mov
cld
rcrb
pop
mov
negb
xchg
test
mov
adc
sub
mov
xchg
mov
sti
mov
or
xor
pop
mov
test
fcmovbe
jns
es
mov
in
test
les
lds
jo
fstpt
sbb
xor
arpl
sbb
push
cmp
and
cmpb
pop
push
rclb
mov
add
ret
imul
push
inc
inc
sbb
es
adc
insl
add
and
sahf
or
add
test
or
mov
test
fnstcw
stos
out
dec
stos
repnz
push
jecxz
cld
aad
push
xchg
cmp
orb
loope
insb
pop
popw
mov
dec
mov
push
pop
aam
movsb
cmpsb
movb
ss
out
repz
call
shll
or
pop
xchg
mov
or
add
rcrb
mov
dec
and
push
aad
rclb
lods
and
lret
mov
adc
lcall
popf
xor
rolb
dec
and
push
addr16
mov
and
sub
xchg
xchg
fbld
divl
xor
std
dec
es
jb
loopne
loope
aaa
mov
push
ljmp
xor
imul
xchg
push
pop
mov
insl
sbb
mov
fists
fsubs
imul
movsl
dec
aas
pop
aaa
repz
inc
stc
inc
adc
or
xchg
or
or
sub
stos
dec
sti
pop
fisttpl
cld
loope
ffreep
data16
int3
and
scas
mov
in
pushl
arpl
clc
lods
mov
loope
mov
pop
rorl
cwtl
or
stos
arpl
in
cmpsl
cmp
popf
fs
push
jp
lahf
iret
scas
stos
push
or
cli
repz
cmpb
dec
fistl
test
sub
repz
fsubrs
jbe
adc
xor
xor
xchg
mov
sahf
test
inc
loopne,pn
sub
cmp
fsubrs
lahf
or
imul
jge
cmp
adc
pop
or
repnz
xchg
loop
movsb
xor
call
or
addl
ds
sub
jns
outsl
movsl
test
xchg
lds
lock
mov
or
inc
push
or
nop
mov
mov
imul
push
push
test
xchg
and
mov
sub
dec
aam
in
mov
fisttpl
pop
loopne
jae
inc
mov
movb
fcomps
mov
loopne
data16
add
pop
mov
xor
push
mov
call
mov
sbb
jg
sbb
or
xchg
add
shr
stos
mull
daa
xchg
jb
lcall
stos
aas
leave
lahf
ficoms
mov
lcall
or
xchg
or
pushf
outsl
pop
jmp
imul
ljmp
pushf
adc
outsl
lret
push
mov
int
pusha
int3
cli
cmp
mov
shl
mov
int3
sbbl
or
stos
loope
add
rcrl
or
cmpsl
js
out
gs
sub
lds
dec
xor
out
loopne
or
pop
aas
add
ret
mov
repnz
push
popa
and
ror
scas
nop
mov
insl
cmp
xchg
enter
test
xlat
ja
xchg
mov
std
and
insb
sub
mov
cwtl
inc
mov
out
repnz
ds
mov
cmc
fwait
sar
test
mov
daa
std
xor
ficoms
movsb
push
jmp
cmp
sub
loop
pop
clc
stos
add
dec
sub
gs
sbb
xchg
scas
sub
ss
rclb
out
pop
lret
or
push
push
adc
adc
js
xlat
pusha
mov
stos
dec
adc
dec
push
xchg
jmp
push
cld
pop
push
cmp
cmp
inc
popf
add
daa
or
mov
popf
or
xor
sbb
mov
push
lds
sbb
out
push
movsl
test
inc
loopne
mov
inc
fldenv
lds
scas
imul
mov
xor
jmp
mov
sti
aad
push
xchg
push
pop
jl
subb
cltd
clc
dec
loopne
mov
xor
out
das
cmpsb
stos
out
rcrb
or
and
xor
jecxz
add
divl
int
inc
inc
sbb
pop
sbb
mov
mov
mov
xor
pop
add
mov
insl
leave
es
aas
popa
andb
xor
pop
mov
leave
mov
imul
dec
scas
cli
jne
int
jns
mov
inc
sub
out
and
sub
pop
mov
push
cs
pop
or
fldenv
jbe
sarl
inc
rcrl
mov
cmp
andb
jecxz
int
cwtl
adc
inc
test
aas
pop
adc
bound
out
add
ljmp
in
or
sbb
sbb
add
aad
mov
sub
pop
fwait
lods
hlt
int3
xchg
jge
loopne
adc
not
mov
insl
mov
xor
add
int
out
add
and
mov
cmp
xlat
xlat
cmpsb
add
push
add
dec
xchg
xor
sbb
test
mov
push
pop
fimull
out
mov
mov
or
add
lock
adc
push
mov
mov
mov
xchg
es
pop
and
jbe
xchg
push
mov
es
cld
jae
pop
std
inc
push
jmp
outsl
sub
call
ds
adc
nop
int
inc
push
stos
clc
cmpsb
cli
or
push
je
lret
mov
or
int
lret
imul
add
call
lahf
scas
ljmp
mov
mov
and
shr
xor
pusha
pop
or
repz
sbb
ficoms
int3
jg
adc
mov
inc
add
xor
xchg
sbb
jno
pop
arpl
movsb
insl
fisttpl
or
lahf
and
cmpsb
movsb
pop
je
js
jg
mov
cmpl
and
mov
push
push
adc
imul
mov
mov
sub
jg
shl
sub
cltd
aas
lcall
push
cmpsl
add
push
jmp
mov
movsl
cmp
flds
jno
fstl
ljmp
stos
dec
notb
cmp
mov
jno
sub
and
scas
std
enter
lods
pop
notb
shl
jne
mov
cmp
push
out
inc
pop
cltd
stos
ds
jg
mov
orl
xor
fisubl
push
rorl
and
xchg
mov
aaa
stos
adc
and
inc
lret
ds
inc
sub
dec
mov
sbb
sub
in
fidivs
js
pop
sbb
fnsave
or
shr
dec
inc
rep
inc
push
push
stc
jmp
out
sbb
aaa
addb
pop
lds
js
cld
addl
aas
shrl
jge
pushl
cmp
pop
test
xchg
out
sbb
mov
xor
in
jns
imul
bnd
sub
pop
and
push
adc
js
mov
test
data16
int3
push
sbb
push
fistl
out
lods
lea
sarb
nop
sti
dec
testl
jl
sbb
mov
mov
dec
xlat
jle
mov
xor
jno
and
xchg
and
jg
cmpsb
sub
sti
out
gs
imul
pop
and
jno
scas
jecxz
and
pushf
fsubl
cmp
xor
adc
jo
jp
push
leave
in
xchg
mov
out
inc
pop
push
sub
subb
shl
call
jnp
add
ljmp
aam
mov
push
iret
jbe
fstl
pop
push
sbb
leave
xchg
cmp
out
inc
shll
in
cmp
lret
stos
ljmp
pop
imul
divb
and
jae
loopne
sbb
rcl
sub
mov
in
pop
cmc
and
outsb
cld
lds
aaa
xchg
or
xchg
pusha
imul
push
lcall
jbe
lock
leave
sahf
test
mov
leave
leave
jp
in
push
ljmp
es
cmp
dec
adcl
int3
xor
ljmp
jo
add
out
cmp
sbb
sub
les
into
mov
xchg
or
pushf
mov
arpl
jge
sub
pop
lahf
jnp
outsl
cmp
cmc
or
jg
adc
test
add
jno
into
and
sub
sti
or
fwait
dec
ljmp
aaa
repnz
jns
stos
dec
stc
daa
and
mov
and
lret
pop
xlat
sbb
das
sbbl
popa
dec
sbb
mov
jo
outsl
push
mov
inc
push
fnstenv
push
xchg
idivl
into
shr
xlat
icebp
ret
inc
ds
repnz
or
int3
andl
movsl
push
leave
sbbb
popf
jg
jmp
push
cmc
nop
xlat
stc
xor
or
jns
aaa
sti
mov
push
and
inc
sub
pushf
popa
adc
lock
aas
inc
mov
in
jns,pt
or
loope
repz
cmp
jne
mov
fldenv
adc
mov
xchg
pop
fadds
loop
popa
cmp
push
sub
aas
inc
push
stos
dec
aas
xchg
xor
lods
popa
lds
fs
dec
std
adc
mov
jmp
clc
jnp
lret
sub
dec
in
es
jg
out
fdivrl
insl
mov
dec
je
cmpsl
xchg
fucomip
fmull
push
pop
and
mov
mov
mov
jb
nop
lcallw
inc
mov
and
scas
dec
movsb
inc
dec
cli
lahf
jle
enter
fdivrs
cmpb
dec
mov
xchg
ljmp
push
mov
mov
loop
sub
add
ret
decb
cmp
add
cmp
jno
mov
test
divl
inc
jp
repz
pusha
lods
xor
inc
scas
test
xchg
sbb
adc
and
jmp
and
fcoms
sti
stos
sbb
add
inc
mov
adc
test
les
mov
sbb
adc
test
and
push
int
aas
int3
sub
inc
or
xchg
lods
scas
out
ss
into
mov
pop
sub
push
mov
pop
cmp
dec
cmp
pop
mov
into
cli
scas
cmpsb
popf
sub
xlat
sbb
pop
lods
mov
aaa
stos
dec
sub
rol
jmp
repz
test
pop
and
inc
cmp
int
pop
in
out
pop
insb
or
xor
adc
sahf
das
imul
sub
pop
imull
xchg
push
lods
pop
inc
ds
pushf
rolb
sbb
sbb
sar
in
stos
leave
push
in
cmp
mov
iret
cmc
popa
dec
sbb
or
inc
dec
ret
pop
mov
jno
mov
lods
sbb
pop
push
push
outsb
popa
mov
lods
popf
outsb
sbb
cltd
ds
inc
cmp
aam
xor
lret
mov
adc
clc
ret
jge
sbb
pop
xor
sub
subl
and
gs
jo
ds
loopne
inc
cmp
insb
sbb
sub
ljmp
aam
movsl
rolb
jge
add
cmpsl
popf
jbe
cmp
mov
jno
imul
fcoml
inc
mov
std
ficompl
cld
pop
ljmp
add
cld
clc
ds
test
jb
je
jg
icebp
inc
lahf
and
jle
in
jecxz
arpl
mov
addb
xchg
loopne
or
push
lds
xchg
das
mov
cmpsl
inc
lret
cmp
inc
bound
xor
daa
scas
pop
es
sub
push
fidivrs
iret
outsl
push
push
inc
rcrb
fimuls
out
mulb
xchg
hlt
xchg
inc
cmp
sbb
adc
pop
repnz
push
add
pop
loopne
cli
fldpi
std
mov
push
movsl
dec
sub
pushf
mov
sbb
das
pop
mov
cmp
jle
or
add
push
pop
test
jg
sub
outsb
call
sub
pop
mov
and
mov
jle
mov
out
push
arpl
ja
loop
mov
add
adc
jnp
mov
test
inc
hlt
xor
dec
push
pop
jge
lret
pop
mov
stos
test
ljmp
cmpsl
push
mov
dec
stos
xchg
adc
xor
add
pop
xor
sub
sahf
add
lcall
jns
sbb
ljmp
out
dec
add
xor
jb
dec
mov
xchg
mov
push
lods
call
jbe
jle
push
nop
dec
outsb
inc
fldt
cmpsl
jae
bound
sahf
fld
lret
imul
dec
push
xchg
fldt
loop
mov
out
or
insb
add
test
hlt
pop
ss
hlt
sub
inc
scas
in
iret
xor
sahf
icebp
dec
lret
fisubrl
pop
hlt
lret
lods
int
lret
in
fidivl
cmp
addr16
hlt
jg
mov
cmp
lret
jecxz
jne
mov
cmp
imul
mov
dec
fimull
sbb
add
fnsave
in
test
inc
cmp
adc
ss
gs
sbbb
or
sbb
xor
movsl
cs
jle
sub
jbe
jmp
push
sub
jle
std
sbb
pop
xor
xchg
inc
xchg
add
ret
cmp
pop
adc
lret
sub
inc
mov
or
pop
fldcw
cld
fcmovnu
arpl
sub
jge
or
das
xchg
clc
negl
rclb
xchg
ret
or
aam
ret
cmp
jns
es
jmp
mov
xlat
and
xor
in
push
sarb
shlb
xor
mov
icebp
xchg
jnp
jnp
cs
arpl
mov
push
dec
mov
push
mov
out
push
mov
sub
mov
mov
xor
and
hlt
cld
add
push
push
inc
sbb
scas
mov
mov
dec
dec
adc
repz
dec
cmpsb
sbb
and
jecxz
push
add
sti
roll
xchg
data16
sbb
dec
xchg
or
mov
in
lcall
scas
sub
int3
jnp
push
dec
jae
jnp
dec
and
or
test
mov
mov
loopne
in
jle
or
xchg
sub
scas
les
cmp
pcmpgtw
push
fs
sub
jbe
into
inc
adc
or
in
pop
push
sbb
in
mov
inc
imul
dec
faddl
test
gs
cmp
jo
jmp
fwait
pop
orb
rcr
pop
lcall
push
pushf
out
fmuls
inc
insl
and
jge
outsl
add
in
jno
insb
pop
gs
pop
xlat
xor
test
cmpsl
in
xor
xorl
jp
clc
flds
lahf
fcompl
cli
adc
dec
mov
xor
bound
and
jmp
loop
movd
mov
out
shlb
xlat
sti
inc
ret
or
mov
cmpsl
inc
lods
enter
jb
push
sub
dec
push
aas
push
ret
jg
mov
inc
xchg
ds
and
loope
mov
out
mov
fidivs
lret
xchg
jnp
fidivrs
imul
adc
and
mov
neg
jecxz
cmp
flds
stc
or
call
pop
decl
das
xchg
jp
popf
cmp
push
mov
push
es
cmp
adc
jle
push
and
xor
jl
fwait
pop
dec
pop
out
pusha
mov
or
sub
sub
adc
stos
inc
inc
pop
pop
xchg
iret
nop
xor
movsl
adc
pop
adc
hlt
test
sub
sbb
add
es
pop
gs
out
sbb
push
adc
push
add
mov
sub
pop
ja
mov
jne
test
pop
xchg
mov
mov
das
xchg
clc
push
pop
inc
in
popf
pop
outsl
or
xchg
lock
lea
ficoml
add
repz
xor
aam
xlat
push
pop
mov
push
cmp
adc
dec
mov
in
imul
ss
pop
xor
je
xchg
lods
lea
jle
xor
popa
or
xor
adc
enter
push
stos
repnz
mov
shll
jmp
aam
jb
adc
ret
insl
pusha
cmp
mov
clc
fistpl
xor
pop
pop
sbb
mov
loop
mov
mov
cmp
xchg
inc
incb
xchg
bound
jnp
mov
mov
into
push
inc
lds
je
and
dec
test
cmp
js
into
cmc
sarb
loop
lahf
mov
out
test
ret
test
inc
call
sub
adc
and
roll
mov
mov
dec
das
fstpt
cmp
xchg
imul
jmp
rolb
mov
push
idiv
push
in
es
in
jnp
lock
xchg
xor
mov
xor
jmp
out
insb
lret
sbb
or
movsb
loopne
mov
loope
int
movsb
adc
andb
mov
or
iret
jg
fldcw
jecxz
cmp
xchg
pop
loop
imul
filds
fcmovnb
sti
roll
cmpsl
or
sub
mov
arpl
pushf
fwait
in
xor
jge
push
jp
mov
mov
rcrb
mov
cmp
and
lret
xor
into
add
fmul
ljmp
fisubs
int3
push
mov
daa
outsb
aad
jp
and
lahf
scas
mov
inc
adc
pushf
ss
or
xchg
adc
sub
into
arpl
stc
jb
sar
movsb
lret
arpl
mov
movsb
push
pop
and
movsl
in
xor
pop
push
mov
test
sbb
pop
xchg
leave
cmp
push
lret
loopne
mov
inc
into
add
push
xchg
inc
push
or
adc
pop
out
push
sub
xchg
push
fists
daa
roll
jmp
mov
push
inc
jbe
cmpsb
nop
pop
adc
sbb
dec
stc
jecxz
out
and
adc
cs
push
adc
xchg
ljmp
in
sub
fcomi
imul
dec
imul
je
sti
jns
push
pop
or
mov
loop
daa
ja
lret
ljmp
decb
es
pusha
add
xor
aas
jp
cs
aas
insb
jns
insb
sub
mov
arpl
cli
and
mov
sub
std
cmp
std
into
or
sbb
rorb
scas
lret
and
test
inc
add
int3
adc
and
cli
dec
xor
xchg
jnp
mov
nop
fsubrs
jns
cmp
sbb
sahf
stc
xor
aad
das
es
lahf
push
lcall
inc
test
iret
cltd
popa
shrl
gs
dec
and
lods
jno
das
imul
out
mov
mov
lods
fiaddl
xchg
xor
xchg
sub
test
jno
movsb
mulb
cmpsb
xchg
movsb
and
fmulp
ds
test
jne
push
pop
adc
pop
out
arpl
push
loope
xchg
outsb
in
mov
nop
mov
lcall
pop
out
lods
xchg
incl
sbb
push
add
imul
popf
sbb
inc
mov
add
jle
jmp
and
scas
lahf
fcoms
add
sbb
sub
in
mov
mov
sub
cmpb
xchg
xor
ljmp
dec
jae
test
push
push
sbb
cmpsb
cmp
and
out
std
xchg
cmpsb
icebp
mov
or
test
fcompl
push
xchg
push
cltd
xor
sub
pop
addr16
stc
mov
jo
cmp
mov
and
push
lret
mov
mov
dec
push
rolb
add
aad
adc
push
add
imul
inc
adc
jne
mov
test
lret
mov
push
test
xor
es
mov
cltd
pop
cli
jae
dec
push
and
cmp
jle
pop
movsb
out
mov
sub
ret
scas
sub
mov
andl
push
cmp
pop
iret
rcr
aam
mov
cmp
cmpsb
mov
and
xor
xchg
or
mov
gs
pop
mov
insb
cltd
popa
and
xchg
mov
jo
insb
or
xlat
push
dec
lock
xchg
test
clc
add
jbe
sub
shrl
push
scas
or
push
and
sbb
stos
push
mov
call
orl
xor
push
mov
or
jmp
mov
sbb
pop
push
test
in
shlb
mov
jp
int3
jg
jecxz
fdivp
cmp
cmp
sbb
push
outsl
daa
xchg
inc
inc
ss
push
bound
mov
test
lods
or
sarb
pop
mov
inc
jb
or
sbb
add
imul
mov
mov
dec
add
loop
jmp
jno
cmpsb
cmpl
hlt
sub
cli
or
sub
and
out
pushf
xchg
je
cmp
fidivs
jle
jne
cmpl
cmp
test
or
inc
inc
fstps
das
fbstp
sbb
or
in
xor
roll
insl
sub
add
ret
arpl
arpl
lock
cs
push
xorl
xor
hlt
or
add
inc
mov
jno
into
sub
mull
xlat
lock
pop
jns
cmp
scas
int3
mov
cwtl
fdivl
out
pop
gs
push
jmp
pop
enter
sub
mov
fists
cwtl
std
test
lahf
cmp
shrb
inc
add
add
lods
scas
pop
stos
sahf
jbe
fdivrs
icebp
out
fimuls
rcrl
jne
sbb
jns
jnp
sbb
enter
push
outsl
push
ficoms
mov
push
adc
in
push
inc
mov
mov
mov
and
xchg
icebp
mov
popf
pusha
adc
cmp
dec
sbb
pop
jnp
jae
rcl
iret
pop
xor
xchg
idivb
adc
sti
cmpsl
inc
outsb
divl
mov
js
xlat
ljmp
sbb
fs
js
mov
push
jg,pt
sub
jbe
push
mov
push
rorl
rclb
xor
ja
add
fisubrl
dec
aad
pop
adc
pop
xchg
or
inc
cmc
das
adc
inc
cmp
jg
cmp
add
xchg
mov
scas
andb
push
inc
das
pop
inc
jge
jge
pop
dec
in
cmc
adc
adc
sub
out
pop
ss
out
add
pop
pushf
into
in
sub
movsb
xchg
xchg
xor
nop
dec
in
jne
loop
cmpsb
jmp
cmpsb
in
adc
push
mov
add
lods
test
ljmp
and
xchg
add
xchg
mov
cbtw
push
lods
sub
dec
dec
mull
out
rcr
jo
popf
ret
hlt
test
cwtl
cmpsb
xchg
sbb
cmpsb
mov
cmc
and
dec
push
add
xor
test
sub
inc
lods
pop
mov
cmc
pop
mov
jne
fsub
ljmp
xlat
jno
sub
inc
xor
fldt
push
and
adc
cmp
inc
adcb
rcl
push
out
jl
jno
push
pop
jmp
xchg
inc
in
jno
jge
and
pop
loop
test
test
sti
xchg
cmp
fldenv
jno
xor
out
pushf
sbb
or
jge
push
es
pushf
pop
dec
pop
int
into
and
test
sub
cli
ss
std
mov
in
xor
out
int3
call
ds
loope
dec
iret
idivb
sbb
dec
push
sub
adc
pop
js
mov
xor
jne
mov
leave
push
xor
cmp
mov
jae
cmp
rcr
pop
pop
mov
sbbb
sub
je
and
mov
ss
ror
repz
stos
mov
mov
cmp
test
shrl
lret
push
pop
add
xor
and
out
pusha
jne
pusha
jmp
xchg
mov
xchg
jbe
stos
mov
out
mov
jo
aas
mov
loopne
outsb
fcoml
pop
in
jle
pop
jns
popf
sub
out
jo
push
pop
cwtl
jo
mov
push
outsl
fwait
jg
sub
sub
js
mov
enter
cmp
pop
jne
loopne
pop
jns
ficompl
mov
dec
cld
stos
mov
xchg
dec
js
inc
push
loop
lock
arpl
push
mov
jl
sbb
and
jle
xor
fcoms
mov
popf
pop
xchg
outsl
push
shrl
cmp
out
ret
inc
jl
lods
mov
inc
ds
cmp
adc
jnp
mov
mov
mov
mov
sub
idivl
dec
mov
outsb
dec
pop
ja
xlat
scas
addl
mov
xor
icebp
pushf
fs
cmp
inc
mov
jmp
sub
xchg
jb
shl
xchg
pop
les
jbe
shlb
sbbl
test
xor
dec
pusha
sti
bound
lods
je
mov
xchg
in
dec
jbe
sub
repnz
daa
jp
mov
lea
stc
jnp
mov
int
mov
or
xor
lods
ss
cmp
xchg
jnp
aas
je
mov
xchg
xchg
decl
icebp
cmp
dec
inc
xchg
ficoml
data16
pop
int
xor
dec
shlb
mov
stos
std
jne
push
push
add
cmp
push
outsb
cmpsb
cmp
mov
sub
outsb
push
cmp
sar
xchg
arpl
cld
pop
fstl
mov
add
popf
dec
xor
xchg
arpl
xchg
loope
inc
repz
xchg
mov
add
icebp
ljmp
bound
mov
sub
aaa
push
add
ss
pop
pusha
iret
inc
or
mov
sti
or
idivb
insb
imul
ss
insl
repnz
xor
ja
inc
inc
iret
sbb
outsb
subl
mov
outsl
push
jg
mov
add
fcompl
test
adc
dec
das
sbbb
sbb
aad
int
xchg
inc
pop
cmp
ds
mov
lahf
cwtl
xor
push
cs
cmp
je
and
sub
and
in
negl
sbb
shl
push
ss
xor
dec
call
xor
popf
roll
sbb
and
insl
ror
pop
push
jo
in
movsb
sbb
push
push
fstps
push
jns
pusha
push
scas
test
adc
xor
and
push
jns
jecxz
sbb
xchg
cmp
fwait
or
cs
inc
add
xchg
push
hlt
lea
outsl
and
xor
pop
pmaxub
inc
mov
or
in
cmp
std
scas
xor
js
lds
xchg
and
es
rcr
xchg
cltd
pop
mov
add
jg
jmp
ljmp
iret
add
daa
les
or
mov
dec
mov
iret
fsubrp
out
sbb
clc
push
sbbl
lods
sbb
icebp
sbb
push
sbb
jl
scas
push
add
imul
xchg
adc
stc
and
lods
add
das
icebp
imul
xor
and
mov
arpl
push
rcrb
fistpll
push
mov
stos
xlat
outsl
push
mov
mov
pop
adc
mov
dec
or
cmp
inc
mov
dec
jg
addr16
test
aad
xchg
ret
andl
std
or
cmpsb
mov
adc
dec
addl
push
mov
cmp
stc
add
in
mov
pop
add
aam
ja
movsb
rclb
push
xchg
lods
adc
push
xchg
jae
xor
das
sbb
or
pop
fwait
xchg
mov
xchg
stos
sub
or
insb
adc
js
pop
insl
inc
jb
adc
lods
or
mov
es
xchg
popf
mov
mov
cmpsb
lds
enter
xor
xor
inc
jge
push
dec
cmpsb
sbb
notl
mov
mov
dec
incl
pusha
cmp
and
dec
xor
mov
stos
xchg
pop
dec
mov
mov
sarl
into
jl,pt
pop
mov
mov
jmp
xor
dec
shlb
jl
or
cmpsb
lret
mov
test
lcall
or
mov
xchg
dec
xor
hlt
adc
es
mov
outsb
mov
xchg
loopne
ds
lods
cltd
sub
lcall
jl
arpl
and
idiv
or
add
daa
mov
ret
lods
adc
bound
popa
sarb
pop
push
mov
dec
das
push
sub
neg
sub
xor
sub
sbb
mov
clc
out
cmp
cmc
fxch
insl
jge
stos
lock
test
and
xchg
aam
lahf
or
mov
mov
inc
sub
mov
test
cmp
bound
imul
mov
rcrl
stos
cmp
pop
push
dec
sbb
cld
pop
fwait
sub
and
sub
test
ret
push
pop
fnstcw
push
sbb
repz
jnp
imul
mov
xchg
and
subb
dec
ret
fidivrl
mov
repnz
and
inc
addr16
aad
in
jge
add
adc
add
dec
inc
xor
push
push
int3
xchg
out
pop
stos
pop
mov
mov
call
das
ret
outsl
mov
inc
xchg
sbb
xor
pop
div
add
xchg
std
adc
icebp
cmpsb
and
mov
lods
dec
jp
repz
clc
inc
add
inc
jns
data16
push
pop
and
enter
insb
daa
dec
mov
and
icebp
mov
pop
add
ror
ljmp
inc
daa
repz
push
cltd
ja
scas
or
jb
cli
jl
pop
shrl
sti
and
incl
notl
dec
jbe
inc
je
mov
add
movb
data16
xor
xor
add
or
push
mov
inc
jo
cltd
inc
sub
jnp
pop
jo
cmp
ret
repz
shrb
mov
and
jmp
les
and
xor
push
mov
repz
stos
sbb
loopne
or
cs
sarb
inc
fs
outsb
daa
stc
dec
jns
inc
add
addb
rcll
neg
xor
push
lret
add
das
mov
pusha
stc
ljmp
inc
loop
xchg
mov
sbb
cmp
mov
mov
xorb
out
adc
add
shrl
xchg
fiadds
cli
sbb
xchg
adc
repnz
pop
xchg
test
mov
fiadds
inc
dec
sarb
jle
xchg
fbstp
cmp
faddl
shlb
es
xor
push
aad
cld
jg
inc
adc
xchg
push
nop
fcomps
xlat
mov
xchg
mov
fbld
dec
adc
lods
sub
rcll
lods
insb
jns
ljmp
xor
cli
jae
mov
jle
adc
pop
dec
ljmp
out
lret
jne
cwtl
lds
inc
sub
bound
mov
lahf
mov
mov
xor
push
imull
push
mov
mov
inc
xchg
sub
insb
sub
test
enter
cmpsb
sub
ds
repnz
cli
and
push
sbb
loope
push
inc
cmpsl
movb
or
mov
fsts
xchg
inc
push
popa
mov
loopne
push
sub
int
push
fimull
das
lea
mov
in
fistl
mov
sub
or
mov
rorb
fiaddl
mov
mov
xor
add
or
pop
in
orb
ret
jno
insl
leave
pop
cwtl
loop
and
cmp
out
andb
aaa
lret
test
pop
mov
sbb
jne
add
sub
xor
insb
aas
add
outsl
ja
out
sbb
flds
mov
leave
dec
mov
lods
jmp
and
sub
insb
test
in
mov
xchg
insl
into
sti
lret
push
sti
fabs
add
adc
loopne
add
mov
xchg
shlb
hlt
cwtl
lods
and
sbb
pop
xchg
test
jne
sub
pusha
frstor
xor
sbb
dec
mov
loop
dec
or
popa
xor
in
jo
or
mov
scas
and
dec
cli
js
jmp
inc
jecxz
mov
cmpsb
xchg
shl
xchg
sub
idiv
js
xchg
lds
and
scas
adc
fs
int
push
xor
ret
int3
sahf
shll
and
leave
out
fsubrs
shrl
int
test
lock
jb
mov
sbb
mov
shrl
xchg
into
and
popa
fwait
dec
inc
xchg
xchg
mov
jg
stos
and
jnp
mov
lcall
inc
dec
in
jnp
mov
movsl
add
test
push
xorl
inc
in
out
dec
in
imul
fadds
roll
popf
lods
cmpsl
cmp
cltd
push
pushf
test
ljmp
sbbb
addr16
pop
sbb
enter
jle
pushf
mov
stc
test
data16
addl
stos
mov
pop
scas
ret
lods
and
rorb
sar
ds
add
outsb
mov
mov
cmp
jmp
insb
push
rorl
out
dec
fcomps
std
pop
pop
add
mov
and
shlb
xor
cmp
pop
pop
mov
push
sbb
rorb
cmp
orb
dec
insb
adc
sub
das
sahf
xchg
add
xchg
shlb
rorl
mov
ds
ret
mov
sbb
cwtl
leave
mov
inc
mov
inc
jp
cmp
mov
outsb
testb
lcall
jg
cmp
cmp
xchg
fistpl
or
negl
pushl
dec
in
mov
pop
push
sahf
sbb
ja
aaa
push
xor
outsb
xchg
jnp
xor
adc
mov
push
mov
in
in
cmpsl
mov
add
rorl
jb
les
add
je
mov
cltd
aad
push
lods
mov
clc
insl
push
pop
mul
dec
cmpsl
cwtl
loop
lret
adc
or
inc
push
daa
jo
mov
mov
sbb
mov
add
dec
xchg
cltd
es
xchg
mov
push
fwait
xor
rclb
push
cmp
subb
cltd
into
stc
xchg
das
shlb
rolb
ljmp
push
fisubl
sub
repz
out
cwtl
lds
sbb
ds
mov
test
pop
jae
inc
mov
xchg
loop
adc
inc
fld
dec
into
lcall
lret
sti
rcl
arpl
cmp
adc
mov
ss
cltd
cmc
scas
lcall
sti
repnz
add
rolb
scas
sub
fistps
cmc
les
pop
inc
add
jnp
jmp
dec
lcall
lcall
int3
pop
jb
mov
mov
and
mov
or
addb
push
pop
mov
jg
adc
fwait
adc
or
mov
mov
xchg
addr16
addr16
jl
movsb
gs
rcrb
inc
sbb
pusha
dec
mov
movsb
es
pop
repz
ror
jle
or
xchg
out
mov
fadd
hlt
repz
clc
lcall
scas
or
lret
sar
es
fisubrs
fbld
mov
jecxz
jmp
push
push
out
and
mov
cmpsb
adc
inc
rorl
or
pop
or
xchg
fdivrl
loope
xchg
pop
xor
mov
cs
test
aas
inc
push
in
enter
mov
cltd
outsb
adcb
nop
f2xm1
jbe
adc
jnp
and
push
stc
pop
jo
clc
pop
std
xchg
mov
xor
inc
aaa
jns
jns
cli
or
pop
fldenv
imul
lret
movsb
adc
clc
pop
imul
aas
adc
test
scas
pop
mov
adc
and
add
or
lock
xchg
push
jle
aad
jl
mov
jb
push
mov
mov
jp
stos
pop
xchg
out
fdivs
sub
lock
dec
mov
xchg
push
xor
sub
ret
cmp
cltd
mov
daa
and
adc
pop
enter
inc
push
mov
add
ficoml
lea
and
pop
fnstsw
cld
sbb
test
inc
adc
sbb
jo
jecxz
sarl
out
dec
mov
jo
mov
adc
clc
mov
roll
sub
out
testb
adc
stos
dec
sub
repnz
and
sbb
aad
mov
add
inc
pushf
aad
shll
adc
shlb
lret
add
xchg
sbb
sub
ds
pop
pusha
dec
mov
jae
mov
test
xlat
sub
xchg
sub
mov
mov
mov
pop
fnstcw
cmpsl
cmp
xchg
sub
pop
cmp
xchg
mov
or
das
mov
jbe
repnz
adc
xchg
adc
addl
lret
add
enter
xchg
mov
dec
outsb
outsl
out
in
adc
lahf
stos
cld
or
adc
fdivr
pop
call
pop
iret
xor
pusha
jbe
clc
pop
iret
pop
xchg
fwait
insl
sbb
aam
pop
xchg
dec
jmp
mov
push
fisubrl
aam
push
cmp
dec
inc
add
cld
lock
jo
ds
mov
inc
jbe
ds
lret
dec
cmpsl
rorl
or
popa
adc
sbb
pop
scas
dec
test
push
fxch
jbe
es
outsb
sbb
inc
jl
xor
push
das
jmp
int3
out
in
lcall
xchg
outsl
not
mov
bound
stc
test
repz
sub
adc
mov
and
or
mov
aad
xchg
lds
ret
das
mov
jb
mov
pop
pop
jne
fs
or
dec
inc
and
movsl
dec
cmp
xchg
icebp
repz
jbe
adc
xchg
clc
push
add
mov
sarl
clc
out
xchg
inc
inc
or
andl
loop
pop
push
sub
icebp
push
cltd
sbb
mov
fisttpl
repz
xlat
enter
outsl
push
leave
ret
adc
pop
fmuls
adc
cmc
fcmovnbe
outsb
sbb
inc
mov
push
xlat
rcl
iret
xor
jbe
lret
ds
inc
dec
test
in
rol
movb
dec
lock
js
add
jmp
and
js
dec
add
sti
pop
jle
and
mov
add
out
mov
out
sub
dec
popa
es
add
jnp
or
xorb
cs
popf
xorb
mov
mov
inc
adc
das
loope
sti
pop
ret
pop
test
ljmp
add
mov
push
les
cmpb
stos
or
lods
insb
pushf
arpl
sbb
xchg
leave
cwtl
mov
das
sbb
xorl
dec
mov
pushl
and
cltd
xchg
add
mull
mov
or
pop
fwait
jmp
xchg
pop
es
jge
push
xchg
mov
jp
or
mov
in
xor
lret
push
sahf
stc
cld
sub
cltd
sub
in
je
fnstsw
es
lea
sbb
cmc
or
xor
ss
mov
xor
aaa
imul
stos
adc
push
cwtl
push
outsl
stos
add
outsl
pop
xchg
cltd
scas
jno
xchg
jo
adc
jg
push
repnz
jmp
std
andl
mov
je
adc
fwait
jne
jb
push
addr16
aaa
mov
or
mov
jge
push
loope
decb
xchg
lock
enter
jmp
inc
or
mov
xchg
pushf
add
mov
cmc
leave
sti
popf
jmp
int
scas
out
lods
adc
push
sahf
mov
jmp
or
cwtl
cmpsb
jbe
push
or
pop
repnz
xchg
adc
xchg
and
jns
mov
fisubrl
mov
xor
shl
jbe
mov
jecxz
sub
outsb
addr16
inc
xor
adc
mov
xchg
les
sub
bound
inc
pop
sub
or
lds
mov
sub
lahf
and
mov
dec
xchg
popa
jnp
inc
or
jp
mov
daa
ret
repz
jmp
fstpt
ret
lret
sbb
pusha
add
je
inc
push
xor
cmpsl
mov
cmp
loope
or
push
sub
mov
imul
add
gs
pushf
adc
sbbb
cmc
cltd
das
xchg
adc
cmp
or
outsb
popa
jne
imul
jae
sbb
lahf
outsl
loope
jb
je
cli
xor
scas
push
dec
mov
je
mov
xchg
test
sub
xchg
pop
mov
cmp
lock
fisttpll
ljmp
clc
jo
lahf
jmp
xchg
stos
cmp
jecxz
sbb
push
mov
jl
mov
outsl
hlt
ret
xchg
mov
sbb
fdivrs
ret
cmp
in
jno
xchg
adc
jbe
dec
int3
not
ljmp
pop
das
or
in
lret
fs
mov
ficompl
mov
dec
lcall
push
xor
and
push
jmp
mov
addr16
cmpsb
les
xor
bound
xchg
imul
sahf
dec
dec
fildll
mov
mov
int
cmp
adc
pop
xchg
sbb
insl
pop
mov
bound
jecxz
push
in
and
in
out
aas
cli
xor
sti
add
mov
std
lea
in
hlt
mov
bound
pop
test
cli
frstor
xchg
sti
mov
xchg
mov
imul
out
mov
es
aas
sbb
push
mov
push
pop
out
iret
add
sbb
cmc
sub
adc
push
jmp
mov
add
xchg
xchg
nop
sub
nop
and
clc
xor
or
imul
add
aam
pop
data16
cmp
test
add
fistpll
adc
xchg
sahf
xor
mov
xchg
mov
add
les
sbb
aaa
jbe
mov
loopne
mov
xchg
jecxz
sub
sbb
mov
neg
adc
or
jecxz
aaa
sarl
push
shrl
mov
or
imul
scas
je
fcoml
xchg
ret
int
jecxz
sub
xor
mov
scas
jbe
out
rcr
loope
inc
out
fidivrs
xor
xchg
cmp
xchg
inc
out
sub
divl
inc
cmc
or
cmp
test
mov
pop
orl
dec
mov
aas
mov
fmuls
inc
test
jbe
dec
sbb
repz
mov
jnp
mov
out
rcr
sub
and
clc
mov
in
xchg
sbbb
fisttpll
sbb
int
iret
mov
jo
push
sbb
add
rcrb
mov
adc
fiaddl
cmc
mov
cld
jg
lock
add
mov
arpl
sub
rcrb
in
inc
dec
cmp
push
jge
cmp
cmc
das
xchg
mov
aam
out
sahf
rcrb
nop
out
outsl
iret
push
pop
mov
lcall
in
sub
push
bound
dec
jle
insb
add
dec
daa
scas
call
je
jle
std
push
xchg
scas
push
fisubrs
out
mov
ret
cmpsl
xchg
xchg
sub
mov
push
jo
in
sub
sbb
pushf
scas
test
or
int3
fisubrl
int
fildl
mov
lcall
aas
fwait
mov
cmp
jmp
xor
bnd
aaa
and
mov
push
push
pop
lret
xchg
add
pop
ret
fidivs
aaa
in
stos
pop
push
cmp
push
int
out
je
ja
push
dec
and
notl
mov
jnp
pop
idivl
pop
mov
and
clc
add
cli
sub
push
ds
fiadds
jmp
jno
repz
cs
movsb
bound
ret
mov
adc
sub
in
ss
and
pop
inc
leave
or
fnstcw
nop
inc
pop
sbb
xchg
ror
inc
adc
enter
jae
xchg
aam
inc
push
xlat
xor
hlt
dec
fidivs
pop
ret
xor
adc
shl
loop
repz
mov
notb
mov
pmullw
ret
jmp
add
mov
fstpt
xchg
rcrl
jbe
adc
dec
and
icebp
cmc
aaa
adc
sbb
sarl
pop
lcall
cmp
out
aad
or
mov
adc
add
dec
mov
push
fldt
ja
mov
jne
add
mov
xor
xchg
stc
fildll
lret
add
js
js
fstps
movsb
dec
out
imul
jg
sbb
in
cmp
fadds
setae
pop
sbb
lea
jo
fldl
fisttpll
jle
sbb
xlat
out
xor
fwait
and
mov
dec
pop
dec
or
or
scas
xor
pusha
and
add
pop
cs
das
xchg
negl
dec
lret
loopne
dec
rcll
fldcw
pop
add
xor
ret
je
lock
pop
mov
mov
sbb
push
adc
push
jo
lret
mov
and
stc
dec
dec
fcmovnb
inc
outsb
shr
add
cwtl
xchg
out
mov
jmp
daa
fmull
jmp
add
mov
jmp
or
and
add
in
int
cmp
addr16
mov
jge
movsb
fistps
ds
cmp
push
enter
push
mov
cmp
jmp
sarb
mov
mov
push
cltd
repz
in
sub
shrl
xorb
mov
incb
push
test
xchg
sub
mov
pushf
mov
leave
adc
cs
dec
sub
jo
roll
int
popf
mov
lret
push
stos
gs
pop
inc
fmuls
jbe
jmp
mov
pop
dec
add
out
xchg
pop
lock
cs
xchg
insl
les
loope,pt
xor
dec
lods
fidivrs
outsl
sbb
test
push
adc
xchg
test
pop
dec
jl
lret
test
add
pop
mov
lods
arpl
sub
neg
fadds
mov
push
add
mov
add
bound
and
cmp
pop
sbb
inc
add
jb
arpl
lods
ja
mov
fwait
mov
mov
inc
shlb
xchg
pop
jle
jg
xchg
orl
cmc
jae
xor
outsl
dec
mov
jmp
pop
sub
inc
jbe
or
mov
gs
jmp
xchg
xchg
clc
add
ja
jo
cmp
jno
insb
mov
jae
stc
test
jno
stos
aaa
jle
dec
nop
xor
mov
cmp
cmp
inc
pop
xor
daa
hlt
int
push
std
cltd
scas
je
jnp
cmc
lret
mov
jbe
pop
js
pop
adc
sub
push
outsb
jecxz
jns
push
lock
stos
cld
adc
mov
sti
inc
cmp
loope
xor
push
cwtl
movsl
fistpl
dec
orl
sbb
push
pop
fwait
ret
sub
and
push
mov
aas
pop
mov
xchg
jle
add
push
leave
int
scas
xchg
mov
hlt
inc
jb
adc
in
and
cmp
xchg
lea
aam
lahf
ret
imul
pop
dec
cmp
je
dec
xchg
je
cmp
out
mov
pop
cld
ja
mov
mov
mov
dec
int3
cmpsl
sbbb
movsl
jo
mov
out
out
pop
xor
repnz
notl
pop
ss
pusha
adc
or
jmp
push
inc
push
lahf
pop
sub
sbb
outsb
int
sarb
andl
jecxz
hlt
mov
xchg
mov
push
inc
inc
or
das
inc
mov
inc
push
pmullw
mov
adc
cs
mov
int
shll
mov
pop
push
iret
sar
sbb
mov
pop
adc
fxam
push
push
sbb
cmpsb
fistl
cld
jns
cltd
scas
cmp
dec
insl
iret
iret
mov
bound
iret
inc
jb
cwtl
push
jmp
xchg
mov
jecxz
into
repz
lcall
movsl
lret
loope
and
aaa
dec
cmp
pop
sbb
or
in
jp
xor
pop
clc
dec
jl
xchg
aad
fcmovnb
lahf
in
jg
rclb
je
insb
mov
lret
xor
jle
cwtl
imul
test
repnz
inc
out
sarb
pop
mov
loop
aad
outsl
jmp
mov
movsb
and
ja
adc
adc
in
enter
in
sbb
das
das
mov
dec
inc
jae
fmul
dec
fcomps
xchg
sbb
ss
sahf
inc
lods
xchg
popa
lcall
insb
pop
lea
ret
daa
mov
sti
test
sub
pusha
cmc
cltd
cmp
orl
enter
mov
mov
lods
xor
notb
mov
into
int3
pop
enter
xor
sahf
repz
xor
std
clc
mov
mov
loope
imul
jae
xchg
mov
das
sbb
fwait
std
scas
sub
mov
test
pop
add
dec
inc
push
popa
jmp
aad
mov
cmp
mov
lock
jg
sub
xchg
lea
xor
xchg
popf
test
xchg
pusha
add
loopne
cmp
mov
sub
rcrl
lods
jbe
push
pop
lea
jne
fisttpl
pop
sbb
and
test
push
dec
scas
mov
out
mov
sbb
adc
outsl
mov
xor
roll
call
or
xchg
aad
test
pop
stc
inc
add
pop
negb
lret
test
andb
cwtl
or
aas
cmp
jecxz
fwait
xor
or
leave
push
outsl
adc
fdiv
sub
add
xor
dec
mov
sub
xchg
test
test
andl
inc
dec
cmp
lahf
jno
ficomps
stc
cmpsl
jne
pop
lock
sub
nop
sub
dec
rolb
cmc
iret
sub
icebp
xchg
in
push
pop
inc
xchg
cmp
pop
inc
insl
inc
xchg
jno
or
push
je
add
adc
and
xchg
cltd
int
int3
pop
fisubs
jge
sub
jno
add
xchg
mov
dec
xchg
mov
xor
mov
sub
nop
cmp
sub
pop
stos
arpl
insb
mov
push
xor
lret
and
lahf
mov
jmp
loop
ret
dec
mov
push
aaa
inc
ljmp
mov
mov
fsub
cmpsb
lods
or
cmp
lods
cli
xchg
aas
ss
cli
sub
cmp
test
das
pusha
mov
xor
jb
push
pushf
inc
frstor
clc
push
sarb
adc
sub
jp
pop
mov
je
cltd
cmp
add
adcl
sub
sarb
inc
ror
xchg
sbb
xchg
shll
enter
popa
cs
and
cmp
roll
ror
dec
cld
insb
ret
pop
mov
cs
push
xor
push
loopne
and
xor
mov
notb
mov
fistpl
and
sti
xchg
pop
insl
cmp
jge
pop
addr16
rcr
lock
imul
sub
pop
call
mov
mov
adcb
push
mov
and
jg
mov
mov
push
jecxz
imul
jmp
clc
inc
je
xchg
addr16
xor
sub
icebp
push
mov
mov
in
pushf
inc
movsl
fucomip
addr16
adc
das
shlb
mov
nop
sbb
pop
sbb
add
lods
jbe
jp
push
xchg
lods
and
daa
sbb
add
sbb
or
pusha
inc
cmpsl
jnp
sbb
push
xlat
sub
xchg
icebp
add
std
fcomp
inc
lods
in
jmp
mov
cmpsb
jecxz
dec
and
sub
int3
mov
push
sub
les
or
insl
pop
repnz
popa
jne
pop
lods
or
icebp
inc
shrd
sbb
aaa
inc
aaa
cmp
fcmovne
out
and
sbb
idivb
push
jge
pop
sbbb
mov
mov
sub
xor
out
inc
pop
xchg
jmp
xchg
sbb
add
mov
mov
jmp
movsb
repnz
loop
xor
mov
test
xchg
jb
pop
rorl
arpl
pop
pusha
xor
mov
pop
stos
jno
stc
ror
inc
jg
jg
scas
pop
cwtl
cltd
cmpsb
cli
xchg
pop
push
jp
inc
and
jne
xorl
pop
pop
jl
mov
add
repz
daa
lds
scas
les
lods
dec
pop
mov
iret
mov
cs
bound
pop
jmp
pushf
lock
dec
fs
push
xor
popf
or
jb
cmp
sbb
pop
cmp
loop
cmc
fadds
push
jbe
xor
sar
pop
push
movsl
hlt
inc
test
cmpl
call
mov
aaa
imul
inc
jl
enter
lock
cs
mov
cwtl
cmp
jns
stos
pop
push
jp
or
movsl
xchg
xchg
push
bound
dec
notb
xchg
int
into
mov
adcb
cwtl
jp
xlat
or
jmp
leave
pop
outsb
push
cmp
jno
fisubl
jbe
imul
lock
mov
push
sbb
cmp
or
jne
aaa
fadds
inc
shlb
es
inc
xor
in
pop
mov
inc
xor
in
cmp
inc
aaa
cli
lock
lock
dec
mov
sub
push
dec
fs
out
movsl
pop
fdivrs
xchg
xor
jbe
stos
clc
fxtract
std
sub
sub
or
stos
pop
dec
lahf
loopne
sub
inc
inc
rcl
test
pop
cmp
push
dec
cmc
insb
sbb
or
or
xchg
movsl
mov
in
sub
pusha
call
mov
adc
sahf
cmp
xlat
loop
push
xlat
jae
lods
xchg
out
dec
sti
test
in
jbe
sbbb
and
mov
loop
adc
xor
cmpsb
add
jne
imul
scas
in
jl
cmp
mov
lods
dec
and
je
mov
ljmp
push
hlt
jmp
adc
je
xchg
std
inc
repz
sti
lcall
ficompl
leave
and
inc
or
sub
pop
pop
js
repz
outsl
xor
mov
or
cmpsl
dec
adc
xchg
adc
adc
pop
call
ja
sub
cmpsl
cmc
dec
cmpb
int
pop
sahf
fildl
inc
mov
dec
scas
cmp
cmpsl
sahf
pop
dec
pop
cmc
xor
es
and
stos
jnp
and
fs
out
cmc
dec
nop
iret
repnz
jg
test
int3
roll
gs
cmp
pop
mov
fstl
frstor
icebp
dec
push
or
fadds
pop
add
cmp
mov
and
fcomi
iret
aas
nop
push
mov
mov
popa
out
cmp
mov
scas
dec
lret
inc
push
pop
call
mov
inc
lret
out
push
jae
fimull
xchg
jl
jmp
push
ret
cmp
insb
hlt
scas
and
xchg
pop
and
push
js
adc
push
push
sub
js,pt
jns
enter
inc
out
push
sbb
std
ds
int3
mov
add
pop
push
movsb
mov
fcoms
mov
adcb
inc
sti
mov
jecxz
sti
sub
cmp
dec
mov
jle
jns
movsb
add
fldl
xchg
cmpsb
lock
imul
shld
lock
or
and
dec
insb
sub
out
stos
andl
lahf
cmp
inc
jle
adc
xchg
adc
aas
xchg
das
jecxz
mov
inc
mov
ss
xor
cmp
mov
lahf
mov
xchg
push
rcrb
loope
xchg
fcmovb
lods
das
mov
push
arpl
inc
ds
sub
orl
out
xchg
mov
test
fucom
inc
mov
push
and
push
mov
xchg
lcall
inc
ret
scas
hlt
xchg
jbe
int
push
inc
cld
mov
xchg
mov
sub
outsb
in
inc
xchg
and
stos
pop
lds
fidivrl
xlat
mov
sub
lahf
push
sub
xor
add
rcll
sub
push
mov
xor
arpl
arpl
hlt
shll
sbb
andnps
mov
int
push
incl
xchg
bound
es
pop
push
jecxz
rorl
sbb
inc
stos
pop
in
mov
xchg
imul
mov
test
xchg
mov
nop
stos
xor
pushf
jb
jmp
jb
jg
aaa
xor
mov
jae
rcl
popa
add
js
inc
daa
ret
cs
inc
mov
sbb
pusha
in
mov
repz
inc
pop
iret
inc
mov
popf
cmpsl
mov
mov
add
or
addb
adc
loop
inc
mov
js
and
imul
or
pop
test
xchg
pop
xor
push
cmpsl
scas
aaa
outsb
lret
je
aas
dec
les
sbb
sbb
xor
adc
xchg
push
push
imul
add
xor
add
mov
faddl
sbb
fwait
test
in
or
scas
fst
test
repnz
addl
bound
into
cmpsl
js
cltd
iret
jbe
mov
popa
mov
cmc
nop
jbe
daa
sbb
pop
lcall
or
fisttps
shr
mov
add
sti
pop
cltd
enter
div
mov
and
dec
jne
std
fs
in
xchg
cld
negl
notl
cmp
out
xchg
pop
xchg
int3
sti
inc
jge
mov
xchg
outsl
in
and
xor
jbe
or
mov
push
dec
mov
jmp
movsl
int3
aaa
mov
sub
cld
mov
loopne
or
lea
js
dec
aad
lea
or
ret
in
fsubrl
pop
jb
out
sahf
pop
les
ret
xor
daa
sbb
inc
push
sbb
fldenv
cs
cmp
cld
inc
add
sub
fs
adc
sub
or
data16
jge
adc
stos
push
stos
push
ds
shlb
push
mov
aad
test
mov
mov
mov
inc
xlat
or
jae
sub
xlat
call
cwtl
das
out
andb
or
adc
test
fdiv
iret
aas
pop
repz
cmp
pusha
out
ror
lret
pop
pop
pop
sub
mov
and
jle
stos
popf
test
sarb
mov
dec
fwait
inc
inc
bound
das
and
jl
dec
int3
push
pop
mov
cwtl
mov
pop
test
popa
scas
call
inc
dec
insb
mov
adc
add
cmpsb
lret
dec
inc
push
push
ss
or
ss
std
mov
sbb
fmuls
xchg
add
mov
loop
mov
insl
xchg
pop
subl
and
push
mov
loope
fistpll
mov
sbb
inc
mov
and
cmp
mov
stc
mov
push
aam
or
or
or
inc
mov
xor
jecxz
popa
call
xor
jne
mov
dec
mov
pop
push
push
pop
push
fdivrl
push
dec
inc
test
inc
jmp
xor
xor
pop
sbb
scas
xchg
jne
jbe
jg
incl
sub
and
loope
jb
fisubs
std
gs
push
and
stos
je
mov
int3
mulb
push
mov
jge
or
sub
lods
neg
add
mov
jae
adc
aad
sbb
xor
js
or
in
jbe
int3
mov
nop
dec
cmpsb
xchg
test
out
mov
push
and
stos
inc
pop
int3
popa
lock
add
sub
fcom
in
xchg
mov
xor
pop
jmp
mov
pop
stos
scas
and
jno
daa
cmpsb
outsb
into
mov
mov
shr
bound
xlat
xor
add
or
call
ret
fs
aaa
inc
int
cmp
push
cmp
fcmovbe
pop
ret
test
inc
fxch
mov
popf
scas
out
ret
cmpsl
pop
pop
mov
dec
pop
out
xor
pushf
jl
jns
mov
xchg
cmpsl
jns
ror
fnstsw
loop
loop
cli
xchg
mov
in
jns
ror
daa
add
ljmp
and
imul
lret
mov
inc
xchg
dec
pop
outsl
in
mov
mov
daa
gs
or
cmc
push
das
ficoml
mov
lahf
xlat
stos
fwait
out
insl
sti
xor
icebp
and
add
ret
jmp
sbb
popf
rolb
push
outsl
sbb
mov
in
fmuls
sti
dec
scas
adc
ret
adc
lcall
pop
cmp
add
mov
cmp
mov
call
clc
arpl
inc
mov
pop
mov
inc
sbb
imul
push
test
push
sbb
pop
popf
data16
jp
sub
cmp
inc
in
test
add
mov
enter
or
inc
clc
push
inc
pop
popa
movb
mov
push
and
cmp
iret
xchg
lods
sub
shl
mov
xor
iret
das
ret
ficoml
sub
filds
ret
in
xor
cmpsb
xor
push
jbe
in
loopne
xor
loopne
xlat
mov
das
add
lea
cmpsl
mov
and
cmp
fdiv
or
mov
loopne
aaa
aam
movsl
lea
pop
mov
fists
jae
arpl
pusha
stos
xchg
int
fiaddl
cs
inc
sar
jl
add
adc
cmc
rol
lock
mov
lahf
pop
sbb
test
cs
sbb
fnstcw
fcomi
cmpl
xchg
ret
bound
clc
mov
pop
pop
xor
out
xor
xchg
test
pop
mov
mov
jo
sub
adc
jo
mov
and
movsb
int
add
dec
pop
cmp
sub
in
jb
insb
cmp
das
inc
xchg
iret
movsb
push
aad
dec
fistpl
mov
into
jno
sub
pop
sub
xlat
cli
mov
jg
in
lret
shrb
push
cli
jecxz
adc
in
inc
fidivrs
outsb
dec
lcall
mov
pop
rclb
inc
mov
mov
pop
aas
in
inc
jle
test
scas
aad
outsb
adc
imul
jle
jecxz
xchg
pop
mov
call
lret
stos
add
jne
sti
frstor
repnz
lods
inc
mov
out
and
cmp
aaa
iret
jg
dec
shrl
add
xor
xchg
add
jbe
adc
mov
aam
fisttpl
fisttpl
outsl
daa
sarb
popa
ja
lock
xorb
mov
push
and
in
jmp
or
add
xlat
pusha
or
push
jl
stos
jl
jecxz
push
push
sub
pop
fidivrl
mov
push
arpl
in
push
jno
leave
cmp
daa
cld
pop
push
dec
mov
or
jle
mov
stos
dec
adc
mov
adc
sub
daa
fiaddl
inc
sbb
int3
test
mov
cmp
or
call
jmp
cmp
xchg
leave
inc
pop
rcrl
jno
xchg
dec
add
aaa
pusha
out
or
and
lea
push
mov
int3
cmpb
rorb
dec
push
pop
pop
rol
mov
pop
leave
mov
aad
imul
aas
shll
or
add
cmpb
xchg
mov
lret
xor
xlat
jb
xor
mov
cmpsb
xlat
sub
rcr
add
pusha
add
stos
xor
mov
sbbl
xchg
lods
scas
jns
mov
add
cmpsb
pop
xor
xchg
lea
or
adc
cmc
dec
mov
push
std
shlb
or
pop
xor
xor
push
inc
sub
fxch
push
pop
lea
mov
loopne
sbb
jno
push
dec
sbb
sub
cli
dec
sub
jb
fmull
inc
push
shll
dec
das
cmpsb
sub
ret
stc
add
cld
into
pop
fistps
cmp
inc
dec
sti
inc
scas
scas
mov
das
jbe
lds
inc
divl
out
sarl
push
adc
imul
adc
lret
mull
push
dec
add
mov
pop
push
test
cmp
cmp
pop
or
jp
std
imul
ljmp
movsl
test
mov
popf
cwtl
adc
movsl
push
test
jp
push
jecxz
jne
jle
sbbb
hlt
cltd
push
mulb
add
ret
push
sbb
mov
add
xchg
fistl
mov
dec
out
aad
mov
hlt
in
insl
std
mov
test
dec
loope
or
pop
data16
fdivr
les
jnp
fdiv
subl
vunpckhps
pop
int
icebp
daa
dec
jmp
movsl
inc
mov
in
adc
rorb
pop
dec
subl
sar
jae
fidivrl
std
popa
mov
std
and
push
test
pop
or
mov
or
dec
push
or
mov
mov
pop
jecxz
hlt
jae
sti
xchg
out
incb
or
push
dec
cwtl
stos
clc
jbe
scas
jb
mov
data16
lcall
dec
add
mov
adc
and
lret
sub
push
and
shll
jge
ficoms
es
stc
mov
xchg
sbb
pop
mov
adc
pop
xor
in
cmp
pop
push
adc
pop
je
out
or
adc
inc
std
sub
mov
aas
je
dec
dec
adc
cmp
test
pusha
dec
adc
gs
pop
in
dec
sub
roll
mov
add
or
hlt
gs
mov
ljmp
les
inc
push
push
rclb
sub
pop
mov
aad
in
test
inc
decb
mov
out
negb
mov
sti
and
add
mov
push
lea
jl
jecxz
jne
inc
cmp
pop
sti
sahf
or
bound
test
inc
shl
xchg
out
pop
cmpsb
lret
jecxz
xor
pop
out
and
pop
or
out
dec
mov
pcmpeqw
in
pop
test
mov
call
test
mov
xlat
cltd
ljmp
sbb
sbb
shlb
stos
mov
movl
out
pop
repz
js
daa
test
cmp
dec
rorl
pop
popa
mov
lods
loop
or
outsl
fsubrs
fadds
scas
cmc
ret
mov
jge
mov
push
mov
xchg
ja
insl
fbld
xlat
inc
and
or
dec
popa
push
out
lock
in
sbb
pop
mov
add
daa
push
mov
inc
push
sbb
lret
adcl
sbb
and
mov
sub
rclb
stc
data16
add
clc
push
in
imulb
out
ja
inc
jmp
lods
adc
outsl
or
popa
jae
aas
ret
mov
dec
dec
leave
mov
mov
mov
push
test
das
test
pop
lcall
mov
fldl
rorb
pop
in
aam
mov
mov
int3
jge
sbb
sub
xor
inc
bound
aam
jns
jne
dec
push
nop
mov
mov
out
sahf
jl
fisttpl
push
orl
outsl
sbb
xchg
jb
in
adc
rclb
dec
fwait
push
cmpsb
daa
dec
test
mov
pushf
or
out
mov
xchg
int3
ret
dec
popf
add
mov
movsl
in
pusha
cmpsl
fwait
mov
in
test
stos
fcoml
push
push
adc
add
adcb
out
insb
flds
xor
daa
je
sub
lret
sbb
push
rclb
cwtl
inc
ds
and
bound
mov
cmc
outsl
out
or
in
cltd
adc
mov
gs
adc
jp
sti
aaa
push
jbe
decl
icebp
jg
push
cmp
lods
inc
inc
sub
bound
xchg
repz
jp
das
sub
cltd
loope
xor
push
mov
in
dec
sbb
ljmp
addb
jg
or
imul
outsb
mov
adc
inc
add
in
shll
jle
notb
mov
call
je
mov
nop
mov
mov
ret
jo
pushf
sahf
lret
clc
jl
pop
mov
xchg
pushf
mov
adc
dec
pop
add
mov
mov
jae
jle
push
lret
xchg
mov
mov
lcall
mov
jno
cwtl
mov
mov
aad
repnz
push
pop
sbb
mov
sub
jbe
lahf
addr16
stos
fldl
push
sbb
gs
jmp
push
enter
mov
movsb
mov
lods
sbb
push
cmp
fs
cmp
lock
pop
sti
movsb
push
xor
popf
mov
mov
and
adc
std
adcb
push
ret
das
sbb
or
stc
mov
xchg
cwtl
mov
xor
inc
xor
pusha
cmp
out
push
call
loopne
or
loope
ljmp
fimuls
das
fsub
loope
cmovge
testl
xor
enter
out
cmc
push
dec
fwait
stos
jno
mov
iret
inc
cld
popl
test
insl
jnp
xchg
or
les
scas
or
jbe
pop
xchg
adc
and
jp
mov
or
mov
inc
mov
fildll
roll
jns
das
ficoms
cmp
popa
ss
in
outsl
into
gs
nop
jo
jnp
mov
xor
outsb
mov
das
aad
pop
or
fnstsw
lods
push
inc
cmp
popa
ret
xlat
bound
movsl
aaa
lods
lret
lret
pop
sbb
pushf
fwait
and
loop
outsb
dec
scas
sub
fsubrs
fstpt
cli
inc
xor
je
shlb
adc
rorb
xor
inc
adc
pop
das
push
and
cmp
mov
sbb
jb
clc
mov
mov
xchg
add
fiaddl
jo
ffreep
jge
push
decb
mov
pop
insl
add
mov
in
loope
orl
mov
int3
shlb
ret
jnp
decb
inc
jg
iret
daa
push
ss
push
xchg
jmp
outsl
pop
sub
inc
fnstsw
ljmp
adc
inc
or
mov
rorb
test
std
mov
sbb
push
fsubl
ja
and
cmp
sub
fucomi
lds
xor
aas
jl
rcrb
pop
jne
fisubs
push
insb
mov
and
mov
cmp
pop
inc
outsb
xor
cs
cmpl
and
jo
aaa
imul
in
push
sub
xchg
xor
mov
push
sbb
int
scas
add
jbe
inc
stos
xchg
jl
pop
pusha
push
es
dec
xchg
cmp
xchg
push
xor
mov
shlb
push
lea
outsb
test
push
adc
aad
jae
mov
test
xacquire
or
jns
cmp
mov
jge
popa
cmp
and
and
ret
cmp
sub
mov
jge
ss
imul
jb
lret
push
push
xchg
jl
push
pop
ds
sub
pop
nop
mov
pop
inc
inc
mov
jns
mov
mov
test
loopne
pop
mov
popa
xchg
fs
jg
cwtl
mov
movsb
leave
rcrl
ja
mov
mov
cmp
test
push
repnz
lret
add
push
sbb
sbb
xchg
jl
fchs
fwait
mov
test
ret
loop
bound
adc
push
subl
dec
jae
push
mov
xor
dec
cmpsl
push
pop
aas
aas
jnp
xor
mov
push
outsb
mov
xlat
stc
inc
mov
jmp
popf
pop
insb
dec
mov
stos
sub
pop
push
jo
xor
push
pop
das
pop
inc
mov
xchg
or
xchg
rorl
push
outsl
xor
dec
dec
repnz
clc
out
idivb
mov
sbb
inc
inc
es
and
mull
test
cltd
cmpsb
sbb
mov
loope
in
jl
pop
inc
mov
loope
xor
scas
xor
les
mov
mov
out
xchg
mov
call
dec
jb
jmp
clc
das
clc
dec
cwtl
mov
and
xor
subb
stos
adc
into
mov
inc
jge
dec
mulb
mov
imul
loopne
icebp
sbb
jle
xchg
in
push
mov
jge
mov
int3
scas
mov
pop
repnz
xchg
xchg
mov
fdivrp
mov
push
je
cmp
jp
mov
adc
jp
scas
xchg
fs
lods
sti
fildl
xchg
fwait
addl
sbb
loopne
in
enter
outsl
or
stos
sbb
arpl
pushf
notb
cli
push
adc
sarb
mov
inc
and
test
mov
xchg
sahf
mov
aad
push
xor
pushf
adc
push
xor
test
aas
test
mov
adc
inc
or
dec
std
andl
ficomps
mov
out
sub
jns
dec
dec
cmpsb
cmp
xchg
int
frstor
int3
sbb
lretw
ret
sbb
sub
ret
es
rcrl
cs
mov
not
cmc
sbb
shll
jns
mov
dec
into
mov
rcr
mov
add
je
push
sub
sub
xchg
stos
mov
jo
inc
pop
and
cmpsb
dec
bound
clc
enter
nop
sbb
pop
imul
in
rcrb
out
mov
push
push
add
insb
lods
lods
mov
jae
pop
lahf
xor
stc
adc
fs
mov
inc
aam
call
stos
push
cmp
arpl
les
cld
dec
dec
jbe
and
fldl2e
iret
adc
inc
mov
xor
pop
cmp
leave
neg
enter
jle
sbb
push
lods
sub
imul
xchg
cmc
ret
dec
inc
insl
out
out
or
push
shl
ja
inc
xor
or
and
adc
mov
lods
lret
and
cmp
ja
outsl
test
gs
mov
lret
stc
in
mov
paddd
dec
cmc
leave
inc
js
jle
sub
mov
pop
insb
sbb
sahf
sti
leave
xor
clc
sbb
nop
mov
mov
sahf
dec
jmp
dec
les
cmp
jp
mov
sahf
test
push
lods
add
pop
inc
into
cmovae
aaa
jecxz
xlat
xor
and
jo
and
cmp
mov
jle
add
xor
inc
ret
movb
inc
sub
shrb
roll
xor
xor
pop
mov
int3
sbb
pop
sub
jo
inc
movsb
add
test
cmc
xlat
pop
mov
xchg
in
xor
test
jns
stos
stos
inc
push
ret
sbb
cmp
stc
or
lods
sti
ljmp
dec
sub
test
lea
popa
pop
lods
or
inc
dec
push
enter
add
xor
add
fs
orb
or
jbe
cmp
inc
cmpsb
pushf
mov
int
les
adc
outsl
mov
dec
in
aam
lret
add
gs
sbb
xchg
faddl
and
pop
adcl
addr16
mov
sarl
sub
sbb
inc
popf
jmp
jae
cmc
mov
fwait
and
adc
jo
add
sbbl
sbb
ja
sbb
and
icebp
sub
inc
xchg
cmpsl
and
mulb
cmpb
sub
pop
xor
and
or
jg
mov
adc
mov
pop
call
mov
sbb
lds
notb
fsubrs
mov
ficoml
cmp
loope
add
adc
shrb
popa
inc
popf
fmull
mov
or
and
push
sub
cwtl
popf
mov
mov
inc
push
cmp
nop
das
es
fcompl
das
pop
sbb
outsb
and
lods
andb
or
push
pop
sub
in
jne
xchg
popa
xchg
mov
push
jmp
rclb
repz
jge
in
insl
push
jmp
jle
xchg
adc
mov
mov
sbb
shll
daa
out
mov
sub
mov
data16
shlb
push
mov
mov
sti
jl
sbb
es
xchg
aam
xor
mov
jno
mov
out
in
scas
insb
rcr
lock
cmpsl
sbb
mov
mov
adc
push
shll
jno
addl
cld
xchg
mov
pusha
iret
mov
push
mov
xchg
mov
or
scas
ss
imul
rcrb
stos
das
gs
mov
in
ret
rcrb
mov
mov
mov
pmuludq
cwtl
adc
inc
js
jb
pop
sbb
clc
inc
in
mov
jge
sub
mov
mov
mov
sti
push
out
in
js
push
jns
loope
jb
pushf
nop
repz
scas
dec
ds
xor
lahf
insl
daa
stos
pop
sarb
pop
shl
pop
sbbb
cmp
adc
ror
imul
pop
ljmp
push
sub
hlt
xorl
addr16
stc
call
sub
call
dec
cmp
push
mov
outsl
lock
xor
inc
mov
into
iret
sbb
push
xchg
pusha
or
cmp
sbb
les
cld
roll
cltd
xor
inc
scas
inc
xor
pop
andb
push
out
pop
add
out
mov
mov
sti
dec
repz
lods
notb
loop
or
iret
into
pop
call
jle
cmpsl
jmp
call
into
loop
imul
cwtl
cmp
popa
pmaxsw
pusha
sub
int3
shll
jmp
aam
imul
sub
xchg
and
notl
jb
lods
cmc
test
mov
jp
adc
mulb
sub
lods
sbb
push
jp
fnsave
fmul
cmp
imul
xchg
cmp
test
and
pop
imul
lock
push
negb
pop
nop
fldl
mov
and
outsb
dec
stos
popa
cmpsb
mov
dec
dec
dec
sahf
je
push
inc
cmp
dec
add
or
fbld
pop
cmpsl
int3
adc
std
sbb
pop
jp
shl
push
fwait
push
push
popf
cmp
xor
cli
mov
popf
popa
push
test
aas
loopne
jnp
fisttps
lods
in
fcmovnu
mov
jae
inc
ljmp
xorl
push
fs
jno
lods
jmp
cli
daa
xchg
fwait
dec
shl
jae
aas
mov
adc
dec
xor
repnz
mov
cmpsl
lcall
and
jbe
mulb
dec
fidivrs
call
sbb
xlat
mov
je
mov
push
sbb
sbb
push
outsb
sub
mov
mov
loope
add
int3
sub
and
and
cmpsb
lea
mov
push
jns
cltd
mov
in
test
sbb
mov
dec
das
arpl
out
and
or
lds
mov
lds
jne
fidivs
jo
dec
enter
jne
and
mov
jg
add
add
loop
outsl
add
jle
add
inc
xchg
call
inc
bnd
sti
into
movsb
xchg
lret
lds
mov
push
insb
addr16
bound
jns
inc
or
mov
push
mov
dec
lcall
mov
dec
popf
inc
cs
scas
push
inc
sar
inc
subl
cmp
cmp
notb
cltd
inc
inc
je
sub
dec
rolb
gs
jge
xchg
cmp
cmp
and
subb
pop
cmp
test
cmpl
cmpsb
sar
test
adc
aad
leave
iret
and
in
push
or
out
clc
ja
adc
sahf
out
adc
imul
cmc
dec
mov
clc
rol
adc
adcb
mov
sarl
xchg
call
insl
mov
gs
cmc
movsb
in
ret
add
out
and
stos
lods
jge
jecxz
popa
frstor
enter
push
dec
lods
call
cmpsl
insl
jo
sbbb
lret
rcr
stos
scas
mov
mov
jns
inc
pop
dec
jnp
pop
add
out
mov
push
xor
subb
out
scas
adc
adcb
add
fucomip
mov
lcall
out
ljmp
pop
cmp
scas
out
sub
das
decb
xchg
pop
sbb
repz
stos
xor
jp
or
push
pop
inc
aad
push
cmp
xorb
fisttpll
sub
adc
lret
nop
aam
call
dec
xchg
ja
cs
scas
push
scas
and
pop
add
mov
cmp
int
test
adc
push
js
push
mov
imul
gs
ljmp
or
mov
enter
loope
faddp
rcrb
daa
into
outsb
aad
shrb
push
mov
inc
xor
and
jge
pusha
mov
push
adc
xor
adc
push
adc
das
mov
and
push
fnstcw
dec
arpl
iret
push
push
push
ss
fs
clc
sbb
nop
popa
adcb
xchg
sar
mov
jmp
je
pusha
je
xchg
arpl
lods
sbb
in
add
mov
out
idivl
mov
adc
xor
in
iret
jae
mov
cli
clc
stos
mov
xlat
jmp
loop
mov
fs
cmp
mov
enter
adc
mov
cmp
out
jmp
push
lret
dec
inc
pop
loop
cmp
inc
mov
lock
xor
jne
add
fiaddl
lods
ret
and
fnsave
xchg
and
jnp
shrb
gs
mov
xor
gs
and
ror
add
cmc
sub
mov
sbb
stos
cltd
loope
pushf
jg
sbb
sub
sbb
or
mov
fs
es
xchg
shrd
es
imul
adc
fidivrs
adc
xchg
push
xchg
in
xor
ret
inc
imul
in
adc
test
push
inc
in
das
sbb
dec
cmc
adc
fdivl
sub
jmp
cmp
xchg
push
pop
mov
xchg
lods
rol
movsl
jno
add
jmp
lret
or
mov
out
or
pop
jb
stos
sbbb
push
jge
rcr
jno
ds
or
jbe
cld
xchg
push
pop
and
or
stos
sub
out
movsl
jge
pushf
in
push
mov
adc
outsb
aas
mov
call
in
inc
jno
xchg
or
movsl
faddp
stos
mov
cmpsl
ds
add
movsl
xchg
popl
bound
cmp
stc
sbb
adc
and
roll
lret
sub
lods
out
mov
out
cmc
cmp
xchg
sub
jne
jnp
cmp
push
inc
inc
pmullw
xor
scas
loop
fimuls
jecxz
add
idivl
add
add
inc
mov
mov
add
rclb
mov
mov
lds
push
mov
arpl
or
and
dec
pop
mov
sti
mov
sub
and
cmp
pop
mov
pop
add
ljmp
das
imul
jmp
imul
push
loope
sbb
cmp
call
lods
mov
int3
xor
aam
pusha
push
mov
push
nop
cmp
js
mov
xor
adc
cmpsb
popf
and
and
jge
xlat
dec
add
sub
fidivrl
sbb
dec
int3
push
shll
pop
out
xchg
fisttps
out
push
jo
and
jecxz
icebp
ds
into
hlt
and
or
lock
shlb
push
std
push
cmp
pop
out
mov
push
out
not
fmul
cmp
nop
aaa
or
movsl
cmp
jno
mov
aad
jmp
cmp
cmc
pop
movb
sub
inc
pop
repz
jge
mov
mov
or
adc
arpl
in
sub
test
mov
mov
mov
adc
fs
sti
mov
jb
sbb
and
addb
adc
arpl
xchg
mov
xchg
dec
scas
sub
ja
cmpsl
sub
test
xchg
adc
mov
adc
jae
test
in
xchg
shlb
jb
jg
cmp
fcmovbe
aad
sbb
add
movsl
xchg
mov
stos
mov
adc
popf
inc
adc
stos
insb
adcl
into
ljmp
int3
and
ljmp
dec
repz
cmpsl
outsb
es
int
jb
push
jle
sub
sbb
dec
mov
pop
pusha
mov
or
mov
cli
mov
negl
in
insb
imul
sub
mov
dec
or
outsl
ja
sbb
or
mov
pushf
fcom
mov
push
cwtl
dec
lret
push
inc
adc
iret
add
fs
fwait
inc
adc
adc
pushf
out
stos
push
cmp
sub
bound
pop
push
push
mov
dec
mov
or
adc
dec
sbb
and
dec
cmpsl
mov
pop
pop
mov
andl
test
lods
ret
es
in
pop
lock
jo
pop
cmp
fucomip
enter
frstor
push
out
add
or
xlat
adc
jo
pop
das
push
dec
movsb
pop
ror
pop
test
sub
push
outsb
jmp
shrl
add
daa
sub
jmp
mov
into
jae
dec
sub
in
adc
in
scas
adc
or
and
sub
adc
pop
adc
outsl
cwtl
adc
in
sti
add
aaa
jno
aad
mov
or
push
push
mov
add
fnstsw
jle
mov
ss
div
cmp
test
jno
jmp
xor
mov
mov
test
movsb
inc
mov
inc
push
mov
and
inc
stos
pop
rolb
or
fmuls
jmp
jb
andl
and
sub
xor
add
sbb
clc
mov
insl
adc
sbb
inc
mov
cmp
adc
fs
or
jle
lahf
sbb
inc
jl
in
cmp
cld
mov
sbb
stos
hlt
pop
or
and
or
not
loopne
test
sbb
jle
cmp
arpl
cltd
or
xor
xchg
dec
jne
pop
mov
xor
inc
xor
cmpsl
ja
mov
movsb
push
sbb
stos
addr16
xchg
lret
shl
cld
xchg
jbe
sub
pop
pop
das
out
push
hlt
sub
lcall
stos
push
clc
inc
add
scas
lcall
jnp
push
imul
sbb
mov
js
imul
mov
or
inc
adc
nop
loopne
lock
sbb
mov
and
xchg
fildl
mov
sahf
mov
adc
mov
pop
sbb
sti
and
mov
mov
into
loope
xchg
add
jno
mov
ja
mov
xor
icebp
mov
out
fstl
jmp
fwait
pusha
sbb
fstpt
inc
in
leave
push
cmpsl
bswap
xor
je
pop
jg
cmp
mov
sub
jmp
lea
mov
shlb
scas
mov
fnstsw
sbb
jle
push
cmp
xchg
cltd
xor
sub
cmpb
jns
fisubl
lods
pop
mov
cld
stc
fmul
out
stos
xor
divb
mulb
daa
test
xchg
xchg
mov
push
mov
push
adc
mov
xchg
and
pusha
xchg
daa
sub
cvtdq2ps
cwtl
mov
pushf
xchg
sbb
mov
fisttpl
lea
nop
jp
or
rorl
xor
ss
sub
jno
ret
data16
push
mov
push
jge
outsl
and
and
icebp
or
mov
mov
jp
jne
js
and
pop
fmull
ds
jle
jne
jnp
js
inc
outsb
es
add
shlb
loopne
ds
fiaddl
jecxz
popa
add
and
pushf
xchg
push
insb
cltd
fiadds
mov
inc
inc
jmp
test
xchg
flds
cmp
or
addl
or
fisubl
es
popa
insb
push
push
mov
int3
mov
cs
xchg
sti
xchg
ja
sarb
xor
dec
sub
push
mov
jo
xchg
dec
xchg
scas
lea
js
jbe
aam
xor
lret
lock
popa
sub
into
ret
movsb
daa
pop
sub
push
jo
leave
jns
xchg
add
cmp
movsl
pop
insb
xlat
js
enter
add
push
mov
movsl
lods
dec
repz
out
rcr
adc
adc
xchg
icebp
repz
jecxz
xchg
sbb
insb
xor
sbb
add
mov
cmp
push
sub
shl
lret
jae
cwtl
outsb
call
adc
loopne
andw
dec
jle
mov
aas
adc
and
aaa
pop
and
sbb
mov
in
add
xor
xchg
lods
add
jge
cmp
pop
out
ret
out
fidivrs
fld
and
cltd
addr16
inc
les
fisttpll
push
repz
mov
pusha
xor
ljmp
insl
gs
add
nop
push
push
jg
xor
pop
or
xor
or
lret
adc
mov
mov
jnp
repnz
mov
loop
cmpsl
mov
lock
and
adc
mov
inc
ljmp
and
add
je
mov
pop
mov
push
pushf
jg
cwtl
mov
shlb
xchg
out
lea
jne
adc
aaa
outsb
mov
loopne
rcrb
cmp
scas
out
add
cmp
int3
jle
sub
pop
jno
jl
cmpsl
xchg
mov
ljmp
push
xchg
idivl
fdivrs
jecxz
pop
stos
dec
movsl
lahf
cld
or
fdiv
dec
outsl
repnz
ret
cmp
cmp
sarl
int3
mov
shrl
mov
pop
fwait
xor
pop
or
jge
cmp
fstps
fildl
scas
xor
xor
and
push
shl
cmpsb
adc
mov
outsl
push
xchg
mov
cltd
add
in
add
mov
fisttpl
xchg
insb
inc
jg
lock
mov
ljmp
stc
add
push
dec
xor
jp
and
cmp
sarl
call
mov
loope
fsubl
and
xor
cltd
push
xlat
lods
add
cmpb
aam
xchg
mov
sbb
aam
ret
dec
cltd
daa
inc
aas
and
cs
push
jae
xor
sti
push
ret
clc
jb
mov
push
in
icebp
les
xor
and
mov
sbb
mov
inc
sti
leave
xor
das
call
cmp
loope
inc
mov
push
leave
lods
xchg
or
mov
mov
push
adc
sbb
daa
mov
sbb
sub
pop
mov
inc
xchg
test
insb
movsb
out
dec
xchg
mov
jae
lods
sbb
cs
das
cmpsl
jg
add
pop
adc
push
std
orl
mov
xlat
sub
mov
mov
negl
jl
enter
sbb
cli
sub
imulb
xor
in
fcmovu
lds
and
das
jbe
icebp
dec
mov
push
push
lds
movsb
test
incb
push
ret
aas
pop
ret
sub
sarb
xchg
hlt
xchg
push
and
add
sahf
sbb
push
andb
ret
bnd
fdivs
movsl
mov
and
and
pop
lcall
push
lret
das
in
push
call
cmp
push
adc
push
leave
cmpsl
cwtl
lock
jecxz
sub
scas
dec
aam
in
add
mov
mov
out
adc
and
xchg
xor
test
jmp
and
imul
or
cmovnp
clc
scas
sti
int3
pop
jle
mov
sbb
mov
cmc
mov
xor
subb
adc
rcrb
shl
loope
add
jecxz
jns
insl
lret
int
cmpsl
cmp
adc
pop
data16
jno
lea
scas
dec
cld
pop
js
int
mov
mov
filds
mov
std
int
mov
test
cs
nop
shlb
lret
adc
ljmp
pop
fiaddl
push
mov
lret
mov
or
out
out
inc
mov
dec
adc
popa
xor
adc
lcall
jne
xor
pop
dec
adc
mov
cmpsb
jmp
mov
movsl
or
ss
mov
insl
add
jnp
or
roll
jl
in
inc
stos
and
mov
push
call
loopne
dec
xor
repz
fisttpll
push
or
roll
add
dec
xor
jg
cmp
cmovs
cmp
mov
xor
inc
inc
mov
cmc
in
inc
lock
int
cmp
lds
jmp
aad
sub
xchg
push
rcrb
inc
mov
adc
psubb
lret
xor
sti
cmp
dec
mov
cmpsl
add
outsb
and
ljmp
pop
add
push
ret
in
dec
in
sub
xchg
repnz
movb
mov
xlat
inc
ficoms
nop
push
xchg
fnstsw
dec
push
push
pop
aad
add
cmp
ljmp
fs
xchg
mov
mov
fs
leave
ss
xchg
sbb
lock
into
mov
les
mov
sub
aad
les
movsb
fimuls
iret
cmp
repz
loope
adc
mov
sbb
dec
and
scas
imul
mov
inc
mov
dec
xor
testl
adc
fmuls
jg
or
arpl
fmull
adc
lock
lcall
cmpsl
push
jge
sbb
sbb
or
xor
mov
test
out
cmp
add
mov
push
sbb
testb
inc
rep
jl
xchg
or
xor
insl
cmp
test
and
pusha
pop
punpckhdq
enter
dec
sbb
xchg
pop
dec
or
in
inc
or
ljmp
add
shl
or
xchg
mov
sbb
cwtl
loop
js
cwtl
adcl
dec
mov
insl
addr16
cmp
aas
jne
cs
aam
inc
jl
test
lods
sub
rorl
cli
out
int3
ret
or
int
int
mov
sbb
or
fsts
pushf
cltd
mov
subl
fadds
mov
mov
and
lds
outsb
repz
dec
ret
subl
inc
mov
fldcw
jo
ljmp
pop
daa
cmp
xor
and
adc
aad
jbe
bound
jle
aaa
dec
mov
pop
xor
sub
lock
mov
jmp
stos
xor
shll
fbstp
insb
or
jne
mov
xor
and
in
fisubrl
push
negb
pop
adcl
les
lea
pop
xchg
dec
repnz
mov
or
repnz
lods
icebp
adcl
xchg
lods
dec
pop
xor
inc
stc
int
in
cli
mov
cmp
repnz
jb
stos
fs
les
cmp
adc
loop
xor
xlat
stc
mov
adc
mov
or
mov
inc
add
pop
inc
rolb
or
cmp
enter
cmp
cmp
adc
pusha
jbe
lret
sbb
mov
jbe
repz
in
out
and
or
and
xor
stos
add
jle
jb
xchg
jp
in
cmp
dec
mov
dec
loope
dec
adc
push
mov
je
outsl
mov
jbe
outsw
sbb
addb
aam
or
fildl
aam
xor
mov
add
decb
movsl
sbb
scas
xchg
adc
aad
out
mov
adc
push
dec
outsl
iret
jle
push
jb
test
inc
dec
out
or
pop
cwtl
fidivl
jmp
aas
cli
mov
sbb
adc
dec
cmp
scas
adc
out
ljmp
test
adc
pusha
test
pop
bound
aam
fdivrs
negb
sahf
pop
inc
and
jae
insl
outsl
enter
xchg
sarl
out
mov
repnz
popf
mov
mov
pop
adc
jae
xor
cmpsl
ja
and
imul
nop
pusha
mov
push
xchg
add
ds
inc
sarb
pop
subl
jne
sahf
inc
cld
cmp
fsubl
cmp
fistpl
clc
lret
or
cmp
mov
jg
cltd
adc
rorb
or
jle
push
jmp
scas
cmpb
and
movsb
pop
mov
scas
mov
pop
dec
inc
cld
jl
mov
leave
jbe
sub
sub
jo
movsl
mov
mov
std
es
sub
call
push
jo
out
sahf
lea
push
nop
xor
fistl
xor
mov
in
and
mov
movsb
int3
inc
testl
test
push
adc
bound
imul
int3
rcll
insb
push
mov
mov
test
lods
sub
add
cmpsl
dec
push
mov
insb
push
jge
mov
dec
mov
dec
arpl
sub
fucom
cmp
or
lds
pop
inc
sbb
pop
or
fsubp
pop
add
inc
jb
pop
sbb
mov
cs
pop
insl
flds
cs
push
inc
mov
movsl
movsb
add
test
jle
aas
mov
mov
mov
data16
xchg
push
cmp
aam
jp
jmp
outsl
jmp
dec
lock
cmpsl
push
jns
leave
ret
jbe
out
inc
lea
iret
pop
dec
and
xor
mov
or
mov
jb
jmp
cmc
cli
fldl2t
mov
scas
fld
and
xchg
push
mov
cmpsl
pop
lea
packssdw
jbe
add
xlat
mov
cmpsl
ljmp
push
test
jae
testl
cmpsb
xor
pusha
or
psubq
add
mov
test
movsl
xor
push
inc
imul
inc
mov
ljmp
pop
mov
call
adc
adc
test
test
cmp
dec
test
jo
inc
mov
loopne
incl
movsb
jns
out
sbb
jl
xor
rolb
clc
cmpl
mov
popa
cmc
out
loop
test
xchg
add
ds
mov
mov
dec
xchg
gs
push
orl
cmp
loope
hlt
movsl
pop
int
push
notb
xor
mov
or
nop
pusha
xchg
repz
fnstcw
xor
and
sbb
fldcw
xor
pop
iret
shl
cmpsl
push
mov
push
movsb
pop
mov
pmulhw
ljmp
stc
xchg
mov
lret
in
je
or
push
mov
cmp
pop
and
lea
mov
push
adc
inc
lea
sbb
push
adc
inc
or
cmpsb
jae
mov
mov
jp
leave
jbe
cmp
or
ljmp
jmp
data16
stos
outsb
je
std
add
test
cmc
movsl
push
movsb
lret
out
fwait
pop
sbb
or
es
out
mov
or
rcrb
sub
fstps
aas
and
pop
incb
outsl
add
or
repz
xlat
push
push
pop
and
push
popf
fwait
jae
mov
std
stos
outsl
cmp
adc
pop
inc
mov
nop
sbb
lcall
add
ljmp
jecxz
pop
dec
mov
inc
xchg
aad
push
add
mov
jge
pop
or
test
jbe
aad
sahf
push
mov
shrl
out
or
aad
xchg
or
fwait
inc
adc
je
pop
add
jnp
jnp
xor
out
div
aam
jmp
pop
leave
xor
sub
sbb
iret
stc
xor
or
xorb
pop
push
cltd
inc
inc
out
rcll
xchg
icebp
pushf
repz
dec
mov
fiadds
sub
add
pop
inc
pushf
aas
gs
jne
popf
sub
cmp
jns
iret
cmp
push
out
push
and
dec
mov
xor
pop
push
leave
rcrb
movsl
add
loop
dec
push
loop
add
mov
pop
fs
or
mov
into
stos
push
mov
mov
adc
or
xor
jo
inc
outsb
mov
sub
push
xchg
pop
call
mov
mov
pop
inc
rcrl
cmp
xor
mov
lret
sub
enter
cmp
lcall
push
stos
sbb
popf
daa
movsb
jge
jp
mov
loope
jmp
scas
aad
push
adcl
insl
xchg
rcr
sub
sub
xchg
dec
pop
mov
xchg
inc
mov
sti
inc
fcomps
add
lret
inc
les
jle
out
xchg
jne
xor
or
rorl
mov
mov
cmp
sub
aas
fstpl
cmpsl
std
rcrl
jmp
out
inc
test
push
xchg
inc
orps
mov
or
xlat
jae
das
push
cld
push
mov
rclb
xchg
cmpsl
jecxz
lea
push
addl
fisubrs
daa
jnp
pop
mov
test
lods
or
rcrl
dec
xchg
dec
outsl
shlb
sbb
popa
xchg
icebp
cmp
outsb
cmp
fldl
mov
dec
add
sub
stos
cwtl
inc
xchg
dec
lcall
mov
popa
cltd
push
arpl
mov
js
mov
xchg
leave
mov
sub
cmpsl
adc
xchg
xchg
aaa
pop
mov
mov
data16
dec
push
outsb
pop
cmpsl
xchg
int
sarl
sahf
dec
fwait
or
cltd
imul
lahf
ret
mov
add
xor
inc
sbb
dec
jns
mov
call
pushf
xchg
inc
push
loopne
pop
push
pop
mov
push
sbb
cwtl
rcl
test
dec
inc
inc
das
jne
stos
mov
sbb
jmp
lahf
jecxz
inc
or
and
je
and
push
int3
inc
stc
std
adc
dec
push
jge
mov
outsl
push
mov
mov
xor
faddl
push
cmp
out
negb
dec
mov
mov
iret
cltd
test
jns
cmc
mov
mov
xchg
out
add
mov
mov
sub
xchg
test
gs
jl
test
sbb
xlat
cld
fstps
sbb
in
jno
pop
sub
shlb
stos
inc
loope
sti
adc
mov
pop
les
ds
daa
fmuls
out
pop
pop
stos
ljmp
push
loope
inc
mov
loopne
mov
scas
imul
filds
push
xchg
adc
xchg
mov
adc
pop
and
sbb
fs
in
pushf
lret
fnclex
mov
je
pop
divb
sbb
or
insb
das
pop
idivb
lods
xchg
aad
xchg
repnz
subb
push
push
jnp
lret
sub
xlat
mov
jle
pop
xor
push
int
cltd
sub
mov
addb
outsb
leave
inc
push
mov
les
pushf
in
popf
mov
sbb
sbb
mov
jno
call
out
into
inc
push
pop
fidivrl
xlat
testb
inc
imul
data16
push
sbb
std
fcmovnbe
addr16
lods
je
fld
mov
fsubrl
imul
dec
lock
arpl
jge
in
add
std
movnti
xor
cli
push
popa
inc
jno
popf
test
int3
repz
inc
cmpsl
sbb
mov
scas
mov
fcomip
scas
cmp
ret
idivb
mov
icebp
cmp
test
in
lods
pusha
xchg
ds
lea
mov
push
cmp
pop
loop
in
mov
inc
outsl
out
cmp
mov
ljmp
mov
mov
add
jb
div
lock
mov
popf
cmp
in
dec
adc
mov
sub
add
inc
and
repnz
sahf
in
int
negb
sbb
pop
xchg
enter
rolb
loopne
mov
dec
cmpsb
mov
pop
movsl
mov
scas
dec
sbb
aad
sbb
in
push
inc
mov
ficompl
mov
sbb
mov
ret
mov
imul
pop
push
lahf
pop
mov
push
jecxz
rcll
arpl
nop
shlb
inc
xchg
sbb
cmp
in
pushf
sarb
dec
jnp
fstl
xor
add
lahf
aaa
roll
inc
cs
decl
fdivl
cmp
call
xor
hlt
adc
and
lock
js
push
in
adc
dec
nop
dec
inc
stc
iret
xor
push
rorb
movsb
ss
push
repz
mov
call
dec
std
lock
jmp
stos
mov
mov
aas
outsl
add
push
les
fisubl
cmpsb
mov
je
scas
test
mov
cmp
test
add
bound
imul
mov
ror
insl
jno
add
and
mov
xlat
sub
pop
fstl
enter
mov
mov
popf
inc
dec
mov
mov
mov
adc
pusha
test
arpl
fimuls
push
dec
dec
fwait
out
mov
loop
mov
stos
movsb
test
or
cltd
inc
in
out
aaa
popa
push
sbb
push
push
pop
ret
movl
imul
mov
push
outsl
or
and
adc
sub
fistpl
xor
ret
cmp
add
cmp
xor
popf
into
divb
fwait
movb
in
lahf
fidivrs
mov
adc
jae
cli
fldt
mov
push
xor
gs
enter
shlb
scas
sub
sub
repz
mov
cmp
enter
je
adcb
sub
and
xchg
gs
imul
sbb
adc
sbb
mov
add
jecxz
adc
les
data16
inc
movl
call
mov
ljmp
pusha
pop
sub
mov
test
cwtl
dec
popf
std
push
cli
mov
pushf
mov
xchg
push
filds
xor
test
lret
int
sub
jmp
and
dec
jno
or
mov
adc
cltd
fstps
inc
pop
pop
xchg
jecxz
mov
sbb
xlat
shrl
daa
push
or
fstpl
in
sbb
mov
mov
xchg
or
into
stos
out
fcmovnb
pop
and
and
xchg
xchg
and
stos
nop
push
jecxz
push
aas
dec
sub
inc
mov
mov
in
mov
outsb
imul
lcall
pusha
test
inc
std
test
dec
pop
and
inc
movl
xor
or
jmp
jmp
dec
pushf
push
lret
outsl
mov
cwtl
fs
dec
sbb
std
and
loop
shll
mov
dec
push
or
test
in
movsl
mov
loopne
sbb
jg
mov
jne
outsl
pop
pushf
sbb
dec
pushf
mov
sti
out
decb
mov
jl
adc
or
iret
xchg
push
sub
cltd
push
inc
inc
out
outsb
insl
jae
insb
sbb
mov
out
cmp
fildll
bound
pop
test
iret
mov
ja
sbb
stos
jge
mov
rorl
jge
push
jne
xchg
insl
xor
sbb
popa
xor
xor
jle
dec
dec
push
fcomi
clc
insb
movsl
int
dec
addb
jnp
std
mov
add
pop
jle
loopne
sbb
test
loop
mov
das
outsl
mov
test
jae
fldl2t
mov
push
popf
pop
sbb
test
push
adc
push
add
mov
test
adcl
mov
lea
xchg
push
mov
push
insl
mov
mov
xor
push
push
and
lods
fnstsw
pop
in
xor
push
out
cltd
lea
fs
in
jg
popf
mov
lock
pop
test
and
dec
xchg
rclb
loopne
mov
das
imul
jecxz
and
inc
push
imul
in
sbb
or
gs
lret
fisubs
inc
xor
or
jae
int3
add
mov
sbb
out
fldenv
popa
popa
lret
push
mov
cmpsl
push
jbe
lcall
sub
lahf
and
incb
push
inc
in
sti
cltd
mov
cmpsl
add
xchg
sbb
pop
test
adc
ljmp
pop
pop
popf
push
faddl
add
jmp
pop
cmp
das
out
hlt
cwtl
mov
mov
flds
into
test
sbb
sbb
lods
cmp
inc
lock
clc
into
sub
push
sbb
aas
dec
push
push
push
fwait
cmp
and
movsl
mov
stos
ja
xchg
and
std
cmp
cmpsb
sarb
xchg
push
xchg
inc
jbe
mov
movsl
lock
mov
or
fidivrs
int3
out
adc
sbb
inc
lret
imul
int3
cld
aaa
xchg
mov
fmuls
inc
jmp
iret
clc
ja
inc
xor
xor
in
push
ds
hlt
and
test
bound
push
mov
or
paddw
imul
popf
outsb
xor
movsb
mov
std
mov
incb
and
jg
cmc
pusha
add
sub
jo
dec
mov
jle
call
rcl
andl
pop
inc
and
test
push
mov
je
imul
xchg
mov
stos
imul
push
mov
idivl
rcrl
xchg
push
aas
mov
ss
scas
fwait
pop
cmp
pop
test
mov
dec
mov
push
cwtl
or
addr16
cmp
aas
repz
in
cmp
jne
xor
bound
pushf
mov
outsb
sbb
arpl
inc
insl
mov
shrl
sahf
and
out
xor
and
fsubr
or
movsl
ljmp
push
sbb
push
lcall
mov
add
cli
sub
lret
jno
push
hlt
inc
jno
adc
fsubl
mov
adc
cmc
cmp
mov
xor
rcr
mov
jmp
cmp
inc
cmp
ds
inc
sbb
or
mov
adc
scas
pusha
mov
movsl
inc
loop
adc
imul
inc
sahf
sbb
dec
ljmp
mov
add
jl
mov
sbb
adc
je
jb
fucomp
pop
mul
dec
add
dec
push
add
mov
mov
cmp
xchg
outsb
mov
dec
ja
mov
mov
push
aaa
xor
add
out
sbb
mov
inc
or
cwtl
pop
aas
and
inc
mov
mov
push
cmp
movsb
aas
jbe
aad
cmpb
adc
sub
or
mov
inc
mov
adc
fsts
xor
lock
xor
inc
pop
sub
mov
or
in
push
xor
mov
push
inc
adc
test
push
aas
mov
jle
xlat
aas
mov
xchg
gs
enter
clc
cmp
sub
imul
jg
xchg
adc
dec
push
stos
sbb
cmovbe
pop
push
xchg
and
jle
mov
dec
mov
out
mov
movsb
mov
out
pop
out
and
shll
repz
or
lock
lock
sahf
mov
cwtl
xchg
in
jg
mov
sar
lcall
fstpl
jmp
pushf
or
cmp
push
movl
icebp
aaa
lea
sbb
scas
fcom
sbb
outsl
jo
shr
cmp
mov
fnstsw
dec
repz
pop
fnstcw
push
jg
fdivrs
fwait
add
mov
jno
dec
pusha
femms
dec
lret
and
sbb
sub
outsl
sbb
mov
roll
pop
enter
jns
nop
ss
sub
dec
rcrl
mov
sbb
mov
js
mov
aad
mov
loope
negb
shlb
cmp
mov
lock
repnz
xchg
stos
mov
les
arpl
push
ljmp
sub
clc
push
adc
fdiv
fs
fdivl
sub
insb
ljmp
sbb
repz
mov
popf
and
mov
andb
pop
sub
das
out
lret
mov
ror
aad
icebp
movsb
pop
mov
mov
adc
lahf
cmp
push
sbb
pusha
int3
out
inc
add
xchg
fsubs
daa
mov
mov
lret
adc
inc
mov
jmp
cmpsb
or
loope
mov
xchg
cli
nop
xor
jl
std
enter
mov
imul
or
call
fs
fwait
dec
push
ljmp
xchg
jo
test
mov
add
les
shll
jae
adc
xchg
imul
pop
mov
xchg
outsl
dec
or
sahf
xor
jecxz
outsl
and
fs
mov
subb
lods
lds
in
stos
fstpl
sub
push
mov
inc
cmp
sub
lods
jo
push
inc
mov
cli
sub
jp
nop
mov
mov
mov
cli
mov
sar
and
jns
pop
out
pcmpeqb
pop
cmp
push
movsb
cmp
movsl
dec
loop
xor
stos
sar
call
scas
fldcw
fnstcw
sub
pop
inc
xchg
or
loopne
int3
arpl
test
mov
xchg
ds
mov
or
pop
mov
stos
and
or
ds
inc
xor
sar
stos
cmpsb
stos
aaa
cs
jnp
sub
shlb
push
stc
inc
fildll
std
mov
jnp
or
int
stc
mov
shll
fcomps
fwait
inc
push
ret
addr16
in
xchg
add
xor
jmp
push
es
adc
push
lods
addr16
xchg
and
lcall
or
adc
je
mov
or
fnstcw
fistpll
xor
jecxz
pusha
push
out
outsb
cltd
or
jmp
lock
pushf
dec
xor
lods
jecxz
in
mov
push
es
subl
ss
divl
add
xchg
pop
in
lret
fstl
jmp
or
aas
cs
cmp
push
lret
push
loopne
enter
cmc
js
sub
sbb
popa
dec
scas
xor
mov
add
in
sbb
mov
add
pop
popa
cmp
popa
out
pop
sbb
fdivrl
jecxz
push
lcall
arpl
lcall
cltd
insl
jle
mov
xor
xor
pop
or
cmp
jne
das
in
xchg
loope
inc
sti
xchg
xchg
dec
andb
ljmp
cmp
cli
or
shll
push
jo
in
fs
adc
sub
fs
inc
adc
xor
push
das
orb
addr16
ficoms
inc
mov
in
fadds
out
out
adc
fs
sub
push
or
loope
add
orb
test
dec
sti
push
mov
dec
sbb
das
cmp
dec
push
fldt
pop
pusha
push
scas
lret
inc
fwait
add
dec
aam
out
xor
xor
xchg
das
std
scas
inc
pop
push
jg
or
popf
sbb
int3
push
leave
mov
and
or
or
add
xor
decl
daa
rorb
fidivrs
call
fdivrs
xor
pop
push
pop
fiaddl
insb
jns
inc
pop
jl
dec
push
mov
cmp
das
out
xor
scas
ficoml
bound
or
push
or
mov
push
xchg
mov
je
jp
lea
mov
inc
adc
mov
mov
js
jecxz
stos
lcallw
int
jecxz
mov
mov
enter
sub
out
adc
mov
fnstsw
mov
and
cmpsl
xchg
in
or
fs
mov
inc
xchg
cld
insb
pop
hlt
jae
filds
das
into
fcompl
adcl
lcall
inc
int3
nop
imul
dec
cwtl
je
pusha
aad
sahf
cli
fwait
xlat
imul
sub
dec
jp
dec
jns
shrb
inc
daa
nop
imul
adc
push
mov
mov
mov
mov
cld
and
dec
inc
or
adc
xchg
dec
pop
cld
test
int
xchg
stos
mov
mov
and
xlat
lods
ss
flds
gs
xchg
inc
or
lret
rcll
testl
std
notl
shrl
xlat
sbb
test
sahf
outsl
mov
xor
out
mov
mov
and
push
inc
lret
adcl
sub
andl
pop
rcrl
mov
filds
insl
out
inc
lret
imul
das
das
xchg
mov
outsl
bound
int
cld
inc
ja
outsl
pop
sbb
and
adc
rclb
outsl
push
fsts
loope
or
fistl
jle
addr16
push
sti
mov
bound
cmp
pop
fsts
aam
js
dec
ret
mov
jl
je
imul
and
mov
mov
loopne
pop
mov
cltd
cmp
loopne
inc
popf
xor
pusha
pop
out
iret
jmp
pop
jecxz
out
and
jo
and
xchg
stos
xchg
test
jno
fsubrp
inc
sbb
mov
adc
mov
cmp
or
jno
shlb
cmpsb
loop
data16
pushf
lahf
out
xchg
in
jno
je
rolb
shll
sbb
lret
hlt
inc
push
jmp
lret
adc
push
cmp
insl
mov
loopne
push
xchg
and
mov
shrl
dec
adc
cmc
adc
add
ficoml
enter
aas
addr16
mov
outsl
adc
test
fildl
push
mov
icebp
jne
xchg
inc
mov
icebp
push
insl
call
adc
hlt
xchg
inc
cmc
js
dec
add
aaa
ds
lock
stos
neg
out
aad
call
movsl
inc
mov
es
xor
sti
mov
int3
push
insb
xor
aaa
shrb
es
sbb
push
loop
jl
popf
daa
add
dec
pop
nop
and
or
mov
fcompl
add
js
sbb
mov
and
lahf
add
cs
es
jp
sub
push
pop
push
repz
adc
cwtl
movsl
aad
xor
data16
sub
xor
or
std
andb
push
sahf
ficompl
cmp
xlat
or
call
xchg
mov
mov
dec
and
and
ret
xor
out
dec
movsb
imul
pop
orb
xor
dec
sub
mov
cmp
jns
test
scas
or
in
sarl
mov
xchg
push
fstl
imul
mov
aaa
mov
out
mov
in
xchg
xchg
xchg
aam
aam
mov
inc
xor
jge
dec
sbb
xlat
pop
pop
das
sbb
in
jno
rcrl
push
call
pushf
xchg
int3
and
xchg
out
fs
jae
push
fstps
sbb
mov
imul
ljmp
in
dec
out
or
mul
test
inc
or
and
adc
aad
hlt
add
addr16
jo
loope
fcomp
jbe
insb
aad
jmp
mov
shrb
ds
and
cs
push
out
mov
sbb
mov
inc
cmp
jge
jns
mov
push
jo
add
adc
mov
add
loop
push
mov
lods
ss
into
xor
pop
scas
jno
lea
xlat
jecxz
jnp
pop
inc
cmpsl
xchg
not
rorl
rcl
lret
add
mov
sub
test
push
out
iret
repnz
add
push
cltd
sub
cld
cs
inc
adc
ds
rcrl
jge
push
outsl
dec
cmpb
inc
push
imul
scas
cmp
scas
mov
xor
lods
mov
cs
ds
mov
cs
mov
std
nop
adc
add
fisttpll
roll
push
inc
mov
jg
fxtract
cmp
mov
inc
cmpsb
adc
je
jecxz
sti
jg
arpl
adc
push
xor
pop
dec
imul
push
jno
inc
push
jge
ret
or
xorl
call
sbb
xor
pop
xchg
mov
insb
hlt
mov
fcompp
shll
jno
or
fsts
movsl
in
insb
pop
dec
in
mov
outsl
gs
xchg
inc
inc
into
mov
gs
jo
sahf
add
leave
mov
mov
decb
gs
or
lods
stos
sbb
adc
jb
or
loop
and
aad
jle
pop
dec
leave
insb
sbb
aad
pushf
add
mov
ja
and
mov
jge
jns
fwait
stos
xchg
xor
jmp
mov
mov
pop
jmp
xchg
dec
ret
outsl
out
das
pop
sahf
ja
mov
inc
cmpsb
xchg
and
in
shlb
sub
insl
iret
gs
xchg
mov
cmp
xor
mov
orl
xchg
insb
jge
pop
add
ds
test
cmp
mov
jmp
sub
and
adc
sbb
iret
repnz
daa
call
fstpl
popa
lods
aaa
adc
lods
and
cld
push
call
jmp
jge
outsl
fldenv
pop
cmp
fiadds
sub
jns
mov
sbb
stos
aam
inc
xchg
sub
clc
imull
mov
insl
sbb
repnz
inc
xor
xor
insl
push
js
jmp
or
mov
and
out
mov
out
push
imul
mov
sbb
pop
lods
add
mov
or
and
out
adc
out
test
fsub
por
in
mov
daa
sub
mov
fs
add
push
idiv
or
imul
popl
sbb
imul
pop
adc
dec
and
vorps
loop
jg
jnp
mov
ljmp
or
jmp
inc
xor
inc
test
pop
add
das
inc
xchg
sub
stos
xor
movsb
pop
cmpb
out
dec
dec
xor
lods
push
jns
sbb
inc
inc
jmp
cmp
xchg
sbb
aaa
mov
pop
das
je
sub
pop
jbe
lock
jae
xor
arpl
jae
cltd
inc
and
andl
stos
loopne
lcall
and
mov
sbb
mov
jb
cmp
fistpll
cmp
rcrb
into
and
push
xchg
xchg
idivl
sbb
lods
mov
data16
cmp
sub
cmc
sbb
xchg
mov
lret
sbb
pop
loopne
aas
cs
bound
loop
sub
mov
fbstp
push
push
shr
icebp
cmp
out
icebp
jne
ss
lds
sbb
add
jns
and
sbb
cs
fxtract
adc
jno
push
imul
push
jecxz
mov
cmp
int
push
push
js
xor
mov
jbe
and
scas
cmp
push
xor
jae
xor
incb
cld
jg
inc
fsub
rep
sub
nop
dec
dec
jnp
mov
sarl
mov
mov
pop
in
pop
int3
sub
mov
jle
in
inc
fsts
mov
mov
or
and
inc
hlt
insl
inc
mov
dec
push
fstp
sub
xchg
frstor
adc
ljmp
mov
push
xchg
mov
xorb
nop
inc
push
outsl
xchg
push
inc
fmulp
add
inc
dec
dec
addr16
xor
js
add
xchg
add
loope
stos
jns
in
sar
jne
test
outsl
ret
mov
inc
or
iret
xor
xchg
fstpl
lret
mov
dec
xchg
stos
ret
jl
inc
inc
add
sbb
scas
pushf
mov
cli
dec
pop
leave
sub
jnp
xchg
xchg
mov
vcvtsi2ssl
inc
pop
mov
and
cmp
imul
mov
scas
rclb
pop
dec
subl
mov
mov
sbbb
add
lods
xchg
fisubrl
mov
or
es
adc
movntps
lahf
xchg
adc
push
or
inc
adc
jp
inc
leave
leave
dec
insb
xor
jl
adc
and
data16
test
and
sub
sahf
adc
sub
out
mov
fdivr
stos
dec
xchg
pop
push
arpl
icebp
mov
push
cltd
add
pop
dec
cli
pusha
in
adc
stos
repnz
jns
pop
xor
mov
pop
jge
push
inc
xchg
mov
adc
dec
in
and
iret
ret
mov
xchg
incl
sub
xchg
aaa
jno
out
hlt
jg
mov
repz
and
pop
xchg
and
cmpsb
mov
bound
xchg
xchg
cmp
sub
xor
mov
iret
cmovs
sti
mov
mov
sbb
xchg
push
jno
dec
lcall
add
shl
push
or
mov
mov
movl
nop
rep
sarl
lret
xor
in
inc
ds
scas
and
popf
adc
movsb
mov
lea
jae
cltd
mov
mov
xor
sti
and
movsb
jns
push
fistl
lock
and
fcmovbe
push
inc
arpl
mov
xchg
and
test
dec
cmpsl
mov
mov
or
lahf
repz
rcrb
das
sub
aas
xor
popf
aad
outsb
sbb
xchg
mov
xor
rclb
loop
addr16
cmpsl
mov
xchg
loope
pop
jb
fwait
dec
cltd
mov
mov
adc
mov
jae
sti
push
aam
aad
fdivs
mov
std
sarb
outsb
andl
inc
pusha
cltd
cwtl
mov
and
aas
pop
ret
jecxz
add
and
repnz
and
cltd
call
mov
jle
orl
inc
push
ds
push
ret
xchg
repz
and
mov
pop
push
cmova
out
push
into
in
loope
push
shll
pop
lock
pop
dec
xor
xchg
fbld
rcll
sbb
outsb
jle
pop
mov
mov
mov
cmpsb
test
movsl
xchg
das
sbb
xor
mov
and
pushf
push
sbb
call
ljmp
adc
stc
inc
push
sbb
jecxz,pt
nop
lcallw
mov
cmpsb
cmpsb
inc
stos
mov
int
cld
push
mov
push
adc
nop
mov
adc
daa
adc
ss
ret
push
stc
push
adc
and
repnz
push
pop
lods
cmc
notb
mov
cld
dec
nop
clc
cmc
lret
jb
in
mov
aam
ss
clc
add
jmp
jp
negl
cmp
fnstcw
mov
in
outsb
or
sti
pop
inc
cmp
cmpb
lcall
adc
leave
cmp
imul
xor
movsb
inc
and
or
adc
testb
fstl
push
xchg
inc
mov
fiadds
in
pop
bound
mov
dec
shlb
mov
mov
rclb
adc
and
cmp
xchg
sbb
adc
mov
jl
ds
or
pop
popa
or
int3
andb
test
mov
xchg
lret
xor
lret
dec
bnd
lods
inc
sti
and
popf
adc
ret
movsl
lcall
and
lock
and
jnp
pop
cmp
mov
fld
imul
xor
in
and
inc
sub
bound
shll
push
push
lcall
lret
shrb
outsb
mov
sbb
push
out
cli
rclb
popf
xchg
xor
sub
push
add
mov
sbb
push
pop
test
int
add
or
ds
jo
ret
mov
mov
sub
shlb
stos
jp
jmp
test
xor
bswap
loop
adc
pusha
in
subb
in
sbb
mov
jb
arpl
mov
cwtl
sub
mov
or
sbb
cmc
pushf
mov
std
push
ss
outsb
sub
jl
div
and
mov
and
shlb
cmp
adc
mov
push
fxam
sbb
sub
std
cmp
pusha
in
lea
stc
xchg
push
repnz
mov
lock
iret
sub
pop
mov
xchg
mov
dec
rorb
cmpl
push
int
jae
cwtl
mov
dec
repz
inc
in
nop
mov
scas
movsb
outsb
and
int
mov
mov
xor
mov
push
ret
imul
pop
stc
aad
cmp
mov
mov
fs
mov
sbb
and
ret
xor
test
es
scas
fmull
pop
test
imul
in
ds
inc
fadds
adc
cld
mov
sbb
sbb
arpl
clc
pop
repnz
in
push
outsb
xchg
inc
push
sub
jle
add
fistpll
movsl
pop
xor
xor
fidivs
ds
add
call
cmpsb
sub
lods
popl
xor
in
mov
adc
jle
test
pushf
and
pop
push
push
ret
dec
test
addr16
inc
mulb
data16
icebp
ss
xchg
or
lret
jae
inc
fisubrs
jns
mov
decb
sub
dec
xchg
adc
mov
shlb
sbb
dec
data16
fcmovnb
xor
jmp
in
jno
dec
cmp
jg
insb
inc
std
push
jnp
push
and
loop
lods
cmp
dec
std
or
decb
dec
mov
into
lods
jns
mov
sbb
push
into
sahf
je
and
jb
stos
lcall
and
dec
or
xchg
lods
adc
mov
mov
dec
sahf
mov
inc
jae
nop
idivl
cld
aam
push
jge
push
loopne
mov
xchg
jecxz
and
aad
cmpsl
jnp
xor
lret
fldl
adc
ss
xchg
dec
add
outsb
fucomi
jae
push
sbb
mov
xorb
push
in
out
xchg
push
jmp
push
xor
add
fdivrl
jne
ds
shll
mov
inc
mov
inc
mov
in
sub
jl
leave
mov
insb
mov
xchg
sub
adc
dec
sub
mov
test
and
sub
cwtl
inc
ds
filds
mov
xchg
loopne
pop
jecxz
xlat
js
enter
and
out
pop
jmp
fsts
dec
and
test
pop
sbb
jge
mov
adc
push
lcall
inc
adc
xor
popf
xchg
jg
lock
dec
cltd
xor
aaa
lea
fidivs
sbb
and
mov
fidivrl
cmpsl
and
lret
fmulp
add
adcb
sarl
cld
adc
sub
loope
popf
scas
lahf
imul
jb
push
clc
out
inc
inc
daa
dec
sarl
sbb
jno
out
add
and
faddl
call
mov
push
insb
ljmp
sub
inc
cmp
iret
movsb
cmp
pop
test
mov
cld
adc
pop
fwait
sub
idiv
push
mov
cld
sarb
sub
pusha
ljmp
int
xor
push
sub
xchg
jmp
xchg
push
pop
jbe
mov
cmp
ret
mov
addr16
pushf
clc
je
enter
neg
cmp
mov
hlt
mov
cmp
mov
sub
das
sbb
push
mov
scas
cs
lods
xchg
imul
in
push
mov
jno
xor
pop
dec
idivb
repnz
sbb
jg
push
xor
push
pop
mov
lahf
les
movsl
in
shrb
mov
pushf
dec
outsb
test
fcom
or
pop
xor
decb
ds
mov
out
xchg
pop
icebp
adc
push
pop
add
mov
out
pop
divb
or
xchg
jno
xchg
xchg
and
sbb
mov
stos
jns
pop
clc
adc
out
pop
je
jmp
ret
add
push
int
aas
xchg
fsubs
and
syscall
cltd
mov
stos
mov
add
xchg
cmp
inc
xchg
in
mov
cmp
jg
sbb
mov
or
cmpl
scas
cli
sbb
lret
sbb
int
jecxz
push
jge
fstp
test
mov
push
sub
xor
or
sbb
jg
test
les
cs
jb
outsb
push
test
bound
insb
fisubs
mov
jl
ret
pop
pusha
cmc
pop
mov
mov
lods
jo
inc
mov
and
gs
pop
xchg
mov
mov
aas
adc
or
rcrb
movsb
sbb
test
pop
decl
push
jns
rcrb
sahf
cmp
jp
ds
negb
push
rsqrtps
cltd
push
xor
in
mov
aad
inc
mov
call
nop
dec
mov
xor
pop
xchg
ja
fiadds
imul
sbb
mov
sahf
stos
or
repz
pop
mov
xlat
imul
pop
xchg
mov
out
fwait
jmp
sub
xor
in
fildl
pop
loop
dec
subl
das
dec
push
fcoml
mov
iret
xchg
invd
out
in
pop
pop
cwtl
out
pop
jl
stos
fwait
xchg
outsl
jne
sbb
int
add
cmp
push
lret
pop
cmp
jge
aaa
test
adc
gs
add
push
xchg
sti
mov
jbe
xchg
sbb
fists
popa
add
inc
subb
mov
sub
pop
adc
insb
scas
mov
mov
stos
cmp
cmpsb
cmpsl
jne
mov
xchg
aam
insl
js
mov
test
or
iret
pop
mov
data16
xchg
push
pop
mov
lahf
clc
jmp
pushf
aaa
push
xlat
aad
mov
inc
lea
stos
add
aad
aas
add
bound
aam
cwtl
insl
mov
add
push
je
xchg
shll
lahf
addr16
mov
test
pop
movsb
add
or
sub
in
imul
es
and
adc
jbe
rcll
inc
clc
lock
pop
sbb
or
mov
les
mov
push
lods
aad
jl
test
xchg
mov
test
subl
mov
enter
int3
cmp
das
inc
jecxz
pop
mov
xor
xchg
pop
mov
lods
fimuls
xchg
out
or
gs
popa
imul
inc
stc
aam
test
jne
addl
add
cmp
cmp
jne
dec
and
mov
mov
dec
and
cmc
or
cltd
lods
sub
jp
jbe
xchg
lods
movsb
ret
push
jnp
add
dec
call
push
testb
mov
mov
jo
add
hlt
leave
mov
ficomps
and
sbbl
xchg
movsb
cmp
jo
js
cmp
clc
and
mov
push
imul
in
pop
sub
pop
xchg
cld
test
pop
repz
inc
pusha
enter
and
dec
jmp
loop
mov
arpl
cmp
push
stc
adc
iret
pusha
adcb
xchg
outsb
sbb
loope
inc
cli
or
gs
icebp
pop
hlt
fstpt
pop
sbbl
or
mov
fcmovu
ja
adc
icebp
sub
push
adc
or
add
decl
cmc
js
sbb
popa
xor
subl
inc
daa
jno
outsl
loop
punpcklbw
pop
dec
push
gs
mov
cltd
dec
jl
jb
cmpsl
pop
xor
sbb
das
sarl
insl
adc
cld
into
movsl
xor
lock
inc
sbb
jno
sahf
scas
icebp
pop
xlat
scas
push
ds
inc
addl
mov
push
nop
push
movsb
pop
incl
sarl
arpl
lahf
add
scas
mov
es
add
lret
mov
ja
and
rcrl
adc
mov
inc
dec
adc
inc
inc
mov
mov
and
pop
or
inc
fs
cmp
stc
pop
push
popf
addb
inc
andl
stos
hlt
cltd
test
mov
sub
xor
test
dec
inc
icebp
and
adc
adc
stos
filds
push
mov
mov
lea
xor
mov
packssdw
add
xchg
ja
pop
sahf
enter
scas
pop
or
bound
and
mov
xchg
xor
out
jae
jecxz
std
cmp
fsubp
fisubrs
test
sti
adc
incl
push
pop
inc
fbld
push
insl
sub
jecxz
push
rol
mov
frstor
push
adc
data16
popa
ja
add
scas
or
and
cmp
or
mov
sub
movsl
loope
fimull
out
sar
out
xchg
pop
mov
into
ror
sbb
sub
jge
shl
aad
mov
pop
insb
fstpl
aaa
fucomip
rorl
adcb
cmpsl
adc
dec
sub
push
sahf
xchg
inc
jge
add
jbe
in
inc
mov
clc
mov
jno
js
flds
mov
push
lock
std
push
or
fnstenv
push
push
push
fmuls
xorl
out
rcrb
cli
jae
adc
data16
out
lea
enter
stos
mov
scas
imul
sbb
inc
in
icebp
das
or
call
adc
imul
sub
aad
jno
sub
push
xor
jg
mov
daa
or
insl
repz
mov
push
dec
or
dec
pop
add
pop
bound
mov
movsl
add
push
aam
xor
mov
xorb
pop
and
inc
not
push
mov
jecxz
loope
ja
stc
out
add
add
lret
mov
xchg
xor
jle
cmp
shll
mov
xor
mov
arpl
jo
xor
shlb
sbb
mov
xchg
mov
xor
lods
or
les
dec
cmp
sbb
inc
jo
jne
mov
fistpll
shlb
addl
mov
sbb
sub
ds
adc
fidivl
mov
push
lods
jle
xchg
test
push
jo
fldl
mov
sbb
fistpl
repnz
push
incl
lods
jle
push
mov
cmp
dec
mov
lods
push
in
adc
xchg
ret
ja
test
in
add
cmc
call
dec
inc
mov
jnp
icebp
imul
in
cmp
push
sbb
insl
xor
stc
pusha
popa
push
adc
cmpb
and
push
stos
cmp
xor
xor
dec
fldl
inc
dec
push
sbb
dec
push
sub
bnd
fstl
fcmovnbe
mov
inc
or
adc
je
add
inc
mov
call
jb
push
lods
divb
test
mov
bound
insl
cmp
ret
out
ret
and
mov
cmp
dec
add
jne
mov
shll
enter
gs
adc
xchg
xor
or
mov
lret
push
xor
jmp
test
fsubs
int
jae
pop
rolb
jbe
call
out
mov
subl
inc
mov
js
cmp
or
test
or
adc
pop
adcb
roll
fiaddl
adc
xchg
fsubrs
cmp
push
test
jecxz
lahf
mov
jae
sbb
dec
ja
icebp
fnstenv
xchg
push
jle
je
stos
mov
dec
adc
orl
dec
movsl
test
mov
jae
fnsave
rorl
fiaddl
call
iret
lahf
xchg
pop
mov
bound
shrb
push
mov
test
arpl
sbb
adc
jbe
sub
rcrb
ret
add
in
adc
fisttpll
dec
orb
fidivrs
cmp
push
cmpl
out
xchg
inc
pushf
out
sub
push
jne
sti
fs
mov
dec
inc
sub
cs
sub
icebp
sbb
sbb
pushf
imul
dec
or
outsb
fcmovnbe
add
test
bound
imul
jp
repnz
movsb
push
jecxz
inc
and
ds
jno
popa
mov
loope
push
fstp
push
cmpsb
mov
or
mov
and
int
daa
xchg
inc
sti
mov
out
pop
inc
push
push
movsb
fiadds
cmp
mov
jb
mov
ret
stos
mov
jno
jnp
sarl
xchg
mov
add
and
pop
dec
mov
sub
ds
shrl
sbb
lcall
adc
out
jne
adc
dec
jl
cs
test
lret
mov
rorl
mov
xor
stos
pop
inc
test
out
pop
lock
add
and
mov
mov
lcall
pop
or
shl
cmpsb
loop
icebp
pop
cli
pusha
lds
pop
xchg
sahf
out
in
in
clc
popa
mov
popf
outsb
ljmp
mov
aas
into
iret
pushf
or
fwait
insl
in
push
adc
loopne
icebp
iret
sub
jae
pop
push
cmp
loop
mull
pop
sub
addb
cmp
stos
lods
sub
lret
jmp
ljmp
jmp
pop
call
call
add
imul
inc
js
dec
rolb
mov
outsl
lock
lahf
jl
pop
xor
adc
push
hlt
mov
inc
mov
mov
loope
sub
out
lods
pop
stc
and
aam
pop
fldenv
push
inc
test
iret
xor
push
fbstp
mov
mov
lock
xor
or
rolb
test
pop
rcr
leave
cmp
mov
dec
xchg
jbe
int
repnz
sbb
leave
lcall
jge
xchg
lcall
xchg
dec
add
xchg
imul
jnp
sbb
gs
sbb
iret
sub
scas
adc
xchg
jecxz
mov
or
vcvtps2pd
dec
cmp
jo
xchg
loopne
push
xchg
mov
dec
cs
push
mov
and
test
cmp
cwtl
inc
stos
dec
aad
pop
push
aaa
fldt
pop
call
jg
dec
adc
sub
ljmp
sahf
xor
mov
loopne
cwtl
out
mov
lahf
sub
out
test
popa
fsub
jae
incb
aad
sbb
xchg
out
sub
cld
xor
sahf
add
enter
push
aad
outsb
fwait
testl
mov
xchg
sbb
cmc
dec
test
test
into
clc
cmp
xchg
into
xchg
test
inc
je
xlat
and
lret
pop
mov
pop
movsb
scas
add
cltd
add
rorb
inc
pop
lahf
lcall
adc
les
mov
adc
jg
inc
sub
cmp
mov
adc
jecxz
sub
jne
adc
and
fldenv
xchg
iret
ret
pop
pop
xor
inc
cmpsl
out
push
pop
pushf
fwait
bound
jne
push
fstpt
daa
push
ljmp
lea
ficompl
adc
cmpl
inc
dec
addr16
or
and
jmp
lock
mov
out
dec
insb
leave
int
add
and
inc
sbb
enter
jae
adcl
movsb
into
pushf
vmovd
pop
inc
cmpsb
sbb
dec
fisubrl
push
lock
add
xor
pop
adc
inc
scas
inc
out
inc
rolb
loope
and
or
jnp
mov
repnz
xor
mov
cmp
arpl
js
sbb
push
cmp
sub
pusha
test
jnp
test
fdivs
scas
jecxz
lea
mov
mov
push
jnp
jo
add
add
adc
outsl
xor
mov
jp
mov
xchg
out
xchg
out
xor
pop
nop
inc
push
subb
push
and
mov
incb
push
arpl
sbb
dec
pop
scas
call
sbb
mov
icebp
imul
stc
jnp
ret
mov
mov
xchg
call
stos
push
popf
incl
inc
jbe
sbb
and
adc
dec
aam
aas
adc
inc
sti
dec
xchg
mov
lret
mov
xchg
and
pop
mov
adcb
pop
push
insb
push
xor
push
stc
ljmp
ja
and
dec
xor
outsl
scas
and
push
je
decl
insb
out
shlb
iret
push
and
jg
xor
sbb
push
sub
sbb
subb
sub
insb
nop
in
imul
sub
xchg
add
mov
or
mov
in
ret
loop
nop
or
sub
fwait
test
and
and
adc
inc
addr16
jle
mulps
es
fwait
jb
insl
test
mov
sub
push
lea
call
fidivrl
sbb
lret
into
sbb
mov
cmp
sti
add
fstl
and
test
leave
stc
sub
stos
out
or
push
leave
inc
pop
xchg
mov
lods
push
out
pop
jecxz
mov
test
outsl
push
push
or
adc
mov
adc
adc
jne
inc
ret
inc
cmp
test
shrb
sub
mov
pop
leave
jo
lret
mov
scas
addl
inc
in
ret
scas
rcrb
xchg
mov
mov
mov
and
sub
rclb
xchg
pop
or
jle
es
pop
and
stos
sti
rorl
into
stos
jge
fs
rcll
test
sbb
xchg
inc
imul
mov
daa
mov
jns
int
and
lret
enter
lret
roll
leave
aas
bound
mov
adc
lahf
cltd
fidivl
cmp
insb
mov
push
das
out
sub
in
add
push
jmp
mov
inc
lock
push
test
xchg
lock
test
or
dec
adc
cmp
lea
cmp
dec
movsl
push
mov
dec
imul
mov
jb
adc
mov
sbb
push
jno
jb
pop
push
sbb
aaa
mov
push
cmpsb
cmp
xchg
xor
adc
stc
aam
push
fsubr
add
fcomip
or
movsb
test
pop
fistps
stos
lods
mov
cmp
loop
push
mov
jecxz
pop
sahf
add
or
and
test
sti
sbb
arpl
fst
push
inc
or
insl
adc
lds
xorl
gs
es
pusha
out
dec
adc
rcrl
loope
movsb
bound
inc
out
rclb
fisubl
outsl
mov
and
pop
pusha
int
ja
xchg
sbb
adc
test
xor
test
inc
mov
stc
loope
imul
popl
push
arpl
adc
xor
inc
psubsb
xchg
fdivrl
jb
mov
cmpsb
mov
fstpl
push
fimull
jae
testl
adc
fidivrs
jo
outsl
cwtl
mov
int3
sbb
sub
pusha
adc
pminsw
mov
sahf
mov
xchg
pushf
inc
add
mov
xlat
ret
pop
pop
into
aas
les
cmpsb
pop
adc
loop
mov
cwtl
into
aaa
dec
add
insl
out
jne
or
or
repnz
das
scas
mov
mov
fisubrs
jae
into
jl
push
xor
adc
sub
sbb
add
pop
push
mov
dec
inc
and
inc
add
cmpsl
inc
lret
imul
add
sarb
add
jle
pop
pop
jg
ret
xorb
adc
mov
fdivs
mov
negb
mov
inc
inc
cvtpi2ps
sub
mov
mov
loope
call
jns
mov
insl
jmp
mov
les
dec
scas
push
sti
repz
in
mov
mov
dec
jl
mov
imul
test
bound
cltd
loopne
jae
mov
jne
call
jg
mov
inc
mov
and
movsl
ss
cmp
cmc
inc
dec
hlt
aad
idivb
mov
xchg
sahf
dec
leave
nop
mov
ret
jno
loopne
daa
push
xor
sahf
int3
cld
stos
test
cs
dec
xchg
test
sar
mov
int
xchg
addb
cmpsb
lea
inc
xor
lods
aas
shlb
call
push
mov
rclb
inc
data16
and
push
ret
add
mov
cmp
insl
jmp
shlb
ljmp
aaa
mov
dec
and
rcrl
in
gs
movsl
sbb
ret
lock
pop
iret
and
xor
fnstenv
sbb
and
fwait
lds
subb
pop
xor
push
mull
repz
jp
push
add
mov
dec
lods
and
pop
mov
imul
pop
mov
punpcklwd
into
test
lret
push
mov
sub
jp
rcr
lods
push
lods
and
xor
mov
fwait
pushf
or
xor
fmuls
sub
andl
repz
mov
lret
bnd
ret
xchg
push
call
adc
push
out
jg
mov
pop
mov
repnz
ret
sub
mov
insl
mov
dec
jo
push
inc
loope
xor
stc
pusha
fsubp
dec
loopne
xor
pop
mov
dec
and
dec
ficoms
fwait
mov
pop
xlat
stos
shlb
xor
adc
or
add
test
stos
mov
or
imul
jp
pop
mov
xor
ja
sahf
dec
leave
inc
add
sbb
sub
xchg
cmp
arpl
mov
or
cld
xor
mov
es
mov
arpl
cld
fcompl
lock
pop
das
sub
stos
mov
imul
lods
in
adc
fnstcw
mov
add
or
std
mov
xchg
xlat
clc
mov
jl
lret
jl
fmuls
jge
gs
jne
lcall
inc
xor
aad
mov
sub
xor
inc
xor
xchg
cmp
addr16
loope
fs
rcl
shrb
repnz
scas
jne
pop
jg
sbb
fcmovnb
pop
add
pusha
or
out
dec
sbb
jns
cmp
sar
sbb
rorb
loop
and
inc
push
fsubrl
popl
push
mov
hlt
js
inc
push
xor
movsl
pop
push
movsl
sub
mov
sbb
mov
or
xor
test
mov
cmpsb
jnp
mov
maxps
ljmp
arpl
das
pop
ljmp
in
xlat
lea
sahf
or
add
cmpsb
or
add
loop
fiadds
inc
into
cli
stos
add
xchg
aas
pmulhw
xor
pop
insb
mov
or
push
xlat
aad
mov
cmp
icebp
mov
inc
into
loope
adc
push
leave
jnp
inc
or
jmp
cmc
xchg
push
sbb
mov
cmp
mov
cmpsb
es
js
out
add
in
stc
icebp
cmp
pop
out
push
cmpsb
sti
test
pop
xor
outsb
ficomps
cld
or
lret
jae
sbb
mov
xor
imul
adc
in
stos
xchg
insw
aam
mov
sbb
repnz
cmp
mov
cli
lds
arpl
outsl
bound
outsb
push
lret
not
clc
push
xchg
xchg
gs
xchg
jns
test
popf
test
ss
test
sub
inc
push
imul
push
insb
aam
mov
pop
xchg
and
inc
loopne
loope
cmp
push
ljmp
mov
pop
aam
data16
push
push
mov
sbb
xlat
pop
mov
into
lods
inc
sbb
adc
leave
pushl
or
xchg
das
mov
jmp
lods
inc
sti
clc
mov
dec
xchg
push
inc
xor
cld
cmpsl
xchg
pop
dec
xchg
fisttps
fs
add
mov
xor
inc
inc
mov
test
jae
or
pushf
inc
dec
pop
dec
jae
xchg
xchg
stc
xchg
ss
xchg
push
jge
or
xor
xor
cmpl
out
hlt
sahf
imul
arpl
js
fistpl
inc
add
push
dec
cmp
mov
nop
jle
loop
xor
push
or
lea
fildll
test
jno
xchg
ja
xchg
dec
shll
test
push
test
push
int3
xlat
aad
fwait
pusha
paddsw
sub
idivl
sti
mov
mov
mov
sub
pushw
popf
fwait
inc
jmp
out
xchg
jge
add
aas
mov
or
mov
mov
popw
dec
push
movsl
add
cmpl
xchg
fsub
lods
push
test
and
jge
dec
jbe
sbbl
outsb
jne
push
cmc
es
insb
dec
cli
inc
xchg
dec
out
pop
ret
bound
xor
xor
and
lock
cwtl
dec
mov
andl
ret
jae
jae
movsl
mov
jae
xchg
pop
xchg
les
dec
jo
dec
std
dec
push
shll
and
inc
aas
mov
push
xchg
xorb
dec
cmp
push
xchg
push
mulb
andb
sub
pop
out
inc
push
cmp
sbb
dec
icebp
xor
mov
xchg
repnz
cmpsl
push
movsb
xchg
or
push
inc
dec
jmp
jl
dec
or
into
fwait
ss
mov
dec
pop
movsl
sbb
push
push
mov
xchg
cmp
cmp
mov
xchg
pop
and
bound
xor
ja
jle
xchg
xorl
add
pop
mov
sar
push
dec
lea
sub
dec
mov
enter
adc
popf
stc
stos
out
pop
mov
and
lods
inc
out
jl
cmp
cmpsb
pusha
lods
mov
cmp
dec
cmp
sbb
outsb
pushf
insb
ret
inc
leave
sahf
cmp
bound
or
pop
lahf
stos
push
je
lea
mov
ss
out
pop
pop
stc
fiaddl
cmp
and
arpl
jae
sti
repnz
lea
cmpsb
or
imul
or
push
lcall
mov
ret
xchg
xor
pushf
mov
jp
mov
pop
cwtl
das
cmp
stos
lds
pop
out
xor
pushl
out
aaa
jo
or
cmpsb
insb
jl
dec
ffreep
lahf
popa
or
test
push
or
sbb
ds
mov
inc
pop
ljmp
dec
dec
push
aam
dec
adc
stc
xchg
or
out
push
fsubrs
mov
or
stc
xor
and
mov
in
stc
sub
and
push
or
sub
rcl
mov
sahf
sarb
xchg
movsb
pop
xchg
ds
sbb
add
movsl
mov
push
add
insl
xchg
ds
xlat
insb
rcll
mov
pop
mov
test
test
in
aaa
push
and
ss
dec
repz
push
aad
mov
inc
ja
dec
push
enter
push
dec
jmp
in
or
mov
out
sarb
sub
xor
adc
inc
out
sbb
arpl
movsb
lcall
push
mov
xor
adc
dec
jp
push
cmp
adc
jge
push
rcll
shlb
sbb
ljmp
mov
mov
mov
cmp
jmp
cmp
imul
icebp
mov
js
xor
movsl
das
testb
jmp
cli
lahf
push
inc
fnstsw
es
leave
and
xchg
imul
lret
xchg
test
jle
inc
mov
or
xlat
shlb
insl
mov
and
enter
outsb
std
shlb
ja
pusha
decb
mov
adc
adc
cmpsl
xchg
inc
popf
dec
adc
sbb
push
lcall
pop
call
ret
bound
les
cmp
push
fisttpl
loop
out
push
push
adc
pusha
outsl
or
aad
jl
sub
out
sub
rclb
aas
aas
jg
mov
in
rcrb
xor
out
adc
rcrb
inc
test
xlat
xor
add
es
jnp
xor
cld
jecxz
jnp
pop
dec
jns
out
adc
imul
jmp
mov
cmp
sub
jbe
pop
mov
and
fstl
repnz
clc
ret
mov
cmc
imulb
pop
int3
jb
les
cmp
fstps
jo
notl
int
inc
pop
and
daa
sahf
daa
jg
in
cltd
je
je
inc
mov
subb
in
fwait
dec
pop
mov
popa
mov
not
mov
dec
in
mov
imul
mov
cmp
aas
jb
loop
push
cmp
enter
or
adc
and
mov
call
idivb
ret
mov
mov
in
mov
mov
xor
shrb
ljmp
cmp
adc
fistpl
mov
mov
mov
leave
mov
cld
sub
mov
xchg
enter
pop
cld
cltd
sahf
popa
insb
std
mov
bound
jb
push
movsl
jmp
mov
enter
adc
stos
cwtl
or
add
popl
iret
or
rcll
mov
roll
jle
scas
cmp
push
and
cmp
pop
pop
inc
les
push
or
dec
mov
adc
stos
mov
fdivrl
and
dec
push
lea
in
inc
sahf
adc
mov
mov
cld
aam
sub
mov
outsb
popa
sbb
cli
fbstp
push
rolb
testb
cmp
nop
in
mov
arpl
lea
cmc
repnz
xchg
subb
lods
mov
insb
xlat
cmp
xor
or
cmp
xor
idiv
jo
cmp
aaa
cmp
pop
adc
xchg
xchg
push
rol
movsb
jp
xor
jge
rorl
inc
or
js
out
pop
outsl
jnp
mov
xchg
jae
xor
idiv
mov
test
jmp
cmp
inc
mov
jl
lods
adc
jnp
lret
jp
pop
mov
das
xchg
cmp
xchg
in
js
sub
and
scas
mov
xor
mov
and
fnsave
mov
iret
adc
sbb
xor
js
enter
aam
pop
xchg
aaa
cmc
jge
lock
pushf
rorl
lds
push
dec
and
push
adc
fldcw
sub
push
push
ret
mov
repnz
xlat
repnz
hlt
and
jmp
movsl
pop
clc
pop
adc
dec
xchg
pop
add
ja
loope
mov
xchg
movsl
int
rcrb
adc
add
test
imul
pop
sahf
xchg
pop
cmp
push
sub
aam
cmp
and
mov
add
sub
inc
push
inc
dec
test
inc
call
lods
ret
loop
or
mov
cmp
inc
inc
fisubl
adc
enter
test
jecxz
test
mov
popf
ljmp
int
cmp
mov
out
cmpsb
cwtd
xchg
xlat
hlt
mov
xchg
push
jg
fwait
js
bound
call
mov
and
mov
mov
mov
fadd
cwtl
mov
fisttps
cmc
inc
inc
pushf
push
push
iret
cli
dec
push
mov
sub
pop
stos
ljmp
addb
outsb
jnp
insb
mov
stos
popa
sub
inc
or
cli
lea
jecxz
mov
mov
in
mov
and
ror
out
int3
or
and
dec
and
jb
hlt
mov
int3
sbb
inc
xchg
mov
lret
ljmp
into
cmpsl
mov
mov
mov
add
fldl
jge
fidivrs
mov
adc
pop
loop
jbe
pop
and
hlt
fwait
mov
andl
jns
fists
mov
and
sub
adc
cmp
out
add
jp
mov
cltd
loope
sarl
dec
xor
mov
stc
push
mov
cmp
loopne
sub
mov
push
andb
and
or
xor
add
jg
sbb
and
repnz
test
push
ds
lahf
jbe
pop
aad
out
jle
xor
imul
pushf
mov
test
add
mov
mov
inc
mov
cwtl
ja
and
inc
sbb
mov
insl
mov
pop
cmpb
js
jg
and
movsl
imull
sti
push
movsb
mov
push
and
dec
xchg
inc
insb
aam
in
and
push
mov
xor
and
fld
movsl
mov
mov
push
and
icebp
mov
mov
daa
pusha
stc
inc
cltd
aaa
lret
add
ss
xlat
and
sbb
in
aam
sbb
sub
push
ror
jno
or
mov
mov
xorl
fnstenv
nop
out
dec
movsb
insl
rorb
insl
dec
test
push
add
adc
js
push
inc
dec
adc
cli
test
jbe
mov
mov
rol
aaa
xchg
mov
stc
int3
xchg
push
cmp
int3
adc
shll
in
inc
pop
jmp
cli
inc
dec
mov
push
rcrl
pusha
mov
xchg
cmc
imulb
push
dec
enter
gs
jp
inc
sti
sbb
lcall
imul
or
testb
adc
xchg
test
mov
leave
mov
jge
xor
rcll
xlat
inc
scas
mov
lar
arpl
clc
orb
ret
in
out
outsb
jb
pop
movsl
cs
clc
into
push
pop
add
xor
or
cmp
cli
or
adc
cli
xchg
movsb
pop
xchg
mov
cmp
jge
das
lret
adc
or
or
adc
dec
out
imul
xchg
mov
push
jns
adc
cs
mov
repnz
loope
adc
mov
push
xchg
mov
dec
lea
lret
fimull
xor
pop
icebp
pop
negl
xor
inc
xor
in
dec
jb
xchg
gs
jl
iret
jno
sbb
fsubr
jle
xchg
xchg
or
jmp
imul
rcrb
pop
movsb
ret
jg
mov
mov
jae
mov
and
pushl
add
inc
push
mov
cltd
dec
icebp
into
movsb
pop
stos
pop
xchg
push
pushf
cmp
loop
test
and
lods
add
fcmovnb
inc
mov
std
or
sub
arpl
pop
ja
movsl
sti
enter
push
push
aam
pop
inc
adc
fistpl
fcomps
push
mov
cmp
pop
adc
aam
scas
aaa
loop
add
out
and
cmpsb
jne
xor
jl
dec
insb
insb
loope
xchg
jmp
inc
inc
outsb
outsb
in
cmp
dec
cmpsb
ja
scas
pop
and
sub
insl
sbb
inc
sbb
int3
push
mov
or
test
jbe
iret
fcompl
and
push
lret
gs
test
lea
js
repz
dec
push
je
insb
call
push
cmpb
xchg
int3
xchg
inc
cmp
out
cmpsb
jo
cli
fidivs
movb
scas
xlat
mov
xchg
data16
jns
scas
xchg
jmp
adc
adc
test
xor
fsubrs
xchg
aas
fldcw
pop
push
mov
sub
xchg
dec
sub
retw
outsb
int3
cltd
mov
subl
iret
cmpb
xor
and
xor
lock
mov
xchg
add
cltd
in
add
out
cwtl
ds
fs
inc
cs
add
es
sti
int
sbb
lret
dec
xchg
and
add
notl
lods
jecxz
push
imul
sbb
adc
inc
std
add
mov
mov
push
sbb
push
rep
data16
out
xchg
add
fisubl
cmpsb
ljmp
jo
cmpsb
orb
fnstcw
and
iret
in
lea
cmp
fadd
inc
push
sub
jb
test
les
cs
scas
popf
test
push
aad
jno
bound
dec
cmp
movsb
pop
sub
pusha
clc
pushf
lret
sub
or
inc
loopne
cmp
mov
test
xchg
cmc
xchg
gs
cmpsb
daa
dec
cmp
or
roll
push
int
ret
mov
lds
mov
pop
and
cmpsb
lret
adc
int
mov
mov
jle
scas
into
or
shrb
mov
jae
push
lods
mov
push
pop
dec
xchg
in
cmp
ljmp
ljmp
add
push
ljmp
aaa
or
mov
fucomip
or
or
pop
adc
sub
fbld
cmp
lret
sub
and
std
fisubrl
or
les
insb
cmp
ds
ss
push
jle
jne
xor
push
js
fsubrl
loop
daa
out
in
mov
add
out
imulb
shrl
push
inc
rcpps
or
push
out
loope
lret
or
leave
das
das
negb
sarl
pop
pop
sbb
sbb
xchg
scas
outsl
int3
cmpsb
cmp
adc
stos
shlb
pop
push
pop
jae
jns
fs
push
imul
cmp
inc
add
push
jge
xchg
imul
push
repnz
nop
jns
sub
pushf
mov
aad
sbb
xchg
sub
iret
out
pop
xor
lods
and
out
sub
ja
fildl
leave
ljmp
mov
out
cmpsl
mov
or
int3
fstpl
std
jns
aaa
or
imul
push
pop
add
or
iret
inc
dec
divl
lcall
out
enter
jge
push
sbb
xchg
add
mov
push
fisttps
shlb
xor
outsl
cs
jecxz
in
pop
sbb
testl
cmp
testb
bound
fwait
out
test
pop
sbb
out
lock
std
cwtl
sub
adc
sub
add
outsb
mov
jge
add
cmp
jb
push
pop
mov
adc
xchg
or
mov
das
xor
sbb
or
ja
hlt
xchg
inc
fists
in
push
pop
fs
sbb
dec
out
sahf
cmp
mov
mov
clc
xor
rolb
outsl
lahf
add
sahf
jmp
xor
clc
jmp
fwait
or
push
xor
adc
scas
leave
mov
in
loope
or
in
xor
addr16
xlat
xlat
inc
cmpsb
inc
push
or
lock
mov
jecxz
and
xchg
adc
cmp
mov
ds
mov
and
mov
aaa
stos
sbb
aaa
int
hlt
push
push
test
roll
lret
adc
in
xor
imul
sbb
aad
arpl
adc
lods
int3
mov
pop
sbb
fwait
ss
scas
lcall
sub
js
fdivrp
sbb
xchg
jge
ljmp
sub
clc
sbbb
mov
mov
push
jecxz
push
adc
in
es
and
mov
insl
mov
test
ljmp
loop
arpl
cmp
dec
insb
fisubrl
xchg
jb
mov
add
jmp
mov
dec
scas
out
mov
addr16
mov
sub
adc
or
les
cs
mov
call
cli
push
or
stos
in
outsl
dec
sub
in
mov
inc
dec
pop
xor
mov
pop
cmp
mov
fdivrp
mov
popa
fbld
data16
dec
add
aam
sub
xor
or
dec
aad
mov
mov
pop
and
movsl
dec
push
push
pop
mov
invd
aas
test
jge
pop
aaa
push
cli
inc
sub
jnp
add
jg
or
cmpsb
and
mov
pop
mov
push
push
inc
imul
out
mov
jns
lods
sub
mull
mov
xchg
hlt
jg
xchg
and
daa
fisubrs
mov
mov
cmpsl
push
mov
sub
add
loopne
cmp
aad
push
mov
add
shrl
bound
in
out
test
shl
cwtl
lcall
jno
pop
mov
testl
dec
push
push
inc
adc
mov
pop
cwtl
popa
add
xchg
lahf
ss
sub
fmulp
std
or
mov
in
addr16
xchg
sbb
iret
push
pop
repnz
sbb
loopne
hlt
xor
cmp
inc
mov
pop
clc
xlat
pop
incl
daa
adc
dec
sbb
popl
aaa
outsl
jge
mov
fnstenv
or
inc
iret
test
xchg
jno
jnp
insl
fwait
pushf
lock
pop
xchg
mov
or
push
cmp
addl
shll
sbb
xchg
bound
cmp
xchg
adc
push
xchg
test
sbb
or
jg
push
cmpsb
fdivrl
stos
call
pop
xor
enter
test
dec
js
and
xor
es
addr16
push
out
pop
cmpsl
pminsw
ret
mov
sbb
outsb
sub
gs
mov
lahf
push
xchg
imul
push
lock
call
or
ss
xchg
adc
inc
outsb
pop
dec
push
sbb
out
add
pop
xchg
push
lods
out
push
out
mov
mov
xor
in
sbb
test
mov
lds
shl
push
ret
xchg
insl
mov
sub
jo
repnz
push
mov
cmpsb
cmpsl
and
sbb
lcall
stos
test
sbb
jle
setge
dec
adc
lahf
jnp
pop
sbb
mov
mov
into
mov
mov
pop
cmpsb
push
mov
pop
mov
in
adc
dec
dec
pop
pusha
mov
xor
imul
in
fucomi
sti
pushf
inc
movsl
movsb
or
test
insl
ss
lcall
filds
stos
jb
aas
notb
adc
mov
test
push
fcompl
xchg
jo
pop
jg
data16
aad
addl
aas
addr16
or
cmp
cwtl
sti
inc
push
xchg
pop
mov
sub
jb
pushf
mov
and
sbb
iret
xor
jo
inc
and
inc
mov
cmp
mov
mov
adc
inc
and
sbb
sbb
lcall
in
sub
loopne
push
or
cltd
adc
lods
jge
bound
xchg
cmp
arpl
jbe
insl
sub
lret
ret
pop
inc
jmp
lds
ds
cltd
int3
dec
xor
jle
clc
pop
jae
sbb
fiadds
jmp
or
rcrl
xor
sar
xchg
lcall
sbb
jg
and
add
jae
rolb
inc
cltd
push
sti
mov
addr16
xchg
dec
ret
testl
push
pop
sti
int
repnz
mov
mov
jmp
pop
insl
xor
mov
daa
dec
pop
fidivs
pop
mov
ljmp
and
add
shll
mov
pop
enter
popf
cli
lahf
fs
into
mov
xor
push
and
cld
sbb
gs
pop
call
in
xor
shr
and
jno
rclb
mov
jle
dec
test
inc
push
cmp
movsl
stos
lock
popa
mov
in
int
jnp
xlat
shll
leave
pop
or
pushf
inc
mov
add
out
stos
dec
hlt
je
je
shlb
iret
mov
orl
mov
or
inc
aad
in
sbb
mov
mov
sub
imul
mov
xchg
repnz
stos
outsb
add
add
or
push
dec
fisubrl
sbb
mov
jns
xor
and
jbe
pop
clc
lock
fwait
data16
add
dec
out
dec
jp
cmp
shll
and
xchg
xor
lret
push
xor
push
pop
jbe
cld
sub
sub
or
out
sbb
insl
aad
xchg
sbb
stos
mov
sti
aam
xor
es
fwait
adc
es
ret
sub
aaa
mov
push
call
flds
push
test
push
xorb
hlt
dec
into
mov
fildl
fwait
in
sub
ret
scas
pop
adc
sarl
call
les
xor
push
jge
int3
orl
or
insl
mov
out
inc
mov
and
fmull
out
and
cmp
pop
cmp
add
subb
pop
xchg
push
into
inc
xor
ret
gs
pop
std
scas
int
cltd
stc
xor
ja
jmp
or
inc
push
cltd
sbb
popa
adcl
lods
adc
stc
lock
mov
aam
cmp
add
outsb
mov
cld
fisubl
or
scas
imul
xchg
arpl
ss
scas
fstl
cli
std
ret
pop
jg
mov
mov
adc
mov
jnp
push
mov
jl
cltd
loopne
call
shl
iret
xor
jecxz
andl
push
das
pop
lcall
out
add
add
mov
xchg
or
dec
mov
icebp
aam
xchg
cmpsl
xchg
call
aam
cmp
mov
push
ds
jmp
fistl
pop
fldl
xchg
add
add
lods
insb
pop
cmpsl
out
mov
mov
jge
sbb
sbbb
aaa
aad
and
xchg
xchg
fwait
or
popa
inc
xchg
popa
xchg
mov
mov
jns
and
add
inc
test
loopne
adc
push
pop
add
roll
pop
aam
cmp
aaa
js
mov
mov
and
pop
les
sbb
test
insb
andl
mov
test
scas
mov
mov
xor
in
rorb
or
stos
and
shll
xlat
data16
mov
scas
push
sub
gs
xor
rorl
jo
jmp
jl
dec
std
in
pop
es
jge
pop
mov
jmp
movsl
outsl
xchg
hlt
dec
sti
je
xor
fisubl
pop
cmp
mov
lea
mov
lcall
pop
jb
push
arpl
mov
or
out
cmp
test
mov
arpl
iret
inc
sub
or
cmp
jae
jnp
out
shll
add
xchg
test
xchg
scas
jl
and
pop
xchg
mov
rolb
cmp
negb
mov
scas
push
mov
ds
scas
xchg
test
cltd
roll
sub
xchg
rclb
lret
jl
xchg
fisubrs
push
dec
and
sub
std
jnp
repnz
cli
lods
scas
push
pop
push
mov
pop
out
pop
test
fistpl
lds
ret
mov
leave
jbe
repz
mov
cld
jb
js
cmp
jmp
sbb
jp,pn
or
and
fwait
lds
in
sbbl
or
lods
loope
push
stc
fcomps
push
add
sub
xchg
lock
addr16
lret
out
add
cmpsl
jle
sub
rcll
shrb
push
stc
and
push
dec
jmp
int
dec
enter
push
mov
dec
dec
jmp
xlat
pop
pusha
gs
adc
das
inc
add
mov
adc
sarl
adc
mov
push
test
push
add
jl
jb
fstps
cwtl
mov
cli
lcall
ds
das
rorb
sarl
out
xchg
inc
xlat
and
pop
shlb
insb
sbb
dec
and
mov
and
pop
cmp
sub
push
dec
mov
or
inc
fisubrs
sbb
xchg
rorl
add
dec
push
sbb
aad
push
ja
xor
punpcklbw
clc
sbb
shrb
and
xor
movsb
dec
sti
cwtl
mov
jno
sbb
lods
loop
xor
dec
inc
arpl
pop
mov
sti
xchg
pusha
pusha
cmpsb
icebp
je
inc
push
xor
mov
inc
adc
inc
pop
ljmp
lea
aad
xorb
mov
pop
inc
dec
mov
es
dec
jg
test
inc
jmp
loope
cmpsb
add
loope
jmp
jge
inc
inc
lret
shll
mov
and
add
cs
repnz
popf
repz
xchg
ja
mov
test
repnz
jbe
dec
fs
jno
xchg
fidivl
jno
bound
cmp
xchg
mov
es
shll
cmpsl
sub
movl
push
sbb
mov
mov
and
mov
stos
sub
adc
xchg
push
rcll
xchg
pop
sti
mov
push
out
add
lock
mov
cmpb
fcomi
adc
mov
jno
mov
movsl
mov
mov
sbb
aaa
cwtl
not
out
inc
hlt
movsl
sub
mov
push
push
or
popa
clc
fisubrs
dec
dec
jo
pusha
outsl
lock
and
out
sbb
stos
xchg
adc
inc
cmc
ss
cld
aaa
out
or
push
mov
xor
mov
jne
push
xchg
aad
loopnew
lods
ljmp
pop
jne
movsl
mov
fbld
push
push
imul
jg
pop
push
mov
xchg
cmpsb
mov
rol
sub
cmpsl
push
cmp
in
loop
divb
xor
mov
and
push
inc
dec
ret
or
outsb
in
or
loop
fcomp
test
test
ljmp
xor
leave
call
and
dec
insl
fnstsw
sti
mov
jno
cmp
sub
mov
or
popf
cs
add
mov
sbb
and
shlb
or
and
dec
jecxz
inc
ja
lock
and
not
scas
sbb
cwtl
imul
mov
iret
test
mov
outsb
aas
movsl
xlat
scas
xchg
xor
add
adc
sbb
push
sbb
jns
and
mov
shlb
pop
push
or
inc
or
cmp
add
in
das
xorb
mov
movl
out
rol
dec
vpslld
pop
dec
inc
shrl
push
aad
xor
mov
fadds
cmpsb
xchg
jl
popa
into
mov
pop
xor
leave
ja
cmc
cmpb
dec
cmp
lret
ret
push
dec
icebp
sbb
stos
cltd
test
mov
outsl
mov
mov
iret
mov
mov
out
lock
test
mov
aaa
clc
xchg
fistpll
push
pop
mov
xor
cltd
cltd
mov
pop
lock
xor
stc
mov
xchg
aaa
push
cltd
pop
sub
mov
leave
loopne
aas
xchg
dec
push
mov
xchg
jg
lods
push
jl
in
fildll
or
in
repnz
pushf
gs
mov
push
mov
mov
dec
pop
jmp
mov
jbe
in
mov
repz
and
stos
xchg
lret
out
cmpl
addr16
imul
bound
sub
in
nop
out
lahf
push
push
jp
into
cltd
push
sbb
or
stos
and
outsb
es
sub
sahf
inc
push
xchg
sub
inc
and
add
pop
int3
push
stos
jp
lock
js
sahf
pop
xchg
pop
jecxz
arpl
ljmp
jns
test
cmpsl
dec
push
in
dec
outsb
jne
movsb
mov
push
pop
pop
scas
in
or
icebp
jno
and
pop
push
push
shrb
jecxz
cmc
lock
aaa
mov
mov
mov
scas
out
or
add
sub
jl
jno
in
dec
cmovb
adc
lcall
mov
ss
ljmp
pushf
inc
arpl
lret
cmp
xor
das
mov
mov
adc
cmp
pop
call
sbb
aad
xor
scas
inc
ret
les
out
out
or
push
das
jp
in
cmp
movsl
pusha
mov
sbb
addr16
arpl
rcll
pop
dec
dec
jp
adcl
jp
jb
and
and
aad
call
xor
pop
jns
jbe
imulb
shl
fisttpl
push
out
fs
mov
pop
scas
arpl
imul
mov
inc
sub
fwait
test
nop
jne
sarb
dec
fistps
ret
push
mov
inc
imul
jmp
push
test
rcrl
or
or
or
mov
mov
lods
pminub
test
jge
xor
leave
or
mov
add
fisttps
cmp
xlat
cmp
icebp
inc
mov
ljmp
cmp
pusha
push
dec
or
dec
stos
or
jmp
add
sbb
mov
negl
es
into
dec
push
cmpsb
inc
pop
cmc
cmp
cli
and
lds
push
jp
cli
jmp
push
cltd
les
push
push
mov
popf
das
stos
ja
lahf
cmp
aas
rcrb
sahf
dec
cli
loop
sub
and
xor
mov
adc
xlat
jbe
faddl
inc
cs
cld
nop
mov
push
lds
aaa
movsb
xchg
loope
je
out
in
xor
test
enter
insl
rclb
into
iret
sub
xchg
ljmp
mov
rcrl
jne
xchg
cwtl
mov
call
int3
ret
hlt
test
out
jge
insb
xchg
out
xor
dec
sub
call
mov
into
dec
inc
ja
aaa
ds
sub
inc
repz
daa
xor
xchg
stc
sbb
mov
cmp
push
jbe
shrb
arpl
inc
fs
push
pop
adc
mov
push
push
cmp
test
cwtl
aam
dec
loopne
fimull
xor
out
movsb
sub
pop
mov
and
iret
out
pusha
cmp
adc
push
add
in
and
push
cmp
or
inc
or
ss
mov
pusha
lahf
fwait
pop
mov
sub
mov
stos
mov
or
fcomps
mov
repz
loope
jno
cmp
cltd
mov
mov
mov
hlt
arpl
jo
jmp
push
dec
sub
xchg
and
jmp
or
cld
mov
repz
loopne
sbb
ret
mov
xchg
dec
pushf
inc
push
adc
or
pop
pop
jns
push
in
jne
or
mov
push
jns
mov
int
sub
add
jno
mov
lahf
rorb
nop
arpl
sti
cmp
mov
ljmp
out
out
movsb
cltd
aad
sub
dec
adc
daa
xor
gs
shlb
daa
adc
loope
mov
xor
das
jle
jns
in
inc
insb
ljmp
nop
clc
scas
mov
inc
ljmp
ja
inc
pop
lods
vmovhps
movsb
push
jg
lahf
lahf
xor
and
add
and
cmp
push
out
enter
mov
dec
sub
fmulp
dec
mov
shll
fwait
adc
xor
sbb
stos
or
mov
leave
nop
lods
js
int3
test
jp
xchg
daa
jb
ret
mov
mov
outsl
dec
mov
scas
ss
pop
or
xor
mov
stos
lds
pop
roll
cmp
jge
mov
ror
adc
sub
jne
adc
push
dec
add
sbb
push
test
movl
mov
call
mov
je
stos
xchg
adc
nop
orl
push
pushf
lret
inc
xchg
or
jae
lahf
mov
ret
add
push
popa
test
cli
xchg
sbb
mov
sbb
movsb
outsb
int3
inc
lret
mov
enter
sub
and
cwtl
push
jo
popf
std
repz
mov
jo
loop
lods
js
pop
and
out
aas
loopne
sbb
jno
movsb
xor
rolb
or
inc
xchg
pop
xor
mov
xchg
data16
js
xor
xchg
mov
jp
iret
jb
adc
lret
inc
and
fs
stos
roll
lea
and
out
ret
push
jmp
dec
in
cmpsb
inc
mov
sub
repnz
cmpsb
dec
cs
sbb
inc
shrb
les
adc
push
xor
in
shlb
jg
scas
mov
sti
popf
arpl
in
iret
jo
push
cltd
sub
or
stc
mov
sbb
push
add
mov
jmp
ret
mov
mov
adcb
movsl
fsubrs
sub
pop
adc
in
dec
jnp
lcall
movsl
cltd
pop
std
add
jge
shrl
push
jno,pt
stos
push
pop
test
jmp
xchg
fisubs
push
rcr
loope
ficompl
out
xor
xchg
and
divl
std
jnp
push
xchg
mov
jne
dec
lock
aad
mov
pop
or
sahf
adc
push
jne
push
negl
cmpsb
adc
inc
dec
scas
ljmp
mov
xchg
out
je
cld
and
test
lret
pminsw
lods
dec
mov
loopne
mov
lcall
inc
mov
push
jns
scas
push
cmp
je
ds
push
scas
mov
testl
sbb
inc
mov
out
dec
push
push
imul
pop
sub
push
mov
and
and
inc
mov
add
xchg
testl
jle
enter
jle
mov
and
nop
mov
jg
add
sub
stos
iret
pop
and
add
out
cmp
mov
lea
adc
les
imul
fldl
xchg
mov
add
mov
inc
xor
jo
pop
icebp
pop
jg
rorb
pmulhw
sub
loop
cwtl
jbe
notl
aaa
call
mov
add
sbb
int3
dec
shrb
jne
stos
fldenv
clc
je
mov
stos
mov
ret
bound
or
fcoms
movsb
pop
or
push
jmp
mov
out
jp
es
in
aad
icebp
icebp
push
mov
mov
mov
xor
sarb
dec
add
subb
push
xchg
ret
cs
xor
inc
outsb
leave
fucomp
fdivs
mov
iret
cmp
and
lret
clc
movsl
mov
js
jno
inc
cwtl
sub
and
int
jb
outsl
or
sti
loopne
cmp
not
loop
push
and
in
repz
inc
dec
cmp
fcmove
mov
iret
addl
inc
cs
fwait
push
xchg
fnstsw
push
xor
xor
jae
or
out
clc
mov
jne
pop
imul
jle
sub
or
loop
imul
fnstcw
mov
and
aas
pop
mov
testl
mov
aas
jb
adc
or
jns
mov
mov
pop
sbb
into
push
xchg
mov
xchg
or
ja
xchg
insl
push
push
mov
movsl
aaa
lret
testl
stos
aas
mov
or
les
jb
std
pop
cmpsl
arpl
rorl
cmp
shlb
leave
and
loope
xor
test
mov
inc
shlb
sub
and
sub
mov
push
andl
pop
stos
icebp
jmp
xchg
mov
popf
imul
rclb
out
inc
mov
inc
aaa
pushf
lods
pop
jp
mov
push
inc
clc
shrb
fimuls
sarl
aas
xchg
inc
out
jg
cmp
adc
cld
pop
mov
fwait
jmp
jl
mov
push
out
in
adc
mov
test
pop
test
ficoms
enter
inc
addr16
fdivr
dec
xchg
jae
sahf
orb
adc
dec
iret
pop
fsubrp
mov
fstps
insl
cmpl
xor
cs
inc
pop
mov
insl
std
popf
cmc
adcl
shr
scas
mov
or
frstor
das
loopne
dec
cmpsl
mov
add
pop
xor
arpl
frstor
out
jno
dec
jl
fnstenv
movsl
sub
sub
pusha
xchg
inc
fiadds
mov
fisttps
jle
and
sbb
in
jbe
and
add
aam
cmp
sub
mov
push
ds
lahf
mov
jne
push
xor
sbb
mov
add
js
mov
fildll
cmpl
daa
aas
ss
mov
pop
pop
push
and
aad
pop
leave
mov
mov
popa
inc
push
out
loop
fdivrs
insl
call
out
out
shl
enter
insl
inc
test
fldcw
sbb
stc
and
mov
mov
mov
jbe
push
mov
repz
nop
xchg
outsb
aad
mov
pop
lcall
or
dec
jnp
or
ret
lahf
mov
mov
mov
pop
insl
dec
push
lret
push
out
ds
in
lcall
cmp
pushl
lods
clc
pusha
rep
cmpsb
add
cmp
cld
jg
lock
push
and
jecxz
popa
adcl
roll
cld
enter
cmc
imul
test
fimull
iret
daa
scas
jo
call
jo
mov
test
pop
dec
and
aaa
and
aam
xor
scas
sahf
push
dec
jl
inc
sub
sbb
pop
push
mov
mov
dec
push
lcall
add
incl
lret
in
jnp
cmp
aas
dec
mov
adc
mov
lods
mov
lcall
pop
push
leave
pop
movsb
dec
add
jae
jnp
lret
and
jg
xchg
jo
jl
xor
mov
clc
inc
mov
std
out
testl
cmp
outsb
and
ret
push
pop
insb
movsb
cmp
jmp
xchg
out
cmp
sbb
mov
inc
push
push
addl
adc
pushf
movsb
xchg
mov
xchg
stos
js
cmp
addl
adc
call
sbb
inc
mov
dec
and
xchg
jae
and
daa
repnz
sub
and
jg
pushf
loopne
pop
pop
adc
jae
mov
inc
inc
mov
scas
dec
hlt
adc
imul
mov
addr16
lret
cmp
repnz
push
repz
cmpsl
mov
add
adc
adcb
or
adc
pop
xor
push
leave
aad
pop
fstps
mov
test
movb
xor
mov
sub
push
sbb
shl
xor
mov
shrl
push
cwtl
lds
and
outsl
pushf
in
jecxz
popf
cmp
inc
pusha
push
jae
pop
addr16
sbb
xchg
stc
xchg
leave
arpl
inc
sahf
inc
idivl
sub
pop
inc
add
xor
sub
sbb
xor
iret
mov
call
outsl
pushf
stos
test
xchg
iret
fisubrl
add
xor
mov
dec
jbe
pop
std
test
clc
cmp
enter
xor
xchg
and
sub
dec
sub
xor
jae
inc
inc
sbb
fs
out
stos
jno
lea
ljmp
pop
mov
imul
out
xchg
movsl
sarl
jnp
sbb
mov
pop
test
fs
add
mov
out
lock
inc
sbb
ds
sub
xor
repnz
pop
es
call
xchg
sahf
incl
lock
mov
cs
jo
adc
mov
xchg
xchg
sub
dec
test
jl
mov
cmpsl
stos
outsl
xchg
pop
dec
icebp
add
fmul
adc
icebp
repz
adc
or
cmp
add
xor
xlat
xchg
adc
imul
mov
and
jle
ret
cltd
mov
scas
mov
hlt
push
mov
and
ja
nop
mov
jp
sbb
adc
xor
xchg
fisubl
add
int3
push
pop
xchg
je
xchg
fldcw
xchg
pop
out
pop
stos
or
cmp
sbb
testl
loop
pushf
and
pop
dec
fwait
cmp
in
orb
xor
stc
pop
inc
sub
sub
repnz
aaa
add
cwtl
movsl
push
mov
xchg
sbb
in
adc
mov
push
dec
pop
inc
pop
test
cmc
popf
pop
int3
pop
dec
mov
cld
in
cmp
sahf
or
sub
cld
arpl
cmp
mov
pop
xchg
rcrb
jecxz
lret
jo
adc
mov
push
repz
lods
xchg
movsb
movsl
enter
test
dec
fs
mov
jnp
rcr
lahf
cmpsl
jo
lcall
dec
and
lahf
daa
sub
adc
mov
pop
outsl
cvttps2pi
or
icebp
inc
insl
ret
xorl
les
scas
cs
lret
sbb
and
and
and
fstl
outsb
xchg
inc
and
test
push
icebp
cmp
in
push
dec
inc
ss
repnz
decl
jb
xor
add
movsb
or
sbb
cs
stos
sbb
fistl
sahf
mov
das
in
cmc
fidivl
dec
add
and
add
inc
dec
cmpsl
jle
insb
push
push
xchg
call
or
mov
jle
jo
add
sbb
fcoml
dec
cmp
lahf
inc
mov
das
push
js
shr
fnstcw
fisttpl
mov
dec
int3
xchg
xchg
mov
rorl
out
cld
js
xchg
jl
mov
and
push
dec
sahf
sub
dec
mov
nop
push
ret
mov
xor
sarl
aaa
rorl
in
mov
pop
dec
je
adc
ss
repz
popl
jge
aas
repnz
or
loopne
add
cmp
repz
out
aaa
cs
in
int3
jmp
mov
aas
inc
and
pop
cmp
sbb
dec
push
jbe
stos
repnz
push
in
jg
add
nop
adc
sets
cmpsb
imul
test
arpl
push
ss
bound
into
fnstcw
pop
popf
push
orl
jmp
fmulp
cmp
jg
movsl
loopne
dec
repz
jns
jbe
cmp
repnz
push
stos
loopne
pop
push
addl
daa
lock
rorl
lea
and
jb
pop
or
push
adc
daa
mov
mov
cs
outsb
mov
movsl
jnp
cwtl
dec
mov
test
mov
cs
pop
sub
push
popa
push
into
add
xchg
push
lods
add
outsl
movsb
movb
fnsave
dec
mov
cmpsb
loop
bound
arpl
mov
call
js
inc
not
sar
aad
sbb
xor
lds
popa
std
xchg
jle
sbb
xor
or
push
lds
xchg
inc
je
jae
loopne
pop
sbb
jns
or
cmp
add
jecxz
mov
jp
out
sbb
xor
and
mov
addr16
cltd
mov
mov
sahf
sbb
dec
push
mov
iret
mov
insl
ror
xchg
sub
xchg
pop
lret
push
add
xchg
fdivrl
pop
lock
les
xchg
lods
call
repz
push
jno
xchg
icebp
push
call
int3
xor
fwait
and
push
jmp
data16
sbb
xor
xchg
mov
xor
loopne
scas
pushf
aaa
ljmp
push
and
dec
adc
sti
daa
push
jl
arpl
xchg
jecxz
ss
js
ret
clc
scas
mov
pop
clc
adc
flds
mov
aad
jb
test
cmpsl
imul
sarb
shrl
sbb
xchg
jl
repz
mov
testb
adc
push
mov
jmp
dec
dec
mov
mov
mov
and
loopne
sub
repnz
push
test
stos
mov
inc
std
cmp
sub
mov
psadbw
and
jecxz
idivb
mov
pop
mov
and
push
xor
xchg
mulb
sahf
lods
lahf
adc
jmp
mov
xor
fists
jb
xor
push
inc
adc
inc
sub
add
jp
push
je
pushf
loop
push
lahf
push
push
test
push
inc
rcrb
jo
scas
xchg
mov
clc
pop
cli
outsl
lock
popf
inc
and
and
out
add
hlt
xor
jmp
push
stc
inc
sbb
sbb
dec
mov
lock
out
ljmp
push
ret
inc
adc
test
jge
and
pop
mov
mov
dec
fdiv
jb
xor
mov
and
scas
lds
push
pop
sti
data16
enter
mov
jo
es
add
loope
cmc
clc
or
xor
xor
int
stc
stos
adc
dec
out
cwtl
mov
mov
rolb
loope
fwait
mov
pop
xchg
xchg
or
or
push
lcall
daa
test
pop
xchg
stc
jns
sbb
mov
xchg
xchg
test
mov
jecxz
dec
jb
popf
mov
test
mov
dec
mov
and
dec
test
or
repnz
or
es
nop
inc
test
sub
sbb
xor
jns
roll
inc
aas
test
xchg
pushl
ret
and
pop
mov
push
aad
in
out
into
int3
ret
push
add
mov
divl
xchg
push
out
mov
sbbb
fldcw
xor
jl
stos
ret
xchg
ret
sahf
push
add
adc
cld
pop
xchg
loope
cmp
sahf
cli
xchg
fisubrs
iret
mov
lea
mov
jg
aaa
in
mov
lock
push
hlt
jle
push
pop
cmovb
mov
repz
mov
mov
addr16
pop
dec
push
jno
test
repz
in
sub
inc
jecxz
or
in
xor
cltd
test
sbb
mov
cwtl
shrb
jmp
arpl
stc
outsl
jp
addr16
paddsb
gs
shl
add
gs
mov
out
mov
gs
icebp
lock
jge
rcr
bound
xchg
test
mov
addr16
fs
mov
push
hlt
adcb
cmp
sbb
fadds
lahf
sahf
mov
clc
push
sub
data16
cmp
mov
mov
mov
fwait
pop
stos
scas
dec
dec
leave
cmp
aam
sub
out
xor
test
idivb
adc
cmpsl
jb
out
int
cmp
movsb
push
dec
hlt
cmp
mov
cmpsb
movsb
mov
inc
push
push
adc
jne
jecxz
test
enter
lret
or
stos
and
dec
add
and
pop
or
or
pop
mov
enter
pop
pop
jg
mov
sub
sub
cwtl
and
daa
sub
push
push
in
ljmp
jecxz
ljmp
cmpsb
sbb
push
frstor
xor
insb
ljmp
sub
and
push
xchg
test
push
iret
loop
mov
adcb
and
lods
inc
repz
lret
into
inc
inc
js
cmc
addr16
sbb
or
cltd
mov
push
je
outsb
sbb
loopne
das
pop
pusha
xor
aas
test
mov
clc
or
int3
and
dec
out
jns
je
sub
sbb
in
iret
inc
adc
sub
iret
cmp
xor
sbb
xor
addr16
push
fs
ret
outsl
or
inc
fcmovnu
enter
xchg
jo
mov
sbb
sti
lret
jnp
testb
xor
adc
pop
push
jp
cmpsb
movsl
ficoml
sti
jl
cli
inc
adc
sbb
cld
cmp
sub
push
inc
and
test
popf
mov
ds
sub
jge
insl
mov
lcall
orb
fisubs
int
jmp
or
loope
mov
inc
das
cmp
es
push
dec
mov
stos
imul
andl
sahf
push
cmpsl
inc
mov
xor
adc
ljmpw
hlt
mov
mov
rol
into
and
xchg
cmc
and
flds
push
mov
fcmovbe
push
xchg
js
mov
popa
sub
xor
lds
rolb
cmp
mov
outsb
xchg
adc
gs
dec
dec
jecxz
cmc
or
or
and
xchg
or
lret
mov
in
inc
cli
push
push
jp
nop
imul
cmp
jmp
scas
cmp
stos
pop
stc
stos
sbb
adc
hlt
fidivrl
push
test
jns
jns
sub
adc
sub
addr16
xor
ljmp
sbb
testl
lahf
inc
outsl
jge
ret
cltd
fildll
sbb
mov
pop
ljmp
jbe
es
push
sarb
inc
ds
rcl
pop
pop
sbb
daa
dec
cmp
pushf
lock
mov
jns
xchg
add
aam
push
xor
sbb
push
pop
clc
sar
sbb
loop
cmp
orl
rolb
cs
lods
mov
adcl
inc
dec
lock
lret
xor
jns
xor
lret
iret
add
add
scas
bound
insb
fisttpll
pusha
sbb
les
push
dec
inc
pop
ss
out
sub
divb
add
push
hlt
jae
cs
scas
lock
aad
int
iret
sub
outsl
cmp
jecxz
aad
les
xchg
or
xor
mov
xor
fldl
jge
stos
hlt
xor
ss
mov
in
mov
inc
rcl
adc
jle
xor
lock
int
xchg
and
mov
das
out
pushf
out
std
jne
les
xchg
fdivr
outsb
lcall
outsb
sbb
ja
push
mov
test
in
pop
jnp
xlat
jbe
stos
pop
lcall
or
rcl
fidivl
mov
xlat
dec
jl
xor
pop
inc
push
and
sarl
andl
test
stc
mov
mov
stos
mov
ror
push
outsb
cld
sarb
sbb
leave
fnstsw
rolb
add
popf
push
popa
mov
movsb
jmp
ja
xchg
mov
lea
repnz
insb
int3
pop
stos
stos
dec
xor
push
pop
dec
fidivrs
aas
jge
mov
loopne
mov
inc
xor
repnz
sub
imul
mov
add
push
sub
add
push
scas
stos
xchg
jcxz
sub
jbe
clc
aaa
jns
mov
jnp
and
scas
addr16
dec
sbb
push
fcoms
hlt
or
inc
or
pop
mov
lret
pop
lahf
add
mov
xchg
push
out
cli
les
inc
jp
jge
cmp
int
cltd
jbe
sbb
jno
mov
jge
mov
lret
or
aas
aam
out
lods
out
scas
sarl
repz
fsubrl
or
movsb
inc
imul
pop
mov
sbb
mov
int3
iret
pop
cs
stos
and
add
mov
test
xor
jl
push
rcrb
cmpsl
outsb
mov
int
scas
or
mov
add
popf
into
add
jp
gs
into
cmp
cld
aas
dec
sbb
clc
jb
stc
testl
or
out
xchg
std
inc
jae
iret
mov
mov
sbb
mov
sbb
iret
add
fistl
fadds
out
mov
je
repz
in
xchg
outsb
repz
nop
mov
daa
jge
adc
dec
and
or
gs
pop
fimuls
sub
cwtl
cs
gs
aaa
push
jo
cmp
stos
xchg
loop
rcl
cmovge
movsb
cwtl
fidivrl
xchg
daa
jo
sub
lods
and
and
out
rcl
push
fnstcw
out
out
sub
jne
popa
sbb
sbb
push
roll
jl
mov
and
jne
adc
les
sub
ljmp
xchg
outsl
imul
mov
xchg
mov
inc
sbb
lahf
or
adc
pusha
negb
xlat
data16
jp
jg
insl
shl
sarb
xor
cli
pop
aaa
adc
fdivs
shll
push
adc
pop
pop
movsl
pusha
arpl
jge
dec
xchg
outsb
test
andb
mov
sbb
repnz
lock
std
and
lods
nop
mov
sbb
icebp
jb
test
andl
sub
adc
andb
xchg
call
sub
inc
leave
test
inc
stc
insb
mov
call
pusha
or
les
stc
pop
mov
in
cmp
out
mov
sti
test
pop
pop
push
xorl
mov
cli
rorl
fdivl
lret
fidivs
add
push
dec
push
push
pusha
std
movsl
sub
pop
repnz
enter
rcll
aad
ret
jnp
pop
repnz
xchg
std
fidivs
sub
mov
in
sub
sbb
rcl
sbb
mov
les
cmp
gs
pop
test
jbe
push
dec
jb
popf
scas
add
imul
mov
fbstp
fistps
mov
jns
push
pop
int3
adc
imulb
in
inc
out
pop
xchg
jecxz
and
pop
sbb
mov
mov
jne
insb
push
or
mov
cmp
adc
subl
inc
add
faddl
pushf
enter
jnp
jbe
jmp
js
lret
push
jmp
xor
call
int3
pop
sub
in
cmc
sbb
sarb
adc
mov
bound
test
mov
in
cwtl
cmpsl
stos
dec
adc
mov
in
xchg
and
js
xor
mulb
dec
jb
lds
fildl
aam
test
jns
or
je
mov
call
push
jne
push
pusha
sub
and
popf
push
xchg
push
pop
cli
mov
mov
cli
adc
icebp
push
inc
jbe
cmp
lcall
ds
ds
add
pop
mov
or
sbb
lods
push
xor
stos
xchg
gs
ljmp
pop
xchg
dec
fimull
xor
out
pop
aam
fiadds
lock
push
adc
push
xorl
pop
mov
xor
testb
movsb
testl
aas
insl
mov
adc
add
imul
sti
std
rorb
stos
dec
push
std
scas
inc
sub
cmpsb
cld
push
pop
mov
push
and
enter
fldcw
pop
data16
mov
enter
dec
sbb
fildl
in
mov
add
scas
cmp
or
hlt
xor
jmp
js
lahf
push
iret
inc
or
sub
negl
aam
inc
push
and
arpl
rclb
fcompl
jecxz
cs
lock
je
rorb
rcl
rcl
ret
repz
into
and
push
test
xor
inc
pop
popa
out
cmp
mov
mov
dec
popa
insl
mov
xchg
pop
leave
or
sub
cld
out
jecxz
jno
jecxz
aam
sbb
mov
jo
inc
jge
rcrl
ret
ds
sbb
dec
or
xor
daa
push
xchg
sbb
jbe
mov
cmp
cmp
mov
dec
pop
cmp
or
jle
and
and
mov
push
xlat
mov
leave
mov
mov
and
in
mov
int3
or
aaa
lcall
jmp
pop
add
es
dec
negl
rolb
jae
jmp
fistpl
mov
sbb
insl
aaa
lea
xor
cmpsl
shrb
xchg
fcomp
adc
ficomps
decb
push
jo
jo
out
loopne
cwtl
stos
inc
jge
dec
loopne
out
leave
push
mov
shrl
dec
or
cmp
fldl
call
clc
lock
insb
inc
shrb
dec
imul
hlt
lods
push
push
jae
adc
loopne
dec
cmp
movsl
cs
push
out
or
cmp
enter
fists
push
xchg
jno
xchg
push
jmp
pop
cli
adc
sbb
and
scas
pushf
add
xchg
subl
push
cmpsb
or
and
xor
lahf
inc
mov
in
scas
das
daa
gs
cmp
arpl
xchg
les
insb
sub
pop
jb
call
jge
xchg
in
add
fldlg2
sahf
xlat
shrl
pop
fisttpll
jl
inc
add
jbe
out
testb
cmc
and
add
xorl
pop
xchg
xchg
enter
pop
lcall
int3
loop
ja
jb
jle
inc
fisttpll
into
cmpsb
sti
fwait
lret
pop
add
push
mov
mov
cmc
mov
mov
push
js
cmpsl
sub
or
out
pushf
insb
push
mov
rorl
in
and
mov
sub
push
and
cli
add
cmp
mov
orb
or
inc
jg
add
ja
fwait
pop
and
fchs
dec
adc
push
orb
add
xchg
xchg
dec
add
push
mov
mov
rorb
idivl
pop
cmp
push
bound
enter
shlb
pop
mov
aam
test
or
push
es
jae
int3
mov
lock
mov
fmuls
sahf
sub
lock
rcl
sbb
push
add
inc
in
lret
nop
stc
hlt
jns
insb
aad
mov
xchg
pop
jo
push
mov
xchg
mov
mov
dec
insb
inc
pusha
xor
psrad
cs
push
and
popa
sub
movsl
xchg
push
insb
loopne
sbb
sbb
sub
pop
daa
inc
addr16
adc
or
mull
loope
pop
adc
mov
jo
pop
and
mov
sbb
or
inc
push
or
mov
lock
movsl
sbb
cmpsb
pop
add
push
sub
push
sbb
cltd
lods
andl
or
dec
cs
mov
jb
aad
xchg
and
jnp
dec
pop
popf
out
push
popf
pop
dec
jne
mov
arpl
lods
mov
notb
and
mov
sbb
ss
cmp
into
popa
imul
ret
and
jp
add
xchg
fildll
fsubl
mov
lea
aaa
mov
push
sbb
popa
aas
outsb
pop
push
push
push
lods
fisttpl
dec
jg
sahf
into
jne
mov
cmp
sub
mov
idivb
mov
in
sub
in
mov
pushl
pop
rol
jmp
ljmp
xchg
data16
xor
dec
inc
ret
adc
scas
ja
js
sub
and
push
pop
cvtps2pd
push
insb
pop
push
ljmp
imul
inc
push
lahf
sbbl
test
lock
fs
popa
or
iret
sbb
mov
cmp
push
mov
out
cmpl
lods
cmp
inc
scas
xchg
cmpsb
sub
sbb
arpl
pop
cmc
sbb
bound
cld
shll
pop
sub
pop
and
pop
mov
sbb
jae
shlb
jmp
adc
test
in
xor
add
jns
gs
out
xchg
and
dec
sub
outsl
mull
cli
sbb
loopne
pop
nop
pop
and
aad
push
mov
xchg
mov
cmp
sti
enter
fcompp
imul
sbb
in
and
push
jl
mov
add
push
mov
push
xchg
dec
add
ss
fldl
sbb
hlt
push
and
leave
div
mov
mov
mov
scas
dec
or
push
jle
ffree
cmpsl
loopne
mov
push
popa
test
pushf
lods
mov
std
test
mov
repz
jg
or
mov
mov
in
addr16
lea
daa
stc
pop
mov
ljmp
andb
cmp
push
std
mov
lcall
addl
push
cwtl
ficoml
dec
adc
inc
dec
push
mov
adc
movsb
test
xchg
pop
sbb
inc
fadds
jae
mov
std
fisttps
loop
sbb
test
insl
cmp
pop
cmpsl
iret
cmp
push
cmc
lret
jecxz
hlt
add
cmc
jbe
mov
xor
or
inc
pop
lcall
fsubrl
and
repnz
lret
scas
xor
call
fcompl
mov
dec
aam
popa
xor
mulb
add
ret
mov
loop
nop
mov
jns
lds
and
xchg
xchg
push
jg
bound
dec
sub
xor
outsb
andl
xor
mov
sbb
mov
ja
repz
ret
out
imul
popf
add
pop
push
dec
pusha
jg
pop
fldt
and
sub
xor
xor
cmp
ds
xchg
adc
add
test
sbbb
lds
mov
outsb
xchg
adc
lods
bound
cmp
jmp
ss
dec
cmp
ds
out
loop
jbe
pop
jbe
jnp
jecxz
and
cld
dec
stc
fbstp
ds
mov
sub
into
pop
sub
mov
bnd
movb
jo
jle
adc
out
xor
sarl
pop
mov
cmpl
js
cmp
fstpl
out
lods
es
iret
movsb
ror
rol
arpl
and
sbb
aam
pop
test
add
jae
sbb
and
dec
inc
push
add
pop
gs
cmp
push
and
movsb
inc
ss
out
mov
cmpsl
int3
arpl
push
sahf
test
push
push
mov
pushf
scas
and
stc
je
mov
lahf
or
xorl
ja
lahf
xchg
sarl
mov
xchg
pop
lret
adc
dec
cmp
inc
das
adc
rcl
roll
push
jl
ret
movsl
sub
outsb
or
jle
popa
ljmp
pop
inc
sbb
call
int3
adc
jle
jecxz
and
cltd
sub
inc
fs
mov
or
xchg
lret
jmp
movsb
jnp
inc
icebp
add
scas
test
int
xor
cmp
cli
test
push
xor
movsl
int
add
test
enter
mov
imul
inc
xor
cmp
in
inc
cmp
pop
jno
mov
add
sbb
iret
xchg
push
push
pop
pop
mov
loop
popf
adc
inc
nop
or
sar
bswap
inc
inc
lock
fdivs
sbb
in
gs
lea
mov
ja
jmp
test
or
out
dec
sbb
mov
or
int
xor
scas
sti
shll
mov
xchg
lret
dec
push
inc
push
inc
imul
stos
cmp
cmp
outsl
jle
cmpsb
ret
mov
dec
jno
stos
jno
pop
adc
stc
repz
and
cmp
push
mov
mov
adc
push
out
push
dec
stos
mov
fucom
jo
xor
dec
cld
lds
fstl
imul
sti
adc
jns
fcmovnu
scas
push
push
les
adc
push
ficoml
jns
aad
cmp
push
mov
loopne
pop
ss
popa
jmp
cmpsb
stc
daa
inc
lds
aad
inc
outsb
jp
adcl
xor
pop
cmp
shll
pop
addb
movsb
pop
enter
pop
sbb
dec
cmpsb
into
add
ret
xor
call
xor
add
test
mov
ret
push
js
inc
sbb
aaa
pop
fldt
popf
or
jnp
or
jle
imul
or
pop
mov
ficoms
push
aaa
mov
sub
jns
mov
pop
add
xor
inc
aam
inc
push
mov
adc
cmp
insl
add
sarl
sub
and
lret
mov
cwtd
and
test
fs
push
sbb
xchg
aaa
insl
jo
mov
mov
mov
mov
fsubs
mov
aad
icebp
leave
push
inc
jl
jecxz
sahf
xchg
sbb
xlat
pop
pop
sbb
jge
and
xlat
mov
jb
test
je
outsb
and
cmp
adc
mov
dec
mov
mov
or
push
sarb
adc
xor
jle
cmp
and
clc
mov
ljmp
add
insb
dec
jnp
test
mov
pop
je
push
mov
xchg
pusha
in
pop
dec
bound
mov
sub
or
jno
xor
sar
push
fcoms
pop
ret
and
dec
fcoms
jl
lock
adc
rcr
jb
fcmovne
loop
out
mov
scas
lock
jns
rcrl
test
mov
insl
mov
adc
out
repnz
sub
inc
lcall
enter
and
shlb
inc
and
jne
fnsave
ret
xor
orl
pop
test
mov
mov
push
aam
push
mov
call
xor
cli
inc
jecxz
mov
mov
mov
iret
out
imul
jbe
fcoms
sub
dec
push
pop
out
sbb
or
pop
adc
jnp
icebp
mov
inc
pop
adc
xlat
stc
in
dec
adc
xor
mov
lret
mov
test
rcll
push
mov
sbb
stos
movsb
loop
stc
sbbb
nop
outsb
inc
rep
sbb
sub
sbb
aam
pop
aas
sbb
insl
add
sti
mov
mov
aaa
or
rorl
and
cmp
add
mov
scas
pop
rcrl
mov
mov
nop
pop
mov
fwait
adc
push
xchg
cs
shlb
push
jp
int3
movsb
push
and
pushf
aad
dec
xchg
pusha
dec
jns
sub
dec
pop
push
or
outsl
inc
fcoml
mov
inc
std
into
and
adc
loope
andl
lret
or
ds
cmp
jmp
out
sub
iret
or
je
out
stos
jecxz
lods
xchg
mov
out
or
jbe
mov
add
mov
dec
push
out
mov
xchg
cmc
sub
add
fistpll
push
push
add
pop
es
sub
jnp
pop
push
int3
jb
jnp
fcmovne
in
sbb
mov
fsubrl
les
pop
pop
inc
or
sbb
and
adc
cmp
loopne
pushl
out
xor
add
cli
jb
sbb
divl
jp
ja
insl
jmp
addb
je
out
add
in
xor
lods
xchg
fwait
stc
inc
dec
fildll
lcall
rcl
mov
jb
int
mov
mov
aaa
lcall
sub
jne
je
lods
fs
or
sbb
mov
cmp
ds
int
jno
fildll
add
testl
ss
andl
dec
lahf
xor
ljmp
lea
push
dec
or
xor
js
jp
cs
insb
and
inc
and
outsl
lret
stos
push
inc
mov
mov
jo
dec
jge,pn
ret
cmp
ficoml
push
mov
dec
bswap
sahf
arpl
or
icebp
movsl
ret
je
mov
comiss
aaa
xlat
inc
jle
aad
jge
nop
add
sbb
push
lods
mov
cmpb
cmpsl
iret
movb
mov
inc
mov
push
add
mov
add
jmp
shll
cmp
xchg
add
decb
ret
mov
or
push
pusha
scas
cmp
xor
pop
inc
mov
cld
push
dec
xor
xor
imul
and
add
lcall
fnsave
popf
lods
cmp
sub
loopne
out
and
and
jae
fists
push
mov
adc
rorl
nop
aas
out
jmp
es
clc
addr16
push
shrl
cld
xchg
xchg
adc
dec
xor
scas
push
sahf
push
pop
mov
out
cmpsb
inc
inc
pop
ficoms
pushf
pop
dec
xor
cmp
push
call
enter
inc
movsb
dec
mov
out
loopne
shrb
cli
fmuls
pop
mov
sbb
mov
lahf
les
aas
std
cmc
ss
loopne
dec
cli
les
pop
out
into
aad
add
popa
out
pop
rol
dec
lock
sub
aad
cs
jne
pop
xchg
add
inc
xchg
cwtl
xor
push
mov
sub
in
sbb
jmp
cmpsb
pop
dec
and
push
enter
rcrb
jmp
mov
cs
add
xchg
repz
xor
lret
and
or
stos
adc
aam
sbb
pop
mov
inc
addb
jge
dec
sub
sbb
xchg
sbb
and
sbb
inc
cs
and
mov
and
jns
add
or
fadd
andb
out
popf
mov
adc
mov
mov
xchg
cmp
or
push
and
mov
repz
pop
out
dec
add
jnp
xchg
cmp
stos
xchg
dec
mov
fdivrp
mov
lcall
shlb
fldcw
push
ds
clc
sub
xorb
mov
mov
ds
int3
vandnpd
xchg
mov
adc
mov
ss
push
daa
rorb
loop
mov
cmp
pop
pop
mov
adc
xor
dec
inc
out
mov
adc
adc
rep
dec
fsubs
adc
push
js
or
pop
mov
jnp
mov
es
aam
bound
lea
stos
andb
jle
mov
lds
gs
add
jge
and
jno
daa
ja
fsts
sahf
cmp
xor
jb
les
mov
xor
loope
push
push
mov
loope
or
xor
lcall
or
movsb
faddp
movsb
cld
mov
pop
js
xchg
sbb
pusha
and
daa
pop
js
lds
roll
push
or
cmp
daa
outsb
dec
sbb
out
jmp
sbb
div
jge
push
lds
xor
xor
jl
and
fsubs
bound
inc
mov
push
sbb
fstl
push
and
sbb
je
and
bound
xchg
xchg
ja
repz
pop
rcrl
push
fadd
addb
mov
jb
incb
xchg
loop
imul
mov
add
inc
js
inc
call
stc
fistpll
sub
test
jo
xor
loop
mov
insb
fisubl
dec
arpl
stos
mov
adc
bound
and
nop
pop
mov
scas
cmc
in
push
dec
jnp
imul
in
jbe
dec
dec
pop
jmp
push
dec
and
insb
insl
or
jae
adc
jns
mov
fdivrs
adc
cmpsl
mov
aad
mov
push
into
adc
dec
arpl
mov
mov
fsubp
out
mov
and
pop
dec
and
xchg
in
mov
cltd
testl
cmpsb
and
mov
stos
das
and
leave
es
mov
iret
cs
ja
jno
gs
adc
xor
push
dec
or
inc
arpl
and
push
inc
xchg
out
ljmp
outsl
cmp
or
add
mov
jl
aas
jbe
iret
popa
in
xchg
stc
mov
xlat
cmp
mov
jne
xchg
lea
jnp
xchg
jle
lds
mov
es
das
mov
pop
mov
fwait
adc
xchg
pop
adc
xchg
mov
outsb
popa
movsl
pop
iret
ja
mov
cmp
cmp
adcb
jg
cltd
test
cmp
popa
jo
push
dec
sbb
push
sub
push
sub
xor
test
in
adc
std
xchg
stos
cltd
stos
fisttpl
scas
push
cltd
xor
or
scas
ds
popf
hlt
pop
pop
popf
cmc
or
jns
or
loop
lahf
fs
pop
pop
frstor
inc
push
mov
mov
pop
sub
or
xchg
or
icebp
jo
pusha
push
mov
adcb
dec
out
bound
adc
xchg
mov
push
sub
setnp
shlb
popa
sarl
xchg
imul
xchg
push
sbb
mov
mul
push
mov
stc
lret
pushf
xchg
arpl
dec
sub
int
cli
ljmp
and
mov
lea
or
add
xor
loop
jmp
xor
xor
gs
mov
pop
insl
in
push
add
fdivs
popa
fbld
jg
inc
inc
inc
inc
cmp
jge
jle
pop
sub
int3
xorl
mov
push
fwait
xchg
insb
pop
cwtl
movsb
add
out
push
mov
aam
mov
loope
xchg
and
dec
jmp
cmp
xchg
cli
addr16
add
shl
pop
or
aad
subb
mov
jecxz
lea
js
mov
cmp
mov
xchg
mov
adc
xchg
adc
mov
xor
call
mov
pop
sbb
and
add
push
push
negb
dec
or
mov
inc
pop
mov
xlat
mov
hlt
loopne
mov
into
sub
mov
push
fwait
xchg
add
movsb
push
jo
popf
adc
inc
pop
add
aam
mov
dec
rorb
int
je
or
xor
or
cmc
cmp
leave
or
adc
mov
std
call
jno
pushf
in
jp
inc
pop
xchg
cld
mov
cltd
adc
xchg
into
in
xor
jb
daa
popf
dec
insl
push
cltd
aaa
mov
rolb
push
sbb
cld
dec
cmp
dec
rol
cmp
adc
xor
sub
mov
sbb
xor
sub
pop
in
cli
adc
jmp
sbb
sbb
jge
and
outsb
inc
ja
bound
jecxz
add
popf
data16
inc
xor
and
cmp
xchg
repz
cmp
ds
inc
loop
out
dec
push
insl
loop
rolb
mov
xchg
cmp
gs
fidivs
loop
iret
out
jnp
mov
out
stos
sbb
int
cmp
test
into
cmp
clc
push
test
arpl
xor
add
into
mov
mov
icebp
pop
xor
fisubrl
jne
stos
inc
test
mov
push
sbb
leave
mov
or
pushf
cmp
pushf
stc
lods
jo
cltd
mov
jecxz
mov
add
push
xchg
lret
lcall
cwtl
decb
sti
add
cs
aaa
sbb
mov
lea
fisubrl
xor
xor
popa
add
mov
stc
push
adc
xlat
repz
dec
ss
inc
xor
ficoms
pop
adc
dec
cwtl
icebp
push
and
mov
loop
add
pop
sbb
test
jmp
in
arpl
ds
stc
sahf
ljmp
fcom
lret
imulb
dec
fcomps
imul
pop
pushf
jmp
mov
into
jecxz
sub
cld
out
mov
add
jno
push
or
clc
adc
inc
js
out
jae
bound
sub
flds
pusha
in
add
enter
pop
inc
cmp
je
push
mov
aad
mov
std
dec
repz
ljmp
cs
bound
mov
aaa
out
das
ret
cmc
mov
movsb
xchg
scas
data16
fcomps
sbb
dec
sbb
mov
pop
aaa
sbb
xchg
mov
std
icebp
int3
cld
mov
push
and
nop
mov
sub
cmp
sub
sbb
push
inc
cmp
xchg
and
es
scas
sub
or
leave
jns
xchg
loop
mov
shll
mov
mov
push
adc
rorb
dec
pop
jo
xor
repz
js
out
leave
loope
inc
clflush
int
fadd
xor
adc
hlt
mov
add
inc
adc
aam
ds
or
shrb
dec
lret
pop
iret
add
iret
dec
lea
adc
popa
rclb
mov
lods
inc
pop
jb
les
scas
dec
jno
pusha
call
push
xchg
movsl
dec
in
push
jne
add
movsl
and
call
stos
jbe
ds
xor
mov
test
arpl
scas
adc
pop
or
and
jo
lods
imul
adc
mov
mov
xchg
icebp
xor
add
cmpsl
cmpsb
mov
and
imul
sarl
mov
adc
fiaddl
jp
mov
add
push
cmp
loopne
xlat
adc
mov
push
outsl
pop
aad
xchg
cmc
sti
xchg
lods
lock
mov
addb
inc
xchg
push
xchg
push
jno
pop
lods
inc
fs
in
ds
push
inc
shl
push
arpl
add
negb
into
jg
push
js
sarl
popf
sub
sarl
jge
pusha
push
jae
or
aas
pop
std
arpl
and
or
stc
in
cwtl
in
lock
adc
xlat
loop
scas
fsubrp
in
fimull
fistpll
in
dec
add
lcall
cmp
mov
inc
jp
clc
ret
mov
nop
popa
in
xor
sbb
repnz
mov
fisttps
rcrb
into
adc
pop
lea
daa
arpl
xchg
fcomps
pop
cmpb
in
inc
xchg
cmp
sarl
and
sar
test
adc
fildl
lea
push
stc
sub
adc
push
xorl
add
in
lahf
in
es
inc
dec
xchg
sbbl
cmp
ja
mov
push
cltd
ss
pusha
insb
dec
push
and
sbb
rcll
arpl
dec
mov
fcmove
ja
mov
lret
sbb
arpl
push
pusha
sbb
xchg
mov
xlat
lret
sub
imul
dec
gs
mov
je
and
mov
mov
stos
mov
sbbl
imul
jae
andl
mov
pop
and
add
pop
or
test
int3
push
bound
mov
sub
xor
mov
xlat
in
sbb
xlat
pushf
push
dec
test
out
ret
rcr
lret
sarb
sarl
mov
test
daa
stc
loope
push
cmp
idivb
jne
inc
inc
sub
push
sbb
call
fst
aam
sahf
fcoml
fidivrs
mov
and
xchg
ficomps
nop
insb
mov
aas
aaa
xchg
das
ret
rorl
push
adcb
adc
push
push
and
aas
inc
xchg
in
adc
rorl
aad
jle
pop
faddl
pop
xchg
mov
rcr
shrl
push
sbb
mov
ret
adc
cmpl
xchg
sub
add
lds
push
pop
jmp
jge
test
faddp
faddl
add
mov
add
mov
mov
shl
adc
lea
or
lods
out
pusha
lret
jle
dec
insb
jo
movsl
push
jp
setb
add
loop
outsb
lcall
xchg
mov
clc
shll
stos
mov
inc
jo
dec
xor
jecxz
mov
add
adc
mov
push
push
je
push
adc
fidivrl
jno
stos
xchg
scas
adc
movsb
lods
sbb
call
out
sub
xchg
add
pop
mov
add
jg
and
test
fmull
push
or
rolb
xchg
pop
fucomi
shrl
into
jp
push
xchg
lahf
loope
aad
jge
or
mov
fs
mov
daa
ja
jecxz
lods
and
xor
lcall
jmp
sub
js
test
mov
and
cmpb
or
xchg
push
inc
cld
adc
les
sub
leave
das
add
xchg
push
jp
sub
dec
inc
sbbb
out
jp
jne
test
stos
push
xchg
mov
mov
cld
pop
cmp
push
add
or
mov
cli
push
lods
push
push
push
pop
add
adc
insl
jno
jmp
mov
cmpsb
pop
rorl
dec
pop
and
push
push
jmp
test
mov
or
rclb
or
adc
fwait
pusha
dec
xchg
sbb
inc
outsb
pop
dec
divb
lret
cmc
push
cld
xor
mov
mov
repz
or
jl
clc
xor
mov
mov
addl
mov
hlt
movsb
mov
fmulp
popa
daa
cmpl
fidivs
xor
or
push
push
pop
adc
mov
lock
xchg
out
fs
adc
shlb
out
pop
fs
jecxz
ret
fs
mov
sti
mov
sbb
out
push
dec
lcall
push
jl
imul
negb
mov
dec
sarb
popf
cmpsb
and
sub
cmc
icebp
xorl
stos
nopl
pop
xor
popa
jne
dec
fcompl
andl
or
scas
loop
out
and
enter
lfs
fildll
test
jo
xchg
jle
popf
sarl
and
jmp
repz
adc
mov
cmp
lret
inc
jecxz
fsubr
cli
ja
les
xor
idivb
sub
orl
call
dec
push
lcall
ffree
popa
dec
sbb
sub
rorb
cli
call
xor
jecxz
mov
ja
xchg
lods
mov
mov
scas
cmp
sub
pop
jno
mov
cli
jno
inc
shrl
in
rdtsc
or
ja
pop
cli
movsb
test
push
add
jle
add
mov
xchg
ret
outsl
xchg
add
mov
mulb
pop
mov
movsb
dec
or
repz
loopne
call
xor
mov
jmp
fidivrl
cmpsb
hlt
in
add
and
dec
or
in
sub
pop
sahf
xchg
inc
cmpsb
push
jge
into
test
sahf
push
fisttpl
pop
push
cmc
xchg
scas
jmp
aaa
cs
rorl
adc
sbb
fidivl
mov
nop
cmp
sbb
nop
xchg
mov
outsb
mov
push
xchg
je
pop
or
or
lods
mov
dec
iret
outsl
xor
cmp
mov
out
pop
push
inc
mov
xchg
scas
scas
add
mov
dec
mov
sbb
cld
cwtl
jmp
movsl
push
std
push
aad
vmovsldup
add
pop
xor
pop
cmp
push
cli
jb
jae
pop
push
rorb
or
jae
lods
in
pop
dec
outsl
loope
cld
movsb
ret
imul
enter
lret
test
mov
cmp
xchg
and
std
addb
push
add
mov
out
scas
cmc
push
mov
mov
jmp
pop
jle
jmp
jae
and
xchg
lds
rcrb
fadd
add
and
out
jmp
or
es
push
xchg
lds
stc
mov
dec
hlt
mov
insb
xchg
dec
xor
iret
movsl
test
or
iret
push
mov
mov
rcrb
xchg
dec
cmp
adc
in
fsubrp
pusha
mov
lock
sub
sbb
movsl
adc
sbb
xlat
mov
mov
fiaddl
adc
or
lock
repz
cwtl
out
lret
outsb
negb
inc
push
shrl
pushf
jno
xor
gs
jns
mov
scas
sarb
movsb
mov
dec
mov
ja
pop
aas
in
int3
or
pop
or
fcom
xchg
and
xor
ja
mov
fildl
jb
sub
imul
fisubrs
pop
inc
and
fdivl
xor
jle
dec
xchg
mov
orps
loope
mov
mov
push
je
add
out
push
mov
mov
mov
cwtl
add
jae
sarb
push
mov
scas
push
fbld
or
mov
in
mov
mov
je
xor
push
dec
dec
popa
xchg
sarb
adc
mov
add
fsubs
or
pop
fnstcw
xchg
mul
aad
stos
xor
cld
loope
sarl
pop
pop
mov
sbb
icebp
dec
mov
push
cmp
dec
push
out
xchg
push
repnz
ret
orl
sub
mov
daa
add
cmp
aaa
cmpsb
push
xchg
xor
hlt
mov
xor
xchg
sbb
xchg
movsb
loop
addb
or
iret
iret
mov
out
mov
dec
popf
and
mov
mov
sub
xchg
xor
sahf
add
stos
outsl
cmp
loop
test
inc
icebp
push
leave
xchg
icebp
in
and
stos
sub
adc
mov
sahf
cmp
jg
cmp
es
jl
insb
xchg
and
enter
mov
stc
dec
popa
mul
in
aas
push
inc
or
stos
sar
ret
out
mov
mov
xchg
push
shll
stos
sub
xor
cmc
cld
arpl
push
push
and
sub
mov
xchg
stos
out
in
xorb
jg
lods
cltd
pop
pop
xchg
call
scas
pop
sub
sub
popl
and
insl
jge
and
testb
sbb
mov
not
xorl
addl
push
jae
xchg
lods
mov
lock
ds
cmpsl
loopne
add
in
movsb
cmpsb
jge
mov
mov
and
push
mov
lret
sbb
jle
test
fimull
push
xchg
fsubl
lcall
in
aad
add
add
in
mov
arpl
pop
std
ds
jae
inc
ja
xchg
js
jge
xlat
jb
shlb
cmpsb
pop
xor
jecxz
enter
jae
cmp
sbb
cli
pop
rclb
shll
sahf
adc
pop
xchg
sbb
cld
leave
add
cli
add
aas
xchg
lret
sahf
pop
imul
and
xchg
jbe
and
dec
arpl
add
in
mov
sbbl
sub
into
lcall
mov
jp
sti
aad
mov
push
les
xor
add
rorb
sarb
out
dec
cld
pop
shlb
sub
mov
stos
int3
push
mov
subb
test
push
sarb
and
mov
mov
enterw
dec
mov
popl
xchg
das
loopne
in
mov
or
gs
aam
sbb
orl
ret
jns
cli
les
lods
ror
pop
push
fadds
dec
es
mov
add
cltd
sub
test
test
push
popf
jbe
out
dec
shlb
cmp
adc
sub
sub
test
leave
mov
ss
xchg
std
cli
int3
mov
jbe
mov
jl
pop
std
data16
dec
push
cmp
cltd
pop
jp
mov
xchg
stc
mov
xor
sub
outsl
out
jne
xlat
sbb
jo
pop
lock
ljmp
mov
dec
mov
fistps
clc
lret
jns
sub
push
or
dec
pop
popa
call
dec
push
ret
add
cld
push
xchg
call
add
cmp
test
cmp
inc
lret
stos
mov
in
loope
mov
pop
mov
cwtl
push
inc
shrl
out
ret
iret
dec
push
push
push
inc
adc
jp
xor
es
xlat
mov
jmp
sub
cld
rorb
add
xchg
bound
loope
add
add
xor
sub
jo
popf
jnp
fwait
mov
addr16
lds
pop
nop
mov
or
ficomps
mov
add
fisubrs
movsb
mov
test
es
ljmp
xchg
loopne
test
sarb
jmp
movsb
jmp
xchg
shll
out
adc
sahf
xor
fistps
mov
jg
lret
lret
call
shll
sbb
daa
sbb
fdivl
dec
data16
daa
pop
cld
mov
insb
ja
hlt
xor
adc
lret
jp
sub
xchg
add
icebp
imul
cmpsl
mov
divl
jg
push
ret
xchg
mov
ja
xchg
sub
js
xchg
cltd
mov
lret
sub
stc
scas
popf
call
out
mov
dec
or
or
mov
pusha
pop
mov
jg
mov
addr16
icebp
cltd
scas
or
mov
cs
lahf
sub
dec
push
push
xor
int
sbbb
cmpsl
cmpb
lahf
pop
cmp
fimuls
out
mov
rcrl
sub
pop
shr
push
popf
jp
js
mov
push
adc
mov
mov
test
out
fwait
xchg
fs
xchg
jle
and
xchg
sbb
add
pop
or
xchg
xchg
pop
out
pop
fisttpll
and
adc
fs
loopne
loopne
lcall
cmc
les
mov
cmpb
jo
xchg
jae
pop
ljmp
sbbb
jg
addr16
or
cld
sahf
mov
stc
pop
mov
stc
in
mov
sbb
mov
pop
or
aam
call
jmp
sbb
hlt
xor
imul
sub
push
mov
adcl
xor
shr
popf
xor
push
adc
cmp
enter
cmc
xchg
test
cs
sub
push
in
inc
jns
and
adc
out
aam
fildll
inc
scas
fwait
xor
mov
cli
push
mov
outsl
loopne
sub
sub
pop
out
aam
hlt
loope
popa
fwait
xor
out
mov
dec
mov
filds
repnz
add
or
and
cmp
cmpsl
push
push
mov
fwait
pop
aas
push
in
push
clc
loope
xchg
ss
fs
cmp
cmp
push
movsb
jb
push
cwtl
cli
out
xchg
pop
int
stc
in
stos
dec
add
xchg
outsl
call
pop
pop
loop
jp
sbb
push
shll
es
aas
jno
xchg
aaa
aad
imul
enter
or
lahf
or
push
rcrl
add
xor
and
cli
pop
into
outsl
jg
fildll
jns
jp
xchg
adc
push
imul
sbb
sub
or
sbb
shlb
addb
cmp
pop
mov
cmpsl
inc
add
jmp
and
imul
and
pop
gs
pop
pop
xchg
or
lea
push
fdivrl
ss
lret
cmp
daa
cmpl
out
sti
into
loope
mov
xchg
mov
data16
sub
fistpll
into
mov
mov
adc
and
es
lret
sub
inc
jns
jle
xor
in
cmpsl
mov
fistpl
lods
mov
pop
pop
in
dec
mov
dec
ljmp
dec
push
fwait
mov
hlt
dec
pop
out
mov
add
jge
pop
movsl
out
pop
aad
aas
icebp
shlb
cwtl
sbb
lock
or
loope
pushf
or
adc
add
sarl
repnz
adc
jns
adc
cwtl
lock
mov
aam
pop
push
inc
cmp
mov
xchg
fnsave
sbbb
push
cmp
dec
lea
bound
add
sbb
test
iret
lret
orb
and
pushf
repnz
dec
cmp
push
mov
inc
mull
pop
aam
jmp
les
int3
stos
je
hlt
mov
xchg
pop
mov
sbb
test
dec
jbe
pop
and
push
movsb
jge
push
adc
shrl
inc
es
mov
nop
push
adc
lock
xlat
scas
pop
and
sub
mov
push
pop
and
xchg
cmp
mov
or
iret
fmull
pop
dec
ja
push
ficoms
imul
mov
rcrl
into
pop
adc
xor
lods
push
test
add
mov
jb
in
and
cmp
aas
cmp
pop
push
scas
fmull
sbb
aam
popa
lods
das
outsl
push
lret
insl
mov
rcrl
stos
les
ret
fcoml
sbb
pop
repz
adc
xor
xor
cmp
xchg
leave
mov
dec
push
lods
lea
xor
cmc
jecxz
jo
add
loope
arpl
push
jb
mov
fwait
xchg
adc
in
mov
xchg
addr16
sbb
xchg
add
sub
jg
or
loope
xchg
ja
leave
jne
scas
icebp
js
inc
and
add
lret
fwait
add
aaa
std
inc
cmpsl
mov
test
jl
ret
cmpsl
mov
dec
cld
popf
mov
inc
fstps
cmpsb
sub
pop
mov
mov
sbb
divl
push
dec
sbb
push
fs
leave
aad
adc
mov
je
mov
imul
sub
and
pop
hlt
push
iret
push
out
loope
out
repnz
lret
cmp
aam
mov
ret
push
mov
adc
cli
xchg
insb
clc
loopne
jae
jmp
mov
add
decl
cmp
mov
fs
adc
mov
arpl
mov
mov
xchg
outsb
lahf
mov
outsb
jo
cmpsl
lods
jg
sbb
mov
add
add
push
xchg
insb
or
cwtl
pop
mov
in
xchg
bound
mov
sub
nop
cwtl
pop
lea
dec
xchg
in
fdivs
aad
imul
dec
inc
dec
shl
push
sbb
mov
dec
jns
pop
outsb
lds
pop
inc
shll
sbbb
sbb
ds
jge
mov
setnp
addb
ss
mov
jnp
in
arpl
jl
mov
mov
and
sarb
aas
adc
in
jp
test
cmpsb
cli
cmp
imul
inc
jl
jle
arpl
xor
rolb
push
in
addr16
hlt
sarb
xchg
das
adc
aaa
cmp
pop
loope
mov
fcmovnu
dec
jle
shl
dec
pop
pop
psrld
ficomps
sbb
xor
ds
lods
fstl
ficoml
pop
xor
xor
scas
jnp
scas
mov
stos
insl
fistpl
test
ljmp
fidivrs
cmp
mov
jg
fwait
push
ds
pop
pop
int
inc
sub
fldt
jnp
hlt
jo
mov
rorl
ss
inc
aad
push
mov
cmp
loopne
bound
repnz
cmpsl
daa
adc
mov
mov
imul
fisubrl
push
push
and
or
cmpsl
lds
fcomps
clc
sbb
cmp
mov
cmp
stos
insb
iret
dec
nop
out
xchg
orl
sub
jg
sub
push
pop
pop
xlat
sub
push
inc
lock
mov
pushf
push
shrb
les
xchg
repnz
insb
jge
pop
out
clc
jp
popl
push
jg
jg
push
or
pop
inc
inc
rcrb
dec
or
pop
es
ret
gs
xchg
shll
cmp
push
fnstsw
or
popf
mov
sub
cmp
pop
mov
lret
imul
mov
sbb
sbb
cld
bound
sbb
inc
add
jecxz
jbe
lods
outsl
ljmp
and
and
dec
repnz
add
pop
fisubs
cmp
xor
sub
sarl
inc
mov
cld
popa
shll
imul
jb
loopne
icebp
adc
mov
sub
movsb
inc
js
or
ret
xchg
add
loope
gs
jns
fiadds
movsl
mov
subl
or
adc
adc
mov
nop
test
pop
insb
xor
dec
mov
sub
or
aam
stc
and
jns
mov
nop
fwait
call
mov
and
push
in
add
out
fisubrl
sarl
divb
clc
cmpsb
cmp
fnstcw
sbbl
and
scas
pop
add
adc
xchg
xchg
adc
pushf
fistl
dec
sub
cmp
ss
pop
lea
pop
xlat
sub
jae
pop
sbb
out
push
mov
std
dec
push
adc
xor
pop
fisubs
call
iret
arpl
fs
es
sub
mov
fistl
jg
imul
xlat
push
ljmp
cmc
int
rclb
cmp
jnp
les
cmp
mov
push
xchg
movsb
cmp
stos
cmp
lock
test
mov
xor
fildll
xor
inc
jae
jp
mov
shll
sahf
lods
repz
mov
xchg
clc
popf
out
pop
cs
repz
out
enter
xchg
shl
jecxz
aam
mov
jne
add
stos
sbb
inc
and
ja
lcall
dec
scas
push
jle
sbb
xchg
add
push
mov
fidivrs
shlb
pop
or
cmpsb
lea
lock
mov
push
xchg
jae
lods
jnp
jecxz
mov
mov
add
push
js
push
imul
push
pop
pop
xchg
enter
rcll
shrd
out
inc
cmp
std
loope
sbb
popf
mov
pop
fdivrs
nop
adc
inc
jne
leave
filds
xorb
pop
adc
push
arpl
fists
imul
cmpsl
iret
inc
dec
or
jb
imul
leave
cmp
jnp
xchg
pop
aaa
or
cld
adc
enter
lret
push
and
lods
mov
dec
jg
mov
sbb
inc
lock
imul
xor
shrb
das
xchg
and
mov
repz
aaa
sarb
push
stos
sarl
mov
adc
out
push
mov
cmp
pop
lds
cmp
es
enter
add
out
into
pop
out
dec
mov
les
push
repnz
bound
jb
inc
mov
adc
or
sub
dec
inc
xorb
addb
inc
pop
and
push
mov
sbbl
jnp
sbb
or
sarb
fisubs
mov
adc
dec
cli
test
nop
xchg
leave
fldl
sub
rcrl
cld
cmp
xlat
jb
hlt
rcll
xchg
clc
add
sub
imul
ja,pt
outsb
dec
stos
stos
out
adc
repz
test
adc
outsb
stos
adc
cwtl
push
push
scas
clc
fsubl
xchg
outsb
xlat
push
loopne
xlat
sti
inc
mov
movsb
dec
add
enter
test
sub
push
push
lret
je
aam
lret
cmp
mov
mov
insb
pmullw
push
pop
js
or
imul
sub
xchg
imul
pop
push
out
lret
jle
xchg
sub
jbe
hlt
cwtl
lock
lret
xchg
movsl
or
dec
xchg
inc
stc
stos
hlt
bound
and
bound
mov
ret
lea
mov
and
int
jo
out
push
scas
outsl
mov
xchg
je
add
pop
nop
jo
add
insl
addr16
cltd
jnp
adc
mov
outsb
fildl
dec
es
test
int
repnz
pop
pop
jle
stos
pop
push
repnz
adc
mov
loope
inc
and
sub
sbb
fimuls
add
push
add
fsubrl
cmp
cmpsl
push
mov
xchg
sti
inc
and
sbb
mov
je
mov
xchg
gs
and
lock
jns
mov
cmp
imul
addr16
fs
test
addr16
dec
dec
testl
xchg
sbb
xchg
mov
sub
sbb
cli
dec
inc
popf
fidivrs
imul
ljmp
or
xor
call
out
repnz
loope
mov
imul
es
in
gs
jecxz
ss
mov
adc
mov
lret
int
push
jmp
sarl
jns
mov
les
xchg
inc
push
push
movsb
xor
xor
test
pop
mov
xor
push
push
insl
and
cmp
dec
fwait
shrl
xor
mov
scas
sbb
dec
mov
xor
arpl
out
xor
shrl
mov
in
or
inc
popf
lods
addb
dec
jo
mov
inc
or
add
cmp
mov
and
cmpb
xchg
xchg
lcall
cmp
add
lcall
fs
jns
dec
cltd
dec
scas
sbb
iret
inc
imul
push
mov
push
rcrl
inc
lock
repz
pop
adc
add
adc
cmp
pop
out
and
shl
popf
pop
adc
test
repnz
and
add
dec
sub
xor
loope
ja
jp
lret
je
ja
lods
sub
pop
mov
inc
jae
into
mov
fcmovnb
cmpsl
test
mov
mov
outsl
aam
sbb
pop
sub
mov
jmp
adc
inc
or
andl
das
cmp
into
pop
inc
lret
stos
or
jb
loopne
movsl
mov
ss
pop
movsl
push
int3
mov
test
mov
inc
in
xorb
dec
jb
or
rcrb
or
bound
sub
fdivrl
sbb
xchg
scas
imulb
scas
and
mov
add
pop
loope
jg
push
push
into
in
sub
mov
xor
add
pop
std
pop
sub
fiaddl
xor
ja
daa
xor
mov
es
lea
mov
jl
movsl
jno
mov
cs
fs
stos
mov
mov
or
leave
js
iret
std
push
mov
push
cmpsl
jg
sub
mov
jmp
xor
pop
adc
mov
dec
inc
stos
out
dec
inc
fcmove
add
pop
int3
mov
fisubs
inc
mov
andb
fnsave
push
sub
xchg
mov
dec
add
jmp
test
sbb
sti
notl
jb
cld
aam
rcrl
mov
adc
es
shll
or
inc
or
repz
scas
sub
pop
cmp
xchg
cld
push
insb
popa
aas
inc
rorb
ds
add
mov
lea
cmp
adc
pop
je
test
daa
sbb
jns
push
mov
sub
jo
push
ljmp
push
fsubl
adcb
lods
mov
mov
dec
inc
js
jo
xorb
pop
push
and
mov
lea
mov
lahf
push
fstpt
inc
mov
adc
mov
sub
mov
lods
and
add
and
jns
and
sub
fstl
mov
insb
sarb
enter
ret
imul
sbb
ss
cmp
out
dec
movsb
jp
mov
jno
mov
or
test
add
lahf
sar
cli
aad
sbb
lock
dec
repnz
scas
or
push
adc
mov
in
mov
or
add
xchg
in
or
add
mov
inc
push
inc
xor
insb
mov
mov
sbb
or
ret
jle
out
enter
add
addb
dec
ss
add
aad
and
div
in
cmp
pop
adc
das
push
lock
lahf
xor
addb
mov
nop
xor
addl
arpl
add
rcrb
test
pop
mov
imul
mov
pop
dec
dec
sbb
sbb
push
dec
xor
les
testb
and
add
xchg
rcl
mov
dec
movsl
mov
sub
mov
mov
shlb
mov
push
xchg
cmp
hlt
mov
sub
xor
or
add
push
loopne
into
jns
sbb
pushf
pop
sbb
lcall
mov
xorb
ja
sbb
scas
push
cmpsl
lds
push
inc
mov
imul
scas
mov
js
popa
pop
lods
jmp
xlat
dec
inc
jmp
int
sub
add
movsb
mov
push
adc
sub
rorb
cmp
mov
jbe
filds
sub
dec
xor
cmpb
dec
add
inc
mov
jns
mov
movl
nop
mov
roll
jge
insl
mov
sti
sahf
push
xor
pop
cmp
scas
pop
jnp
inc
enter
orl
jnp
jle
lock
inc
push
aam
adc
fwait
add
lea
sbb
test
inc
daa
mov
xor
test
mov
notl
jb
orb
mov
add
lret
pop
bound
cmp
data16
popf
inc
cmp
sbb
xor
in
enter
mov
outsl
adc
stc
lret
ret
fwait
cmpsb
out
mov
jmp
ror
es
mov
mov
xorb
flds
or
loop
mov
test
orl
sahf
mov
dec
cs
xor
enter
stos
dec
push
hlt
cli
jnp
adc
mov
pop
adc
cmp
mov
lods
decl
mov
fists
add
iret
sahf
fildll
push
movsb
cmp
cltd
scas
inc
xlat
inc
int3
jmp
mov
sahf
bound
or
lock
xor
cmp
fldenv
cmpsl
adc
lods
and
ret
int3
cmp
add
sub
inc
pop
in
push
cmp
jne
xor
shrl
mov
adc
dec
lcall
pop
jp
rcrl
inc
and
and
insl
cld
scas
pop
out
std
jae
and
push
pop
into
pop
addr16
push
adc
test
movsb
sbb
mov
push
in
inc
sarb
inc
shlb
addb
pop
fcomps
iret
sbb
pop
cmpb
jg
push
movsb
sbb
sti
add
xor
je
out
push
mov
out
inc
adc
adcb
cmc
and
mov
cmpl
inc
mov
jle
mov
jne
mov
daa
test
pop
mov
mov
pop
lret
in
mov
test
xor
clc
sbb
xor
pop
sbb
out
stos
scas
push
or
dec
adc
sbb
adc
rcrl
js
adc
inc
fisttps
popf
xor
inc
mov
lods
ret
pushf
sbb
pop
loopne
dec
mov
sub
sbb
inc
in
xchg
popf
xor
and
test
mov
xlat
mov
jns
clc
fstp
int
or
pop
add
adc
jne
pop
and
movsb
adc
dec
test
dec
sub
add
sub
inc
dec
rcrl
mov
xor
lret
jmp
jno
push
hlt
fcompl
fstp
subl
sahf
push
popa
int3
mov
outsl
mov
xor
into
andb
mov
xor
xor
mov
jmp
inc
xchg
loop
cmp
call
xchg
loop
push
mov
sub
out
adc
jbe
lcall
out
setp
test
loopne
or
dec
loop
xor
sub
xchg
clc
jbe
repnz
negb
push
ja
fbld
dec
jbe
in
cmp
push
push
cmp
xchg
lods
sbb
cmp
push
sub
dec
jl
cmpsl
fisubs
cltd
test
push
fpatan
bound
pop
in
dec
or
arpl
mov
jbe
rolb
mov
jne
imul
ss
bound
cli
sbb
repz
je
ds
mov
xchg
mov
xchg
ret
push
insl
mov
out
sti
rcrl
mov
mov
pop
imul
jbe
xchg
cmp
sub
cmp
sbb
insl
xlat
xchg
and
mov
pop
cmp
mov
xchg
add
pop
xor
mov
xor
mov
jae
cmp
fnstsw
push
or
iret
repz
rorl
or
into
and
pop
xor
push
ds
fldcw
repz
mov
mov
xchg
inc
movsl
lahf
int
push
jb
fstl
mov
adc
in
xor
push
das
adc
nop
outsl
jle
call
ljmp
lret
pushf
mov
fsubrs
rol
and
mov
add
push
inc
loop
mov
adc
sarl
jo
xchg
sbb
sub
sbb
and
or
scas
call
popf
sub
imul
movsl
mov
or
stos
sbb
push
fdivr
xor
mov
mov
iret
flds
hlt
push
mov
xor
inc
std
lret
mov
mov
xchg
xchg
bound
xor
clc
out
stc
popf
out
repnz
insb
sahf
pop
and
inc
mov
cwtl
mov
and
mov
loope
jmp
or
inc
into
popf
lahf
leave
frstor
sti
aaa
lret
shll
jne
mov
into
rol
push
das
mov
and
and
mov
and
iret
pop
adc
fs
rcr
push
mov
cwtl
insb
dec
sub
push
or
mov
adc
stos
inc
insb
mov
popa
adc
jne
cmp
xchg
test
mov
push
into
push
stos
dec
fbld
mov
cmp
out
insl
or
ret
adc
push
mov
add
leave
push
or
jp
dec
fidivrl
add
inc
dec
repnz
lahf
mov
inc
jl
sub
pop
imul
dec
test
or
cmc
movsb
loope
sub
lods
fidivrl
pop
jl
fidivrl
cmp
int3
call
cmpsl
imul
stc
mov
insb
and
insb
xor
lret
pop
sub
cmp
pop
enter
mov
inc
inc
xor
nop
inc
sbb
pusha
cmp
out
jno
inc
movsb
das
and
aaa
and
fdivs
adc
hlt
xchg
sbb
sahf
sub
nop
dec
add
call
in
cmp
jmp
fldenv
push
std
dec
clc
test
push
test
subl
out
mov
adc
shrb
cmp
adc
mov
pop
cmp
xlat
lret
cld
inc
lods
movsl
adc
out
sub
lods
lods
ss
xchg
adc
bound
insl
push
pop
mov
push
xchg
inc
add
xlat
pop
mov
cmp
and
push
push
push
subb
jne
xlat
pop
ret
mov
in
adc
lahf
lret
adc
jge
out
cmp
loop
pop
int3
pop
shll
pop
xchg
push
sub
sub
xchg
std
pop
sbb
cs
in
jns
hlt
insl
jb
movsl
mov
mov
es
and
imul
cmp
loope,pn
mov
adc
movb
loop
mov
adc
jle
xchg
add
mov
fnstcw
cmpsb
pop
lret
cli
mov
add
sahf
inc
adc
cld
mov
jb
and
xlat
xor
inc
je
or
ret
mov
xchg
mov
and
mov
inc
enter
mov
imul
lea
mov
cmp
push
mov
pusha
jae
pop
mov
lcall
cli
data16
icebp
push
mov
or
leave
lcall
mov
lret
mov
dec
adc
xor
mov
test
pop
ret
pushf
sbbl
data16
cmp
and
push
mov
sti
jl
and
cmpb
xchg
into
cmpsb
lcall
ficoms
ja
cmp
dec
xor
xchg
jno
mov
push
xlat
jmp
int3
jmp
push
fbstp
fucomp
outsl
xchg
stc
mov
inc
fsubr
and
mov
push
adc
mov
cmp
xchg
inc
nop
jecxz
xchg
imul
dec
mov
adc
mov
jl
int
jge
ret
sti
imul
mov
lods
sub
pop
or
mov
sub
inc
sahf
sbb
test
mov
sbb
xlat
adc
dec
and
cmp
dec
sub
cmp
ror
lcall
cld
jnp
ficomps
inc
inc
addr16
or
jecxz,pn
loope
mov
adc
test
xor
mov
andb
sbb
add
clc
jmp
outsb
pop
aad
cmpsl
setge
sbb
push
or
cmpsl
sub
sub
lret
jp
out
mov
pop
test
out
fistpl
pop
jns
mov
xchg
repz
bound
lods
sahf
ja
inc
in
mov
xchg
mov
je
scas
inc
mov
dec
and
sub
push
sbb
and
push
and
cwtl
cli
jb
sbb
stc
stc
xor
popf
pop
aaa
mov
daa
dec
movb
pop
aaa
mov
mov
loope
pop
xchg
or
in
shr
filds
lea
lods
cli
push
push
ret
pop
fidivrs
pop
cwtl
push
decl
imul
mov
jns
mov
mov
scas
and
xor
nop
lret
dec
mov
rclb
jl
jp
mov
xorl
fisttps
push
xchg
dec
hlt
dec
out
les
inc
adc
or
fcomps
and
jecxz
into
addr16
outsl
lret
mov
jae
js
inc
aas
fs
push
in
sbbb
xor
xchg
sub
test
rolb
add
pop
fldl
arpl
pop
add
cld
movsb
popa
clc
pop
lds
xorl
or
xor
adc
int
xchg
sahf
lret
inc
and
xchg
jb
mov
orl
and
or
jb
push
imul
out
xor
flds
and
sti
fadds
jb
pop
dec
jl
add
int3
call
sub
into
cmp
aaa
push
mov
ja
pop
sbb
pop
and
or
daa
mov
jne
xchg
cld
push
and
push
dec
jmp
cmc
and
dec
scas
addl
outsl
lods
xchg
les
jne
mov
mov
push
cmpsl
push
aas
dec
sbb
dec
jb
stos
add
xlat
dec
sbb
add
rcr
clc
aaa
test
and
adc
cmp
ds
dec
sub
mov
cli
lods
xlat
pusha
test
push
addb
dec
stos
insb
pop
dec
sahf
inc
shl
lret
sub
mov
mov
push
push
leave
ret
test
pusha
xchg
sahf
jns
pushf
cmpsb
add
inc
bound
aad
leave
mov
push
xlat
xchg
mov
jo
jne
ret
pushf
sti
mov
mov
dec
push
xchg
out
scas
fnstcw
sbb
dec
or
shr
jl
ret
insb
and
sbbb
fnstcw
int
mov
sbb
repnz
lahf
cwtl
jl
add
stos
icebp
jo
push
cmp
jae
cmp
adc
cmp
lods
aam
pop
in
mov
mov
mov
out
push
push
shr
js
xchg
adc
jle
fs
aaa
arpl
jmp
xchg
leave
subb
gs
inc
dec
jle
inc
pop
ds
inc
push
add
dec
mov
sti
cmp
cmp
dec
fwait
fs
and
out
and
cmc
and
xlat
push
adc
sarl
sbb
int3
pop
ds
imul
pusha
enter
lret
ficoms
add
mov
and
push
inc
adc
in
addr16
lds
push
outsl
leave
stos
xor
add
pop
scas
pop
sbbb
movsl
dec
mov
xorb
dec
repnz
es
add
sti
mov
mov
cli
dec
sub
scas
shl
test
mov
add
push
sti
mov
dec
mov
in
cltd
jns
lret
adc
mov
pop
test
nop
imul
pop
and
jne
mov
popa
lds
sub
push
hlt
xchg
sub
xor
jo
test
std
jge
mov
jmp
mov
hlt
pop
imul
push
jb
aaa
cmp
mov
frstor
xchg
push
xor
jmp
test
mov
push
xchg
pop
and
inc
xchg
push
test
repz
shlb
fcomps
xchg
mov
xchg
mov
jecxz
jge
pop
xchg
cwtl
push
sbb
cmp
push
je
cs
fidivs
cld
jnp
inc
cs
pop
ficoml
arpl
mov
adc
mov
loop
mov
mov
shlb
imul
les
mov
daa
and
out
add
loopne
fs
arpl
jecxz
push
fadds
lret
mov
cmp
mov
cmpsb
xor
push
outsb
lods
insb
ljmp
jns
xlat
push
jno
jns
cli
dec
jecxz
mov
adc
sub
mov
popf
adc
arpl
pop
mov
xor
hlt
fisubs
mov
mov
xchg
pop
dec
adc
jmp
mov
xchg
pusha
pop
push
int
ljmp
push
sub
ret
add
out
ret
mov
aas
sub
and
mov
mov
ljmp
or
cwtl
cmpsb
ljmp
inc
dec
js
stos
hlt
in
xchg
xchg
repnz
push
sub
arpl
jmp
fsubl
lods
add
lods
leave
cmpsl
rcrb
mov
cltd
jb
sahf
test
ljmp
mov
sub
add
sub
jb
xchg
imulb
jns
mov
or
int
loopne
jg
int
inc
sub
stos
dec
iret
ljmpw
arpl
mov
jge
and
dec
pop
call
dec
andl
cmp
shlb
dec
test
and
jne
mov
xchg
dec
in
icebp
jecxz
push
sahf
xchg
imul
ss
adcl
and
in
sbb
inc
cmp
iret
mov
orl
push
xor
xlat
enter
jae
cmpsb
push
jne
lods
jecxz
je
adc
mov
aam
push
jnp
lods
push
mov
outsl
mov
ror
data16
xchg
sbb
xchg
sbb
cmpsl
out
dec
fadd
ljmp
rol
lods
stos
mov
lods
mov
sbb
sub
jno
sub
daa
fwait
ljmp
iret
cmp
push
movsb
bound
add
or
fdivrs
fdiv
push
push
and
jl
cld
loop
add
mov
xchg
sub
scas
insb
dec
mov
push
xchg
in
fldl
ljmp
xor
push
sbb
mov
pop
dec
xor
ja
lds
sbb
mov
dec
mov
lock
ss
jno
nop
xor
mov
xor
scas
test
cltd
add
rol
lea
cmp
sbb
and
add
out
jge
ss
push
mov
das
sti
clc
mov
ja
jg
stos
push
lock
mov
xchg
sub
das
adc
jmp
stc
mov
sahf
lahf
lea
jo
movsl
scas
ss
gs
cltd
add
mov
sub
cli
mov
cmp
and
scas
dec
mov
dec
fcmovbe
dec
push
lods
das
jle
mov
dec
push
clc
lret
int
inc
in
cs
pusha
leave
inc
in
notl
mov
mov
pop
es
push
int3
dec
cmc
ret
jl
sarb
les
xchg
xchg
stc
loop
mov
add
pop
push
push
outsl
jge
cmp
je
xchg
mov
lods
push
cmp
mov
xchg
int3
jp
inc
add
inc
inc
push
pop
push
repz
cmp
sbb
jb
sbb
fs
sbb
or
pusha
mov
icebp
sub
aas
or
jge
andl
mov
icebp
das
dec
jnp
arpl
sti
xchg
pop
pop
mov
and
mov
lods
cmp
aas
cmp
push
pop
scas
pop
sbb
jae
xor
push
andl
xor
inc
int3
dec
sbb
cmp
pop
cmp
in
aas
jns
sbb
imul
fwait
mov
loop
lahf
push
dec
shrl
mov
js
repnz
dec
jle
sbbb
mov
lcall
xchg
mov
pop
out
sbb
out
inc
stos
das
cld
movsb
sbb
out
stos
inc
sar
mov
sub
xlat
test
daa
hlt
dec
or
js
adc
in
or
inc
cli
cmp
inc
xor
xor
out
adc
jo
mov
loop
subb
sbb
push
mov
inc
dec
cs
repz
pop
sti
cmp
test
xchg
pop
les
xchg
lret
cmc
add
cmp
xor
movsl
sub
inc
scas
mov
pusha
dec
push
dec
cmpsb
subb
adc
fs
dec
cmp
xchg
jge
sbb
lds
pop
dec
and
dec
push
sub
jmp
sbb
sar
inc
add
pushf
js
clc
stos
sub
and
lcall
outsl
fwait
popa
xor
movsl
cli
jo
mov
pop
lcall
or
or
mov
mov
push
test
cmp
dec
sub
out
test
cltd
sub
in
xchg
and
xchg
pop
cmp
mov
inc
jno
popa
jmp
outsb
dec
int
mov
mov
sub
popa
inc
outsl
aaa
lds
loope
sbbb
mov
in
inc
out
add
ss
jge
cmp
cli
mov
jmp
dec
vpsubsw
loopne
incl
ljmp
and
fwait
or
sbb
dec
xor
jmp
repnz
sbb
push
outsl
pop
xor
sti
cltd
inc
push
dec
in
decl
iret
lock
data16
push
pop
mov
out
jae
cmp
inc
test
insl
loopne
subl
push
push
pop
cs
mov
and
lahf
adc
cmpsl
dec
bound
int3
aad
mov
dec
testb
cli
xchg
mov
and
sbb
inc
and
aam
loope
or
push
add
or
dec
adc
data16
ja
mov
les
ds
add
push
lret
push
out
pop
or
arpl
stc
mov
addr16
aaa
or
jg
loope
sbb
js
mov
repnz
lret
test
out
add
add
cmp
jle
jg
ljmp
inc
loopne
mov
test
and
mov
pop
xchg
fwait
sub
sbb
sahf
rorl
jmp
repnz
push
adc
movsb
lock
push
lcall
add
inc
fs
enter
dec
rcl
jae
fcmovbe
adc
jo
cmp
inc
jl
jg
xor
xchg
imul
push
dec
fucomi
xor
test
push
sub
sub
add
jbe
loope
testl
out
outsb
lds
sbb
pusha
aas
mov
repnz
jo
pop
sub
mov
mov
push
cmp
loop
pop
xor
mov
icebp
fisttpl
imul
fldcw
cli
pop
ret
dec
test
cs
movsl
rol
push
cltd
jecxz
push
jns
and
scas
ret
mov
mov
popa
lea
add
and
push
mov
fs
dec
push
add
rorb
in
addb
cmp
inc
cltd
xor
mov
es
sti
iret
sub
test
and
add
repz
mov
xchg
pusha
rclb
enter
add
push
js
mov
push
ds
sarl
hlt
push
pop
fsubrs
mov
movsb
adc
xchg
dec
pop
mov
xor
fidivrs
jp
loopne
fadd
mov
fwait
mov
add
lods
pusha
and
repz
mov
pop
cmp
loopne
imul
cmp
cmp
adc
cmp
out
jmp
jle
add
mull
dec
mov
test
xlat
mov
xor
call
fiadds
dec
sbb
fdivp
iret
insl
and
in
and
fisttps
les
jo
push
jmp
dec
add
and
rcrl
sete
xor
cmp
mov
setns
pop
nop
inc
cmc
ret
mov
aas
mov
ret
inc
insl
loope
mov
lea
into
or
pushf
lea
stos
xchg
mov
pop
cmp
pop
and
je
aaa
sub
out
or
lods
nop
js
push
mov
out
pop
in
cmp
cmp
add
dec
sbb
cltd
cld
mov
leave
test
sub
cmc
or
out
mov
lcall
push
repnz
mov
scas
cli
inc
pop
pushf
ds
and
fs
es
fldenv
jnp
mov
xorl
gs
xchg
mov
inc
mov
daa
inc
push
mov
stos
add
in
ffreep
push
cmp
stos
pop
adc
mov
ds
in
icebp
mov
ljmp
xor
rcr
adc
popf
jne
lock
fwait
data16
into
and
pop
pop
stos
in
movsb
ja
mov
push
add
xor
popf
lods
popf
sbb
and
scas
adc
mov
jmp
sub
jmp
inc
daa
cmpsb
stc
aad
out
add
mov
xor
imul
popa
jmp
outsb
mov
pop
fists
outsb
movsl
mov
in
sti
icebp
inc
into
fadds
mov
inc
cltd
icebp
mov
mov
xor
pop
push
gs
or
xchg
in
inc
rol
mov
cmp
inc
dec
int3
dec
pushf
sbb
movsl
mov
and
out
dec
jg
or
aas
cmp
repz
pushl
stos
addr16
xchg
or
out
ret
add
adc
adc
cmp
ds
push
les
adc
ja
orb
and
sbb
inc
lcall
mov
cli
push
inc
adc
test
sub
dec
clc
mov
ret
or
cmp
ja
xlat
xchg
movsl
test
testl
and
mov
sbb
pushf
pop
repnz
insb
ds
mov
mov
ja
pop
add
xchg
sub
inc
xor
lahf
add
mov
xchg
sub
std
add
mov
jecxz
mov
pop
icebp
mov
mov
leave
sbb
inc
daa
addb
lret
jmp
dec
jbe
add
sahf
icebp
cmp
es
adc
xchg
xor
cmp
inc
pusha
push
loopne
jl
mov
mov
insb
jns
cmp
fisttpll
inc
jl
inc
mov
insl
lahf
mov
xchg
jns
mov
test
xchg
push
mov
push
lods
jg
push
jl
or
adc
push
movq
push
out
jae
cmp
jl
inc
or
test
cmp
imul
leave
and
push
pop
out
mov
mov
cmp
push
dec
push
leave
das
cmp
sub
pop
inc
sub
sahf
or
jge
dec
xor
push
jo
icebp
mov
iret
aas
inc
lahf
movsl
movsl
sti
pop
cli
and
leave
pop
adc
add
mov
ljmp
sti
stos
cs
mov
push
movsb
stos
int3
ret
movsl
sbb
or
add
sub
sar
sub
ss
repz
sbb
add
setae
lret
xchg
sub
pop
inc
jbe
cmp
xchg
ljmp
adc
mov
xchg
inc
js
loope
movsl
scas
andl
gs
cmp
sbb
sarb
insb
and
pop
pop
mov
imul
fsts
sbb
and
ja
cmp
xchg
or
sbb
mov
in
mov
add
ljmp
sbb
adc
int
adc
mov
jo
cmc
push
std
ds
cmp
dec
or
lcall
hlt
inc
aad
xchg
lret
sahf
icebp
lahf
jo
xor
repnz
mov
fxam
repz
dec
fdivrs
jo
test
jp
popa
jl
inc
push
sub
jl
repnz
test
xchg
std
sysret
mov
test
adc
cmpsb
aaa
fcmovnbe
stos
jno
punpckhbw
add
fbstp
lods
push
sub
xor
loop
fidivl
xchg
scas
shl
les
arpl
sub
gs
scas
cltd
xor
sbb
sbb
pop
push
mov
popa
xor
cmp
jp
or
pop
cld
aaa
jmp
ljmp
sub
pusha
loop
sbbb
aas
cld
fucomip
ss
xchg
jne
inc
out
insb
mov
lds
loopne
ljmp
mov
sbb
jo
jg
ret
push
loopne
popa
clc
sub
mov
stos
popf
xchg
pop
xor
xlat
xor
in
pop
sub
jbe
xor
xchg
cmc
sbb
jg
and
imul
mov
push
adc
xor
jb
iret
cmpsb
in
je
and
mov
pop
and
mov
mov
or
int
or
cwtl
xor
xor
mov
xchg
push
mov
lods
sbb
and
or
int3
xchg
xor
dec
pop
jmp
xor
or
mov
add
mov
cwtl
pop
repz
cltd
out
add
in
push
xor
pushf
sti
aas
movsb
es
subb
stos
clc
cli
pop
push
dec
push
and
daa
dec
xchg
mov
aaa
cmc
fwait
or
mov
loope
fnsave
sbb
in
int3
xlat
nop
out
mov
or
test
add
out
push
movsb
imul
cwtl
out
xor
test
adc
fmuls
popa
out
xor
adc
out
inc
xchg
mov
adc
mov
add
and
mov
bound
push
stos
push
push
aaa
stos
pop
or
adc
push
add
test
hlt
add
dec
in
inc
jns
xchg
mov
cltd
mov
mov
adc
add
cltd
movsl
scas
add
ljmp
roll
lods
fiadds
lahf
add
repnz
rcr
cmpsb
das
mov
rorl
fsubl
mov
mov
xor
mov
es
inc
test
sbb
adc
jbe
lret
and
jo
push
mov
lea
stos
lods
mov
jne
sbb
hlt
inc
pop
or
sub
rcl
jne
stos
sbb
movzwl
pop
xchg
faddp
inc
arpl
xor
orl
push
sbb
rcrb
dec
cmp
push
call
xor
push
xor
pop
pop
repnz
mov
fisubrs
ret
je
push
test
in
das
into
aad
sbb
lahf
add
fs
xor
xor
loopne
cmp
rclb
mov
icebp
stc
inc
lods
lcall
aaa
and
pop
addr16
and
js
inc
lahf
mov
adc
or
imul
or
imulb
xchg
nop
dec
sbbl
xlat
int3
jae
lcall
push
xchg
loop
pushl
sbb
sub
mov
or
loope
inc
jg
sub
or
mov
inc
mov
mov
xchg
mov
popf
movsb
std
je
xchg
mov
es
leave
inc
inc
pop
push
push
cmp
and
andb
fwait
jns
inc
jecxz
add
ss
shlb
push
xchg
cmpsb
mov
dec
push
fcom
pop
or
insl
mov
cmp
adcb
shlb
sarl
inc
in
jno
std
test
sbb
dec
mov
sub
into
push
cs
and
enter
scas
xchg
sbb
aad
cmc
sub
mov
faddp
push
jp
cld
insl
xchg
mov
aas
inc
inc
movswl
iret
in
dec
jb
mov
call
jle
leave
cmc
cmp
xchg
jne
lea
lcall
cli
push
std
pop
rcr
dec
sub
mov
lahf
out
or
fnstenv
cmp
push
lea
push
mov
bound
div
fistpl
jnp
jg
sbb
push
push
into
in
pop
lods
xorl
in
xor
icebp
cmpsb
dec
mov
je
jb
lcall
add
mov
mov
sub
out
pop
pop
or
das
mov
fbstp
lea
cs
sub
ret
dec
mov
mov
mov
ror
mov
sar
push
and
sub
jmp
push
and
sub
or
or
push
pop
mov
into
loopne
jb
addr16
in
push
sbb
ror
aad
outsb
pop
push
idivl
lret
and
adcl
pop
inc
out
xor
adcb
cld
add
les
out
das
inc
jmp
or
dec
jnp
xor
mov
lahf
outsb
sub
cli
scas
rcr
enter
out
clc
ljmp
outsb
add
les
js
adc
stc
xchg
in
enter
xor
sbb
jle
sub
sti
or
jecxz
jecxz
es
addr16
shlb
or
rol
ja
nop
iret
cwtl
sbb
aas
in
shr
dec
xchg
mov
scas
lds
pop
pop
mov
and
adc
mulb
push
jae
jmp
int
cmp
data16
shlb
xor
and
stos
mov
mov
jmp
mov
pop
mov
lcall
sub
push
mov
mov
mov
mov
inc
cmpsb
xor
fs
outsb
ret
ret
movsb
xorb
cmpsl
mov
out
ljmp
inc
insl
stc
inc
dec
pop
jmp
mov
clc
lahf
imul
push
mov
dec
out
add
cmp
daa
dec
adc
mov
pusha
int3
lcall
mov
xor
mov
ficompl
add
mov
adc
test
fdivl
sbb
mov
mov
subb
dec
fistps
or
jns
pop
mov
add
shrb
aam
mov
addl
push
xchg
out
xor
arpl
test
cmp
inc
sub
push
push
imul
shll
scas
cmp
mov
movsl
mov
mov
rcl
mov
cwtl
jb
inc
mov
mov
ss
or
or
jge
into
xchg
dec
and
mov
in
mov
add
lahf
test
push
jnp
xchg
in
addl
cmp
adc
xchg
repnz
jne
scas
and
add
stos
sbb
and
lods
pop
call
jg
dec
subb
push
mov
dec
xchg
mov
pusha
push
test
js
add
jne
xor
cld
pop
or
insb
fcompl
mov
insb
outsb
test
test
call
loope
cmp
sub
test
in
push
fldt
not
lsl
push
pop
in
sub
loopne
repz
pop
out
inc
lret
mov
das
push
setb
out
jle
jp
push
cmp
rol
aad
mov
lds
xor
rorl
clc
pop
dec
xor
dec
adc
cmp
jb
add
push
js
inc
sbb
mov
jge
pop
pop
inc
fldenv
shr
bound
data16
inc
sub
aas
jmp
call
pop
cli
aaa
dec
mov
jae
xor
lds
push
ret
sbbl
xchg
xor
mov
mov
cwtl
ss
pop
jbe
enter
sbb
jne
pop
lds
push
arpl
jns
pushw
add
cmp
pop
lods
shrb
lock
faddl
add
mov
lock
nop
xorb
repz
jmp
fwait
and
ficompl
mov
enter
mov
ljmp
nop
aaa
cmp
or
push
jmp
mov
fidivs
jge
orb
add
test
add
mov
lcall
ja
dec
pop
je
add
clc
push
push
ficomps
inc
xchg
push
add
lret
xchg
jmp
mov
xchg
mov
outsl
mov
push
ds
mov
adc
testb
ret
pop
add
iret
add
mov
lods
repz
aas
sub
push
push
fisttpl
adc
mov
cmpsb
lods
insb
inc
shrb
mov
jg
adc
xor
lods
add
insl
outsl
jecxz
cmp
and
and
andl
sbb
xchg
and
xchg
lea
std
adc
repz
sub
sub
dec
sbb
and
pop
cmp
jns
pop
dec
push
cmp
xor
cmp
xchg
sbb
pop
cmp
mov
lret
mov
ljmp
iret
cmp
repz
or
jmp
mov
fldln2
add
jbe
and
mov
cmp
sbb
mov
repnz
in
dec
fcoms
inc
in
shlb
fwait
sbbl
jo
ljmp
jge
pop
movsb
data16
or
sub
pusha
lea
dec
mov
sub
and
decl
add
adc
sbb
sbb
addl
iret
or
xor
mov
cmp
mov
push
iret
test
dec
pop
pop
cmp
lock
test
jne
xor
sbb
jo
les
push
pop
shrl
add
and
lods
pop
adc
adc
movb
sahf
mov
icebp
xchg
push
popf
aam
mov
mov
fildl
bound
adc
cmp
push
mov
out
xchg
lret
sahf
or
fcomip
cmp
inc
divb
push
jp
lret
data16
stos
fldl2t
icebp
sbb
cli
or
mov
clc
xchg
mov
mov
insb
arpl
adc
shll
add
adc
adc
sbb
add
inc
lods
std
imul
stos
and
lret
jp
in
push
pushf
inc
pusha
dec
loop
pushf
lcall
out
loope
outsb
push
das
out
cmc
fs
xor
mov
xor
inc
mov
xchg
dec
pop
mov
js
and
push
imul
mov
sarl
stos
das
rcrb
pop
jae
push
sbb
insb
in
pop
mov
xor
lock
lock
sbb
mov
jmp
fmuls
jnp
pop
pop
push
dec
cmp
fstpl
mov
nop
stos
aas
cmp
loop
add
add
aam
cmpsb
push
jmp
push
leave
push
sub
leave
sbb
xchg
push
sahf
je
dec
mov
stc
push
add
aam
or
sub
ljmp
cmpsb
psrlw
icebp
sub
and
fs
pop
push
lea
jae
pop
or
out
adc
and
rcrb
xor
and
movsl
xor
xchg
add
push
mov
dec
shrl
xor
mov
xchg
xchg
sbb
mov
movsb
xchg
mov
push
ret
adc
mov
stos
pop
push
std
in
mov
insl
sti
mov
push
fisttps
ret
or
jne
xlat
out
scas
cs
add
mov
mov
mov
and
mov
mov
aas
aad
mov
pop
lods
dec
pop
and
fucomip
pop
dec
push
int
stos
test
std
ror
leave
dec
or
bound
cmp
pop
aaa
rclb
push
cltd
xchg
int
out
icebp
mov
sbb
xchg
jae
ret
add
in
mov
mov
mov
shl
iret
pop
push
addr16
fstpt
fimuls
cli
pop
addr16
daa
mov
fmull
loope
mov
adcb
scas
sub
fistps
push
pushl
mov
sub
sub
jae
in
and
insl
add
pop
rcrb
mov
xchg
mov
dec
inc
stos
sub
rclb
fmuls
dec
out
out
enter
push
rcll
push
sub
pop
in
mov
cmp
lods
iret
loope
repz
xchg
mov
push
dec
fwait
aad
xor
call
mov
adc
xchg
addr16
mov
sbb
repz
popa
add
loop
aam
push
mov
pop
xor
imul
icebp
pop
aas
adc
push
cld
and
inc
mov
cmpsb
out
mov
movsb
xchg
hlt
xor
sub
mov
sti
imul
pop
dec
xor
pop
push
sbb
popf
testl
jmp
mov
mov
adc
addr16
add
je
pop
lods
mov
and
push
jp
or
test
into
rcrb
mov
inc
daa
negb
sub
loopne
push
add
lcall
pop
repz
xchg
jne
or
adc
and
andb
sarl
in
mov
es
sbb
lock
adc
jg
and
mov
test
test
mov
stos
fndisi(8087
test
sub
push
jae
push
pop
mov
push
popf
adc
and
imul
mov
cli
shl
into
push
ljmp
mov
cmpsl
arpl
nop
stos
subb
out
pop
and
adc
pop
sub
add
mov
add
xor
outsb
ja
or
mov
andb
hlt
inc
xlat
test
notl
adc
lock
mov
sbb
push
clc
jns
dec
mov
adc
mov
mov
dec
push
adc
mov
into
aad
mov
rorb
xor
push
adc
sahf
xchg
ja
cld
mov
add
inc
jmp
pop
js
mov
test
imul
fcomps
push
jo
outsb
add
sti
jns
adc
jae
mov
imul
in
lret
imul
sbb
jb
addr16
add
pmulhuw
fistpll
adc
lret
idivb
mov
stos
and
sub
stos
or
out
inc
sub
push
mov
add
pop
mov
fldcw
jl
into
or
fdivr
mov
add
out
in
fwait
daa
pop
sub
mov
mov
fisubrl
pop
adc
push
lahf
sub
sahf
cwtl
sbb
aad
repnz
dec
movsl
mov
add
or
jge
dec
jnp
fbstp
jp
and
ja
xchg
fnstenv
pop
add
adc
xchg
add
lods
cli
sub
and
pop
int
add
add
inc
je
loop
cld
jg
mov
rcrb
movsl
sub
repz
sub
outsb
scas
xor
mov
adc
pop
mov
movsl
out
jmp
out
pop
jg
push
sbb
xchg
pop
pop
orl
js
in
xlat
fcomip
pop
mov
in
mov
sub
push
popa
fidivl
pop
dec
jge
repnz
mov
fidivrs
cli
mov
adc
add
pusha
mov
jmp
lcall
and
push
cmpsb
pop
dec
movhps
mov
ss
movsb
push
dec
mov
arpl
outsb
rorl
mov
mov
mov
out
cli
ret
dec
jne
jae
test
sbbb
and
lea
cli
push
es
adc
test
dec
xlat
add
jmp
jl
lea
pop
mov
iret
mov
jge
shrl
pop
and
lock
mov
add
hlt
pop
je
pop
addr16
jecxz
popf
std
movsb
test
push
int3
pushf
push
add
movsl
clc
adc
leave
adc
mov
add
shl
dec
fstsw
adc
or
ret
or
pop
adc
shll
xchg
sbb
insl
xchg
xor
and
ret
mov
xchg
clc
cli
daa
and
movsb
std
dec
mov
test
sub
jbe
pop
dec
cmp
ret
cld
clc
and
adc
cmpsb
adc
push
jae
push
jns
push
mov
cmpsb
repz
fdivp
stos
mov
lcall
popa
or
jg
aaa
filds
jg
or
xchg
inc
movsb
mov
lock
push
jecxz
jp
inc
push
jg
xor
addr16
aam
xchg
xor
rcrl
xor
xchg
mov
inc
dec
fwait
jge
in
outsl
add
push
loop
insb
sub
mov
shlb
jno
xchg
arpl
outsl
jnp
test
push
shll
xor
lods
insb
push
out
sub
scas
std
sbbb
bound
test
xchg
and
insl
sbb
add
into
fwait
inc
inc
cmpsb
shlb
adc
pop
ret
cmc
addr16
xchg
shll
or
stc
and
adc
cli
jp
andl
dec
decl
pop
loopne
lcall
adc
mov
xchg
push
mov
push
xor
cwtl
push
adc
dec
ss
inc
inc
and
aaa
sub
pop
rcrl
dec
adc
cwtl
push
xor
es
call
xchg
in
sbb
lock
add
push
pop
lods
dec
aam
aas
or
dec
push
stc
mov
cmpsb
test
dec
into
dec
test
jo
movl
jl
pop
stos
shll
adc
xor
xchg
loop
mov
int
inc
call
push
jl
cli
scas
cmp
inc
xor
movsl
sarb
xor
push
dec
outsb
lcall
dec
jns
shll
fstpt
jge
rcr
sarl
ljmp
ds
aaa
cld
xor
lds
dec
out
imul
add
pushf
add
and
push
mov
mov
mov
push
dec
dec
outsl
in
ljmp
cmp
adc
pop
jno
jp
imul
test
inc
pop
fildll
dec
jbe
cli
adc
in
dec
push
dec
cmp
mov
arpl
jle
jecxz
or
cld
inc
cmp
in
movlhps
test
sbb
repz
imul
nop
push
add
jns
lcall
adc
xchg
lahf
pop
sbbl
xor
clc
movl
out
jae
and
and
fdivrs
mov
mov
loope
aaa
and
adc
je
mov
lret
push
ja
aad
out
jge
pop
cmp
cmp
or
test
je
lods
mov
or
mov
fdivl
xlat
inc
ss
inc
lahf
clc
rcll
mov
or
pop
xor
hlt
cli
stc
cltd
ljmp
lock
jg
mov
adc
cmp
into
push
sbb
mov
pop
cltd
arpl
fwait
ds
lds
test
mov
movsb
imul
mov
sbb
push
add
fstpt
lahf
xchg
dec
and
cli
pop
stc
push
out
inc
fbstp
daa
in
dec
loope
pop
arpl
xchg
cmp
ret
push
push
ja
jae
in
jecxz
xor
jnp
mov
lods
rcl
adc
daa
pusha
add
gs
cmp
enter
mov
xchg
out
fisubs
sub
das
and
arpl
mov
mov
mov
lret
mov
in
out
xchg
jne
add
test
aaa
insb
into
mov
fwait
or
xchg
lds
popa
cmp
pop
mov
shlb
aaa
add
lret
fsubrs
adc
pop
out
test
jo
xchg
jecxz
stos
arpl
and
pop
inc
mov
adc
adc
push
and
insb
xchg
inc
addr16
movsb
fwait
leave
jbe
sub
test
test
xchg
pop
orb
push
inc
jle
movsl
lods
sbb
xchg
add
sahf
stos
and
add
jne
add
popf
fwait
xchg
jns
repz
stc
sbb
push
jo
adc
lds
cmpsb
sub
jns
cmp
pop
jg
or
idivb
nop
add
call
dec
std
ftst
lea
and
jp
pushf
repz
popa
mov
add
aaa
mov
insb
mov
dec
xchg
cmp
mov
jnp
mov
rorl
lahf
cmpsb
jne
ret
stc
jno
insl
sbb
and
movsl
jae
ja
jp
shl
mov
lcall
sub
xor
pop
or
aas
insb
stos
test
xor
pop
pop
shl
pushf
pop
cmpsl
stc
jb
lods
rclb
fimull
and
mov
sub
add
movsl
stos
in
push
mov
movsb
mov
scas
pop
shlb
adc
fdivr
and
cmp
inc
in
loope
lods
jnp
nop
dec
push
pop
sbb
hlt
shr
push
shl
pop
jnp
mov
rorl
outsl
mov
and
and
mov
shl
push
sti
xor
xchg
or
jno
andb
movsl
mov
fwait
stos
xchg
aaa
xor
lods
push
divb
out
icebp
mov
pop
add
lock
push
push
lods
and
jae
cwtl
fistps
xchg
mov
ret
movsb
mov
mov
fpatan
ds
in
bound
std
cmp
push
arpl
rcrb
xorl
dec
mov
mov
nop
mov
test
lret
jae
fs
lea
je
lea
dec
mov
fs
test
stos
movsb
lret
mov
nop
jg
cli
xor
sub
shlb
inc
mov
cmp
stos
hlt
daa
add
mov
jp
test
cwtl
pop
xorb
dec
mov
cld
xchg
lods
in
inc
lea
icebp
push
mov
stos
pop
lret
bnd
adc
loopne
aaa
cltd
xchg
dec
xor
cmp
jb
sbb
aas
cmp
cmpsb
add
cmpsl
cmp
testb
push
addr16
movsl
lods
mov
test
inc
and
xchg
inc
gs
aam
pop
mov
adc
pop
jecxz
leave
and
lock
lods
or
ja
cmpb
pop
ljmp
or
and
or
lock
testb
std
mov
or
fs
mov
int
sbb
mov
add
sti
addr16
jo,pt
or
push
leave
pop
in
inc
adc
bound
lcall
scas
icebp
in
adc
adc
dec
cmpsb
mull
std
fisttps
dec
add
jmp
popa
pushf
dec
insb
xor
or
addb
or
addb
aas
push
dec
idivb
insb
sub
dec
hlt
or
xchg
enter
outsl
mov
fs
fbld
pop
loop
lds
xchg
mov
xor
mov
in
adc
testb
mov
ds
mov
fldt
mov
sub
pop
test
jp
mov
cltd
mov
inc
aaa
lret
fldenv
mov
mov
or
aas
lret
xor
mov
ss
mov
imul
jle
or
nop
mov
pop
mov
iret
inc
mov
dec
and
mov
jecxz
or
jl
rorl
inc
cmp
jae
daa
or
fsubrs
lds
adc
aaa
jge
dec
imull
xor
and
sub
arpl
mov
rcrb
fidivrl
push
das
cmp
jmp
mov
jns
imul
in
mov
sbb
sti
add
test
call
dec
popa
je
mov
arpl
fisttps
pop
xchg
mov
sbb
into
pop
add
insb
dec
movsl
push
lret
loope
pushw
jb
pop
testl
and
push
inc
es
sub
fildll
repnz
jno
xor
add
mov
xor
fildll
cmp
gs
popf
shrb
test
jns
mulb
data16
lea
cmp
sbb
dec
push
mov
xchg
mov
jg
leave
icebp
stos
sub
or
pushf
cmp
rcrl
js
in
test
mov
dec
leave
or
add
add
lods
js
ss
adc
js
stos
and
rcrl
mov
mov
fisttps
mov
insl
mov
xlat
shll
dec
pusha
js
mov
inc
inc
int
addr16
xlat
aas
repz
or
push
jmp
pusha
testl
loopne
jmp
or
sub
mov
lahf
or
xchg
imul
jmp
je
or
fstp
push
jae
and
xchg
jnp
nop
repnz
jle
gs
scas
adc
pop
or
mov
pop
popa
pop
lods
outsb
ss
inc
sbb
dec
cmp
xor
jo
sub
pop
jnp
call
sahf
cwtl
stos
into
inc
rcrb
pop
enter
pop
std
ja
xor
ljmp
xchg
pop
das
das
or
frstor
sub
push
pop
push
lahf
jbe
loope
test
pop
fnstcw
xchg
in
mov
jl
popf
out
scas
cwtl
push
adc
out
inc
stos
mov
cmp
or
xchg
repz
or
dec
inc
xor
push
jo,pn
xchg
xor
adc
clc
jb
xchg
mov
stos
inc
lret
cltd
sbb
xchg
cwtl
dec
mov
lods
sbb
cmpl
jae
fiaddl
rcll
cmp
mov
or
or
mov
outsb
xchg
dec
aas
add
daa
lods
ljmp
sbb
sub
scas
mov
div
divl
popf
out
lds
das
es
aad
cmp
cmp
mov
loopne
enter
pop
pop
sub
xchg
pop
dec
jle,pt
add
pop
mov
fchs
mov
jl
jl
mov
sub
adc
adc
inc
sub
int3
push
mov
or
dec
xorl
or
out
xchg
shlb
movsl
xor
cs
test
push
xor
mov
imulb
pop
push
xchg
aaa
int3
push
stos
jmp
loopne
cmp
sti
cmc
movsb
mov
jl
loopne
divl
ds
cmp
add
add
add
mov
out
pop
pop
dec
mov
inc
xchg
cmpsb
stos
enter
push
hlt
pop
arpl
ss
gs
push
and
mov
out
dec
mov
fcompl
lret
pop
sbb
pop
push
movsl
push
ret
stos
xchg
fcoms
adc
lock
dec
jne
aad
and
dec
loope
scas
mov
push
test
fwait
mov
xchg
dec
xor
mov
mov
cld
movsl
jnp
cmp
xchg
movsl
imul
pop
mov
or
dec
test
aad
pop
daa
data16
cmp
add
cmpsb
and
loop
adcl
or
enter
mov
jge
and
add
and
xchg
xchg
add
jo
test
out
es
sahf
bndstx
cmpsb
popf
aam
jno
fsubs
jbe
dec
mov
jne
xlat
mov
push
pop
popf
jo
out
jle,pn
icebp
mov
jmp
xor
mov
mov
push
adc
or
cltd
adcl
jge
rolb
push
jns
or
jecxz
scas
int3
jns
mov
cwtl
xor
cmc
mov
sbb
insb
mov
pop
cmp
rolb
xor
mov
xchg
leave
sbb
fwait
push
rorb
dec
aam
ror
outsl
mov
jne
dec
adc
rcll
fisubl
add
mov
mov
push
stos
lret
inc
scas
lea
and
out
push
sub
xchg
sahf
inc
and
loop
scas
xor
data16
dec
es
push
xchg
dec
mul
out
cmp
cli
mov
mov
cltd
ret
xchg
adc
pop
dec
leave
je
push
insl
mov
push
cmpsl
mov
sahf
call
imul
aam
daa
inc
sbb
shlb
mov
push
mov
aaa
pop
pop
push
es
lock
fcoms
aam
jbe
adcl
rcl
jnp
decl
sbb
jns
inc
scas
mov
lahf
lret
and
pop
daa
adc
cwtl
mov
mov
lods
div
inc
in
fimull
jnp
repz
mov
sbb
jb
sub
int
adc
ret
lret
mov
cwtl
xchg
lret
sbb
sbb
addb
int3
sbb
stc
and
mov
pop
inc
fisttps
sbb
lock
rcrl
fdivr
out
mov
int3
sti
jae
icebp
and
xchg
jnp
stos
push
xchg
mov
xchg
cmp
mov
xchg
aas
popf
xchg
xor
fwait
inc
ds
lods
push
ja
rorl
sbb
fidivl
lcall
outsb
lea
and
inc
inc
nop
pop
aad
sti
in
xor
frstor
aas
repz
in
jmp
sub
mov
addr16
test
xor
jmp
out
fsubp
cmp
adc
gs
mov
addr16
data16
outsb
loop
or
aas
push
pop
or
fsubr
mov
je
mov
sahf
ds
push
jp
in
loope
popf
iret
jb
std
jo
pop
mov
xchg
adc
mov
mov
jno
aas
push
adcl
clc
add
insl
inc
dec
in
fstps
es
sbb
addr16
nop
mov
inc
inc
mov
mov
jg
push
pusha
xchg
popa
mov
mov
shlb
jg
push
test
imul
lret
dec
inc
push
ljmp
jne
in
pop
mov
push
xor
xchg
xchg
es
mov
xchg
sub
push
or
pop
push
cmp
insb
fldenv
adc
and
xor
xor
push
cmpsl
or
add
mov
push
xor
xchg
dec
dec
movsl
lea
push
inc
notl
mov
stos
cmpsb
dec
mulb
jle
push
jl
inc
jg
into
xor
ja
fnstenv
push
sti
cmpsl
and
add
xor
in
push
aaa
scas
ljmp
mov
pop
xor
mov
in
pop
push
mov
push
cmpsl
loope
movsb
mov
inc
xor
mov
popf
xchg
mulb
mov
and
ficoml
pop
loope
fwait
sbb
sarb
xchg
push
jle
inc
inc
rcrl
xor
cwtd
adc
mov
jle
inc
sbb
mov
or
sub
cmp
dec
mov
cmp
add
push
push
ret
pmaxub
dec
jno
ss
xchg
cmp
fdivs
les
jnp
les
out
pxor
aam
cmp
xor
mov
cmp
inc
pop
xchg
sbb
cmp
lds
push
push
jb
lcall
fstpl
lret
insl
jo
mov
loop
sub
mov
sbb
dec
push
in
sti
jle
cmpsl
dec
adc
movsb
fwait
nop
out
mov
inc
xchg
loope
mov
cltd
insb
adc
lock
sub
pop
jo
and
inc
aam
jns
mov
imul
inc
xor
push
daa
sub
lods
cmp
mov
xor
push
out
push
daa
add
rorl
les
int
dec
inc
pop
mov
mov
mov
jae
adc
pop
fcompl
cld
rorb
push
jno
pop
xor
je
sti
push
cmc
andb
pop
push
push
inc
mov
add
pop
jp
mov
add
ljmp
adc
sarl
inc
jbe
out
dec
cwtl
fiadds
jle
daa
cmp
pusha
gs
fldenv
mov
popf
push
sub
fcoml
xchg
test
dec
repnz
cltd
or
and
mov
mov
sub
jge
ljmp
lret
mov
add
loope
mov
test
push
mov
in
fistpl
popf
lds
mov
js
inc
loop
mov
jns
pop
cmp
jl
scas
add
jl
xor
filds
aaa
stos
ds
push
test
or
or
fsubrl
hlt
sbb
aaa
push
push
arpl
test
sub
clc
jnp
addr16
cwtl
dec
xchg
pop
pushf
es
vmovaps
xchg
add
cmc
aad
int
sbb
inc
sub
sbb
dec
cmpsb
sbb
adc
int
and
add
inc
negb
test
mov
out
lahf
push
add
int
jmp
pop
aaa
into
push
sub
sbb
ds
loopne
push
repnz
in
test
jno
mov
rcr
mov
sarl
add
pop
int3
lret
or
sub
outsb
pushaw
jne
imul
das
push
out
out
movsl
test
stc
or
mov
or
mov
repz
gs
sbb
addr16
mov
pusha
adc
add
adc
pushf
fwait
or
inc
push
mov
dec
xchg
fbld
jb
jmp
arpl
xchg
outsb
test
jp
mov
xchg
test
movsl
cmp
scas
sub
enter
fiadds
orl
adc
mov
outsl
jmp
cld
fimull
inc
je
pop
add
cmp
bound
movsl
jge
decb
jo
js
in
dec
aam
add
lahf
loope
jl
shrb
sbb
mov
cwtl
test
outsl
push
mov
int3
ss
lock
adc
pop
cmp
leave
out
clc
add
pop
jge
test
pop
xor
mov
into
or
push
aad
rep
fidivrs
jmp
insl
push
or
bound
or
or
shrb
pop
cmpsl
xlat
push
mov
push
lods
add
add
lods
ja
mov
in
lea
xor
or
leave
and
jmp
xchg
das
cmp
or
pop
sub
mov
cmpb
js
xor
xchg
inc
cmp
aam
xchg
into
inc
or
jle
mov
pusha
cmc
test
mov
sub
imull
cld
idivl
add
gs
mov
addl
mov
mov
mov
lds
mov
add
pop
fimull
pusha
and
sbb
xlat
in
sub
cmpsb
inc
fld
fidivs
outsl
inc
xor
lahf
xor
lods
and
rcl
jecxz
insl
cmpsb
inc
sbb
xchg
mov
adc
cmp
fisttpll
or
clc
mov
pop
jmp
js
das
inc
pusha
adc
nop
adc
int
orl
movsb
icebp
cwtl
xchg
mov
sub
dec
mov
fldt
rep
sub
bound
mov
int
hlt
push
mov
cmp
test
fistps
mov
fisubrl
pop
push
mov
xor
xor
negl
andl
cwtl
pop
test
cld
into
into
push
sub
bound
ja
inc
jle
rclb
push
lahf
mov
cmovbe
fisttpll
mov
lods
jecxz
sbb
in
adc
mov
roll
xchg
nop
jl
in
dec
mov
cld
repnz
jne
dec
aad
pop
adc
rorb
ret
sub
pop
mov
ja
fnstsw
cmc
mov
jg
mov
or
lods
push
std
adc
push
dec
xlat
xor
push
imul
test
push
add
xchg
cmp
mov
imul
lock
shrb
sub
fbld
cmpsb
mov
add
jmp
adc
xlat
stos
xor
call
loope
pop
test
cmp
lods
lods
jl
dec
es
sbb
fstl
mov
and
notb
push
divl
stc
movsl
daa
adc
loop
iret
pop
movsl
dec
cmpl
fmuls
pop
push
pop
pop
arpl
dec
int3
std
push
xlat
add
loopne
inc
and
add
mov
outsl
push
cmc
jp
dec
inc
adc
adc
mov
ljmp
adc
aad
lea
lcall
jbe
icebp
lcall
out
mov
decb
push
xchg
insb
addr16
pushf
div
stos
cmpsl
outsb
mov
icebp
xchg
outsb
mov
pop
or
push
stos
push
or
xor
lahf
mov
sbb
mov
dec
pop
scas
fisubrl
shrb
jle
fildll
xchg
push
sbb
ret
inc
ja
sub
fsubrs
hlt
movsl
cwtl
fsubs
inc
data16
inc
sub
sahf
stos
repnz
int3
pop
push
insl
dec
mov
iret
dec
and
int
imul
lock
mov
cmp
jbe
fnstenv
sbb
outsb
mov
bnd
mov
cmpsl
out
mov
ds
push
xor
clc
adc
daa
test
mov
mov
jne
mov
stos
mov
imulb
jb
push
fxam
movl
pop
sahf
fs
mov
loopne
mov
mov
and
inc
int
and
pop
out
je
stos
test
add
jp
or
and
pushf
xchg
pop
jns
jae
stos
rorl
sub
xor
daa
pop
push
jo
mov
and
pushf
mov
xchg
es
xchg
xchg
pop
and
mov
dec
sbbb
lea
scas
xor
push
leave
xor
cmp
push
inc
inc
pop
aas
jnp
mov
test
daa
iret
mov
mov
jmp
mov
test
pop
pushf
pop
aam
mov
out
add
pop
out
xor
dec
or
call
frstor
dec
or
ja
fdivrl
cmp
je
or
cmp
xchg
adc
pop
push
repnz
pop
or
and
fistps
fistps
xchg
or
dec
sbb
xchg
ds
jbe
pop
mov
test
push
sub
dec
xchg
xlat
and
decb
push
sub
div
in
push
nop
push
andb
adc
inc
mov
mov
jnp
mov
jg
xchg
adc
pop
fcom
or
mov
inc
add
insl
xchg
sub
int3
push
loopne
cmp
jne
jb
xor
adc
andb
sub
mov
mov
lret
das
movsb
or
jb
pusha
pop
idiv
cmpsl
mov
mov
lret
adc
pop
sbb
jno
pop
jmp
sbb
mov
je
movsb
dec
xlat
cmpsl
test
mov
je
popf
loop
adc
cmp
push
loopne
inc
pop
je
push
iret
cmp
das
pushfw
out
mov
pop
aaa
mov
movsl
inc
xor
js
test
mov
cltd
sbb
inc
pusha
pop
jmp
stos
icebp
adc
or
clc
add
adc
mov
mov
push
dec
xor
imul
je
repnz
add
clc
mov
fsubl
inc
jle
sbb
lret
or
xlat
ret
jp
cmp
loop
imul
outsb
test
xor
sahf
pop
push
js
mov
adc
fsubp
insb
cmp
push
cmpsb
test
xor
sti
in
xchg
add
pop
xor
jne
lret
lea
outsb
mov
movsl
imul
mov
push
out
jle
in
push
inc
xchg
iret
push
push
push
or
mov
mov
add
out
or
mov
dec
sub
xchg
xchg
cli
pop
lret
scas
clc
dec
popf
sub
and
cmp
fildl
imul
addr16
cmp
orl
addr16
or
and
xor
sub
or
xchg
imul
cmp
jmp
or
cltd
xor
movsl
mov
test
lods
lcall
enter
cli
jl
test
or
push
add
jmp
cwtl
mov
xor
std
push
mov
outsb
inc
js
adc
add
jle
fidivrs
add
mov
jb
cmc
cmc
xor
adc
mov
notb
aad
pop
jmp
xlat
lods
cmp
jg
add
cmp
aad
dec
push
add
pop
fdivs
cltd
xor
cmp
insl
xchg
and
call
sahf
mov
xor
iret
lret
sahf
inc
gs
inc
add
pushf
lret
sub
fwait
in
mov
ja
hlt
push
jle
lcall
arpl
out
popf
push
pop
aas
sbb
mov
es
pop
xlat
std
fisubrs
inc
sbbb
add
mov
sub
add
jle
pop
jnp
cmpsl
or
pushf
mov
pop
lods
mov
aam
pop
sbb
call
sub
mov
or
cltd
sub
ds
mov
cwtl
dec
mov
loopne
cs
mov
mov
cmpsl
rcrb
dec
in
jns
mov
hlt
xor
pop
sbb
mov
lret
orb
cmp
mov
and
cwtl
push
mov
mov
enter
out
in
xchg
mov
inc
jb
repz
cltd
adc
fs
test
push
cs
jge
repz
adc
sub
pop
aaa
pop
fcoms
cmp
sub
out
ret
xchg
push
push
loopne
push
push
bound
es
push
aaa
loope
dec
std
repz
fstpt
addr16
jmp
shlb
mov
icebp
mov
pop
cmpl
test
or
xchg
xchg
sub
pop
push
jp
cmp
lea
insl
lods
adc
cmc
jbe
setge
mov
fnsave
fidivs
jne
imul
mov
jb
xchg
xor
pop
int3
stos
test
and
aaa
call
push
mov
ret
dec
mov
inc
mov
imul
pop
enter
lods
stos
mov
sub
cmc
mov
sub
cmp
mov
xor
push
pop
pop
mov
add
xchg
gs
adc
and
jne
fnstenv
and
shll
push
rcr
inc
and
push
jmp
pop
push
pshufw
iret
inc
mov
inc
ret
movsl
fisttpll
mov
xor
mov
xor
dec
arpl
incl
or
sysenter
jae
adc
xchg
xor
sub
js
mov
ret
xchg
test
push
hlt
icebp
inc
daa
fimuls
jg
icebp
and
inc
out
adc
out
js
lret
xchg
scas
push
sub
pop
out
in
and
adc
jmp
jp
mov
fcmovbe
test
lods
jecxz
popf
xchg
cmp
dec
and
push
push
dec
and
xor
dec
adc
jmp
cmc
or
push
jnp
mov
lods
pop
push
cmpsl
dec
push
mov
cmp
loope
mov
fsubrs
cltd
and
adc
loopne
push
arpl
pusha
int
inc
sbb
in
mov
mov
pop
or
test
imul
mov
or
push
cmp
xor
mov
test
dec
mov
and
push
inc
fwait
jle
xor
out
outsl
dec
mov
sar
fcoml
pop
and
pop
cmp
aaa
sti
sti
scas
cmpl
mov
call
dec
and
pop
mov
dec
das
pop
mov
adc
dec
adc
mov
mov
notb
xor
jae
cmp
or
jge
adc
cwtl
mov
arpl
dec
and
sti
sub
mov
mov
mov
pop
data16
insb
data16
mov
jnp
cmp
jns
xchg
mov
leave
cmp
cmpb
cmp
mov
sbbb
ljmp
mov
cltd
sti
lea
cwtl
mov
mov
add
loope
sub
adc
pop
sbb
mov
shlb
dec
pop
pop
push
mov
ja
bnd
fisubs
mov
inc
xchg
rcrl
rorl
dec
pop
leave
movsl
xlat
mov
push
push
sti
lret
mov
sub
dec
fsubrl
bound
inc
add
jmpw
in
push
fwait
mov
je
lock
scas
fs
popf
mov
mov
incb
cli
movsl
sub
ljmp
rcrl
jae
sub
mov
iret
mov
jle
inc
out
loop
pop
hlt
idivb
popa
rcll
inc
ds
jno
and
xor
add
pop
mov
dec
cmp
jae
int3
test
cmp
mov
push
mov
in
dec
pop
pop
pop
sub
push
xor
fcmovb
xchg
mov
sub
test
xchg
pop
dec
int3
xchg
push
push
mov
fbld
fcomps
mov
xorl
sbb
inc
push
adc
inc
nop
insl
in
push
push
push
mov
sbb
pop
jae
bndldx
cmp
jbe
sahf
pushf
mov
mov
push
popf
inc
xor
stos
ret
or
mov
sub
adc
xchg
pop
sub
pop
aaa
out
ss
imul
or
inc
fcomp
inc
xor
scas
inc
mov
stos
lcall
lods
clc
xor
adc
xchg
or
dec
xchg
jbe
mov
sahf
std
inc
bound
mov
ficompl
xchg
loop
lock
inc
add
add
insb
inc
mov
pop
jp
rorl
mov
cld
xchg
ficoms
movsl
mov
loop
hlt
add
lcall
cmp
adc
movsb
mov
cmp
pop
inc
mov
fdivl
and
inc
cmp
or
shll
in
push
mov
sub
mov
mov
scas
fwait
and
sbb
push
imul
mov
sti
pop
adc
call
loope
icebp
xchg
pusha
scas
pop
out
cmovnp
and
push
test
push
pop
dec
sbb
push
mov
mov
push
sub
push
in
mov
stos
cmp
push
cwtl
data16
rorl
xor
scas
mov
mov
xchg
loopne
ficoml
iret
stos
dec
sbb
je
sub
add
sub
outsb
sti
xor
cmp
add
or
aad
in
cmp
mov
or
repnz
ss
add
sub
jp
cld
or
imul
test
jle
pop
pop
mov
and
add
or
sbb
inc
pusha
add
add
kxorb
mov
test
jecxz
add
push
icebp
xor
jne
mov
mov
cltd
xor
or
scas
sbb
pop
sbb
fisubs
xchg
inc
jle
mov
pop
xor
test
inc
mov
inc
mov
xchg
dec
sub
mov
loop
add
jno
stc
jge
leave
xor
cmpl
dec
mov
jne
lret
fsubr
cmp
int3
pop
lahf
in
pop
pusha
add
insl
fmuls
push
pop
ror
lods
inc
lea
xchg
aam
daa
ss
push
push
and
pusha
data16
js
outsl
enter
xor
int
jno
mov
cmp
jae
add
push
loope
int3
inc
adc
aaa
xor
rsqrtps
adc
xor
pop
movaps
mov
das
pop
fs
lahf
cmp
adc
lods
std
jb
ror
add
dec
jns
push
and
imulb
push
jno
push
imul
adc
jge
popl
imul
ds
mov
cltd
scas
int
sub
xchg
ret
sub
xchg
cmp
int3
pxor
xor
inc
test
sub
movsl
mov
cld
js
data16
scas
sub
outsl
ljmp
out
mov
movsl
sbb
or
add
push
adc
lods
dec
shlb
pop
cmp
jecxz
arpl
adc
call
cltd
out
push
xchg
push
fdivs
jno
mov
and
xchg
mov
xchg
fmull
jg
aam
nop
cmp
push
pusha
push
xchg
push
jnp
mul
pop
stos
dec
fs
add
aam
jbe
leave
pop
das
imul
aas
cmp
mov
mov
popf
or
and
iret
xchg
pop
in
out
adc
dec
xchg
mov
idiv
inc
sbbl
dec
pop
or
outsb
xchg
or
jns
xor
jle
repnz
nop
fucomip
cmp
and
mov
loopne
popa
shlb
sbb
sarb
and
inc
ljmp
or
repz
sbb
jno
movsl
jb
hlt
add
in
sub
mov
test
sarl
cmpsb
test
insl
sbb
int
jae
out
aaa
cmp
pop
popa
jmp
outsb
and
mov
test
fadds
into
adc
jno
or
std
inc
in
stc
pop
imul
movsl
lock
repz
clc
out
and
add
mov
jl
dec
mov
sub
es
add
sbb
push
mov
scas
leave
sbb
fstpl
fs
imul
test
jle
enter
sub
cli
lcall
adc
xchg
sahf
addr16
mov
mov
cmp
cmp
test
movsb
imul
jns
dec
or
dec
loop
dec
add
ja
fndisi(8087
nop
push
pop
popa
push
hlt
pop
test
or
add
add
addb
xor
ds
in
les
pop
dec
and
push
and
xchg
sbb
dec
sbb
inc
xchg
ds
lret
pop
sbb
or
addr16
dec
stc
js
leave
or
cwtl
ja
ret
roll
cmpsb
pop
ret
jnp
cmp
shlb
mov
in
and
leave
mov
scas
fs
outsb
push
popa
pushf
jecxz
dec
lret
movsl
cltd
aad
xor
sarl
cmpsb
aaa
sub
cltd
xchg
clc
push
loope
dec
test
sbb
ret
cwtl
faddl
or
scas
cmpb
dec
jp
das
adc
sbb
mov
xchg
lret
hlt
out
je
lret
cmpsb
and
iret
ss
xchg
mov
push
movsb
add
cmp
inc
pop
cs
mov
leave
in
jno
inc
lods
gs
pcmpeqb
inc
jnp
pop
inc
inc
scas
cltd
sub
pop
sbbb
mov
xor
in
dec
aad
cwtl
lods
inc
sbbl
xor
dec
push
repz
in
jae
scas
rorb
bound
lods
push
ja
rorl
stos
fsts
js
jl
fdivr
jl
dec
sub
pop
sbb
or
pop
outsl
sbb
cld
and
ficomps
aad
push
pop
or
jnp
mov
dec
sub
adc
dec
in
and
inc
push
rcl
mov
jl
xchg
xchg
dec
testb
les
pop
daa
ficoms
xor
insl
cmp
jae
add
sub
in
xor
pop
mov
pop
into
dec
rolb
test
gs
iret
cmp
ret
aas
rcrl
cwtl
movl
jge
push
std
add
fsubs
xor
adc
jp
ret
mov
dec
lods
jle
xchg
imul
ljmp
test
outsl
movsl
sti
ret
pusha
popa
xchg
inc
dec
arpl
mov
lahf
ficompl
xor
sbb
cmp
pushf
lahf
sbb
dec
aad
pop
iret
aas
jge
adc
adc
test
xorl
out
call
pop
mov
ret
adc
adc
inc
mov
adc
cmp
addr16
mov
cmp
sbb
inc
and
inc
jo,pn
cmp
mov
or
das
add
repz
xchg
sti
pushw
shlb
dec
movsl
mov
nop
loop
sbb
inc
std
decl
outsl
cmp
int3
mov
sbb
jo
push
mov
shll
aad
shrb
mov
pusha
das
leave
es
mov
pushf
rcll
xchg
pop
inc
xchg
jmp
mov
inc
pop
inc
sahf
push
out
aaa
dec
dec
fildll
dec
xor
lcall
dec
call
fidivrl
leave
test
inc
loope
push
popf
push
notb
xlat
jmp
popf
xor
mov
push
mov
leave
add
divb
or
hlt
dec
mov
dec
jb
adc
fsubrl
ja
mov
movsl
xchg
shll
cltd
imul
push
jae
lcall
ret
add
xor
jle
and
fstps
es
pop
in
dec
sub
sbb
hlt
add
adc
cmp
popa
sub
insl
xchg
xchg
lahf
andb
lods
inc
std
push
inc
notb
mov
and
fadds
jne
jg
mov
fst
dec
cmpsb
inc
dec
mov
inc
xchg
leave
stos
jmp
fisttpll
and
pop
insb
xor
movsl
gs
dec
shrb
test
dec
and
in
or
mov
xchg
pop
mov
fbstp
pop
jecxz
add
and
loop
scas
in
push
cmp
sub
dec
mov
sub
insb
fsubrp
push
xchg
dec
test
or
fcmovu
mov
xchg
les
mov
mov
pop
cwtl
mov
pop
adc
ds
nop
inc
dec
jmp
add
jbe
jae
cmc
jbe
testl
jae
jmp
inc
mov
fcoml
jge
jge
cmp
in
add
cmp
xchg
cmp
and
lcall
ljmp
cmpsl
stc
and
lcall
mov
bnd
pop
pop
les
jmp
lods
mov
cmp
lock
iret
mov
cmc
lock
xchg
cld
bound
cltd
movsb
mov
mov
xor
mov
or
movsb
dec
add
test
in
fucomi
xor
fnstcw
sbb
inc
inc
ret
insl
imul
pop
out
into
xor
adcl
jmp
mov
inc
in
sbb
lret
ret
je
sti
push
jl
cmpsb
xorb
pop
or
in
not
pop
dec
orb
jl
pop
int3
adc
clc
outsl
repnz
sbbl
data16
mov
xor
dec
or
shlb
sub
fldl
mov
addb
stos
sbb
add
in
pop
jae
outsb
dec
aaa
pop
inc
cli
cmp
pop
sbb
mov
mov
cmpsb
stos
push
push
pop
adc
cmpl
add
push
das
push
dec
ret
mov
fs
jp
add
cli
lea
add
cmp
je
xor
rcrl
pop
hlt
adc
cwtl
mov
mov
sbb
imul
aad
cltd
daa
repz
iret
fisttpl
jge
xor
xchg
push
adc
in
add
cmpsl
push
cwtl
inc
iret
sbb
loope
xchg
loop
push
scas
mov
lahf
mov
push
push
xchg
aam
xor
adc
mov
jmp
push
movl
cmp
mov
lret
push
lret
enter
cmp
sub
xchg
jg
sub
aam
xchg
push
xor
pop
pop
and
cmpsl
ss
lods
add
pop
xor
ds
int
clc
push
mov
jle
sub
cmc
cmp
mov
pop
div
lret
adc
sub
mov
add
push
js
dec
mov
psadbw
cmp
mov
ret
pop
sbb
ret
insl
add
add
mov
sub
into
int
das
enter
mov
mov
rcpps
hlt
leave
mov
push
lret
orl
bound
adc
dec
insl
mov
mov
mov
xchg
mov
ljmp
ja
jbe
das
ret
adc
jg
aad
ret
mov
outsb
shlb
pop
enter
mov
cmpb
addb
int
xchg
push
aaa
or
icebp
out
sub
shlb
dec
jnp
mov
and
sbb
mov
xchg
push
filds
stos
stos
in
mov
aad
insl
gs
das
push
jns
push
cmp
loop
out
stc
jns
aas
ss
push
jbe
adc
mov
jmp
fiaddl
fnsave
popa
nop
leave
aas
mov
aam
and
call
call
xchg
cmp
cmp
add
jg
add
pop
lods
int
mov
lahf
lods
in
pop
roll
sub
test
dec
pop
push
lret
mov
notb
mov
in
mov
sub
push
and
mov
test
int
cld
je
mov
mov
jno
lahf
jb
cltd
popf
leave
mov
movsb
mov
js
mov
jbe
mov
or
insl
popa
jo
dec
movb
and
jecxz
mov
xchg
adc
lock
jmp
insb
push
xchg
aas
cli
ss
fldt
push
mov
sub
movsb
jge
sub
mov
dec
ss
xchg
xchg
mulb
pop
adc
fildl
mov
sbb
xor
dec
cmp
push
inc
popa
push
inc
inc
mov
add
push
pop
mov
out
stos
push
jno
jl
das
and
adc
je
and
push
fcomp
sbbb
mov
divl
xor
leave
shrb
mov
inc
out
mov
mov
and
loop
sub
out
and
je
sbb
mov
xor
inc
inc
lcall
and
sarb
test
mov
mov
cld
in
adc
test
lods
dec
push
ja
cmp
adc
fimull
ljmp
pop
pop
lret
stos
sub
add
cli
mov
jge
xchg
icebp
sub
dec
xlat
mov
in
push
cmp
gs
push
jb
xor
mov
xchg
stos
popa
or
hlt
mov
aaa
mov
inc
lret
and
mov
push
test
push
push
sti
push
mov
ljmp
jecxz
pop
mov
jl
pop
sbb
jb
mov
and
decl
mov
dec
mov
mov
lret
cli
notb
cmpb
xor
lea
push
dec
pop
push
ffreep
or
and
das
cld
mov
inc
mov
xchg
sub
push
inc
jb
jmp
sub
cmp
pop
insb
aas
pushl
lret
in
leave
movsb
fld
xor
rorb
jmp
addl
cmp
or
shr
in
cwtl
mov
jp
icebp
stos
jo
sbb
cmp
cmp
sbb
mov
mov
mov
pop
movsl
ljmp
push
into
out
dec
cmp
das
test
jp
jbe
ret
fildll
imul
xor
add
call
aas
push
mov
pushf
enter
xchg
or
js
pop
outsb
sbb
daa
rolb
fs
iret
dec
jb
xchg
arpl
shrl
in
add
mov
aaa
mov
scas
mov
insb
call
add
mov
out
adc
in
mov
xorb
and
mov
arpl
shl
out
mov
xor
imul
cmpsb
push
lods
test
add
inc
xchg
add
test
movsl
cmp
ret
iret
cmpsl
push
in
lock
push
aas
data16
inc
shll
fnsave
xor
cmp
push
jle
loop
jg
fdivrp
clc
roll
push
stc
fcmovu
cmpb
and
mov
push
fldenv
jg
addl
adc
xchg
jbe
jnp
and
adcl
dec
mov
aad
cmp
ljmp
fcmovnb
int
jne
push
enter
iret
adc
adc
roll
imul
fists
movb
mov
mov
add
pop
cld
xor
flds
xor
imul
and
mov
ds
rol
xchg
jo
and
test
jbe
add
push
mov
dec
mov
push
cmpsb
jo
movsb
lock
add
jne
out
xlat
push
ds
leave
push
sbb
sti
pop
push
int3
or
cmpl
jo
fsts
mov
pop
or
adc
rol
mov
jecxz
cmp
daa
pop
lret
mov
mov
sbb
psubusb
andl
jbe
subb
xor
in
sub
dec
xor
into
mov
mov
sub
inc
mov
stc
loopne
and
and
outsb
jle
cmp
inc
jp
sub
jecxz
xor
and
adc
aam
into
sahf
mov
xchg
popa
insl
or
add
andb
adc
stc
mov
dec
iret
ds
push
dec
cmc
pop
inc
jge
pop
and
mov
jo
insb
sbb
subl
out
dec
mov
mov
xor
loope
call
xchg
or
aad
adc
shlb
push
and
fdivl
dec
and
ja
shl
call
lods
inc
les
or
adc
push
cmp
cld
pop
xor
sbb
addb
sub
sub
repz
repz
push
hlt
mov
js
mov
cmp
and
jmp
aam
out
leave
pop
loop
dec
sub
xor
mov
hlt
jae
mov
sub
ss
rolb
xchg
lahf
mov
mov
cmp
rorb
lods
cmp
pop
jmp
into
into
or
mov
pop
stos
repnz
pusha
js
daa
xor
lds
das
sarl
xor
jp
cs
testb
rcrb
mov
or
jmp
jnp
sub
imul
out
sbb
xchg
bound
nop
stc
scas
mov
mov
int3
ja
cmc
imulb
xor
xchg
arpl
inc
bound
loop
loope
and
xchg
imul
fidivs
push
xchg
stc
shr
out
mov
xchg
fisttpll
xchg
repz
push
push
cld
ja
inc
jl
xchg
xchg
push
sub
cli
mov
mov
arpl
or
adc
in
data16
dec
sub
add
enter
fbld
sub
sub
sbb
rolb
fisttpl
and
add
sub
push
stc
in
jae
test
cmp
sbb
sub
pop
ljmp
jl
fnstcw
das
sub
jo
inc
scas
jbe
pop
inc
aaa
or
mov
lods
sbb
daa
ja
sbb
cmpsb
movsb
ljmp
and
xor
sub
push
inc
lcall
jmp
shl
mov
mov
ja
adc
loop
ss
dec
inc
push
push
shrl
clc
cmpl
popf
es
cltd
test
std
imul
call
lock
mov
cmp
dec
or
jp
sbb
lods
outsw
iret
sbb
pop
insl
mov
cmp
subl
or
dec
pop
ljmp
push
jno
sub
sub
inc
out
loope
cmp
push
movsb
or
mov
dec
push
xchg
pop
loop
xorb
lret
cltd
jmp
lcall
and
popa
and
jae
pop
int3
imul
ret
push
push
mov
sbb
xor
ljmp
leave
idivl
xor
pop
jo
ja
xor
inc
in
aas
mov
mov
jne
mov
cmpsb
fcom
hlt
das
enter
inc
mov
psraw
fs
mov
aas
stos
mov
scas
test
adc
lock
adc
test
div
aad
mov
push
pop
adc
outsl
leave
lock
xor
or
inc
jp
mov
int3
jo
jl
imul
push
push
ss
imul
lods
mov
pop
frstor
outsb
out
sbb
and
xor
lahf
cmp
jbe
das
call
adc
xchg
das
dec
aas
pusha
call
das
aam
pop
sbb
cli
jo
es
lock
test
jge
xchg
mov
xchg
ds
in
xlat
pop
sbb
pushf
jno
stos
and
mov
mov
jp
jp
pop
add
divb
adc
lahf
loope
push
lret
or
cld
neg
xor
pushf
pop
ljmp
imul
stc
outsb
jb
pushf
dec
lds
rorb
repz
push
xor
mov
pop
dec
jne
push
cmp
pushf
mov
shlb
jnp
pop
lods
sub
out
mov
in
rorb
cltd
es
rclb
sub
lahf
mov
sbb
cmp
ss
gs
shlb
out
fbstp
pop
mov
es
inc
mov
dec
cld
test
cmp
xchg
test
cmp
sbb
cli
push
stos
add
dec
inc
mov
out
fmul
rcrb
jecxz
mov
int
cmpsl
rcrb
adc
push
cs
rcrl
in
add
mov
shlb
adc
push
mov
and
inc
pop
adc
sub
test
xor
loop
push
stc
and
cmp
mov
andl
xchg
les
cmp
push
dec
dec
adc
and
scas
xor
inc
popf
xchg
mov
loopne
inc
adc
repz
pop
jg
push
jnp
rcl
xchg
adc
push
push
xchg
xchg
sub
mov
pop
pop
data16
pop
inc
and
loopne
xor
sahf
sub
push
in
add
push
fstps
rcll
add
and
sbb
adc
xor
loop
adc
scas
sbb
jmp
inc
jns
and
push
mov
push
nop
cmpsb
jae
bound
jp
push
leave
inc
push
loopne
push
addl
aaa
aaa
leave
push
xchg
mov
cltd
stc
in
iret
arpl
into
in
mov
lret
jecxz
loop
cwtl
mov
xchg
arpl
mov
xchg
jge
rcrl
mov
adc
aad
sbb
mov
in
adc
jb
jb
mov
in
cmp
aam
xchg
xlat
out
mov
mov
xchg
push
sarl
xor
or
mov
std
fists
popf
mov
js
mov
sbb
add
ficoms
and
or
xchg
pop
arpl
cmp
leave
jg
xor
and
repz
adc
aaa
xchg
rclb
push
punpckhwd
mov
gs
pop
outsb
xchg
fisttpl
in
orb
ja
test
dec
lds
jo
jnp
loope
xchg
add
cmp
iret
mov
mov
out
dec
jmp
push
sub
aad
popf
and
sbb
movsl
insb
jns
shll
push
jae
dec
aaa
pusha
ret
loope
clc
or
pop
popa
js
scas
mov
popa
sub
rcl
mov
mov
fdivrs
in
dec
scas
xchg
or
fdivs
xchg
and
jae
jbe
xor
jmp
aaa
mov
xchg
ffreep
orl
xchg
inc
mov
cmp
imul
inc
ss
or
outsl
pop
mov
insl
leave
pop
push
sahf
leave
add
jle
ficoml
push
sub
inc
dec
cmc
hlt
mov
fidivl
and
sbb
fcompl
mov
int3
xchg
push
fmul
gs
inc
push
fadds
pop
cs
adc
dec
inc
jne
mov
subl
jae
sbb
sub
cmp
in
scas
jbe
xor
movb
fdivl
inc
jno
arpl
leave
jg
xor
cmp
out
mulw
arpl
repnz
inc
jne
mov
or
and
or
adc
jmp
imul
mov
leave
fisttpl
daa
outsb
jbe
out
hlt
std
or
cmc
daa
insl
pop
cwtl
sbb
imul
faddl
sbb
or
lods
daa
pop
push
xchg
xor
cmp
xor
into
insb
mov
pop
mov
das
loopne
jle
and
push
pushf
push
inc
xlat
out
add
or
ret
or
lret
test
testb
jle
xor
ret
leave
push
push
add
cmp
dec
and
push
aaa
adc
aas
xor
sahf
les
or
lret
dec
popa
leave
lods
es
jnp
inc
stos
insb
sahf
jb
lds
in
test
test
adcl
sub
dec
jns
popf
pop
push
jb
std
pop
out
push
push
pop
sub
shrb
jge
adc
cwtl
pop
adc
cli
sti
xor
hlt
mov
or
jbe
pusha
xchg
lods
pushf
test
xchg
inc
jecxz
mov
cmpsl
jae
cmp
cmpl
out
fimuls
pop
adc
xchg
push
mov
aas
insl
pop
pushf
mov
nop
pop
push
testb
xchg
jbe
call
lock
insb
daa
xchg
and
lret
cmc
push
cli
cld
ja
ret
adc
adc
cli
cmc
shrb
std
loop
cmp
push
jne
pop
mov
or
adc
inc
pop
dec
aam
sbb
test
inc
push
cmpsb
imul
mov
psubusw
mov
mov
and
clc
cmp
mov
pop
add
jbe
hlt
pop
ljmp
jae
and
stc
mov
push
push
dec
lahf
sahf
add
lds
and
out
jne
sbb
mov
loopne
xlat
loope
jecxz
xor
mov
cmpsb
ljmp
mov
add
sub
and
cli
add
shld
movd
stc
adc
dec
xchg
int
sub
adc
sbb
std
dec
test
fdivrp
push
sbb
push
push
inc
dec
cmp
lret
mov
add
insl
sbb
add
mov
xor
icebp
jno
xchg
icebp
ss
cmp
fwait
cmp
push
and
ljmp
mov
test
inc
mov
movsl
add
xchg
iret
push
add
and
pop
lea
mov
add
es
pop
lahf
pop
xlat
shll
jo
mov
mov
push
mov
mov
in
js
push
xor
fsts
push
mov
adc
popa
aaa
loop
pop
es
push
lret
lret
or
dec
pop
ds
das
lret
jnp
jo
sbb
lods
pop
loope
mov
xorb
outsl
xor
cld
fwait
jmp
or
popa
addr16
outsb
xchg
roll
psllq
push
cmp
pusha
push
mov
jge
leave
mov
adc
mov
out
add
sub
jmp
and
xor
mov
orb
add
pop
jb
mov
sbb
cld
sbb
prefetchnta
hlt
mov
das
outsl
xor
jp
loop
out
and
loope
sbb
fimull
add
xor
arpl
nop
push
lcall
call
dec
arpl
cld
pop
pop
iret
data16
je
sahf
lret
scas
inc
imul
mov
repnz
inc
shlb
inc
inc
fwait
je
cmp
stos
pop
xor
popf
dec
inc
jmp
mov
push
mov
mov
mov
test
nop
int
out
sahf
pusha
repnz
mov
inc
popa
dec
pop
sub
movsl
sbb
lret
popa
out
or
shlb
fucompp
pop
pop
aas
cmp
in
shlb
xchg
je
mov
jb
scas
xchg
ja
or
sub
cmp
xchg
jae
movsl
pop
int
cmp
sub
jne
je
pop
add
shll
fchs
push
sar
or
add
loopne
ret
adc
imul
jnp
aaa
xchg
cltd
mov
jle
pop
xchg
inc
adc
mov
aad
cs
fcmovnbe
out
pop
es
jnp
testb
fnsave
movsb
or
push
sti
aaa
push
int3
pop
scas
rclb
inc
add
mov
jb
add
bound
cmp
sub
dec
rcrb
mov
xor
push
or
jmp
sub
out
bnd
mov
shlb
insl
ds
fwait
inc
dec
sbb
xchg
push
cmp
addr16
and
cmp
mov
into
js
sbb
out
cwtl
lock
imul
inc
out
inc
ds
push
std
mov
das
cmp
jmp
adc
int
aaa
xor
ss
jge
ljmp
dec
out
push
add
lret
std
and
js
je
test
cld
mov
mov
out
jb
sbb
xchg
lret
jne
xchg
add
out
push
mov
sbb
dec
add
jb
loope
jge
adc
ret
and
mov
lock
jae
jo
push
ss
cmp
mov
jns
xchg
sbb
mov
dec
das
or
mov
aaa
or
dec
push
lahf
xor
adc
rcll
aaa
jmp
neg
or
dec
cld
leave
sub
jle
mov
clc
cltd
lods
lahf
movsl
xor
cmpsl
insl
mov
xchg
mov
das
cli
insb
das
mov
int3
testl
xchg
rorb
mov
mov
out
mov
enter
cld
fldcw
adc
repz
lods
inc
mov
popf
paddusw
jle
cwtl
mov
stos
test
rorl
mov
sbb
pusha
imul
rcrb
mov
or
mov
inc
sub
loopne
sbb
and
lds
adc
mov
inc
stc
mov
xchg
cmc
xchg
ret
popa
hlt
sti
or
out
cli
xor
insl
scas
mov
aam
rcr
stos
cmp
pop
mov
adc
pop
and
test
xor
negb
testb
adc
jle
mov
addb
jge
ljmp
push
es
call
hlt
mov
not
xor
xchg
rorl
jo
xor
mov
out
mov
out
cmp
mov
xchg
popa
inc
adc
fidivs
adc
inc
rclb
into
add
mov
pop
inc
xor
xchg
cmp
call
int3
mov
mov
inc
jle
rcrb
ret
jmp
add
hlt
push
call
out
xor
adc
or
jo
ja
pop
push
cmp
sub
decb
and
aas
dec
or
dec
aam
cmp
push
inc
push
outsb
xchg
sbb
mov
in
xor
and
push
jmp
stc
jae
mov
pusha
test
push
adc
mov
mov
cmp
rolb
testl
mov
xchg
pop
das
stc
and
pop
mov
fs
clc
out
cmp
out
or
mov
jmp
adc
push
jg
ffreep
fldenv
or
cs
or
xchg
loope
sbb
pop
stos
clc
xchg
pusha
mov
dec
arpl
pop
std
jb
add
aas
test
ja
popa
pushf
scas
shl
mov
adc
mov
mov
add
cmp
xor
insl
pop
shl
movsb
push
aad
clc
sub
sbb
jo
dec
jnp
mov
sarl
and
fcompl
gs
mov
mov
movsl
popa
and
sub
ljmp
jns
sti
dec
mov
and
or
gs
xchg
outsb
int
enter
cmpsl
xor
dec
mov
lret
mov
repz
into
dec
adc
stos
fildll
enter
mov
xchg
mov
into
cmp
sbb
dec
jne
pop
das
orb
dec
fldl
mov
subl
sub
iret
out
addr16
mov
jmp
out
fwait
aad
clc
add
clc
test
push
push
pop
repnz
push
jecxz
aaa
inc
negl
add
out
cmp
push
sbb
mov
push
sbb
xor
repnz
pop
daa
cmpsb
cmc
or
add
loope
hlt
inc
sbb
ret
mov
jle
icebp
lods
mov
in
push
pop
mulb
pop
cmc
mov
jbe
push
lock
cmpl
mov
or
jae
mov
iret
push
mov
lods
ljmp
cmp
jp
outsb
and
sub
rep
lea
orb
push
ficoml
std
mov
xlat
add
outsl
inc
xor
ja
repnz
or
out
push
pusha
int3
pop
loope
lods
mov
mov
mov
out
test
push
inc
sub
xor
aaa
xchg
or
xchg
pop
lea
inc
adc
dec
adc
int
mov
mov
cwtl
xchg
fidivl
shlb
in
xchg
mov
fdivrs
gs
inc
or
test
jle
adc
ret
test
and
sbb
adc
add
and
pop
or
xchg
adc
and
hlt
sbb
inc
into
rorb
imul
dec
cs
mov
movsb
pop
negl
cmp
fisubs
rcrl
movsb
pop
fdivs
aad
cmp
mov
sbb
lea
push
stc
mov
xor
fildl
push
add
xchg
icebp
dec
cmpsl
sbb
in
call
pushf
jl
js
mov
lock
dec
fs
insb
fwait
add
shll
mov
cmc
or
incl
test
adc
sub
inc
fldenv
in
pusha
into
mov
jae
lods
sub
inc
xchg
pop
mov
push
test
stos
inc
fidivrs
mull
mov
sbb
pop
shll
gs
pop
jb
loop
push
dec
sbb
inc
xor
sbb
popa
xorl
pushf
dec
jecxz
dec
pushf
sti
movsl
repnz
sbb
fs
ftst
jne
add
inc
pop
stos
sub
add
mov
lock
mov
pop
adc
fs
adc
out
negl
xor
mov
xor
pusha
testl
data16
xor
jo
adc
cmpsb
lret
add
mov
das
jl
fisubl
jbe
divl
cmp
add
enter
push
in
stos
movsb
cmp
stos
mov
ss
sbb
enter
repz
nopl
xchg
loopne
sbb
inc
dec
cmp
cmp
cmp
mov
in
mov
mov
in
in
dec
repnz
icebp
test
xorb
je
fsub
xor
adc
popf
pop
pop
mov
or
or
movsl
push
or
shrb
ds
cmp
call
cmp
orb
xchg
cmp
popa
lret
push
mov
addr16
mov
popf
inc
xchg
xlat
sbb
mov
add
std
inc
or
fbstp
jecxz
push
cli
aad
test
push
sbb
test
adc
xor
dec
mov
sbb
loope
or
icebp
mov
stc
in
clc
xor
es
push
imul
pop
xor
and
sbb
lods
xor
sbb
pop
or
and
icebp
xchg
outsl
shlb
pusha
daa
mov
cmp
cmp
repz
test
pcmpeqd
stc
stc
ljmp
insb
fstpt
loope
repnz
stc
adc
lea
pop
pop
push
cmp
imul
add
jl
repnz
xrelease
dec
lock
in
cmp
rcll
lock
cmp
imul
jns
mov
jmp
bound
jmp
dec
sbb
pop
push
das
adc
push
push
jmp
pop
sbb
seta
jecxz
sarl
rcl
je
mov
sbb
add
leave
je
push
icebp
outsl
mov
jbe
pop
loope
fdivp
mov
outsb
inc
jae
adc
dec
adc
fwait
sbb
mov
mov
fisubs
lock
adc
ficoms
or
xor
sbb
push
aam
mov
insl
add
add
cwtl
xchg
mov
pop
addl
mov
stos
push
xor
cmpsb
in
cmc
ud1
fstps
fsubs
lahf
xor
push
stos
imul
int
pop
jge
fdivrs
sub
xchg
xchg
out
xor
sbb
xor
stc
sbbl
sbb
mov
or
or
lahf
inc
jp
test
hlt
mov
negl
popf
pop
mov
inc
mov
rcl
mov
cwtl
repz
xor
adc
mov
movaps
nop
push
in
in
fs
jnp
sub
insb
push
cmpsl
push
repnz
in
clc
lret
scas
stos
sbb
pop
lret
ret
xor
repnz
add
sahf
jg
pand
xchg
vmwrite
pop
sbb
cmc
pop
nop
lods
ret
mov
cmpsb
mov
push
lods
push
adc
pusha
and
cmc
insl
dec
sarb
xchg
inc
mov
aaa
sub
xchg
fbld
push
xchg
arpl
stos
sbb
cmpb
punpckhbw
outsb
es
andb
mov
out
pop
leave
imull
push
jnp
in
in
aaa
rcrl
push
cmp
test
shr
aam
lahf
out
mov
fldt
loope
std
add
dec
mov
pop
in
cmp
or
aaa
rcr
loopne
lock
icebp
mov
mov
pop
movsl
test
jnp
push
outsb
mov
push
push
xchg
repz
cmp
in
adc
pusha
bound
shll
enter
loopne
in
imul
outsb
xchg
cltd
test
scas
pop
shr
inc
movsl
inc
xchg
aad
add
lahf
sub
pusha
je
sbb
add
pop
scas
pop
loope
in
std
adc
or
pop
je
les
pop
xchg
mov
fildll
xor
insl
arpl
cmp
fiadds
mov
mov
inc
xor
shrl
inc
push
sti
aad
sub
mov
xlat
clc
xchg
movsb
add
lahf
xlat
jecxz
pminsw
xchg
mov
in
arpl
pop
aas
mov
jbe
fidivrs
faddl
ja
cli
inc
test
jae
xor
mov
or
push
fcmovne
cmp
pop
dec
cmp
lret
scas
les
mov
shlb
mov
rolb
mov
add
add
movsl
push
pop
xchg
adc
insb
pusha
xor
pusha
loope
outsl
mov
sbb
dec
cs
aam
cmpl
or
push
add
rorl
jmp
in
dec
jae
fmuls
lret
or
dec
mov
add
adc
sub
cmp
loope
push
fdiv
rolb
lcall
mov
sbb
loope
sti
sti
pop
xor
jno
stc
inc
sti
sbb
xor
sub
adc
lret
rcl
aad
aas
in
mov
std
mov
jbe
test
push
adc
repnz
subl
add
xor
fildl
enter
gs
jp
iret
mov
xor
sbb
out
mov
add
fsts
jmp
inc
insl
call
dec
loope
push
mov
jp
movsb
into
jno
call
fldenv
leave
push
jecxz
adc
les
fst
xor
out
dec
psubusw
cmpsb
pop
repz
out
aad
cwtl
aad
cmp
jge
popf
jmp
push
mov
ljmp
into
lods
and
push
mov
mov
jns
or
lds
sub
cli
and
test
testb
jo
push
ud1
out
loop
notb
mov
and
movsb
out
call
xchg
push
push
push
out
jle
xchg
in
subb
cmp
test
fdivrs
jae
mov
inc
out
dec
xor
call
mov
ret
push
jg
dec
and
jo
aaa
push
and
cmpsb
and
loopne
insl
pop
add
ret
adc
int3
repz
xor
mov
jp
addr16
cmc
jbe
test
dec
jns
xchg
xchg
xor
add
dec
sbb
xchg
ret
ss
and
clc
push
inc
or
xchg
ss
jbe
into
mov
out
push
sub
cltd
fistl
mov
rolb
orl
xor
setb
mov
test
aas
jno
pop
stc
out
ljmp
out
dec
outsl
push
outsb
jmp
jae
mov
rorb
out
cmp
cmpsl
jne
es
int3
hlt
push
pop
ljmp
xor
push
jb
add
or
std
packssdw
scas
pushf
mov
xorl
mov
lret
pop
insb
rcrb
push
push
test
jmp
cwtl
mov
inc
jno
ficoml
hlt
xor
in
inc
cmp
xchg
or
shll
sbb
cltd
psubusw
out
jle
aad
enter
dec
push
push
insb
mov
cmp
test
popa
lret
imull
imulb
mov
or
pop
jge
leave
xchg
outsb
jnp
int3
mov
mov
addr16
imul
inc
imul
addr16
xor
test
call
cmp
mov
mov
inc
pop
jle
mov
insb
mov
adc
add
fldcw
lcall
pop
je
pushf
xlat
mov
and
pop
jg
xlat
inc
dec
dec
lods
repz
sbb
inc
cmc
sahf
jne
fildll
mov
or
bound
data16
push
mov
je
lods
lods
mov
fnsetpm(287
cwtl
mov
pop
xor
scas
cli
lahf
es
mov
stos
jecxz
mov
repz
fsubrp
call
cmp
aaa
xchg
leave
insb
push
pop
shlb
mov
xchg
ret
mov
or
or
inc
aaa
mov
push
mov
mov
xchg
mov
pushf
jnp
outsb
pusha
mov
icebp
pop
cld
sub
ss
pop
je
sub
cld
fdivl
repz
aam
xor
fisubrs
cltd
nop
popf
pusha
push
stc
imul
push
lods
cmp
push
repz
dec
mov
jns
push
xchg
scas
imul
xchg
lods
dec
jecxz
inc
scas
and
push
test
mov
in
pop
jecxz
imul
jno
out
adc
bound
mov
andl
mov
das
adc
dec
into
fisubrs
or
cmp
inc
adc
jp
insl
xchg
ror
jns
mov
in
into
in
and
pop
subb
lret
out
mov
cmp
out
pusha
js
loope
add
inc
std
loopne
ret
fsubs
ret
mov
lret
idivl
mov
push
push
fcoml
imull
pop
mov
mov
mov
xchg
pop
rcrl
dec
push
push
push
and
fldcw
adcl
scas
ds
sbb
sub
imul
test
jl
cmpsb
ljmp
adc
sbb
pop
lret
sub
push
and
rclb
pop
ds
aas
jecxz
rcrb
into
pop
ffree
pop
jo
loopne
aad
mov
adc
pusha
movsl
adc
pop
std
dec
iret
daa
clc
jge
movhps
mov
pusha
fistpl
shlb
incb
pop
push
popf
cwtl
push
mov
mulb
sbb
and
inc
ret
jle
dec
or
sbb
in
mov
ljmp
or
mov
push
aas
adc
stos
mov
out
clc
cbtw
out
xchg
jg
push
in
mov
dec
xlat
lods
mov
sub
repnz
pop
mov
jl
xchg
xchg
xor
das
fnsave
sahf
loopew
mov
std
lret
enterw
adc
and
inc
sbb
rclb
add
test
sub
xor
addr16
cmc
cli
out
fs
cmpsl
push
call
jb
mov
xor
sbb
jo
mov
mov
sbb
shll
jo
shrl
gs
sub
adc
push
mov
pop
cmp
iret
outsl
xor
mov
out
cmpb
cmpsb
adc
pusha
cmp
fisttps
push
jmp
cmp
cmpsb
scas
mov
mov
push
lahf
xchg
into
sahf
and
adc
adc
imulb
sahf
and
sub
out
push
call
pop
or
inc
mov
js
xlat
lret
lds
jmp
cmp
test
or
ds
or
mov
add
test
inc
lea
test
rcll
js
cwtl
mov
mov
sub
adc
or
bound
adc
and
fldenv
xchg
sbbb
dec
dec
cwtl
push
imul
in
cmp
stc
out
xor
xor
dec
xchg
push
mov
test
mov
icebp
movsl
pop
iret
test
test
cmp
fucomp
push
subl
push
lods
inc
or
lock
stc
add
cltd
add
sbb
shl
sbb
das
int
call
out
xlat
inc
jns
jp
std
dec
sbb
mov
xorl
sbb
mov
pusha
and
pushf
pop
jnp
fldl
inc
pusha
sahf
loope
mov
lds
or
notb
addb
imul
adc
mov
out
clc
addb
out
fisttpl
xor
mov
mov
add
gs
lods
popf
mov
mov
mov
pop
cwtl
cmp
nop
pop
or
and
cltd
pop
and
sub
mov
jle
insb
mov
imul
or
xchg
lret
jl
mov
leave
xor
jb
sub
or
add
rol
mov
mov
testb
inc
xchg
js
movsl
or
mov
dec
bound
cmp
aas
pop
add
popa
cmp
push
out
mov
and
pusha
lock
aas
sbb
sahf
push
lret
jo
mov
xor
xchg
push
sbb
cmc
idivl
and
mov
sbb
cli
jb
cld
bound
insb
cltd
jmp
and
bound
dec
ja
mov
dec
xchg
push
dec
push
test
lahf
addps
sbb
fstps
orb
adc
cmpsb
push
mov
xchg
ja
and
mov
cs
int3
mov
fs
cmp
pop
add
sub
sbb
pop
mov
scas
lret
enter
rcll
xorb
lods
jno
jnp
lcall
pusha
pop
ds
xchg
and
sub
mov
pop
cltd
add
add
xchg
fiaddl
sub
stos
pop
or
mov
adc
sarl
lea
iret
sub
xor
dec
les
mov
or
mov
adc
add
adc
jb
dec
jmp
fsubs
add
adc
or
add
mov
add
shlb
and
xor
test
and
mov
bound
shlb
movb
xchg
push
nop
subl
arpl
push
xchg
arpl
xchg
rorb
js
mov
mov
adc
out
push
cmp
push
fdiv
inc
rcrb
push
ss
xchg
adc
xorb
or
cmp
jle
sarl
ficompl
jno
ret
jnp
leave
ljmp
lea
jecxz
cmp
paddd
repz
push
xchg
push
mov
adc
xchg
leave
arpl
xchg
into
mov
mov
idivl
jl
cltd
pop
xchg
lret
dec
and
xchg
mov
out
pop
out
sbb
add
pop
inc
add
mov
mov
mov
ds
mov
inc
adc
lret
push
inc
push
sub
shr
jmp
inc
das
out
hlt
inc
or
ljmp
cs
cmpsb
cmpl
and
movsl
lock
adc
cmp
in
inc
xlat
mov
dec
jmp
in
cmc
imul
push
daa
jp
adc
js
arpl
inc
mov
lods
hlt
aas
in
jmp
jbe
cmp
imul
pop
lcall
push
stc
cmp
ja
les
cmpl
movl
xor
dec
pop
mov
fwait
je
pop
xor
cmp
fsubs
cmc
cmp
lgs
adc
inc
dec
insl
vldmxcsr
xor
add
sub
bsr
sbb
les
adc
push
cmc
adc
test
aam
loope
mov
sbbb
xlat
xchg
add
lea
inc
stc
xchg
sub
push
daa
xchg
or
xor
stos
adc
mov
mov
aam
imul
sbb
rcll
pop
aas
and
imul
insl
mov
test
ss
sahf
decl
inc
mov
dec
adc
xchg
inc
mov
int3
mov
in
shll
pop
fdivl
xor
shr
cli
outsl
xor
mov
shll
ret
lcall
cld
pop
mov
push
movsb
fsubrl
xchg
lcall
movsl
push
push
sti
sub
test
jl
jl
outsl
jmp
out
inc
mov
add
loop
dec
cmp
mov
pop
push
es
js
inc
out
out
mov
flds
push
out
lock
outsb
addr16
inc
push
fistpl
lret
adc
gs
aas
call
aas
sbb
ds
mov
push
jno
mov
sbb
cli
and
bound
rcl
mov
push
adc
mov
lods
jns
cmp
jmp
xchg
daa
out
aam
sbb
aam
loop
fisubrs
int
mov
xor
outsl
loopne
mov
xchg
push
pop
jge
fsubrl
iret
pop
sub
clc
daa
imul
rclb
mov
cmpsb
fsubrs
xchg
push
push
lret
pop
repz
push
outsl
cmp
lret
lret
ret
ja
insb
adc
loopne
xor
shll
cwtl
sti
lret
pop
pop
mov
xor
lods
iret
lret
scas
test
fwait
mov
pop
pusha
scas
mov
jecxz
pop
jns
and
pop
pop
mov
dec
loope
ljmp
movsb
adc
jg
out
xor
js
push
add
lock
frstor
cs
dec
insl
divb
xchg
fwait
repnz
mov
sub
jnp
mov
jle
hlt
and
incl
loop
mov
data16
testb
sub
test
fsubrl
iret
js
xchg
mov
mov
loop
test
xor
xchg
fwait
clc
inc
aaa
adc
jbe
shll
leave
aad
dec
mov
jecxz
lock
stc
in
push
dec
adc
test
adc
cmp
cmp
imul
es
lock
ja
sahf
mov
sysexit
loop
sub
xchg
sbb
jae
push
mov
fcoms
cli
cld
imul
dec
push
outsb
pop
hlt
jne
push
mov
das
int
mov
mov
fs
push
sbb
inc
jmp
adc
jmpw
ss
mov
jle
bound
or
mov
stos
sti
pop
ss
push
or
mov
and
xchg
cmp
and
into
test
sahf
fwait
jle
sbb
xchg
data16
inc
out
jmp
ljmp
test
scas
add
outsb
shll
daa
xor
jecxz
mov
dec
stos
mov
test
das
xor
jnp
data16
jge
add
and
jnp
push
popa
cs
subl
shlb
cmp
imul
inc
cltd
fisubrs
mov
ret
xlat
je
sbb
sub
pop
pop
fbstp
iret
popf
dec
inc
cmp
inc
testb
fcmovnb
imul
or
nop
push
gs
movsb
push
jecxz
lds
cmp
fldt
insl
push
mov
or
pop
or
dec
cmp
aas
stc
in
jmp
roll
xor
inc
repnz
mov
sbb
popa
mov
into
xor
js
cmp
add
mov
dec
jae
pop
adc
repz
dec
loop
dec
pop
lahf
out
test
xchg
stos
add
fildl
icebp
pop
push
xchg
mov
and
push
cmp
sub
popf
pop
jnp
nop
xor
in
xchg
cld
xor
or
aas
sub
scas
shrl
stos
add
and
lahf
mov
aam
enter
loope
push
or
push
add
sbb
mov
xchg
add
sahf
mov
shll
imul
dec
inc
mov
push
sbb
pop
out
ret
aad
ja
push
add
mov
or
jge
call
lds
xor
xor
jmp
pop
pop
ds
xor
jae
adc
pop
mov
in
jb
lea
pop
pop
movsl
jbe
mov
xor
sub
gs
insl
xor
inc
jns
aaa
adc
cmp
leave
loope
pusha
lret
dec
lds
jns
mov
jno
pop
pop
sub
inc
mov
subl
add
andl
cltd
mov
fldcw
mov
movsl
subb
xor
sub
bound
xchg
lcall
add
inc
mov
cld
adc
adc
gs
jnp
fnstsw
scas
ficompl
sbb
and
mov
rorb
test
and
pop
faddp
and
movsl
or
dec
test
adc
and
rorl
popa
mov
fcmovu
test
sbb
xor
in
mov
fcoms
scas
pop
push
movsl
inc
fisttpll
adcl
ljmp
fcomi
add
adc
into
out
nop
jg
lahf
mov
arpl
lahf
pop
fwait
je
nop
xchg
aaa
pop
loope
push
pop
nop
push
int
inc
mov
jo
fs
xchg
orb
push
cli
ja
add
flds
movsl
jo
mov
sbb
ljmp
jae
fiadds
roll
sub
cmc
and
scas
js
fnsave
pop
xor
jae
and
ret
or
add
or
mov
ss
mov
fisubrl
pop
jp
xor
ret
and
pop
sbb
push
mov
adc
mov
outsb
mov
ret
lea
inc
push
adc
or
add
adc
mov
test
les
mov
add
sub
mov
push
xchg
sbb
mov
movsl
ds
jne
sahf
pop
inc
pusha
arpl
jl
push
xchg
add
mov
cmp
mov
mov
push
fs
aam
and
hlt
cli
shll
cmp
enter
fldcw
fbld
adc
push
sbb
or
push
outsb
xor
xchg
xchg
dec
enter
lahf
jae
mov
or
lock
mov
xor
mov
or
mov
scas
scas
pop
outsb
das
lcall
jno
mov
inc
mov
testb
cmp
and
jg
fisubrl
xlat
add
hlt
lcall
mov
ljmp
push
data16
push
xchg
mov
decl
jno
int
or
xor
leave
push
arpl
jg
mov
jb
mov
cmpsb
les
or
js
and
imul
stos
or
push
jb
and
or
cmpsl
inc
out
test
outsl
std
std
inc
pop
cmp
out
repnz
lahf
pop
insl
add
sbb
outsl
xor
into
sbb
loope
aas
mov
and
mov
sub
je
mov
in
inc
cmp
sbb
jnp
mov
aad
jnp
xchg
shll
jnp
les
movsb
jnp
fiaddl
xchg
shll
outsb
insl
mov
mov
and
jecxz
or
jecxz
in
jge
mov
rolb
push
stos
mov
sub
push
fmuls
adc
in
xchg
and
add
inc
xor
xor
loopne
push
xor
xorl
shlb
stos
pop
aaa
jmp
bnd
mov
dec
lcall
pop
adc
add
mov
cli
loop
int
int
xchg
mov
test
sbb
or
push
xchg
xor
jo
jb
pushf
push
call
out
cmp
jb
sbb
cmp
ds
xor
mov
xchg
call
add
pop
mov
xor
xor
mov
fdivrl
aaa
sbb
cld
xchg
mov
imull
xchg
fbld
orl
mov
jge
xchg
cli
imul
popf
sub
pushf
mov
inc
mov
fadd
sbb
jae
adc
xor
mov
mov
movsb
aas
daa
pop
aaa
jae
push
cmpl
mov
xchg
pop
in
xor
push
add
mov
sub
pushf
push
ret
lret
mov
mov
arpl
or
mov
mov
jno
add
sub
sub
out
adc
dec
in
dec
addl
pushf
ja
lods
push
mov
je
jmp
loope
adc
or
out
adc
adcb
aam
aaa
sbb
and
sbb
sarb
jb
push
test
notl
push
mov
sbb
sub
jge
cltd
push
sub
adc
mov
imul
outsb
xor
push
je
adc
xchg
mov
addr16
dec
es
cs
aad
xchg
mov
in
sub
cmpsb
insb
mov
std
outsb
jge
add
fsts
outsl
xchg
cmp
xor
insl
xchg
or
jl
push
inc
or
je
add
mov
call
ss
xchg
into
addb
push
dec
fldl
xchg
cmp
iret
outsb
adc
add
in
in
and
js
cltd
cltd
mov
call
sbb
int3
jb
and
outsb
push
mov
pop
adc
jns
lods
sub
test
pop
stos
mov
loope
jmp
or
or
or
jge
xchg
add
jb
movsb
cmp
adc
sub
aam
xor
ret
xchg
add
sub
loop
sbb
push
enter
movsl
inc
mov
xchg
lret
mov
mov
stos
cmp
fs
inc
adcb
aas
out
push
pop
sub
jecxz
jmp
adc
insl
lcall
fbstp
ret
jp
push
mov
add
inc
je
jecxz
lock
arpl
mov
or
xor
xchg
mov
xor
push
test
push
shrb
dec
xchg
dec
ret
ds
adc
push
xchg
sub
push
shll
imul
xchg
pop
hlt
ja
or
je
leave
ss
and
cmp
or
aas
arpl
stc
sub
je
fdivrl
aas
into
call
sub
or
int
bound
loopne
cmpsb
test
add
aad
adc
ret
pusha
insb
lcall
insl
cmc
lahf
pop
popa
aaa
push
xchg
sahf
adc
add
sbb
sahf
mov
pop
das
rcrb
mov
or
mov
push
or
jle
pop
repz
inc
mov
pop
adc
xor
mov
xchg
dec
jmp
into
shl
add
mov
xor
es
pop
rcrl
aas
ret
int3
push
push
addr16
or
sti
mov
out
and
add
cmp
frstor
and
add
xchg
repnz
call
mov
hlt
fsubrl
in
ret
mov
icebp
cld
or
jl
xor
test
fisubs
add
dec
ss
out
out
or
and
rcll
aam
sysret
leave
das
ret
lods
fs
sbb
ret
and
daa
mov
into
out
mov
fwait
loop
jae
filds
rcrl
mov
lret
pushw
cmp
and
fistl
sub
js
mov
testl
jl
xchg
mov
cmc
out
pop
mov
push
mov
lahf
xchg
lods
insb
js
push
hlt
test
cmc
ret
fdivr
out
shl
add
imul
pop
and
ss
cmpsl
cld
lods
adc
mov
enter
cmpsl
sbb
imul
sub
out
loope
xor
std
mov
and
sub
sti
inc
ror
cmpsb
hlt
mov
and
dec
adcb
dec
jl
cltd
rsqrtps
loopne
sar
adc
dec
outsl
sti
out
out
bound
add
push
bsr
out
xor
cmp
sti
aad
in
rcll
sti
mov
and
insl
cmpsb
pop
jecxz
lods
jb
dec
push
enter
popa
js
mov
xor
push
leave
cmpsb
roll
hlt
clc
add
in
xchg
add
pop
jo
out
lcall
push
mov
cmp
mov
enter
xchg
inc
ds
fbld
jns
dec
sbb
and
ss
pop
push
aam
inc
push
lret
popa
dec
dec
and
adc
test
xor
ret
mov
repnz
pop
jne
sbb
mov
arpl
into
jecxz
jle
int3
lcall
mov
cmp
mov
cmp
subb
mov
aam
sbb
imul
out
testl
cmp
aad
mov
bswap
out
jp
mov
imul
adc
sbb
xor
add
xchg
inc
sub
jnp
call
clc
fistpll
dec
rcll
dec
xchg
movb
push
ss
jmp
ret
mov
sbb
test
aad
xchg
outsb
mov
aaa
add
xchg
lahf
pop
andl
pushf
hlt
push
pop
jb
ud0
pop
mov
xchg
mul
inc
vphadduwq
cmp
push
fsubl
shrl
jmp
iret
sbb
addl
dec
and
ret
mov
sbb
cmpsb
inc
cmpsb
cmc
jp
cmp
outsl
and
dec
cwtl
dec
fcmovb
and
sbb
out
loop
data16
cs
mov
fbstp
xlat
out
pop
xchg
shr
ljmp
mov
push
mov
imul
loope
push
cmpsl
loop
test
or
xor
push
or
xor
dec
gs
cld
scas
fmuls
mov
pop
cltd
mov
ret
add
daa
std
adc
push
fdiv
pop
insl
int
popa
fdivrs
xchg
xor
ret
jle
fimuls
dec
outsl
sbb
clc
lcall
call
xor
sbb
mov
test
cmp
adc
sub
mov
stos
negl
sub
add
lret
mov
fmull
insb
shlb
xor
repz
cmp
cld
push
test
jbe
data16
xor
add
and
mov
inc
in
leave
das
xchg
inc
pop
rorl
lret
xchg
add
pop
dec
pop
push
pop
fcoms
into
sbb
mov
loop
mov
frstor
pop
adc
mov
call
fsub
xchg
pop
lret
xchg
sbb
scas
scas
into
ja
cmp
sbb
lods
or
call
and
data16
flds
aad
and
or
ja
ja
lret
outsl
xlat
mov
push
push
adc
cld
fstpl
lock
push
lcall
push
icebp
mov
xor
mov
push
push
scas
mov
sub
into
push
mov
xor
stos
cmp
xchg
lods
loop
dec
popa
mov
xchg
xor
pop
mov
stc
xchg
jnp
dec
jl
push
inc
roll
xchg
int
push
ret
das
adc
add
mov
aad
jns
mov
mov
dec
xchg
xor
inc
jne
jbe
pop
shll
movsl
and
mov
stos
test
mov
js
gs
pop
jmp
mov
out
inc
into
jae
aam
clc
push
pushf
sarl
sbb
aas
out
and
and
icebp
lea
lret
xor
push
jl
adc
int
repz
sar
push
jp
sahf
fisttps
and
in
sbb
sub
pop
shrb
mov
pushl
and
jo
sbb
lock
lret
leave
xchg
pop
xor
xor
ret
dec
sub
push
xchg
movsl
mov
shlb
test
pusha
fsubs
lock
xchg
sub
pop
mov
or
je
jns
and
push
dec
mov
pop
dec
cmp
out
nop
hlt
sarl
mov
sub
in
jge
mov
les
scas
xchg
das
dec
inc
jp
jae
imul
mov
ror
cli
mov
rcrb
test
imul
lods
in
fs
js
int
test
push
mov
xchg
mov
or
pop
xor
pop
cmpsb
push
inc
test
adc
es
scas
icebp
jp
mov
adc
mov
test
lea
or
lret
jecxz
test
test
adc
inc
or
jnp
ret
inc
sub
lcall
mov
and
dec
fwait
and
pop
mov
sbb
inc
fisubs
push
dec
jl
mov
push
and
dec
jo
clc
imulb
sahf
arpl
jmp
cmp
pushf
pop
call
outsb
cmp
mov
test
sbb
sub
in
jmp
sbb
sub
shlb
pop
mov
xchg
cld
daa
add
mov
es
mov
ja
pusha
lock
push
mov
imul
mov
insb
std
inc
push
push
push
rolb
lcall
jmp
jl,pn
xor
cs
mov
pop
adc
jle
jae
stos
jg
pop
push
fiaddl
movsl
mov
cmp
mov
pop
or
sbb
in
cmp
es
movl
add
mov
dec
cs
jl
cwtl
xor
aam
jecxz
aas
push
or
sub
outsl
adc
leave
in
rorl
jg
pop
leave
or
fsts
out
push
push
fistpll
icebp
xor
es
outsb
pusha
jmp
scas
push
gs
sub
sub
cwtl
fcoml
or
les
pusha
sub
inc
jmp
sub
push
mov
adcl
pop
popf
pop
andb
jmp
mov
mov
addb
mov
fimull
cli
xchg
lds
inc
add
xchg
in
adc
sub
jle
cmp
hlt
pop
cmp
adc
mov
movsl
psubsb
xor
ret
call
pop
dec
add
popa
imul
xchg
pusha
sub
dec
push
lods
jnp
insl
std
pop
xor
out
mov
inc
lods
xlat
inc
jne
test
mov
dec
cmp
fsub
insl
sub
insl
sub
fdivr
push
sbb
adc
test
hlt
mov
add
negl
shlb
fdivrs
mov
cmpsl
dec
dec
pop
test
shl
gs
mov
div
inc
xor
inc
cmp
jno
sbb
test
add
jnp
ret
sbb
flds
stos
out
sbb
adc
and
and
fdivs
out
sbb
cmp
push
adc
sti
push
inc
and
clc
jne
and
ror
and
jle
pop
xor
out
fnstenv
call
ja
call
cs
jecxz
fsubl
mov
sub
jp
fiaddl
jmp
sbb
sbbl
shr
ficoms
jp
mov
iret
out
jl
mov
mov
cwtl
in
sbb
sub
inc
cwtl
orl
inc
imul
push
cmp
mov
outsl
out
sbb
cmp
mov
pop
pop
dec
iret
test
pop
test
lret
fwait
mov
scas
fwait
stc
aam
loop
popa
stos
cmpl
ja
iret
jne
adc
xor
insb
test
ds
fwait
movsb
add
push
xor
inc
and
sahf
sub
mov
pop
add
jo
pop
mov
sub
dec
repz
push
inc
dec
adc
dec
pushf
push
jns
clc
mov
mov
xor
orb
cmp
in
dec
push
xor
inc
enter
repz
dec
lods
sbb
or
push
mov
popf
inc
fndisi(8087
sbb
jl
lahf
lods
pop
pop
adc
test
sbb
ret
mov
shrl
in
clc
pop
stos
dec
or
into
add
in
andb
xchg
ja
aam
aaa
not
int
push
mov
or
pop
jge
inc
adcl
outsb
jl
sub
xlat
jnp
imul
ljmp
stos
jb
sub
xor
jle
dec
sub
lret
cmp
icebp
xor
cmp
cmpl
push
xor
jmp
mov
adc
fs
jns
loop
xchg
add
cmpb
cmpsb
scas
fwait
adc
call
lahf
jae
jo
cmc
rclb
fistl
aas
out
enter
out
add
test
lcall
ror
shlb
rol
jecxz
ds
test
jne
ffreep
xor
sbbb
ljmp
sub
into
rcll
xrelease
adc
sti
fs
or
aam
pop
icebp
std
jmp
addb
jge
sbb
dec
push
gs
cs
cmp
xchg
add
xor
in
add
out
push
dec
pop
jecxz
fldcw
push
stc
imul
das
cvtpi2ps
sub
leave
jg
pusha
or
aad
xor
push
mov
cmp
dec
cwtl
shrl
fwait
push
inc
jns
icebp
outsb
fistl
pop
sub
stc
sbb
jecxz
dec
sbb
test
fadd
jne
jae
add
dec
decb
inc
mov
sti
jns
inc
xchg
adc
xchg
leave
cmp
aam
push
jo
xchg
shlb
adc
pop
xchg
sbb
mov
xchg
jne
repnz
andb
adc
xchg
imul
xchg
data16
loope
leave
out
lock
cwtl
popa
add
mov
std
mov
mov
inc
fcmove
dec
ja
pop
mov
and
adc
test
xor
adc
dec
pop
inc
pop
adc
jb
notrack
xchg
jle
loop
sbb
dec
ffree
in
das
adc
cltd
shll
enter
dec
scas
sub
int3
mov
ret
pop
jge
jns
add
push
pusha
push
xchg
inc
jle
mov
int3
fs
popf
mov
sub
shrl
sbb
loopne
out
push
ljmp
mov
xor
mov
neg
sbb
jp
pop
mov
decb
divl
in
cmp
xchg
push
call
xor
sti
xchg
cmpsb
sub
loope
cmpsb
insl
jle
push
and
pop
cwtl
rorl
into
mov
sahf
sbb
or
add
inc
sar
outsb
inc
cli
in
cmp
push
xor
add
js
mov
xchg
ret
mov
pop
rcrb
push
cmpsb
cmc
popf
sub
lds
fcoml
filds
outsl
adc
dec
adc
iret
cmpsl
inc
leave
xor
push
pop
iret
mov
push
sub
cmp
push
mov
push
jno
xchg
cmp
dec
mov
insl
psubb
mov
adc
cmp
cs
push
push
and
jne
cmpsl
addr16
jle
or
add
cmp
push
sahf
xchg
ljmp
ja
xor
push
dec
add
push
cmpb
mov
fidivrs
xchg
sbb
out
jmp
mov
pop
cmpsb
add
test
cmp
mov
lods
lods
jg
aas
lock
mov
jmp
adc
mov
enter
jns
notb
mov
mov
test
xorb
jp,pt
jp
les
pop
inc
and
outsl
xchg
mov
mov
or
xchg
jge
iret
xor
dec
daa
sti
mov
rolb
mov
outsl
outsl
inc
push
cltd
loopne
cmc
iret
xchg
nop
mulb
repz
mov
popa
js
mov
sti
sti
push
mov
addb
dec
cmpb
inc
mov
or
add
xor
pop
mov
scas
es
rcr
mov
ret
mov
cmp
xor
enter
xchg
and
push
adc
movsl
pop
add
jbe
adc
daa
pop
or
dec
imull
ljmp
adc
into
mov
mov
ficoml
pop
and
inc
in
xor
jb
push
or
loop
sub
data16
loopne
push
xorb
popa
inc
fisttpl
push
popf
enter
jge
lock
xchg
sbb
push
jl
adc
inc
push
lods
ret
mov
nop
pop
jge
xchg
dec
je
stos
repz
insl
mulb
adc
cli
stos
jne
jle
inc
or
push
in
data16
xchg
or
jb
pop
push
andb
test
cmp
outsb
lahf
in
pop
lock
pop
mov
pop
and
inc
call
testb
lock
out
cmc
andl
test
cmp
popf
jno
mov
cli
idivb
sarl
lods
mov
and
mov
mov
fs
inc
negl
mov
lods
jl
aaa
das
adc
cmpb
xchg
mov
js
sub
leave
add
sub
outsb
or
lcall
movsl
xor
and
mov
call
inc
push
out
lds
pop
or
ret
add
add
xchg
or
mov
push
xchg
mov
adc
fwait
lret
and
xor
mov
fnstcw
icebp
sub
mov
xchg
in
xchg
dec
jge
mov
rcr
lea
or
cmp
mov
xchg
or
push
sbb
je
add
pop
mov
xchg
pop
fmuls
dec
jmp
jge
shrb
or
dec
cmpsb
and
cmp
xor
insb
cmp
cmp
rcrb
or
xchg
fdivp
scas
push
or
and
popf
push
sahf
mov
movsl
enter
imul
xor
lods
frstor
decb
mov
bound
xor
movsl
push
adc
adc
leave
sub
imul
sbb
divl
mov
pop
pop
jae
jg
push
jbe
push
imul
push
adc
add
jmp
push
and
xlat
jl
mov
or
lea
icebp
stos
enter
dec
sbb
cmpsb
mov
dec
or
gs
ljmp
mov
or
out
aas
ja
call
rcll
dec
icebp
dec
nop
cmpsl
pop
movzwl
add
xchg
jbe
in
pusha
data16
mov
fldenv
jo
dec
stos
xor
pop
cltd
xchg
daa
push
loopne
mov
shl
dec
call
out
pop
xor
xchg
js
pop
sub
sub
out
jae
mov
mov
jl
and
jmp
pop
add
in
pop
xchg
rcll
pop
sbb
outsb
mov
test
and
lock
addr16
fnsave
xor
dec
jb
jle
fldenv
and
jp
cmp
mov
std
mov
arpl
xchg
jbe
pop
mov
mov
shll
divb
adc
push
pop
pop
push
les
int3
in
inc
jmp
or
lock
lret
inc
stos
aam
or
sbb
fdivrl
jb
xchg
push
js
jp
pop
jns
aaa
cmp
sbb
fcmove
xchg
es
mov
cmp
push
dec
outsb
call
out
cmpl
insl
jae
pop
aad
push
dec
ret
movsl
aaa
and
jns
or
lods
and
inc
aad
aaa
fistps
daa
je
mov
mov
loope
cmp
das
mov
and
push
xchg
aaa
cmp
and
add
shll
pop
mov
into
or
add
data16
push
jle
scas
mov
or
shrb
jecxz
push
test
pop
xchg
out
sub
mov
es
mov
out
insl
out
sti
fldt
stos
shll
faddl
cltd
imul
call
mov
push
xor
xor
jae
xor
lods
test
adc
jle
in
in
daa
loopne
push
xchg
add
insb
mov
push
call
xchg
mov
jae
std
arpl
inc
out
push
mov
in
ss
mov
or
jmp
and
insb
cltd
mov
in
jmp
mov
mov
out
insl
data16
pusha
out
lahf
lds
clc
sub
ret
loope
sbb
push
inc
dec
das
fisubrl
xor
mov
lods
add
in
push
cmp
pxor
lea
inc
push
enter
mulb
mov
xor
jmp
mov
aam
movsl
xor
jb
lcall
jns
fadds
sub
sub
lods
sbb
fs
jne
sbb
dec
xchg
push
movsb
mov
xchg
je
pop
pop
js
filds
add
inc
rolb
out
inc
jbe
cmp
jmp
mov
movsl
cmpxchg
or
and
push
dec
pusha
fistpll
and
push
mov
and
jns
scas
mov
mov
mov
push
in
push
outsb
movsl
test
sar
mov
jae
mov
call
xchg
das
in
add
inc
and
xchg
leave
popa
mov
repz
xchg
push
movsl
outsb
imul
les
scas
fdivrs
clc
jae
in
xchg
sub
sbb
fcmovnbe
push
adc
out
hlt
out
test
push
cmc
popf
xor
test
pop
push
jl
jno
cmpsb
icebp
lods
or
adc
sub
out
adc
pxor
mov
xchg
lds
loop
push
aaa
and
jp
lds
in
stos
mov
sti
push
dec
push
add
mov
push
xchg
inc
mov
and
pop
push
dec
and
or
sub
sbb
call
pop
sub
ror
xchg
jmp
sbb
jae
mov
or
imul
cmp
sub
jbe
xor
mov
xchg
fidivs
movsb
loopne
jl
fnstcw
and
mov
mov
fsubr
mov
movsl
xlat
int3
ja
jae,pn
or
aad
xchg
push
mov
pop
arpl
cli
out
les
addr16
out
cli
or
jle
cs
ds
out
xchg
pop
inc
mov
dec
shrb
pushf
add
add
fisubl
pop
cmc
mov
mov
loop
dec
xor
aas
jmp
dec
xchg
jbe
mov
mov
in
push
mov
rolb
js
rorb
scas
sbb
movsl
or
xor
leave
lock
cmp
mov
fs
lods
iret
fstps
push
inc
mov
imul
mov
scas
pop
movsb
gs
adc
pushf
int3
xorb
xor
dec
fs
int
cmpsw
jnp
xor
mov
and
scas
lock
cmp
lahf
fwait
loopne
clc
test
add
mov
dec
rcl
xor
mov
jb
jbe
test
jge
sub
cmp
pushl
jmp
mov
pushf
pop
int3
popl
call
mov
sub
in
mov
mov
dec
mov
jecxz
out
push
stc
mov
mov
and
dec
dec
hlt
cmpsl
sub
repnz
aad
ja
inc
jl
or
xchg
mov
daa
mov
loopne
and
stos
popf
and
jp
mov
bound
xacquire
fiadds
mov
push
inc
xor
insl
test
add
or
fs
dec
pop
imul
lea
mov
rorl
mov
jns
mov
or
lret
repnz
out
cwtl
mov
jmp
data16
cmp
mov
lds
and
cli
xchg
outsl
out
cmc
xchg
fimull
fs
test
mov
xchg
testb
cmpsb
mov
lahf
rcll
outsb
dec
xchg
mov
scas
push
ljmp
lcall
sub
mov
inc
add
ficoms
xor
cli
sahf
sub
outsb
mov
jne
pop
and
mov
lret
lcall
movl
sbb
add
jne
lock
xor
add
outsb
jno
adcl
imul
outsb
inc
sbb
or
cmp
push
xchg
fcoml
lods
leave
or
inc
ficoml
addr16
movsb
mov
and
pop
sbb
inc
ds
jg
pop
or
ljmp
xchg
ss
clc
push
adc
dec
push
mov
and
push
cltd
sbb
popf
mov
in
lahf
out
inc
inc
xor
xchg
push
push
sti
jae
xor
or
or
push
pop
iret
xchg
lock
or
es
push
aaa
inc
test
jb
sub
stc
clc
mov
jl
jno
jge
sub
mov
xchg
int3
jne
mov
sbb
pop
imull
dec
cltd
jns
push
je
rorb
mov
jns
dec
jle
insl
xor
mov
jne
std
or
cmp
fildll
insb
repz
hlt
push
std
jmp
bound
xchg
adc
or
popa
iret
mov
xchg
fsubrl
out
ja
sbb
popf
inc
xorb
cltd
xor
aaa
cmp
push
adc
push
add
mov
mov
mov
inc
dec
je
pop
mov
or
or
xchg
scas
mov
xor
lock
out
in
popf
mov
cmp
sbb
push
pop
adc
xchg
jns
xchg
out
aad
jge
sti
xchg
int3
mov
xor
fidivrl
sbb
mov
cmp
std
int
aas
inc
adc
testl
inc
pusha
fnsave
dec
push
push
decl
insl
cmp
aam
xor
sbb
or
sub
scas
fcompl
imul
push
dec
push
lods
es
push
push
test
pop
push
sbb
inc
pop
lret
sbb
or
cltd
addl
add
test
ret
jge
rclb
push
lds
popf
and
test
out
lret
xor
mov
and
xlat
and
mov
mov
mov
stos
mov
push
pop
adc
xor
adc
aad
in
mov
into
fmuls
sbb
dec
xlat
lcall
lea
loopne
xor
sbb
repnz
int
mov
mov
xor
mov
dec
cmpsl
out
and
cmp
cmp
int
push
or
xchg
movsl
mov
pop
xchg
sub
adc
sbb
jne
sbb
movsl
fwait
in
jns
push
ds
adc
jge
rep
enter
aas
mov
das
sbb
test
mov
jo
data16
movsb
sbb
insl
jg
out
pop
sti
stc
add
aam
inc
ljmp
xchg
push
or
out
push
orl
push
inc
aad
adc
jae
cwtl
inc
data16
cmp
xor
cmp
sub
cmp
or
mov
movsl
in
xorb
mov
xchg
mov
das
mov
sbb
add
pop
inc
nop
lods
enter
and
push
push
mov
or
scas
and
adc
pop
pop
mov
push
mov
mov
mov
jge
scas
ds
jmp
jnp
mov
jb
cmp
movsl
mov
mov
imul
mov
jecxz
negb
dec
push
mov
sahf
cmp
fimull
orl
scas
push
lcall
cmpsl
mov
cld
add
inc
xchg
push
and
cmpsb
lcall
mov
jnp
gs
stos
push
xor
mov
add
icebp
inc
jp
arpl
int3
pusha
sub
das
mov
jp
movsl
inc
popl
jnp
loopne
pop
in
inc
into
aaa
scas
sbb
imul
or
or
leave
fstp
stc
pop
adc
inc
jmp
push
out
ja
inc
lods
sahf
mov
call
shrl
mov
sub
lret
scas
aaa
mov
bound
clc
cli
cmp
and
and
xchg
push
icebp
dec
lea
or
mov
shrl
int
loop
mov
inc
jl
mov
aas
mov
dec
ret
pop
ss
xor
dec
mov
ds
xchg
lcall
pop
push
mov
xorl
lods
mov
gs
stos
cltd
mov
aam
cld
ret
mov
pushf
add
pop
push
fnstenv
adc
or
add
sahf
or
inc
popa
xchg
rorb
adc
sub
jb
inc
push
lock
cmc
pop
ds
xchg
out
sub
clc
pop
xor
cltd
push
sub
jne
add
cmpsl
mov
aas
mov
popa
mov
sbb
daa
pushf
dec
out
mov
sysexit
dec
icebp
mov
aas
stos
mov
or
bound
fdivrs
nop
push
and
sub
sbb
std
cmp
mov
aaa
sub
xor
scas
push
bound
mov
adc
ljmp
sbb
cmp
mov
mov
movb
push
lret
insl
fisttpl
and
mov
mov
push
js
push
jecxz
mov
sbb
jmp
in
push
dec
cmpsl
nop
jne
jne
fwait
and
dec
adc
cmp
cs
inc
cmp
xchg
lahf
add
xchg
mov
mov
mov
xor
fsubl
jmp
scas
adcb
mov
mov
out
loope
xchg
scas
mov
add
adc
push
test
and
loope
sbb
mov
dec
mov
nop
adc
or
cwtl
idiv
dec
andl
add
fcom
pop
cs
add
popf
lock
mov
sbb
adc
xlat
imul
int
mov
iret
test
adc
and
sub
inc
movsb
aad
and
jle
fbld
dec
je
fwait
push
stos
and
std
or
adc
test
mov
inc
pushf
adc
das
sbb
inc
push
ljmp
enter
add
je
xchg
gs
loopne
adc
gs
mov
mov
mov
fcoms
aad
ja
or
data16
adcb
mov
ljmp
push
lcall
pop
pop
push
pop
jge
test
inc
loop
rorl
xor
mov
mov
out
jl
sbbl
jns
xchg
lahf
fcoml
mov
cwtl
sub
inc
inc
das
jno
xchg
pop
f2xm1
outsb
pop
dec
add
bound
sub
mov
dec
ss
pop
push
sbb
out
and
pmaxub
nop
nop
mov
je
cmp
rcl
and
mov
test
movb
adc
mov
packsswb
push
insb
and
xchg
jb
je
adcb
adc
lods
nop
or
dec
add
enter
je
int3
adc
pop
dec
push
mov
bound
push
adc
ret
dec
mov
loope
jnp
imul
pop
pop
inc
cmc
xor
scas
mov
fcoms
jno
xor
fsts
xor
notb
mov
lahf
leave
xor
mov
push
pop
fdivrs
pushf
pop
mov
jge
js
stc
lods
dec
push
xor
mov
or
leave
ds
and
or
inc
aas
jp
xchg
pop
dec
jg
add
test
mov
movsl
cmp
or
not
dec
inc
jge
int3
mov
addl
aam
test
push
pushf
rcrl
push
outsb
pop
pusha
dec
xchg
cwtl
xchg
sub
mov
sbb
fldl
fdivl
mov
out
mov
ljmp
loopne
std
repz
jl
lds
cmpsb
mov
sub
cmc
mov
dec
fwait
push
xchg
insb
sbb
pop
jecxz
xor
or
inc
dec
mov
in
sbb
sbb
ljmp
xor
jnp
add
push
dec
jp
enter
dec
inc
int
icebp
push
mov
and
mov
jnp
jb
nop
sub
and
ret
lock
xor
inc
push
jb
cmp
lods
or
inc
jecxz
fldl
mov
adc
xchg
adc
addr16
out
jp
inc
test
mov
int3
out
fdivp
out
inc
mov
js
data16
insl
push
inc
add
out
pop
ret
inc
mov
je
adc
repz
mov
cmp
std
sub
stos
xchg
push
mov
dec
imul
cmp
xchg
inc
pop
shll
jp
sbb
cli
pop
mov
push
test
cmc
sbb
push
add
add
jae
xor
mov
xor
push
xchg
fs
outsb
fnstenv
jg
stos
mov
xchg
add
cmp
mov
lock
cmp
cld
lahf
mov
xchg
dec
in
adc
and
push
stc
mov
lock
outsb
sub
sbb
push
mov
mov
outsb
aam
fisubrs
fwait
cltd
negb
icebp
mov
mov
mov
loope
add
cmpl
or
ds
jae
pushf
cmp
cltd
ljmp
xchg
mul
adcl
cmp
push
subb
mov
test
pop
sbb
sbb
push
pop
mov
xchg
fnsave
or
insl
clc
xor
mov
xlat
jnp
in
clc
add
ret
sub
outsl
inc
adc
cmp
incb
xor
icebp
mov
daa
std
pop
or
dec
adc
sbb
dec
or
add
xchg
jle
or
loope
xlat
pop
das
insb
in
fisttpl
out
jne
mov
dec
sbb
dec
pop
lods
ja
aad
sbb
lods
or
test
adc
out
je
jg
in
bound
loope
mov
jno
lds
pop
pushf
dec
mov
aam
cmp
dec
adc
add
scas
sub
clc
out
xchg
test
lock
fwait
out
outsb
xor
dec
cltd
stc
ss
pushf
lcall
cld
push
inc
jns
int
icebp
clc
mov
fists
jnp
jle
inc
mov
mov
lret
push
sub
fmulp
and
in
loopne
xor
inc
imul
xchg
sub
sbb
pop
push
jo
imul
pushf
into
daa
rclb
sahf
in
mov
jg
xor
stos
sbb
jno
jmp
scas
push
testb
sub
or
sbb
push
movsb
movsb
sbb
repz
push
repnz
in
or
scas
cmpsl
ja
in
and
dec
dec
cmp
bound
adc
cmp
dec
cmpsb
dec
popf
mov
sub
push
jns
in
sbb
mov
jl
les
lahf
repz
subb
jge
pop
lods
and
push
cmp
adcl
add
int
push
cmpsl
pop
adc
js
xchg
mov
jnp
push
push
std
das
rclb
and
test
cmc
push
insb
arpl
imul
out
cltd
sub
mov
lods
pop
adc
dec
jg
add
mov
scas
loop
enter
iret
nop
pop
xor
lret
cltd
push
mov
mov
jl
addr16
lret
jmp
or
and
and
jle
in
xor
mov
flds
rolb
jecxz
jno
fwait
bnd
je
push
rcrb
leave
add
and
popf
dec
into
loop
inc
sbb
and
mov
push
aad
add
in
aad
outsl
jp
pop
ja
mov
fsub
cmp
xor
mov
mov
xor
cmc
sbb
fstps
sti
dec
cmp
lret
adc
mov
inc
scas
mov
pop
xchg
in
and
lret
xchg
ss
lods
jns
stos
or
std
mov
pop
or
lcall
in
cmp
dec
lahf
loopne
push
cld
and
add
cmp
outsb
cld
mov
dec
cmp
cld
jne
jns
mov
in
aas
leave
ljmp
fs
clc
push
fwait
and
xrelease
sub
jg
fwait
mov
mov
ret
lahf
fmul
xor
fdivl
mov
cmpsl
rcrb
repz
xor
cmp
es
mov
pop
fsubs
pop
pop
jbe
dec
xchg
jbe
cmp
push
loop
or
inc
xlat
lcall
or
and
jae
pop
roll
jne
push
xchg
push
cwtl
cmpl
movsb
daa
loopne
aam
add
stos
repz
sarl
das
pop
push
pop
jo
ss
inc
mov
sarl
pop
push
xchg
sbb
mov
data16
insl
inc
lea
inc
sub
lret
stos
pop
adc
orl
jns
mov
mov
or
leave
sbb
in
test
sub
repnz
incl
es
pop
rcrb
sbb
sbb
es
and
cmc
cmp
popa
es
add
xor
movsw
sub
cmp
xchg
dec
cmpsl
jne
sub
and
loope
lret
into
cmp
fnsave
repnz
imul
sub
out
pop
out
jecxz
lods
fst
adc
xchg
jae
xor
add
sub
dec
xor
push
adc
decb
jmp
mov
movsl
pusha
lds
call
push
inc
push
or
mov
decb
jnp
mov
and
mov
push
xlat
inc
inc
in
imul
cmp
inc
ds
mov
data16
sbb
in
lcall
sub
xchg
and
or
shll
fucomp
sbb
scas
ss
rcrb
js
aam
jle
and
enter
imul
push
popl
imul
lods
insb
inc
mov
mov
cmp
push
xor
std
mov
inc
push
adc
push
popf
cmp
inc
xchg
and
inc
mov
adc
imul
orb
out
data16
in
jmp
insl
mov
sahf
dec
push
pop
inc
je
inc
cmp
mov
mov
push
inc
pop
mov
les
test
icebp
dec
push
push
mov
test
adc
ja
or
push
aam
jo
pushf
xchg
das
test
sub
mov
fcoml
adc
pop
xor
outsl
dec
adc
cli
xor
std
pop
dec
sbb
lcall
mov
mov
sbb
lcall
int
in
ret
test
sbb
xor
mov
adc
out
xchg
test
out
ja
push
jl
push
rcl
adc
lods
mov
popa
mov
fidivs
fcoml
pop
xchg
jbe
xor
lcall
paddusb
xchg
pop
or
cmpb
xorb
clc
sahf
sbb
jge
mov
cmp
inc
mov
cmc
xor
lock
jmp
lahf
verr
out
and
mov
data16
cmp
and
jnp
jp
cmp
xchg
xchg
scas
cmp
or
addr16
push
mov
iret
pop
movsb
ds
rcrl
mov
add
insb
mov
push
incl
inc
mov
jo
stos
sub
nop
fbstp
aad
sub
push
mov
stc
fimull
mov
test
test
int
add
mov
test
or
add
adc
dec
cmp
pusha
pop
iret
data16
and
ljmp
jo
into
and
mov
push
xor
xor
gs
in
fisttpll
ficoms
mov
cwtl
js
outsl
data16
mov
bound
xchg
and
rclb
cmpsb
test
fwait
and
dec
sbb
xchg
jecxz
pop
sti
aam
lcall
push
aad
mov
pop
int3
pop
and
cltd
or
addl
mov
pop
sbbb
sub
scas
mov
and
sbb
pop
adc
movsb
inc
inc
sub
test
mov
mov
pop
data16
cli
insb
daa
xchg
xor
inc
sarl
ss
jnp
and
sbb
jecxz
std
dec
mov
es
push
xor
inc
out
inc
sub
out
fisubs
cmc
or
pop
fsubs
fists
leave
and
or
add
jae
icebp
insb
arpl
jae
in
jl
mov
xchg
orl
and
xchg
lods
or
mov
cmp
movl
rolb
ret
xor
mov
mov
or
jns
bound
ja
in
rcl
and
cs
mov
or
icebp
pusha
mov
mov
mov
push
hlt
dec
dec
scas
pop
and
pop
addr16
std
aaa
movsl
sbb
ds
inc
das
iret
inc
pop
test
or
add
fistl
cld
pop
nop
inc
loop
push
push
nop
push
jns
inc
pop
jnp
push
in
pop
cmpl
sbb
outsb
add
out
stos
jmp
test
repnz
mov
mov
push
sbb
pusha
jmp
cli
stos
pop
mov
addr16
ds
cmp
lods
xlat
xchg
popf
or
div
out
mov
dec
lea
test
mov
jl
sahf
inc
popf
mov
lods
jmp
pop
lcall
add
outsl
push
lcall
shll
mov
jnp
xor
cmc
cwtl
outsl
jb
sbb
dec
in
xchg
or
mov
pusha
fucomip
test
jnp
inc
test
or
out
cmc
push
or
or
push
cmp
cmc
sbb
lret
adc
or
sbb
iret
adc
pop
inc
repz
or
sub
iret
repz
cmpsl
mov
adc
and
add
or
dec
lods
and
mov
adc
xorl
pop
test
xchg
mov
out
ds
leave
mov
sub
andb
pop
ret
sbb
lahf
inc
cmp
es
ljmp
dec
mov
mov
dec
jo
adc
xchg
rorl
cs
sub
xchg
imul
pop
es
enter
sti
subb
ret
add
subl
hlt
sub
test
clc
sub
push
clc
sub
je
push
adc
xor
test
ret
cs
jl
add
push
leave
pop
rcl
test
pop
sbb
mov
dec
mov
dec
stos
cmpsl
bound
cld
mov
stos
jle
std
jno
sub
jns
aas
out
les
push
fnstenv
xchg
inc
push
pop
push
mov
test
mov
adc
sbb
lea
filds
mov
shl
test
and
mov
gs
pop
and
movsl
in
sahf
nop
mov
xchg
pop
hlt
imul
mov
test
jg
lcall
in
inc
jae
shl
loope
mov
push
mov
pop
mov
hlt
ljmp
mov
insb
rcrb
inc
add
je
xor
mov
fldenv
jl
imul
imulb
pop
cmp
xor
adc
rorb
scas
sbb
push
fistl
int3
fs
mov
ret
mov
pop
out
out
mov
xchg
outsb
mov
xchg
mov
lret
mov
sarb
int3
pop
pop
jl
fwait
adc
adc
lock
cmc
sub
jne
push
les
movsb
mov
ljmp
rcll
imul
xlat
and
jg
xchg
gs
sahf
or
dec
mov
adc
sbb
and
jg
add
push
jnp
ds
mov
addb
mov
mov
mov
pop
sub
dec
push
jns
jno
push
movsl
mov
cmpsl
mov
pop
mov
mov
cmpsb
push
adc
or
mul
mov
lods
lods
jge
push
fcomi
nop
cmp
push
xor
scas
dec
xor
aaa
pop
jns
aas
add
mov
inc
push
jge
jns
stos
test
jp
je
sahf
sbb
insb
mov
leave
mov
popf
mov
iret
sub
fisttpl
dec
hlt
inc
movsb
mov
lahf
adc
mov
dec
jmp
mov
mov
rcl
frstor
test
mov
lret
or
mov
jmp
mov
repz
leave
mov
xchg
xor
jnp
inc
arpl
je
jg
mov
loopne
cmp
leave
into
xor
mov
jnp
nop
scas
dec
mov
xchg
in
and
call
test
jae
ja
push
outsb
and
movsb
jp
and
data16
add
aaa
xchg
xchg
mov
mov
add
popa
inc
mov
push
in
je
inc
es
add
out
ret
xchg
sub
inc
enter
dec
arpl
xor
mov
repz
iret
nop
cmp
repnz
stos
push
sti
testl
loopne
call
xor
aaa
xchg
pop
lock
fildl
scas
jle
push
cmp
and
jmp
xchg
fsubl
and
cmpsl
test
adc
adc
stos
mov
ljmp
sub
in
mov
or
lahf
push
ret
cwtl
in
jg
cmp
or
mov
sahf
lods
in
leave
lahf
adc
or
or
xchg
pop
test
jg
pop
xor
test
daa
out
test
mov
enter
adc
sbb
lods
adc
pop
ljmp
push
mov
sub
ds
and
inc
ds
fbld
xchg
xor
adc
xchg
xchg
cmp
sbb
stos
scas
out
jle
lret
aam
mov
pushf
mov
sbb
dec
imul
mov
cli
xor
or
adc
pop
jae
push
cwtl
mov
ss
jmp
and
in
sub
lds
sbb
mov
fistpll
aad
jge
cmp
xor
or
push
lahf
mov
xchg
mov
or
call
jae
js
bound
insl
outsl
xor
cmp
scas
jbe
xchg
mov
cmp
or
shll
fwait
shr
jl
dec
pusha
enter
cmp
cld
jmp
dec
sarb
cmpsb
shl
and
push
or
or
das
insb
sti
push
clc
mov
filds
lock
jns
jecxz
push
jge
clc
lds
push
and
xchg
sbb
shrl
fwait
ret
sub
out
ja,pn
mov
addr16
mov
dec
out
js
xchg
rcrl
notb
ret
rclb
adc
inc
jnp
and
std
ss
ret
subb
adc
mov
sbb
gs
push
mov
notb
add
add
fmulp
imulb
mov
pop
sub
in
sbb
jge
mov
aad
scas
pop
jg
out
mov
sbb
rcrl
cmp
enter
fsubrs
mov
cwtl
add
mov
push
cmpsb
negb
mov
mov
jge
lcall
push
rclb
lods
fiaddl
aad
scas
fnsave
mov
shll
jmp
orl
stc
ds
lcall
adc
ds
xor
ss
jmp
push
xor
imul
in
lcall
loope
or
pop
cmp
mov
lds
jg
push
in
xor
mov
hlt
int3
stc
xor
dec
push
add
mov
mov
imul
push
jnp
fidivl
dec
push
jle
sub
movsb
fcoms
xlat
jl
pop
cwtl
jge
pop
sbb
lods
fs
sahf
int
dec
mov
sbb
xchg
ficoml
lret
mov
fidivl
es
outsl
sbb
jmp
ljmp
lahf
rcr
cmpsb
sbb
xlat
in
rcr
xorb
add
xor
add
mov
mov
inc
stos
lods
xor
push
das
push
cli
or
mov
dec
cld
ror
mov
std
inc
fwait
mov
aad
xchg
sahf
pusha
enter
dec
pop
ja
push
movsb
push
mov
adcl
js
mov
lock
lcall
adc
xchg
mov
mov
fwait
and
icebp
pop
xchg
mov
out
jg
mov
xchg
mov
cltd
jno
push
inc
cmpsl
dec
and
mov
jbe
mov
dec
hlt
call
mov
lods
push
lea
ljmp
ret
in
adc
ja
lods
xchg
jg
out
mov
mov
xor
fwait
imul
shrb
xchg
inc
insl
shrl
aad
ret
ficoms
push
shll
adc
push
fucomp
mov
adc
jmp
aam
mov
and
and
iret
xor
sbb
lret
js
sbb
shr
add
lret
adc
in
and
and
add
orl
xchg
into
mov
movsl
imul
leave
mov
jle
movsb
jbe
mov
push
cltd
push
inc
sub
gs
jle
fmull
ret
imul
adc
sahf
mov
dec
fwait
nop
add
lahf
push
mov
shrl
adc
aas
push
loope
js
dec
in
std
xchg
jmp
sub
fld
scas
or
stos
imul
jbe
adc
mov
mov
dec
inc
cmpsl
lock
andl
repnz
pop
ds
cmp
nop
neg
icebp
movsl
lock
in
or
adc
fdivl
sbb
jno
mov
popf
push
stos
cwtl
mov
adc
lock
inc
jl
mov
xor
popf
add
and
or
or
insl
loopne
int
push
pop
jle
jle
test
in
stos
and
pop
sti
aam
je
pop
push
sub
xor
pop
call
mov
mov
lcall
xor
pop
or
mov
lea
loop
fldt
push
adc
adc
push
add
push
ss
dec
xchg
mov
xor
adc
or
sbb
add
shlb
jle
jae
xchg
aam
fst
std
and
shlb
jnp
cld
mov
aam
cltd
pop
cmpl
dec
mov
pop
jae
mov
cmc
mov
scas
pop
lahf
lahf
bnd
mov
fxch
adc
xchg
sahf
dec
inc
out
sbb
or
cld
and
sbb
mov
inc
cmc
or
mov
mov
shr
aas
fwait
or
outsb
mov
jbe
in
push
xlat
mov
jo
dec
cmp
mov
mov
push
lahf
jne
orb
test
push
mov
lods
lock
mov
test
fldcw
fldt
iret
lahf
add
adc
inc
in
add
mov
jns
add
push
ja
mov
fstl
ljmp
jg
mov
cli
push
sub
add
dec
aas
sub
add
adc
hlt
mov
dec
mov
jbe
jns
cmpsb
popa
xor
gs
push
push
xchg
xchg
int3
mov
adcl
shrb
mov
pusha
xchg
mov
jbe
cmp
jb
imulw
add
pop
lcall
bound
sub
pop
mov
scas
dec
or
push
jle
xor
sbb
pop
loop
adc
shrb
leave
sub
push
xchg
test
daa
push
fsubrl
xbegin
mov
js
cld
jbe
mull
dec
movups
pop
jecxz
pop
inc
xor
xor
fs
icebp
or
jle
jge
xchg
pop
lods
lcall
rorl
xchg
mov
test
lret
inc
loop
outsb
lods
cmp
mov
aam
mov
popf
add
test
call
lea
cmpsl
mov
iret
push
bound
je
add
mov
cld
mov
ja
inc
stos
pop
add
sub
mov
jo
stos
push
ljmp
repz
clc
adc
imul
inc
adc
inc
push
pop
push
in
or
stc
xor
jnp
dec
xor
in
cs
pop
insl
scas
add
push
stc
stos
sarl
cmp
xchg
lea
addr16
push
jbe
hlt
pop
push
sbb
xchg
cmp
sbb
adc
mov
cmp
fsubl
movsb
xchg
enter
in
sub
jge
dec
js
and
sub
les
sub
pop
loopne
into
call
aaa
mov
jae
cmp
enter
imul
ret
xor
jb
out
add
add
ret
push
lods
jmp
pop
mov
fldl
lcall
into
lds
in
mov
xchg
add
es
test
call
insl
aaa
inc
sbb
je
mov
stc
jo
adc
push
outsl
cmpsb
jo
and
icebp
je
test
jle
pusha
mov
gs
xlat
inc
jmp
mov
paddsb
outsb
mov
jnp
sarl
add
add
fsubrs
jno
pop
jbe
inc
mov
stos
fisttpll
jecxz
cmp
adc
push
xor
scas
push
insb
mov
pop
loopne
int
test
jmp
jp
scas
dec
into
popf
adc
push
xor
fwait
cli
or
ret
jp
jb
xor
push
pop
dec
insb
xor
in
fstp
clc
test
dec
test
mov
mov
inc
mov
movsl
rolb
daa
cmp
cmp
int
push
dec
sub
add
lods
pusha
leave
in
cmc
movsb
dec
loop
lods
icebp
int
jno
aam
stos
adcl
mov
daa
cmp
repz
pop
insb
mov
cld
jmp
mov
dec
mov
loop
push
pop
fisubl
negl
inc
xchg
inc
jmp
mov
add
lods
cmp
rcrb
mov
test
popa
adc
mov
and
xor
lret
mov
into
mov
dec
pop
dec
ret
jno
inc
loope
and
dec
add
je
and
inc
jbe
pop
adc
cld
loop
jno
aam
xor
mov
sub
adcb
popa
ror
inc
jmp
jns
mov
pop
pushf
shlb
dec
mov
inc
sbb
ret
jmp
popa
xorl
or
ret
jecxz
call
lock
repz
pop
fdivl
repnz
inc
xor
fistl
je
or
mov
cmp
jecxz
fsubrl
fmull
lods
cmpsl
sbb
loopne
sti
arpl
adc
movsl
jnp
adc
adc
inc
mov
or
mov
jle
arpl
lods
into
mov
mov
xchg
stos
jno
dec
sbb
fdivrl
pop
ds
xchg
fdivs
adc
or
jg
adc
in
and
inc
insl
jno
inc
out
jmp
subl
clc
lea
add
xor
and
clc
lock
fisubs
insb
rcr
loope
pushf
adc
fcomp
sbb
repz
mov
subl
mov
test
ds
xchg
mov
fisttps
mov
adc
pop
hlt
inc
movsb
into
jge
sbb
fcoms
sbb
test
fdivl
inc
icebp
jle
jns
and
dec
fistpl
addr16
add
insb
cmp
or
cmpsb
cmpsb
gs
dec
pop
xchg
inc
push
jnp
push
xor
xchg
cmp
sub
movsb
lock
daa
cmpsl
cmpsb
pop
jbe
sahf
pop
loope
filds
roll
dec
arpl
fimuls
enter
or
adc
shrl
xor
out
mov
add
adc
or
jnp
push
add
inc
push
push
in
cmp
inc
ret
push
sub
lea
std
xchg
inc
leave
xchg
in
shll
jecxz
out
pop
sarb
call
sti
scas
mov
jp
jno
adc
popf
out
shrl
aam
and
adc
dec
sarl
enter
cmp
mov
int
mov
dec
out
test
xor
sub
sbb
and
or
jbe
mulb
add
insl
popa
mov
iret
xor
lea
fdivl
and
mov
push
movsl
mov
inc
xchg
push
out
jb
loopne
aad
out
std
dec
jnp
bound
push
pop
jle
xor
mov
loopne
jp
ja
adc
xor
inc
fnstcw
push
clc
fwait
stos
mov
xor
test
sub
xchg
cmp
dec
lret
and
or
lock
.byte
sbb
mov
and
cwtl
add
inc
mov
and
jnp
call
xor
test
inc
js
mov
sbb
outsb
scas
lcall
mov
pop
cld
outsb
or
adc
push
push
jae
outsb
fsubs
fucomi
xchg
dec
je
scas
add
mov
add
xor
fdiv
test
sub
repnz
mov
jmp
cli
adc
or
jle
stc
xchg
rcrb
aad
jg
int
test
lret
out
mov
push
mov
fwait
xlat
out
xchg
mov
fdivs
dec
cli
test
fwait
hlt
pop
mov
fisttps
mov
pop
movl
inc
int3
mov
movsl
repnz
mov
push
mov
fs
aam
and
inc
cwtl
sub
or
adc
in
pop
or
push
arpl
add
dec
aas
test
cmp
jae
stos
jns
adc
cmp
popf
loopne
xchg
cs
cmp
jbe
nop
lea
in
jne
pusha
ficoml
aaa
aad
mov
dec
pop
adc
test
jp
push
aas
pop
push
fildl
data16
dec
xchg
inc
add
sub
mov
sti
cmp
fildll
push
jne
lsl
or
or
xor
cs
insb
cs
or
push
and
scas
cli
lock
add
iret
mov
sbb
je
xchg
mov
and
nop
aad
test
xor
mov
dec
mov
mov
mov
shlb
dec
test
mov
pop
scas
add
inc
pop
mov
cmpsb
cmpsb
repnz
cmp
ds
push
push
leave
ds
sub
pushf
ror
jp
push
test
mov
std
aad
rorl
sarl
and
scas
xor
ret
adc
rclb
je
sbb
lret
ss
in
insb
mov
stos
les
mov
pand
std
pop
fldl
inc
lock
dec
cld
loope
dec
inc
mov
inc
cld
push
imul
sub
mov
mov
and
mov
call
add
rorb
or
pop
lods
lret
jne
inc
and
ret
xchg
jne,pn
sub
das
iret
mov
test
jnp
xchg
sbb
inc
push
add
movsl
aas
inc
adc
je
in
outsb
xor
xchg
fnsave
push
dec
test
test
ds
sub
hlt
push
adc
xor
sub
scas
lret
fisttps
cmp
push
pop
push
stc
lcall
push
push
cmc
push
aad
push
aam
mov
orl
jl
cmpl
mov
pushw
jmp
cmpsb
fistl
mov
loopne
xchg
inc
out
sub
lods
dec
mov
push
mov
xchg
and
outsb
lds
fcomip
aam
in
das
add
mov
or
into
repnz
and
pop
xchg
mov
dec
cld
cmc
xchg
lret
adc
aas
shlw
faddl
pop
xor
sbb
pusha
dec
add
dec
or
test
cmp
les
mov
rorl
mov
out
xchg
cmp
clc
dec
jb
aas
std
jmp
xchg
xchg
inc
mov
jmp
ret
and
cmc
pop
adc
xchg
stos
mov
es
ja
xchg
inc
push
out
pop
rorb
movsl
xchg
iret
mov
jno
jae
sar
add
or
jg
sub
add
dec
push
jg
movsb
outsb
mov
aas
addb
pushf
sub
in
loop
add
andb
fwait
rcrl
loope
repz
fdivrl
stos
lock
inc
push
cwtl
scas
hlt
push
adc
push
add
call
mov
cmpsb
cwtl
nop
popa
movb
pop
mov
sbbl
jecxz
add
stc
leave
movsl
mov
cltd
sti
clc
loope
sarl
aam
in
mov
mov
stos
pop
enter
test
bound
mov
lahf
sahf
xor
mov
xor
jo
xchg
js
xchg
push
es
adc
rcrb
lods
mov
nop
push
aam
pop
or
lea
das
mov
movsl
xor
mov
fstpl
adc
pop
push
idivl
fimull
push
cmp
mov
jg
xor
popf
sub
inc
xchg
cld
push
repnz
movsb
aaa
scas
aas
dec
push
inc
xchg
mov
push
into
cmp
or
movsl
mov
sub
cmp
in
xchg
mov
in
int3
cld
mov
icebp
daa
push
ds
cmp
mov
sub
fbstp
fwait
jmp
aas
push
imul
dec
or
lcall
adc
andb
add
push
lret
mov
sub
dec
adc
repz
sti
outsl
lods
dec
sub
fldt
push
push
in
imul
cmc
xchg
insb
subl
mov
call
rol
hlt
test
scas
in
dec
push
cld
add
mov
in
lret
pop
add
lods
jae,pt
cmc
lcall
jo
cmpsb
dec
jecxz
mov
notb
sub
iret
outsl
imulb
cmp
out
dec
enter
aaa
pop
adc
repnz
jo
xor
pop
mov
or
sbb
movsl
push
mov
pushf
dec
xchg
pop
lret
into
adc
ss
roll
fldt
adc
test
aad
mov
inc
cmpsl
cmpsb
data16
pop
xlat
jge
jbe
enter
cli
ljmp
aam
outsl
int3
and
cmp
pop
sub
adc
cmpsl
loopne
mov
rcr
dec
push
sbb
cmpsl
add
sub
es
rolb
mov
ret
lods
ljmp
mov
mov
dec
fs
xor
inc
push
in
dec
mov
out
jge
jle
and
add
repz
in
mov
ret
sbb
pop
add
arpl
movsb
neg
pop
xor
dec
shlb
divl
test
jae
dec
xor
add
andl
jmp
inc
subl
test
jg
rcr
xor
repz
sahf
loop
mov
int
mov
push
cmp
jg
jge
iret
or
test
inc
ret
and
es
in
out
mov
inc
mov
adc
add
stos
jl
push
cmpsl
xchg
push
repz
lods
shll
sahf
xchg
je
mov
xor
sub
int
mov
xchg
imul
loop
inc
je
movsl
lds
ja,pn
push
pop
lods
push
das
jge
dec
push
pop
add
ret
and
mov
popa
fimuls
mov
sbb
stos
in
dec
sbb
adc
enter
in
lcall
jbe
mov
mov
insb
sbb
adc
sti
test
jg
cmp
cmp
sub
outsl
std
mov
dec
mov
sbb
popa
sti
imul
incl
jne
cltd
push
sub
nop
int3
fmull
and
pop
imull
imull
mov
es
aam
aam
mov
scas
dec
add
lret
add
aad
dec
mov
xchg
push
outsl
dec
mov
bound
rcll
jmp
imul
dec
jmp
adc
in
mov
jge
loopne
mov
mov
mov
jb
cmc
scas
cmp
dec
cmp
bound
lcall
mov
stos
pop
lret
out
sub
cld
add
mov
test
pop
pop
or
cmpsl
inc
xchg
movsb
test
cli
adc
mov
xchg
cmp
stos
xor
push
jns
insl
or
xor
adc
cli
fdivl
notl
inc
fwait
push
imul
inc
aas
cwtl
int3
jae
xchg
ljmp
shll
inc
xchg
sub
popf
pop
test
shll
ret
xor
out
mov
into
in
pop
scas
adc
rclb
divb
test
lret
dec
sub
dec
push
in
test
jnp
inc
insb
sbb
or
push
sbb
stc
mov
lret
lds
push
xchg
fcoms
push
in
pop
push
cld
popa
mov
enter
jae
and
jp
loop
in
test
pop
pop
or
cmpb
inc
cltd
js
imul
add
std
lock
add
sbb
xchg
ds
and
jnp
push
pop
sbb
or
jns
sbb
stos
stos
add
xchg
lods
dec
mov
test
stos
outsl
cmp
mov
pop
cmp
mov
dec
add
adc
lds
mov
mov
sahf
adc
insb
lcall
data16
lret
pop
cmp
jl
jmp
cld
push
xchg
cmp
int3
dec
out
jecxz
das
jl
fsubr
out
test
mov
sbb
dec
decl
mov
jg
std
push
jne
push
repnz
pop
into
inc
push
jmp
push
decl
daa
inc
scas
inc
or
into
adc
sahf
xor
das
xlat
xor
mov
pop
jecxz
inc
or
jo
les
das
call
movsl
clc
lcall
iret
nop
sub
inc
scas
stos
fstpt
test
lock
add
aas
movsl
shrl
pushf
aaa
mulb
adc
dec
sub
cmc
cltd
xor
add
or
inc
pop
cmp
xchg
pusha
jne
pop
ljmp
popf
add
dec
insb
mov
les
mov
sub
push
test
lea
or
mov
lret
sahf
std
out
cmp
mov
lds
mov
lcall
stos
aaa
push
cmpl
int3
push
cmpsb
fnstenv
int3
ret
lret
es
enter
lahf
cmp
aaa
and
out
mov
out
es
adc
test
movsb
popf
mov
popa
push
movl
cmp
dec
lret
inc
mov
psubusb
dec
mov
movsb
loope
jbe
add
in
adc
push
test
inc
aas
mov
fcompl
dec
fs
cmpsb
arpl
add
cmpsb
in
push
imul
xor
xchg
pushf
mov
roll
sub
xchg
scas
addl
out
aad
lock
orl
in
dec
push
dec
orb
sub
mov
push
jo
mov
or
mov
arpl
mov
pop
popf
mov
addr16
inc
data16
in
push
aad
hlt
ret
pushw
inc
mov
cs
pushf
mov
imul
sbb
or
loopne
fwait
insl
and
jmp
jl
inc
mov
sub
mov
jmp
add
mov
push
test
outsl
movsb
push
idiv
in
sti
cmp
mov
aas
mov
les
dec
xchg
shll
mov
shr
xchg
push
mov
cs
daa
gs
dec
stc
test
loope
pop
fstpl
inc
les
and
inc
push
or
push
out
sahf
cmp
ficomps
ss
push
pop
lea
fsubs
jb
xchg
pop
shlb
ss
setbe
push
mov
mov
sub
or
repnz
add
or
xchg
add
jnp
scas
bound
cmpxchg
fbld
lret
xchg
add
ror
in
pop
ljmp
jle
and
sarl
sub
sbb
mov
loope
add
ljmp
inc
xchg
nop
xor
loop
inc
and
mov
sbb
mov
repz
push
repnz
cmp
xchg
and
nop
push
rcrl
scas
arpl
fs
lds
mov
test
xorl
xchg
xchg
mov
int
adc
gs
inc
aaa
js
sub
adc
sbb
inc
xchg
and
push
pop
ret
xchg
aas
pusha
sti
push
clc
gs
cmp
jge
and
out
movsl
pop
adc
cmp
addr16
inc
cltd
popf
repz
push
adc
mov
push
cmp
cmpsb
das
fiaddl
sub
fsubl
push
fistpll
aad
pop
add
jmp
ljmp
les
or
dec
jo
imul
push
das
adc
mov
loope
inc
cmpsb
and
inc
jno,pt
int3
sub
push
mov
adc
inc
sti
xchg
movsl
mov
scas
fdivp
dec
pusha
jg
xor
inc
mov
stos
sub
rclb
mov
in
mov
mov
stos
push
dec
cmp
scas
mov
sbb
jle
cmpsb
push
mov
js
popa
cmpl
jl
dec
mov
insl
cmp
and
add
jne
lock
je
mov
mov
mov
and
cmp
pop
mov
mov
lock
testb
outsb
call
int
enter
push
add
xor
sbb
push
add
add
cmp
shr
out
jo
imulb
ficoml
out
pop
push
adc
pop
jmp
icebp
dec
lahf
addr16
jne
jge
mov
sbb
cltd
inc
pusha
and
daa
jle
mov
xchg
aad
and
ficoml
lcall
jecxz
mov
pop
scas
xor
std
xchg
sub
sub
inc
push
rcrb
stos
mov
fdivr
inc
loope
xchg
les
int
cltd
insl
add
imul
push
mov
mov
pop
clc
jecxz
jecxz
test
sbb
cmp
mov
mov
mov
negl
pop
push
push
test
push
call
dec
call
clc
dec
inc
test
xchg
xchg
push
or
call
jae
in
adc
pop
fisubrs
rolb
sbb
ret
aas
ljmp
scas
dec
adc
test
push
xchg
jnp
cmp
jo
cmp
lcall
popf
jl
nop
and
lods
in
repnz
mov
clc
cltd
xchg
xchg
sbb
push
cmp
xchg
loop
cs
push
bound
add
lret
notl
sub
and
or
push
adc
cmp
adc
arpl
rcrl
adc
icebp
in
mov
xchg
mov
mov
outsb
fcmovbe
lcall
jecxz
pushw
negl
pop
jmp
and
add
cmp
jnp
popl
pop
pop
xor
call
das
push
rolb
es
mov
pop
mov
dec
pushf
adc
fisttpll
addr16
jp
adc
cmp
add
adc
cmp
loop
inc
nop
jnp
mov
sub
add
mov
bt
push
push
xorl
sti
shl
cld
xor
lcall
in
lods
xchg
mov
cltd
stos
stos
fdivr
lds
jmp
sub
sarb
pop
in
into
pop
and
cmpl
jnp
sub
test
adc
cli
jb
sbb
pop
shrb
mov
add
dec
push
xor
mov
movsl
bound
mov
xchg
and
push
ret
lods
clc
and
sbb
rcr
iret
mov
mov
sub
cmp
ds
out
test
out
je
pop
dec
xchg
fistps
pop
mov
cltd
popa
es
adc
mov
shr
les
mov
repz
adc
ret
xchg
xchg
loopne
pop
lcall
decb
mov
adcl
in
in
imul
adc
xchg
mov
addb
xchg
dec
scas
stos
or
aaa
pop
push
add
data16
repz
mov
adc
sbb
xlat
dec
jb
xor
dec
xlat
dec
repz
popa
add
and
outsl
out
mov
mov
mov
xchg
fwait
mov
movsl
mov
icebp
xchg
in
push
in
cmp
mov
mov
jbe
mov
rcr
pop
sbb
outsb
mov
xchg
sub
cmpsb
push
dec
gs
negl
in
adc
push
insb
xchg
adc
pop
pop
leave
lods
adc
scas
or
add
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
shrb
add
je
mov
push
mov
pop
mov
mov
xor
add
add
add
push
mov
pop
push
push
mov
pop
popl
xor
sub
mov
add
mov
sub
jne
call
lcall
std
repnz
movzwl
pop
movsl
sub
testl
cli
inc
inc
testb
adc
mov
outsb
fldcw
push
in
add
pop
cs
pop
or
sbb
add
andb
push
out
xor
cmpsl
mov
into
lret
mov
shrl
sub
cmp
nop
call
pop
sub
fldcw
ljmp
jb
xchg
inc
aaa
les
negb
add
cmpsb
lods
xor
int
lods
push
cmpsb
lock
cmp
fldcw
mov
and
dec
adc
cld
adc
packuswb
mov
clc
in
push
pop
arpl
mov
int
pop
fsubr
cld
call
adc
lods
out
or
arpl
xor
fcomps
lret
add
out
add
xorb
pop
adc
sarb
push
dec
std
fwait
movsl
adc
sbb
gs
xchg
arpl
bswap
sub
xor
fnsave
mov
or
adc
jp
fldl
in
dec
pop
xchg
stos
in
inc
int3
aad
xchg
es
call
adc
push
popa
dec
mov
mov
pop
in
xchg
sti
push
and
rclb
adc
jo
sub
insb
pop
cmpsl
dec
dec
in
in
inc
pop
les
shll
dec
and
sti
or
repnz
clc
mov
cbtw
shld
adc
pusha
pusha
mov
lcall
adc
add
inc
cmc
das
push
rorl
and
push
lea
insb
inc
adc
in
loopne
sbb
daa
cwtl
jp
jns
addr16
mov
in
nop
lcall
lret
shll
xor
push
pusha
int
js
rcll
fsts
add
push
pop
in
mov
cltd
and
outsl
push
pusha
sbb
aad
adc
add
insb
stos
mov
adc
xchg
push
sub
out
out
jle
mov
cmp
insb
push
pop
fwait
pusha
idivb
inc
iret
mov
mov
or
lock
mov
push
jp
xor
cltd
lds
cmp
pop
jecxz
jp
pop
dec
cltd
sub
mov
int
mov
in
test
pusha
xor
lahf
push
repz
pusha
scas
mov
popf
sbb
cltd
insl
pop
decl
insb
and
adc
sbb
scas
mov
xchg
std
mov
xchg
test
les
or
push
out
xlat
in
or
xchg
inc
fdivrs
mov
mov
daa
adc
push
sub
adc
pushf
jbe
or
xlat
add
dec
pop
in
add
sub
push
sub
adc
movsb
adc
sbb
push
enter
enter
push
int
xchg
xchg
mov
lods
iret
or
fsubr
aad
leave
sbb
pop
int3
ficoml
enter
addr16
mov
cmc
lea
xchg
jne
btl
enter
leave
push
push
leave
add
dec
enter
leave
in
dec
enter
or
and
dec
enter
notb
or
movsb
adc
sbb
fwait
mov
or
sbb
addr16
or
sbb
fsts
or
lcall
cmp
or
lock
xchg
test
lds
or
cmp
or
sbb
icebp
push
or
pop
add
push
enter
jae
mov
inc
dec
or
enter
dec
lcall
hlt
out
xor
add
or
lahf
cmpsb
xor
sbb
inc
int
xchg
inc
push
enter
sti
data16
add
nop/reserved
iret
fisubrl
jl
xlat
or
in
xor
add
movntps
push
enter
dec
lcall
out
test
les
or
dec
push
add
jl
sbb
mov
cld
aaa
xlat
push
sbb
push
jae
lea
enter
stos
sbb
cmp
leave
lcall
jle
or
enter
enter
enter
enter
dec
dec
jmp
mov
outsl
sbb
pop
jo
dec
push
xor
add
adcl
sbbl
in
mov
cmpsb
mov
mov
stc
xchg
jp
enter
pop
sbb
in
mov
inc
or
movsb
les
mov
push
dec
gs
inc
xor
dec
xor
add
xor
xchg
push
mov
sti
xor
ret
sbb
push
ret
push
dec
gs
inc
xor
dec
xor
add
adcl
sbb
ret
sbb
push
ret
push
dec
gs
inc
xor
dec
xor
add
adcl
mov
mov
stos
sbb
cli
or
mov
sbb
or
sbb
les
mov
push
dec
gs
inc
xor
push
bswap
popf
or
mov
or
fimuls
adc
leave
sbb
leave
rcrl
pop
dec
add
xor
add
adc
adc
imul
aam
loop
push
sbb
push
cmpsb
mov
mov
fnstenv
push
dec
push
movsl
jmp
enter
lret
sbb
enter
dec
inc
repnz
push
inc
jmp
push
enter
and
dec
add
loop
mov
enter
les
or
enter
adc
andnps
jb
push
enter
add
mov
enter
add
aaa
outsl
notb
or
lods
test
or
pop
dec
shlb
push
enter
mov
lret
or
adc
in
scas
test
or
adc
mov
jnp
ret
mov
and
lock
pop
ja
lock
ja
lea
mov
pop
cmp
cmp
dec
pushf
push
dec
dec
daa
sbb
dec
adc
jne
iret
pop
mov
pushf
push
sub
xchg
dec
xchg
jg
shl
push
enter
enter
enter
enter
enter
enter
enter
pushf
adc
or
test
or
sbb
push
enter
enter
enter
enter
enter
hlt
out
push
enter
enter
enter
enter
mov
mov
sbb
fs
es
or
lcall
dec
sbb
ret
adc
mov
fwait
aas
outsl
lea
adc
inc
mov
fisubl
lock
mov
and
mov
lahf
pushf
movsl
jl
or
aas
lods
outsb
pop
insb
or
fcmovne
xchg
push
sbb
dec
mov
lea
cmpsl
loope
mov
int
cmp
mov
popf
nop
push
in
xchg
fildl
xchg
adc
lds
mov
loopne
inc
cmp
jmp
cmp
dec
xchg
insb
jl
cmp
mov
mov
cmp
popa
ret
push
mov
mov
clc
aaa
or
into
inc
jne
push
or
jo
clc
popf
mov
jl
sarb
cld
xchg
mov
and
inc
stos
ret
add
cmpsb
mov
add
dec
mov
mov
es
inc
and
rcrl
icebp
sbb
inc
shlb
int
and
in
mov
fadds
in
ret
ret
xchg
pop
aaa
aas
int
pop
inc
dec
rorl
in
xchg
sub
and
ficompl
mov
add
cmp
cmpsl
stos
rcl
stc
lods
adc
sub
pusha
rolb
int3
pop
jmp
ljmp
rclb
sub
bound
mov
shlb
das
enter
inc
popa
test
xchg
adc
pop
stc
gs
inc
pusha
push
cmp
fildl
jbe
adc
pop
sub
mov
loopne
fidivl
xchg
push
mov
aas
pop
and
iret
push
mov
ljmp
push
ja,pn
dec
jb
ss
mov
ljmp
lahf
cmp
xchg
jnp
sahf
inc
scas
cmpsb
xor
dec
iret
repz
sahf
mov
inc
and
or
ljmp
xchg
daa
mov
popf
dec
cmp
pop
dec
arpl
pop
xchg
shll
xchg
pop
js
nop
sti
in
fidivs
movb
mov
cmp
push
dec
mov
jb
wbinvd
imul
lea
adc
cld
movsb
scas
mov
pop
xor
adc
lock
cmpsb
add
fnsave
addl
ds
lea
test
sbb
or
setl
mov
fldt
insl
pushf
enter
sub
xchg
cwtl
xchg
mulps
jmp
jge
push
push
mov
sbb
rcll
cwtl
repz
sub
int3
mov
enter
pop
dec
lds
pop
popa
add
mov
das
and
out
int3
mov
adc
mov
inc
push
ret
inc
popa
add
add
and
add
add
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
sbb
add
pop
add
sbb
pop
add
sbb
pop
add
sbb
pop
add
sbb
pop
add
sbb
pop
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
pop
add
add
add
sbb
add
jecxz
pop
add
add
add
add
addr16
insb
outsl
jae
dec
gs
add
inc
gs
gs
arpl
popa
jo
add
add
fs
imul
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
es
add
add
es
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
js
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
dec
add
add
sub
and
dec
add
add
popa
add
add
add
add
jns
jae
je
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
xor
mov
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
lock
add
add
add
incl
add
js
add
add
pushl
add
ja
cld
int3
pop
or
add
cmp
inc
or
ja
or
inc
or
pushl
addb
js
xchg
or
les
or
mov
les
add
jl
int3
les
add
jl
int3
les
add
jo
add
add
or
ja
js
add
xchg
ja
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
lock
add
decl
incl
incl
incl
clc
mov
incl
add
add
mov
add
jo
jo
lock
ja
addb
int3
int3
inc
ja
mov
add
add
ja
addb
int3
int3
inc
pop
jo
js
mov
add
inc
inc
jo
ja
ja
ja
mov
inc
inc
adc
decl
int3
add
inc
mov
mov
or
inc
add
add
add
or
incl
add
mov
orb
ja
inc
mov
ja
cmpsl
mov
addb
add
push
mov
add
mov
inc
testl
jo
int3
int3
int3
testl
jo
int3
int3
int3
testl
or
int3
int3
testl
or
int3
int3
int3
testl
int3
int3
int3
int3
int3
testl
in
int3
int3
int3
int3
testl
in
int3
int3
int3
int3
testl
int3
int3
int3
int3
int3
testl
add
add
add
mov
add
add
or
mov
mov
mov
add
add
or
ja
ja
ja
ja
mov
add
add
add
decl
add
or
ja
ja
ja
clc
add
add
add
add
mov
sarb
sarb
pop
rcrb
pop
rorb
inc
add
pop
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
addb
pop
ret
pop
loop
add
repnz
pop
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incl
add
incl
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
sub
add
add
add
add
out
mov
inc
and
dec
pop
and
stos
jae
add
cltd
push
leave
sub
pop
mov
sbb
lods
enter
dec
pop
out
cmp
repz
test
stc
pavgw
hlt
fldcw
icebp
sub
push
jno
xor
push
cltd
fildl
push
inc
enter
outsl
inc
mov
pushf
inc
add
jae
test
es
jg
movsb
fs
pop
cltd
sahf
cmpsb
das
int3
adc
add
cltd
jb
out
inc
push
pop
pop
stos
sti
hlt
fdivs
jb
je,pt
cmp
js
mov
insl
addr16
lods
push
dec
addr16
icebp
xchg
insb
jnp
ret
push
or
cmpsl
or
fsubrl
add
mov
xor
jp
adc
jbe
mov
xchg
push
cs
mov
sti
adc
or
add
mov
jl
xchg
xor
mov
mov
sub
repnz
repz
pop
dec
xchg
cltd
repz
push
mov
iret
jne
fisubl
cmp
int3
add
sub
xor
sub
lock
xor
and
sahf
cli
mov
cwtl
sarb
clc
xchg
push
adc
fwait
ret
cld
pop
jl
and
loop
stc
cmp
pop
jae
jb
leave
call
cld
and
mov
jns
pushf
push
in
aas
jnp
out
cli
push
push
into
ret
lock
push
stos
daa
sub
cmp
imul
clc
fidivrl
inc
pushf
pushf
fsubs
mov
rdtsc
adc
jnp
xchg
sbb
xchg
fwait
push
rcl
cwtl
fistps
jmp
jl
movl
pusha
cwtl
call
xchg
adc
dec
push
gs
or
mov
dec
inc
cwtl
js
mov
xor
stos
mov
push
lahf
pop
pop
jle
sub
xchg
cmpsb
cltd
cmp
bound
adc
in
test
and
pop
clc
jle
cmc
cld
mov
sqrtps
movsb
aaa
sbb
mov
lcall
cltd
int3
dec
lods
lods
ret
pop
cs
dec
mov
int3
rcrb
ss
cmc
fidivl
pop
in
lods
cld
test
and
add
lahf
mov
xchg
jecxz
scas
fwait
mov
cmpsb
aad
incb
aad
sarl
dec
repz
das
out
mov
pop
push
cmpsl
sub
adc
fnstenv
xor
arpl
mull
stc
and
adc
pop
mov
pop
xchg
lret
sub
je
fstp
xchg
mov
mov
ljmp
lcall
xchg
inc
jecxz
xchg
xchg
xchg
adc
adc
lcall
cmc
dec
jle
mov
outsb
pop
jecxz
push
out
or
push
inc
das
je
loope
push
insb
mov
shrl
mov
add
inc
lods
jmp
xchg
cmp
mov
sub
mov
ljmp
adc
mov
inc
hlt
loope
lcall
xor
fwait
mov
and
lret
repnz
rcll
addr16
lahf
pusha
fstl
pop
push
nop
lods
std
imul
sbb
lods
mov
pop
jmp
repnz
ja
gs
cmc
ds
cmp
add
jns
stos
cmp
lods
add
mov
mov
movsb
xorb
sub
shl
add
or
in
out
imul
or
je
mov
ljmp
arpl
rorb
aas
int3
into
jge
icebp
call
cmp
test
out
xchg
scas
das
push
ja
repnz
repz
std
push
ljmp
cmp
call
inc
ror
add
jb
sub
rcll
das
sbb
notl
cmp
data16
out
mov
jns
test
cmp
mov
lret
mov
out
aam
lock
shlb
push
sbb
mov
push
jne
jmp
push
imul
mov
ljmp
popf
mov
mov
aam
xor
push
dec
mov
xor
jbe
mov
hlt
aaa
rorl
orb
lret
cmp
mov
jno
lret
xor
sahf
dec
insl
pop
mov
mov
cmpsl
mov
sbb
mov
xor
movsb
push
dec
xlat
push
xchg
out
pop
loopne
int3
scas
xchg
add
les
jae
icebp
inc
test
xor
in
jno
daa
ret
popf
aas
repnz
sub
cmp
sub
pop
int
mov
sti
mov
pop
lods
pop
xchg
dec
add
fwait
pop
notl
adc
movsl
push
mov
es
and
jle
xchg
mov
mov
inc
cmp
jecxz
and
pop
dec
jmp
test
sbb
jecxz
inc
jmp
int
push
rorl
hlt
out
push
je
out
insb
loop
or
ds
and
bound
addr16
aaa
out
idivl
leave
dec
cmpsl
xchg
push
ja,pn
xchg
les
addb
lea
sub
xchg
cmp
mov
xor
test
loope
dec
out
roll
and
into
imul
ja
fstpl
dec
mov
jmp
mov
lret
add
fiaddl
les
out
jecxz
jne
add
cmp
out
nop
les
xor
or
mov
push
out
mov
pusha
xchg
popf
lret
fisttpll
mov
in
add
push
fsub
or
mov
stos
test
dec
and
cwtl
stos
mov
addr16
xchg
test
bsr
jnp
cmp
jg
insb
cmc
outsl
jge
mov
sarb
cmp
xchg
adc
mov
sub
shll
lret
mov
call
hlt
xor
dec
push
inc
cmp
out
jecxz
jg
outsb
or
jp
cmp
xchg
out
stos
mulb
and
icebp
out
mov
sub
cmpsl
fists
jne
pop
lock
sti
mov
mov
cmpsb
cmp
paddw
lahf
scas
sar
cmpsb
andb
push
push
sbb
xor
cmp
cmp
movsl
adc
fcompl
in
cmpsl
dec
outsl
push
xor
pop
sub
dec
dec
mov
fbld
mov
mov
cmp
xor
lret
add
stc
mov
xor
mov
bound
dec
incb
or
in
lret
out
inc
pop
xor
rcll
ret
shl
sub
fimull
fdivl
sbb
int3
std
fwait
sub
push
jns
jnp
popf
fdivrl
dec
mov
int3
inc
mov
pop
push
pop
inc
xchg
dec
popf
and
daa
fxch
outsl
jecxz
movsl
mov
mov
mov
movsb
mov
lahf
add
add
sub
test
out
push
ret
sbb
sub
rorl
jmp
cmp
loope
mov
mov
mov
sbb
mov
mov
leave
pop
call
push
std
ror
fcoms
push
pop
pusha
lock
push
imul
pop
and
es
xchg
loope
or
inc
bound
push
les
orl
inc
push
push
bound
cmp
pmullw
hlt
mov
dec
lods
jg
rorl
xchg
lcall
fnsave
xchg
xchg
repz
negb
invd
out
loop
jl
dec
jmp
mov
pop
sub
dec
xchg
hlt
add
jle
mov
stc
xor
lea
and
daa
outsl
fwait
xchg
mov
dec
clc
shlb
ja
in
lahf
add
jne
jg
lds
addb
scas
cmp
pop
pop
scas
xchg
jmp
cmp
pop
sub
lcall
ret
and
sti
icebp
fstpt
push
gs
out
inc
mov
sub
movsb
nop
ljmp
mov
inc
inc
mov
jl
add
sbb
mov
ficompl
mov
mov
imul
cmp
xchg
out
stos
mov
imul
mov
jmp
insb
inc
xchg
jmp
dec
inc
cmp
outsb
cmp
push
adc
xchg
sub
ja
xchg
pop
stos
or
cltd
adc
mov
xchg
inc
push
mul
popf
and
and
outsl
mov
mov
lods
sahf
inc
add
pop
pop
push
lea
jmp
out
sub
push
mov
mov
mov
loopne
mov
pop
dec
insb
mov
and
mov
stos
push
dec
das
and
push
jns
fcmovu
mov
xlat
repnz
and
lea
jno
mov
fcmovne
mov
jb
out
cmp
test
lea
push
in
mov
xor
enter
out
adc
pop
iret
sub
rclb
mov
jp
or
int3
pop
cmp
cmp
cmp
cwtl
sahf
mov
cmp
inc
ss
adc
js
add
jmp
and
mov
push
das
pop
sub
je
pop
repz
shrb
sbb
adcl
and
push
jl
dec
and
in
dec
inc
lods
mov
fsubs
test
movsl
sub
rcrb
jle
fisubl
or
pop
mov
hlt
push
push
inc
clc
inc
pop
or
mov
dec
cmc
rcr
add
push
std
pop
push
iret
test
mov
repz
rolb
out
adcl
dec
jb
jl
imul
xchg
or
mov
lods
inc
mov
sub
pop
je
pop
jb
sub
mov
mov
pop
int3
push
cmpsl
addb
xchg
shrl
pop
sti
ja
pop
aad
xor
jp
xchg
leave
rclb
pusha
insl
in
rclb
into
js
xchg
pushf
ret
or
test
and
enter
and
gs
inc
xor
mov
movsb
icebp
mov
outsl
imul
lods
xor
into
arpl
out
adc
push
push
idivb
ret
sbb
in
ret
adc
push
in
maxps
cmp
adc
hlt
sbb
pop
into
data16
fadds
sti
popf
loopne
pop
dec
je
sub
aas
inc
mov
cmp
and
and
and
je
pop
jnp
or
mov
inc
insl
mov
jno
sub
mov
cltd
test
repz
pop
sub
aam
xchg
add
adc
push
xchg
in
pop
ret
or
movsb
ds
mov
out
insb
push
in
sub
cmpsb
pop
add
aam
push
daa
rcll
aad
bound
lods
cmpsl
repnz
scas
xor
xchg
int3
rorb
fisttpl
pop
es
sbb
add
repz
movsl
cmpsb
xchg
stos
sarb
mov
sbb
push
xchg
and
add
lret
sarb
aad
loopne
insb
shll
or
cmp
pushf
push
sbb
sbb
sub
sub
dec
cld
out
lret
jmp
mov
sahf
inc
cmp
lcall
push
movsl
push
pop
out
cmp
mov
mov
out
dec
cmp
dec
sub
stos
sub
mov
push
pop
xchg
cmpsb
inc
pop
sar
adc
dec
nop
inc
and
cmpsl
adc
adc
mov
sbb
lret
jno
xchg
ss
in
mov
insl
mov
adc
in
sarb
pop
pop
loope
scas
pushf
pop
push
cmp
in
push
or
clc
or
cmp
inc
adc
inc
test
mov
call
mov
int
ret
mov
icebp
std
adc
lods
cmp
imulb
aad
xchg
pop
das
inc
pop
mov
sbb
pop
int
cld
ffreep
lret
sub
sub
adc
lds
sahf
repz
inc
cli
mov
adc
dec
clc
idiv
dec
hlt
icebp
jbe
mov
inc
adc
pop
lods
add
in
aas
sbb
movsb
inc
adc
lods
daa
xor
xchg
dec
adc
cmpsl
cmpsl
clc
mov
ret
mov
adc
adc
inc
fistl
insl
mov
jbe
aad
out
hlt
mov
jo
cltd
jns
icebp
add
sub
adc
jg
or
popa
imul
sbbl
fidivrs
sub
enter
jne
roll
in
sub
push
cmpsl
pop
aaa
mov
adc
adcb
mov
in
out
xor
jnp
movsl
cmpsb
cltd
aaa
xor
mov
shrl
lods
dec
dec
jecxz
xchg
int3
and
ret
cmp
bnd
mov
jle
xor
and
adc
pop
mov
leave
mov
dec
daa
mov
mov
loopne
xlat
dec
jnp
subl
ja
xor
mov
andl
adc
cmp
push
xor
test
push
in
stos
jne
push
inc
add
scas
xor
mov
imul
in
dec
cmpb
mov
rorb
lock
aad
idivl
in
adc
ret
leave
or
aam
cmp
xchg
pusha
add
stos
push
mov
jg
jecxz
lcall
addr16
push
sbbl
xchg
es
sub
rolb
pop
push
inc
inc
cmpl
push
jle
xor
test
sbb
add
lods
inc
orl
cmc
or
lock
sbb
sbb
mov
test
push
js
std
mov
sarl
and
cmc
dec
sbb
jno
inc
daa
add
and
sbb
push
pmaddwd
add
dec
mov
fists
xchg
cmp
cwtl
add
movsl
xchg
les
int3
shll
inc
iret
jno
lods
and
fadd
shrb
dec
cmpsl
std
test
sbb
sti
push
push
or
test
sbb
mov
roll
push
jbe
sahf
lret
adc
mov
jae
push
mov
push
in
in
outsb
mov
in
jle
or
lods
cwtl
in
mov
push
insl
push
mov
sbb
enter
adc
mov
out
test
push
pop
mov
pop
inc
and
hlt
hlt
dec
ret
aad
xor
mov
adc
lcall
lret
nop
fcmovbe
mov
mov
push
test
jnp
repnz
pusha
mov
inc
adc
aam
ficompl
jmp
xchg
add
add
test
loop
cmpsl
xchg
xlat
ret
mov
and
lods
push
js
lcall
cmp
or
fwait
inc
push
or
mov
xchg
mov
movsl
push
lcall
xor
shlb
xchg
sub
aad
adc
ret
fcmovnu
sub
scas
ret
arpl
adc
xchg
mov
pop
or
cmc
shrb
add
dec
jge
repz
aad
mov
cli
mov
push
sbb
sbb
add
int
jg
pop
or
icebp
jbe
loope
mov
jl
out
sub
mov
out
jl
inc
mov
mov
rcrl
sbbb
gs
xchg
jg
fs
call
mov
xorb
mov
adc
push
lcall
xor
dec
sbb
push
and
xor
sub
lahf
add
dec
jae
adc
push
aaa
mov
aam
imul
push
lods
xlat
ja
and
ds
lcall
out
ljmp
scas
jno
lret
mov
scas
enter
xlat
jl
inc
bound
leave
add
outsl
push
and
jp
call
and
fistpl
cmp
lret
arpl
cmpsl
nop
lcall
add
stc
add
cwtl
sbb
mov
dec
jmp
dec
aad
inc
clc
movsl
inc
loop
mov
xchg
jge
lds
lret
cmp
js
mov
repz
lods
dec
xchg
xlat
add
es
mov
das
ja
into
push
cmp
jle
cld
out
int
xor
mov
mov
call
xchg
and
in
std
addr16
jne
fs
stos
cmp
mov
and
lock
scas
adc
pop
jmp
roll
cli
mov
int3
sub
in
movsb
gs
cmp
stc
lods
mov
jns
ss
incb
cmp
stos
sbb
inc
xor
insl
es
cmp
push
sub
arpl
mov
mov
sub
stos
jns
push
sub
in
fs
adc
loop
loop
sbb
sub
fnstcw
cs
inc
mov
dec
mov
jae
sti
push
adc
push
and
xlat
ret
xchg
jnp
push
ficompl
mov
aad
or
pop
cmpsb
or
call
cmpsb
adc
out
out
cmpsb
stos
mov
dec
xchg
adc
pop
push
xor
inc
mov
lea
icebp
sbb
out
xor
orl
sti
lea
and
cwtl
out
lds
jno
xor
rcl
xchg
pop
loope
leave
rclb
cmc
imul
ss
inc
mov
mov
bound
push
adc
iret
cmpl
inc
hlt
xor
fsubr
stos
loopne
mov
fsubrl
scas
stos
cmpsl
adc
sub
xchg
sti
xor
stos
mov
jmp
inc
add
shrl
out
pop
push
mov
lret
cwtl
sarl
ficoms
mov
lods
mov
insb
mov
decb
adc
mov
ds
cmp
push
cmpsb
sub
inc
cmc
repz
pop
out
imul
add
shr
pop
mov
mov
loopne
dec
dec
pop
mov
orb
xchg
insl
hlt
les
sbb
inc
sbb
mov
daa
pop
leave
popf
imul
pop
dec
imul
xor
inc
fs
mov
inc
daa
xlat
mov
lea
sub
xchg
cli
xchg
sub
inc
hlt
ds
into
inc
sbb
xchg
fcmovu
jecxz
icebp
movsl
inc
repz
test
mov
push
fldt
lea
je
decb
movsl
push
inc
jp
jo
mov
lods
fdivrl
mov
mov
push
cmp
mov
jl
out
push
stos
xlat
lret
cmp
pushf
add
jno
fwait
or
jbe
jno
xlat
bswap
sub
data16
inc
test
jmp
mov
cmpsb
add
xchg
lret
mov
push
int
jg
xchg
lahf
mov
jl
pusha
and
sub
push
pop
dec
jo
and
mov
jnp
pop
jns
sbbb
jge
call
mov
add
ja
rcr
jmp
stos
iret
jg
rorb
sub
adc
mov
or
ret
mov
mov
push
inc
jge
or
mov
push
ret
cmp
adcb
cmc
adc
fs
pop
dec
cmpsl
push
faddl
dec
sbb
xor
dec
enter
xor
jae
push
sbb
mov
push
pop
inc
call
in
sbbl
mov
push
mov
div
pop
icebp
pop
mov
fisttpll
cmp
cltd
sub
std
cmpsb
xchg
dec
mov
xchg
lods
xchg
sbb
lods
sub
imul
push
sbb
mov
out
mov
xor
fstpt
lret
mov
mov
ljmp
fs
loopne
jle
imull
jae
jmp
and
jmp
mov
mov
loope
push
xor
pop
pop
xor
outsl
and
mov
adc
movsl
in
pop
sbb
inc
inc
cmp
cmp
jecxz
popf
sub
or
movsl
xchg
dec
mov
in
stos
cwtl
pop
ja
popf
fs
inc
add
xor
inc
xchg
mov
lret
ljmp
cld
jnp
outsl
test
jnp
int
mov
in
divb
and
shlb
mov
mov
push
xor
insb
sbb
dec
enter
mov
mov
push
jp
sahf
ss
or
jmp
addr16
dec
dec
add
fs
cmpsb
js
repz
lret
aas
fisubl
push
inc
push
push
inc
mov
pop
repz
xchg
mov
and
repnz
dec
mov
andb
xchg
dec
jg
pushf
cmp
add
mov
push
xorl
call
jo
out
push
push
daa
sub
ds
dec
sarb
push
jp
xor
loope
pop
mov
xor
call
in
jmp
push
mov
fcmovu
test
insl
cmpsb
xor
adc
pop
insb
cmp
jne
add
pop
mov
int
sub
addr16
mov
mov
inc
sbbl
and
sub
fnstcw
sub
xchg
sub
out
and
mov
cmp
pop
inc
cld
xor
sti
adc
jb
lods
jno
jbe
popa
lods
sarb
cmp
jmp
add
loopne
shlb
sbb
iret
out
lods
inc
insb
test
mov
push
movsb
insb
sbb
loope
out
mov
push
not
sub
in
arpl
sub
add
addb
out
sub
repnz
add
cld
or
testl
ffree
and
jle
fsubl
lock
push
mov
push
out
test
push
sahf
cwtl
xlat
push
fidivrl
aas
imul
jg
ljmp
dec
lahf
dec
add
sahf
xchg
lds
rclb
push
or
push
inc
dec
cwtl
adc
and
das
jmp
rorb
cld
jp
insb
cmp
jecxz
pop
mov
jmp
dec
mulb
xchg
dec
cmpsl
sbb
mov
stos
push
mov
rcrl
mov
stos
push
std
mov
shrl
ret
mov
fstp
and
dec
push
mov
jle
mov
gs
jle
leave
or
fistpl
cmovl
pop
push
cwtl
xchg
pop
push
fisttpll
pop
inc
push
xlat
xchg
jmp
mov
icebp
rorl
mov
test
imul
sbb
test
pop
in
xchg
xor
sbb
sti
dec
pop
test
adc
inc
cmp
lcall
out
sti
popa
pop
mov
inc
mov
shlb
cld
fwait
mov
sub
fyl2xp1
out
addr16
test
adc
xor
xchg
popa
sti
outsb
cmpsl
lods
push
pop
pop
xchg
mov
adc
sub
pop
xor
xor
out
lahf
cmp
jecxz
dec
push
xchg
test
push
mov
cmp
xchg
cli
xchg
adc
xor
int
es
adc
in
aam
punpckhdq
int3
insb
scas
out
cld
xor
stc
mov
cmpl
cmp
cmc
add
out
movsl
lcall
inc
test
jge
push
stc
scas
xchg
shl
scas
mov
faddl
subb
mov
jne
jle
jl
jmp
xlat
stos
jnp
bound
dec
pop
in
ja
mov
and
mov
add
mov
push
dec
mov
imul
cmp
test
cmp
jg
or
pop
xchg
mov
shl
shl
in
and
mov
pop
lods
add
shlb
push
mov
popa
loope
jg
dec
movsb
add
pop
outsb
jle
aad
or
cmpsb
repnz
test
cmp
pop
sbb
enter
or
cmp
inc
lods
mov
xchg
xchg
aad
not
xor
sti
hlt
jno
cmp
je
adc
lds
sub
mov
add
or
push
test
fcmovnbe
inc
lcall
push
mov
arpl
sub
pop
sarb
in
out
test
mov
hlt
push
out
push
das
sbb
pop
xchg
jle
fcomps
inc
aam
out
fs
sbb
or
or
int3
les
outsl
in
inc
sti
sub
vpunpckhbw
xchg
mov
fs
pusha
inc
test
movb
retw
lods
aaa
cmp
sbbb
pop
int
xor
adc
mov
mov
decb
mov
xor
mov
ja,pt
es
into
pop
and
repz
aaa
cmp
cli
dec
and
je
les
mov
fimuls
mov
cmpsl
insb
outsl
mov
fbld
movsl
ror
push
loope
push
mov
push
pop
fidivl
fidivl
mov
xchg
loop
gs
outsb
jecxz
loop
std
xor
mov
enter
mov
test
lahf
inc
or
popa
dec
inc
adc
gs
fistpll
out
mov
xchg
outsb
jecxz
pop
daa
outsl
push
shll
mov
cs
mov
mov
inc
aas
icebp
push
in
pop
inc
out
inc
insl
imul
xlat
popf
iret
daa
mov
ss
cs
fcomps
test
xchg
jg
data16
push
jne
fcomps
int3
mov
xor
loopne
sbb
cmp
clc
int3
rclb
rcr
shrl
sysexit
es
testl
mov
xor
sbb
fldcw
pop
xchg
jae
mov
pusha
movb
jle
or
jne
sub
mov
jmp
cwtl
ret
mov
cltd
inc
loop
xor
xchg
jmp
fsubl
movsb
ficoml
test
mov
pop
or
jb
or
insb
inc
neg
in
mov
in
xchg
fdivrl
or
repnz
sbb
imul
lret
jo
repz
fcoms
out
cmp
jns
cmpsb
mov
cmp
inc
or
cld
mov
mov
push
int3
imul
dec
xlat
je
inc
fcomps
daa
adc
and
inc
xchg
jecxz
lret
cli
inc
cli
loopne
sbbl
fcoml
or
mov
sbb
or
sbb
leave
roll
add
mov
pop
adc
sahf
mov
mov
out
test
and
jmp
mov
in
mov
mov
sbb
aam
andl
lret
shll
lods
dec
iret
out
adc
xchg
sbb
jnp
cmp
sbb
add
jecxz
fmull
in
ja
mov
pop
add
arpl
or
imul
insb
push
aaa
push
cs
fildll
dec
pop
orb
jecxz
inc
cmp
out
push
js
mov
ja
push
or
repz
jmp
fs
adc
and
cld
insl
into
cmp
mov
out
in
out
and
or
roll
push
cld
jmp
loope
or
fists
ffreep
mov
cmp
rolb
fld1
fcmovb
mov
test
jecxz
arpl
pop
sar
sbb
lret
icebp
scas
adc
scas
jecxz
aas
and
aam
ret
pusha
mov
iret
mov
add
stos
mov
push
xor
out
jne
mov
pushl
push
cmp
push
dec
mov
nop
xchg
push
mov
call
fnop
or
sbb
xchg
jbe
cmp
mov
dec
ja
adc
pop
imul
lret
mov
cmpsb
pop
fs
push
pusha
ds
stos
or
rcrb
lret
outsb
nop
inc
mov
inc
cltd
or
dec
cs
lds
hlt
jns
jecxz
push
xor
jns
jge
xor
inc
mov
scas
ret
cmpsb
in
rcl
sub
fdivrl
dec
inc
dec
push
xor
adc
add
mov
add
jle
adc
ret
adc
pop
mov
pop
aad
pop
leave
sarb
insb
mov
bound
addl
ljmp
jnp
cmp
mov
fsubl
jmp
lock
mov
repz
cmpsl
loope
cmp
or
xor
js
inc
call
scas
test
lcall
daa
add
loope
aas
loope
cltd
sub
bnd
lods
xchg
and
xor
gs
mov
sarb
add
add
fwait
icebp
mov
jge
mov
inc
mov
pop
les
mov
imul
push
test
dec
jo
inc
lods
mov
xor
popa
and
mov
or
push
mov
repnz
lock
adc
cwtl
jae
outsb
jg
jp
lret
cmpsl
pop
in
jmp
dec
add
mov
xlat
outsb
and
mov
stc
es
addb
outsl
fs
mov
repnz
enter
pop
pop
pop
sar
leave
stos
pop
mov
cmc
fucomp
outsl
mov
loop
jle
dec
mov
dec
xchg
pop
sbbl
inc
pusha
int3
jb
xchg
inc
and
pop
stos
push
iret
pop
ja
scas
lret
repz
shll
xor
cmpsl
and
adc
push
outsb
xchg
insl
jle
cmp
pop
jmp
js
lods
test
push
jl
sub
pop
test
cwtl
jbe
outsb
or
dec
adc
movsl
lret
mov
lds
xor
or
add
ret
incl
or
sub
fwait
out
dec
xchg
inc
cld
pop
lret
stc
lods
into
xor
data16
movswl
ljmp
push
sub
sub
hlt
dec
jns
lods
shll
xor
push
inc
insl
fdivl
mov
and
sub
loope
pop
insl
inc
div
mov
jle
in
xchg
mov
inc
je
imul
jnp
pop
mov
icebp
fdiv
test
jmp
shr
je
or
dec
scas
out
cmpsb
add
xor
sub
xchg
in
and
pop
sbb
xor
dec
int
mov
jl
mov
out
push
xchg
or
pop
push
push
jae
arpl
xchg
mov
add
and
and
pop
and
dec
cld
sti
push
test
sbb
lods
not
dec
sbb
fcoml
js
mov
inc
pop
jo
dec
cmp
in
fld
mov
push
movsl
xchg
and
scas
cmp
cltd
xor
int3
push
in
sarl
add
popf
jp
inc
mov
inc
adc
mov
ja
scas
add
mov
popa
sub
jb
mov
mov
gs
push
in
repz
xchg
lcall
push
jmp
jl
rcrb
shl
pop
fwait
pop
xchg
push
scas
xchg
enter
nop
imul
outsb
sub
leave
scas
adcl
in
mov
enter
adc
ljmp
insl
add
idiv
push
cs
jle
mov
popa
push
push
inc
sub
icebp
lds
cmp
push
aaa
push
push
mov
js
mov
jmp
xorl
add
mov
scas
sbb
sbb
nop
xor
out
sbb
fcompl
loope
dec
fisttpl
lahf
mov
movsb
push
ret
out
into
xchg
pop
sbb
dec
fs
loope
push
inc
adc
or
sbb
cmp
pop
xchg
pop
add
jg
sub
insl
xchg
push
out
adc
pop
push
rcll
adc
or
inc
sti
stc
fld
sbb
jecxz
cmc
outsw
out
push
cli
rorb
scas
push
dec
mov
cmpsl
ficoms
dec
jp
push
aad
popa
pushf
enter
cmpsl
jno
add
sub
cmp
test
jnp
sbb
xchg
jnp
mov
test
and
dec
repz
dec
push
mov
push
addr16
cmpsb
sbb
cmp
in
cli
test
imul
and
pop
fidivrl
jp
bound
aaa
pop
cmpsb
repnz
ficompl
sub
or
fsubrs
push
stos
mov
pop
mov
ja
test
icebp
das
sets
pop
ffreep
add
or
mov
inc
fcmovnu
adcl
mov
sub
add
mov
repz
xchg
adc
inc
test
insb
cmpsl
adc
out
das
ja
and
out
push
and
lahf
fwait
jp
adc
pop
rol
fsubs
lret
cmpsb
and
ljmp
xchg
or
dec
stos
sbb
pushf
aad
push
pop
movsb
popf
sti
cmp
scas
mov
inc
sbb
int
jge
add
test
ljmp
mov
sbb
cmp
sbb
hlt
int3
out
lock
mov
int3
je
sub
mov
sbb
dec
gs
js
pop
nop
or
inc
add
mov
repz
bound
xchg
shlb
popf
xor
push
add
aam
xchg
jg
js
movl
push
ret
and
jb
scas
push
mov
jecxz
insb
shr
imul
mul
pop
mov
dec
lcall
inc
jns
push
scas
mov
sahf
ss
push
adc
leave
mov
in
jp
xchg
sbb
or
cld
sahf
gs
fstpl
push
cmp
lea
jmp
lea
les
push
je
es
lock
push
pop
jp
sbb
xchg
mov
or
xor
or
push
or
cmc
adc
lea
subl
or
and
testb
rcrb
cmp
and
xchg
cmp
addl
mov
stos
insl
inc
jecxz
test
popa
mov
and
push
sbb
std
cmp
add
cmpsl
jmp
mov
inc
push
mov
jns
or
xor
dec
jmp
xchg
je
es
dec
lahf
arpl
push
fdecstp
xchg
adc
stc
ret
imul
sbb
cs
inc
lods
into
mov
pcmpeqd
mov
in
sub
jo
dec
pop
fldenv
mov
outsb
push
addr16
daa
movsl
es
mov
pop
mov
in
aas
inc
outsl
add
xchg
sub
push
int3
jnp
mov
push
inc
inc
mov
cwtl
daa
xor
pop
mov
cmp
xor
adc
lret
jecxz
shlb
inc
sub
int
imul
inc
xchg
daa
js
pushf
pop
cwtl
outsb
or
sub
adc
mov
and
scas
push
sub
mov
sub
dec
fidivrl
outsl
pop
scas
stc
movsb
push
adc
lcall
movsl
aaa
dec
aaa
jo
flds
add
test
xor
jb
fiaddl
push
ret
mulb
push
cld
out
pop
in
shrb
pop
push
mov
stc
push
and
cltd
cltd
pop
fsub
xlat
fcomp
push
xorl
xor
xlat
stos
dec
cmp
lock
mov
jns
test
dec
sarl
lds
xor
rorb
popf
adc
xchg
fs
or
mov
sbb
ret
pop
mov
jb
loope
int
fwait
lds
xchg
ljmp
popf
movsb
addr16
and
test
sub
outsl
mov
add
xchg
fbld
adc
orb
push
jo
stos
mov
es
inc
fldcw
add
xor
mov
loop
and
gs
in
or
outsb
mov
mov
inc
dec
mov
or
mov
cmp
xchg
fsubrl
ljmp
xor
xor
out
lds
aaa
arpl
pop
outsb
mov
cmpsl
sub
mov
xor
mov
cs
scas
adc
mov
dec
out
movsl
and
test
and
aas
xchg
fadds
sbb
test
testl
das
mov
das
fstpl
adc
out
pop
lods
insb
sti
push
sti
xchg
stc
in
sub
mov
dec
repnz
fbld
lds
push
addb
sub
into
xchg
push
int3
emms
sbb
fisttps
sub
loope
pop
ljmp
push
jns
jnp
jecxz
lock
lcall
push
test
dec
int3
sbb
pop
pop
lahf
sbb
push
pop
outsb
rcrl
mov
int
jg
mov
roll
call
hlt
cmpsl
fnsave
adc
cmc
addr16
clc
addr16
jne
lcall
gs
jae
pop
fistpll
xchg
dec
add
lods
sub
mov
repz
leave
test
nop
sbb
dec
mov
xchg
jb
cmp
pop
je
or
push
enter
sub
stc
mov
inc
outsb
jle
adc
fcomps
out
jg
xchg
cmp
add
pop
test
lcall
dec
ds
lret
lods
rclb
into
test
inc
mov
adcl
loope
icebp
mov
pop
push
std
insl
test
add
xor
stos
and
or
rorb
or
imulb
adc
dec
push
jmp
div
push
pusha
sarb
daa
push
nopl
push
xor
stos
xchg
icebp
and
mull
jne
cmp
loopne
ror
insb
insl
sub
and
mov
flds
mov
rolb
fldcw
fs
add
pop
xchg
pusha
aam
shlb
dec
les
sub
mov
mov
cmpb
dec
enter
jecxz
insb
dec
fs
cmp
icebp
outsb
mov
push
mov
sub
ljmp
aam
adcb
jno
add
test
mov
sbb
pop
sbb
push
add
scas
fbld
shlb
je
dec
add
xchg
cmp
and
idiv
pop
cmp
inc
mov
in
jp
xchg
repnz
and
sbb
fstp
sub
mov
in
dec
adc
out
cmp
enter
inc
sub
fcoml
add
push
aam
mov
out
int
sti
adc
cli
and
gs
in
das
jmp
push
cmp
repz
es
fstpt
or
push
add
cs
jecxz
add
dec
jmp
gs
push
jnp
loop
push
cmpb
pop
mov
pop
mov
ret
shll
mov
test
cwtl
and
mov
sub
adc
aam
mov
sarl
mov
sarb
mov
repz
jno
jno
pop
mov
out
push
push
lds
cmpl
add
js
push
lcall
xchg
pop
gs
fwait
aam
xor
mov
mov
int3
or
fistps
arpl
popa
setg
push
sub
mov
ret
pop
add
dec
pushf
pushw
les
pop
xchg
into
enter
sbb
mov
sbb
mov
mov
dec
cli
flds
aam
repz
jle
cmp
sahf
out
mov
imul
cld
or
jle
jg
mov
and
xlat
test
inc
mov
pop
mov
fadds
sar
repz
inc
filds
outsl
mov
add
imul
xchg
int3
xchg
in
pop
faddl
sub
mov
pop
shll
cwtl
pop
adc
sub
adcl
xlat
mov
mov
in
add
xchg
cmc
sbb
xor
inc
mov
sbb
sbb
xchg
rorl
sub
adc
mov
ret
cs
aaa
xor
jae
ret
sbb
add
inc
push
insl
mov
pop
gs
xchg
addr16
pop
mov
cmp
stos
jb
lods
sbb
ja
je
iret
nop
xchg
pop
xlat
dec
popf
and
imul
jge
xor
ret
leave
mov
test
mov
xor
pop
daa
mov
lret
ficoms
fsubl
cs
imul
mov
loopne
mov
mov
jne
push
cmp
jno
pusha
pop
xorb
int3
jmp
ja
lret
sti
fsubl
mov
lea
in
insl
adc
popf
push
dec
jo
pop
cmc
push
call
into
mov
xchg
push
pusha
jmp
jmp
and
ljmp
add
mov
mov
jecxz
cld
dec
ret
sub
mov
and
aas
mov
rclb
mov
or
adc
dec
and
ja
xchg
mov
push
das
in
mov
and
mov
xchg
adc
cltd
mov
lock
dec
ss
int3
pop
jl
jns
pop
jl
mov
push
xor
imul
scas
aad
iret
inc
xor
mov
les
push
das
push
add
sahf
mov
adc
mov
or
pop
or
dec
push
xor
in
int
or
out
inc
cmpsb
fcoms
dec
xchg
jl
sub
mov
jle
push
xor
shrb
sub
or
les
sbb
sub
hlt
jne
mov
js
push
gs
aam
sub
imul
cmpsl
cli
imulb
push
push
scas
inc
push
insl
fsubl
adc
xchg
inc
add
aam
and
cmpsl
loope
loopne
or
outsl
mov
mov
push
andb
jae
adc
clc
enter
mov
pop
push
inc
mov
aam
or
lods
jle
xor
xor
hlt
xor
call
insb
sbb
faddl
fcmove
cli
call
or
push
push
mov
or
jp
jmp
cmp
cmp
sbb
xor
das
aaa
insl
mov
mov
mov
cmpsb
push
cmp
rclb
insb
in
mov
divb
lods
mov
mov
divl
rorb
je
movsb
push
jbe
test
mov
sub
xchg
cmp
xor
addr16
leave
pop
fmull
pop
rorb
cmp
es
mov
jne
in
push
jns
imul
push
dec
mov
xor
out
pop
fistpll
mov
jp
pop
add
pusha
clc
ds
sbb
out
aas
dec
and
leave
xchg
cmpsb
aaa
scas
sub
xlat
sahf
sub
js
cli
popa
stos
cli
mov
dec
cltd
pusha
mov
cmpsl
pop
inc
dec
adc
jg
leave
loopne
cltd
cmp
dec
sub
in
imul
addr16
pushf
in
cmp
arpl
imul
xor
mov
test
or
inc
clc
cli
nop
or
xchg
jp
loop
sbbb
test
fdivrl
lds
imul
cmp
test
scas
sbbl
xchg
sub
ja
test
or
sbb
loopne
insl
nop
std
ds
xor
fs
fwait
push
mov
xor
cmc
loope
cmpsb
stc
cmp
or
dec
jle
jae
dec
adc
jo
mov
and
into
inc
in
aam
loopne
push
stc
into
fsubrl
xchg
je
push
mov
ja
mov
push
xor
push
movsb
movsb
mov
add
fucomi
repz
or
loopne
jne
xor
ja
dec
mov
ljmp
jg
adc
aam
bound
adc
jo
in
push
decl
imul
cmp
outsw
icebp
out
cltd
jg
pop
out
int3
xlat
push
gs
and
mulb
out
shrl
xchg
out
adc
mov
stos
psadbw
clc
bnd
outsl
add
rcrb
jmp
xor
js
cmp
sarl
push
mov
imul
loope
mov
scas
dec
pusha
mov
das
scas
aam
adc
xchg
lcall
dec
jo
inc
cmpsb
ljmp
sub
lcall
in
xchg
push
xchg
mov
iret
add
pop
xchg
push
arpl
nop
iret
scas
add
pop
mov
pop
not
andb
in
adc
sti
jae
ja
pop
and
cli
shlb
cmp
dec
sub
scas
cmp
inc
ljmp
inc
sbb
roll
jmp
xlat
inc
pop
daa
mov
and
rcl
fld
push
xchg
pop
fwait
dec
ds
std
mov
ja
push
inc
xchg
jl
imul
repnz
mov
adc
outsl
inc
js
aaa
scas
dec
dec
stos
in
lea
cmpl
fwait
xchg
jmp
das
ss
out
lods
push
outsb
pop
int3
or
loope
pusha
xor
test
xor
sbb
mov
and
cld
in
mov
fisttps
rorl
test
xchg
mov
ret
xor
sti
adc
lret
adc
insb
jbe
imul
adc
jp
jp
jbe
fs
cmp
mov
push
push
mov
mov
es
and
jo
mov
je
push
push
sub
sub
cmp
push
jae
mov
jns
es
jns
arpl
call
xor
mov
add
repnz
les
cs
sbb
fdivl
push
and
ds
hlt
push
cmc
and
pusha
sahf
push
hlt
mov
nop
aam
jno
arpl
sar
mov
jle
or
mov
or
pop
lcall
and
jno
jg
fcmovu
jle
mov
pusha
xchg
cmpsl
mov
imul
and
addr16
cltd
push
mov
and
cltd
ljmp
out
mov
cwtl
pop
and
lods
jle
add
insl
iret
aad
xchg
xlat
jno
adc
xrelease
aaa
dec
xchg
xchg
and
push
je
mov
mov
jge
mov
les
adc
push
mov
xor
pop
lods
dec
mov
mov
aaa
mov
push
jae
cwtl
fstl
push
or
inc
decl
leave
mov
add
pop
aaa
mov
push
int3
xchg
add
jge
inc
lcall
adc
push
int3
stc
mov
int3
inc
lds
add
lret
dec
imul
in
pop
mov
mov
iret
xor
lcall
in
add
int3
adc
mov
test
aam
inc
xchg
mov
shll
ret
outsl
or
jo
movsb
sbb
loop
out
xchg
pop
add
pop
adc
scas
imul
and
mov
dec
xor
push
mov
ret
cmp
mov
push
jecxz
outsl
mov
push
add
sbb
inc
pop
in
jp
add
mov
sub
jno
xchg
sahf
or
out
xor
adcl
btr
imul
iret
fsub
mulb
pop
jge
mov
jp
sbb
pusha
mov
dec
xor
jge
mov
mov
insl
mov
popa
lods
inc
push
or
repnz
and
add
jge
ret
imul
int3
arpl
and
mov
push
dec
arpl
xchg
dec
push
repz
pop
sbb
mov
xchg
repnz
sti
lock
in
mov
mov
lock
pop
push
mov
inc
mov
lds
sub
mov
xor
decb
or
lods
jnp
mov
popa
mov
pop
mov
cwtl
mov
jmp
out
es
jp
in
punpckldq
jecxz
je
jecxz
addb
sub
push
push
sbb
hlt
adc
jb
inc
aam
push
arpl
je
and
fistps
and
enter
daa
call
lcall
daa
enter
mov
push
shrl
aam
pop
jecxz
sti
lahf
sti
mov
xchg
xchg
sahf
out
ret
scas
les
fs
push
and
mov
cmp
je
fstpt
loop
ss
lea
lds
out
adc
or
push
mov
std
idivl
test
mov
inc
enter
push
imulb
cmp
jmp
push
scas
loop
fstps
xor
pop
test
sub
dec
clc
loop
sub
xacquire
add
je
xor
dec
leave
out
sub
xchg
loop
imul
mov
or
lret
stos
dec
negb
and
pop
dec
pusha
lea
or
cmpsl
mov
int
adc
outsb
es
js
out
xchg
sub
xor
jecxz
ficompl
repnz
lods
ret
clc
dec
mov
std
and
hlt
iret
test
mov
jno
jns
fcoml
jmp
inc
push
xchg
fbld
data16
add
jb
xor
in
mov
inc
dec
xchg
pop
loope
in
mov
sbb
sahf
cmp
xor
mov
mov
xchg
fnsave
jge
jl
lcall
jecxz
les
adc
jbe
or
scas
lods
dec
sub
aad
mov
pop
pop
pusha
xor
in
sub
fidivl
dec
jg
pop
sub
fmul
stc
lea
jae
mov
push
pusha
inc
aas
subl
mov
fisubl
mov
cmp
jns
inc
sbbb
xor
lahf
inc
sub
in
mov
push
int3
cs
mov
dec
add
rol
shrl
dec
sub
mov
pop
cmpsb
mov
push
fwait
mov
fwait
leave
pop
jecxz
jbe
sbb
jecxz
or
inc
and
out
inc
cmpsl
sub
jge
xchg
mov
cld
loop
lahf
test
sbb
outsl
and
mov
jp
pushf
int
push
mov
lods
cmc
fadd
xor
loop
scas
jg
sbb
xor
sub
and
mov
push
notb
cmpsl
push
inc
hlt
cmpsl
fsubr
in
mov
pop
or
mov
imul
in
mov
lea
aaa
and
shrb
or
mov
int3
mov
jl
ficoms
adc
notb
clc
mov
pop
test
adc
mov
xor
popf
leave
jg
rcrl
jae
dec
sub
dec
push
out
dec
shl
mov
sbb
stc
in
enter
sub
fmuls
insl
inc
jp
push
sbb
mov
outsb
outsb
pop
insb
xor
dec
pop
stc
fisubs
inc
pop
adc
in
push
aaa
cmp
dec
or
dec
enter
push
mov
div
daa
cld
fwait
jne
es
pop
push
mov
loopne
nop
jbe
mov
cmpsb
mov
inc
jne
cmp
aas
adc
out
call
inc
dec
shr
les
mov
jecxz
push
sti
cli
pushf
adc
sub
cmp
out
outsb
mov
rolb
imul
mov
cmp
push
and
fistpll
daa
sahf
xlat
leave
in
inc
sbb
addr16
out
mov
xchg
int3
mov
mov
or
fsubp
rolb
out
jle
test
jno
insl
jb
clc
into
and
sarl
stos
test
inc
and
nop
jecxz
pushf
mov
mov
scas
in
insb
and
cmp
add
jnp
daa
xchg
jmp
or
push
inc
push
cltd
xor
clc
and
inc
in
int
lcall
push
and
addl
mov
add
push
add
mov
aad
mov
lret
xchg
push
loopne
cmp
sbb
fildl
mov
enter
jbe
sti
xor
lock
add
cmp
xchg
xchg
jo
mov
orl
insl
insl
dec
icebp
or
jns
in
bound
add
int3
sbb
or
loopne
mov
adc
lock
outsl
lods
pop
lcall
test
cmpsb
push
xchg
push
rolb
dec
and
xchg
movhps
adcl
and
ret
jle
push
bound
adc
push
lret
cltd
mov
add
dec
out
pop
add
cmpb
sahf
insb
testb
cmp
mov
add
mov
jbe
jne
cmpsl
push
and
push
negl
lock
sbb
sub
fildll
fwait
or
mov
cld
out
outsl
shl
mov
jnp
cwtl
cmp
stos
sbb
jae
mov
cltd
lahf
adc
icebp
les
push
push
mov
push
in
gs
mov
mov
mov
mov
mov
inc
dec
mov
xchg
addl
insl
mov
or
push
addr16
sbb
loopne
fwait
std
pop
sub
data16
lret
in
dec
lret
push
lods
flds
dec
mov
push
inc
adc
lock
cmpsl
fs
jns
push
test
pop
test
lret
xchg
add
lea
mov
ss
dec
inc
push
les
scas
sarb
pop
mull
adc
fcom
aaa
pop
xlat
pop
sti
scas
mov
enter
xchg
imul
dec
in
aad
lret
sbb
xchg
std
sub
lret
pop
in
lahf
es
push
scas
lods
cmp
mov
cwtl
je
aad
leave
shlb
aad
int
dec
sbb
aad
mov
mov
lock
mov
fidivl
sub
dec
call
mov
add
fdivs
lret
xchg
add
ja
push
gs
xchg
sbb
cli
jmp
popa
adc
test
dec
sub
xchg
es
sbb
pop
pop
mov
mov
stos
or
sbb
push
in
jo
fs
inc
xchg
int
cmpsl
jno
jmp
fdivrp
cmc
ss
push
pop
out
lcall
or
xor
scas
fisttpll
mov
ret
add
xchg
and
daa
cs
js
pop
mov
push
xchg
leave
out
adc
and
movsb
mov
in
inc
cmpsl
push
push
sub
mov
cs
dec
sahf
sub
repz
xchg
scas
loop
es
popa
mov
jp
imul
jg
xlat
pop
cmp
and
lret
test
sbb
rclb
mov
fadds
cmpb
cwtl
shlb
dec
dec
lock
push
sub
mov
push
xlat
cmpsl
sub
or
sub
pushf
ja
repz
cmp
aad
sbb
inc
fcmovnbe
fucomp
cmp
out
mov
movsb
dec
fwait
in
test
idivb
dec
pop
sbb
pop
aaa
insb
in
mov
cs
stos
jge
leave
data16
xchg
pop
mov
stos
out
pop
xchg
adc
xorb
sbb
mov
mov
iret
mov
mov
divl
add
dec
dec
addr16
les
mov
test
test
add
add
hlt
imul
notl
in
push
jle,pt
daa
fnstenv
jmp
pop
mov
filds
jo
push
gs
insb
repz
jnp
test
int3
add
pop
add
mov
mov
aas
ds
add
aaa
loop
mov
fwait
mov
pop
cwtl
add
adc
mov
iret
test
push
add
mov
fwait
sub
lock
cltd
mov
sbb
sbb
scas
cmc
xor
or
and
pop
test
mov
cmc
test
jnp
mov
pop
mov
int
push
dec
int
stos
jne
mov
cmp
loopne
push
gs
pop
mov
mov
xchg
jae
sbb
sbb
repnz
pop
call
mov
cs
pop
cmp
mov
sub
xchg
adc
pusha
sub
fldl
mov
jns
imul
test
dec
mov
ss
rorl
out
jne
scas
pusha
shl
cltd
insl
insl
lds
ja
bound
xor
lods
mov
pop
cld
in
loop
out
out
cli
movsb
test
dec
cmp
mull
dec
pop
repz
andl
jmp
push
xor
jmp
icebp
roll
daa
int3
push
sbb
lret
jmp
das
push
xor
xor
mov
jge
fdivs
pushf
xor
mov
jbe
mov
leave
add
inc
gs
cltd
sbb
xchg
movsl
cli
inc
pop
loope
daa
cmpsb
mov
pop
scas
sub
insl
mov
sbb
call
and
fcomip
push
mov
imul
mov
test
cli
dec
xor
dec
arpl
push
mov
nop
das
cmp
out
sahf
cmpsb
stos
mov
arpl
or
mov
jb
xor
lea
push
mov
jae
mov
sbb
fisttpll
std
shrb
mov
pop
xorb
repz
dec
popa
fidivl
notb
enter
orb
sub
xchg
ja
in
sti
dec
sti
mov
icebp
fmuls
out
rcrb
xchg
jecxz
push
std
push
mov
lret
imulb
inc
das
inc
sbb
xor
dec
ficomps
inc
add
sbb
popa
ja
jae
fcomip
mov
out
xor
dec
jg
mov
aas
cmpsl
rcrl
into
lahf
sbb
sub
jmp
lock
out
adc
inc
adc
test
adc
stos
and
push
jmp
ret
ja
pusha
aaa
and
pop
fistps
mov
pop
pop
xchg
pop
or
imul
add
sti
mov
push
xorb
fs
shrl
lahf
cmp
mov
test
insl
nop
aad
ret
xchg
pop
js
sub
insb
fs
adc
rclb
xchg
daa
jns
push
rclb
xchg
lea
repz
adc
popa
push
and
cwtl
sub
xchg
hlt
cltd
mov
repnz
pop
imul
popa
pop
stos
xor
das
pop
flds
ret
dec
and
leave
pop
sbb
sub
inc
ss
xchg
jle
pop
lret
inc
push
pop
aad
ss
add
sbb
push
adc
mov
mov
je
inc
add
sub
add
out
mov
xchg
jne
js
jae
push
adc
mov
into
out
daa
fistps
shr
ds
rclb
pop
or
xchg
stos
jb
addr16
dec
jge
pop
sti
repz
jbe
inc
movlps
or
adc
push
sub
imul
in
sub
lods
dec
pushf
test
cld
dec
mull
push
xor
or
scas
pop
add
dec
jb
mov
out
cmpsb
xchg
mov
jb
and
mov
outsl
test
lret
mov
mov
sti
repnz
xchg
outsb
push
rcrb
stc
negl
dec
jns
loopne
push
sbb
mov
inc
inc
cli
subb
push
fdivrs
mov
ret
cmc
inc
lcall
mov
outsl
out
dec
movsl
data16
faddp
adc
ss
shll
mov
inc
jb
mov
shl
mov
fistpl
int
dec
repz
cmp
xchg
notl
push
fcoms
mov
cmp
ret
sbb
cld
mov
lcall
xchg
aas
testb
test
scas
inc
push
cmpsb
jnp
pop
js
xor
lea
insb
xchg
mov
sub
sbb
jg
push
and
outsb
fisttps
out
push
push
push
int
lock
bound
cmp
pop
mov
add
jns
into
lock
mov
cmp
jne
rcrl
dec
add
push
push
je
fdivl
ljmp
inc
fmuls
out
ds
mov
ret
jb
das
repz
ljmp
mov
or
mov
xor
lods
mov
inc
pusha
push
sbb
fildl
loopne
xor
stc
movsb
js
in
xor
push
fidivs
push
jno
mov
int
insb
or
mov
sub
data16
pop
pop
mov
leave
mov
fists
ret
mov
out
mov
notb
insl
sbb
dec
jmp
xchg
add
jmp
pusha
xchg
fcomi
lret
dec
mov
push
xchg
xchg
shlb
cmp
into
mov
dec
sub
das
xchg
and
call
orl
jecxz
inc
sbb
call
stos
jae
int3
mov
mov
fs
mov
leave
adc
inc
daa
xchg
aas
ffree
popf
stc
out
add
icebp
pusha
inc
fs
jle
push
add
jbe
xor
outsl
lcall
or
push
outsb
out
call
xchg
jl
xchg
xchg
dec
and
and
sarl
xchg
jae
and
ja
pop
sub
cmp
rorb
pop
inc
test
push
out
mov
dec
jg
es
in
je
jnp
add
add
shlb
repz
pop
jge
push
scas
outsb
jo
add
scas
cld
test
movsl
pusha
fsubrs
push
aas
lahf
jne
test
outsb
lock
cld
outsl
sub
loopne
cltd
jo
cmpl
and
sbb
imul
clc
push
pop
pop
fcoml
rcl
xor
adc
pop
inc
mov
in
mov
cltd
iret
test
sahf
xor
jae
clc
aaa
jecxz
fiaddl
jg
xor
insl
movsb
mov
dec
mov
shrb
adc
cmpsl
push
enter
ret
cwtl
mov
dec
pop
jg
pop
into
out
and
and
sbb
adc
and
in
dec
dec
jl
mov
sub
lock
push
push
xorb
sub
adc
xchg
test
or
push
sbb
and
aaa
adc
xchg
jbe
lcall
push
movsl
xchg
pushf
fsubs
adc
test
dec
or
dec
repz
aas
mov
jmp
clc
enter
jne
cmpsb
add
mov
ja
inc
fiaddl
insl
xor
push
lret
icebp
jnp
in
shlb
fisubrl
sbb
xchg
mov
test
icebp
nop
int3
mov
mov
lret
mov
push
clc
jmp
and
mov
mov
mov
les
sbbb
ja
xchg
sbb
mov
lret
adc
inc
int3
xchg
cmpsb
subl
jne
orb
mov
xchg
scas
repnz
adc
jp
push
rcl
es
hlt
out
ret
pusha
test
hlt
scas
xor
sub
inc
and
test
push
push
jae
mov
push
mov
dec
adc
shlb
mov
test
pop
and
shlb
xlat
xchg
pop
stos
jae
in
jecxz
mov
cmpsl
xor
fldcw
hlt
stos
enter
mov
sbb
vandnps
das
pop
inc
jg
shl
sub
lods
jae
push
or
lsl
jne
jl
sbb
decb
xor
aas
xor
cmc
mov
call
mov
mov
sub
sti
mov
add
and
dec
push
xchg
in
mov
in
pop
sub
in
lock
std
sub
mov
xlat
push
rorl
lods
xchg
inc
out
lods
inc
mov
mov
test
aas
jbe
xor
jnp
and
inc
lret
sti
lahf
std
xchg
pop
push
pop
inc
jecxz
and
movsb
jb
push
aam
icebp
les
leave
mov
pop
jnp
jg
jmp
pop
adc
out
in
loop
fcompl
pop
cmp
adc
push
shrb
data16
xchg
das
mov
outsb
decl
lcall
mov
sub
cmp
cld
jmp
jnp
mov
jno
cmp
loop
push
adc
rcrl
sub
jmp
mov
popf
xor
xchg
adc
sbb
rcrl
popf
xchg
or
ds
loop
sbb
in
or
out
out
push
push
inc
loop
mov
dec
xorb
test
orb
push
sahf
js
xor
int
cli
repz
lods
adc
nop
imul
pop
xchg
mov
jle
cmpsl
xchg
repz
add
dec
add
inc
cmp
icebp
xor
lock
cmp
sarl
movsl
cmp
mov
xor
and
mov
pop
sbb
jnp
and
cmp
push
orps
push
mov
xor
aas
mov
rcll
out
and
lea
push
lahf
nop
mov
jbe
mov
mov
push
push
icebp
lock
jnp
mov
add
imul
pop
xchg
gs
aad
and
push
rcll
sub
jb
xor
jle
push
xorb
test
mov
test
lret
pop
sbb
aaa
push
jge
dec
ror
add
shrl
mov
mov
jnp
lds
xchg
dec
lret
xchg
or
ljmp
js
in
aas
sbb
lods
and
fnstcw
cltd
fsts
push
aas
lahf
iret
aaa
sbb
pop
arpl
in
sbb
jbe
cmp
cbtw
aas
sub
mov
stos
push
push
jno
push
push
pop
mov
push
or
xchg
das
mov
push
dec
aam
inc
repnz
dec
loopne
decl
scas
add
xchg
xchg
push
cltd
ret
pop
cwtl
mov
push
add
mov
movsb
adc
in
cmc
mov
mov
jne
adc
fisubl
xlat
adc
cmp
sub
jnp
cmp
outsl
aad
lcall
idivl
push
dec
mov
and
test
push
fcomps
mov
jnp
enter
jge
or
mov
jle
xchg
xchg
addl
lret
sarb
roll
popf
jns
dec
push
add
add
mov
and
ljmp
dec
push
push
push
mov
scas
std
into
shr
cmp
inc
push
xor
cmp
mov
xchg
pop
jg
xchg
sub
xlat
les
add
adc
jns
in
out
add
and
aas
pop
repnz
stc
dec
cwtl
add
repz
test
es
incb
fwait
mov
sub
jne
ret
rcrb
cmpsb
pushf
jo
xchg
or
iret
mov
mov
sahf
scas
jp
je
fadds
insl
or
orl
dec
outsl
jae
fnop
clc
ljmp
adc
imul
les
clc
push
mov
and
lea
sbb
shrl
pop
ljmp
mov
cmp
outsb
or
cltd
out
mov
push
pop
rclb
adc
inc
cmp
dec
inc
push
sbb
sbb
hlt
cmpsb
jl
and
mov
pop
xchg
jns
sbb
xchg
push
pop
mov
gs
xlat
mov
cs
or
xchg
call
inc
inc
push
push
lahf
scas
xchg
into
movb
int3
or
inc
xchg
roll
cltd
es
jge
cmpsl
js
sahf
adc
test
sbb
fldl
push
cltd
icebp
ljmp
data16
push
clc
pop
jae
aaa
mov
subl
or
js
mov
inc
shlb
dec
ljmp
fucom
rorl
dec
lds
jo
cmpb
xchg
call
pop
mov
test
cmp
jns
rclb
sbb
and
leave
sbb
in
ret
sub
and
sub
push
leave
int
sarl
push
pop
pop
pop
fisubrl
mov
jno
in
lods
loope
and
sbb
lret
sti
push
adc
rcll
push
lret
in
cmovne
cld
fisubrl
rcrb
in
and
mov
test
xchg
ss
jo
dec
call
inc
jl,pt
sbb
ret
loope
inc
in
sbb
loope
pop
and
adc
mov
mov
popf
xchg
notb
xor
cmpsl
dec
mull
subl
repz
or
jno
cld
xchg
lcall
std
rcrb
fldl
xchg
pop
pop
or
popa
mov
shrl
stc
scas
pushf
out
sbb
inc
fldl
loop
iret
fnstcw
sub
mov
clc
sub
sahf
mov
fs
adc
fwait
xlat
cmpsl
movsl
and
dec
in
test
jg
or
cmp
mov
jne
adc
mov
icebp
out
jg
les
int
ss
xlat
pushf
pushf
call
jae
inc
mov
mov
movsb
mov
decl
mov
ret
movsl
mov
cmpsb
adc
shrb
dec
jecxz
or
arpl
cmp
jecxz
paddq
adc
push
insl
sbb
scas
lret
push
scas
scas
cmp
cmpsl
dec
cmp
or
xor
mov
popf
xlat
mov
icebp
inc
int3
fsts
or
addr16
adc
mov
mov
in
in
ret
cmp
pop
cli
stos
fs
sbb
xchg
popf
psubq
ds
fwait
cld
jmp
popf
pusha
inc
sub
push
fwait
jno
pop
aas
jb
inc
cs
pop
outsl
xlat
mov
inc
rep
mov
dec
movsb
ret
mov
ja
dec
xchg
jg
mov
mov
call
jmp
loopne
or
lods
push
loope
xchg
sarl
mov
xchg
cmc
push
inc
dec
das
mov
outsl
cmpsb
shrb
rcrl
jnp
dec
je
inc
dec
lods
cmpsb
push
sbb
lods
dec
jne
mov
mov
push
push
jecxz
cmpsb
or
and
cmp
inc
movsl
sbb
pop
adc
sub
movsb
xor
fcoml
sbb
lods
lahf
pop
pusha
imul
dec
je
sub
and
xor
jb
add
mov
pop
xchg
adc
or
lods
jbe
hlt
ss
jae
out
cltd
mov
xor
mov
jp
mov
push
pop
sub
pop
adc
stos
inc
subb
nop
and
movsl
cmp
out
inc
push
mov
adc
subb
insl
dec
shll
test
push
mov
dec
aaa
daa
enter
mov
ja
rcll
outsl
aad
lcall
push
mov
bound
call
addl
lock
add
mov
jno
dec
and
mov
lcall
ja
aad
mov
sbb
xchg
mov
insb
add
sbb
leave
shl
xor
cmp
dec
iret
cmpsb
push
xor
orl
xchg
cmc
sub
fs
pop
stc
std
fst
dec
add
mov
pop
jle
cmpsb
sub
pop
cld
dec
dec
leave
div
pop
xor
pop
fstpt
js
or
fwait
cmp
xchg
mov
mov
dec
push
push
push
sub
add
dec
cmp
add
or
sbb
sub
ret
pop
lcall
and
icebp
xor
pop
in
cmp
lea
add
pop
and
mov
jne
pushf
inc
add
push
fwait
jg
cltd
mov
sbb
push
jb
mov
out
inc
mov
aas
cmp
mov
pushf
aaa
pop
les
arpl
add
fdivl
xchg
pop
out
gs
dec
shrb
inc
test
dec
sbb
xchg
xorb
lds
test
das
hlt
ret
scas
loopne
push
fistl
hlt
xor
arpl
scas
cwtl
stos
sbb
adc
popa
and
inc
add
cmp
test
xchg
arpl
arpl
xor
lea
sbb
and
dec
das
xchg
inc
repz
leave
and
inc
sbb
jb
stos
imul
inc
lret
mov
sub
es
outsb
aas
push
imul
incb
or
cmp
loop
or
rclb
push
push
push
push
mov
or
dec
test
out
jnp
push
lods
mov
jnp
in
rcll
insb
aas
mov
push
arpl
xchg
sbbb
je
andb
into
mov
adc
jmp
and
outsb
lret
jp
movsb
or
scas
or
xchg
mov
jb
inc
loopne
pop
sub
imul
out
add
imul
pop
subl
and
mov
sub
pop
rorl
sbb
xchg
dec
aas
mov
inc
ja
push
mov
adc
movsl
fstpl
mov
cmp
jo
inc
clc
rcrl
sahf
bound
lahf
inc
push
xor
push
mov
in
test
and
data16
mov
movsb
iret
les
jne
jl
pop
xorb
pop
outsb
xchg
fdecstp
push
shl
mov
ds
les
xor
inc
pop
loope
xor
sub
loope
mov
mov
fnsave
mov
stc
sahf
ret
subl
sub
lret
push
outsl
mov
cwtl
je
mov
repnz
jp
xor
mov
jle
push
mov
and
push
xchg
fiadds
mov
pmaxub
popf
outsl
aam
sbb
fwait
pushf
push
sub
inc
lahf
outsb
dec
push
div
pop
rep
js
and
push
fildl
inc
jnp
leave
cmp
clc
push
movsb
adc
lods
mov
stos
jns
fs
xchg
mov
cmp
jmp
push
js
lea
xlat
outsl
jo
adc
or
and
sbb
nop
data16
and
cmp
fistpl
ficoml
dec
xor
jmp
pop
sub
jns
xor
pusha
shlb
icebp
pop
data16
rclb
enter
lock
iret
jge
mov
rcrb
push
push
in
jmp
rolb
mov
pop
pop
sbb
nop
dec
xchg
es
sub
jnp
sbb
imul
popf
iret
inc
mov
imul
jnp
adc
pop
sub
xchg
xor
imul
xchg
jp
add
jmp
dec
ljmp
ds
incb
orl
jle
lods
and
xchg
fdivrs
adc
xchg
sti
icebp
fcmovne
out
fmul
adc
out
sub
out
out
xchg
bound
scas
adcb
dec
es
xchg
inc
outsb
les
fmul
or
pop
fldt
mov
jo
cltd
xchg
push
jno
push
fwait
lcall
mov
jmp
cmp
ficoml
ds
loop
xor
sbb
cltd
xchg
mov
test
int3
sub
ja
jle
popa
int3
arpl
mov
push
call
fnsave
adc
movsb
sahf
cmpl
cmp
iret
add
jp
int
gs
xchg
call
ds
test
sbb
ss
cs
add
ficoms
sub
cmp
jle
and
add
push
push
frstor
leave
mov
je
fdivrp
cmpsl
sahf
pop
xchg
ret
push
adc
add
push
inc
mov
mov
xor
or
adc
xorl
push
ljmp
inc
sbb
sub
pop
mov
mov
or
jo
cmp
sarb
cs
mov
ds
xchg
add
ja
dec
sbb
imul
and
mov
jp
mov
lret
cmp
mov
inc
mov
rolb
add
add
push
adc
xchg
lcall
cmp
cli
push
stc
in
push
lds
sbb
push
loope
xchg
arpl
rolb
xlat
pop
mov
into
push
fs
mov
mov
mov
popa
xchg
lods
mov
xlat
addr16
xchg
mov
imul
movsl
jb
inc
mov
inc
sub
mov
test
mov
jo
in
ja
test
pop
lock
mov
xchg
pop
push
mov
clc
out
std
clc
sahf
out
fnsetpm(287
out
rcrb
enter
scas
out
icebp
push
imul
xor
lea
imul
lcall
push
push
stos
out
xchg
fwait
arpl
pop
jge
cmpsb
stc
sub
push
outsb
cli
sarl
mov
filds
bound
or
movsb
ljmp
mov
repz
and
cmp
scas
jo
xor
pusha
andl
into
or
rcll
dec
push
add
dec
mov
out
mov
cmp
daa
adc
decw
xor
add
js
inc
lods
push
out
lock
and
test
mov
stos
cld
ret
cld
fisttps
enter
adc
mov
dec
repnz
std
xlat
not
sbb
outsl
or
aam
test
adc
lock
arpl
rcl
fdivrs
mov
pop
sub
jae
xchg
fimuls
rcr
pusha
daa
xchg
xor
cli
and
jecxz
add
jnp
loop
js
adc
mov
arpl
cmpsb
clc
mov
pop
nop
divl
jecxz
sbb
or
shl
mov
jae
pushf
leave
inc
fsts
mov
mov
ljmp
pop
mov
sub
ret
or
sub
in
xchg
add
or
adc
push
dec
fwait
dec
mov
xor
sub
aaa
mov
stos
sbb
dec
sbb
popf
pop
and
jo
loopne
lock
sbb
pop
ficoml
les
outsb
in
adc
cmp
adc
adc
adc
inc
pop
jg
lock
scas
push
nop
dec
rorl
adc
mov
or
or
fmull
pusha
test
mov
jns
test
jbe
jmp
sub
push
mov
fsts
xor
add
pop
shrl
ss
test
jns
xchg
mov
icebp
fbstp
cmpxchg8b
jnp
lea
cmp
std
popf
lcall
mov
cli
popf
xchg
push
pop
or
dec
xchg
es
cli
scas
dec
jae
stos
mov
dec
repz
ret
stos
and
sbbl
add
xor
add
add
pushf
dec
adc
push
xchg
fisubs
dec
cmpsl
out
inc
cld
pop
adc
dec
loope
push
testl
push
jnp
repz
pusha
arpl
jnp
dec
je
lret
lock
inc
lret
test
cmpsl
inc
dec
adc
add
jmp
jns
sbb
xchg
mov
inc
fisttpl
mov
mov
cmc
xor
lods
repnz
bnd
pop
mov
repnz
pop
and
sub
pop
paddb
inc
push
mov
mov
cmp
mov
ror
sti
jle
inc
test
mov
lods
push
fcompl
in
loope
repz
loope
sahf
scas
lods
lcall
enter
bound
sub
aaa
mov
pop
std
jge
push
je
int
inc
insb
pop
push
movsb
cltd
push
popf
flds
jb
fisttpl
dec
mov
mov
clc
xor
and
insl
push
pop
repz
in
mov
je
imul
or
bnd
xchg
cltd
mov
ret
ljmp
daa
xor
fldt
popa
mov
or
inc
pushf
int3
or
fwait
sahf
rcrb
sbb
sub
or
divl
sub
icebp
je
inc
push
sbb
inc
aad
fcmovbe
movsl
jecxz
leave
fimuls
sarb
xor
ret
mov
push
fs
jbe
lods
push
loopne
jae
in
and
jbe
xchg
lea
push
xchg
lods
cmpsl
dec
mov
inc
cmp
sbb
popl
movsb
aaa
stos
xchg
daa
imul
scas
adcl
sbb
pop
jecxz
or
mov
sbb
dec
jno
lret
pushf
or
adc
ljmp
rcr
add
inc
jbe
or
push
mov
xchg
clc
nop
inc
cli
mov
mov
mov
pop
pushf
hlt
enter
out
pop
inc
fistps
inc
jmp
mov
add
xor
dec
and
adc
ds
int3
add
sbb
xchg
inc
sbb
jp
mov
rol
es
ret
push
dec
or
sub
mov
add
fimull
jb
jle
and
jbe
jb
cmp
sbb
test
bound
pusha
mov
xor
cmp
cwtl
insb
ds
cmp
movl
xchg
sub
fcomps
in
decl
js
xor
fdivrl
mov
xchg
addr16
fistpll
imulb
pop
mov
inc
xchg
jb
xchg
test
inc
insb
scas
ret
je
and
jecxz
fst
incb
orl
lea
aaa
mov
mov
jno
icebp
scas
inc
popf
push
addl
or
mov
or
jecxz
dec
aam
add
adc
inc
jg
and
jbe
cmp
fnsave
hlt
aam
lods
idivl
lods
and
adc
aam
mov
xor
int
jmp
xchg
cmp
xor
jl
sar
add
jne
cmp
sub
mov
sbb
xchg
inc
jge
adc
stos
fildl
jle
les
out
nop
aam
daa
cmp
add
xchg
jb
stos
lock
mov
sbb
cmpsl
cmp
jbe
xor
iret
loope
add
pop
pop
pop
js
push
mov
xchg
leave
sub
inc
mov
pusha
xchg
insl
sub
in
mov
pop
mov
and
nop
cmp
xor
mov
pop
adc
mov
loop
pop
mov
jae
cwtl
mov
notl
push
dec
push
push
jp
stc
pop
or
mov
dec
loop
xchg
cmc
test
jno
xlat
paddd
test
sub
sbb
in
or
jp
mov
insb
push
bound
lahf
popa
in
push
arpl
xchg
mov
sbb
inc
shll
push
jbe
daa
scas
pop
xlat
out
mov
xchg
repz
lea
mov
or
loop
aaa
movsb
sub
adc
mov
jp
int3
ficomps
sub
pop
scas
fldenv
lahf
push
xchg
rclb
cli
divl
sub
xlat
jns
fcoml
jge
jo
cmp
xor
mov
imul
scas
repz
pop
xor
and
pop
idivl
pop
loop
sahf
push
inc
push
mov
fsubp
pop
lcall
das
pop
lods
fistpl
pop
mov
fstpl
pop
cmp
xchg
jl
stc
adc
iret
mov
jg
fadds
movsl
and
outsl
pop
sub
popf
dec
xor
cwtl
ss
xor
mov
outsb
test
xrelease
dec
fildll
outsl
mov
xor
jp
fs
and
or
std
xor
push
push
xlat
inc
pop
repz
mov
out
adc
ja
push
jb
cmp
pop
ret
jl
jne
mov
or
cli
jp
pushf
mov
popa
lret
dec
jb
fistps
jnp
in
inc
sub
imul
fstps
fwait
lret
jo
iret
stos
test
sub
enter
xchg
xchg
outsl
mov
mov
push
mov
pop
mov
mov
mov
xchg
sub
mov
fildl
add
mov
clc
repnz
mov
cmc
pop
cli
scas
imul
leave
mov
loope
arpl
and
das
cwtl
pop
loopne
push
cmp
xor
ret
lcall
dec
lock
or
lret
or
pop
mov
sti
shll
ss
xorb
push
xor
push
sbb
xor
je
daa
je
scas
fisubl
pop
movsb
js
push
rep
movsb
cltd
dec
xchg
or
inc
bound
jp
fisubrs
out
loopne,pt
cmp
jmp
rol
lods
in
xor
sbb
dec
xor
lea
xchg
jnp
cmpl
rorb
in
aad
insl
xchg
jge
jmp
aam
pop
mov
ljmp
aad
ss
sbb
mov
mov
repz
test
lahf
jo
outsb
lahf
movups
ds
xchg
mov
push
push
lds
push
xchg
arpl
push
les
out
rclb
adc
xor
push
sbb
leave
mov
je
clc
ret
shlb
xor
jmp
cmpsb
push
aad
mov
cmpsb
fidivl
cld
push
or
inc
push
das
lock
adc
stos
xchg
jbe
pop
cmp
xchg
sbb
lea
xchg
lcall
decl
lods
cmp
jae
push
jae
inc
mov
into
mov
fs
orl
inc
add
pop
or
aad
clc
cld
jns
add
xor
lahf
lds
bound
mov
mov
push
ret
cmp
stos
fdivrp
add
aad
out
push
cld
clc
int3
jne
mov
inc
fwait
add
fimull
or
mull
test
aam
testb
jp
add
add
sbb
add
sti
adc
test
in
xchg
or
into
push
filds
rcl
mov
jecxz
sbb
mov
out
xchg
xchg
loopne
sub
gs
insl
pop
cmp
scas
addr16
insl
in
in
jp
aam
enter
aaa
jb
xchg
rcrl
out
test
fidivrl
sahf
jns
jl
dec
push
add
cltd
pop
sub
sar
stos
push
add
mov
jge
inc
mov
dec
adc
lahf
add
shlw
push
adcl
cmc
mov
adc
add
inc
int3
pop
xchg
push
out
mov
mov
sub
cs
inc
xchg
nop
andb
or
fdiv
mov
xchg
leave
cmp
mov
cld
cli
jg
aaa
inc
and
jle
sub
sub
mov
and
je
xor
mov
les
add
leave
mov
pop
lea
sub
xchg
xor
pop
daa
dec
jl
sub
cmp
lea
shll
pop
outsb
cmpsb
fs
fsts
mov
shll
dec
or
loope
jp
or
inc
loopne
fcoms
adc
int3
xchg
push
sahf
out
repz
pop
popa
in
pop
lret
add
enter
adc
mov
out
fdivl
insb
mov
stos
outsl
push
pop
addb
nop
xchg
adcb
inc
lahf
cltd
pop
hlt
enter
pop
inc
rep
push
mov
xor
xchg
pop
cs
sbb
pop
sbb
add
xchg
sbb
or
jecxz
in
push
mov
jle
lcall
js
dec
sarb
push
in
push
push
fists
loopne
sub
icebp
lds
xchg
loopne
test
std
orl
ror
mov
jmp
cmp
lods
popa
in
sbb
mov
jp
adc
pop
aas
in
sub
rorl
shll
and
mov
es
add
es
or
sarb
test
mov
fmuls
rclb
pop
push
das
adc
rorl
mov
pop
pop
scas
adc
jne
inc
jp
jmp
mov
mov
pop
xchg
and
cmp
xorb
push
push
cld
sahf
shr
js
adc
ror
mov
add
hlt
mov
lds
inc
idivl
cltd
and
or
stc
sbb
push
pop
mov
sahf
sahf
jns
lret
test
and
icebp
xchg
repnz
je
xor
addr16
cmp
and
out
cli
xchg
mov
sub
pop
push
mov
push
mov
rcll
notb
push
pop
pushf
sahf
sahf
loop
sbb
jp
mov
xor
xchg
cmpsb
fnstcw
mov
mov
inc
dec
cmp
pusha
mov
xlat
xorl
or
orl
shrl
pop
mov
test
lret
loope
icebp
imul
aad
test
pusha
sbb
and
mov
ficomps
je
js
ljmp
testb
cmp
popf
push
fildl
jmp
mov
or
sub
and
dec
cmp
leave
push
int3
test
movsl
je,pn
dec
push
aas
mov
pop
sbb
and
xchg
cmp
or
pushf
jle
pop
ljmp
push
pop
aaa
push
test
test
inc
add
push
mov
and
push
push
jne
lret
jae
insl
sub
int3
xor
movsb
xor
push
jo
mov
dec
arpl
dec
mov
lcall
or
ret
mov
test
push
int3
les
loope
movsl
inc
jecxz
add
and
xor
adc
jp
push
add
xlat
fidivl
jno
cmc
push
stos
push
push
rorl
mov
testb
sahf
mov
cld
movsl
sahf
or
sub
jge
sub
push
dec
mov
loop
xchg
sbb
jo
iret
lea
repz
mov
and
leave
sbb
ss
inc
fistps
stc
mov
xchg
imul
sbb
xor
adc
cmpsb
adc
pop
psubsw
xchg
pop
and
popa
jne
push
push
xchg
jp
es
cmp
push
dec
int3
jp
sti
pop
add
and
xor
ret
pop
lret
dec
popa
ret
std
xchg
sbb
xor
jnp
xor
aaa
mov
add
sti
sbb
or
imul
push
add
jg
mov
sbb
imul
lcall
and
inc
ja
jnp
xchg
dec
xchg
sbb
popfw
jmp
fldpi
pop
testb
lahf
in
xchg
out
dec
aam
loopne
gs
xor
or
clc
and
mov
test
fisubrs
inc
jne
add
clc
stos
jns
xchg
add
stos
stc
jb
js
repz
cmp
sbb
lea
adc
cmp
daa
xchg
adc
icebp
pop
movsb
iret
xor
clc
or
aad
andb
mov
push
test
xor
inc
imul
sbb
loope
jle
mov
rclb
mov
mull
jp
and
test
add
int
sbb
push
movsl
cmc
andb
mov
je
lret
imul
sbb
sbb
subl
orb
jne
sbb
test
lods
ljmp
jp
pop
cmpb
inc
add
xchg
mov
xchg
adc
jo
pop
xor
insb
aam
les
push
imul
push
scas
repnz
and
pop
mov
jbe
leave
ficompl
das
test
dec
ljmp
lea
xchg
xor
je
dec
outsl
insb
jno
fistpl
iret
jne
dec
pusha
push
popa
mov
scas
inc
sbb
adc
xchg
jg
js
and
mov
sti
das
xchg
inc
jp
cmp
pusha
lds
add
sub
push
pop
mov
bound
adc
out
test
dec
outsl
cld
aam
mov
ja
sub
pop
aad
xchg
or
lret
dec
push
mov
dec
mov
mov
cmp
sbb
xor
sub
lahf
jnp
adc
jg
dec
mov
int
add
dec
rcrl
enter
jmp
push
or
adc
cmp
insb
add
into
sub
popf
lods
out
shr
shr
mov
lcall
and
mov
or
mov
test
push
adc
shrl
into
cmp
and
inc
xor
xor
dec
in
dec
mov
cmpsl
cld
cli
inc
jmp
mov
xchg
sti
out
sahf
pop
push
data16
adc
or
xlat
notl
bound
out
or
and
dec
xor
mov
sub
dec
xor
push
or
fistl
loop
hlt
scas
fcomip
dec
or
in
js
loope
fcompl
fstpl
mov
inc
cmp
nop
popa
fdivl
xor
xor
jmp
adc
cmp
add
pushf
mov
out
mov
test
add
fucom
fadds
fisubrl
daa
je,pt
das
inc
push
call
testl
jg
fldcw
je
mov
lret
cmp
sbb
adcl
lods
fdivrs
lods
mov
inc
mov
ret
jmp
dec
test
jo
mov
cmc
pop
cltd
imul
mov
or
or
dec
in
aaa
lods
cmpl
mov
aas
add
stos
gs
mov
daa
in
mov
in
mov
nop
jecxz
xchg
xor
xor
push
sub
or
dec
mov
clc
cmp
and
les
test
and
jge
sbb
inc
inc
lea
mov
sbb
adc
scas
or
push
jge
scas
mov
or
xor
loopne
icebp
xchg
fsts
fbld
cs
cld
stos
jb
gs
pop
or
add
push
mov
sub
in
cld
in
xchg
mov
lahf
cmp
mov
scas
sarb
jecxz
js
cmp
les
test
add
movsb
idivb
add
and
mov
pop
and
es
dec
leave
cwtl
aas
test
inc
fucomi
addr16
loop
mov
xlat
inc
push
fs
shl
cwtl
inc
inc
inc
mov
mov
repz
ror
jmp
jecxz
push
shrl
or
xchg
jo
mov
sub
lods
sbb
or
mov
jle
subl
push
aas
inc
ret
pusha
push
sbb
xchg
popl
inc
roll
adc
inc
sahf
scas
rolb
scas
ss
fisttpll
add
das
push
les
add
or
jmp
xchg
mov
fs
out
fs
repnz
or
sub
add
mov
xor
jge
xchg
pusha
cli
jae
and
cli
xor
lret
outsb
inc
aaa
and
repz
jmp
imulb
lods
pop
mov
pushf
neg
pop
movsb
nop
rolb
aas
mov
subl
mov
popa
sbb
sbb
fsubrp
add
sbb
mov
jl
out
and
enter
out
xor
fcom
jo
sub
shlb
xlat
adcl
scas
stos
or
mov
inc
adc
lea
and
jg
mov
js
out
prefetch
sbbb
scas
sbb
mov
push
cmp
in
xchg
clc
pop
int3
nop
lock
inc
cmp
sbbl
jge
fcompl
rclb
fwait
mov
inc
lds
pop
adc
inc
mov
call
xchg
and
push
or
lea
inc
cwtl
add
pop
push
jno
dec
lock
jl
mov
rep
pop
cltd
dec
inc
xor
add
mov
pop
sub
mov
mov
cmpsl
add
frstor
mov
and
lds
fwait
lcall
push
dec
mov
add
pop
sub
iret
jae
shlb
shl
gs
ret
and
in
sti
pop
and
in
xor
movsl
mov
shll
mov
sub
lds
cmc
pop
sbb
adcb
mov
fs
cmp
repnz
mov
xor
mov
divl
daa
test
subl
aam
lahf
push
xchg
xor
insl
xchg
dec
or
pop
fimull
mov
scas
and
add
pop
cwtl
pop
test
or
adc
loope
add
cmc
gs
dec
inc
adc
push
add
jp
adc
mov
popa
cs
popa
je
push
les
pushf
mov
arpl
ss
cld
pushl
xchg
stos
pusha
dec
add
pop
xor
sub
mov
out
pop
jg
mov
mov
mov
lahf
mov
mov
lods
mov
sub
mov
aad
call
adc
pop
sub
into
movsb
mov
popf
loopne
out
mov
mov
mov
lahf
rcl
push
adc
mov
and
pop
add
lret
in
adc
out
repz
cmpsl
mov
pop
insl
das
scas
push
add
pop
jge
cmp
decl
xorb
dec
pushf
stos
loopne
div
push
cld
adc
adc
scas
mov
arpl
imul
lods
pop
ficomps
pop
fwait
into
xchg
enter
push
sahf
aad
inc
mov
xchg
rorb
and
outsb
dec
pop
nop
jbe
pop
lcall
mov
sbb
xchg
dec
test
jno
dec
in
sub
pushf
mov
popa
jecxz
or
adc
shl
divl
dec
push
inc
bound
in
jo,pn
cltd
nop
clc
cmp
dec
dec
sbb
mov
hlt
lahf
sbb
in
ds
popa
sub
rorb
dec
jecxz
jne
test
mov
pop
cmpl
js
je
in
cmpsb
xor
ret
inc
jp
je
xlat
shrl
mov
aam
or
cmp
loope
loopne
jmp
inc
sub
xchg
mov
pop
mov
pop
pop
xor
dec
lret
pop
out
enter
mov
bnd
xchg
addr16
xchg
adc
mov
lcall
fldt
repnz
sbb
dec
test
repz
sub
jle
dec
loop
in
or
popf
pushf
push
xchg
push
mov
test
push
xchg
lods
imul
loopne
jb
lahf
fsubrp
xchg
pusha
and
xor
nop
push
push
mov
out
fs
inc
mov
sbb
stc
fcoml
dec
push
cmc
or
movsb
or
or
lods
insb
cmp
jb
das
in
xchg
outsb
arpl
dec
adc
pop
dec
adc
test
ljmp
push
cmp
inc
and
pop
or
imul
imul
push
imul
int
cmp
imul
dec
test
pop
mov
out
mov
mov
push
mov
adc
jae
outsl
add
pop
push
sub
or
inc
out
jbe
fstps
jp
mov
insb
dec
jl
xchg
cmp
mov
inc
mov
sbb
aaa
xchg
leave
cmpsl
mov
sbb
shl
into
popa
add
icebp
or
aam
dec
sub
add
sub
sti
mov
mov
idivl
cmpsb
pop
fsubs
add
cmc
shl
jbe
pop
inc
add
jns
xchg
sub
fdivl
fstp
or
cld
loop
rcrb
xor
adc
ret
xchg
mov
sub
fstl
int3
mov
lahf
sbb
sets
push
inc
out
mov
xchg
cmc
inc
push
push
insl
pop
xchg
inc
insb
sbb
mov
mull
xchg
cs
pop
xor
xchg
jne
or
frstor
sub
add
lea
das
clc
sarl
add
in
les
cwtl
icebp
jno
add
or
aad
cld
or
jmp
aad
bound
decl
cmpsl
jmp
insl
adc
mov
lock
pusha
jecxz
mov
aad
jl
pop
pop
cmp
sub
notb
mov
pushf
add
push
es
dec
ss
stc
push
shld
pusha
loope
sbb
pminub
add
jecxz
jmp
je
in
cmp
pushf
icebp
mov
push
jp
and
ret
jecxz
lret
mov
jb
push
or
jmp
mov
add
dec
bound
mov
adc
stc
push
pusha
jg
sub
in
adc
iret
mov
add
push
fcoms
add
popf
or
icebp
data16
jne
lods
add
bound
sarb
mov
cwtl
adc
fistpl
jmp
and
sub
loopne
rcrb
test
xor
push
pop
pop
mov
jnp
adc
inc
dec
aad
jmp
test
out
std
jle
sub
enter
mov
test
in
data16
mov
mov
std
mov
dec
ljmp
orb
or
test
mov
push
ret
jp
pop
mov
mov
aad
push
shlb
mov
and
xchg
xor
push
mov
arpl
dec
push
loopne
popa
cmp
ljmp
test
jbe
mov
dec
xchg
adc
inc
fcmovbe
push
mov
mov
jbe
arpl
cmpsb
add
popf
add
outsb
xor
push
leave
xor
imul
cmp
jbe
sarb
xchg
jae
push
xchg
xchg
lods
gs
es
ficompl
jne
movsl
fistps
cmc
hlt
shlb
cmpsl
mov
jnp
xchg
out
cmc
scas
hlt
or
das
pop
int3
clc
mov
jnp
sti
mov
lret
repnz
adc
jns
dec
inc
imul
fs
cmpsl
xor
mov
sti
inc
call
cmpsl
cld
add
addr16
adc
add
nop
jmp
mov
dec
ja
adc
mov
nop
dec
shlb
jp
xchg
aas
and
jmp
push
xchg
shll
mov
out
mov
push
mov
imul
push
xlat
test
call
mov
popf
mov
popf
dec
adc
ds
mov
lods
add
push
cli
mov
push
addl
aad
fs
rcrb
repnz
insb
cli
push
loopne
jl
cmpsl
cmp
iret
popa
movsb
xchg
xchg
jo
push
divb
outsl
jp
mov
pop
mov
push
dec
dec
and
jl
cmpsb
dec
inc
dec
pop
pop
bound
jle
pop
xor
or
cmp
pop
pushf
shr
dec
push
push
cmc
push
mov
out
push
call
xor
movsb
add
js
lret
adc
jg
popa
sbb
cmp
pop
lock
fidivl
clc
sahf
push
iret
mov
imul
in
jne
test
jbe
int3
stos
insb
sbb
mov
xor
inc
and
and
pop
mov
ljmp
add
icebp
movsl
or
push
lods
pop
pusha
sbb
loop
aaa
jecxz
call
xlat
ss
repz
jecxz
jle
and
or
mov
sbb
adc
addr16
stos
xchg
add
fwait
daa
mov
inc
ljmp
lret
inc
jnp
push
xchg
adc
sbb
inc
lock
int3
mov
insb
adc
fstps
cmpsb
cmp
cmpsb
inc
jae
xchg
iret
push
push
xchg
mov
xchg
dec
cli
fwait
cwtl
xor
rolb
es
clc
and
push
dec
leave
imul
test
loop
ret
stos
popa
adc
xorl
jecxz
mov
dec
xchg
fbstp
stc
andb
adc
loopne
ret
ja
cltd
mov
push
and
inc
add
js
sbb
loop
aas
and
fidivl
pop
lcall
ja
dec
mov
pop
xor
iret
es
ret
hlt
stc
or
je
mov
ret
mov
fnstsw
aas
jo
add
int3
es
sub
pop
mov
orb
dec
adc
mov
leave
mov
jo
jo
adc
in
aad
sbb
cwtl
dec
sub
push
inc
xchg
fwait
adc
scas
div
seta
dec
dec
jb
jmp
xchg
les
sbb
mov
ds
adc
mov
push
cld
pusha
clc
dec
push
cli
mov
inc
test
lock
xor
mov
push
int
movsl
ret
test
cmp
ljmp
push
lret
ljmp
lret
mov
mov
add
adc
jge
pushf
sbb
nop
lds
dec
and
fnstsw
or
xchg
insb
xchg
out
fs
mov
ror
aaa
out
aaa
sub
in
repnz
loope
push
add
adc
jo
inc
int
mov
leave
dec
cs
aas
clc
mov
sbb
shrb
sub
fnstcw
or
sbb
or
mov
mov
inc
jecxz
add
insl
ljmp
or
pop
loope
dec
and
les
mov
sub
outsb
mov
push
xor
cld
in
dec
rcll
cmc
jae
std
inc
xchg
jne
sahf
pop
lods
pop
cmp
cli
and
or
xor
mov
cmc
adc
mov
cmp
and
pop
xor
lea
dec
mov
aam
jae
xor
lds
subb
out
xor
mov
ret
out
lcall
sub
xorb
sub
movsb
lock
mov
ds
int3
push
mov
fdivrs
sti
cmpsb
fbld
add
sub
rol
popf
lret
and
jne
imul
aad
mov
pushf
jae
push
cmp
push
pop
fstpt
dec
lods
ret
xchg
aaa
xchg
fists
cmp
lahf
dec
adc
mov
cwtl
dec
xchg
dec
fs
push
rcl
xchg
dec
lea
in
icebp
shl
xor
sti
js
inc
xor
xor
out
out
push
push
cmp
fldenv
dec
sub
mov
and
cmp
mov
mov
or
scas
rorb
xchg
mov
sbb
lret
jbe
mov
daa
fdivl
add
notb
pop
lahf
fs
nop
test
dec
into
adc
mov
xor
mov
push
iret
sub
imull
pop
sub
sbb
or
cmc
lahf
fsubp
adc
push
jno
jle
cmp
mov
repnz
test
pop
mov
xchg
sarb
inc
xor
push
shl
push
ret
mov
cmpsb
sbb
cmpsl
xchg
push
adc
aas
adc
xchg
jge
xchg
test
xchg
movsb
mov
sbb
jmp
pop
and
xchg
lods
roll
daa
into
pop
or
insb
add
adc
lods
lea
mov
rol
sbb
dec
arpl
and
movsl
push
sahf
jmp
xchg
jo
cwtl
or
mov
cmp
pop
popf
lret
adc
inc
rcr
fildll
cmp
mov
cmpb
and
mov
jmp
in
mov
pop
ja
insl
mov
push
or
mov
adc
sub
adc
sub
push
enter
mov
mov
or
outsl
mov
fsts
cmp
js
inc
lods
mov
into
test
scas
mov
lock
imul
lret
lock
xchg
in
imul
adc
push
test
cmpsl
rolb
xor
divl
xchg
push
xchg
sub
fbstp
imull
cmpsl
iret
xchg
jbe
mov
mov
int
inc
lcall
jmp
ss
mov
je
fwait
pop
push
fiaddl
aam
sub
push
jle
inc
es
adc
loope
fucomi
sbb
jb
test
xor
ss
jmp
mov
dec
cmp
jg
sub
mov
ss
in
mov
mov
pop
imul
xchg
out
outsl
pop
inc
in
frstor
insb
pop
sub
adc
jl
insl
xchg
addr16
lret
aam
pop
sub
shlb
or
fnstcw
mov
fadd
pop
and
and
or
movsb
or
pop
xchg
ja
push
aaa
cmpsl
dec
xchg
enter
pop
std
test
dec
cmp
sub
test
rolb
loop
sbb
stos
xlat
or
ljmp
aad
mov
mov
arpl
out
int3
jbe
jae
pop
dec
leave
les
sarb
xchg
sub
inc
xorl
jae
stos
jge
push
ss
mov
pusha
repnz
imul
mov
cmp
push
std
daa
mov
or
stos
mov
les
pop
or
cwtl
repz
mov
push
add
es
je
dec
mov
pushf
add
cmpsl
push
ja
popf
mov
sub
jne
dec
xchg
xor
sub
jg
cmp
and
push
xor
outsl
fistps
cmp
dec
sbb
or
cmp
jno
clc
push
fwait
mov
push
and
mov
pop
int3
mov
daa
loope
mov
adc
push
push
or
xchg
shl
jl
pop
xchg
aas
cmpsl
gs
data16
pop
xor
psrlw
xor
mov
dec
pop
movsb
cmp
jle
push
sbb
shlb
repnz
addl
lea
sub
stc
mov
push
cld
push
sub
out
into
lret
data16
jne
lods
or
xor
les
lods
lret
dec
mov
in
xchg
outsb
mov
mov
js
in
push
mov
mov
jnp
arpl
fsub
mov
stos
adc
jno
fadd
sarl
cmc
xchg
sub
bound
pushf
gs
sbb
fmuls
sti
movsl
inc
pop
jae
mov
addr16
and
ss
aas
xor
jmp
mov
push
pop
xor
xor
mov
inc
and
rclb
faddl
pusha
nop
fistl
jmp
xchg
mov
mov
inc
scas
sbb
cmpsl
cs
out
aam
jnp
dec
bound
decl
addb
and
mov
cli
inc
js
lcall
mov
repz
mov
call
jbe
sub
sbb
bound
ja
xchg
imul
data16
pop
add
mov
adc
xor
bound
jl
sbb
dec
jg
mov
idivb
leave
and
loope
cmp
out
pop
or
xchg
test
jb
push
popa
sbbb
cmc
subl
push
mov
mov
pop
test
in
jbe
dec
mov
sbb
sub
hlt
sbb
aam
inc
out
ficoms
mov
push
ret
aaa
sbb
ret
test
aam
hlt
dec
out
dec
hlt
stc
lahf
cltd
mov
pusha
add
mov
mov
mov
push
xor
sbbl
mov
std
ret
out
in
test
push
hlt
cwtl
dec
test
lret
sub
scas
push
sahf
adc
and
out
aad
les
add
fs
xor
cmp
dec
pop
pushf
fnstenv
daa
je
adc
dec
shll
movsb
mov
imul
lret
and
test
sub
sbb
aad
mov
adc
scas
jge
aam
pop
or
vmwrite
inc
pushf
or
lea
insl
repnz
insl
pop
ljmp
jp
push
scas
popf
jle
rcll
inc
daa
pop
sbb
clc
and
fdivrs
inc
in
jg
adc
sub
bound
ss
sub
fsubs
cmpsb
adc
jmp
xor
cld
add
push
loop
jnp
push
or
xchg
push
imul
fsts
add
jg
mov
mov
sbb
loop
push
mov
ret
sbb
xchg
xor
jp
les
repz
jne
gs
out
insb
arpl
sub
xchg
and
pop
subl
lahf
std
cmpsb
test
je
sbb
gs
loop
or
hlt
stos
pop
mov
xchg
and
pop
or
and
mov
test
sbb
sbb
dec
roll
pop
ret
pop
sub
lahf
daa
lret
push
nop
mov
popa
cmp
xor
ffreep
shrb
pop
mov
cltd
movb
push
imul
adc
popf
pop
ss
dec
jae
in
and
add
xchg
push
mov
mov
inc
pop
addr16
mov
xor
mov
aaa
scas
bound
sarb
insb
movsl
lock
in
xchg
scas
mov
in
fstpl
lds
movsl
add
pop
or
dec
fs
jl
rcl
cmpsb
cmp
inc
push
mov
xlat
xor
and
cltd
push
inc
pusha
ss
ds
push
push
mov
mov
jge
and
sub
vprotb
push
shll
lret
imul
cwtl
mov
mov
add
lahf
ror
hlt
adc
fcoms
ljmp
jae
mov
xchg
cmpsb
xchg
into
loopne
scas
leave
test
mov
out
dec
dec
xor
mov
cmpsl
lahf
in
xor
lret
pop
mov
adc
and
cmp
pop
pusha
sbb
dec
aad
sbb
xchg
jp
scas
and
pop
cwtl
or
push
or
cmpsl
jmp
sarl
lahf
adc
xchg
push
inc
bound
xor
xchg
jp
sbb
add
icebp
es
mov
test
je
insl
ret
xor
jne
or
or
rcrb
loop
xchg
fisubl
call
divb
lods
mov
repnz
je
mov
mov
inc
lock
clc
ss
in
leave
mov
and
xchg
dec
das
or
mov
push
movsl
mov
test
aam
vmread
cmc
nop
repz
xchg
sub
popf
mov
cmpsl
bswap
xchg
sub
icebp
scas
je
adc
push
nop
aaa
jbe
out
xor
pop
or
add
xchg
jecxz
push
shl
lahf
mov
jl
or
jne
or
mov
imulb
sub
outsl
cli
mov
xlat
aas
mov
icebp
adc
icebp
push
sbb
lods
push
fimuls
mov
aas
xor
jp
clc
sbb
scas
jnp
adc
or
scas
lock
xchg
pusha
stos
aad
addr16
ss
pop
test
into
mov
add
dec
sub
push
loop
jle
js
add
mov
adc
jl
jno
lret
mov
xlat
int
jg
adc
dec
jl
lret
mov
lahf
pop
xor
and
jmp
sahf
inc
test
in
cmp
icebp
jne,pn
pop
lods
cmc
pcmpgtw
xchg
jge
pop
cmpsl
mov
fsubs
push
xor
push
jmp
enter
cmpsl
test
xchg
sti
xor
rcrl
dec
push
push
addr16
mov
inc
cmpb
mov
mulb
and
pop
dec
nop
mov
jb
out
flds
mov
movb
xchg
adc
xchg
adc
insb
push
push
ljmp
in
xchg
add
inc
mov
push
mov
jle
inc
cltd
or
addr16
das
jmp
test
pop
mov
out
mov
dec
lock
ret
outsb
adc
inc
nop
cmp
popf
mov
xchg
add
sbb
mov
mov
idivl
and
adc
into
cpuid
out
xor
jo
adc
fidivs
jle
sub
jp
test
push
xchg
ret
sahf
inc
or
scas
add
mov
hlt
and
mov
in
loop
testb
pmulhuw
in
xor
adc
and
cmc
lret
icebp
iret
loope
xor
bound
mov
andl
insl
leave
jns
mov
sti
int3
clc
mov
xchg
and
shll
xlat
xchg
jge
repz
lods
push
dec
xchg
icebp
sub
inc
roll
shl
out
inc
sub
xchg
dec
pop
or
and
les
out
sbb
fbstp
cli
popa
lcall
or
enter
lret
push
and
sub
push
push
movsl
xchg
in
sar
js
mov
jmp
shrl
js
pop
push
xchg
push
add
dec
es
in
ss
mov
std
cs
movsl
test
icebp
enter
ret
int3
inc
cmpsl
imull
test
push
mov
sti
push
push
je
mov
dec
mov
rorl
mov
sub
mov
lds
push
inc
movsb
add
adc
inc
enter
mov
push
movsl
jge
dec
push
test
js
cld
dec
lods
addl
icebp
dec
sub
cli
lret
push
rcll
hlt
mov
cltd
hlt
or
in
fstps
jmp
jbe
mov
sbb
lods
roll
aas
jecxz
js
popa
cmp
pop
add
inc
pop
test
ds
shlb
je
inc
mov
fs
xchg
mov
push
insb
jbe
mov
out
mov
xchg
sti
insl
sahf
fidivs
or
fdivrl
mov
ja,pn
outsl
aam
leave
int
into
out
lods
pop
lea
sahf
mov
xor
xchg
ss
sarb
add
popa
daa
or
dec
lock
inc
dec
xor
lods
mov
cli
call
xchg
out
fsts
daa
cmp
jns
out
pop
jle
repz
xor
xchg
dec
push
out
adc
adc
scas
pop
xchg
mov
xchg
jo
lds
ss
dec
popa
xchg
push
call
mov
adc
in
pop
dec
out
enter
dec
in
cld
cs
dec
inc
xchg
ret
push
pop
pop
mov
or
mov
mov
leave
enter
pop
sub
jge
sbb
jne
test
out
js
lods
arpl
pop
or
dec
pusha
test
cmp
inc
sbb
sub
jns
arpl
ficoml
fcomps
jno
pop
add
sbb
pushf
shll
adc
mov
jg
pop
cmpsl
or
movsb
mov
jns
pop
fadds
xchg
outsl
xor
into
mov
mov
dec
add
adc
sbb
call
gs
lahf
out
cld
outsb
cmp
push
add
jae
sahf
cmp
aad
adc
shlb
cmp
in
shlb
xchg
pop
lret
mov
test
pushf
sbb
add
pop
les
mov
leave
hlt
pop
mov
ss
into
jmp
loopne
inc
sub
adc
aaa
mov
pop
pop
sub
loop
imul
int3
pop
inc
xor
scas
add
jmp
xor
dec
daa
adc
test
out
jns
outsl
fs
or
jmp
pop
mov
dec
mov
aaa
aaa
push
mov
xchg
cwtl
daa
mov
dec
dec
add
inc
popf
pop
into
mov
ljmp
sub
mov
mov
out
rclb
repnz
adc
add
sbb
arpl
inc
lcall
push
fdivr
cmp
jmp
jmp
mov
cld
pop
cmp
cmp
mov
test
lds
aam
adc
nop
addl
jecxz
popa
fsub
pop
mov
int3
sub
js
fimull
rcrb
lods
mov
mov
rorb
mov
in
adc
jp
sub
jo
add
xchg
mov
mov
xor
xchg
dec
xchg
xchg
cmc
adc
test
add
or
cmp
cmp
add
fsubl
cmpsb
mov
js
in
inc
pop
xor
cmp
outsl
adc
sub
mov
mov
rorb
mov
pop
mov
and
aam
daa
mov
fisubrs
outsl
push
xor
adc
or
mov
mov
sub
mov
fldenv
pop
jmp
push
notl
cmp
call
sbb
pop
push
int3
push
sbb
int
adc
cmp
mov
add
inc
in
mov
sbb
in
sarb
shrl
movsl
adc
adc
fldenv
sbb
push
mov
jmp
inc
popf
dec
inc
lahf
add
test
push
fnstenv
push
sbb
xor
negl
enter
xchg
jg
in
call
mov
add
push
xchg
loope
or
pushf
sub
fsub
push
mov
mov
dec
gs
inc
shll
push
movsl
mov
cmp
ds
orl
cld
sti
sbb
pop
repz
mov
jge
fdivrl
xchg
pop
dec
mov
insl
ljmp
jecxz
jo
lahf
pop
lods
fstps
mov
lods
jle
xor
imul
push
stos
jle
push
scas
pop
jne
xlat
add
hlt
subl
or
mov
xchg
xor
js
ja
movsl
cmpsb
push
xchg
ss
xchg
into
add
sub
push
xchg
jmp
subl
rclb
add
lds
adc
dec
lcall
popf
inc
out
repz
fwait
or
push
into
mov
fs
dec
sbb
pushf
mov
sub
mov
pushf
xor
out
lods
mov
movsl
test
sti
fadds
mov
push
sbb
xchg
inc
neg
inc
push
jae,pt
pop
xor
xchg
and
call
shll
push
lock
or
pop
pop
in
pusha
sbb
xchg
inc
js
lds
jns
nop
or
stos
adc
mov
mov
dec
xchg
vmwrite
sub
test
mov
dec
sbb
pop
adc
dec
cwtl
dec
jg
in
jg
loope
pop
dec
dec
dec
or
xchg
sbb
jbe
jbe
push
jge
xchg
in
jl
imul
popf
sub
hlt
clc
orb
out
xchg
jno
xor
xorl
sub
dec
hlt
sti
inc
gs
outsb
jmp
pop
subb
hlt
stos
sbb
scas
dec
xor
and
push
loopne
mov
dec
ljmp
lahf
or
aad
xor
jge
out
inc
xlat
or
inc
xor
mov
push
xor
xchg
scas
dec
insl
sbb
fwait
stos
ja
mov
and
inc
adc
dec
jb
or
test
cli
jl
es
pushl
and
dec
cmc
adc
mov
push
sub
or
add
xchg
gs
arpl
push
andl
pop
scas
inc
stc
and
in
fldt
inc
das
mov
into
fucomip
jbe
shl
inc
scas
add
int
jp
inc
icebp
mov
push
push
xchg
jl
test
cmp
cli
ja
fucom
push
jge
aaa
scas
inc
mov
inc
test
pop
mov
xchg
pop
push
fdivrs
sahf
or
rcrl
testb
xor
xchg
sti
xor
lock
jecxz
mov
and
pop
sti
in
mov
push
stc
xchg
push
jno
je
ds
scas
int
and
cmpsl
fwait
imul
outsl
adc
test
cltd
jae
je
mov
lahf
mov
popa
shr
cltd
in
idivl
mov
or
sbb
mov
nop
pop
je
inc
in
js
mov
sub
mov
mov
push
xor
out
sbb
pop
pop
or
cmp
mov
mov
add
adc
dec
imul
out
add
dec
xchg
adc
inc
movsl
and
popa
cld
std
push
inc
stos
or
shlb
fcomip
in
call
push
jne
icebp
xorb
adc
mov
jbe
or
out
pop
cs
mov
lcall
sub
js
out
sub
iret
adc
test
adc
push
and
fadds
mov
sbb
mov
add
ljmp
push
sub
sub
mov
inc
loop
int3
in
cmp
dec
jg
lret
shr
scas
pop
ljmp
stos
inc
icebp
test
mov
pop
sbb
jae
fsubl
xor
inc
outsb
movsb
push
pusha
jmp
mov
aas
notl
in
dec
push
jle
in
cs
ret
push
pop
cmp
icebp
inc
shl
sbb
push
jo
mov
pop
ss
pop
ss
inc
aaa
and
clc
inc
mov
sub
lcall
in
mov
push
mov
xchg
push
add
orb
dec
push
fldt
xor
lret
jecxz
addr16
gs
push
xchg
cli
push
pop
jge
pop
in
inc
mov
call
xor
inc
pushf
mov
xchg
jae
sub
popf
aas
pop
cli
dec
pop
gs
mov
aaa
fmuls
notb
imul
xor
mov
scas
lcall
mov
aad
fbstp
inc
pop
pusha
outsb
and
out
or
cwtl
xor
mov
and
sub
imul
pop
cmp
jp
daa
sub
paddusb
add
div
push
repz
sub
pop
jo
fisubrs
stc
ljmp
pop
mov
imul
or
lcall
push
iret
in
push
mov
add
dec
add
leave
push
mov
adc
in
jge
and
in
int3
cmp
test
es
dec
or
mov
pop
cmp
push
sbb
repnz
pop
xchg
sbb
push
or
out
xchg
cld
add
and
shrl
rcl
jp
and
inc
mov
inc
test
add
add
scas
or
xchg
cltd
roll
cmp
movsb
js
push
jl
lea
jae
sub
jno
inc
fprem
adc
cmp
jno
dec
and
or
lret
xor
das
inc
fldenv
mov
xchg
popa
xchg
pop
ljmp
push
mov
adc
fbld
mov
ljmp
add
in
mov
sbb
jb
xor
dec
add
mov
inc
lea
outsb
push
mov
in
aas
aas
xchg
into
xchg
in
lret
rcrl
mov
sbb
pop
jp
fbstp
adc
mov
cmp
dec
movsl
data16
jg
xchg
xor
in
insb
cmp
push
sbb
inc
arpl
mov
inc
stc
lock
dec
pop
or
in
xacquire
push
pop
xchg
gs
inc
and
jge
int3
test
scas
nop
lcall
cmp
je
inc
mov
loop
mov
neg
lods
dec
dec
or
scas
test
push
lock
int
jne
mov
mov
mov
dec
je
pusha
imul
ror
mov
das
push
mov
js
adc
decb
push
push
add
inc
stos
add
inc
mov
xchg
rcrl
pop
lods
imul
insb
jge
inc
das
lea
out
lods
adc
cltd
mov
mov
jno
sub
xor
mov
fcomp
xchg
xor
mov
and
movsbl
sti
jae
jge
sbb
das
test
lahf
xchg
push
clc
xchg
pop
and
in
mov
xor
movsb
out
movsb
stos
push
movsl
mov
fsubs
inc
xor
push
fidivl
or
jno
loop
jmp
psrld
rcll
dec
sub
out
xlat
push
neg
lcall
popf
gs
cmc
push
mov
in
out
xor
cmc
out
gs
dec
pop
dec
pop
pushf
cwtl
je
fcompl
lds
add
cltd
std
sbb
or
lahf
inc
xchg
xchg
loopne
mov
in
lock
adc
pop
dec
xor
push
sahf
repz
mov
movsl
pop
sti
cmp
cmpsb
mov
or
call
mov
and
pop
dec
mov
test
push
shll
jo
fistl
adc
les
push
stc
cli
in
out
push
imul
lret
aaa
mov
cmp
inc
enter
add
inc
xchg
je
push
loope
scas
pop
movsl
mov
insb
adc
pop
pushf
cmpsl
ret
push
mov
inc
lret
mov
pushf
aad
mov
inc
sahf
pop
into
push
sub
and
mov
pop
insb
inc
sti
repz
sub
sub
mov
pop
jno
call
aas
in
aaa
jge
pop
shlb
dec
sbb
repz
mov
or
jg
push
fistps
push
sbb
test
hlt
and
sbb
outsb
dec
nop
je
lahf
dec
push
dec
cmc
mov
cld
leave
das
push
jl
mov
cld
jle
das
rcr
cmc
mov
jb
add
dec
or
mov
and
mov
or
ljmp
push
xchg
rclb
decb
cmp
lock
add
into
stos
inc
xchg
mov
ljmp
adc
mov
or
pusha
jo
cmp
jmp
inc
cs
in
mov
mov
inc
push
shrl
adc
xor
movsl
fsubl
stos
icebp
rolb
je
nop
add
add
push
ljmp
cmp
arpl
lock
inc
mov
mov
leave
inc
sbb
leave
xor
shlb
cmp
pop
push
mov
mov
into
out
and
mov
sbb
dec
fwait
inc
outsb
out
imul
push
or
jnp
lcall
movsl
push
mov
popf
pop
testl
andl
pop
daa
dec
push
inc
hlt
push
ret
loopne
push
int
loope
bnd
les
or
adc
ss
push
jbe
iret
mov
cmp
inc
test
push
pop
ja
pop
inc
mov
xor
push
pop
cli
adc
lods
or
cltd
dec
fadds
int
cmpl
ja
ret
xchg
lret
fwait
or
xchg
testb
int3
rolb
icebp
pop
xchg
mov
aas
fldl
push
out
xchg
stos
mov
repz
cli
xchg
adc
inc
test
pushf
ficoml
xlat
sbb
lret
addr16
xchg
fwait
xor
das
pop
js
push
inc
add
shll
sti
bound
int3
movsb
mov
cmp
bound
dec
pop
jb
imul
leave
arpl
arpl
lods
stos
lds
lock
adc
lea
jmp
and
xchg
outsl
movsl
dec
xchg
add
fisttpl
jnp
lock
mov
pop
jecxz
sub
or
test
int
sbb
outsl
test
shlb
xor
mov
mov
cmp
sub
fildl
dec
dec
sti
mov
push
fs
dec
int3
cld
pop
xchg
pop
dec
orb
sbbb
mov
cmp
orl
xor
sbb
mov
cmp
dec
push
push
ret
adc
ja
mov
cltd
je
pop
fwait
xchg
xorb
xlat
push
pop
sti
mov
mov
xchg
push
inc
cmp
loopne
mov
shll
mov
nop
das
mov
and
push
ljmp
or
cld
jp
enter
int3
mov
ljmp
cmpsl
rcr
mov
mov
mov
mov
fnsetpm(287
pop
cwtl
call
aad
pop
jae
add
mov
loop
cld
adc
and
jbe
mov
xchg
rcll
popa
push
sub
mov
xor
adc
imul
mov
xchg
push
push
loope
aaa
xchg
andl
and
xchg
lret
cmp
sub
cmp
int
add
mov
xchg
pushf
xchg
inc
je
jno
push
mov
clc
in
inc
xor
jmp
add
loopne
fildll
pop
movsb
int3
fiaddl
bound
shr
test
mov
or
sbb
je
lock
pop
mov
shrl
dec
and
in
mov
cmp
xchg
aas
push
call
enter
adc
ds
sub
cmc
and
pop
adc
aad
clc
mov
adc
jo
mov
orb
in
lock
mov
or
and
outsb
imul
inc
jno
inc
lds
cld
push
in
mov
mov
or
cmp
fsubs
adc
add
mov
stos
fs
sbb
movsb
loope
mov
push
pop
cmp
lock
push
xchg
ljmp
add
ret
push
adc
push
mov
add
mov
inc
mov
xor
icebp
adc
xchg
jno
aad
mov
dec
pop
pop
ret
jmp
ror
insl
test
or
xor
loop
test
std
dec
jmp
sub
lods
in
je
fwait
mov
dec
repz
xor
cwtl
cmp
jne
inc
sbb
shl
mov
or
into
test
pushf
inc
out
and
cmpsl
loopne
aaa
xor
in
pop
xchg
das
cmp
mov
dec
jb
loope
pop
sbb
jae
rorl
out
lock
out
xor
loop
ljmp
mov
loopne
ror
lret
imulb
outsb
mov
testb
bound
xchg
xchg
popf
les
adc
daa
bound
popl
test
iret
push
faddl
mov
leave
loop
or
jge
add
scas
sub
outsl
mov
cs
dec
lea
sbb
lcall
icebp
mov
sbb
fisttpl
jb
xchg
je
and
sahf
leave
push
sbb
lret
leave
mov
mov
idiv
out
int3
cmp
mov
and
rolb
cmc
mov
clc
ja
pushf
mov
jmp
push
jno
pop
repz
rorb
fs
das
lods
mov
pop
and
inc
cmc
jl
mov
pusha
lods
es
lcall
imul
ja
out
jae
lret
bound
lahf
inc
je
test
inc
pop
loopne
mov
sarl
addr16
adc
in
push
rorl
std
ljmp
add
in
mov
repnz
xor
and
fldcw
imul
into
pop
mov
inc
imul
add
adc
lret
mov
les
ret
cmp
popf
jle
stc
and
dec
in
fdivr
adc
xor
rclb
sub
or
testl
scas
xor
pusha
mov
cmp
data16
test
fbld
fsubs
dec
push
dec
sti
cwtl
clc
inc
xchg
push
cmp
or
mov
lock
xlat
mov
push
inc
fisubs
out
shlb
pop
fmul
and
push
sub
jge
sbb
jp
fisubrs
ror
ljmp
leave
ret
mov
dec
push
xchg
aam
outsb
mov
popaw
mov
ret
push
sub
lods
es
push
and
stos
push
sbb
ds
popf
aad
mov
cltd
push
popf
out
xor
imul
dec
xor
and
out
sbb
enter
mov
arpl
loopne
lods
jp
cwtl
jg
shlb
movsl
xchg
pop
add
push
out
add
fs
arpl
add
gs
test
push
add
jo
push
push
sub
xchg
das
idivl
inc
dec
jge
xchg
adc
dec
fbld
data16
rclb
push
push
test
repz
mov
dec
scas
jo
mov
fildl
cmp
jns,pt
pop
mov
loop
ljmp
lret
sbb
inc
aam
jl
outsb
push
push
adc
xor
cld
jmp
mov
dec
xor
test
and
add
and
jecxz
andb
lods
dec
mov
ljmp
sbb
stc
rclb
adc
xor
stos
add
xchg
mov
adc
push
fmull
cmp
mov
inc
adc
add
jno
in
jo
add
sub
rolb
cmp
add
push
xor
xchg
jns
loope
and
lahf
ja
xchg
mov
adc
fdivp
and
add
add
adc
mov
cmpsl
sbb
and
add
inc
or
pop
aad
mov
push
xchg
stc
or
mov
shl
or
mov
loope
adc
outsl
cmp
insl
es
out
loope
xchg
jns
mov
xor
out
clc
pop
sub
shrl
enter
popa
hlt
cs
adc
inc
stos
cmc
fstps
cli
mov
xor
cmp
jnp
xor
jmp
jmp
cmpsl
and
insl
mov
fstps
in
xchg
shll
sub
or
movsl
andb
insl
mov
mov
and
enter
cltd
xor
or
pop
ss
jbe
inc
cmp
bound
jo
mov
mov
add
sub
popa
addr16
fs
mov
sub
mov
dec
push
xor
ja
mull
dec
sbb
daa
adc
push
inc
std
lock
cmp
push
or
js
ret
lock
push
repnz
cmc
cmpl
pop
insl
xchg
out
push
int
mov
fnstenv
cmc
xor
push
jo
adc
jbe
add
xchg
rclb
sbb
and
fsubs
xor
mov
int
shl
add
lods
lahf
call
sub
leave
pusha
mov
lcall
pop
pop
push
repnz
and
mov
push
orl
bound
icebp
xor
test
rcll
ret
push
xchg
int3
dec
addr16
lea
pop
movsl
scas
in
mov
and
mov
cmpsb
add
inc
jns
movl
sahf
and
ss
push
mov
andb
shll
mov
cmpsb
ret
insb
mov
mov
sti
jmp
push
lret
popa
push
inc
insb
pop
mov
out
inc
outsb
cltd
mov
ret
mov
jge
into
sub
add
nop
add
dec
sbb
xchg
mov
dec
movsb
mov
sub
jbe
mov
fiadds
fwait
fwait
push
cmpsl
mov
rcll
jle
loopne
pop
mov
jb
gs
mov
cmpsl
adc
push
loop
fwait
pop
xchg
adc
aad
dec
mov
pushf
in
loope
in
lcall
aam
mov
rcrb
ret
pop
inc
iret
notb
xor
mov
dec
out
pusha
in
xlat
xorb
adc
stos
mov
push
shll
xchg
push
lcall
sbb
mov
add
movsl
test
pusha
jp
shlb
cmp
outsb
add
ds
inc
inc
inc
pusha
sbb
loopne
inc
sbb
xor
mov
fbstp
xor
lahf
faddl
hlt
xchg
test
mov
inc
insb
and
out
test
rcrb
push
push
xor
es
jno
push
cmp
mov
jmp
mov
in
dec
repnz
dec
outsb
adc
dec
cmc
fidivl
sti
xor
pop
mov
rcrb
imul
dec
dec
gs
inc
jns
insl
sbb
into
mov
push
mov
test
pop
sbb
push
pop
jl
insb
push
xor
cld
xor
mov
fwait
out
push
mov
pusha
out
hlt
jge
fwait
cmp
xor
es
and
imul
jge
pop
mov
cld
add
cmpsl
cmc
xor
push
lock
lret
aad
or
inc
pop
fistl
mov
dec
mov
lds
mov
orl
lret
dec
inc
sbb
mov
rolb
fldenv
stc
aad
andl
pop
es
test
xchg
dec
xlat
xchg
aaa
xor
subl
cmp
in
and
push
scas
dec
lcall
movsb
and
sub
out
pusha
outsb
test
cmpsb
adcb
lret
movsb
jle
push
mov
jmp
mov
or
mov
and
mov
scas
inc
test
cmp
or
roll
fsubl
ret
fs
aam
adc
test
fstpt
pop
repz
popf
xchg
iret
jge
shl
arpl
dec
mov
push
jge
loop
push
filds
push
mov
inc
dec
in
inc
mov
mov
movl
clc
leave
mov
jbe
xlat
test
sub
mov
xchg
and
cmp
dec
addr16
repz
cmp
dec
lcallw
inc
add
or
jno
adc
mov
insl
cmp
mov
inc
mov
fwait
mov
adc
and
dec
xchg
sub
jl
push
sub
filds
push
les
ficompl
xchg
bound
mov
or
lahf
and
lret
mov
fnstenv
mov
aaa
pop
lods
sub
mov
mov
mov
fdivl
lods
stos
test
aas
inc
lods
gs
sub
lcall
jo
jp
mov
xlat
test
dec
xchg
xor
or
fldl
lea
jge
bnd
stos
daa
daa
cmpsb
fldt
mov
cmp
insb
mov
pop
push
xchg
jmp
push
out
push
cmp
xchg
ffreep
dec
pop
inc
clc
sti
popa
add
testl
push
push
imul
mull
lods
shlb
or
cmp
or
popf
daa
shlb
test
inc
mov
nop
int3
subb
jecxz
or
ja
pop
ret
mov
mov
scas
es
mov
xlat
jnp
dec
imul
push
out
movsb
add
xchg
loope
adc
sbb
push
loope
daa
popl
inc
mov
fwait
dec
daa
sarl
or
or
lret
aam
xchg
add
sbb
repnz
lahf
addw
int
push
jb
push
mov
ss
mov
ljmp
sbb
xchg
test
mov
add
nop
rol
rorb
into
es
enter
cltd
rolb
add
cli
jp
xchg
dec
ss
cmc
mov
aam
jmp
lea
cmc
cwtl
or
sahf
loopne
das
sub
add
call
stos
dec
cmp
outsb
mov
mov
jge
sarb
cmp
and
and
paddd
sbb
mov
outsb
jecxz
lcall
dec
je
inc
cli
xchg
sahf
pop
shlb
daa
daa
fsubp
loope
mov
mov
dec
mov
dec
mov
outsb
add
popa
shr
adc
outsb
daa
test
aas
add
dec
pop
xlat
pop
outsl
daa
pop
shl
subl
fcomps
dec
cs
pop
inc
and
lretw
pushf
add
mov
cmp
mov
callw
cs
xor
addr16
jmp
mov
mov
iret
clc
mov
bound
rolb
roll
pop
and
mov
int
push
mov
fwait
pushf
or
and
mov
pop
sbbb
xchg
push
inc
mov
inc
int3
pusha
mov
xchg
mov
dec
and
es
repnz
das
adc
cmp
out
push
xor
push
loope
jmp
shlb
sbb
pop
in
jnp
scas
cs
add
cmp
ss
cmp
out
push
push
int3
dec
in
jb
sarl
xlat
mov
cltd
inc
pop
xchg
cld
cmp
fstl
loope
ret
cmp
add
cmpsl
dec
jp
mov
dec
test
push
xor
aad
mov
ja
or
add
hlt
ss
jge
mov
test
test
lcall
movsb
int3
pop
mov
data16
jle
jae
pop
xor
clc
ret
rclb
jo
sub
call
inc
hlt
lds
scas
jns
jns
aaa
xor
ds
xor
push
and
mov
cmp
ja
sub
test
adc
cmp
jl
ss
jmp
pop
inc
cli
push
scas
sbb
sub
and
mov
in
cmpsl
imul
scas
push
scas
ss
xchg
sbb
addb
out
call
repz
int
add
sub
stos
adc
pop
or
lods
pushf
aas
pop
gs
push
and
xchg
cmpsb
adc
sbb
mov
jl
nop
xchg
pop
and
jmp
in
icebp
xchg
testb
pop
stc
shlb
and
loop
push
lret
push
sbb
outsl
mov
pop
in
xchg
jo
push
aam
and
mov
in
scas
sbb
jle
outsl
push
daa
std
or
cli
lahf
mov
imul
aad
mov
shlb
outsl
jp
movsb
in
xor
aam
dec
sbb
mov
jl
xchg
inc
pop
sti
mov
xor
cmpsb
xchg
mov
sbbl
jnp
cmpsl
mov
jne
in
shrl
faddp
loope
addr16
les
fnstcw
mov
jge
pusha
outsb
fs
xchg
scas
mov
jmp
xchg
ja
fs
cmp
scas
sahf
mov
mov
jae
aad
lea
push
mov
icebp
mov
cwtl
es
jge
fdivrs
push
xchg
pop
ret
xor
lret
insb
mov
ret
loop
mul
ja
ja
scas
aas
sub
jo
test
pushf
xor
pop
add
sub
or
pop
in
int
leave
shl
ljmp
hlt
adc
lret
incb
sub
adc
mov
hlt
xor
or
insl
push
xchg
or
fimuls
xor
adc
stos
xchg
scas
xchg
in
jno
pop
push
pop
pop
icebp
les
dec
aas
xchg
out
sub
add
mov
sub
stc
loopne
cmp
mov
out
loope
lahf
mov
lret
mov
adc
movsl
xor
mov
cmp
or
inc
rcrb
push
mov
jl
mov
scas
fldl
xor
sbb
fs
mov
add
lret
or
mov
adc
jmp
shll
rsm
hlt
orb
ja
or
sbb
mov
ror
add
push
sub
dec
sub
test
push
ret
adc
jecxz
mov
jg
outsl
data16
jle
cmc
sub
mov
jecxz
inc
sub
sti
xchg
out
andb
mov
std
fsubs
or
inc
push
mov
in
sub
sbb
xchg
mov
lock
pop
pop
loope
xchg
add
popa
stos
movsl
pop
sbb
arpl
lds
add
cmp
lahf
jae
jge
pop
mov
sub
cmp
jno
es
out
cmp
frstor
lret
or
int
fsts
outsb
xchg
xor
mov
clc
or
fsubrs
xchg
leave
pop
jnp
aam
xchg
pushf
ljmp
in
ds
dec
inc
sub
dec
in
and
lea
fsts
mov
stos
pop
jnp
mov
loope
mov
les
or
sub
sub
pop
xchg
out
sbbb
and
enter
sub
adc
jb
pushf
dec
call
cli
jg
mov
xor
inc
sub
sub
xor
or
pop
adc
dec
mov
sub
bound
jo
sbb
out
jnp
push
xchg
loope
push
mov
lods
ss
data16
push
fimull
stos
iret
lds
inc
sbb
mov
cli
push
cltd
fwait
nop
jb
cmp
dec
out
dec
push
lret
add
fisubs
les
mov
mov
pop
cmpsb
stos
imul
popa
dec
and
mov
or
imul
aad
sbb
cli
jmp
lret
inc
sbb
dec
std
gs
push
out
repz
push
lods
push
ds
push
sbb
test
push
sub
mov
jg
test
scas
mov
cli
mov
mov
jl
stc
es
cwtl
pop
sbb
stos
inc
pop
mov
enter
mov
mov
cmp
divb
xor
stmxcsr
dec
sbb
pop
cmp
loop
adc
fiaddl
sub
pusha
pop
pop
dec
add
push
pop
subb
or
xlat
jnp
or
out
push
dec
mov
ficompl
int3
mov
add
sub
cmpsl
mov
cwtl
mov
inc
int3
jmp
mov
xchg
decl
push
stos
popa
shl
fldl
mov
in
loop
rorb
insl
and
out
shlb
and
xchg
fsubs
pop
push
enter
in
dec
popf
sub
mov
xor
int3
adc
pop
push
je
shr
xlat
dec
xlat
ret
add
sbb
shll
hlt
push
daa
xor
inc
insl
xor
sarl
out
scas
pop
push
gs
or
movsb
cmp
dec
push
dec
cmp
sbb
decl
pop
xor
imul
jb
cmpsl
xchg
movsl
lret
xorb
pop
ret
insl
sbb
lcall
adc
imul
jecxz
gs
fcmovnbe
out
roll
orl
push
add
ret
inc
imul
and
negl
pusha
mov
out
inc
into
lcall
imulb
sub
insb
subb
jg
in
push
mov
in
mov
sbbl
adc
lods
xor
xor
cld
mov
pop
mov
arpl
push
scas
daa
mov
imul
sti
aas
inc
insl
lret
sub
cmp
sub
lea
mov
or
sarl
pop
sbb
fstps
hlt
pushf
pop
js
jmp
dec
divl
xchg
outsl
outsl
mov
bound
test
adc
imulb
aas
test
jg
fmul
mov
outsl
imul
clc
lods
mull
test
loop
nop
daa
ds
add
scas
call
cmp
lahf
jb
adc
jnp
int
lea
iret
jge
int
xor
gs
push
pushf
mov
adc
sti
out
inc
lret
sbb
lds
jnp
push
rorb
movsl
lret
xchg
sarb
mov
mov
hlt
xchg
cmp
dec
push
mov
repz
std
or
cmp
pop
cmp
and
mov
jl
cld
hlt
cmp
and
fdivrs
int3
cmp
xchg
push
jecxz
loope
hlt
mov
mov
shll
shll
cmp
mov
bound
push
jb
inc
inc
and
repz
lret
jecxz
sbbb
imul
mov
mov
push
push
aaa
pop
cmp
mov
lret
fs
inc
mull
les
cltd
scas
wrmsr
pop
sub
fsubrl
scas
push
cmp
mov
dec
sub
pop
insb
fmull
call
mulb
stos
mov
popf
lods
pop
mov
loopne
mov
mov
or
or
inc
repnz
repz
push
and
inc
or
sbb
push
out
es
pop
or
push
inc
mov
leave
push
ds
cli
lea
arpl
popf
sti
daa
sub
or
outsl
lods
or
mov
nop
ret
scas
sub
xor
cmp
fwait
adc
inc
ljmp
dec
cmc
cmpl
mov
rorl
roll
dec
int3
and
mov
and
sbb
and
add
addr16
sub
sub
or
mov
push
or
dec
sub
and
je
push
xchg
notl
in
adc
inc
dec
push
aaa
loop
daa
adc
push
leave
xchg
sarl
and
pop
cmp
int3
movsb
mov
sbb
jbe
and
xchg
sbb
pop
cli
mov
xor
out
out
add
push
xor
sbbl
or
dec
shlb
pop
std
dec
icebp
cmp
mov
rolb
jg
sbb
pop
cmpsb
mov
into
jno
xor
movd
cmpsb
mov
icebp
push
lods
rcrl
mov
in
pusha
js
cmp
jb
imul
add
xchg
rol
cs
add
loope
or
jmp
push
xchg
mov
addl
out
inc
sbb
imul
jp
sbb
ja
imul
jae
push
icebp
fucomp
sbb
and
out
xchg
mov
cmp
cvtps2pd
stos
out
stos
cmpl
push
out
jbe
adc
mov
and
loopne
cs
push
out
dec
xchg
adc
inc
ds
stos
or
mov
repnz
scas
pop
sbb
push
pop
xor
jg
adc
shl
add
cli
add
call
sub
ss
pop
adc
repnz
dec
fsubs
es
ret
xchg
inc
cmp
lods
mov
emms
and
stos
sub
jg
pushf
sbb
pusha
sub
mov
xor
into
lods
lret
mov
sub
fistl
cmp
mov
sti
cmpsb
push
cmp
sarb
daa
in
loope
sub
lret
dec
xchg
jle
jno
pop
arpl
xor
inc
lods
push
push
orl
aam
fucomp
ss
push
inc
dec
adc
out
pop
mov
idivl
les
or
ret
arpl
outsb
test
mov
popf
mov
or
js
imul
jecxz
pushf
lret
sahf
popa
sbb
mov
sub
jecxz
dec
and
xor
fcmovnbe
incl
rorb
lahf
push
int3
mov
out
adc
cltd
add
mov
or
inc
loopne
out
out
mov
sbb
inc
lcall
jno
outsb
test
sub
dec
data16
xlat
cli
xchg
push
cmp
add
bound
xor
jl
pop
insl
or
or
aam
mov
xor
in
inc
loopne
cmpsl
adc
pushf
ficomps
ja
inc
lds
pop
mov
ds
and
adc
and
repnz
popa
popa
inc
sub
es
aas
in
in
mov
lret
into
jno
mov
push
mov
pop
jecxz
xor
lds
push
ret
adc
cld
insb
jno
xor
push
pop
ret
aam
xor
das
es
scas
jp
push
gs
cltd
icebp
mov
xlat
popf
ljmp
cmpsl
cwtl
mov
cs
add
xor
and
nop
push
or
dec
jb
repz
mov
add
ja
inc
ljmp
cwtl
sub
dec
and
mov
inc
js
adc
fistps
sub
push
mov
mov
xor
out
lea
stos
lret
xchg
cltd
arpl
leave
sbb
stc
mov
notl
mov
add
or
out
jns
xchg
cmp
mov
sbb
les
movsb
shrb
sti
aam
inc
jecxz
xor
insb
adc
pop
xchg
gs
ja
add
enter
stos
dec
lea
push
xor
pop
dec
aaa
inc
sbb
push
push
and
shrb
mov
rcr
mov
mov
jp
fistl
sub
icebp
jge
in
iret
std
jae
pop
pcmpgtb
pop
jnp
push
pop
mov
into
arpl
mov
hlt
cmp
sti
dec
aad
aad
adc
inc
pop
sbb
xchg
jl
mov
sbb
cmp
in
mov
aaa
bound
push
dec
push
mov
pop
lret
add
bound
out
adc
nop
out
inc
mov
int3
test
xor
ret
or
inc
lret
pop
dec
jp
cmpsl
push
dec
mov
cmp
cli
pop
mov
shrb
inc
inc
movsb
shrl
dec
lret
sub
leave
fists
and
xchg
jo
in
mov
adc
push
js
xor
and
aam
push
pushf
dec
outsb
mov
push
inc
push
fcompl
add
test
mov
lds
dec
jo
scas
jo
mov
jnp
inc
push
ja
mov
mov
inc
mov
cmpsb
aas
pop
xchg
lods
clc
stc
cmp
sbb
push
insl
stc
dec
or
push
mov
adc
cltd
mulb
daa
data16
stc
mov
push
xorb
out
lea
push
movsb
outsl
cmpsb
addr16
mov
mov
cmpsl
imul
insb
mov
ja
xlat
xchg
push
xchg
mov
pop
inc
adc
mov
mov
xor
cmp
dec
outsl
jb
fwait
inc
cmp
in
cmpl
and
and
mov
cmp
pop
popa
sub
inc
mov
out
inc
cs
jmp
and
push
psubd
test
pop
sub
into
nop
sbb
mov
stc
xchg
push
pop
fisttpl
aam
lret
test
cmp
js
scas
pop
xchg
add
bound
pop
fbstp
xor
mov
push
imul
lea
pop
int
pop
loopne
xor
enter
and
adc
into
mov
and
jge
int
add
adc
adc
mov
loopnew
out
dec
movsl
jno
cmpb
add
aas
fldenv
inc
jbe
add
push
cmp
inc
jge
aaa
xor
push
mov
inc
cmpsl
lods
leave
lods
or
push
mov
mov
aad
rorb
in
adc
jno
jnp
test
icebp
dec
push
bound
mov
je
test
insl
mov
pop
ss
repz
jg
lods
nop
jl
jle
outsb
test
js
call
add
pop
sub
scas
lret
push
ja
inc
in
pop
cmp
mov
rcll
cs
into
dec
out
loope
in
insb
xor
mov
movsb
shll
mov
inc
addr16
dec
popf
ja
insl
inc
jmp
dec
add
mov
lds
xorl
jl
negl
jns
insb
lret
loop
movsl
inc
aas
jecxz
pushl
mov
inc
lea
out
push
lret
iret
xor
jo
push
cld
pop
ds
cltd
sahf
ljmp
aam
das
or
sbb
adc
lcall
int3
ret
pusha
rorb
sbb
sbb
cltd
js
test
mov
mov
dec
cli
mov
aam
sbb
or
faddl
xor
fs
push
fstpt
mov
insb
fisttpll
imul
sub
fildll
ss
dec
stos
cwtl
pop
sahf
cli
out
aad
scas
stos
int
push
cmp
dec
add
idivb
pop
es
jge
loopne
imul
jecxz
mov
push
inc
cld
fistl
outsb
xchg
xchg
loope
call
inc
adc
add
arpl
dec
xlat
adc
out
dec
adc
mov
lods
in
sbbl
sub
add
gs
stc
js
xchg
es
sbb
cmp
in
and
sbb
in
popaw
ja
fimull
adc
shlb
inc
icebp
jno
xor
jb
push
aad
mov
mov
cmp
xchg
xlat
inc
fnstcw
add
push
mov
xchg
mov
xor
sti
add
jnp
dec
mov
pop
or
mov
add
xor
mov
cmc
sbb
adc
add
cmp
mov
movl
cmpsb
xor
mov
jo
xchg
mov
test
sub
ficompl
jmp
sbb
jp
andl
aad
ss
je
mov
lods
push
xlat
int3
or
inc
pop
cmp
sbb
push
cmp
test
mov
push
xchg
jnp
lret
xor
aad
cmc
scas
jb
xchg
mov
cmp
cmp
cmp
test
xchg
dec
mov
jbe
xlat
imul
stc
dec
jo
sar
jno
adc
jbe
mov
xchg
xlat
or
mov
je
scas
enter
add
push
dec
outsb
or
mov
mov
xchg
jne
call
pop
adc
xor
cwtl
mov
in
cli
sbb
xor
adc
shrl
mov
shlb
pop
aas
mov
into
mov
mov
leave
cmp
sbb
stc
or
jle
dec
fbstp
adc
mov
jl
jle
movq
je
mov
pop
pop
push
aam
test
stos
mov
mov
cmp
scas
std
lds
xchg
ret
mov
shl
inc
and
mov
cmp
insb
push
repz
pop
mov
mov
sub
push
mov
inc
mov
jle
pushf
cmp
jns
pop
insl
push
mov
mov
movsl
push
cwtl
jle
xchg
xchg
cmp
mov
enter
sub
jne
pop
adc
out
fisubrl
push
and
cmp
mov
lds
aam
jge
loopne
nop
or
mov
lret
push
xor
imul
sub
addl
imul
xor
push
push
jno
pop
or
sub
lahf
mov
mov
cmp
arpl
hlt
mov
lcall
jmp
or
int3
outsb
popf
mov
sub
iret
hlt
mov
mov
add
into
pop
adc
adc
add
dec
cmpl
inc
cmc
test
ja
imul
sbb
paddusb
mov
stos
jp
cmp
mov
pop
inc
fildll
mov
mov
jae
xor
popf
mov
mov
cmp
inc
pop
loope
mov
push
aam
ret
lods
mov
add
mov
xchg
or
rcl
cmp
pusha
shl
lret
rolb
frstor
repnz
xchg
sbb
inc
mov
in
mov
ja
mov
add
jbe
add
xor
push
inc
int
out
mov
test
imul
testb
sub
fisubs
add
jg
mov
pop
lds
mov
daa
sbb
sub
mov
popf
add
and
into
xchg
ficoml
cmp
mov
leave
int
jecxz
repz
mov
pushl
es
jns
loope
mov
gs
aad
out
lahf
imul
sti
subb
adc
scas
jmp
aas
add
data16
push
mov
jl
lods
nop
incl
adc
jb
push
and
ljmp
inc
mov
stos
xchg
mov
push
mov
jo
jmp
aas
stc
lock
hlt
push
xor
push
stos
out
adc
ret
rorl
inc
divb
inc
nop
rorb
xchg
cwtl
push
jecxz
stos
sbb
mov
testl
dec
cltd
mov
mov
add
mov
int
notb
mov
sbb
jmp
jae
push
sbb
arpl
add
lret
inc
xor
inc
inc
pop
test
jp
mov
jp
bnd
inc
fs
pop
sbb
jle
call
scas
mov
cmp
mov
mov
int
icebp
or
popl
cmp
mov
adc
fidivl
out
orl
jg
ljmp
xchg
or
xor
cmp
mov
stc
stos
push
sub
ret
lods
xor
in
cmpsl
out
and
push
xor
rolb
js
or
adc
clc
fs
scas
test
out
adc
sub
xor
popf
cmpsl
or
lahf
aad
xchg
jns
push
out
dec
and
out
popf
aad
jne
fmull
cmpsb
dec
out
jl
xchg
mov
push
mov
movsl
inc
push
cs
mov
mov
data16
ret
lret
mov
and
mov
pusha
mov
or
jno
cmp
cs
repnz
das
jle
xchg
dec
xchg
pop
xor
int
test
pop
cli
into
inc
cltd
adc
and
pushf
and
mov
outsb
pop
fcompl
cmp
lret
cmp
movsb
jb
enter
loop
inc
push
push
inc
imul
fucomp
ss
mov
loopne
mov
jg
jns
jne
xchg
sub
popa
cmp
in
pop
dec
mov
ret
sbb
jmp
adc
movsb
and
nop
mov
jae
shrl
fbstp
std
mov
or
and
rcll
shrl
and
xor
fcoms
jnp
pop
inc
lret
or
adc
mov
jb
sub
sbb
xlat
and
inc
dec
pop
push
stos
sub
lds
outsl
bound
mov
xorl
icebp
sbb
mov
inc
add
mov
sub
push
test
fisttps
push
sahf
mov
xlat
jo
adc
xlat
cmpl
inc
sub
idivb
sahf
arpl
mov
int
call
in
int3
andl
mov
lcall
lods
add
inc
dec
mov
xor
jecxz
out
dec
xlat
out
add
dec
pop
lods
loop
dec
xor
sti
xchg
int3
lock
and
rorb
repz
leave
jle
mov
dec
and
lods
mov
mov
jnp
inc
mov
icebp
scas
adcb
pop
mov
lods
or
in
push
shrl
add
pop
lea
into
insl
mov
pop
je
je
jne
ret
movsb
scas
mov
mov
test
push
loop
mov
ljmp
lahf
outsl
add
mov
jno
push
lods
fdivp
lea
xor
lods
and
cmp
out
insl
fsubl
inc
arpl
test
loop
aam
rcll
push
add
lret
in
jmp
ret
ds
push
bound
fldcw
outsl
insl
outsb
dec
sbb
in
mov
jb
fldl
pop
fistpl
mov
mov
add
inc
stos
xor
mov
insb
test
cmp
nop
xor
xor
imul
cmp
ljmp
pop
aad
or
movsb
gs
call
cli
cmp
dec
sbb
add
pop
adc
xchg
fs
ss
addl
jne
push
repz
adc
sub
jb
cmp
lds
mov
es
pop
pop
jnp
in
mov
sbb
mov
gs
mov
jle
lret
arpl
sti
jnp
sbb
loope
mov
dec
andb
out
sub
xlat
adc
popa
inc
push
rolb
aaa
jmp
push
and
sub
dec
mov
icebp
cmp
push
jnp
inc
sti
out
std
loopne
imul
popa
and
mov
movsl
and
sub
jne
movsb
mov
inc
ret
lods
loopne
in
mov
xor
aam
jge
popf
sbbl
add
mov
leave
insb
sbb
pop
jge
mov
mov
roll
fld
sarb
xchg
fs
xchg
jno
lret
add
ret
bnd
in
pop
aad
cmpsb
std
fdivrs
sbb
adc
stos
das
inc
mov
repnz
push
fidivs
ljmp
jecxz
popf
xchg
jnp
xorl
xchg
push
aas
popa
push
lret
mov
lret
repz
push
pushf
push
add
stos
fstpl
mov
cmp
adc
stos
stos
dec
cmp
or
mov
add
repnz
add
in
sbb
cmp
push
jle
iret
js
loope
fimuls
xor
fnsave
jg
xchg
mov
mov
dec
push
mov
add
dec
sbb
mov
jl
cmpsl
push
pop
fcoms
mov
lret
les
pop
push
js
xchg
sbb
popf
push
push
data16
mov
push
cmp
pop
push
add
adcb
and
test
je
test
das
loopne
xchg
sbb
ss
dec
add
dec
add
or
add
popf
dec
sarb
loop
popa
mov
test
popa
ret
xor
sbb
add
sub
jne
leave
lahf
mov
pop
popa
in
test
lea
mov
xlat
adc
add
mov
movsl
stc
dec
scas
mov
int3
add
out
cltd
int3
adc
sbb
insl
dec
jp
iret
in
xchg
pop
dec
and
push
out
mov
mov
dec
int3
push
fwait
jge
mov
imul
xorl
push
in
push
cltd
int
xor
xor
add
mov
pop
pop
jl
divb
mov
and
mov
push
sahf
popf
mov
pop
or
out
push
sbb
sbb
xchg
and
cmp
dec
leave
and
dec
sub
lock
mov
add
sbb
cmova
outsl
movsl
dec
dec
jmp
ret
inc
jmp
push
xchg
hlt
and
rcrb
add
and
outsb
inc
fiadds
jno
mov
pop
test
add
pop
jae
sbb
pop
inc
stos
movb
lds
mov
pop
adc
pop
sbb
fsubrl
mov
aaa
call
ljmp
fidivrs
and
sbb
shlb
call
test
jno
cmpb
popf
jecxz
mov
sub
nop
arpl
fwait
and
jmp
sti
aaa
push
dec
push
inc
inc
xchg
jne
out
push
jae
pop
outsb
in
cmp
mov
push
insl
xor
mov
mov
fwait
jl
into
sub
add
jmp
dec
xor
sbb
dec
inc
out
mov
and
xor
iret
pop
inc
cli
outsl
mov
jne
dec
mov
jg
jo
jnp
sbb
lock
fsubrl
mov
add
push
sbb
bound
sub
add
adc
adc
mov
jo
dec
movsb
jecxz
bound
and
adc
and
add
jo
jmp
mov
das
loope
mov
cmp
aas
aas
bound
cmp
scas
gs
mov
incb
mov
and
stc
test
sub
cmp
rorb
mov
mov
inc
cmp
xor
jbe
lret
dec
int3
push
aas
mov
sub
push
rcrl
mov
xchg
and
push
lcall
sub
fadds
sti
jno
outsl
xchg
cmp
xchg
aas
insl
clc
ret
movsl
xlat
jle
xchg
xor
jo
addr16
sub
and
jnp
pop
out
cmp
mov
dec
mov
mov
mov
adc
daa
cmpsb
es
les
mov
or
sbb
outsl
filds
movsb
dec
sbb
inc
mov
jmp
outsl
pop
lods
dec
int3
fcomps
dec
dec
fwait
icebp
shll
fstl
or
clc
fstps
icebp
popf
fwait
arpl
inc
repnz
or
fidivs
popf
sti
lcall
mov
push
jnp
imul
mov
gs
rorb
xchg
sub
pop
sub
addr16
mov
pop
sub
mov
dec
jge
rorl
nopl
sbb
push
dec
push
pop
out
sbb
lret
inc
mov
jge
adc
mov
mov
cmp
int
dec
add
and
pushl
pop
test
xor
inc
jge
mov
jg
dec
cmpb
sbb
testl
xchg
lock
mov
sub
test
mov
push
leave
daa
xchg
pop
lret
pop
repz
add
sub
sbb
dec
std
ljmp
lcall
mov
andb
mov
xlat
test
stc
xchg
rcrl
test
sbb
iret
daa
mov
mov
mov
cltd
ja
lret
scas
inc
outsl
subb
lcall
aam
pcmpeqb
xchg
roll
or
push
cltd
pop
cmp
sub
sbb
jae
cmp
pushf
cmp
js
aad
out
ret
cli
xor
xchg
or
pushf
push
enter
cmp
jmp
fimull
xchg
pop
lret
movsl
jle
mov
xor
mov
sub
shl
fimull
ret
pushf
mov
stos
negl
gs
dec
int
fmull
bound
xlat
mov
xor
incb
push
cmpsl
sbb
stc
sub
push
rcr
push
push
clc
aaa
mov
xchg
jae
fcompl
inc
mov
outsb
fistpl
stc
mov
ret
mov
add
dec
insb
cmpsl
daa
cwtl
aaa
adc
inc
mov
pop
xchg
pop
dec
mov
rcll
mov
fidivs
inc
outsl
lods
pop
sahf
mov
cmpsb
loop
xchg
sub
xchg
cld
neg
movl
sti
fisttps
jl
into
fisttpll
insb
ds
lods
sub
xchg
imul
je
mov
or
out
pop
ds
mov
xchg
std
xchg
fisubrl
or
js
xchg
mov
ljmp
push
out
cmp
xor
mov
roll
jno
mov
sbb
inc
push
adc
xchg
sahf
sub
mov
sbb
pop
sbb
mov
loop
fsts
test
mov
or
cmpsb
fsts
rcrl
and
jge
push
jg
push
imul
sbb
mov
mov
mov
test
jbe
pop
dec
mov
lods
bound
icebp
jo
popl
jge
jmp
mov
iret
xchg
pop
mov
dec
sub
insb
das
pushf
push
mov
xor
push
xchg
xor
ss
pop
aad
call
stos
mov
imul
jmp
push
fstps
lahf
mov
movsl
rcll
xor
sahf
shlb
xor
cmp
pop
negb
aam
xor
sahf
xchg
sbb
ds
add
mov
or
mov
xor
adc
push
jno
scas
push
pop
fwait
sub
into
mov
out
push
xor
jmp
jb
sbbl
mov
mov
gs
pop
pop
dec
mov
inc
ret
sub
jle
push
negl
jnp
mov
add
enter
out
fnstcw
out
mov
mov
aaa
js
std
into
xchg
loop
mov
sub
mov
mov
inc
mov
dec
push
xor
fwait
or
insb
xor
dec
clc
repnz
aas
xchg
mov
jo
out
mov
xchg
sbb
test
lock
xor
pushf
imul
jb
add
mov
js
mov
scas
sbb
push
pop
or
mov
cmpsl
xor
xchg
xchg
clc
les
xchg
sbb
dec
or
sti
sahf
lahf
xor
adc
pushf
xchg
pop
jl
dec
push
scas
pop
repnz
pop
and
fsubrs
pop
cmc
lret
or
fimull
lahf
pop
int
mov
fs
jne
inc
pushf
push
imull
add
jnp
sub
sbb
jae
xor
jecxz
cwtl
xchg
pop
nop
imul
sbb
inc
movhps
imul
sbb
repz
rcll
push
cld
sbb
or
rolb
psllq
imul
xchg
aas
pop
xor
out
or
and
fisubrl
scas
xchg
xchg
push
adc
cwtl
in
lods
ret
adc
mov
xchg
jl
push
addb
shll
or
insl
out
aam
out
es
fs
lods
dec
enter
adc
mov
or
imul
pop
fwait
je
int3
loopne
sub
inc
aaa
shrb
aas
pop
out
push
fimull
dec
dec
inc
push
xchg
or
sub
mov
jg
loopne
xchg
mov
outsb
into
xchg
shlb
and
mov
mov
test
or
daa
pop
icebp
jge
call
sarl
xor
aad
pushf
pop
int3
insb
outsl
pushf
es
stos
enter
subb
js
or
jg
xchg
fmuls
cmp
cmpsb
mov
clc
mov
and
scas
shlb
xchg
fimuls
cmc
or
das
in
ss
mov
sub
cmp
imul
pop
ljmp
fsubs
cmp
mov
xor
test
imul
cmpl
adc
lret
adc
mov
xchg
cmpsb
mov
js
mov
outsb
lahf
xor
jl
scas
negl
out
ret
into
pop
push
sub
movsb
sbb
push
xor
pop
sbb
fisttpl
pop
mov
add
lret
mov
add
sar
test
cmp
lcall
mov
pop
cltd
cld
aad
xchg
and
mov
xchg
sub
lock
cwtl
mov
jp
enter
or
adc
les
pop
or
jbe
xchg
cs
ret
sub
push
mov
mov
movsb
add
out
leave
sahf
push
mov
sbb
inc
push
in
mov
dec
pop
sbb
inc
xchg
mov
push
cmpsb
sub
out
mov
cmp
out
ja
cltd
or
mov
push
push
dec
sub
fisubrs
das
push
imul
dec
xchg
mov
pop
int3
jae
sbb
mov
cmc
mov
popf
imulb
movsb
in
push
fidivs
adc
ret
sbbl
cmc
outsl
or
cltd
add
cmp
pop
dec
adc
out
enter
jns,pn
xchg
adc
ret
shrb
movsl
ljmp
out
test
arpl
inc
mov
jge
movsl
inc
arpl
inc
cmp
fwait
mov
pop
push
enter
clc
idivb
fsts
inc
lods
aam
add
dec
mov
hlt
fldt
push
subb
jne,pn
jns
cmp
jae
cmp
loop
cmc
jne
mov
mov
xor
jge
cmc
sahf
rorb
xchg
jle
enterw
ror
cmp
jl
mov
rcrb
pop
mov
push
ljmp
stos
mov
shlb
inc
ret
aad
or
nop
xchg
mov
mov
mov
add
mov
shll
cmpsb
sub
jecxz
adc
lcall
sahf
sub
push
mov
push
in
push
dec
add
pop
das
sti
movsb
fisttpl
pop
xchg
js
test
push
in
call
dec
xchg
cs
jne
scas
inc
dec
jns
ss
xchg
and
jg
push
stc
add
and
pop
out
xor
shrb
adc
sbb
in
sbb
xchg
fiaddl
cli
mov
pop
loopne
mov
scas
jg
loopne
sbb
fwait
dec
sbb
lods
xchg
fadd
rcr
stos
mov
push
jmp
sbb
sbb
std
add
add
mov
mov
aam
repz
adc
fsubrl
leave
sbb
mov
iret
std
fnstcw
test
push
push
jg
loopne
test
ja
ret
insl
inc
add
ss
movsl
pop
repz
jb
push
adc
cmp
xchg
push
mov
xchg
pop
repz
lcall
mov
push
lcall
fimuls
cld
dec
add
into
call
push
mov
shlb
jae
icebp
sub
mov
cmp
or
mov
aaa
pop
or
loope
ficoml
push
enter
leave
jge
setge
mov
pop
sbb
pop
js
lcall
out
xchg
in
pop
inc
sti
jl
xchg
push
inc
lea
xor
movsl
testb
push
fisttps
std
inc
jl
movsb
repz
sbb
xor
shrl
sarb
xadd
jecxz
push
mulb
test
cmp
dec
roll
dec
in
push
loop
mov
xchg
inc
jo
iret
xlat
sub
dec
xor
or
aas
mov
xor
push
popf
subl
jge
fcomps
nop
in
xchg
sbb
popa
ficomps
cmp
or
in
and
cwtl
mov
insl
mov
push
int
sbb
jle
adc
loopne
sub
inc
jg
inc
ljmp
lods
add
pop
sbb
sub
ret
outsl
jbe
jl
push
aas
push
jo
push
xor
jne
mov
stos
pop
push
inc
lds
sbb
and
outsl
fidivl
shlb
lds
loope
dec
mull
ret
sbb
cmpsl
sbb
inc
outsb
pop
mov
sti
sbb
push
pop
lahf
in
fdivrl
sbb
cmp
adc
test
sbb
push
ds
lret
add
ss
clc
je
pusha
mov
fmuls
stos
daa
jmp
jl
mov
ret
or
pop
shlb
cmp
and
rcll
cld
pop
fdecstp
imul
mov
inc
push
leave
pop
mov
pusha
mov
lock
adc
jb
mov
scas
scas
sbb
jbe
pop
lods
sti
mov
mov
inc
push
or
mov
xchg
inc
push
out
call
xlat
scas
sub
fwait
lods
repz
and
push
cmpsl
xchg
mov
repnz
adc
push
dec
jge
scas
dec
dec
ret
xor
sub
add
mov
xlat
jmp
es
popl
push
pop
cmp
rcrb
adc
lahf
pop
jle
push
xor
jmp
push
js
imul
sbb
adc
jge
jnp
lods
sbb
mov
fisubrl
dec
jnp
mov
fldl2e
mov
fptan
call
sbb
mov
or
cwtl
add
fisubrl
inc
or
sub
pop
lret
bound
push
jbe
test
xor
push
xlat
mov
dec
jg
ja
inc
jo
inc
push
or
push
mov
lret
pusha
dec
lods
sub
mov
pop
repnz
out
movsl
out
cmp
movsb
sahf
or
mov
pop
xor
fstp
test
or
mul
orl
in
inc
fistpll
mov
ja
hlt
and
ds
sub
call
or
imul
mov
jge
lret
inc
fsts
lcall
mov
xor
addr16
or
cwtl
fsubrs
movsb
lock
into
fmull
pop
pop
and
mov
subb
ficoms
push
xor
push
adc
mov
and
pop
mov
stos
cmc
add
clc
test
sbb
xchg
daa
fstl
dec
inc
popf
inc
mov
sahf
adc
adc
insl
insl
das
fists
lea
daa
cld
dec
xor
into
fldl
xchg
out
ret
rcrb
ficomps
dec
push
jae
xor
or
int
lock
xor
mov
imull
lds
lea
and
movsb
pusha
out
sub
and
or
inc
jae
add
aaa
pop
stos
dec
lds
adc
sub
mov
fwait
std
outsl
push
test
call
enter
lret
cmc
and
xchg
dec
in
sub
idiv
scas
xchg
mov
xor
and
xor
daa
dec
pop
out
push
inc
sub
mov
or
fldenv
js
jb
push
inc
popl
and
inc
fdivrp
insb
inc
sbb
add
std
sub
lcall
dec
mov
or
jbe
xor
push
cmpsl
or
mov
je
ds
fs
std
sahf
daa
pop
scas
in
nop
mov
test
je
pop
or
sub
clc
out
sarl
pop
push
lcall
and
xchg
shr
cmpsb
rcrl
jns
dec
cmpl
mov
cs
filds
adc
or
shl
xor
aas
lock
add
mov
int3
sahf
jp
pop
mov
sarl
xor
mov
pop
ja
jecxz
rorl
fbstp
mov
loopne
js
mov
push
out
scas
and
int3
xchg
mov
add
ror
pusha
stc
inc
cmp
inc
cmp
mov
or
ret
arpl
fildl
js
loopne
neg
mov
xor
scas
or
dec
adc
mov
push
sub
dec
xor
adc
and
push
and
sbb
movsb
and
jae
sub
xor
lock
icebp
jbe
and
cmpsl
add
jnp
mov
jb
or
mov
dec
sub
pusha
inc
outsl
les
aaa
rcrb
sbb
js
jno
pop
aas
or
push
in
add
add
dec
fadd
les
loopne
push
cmp
rcrl
jecxz
xchg
iret
push
inc
push
cmp
lods
add
loopne
cmpsb
xlat
mov
imul
sahf
enter
inc
loop
stc
fsubs
nop
xchg
mov
in
movsb
mov
out
ffree
mov
push
push
clc
jno
push
hlt
movsb
mov
push
push
out
sahf
out
pop
fcmove
mov
imul
push
cmpsb
mov
push
fsub
sbb
fsubrp
sbb
xchg
adcl
js
inc
push
aas
mov
adc
mov
out
adc
cmp
add
mov
aas
xchg
mov
lock
std
mov
ret
adc
pop
push
adc
adc
in
rcll
cwtl
cmp
andb
sbb
aaa
push
addr16
out
loopne
or
int3
mov
adc
mov
fsubs
dec
sub
out
ljmp
jp
daa
xor
jae
xor
xlat
sahf
ds
movsb
pusha
and
sbb
jmp
and
xchg
nop
mov
cwtl
and
mov
das
add
mov
enter
outsl
in
and
or
and
fwait
test
cmp
in
mov
mov
and
jns
fucomip
push
ja
sub
jl
fcoml
jno
in
sub
andb
fsubs
adc
xlat
bound
push
or
dec
mov
cli
xorl
xlat
mov
push
sti
lods
dec
call
fists
fildll
in
xor
aad
pop
inc
pop
sahf
sub
les
dec
adc
dec
subb
cltd
xor
fwait
mov
int3
sti
adc
xchg
enter
dec
negl
stc
stos
push
test
mov
scas
jb
push
cmp
repz
push
cld
cs
and
out
shlb
sbb
adc
sbb
dec
pushf
jg
sar
addb
pop
xor
loopne
mov
pop
je
mov
stos
andb
and
and
ret
nop
xchg
lock
push
push
sub
jnp
fidivs
jmp
movb
pop
push
int
bound
jae
adc
ud2
outsl
jne
lret
lods
lea
pop
mov
mov
cmpsl
push
dec
pop
in
ja
mov
lret
fcoml
jle
jg
xor
loop
pop
insl
std
gs
aas
test
or
fists
add
sbb
sti
jle
mov
mov
jg
gs
sbb
adc
and
sub
roll
cmc
ret
iret
popf
cmp
fs
mov
push
push
dec
mov
js
sbb
stos
int
push
psubusw
mov
aam
mov
mov
loop
aas
jl
cmc
lods
inc
mov
imul
aas
add
and
cmpsb
or
dec
pushf
pushf
movaps
mov
add
insl
push
pop
xor
loope
jb
jns
sub
es
hlt
in
mov
dec
dec
xchg
hlt
pusha
xchg
sahf
in
add
xchg
bound
pop
out
mov
sub
cmc
fisttps
ja
dec
mov
mov
pop
push
adc
fmull
add
in
fsub
orl
pop
lock
in
ficomps
outsb
cld
push
mov
sbb
or
jae
mov
jns
test
pop
xchg
sti
sbb
ret
dec
fwait
mov
shrb
pushl
les
sub
mov
jge
repz
xchg
mov
mov
cld
loopne
mov
loope
sub
int3
xchg
loope
sbbl
cmc
push
cld
fidivrs
xor
and
dec
icebp
mov
call
aaa
pop
outsb
movsl
in
mov
add
rcl
test
fisttpll
in
push
insl
pop
aas
mov
xor
or
imul
push
mov
xchg
push
dec
lods
enter
stc
in
push
aam
fcomp
jbe
scas
and
sub
fcoms
jge
push
repnz
ss
add
sbb
into
xor
repz
pop
cld
adc
subl
popa
in
xor
mov
and
test
aaa
or
aaa
sbb
sbb
or
sbb
mov
add
shll
gs
stc
push
or
inc
or
sbb
in
stos
lcall
cld
inc
call
daa
pop
rorb
rorl
enter
mov
int
cmp
dec
jg
in
xor
fstpt
in
mov
pop
movsl
and
cmp
movsl
or
cmpsl
mov
cld
stos
xor
rorb
sub
jp
sub
arpl
jge
push
enter
jns
push
pop
stc
lret
push
jle
push
mov
xor
xchg
in
or
mov
mov
scas
lods
mov
push
test
push
inc
jne
rcll
xsaveopt
sbb
aam
jno
xor
jle
ss
inc
loop
inc
loope
mov
cld
mov
in
or
arpl
jb
adc
movsw
sbb
ret
push
stos
imul
xlat
pop
cwtl
and
sbb
adc
xor
mov
ficomps
mov
test
lds
scas
adc
fldenv
xlat
dec
xchg
push
xchg
cmp
xchg
ret
icebp
insb
adc
and
sar
cltd
lret
addr16
inc
jb
imul
aam
mov
outsl
pop
adc
insb
inc
fcomip
pop
fwait
cmp
int
sbb
dec
sbb
inc
or
inc
sub
mov
sub
mov
xchg
sbb
and
lret
adc
bound
dec
xchg
imul
sub
xchg
cmp
xor
adcl
popa
gs
insl
inc
jecxz
or
cmp
arpl
out
js
sbb
mov
adc
push
ljmp
push
mov
sbb
inc
cs
andl
adc
or
xchg
push
insb
loope
xlat
mov
push
xchg
sub
xchg
push
aam
mov
adc
sub
pusha
dec
sub
test
jmp
inc
sbb
mov
aas
lods
hlt
pop
cmp
add
or
push
das
push
cmp
xchg
leave
leave
inc
xor
adc
xchg
insl
cmp
sahf
and
movups
test
inc
mov
push
push
mov
jno
mov
inc
jge
bnd
pop
movsl
stc
dec
lods
mov
test
mov
aam
call
fcmovnbe
das
or
lret
stos
adc
in
sub
mov
aaa
scas
aad
mov
pop
and
jae
and
fnstsw
lret
sbb
out
outsb
and
jmp
cmp
cltd
out
mov
add
scas
dec
in
pop
rcl
mov
outsl
ja
push
xlat
das
cmp
pop
fisubrl
dec
jne
aas
inc
addr16
xor
mov
sbb
pop
adc
and
lods
inc
lea
hlt
sub
push
shr
out
cmc
cmp
mov
mov
xor
mov
pop
and
divl
call
and
pop
test
mov
mov
and
jle
mov
std
out
xchg
add
vminsd
imul
out
push
scas
ficompl
in
test
movsb
jge
dec
mov
test
xchg
pop
xchg
xor
outsb
mov
cld
jae
clc
jae
mov
in
cmp
push
rolb
test
xchg
adc
jge
movl
lods
fcmovbe
pop
xchg
dec
xlat
ficoml
fidivrl
movsl
pop
sbb
adc
repnz
xchg
xchg
pop
clc
in
scas
cmpsl
or
stc
dec
ds
mov
sbb
pusha
mov
addl
sbb
in
adc
dec
xor
bnd
into
dec
lahf
pushf
xchg
outsb
insb
push
nop
mov
subb
sbb
inc
clc
xchg
movsb
pop
jo,pn
or
dec
out
repz
ds
push
pop
add
jg
mov
cmp
mov
add
dec
xchg
and
das
stc
sbb
sub
scas
mov
nop
pmaxub
loop
in
je
inc
aas
push
cld
dec
push
stos
popf
and
push
addr16
adc
push
std
sub
inc
sub
mov
dec
mov
mov
stos
repz
subb
ljmp
jbe
lds
dec
lret
fnstenv
es
jnp
sub
adc
or
or
lret
jb
test
push
ror
mov
lods
xchg
daa
imull
cmpsb
outsl
cmp
das
dec
push
add
push
js
xlat
mov
dec
adc
jno
pusha
sti
lret
repz
inc
xchg
xor
or
jb
or
xor
jne
dec
xor
out
push
sti
push
cmpl
repnz
mov
inc
dec
jle
insl
cmp
xchg
scas
inc
and
cmp
in
sub
jns
and
adc
cltd
shlb
jmp
mov
test
daa
loope
lret
and
dec
push
addr16
loop
xor
mov
loope
and
adc
call
loop
ss
scas
in
and
loop
notl
push
into
cmp
xor
scas
dec
das
xor
jne
adc
xor
cmp
dec
ss
add
lret
add
jge
inc
mov
mov
mov
loopne
and
into
aad
jbe
xchg
loop
pop
leave
mov
aas
xchg
lock
fiadds
cltd
mov
jge
cmp
nop
xchg
in
inc
mov
rcr
mov
jno
and
mov
push
in
imull
paddw
xchg
push
mov
es
addr16
sub
std
les
adc
daa
int3
imul
add
int
and
aaa
pop
mov
xchg
xchg
sub
sbb
enter
in
sub
push
js
sub
icebp
add
push
adc
mov
jae
push
movsl
push
ja
pop
or
cmp
xchg
fidivrl
and
hlt
stos
movsl
xchg
and
decl
dec
enter
ret
ja,pn
jnp
push
mov
rcl
cmp
or
or
mov
jge
adc
ficompl
dec
in
push
fisubl
ss
and
jbe
sbb
jbe
and
mov
cmpsb
addl
cmc
sti
and
adc
inc
ja
xor
pusha
popa
data16
jg
jmp
lret
mov
mov
data16
xor
sbb
fists
outsb
mov
repnz
xchg
fcoml
ficoml
out
push
arpl
sti
sub
xor
in
ljmp
add
push
push
xlat
mov
sbb
testl
or
jbe
jbe
cltd
cmp
ret
in
aad
ljmp
cmp
mov
addr16
inc
dec
aam
aas
xchg
xchg
xchg
call
mov
sahf
jge
sbb
mov
sti
adc
add
lahf
jecxz
ret
cmpsb
push
fldt
cli
loop
into
cli
divb
pop
mov
jle
xchg
xchg
iret
mov
fdivrl
insl
pop
loopne
adc
sbb
dec
mov
mov
or
imul
mov
data16
shrb
test
sbb
loop
cmp
cmp
xor
icebp
xor
inc
xlat
lds
ss
popf
mov
sbb
mov
movsl
lds
fwait
addb
faddl
lods
add
sbb
xor
or
dec
lret
aaa
mov
dec
cmp
shl
ja
addr16
mov
leave
sbb
sub
repnz
mov
inc
mov
cmp
decl
jno
data16
add
ljmp
and
in
and
in
or
sub
int3
test
cli
mov
pusha
pop
shll
and
push
mov
cli
daa
bound
stos
mov
xchg
data16
jp
arpl
lahf
pop
sub
sub
out
lock
xor
pop
loopne
mov
sub
push
lret
negb
sub
es
loop
xchg
xorl
sbb
push
lds
mov
les
xchg
in
add
ds
testl
das
cld
xor
push
mov
xchg
jns
rcll
enter
pushf
pop
stos
jno
lret
sbb
cmp
xorl
stos
mov
jmp
dec
dec
dec
fldenv
in
xor
push
mov
inc
push
xchg
scas
cmp
dec
pop
push
addr16
add
aas
add
add
xchg
mov
pusha
imul
icebp
loope
mov
dec
add
sub
mov
dec
jl
pop
adc
sar
mov
xchg
pusha
in
or
or
pop
insl
cmp
insl
iret
cmp
mov
andl
into
fcompl
pop
setbe
add
fs
fiaddl
sbb
xor
loope
pop
add
mov
xor
dec
das
aas
jg
std
int3
and
dec
lret
jbe
lea
scas
cmp
aas
mov
into
rorb
dec
inc
movsb
lds
ja
pushf
push
stos
sbb
outsb
in
out
or
push
xchg
fcmovbe
movsl
sub
popa
pop
ss
mov
jo
popf
pop
mov
test
xchg
mov
xor
hlt
sub
cmc
sbb
stos
fs
dec
mov
jns
xor
sar
push
xchg
dec
jns
fmull
in
fstps
lret
fimuls
mov
shr
movsl
push
push
jle
fdiv
lds
in
es
adc
mov
hlt
add
xchg
aaa
hlt
push
mov
in
out
std
push
stc
aam
fisubs
push
pushf
xchg
sub
mov
aad
push
jl
aam
xor
ds
in
sbb
xorl
out
aam
mov
int3
jbe
and
xchg
mov
test
icebp
adc
inc
push
insl
iret
mov
addr16
dec
push
add
pop
ss
sahf
inc
mov
xor
or
inc
jge
iret
leave
mov
sbb
mov
adc
xchg
aad
mov
sarl
popf
movsb
and
dec
pop
stc
adc
pop
mov
dec
inc
fidivrs
mov
add
xor
pusha
je
cmp
cwtl
sub
mov
repz
adc
mov
and
xchg
fdivs
mov
or
imul
fistpll
data16
mov
sub
jb
xor
cmp
mov
clc
in
hlt
jge
repnz
fucompp
les
sar
iret
cmc
rcrl
fcmovb
fdivrs
repz
adc
nop
int3
ja
nop
stos
and
repnz
cs
in
cmp
mov
sar
arpl
add
pop
cmp
dec
sbbl
mov
push
xlat
sbb
and
add
jb
add
scas
in
and
xchg
leave
cmp
test
adc
dec
push
ljmp
out
scas
xor
inc
scas
pushf
into
insl
cmpsl
or
jae
ljmp
into
imul
sub
pop
add
imul
and
mov
jo
out
call
movsb
pusha
pcmpeqw
enter
arpl
cwtl
mov
mov
cmpsl
nop
test
or
ret
stos
xlat
int
inc
cmc
shl
mov
iret
cwtl
rcrb
xor
jnp
in
xor
ja
shlb
jl
push
push
push
shrd
or
imul
inc
test
or
arpl
cmc
push
cmp
xlat
xchg
cli
pop
xor
xchg
and
in
pop
pop
mov
xchg
into
add
jl
imul
push
rcrl
push
es
insb
inc
fs
das
cmp
js
out
mov
cld
rcl
cli
cmp
jne
test
out
rorb
mov
fadd
vrsqrtss
sub
subb
lahf
sub
mov
xchg
adc
pop
pop
testl
mov
dec
mov
sbb
mov
sbb
stc
int
sarl
cmp
es
xchg
sarb
jg,pn
cltd
sti
mov
clc
xlat
xor
or
sub
imul
or
dec
outsl
ret
sub
jmp
add
int3
mov
mov
in
mov
pusha
mov
les
mov
test
adc
arpl
sub
jge
rclb
das
push
jmp
push
cmp
dec
popf
adc
push
movsb
es
cli
sub
mov
das
inc
data16
dec
cmp
lds
sub
xchg
jo
mov
inc
or
push
jg
and
insb
pop
or
jo
push
inc
insb
adc
cltd
mov
fs
pusha
cmp
in
outsb
popa
loopne
inc
pop
pop
es
mov
mov
inc
stos
pop
push
leave
ljmp
and
jp
mov
movb
loop
repnz
pusha
inc
mov
jmp
and
sbb
lret
das
and
out
lods
iret
mov
out
jge
js
cmp
pusha
jbe
sub
adc
out
push
incl
sub
scas
jo
push
dec
jnp
and
jge
push
roll
push
test
mov
push
mov
mov
aam
cmp
sub
xchg
sbb
dec
outsl
ds
data16
xchg
sub
inc
cmp
cmpsb
push
xchg
lahf
lods
jle
out
push
sbb
push
push
stc
or
rcll
add
je
jle
push
rolb
pop
fwait
mov
dec
cli
in
jae
adc
out
iret
sbb
and
std
xor
js
sti
xchg
sub
fs
inc
sbb
out
nop
fwait
sahf
ss
add
cmc
mov
movsl
pop
lcall
leave
pop
pop
push
add
out
push
push
xchg
jecxz
aad
mov
js
jl
gs
and
dec
inc
jmp
lods
fs
cld
lret
rorl
lret
aaa
clc
inc
into
sbb
inc
jnp
enter
mov
loope
push
xor
ret
mov
lods
and
sub
stc
mov
lret
xor
rcrl
sbb
adc
push
and
xchg
and
jno
call
xchg
subl
andb
aam
sbb
add
jnp
pop
lea
loopne
or
sbb
mov
adc
outsl
xor
mov
push
and
popa
mov
das
jb
dec
mov
jmp
and
test
in
jbe
sbb
testl
push
ja
mov
stc
sbb
mov
jge
inc
cmpsl
shrb
adc
pusha
sub
test
xchg
sub
cmp
out
mov
xor
addr16
bnd
ret
adc
cmp
pop
cmp
fstl
bound
inc
inc
mov
aaa
mov
pop
sub
aas
jmp
lock
std
mov
or
insl
loope
mov
sbb
mov
mov
jge
das
pop
dec
mov
rcl
stos
clc
icebp
sub
enter
fistl
xchg
lods
pop
xchg
je
repnz
dec
nop
imul
jge
cmp
ret
pusha
lret
add
push
dec
sbb
out
xor
test
cmpsb
inc
xchg
mov
mov
sbb
jne
mov
lods
mov
aad
lods
xchg
sbbl
adc
rep
call
jb
lods
or
xor
jge
sub
inc
mov
jns
popa
mov
clc
dec
repnz
call
adcl
sub
xor
sbb
hlt
sbb
int
sub
js
cld
ljmp
jg
repnz
jae
cmp
jmp
sub
out
clc
test
pop
addr16
pop
jecxz
popf
inc
popf
mov
mov
lcall
scas
inc
not
hlt
adc
lods
lea
cltd
cwtl
cmp
loope
ja
fidivl
sub
js
jno
test
scas
mov
mov
mov
ss
test
cmpps
mov
xor
dec
jmp
xchg
jo
mov
js
int
in
push
push
fildll
inc
pop
lret
divl
sub
repz
xlat
push
adc
stos
push
idiv
imul
mov
inc
cmp
sub
add
xor
pop
das
push
adc
clc
icebp
stc
cld
mov
and
add
cmp
mov
dec
sub
lea
mov
scas
loopne
sbb
hlt
mov
pop
add
icebp
push
hlt
nop
pushf
dec
dec
rcrl
testb
fimull
int
sahf
mov
outsb
push
mov
sub
loope
adc
sahf
movsb
mov
fmull
ret
push
push
mov
pop
mov
scas
faddl
xchg
pop
sub
pop
mov
leave
inc
xchg
fisubrl
or
xchg
out
icebp
mov
push
sarl
aad
xor
lea
cld
mov
stos
daa
push
mov
cmp
lahf
out
pop
ss
mov
dec
ret
push
xor
or
pusha
sub
pop
inc
adc
dec
sarl
outsl
mov
xchg
lock
mov
ret
outsl
jge
cwtl
and
pop
pop
mov
adc
mov
mov
enter
sbb
jecxz
sarl
mov
push
mov
inc
mov
das
cli
lahf
mov
dec
inc
or
loop
fcmovu
and
imulb
adc
icebp
imulb
push
mov
dec
cld
mov
scas
rcrb
jmp
xchg
xchg
fwait
push
pop
xchg
jecxz
dec
mov
xchg
jae
scas
mov
pop
mov
in
loope
mov
js
push
sbb
fs
mov
xchg
and
nop
inc
xchg
jnp
jns
dec
insb
test
mov
mov
scas
push
in
fisttps
jle
mov
dec
icebp
js
sbb
sarl
xchg
popf
push
aas
dec
jmp
ja
jne
mov
notl
insl
dec
jno
cmc
sti
push
cmpl
mov
testl
xlat
fsubrp
xor
fwait
add
ficompl
stos
and
mov
add
ret
fs
dec
fcomp
arpl
jae
adc
push
jmp
xor
andb
mov
and
push
lods
enter
push
sub
shrl
mov
and
mov
adc
sub
inc
and
subb
xor
mov
adc
pop
pushf
fisubs
pop
pop
push
shll
xchg
sbb
xor
insl
and
xor
mov
loopne
imul
jl
inc
dec
ljmp
jle
lahf
and
dec
jg
gs
je
pop
data16
adc
push
cmpl
lcall
mov
push
add
jnp
xlat
push
fninit
rcrb
sbb
insb
and
dec
fwait
enter
scas
mov
xchg
dec
push
jno
iret
mov
mov
enter
roll
xor
xchg
jb
test
add
sub
mov
dec
nop
or
jne
cmc
cmp
mov
xor
add
movzwl
mov
add
pushf
sbb
jns
jmp
mov
lock
mov
adc
xor
inc
notb
add
loop
push
stos
fiadds
aad
rclb
mov
mov
aam
mov
pop
mov
xchg
mov
xchg
test
adc
loope
sub
jge
leave
sbb
loop
sbb
jmp
lds
mov
xchg
dec
inc
andb
or
bound
test
je
xlat
mov
dec
rorl
fldcw
sbb
sahf
out
or
fwait
out
je
into
decl
lret
aam
lods
xor
test
movsl
jmp
daa
into
aad
jmp
in
jnp
notl
pop
lock
nop
mov
mov
scas
test
mov
push
cli
subl
pop
or
shlb
inc
lea
je
mov
test
daa
cmp
ror
sub
in
cmp
int
add
stc
push
or
mov
repnz
dec
pushf
popa
jmp
fcomi
shll
push
add
xor
je
cld
shl
mov
dec
leave
pop
mov
xlat
leave
mov
add
adc
mov
call
pop
hlt
and
ret
out
lock
dec
jmp
enter
rclb
xor
mov
push
sbb
loope
mov
insb
adc
cli
or
and
and
or
mov
mov
adc
mov
in
cmpsl
cvttps2pi
mov
or
xchg
nop
in
movsb
xchg
push
fdivl
push
jmp
dec
cli
loop
aas
sahf
jne
out
and
in
add
sub
push
mov
and
cmp
mov
push
inc
pop
dec
xchg
sbb
and
out
dec
daa
add
shl
pop
adc
daa
mov
mov
cmp
lods
mov
sbb
jb
xchg
push
std
cltd
xor
lcall
xchg
aad
mov
daa
xchg
or
cld
dec
into
arpl
mov
pop
cld
jbe
cs
cmp
mov
ficoml
xchg
test
pop
fdivrs
test
aaa
add
insb
jbe
iret
mov
ret
aas
fisttpl
jg
cmp
mov
adc
inc
nop
es
xchg
mov
push
shll
push
mov
push
or
cwtd
fisubrl
mov
xchg
sahf
dec
nop
js
sub
enter
push
mov
jecxz
xor
aas
jae
imul
lea
inc
rcll
or
xchg
popf
aaa
or
fdivrl
push
sub
clc
cwtl
sub
push
inc
insl
pop
lret
jmp
pop
leave
das
add
out
adc
int
pop
lret
pop
push
pop
loopne
nop
xchg
xor
xor
dec
add
nop
jns
inc
cltd
mov
mov
cmp
cld
test
or
push
out
sahf
test
add
xchg
mov
scas
cmp
js
mov
pop
jns
sbb
add
sub
cmpsb
mov
xor
out
rclb
adc
call
or
jmp
mov
aas
call
imul
jl
add
outsl
dec
pop
mov
gs
ja
outsl
aad
cmp
push
loop
lret
notl
clc
jecxz
scas
jmp
inc
mov
dec
ficoml
xor
mov
mov
hlt
inc
xchg
fiaddl
outsl
mov
imul
loope
sbb
xchg
mov
dec
fwait
adc
mov
adc
test
pop
mov
xor
cmp
iret
jae
test
push
iret
push
xchg
add
jmp
test
loop
mov
jne
push
push
adc
jmp
and
and
mov
sub
fwait
out
iret
shl
clc
sbb
test
or
stc
or
push
movsl
sbb
push
lods
cmp
sub
cmp
fsubrl
jns
jg
xor
adcb
or
imull
mov
sbb
fucomip
pop
sub
mov
ja
push
andb
dec
fcmovne
arpl
xchg
out
addl
cmp
jmp
stc
sahf
out
mov
outsl
jge
iret
cmc
push
rol
outsb
roll
sbb
int3
ja
imul
cmp
adc
fwait
xchg
xor
cmpsl
push
gs
mov
mov
aad
pop
hlt
loop
jmp
xchg
fadds
xorb
ds
push
mov
inc
scas
xor
and
data16
lcall
fcom
sub
mov
xchg
and
adc
jl
cmp
push
movsb
or
mov
pop
aas
movsl
mov
ss
pop
mov
sahf
mov
ljmp
mov
fisubrs
pop
mov
xor
adcl
test
cmc
enter
je
clc
adc
or
inc
mov
mov
jge
sar
movsb
xchg
mull
in
arpl
int
imul
idivl
sbbb
in
lret
in
and
and
pushl
cld
testb
out
adc
outsb
aad
movsb
insb
cltd
rclb
mov
stos
adc
addr16
nop
pop
cs
xchg
arpl
adc
shl
pop
insl
add
pop
lret
enter
jmp
jl
xlat
jno
mov
clc
mov
lods
enter
fcmovu
imul
pop
push
mov
sarl
push
jge
push
sub
pushf
inc
xor
pop
daa
add
push
ret
sub
hlt
push
iret
lahf
cld
xchg
data16
add
xchg
test
pushf
test
inc
sbb
adc
lods
scas
xchg
push
cmp
mov
mov
jl
mov
adc
aas
sbb
jns
mov
jne
or
popf
shlb
mov
xchg
outsl
lret
data16
dec
mulb
or
lods
sub
inc
out
std
mov
sahf
pop
and
ds
arpl
stos
push
and
add
hlt
jp
mov
cmpsl
xchg
jl
push
sub
mov
ja
movsb
cmc
mov
sub
std
push
xchg
inc
lods
sub
push
xchg
movsl
das
jmp
inc
jmp
mov
ret
cmpsb
pop
dec
mov
adc
rcll
fmulp
insb
ficomps
jge
pop
repz
rcrl
or
push
shll
enter
and
in
mov
dec
es
or
sbb
sbbb
sub
ret
ljmp
cwtl
and
jbe
mov
jle
jl
sub
add
add
mov
icebp
pop
popa
and
jmp
push
daa
mov
push
push
shl
mov
sub
mov
pop
xchg
push
fwait
cmc
fadds
or
push
sbb
cmpsb
jns
or
jecxz
jmp
mov
fdivrs
bound
xor
sbb
loop
push
pop
das
aaa
daa
fdiv
xor
mov
push
push
aas
fisubrs
into
int3
adc
ret
dec
gs
movsb
repnz
outsl
jmp
sbb
clc
mov
pop
std
lods
jp
xchg
out
test
test
sub
push
mov
stos
push
test
and
mov
jp
in
popa
stos
add
jp
jno
push
roll
or
adc
pop
push
xchg
mov
aas
aaa
lea
mov
mov
scas
sub
xlat
xchg
xor
mov
neg
push
mov
sub
aas
mov
and
sub
xchg
lret
dec
test
jp
pop
xlat
sub
sbb
leave
mov
pop
mov
sbb
in
pop
add
xchg
stc
orb
testl
out
cs
push
movl
add
sub
test
loop
mov
ret
dec
mov
cwtl
dec
shll
int
out
subl
cmp
push
or
in
adc
in
cld
mov
pusha
or
icebp
incl
push
cmp
ss
adc
inc
xchg
sub
out
movsb
xchg
imul
jmp
in
cmpsb
addb
insl
div
mov
and
sbb
mov
sbb
je
adc
imul
andl
dec
or
test
sub
mov
fnstsw
lcall
ljmp
cld
push
stos
outsl
mov
sub
ljmp
in
and
cmp
jno
es
mov
movsb
cmp
inc
sbb
sub
fistl
dec
inc
cld
mov
rcl
push
jns
jo
adc
xchg
scas
cwtl
pusha
lock
add
test
sahf
int
push
movsb
rcrl
notl
cli
loopne
orb
xchg
adc
inc
and
cmp
jge
sbb
jb
xchg
sub
in
sbb
mov
add
gs
rol
jb
pop
jns
jbe
xchg
das
xchg
or
iret
arpl
in
jne
movsl
js
mov
shlb
mov
xlat
xor
movsb
mov
xor
adc
push
xchg
and
inc
adc
cmp
add
dec
pop
in
movsb
jecxz
push
int3
out
fcmovne
add
cli
add
cmp
xchg
push
loop
iret
in
mov
inc
in
pop
pop
or
or
xor
adc
xchg
std
xor
sub
mov
push
mov
jmp
and
cmp
nop
movsl
mov
jne
push
xlat
lds
mov
jmp
dec
sbb
add
xlat
add
sbb
xchg
mov
cmp
and
and
cmc
or
sub
pop
and
pop
xor
mov
hlt
subb
push
sub
adc
rcrl
in
divl
cs
cmp
bound
jne
mov
mov
sbb
ret
lds
mov
xchg
inc
imul
mov
cmp
orl
int3
clc
and
xor
xchg
pushf
shrb
lods
mov
mov
das
fisttps
jno
jns
jno
xor
ljmp
in
nop
repz
lret
or
adc
loop
jbe
mov
adc
sbb
and
lods
jge
jno
test
aad
and
outsl
xchg
mov
sbb
fs
out
scas
das
idiv
xlat
adc
xchg
dec
mov
jnp
out
or
pusha
loop
jmp
insb
push
mov
or
repz
ss
inc
jmp
mov
jecxz
cmp
cmp
data16
dec
repnz
adc
or
add
pop
mov
test
sub
jns
mov
repnz
inc
dec
cmpsl
push
addr16
mov
int3
stos
or
enter
inc
jbe
leave
mov
jno
add
imul
rcrl
mov
mov
into
jae
fmull
cmpsb
mov
and
sbb
mov
scas
cli
xor
popa
or
insl
jp
push
xor
add
push
insb
scas
push
in
add
addr16
pop
and
adc
mov
loope
cltd
inc
ret
lret
insl
push
xor
clc
push
cmp
mov
push
push
xor
sbb
xor
add
xchg
sub
clc
fdivrs
xchg
ja
dec
fisubs
fnstenv
push
mov
xchg
jecxz
test
xor
and
dec
cmp
mov
inc
push
data16
adc
mov
aas
lret
dec
mov
sbb
mov
sub
cmp
mov
int3
ret
icebp
add
and
popf
cmpsb
sbb
test
gs
mov
inc
add
leave
int
repz
orl
adc
xor
pop
sub
pop
pop
or
decl
mov
push
jno
mov
mov
adc
popa
test
aam
sub
xchg
les
mov
pop
pop
push
xchg
jmp
out
xchg
push
std
and
cmp
mov
das
enter
inc
aam
xor
mov
sbb
mov
pmullw
mov
xchg
inc
stc
cmp
adc
out
adc
adc
pushf
cmpsb
or
mov
cmpsb
inc
add
add
inc
xchg
mov
sbb
push
sbb
fildll
pop
xor
mov
xchg
sbb
mov
insl
pop
roll
into
orb
mov
dec
cmp
in
push
js
aad
pop
cmp
mov
lds
movsl
pop
mov
jbe
jns
inc
pop
mov
sub
fs
xor
mov
aas
pop
xor
scas
ror
aam
aad
jne
loopne
rorb
sbb
sub
dec
ret
xor
jbe
and
daa
add
pop
cli
ss
dec
adc
dec
ljmp
cld
push
ljmp
jae
rep
das
icebp
inc
shrb
call
jae
fwait
mov
aaa
xchg
mov
jo
push
inc
in
ret
mov
push
adc
jl
loopne
ds
sbbl
sarl
cmp
pusha
mov
jno
mov
movsl
sub
push
dec
mov
dec
lods
ljmp
add
nop
aam
test
es
fiaddl
push
sbb
out
jmp
and
xlat
pop
mov
rcrb
xchg
lret
mov
mul
dec
mov
fidivl
cltd
pop
insb
push
cmp
xchg
rorl
inc
fmull
out
add
repnz
mov
xor
dec
pand
xor
ja
or
inc
sbb
ljmp
push
push
cmpb
das
clc
sbb
xor
cmp
scas
jbe
cmpb
pop
and
push
aas
je
scas
or
mov
leave
les
rclb
and
loope
or
mov
cld
mov
call
add
and
js
aad
das
push
sbb
vprotb
js
jno
cmpsb
mov
loopne
push
sti
xor
dec
xchg
adc
cmpl
lcall
insl
push
cmp
pop
sub
lcall
mov
rol
sub
rcr
mov
dec
in
adc
cltd
pop
lock
in
jle
adc
xor
mov
mov
sbb
sub
pop
mov
sbb
insl
lods
mov
adcl
popf
adc
cld
xchg
inc
fldcw
inc
mov
jae
lea
and
aas
repnz
aas
dec
sub
loopne
or
inc
or
cld
push
xchg
mov
inc
xchg
cmpsl
cmp
ret
dec
sub
shll
in
sub
jns
and
outsb
xor
mov
add
add
bound
sbb
xchg
loopne
in
cmc
bound
out
dec
adc
push
and
inc
xor
pop
xchg
repz
rclb
or
push
xchg
push
in
rcr
jns
out
mov
push
push
icebp
mov
xor
sub
pop
ja
pop
jp
sub
out
mov
sbb
cmp
sbb
xor
mov
sub
xor
dec
cmp
shlb
in
add
xchg
jns
cmp
dec
xor
jmp
add
test
loope
lods
mov
mov
mov
hlt
cs
das
movsl
out
inc
leave
and
into
lds
test
xchg
add
xor
out
and
push
and
mov
clc
pushf
incl
shrl
sbb
mov
icebp
shr
inc
les
incb
test
repnz
imul
push
push
dec
and
pop
dec
aad
fldcw
popa
ret
ds
dec
rcrl
int
mov
movsb
cmp
sbb
test
iret
outsl
icebp
sbb
xor
or
pop
xchg
mov
or
push
cmp
popf
pop
in
cld
cs
jbe
imul
pop
push
nop
or
xor
xchg
adc
lret
data16
sub
push
pop
push
mov
xlat
xor
movsb
mov
push
repz
out
notl
mov
fstpl
rol
out
mov
mov
jbe
sbb
add
test
outsb
inc
addr16
das
xor
mov
inc
push
imul
sbb
data16
mov
jg
inc
test
loope
cltd
mov
dec
fstl
inc
pushf
lret
ljmp
mov
das
xlat
fs
sahf
sbb
pop
mov
stos
in
cmc
mov
aaa
jp
jmp
sub
sub
xchg
dec
cwtl
push
push
mov
xor
inc
sbb
or
inc
cmp
xlat
pushf
add
inc
pusha
test
bnd
cmpsl
or
xchg
push
shr
add
or
add
xor
cli
pop
jns
xchg
push
cmp
xor
jmp
cs
lcall
cmp
xor
cld
imul
cli
icebp
decl
jecxz
cmpsl
lds
mov
mov
xchg
aaa
push
mov
pop
addr16
shl
fstpt
mov
fnstenv
adc
cmp
sti
mov
adc
outsl
cmp
aaa
roll
js
lea
inc
xorl
cmp
icebp
add
aam
addr16
jb
push
mov
push
cmp
rcrb
fs
cmp
mov
in
push
pop
mov
test
cmp
pop
mov
jmp
ret
xchg
loop
aaa
es
hlt
push
dec
fwait
mov
mov
pop
ret
cmp
out
mov
les
gs
das
inc
add
mov
pop
jne
xor
lods
jo
js
je
adc
xchg
lahf
int3
cmpsl
stc
fisubrs
or
inc
sbb
pop
aaa
movsl
jne
nop
xchg
dec
hlt
sub
fdivrl
rcl
lahf
aas
and
cmp
inc
and
adc
push
into
mov
or
std
mov
or
xlat
stos
hlt
cmp
rcrl
sbb
and
cmp
add
in
testl
push
test
jg
stc
imul
inc
sbb
jbe
add
sbb
jns
xchg
cs
test
decl
pop
insl
jle
pop
mov
pop
mov
loope
clc
repnz
mov
mov
movl
push
cmp
push
je
mov
mov
les
pop
pop
inc
push
xor
jmp
pushf
push
lock
pop
xchg
call
sub
hlt
lret
jmp
cmp
pusha
repnz
enter
icebp
insb
sub
fiaddl
dec
or
jno
icebp
stc
addr16
mov
movsb
ljmp
mov
pushl
mov
fcmove
outsb
mov
outsb
es
and
cmc
sbb
adc
cmp
out
into
test
jmp
dec
pop
stc
cmc
aam
xor
xor
in
in
dec
add
sub
pop
clc
jno
jne
rorl
fldt
mov
mov
push
push
jb
jb
in
push
xchg
push
mov
aam
scas
aam
jecxz
in
adc
ret
jb
and
jp
cltd
imul
fidivs
call
sbb
sti
imul
inc
pop
loopne
jle
push
lock
push
sub
lcall
add
mov
push
ljmp
and
sbb
mov
xchg
cmpl
pop
stos
xor
cmc
scas
and
rcr
jp
cwtl
and
mov
shl
cmp
sbb
cmp
dec
fsts
cmp
leave
and
adc
inc
ljmp
in
dec
in
xchg
out
movsl
dec
mov
mov
mov
loope
mov
jl
lea
stos
fildll
mov
adc
jecxz
out
mov
mov
xchg
xor
hlt
jne
popa
pop
or
mov
sbb
arpl
dec
out
sub
push
push
mov
jns
and
pop
xor
dec
fdivrs
mov
and
or
xchg
xchg
iret
mov
adc
in
fyl2x
in
adc
insl
sbb
mov
mov
jmp
sub
cmc
ret
ljmp
add
cmp
xor
sub
in
hlt
jbe
lret
add
xchg
dec
mov
xchg
ret
xchg
out
xchg
dec
int
adc
inc
or
xlat
leave
and
add
sbb
icebp
repz
add
test
sbb
sahf
mov
lret
fdivrs
aaa
scas
adc
pop
loope
xlat
subb
repz
or
fstl
inc
pop
mov
lods
cmp
fmuls
shl
adc
pop
lods
dec
pop
and
lahf
pop
mov
cmp
pushf
fsubr
jnp
lods
push
hlt
xchg
inc
mov
xchg
sahf
fstp
xchg
lods
stos
adc
sbb
mov
inc
into
daa
add
cmc
sub
jo
flds
push
cld
sti
scas
mov
lret
mov
leave
test
loopne
mov
lea
pushf
dec
mov
and
in
daa
lahf
push
in
lods
add
lret
out
push
add
movsl
xor
lds
das
cmpsl
dec
dec
xor
rcr
jmp
xor
xor
mov
xchg
cmp
jl
mov
bound
mov
xlat
mov
ds
mov
enter
loope
push
or
adc
ror
jns,pt
dec
cld
int
loop
or
sbb
adc
fs
bound
dec
cltd
and
test
aad
sti
inc
sub
sub
mov
faddp
ljmp
jne
mov
fs
into
cwtl
das
outsl
push
adc
mov
les
daa
repnz
or
sub
and
loop
ja,pt
inc
push
fprem1
mov
movl
cli
mov
lods
push
xchg
mov
test
ss
icebp
jne
outsb
dec
pop
aad
cmpsb
and
add
sti
test
fnstenv
push
enter
jge
or
lods
push
pop
sbb
icebp
outsb
dec
cs
inc
inc
add
sub
xor
sahf
aaa
lret
lcall
xchg
push
and
sub
push
cmp
cmpsb
sbb
outsb
mov
mov
lret
mov
dec
ds
push
jns
push
addr16
dec
in
push
jg
sub
push
scas
test
loopne
lods
jg
in
push
add
scas
xor
sahf
inc
mov
pop
inc
push
ljmp
cmp
cltd
jge
stos
pop
stc
and
push
xlat
test
imul
and
mov
xchg
insl
or
add
fchs
stc
adc
mov
pop
inc
sub
sub
mov
mov
cmp
mov
mov
cwtl
add
mov
js
mov
or
mov
lret
test
jnp
into
pop
xchg
mov
mov
push
hlt
ja
xor
popa
sub
stc
rcr
xchg
jbe
or
aaa
icebp
inc
or
sti
inc
dec
shrl
push
mov
loope
pop
lock
push
sbb
into
pop
mov
or
jne
int3
cmpsl
out
jnp
xor
inc
sub
loop
mov
test
int
inc
das
stos
cmp
lahf
out
push
out
test
mov
gs
mov
cmp
ret
pop
sbb
cmc
xor
pop
cwtl
xchg
mov
movsb
mov
cmc
mov
sbb
jecxz
lods
jno
pop
lret
xorb
rcrl
mov
jbe
xor
and
int
fs
out
iret
roll
or
out
cltd
jne
adc
das
out
insl
xchg
insb
push
test
pop
pop
mov
mov
mov
cmp
in
pop
adc
pop
ret
loop
sub
push
fistpl
inc
mov
lcall
scas
sbb
sbb
inc
pop
movsl
adc
jne
dec
pop
shrb
rcl
cmp
mov
data16
lea
dec
js
push
addb
das
cmp
je
sbb
sub
push
popf
cmp
xor
int
loop
xchg
mov
gs
push
push
mov
lcall
jmp
xchg
dec
cwtl
rorb
fucom
sti
cmp
inc
test
push
inc
jl
cmpsl
inc
in
lahf
repz
jmp
mov
sbb
lret
pop
les
push
push
and
mov
hlt
or
xchg
stc
cltd
jb
loopne
hlt
roll
jo
inc
or
mov
mov
and
bound
sub
xor
jle
jmp
lea
repz
mov
mov
mov
in
inc
popa
es
fmuls
sub
xchg
add
lods
or
inc
add
ret
cmp
lods
scas
f2xm1
ss
push
push
ljmp
imul
lods
or
out
pop
rcrl
jmp
fwait
aam
or
aam
iret
and
or
xor
and
loop
mov
sbb
inc
mov
sbbb
and
dec
pop
mov
jbe
pushf
int3
xchg
inc
cld
push
jle
prefetch
pusha
out
ss
js
in
push
fwait
lret
add
fldt
testl
or
int3
inc
arpl
mov
adc
inc
in
imul
subb
mov
sbb
pop
mov
data16
mov
lock
leave
shrb
mov
ss
ja
jne
mov
jae
sarl
mov
and
shr
inc
and
mov
sbb
inc
hlt
or
xchg
into
fs
jmp
xchg
bound
sub
mov
fmuls
push
lahf
inc
rol
sarl
out
loope
test
fucom
movsl
push
push
inc
mov
in
outsl
nop
pop
pop
in
shr
ljmp
adc
adc
aam
inc
test
sub
adc
lret
insl
in
fsubr
xchg
fisubrl
shlb
add
lcall
mov
testl
mov
dec
inc
ja
popa
jb
mov
pop
lock
adc
pmuludq
sbbb
mov
push
aad
test
test
insb
mov
jbe
lahf
lcall
shlb
sub
imul
xchg
mov
in
ret
inc
push
frstor
and
or
dec
or
sub
cmp
jg
loope
pop
ja
jg
jne
and
xor
jno
dec
adc
inc
nop
and
xchg
js
jb
push
andl
mov
iret
sarb
inc
or
mov
mov
hlt
cld
jge
inc
inc
jecxz
ret
inc
push
dec
shll
xchg
dec
sahf
ret
scas
sub
xchg
int3
ret
stos
mov
int
test
dec
je
not
sti
push
mov
andb
push
jbe
lock
movsl
cld
mov
adc
loopne
rol
loop
stos
cwtl
or
push
pop
pop
rorl
xor
and
and
jno
cli
popf
shl
pusha
push
cmpsb
mov
cmp
lret
jmp
ss
pop
cli
mov
jno
xor
xchg
mov
cmc
rolb
lock
lds
and
cltd
aaa
sbb
inc
jmp
xor
xchg
inc
mov
add
jle
cmp
xchg
xchg
mov
cmp
sbb
negb
mov
jae
out
adc
mov
ljmp
sbb
dec
insb
push
jbe
mov
or
xchg
pop
ss
mov
loope
xchg
or
dec
or
inc
iret
pop
sub
ret
pop
pop
pop
ljmp
addr16
and
pop
pop
add
stos
cli
adc
gs
insb
push
sbb
mov
cmc
inc
pop
or
pop
dec
sub
ja
xor
push
sarl
lock
mov
int
inc
incl
leave
imul
test
add
cmp
pop
xchg
into
stos
stos
xchg
notb
lret
add
mov
leave
xor
xchg
push
xchg
ret
fdivs
repnz
push
inc
xchg
fcmovbe
call
jbe
push
repnz
fldcw
xor
insl
in
in
lret
imul
inc
sub
mov
scas
hlt
mov
mov
mov
inc
loope
dec
mov
push
xchg
push
mov
jb
sbb
dec
gs
cs
mov
shl
mov
or
ficoms
push
or
scas
fmul
and
lret
ja
dec
subl
call
imul
std
cmpl
add
sbb
out
xor
and
push
sub
inc
enter
iret
arpl
mov
mov
sbb
push
mov
ret
mov
and
inc
push
dec
nop
sbb
xchg
out
or
inc
rcl
scas
add
mov
inc
out
pop
pop
jbe
sbb
pop
les
and
fidivrs
enter
jno
out
push
hlt
std
test
sbbb
or
mov
cld
lods
addr16
fs
xchg
in
fwait
dec
fnstcw
test
xchg
jmp
test
loopne
lcall
in
pop
aaa
mov
outsl
in
repz
dec
hlt
jecxz
test
lret
xor
dec
ds
cwtl
jp
outsb
addr16
insl
leave
add
in
xchg
xor
idivb
hlt
in
mov
push
add
clc
pop
add
repz
imul
test
je
insl
xor
add
jb
mov
or
jge
jae
pop
movsl
scas
mov
mov
jge
dec
pop
shrl
push
sbbl
dec
mov
jge
dec
or
mov
popf
shrl
int
dec
jecxz
leave
adc
push
jae
push
and
test
rol
xlat
inc
sbb
mov
adc
mov
cmp
call
jns
je
mov
sub
adc
daa
or
dec
jge
into
shr
cltd
call
ja
sarb
std
jo
js
pusha
cmc
xorb
rcrb
adc
push
sub
jne
dec
out
adc
xor
cmpsl
test
fucomi
sub
daa
add
xchg
cli
cmc
xor
mov
mov
icebp
imulb
andb
negw
adc
cmpsl
push
and
inc
push
inc
inc
inc
shll
or
icebp
inc
mov
push
rcrl
mov
test
and
and
negl
xor
lret
sub
es
jp
add
in
pushf
cmc
xchg
test
rcrb
jns
mov
xor
js
adc
inc
sti
xchg
pop
aad
leave
imulb
mov
mov
jns
int
mov
sub
and
stc
rorb
sub
pushf
add
stos
fwait
addl
shll
mov
out
inc
bnd
sbb
add
cli
adc
adcl
jl
insb
inc
je
push
fisubl
inc
cmp
iret
jmp
pop
lds
xor
add
jmp
push
inc
pop
hlt
movsl
jle
or
ja
push
fcomps
sbb
lahf
cmp
add
push
cmp
mov
stos
test
sahf
lcall
rclb
cmp
mov
lcall
lods
add
pushf
pop
fstps
and
gs
clc
stc
scas
pop
cmpsl
jnp
outsl
jae
psubd
lock
jle
push
jecxz
in
arpl
ljmp
mov
int3
push
popa
fwait
mov
stc
addl
cmp
jbe
mov
ret
push
mov
xor
pusha
mov
div
jno
mov
xlat
fwait
loopne
sbb
pushf
shrb
fists
ficoms
jle
insb
mov
jge
and
shl
imul
or
and
cmpsl
insb
js
fwait
mov
sarb
dec
icebp
pop
fs
mulb
xchg
std
sub
in
push
xchg
jmp
and
aam
inc
movsb
adc
xchg
push
ret
out
das
sti
pop
push
inc
imul
dec
pop
mov
jbe
in
movsl
nop
addr16
out
push
ret
fs
sbb
mov
lods
rol
and
xchg
cmp
jl
sub
push
icebp
in
inc
mov
xor
jl
cmp
outsl
fistl
lret
lret
sub
mov
xchg
lds
jg
pop
dec
adc
sub
push
pop
xor
pop
push
sub
mov
xchg
xlat
jge
mov
mov
addr16
leave
mov
es
insb
jne
inc
inc
sbb
ret
pop
addb
dec
or
add
jge
arpl
lds
out
pop
into
stc
call
push
clc
mov
mov
lods
lods
sub
scas
cmp
das
mov
lea
clc
jmp
ljmp
addr16
icebp
stos
mov
push
mov
mov
loop
mov
fstpt
in
int
aad
fcmovnu
mov
mov
in
leave
adc
cmp
fwait
and
mov
test
or
addr16
aaa
and
or
aam
dec
scas
jl
idivl
ss
je
dec
jae
les
je
sub
jns
pop
cs
mov
pusha
insb
in
mov
cmp
push
jnp
in
dec
ret
jmp
lcall
bound
gs
adc
dec
xor
push
push
fidivrl
ret
shl
jbe
push
ret
popa
clc
jp
insl
xchg
pop
pop
nop
aam
adc
sbbb
cs
test
fsubrp
xchg
jb
nop
pushl
enter
jae
pop
push
sbb
data16
negb
mov
mov
jno
cmp
cmpsb
mov
dec
or
test
outsb
or
or
jbe
cmpsb
mov
stos
outsb
or
mov
xchg
dec
nop
call
dec
push
jp
fistpl
in
xchg
sbb
mov
cmp
xor
pop
inc
dec
jnp
push
jb
sub
ret
mov
push
pop
aaa
inc
push
xor
push
popf
dec
rclb
aaa
jbe
pop
jg
cmp
mov
mov
xchg
mov
fsubrp
dec
dec
inc
repnz
jmp
call
mov
and
cmpsl
inc
xor
cmc
jge
imul
testl
call
aam
mov
adc
ja
cmp
jp
dec
popf
jns
push
jmp
fcmovne
sub
xchg
test
or
in
lods
cmp
in
lea
push
pop
inc
pop
shlb
and
pop
mov
fwait
popf
mov
add
or
jle
movsb
lret
aas
mov
push
insb
sub
push
or
jo
ss
outsl
repnz
scas
pop
xchg
mov
mov
pop
jno
fistpll
dec
jae
or
dec
loop
in
scas
mov
jecxz
leave
iret
leave
adc
add
loop
mov
pusha
mov
mov
mov
pop
sub
sub
ror
pusha
pop
xor
or
popf
add
mov
test
call
inc
sbb
and
lds
or
push
cmp
add
xor
and
xor
out
out
ror
mov
ds
in
lret
add
es
sub
inc
push
mov
push
idivl
push
adc
in
rcrl
adc
dec
roll
testb
and
inc
or
mov
inc
cmp
mov
and
xchg
mov
jnp
test
gs
jmp
es
inc
icebp
inc
test
mov
pop
and
cmc
repz
mov
sub
xor
mov
mov
mov
cwtl
pushf
mov
sbb
jge
or
add
in
dec
jg
push
std
mov
fs
nop
add
cmpsl
shlb
shrb
jnp
pop
lds
pop
jo
pop
mov
ss
sti
arpl
mov
lods
out
mul
xchg
addr16
pop
or
inc
fwait
push
push
mov
dec
aaa
xchg
movsl
repnz
pop
cmp
fs
or
shlb
bound
mov
mov
cmp
ret
ficompl
lods
aas
andl
lcall
movsl
jne
mov
push
mov
mov
jle,pn
inc
sbb
xor
movsl
mov
xor
les
gs
jns
stos
cwtl
adc
and
push
fldcw
mov
scas
and
stos
push
bound
fldt
mov
in
roll
or
adc
mov
pop
inc
jl
xor
das
xchg
mov
in
mov
stc
xchg
lock
mov
test
insl
aad
movsb
pop
or
les
nop
idiv
inc
jp
shr
pop
push
and
rorb
mov
adc
fisttps
push
or
dec
aad
fisttpll
adcl
repz
enter
sahf
mov
pushf
xor
xchg
andl
or
sbbb
jo
jmp
and
jmp
int
roll
stc
mov
sti
mov
rorb
mov
inc
sbb
call
sub
xchg
mov
xchg
xor
in
inc
lock
imul
insl
popa
add
fucomp
mov
shrl
outsl
jmp
fsubrl
jns
aaa
push
add
lds
jp
add
adc
add
pop
sub
pop
inc
xchg
mov
out
into
pop
push
movsl
pop
dec
push
fldl
xor
mov
loop
cmp
pop
outsb
add
adc
mov
push
cmc
mov
jnp
push
lret
cmp
xor
adcl
and
xchg
fisubl
jae
out
mov
repz
call
int3
pop
nopl
pop
jg
into
xchg
inc
mov
cmpsb
jne
aad
sub
or
dec
mov
mov
jl
sbb
shrl
and
mov
cwtl
cmp
testl
add
adc
pop
mov
lret
pop
fldenv
fidivs
out
dec
jo
dec
fisubl
inc
sahf
mov
jb
es
rcl
cmp
pusha
insl
in
sbb
xchg
nop
xchg
fstpt
inc
and
jb
aad
fadd
xchg
aaa
fwait
push
idivl
jl
int
add
test
pop
cli
imul
mov
inc
inc
movsb
sub
imull
lret
jge
sub
mov
test
addr16
jns
mov
pop
mov
cmp
cs
ds
movsb
subb
mov
adc
jno
or
mov
adc
xor
lret
insl
xor
cmpsb
mov
pusha
mov
xor
pop
dec
lret
ficoms
inc
mul
add
aad
stos
out
jns
mov
sub
rsqrtps
jno
jmp
pop
scas
or
jns
sbb
insb
sub
pop
add
adc
fdivs
mov
and
std
lcall
and
pop
movsl
sbb
push
das
cmpsb
xor
push
in
fwait
jl
xchg
xchg
test
xchg
push
mov
fdivrs
pusha
ss
jnp
imul
fs
iret
movsb
je
stos
inc
ret
sub
idivb
adc
jns
jbe
pop
dec
loopne
mov
sbb
pusha
pop
fbld
mov
js
fincstp
fistl
push
mov
ljmp
sti
mov
xor
pop
fistl
cwtl
arpl
test
cld
or
xchg
fwait
inc
jge
sahf
add
rclb
and
mov
data16
mov
fisubl
mov
out
scas
sbbl
lods
es
add
sub
cmp
inc
xchg
mov
mov
xor
nop
mov
cmp
stc
mov
cwtl
test
jbe
dec
xchg
jp
fcoms
pop
cld
push
rolb
add
jns
sub
xor
adc
jle
pusha
inc
test
ss
mov
sbb
xchg
add
pusha
in
inc
jns
fcmovnb
jbe
xor
cmp
jp
inc
das
add
ljmp
xor
dec
fs
mov
jns
jae
mov
xor
and
pop
stos
add
in
shlb
icebp
mov
imul
test
dec
inc
les
and
xorb
pop
pushf
aad
outsb
mov
mov
mov
sub
or
int3
mov
push
xor
xchg
xorb
adc
jl
popf
jp
sbb
lret
loope
dec
loop
aam
fisttpl
dec
or
incb
jmp
pop
and
sti
push
dec
or
ds
mov
call
add
mov
inc
xor
fwait
jp
mov
mov
fs
pop
jle
sbb
lds
test
pop
add
add
and
stc
cli
inc
stos
gs
pop
movsl
mov
pop
jle
or
cmpsl
inc
xor
sbb
xchg
sbb
mov
mov
je
repz
xlat
mov
arpl
stc
shrb
les
call
ljmp
cmp
psrlq
push
clc
jo
xchg
push
and
xchg
and
pop
outsl
inc
xor
sbb
xchg
push
mov
pop
sbb
sahf
sbb
inc
clc
js
stos
fcmovne
add
cld
sti
mov
ss
movsl
mov
lods
loopne
ss
push
inc
pusha
add
paddusb
add
test
xor
sub
or
nop
clc
xchg
pop
sarb
jmp
cmp
mov
mov
cmp
clc
fs
enter
inc
mov
inc
pop
jecxz
lahf
es
fnstenv
aaa
rcrb
inc
sub
xchg
cmpsb
or
and
pop
push
jge
movsb
xor
push
and
xor
jle
mov
repz
or
iret
scas
sbb
cmp
dec
sub
aas
shr
or
cltd
inc
push
dec
stc
out
pop
xchg
push
pop
into
les
insl
jmp
imul
or
push
xor
movsb
addr16
dec
fwait
cli
xor
es
je
push
setg
push
push
fsubrl
cs
dec
mov
cltd
cmpsl
sbb
cmp
in
loop
fsubrs
mov
in
mov
in
lret
or
test
inc
mov
ret
sti
mov
insl
adcb
xor
and
mov
lods
jb
out
jg
and
or
rcl
das
imul
dec
mov
popf
sub
or
cld
mov
pop
test
shrb
jns
lcall
in
inc
mov
pop
mov
adc
adcb
cs
in
std
pop
jbe
pop
xlat
xor
push
imul
xchg
fmuls
or
sub
mov
lret
mov
jae
add
fadd
ficompl
out
and
iret
sub
mov
add
push
in
int3
sbbb
sbb
mov
sub
les
out
jle
inc
and
pop
sti
adc
dec
mov
andb
pop
jl
cltd
cmp
cmp
daa
cld
inc
sar
mov
xor
inc
mov
loope
add
sbb
pop
mov
jp
sbb
inc
lds
cmp
jnp
push
mov
push
push
scas
mov
sarb
nop
ret
into
xchg
cmpl
inc
add
fwait
out
push
scas
or
pop
scas
dec
mov
mov
push
jg
outsb
out
loop
adc
not
sahf
sub
mov
push
xlat
imul
cmp
cmp
mov
dec
mov
mov
xlat
xchg
loopne
add
sub
push
sarl
cwtl
out
jbe
cmp
and
sub
movsb
inc
adc
pop
outsb
xor
dec
filds
jb
mov
outsl
push
int3
cmp
jnp
mov
insb
scas
pop
adc
or
or
dec
flds
sub
loop
daa
pushf
arpl
cmpsl
repnz
sbb
fadd
push
outsb
xor
in
movsb
in
nop
daa
jmp
xor
das
lcall
les
dec
jp
adc
lcall
ret
data16
push
pop
mov
popa
stc
lods
leave
jmp
insl
mov
ret
cltd
dec
xchg
fisttpll
aam
jns
aas
test
pushf
sub
fidivrl
es
xchg
dec
mov
rolb
push
sbb
inc
orl
fbstp
add
test
sbb
rcll
pop
pop
lahf
pop
inc
in
pop
xchg
adc
sarb
jno
mov
ds
inc
pop
jl,pn
jmp
and
cmc
jg
ret
filds
dec
data16
dec
sahf
inc
mov
dec
dec
test
mov
push
lock
fwait
add
adc
sbb
xchg
inc
pop
sub
jo
pop
mov
lret
jp
add
xchg
ret
or
call
scas
cmpsl
ljmp
mov
in
mov
sub
test
and
adc
arpl
mov
sub
xchg
and
adc
mov
fimuls
sbb
hlt
jmp
pop
inc
pop
and
shl
cmp
xor
mov
cwtl
mov
es
mov
outsl
inc
xchg
cmp
xchg
push
lock
fwait
rorl
fmuls
mov
add
pushf
pop
dec
lea
mov
int
test
stos
fldlg2
imul
xchg
mov
fidivl
mov
mov
mov
enter
xchg
iret
dec
cmpsb
cmpsl
mov
sbb
ja
jae
hlt
dec
imul
and
adc
mov
jp
dec
mov
or
mov
add
adc
mov
lock
pop
and
sub
pop
arpl
dec
scas
inc
mov
sub
jbe
movsb
into
fcoml
fwait
testb
mov
cmpsl
sub
dec
mov
loope
js
mov
outsb
clc
mov
xor
lds
xchg
lret
mov
inc
add
mov
inc
adc
int
ret
dec
lods
iret
dec
inc
dec
jle
clc
addr16
push
pop
out
push
inc
dec
or
cmp
ljmp
and
sbb
xchg
popf
ret
dec
sbb
sbb
sbb
cmp
rcrl
movsb
push
sbb
ret
cmpsl
sub
adc
sti
stc
mov
test
jmp
pushf
mov
je
mov
push
and
xchg
fneni(8087
and
insl
pop
and
mov
sub
jmp
cs
ret
cmpsb
test
lea
gs
test
lahf
mov
je
mov
sub
mov
test
jp
test
movsb
mov
pop
inc
sub
and
pop
xchg
xor
cmp
ret
cmp
sbbb
out
or
in
mov
sbb
call
mov
xorb
test
add
test
ret
cmp
test
xchg
push
jno
pop
lea
cld
mov
arpl
mov
push
lods
mov
nop
fstpt
adc
inc
xchg
ret
adc
mov
pusha
inc
sbb
fdivrl
xchg
lea
xor
add
sahf
push
sbb
jmp
mul
js
xchg
aad
lods
cs
rorl
jo
cltd
rcrb
jmp
dec
outsl
xchg
sbb
pop
mov
jle
ficomps
mov
fsubrl
stc
xchg
daa
cmc
cmp
sbb
shrl
pusha
or
outsl
add
je
cmp
fldl
rcll
mov
movsb
shlb
cmc
or
inc
movsb
sahf
cmp
popf
sub
inc
shll
fisttpll
test
insb
stos
ss
xchg
sbb
pushf
adc
sub
jno
or
cmp
or
and
inc
xor
mov
sub
iret
std
jl
addr16
jbe
and
lea
pop
daa
inc
push
mov
pop
add
outsb
add
inc
push
pop
sbb
movsb
and
xor
lods
lahf
faddl
popf
dec
or
sbb
and
in
subl
push
fisubrl
push
jo
loop
adc
xor
xor
sbb
mov
lods
call
xchg
mov
cmp
aam
loope
jp
mov
xchg
out
rolb
inc
fldl
adcl
xchg
stc
ret
mov
mov
pop
lods
bound
dec
jno
xor
ret
add
mov
jge
lcall
sbb
or
lods
and
and
xchg
addl
aas
out
xor
imul
in
lock
unpcklps
je
out
push
xor
ss
sub
dec
mov
imul
add
nop
aad
insl
popa
stc
xchg
sub
sub
sbb
push
add
push
push
ljmp
enter
inc
xor
lea
stos
rolb
out
inc
ja
pop
popf
adc
sub
sub
lods
lahf
sub
mov
xchg
stc
adc
out
movsl
pop
fidivrs
subb
xor
xor
mov
aaa
movsb
push
cmp
jno
imul
and
out
fmull
add
and
in
cli
loope
mov
mov
sbb
mov
jmp
push
xchg
bndstx
cmp
sti
fcomip
nop
dec
mov
lds
fmull
add
clc
and
dec
mov
xchg
sub
mov
push
cmp
mov
lods
pop
adc
inc
pop
xor
ja
sbb
push
add
in
adc
rcrl
fwait
imul
loopne
cmp
cmp
dec
mov
or
in
inc
loopne
xor
lret
orl
pop
cli
mov
lret
int3
nop
sub
leave
sub
push
mov
insb
sbb
cmp
fcompl
pop
insl
addl
and
pop
xchg
push
push
aaa
adc
sbb
xorb
ret
xchg
jmp
inc
adc
mov
push
xchg
test
push
cltd
inc
lahf
rcll
outsl
int3
add
pop
add
ljmp
lcall
and
ret
repnz
inc
pusha
sti
push
and
call
ljmp
popa
cmp
addr16
ror
sub
mov
add
jle
lods
mov
scas
cli
jb
mov
cmpsb
in
xchg
adc
rcr
or
jae
dec
js
sub
lock
syscall
lahf
je
xchg
jmp
pusha
cmpsb
xor
xchg
sub
cltd
arpl
cmp
mov
cli
in
jno
mov
das
popa
xor
jne
mov
mov
xor
aaa
or
lret
insb
mov
jge
mov
imul
aas
and
inc
ret
sub
push
bswap
push
scas
sub
jp
pop
and
repz
icebp
in
lea
mov
adc
sbb
daa
add
lret
adc
jb
xor
mov
int3
jbe
sub
movd
mov
xor
or
pop
enter
sub
or
mov
sbb
mov
mov
scas
dec
lea
xchg
xchg
xchg
call
clc
lods
sbbl
push
adc
bound
or
js
mov
scas
push
sbb
or
push
addr16
sahf
cmp
mov
cmpsb
je
mov
xor
lea
push
or
cmp
jg
out
dec
repz
jno
xchg
in
jle
push
insb
mov
cmp
mov
leave
insl
sbb
jnp
mov
pop
call
pop
mov
sbb
adc
xlat
div
or
sti
fs
xchg
lret
pop
subl
push
in
pop
xor
cmp
icebp
hlt
pxor
cs
mov
sbb
mov
daa
int
push
iret
xor
jb
ret
jb
arpl
or
mov
ljmp
das
xchg
cmp
stos
inc
sbb
mov
mov
xor
dec
sub
mov
leave
leave
movsb
dec
movsb
cmp
cmp
mov
xor
cmpsb
pop
push
mov
mov
cld
repz
cmc
pop
mov
xor
mov
pop
movsb
xor
cmpsl
jno
pop
adc
mov
add
xchg
fiaddl
cwtl
or
adc
aad
cmpsb
mov
inc
decb
les
stos
push
sahf
lret
jp
data16
jo
inc
cmpsl
aas
inc
dec
loope
xor
fnstcw
xor
leave
push
mov
push
mov
push
jo
add
pop
jle
hlt
push
into
pop
and
imul
mov
mov
bound
insb
pop
pop
es
fidivrs
add
lret
shr
daa
test
repnz
jmp
sub
sbb
cmp
orb
loopne
inc
and
pop
lds
in
loopne
es
lock
adc
xor
cmp
ss
mov
mov
or
pusha
std
mov
add
clc
enter
icebp
movsl
out
jg
xor
jo
mov
xchg
frstor
push
add
sbb
mov
out
pop
push
lret
fidivrl
clc
jmp
inc
jne
nop
mov
test
dec
mov
lods
aas
jbe
jge
in
into
jmp
icebp
pusha
loopne
sub
clc
into
stos
jle
or
push
lahf
cmc
pop
jbe
shl
push
test
insl
mov
repnz
or
push
mov
cltd
sbb
jae
push
sbb
lret
sahf
lods
sub
mov
sub
pop
sbb
add
sub
jb
loopne
es
lret
arpl
xchg
aaa
pop
ds
inc
inc
aad
cmp
cltd
inc
insb
cmp
repz
or
cmc
mov
mov
icebp
sbb
jbe
jb
pop
jge
stos
pop
xchg
fidivrl
dec
push
xchg
cmpsl
hlt
imul
adc
fwait
mov
and
mov
jnp
cmp
mov
mov
mov
dec
std
inc
xor
out
iret
sbb
dec
ss
test
add
adc
inc
cmpsl
and
arpl
fldl
push
imul
sbb
jmp
dec
shl
mov
push
pop
fidivl
popa
popf
mov
fldt
adc
mov
and
push
cmpsb
xchg
inc
or
cmpsl
dec
push
outsl
mov
jnp
lods
aad
call
or
int3
mov
push
and
cmp
enter
arpl
out
and
imulb
or
cmp
dec
stc
sbb
das
out
test
mov
addps
cmp
jecxz
shrl
test
mov
cmpsl
mov
test
stos
sub
divl
adc
dec
push
adc
shll
sbb
xorl
ret
jb
scas
mov
shlb
sbbb
lret
cmpsl
mov
and
lret
adc
add
sbb
rcl
lods
imul
mov
inc
dec
push
movsl
test
cli
jne
aaa
dec
int3
add
mov
fdiv
pop
or
outsl
push
into
int
cmp
movsb
cmpsb
mov
mov
add
dec
and
push
scas
cmp
into
jge
nop
xchg
or
ret
xor
xor
inc
mov
sub
dec
mov
xchg
dec
and
xchg
test
into
xchg
arpl
cltd
mov
pop
push
mov
or
xlat
rcrb
mov
pop
mov
jo
lock
sbb
sbb
jle
push
push
pop
adc
out
pop
leave
ret
out
stc
repnz
addr16
es
cmp
sub
push
and
pop
ss
cltd
std
inc
stos
xor
push
dec
pusha
push
sub
fs
add
stos
xchg
push
lret
xor
in
and
push
into
lret
cmpsb
and
mov
lret
adc
pop
jp
mov
andl
ljmp
jno
cmc
add
call
push
clc
mov
dec
mov
out
outsb
js
popa
in
aam
xchg
cs
push
std
adc
xchg
arpl
pop
popa
ss
lods
loop
pop
imul
adcl
adc
cs
xchg
lock
push
or
sbb
jle
fdivs
out
iret
pop
or
and
out
addr16
jg
imul
mov
loope
leave
movsb
push
mov
jb
jnp
rolb
inc
fldl
add
jo
loopne
mov
cmp
sbb
mov
rcll
je
in
jae
test
sbbb
mov
mov
bound
ret
mov
mov
or
pop
pusha
in
into
adc
dec
daa
mov
in
push
mov
pop
pop
add
mov
imul
ret
subps
jg
adc
mov
imul
dec
cmp
movsl
xchg
cmp
int
dec
iret
cmp
mov
daa
mov
aas
and
test
xchg
xor
es
inc
jl
inc
sbb
jl
jns
mov
push
and
cmp
sub
push
ljmp
sub
flds
pmuludq
sarl
mov
insl
stc
xchg
mov
mov
sahf
mov
cs
or
lods
test
add
shll
sbb
test
cmp
dec
xchg
jno
or
out
inc
add
scas
sbb
jno
fstps
lret
out
insb
push
in
add
mov
ss
add
mov
jne
insb
inc
out
inc
gs
fwait
dec
pop
std
fsts
mov
loopne
sub
mov
movsl
jecxz
mov
mov
int3
and
inc
cld
sub
or
cmp
pop
mov
cmc
and
cmpsb
daa
inc
sub
inc
mov
xor
xlat
lret
or
iret
and
inc
ljmp
push
lods
and
int3
xchg
and
leave
out
clc
cmp
cmp
fdivl
das
and
pusha
cmp
not
dec
notl
cmpb
mov
add
leave
aaa
fwait
add
push
es
scas
mov
push
call
mov
pop
xor
lahf
cwtl
flds
xchg
pop
pop
push
pop
mov
pop
mov
ljmp
mov
dec
jb
cli
pop
data16
or
outsb
jecxz
adc
xchg
and
adc
dec
imul
add
paddw
add
cld
test
xlat
and
insl
mov
aam
and
imul
scas
cmpsb
xor
bound
mov
sbb
or
mov
inc
dec
mov
mov
fadds
jecxz
pop
add
sub
pop
in
sbb
add
or
jp
ss
cmp
popf
lods
jae
xor
push
rcll
shll
imulb
scas
pop
sar
into
mov
shlb
mov
idivl
adc
inc
lods
sbb
pop
xlat
and
xlat
jle
pop
cmp
or
xlat
dec
xchg
jle
repnz
lds
lret
leave
lahf
mov
scas
mov
aaa
add
mov
je
test
inc
sahf
fwait
jle
cli
adc
iret
xchg
cmpsb
cmp
sti
pop
mov
dec
pop
test
adc
fdiv
leave
cmpsl
in
fcoml
jle
sub
pop
or
popa
lods
sub
stos
lock
lods
dec
inc
fisttpll
add
lcall
and
xchg
scas
mov
rolb
out
fldcw
out
scas
out
cwtl
dec
sub
add
cltd
add
push
mov
xor
add
push
sub
inc
inc
cwtl
fildll
and
jp
xchg
loopne
aad
ret
and
lods
inc
jno
xor
push
outsb
mov
daa
lret
test
gs
adc
cli
pop
into
into
or
and
nop
cmpsb
or
push
mov
stos
std
leave
das
test
and
insl
fldcw
negl
jecxz
dec
push
adc
push
or
mov
or
xchg
pushf
cld
int3
shrl
fxch
pop
es
imul
call
inc
outsl
loopne
mov
ss
and
adcb
fwait
mov
and
and
test
mov
rcl
fistpl
lds
sbb
nop
shll
movsb
dec
jns
int3
into
in
ljmp
jp
pop
rcll
xchg
mov
std
jns
push
shll
mov
mov
xor
mov
pop
stos
dec
aad
je
push
imul
push
int3
lods
mov
xchg
jle
add
mov
icebp
and
insb
push
mov
jae
mov
rcll
xor
dec
aam
nop
mov
cld
and
sub
scas
or
int
in
pusha
arpl
cmp
or
repz
or
into
scas
int
dec
jne
sbb
pop
and
lea
inc
mov
push
mov
inc
lods
cmpsb
int
dec
mov
mov
cmc
sub
mov
in
out
mov
mov
mov
jp
repz
cmpsl
das
xlat
xchg
je
cmp
jne
bound
subl
cs
push
cmp
in
cmp
and
subl
sahf
data16
leave
loop
jle
mov
push
sub
imul
imul
sub
andb
test
cmp
dec
and
fwait
xorl
je
add
clc
cmpsl
stc
es
loope
dec
cmp
in
pusha
stc
ret
into
or
push
and
pop
scas
scas
add
lcall
dec
mov
mov
aad
scas
dec
inc
iret
daa
shl
hlt
lds
inc
mov
lock
inc
push
mov
pop
lds
pusha
movsl
loope
jmp
jecxz
ds
fs
add
mov
mov
jmp
cmpsl
inc
repz
lret
aam
das
push
lock
adc
adc
xor
adc
push
xor
in
in
ja
sub
cmp
pop
iret
lods
push
cmpl
pop
sub
cld
jb
adc
mov
rclb
ret
test
lahf
adc
xor
sarl
and
add
jo
cld
iret
ret
insl
out
int3
jb
js
scas
xchg
pusha
mov
repnz
inc
subb
rol
ljmp
xchg
add
mov
test
xchg
xlat
sbb
iret
clc
mov
push
xchg
ret
and
inc
stos
xchg
ret
sbb
cltd
mov
movsl
adc
xor
or
sub
mov
xchg
pushf
iret
xor
dec
jae
jg
pusha
adc
pop
push
sub
xchg
adc
and
aad
and
dec
outsl
das
insl
loopne
jge
pop
int3
fdivrs
out
xor
int3
push
cmp
add
lods
push
jae
push
clc
test
jecxz
xchg
pop
pop
test
xchg
sbb
or
cli
sub
xchg
pop
mov
xchg
push
cmc
xchg
xchg
nop
std
pop
imul
dec
imull
push
in
jno
adc
jecxz
sbb
shrl
mov
les
mov
fsub
xor
ljmp
adc
notl
lods
test
fldl
pop
mov
jnp
dec
add
in
or
sbb
or
jmp
or
lods
mov
cld
inc
mov
dec
cs
leave
push
fs
mov
mov
add
hlt
mulb
call
je
mov
cmpsl
imul
inc
push
test
dec
out
je
ja
addr16
push
cwtl
movsb
imull
mov
mov
das
xlat
pushf
out
sub
push
imul
lds
inc
xchg
aam
pop
stc
xchg
xor
xchg
in
push
orl
daa
fs
shl
mov
mov
psraw
int3
mov
sbb
iret
nop
cmc
in
sbb
jmp
jmp
daa
jo
movsl
orb
cmpsl
mov
jbe
out
xor
fstl
cs
inc
fdivl
scas
stos
iret
rcr
jbe
xchg
mov
js
dec
mov
stos
mov
jge
inc
fsts
inc
rolb
mov
or
lock
dec
shrl
and
stc
imul
dec
xchg
jns
cmp
mov
and
mov
gs
sbb
enter
mov
bound
nop
pop
or
pop
aas
push
jne
fildll
sbbb
fnstsw
inc
push
and
testl
push
adcl
iret
xchg
push
adc
shl
push
jno
sbb
ss
ja
xchg
mov
cmc
jl
repz
imul
mov
inc
dec
test
dec
das
int3
dec
dec
dec
xchg
inc
cmp
loopne
mov
dec
add
push
mov
jb
js
fwait
sbb
leave
push
push
mov
mov
repz
and
scas
xchg
mov
mov
push
ljmp
mov
jns
out
cwtl
test
adc
aam
in
jo
stc
icebp
iret
repnz
jns
jg
das
mov
mov
pop
jp
fs
push
fistl
jb
shll
aad
testl
loopne
push
jge
fsts
lret
xor
sbb
sbb
fs
shlb
rcrl
jg
fsubrl
mov
test
stos
iret
popf
or
sti
in
test
push
pop
mov
push
xchg
sub
in
out
xchg
push
mov
int3
push
mov
mov
es
dec
jmp
adc
pop
adc
push
pop
mov
jnp
add
out
push
adc
fsubl
sti
and
lock
pop
aad
out
cld
sub
sub
out
repz
mov
sub
sbb
add
popf
lret
ret
insb
cli
xor
jno
mov
pop
mov
cwtl
sub
rorl
mov
add
lahf
in
mov
mov
xor
mov
inc
pop
xor
out
sub
sub
mov
push
push
push
in
or
aaa
inc
pushf
loopne
jb
sbb
pop
xor
push
les
das
das
les
hlt
add
pop
fmuls
fisttps
mov
in
sbbl
dec
adc
shll
push
dec
mov
cmp
cmp
andl
repz
cmpsl
in
jnp
ja
mov
ds
sbb
pop
adc
jo
mov
mov
lcall
ror
push
je
and
int3
lea
sete
mov
add
or
not
push
xlat
out
sbb
lret
mov
and
push
stc
fsub
dec
test
fidivrl
pusha
sbb
adc
inc
and
nop
inc
sti
dec
jecxz
sbb
std
filds
mov
sub
fwait
pop
rorb
movsl
inc
rol
bound
dec
mov
in
fdivs
sbb
mov
jg
dec
mov
mov
adc
push
fldenv
mov
idivl
pushf
movsl
ficoml
aas
rorb
sub
cmp
push
shlb
mov
movsb
shll
add
sahf
stos
ret
and
xchg
dec
push
loopne
scas
adc
rcrb
out
push
cld
jo
or
mov
insb
ss
dec
push
add
test
dec
lret
out
and
mov
dec
inc
jae
dec
aad
xchg
ljmp
test
js
loope
cmp
push
les
aas
xchg
pop
stc
jno
mov
mov
repnz
mov
sbb
sahf
push
xor
mov
das
negl
jbe
xchg
or
mov
sahf
mov
or
pop
ret
inc
fisubs
lcall
jle,pn
sbb
xor
cmpsl
outsb
or
xchg
xor
xchg
pop
je
push
adc
ja
rclb
dec
xor
push
clc
ja
ret
sub
jne
and
pop
mov
hlt
dec
jns
scas
lahf
lods
sbb
pop
loopne
subb
mov
out
xchg
xchg
mov
out
xchg
and
jno
movsb
mov
jns
inc
fs
rolb
xchg
addl
xlat
push
dec
cmp
scas
mov
jae
ret
add
pushf
pop
fs
or
dec
scas
scas
pop
out
mov
pop
test
inc
inc
cmc
arpl
out
mov
cmp
sub
movsl
roll
bound
test
mov
inc
mov
dec
and
adc
jo
movsb
mov
cltd
rclb
add
mov
or
out
loop
xor
mov
and
cmp
lock
push
and
sub
enter
cmp
in
push
xor
outsl
add
inc
mov
inc
cmp
sbb
xchg
shr
mov
ret
fdivs
ret
pop
jns
fs
js
inc
jae
cli
loope
hlt
xor
aam
es
and
xchg
test
test
xchg
pop
xchg
ss
mov
jge
adc
dec
add
mov
test
sbb
mov
mov
dec
movl
inc
lahf
jmp
test
or
out
nop
mov
int3
cs
or
mov
sahf
and
jmp
jns
es
sbbb
push
and
jns
xchg
mov
pop
mov
xor
scas
pop
xchg
and
sbb
dec
fsubrl
popw
loope
or
sbb
cmpsb
in
push
xchg
push
pop
stc
rcr
fisubl
fimuls
popa
mov
outsb
pusha
xor
out
add
mov
popf
mov
out
imul
call
dec
aad
adc
mov
aaa
sbb
pop
xchg
outsb
popa
aas
xchg
jmp
pop
sbb
enter
mov
into
outsl
xchg
mov
jae
test
xor
mov
push
jp
pop
enter
lret
test
xchg
add
xchg
add
mov
dec
mov
rcll
jmp
test
movsb
je
ret
inc
and
pusha
leave
popa
repnz
rcrb
mov
aad
aam
lcall
movsb
mov
push
cmp
gs
adc
inc
dec
aad
and
add
into
add
dec
rolb
rorl
sti
pop
in
mov
sub
push
jnp
mov
jne
cwtl
vcomisd
sbb
sbb
je
ffree
push
rol
cli
shlb
outsl
mov
cmp
lods
insl
mov
adc
shrl
dec
mov
dec
and
mov
xor
jnp
sbbl
mov
xchg
push
mov
loope
pushf
mov
cmp
or
mov
mov
add
mov
test
mov
jg
cmp
cmp
sub
dec
sub
das
mov
pop
pop
adc
mov
add
mov
aaa
hlt
xor
es
stc
mov
pop
iret
jmp
ds
xchg
inc
add
pusha
int
stos
pop
sbb
cltd
mov
sub
insl
inc
ret
mov
out
aaa
push
mov
rcll
xchg
pop
sbb
mov
push
jg
fsubrs
push
aad
sub
push
call
adc
cmp
fldt
in
push
pushf
dec
and
daa
push
nop
pop
popf
inc
outsb
pusha
int3
aas
pushf
adc
and
jge
jo
fs
cmp
rorb
fstpt
push
xlat
cli
and
sbbb
stos
test
adc
xchg
cltd
add
das
scas
inc
jg
mov
ja
inc
xor
repnz
test
dec
cmp
movsl
int
loopne
xchg
mov
xchg
jne
or
ss
mov
mov
test
pushf
mov
mov
dec
idivb
das
bound
xchg
rcll
ret
xchg
adc
and
or
cmp
push
orb
adc
push
adc
shlb
lahf
sub
push
adc
in
xchg
and
sbb
pushf
pop
not
jo
push
in
mov
mov
jae
mov
adc
adc
outsl
or
pop
xor
push
fwait
push
lea
inc
pop
push
push
imull
pushf
movsl
inc
dec
add
xor
clc
call
clc
or
packuswb
dec
push
bswap
and
fdivl
sub
mov
ja
mov
aas
dec
sti
fadds
pop
daa
mov
test
loope
iret
in
add
mov
lds
lret
adc
cltd
scas
cmp
push
xchg
pusha
sbb
fstps
jno
add
dec
insl
fwait
dec
cli
xor
cmp
inc
cmp
vdivsd
cmp
xchg
push
aaa
mov
addr16
enter
push
mov
es
pushf
call
fistps
pop
fistpll
adc
jnp
push
mov
cmp
mov
cmpsb
addb
mov
int3
pop
icebp
ja
je
mov
mov
ret
cmp
cmp
insb
pusha
push
sbb
jmp
cmp
mov
mov
xor
push
adc
inc
fsubr
imul
ficoml
inc
mov
je
push
jle
es
push
jg
mov
lret
lcall
push
leave
test
add
arpl
daa
jnp
mov
test
fiaddl
push
fstps
push
rcrl
or
popa
inc
xchg
andl
inc
fnstcw
stc
pop
loopne
pop
and
jmp
mov
scas
jnp
add
out
test
nop
cmp
jo
adc
nop
pop
aam
dec
xchg
stos
pop
mov
cltd
pusha
pop
push
movsl
pop
sbb
das
les
popa
mov
pop
fcmovnu
xor
negb
dec
mov
daa
and
jbe
int3
dec
iret
mov
xor
xchg
xchg
in
xor
sub
pusha
sub
xor
jle
push
mov
fwait
mov
leave
les
test
inc
add
sbb
push
xchg
int
lret
scas
cmp
ret
or
add
add
push
dec
gs
or
sub
fstps
or
stos
cmp
std
iret
call
into
lahf
into
ss
sbb
leave
add
and
push
sub
testl
mov
insb
enter
dec
cltd
jno
lcall
inc
push
mov
sahf
scas
push
movsb
mov
leave
out
leave
ffreep
popa
shll
pop
rcrb
test
or
imul
hlt
mov
sub
into
mov
sbb
daa
aas
mov
int3
hlt
xor
dec
adc
andb
or
mov
dec
adc
out
aam
cmp
sti
out
dec
sbb
js
out
add
adc
push
adcl
test
inc
add
mov
mov
xchg
aaa
adc
mov
sub
jbe
and
je
xor
xor
jle
jl
out
cmpsl
outsl
xchg
push
xor
mov
mov
call
repz
pop
ficoml
mov
jns
push
rcrl
cmp
mov
shrl
stos
test
push
mov
and
pop
inc
mov
mov
mov
bound
push
cmpsl
call
add
cmpsl
dec
jecxz
jae
adc
mov
and
pop
scas
jae
jbe
xchg
cmp
sbb
stc
mov
test
insl
inc
push
loop
jmp
fdivl
adc
sbb
jle
push
aaa
sbb
xor
mov
sub
push
leave
mov
jp
insb
pop
gs
out
iret
push
or
mov
inc
adc
jge
bound
out
sahf
stos
sub
lret
iret
in
cmp
fwait
or
mov
jne
shlb
dec
stos
xor
fbstp
mov
aaa
dec
pop
sbb
and
pop
jae
lods
mov
jge
insb
rcll
popa
std
arpl
cmp
jl
lods
xchg
repz
test
mov
aas
mull
nop
xchg
pop
call
imul
mul
lcall
lods
jl
movsb
cltd
jle
cltd
mov
sbb
movsl
shl
inc
lea
sahf
ret
jecxz
imul
mov
inc
test
pop
mov
insl
movsb
push
je
in
sub
movsl
jg
mov
and
inc
push
xor
xchg
lcall
icebp
mov
mov
paddq
outsl
mov
cmpsl
test
cmp
cli
pop
sub
xchg
lods
mov
lods
mov
repz
int3
xchg
jbe
mov
bound
dec
scas
pop
clc
cltd
xchg
xchg
mov
xor
push
imul
mov
and
pop
jmp
out
arpl
ficompl
fwait
les
sbb
sub
js
xchg
nop
or
cmp
fwait
js
sar
hlt
sub
pop
cmp
daa
mull
push
std
fisttpll
dec
orl
fnstsw
repnz
adc
cwtl
pop
fld
repz
pop
pop
fldl
fs
push
fstl
adc
and
repnz
xor
movsl
movsb
adc
adc
pusha
sahf
jmp
out
movsl
lahf
int
adc
in
cmp
inc
xchg
iret
sbbl
loopne
test
push
fimuls
xchg
lock
cmpsl
loope
and
mov
int3
cwtl
push
sarb
andb
in
sub
faddl
inc
inc
inc
mov
repz
xchg
jge
mov
ds
mov
or
and
imull
lcall
repz
push
lods
popa
cmc
mov
pop
mov
sub
daa
lcall
push
push
imul
icebp
in
cmp
int
call
neg
sbb
lea
loopne
or
sub
mov
ds
jl
dec
mov
roll
addl
data16
add
pop
ret
inc
push
or
jns
inc
out
insl
addb
push
jns
fiadds
mov
mov
nop
cwtl
pushf
fisttps
leave
add
jno
sbb
clc
adc
push
xchg
in
pop
mov
je
sbb
sbb
adc
lds
lahf
stc
mov
leave
sbb
in
daa
xchg
int3
sbb
jne
mov
mov
loope,pt
subl
push
popf
sub
xlat
cmpsl
lods
loopne
shrb
gs
xchg
hlt
scas
and
cwtl
sub
xor
and
jecxz
clc
push
testl
sub
sbb
rcr
sub
cmpl
jmp
movsl
jmp
sub
enter
cmp
jnp
outsl
lret
sub
div
mov
jge
jnp
mov
mov
out
lods
shrl
cld
dec
cmp
ret
data16
and
loop
inc
jo
mov
pop
jp
shll
xchg
sbb
ficoml
mov
js
sbb
sbb
es
repnz
insb
adc
mov
xlat
dec
mov
jle
int3
les
or
bound
dec
aam
and
push
lds
pop
mov
loop
repz
or
jbe
shll
jl
nop
pop
stc
pop
xchg
fcomp
mov
data16
rcrl
movb
lock
push
std
sub
cs
fwait
or
aaa
mov
enter
mov
shl
mov
cmp
sti
scas
mov
xor
sub
pop
ret
mov
xchg
push
int
outsb
cli
loop
js
stos
sbb
xor
cmpsl
in
jge
push
fwait
add
test
jle
dec
test
push
nop
insl
shr
dec
daa
and
test
adc
enter
mov
or
jnp
or
lods
cmp
pop
lret
cmp
mov
mov
and
sti
shlb
arpl
ljmp
cmp
dec
pop
cld
cmpsb
mov
xchg
push
orb
fldcw
inc
pop
sti
and
lea
pop
and
cmc
add
cmpsb
or
inc
aad
insb
fidivs
negl
push
push
popf
cmp
into
mov
ret
jg
cli
pushf
dec
pop
lret
fldcw
xchg
lcall
mov
inc
mov
out
jle
mov
pusha
mov
mov
outsb
cmpsl
dec
xchg
pop
mov
pusha
test
xor
cs
inc
in
xor
enter
cltd
mov
jle
inc
pop
idivb
rcrb
out
ljmp
fstpt
insl
lock
out
lahf
lock
push
out
fwait
xchg
scas
enter
mov
xchg
js
pop
sbb
hlt
adc
mov
xor
test
jno
gs
xor
mov
gs
mov
ret
scas
fs
xchg
adc
aam
add
inc
call
test
je
cld
rorb
mov
xor
fadd
icebp
enter
sbb
loopne
or
pop
mov
xor
add
iret
push
sbb
xchg
lods
jno
push
or
jnp
add
movsb
dec
fwait
cmpb
cs
fdivrl
push
xchg
dec
jl
jge
ljmp
orl
inc
out
in
in
gs
cmp
jge
pop
notl
pop
jo
mov
pop
xchg
xlat
imul
add
outsl
pop
add
push
xchg
data16
and
sbb
pop
jne
mov
dec
xor
sbb
dec
push
cmp
in
ret
in
adc
jns
push
mov
iret
icebp
mov
in
jnp
insb
cld
pop
and
lock
movsb
pop
arpl
sahf
bound
ljmp
cmpsl
inc
std
imul
sub
pop
movsb
imul
ret
out
xchg
pop
test
ret
jnp
lock
push
add
out
mov
in
add
mov
js
mov
scas
jmp
int
jo
xor
push
ret
push
mov
xchg
mov
sarl
sbb
xchg
sub
inc
sub
mov
ds
test
mov
xor
andl
and
fcomps
xchg
xchg
sbb
xor
inc
inc
inc
in
jnp
cmp
pop
and
push
pop
aaa
int
jecxz
data16
pop
push
or
and
mov
sbb
adc
mov
push
push
push
js
inc
fwait
mov
out
jb
fwait
cmp
scas
repnz
pop
call
in
pop
add
push
or
jno
ret
fmull
add
mov
add
push
jle
cmp
push
loop
push
sbb
xchg
and
push
stos
inc
mov
xchg
sbb
cmp
sarb
inc
dec
ss
loop
lea
nop
jecxz
lds
scas
pusha
cmp
adc
jnp
test
popf
das
jb
xchg
mov
cmp
mov
mov
addr16
dec
fcomps
cmp
dec
sbb
fs
pushf
jno
cmp
xchg
dec
xchg
mov
pusha
gs
aas
xchg
into
or
outsl
jne
cwtl
jno
dec
dec
cwtl
mov
popa
fists
std
call
scas
lock
mov
out
iret
repnz
jne
stc
xor
adc
pop
js
rcrb
inc
lock
cltd
push
jge
out
or
shlb
cmpsl
out
jge
loop
xchg
les
pushf
push
movsl
xor
dec
cmp
adc
jmp
cmpsl
mov
jge
ja
mov
cmp
test
xor
mov
jnp
jae
jge
jmp
mov
mov
cmpsb
in
or
stos
sbb
jge
sbb
inc
xchg
rclb
and
adc
mov
popf
cs
in
fs
xchg
adc
lcall
pop
insl
fcmovnu
or
sub
add
fsubl
cltd
add
enter
gs
rorl
insb
loopne
push
cmp
lret
stc
mov
cmp
sbb
pop
inc
xchg
mov
mov
mov
push
fiaddl
add
aaa
dec
add
xor
jp
mov
hlt
out
fistpl
mov
ds
push
adc
sub
push
ret
or
adc
loop
jp
jl
cmp
dec
mov
stc
inc
cli
xor
and
push
cmp
popa
bound
xor
jnp
ret
dec
lcall
repnz
xchg
mov
mov
and
pop
call
aaa
sbb
xlat
mov
mov
inc
aam
or
sbb
dec
imul
inc
mov
fsubrl
sbb
jb,pn
inc
xorb
arpl
fwait
inc
shlb
push
fimuls
or
test
jbe
sbb
lods
mov
test
punpckhdq
ret
loop
xor
mov
movsl
addr16
fimull
mov
pop
lods
inc
sub
dec
fldl
adc
icebp
sub
nop
pop
cmp
dec
es
sbb
js
mov
iret
hlt
aad
pop
cmp
dec
push
in
popf
flds
stc
cmp
add
out
out
setb
jnp
bound
out
arpl
and
decb
ja
jecxz
cli
out
mov
mov
xlat
aad
pop
pop
fcompl
fisttpl
xchg
pop
and
es
push
mov
jmp
xor
cmp
daa
add
and
sti
add
outsb
xchg
incb
mov
push
add
push
popf
fadds
cmp
xor
jnp
sbb
mov
sbb
shrb
mov
add
mov
das
in
xlat
popf
sahf
push
cld
inc
repz
scas
andb
sub
sbb
xchg
ret
lods
push
ret
or
clc
icebp
jae
scas
out
mov
sti
adc
cmp
push
jp
cmpsb
mov
idivl
jg
lahf
int3
out
xor
hlt
shrb
sub
push
xlat
lahf
mov
cmp
daa
int
sbb
pop
jmp
cmpsl
inc
push
push
sbb
iret
sbb
xchg
test
xchg
insb
sar
fcmovnb
popa
jge
dec
jp
arpl
mov
mov
cmp
out
out
xchg
and
popa
test
pop
leave
mov
mov
add
test
hlt
push
popa
ret
xchg
add
jb
xor
enter
das
popf
movsb
stos
stc
jle
mov
insb
ficomps
fdivr
mov
jg
rorl
adc
and
inc
inc
jl
int3
dec
push
cmp
xchg
or
inc
mov
or
push
faddl
clc
push
xchg
jne
icebp
pop
inc
shl
les
out
out
push
cmpsl
shlb
fstps
or
xchg
push
and
cld
push
pop
or
cmpsb
jl
repz
scas
jg
out
adc
push
mulb
cmp
and
mov
pop
je
inc
push
test
stc
shll
rorb
incb
sbb
cli
jl
cmpsl
js
mov
pushw
dec
ret
js
push
inc
bnd
cwtl
fcmovbe
enter
je
xchg
aas
rorb
notl
test
jbe
mov
lock
loope
or
ja
inc
cld
lock
out
cltd
jle
test
imul
inc
sub
imul
in
mov
ja
jns
xor
xchg
mov
in
aad
xlat
out
xor
jb
repz
test
jae
shlb
dec
ss
insl
push
cmp
ljmp
push
dec
insb
roll
pop
adcb
adc
xchg
xchg
mov
adc
sub
mov
inc
pushf
cmpsb
shlb
inc
hlt
adc
adc
shll
inc
cld
mov
dec
xchg
jecxz
sub
addl
and
pop
xor
xor
shlb
xchg
icebp
arpl
or
pop
inc
pop
orl
push
push
insb
lea
lds
inc
jmp
ret
and
mov
int3
pop
flds
shl
jl
pop
and
pop
add
sahf
dec
mov
imul
jmp
test
inc
loop
sbb
jle
pop
push
sub
dec
movsb
stos
add
jns
jl
icebp
pop
nop
cmp
aad
in
fstl
cmp
push
cli
add
fs
sub
ja
pushf
ret
dec
xor
inc
popa
mov
xchg
mov
fcoml
std
sub
stc
popf
es
data16
pop
daa
add
xor
inc
xor
bound
out
ror
push
imul
push
movsb
mov
cltd
adc
push
insb
out
mov
ret
mov
push
imul
sarl
imul
push
leave
sti
insb
mov
mov
cs
push
cmp
xlat
out
push
sbb
xchg
mov
pushf
mov
movsb
jg
pushl
in
inc
mov
cmp
sarb
xlat
scas
mov
movhps
out
cli
cs
lret
fmuls
sub
cmp
pop
out
mov
fistpl
mov
and
cld
adc
cmc
dec
aad
push
enter
das
jmp
mov
dec
lret
js
hlt
lods
rcll
pop
jae
loope
add
out
pop
stos
add
jbe
fwait
xchg
mov
mov
into
jge
pushf
inc
mov
mov
xchg
add
mov
test
out
cmpsl
cwtl
int3
mov
push
lret
mov
fcomi
inc
or
leave
inc
jb
into
stos
ss
mov
xchg
pushf
in
cltd
sbb
rol
jp
scas
gs
fcoms
adc
inc
xchg
pop
jnp
test
and
mov
aam
fnstenv
in
mov
jl
repz
out
or
or
adc
mov
adc
out
movsb
sahf
and
aas
xor
mov
imul
or
int3
nop
out
mov
in
mov
add
test
es
les
fdivrl
in
jnp
fisubs
sbb
loope
ret
xchg
inc
in
scas
jns
lret
sarb
xchg
cmpsl
ja
rcll
and
testl
nop
jnp
shrb
sbb
dec
mov
sbb
pop
mov
nop
xchg
cltd
and
mov
add
mov
dec
fs
mov
mov
push
into
xchg
xor
pop
or
stos
iret
dec
mov
cmp
out
mov
loope
pop
jle
outsb
and
test
or
adc
mov
rolb
roll
js
div
out
mov
lods
push
mov
or
jbe
fucompp
cmp
push
enter
loopne
je
imul
mov
mov
xlat
imul
enter
ss
or
pop
jg
sub
push
sbb
sub
fldenv
mov
or
dec
cmp
xor
pop
mov
jecxz
cmp
stc
xchg
jb
loop
daa
and
inc
jmp
idivb
sbb
xor
cs
add
fimuls
or
xchg
lods
xor
or
mov
mov
pop
pusha
and
outsb
xlat
cmp
fistl
sbb
or
inc
xor
test
pop
mov
call
jnp
xchg
imul
std
call
sub
mov
jmp
popw
push
inc
lock
adc
adc
iret
loope
test
popf
pop
mov
cli
xlat
xchg
mov
dec
pusha
inc
xor
mov
ja
push
pcmpgtw
bound
mov
push
mov
pop
and
daa
or
enter
scas
mov
test
jmp
das
xorl
cld
rcll
sbb
shr
mov
fdivrs
popa
xchg
clc
push
or
pusha
icebp
xorb
pop
out
popf
rcl
fwait
into
sbb
jae
jg
and
jmp
jmp
lods
ja
sub
dec
push
sbb
enter
cmp
mov
cltd
rorl
arpl
or
push
xchg
adc
push
shr
es
movsl
out
mov
jecxz
mov
push
sbb
and
add
cmp
adcl
jns
mov
js
sub
cwtl
adc
sarb
mov
cld
sbb
push
sub
insl
xchg
shlb
adc
sub
insl
es
push
lcall
jg
jge
xor
sub
xchg
shll
int3
pop
out
push
cld
or
add
sbb
das
roll
lods
jne
inc
sarb
mov
in
push
imull
jbe
popa
adc
xchg
sub
lock
stc
xor
sub
add
in
lcall
dec
popf
inc
xchg
push
xor
lret
mov
jno
nop
gs
outsb
pop
clc
in
es
pop
xor
aaa
popa
mov
cmpsb
cmpsb
imul
xchg
lds
add
aad
add
push
les
adc
ret
jnp
adc
mov
sub
lcall
pop
call
pop
adc
les
mov
push
push
xchg
hlt
aas
arpl
xor
aas
push
rcrb
sub
xor
xchg
xor
lea
lret
je
inc
pop
add
rclb
and
mov
add
push
or
sub
mov
cltd
aam
add
xchg
mov
movb
mov
scas
ja
inc
out
iret
addr16
test
in
cmc
jnp
fsts
testb
icebp
push
jmp
xchg
sbb
leave
sub
dec
fdivp
aaa
cmp
outsb
dec
fmuls
jge
jle
inc
rcr
mov
in
mov
cmp
sub
push
out
xor
out
mov
cmp
dec
or
xchg
in
icebp
hlt
scas
adc
ficompl
push
sbb
mov
mov
cmpsb
push
inc
sbb
xorb
add
xor
or
xor
jecxz
mov
popa
scas
jns
cs
sub
rcll
sub
ja
testb
in
pushf
pop
xchg
inc
xchg
jno
dec
cld
sub
daa
cli
mov
int
dec
inc
rcl
fmull
mov
mov
shrb
push
ja
mov
test
mov
xor
mov
pop
pop
mov
add
daa
push
push
mov
sub
call
push
in
enter
or
adc
sbb
push
fimuls
adc
mov
scas
ret
dec
pop
adc
pop
push
xchg
mov
xor
and
ret
mov
inc
cmp
dec
xlat
lock
sbb
rclb
add
and
fcmovb
popa
pop
adc
fnstcw
xchg
add
sub
shrb
sub
out
stos
les
orb
adc
add
fsubs
jmp
pusha
cmpsb
jge
stc
mov
sarl
insl
in
test
addr16
jb
pusha
push
cs
dec
mov
pusha
popa
ljmp
addr16
cltd
fnstenv
pushf
push
in
xchg
js
movsl
pop
test
pop
adc
lret
push
std
mov
out
sbb
addb
in
loope
xchg
out
and
mov
das
xchg
lods
cmp
xchg
inc
sub
stc
jne
adc
lret
mov
push
xchg
test
test
or
pop
mov
or
xor
xor
add
cmp
mov
in
and
inc
xchg
insb
repz
jno
jae
inc
mov
addr16
lcall
fcoms
filds
repnz
test
dec
sti
in
shrl
mov
jg
int
shlb
sti
push
push
inc
sub
mov
jne
pop
rorb
add
loopne
push
sub
loopne
into
jb
mov
enter
jnp
push
cltd
fadds
icebp
cmpsl
and
xchg
lcall
adc
sbb
std
lods
in
mov
lret
sarb
cmp
icebp
dec
and
jo
fiadds
dec
lret
cltd
mov
rcrb
cmp
jp
dec
sub
rcrb
dec
es
sub
rep
sbb
mov
out
imul
dec
imul
adc
mov
inc
and
out
stos
or
je
pop
inc
hlt
xchg
inc
pop
int3
cmp
sbb
inc
ja
iret
faddp
mov
lods
mov
jne
ljmp
and
ret
or
test
pusha
not
xor
adc
push
ds
cld
or
arpl
shll
or
dec
shll
ss
imul
addl
in
sub
outsb
mov
daa
mov
negl
cli
hlt
mov
mov
pop
cld
push
and
ja
sahf
add
mov
rcrb
jecxz
je
cli
mov
repnz
adc
cs
push
cltd
std
je
push
movsl
dec
das
mov
pop
push
xor
daa
or
dec
fucom
and
rol
xor
clc
mov
scas
fidivs
lcall
fimuls
sub
fnstenv
sub
sub
cltd
dec
sti
push
mov
sub
dec
xchg
out
ljmp
rolb
dec
lret
in
lret
adc
jp
xchg
cld
or
jecxz
mov
cmp
xchg
pop
mov
ret
jb
mov
jbe
mov
cmp
push
inc
enter
and
lea
lods
dec
adc
mov
ret
dec
push
mov
cmpsl
adcb
in
cli
jp
cmc
inc
xor
mov
jae
jg
inc
xchg
and
add
push
mov
xchg
sahf
xchg
shlb
mov
dec
push
lahf
or
mov
mov
sti
incl
icebp
dec
pop
mov
mov
and
leave
inc
mov
clc
sarl
cmp
cmp
mov
inc
test
sbb
mov
adc
push
jb
push
jecxz
fnstenv
jno
cwtl
pop
das
sub
and
or
sub
outsb
in
icebp
xor
jo
or
add
iret
add
sub
inc
test
shlb
xchg
call
fdiv
psraw
jecxz
repz
sti
daa
in
adc
loopne
in
test
mov
test
ljmp
push
xor
push
xchg
test
les
jle
aam
in
mov
dec
mov
addr16
or
add
test
cmp
call
pop
mov
incl
enter
incb
stos
nop
or
mov
bound
insl
nop
rorb
adc
imul
notl
jns
add
fcoml
push
cmpsl
loop
fimuls
sub
pop
inc
sbb
pop
imul
cmp
notb
mov
adc
mov
adc
mov
push
pop
mov
xor
xchg
addb
scas
pop
leave
f2xm1
movsb
xor
in
adc
stc
loopne
mov
dec
inc
pop
pop
lods
push
xlat
push
lret
sbb
push
call
idivb
xor
js
push
out
mov
sub
in
cmp
add
outsb
mov
ds
jb
les
negb
add
or
insl
inc
mov
jle
sti
add
loope
lcall
mov
or
out
jle
ljmp
loope
jae
add
or
cwtl
inc
jp
lea
inc
int
in
jecxz
or
add
lret
jecxz
pop
call
scas
pop
mov
pop
test
in
jmp
mov
jp
jmp
mov
jmp
lret
inc
inc
sbb
movb
sub
xchg
jl
xchg
jne
sbb
fiaddl
cmpsb
das
sbb
add
mov
ss
call
adc
or
sbb
mov
or
lods
add
movsb
pop
addr16
js
pushf
add
mov
mov
xor
addr16
arpl
xchg
fildl
push
dec
cwtl
cmp
leave
movsl
mov
sbb
addr16
js
xchg
int3
pop
inc
jno
in
les
test
mov
push
or
xchg
ds
repz
js
ljmp
push
test
mov
mov
sub
dec
and
pavgw
push
mov
nop
mov
lret
test
int3
inc
mov
jno
add
push
push
out
jae
scas
lcall
xchg
mov
outsb
pop
scas
sar
int
loopne
push
in
xchg
mov
pop
aas
or
cmp
inc
sub
dec
xchg
pop
jle
pushf
inc
dec
stos
push
cli
xchg
repnz
test
lock
popa
jg
in
and
xor
xor
test
xchg
and
or
lcall
xchg
sarl
idivb
sbb
clc
ja
sub
inc
push
pop
testl
jnp
aam
test
cli
leave
mov
mov
mov
in
mov
mov
out
lret
jbe
js
push
scas
jns
sbb
add
aad
ror
sbb
pop
test
fadds
pusha
push
hlt
mov
push
stos
add
int3
stos
lea
cmpsl
pop
cltd
adc
ss
insb
daa
mov
gs
or
add
fnsave
arpl
test
mov
outsl
call
mov
or
mov
xchg
mov
aas
xlat
outsb
adc
mov
or
loope
inc
ficoml
push
push
stc
mov
fsubrs
rcl
jae
lods
xchg
or
pop
gs
popa
cli
dec
aaa
shlb
adc
cmp
inc
jmp
cmpsb
add
nop
out
shlb
cmpb
daa
not
dec
popa
mov
jns
fs
pop
mov
mov
decl
fimuls
add
add
test
ret
rcr
pop
push
push
xor
js
xchg
lahf
imul
test
mov
imul
and
adc
cmpb
pop
rorb
mov
mov
mov
jl
pop
mov
dec
pop
push
or
imul
lahf
mov
es
fisubl
sbb
enter
mov
pushf
mov
jae
bound
xchg
subb
cltd
dec
mov
fisttpl
xor
lret
xlat
push
or
inc
stos
repnz
repnz
xchg
stos
cmc
lods
fistl
mov
sub
mov
push
in
out
pop
pop
paddb
scas
subb
mov
adc
inc
xchg
xchg
and
xor
in
ss
sub
or
mov
inc
fists
aam
mov
mov
ret
imul
mov
sub
lds
inc
push
cmp
pop
aad
xchg
jg
in
psrad
lods
es
xchg
dec
pop
lods
cmc
jne
push
xorl
jg
pop
rcll
xor
in
icebp
push
lock
push
xor
in
add
xlat
mov
std
push
cmp
insl
aam
outsb
mov
xor
adc
and
lret
out
pop
out
adc
xchg
jns
inc
sub
jmp
cmp
repnz
lret
enter
aas
mov
fstps
js
push
push
bnd
sbb
mov
cmp
pop
sar
mov
loopne
xchg
loopne
inc
leave
test
cmc
rcll
lods
pop
fadds
jp
add
mov
xchg
add
pop
jo
push
fiaddl
or
pop
popf
push
cld
pop
outsb
fucomi
in
adc
pop
add
insl
push
mov
lea
outsl
push
mov
mov
push
sbb
imul
and
test
mov
mov
adc
in
mov
jmp
dec
test
inc
pop
fs
jno
pushf
mov
dec
fdivrp
test
dec
pushf
push
sub
loope
jle
xchg
fdivr
hlt
mov
stc
pop
or
sbb
mov
add
pop
sub
fmull
fidivrs
inc
cmp
and
xchg
fcoml
xor
repnz
adc
mov
outsl
sahf
mov
int3
ret
adc
je
in
std
cmp
adc
push
xor
sub
dec
out
push
out
xor
fisubrl
lcall
sub
repz
aas
xchg
pop
loopne
push
fadds
ss
imul
fisubrs
loopne
arpl
es
jb
sahf
out
xchg
xchg
mov
adc
sub
jns
icebp
mulb
mov
lea
mov
aad
jnp
push
lahf
in
sub
mov
cmpsl
outsl
pop
bound
jge
xor
dec
mov
adc
inc
ret
sbb
sbb
push
sub
pusha
dec
scas
jnp
sub
push
nop
inc
stos
push
mov
push
sub
push
lods
cmp
cmp
jl
arpl
sbb
xor
aas
cld
inc
mov
add
and
fmull
cmpsb
shlb
mov
sbb
jns
add
pop
mov
adc
add
popa
js
shrb
ljmp
adc
push
push
mov
xor
mov
daa
daa
add
loope
mov
imul
dec
enter
dec
sub
insb
fdiv
sub
inc
jl
sbb
inc
cs
cli
push
cltd
push
jb
fnstsw
cli
je
sbb
outsb
sub
repnz
fucomip
mov
movsb
lret
imul
mov
fs
aad
mov
repz
lods
out
xor
cli
sbb
mulb
rclb
popa
push
inc
xor
push
sub
std
movsl
cmp
jb
sbb
test
sub
adc
es
cmp
push
or
pop
call
ror
movsl
loope
call
fisubs
outsb
mov
adc
cltd
mov
push
jp
lret
repnz
adc
pop
push
outsb
lods
and
iret
sbb
cwtl
out
xchg
ret
adc
xor
scas
fldenv
aas
test
sbb
stos
xlat
call
or
jmp
push
lahf
jb
inc
adc
flds
leave
dec
fdivrl
jle
dec
in
cltd
inc
jmp
fwait
icebp
jno
xchg
mov
out
sahf
mov
scas
mov
add
adc
aad
dec
inc
in
lea
fcmovb
shlb
lahf
repz
push
xor
mov
loop
aam
into
pop
hlt
jns
fs
sahf
dec
jge
divb
shrb
mov
mov
add
sub
push
inc
push
call
push
int3
mul
adcb
push
mov
mov
ret
test
mov
mov
lods
xlat
mov
sbb
cmp
adc
mov
lods
dec
imul
pop
repnz
cmpsb
sahf
jecxz
flds
test
jae
lods
add
andb
lods
pop
mov
and
cmp
rcl
adc
or
jge
jo
xchg
addr16
inc
mov
lods
mov
test
cmp
lds
mov
push
popa
sub
pusha
xchg
test
aam
sub
jecxz
out
xor
ret
xor
dec
insl
test
push
ds
loope
inc
sbbb
ljmp
jecxz
fwait
test
sub
test
pop
fs
cmc
push
loopne
push
sbb
xchg
aad
push
nop
stos
pandn
pop
mov
cmc
out
std
jmp
xchg
xchg
push
or
lods
ljmp
cmp
or
jp
adc
and
lods
xchg
jo
sahf
xchg
icebp
andl
fwait
and
stos
and
add
aas
bound
push
sti
dec
outsl
cmpsl
popl
xor
loop
mov
cmp
enter
cmp
mov
aam
in
and
stos
frstor
mov
icebp
test
mov
inc
xor
rolb
loope
pop
xor
or
or
lods
cmpl
in
bound
jp
mov
sbb
xor
pop
cmpsb
inc
idivl
jge
mov
pop
cli
lahf
repnz
in
test
xchg
jp
outsb
xchg
out
daa
in
fisubs
subl
push
imul
add
dec
jb
cmp
aad
je
dec
jge
push
xor
mov
or
sub
and
jnp
data16
or
sub
aad
jecxz
cs
sub
pop
mov
arpl
insb
mov
sbb
daa
out
jne
cmp
jl
cwtl
mov
pop
jmp
jae
or
inc
es
loope
mov
pop
or
jns
nop
sbb
movsb
rorl
cmpb
push
fistl
mov
aad
in
clc
adc
popf
mov
in
mov
xchg
and
xlat
jb
mov
lods
sbb
lret
imulb
idivb
test
fprem
stos
add
push
insl
ljmp
adc
mov
scas
icebp
push
jno
sar
fs
es
clc
and
sub
or
inc
mov
inc
repz
jmp
fwait
push
mov
pop
mov
add
sbb
hlt
fiadds
jbe
andl
xor
shlb
mov
loop
stos
in
aad
mov
mov
xchg
movsl
loopne
inc
sub
adc
fsub
cmp
inc
push
xor
lock
mov
pushf
sbb
call
leave
jge
inc
test
mov
cmpsl
mov
cmp
pop
insb
pop
test
callw
and
xchg
sbb
aam
and
loopne
test
mov
sbb
mov
aaa
push
dec
xchg
mov
ljmp
cmpsb
push
dec
mov
or
fincstp
pop
mov
dec
pop
ljmp
into
lods
xor
pop
xor
out
push
xor
or
inc
arpl
and
popa
scas
push
jno
mov
xchg
dec
rdtsc
and
rcr
pmaxub
adc
int
aas
or
lock
mov
push
rorl
outsl
mov
test
pop
fdiv
ret
fisubrs
movsb
cli
aam
lea
lods
cltd
scas
push
shl
sub
mov
test
xlat
xlat
decl
push
cltd
andb
cwtl
sub
imul
mov
push
push
cmp
lods
xchg
xchg
lds
pop
or
jge
hlt
fsubs
cmp
push
stos
outsb
mov
xchg
dec
xchg
pop
jns
adc
decl
mov
fsubl
xor
std
and
out
ret
fiaddl
hlt
loop
or
push
pop
push
jo
xchg
ret
ret
jmp
xchg
pop
in
mov
fbld
push
jno
xchg
mov
leave
ja
mov
sahf
popa
loop
xchg
push
mov
int
negl
arpl
xor
mov
inc
dec
lahf
mov
mov
je
sbb
out
mov
sbb
pop
movsb
cmp
cmp
mov
push
cwtl
push
jg
inc
out
cmp
fcomps
xchg
scas
fidivrs
xchg
push
lods
scas
imul
out
ss
pop
or
rcrl
add
aaa
xchg
mov
xor
mov
or
movsb
jg
ds
dec
pusha
push
fwait
daa
mov
pop
add
mov
adc
pusha
loopne
movsb
mov
imul
or
lahf
divb
into
adc
les
add
fiadds
dec
loopne
or
out
jb
js
add
repz
pop
and
add
pushf
ja
addb
shlb
adc
dec
ret
mov
or
xor
in
mov
lret
movsb
cmp
mov
lahf
inc
mov
cmc
aam
addl
adc
jle
loope
add
cwtl
jbe
pop
and
cmpsb
dec
bound
mov
pop
fcomps
sub
and
ret
inc
stc
int
out
mov
mov
xchg
scas
mov
and
cmp
call
dec
arpl
inc
mov
popf
jg
aam
aaa
rolb
sbb
xor
xchg
fstl
into
pop
stos
cs
mov
test
mov
cmp
xor
xor
mov
notl
popa
dec
test
movsb
popf
sahf
hlt
xchg
sbb
cmpsb
clc
mov
lods
adc
jl
repnz
mov
jnp
bt
mov
cmp
push
mov
incl
imul
enter
sub
in
xchg
popa
xorl
jo
les
arpl
and
jnp
enter
sti
push
add
fcoms
dec
mov
push
fadd
test
les
dec
xor
in
shlb
dec
mov
xchg
lds
dec
push
cmp
addl
popaw
dec
lods
push
fnstcw
cmp
rol
jp
add
push
sub
addb
jp
cmp
mov
mov
arpl
pop
inc
xor
popa
xchg
mov
jl
ljmp
jae
outsl
hlt
adc
jecxz
jae
push
jmp
fcoms
jb
cmp
shll
daa
lahf
test
pop
imul
add
xor
adc
leave
arpl
jae
mov
movsl
fs
or
inc
jp
mov
pop
mov
sbb
sub
xchg
jno
scas
mov
aam
add
lahf
mov
cmpsl
aaa
sbb
rorl
dec
sarl
rcl
mov
inc
inc
nop
jae
push
lea
lods
sub
mov
adc
push
sub
sub
mov
jecxz
lea
or
bound
icebp
mov
xchg
jmp
sub
sti
fnsave
lods
cmp
mov
orl
jecxz
fistpl
lahf
cmp
in
pop
outsb
cmp
or
or
and
and
outsb
jmp
jbe
mov
mov
cmp
sub
insb
push
jne
imul
mov
loop
cld
mov
mov
dec
sbb
fcmovu
in
inc
mov
ljmp
ret
jge
sub
sbb
lods
jmp
mov
jge
cli
dec
adc
test
jmp
loopne
int3
xor
out
and
add
jl
sarb
lret
lea
lods
add
or
push
adc
scas
test
and
push
fimuls
flds
push
pushf
sbb
cmpsl
movsb
or
stc
jg
ljmp
jge
pop
inc
adc
popf
andl
movb
adc
jnp
mov
notl
mov
jg
gs
adc
push
es
sub
icebp
inc
insb
push
adc
cmc
inc
les
jg
xor
xchg
das
fidivrs
adc
lahf
sub
pusha
je
dec
into
adc
ljmp
les
jl
push
fnstsw
jnp
xor
add
fistps
sbb
fcoms
mov
lea
in
mov
clc
push
add
mov
inc
push
xchg
out
in
les
pop
das
add
test
mov
aaa
dec
jle
or
into
mov
addl
push
movsl
outsl
xlat
je
imul
inc
mov
push
jle
lods
fs
pop
sbb
jmp
stc
in
mov
and
pop
sbb
clc
in
dec
insl
rolb
xor
pop
imulb
orb
stos
outsl
lret
popa
dec
dec
testl
mov
push
add
xor
xlat
jle
fdivrl
ja
xchg
xchg
mov
addb
icebp
lock
jbe
popa
mov
dec
inc
xor
mov
test
loope
stos
int
fcmove
push
fistl
inc
idivb
mov
lock
aad
sbb
xor
jecxz
sbb
mov
push
push
shl
fstpl
or
insl
rorl
sub
sub
mov
into
jle
inc
xchg
adc
movsl
bound
xchg
xchg
pop
std
fiaddl
inc
mov
ss
popa
pop
xchg
xchg
movsb
push
xlat
leave
mov
xchg
lret
sub
into
xchg
sbb
adcb
jle
mov
faddp
scas
lods
mov
xchg
shll
repz
ret
xchg
push
mov
inc
push
out
adc
sahf
sahf
push
jg
mov
gs
dec
ja
or
push
pop
fbstp
pop
adc
mov
cmpsb
inc
das
and
js
push
or
bound
fs
mov
std
lahf
cmp
clc
cmc
sbb
adc
xchg
out
lahf
push
xchg
leave
into
xchg
out
pushf
fdivl
add
lahf
add
movsb
mov
xor
adc
adc
test
push
mov
push
dec
jmp
arpl
int3
sub
repnz
xchg
pop
and
fiadds
lcall
invd
rorl
and
sub
fldl
in
insb
mov
jb
ja
push
mov
mov
mov
fs
dec
jecxz
mov
bound
int3
and
xchg
dec
out
aaa
clc
xchg
dec
lahf
dec
fcompl
nop
xchg
pop
jb
add
movsb
mov
jg
inc
mov
jg
frndint
out
xlat
je
jg
inc
xchg
adc
adc
mov
iret
push
sbb
or
push
popf
ds
mov
dec
mov
cmpsb
cltd
addb
fisttpl
push
enter
fimuls
outsl
ds
stc
jbe
or
inc
pop
sbb
adc
sbb
mov
bound
dec
pop
mov
sbb
test
jmp
fidivrs
jge
loop
cltd
scas
scas
dec
push
pop
sbb
cwtl
adc
sbb
movsb
ja
sub
daa
xlat
icebp
pop
loopew
insl
ret
movsl
cwtl
or
push
and
pop
fwait
jle
xchg
shlb
testb
jecxz
imull
adc
or
cld
jnp
aam
imul
dec
jmp
inc
xchg
das
cli
cmpsb
push
data16
ret
inc
inc
add
sbb
js
xor
movsb
and
xlat
cld
ljmp
pop
xchg
inc
jle
inc
fs
es
inc
arpl
jbe
pusha
fidivl
jo
shll
add
jnp
push
sbb
or
pop
mov
and
or
push
les
bound
adc
rorb
xchg
pop
xor
mov
inc
inc
lods
mov
dec
fnstenv
mov
dec
push
clc
add
jl
popa
push
push
xor
insb
mov
push
cltd
sub
test
ret
scas
out
mov
cmp
ss
cmpl
inc
cmpsl
mov
mov
xchg
cli
sub
hlt
dec
push
mov
push
je
stos
cs
mov
xor
pop
mov
jns
jns
dec
xchg
and
push
dec
cmp
cld
outsl
add
ja
mov
cs
clc
push
sarl
push
xor
mov
xor
mov
clc
inc
or
cmp
adc
mov
xor
push
out
sbb
push
cmpsb
add
das
jne
and
or
ljmp
mov
and
cld
dec
xchg
adc
jg
test
jecxz
idivb
loope
dec
push
popf
sbbb
cli
in
and
inc
pop
in
enter
fisttps
fisubs
cmp
push
mov
jb
cmpsl
adc
or
adc
fsubrl
jb
cltd
lods
shrb
dec
lods
rolb
mov
pop
in
inc
gs
xor
and
mov
sub
fadds
mov
in
pop
push
mov
add
sbb
orl
pop
test
push
xchg
dec
xor
stos
adc
sbb
movsl
adc
fsubr
in
pop
imul
les
sti
mov
jle
repnz
scas
leave
sbb
imul
sub
add
add
inc
stos
lods
repnz
test
mov
fistpll
dec
cmp
xor
test
aad
aam
mov
pushf
imul
jg
cmc
jg
into
notb
je
repz
int
add
sbb
fwait
mov
mov
ljmp
mov
sbb
pop
sbb
movsl
sbb
lret
cli
aas
jae
xlat
les
clc
cmp
jmp
mov
adc
add
std
xorl
outsb
sub
nop
fistps
lret
fimuls
jne
xor
mov
mov
sub
idiv
mov
lret
push
data16
jge
mov
inc
cmp
cmp
add
es
sub
fwait
std
loopne
mov
in
fwait
mov
in
cs
outsl
xchg
adc
sub
fdiv
and
jae
bound
repnz
sub
inc
mov
inc
shrb
test
adc
fmull
in
add
and
mov
scas
mov
aaa
jbe
pop
mov
jae
movsl
aaa
push
adc
in
fs
xchg
cli
pop
clc
fldt
dec
lea
orl
mov
jae
leave
cmp
popf
cli
xor
adc
mov
inc
movsl
inc
mov
pop
adc
sahf
lcall
cmp
sti
sbb
push
adc
mov
jle
mov
and
adc
push
add
rcrb
jle
popf
cmp
mov
sbb
and
xor
addr16
push
not
push
mov
outsl
push
mov
addb
add
ja
jno
in
or
in
or
cmp
fs
dec
cmp
push
dec
out
inc
xor
mov
popf
cmp
dec
sbb
aad
inc
dec
mov
xchg
dec
out
mov
mov
fsts
fs
movsb
inc
nop
mov
imul
addr16
fwait
in
inc
mov
or
imul
shrb
cltd
inc
dec
cmp
push
cmp
xor
jl
mov
jecxz
adcb
les
insb
test
mov
cwtl
jnp
out
repz
add
mov
daa
or
xchg
loopne
idivl
not
inc
adc
int3
cli
sub
out
pop
jmp
ret
dec
sbb
ficoms
cli
sti
xor
pop
addr16
inc
dec
rorl
enter
add
adc
clc
sub
mov
push
mov
mov
insl
inc
leave
adc
pop
pop
jg
inc
sti
shlb
mov
jp
adc
sub
stos
sub
pop
clc
outsb
mov
into
jbe
int3
sti
jge
jecxz
mov
insl
test
inc
add
mov
cmp
push
out
imul
jb
jmp
call
stc
addr16
xor
sahf
leave
or
mov
cmp
nop
dec
repnz
inc
dec
push
stos
or
add
sub
add
mov
mov
lcall
sbb
dec
or
push
adc
or
or
inc
sub
ret
lcall
out
sti
jae
sbb
aaa
push
sbb
test
ss
xor
mov
xor
test
adc
rorb
scas
xchg
jne
jne
mov
int3
xchg
lock
aas
fisubrl
and
ja
lret
sbb
dec
push
cs
leave
js
insl
movsl
call
filds
mov
mov
xor
cltd
inc
push
inc
sub
outsb
daa
mov
rcr
or
cmp
pop
inc
or
lea
mov
or
mov
or
sub
jge
dec
dec
sub
sub
lods
jns
popa
repz
lret
out
pop
sbb
sub
enter
ds
jge
not
push
fst
pusha
data16
adc
daa
insl
mov
std
bound
jg,pt
sbb
pop
mov
popf
add
mov
pop
inc
jl
push
in
sti
inc
jo
mov
sub
cld
ljmp
rclb
mov
ret
ds
lcall
andl
lods
ret
jg
adc
xor
xchg
aas
or
mov
mov
mov
test
data16
sahf
mov
lods
pusha
add
push
cmpb
cld
xor
pop
xchg
lret
sub
dec
lock
push
xor
iret
adcb
test
call
sub
pop
adc
mov
mov
shrb
xchg
pushf
inc
loop
dec
inc
inc
jbe
or
mov
fidivl
add
jnp
or
pop
fldenv
test
nop
pop
xchg
adc
sbb
fbstp
xchg
xchg
into
add
jb
stc
sbb
sahf
es
mov
filds
bound
mov
adc
add
sbb
into
dec
arpl
imulb
push
in
ja
movsl
je
mov
fstps
jb
jne
cltd
and
sub
pop
movb
roll
jne
scas
inc
test
sub
sub
cmpl
loope
cmc
and
notb
mov
add
xchg
lcall
stos
mov
es
int3
sbb
xor
ljmp
xor
pop
and
outsl
jmp
sub
pusha
lods
inc
cmpsb
pushf
sub
into
adc
mov
mov
push
fsubrl
cmp
lds
add
xchg
test
mov
rclb
ret
lock
lahf
and
mov
les
mov
cmpl
in
push
add
cwtl
pushf
mov
sahf
jae
les
aas
add
sbb
test
add
adc
sar
mov
xchg
cmp
das
sbb
cmpsl
pop
bound
mov
in
adc
dec
push
mov
jmp
in
stos
or
xor
or
mov
fcmovnbe
xor
mov
mov
test
push
mov
scas
and
daa
and
enter
fwait
ds
mov
aaa
lods
cmp
dec
xor
sarb
cld
movups
add
pop
addr16
cmp
jmp
pop
mov
add
scas
cmpsl
lock
stos
cli
insl
test
insb
sbb
mov
ficoml
lds
orb
xchg
arpl
pop
and
cwtl
dec
jp
mov
jns
jnp
scas
sbb
xchg
pop
sbb
ret
pop
nop
je
and
cmpsb
jmp
sub
enter
mov
xchg
sbb
in
cmpsb
rcll
push
xchg
mov
xor
or
pop
cmp
imul
cltd
add
jle
mov
pop
pop
adc
adc
ret
insb
xchg
out
fsubrl
add
xor
lods
xchg
mov
div
fldl
insb
xor
leave
aas
jb
aad
std
pop
shl
or
lods
sbbl
jno
bound
arpl
lock
das
dec
push
fs
cmpsl
xchg
fidivrl
sahf
jne
sbb
ror
pop
test
arpl
adc
xor
fwait
into
gs
cmp
test
in
popa
xchg
mov
movsb
imul
pop
mov
sub
dec
mov
pop
jg
mov
adc
aad
aas
pop
test
cli
shll
ja
test
cmp
add
mov
das
inc
insl
jbe
in
inc
ret
push
mov
mov
inc
sbb
xchg
fcom
into
stos
fimuls
sub
insb
mov
cmp
pop
iret
mov
outsb
out
popa
ret
dec
test
mov
pop
add
xchg
adc
mov
call
mov
stc
subb
in
xor
xor
and
test
insb
dec
je
test
adc
cwtl
sbb
rcll
xchg
xchg
sub
ja
clc
dec
fs
sbb
pop
arpl
sbb
fildll
jl
pop
stc
enter
pop
clc
xchg
mov
dec
xor
or
push
scas
lods
cmp
insl
loopne
pop
scas
repnz
ja
out
add
lret
mov
xchg
add
mov
mov
xor
cltd
popa
mov
popf
jbe
adc
pusha
and
jge
jb
loop
mov
jnp
pop
ds
push
data16
dec
mov
iret
int3
out
mov
jo
dec
popf
or
leave
sbb
add
mov
cltd
dec
cmp
cmc
push
arpl
aam
xor
and
mov
lods
mov
std
arpl
stc
mov
notl
imull
dec
movsl
out
js
fsubrs
cmc
inc
lret
dec
cmp
addr16
sub
cmp
push
jae
pop
hlt
xor
push
xor
cld
cld
mov
or
xorb
xchg
xchg
inc
push
dec
fnstsw
and
xchg
pop
clc
xor
movlps
rorb
sti
adc
inc
add
dec
inc
dec
fadds
std
push
hlt
int
dec
push
jnp
or
jnp
add
movsl
sbb
out
xor
xor
daa
push
lods
jae
insl
orb
xchg
cwtl
or
fdiv
sbb
out
pop
or
fisttpl
jo
roll
push
sbb
push
es
loop
mov
repnz
mov
int3
mov
ljmp
cmp
es
inc
loop
and
nop
sbb
sbbl
dec
pop
stos
mov
stos
fwait
int
ljmp
push
push
call
roll
add
scas
pop
scas
pop
out
cmpsb
lods
add
aas
inc
aas
ficompl
push
fneni(8087
pop
sahf
jns
add
mov
lea
add
dec
dec
pop
sahf
insb
inc
fdivl
ret
call
push
fcmovnu
mov
cmc
leave
out
addr16
test
push
cmp
push
lock
mov
push
pop
dec
cmpsb
ljmp
adc
mull
sbb
sub
movsl
xchg
add
push
cmpsl
cmp
fcompl
outsb
dec
xchg
stos
add
cmp
mov
xchg
add
pop
lea
jp
or
fdivr
ds
jae
ret
pop
cmp
sub
adc
imul
aad
mov
out
aaa
jmp
push
ss
cwtl
in
lcall
cmpsl
lret
iret
mov
fmulp
pop
dec
dec
jns
jle
pop
sbb
pop
pop
data16
cmp
dec
cmp
adcb
sbb
movsb
pop
cmp
inc
out
xor
daa
mov
fcom
fsubs
decl
xor
sub
cld
dec
mov
test
fmulp
insb
push
mov
push
jp
shr
adc
mov
jge
fnsave
loope
in
push
and
arpl
sbb
xchg
add
pop
inc
lods
mov
sub
dec
ret
sahf
icebp
repnz
adc
sub
test
fwait
cwtl
repnz
repz
sarb
movsb
stc
jno
xor
pop
or
or
sahf
inc
sub
adc
push
sahf
clc
sub
adc
fsubrl
leave
loope
js
aam
je
aam
out
add
push
push
or
lahf
mov
sti
and
jge
jmp
ljmp
mov
pop
inc
testb
mov
xor
dec
pop
jp
sahf
add
into
cltd
mulb
adcl
sub
jmp
sar
and
mov
inc
test
sub
fsts
je
push
mov
rcl
cmp
int
xchg
sarl
push
bswap
pop
push
sub
imul
test
leave
mov
push
in
popa
dec
fsubrp
pop
push
pop
ja
mov
icebp
hlt
or
xchg
test
mov
lcall
pop
mov
mov
dec
jo
sub
scas
outsb
inc
lock
movb
cmp
iret
je
clc
adcb
fdecstp
fists
pop
add
and
mov
add
mov
inc
push
push
nop
hlt
loope
pushf
mov
push
cmpsl
add
rcrb
in
or
jmp
pop
push
jbe
lret
push
cmpsl
inc
icebp
in
mov
and
enter
std
or
mov
push
cmp
push
cmp
pop
add
mov
jp
mov
or
imul
enter
ss
push
push
pop
xchg
aas
push
iret
mov
cld
inc
sub
push
adc
hlt
scas
push
dec
xchg
jle
ret
mov
data16
inc
jns
js
push
sbb
mov
xchg
pop
int
adc
mov
jo
scas
fisubrs
inc
movsl
pop
pop
mov
xchg
mov
dec
inc
cwtl
insl
call
or
inc
and
xor
inc
clc
int
test
mov
negb
mov
mov
hlt
push
xor
push
mov
ss
sarl
movsl
ljmp
je
dec
dec
dec
cmp
into
mov
mov
mov
loope
ja
mov
lret
jne
inc
cwtl
loop
dec
jecxz
xchg
fidivrs
fadds
mov
rcr
cltd
hlt
pop
inc
mov
ffreep
mov
mov
scas
xchg
and
outsl
add
pop
fdivrl
js
or
ret
or
jp
scas
xchg
rorb
fmull
fstps
jle
shlb
sub
lahf
adc
mov
xchg
fdivrl
or
bound
sub
mov
sbb
sti
imul
popf
jb
ficomps
add
test
add
aas
lds
sub
cld
fwait
dec
mov
out
movsl
rorb
fs
fstpl
fwait
dec
mov
mov
or
aam
ficomps
jmp
lcall
xor
xchg
in
lcall
mov
jg
aaa
pop
inc
insl
test
ljmp
sbb
mov
mov
inc
mov
bound
ret
in
leave
pop
int3
xchg
adc
mov
inc
in
mov
add
sub
cmp
popf
insl
decb
rcl
adc
scas
add
cli
xor
xchg
cltd
movsl
sub
aaa
cmp
push
cmpsl
xor
dec
xchg
mov
subps
popf
repnz
xor
rclb
pop
cmp
push
test
imul
jge,pt
sbb
jp
mov
out
and
lret
xor
rorl
lret
mov
popf
sarl
sub
out
and
arpl
xchg
pop
xchg
jge
jo
scas
dec
jns
jecxz
repz
shll
inc
xor
movsl
jl
pop
xlat
nop
and
pushf
inc
mov
mov
push
mov
popf
aas
and
stos
dec
pop
or
pop
test
scas
js
loop
popf
jno
sbb
cwtl
push
das
or
cmc
rol
jecxz
mov
push
adc
sbb
xchg
jnp
pop
mov
adc
jmp
leave
sbb
add
xlat
lahf
into
xchg
xor
dec
xchg
inc
push
notl
inc
test
aaa
push
sti
jl
inc
js
push
push
shrl
clc
xchg
testl
jae
jno
sub
in
xor
or
and
rol
ds
pop
ret
je
xchg
add
rolb
cmpsl
cmp
mov
cmp
adc
jg
out
inc
pop
das
jae
mov
and
iret
sbb
fists
negl
das
mov
aas
jo
jbe
mov
push
sbb
inc
sub
icebp
pop
outsl
mov
adc
mov
aad
add
xchg
mov
sub
sub
pop
pop
adc
out
daa
mull
jle
mov
incl
jae
out
pop
repz
cmp
cli
pop
cmc
lret
sub
xor
out
in
outsl
jge
movb
hlt
shll
pop
cmp
roll
loopne
std
pop
jmp
push
push
out
stos
adc
mov
jecxz
dec
jle
or
out
mov
testb
mov
jb
std
xor
push
ds
outsb
xor
xchg
cltd
inc
adcb
sti
lret
lock
jp
lahf
sbb
aaa
jp
jge
in
and
stos
jge
cmc
mov
mov
push
je
movsb
das
sub
add
push
addr16
and
sub
adc
stc
leave
cmpsl
das
push
ret
xchg
jp
clc
adc
mov
or
icebp
js
push
cltd
fldl
into
and
lret
mov
mov
stc
push
cmp
sub
push
or
jo
mov
mov
shrl
maskmovq
imull
jno
sub
test
xor
jns
out
fstpl
jp
cmpsb
mov
out
dec
sbb
cltd
cmpsl
leave
js
sub
shrb
add
jbe
ss
fimuls
ret
inc
pop
xchg
addr16
dec
imul
fucomip
adc
and
xor
stos
sbb
and
adc
cs
push
addr16
jno
popf
pop
pop
add
ljmp
out
sub
rorl
dec
ds
mov
test
loopne
cmp
aaa
ret
fistpl
xchg
clc
aam
xchg
cmpsb
lods
lods
pop
xchg
lahf
inc
mov
aad
cmp
xor
mov
lahf
mov
loope
xor
pusha
and
sbb
pop
jl
or
repz
mov
jl
inc
pushf
mov
bound
xor
jo
cmp
out
mov
int3
adc
roll
mov
mov
mov
in
js
fidivl
stos
cmpsl
add
sub
imul
push
mov
lcall
lret
xor
lds
mov
xchg
pop
inc
add
adc
lods
cli
mov
or
insl
sub
mov
inc
and
nop
lods
mov
cmp
test
pop
pushf
xchg
rcll
push
movsb
int3
mov
in
aas
mov
pop
mov
mov
xchg
scas
je
push
daa
js
int3
loope
insl
mov
mov
and
in
into
xor
xor
jmp
cmp
xor
sbb
cmpsb
cmp
mov
dec
enter
lret
hlt
xchg
rcl
push
cmp
xchg
lret
in
aas
adc
fildl
int
rcrl
stos
pop
lea
add
jnp
jno
add
pop
addr16
nop
push
mov
hlt
push
test
addl
sti
je
lret
cmc
cli
adc
jp
xchg
jp
and
dec
lods
lea
xchg
pop
ret
push
in
out
ret
xor
inc
iret
sub
cmp
xchg
mov
sbb
sbb
out
inc
addr16
xchg
or
jmp
jge
sub
loop
adcl
jmp
push
ret
test
int3
sbb
pop
cmp
loopne
jae
movsl
lret
xchg
jne
push
push
loop
xor
jo
int3
or
mov
jns
mov
push
cmp
lret
xor
out
ret
xchg
pop
add
sbb
ret
jo
cmp
mov
push
sbb
or
push
pop
add
sbb
push
add
mov
test
sbb
incl
add
rcll
mov
xor
adc
adc
hlt
imul
mov
loop
movsb
mov
mov
mov
mov
fs
addr16
sbbl
mov
or
jmp
fbld
add
in
sbb
dec
adc
mov
or
ficomps
nopl
dec
jo
lock
jno
test
cs
sti
add
and
xchg
enter
stc
mov
cld
xor
add
xor
mov
rclb
mov
imul
test
mov
mov
std
les
mov
aam
and
add
inc
fwait
mov
cmp
sub
ljmp
dec
inc
fwait
add
jmp
pop
mov
pop
adc
sub
lret
adc
pop
and
outsl
int
and
es
mov
xchg
pop
pop
or
daa
out
and
push
add
mov
adc
aaa
adc
jno
add
inc
pop
les
mov
into
xlat
mov
or
cmc
inc
jge
out
push
stc
mov
mov
or
xchg
adc
add
fidivrs
inc
testb
pop
mov
or
sub
les
mov
test
jmp
adc
pushf
mov
dec
sbb
sub
mov
mov
lret
and
xchg
mov
gs
mov
rorl
mov
popf
sbb
mov
leave
cmp
int3
cltd
lods
mov
sbb
test
mov
adc
sbb
push
out
xchg
daa
ja
push
xor
cmp
jmp
inc
pop
mov
in
or
in
cld
sbbb
int
cmp
xchg
aad
mov
pop
test
popf
sub
je
pop
mov
test
icebp
call
cmp
nop
mov
fists
xor
cmp
ja
xor
xchg
out
mov
scas
dec
jae
fsubrs
jp
scas
push
inc
shlb
daa
scas
inc
in
stos
lcall
adc
xor
adc
inc
loopne
lds
push
sub
repnz
mov
shl
inc
call
sarb
xchg
jp
add
sbb
add
cmp
adc
jle
sub
icebp
std
repnz
imul
fdivs
cmp
das
ljmp
pop
push
xchg
mov
repnz
movsl
add
push
fisubrs
ljmp
jl
mov
jbe
cmpsl
pop
push
fcomp
pop
cli
imul
and
xchg
mov
mov
push
inc
mov
inc
add
daa
out
xchg
mov
and
imul
xor
cmpsl
fucomip
xor
enter
nop
add
adc
into
and
fsts
xchg
out
rcll
pop
push
inc
jno
pop
bound
pop
inc
sbb
jb
test
inc
das
sarl
mov
mov
mov
push
hlt
pop
aad
jns
jle
leave
aam
add
lahf
mov
mov
idiv
loope
inc
shr
cmp
inc
int3
xchg
mov
loop
sub
sti
inc
repnz
outsl
imul
lret
stos
cld
and
fnsave
sbb
mov
xchg
sbb
mov
stc
adc
xor
aam
xor
mov
lcall
dec
test
ficomps
push
insl
sahf
leave
cmp
jp
and
push
adc
mov
dec
test
dec
jb
mov
lret
pop
mov
cmp
xor
out
rcrb
pop
fcoml
or
aas
fstpt
leave
sub
test
pop
ds
cmp
lret
xchg
pop
fiaddl
into
sub
int
dec
cmp
jo
cwtl
stos
ffree
out
inc
fcom
stos
mov
mov
cmpsl
test
js
cmp
add
repnz
fnstsw
je
lret
cmp
xchg
es
in
mov
sbb
divl
psubusb
cmp
dec
push
mov
sbb
test
or
mov
nop
mov
ret
push
and
lock
push
inc
mov
ds
addr16
arpl
std
inc
sub
jg
ret
ret
add
adc
mov
mov
jmp
cmp
cmp
mov
mov
and
out
movsl
fsubrs
push
imul
push
fstpt
add
out
jle
lret
shrl
pop
add
repnz
xor
xchg
dec
xchg
icebp
je
adc
dec
push
iret
negb
add
fiadds
mov
and
sub
jnp
scas
ret
divl
jo
cmp
push
cltd
xor
je
mov
scas
mov
push
fisubrs
fwait
mov
dec
pusha
sub
add
cltd
data16
mov
leave
ret
addr16
ja
mov
sub
adc
in
ljmp
inc
pusha
cs
pop
adc
sbb
insb
hlt
out
movsl
inc
fisubs
xchg
jae
in
dec
mov
mov
outsl
ficoms
iret
dec
mov
lea
dec
std
sub
xchg
xorb
jecxz
xor
inc
das
out
scas
in
inc
in
aas
mov
inc
call
mov
stc
psadbw
sbb
inc
pushf
dec
mov
std
dec
dec
pop
pop
out
flds
mov
movsl
movsb
jns
out
push
push
mov
shrd
mov
sub
int
fisubrl
nop
ja
push
inc
mov
sbb
or
sbbb
addr16
into
lret
push
movsb
or
add
mov
jp
kmovw
mulb
adc
les
adc
mov
jecxz
push
mov
push
xchg
std
dec
mov
outsl
in
les
outsw
sbb
push
or
cmpsb
sub
cmp
call
scas
shrl
into
mov
aam
clc
fwait
in
push
inc
pop
inc
dec
clc
jmp
scas
push
xlat
mov
fmuls
cltd
push
stos
mov
fndisi(8087
inc
ret
scas
fwait
jnp
mov
movsl
outsl
outsl
inc
fsubl
push
test
imul
mov
inc
xor
shrl
add
adc
add
xchg
test
fs
xchg
and
dec
mov
pop
cltd
push
xorb
cltd
imul
ret
pop
test
insb
fwait
ljmp
stos
mov
cmpsl
sbb
in
mov
jg
adc
leave
mov
je
or
popl
xchg
pop
push
add
cmp
inc
mov
scas
cmpsb
movsl
ja
cli
adc
xchg
stos
aam
loop
sub
mov
test
push
inc
jae
or
rcr
inc
mov
sti
jmp
call
push
inc
mov
int
sahf
sbb
orb
pop
dec
dec
fsubl
insb
and
dec
add
mov
pop
mov
imul
test
testb
push
pop
or
pop
sub
lahf
sbb
imul
mov
mov
decb
xchg
add
mov
sbb
xchg
and
inc
mov
push
dec
and
movsb
jne
xor
adc
outsb
lret
mov
testl
jnp
pop
mov
lock
fisubs
pop
shll
andl
scas
clc
xchg
lock
mov
mov
popa
movsl
or
mov
push
shlb
fistps
cmovg
or
dec
jl
push
loop
xlat
imull
xor
fsubl
dec
negb
sti
mov
push
add
imul
pop
je
jge
lods
cld
adc
adc
leave
and
cltd
enter
push
xor
pop
test
add
in
or
scas
test
inc
js
and
iret
jo
pop
loope
jno
popa
ror
lea
jo
fdivl
push
mov
mov
lea
imul
in
mov
xor
add
cmp
add
mov
ret
subb
inc
mov
xchg
movsb
ds
popa
inc
loope
fidivl
pop
and
inc
xor
mov
movsl
js
mov
cmp
mov
mov
cmpsl
mov
fldcw
je
ret
fsub
jno
gs
fstps
iret
push
testl
std
mov
je
insl
mov
test
in
fisubrl
jno
push
and
stos
xchg
xor
push
mov
mov
cmp
insl
mov
out
xchg
cmpsb
and
pusha
repnz
cmp
movsl
cmp
mov
je
adc
push
adc
add
cltd
jl
negl
or
xor
lea
mov
aas
pop
push
lcall
xchg
ret
sbbl
imul
daa
out
inc
cli
das
fs
repz
lods
jno
leave
cli
repz
mov
lea
pop
ss
cld
scas
into
xchg
test
jb
stos
loope
jmp
sub
shlb
pop
pusha
test
mov
fcompl
scas
lret
mov
sub
xlat
icebp
adc
jo
and
shrb
and
arpl
xchg
mov
mov
jl
inc
mov
inc
out
pop
std
insl
dec
stos
fbld
jmp
mov
cld
arpl
dec
shll
and
loop
subl
mov
add
jmp
stos
lcall
jge
add
and
jl
dec
sbb
inc
sub
push
inc
movsl
ja
shrl
push
sti
xchg
dec
in
lods
cmpsl
popa
mov
in
sti
and
imul
push
push
push
dec
jp
jns
fwait
dec
sbb
mov
inc
add
add
in
js
jge,pn
mov
adc
and
mov
mov
jb
loop
xchg
adc
ja
adc
loope
andl
mov
insl
dec
push
lds
mov
pop
fstpt
adc
int
jp
inc
frstor
jle
xchg
idiv
ss
jno
mov
mov
mov
sub
xchg
rol
mov
outsl
xchg
movsb
jmp
loope
sub
aas
sub
jge
xchg
inc
and
push
dec
ret
inc
push
popf
cmc
or
data16
cli
mov
lahf
push
mov
sbb
xchg
fisubrl
insl
dec
dec
mov
pusha
pop
mov
pop
fsubl
rclb
ret
mov
je
mov
inc
xor
push
pop
sbb
inc
dec
ljmp
psllq
aad
loopne
cli
hlt
je
adc
popf
or
xorb
test
aas
jne
push
adc
push
rcll
sbb
mov
lods
inc
hlt
insl
popa
add
mov
cli
mov
lock
mov
call
mov
cwtl
sub
xchg
hlt
inc
inc
mov
testl
adc
pop
dec
aam
mov
cmpsl
or
sub
getsec
mov
mov
adc
jae
xor
aad
pop
insb
int3
loope
xchg
lret
sbb
and
mov
das
insl
inc
repz
xlat
in
sub
and
loop
mov
push
lldt
arpl
mov
outsl
scas
outsl
sbb
jecxz
and
mov
push
fstpl
mov
outsl
into
cmp
std
out
xor
add
repnz
or
insl
push
loopne
xchg
jge
xchg
into
rclb
or
cwtl
xchg
dec
push
fisttpl
and
jecxz
rcrb
cmpb
icebp
cmp
addr16
cmp
pop
push
jmp
and
jecxz
xor
sbb
sub
repnz
dec
jg
adc
cmp
push
out
out
lret
push
fists
pop
call
cmp
fnsave
ss
add
and
insl
ja
and
leave
int3
push
repnz
gs
stos
outsb
or
xor
je
mov
loope
test
jns
das
pusha
mov
pop
push
ret
js
dec
jge
add
rcr
xchg
jae
adc
dec
cwtl
pop
xor
mov
xchg
scas
inc
lods
in
jns
dec
cmp
mov
and
pop
jbe
test
repnz
movsb
jae
test
jmp
cli
jp
dec
inc
dec
adcb
btc
int
or
push
and
daa
out
les
jne
stos
loopne
cmpsb
inc
dec
clc
push
sbb
aas
mov
scas
jg
fs
sub
mov
inc
cmp
xchg
adc
out
push
xchg
xor
inc
mov
push
pop
mov
lods
jg
stc
mov
and
and
ror
lods
sub
mov
or
in
test
lret
stc
mov
push
mov
aas
mov
in
dec
or
jb
repz
popa
pop
cltd
ret
sbb
dec
cs
inc
in
or
cmpsb
popa
aad
and
int
adc
cld
das
fldt
test
in
sbb
fnstcw
pop
bound
mov
lcall
rorb
aam
pop
adc
sahf
or
xor
scas
jo
loop
fimull
bound
insl
incb
scas
or
mov
fstl
inc
xor
mov
jg
jecxz
enter
cmp
add
cmpsb
cmp
dec
loop
lea
test
dec
loop
sbb
pushf
ljmp
push
xchg
add
add
cli
lods
fwait
xchg
movsb
mov
imul
jle
mov
cs
adc
stc
push
add
das
cwtl
rcr
dec
std
sahf
mov
xor
addr16
jno
push
and
arpl
sbb
cmpsl
push
mov
ficompl
xchg
jnp
js
sub
and
push
cmp
cmpsb
jns
xchg
repnz
aas
fucom
aaa
fs
push
pop
xchg
insl
xchg
into
push
push
inc
pop
mov
mov
jp
insl
das
inc
push
lock
fiaddl
push
mov
cwtl
in
roll
mov
mov
inc
test
les
jae
das
repz
mov
cmp
dec
add
rclb
iret
xor
repnz
fldl
xor
jecxz
sbb
xor
idivb
push
pusha
adc
cmp
sbb
jg
test
movsb
gs
testl
xlat
xor
inc
dec
inc
sub
pop
ss
push
adc
pop
fidivl
sahf
pop
mov
fxch
xchg
mov
push
fisttpll
pop
js
in
inc
or
pop
lods
pop
out
xchg
cmp
dec
mov
or
test
xchg
inc
inc
pop
sub
ja
and
mov
xor
popf
movsb
test
test
mov
aas
int3
push
lea
fisubrl
adc
mov
inc
mov
pop
mov
call
out
enter
mov
sbb
mov
inc
inc
xchg
cli
adc
roll
sbb
ss
xchg
gs
and
xor
inc
vrcpps
dec
adc
jp
and
lahf
xor
cwtl
dec
mov
push
aaa
std
sbb
int
push
jbe
subl
popa
or
xor
jp
mov
loopne
mov
mov
fldln2
push
mov
call
jp
inc
fs
cld
pop
in
xor
or
xor
mov
push
push
jp
xchg
or
or
fisubrl
mov
daa
movsl
cmp
or
call
ret
ret
clc
out
in
mov
cmp
mov
in
jns
and
rolb
jo
adc
jecxz
out
cmpsb
out
test
mov
pop
xchg
mov
in
adc
int3
cwtl
inc
dec
xor
push
mov
sahf
gs
imul
dec
mov
pop
mov
sub
clc
inc
and
push
inc
mov
xor
lret
sbb
pop
pop
fdiv
ss
es
mov
mov
mov
mov
jns
insl
stos
leave
sub
hlt
decl
pusha
das
not
call
sub
test
sub
js
shlb
push
punpckhbw
add
iret
and
xchg
or
js
pushf
mov
lret
enter
clc
pushf
bound
mov
test
adc
rorl
or
popa
cmp
sbb
inc
in
repz
dec
das
sarb
pop
aas
mov
stc
rcrb
fsubrl
sbb
out
mov
in
lods
dec
pusha
filds
movsb
cwtl
push
cwtl
sbb
mov
rol
xor
negb
or
mov
jecxz
cmpsb
jno
and
leave
std
and
adc
mov
inc
aas
dec
add
ja
pop
push
in
cmp
mov
es
inc
push
clc
dec
iret
pop
fcomip
cmpl
testl
and
push
jbe
shl
inc
cwtl
int
push
mov
in
adc
add
je
out
sub
std
sahf
lret
mov
in
out
loop
sub
inc
jge
je
mov
fildll
add
cmp
push
sub
xor
push
and
jno
lods
das
adc
adc
andl
pop
sub
movb
daa
sub
xchg
mov
fildl
push
pop
sub
cmp
sti
les
lods
js
inc
les
xor
lea
icebp
pop
cltd
sbb
cmp
mov
call
pop
inc
inc
test
or
jle
and
mov
adc
out
jnp
jb
lahf
test
inc
and
mov
push
and
cmp
cltd
mov
bnd
mov
loop
mov
stos
int
rorb
adc
mov
or
dec
adc
dec
pop
jbe
into
inc
xor
inc
clc
and
and
and
daa
mov
or
loopne
dec
or
shll
or
bt
int3
xor
repnz
sbb
or
pop
mov
scas
jo
test
xor
mov
and
adc
inc
fcmove
jle
add
movsl
push
push
fisttpll
sub
addl
test
jl
ja
cltd
fmuls
fnstenv
push
mov
aaa
scas
xor
mov
ja
ljmp
jmp
adc
dec
pop
aam
sti
push
shrl
pop
lds
jle
push
push
mov
fstpt
add
xor
jno
fwait
out
add
and
jae
outsl
div
push
jnp
fwait
xor
pop
jbe
mov
dec
sbb
sbb
mov
dec
dec
push
arpl
mov
test
out
out
inc
ljmp
je
pop
add
cmp
movsl
inc
shrb
dec
pop
das
inc
shll
loop
or
sbb
test
lock
adcl
sub
nop
mov
add
imul
fsubrl
ljmp
enter
pop
lcall
popf
jmp
pop
movsl
jnp
andb
inc
jecxz
rcrb
dec
sti
mov
pop
bound
adc
ret
jecxz
jae
cltd
js
jl
imul
jb
mov
adc
enter
repnz
out
inc
pop
add
cmp
adc
pop
nop
cs
cmp
add
outsb
cmp
sbb
roll
xchg
daa
adc
mov
sub
and
xor
leave
xchg
sbb
andl
sub
fistps
test
sarb
mov
cmp
adc
mov
fistpll
push
jl
sbb
inc
xchg
int
pop
fsubrs
mov
sbb
je
jnp
pop
push
mov
dec
add
and
stc
push
out
jae
jae
add
call
pop
inc
xchg
ret
nop
roll
fwait
int
jo
ja
shl
ret
cwtl
sub
jae
stc
imul
mov
or
aam
outsb
pop
mov
jno
push
xor
mov
pop
repz
cmp
dec
sub
call
int
pop
repz
lds
divl
out
loop
dec
add
outsb
or
sub
cmp
mov
and
and
repnz
popa
or
pop
pusha
notb
push
cltd
adc
xor
fisttpll
insb
sub
imul
jae
or
leave
mov
xchg
jnp
mov
inc
ss
xor
loop
dec
and
mov
pop
lds
popf
dec
cwtl
mov
pushl
jb
inc
rcrb
loop
xchg
or
out
add
mov
pop
nop
icebp
or
arpl
pop
adc
mov
add
ja
adc
movsl
repz
stos
cmp
sahf
ffree
jp
mov
xor
add
dec
test
cwtl
inc
fcompl
divb
negb
dec
daa
das
sbb
add
xor
adc
push
repz
test
mov
subl
mov
cli
movsb
sahf
testl
mov
and
inc
mov
push
in
sbb
mov
leave
mov
int
outsl
je
mov
push
fwait
mov
mov
call
push
or
inc
or
pop
insl
xor
pop
add
cs
push
inc
aaa
and
movsb
sub
xchg
cmpsl
fwait
adc
icebp
idivb
push
repz
cmp
or
jl
cmp
imul
lock
jns
sahf
divb
stos
sbb
fstps
dec
sub
cwtl
xchg
add
pop
fcoms
sbb
cmpsb
out
inc
outsl
mov
lea
add
add
sbb
fnstsw
inc
je
dec
test
or
ficoml
mov
dec
sbbl
push
icebp
scas
sub
cmp
jb
fiadds
push
daa
lahf
push
and
pop
xchg
jle
sub
or
mov
sar
pop
adc
pop
push
lock
rcrl
mov
push
ficompl
pop
cmp
dec
inc
or
dec
repz
out
sbb
or
or
cwtl
xchg
push
jg
outsl
mov
sub
mov
shrb
sbb
xor
iret
dec
add
fdivs
or
lock
test
fists
mov
cmp
inc
push
js
jle
mov
push
aad
adc
cmpsl
adc
cltd
adcl
mov
xor
jmp
arpl
test
mul
repz
or
or
rcrl
cmp
cli
popa
sub
subb
cwtl
adc
loopne
adc
cmp
das
dec
test
and
imul
fbstp
push
sbb
mov
mov
fidivrs
and
sub
stos
cmp
push
in
xor
adc
inc
or
mov
dec
or
sub
mov
mov
xor
data16
adc
adc
jbe
std
ds
fadd
outsl
in
cmp
adc
cmp
fincstp
cmpsb
add
jmp
mov
fcomp
sub
pusha
jge
out
rol
sub
ret
std
mov
push
sub
out
cmc
jle
imull
jmp
movsb
inc
sarw
into
xchg
daa
and
pop
mov
in
stc
pop
cmp
or
les
and
mov
sub
xchg
inc
mov
gs
push
jecxz
pop
mov
pop
xchg
arpl
pop
ljmp
andl
cmp
and
mov
shll
and
filds
insl
shl
in
fs
je
xchg
cs
sub
xchg
bound
mov
loope
xchg
sysret
fistl
repz
cmp
mov
pop
test
inc
or
cmp
je
inc
lret
sub
xor
inc
sbb
popa
mov
jmp
push
or
mov
pop
fnsave
mov
add
sahf
jg
popf
pop
out
cltd
popa
inc
inc
or
imul
clc
xor
es
movsb
aaa
mov
cmp
jge
dec
sub
imul
or
push
loopne
mov
jmp
ret
mov
gs
repz
lret
cli
mov
jp
mov
jl
pop
in
ljmp
mov
loope
push
or
adc
jle
adc
cld
pop
shl
sub
or
sub
outsb
loopne
inc
and
pop
dec
mov
xor
ljmp
std
insb
push
sbb
nop
iret
out
sbb
jge
loopne
pop
into
and
sub
push
add
or
out
fistpl
xchg
or
add
pop
jns
cmp
push
xchg
loopne
pop
sti
sub
jecxz
mov
jo
mov
and
push
testb
pop
fbstp
xchg
sarb
and
into
sarl
fsub
lods
mov
jbe
and
loop
push
mov
dec
hlt
repz
xor
cmc
xrelease
mov
cmp
mov
mov
rolb
in
xor
xchg
sub
outsb
addb
test
arpl
push
push
enter
loop
mov
inc
mov
cld
dec
cltd
divl
mov
scas
or
gs
fwait
iret
pushf
mov
or
pusha
mov
dec
pusha
add
xchg
pop
dec
dec
pop
mov
adcl
pusha
sar
fcoml
loopne
filds
pop
sbb
loopne
shr
or
sub
daa
test
push
push
xlat
or
pop
mov
jae
insl
loop
movsl
popf
xchg
xchg
aam
mov
adc
or
int
icebp
ja
je
or
leave
xor
ds
rclb
imul
pop
movsb
cmp
push
ret
and
aaa
add
pop
pop
pop
pop
pop
cmp
pop
mov
sbb
rclb
shll
ljmp
movsb
add
xchg
mov
dec
or
ljmp
cmc
lods
mov
sub
leave
sbb
addb
int
in
dec
popa
in
jecxz
push
es
lret
pop
aas
mov
je
lcall
mov
fisttps
jbe,pt
idivl
pop
test
out
in
xor
push
or
ret
pop
cmpsb
and
adc
sahf
or
xchg
lahf
cmpsb
xor
xchg
es
data16
out
push
sti
pushw
shrl
cli
sbb
call
cld
xchg
mov
shrl
dec
jmp
mov
or
std
mov
add
pop
push
sarl
in
cmp
aad
add
jae
mov
adc
jo
inc
pushf
dec
cmpsl
xchg
sub
push
jp
or
add
mov
fs
fcompl
pop
sti
mov
cmp
cmp
mov
jno
out
sti
fnsave
cwtl
loope
cmp
add
movsb
push
test
je
and
sub
adc
pop
je
mov
in
inc
mov
ljmp
xchg
cmp
sbb
cmc
jecxz
mov
dec
xchg
test
mov
xchg
outsl
adcl
cmove
dec
hlt
sqrtps
add
shr
std
scas
add
xchg
pop
and
sub
lock
aam
or
add
mov
cmp
add
cmp
test
adc
std
ds
jle
test
mov
or
rcr
bnd
dec
ret
aaa
insl
jno
dec
mov
xor
jle
sub
loopne
xchg
sbb
mov
xchg
pusha
insl
dec
cltd
push
lds
cs
ret
aaa
mov
adc
jmp
icebp
lcall
cmp
push
imul
lret
inc
movsl
std
jbe
dec
repz
into
push
mov
add
mov
outsb
das
inc
inc
aad
push
je
mov
and
inc
xchg
mov
jecxz
popf
js
bound
push
push
adc
mov
push
sbb
js
int3
xchg
cmp
enter
gs
pop
pop
mov
test
mov
test
out
push
fidivrl
cmpsb
icebp
not
leave
insb
pop
call
cltd
movsb
sbb
pop
leave
frstor
inc
fs
adc
jb
hlt
pop
inc
pop
push
dec
inc
sbb
pushf
pop
add
and
loopne
pusha
int
jbe
inc
shll
fmulp
repz
test
ret
xor
pushf
enter
movsb
cli
dec
inc
in
and
xor
shll
sbb
les
jbe
mov
jg
lods
ret
xor
aas
adc
pushf
jl
add
inc
add
mov
mov
leave
mov
cltd
push
xor
js
jnp
pop
sbb
repz
out
stc
cmp
adc
mov
rcll
bound
scas
pop
mov
int
mov
lcall
stc
cmp
xchg
fwait
push
fs
push
mov
mov
popa
pusha
daa
pop
push
iret
adc
aad
mov
add
cld
push
jnp
xor
cwtl
out
jnp
imul
adc
ss
ret
jmp
push
mov
imul
jmp
mov
sbb
sbb
sbb
out
js
les
cwtl
les
daa
mov
inc
pop
sbb
nop
push
outsb
push
push
pop
or
andl
adc
cmpsb
pusha
ja
outsl
push
popa
aas
int3
dec
pop
popa
addr16
pop
jo
xchg
adc
adc
mov
jl
pop
cs
insl
loope
mov
fnstsw
popa
push
lods
or
into
push
ja
mov
pop
outsl
or
push
data16
sbb
adc
into
cmp
aad
stos
pop
sti
mov
scas
mov
fnstsw
mov
push
std
negl
pop
ret
push
push
adc
shl
cmc
mov
ljmp
movsb
in
jle
xor
repz
push
jo
xor
push
pop
pop
lods
jl
dec
ljmp
sub
and
leave
mov
iret
jecxz
shrl
mov
jno
mov
dec
pop
xchg
lret
xor
stos
es
xchg
mov
push
faddl
scas
loop
sbb
push
mov
loop
add
fadd
mov
fstpl
mov
je
mov
pusha
xchg
clc
sbb
push
jae
lahf
inc
xchg
adc
cmp
cltd
dec
cmp
ret
mov
mov
pop
and
pushf
enter
scas
hlt
cwtl
and
sti
je
or
mov
mov
cs
fimuls
cmp
cmp
pop
fimuls
mov
mov
and
scas
movsl
mov
add
lods
pop
or
es
jb
addr16
xchg
lret
mov
sbb
popf
sbb
mov
loopne
push
movsl
je
mov
notb
jb
adcb
mov
cld
cmpl
data16
jge
mov
fwait
fwait
cmpsb
and
add
push
sbb
test
enter
dec
shl
xor
cmc
cmp
add
jnp
dec
jge
dec
lock
mov
lods
ss
cs
gs
enter
mov
pusha
and
test
push
dec
shrb
xlat
inc
sbb
xchg
fsincos
mov
ret
fisubs
ja
xor
jl
fiadds
fbld
pop
sbb
leave
fdivl
sub
lea
xchg
pop
mov
inc
mov
pop
dec
das
cltd
outsl
test
lret
mov
or
xchg
sub
xor
arpl
sbb
push
cmp
push
xor
pop
fiaddl
outsb
in
jmp
sbb
lcall
int
sbb
pop
mov
dec
xor
xor
loop
lods
push
addr16
mov
mov
and
pop
push
or
jmp
cmpsb
pushf
jge
cmpsb
cmc
xchg
hlt
push
test
stc
iret
nop
testl
dec
inc
cltd
push
inc
jae
dec
in
movsl
jmp
pop
hlt
std
adc
pop
int3
and
lock
ds
lods
pop
sarb
sub
jle
push
rcll
iret
out
xchg
inc
outsb
rcrb
ret
dec
and
push
pushl
inc
xchg
inc
mov
mov
mov
rolb
jne
loop
in
ficoms
repnz
insl
lds
dec
pushf
adc
inc
jae
cmp
jb
std
push
into
andb
mov
out
int3
dec
in
mov
pop
loop
xchg
mov
xor
cmp
inc
cld
or
pop
sub
push
call
arpl
mov
pop
mov
sti
insl
bound
mov
in
ljmp
enter
or
push
pop
push
call
sub
adc
les
shll
push
dec
push
popf
shll
fwait
xor
sub
and
sub
cmp
lret
addb
mov
movsl
dec
dec
mov
leave
sub
inc
push
ret
xchg
jg
aas
or
push
iret
cmp
in
sbb
jb
jbe
testb
push
lcall
mov
jg
fimull
inc
mov
pop
push
out
movsl
mov
pop
outsl
dec
leave
push
clc
loope
shll
dec
cmp
cmp
mov
pop
adc
sbb
popa
mov
or
addr16
imul
insl
dec
cmp
vmovntdq
mov
pop
cs
shrl
aad
jecxz
mov
xor
push
pop
andl
cmp
es
jb
or
mov
arpl
and
push
sub
and
sub
add
stos
mov
pop
xchg
js
imul
dec
push
lods
mov
shrl
int3
inc
add
inc
lahf
mov
outsl
pop
out
pop
sbb
shlb
and
imul
les
sbb
out
dec
movsb
mov
push
jns
mull
xor
cltd
add
lahf
je
faddl
dec
inc
bound
xor
adc
push
xchg
mov
add
dec
mov
mov
xchg
pop
cmpsb
bound
cmpsb
mov
and
inc
cmp
inc
inc
out
pop
pop
dec
jge
stos
test
mov
icebp
xchg
add
or
int
pop
or
imul
iret
cld
clc
push
xor
or
adc
test
sbb
xor
fs
sbbl
enter
and
inc
cmp
cmpsl
jbe
and
fstpt
cmpsl
adc
es
in
pop
lcall
in
out
insb
or
sbb
inc
mov
mov
xchg
ljmp
ret
add
sub
mov
add
lahf
adc
cmp
push
push
pop
xchg
lds
pop
enter
popa
or
mov
adc
daa
push
mov
test
xchg
and
xchg
cmpsl
movsb
fisubrl
or
pushf
mov
ljmp
testl
in
inc
adc
pop
xor
xor
mov
cmp
jle
sbb
push
jle
adc
add
outsb
inc
and
cmc
cmp
insl
outsb
lret
sbb
mov
lock
cmp
je
sub
ja
sbb
mov
push
inc
lcall
cmp
call
jb
xor
into
fldcw
xchg
mov
inc
push
xlat
iret
pop
jmp
jl
in
push
scas
outsl
clc
sbb
xor
mov
hlt
dec
stos
sub
inc
lods
pop
in
cli
jmp
xor
sbb
fmull
or
xor
icebp
daa
js
jmp
jbe
jb
arpl
dec
cmp
rcrb
mov
sub
pop
bound
pusha
xchg
adc
jb
mov
jno
sbb
out
mov
jge
push
scas
jecxz
xchg
dec
mov
add
cmp
add
push
repz
push
xchg
lret
add
lcall
ds
jge
cmp
aam
cmc
add
rcrl
sub
cli
roll
fsubr
sahf
adc
push
loop
pop
mov
loop
ficoml
mov
ljmp
mov
popf
popa
xchg
push
xor
mov
cld
jmp
dec
gs
bound
movsl
pop
adc
bound
cltd
or
cmp
movb
insb
adc
out
iret
lcall
leave
leave
cmp
aam
dec
dec
aad
sub
fwait
adc
jmp
in
xchg
leave
icebp
leave
in
push
sti
stc
stos
add
lds
mov
andl
fiaddl
sbbb
frstor
dec
dec
rolb
push
out
lods
xor
sbb
cmc
fucomip
mov
cmc
mov
mov
rorb
mov
sarl
push
jo
enter
test
adc
pop
and
leave
fldt
adc
int3
fildll
ss
in
push
push
rcrb
sub
aas
jp
dec
rcrb
cli
adc
mov
sysenter
les
into
xor
fwait
cld
das
ja
xchg
or
in
test
sub
nop
std
xor
xchg
or
mov
icebp
icebp
lret
dec
sahf
fiadds
xor
arpl
js
mov
in
cmp
ljmp
mov
scas
in
fistpl
inc
bound
sbb
xchg
sub
pop
inc
adc
inc
movsl
es
fcomip
dec
xor
imul
jg
jl
sub
and
xchg
out
fstl
pop
loop
cld
daa
and
test
push
cwtl
out
dec
cltd
or
sub
push
lret
out
sub
mov
cs
lds
fcoms
add
sbb
jae
andb
cmp
adc
add
test
jb
leave
dec
push
add
and
jp
out
or
push
sub
xor
cmp
in
ds
push
mov
push
or
jb
sbb
jne
xor
adc
inc
sti
lret
adcl
lock
cwtl
add
enter
inc
addr16
std
or
sub
pop
pop
cmp
sub
scas
addb
push
out
push
xlat
sbb
push
out
cmp
mov
push
xchg
faddl
inc
faddl
sub
sub
ret
cwtl
lahf
and
sbb
ret
jecxz
ja
mov
sahf
loop
mov
cmp
call
pop
mov
lcall
xchg
imul
cwtl
xor
mov
mov
xlat
lods
int
mov
test
das
arpl
sub
lock
sbb
dec
pop
repnz
sub
adc
insl
int
out
xchg
push
adc
sub
xchg
dec
add
mov
dec
cmp
adc
sbb
leave
jmp
or
and
xor
mov
outsb
cmpsl
sbb
popa
bound
inc
or
mov
jp
mov
je
dec
xchg
inc
pusha
mov
inc
subb
add
hlt
sub
je
jg
push
dec
push
dec
in
mov
cmp
fists
pop
fs
mov
loopne
mov
mov
lahf
and
dec
lahf
mov
jmp
ret
push
fdivr
mov
sub
bound
xchg
dec
inc
mov
lcall
xorl
iret
inc
xchg
fmuls
jge
ss
xor
mov
pop
call
inc
fcmovne
dec
out
lods
or
ds
mov
outsb
inc
push
cmpsl
add
add
je
inc
xor
lret
cs
mov
aas
call
xchg
and
leave
push
cmp
lock
test
icebp
cltd
out
mov
inc
in
add
jno
stc
sbb
repz
jg
std
addw
es
aam
mov
mov
leave
push
shl
cmp
cmp
add
add
add
and
lret
gs
frstor
sti
mov
bound
mov
pop
mov
inc
adc
sbb
imul
mov
and
and
jge
icebp
adc
lock
stc
shll
sbb
jo
stos
test
lods
daa
or
cwtl
cli
lret
out
aas
add
ret
stos
add
sbb
inc
xchg
mov
jae
jbe
sub
cmp
insb
sbb
shl
mov
adc
xor
and
loop
pop
test
fcmovnu
repz
pop
roll
out
test
mov
push
lahf
mov
or
mov
mov
mov
orl
stc
into
jbe
cwtl
adc
call
jecxz
jge
cmp
pop
cmpsl
aaa
inc
test
popa
and
and
mov
lds
adc
shll
push
mov
insl
pop
add
jae
push
mov
cld
pop
add
xchg
sbb
fldenv
rorb
clc
sar
jp
stos
xor
test
mov
push
cs
lods
sub
cmpsb
push
shrl
faddl
test
and
sub
fnstenv
jp
push
and
pop
xor
mov
mov
mov
push
xchg
mov
dec
shrl
sbb
jp
cltd
subb
or
mov
push
shlb
ja
pop
out
or
dec
add
jne
gs
mov
push
push
and
inc
or
cmp
mov
test
adc
mov
jns
jge
int
sbb
test
or
aad
mov
int3
pop
jne
inc
leave
or
sti
lret
mov
stc
jae
mov
mov
pusha
sub
dec
push
or
scas
mov
mov
inc
jo
imul
mov
std
shrb
push
mov
sub
mov
into
ficoml
sbb
cmp
push
es
push
test
mov
in
lods
fidivl
or
jle
push
lds
aam
dec
repz
aad
nop
dec
lds
ror
pop
jb
inc
pop
mov
jecxz
mov
adc
and
das
sbb
mov
rorb
mov
fiadds
sbb
movsl
jmp
dec
pop
aaa
out
je
adc
jns
call
stc
sub
in
push
xchg
popa
lock
ret
xchg
aas
xor
std
xchg
fiaddl
jae
sub
mov
adc
cwtl
adc
jns
mov
in
xchg
add
frstor
sbb
popf
outsb
fdivl
aad
push
cmp
fstl
jnp
jno
inc
adc
and
popf
xlat
mov
test
sbb
mov
sbb
loope
in
stos
jne
cmp
pop
inc
fsubl
enter
sub
cmp
shl
sbb
xor
insb
daa
aaa
jbe
popa
int3
ret
dec
je
in
and
dec
lret
lods
pop
mov
and
dec
out
pop
add
cmp
fidivrs
mov
add
pop
lahf
push
xchg
inc
add
jp
adc
int
stc
addr16
gs
cmp
pop
or
xor
das
push
inc
inc
and
pop
dec
fildl
dec
clc
push
and
dec
fxam
insb
mov
sub
and
push
xchg
push
dec
inc
adc
std
sub
mov
sub
mov
xchg
mov
popl
adc
push
out
daa
push
lahf
dec
js
mov
xor
je
mov
cmp
iret
lods
add
and
inc
out
sbbb
inc
inc
push
add
jo
cmp
push
mov
jl
and
dec
push
out
dec
hlt
repz
out
sbb
gs
fsubs
lods
mov
jmp
adcb
inc
sub
pusha
iret
daa
xor
jns
fadds
mov
fisttpll
out
dec
mov
xchg
fdiv
and
sub
mov
mov
mov
mov
mov
scas
test
stc
or
xchg
sbb
adc
loope
jns
adcb
hlt
dec
cltd
repz
sub
les
sbbb
hlt
test
cmp
fnstsw
mov
jbe
xchg
cwtl
loopne
jp
roll
sub
cld
xchg
mov
jge
xchg
leave
cmp
push
sub
data16
fcmovnbe
pop
mov
ds
outsl
xchg
add
jecxz
add
or
jae
xor
decb
mov
popf
mov
mov
dec
dec
xchg
pop
imul
sbb
lock
pop
dec
sub
sub
fisttpl
and
sub
gs
xor
out
jne
sub
and
popa
pusha
dec
into
flds
inc
or
lea
push
sbb
xchg
in
outsl
je
jmp
adc
lcall
pop
mov
push
mov
dec
icebp
inc
mov
mov
jl
adc
and
rolb
xchg
or
aam
mov
sbb
adc
mov
xchg
cwtl
mov
imulb
mov
adc
fdivs
and
cmp
dec
mov
and
pusha
jge
and
sarl
inc
sbb
lahf
js
test
jmp
mov
push
inc
xor
xchg
add
mov
add
or
cmp
cmpsb
mov
rcrl
inc
jnp
push
rcll
push
jecxz
adc
or
cmc
das
add
std
int3
fidivrs
push
mov
adc
stos
cs
add
rcr
dec
sub
sub
jg
dec
xor
test
mov
test
dec
mov
and
ficoml
inc
adc
out
mov
and
lods
inc
stos
jb
cli
push
movsb
call
push
je
jg
mov
shll
pusha
jmp
addr16
gs
mov
inc
aas
and
lahf
jb
icebp
rcrb
jmp
leave
pop
jbe
jle
adc
bound
out
mov
imul
rcll
dec
push
rclb
bound
lcall
push
les
cmp
and
add
dec
iret
iret
clc
sbb
stos
xor
mov
jae
out
test
xchg
out
lret
jmp
dec
aaa
add
test
hlt
and
jle
push
xchg
ret
icebp
movsl
sbb
adc
dec
jbe
dec
push
mov
xchg
push
sbb
movsl
jl
leave
ficompl
imul
xlat
inc
jl
je
xor
pop
outsl
js
or
inc
or
shrb
mov
fs
pusha
push
out
mov
data16
std
mov
dec
sbb
mov
lea
fwait
jae
sub
pop
fs
and
rcll
mov
sub
shr
cmp
jp
add
cwtl
xlat
repnz
rolb
jge
es
push
push
xor
je
rcr
out
cld
sub
shr
popf
ret
testb
lods
fidivrs
or
or
fildll
jecxz
mov
lcall
shr
ficompl
xchg
cltd
and
call
xor
ret
xchg
lret
adc
leave
jge
xchg
mov
rol
mov
rorb
out
add
in
arpl
lods
mov
fadds
add
repnz
pop
and
repnz
in
mov
mov
pop
mov
fwait
pop
cwtl
dec
shrl
pusha
cmpsb
xor
adc
dec
push
and
adc
hlt
scas
jae
sahf
jg
jge
mov
jne
sbb
sar
stos
dec
sbb
cltd
xchg
or
mov
sahf
sub
movsb
in
scas
dec
xchg
idivb
movsb
dec
jmp
mov
push
adc
add
sub
pop
xchg
fwait
inc
xor
pop
mov
enter
mov
aam
xchg
xor
mulb
adc
xchg
sbb
dec
sbb
jecxz
sbb
mov
out
in
mov
mov
fiaddl
loope
jnp
out
ljmp
pusha
jb
in
pop
sbb
fld
xchg
jns
scas
shll
pop
mov
rol
adc
dec
insl
stc
add
xchg
popa
cltd
or
cmp
pushf
mov
sbb
ret
mov
arpl
add
in
pop
lret
push
stc
ror
shlb
scas
mov
adc
mov
cmp
daa
mov
jnp
mov
xchg
jnp
in
aaa
cmp
cs
mov
icebp
xchg
rcll
and
flds
popf
enter
xchg
stc
inc
and
push
push
pop
pop
jae
ret
pop
mov
xchg
and
loope
aam
test
mov
sbb
sub
lret
pop
push
cmpb
or
testb
xchg
xor
popa
shrl
sbb
mov
bound
add
aad
jecxz
push
xchg
mov
xlat
mov
dec
out
dec
loope
push
enter
fisttps
inc
loop
mov
inc
xor
xchg
outsb
mov
aad
dec
ret
xlat
sub
hlt
cmp
adc
mov
push
push
addr16
ret
add
mov
or
test
sbb
mov
pop
mov
fwait
push
lret
ja
sbb
lahf
sbb
mov
jae
sub
fucomp
pop
cmc
dec
xchg
xchg
add
sti
jecxz
shlb
xchg
xor
sbb
pop
das
mov
dec
mov
and
mov
jl
cmp
mov
icebp
add
cmp
ds
inc
sbb
addr16
push
rcrl
divb
js
lea
push
mov
lcall
pop
push
fnstenv
add
sti
dec
push
sti
xor
roll
rcrl
jge
clc
out
sub
cmp
cmp
into
sub
aad
mov
bound
push
out
xor
push
or
and
mov
out
sbb
or
pop
sub
and
fisttpll
sub
push
dec
ja
push
sbb
sbb
push
pop
scas
inc
mov
enter
mov
jns
jo
lods
jne
scas
aas
outsb
mov
jns
call
xchg
sbb
pop
mov
mov
sbb
lret
xchg
mov
test
fcomps
push
pop
inc
or
fincstp
jo
out
add
sbb
push
inc
dec
xchg
ficoml
pop
loopne
pop
pop
pop
clc
jne
clc
dec
fwait
bound
data16
cmp
repz
in
nop
and
and
or
xchg
jo
cmp
jno
jecxz
mov
clc
mov
mull
cmpsl
icebp
call
add
mov
mov
xor
mov
xlat
cmp
aad
xchg
pop
inc
aam
lahf
dec
loop
inc
add
data16
mov
es
fstpl
sahf
xor
sbb
push
mov
adc
inc
rcrb
inc
or
movsl
mov
jno
lods
push
jnp
mov
ja
enter
addr16
xlat
cmpsl
mov
xchg
sbb
enter
dec
xchg
inc
or
push
mov
test
xor
cmp
mov
ds
daa
fs
cld
fdivrl
lock
push
sbb
pop
dec
sbb
jecxz
and
mov
std
dec
aas
mov
aad
or
test
sub
xchg
hlt
dec
arpl
cmc
jb
sub
cmpsl
xchg
outsl
xor
aaa
pusha
divb
mov
sub
scas
flds
stos
lret
imul
icebp
negb
shlb
stc
fldl
popf
cmc
pop
out
add
rclb
dec
xor
sahf
shrb
ret
cvttps2pi
ret
lcall
dec
and
jnp
cmp
xchg
adc
call
out
cmp
mov
jl
out
das
xchg
push
mov
jle
pop
test
xlat
hlt
imul
bound
mov
dec
testl
sub
scas
scas
add
sub
pop
outsb
push
negb
dec
cmp
cld
rcrl
lcall
mov
shr
and
in
push
jnp
adc
ret
bound
mov
scas
rcr
mov
mov
fstp
jno
dec
ret
xchg
jmp
stc
push
push
inc
pop
inc
in
shl
mov
mov
iret
aad
or
lods
inc
xchg
mov
push
fldenv
jl
xchg
dec
xor
fcomi
push
and
add
sbb
lods
adc
pusha
in
pusha
int
lret
addr16
mov
fcompl
ret
cmp
and
push
orl
enter
stos
iret
cmp
jp
xchg
rorb
sub
es
fcomps
push
imul
mov
inc
clc
sub
adc
insb
lods
xchg
sbb
adc
jno
mov
out
jo
xchg
pushf
push
pop
add
mov
jmp
or
pop
arpl
xor
lods
movsb
movsl
addl
dec
sti
test
inc
dec
sub
popa
sbb
sarl
leave
ljmp
lcall
push
dec
gs
sarl
int3
inc
in
and
sbb
cs
repnz
enter
push
jl
pusha
sub
outsl
sbb
shl
and
psrlq
addr16
add
shll
dec
test
lcall
pop
adc
or
fwait
cmpsl
pop
mov
xchg
sub
loopne
in
scas
or
and
aas
mov
jne
jno
aas
xor
sub
pop
cltd
sarl
stc
adc
cmp
sbb
xchg
sti
sbb
loopne
mov
adc
mov
mov
nop
adc
into
ja
bound
shlb
add
fidivs
enter
xchg
leave
pop
lds
out
dec
adc
adcb
lea
out
adc
and
sahf
test
adc
loop
inc
cmp
testl
scas
push
pop
test
adc
aas
std
ds
fnstsw
add
jl
adc
ja
clc
and
andl
notb
dec
or
inc
mov
mov
cmpsb
test
xchg
xchg
mov
insl
push
ds
das
sti
test
loop
fnstsw
fistl
xor
xchg
enter
out
jns
push
lret
mul
jae
inc
hlt
sbb
pop
out
loopne
or
inc
pop
mov
fistl
icebp
push
dec
inc
add
sbb
shrb
mov
xchg
fiadds
adcb
in
sub
jno
xlat
mov
xchg
bound
dec
add
sub
loopne
into
nop
and
stc
mov
mov
cltd
mov
xor
adc
test
cwtl
std
push
jl
and
xchg
mov
fcom
lahf
outsb
cmp
inc
xchg
into
adc
jmp
mov
gs
ret
and
into
sub
dec
inc
js
js
xor
in
dec
xor
jae
stos
jno
xchg
lods
pop
test
scas
mov
repnz
pusha
and
ja
mov
jno
repz
mov
cld
fmuls
fdivr
test
xor
cmpsl
sub
cs
push
mov
push
in
cs
rorl
test
scas
je
inc
adc
out
push
mov
pop
sub
sbb
cld
mov
int3
add
mov
or
aas
fldcw
cld
test
mull
cltd
ds
xchg
mov
stos
add
int3
xchg
inc
popa
subl
cmpsb
icebp
fmuls
mov
adc
fcomip
mov
fstl
mov
jmp
adc
data16
mov
xchg
add
or
movsl
fcomi
cmpsb
sahf
sub
fwait
cs
push
dec
pop
mov
loopne
sub
test
arpl
jg
into
mov
adcb
mov
adcb
inc
call
aas
scas
xchg
test
orl
cmp
iret
xchg
xor
inc
sti
adc
test
idiv
dec
jmp
aas
fisttpll
sbb
flds
fwait
divb
mov
inc
aaa
insl
fcmovbe
ret
cmp
pop
shlb
jno
lcall
add
jbe
xchg
mov
imul
orb
mov
repnz
jno
stos
in
jp
pushf
mov
fidivs
rolb
add
or
cmp
jp
jb
dec
movsl
jns
shll
test
mov
aad
mov
in
sub
addl
pop
aad
cmpsl
out
pop
loope
xor
and
ret
loop
js
ror
jno
cmp
and
jo
pop
sbb
xchg
jns
out
movsb
cmpsl
adc
test
push
xor
test
xchg
loopne
nop
pop
add
add
out
pop
sub
data16
sbb
rolb
jp
sub
and
adc
out
add
push
movb
inc
insb
mov
ret
cmp
inc
mov
orl
mov
mov
jbe
nop
and
fidivs
jg
cwtl
lock
adc
mov
cs
push
mull
and
sti
push
xchg
int
jo
lcall
lods
cmp
or
sbb
mov
inc
pop
enter
mov
sbb
cmp
xor
push
jo
push
cmc
fiaddl
test
inc
push
filds
enter
adc
jns
sub
dec
jge
imul
das
mov
xchg
sti
outsb
negl
xchg
fdivs
xor
push
or
xchg
xlat
jb
add
popa
hlt
jl
sbb
push
mul
bound
jb,pt
into
or
scas
bound
lcall
mov
daa
inc
sarl
test
mov
fstpl
push
cli
dec
lods
push
cmp
push
js
ret
dec
adc
inc
adcl
xchg
mov
mov
adc
push
ret
enter
sbb
iret
pop
mov
jo
jecxz,pn
dec
fldl
jl
adcb
sub
pop
fdivrs
xchg
int3
int3
ret
xchg
cld
stc
loope
dec
scas
add
xor
sbb
xchg
sahf
jp
mov
mov
push
cmp
enter
jo
fdivr
xor
fidivs
mov
ud2
mov
pop
stos
sub
subb
sbb
pop
loope
pop
lahf
and
icebp
ret
adc
and
aam
test
xor
push
out
xor
xor
sbb
and
xor
rcll
es
subb
push
enter
push
pop
sub
stos
ds
push
xchg
outsb
inc
dec
pop
clc
outsb
sub
aam
je
cld
mov
iret
cltd
jecxz
mov
iret
mov
or
mov
in
xor
popf
sub
je
dec
out
int
cli
js
ror
push
hlt
fadds
jo
pop
iret
mov
in
jnp
jno
fwait
push
mov
in
inc
mov
cs
sbb
test
mov
sbb
movsl
and
push
pop
inc
ret
sahf
dec
lock
notb
aas
call
lock
add
sub
push
les
jl
adc
stos
ja
xor
imul
push
xchg
adc
mov
jp
cmp
cmc
xor
sub
jmp
and
mov
jl
inc
dec
fstl
aam
pushf
inc
call
adc
out
dec
sbb
mov
xor
lahf
push
sub
or
daa
repz
and
iret
outsl
cmpsb
and
in
insb
and
rcll
jo
pop
mov
dec
cmp
outsl
xor
sub
ljmp
dec
jge
adc
inc
lfs
pop
inc
jo
sbb
fstl
mov
orb
cwtl
aad
push
subb
dec
mov
add
mov
loop
sahf
fisubrl
out
int
cmp
jo
fs
aam
out
mov
and
push
pop
sbb
lret
pop
push
sub
push
pop
sub
pushf
push
repz
pop
jae
jge
dec
lds
adc
inc
fwait
ja
or
cmc
sbb
dec
xor
and
mov
mov
cld
mov
addb
test
jle
shr
loope
ja
loopne
int3
insb
xchg
sbb
mov
sbb
dec
sbb
ret
stc
mov
fdivrs
adc
mov
shl
fcompl
stos
xor
jge
or
in
test
rorb
std
ss
push
add
negb
cmp
pop
pop
scas
scas
orb
dec
cmp
jne
adc
repz
les
adc
cwtl
psadbw
movsl
cmp
das
shrl
and
test
and
dec
in
std
stos
or
punpckhdq
orb
imull
loopne
fs
dec
mov
stos
call
ljmp
mov
sub
mov
push
leave
mov
clc
or
xchg
and
or
and
jecxz
dec
sarl
pushf
inc
fcoms
cs
fwait
adc
inc
aas
push
push
jbe
xor
orb
pop
xor
push
sub
mov
ds
mov
daa
or
push
add
pop
mov
add
and
pop
test
dec
jl
push
mov
add
int
sbb
dec
imulb
enter
pusha
sbb
dec
test
mov
je
jns
faddp
xor
mov
fldenv
ret
pop
sbb
stc
aas
pop
pusha
or
add
dec
dec
cmp
call
cmp
inc
cmp
sbb
rcr
in
mov
pop
mov
ljmp
fstl
movsl
xchg
jnp
fmull
iret
xorb
gs
xchg
loopne
jbe
mov
mov
xchg
popa
fistpl
out
int
pop
gs
mov
out
inc
sub
add
js
vminps
mov
dec
popf
push
insl
in
cmp
xchg
or
outsl
lret
mov
push
sbb
cmpsb
ds
inc
dec
mov
mov
cli
cld
aam
arpl
and
cmp
jne
mov
jne
lods
sbb
lods
xor
dec
lds
xchg
mov
xchg
mov
mov
addr16
pop
push
je
xchg
movsl
stos
out
mov
mov
addb
fildl
sub
cmpb
lods
xchg
mov
or
lret
xchg
pop
pop
dec
mov
adc
and
mov
outsl
push
insb
and
xchg
lods
fnstenv
mov
jae
shlb
jno
mov
mov
jle
sbb
pushf
outsl
adc
int3
and
adc
xor
lret
xor
in
mov
test
aad
xchg
sub
sbb
out
fs
inc
lock
data16
das
movsb
xchg
and
into
in
lock
jno
insb
pop
imul
mov
insb
iret
or
jp
fdivr
enter
ds
and
xchg
nop
and
incb
and
sti
pop
mov
pop
jg
popa
jns
xor
mov
lret
jp
jnp
and
inc
inc
adc
mov
lret
pushf
pop
sti
into
jo
pop
jns
in
jo
or
fwait
nop
shrl
mov
xor
push
clc
jbe
adc
lds
inc
mov
es
or
data16
imul
xor
ja
jbe
bound
out
fdivrl
sbb
dec
jae
add
idiv
sbb
popf
jp
gs
sub
hlt
mov
mov
and
test
mov
cld
and
outsb
push
lret
mov
lds
jp
pop
jbe
fsts
dec
sub
pusha
rcrb
pop
sbb
add
repz
and
insl
rcrb
pop
pop
sub
lcall
jns
pop
jno
jg
das
lret
test
popa
add
xchg
dec
push
and
push
cmp
add
aaa
scas
dec
adc
dec
dec
sub
inc
sbb
loope
mov
stos
movsl
pop
push
divb
inc
mov
les
jo
lods
jnp
pushf
aam
outsb
xchg
cld
daa
scas
pop
js
cltd
and
add
lods
push
pop
and
mov
out
or
mov
mov
in
pop
jno
popa
xchg
xchg
daa
sbbb
fsubrl
mov
pop
loop
mov
mov
clc
xchg
lock
testb
stc
movsb
jnp
pushf
adc
pop
cmp
push
fldcw
xchg
js
js
push
mov
cld
inc
nop
testb
jecxz
fs
out
inc
aam
add
cmp
hlt
jmp
cmpsl
imulb
cmpsl
or
sbb
xchg
out
xlat
xchg
xor
fisubrs
fwait
lea
lods
add
repnz
clc
out
dec
inc
and
sub
gs
inc
mov
movsb
cmp
stc
cli
pop
stos
ds
mov
sub
inc
hlt
dec
jns
lret
je
shlb
push
loope
jae
aaa
lods
hlt
dec
icebp
mov
mov
sbb
mov
int3
movsl
outsb
mov
fwait
scas
mov
sub
test
stos
cmp
xor
xchg
or
mov
cwtl
mov
dec
mov
test
or
jns
jne
bound
mov
in
ret
cltd
shr
in
adc
std
sbb
mov
nop
and
imul
fs
mov
or
sub
int
pop
mov
push
cwtl
mov
pusha
rolb
mov
cmp
sub
les
adc
int3
scas
pop
mov
xchg
sti
fucomip
dec
dec
fwait
xlat
mov
sub
jno
icebp
xchg
dec
cmp
push
mov
xchg
pop
out
stos
mov
jns
mov
push
mov
jo
xorl
mov
adc
notb
pop
int3
sbb
sarl
clc
and
jbe
sub
outsb
shll
dec
mov
fimuls
pop
dec
loopne
movsb
enter
push
mov
jmp
decl
fmull
outsl
push
mov
add
int3
lods
icebp
repz
push
fisubrs
or
sahf
add
aas
daa
repz
out
fs
fwait
xchg
mov
push
or
inc
push
add
push
popa
dec
mov
cmp
xchg
in
jle
push
mov
sbb
movsl
xchg
mov
mov
cld
int
push
sub
aam
xchg
in
movsb
jmp
lret
mov
pop
data16
push
or
inc
cs
push
xchg
mov
test
push
sti
int3
xchg
sbb
or
cmp
ljmp
xor
inc
mov
pop
xchg
fsubr
std
sub
push
fwait
out
push
cwtl
inc
popf
mov
pop
test
int
mov
sbb
push
jmp
inc
inc
pop
imul
pop
fisubl
decb
roll
mov
andb
lea
std
daa
es
rcrl
mov
loopne
js
lret
xor
jmp
shlb
aad
push
movsl
or
mov
jne
or
mov
jecxz
jne
in
mov
push
sahf
je
test
dec
addr16
mov
mov
dec
pop
inc
out
sub
stc
shll
leave
out
pop
and
mov
mov
icebp
aaa
xchg
sbb
xchg
sbb
lds
mov
popa
rorl
and
in
mov
add
push
sbb
push
cmpsb
pop
lcall
popa
sub
pushf
mov
mov
mov
addr16
adc
mov
mov
push
int3
into
adc
cmp
pop
pop
lock
insl
ljmp
add
adc
sbb
adc
imul
int3
call
jo
shlb
mov
dec
add
insb
push
mov
daa
push
push
xchg
ljmp
dec
sbb
cmc
or
mov
adcl
pop
or
pushf
gs
std
nop
into
push
adc
add
je
xchg
mov
mov
cmp
mov
rclb
popf
pop
or
outsb
xchg
repz
out
sub
fs
loopne
or
push
or
mov
push
icebp
jecxz
inc
jp
mov
adcl
je
pop
mov
hlt
cwtl
pop
scas
sub
pop
inc
leave
jmp
scas
add
sbb
ret
add
inc
test
testb
aaa
add
cmp
pop
and
or
loopne
mov
push
push
sbb
or
mov
xlat
sub
xor
adc
mov
xlat
aaa
in
push
pop
dec
dec
pop
sti
in
sbb
lret
mov
mov
repnz
popf
jns
lcall
test
jno
dec
dec
and
mov
xchg
movsl
fldenv
stc
cmp
mov
sbb
dec
sarb
cmpsb
mov
scas
cltd
mov
pop
adc
xchg
leave
stc
rorl
cmp
mov
je
mov
pop
push
add
sbb
xchg
xchg
loop
jae
mov
enter
dec
jns
pop
subb
push
fldt
stc
das
out
jo
mov
mov
fcmovnu
imulb
xchg
cld
push
sti
fisttps
fdivrs
out
cmc
add
xlat
popf
pop
xchg
xorb
jb
or
jnp
dec
movsb
pop
movl
fidivl
sub
cmp
lock
cwtl
xchg
es
scas
inc
mov
mov
popf
jl
xchg
cmp
in
call
js
jge
lret
out
loope
mov
lea
xchg
jns,pt
inc
mov
inc
hlt
outsl
ret
dec
xchg
inc
and
cmovns
loop
jle
lret
mov
xchg
and
add
jecxz
and
les
ret
mov
sahf
int
inc
inc
push
sub
pushf
jl
sub
cld
cld
and
fldt
icebp
out
jmp
test
mov
cmc
jecxz
dec
sbb
sub
inc
pop
pop
jns
rcrb
inc
lahf
test
mov
fisubrs
shr
int3
mov
cmc
jae
in
cmp
jne
imul
in
lret
fsubs
push
jne
xor
adc
iret
fstps
fistpl
inc
fwait
add
sbb
movsb
in
mov
mov
icebp
sti
lods
test
pushf
cmp
pop
aas
inc
adc
push
xchg
cmp
test
js,pt
dec
xlat
subl
xchg
ror
mov
mov
push
jae
cli
aam
dec
mov
cmp
adc
pop
movsl
or
push
add
pop
add
dec
inc
lcall
ret
jae
cli
push
push
loop
cmp
pop
fists
fcmovb
dec
addr16
adcl
pop
mov
adc
hlt
mov
xor
cmpsb
out
nop
xchg
lods
pop
loope
mov
stos
mov
pushl
inc
fnstsw
out
cmp
stos
leave
fidivl
cmp
jg
and
orl
js
jmp
xor
scas
loop
mov
jne
sub
inc
sarl
cmc
cld
fidivl
sbb
push
xchg
sub
dec
testb
xor
nop
leave
inc
cltd
mov
pop
loop
imul
aam
mov
lods
or
and
push
dec
xchg
test
push
dec
sar
jne
test
xchg
test
xor
push
stos
jg
mov
fdivrp
testl
or
adc
sbb
popf
test
mov
xor
outsb
js
into
push
jo
cld
or
movsl
std
test
mov
xlat
cmp
addr16
xchg
xor
sub
bound
ljmp
gs
lahf
shrb
sarb
rorl
sbb
sti
and
fnsave
mov
imul
sbb
shl
sbb
iret
fdivl
in
insl
inc
cmp
ficomps
add
ret
sub
ss
mov
inc
outsl
shl
and
xor
add
sbb
es
inc
mov
and
xor
inc
cmp
mov
iret
cmp
jge
inc
jg
pop
les
lcall
mov
or
out
push
hlt
push
imul
jnp
or
cmpsl
mov
outsl
es
push
cmp
stos
das
arpl
xchg
loopne
fninit
pop
mov
cs
xchg
push
cld
xor
sbb
sub
mov
nop
cli
pop
lret
sub
jns
or
cmp
loopne
or
pop
cmpb
daa
data16
mov
std
in
lea
xchg
mov
jo
mov
test
sub
mov
jmp
adc
or
aad
pusha
push
cwtl
loopne
xlat
dec
test
clc
cwtl
xchg
cmp
cmp
push
jmp
inc
ret
sub
sub
add
ds
and
add
xor
shlb
fdivrl
ds
push
mov
lahf
dec
cmp
ds
andl
fwait
or
loope
jne
cmpsb
xchg
xchg
push
xchg
xchg
ds
inc
inc
or
mov
insb
xorb
cmp
pop
data16
sti
mov
arpl
jmp
cmpsb
aam
pop
cmp
mov
cmp
sub
mov
stc
mov
cmp
adc
or
push
cmp
aaa
xor
repnz
scas
add
imul
pop
imul
mov
xchg
shll
add
in
cmpsb
bound
popf
mov
mov
sub
jp
or
mov
add
mov
xchg
imul
inc
insb
mov
lahf
rorb
push
je
lock
add
or
aam
out
jl
dec
or
sub
or
aam
mov
or
pop
push
int
jb
jae
arpl
mov
jb
mov
lds
insb
addl
mov
mov
int
inc
xor
test
mov
aad
and
xchg
xchg
or
cs
push
mov
cmpsb
mov
inc
add
sbb
lods
je
fcomps
fs
loope
aad
rcr
clc
lock
add
xchg
test
pop
mov
std
outsb
cmp
loope
jae
sbb
pusha
loopne
add
mov
lock
test
adc
jno
jnp
pop
sub
add
fcoms
xchg
pop
repz
add
call
shrb
punpckldq
rol
int
mov
and
xor
mov
insl
and
and
xchg
iret
dec
or
and
jb
mov
sbb
mov
adc
pop
lock
fisubs
jne
inc
inc
mov
out
in
aam
sbb
dec
xchg
std
adc
ljmp
push
stc
push
mov
xchg
adc
incl
adcl
bswap
idivl
and
dec
and
leave
lock
pop
xchg
loope
int3
std
hlt
pop
mov
pop
std
pop
xchg
out
add
sbbb
fdivp
ja
subl
jae
cmp
lea
lcall
bound
imull
scas
iret
negl
and
cmp
adcl
daa
or
in
sbb
and
xchg
push
and
ljmp
fwait
adc
inc
popf
lea
push
outsb
sbb
mov
push
mov
xor
adc
mov
mov
jo
aaa
push
aad
aam
fstl
jle
inc
fisttps
std
jns
sub
hlt
sarl
push
mov
and
mov
cli
xor
cmp
es
in
mov
and
lcall
and
add
adc
call
mov
mov
test
jg
jo
out
xor
leave
int3
xor
enter
ja
pslld
fisttps
pop
jmp
mov
int
into
rol
dec
arpl
dec
push
jecxz
lret
mov
lahf
or
rorl
jl
add
repnz
popf
xor
xchg
add
mov
or
sub
xchg
cmp
cmp
outsb
jbe
mov
mov
mov
ds
lds
jmp
add
push
ds
add
lock
xchg
add
xor
kmovw
dec
outsb
jp
fdivrl
and
cmp
sbb
fnsave
gs
fstpt
mov
test
mov
mov
and
inc
mov
out
test
ds
inc
inc
push
pop
add
lcall
imull
fdivs
les
jmp
loop
adc
subl
fcoml
out
popf
cmp
xchg
xlat
sbb
arpl
loopne
dec
in
pushf
push
pop
xchg
into
cli
pop
cmp
push
xchg
xchg
and
dec
push
lock
das
cmp
sub
and
arpl
popa
pop
hlt
mov
insb
push
pop
dec
fwait
jle
out
inc
mov
in
pop
mov
add
dec
test
mov
pop
mov
sub
enter
dec
cltd
mov
sarb
add
loope
cmpsb
xchg
movaps
cmp
pop
cwtl
pushf
punpckhwd
jo
dec
cmc
mov
mov
mov
popf
repnz
aaa
movsb
pop
leave
popa
mov
sbb
add
mov
stc
jle
dec
sbb
pop
mov
fdivs
pop
sub
xor
and
hlt
mov
shrl
mov
into
lret
sar
nop
ljmp
jmp
outsl
lock
out
lcall
mov
mov
xchg
in
outsl
adc
lds
pushf
or
push
adc
out
fwait
pop
xchg
jecxz
xchg
arpl
fstl
adcb
add
sbb
add
clc
cltd
dec
out
add
mov
xor
pop
test
shlb
nop
pop
xor
add
test
adc
mov
push
mov
mov
jl
loop
iret
je
lods
dec
popa
jg
jae
inc
fdivl
fdivl
sub
jmp
fsubl
js
jle
fsts
clc
movsb
or
jae
push
xchg
rorl
sbb
bt
loopne
or
repnz
sti
outsl
mov
pop
stos
ret
jecxz
divb
push
fstp
addr16
test
lahf
mov
adc
xor
mov
or
xchg
jnp
push
xrelease
cs
sub
pop
inc
ja
xor
sahf
jae
jns
repz
pop
jno
clc
movsb
arpl
pushf
popf
imul
sbb
shl
mov
pop
lods
push
pop
sub
lcall
js
in
sbb
negb
in
sub
and
jmp
out
dec
mov
clc
cli
adc
jae
scas
push
jmp
cmp
es
mov
mov
xchg
shrl
pop
mov
dec
fs
adc
cmovns
adc
or
ror
lods
add
fwait
scas
mov
insl
push
loope
mov
iret
and
mov
adcl
adc
loopne
xor
repz
lds
pop
mov
inc
push
jbe
lret
and
inc
gs
cld
jle
inc
stos
sub
fisttpl
icebp
cmc
mov
push
insl
fmuls
pop
hlt
mov
pop
mov
test
adc
push
jns
jl
add
movsl
xlat
pop
enter
mov
mov
jno
cmp
pusha
in
xor
jg
mov
gs
push
movsl
aas
add
out
inc
jns
mov
in
addl
dec
push
add
sbb
pop
or
adc
loop
cwtl
xchg
or
inc
out
xchg
mov
fcmovbe
nop
and
add
adc
jns
push
mov
in
cmp
jecxz
sub
arpl
pop
mov
loopne
lods
sahf
and
push
add
insl
hlt
lea
mov
push
cmpsb
dec
ret
aam
movsb
test
int3
mov
mov
add
mov
add
mov
sub
dec
and
adc
sahf
jg
mov
dec
xor
loop
push
cmp
push
sub
popf
rcrl
cwtl
mov
jne
and
or
and
mov
push
push
xor
pop
lods
adcl
jbe
movsb
test
xlat
aam
lock
jb
pop
cmpsl
sub
cltd
fisubl
mov
adc
jg
jmp
data16
and
and
in
ds
cmp
je
ljmp
imul
dec
and
cs
clc
lahf
icebp
adc
add
jle
inc
fwait
int3
ja
aad
and
adc
inc
push
in
xlat
mov
mov
lret
ja
mov
data16
lret
push
xchg
jno
or
xor
pusha
jg
and
out
pop
jg
dec
pop
mov
je
outsl
jae
cmp
in
jmp
push
es
sbb
and
jne
adc
xor
sub
sarb
in
mov
lret
dec
or
sub
add
lods
outsb
push
out
gs
pushf
int3
mov
frstor
xchg
xchg
sbb
xchg
nop
adc
mov
cmpsl
sub
lret
push
data16
ljmp
lds
sub
pop
lods
out
sub
xor
and
dec
insl
sbb
add
and
adc
sbb
jae
fisttps
push
stos
jmp
aad
mov
adc
stc
push
cmp
lea
cli
out
ret
shll
imul
mov
cwtl
mov
adc
incb
cmc
and
clc
mov
js
pusha
pop
out
or
lcall
pop
cmp
in
js
jo
cmp
jmp
mov
fidivs
fdivrs
daa
pop
cmp
nop
repnz
sbb
mov
jmp
leave
push
push
push
and
push
insl
jne
hlt
iret
mov
ss
add
add
mov
jno
ror
add
rcr
mov
jo
rcrl
stos
push
arpl
repz
adc
xor
mov
dec
ljmp
xchg
test
enter
jns
test
out
or
lea
adc
popw
mov
mov
pop
cmp
dec
mov
rcll
imull
shll
or
jbe
out
inc
aad
and
cmp
lret
cwtl
lods
sbb
arpl
mov
jo
mov
mulb
fisubl
das
pop
fcompl
mov
push
leave
in
call
lock
xor
push
jno
aam
inc
cwtl
sbb
or
fisubrs
dec
adc
push
enter
cmp
lcall
rcll
add
insl
pushf
stos
push
ror
mov
push
aad
xlat
pop
test
sbb
jg
mov
jecxz
or
clc
cmc
sub
adc
mov
sub
and
or
adcb
bound
mov
push
cmp
mov
out
data16
negb
xchg
fidivrl
xor
add
movsl
imul
inc
mov
dec
cmpsl
dec
lods
addr16
jmp
iret
sbb
cmc
push
or
lock
mov
push
imul
mov
sbb
arpl
pop
add
das
cld
test
fcomps
lods
mov
push
jb
push
fldcw
pop
icebp
ss
pop
lods
je
aas
cmp
xchg
mov
adc
mov
lock
xor
cmc
push
pop
scas
jns
out
cmp
movsb
mov
lahf
loop
lcall
ret
sbb
lcall
push
cmc
dec
push
imul
cmpl
stos
or
clc
cmp
adc
insl
incl
loopne
int
push
sub
rclb
and
xchg
shrb
fisubl
sub
out
mov
arpl
into
xor
xor
push
lret
in
dec
fdivs
imul
mov
js
aas
mov
cli
test
jle
scas
call
clc
jle
pop
iret
pushf
mov
icebp
cmp
pop
mov
orb
add
jns
dec
dec
iret
jnp
mov
faddl
and
rolb
fildl
ret
inc
cwtl
out
fmul
fs
std
lock
add
push
int
scas
or
inc
insl
lods
shlb
fstpl
jbe
mov
mov
roll
ret
insl
cltd
popa
sub
xchg
and
cwtl
xchg
into
pop
jmp
push
dec
scas
mov
arpl
sub
pop
xor
ds
adc
add
ficoml
mov
stos
add
cs
lds
outsb
movsl
pop
repnz
aas
insb
in
sbb
inc
xchg
mov
insl
negb
inc
stc
in
push
mov
ljmp
repz
fucomp
xchg
pop
adc
in
test
ja
push
jns
adc
in
xorl
inc
movsl
out
icebp
into
gs
add
cmp
cmpsb
or
shll
lods
sbb
icebp
into
aam
mov
cmp
jne
cwtl
sbb
jmp
insl
rcrb
dec
cwtl
cmp
mov
jne
iret
push
cmp
pop
jbe
je
sti
xchg
mov
shlb
fcompl
into
in
mov
pop
push
jl
mulb
and
stos
pop
out
jg
mov
leave
xor
lds
fcmovbe
sub
jg
inc
cmp
lret
mov
fdivs
mov
dec
int3
dec
es
pop
or
and
das
cwtl
je
cmp
rcrb
and
or
sub
dec
fdivp
xor
fmuls
add
push
out
mov
inc
mov
push
push
lret
cmpsl
and
jg
dec
int3
mov
mov
inc
push
inc
aas
daa
insl
aam
out
xor
mov
inc
pop
and
mov
mov
and
std
lcall
ret
pop
mov
popa
xlat
push
mov
arpl
or
push
loopne
mov
std
loope
sub
in
les
mov
push
subb
dec
iret
dec
mov
out
aas
jmp
and
xor
mov
add
cmpsb
mov
cs
psrld
mov
pop
in
ds
lret
and
rcr
add
jge
jg
daa
icebp
sti
popa
and
mov
out
nop
jo
cli
push
mov
sbb
int
jae
into
repnz
iret
fsincos
inc
jnp
mov
xchg
jns
ret
stos
out
out
es
xchg
notb
stos
inc
in
mov
icebp
mov
icebp
xor
ficoms
neg
pop
icebp
lods
loop
xor
mov
push
in
sub
push
adc
and
sahf
and
cmp
push
mov
jb
sub
mov
push
lcall
test
and
in
xchg
test
hlt
xor
mov
dec
cwtl
pushf
or
cwtl
ror
pop
push
add
rol
xchg
data16
imul
bound
out
repz
xchg
int3
js
xor
jo
std
popf
stc
ret
mov
ljmp
xchg
mov
xchg
repnz
dec
push
xor
shlb
mov
add
mov
jecxz
shll
call
out
les
movsl
jbe
dec
push
and
movsb
int
hlt
in
test
jecxz
mov
or
sbb
sub
je
out
or
ret
sub
fidivrs
leave
std
aad
cmpsb
sarl
xchg
mov
mov
cmp
notl
iret
repz
cmp
adc
ret
mov
mov
push
adc
pop
jg
in
stos
test
pop
push
stos
es
sarb
cmp
adc
mov
push
nop
push
mov
fists
mov
mov
cs
jmp
xlat
mov
lds
shrl
lahf
pop
pop
imul
stos
jno
cltd
mov
sbb
stc
and
cld
aad
and
push
cltd
scas
rolb
scas
sub
fucomp
int3
and
add
push
out
mov
mov
mov
cmpsb
fwait
dec
in
loope
mov
jbe
mov
pop
imul
add
scas
mov
xchg
push
add
icebp
fcmovbe
mov
push
mov
fnsave
pop
push
pop
and
lock
inc
pop
ret
clc
push
icebp
outsl
cmp
movb
out
outsb
ror
sub
xor
jo
mov
mov
pop
jp
aam
cmp
dec
cmp
sbb
mull
in
xchg
inc
int3
ret
daa
or
cmpsl
push
adc
jno
mov
push
lret
cmp
add
ds
adc
aam
or
xchg
repz
fs
sbb
xchg
out
jbe
push
adc
out
adc
push
sti
scas
fidivrl
rcrl
sub
adc
cmc
daa
push
into
into
les
fldcw
push
or
jno
lret
gs
push
rcll
out
xchg
mov
push
mov
data16
sbb
mov
fsub
iret
stos
out
push
je
es
test
rolb
cmp
nop
test
adc
jle
repnz
cmc
cltd
push
data16
rorb
aas
and
lds
inc
xor
or
mov
and
jne
pop
test
fdivrs
out
mov
adcb
or
inc
popf
or
mov
push
jns
mov
mov
outsb
stos
daa
sub
push
add
in
sub
imul
mov
shrl
mov
inc
xchg
add
das
aas
lret
mov
adc
lds
xor
sub
xchg
shll
inc
push
sub
daa
inc
cltd
aas
jne
nop
cld
cmpsb
mov
cli
push
sub
sbb
pop
leave
dec
push
push
ja
ret
mov
pop
out
clc
pusha
dec
push
adc
pop
jae,pn
stos
leave
repz
sbb
sub
xlat
fidivrl
aad
fwait
or
adc
les
sbbl
rolb
cmpsl
fnsave
std
inc
xchg
pushf
cmp
cld
cmp
cmp
push
pop
cmp
or
adc
xbegin
pushl
pop
cli
lret
lahf
repz
xchg
pop
lret
jl
cli
insb
xlat
or
and
mov
ja
std
vcomiss
jno
popa
xchg
ret
push
aaa
mov
aad
lods
fdivrs
pop
imull
addps
dec
jmp
xor
dec
arpl
mov
lds
xchg
popf
or
push
cltd
enter
in
or
mov
push
rsm
fwait
lret
testl
mov
adc
out
push
jo
mov
addr16
mov
push
insl
add
aad
subl
xchg
xchg
and
scas
sbb
cmp
fwait
jne
mov
add
fldcw
loopne
xlat
loop
push
push
xchg
pop
insl
lods
mov
adc
les
inc
lods
out
inc
and
in
aas
cmp
imul
ds
and
ret
jns
out
dec
mov
jns
mov
inc
jo
xchg
xor
dec
sub
add
xchg
and
xchg
dec
aam
mov
sub
mov
jne
aam
pusha
cmpsb
cmp
fadd
xchg
push
lods
in
cld
in
popf
jns
roll
adc
popa
push
fisubrs
imul
add
mov
mov
push
mov
cmpsb
xchg
inc
repz
out
divl
jb
rcl
out
scas
and
lds
cltd
jno
jnp
mov
mov
jge
sbb
cvtps2pd
or
das
adc
fldl
push
aas
push
movsb
aaa
push
in
in
xchg
or
push
out
or
testl
cld
stc
ds
xchg
ss
xor
jnp
sbb
pop
or
or
push
int3
bnd
pop
test
popa
scas
lea
pop
push
push
outsl
push
mov
cmp
mov
test
les
sbb
push
pop
sbbl
xor
or
or
mov
movsb
test
mov
inc
mov
sarl
sub
mov
push
adc
sbb
sbb
ss
and
dec
mov
inc
cli
or
divl
push
popf
mov
mov
xchg
mov
std
fadds
fstps
dec
jae
mov
sbb
dec
inc
push
jnp
movsb
pop
mov
rclb
pop
cmp
mov
fs
mov
loop
xchg
and
popf
inc
push
inc
loopne
fs
or
stc
mov
daa
sub
ss
cld
dec
lret
imul
push
sbb
ret
movsl
and
in
dec
sbb
mov
jns
loop
lods
inc
sbb
sbb
lcall
out
dec
ss
lret
sarb
and
jo
loopne
pop
clc
xchg
mov
add
mov
cmp
cmp
loop
ficomps
and
pop
mov
retw
jne
cmp
sbb
test
sbb
xor
mov
xchg
ljmp
insb
sbb
dec
ret
inc
rcrl
cs
dec
and
out
loop
ret
inc
movsb
mov
nop
push
dec
movsl
js
sarb
mov
nop
xor
cwtd
push
pushl
dec
mov
fdivr
imul
sub
mov
pop
lahf
mov
or
ficoml
call
call
xor
sub
aas
and
cmp
mov
stc
outsb
das
fprem
in
xor
cmp
sub
push
ret
inc
push
jle
movsb
insl
ret
mov
xlat
inc
adc
ja
in
mov
or
stos
pop
push
shl
add
andb
push
pop
xchg
add
outsl
leave
fildll
testb
and
in
jl
movsb
aaa
sbb
loope
addr16
sbb
ret
loope
stos
lret
dec
pop
xor
and
pushf
dec
mov
loop
and
shrd
shll
push
js
loope
cli
adc
outsb
lods
pop
xor
into
mov
sbb
dec
dec
push
jle
pop
das
xor
jno
or
lock
xchg
adc
bound
and
jns
sub
xchg
inc
cwtl
xlat
in
lahf
inc
leave
and
cmpsb
ja
push
popaw
xor
out
add
scas
xor
mov
pop
xchg
cmp
push
inc
in
test
cmc
movsb
or
pushf
add
mov
xor
dec
or
insb
out
pusha
adc
sub
push
or
scas
dec
xchg
xchg
insb
push
jno
dec
inc
xchg
mov
andl
rcrb
aaa
test
js
adc
negl
sub
mov
popf
sbbb
pop
and
addr16
outsb
pushf
push
and
clc
adc
repnz
das
or
testb
test
add
ja
and
test
cmp
mov
dec
push
xor
or
dec
pop
pushf
jmp
inc
jmp
das
inc
test
pop
icebp
pop
imulb
cs
mov
and
loop
or
decl
shrl
mov
xchg
xchg
add
sbb
add
and
sub
sub
lret
or
adc
xor
sub
push
fs
jns
fs
stos
mov
and
pop
mov
adc
dec
pop
xchg
roll
and
addr16
repnz
insl
clc
cmp
push
repnz
cmp
or
inc
mov
mov
fdivrs
sbb
xchg
adc
sub
add
int3
inc
jmp
insl
push
sub
or
shrl
daa
setl
movsb
xor
aas
cmc
je
popf
mov
and
sarb
mov
imul
xchg
daa
mov
jmp
testb
xchg
scas
lock
sbb
js
xchg
hlt
fstp
cmp
adc
stos
sbb
cmp
mov
out
nop
addb
pop
enter
mov
cld
and
les
inc
cmpsb
push
dec
sbb
mov
sbb
xor
cmp
sbb
sti
cmpsl
pop
out
rcr
jnp
dec
dec
sub
sbb
dec
sub
pop
push
das
int
and
pop
push
cs
movsb
pushf
lcall
sti
out
mov
test
cmpsl
and
pop
xchg
sbb
mov
mov
pop
mov
fucomp
ja
mov
jb
and
pop
mov
jle
lret
sbb
sbbl
fnstsw
andl
test
dec
imul
push
outsb
push
hlt
push
lea
push
idivb
aam
cwtl
ret
and
push
xor
and
lods
aaa
out
sbb
mov
sub
sub
cmp
ret
jo
mov
xchg
cli
push
push
inc
xchg
or
push
dec
cltd
lods
rorb
popf
cmpsl
and
fcmovnb
cld
test
mov
jb
and
or
push
inc
mov
fwait
pop
in
push
jno
lcall
adc
add
popa
mov
inc
bnd
xchg
pop
pop
stos
dec
inc
test
out
iret
sti
jge
inc
inc
ucomiss
inc
ja
jb
lret
ljmp
scas
mov
mov
js
xor
clc
in
inc
cmp
push
dec
scas
std
mov
inc
mov
lock
sub
mov
jge
test
mov
jae
fdiv
ret
sbb
scas
jecxz
iret
int
mov
adc
js
gs
test
sti
aam
pop
mov
mov
cmpsl
dec
mov
dec
xlat
sbb
lods
mov
mov
jbe
jbe
push
ljmp
aad
jo
hlt
dec
leave
mov
faddl
sub
adc
adc
es
or
sub
icebp
or
inc
ljmp
dec
xchg
nop
adc
add
fmul
mov
cltd
adc
aaa
in
sbb
lods
rcr
mov
ret
test
mov
loope
or
mov
push
test
or
xor
push
out
repz
push
jg
push
xlat
dec
lods
mov
inc
rcl
repz
loop
sbb
pop
xlat
xor
es
pop
and
in
push
mov
jb
push
push
cmp
dec
arpl
fldl
int
sbb
dec
sti
or
mov
loop
sbb
addr16
or
test
push
loopne
fwait
mov
adc
repz
call
xor
fidivrl
cmpb
pop
pop
out
mov
aas
lock
push
adc
mov
icebp
xchg
and
mov
jmp
pusha
and
cmc
xchg
in
mov
push
cwtl
les
push
je
test
scas
mov
pop
add
out
pop
out
daa
jo
mov
icebp
xchg
cmc
sti
lods
inc
cmc
lds
cmp
rcll
jecxz
test
ds
out
sbb
mov
pop
sbb
xor
loope
out
nop
test
inc
lds
inc
sub
icebp
sbb
jp
jmp
int
mov
cmp
jle
pusha
lock
imul
xchg
add
int
dec
xor
and
sub
mov
icebp
pop
xor
dec
adc
jg
sbb
mov
jge
int
inc
mov
fsubrs
leave
mov
fisubrs
jae
push
cmp
push
out
xor
mov
fwait
rclb
add
jg
cmpb
incl
push
dec
and
bnd
push
cmp
aad
jle
test
push
jbe
mov
mov
punpckhdq
fcmovne
inc
iret
outsl
nop
in
and
inc
or
xlat
push
fs
cli
push
iret
push
test
mov
insl
imul
adc
mov
lret
cmp
gs
xor
xor
adc
inc
mov
jge
jns
cmp
and
test
out
jo
aas
fwait
rol
sub
std
cld
andb
jge
mov
test
push
mov
mov
fwait
stos
jae
js
negl
xchg
aas
mov
adc
or
pop
mov
xchg
rorl
or
test
ret
arpl
test
dec
stc
or
cmc
call
aas
orb
mov
jecxz
inc
ja
push
adcl
jg
imulb
lods
fsubrs
or
sbb
mov
push
in
push
adc
das
int
sahf
out
out
pop
xchg
push
mov
pop
es
mov
mov
adc
or
popa
adc
out
mov
push
enter
jb
bnd
bound
inc
in
push
adc
int3
aad
fs
loope
gs
add
inc
inc
adc
into
pushf
cwtl
data16
inc
insb
add
mov
inc
andl
mov
outsw
mov
inc
into
dec
sub
add
mov
xor
push
jno
lock
mov
mov
dec
test
and
adc
pop
adc
int
and
xor
adc
sub
jg
dec
call
jg
mov
pop
scas
scas
mov
testl
pop
sbb
cs
adc
pop
sub
cmp
addr16
dec
fcmovb
call
punpckldq
pop
test
xlat
xchg
sub
xchg
and
dec
cmpb
pop
push
ss
push
vpmaxub
jg
mov
lret
sub
imul
push
stos
add
push
pop
lods
icebp
movsb
shrl
dec
adc
out
mov
xor
sbb
adc
jl
bound
adc
push
sti
jno
lods
andb
jge
mov
mov
or
insb
adc
fnstcw
int
push
fwait
and
and
ds
inc
push
mov
mov
sub
pop
in
popa
mov
mov
nop
mov
cwtl
cs
and
dec
mov
push
xchg
and
pop
fldl
div
pop
sbb
movsl
jo
iret
add
rcrb
popf
into
lock
pop
xchg
xorl
insb
in
mov
fcoms
sub
in
sbb
test
clts
in
sbb
pop
sbb
jno
repnz
xorl
xor
sub
mov
cmpsl
call
mov
sbb
add
mov
stos
inc
xchg
test
cmpsb
jg
ret
in
xlat
dec
lods
cld
aam
jb
push
arpl
popa
stos
gs
leave
andl
in
ja
stc
dec
jge
push
mov
xlat
nop
xor
popf
clc
xor
cli
sub
mov
or
loope
aam
mov
pop
ffree
jmp
jle
sub
dec
push
cmp
inc
push
fnstenv
jl
mov
cwtl
cltd
ret
rorb
jmp
or
mov
int
cltd
shll
sub
jns
push
dec
mov
arpl
fldenv
xor
incb
nop
popf
cltd
mov
xchg
push
cld
pandn
mov
adc
data16
mov
xchg
fldt
fstpl
inc
arpl
popf
mov
pop
gs
ret
iret
sub
ret
xlat
fsubl
push
cltd
mov
stos
scas
popf
divb
out
out
xchg
leave
mov
xchg
cmp
cmp
aam
ds
push
call
repz
sub
ficompl
sarl
inc
dec
add
add
lods
pop
mov
leave
nop
jl
lret
xlat
xorl
pop
repnz
push
lea
enter
loope
sahf
xor
jo
imul
xchg
xchg
imul
xchg
pop
or
sti
aaa
jecxz
test
bswap
and
mov
jle
push
fisubrl
incb
movsb
adc
andl
cmp
test
mov
xchg
cmp
out
out
pop
push
sub
fwait
shr
test
arpl
imul
or
push
pop
sti
ja
mov
push
leave
add
iret
shlb
icebp
out
sbb
stc
bound
je
mov
pop
push
das
sub
sub
sub
dec
test
or
mov
ss
out
loopne
inc
adc
push
aad
pop
or
mov
scas
add
clc
push
movsl
dec
repz
loop
xor
push
inc
je
add
fadd
call
int
inc
add
xchg
adc
insl
xchg
out
dec
adc
jp
pop
mov
data16
lret
js
icebp
xchg
fs
jne
je
loope
sbb
mov
xchg
mov
ja
mov
xor
loop
sub
test
or
mov
lea
out
rclb
in
pop
movsl
test
jae
push
push
std
repz
sub
aam
or
andl
inc
or
mov
enter
rcrb
rorb
imull
aam
repnz
andb
push
inc
jne
out
and
cmp
mov
jnp
stos
add
std
jmp
sbb
xor
pop
test
fsub
jecxz
cmc
adc
xor
push
imul
fstpt
cmp
mov
and
dec
jmp
dec
and
std
rorb
test
cmp
add
sbb
sub
dec
jae
adc
int
xchg
or
xor
inc
cld
shlb
mov
scas
fwait
cmp
insb
jbe
pusha
stos
loop
das
jmp
mov
pop
add
xor
bound
js
jbe
sarb
or
jo
std
pop
sbb
jo
and
ficoms
sub
fmuls
enter
inc
inc
pop
sbb
dec
xlat
js
xor
stc
popa
mov
sub
jecxz
dec
movsl
mov
insb
icebp
adc
push
xchg
sub
mov
push
rorl
or
pop
push
xchg
xchg
mov
cmp
in
data16
sub
add
jae
push
mov
pop
cmp
dec
push
push
pop
sub
inc
push
hlt
nop
push
sub
or
js
sub
loopne
push
shl
aad
fsubl
lahf
test
inc
test
lahf
mov
mov
rcr
fldcw
sub
ficoml
pop
xorl
popf
add
imul
movsl
notl
inc
inc
aad
push
dec
xchg
inc
lods
ja
xchg
jb
icebp
outsl
cwtl
into
inc
adc
es
dec
jae
js
sbb
mov
or
outsb
loope
xchg
sbb
rolb
push
and
jl
stos
jmp
push
test
xor
and
pop
sbb
cmp
mov
xchg
daa
insl
cmp
cmp
adc
rolb
cltd
test
mov
mov
push
jg
imul
orb
mov
and
adcl
shrl
jne
push
push
pop
jle
pop
mov
jb
pop
push
mov
add
jnp
aas
jbe
rcrl
and
jo
int
and
in
push
leave
out
popa
imul
sbb
mov
mov
dec
in
sbb
outsb
adc
test
repnz
adc
enter
cmp
in
imul
fucom
add
push
into
aam
sub
push
pop
aaa
out
pushf
enter
test
sbb
jnp
fcmovne
sub
dec
mov
pop
divl
iretw
inc
into
sbb
xchg
inc
push
mov
dec
or
mov
or
mov
dec
pop
scas
jmp
imul
inc
addr16
jle
pop
or
xchg
and
or
stos
add
mulb
dec
neg
mov
out
add
push
out
sbb
aaa
and
pop
mov
jle
mov
ds
daa
dec
jecxz
jmp
mov
stc
mov
cmp
lea
mov
in
dec
push
push
outsl
and
dec
jne
data16
mov
pop
mov
mov
sub
xor
out
fsubrs
insl
mov
les
xor
mov
mov
inc
cli
pop
xor
push
aad
mov
scas
mov
pop
cmp
in
cmpsl
jne
adc
shlb
stos
pop
push
das
adc
mov
aas
inc
cmp
mov
add
push
orl
popa
fdivrs
hlt
cmc
insb
arpl
in
arpl
xlat
adc
insl
jle
jb
outsb
dec
loop
pusha
cmp
xor
adc
pop
pop
out
lods
insl
push
inc
cmc
sahf
jg
arpl
mov
sbb
or
xor
std
iret
jbe
mov
or
imul
sub
jbe
pop
xor
push
cmp
icebp
test
bound
gs
shl
cli
mov
adcl
and
std
xor
adc
outsb
into
outsb
adc
adc
mov
pop
gs
lahf
mov
pop
fcmovb
pop
ret
in
pop
xor
aam
pop
pop
jnp
sbb
adc
jl
mov
out
arpl
sbb
nop
loope
divl
loopne
push
loopne
adc
lahf
bound
ljmp
cmp
out
xchg
xchg
pop
dec
subb
insl
cmpb
pop
fisttpl
movsl
jmp
mov
adc
stos
inc
js
dec
aas
xchg
adcb
sbb
mov
je
decb
mov
outsb
in
pop
inc
pop
adc
out
mov
jns
sbb
mov
sbb
adc
jns
xchg
pop
cmc
je
add
inc
enter
push
jl
add
mov
sbb
out
dec
or
lahf
pop
jns
mov
shll
fcoml
pusha
adc
xor
test
in
cmp
cmp
mov
xchg
mov
dec
mov
std
dec
pop
jae
jmp
icebp
jg
push
sbb
sbb
in
or
in
cld
shll
cmp
lret
push
dec
inc
mov
xlat
push
aaa
sub
xchg
rorl
pop
mov
or
jmp
sbb
repz
pushl
inc
sbb
cs
lret
pop
mov
cmp
shll
lret
stos
sbb
hlt
mov
bound
pop
jmp
daa
lods
lret
xchg
sti
shl
repnz
ficompl
ficompl
xchg
xorb
and
cmp
push
cld
out
out
fsubrl
cmp
inc
sbb
les
in
ljmp
push
leave
repz
or
xchg
sbb
ficoms
inc
lcall
and
aad
rorb
fs
subb
jmp
repz
out
pushf
inc
jnp
cmp
cmp
cltd
fidivrl
in
icebp
lods
insl
shlb
loopne
cmp
cltd
mov
dec
loope
pusha
fidivrs
cmp
andl
xchg
repnz
cs
sub
sub
mov
das
popa
jne
xchg
mov
out
cli
lret
cld
push
out
push
mov
lea
dec
loope
mov
int
mov
mov
xor
adc
lret
cmp
mov
es
bnd
dec
out
jnp,pt
aas
fsts
pop
adc
loope
xor
insb
mov
pop
int
iret
shlb
fstpt
fildl
adc
xlat
shrb
push
sub
mov
jae
fs
out
xor
ret
or
dec
stos
cmpb
sub
fisubrs
inc
jp
xchg
mov
sbb
jne
push
or
push
jno
mov
sbb
repz
pop
jl
inc
jnp
loop
mov
mov
je
mov
test
addl
or
rorl
test
cmp
pusha
scas
xchg
cmpsb
xchg
pop
cltd
dec
adcl
jae
sti
sbb
or
pop
shlb
aas
loop
mov
aam
jbe
xor
mov
insl
add
mov
adc
cmp
xchg
jnp
jp
sti
imull
loopne
stos
jle
aaa
and
fsubrp
hlt
xchg
mov
out
loope
out
and
push
shrl
movsl
mov
and
sub
inc
mov
ret
sub
mov
jbe
pop
sub
jp
pop
ds
bound
inc
sub
cmc
jl
mov
lahf
pop
lea
adc
imul
es
cmc
push
xor
js
mov
push
push
popf
sahf
int3
leave
lea
adc
ds
cmp
loopne
sub
mov
jmp
aad
mov
imul
insl
dec
dec
sarl
sahf
pop
xor
lea
loop
jle
inc
ror
inc
pop
sbb
mov
mov
or
in
fnstcw
mov
or
or
sub
push
fisttpl
mov
inc
cmp
add
xor
sbb
in
adc
or
cmp
hlt
ljmp
js
pop
imul
or
jmp
insb
xlat
xchg
inc
and
lret
and
and
cwtl
cmp
xor
push
loope
cld
int3
stc
mov
sub
lds
clc
pop
jo
cmp
sti
jbe
rcll
mov
mov
hlt
pushf
xchg
xchg
imul
fistpll
pop
pop
jle
pop
cli
mov
roll
cmp
movsb
loop
push
fwait
sub
jge
dec
sub
cld
int3
and
stos
pop
je
lods
jl
pushf
xchg
add
xor
jno
dec
daa
adc
jecxz
xor
pop
data16
xor
cmpsl
push
test
bound
inc
cmp
jbe
sub
ficoms
into
add
cmp
cwtl
mov
ja
sub
mov
mov
inc
jl
negb
jecxz
xchg
xor
movsb
xchg
mov
inc
adc
inc
xchg
arpl
sub
mov
mov
and
sbb
push
adc
scas
aas
xchg
movsl
test
xchg
cmp
imul
inc
pop
add
cmpsb
push
dec
add
or
rolb
imul
andb
frstor
sub
es
cmp
xchg
mov
insl
test
xlat
fdivrl
arpl
or
sbb
pop
add
mov
push
jae
mov
mov
fwait
inc
add
xor
stos
or
adcl
sti
mov
lods
mov
mov
subl
out
add
pushf
call
jbe
test
arpl
cmp
out
dec
mov
xchg
pop
fimuls
hlt
push
rcll
xchg
int
mov
push
cmp
test
dec
lea
popf
stc
gs
pop
out
cmp
dec
mov
leave
aad
cmp
mov
enter
adc
test
jnp
shll
out
and
and
in
mov
arpl
jge
out
jae
fdiv
pusha
or
mov
mov
fcmove
std
movsl
cwtl
adc
ret
fwait
popf
or
outsb
std
pop
adc
cmpsb
cmpsl
mov
dec
int
lret
loope
scas
daa
call
pop
lret
movsl
jne
movsl
cmp
xor
imul
mov
call
push
stos
jle
xor
mov
push
xchg
push
push
in
shll
jne
jo
test
xchg
out
jae
mov
add
jnp
inc
std
sbb
jne
or
idivl
ret
sbb
cmc
std
mov
xor
stos
add
pop
or
or
jb
iret
dec
sar
push
mov
pop
loope
adc
addb
pushf
add
jmp
lret
mov
fwait
ret
cli
inc
out
mov
sub
or
insl
adc
imul
nop
or
mov
stc
sahf
rclb
les
arpl
xorb
cmpsl
push
pop
iret
mov
mov
or
aas
popf
int3
cmpsl
btsl
adc
sub
mov
jmp
pop
aam
jmp
mov
lret
pop
sub
xlat
inc
sbb
fsub
xor
adc
icebp
or
adc
ss
pop
mov
rclb
icebp
pop
xlat
pop
clc
lret
loop
xchg
cmpsl
test
gs
xor
lcall
adc
jb
jge
movsl
rcrb
xchg
xor
jne
jecxz
mov
test
jmp
jae
shlb
rclb
mov
out
in
jo
or
popf
jnp
rclb
inc
stos
ret
ss
bound
fidivrl
lods
cmpsl
in
cwtl
mov
mov
cmp
fs
xchg
shrb
push
out
cmc
ja
js
dec
enter
stos
stos
mov
inc
pop
xor
xor
push
insl
or
sahf
hlt
add
add
fildl
jecxz
adc
sti
xor
cmp
shrl
jns
mov
rol
jb
push
aam
call
imul
push
or
into
data16
mov
lcall
or
pop
xchg
andl
add
jge
shlb
mov
int3
jge
call
dec
or
sbb
scas
out
mov
and
out
test
shlb
mov
jmp
inc
mov
xor
popa
mov
pop
push
movsl
mov
stos
add
cmp
inc
fistl
test
cwtl
jecxz
jle
jecxz
cmp
cmc
mov
mov
pop
push
lret
pop
pusha
shl
mov
and
mov
movsb
outsl
and
ret
stos
jae
stc
mov
sub
in
inc
lods
pop
aaa
push
xchg
out
push
addr16
sbb
jg
mov
or
adc
mov
std
fs
jo
push
mov
into
cmpsl
mov
aam
mov
jb
dec
enter
pop
jae
push
add
xlat
and
pop
sbb
xchg
mov
mov
pop
test
add
xor
rcrl
cltd
jge
insl
mov
sub
xor
sub
mov
dec
inc
inc
addr16
jge
loop
aas
roll
cwtl
cwtl
push
xchg
adc
adc
cmp
stc
stc
push
movsl
xor
xchg
vunpckhpd
push
cmp
mull
xor
xchg
sbb
movsl
pop
loope
pushf
mov
fidivs
lock
std
fnstcw
pop
dec
rorl
std
mov
xor
jno
mov
fs
or
push
cs
in
xchg
fs
out
push
mov
pop
test
test
jns
add
cmp
into
ss
arpl
leave
test
iret
int3
lahf
push
and
inc
aaa
fs
ds
adc
and
and
sahf
push
dec
loop
jmp
xchg
out
and
mov
sbb
cwtl
add
pop
dec
jp
loop
xchg
jge
mov
addr16
stos
mov
sahf
and
push
loopne
mov
pop
inc
pop
inc
push
lret
dec
adc
out
daa
xchg
mov
xchg
sti
in
dec
flds
aam
pop
and
mov
int3
pop
xchg
sub
mov
xchg
insl
pop
pop
and
scas
inc
shr
jp
into
cld
lret
fmull
out
push
dec
pusha
outsb
pop
mov
add
data16
dec
jl
cmc
xor
aas
sbb
fdivrl
xor
repnz
repnz
and
xchg
mov
push
lds
sbb
add
iret
jge
add
cltd
out
jmp
xor
test
loope
fcom
loopne
jne
mov
hlt
popa
mov
inc
push
push
paddusb
iret
mov
out
push
aaa
adc
jmp
inc
flds
scas
push
insb
mov
les
dec
es
aas
test
imul
je
cli
test
jae
inc
dec
xor
clc
inc
lods
fsts
sub
jecxz
or
adcb
mov
test
arpl
inc
stos
in
inc
push
cmp
js
sbb
mov
gs
iret
mov
push
or
sbb
push
scas
add
aam
mov
cmp
mov
out
push
adc
jno
out
jmp
jnp
loope
pop
mov
push
cli
psubsb
push
fdivrs
mov
daa
notb
and
mull
inc
or
cmp
dec
cmc
jl
jo
and
xor
push
lock
rcrb
push
arpl
push
out
ret
lods
jge
and
enter
addl
sahf
aad
jmp
push
dec
pinsrw
adc
sub
shrb
jle
inc
or
xor
lds
cmp
push
mov
xlat
mov
jae
in
pop
sub
in
and
stos
xchg
ss
inc
mov
mov
insb
decb
rcrl
xlat
mov
stos
in
pop
and
jle
mov
pop
xor
ja
int3
or
mov
mov
and
stos
pushl
cwtl
mov
sub
lock
adc
ss
ljmp
push
shlb
pop
push
fidivrs
rcll
xlat
push
popf
repnz
lds
sub
mov
addl
mov
push
push
mov
pop
jle
imul
fs
fmulp
lds
addb
jecxz
adc
rorl
fdivp
mov
hlt
or
inc
push
pop
test
mov
cmp
xor
push
ds
inc
js
lret
test
push
pushf
push
jbe
sub
lock
in
inc
call
mov
push
xchg
inc
pop
sbb
mov
fcmovb
push
dec
fstl
adc
in
gs
loop
cmp
pop
pop
pop
iret
pop
pop
mov
add
int
data16
xchg
movsb
shlb
cmp
ja
clc
mov
xchg
dec
sub
imulb
push
icebp
push
lods
popf
and
mov
add
xor
sbb
inc
int3
out
xchg
cmp
sti
aam
push
sub
sbb
add
cmp
popa
and
mov
mov
sbb
pop
clc
iret
daa
pop
or
jl
adc
cmp
mov
push
dec
mov
lret
cmp
jmp
xchg
pop
mov
add
add
mov
push
sbb
sti
or
into
xchg
rolb
mov
cltd
movsl
lods
dec
repnz
nop
je
mov
std
fcoms
test
fdivr
aaa
xchg
sub
push
add
xchg
loop
adc
mov
and
test
rcrl
out
lea
adc
jecxz
insb
adc
xor
stos
mov
or
xchg
mov
lcall
aad
or
mov
jg
mov
loopne
nop
ror
jecxz
dec
jle
loopne
xchg
fcom
sub
call
das
lock
sti
mov
pop
mov
rcl
test
sub
push
clc
pop
js
cld
mov
cmp
ljmp
mov
aad
dec
fcomp
cltd
pop
out
xchg
pop
in
xor
sbb
dec
push
jmp
mov
or
mov
popl
clc
adc
into
mov
and
sbb
js
add
mov
dec
mov
inc
ficomps
cs
dec
jl
dec
out
es
push
mov
mov
call
xlat
push
mov
pusha
roll
xchg
in
push
stc
adc
or
loope
or
inc
out
sub
clc
push
outsb
jmp
fldl
sub
scas
push
rcrl
lock
mov
cmp
mov
mov
push
scas
pusha
mov
cmp
out
push
test
cmp
sahf
push
decb
and
mov
ja
xlat
cmp
inc
jl
xchg
ss
insl
dec
fmulp
cwtl
in
xchg
jp
std
lcall
sub
popf
fwait
out
sub
ja
sbb
mov
or
push
fadds
les
cpuid
adc
cmp
sbb
or
in
cmpsb
out
icebp
pop
jmp
leave
aad
sub
cld
test
sub
xor
or
jno
je
imul
stc
imul
pop
pop
aam
ljmp
js
out
std
push
adcb
out
adc
out
testl
mov
xchg
and
jg
mov
mov
mov
movsl
ret
adc
scas
jl
movsl
cmc
js
adc
enter
stos
cwtl
or
lods
push
pop
iret
mov
stos
out
fldl
push
cli
cmpsb
loopew
pop
lods
aam
gs
jb
test
fcoml
mov
push
xor
mov
sub
sbb
mov
pop
pop
inc
in
inc
aam
sub
add
popa
clc
sub
ds
aas
jg
adc
push
cli
shlb
dec
arpl
push
pop
insb
add
shll
dec
push
int3
stos
jmp
mov
sbbb
pop
xchg
fwait
cmc
ficoml
aas
sub
nop
aad
aaa
push
sbb
jbe
fcomps
adc
popa
jmp
in
mov
jp
cmp
decl
pop
aaa
jl
ss
addr16
jl
dec
mov
or
sub
hlt
sbb
loopne
sbb
mov
sub
loopne
fidivrs
imul
out
cmc
divl
ljmp
pushf
ds
cmp
and
shll
sub
out
jns
sbb
test
xchg
fcomps
push
call
outsl
rcrl
scas
pusha
jb
jae
fsubr
sbb
mov
or
sti
fistl
xchg
into
or
pop
sub
lea
shll
xor
je
outsl
roll
xchg
sub
ja
inc
push
adc
pop
ret
and
jl
mov
cli
pusha
shrb
call
and
stos
or
mov
aad
je
cltd
adc
cwtl
cmc
ja
inc
sbb
mov
push
xchg
or
outsl
and
into
mov
out
leave
mov
pop
inc
icebp
call
push
mov
cli
push
jle
cmp
sub
test
leave
mov
lods
fsubl
mov
jecxz
add
cs
add
mov
jmp
mov
sbb
xchg
das
jno
rorl
repnz
inc
je
jbe
sbb
and
jne
add
fwait
in
jp
push
out
mov
loopne
sub
imul
stc
dec
sbb
out
pushf
int
fimuls
push
outsl
ds
xlat
pushf
lea
fwait
ret
lahf
cmp
xchg
or
scas
es
aad
nop
mov
dec
mov
filds
push
clc
mov
out
cmp
mov
dec
es
jecxz
sub
dec
inc
mov
cmc
lea
test
shrl
sbb
inc
mov
into
stos
and
jle
cmp
je
adc
stc
mov
test
sbb
mov
sub
bound
scas
or
fldt
testl
and
fisttps
jns,pt
adc
daa
or
sahf
cld
in
mov
addr16
stc
imulb
imul
jbe
mov
imul
add
pop
aad
mov
mov
and
jmp
fscale
shlb
push
call
and
pop
mov
mov
xor
push
in
jg
and
push
mov
int3
addr16
mov
je
add
mov
xor
dec
rol
mov
stos
aas
mov
mov
push
jge
mov
jnp
and
test
or
pushf
sub
movsl
aad
push
mov
dec
adc
movsb
dec
add
cmp
lods
cli
sub
lods
xrelease
insl
or
inc
cmpsb
data16
sar
jo
xchg
nop
pop
jb
xchg
imul
push
data16
aad
sti
dec
cmp
rcll
or
daa
std
lret
rorb
iret
leave
mov
xchg
add
sahf
fiadds
test
cmp
and
fwait
xor
jno
pushf
xor
mov
pop
imul
jge
ficoml
cmpsl
dec
sbb
xchg
mov
sti
mov
inc
pop
jp
movb
cltd
repz
xchg
add
jne
jnp
or
xorb
sbb
cmp
inc
in
pop
mov
mov
adcb
adc
call
es
mov
stos
cwtl
mov
mov
sub
call
ja
inc
sbb
xchg
scas
sbb
adc
push
mov
scas
sbb
push
mov
out
lret
hlt
jno
push
fldenv
mov
sar
sbb
popa
roll
or
lcall
push
cli
inc
cmpsl
xchg
push
mov
aam
rol
push
lcall
in
insb
adc
lods
adc
cmp
in
addr16
icebp
dec
lods
cmp
call
pop
mov
insb
xlat
xor
imul
test
mov
and
jns
fildll
xchg
adc
inc
cmp
cmp
out
aad
jmp
dec
sbb
inc
dec
rcrl
xor
loopne
push
ds
xchg
xor
mov
je
mov
xor
loop
mov
cmp
inc
std
sub
fnstenv
push
rclb
sahf
mov
adc
aam
mov
addr16
push
test
popf
das
pop
incl
mov
lods
dec
xor
cld
xchg
and
mov
push
cld
push
ret
test
and
dec
orl
insl
sub
and
pusha
xor
pop
sub
or
jp
out
movsl
sbb
sbb
insb
xor
mov
mov
push
pop
mov
cmpsb
pop
push
pop
push
mov
pop
inc
pop
mov
imul
mov
xlat
repnz
jg
xchg
idivl
mov
mov
push
push
loop
adc
mov
test
jb
mov
inc
in
jg
jl
mov
cli
ficoms
test
inc
push
xor
and
testb
filds
icebp
push
mov
mov
sub
and
mov
push
cwtl
push
jmp
mov
shlb
sub
fists
lret
pop
test
mov
loope
dec
lds
faddl
rolb
dec
popa
or
sbb
jbe
or
ja
xor
mov
frstor
clc
pop
xchg
mov
pop
sub
divb
cmc
lret
xchg
lods
jns
sub
mov
pop
ret
popf
cmp
inc
loopne
mov
out
movsl
mov
shr
cmp
das
subl
mov
int3
xor
xchg
xchg
rorb
addr16
outsl
pop
popf
aam
je
push
adc
movsl
xchg
mov
adc
xor
pop
cltd
adc
mov
icebp
ljmp
stos
adc
mov
jnp
insl
popf
inc
adcb
cmp
orl
scas
mov
mov
mov
mov
stc
xor
std
or
push
scas
and
adc
lcall
lahf
inc
enter
or
xchg
push
cltd
jle
lea
pop
cmp
es
adc
es
bound
mov
in
push
jne
in
mov
fwait
push
dec
loop
jle
mov
add
rclb
imul
in
out
or
setbe
inc
out
es
lcall
leave
lcall
and
xchg
jg
shll
in
inc
imul
divb
xor
ss
sbb
not
add
inc
shlb
jb
out
in
outsl
lea
outsb
sbb
push
inc
inc
xor
xor
sbb
xor
sbb
div
cwtl
push
rcll
bound
add
adc
ja
fimull
orl
and
nop
jle
inc
jbe
aaa
push
cmp
out
dec
push
mov
ja
cmpsl
pop
repz
xchg
pop
cmp
push
xchg
daa
mov
in
ror
dec
in
mov
mov
arpl
jns
dec
push
pop
addr16
ljmp
insb
mov
inc
leave
sub
add
inc
push
inc
aad
dec
mov
icebp
push
pop
pop
sub
stos
popa
push
mov
jmp
outsl
fwait
or
in
fisubrl
add
inc
data16
mov
jnp
mov
pop
stc
scas
pop
adc
pop
mov
add
or
rcr
jmp
pop
pushw
mov
or
dec
sahf
xorb
xor
inc
scas
divl
and
nop
sub
lea
hlt
jp
sub
pop
out
jns
fs
pop
fbld
jb
push
mov
icebp
loope
xorl
push
xchg
inc
fs
pop
sbb
shrl
or
imul
add
pop
sti
dec
xchg
out
inc
mov
hlt
js
or
pop
das
std
adc
xchg
push
test
lods
and
adc
mov
movsl
xor
sarb
push
pop
test
or
repz
in
cmp
ret
mov
into
push
mov
jmp
and
shl
jb
pop
and
stc
test
push
mov
test
dec
data16
das
nop
jp
mov
clc
and
cmp
icebp
pop
outsl
scas
inc
in
das
sti
je
das
xor
inc
outsb
xor
add
pop
lret
lea
pop
push
int3
mov
cs
test
mov
mov
loop
mov
in
mov
or
repz
mov
test
or
iret
lea
inc
cmpsl
lret
imul
out
and
and
dec
inc
pushf
mov
pop
cs
sahf
div
fcoms
xchg
xor
adc
mov
adc
or
jmp
ds
pop
xchg
mov
xchg
stos
xchg
sub
sub
or
inc
xor
and
xchg
and
dec
andb
or
addr16
mov
jae
cmp
mov
in
fmull
adc
lods
lret
test
push
loope
pop
lds
cmp
mov
mov
das
pop
or
dec
out
in
push
roll
mov
dec
mov
jg
adc
dec
sbb
pushf
pop
int3
xchg
xchg
arpl
testb
cwtl
adc
lret
ss
out
aas
inc
imull
cmc
and
repz
nop
cli
xchg
add
mov
pop
or
les
movsb
mov
arpl
jbe
pop
adc
in
fwait
jne
addb
stc
shrl
mov
pop
pop
or
outsb
mov
or
aas
shll
adc
dec
and
sbb
mov
je
jo
sti
das
stos
movsb
inc
shrb
nop
mov
sbb
pop
mov
divl
adc
dec
mov
xlat
js
mov
sub
push
adc
xchg
fsubr
pushf
ficoms
push
adc
pusha
and
mov
or
xchg
shll
jne
pop
sar
xor
mov
jbe
xchg
das
sub
cmp
mov
pop
ret
inc
idiv
cld
mov
inc
xor
pop
add
cmc
enter
mov
jnp
sar
lret
push
hlt
push
xchg
popa
sub
xor
dec
lods
je
xor
notb
fnstenv
scas
bound
push
stos
arpl
sahf
inc
cld
push
inc
mov
loopne
fisttpll
sub
xor
jo
xor
test
jmp
icebp
pop
mov
sbb
in
cmpb
mov
mov
or
xchg
jp
mov
mov
rorb
jne
dec
inc
leave
je
je
xorb
sbb
lea
xorb
fsubs
or
movsb
fs
inc
mov
jp
das
jle
les
mov
mov
jo
dec
out
cmp
repz
cltd
mov
adc
les
out
cwtl
mov
sbb
cwtl
andl
int
inc
push
sub
adc
shlb
test
xor
mov
mov
lret
ret
push
aaa
mov
sub
xor
sub
pop
fwait
shl
ret
aam
xor
adc
add
ja
inc
add
adc
jle
adc
sub
movsl
push
les
push
jo
scas
lret
sub
dec
mov
inc
aam
adc
insl
mov
and
addl
jg
pusha
and
in
sub
add
imul
inc
sbbl
sbb
mov
sub
iret
ds
in
lret
pop
in
pop
ja
push
sub
mov
out
adc
mov
jmp
adc
movsl
in
mov
xlat
testb
cli
inc
or
popa
subb
sub
out
cmpsl
dec
call
jle
aam
andl
push
adc
movl
out
das
enter
sbb
cli
rcrl
popw
in
xchg
sbb
scas
dec
clc
mov
or
mov
mov
cmp
pusha
push
xor
mov
icebp
push
leave
mov
jae
and
cmp
jl
insb
xlat
decb
mov
bound
std
xchg
es
mov
and
cld
jl
das
push
mov
in
or
arpl
outsl
int
loop
ret
testb
xor
repz
call
mov
stos
jge
push
loop
pop
mov
jmp
mov
jp
push
adc
subl
fistpll
test
pop
add
insl
ds
jecxz
adc
adc
xor
add
xchg
test
adc
mov
jecxz
mov
lods
sub
dec
insl
mov
dec
sbb
sbb
aaa
push
out
fildll
nop
call
adcl
xchg
cmp
lea
jnp
out
mov
popa
mov
arpl
mov
sub
imul
pop
mov
stc
inc
push
xor
add
push
sub
sub
daa
outsl
ss
rorb
inc
xchg
cmp
mov
xchg
icebp
add
dec
addr16
inc
test
add
xchg
mov
jge
add
dec
push
mov
sub
add
sbbl
mov
or
pop
ljmp
insl
enter
ror
jecxz
adc
inc
xor
add
xor
out
mov
inc
out
mov
mov
add
in
mov
cltd
jp
add
cmpsb
fcoml
adc
std
xchg
addb
int
cmp
iret
sub
mov
nop
rcl
leave
bound
mov
lcall
mov
test
adc
aaa
pop
sub
or
ja
mov
test
xor
nop
sub
pop
cmpsb
mov
dec
or
mov
mov
xor
orl
cmp
xchg
sti
xchg
mov
dec
addr16
sub
xlat
sbbb
daa
adc
insl
sub
outsb
pop
dec
inc
xchg
and
dec
js
add
mov
or
inc
jb
cli
fs
mov
loopne
add
adc
test
xchg
dec
xchg
xor
adc
aas
add
mov
sbb
pop
fcompl
pushf
faddl
cltd
push
sbbb
in
xchg
popa
cmp
dec
stc
jle
lret
cltd
gs
aaa
mov
sti
mov
addr16
mov
pop
dec
sub
loopne
movsb
xchg
jnp
call
adc
pop
mov
lret
les
cmp
push
lret
mov
push
mov
in
push
icebp
out
test
add
stc
xor
movsl
cli
xchg
or
mov
dec
mov
mov
bound
leave
and
mov
scas
rcll
lea
pop
jle
or
mov
jbe
inc
adc
or
rorl
pop
xor
fwait
je
inc
cmp
and
dec
or
mov
xchg
fs
or
data16
pop
jns
popf
jmp
into
test
lea
adc
ljmp
hlt
cmp
mov
sub
mov
dec
dec
test
cli
daa
xlat
mov
aad
add
mull
stos
xchg
pushf
gs
mov
das
ja
xlat
inc
adc
shrb
jmp
xor
mov
outsl
je
pop
fimull
sbb
cmp
push
adc
lahf
jb
jecxz
mov
sub
je
pop
xchg
das
aaa
test
sub
bnd
mov
mov
adc
mov
add
cmp
into
dec
fstps
inc
jbe
dec
cmp
clc
in
repz
mov
cmovo
pop
loopne
in
leave
test
mov
fmul
cwtl
ret
lea
lock
cmp
int
xor
rcl
inc
mov
fidivs
mov
push
inc
xor
push
not
lods
cmpsb
push
push
xorb
cmc
std
into
jg
cmpsl
or
in
in
int3
bound
inc
jne
enter
pop
sub
sbbb
mov
sub
inc
or
or
adc
jle
jl,pn
inc
mov
sub
dec
add
notl
xchg
mov
pop
push
adc
and
jg
inc
and
out
test
add
pop
dec
icebp
push
xlat
dec
aam
ljmp
mov
stc
cmpsb
pop
scas
mov
mov
cmp
xor
gs
repnz
and
int3
jmp
test
xchg
sbb
inc
bound
sbb
pop
leave
subb
dec
iret
fldt
add
xchg
sub
push
adcb
packsswb
cmp
jecxz
adc
add
xchg
push
insl
lock
hlt
or
dec
in
leave
sbb
out
mov
push
sub
add
cwtl
pop
add
adc
bound
orl
cmp
or
or
lods
andl
pushf
lret
cmp
test
mov
pop
bnd
push
cmpsb
cmp
cli
aam
fwait
movsb
dec
jbe
clc
jo
je
enter
mov
mov
mov
loope
testb
repnz
scas
cmpsb
es
insb
aas
in
sti
movsb
pop
adc
xorb
loope
mov
pop
xchg
adc
neg
lret
lret
sbb
imul
das
xor
lahf
inc
cltd
cltd
int3
lcall
sahf
xor
iret
sbbl
jg
test
dec
push
mov
scas
dec
sub
daa
push
rolb
pop
fistpl
lcall
push
jne
loopne
loope
xlat
bound
xor
rorb
jge
sbb
je
jne
fmuls
sbb
lods
pop
jnp
adcl
and
xchg
ja
stos
shll
fdivrs
les
punpckhdq
out
mov
out
lods
pop
cmp
test
xchg
in
mov
jl
stc
mov
xchg
adc
sbb
pushf
shl
dec
mov
mov
je
mov
adc
stos
xor
mov
icebp
ficompl
insl
div
icebp
jmp
jge
sarl
add
sti
pop
jmp
aad
jo
mov
pop
pop
insl
mov
add
test
cmpsb
pop
ss
dec
orl
imul
rclb
insl
push
mov
sbb
ret
pop
test
pop
xchg
les
test
sub
out
mov
dec
stos
sbb
dec
and
dec
mov
inc
imul
cmp
cmp
and
push
stc
xchg
rcrb
test
int
les
aas
test
mov
mov
cwtl
mov
or
fincstp
enter
xor
jg
ror
sbb
and
add
mov
cmc
sub
bound
add
aaa
int3
sub
out
xor
mov
push
faddl
push
mov
push
out
jb
loopne
jecxz
xchg
repnz
xchg
pop
lods
scas
js
pushf
jmp
ss
mov
inc
and
bound
adc
nop
loopne
arpl
inc
mov
loop
movsl
or
dec
push
mov
inc
pop
aaa
mov
jge
lcall
stos
rcrb
or
fidivrs
push
arpl
jle
mov
lret
popf
fidivrl
repz
adc
xlat
aas
xor
decl
dec
mov
dec
subl
fldenv
mov
jne
xorb
cs
fsubs
pop
mov
fsubp
in
js
pop
cld
jnp
std
clc
sarb
out
mov
mulb
push
xor
cmp
rcrb
xchg
mov
sarl
xchg
fcoms
lret
adc
bound
dec
pop
es
mov
int3
sbb
insl
ret
mov
sbb
add
stos
gs
push
das
sub
adc
cltd
jmp
and
xchg
inc
cld
lcall
lods
call
cld
dec
out
pop
mov
mov
mov
movsb
push
adc
fwait
mov
fbld
mov
in
jb
fwait
dec
jl
call
xchg
sbb
mov
and
jne
xchg
jl
mov
mov
dec
jne
pop
cli
cmp
mov
xorb
adc
inc
adc
mov
dec
sub
stos
fcoml
jbe
aaa
repnz
cmp
rorb
sub
mov
imul
dec
fstpt
cmpsl
js
outsb
loope
jb
cs
xor
js
sub
push
shrl
fsubr
and
cwtl
shrl
push
mov
or
xchg
enter
push
adc
sub
fildl
xchg
mov
test
mov
sahf
stos
lock
mov
xor
insl
xchg
mov
dec
testl
popa
aad
dec
mov
js
cs
call
lods
lock
mov
inc
jg
add
sahf
add
jb
adc
sub
cmpsl
cmc
mov
and
mov
dec
stos
xchg
push
mov
push
xchg
nop
scas
dec
std
pop
cld
data16
sub
clc
jns
mov
pusha
insl
fwait
loopne,pn
jg
lea
jmp
mov
fucompp
scas
mov
dec
ljmp
inc
mov
jge
test
jb
mov
ds
das
into
dec
jnp
test
adc
clc
jmp
cmp
push
jns
dec
sub
mov
inc
out
call
lahf
jno
xor
xchg
cld
sar
xor
inc
jge
pop
scas
mov
fwait
lds
cs
sbb
sub
sbb
les
inc
dec
not
xchg
cltd
inc
sarb
lods
add
aaa
and
xchg
pop
fstpt
xor
mov
iret
std
xchg
cli
scas
and
push
in
and
xor
mov
dec
les
fisubl
jle
cmp
fidivl
push
jg
jg
ljmp
or
fwait
hlt
dec
pop
sub
shr
bound
add
jb
dec
lret
cmp
ljmp
and
fists
popf
mov
sub
scas
mov
push
pop
sbb
xchg
in
xor
test
jle
dec
xor
es
sbb
sbb
mov
daa
add
sbb
mov
dec
rorl
pop
push
jl
sub
cmp
mov
push
sti
dec
idivb
add
lret
outsl
cs
imul
lret
addb
adc
sub
fidivl
cmpsl
loopne
xchg
push
clc
arpl
ret
or
orb
aas
cltd
das
sbb
lock
xchg
push
mov
insl
rolb
rorb
in
dec
call
cmp
cmp
or
cmp
jbe
cld
call
icebp
aas
imul
xor
shlb
cmpsb
cmpsb
cmp
jne
cltd
and
js
jg
jle
das
mov
lret
pop
push
or
mov
push
jle
leave
enter
xchg
fdivrs
jg
xor
movsl
insl
pop
sbb
inc
data16
fsts
lods
jl
and
mov
fwait
jge
jmpw
xor
adc
cmpl
fidivrs
pop
lock
pop
out
sbb
jmp
add
push
pop
sub
into
lcall
subb
sub
out
es
aad
jno
push
adc
out
lret
pop
out
push
push
push
pop
mov
add
push
and
lods
cmp
dec
mov
cmp
inc
test
pop
pop
roll
or
loop
adc
dec
pop
inc
mov
dec
negl
movb
dec
cmpsb
ret
xor
bound
or
call
out
mov
leave
push
stos
les
dec
mov
xchg
pop
mov
jg
outsl
mov
bound
fs
pop
jb
dec
pop
or
fidivrl
mov
mov
jo
jnp
ret
dec
clc
sub
or
mov
rol
int3
out
lcall
orb
xchg
jp
sub
cmp
jno
mov
jne
sub
or
test
adc
shrl
call
cwtl
or
arpl
mov
mov
test
outsb
dec
pop
test
pushf
add
mov
mov
mov
lcall
xchg
rclb
ja
loope
mov
test
fisubs
popf
ficompl
pushf
and
xchg
loopne
mov
xlat
lods
cli
dec
cmp
bound
or
lret
outsb
and
push
rolb
xor
ret
std
lea
into
out
sar
cmc
add
fs
gs
shrb
mov
mov
mov
shll
enter
loope
mov
dec
xor
sbb
mov
mov
aas
mov
sub
adc
ss
xchg
test
stos
cwtl
js
pop
frstor
orb
xchg
outsb
stos
inc
and
mov
mov
test
pusha
push
hlt
repz
cmp
xchg
jne
outsl
or
add
and
fsubs
sub
pop
clc
enter
or
test
inc
and
fidivrs
fisubrl
je
and
or
scas
rcrb
inc
ljmp
pop
imul
mov
lock
inc
mov
jle
movsb
daa
pushf
cld
push
leave
xor
push
push
mov
insb
pop
xor
mov
or
pop
jle
fisttpll
push
roll
cld
sbb
or
push
fsubl
cmp
adc
imul
ljmp
ret
add
sahf
cmpsb
xchg
bound
sti
mov
divb
and
inc
ret
xlat
cld
lock
fnstenv
lret
shrb
xchg
add
pop
adc
in
fwait
popa
jns
mov
aaa
xchg
adc
mov
nop
jmp
xor
in
out
sub
dec
test
addr16
jmp
lds
xlat
xor
lds
xchg
add
cmp
or
dec
sti
sbb
mov
mov
mov
sub
adc
jno
pop
jge
jmp
cs
jnp
pop
fwait
daa
rclb
sbb
jb
mov
jne
cmpsl
xor
iret
fwait
pop
aad
loope
push
jnp
shll
or
inc
jl
call
pop
sti
test
decl
jmp
int
mov
out
or
aas
xor
rcll
mov
xor
adc
mov
shl
sahf
adc
nop
sbb
push
jecxz
fsubs
sub
test
sar
movsb
std
imul
add
je
pop
xchg
std
mull
aas
jb
dec
in
pop
das
sbb
dec
cli
faddl
mov
test
hlt
jecxz
sbb
ljmp
daa
fistl
movsb
mov
xchg
scas
aaa
popf
shll
cmc
jmp
push
sarb
mov
ljmp
mov
push
arpl
jo
push
push
jmp
adc
int3
add
dec
inc
mov
jle
xchg
pop
clc
adc
out
push
cmp
mov
mov
jmp
mov
inc
repnz
push
fsubr
ret
fdivl
add
icebp
sbb
pusha
dec
lds
ja
shrb
dec
jbe
xor
sub
sahf
push
xor
xchg
and
pushf
jnp
nop
xchg
pusha
mov
xchg
or
push
iret
mov
xchg
sbb
hlt
in
push
xor
sub
jnp
call
fidivrl
dec
xchg
in
test
ja
les
aad
xor
out
add
jnp
add
sbb
sarl
imul
fucom
loop
pop
jae
out
dec
sbb
cmpsl
test
adc
sbb
mov
jns
pop
xor
jmp
mov
mov
addl
cmp
dec
inc
cmp
aad
data16
out
subl
shr
mov
sbb
xchg
fadd
pop
cli
out
imul
ss
cmp
xor
shl
out
clc
jne
adc
dec
push
enter
sahf
mov
inc
fdivr
xchg
arpl
sbb
repz
or
loope
ror
popf
xor
das
sbb
enter
popa
mov
adc
dec
dec
xchg
mov
testl
xchg
ljmp
shl
das
push
fiadds
cmp
pop
test
into
enter
stc
inc
jmp
lea
clc
inc
jmp
mov
movsl
and
mov
cmpsl
add
dec
pop
jno
cmp
imul
cltd
sti
sub
sub
lock
lods
push
xchg
xor
ljmp
andl
pop
sub
sarb
iret
push
pop
in
arpl
fstpt
in
shl
mov
mov
and
cmp
dec
ror
out
outsl
popl
dec
fistpl
sbb
adc
push
push
std
insl
push
shrb
add
test
and
push
pop
popa
les
cmpsb
pop
lock
cmp
cmp
push
push
popf
jle
fcoml
dec
pop
jecxz
adc
mov
adc
xchg
adc
pop
fsubrs
adc
add
scas
nop
sti
inc
mov
push
addr16
xchg
mov
and
push
push
pop
pusha
clc
jge
into
addl
fs
lds
or
jb
pop
inc
push
scas
lock
call
cmpsl
setp
cmp
repz
bound
pusha
push
push
dec
pop
adc
aas
lcall
sbb
stos
lea
cmp
pop
or
jmp
push
inc
lcall
movhps
cs
add
jmp
push
jp
jl
sbb
pushf
movsb
imul
sub
mov
es
xchg
in
fnsave
push
lahf
jo
xlat
dec
imul
jle,pn
lcall
lcall
roll
mov
lock
or
in
rcl
cs
sbb
into
out
int
and
cmp
daa
inc
test
push
testl
adcb
inc
cwtl
pushf
fs
jp
out
jne
cmpsl
and
dec
jbe
stos
nop
jbe
repz
into
dec
pop
ret
rcr
pop
aam
sti
dec
roll
push
pushf
sbb
jae
push
jecxz
sbb
push
shl
lret
jns
mov
sub
leave
data16
addl
daa
adc
jne
xor
aad
test
cli
fbld
cmp
and
stc
fadds
mov
add
test
adc
mov
dec
push
xor
jmp
testb
mov
test
push
sbb
out
jne
mov
lret
cmpb
nop
or
outsl
in
xchg
sub
xchg
cmpsl
sub
aad
ja
and
repnz
sbb
xchg
std
xchg
cli
pop
add
bound
sub
inc
outsl
xor
mov
scas
adc
jp
inc
mov
mov
out
enter
test
js
and
rorb
adc
loop
xor
dec
addb
pop
pop
inc
mov
pop
fnsave
ja
push
call
and
sarb
jae
cmp
push
aas
cmc
or
lcall
lds
sbb
es
std
iret
test
cmp
sarb
loop
sarl
pop
popa
subb
push
insl
aas
sub
or
addr16
sbb
fwait
iret
in
push
sub
fisubrl
add
ret
addl
pop
xor
loope
pushl
decl
shll
dec
inc
into
jge
xor
bnd
mov
xchg
das
mov
int
cld
xchg
int
and
xorl
iret
out
lock
push
rcrb
scas
out
rcrb
add
jbe
cmp
dec
lods
jmp
sti
dec
sahf
sub
pop
mov
sarl
cmp
arpl
xchg
sub
or
cmp
es
push
push
popa
pop
mov
jmp
shl
cmp
and
dec
insl
mov
jmp
dec
and
fisttps
mov
push
stc
xchg
mov
daa
test
and
and
lcall
arpl
int
cmp
jo
xlat
dec
pop
xchg
dec
jle
cmpb
lds
mov
xchg
call
pop
outsl
push
mov
sub
das
ljmp
jnp
and
pop
and
xlat
sahf
or
adc
push
movsl
pop
outsb
xor
lods
cmp
inc
sahf
pop
popl
inc
xchg
cmp
into
loopne
cmpsl
arpl
mov
imul
jle
bound
jnp
cmpsb
xchg
and
mov
xchg
fimull
pop
xchg
pop
cli
leave
js
in
mov
adcb
or
pop
sbbb
testl
mov
push
rorl
dec
mov
pop
imul
lods
mov
and
hlt
imul
mov
cmp
es
adc
jae
ror
inc
xor
enter
test
and
xchg
jl
in
inc
nop
sub
ret
mov
cs
int
sbb
lods
es
jmp
sub
mov
xor
test
movsb
sbb
xor
aam
bound
cmp
dec
scas
adc
test
jg
ss
aaa
scas
fadds
imul
sbb
adc
popf
inc
mov
cmp
hlt
mov
jge,pt
lea
cmp
push
cwtl
movsb
push
push
push
scas
pop
pop
mov
sbbb
stos
xor
arpl
lahf
jno
cmp
cmp
inc
pop
dec
push
xchg
xchg
and
cli
test
aas
xchg
insl
push
shll
mov
cmpsl
mov
jno
mov
test
mov
mov
inc
ljmp
leave
stos
je
leave
jmp
negb
add
push
movsl
jb
mov
mov
inc
push
push
les
jb
into
or
pushf
lret
iret
out
mov
mov
jmp
sub
clc
aaa
inc
fucom
xor
rcrb
std
xor
lods
xchg
mov
jbe
xchg
xor
insl
and
and
adc
dec
cmp
cmpsl
mov
std
int
insb
xor
xor
rcpps
xor
mov
ljmp
xchg
std
jmp
mov
stos
int
js
pusha
mov
fcomip
jne
sbb
cmc
lock
in
fwait
or
or
les
and
xor
mov
test
sarl
add
sub
cmpl
adc
insb
out
cmp
xor
add
in
mov
pop
insl
mov
xor
in
pop
in
fistl
popf
xchg
mov
jbe
mov
lret
ja
and
xchg
pop
xchg
lahf
daa
cwtl
inc
lds
and
mov
iret
sbb
loopne
jge
and
and
ljmp
jno
out
mov
test
dec
divb
mov
inc
pop
xchg
cmp
stos
rorl
jmp
push
xor
aad
rdpmc
cmp
dec
push
ds
repnz
mov
jo
jae
cmp
movsl
imul
adc
sub
jbe
push
sbb
adc
or
scas
jns
inc
cltd
or
mov
adc
inc
push
ficomps
mov
pop
movl
dec
ret
xor
push
fstps
leave
aad
mov
sbb
jnp
or
xor
xor
repnz
cmp
dec
in
cwtl
sarb
cmp
ror
mov
cmpsl
or
sti
icebp
push
frstor
inc
int3
int3
jns
jbe
in
add
fnstenv
aas
out
addb
or
lahf
add
ret
cmp
sbb
sbb
mov
push
push
sbb
cmpsb
jbe
mov
dec
xchg
adc
loopne
fmulp
sub
mov
loop
fmull
fwait
sbb
xor
outsb
cmp
call
pop
jns
subb
cltd
bound
inc
rcrl
push
ja
xor
outsb
sub
stos
mov
add
inc
leave
cltd
mov
outsl
aam
js
imul
mov
jno
or
into
je
cmp
sub
je
add
loop
cmp
push
inc
leave
mov
nop
shrb
mov
ret
ror
inc
and
fnstenv
cmp
jnp
pushf
jo
enter
jnp
mov
jecxz
scas
adc
aam
leave
xor
cs
test
or
inc
popf
pop
or
loopne
xchg
std
cmpsb
sub
aad
push
dec
call
out
nop
cwtl
test
sahf
or
sarb
mov
and
cltd
pop
add
xor
and
add
mov
loope
imul
or
pop
cmp
test
sbb
pop
jns
cs
jmp
and
daa
enter
sbb
fcmovnbe
std
push
lret
mov
add
or
add
movl
sbb
cwtl
das
mov
stc
cmp
cld
daa
mov
cwtl
adc
es
mov
and
cmc
movsb
into
xor
xor
and
in
adc
in
jbe
fdivs
in
cs
repz
sub
subb
push
xchg
sbb
fcomps
mov
cmp
mov
push
xor
ja
cld
call
push
inc
out
mov
js
xchg
fcmovb
push
aas
sbb
inc
jns
leave
aaa
adc
pop
data16
jecxz
loope
popa
mov
fidivrs
jmp
xchg
loopne
push
pop
add
int
xchg
and
sbb
fs
mov
inc
cwtl
sbb
loope
mov
jecxz
lods
cmc
scas
std
jle
aas
push
or
pop
fcomp
pop
mov
sbb
movsb
and
xor
add
and
loope
ljmp
hlt
cwtl
xor
pop
repnz
adc
fidivs
lock
push
adc
cmp
es
je
xchg
rolb
jb
cmpsl
cwtl
pop
test
pop
xchg
data16
rcrl
inc
mov
scas
jge
inc
and
fnsave
xchg
and
adc
loope
popf
scas
enter
out
ret
jp
cltd
cli
or
imulb
fs
push
mov
popf
hlt
and
fisttps
stos
mov
jmp
inc
and
in
aas
dec
insb
cmpsl
test
lret
and
leave
cld
out
xlat
out
xchg
add
in
jp
push
cmp
lods
and
mov
sbb
inc
mov
sub
jl
repz
or
mov
add
add
pop
into
jno
int
stos
in
repz
cmpsl
shl
or
sarl
mov
inc
add
xor
pop
push
je
adc
sbb
or
or
stos
pop
push
mov
or
push
fstpt
sarb
mov
sub
outsb
xor
cmp
sbb
shl
addb
hlt
lret
lret
and
add
mov
enter
sbb
sbb
mov
int
pushf
inc
in
sahf
sbb
jg
inc
jge
xor
sbb
shll
nop
push
inc
das
mov
into
int
shr
idivl
por
frndint
cmp
adc
hlt
test
jo
in
into
mov
shlb
lods
push
cld
jmp
add
push
adc
je
mov
push
out
repnz
mov
pop
mov
lds
cmp
inc
jne
inc
push
adcb
lods
mov
fcoms
mov
push
in
out
push
xchg
icebp
xchg
addr16
add
prefetch
or
movsl
mov
call
daa
jg
das
and
shl
mov
xchg
push
call
pop
cmp
mov
xor
xor
push
xor
pop
subb
push
daa
enter
lods
in
mov
cmp
divb
aam
mov
cmpsl
push
and
in
adc
inc
repnz
cmp
aas
divb
insl
outsb
xor
pop
mov
push
loopne
aam
xor
sti
xlat
sub
jl
add
test
mov
ror
or
mov
lret
icebp
popa
je
dec
jg
fwait
movsl
cmp
push
mov
sbb
cmp
icebp
mov
push
lds
hlt
movsl
mov
sub
sbbl
mov
testb
jb
push
jge
test
je
and
or
add
dec
pop
sub
je
ljmp
xchg
data16
jge
push
ror
jnp
bound
mov
into
cmp
std
xchg
jmp
cmpsb
lea
fistl
ljmp
inc
in
dec
mov
icebp
daa
lods
mov
repnz
clc
ss
push
dec
les
daa
repnz
cmpsb
mov
lcall
push
jge
rorb
lea
sbb
add
popf
insb
push
sbb
pop
aas
ja
mov
mov
ljmp
add
jmp
lahf
sbb
jb
inc
in
or
xor
js
ret
inc
mov
ljmp
popa
in
xor
mov
data16
jecxz
mov
dec
ljmp
scas
mov
nop
push
test
add
xor
fbld
cmp
dec
nop
jmp
cmpxchg
jb
xchg
inc
rcrb
xchg
mov
les
sbb
test
imul
inc
xor
mov
pop
scas
inc
mov
mov
shlb
lret
mov
mov
ja
cmp
test
xchg
enter
cmp
add
inc
inc
aam
sub
mov
imul
inc
pop
jle
mov
fadd
aam
mov
sub
sbb
add
fcomps
mov
scas
stc
sub
mov
pop
call
xor
sahf
pop
cmc
pop
shl
shrb
adc
push
sahf
test
shlb
push
cmpsb
dec
xchg
adc
adc
xchg
imul
pop
push
bound
and
fstps
adc
cmp
xlat
cmp
fcoml
iret
je
mov
fisubs
lahf
fcmovnb
sbb
sub
pop
aad
cld
lret
in
or
mov
daa
sti
mov
lds
repnz
icebp
mov
pop
jnp
mov
cs
mov
jae
cmp
xorb
cmp
mov
push
xchg
mov
test
aam
inc
xchg
mov
xchg
sbb
or
dec
lock
xor
imul
fwait
mov
fcoms
xor
pop
mov
nop
fadd
or
and
inc
dec
dec
push
jl
or
pop
gs
or
mov
pop
data16
pop
pusha
lahf
dec
push
mov
mov
and
pop
sub
mov
test
pop
stos
lret
and
bnd
mov
lret
scas
add
sbb
jae
fucomp
push
mov
ljmp
fcomps
roll
push
mov
and
fwait
cs
jo
or
jge
ss
push
dec
fs
mov
mov
sub
and
ret
pop
sub
xor
dec
movsb
iret
movsb
mov
aaa
mov
xor
or
gs
addr16
cli
mov
lret
rolb
cmp
bound
fmull
jns
orb
aas
nop
ret
mov
push
push
in
scas
fs
mov
in
push
push
xor
cli
or
xchg
sbb
cwtl
imul
rolb
sbb
popf
fisttpll
decl
cmpb
and
lods
imul
clc
shl
in
shrb
das
sub
inc
out
mov
jp
xor
lret
or
or
xorb
gs
jo
mov
iret
lret
lahf
xlat
cwtl
or
pop
add
and
ja
jp
addr16
aam
and
and
and
ret
pop
mov
push
xchg
sub
pop
ds
cmc
ljmp
ss
mov
dec
xor
mov
enter
sub
out
jle
mov
dec
push
push
xor
dec
push
jae
cltd
loope
inc
inc
mov
xchg
out
movsl
loope
xor
cs
or
rorb
fs
mov
outsb
sub
mov
nop
xchg
jo
or
mov
imul
adc
repnz
lret
pop
out
addr16
sub
or
test
mov
out
inc
iret
or
sub
sub
fildll
inc
sbb
cmp
cmpsl
ret
dec
dec
and
sbb
movsl
sbb
jb
inc
inc
popa
inc
pop
imul
or
iret
gs
iret
cmp
popl
xlat
out
mov
cs
sub
xchg
es
out
mov
jb
call
imul
insl
add
mov
pop
and
rolb
xlat
data16
lock
out
lret
fldlg2
xor
sub
jae
push
inc
mov
push
int3
mov
icebp
inc
lock
sub
mov
int3
or
outsb
mov
cltd
setge
mov
loope
pop
in
mov
icebp
aaa
mov
pop
rcrb
mov
dec
imul
and
cmp
push
jae
cmpsl
out
setne
adc
clc
inc
ret
wbinvd
subb
xchg
cmp
jge
and
loop
xor
push
ss
movsl
cmp
loop
cld
ja
scas
ljmp
push
lods
ret
xchg
out
in
push
or
enter
imul
in
in
fsubs
loopne
insb
xchg
jae
add
int
mov
stos
jae,pn
repz
jge
add
push
fcom
inc
mov
imul
dec
jnp
das
jecxz
xchg
outsl
inc
adc
push
das
ret
adc
out
sub
dec
pop
popa
lret
mov
stos
push
adc
arpl
out
enter
jmp
inc
xchg
leave
test
xchg
add
sub
add
out
adc
iret
fnstcw
dec
xchg
das
gs
into
cwtl
xchg
dec
mov
inc
mov
test
subb
daa
test
fstpt
add
sahf
push
pop
loopne
sub
sarl
jmp
adc
into
lods
pop
cmp
lahf
xchg
jle
in
ret
cmpsb
sub
xorl
stos
adc
fucomp
mov
push
xchg
enter
or
fcmovu
add
repz
test
cmp
insl
fldt
sbb
or
adc
pop
xor
outsb
sti
jno,pt
pop
mov
clc
mov
xor
pop
push
repz
and
mov
imul
cmp
pop
out
into
fldt
test
lds
sbb
jl
sub
pop
notb
sbb
arpl
rolb
lret
stos
call
mov
faddl
adc
jnp
push
add
test
push
jmp
push
stos
ljmp
mov
shll
orb
dec
sbbb
je
mov
fldt
inc
ss
mov
inc
test
xchg
cli
mov
push
inc
ret
bound
mov
cmpsl
jp
pop
adc
jbe
mov
pop
lods
nop
or
xchg
es
sbb
leave
dec
jl
adc
jb
mov
jge
repz
xchg
mov
ds
outsb
inc
lcall
std
movl
dec
lret
sub
aas
lea
adc
and
sbb
jecxz
sbb
and
mov
stc
sbb
daa
lea
rcr
pop
dec
dec
xor
gs
ljmp
shr
mov
fsubs
push
jmp
xchg
xor
shr
mov
fsts
and
sub
or
dec
inc
test
fdivl
adc
mov
mov
mov
fdiv
cmp
cmpsb
rorb
cmp
dec
repz
test
push
adc
xchg
mov
pop
into
cli
sub
push
inc
in
mov
xchg
push
leave
sub
mov
mov
cmpsl
cmp
sbb
dec
test
insb
cmpsb
pusha
sahf
in
fsubp
mov
cmp
lock
xor
add
ds
sbb
add
sbb
dec
je
mov
insb
or
sub
dec
jle
lcall
add
imul
sub
xor
and
cmp
mov
andps
add
pop
sbb
xchg
inc
daa
ret
pop
inc
add
adc
out
iret
jb
jl
ret
lock
popf
mov
cmp
jge
or
xor
mov
leave
mov
adc
test
scas
mov
lea
or
scas
mov
push
in
dec
inc
add
pushf
add
add
mov
mov
es
pop
and
rorb
xchg
inc
outsb
pop
jl
jp
imul
das
or
nop
lds
repz
dec
dec
or
and
addr16
xchg
dec
inc
loopne
or
mov
out
mov
enter
pop
ficomps
inc
adc
and
js
jo
movsl
lds
add
adc
in
mov
inc
cltd
pop
shlb
sarb
imul
sbb
sub
pushf
clc
lods
or
mov
inc
dec
cld
sub
ret
gs
jnp
cli
jmp
arpl
xor
push
mov
cwtl
lds
pop
xor
test
pop
call
pushf
rcl
gs
je
lahf
dec
xchg
push
lock
fcoml
pop
inc
shr
push
sub
fistpll
jns
inc
hlt
push
iret
adc
xor
outsb
in
ffreep
rol
pop
cmp
jne
out
lods
pop
sbb
lcall
mov
cli
or
xor
add
enter
mov
js
mov
jae
inc
scas
xlat
pop
pop
repz
lds
or
clc
inc
cmpl
mov
popa
mov
xchg
call
mov
mov
adc
adc
jo
xor
sbb
push
aam
lahf
mov
fistl
in
mov
and
loope
sarl
xchg
push
test
jno
movsl
hlt
neg
repz
stos
jnp
and
gs
mov
lea
in
fwait
popf
cmp
mov
lret
call
les
xchg
fwait
lahf
jmp
dec
adc
push
loopne
sarl
repz
dec
xlat
add
movsl
aad
das
iret
addr16
repz
sahf
xchg
inc
jb
out
dec
and
sbb
jno
dec
pop
inc
xchg
add
jb
test
cld
dec
int3
inc
fidivl
jl
mov
add
sub
mov
ss
xchg
mov
jg
mov
lcall
xchg
stos
ss
pop
mov
ret
scas
jb
mov
push
pop
fmuls
mov
inc
mov
adc
mov
push
sbb
xor
sub
jp
ret
loop
inc
subb
xchg
test
test
xchg
mov
adcl
lods
arpl
leave
test
mov
push
jbe
dec
xor
sti
and
loopne
cmp
inc
xor
bound
push
push
popf
adc
pop
or
test
mov
adc
mov
pop
fwait
call
out
loope
lods
inc
loopne
sub
sar
fidivrl
rclb
repz
insb
push
outsl
mov
push
mov
push
cwtl
pop
fdivrl
fwait
jle
cmpsb
movsl
jl
ljmp
adc
jmp
inc
inc
mov
add
or
aad
pop
mov
lahf
adc
sbb
pop
mov
push
ror
test
aas
ret
fdivr
aam
test
inc
jae
into
mov
jae
add
mov
pop
push
out
shrl
and
mov
test
mov
adc
adc
fmull
mov
or
mov
mov
movsb
jnp
int
iret
add
movl
and
cmp
pop
scas
xor
add
je
shll
xchg
pop
stos
or
into
pop
sbb
in
icebp
sbb
faddl
insb
jmp
jg
push
outsb
cmpsb
popf
dec
xchg
jle
movsb
ja
and
cmp
dec
mov
mov
or
adc
fcompl
jge
ret
mov
pushf
push
lods
sbb
movsb
movsb
popf
or
fnsave
pop
in
xor
cltd
xchg
stc
aam
cmp
mov
shll
call
jl
push
jne
rorl
data16
mull
aad
fwait
je
out
xchg
adc
sub
cld
lret
popa
pop
testb
mov
es
xchg
or
lret
xor
out
jno
stc
outsl
std
outsl
jg
push
mov
pop
add
pop
leave
push
and
fsub
add
cli
loopne
roll
dec
dec
imul
jl
mov
cmp
mov
repnz
int3
mov
out
xchg
test
mov
jmp
mov
shr
fprem1
sub
sub
push
test
push
out
in
mov
mov
mov
repnz
pop
ljmp
sub
out
lret
dec
jecxz
popf
jne
cmp
in
xchg
adc
out
shr
lret
pop
xor
mov
int
pusha
or
xchg
dec
mov
adc
int
outsl
mov
movsl
insb
cmpsb
shlb
inc
popa
stos
lock
out
inc
pop
aas
add
mov
jmp
ds
test
test
daa
outsl
fimull
fmull
lcall
repnz
imul
lods
jne
add
sub
outsl
in
lea
mov
adcl
or
mov
rcll
push
jo
adc
into
pop
mov
out
pop
push
xchg
nop
sub
or
nop
pop
loope
cmpsl
sbb
ljmp
pop
in
xchg
mov
hlt
pop
popf
repnz
enter
mov
xchg
pop
adc
cld
ret
pop
ret
shl
enter
dec
push
into
stc
push
stos
out
mov
push
cmpsl
mov
adc
push
and
push
xchg
and
jno
cli
jb
nop
pop
dec
or
lahf
mov
dec
cmp
loope
inc
lea
add
fcmovnb
dec
sub
mov
push
sbb
mov
inc
mov
aas
testb
pop
and
pop
in
clc
lods
sub
aas
adcl
sbb
and
std
gs
jge
test
xchg
mov
sub
js
imul
out
pop
insl
or
sub
and
mov
lds
sbb
jae
js
repz
jl
push
push
data16
xchg
mov
test
lahf
push
jp
not
iretw
daa
mov
mov
sub
pop
mov
and
sbb
jecxz,pt
stc
sub
mov
mov
andl
jecxz
add
inc
add
rcr
int
xor
aaa
jno
inc
out
cld
or
cmp
jge
fidivrl
push
adc
mov
cltd
mov
cltd
out
mov
fisttpl
jmp
jo
js
xor
cmc
xor
fidivs
adc
insl
sarl
repnz
xchg
and
sahf
je
mov
push
enter
test
test
add
mov
or
loope
add
aaa
cmp
pop
or
jno
rcr
insl
outsb
push
sbb
call
sbb
scas
pop
test
dec
stos
push
ficoml
dec
push
sbb
mov
push
xor
js
push
mov
test
sbbl
ret
ret
aam
sbb
mov
xor
scas
stos
fildl
dec
cld
adc
xlat
and
insb
add
int3
inc
fs
ret
test
xor
stos
push
jecxz
mov
and
xchg
jl
decb
mov
push
addr16
je
dec
loope
movl
andl
test
xchg
cmp
loop
call
push
dec
ja
mov
inc
xorl
inc
pop
mov
fsubl
scas
addr16
imul
jle
push
cwtl
and
sbb
les
mov
mov
data16
cld
adc
cltd
push
mov
mov
lods
add
xor
push
fnstcw
bound
mov
mov
scas
leave
xchg
sub
ja
pop
rcrb
jbe
mov
lcall
mov
je
roll
add
mov
jecxz
or
fcomp
sub
mov
ret
push
aaa
pop
cltd
xchg
fmull
loop
pop
pop
and
push
mov
arpl
sub
in
rorl
aas
cltd
icebp
xchg
lahf
mov
addr16
aad
insl
or
push
pop
lahf
mov
test
add
test
outsl
stos
xor
data16
pop
adc
call
outsl
test
in
pop
adc
mov
mov
xchg
mov
call
out
or
mov
xor
or
jmp
jge
ljmp
mov
adc
pop
ss
xchg
cli
mov
ret
inc
out
xchg
pop
sbb
ret
and
popf
mov
les
and
cmp
ret
lret
push
push
call
jl
mov
add
jno
jge
enter
pop
sahf
mov
mov
into
mov
cmp
dec
loopne
sar
inc
cmc
dec
xchg
mov
ret
sti
arpl
sti
inc
je
pusha
in
pushf
mov
pop
jnp
dec
insb
mov
xchg
or
popa
pop
int3
push
ja
inc
inc
xor
cmp
push
addr16
push
mov
cmp
data16
mov
mov
cmpsb
lret
cmp
adc
push
lret
sub
sbb
adc
cmpl
enter
lds
xor
mov
insl
lods
sbb
ja
mov
inc
add
test
cmpsb
adc
adc
add
pop
imul
ss
mov
popf
adc
out
mov
int
inc
mov
sbb
mov
and
and
lret
in
decl
aaa
pop
lret
cmp
jae
std
adc
cmp
jb
adc
test
test
sbb
sub
sahf
jnp
jecxz
insl
test
rclb
or
jp
js
mov
push
adc
and
pop
rclb
out
xchg
psrlw
jo
pop
popa
dec
addb
ljmp
dec
inc
mov
in
cltd
daa
shrb
xchg
xchg
imul
inc
loope
inc
fsubs
add
mov
xchg
and
lret
mov
pop
ss
insb
or
cmp
xor
cmp
arpl
mov
cmpsl
mov
loope
notl
xlat
mov
lea
loop
pop
shr
stc
cmp
xchg
clc
push
xchg
movsb
add
jno
fistps
into
test
out
cmp
xor
fcmovnb
mov
add
repz
dec
xchg
fiaddl
xor
and
xchg
sbb
hlt
ds
or
hlt
pop
sub
inc
inc
adc
push
adc
scas
push
inc
pop
dec
inc
add
jp
mov
xor
fisubrs
cs
lahf
cmp
mov
popf
jnp
mov
dec
push
fnsave
cmpsb
add
cmp
rclb
lret
inc
xor
push
outsb
loop
dec
sbb
mov
pop
xchg
pop
addr16
jo
jo
or
arpl
jmp
out
push
aad
repnz
lea
xchg
ljmp
push
push
adc
dec
push
int
stos
and
inc
mov
push
mov
repz
inc
cmp
push
pop
aas
mov
orl
adc
jg
and
fucomp
cmp
xchg
neg
mov
test
out
int
dec
das
addr16
sub
adc
test
pushf
outsb
or
pop
aaa
sub
mov
adc
jl
sub
mov
rolb
lods
cmp
cmpsb
es
call
sbb
lret
loope
fimuls
jmp
xor
mov
mov
popf
js
scas
sub
mulb
mov
cmpsb
push
adc
enter
xchg
fs
fbstp
jns
xchg
mov
imul
xor
movsl
jb
pop
jecxz
test
loop
xor
or
jno
inc
imul
jecxz
outsb
movsb
xlat
pop
xor
xor
outsl
jp
xchg
sbb
pop
xchg
in
mov
arpl
dec
movsb
mov
ljmp
xchg
xor
imul
jp
or
and
inc
cmp
sub
dec
adc
dec
out
outsb
and
neg
aaa
imul
sbb
xchg
in
scas
call
push
jae
sub
ja
fs
mov
mov
or
into
push
push
push
mov
daa
pop
sub
pop
inc
mov
add
sbb
mov
loopne
adc
and
mov
out
movsb
lret
cmp
pop
mov
clc
sbb
inc
aaa
popa
call
ficomps
jg
stos
popa
sbb
int
outsl
mov
sub
xchg
pop
or
imul
or
sbb
movsb
mov
enter
sbb
and
dec
and
push
incb
pop
dec
mov
jbe
cmp
jg
xor
in
stos
cmp
test
mov
jo
movsb
dec
mov
mov
xor
jae
jne
mov
push
mov
ret
lods
popa
push
fdivr
rorl
fnstcw
pop
popf
and
dec
inc
mov
push
mov
pop
cmp
or
pop
stos
fcomps
dec
xlat
je
filds
xchg
xchg
lret
lcall
js
rcl
sar
inc
mov
mov
dec
loopne
imul
xchg
test
mov
pop
inc
jecxz
xchg
repnz
mov
lahf
jne
cmp
adc
loop
mov
mov
pop
std
xchg
notl
sbb
mov
fiadds
rorl
pop
mov
sub
dec
orb
inc
xchg
pop
imul
push
pop
mov
mov
jo
add
negb
lret
das
filds
inc
xor
mov
enter
jg
sub
mov
jle
cltd
or
cmc
ss
arpl
adc
and
out
dec
insl
mov
addr16
test
lods
je
mov
aaa
dec
add
jge
mov
pop
or
pop
mov
adc
sbb
cmp
sahf
xchg
sub
jno
mov
jmp
test
cld
roll
lcall
xchg
mov
jp
jns
adc
je
xchg
clc
mov
popf
gs
stc
adc
cmp
sub
test
popl
mov
mov
push
xchg
cmpsl
int3
aam
popa
enter
test
aaa
sub
ret
jb
pop
xor
xlat
xor
jnp
push
cmp
xchg
mov
and
pop
and
add
mov
call
sub
call
clc
inc
outsb
jne
and
xchg
dec
pop
pusha
mov
mov
out
or
fidivrs
sarb
mov
pusha
and
sbb
lea
enter
dec
pop
loop
addr16
ds
negb
idivb
sbb
shll
sbb
sbb
pushf
mov
jne
mov
mov
ja
insl
cs
cwtl
and
repz
mov
adc
loope
cs
mov
pop
xchg
jne
jae
and
or
out
repnz
and
mov
stos
and
popa
mov
mov
loopne
mov
inc
sbb
jl
ret
mov
add
out
add
cmp
pop
adc
je
das
sbbb
add
xor
lods
lods
add
das
dec
nop
lret
mov
in
xchg
add
adc
into
cmc
mov
dec
inc
mov
jg
sbb
fcomp
fisubrs
call
or
inc
add
pop
sahf
cld
inc
ret
mov
sarl
jae
outsb
ss
or
push
aas
push
mov
push
cltd
cmp
jg
aaa
imul
jle
or
jg
rorb
and
mov
adc
jp
int3
ret
popa
inc
lock
aas
sbb
xchg
test
pop
mov
xor
adc
sbb
std
fsubr
add
inc
out
pop
adc
leave
sahf
xlat
push
jge
mov
shll
mov
mov
push
mov
into
pop
insb
and
loope
call
jmp
pop
cld
xchg
jmp
inc
mov
hlt
pop
mov
imul
xchg
and
in
aaa
ljmp
insl
inc
ret
sub
or
pop
or
sti
push
int
clc
jns
leave
data16
mov
jmp
xor
js
mov
outsb
outsb
pop
jle
daa
ds
out
jmp
dec
and
xchg
pop
outsl
sbb
cld
sub
outsb
xor
ret
cld
in
vpunpckhqdq
adc
test
bound
test
mov
xchg
imul
add
lahf
fidivl
icebp
jp
mov
inc
or
push
lret
jb
push
sub
xor
and
xor
stos
and
pop
icebp
xor
idivb
addb
sub
inc
cmp
lock
test
lods
mov
aas
xor
stc
inc
mov
jge
rcl
gs
xchg
push
push
enter
iret
test
shlb
mov
imull
inc
loop
gs
fs
pop
mov
mov
addr16
jle
add
and
lret
sbb
jp
mov
repnz
ret
fidivrl
movsb
mov
dec
sub
mov
mov
jno
lock
add
jmp
in
inc
enter
in
dec
shll
int3
bound
dec
inc
xchg
xchg
or
std
sarl
inc
add
fs
push
jne
pop
dec
xlat
cmpsl
cmp
mov
and
push
pop
jmp
sbb
or
jl
fcoml
push
xchg
mov
adcl
jno
sbb
sub
fcomp
loop
sbb
jmp
movsb
xor
out
ficoms
lcall
ss
ret
and
and
insb
or
mov
xchg
inc
dec
or
in
fdivrl
xor
add
pop
test
test
mov
xchg
subl
cltd
push
adc
data16
sub
sub
out
les
inc
xchg
or
xorl
mov
push
xor
scas
push
xchg
jbe
mov
popf
shl
bnd
addl
or
cli
aad
mov
push
mov
loopne
adc
sti
lods
add
dec
dec
sbb
add
ss
fildll
pmullw
or
jae
dec
inc
ss
and
jp
lods
jne
jl
fwait
pop
push
cltd
push
cmp
movsb
push
push
ljmp
stos
push
shll
jmp
xchg
scas
mov
jo
push
inc
lret
xor
cli
aad
lahf
aaa
cmp
in
mov
jmp
ljmp
and
cmc
in
cvtpi2ps
shl
mov
push
xchg
sbb
call
xor
dec
cmp
pop
xor
lcall
lahf
jl
loop
cmp
stos
xor
insl
inc
mov
xor
mov
mov
dec
mov
mov
in
add
xorl
mov
imul
popa
dec
gs
mov
shlb
aas
xor
bound
cmp
adc
pop
jecxz
das
mov
popf
and
mov
mov
push
lods
outsl
lods
call
mov
mov
in
ds
adc
loope
add
sbbb
popa
jnp
fistps
lock
and
jle
stos
jno
jnp
scas
pushf
and
test
orb
fcoms
dec
mov
fs
add
lods
jmp
into
leave
sub
jns
sbb
inc
sub
xor
jle
push
mov
outsb
les
xchg
mov
push
out
das
sub
test
sbb
lcall
movsb
add
aaa
es
addr16
div
dec
pop
inc
ds
rolb
mov
dec
cmpsl
adc
pop
jne
cmp
into
je
lods
fwait
aam
js
and
pop
jae
loop
sbb
jb
adc
jp
mov
dec
movsl
das
ja
push
push
cld
cmp
pop
idiv
mov
aaa
fists
in
out
je
and
iret
leave
adc
add
inc
xchg
pop
push
rorl
aaa
jecxz
dec
mov
mov
xor
enter
mov
sbbl
lret
xor
rorb
arpl
jp
and
dec
xchg
cmpsl
and
cmpl
cwtl
push
mov
xor
movsl
outsl
aaa
decb
mov
in
shrl
lret
sub
adc
shll
xchg
push
icebp
xor
sti
add
fwait
sub
int
in
bound
outsl
ja
xor
cltd
dec
bound
add
push
dec
imul
stc
push
loopne
data16
test
add
rcll
cmp
inc
dec
lahf
pop
pop
les
and
dec
add
ljmp
pusha
cli
iret
stc
std
adc
xchg
mov
scas
xor
cli
jge
dec
leave
jp
imul
add
xor
mov
sub
loope
xor
adc
pop
xchg
xor
rcrl
sub
ljmp
jne
mov
aas
addl
fs
stc
imul
jmp
rcrb
enter
jle
rcrl
aad
rcrl
insb
jae
in
pop
je
adc
lret
rcll
jbe
cmp
and
push
iret
push
pushf
sbb
mov
test
lock
inc
addr16
insb
xlat
in
nop
rcll
xor
lds
lods
je
stc
icebp
dec
jno
mov
mov
xchg
or
test
mov
mov
jns
ss
push
or
insb
cmc
sub
rclb
aad
inc
lock
cmp
inc
mov
fbstp
push
xlat
loop
push
shrb
xchg
cltd
mov
xor
fidivl
sbb
pop
inc
mov
pushf
xchg
dec
or
add
or
xchg
arpl
mov
sbb
inc
jb
xor
daa
sti
and
fsubrl
jle
cmp
or
arpl
mov
test
orl
xchg
push
sahf
insb
push
cmc
stos
jb
cmpsl
out
ja
in
jmp
das
mov
jg
jns
ljmp
dec
jg
cmpb
mov
cmpsb
or
mov
lea
xorb
aam
xor
sub
pop
dec
push
add
push
cli
and
and
and
pop
jecxz
xor
adc
sub
adc
hlt
fildll
imul
add
add
mov
aad
pop
aaa
cmc
std
jecxz
clc
enter
roll
add
cmpsb
aaa
dec
add
ja
xchg
stc
lret
stos
aaa
dec
decb
arpl
cmc
xor
pop
movsb
xlat
enter
jne
mov
orl
dec
jp
popa
sbb
popa
push
jo
push
popa
push
in
dec
setae
pushw
push
dec
sbb
or
andl
icebp
mov
call
lcall
xchg
out
fistl
lods
xchg
jmp
adc
fmuls
inc
jae
in
ss
stos
fnstenv
fcoms
addr16
loope
pop
gs
clc
inc
dec
enter
notb
fs
pop
push
fcmovb
test
cmp
push
je
inc
jns
call
insl
je
test
pop
into
and
adc
cmp
iret
inc
hlt
and
dec
dec
jge
lret
mov
xchg
call
jmp
call
sahf
mov
es
add
bound
jb
test
into
sub
iret
dec
movsb
mov
mov
mov
loopne
pop
lahf
aad
cmp
orl
pop
mov
adcl
shrb
es
clc
jp
fcmovne
adc
sbb
ljmp
jnp
add
mov
jnp
rcrl
enter
outsl
fmuls
mov
mov
dec
xchg
cs
aaa
adc
int3
pop
cli
popa
lcall
es
pusha
adc
cmp
repnz
fs
loope
icebp
stos
scas
call
icebp
repnz
cmp
mov
mov
sub
repz
ret
sar
sub
adc
lret
inc
mov
call
pop
mov
mov
in
mov
aas
test
mov
and
sbb
aaa
dec
ror
jmp
adc
jbe
test
cmp
push
push
xor
rcll
test
bound
cmpsl
jmp
mov
inc
pop
pop
fidivrl
test
add
ret
lahf
push
fnstsw
and
inc
sbb
loop
pusha
xchg
lret
xor
push
dec
popf
add
mov
jge
gs
aad
pushf
lret
lahf
dec
repz
jl
cmp
in
out
aam
sbb
cmpsb
sub
mov
inc
testb
adc
inc
hlt
in
mov
pop
jae
sub
mov
ja
outsl
xchg
loopne
enter
jnp
mov
out
pop
inc
sahf
test
push
jnp
pop
mov
decb
sub
int
pop
push
or
jmp
popa
mov
mov
cwtl
imul
mov
das
jne
sub
imul
xchg
and
jle
iret
dec
fdivs
pop
xor
push
mov
xchg
mov
icebp
and
pushf
rcl
lods
jle
in
and
add
subb
inc
jno
inc
inc
bound
dec
sub
loopne
clc
dec
jg
sarl
mov
ja
outsl
mov
mov
dec
push
inc
sti
pop
mulb
sbb
xchg
push
cmp
ss
add
xlat
inc
add
test
sub
test
add
dec
xchg
xchg
in
test
push
jno
out
adc
loopne
mov
inc
xor
mov
test
sub
and
int3
fistl
ss
and
movsb
dec
jbe
sbbl
sub
test
cwtl
mov
cli
fwait
mov
aas
enter
in
jmp
xchg
xor
leave
mov
pusha
or
cmpsb
or
fs
fwait
pop
ss
push
nop
mov
hlt
aas
shlb
mov
mov
cltd
dec
xor
enter
out
dec
dec
or
insl
push
cmc
data16
lahf
int3
adc
test
in
les
loope
cmp
in
sub
mov
stos
or
pop
adc
mov
mov
jmp
movsbl
inc
scas
lds
mov
pop
out
call
xor
cld
stos
mov
and
dec
mov
fisttpll
pop
jnp
sahf
aad
jo
push
test
setb
iret
popf
cmp
mov
hlt
cmp
enter
xchg
test
ficoml
outsl
add
jp
sub
imul
cmpsb
adc
mov
loop
inc
add
int
ret
mov
sub
xorb
and
jge
mov
sbb
mov
mov
xchg
aad
mov
repz
loopne
mov
push
rcll
mov
mov
cs
scas
adc
fisttpll
sbbl
aaa
sbb
add
lret
std
pop
sbb
fcomp
and
shl
sbb
pop
mov
jb
repnz
mov
or
sti
mov
ret
mov
popf
std
xor
dec
push
inc
mov
mov
xor
sar
mov
add
call
mov
pop
daa
in
lret
sub
mov
mov
das
mov
inc
pop
and
sbb
mov
hlt
jle
inc
aaa
dec
mov
aam
dec
fsubrs
out
xchg
rcrl
aaa
cmp
arpl
js
inc
xor
dec
icebp
pop
pop
cmp
add
clc
xor
movsl
mov
jbe
cltd
jmp
and
dec
sub
mov
or
cs
insb
sbb
fwait
mov
fisubrl
out
xchg
cmc
mov
scas
movsl
and
movsb
push
push
pop
pop
stos
push
cmpsb
lahf
add
inc
mov
mov
loope
adcl
rolb
dec
hlt
scas
adc
xchg
shrl
icebp
jns
adc
cli
out
repnz
icebp
and
aam
pop
out
cmp
pop
das
and
jno
addr16
sub
rorl
outsb
rcrl
orb
or
xor
jb
cmc
push
mov
mov
add
xchg
leave
xchg
outsl
shrl
flds
add
pop
sub
cmc
sub
and
sub
test
cmp
movsb
jb
in
loope
imul
add
jle
je
repnz
gs
loopne
mov
and
out
loope
cmpsb
mov
js
and
cmp
jo
insl
insb
and
dec
and
enter
addr16
xchg
outsb
xchg
or
ss
pushf
popl
sbb
test
xor
ret
or
js
cmpsl
xchg
sbb
bound
add
jge
adc
clc
xor
mov
xor
jne
cltd
imul
fwait
pop
test
lret
cli
leave
les
in
and
jbe
repnz
mov
or
repnz
mov
jo
xlat
fld
inc
out
jbe
and
faddl
ret
inc
pop
push
aas
pop
mov
adc
pop
in
sub
out
out
xchg
enter
or
inc
frndint
mov
lret
and
cs
sahf
imul
movsb
xchg
pop
in
test
in
push
ret
testb
mov
or
imul
fwait
inc
lods
push
lods
push
cmpsb
test
aaa
mov
out
xchg
cmp
add
roll
inc
inc
stos
xchg
jns
lods
imul
add
shl
push
inc
dec
ds
bound
inc
cmp
pop
add
loope
push
cld
mov
bound
into
pushf
jmp
xlat
scas
dec
inc
stos
nop
mov
cmc
in
test
mov
mov
cmp
int3
dec
cmp
or
dec
ja
sub
mov
inc
push
and
xchg
inc
adcb
dec
lods
jl
scas
pop
sbb
mov
push
lock
xchg
insb
in
in
dec
push
aad
int
cwtl
add
dec
mov
pop
push
and
fs
pop
xchg
fldenv
jno
movsb
cwtl
cwtl
push
jmp
ljmp
fucomp
sbb
loope
loope
daa
popf
mov
mov
decl
in
pop
rcrb
shr
sahf
test
cmp
sahf
mov
mov
ljmp
sbbb
sahf
cmp
imul
fstpl
cli
fs
lret
das
xchg
loope
int
mul
dec
adc
mov
push
xchg
lock
movsl
jg
popf
or
pop
std
popa
outsb
enter
shl
stos
loopne
cmp
dec
lods
xchg
andl
ror
jb
out
ficompl
mov
sbb
xchg
outsb
mov
cmp
ret
jecxz
fs
dec
sub
out
das
fnsave
inc
stos
outsb
test
adc
mov
pop
cli
adc
xchg
adc
lea
xchg
xor
pop
xor
add
jmp
jp
int
ljmp
insl
andb
sbb
hlt
inc
out
fists
mov
stos
jmp
imul
std
xor
xor
jmp
lahf
mov
movsb
lods
dec
cmp
inc
scas
push
test
xor
cmpsb
pop
cli
dec
xchg
mov
pop
pushf
cli
cld
mov
rcrb
push
gs
dec
insl
repz
jg
mov
cltd
cli
insb
cwtl
imul
fstpt
rorl
add
pop
loop
pop
das
adc
cmpsb
scas
mov
icebp
dec
sti
clc
cltd
insb
xchg
jg
and
pushf
mov
insl
add
xchg
dec
or
mov
dec
orb
sub
inc
xchg
out
push
push
lods
dec
cltd
jae
jl
xlat
fs
mov
cmp
popf
lds
dec
jno
add
or
lods
hlt
arpl
pop
lods
cmpsl
jb
cmp
or
repz
pushf
mov
rol
pusha
pushf
movsb
dec
shlb
sti
xchg
inc
test
es
sub
cld
outsl
pushf
sub
sub
scas
sbb
rcrl
test
adc
mov
jne
rcll
adc
mov
pop
lds
stc
jbe
pop
leavew
mov
add
inc
add
lahf
jbe
mov
mov
sbb
test
shll
ds
in
iret
xchg
rol
lea
in
push
outsl
add
adc
push
repnz
das
push
sub
cs
add
adc
and
sbb
popa
mov
fistpll
les
mov
lret
jb
inc
imul
and
mov
leave
jnp
cmp
andb
pop
cltd
pop
repnz
aad
mov
inc
mov
in
inc
iret
nop
sub
push
enter
mov
push
movb
dec
jecxz
or
cmpsb
sub
movsb
sarb
je
pop
fistps
jge
movsb
fstpl
stc
hlt
cmp
iret
push
adc
xlat
stos
mov
adc
cmp
xchg
lahf
adc
imul
testl
push
outsb
rcrb
outsb
cmpsl
mov
out
into
lock
mov
xchg
movsb
scas
jecxz
ss
push
es
sub
daa
dec
cmp
icebp
scas
shlb
jne
pop
mov
pop
push
dec
cmpb
popf
mov
or
mov
scas
jo
iret
inc
or
jns
jo
inc
daa
dec
pop
xor
adc
in
pop
mov
bound
pop
loopne
mov
fcompl
test
or
mov
mov
nop
scas
scas
jo
pop
inc
mov
sbb
icebp
dec
push
cmp
cmp
inc
sbb
clc
sub
stos
or
movb
incl
adc
push
dec
sbb
dec
in
hlt
or
mov
sub
or
jge
xchg
lahf
mov
aad
xchg
adc
fwait
idiv
sub
inc
int3
add
mov
cmpsb
mov
fdivrs
call
cmpl
loopne
orb
repnz
loope
es
push
sahf
push
imul
pop
sbb
and
sti
push
aad
rclb
cltd
lcall
dec
mov
and
rcl
outsb
cmpsl
and
cmp
pop
and
xorl
pop
adc
stos
pop
cmp
nop
cld
sub
xor
cwtl
sub
enter
call
mov
push
out
push
mov
imul
fldl
mov
subb
rcr
pushl
loopne
xchg
mov
aad
sbb
mov
stc
cmp
ret
push
or
mov
pop
cli
add
and
fistpl
push
fcomps
push
and
aam
mov
mov
outsb
mov
enter
test
pop
dec
addl
ret
push
pop
push
in
adc
or
add
pop
test
jg
sbbb
push
rcr
dec
xchg
imul
popf
in
mov
sbb
insb
jnp
lock
cwtl
dec
fcoml
lods
arpl
push
repz
test
es
enter
mull
ret
and
or
cmp
or
imul
dec
xchg
mov
stos
push
ret
insl
je
lods
pop
gs
cs
xchg
sbb
xor
test
mov
mov
add
xchg
xor
jns
mov
test
in
dec
push
gs
shrl
loop
sar
jo
pushf
cld
dec
sbb
cs
sbb
fdivl
jae
push
adc
out
mov
test
lea
inc
in
sub
dec
outsb
emms
out
lock
arpl
dec
mov
mov
lea
fwait
jb
sbb
mov
pop
xor
sbb
xchg
lds
mov
sub
cmpsb
or
sub
jno
filds
pop
xchg
bound
mov
test
add
sbb
lret
inc
mov
dec
movsb
ret
jns
and
faddl
repnz
cmp
inc
adc
sbb
jmp
mov
lret
sbb
and
outsb
mov
dec
cli
inc
das
jb
pop
xor
int
jnp
cld
in
adc
les
sub
or
sti
adc
inc
inc
mov
adc
jmp
cmp
mov
pop
push
lahf
or
sub
mov
inc
or
lcall
lahf
shrl
pop
mov
sub
pop
aam
push
add
movlps
cmpsl
popa
out
cmp
dec
das
leave
bnd
repz
lret
adc
jno
mov
hlt
add
mov
jno
out
mov
or
and
sbb
insl
icebp
or
aas
sub
push
adc
sub
jp
jge
push
sub
jmp
dec
push
add
ret
mov
mov
mov
mov
dec
test
fistl
out
xchg
jne
bound
pop
pop
jl
addb
xlat
je
lcall
pop
sbb
and
cli
xor
outsb
ss
loopne
mov
cmp
mov
loopne
lcall
pop
adc
aaa
mov
ja
pop
leave
inc
sbb
and
lea
stos
daa
cmp
mov
mov
inc
rcrl
push
sahf
and
leave
popa
aam
or
shl
add
popa
or
mov
jns
rcl
adc
test
mov
scas
pusha
xor
mov
and
jne
and
test
push
addr16
and
loope
in
stos
xor
ss
inc
out
adc
xchg
roll
ret
scas
add
xchg
xor
data16
cwtl
lahf
xchg
ljmp
daa
jns
inc
mov
aas
ja
je
jnp
pop
xor
movhps
out
cmpb
sub
adc
divb
jnp
add
pop
into
push
into
jnp
shlb
cs
pusha
arpl
mov
sub
out
movsb
push
and
lcall
fsubrs
stc
push
pop
jmp
es
mov
jecxz
movsl
dec
cmp
lds
in
pushf
or
sahf
add
inc
or
sub
xchg
mov
mov
push
and
ror
andb
mov
push
sub
cmp
inc
inc
icebp
test
pop
push
mov
int3
cwtl
dec
mov
adc
in
fcoms
sbb
aaa
sub
cmpsb
iret
mov
das
mov
push
inc
xchg
test
movsl
dec
idivb
xor
iret
add
scas
lods
mov
jbe
lcall
insl
in
sbbl
dec
mov
xor
repz
andb
lahf
into
cmpsl
loope
adc
dec
dec
aad
leave
cmp
xlat
add
scas
jns
push
sub
ss
dec
mov
rol
dec
cltd
sub
mov
inc
pop
stos
out
ds
popa
dec
pushf
xchg
pop
insb
sub
and
jno
and
add
insl
push
push
cltd
in
lahf
cld
fwait
xchg
mov
xchg
divb
sub
jmp
jo
or
or
mov
dec
mov
rep
inc
pop
add
jbe
lea
push
int3
inc
lds
in
imul
mov
sub
test
inc
mov
fstpt
mov
push
dec
jp
inc
mov
mov
mov
mov
jne
dec
addr16
cmp
jmp
popf
jl
imul
out
leave
push
iret
mov
xorl
iret
or
cmp
dec
jnp
xor
xchg
mov
sbb
xor
ljmp
adc
sbb
pop
cmp
cli
int3
testl
add
int
sub
shrb
sarb
mov
cli
jns
mov
out
inc
mov
cmp
and
xchg
xchg
mov
test
cltd
mov
mov
aas
add
in
inc
pop
cmp
xlat
mov
xor
rcl
js
mov
inc
add
inc
leave
fs
scas
cmp
sub
fwait
es
mov
jb
cmp
inc
lea
outsl
pop
inc
pop
orl
push
mov
fdivrl
dec
shl
test
aaa
loopne
and
jge
push
icebp
pop
mov
lahf
sub
out
pusha
icebp
inc
xor
ss
or
gs
mov
mov
cmp
and
mov
imul
mov
sbb
xor
aaa
cli
adc
fidivl
mov
out
ss
mov
lock
dec
sub
and
or
fsubp
outsl
xor
mov
xor
pop
mulb
jnp
insb
mov
sbb
cmpsl
cs
xorb
mov
cmp
mov
ss
insl
shl
or
lods
adc
mov
out
and
adc
bound
mov
mov
xchg
inc
adc
sub
pop
push
stc
add
push
adc
xor
test
pop
sub
cmp
jecxz
push
and
xchg
repz
fsubrl
add
jg
test
push
outsl
pop
in
clc
adc
jmp
mov
mov
mov
test
jae
cmp
lret
mov
mov
push
or
or
add
ljmp
lock
stc
shl
jo
hlt
xor
sbb
mov
push
jne
out
dec
mov
pop
add
sub
jo
scas
ss
pop
pusha
adc
hlt
popa
fmuls
ret
push
or
lret
sar
outsl
stos
je
xchg
in
push
fdivrp
xlat
popf
sahf
jnp
xchg
cmpsl
adc
inc
ljmp
mov
bound
gs
js
clc
hlt
notb
pusha
bound
jns
and
sbbl
jle
popl
pusha
nop
cmpsb
insb
pop
arpl
ror
jne
pop
insb
movsl
mov
ljmp
push
pop
popf
push
aad
lock
jg
mov
mov
add
out
mov
pop
out
pop
add
popa
mov
xor
shlb
mov
push
dec
dec
in
mov
les
xchg
outsb
mov
sahf
jmp
mov
lret
je
stos
test
jae
dec
sub
das
cwtl
js
idiv
daa
out
or
out
push
add
scas
push
insb
sahf
outsb
fwait
test
or
jns
decl
cmp
jb
sub
mov
dec
inc
insb
lret
xchg
cli
cmp
push
xchg
adc
mov
sbb
fisubrs
mov
pushf
or
sub
mov
and
pusha
iret
int
jne
out
mov
ja
int3
mov
and
test
or
cmp
push
jp
arpl
jmp
fs
mov
in
mov
clc
test
lcall
dec
pop
mov
jmp
add
xor
pop
and
hlt
jo
out
xor
rcl
int
in
xor
adc
add
lods
jae
jo
out
sbb
and
lret
sbb
xchg
xor
out
js
inc
adc
add
xchg
aaa
cmpsb
push
jbe
outsb
adc
aad
push
cld
mov
popf
xor
test
icebp
cmpsl
daa
movsl
stc
jg
inc
inc
test
xchg
pop
mov
mov
cmp
lret
fcoms
in
mov
bound
xchg
sub
mov
imul
cwtl
mov
fwait
add
add
and
push
jle
inc
xor
mov
aam
aam
fidivrl
cmc
mov
rcr
into
divl
sub
mov
cwtl
test
adc
adc
pop
stos
lock
or
clc
mov
and
ljmp
inc
cmpl
mov
enter
stos
aas
push
fstl
stc
jo
imul
push
pop
mulb
adc
mov
xchg
mov
lods
lcall
and
movsl
insl
jne
jnp
xchg
cmp
leave
sti
xlat
xor
pop
mov
pop
push
popa
pop
stos
or
xchg
pop
pop
mov
inc
movb
xchg
fsubl
dec
push
ficoml
loope
dec
int3
sub
mov
jmp
scas
repnz
jge
sbb
out
andb
xchg
xchg
push
sti
cmpsl
and
cmpsb
xor
test
ljmp
mov
leave
inc
cmp
clc
jno
jp
dec
inc
lods
into
jge
pusha
sbb
movsb
pushf
push
setnp
aad
mov
dec
jbe
jns
lcall
xor
jnp
mov
inc
dec
inc
push
ss
xchg
int
lods
test
add
xchg
mov
sbb
ret
push
addr16
fcoms
cmp
push
adc
in
imul
mov
xor
cwtl
jnp
mov
jns
cltd
and
sbb
fldcw
and
ret
sbb
imul
and
icebp
mov
out
popa
ljmp
push
inc
je
push
push
sub
adc
mov
adc
inc
cmp
and
fincstp
fdivs
ss
sub
cmp
sbb
cltd
insb
clc
test
cmp
test
push
mov
adcb
cmpl
lock
enter
adc
xchg
cmp
mov
scas
sub
pushf
sbb
jmp
jl
lds
movsl
cmpsb
lcall
outsl
push
movsl
sbb
cld
cmc
inc
mov
out
aam
les
and
or
je
fcoml
lret
frstor
lds
push
lods
or
test
pop
or
sahf
sub
movsb
popa
push
in
or
lods
push
rorl
fstps
das
sub
out
dec
mov
int3
imul
mov
adc
push
jp
stos
enter
jl
lcall
jae
js
cwtl
pop
jl
sbb
xlat
hlt
and
jb
ret
movsl
or
sbb
push
and
in
addl
sbb
cmpsb
dec
push
sti
cmp
xor
ss
movl
add
add
mov
int
imul
xor
xchg
mov
sbb
lea
leave
or
pop
adc
clc
fmul
mov
mov
inc
mov
aas
aaa
push
sbb
scas
pusha
pop
mov
outsb
xchg
nop
pop
adc
loopne
mov
cli
imul
sub
lret
and
cmpsb
imul
into
sbb
clc
mov
sti
fdivrp
popf
shrl
push
jnp
in
push
xor
out
ljmp
out
call
mov
mov
cld
arpl
fsubrl
dec
fiadds
aam
xchg
mov
sarb
notl
outsl
repnz
pop
lea
mov
fwait
gs
mov
xchg
shrl
data16
outsl
dec
or
test
cmp
jbe
fwait
rorb
fiaddl
inc
iret
out
mov
mov
push
mov
dec
sub
push
and
push
popf
inc
ljmp
out
fldenv
mov
sbb
sahf
rcl
xlat
cmc
cmp
mov
mov
pop
jns
pop
xor
js
xor
es
mov
andb
data16
sbb
arpl
inc
push
inc
and
pop
sbb
test
adcl
cmc
test
xchg
pop
cmp
scas
dec
or
test
shlb
inc
push
push
cld
nop
lahf
insb
rcrb
mov
jl
xchg
mov
lods
icebp
loop
sub
hlt
insl
arpl
cmp
sbb
mov
push
jns
scas
test
and
outsb
xchg
sbb
ss
mov
daa
adc
cmp
add
data16
ret
adc
add
pop
mov
jl
mov
imul
jmp
cld
jmp
in
icebp
lods
imul
ja
cmpsb
lock
pop
inc
outsb
mul
shrb
test
test
cmp
inc
cmp
pop
outsl
jbe
cmp
fnstsw
mov
lods
jne
add
popa
iret
inc
mov
dec
dec
mov
fcompl
aaa
inc
mov
sbb
and
fiadds
xor
or
pop
popl
ljmp
in
enter
les
add
imul
or
stc
sub
cwtl
pop
les
fbld
lods
push
adc
fildll
push
ficompl
adc
sbb
inc
data16
addl
loope
in
cmp
jno
fs
test
sbb
mov
push
lahf
jnp
mov
aad
outsl
sahf
cmp
xor
mov
mov
fistps
push
jmp
cs
sbb
push
adc
inc
xchg
std
loop
adcb
test
push
stos
sub
cmp
out
cmp
mov
fisttpll
test
ss
mov
push
mov
gs
mov
out
popf
inc
cwtl
mov
push
push
sbb
pop
push
mov
xchg
imul
mov
mov
test
rcrl
jg
and
push
or
pcmpeqd
arpl
mov
fisttps
push
sub
add
arpl
mov
xor
add
mov
stos
inc
jne
pop
push
ja
adc
lret
ret
add
pop
and
jb
test
jecxz
push
iret
cmp
inc
or
jns
stc
mov
xchg
or
pop
repnz
mov
adc
adc
out
ja
data16
addl
jmp
je
popf
mov
pop
mov
test
fs
jge
out
jl
push
or
jmp
dec
push
imul
pop
stc
mov
mov
outsl
add
xor
push
cmc
push
ret
mov
lret
xorl
data16
fs
add
add
or
in
sub
mov
insb
pop
outsl
mov
xor
fnstcw
mov
jg
cwtl
fcomp
pop
jnp
cli
out
xchg
push
lock
js
mov
inc
xchg
cmp
xchg
sub
fistps
shlb
shll
jns
daa
inc
xchg
sub
ret
pop
jno
and
hlt
std
enter
scas
seta
push
mov
add
pop
jb
dec
mov
dec
jmp
lods
cmc
lret
shlb
sub
addr16
in
adc
je
add
dec
fsubp
xchg
bound
pop
sbb
arpl
into
popa
inc
daa
daa
mov
in
sub
adc
mov
lods
mov
rcrl
mov
movsl
addl
mov
shrb
jo
jp
mov
sbb
test
push
pushf
mov
loop
and
mov
push
mov
fisubl
mov
call
mov
outsl
gs
pushf
test
xchg
lock
xor
cli
jge
mov
es
pop
or
in
lods
xchg
dec
mov
mov
aam
adc
movsl
mov
mov
loope
insl
scas
dec
adc
mov
fiadds
je
jmp
mov
outsb
leave
test
push
into
sbb
dec
pusha
imul
cmp
fsts
mov
push
add
mov
inc
and
scas
push
inc
mov
into
sti
xchg
xchg
int
add
mov
outsl
rcrl
popa
pop
ja
sbb
xlat
sbb
iret
push
jae
rcr
xchg
jp
pop
shr
adc
mov
pop
cmp
cmp
and
cs
jne
in
std
xchg
pop
rcrb
loopne
movsl
mov
add
repnz
jp
jne
mov
fnsave
out
test
dec
adc
and
push
test
jns
subb
js
pusha
jae
icebp
cmp
xor
mov
xchg
push
push
leave
sahf
int3
insb
jno
mov
leave
fildl
xchg
insl
push
int
and
jnp
jo
and
xchg
xchg
or
shrl
add
out
xor
cli
scas
and
les
lods
add
mov
adc
ljmp
dec
sbbl
add
push
sub
sub
push
arpl
xchg
lcall
mov
push
jnp
daa
push
mov
cmp
out
jl
mov
aam
mov
xor
lret
cltd
mov
or
push
dec
test
mov
push
les
mov
mov
sub
sbb
popf
mov
push
fists
cmpsb
cmp
inc
int3
lret
inc
add
cltd
xor
ds
sahf
push
popa
loope
cmpsb
mov
xchg
add
xor
test
and
addr16
xchg
push
push
cs
std
and
pop
sahf
mov
arpl
jb
in
xlat
jmp
sbb
imul
leave
sbb
stos
push
ret
cmp
cli
sbb
lds
jb
call
fsubr
jnp
cli
idivb
les
cmp
sti
addb
jo
or
gs
loopne
in
pop
jge
iret
cltd
test
pop
jb
fs
mov
repz
lods
lret
pop
call
out
fiadds
mov
inc
cmpsb
out
repnz
pop
jmp
sbb
add
push
cmp
enter
mov
hlt
push
lahf
push
sub
fstpt
int3
iret
jmp
and
mov
aam
test
imul
mov
xlat
scas
les
int3
sti
xor
fwait
cmp
xor
pop
sahf
loopne
and
data16
sub
scas
and
xchg
rclb
pop
push
mov
mov
xchg
cmp
in
or
push
mov
and
aaa
movsl
stos
mov
in
jmp
cmp
or
inc
dec
xor
xchg
sbb
je
xchg
ljmp
out
movb
sub
dec
mov
mov
ror
lcall
into
xor
insb
sbb
in
mov
je
adc
and
out
and
ljmp
jge
mov
sub
sub
ja
xchg
popa
pop
dec
add
push
xchg
shrb
out
add
jmp
stos
leave
daa
dec
cmpsl
mov
ja
mov
dec
insl
inc
aam
pop
xchg
movsb
test
xchg
in
sub
dec
ss
fisubl
adc
repnz
pushf
addb
sbb
pop
xchg
xchg
or
mov
test
mov
cli
shll
jge
mov
lods
aam
jg
lock
in
cmpb
adc
out
andl
bound
dec
sbb
pop
pushf
adc
dec
out
or
or
clc
add
sub
add
sbb
sbb
sbbb
pop
pop
repnz
mov
ds
mov
fwait
in
or
sub
rcll
add
dec
add
mov
cli
pusha
push
pop
xor
aas
cvtps2pi
cmc
icebp
ljmp
mov
cld
or
jno
sub
sbb
outsb
add
push
jmp
gs
mov
pop
push
fwait
dec
mov
movsb
fldcw
faddl
cmp
inc
cmpsb
fcomps
pop
cmp
pop
ds
movsb
pop
cmpb
mov
jb
jbe
xor
add
jb
xor
nop
push
and
mov
mov
int3
mov
mov
loopne
data16
mov
sub
pusha
scas
sbb
inc
mov
dec
lock
cmp
inc
lods
mov
aas
shll
notl
and
xchg
pop
std
daa
or
jno
loop
mov
push
insl
push
add
jp
cli
fcoms
inc
in
pop
pop
push
xor
inc
cmp
stc
push
fists
or
in
xchg
inc
adc
jb
fs
into
lock
jmp
xchg
fidivs
push
xlat
cmp
mov
sub
jle
out
jns
sti
nop
and
push
insb
std
loop
mov
es
and
push
mov
push
lret
int3
xor
mov
mov
cmp
out
popw
fcomp
xchg
push
adc
sti
ss
mov
scas
jo
mov
sbb
pop
stos
sbb
out
or
movsb
pop
sti
ret
push
scas
rcrb
dec
rorb
pop
outsb
insl
ret
sbb
pop
mov
mov
dec
sarb
jge
dec
popa
std
ljmp
push
stos
mov
add
loopne
lahf
fcompl
pop
add
pop
aam
pop
sbb
dec
sub
add
push
ljmp
stc
and
mov
je
mov
adc
xor
repz
jg
in
jnp
lods
shrb
addl
fnstcw
enter
sbb
mov
jecxz
pop
lock
push
adcl
dec
repz
mov
xchg
cld
cmpsb
mov
ss
add
push
or
gs
xor
nop
sub
mov
add
pop
xchg
cmp
pop
ret
pop
fsubrs
divl
cmpsl
jbe
mov
aad
daa
push
out
sahf
push
pop
fstpl
xor
ret
dec
dec
fsubs
or
cs
ret
inc
mov
cltd
and
repnz
fldl
pop
jbe
jne
lahf
fidivl
les
ljmp
mov
fisttps
fadds
inc
adc
mov
test
pop
add
out
enter
mov
outsb
or
cmp
push
imul
loope
mov
jmp
xor
jmp
data16
outsl
sbb
rclb
mov
mov
scas
loope
add
xor
xor
mov
adc
and
push
and
imul
pop
pushf
out
pop
dec
mov
outsb
pushl
stos
into
fbld
out
push
dec
mov
add
xchg
pop
mov
ret
addr16
add
das
mov
arpl
or
lods
call
pop
sub
mov
cltd
adc
mov
jno
div
jecxz
xlat
pop
loopne
push
movl
dec
loope
mov
inc
cmc
jne
addr16
mov
nop
jns
xchg
mov
or
push
repz
jae
mov
jbe
pop
pop
mov
push
sar
popl
pop
fisubs
or
jp
in
orl
xchg
mov
cmp
movsl
push
xchg
ficoms
out
push
outsb
dec
fmuls
push
stc
add
push
cltd
imul
inc
and
sbb
pop
xchg
ror
jecxz
shlb
add
xlat
inc
test
subb
andb
ret
jge
xlat
cmp
out
adc
inc
xchg
mov
in
call
ljmp
or
mov
clc
add
cmc
sbb
xchg
bound
es
jg
push
je
pop
push
jns
test
jb
nop
idivb
jns
insb
out
dec
daa
jl
jecxz
dec
mov
sbb
mov
jge
repz
mov
and
loope
mov
push
and
outsb
lods
mov
fidivrl
push
not
mov
enter
aaa
mov
add
mov
cmp
hlt
jg
sub
dec
mov
in
fstl
lret
pushf
sbb
cmp
mov
dec
xor
idiv
jmp
pushf
and
dec
fdivrl
jns
fwait
out
scas
call
push
mov
loop
adc
dec
mov
fs
sbb
sub
bound
push
pushf
icebp
popa
fisubl
push
and
jnp
xor
pop
aam
rolb
fwait
push
jnp
aam
dec
test
xor
stos
mov
sbb
fnsave
cmpsb
push
pushw
cld
scas
xor
fdivs
adc
xor
fisubl
push
and
jp
leave
pop
xor
dec
dec
cmc
adc
into
outsb
in
idivb
sbb
cmc
or
out
adc
mov
xchg
sti
enter
mov
mov
movsl
test
dec
jmp
out
push
int
mov
aam
aas
popa
fcompl
stc
test
adc
and
lret
ljmp
mov
sub
or
cmp
xchg
ret
or
cmpsb
pop
aam
fsubrp
xchg
xchg
sarl
push
out
jno
jle
rcrb
adc
inc
pop
xor
cmp
and
add
cmp
iret
cmp
dec
adc
mov
popa
xchg
or
aas
adc
sub
mov
jae
ret
push
dec
jl
andb
jne
loop
popa
cwtl
sub
pop
jne
add
dec
ret
inc
sbb
jp
lods
pop
out
xor
add
aaa
rcl
scas
xlat
cmp
mov
adc
shll
cmp
mov
xlat
in
add
call
ret
aam
scas
inc
les
cld
repz
das
jle
idivb
sbb
pushl
jb
loope
xchg
mov
stos
mov
jno
fldl
push
and
cmp
pop
fdivrs
call
mov
inc
insl
pop
insl
into
popa
dec
or
push
bnd
outsl
ret
inc
popa
or
aad
fcoms
adc
in
scas
pop
out
lods
scas
stc
sahf
imul
mov
fstpt
xchg
lret
outsl
cmp
fildl
add
out
lcall
ret
repz
push
sub
or
mov
cltd
mov
xchg
fldz
jns
std
sarl
repnz
xchg
xor
insb
out
inc
fsubr
xchg
mov
repnz
mov
addr16
mov
les
mov
fwait
dec
popa
test
movsl
movsl
pop
iret
mov
shlb
adc
and
cltd
popf
fs
cmp
mov
mov
arpl
dec
popa
call
adc
push
aam
fs
test
add
jmp
xor
stc
xor
xor
push
adc
pop
test
or
xchg
jae
ret
into
and
aam
outsb
adc
xchg
cmp
fisubs
dec
ljmp
loop
fs
or
pminub
sub
sub
push
sbb
add
ja
sbb
xor
or
push
inc
in
iret
add
test
fildll
lret
dec
push
mov
scas
ljmp
xor
cmp
ret
dec
push
lods
jne
imul
inc
or
mov
rcr
mov
xor
jbe
cmp
aaa
or
and
mov
negb
mov
and
pop
arpl
push
xchg
jns
call
rcr
in
in
testl
push
not
lahf
inc
dec
es
or
fidivrl
xchg
pop
cs
cli
aaa
aaa
and
movsb
dec
inc
pop
sbb
fwait
lcall
cmc
mov
xor
push
dec
jae
js
fildl
mov
daa
xchg
mov
and
sarl
arpl
in
inc
pop
in
mov
popf
popl
scas
arpl
sub
daa
mov
push
ja
and
lcall
and
icebp
loope
call
scas
or
fldenv
sub
inc
cmp
mov
mov
insb
mov
push
mov
iret
pop
fcos
aam
cmp
inc
dec
mov
hlt
mov
pushf
imul
mov
xchg
test
insl
cli
mov
lret
sbb
dec
out
lea
fsubrl
dec
xlat
pop
inc
push
lods
inc
pop
fsub
sbb
out
add
inc
ret
adc
push
pop
enter
cmp
sub
fldenv
inc
lcall
add
mov
icebp
fisttpll
aad
jecxz
sahf
xor
ja
or
sahf
lea
outsb
movsb
jne
cli
jns
adc
lcall
xor
repz
scas
push
inc
dec
pusha
fbld
jb
dec
push
dec
je
or
loop
push
add
fdivrl
sarl
rcll
add
lea
push
lea
cmp
add
clc
mov
fmuls
cmc
out
cmpsb
fldcw
icebp
sahf
mov
ret
aad
push
push
adc
cld
lock
sub
jns
mov
sti
popf
add
sub
es
sub
out
and
rcrb
shll
mov
jb
enter
xchg
sub
imul
mov
out
imul
jbe
lahf
rolb
xchg
jbe
xor
push
sub
xchg
sub
jge
lret
das
insb
sarb
add
jbe
jnp
je
loop
imul
std
and
lcall
xor
cmpb
mov
les
pop
sub
out
int
repnz
test
aam
call
insb
mov
enter
sub
je
fisttps
js
sub
lret
mov
cmp
icebp
mov
sbb
dec
fmull
cmpl
lds
jecxz
jb
clc
pop
movsb
test
shll
xor
enter
cmpxchg
and
sti
dec
int3
and
outsb
je
push
add
test
jnp
subl
xchg
pusha
adc
xchg
mov
mov
ljmp
add
fnstcw
sahf
fildl
xchg
or
xchg
cmpsl
mov
dec
lea
into
adc
ljmp
dec
fldl
mov
aas
and
mov
aam
inc
test
push
jmp
lcall
stc
or
and
test
in
inc
ret
jmp
imul
testl
aas
push
imul
xlat
leave
fwait
cmc
adc
sub
mov
jl
aaa
or
mov
adc
fwait
mov
or
cmpsl
lods
add
popa
dec
mov
fmuls
and
push
dec
sub
and
int3
data16
lds
je
enter
jl
push
push
adc
and
jge
xor
xchg
enter
pusha
into
icebp
and
imul
dec
imul
fsubrp
pop
mov
pop
push
std
test
lret
out
push
insb
call
and
arpl
push
xor
incb
scas
fwait
jne
push
ds
jle
jmp
out
out
mov
pop
scas
dec
scas
imul
es
mov
xchg
xor
mov
mov
imul
lea
sti
inc
cmc
xchg
sbb
jbe
jl
jne
je
sbb
jmp
movsl
push
insl
lods
test
scas
divl
dec
in
jnp
cmp
add
and
inc
loopne
dec
lret
ret
lods
testb
xor
cld
cwtl
int3
das
lods
pop
jae
add
pop
inc
inc
addr16
test
btcl
mov
ret
xlat
push
jl
add
sub
jnp
dec
int3
mov
inc
lds
fwait
aam
pushf
ss
adcb
lahf
mov
mov
out
jbe
lods
sub
test
inc
or
pusha
lahf
test
cmp
sub
push
xor
addr16
mov
out
call
shrl
in
inc
fwait
mov
push
repnz
stos
sbb
cmp
push
or
shrl
dec
fcompl
int
cmpsb
mov
jle
or
dec
xchg
pop
bnd
inc
test
add
ljmp
mov
push
lcall
stos
inc
addr16
xchg
into
lods
nop
jns
and
in
inc
test
inc
push
jp
arpl
mov
int3
int3
int3
mov
sbb
and
pop
jo
adc
sbb
mov
inc
cmp
outsl
leave
sbb
adc
jnp
xor
adc
aad
je
notb
sbb
dec
mov
jnp
mov
cwtl
lahf
fwait
push
jmp
imull
sahf
in
mov
outsb
stos
mov
or
call
or
jp
scas
loope
push
es
add
in
lock
sbb
and
push
jb
out
out
insl
jns
lock
arpl
pop
ds
cltd
jmp
push
ljmp
push
and
out
orl
sbb
mov
sahf
test
sarl
jbe
cmpsl
scas
outsl
rclb
mov
andb
pushf
int3
cwtl
mov
ret
lods
stos
mov
sbb
or
sub
cmp
xchg
cmpsl
enter
push
inc
inc
fnstenv
lret
movsl
fs
cmpb
mov
adc
and
fsubl
lcall
xor
xchg
shl
aad
jge
pop
cmp
jbe
or
inc
jne
adc
mov
xchg
fprem
out
adc
inc
pop
mov
jg
mul
or
xor
inc
adc
ffree
idiv
dec
inc
popf
push
mov
push
push
cli
xor
enter
mov
sub
push
hlt
xchg
mov
dec
arpl
insb
inc
pop
xor
mov
jmp
aas
ljmp
and
clc
pop
add
push
fcomps
inc
xchg
mov
or
jbe
pop
pop
or
mov
ds
add
adc
xor
mov
pusha
inc
ret
lea
jmp
mov
push
insl
dec
loop
fistl
inc
adc
jmp
dec
mov
xchg
and
and
or
adc
mov
aaa
jns
pusha
ret
jge
or
push
or
gs
in
push
sbb
gs
jg
inc
inc
cs
hlt
popf
scas
arpl
xor
fildll
std
push
sub
std
add
jle
add
lahf
movq
mov
jae
scas
inc
call
push
mov
jmp
in
mov
js,pn
xor
in
test
jne
cmp
mov
iret
cs
bound
push
push
or
xor
and
jp
std
xchg
pop
fbstp
mov
dec
mov
pop
dec
rclb
jle
movsb
mov
out
aas
inc
and
mov
dec
cli
movsb
cmpl
add
shll
push
shrb
cmp
ja
or
adc
push
sti
aad
aaa
push
mov
std
inc
inc
dec
in
inc
std
popa
popf
mov
ja
cld
jne
push
dec
jge
xor
pop
inc
hlt
in
sub
sbb
push
lods
sarb
inc
pop
jnp
add
or
mov
jns
mov
pusha
inc
xchg
lods
dec
dec
xor
lahf
fiaddl
cs
adc
xor
sbb
jp
mov
push
lret
std
shlb
sbb
mov
xchg
or
mov
inc
push
jne
repz
in
mov
leave
lock
pop
sbb
xchg
cmp
inc
andb
xchg
dec
jae
out
cmpsb
pop
mov
filds
in
mov
fidivs
arpl
dec
cmp
icebp
push
imul
jnp
cmpsl
pop
adc
andb
mov
icebp
les
repnz
dec
popf
jns
push
adc
insb
xchg
add
es
ficompl
xchg
push
outsb
divl
inc
shlb
jg
div
sub
push
scas
scas
sbb
inc
inc
mov
mov
imul
rol
push
mov
jnp
cltd
xchg
mov
inc
mov
inc
mov
ret
jp
xor
push
mov
sub
jp
inc
fsubl
inc
jae
call
sub
icebp
cmp
leave
sbb
cwtl
push
in
xchg
mov
xor
xlat
fisubl
mov
cmc
push
pop
ja
out
sbb
es
mov
test
insl
push
je
pop
data16
sti
cmp
pop
pop
push
ss
adc
pop
xchg
mov
cmpsb
jg
pusha
je
in
inc
mov
pop
mov
fldenv
sbb
inc
mov
jp
inc
lods
xchg
xchg
fsubrs
out
lret
out
decb
push
mov
sbb
jne
cmp
addr16
jnp
iret
adc
outsl
jmp
pop
out
rcll
roll
lods
cmpsb
mov
scas
pop
xor
es
push
cwtl
lret
int3
clc
jg
inc
jmp
and
loop
xchg
dec
fdivr
mov
inc
stos
ficoml
rorl
pop
inc
hlt
aaa
cmp
dec
ficomps
outsl
or
mov
fucomip
fwait
mov
mov
pop
xchg
lret
push
bnd
dec
fmull
mov
or
ja
pop
in
scas
inc
pop
in
push
add
jnp
dec
pushf
cmc
jg
filds
rorl
cs
ret
mov
out
arpl
aas
hlt
mov
rorl
jmp
push
jecxz
fwait
clc
stos
add
dec
popf
gs
stos
or
push
push
dec
xor
dec
or
pop
xor
dec
xchg
dec
mov
stc
adc
mov
pusha
xor
loop
bextr
pop
inc
fnsave
cld
adc
xor
add
mov
das
xchg
outsl
sarb
xorl
cmp
xchg
js
xor
out
xor
dec
addb
push
xor
int
ret
sbb
lea
loope
push
push
frstor
pushf
sbb
xlat
rcll
call
insb
cltd
icebp
cwtl
add
fld
cmp
mov
test
xor
dec
js
cmp
adc
or
sbb
test
std
or
xor
sub
and
cmpsl
sbb
cli
ljmp
mov
xchg
cmp
mov
mov
andl
push
pop
dec
or
inc
inc
add
add
popa
fbstp
jae
pusha
xchg
ficoms
add
in
xchg
shll
cmp
clc
or
lds
sub
ja
aas
repz
dec
mov
sub
add
mov
fwait
inc
cli
test
push
popf
fidivs
mov
outsl
aad
mov
fisubrs
enter
jnp
ss
pushf
clc
cmp
cwtl
xor
sub
notl
pushf
jecxz
call
loope
aaa
clc
or
dec
jmp
jmp
outsb
mov
outsb
pop
mov
xchg
sbb
in
pop
movsl
pop
imul
xor
xchg
push
and
push
or
and
dec
adc
rclb
in
dec
sub
sahf
xor
sarl
cmp
jl
orl
fbstp
push
lret
aad
call
mov
xor
enter
sbb
sub
mov
pop
and
or
push
int
scas
loop
mov
adc
andl
mov
sahf
ds
inc
adc
mov
mov
lods
push
cltd
les
and
iret
clc
mov
inc
leave
test
daa
cmpsb
mov
pop
mov
xchg
inc
pop
adc
int3
inc
in
or
or
cmp
fldenv
addr16
xor
sti
add
mov
roll
jmp
push
test
cmp
cmp
xchg
push
mov
mov
push
pop
seta
and
cmp
pop
add
out
adc
mov
adc
in
mov
lock
add
daa
gs
popa
pop
cmp
mov
push
movsl
sbb
dec
lret
add
pop
sub
add
adc
cld
imul
imul
pop
loope
jns
cmpl
loope
mov
and
je
aad
cld
inc
outsb
jmp
or
dec
lods
xor
ss
sub
mov
rorb
ljmp
sbbl
lret
adcb
push
fwait
sti
mov
inc
imul
dec
mov
or
popf
ljmp
fadds
negb
lods
xor
mov
jb
fsubl
cs
mov
mov
stos
cmc
arpl
sbb
dec
mov
mov
ss
mov
push
pop
xor
mov
cmpb
rorb
add
adc
lahf
notb
outsb
cmc
and
sbb
push
push
mov
pop
clc
mov
ss
dec
lods
ficoms
and
push
enter
fistpll
inc
mov
sbb
rcrl
adc
scas
pop
in
fchs
xlat
jnp
cld
xchg
mov
rcl
lods
mov
pop
out
jmp
mov
ret
jns
fsubs
outsl
fsubr
test
xchg
and
fcmovnbe
stc
cmc
xchg
cs
and
xlat
push
test
push
nop
pop
xchg
ljmp
cwtl
lret
mov
test
into
inc
mov
pop
ljmp
mov
pop
add
aad
push
inc
push
ret
pop
dec
in
lods
inc
add
pop
sbb
mov
dec
xor
enter
xor
or
mov
movhps
dec
mov
cmp
aas
xor
sbb
jb
dec
add
cmp
mov
or
add
inc
scas
out
mov
nop
sti
flds
push
inc
ljmp
mov
pop
or
hlt
mov
lods
pushf
enter
inc
es
enter
mov
fwait
popa
popf
pusha
xor
and
scas
divb
push
xor
dec
das
movnti
jb
in
or
push
cmp
ret
fadds
mov
lcall
in
mov
xchg
push
shrl
adc
hlt
fiaddl
mov
xchg
mov
xchg
push
push
add
hlt
fnstenv
fcomp
mov
xchg
bound
pop
sbb
dec
cli
cmpsl
inc
inc
mov
xchg
cld
push
cld
cmp
xchg
ret
orb
out
inc
pop
daa
sti
pusha
es
xor
mov
fists
stc
sbb
insb
or
push
cmp
xor
mov
push
fnstcw
fisttpll
add
inc
mov
test
rol
xor
push
mov
shlb
movsl
repnz
repz
mov
jle
dec
lods
cmp
sub
mov
ret
adc
stos
into
and
notl
outsb
pop
divl
mov
stos
lahf
pop
jmp
add
stc
jmp
inc
push
xchg
mov
cmp
out
dec
pushf
rclb
or
inc
xchg
jl
push
mov
ret
das
mov
lods
mov
cmp
lods
mov
addr16
lahf
pop
pop
iret
fsubrs
ds
pushf
xor
mov
hlt
leave
mov
pop
lea
hlt
notl
ds
lahf
mov
inc
nop
add
push
push
pop
mov
out
jns
mov
sarl
aas
testb
and
cmc
push
sub
push
loope
iret
xchg
push
out
lret
out
xor
mov
ja
xlat
sbb
fstps
add
dec
fdecstp
sub
shl
cmpb
daa
and
push
push
repnz
popf
les
jbe
add
jnp
lods
outsl
mov
mov
pop
mov
cli
outsb
mov
dec
outsb
and
jge
pop
rcrb
shll
dec
inc
inc
cmpsl
lret
pop
ret
in
xor
jle
andb
push
lcall
ljmp
loopne
cmp
shrb
in
fsubrs
or
cmp
nop
jne
dec
roll
xchg
fs
cmp
inc
xchg
dec
push
jmp
push
addb
add
jbe
ret
mov
fildl
lea
cltd
jo
fwait
and
adc
fcomip
call
loopne
cs
pop
cs
xor
fsts
repz
mov
outsb
xor
push
adc
push
mov
push
inc
pusha
dec
fdivl
dec
mov
sbb
and
mov
mov
pop
cmp
mov
pusha
push
pop
xor
ds
pop
jnp
or
xchg
xchg
sbb
push
adc
lods
ror
outsb
xchg
in
sub
inc
movsl
js
pop
mov
or
sti
cmpsl
insb
dec
add
lret
cmp
loop
fwait
push
lds
adc
xchg
inc
rclb
popfw
pushl
popa
push
inc
push
dec
mov
shrl
sub
cs
and
leave
mov
fs
inc
and
pop
mov
jno
jo
mov
jl
outsl
pop
cli
scas
cwtl
dec
std
imul
test
repz
add
out
mov
cmp
xchg
movsb
mov
inc
mov
mov
xchg
push
stos
leave
jbe
jb
mov
lds
push
insl
jae
mov
cmp
mov
cmp
mov
fwait
insl
pop
lods
dec
cmp
and
cld
xchg
lods
shl
sbb
and
int3
lods
ret
and
dec
arpl
movsb
bound
xchg
inc
insb
scas
in
ret
cmp
cs
sub
mov
mov
cmp
sub
fsubs
outsb
mov
jns
add
out
pop
pop
out
daa
xchg
int3
cmp
sub
addl
push
jne
sub
lods
mov
mov
pushf
je
scas
fidivrs
fwait
add
aaa
lock
pop
leave
cwtl
push
mov
mov
jle
out
pushf
in
mov
enter
cmp
adc
test
adc
push
nop
clc
cmpsl
lods
push
outsb
loop
idivl
stos
push
es
je
mov
ret
les
dec
mov
dec
cwtl
mov
add
popf
shl
xchg
cmp
inc
mov
and
cmp
repz
int
jp
xchg
fildl
mov
scas
btr
push
jge
xchg
fldl
mov
fbstp
dec
xor
stc
ja
mov
lea
mov
lea
push
sahf
or
push
imul
iret
push
mov
repnz
mov
lock
and
test
dec
jns
xchg
or
in
scas
loope
pop
das
mov
mov
pop
sub
mov
adc
mov
cmp
shl
jecxz
mov
pop
fcmovu
cmpb
inc
cmc
jbe
sub
ljmp
shll
mov
push
nop
mov
lods
int3
movsl
mov
cwtl
cmpsl
add
lods
shr
inc
xchg
dec
or
ss
hlt
or
sbb
xchg
push
jg
xor
ja
push
stos
inc
pop
imul
lret
orb
cmp
xchg
pop
pop
and
fidivs
sbb
dec
js
fnstenv
lret
pop
xchg
jb
cmp
jmp
ss
cs
jae
push
xor
popf
jecxz
loope
in
jecxz
mov
pop
scas
push
mov
pushf
sbb
les
jmp
test
lcall
cmpsb
loope
lds
sub
cltd
hlt
outsb
sbb
adc
std
pop
xchg
fldcw
sub
mov
push
mov
sbb
fsubrs
mov
lock
cmpsl
xchg
push
clc
call
ja
pop
test
std
movb
jb
jbe
movsl
in
je
lret
and
fnstcw
inc
mov
inc
and
pushf
mov
sub
hlt
jle
mov
xchg
mov
cli
ja
jbe
cltd
pop
rol
adc
popf
xchg
mov
pop
sbb
movsb
test
lock
mov
cmp
insl
and
mov
fdivrl
pop
lods
cld
adc
dec
ret
pushf
fnop
sub
lock
popf
jne
idivb
pop
jecxz
cmpsb
es
xor
and
outsb
xlat
or
addr16
ss
cs
dec
insb
sub
fsts
cltd
addr16
test
js
lret
mov
mov
pop
enter
shl
mov
sbb
loop
loope
lea
xlat
pop
push
cli
orb
jecxz
loopne
inc
call
imul
lock
cs
jg
sbb
push
rorb
sti
mov
jecxz
xorb
sub
adc
cs
lcall
sahf
mov
or
ret
xadd
cmc
int3
xchg
mov
test
push
push
and
insl
pop
or
imul
xchg
sbb
rorl
and
cmpsl
xor
es
rorb
jns
mov
or
sbb
in
mulb
mov
sub
lock
in
lahf
adc
arpl
or
insb
sbb
mov
mov
je
jle
loopne
jns
clc
adc
pop
scas
mov
push
daa
mov
add
addb
cmp
or
fidivrl
inc
movhps
jmp
xchg
mov
pop
add
outsb
xlat
jl
xchg
outsl
adc
shlb
and
shlb
xchg
mov
sbb
sbb
jecxz
and
scas
mov
jo
mov
nop
push
xchg
sbb
popa
movsb
repnz
sahf
xor
jae
repz
cmp
inc
inc
outsl
ret
lds
mov
mov
cmc
mov
mov
and
and
inc
sub
mov
pop
cs
pushf
scas
divl
nop
stos
out
add
lods
pop
mov
mov
movsb
dec
and
stos
push
popf
xchg
arpl
test
push
ja
sub
push
dec
xor
or
cwtl
in
cmp
mov
adc
out
jl
fstpl
pop
ret
adc
mov
nop
and
adc
ret
pop
dec
bound
rclb
out
jecxz
loopne
push
int
and
sub
icebp
gs
shll
cmp
std
mov
in
adc
pop
sbb
jge
jge
cltd
push
jno
icebp
repz
sbb
sub
popf
mov
ret
mov
fs
xlat
std
into
in
jnp
mov
loop
mov
mov
cmpsb
scas
pop
loopne
mov
inc
fnstenv
sub
ds
fucomp
mov
cwtl
mov
push
pusha
xlat
aas
pop
nop
sbb
fmull
mov
pop
jle
xchg
lret
mov
ds
sbb
push
je
mov
rcl
in
lock
pop
jne
jp
lods
add
push
lock
test
push
sub
loope
ficoml
push
cli
xchg
cmp
jg
aad
in
iret
mov
xchg
movsl
pop
jl
sub
outsb
jns
bound
adc
or
divb
push
xor
sub
mov
inc
pop
push
test
dec
mov
pop
insb
clc
jg
mov
add
jle
push
fmul
rcrb
mov
ja
jmp
mov
int
mov
popa
in
or
clc
xchg
mov
lds
repnz
cmpsb
and
mov
call
ret
xchg
mov
sahf
sbb
clc
pop
sub
inc
or
or
pop
push
mov
fidivrl
or
aas
bound
insb
shrl
push
jmp
or
shrl
movsl
clc
leave
mov
push
mov
into
mov
pop
pop
out
fwait
pop
clc
or
outsb
test
in
in
inc
cwtl
mov
into
inc
xchg
mov
popl
enter
repz
pop
pop
xor
or
cmc
loope
adcb
mov
js
and
aam
sbb
mov
insb
pushf
xor
jae
cmp
sbb
inc
arpl
push
or
mov
test
inc
pop
or
xchg
mov
adcl
in
scas
push
jns
ret
data16
test
pop
in
jo
int
mov
sub
loopne
scas
in
jo
jno
pop
jbe
test
pop
and
inc
push
cmpsl
fisttpll
inc
arpl
arpl
push
mov
mov
movsl
mov
push
and
ficompl
fldenv
sbb
add
aaa
add
push
js
push
mov
sti
leave
addr16
addr16
pop
mov
lahf
mov
dec
inc
xchg
repnz
icebp
fst
lea
add
mov
or
lret
ret
mov
int3
fcmovbe
add
jo
in
push
cli
outsl
test
sub
xor
xchg
mov
icebp
cwtl
xchg
cmpsl
push
cltd
pop
ds
aas
or
stos
sahf
xchg
jae
add
popf
mov
sarb
xlat
iret
out
jl
es
movsb
outsb
lods
xor
jge
les
ljmp
movsb
pop
sub
and
ja
push
and
inc
lods
and
mov
aas
fcomps
mov
and
pop
idivl
insl
add
sbb
cs
cmp
push
loopne
push
movq
push
pop
cmp
cmp
inc
and
or
push
cmpsb
ret
je
les
cld
dec
loope
cmp
fstps
xchg
sbb
das
adc
jge
adc
push
fsts
dec
imul
mov
cmp
xchg
inc
xor
mov
xchg
xchg
add
insb
div
aaa
xor
xor
inc
js
cmp
xor
lret
dec
loop
xlat
inc
insl
fsubrl
into
push
in
dec
push
cli
mov
pop
xor
xor
cs
lret
jmp
aaa
xor
imul
xchg
dec
mov
or
sub
sub
push
and
je
mov
ret
mov
adc
sub
push
push
pop
test
xchg
add
inc
sbb
out
xor
mov
mov
cmc
sbb
aad
aam
or
sub
test
movsb
mov
xchg
shlb
test
sub
pushf
push
adcl
xchg
pop
push
adcb
pop
push
mov
jo
mov
xchg
enter
dec
sub
jle,pt
imul
call
out
andl
out
jne
fs
adc
push
jns
faddp
into
mov
xchg
scas
sahf
out
jecxz
out
sub
dec
xchg
test
sbb
dec
aad
mov
gs
std
dec
and
push
xor
pop
ficoms
dec
cli
mull
add
adcl
les
fnsave
mov
and
hlt
inc
push
test
or
orb
fs
adc
cld
pushf
sbb
jp
sbb
xchg
inc
and
pop
dec
movsb
push
insl
lahf
movsl
cmp
test
mov
adc
jnp
mov
fildl
mov
mov
jecxz
daa
mov
adc
pop
sub
sbb
inc
out
xor
scas
out
pop
sbb
sar
loop
and
push
dec
xchg
pop
fwait
jb
int
sbb
lock
push
add
decb
xor
sub
mov
out
jb
push
jae
in
cmp
jl
fs
jg
add
lret
movsb
sbb
test
xor
and
call
or
test
aas
adc
dec
inc
stos
adcb
adc
push
cmpsb
leave
sub
es
cmpsb
sub
sti
sub
int3
jl
hlt
adc
xchg
nopl
sub
inc
loope
and
push
dec
mov
arpl
stc
mov
gs
imull
into
adc
add
scas
mov
popa
adc
hlt
and
add
fs
test
add
push
inc
shl
cs
in
clc
out
testb
pusha
pop
dec
inc
daa
mov
ja
aam
xor
scas
dec
fdivl
lea
inc
dec
imul
movsl
les
arpl
insb
adc
adc
add
pop
rcrb
dec
fnstsw
push
imul
push
add
add
cwtl
incb
adc
pushf
ret
push
cld
stos
mov
jecxz
shlb
lods
pop
out
test
stos
fucom
add
mov
sub
insl
leave
xchg
mov
in
add
dec
stos
cmc
aad
scas
inc
aad
popf
jg
or
bound
outsl
jae
mov
fwait
insb
mov
je
inc
xchg
mov
mov
jns
icebp
xchg
sbb
sbb
jecxz
sub
loop
push
dec
test
sbb
jl
sub
push
rolb
loop
popa
mov
pop
aas
loopne
push
mov
enter
pop
data16
or
jl
jbe
jl
lcall
jl
jo
inc
std
ss
fcmovne
insl
cmp
jb
sub
lgs
dec
jecxz
push
adc
outsb
imul
and
or
lret
fcomps
in
stos
cwtl
dec
mov
test
mov
std
mov
out
mov
aas
cld
nop
mov
insb
jne
mov
jno
jno
adc
push
arpl
repnz
pop
mov
mov
in
test
push
ror
push
das
loope
popf
mov
imul
into
mov
insl
dec
and
imul
insl
or
arpl
add
aas
dec
mov
inc
mov
pop
daa
and
imul
mov
jmp
cmp
add
mov
sbb
aad
mov
dec
movsl
ret
loop
cmpsb
gs
lcall
and
sbb
jo
repnz
pop
in
out
xor
jmp
dec
inc
sbb
fsubp
dec
fs
mov
data16
enter
out
test
addr16
imul
xor
fisttpll
jne
das
fdivs
fbstp
cmpb
aam
loope
outsl
fisubl
fildll
cs
mov
add
sbb
dec
les
xor
out
sub
ja
sbb
push
inc
aad
ljmp
push
push
xchg
xchg
fwait
mov
popa
les
sub
pop
push
call
in
jecxz
pop
jmp
outsb
icebp
cld
push
push
fucom
add
pusha
int3
pop
sbb
dec
and
dec
imul
push
mov
lret
pop
mov
roll
mov
enter
inc
rcl
les
sub
out
add
cs
cld
inc
fsubs
dec
push
int
pushf
xchg
cmp
ljmp
xor
mov
hlt
cld
call
pop
movsl
mov
xor
sbb
mov
dec
js
and
es
add
mov
push
cmp
ljmp
mov
mov
pop
inc
adc
push
jnp
stos
xchg
cmp
pop
mov
fcmovnb
mov
sbb
outsl
scas
or
loopne
stos
out
sbb
shll
in
test
stc
cld
mov
push
mov
inc
or
mov
pop
repnz
add
jnp
shr
dec
push
pop
ffreep
movl
lea
bound
rol
in
push
je
rcrb
subl
rcll
fisubrl
clc
xchg
mov
add
pop
sti
cld
dec
cli
jmp
add
fdivs
xchg
sub
pop
movsb
cltd
or
pop
inc
out
push
mov
xchg
js
roll
out
pusha
dec
cld
pop
cli
pop
and
aas
call
push
pop
dec
fadds
cmpsb
imul
or
lcall
jb
stos
in
pop
or
mov
xor
push
push
xchg
mov
jmp
lret
and
pop
scas
mov
jae
cmpsb
dec
xchg
lret
xchg
sub
adc
mov
out
enter
mov
pop
stc
sbb
push
jne
fwait
negl
test
fidivrl
and
ret
add
pop
dec
inc
ret
xor
cmpsl
push
mov
cltd
inc
stos
fsincos
add
push
jo
mov
xor
stos
cmp
sti
push
pop
pushf
cmpsl
sub
dec
cmp
orb
out
mov
bound
mov
std
sub
xor
or
mov
std
cmp
outsb
mov
cmp
imul
pushf
xchg
cmp
int3
mov
push
mov
xchg
and
data16
inc
xchg
and
mov
sti
aaa
mov
xchg
mov
outsl
push
daa
push
sub
shr
orl
cmp
imul
mov
mov
aam
ljmp
cwtl
int3
push
outsb
mov
sbb
shll
adc
push
mov
lret
cmp
movsl
mov
stos
outsb
xchg
pop
xchg
out
push
sub
addb
out
xchg
jle
xchg
xchg
lods
test
xor
repz
xchg
adc
sub
inc
pop
pop
xchg
fisttpll
in
arpl
sub
adc
pop
neg
adc
xchg
arpl
test
lods
sahf
jne
addl
push
lds
dec
add
sub
int3
out
jnp
and
or
imul
daa
jns
jge
cs
xchg
cld
sarl
in
push
mov
mov
and
xlat
cld
int
mov
lret
xchg
movsl
cmpsl
cmp
out
ds
mov
cli
inc
push
add
xchg
inc
popa
jne
lahf
xchg
jecxz
ret
in
aad
andb
adcb
xchg
fbstp
or
mov
push
sbb
fmul
std
mov
sub
ljmp
repnz
mov
nop
adc
mov
rcll
sbbl
stos
pop
push
pop
jno
lret
push
pop
fld
dec
call
xabort
dec
rep
jl
sub
mov
cmpsl
push
xor
and
jle
fisubrl
pop
pop
push
inc
dec
push
mov
and
push
or
mov
add
cmpsb
mov
mov
push
imul
cmp
adc
and
push
dec
adc
or
sub
aas
pop
mov
aad
mov
and
xlat
sub
add
mov
push
push
cwtl
adcb
stos
andb
xchg
xchg
fldt
cmc
and
and
in
jae
imul
scas
testl
in
pushw
clc
mov
push
or
pop
mov
in
insl
jecxz
mov
in
or
fcomps
jp
scas
inc
lea
and
rclb
mov
into
ret
call
and
xchg
fbld
aas
or
cwtl
pop
les
sub
movsb
stc
xor
adc
scas
movsl
shl
push
mov
lock
das
jbe
xor
and
test
incb
cmpsl
or
clc
sub
enter
call
sbb
pushf
and
movsl
pop
inc
scas
push
sbb
or
sbb
das
aad
jg
push
cmp
mov
inc
or
or
cltd
into
fistpll
push
ss
push
jmp
fdiv
jecxz
in
cmp
or
repz
leave
add
inc
ss
sbb
push
sbbb
sub
jecxz
sub
aaa
add
xlat
add
inc
push
dec
les
popf
push
dec
insl
loope
push
je
jo
pop
mov
pusha
cwtl
call
inc
jecxz
stos
in
push
test
push
icebp
aaa
gs
xchg
lock
push
subl
scas
push
push
add
out
push
jno
push
sub
cwtl
mov
mov
xor
cli
inc
sub
pop
fwait
mov
sub
mov
xchg
cmpsl
repz
push
gs
sub
xchg
lret
jmp
jp
push
mov
shll
add
stc
enter
jecxz
or
shll
aaa
sub
or
lods
popf
adc
adc
call
insl
sahf
mov
sub
push
leave
rorl
push
test
push
or
or
ds
pop
mov
xchg
inc
push
loop
dec
mov
fcomps
mov
jmp
sub
add
mov
stos
adc
xchg
aam
push
cmp
cwtl
test
fwait
jne
sbbl
push
jnp
mov
mov
fbld
pop
and
in
nop
or
enter
mov
sub
in
inc
icebp
movsl
add
cmpsl
icebp
cmp
imul
cld
ljmp
les
xchg
or
adc
imul
outsb
scas
in
pop
cmp
jo
jl
jg
ret
mov
cli
push
sub
and
pop
push
push
mov
popa
sub
mov
cmpsb
cmp
lods
daa
mov
inc
dec
testl
dec
in
add
jae
cmpsl
addr16
cltd
cmpsl
inc
sbb
dec
xchg
daa
fldl
fcomps
inc
push
into
or
les
lret
push
stos
cmp
test
adc
out
sbb
push
shlb
or
mov
sub
push
mov
and
xor
inc
imul
movsl
pop
mov
push
js
bound
pop
lods
cli
cli
aaa
jne
add
leave
cwtl
testb
push
fadd
mov
outsl
pop
lock
es
inc
sub
mov
pop
cmp
mov
inc
int3
push
inc
push
pusha
out
add
adc
sub
pop
jg
insl
sub
repz
ljmp
iret
mov
mov
cmc
jnp
dec
lret
ljmp
inc
pop
sub
sbb
xor
in
inc
xchg
xor
mov
add
icebp
mov
sbb
jne
dec
rcrb
mov
loopne
loop
shl
inc
test
pop
jns
mov
mov
xchg
jge
sub
lcall
std
clc
cwtl
pop
cmp
and
out
mov
mov
push
add
xor
fdivrl
push
mov
sbb
adc
or
pop
insb
xchg
inc
repnz
cmovg
xchg
into
outsl
scas
daa
lcall
inc
daa
sbb
mov
scas
ret
jo
mov
mov
jecxz
stos
hlt
ljmp
add
xchg
mov
loope
lahf
cld
les
pop
push
mov
jl
mov
shl
jg
ljmp
lret
and
push
adc
inc
sub
lea
clc
mov
jl
pop
or
mov
and
dec
dec
popf
inc
mov
cmpsl
out
adc
imul
xchg
add
and
mov
inc
xor
rolb
mov
or
outsb
fbld
mov
push
mov
mov
repnz
xlat
jle
push
jge
lock
cmp
jns
sub
or
std
sbb
ret
add
mov
sub
lahf
pusha
push
pop
inc
adc
push
fdivrs
cwtl
ret
outsb
adc
xchg
and
test
jg
push
pushf
add
push
cli
cmp
adc
fxch
pop
push
mov
fwait
rorb
loop
int
xchg
and
jmp
pop
jnp
cmc
test
ror
fdiv
outsl
fldl
pop
mov
fdivs
int3
in
sbb
test
in
sbb
adc
cmpsl
fsubrl
pop
add
pop
sub
es
lret
fs
sub
mov
xchg
add
lods
ds
mov
pop
inc
adcb
and
xchg
mov
cmp
mov
repz
xchg
in
or
das
adc
pop
out
pop
outsb
sbb
out
or
dec
mov
mov
jg
sbb
fmuls
push
and
mov
xor
sbb
fisttpll
xlat
aaa
sub
jnp
loop
mov
stos
fsubl
mov
outsl
jecxz
cmp
dec
popa
.byte
