push
mov
sub
mov
add
mov
mov
mov
mov
xor
and
mov
mov
mov
addl
divl
mov
mov
push
push
push
push
call
call
sub
add
mov
add
mov
mov
decl
test
je
mov
xor
add
mov
xor
or
mov
xor
mov
mov
add
push
xor
pop
xor
pushl
pop
and
xor
mov
xor
mov
mov
mov
mov
movzwl
xor
inc
add
mov
movswl
add
data16
shll
mulb
jne
mov
add
cmp
je
mov
mov
inc
mov
cmp
jne
mov
pop
ret
push
mov
sub
movl
lea
xor
push
push
push
call
mov
test
jne
mov
add
mov
mov
mov
movl
movl
xor
push
xor
push
call
add
add
xor
xor
xor
mov
mov
mov
lea
push
xor
push
lea
push
push
lea
push
lea
push
call
add
mov
addl
mov
mov
mov
lea
push
push
lea
push
push
push
xor
push
call
inc
add
lea
sub
push
lea
push
call
add
mov
mov
mov
lea
push
push
lea
push
push
lea
sub
push
lea
push
call
add
mov
add
mov
mov
mov
mov
add
mov
movl
mov
mov
mov
lea
push
mov
push
lea
push
push
lea
sub
push
lea
push
call
add
mov
add
mov
mov
add
mov
mov
add
mov
push
push
push
push
push
push
call
mov
mov
mov
lea
push
mov
push
lea
push
push
lea
sub
push
lea
push
call
add
mov
add
mov
mov
add
mov
mov
lea
mov
push
push
push
push
push
xor
push
call
mov
mov
mov
add
mov
add
mov
push
mov
sub
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
mov
test
je
push
push
push
call
mov
cmp
jne
mov
add
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
push
mov
push
lea
push
push
lea
sub
push
lea
push
call
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
lea
push
mov
push
lea
push
push
lea
sub
push
lea
push
call
add
mov
add
mov
mov
add
mov
movl
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
jmp
lea
push
mov
push
lea
push
mov
push
mov
sub
push
mov
push
call
add
mov
add
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
add
push
call
xor
xor
push
call
mov
pop
ret
push
mov
or
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
push
push
push
call
push
pop
xor
mov
mov
cmp
jne
push
movl
xor
push
mov
mov
add
push
pushl
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
jne
mov
inc
je
jne
inc
mov
mov
cmp
cmp
jbe
mov
mov
add
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
mov
lea
push
push
mov
mov
mov
mov
ret
mov
pushl
int3
push
pop
pop
xor
ret
add
xorl
mov
in
sub
cmpsl
xchg
xor
pushf
cmpsl
xor
int
mov
jle
fisubs
js
mov
dec
cmp
sub
cmp
or
mov
sti
adc
ret
fwait
sub
jne
inc
adc
jge
out
notb
jne
inc
adc
jge
out
test
mov
sbb
imul
jo
imul
jo
imul
aaa
div
ja
sub
scas
mov
into
mov
xor
imul
jo
sub
arpl
pop
xor
mov
in
ret
imul
inc
mov
xlat
sub
cmp
inc
mov
jbe
xor
imul
aaa
div
ja
sub
scas
fiaddl
aam
int
icebp
daa
and
cli
shrb
and
fwait
inc
aam
mov
cli
dec
xor
mov
loop
mov
into
aaa
into
cli
lock
out
jo
imul
aaa
and
sub
push
xor
mov
mov
stc
ret
cmpsl
xor
mov
mov
inc
sub
sarl
jg
jp
inc
int
aam
ja
jnp
push
xor
mov
jmp
xor
dec
mov
xor
gs
cmp
dec
mov
mov
outsb
push
mov
push
mov
ss
dec
ja,pn
aaa
push
mov
cs
jg
sub
sub
fsubrp
mov
jno
int
cmp
shlb
mov
fldcw
sbb
xlat
loope
scas
xor
jo
imul
jo
sub
arpl
outsb
scas
mov
into
mov
push
aaa
outsb
stos
mov
mov
mov
mov
mov
test
loop
mov
mov
xor
cmp
outsl
jle
cmpsl
jo
imul
jo
sub
mov
daa
sub
cmp
icebp
shrl
cmp
icebp
and
xor
shrl
lret
cmpsb
mov
inc
sbb
jo
mov
fistps
addr16
aaa
outsb
push
xor
adc
and
mov
mov
add
jg
push
ljmp
xor
imul
jo
imul
jp
ja
mov
sarl
inc
cmp
outsb
mov
cmp
inc
sub
cs
and
aaa
pop
mov
into
xor
and
sub
and
mov
outsb
scas
aam
int
stc
xlat
and
into
mov
push
or
es
test
repnz
mov
xor
cmp
into
mov
inc
add
ds
xor
sub
mov
and
cmp
inc
sub
sbb
cmp
mov
inc
mov
pop
ja,pn
aaa
pop
mov
in
outsb
cmpsl
xor
mov
sbb
xlat
loope
mov
imul
jo
imul
jo
sub
mov
and
cmp
lret
cmpsb
inc
aas
aaa
scas
mov
inc
mov
daa
cmpsl
mov
mov
ja
aas
push
pop
xor
sbb
push
mov
loop
mov
inc
into
das
xchg
repnz
and
and
outsb
pop
mov
jg
aas
push
pop
xor
sbb
or
pushf
repnz
into
aaa
jg
dec
mov
ds
sarb
mov
lret
repz
cmp
outsb
scas
xor
shlb
mov
addr16
jns
stos
int3
inc
aam
xlat
outsl
jle
cmpsl
jo
sub
mov
aas
and
ds
mov
loop
mov
xor
inc
mov
test
lret
push
push
xor
mov
fildll
jg
aaa
jle
mov
cmp
pop
push
mov
into
aas
jmp
dec
bound
push
cmp
mov
jg
fisubl
and
ds
loope
scas
xor
jo
imul
jo
imul
aaa
div
ja
sub
sub
into
aas
jmp
mov
into
mov
imulb
int3
sub
into
aaa
into
cli
lock
in
test
ds
add
ds
ret
sbb
int
cli
inc
mov
cmp
pop
push
mov
into
aas
jmp
mov
jae
push
cmp
mov
addr16
mov
and
ds
loope
scas
xor
jo
imul
jo
imul
jo
imul
test
ds
outsb
stos
cmp
mov
int
sub
cmpsl
xor
push
cwtl
cmpsl
xor
aaa
jle
push
mov
xor
jne
nop
cmp
lock
outsb
scas
push
mov
cmp
sub
es
and
mov
ss
outsb
scas
mov
mov
stos
sub
mov
adc
mov
jp
adc
xor
mov
jns
cmp
imul
rorl
aaa
jle
push
mov
sub
mov
ja
aaa
stos
cmp
dec
pop
mov
loop
mov
ss
ljmp
and
jmp
sub
into
jp
out
xor
xchg
repnz
aaa
into
cli
lock
stos
mov
jg
in
ret
pop
iret
int
mov
sub
ja
in
mov
rcrl
int
outsb
pop
mov
inc
sub
cli
lock
jo
imul
jo
sub
arpl
outsb
scas
mov
mov
icebp
and
ss
mov
das
pop
jecxz
stc
xlat
cmpsl
xor
mov
inc
test
xor
into
mov
lods
mov
into
hlt
mov
pop
jbe
cmp
jo
imul
jo
imul
jo
sub
mov
aas
sub
in
inc
cmpsl
pop
xor
scas
arpl
jne
pop
int
stc
shrl
lret
scas
xor
mov
shrl
ds
jp
mov
mov
jg
aaa
jle
sbb
mov
and
fnstenv
xor
jle
mov
outsl
lock
imul
jo
imul
jo
imul
test
push
stc
fcomip
pop
xor
sub
cmp
ret
dec
int
mov
cmpsl
inc
xor
xor
push
xchg
inc
mov
mov
push
mov
or
jg
aaa
jle
mov
push
mov
fidivs
jle
xor
mov
outsb
mov
jg
adc
sub
xor
stc
shrl
cmp
pusha
mov
out
ja
xor
je
mov
addr16
loop
or
sub
sub
arpl
xor
popa
mov
xor
test
cli
xor
outsb
imul
shr
inc
jnp
xor
mov
jne
jle
mov
repnz
add
shlb
outsb
mov
jg
and
es
jle
mov
mov
mov
jle
mov
fiadds
mov
fistps
sub
ficoml
cmpsb
xor
aas
push
dec
xor
mov
sub
cmpsl
xor
mov
xor
xor
fs
ret
aam
xor
aaa
outsb
jg
ja
mov
lock
mov
ljmp
lret
scas
xor
sub
ljmp
mov
outsb
jnp
ja
mov
mov
xchg
popf
and
stos
fiaddl
jg
ss
mov
mov
in
sub
and
mov
add
daa
dec
cmpb
cmpsl
xor
push
and
jg
aaa
jle
mov
lcall
mov
push
or
in
mov
into
mov
cmp
push
mov
aad
mov
movb
outsb
stos
bound
addr16
in
int
mov
ret
dec
or
aaa
aaa
outsb
dec
fstps
ljmp
or
sar
dec
cmp
jle
mov
mov
mov
loop
mov
sub
ja
push
ficomps
int
jmp
xlat
outsl
jle
cmpsl
jo
imul
jo
imul
jmp
pushf
test
and
enter
and
push
stos
xor
xchg
cmpsb
xor
jl
in
xor
mov
in
xor
and
pop
mov
sub
and
sub
data16
xor
aaa
jle
mov
and
std
cmp
ja
jnp
dec
xor
mov
aaa
outsb
pop
mov
sub
sarl
mov
xor
aaa
jle
mov
fdivp
pop
sub
ja
xor
arpl
cmpsb
repnz
outsb
push
bound
es
stc
ja,pn
aaa
outsb
pop
mov
mov
mov
aaa
cmp
shlb
mov
aaa
outsb
pop
mov
int
ret
mov
xlat
cmc
mov
sub
inc
pop
int
aaa
jle
mov
mov
mov
mov
mov
aaa
scas
mov
lret
mov
aas
idivb
xor
inc
mov
mov
aaa
imul
iret
xor
xor
sub
or
mov
stc
iret
and
ss
inc
test
ss
int
aam
addr16
mov
dec
arpl
ja
mov
mov
fbld
push
fnstenv
jmp
xlat
outsl
jle
cmpsl
addr16
mov
xor
sub
cmp
jp
pusha
fisubrl
rcrl
mov
lret
mov
fldcw
outsb
pop
mov
mov
sarl
and
sub
outsb
pop
xor
mov
cmp
mov
and
inc
aam
repnz
lahf
mov
pop
arpl
ja
jnp
sbb
inc
aam
ja
aas
push
push
xor
mov
mov
aas
jg,pn
push
adcb
xor
imul
jo
repnz
mov
xor
mov
xor
fidivl
aam
mov
fidivs
leave
and
xor
mov
mov
aas
push
stos
xor
xor
scas
mov
fidivs
in
daa
fidivl
data16
mov
dec
dec
aam
mov
mov
mov
loop
mov
fidivrs
jo
loop
mov
sub
and
sub
outsb
dec
xor
xor
aaa
scas
mov
fidivs
in
cmp
addr16
jae
xor
jle
mov
ss
cmp
xor
aaa
imul
repz
sub
addr16
outsb
ja
pop
mov
xor
pusha
mov
es
cli
ja,pn
aas
push
inc
xor
mov
sub
sub
sub
ret
jnp
int
mov
iret
sub
push
xor
mov
ljmp
ljmp
add
lret
xlat
sub
ret
cmpsl
inc
pop
aaa
jle
mov
inc
and
and
aaa
outsb
imul
addr16
lods
mov
ss
ret
mov
fs
ja
in
cmpsb
ljmp
mov
es
cli
ja,pn
aas
push
inc
xor
mov
mov
aas
ficoms
pop
int
jmp
xlat
outsl
jle
cmpsl
jo
imul
jo
imul
jo
imul
test
ds
jg
jp
addr16
out
mov
push
int
aaa
stos
mov
sub
into
aaa
jp
mov
ds
or
mov
ljmp
jbe
into
cli
lock
stos
dec
jp
mov
mov
stc
mull
loop
sub
xor
sub
ret
mov
loop
mov
cmp
sub
ds
jp
pusha
ficoml
pop
int
stc
iret
and
mov
dec
sub
cmp
fildl
cmpsl
xor
mov
sub
ja,pn
aaa
pop
cmp
loopne
cmp
xor
jnp
int
sub
sub
dec
inc
aam
mov
mov
inc
aam
pop
bound
mov
aam
jbe
cmp
dec
jmp
addr16
das
movsb
jg
xor
dec
jns
ja
aaa
arpl
fcmovne
int
mov
scas
fcmovne
int
jnp
loop
inc
aam
jg
aaa
jle
mov
inc
sbb
data16
mov
ja
jnp
jg
in
ret
fxch
int
mov
lret
cmpsl
dec
cmp
outsb
inc
sub
cmpsl
hlt
mov
aam
int
aaa
jle
cmp
repnz
xor
pop
mov
mov
sub
inc
aam
mov
inc
aam
xor
mov
sub
int
aas
jmp
aam
int
cmp
int
aas
jmp
mov
int
icebp
shrl
xor
inc
aam
mov
mov
rcl
pop
int
or
xor
mov
aam
mov
inc
aam
xor
mov
sub
pop
int
aas
jmp
aam
int
add
pop
int
in
pop
mov
mov
aam
int
cmp
mov
int
sub
xor
pop
int
xor
inc
mov
aam
mov
adc
insl
mov
aam
cmpsl
pop
inc
aam
pusha
mov
int
ret
sbb
int
mov
aam
cmpsl
pop
inc
aam
mov
inc
cmp
cmpsb
iret
int
inc
mov
not
xor
int
mov
inc
and
mov
inc
aam
mov
leave
and
ljmp
pop
mov
jg
in
mov
outsb
stos
fimull
stc
lret
and
sarb
ret
xor
mov
not
sbb
jg
jp
addr16
mov
outsb
inc
mov
pop
sub
cmp
xor
cmpsb
ror
int
scas
outsb
inc
adc
jle
pusha
mov
jg
jp
addr16
ret
ja
int
mov
lret
cmpsl
dec
cmp
outsb
inc
ja
and
jp
aaa
jle
mov
ja
push
mov
push
and
ret
sarb
out
jmp
mov
mov
out
sub
ds
add
pop
int
stc
repz
in
mov
or
mov
int
data16
mov
int
ret
das
into
int
mov
data16
mov
ja
jnp
loope
inc
aam
ja
aas
push
inc
xor
mov
mov
aas
jg,pn
push
movsb
xchg
repnz
xor
repnz
mov
cmp
hlt
pop
jg,pn
aaa
jle
push
mov
ja
mov
adc
fidivl
outsb
dec
cmp
fidivs
outsl
mov
mov
aad
in
loop
xor
inc
mov
mov
add
or
push
into
mov
ds
daa
aad
mov
xor
outsb
pop
adc
pop
mov
jg
test
xor
insl
mov
and
fnstcw
aaa
outsb
pop
mov
out
mov
ds
mov
mov
idivb
mov
into
aaa
arpl
loop
xor
sub
into
aas
jmp
shlb
test
int3
and
inc
mov
loop
sbb
xor
outsl
jle
cmpsl
jo
sub
arpl
mov
loop
mov
add
into
cli
icebp
jo
imul
jo
imul
test
cmp
and
stc
push
aaa
xor
jle
mov
sub
and
data16
fstpt
jl
hlt
mov
mov
jg
aaa
jle
cmp
mov
sbb
jg
mov
aam
xor
pop
push
mov
sub
mov
addr16
mov
sarl
mov
sub
jg
aaa
jle
mov
mov
and
mov
sub
jo
imul
jo
imul
test
ds
ds
lods
sub
es
and
aaa
outsb
pop
or
pop
mov
cmp
mov
xlat
shrl
mov
cmp
and
and
jnp
push
xor
mov
stc
fbld
loop
mov
xor
imul
jo
imul
jo
imul
jmp
cld
inc
cmpsl
add
mov
aaa
stos
arpl
cmp
ja,pn
aas
push
stos
xor
sbb
add
pop
xor
mov
icebp
xlat
and
xor
inc
adc
and
mov
xlat
sub
cmp
xor
dec
out
mov
pop
jbe
and
jo
sub
arpl
mov
loop
mov
add
jp
mov
mov
outsl
icebp
jo
imul
jo
imul
jo
imul
aaa
notb
movsb
sub
sub
into
aaa
arpl
in
mov
outsl
jg
sub
mov
aas
icebp
gs
stc
repnz
ja
gs
ja
cmc
in
loop
arpl
push
popa
hlt
stc
hlt
ja
jns
ja
cmc
in
loop
jl
outsb
push
jne
stc
and
ja
aaa
scas
xor
mov
xlat
and
and
add
xor
mov
push
rcrl
test
data16
lret
sub
lret
cmpsb
mov
add
jecxz
sub
outsl
jle
cmpsl
addr16
fidivrs
sub
pop
fadd
mov
mov
and
filds
dec
or
mov
inc
aam
mov
out
inc
aam
mov
inc
aam
pop
hlt
cmp
pop
int
fldln2
and
int3
inc
aam
hlt
mov
aad
int
jp
fwait
int3
int
dec
popa
mov
inc
aam
pop
hlt
cmp
in
and
hlt
mov
aad
int
jp
jecxz
int
addr16
mov
inc
aam
pop
hlt
cmp
int
fucomip
and
inc
aam
hlt
mov
aad
int
jp
out
int3
int
push
mov
inc
aam
pop
hlt
cmp
int
shr
and
inc
aam
hlt
mov
aad
int
jp
jmp
popa
mov
inc
aam
jle
cmp
int
shr
and
aam
hlt
mov
aam
int
jp
test
mov
inc
aam
je
cmp
int
into
in
and
inc
aam
hlt
mov
aam
int
jp
repnz
inc
sub
bound
pop
fs
cmp
int
aad
and
inc
aam
hlt
mov
aad
int
jp
repz
int
pop
popa
mov
inc
aam
push
hlt
cmp
int
shr
and
inc
aam
hlt
mov
aad
int
jp
dec
int
inc
popa
mov
inc
aam
pop
hlt
cmp
int
fucomip
and
inc
aam
hlt
mov
aad
int
jp
jle
int
inc
popa
mov
inc
aam
inc
hlt
cmp
pop
int
enter
int3
inc
aam
hlt
mov
aad
int
jp
jns
int
inc
popa
mov
inc
aam
je
cmp
pop
int
into
in
and
int3
inc
aam
hlt
mov
aad
int
jp
inc
int3
int
sub
or
pop
jne
cmp
pop
int
fldln2
and
int
aam
hlt
mov
aam
int
jp
fwait
int
inc
pop
popa
mov
inc
aam
pop
hlt
cmp
in
and
hlt
mov
aam
int
jp
out
int
dec
popa
mov
inc
aam
inc
hlt
cmp
int
fldln2
and
inc
aam
hlt
mov
aam
int
jp
loope
int
sub
shr
in
loop
pop
jp
inc
inc
hlt
stc
enter
pop
pop
popa
ja
fucomp
loop
pop
jp
inc
hlt
stc
ret
aad
ja
inc
popa
ja
enter
push
jp
dec
push
hlt
stc
shl
ja
sub
fiaddl
pop
addr16
cmp
pop
int
shr
and
int3
inc
aam
hlt
mov
aad
int
jp
dec
int3
int
pop
popa
mov
inc
aam
fs
cmp
pop
int
aad
and
int3
inc
aam
hlt
mov
aad
int
jp
push
int3
int
fs
mov
inc
aam
push
hlt
cmp
pop
int
cli
in
and
int3
inc
aam
hlt
mov
aad
int
jp
push
int3
int
dec
popa
mov
inc
aam
xor
cmp
int
lock
and
inc
aam
hlt
mov
aad
int
jp
int3
int
dec
popa
mov
inc
aam
jle
cmp
int
aad
and
aam
hlt
mov
aad
int
jp
iret
int3
int
dec
popa
mov
inc
aam
inc
hlt
cmp
int
pop
int3
inc
aam
hlt
mov
aad
int
jp
pop
int3
int
insb
popa
mov
inc
aam
push
hlt
cmp
pop
int
enter
int3
inc
aam
hlt
mov
aad
int
jp
pop
int3
int
dec
popa
mov
inc
aam
inc
hlt
cmp
pop
int
shr
and
int
aam
hlt
mov
aam
int
jp
movsl
int
inc
dec
popa
mov
inc
aam
pop
hlt
cmp
pop
int
fsubr
and
int
aam
hlt
mov
aam
int
jp
mov
popa
mov
inc
aam
xor
cmp
pop
int
lock
and
int3
inc
aam
hlt
mov
aad
int
jp
mov
int
dec
popa
mov
inc
aam
pusha
hlt
cmp
pop
int
fldln2
and
inc
aam
hlt
mov
aad
int
jp
xchg
int3
int
pop
popa
mov
inc
aam
inc
hlt
cmp
pop
int
fucomip
and
int3
inc
aam
hlt
mov
aad
int
jp
stos
int
inc
addr16
mov
inc
aam
pop
hlt
cmp
in
and
hlt
mov
aam
int
jp
mov
int
dec
popa
mov
inc
aam
inc
hlt
cmp
pop
int
shr
and
int
aam
hlt
mov
aam
int
jp
mov
int
dec
popa
mov
inc
aam
push
hlt
cmp
pop
int
mov
jp
push
pop
hlt
stc
fxch
hlt
ja
dec
popa
ja
out
in
loop
push
jp
push
inc
hlt
stc
fmul
hlt
ja
pop
popa
ja
into
in
loop
push
jp
pop
push
hlt
stc
xlat
out
ja
sub
and
pop
jne
cmp
pop
int
fldln2
and
int3
inc
aam
hlt
mov
aad
int
jp
mov
int
pop
popa
mov
inc
aam
pop
hlt
cmp
in
and
hlt
mov
aad
int
jp
mov
popa
mov
inc
aam
jp
cmp
pop
int
fldln2
and
int3
inc
aam
hlt
mov
aad
int
jp
mov
popa
mov
inc
aam
pusha
hlt
cmp
pop
int
enter
int
aam
hlt
mov
aam
int
jp
xchg
int
inc
popa
mov
inc
aam
pop
hlt
cmp
pop
int
shr
and
int
aam
hlt
mov
aam
int
jp
or
inc
pop
popa
mov
inc
aam
push
hlt
cmp
int
hlt
in
and
int
aam
hlt
mov
aam
int
jp
int
inc
pop
popa
mov
inc
aam
xor
jne
sub
int
aam
cmpsl
jbe
aam
mov
int
cmp
int
xor
inc
cmpsb
sub
inc
aam
mov
mov
int
sub
int
xor
mov
aam
jg
xor
inc
cmpsb
xor
int3
inc
aam
cmpsl
inc
inc
aam
mov
int
cmp
int
xor
mov
aam
cmpsl
sbb
pop
mov
int
cmp
pop
int
xor
dec
mov
cmp
int
jle
mov
int
stc
cmpsl
sub
dec
inc
aam
arpl
int
ret
xchg
aad
inc
mov
aam
jae
xor
jns
mov
inc
aam
mov
mov
int
sub
int
out
mov
aam
fcmove
pop
aam
mov
int
mov
inc
aam
mov
int
push
lret
int
cmpsb
jae
int
mov
dec
pop
int
out
mov
aam
pop
aam
mov
int
std
and
push
inc
aam
pusha
mov
int
ret
push
aam
inc
mov
aam
jae
aaa
mov
jns
mov
push
aam
fidivl
int
int
xor
pop
int
xor
rcl
pop
int
aaa
scas
pop
inc
jnp
inc
aam
aam
mov
mov
inc
int
aam
mov
int
push
jle
int
aaa
cmpsb
jae
int
mov
pop
pop
int
out
mov
aam
fimull
pop
aam
mov
int
std
or
dec
inc
aam
pusha
mov
int
ret
mov
sub
int3
inc
aam
jae
aaa
jle
pusha
mov
int
ret
mov
sub
int3
inc
aam
jae
aaa
jle
pusha
mov
int
ret
dec
xlat
int
mov
aam
jae
aaa
jle
pusha
mov
int
ret
jne
int
mov
aam
jae
aaa
jle
pusha
mov
int
ret
push
xlat
int
mov
aam
jae
aaa
jle
mov
mov
int
hlt
sbb
mov
int
mov
mov
aam
mov
push
aam
mov
ds
inc
aam
jbe
mov
inc
aam
mov
mov
test
sub
int3
inc
aam
cmpsl
incb
pop
mov
int3
inc
aam
mov
mov
inc
int3
inc
aam
ja
in
inc
cmpsl
mov
xor
mov
push
aam
pusha
mov
xchg
dec
aam
mov
int
xor
dec
int
aaa
mov
mov
mov
sub
filds
sub
ret
pop
mov
test
xor
int3
inc
aam
mov
inc
aam
aaa
sarb
pop
int
xor
pop
int
aaa
jp
mov
int
cmp
pop
int
in
inc
out
mov
arpl
mov
jns
mov
inc
aam
mov
cmc
mov
aam
int
mov
pop
aad
int
aaa
scas
stos
int3
int
jnp
in
inc
aam
mov
inc
aam
mov
mov
enter
push
inc
aam
xor
mov
inc
aam
mov
int3
int
dec
sub
fisubl
aam
mov
mov
inc
aam
xor
mov
push
pop
int
jle
cmpsl
ficoms
pop
mov
int
stc
call
sub
ficoms
pop
mov
int
cmp
cmpsl
fmul
inc
mov
scas
dec
inc
sub
sub
ficoml
pop
mov
mov
inc
aam
cmpsl
into
push
aam
mov
xchg
mov
aam
mov
push
aam
cmp
mov
cmp
xor
int
pushf
in
mov
sub
pop
inc
sub
cmpsb
imul
inc
mov
aam
jae
xchg
imul
mov
aam
cmpsl
into
push
aam
mov
ds
int
cmpsb
pop
inc
mov
aam
cmpsl
into
push
aam
mov
ds
int
scas
imul
inc
sub
cs
mov
int
xor
dec
int
xor
inc
mov
aam
cmpsl
cli
push
aam
mov
je
pop
int
leave
push
sub
incb
pop
mov
cmpsl
jp
aam
pusha
mov
int
arpl
daa
xor
aaa
mov
mov
cmpsb
out
int
inc
jp
cmpsl
out
aam
mov
icebp
mov
cmpsl
inc
pop
int
aas
idivl
cmpsl
into
push
aam
mov
mov
arpl
jl
aam
mov
enter
into
push
aam
mov
and
inc
cmpsl
jb
mov
inc
aam
jo
in
mov
aam
mov
int
daa
pop
loop
mov
xor
pop
int
aaa
jp
pusha
mov
int
mov
aam
arpl
inc
stc
fistl
aam
mov
mov
pop
int
enter
incb
pop
mov
cmpsl
jp
aam
pusha
fisubrl
fistps
mov
int
xchg
mov
shrl
mov
int
cmpsb
xchg
int
mov
mulps
int
mov
fstps
mov
cmpsb
aaa
cmpsb
out
int
inc
mov
mov
scas
ja
int
mov
aam
arpl
xor
inc
mov
aam
mov
mov
dec
inc
aam
mov
inc
aam
xor
mov
aam
jae
aaa
mov
mov
aam
jp
xor
aad
int
aaa
scas
imul
inc
mov
push
dec
int
aaa
mov
jns
mov
inc
aam
bound
ret
sbb
sub
int3
inc
aam
repz
pop
int
stc
mov
sarb
xor
into
push
aam
mov
xchg
mov
aam
mov
cmp
addr16
ljmp
filds
test
jp
test
xor
icebp
mov
out
int
aaa
scas
pop
inc
mov
daa
cs
fldcw
aaa
mov
mov
aam
js
xchg
arpl
pop
int
sub
mov
mov
aam
jg
mov
js
pop
int
cmp
sub
dec
int
aaa
imul
cmpsb
pop
inc
mov
sub
sub
into
push
aam
mov
xor
mov
cmp
sub
and
xor
mov
inc
pop
int
decb
xorb
mov
cmp
sub
dec
int
cld
sub
dec
int
in
mov
aam
mov
int
aaa
cmpsb
arpl
int
jp
cmpsl
out
aam
mov
mov
leave
push
sub
incb
pop
mov
mov
inc
aam
bound
int
jp
int
aam
daa
xor
aaa
scas
imul
inc
mov
mov
jns
mov
inc
aam
mov
icebp
aaa
cmc
mov
int
aaa
data16
fimull
cmpsl
xor
xor
imul
jo
imul
jo
imul
jp
ja
mov
scas
mov
mov
mov
jo
aas
sarl
scas
cmp
enter
cmpsl
inc
and
outsb
scas
mov
mov
stc
xlat
cmpsb
xor
mov
inc
sub
pop
mov
xor
jo
imul
dec
push
sub
mov
jo
imul
aaa
and
adc
int
xor
mov
lahf
xor
xor
stos
mov
pusha
pop
mov
loop
mov
bound
jle
mov
mov
into
xor
and
and
loope
mov
aaa
jle
mov
and
lret
cs
push
or
and
pushf
xor
dec
mov
mov
fidivrs
ds
imul
pop
pop
loopne
aaa
outsb
scas
mov
mov
cs
mov
jp
mov
mov
cmp
xor
push
dec
sub
fidivs
arpl
mov
sub
fidivs
jp
mov
shlb
mov
aaa
outsb
inc
mov
mov
icebp
sub
fidivs
push
sbb
adc
rolb
mov
iret
sub
ljmp
fidivl
jle
mov
mov
je
loope
int
sbb
xlat
loope
stos
xor
jo
imul
jo
imul
jo
imul
test
add
stc
fsubl
cmpsl
xor
xor
mov
ret
dec
mov
bound
aas
jmp
mov
mov
negl
xor
mov
stc
iret
sub
out
aaa
cmp
addr16
xor
bound
inc
cmpsb
mov
sub
adc
int
xor
inc
sub
cmpsl
pop
adc
and
cmp
arpl
repnz
mov
ljmp
sub
xchg
mov
inc
sub
js,pn
add
pop
xor
aaa
inc
push
mov
lret
jg
repnz
lods
mov
mov
cmp
ds
lods
mov
aas
bound
xor
mov
loop
in
das
cs
outsb
jg
jg
mov
mov
das
sub
out
jle
mov
mov
ss
and
pop
mov
mov
cs
xor
inc
aam
mov
ja
in
mov
mov
into
cli
lock
jo
imul
jo
imul
aaa
and
push
xor
bound
addr16
jns
ja
in
ret
add
int
ret
out
int
mov
shrl
cmp
inc
mov
fldt
ret
stos
mov
fidivrl
sub
outsb
dec
mov
and
cs
outsb
dec
mov
or
xor
mov
fcomip
pop
cmp
sub
cmp
ret
jbe
int
mov
xlat
cmpsl
inc
cmp
inc
mov
ljmp
int
jle
mov
and
aaa
dec
mov
jbe
pop
xchg
repnz
iret
sub
outsl
jle
cmpsl
jo
imul
jo
push
xor
mov
inc
sub
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
adc
inc
into
inc
adc
pop
enter
inc
xchg
rolb
inc
adc
dec
xchg
rorb
into
pop
adc
fs
adc
dec
ret
mov
xorl
mov
subps
lds
sbb
daa
pop
lods
popf
test
lds
sbb
daa
aam
xchg
test
leave
stos
mov
and
daa
jns
push
pop
dec
cmp
sub
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
xor
sub
cmpsl
xor
mov
mov
mov
mov
lods
sub
mov
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lods
sub
cmpsl
xor
mov
mov
mov
mov
mov
cmpsl
xor
sub
cmpsl
xor
sub
cmpsl
xor
mov
jl
cmpsl
xor
mov
popf
sub
rcll
mov
mov
popf
sub
movlps
mov
cld
or
cmpsl
pop
adc
mov
or
cmpsl
lock
movl
sub
xchg
adc
mov
sub
cmpsl
xor
mov
mov
mov
pop
or
cmpsl
shrb
mov
bound
xor
mov
mov
mov
mov
int3
dec
leave
xor
mov
rcrb
xor
xchg
dec
xchg
rorb
cmpsl
jno
icebp
js
ja
mov
into
push
filds
int3
inc
xlat
or
push
push
lret
add
filds
add
rorl
add
cltd
pop
sbbl
inc
orl
sub
aam
inc
pop
into
push
sbb
push
ret
mov
lret
push
pop
xchg
pop
iret
inc
or
push
fcomps
add
push
aam
push
fildl
push
inc
les
sub
roll
xchg
pop
iret
inc
or
push
fcomps
add
push
aam
pop
xlat
dec
rclb
push
ret
mov
dec
les
int3
add
dec
ret
inc
paddusw
push
add
cltd
pop
xlat
dec
push
aad
roll
xchg
dec
fists
mov
flds
inc
dec
les
sbb
aam
cwtl
push
push
lret
push
inc
mov
xchg
xor
iret
dec
rcll
rolb
dec
fldcw
cmpsl
xor
cltd
pop
into
pop
inc
fldl
sbb
aam
cwtl
push
push
lret
push
inc
mov
xchg
xor
iret
pop
movb
inc
enter
dec
cmpsl
xor
cltd
pop
fiadds
rcll
pop
dec
rcrl
inc
pop
int3
adc
push
inc
orl
cmpsl
pop
inc
rcrl
inc
inc
dec
mov
fldcw
cmpsl
xor
iret
dec
rclb
fists
inc
pop
int3
adc
push
inc
orl
cmpsl
pop
inc
fisttpll
inc
pop
xchg
dec
fists
cltd
pop
roll
pop
enter
add
dec
ret
inc
paddusw
push
add
fldl
push
sbb
push
ret
cltd
pop
int3
pop
push
rcrl
inc
pop
int3
adc
push
inc
orl
cmpsl
xor
iret
dec
lret
les
push
aam
inc
aad
lds
int3
add
dec
ret
inc
paddusw
push
add
iret
inc
pop
inc
enter
push
mov
int3
pop
iret
push
sbb
inc
xlat
or
push
push
lret
add
cltd
pop
adcb
sub
rcll
push
into
inc
sbb
inc
xlat
or
push
push
lret
add
mov
xchg
push
push
iret
pop
enter
add
pop
roll
pop
lds
mov
enter
sbb
push
into
inc
rclb
dec
enter
dec
rcrb
dec
fstpl
xor
xchg
add
mov
mov
jmp
pusha
sub
cmpsl
xor
int
scas
or
inc
inc
cmpsl
mov
xor
ja
cmpsl
xor
ja
mov
sub
int
in
mov
cmpsb
xor
iret
inc
aam
mov
int
in
aam
push
mov
pop
mov
es
incb
pop
xor
mov
fs
addr16
hlt
stc
aam
cmp
ja
cltd
sub
cmpsl
repnz
das
popa
ja
mov
jne
repnz
xor
mov
mov
cmp
pop
int
in
sbb
int
outsl
mov
xor
cmpsb
and
int3
inc
aam
mov
int
inc
ds
jb
jge
mov
inc
aam
bound
cmp
xor
test
aam
mov
xor
scas
sbb
int
jnp
daa
or
cmp
xor
int
cmpsb
and
int
aam
mov
xor
scas
sbb
int
jnp
in
cmp
outsb
jae
mov
pop
int
cld
mov
outsb
arpl
stc
out
fwait
xor
mov
stc
sti
pop
and
mov
lret
cs
cli
inc
ds
and
scas
addr16
jo
aam
into
mov
xor
iret
xor
mov
lods
imul
int
xchg
cmp
xor
andl
mov
inc
aam
bound
inc
mov
out
gs
xchg
jb
je
sti
icebp
jmp
stos
sub
cmpsl
popa
fs
jl
popa
out
js
ja
in
js
pop
cs
imul
push
and
sub
mov
inc
aam
bound
sub
mov
xor
push
lahf
and
inc
pop
and
cmpsb
and
int
aam
mov
xor
scas
aas
int3
int
jnp
in
test
ficoml
mov
mov
shll
jb
cmpsb
and
repnz
imul
int
in
aam
mov
int
xor
jl
int
inc
pop
inc
mov
int
xor
inc
pop
and
jnp
in
andl
popa
popa
xor
jnp
push
sub
sub
popa
int
mov
mov
int
in
cmpsb
and
xchg
and
sub
int
xor
jnp
mov
push
aam
pop
xchg
scas
imul
stos
iret
inc
aam
mov
int
sub
out
bound
and
push
out
js
mov
push
aam
bound
xor
xor
aam
mov
iret
int
scas
addr16
xor
int
cmpsb
and
fiadds
iret
dec
and
sub
int
xor
jnp
mov
push
aam
pop
dec
scas
imul
stos
iret
inc
aam
mov
int
sarb
out
bound
and
push
out
js
mov
push
aam
bound
xor
xor
aam
mov
stos
into
inc
aam
mov
int
call
inc
std
sub
bound
int
jg
jb
in
aam
mov
int
xor
inc
out
and
jnp
in
js
hlt
popa
mov
int
inc
shrb
mov
xor
and
pop
int
xor
inc
mov
jb
jnp
in
cmp
cmpsb
and
push
and
sub
int
xor
jnp
mov
dec
aam
pop
adc
push
arpl
popa
out
cmpsb
and
fldl
negl
cmpsl
imul
ja
xor
jnp
mov
dec
aam
pop
cmp
push
and
mov
int
mov
out
bound
sub
bound
int
shll
jno
negb
and
pop
int
aam
mov
pop
in
stc
xchg
mov
inc
aam
bound
int
divl
jno
mov
aad
int
xor
inc
jnp
jb
jnp
in
cmp
cmpsb
and
roll
and
sub
int
aas
out
andl
scas
mov
iret
push
sub
sub
popa
int
mov
mov
int
in
cmpsb
and
xchg
cld
sub
int
xor
jnp
mov
dec
aam
pop
xchg
push
and
mov
int
sbb
out
bound
and
push
out
js
mov
dec
aam
bound
xor
xor
aam
mov
stos
into
inc
aam
mov
int
xor
out
bound
sub
bound
int
mov
aam
mov
int
xor
inc
fbld
jb
jnp
in
js
hlt
popa
mov
int
inc
shrb
mov
xor
and
pop
int
xor
inc
sti
and
jnp
in
cmp
cmpsb
and
lds
iret
outsb
and
sub
int
xor
jnp
mov
dec
aam
pop
jle
imul
push
popa
out
cmpsb
and
pop
push
cmpsl
imul
ja
xor
jnp
mov
inc
aam
pop
push
lods
imul
stos
int3
inc
aam
mov
int
mov
out
bound
sub
bound
int
movzbl
in
aam
mov
cwtl
js
mov
int
aam
mov
pop
in
stc
jmp
mov
inc
aam
bound
int
daa
mov
xor
aam
mov
int
xor
inc
stos
and
jnp
in
cmp
cmpsb
and
into
and
sub
int
aas
out
andl
scas
aas
lret
int
jnp
push
sub
sub
popa
int
inc
pop
bound
outsb
lods
imul
push
cld
sub
pop
mov
sub
cmpsb
pop
xor
rcrl
bound
repz
js
mov
bound
cld
sub
out
xor
in
out
mov
repz
xor
sub
ja
in
aam
and
cld
sub
sub
aam
mov
xor
aam
mov
mov
lret
mov
daa
popf
icebp
inc
mov
push
mov
test
ja
jnp
ja
aam
mov
xor
aam
mov
mov
mov
daa
popf
icebp
inc
mov
push
mov
sub
in
mov
cmp
loop
bound
outsb
pop
pop
lret
cmpsl
int
mov
sub
stos
or
jp
dec
add
mov
outsb
jne
mov
and
sub
int
outsb
push
mov
mov
daa
popf
icebp
hlt
stc
xchg
inc
xor
dec
mov
lret
scas
addr16
ja
sbb
ss
stc
aad
mov
inc
shlb
outsb
dec
bound
mov
xlat
pop
int
xor
inc
and
jnp
outsl
int
std
sub
in
aam
sarb
ja
jnp
mov
inc
aam
bound
int
jmp
jb
in
aam
int
pop
cmpsb
and
mov
int
add
out
bound
and
jp
js
mov
inc
aam
bound
xor
xor
aam
mov
int
loopne
out
fs
notrack
jb
ret
and
int
inc
pop
mov
sub
ja
in
pop
mov
pop
daa
jp
imul
int
in
out
mov
das
call
int
insl
jmp
mov
and
sub
inc
stos
inc
sbb
imul
rcr
rcrl
popa
inc
xchg
jb
je
imul
mov
cmp
adc
fidivrl
xor
sbb
loope
outsl
jnp
dec
loop
mov
mov
cmp
cmpsl
xor
scas
das
int3
int
jnp
in
jnp
cmpsb
xor
jmp
and
int
aam
int
jmp
xor
mov
dec
aam
rcrl
cmp
push
int
in
xchg
cmpsl
xor
adc
mov
xor
scas
scas
int
jnp
daa
push
lods
imul
add
out
xchg
cmpsl
xor
mov
inc
aam
cltd
popa
xor
jnp
inc
fiadds
jb
adc
ret
mov
iret
hlt
mov
int
mov
inc
aam
gs
mov
das
ja,pn
xor
bound
jl
movsbl
das
sub
in
inc
mov
jo
xor
bound
aam
int
inc
mov
pop
bound
aaa
mov
mov
cli
mov
mov
ja
adc
mov
sub
mov
cmpsl
xor
out
inc
daa
xor
mov
aam
cmpsl
xor
scas
scas
int
inc
jnp
daa
data16
imul
xor
mov
mov
pop
int
loope
push
cltd
mov
into
in
jge
mov
inc
aam
int
and
mov
imul
or
pop
xchg
or
enter
ja
jnp
inc
into
xor
jnp
inc
rolb
mov
jb
xchg
cmpsl
xor
mov
mov
pop
int
pop
mov
xlat
dec
pushf
int
lret
pop
daa
push
imul
inc
cmp
iret
sub
outsl
leave
aaa
push
daa
and
cmpsb
loop
ljmp
test
mov
mov
or
pop
mov
icebp
enter
into
in
jge
mov
inc
aam
int
and
leave
and
mov
imul
int
out
inc
daa
xor
mov
mov
cmp
and
int
aam
int
call
inc
js
int
in
cmp
xor
outsb
scas
int
in
out
mov
ret
scas
inc
ss
sarb
dec
cmp
aad
int
jp
xchg
movlps
cmp
add
jnp
das
jbe
mov
dec
subb
in
cmpsb
loop
out
js
popa
popa
out
cmpsb
and
int
aam
popa
int
xor
mov
and
sub
insb
add
lock
cld
sub
xor
out
jo
lcall
push
mov
mov
fstpt
cmp
cmpsl
and
mov
aaa
out
and
mov
jb
jnp
pop
mov
mov
mov
sarb
xor
xor
or
cmp
cmpsl
xor
mov
mov
mov
cmpsl
xor
sub
cmpsl
xor
mov
enter
fisubs
mov
mov
mov
mov
mov
mov
aam
cmpsl
xor
mov
mov
mov
mov
popf
sub
rcll
mov
mov
popf
sub
movlps
mov
cld
or
cmpsl
pop
adc
mov
or
cmpsl
lock
movl
sub
xchg
adc
mov
sub
cmpsl
xor
mov
mov
mov
pop
or
cmpsl
shrb
mov
bound
xor
mov
mov
mov
mov
mov
into
inc
ret
rolb
jp
inc
ret
pop
push
mov
enter
push
enter
push
cli
inc
lret
push
xor
pop
testb
push
out
pop
push
shrl
xor
leave
inc
push
into
inc
ret
fstps
inc
inc
aad
leave
jae
mov
enter
push
enter
pop
jmp
mov
enter
push
enter
pop
std
sub
jnp
cmc
gs
sbb
inc
lret
xor
mov
aad
repnz
push
into
push
push
pop
enter
pop
rorb
inc
rolb
pop
sbb
inc
lret
xor
shrl
dec
pop
enter
push
fstps
xor
data16
ret
in
pop
into
pop
inc
aad
fidivs
lret
mov
leave
pop
aad
pop
enter
push
fisttpll
xor
mov
leave
pop
aad
pop
enter
push
fstps
xor
js
inc
into
inc
enter
push
in
push
iret
pop
cmpsl
xor
mov
fisttps
jae
mov
enter
dec
std
sub
shll
lret
pop
pop
rorl
inc
fstpl
push
push
rorb
xor
ret
aam
aad
fstpl
jl
rorl
xor
mov
rorl
pop
push
cli
inc
lret
push
jl
inc
ret
mov
aad
loope
inc
icebp
pop
lret
inc
pop
int3
inc
ret
dec
les
mov
fstps
dec
inc
enter
pop
rorl
and
sti
dec
shll
dec
hlt
pop
dec
fldcw
xchg
xor
dec
movb
inc
lret
push
jae
xor
ret
rorb
push
xor
lock
pop
enter
popa
aad
rcrb
dec
int
push
enter
jno
dec
movb
inc
aad
push
fsubrs
cmpsl
push
sti
dec
shll
iret
pop
ret
inc
pop
enter
push
cmc
outsl
cmpsl
xor
insb
ret
flds
bound
inc
out
xor
sub
push
inc
ljmp
leave
push
pop
into
inc
movb
inc
out
dec
mov
call
fsubrs
cmpsl
jbe
lcall
push
inc
fnstcw
pop
push
fstps
jae
mov
aad
ret
rorb
jns
out
gs
add
mov
iret
pop
aad
pop
enter
addr16
outsb
cmc
add
xchg
dec
lret
pop
xor
dec
les
into
dec
shlb
push
xor
add
adc
pop
push
fldenv
inc
pop
ficoml
xor
js
push
pop
shrb
push
push
leave
pop
ret
std
sub
jp
lock
add
inc
lret
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sbb
roll
push
roll
push
add
add
add
cmpsb
roll
mov
add
add
add
pop
rolb
adc
add
and
add
xor
add
inc
rolb
pop
rolb
imul
add
xchg
rolb
pushf
rolb
mov
rolb
rol
add
jmp
roll
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmpsl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
addb
add
gs
js
add
imul
insb
gs
outsb
jo
je
add
inc
js
je
jb
arpl
jae
add
imul
insb
gs
bound
arpl
inc
gs
jne
jb
outsb
je
push
dec
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
push
popa
imul
insb
gs
bound
arpl
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
insb
jae
jb
popa
je
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
jb
popa
je
inc
imul
jb
jne
insb
inc
insb
insb
outsl
arpl
add
imul
insb
gs
arpl
outsb
push
add
push
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
addb
add
arpl
jae
push
jns
jns
gs
outsb
fs
jne
imul
add
inc
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
inc
arpl
jae
inc
push
jns
jns
gs
gs
insb
je
imul
jne
imul
jns
popa
outsb
fs
gs
add
xchg
add
add
addb
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
inc
push
inc
outsl
outsb
je
add
add
add
push
inc
add
dec
add
add
pop
dec
loopne
sidtl
add
add
or
add
dec
add
add
add
in
add
add
add
push
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
nop
add
sub
add
add
add
push
nop
add
sub
add
inc
push
push
add
add
add
xor
add
adc
rolb
inc
add
add
cmp
add
add
add
or
add
add
add
add
pusha
inc
inc
push
inc
add
add
xchg
cmp
add
push
add
add
add
add
add
add
imul
add
add
nop
add
add
add
inc
add
inc
add
shrb
fs
je
add
xchg
add
add
mov
add
add
add
add
jb
jb
add
add
add
add
add
add
inc
add
inc
add
add
add
mov
add
adc
in
and
in
fwait
push
call
out
jp
fwait
int3
xor
and
pop
adc
imul
imul
imul
jmp
jle
icebp
sub
imul
inc
jle
lret
gs
int
repz
lret
jb
push
test
xor
mov
into
popa
ret
mov
repnz
shll
mov
out
mov
cmp
movsl
pop
addr16
jge
scas
pop
mov
roll
lcall
cmpsl
fs
lcall
lock
lcall
aad
int3
enter
in
inc
lret
pop
ror
xchg
insb
in
aad
hlt
or
dec
mov
xchg
pop
rcl
xchg
xor
mov
pop
and
pop
adc
mov
out
push
out
mov
pop
dec
inc
jo
push
rclb
aam
inc
loope
xchg
lret
in
shr
rcrl
inc
enter
jb
lea
xlat
fst
pop
inc
mov
push
inc
daa
fmul
fsts
push
jmpw
push
movsb
addr16
imul
test
ffreep
fucomp
imul
rclb
cli
into
dec
xchg
mov
dec
push
imul
xor
in
fs
loope
imul
lcall
dec
xchg
xchg
pop
shrb
xchg
mov
mov
xchg
out
fs
push
movsl
jecxz
pop
int3
and
jecxz
xor
mov
dec
pop
lcall
aaa
sub
xchg
movsl
lret
mov
leave
leave
leave
pop
roll
sbb
mov
andl
popf
jno
je
aam
xchg
mov
rorb
addr16
rcrl
mov
pop
mov
stos
int
and
jmpw
lods
pusha
pop
mov
je
dec
shll
pusha
inc
cmp
and
mov
dec
mov
inc
mov
and
push
xor
pop
test
dec
dec
aas
adc
mov
push
inc
fmul
inc
pop
lret
into
sbb
push
pop
push
xlat
out
aam
jb
enter
pop
and
scas
aad
lea
mov
daa
inc
cmp
rcrb
pop
inc
sub
sarb
cs
mov
cmp
pusha
shlb
xor
sub
xor
dec
xlat
leave
xchg
push
pop
or
mov
daa
daa
cwtl
xor
adc
leave
inc
jae
hlt
jmp
aas
dec
ret
pop
sbb
jne
sub
mov
jbe
insl
in
cmp
rcrb
sub
arpl
std
aad
sub
xor
mov
rolb
cmpsl
gs
lahf
inc
mov
cmp
pop
int3
movsb
cmp
push
adc
call
mov
sub
stos
jle
mov
mov
pop
xchg
sti
call
aad
out
jae
xor
in
std
mov
dec
fisttpll
push
insb
inc
mov
mov
and
fcmove
pop
sbb
outsb
adc
sub
outsb
daa
or
ficomps
ss
divl
pop
ljmp
jne
das
stc
in
ret
push
aam
aaa
mov
xchg
cli
jbe
mov
xor
xorl
cmpsl
rcrb
mov
das
sub
inc
mov
mov
inc
jle
add
cs
or
sbb
dec
mov
push
in
daa
sbb
push
and
lret
orb
push
sub
pop
push
or
mov
inc
rclb
loopne
mov
mov
mov
mov
push
and
sub
mov
ffreep
sbb
push
or
jo
sbb
jl
mov
inc
sub
jle
inc
inc
sbb
iret
xor
or
mov
into
push
stc
lods
adc
mov
popa
mov
dec
jl
fbld
push
mov
imul
xor
sbb
mov
rclb
jecxz
fldcw
inc
xor
mov
sub
pop
int3
out
inc
out
pop
arpl
add
out
int
test
mov
addr16
ficompl
stos
int3
pushl
mov
mov
mov
mov
out
iret
data16
sub
and
outsb
fs
dec
sub
ss
push
jp
fstpt
enter
and
scas
imul
sub
mov
addr16
decb
stc
call
sub
mull
add
out
cmp
cmpsl
ljmp
dec
fisttps
mov
sub
fidivrl
repz
xchg
into
adc
mov
sahf
daa
cmp
fisttpl
notl
push
sub
mov
or
clc
xchg
imul
or
pop
pop
sbb
xchg
test
xchg
jnp
sbb
inc
repz
loop
mov
cmp
ret
mov
dec
ret
jnp
fists
ss
sbb
cli
push
je
leave
push
cmp
inc
mov
jp
push
sub
aam
ds
fisubrl
daa
push
add
or
js
push
out
mov
mov
aam
icebp
popl
pop
cmp
divb
push
add
lods
jnp
mov
add
fidivrl
enter
or
aam
daa
adc
and
lods
jb
cmp
in
jp
dec
push
ffreep
loop
mov
lcall
xor
ds
stc
fistl
gs
mov
adc
sub
scas
aad
ja
aas
xchg
mov
loopne
cltd
or
sub
mov
out
sbb
fidivl
mov
push
sub
out
cmp
jbe
xchg
int
ja
push
mov
mov
or
enter
xor
fadds
aaa
sub
add
or
jecxz
dec
aas
ret
arpl
jae
push
ja
mov
bound
ret
sbb
xor
es
mov
mov
mov
mov
and
in
addr16
ljmp
cmp
decl
mov
scas
pop
arpl
or
hlt
push
imul
sub
imul
pop
ja
lahf
fcomip
gs
dec
mov
mov
jg
mov
repnz
int3
imul
and
notb
mov
sbb
in
out
addl
cwtl
stos
inc
stos
sarl
cmp
mov
shrl
mov
ss
daa
cmp
cld
mov
js
hlt
mov
jl
lret
cmpsl
arpl
test
mov
or
in
bound
mov
icebp
jg
aas
cwtl
jmp
data16
fimull
pusha
enter
sub
dec
jp
shl
or
cli
mov
adc
loope
cld
xor
sarl
test
cli
push
insl
aad
and
push
stos
ret
add
or
leave
jns
dec
push
sub
and
pop
xor
push
into
call
shll
mov
leave
movsl
pusha
pop
mov
pop
push
loope
ss
bound
test
cmpsb
orl
test
imul
std
btc
mov
dec
add
mov
push
sbb
add
xor
and
stos
or
fidivrs
xchg
movsl
mov
bound
in
loopne
mov
pop
outsb
jp
daa
push
push
les
ss
mov
andb
mov
je
dec
ficomps
ja
lcall
ret
sbb
jae
dec
mov
outsb
inc
mov
loopne
push
int
push
sbb
adc
inc
mov
cmp
or
fldenv
loopne
je
rcrb
mov
mov
push
xor
dec
mov
out
iret
bound
aas
xchg
jl
aas
inc
aam
pushf
fidivl
jbe
outsl
out
cmp
mov
cmpsb
loopne
sbb
pop
fldcw
pusha
push
adc
test
loopne
das
pop
test
mov
pop
adc
lret
sub
add
in
les
inc
fxch
adc
and
ljmp
mov
addr16
dec
js,pn
push
pop
lret
mov
mov
jg
pop
lods
mov
rcrl
pop
mov
push
pop
lods
xchg
je
js
fwait
and
es
insb
fcmovu
push
pop
loop
addr16
xchg
insb
inc
outsl
aam
xlat
push
fs
mov
mov
fnstsw
and
ja
shlb
int
inc
pop
repz
inc
mov
cs
xor
arpl
jns
adc
or
push
sar
ss
or
or
pusha
jns
add
rol
out
adcb
jle
add
adc
lods
inc
mov
test
test
rorl
push
mov
imul
or
frstor
or
js
adc
arpl
pop
push
rcl
inc
add
cmp
inc
mov
xor
incl
ja
aaa
dec
mov
jbe
pop
xchg
repnz
nop
es
pop
iret
mulb
ljmp
js
push
dec
test
cs
imul
and
ljmp
mov
add
jmp
inc
into
inc
adc
pop
enter
inc
xchg
rolb
inc
pusha
call
fimuls
inc
inc
rorb
into
pop
adc
fs
adc
dec
ret
mov
addl
decl
pop
push
cmp
and
mov
and
daa
pop
lods
popf
test
adc
fidivs
cmp
test
cmp
mov
adc
push
push
lahf
movsl
and
in
bound
jmp
xor
fnstcw
lods
xor
aas
adc
es
xor
xor
lods
sbb
xor
xor
mov
add
cmp
mov
sub
xchg
cmpl
sub
jmp
ret
push
inc
fisttpll
jp
nop
es
movsl
mov
jne
in
push
enter
in
rol
pop
xchg
mov
in
fldcw
sbb
cmpsb
imul
lcall
ljmp
imul
sbb
xorl
pop
adc
sub
xor
bound
sub
repz
dec
or
dec
leave
xchg
rcrb
xchg
dec
xchg
jecxz
fistl
jl
jge
js
ja
mov
or
inc
lcall
xlat
or
push
push
lret
add
filds
add
decb
cltd
pop
sbbl
adc
in
jg
addb
push
inc
pop
into
push
sbb
push
ret
inc
lret
push
fstp
lcall
iret
inc
or
dec
xchg
add
inc
push
fildl
push
inc
les
ret
push
inc
roll
dec
pop
xlat
dec
rclb
dec
dec
inc
dec
les
int3
add
dec
ret
inc
cvttps2pi
add
loopne
pop
push
aad
roll
xchg
dec
fists
ja
fistpl
pop
flds
inc
dec
das
leave
sbb
pop
cwtl
addr16
jg
push
inc
mov
xchg
xor
iret
dec
rcll
rolb
fnstcw
into
cld
jg
in
pop
inc
fisttpll
pop
fildl
sbb
les
mov
inc
push
push
rcrb
mov
int3
adc
xorl
push
lea
pop
lret
dec
push
cmp
test
dec
rclb
fists
fisttpll
pop
movsb
cs
out
dec
roll
pop
enter
daa
gs
outsb
ret
dec
daa
add
out
es
arpl
out
pop
inc
aad
enter
lds
sbb
inc
pop
inc
enter
sub
int3
pop
iret
push
fbld
ja
push
rcll
into
inc
and
lcall
mov
xchg
push
push
iret
pop
enter
add
pop
ret
pop
rcrb
dec
sbb
pop
popf
sbb
dec
push
into
inc
rclb
call
jle
enter
or
dec
fstpl
xor
mov
cmp
mov
stos
pop
jmp
rcr
push
mov
mov
outsl
add
and
icebp
fists
sbbl
sub
int
in
sbb
xchg
push
iret
lahf
inc
dec
cmp
jecxz
cmp
and
call
jg
mov
fs
cmpsb
cmp
cmpsl
cmp
jmp
add
leave
cltd
jl
int
scas
int
das
popa
ja
or
mov
cmp
out
xor
jge
mov
movsl
fs
cli
fwait
push
sbb
int
outsl
mov
ljmp
lods
xchg
push
and
pop
jmp
push
pop
mov
add
or
pop
sub
add
scas
sbb
jnp
daa
or
mov
inc
mov
int
faddl
in
in
andl
sbb
mov
pop
outsb
pop
add
pop
cld
mov
insb
or
or
stc
sti
pop
and
ror
inc
cli
or
movsl
jns
rclb
pop
fldcw
mov
dec
inc
std
xchg
xor
xor
int
inc
test
daa
xchg
jl
cmpl
pop
or
mov
fisttpl
pop
icebp
stc
adc
fistl
add
fs
jl
popa
out
js
shr
js
pop
cs
jae
cmc
outsl
dec
mov
push
and
fisttpll
mov
push
lahf
inc
inc
pop
and
jl
fsub
stos
into
divl
outsl
hlt
and
push
mov
xor
shll
push
outsb
in
leave
sub
repnz
pop
stc
movsb
ret
sub
bound
fstpt
rcr
dec
inc
pop
inc
adc
mov
into
mov
cmp
addr16
out
pop
pop
clc
idivb
push
sub
aas
stos
jno
pop
xor
pop
mov
sbb
pop
test
pop
xchg
scas
es
lock
sub
xor
and
lahf
int
popa
ljmp
pop
pop
or
ret
or
data16
mov
in
arpl
fimuls
and
and
ja
daa
movsb
shrb
push
sbb
rorl
into
sub
dec
mov
jb
dec
aam
pop
sub
xchg
out
pop
aas
fsubr
mov
lsl
pop
lcall
int
movsb
cmp
insl
pop
add
mov
and
ret
fstpl
fisubl
int
iret
sub
arpl
lahf
std
inc
jnp
ljmp
jbe
cld
ja,pn
xor
shr
into
dec
cmp
cmp
dec
ja
ret
mov
fwait
scas
cmp
negb
dec
mov
adc
pop
in
xchg
inc
xchg
xor
dec
push
sub
sbb
int
inc
jbe
jnp
pop
sub
and
sbb
test
pop
jb
sub
and
sub
lods
and
sbb
dec
cs
stos
dec
or
mov
xor
mov
mov
or
push
mov
leave
test
aas
sti
and
fwait
pop
sub
outsb
and
mov
lods
stos
les
sub
and
test
mov
xor
int
cs
shr
mov
daa
xchg
stos
enter
ss
and
lret
inc
mov
pop
not
outsb
lods
or
pusha
outsl
subb
xor
inc
cmpsb
and
cmp
xchg
repz
sub
aaa
pop
pop
les
repz
in
shl
lret
rcr
ss
and
xlat
cli
in
and
test
in
jnp
lret
jg
xchg
mov
pop
das
mov
loop
xchg
out
mov
icebp
inc
mov
mov
sub
in
lcall
cli
pop
sahf
dec
aam
int
mov
test
cli
cmp
mov
loopne
pop
lret
lret
sub
push
cld
jg
or
jp
dec
add
mov
bound
mov
outsb
push
pop
push
push
pop
add
xor
div
mov
ret
sbb
xchg
ja
sbb
ss
xchg
mov
fstpt
sarb
sbb
pop
leave
jbe
and
outsl
int
ja
sbb
outsb
mov
mov
pop
jae
jmp
addr16
scas
sbb
movsb
mov
mov
ret
icebp
loopne
andb
and
jmp
mov
sarl
and
push
jg
aam
mov
das
call
xor
outsl
mov
sbb
inc
stos
inc
sbb
mov
icebp
rol
fcmovu
popa
popa
mov
inc
and
loopne
cmp
hlt
xor
insb
repz
mov
scas
push
ljmp
mov
loope
outsl
jnp
dec
loop
mov
js
mov
bound
das
mov
aam
test
clc
enter
jmp
xor
cmp
rcrl
popf
and
das
js
movsl
sub
adc
fnstcw
enter
scas
les
lods
adc
outsl
push
push
je
xchg
cmpsl
pop
cmpsb
sbb
mov
pusha
ja
push
cltd
popa
and
mov
jo
cli
ret
pop
popa
mov
xor
mov
mov
pop
mov
ja
pop
push
jl
movsbl
in
cmp
in
inc
mov
mov
pop
ss
arpl
and
aaa
push
shlb
mov
cli
pop
xlat
outsl
out
aaa
into
mov
mov
hlt
setl
mov
outsb
out
inc
daa
inc
jl
pop
xor
fsubs
xor
int
ja
ret
xor
sbb
mov
inc
mov
cs
mov
cmp
call
popa
mov
sub
and
pop
xchg
je
sbb
pusha
into
dec
enter
jecxz
hlt
mov
jbe
mov
rcll
rcr
push
dec
pushf
inc
lret
xchg
fdivl
cs
cmpsb
inc
cmp
cwtl
leave
aaa
push
daa
fisubrl
and
ljmp
stc
insl
mov
nop
dec
mov
sub
in
add
mov
inc
je
jl
add
inc
movsb
popa
loop
hlt
cmp
fwait
lea
in
call
add
in
adc
clc
pushl
ret
inc
ss
sarb
dec
cmp
xchg
ficomps
movlps
fucomi
fwait
call
cmp
add
jnp
das
jbe
dec
mov
in
scas
mov
bound
hlt
sub
clc
int
mov
xor
iret
cs
insb
add
add
jmp
call
pop
xor
das
jp
push
sub
mov
mov
fldt
mov
mov
push
inc
pop
dec
sbb
cmpb
xor
jnp
pop
pop
mov
pop
shll
xor
shrb
mov
and
mov
push
dec
mov
push
lds
movsb
fisubs
mov
pop
aam
sbb
push
add
leave
inc
push
into
inc
ret
fnstsw
inc
jno
loopne
jp
inc
ret
pop
push
mov
enter
push
enter
jp
push
fsqrt
inc
lret
push
insb
cmpsl
jp
testb
in
outsl
sub
out
pop
push
shrl
dec
popa
fstps
inc
inc
mov
inc
leave
jae
mov
jmp
adc
adc
lock
cmc
gs
sbb
inc
lret
xor
mov
inc
inc
push
aad
repnz
dec
push
enter
pop
rorb
pushl
outsl
pop
and
shrl
dec
pop
enter
push
flds
out
fidivrs
js
data16
lcall
scas
jge
fidivs
lret
lahf
ret
aad
jg
inc
push
fisttpll
es
mov
lds
cmp
into
inc
enter
incl
enter
push
iret
pop
cmpsl
mov
dec
shll
pop
cmp
movsb
pop
inc
enter
dec
std
cmp
sti
dec
shl
cld
mov
fcmovne
inc
cmp
ljmp
dec
out
jl
aas
fstp
fisubs
inc
aad
fstpl
jl
rcll
push
jg
dec
in
out
jne
fldl
dec
out
fildl
std
fistpl
movsb
icebp
pop
lret
inc
pop
int3
inc
ret
dec
les
dec
lahf
pushl
xor
hlt
dec
insl
dec
lret
rorl
and
mov
outsl
pop
hlt
pop
dec
fldcw
xchg
xor
dec
movb
mov
fcmovnu
lock
ret
rorb
jb
lock
mov
insl
popa
popa
xor
push
push
enter
mov
shll
inc
out
push
fdivrs
pop
inc
pop
jbe
dec
movb
addr16
pop
push
cmc
outsl
out
push
test
bound
call
pop
cmp
push
inc
ljmp
fbld
into
inc
inc
pop
roll
scas
outsb
fistps
ret
popa
dec
into
pushl
xchg
movsl
or
hlt
inc
ret
jns
out
insl
jecxz
sarb
mov
xor
pop
aad
mov
fists
jbe
inc
addr16
outsb
cmc
add
xchg
mov
ret
inc
pop
into
jbe
dec
shlb
fnstenv
outsl
ja
xor
jecxz
jae
adc
incl
fldenv
fidivl
fsubrs
ficoml
inc
push
iret
push
pop
rolb
loopne
push
jp
lock
add
or
mov
add
mov
push
nop
rcrb
add
xor
sub
mov
add
sub
leave
add
das
jmp
jl
rolb
gs
js
jb
xchg
fcmovnu
je
inc
outsl
outsb
jae
adc
jo
je
adc
push
jb
movsl
sti
outsl
arpl
jae
popa
inc
outsl
jb
imul
gs
dec
arpl
je
jne
jb
outsb
je
push
fs
out
dec
pusha
pop
push
aaa
outsl
inc
idivl
gs
popa
jo
sbb
je
arpl
insl
out
mov
js
jbe
jg
imul
push
sbb
aaa
inc
imul
pushl
jne
insb
inc
insb
insb
movsb
ss
popfw
sub
push
dec
sbb
push
pop
fisttpl
inc
ret
mov
in
imull
inc
arpl
inc
push
push
jns
mov
outsb
fs
jne
dec
imul
fs
mov
aaa
jp
gs
adc
outsl
outsl
imul
push
divb
push
cwtl
jne
dec
push
dec
pop
fldcw
jne
ja
push
sbb
mov
jbe
popa
mov
xor
jb
or
inc
mov
dec
add
out
cld
push
add
pop
dec
adc
add
add
or
divb
xor
push
add
mov
dec
ja
push
add
pop
jnp
xchg
je
rolb
adc
pop
fldcw
fwait
sub
sub
shl
mov
pop
xlat
push
cmp
jnp
pop
inc
push
push
or
nop
in
push
fsubs
rolb
inc
cmp
mov
fistpll
inc
inc
push
inc
inc
mov
xor
xchg
outsb
jecxz
inc
imul
pusha
arpl
daa
jb
add
dec
dec
daa
inc
sarl
arpl
or
mov
or
fwait
pop
dec
dec
sbb
xchg
mov
add
add
add
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
