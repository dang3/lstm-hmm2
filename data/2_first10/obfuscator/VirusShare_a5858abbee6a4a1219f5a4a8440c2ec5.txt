incl
add
and
xor
add
add
sbb
add
orb
add
and
idivb
adc
push
adc
add
add
loopne
adc
push
addl
decl
or
orl
test
push
add
and
cmp
jg
insb
sub
adc
cmpl
add
ljmp
int
adc
pop
sbb
test
nop
and
add
incl
add
add
or
or
test
and
iret
jle
in
push
rolb
sarb
inc
and
sbb
addl
ljmp
fildl
cmp
add
call
shll
dec
dec
in
decl
dec
or
andl
or
sub
mov
push
scas
dec
add
mov
icebp
or
sbb
or
cmp
dec
imul
add
xchg
add
call
add
inc
repz
lcall
add
leave
add
adc
or
idivb
clc
xchg
add
jo
mov
stos
mov
pop
jbe
int3
add
mov
add
add
in
out
mov
and
sbb
add
add
mov
in
fdivrp
repnz
add
dec
dec
add
adc
popa
je
imul
sbb
rclb
pop
int
aaa
jg
movb
movsb
mov
shrb
inc
std
cmpl
inc
add
dec
cmpsl
add
xor
pushf
ret
pop
mov
push
cmp
mov
push
jmp
add
xchg
jge
sbb
hlt
jbe
add
or
and
mov
pop
xor
cmpsb
add
xchg
iret
pop
adc
repnz
jg
out
bswap
and
add
nop
int3
pop
fs
in
adc
mov
dec
add
test
xor
push
add
add
inc
adc
add
fstpl
outsl
sbb
rcrl
or
dec
cmpl
gs
popl
sbb
rep
push
sbb
fidivrs
jbe
lret
cmp
cmp
sub
jl
sub
add
cld
gs
sub
push
jb
or
aaa
add
jae
and
push
add
and
or
xchg
rclb
xchg
cmp
test
fst
add
xor
mov
mov
add
loop
inc
mov
cmp
dec
mov
add
adc
ljmp
es
add
imul
xor
mov
and
pop
repz
jbe
stos
icebp
dec
daa
shrl
ss
lods
mov
add
out
out
in
add
mov
pop
ss
hlt
or
mov
popa
mov
add
cmc
lods
ljmp
xor
inc
add
pop
adc
or
ja
out
mov
mov
sub
pop
shl
pop
mov
add
sahf
xchg
jecxz
pop
push
cmp
cli
and
and
clc
fidivrs
inc
icebp
jb
add
adc
andb
pop
add
int3
aaa
jmp
add
inc
mov
jg
in
popl
int
jno
out
sbb
aad
and
sbb
repz
sub
adc
sbb
fcomps
rol
leave
lock
inc
xor
scas
sub
test
dec
dec
xorl
add
aaa
jp
cs
sub
mov
lahf
cmp
cld
repz
pusha
xchg
std
rolb
loop
bound
popf
sbb
xchg
or
sahf
jb
ret
fst
or
shrb
cmp
test
jo
sbb
xchg
cmpsb
xor
lret
add
or
mov
stc
cmp
add
divb
or
adc
lcall
scas
mov
hlt
cmp
shlb
inc
pop
shlb
mov
scas
es
ret
adc
js
sar
add
inc
movaps
adc
test
add
inc
mov
inc
mov
loopne
jmp
or
popa
cmp
enter
into
fildll
mov
in
shll
loope
xchg
and
mov
js
xchg
inc
sub
in
xlat
adc
add
mov
pop
fs
sbb
xchg
andnps
dec
or
add
stos
cmp
pop
lods
sub
mov
gs
xor
mov
sub
mov
cwtl
ret
jnp
mov
or
aam
mov
inc
push
cmp
push
decl
and
ret
shlb
je
cmp
sbb
mov
mov
jb
int3
jo
fwait
mov
cld
mov
call
dec
mov
sub
or
ljmp
sub
mov
mov
or
push
das
call
movsl
push
in
inc
int
mov
sbb
add
cmp
mov
and
fwait
test
insl
ds
testb
int3
sahf
jp
push
fsqrt
iret
bnd
sbb
add
jmp
dec
bound
xlat
dec
hlt
jmp
sub
add
outsl
scas
mov
fbstp
inc
xchg
lahf
out
roll
cmp
adc
cs
imul
popa
call
outsb
cmpsb
jmp
jge
movsb
stos
pusha
jnp
enter
add
mov
dec
adc
fs
out
fistl
fisubl
shrl
lock
adc
mov
dec
inc
xor
jl
rolb
sbb
mov
pop
adc
fsubs
cmp
xor
push
push
aam
pop
icebp
push
loopne
insl
inc
and
pusha
adc
xor
push
aam
lret
lods
push
lock
or
or
decl
arpl
mov
stos
xor
in
imul
jg
daa
int3
popf
inc
jae
ljmp
push
out
icebp
jp
cmpl
mov
add
fwait
mov
jno
add
movl
adc
adc
mov
popa
inc
retw
aad
cmpl
std
repnz
sbb
or
aam
push
xchg
pop
and
loopne
jmp
pop
sub
stc
jecxz
iret
test
mov
mov
ret
lds
xor
jle
mov
mov
ljmp
xlat
xchg
inc
pop
and
pop
sub
pop
shll
push
mov
pop
scas
add
repnz
xorb
push
mov
enter
mov
mov
add
mov
mov
movsb
pop
jb
je
jne
add
fsubr
lods
cmp
push
xor
lcall
scas
xchg
inc
add
sbb
mov
mov
push
inc
add
pop
mov
in
add
add
call
shll
insb
cmp
outsl
aas
jo
jp
pop
xor
xchg
mov
mov
cmpsl
fidivrs
push
sub
adc
out
mov
movsb
aam
call
loope
push
inc
push
push
and
sarl
dec
mov
mov
int3
xchg
loop
shll
pop
das
or
cmp
push
mov
dec
out
or
pop
hlt
mov
sub
enter
in
push
cmp
leave
and
adc
cmpsb
fnsave
xchg
xlat
xor
loopne
cmp
or
ss
dec
repz
push
inc
sbb
add
dec
or
xchg
aad
inc
adcl
insb
pop
cmpsl
pop
xchg
mov
mov
leave
dec
insl
pop
jl
lods
cmc
dec
movsl
out
bound
add
mov
aam
daa
clc
and
movsl
clc
fisttpl
bsf
adc
push
movsl
clc
sbb
div
imul
addr16
aam
scas
mov
lock
icebp
aas
popf
push
mov
xor
mov
cwtl
data16
cmpsl
shrl
mov
insl
or
rolb
lods
gs
lahf
sbb
icebp
jecxz
or
ds
xor
xchg
jnp
inc
mov
into
shr
ret
add
push
loop
inc
enter
scas
ds
mov
lahf
imul
sbb
push
loope
pop
mov
idiv
out
hlt
roll
lock
loopne
addb
gs
hlt
mov
rcll
jl
pushf
sahf
or
mov
cld
hlt
cmp
adc
sti
mov
or
xchg
out
pop
adc
bound
xchg
xor
add
pop
mov
negb
mov
add
loope
cltd
xor
ret
mov
outsl
fdivs
mov
sub
push
add
mov
adc
clc
push
cwtl
and
outsb
notb
jns
xchg
adc
or
add
out
push
scas
clc
push
sbb
sbb
pop
cmpxchg
inc
dec
mov
aad
sub
push
inc
cmp
rcrl
push
xor
lock
adc
cmp
filds
jne
test
faddp
les
sbb
ret
add
dec
in
jne
inc
dec
je
dec
cmp
fiaddl
add
dec
jg
mov
mov
fcmovnu
push
movsb
pop
cmp
lret
adc
cld
mov
cld
inc
or
inc
ret
hlt
out
pop
scas
add
inc
mov
jnp
inc
add
inc
mov
jmp
mov
test
decb
push
add
mov
mov
call
mov
lcall
mov
add
ss
jae
test
jl,pn
mov
pop
mov
pusha
xchg
inc
cltd
adc
lret
hlt
mov
push
flds
add
shrb
mov
xchg
test
ss
jl
push
add
adc
sbb
outsb
mov
movsb
scas
pusha
repz
ja
push
add
mov
jbe
mov
xchg
outsb
pop
mov
and
sub
in
outsl
push
sub
dec
add
repnz
in
imul
jbe
ja
cwtl
and
push
cli
sbb
dec
out
nop
cmp
test
xlat
and
mov
xor
mov
mov
dec
test
lock
or
or
shl
xorb
inc
test
mov
jl
xchg
jnp
push
orl
loop
jmp
stos
scas
xor
xchg
xlat
test
xchg
add
ja
repz
push
ret
push
out
and
adc
mul
int
dec
fmull
loope
jae
lea
add
mov
push
xor
cmp
xor
adc
inc
mov
and
add
or
or
or
fisubrs
cmpsb
and
xchg
push
xor
jb
rcrb
cmp
push
cli
jecxz
jae
insb
sahf
cmp
repnz
mov
rcll
xor
js
mov
mov
pop
mov
adc
into
stos
xlat
call
fsubrl
sahf
test
pop
scas
xchg
adc
sub
sbb
test
jae
loop
inc
add
aaa
addl
loop
push
insb
movsl
les
pop
mov
hlt
int3
clc
lea
clc
cmc
imul
jnp
xor
and
rclb
js
sbb
xchg
ja
xchg
scas
lret
bound
test
fwait
outsb
mov
jecxz
outsl
loope
cmp
adc
dec
fisttps
or
mov
inc
clc
inc
mov
xchg
add
test
je
fisubl
sti
sahf
ljmp
outsb
xchg
xchg
sbb
add
popa
stos
xchg
cmp
sub
pop
ficoms
push
pop
les
fidivrl
add
in
int3
push
stos
add
xchg
es
outsl
lahf
movsb
lods
ds
sbb
fmuls
or
and
or
ret
jb
sbb
add
mov
pop
sbb
lret
mov
ret
pcmpgtd
xchg
sub
std
jo
add
cmp
outsl
mov
pop
xor
pop
orl
sbb
mov
scas
filds
jo
xor
enter
inc
incl
aas
or
ficompl
lock
cmpsl
mov
dec
aam
aas
sbb
pop
sbb
jl
inc
mov
ljmp
xor
xchg
cmc
xor
out
adc
or
icebp
es
ds
std
std
out
les
clc
add
inc
ds
jno
jecxz
fdivl
fisubs
pop
int3
push
jbe
xchg
ja
or
sbb
sbb
lods
xor
ds
adc
addl
jle
hlt
cmp
fistpll
cmp
cli
inc
or
cmp
or
loop
jnp
push
or
push
incl
add
pop
adc
cmp
imul
jae
sti
mov
inc
add
cs
pop
inc
add
nop
xorl
into
iret
or
push
aam
insb
push
push
ds
xchg
pop
loope
sub
cld
xor
mov
add
outsl
mov
push
repz
add
adc
cmpsb
mov
and
frndint
xlat
jge
add
xlat
iret
hlt
xchg
int
pusha
arpl
fsubl
pop
push
mov
scas
xor
movsl
loopne
push
pop
add
sarl
cs
push
lret
mov
sbb
pop
ljmp
iret
adc
xor
loopne
push
test
and
push
mov
stos
out
bound
push
jae
das
ficompl
mov
and
pusha
test
in
icebp
addr16
cmp
add
in
or
cmc
xchg
adc
add
out
sub
jbe
jno
cmpsb
imull
jbe
cmp
mov
data16
push
into
xchg
fldenv
int3
in
out
mov
inc
pushf
jl
jbe
icebp
sbb
call
xchg
pop
or
filds
push
mov
and
pushf
icebp
push
pop
loop
imul
enter
out
push
or
add
inc
mov
movsl
fnstenv
enter
push
mov
rcrb
pop
dec
arpl
mov
inc
inc
mov
test
push
mov
aam
jne
scas
inc
cmp
mov
jp
mov
cmpsb
imul
nop
lret
lahf
pop
sub
sbb
adc
movsl
shrb
mov
fstps
sub
ds
mov
stos
or
jmp
inc
outsl
insb
jle
mov
cmp
mov
orl
adc
insl
push
mov
jmp
ret
ljmp
mov
ja
lock
sbb
pop
mov
pop
cmp
call
mov
clc
sti
rolb
cld
cmc
inc
sti
sub
fildl
jo
jle
jne
mov
ljmp
jae
xor
rorw
cmp
negb
mov
inc
mov
jae
and
incb
mov
ss
je
pop
daa
std
bound
dec
xchg
loope
test
popa
movsb
add
inc
pop
stc
pop
pop
mov
stos
pop
lret
push
fildl
addr16
shrb
xor
xchg
iret
push
sub
icebp
add
test
jecxz
scas
inc
xor
cmpsl
dec
and
xchg
cli
setnp
mov
fidivs
mov
mov
ret
mov
add
lea
test
insl
jnp
xorb
jmp
inc
shlb
call
and
pop
cmp
jno
sti
iret
mov
mov
add
jecxz
scas
leave
in
pop
mov
jmp
or
sti
push
pop
mov
mov
into
adc
jl
jge
cltd
inc
clc
push
xchg
ss
xlat
bound
mov
dec
push
gs
or
lahf
inc
movb
sub
xchg
out
icebp
push
push
icebp
jnp
sub
fisttpll
xchg
roll
jo
pop
mov
xor
test
xchg
je
lods
mov
sbb
test
dec
repz
inc
mov
ret
pop
cmp
loop
cmpsb
mov
adc
ja
popf
stos
cmpsb
imul
cmp
ss
ja
nop
dec
repnz
rolb
mov
mov
out
test
jg
cli
jo
popf
shl
cld
xchg
and
push
mov
xchg
dec
or
mov
push
adc
or
and
movsl
call
or
daa
dec
jnp
inc
shl
outsl
inc
fldl
sbb
mov
enter
subb
ret
add
push
bound
shr
xor
into
loop
lods
adc
ret
cld
out
subb
sbb
jp
imul
add
lea
repnz
push
das
and
or
addb
adc
outsl
rorb
shr
xor
out
add
jno
stos
xchg
push
movsb
rorl
adc
gs
cs
lock
ss
pop
lahf
scas
ss
dec
mov
repnz
mov
sbb
pusha
jbe
hlt
jp
clc
mov
jnp
add
add
fbld
mov
lea
lcall
ljmp
mov
roll
jno
pop
inc
pop
xchg
in
push
popf
sbb
iret
stos
and
int3
in
stos
in
bswap
cmpsb
push
push
pop
and
xchg
xchg
xchg
jmp
add
jecxz
popa
push
push
call
jge
pop
push
push
leave
adc
aaa
pushf
shll
out
loopne
and
mov
cld
loop
inc
insl
pop
scas
leave
push
cmp
cs
stos
faddl
push
mov
lods
adc
push
dec
sahf
xor
aad
pop
inc
cmp
mov
mov
jae
mov
out
add
xor
loopne
adc
lret
cmp
sti
xchg
sbb
fs
mov
mov
or
ja
fbstp
xchg
les
xchg
mov
xor
movsl
rolb
add
push
outsb
mov
dec
mov
or
xchg
dec
jae
in
insl
movsb
lcall
fwait
stc
or
inc
out
jo
inc
sub
sbb
mov
sahf
sub
stos
mov
es
ds
cmpsl
loop
repz
dec
jb
arpl
dec
xor
mov
popf
ljmp
in
and
jg
aad
push
les
add
orl
mov
sub
mov
jnp
push
mov
push
sbb
sub
ret
jp
pop
es
rorb
js
out
or
rorb
aad
cmp
pop
dec
pop
outsl
hlt
adc
jns
test
sbb
sbb
mov
jecxz
jno
or
add
lock
nop
sub
or
xor
mov
adc
test
sub
add
fsubrl
sbb
lock
nop
pop
sahf
cs
jl
xchg
stos
mov
push
ffreep
or
pop
dec
ret
mov
cld
mov
jb
xor
pusha
shr
push
add
enter
xchg
jmp
inc
call
loopne
clc
cmp
xchg
and
lock
mov
call
rorl
mov
mov
mov
jecxz
and
pop
in
rcr
jo
xor
xchg
pop
jmp
loop
fwait
pop
sbb
cmp
push
mov
mull
rcrb
pop
mov
ficompl
mov
add
pop
call
sbb
fisttps
adc
mov
xchg
sub
sub
int
insb
ffree
cs
ret
pop
clc
add
mov
aaa
fimull
loope
dec
mov
sbb
push
adc
lock
cld
out
or
push
sub
cmpsl
adc
push
int3
std
in
push
mov
outsb
jmp
out
jns
jnp
clc
and
fcomp
adc
mull
pop
je
cwtl
lret
mov
and
xor
pop
xchg
mov
xchg
scas
rcl
add
fisttps
nop
mov
pusha
and
stos
dec
adc
and
loop
cmpsb
fidivl
call
imul
repz
femms
aas
mov
dec
lret
sahf
xor
popa
jmp
pop
jecxz
mov
or
outsb
push
les
inc
or
cmp
push
popa
pop
mov
mov
mov
add
fldenv
sub
or
shl
sbb
lcall
or
cmp
mov
jmp
sbbl
repz
sbb
cli
das
lods
icebp
dec
mov
mov
ret
dec
ss
cmp
cli
adc
jmp
sahf
int
gs
mov
ja
aam
pop
and
gs
mov
ja
cli
xchg
and
and
out
push
aam
cwtl
mov
adc
orb
call
cmpsb
out
xchg
jle
cmp
sub
or
sbb
imul
enter
pop
sub
and
add
mov
mov
insb
mov
imul
inc
loopne
inc
ds
or
dec
rcll
dec
inc
xchg
xchg
leave
mov
adc
xchg
enter
mov
sub
sbb
jp
mov
dec
adc
dec
arpl
je
data16
or
cs
loop
rcr
mov
push
mov
inc
fisttps
mov
or
adc
mov
cmp
dec
orb
pop
mov
stc
out
pop
adc
dec
pop
fdivrl
icebp
sar
mov
aam
inc
imul
pop
aas
or
enter
jae
bound
dec
cmpsl
pusha
cmpsb
cmp
add
push
jg
mov
adc
jnp
and
dec
ja
sub
pusha
inc
inc
inc
aam
insb
pop
xor
xchg
push
dec
sub
cmp
pushf
stos
xor
cmp
adc
out
shlb
sub
loopne
fdivs
out
les
shrb
ds
call
addl
es
je
cmp
sarb
roll
aas
add
jo
xchg
xchg
inc
je
push
push
jp
xor
in
movsl
cwtl
jae
mov
adc
push
mov
pop
cmpl
ds
push
push
xchg
dec
pop
std
dec
not
out
js
xor
andb
shlb
ds
jbe
mov
add
sbb
das
mov
jns
mov
or
xor
sti
pop
xchg
xorl
mov
repnz
mov
rcll
icebp
jp
mov
sub
pop
and
gs
ds
mov
pop
and
scas
or
incb
mov
stos
dec
das
ljmp
cmc
fidivl
insb
or
xor
pop
js
js
cmpb
mov
pop
data16
sub
incb
xor
pop
jae
and
add
rclb
aaa
mov
and
mov
cmp
inc
xchg
push
rol
push
cmpsl
pop
cld
cwtl
push
dec
mov
dec
ljmp
pavgb
mov
sahf
pop
fsubrp
cmpsb
sub
and
inc
rcr
bound
int3
insb
cld
fsubrs
ss
and
in
add
rolb
outsl
xlat
adc
pop
pusha
je
add
dec
daa
rcrb
insl
ret
dec
rcr
in
mov
ret
dec
lcall
inc
sbb
inc
pushl
mov
dec
testl
adc
repz
dec
xchg
daa
cwtl
vmovhpd
push
add
jbe
stos
or
inc
push
xchg
fidivs
xchg
cmp
sbb
clc
icebp
fidivs
fwait
cmp
out
jl
and
add
sbb
cld
pop
incl
mov
lock
xor
dec
js
cmp
cmpl
pop
add
adc
fs
xor
insb
xor
dec
xor
sbb
sub
fmul
mov
inc
loope
adc
dec
ret
sbb
xor
mov
sbb
mov
pop
add
xor
adc
aas
cs
mov
add
push
mov
lea
add
push
xchg
outsb
inc
test
adc
mov
add
and
jmp
cmp
mov
pusha
cmpsl
mov
sbb
aad
sbb
loopne
aaa
xchg
stos
push
mov
sahf
pop
push
or
sbb
jecxz
add
jb
jne
push
mov
cmp
sbb
adc
stos
mov
in
xchg
add
aaa
mov
mov
and
insl
xor
mov
pop
scas
mov
ljmp
icebp
dec
call
in
mov
sbb
and
sub
in
xor
cmp
imul
xchg
mov
test
mov
test
and
xor
push
pop
or
push
pop
xor
or
ficomps
cmp
fucomip
jno
add
add
add
xor
and
jbe
dec
cmp
mov
fsubrp
fildl
pop
pop
xorl
ret
scas
mulb
adc
nop
push
mov
pushf
pop
cmp
xor
cmp
std
xor
je
sbbb
mov
fisubl
jno
hlt
inc
jl
pop
and
addr16
adcl
mov
mov
loop
pop
jl
sub
cmp
in
insb
cmpl
pop
mov
mov
insl
cwtl
xor
xor
xchg
lods
and
cmpsb
adc
pop
jnp
arpl
arpl
pop
imul
push
mov
or
subl
adc
loop
pop
mov
rorb
add
jne
das
or
xlat
call
leave
adc
frstor
int3
fdivrl
imul
shll
add
stos
inc
mov
cld
add
mov
push
in
test
repz
outsl
cmc
fistps
mov
xor
dec
push
aas
jno,pn
jno
pop
in
rorl
loop
or
jl
jmp
push
inc
imul
int
pop
rorl
jl
mov
adc
and
push
out
cmc
dec
jb
pop
sub
push
cld
rclb
add
sbb
decb
xchg
clc
adc
imul
shrl
adcl
ljmp
andl
or
fdivrs
test
stos
adc
and
cwtl
call
sub
mov
loop
int
addb
bnd
ljmp
mov
andb
push
das
test
inc
and
jmp
sub
ud0
fs
in
mov
addr16
or
into
js
addl
mov
jl
lock
jo
cmp
sahf
pop
push
js
inc
sub
lahf
mov
push
lock
pop
adc
mov
pop
jp
xor
push
adc
popa
mov
movsl
aad
fwait
lahf
ficoml
jo
mov
inc
sbb
xor
fld
sbbb
ret
std
xor
cld
mov
leave
movsl
or
test
in
mov
andl
pop
add
mov
fldln2
xchg
mov
jge
xchg
movl
xor
std
imul
aam
pop
dec
dec
jg
fnstenv
mov
scas
jle
inc
add
ljmp
stos
roll
mov
sahf
dec
mov
in
lcall
pop
mov
subl
test
xchg
mov
push
jae
pop
push
call
scas
into
sahf
mov
ret
dec
aam
mov
fidivl
mov
inc
jge
mov
mov
inc
stos
pop
jl
nop
cmp
pop
push
pushf
push
inc
addl
insb
cli
testl
sbb
or
pushf
popa
lods
sub
sbb
or
jg
pop
dec
sti
mov
movsl
adcb
andl
xlat
stos
push
cli
hlt
ss
sbb
mov
imul
jb
fsubr
inc
pop
pop
pop
mov
mov
pop
clc
xorb
inc
adc
adc
add
push
shl
xchg
test
jne
rorl
lods
stos
ret
inc
cmp
lock
mov
add
push
push
dec
mov
add
out
bound
js
mov
pop
jo
aad
in
add
lock
andb
js
jecxz
ds
movsb
idivb
mov
mov
stos
pop
ss
xor
xor
xor
adc
out
call
sub
dec
mov
cwtl
ja
mov
add
nop
loop
jp
fsubp
rcr
jecxz
shr
xchg
cmc
sbb
and
js
or
je
jle
jg
xchg
jo
xchg
and
pop
xchg
popl
and
rorb
in
fwait
inc
add
sbb
pop
das
lea
dec
test
and
pop
sbb
icebp
add
add
into
nop
in
pop
mov
sbb
gs
in
or
jl
out
jge
sub
inc
jl
add
inc
negb
mov
pop
jg
adc
push
ficoml
das
stos
cwtl
dec
cld
xchg
scas
test
jg
add
mov
ljmp
sub
stos
mov
jp
sbb
inc
int3
mov
cmp
xor
test
jmp
shll
inc
jle
insb
shl
outsl
xchg
lds
pop
stc
cmpsb
aas
cmp
jp
arpl
and
inc
dec
arpl
lret
add
mov
push
cmpsb
or
jo
pop
testb
fcoms
sub
xor
sub
or
lea
imul
shll
xor
ret
adcb
mov
mov
mov
je
scas
das
mov
push
addb
movsl
or
mov
das
and
or
xor
adc
push
outsl
fadds
push
add
roll
xchg
aaa
outsb
cli
les
mov
mov
les
les
leave
xchg
jg
mov
add
jp
jl
mov
lret
cwtl
iret
popl
loopne
test
inc
mov
sub
les
dec
pop
loop
jge
or
ret
jo
fists
lock
and
push
or
insl
inc
pop
sub
scas
cltd
movl
mov
fiaddl
cvtps2pi
test
clc
das
jo
xchg
ljmp
sbb
aad
aas
inc
add
cmp
repz
add
cmp
mov
dec
shlb
mov
insb
mov
or
lds
das
push
mov
jg
mov
lock
mov
xor
push
mov
jbe
jge
xchg
enter
jbe
jge
addl
adc
xor
mov
add
mov
cmp
lea
inc
sub
loopne
sbb
mov
ljmp
hlt
cmc
mov
mov
mov
inc
sbb
sbb
or
pop
mov
cs
in
call
outsl
add
jb
cld
jo
mov
mov
mov
adc
or
xchg
dec
notl
dec
adc
mov
sub
js
incl
das
mov
push
sbb
cltd
lahf
jle
jecxz
fwait
mov
loope
addl
pusha
rol
call
out
imul
mov
psubb
int
sbb
lret
dec
divl
jecxz
sbb
addl
xlat
loop
call
inc
hlt
ljmp
ds
testb
imul
mov
xchg
lods
or
or
pop
aam
das
push
cli
cmp
inc
lods
jo
bnd
sahf
sbb
add
icebp
and
push
pop
xor
int
test
mov
push
lret
shll
ficompl
inc
push
imul
adc
test
and
sub
mov
rcr
cmp
int
inc
out
adc
mov
mov
insl
mov
push
repz
adc
cli
test
das
cmp
cmpsl
xor
andl
fmull
pop
mov
loopne
js
dec
and
add
test
dec
aad
push
lods
push
movsl
cld
aaa
popa
out
sub
lods
xor
mov
push
scas
dec
mov
dec
sub
or
insb
test
cmp
and
pop
lret
dec
push
lock
cmpl
xchg
mov
xor
scas
jb
cltd
mov
daa
loopne
les
or
pushf
sub
inc
shll
ret
das
cs
pusha
mov
imul
adc
ret
mov
sbb
mov
adc
add
filds
add
fstl
cmc
pop
sub
in
insb
jno
pop
testb
popa
add
push
shl
dec
les
jl
push
or
xorl
loop
scas
scas
jb
pop
in
decl
mov
test
int3
inc
or
scas
repnz
push
xchg
out
jg
mov
inc
xor
in
mov
movsb
inc
lea
pushf
or
stos
pushf
adc
sub
or
sbb
pop
scas
xor
add
scas
popa
and
bound
pop
das
sahf
add
repnz
jbe
icebp
popa
mov
lds
cmp
pop
stos
or
loop
and
sbb
adc
jmp
mov
adc
and
shll
fs
mov
pop
aad
add
ds
jp
sahf
stos
iret
pusha
mov
icebp
xlat
inc
and
test
xor
int3
pusha
stc
rclb
inc
and
les
cmp
xchg
cmp
call
cmc
mov
mov
sbb
adc
mov
push
leave
and
sbb
inc
mov
adc
sbb
cmp
daa
pop
add
cmp
cli
mov
loope
jne
pop
arpl
mov
mov
es
cmpb
movsb
cmp
leave
jmp
inc
movsl
pop
xor
orl
push
add
jb
sahf
jp
arpl
fldz
lds
pop
jo
dec
xchg
imul
dec
mov
and
std
jnp
outsb
xor
add
sahf
test
addl
mov
testb
mov
loope
scas
push
jnp
sbb
in
dec
rcll
xor
mov
dec
sbb
repz
test
fcmovbe
cmp
pop
daa
jle
js
stos
inc
xor
les
fs
fildll
ds
push
stos
sub
sub
or
mov
repz
das
cmp
dec
in
mov
mov
sub
stos
int
mov
stc
icebp
dec
sbb
sarl
inc
add
test
roll
xchg
cmp
xlat
out
scas
ret
fists
push
pushf
ds
adc
test
fdiv
in
and
cmpsb
hlt
adc
xlat
xchg
push
fadds
cltd
or
xchg
loop
jno
lea
xrelease
pop
mov
loopne
ljmp
pop
push
sub
dec
or
mov
clc
test
fs
andb
jl
xchg
add
jge
daa
fadds
jmp
pushf
pop
jmp
mov
add
fldt
int3
jge
jb
xchg
sub
fldl
lods
das
ret
xchg
ja
test
shlb
dec
mov
daa
lock
push
lock
cmp
adc
inc
push
mov
mov
xchg
mov
pop
clc
dec
mov
aad
jae
sub
imul
and
fstpt
cld
mov
jg
jno
push
std
cmp
dec
lds
xchg
pop
outsb
subb
das
add
js
inc
add
ds
clc
outsl
dec
sub
scas
inc
movsl
icebp
out
sbb
xchg
scas
xchg
js
or
or
lcall
sub
addr16
xlat
pop
dec
cmovl
jnp
mov
dec
in
or
lock
push
leave
out
aad
add
lock
and
jmp
rorl
rcl
daa
and
ds
mov
xchg
fildl
rcr
fisttpl
pop
xor
loope
enter
aaa
adc
lea
and
mov
imul
add
es
rorl
inc
shll
shl
addr16
push
jge
scas
mov
sti
scas
jbe
lea
mov
lock
mov
mov
push
pop
sub
dec
cli
or
mov
mov
sbb
call
sub
mov
lea
mov
inc
cmc
out
es
push
and
ds
jae
filds
push
mov
jmp
cli
movsl
push
test
pop
mov
test
iret
jns
call
filds
das
repnz
std
xor
rcr
sbb
and
xor
std
adc
jne
add
sbb
cmpsl
xor
dec
imul
fldl
jp
jne
loopne
sbb
pop
out
inc
mov
jae
pop
das
or
addl
xor
xor
incl
add
sub
xlat
xor
add
mov
mov
stos
test
jle
ret
and
push
scas
outsl
mov
loopne
ljmp
jl
mov
ret
pop
loopne
imul
pop
xlat
rclb
sub
inc
loopew
pop
clc
and
in
dec
gs
jecxz
mov
inc
sub
mov
or
push
fcoms
push
push
mov
push
movb
mov
js
fs
mov
xchg
cli
divl
add
in
add
mov
es
push
notb
dec
je
inc
insl
and
pop
jmp
cld
push
adc
je
cmpsb
adc
xchg
vmovupd
push
aad
lods
popa
add
mov
push
fisubl
mov
push
rolb
cmp
jg
sbb
ds
jge
mov
lcall
mov
sub
mov
inc
jl
pop
test
fadd
push
adc
idiv
outsl
daa
xor
and
fs
leave
jnp
in
daa
arpl
inc
aaa
bound
mov
jg
stos
push
outsb
shlb
jno
sbb
mov
pusha
mov
roll
clc
fucomi
cs
add
outsb
inc
mov
addl
scas
bound
inc
in
ror
sarl
inc
inc
cmp
dec
jp
pop
cmc
sbb
mov
mov
popa
je
inc
dec
pop
leave
fucomi
jo
scas
adc
adc
sub
inc
mov
pcmpgtb
and
jmp
sbb
mov
push
popl
cmp
insl
out
into
movsb
mov
mov
dec
imul
jnp
push
mov
jns
aam
or
sub
sahf
sub
sbb
lods
jno
imul
sbb
pop
ds
lcall
aam
ret
adc
loope
sahf
call
lahf
and
pop
or
pop
cs
push
aam
shl
pop
cld
and
lret
lods
xchg
push
add
bound
inc
mov
sub
ss
pop
cmpsl
stos
lahf
cs
je
mov
mov
dec
in
int3
scas
je
loopne
adc
stos
mov
push
scas
add
int3
cmp
inc
adc
push
dec
mov
or
push
sahf
mov
pop
lods
decb
or
push
jo
test
rcrl
jg
mov
xor
dec
adc
je
pop
jecxz
jae
sbbb
inc
pop
out
adc
and
loopne
mov
and
addb
jp
cmp
hlt
or
mov
jmp
inc
add
push
or
push
aaa
ss
adc
hlt
adc
jp
lock
fsubs
testl
repnz
ljmp
sub
pop
mov
js
in
repnz
mov
pop
xor
inc
cmp
sbb
sub
pop
add
sub
test
mov
xor
fisubl
dec
ljmp
ret
icebp
inc
jns
jns
sbb
sbb
mov
dec
movsb
lods
xchg
sub
cmc
setle
inc
or
pop
mov
xchg
testb
aaa
jno
or
aas
lahf
jno
or
pop
xorl
lcall
lods
pop
push
jg
cwtl
outsl
mov
inc
jb
stos
test
js
fdivl
ljmp
xchg
xor
mov
stos
push
sbb
or
inc
ffreep
pusha
popa
or
push
cmp
jnp
mov
or
lahf
bound
jl
add
push
fbstp
ret
jb
idivb
insl
movsl
inc
jge
fldcw
into
mov
rorb
sub
call
dec
lds
and
xchg
adc
aas
fnstsw
call
fs
aad
lahf
lea
imulb
cmp
sub
lods
dec
test
and
hlt
adcl
jl
mov
pop
adc
sub
dec
and
in
adc
stc
pusha
mov
shlb
jnp
dec
int
std
rcll
arpl
jae
or
and
xor
lret
sub
inc
push
xor
jp
sub
mov
pushf
shl
das
outsl
in
fsts
mov
loopne
scas
mov
mov
jp
sahf
push
mov
daa
cmp
icebp
cmc
add
sbb
mov
mov
mov
inc
or
inc
push
jmp
cmp
cmp
addr16
ss
ret
mov
cwtl
dec
mov
stos
out
xchg
mov
stos
lret
cmc
inc
mov
mov
dec
adc
push
sub
or
cli
inc
cmp
roll
mov
xlat
rcrb
add
in
rcll
push
xor
imul
jno
lds
je
add
subl
repnz
subl
add
imul
pop
inc
cmp
call
fadd
sti
outsl
aad
jecxz
fucom
xchg
sbb
lcall
or
jmp
mov
push
cmp
jno
hlt
pop
lea
lea
fnstsw
inc
es
bound
push
fbld
sbb
test
cltd
adc
mov
xor
outsb
add
sub
jns
xor
mov
add
inc
sbb
in
add
filds
rol
je
cmc
loopne
xlat
aaa
cmp
ds
and
xchg
xchg
xchg
test
cwtl
call
push
or
pop
sub
aad
pusha
adc
lret
int3
or
inc
leave
mov
mov
shrb
or
sbb
fidivrl
mov
cmpsb
mov
xor
mov
mov
aam
test
inc
inc
addr16
sbbl
or
pushf
imulb
sbb
aas
mov
inc
outsl
and
pop
repnz
push
jo
push
stos
shlb
repz
jl
fcomps
loop
jp
xor
fsubs
pop
das
pop
fstpt
movsb
arpl
xchg
mov
mov
push
and
xor
add
cli
jnp
jo
jmp
jg
enter
inc
xchg
jp
adc
mov
xchg
js
adc
jg
sbb
sbb
lds
pop
fadd
mov
lret
popf
xorl
arpl
mov
loope,pt
mov
pop
mov
and
mov
xor
cmp
roll
pop
dec
add
pop
pop
sbb
pop
mov
arpl
ss
aaa
and
sahf
repnz
pop
popf
popf
add
ret
lods
sbb
jge
push
lahf
cmp
inc
mov
or
xor
scas
jnp
aaa
sbb
mov
pop
and
and
inc
dec
mov
stos
insb
jp
ja
cmp
fists
sarl
mov
loopne
in
icebp
or
jae
adc
pop
test
ffreep
mov
mov
mov
push
mov
add
sub
add
ljmp
add
dec
lcall
iret
arpl
and
pop
xor
cmc
push
lahf
dec
jnp,pt
xor
nop
lods
xchg
iret
aaa
adc
sbbl
mov
rcrb
shll
pop
inc
dec
push
pop
push
mov
cwtl
pop
pusha
mov
xor
sbb
addr16
mov
mov
rorb
inc
sub
inc
mov
inc
or
dec
xchg
cmpsb
test
nop
aas
imul
mov
popl
cmp
mov
ret
push
or
adc
les
test
leave
stos
sub
jo
push
and
loopne
arpl
adc
scas
loop
add
cmp
and
ret
jne
inc
sti
fadd
sbb
stos
fistpl
pop
xchg
inc
push
rcr
enter
or
jmp
popa
mov
mov
aad
mov
adc
dec
flds
mov
scas
jp
jp
dec
mov
pusha
inc
jnp
hlt
xor
mov
jno
int
cmp
pushl
mov
ljmp
scas
mov
imul
and
int3
jae
mov
jno
cmc
insl
cmp
adc
lcall
orb
ret
xchg
repnz
jp
fwait
sbb
rcrl
loopne
flds
insb
or
cs
mov
sbb
shrb
mov
insb
fildll
mov
sub
add
cmpsl
push
dec
and
push
pushf
aad
mov
in
js
fiadds
test
mov
jge
in
xor
shll
jg
or
cmpsb
pusha
pop
push
test
cmp
and
gs
es
popa
sub
fsubrl
cmc
ret
adc
sbb
or
shr
lar
fsts
imul
push
adc
xchg
and
je
dec
mov
mov
xchg
push
mov
pop
ret
stos
jecxz
das
ds
push
or
jb
cli
adc
fdivrs
in
jbe
jmp
rolb
sub
jp
mov
orl
add
mov
or
rcrb
fst
pavgb
out
and
mov
mov
jo
jnp
aaa
mov
push
hlt
scas
sbb
xchg
loopne
push
pop
push
jno
inc
out
daa
scas
pop
or
jnp
xor
mov
ljmp
jne
ljmp
repz
mov
push
popf
into
adc
sbb
cwtl
inc
test
mov
mov
mov
xchg
stc
stos
lahf
les
enter
sub
fcom
loop
scas
pop
mov
pop
jb
ja
movsl
dec
stos
sbb
lods
or
xor
out
jne
adc
push
sub
sbb
mov
cmpl
and
xchg
cmp
outsb
push
pusha
xchg
mov
stc
mov
aas
pop
pushf
push
push
mov
mov
jg
shrb
enter
fwait
jecxz
cmpsb
jecxz
dec
jge
fcoml
js
je
movq
jg
push
mov
pop
jne
xchg
pop
add
dec
and
clc
inc
xchg
mov
add
or
inc
lcall
sub
mov
out
lds
jbe
lcall
ss
ret
sbb
xor
add
mov
inc
je
mov
bound
push
stos
pop
sbb
psubb
xchg
cli
fldcw
dec
sub
incl
arpl
out
aad
loop
push
jle
pusha
pop
aam
sub
inc
pop
sbb
dec
pop
push
scas
mov
lock
repz
dec
loopne
rcl
stos
cmp
jne
lret
jmp
adc
adc
add
jp
pop
xor
push
mov
sti
stos
cmp
decb
mov
add
xchg
aas
rcr
inc
leave
sti
push
cmp
inc
clc
inc
jne
or
mov
shrb
mov
test
pop
add
adc
shl
jmp
add
cmp
out
xchg
inc
mov
xchg
jb
cmp
jbe
adc
les
push
pop
ds
mov
pop
das
andb
sub
push
and
or
das
cmp
push
jl
mov
rol
das
sbb
dec
dec
ds
mov
loopne
mov
push
dec
or
xchg
cmpsl
adc
call
adc
sub
sub
pop
jecxz
xchg
roll
xchg
imul
adc
pop
sbb
scas
jo
jge
sahf
insb
mov
and
in
mov
push
in
push
sbb
push
xchg
cs
pop
inc
roll
or
pop
mov
dec
or
sti
mov
xor
test
repz
imul
jbe
jb
and
lea
sbb
shrl
xchg
es
movsl
mov
sbb
rolb
push
fsub
cwtl
out
movsl
xchg
jno
and
shrb
pop
jae
and
mov
push
jecxz
mov
xchg
inc
insb
pop
jp
sbb
arpl
inc
sbb
mov
mov
adc
and
das
jbe
sbbl
jne
push
lcall
cli
jmp
rcrl
ss
jl
pop
and
jl
inc
pop
dec
fprem1
mov
adc
sbb
loopne
les
push
jne
scas
mov
hlt
jo
push
stc
jle
leave
add
add
je
ljmp
popa
sbb
in
xchg
sbb
cmp
loop
sbb
fsubp
xor
xchg
cmp
into
dec
jne
mov
ds
ficomps
pop
fwait
xchg
mov
inc
inc
jo
push
repnz
mov
sub
xchg
jnp
xchg
mov
repz
inc
call
and
push
lock
sbb
adc
lahf
aad
or
data16
fmull
pusha
int3
fnsave
and
jmp
aas
stos
repz
mov
inc
jp
fwait
jmp
das
hlt
sub
mov
shll
ljmp
out
aad
mov
les
jecxz
insb
inc
aad
adcb
stos
mov
sbbl
sarb
std
jbe
fiaddl
mov
incl
sub
jmp
test
dec
shlb
pop
jecxz
fstpl
jecxz
rclb
inc
insl
sbb
roll
push
push
cmpsb
pop
cmp
dec
push
mov
addr16
pop
mov
lret
mov
ret
into
enter
cs
inc
insb
push
inc
lock
adc
lea
mov
or
pop
lods
inc
add
sub
xchg
test
mov
cmp
add
aaa
scas
cmc
inc
daa
push
inc
pop
jle
leave
add
sub
inc
fistpl
mov
popa
push
cwtl
inc
shll
fmuls
inc
mov
cmp
dec
movsl
je
fsub
les
add
insb
push
sub
pop
sbb
ret
ficompl
cmp
adc
xchg
or
sahf
jb
cmpl
fnsave
imulb
bound
pop
inc
int
fimuls
out
testb
out
leave
push
sub
loope
jne
xchg
test
xchg
xor
out
in
loop
add
adc
mov
scas
lods
gs
push
mov
inc
xchg
and
xor
adcl
aad
pop
sahf
jno
push
popa
pop
xor
pop
test
decb
jp
xor
test
dec
adc
shrl
test
xchg
clc
push
jle
ffreep
add
iret
add
jl
mov
add
sbb
cld
mov
mov
jns
lods
mov
jecxz
sahf
enter
insl
push
push
arpl
inc
and
sarl
call
add
add
push
pop
or
std
cmp
xor
or
add
add
sarb
dec
and
jo
aad
push
fisttpll
insl
pop
cld
xchg
faddp
xchg
popf
xor
xchg
jp
sub
lods
cli
push
decl
gs
mov
mov
dec
inc
sbb
mov
aam
pop
push
xchg
xchg
shrb
mov
push
add
push
xchg
mov
push
imul
xor
insb
les
test
pop
and
shr
test
sbb
pop
mov
jbe
inc
jecxz
idivl
sbb
pusha
stc
rol
sbb
mov
ficomps
mov
aas
jge
rclb
das
dec
sbb
inc
push
push
js
and
loop
cmc
cmp
popf
ror
or
jp
cmpsl
inc
addr16
aam
incl
movsl
loopne
xchg
cli
sbb
pop
inc
fwait
loopne
or
lods
and
xchg
or
and
fistpll
mov
mov
movsb
dec
dec
iret
mov
cmp
call
in
shl
lock
and
or
sbb
out
xlat
inc
add
sub
sbb
loopne
push
push
jecxz
aas
add
jmp
push
mov
in
addr16
adc
aam
push
or
and
inc
mov
adc
cs
stos
fnstenv
ds
and
jbe
ds
sbb
out
mov
or
dec
ds
iret
and
loope
jmp
or
shrl
pusha
bound
push
xchg
fidivrl
push
daa
inc
mov
mov
test
jl
rorb
inc
cmpl
cmp
fsubrs
inc
and
add
adc
fcoml
push
inc
daa
xlat
rol
push
dec
int3
add
sbb
jae
push
push
loope
aad
sbb
push
xlat
adc
loopne
mulb
or
cmp
mov
push
xchg
out
roll
shrb
sub
pop
sbb
mov
dec
or
sbb
repz
add
cmp
test
daa
add
xchg
repnz
add
lods
add
lea
add
or
inc
cld
push
mov
insb
mov
mov
adcb
out
or
cmpsb
add
rclb
out
sub
add
mov
sbb
mov
inc
xchg
xchg
push
lret
rcr
push
jns
xchg
or
mov
push
loopne
aas
push
jo
ds
clc
xor
stos
jecxz
enter
scas
jnp
fdivr
add
pop
sbb
push
jl
in
sbb
add
cmpsl
aad
or
mov
in
mov
jmp
mov
xor
xchg
loopne
jnp
outsl
xchg
mov
pop
add
in
mov
loope
in
cli
xor
and
cmp
cmp
outsl
orl
mov
sbb
jmp
insb
push
jmp
adc
in
lods
ret
mov
xor
ss
cmp
ss
jb
mov
push
ret
xor
lret
cmpb
fdecstp
lods
pop
xchg
pop
pop
push
jl
cltd
lret
jle
push
fsubs
inc
fs
int3
pop
orb
lahf
jo
mov
mov
mov
pop
cmp
xchg
loope
daa
lea
mov
and
repnz
add
test
or
jmp
xchg
xlat
push
and
and
loope
lock
loopne,pn
fyl2xp1
adc
adc
sahf
jg
pop
dec
mov
out
outsl
loopne
test
mov
xor
leave
inc
dec
rcl
jne
les
push
inc
lcall
xchg
mov
lods
adc
outsl
out
daa
add
cli
test
xor
push
mov
ret
or
in
fistpll
aas
cltd
loope
jg
out
mov
mov
icebp
add
test
icebp
adc
fdivr
and
test
sub
sbb
or
inc
popf
cmp
mov
adc
imul
push
cld
lret
lds
mov
mov
aaa
adc
cmpsl
xor
mov
sub
pop
mov
mov
fwait
addr16
stos
jp
add
inc
lea
cs
iret
push
mov
repnz
or
lods
dec
push
fiadds
adc
or
mov
fisubl
mov
mov
bnd
scas
inc
xchg
mov
add
push
jmp
sub
jbe
jmp
mov
cmp
incb
test
pusha
jnp
aas
in
sub
pop
sarl
ja
cld
sub
adc
inc
test
jecxz
or
stos
mov
test
rorb
mov
fdivs
in
add
xor
sbb
testl
pushf
xlat
push
adc
js
repnz
int
scas
pop
mov
sahf
daa
xlat
popf
jp
loope
push
orb
lahf
cmp
lcall
out
fistpl
insl
rclb
and
mov
inc
mov
and
rclb
aaa
mov
mov
lods
push
pop
imul
movsl
cmpsb
lret
adc
mov
xor
mov
stc
pop
cmpsb
or
outsb
shll
add
or
cmp
lahf
pusha
test
xlat
test
scas
inc
iret
mov
outsb
in
sub
lods
mov
mov
push
dec
test
inc
cmp
or
mov
adcl
sub
mov
sub
cltd
cmp
insl
in
scas
or
mov
lcall
sbb
xchg
shlb
fnstenv
jne,pt
jecxz
mov
add
lds
push
out
add
fwait
cmpsl
adc
insb
mov
loope
mov
adc
ficomps
lock
add
add
pop
icebp
out
loope
mov
sbb
cmp
int
in
pop
loopne
pop
jo
ljmp
ret
xchg
add
jecxz
push
mov
fldl
or
push
out
inc
jecxz
sbb
add
sub
push
adc
cmp
xchg
frstor
jne
or
pushl
loopne
outsl
pop
fnstsw
jl
dec
mov
push
sbb
in
jl
jge
jecxz
inc
dec
push
daa
sub
test
enter
dec
ret
sub
mov
movsl
sbb
mov
push
mov
dec
f2xm1
push
xor
xor
sbb
inc
push
in
lret
push
inc
xchg
and
cmpb
cmp
shlb
aaa
mov
in
dec
mov
inc
outsl
xchg
pop
jmp
adcl
pop
add
test
imul
fistpll
stos
push
xor
andb
mov
cmp
js
jo
pop
cmp
mov
inc
pop
pop
mov
xor
sub
aad
inc
call
ljmp
cli
cwtl
arpl
repz
dec
loop
dec
inc
xor
sbb
notb
mov
mov
adc
lahf
jge
pushf
or
mov
jb
or
mov
scas
jg
insl
mov
jecxz
sahf
cltd
adc
cmpsb
add
adc
and
ds
inc
jb
fdivrl
mov
sarl
adc
sub
mov
adc
pusha
psubd
dec
add
dec
mov
clc
jo
xchg
cmpsl
fdivr
pop
push
sbbb
sbb
mov
push
repnz
mov
add
fs
push
inc
pcmpgtw
add
push
stos
xor
rcrl
icebp
push
sti
out
out
int3
icebp
jmp
or
enter
pop
stos
jecxz
data16
in
scas
dec
push
fstps
mov
adc
orl
sbb
and
cmp
lods
lock
stos
fwait
cli
out
push
scas
add
mov
gs
cs
xchg
iret
xlat
sbb
dec
adc
jg
mov
lods
arpl
in
push
out
cmp
mov
xchg
push
test
inc
es
in
cmpsb
xchg
ds
jge
pop
aas
outsb
add
sbb
or
movswl
scas
adcb
mov
cmpl
and
pop
jl
inc
xor
dec
leave
jp
lcall
test
and
push
out
test
xchg
adc
fucomip
subb
les
scas
sub
mov
mov
popa
imulb
cs
and
xchg
outsl
jno
lods
imul
daa
sub
outsl
punpckhbw
mov
cmc
scas
lods
popa
imul
lahf
xlat
outsb
test
add
cmp
pop
cmp
int
scas
push
sub
mov
mov
movsb
shll
add
pop
movsl
jnp
ja
or
dec
lea
jmp
mov
movsl
mul
adc
xlat
hlt
add
jl
xchg
ljmp
and
cmpsl
mov
imul
shll
mov
xchg
in
mov
jl
mov
in
xchg
movsb
add
mov
inc
push
add
xor
movsl
addl
mov
pop
outsl
testl
xchg
and
add
mov
xchg
or
mov
clc
cmp
mov
or
sbb
icebp
loop
and
test
loop
out
loope
sbb
les
mov
pop
dec
daa
in
insl
enter
lcall
sub
dec
cli
mov
pop
jo
scas
mov
pop
test
mov
and
inc
xor
sub
lahf
push
push
jecxz
jge
sub
cwtl
add
xchg
adc
or
push
push
jo
add
add
ret
add
sbbb
movsl
dec
mov
mov
pop
mov
mov
in
mov
arpl
int
imul
rolb
inc
out
pop
mov
das
inc
mov
cltd
mov
aad
movsl
das
jnp
pusha
or
pop
es
and
mov
test
fwait
mov
inc
or
add
shlb
popa
adc
aas
mov
pop
xchg
outsb
mov
negb
cmpsb
mov
jecxz,pt
dec
incl
fdivrl
lcall
push
pushl
pop
jecxz
aaa
arpl
xor
jno
mov
mov
add
stos
jle
fmull
outsb
aam
and
shl
xchg
xorb
xchg
shrb
adc
xor
add
lods
xor
cmpsl
rorb
add
insb
adc
outsb
inc
jne
rorl
mov
lods
mov
jo
insl
arpl
cli
inc
mov
imull
inc
push
rorb
movsl
jbe
pop
cwtl
jp
mov
inc
adc
loop
or
rol
imul
add
out
push
rcll
add
stos
sbb
mov
push
mov
shlb
leave
jg
adc
xor
shll
inc
loop
iret
cmpsl
xor
dec
fldl
inc
mov
jno,pt
mov
les
pop
movsl
subb
sub
or
adc
add
dec
add
loope
lock
adc
mov
xchg
inc
mov
pop
jl
push
rcr
pop
lcall
and
add
loopne
popf
movsb
lret
ret
xchg
dec
mov
sbbl
and
and
data16
mov
jb
and
xchg
out
jne
stos
pop
ss
push
shl
mov
push
adc
mov
pop
sbb
cs
push
das
jo
outsl
mov
jb
inc
outsl
and
cmpsb
push
and
xchg
out
in
enter
cmpsl
push
es
push
loop
jg
cld
jp
cmp
cmpsb
fistpll
call
arpl
cmpl
fistpl
daa
mov
mov
hlt
sbb
jle
es
add
or
call
ss
jge
dec
or
and
stos
push
sbbb
das
adc
adc
test
lods
sub
icebp
addr16
pop
shrb
loop
js
stos
test
roll
sub
aam
popf
stos
dec
shrl
push
pop
lcall
mull
pop
push
or
push
push
push
aaa
fsub
lods
out
lcall
and
or
dec
push
movb
test
out
loope
adc
push
pusha
subl
adc
es
out
cmp
and
fsubrs
mov
push
int3
imul
movsl
sti
cmp
out
in
cmp
xchg
pop
rol
fldenv
mov
pop
or
test
sub
jg
std
push
pop
mov
popa
pop
jnp
and
adc
mov
add
lcall
aas
or
mov
cwtl
or
imul
js
lret
jo
shlb
ret
andl
xor
push
xchg
f2xm1
add
out
pop
mov
loop
test
rorl
fnop
push
mov
sar
jnp
sub
clc
or
filds
jg
or
loope
jne
xorb
test
or
fidivl
mov
sbb
aas
cld
and
int3
test
xchg
outsl
outsl
sti
sbb
fisubrl
push
lock
shll
ss
jnp
push
adc
shlb
add
shrb
repz
and
push
cmp
inc
cwtl
in
sti
lret
mov
imul
or
movsb
pushl
pushf
lret
shrl
add
xchg
in
push
jne
jge
xor
add
cmpsb
icebp
shll
insl
push
shlb
add
cld
adc
xchg
sub
xchg
int3
arpl
sahf
dec
inc
repz
mov
dec
insl
loop
push
adc
push
inc
sub
scas
jge
int
dec
dec
hlt
jle
xor
sub
push
call
insb
outsb
sar
call
out
sub
popa
push
jmp
pop
outsb
jle
sub
mov
jnp
jecxz
rcrb
outsl
mov
and
ja
pop
pop
mov
jecxz
mov
je
cmp
cwtl
sbb
add
cmp
dec
cmp
jecxz
push
mov
add
jb
mov
jo
iret
mov
adc
out
jl
roll
dec
inc
inc
pop
and
lock
mov
push
xor
int3
call
test
xor
test
outsb
xchg
mov
dec
test
push
dec
nop
lods
int3
pusha
jno
mov
jge
loopne
adc
xor
add
rcrl
inc
fsub
inc
shl
xor
filds
add
or
iret
les
std
stos
imul
push
fwait
and
push
xor
cs
or
xor
xor
lock
sbb
loopne
cli
and
sbb
cmp
mov
mov
inc
js
mov
call
ja
pop
mov
add
or
jno
lods
push
push
stc
dec
cli
cltd
call
inc
nop
mov
mov
ret
sub
fsubrl
dec
pop
mov
in
es
rcrb
cmp
mov
testb
sub
lock
popa
mov
push
dec
rcl
and
cld
sub
mov
outsl
pushf
sar
int
cltd
dec
pop
mov
xor
sti
ret
xchg
jo
mov
cs
iret
ficoms
or
sarb
cmp
lods
mov
shrl
xor
aam
in
adc
mov
push
rol
adc
jbe
add
push
mov
inc
adc
mov
shrb
adc
iret
sub
icebp
dec
or
pop
mov
ds
sbb
push
add
cmp
loope
add
pusha
jbe
push
pop
add
cs
gs
add
mov
test
push
jae
rcr
push
mov
sarb
sub
mov
subl
int3
xchg
mov
push
cs
xor
lea
cmp
cmpsb
xchg
cli
into
sub
orl
test
lcall
pop
repz
mov
add
pop
fcmove
sub
cltd
movsb
jle
inc
jl
adc
push
pushf
popf
jne
and
inc
adc
xchg
add
dec
test
or
ljmp
loope
ret
pop
or
jo
loop
jae
jmp
xchg
sub
loopne
cmp
nop
lock
mov
cmc
inc
adc
in
pop
adc
addr16
std
adc
cmp
mov
notb
iret
movsb
orb
or
jbe
mov
outsb
rcrb
call
push
subl
push
lea
xorl
add
or
add
xchg
push
sub
push
lock
pop
mov
pop
mov
inc
jo
popf
rorb
mov
jo
dec
ret
mov
or
xor
js
pop
pop
fld
pop
cld
inc
inc
sub
pop
xchg
and
ljmp
sti
mov
loop
mov
cmp
int3
mov
add
xor
sbb
mov
inc
idivl
mov
cmp
out
inc
mov
pop
shr
cmp
or
test
hlt
not
inc
push
nop
loopne
cmp
jmp
inc
cmp
mov
movsb
sbb
rcll
cmp
into
add
js
das
sbb
clc
adc
pop
lock
mov
bts
insl
cmp
jns
lea
jge
xor
fcompl
cmp
aaa
movb
fisttpl
push
sbb
rcl
xchg
mov
inc
pop
jg
mov
jle
cmovns
adc
mov
mov
jo
nop
fbld
lods
lock
or
popa
inc
push
cmp
shll
das
lods
inc
aas
adc
pop
mov
adcb
pusha
pop
test
add
push
lock
or
outsb
enter
cmp
pop
sbb
add
fmull
mov
outsl
push
add
js
ds
andb
idiv
dec
movsb
jbe
and
inc
imul
out
mov
roll
lea
sbb
pop
mov
repnz
clc
pop
sbb
adc
les
pop
add
xchg
jb
cltd
repnz
mov
push
mov
jecxz
arpl
fistpl
cmp
shll
add
inc
xchg
xchg
mov
clc
les
gs
out
mulb
fldcw
in
pushl
addr16
or
push
and
dec
movsb
push
subb
dec
fists
loopne
dec
ret
xchg
test
lds
xor
dec
test
pop
mov
sbb
jnp
push
push
push
ds
cmc
xor
jmp
mov
jne
arpl
jmp
addl
mov
pop
jbe
mov
jg
xchg
jg
or
and
orl
and
pop
adc
xchg
cwtl
ljmp
fimuls
xchg
out
rcll
es
and
shrb
sub
test
movsb
cmp
adc
ret
xor
inc
cltd
and
mov
adc
addl
hlt
cltd
xchg
cmp
sub
cmpsb
xorl
mov
subb
sbb
je
mov
or
add
les
andb
pop
add
push
jp
fisubs
test
push
orl
in
sbb
mov
xchg
sub
setnp
and
mov
enter
and
clc
push
dec
in
dec
jecxz
push
cmp
mov
cmpsb
lcall
je
or
pop
inc
nop
fldl
shlb
add
jmp
inc
dec
mov
je
jne
into
filds
clc
sbb
imul
aam
rclb
loope
lea
leave
loop
mov
cmpl
or
jl
or
fnstsw
cld
add
les
addr16
mov
loopne
jb
xchg
not
xchg
jb
mov
dec
aam
jge
dec
sub
add
shrb
jg
insb
test
filds
test
inc
sub
adc
lock
out
mov
sub
loopne
jmp
add
cmp
adc
hlt
jmp
aad
mov
pop
inc
add
scas
aam
mov
push
test
jle
das
pusha
xor
int
sub
clc
ja
loope
dec
add
and
mov
mov
cmp
mov
jle
lea
add
mov
sub
xchg
sbb
jnp
int3
push
shll
loopne
pop
push
jmp
sbb
push
sub
sub
push
xchg
mov
xchg
lcall
loope
out
add
test
icebp
rolb
stos
pusha
adc
or
jmp
hlt
stos
cli
inc
pushf
fisubl
sub
test
and
movsl
aas
push
outsb
movsl
inc
outsb
push
cmp
pushf
test
ss
adc
sub
push
xchg
adc
lcall
xchg
xor
js
add
out
pop
subb
cmp
fsts
movsb
lahf
sahf
pop
jle
test
inc
imulb
sbb
jecxz
cltd
or
loope
push
pop
jb
xor
add
mov
adc
mov
mov
dec
sub
jb
sbb
push
ja
jle
int3
out
mov
xorb
mov
mov
xlat
xchg
ds
adc
fisttpll
sub
inc
ret
mov
push
pop
push
loope
cwtl
mov
ds
jo
inc
call
insl
daa
loopne
sahf
or
and
push
loopne
mov
and
lcall
mov
add
incl
push
int3
ljmp
lods
sbb
adc
fdiv
bound
or
pop
jl
dec
ja
xor
outsl
icebp
pop
addr16
lret
cld
push
xchg
outsb
pushf
stos
lods
pop
aad
or
in
jbe
idivb
out
jle
dec
out
faddl
jp
mov
push
pusha
ret
scas
mov
push
push
pusha
sbb
adc
sub
cmc
je
xor
and
push
repz
lea
pop
xchg
adc
cmp
sbb
dec
sbb
cmp
mov
mov
sub
bound
xor
dec
sub
mov
popa
cmc
ljmp
pop
movsb
lds
ljmp
inc
in
imull
test
lods
jae
inc
cmc
adc
icebp
dec
int3
rolb
lea
xorb
push
clc
pop
sahf
nop
subb
mov
fbld
js
pop
jl
in
jbe,pn
pop
ljmp
imul
call
xor
jp
or
xchg
mov
std
or
bound
add
repnz
clc
xchg
cwtl
jnp
sbb
lret
sbb
sbb
loope
in
cmpsl
pusha
outsl
xchg
jo
mov
and
adc
push
fnsave
test
sahf
mov
cmpsl
movsl
aas
cmp
xorb
mov
cmc
lcall
mov
jno
loop
ds
or
mov
test
stos
push
hlt
imul
adc
in
repnz
sti
xor
mov
sbb
add
sbb
add
inc
int
inc
loope
movsl
sbb
imul
or
leave
sahf
dec
addr16
pusha
stc
sub
mov
add
scas
les
push
inc
mov
outsb
push
mov
imul
loopne
cmc
mov
pop
daa
ror
nop
mov
dec
imul
shl
jecxz
pop
clc
or
test
inc
lahf
sub
rcrb
xchg
push
jmp
push
adc
mov
fsubr
aas
je
cwtl
jne
fmulp
test
jmp
adc
mov
mov
loopne
popa
add
mov
push
jp
mov
push
scas
stos
mulb
sub
or
push
fidivl
cmp
inc
push
dec
fbld
inc
sub
sub
dec
mov
js
xor
or
lret
popa
or
or
pop
aas
testb
lods
mov
or
nop
aas
jl
jnp
clc
xchg
out
lods
sub
dec
aaa
insb
insb
ror
pop
and
add
hlt
pop
dec
xor
fistpll
sbb
popf
popa
dec
repz
imul
addl
mov
bound
sarl
mov
inc
js
ds
add
push
nop
aaa
add
pop
jl
scas
loope
push
or
in
jns
cmc
mov
sbb
pusha
nop
out
xlat
add
add
pop
pop
out
xor
pusha
loop
icebp
adc
shrl
inc
dec
pop
jae
dec
enter
mov
mov
adc
jno
push
stos
add
mov
xchg
loop
mov
cltd
inc
cmp
xchg
xchg
pop
stc
jge
fisttps
jge
fisubl
pusha
pop
dec
test
add
int
clc
mov
insb
mov
push
test
or
jae
push
add
inc
pop
sti
aam
sbb
cltd
sbb
push
cmpsl
cmp
cmc
cmp
push
pop
jecxz
pop
jmp
jo
scas
mov
dec
pushf
imul
daa
mov
stos
scas
push
mov
sbb
shl
fwait
push
in
test
enter
iret
cmc
xor
pop
sti
popf
adc
add
mov
cli
ret
dec
adc
in
sbb
data16
sub
push
shlb
push
out
jecxz
cmp
ljmp
mov
lret
xchg
add
icebp
rcrl
cmpsb
mov
out
mov
pusha
xchg
adc
adc
xchg
or
lds
or
push
jmp
pop
es
add
dec
jp
cmpl
mov
out
rcrb
inc
dec
jb
push
ret
push
add
pop
fwait
push
subl
popa
or
cli
mov
dec
xchg
fstl
jns
push
pusha
xchg
and
ret
sti
data16
ljmp
mov
jb
mov
fwait
sub
inc
dec
push
ret
xor
jge
cmp
ffreep
sbb
in
mov
xchg
push
or
enter
sbb
cmp
bound
pop
js
sarb
adc
ret
cltd
push
clc
jb
and
mov
and
fcompl
push
stos
daa
das
mov
das
lds
adc
popf
mov
js
mov
adc
aad
sti
sbb
push
adc
push
pop
pop
and
insl
push
mov
iret
push
add
mov
insl
xor
pop
stos
leave
mov
movsb
mov
mov
loope
ds
aas
add
loope
leave
ja
push
lods
nop
adc
xor
jb,pt
jmp
mov
stos
cld
arpl
pop
add
adc
xchg
or
loope
fxch
sbb
rcrb
jnp
popf
push
sbb
inc
inc
xor
cmp
mov
repnz
mov
jp
mov
dec
sbb
es
call
mov
or
movsl
repz
sahf
mov
jmp
push
push
mov
dec
and
adc
add
aad
add
jo
lds
shll
fmull
xchg
dec
dec
or
ret
aas
pop
iret
mov
mov
mov
mov
out
push
fadds
pop
popa
mov
mov
or
jnp
mov
ror
dec
pushl
pop
jl
jge
rorb
add
mov
cli
pusha
inc
add
push
pop
mov
dec
xchg
mov
add
cmpsb
mov
lea
sahf
mov
in
pop
inc
push
lahf
cmpsl
data16
dec
orl
jecxz
aam
lcall
cmp
loope
or
mov
nop
inc
xor
int3
loopne
sbb
sbb
insl
lock
sbb
ds
xchg
lods
shlb
dec
roll
sub
enter
mov
cmp
pop
hlt
xorl
or
xchg
cld
sahf
dec
das
xor
fwait
imulb
mov
lods
inc
xor
sub
mov
std
gs
push
out
aad
xchg
ljmp
dec
movsb
push
mov
enter
push
test
aaa
insl
mov
je
add
stos
stc
addl
cmp
jecxz
ljmp
call
mov
mov
mov
lock
adc
mov
shll
mov
sbb
pop
push
inc
sub
adcl
fcomps
filds
addr16
mov
scas
loop
add
inc
in
repz
pop
mov
call
arpl
cmpb
fstp
movb
icebp
fldl
lahf
stc
shl
mov
popf
inc
mov
lods
adc
dec
nop
std
shrb
stc
cld
scas
fistpll
movsb
icebp
mov
daa
push
sbb
push
fnsave
xor
scas
inc
xchg
push
mov
sub
jl
popa
in
mov
in
add
loope
inc
xchg
dec
or
or
inc
loopne
xchg
jle
lea
sahf
cmp
mov
mov
in
das
jecxz
mov
mov
test
ret
cmp
jno
or
push
aas
test
xor
and
jbe
and
sbb
lahf
adc
in
loope
xchg
notb
sub
or
adc
xchg
scas
jmp
cbtw
sub
adc
daa
loop
je
mov
lcall
leave
inc
aas
mov
rcrb
movsb
loopne
mov
es
addl
rcrl
cmp
xchg
mov
jecxz
xor
pop
push
fdivs
repnz
clc
popa
or
adcl
iret
inc
pop
loope
aaa
aam
scas
mov
push
in
pop
test
popf
push
loop
scas
mov
adc
into
nop
mov
stos
mov
cmpsl
sarb
notl
mov
adc
sbb
pop
cmpb
out
pop
fists
in
faddp
hlt
or
jne
dec
hlt
add
ret
xor
das
fisttpll
sub
sbb
push
arpl
daa
jno
xchg
das
stc
in
mov
jo
mov
mov
add
lahf
shll
jl
call
filds
gs
dec
pop
ds
inc
or
into
push
scas
pop
or
pop
test
xchg
mov
mov
jne
mov
jb,pt
and
mov
xor
mov
lock
dec
rol
inc
sbb
rcll
mov
sub
ret
push
sbbl
fwait
in
mov
adc
jno
inc
mov
sbbl
xchg
sbb
mov
mov
xchg
adc
insb
subl
movsl
shll
xor
mov
push
pop
pop
popa
dec
push
cmp
pop
add
jne
popa
or
xor
adc
in
cmpl
mov
test
mov
sti
ljmp
push
push
mov
enter
lcall
cwtl
jecxz
inc
mov
adc
jp
dec
or
mov
loop
or
out
loope
mov
fdivrl
jo
test
jnp
movsb
xor
dec
je
daa
jp
fcoml
loope
rcrb
aaa
pop
fdivrl
in
dec
inc
adc
nop
or
sub
lcall
adc
push
pusha
xlat
push
sub
mov
test
daa
lds
loop
in
pop
popf
push
lock
mov
jle
adc
mov
scas
fs
mov
jg
fistpl
push
ret
push
push
into
add
mov
outsb
jns
je
xor
loop
in
mov
push
mov
pop
shll
pusha
fcoml
sub
ret
rep
pop
bound
jp
mov
add
mov
pop
stc
mov
clc
mov
pop
rcrl
outsb
push
adc
pop
jecxz
loope
or
xor
sub
scas
push
mov
jecxz
mov
inc
stc
or
sbb
cmp
push
outsb
nop
sbb
out
ret
mov
sahf
rolb
pop
xor
gs
mov
iret
cvtpi2ps
mov
push
add
cbtw
sbb
cmp
xchg
scas
mov
negl
xor
or
scas
ret
xchg
in
cli
mov
sbb
pop
aad
gs
clc
jmp
das
shll
mov
dec
or
cmp
push
or
and
hlt
pop
push
sub
aas
mov
inc
dec
sti
mov
sarb
jne
shlb
add
xchg
pop
outsl
mov
xor
mov
stc
mov
push
jns
outsb
mov
orb
add
xchg
mov
xorl
ss
paddd
xor
mov
andb
out
rclb
fsub
xchg
loopne
shll
and
js
lods
add
lahf
icebp
sbbb
inc
lds
shrb
dec
les
pop
mov
stos
fisttpll
cltd
xor
cmp
and
daa
ja
pusha
sbb
je
pop
fwait
cwtl
add
push
xor
ss
add
adc
xorl
push
out
add
mov
movsb
test
or
popa
fnstenv
xchg
xor
cmp
mov
gs
dec
test
dec
push
sbb
test
sbb
push
js
sub
add
lock
xor
faddl
and
enter
pop
aam
adc
push
add
rclb
jge
call
adc
jp
int3
loop
jg
movsl
cmp
xlat
add
shlb
das
cmp
int3
inc
mov
jnp
or
sahf
ret
fidivrl
in
adc
push
pop
test
sbb
pop
cli
adc
movsl
int
push
js
cmp
lods
pusha
jae
inc
mov
pusha
enter
daa
pop
jle
mov
je
test
mov
xlat
popf
cld
subl
movsl
pop
popf
mov
xchg
ja
lods
out
decl
mov
leave
outsl
jb
imul
rcl
sbb
mov
test
in
push
lock
mov
xor
cwtl
push
pop
push
jmp
xor
mov
adc
pop
inc
out
ss
and
push
rcr
lea
mov
mov
scas
fdivrl
fldt
sub
test
loop
andb
add
movups
int3
int
inc
cmp
cs
jp
mov
pop
fstps
mov
pop
call
mov
loop
sbb
xor
lea
adc
mov
in
mov
fldl
aaa
push
cmp
and
xchg
test
sub
or
and
fsub
dec
or
or
inc
mov
push
push
lret
inc
mov
inc
jae
out
lahf
sub
xor
jmp
or
xor
mov
lcall
subb
mov
lahf
or
jle
dec
dec
andb
lock
loop
mov
imul
gs
jl
movsl
push
addr16
clc
push
add
dec
jge
pop
inc
pop
or
out
aam
incb
rolb
stc
mov
and
int
and
jnp
or
push
adcb
xor
or
mov
and
push
push
pop
out
push
xor
movsb
inc
shrb
mov
aad
dec
sub
sbb
mov
stc
sub
aas
pop
adc
jo
xor
or
adc
xorb
sub
cmp
adc
add
cmp
adc
pop
sbb
add
fimuls
xchg
int3
popa
cld
insl
pop
mov
jbe
dec
mov
push
mov
lcall
pop
shll
ret
pop
push
aas
sbb
in
sub
in
mov
call
roll
popa
push
jbe
popa
fs
sbb
cld
cmpsl
int
cmpl
mov
mov
int
loop
push
mov
or
loopne
dec
xchg
stc
movsb
outsl
orl
in
adcb
jp
cmpsl
adc
xchg
sbb
icebp
scas
fs
test
dec
fildl
mov
dec
xor
popa
cs
mov
push
insb
sub
xor
inc
or
lcall
cltd
mov
pop
out
enter
orb
and
sub
mov
mov
ss
lea
jne
popa
iret
sahf
and
ficomps
shrb
mov
sub
mov
scas
mov
push
and
hlt
dec
incb
adc
shrl
das
out
push
stos
addr16
scas
add
std
pop
mov
cmpsl
cld
xchg
mov
nop
daa
inc
sti
sarl
lods
cmc
loop
cmpsl
sbb
xor
inc
pop
sub
sub
call
and
or
lock
loopne
pop
mov
push
jmp
popf
jne
dec
xor
mov
inc
test
or
push
adcl
lea
cmc
cmp
rcl
loop
test
int
fld
pop
cmp
inc
mov
mov
cli
pushf
jne
cmc
sub
sbb
out
sub
inc
inc
aaa
stos
push
push
out
inc
cltd
mov
je
je
xchg
ds
jl
xchg
cld
movsl
aad
stos
pusha
repz
popf
sbb
ds
push
xor
xchg
xor
adc
inc
xor
bnd
cmp
mov
or
add
nop
xor
jl
iret
inc
dec
jno
dec
mov
push
and
ljmp
das
add
jne
jmp
pop
lea
into
mov
sbb
std
mul
push
gs
loopne
ljmp
int3
sarb
or
movsl
test
jge
jl
lds
lods
lret
pop
sbb
and
jnp
xorb
outsl
or
xchg
jne
jb
rorl
xchg
std
sub
mov
cs
das
push
test
call
inc
shll
sub
cmp
dec
cli
aad
pop
and
sbbl
jmp
xchg
and
hlt
loope
lods
pop
roll
out
xor
lock
divl
adc
ljmp
enter
sti
stos
push
mov
mov
in
clc
add
movsb
aaa
mov
das
int3
mov
sti
jp
sub
xchg
lock
push
repnz
divl
mov
adc
mov
inc
imul
and
cld
sub
call
jmp
idivb
push
jmp
rolb
repz
insb
xchg
add
fnsave
in
movl
sub
sbb
sti
lods
add
adc
sbb
addb
mov
lds
pushf
xor
mov
xchg
pop
and
or
jno
aam
xor
js
jne
ret
mov
stos
push
pop
xchg
testl
loop,pn
xchg
sub
inc
add
add
add
cmp
sbb
scas
lock
movsb
xor
stos
icebp
out
std
stos
insb
popa
or
test
inc
sub
jmp
inc
aas
mov
mov
add
jg
test
mov
mov
sub
aas
orb
xchg
loopne
sbb
push
hlt
loop
loopne
fs
and
cmc
push
xchg
cmpsl
aam
push
xor
mov
idiv
fnstsw
ret
pop
es
nop
and
pop
sbb
lahf
sub
xchg
push
lcall
call
push
aam
or
mov
mov
cmpsb
test
in
push
sub
inc
xor
cmp
mov
mov
loopne
lcall
mov
mov
mov
test
jnp
fisubl
mov
push
push
and
sahf
inc
test
out
cmp
push
add
or
mov
xchg
add
jl
adc
rcrb
imul
xor
jle
adc
pop
mov
and
repnz
push
xchg
pop
lret
mov
sti
xlat
cmpb
mov
cmp
pop
shlb
pop
inc
mov
fst
daa
fsubl
leave
sub
inc
roll
xchg
cli
out
xor
into
fists
pop
or
cmp
xor
stos
mov
scas
iret
movsl
addl
inc
popa
fisubs
adc
pop
dec
pop
sbb
xor
inc
jecxz
adc
lock
insb
std
cwtl
and
jg
or
pop
sub
and
lods
scas
sbb
pop
push
inc
sub
loop
mov
xor
pop
jle
lret
adc
or
popa
xor
dec
mov
and
or
imull
les
daa
sub
mov
mov
jp
lds
ret
sub
push
pop
adc
js
sahf
test
cltd
and
outsb
cmpsb
jb
clc
in
jno
outsl
ret
lock
lret
mov
push
inc
mov
mov
pushf
rolb
mov
push
jnp
sub
cmp
insl
jg
inc
popf
jb
jne
and
fwait
lcall
das
cwtl
nop
mov
and
or
mov
in
push
movsb
popa
dec
xchg
sbb
adc
mulb
add
mov
jp
pop
mov
inc
push
stos
ja
pop
xchg
inc
std
rorl
add
ds
inc
stos
inc
cmp
outsb
and
fisttpll
sub
jge
and
test
ret
mov
dec
mov
mov
repz
pop
sub
mov
adc
in
xor
test
out
sbb
push
mov
rolb
cmpb
pop
popa
test
pop
sbb
jle
loope
enter
lret
subl
mov
ss
lock
lds
and
js
xor
push
jle
push
xchg
mov
sti
out
sbbl
shll
orl
add
adc
jecxz
push
int
in
jg
mov
push
pop
data16
fadds
pop
js
std
xor
iret
sti
sub
and
cmp
int3
sbb
lods
mov
ss
pop
cmp
out
push
stc
cmp
add
js
jo
adc
add
adc
push
jns
mov
cltd
and
push
add
push
je
xchg
inc
out
push
cmp
stos
inc
das
addb
ja
iret
mov
popa
push
xchg
add
push
rcll
push
sbb
enter
sbb
sub
imul
pop
pushf
push
inc
add
inc
call
xchg
sub
inc
push
xchg
cld
aam
mov
mov
add
sub
popa
scas
mov
repnz
movsb
into
and
inc
cld
sbb
xchg
xchg
ret
and
pop
sbb
pop
test
and
jo
hlt
sub
cmp
jae
mov
push
mov
dec
jbe
aaa
mov
sub
pop
lret
inc
add
xorb
js
outsl
mov
je
lods
sbb
incb
cmc
sbb
mov
lret
push
js
cld
pushf
icebp
aam
push
mov
mov
jle
imul
sbb
iret
mov
call
adc
and
gs
adc
mov
jecxz
loope
mov
and
clc
xchg
lock
add
mov
lret
push
and
outsb
aas
sub
test
les
xchg
xchg
loop
incl
mov
mov
push
sub
pop
test
ljmp
pop
out
xchg
push
sub
cmp
je
daa
dec
loope
mov
jge
fisttpl
pop
add
inc
fsubr
mov
jmp
lea
push
mov
or
in
sbb
lea
orl
mov
in
push
push
adc
mov
cld
aaa
cli
fistpll
cld
dec
enter
or
push
pop
cmp
test
faddl
xchg
cli
adc
outsb
js
icebp
int
mov
ja
lods
and
subl
mov
xchg
jg
jnp
adc
out
xlat
popl
mov
cld
inc
push
lahf
daa
loopne
rolb
xchg
outsl
test
dec
sbb
loop
test
loopne
scas
fsubrl
dec
dec
lds
or
imulb
xor
jb
inc
dec
fiadds
arpl
pop
adc
iret
pop
pop
cmpsb
mov
xchg
dec
sti
ret
cmc
loope
xchg
out
pop
mov
xchg
xchg
sbb
jmp
adc
mov
inc
test
jbe
push
push
jmp
add
push
mov
es
adc
jbe
pop
sbb
jle
fidivl
mov
ss
add
bound
lock
mov
mov
add
or
and
bound
ret
dec
pop
cmp
mov
movsb
fidivs
sti
cmp
and
sbb
jno
inc
insl
aad
rcr
mov
inc
jb
jmp
xchg
cmp
or
aam
xorl
aas
sbb
or
in
bound
add
xchg
mov
xchg
sbb
sub
loopne
test
xor
fnstcw
pushl
cmp
outsl
stos
sub
xor
or
mov
stos
icebp
or
enter
adc
inc
cld
int3
jg
pop
or
jl
or
hlt
es
dec
push
imul
mov
jb
movsb
test
inc
mov
aaa
sbb
rolb
jmp
pushf
and
push
cld
cmp
ljmp
add
fisubrl
add
mov
or
inc
adc
jmp
mov
inc
mov
lds
fsubl
daa
adc
dec
ret
jmp
push
sahf
loop
and
cmp
xor
fadd
sbb
addl
xor
dec
popf
cli
out
repz
aaa
cld
sbb
dec
jle
cmp
push
xor
stos
jp
nop
push
sub
enter
clc
jp
aad
push
mov
mov
ret
sbb
lea
xor
pusha
cmp
in
clc
xor
test
js
jns
or
sbb
cwtl
addb
mov
mov
lds
outsb
clc
mov
adc
fwait
push
push
mov
stos
push
movl
loop
imul
jb
xor
sti
dec
andl
jns
mov
xchg
and
mov
fists
hlt
andl
xchg
icebp
ljmp
mov
clc
add
sbb
loope
fdivl
sbb
scas
icebp
jg
fsts
add
inc
nop
mov
mov
dec
or
mov
cmp
pop
loopne
pop
push
pop
mov
in
mov
mov
and
mov
rclb
cs
xor
test
dec
add
je
out
mov
mov
clc
adc
and
fstpt
pusha
aad
push
mov
add
jmp
mov
mov
loope
out
bnd
shrb
add
cmpl
ja
mov
dec
xor
push
orl
test
rorb
iret
loope
mov
cmp
xchg
sbb
sti
mov
cmp
icebp
decl
mov
or
fbstp
and
std
mov
add
shll
daa
sbb
enter
inc
sbb
sti
and
fistpl
jmp
repnz
insb
pop
xchg
xchg
or
inc
push
sbb
xchg
and
std
fbstp
pop
adc
fldenv
adc
out
lock
movsl
iret
mov
push
jl
cwtl
add
add
inc
xor
xor
fimull
movsl
inc
fmuls
in
xchg
xchg
stos
adc
mov
add
cmpsb
cmp
jle
or
jmp
outsl
push
push
mov
xchg
add
sbb
cmp
and
fistpl
sub
sahf
pop
mov
dec
lret
jp
mov
mov
adc
or
sbb
lret
push
pop
mov
sbb
fmulp
dec
in
jmp
ja
mov
mov
hlt
mov
test
add
cmp
andb
push
xchg
mov
test
sbb
das
int
mov
sub
push
mov
sahf
dec
mov
pop
pop
push
or
or
jae
sub
push
or
add
cltd
jo
mov
aad
mov
je
mov
fadd
push
mov
pop
jo
mov
rorb
jp
fildl
insl
pop
pop
mov
ja
insb
bound
mov
arpl
mov
scas
xor
imul
adc
add
mov
cmp
xchg
and
stos
add
fsubr
insl
ret
ret
roll
pushf
jl
lods
ret
or
dec
out
push
in
movl
xchg
add
outsb
call
mov
cld
testb
clc
popa
in
fimull
fisttpl
pop
ljmp
pop
sahf
or
aam
pop
and
into
or
dec
jge
inc
push
mov
addl
mov
mov
sbb
pop
lock
enter
shlb
xchg
push
push
lods
xor
lret
daa
cmpl
cld
jg
loope
insb
xchg
jae
movb
fcoml
aam
rclb
rorl
cld
bound
mov
xlat
mov
xchg
dec
int
xchg
std
and
bound
pushf
sbb
insb
aam
cmp
sub
std
shlb
pop
outsb
outsl
push
in
enter
into
sbb
imul
dec
in
add
fisttpl
jae
ret
mov
sbb
cli
pushf
aas
or
lock
mov
mov
push
decl
or
mov
mov
orb
test
push
js
pop
inc
xchg
loope
dec
jmp
sbb
mov
pop
push
rolb
push
cmp
lods
mov
pop
jb
inc
sbb
aam
daa
mov
mov
aaa
cld
cmp
cld
sbb
insl
cwtl
aas
mov
cld
imul
mov
std
mov
cmp
add
jnp
subl
cmpsb
jmp
cmpsl
pop
sbbb
pop
test
data16
leave
mov
out
sbb
lret
lods
or
jge
ss
mov
dec
xor
mov
pushw
in
nop
mov
inc
add
sbb
push
sar
dec
mov
shll
pop
or
jo
les
adc
nop
sbbl
push
jl
ljmp
jns
jmp
dec
adc
in
das
js
cmpb
sahf
xchg
sahf
push
add
aad
rcl
jle
outsl
mov
xchg
cld
cmp
roll
fstpl
lock
std
js
roll
pushf
fwait
xchg
jp
movsl
cmc
cmp
and
lea
mov
sbb
pop
xor
aam
outsl
int3
and
orl
iret
hlt
or
jle
xchg
popa
fstl
cmp
xor
clc
jg
push
push
cmp
add
pop
ja
pop
in
jp
cmp
add
add
sbb
incb
out
xor
data16
call
testl
cld
sbb
sbb
into
sub
sbb
cmpsl
adc
fs
addl
jp
push
cmp
jl
jl
pop
mov
fidivrs
shr
or
cmpsl
jp
jbe
rol
push
popa
lahf
push
jmp
xchg
loopne
test
fnstsw
jno
mov
and
sarb
adc
add
aam
cli
ljmp
push
ljmp
sarl
imul
or
sbb
add
push
pop
cmpl
add
sti
cld
adc
mov
sbb
cmpsb
adc
out
stos
hlt
data16
fwait
lock
pop
js
jb
stc
inc
pushf
addr16
arpl
cmc
fidivl
into
cs
xor
xor
mov
decb
push
jge
adc
and
aam
aaa
ljmp
dec
dec
frstor
add
inc
sbb
push
fisttpll
ret
scas
add
adc
repz
and
pushf
jbe
lods
add
shll
pop
jg
lahf
fdivrp
js
xchg
lcall
sbb
xlat
jno
push
cltd
cmp
xchg
icebp
negw
hlt
mov
mov
jle
sarb
nop
jmp
in
jo
add
mov
sbb
mov
push
sub
pop
inc
xor
push
nop
cmp
repnz
rol
adc
and
mov
or
ja
ror
testb
addr16
jnp
setb
inc
scas
inc
sti
xorl
hlt
sti
sub
and
jb
xchg
xchg
xor
push
pop
lahf
inc
ja
jbe
sbb
cmp
bound
sbb
pop
mov
cmc
jp
rcl
dec
aam
add
mov
out
adc
xlat
mov
push
jb
lods
fidivl
jmp
add
add
pop
add
add
adc
mov
dec
jle
fisubrs
jp
into
sbb
lods
mov
pop
ss
adc
lcall
aam
inc
insb
add
sbb
lods
mov
shll
xchg
mov
adc
jmp
push
add
and
and
jp
push
rorb
pushf
add
filds
mov
add
test
in
es
cmpsb
fisttps
cmpb
jge
sbbl
cs
sahf
adc
lcall
shlb
xor
mov
adc
xorl
pop
jns
mov
pop
test
and
hlt
sarb
add
inc
dec
or
je
mov
inc
xlat
cmp
xor
gs
pusha
fisubrs
pusha
push
mov
add
rcl
scas
xchg
push
imul
push
mov
pop
cmp
xor
push
push
jb
pop
roll
push
jecxz
jl
and
outsb
push
int3
leave
mov
adc
jl
pop
hlt
mov
cmp
andl
sub
pop
ret
inc
jg
sub
jno
pop
lret
inc
adc
jbe
mov
jbe
popa
push
dec
xchg
adc
jo
adc
aam
dec
push
fwait
pop
adc
mov
pop
bswap
rorb
jne
push
cs
fdivrs
cli
sub
insb
lock
int3
pop
inc
in
loope
and
ljmp
jl
cmpsl
fdivp
in
icebp
inc
or
adc
cwtl
mov
aam
push
jge
push
stos
dec
mov
push
adc
popa
and
hlt
push
mov
add
sub
fdivrl
adc
xchg
xchg
nop
xor
cmp
push
dec
mov
adc
mov
test
jp
scas
xchg
fidivl
mov
jge
dec
les
sub
inc
add
sub
push
test
outsb
xchg
fmuls
mov
stos
mov
int
insb
sbb
add
idivb
dec
test
repnz
nop
int3
push
jmp
loope
cmpb
cld
ljmp
sbb
mov
dec
icebp
pop
je
lock
mov
test
sbb
sbb
loop
cmp
or
shr
dec
roll
mov
imul
stos
outsl
popl
das
dec
lcall
inc
imul
or
inc
jl
ret
inc
jns
scas
call
dec
lcall
pop
add
mov
ja
out
pusha
add
cmp
mov
jle
pop
popa
arpl
push
add
movsl
mov
mov
shlb
jne
and
ficompl
or
call
scas
cld
data16
and
lret
jle
push
push
or
dec
adc
decl
pop
mov
jb
jbe
int
xor
sub
mov
mov
cmc
inc
mov
call
ds
ss
xor
loope
sbb
xchg
jo
movsb
mov
xchg
or
xchg
subb
loope
add
pushf
xor
jnp
xchg
mov
fistps
arpl
loopne
jns
add
sti
loop
sub
sbb
lock
adc
push
sub
fwait
adc
mov
pop
in
inc
cld
push
add
loope
sbb
fidivrs
jne
push
add
adc
sub
repz
lcall
insl
sub
cmp
mov
stos
inc
sub
push
cmpb
jge
inc
movsb
mov
add
inc
call
sarb
pushf
ljmp
jne
fidivs
dec
sbb
cltd
mov
aad
sbb
or
lds
or
pusha
shlb
into
sbb
mov
push
xchg
inc
jne
out
stos
lret
pop
push
mov
dec
incl
push
and
inc
push
push
js
loop
insb
ret
cmp
add
or
icebp
cli
pop
or
std
std
lret
and
sarl
lock
xchg
pop
inc
lcall
mov
or
jnp
xchg
int3
fisubs
mov
xchg
mov
popa
ret
imul
scas
mov
cmp
xchg
loopne
mov
lret
sbb
sub
cmp
out
mov
notl
test
mov
jmp
cmp
add
pop
loopne
push
repnz
data16
jge
clc
icebp
das
loopne
mov
popf
pop
jnp
aaa
insb
sub
mov
je
jl
dec
and
mov
jne
pop
pusha
mov
add
inc
and
push
mov
orb
mov
dec
or
adc
xor
sbbb
and
push
call
add
adcl
sub
sub
icebp
or
cmc
or
fwait
out
dec
sar
or
je
pop
insb
in
insb
mov
lret
lcall
mov
mov
hlt
mov
jo
push
mov
sbb
mov
xor
add
xor
pop
jge
fsubl
cmp
ret
jo
push
or
out
or
sbb
pop
push
aad
push
outsl
cld
scas
cmpsb
mov
ljmp
pop
mov
rcrb
xchg
jns
je
push
ret
jg
rcll
out
cmp
dec
cmp
stos
test
push
insl
dec
adc
jne
orb
std
sbb
fs
pusha
inc
popa
xchg
mov
aaa
mov
sub
inc
push
xchg
push
push
inc
sbb
push
cwtl
addr16
or
add
mov
add
or
fdivs
jbe
ret
sahf
and
cld
add
cwtl
fisubs
push
rolb
inc
dec
je
bound
stc
ss
add
sub
sbbb
mov
sbb
adc
adc
lret
jp
cli
pusha
xor
and
loope
jb
out
das
loop
fdivrs
das
lods
pop
dec
sub
ljmp
mov
add
dec
xchg
sarb
xor
loopne
or
jo
loope
xor
enter
in
les
lret
fs
enter
rcr
andb
mov
add
add
icebp
or
inc
cwtl
push
mov
aad
mov
arpl
test
mov
daa
pop
xchg
aad
or
mov
les
out
lret
push
pop
push
loopne
mov
shl
mov
aaa
add
lcall
leave
loope
sbb
sub
mov
sbb
pop
jmp
mov
loope
cmp
sub
mov
in
push
arpl
push
xor
incl
fists
lds
push
or
popl
push
dec
cmp
push
clc
xor
adc
xor
xor
push
sub
fildll
jno
std
int3
subb
mov
shlb
fsubs
sar
jns,pt
sbb
aam
pop
aas
test
insb
movsl
add
les
je
sbb
pushf
lcall
mov
and
mov
rorb
out
mov
mov
pop
mov
pushf
test
xor
mov
jns
add
bound
popa
or
pop
inc
clc
cs
cld
and
incl
pop
or
cmp
xor
movsl
mov
nop
pop
test
adc
fwait
and
lcall
pop
dec
push
sbb
lock
xor
mov
jns
nop
imul
xlat
sub
pop
xchg
inc
mov
inc
and
mov
inc
bound
out
jg
fldt
ss
out
movsl
and
push
cli
decl
sbbl
inc
data16
int
popl
mov
dec
out
jae
scas
incl
test
add
hlt
pop
push
aas
orl
sbb
mov
xchg
cmp
fsubrs
dec
je
test
jne
repz
in
call
adc
adc
xlat
ficompl
lret
out
mov
jp
mov
push
loop
mov
jo
sbb
push
or
xor
push
sub
movhlps
test
and
loop
outsl
xchg
clc
mov
mov
stos
mov
incl
shl
clc
add
rcrb
push
or
or
and
test
cmp
mov
into
or
lods
ficomps
mov
mov
mov
clc
dec
clc
outsb
in
push
test
xor
jnp
ds
pop
add
inc
push
fisttps
pop
or
mov
xor
xchg
pop
sub
aam
popa
fmull
pop
dec
or
dec
cmp
mov
mov
mov
mov
aaa
rorl
in
ret
sub
ret
adc
jb
mov
aam
or
aam
jg
jmp
in
fdiv
and
sarl
test
cmp
daa
dec
inc
adc
sub
sbb
insb
lods
push
jl
mov
add
insb
scas
call
enter
int3
out
fmull
push
icebp
dec
mov
add
jae
pop
inc
xorl
cmp
adc
push
mov
and
push
in
or
lods
mov
push
push
cs
add
and
inc
pop
ficompl
ljmp
pushf
inc
lods
clc
shlb
popa
mov
sub
enter
out
mov
mov
cmc
pop
lock
xchg
add
aaa
jle
ud1
nop
mov
push
insl
or
mov
call
lcall
int3
cmpsl
scas
push
add
mov
sub
sbb
add
mov
cmp
shrl
in
inc
hlt
jbe
pushf
data16
pop
cli
jmp
pop
pop
mov
test
dec
inc
dec
popl
test
shl
sti
mov
daa
and
in
inc
lods
mov
pop
adcb
sbb
inc
in
mov
xor
dec
cmp
fstpt
in
ret
cmpsl
push
arpl
pusha
stos
icebp
notl
hlt
clc
and
sahf
adc
insl
les
shl
fidivrs
leave
mov
repz
pop
shrl
call
ja
or
in
fsts
fcom
hlt
pop
xchg
mov
cmp
out
add
mov
test
jg
inc
xor
sbbb
out
sbb
dec
xor
jmp
pusha
push
out
dec
push
call
adc
fidivs
scas
add
aaa
add
pop
cmp
xchg
scas
xchg
stos
xchg
into
push
inc
jb
mov
mov
into
adc
divb
int
sub
mov
adc
and
cwtl
and
jb
or
or
sub
pop
test
push
push
cmp
fmuls
clc
pusha
push
clc
mov
mov
jb
inc
stos
xchg
sub
lock
and
orb
and
lock
cmpb
inc
loop,pn
loopne
and
adc
fadd
filds
jnp
jbe
add
lods
imul
pop
das
ret
insb
outsb
lcall
push
lcall
mov
cmp
dec
int
arpl
es
loope
jecxz
mov
push
cmc
add
sub
and
mov
jecxz
repz
or
sub
mov
lods
inc
call
pop
clc
inc
push
rolb
push
test
pop
jle
inc
insb
dec
imul
cld
hlt
les
ucomiss
pop
pop
ljmp
iret
jl
xchg
fsubr
es
scas
call
lock
xor
xchg
mov
mov
sarl
add
or
mov
jecxz
iret
cmp
xchg
xchg
dec
mov
push
pop
stos
rcrl
call
jecxz
loope
orl
push
ss
clc
or
adc
pushf
xchg
add
xchg
cmp
dec
paddw
loope
push
cmpsb
clc
das
xor
stc
je
mov
mov
mov
scas
xchg
add
test
cwtl
jge
out
decb
mov
sbb
push
mov
jo
mov
arpl
mov
dec
je
rcrl
loopne
mov
sub
idivb
add
cmp
xorb
mov
push
mov
ret
sbb
push
js
ret
push
mov
adc
sbb
mov
xchg
mov
arpl
pop
sarl
and
xchg
jecxz
das
push
fisttpll
test
mov
addr16
mov
inc
repz
orb
btc
jne
pop
pop
or
dec
jnp
inc
ss
shlb
jo
outsl
popf
je
outsl
lock
xor
jo
stos
fsubs
and
mov
and
jno
xchg
sbb
idiv
daa
inc
xchg
add
stos
mov
fildll
sub
loope
add
mov
adc
shlb
and
and
aas
ss
dec
pusha
sbb
fwait
push
xchg
mov
xor
sti
into
mov
cmp
out
and
add
sub
jae
ja
arpl
or
movsl
mov
mov
cld
ja
add
lcall
mov
scas
mov
dec
push
sbb
andb
hlt
xor
pushf
fisttps
stos
adc
in
push
mov
jns
pop
pop
jl
roll
pop
insb
cmc
xchg
push
fchs
data16
lret
xchg
pop
add
dec
fisttps
ret
or
xor
sbb
enter
test
insb
mov
cmp
cld
and
jo
adc
dec
mov
ret
enter
push
or
negb
adc
into
fwait
jo
inc
jmp
dec
mov
cmpsb
inc
inc
pop
mov
repnz
jge
imul
pop
out
pushl
sti
sub
xorl
mov
scas
xor
jb
test
shrb
in
mov
mov
stos
sub
xor
xchg
pop
push
pop
sub
call
jle
fcompl
lcall
outsb
cmp
shlb
insl
sarl
push
and
ss
add
loopne
cmp
mov
loop
jae
push
or
or
or
ss
in
ja
pushl
adc
mov
and
lock
cmpsb
hlt
mov
mov
mov
mov
jno
push
add
sub
or
push
dec
or
pop
aad
std
mov
pusha
push
out
sbb
push
cld
pop
lock
in
out
push
adc
fadds
push
adc
adc
sbb
push
xchg
adcb
decb
inc
push
outsl
mov
and
andb
cmp
ja
xchg
lock
in
icebp
jmp
adc
insl
mov
not
mov
and
push
cli
xchg
ret
in
push
and
cli
inc
sub
jns
cli
jle
xchg
pop
adcb
out
or
je
cmpb
xchg
ljmp
pop
pop
jecxz
add
les
mov
mov
gs
push
mov
inc
fs
or
jl
fs
inc
push
in
and
mov
pop
xor
je
clc
xchg
bnd
mov
arpl
pusha
inc
jbe
fisttpll
aam
repz
stos
and
cld
mov
movlps
mov
lock
rolb
xor
nop
xchg
fldcw
and
pop
mov
mov
lds
mov
jo
push
dec
dec
loop
pop
flds
andb
lret
sbbl
lock
mov
jo
into
dec
aas
xchg
shll
icebp
mov
mov
aam
pop
inc
pop
lock
or
stos
ret
stos
loopne
clc
cli
jmp
loopne
pop
leave
shrb
pushl
pop
das
or
xor
setg
push
pop
inc
mov
dec
add
ficomps
xchg
enter
jne
bound
inc
ficomps
mov
lods
pusha
hlt
scas
sub
xor
adc
xchg
mov
jl
lds
or
pop
xchg
and
into
test
xchg
push
sub
adc
dec
jg
cmp
cli
ret
das
push
popf
push
dec
pusha
inc
pop
jo
push
xor
sar
add
sbb
in
add
enter
and
dec
aaa
mov
cmp
dec
push
dec
ja
push
mov
js
mov
shlb
enter
inc
sub
mov
cld
sub
jb
push
iret
std
out
mov
pop
hlt
add
push
cmp
push
mov
aas
into
cwtl
fdivrs
movsb
inc
push
clc
cltd
sbb
sarl
xor
rcrb
scas
and
push
lds
push
jo
jg
cs
jns
xchg
sahf
jmp
push
je
rcr
clc
add
inc
push
ss
or
inc
adc
inc
jnp
sub
cmp
inc
adc
add
setnp
loopne,pt
cld
mov
jno
sarl
cmp
imul
dec
push
mov
pushf
add
and
dec
pop
adc
xchg
jne
push
xrelease
or
jbe
aam
add
ds
es
pop
pop
jo
aad
mov
cmc
pushf
mov
lods
adc
addb
out
xlat
adcb
jo
pop
in
test
jmp
popa
dec
adc
int
scas
pop
sbb
push
mov
or
cwtl
push
outsb
pop
push
fdivs
jp
sub
adc
and
sbb
insb
aad
push
cmp
lds
movsb
insb
lods
into
scas
loopne
ds
repnz
fmull
mov
or
aaa
icebp
ja
xchg
mov
jne
inc
inc
xor
bound
lock
mov
adc
ds
fwait
mov
outsb
hlt
daa
imul
push
lret
shlb
ja
push
push
js
std
dec
jmp
dec
cmpsb
cmp
jmp
add
and
fistpll
sbb
mov
mov
or
movb
mov
cmp
and
sub
pop
fwait
xor
mov
or
xchg
mov
add
fwait
mov
sbb
aad
xor
aas
xor
and
mov
push
or
dec
bound
add
in
repnz
cmp
mov
inc
rolb
addl
lods
stos
outsl
ljmp
or
jns
cmp
insb
cmp
push
outsb
and
mov
popa
insb
jecxz
arpl
insb
adc
jp
shlb
outsb
or
mov
xlat
pop
push
mov
sar
call
inc
pop
das
pop
loopne
inc
cld
ret
out
xor
out
jle
mov
jg
repz
push
mov
jbe
dec
ss
pop
cld
in
addb
out
into
negb
scas
fwait
loope
inc
shl
insl
scas
jle
inc
cmp
test
lock
mov
xchg
cmp
jmp
adc
xor
orb
pop
pop
scas
jl
sbb
pop
xor
daa
xchg
jnp
push
rolb
mov
pop
cmc
pop
mov
mov
int3
js
movsl
andl
and
add
push
ret
sti
push
mov
mov
xorb
xor
lods
lahf
dec
insb
mov
push
sbb
mov
pop
fs
lret
mov
mov
test
xor
adc
or
icebp
dec
xor
dec
push
stc
xchg
sub
jp
outsb
adcb
lret
cmpb
shl
rcr
push
jl
stos
inc
orb
sbb
add
in
mov
lret
pop
adc
sbb
mov
pusha
ss
inc
mov
pusha
xor
popa
das
sub
xrelease
add
adc
pusha
xor
ljmp
aas
cmp
je
incl
jecxz
mov
lock
test
adc
out
icebp
daa
loope
loopne
sub
clc
add
ljmpw
jp
mov
jnp
fsts
xor
mov
mov
and
shrb
les
lcall
iret
loopne
into
dec
jge
andb
psubd
ss
mov
out
jle
stc
push
into
stos
loope
mov
scas
adc
pop
mov
sahf
pop
cs
push
mov
adc
fmull
push
cmpsb
je
mov
push
pop
js
mov
dec
cmp
fbld
xorl
xchg
lahf
adc
add
adc
mov
ljmp
es
lods
out
mov
inc
test
arpl
mov
adc
jle
pop
or
sbb
pop
out
rcr
add
mov
xchg
cmpxchg8b
into
jno
push
mov
push
jmp
jle
jl
mov
add
scas
clc
sub
dec
data16
sahf
mov
popa
stos
cmc
jmp
mov
mov
cmp
mov
mov
mov
fsubr
aam
push
ret
sbb
adcb
or
mov
popf
rorb
inc
rcrb
mov
scas
jno
ret
rorl
jno
xor
rorb
std
adc
and
std
mov
mov
adc
ret
mov
xchg
pop
mov
dec
inc
mov
test
mov
daa
and
pop
dec
cmp
dec
stos
sub
into
cli
push
pop
cmp
std
sub
xchg
jns
dec
test
push
push
ljmp
movbe
cmp
jo
call
testl
cmpb
jle
jg
add
adc
xchg
cmp
pop
fwait
push
inc
cmpsb
adc
or
sbb
or
pop
add
adc
add
push
insb
sti
cmp
imul
push
ljmp
aad
jae
mov
jmp
cli
pushf
xchg
pcmpeqb
xor
lret
push
xor
push
mov
test
shlb
pusha
dec
inc
in
bound
jno
or
and
pop
add
cli
lds
test
push
stos
ficompl
mov
jae
incl
fisttpl
mov
jb
out
mov
std
rolb
push
jl
lods
popa
faddl
add
jnp
lea
rorb
cmp
jmp
add
test
jl
aaa
lahf
pop
pop
movsl
sbb
js
sub
xor
sti
cs
test
sahf
loop,pt
xor
int3
test
pop
jp
clc
or
sarl
xor
mov
mov
xorb
rolb
add
sbb
outsb
outsb
mov
es
jmp
mov
push
sub
pop
add
nop
cmp
xchg
jl
xchg
out
inc
cmp
shll
mov
es
and
jle
rclb
sub
and
jae
jns,pt
addl
in
lock
add
lods
inc
sub
adc
or
push
push
sbbb
cmp
test
sahf
rorb
pop
inc
std
xor
dec
out
in
mov
xchg
jecxz
jg
iret
and
pusha
fcoml
fnstcw
ret
add
addl
or
icebp
push
add
test
lahf
stos
push
jno
inc
outsb
jg
inc
lret
xchg
push
jg
and
mov
lock
out
adc
push
inc
fidivrl
sbbl
mov
jb
and
pop
movsl
jb
repnz
rolb
outsb
ds
fcompl
jg
ret
pop
out
sti
or
js
mov
int
push
push
jp
or
sub
mov
or
jb
adc
js
aas
adc
push
mov
mov
xchg
in
cmp
pop
lods
or
imul
lret
xchg
and
call
mov
cmp
xchg
push
lock
pop
add
stos
aaa
lret
inc
js
pop
xor
stos
xchg
movsb
sub
das
and
dec
mov
xlat
push
adc
inc
clc
ss
int3
mov
dec
outsl
cmpb
sub
lahf
test
push
dec
pop
movsb
cmpb
lea
inc
aas
sub
inc
or
sbb
subb
add
mov
jecxz
push
mov
and
pusha
jo
add
xlat
adc
in
pushl
pop
or
test
add
icebp
push
jp
fmuls
mov
sbb
popa
aas
jle
mov
lahf
inc
mov
jno
inc
and
insl
jne
loopne
cmp
adc
mov
mov
iret
cld
add
loopne
in
push
jno
push
jo
ja
xchg
imulb
ljmp
scas
cmpsb
adc
add
or
in
popa
inc
cmp
pop
rcr
pop
mov
ficomps
ret
push
dec
sub
jecxz
jecxz
xor
jne
int3
ret
add
jg
daa
or
push
add
pop
pop
movl
ljmp
cmp
pop
bound
aam
push
stos
dec
lods
lock
cs
icebp
sbb
or
adc
adc
mov
or
sub
pushf
or
arpl
mov
xchg
sbb
or
mov
push
add
or
jb
subl
add
xor
mov
clc
sarb
mov
mov
jne
add
xchg
xor
mov
shrb
jb
inc
or
lds
inc
mov
inc
pop
cld
es
inc
in
and
adc
jnp
mov
dec
dec
sub
jge
mov
nop
sbb
mov
push
add
cmpb
pop
mov
or
add
gs
sbb
sarb
lods
dec
jne
movsb
out
mov
adc
outsb
fwait
insb
jecxz
popf
iret
jno
sub
push
ret
jle
push
popf
test
adc
stos
icebp
in
out
inc
sbbb
lods
add
lock
mov
lahf
and
sahf
xor
cmpsl
and
sti
ja
xorl
mov
sub
or
les
mov
addl
gs
mov
push
mov
ret
aam
mov
incb
dec
aam
inc
movsl
jle
mov
ds
dec
scas
sub
test
mov
mov
dec
pop
pop
orb
aam
pop
add
add
arpl
push
fistpl
or
pop
dec
lods
mov
lcall
add
pop
mov
shll
rcl
repnz
mov
mov
pusha
aaa
sub
orl
test
push
ret
xchg
ds
sub
ss
andb
or
add
sbb
inc
dec
cmp
call
push
sbb
mov
ss
push
mov
sub
sub
xor
push
pop
dec
in
cli
lret
and
cmp
mov
xor
mov
inc
add
and
fnstsw
pop
gs
add
push
ja
stos
pop
imul
mov
in
fdivs
dec
jno
add
or
jnp
lods
pop
xlat
inc
push
jl
fs
js,pn
mov
dec
mov
adc
add
push
push
mov
lods
mov
shlb
addr16
int3
xchg
pop
xchg
add
das
sbb
insl
cmpl
fs
push
mov
inc
lea
icebp
inc
adc
sub
push
or
jne
mov
push
mov
mov
je
mov
imul
fst
pop
xlat
cli
mov
cli
add
ja
repnz
data16
jne
movsb
ja
fs
cmc
cmp
or
xchg
jl
test
adc
push
sub
xor
lock
xor
mov
sub
loop
scas
je
insb
and
mov
xor
shlb
jp
rcll
cmp
jae
popa
add
subb
dec
push
icebp
inc
fisubs
out
cmpxchg
cs
shlb
jo
ret
ror
jp
test
mov
icebp
pop
xchg
and
mov
add
dec
pop
sub
shrb
mov
add
mov
out
aad
pop
stos
mov
add
jmp
faddp
pop
sub
fdivs
adc
cmp
pop
adcb
es
sbbb
mov
cmp
dec
pop
jbe
lods
inc
jae
cmp
mov
cmpsl
push
call
shll
xchg
sub
mov
lcall
pop
out
xchg
mov
shlb
les
notb
outsw
pop
or
notb
mov
sbb
stos
ja
mov
call
mov
aam
mov
adc
pushf
arpl
push
imull
rorl
out
cmp
sbb
popf
push
jno
pop
into
out
adc
xchg
push
push
in
adc
xchg
notb
mov
int
xchg
loopne
cmpsb
jbe
inc
bound
sub
jecxz
mov
or
or
mov
test
xchg
and
lahf
dec
mov
sub
lcall
sbb
adc
dec
sbb
cmpsb
and
scas
push
jmp
xchg
jne
aam
push
aam
jecxz
enter
faddl
cli
mov
mov
or
jno
call
inc
sbb
stos
and
rcr
ja
ds
jmp
imul
leave
mov
in
dec
mov
movsb
add
push
push
loop
loop
cmp
push
cmp
mov
sbb
nop
adc
inc
test
dec
sbb
out
push
stos
lds
fisubrl
decl
inc
sbb
les
pop
filds
add
mov
out
ds
sub
mov
mov
or
pop
je
jb
fs
int
mov
loopne
push
cld
sub
fs
lods
xor
mov
repnz
inc
mov
scas
das
mov
out
jo
inc
sub
ljmp
add
jbe
out
bts
inc
pushf
pusha
rol
lahf
icebp
mov
jbe
int3
sbb
push
mov
fstpl
xor
pop
imul
xor
add
sbb
pop
clc
xor
iret
sub
mov
mov
iret
jl
sbb
sbb
lea
push
lahf
mov
xchg
lods
incl
push
add
and
cli
clc
push
pop
or
xchg
imul
inc
dec
or
mov
push
pop
out
mov
fsubrp
insl
pop
push
jp
adc
movsb
push
adc
sbb
dec
jbe
lods
inc
ror
fwait
cmpb
inc
pop
outsb
subl
mov
mov
loope
ljmp
or
nop
push
into
sub
arpl
xchg
adc
mov
and
adcl
mov
ljmp
jb
push
lea
inc
pop
mov
movsb
or
jne
ret
outsb
pusha
xorl
sbb
adc
mov
xchg
cmp
icebp
jns
je
test
rcr
sub
mov
jae
lea
lock
aam
insb
inc
jl
lahf
xor
aas
sub
cld
add
push
stc
dec
imul
adc
adc
jbe
enter
pop
cmc
cmp
stos
inc
mov
sbb
test
mov
ljmp
lcall
mov
cmpsb
fimuls
movsb
lods
ljmp
cmc
in
ljmp
movl
mov
adcl
dec
jg
fmull
mov
dec
out
cmp
sub
push
jge
xor
iret
mov
jno
pop
sub
push
jle
push
and
dec
aas
and
stc
rcll
lcall
sbb
lods
test
sbb
ja
adc
add
mov
nop
cli
lods
outsl
call
fs
xor
dec
dec
xchg
dec
push
jae
add
mov
in
inc
mov
aam
lds
adc
repz
bndldx
daa
dec
mov
xlat
add
push
scas
mov
xchg
arpl
roll
adc
ret
daa
jnp
mov
in
fnstsw
jge
addb
add
or
adc
xor
adc
lods
xor
pop
pop
dec
mov
dec
je
pop
fwait
sbb
rcr
cwtl
out
cmc
xchg
cs
lret
rcr
mov
ja
cmpsb
or
add
push
jbe
inc
and
test
ds
test
cmpsl
mov
mov
outsb
je
push
mov
loope
aas
call
mov
aas
outsb
or
mov
sbb
arpl
jmp
xchg
adc
push
and
lcall
jg
adc
lods
adc
dec
xchg
popf
loopne
loop
add
mov
mov
loop
ja
pop
movsl
jmp
js
fcomip
inc
repnz
inc
lcall
fnstsw
mov
or
fsubl
or
cld
xor
cli
lea
adc
inc
cld
mov
mov
pop
icebp
inc
loope
insl
inc
fbld
movsl
ja
cli
adc
out
in
sub
or
rorb
xchg
stc
xor
scas
js
shll
xor
cmp
push
adc
push
pop
pusha
scas
movsl
loop
jp,pt
mov
jecxz
push
popf
cwtl
push
js
and
movsb
mov
adc
movsb
or
call
xlat
inc
sub
popf
xchg
leave
lock
inc
push
add
jge
inc
pop
inc
and
clc
dec
sbb
fmuls
sbb
test
mov
es
add
mov
enter
jmp
daa
jo
shr
clc
mov
ret
push
movsb
std
sbb
cmpsl
or
xchg
or
jle
sbb
aas
movsb
cld
sub
dec
lret
ds
or
repnz
fisubrl
mov
sbb
je
js
fistpl
mov
lods
stos
inc
inc
add
pop
pop
lock
mov
out
pop
adc
repz
pop
das
add
xchg
jnp
scas
les
push
add
pop
push
xor
stos
out
inc
enter
cli
push
test
popa
insl
cmpsl
ljmp
ret
xchg
mov
add
push
push
xor
icebp
lock
in
and
inc
in
cmc
aad
sbb
xor
mov
mov
clc
cmp
jb
lds
cs
sub
aas
cli
jp
mov
xor
fcmovnb
pushl
push
jp
mov
push
inc
stos
icebp
cmpsb
loopne
jp
mov
popf
in
jl
icebp
adc
mov
popa
out
out
sahf
ret
xor
popa
push
outsl
sub
je
popa
inc
jae
ss
pop
hlt
sbb
push
insb
push
pop
adc
and
sub
pop
cli
sbb
arpl
pusha
in
popl
inc
pop
mov
push
loope
mov
push
mov
sbb
inc
stc
aas
pushl
scas
mov
push
mov
xor
ret
xchg
outsb
lds
iret
shlb
sar
ljmp
mov
mov
cmp
jecxz
outsl
shlb
xchg
out
stos
sbb
mov
inc
fistl
jp
mov
inc
fstpt
hlt
in
mov
fdivrs
push
push
aam
incb
rorb
and
xchg
lock
push
outsl
sbb
mov
adcb
ret
insb
mov
ljmp
xchg
dec
stos
cmp
sbb
movsl
pusha
ljmp
fldt
cs
xchg
insb
frstor
mov
xor
imul
xchg
aad
aas
into
mov
dec
mov
enter
add
mov
ja
addl
adc
mov
push
fistpl
loopne
loopne
int
cwtl
lods
mov
test
cmp
loop
popa
dec
sub
ret
in
and
cmp
outsb
lret
push
xchg
cmpsb
and
icebp
movsl
mov
mov
push
inc
mov
cmp
and
push
icebp
inc
lods
push
in
aad
sar
adc
mov
icebp
arpl
and
xchg
cmp
inc
shll
jl
outsl
and
jbe
add
adc
add
mov
xchg
inc
cmp
xchg
add
mov
cmp
mov
stos
and
and
adc
sbb
dec
add
push
mov
pop
jb
mov
arpl
decl
in
test
add
and
adc
jle
mov
mov
mov
mov
stos
arpl
clc
sbb
call
push
in
jae
xor
call
sbb
lock
test
pop
dec
push
jne
leave
xor
push
mov
dec
pop
test
out
and
loopne
fldl
xchg
test
out
out
and
sub
call
inc
push
jo
cmp
xor
in
add
xchg
movsl
mov
aaa
mov
inc
fisubs
inc
mov
mov
xchg
push
push
dec
js
add
jp
cld
loope
and
insb
xchg
insb
jns
stos
and
xor
cmp
loope
jns
adc
add
mov
or
ss
push
or
sbb
mov
adc
rcr
in
test
ss
xor
mov
and
js
rolb
or
inc
add
out
xchg
push
addr16
push
fbstp
lock
mov
mov
js
mov
shl
mov
sub
mov
sbb
mov
pop
je
sti
pop
mov
jo
dec
test
and
sub
sbb
shl
or
cmc
inc
stos
ljmp
mov
and
cld
in
dec
js
pop
or
push
push
push
outsb
xorb
mov
push
dec
jmp
mov
or
mov
cli
and
in
mov
add
sub
or
shll
push
push
outsb
shr
nop
cmc
mov
push
pop
in
or
aad
or
xchg
pop
mov
add
fisubrs
ret
add
int3
pop
adc
inc
or
shl
sub
inc
adc
test
std
add
stos
cmpsl
adc
jecxz
and
pushf
pop
lods
add
roll
enter
addl
in
jnp
inc
pop
sbb
xor
or
outsb
dec
pop
add
jl
or
rcrl
fildl
sub
imul
insb
je
ret
jp
cltd
dec
stc
mov
movntq
in
mov
je
movsb
je
mov
lods
mov
les
push
mov
pushf
clc
lahf
xor
mov
test
pop
fs
push
and
rolb
scas
out
mov
push
test
sub
icebp
sub
xchg
jo
icebp
scas
ror
into
xchg
push
add
fldt
adc
fcoms
enter
push
icebp
push
add
inc
or
or
cmc
int3
mov
fbld
sbb
jmp
std
nop
cltd
lea
into
loopne
xchg
xchg
sti
mov
lea
loop
cs
sbb
jbe
mov
mov
jne
dec
add
test
shl
rol
cmp
mov
xchg
dec
mov
inc
and
add
cld
loopne
lods
pop
inc
mov
dec
sbb
mov
mov
mov
ficompl
add
pop
pop
adc
add
add
ret
sub
jg
and
or
inc
adc
adcb
mov
cmc
sub
sub
enter
lods
mov
inc
ret
jecxz
rclb
dec
dec
test
stos
loopne
nop
mov
ljmp
adc
repnz
mov
and
push
leave
adc
push
ljmp
fs
gs
mov
jecxz
or
xchg
lock
loope
mov
or
xor
add
movsb
or
lahf
ds
adc
xorb
and
sar
dec
pop
sub
cmp
jg
decb
jae
pop
adc
pop
hlt
scas
pop
cli
mov
mov
data16
loopne
gs
fwait
and
jb
fsubs
in
jg
cmp
sub
int3
mov
in
adc
pop
dec
fcoml
mov
pop
push
jb
adc
in
mov
push
sbb
jb
ret
or
lods
decl
xchg
mov
inc
jae
jle
test
cmp
mov
add
push
fmull
je
xchg
fwait
cli
jns
test
and
mov
scas
and
fwait
ret
pusha
jo
xchg
movsl
arpl
push
in
loop
mov
pop
insb
mov
incb
or
push
push
jno
mov
jge
sbb
or
call
adc
jle
icebp
insl
lret
jg
add
jbe
sbb
push
mov
ss
push
popf
fisttps
rcl
into
test
jmp
sahf
push
outsb
adc
lret
pop
jl
sbb
iret
jl
sbb
or
enter
and
mov
sbb
in
in
decb
mov
mov
pop
movsb
and
adc
mov
or
nop
or
les
scas
inc
sub
scas
pop
test
push
push
sti
aaa
aad
jl
repz
mov
mov
sub
mov
cld
icebp
les
jns
jl
mov
repnz
les
mov
or
mov
fs
addl
sti
popa
loope
jl
fwait
dec
iret
inc
jbe
adc
jo
js
lcall
add
mov
push
aam
push
pusha
insl
scas
imulb
xor
or
out
or
jno
fists
mov
clc
mov
jp
pop
xor
jge
fsub
lods
je
nop
iret
adc
inc
xor
stos
das
add
shlb
sub
sub
xchg
bnd
popf
in
out
adc
clc
ret
ret
dec
mov
pop
cmp
mov
fsts
xchg
test
mov
dec
and
cli
ja
dec
outsb
jae
fidivrs
test
mov
adc
ret
shlb
mov
es
pavgb
into
das
lods
cmpsb
pop
icebp
sbb
jmp
xchg
cmp
icebp
repnz
daa
jne
cld
test
and
mov
xor
pushl
inc
nop
sbb
xlat
repnz
xchg
clc
scas
aad
hlt
sbb
push
addl
dec
jnp
shl
add
inc
sub
cmpsb
test
out
pop
addl
cmp
icebp
jo
pop
in
int
sarl
mov
mov
xchg
andb
mov
pusha
push
pop
mov
testb
es
adc
jbe
sbb
jnp
xchg
hlt
adc
fsubr
xlat
mov
jo
sub
dec
pop
fstl
and
adc
pop
lock
xchg
jg
add
xchg
ds
pop
ffree
sbbb
or
inc
mov
or
adc
ret
rclb
test
nop
ds
das
add
cmp
and
int
jecxz
or
or
jl
xor
lods
push
pop
ds
mov
pop
xchg
pop
inc
dec
xchg
call
pop
into
or
jge
sub
rorb
jge
inc
inc
repz
dec
lods
xchg
add
jg
push
cmc
dec
cmp
sbb
sbb
pop
inc
sub
fildl
es
cltd
push
fsubrs
daa
in
lods
ja
test
js
lcall
dec
out
sahf
scas
mov
loopne
sti
inc
in
loop
inc
imul
dec
xchg
scas
mov
mov
and
incb
sahf
push
rol
cmp
xchg
sbb
inc
fmuls
mov
loopne
jno
jns
push
pop
xor
jge
xchg
fldcw
mov
stc
popa
cmova
or
ja
je
call
mov
xlat
int
ret
data16
cmp
loopne
cs
cli
xchg
decb
or
out
pop
adc
push
add
dec
cmpsl
or
popa
cwtl
insl
andb
xor
dec
out
aas
gs
mov
jbe
or
dec
loopne
mov
or
add
js
cwtl
mov
mov
test
and
mov
pop
in
adc
decb
mov
rolb
pop
cli
or
dec
loope
mov
xor
mov
aas
out
adc
subb
stos
or
mov
mov
cmpsb
cs
mov
add
enter
pop
hlt
xchg
cmc
jne
insl
sbb
sbb
xor
pop
loop
ret
fs
sbb
cld
xchg
loopne
mov
push
fsub
scas
loopne
mov
xchg
ja
in
jb
loopne
mov
adcb
push
mov
inc
jl
xor
lret
test
xchg
sbb
lahf
mov
das
clc
stc
add
dec
cmc
dec
test
push
fmull
cmp
testl
jge
lods
sub
jecxz
ds
adc
scas
and
mov
les
pop
outsl
add
orb
sub
ret
dec
call
andb
add
out
jnp
mov
xor
push
aaa
fnstcw
xchg
inc
mov
add
or
mov
mov
daa
xor
into
imull
inc
adc
sbb
adc
jo
adc
stos
mov
insb
rorl
and
cmpl
lcall
push
push
cmp
mov
push
dec
or
lahf
lods
stos
daa
lret
push
fwait
mov
enter
adc
mov
fistps
adc
loopne
ds
scas
mov
repnz
repz
lret
adc
int3
sub
test
es
push
inc
mov
testb
cmp
push
incl
into
dec
loopne
jne
mov
testb
mov
xchg
lods
sub
or
xor
cmc
sbb
push
lods
arpl
dec
pop
inc
dec
and
lahf
pop
cmc
mov
rcr
dec
cld
jg
ss
xchg
pop
into
inc
lock
cmp
in
fisubl
lret
pusha
xor
sbb
lock
ds
sbb
shlb
sbb
ljmp
fcoms
loopne
imull
in
mov
or
sub
jle
cmp
push
popa
int
push
adc
and
add
sub
adc
xor
pop
pop
jbe
inc
imul
adc
ds
and
dec
clc
dec
push
push
xor
or
js
ljmp
les
add
push
push
out
push
or
ret
dec
fwait
cmp
cli
jno
push
push
pop
cmp
adc
and
in
fadd
or
enter
xchg
push
hlt
or
js
mov
stos
push
add
inc
into
ss
cwtl
fistps
mov
ss
xor
xor
inc
in
clc
iret
add
mov
push
clc
inc
popl
loopne
cmpsl
std
loope
add
sub
pcmpeqb
shlb
movsb
cld
xor
pop
lock
les
xchg
jae
push
mov
stos
push
jo
or
lret
fisubl
out
mov
dec
iret
sub
sub
mov
mov
sarl
jne
xchg
ret
or
leave
js
pop
and
push
push
incl
ja
lods
ret
imul
cs
add
mov
xchg
sub
jp
xor
mov
pop
inc
loope
mov
and
adc
fsts
sub
xchg
mov
xchg
jmp
clc
scas
xor
mov
mov
dec
xchg
clc
rol
pop
add
xchg
sbb
ror
je
mov
push
sbb
cmpsl
adc
pop
sbb
daa
loop
jns
mov
xchg
push
add
xchg
icebp
adc
nop
shrb
push
mov
jecxz
imul
dec
in
adc
sbb
movsb
and
bound
popf
mov
jg
mov
jp
xchg
test
sbb
rclb
loopne
pop
push
ret
ret
cmp
adc
test
adcb
mov
mov
ret
loop
lea
lret
imul
je
test
pop
hlt
mov
test
or
filds
sub
shl
scas
imulb
aad
adc
and
jne
lea
fnsave
mov
inc
adc
loopne
push
rolb
aas
and
or
popa
add
push
push
addr16
roll
adc
push
sbbb
leave
mov
pop
mov
push
stos
int3
fcmovne
nop
sti
mov
pop
push
or
ret
leave
sbb
aaa
pop
dec
mov
daa
gs
pop
xchg
rolb
adcb
pop
into
xchg
stos
shll
out
pop
cmpsb
aaa
jne
call
cmp
movsb
sbbl
gs
cmp
iret
jo
jo
push
or
adc
mov
dec
shrl
int
xchg
mov
xor
xor
les
pop
xor
mov
test
xor
dec
out
subb
in
xchg
sbb
push
out
pop
insb
mov
mov
pop
int
jno
lock
in
ss
adc
jecxz
in
push
mov
sub
int
loop
pop
fsts
out
pop
sbb
mov
jbe
mov
cmp
mov
xchg
jp
aam
clc
mov
bound
icebp
mov
cld
fs
dec
cli
mov
mov
push
xor
popf
inc
cmp
or
push
mov
push
mov
push
push
in
scas
pop
test
mov
add
shlb
push
js
pop
pop
mull
aad
inc
sarl
int
push
xor
and
pop
and
ja
clc
sti
daa
fisubrs
cwtl
call
jg
or
shl
adc
idivb
cmp
push
add
sahf
cmp
mov
jae
lods
call
dec
mov
or
pop
xor
mov
cltd
roll
add
jb
mov
popf
lahf
insb
or
mov
sbb
cmpsb
sti
pop
dec
sbb
cmp
shl
insl
sti
test
mov
pop
testb
add
inc
pop
cwtl
push
test
inc
add
or
dec
adc
movsb
scas
call
loop
icebp
outsb
lahf
mov
lea
xor
pop
loop
subl
mov
addb
push
movsl
xor
pop
stos
or
in
add
cld
lods
jp
aaa
inc
push
addl
out
or
add
mov
in
cmpsb
dec
and
mov
scas
jnp
and
nop
adc
xor
roll
sbb
pusha
or
push
lods
xchg
jge
push
pop
lods
pusha
filds
aad
sub
fs
rclb
mov
push
popa
cmpsl
bound
ljmp
mov
cli
pop
sbb
add
je
push
sub
dec
lea
push
mov
dec
arpl
or
jno
cmp
call
push
fwait
pop
rolb
lcall
lahf
stc
xor
xchg
cmc
jb
push
iret
popf
or
pop
sub
fmuls
shlb
push
lock
mov
pop
cmpsb
cmp
xchg
push
jns
lods
adc
xchg
cmpsb
pop
loopne
loop
in
push
cmc
or
mov
inc
push
ljmp
jbe
out
imul
loop
xchg
rol
add
cmp
mov
push
sub
adc
jge
push
out
mov
sti
notl
sub
sub
dec
xlat
pop
sti
sbb
lret
pop
scas
icebp
ret
push
or
rcrl
fiadds
push
out
popa
adc
or
pop
movsb
cld
popf
cmpsl
loope
int3
les
sub
push
pop
xor
cld
inc
push
outsl
cwtl
pop
sarb
adc
jl
inc
lods
int
or
enter
jnp
es
dec
xor
js
lret
daa
imul
and
or
in
adc
sub
test
inc
syscall
mov
push
sub
pop
dec
sbb
stc
jle
into
aam
imul
xchg
mov
add
ror
dec
inc
addr16
aam
dec
pop
fs
pop
cld
xor
mov
mov
pop
mov
and
push
repnz
int
pop
dec
out
adc
sub
mov
outsb
mov
in
repnz
in
outsl
xchg
push
das
fiadds
or
adc
sbb
fs
inc
add
mov
insl
cmp
inc
xorb
js
call
add
movsb
int3
cs
enter
sbb
mov
subl
inc
addr16
enter
cmp
andb
push
mov
fmul
sahf
xchg
stc
scas
jg
lods
push
cmp
ss
or
jecxz
int3
xchg
xorl
test
cmp
sbb
and
in
daa
push
xor
lret
cmp
clc
adc
xor
sub
jle
out
fs
loopne
test
cmp
xor
imul
mov
sub
or
jp
push
sub
ret
popf
ficoml
sarl
outsl
sub
icebp
shrl
cmp
aaa
mov
pop
or
je
mov
jo
jns
fstl
js
sbb
xchg
insl
sbb
push
imul
sbb
std
push
shrd
push
xchg
stc
dec
cwtl
loopne
lea
sub
iret
mov
jbe
cli
inc
add
orb
add
lea
jno
call
push
pop
cmp
psubb
add
pop
lods
push
andl
push
jp
enter
xchg
xor
mov
jno
sbb
fwait
inc
fisubl
lret
adc
dec
rcrb
addr16
mov
mov
push
xor
test
jmp
pop
push
shl
fmuls
movsl
or
mov
mov
popf
test
mov
cli
dec
inc
mov
or
cld
or
pop
jae
movd
cmp
jbe
popf
pop
push
dec
cmp
push
mov
lret
lret
aaa
hlt
push
jb
jnp
push
aad
sub
fidivrs
repz
decb
push
loope
mov
inc
fcmove
push
shl
add
inc
jno
pop
faddl
daa
cld
mov
les
mov
jne
inc
jl
xchg
rolb
jno
sub
fdiv
adc
sub
pop
cltd
icebp
inc
jmp
stos
scas
movsl
push
add
stc
cld
jbe
add
cmpsb
mul
sbb
cwtl
aam
pop
xchg
je
mov
dec
push
hlt
cld
mov
add
aas
inc
and
shrl
push
mov
push
add
loopne
mov
and
loope
addb
sbb
fs
cmp
push
mov
adc
cmc
inc
ret
xchg
lods
xor
mov
jnp
mov
outsb
xchg
and
pop
adc
je
test
xlat
jne
testb
fcomip
add
lods
lret
sahf
stos
mov
sahf
rcrb
mov
dec
ret
pop
stos
xchg
push
jo
xchg
xor
inc
cs
mov
in
bound
inc
or
mov
pop
xor
push
mov
mov
pop
outsl
sbb
mov
fadds
inc
pop
mov
lea
mov
sub
push
sub
test
pop
in
sub
adc
mov
fcomp
pusha
bound
sarb
fsubrl
jae
andl
xchg
inc
ret
scas
pop
or
sub
sbb
pop
les
jge
insl
movsl
pop
dec
sub
ss
jge
mov
les
inc
cld
mov
push
dec
stos
into
call
push
roll
pusha
push
mov
in
and
js
jecxz
ljmp
jg
push
sbb
jns
adc
ret
orb
test
cmp
push
int
popf
push
mov
test
mov
cli
and
mov
imulb
movsl
negb
pop
push
icebp
in
xchg
dec
jecxz
inc
loopne
sub
add
aad
xlat
cli
into
or
mov
ret
fwait
xchg
lret
sub
shr
inc
xor
pop
push
and
popa
test
repz
imulb
xchg
cmp
jg
pop
push
jne
inc
fmuls
stos
in
fbstp
xor
mov
js
adc
cmp
test
andl
ljmp
rcrl
int
loop
or
xchg
outsw
mov
orb
frstor
pushf
fs
push
in
pushf
add
add
push
xor
add
fs
orl
jne
sarl
pop
les
push
mov
lock
dec
pop
lret
pushl
push
xchg
mov
and
rclb
add
scas
mov
or
dec
icebp
pop
mov
xor
inc
jmp
cld
arpl
adcl
sub
into
shll
or
mov
lods
cmp
pop
mov
add
cmp
fs
lds
mov
cmpsb
iret
and
ret
inc
loop
xor
int
adc
push
add
in
call
stos
adc
add
adc
popa
xchg
and
loop
xor
inc
mov
pop
jbe
adc
js
in
push
cmp
incl
and
mov
in
fsts
or
lahf
lock
shl
add
sti
xchg
cwtl
mov
aas
xchg
and
push
xor
mov
subl
int
fs
test
dec
inc
cmp
cld
adc
ret
adc
add
inc
jp
fs
mov
sbb
sub
xchg
scas
push
daa
fcmovnbe
mov
jae
stos
ret
inc
cmpsb
ljmp
call
xchg
xor
sbb
mov
rcrl
inc
xchg
push
push
outsl
ja
or
or
les
cmpsb
loope
sti
aaa
cltd
mov
fnstcw
outsb
hlt
and
inc
and
stos
mov
and
inc
nop
push
xchg
pop
xchg
jbe
addr16
push
rcrl
or
andb
incb
jg
jp
scas
std
callw
jo
inc
mov
and
pop
jmp
pop
and
push
sbb
cmp
stos
stos
cld
gs
jo
xchg
jbe
jmp
fldt
loopne
jp
jno
or
sti
jmp
pop
pop
push
leave
ret
dec
inc
ds
mov
xor
fdivrl
mov
dec
and
dec
cld
scas
ja
sbb
sub
stos
stos
sub
pop
shrb
add
test
mov
mov
adc
xchg
xchg
jmp
cli
imul
mov
int3
mov
lods
js
add
in
test
inc
insl
jge
out
push
in
cld
mov
pop
add
nop
inc
in
dec
cwtl
dec
inc
cmp
int
lods
outsb
xchg
sub
mov
outsb
sti
or
and
bound
and
mov
fcmovnb
es
sub
dec
push
hlt
cmp
adc
pop
push
or
sbb
rcrb
xor
jb
lret
mov
push
push
sub
add
loopne
loop
adc
xchg
mov
push
cltd
loope
sub
lock
or
loopne
and
push
test
cmp
adc
sahf
xchg
outsb
cmc
orl
cmp
cli
push
cli
pushf
jnp
sahf
icebp
mov
ret
in
dec
sbb
push
push
inc
cld
jecxz
movsb
stc
push
ret
adc
xchg
fcomps
and
cwtl
jmp
ljmp
adc
mov
mov
shlb
test
lock
gs
push
rorb
sbb
shlb
in
mov
movsb
push
sub
mov
and
inc
lock
fcmovbe
stos
es
push
fcomi
flds
nop
dec
rcrb
leave
test
jg
push
pusha
insl
push
rcrb
xchg
aas
ljmp
les
cmp
inc
sub
jge
aas
outsl
inc
mov
gs
loop
adc
ret
andl
xchg
shll
popl
loop
nop
xorb
aas
mov
or
pusha
mov
dec
fmuls
pushf
clc
and
push
fsubrs
rcrb
mov
add
inc
jge
jne
adc
pop
jmp
inc
cli
cmpsb
out
fdivl
pop
jo
aaa
mov
enter
das
fdivrl
imul
dec
inc
aam
adc
pop
into
sbb
mov
inc
js
mov
pop
add
inc
ljmp
adc
jmp
out
xchg
sbb
push
pop
cmpsb
ud1
adc
cwtl
in
in
push
pop
mov
push
push
cmp
xor
cwtl
mov
mov
test
mov
aam
fiaddl
or
push
cmp
mov
sub
jmp
push
subl
inc
jl
and
insl
std
scas
ljmp
pop
jle
mov
lea
orb
add
xchg
dec
jns
into
xlat
add
push
mov
push
cli
inc
ja
push
mov
dec
inc
fwait
pop
xor
push
in
dec
stc
mov
nop
cmpb
and
mov
cwtl
push
lcall
inc
dec
ror
loop
sub
pushf
or
call
or
or
or
push
aaa
ds
or
push
loopne
and
jecxz
cli
je
inc
fisubl
fs
fidivs
push
pop
xchg
testb
ljmp
test
mov
popa
jg
xchg
inc
test
xchg
and
push
inc
call
mov
inc
push
sbb
outsb
dec
loop
rcr
call
xor
and
gs
sub
add
mov
xchg
cli
dec
es
jb
jb
rorl
sbb
mov
dec
lea
hlt
or
fwait
rorb
cmp
les
loopne
mov
clc
jns
out
or
je
inc
or
shr
cmpsl
icebp
dec
test
and
inc
or
in
pop
push
pop
sbb
dec
push
stos
pop
incl
cmp
movl
sbb
fdivrs
add
pop
stos
aaa
insb
mov
mov
imulb
sub
lods
cmp
pop
in
ja
xchg
mov
movsl
xchg
test
dec
xor
shll
mov
cmp
add
lahf
mov
dec
pop
mov
dec
cwtl
inc
jo
xor
fidivs
or
lods
add
test
addl
add
clc
xchg
add
icebp
aam
imul
dec
jnp
or
pop
and
ret
inc
or
imul
sbb
dec
test
bound
iret
push
pop
add
mov
dec
mov
das
lods
ljmp
mulb
dec
cmp
pusha
insb
dec
pop
cld
ret
xchg
mov
or
aaa
add
mov
outsl
lahf
push
pusha
pop
mov
cmp
mov
subl
enter
add
inc
incl
push
sbb
add
insl
jnp
in
push
mov
sahf
inc
movsb
dec
mov
or
mov
popa
rcrb
or
xchg
adc
adc
mov
cmp
pop
cli
inc
push
add
shrb
lods
les
call
mov
or
mov
adc
sub
loopne
inc
stos
push
dec
lock
mov
jg
enter
xor
out
clc
sbb
cmc
dec
cmpsb
fsubr
cmp
inc
or
in
or
loopne
sti
inc
into
pop
adc
iret
cmp
sarb
push
jne
mov
mov
cld
mov
xchg
call
and
jae
std
ret
xor
mov
xor
lock
rol
out
pop
test
call
js
ds
notb
push
xor
xchg
sbb
test
mov
mov
push
insb
movsb
repz
push
bound
int
mov
lret
push
in
repz
insb
popa
add
push
xchg
icebp
repz
inc
movsb
loopne
in
sbb
cwtl
fs
push
ljmp
mov
pop
imul
ja
mov
aas
stc
inc
inc
lock
testb
cmp
sub
and
mov
xchg
pop
les
mov
lods
pop
cld
nop
adc
ljmp
test
jbe
sub
dec
add
call
jmp
loop
jge
clc
movsl
cwtl
lock
push
mov
mov
andl
test
add
rolb
push
push
sbb
mov
sub
das
loopne
call
and
jge
ret
cmp
add
fsubrl
add
test
or
mov
ja
mov
js
jns
pop
mov
rol
xor
std
push
push
repz
test
mov
inc
or
out
rolb
call
xorl
xchg
mov
mov
jg
test
int
cli
cs
pop
adc
mov
sarb
push
jl
cmp
cmp
inc
push
push
sbb
mov
out
cwtl
adc
or
rsm
push
std
cmp
addb
add
clc
lahf
pushf
loopne
push
pushf
inc
dec
bound
and
adc
es
push
fwait
andl
dec
mov
push
push
push
adc
cld
add
inc
xchg
sahf
ja
mov
add
aaa
push
aas
sbb
lods
mov
push
lret
xor
mov
insl
push
in
or
inc
xchg
loop
test
jmp
push
test
cmp
jp
or
movsb
data16
and
dec
inc
pusha
mov
sbb
outsb
push
mov
xchg
outsb
out
das
fs
loopne
or
test
push
cmc
popl
aaa
inc
mov
aas
cmpsb
out
pop
or
adc
fwait
add
jmp
adc
stos
shl
loop
fsub
and
push
mov
in
loopne
mov
in
pop
or
adc
je
or
mov
test
lock
imul
stc
pop
mov
ret
dec
sbb
cmp
or
adcb
jbe,pn
loop
cmp
mov
add
ret
sbb
mov
mov
mov
push
into
cltd
stc
ljmp
scas
add
xor
gs
and
push
and
repnz
lcall
orb
jno
cld
jb
jp
cli
outsl
js
out
shl
inc
xchg
dec
addl
nop
fimull
nop
mov
dec
inc
leave
inc
aam
je
push
fnstsw
ret
out
fadds
cmp
or
jne
mov
mov
in
test
fdivrs
jg
sti
pop
jge
jbe
xchg
lcall
cmp
dec
pop
call
push
pusha
or
insw
negb
add
loope
icebp
ficomps
push
push
and
aad
fcomps
sar
pop
push
loopne
push
daa
mov
test
dec
cmp
mov
jg
pop
clc
add
jb
sub
pushf
push
fcmove
add
shr
and
in
into
sub
pop
scas
mov
sar
inc
rol
mov
nop
cmp
sbb
cltd
push
fwait
mov
jae
add
push
or
or
add
sbb
push
test
addb
mov
jl
and
ljmp
sbb
add
pop
inc
sub
sbb
pushf
xor
popa
sbb
push
out
daa
mov
xorb
add
mov
lcall
ljmp
xchg
cmc
push
orb
and
repz
clc
incl
sar
xor
lods
mov
sar
push
lock
aad
loope
inc
jbe
mov
lock
xor
push
sbb
push
sbb
mov
fs
fcoms
adc
ljmp
les
adc
js
decl
pop
jg
mov
pop
inc
inc
push
aaa
lock
add
dec
out
xchg
aas
out
rorb
adc
bnd
cld
iret
xchg
push
fcmove
jmp
pop
stos
incl
inc
jmp
xor
dec
mov
subl
test
ret
clc
or
scas
xchg
add
pop
cs
mov
mov
inc
jae
dec
in
stos
cli
inc
jb
xor
loopne
int3
sub
dec
mov
or
mov
ret
inc
ret
dec
jo
xor
dec
rcrb
mov
int
leave
testb
or
not
cmp
int3
gs
add
and
or
sahf
ja
jae
cvtps2pd
mov
mov
xchg
add
mov
push
inc
sarl
scas
js
stos
fs
cs
inc
sbb
std
jle
mov
call
xchg
mov
sbb
pop
inc
add
lock
incb
cld
jg
push
push
xlat
sub
ja
test
cli
call
dec
popa
jnp
and
in
xchg
hlt
xchg
es
xchg
push
rclb
xor
xor
shll
call
mov
movb
push
push
add
pop
clc
inc
mov
pushf
rorb
js
xchg
rorl
xor
cli
adcb
mov
lods
mov
leave
imul
aam
shlb
ficoms
adc
and
rclb
push
adc
ficoms
jmp
orl
cmp
out
pop
lock
xlat
mov
or
js
repnz
sahf
inc
xchg
cld
test
fisttps
mov
adc
jl
icebp
lods
xchg
mov
fbstp
aaa
push
lds
dec
mov
in
pop
sbb
aad
xchg
jno
ficompl
addb
int
cmpsl
jno
bound
icebp
imul
incl
xchg
ljmp
test
sbb
fwait
adc
mov
dec
aad
push
fisubrl
xchg
and
sbb
and
out
jle
es
arpl
bound
sub
sbb
push
mov
test
and
mov
or
into
sub
xchg
std
mov
sbb
adc
repnz
test
out
add
push
addl
push
cmp
or
ja
jno
inc
cwtl
inc
inc
lods
lcall
mov
insl
out
mov
fmull
mov
jge
cmc
lcall
xchg
push
call
icebp
jbe
adc
jp
daa
add
popa
lahf
jne
loope
arpl
rcll
rolb
mul
insb
cmp
test
out
adc
leave
mov
mov
sub
mov
lods
enter
lret
jp
mov
notl
cmpsb
mov
js
adc
imul
sbb
xchg
jbe
adc
sbb
sbb
scas
icebp
fadds
ds
jle
int
mov
stos
pushf
addb
jbe
out
jecxz
mov
cmp
sbb
loop
mov
shll
aam
sbb
movsb
cs
or
jbe
xchg
fs
repnz
rol
inc
cmp
jo
int3
cmpsl
mov
call
inc
mov
cs
mov
clc
jne
mov
ret
cld
inc
fwait
mov
cli
scas
mov
push
add
jbe
cmc
or
jb
mov
stos
shrb
into
rolb
sbb
inc
cmpsb
cmp
aaa
add
loopne
ret
into
jne
lods
fsubs
push
lock
sbb
lods
pop
mov
repnz
push
sbb
add
push
loopne
fdivr
add
gs
cmp
orb
dec
in
xor
pop
jmp
push
cmp
lcall
popf
pop
xor
push
and
sub
or
sub
cs
rcrb
out
test
sub
out
je
stc
add
jne
lcall
push
leave
add
jg
lods
in
cwtl
xor
dec
or
clc
push
xor
nop
mov
ficoml
addb
jae
mov
cmp
fnsave
push
pop
sarl
add
mov
adc
cmpsb
adc
cmp
sbb
xor
jle
icebp
add
jl
jle
cld
dec
mov
outsb
sub
pop
jle
push
sbb
mov
in
cmpsb
mov
add
mov
or
js
imul
test
gs
jle
or
pop
push
or
cmpsb
lds
push
fldt
adc
xor
out
or
inc
mov
ret
dec
or
xchg
pop
add
insb
es
adc
js
repnz
xlat
mov
cmpsb
jl
outsb
sub
lds
pop
mov
add
sub
inc
mov
jecxz
add
adc
stos
cmpsb
mov
cmpsb
dec
iret
mov
dec
aad
jle
xchg
lods
add
or
movsl
adc
mov
cmp
pusha
int
add
scas
xchg
aam
dec
add
cmp
clc
adc
jno
out
icebp
clc
ljmp
mov
pop
pop
xor
push
hlt
fs
into
xchg
xchg
adc
nop
cmp
into
mov
shrb
sub
clc
pop
add
sbb
sub
mov
inc
mov
cmp
clc
leave
and
and
add
psraw
cmp
sub
aam
data16
push
pusha
dec
ret
rcrb
clc
arpl
mov
sub
or
add
jecxz
shrb
popf
shlb
ss
pop
in
mull
xchg
cmp
pop
pop
push
ljmp
push
lock
sub
das
les
or
jbe
imul
push
clc
push
adc
fimuls
pusha
or
or
adc
iret
insl
add
jmp
sbb
push
pop
add
cmp
scas
pop
mov
adc
push
test
icebp
aas
mov
mov
xchg
js
subb
pop
jg
add
ss
sub
mov
aas
cs
arpl
or
mov
cmp
xchg
push
cmp
nop
lods
mov
stos
inc
add
clc
jo
ret
or
dec
push
lds
pop
ss
adc
jp
icebp
rcll
adc
daa
push
adc
cmp
add
test
out
jl
xor
jl
sbb
das
xchg
lock
dec
adc
call
cmpsl
mov
dec
dec
jecxz
std
push
pop
pop
sub
pop
inc
adc
push
push
fisubrs
mov
inc
fsubrl
orb
and
jo
xchg
jp
test
sub
xlat
sbb
in
cmpsl
cmove
sbb
cmpsb
xor
jl
or
push
pop
aad
push
and
stc
mov
js
andb
mov
adc
test
test
out
pop
in
dec
pop
subl
add
mov
scas
mov
imul
dec
cmpsl
test
test
add
test
pop
testl
ror
jle
add
sbb
and
pop
ror
and
push
fmuls
inc
and
xorb
dec
ljmp
outsb
imul
sub
divl
inc
sti
push
jmp
daa
cltd
cwtl
add
lea
dec
movsb
xchg
push
xchg
les
inc
xor
pop
push
lock
sbb
lock
xchg
clc
sbb
pop
in
or
or
lods
jbe
jnp
in
adc
adc
pushl
addr16
push
rcll
rcrl
lret
xlat
push
sbbl
orb
bound
shrl
jb
je
cmp
push
fstpl
push
jne
iretw
push
mov
loopne
jl
loope
inc
cmp
inc
mov
sub
mov
scas
iret
fsts
xchg
sub
ss
call
push
push
jno
jbe
in
sub
sarb
lock
into
lock
mov
and
hlt
daa
add
mov
nop
ljmp
jp
mov
pusha
cwtl
aam
push
inc
loop
cltd
pop
or
movswl
js
into
insl
sbb
icebp
push
clc
mov
call
movsl
movsb
jp
arpl
addl
dec
dec
je
jge
cmp
aad
or
clc
divl
icebp
jmp
dec
mov
mov
xchg
xor
sahf
dec
fsts
lods
je
add
andb
ss
out
sub
nop
shll
shlb
fmuls
xor
push
mov
out
les
jo
xchg
rorb
xchg
and
std
jno
adc
push
mov
add
aaa
loop
cmpsb
ret
scas
xor
das
pop
push
cmp
mov
adc
popa
addb
hlt
ss
xor
sbb
sub
outsl
fs
adc
out
push
push
loop
aas
xchg
mov
mov
fldl
not
imul
cld
adc
mov
push
and
hlt
out
or
adc
loopne
mov
stc
adc
gs
lods
sbb
jmp
scas
sub
iret
dec
add
jecxz
out
or
roll
push
xor
sbb
test
es
jo
cld
loopne
repz
xor
jmp
ljmp
or
loopne
mov
test
add
pop
mov
pop
mov
loope
add
pop
push
sub
aaa
sub
mov
lret
jns
add
lcall
and
adc
out
sbb
int
cmpb
popf
push
scas
leave
and
addr16
nop
mov
inc
addr16
in
out
rcll
and
shrl
rorl
mov
push
inc
sbb
sahf
pop
mov
rclb
add
mov
sahf
bswap
cld
scas
or
sbb
push
jne
rcll
pop
clc
inc
fmul
push
fwait
add
pop
ret
mulb
add
jge
inc
jl
call
pusha
bound
testl
orb
mov
add
les
pop
aad
mov
aam
sub
paddd
jns
xor
adc
xor
add
stos
mov
or
add
aam
add
icebp
pop
pusha
push
out
mov
dec
std
push
out
rcr
and
loopne
fisubrl
clc
mov
and
scas
xchg
pop
adc
dec
inc
xorb
js
and
and
cmp
pop
insl
mov
adc
adcl
push
cmpb
pop
sbb
out
mov
scas
or
nop
repz
sbb
ret
aaa
pop
sbb
test
mov
scas
icebp
mov
or
je
adc
add
int3
lods
sbb
inc
insb
push
fildl
fwait
insb
sbb
jnp
mov
pusha
imul
rorl
jae
mov
hlt
push
push
dec
scas
push
push
call
stos
jg
into
jmp
add
xor
js
sbb
daa
lcall
inc
pop
shl
das
aad
push
jnp
ret
xchg
inc
cmp
add
adc
nop
cmp
es
xlat
sbb
adc
icebp
inc
aas
mov
jae
sub
das
loope,pt
shlb
iret
in
cmp
push
pop
mov
pop
mov
loop
mov
xor
mov
add
in
and
push
sub
je
iret
fists
xor
popa
stos
push
xchg
adc
add
sahf
cmpsl
mov
push
xchg
jge
sub
push
int3
imulb
mov
es
fisubrl
or
cmpsl
sub
dec
sbb
insl
test
aas
out
inc
push
mov
or
lret
pop
mov
jo
and
pop
ljmp
dec
popl
ljmp
outsb
addr16
daa
sub
lret
cmp
mov
js
add
mov
sbb
mov
clc
fdiv
sarb
cmpb
cmovp
dec
mov
cs
and
orb
mov
adc
jb
shlb
cltd
ljmp
inc
loop
adc
gs
push
jmp
jl
fidivrs
xchg
sbb
or
cs
movsl
mov
hlt
shlb
and
outsb
cmp
add
push
movsl
jnp
das
mov
in
push
ss
je
iret
fisubs
push
mov
jmp
push
dec
dec
mov
clc
lods
push
shlb
pop
mov
mov
push
ret
leave
xlat
jecxz
pop
ds
or
add
mov
mov
out
inc
ficomps
hlt
int
xchg
lods
push
jo
mov
scas
fs
jl
adc
inc
lods
mov
push
fsubs
push
fnstenv
push
clc
adc
sub
test
shll
xchg
dec
scas
pop
mov
pop
fbld
bnd
loop
xor
loopne
lcall
aam
fiaddl
aaa
loop
lods
mov
jae
inc
sbb
into
sbb
lret
jecxz
lahf
test
pop
loopne
cmp
jmp
loopne
in
sbb
add
pmuludq
cmp
pusha
cmpsl
scas
sub
jp
stos
nop
pushf
daa
add
cltd
adc
jnp
sub
and
dec
add
mov
push
inc
inc
in
mov
and
leave
xchg
cwtl
fdivrl
loopne
scas
sbb
adc
xor
xor
loopne
adc
aam
mov
in
dec
cmp
mov
inc
addr16
mov
sub
jno
insl
in
xchg
je
mov
mov
repz
rcll
mov
adc
jnp
push
mov
mov
mov
cmc
inc
mov
and
xor
clc
gs
lcall
addr16
adc
push
out
daa
lea
inc
faddl
cwtl
add
sub
jp
push
push
in
xchg
pushf
sbb
lods
jg
mov
rcr
test
cmp
sbb
inc
rcl
js
sbb
lods
scas
cwtl
or
add
out
inc
pop
ret
pop
and
mov
inc
xchg
pop
cmp
cmp
cmpsb
arpl
clc
cmp
push
mov
mov
or
fwait
push
ja
mov
call
inc
cmpsl
scas
mov
dec
inc
push
jp
repnz
fisubrs
aam
pusha
ret
pusha
sbb
add
loopne
push
ljmp
jecxz
xlat
jb
dec
xchg
push
dec
xor
iret
jb
out
mov
mov
aam
and
fisubrl
ljmp
inc
loopne
loopne
jmp
rolb
pusha
lds
and
insb
outsl
mov
pop
mov
adc
jo
and
cmp
pop
dec
dec
test
xchg
lods
int3
pop
jg
mov
pop
add
std
adc
push
imul
sub
pop
cmp
and
push
jmp
inc
add
and
pop
dec
or
mov
insl
sbb
dec
sbb
outsb
and
pop
popa
pop
adc
add
lahf
or
daa
mov
sbb
push
mov
add
push
fwait
xor
mov
jmp
popf
and
push
cmpl
out
xor
mov
imul
cmc
mov
xor
xchg
js
add
mov
pushf
adc
hlt
mov
add
loop
lods
add
shlb
or
sub
cmp
orl
das
push
insb
idiv
pop
icebp
mov
int3
paddsb
or
arpl
cltd
mov
movsb
pop
pop
or
jmp
sbbb
jb
mov
cmpsl
and
or
js
mov
cmc
push
and
push
cli
call
sbb
and
xchg
push
pop
jmp
rcl
mov
popa
insl
push
sbb
adc
addl
imul
fsubrs
insb
lock
adc
sarl
jnp
mov
add
adc
dec
pop
push
out
ret
rol
cmpsl
mov
jne
adc
and
jge
std
rolb
add
fxam
dec
and
mov
xor
sbb
add
add
lahf
out
dec
pop
xchg
jmp
adc
rolb
cmp
xor
pop
popa
cmp
lahf
push
mov
fwait
pusha
aas
push
jecxz
fnstcw
ret
aad
stos
inc
enter
pop
enter
int3
andb
pop
adcl
cmp
scas
pop
cmp
adc
xchg
jb
pusha
punpckhdq
adc
and
cs
mov
aaa
xor
push
push
sub
push
xor
insb
adc
inc
sti
rorl
mov
mov
cmp
inc
jl
rorl
jo
pusha
mov
sub
mov
lahf
insb
and
cld
mov
xor
pusha
notb
dec
xor
loopne
enter
repz
or
pushf
push
inc
mov
sarb
xchg
mov
daa
lock
xchg
sbb
add
mov
rclb
enter
aaa
ret
ficoms
ja
and
add
or
ja
repz
imul
testb
ret
sbb
in
pop
and
inc
outsb
out
sub
fsub
aaa
dec
inc
inc
mulps
add
js
imul
scas
mov
bound
mov
clc
arpl
adc
mov
push
pop
xchg
mov
lods
xchg
mov
adc
pop
jecxz
test
add
addr16
fldenv
add
fwait
dec
cld
loopne
ds
or
jmp
inc
pushf
xor
and
ret
jp
neg
fldl
fstpl
mov
or
std
mov
cwtl
jl
dec
add
test
and
fsub
mov
out
imul
or
popf
jbe
movsl
insb
les
stc
cwtl
fcoms
rol
adc
mov
andl
test
andl
cld
cld
ret
inc
cmp
clc
inc
xor
mov
cmp
xor
cmc
cs
mov
pop
clc
addb
into
lret
pop
mov
cld
pop
popa
loope
pop
dec
pop
sahf
inc
and
lock
lock
imul
ret
xchg
js
dec
mov
sub
lret
mov
roll
pop
in
sbb
mov
mov
fwait
das
add
lea
les
add
hlt
mov
lret
adc
xor
push
jbe
pop
inc
mov
cmp
add
ds
fdiv
and
add
add
push
adc
jae
adc
mov
out
shll
and
mov
and
out
push
inc
pushf
outsb
push
sbb
std
sbb
xlat
and
adc
add
push
js
ja
push
push
daa
movsl
lret
leave
mov
fisubl
sahf
add
xlat
xchg
lahf
mov
adc
push
sub
push
lods
lret
xor
inc
adc
jp
jbe
outsb
subl
rcll
cmp
xchg
jnp
pop
xchg
push
push
sub
loop
jae
loope
in
cli
and
add
call
push
push
mov
inc
push
sbb
pop
pop
stc
cmp
flds
adc
ficomps
xchg
sub
lods
paddb
push
lret
fimuls
mov
bound
pop
cmp
sub
les
pop
and
cltd
icebp
insl
or
inc
inc
sub
lods
scas
jmp
xchg
filds
lods
ljmp
dec
adc
adc
imul
add
pop
cmp
add
mov
inc
cmp
mov
mov
mov
dec
mov
sti
dec
addb
in
mov
stos
test
stos
das
jne
add
xchg
or
jae
cmp
les
xchg
out
nop
fsts
outsb
push
or
addr16
xchg
lods
mov
lcall
inc
das
loopne
xlat
cmp
insl
sbb
mov
and
jmp
aas
xor
cmp
fscale
sbb
and
xorb
inc
push
mov
cmp
ss
xor
inc
pop
sbb
push
pop
loopne
cmpsl
xor
jo
das
fincstp
imul
sub
push
cmp
mov
aas
jecxz
sbb
xor
sar
pop
es
in
jp
mov
scas
jo
icebp
lret
rcrb
inc
mov
jle
push
add
jns
jns
ja
test
mov
sbb
out
shlb
push
push
sub
add
mov
or
in
ret
addr16
and
sub
adc
lock
dec
test
push
mov
lahf
or
push
jmp
dec
cwtl
cmpsl
cltd
in
bound
sbb
mov
shll
mov
mov
divl
jmp
push
je
cld
arpl
jp
imul
and
cmp
negb
in
in
clc
add
or
or
out
pop
movsb
sub
mov
test
push
jb
dec
into
jae
mov
push
jge
fsubr
inc
xor
xlat
pop
pop
add
pop
add
or
mov
mov
xor
push
add
cltd
push
fisttpll
leave
subl
inc
mov
adc
jge
push
fistps
dec
std
push
mov
mov
sub
sbb
mov
je
ja
xor
ficoml
cmp
mov
cmp
pop
sub
inc
popaw
ret
pop
xor
lods
in
mov
add
mov
push
pusha
dec
hlt
fldcw
rcrl
push
inc
xchg
xlat
sub
xchg
mov
orb
xlat
rol
or
jecxz
mov
fiaddl
jbe
push
movsl
loopne
popa
jp
mov
in
adc
push
inc
in
cmpsb
sbb
bound
adc
jge
mov
inc
int
imul
pop
rorb
xor
jb
stos
sbbl
andb
mov
pop
jne
lock
icebp
add
inc
sbbb
mov
cmp
insl
push
sahf
mov
mov
repz
nop
repnz
dec
stc
dec
pop
cmp
xchg
dec
sub
lds
pop
push
push
ja
jno
push
icebp
adc
pop
cli
rorl
int3
imul
xchg
xchg
cmp
cld
test
lea
jg
outsb
and
cltd
and
mov
xlat
cmp
clc
test
add
bound
pop
or
lock
test
and
inc
sub
mov
dec
push
add
loopne
dec
xor
and
fwait
sbbb
scas
loope
cmp
popf
test
and
lods
mov
lds
xor
leave
and
call
les
jo
sbb
std
add
pop
and
push
cltd
jne
xlat
cwtl
jae
inc
ret
push
clc
dec
dec
or
lea
xor
jnp
or
rorb
sbb
jne
inc
cmp
stc
and
push
mov
aas
xchg
bound
rorb
data16
sar
mov
shlb
pushf
addl
sub
pop
cmpsl
loopne
or
and
scas
cs
out
wrmsr
push
inc
inc
mov
outsb
mov
dec
sbb
xor
or
xchg
outsl
and
jnp
inc
enter
inc
inc
loopne
adc
mov
dec
in
mov
mov
stos
orl
loop
cmp
ljmp
imul
dec
jns
data16
or
jecxz
xchg
outsl
cmpsl
addr16
push
mov
jecxz
scas
inc
cmp
adcb
add
pop
sarl
add
jae
ljmp
shrb
and
addr16
faddl
mov
cltd
add
mov
int
rcr
rorb
cmp
loope
inc
push
cmp
add
add
mov
mov
popa
mov
lea
sbb
dec
xor
xor
andl
xor
pop
add
push
addb
sbb
and
icebp
and
stc
add
adc
pop
sub
mov
sbb
or
pop
mov
mov
inc
ja
push
adc
ret
cli
xchg
adc
mov
add
out
jmp
into
aam
or
movhps
test
iret
add
sub
and
insl
inc
stos
shll
cmp
inc
aas
repz
add
nop
mov
imul
jecxz
je
lea
fnsave
jnp
push
xchg
insb
push
adc
mov
xchg
sahf
decl
mov
jnp
insl
push
cltd
lock
sbb
shrl
inc
sub
or
jbe
out
inc
out
dec
adc
mul
push
cld
adc
inc
das
aas
push
jns
jo
mov
mov
mov
popf
clc
in
arpl
divb
and
outsl
push
mov
scas
lods
imul
lret
gs
test
and
mov
adc
scas
and
in
pop
dec
in
dec
adc
pop
jp
movsl
push
xchg
imull
add
in
cmp
mov
push
cwtl
mov
mov
jnp
mov
dec
shll
cmp
inc
push
addb
push
adc
add
cmp
addl
cmp
push
jo
out
lcall
lcall
mov
xchg
in
push
inc
lret
rorb
jo
add
lahf
rclb
xchg
cwtl
adc
fs
mov
dec
pop
or
scas
push
inc
stc
shll
sbb
dec
lods
cmc
fisubrl
addb
popa
insl
and
jae
or
popa
inc
mov
mov
es
mov
add
add
in
lret
sbb
pop
xor
add
cmp
fmul
add
and
and
movsl
scas
and
push
jb
pop
js
clc
cmc
lds
sub
or
mov
ds
fs
adc
sub
les
lock
ret
lret
xchg
ret
mov
xor
lea
insl
rcrl
andl
daa
fidivrs
add
lds
push
mov
pusha
stos
cmp
and
outsl
jo
push
popf
rolb
movsb
imul
lea
insb
mov
cmp
shll
shrl
or
sub
dec
jp
mov
xor
add
pop
push
stc
out
xchg
cmp
inc
lahf
adc
sub
sub
mov
das
outsb
sti
ret
leave
push
and
mov
push
mov
and
popf
call
scas
sub
mull
dec
lock
fmuls
inc
jge
aam
xor
addr16
cmp
in
jns
jno
pop
leave
sub
mov
mov
out
in
pop
in
pop
jp
lods
sti
adc
pop
mov
mov
jo
nopl
dec
das
js
fldcw
sti
cmpsl
pop
aas
pop
pop
outsl
popf
fwait
sub
addr16
add
adc
lods
jg
les
sbb
mov
pop
pop
xorl
sbb
sub
lods
adc
cltd
test
in
pop
sub
push
sbb
aad
jo
loop
pop
push
push
mov
testl
adc
lcall
jno
pop
adc
loopne
mov
andl
hlt
push
ja
jnp
ret
dec
jno
xlat
mov
xchg
cmp
or
dec
sti
in
das
dec
int3
in
xor
cmp
push
add
ja
sbb
fsubrs
aad
mov
in
dec
push
arpl
enter
push
sbb
mov
cmp
es
jo
cmp
adc
hlt
sar
push
outsb
cltd
rcl
ret
les
pop
inc
pop
jmp
sbb
cmp
stc
fbld
inc
pop
outsl
cli
in
cmp
lcall
fwait
test
and
mov
or
pop
aam
scas
mov
pop
xchg
pop
lock
cwtl
mov
sub
and
mov
ret
out
cli
jmp
pop
adc
movsl
or
lea
sbb
or
mov
enter
orl
add
insl
jne
sbb
popl
mov
insl
enter
inc
cwtl
insb
jo
ss
bound
cli
dec
or
or
clc
bound
out
xchg
lret
in
xchg
les
adc
test
pop
cltd
push
lahf
jge
cmp
dec
push
cld
mov
and
inc
pop
movsl
shl
pop
pop
andb
push
ja
add
testl
jne
arpl
cmp
pushf
dec
pop
icebp
push
adc
mov
jg
cmpl
sbb
int3
jl
ret
and
cmp
push
xor
jnp
mov
adc
ja
mov
push
rcl
mov
or
pop
dec
dec
outsl
repnz
xchg
xor
fadd
lock
and
cltd
adc
ljmp
lret
and
popa
and
mov
mov
jp
sub
call
and
or
dec
mov
inc
lea
jne
jge
ljmp
inc
mov
xlat
addb
mov
leave
into
xchg
fimull
and
das
das
mov
das
jno
mov
into
mov
scas
cmp
sub
lock
outsl
jb
pop
pop
pop
lret
xor
mov
adc
fucom
and
out
ret
pop
lock
jle
push
scas
sub
and
or
in
les
jge
xor
aad
in
adc
shll
and
insb
ljmp
aas
fidivs
pop
leave
sub
add
loopne
lret
add
pop
nop
or
and
setp
cld
or
loopne
xor
sbb
mov
popf
pop
aaa
fidivs
sbb
test
inc
jp
jg
cmp
mov
int3
xor
pusha
das
lods
sbb
or
inc
pop
jl
call
scas
push
cmp
rcrl
in
mov
ja
xchg
dec
dec
sub
fwait
mov
sub
call
testb
aaa
sbb
mov
adc
ror
incl
test
rcrl
mov
jbe
mov
cmp
cli
out
jl
jmp
filds
mov
sar
and
or
pop
sbbb
dec
inc
enter
cmp
sub
jge
sbb
js
adc
ret
addps
jge
push
hlt
push
cmp
sub
jg
sbb
shrb
adc
xorb
incl
mov
daa
jne
rorl
fimuls
push
ljmp
notb
pusha
pop
loop
pushw
push
xchg
or
pop
mov
mov
push
lahf
and
pop
mov
enter
pop
mov
sub
jge
andb
jne
adcl
lret
push
and
mov
call
je
shll
mov
pop
mov
xor
sub
data16
push
push
inc
loopne
js
sar
outsb
ret
lock
sub
and
sbb
bound
pop
mov
or
inc
xchg
sub
das
adc
inc
sbb
push
cmp
jbe
sub
es
pusha
mov
imul
adcb
int
and
shr
cmpsb
sbb
add
pop
rol
and
jo
mov
popf
and
xor
and
pop
lods
and
insb
push
pop
pop
mov
enter
sub
jmp
das
es
xchg
test
cmp
imul
nop
lds
sub
clc
push
mov
cmp
push
pop
lods
mov
or
add
ja
mov
std
cmp
or
jae
cmp
movb
push
or
sbb
ja
scas
jg
popf
inc
xor
mov
mov
int
push
cld
es
out
dec
mov
dec
rcl
sbb
lret
xlat
loopne
adc
iret
jae
mov
mov
js
xchg
loopne
xlat
scas
xor
inc
mov
lds
jmp
ror
aaa
popf
fisttpl
push
adcb
testb
ja
fisttpll
xlat
ds
dec
inc
add
test
xor
movsl
push
pop
js
or
lcall
mov
cmc
xor
push
mov
pop
aam
sbb
xorb
cli
mov
lahf
int
inc
lea
adc
mov
stos
adc
mov
jne
gs
push
test
imul
in
pushf
cmp
mov
or
jo
adc
les
rclb
mov
add
push
in
mov
incb
sbb
xchg
scas
jg
cmpb
arpl
mov
push
roll
sub
pop
ja
xchg
inc
mov
push
xchg
or
adc
cwtl
mov
push
dec
cwtl
ljmp
xor
pop
inc
loop
pop
mov
add
adc
jp
xchg
pusha
aam
cmp
repnz
ret
fistpl
mov
fisubs
cs
lahf
jae
movsl
mov
add
idivl
inc
mov
sahf
out
mov
fwait
or
push
test
xchg
mov
es
ljmp
insb
jg
sub
add
push
push
cmpsb
mov
jle
movb
cmp
xor
sbb
and
jae
dec
jp
xor
jle
fistpll
daa
fcomps
aam
mov
pop
clc
push
hlt
inc
push
pop
cli
xlat
rcr
nop
pop
inc
pop
xchg
sbb
aas
sub
push
mov
outsl
mov
repnz
inc
outsb
mov
mov
test
push
ficompl
les
addl
jo
in
and
dec
rcrl
daa
pushf
push
mov
fiaddl
push
jb
in
mov
pop
fisubl
push
push
add
loope
inc
aam
stos
outsl
mov
jne
jecxz
jb
inc
stc
mov
mov
mov
pop
cltd
div
adcb
cmp
icebp
or
ds
notl
cmp
add
sbb
icebp
mov
add
andl
mov
xchg
lcall
pusha
call
jg
shr
xchg
push
icebp
je
pop
add
inc
push
fldenv
xor
and
call
cli
inc
lret
inc
fcmovnu
call
jle
test
add
cmp
jo
mov
outsb
movb
bound
mov
xchg
repnz
fisubrl
mov
loopne
pop
inc
jb
pusha
sbb
test
andb
imul
call
inc
je
cmp
dec
mov
sar
adc
sub
stc
mov
mov
xor
push
mov
pushf
cmpsl
rcll
int3
jo
loopne
nop
nop
es
mov
icebp
mov
jnp
push
push
pusha
mov
addb
fs
xchg
mov
inc
mov
nop
cmpsl
and
rcl
jne
in
dec
pop
jecxz
cs
sbb
mov
pushf
int3
fwait
mov
push
cmc
mov
adc
inc
aam
add
clc
fistps
test
popf
or
outsb
cli
inc
xchg
and
cli
sarl
xchg
ror
cmp
aad
xchg
aam
push
pop
insb
popf
outsb
cltd
or
stos
inc
mov
sub
mov
add
mov
cmp
lods
cmp
push
inc
sti
pusha
int3
xchg
shrl
cld
das
lods
rorb
stos
shr
dec
adc
lahf
es
mov
sub
dec
cld
fnstsw
inc
cmpsl
shlb
test
sbb
pop
cli
ret
pop
mov
cwtl
push
push
aad
das
hlt
loopne
push
popw
arpl
or
dec
aaa
xchg
js
and
es
mov
ffreep
dec
xor
mov
fidivrs
loop
and
testb
sbb
sbb
fcoms
xchg
mov
dec
sub
lock
lea
cli
es
mov
inc
cld
decl
loop
cli
imul
sbb
push
lds
mov
push
and
push
mov
fs
push
mov
aam
pop
add
jle
cmp
in
add
push
pusha
pusha
les
pop
into
add
test
xor
xchg
push
daa
mov
or
test
push
out
stos
inc
xchg
mov
pop
dec
loop
push
xor
adcb
test
and
and
fwait
pop
popf
push
dec
sbbb
push
mov
loopne
mov
and
jg
dec
popf
or
addb
cmpsl
popf
aas
test
xchg
loope
push
mov
fs
mov
sbb
jecxz
rcrb
pusha
mov
out
sub
jno
xchg
outsb
push
sbb
push
mov
sbb
add
sub
cs
lock
filds
rcl
pop
aaa
shll
adc
add
int3
daa
test
adc
aad
sbb
xor
push
mov
and
pusha
pop
outsb
cmp
sbb
notb
inc
or
inc
cmp
mov
cmpsl
cmp
sbb
adc
push
pop
mov
adc
or
pop
sbb
subl
mov
push
dec
jmp
adc
add
dec
lods
aaa
push
pop
in
int3
punpcklbw
mov
out
arpl
xchg
pop
pushf
mov
add
cmpsb
inc
cmp
or
fldt
pop
adc
sub
aam
inc
rcll
in
pop
pop
jp
add
clc
cmp
js
daa
and
mov
mov
jno
adc
mov
out
pop
ja
aas
scas
mov
hlt
imul
insb
pusha
call
daa
sub
nop
repz
cwtl
xchg
jae
xor
and
jmp
mov
fisubs
xor
sub
adc
add
pusha
jb
xchg
sbb
or
inc
aaa
jnp
push
add
mov
inc
adc
aaa
aad
in
push
cmpsl
adc
les
outsb
ss
push
into
shrb
push
loop
mov
mov
inc
sub
or
es
mov
adc
sbb
addl
mov
mov
das
mov
stos
xchg
or
push
les
cmp
mov
push
shl
movsl
inc
inc
dec
aaa
mov
add
push
imul
jge
sub
scas
xchg
sub
inc
shrb
and
cwtl
sub
adc
scas
add
pushf
jmp
mov
outsl
imul
pusha
or
mov
xor
stos
imul
or
inc
fsub
push
sub
pushl
cmp
cmpsb
hlt
mov
mov
pushf
aad
movsl
test
inc
cs
cmp
push
jb,pt
xlat
mov
xor
nop
jge
pop
xor
xchg
aas
shrb
repnz
std
push
cmp
push
xorl
loope
daa
mov
push
lret
mov
ret
mov
jg
out
out
out
mov
pushf
sbb
jge
mov
lahf
outsb
mov
ret
lea
test
mov
push
mov
sbb
jnp
incb
pop
push
mov
add
dec
and
push
movsb
pop
js
negl
ret
mov
xchg
repnz
jae
cmc
fwait
inc
pushf
fndisi(8087
xchg
iret
mov
jl
cld
and
imul
push
push
ja
lods
andl
addr16
pop
dec
sbb
inc
test
loop
jnp
icebp
daa
jecxz
sub
inc
in
dec
ja
testl
fiadds
rolb
xchg
xchg
js
fwait
lock
add
in
adc
or
add
cmp
mov
dec
cli
jb
pusha
loope
pop
or
xchg
cwtl
sbb
add
cmpsb
out
pop
sub
push
jp
xchg
out
aas
test
dec
rolb
rcrb
sub
in
fsubr
test
push
mov
dec
and
fsubs
loope
cmp
movsb
sbb
test
or
fstpl
ss
rclb
pop
rcr
mov
cmp
xchg
inc
popa
scas
ret
mov
mov
cltd
andl
add
pop
lea
cli
add
add
xchg
add
push
shrb
cmpsb
aam
mov
mov
js
mov
mov
xor
jno
pusha
xchg
sbb
addl
dec
sbb
cwtl
sbb
cmpsb
pusha
push
lods
sub
mov
sbb
call
popa
push
mov
adc
mov
inc
mov
dec
pop
cmp
outsb
or
or
jmp
or
and
pop
movsb
and
mov
aas
push
sti
push
insl
js
push
je
or
ret
jp
ret
jae
and
adc
push
jmp
mov
xor
or
lret
ret
dec
repnz
loop
push
or
nop
mov
sbb
cmpsl
clc
lcall
rcr
push
and
pushf
jb
xor
lock
sbb
jmp
fimuls
clc
cmp
mov
aas
ficompl
xchg
mov
lods
stc
xchg
add
jge
jns
clc
popa
arpl
adc
sub
add
or
jle
mov
js
add
mov
loopne
cmp
cli
jp
nop
mov
jo
dec
je
daa
xor
pop
lret
sar
fwait
mov
xor
pop
scas
fstl
flds
popf
cmp
and
add
imul
jae
xor
inc
mov
rolb
int
loopne
movaps
std
pop
je
shlb
out
push
push
call
popa
das
ja
push
inc
sbb
sbb
inc
mov
and
loop
outsl
pushf
cli
dec
stos
mov
cmovb
mov
jge
scas
mov
adc
sti
sub
mov
mov
mov
jg
cli
call
mov
mov
popa
jne
jne
adc
mov
mov
aaa
fs
cmp
add
aas
lret
cmp
cwtl
ret
mov
xchg
jmp
mov
mov
bound
pushf
dec
xchg
repz
pop
inc
into
lods
shl
cld
sbb
inc
inc
pop
cltd
push
filds
or
pop
aas
fiadds
inc
push
jmp
aam
gs
in
clc
mov
out
movsb
xchg
inc
jge
adc
adc
push
test
add
push
and
cwtl
daa
insb
mov
push
mov
and
push
hlt
filds
mov
xchg
sub
sbb
jmp
ds
roll
jmp
mov
cmpsb
aas
mov
lahf
insb
or
add
orl
ljmp
pusha
cmp
inc
frstor
dec
mov
jle
jle
addb
test
shl
bound
mov
pop
in
addb
push
lods
xor
cmp
fildl
push
mov
push
out
lods
test
push
adc
cmpsb
subb
addb
outsb
pop
dec
mov
ficoms
ljmp
jo
cmp
in
mov
imul
pop
cmpsb
push
jo
add
push
jge
push
cmp
sbb
and
clc
sbb
movsl
mov
jp
pop
inc
aaa
jle
ss
inc
subb
adc
fucomp
jle
add
add
repz
xchg
jl
mov
push
ds
pop
test
arpl
jb
outsb
ficoml
inc
jbe
jl
jle
lahf
rorb
mov
and
rcll
push
add
jbe
out
loop
add
cld
out
js
popa
cmp
cli
pop
fcoms
lea
and
clc
mov
jle
mov
rcl
adc
cs
in
mov
xchg
and
out
dec
rolb
hlt
mov
cmpsl
mov
daa
mov
cltd
pop
js
les
add
cmpsb
and
xchg
lods
cmp
pop
add
outsb
test
inc
hlt
je
in
xor
push
test
inc
xchg
add
and
sbb
ret
inc
insl
mov
loope
sub
dec
clc
or
dec
pushf
sbb
xchg
xor
inc
push
add
mov
pop
lea
jle
mov
sbb
cs
inc
inc
cmp
add
inc
xchg
mov
out
mov
push
icebp
pop
xor
cmp
mov
das
mov
sbb
add
adcl
cmp
test
dec
jae
dec
mov
mov
push
jmp
jno
fsubp
inc
and
outsl
shlb
push
hlt
pop
xor
pop
add
pop
cmp
and
call
pushfw
hlt
outsl
fstpl
leave
push
adc
mov
pop
enter
push
push
push
cs
jmp
int3
xorb
test
shll
test
or
and
test
adc
mov
ret
mov
mov
or
and
dec
notl
rcll
in
insl
js
sbb
pop
loope
sahf
add
rcr
pop
aam
add
add
sbb
add
mov
test
cld
push
icebp
xor
adcl
aaa
dec
dec
sbb
adc
enter
aaa
push
pushf
sub
outsb
pushf
sub
bound
pusha
adc
je
mov
call
cmp
in
xor
cmp
and
inc
or
inc
sbb
lret
cld
scas
faddl
movsb
ja
adc
xorb
mov
xor
mov
jmp
adc
pop
xor
sub
shl
lea
jno
mov
clc
jns
das
push
fstpt
mov
arpl
cmpsb
pop
jle
dec
xchg
ss
and
insb
xor
sbb
fimuls
or
cmp
inc
push
cmp
iret
out
sub
pop
cmpsl
sbb
std
jg
insb
xchg
dec
adc
loop
dec
mov
popf
xor
adc
inc
loope
xchg
mov
add
dec
repz
int3
or
jne
or
test
mov
shlb
ss
xor
dec
add
mov
andl
xorl
sbb
clc
push
add
pop
mov
call
sti
rol
or
mov
adc
mov
sarl
add
xchg
imulb
orl
sub
je
incl
pop
arpl
mov
sbb
je
pop
pcmpeqb
lock
mov
sub
or
add
push
lock
cmpb
add
or
cmc
and
mov
shlb
sbb
mov
fwait
add
pusha
pcmpgtb
xor
cmp
scas
xor
je
cmp
adc
data16
sub
jo
lds
sbb
and
pop
push
outsb
loope
and
icebp
mov
jl
inc
inc
cmp
sub
cli
dec
sub
fimull
lea
mov
mov
imul
rcrb
scas
xchg
xchg
insb
inc
xchg
dec
mov
lcall
mov
ss
sbb
iret
loopne
mov
jno
int3
adc
rclb
dec
pop
inc
mov
push
aam
xchg
pop
mov
ja
add
cmpsl
xchg
in
inc
test
stos
cmp
lahf
mov
pusha
jmp
call
mov
push
dec
push
aam
pop
mov
and
movsb
fiaddl
or
sbb
cmp
call
sahf
inc
jmp
xchg
aad
aaa
sub
add
fs
xorl
std
test
sbb
xor
jnp
mov
enter
sbb
adc
cmp
dec
jmp
sub
clc
dec
pop
clc
icebp
xor
lahf
popa
mov
cmp
adc
dec
shl
xchg
sahf
cmp
xchg
mov
arpl
mov
xchg
jne
pop
add
or
out
cs
mov
jmp
js
stc
test
leave
xchg
scas
jmp
scas
mov
popf
and
jmp
adc
popa
and
add
ja
cli
call
mov
inc
pop
mov
outsl
add
lods
movsb
dec
or
or
hlt
out
cmp
arpl
cmp
ja
mov
pop
jo
outsb
incb
push
loope
or
and
pop
movsl
cmp
adc
fcomi
sbb
outsl
pop
dec
inc
js
fs
pop
add
and
lret
or
jg
sahf
pop
inc
jp
jp
es
lock
pop
shll
adc
inc
fildll
fucom
mov
stos
push
fs
pshufw
xlat
cmpsb
call
sbb
xor
mov
fwait
lahf
icebp
loopne
out
popa
pop
aam
lock
push
or
add
jo
cli
stos
roll
cmp
ljmp
inc
add
mov
jne
pop
lock
jnp
mov
or
push
sti
dec
lret
adc
fcomps
call
iret
xorb
or
xor
and
lret
mov
and
lods
xchg
insb
add
sub
add
add
mov
mov
sahf
push
add
idiv
cld
mov
add
lcall
push
push
enter
fldcw
jo
dec
cmpsb
fnsave
ss
pop
dec
mov
or
lds
or
icebp
sbb
mov
popa
xchg
roll
push
push
js
dec
les
mov
sbb
test
mov
test
adc
and
rcl
jbe
les
jl
inc
mov
sbb
sbb
push
fisubs
push
addr16
push
push
jne
dec
xor
jae
dec
sti
dec
jns
adcl
mov
pop
push
pop
loopne
call
add
stos
push
push
add
ret
inc
mov
cmpsb
xor
add
fndisi(8087
test
add
ds
inc
mov
mov
push
out
clc
out
mov
sub
and
pop
popa
std
inc
jmp
fiadds
mov
pusha
test
push
and
sbb
add
inc
jo
add
idiv
add
hlt
jbe
mov
pusha
js
and
andl
loop
and
mov
jnp
je
mov
scas
jns
mov
cmpsb
andb
adc
ljmp
ljmp
divl
push
arpl
pop
cmp
mov
loop
inc
ljmp
or
or
sbb
adc
mov
test
lock
push
mov
mov
rorb
testl
or
push
add
in
jnp
pop
iret
inc
cmp
mov
in
and
sbb
sbb
cmp
cmp
call
or
push
ds
and
jecxz
adc
mov
out
xchg
mov
push
ja
icebp
jae
je
and
insl
mov
push
mov
mov
lods
xlat
ljmp
aaa
push
jno
mov
xchg
dec
jns
adc
imul
mov
fdivl
call
jmp
loopne
ret
jl
ds
pop
test
ret
mov
sbb
adc
insl
mov
js
shrb
scas
push
call
push
push
shrl
hlt
rcrl
pusha
daa
aas
mov
xorb
in
inc
add
mov
popl
int3
xor
je
dec
mov
inc
iret
mov
data16
mov
test
mov
sbbb
pushf
mov
add
scas
movsl
inc
sub
fmull
clc
mov
inc
arpl
pop
pusha
aaa
cmc
movsb
mov
mov
jo
gs
fmuls
jmp
and
adc
mov
cmp
loop
iret
lods
add
sbb
pop
add
jno
push
nop
cmp
mov
test
cmc
jo
xor
lret
test
loopne
or
pusha
jbe
addb
and
stos
cmp
add
mov
cwtl
les
sub
movsl
mov
mov
cmp
or
in
push
scas
add
lods
pop
pop
adcb
push
arpl
jp
push
sahf
push
jnp
or
rorb
lock
sbb
adc
mov
fdivs
and
pop
adc
push
ljmp
mov
add
mov
aaa
lods
pushf
jmp
pop
cwtl
fs
push
pop
outsb
enter
loopne
fldl
add
and
sbb
mov
sub
push
push
bound
pushf
fldt
pop
or
pop
jle
lock
sbb
cmpsl
fmul
popa
iret
loopne
mov
jmp
jp
movsl
and
add
mov
lock
fldenv
testb
jmp
es
shl
or
addb
imul
xchg
imul
nop
shlb
loope
ret
pusha
cmp
sub
cmp
and
sbb
rclb
dec
push
mov
cmpxchg
inc
xor
lock
and
jnp
pusha
xchg
inc
push
int
popa
mov
out
stos
inc
ljmp
arpl
mov
sub
sbb
or
inc
aas
pop
insb
inc
popf
out
adcl
punpckldq
or
loop
or
dec
sar
pop
out
hlt
imul
sub
cmp
lock
jno
xchg
aad
or
das
and
rolb
mov
aam
pop
stos
and
cmp
ja
jl
loopne
loope
pusha
and
inc
mov
or
out
inc
push
lock
out
jo
repz
cmp
filds
out
scas
cli
and
and
push
cs
xchg
mov
add
les
loope
or
pop
pop
ret
ja
push
or
psllw
dec
lods
jecxz
fsubr
rorb
add
xchg
out
mov
and
lret
popa
movsb
dec
shlb
aaa
or
pushl
add
jecxz
mov
out
or
out
cmp
xchg
sbb
movsb
xchg
pop
imul
add
pop
jae
lock
fs
cmpl
cmp
subb
inc
cmpsl
pop
mov
push
ds
std
jmp
pop
pop
cmp
xor
mov
ds
movsl
add
sub
inc
add
gs
iret
std
fldt
push
orl
sbb
nop
mov
push
add
data16
mov
fs
add
lods
mov
adc
loope
jae
push
and
mov
or
sbb
scas
jp
sub
rorb
add
mov
dec
inc
arpl
lods
jmp
dec
adc
jnp
adc
int3
and
add
add
sub
lods
mov
loopne
xchg
xchg
xchg
add
xchg
sub
dec
fisubs
sahf
fcmovbe
ret
fs
sub
or
int
mov
aam
jae
loop
mov
loope
pusha
shl
rclb
add
loope
scas
push
add
jge
mov
rol
dec
ret
mov
cmp
sub
adc
jb
testl
enter
dec
push
pop
mov
mov
pusha
arpl
jp
icebp
or
or
jge
leave
iret
inc
sbb
mov
cli
sub
mov
int3
jle
push
xor
xor
pop
out
and
test
rolb
mov
loopne,pt
or
cmp
mov
adc
cmp
sbbl
aaa
fmull
lods
xor
inc
das
mov
dec
mov
adc
sub
xor
and
push
sub
ss
ret
cmp
hlt
das
arpl
jg
push
jmp
outsb
rorb
lret
jo
push
js
mov
sbb
sub
movb
jmp
dec
icebp
loop
sub
sub
das
jne
or
icebp
pop
push
cmc
inc
jb
push
inc
clc
call
mov
je
movsb
ljmp
push
jo
in
int3
test
add
rorb
adc
add
push
scas
mov
lahf
jb
pop
xor
ret
inc
inc
cmpsb
jno
fs
call
pop
pop
movsb
call
mov
icebp
scas
insb
sbb
shl
push
push
push
cmp
movsl
daa
push
cmpsl
aas
rolb
and
xchg
data16
adc
out
popa
push
mov
fstps
push
test
xchg
lcall
loope
loopne
adc
inc
enter
pop
adc
xor
dec
mov
mov
std
dec
or
jmp
loope
jge
aam
arpl
adc
rclb
xor
mov
aas
leave
lock
adc
mov
xor
data16
mov
cmp
pop
scas
sarb
rcl
cmp
les
push
or
pop
sub
jp
pop
call
lds
xchg
mov
xchg
mov
add
mov
mov
adc
jae
jge
add
icebp
pop
lods
in
or
mov
fisttps
comiss
jo
aas
xchg
adc
pop
mov
cld
xor
aam
pop
test
into
test
mov
pop
flds
mov
lret
add
jbe
mov
cmpsl
push
shrl
sahf
cli
xor
or
test
int
ja
and
adc
add
add
pop
adc
lret
xchg
movl
mov
lea
sub
loope
loope
dec
mov
inc
sub
mov
fwait
movsl
into
scas
xlat
dec
jp
jle
dec
or
fiadds
insl
lea
inc
js
mov
adcb
fs
xor
mov
clc
dec
lods
pop
mov
mov
adcb
fsubrl
push
dec
outsb
hlt
sbb
mov
enter
outsl
sub
sbb
xor
pop
cmp
dec
xor
mov
add
adc
sar
sahf
push
out
ret
mov
ljmp
ljmp
ljmp
push
testb
mov
mov
cmpsb
imul
inc
mov
fcomps
dec
outsb
in
fs
popa
adc
adc
sub
mov
ds
jl
xor
mov
pop
fs
mov
adc
mov
pop
negb
inc
pop
cwtl
ljmp
xchg
in
mov
push
push
cmpsl
mov
or
out
repnz
pushf
or
xlat
fistps
sbb
or
mov
test
std
mov
push
stos
add
jecxz
mov
and
ficompl
and
lock
cmpb
push
lods
sbb
leave
stos
gs
fst
mov
aam
pushf
outsb
add
sub
and
inc
mov
vgetmantps
rcrl
mov
fcoms
mov
mov
cld
mov
mov
mov
fisubrl
int
rol
ja
sub
xchg
clc
repz
lret
test
pop
in
adc
shl
add
stc
into
fdivrl
jp
shlb
loope
xor
inc
xor
std
and
inc
lods
mov
jbe
or
loopne
mov
cmp
add
xchg
hlt
jl
lret
out
mov
push
nop
push
cmc
or
repz
dec
inc
mov
loop
xor
rolb
loop
mov
iret
mov
or
cmp
scas
lahf
nop
pop
aaa
add
xor
arpl
ds
popa
add
ss
mov
push
fidivrs
mov
imul
push
xor
jns
xchg
call
lcall
lods
or
sub
aaa
mov
arpl
xor
mov
pushf
inc
cmp
sbb
inc
or
dec
inc
xchg
jb
test
inc
mov
xor
cwtl
sti
sbb
cld
cmpl
push
and
orl
outsb
or
adc
je
stc
push
add
shlb
push
movb
es
cmc
daa
mov
fdivr
clc
jmp
sti
pop
adc
mov
mov
popf
orb
js
mov
cwtl
fwait
pusha
jg
std
inc
mov
sub
icebp
adc
add
test
add
mov
push
and
sbb
mov
xor
xorl
cltd
out
push
jb
xlat
js
xor
add
call
jl
movsb
int3
je
fdivrl
popa
orb
std
mov
adc
dec
call
movsl
frstor
stos
mov
cmc
or
xchg
ss
stos
test
add
xchg
negb
mov
dec
or
xor
xor
pop
rcrb
mov
mov
lock
push
addb
cmpl
add
add
lods
xchg
push
add
dec
mov
jl
aaa
jge
jle
or
mov
popa
popa
jo
xchg
pushf
movsb
mov
in
pusha
mov
fldl
stos
inc
arpl
jge
push
sbb
mov
stos
pop
shl
push
vsubsd
mov
sbb
add
mov
mov
lcall
add
mov
dec
dec
mov
ljmp
loop
in
loopne
test
push
stos
adc
sahf
dec
adc
jp
icebp
ljmp
jns
push
nop
sbb
jmp
mov
adc
ret
mov
out
sub
dec
out
divl
lds
shll
xor
mov
lds
in
and
aam
cmp
jnp
sbb
sbb
mov
shlb
mov
aaa
mov
jo
out
aad
cmp
test
scas
sahf
cmp
add
jg
xchg
scas
sahf
add
push
scas
xlat
aaa
xchg
outsb
push
std
push
push
inc
jbe
cmp
ss
outsl
cmpl
jg
push
outsb
adc
scas
aas
mov
cmp
xor
in
in
in
push
lcall
cmc
fneni(8087
test
cmp
dec
push
subb
decl
sar
addl
pusha
xor
mov
pop
cmp
ret
or
jmp
jne
lds
scas
cltd
add
pop
xorl
movsl
dec
inc
or
sbb
pop
xchg
mov
pop
outsl
dec
clc
loope
lcall
dec
adc
bound
cld
xchg
mov
aam
xor
int
push
add
inc
push
scas
or
xchg
xor
inc
cwtl
divb
mov
pop
iret
aaa
jbe
fiadds
add
roll
xchg
shrb
ret
mov
add
gs
pop
shlb
cmp
mov
push
test
call
push
mov
jns
cltd
mov
pushl
test
add
add
out
lds
andl
add
adc
rclb
jnp
jge
dec
scas
stos
dec
push
xor
mov
shlb
add
add
mov
dec
mov
lods
loop
pusha
inc
cli
cmpsl
stos
mov
orb
shr
jnp
mov
pop
cmp
movsb
rorb
mov
int3
cltd
ds
adcb
outsb
aam
inc
mov
inc
mov
jbe
add
addr16
ljmp
or
das
popf
adc
jb
aam
add
loope
in
mov
jle
hlt
push
jg
repz
adc
popa
and
fwait
dec
xchg
push
lods
lock
es
lahf
lcall
insl
xchg
adc
clc
gs
in
js
jno
cwtl
sub
fisttpl
pop
xor
and
test
aaa
std
or
adc
out
aas
sub
xchg
adc
lods
jb
push
popf
in
rcl
in
mov
push
cmpl
loop
and
add
nop
adc
inc
sub
add
mov
sbb
scas
jecxz
inc
inc
xchg
fildll
mov
adc
mov
leave
aaa
xchg
mov
pop
mov
int
mov
rolb
insb
inc
sub
cmp
xor
dec
push
fiadds
xchg
loop
rorl
mov
or
mov
push
cmc
adc
push
aad
mov
leave
cmp
xor
or
mov
pop
xchg
rorl
aam
lods
mov
push
mov
bound
in
mov
ljmp
subb
call
out
movsl
aam
ljmp
dec
pop
jno
ja
aaa
out
add
pop
div
sub
insl
call
pushf
inc
push
call
jp
inc
sbb
out
and
aas
cmc
loopne
push
pop
loop
scas
pop
popf
jno
xor
imull
ljmp
jnp
mov
mov
pushf
xchg
icebp
or
fdivr
jne
pop
mov
movsb
outsl
cmp
mov
jp
add
stc
sti
and
cmpb
xor
push
addl
fcoml
jbe
mov
dec
fnsave
lock
cltd
mul
jg
fcoms
sbb
jecxz
pop
inc
sbb
nop
mov
jb
cmp
sub
movsl
xchg
ja
xchg
popa
imul
outsb
add
testl
xchg
pop
push
push
mov
pop
or
repz
daa
mov
shlb
adc
rolb
lods
rcrl
cmp
pop
shr
adc
loopne
jge
or
into
lods
xor
jbe
sbb
insb
xchg
push
shlb
imul
ss
fsubl
test
inc
push
sbb
bound
outsb
int3
sbb
aas
pushf
in
lea
lea
jmp
rcrb
jae
je
pop
cmp
dec
jp
mov
lret
push
je
jmp
sub
mov
pop
scas
inc
out
nop
sbb
bound
lret
ljmp
push
inc
cwtl
cmp
push
pop
sub
push
jle
ljmp
mov
jl
sub
dec
insb
and
jmp
fimull
jns
ds
dec
xchg
push
test
pop
cmp
xor
xchg
lahf
je
loopne
or
xlat
insb
mov
cmpb
cli
push
adc
rcrb
xor
clc
scas
sub
and
out
test
mov
jo
fidivs
call
add
xor
xor
pop
inc
das
call
or
jle
mov
hlt
movsl
xchg
pop
add
ficomps
jecxz
pop
mov
mov
xor
lret
paddd
js
xor
push
test
repnz
pop
mov
es
inc
mov
rolb
push
inc
push
loope
stos
lock
cld
dec
sbbb
xchg
mov
cmp
push
xor
xchg
push
ds
out
repnz
jecxz
je
out
sbb
sti
ss
lea
mov
loope
and
femms
lock
jecxz
add
pop
jp
cli
stos
add
cmp
call
pop
lods
cmp
cmc
mov
jno
sbb
pop
pop
lock
jle
clc
fwait
in
ffreep
or
and
adc
ret
mov
ret
xor
push
enter
xchg
and
lods
call
and
je
add
adc
scas
fcomp
jnp
xchg
or
leave
lds
cli
or
dec
mov
sub
out
mov
fwait
xor
lds
movzbl
sbb
add
sub
aam
mov
mov
ja
je
sub
in
lret
ljmp
mov
sbb
mov
call
dec
mov
mov
adc
jbe
sbb
xor
leave
dec
scas
xchg
out
add
push
jg
popf
mov
or
stos
lock
stos
ljmp
call
lods
mov
sub
mov
xchg
scas
fs
in
iret
add
fcompl
leave
and
jnp
loopne
push
stos
pusha
jmp
pop
xor
push
xchg
jb
nop
fidivrl
push
je
test
mov
sub
jle
or
mov
jg
cs
jle
mov
enter
fiaddl
jl
shlb
icebp
cmp
test
sbb
push
push
cmpb
mov
into
dec
movsb
lahf
jne
adc
out
imul
rorb
inc
cs
pushf
push
fcmovne
aaa
and
into
add
jl
fadd
xchg
xor
jae
dec
aad
leave
xchg
cmpsb
sub
or
jo
sbb
enter
andl
add
mov
ss
add
mov
jae
lcall
fwait
mov
xor
cmc
sub
cmp
subb
jg
out
add
cmc
or
pusha
jl
je
loope
adc
sarb
mov
pop
sbb
mov
mov
or
out
faddl
out
out
pusha
mov
or
and
cmpsb
enter
ret
nop
pushf
inc
mov
sahf
push
scas
clc
fistpll
xor
stos
adc
leave
mov
push
push
nop
sbb
jge
pop
sbb
pop
addl
mov
cmc
mov
dec
rolb
icebp
dec
push
sbb
loopne
stos
call
lret
add
mov
repz
mov
aad
cmp
popa
and
push
adc
add
jbe
outsb
lock
mov
add
roll
insl
cmpsl
sahf
fs
cmp
std
xor
or
ret
inc
lret
aad
add
jb
repnz
test
ljmp
xorb
or
jp
and
test
in
inc
sbb
jbe
sahf
fidivrl
mov
cmp
add
lods
sbb
ret
pop
pop
imul
cmovbe
pextrw
add
lds
add
icebp
stc
sub
xchg
int3
mov
testb
inc
inc
inc
int3
sti
das
gs
movsl
daa
enter
and
fdivl
and
push
ljmp
mov
push
xchg
and
test
inc
out
cld
push
cmp
test
es
lret
loopne
stos
and
fdivl
xchg
test
cmp
fdivs
loopne
sbb
sti
or
aaa
ret
adc
aam
add
add
mov
dec
mov
test
fnstenv
pushf
and
xchg
and
stos
test
mov
cmc
pop
add
es
shrb
add
push
and
daa
jmp
add
out
clc
sbb
dec
scas
pop
sub
sarl
sbb
or
inc
inc
test
loopne
and
rclb
or
fwait
test
xchg
fstpt
out
mov
adc
xor
mov
int3
pushf
push
or
push
mov
adc
fnstsw
es
or
lods
imul
icebp
shll
ret
dec
loop
inc
cmpb
lcall
xchg
or
movl
xchg
fisttps
unpcklps
push
ret
mov
add
pop
jb
nop
and
jmp
push
test
xor
les
and
dec
fidivrl
sbbl
insb
into
sub
js
ret
into
cmpsb
in
pusha
xor
enter
inc
pop
std
loopne
je
dec
out
pop
nop
out
push
aad
or
push
inc
out
add
mov
es
sbb
adc
or
lds
rcrl
dec
and
lret
mov
adc
adc
xor
mov
icebp
out
cmp
fucom
sbb
outsb
in
imul
pop
mov
rcr
test
idiv
aaa
mov
mov
add
std
loopne
in
and
movsb
rorl
stos
sub
xor
sbb
mov
popf
jecxz
insb
sbb
int
pop
cwtl
inc
jne
jns
pop
jb
or
ss
jne
cli
ret
inc
mov
mov
jg
add
mov
and
inc
lahf
dec
sub
es
rol
xlat
inc
outsl
stos
insl
or
mov
and
pop
dec
adc
shr
and
pop
or
lds
ds
and
pop
cmp
xchg
in
xchg
adc
mov
xchg
xchg
loope
jo
push
xor
outsb
adc
scas
call
inc
stc
or
cmp
cld
incb
jg
add
incb
pop
call
imul
daa
mov
push
cwtl
push
ds
lcall
iret
add
pop
sbb
mov
fiaddl
cs
jecxz
lret
lahf
or
lahf
scas
push
rcrb
adc
xchg
ficomps
addb
fs
mov
repnz
loopne
inc
daa
mov
js
imul
inc
xchg
lods
adc
adc
fadds
lcall
pusha
mov
fcompl
dec
jo
stos
adc
pop
sub
sub
xor
push
nop
add
xor
mov
adc
jl
jle
pop
sub
cwtl
mov
and
cwtl
insb
inc
adc
std
xor
fldenv
push
push
pop
data16
sub
es
push
xor
or
jp
push
enter
inc
jge
jle
and
sarb
cmp
mov
jb
lock
add
cmpb
mov
pop
inc
add
pusha
pop
push
es
jns
mov
ret
mov
push
outsb
enter
jo
es
push
test
xchg
inc
cmpsb
popa
loopne
pushf
outsl
test
dec
dec
lea
repnz
stos
push
fdiv
inc
stos
scas
daa
aam
cmp
push
lods
lock
xchg
mov
lahf
or
loopne
hlt
ja
xor
enter
out
adc
and
js
inc
push
push
outsl
add
sbb
call
dec
inc
dec
pop
ret
fwait
mov
data16
das
dec
xlat
shlb
cltd
repnz
arpl
and
add
push
rcrb
fldt
push
xor
and
xchg
adc
lock
dec
lcall
and
mov
cld
shlb
jl
sbb
push
sbb
aaa
int3
cmpsb
sub
cmpsl
lods
lahf
inc
jno
adc
sbb
mov
ss
dec
dec
push
add
addr16
setnp
add
imul
outsl
out
lock
stc
push
add
lret
ja
sti
adc
inc
ror
fnclex
adc
mov
xorl
dec
jmp
sbb
into
fidivl
sbb
mov
adcb
dec
insb
inc
ret
clc
mov
pop
in
cli
or
in
test
sbbb
outsb
inc
fisttpll
mov
leave
cld
stos
dec
cli
out
cmpsb
pop
lock
mov
add
mov
mov
sbb
xchg
lods
daa
fildll
xor
mov
test
cmp
dec
cld
mov
pop
jg
xchg
fldl
lock
fimuls
sbb
fadd
fsubr
outsl
mov
mov
pop
arpl
xor
rolb
mov
js
push
std
jge
ret
xchg
inc
cmp
call
inc
fcmovnbe
pushf
sbb
cmp
jmp
mov
and
loopne
movsb
push
dec
push
div
mov
jne
repz
loop
hlt
inc
pop
jmp
cmc
jmp
mov
xorl
mov
cld
out
cmp
lahf
or
mov
xchg
add
shl
mov
std
or
cltd
shrb
mov
pop
or
adc
addr16
pop
xchg
push
fmuls
clc
jno
fisubl
lar
jle
and
nop
sbb
sbbl
dec
or
adc
lcall
mov
jl
jmp
inc
out
xor
xchg
and
pop
rcrl
fsubrs
dec
mov
inc
lock
xor
xor
lret
adc
or
sbbl
jnp
ret
jo
pop
hlt
in
or
push
in
movsl
xchg
sbbl
jno
loop
das
mov
dec
sub
sub
pop
daa
jo
mov
mov
jnp
clc
add
mov
pop
xchg
adc
dec
mov
movsb
add
push
les
adc
jmp
adc
cmp
adc
adc
inc
xchg
fwait
xchg
lock
lock
ss
ret
rolb
aas
xor
ljmp
subb
sub
test
xchg
jae
or
call
fsubr
orl
inc
ljmp
shrl
mov
aad
clc
sub
and
add
and
adc
ror
int
test
mov
pop
mov
int3
mov
out
nop
push
sahf
aam
mov
mov
add
popa
ljmp
fdivs
fmull
xor
xor
cmp
in
movsb
inc
xchg
dec
aad
cmp
jmp
or
decb
adc
and
pop
dec
push
add
test
sub
daa
or
jl
add
shll
xor
dec
ljmp
fnstcw
lods
add
add
jl
mov
jbe
out
jae
cmpb
inc
pop
dec
ljmp
fcmove
add
mov
jp
std
test
shr
add
mov
stc
sub
pusha
push
dec
popa
push
or
sbb
fucomip
adc
js
pop
frstor
ret
hlt
jno
and
sbb
cmpsb
movsl
jbe
ret
push
rol
cmp
add
push
ss
jbe
cli
inc
mov
mov
push
inc
cld
sub
shll
test
mov
cmp
outsl
cs
sub
cmp
push
inc
gs
pop
cmp
or
insb
es
lods
and
jle
mul
xlat
mov
mov
aad
lss
xchg
jle
push
stos
pusha
testl
xchg
and
movsb
aam
arpl
cld
cwtl
pop
mov
out
xchg
push
jbe
sub
jno
mov
movsl
ds
js
lahf
add
pop
addr16
decb
sub
inc
in
nop
int3
popa
stos
gs
sar
adc
jmp
mov
js
out
and
add
cmp
fadds
inc
lds
xchg
mov
fdivrs
ret
xor
jl
ret
dec
jg
dec
or
push
js
mov
stos
or
mov
movsb
orb
addr16
call
pop
sbb
cmpsb
lds
xchg
je
inc
mov
cld
mov
xchg
inc
add
lds
rorb
or
aas
lock
pop
mov
xchg
pushf
mov
lods
daa
cmp
pop
mov
clc
aas
mov
mov
cmp
fmul
cmc
mov
and
and
jmp
sti
inc
out
xchg
add
pop
mov
pop
pop
xchg
mov
sbb
in
adc
sub
mov
test
fwait
or
pop
int3
add
out
nop
cmp
movsb
xchg
mov
xor
in
and
push
mov
clc
inc
out
xchg
add
or
push
inc
fdivl
push
pusha
cmp
or
pop
sahf
incb
or
repz
jecxz
mov
aas
mov
push
insb
stc
fcmovbe
les
ret
push
bnd
mov
lock
repz
outsb
sub
push
inc
pop
fdivrs
pusha
sub
pop
nop
add
out
pop
jmp
dec
or
ret
add
push
loopne
cld
xor
mov
or
mov
xchg
jo
leave
pop
or
push
imul
mov
je
getsec
jbe
push
hlt
push
out
clc
inc
lcall
loope
xorb
pop
insb
cld
cld
add
adc
loope
cmp
ja
jne
out
outsb
ljmp
std
sbb
mov
xchg
push
gs
xchg
sbb
xor
jge
mov
pop
cli
pusha
jns
add
add
ficoml
loopne
mov
sub
mov
cwtl
inc
lahf
sub
aas
adc
arpl
or
popf
mov
stos
inc
adcl
test
lods
or
push
pop
popf
mov
movsb
je
push
int
pop
sarl
sbb
popl
mov
js
ds
pop
mov
cs
push
or
dec
jbe
stos
cmc
inc
xor
mov
pxor
lods
push
sub
and
iret
sub
add
push
lock
sub
push
and
pusha
lock
xor
xor
push
test
cwtl
shl
jle
mov
adc
push
inc
stos
rcr
cmp
and
call
mov
orl
pop
push
aas
sahf
sub
cmp
push
rclb
loop
loopne
and
loope
push
mov
lcall
les
inc
lds
push
mov
mov
mov
mov
push
gs
sbb
sub
push
pop
fstps
jecxz
jecxz
mov
sahf
pushf
lcall
mov
pusha
leave
xor
add
lcall
enter
dec
outsl
imul
test
aas
ret
push
data16
sbb
cmpsl
sub
insb
cltd
inc
shll
out
push
cwtl
xchg
sbb
add
fimuls
int
inc
dec
imul
out
ljmp
outsl
stc
into
jl
popl
jne
mov
cmp
sbb
aad
mov
rclb
in
pop
mov
shlb
orb
pop
xchg
jae
pop
mov
leave
out
inc
and
fnstcw
lods
popa
cmp
or
andl
add
js
pusha
and
push
mov
and
dec
mov
das
mov
rcll
jo
mov
aas
aaa
stos
mov
fmuls
or
jmp
aad
inc
dec
xchg
and
sti
cmc
and
lods
lds
sbb
rorb
pmullw
or
cmp
lock
mov
popa
add
inc
xor
scas
mov
jge
xor
add
jge
lods
fstpl
cs
xor
add
push
into
inc
sbb
mov
test
bnd
cld
xor
cmp
push
addb
stos
dec
out
lock
mov
cs
outsb
jmp
or
adc
and
lcall
scas
out
adcb
push
outsl
mov
cmp
repz
inc
push
xor
aam
shlb
in
pop
std
pop
das
daa
movsl
or
add
mov
pop
hlt
cmp
pushf
fdivr
push
pushf
inc
push
scas
sbb
nop
jle
rcrb
push
push
add
aad
repnz
scas
mov
mov
push
sbbl
popa
rcll
add
add
cmpl
repz
push
jg
inc
jmp
mov
sahf
mov
jne
leave
mov
pop
ret
loop
xchg
mov
fimull
adc
mov
movsl
bound
cmc
adc
mov
push
bound
adc
cmp
adcb
mov
xor
shll
push
sbb
rol
xchg
rcrl
push
xchg
xchg
in
out
int
cmpsl
xor
push
cwtl
test
add
or
push
lcall
adc
cmp
fwait
dec
or
test
and
pop
jmp
iret
jge
es
jo
jo
jg
adc
push
push
repz
xor
add
push
cmp
mov
sti
xchg
lds
sbb
xor
test
sub
adc
rclb
ret
addr16
popa
aas
sub
addb
inc
int3
mov
sub
pop
addb
or
pusha
in
jne
sub
xchg
cmp
add
inc
jbe
mov
sbb
lahf
cld
inc
xchg
mov
xchg
ror
xchg
das
jmp
xchg
iret
aas
sub
outsb
and
or
and
xchg
jecxz
xchg
pcmpeqd
and
lret
adc
int3
std
imul
dec
test
scas
mov
jo
hlt
mov
lea
rorl
lods
pop
test
mov
adc
cmp
movsl
mov
in
ja
mov
and
sub
or
in
jno
add
sub
inc
cmpb
shrb
arpl
insl
or
loopne
imul
adc
aaa
into
idivl
cmp
fldenv
cwtl
and
imul
popl
imul
pop
ljmp
in
int
nop
jp
fwait
aas
call
xchg
jns
xlat
push
cmp
mov
das
stc
and
lds
mov
test
mov
push
cwtl
imul
fdivrp
pop
and
lock
add
test
in
loope
dec
or
scas
add
adc
push
fcmovnbe
lds
adc
push
jmp
or
inc
sub
cwtl
lret
into
js
jo
cwtl
mov
pop
adc
mov
xor
sub
xorl
stos
push
je
xchg
mov
mov
mov
push
in
sbbb
stc
or
dec
lods
mov
dec
ja
add
mov
leave
xchg
and
stc
sbb
sub
jecxz
ja
add
roll
mov
adc
leave
mov
inc
push
pop
movsb
mov
rcrl
loope
repnz
jae
sub
cltd
sbb
xchg
mov
jb
xor
push
orb
sbb
dec
jg
fsub
int3
pop
adc
and
insl
jecxz
xchg
jo
cmp
push
add
daa
sbb
cmp
add
fs
and
fistpl
jno
hlt
test
add
mov
ror
and
insl
cli
xor
sbb
pop
and
aad
fildl
xchg
ja
iret
lcall
imul
push
lahf
test
loope
xor
leave
sbb
popa
adc
jno
call
sub
or
sub
enter
jge
fisttpl
icebp
mov
ror
pop
call
imul
pop
xor
mov
sub
mov
sahf
movsb
repnz
int
out
push
inc
ret
imul
out
movsb
xchg
nop
push
sbb
cmp
mov
xor
jle
stos
cld
sub
sbb
fcoms
pop
sbb
movntps
push
ja
aaa
scas
pop
push
cmp
stc
incb
jp
call
outsl
fcoms
flds
add
sbb
gs
cs
mov
or
mov
loope
loope
les
and
pop
in
loope
cld
add
pop
fisttpl
sbb
add
pop
push
dec
push
js
int3
repnz
add
mov
js
push
mov
sbb
movsl
mov
ret
rclb
mov
in
xchg
aas
sbb
sbb
fisubl
sub
sub
cmp
test
inc
repz
inc
add
cmp
dec
sub
cld
pushl
dec
xor
loopne
bound
push
adc
or
or
hlt
ljmp
push
xor
mov
dec
dec
or
sbb
in
jb
repz
adc
cmpsb
push
push
push
jle
incb
push
mov
data16
add
dec
push
sbb
scas
xchg
test
sub
adc
std
xchg
add
inc
push
lods
push
in
icebp
xchg
lret
cld
jno
xchg
mov
fwait
out
adc
mov
sub
dec
ljmp
inc
sbb
push
loope
std
fs
test
or
adc
push
mov
jne
jne
mov
stos
fwait
pop
pop
mov
orb
enter
and
rclb
inc
adc
pushf
add
pop
dec
sbb
dec
outsl
xor
mov
shrb
mov
fisubs
pop
inc
loop
in
add
xor
test
inc
in
add
jb
push
or
mov
push
packssdw
xor
data16
push
cmp
in
mov
xor
mov
test
push
sub
movsl
lock
mov
pop
outsb
jge
cmpb
insl
js
dec
push
mov
xor
mov
lods
jnp
popf
adc
div
xchg
or
jp
ja
sub
pop
das
dec
clc
out
out
xor
pusha
mov
jns
clc
sti
cmc
out
shll
pop
and
pushf
loop
mov
or
in
sub
subl
dec
data16
or
push
incl
in
testb
into
and
and
sbb
lcall
or
pop
and
mov
clc
inc
cmp
pop
aas
inc
popf
enter
adc
pop
push
push
pop
push
stc
das
inc
mov
fs
add
nop
add
faddl
test
xchg
stos
sbb
mov
adcl
in
sub
test
or
add
cmp
addr16
ds
push
bnd
sbb
loopne
outsl
xchg
push
dec
or
sub
lock
cs
into
lds
in
adc
call
pop
stos
es
scas
sbb
and
mov
cmp
loop
cmc
sub
pop
into
sub
mov
push
outsb
xor
jecxz
inc
mov
adc
fmull
jbe
mov
outsb
int3
push
jo
jmp
aam
imul
iret
pop
xchg
or
incl
xchg
incl
mov
push
cmpsl
cmpsl
shr
divb
jo
pop
repz
sbb
dec
jno
sub
xor
lcall
xor
call
mov
pop
out
add
pop
jbe
andl
mov
adc
imul
dec
xchg
js
popa
andb
clc
jmp
ds
inc
ret
and
inc
ret
adc
mov
adc
ljmp
arpl
fsts
push
inc
rep
pushf
cli
sar
fists
inc
mov
adc
clc
dec
mov
les
lret
incl
lcall
test
cmpb
lods
sub
add
dec
movsl
push
lock
jecxz
and
outsb
add
xchg
or
movsl
or
decb
xlat
xor
push
pushf
cmp
push
pop
scas
push
pop
mov
adc
int3
test
lds
sarb
and
cmpsb
dec
sahf
dec
ror
push
xlat
jg
jl
iret
ffreep
add
les
jge
add
pusha
cwtl
icebp
decb
jg
fdivr
cwtl
jl
cmovb
and
rorl
orl
rolb
jo
cmp
cmpsl
dec
jle
ljmp
or
xchg
push
ljmp
in
mov
stos
addr16
mov
fs
insl
or
push
jbe
mov
adc
addr16
sbb
movsl
adc
jo
inc
imul
ds
pop
mov
mov
xchg
pop
or
daa
mov
push
aaa
pusha
mov
pop
shlb
mov
mov
lahf
sbb
leave
mov
jne
aam
pop
std
or
jo
or
jae
movsb
inc
cmp
ss
adc
and
inc
mov
inc
jl
mov
data16
lret
sahf
cmc
test
and
call
mov
roll
xchg
bound
push
stos
lret
mov
enter
cld
mov
push
negb
lret
scas
push
mov
movsl
mov
ja
xor
in
push
sub
sbb
lods
dec
cmp
push
pusha
fisttps
js
loopne
ret
andb
mov
call
jle
enter
lahf
aaa
push
pop
in
push
sbb
cmp
push
ret
sti
jbe
xor
or
fldl
clc
ret
push
xor
insb
clc
and
hlt
cld
pushf
ret
mov
sub
in
pusha
xchg
or
std
or
int
mov
or
lds
add
hlt
stos
loopne
jo
div
add
addr16
pop
jle
leave
xchg
adc
pop
test
ljmp
sub
mov
add
daa
ds
loopne
mov
pop
test
jl
and
pop
out
sbb
icebp
cmc
aad
pop
jmp
arpl
notl
dec
std
mov
pushl
adc
adc
cltd
lock
iret
cmpsb
rclb
sub
aas
mov
adc
sbb
imul
clc
lcall
ljmp
inc
mov
cltd
or
cvtps2pd
mov
sbb
repnz
xorb
test
push
lods
inc
xchg
jo
jl
and
ss
pop
or
cmpsb
lahf
mov
mov
pop
or
adc
xchg
mov
dec
inc
dec
test
and
add
scas
fists
mov
push
sbb
xor
ds
mov
data16
jbe
cli
pusha
sub
insl
ret
or
hlt
lret
pop
xor
in
clc
loop
loopne
inc
mov
cmp
lahf
dec
sbb
scas
jo
nop
and
sbb
inc
scas
movsb
add
mov
rolb
gs
in
arpl
mov
xchg
jb
into
push
xchg
sti
or
les
jbe
sbb
ljmp
xchg
pop
rol
inc
pop
or
mov
jno
jecxz
jecxz
jbe
andl
add
pop
jp
xor
loop
ljmp
pop
lea
pop
rclb
insl
arpl
inc
mov
aas
mov
cmp
ljmp
sub
mov
push
mov
mov
test
pop
int
jmp
iret
lea
jo
pop
mov
out
mov
mov
in
sub
rorb
pop
pushf
out
xchg
push
pop
lock
cmp
mov
xchg
sbb
and
inc
fs
pop
push
in
ljmp
orb
lcall
mov
push
sub
or
inc
sbb
cs
inc
sbb
fwait
inc
mov
cmp
add
inc
cmp
lret
fmull
xchg
mov
mov
or
mov
push
add
xlat
in
in
mov
inc
or
sahf
dec
jns
call
mov
xlat
sbb
mov
ljmp
mov
dec
jb,pn
mov
enter
push
mov
adc
mov
mov
es
xor
loop
or
sub
push
subb
subl
ljmp
push
dec
mov
dec
popa
cmpsb
mov
push
jo
in
cli
xchg
xchg
sub
push
hlt
and
repz
fstpl
add
inc
sbbb
xchg
mov
xchg
jbe
rcrb
fucom
xchg
add
sub
mov
mov
pop
shrb
stos
aad
popf
jns
jl
lcall
push
xchg
dec
mov
cli
add
nop
and
and
loopne
imul
xor
push
mov
arpl
ljmp
test
in
add
pop
popa
shlb
pop
add
jno
cmc
xchg
mov
mov
mov
mov
inc
jae
push
add
sahf
and
movsb
test
fcmovb
pop
mov
icebp
dec
ret
mov
fldt
popf
mov
cmc
shlb
incl
scas
push
test
xchg
inc
adc
pop
call
xor
mov
inc
mov
pop
aaa
jp
cwtl
leave
mov
outsb
test
cmp
inc
cmp
xor
mov
sarb
nop
or
pusha
mov
sbb
in
xchg
fs
hlt
movsb
inc
faddl
push
jbe
sub
push
popa
push
ret
mov
fidivrs
hlt
jp
repz
add
jp
into
fdivr
mov
inc
ret
scas
lock
adc
add
in
aam
loopne
loopne
shl
scas
cltd
push
lods
push
sti
cmpsl
add
xchg
inc
push
fwait
adc
mov
lcall
lods
paddusw
push
bound
adc
mov
add
mov
fnsave
nopl
dec
fstpt
push
pop
shr
and
adc
adc
cld
xlat
js
fsts
cmp
shll
adc
xchg
stc
insl
rorl
pop
mov
out
rcr
ds
jecxz
push
test
lods
xchg
cmpl
sbb
movsl
cmpsl
xchg
ljmp
movl
adc
rcl
jns
sarb
mov
adc
dec
mov
jbe
pop
out
xchg
sbb
popf
in
add
or
pop
pop
mov
mov
test
sub
int
xchg
orl
inc
lods
push
pushf
inc
pop
jl
or
adc
cld
push
inc
daa
mov
cmpsb
xor
jae
fmull
adc
rcll
jno
out
sub
in
dec
push
ljmp
sbb
and
shlb
and
jg
lock
push
je
and
adc
pop
push
cwtl
add
lcall
lea
adc
sbb
add
adc
sbb
out
adc
and
or
sub
push
pop
setb
ret
fsub
or
mov
nop
lret
das
jbe
xor
mov
adc
push
fcoml
test
pop
enter
jo
outsb
xchg
and
dec
dec
ret
mov
arpl
jle
pop
cld
fmuls
push
es
es
push
fsubrs
sub
add
pop
ja
test
sti
push
or
adc
and
dec
cs
icebp
enter
inc
or
aas
add
push
sbb
in
ret
adc
pop
inc
iret
outsl
incl
arpl
das
rcrb
cmp
mov
mov
xor
pushf
pop
es
into
mov
pop
pusha
dec
mov
push
jle
cmpsb
ja
sbb
sarb
push
scas
inc
mov
aam
cmp
mov
dec
loope
inc
outsb
cld
movsl
cmc
out
shrb
mov
push
mov
push
add
popf
test
adc
mov
cmp
fsubs
int
dec
add
daa
cmp
cmp
pop
xor
repnz
into
or
test
scas
sub
das
mov
mov
mov
and
adc
ja
sbb
rolb
push
insb
sbb
dec
mov
push
push
aas
cmpb
data16
cmp
fwait
lock
or
clc
mov
push
or
push
rcrl
test
push
movsl
insb
adc
sub
daa
cmp
mov
mov
mov
and
mov
push
or
pop
int3
dec
sbb
aad
mov
divl
adc
or
push
ret
ljmp
loopne
push
and
test
inc
jbe
lods
mov
insl
into
mov
ljmp
stos
and
adc
ljmp
push
int
jl
xchg
ljmp
ret
add
push
dec
insb
sbb
pop
je
addb
lods
mov
add
and
icebp
pop
imul
cli
lret
les
mov
aaa
mov
popf
loopne
shl
pusha
fwait
ret
mov
adc
mov
push
ret
xchg
inc
adc
lods
xchg
pop
inc
inc
leave
cs
cli
inc
pop
pop
push
mov
fwait
inc
insl
scas
bts
xlat
cli
jle
in
lcall
lods
orl
pop
inc
cli
push
lock
shll
daa
fldl
sar
rcrb
es
insl
fsubs
aas
adc
shlb
push
shl
fisubrl
mov
fbld
call
xchg
outsl
xor
stos
test
fidivrs
cmp
clc
or
test
shlb
mov
inc
pop
mov
adc
sub
sarl
cmp
jbe
lock
pop
decl
adc
and
or
cmc
sbb
dec
adcl
add
jg
add
sar
sahf
mov
mov
imul
sbb
pop
adc
or
clc
or
push
and
pop
sub
mov
hlt
out
sbb
add
ret
mov
call
lds
sub
or
pop
xor
adc
mov
adcb
or
loop
enter
aas
or
xor
pusha
inc
or
testl
mov
insb
and
sbb
nop
call
fdivrs
jle
adc
in
data16
testb
push
pop
cltd
push
dec
xor
mov
roll
jg
mov
js
inc
add
mov
daa
jle
nop
mov
shlb
mov
fdivl
and
jecxz
add
mov
sbb
ficoml
in
loopne
popa
idivb
inc
push
fdivs
lret
lahf
imulb
cld
push
mov
in
adc
aaa
sbb
popa
add
ret
out
mov
inc
lcall
orl
mov
sbbb
loopne
inc
icebp
add
inc
in
test
mov
xchg
aam
and
jp
idivb
ljmp
or
fs
add
movsl
dec
mov
divb
xchg
cli
mov
repz
out
hlt
pop
inc
das
aaa
jmp
repz
xor
sub
push
jecxz
pop
je
dec
fs
enter
adc
sbb
and
lock
insb
adcl
or
mov
das
ss
pusha
mov
in
leave
dec
mov
mov
xor
inc
inc
inc
and
lcall
js
mov
push
fsubr
test
sub
push
clc
jp
mov
push
test
jle
sbb
shll
subl
mov
mov
cs
decl
call
loope
add
mov
push
jle
xor
inc
sbb
mov
mov
sbbl
aas
add
xor
push
sub
push
cmp
cmpsl
ljmp
inc
shl
and
cmp
cmp
stos
repz
js
adc
sub
ret
js
repz
test
or
push
nop
mov
add
cwtl
push
ret
mov
mov
or
cmpl
cltd
ljmp
cld
mov
cmp
inc
xor
scas
inc
inc
dec
jne,pt
loope
sub
sbb
and
push
out
xor
mov
cmc
js
dec
push
insb
outsl
add
xlat
sub
push
cwtl
data16
inc
and
shl
enter
sbb
in
aam
add
scas
jp
cld
xchg
mov
mov
and
add
sbb
pop
cmp
out
shlb
or
adc
and
scas
pop
add
sub
and
arpl
lret
dec
lea
dec
insb
push
or
test
or
inc
sbb
add
sbb
xor
push
mov
mov
lcall
hlt
sbb
jo
cld
mov
loopne
push
adc
jbe,pn
push
or
xor
sbb
lods
cltd
inc
fadds
shl
jnp
and
add
jbe
test
int3
dec
cmpsb
adc
mov
ret
divb
xchg
add
sbb
mov
js
pop
lods
fxch
xor
mov
push
notl
ljmp
nop
push
jns
insb
adc
daa
cmpb
push
fsubrl
bound
add
jbe
in
dec
push
lods
push
xchg
or
xor
xchg
pop
mov
push
rcl
sarb
sub
add
mov
or
or
mov
adc
test
mov
aaa
sar
xorb
lcall
stos
iret
out
cmp
dec
mov
push
mov
pop
xor
test
push
jnp
pop
pop
test
mov
je
jle
in
xchg
or
add
or
ljmp
add
inc
jmp
mov
jbe
cli
inc
hlt
adc
ds
xor
add
mov
sub
inc
mov
inc
imul
jl
repnz
or
jmp
test
mov
xchg
cmp
das
and
fdiv
rorb
imul
fisttpl
push
add
shlb
mov
andb
inc
mov
pop
mov
sahf
loop
stos
mov
loope
pop
jmp
stc
add
sbb
test
lcall
adc
push
aam
mov
stos
xor
mov
ret
daa
fmull
aaa
dec
movsb
sub
and
in
rclb
cmp
sub
push
js
fsubs
add
aaa
incl
lds
dec
cld
xacquire
repnz
add
shrb
mov
or
cmpsl
pop
push
jmp
or
daa
sub
or
lock
xchg
cmpsb
jmp
sbb
mov
push
insb
lea
mov
sbb
pop
jo
jnp
nop
push
sub
dec
pop
xchg
addr16
roll
push
lods
ficoms
adc
out
mov
inc
iret
stos
sar
les
mov
shll
pop
cmp
add
fwait
mov
adc
jle
out
je
shlb
push
fs
jb
shrl
add
xor
inc
adcl
pop
dec
arpl
stos
pop
pop
pop
idivl
inc
add
stc
mov
outsl
ret
loope
xor
jle
fs
jl
or
cmc
xchg
cmc
aas
xchg
addb
pop
mov
sub
inc
and
pushf
je
xchg
mov
dec
aam
inc
pop
mov
in
je
mov
jae
push
loope
clc
cmp
ret
xchg
paddsb
sbb
ret
mov
or
lret
das
add
nop
pop
add
and
clc
mov
mov
aad
fsubrp
jo
push
and
inc
and
in
xchg
push
cmp
ficomps
xor
sbb
mov
in
jle
lahf
shlb
imul
mov
lea
or
jo
pop
addb
rcl
sahf
js
sub
dec
into
sahf
dec
push
pop
jecxz
and
sub
in
adc
sbb
lds
clc
dec
add
xchg
aad
mov
dec
test
inc
or
jo
add
scas
and
xchg
movsl
out
jno
aad
hlt
fisubrs
push
mov
xchg
jp
or
push
lock
and
push
testb
inc
sbb
ss
rclb
jns
int3
mov
add
into
mov
sbb
jo
daa
fs
inc
jl
cld
dec
daa
or
bnd
loop
mov
adc
out
sti
loope
outsl
sahf
ds
sbb
test
lock
daa
adc
cmp
int3
adc
add
xchg
mov
hlt
sbb
or
and
push
adc
and
adc
sub
jno
rolb
loope
sub
mov
das
cmp
aam
sti
or
pop
rolb
mov
add
lds
loope
pop
mov
mov
sarb
mov
xchg
pop
mov
dec
outsb
mov
add
fildl
fdiv
pop
outsl
sub
push
mov
sahf
imul
or
and
add
rolb
stos
ret
imul
jg
xor
pop
dec
add
sub
or
dec
shr
mov
mov
loop
rcrb
in
jb
adcl
jmp
pop
add
xchg
int
aad
jp
lods
cmp
iret
sarb
jae
xchg
mov
jb
js
fstl
sub
inc
pop
fs
stos
fidivrl
xor
adc
scas
and
or
pushf
out
or
rcrl
dec
fdivs
jl
rcll
pop
inc
push
sbb
inc
mov
test
je
mov
mov
sbb
addr16
jo
lods
pop
in
mov
or
stc
lcall
xchg
push
pusha
das
cmc
add
sbb
xchg
push
pop
mov
add
sbb
pop
nop
jns,pt
out
sub
cmc
adc
sub
repnz
pop
insl
inc
push
pop
rolb
jnp
dec
scas
test
fdivr
or
rcl
pop
rolb
jg
sbbb
mov
fildl
push
jl
std
insl
xorb
adc
mov
ret
ret
xchg
inc
fsts
push
ret
cmpsb
repz
negl
dec
xchg
lret
enter
pop
push
aam
jp
lcall
pinsrw
pop
push
and
add
movsl
pop
pop
sub
fstpl
test
push
pop
mov
inc
dec
jmp
imull
fidivl
inc
xor
adc
or
sub
fs
mov
add
inc
sbb
clc
cltd
fisubrl
and
sub
imul
ja
xor
xor
test
and
idivb
js
or
cltd
push
inc
popa
and
pop
xchg
call
or
sbb
jo
mov
sbb
add
andb
dec
gs
xchg
mov
lret
pop
add
sbb
ljmp
adc
sub
sbb
cmpsb
push
and
imul
push
pop
test
push
lret
inc
adc
or
and
jecxz
orb
inc
or
jle
mov
lret
loop
loope
adc
add
pavgw
mov
add
or
rorb
das
mov
inc
xchg
mov
icebp
mov
cld
dec
add
add
je
in
push
jp
add
push
les
or
leave
scas
sub
add
icebp
nop
jne
ljmp
out
aam
xor
jmp
inc
xor
mov
icebp
sbb
out
out
mov
cmpsb
push
fcmove
lds
inc
cmp
mov
incl
sub
sahf
xchg
pop
movsl
pop
lea
mov
xchg
fiadds
test
mov
js,pn
bound
push
sub
lea
push
sbb
pusha
loopne
enter
mov
ss
mov
inc
and
rcrb
rorb
je
add
pop
mov
ds
mov
and
ss
push
cld
inc
clc
xlat
and
dec
adc
iret
lock
jns
in
mov
mov
mov
pop
pusha
add
mov
mov
lret
scas
out
jo
nop
dec
add
ret
call
push
lds
mov
jae
mov
rorb
dec
dec
fcoms
and
in
arpl
fstl
dec
add
push
mov
andl
in
jmp
in
cmpsl
or
ret
notb
push
inc
dec
test
pop
fstpl
pusha
add
or
mov
push
lret
or
fwait
int3
and
sbb
lods
sub
inc
jno
cli
push
or
inc
mov
mov
dec
mov
sub
outsl
dec
dec
push
xchg
xchg
out
call
test
mov
loopne
paddb
in
leave
inc
mov
ficoml
movsb
ficoml
inc
test
adc
fcomp
bound
sub
pushf
lahf
inc
popw
mov
in
into
jge
add
dec
out
sti
jb
loopne
jle
xor
fstpl
sbb
xor
outsb
rcrb
stos
inc
fs
mov
das
dec
sub
xchg
adc
mov
or
xchg
push
cmp
cmp
add
and
in
cmpl
cld
imul
xchg
jo
mov
outsl
js
mov
adc
xchg
shll
or
cmp
pop
outsl
push
rcrb
nop
dec
xchg
add
mov
sahf
clc
and
sub
sub
jp
ficoml
fiaddl
pop
cmpb
push
push
es
cmp
jmp
rol
insb
add
ljmp
and
int3
xchg
add
cs
dec
outsb
jge
insb
add
xor
mov
pop
arpl
pop
aaa
nop
sub
stos
mov
pusha
sbb
push
andl
pop
aaa
lods
adc
sub
xchg
int
adc
js
jne
dec
ret
shll
iret
jne
cld
mov
xor
stos
cmp
and
mov
xchg
mov
sahf
xchg
hlt
out
adc
cmp
jnp
jle
es
arpl
mov
not
call
out
inc
enter
loope
dec
xchg
scas
popl
pop
fdivrs
mov
pop
mov
push
inc
ds
out
int3
push
inc
mov
add
push
cld
daa
aas
les
cmc
jns
movsb
imul
jnp
and
in
jl
cwtl
jp
mov
test
jle
and
addb
fcomps
mov
xchg
out
pushf
lds
sar
incl
dec
enter
dec
sbb
outsb
iret
pushf
jg
xor
call
xchg
xchg
lds
js
adc
daa
sub
or
mov
add
mov
or
call
in
pop
inc
add
add
push
outsb
xchg
pop
mov
mov
fs
repnz
leave
push
popa
xchg
push
xchg
sub
sahf
fnsave
rorb
xor
subl
mul
xor
add
push
sbb
or
int
mov
mov
outsb
xchg
fldl
outsb
subb
mov
insb
jp
loopne
hlt
xor
push
and
popa
adc
cmp
pusha
cld
and
or
mov
cmpsl
cmp
mov
push
test
pop
outsb
mov
adc
js
sbb
and
cmpsb
or
or
test
js
mov
in
push
jno
inc
add
cmp
push
and
mov
mov
cld
pop
xor
and
je
push
loope
shlb
fs
cmp
push
add
and
mov
sub
hlt
hlt
scas
les
scas
stos
mov
sub
jo
xchg
adc
clc
xor
iret
clc
cmp
push
sbb
lcall
sbb
mov
pop
pop
fs
out
pop
and
sbb
loopne
lret
jbe
adc
push
push
shrb
add
fistpl
sbb
ljmp
push
inc
xchg
test
pop
movsb
jmp
cld
insl
sbbb
mov
call
or
cli
adc
cmp
or
int3
sub
icebp
or
cwtl
rcll
insl
dec
lea
cmpsl
js
movsb
out
loopne
in
iret
sbb
fisttps
sti
das
push
cmc
or
outsb
repnz
jo
jg
pop
das
xor
jo
popa
sti
ret
add
jb
dec
xchg
adc
bound
pop
pop
sbb
shlb
mov
xchg
push
add
pusha
std
int
imul
xorb
fidivs
outsl
movsl
loop
rolb
cmc
fcmovnu
je
xorb
psllw
rolb
add
sbb
lock
mov
cli
dec
mov
fldt
pusha
pusha
cmp
pop
dec
loope
daa
nop
hlt
pinsrw
popa
hlt
enter
push
pop
jge
mov
mov
insl
jge
or
push
sti
mov
negb
call
aad
dec
and
sub
sbb
ret
jle
push
push
in
jnp
sub
adc
jecxz
sbb
mov
push
lds
add
int
sbbb
js
and
push
dec
mov
mov
cs
out
inc
inc
stos
lahf
lock
xor
mov
push
cs
outsl
inc
mov
orb
fcoms
xchg
js
subl
mov
dec
sub
ficoms
sbb
out
mov
rcrl
jp
add
lcall
loope
and
andb
dec
ret
pop
jmp
lock
or
jae
add
jl
mov
and
add
dec
sbb
or
mov
js
es
mov
push
fimull
into
or
and
xor
aam
adc
fisttpll
inc
mov
aas
mov
mov
test
movsl
push
xorb
add
bound
mov
in
aad
test
repnz
fidivrl
mov
cmp
dec
inc
rcr
xchg
add
push
outsl
mov
push
repnz
jnp
cmp
sahf
rcl
dec
mov
mov
movsl
mov
andps
jo
scas
xor
or
outsb
in
das
rcll
hlt
mov
pop
loopne
pop
inc
icebp
jmp
je
jo
push
movsl
jo
push
sub
ljmp
sbb
push
jl
and
and
negl
ret
scas
dec
cld
bound
cwtl
clc
add
add
out
mov
js
mov
add
sbb
and
pop
lea
daa
jp
jge
pusha
xchg
js
enter
pusha
pop
orl
pop
sub
pop
jg
sbb
pop
shl
dec
pop
ret
jne
ret
mov
js
xchg
sbb
xor
push
aam
adc
in
pop
test
push
inc
cmp
inc
jl
popa
mov
fcmovne
call
push
and
es
pusha
push
in
pop
mov
mov
insb
loope
addr16
insb
xchg
aad
sahf
lret
loop
adc
pusha
aas
inc
fcoms
xor
mov
push
pop
sub
adc
sub
js
push
sub
inc
dec
xor
jne
push
jmp
cld
dec
jp
add
aas
jnp
nop
cs
sub
sbb
fs
clc
inc
es
cmp
repnz
ja
clc
shr
mov
xlat
lahf
es
rcl
xchg
dec
lcall
xchg
sahf
sub
xchg
icebp
lds
adcl
out
or
subl
sub
adc
es
movb
and
push
loop
ja
push
or
mov
add
call
sbb
xchg
gs
aam
fisttpll
repnz
loop
add
add
cmp
or
negb
test
loopne
mov
mov
int
xorl
fnstsw
pusha
sbb
pop
lcall
pop
mov
ds
ds
mov
pop
mov
sbb
jnp
mov
rclb
inc
mov
push
mov
adc
adc
inc
inc
shlb
jno
push
cli
push
sbb
aad
xchg
mov
inc
xchg
mov
push
inc
push
rsm
mov
or
mov
push
mov
dec
inc
fcmovnu
clc
adc
sub
dec
lea
fdivrl
inc
aaa
or
pop
enter
shll
cld
jbe
in
inc
popa
add
lea
xchg
jne
xchg
mov
dec
adc
push
cmp
dec
pusha
iret
jl
popa
fisubs
jbe
add
mov
jecxz
das
cmc
fcoms
sbb
repnz
mov
jl
sbb
and
ss
jo
pop
mov
or
fsubr
add
push
and
test
and
cmp
jb
ret
test
sbb
mov
xchg
push
cmp
adc
add
lahf
sub
push
outsb
nop
cmc
cmp
dec
js
aaa
dec
push
mov
dec
rcl
pop
add
fimuls
loop
push
and
movsb
stc
inc
pop
cmp
clc
jmp
xlat
int3
in
mov
and
sahf
pusha
adc
dec
std
jo
mov
push
in
jne
aas
iret
clc
lods
xchg
aas
pop
adc
cmc
jecxz
jnp
xchg
adc
xlat
sbb
or
push
cmc
jmp
mov
sbb
sbb
add
sub
dec
jl
inc
jecxz
mov
cmp
inc
ljmp
lds
jle
mov
enter
test
dec
jge
xchg
fistl
mov
sbb
mul
jno
push
pop
adc
xchg
enter
enter
ret
clc
scas
imul
push
xchg
push
add
pop
mov
out
push
push
cmp
mov
add
dec
aad
test
in
aas
add
mov
into
cltd
mov
cmp
repz
cmp
mov
mov
pop
or
inc
aas
test
ficompl
outsl
mov
pop
push
cs
stos
scas
or
fiaddl
xchg
jbe
addr16
int3
push
mov
ficoml
or
pop
mov
lret
push
rclb
mov
cld
les
jne
mov
loop
popa
or
jp
cli
xchg
jb
fwait
rcll
aaa
inc
dec
lods
adc
cmp
mov
clc
lcall
pop
dec
in
insb
loopne
xchg
rcrl
sub
aaa
sbb
clc
inc
enter
inc
xchg
rolb
cwtl
xchg
ljmp
mov
sub
xchg
popf
xchg
or
sub
mov
rorb
lahf
inc
inc
dec
js
dec
jo
mov
rclb
push
add
scas
mov
or
xor
push
pop
sbb
sub
push
jbe
or
inc
adc
cmpsl
xor
add
mov
ljmp
mov
inc
pushf
shrl
lods
nop
ret
orb
hlt
add
and
cmp
jne
hlt
push
icebp
loope
mov
outsl
sbb
mov
mov
or
or
xchg
aam
mov
jo
imul
xchg
insb
enter
inc
add
fstl
jp
iret
fnstenv
adc
scas
adc
inc
inc
mov
mull
push
xchg
cmc
shlb
or
cli
loopne
in
rcl
add
imul
leave
mov
jmp
stos
pop
xlat
adc
adc
mov
cmp
repnz
ljmp
pusha
pop
loope
dec
cmp
xor
stos
les
and
inc
adc
push
jg
std
xlat
ja
clc
popl
mov
or
dec
leave
js
pop
fs
dec
mov
ror
sub
jge
pop
pusha
adc
xchg
aam
jo
add
adc
pop
xchg
nop
xchg
jbe
sub
fildll
push
pop
test
repnz
test
adcl
test
or
out
jb
adc
pop
clc
mov
into
sub
test
subl
sbb
cmp
popa
rcr
xchg
jle
and
fs
pop
es
mov
xor
jl
mov
insb
push
push
mov
test
lock
pop
add
fmuls
dec
cmp
jle
mov
rolb
ja
adc
shl
add
sbbb
ds
sbb
mov
add
xchg
fsubs
jnp
mov
js
pop
mov
mov
adc
das
cmp
nop
push
outsl
sbb
push
cs
dec
inc
js
pop
lcall
je
jbe
fldl
mov
scas
jno
or
mov
scas
pop
sub
jp
add
pop
mov
cmp
mov
mov
je
testb
call
dec
pusha
mov
clc
ds
aaa
sbbl
push
mov
fwait
out
jle
imul
pop
xor
mov
arpl
aaa
mov
lret
pusha
add
movsb
shl
mov
add
call
in
cmc
cli
nop
adc
insl
push
pop
cmp
push
pop
or
xchg
mov
ds
scas
jbe
push
test
pop
or
mov
sub
mov
addb
outsl
mov
mov
adc
arpl
xchg
push
out
mov
outsb
gs
mov
push
or
jo
fisttps
addr16
and
mov
mov
mov
mov
push
dec
dec
call
push
sub
sahf
cmc
push
sub
jae
mov
mov
pop
xorl
xchg
inc
push
aam
mov
push
or
mov
test
call
cld
nop
sbb
inc
xchg
push
divb
icebp
outsl
and
xchg
pop
div
xor
push
add
loope
pop
dec
push
test
jb
mov
xor
dec
sbb
fdivp
je
mov
or
add
sti
inc
sbb
and
jle
fs
and
jne
mov
add
call
hlt
sarb
cs
mov
sahf
ljmp
jp
fimuls
mov
sbb
jb
cmp
mov
ficoms
pop
sbb
adc
jne
push
and
cmp
es
in
stos
add
sub
movsl
sub
push
incb
cltd
stos
push
imul
scas
out
das
pop
inc
js
rol
mov
loopne
dec
mov
aam
pop
iret
int3
fcmovnu
hlt
dec
adc
mov
ret
or
pop
shlw
cmp
cmp
sbb
arpl
cmp
xor
fsubs
aad
outsl
xchg
aad
mov
push
je
cli
pop
daa
js
negl
inc
out
cli
jg
rorb
rolb
xlat
inc
lcall
add
inc
push
or
mov
xchg
daa
pop
mov
or
jp
mov
or
ret
xor
push
push
rorb
sbb
nop
and
test
insl
sahf
add
dec
ds
outsb
push
jne
dec
test
ds
aam
adc
mov
lea
xchg
ljmp
add
xchg
aad
lahf
mov
je
cmp
pop
aaa
jmp
lods
negl
outsb
xchg
jge
dec
andb
mov
in
jp
add
insl
jae
pusha
icebp
push
sub
aam
bound
jge
sub
jmp
jo
movsl
movsl
cmp
pop
xor
xor
pop
sub
cmp
imul
scas
mov
ljmp
call
xchg
add
aad
sub
stos
fucomip
and
jmp
jg
lds
push
jns
mov
add
mov
mov
ret
arpl
push
iret
cmc
sbb
les
js
push
sbb
push
dec
pop
aaa
inc
ud0
negl
lds
ret
sub
gs
icebp
sbb
push
or
arpl
pop
jecxz
aas
shr
add
dec
roll
xchg
lock
gs
mov
dec
lods
add
or
ljmp
aad
jno
pop
insb
imul
sbb
imul
and
lock
gs
nop
push
rclb
mov
add
icebp
sub
jns
or
out
ret
add
mov
xchg
mov
mov
jo
ds
xchg
cmp
and
pop
jmp
inc
jp
sbb
rorl
jns
lods
movsb
mov
sbb
pop
daa
sbbl
mov
inc
ret
jmp
popa
mov
leave
cltd
pop
push
xchg
cmp
adc
popf
mov
out
test
add
cmp
inc
fbstp
sbb
mov
pop
mov
xchg
and
enter
xchg
add
dec
icebp
xchg
rclb
xor
xchg
roll
jl
aad
xchg
jbe
sub
loope
ljmp
lret
in
jno
mov
int3
loopne
clc
adc
xor
cltd
mov
mov
lcall
fsubl
dec
clc
jo
mov
jne
push
js
rclb
repz
outsl
jl
add
popa
adc
popf
repz
inc
sub
je
cmpsb
and
imul
dec
mov
cmp
inc
vpminub
xor
test
jb
xchg
sbb
ficoms
lods
or
jae
sub
sbb
pusha
dec
scas
inc
clc
jecxz
arpl
pop
ss
mov
out
jo
adc
mov
test
sub
js
ss
sbb
dec
xor
xchg
pop
stc
sbb
mov
aas
mov
lret
sub
adcb
xchg
adc
xor
cltd
xor
repnz
clc
pusha
lahf
bnd
and
or
fxch
call
imul
sbb
add
inc
jle
stos
push
inc
push
scas
pop
mov
dec
or
sub
mov
andb
pop
dec
add
ljmp
xlat
imul
and
xor
flds
mov
out
xor
mov
mov
push
and
mov
pushf
in
xor
aad
xor
daa
fdivrl
inc
dec
adc
or
cmpsb
inc
mov
cmp
aam
mov
sar
imull
and
rclb
test
or
clc
sbb
push
mov
nop
and
aaa
sbb
jecxz
xchg
pop
inc
push
aaa
mov
xchg
fsubp
shl
xchg
push
mov
lds
dec
mov
xlat
ja
pop
loope,pt
testl
ficoml
add
mov
cmp
popa
in
out
pusha
fcmovne
jmp
pop
add
orb
dec
cmpsl
cmp
mov
test
push
call
push
pop
add
loop
mov
enter
inc
xor
push
push
loopne
push
fstl
sbb
jmp
popa
jno
pop
leave
adc
sbb
ljmp
and
lahf
pop
les
add
xor
out
push
xor
xor
jmp
test
adc
pop
pop
sahf
pop
xlat
mov
inc
ss
cmp
mov
mov
ds
mov
and
sbb
push
in
sub
jmp
jle
pop
inc
cs
sbb
shll
mov
out
jne
jecxz
lds
mov
sbb
add
sahf
inc
fsts
js
sbb
pop
orb
es
ret
clc
pop
lret
movsb
call
xchg
popa
jge
shlb
mov
test
mov
mov
mov
mov
jns
cmp
mov
pop
pop
loope
leave
pop
push
sub
mov
inc
rorl
jne
loop
mov
cld
iret
adc
shlb
jl
fbstp
scas
in
outsl
jmp
iret
push
test
les
mov
pop
push
cmpb
push
int
push
mov
cmp
push
roll
jl
jne
push
pop
mov
inc
mov
mov
push
dec
loopne
xlat
or
push
in
fcoml
scas
jecxz
cltd
dec
bound
adc
mov
fstpl
inc
pop
in
inc
fidivrs
test
pop
int
sub
mov
pop
pop
pop
in
mov
pusha
or
sub
bound
cli
daa
out
add
test
xor
loope
mov
cmc
mov
xor
aam
in
push
daa
xchg
cmc
inc
jae
lds
scas
fisttpl
iret
jge
lock
pusha
push
pusha
and
add
ret
push
jmp
leave
pop
push
fwait
mov
inc
push
scas
sbb
mov
sbb
pusha
rorb
popl
dec
xchg
lods
js,pn
insb
fisttpll
data16
jae
sub
int3
adc
pop
int
lock
sbb
insl
and
scas
push
dec
xchg
iret
gs
push
nop
and
sub
adc
out
pop
das
mov
inc
dec
mov
or
cmp
or
jmp
lret
cld
test
and
int3
inc
inc
cmpsl
and
cmpl
sub
int
add
mov
mov
jecxz
sbb
xor
outsb
lret
std
xchg
mov
cmp
pop
imul
int3
mov
ds
scas
cwtl
outsb
into
xlat
scas
icebp
jo
sbb
scas
pop
std
push
sbbl
inc
push
mov
testl
sub
pop
xlat
lock
rcll
imul
push
lods
pop
adc
push
je
lret
mov
add
adc
sbb
mov
add
dec
sbb
add
xchg
push
std
adc
pop
es
jge
loope
notl
gs
add
ret
sub
mov
add
imul
cli
mov
imul
pusha
loope
xchg
push
inc
adc
pop
loope
dec
pop
hlt
dec
popa
mov
pop
loopne
ss
and
mov
or
pushf
cmpsl
into
dec
les
jg
lds
imul
mov
lds
ret
loopne
mov
jmp
sbb
sbb
or
imul
mov
xor
adc
mov
xchg
sub
mov
popa
scas
dec
add
loop
push
movsb
adc
cltd
xchg
jge
or
push
mov
pop
test
shl
cmp
mov
push
aaa
fcoml
aas
imul
jns
jg
loop
les
pop
xchg
xor
enter
rorl
pop
mov
cmp
clc
and
push
jp
add
ret
pop
shl
ficomps
mov
cld
pop
lahf
pop
je
mov
test
and
test
jnp
inc
aas
cmp
inc
pop
cmp
inc
andl
jmp
mov
pop
pusha
or
hlt
and
test
out
push
add
mov
or
jne
mov
je
xor
mov
push
xor
sti
in
and
test
out
mov
cli
ret
mov
insl
call
pusha
jmp
xor
pop
cmp
js
jmp
loop
inc
xchg
and
and
inc
xor
xchg
clc
in
cmp
pop
pop
dec
cwtl
jmp
addl
mov
ret
or
dec
shll
inc
jle
rclb
test
out
push
gs
inc
incb
cmpsl
ljmp
out
addr16
popf
mov
mov
rclb
push
jns
add
cmpsl
sbb
cld
jmp
adc
lods
fwait
mov
mov
lods
idivl
jl
shlb
mov
pop
jb
stos
jno
test
push
lds
lcall
in
pop
aas
xor
out
out
shlb
adc
pop
inc
xchg
push
das
punpcklbw
sub
lcall
rol
inc
xor
outsl
js
xchg
lds
loopw
fsubrp
lahf
mov
sbb
dec
loopne
cmc
mov
fisttpll
shll
loope
push
add
mov
push
or
and
xlat
adc
push
add
mov
rcrb
icebp
inc
jno
cs
repz
pop
fadds
sbb
push
xchg
lea
stos
jo
xor
insb
xchg
sub
mov
cmp
pop
add
mov
pop
xchg
push
mov
mov
jae
aad
aaa
sahf
scas
andl
ss
mov
insl
pusha
and
lock
adc
sbb
push
fsubl
les
jno
cmp
jle
lcall
lock
loope
inc
cmp
jmp
cmc
add
pop
xchg
cmp
cmc
ds
das
xchg
mov
icebp
test
lret
orb
mov
gs
cmp
push
incl
shll
orl
lock
sbb
dec
ficoml
sti
add
imul
roll
sbb
scas
mov
mov
add
pop
xor
popa
int3
mov
test
push
sbb
sub
in
loope
inc
add
inc
pop
adc
inc
test
ret
jl
cmc
xchg
push
icebp
ja
sbb
xchg
les
push
std
outsb
jle
pusha
imul
repz
sbb
cwtl
mov
sbb
jmp
cltd
popa
clc
xchg
mov
leave
scas
mov
xchg
sarb
fcoms
cli
cmc
addl
cwtl
int3
and
and
jl
mov
iret
jbe
pop
ficompl
fsubs
xchg
add
lds
mov
icebp
mov
ds
ss
mov
ljmp
cmpl
adc
push
or
add
or
movsb
mov
ficompl
add
fimull
add
or
jg
xchg
push
das
jo
mov
push
arpl
dec
insb
aam
aam
xchg
sbb
mov
test
clc
adc
aam
je,pn
xchg
xchg
cmpb
imul
push
jmp
lahf
or
push
sub
clc
xchg
add
fucom
adc
jmp
hlt
xchg
sub
loop
je
gs
push
repz
xor
out
stc
and
xchg
into
aas
or
add
leave
dec
and
in
aad
je
inc
push
push
fwait
stos
popf
jp
enter
or
test
mov
sbb
xor
lcall
cmp
push
in
xchg
cmpsl
not
jle
sahf
cmp
push
pop
into
mov
out
add
sub
ficomps
mov
xor
mov
in
inc
jnp
inc
das
add
xor
das
pop
subl
in
or
add
push
out
push
or
xchg
rcll
inc
fdivs
cltd
stos
adc
jg
cmp
pop
cmp
pop
lock
cmp
push
adc
and
call
push
pusha
in
adc
aaa
lods
repz
pop
add
test
xchg
pop
arpl
push
icebp
ficompl
test
lahf
mov
sarb
roll
ret
lods
das
bound
orb
add
in
inc
push
repnz
dec
mov
andl
bound
sbbl
cmc
add
sub
loope
jp
sbb
xchg
js
lfs
cs
or
faddl
or
leave
sub
dec
jne
cs
adc
arpl
jns
push
lea
dec
mov
cmpsl
les
mov
and
pop
mov
mov
adc
lock
mov
je
addb
or
addb
aas
shll
imulb
cmp
jecxz
faddp
sti
push
pop
fs
in
imul
inc
fildll
andb
mov
mov
cli
fwait
imul
orl
in
jns
fsubl
dec
pusha
add
xchg
cmp
cli
test
in
cmpsb
rcr
inc
mov
gs
add
inc
call
nop
test
je
sbb
push
dec
popf
mov
sbb
jbe
clc
pop
pop
lock
mov
sub
add
or
das
daa
xchg
fwait
ds
mov
sub
push
jno
jne
repnz
repnz
jle
test
push
add
xlat
pop
iret
clc
adc
cltd
adc
in
popf
jle
inc
and
call
mov
mov
inc
mov
test
lret
cmpsl
fucomip
cmc
imul
add
stos
je
mov
pop
mov
cmp
ss
xor
ss
dec
adc
push
push
int3
xor
push
or
insl
mov
lods
mov
xchg
hlt
add
loopnew
sbb
je
fadds
lret
sarl
pushf
push
pop
fsin
dec
mov
aaa
in
iret
xchg
loop
pop
sbbb
pop
pop
or
push
push
sbb
je
push
jo
lret
ljmp
adc
rcll
add
or
or
dec
pop
nop
push
mov
jp
or
mov
lahf
and
adc
repz
hlt
push
push
je
stos
bound
ret
sub
hlt
inc
mov
mov
dec
add
testl
inc
imul
adc
xor
pop
dec
adc
mov
jae
ljmp
out
cmp
push
inc
jp
add
mov
xchg
mov
pop
or
xchg
or
popa
lods
pop
fldt
push
insl
or
ret
or
dec
cmp
xchg
stos
popa
add
inc
call
sbb
lock
dec
mov
cmp
pop
mov
and
mov
movsb
mov
test
hlt
std
andl
pop
mov
outsb
or
xchg
inc
pop
loopne
cmp
lret
adc
daa
loope
fidivrl
and
mov
or
loopne
lods
mov
sub
lahf
subb
arpl
insl
mov
fwait
xchg
or
pop
fs
nop
daa
inc
rcrb
fdivrs
js
test
sub
aaa
ret
hlt
sub
xchg
jbe
mov
push
xchg
or
call
or
sub
enter
sub
pop
dec
in
pop
or
jnp
ljmp
add
pop
sbb
iret
sbb
jbe,pt
loopne
jns
xchg
push
cmp
pop
push
lods
push
or
dec
jne
subb
inc
aas
mov
call
out
mov
xchg
cmp
notl
sbb
ret
jg
loopne
mov
stos
pop
test
lahf
dec
and
xor
xchg
cmp
dec
or
push
sbb
inc
sbb
aas
mov
aam
pop
dec
mov
or
repz
pop
mov
test
dec
push
mov
add
pop
adc
pushf
pop
mov
xchg
cmp
mov
or
and
or
cld
fiaddl
jmp
jp
push
lea
js
xor
sub
rorb
loopne
cmp
call
andb
sub
jbe
jae
rol
rcrb
les
jge
xorb
mov
and
xor
cmp
vmwrite
loopne
mov
fisttps
nop
dec
cmp
inc
mov
out
fpatan
push
add
xchg
jbe
cmp
jle,pn
jp
sbb
std
or
subb
cs
loopne
jmp
imul
mov
call
pop
aad
cld
movsb
mov
lret
js
test
pop
mov
cmp
mov
mov
xor
test
sbb
lods
in
push
jmp
cwtl
sbb
xchg
or
jecxz
dec
sbb
lock
fs
mov
add
out
xor
je
test
xchg
lcall
sbb
gs
sub
outsb
cmpl
adc
sub
and
mov
mov
pushf
shlb
dec
ja
pop
mov
cmp
mov
out
push
outsb
mov
dec
stc
cwtl
mov
aaa
mov
sbb
ret
xorb
sahf
cmp
pop
xchg
add
mov
cmp
cs
add
std
dec
push
cwtl
xchg
dec
cmpsb
cmpsl
mov
out
mov
fadds
cs
shlb
stc
shr
aam
cmp
pop
or
xorb
fisttps
cmpsb
insb
sbb
dec
inc
insb
sub
mov
mov
and
and
aad
dec
pushf
cmpl
push
sub
decl
mov
test
add
bound
cmc
dec
xchg
cmp
dec
icebp
jnp
les
jle
push
xor
pop
pop
dec
pop
sbb
and
cli
movups
mov
loopne
push
xor
adc
fisttps
fisubrs
icebp
inc
lahf
fistl
add
sbb
test
movsl
jl
mov
test
inc
cmp
jmp
jns
outsb
out
mov
scas
xchg
aaa
and
cmp
cs
and
jecxz
scas
lock
xchg
mov
int
and
neg
popf
mov
lds
push
and
imul
js
add
loopne
aaa
stos
mov
aam
sbb
ljmp
cli
pop
mov
dec
adc
pop
popf
inc
jae
mov
push
loop
imul
dec
adc
test
lea
stos
inc
movsb
mov
jge
shl
jl
je
inc
gs
jne
xor
in
scas
xchg
add
imul
roll
lods
xchg
into
or
adc
inc
push
adc
ds
xchg
ds
std
je
rcrl
cwtl
sub
push
cli
inc
mov
jle
xlat
movsb
popf
jb
jmp
and
add
jno
pop
and
or
rcll
lret
inc
loope
call
sarb
mov
leave
sti
adc
lods
push
imul
lods
jns
and
call
xchg
in
popa
adc
mov
js
pop
outsb
es
push
dec
jb
xchg
les
loopne
or
add
mov
adc
loop
das
mov
push
imul
mov
scas
pop
sbb
push
sbb
push
xorb
pop
xchg
cmpsb
mov
ja
xchg
and
je
cmp
ret
dec
sub
movsb
xchg
imul
push
clc
les
add
push
cmc
pop
lods
test
test
mov
jge
or
jmp
dec
jb
dec
mov
adc
cmp
lods
mov
cltd
adc
aam
pop
and
js
dec
jo
out
jle
test
hlt
jl
mov
xor
mov
sub
lret
adc
test
adc
lods
xchg
lock
jge
out
push
cltd
mov
cmp
lahf
push
in
out
xor
lods
popa
mov
nop
add
fdivrs
sbb
fnsave
jecxz
in
out
sti
sub
mov
xor
inc
rcrl
imul
js
mov
push
call
and
iret
popf
xchg
mov
cmp
xor
xor
add
dec
cmp
xchg
jl
andl
jns
std
add
jmp
push
pop
sbb
out
sub
inc
fcmovbe
dec
ret
mov
imul
andb
loope
jne
and
pop
pop
icebp
xchg
in
clc
cmp
mov
cmp
add
mov
hlt
arpl
cld
sbb
sbbb
add
xorb
mov
ffree
shl
xor
cmc
adc
inc
adc
cmp
cli
into
popf
sbb
add
push
add
insb
mov
movsl
icebp
ret
push
and
sub
rolb
lods
clc
ljmp
mov
xchg
mov
add
wrmsr
xchg
sbb
mov
loope
lds
mov
lock
negl
and
outsb
xor
mov
lods
cld
outsb
outsb
cmp
push
or
cs
mov
or
enter
mov
jle
sbb
jb
fimull
adc
add
inc
cmpb
pop
cwtl
fdivs
dec
add
test
mov
or
loopne
frstor
nop
adc
jge
aaa
lahf
int3
and
shrl
stc
sti
sbb
or
cmp
lock
arpl
fidivrl
pop
pop
cs
imul
dec
jbe
popf
fbld
push
scas
test
inc
pop
cmp
aad
pop
cmp
or
loopne
and
xlat
out
mov
rcll
movsb
xchg
mov
nop
or
cmp
mov
or
gs
ja
aad
pop
stos
adc
sbb
ficoml
scas
fistps
loopne
adc
push
aas
cs
loopne
jne
push
adc
nop
sub
adc
xor
or
cmpsb
push
sbb
and
lret
int3
aam
mov
loope
int
pop
daa
cmp
mov
dec
add
lcall
hlt
mov
or
xchg
imulb
sbb
add
and
mov
in
push
jl
sub
mov
je
mov
iret
aaa
jmp
adc
dec
inc
xchg
add
lcall
add
cmpl
fucomp
jge
sbb
mov
rcrb
cmp
scas
cmpl
adc
push
jl
rorl
xchg
sbb
lods
push
sbb
cmp
mov
movaps
mov
or
jl
cld
xorb
or
sub
je
push
loop
jg
mov
inc
adc
push
adc
std
loop
test
aad
ss
fsub
pop
leave
cmc
cld
js
imul
out
fisubl
or
pmaxsw
push
sbb
rolb
pop
shll
or
cmp
lcall
cmc
jle
lock
and
lods
lret
jge
pop
loopne
dec
out
rcr
add
xchg
xor
scas
sbbl
lcall
nopl
fwait
sbb
dec
cmp
dec
dec
out
pop
stc
sbbl
inc
mov
aad
pop
sbb
mov
mov
lea
bound
mov
icebp
jmp
push
out
jae
into
add
mov
aam
lds
outsl
add
fcmovu
mov
call
mov
jne
sub
or
cltd
xor
das
je
mov
mov
xor
jb
bound
mov
dec
je
add
mov
cmp
jo
ret
add
push
add
movsb
pop
jg
clc
dec
je
pop
lea
out
int
daa
xor
cmp
addr16
xor
incl
add
sub
adc
jge
out
in
ljmp
add
rcrb
aam
sub
xor
cmc
adc
loopne
inc
dec
mov
dec
jno
orb
out
fucomi
xlat
xchg
out
or
sbb
imul
and
stc
xchg
sbb
cmpsl
aam
jle
or
dec
push
push
clc
sbb
orl
pop
push
repnz
xchg
mov
pop
gs
in
sub
pop
mov
add
and
xchg
loopne
mov
insb
mov
adc
xchg
pop
mov
mov
aam
out
inc
jo
sbbb
inc
mov
std
adc
pop
nop
pop
je
jno
xor
cmp
adc
jecxz
mov
jo
daa
lcall
xor
push
add
jg
scas
jl
je
daa
jno
enter
push
iret
push
sahf
ja
pusha
xchg
fimuls
pushf
cmp
mov
push
out
jl
scas
outsb
jle
fdivrl
insl
xor
mov
fisttps
stos
mov
js
cmp
mov
mov
ret
in
mov
mov
movsb
iret
mov
mov
xor
clc
shll
int
or
loop
loope
cltd
divb
xchg
clc
loopne
sbb
aaa
shll
negb
movsl
sbb
decb
lcall
repz
add
or
cld
adc
call
and
push
xor
cmp
mov
jge
mov
lcall
ffree
or
cwtl
insb
mov
jbe
push
test
adc
fmuls
add
or
sbb
mov
loope
std
out
add
mov
mov
int
adc
dec
xchg
fcomps
and
mov
incb
mov
dec
sbb
enter
pusha
xchg
inc
xlat
fcompl
cmp
movsb
add
mov
jp
xchg
out
fwait
mov
arpl
lock
and
sub
xor
in
mov
fildl
cmc
cmp
rcrl
add
push
ja
adc
int3
inc
inc
xor
xor
or
pop
sub
add
add
adc
sahf
pop
lods
jmp
pop
ss
rorb
jbe
arpl
out
daa
add
cltd
mov
mov
and
fmul
push
sub
mov
or
fisubrl
lcall
jp
dec
add
or
dec
out
adc
enter
jl
cmp
mov
dec
les
mov
testb
in
test
add
or
xchg
test
test
inc
inc
lea
pushf
data16
dec
sub
inc
das
outsb
sbb
bsr
adc
mov
sub
xor
ret
ljmp
in
or
adc
mov
mov
lret
enter
je
lods
add
inc
outsl
xor
mov
add
mov
mov
ss
and
jle
cltd
inc
sbb
sub
mov
jb
pop
lds
mov
sbb
pop
pop
mov
ss
jmp
test
xchg
cmp
inc
sub
hlt
leave
rclb
iret
cmpsb
cmpsb
lock
aam
mov
and
bnd
xchg
pop
mov
ret
add
loopne
lfs
add
mov
xlat
add
mov
jne
pop
insl
es
jp
bound
scas
leave
jmp
pop
or
jmp
sbb
in
out
ret
add
jae
or
mov
push
adc
das
icebp
xchg
loopne
cmp
mov
jne
inc
test
pop
lcall
xor
push
cmpsb
pop
mov
rcrb
subl
mov
shr
dec
jb
dec
cwtl
out
add
stos
scas
je
adc
insl
test
pop
push
jae
or
jo
cmp
dec
add
sahf
cmpsb
jle
push
rcrb
movsb
cmpsb
inc
and
faddl
pop
mov
sbb
jg
loopne
loop
bswap
push
shll
sbb
insb
loopne
pop
imul
cmp
or
or
ja
xlat
inc
cmp
fdivrl
pop
cli
inc
hlt
mov
insl
adc
pop
or
ret
add
mov
clc
jns
arpl
stos
cld
mov
bound
sbb
cmp
fs
or
cmp
add
call
xor
lds
add
jl
iret
pushl
xor
aas
add
mov
push
or
and
cmp
sbb
outsb
xor
orb
shrl
jmp
fsts
sbb
loopne
add
je
or
sub
jno
push
pop
inc
sarl
insb
les
add
or
dec
cmp
stos
mov
mov
xchg
and
ljmp
lcall
sbb
add
mov
jae
call
daa
cmc
sbb
cmpsl
jecxz
cmp
mov
and
sbb
cli
je
pushf
fucomp
sbb
lock
or
fbstp
jno
mov
sahf
ljmp
lea
lods
cmp
inc
mov
xor
pusha
cmc
dec
dec
dec
in
scas
push
or
mov
jo
lods
or
cmovns
hlt
pop
jle
fldcw
loope
ljmp
mov
jnp
rcl
xor
and
lock
sarl
icebp
and
out
add
aad
in
push
dec
mov
jno
adc
nop
pop
call
inc
nop
in
or
mov
imul
and
lahf
arpl
and
les
out
mov
add
in
loop
mov
mov
xchg
cmpb
pop
mov
pushf
sbb
or
pushf
and
push
leave
jno
mov
mov
ljmp
xchg
and
sbb
jnp
add
adc
lock
aam
lret
out
add
pop
movsl
lret
sar
dec
mov
pusha
loopne
xchg
and
fcoms
jb
cmp
aam
sub
out
xorl
sahf
out
pop
add
cmpsl
and
lock
arpl
loopne
rolb
nop
sbb
push
repnz
push
sarl
andb
std
inc
das
jb
jns
out
fs
test
outsb
jl
scas
and
xor
test
and
mov
test
or
loope
jb
pushf
or
ja
adc
aaa
add
fsubrl
xchg
arpl
push
out
jbe
jae
popf
mov
mov
sahf
mov
push
adcl
or
test
jno
jp
sbb
sub
pop
fwait
adc
lds
ss
adc
push
test
pop
mov
add
sbb
mov
pop
mov
inc
imul
ljmp
lods
push
xor
out
pop
outsl
push
jne
int3
inc
inc
aaa
cmp
inc
mov
push
cli
inc
jp
ljmp
cmc
enter
add
jecxz
icebp
je
popf
subl
jno
xchg
shrb
shl
push
xchg
ljmp
sbb
dec
addl
sbb
fisttpl
cmp
xchg
mov
js
pop
xor
jbe
out
insl
stc
aas
jecxz
jecxz
jmp
cmp
push
mov
xchg
add
jmp
fwait
movsl
mov
xchg
or
fimull
btc
mov
or
out
inc
push
sbb
cmpsb
inc
popf
push
rorb
cmp
mov
mov
mov
jns
xchg
cli
adc
jo
clc
adc
xchg
cwtl
pop
xchg
rcl
cmpb
inc
mov
xor
sti
into
adc
outsb
cmp
add
out
jo
cwtl
mov
mov
test
xchg
es
loop
test
sahf
and
scas
movsl
jmp
insl
mov
jp
mov
or
shl
sub
data16
cmpsl
inc
sbb
xor
inc
pop
push
dec
jge
adc
roll
mov
das
out
aad
xor
in
mov
or
adc
call
imul
stos
sub
mov
cmpl
sub
addr16
enter
adc
inc
pop
or
lea
xor
pop
or
mov
or
adc
out
adc
movsl
or
pop
cli
dec
les
shrl
sbb
xchg
inc
adc
mov
mov
adcb
ret
xchg
xchg
sub
sub
pop
pop
mov
sti
popa
pusha
arpl
lods
dec
lahf
mov
pop
out
pop
fisubrs
adc
scas
outsl
in
movl
movsl
or
sbb
mov
sub
xchg
push
jb
ret
les
ret
jl
aad
hlt
adc
cld
adc
pop
loop
xchg
lock
and
sbb
mov
adc
addb
mov
aaa
push
mov
add
js
and
or
jb
scas
lock
xor
std
or
mov
mov
add
xchg
jne
mov
sub
call
std
nop
movsb
aam
sub
dec
mov
iret
sub
lds
sub
pop
jmp
pop
js
mov
movsl
insb
inc
clc
inc
and
add
addr16
and
cld
aad
mov
jle
pop
sub
cs
js
xchg
lods
bnd
sbb
dec
das
cmpsb
shlb
les
xchg
or
xchg
push
add
mov
fwait
xchg
add
lods
test
fwait
nop
xchg
mov
sbb
add
movsb
int3
arpl
dec
imul
adc
jbe
movb
add
or
loop
jle
mov
mov
aaa
rcrb
xchg
out
xlat
scas
call
sbb
pinsrw
shrl
std
jecxz
and
gs
mov
sti
and
in
lds
jecxz
and
push
into
or
mov
jbe
hlt
jnp
jnp
scas
in
push
aad
and
fistpll
jo
mov
loopne
dec
fists
add
sbb
lcall
pop
das
movsb
stos
mov
inc
repz
sbb
adc
sub
idiv
or
mov
cs
jmp
stc
mov
adc
sbb
aam
ja
push
int
push
cmp
dec
or
adc
push
jge
pop
cmpsl
add
and
adc
add
inc
sub
xchg
vfrczps
and
shrb
sbb
aas
hlt
or
mov
call
mov
pushf
jo
xchg
popf
dec
sbb
add
testl
lahf
and
xchg
mov
push
add
inc
and
fstpt
sbb
jecxz
and
push
xchg
sub
ss
jne
leave
mov
adc
mov
sub
bound
rcrb
push
add
or
adc
shl
shll
lahf
test
test
scas
movsl
xchg
outsb
push
or
pop
add
cli
cmp
ss
jo
rorb
in
fsts
pop
test
push
and
dec
cmp
jb
cs
rcrl
mov
je
adc
lcall
add
fildll
adc
and
idivb
add
xor
or
dec
pop
stos
dec
lea
adc
aam
sbb
pop
pop
pop
clc
popa
push
mov
je
test
in
dec
arpl
divb
jle
sbb
xor
les
int
fdivp
loope
mov
mov
in
mov
stc
pop
pop
jno
fsubrs
lret
loop
ret
xchg
push
scas
enter
out
xor
dec
xor
push
sub
loope
inc
stos
sub
test
adc
cli
loopne
shrb
call
cmp
mov
leave
push
in
add
push
mov
lahf
dec
out
xor
movsl
push
bound
dec
push
mov
push
fldl
mov
inc
orb
push
dec
out
xchg
ja
mov
push
lahf
test
lods
sub
fidivrs
ffree
jbe
in
add
dec
jo
rcl
imul
jl
mov
mov
popa
mov
fs
push
aaa
inc
push
fnsave
pop
imul
fistpl
cmp
and
fdivrl
jo
sbb
mov
cwtl
xchg
loopne
sbb
sbbb
ss
push
xchg
cmp
lock
mov
and
mov
test
addl
loope
lret
inc
add
outsb
lds
dec
xchg
mov
jae
loopne
xor
xchg
popa
flds
ds
and
ret
ja
stos
movsl
and
in
or
dec
mov
enter
lret
mov
das
stos
test
sbb
add
out
or
dec
insl
aam
fists
adc
xchg
dec
pop
add
sub
xor
mov
and
jnp
mov
dec
jl
loop
enter
out
mov
roll
adc
xchg
ljmp
mov
mov
cmp
hlt
sbb
andl
inc
addr16
outsb
ss
cmc
jl
test
push
cmp
sbb
xlat
mov
ficoml
xor
lock
pop
push
movsl
in
fstps
lea
xlat
inc
sbb
es
je
push
sti
shll
loope
lock
or
ljmp
add
js
jp
fdivrp
adc
push
and
imul
mov
ljmp
enter
xchg
cmpsb
call
mov
icebp
adc
push
rolb
xchg
cli
xor
in
and
or
push
adc
sbb
popa
jb
into
push
mov
cli
mov
pop
rorl
sbb
test
lret
outsl
loop
lods
outsb
lret
scas
orb
movsb
jl
cmovbe
mov
pop
or
and
sbb
and
push
dec
inc
add
cmc
jl
leave
test
add
jns
xchg
mov
and
loop
cmp
std
adc
sbb
or
ja
mov
inc
cli
pop
cmpb
adc
xor
adc
scas
jno
xor
xor
lods
cmp
test
add
fnstcw
movsb
push
movsl
xchg
fwait
add
in
loopne
test
mov
add
fs
sub
pop
jns
in
mov
clc
and
scas
xchg
repnz
lods
aam
push
stc
out
aad
cmpsb
push
jp
dec
in
negl
nop
scas
in
out
mov
adc
dec
ja
cmp
in
cmp
jp
add
loop
or
or
and
push
jnp
mov
push
sbb
add
push
dec
pop
add
cmp
subl
sbb
inc
sub
mov
scas
rcll
jae
or
fiaddl
push
stos
mov
or
pop
dec
pop
fs
cmp
pop
inc
add
mov
nop
sub
and
mov
or
inc
jbe
scas
pop
inc
rolb
xchg
jo
nop
roll
xchg
push
cmpsb
test
orl
loop
pushf
or
push
lcall
rol
stos
cmpl
mov
test
ljmp
add
rclb
push
fimull
xchg
pop
lahf
push
pop
jmp
sbb
jbe
mov
fistpll
or
lods
ds
or
sahf
lds
rol
push
add
or
mov
push
psubsb
and
ja
inc
shl
loop
sbbl
mov
mov
enter
mov
fstps
mov
imul
iret
aam
rorl
pmullw
loop
insl
rolb
mov
jl
rcrb
nop
orl
dec
rolb
add
inc
fmull
in
rcl
dec
mov
mov
icebp
add
js
ljmp
fistps
dec
sbb
xchg
ds
loopne
lods
andb
adc
js
adc
movsl
lahf
push
jecxz
cmp
or
pop
lret
nop
out
mov
adc
or
es
xchg
nop
or
mov
mull
pushf
fs
pop
out
arpl
sbb
fwait
pmulhuw
pushf
push
insl
dec
popa
sbbb
sub
jne
adc
sub
sub
mov
dec
xor
sti
xchg
adc
sbb
mov
fwait
jmp
xchg
rorb
imul
xor
sub
lcall
test
add
gs
icebp
adcl
mov
cmp
mov
mov
std
mov
sbb
mov
lahf
scas
sub
cmp
in
addr16
or
or
cmpsb
dec
cli
arpl
lds
testl
pop
or
mov
dec
lods
inc
cmpsb
sbb
xor
pop
and
stos
mov
rcrb
icebp
push
inc
aam
fsubrp
fdivrl
das
push
sbb
mov
hlt
jecxz
in
pop
sub
lods
cli
and
std
pusha
or
nop
dec
shll
or
jo
push
sub
lds
adc
pop
pop
xchg
sub
add
sub
data16
imull
or
daa
movsl
jmp
mov
dec
das
mov
stos
into
xchg
cwtl
xchg
dec
mov
int3
mov
push
add
jno
pop
roll
daa
jge
mov
mov
adc
loope
out
iret
inc
pusha
jg
mov
lret
mov
mov
adc
shrb
int3
sub
xchg
pop
or
sub
jb
xchg
lock
pop
iret
aam
hlt
jno
jno
jp
jmp
sahf
adc
jge
push
insb
mov
cltd
jl
lock
lock
scas
xchg
imul
inc
popf
mov
cmp
lds
add
sub
movl
nop
aad
mov
lods
xor
ljmp
nop
fadds
pop
int
xchg
mov
mov
and
add
pop
xchg
stos
into
pop
adc
addr16
push
int3
cmpb
push
je
adc
jge
dec
flds
fildl
cmc
xchg
and
cli
pop
push
fisubl
add
daa
icebp
test
mov
add
and
imul
inc
cld
movsl
or
jmp
add
js
add
pushf
test
sbbl
sbb
adc
test
mov
or
iret
sub
inc
push
or
shrb
sbb
mov
outsl
mov
iret
cmp
cltd
mov
movsb
mov
sti
sub
popf
pop
inc
lock
loop
pop
in
mov
cltd
fwait
jbe
jno
xchg
fisubrl
ljmp
sbb
dec
jecxz
int
cmp
dec
scas
or
mov
fstps
leave
lods
mov
cmp
mov
inc
adc
or
xor
jnp
mov
imul
rolb
andb
pop
shlb
lea
out
movsb
fldcw
movb
mov
mov
into
lock
inc
cwtl
lds
jp
clc
mov
jge
cmp
adc
fldt
sbb
jns
jae
call
adc
clc
mov
lods
mov
or
aas
int
sub
scas
or
xorl
add
push
xor
aad
adc
or
push
in
lcall
inc
orb
xchg
js
lea
mov
ja
cmp
add
mov
fldenv
cs
js
lock
jecxz
dec
mov
andb
push
fiadds
lock
fstpt
push
xor
loop
adc
add
orb
test
sbb
lcall
inc
les
sarl
pushf
jg
push
xor
fimull
push
fimuls
jns
in
sbb
sbb
loopne
jle
sbb
xor
pushf
add
shl
or
fs
daa
idiv
dec
sub
insl
inc
xor
xor
icebp
mov
int
ljmp
xor
sbb
pop
mov
mov
push
popa
test
sahf
mov
sahf
mov
fwait
loopne
cmp
and
mov
add
xchg
dec
cltd
negb
mov
mov
repz
push
fsub
test
pop
arpl
or
out
xor
push
cmp
and
or
xor
xchg
loopne
mov
sub
test
add
daa
sbb
pushf
sbbb
call
movsl
cltd
cmp
loopne
arpl
jo
loop
scas
lea
pop
and
jo
mov
imul
pop
loopne
cmp
jmp
fldt
push
mov
call
and
shlb
cmpsl
outsb
aas
hlt
mov
pusha
or
insb
xor
cmp
mov
pop
add
aam
pop
scas
mov
dec
imul
add
dec
cltd
pop
mov
ja
stos
icebp
inc
in
stos
pop
adc
lcall
subb
mov
mov
sub
fwait
gs
fnsave
pushf
xor
sub
lcall
aad
movsb
pop
push
jb
add
outsb
imul
xchg
fisttpll
out
hlt
sub
jmp
cmp
sub
aad
outsl
add
dec
dec
cld
xchg
xor
fistps
xor
mov
out
mov
add
inc
in
add
subb
push
aaa
dec
adc
mov
jg
push
pop
pop
loop
dec
push
loopne
push
fnstcw
adc
sbb
push
pop
repz
cwtl
in
pop
fstps
jle
dec
and
push
xchg
iret
add
push
and
lcall
imul
jbe
pop
xchg
pop
mov
mov
pop
sar
call
adc
ljmp
push
jecxz
lcall
add
mov
pop
or
lods
add
sub
jecxz
fwait
int
and
adc
das
mov
add
dec
out
xchg
in
xchg
mov
lds
mov
pop
push
xor
dec
cmp
pop
ds
fsubrl
es
test
clc
test
jns
repnz
aaa
adc
add
pop
jp
and
cmovo
sub
xor
aad
test
les
lods
or
sub
cltd
push
fs
push
mov
mov
inc
in
sbb
ret
push
ret
clc
adc
enter
mov
xchg
shlb
ds
or
test
movsb
add
psubsb
cmp
sub
xchg
inc
call
add
sahf
mov
inc
mov
or
cmp
out
pop
mov
int3
sub
push
test
sbb
add
sub
sarb
mov
xorl
jmp
out
jge
mov
shl
add
adc
push
shll
pop
cmp
sbb
cli
in
scas
dec
iret
xchg
movb
xchg
push
bound
push
test
cmp
data16
sbb
sbb
popf
jg
in
stos
outsl
or
mov
push
pop
imul
sbb
in
push
ja
push
enter
push
pop
popf
adc
mov
sbb
loope
fnstenv
cld
inc
xchg
xchg
xor
shrb
fildl
sub
push
scas
pushl
faddl
gs
xlat
lcall
rorb
ret
xchg
add
outsl
lcall
hlt
fiaddl
hlt
pusha
xchg
jne
gs
adc
sbb
jge
mov
cmpsl
fistl
mov
cmpsl
in
mov
fildl
xor
in
insl
les
les
xchg
out
inc
sub
mov
orl
adcl
ss
jae
insb
nop
cmp
jge
aaa
mov
add
xchg
fucom
in
daa
push
pop
jg
flds
movl
xchg
sub
or
inc
or
or
enter
or
add
dec
sub
and
dec
mov
in
push
sahf
rcrl
xchg
sbb
lods
mov
adc
inc
repnz
jle
arpl
div
repnz
jnp
mov
adc
mov
arpl
lahf
mov
imul
cmp
inc
or
cmpl
loope
cmp
rcll
scas
cmc
and
push
mov
xchg
divb
mov
push
outsl
in
push
cmp
push
jp
sbb
push
leave
ret
dec
ret
rorl
dec
sub
or
xor
test
sub
loope
roll
mov
mul
push
pop
nop
dec
std
rorb
inc
cmp
notb
fistl
mov
mov
out
insb
push
dec
mulb
add
cmpsl
in
loopne
test
dec
add
call
mov
mov
inc
push
stos
cmp
shl
loopne
sahf
push
scas
mov
jmp
mov
or
xor
mov
iret
jnp
or
call
mov
cmp
xor
jecxz
mov
pop
fistl
call
arpl
cmp
push
dec
adc
test
mov
mov
stos
aam
inc
add
lahf
push
dec
cwtl
lods
mov
movsl
push
orl
pop
add
int3
add
fnstsw
rclb
adc
test
mov
sbb
and
notb
mov
aaa
add
jp
adc
and
jge
movsb
fs
in
pop
popf
add
xor
sbb
fwait
dec
mov
sbb
insl
outsl
je
lret
xchg
inc
pop
call
and
pop
adc
xchg
inc
or
adc
ficompl
nop
cwtl
sbb
nop
mov
push
loope
jnp
or
mov
mov
insb
pop
push
sub
jns
sbb
out
jno
or
add
addr16
into
popa
neg
mov
test
adc
dec
jbe
mov
in
mov
and
in
in
scas
xchg
fdivrl
mov
push
or
mov
or
mov
mov
xor
hlt
subl
adc
xchg
insl
js
cli
jne
jmp
sarb
mov
jo
push
adc
aad
lock
adc
fsub
xchg
xor
inc
insl
aas
sbb
and
dec
sub
inc
scas
cmp
test
test
push
aad
imul
mov
nop
sub
orl
int3
outsb
scas
mov
or
mov
dec
je
lock
in
je
insb
leave
loopne
jno
sub
push
add
jp
loopne
cmp
jmp
cmp
and
shrb
inc
arpl
mov
adc
cmc
lea
xchg
popf
fsub
mov
and
pop
popl
pop
pop
mov
lods
fwait
mov
cmpsl
dec
adc
test
add
xlat
icebp
or
out
add
push
mov
ljmp
mov
inc
sub
cmp
push
jg
sbb
cmpsl
outsb
stos
mov
int
icebp
inc
nop
cmovge
daa
rclb
mov
inc
lret
clc
push
gs
mov
cli
imul
stos
dec
push
mov
lods
and
testb
fisubrs
dec
movsb
aad
pop
iret
ss
fstl
sbb
xchg
lds
cmp
push
cmp
ficompl
xor
jns
push
hlt
mov
stc
int
inc
clc
in
mov
xor
pop
xchg
mov
repnz
ljmp
xchg
imul
in
aad
ret
fnstsw
sub
cmc
pop
repnz
movsl
dec
jae
push
adc
imul
dec
mov
mov
ljmp
idiv
xlat
mov
push
jo
sbb
cwtl
push
dec
test
push
cli
xchg
mov
add
push
jl
xchg
jge
stos
daa
sub
push
das
mov
movsl
out
lds
mov
mov
sub
clc
xchg
mov
push
outsb
mov
and
dec
pop
repz
sahf
mov
icebp
push
adc
cmp
add
or
jle
jp
inc
cmpsb
and
imul
jb
fstpl
or
or
sub
rolb
adc
push
cli
loopne
stc
mov
arpl
aas
inc
push
mov
jp
nop
jb
pop
daa
and
daa
jl
and
or
or
cmc
and
cmp
pop
xor
dec
out
not
sbb
mov
loopne
dec
movsb
out
clc
les
xor
mov
pop
in
and
adc
push
sbb
andb
js
mov
je
jl
mov
fsubr
es
aas
lcall
mov
int3
mov
fimull
int
pop
add
mov
popa
ss
call
jb
sbb
cli
xor
pop
jno
lea
xor
jae
shrb
out
or
adc
sbb
movsb
add
test
sti
and
jge
push
xor
or
inc
xor
mov
push
and
out
out
adc
outsb
ljmp
nop
mov
das
push
ficoms
xor
ja
daa
es
jb
scas
cmc
dec
setbe
fldcw
add
ds
xor
es
aam
movsb
imull
lcall
sub
adc
lds
xor
jns
jecxz
mov
jo
push
mov
mov
xor
lcall
cmpsl
jecxz
ret
in
xchg
sbb
mov
clc
mov
pop
nop
inc
jae
je
xor
xlat
push
adc
push
push
sub
sub
cltd
jle
push
mov
stos
popa
mov
xor
shr
sbb
mov
lret
add
je
jge
jae
cli
aam
int3
sbb
cld
mov
fs
int
andb
cmp
jne
icebp
sti
cmpsl
lds
adc
inc
loope
adc
cmp
fsubs
ds
mov
lahf
pop
shll
xor
mov
push
js
cmp
mov
adc
shlb
jae
mov
call
xchg
stc
es
frstor
sahf
cmp
insb
adc
call
sbb
inc
into
push
shlb
add
movb
cld
out
mov
idivl
outsb
addr16
mov
fdivs
aad
call
xchg
lea
lds
push
andb
or
xor
dec
js
mov
push
js
mov
inc
shlb
push
mov
jg
lods
push
loope
add
push
fwait
lods
inc
add
lcall
imulb
mov
std
adc
pop
scas
pop
fwait
stc
mov
ret
jmp
test
push
jbe
std
xchg
pop
test
ljmp
stc
and
mov
pop
jp
sbb
add
cli
pop
lock
jmp
xchg
xor
inc
or
push
push
or
push
or
xor
enter
mov
dec
xchg
add
mov
mov
popf
jle
push
std
dec
xchg
ret
push
or
icebp
cld
fcom
cwtl
rcrb
sbb
fsubs
and
lea
mov
or
sbb
imul
inc
loopne
add
or
mov
sub
aas
test
sbb
arpl
push
dec
add
dec
or
push
dec
lcall
push
data16
or
scas
orb
fldcw
and
enter
ficomps
fsubrs
cmp
into
mov
or
push
mov
pop
ret
pop
lret
add
mov
mov
out
xlat
movsb
or
cwtl
mov
js
add
mov
aam
push
cltd
inc
dec
hlt
and
popw
insl
fidivs
sub
out
int3
nop
and
push
jp
add
mov
mov
xchg
inc
ss
daa
and
int3
and
mov
pop
movsl
cmc
out
aaa
in
test
loope
inc
jge
push
leave
outsb
push
call
movsl
pop
imul
mov
pop
lock
mov
dec
dec
dec
cmp
cmc
add
mov
xor
sub
pushf
pop
push
adc
and
jae
mov
nop
xchg
loopne
xor
dec
scas
sahf
mov
sbb
mull
sar
ds
dec
pushl
mov
in
pop
xor
sbb
enter
stos
add
adc
stos
fldcw
mov
jbe
ret
bswap
and
loope
push
loop
mov
repz
dec
rol
into
pusha
adc
fs
mov
dec
sbb
ljmp
inc
push
fimull
in
lahf
ja
adc
xor
pushf
or
fwait
mov
xchg
cmp
xlat
es
mov
stos
pop
inc
stos
lods
iret
jl,pt
push
mov
data16
imul
pop
xchg
filds
popl
lret
xor
xchg
jp
cmp
jne
pop
mov
cmc
xor
add
add
mov
out
lahf
xchg
lret
pop
std
les
js
insb
insb
mov
lock
in
clc
cltd
inc
mov
lods
into
xlat
inc
popf
and
lea
aam
dec
call
test
fidivs
clc
adcl
mov
xorl
jae
xchg
and
in
pushl
lea
sbb
or
pop
shrb
push
pop
sbb
loope
mov
aam
mov
rorl
aas
dec
les
in
dec
scas
add
out
pop
cwtl
xor
jae
and
loopne
aam
sbb
xor
mov
mov
les
jo
mov
fldcw
and
aad
sti
scas
and
fs
fcmovbe
fdivr
pop
dec
xlat
add
cli
xor
lock
xor
outsb
add
inc
sbb
clc
mov
rcrl
sub
hlt
mov
aam
int3
subb
dec
test
push
popf
das
hlt
lods
bound
or
sti
pushf
mov
dec
inc
js
push
das
popl
push
cmp
adc
or
testl
push
or
xchg
cmp
and
push
cmp
lahf
sub
push
inc
fucomip
xor
sbb
mov
movsl
daa
inc
insl
dec
popa
mull
sub
ds
xor
orl
cmc
and
adc
pusha
sti
cmp
pop
add
sub
adc
lock
icebp
mov
cmp
hlt
jbe
or
andb
cmp
fidivrs
and
cmp
outsb
repz
jle
push
pop
inc
xor
fnstsw
pop
outsl
add
scas
fildl
das
sub
inc
mov
cmp
dec
loope
sub
pushf
mov
xlat
push
jecxz
push
inc
xor
push
mov
inc
inc
sbb
fildll
adcl
jae,pt
sti
mov
ret
add
scas
xchg
pop
sbb
lods
sarb
daa
inc
pop
call
push
orl
add
stos
scas
ret
mov
cmp
sbb
loop
push
movsl
idivl
cld
or
js
push
mov
jne
sub
dec
and
imul
loope
incl
or
mov
int3
adc
or
leave
jge
xchg
jo
jmp
rorb
push
pop
insl
cmp
loop
xor
pop
aam
cmp
mov
sub
jle
pop
sbb
cmp
out
sbb
push
adc
push
out
dec
je
sahf
xchg
push
loope
pop
js
ljmp
jg
jnp
lret
push
fnstsw
push
iret
and
mov
sbb
les
jbe
add
or
jmp
and
mov
or
xor
pop
cmp
popf
sbb
xchg
lcall
cli
cli
fcomps
sub
or
in
scas
and
ja
pusha
adc
in
adc
ss
div
out
pop
pop
dec
or
imul
pop
mov
cs
test
call
bound
in
add
daa
jg
mov
sub
mov
insb
fwait
das
lods
rolb
xchg
fimull
loopne
cmp
mov
test
movsb
into
mov
xchg
imul
fldt
insb
shll
cld
into
mov
js
cmc
dec
pop
daa
imull
adc
das
fiaddl
cld
bound
xor
cld
movsl
dec
jo
push
jecxz
aas
out
sbb
jno
stos
pop
testl
repnz
jg
sbb
cmp
cmp
and
xchg
lea
and
pop
popa
mov
lret
sahf
push
jge
sbb
into
mov
dec
shrl
or
mov
mov
inc
mov
jg
stos
push
imul
jb
sahf
push
adc
mov
clc
xchg
in
mov
add
adc
pop
incl
push
add
jo
inc
mov
jl
ss
push
ret
loopne
into
nop
das
idivb
sbb
inc
jp
iret
jb
outsl
mov
rcr
nop
mov
adc
dec
cmp
jo
repnz
cmp
insl
in
add
js
add
int3
cmpsb
bound
inc
test
xor
out
out
sbb
pop
inc
dec
jle
jmp
pop
mov
pop
mov
je
xor
xor
push
dec
or
rol
int3
cmpb
add
ffreep
push
xchg
pushf
adc
fildll
dec
jno
popa
aas
pop
fsubrs
add
movsb
adc
and
pop
stos
std
sbbl
cli
test
in
mov
sahf
jo,pt
push
shll
nop
push
pushf
add
xor
push
and
stc
dec
outsb
icebp
jno
jb
out
movsb
mov
sbb
mov
pushf
add
xchg
outsb
js
pushf
stc
pop
or
fisubs
or
add
js
test
add
movlps
sub
adc
xlat
test
pop
insl
rcr
std
ljmp
testl
test
xchg
and
movsl
inc
xchg
cwtl
dec
jns
jp
sbb
pop
push
xor
mov
push
jge
inc
aas
or
cs
mov
push
stos
jae
out
jg
cltd
js
clc
pop
dec
jle
pusha
xor
and
add
je
gs
push
rorb
cld
shrl
pop
clc
test
xor
add
ds
cmp
inc
lar
mov
bound
ljmp
pop
push
repz
jecxz
cmp
outsb
rcl
jne
ret
mov
mov
pop
mov
jb
jbe
jge
sbb
add
mov
call
shr
dec
or
ljmp
inc
and
dec
cli
mov
imul
or
sbb
mov
push
add
add
aas
cmpsb
and
cmpsb
pinsrw
adc
es
mov
es
aad
lahf
mov
dec
add
rcr
aas
mov
sub
stc
xchg
pop
test
push
popf
rcrb
loope
jmp
xorl
adc
mov
fsub
add
push
les
imul
or
xor
shl
or
inc
stc
xchg
xor
dec
mov
dec
ret
fwait
pop
sbb
push
or
inc
ret
out
mov
jecxz
outsb
xchg
dec
sbb
sbb
inc
lods
outsb
in
jno
stos
shll
adc
and
jge
adc
dec
jae
jno
int3
mov
bound
aas
cmp
stos
inc
test
or
ret
lret
imul
rorb
fiadds
enter
clc
aam
inc
and
adcb
ja
add
fdivp
mov
nop
stos
dec
stos
jg
inc
or
pop
leave
mov
mov
outsb
sarb
sub
mov
xorb
and
jle
popf
cli
cmpsb
xor
je
xor
lret
jb
fcmovu
mov
test
xchg
leave
cmp
das
xchg
mov
inc
xchg
mov
std
sub
cli
xchg
jp
xor
push
aaa
incl
pop
insl
pop
cmp
loopne
popa
or
xchg
pop
fbld
xchg
and
loop
sbb
mov
lea
int3
shr
fdivrl
adc
testb
mov
pop
mov
xor
int
pop
push
jne
lods
mov
cwtl
out
xchg
push
stc
test
movsb
testb
aam
loop
mov
pushf
pop
sub
rclb
lods
addl
sti
hlt
inc
mov
shll
clc
or
mov
jl
mov
jmp
xchg
push
incb
inc
test
sbb
lods
push
mov
cli
jne
inc
lret
cli
je
push
and
or
nop
add
sbb
push
pop
push
mov
test
out
mov
movsb
es
das
lcall
hlt
imul
push
inc
or
rcrb
loope
fwait
rol
sub
mov
add
mov
xchg
fnsave
loopne
and
mov
bound
loope
jns
mov
outsl
out
sahf
movsl
dec
jecxz
add
xor
pop
enter
dec
movsb
xorl
inc
add
push
sbb
lahf
push
movsl
mov
sbb
adc
add
mov
or
roll
lods
lret
in
jno
and
lds
add
pop
inc
push
mov
add
xchg
cwtl
cli
jge
adc
into
bound
sub
push
and
push
mov
arpl
mov
pop
mov
fisubrl
popf
ret
rcrb
inc
mov
push
push
scas
decl
lret
sbb
cwtl
add
or
inc
or
jo
std
aaa
cwtl
dec
sbb
and
decl
adc
lret
daa
push
movb
insb
jp
arpl
mov
inc
ficomps
mov
pushf
out
data16
inc
lock
jg
sarb
adc
fisttpl
lahf
gs
pop
lock
out
test
push
insb
cmpsb
mov
push
cs
add
inc
aam
push
adc
call
and
cmpsl
lcall
insb
vmovddup
xchg
out
movl
adc
lcall
adc
das
adc
imul
cmp
ljmp
dec
cmp
mov
lods
lcall
jge
cmp
sub
int3
push
test
or
sub
jb
data16
adc
adc
mov
sbb
add
pop
xor
jle
stos
aam
pop
testb
pop
cwtl
mov
fiadds
push
rorb
sub
sbb
adc
sub
add
or
mov
lods
add
fsubrs
adc
adc
and
loopne
mov
ja
inc
dec
adc
push
mov
jle
mov
ljmp
scas
cltd
test
or
dec
dec
or
daa
mov
or
in
dec
add
cmp
int
das
dec
ljmp
mov
das
mov
jg
shrb
pushf
mov
mov
repnz
mov
popl
ss
or
hlt
xor
nop
adc
push
and
fwait
mov
movsl
test
xchg
push
add
in
add
jnp
dec
xor
lock
aaa
add
in
or
dec
scas
fcomps
add
aam
shlb
and
fidivl
sbb
stc
int
lcall
xor
dec
ss
bound
sbb
pop
in
mov
into
dec
dec
sbb
rol
sub
rcrb
push
insb
mov
sub
lock
adc
ret
lds
cld
jb
insb
inc
in
inc
and
adc
jnp
jp
stc
lea
mov
pusha
add
xchg
out
and
xor
je
mov
cwtl
adc
neg
scas
adc
fldt
fs
adc
cmp
fnstcw
pusha
das
ret
jp
inc
pushl
ds
push
xor
mov
adc
addr16
pusha
or
dec
pop
xchg
xchg
ja
je
jmp
sbb
fcoml
push
or
dec
ret
ret
scas
push
outsl
int
inc
add
fsubrs
arpl
xchg
out
jecxz
jmp
mov
movsb
mov
mov
repnz
js
es
inc
pop
test
sbb
je
sub
ja
test
add
ljmp
shlb
push
inc
pop
sbb
and
enter
mov
and
fistps
mov
mov
les
repz
stos
and
cld
aam
nop
dec
or
shrb
or
mov
pop
cli
xor
jno
and
mov
mov
or
jle
mov
mov
sarb
push
lds
fsubrp
fsubrs
outsl
or
push
inc
jo
or
mov
stc
inc
sub
leave
push
cmp
jg
add
cmc
jecxz
and
sub
xor
hlt
add
mov
repnz
cld
pop
loopne
push
ljmp
pminub
test
test
outsl
out
movsl
lods
add
sub
aas
ds
jb
push
repz
xor
test
add
fadd
scas
inc
dec
repz
lods
clc
roll
mov
mov
insl
pop
lock
icebp
adc
shll
testb
sbb
scas
add
xchg
add
aas
dec
aas
in
xchg
sbb
xor
add
mov
addr16
inc
test
aam
mov
loopne
inc
pop
frstor
daa
cltd
adc
dec
and
xorb
icebp
mov
fwait
mov
and
pop
push
js
pop
fs
xchg
push
sub
jl
loope
call
bound
push
mov
cmp
ret
test
mov
sbb
fdivr
xchg
jo
testl
push
arpl
dec
mov
push
loop
or
cmp
xchg
hlt
sbb
or
test
adc
fiadds
xchg
rclb
fildll
add
rolb
fldl
in
fdivrs
sbb
mov
xchg
movsb
mov
rorl
pop
in
sub
sbb
mov
push
add
loop
or
js
imul
lret
inc
pop
xchg
add
enter
push
fwait
cli
cmpb
push
test
cmc
or
sub
cld
cmp
fstl
pop
pcmpeqb
inc
push
adc
aaa
lock
add
in
sbb
add
icebp
xchg
les
aaa
test
loopne
enter
xor
ret
inc
sub
and
xor
mov
and
sub
scas
imul
pop
xchg
pop
fs
aas
call
adc
cmp
mov
pop
push
cmp
insb
jae
scas
test
out
inc
push
mov
push
xchg
inc
jne
arpl
test
cmp
or
inc
loopne
push
push
shrb
push
hlt
paddq
mov
dec
sub
fcoml
push
inc
inc
dec
jecxz
shrl
ret
jbe
shrb
dec
in
push
ja
mov
mov
push
xchg
aam
adc
lds
mov
xor
or
and
mov
addl
fists
or
xchg
and
and
mov
dec
mov
out
incl
push
push
adc
mov
pop
pop
pop
pop
inc
loopne
lds
inc
xor
mov
mov
jb
into
jecxz
pop
sub
fs
repz
shrb
sub
mov
ss
jl
idivl
mov
mov
push
xorl
cmpsb
adc
sbb
dec
or
out
and
addb
mov
pop
shrb
jle
mov
fisubrl
loop
adc
xchg
pop
scas
sub
inc
sbb
std
jle
cmp
fwait
and
push
and
aaa
xchg
shll
stos
in
mov
push
call
lea
test
je
add
jne
push
cwtl
push
dec
jnp
or
add
mov
or
aaa
or
pop
and
push
cmpsl
mov
test
jp
mov
adc
cmp
test
mov
dec
adc
push
mov
cmp
xchg
cmp
jmp
jle
xchg
std
lods
xchg
jle
jb
xchg
ss
daa
pop
jo
hlt
shll
in
and
sahf
sbb
xchg
outsb
ds
loop
xor
ret
mov
and
nop
ficoms
push
fs
or
cmp
lret
mov
xchg
sahf
aad
mov
push
fwait
xor
std
imul
mov
mov
add
mov
rorl
inc
lock
dec
dec
fwait
xchg
push
adc
and
jno
std
test
nop
lds
sbb
stc
cs
xchg
test
sub
and
ljmp
jns
lods
andl
inc
adc
sbb
fistpl
or
mov
cmpsb
and
xorl
xor
mov
negb
fsubrs
mov
inc
ds
shlb
sbbl
pop
push
adc
inc
bound
add
cmpsl
pop
shrb
mov
popl
and
fdivrs
or
add
inc
aaa
jle
fwait
dec
in
mov
inc
sub
add
aas
sub
icebp
pop
outsl
add
mov
mov
jp
cmp
int3
cli
lret
jne
mov
xor
xor
loopne
or
pusha
dec
cmp
mov
je
imul
ja
add
mov
outsb
ss
jecxz
add
add
loopne
mov
hlt
pop
jecxz
sbb
xchg
shl
in
mov
rcrb
dec
jge
fwait
scas
mov
lds
rorb
jo
sbb
popa
add
arpl
mov
mov
mov
xchg
into
cwtl
push
movsl
outsl
jg
push
in
in
lret
mov
jo
adc
hlt
outsl
xchg
mov
mov
cmp
data16
sub
in
sub
subb
jge
add
or
pop
jg
js
rorb
and
adc
sub
mov
subb
jbe
das
subl
dec
mov
cmp
push
loop
mov
xchg
int
mov
fisubs
dec
insl
pop
sbb
adc
jnp
lock
sbb
inc
mov
aad
in
neg
adc
lcall
fwait
inc
clc
xchg
cltd
fs
ds
subb
add
dec
mov
mov
loopne
es
lret
sbb
mov
inc
dec
xchg
xor
gs
jecxz
ja
mov
push
mov
les
fldl
fsubrl
adc
mov
cmp
dec
bound
pop
out
movsl
or
sahf
xor
flds
jp
and
jg
outsb
push
cli
out
ja
jle
call
inc
add
or
dec
pop
mov
leave
jle
push
and
loope
mov
je
push
je
fsubrs
mov
xor
in
fimuls
fcompl
call
push
mov
mov
mov
das
xchg
scas
cwtl
or
inc
icebp
dec
into
aaa
out
mov
cvtps2pi
xor
pop
shrb
mov
push
and
addr16
mov
fmul
in
aas
or
pop
orl
push
lcall
sub
hlt
aas
fcomip
inc
test
mov
and
or
test
adc
loope
inc
scas
xchg
fld
outsb
pop
push
pop
hlt
fcomps
push
jge
iret
cmp
push
test
push
jnp
int
clc
add
mov
into
cmp
sub
pop
push
push
fcompl
sbb
cmp
lods
pusha
insb
jmp
bound
mov
inc
decb
adc
and
sub
stc
cmp
das
pop
outsl
outsl
rol
add
lahf
cmp
add
dec
loope
inc
aad
adc
inc
pop
push
inc
clc
push
mov
pop
andb
sub
leave
arpl
and
ja
xor
sbbl
xchg
shrb
notb
xchg
adc
mov
mov
push
xchg
icebp
nop
jl
jl
push
pushf
dec
cmp
sahf
mov
mov
mov
push
out
push
push
sbb
mov
adc
bound
or
rcrb
pusha
sbb
ljmp
pop
dec
push
pop
or
pop
adc
add
adcl
outsb
ss
lock
dec
xor
xor
lea
fcmovnu
jg
jns
test
aad
xor
ficompl
xchg
add
test
sbbb
pushf
sbb
and
cli
in
loop
add
popf
push
testb
dec
mov
nop
sub
or
cwtl
jle
mull
fmul
cmpsb
push
sbbb
sub
add
gs
mov
push
outsb
push
jnp
xchg
jg
loope
jle
ds
adc
jb
mov
les
lahf
inc
xlat
out
mov
xor
lock
orl
dec
ret
hlt
incb
test
int3
in
pop
leave
pop
data16
int
pop
clc
ret
insb
jbe
cmp
or
les
mov
cmpsb
lods
and
not
lret
adcb
cmp
sbb
fdivr
sarb
test
mov
fnsave
xor
mov
dec
ds
movsb
and
jl
cmpsl
clts
xorl
jmp
cmc
repnz
inc
stc
and
mov
fsubrs
push
jb
adc
xchg
aaa
popa
jp
mov
mov
push
mov
dec
les
adc
hlt
add
ljmp
cld
and
push
lret
dec
testl
sub
pusha
xchg
enter
add
lahf
mov
sbb
pop
sub
push
sbb
xchg
push
xlat
adc
push
cld
lret
pop
pop
mov
mov
clc
inc
mov
add
outsl
ds
jb
dec
adc
loopne
scas
mov
fsubrs
mov
and
mov
lahf
rolb
sbb
dec
shrl
sbb
out
rol
cmpsb
xchg
adc
scas
es
mov
aas
sbb
into
js
and
or
test
jbe
stos
push
daa
and
push
and
ljmp
adc
mov
inc
adc
jp
sbb
outsb
and
ss
inc
and
lcall
pop
lods
stos
ret
push
rol
lcall
sub
dec
mov
nop
cmc
and
cmp
mov
sbb
ret
les
sti
js
stos
or
push
mov
pop
pop
add
pusha
test
pusha
cmp
add
lcall
nop
push
loop
movsb
fs
and
or
lock
repz
sub
push
inc
lock
aas
lret
sub
cmp
adc
hlt
sbb
std
andl
pop
push
pop
pushf
addr16
dec
movsb
adc
xor
andl
xchg
jo
mov
orl
test
mov
and
movsb
jg
lock
add
mov
scas
mov
lods
cmp
dec
ret
add
lea
adc
cmp
dec
clc
inc
inc
les
inc
jb
ret
inc
shlb
inc
loope
adcl
pushf
into
int3
inc
aad
les
dec
test
push
mul
xor
mov
inc
or
aas
mov
push
cs
and
clc
repnz
jne
notb
add
xchg
fiaddl
cld
mov
xchg
rorl
cwtl
and
pop
or
pop
in
xchg
jnp
sbb
push
sbb
lahf
cmc
adc
inc
jno
imul
and
cmp
int
adc
jo
hlt
shl
push
dec
inc
test
add
loop
adc
pop
nop
lods
inc
sbb
fidivs
mov
lahf
fs
jb
cmp
adc
orl
push
ret
and
lods
mov
rcrb
sahf
je
jg
or
in
push
mov
pop
mov
cmc
sahf
pop
les
ficoms
push
add
test
fistl
test
addr16
pusha
push
pop
lds
jg
ret
cmc
add
xchg
aaa
pusha
test
stos
pop
and
imul
es
add
orb
cmp
mov
xor
push
and
test
adc
mov
dec
sahf
mov
nop
xchg
mov
push
addb
in
div
ret
lahf
mov
inc
in
or
dec
rcll
sub
add
xor
shlb
push
aam
jp
idivb
shl
sub
xchg
add
std
je
std
add
sbb
pop
adc
stos
outsb
jl
push
and
loopne
push
mov
mov
addr16
inc
xchg
daa
cmp
ja
mov
aam
mov
js
pop
cmp
sahf
movsl
dec
lea
add
mov
les
push
loopne
dec
cs
fdivrp
sbb
dec
mov
xor
jb
and
dec
fldl
pop
adc
mov
insb
xor
ss
sub
mov
xchg
xchg
imul
in
aam
iret
cmp
in
xlat
shr
inc
add
xor
pop
jmp
das
or
iret
and
cmpl
cmp
mov
or
push
popl
movsb
icebp
or
stos
inc
addl
lock
or
inc
sub
cmp
push
insb
mov
icebp
xor
or
pop
pop
fisttpll
or
mov
ret
push
mov
dec
mov
pop
push
ljmp
ret
push
jg
in
subb
out
in
sub
outsl
inc
cltd
mov
repz
lods
pop
add
nop
add
push
das
jns
shrl
inc
inc
fildll
push
inc
ret
cwtl
or
lods
cmpsl
mov
hlt
int3
xorb
inc
adc
push
inc
les
push
mov
mov
ja
add
aas
jl
cmpsb
or
pusha
push
xor
inc
iret
lea
dec
loop
mov
ret
pop
ret
cmp
push
mov
cs
mov
movsb
insl
psraw
jecxz
jo
stos
mov
insb
movsl
mov
jecxz
sbb
push
jnp
sbb
cmp
shll
pushf
lods
sub
add
xchg
stos
dec
push
jb
mov
mov
clc
jnp
adc
pop
xchg
pop
sbb
sbb
fdivrs
js
mov
in
orb
dec
test
cli
popa
imul
sbb
mov
push
insb
dec
sbb
ret
mov
inc
mov
fldl
out
pop
sub
cmpsl
add
test
pop
mov
pop
push
sar
fists
mov
sbb
or
lret
jb
xor
call
cmp
in
stc
push
rorb
repnz
mov
jb
fsubs
test
and
bts
add
dec
cmp
aad
mov
fstp
dec
mov
dec
add
adc
repnz
jg
sub
or
pop
pop
add
mov
imul
enter
scas
pop
push
shlb
or
call
pop
inc
out
push
xlat
dec
add
js
push
cmp
inc
mov
sub
jl
pop
loope
xchg
or
stos
scas
mov
adc
dec
jmp
xchg
mov
xchg
rcrl
push
dec
ss
or
nop
jp
jecxz
push
adc
nop
sarb
xchg
js
jbe
dec
and
lock
adc
adc
lock
ret
mov
enter
or
push
push
lods
jmp
lea
adc
adc
pop
xchg
in
mov
loop
xor
pop
push
sahf
add
adc
repnz
mov
jmp
sub
dec
cmp
xchg
ds
sbb
pop
cmp
xchg
aad
cmpsl
aas
jns
add
or
je
sub
icebp
fistpl
stos
outsb
loopne
xchg
lods
rcll
mov
in
mov
or
fdivl
jp
fwait
xchg
stos
inc
repnz
pop
mov
mov
push
rorb
jns
pop
clc
and
rol
ud2
jnp
ja
and
shl
aas
stos
mov
and
push
push
push
cmp
cmp
xchg
fldt
inc
inc
pop
push
mov
push
sub
mov
mov
jo
push
outsl
and
xchg
sarl
jmp
fsubs
xor
push
gs
test
je
fdivs
sahf
icebp
int3
aam
xor
jnp
shlb
adc
or
hlt
dec
cld
xor
sarb
and
in
mov
jecxz
cmp
mov
push
ficoml
sbb
outsb
cmpsb
movsb
cld
pop
insl
inc
orb
jl
loopne
mov
adc
push
jo
cltd
daa
icebp
mov
stos
subb
mov
mov
mov
push
adc
sar
sbb
test
outsb
sbb
sub
inc
clc
fldt
test
ret
addr16
adc
mov
cltd
sahf
pop
fcmovu
mov
orb
test
dec
loop
sbb
jnp
scas
andl
xor
adc
push
and
in
out
aaa
xchg
sbb
mov
add
jo
push
add
push
or
inc
cmp
decl
fadd
add
in
push
and
adc
in
push
bound
xchg
push
pop
mov
lock
lods
mov
cld
jo
jmp
rcrb
rorb
push
ret
adc
sub
rclb
lock
adcl
push
push
sub
xor
pushf
push
cli
dec
jbe
iret
mov
insl
int3
adc
sbb
pop
ja
test
aaa
mov
push
add
or
out
insl
add
xchg
or
lcall
jp
xorb
adc
loope
pop
stos
xchg
cwtl
cli
jbe
sbb
rclb
jae
and
push
out
test
xchg
lcall
xor
add
adc
and
pusha
jg
fmuls
icebp
mov
add
cli
mov
and
xor
xchg
mov
out
int3
push
ja
and
adc
inc
dec
rclb
scas
int3
js
in
xchg
xor
mov
std
loopne
mov
je
arpl
aam
lods
push
xor
cmp
xor
insb
mov
out
jp
and
xor
scas
add
adc
and
sbb
leave
outsl
or
xchg
cmp
jge
inc
sub
pop
stos
lock
cli
and
orb
iret
in
sbb
push
add
ficoms
sahf
cmp
xchg
cmp
inc
xchg
mov
fsub
imul
orb
rcr
mov
xchg
repz
or
dec
mov
push
cld
jo
loope
jmp
lods
and
and
or
xor
out
aaa
and
jge
jmp
or
add
mov
cwtl
jl
xor
hlt
jmp
jmp
cmp
push
js
and
push
xor
ret
sub
icebp
test
imul
mov
loopne
jge
mov
das
mov
sbb
inc
xor
bound
or
lahf
jg
out
sti
into
inc
je
fs
jns
ret
into
enter
stos
out
sbb
hlt
mov
or
sub
cmpsl
cwtl
push
ljmp
jns
nop
sbb
push
fcmovnbe
bound
mov
mov
xchg
add
scas
or
ret
mov
adc
test
and
mov
and
in
add
pusha
inc
dec
xchg
push
aam
pop
les
mov
cmp
cld
loope
or
clc
enter
cmp
movsb
mov
cmp
cmp
stos
cmpsl
cmpl
aas
mov
push
std
push
imul
jge
mov
shlb
mov
cli
push
fdiv
push
lods
jle
stos
lcall
xchg
mov
ja
xchg
pop
cmp
lock
mov
inc
nop
cmp
pop
and
push
mov
adc
cmpsb
test
inc
xorl
mov
adc
cmp
adc
lahf
push
stc
mov
mov
inc
ds
lea
hlt
adc
cmp
jge
into
mov
movsl
lods
insl
repz
mov
adc
mov
lahf
jle
push
sbb
std
jbe
sub
imul
cld
or
push
pop
dec
cmpxchg
divl
sbb
fs
subb
jae
xchg
mov
sbbl
fwait
mov
and
inc
inc
push
ficompl
rorl
fcmove
test
repz
xor
and
lock
push
outsb
or
adcl
push
adc
orb
cmp
push
loop
cmp
jl
outsl
clc
push
xor
dec
into
mov
bound
pop
lea
or
pop
loope
xchg
loopne
lea
cmp
inc
out
lahf
adc
data16
hlt
or
push
loopne
or
test
inc
push
out
add
nop
imul
inc
push
mov
jg
lods
mov
pop
or
xor
ret
shll
xor
scas
mov
lahf
ds
pop
or
mov
fimull
add
push
pop
lods
and
and
sub
hlt
cmp
jg
xchg
sbb
data16
daa
push
xchg
in
sbb
xor
cwtl
mulb
loopne
mov
gs
insb
xchg
aam
xadd
ret
pop
dec
cmp
mov
mov
rorb
das
mov
add
sbb
idivb
mov
rcll
aam
aad
popf
push
mov
sub
adc
mov
sti
out
fabs
js
mov
ljmp
or
and
lds
outsb
xlat
popa
fsubs
adc
mov
lret
aas
pop
push
testl
jp
mov
cltd
inc
push
shr
sub
mov
mov
inc
mov
mov
sub
inc
popa
and
shrb
stos
xchg
mov
lods
push
sarb
dec
xchg
mov
mov
movsb
mov
pushf
and
les
push
xchg
sbb
fstpl
adc
xchg
dec
add
lock
ss
rorb
push
movsb
out
into
xor
pop
jo
add
xor
add
jecxz
adc
shll
ljmp
pop
lods
movsb
test
inc
pop
inc
shrb
pop
loopne
dec
cmp
and
cmpsb
pop
fiaddl
in
jmp
insb
push
addb
ds
lea
xor
sbb
icebp
adc
shr
lcall
xchg
icebp
adcb
add
sbb
repz
jmp
sbb
dec
sub
shl
or
comiss
mov
test
loopne
sarl
test
js
adc
pop
lcall
cmp
jl
adc
ja
fidivrl
addr16
sub
roll
cmp
nop
pop
nop
insl
jmp
inc
sub
movsb
jo
fmulp
js
or
dec
dec
add
test
in
ljmp
shlb
and
jp
mov
shl
mov
xchg
and
cmc
call
imul
je
and
outsl
mov
or
mov
shll
cmp
fidivrl
sbb
adc
clc
add
fsts
dec
pop
loop
adc
lods
bound
inc
es
insb
mov
mov
int
add
push
lods
jp
rcll
and
push
or
outsb
xorb
mov
xor
inc
xor
fimuls
lds
or
push
loopne
dec
cld
jae
inc
lods
je
mov
push
fimuls
dec
jl
dec
inc
fs
sti
push
or
inc
loopne
jno
pop
dec
hlt
aas
push
mov
lcall
bound
sub
mov
add
dec
call
dec
jmp
mov
ljmp
inc
add
cmpsl
pop
mov
mov
clc
ret
inc
test
pushf
pusha
rep
push
xor
int3
inc
aam
add
dec
pop
mov
push
push
lds
loope
call
fwait
dec
adc
push
test
sbb
in
fs
pop
adc
xor
inc
js
icebp
lock
sbb
aad
mov
jnp
xor
inc
adc
js
fildll
add
or
or
out
xchg
aam
inc
imul
loop
dec
push
and
mov
adc
hlt
or
subb
jbe
imul
inc
xor
fdiv
and
hlt
push
loop
icebp
inc
sub
out
mov
int3
sbb
or
mov
nop
or
rclb
pop
fmul
outsb
add
fimull
fstpt
cmpsb
and
dec
xor
outsl
outsb
in
mov
in
pop
mov
jl
adc
xchg
cld
pop
ljmpw
fdivr
pop
jmp
rcrb
push
adc
pop
mov
jg
scas
mov
mov
cmpsl
in
jb
lahf
add
stos
sub
or
loope
or
sbb
push
jnp
loop
enter
lcall
adc
sbb
push
scas
add
gs
or
or
iret
pop
cld
rclb
mov
push
dec
fisttpll
adc
dec
inc
scas
push
pop
sub
or
pop
or
mov
pop
sarl
cmpsb
xchg
sahf
and
inc
imul
and
cmp
fwait
repnz
and
imul
into
mov
mov
jno
xchg
inc
lahf
clc
sbb
xchg
mov
inc
mov
movsl
shlb
push
push
loopne
add
adc
dec
cld
mov
in
test
add
jmp
inc
inc
xlat
addl
mov
xor
stos
and
dec
andl
push
mov
adcb
push
or
in
test
fldl
mov
dec
push
and
mov
decb
pop
xchg
pop
movsl
pop
js
push
push
mov
xlat
mov
xchg
adc
mov
sub
test
xchg
push
lds
dec
icebp
dec
sub
mov
bound
adc
inc
rclb
clc
js
jnp
jge
push
mov
in
or
hlt
push
repnz
inc
sub
lds
pop
shlb
lcall
test
mov
outsl
mov
push
loope
cs
add
pop
ret
cmp
mov
loopne
add
in
fsts
pop
or
mov
repz
js
add
shll
sbb
pop
adc
scas
mov
mov
stos
clc
jo
add
mov
addl
pop
decb
mov
je
shrl
mov
test
js
sbb
enter
pop
pop
mov
cltd
jb
xchg
std
xor
les
pop
xor
jecxz
test
lea
xor
pushl
mov
lcall
pop
std
je
fs
sbb
insb
jmp
sahf
call
adc
ret
add
cmp
dec
inc
cmp
idivl
movswl
sub
or
mov
adc
inc
popa
lock
cmpsb
push
arpl
mov
add
sub
inc
xrelease
sbbb
jo
or
iret
xchg
lahf
jp
mov
mov
xchg
mov
add
inc
pop
loopne
pop
jmp
es
mov
iret
in
jne
dec
or
and
jns
hlt
fldl
addl
mov
sub
jg
cmp
add
test
sbb
stc
mov
sub
push
mov
sti
mov
mov
mov
loop
f2xm1
inc
das
dec
mov
push
and
sbb
lret
inc
inc
subl
mov
cwtl
cmpsb
roll
xorb
clc
push
adc
test
dec
push
add
jnp
inc
jp
or
add
mov
or
sahf
mov
dec
jno
mov
dec
pop
cmpsl
out
xchg
xorb
ret
push
add
je
push
rcll
xor
and
jno
pop
mov
push
cmp
and
stos
pushf
add
mov
mov
mov
out
xchg
sbb
push
cmp
push
mov
ds
mov
loopne
push
lret
loop
push
pop
add
nop
push
scas
add
sbb
or
loopne
out
pop
or
cmp
aas
test
outsb
ret
insb
dec
mov
mov
gs
pop
aam
clc
stos
ret
ss
stc
inc
testb
inc
add
mov
xor
iret
test
or
jle
int
jne
jmp
push
lcall
jp
lock
pop
dec
cli
mov
xchg
fsubs
adc
push
rcrb
enter
xchg
aam
popa
dec
jp
dec
sarb
shll
add
dec
mov
push
clc
adc
ljmp
dec
and
pop
mov
adc
shll
pusha
or
rol
cmp
lret
add
add
jl
in
sub
inc
mov
jge
jl
pop
loope
pusha
insb
sbb
js
and
hlt
dec
filds
jb
inc
xchg
mov
popa
sbb
inc
mov
jge
mov
push
cmpsl
jb
fdivp
ret
add
cs
push
xor
lcall
inc
mov
les
std
jmp
xor
add
and
stos
movsl
add
lock
outsb
in
push
test
fisttps
cmp
shl
pop
xchg
and
std
push
and
js
xor
sub
outsb
xchg
loopne
and
mov
mov
iret
dec
pop
jmp
sub
xor
and
sub
jb
add
bswap
in
fldt
stc
call
sbb
dec
shrl
icebp
test
sbb
cli
jno
jne
arpl
adcb
and
add
pop
aam
mov
outsb
pushf
xchg
add
pop
jecxz
shrb
bound
imul
loop
cmp
notl
lods
mov
lret
lcall
or
insb
out
xor
or
lret
xchg
jbe
pop
out
pop
clc
xor
push
xor
cmp
jp
or
xlat
cld
and
cld
fwait
sbb
and
loopne
js
loopne
push
imul
insl
cs
mov
mov
push
mov
insl
js
sbb
enter
sub
ret
out
jg
push
in
push
cmp
push
sbb
rcl
cld
sbb
xor
outsb
hlt
je
dec
mov
shll
and
outsl
or
mov
incl
adcl
pop
addr16
loope
and
cmp
mov
jmp
jle
loop
pop
hlt
stos
shlb
lods
jnp
mov
rclb
cmp
ljmp
mov
inc
push
roll
subl
adc
xlat
pop
in
cmpsl
idiv
sub
pop
dec
dec
subb
lods
stos
scas
xor
or
and
xor
push
fdecstp
orl
je
inc
inc
pop
scas
daa
test
out
dec
jge
inc
adc
mov
sbb
test
xchg
add
jl
fsubrp
mov
test
sbb
not
sub
cmpsl
mov
shl
add
push
les
test
mov
add
pop
push
int3
mov
cmc
xchg
xchg
fisttpl
or
mov
xchg
fisubl
stos
or
dec
jg
mov
sub
pop
mov
sub
jno
sti
and
loope
jne
iret
mov
daa
push
and
jne
insl
jg
add
adc
push
xor
movl
ss
jo
hlt
cmpsl
and
cmpsb
and
push
mov
mov
sti
fldenv
sub
ret
lock
xchg
je
sbb
repnz
adc
lret
inc
dec
cmpb
fwait
hlt
movsl
lock
push
pop
lret
add
movsb
sub
xchg
call
cmp
adc
push
into
enter
dec
pop
or
jle
ss
push
sbb
sbb
std
pop
or
dec
sbb
pop
jl
xor
jmp
dec
mov
cmp
push
and
push
cmp
lret
mov
testb
dec
mov
xor
bound
xlat
pop
cmp
fidivrs
cwtl
cmp
pop
xor
mov
lods
mov
xor
xchg
out
orl
mov
push
scas
clc
mov
cwtl
cld
dec
enter
gs
cli
repnz
mov
sbb
dec
aam
pop
jb
addr16
push
scas
mov
sub
pop
into
xor
fwait
popa
test
push
loop
xchg
xlat
pop
les
and
nop
add
test
xor
mov
mov
rorl
jecxz
sub
cmp
jmp
lret
mov
ds
popf
dec
sbb
mov
sbb
or
mov
popf
loop
arpl
wrmsr
push
popl
std
fimull
mov
insb
outsl
sub
xchg
dec
js
mov
outsb
push
outsb
ljmp
fistl
push
outsb
shl
testb
fidivl
bound
cli
sub
or
and
sti
bound
cmpsb
insb
xor
xchg
xchg
fdivl
mov
dec
push
pop
cmp
mov
mov
mov
popa
mov
jne
fiadds
pop
fidivs
add
ret
and
ljmp
sbb
mov
push
xchg
xor
inc
mov
ljmp
movsb
ja
call
roll
push
mov
pop
inc
xchg
cmp
push
repnz
xor
and
xor
popf
clc
sti
das
insl
iret
sbb
mov
insb
inc
incl
pop
adc
pusha
mov
or
jp
push
dec
push
lea
mov
push
lock
int
xchg
int3
inc
stos
std
gs
icebp
push
adc
orb
push
pop
push
xchg
and
or
mov
mov
add
xlat
fsub
pop
mov
xchg
out
fiadds
pop
mov
in
push
aam
negb
push
jns
shlb
js
pop
aas
mov
add
or
or
jl
int3
sbb
dec
cld
idiv
add
jmp
cmp
lret
mov
lahf
cmpsl
inc
mov
fisubl
mov
push
push
loop
ret
pop
sbbl
pop
fwait
sarl
idivl
sbb
out
mov
add
outsb
push
js
adcb
mov
mov
dec
lock
inc
data16
addb
or
add
scas
and
sub
and
adc
adc
ret
leave
add
ljmp
add
in
pop
jle
or
cli
js
hlt
pop
or
jmp
mov
add
mov
mov
mov
add
jbe
lds
cmp
icebp
arpl
les
jle
ljmp
jmp
inc
adc
jnp
mov
dec
adc
mov
bound
pop
fdivrl
push
sbb
adc
xlat
shll
aam
add
aad
clc
es
or
out
xchg
cmpb
hlt
aad
popf
repnz
dec
push
movl
mov
int3
add
push
adc
mov
fiaddl
sub
and
mov
fstpl
and
inc
pusha
cmp
xchg
sub
xor
mov
xchg
je
stos
add
or
push
push
mov
test
mov
addb
scas
jb
pushf
mov
mov
jmp
sbb
xor
ja
jne
push
addr16
shll
dec
out
and
and
push
mov
data16
sbb
xor
ljmp
pop
aas
and
incb
jecxz
sub
xchg
cmp
push
pop
cli
ss
and
pop
pop
sbb
arpl
xchg
mov
jg
dec
lods
inc
mov
push
and
les
cmp
jge
outsl
mov
and
pop
xchg
fnstsw
sbb
out
and
push
jb
test
std
call
les
scas
pop
jl
cld
or
iret
dec
adcb
adc
daa
or
jbe
data16
jge
test
push
repnz
add
insb
mov
adc
xlat
fmuls
jl
inc
repnz
jle
scas
mov
aam
xchg
fcoms
push
iret
fwait
push
or
sub
loopne
cltd
adc
data16
das
out
inc
jl
lods
pop
sub
imulb
arpl
ds
mov
and
jno
jo
inc
pop
push
pop
hlt
add
cs
ds
scas
pop
and
mov
mov
mov
mov
or
fnstenv
icebp
outsb
insb
add
out
jecxz
lock
clc
push
sbb
aad
loop
mov
or
cmp
inc
pusha
fmull
into
and
aas
sub
aam
dec
or
mov
push
cltd
pushf
and
rorb
lret
loop
push
push
cwtl
pusha
enter
xchg
and
sbb
add
push
add
test
add
sub
cmpsb
mov
xchg
cmp
enter
add
scas
xchg
sub
call
inc
out
xor
mov
imul
arpl
movsb
push
dec
mov
lock
divl
hlt
ss
xor
add
rorb
lret
pop
sarb
outsl
ret
loopne
int
push
ret
ljmp
mov
add
jae
pushf
rcrb
arpl
mov
jne
lea
cltd
cmc
push
clc
rolb
jns
js
or
aaa
shll
sti
and
shll
movsb
or
pop
or
or
or
les
sub
bound
mov
jbe
adc
xchg
mov
movsb
addl
mov
dec
shrb
mov
arpl
push
test
add
push
xchg
jnp,pt
stos
std
and
mov
and
xlat
jl
movsb
pop
pop
mov
push
mov
negl
mov
movsb
and
js
nop
push
loopne
mov
popf
ss
sbbl
fsts
jns
lret
fimull
mov
ror
rorl
jg
decb
rolb
in
sti
mov
scas
pop
ljmp
fs
adcb
mov
imul
or
cmp
jl
test
push
mov
sbb
xchg
pushf
rorb
mov
gs
lods
adc
iret
xchg
js
out
inc
xor
mov
jp
or
pop
or
cmp
xchg
loope
lret
cmp
gs
imul
mov
pop
lret
negl
ret
cmc
pop
cli
inc
aam
xor
cltd
push
xor
test
xor
inc
adcl
loopne
sbb
rorl
ds
mov
xor
rorb
scas
int
sbb
daa
and
les
push
pop
imul
cmp
cmp
push
cs
sbb
std
inc
sbb
in
mov
loop,pt
or
add
in
in
roll
pop
lock
mov
rcll
add
xor
cli
sub
mov
mov
add
icebp
test
int
or
inc
sub
push
clc
inc
sub
pop
sbb
pop
in
pusha
jno
push
pop
push
xor
jne
push
xchg
inc
and
push
mov
lds
sbb
add
and
fsubrs
mov
dec
lcall
xchg
call
mov
dec
dec
and
loope
jns
lods
es
adcl
or
add
shlb
inc
sbb
mov
dec
mov
inc
xchg
xor
pop
fidivrs
xchg
push
test
rclb
mov
nop
fsubl
jge
loopne
aaa
push
loop
addr16
and
mov
lea
or
imul
sahf
mov
sti
clc
inc
orb
loopne
lea
xor
mov
in
out
inc
xor
ficompl
mov
and
loopne
inc
mov
dec
sub
dec
dec
sbb
stc
push
sub
fs
or
pop
xlat
sub
jno
sub
insl
xchg
push
push
inc
add
out
push
mov
rorl
lods
ficoms
xor
add
or
xchg
push
es
jb
fimull
clc
movsl
enter
adc
mov
push
push
mov
repz
dec
push
pop
dec
in
dec
adc
fadd
add
jne
insl
fimuls
and
fisubrs
clc
sub
lret
clc
inc
fldt
emms
test
out
pop
lret
mov
idivb
or
adc
lds
sbb
popf
data16
adc
push
std
ret
xchg
xor
lock
adc
mov
xchg
roll
loop
shl
jg
test
shrl
jecxz
push
mov
jle
mov
jle
jns
push
mov
aas
in
xor
popf
lret
push
inc
test
lods
pop
std
lock
imulb
rcr
push
mov
push
inc
out
out
aaa
out
mov
test
mov
sar
mov
mov
out
push
cmc
add
push
pop
mov
add
int3
dec
in
test
sub
int3
clc
or
loop
insl
lret
ss
adc
pop
inc
pop
and
push
xchg
mov
and
das
shl
sub
sbb
inc
fwait
enter
push
fnsave
fisubrs
dec
shrl
mov
jl
xchg
jbe
cmp
or
repz
pop
call
mov
andb
pop
popa
jnp
pop
stos
out
or
fimull
sahf
adc
icebp
aad
js
pop
xor
scas
mov
push
lods
jmp
stos
aas
xchg
dec
cmp
xor
popa
or
and
inc
adc
sbb
cmp
gs
jmp
jmp
mov
js
jne
and
mov
fistpl
dec
push
jns
jl
add
jmp
add
les
mov
fsubr
test
arpl
push
inc
fcoml
sbb
pop
pop
out
pop
dec
test
imul
loop
pop
js
loopne
adc
push
lods
in
into
lahf
inc
or
jo
mov
jmp
dec
xchg
push
mov
inc
mov
xchg
mov
adc
bnd
leave
ror
sub
xlat
outsl
push
cmp
mov
loopne
push
mov
rol
loopne
ss
sbb
mov
mov
fdivs
pop
faddl
dec
lret
and
pop
or
push
mov
pop
scas
andl
xchg
mov
mov
subl
mov
push
pop
jg
mov
mov
pop
dec
rcr
stos
dec
xchg
mov
lar
adc
scas
adc
or
scas
and
mov
movsb
loope
push
mov
neg
fstl
add
mov
add
loopne
add
dec
int3
insl
cmp
add
daa
out
pop
stos
out
pusha
lcall
cld
pusha
mov
jo
sar
jp
leave
int
mov
icebp
jb
clc
mov
in
stos
push
outsb
ret
call
xor
es
call
pushf
mov
inc
inc
mov
or
aaa
ja
lcall
scas
sbb
mov
ficoms
mov
jmp
test
push
ds
xor
mov
sub
dec
or
aam
fwait
push
loopne
xchg
add
pusha
cmp
add
ret
cmpsl
push
mov
inc
insb
in
push
or
movsl
js
mov
fsubrl
iret
orb
iret
subb
stc
xchg
fs
lock
jmp
data16
pop
repz
xor
iret
jle
orl
mov
por
loop
jl
adcl
push
jae
popa
lods
pusha
mulb
sbb
subb
xor
push
sbb
lcall
ret
sub
add
jne
aas
clc
pop
sbb
cmp
lds
mov
mov
mov
sbb
push
sub
pop
andb
fcmove
sub
pushf
dec
ss
pusha
sbb
ss
and
outsb
adc
daa
rclb
sbb
mov
rcr
test
sti
add
push
and
push
mov
adc
gs
sub
in
aad
mov
jno
cwtl
ret
sbb
xor
xor
push
inc
lods
or
cmp
jp
push
xchg
aam
dec
cmp
or
faddl
push
jg
cmp
or
ja
aam
inc
enter
push
pslld
add
jno
mov
popa
insl
pop
mov
cmpsb
scas
sub
add
sbb
mov
daa
lods
or
mov
mov
xor
xor
mov
or
lahf
leave
push
mov
adc
mov
lock
push
enter
sbb
xor
push
dec
mov
inc
loopne
je
dec
les
xchg
pushl
loope
mov
fdivrs
test
out
insb
divb
arpl
adc
pop
xchg
dec
in
prefetchwt1
or
imul
fs
sbbb
mov
add
pusha
mov
mov
adc
shlb
pop
mov
or
jg
jge
in
js
sahf
dec
xor
push
fwait
sti
insb
test
fcoms
lock
mov
sub
xchg
lret
es
aas
in
inc
sbb
out
bound
insb
dec
mov
scas
dec
leave
rolb
push
cmp
je
mov
pop
lods
mov
push
pop
add
mov
cmp
sbb
outsl
dec
in
addb
mov
or
insb
test
jo
scas
insb
js
in
roll
mov
ljmp
cli
aam
aad
cmp
and
loope
fwait
icebp
mov
sahf
stc
push
pop
adc
cmp
outsb
or
push
les
and
in
add
xchg
cwtl
bound
out
pop
mov
mov
jbe
adc
push
jmp
outsb
shrb
push
and
sub
inc
or
push
xor
call
out
jp
sub
incl
or
pop
icebp
dec
clc
push
cmp
push
mov
imulb
insb
dec
inc
repz
mov
subb
loopne
mov
jle
aad
out
shlb
or
cli
fcomps
cmpsb
xchg
and
cwtl
sub
and
push
mov
stos
add
sbb
movsb
add
movsb
fisubs
cld
add
dec
rcl
xlat
imul
mov
mov
or
lods
inc
jo
je
ret
data16
pusha
inc
fimull
mov
xchg
outsb
adc
cmpsb
fwait
test
mov
or
xor
mov
lcall
pop
lcall
inc
ss
out
aad
pop
add
push
add
adc
adc
lods
dec
or
pop
xlat
pop
sub
scas
aam
int
cltd
pop
insl
aas
adc
clc
aaa
push
leave
data16
sar
mov
add
call
mov
mov
xchg
push
mov
imul
enter
stos
dec
test
ret
lods
es
pminub
pop
mov
std
add
mov
fcomps
xor
testb
push
mov
les
scas
pop
loop
jecxz
out
pop
or
call
dec
pop
fwait
jbe
adc
or
sahf
jmp
movsb
ja
xchg
add
pushf
pop
add
data16
jnp
pop
sbb
jb
or
cmp
fndisi(8087
add
or
loop
pop
cli
addr16
rorl
pushf
cs
pop
add
xchg
inc
sbb
dec
xchg
jbe
lret
mov
shrl
xor
dec
xlat
ljmp
out
adc
loopne
dec
mov
fisttps
leave
pop
push
sbb
inc
pop
pop
enter
adc
mov
arpl
xchg
sbb
mov
mov
ss
rorb
mov
and
sbb
xchg
push
jmp
adc
lock
mov
cmpsb
shrl
pop
push
xchg
das
cmpsb
imul
mov
cld
les
orl
cmpsl
int
adc
fcmovnu
push
pusha
repnz
push
pop
leave
movsl
lods
daa
mov
lret
loopne
aas
lretw
iret
add
mov
pusha
aaa
in
xchg
ficomps
stos
aaa
and
and
mov
push
push
xor
rcr
jge
add
push
sti
roll
mov
mov
inc
fsts
mov
dec
imul
clc
es
sub
mov
mov
clc
inc
in
pop
jle
jl
jbe
xchg
or
sbb
or
fwait
sbb
sbb
fnstcw
ljmp
loop
adcb
icebp
mov
pop
adc
pop
dec
xchg
jecxz
fstl
xlat
or
pop
add
add
stc
jl
cli
rolb
cmc
insb
dec
sub
cmp
in
pop
xchg
mov
adc
cmp
add
lock
jb
pusha
jns
fisubl
inc
adcb
or
imul
loop
cmpsl
and
sub
add
sbb
cmpsb
aas
aas
jo
add
xchg
imul
and
shrb
test
in
stos
cli
loope
fistl
out
jle
cmpsb
mov
add
sahf
xlat
in
outsl
je
or
fists
into
cmpb
lcall
popa
mov
test
add
sbb
pop
xchg
dec
pop
into
and
pop
fisttps
mov
mov
push
or
gs
shll
js
fnstsw
add
jae
push
fisubrl
iret
mov
loop
fsubrp
rorl
push
and
bswap
mov
xchg
cmpb
pop
push
and
push
das
xchg
jno
popf
jbe
movsb
adc
pop
cli
ljmp
pop
dec
daa
lods
pop
shrb
sub
pop
and
xchg
or
mov
js
stos
js
add
jle
hlt
push
dec
fsubrs
fisubl
popf
jmp
dec
jmp
cmc
xchg
cmp
add
sub
pop
mov
and
push
xchg
inc
or
mov
sbb
movsb
mov
jp
xor
frstor
cmpsb
imul
shll
mov
xchg
mov
in
add
loopne
test
mov
aas
adc
dec
insl
push
xor
cmpsb
mov
mov
push
mov
jle
rcrb
fwait
inc
lret
or
nop
subl
dec
clc
cmc
push
mov
sbb
rclb
lret
mov
js
ror
sti
repz
xchg
adc
mov
sub
adc
push
mov
sahf
add
lods
bound
sub
lcall
fisttps
in
push
sbb
popf
fwait
push
sbb
mov
aaa
sub
add
hlt
addb
lea
cmpsl
ljmp
sbb
add
jge
xor
inc
shrb
loop
inc
cmp
adc
add
fwait
xchg
xor
adc
sbb
je
and
add
push
daa
cmpsl
fstpl
add
pop
enter
and
xchg
pop
cmp
test
cmpsl
cmp
fs
cmc
pushf
mov
mov
js
rolb
arpl
cli
ds
jno
ret
add
pop
push
inc
dec
stos
loopne
inc
test
or
fimull
inc
rcl
push
les
adc
inc
push
jl
fcomps
xor
cmp
orb
scas
pop
jp
sbb
adcl
es
mov
js
out
jne
int
mov
jge
loope
fadds
mov
orl
mov
shrl
push
add
out
sbb
add
push
aas
dec
push
enter
scas
push
mov
into
inc
repz
pop
cltd
out
add
addl
dec
pop
sub
push
data16
lock
psubsw
mov
aas
cld
dec
dec
hlt
adc
pop
loopne
popf
out
pop
or
jl
lret
or
lock
es
pop
cld
pop
movsb
adc
dec
sbb
jo
fldt
movsb
mov
mov
xchg
jo
mov
or
adc
mov
dec
sbb
hlt
test
lcall
adc
add
push
sub
inc
orb
lods
dec
lahf
cmp
mov
sub
pushw
in
push
clc
mov
xchg
cmpb
and
imul
loop
mov
ds
dec
andl
cs
xchg
jp
adc
pusha
into
xor
pop
repnz
xor
adcl
je
mov
sub
xor
jbe
inc
cmp
adc
faddl
jno
cltd
and
loop
cld
imul
push
jno
arpl
add
pop
sbb
lds
shrl
push
popf
pop
dec
mov
pop
pop
xchg
sbb
pop
mov
jge
ret
sbb
rcrb
xor
mov
imul
mov
or
add
push
sbb
test
add
mov
add
dec
push
xchg
lcall
pop
mov
push
repnz
ret
pop
test
out
ljmp
cmp
inc
xor
pop
dec
rorl
or
popa
inc
testl
xchg
cmp
scas
mov
inc
clc
rcrb
xchg
pop
mov
inc
icebp
dec
iret
outsb
movsl
sub
aad
out
dec
pop
mov
shl
lds
insb
xchg
or
mov
mov
scas
push
iret
in
sbb
mov
adc
jecxz
icebp
xor
and
mov
cs
jnp
push
imul
clc
and
push
outsl
jp
xor
jle
inc
into
cmp
dec
scas
loop
lahf
pop
das
pop
pop
das
sub
fdivp
sbb
dec
ljmp
cmc
push
roll
xor
inc
mov
mov
adc
in
pop
ficoml
sbb
dec
mov
gs
cmpsb
mov
stos
das
adc
cmp
cli
and
stc
cltd
jo
loop
add
push
sub
xor
adc
es
push
arpl
lcall
push
mov
xchg
and
lods
adc
popf
sbb
sbb
or
outsl
add
or
xchg
call
iret
in
inc
insb
push
fstpt
mov
call
icebp
adc
jno
and
mov
stos
cmp
xor
or
mov
add
jae
std
xor
cld
mov
sbb
push
stc
add
pop
stos
xor
fsubrs
roll
pusha
out
add
orb
icebp
add
pop
scas
mov
inc
loopne
test
enter
add
sahf
dec
in
loopne
and
mov
cmp
dec
cmp
std
sti
mov
or
fisubrs
and
test
jge
push
sbb
cmc
mov
test
popa
adc
lea
lods
xor
xor
shrb
mov
adc
dec
xchg
adc
add
fldl
fldl
shrl
xchg
repnz
aad
gs
cld
pop
cmp
jo
adc
mulb
lea
out
pop
sahf
mov
dec
fucomp
jmp
aaa
sub
jle
mov
push
sub
add
clc
mov
xchg
in
lods
movb
test
js
dec
cmp
jmp
push
mov
sahf
mov
lods
les
scas
mov
ror
mov
adc
or
adc
or
sbb
push
mov
push
cld
lcall
push
and
popl
lea
rcl
add
and
add
adc
sub
mov
sub
leave
adc
cmp
js
or
inc
dec
movsb
cmpsl
xor
fimuls
cmp
sarb
pop
out
push
sub
jmp
jecxz
push
mov
cmp
add
lret
mov
movsb
sbb
xor
push
in
pop
and
lods
jns
cwtl
and
xorl
inc
jb
insb
pop
fisubs
pop
and
js
stc
sbb
ss
ret
popf
jb
and
and
mov
jae
push
sti
pop
push
test
dec
push
lods
mov
notb
xchg
or
add
pop
pop
les
mov
fmuls
daa
mov
pop
inc
fdivrp
or
or
loop
sbb
outsl
inc
cwtl
shrl
clc
jecxz
clc
jp
mov
gs
imul
push
fsubrs
jmp
std
push
and
dec
adc
add
imul
dec
insl
movsb
xchg
sbb
jbe
pop
hlt
stc
aam
mov
add
mov
jae
cmpsb
cmp
inc
clc
or
mov
jl
push
dec
and
sbb
cmc
les
repnz
and
clc
dec
ss
sbb
pushf
jmp
mov
pop
cmc
call
daa
dec
xchg
or
psubusb
sub
test
nop
pop
inc
stos
mov
mov
sbb
mov
mov
rcll
mov
cmp
push
cwtl
test
loopne
lods
adc
mov
jo
pop
popa
shrb
je
pop
mov
jnp
mov
mov
fbstp
outsl
test
leave
ljmp
daa
mov
arpl
dec
fdivl
outsb
mov
mov
push
push
ret
leave
arpl
cmpsb
adc
pop
loopne
negb
imul
fimull
mov
cmp
inc
inc
aaa
enter
mov
mov
xchg
mov
test
xor
orl
push
popa
stos
mov
mov
mov
divl
inc
mov
in
sbb
stos
or
jbe
clc
mov
sbb
and
jbe
repz
decl
in
sbb
pop
sbb
mov
push
mov
rcl
pop
fcom
roll
outsl
fwait
call
xchg
ror
daa
out
jnp
inc
dec
cmp
sbb
aad
test
setne
or
push
sbb
stos
cmp
cltd
pop
pusha
jo
and
mov
movsl
pop
lds
testl
in
cmpsb
filds
jno
lea
rcl
cmc
nop
pop
adc
dec
sbb
repz
jle
daa
shl
sbb
and
rclb
dec
jno
std
test
mov
nop
jmp
fildl
jne
pop
xor
sbb
and
daa
rcrb
stos
repnz
mov
jmp
insb
xor
dec
hlt
insb
ss
aas
cli
xchg
out
mov
xchg
arpl
add
pop
out
push
stc
mov
dec
jnp
sub
sub
lret
pop
jle
test
ret
repnz
push
scas
aaa
test
nopl
jp
insl
popa
fdivrl
push
dec
aaa
stos
cld
xchg
pop
les
add
add
add
fwait
lret
dec
and
popf
lock
jno
fisttpl
xchg
andl
cmp
cmp
push
jp
sbb
push
dec
rclb
outsb
mov
sahf
inc
pop
std
cmp
xor
daa
iret
in
cmp
push
movsb
jno
cmp
leave
rclb
in
sub
xor
add
add
xor
insl
adc
push
xchg
out
sbb
inc
aad
push
jnp
cmp
cld
std
shl
mov
rorl
adc
cmc
stos
add
inc
push
lods
jle
rolb
sub
subl
popa
jno
cmc
mov
pop
push
mov
or
pop
adc
dec
jns
and
xchg
or
test
mov
jo
popf
loope
inc
pop
or
push
inc
orl
std
shlb
xchg
jns
or
jno
cmovno
lahf
cwtl
sbb
pop
addb
shll
push
jge
add
and
jp
sarl
lret
xor
mov
popf
sub
cmp
push
push
xchg
out
xor
xchg
lahf
xor
rolb
mov
test
xchg
xor
cmp
lods
cmp
cld
int
dec
dec
mov
out
enter
and
xor
pop
lods
push
rcrb
sub
inc
and
push
insb
adcl
bound
mov
in
ret
xchg
lods
ds
in
jnp
sbb
xlat
insl
xor
xchg
adc
cltd
adc
jl
xor
leave
mov
xchg
test
fwait
add
stos
push
outsl
sarb
add
hlt
in
les
mov
inc
movq
xor
bound
xchg
out
lcall
std
in
addb
cmpl
in
frstor
je
dec
mov
inc
popa
mov
repz
mov
xor
mov
jne
inc
xchg
insb
add
sbb
loope
hlt
rolb
mov
test
jecxz
popf
jle
mov
add
or
cmp
adc
dec
sbb
pop
bound
std
push
dec
or
xchg
das
fsts
lahf
shl
sti
add
pop
into
inc
mov
loopne
ds
or
or
js
pop
dec
sub
notl
cmpsb
mov
nop
jmp
add
add
adc
frstor
sbb
stos
mov
xchg
mov
sub
js
or
sbb
push
icebp
push
jnp
lock
pop
add
cmp
dec
dec
outsl
inc
and
or
cmp
push
aaa
sbb
dec
inc
inc
jp
cli
repnz
push
inc
rcl
xchg
push
je
lret
jecxz
inc
mov
pushf
aaa
push
push
in
jnp
jmp
jne
jecxz
and
pop
mov
sub
jmp
roll
icebp
outsl
std
outsl
and
scas
mov
or
pop
jl
andb
sub
ss
mov
jge
movsl
sbbb
fstpl
lods
pop
or
add
mov
outsl
push
rorl
ss
nopl
int
mov
mov
jne
xchg
sub
sub
jecxz
ret
hlt
icebp
pop
js
push
andl
cmp
sbb
add
mov
aas
push
mov
ljmp
iret
jg
lret
add
add
jg
repz
shll
push
imulb
daa
push
add
in
and
or
push
shlb
mov
lods
xchg
inc
fisttps
and
test
loop
adc
int
divb
push
adc
sbb
rolb
sub
sbb
das
xchg
lds
lods
in
icebp
shlb
sub
add
je
push
xor
sbb
jg
push
sub
stc
aad
ds
and
pop
js
ja
aaa
mov
push
sub
inc
test
arpl
std
ret
fucomp
jne
rcrb
pop
add
mov
imul
lret
adc
cmp
loop
or
or
inc
xchg
sub
add
push
jge
push
out
out
ds
mov
addb
sahf
dec
aaa
jecxz
hlt
jnp
jno
cmp
cmp
mov
mov
add
xlat
dec
adc
jb
pop
js
inc
lea
test
iret
adc
fnstcw
pop
addb
int3
mov
nop
arpl
jo
xor
dec
jmp
mov
mov
mov
jnp
shll
std
lret
in
clc
jno
xchg
cltd
fnstsw
movsl
stos
sti
imul
or
sub
and
add
test
out
mov
sub
add
mov
das
hlt
enter
push
adc
aam
ljmp
ljmp
and
movsl
sbb
mov
pop
inc
pop
adc
jl
mov
arpl
xor
mov
push
jle
lods
cmpsl
rorb
mov
aam
mov
inc
cmp
add
addr16
stc
scas
in
cmc
rorb
sbb
sti
fisubrs
dec
cmp
outsb
rorl
das
pop
es
int3
jne
out
xor
int3
je
pop
push
or
inc
jns
sbb
lahf
dec
into
pop
sahf
jns
dec
cs
cmpsl
rcll
inc
movsb
mov
fisttps
xor
push
mov
pop
xchg
lds
cmp
cmp
mov
mov
mov
les
dec
or
jg
test
sbb
mov
mov
pop
fdivrs
clc
mov
fstps
adc
sbb
push
aam
adc
pop
adc
fiadds
scas
push
inc
in
aaa
xor
sti
je
mov
in
mov
fldcw
cld
mov
test
stc
movsl
dec
loop
shrb
mov
leave
test
loopne
jnp
mov
or
push
fs
inc
adc
lock
pop
xor
and
xchg
add
and
add
jle
fsubl
adc
pop
pop
xor
es
jbe
adcl
stc
push
or
or
push
jecxz
sbb
mov
cmp
add
cmc
add
call
pop
sbb
mov
mov
imull
sbb
xchg
addl
adc
or
jle
dec
push
in
xor
ja
mov
jl
cld
cmpb
mov
test
lods
rcll
scas
mov
push
pop
dec
pushf
clc
push
push
lahf
and
fiaddl
sub
fimull
dec
ret
xchg
es
inc
nop
mov
loop
daa
ds
cmpsb
test
or
pop
mov
pusha
lods
mov
dec
mov
daa
and
sbb
mov
pop
test
and
mov
out
sbb
jb
test
jl
jecxz
sbbb
test
ljmp
jge
or
cmpl
test
push
cmp
std
and
jl
aas
adc
or
mov
push
nop
or
pop
add
xchg
bound
mov
mov
scas
sub
stc
iret
xor
aaa
add
stos
mov
test
lcall
adc
dec
cld
fnstsw
xor
scas
cmp
push
push
mov
mov
movsl
mov
pusha
mov
inc
or
mov
or
aam
ss
pop
mov
inc
and
pop
sbb
lods
sbb
fwait
icebp
inc
cld
sbb
dec
mov
shlb
es
sbb
xchg
and
add
test
or
add
pop
fildl
lock
sbb
js
add
pop
mulb
cmp
popf
push
push
in
jmp
ja
mov
daa
add
lcall
int
jle
mov
je
and
mov
shrl
sbb
xor
loope
test
mov
mov
int
push
repnz
ret
inc
jb
xor
inc
clc
jb
mov
mov
pop
push
inc
iret
in
lds
sub
les
outsl
and
pusha
insl
jp
faddl
jnp
sahf
adc
js
lea
dec
out
xor
stos
dec
sbb
clc
inc
je
ss
sbb
pop
loopne
int3
pop
xor
cmc
or
ja
in
cmp
add
int3
and
gs
push
mov
test
hlt
addr16
push
push
adcb
push
mov
popf
xor
fldl
jbe
pop
sbb
and
mov
scas
data16
pop
cld
inc
sub
rolb
ss
iret
das
mov
push
mov
rcr
sbb
orl
andl
mov
shrb
or
sub
mov
pop
call
push
push
push
adc
dec
decl
xchg
ud0
out
sub
stc
xor
rol
xchg
sarl
popa
es
ljmp
gs
lock
lock
clc
xchg
dec
hlt
test
mov
adc
lcall
call
inc
or
mov
and
je
mov
ret
adc
adc
push
cmpsb
shrl
push
fsub
lds
xchg
rolb
lods
jle
insl
das
jns
aas
out
add
dec
lods
js
loopne
push
fisubrl
dec
jl
dec
inc
adc
and
fsubrs
out
push
mov
inc
data16
lea
cld
add
cmp
mov
lock
out
je
cmp
mov
lock
es
pop
cmp
in
sub
fldl
pop
cwtl
xor
sbb
and
in
jb
jg
xor
fadds
in
insb
std
pop
cs
ret
inc
push
sub
mov
stos
fcomps
pop
cmc
les
cmp
inc
xchg
adc
mov
sub
jb
push
jmp
stos
shl
lret
fisubrs
ds
xor
xchg
sub
ret
or
xchg
std
mov
imul
pop
insb
push
loope
and
test
lods
out
cld
cmc
sub
fsqrt
add
iret
outsb
dec
in
add
push
mov
mov
incl
repz
sub
add
fucomp
xchg
clc
push
and
enter
aam
mov
clc
and
cli
std
jns
xor
pop
fistpll
pusha
mov
cmp
xchg
adc
pop
fwait
clc
ljmp
xor
int3
inc
mov
pop
inc
pop
xchg
dec
adc
xchg
out
jno
ds
into
xchg
push
out
fwait
out
rcr
aam
js
mov
dec
pop
and
fwait
push
adc
fstpl
jae
pop
loopne
mov
inc
dec
adc
push
insb
xchg
adc
insb
test
jg
jge
fprem
push
and
cmp
mov
and
mov
mov
fadds
mov
inc
insb
pop
paddw
mov
inc
adc
cmpsb
ljmp
stos
sub
push
cmpl
adc
ljmp
aas
xor
outsb
push
xor
mov
xchg
ficoms
mov
sub
in
out
pop
cmpb
les
xor
insl
pop
or
sahf
add
mov
or
inc
out
xchg
jp
idivb
jle
pop
scas
or
mov
in
stos
ret
pop
jno
movsl
mov
xor
mov
popa
adc
in
addl
adc
fildll
mov
dec
fiaddl
gs
in
push
push
in
loop
and
push
shrb
push
icebp
add
push
xchg
dec
pop
in
xorl
sub
enter
icebp
or
sub
fwait
or
or
lods
cs
negb
test
or
mov
inc
rorl
jg,pt
dec
loope
lods
js
cs
jp
sarb
pop
adc
pop
sbb
movsb
xor
fdivrl
mov
xchg
dec
dec
push
pushl
jg
jl
mov
cld
repz
inc
scas
push
xchg
inc
pop
jecxz
out
inc
ljmp
clc
mov
inc
pushf
pop
and
inc
cmp
insb
insl
push
jg
cmp
dec
inc
inc
je
inc
lret
dec
sbb
shl
pop
or
lret
lret
pop
jge
xchg
sti
add
out
add
iret
mov
push
dec
sub
mov
and
pop
aaa
movsb
fcomps
enter
lret
sub
mov
flds
out
pop
add
mov
cmp
mov
arpl
mov
add
ds
jns
mov
sub
adc
xchg
add
leave
bound
aas
sbb
dec
les
lcall
push
sub
lock
jo
out
stos
cmp
sbb
lcall
ret
and
xor
mov
pop
fwait
or
cmpl
and
dec
lods
les
mov
jb
push
push
push
push
lock
bound
or
sub
inc
pop
fwait
inc
stos
inc
pop
jecxz
aad
xchg
loopne
ret
xchg
addr16
pop
push
dec
mov
fadds
adc
xor
fcmovb
dec
jl
cli
jbe
leave
push
mov
dec
lea
fildl
xchg
dec
andl
jp
add
sub
sbb
sbb
jbe
inc
in
adc
dec
push
mov
std
movsl
push
xchg
push
push
inc
cld
test
pop
test
push
mov
mov
mov
adc
jg
cmp
fdivrp
inc
lds
fdiv
insb
sbbb
ds
dec
mov
clc
push
rcr
loope
push
mov
outsl
insl
jecxz
arpl
pop
add
sub
mov
xchg
test
ja
shr
lock
aad
mov
mov
add
cmpsb
cmp
cmp
pop
lret
xchg
lcall
fiadds
mov
in
jbe
arpl
out
mov
cs
add
jmp
ja
mov
repnz
scas
aam
inc
clc
pushl
or
repnz
lods
adc
push
cmpl
out
test
mov
mov
add
push
jo
pop
xchg
lods
andl
push
mov
cld
insl
add
jg
pusha
subl
frstor
pop
in
add
or
lret
adc
fdiv
lcall
outsb
sbb
mov
mov
push
xor
inc
int
sub
sub
bound
fcomps
cmpsl
or
clc
pop
sarb
in
stos
out
jl
inc
sbb
dec
fildl
stos
xchg
stos
pusha
sbb
out
pop
in
aaa
add
cmpsb
iret
repnz
sbb
xchg
test
mov
sbb
cmp
xchg
aam
daa
pop
shll
jb
nop
je
and
jl
jecxz
lock
push
loope
push
sbb
pop
xchg
mov
fadds
cli
insl
sti
mov
pop
sarb
loope
cmpsl
les
aam
cs
xor
into
outsb
test
stos
push
push
push
inc
or
ljmp
pop
nop
pop
jle
xor
adc
sahf
or
call
fsubl
dec
or
inc
ljmp
jb
bound
dec
andb
push
and
and
xor
loope
xchg
shlb
call
jg
bnd
inc
dec
icebp
push
pop
or
sti
jbe
leave
pop
dec
aam
sub
ss
filds
adc
jmp
xchg
scas
xchg
adc
outsb
imul
push
cmp
ss
aad
enter
cltd
test
sub
es
jp
lret
ss
das
xor
xchg
inc
and
jnp
ret
mov
add
hlt
ljmp
sti
xchg
xchg
icebp
push
lret
es
cli
loopne
fimull
push
push
outsb
fimull
push
cmp
je
aas
pop
xchg
iret
ret
sbb
push
or
je
xchg
pop
inc
pop
lock
fcomps
dec
test
rcl
movsb
jae
stc
mov
call
inc
dec
dec
push
xchg
stos
fisubrs
push
stos
das
rcrb
or
pop
xor
fisttpll
insb
push
lret
dec
sti
subb
push
or
mov
out
int
clc
jae
dec
outsl
add
sbb
lods
lret
mov
rcrl
pop
and
cs
and
inc
dec
popf
pop
xor
jae
jg
jle
cmp
dec
xor
pop
inc
adc
cli
pop
outsb
ret
testb
lret
das
jbe
mov
inc
dec
repnz
push
stos
cli
xchg
mov
or
fidivl
subb
mov
jmp
fisttpl
mov
orb
push
call
in
stos
jle
in
popf
bound
mov
ja
imul
xor
jecxz
or
test
push
xchg
or
jne
push
push
andb
adc
add
mov
pop
and
cld
popa
push
add
js
jecxz
jb
test
pop
jg
add
add
xchg
fbstp
testl
sub
ljmp
xor
aaa
aas
push
cwtl
jge
sbb
das
inc
mov
data16
dec
cmp
cmc
xchg
fadds
orb
jecxz
jae
xchg
pop
aad
lods
jb
mov
cli
popf
mov
fdivl
aam
cmp
bnd
mov
inc
jne
dec
lea
dec
xchg
xchg
cmpsl
push
divb
cmp
add
mov
cltd
je
in
or
popf
xor
out
leave
decl
scas
punpcklbw
adc
mov
ds
sbb
clc
dec
ret
and
cmp
lds
xchg
sub
cmp
cmpb
cmc
movsl
pop
xchg
push
mov
pop
sbb
aas
mov
mov
out
insb
or
clc
test
sub
loop
std
add
jo
ss
pop
es
fbld
insb
bound
xchg
fwait
push
gs
cmpsb
mull
ss
movsl
dec
mov
add
add
incb
into
div
add
lcall
cmp
adc
inc
movsb
divb
loopne
sbb
insb
sbb
add
insl
push
mov
pushf
std
add
rorb
pop
cmp
loope
add
mov
jge
adc
hlt
dec
mov
adc
clc
mov
pop
cld
xor
roll
andl
dec
xor
dec
fs
xchg
lcall
and
iretw
add
pusha
cmc
out
daa
cld
cmpsl
dec
testb
imul
mov
lret
rclb
outsl
inc
loopne
xchg
mov
cmp
movsb
fsubrl
cmp
xchg
or
xchg
lret
incb
mov
add
in
sub
or
lock
mov
or
lock
sbb
lea
test
push
ret
es
test
fmuls
sub
mov
mov
jo
fbstp
mov
rcrl
push
or
cs
adc
jmp
int
lods
dec
mov
inc
ret
lret
fs
push
xchg
hlt
mov
or
fucomi
stos
xchg
loop
cmp
add
xchg
xchg
dec
add
pusha
add
pop
push
adc
sbb
test
cmpsb
ret
xor
lret
sbb
inc
cmp
cmpsl
jae
or
aaa
mov
hlt
stos
push
mov
fstpt
adc
pop
ss
daa
imul
inc
shld
push
mov
xor
and
inc
push
add
xor
sahf
cld
inc
cs
sub
mov
mov
notb
mov
adc
mov
lods
add
ss
das
jp
cld
lret
cwtl
dec
jns
insl
sub
mov
sbb
sub
std
popa
and
sbb
sub
push
outsb
or
pop
jg
jno
push
and
or
and
push
xchg
outsl
adc
or
cmp
xchg
mov
in
mov
rcrl
arpl
mov
mov
cli
ret
insb
cmc
daa
pop
mov
sub
mov
lods
in
loope
int
cmpsl
mov
sbb
or
out
rol
rolb
and
mov
xor
xor
aaa
mov
rolb
mov
ret
pop
or
jle
mov
out
add
test
and
xchg
imul
je
adc
mov
mov
scas
mov
divl
jno
cmp
jge
adc
cmpl
lret
icebp
scas
or
fwait
dec
lahf
imul
hlt
stc
xchg
or
fdivl
shl
xchg
jg
loopne
sarb
adc
mov
hlt
pinsrw
sub
and
jne
lock
mov
lret
xlat
add
ret
jns
out
rclb
fwait
rcrl
arpl
mov
or
push
shll
daa
xor
sub
cld
adc
sub
imul
or
sbb
loope
jp
sub
leave
adcb
pop
pushf
adc
sbb
pusha
push
mov
icebp
cli
push
pop
or
xor
sbb
sbb
rcrb
iret
rorl
adc
popf
add
mov
ret
ret
out
sahf
sahf
inc
add
popf
lahf
push
cs
mov
cmpsb
mov
aam
ret
adcl
mov
or
rcrb
movsb
and
add
mov
adc
or
sbb
out
cmpsl
rcrb
scas
xchg
adc
subb
sbb
push
icebp
mov
push
dec
inc
cmpsl
cld
sub
adc
add
xchg
push
adc
cld
shl
add
out
outsb
clc
nop
pushf
pop
mov
movsl
xchg
jb
and
dec
sahf
adc
sbb
cs
add
cmpsl
or
sub
out
ljmp
add
cli
mov
xchg
ds
sbb
rclb
adc
mov
pusha
jae
imul
into
dec
int3
pop
xchg
enter
sbbb
xor
int3
les
jle
mov
adc
mov
sub
mov
pop
cmp
test
sub
cmp
and
pop
ja
cs
jo
or
push
loopne
mov
imul
das
cmpsb
rorb
xor
bound
push
je
fstpl
jo
jne
movsb
push
int3
xchg
xchg
call
or
pop
xchg
pusha
mov
jno
ret
jnp
and
cmp
or
jp
testl
xor
cmp
fildll
lods
or
push
ja
stos
mov
jl
lahf
dec
inc
adc
sar
push
loop
mov
inc
add
dec
ret
inc
and
stc
rcll
mov
shrb
pop
push
cmc
or
ret
int
and
cmpsb
push
xchg
pop
repz
mov
fdiv
jne
mov
mov
mov
mov
lret
shlb
fsubr
sub
aad
cs
loopne
stc
or
in
ret
mov
adc
mov
push
dec
pop
lods
jbe
lahf
jge
and
push
mov
sbb
jmp
dec
mov
cmpsl
push
mov
cmp
push
mov
ret
inc
mov
sbb
fsubs
das
test
xchg
jne
nop
add
insl
aas
hlt
jmp
aas
cmpsb
repnz
int
dec
out
sbb
xchg
add
dec
popf
cmp
lods
insb
push
xchg
sbb
enter
xchg
add
xor
xchg
cmc
add
hlt
sub
in
cmp
mov
add
je
push
lret
bound
cmp
imul
clc
shrl
sbb
cltd
ds
mov
loop
push
push
mov
mov
test
jl
mov
lds
dec
xor
mov
mov
xor
and
mov
adc
mov
iret
mov
adc
sbb
pushaw
sub
lea
dec
adc
mov
cmp
adc
fcoms
es
mov
add
imul
xchg
je
nop
mov
cld
mov
loopne
outsb
sub
lds
std
sarb
cmc
pop
lahf
lahf
jmp
ret
xchg
cld
ja
leave
rcrl
lods
loopne
fwait
mov
decl
dec
jns
gs
pop
sub
pop
jne
cwtl
fdivl
test
jge
add
mov
mov
into
inc
ret
loopne
jp
shll
push
inc
ret
pop
mov
sbb
or
push
movsb
insl
lock
adc
inc
pop
sbb
imul
and
and
call
or
adc
mov
pusha
cld
push
jns
lods
mov
fiaddl
jbe
cltd
notl
mov
sbb
aad
mov
stos
test
in
jg
fucom
outsb
xor
xlat
lret
call
cltd
mov
sub
adc
push
cld
ret
mov
push
adc
sbb
je
adc
lock
jecxz
outsl
in
mov
and
cmp
sub
dec
inc
out
push
cs
sub
mov
xor
dec
in
jecxz
inc
push
rolb
enter
or
mov
adc
adc
push
mov
mov
ds
mov
in
inc
push
pop
or
cs
mov
cmpsb
popf
pop
adc
call
jne
and
popa
inc
add
xor
ror
adc
jne
or
cld
out
jo
adc
notb
pop
rcrb
cmp
sbb
aas
mov
rorl
cmp
pushf
sbb
and
push
jp
rorb
pop
lods
test
aam
sub
adc
dec
loop
mov
inc
mov
push
jle
jo
mov
popa
in
hlt
or
daa
push
inc
mov
aad
pop
loop
scas
ljmp
dec
std
mov
mov
mov
lret
popa
hlt
int
out
lcall
outsl
stc
nop
push
sbb
sub
fisubl
clc
movsb
add
cmpsb
xor
pop
cmp
outsl
push
xchg
sahf
mov
mov
out
pusha
mov
test
stc
xor
add
aad
in
xchg
sbb
ljmp
pop
pop
iret
push
ret
dec
cmp
std
xor
lret
add
jge
popf
sub
rorb
in
cmpps
sti
sbb
push
popa
loop
or
jge
lret
repnz
inc
clc
or
push
out
not
leave
pop
mov
push
into
aam
xchg
loopne
pop
out
xchg
adc
fwait
das
ret
adc
xlat
inc
push
xor
jb
rorl
adc
fcomip
add
mulb
ja
inc
xchg
mov
xor
shrb
push
imul
int3
and
bound
lods
inc
xchg
mov
inc
loop
cmpl
aad
push
ret
aam
mov
add
jno
outsb
and
lods
mov
nop
inc
imul
rcl
cmp
pop
mov
sbb
xchg
pop
sbb
mov
fs
jp
and
push
pop
or
sbb
sbb
lret
mov
jbe
je
add
gs
adc
fadd
cs
push
scas
aad
inc
subl
imul
lret
sub
xor
or
inc
int3
int3
push
push
movsl
add
in
adc
mov
xchg
cmp
mov
arpl
dec
lret
jmp
xchg
arpl
bound
or
lcall
sub
add
sbb
mov
fimuls
test
scas
inc
arpl
xor
es
stos
mov
imul
jae
cmp
aas
inc
inc
xchg
ss
in
cmp
add
mov
pop
inc
lds
stos
add
dec
pusha
mov
and
inc
movsl
movsl
or
lea
notb
sbb
sub
xor
jae
xor
push
or
xchg
mov
pushf
inc
inc
mov
cmp
jbe
jo
jmp
stos
jge
shrl
mov
inc
ljmp
out
push
mov
ds
add
and
ret
in
outsl
dec
popa
dec
and
mov
mov
lods
inc
and
push
add
pusha
jo
inc
xor
shrb
pop
std
jp
mov
sub
xchg
inc
mov
pop
or
out
dec
mov
fucom
dec
fistps
in
mov
sub
lcall
pop
data16
push
mov
aam
inc
mov
mov
push
inc
xor
and
or
mov
rcrb
push
add
pop
mov
jmp
sub
out
jecxz
ret
es
cmp
and
dec
popf
rol
xchg
pusha
es
add
les
mov
or
add
leave
lds
jg
xor
rorl
push
or
mov
adc
sub
sub
aas
dec
push
sub
sbb
cmpsl
jecxz
inc
dec
dec
pop
fs
das
mov
in
cltd
rolb
aam
push
mov
movb
arpl
dec
hlt
add
inc
arpl
arpl
xchg
mov
push
mov
xor
jle
adc
sbb
pop
icebp
hlt
aaa
pushf
jno
jl
or
pushf
or
fldcw
decl
xchg
lahf
jle
push
mov
xor
fcmovb
aam
ljmp
jo
dec
ds
fsubp
cwtl
ljmp
sbb
addb
xor
dec
xlat
push
mov
fwait
je
pop
adc
jp
jmp
cmp
adcb
popa
rolb
mov
aad
fdivrl
or
loope
lcall
dec
cltd
xchg
jb
test
incl
or
inc
test
popa
cmpsb
sub
rclb
idivb
sbb
cltd
loope
jno
adc
jg
xchg
xor
cs
mov
push
inc
push
loop
fdivrs
mov
test
xor
scas
pop
dec
fistl
loop
ret
icebp
cwtl
icebp
adc
mov
inc
scas
aas
mov
or
es
stos
loope
cmc
mov
or
jo
jp
sub
xchg
push
movsb
mov
push
lods
inc
cmp
ljmp
out
sbb
in
aad
outsb
je
push
push
sbb
mov
test
pop
std
pop
push
push
sbbb
sub
xchg
popf
lock
pushl
xor
jne
int3
sbb
in
fwait
push
outsl
stc
sbbl
jle
inc
aad
out
mov
mov
and
or
mov
es
fisubl
inc
mov
mov
mov
xchg
jb
sti
and
xlat
imul
scas
xchg
jno
aas
ljmp
insl
fs
inc
enter
mov
mov
mov
cmp
clc
clc
iret
xchg
mov
mov
dec
adc
cmp
mov
cmp
mov
jne
fwait
test
ss
ret
inc
mov
sbb
add
inc
push
jno
cmp
push
mov
lock
add
fwait
pop
or
insb
inc
sarl
xorl
popf
mov
pushf
cmp
push
scas
sbb
xchg
cmc
lock
adc
push
inc
push
sbb
adc
sbb
jae
lods
push
into
xchg
cmp
sbb
unpckhps
and
dec
inc
dec
xchg
sbb
lret
or
jnp
pop
mov
mov
sahf
xlat
shl
pshufw
or
cmp
cmc
test
sbbb
test
adc
fstpt
cmp
lds
in
mov
pop
mov
pusha
mov
mov
or
adc
rcll
loope
jp
or
sub
fildll
mov
or
shlb
jecxz
subb
cmp
pop
icebp
cli
repnz
clc
dec
inc
xor
mov
fimull
mov
or
fmul
sub
andb
sar
jbe
movb
mov
aas
ret
jmp
mov
push
sahf
lods
call
test
cld
aad
cmc
sbbb
mov
andb
sub
xchg
and
das
jbe
and
ja
cli
rorl
and
mov
mov
pop
jnp
ret
in
cmp
inc
lods
shlb
les
sbb
test
repnz
add
shlb
idivb
and
xlat
enter
adcl
or
mov
ret
dec
cmpsb
add
pushf
inc
sbb
imul
add
out
data16
and
adc
mov
cld
pop
clc
jo
stos
cmp
jb
jle
pop
jge
pop
mov
sub
mov
adcb
orb
and
test
adc
data16
pop
notb
add
inc
mov
ror
and
stc
rolb
daa
mov
mov
fldcw
popa
cmp
in
test
mov
shl
cld
push
add
mov
xor
jb
pusha
jle
test
jno
mov
cld
jg
pop
lcall
jb
stc
in
add
minps
rorb
sbb
rclb
mov
scas
or
pop
ljmp
cld
mov
jnp
sub
fdivr
mov
mov
inc
mov
dec
aam
push
and
call
pop
andb
mov
loop
cmp
sbb
in
dec
add
adc
add
arpl
and
aad
add
cmp
test
jmp
dec
and
sub
sub
dec
dec
xor
adc
inc
adc
jne
cmp
push
mov
inc
or
jne
lods
xchg
mov
jecxz
sub
call
add
into
lret
test
pop
insl
mov
xchg
into
out
cli
sub
aad
inc
inc
cwtl
lret
orb
dec
mov
in
xor
shll
and
mov
lods
mov
sub
lret
call
test
jo
and
push
cwtl
xchg
pop
clc
jecxz
ret
ret
js
jge
mov
pop
pop
rcrb
or
jl
lea
inc
int
sbb
lock
scas
outsb
clc
repz
and
imul
ljmp
popf
clc
push
cmp
movhps
pop
add
push
sbbb
mov
lss
fsubr
cmp
pop
cmp
lret
fistps
add
xor
xor
shlb
sbb
inc
push
mov
or
ret
and
and
ljmp
adc
jbe
jl
aad
jecxz
sbb
push
pop
sub
lahf
rcr
hlt
and
stos
inc
adc
stos
dec
push
xchg
sbb
jb
pop
pusha
das
movb
push
jmp
add
scas
gs
mov
je
repz
stos
mov
cmp
outsb
punpcklbw
push
lea
or
shrb
aas
lcall
mov
mov
push
iret
iret
lods
and
addl
out
fbstp
cs
xchg
movsb
shll
nop
call
cmpsb
repnz
push
test
jg
bound
mov
or
pop
cmpsb
jp
add
push
xchg
xchg
pop
js
cmp
push
in
clc
push
dec
es
xlat
fcoms
or
das
insb
mov
ret
ds
jmp
add
jl
add
insl
jo
pop
xor
data16
adc
pop
in
cwtl
jbe
aas
pop
call
fistpl
dec
or
add
sarb
sti
jmp
hlt
adc
in
shrl
adc
pop
or
lahf
cli
pushl
mov
inc
sub
std
nop
repnz
popa
xchg
outsl
pop
lret
adc
sub
push
mov
fwait
sbb
rcll
add
stos
js
push
cld
rorl
in
int
push
cmp
roll
push
andl
sub
jg
xchg
shll
adc
xor
fistl
into
jbe
fs
shrb
lret
je
push
sub
mov
idivb
shlb
nop
and
clc
dec
mov
xor
sub
sarl
test
push
add
lods
clc
and
push
std
xor
aam
push
push
mov
das
cmc
mov
jmp
loop
xchg
xor
push
add
or
es
insb
add
cmp
fldt
sbb
push
dec
je
pop
inc
test
adc
dec
mov
lds
in
scas
sub
mov
adc
adc
ss
jg
sbb
push
sub
xchg
orl
cmpsl
cltd
mov
adc
idivb
ds
dec
aad
cmp
push
and
les
xchg
cmp
test
call
cmp
cmp
int3
rolb
dec
cld
xlat
cmpsl
sbb
inc
pop
std
sahf
cmp
test
aam
jmp
pop
cmp
dec
es
sub
cmc
stc
into
xchg
scas
test
ficoms
mov
scas
pop
lods
lock
inc
add
cmp
movsb
mov
or
fdivrs
push
into
imul
das
mov
xor
add
jp
dec
push
dec
xor
lds
incl
inc
adc
iret
mov
push
loope
add
fistps
mov
jl
cli
arpl
lahf
xlat
mov
xor
push
mov
shrl
mov
and
dec
sti
jbe
jg
inc
pop
inc
push
xchg
pop
ret
dec
sub
gs
scas
int
stos
push
aad
pushf
test
call
sub
js
or
mov
jmp
fcmovnu
dec
call
fimull
shr
enter
mov
cmp
mov
or
push
sbb
inc
sub
cs
test
incl
stos
or
sbb
jmp
scas
dec
faddl
ljmp
mov
outsb
std
xchg
test
jbe
add
mov
jp
sbb
ljmp
push
bound
sub
xor
dec
inc
orb
icebp
inc
lea
icebp
rcl
loopne
add
cmp
ljmp
dec
sbb
jae
cmp
bound
jmp
shlb
add
sti
pop
mov
incb
rcl
call
mov
mov
push
add
mov
call
pop
cwtl
je
push
out
mov
scas
out
daa
test
push
mov
or
mov
enter
jb
inc
add
fdivrs
push
cmpsb
cs
sahf
jnp
and
mov
mov
or
insl
xchg
inc
lcall
aaa
sbb
sub
mov
loop
out
dec
cli
add
jl
enter
test
jb
clc
aaa
sbb
in
cmp
test
scas
dec
loope
pop
jbe
loopne
push
pop
icebp
pop
roll
jl,pn
mov
das
xlat
ljmp
call
ljmp
icebp
dec
pushw
cmp
cmp
cmp
fcmovb
or
jge
ss
sub
pusha
int
imul
mov
rclb
imul
push
andl
daa
inc
pop
lret
test
xchg
xor
inc
adc
cld
decl
inc
psrad
jae
pop
add
sbb
add
push
les
sbb
cli
inc
cli
nop
jno
mov
mov
pop
or
or
mov
and
dec
and
ss
mov
incb
dec
push
in
push
aaa
int
xor
call
imul
sarl
push
xor
aad
dec
mov
out
lock
movsl
mov
js
and
xorl
add
lock
incl
inc
xchg
add
je,pn
mull
mov
popa
pop
xchg
jmp
lea
sub
push
aaa
add
aas
cmp
cmp
ss
je
sub
imul
mov
push
clc
mov
adc
jmp
out
sbb
sub
bound
adc
mov
test
jbe
xor
lods
lret
dec
dec
daa
xchg
xor
rol
fdivr
stos
adc
iret
mov
cmp
hlt
pushl
sarl
jo
arpl
xchg
sbb
shrb
inc
clc
inc
sub
loopw
sbb
mov
xor
sub
iret
sub
sub
push
adc
cli
popa
push
cld
clc
and
out
and
push
sub
pop
xor
stc
je
decl
js
pop
les
xor
inc
xchg
std
add
insl
xlat
dec
xchg
mov
das
pop
mov
push
jnp
add
das
jmp
xor
pushf
add
cmp
ss
push
xchg
mov
pop
sbb
andb
jo
int
std
sub
insl
call
test
xor
xor
fiadds
jecxz
iret
cmp
test
pop
jle
int3
sub
aam
and
pop
cmp
inc
negb
dec
lods
sar
call
movsb
fstl
mov
jle
cmp
sub
sub
gs
adc
fs
ja
sub
jnp
std
sbb
pop
pop
mov
pop
sbb
mov
dec
aas
stos
lahf
push
pop
sbb
stos
rclb
icebp
decl
or
push
add
xchg
movsl
int
fcmovnbe
iret
mov
and
jmp
les
cmp
add
into
imul
pop
cmp
in
lock
xor
xor
cwtl
push
dec
in
xchg
jp
xor
ficompl
mov
inc
aam
adcl
mov
ljmp
subb
lock
push
mov
lock
mov
mov
add
or
push
mov
mov
arpl
cmp
or
jmp
add
dec
push
inc
aad
mov
pop
je
xor
xchg
icebp
inc
cli
mov
mov
xlat
adc
and
leave
test
je
cmp
fwait
mov
not
lret
jb
ret
mov
sub
loop
mov
int3
sub
sar
xlat
xor
lods
les
lods
xor
enter
test
in
jns
pop
mov
sbb
fldl
inc
jp
pusha
push
test
movsb
sub
fldl
pop
lret
ss
outsb
and
and
lock
sub
mov
adc
loop
add
dec
pop
mov
stos
sbb
cmp
pop
add
mov
mov
mov
aas
outsb
aaa
mov
cmp
fisttps
adc
adc
push
or
icebp
loop
dec
pop
cwtl
ja
out
mov
je
leave
push
sub
push
adc
mov
adc
sti
jnp
outsb
or
and
loopne
mov
add
outsl
pop
mov
cltd
ret
int
hlt
lret
xchg
dec
push
fdivp
negb
js
addl
fstpl
andb
mov
movsl
sbb
cli
and
pop
bound
push
xchg
jbe
std
push
test
push
cld
push
test
adc
and
push
jg
out
andl
add
pop
pop
fcmovnu
mov
hlt
testl
sbb
popa
cmpsl
pop
jnp
rolb
inc
pusha
cmp
test
inc
cwtl
incl
inc
jbe
fildl
dec
insb
mov
and
sbb
int3
pop
mov
or
pop
add
dec
mov
or
insl
pop
and
mov
decl
sub
mov
adc
insl
clc
xchg
push
in
push
push
push
xor
roll
mov
lods
pop
clc
adc
sbbl
ja
push
outsb
or
enter
rcll
adc
and
cli
idivb
push
push
xor
lock
sub
ljmp
call
hlt
or
and
in
clc
loope
loopne
inc
or
sbb
push
cmpsb
push
inc
mov
ljmp
inc
scas
adc
sub
lock
add
out
cmp
and
push
sbb
and
imulb
icebp
pop
aas
mov
fwait
dec
push
ja
shl
inc
mov
js
push
lock
xchg
ret
scas
and
sar
or
lret
inc
outsb
int
sub
mov
bound
xchg
out
cmp
pop
cmp
adc
sub
lds
push
test
or
bnd
ret
dec
push
xchg
orb
mov
jo
mov
outsl
dec
dec
setbe
push
dec
dec
sbb
jns
xchg
mov
mov
pop
mov
sbb
es
sub
cld
cwtl
hlt
je
mov
jmp
lret
fildll
jecxz
or
inc
or
into
push
movsl
clc
add
stos
mov
or
pop
decl
lock
add
js
in
sbb
push
test
or
cmpsb
in
in
insl
add
or
adc
pushf
loope
adc
out
dec
sarb
clc
scas
pop
xor
je,pt
mov
lret
jg
push
sub
clc
sub
addl
jns
add
or
push
and
repz
inc
std
push
adc
test
scas
lahf
sub
rcrb
and
loop
ret
clc
in
fidivrl
mov
pop
push
and
test
lahf
imul
cmpsb
enter
ret
lret
cmpsb
push
inc
lcall
xchg
sbb
and
mov
clc
pop
popf
popa
xchg
cwtl
xor
pop
push
adc
cmp
idiv
pop
adc
ja
jo
and
dec
loop
mov
adc
fdivp
mov
xlat
inc
mov
fimull
sub
fcomps
movsl
adc
sbb
mov
dec
mov
mov
scas
cmp
shlb
push
test
adcb
lret
mov
std
mov
rorb
adc
das
cli
cli
shrl
cmpsl
lea
pop
outsl
arpl
iret
scas
cli
scas
jb,pn
aaa
sbb
and
mov
ljmp
push
cmp
aad
cmp
mov
jmp
jmp
cli
call
rorb
adc
push
hlt
and
xor
add
pop
dec
xor
or
mov
xchg
mov
push
jbe
loopne
pop
loop
mov
nop
out
add
aam
xchg
cmp
fadds
call
lock
movsl
xchg
std
sbb
lcall
ret
or
inc
test
add
incb
or
das
pop
mov
js
jno
ficoms
sub
rcrb
xchg
ret
or
popf
pop
inc
movsl
mov
add
cmp
icebp
test
add
mulb
xor
hlt
sub
xor
out
push
pop
mov
adc
outsl
test
mov
or
and
mov
incb
jmp
mov
mov
loope
lcall
pop
dec
push
call
mov
icebp
sub
dec
cmp
jne
in
and
jno
cmp
push
pop
xor
stc
movb
push
int
inc
aad
gs
jo
roll
rclb
cwtl
cmpsb
lahf
in
xor
mov
ret
clc
ret
loope
out
es
add
or
dec
cmpsl
fs
adc
xchg
movq
xlat
fs
xchg
sub
push
les
out
enter
add
pop
imul
or
inc
pusha
inc
les
out
pop
lock
adc
test
gs
popa
fistpll
test
and
mov
jmp
or
cli
addr16
nop
rcll
xor
jp
and
add
xchg
mov
xor
mov
pop
push
xor
icebp
pop
sub
jne
jo
mov
xchg
mov
test
mov
inc
pop
or
or
mov
pop
mov
rorb
fsubl
inc
xor
in
scas
lret
add
and
mov
test
pushf
pushf
pop
into
add
sbb
mov
mov
and
and
push
popf
lea
mov
adc
push
lea
sub
dec
xchg
mov
inc
inc
movl
mov
mov
push
les
addl
mov
sub
aad
cwtl
sub
sbb
inc
sub
inc
mov
mov
pushf
pop
icebp
dec
mov
notb
sub
xor
push
xorb
mov
test
push
add
push
ss
mov
jmp
out
jb
loopne
fadds
out
lock
popa
inc
push
mov
push
test
and
andl
sbb
pushaw
cmc
aaa
mov
clc
add
out
es
push
shl
dec
add
dec
out
sub
jle
testb
sbb
stos
adc
cli
icebp
xchg
sahf
fstl
mov
xor
mov
mov
ds
or
les
fdivrs
loopne
xchg
add
jbe
mov
sbb
std
and
xor
adc
mov
rorb
sub
add
clc
pop
pusha
xor
xorl
xchg
clc
or
and
cmpb
or
cld
icebp
les
sub
or
xor
subl
fs
mov
mov
add
fisubrl
ss
bound
xchg
cmp
or
mov
push
aam
pop
fdiv
and
xchg
stos
jp
mov
sub
popf
insb
or
in
sarb
fadds
fmull
fstpt
ret
mul
std
mov
dec
pop
scas
adc
sarb
inc
shrl
adc
roll
shll
lods
int3
xor
sbb
sbb
inc
jnp
push
mov
adc
ret
dec
jne
lods
les
cmp
aam
push
mov
jnp
and
xchg
cmc
xor
divl
pop
jbe
in
jl
mov
and
xor
mov
std
je
shrl
pop
insb
enter
je
je
imul
adc
scas
call
cld
sub
pushf
ror
cmp
lret
out
dec
jno
into
jge
lock
sub
adcl
mov
xor
and
dec
jge
and
jb
or
push
insb
adc
mov
test
mov
in
add
push
mov
mov
ss
std
incb
ret
in
dec
sbb
mov
rcr
lods
jp
mov
mov
sub
stc
test
test
sbb
data16
xor
inc
mov
mov
clc
ljmp
or
jno
std
repz
ljmp
and
mov
jle
jle
loope
movsl
inc
sbb
adcl
add
scas
mov
pop
xor
jnp
xchg
fcomps
cli
push
mov
jne
push
xchg
ret
adc
stos
inc
add
call
push
imul
push
scas
xor
pop
fdiv
clc
loopne
mov
push
stos
jecxz
sub
inc
in
pop
dec
lret
adc
dec
clc
jg
mov
es
insb
mov
aam
xor
xchg
mov
sbb
or
sbb
xlat
mov
loopne
sarl
shlb
jo
ds
pop
fistpll
inc
xchg
ja
test
aam
outsb
cmc
add
jbe
mov
idivb
das
lcall
int3
jne
xor
hlt
out
pop
iret
sub
popa
and
cmp
stos
mov
adc
pop
shlb
call
inc
icebp
je
std
add
test
mov
xchg
cmp
outsl
dec
fcoms
add
out
popa
loop
shrb
xchg
xchg
add
mov
lahf
jge
bound
push
push
into
cmp
cmp
popf
push
cli
mov
jmp
cmp
call
fsubrs
add
mov
dec
ret
sbb
ret
sbb
add
inc
adc
add
jae
cld
fcompl
add
aad
lcall
ret
xchg
cmp
or
jle
or
jnp
movsl
add
or
aad
imul
incl
aaa
or
sahf
sub
mov
call
cwtl
sbb
xor
push
pop
cmpsb
jge
cmpsl
ret
inc
in
jo
mov
inc
xchg
or
stos
add
mov
das
jne
dec
lret
loope
inc
xor
or
inc
lods
sub
cld
loop
push
add
sbb
xchg
adc
cld
fnclex
or
sub
scas
jmp
xchg
ds
stos
mov
or
out
sar
add
push
or
push
adc
jnp
jge
adc
mov
add
outsb
mov
lods
mov
xor
jb
stos
fldt
push
and
fistpll
dec
jg
shl
mov
xlat
jbe
cmp
push
or
mov
hlt
dec
mov
sbb
cmp
xor
add
fdivs
sbb
cmp
popa
push
sub
adc
push
iret
scas
fsubl
or
cmpsl
push
aam
xchg
xchg
pop
and
fmul
or
gs
mov
ja
inc
cld
sbb
fucomi
addb
mov
dec
sahf
sahf
mov
pusha
dec
orb
movsb
mov
pop
mov
pop
push
fs
test
rcl
incl
adc
sub
mov
ret
push
shlb
test
test
popa
fsubp
mov
pop
out
data16
mov
mov
ds
pushf
in
mov
push
test
pop
lock
ds
pusha
addl
cmpsb
pop
outsl
rcrl
lock
pusha
aas
ret
add
and
jl
push
cmp
dec
ljmp
pop
jg
shrl
and
imul
loop
js
fdivs
loopne
imul
jbe
in
aad
sbb
push
push
in
sbb
fsubl
dec
inc
or
jo
mov
outsb
adcl
cmp
jnp
push
shll
xchg
dec
inc
xchg
mov
das
pop
push
adc
pushf
ret
add
cmp
mov
test
hlt
sub
pushf
inc
sbb
nop
cmp
clc
sarb
stc
mov
add
mov
sbb
cmc
dec
mov
push
cmpsl
mov
adcl
sbb
subb
sbb
push
add
scas
jmp
cmc
orl
out
inc
cmp
pusha
jmp
ficoml
popa
push
sbb
iret
mov
mov
sbb
ret
xchg
hlt
clc
lea
inc
aaa
mov
test
dec
sub
fidivl
outsl
mov
nop
ret
pop
mov
addl
pop
add
mov
add
ret
rolb
imul
and
mov
jbe
test
and
sti
ss
or
cmc
je
frndint
and
mov
in
mov
inc
inc
xchg
mov
test
xchg
pop
js
pop
mov
leave
ret
pop
jle
ljmp
inc
dec
jno
es
mov
scas
fwait
pop
or
inc
push
pushf
or
pop
mov
dec
loope
mov
fidivl
sub
arpl
and
cwtl
cs
cmp
jne
xor
or
cmp
out
add
rcrl
ja
fs
cmp
adc
fdivp
movsb
jmp
xorb
rcrb
add
push
mov
adc
mov
mov
jle
fldl
test
lahf
jp
inc
aas
pop
sarl
xlat
movl
mov
ljmp
movsb
push
push
sbb
push
mov
and
sub
hlt
mov
int3
and
clc
inc
xor
in
mov
cmp
shl
lods
orl
push
ljmp
loopne
mov
xor
dec
push
test
add
call
push
in
push
js
loopne
add
popa
or
pop
xor
pop
fiaddl
cmpsb
jle
mov
movsl
rorb
pop
jns
xor
jecxz
imul
and
mov
out
notl
adcb
xchg
lock
sarb
inc
movsb
push
mov
pushl
xlat
push
ret
sbb
or
pop
test
cmp
xchg
pop
shlb
mov
aas
cmc
dec
iret
js
testl
push
xor
jl
sub
sub
sti
shl
and
out
pop
pusha
adc
arpl
scas
push
or
jl
test
pop
pop
sub
movsb
fldenv
enter
lods
lods
mov
add
sbb
cmp
jp
xor
sub
and
inc
mov
inc
jo
adc
push
cld
cmpsb
fidivrs
fimull
cmp
mov
jle
popl
pop
mov
add
push
push
loop
push
daa
dec
addr16
push
out
mov
push
pop
out
test
inc
fisubl
lock
ret
mov
shrb
push
out
inc
jmp
into
ds
add
dec
and
push
lret
and
lods
roll
or
mov
cmp
cmp
or
rcr
lret
add
mov
mov
ljmp
fs
xor
jbe
pop
sarb
sub
or
mov
push
nop
mov
repnz
es
adc
inc
jbe
pop
mov
call
ret
int
iret
andb
shl
incb
dec
lds
stc
popa
push
scas
jns
orb
adc
leave
ljmp
pop
repz
hlt
loopne
xor
xor
fmuls
or
cmp
adcb
addr16
dec
or
xlat
mov
push
xlat
dec
xchg
dec
push
mov
rol
pusha
jne
cmc
pushf
popa
fcomps
jo
dec
adc
inc
dec
cmc
popf
dec
inc
xchg
or
dec
push
test
xor
jmp
pop
or
adc
or
sbbl
inc
mov
leave
fwait
xchg
inc
and
cwtl
clc
xor
jecxz
outsl
pshufw
into
dec
sbb
fcomp
test
adc
or
sub
loopne
sbb
mov
pop
pop
ret
sbb
xchg
push
inc
pop
sbb
xor
dec
pop
mov
inc
mov
int3
mov
xlat
cmp
adc
iret
std
jl
mov
inc
dec
addr16
lret
jg
dec
add
adc
jnp
ds
lea
sbb
mov
divl
add
cmova
aam
mov
loope
push
jo
adc
mov
nop
dec
fwait
sbb
stc
xor
and
data16
mov
pop
sbb
push
stos
pop
cmp
mov
add
add
inc
sbbl
sarb
in
rcrl
mov
mov
sub
add
ret
inc
sbb
arpl
cwtl
dec
test
nop
outsl
and
mov
cmpsb
cmp
nop
loopne
icebp
addb
imul
cmpsl
add
mov
out
jnp
mov
mov
xor
jmp
shr
sbb
xor
dec
aaa
dec
mov
ffreep
pop
andb
icebp
pop
fldl
mov
xor
mov
addr16
mov
lahf
fstpl
jmp
test
roll
dec
test
scas
sbb
movsl
fsubs
leave
jnp
inc
scas
cmpsb
and
add
ss
cmc
xchg
arpl
shrl
mov
je
js
adc
out
sbb
fwait
cwtl
fadds
mov
mov
sbb
sti
dec
add
and
xchg
cld
cmpb
lds
xchg
clc
add
cli
dec
jne
sbb
mov
adc
lea
in
xor
push
sub
es
dec
push
add
ja
pushf
jecxz
or
xchg
sbb
in
in
shrb
ljmp
jmp
pop
xchg
lds
rol
test
xorl
push
repnz
mov
adc
add
pop
lods
sub
xchg
mov
daa
shlb
cmp
pop
aaa
call
scas
cltd
jmp
add
mov
jne
rorb
or
out
push
or
pop
shl
dec
js
inc
int
mov
ret
mov
jle
or
cmc
aam
hlt
rol
js
or
or
fmuls
sub
xor
enter
jge
scas
and
add
jns
mov
mov
push
xor
into
pop
arpl
lcall
mov
xlat
repz
jae
inc
jo
stos
in
push
mov
outsb
test
xchg
xchg
or
jns
push
inc
daa
pop
andl
fcmove
aad
daa
andl
xor
sub
jno
jbe
cmp
mov
cmc
scas
inc
jae
hlt
cmp
repnz
cmc
sub
xchg
add
sub
mov
or
out
mov
xchg
xor
imul
sbb
mull
pop
mov
test
pusha
push
mov
and
jno
pop
xchg
ja
ret
adc
or
adc
and
xlat
stos
add
cs
insl
jno
or
mov
jge
xor
sbbl
or
fwait
mov
mov
cwtl
cli
xor
add
psubd
cmp
in
aas
push
or
lods
popf
ljmp
pop
sub
movsb
addl
scas
stos
adc
shll
jl
loope
pop
add
jns
lock
test
in
sbb
outsl
sbb
mov
in
push
mov
mov
and
inc
sub
fstl
rorl
push
inc
in
loopne
test
sub
push
je
or
or
icebp
les
int3
fdivs
push
icebp
xor
fsubs
out
lahf
push
push
addr16
and
mov
roll
jle
and
es
roll
cld
sub
lcall
jnp
daa
mov
xchg
jge
insl
jecxz
pop
pusha
xor
or
clc
mov
push
sub
sbb
sbb
push
ffree
jl
jp,pt
pop
add
push
sub
sub
mov
cmc
sti
xlat
addb
mov
stc
mov
push
loopne
lret
cmpsl
fadd
xchg
andl
js
test
mov
bound
inc
in
pusha
call
sar
loopne
enter
mov
icebp
fdivrs
and
inc
jmp
nop
dec
imul
add
fmul
mov
push
cltd
cwtl
cmp
scas
mov
add
rclb
cmp
pop
pop
dec
js
cli
lret
jns
lahf
icebp
loopne
sub
mov
nop
aas
push
or
push
add
xlat
jp
cld
jle
pop
loopne
xor
dec
dec
dec
imul
dec
lahf
or
pusha
mov
dec
cld
dec
movsb
xchg
xchg
test
jg
hlt
mov
pop
outsb
adc
mov
xchg
sub
clc
mov
addb
sub
and
outsl
pushf
cmp
fucom
push
aad
ljmp
movsl
divb
insl
imul
mov
dec
mov
cmp
or
adc
jge
jle
pop
rorb
lret
ds
pop
or
add
incb
into
pop
inc
data16
imul
bound
xchg
xchg
scas
pop
xchg
and
jne
subb
icebp
xor
mov
mov
and
jns
jb
and
xor
or
into
cld
insl
jns
rolb
add
xlat
xor
mov
sarb
and
popf
out
cmp
lcall
pop
jae
arpl
scas
adc
pop
dec
cmpl
mov
cmp
loope
je
push
pop
or
out
in
xchg
pop
loope
jo
bswap
pop
xchg
in
mov
mov
push
pusha
xchg
fneni(8087
pop
mov
andl
loop
lea
adcb
adc
out
lahf
shl
imul
call
mov
mov
cmp
imul
sub
mov
cmp
push
cs
mov
xor
fcmovnb
sub
xchg
int
sub
lcall
mov
mov
call
add
test
xchg
call
sbb
popf
imul
pop
cmpsb
push
ficoms
inc
mov
mov
fcompl
jmp
fnstcw
jge
test
ret
xorb
xchg
cmp
cmc
push
push
mov
mov
shlb
adc
mov
mov
and
cmp
dec
mov
mov
xor
popf
fdivp
test
mov
sub
add
adc
jp
inc
pusha
into
cmp
lock
push
clc
movsl
ja
repnz
cli
pusha
dec
daa
pop
shl
in
adc
jo
cmp
ljmp
pop
add
out
pop
adc
mov
mov
int
mov
addps
jp
into
scas
aas
insl
insl
mov
in
mov
imul
ljmp
cltd
aam
ds
mov
mov
jl
iret
aaa
mov
mov
das
scas
mov
fdivrs
push
cmp
adc
pop
pop
das
lods
push
loope
call
rcll
shrl
cmpsl
dec
icebp
js
std
leave
and
inc
ret
out
lea
inc
lret
cs
add
xlat
sbbl
dec
ss
cmp
int
jl
pop
or
ljmp
xor
adc
repnz
push
inc
mov
mov
add
dec
adc
jmp
imul
fstl
mov
mov
cmp
jb
fidivl
inc
add
mov
outsb
loop
or
aaa
adc
fprem
shll
repnz
jmp
lcall
lcall
and
mov
dec
paddsb
mull
dec
jmp
cmp
pop
pop
inc
lds
adc
shr
add
add
xchg
lods
jmp
test
das
pop
push
push
mov
cmp
out
test
mov
and
jne
hlt
add
or
jnp
inc
loopne
mov
imul
and
stos
adcl
ret
not
dec
add
cmpsb
lock
inc
sub
insb
jb
ds
aam
notb
icebp
push
xchg
pop
enter
popa
and
rorb
ret
adc
outsb
cli
lods
popf
je
cmpsl
mov
in
sbb
mov
push
mov
clc
cmp
stos
adc
push
cmpsb
jo
enter
push
pop
aaa
test
add
outsb
cs
xchg
sbb
mov
push
and
or
mov
dec
or
lcall
or
subl
fisttpl
mov
out
inc
and
cltd
xchg
fmuls
sbb
addr16
sub
sbb
mov
pusha
sub
and
cmpsb
mov
pop
pop
test
pop
dec
mov
ds
xor
xchg
jns
push
ss
mov
sbb
fbstp
rcrl
fdivr
loope
mov
jp
fdivrl
data16
inc
cmp
cltd
or
push
ds
mov
add
mov
dec
test
push
js
fdivl
in
aas
testl
mov
xchg
mov
adc
add
rolb
fistpll
decl
lods
pop
sub
shrb
cmp
dec
ss
sub
lods
mov
jecxz
adc
ret
mov
dec
dec
push
mov
mov
stos
fsubl
jmp
movsb
sbb
mov
pop
clc
and
leave
shll
outsb
lods
je
das
ljmp
mov
out
leave
dec
pop
xor
xor
xorl
scas
inc
inc
mov
pop
cmp
imul
dec
cs
call
je
cmpsl
pop
mov
das
or
inc
and
mov
inc
adc
rcll
cmp
cmpsl
lcall
pop
outsl
repnz
push
cmp
mov
sbb
mov
pop
scas
inc
nop
xchg
mov
outsl
push
sbb
mov
and
mov
push
push
pop
pusha
repz
mov
push
pop
and
out
mov
add
clc
mov
hlt
mov
xor
lods
fstpt
repnz
movsb
and
mov
je
mov
add
dec
lahf
adc
and
xor
mov
add
pop
mov
icebp
daa
sbb
push
xchg
mov
xor
push
dec
popa
jle
arpl
aad
loopne
rcpps
sub
and
mov
sbb
insl
sbb
pop
mov
xor
lods
call
cvtps2pi
xor
test
vmread
cmp
mov
cmc
out
adc
mov
push
xchg
pop
push
out
push
jge
add
mov
push
pop
mov
ret
and
mov
flds
movsb
push
add
inc
das
lcall
and
inc
lret
xor
cmp
pop
out
inc
mov
dec
lcall
int
out
scas
mov
sub
and
js
xchg
sub
pop
xchg
mov
test
add
call
mov
jl
pushf
push
je
insb
push
add
jp
jmp
xorl
popa
fbstp
mov
jle
jb
insl
clc
push
in
mov
jne
push
pop
loope
cmp
mov
sub
cmp
cmpsb
and
sub
ja
cld
clc
push
in
xchg
dec
mov
out
inc
and
sbb
cld
out
mov
mull
jmp
scas
loope
adc
pop
inc
xchg
push
mov
pop
jp
mov
repnz
push
aas
or
fmuls
ret
xchg
dec
mov
push
cmp
mov
cmp
popf
cli
xchg
dec
test
lock
push
add
sbbl
rol
cmp
arpl
xorl
inc
clc
sbb
stc
add
and
sbbb
xlat
sbb
call
push
leave
push
sbb
sbb
and
mov
dec
out
pop
in
xor
nop
insb
movsb
xor
or
in
sbb
push
mov
xor
cltd
inc
iret
or
imul
loope
push
xchg
pop
imul
xchg
adc
scas
popf
sub
xor
daa
jg
lods
mov
les
je
cmpsl
or
pop
into
scas
jmp
mov
insl
dec
inc
cmp
mov
push
dec
addr16
dec
pop
fstps
dec
xchg
test
pop
mov
mov
gs
pusha
in
pop
cltd
add
das
into
jbe
in
iret
push
clc
dec
inc
adc
pushf
mov
aas
js,pn
loopne
ljmp
insb
or
lods
cli
cmp
pop
jmp
inc
ficoml
sbb
in
das
jle
pop
addl
hlt
das
push
add
or
leave
flds
test
xor
scas
sahf
mov
test
push
repnz
xchg
pop
pop
dec
aad
mov
dec
inc
jl
add
rorb
call
bound
push
imul
add
ffree
pusha
sbb
push
adc
xorl
mov
and
mov
sub
rcl
sub
aam
mov
fidivl
pusha
push
ret
ret
pandn
sarl
fdivrs
xchg
mov
mov
rclb
insb
jb
out
cmpsb
test
lods
pop
repz
loop
js
or
adc
mov
je
in
push
fdivr
jo
xor
js
inc
push
js
subl
rol
dec
ret
jne
ds
aad
jle
or
dec
pop
xchg
repnz
and
insb
cwtl
push
fdivs
fwait
mov
and
add
std
leave
test
test
call
xchg
sti
dec
orl
dec
add
jne
insl
inc
inc
sub
loop
jo
or
push
imull
sbb
repz
cmp
cltd
ret
lock
aad
bound
out
cmp
sbb
iret
or
xchg
bound
ret
push
pushf
notb
ja
mov
push
inc
repnz
sub
cld
adc
mov
xlat
call
testl
jb
mov
addr16
ljmp
mov
xor
push
jne
insb
sarl
loopne
ljmp
js
push
and
cmp
ret
ret
lret
inc
or
jmp
gs
sbb
bound
mov
xor
rorb
test
clc
mov
mov
lcall
aas
adc
pushl
jl
arpl
mov
jns
mov
out
or
mov
pop
repnz
xor
sub
push
repnz
arpl
push
push
mov
sbb
jns
xchg
inc
pop
push
jl
popa
pop
fucom
scas
push
cmc
push
pusha
setg
insb
inc
shlb
in
es
xlat
mov
jne
sub
shrb
push
scas
fidivl
push
or
pop
cld
mov
les
sahf
aam
add
xor
popa
mov
sub
or
cli
bound
out
xor
jge
testl
add
or
mov
inc
movsl
cwtl
jb
mov
aaa
sbb
pop
sub
cmp
enter
or
jne
jle
add
mov
stc
dec
and
mov
and
inc
subb
dec
or
les
in
jae
mov
shlb
or
sbb
cmp
cmp
lds
js
bswap
cmp
inc
jl
mov
mov
dec
cmp
popf
lock
jp
mov
lret
jecxz
push
ja
mov
inc
lret
jecxz
mov
add
sub
mov
js
jp
inc
test
add
insl
add
int
sarb
add
xor
pop
bound
push
xchg
dec
ret
jl
jge
push
icebp
repnz
push
sbb
frstor
shrb
inc
stc
jne
pop
dec
add
lahf
mov
or
cwtl
cmpsl
inc
addr16
sub
lret
aad
pop
push
insl
mov
pop
repz
inc
je
imul
iret
iret
call
dec
or
xchg
enter
cmp
dec
xchg
mov
xchg
js
adc
rolb
mov
sub
pop
cmp
out
dec
cmp
lret
push
in
std
cmpsb
sub
jnp
fidivrs
sbbl
popa
cmp
cwtl
ficomps
xor
push
pop
ja
mov
dec
loop
jns
add
mov
iret
pop
push
sbb
call
into
int3
mov
jecxz
sti
movb
mov
xor
mov
dec
pop
and
mov
sbb
add
imul
mov
cld
ds
les
add
cmp
push
jge
pop
test
test
inc
inc
cmpsl
aam
cmpsl
and
lock
das
movsb
xchg
sbb
jo
mov
andb
enter
pusha
mov
dec
pop
and
dec
insl
ret
sbb
aad
stos
push
rolb
lods
mov
jmp
mov
or
mov
fistps
xor
das
xchg
mov
addr16
movl
mov
adc
stos
pop
add
jge
arpl
push
inc
dec
or
clc
lret
in
mov
jo
mov
aas
mov
jns
push
mov
and
sti
jo
cmp
xchg
nop
dec
fs
jge
test
cmpsb
test
or
imul
sub
filds
outsb
or
xor
and
or
aas
int
and
movups
mov
push
push
incl
cltd
dec
mov
pop
loope
add
cmp
inc
sbbl
sbb
ss
adc
js
jmp
adc
rcl
mov
sub
loop
popa
loop
and
pop
test
cmp
in
fcoms
cmpsl
test
pop
js
cwtl
jb
testl
iret
mov
mov
std
inc
dec
lea
arpl
outsl
mov
mov
push
add
cmp
jne
loopne
test
jnp
inc
xor
mov
in
daa
repz
mov
out
fs
cmp
leave
mov
dec
lds
mov
or
push
stos
jp
test
mov
ja
lcall
fldcw
dec
rolb
mov
fadds
out
call
iret
data16
adc
loope
push
icebp
stos
mov
dec
arpl
div
movsl
das
jmp
sti
push
add
inc
mov
les
orl
imul
clc
inc
jo
shr
cmp
leave
sarb
xchg
lods
dec
outsb
clc
jmp
icebp
cmp
cmpb
js
add
aas
iret
lcall
insl
pop
mov
loop
js
sbb
pop
adc
pop
dec
inc
out
push
bound
ljmp
ror
cmp
xchg
mov
ret
test
test
and
sub
jns
sbb
scas
cmp
mov
jmp
lret
jbe
jl
stos
mov
mov
xchg
jp
or
shl
bound
std
mov
adc
xlat
testb
and
jmp
push
mov
in
in
mov
mov
iret
fisubl
imul
xchg
negb
jo
xchg
and
rcr
addb
dec
push
mulb
and
movsb
mov
push
int
jl
adc
push
or
lcall
icebp
xchg
mov
and
dec
adc
mov
xchg
cmovle
mov
test
add
and
xchg
xchg
loopne
jle
xchg
cwtl
pop
je
imul
mov
imul
fmul
pop
push
mov
mov
into
or
rclb
incb
mov
dec
shr
out
jp
push
add
shl
aam
loope
dec
out
cli
mov
aas
fsubrs
ds
clc
es
mov
ret
insb
repz
pop
stc
lock
inc
loope
xor
jne
mov
lock
dec
add
sub
mov
test
xchg
sarl
sub
pusha
adc
inc
aad
sub
cwtl
lods
filds
out
dec
test
or
aam
and
mov
xchg
std
mov
inc
xchg
das
icebp
dec
dec
ret
mov
push
lock
fcoml
cmp
jbe
js
ds
daa
cmpb
mov
sbb
jo
xchg
testb
add
adc
out
inc
sub
inc
add
jg
and
xor
push
stos
test
ds
fwait
inc
jae
adc
lds
je
decl
pop
fmull
fsts
mov
call
xor
scas
fs
or
loop
cld
adc
jnp
test
or
pop
add
ljmp
add
daa
adc
sti
ret
fwait
into
xchg
fsubs
jb
cmp
dec
push
test
lahf
inc
fdivs
popa
pop
push
clc
shrl
mov
int3
push
xchg
cmc
rolb
sub
outsb
xor
mov
jge
out
jo
jns
adc
sbb
and
clc
in
mov
ret
xchg
push
test
cli
push
inc
xorb
jno
mov
stc
cld
movnti
jne
pushf
adc
xchg
cwtl
pop
iret
sbb
clc
push
incb
mov
pop
jbe
add
andb
xchg
fdivs
sub
xchg
mov
add
fdivrl
mov
jbe
hlt
push
icebp
sbb
dec
mov
mul
test
sbb
orb
jle
shlb
mov
mov
sbb
cld
cli
mov
loopne
xor
ss
inc
pop
cmp
sbb
rorb
ret
pop
add
push
pop
inc
js
imul
sbb
out
add
xchg
dec
sbb
sbb
xchg
mov
mov
stos
sbb
dec
inc
outsl
orl
jnp
call
mov
xchg
daa
dec
insl
imul
repnz
out
pop
in
jmp
add
mov
xor
mov
xlat
jle
out
cld
ret
decl
sbb
push
rol
popf
les
jne
sbb
sbb
ds
mov
in
stos
sbb
test
add
adc
ljmp
test
add
ret
add
dec
cmp
stc
cmp
out
or
punpckhbw
pop
sbbb
push
cmp
insl
sbbl
xor
je
pop
std
loope
pop
data16
insl
shl
jno
pop
mov
mov
inc
xlat
repnz
inc
sub
movsl
fisubs
push
and
ljmp
xchg
push
insl
div
daa
jge
inc
mov
call
add
mov
xchg
cmp
pusha
inc
arpl
add
imul
jl
pop
lock
sbb
xor
sub
adc
fcmovne
mov
sub
xor
rcrb
outsb
fildll
rclb
adc
mov
aam
daa
pop
add
inc
rcl
mov
add
jecxz,pt
mov
cld
push
add
mov
jbe
js
sub
imulb
inc
mov
incl
push
jb
push
pop
pop
jle
xor
js
hlt
adcl
mov
subb
insl
push
cmpsb
and
fmulp
and
lods
mov
cmp
mov
push
stos
or
jge
xchg
scas
into
lahf
mov
loope
aas
mov
push
outsl
movsb
sub
xor
mov
test
imul
lock
outsb
ret
mov
int3
scas
enter
into
xor
lcall
and
pop
scas
inc
mov
xchg
xorb
je
fisttpl
loope
outsb
mov
xor
adc
jp
mov
mov
fsubrs
lahf
sbb
jnp
xchg
addr16
jmp
jecxz
mov
les
insb
aaa
aaa
dec
jmp
xchg
lea
stos
push
addr16
inc
pop
pop
adc
pop
movaps
cmc
sbb
icebp
out
xchg
aas
add
ret
addr16
or
cli
mov
test
push
addr16
in
das
and
jne
cmp
lods
ret
xchg
dec
fdivrl
ds
lea
sub
negl
and
sub
lock
xchg
std
mov
sbb
popa
cmp
mov
ja
cld
sarb
lods
outsb
repz
sarl
enterw
lcall
addr16
cmp
js
call
dec
cmp
jmp
aas
fstpt
mov
mov
mov
aam
pop
or
ret
lds
xor
lret
shrl
cltd
lock
iret
jb
fistpl
xchg
rcrb
xchg
rcrb
lea
dec
cld
fstps
dec
xorb
sub
cli
in
cmpb
push
adc
xor
hlt
sti
outsb
add
and
mov
adc
or
dec
or
push
bound
pop
add
imul
sbb
inc
inc
pop
dec
sub
adc
jne
push
adc
push
mov
ret
arpl
repnz
addl
bound
add
ret
bnd
test
inc
call
add
ss
aam
mov
push
nop
jecxz
hlt
dec
add
and
push
orl
pop
cltd
aam
imul
xorb
push
cmpsl
cmp
les
andb
ret
or
push
rolb
push
sbb
and
popa
inc
sarl
into
inc
jmp
es
rorb
add
test
pusha
and
add
mov
dec
lods
inc
dec
mov
popa
mov
mov
outsb
jp
in
ds
outsb
mov
lock
pandn
les
xor
call
mov
cmp
mov
pop
jnp
rolb
outsl
push
sbb
xor
stos
popa
xchg
lcall
subb
add
xor
ficompl
jg
and
pop
mov
pop
push
mov
scas
leave
jns
lcall
push
inc
fstp
jae
das
fiadds
lock
push
shll
decb
jb
call
sbb
mov
mov
gs
and
sbb
in
jp
shrl
pop
and
jp
sti
roll
push
or
lock
js
mov
push
cmp
das
lock
mov
fsts
stc
pusha
cmpsl
pop
in
mov
cwtl
mov
mov
add
xchg
jl
and
mov
xchg
push
sub
arpl
adc
dec
push
ss
js
cvtdq2ps
arpl
out
roll
incb
inc
mov
orl
inc
xor
sarb
pxor
push
sbb
stc
cmp
xor
lods
les
jl
jbe
cmp
shlb
inc
inc
repz
push
cltd
cld
add
fsub
scas
lahf
xchg
aad
rolb
lock
jg
push
add
shll
jl
xor
xchg
sahf
stc
ljmp
test
jl,pn
loopne
mov
mov
lea
mov
insb
gs
scas
ss
jb
jne
cld
lret
mov
dec
add
push
hlt
outsb
hlt
shl
mov
jge
cli
mov
adc
dec
jb
icebp
aam
cli
out
xchg
inc
inc
and
mov
pop
je
mulb
inc
sub
ljmp
adc
push
imul
dec
idivl
xchg
cmp
inc
xor
test
sub
mov
pop
hlt
mov
add
xchg
movsl
ret
inc
mov
xchg
cld
push
js
xchg
and
out
adcb
out
ret
pop
sti
fadds
aas
pop
jge
fmuls
iret
inc
movsl
or
or
movntps
in
cmp
idiv
mov
rolb
dec
pop
call
push
adc
sbb
clc
hlt
stos
push
push
dec
jbe
lods
ret
sbb
xchg
mov
cs
int3
adc
les
mov
add
mov
stos
jmp
filds
test
int3
dec
jmp
repnz
or
adc
mov
mov
ret
test
and
inc
cmp
inc
int
xor
fsub
pop
loopne
sbb
scas
and
mov
dec
inc
adc
dec
sarl
push
inc
jg
bound
pop
push
hlt
xchg
rcr
out
mov
ret
pop
int3
jno
rolb
sub
cli
or
jno
int
mov
push
lods
lock
pusha
inc
dec
hlt
push
pop
aaa
fsubs
out
add
sbb
cmpsb
aas
cmp
add
xchg
cs
pop
and
pop
or
insb
loopne
outsl
cmpsl
mov
js
mov
sub
cmpsb
pusha
or
js
push
jae
repz
pop
ret
movsb
fdivrl
gs
push
mov
mov
fwait
dec
loop
ljmp
adc
push
adc
loopne
clc
loopne
push
or
aas
xorb
push
rolb
clc
je
sub
cmp
lcall
adc
out
cmpsb
in
pop
insl
mov
lock
sbb
mov
nop
jne
sub
in
in
adc
sbb
mov
clc
int3
dec
push
je
push
ss
fdivs
pusha
movsb
xchg
ja
or
mov
xchg
stc
mov
mov
fwait
adc
fsubrp
aas
sbb
pandn
cmpsl
ret
cli
inc
outsb
pusha
stc
adc
mov
pop
jmp
cmp
adcl
add
aam
mov
xchg
xor
ret
enter
lock
loopne
push
jl
xchg
or
jl
or
sarl
and
adc
aaa
cmp
test
rorl
fisttpl
cmp
js
aam
test
stos
inc
mov
stos
push
je
cmpsl
sub
in
incl
lahf
imul
add
add
inc
cwtl
pusha
add
pop
lock
aam
push
sbb
pop
pop
dec
xchg
xor
pop
je
sbb
out
sbb
mov
ret
insb
or
mov
fdivrl
js
push
mov
mov
mov
push
lock
leave
jmp
sub
fwait
xchg
cmp
iret
mov
test
fsubs
mov
jecxz
pop
inc
adc
and
lahf
clc
fstps
pushf
sbb
or
popa
xor
jmp
push
leave
cmp
icebp
js,pt
jle
rorb
mov
aam
movsl
mov
jecxz
jp
pushf
imul
outsb
push
out
push
adc
inc
repz
xor
mov
dec
inc
popf
insl
adc
push
mov
mov
test
cltd
imul
pop
ja
pop
gs
inc
fdivs
icebp
xchg
in
mov
pusha
jae
cli
xchg
das
xchg
out
xchg
jbe
test
sbb
pushf
or
repnz
mov
ljmp
xchg
loopne
es
push
je
sub
sub
movsl
mov
xchg
lock
cmp
dec
repz
pop
pop
mov
and
pusha
push
add
mov
mov
aaa
sbb
mov
or
out
pop
incl
pop
push
je
pop
call
fs
ficompl
fbstp
adc
cmp
es
cli
out
mov
cli
aad
push
mov
ds
fs
cmpb
adc
inc
les
icebp
or
orl
bound
scas
orb
jns
negl
ret
jns
pusha
inc
sahf
mov
jl
sbb
adc
mov
add
imul
in
dec
or
dec
sub
inc
imul
cmpb
inc
or
xchg
inc
rcr
or
inc
mov
push
incb
and
mov
outsb
stos
sbb
test
sti
sbb
clc
sub
sbb
pop
rol
lret
add
imul
fdivr
or
fists
pusha
push
jo
xchg
inc
dec
mov
sub
jno
fmull
sahf
adc
or
cwtl
mov
add
pop
fisubl
repnz
inc
minps
jmp
fs
daa
ss
lahf
dec
fs
fwait
or
and
add
test
mov
lods
push
xor
mov
sbb
mov
jae
cwtl
mov
cltd
rcrl
xor
test
xchg
jp
sbb
lahf
shlb
push
shll
fidivrl
aas
sbb
add
pushf
sub
mov
nop
jnp
mov
scas
icebp
xchg
mov
insb
dec
mov
jl
insb
mov
mov
stc
daa
icebp
rcl
std
or
xchg
ljmp
mov
jg
das
pop
jb
addr16
mov
int
js
insl
push
cwtl
scas
mov
clc
and
push
notb
arpl
stos
push
jle
dec
pop
test
mov
call
inc
add
cmp
mov
into
adc
push
test
add
jmp
sar
mov
mov
push
out
xor
push
pop
and
xor
cld
test
lcall
out
push
movsl
movsb
cmc
cmpl
lods
adc
cli
bound
idiv
mov
data16
xor
insb
add
and
or
pusha
rcrb
subl
push
push
ret
lea
ja
imul
pop
sub
push
inc
xor
push
imul
inc
jbe
in
andb
shlb
fcomps
cmc
xor
fsubl
stos
nop
pushf
pop
adc
mov
adc
loopne
pop
mov
fcomps
pusha
pop
sub
or
jl
pop
enter
add
fildl
mov
fidivl
push
dec
inc
and
or
mov
nop
mov
and
call
jo
in
or
loope
orb
lock
lods
sbb
fwait
out
mov
pop
dec
xchg
cmp
dec
lock
int3
xchg
ja
cmp
inc
lock
aam
add
pop
cmp
push
jb
mov
mov
and
xchg
cmp
jo
add
and
push
decl
sub
int3
push
jbe
scas
scas
call
lahf
nop
lea
mov
pop
lods
icebp
xor
stos
sbb
nop
lds
push
repz
nop
out
je
test
or
add
das
mov
dec
jnp
jmp
inc
mov
lods
mov
xchg
dec
pop
dec
push
mov
add
rolb
imul
cmp
js
push
add
test
sarb
mov
rcrl
das
add
dec
das
push
insl
sub
call
aaa
pminsw
ja
dec
fwait
jge
pusha
dec
out
loope
inc
in
jmp
fildll
mov
xchg
pop
add
dec
insl
aas
cmpsl
pop
fwait
mov
sarb
test
mov
test
dec
jl
lock
orl
sarb
or
fildl
int3
inc
sbb
or
mov
mov
sbb
insb
jo
add
out
loopne
out
iret
pop
dec
aaa
mov
mov
push
xchg
test
outsb
paddd
mov
stc
adc
push
lea
daa
rol
int
sub
hlt
push
pop
fisubrl
jmp
adc
aam
daa
push
dec
mov
mov
fnsave
or
adcb
jns
xchg
jb
adc
add
sbb
xor
loop
mov
shrb
cmp
std
int
ret
outsl
sbb
mov
in
and
bound
ljmp
mov
stos
push
stos
sahf
lock
jmp
scas
xchg
lret
ss
popf
addr16
pop
mov
cld
and
mov
lds
jle
mov
cmpsb
inc
loopne
inc
nop
pop
sub
cld
mov
cmp
add
sahf
jmp
rolb
cmp
leave
jbe
enter
das
outsb
or
mov
and
push
jl,pt
hlt
repz
or
jg
sub
ljmp
ljmp
and
andb
ja
movb
and
adc
push
add
mov
sbb
rclb
data16
loop
addr16
mov
clc
push
xchg
out
add
and
jae
cli
inc
or
push
test
mov
out
int3
push
add
test
shrb
dec
pop
xchg
adc
imul
ret
insb
js
cmpsl
ficomps
incl
inc
adc
fwait
dec
stos
insb
ret
xchg
in
test
mov
fstpl
into
add
inc
mov
mov
jmp
into
sti
ss
test
sub
lods
xchg
inc
or
add
lds
negb
mov
pop
lcall
ss
addb
dec
inc
sub
mov
stc
push
test
sbb
xor
and
outsb
ds
lods
push
outsb
loope
mov
movl
fs
cmp
pop
adc
leave
add
aas
fwait
aad
mov
jne
inc
pusha
hlt
mov
pushf
pop
pusha
sub
cli
inc
mov
pop
outsb
mov
pop
daa
add
add
adc
sbb
lea
jp
jg
or
pusha
leave
js
cmp
xor
inc
mov
inc
xchg
add
popa
and
dec
add
addr16
mov
popf
fadd
cmp
orl
in
lahf
es
cmp
jo
loop
xchg
dec
jo
xchg
lcall
xor
je
mov
xor
mov
sbb
mov
mov
mov
aam
mov
add
mov
mov
aaa
jbe
sti
in
test
arpl
lock
les
jge
sarb
dec
popa
add
jg
mov
xchg
test
imul
enter
stos
adc
add
pop
push
insb
mov
dec
mov
out
jmp
lret
jnp
mov
xchg
lods
cmc
sbb
pop
mov
bound
jo
lods
bound
xchg
lret
cwtl
notb
mov
push
lret
push
mov
scas
or
add
leave
mov
add
imul
sbb
enter
push
or
out
in
xor
mov
inc
cld
sub
mov
imul
xchg
cwtl
ss
sbb
jbe
lock
test
mov
fnstsw
and
mov
shlb
cli
scas
mov
sbb
aad
push
xchg
lock
lods
or
xlat
test
bound
adc
fisttps
cmpsl
dec
cmp
iret
in
shlb
cmp
pushf
adc
pushf
jl
aam
pop
dec
sub
and
insb
jmp
mov
cmpsl
push
adc
mov
stos
push
mov
dec
xor
or
dec
lds
jbe
rorb
subl
dec
je
add
int
add
inc
arpl
dec
inc
lods
dec
cmc
add
stos
loope
imul
cmp
add
ret
inc
xor
mov
rcll
add
aaa
xor
lret
cmp
fwait
and
jo
add
mov
xchg
sub
js
nop
loope
lock
scas
add
aad
mov
out
iret
insl
dec
iret
out
add
cld
jmp
and
jb
push
int
nop
pop
fcmovb
cmpsl
xor
add
and
dec
int3
daa
inc
je
loope
dec
lret
sbbb
or
dec
mov
add
ret
addr16
or
sub
jmp
cmp
mov
jg
dec
sub
repz
push
ds
push
aad
ret
sub
dec
je
popl
inc
enter
push
add
lcall
push
mov
mov
sbb
into
enter
inc
cmp
nopl
aas
jmp
cltd
push
adc
inc
and
out
pop
adc
add
adc
pop
cmp
lahf
dec
jg
push
arpl
cmp
js
sbb
hlt
sub
jno
lea
and
adc
pop
xor
dec
daa
push
or
cwtl
outsb
les
jmp
ficompl
insb
push
test
cmp
insb
push
add
adc
jae
clc
jl
jecxz
push
jge
int3
in
popf
iret
jge
dec
push
iret
fisttpl
jp
jg
gs
orb
ret
push
into
cmpsb
add
add
inc
insb
jo
adc
sbb
pop
clc
cmpb
mov
cmp
rcr
mov
rclb
lret
mov
add
int
push
jo
xor
dec
scas
mov
pop
pushf
mov
add
adc
sub
sub
adc
add
and
ret
dec
sub
mov
pop
enter
dec
inc
lea
or
lahf
inc
cmpsl
aas
jp
loope
mov
sub
sbb
dec
pop
sbb
in
sub
hlt
leave
and
jp
or
cs
gs
lds
mov
pop
addl
add
sahf
in
rorl
lods
push
int3
pop
sarb
and
test
lods
shrb
sbb
mov
or
negb
push
push
mov
pushl
or
bound
and
cld
pusha
mov
mov
and
xor
or
jg
pop
shlb
push
das
test
jg
ucomiss
pop
enter
scas
cwtl
loop
jg
hlt
and
and
sbb
adc
scas
inc
push
dec
addl
ja
stos
xor
mov
xchg
ret
mov
mov
sbb
sbb
lds
adc
xchg
xor
out
xchg
or
xor
fwait
push
jmp
mov
mov
mov
inc
daa
inc
xchg
add
out
ja
pushl
outsb
mov
cmp
rclb
mov
push
data16
mov
call
ds
imul
xor
mov
sub
mov
out
mov
pushw
call
outsb
add
mov
mov
push
rorl
icebp
clc
or
das
enter
xor
cs
pop
xor
fmulp
mov
sub
cmp
hlt
or
dec
mov
and
stos
lds
in
pop
mov
sub
add
add
jle
cmp
pop
xchg
adc
lahf
cmpsb
pop
xchg
inc
pop
test
inc
insb
xchg
mov
and
popa
push
loopne
xor
cmp
jmp
mov
shrb
xchg
xlat
xchg
lea
xorl
adc
popa
xor
fwait
jle
and
mov
mov
inc
sub
sarl
clc
lds
jl
mov
dec
mov
pop
push
mov
push
nopl
pop
jecxz
dec
cmp
push
sub
push
js
popa
out
cvtps2pi
cld
sahf
outsb
outsb
add
adc
loopne
or
add
and
enter
lods
xchg
pop
xchg
aad
jle
xchg
scas
cmp
push
add
subb
into
movsb
push
mov
mov
daa
fisubrl
mov
pusha
xor
in
dec
xchg
xor
addl
or
cld
arpl
mov
sbbl
or
subb
mov
scas
adc
test
negb
jg
neg
ret
cli
adc
jmp
or
push
mov
cmp
roll
mov
cmp
pop
pop
mov
and
ja
scas
inc
add
pop
adc
in
cs
pop
shl
mov
mov
es
nop
pop
dec
cmp
addl
push
dec
test
and
hlt
or
lods
xlat
test
or
and
mov
adc
aam
sbbl
mov
int3
adc
mov
sbb
cli
ds
and
inc
movsb
sub
sub
mov
add
jo
in
jno
stos
sti
pop
sub
mov
mov
sti
adc
lcall
sbb
jo
sub
add
sbb
lock
jg
sub
pop
rorl
or
orl
xor
and
pop
pop
inc
mov
sbbl
mov
xorb
and
shlb
pop
xchg
pop
pushf
sub
mov
pop
ja
es
insl
pop
divb
icebp
and
lods
imul
movsb
sahf
test
std
les
mov
daa
mov
cli
mov
dec
push
dec
test
and
nop
shlb
jo
dec
ss
dec
test
add
push
xchg
or
sub
popa
mov
aas
sub
or
sti
addb
pusha
sub
add
aaa
dec
push
push
cltd
and
ds
xor
lds
mov
icebp
jg
jmp
orb
sbb
repnz
stos
mov
adc
outsl
jb
cltd
pushf
rcl
insl
mov
lods
daa
mov
sarb
sbb
mov
fs
shll
cli
ja
pop
cld
stos
iret
aas
cmp
xor
repnz
dec
mov
xchg
dec
jl
mov
filds
ljmp
push
xchg
xchg
push
mov
mov
mov
stos
push
sub
cmpsl
mov
or
ljmp
popa
cld
pusha
je
mov
xor
insb
pop
sahf
push
pusha
and
loopne
call
int3
mov
in
dec
scas
hlt
subps
inc
enter
adc
ret
test
lods
clc
arpl
lret
mov
out
jp
stos
std
push
fistpll
adc
mov
pop
and
test
mov
les
xadd
rcrl
jmp
add
xor
and
jnp
out
mov
push
out
loope
xchg
mov
inc
sub
rclb
xchg
push
ja
and
mov
sbb
inc
fcmovnb
pop
cmp
outsl
lods
rorb
loope
adc
roll
in
sub
adc
daa
loop
mov
pop
lcall
or
rclb
sti
cmp
test
loop
pop
push
in
inc
call
mov
rcrb
jg
rol
add
aad
add
enter
mov
sbb
inc
push
das
cmc
and
dec
inc
push
clc
or
hlt
cmpsb
repz
xor
fistpll
subb
and
ljmp
sahf
lds
inc
push
fsubr
outsb
sbb
and
int
xchg
cmp
mul
bnd
and
adc
xchg
xchg
adc
sti
in
ror
scas
mov
pop
jae
jge
sbb
pushf
adc
add
mov
add
mov
movsb
xor
in
mov
loop
rolb
shlb
jbe
xor
cs
jecxz
movsb
shl
cmc
xor
mov
push
ljmp
inc
andl
pop
mov
push
mov
shll
mov
and
loopne
aaa
pop
out
sbb
imul
cmp
push
hlt
ss
test
xchg
push
fildll
lock
imul
xchg
das
int
mul
add
aaa
loope
inc
sub
mov
push
push
movsb
out
xor
test
or
push
adc
loope
cld
bound
dec
addr16
or
cmc
mov
loop
pop
pop
repz
pop
orb
das
inc
fisubrl
push
inc
sbb
and
cmp
xor
mov
test
out
test
xchg
adc
das
mov
push
lahf
sbb
arpl
cmp
popa
inc
xchg
pop
sub
test
out
cmp
push
imul
stos
outsl
push
add
rol
xor
or
or
add
and
lahf
xchg
push
jne
push
sbb
jge
adc
mov
or
rorb
cmc
jnp
add
scas
in
mov
cwtl
or
outsl
rcrb
dec
outsb
jmp
outsb
mov
sub
cmpsb
xchg
sub
mov
decl
popl
mov
pop
scas
loopne
sahf
push
push
xor
mov
mov
orb
jle
cmp
and
xlat
dec
sbb
push
inc
or
cmpsl
jmp
aaa
jno
mov
sarb
test
cwtl
decb
sub
addr16
adc
mov
mov
push
les
lock
aaa
je
ljmp
daa
jle
dec
adc
sbb
and
in
inc
jns
pop
cmp
push
xor
fcompl
pop
xchg
or
xchg
arpl
pop
in
xlat
aaa
inc
cwtl
xchg
jae
cmp
xchg
pop
stos
lret
sub
mov
and
addl
clc
outsl
icebp
mov
adc
add
cwtl
cmp
orl
loop
cld
test
mov
lock
fcmovbe
outsb
jl
lahf
push
aam
fsubrp
pop
inc
mov
cmp
mov
mov
push
sbb
cltd
mov
push
leave
jbe
insl
je
shrb
dec
test
ret
pop
sti
or
add
ficomps
movsl
out
fs
adc
cmpsl
pop
movsl
stos
push
daa
or
fisubrs
loop
inc
gs
and
fstl
or
sahf
xchg
jmp
into
cmpsb
ds
pop
sbb
fnsave
sti
iret
sub
or
xchg
pop
icebp
cmpl
push
orb
lea
pop
movsl
pop
ds
add
lret
push
push
cli
adc
cmp
shl
imul
inc
xchg
pop
or
cmp
mov
push
rorb
xor
ret
pushl
jg
cmp
pop
mov
test
sarl
pop
mov
jl
xchg
sbb
pushf
loopne
test
add
call
xor
or
pop
cs
inc
adc
add
imul
jo
out
mov
pop
scas
lods
movsb
inc
and
mov
iret
adc
fsubr
adc
pushf
add
data16
das
in
cmp
es
push
filds
out
dec
push
pop
rcl
xchg
cli
std
inc
mov
dec
mov
cmp
sub
adc
add
sbb
sbb
dec
cmp
inc
jl
test
test
dec
or
repnz
js
rcrb
mov
and
push
adc
ds
fisubs
add
xor
jle
hlt
mov
xor
fisubs
lahf
repnz
add
scas
dec
icebp
inc
xchg
adc
movsb
mov
cmp
jmp
call
adc
pop
mov
lock
pop
adc
into
push
fisubrl
jg
or
add
and
cmp
push
cli
dec
stos
cli
in
pushf
icebp
push
fcompl
or
xor
jle
pop
mov
ret
pop
cwtl
adc
enter
jmp
loopne
cmc
inc
repnz
adc
and
jno
xchg
mov
mov
jae
hlt
arpl
push
lods
lret
jecxz
mov
pusha
mov
insb
mov
movsb
xchg
cmpsl
mov
jo
test
shrb
sahf
loop
push
push
sbb
xor
call
inc
das
jmp
rcll
mov
pop
repz
mov
and
jle
push
addl
xchg
js
ret
mov
repnz
dec
or
jae
aas
add
out
aas
andl
std
cwtl
js
ljmp
mov
push
jg
inc
pop
out
aam
or
rcl
test
push
imul
pop
fldl
ja
sub
sti
cmpsl
jmp
test
scas
cli
mov
pop
cld
into
nop
repnz
rolb
out
mov
sbb
outsb
das
addb
and
fcoml
int
inc
and
dec
sub
rolb
pop
mov
cld
fsubrs
jmp
loopw
nop
mov
xorb
mov
leave
out
orl
rol
loop
sub
mulb
dec
add
enter
jae
push
sub
shlb
add
fidivl
mov
dec
movsl
pop
mov
mov
clc
adc
das
ret
mov
mov
repnz
add
fs
dec
mov
and
ja
fildl
iret
fimull
jl
sbb
add
arpl
fwait
sub
xor
loope
aad
addl
je
pop
mov
push
mov
or
and
test
mov
lock
shrb
add
sbb
mov
out
loope
loopne
push
xchg
js
ds
lret
js
jae
push
leave
push
shlb
sbb
push
mov
lahf
js
fsubr
mov
and
xor
fwait
aad
int
fistpl
push
lcall
pop
adc
jge
shl
addr16
and
adcl
sub
dec
jl
inc
mov
icebp
mov
mov
inc
rcll
add
ja
push
jmp
pop
pop
je
mov
jnp
cmp
cmp
dec
test
insb
jl
xor
cmp
std
mov
push
orb
imul
iret
lret
test
repz
mov
cmp
or
je
lea
push
clc
pop
push
push
mov
or
fcomps
not
or
jl
mov
or
test
nop
push
inc
sub
pop
leave
and
out
jmp
es
xchg
negl
aam
or
test
mov
or
into
arpl
sbb
sub
jge
push
adcb
sub
ret
ljmp
das
add
cmp
cmp
or
push
ljmp
lret
mov
and
loopne
sub
lds
hlt
dec
es
pop
in
lods
pushw
xlat
loope
popa
fwait
sbb
dec
in
pop
test
cmp
test
sbb
sub
mov
sub
xchg
push
stos
push
movsl
pop
sub
out
push
sbb
and
jb
int3
cmpsb
cmc
xor
sbb
dec
mov
push
inc
push
fisttps
fidivrl
jmp
ficoml
stc
add
and
outsb
or
pop
push
add
xor
push
mov
xor
add
loopne
cmc
aas
loop
test
or
xlat
xor
call
jae
add
sbb
ljmp
rorb
imulb
push
lods
insb
inc
stos
sbb
rol
adc
inc
xchg
pop
mov
pushf
jo
or
mov
add
xchg
adc
lods
imul
xor
push
insl
jmp
inc
rol
out
adc
mov
push
sub
roll
negb
mov
push
xor
mov
inc
mov
push
and
jo
push
push
jecxz
and
out
std
add
add
jmp
adc
repnz
add
mov
roll
enter
push
rorb
pusha
cwtl
movsb
or
mov
leave
adcl
mov
xlat
ror
shrb
jnp
sub
cmp
xorl
push
aam
adc
lock
incb
inc
in
sub
push
add
les
and
rclb
mov
jae
pop
loope
loop
icebp
pop
leave
sub
cltd
idivl
push
and
push
fnsetpm(287
rclb
xor
sbb
jmp
jle
pop
pop
leave
ret
movsl
lret
mov
push
ljmp
or
mov
ss
sub
outsb
inc
pushf
xchg
inc
js
call
fadd
xor
ret
sbb
rcrb
loopne
out
pop
cmp
lcall
out
test
aaa
cmp
or
jle
js
rcr
or
mov
jecxz
mov
push
outsb
in
lahf
icebp
cmp
xor
jo
sub
popf
mov
cltd
scas
cmp
mov
hlt
or
into
fists
xor
xor
aas
outsb
xlat
lods
sahf
fiaddl
lods
rcll
mov
xchg
jecxz
cmovb
cmpsb
inc
fldt
jbe
fistpl
gs
push
push
imul
xchg
mov
or
insb
jnp
push
push
jl
mov
cmpl
dec
scas
leave
fisubs
fmul
jbe
dec
icebp
bound
add
aas
scas
out
outsl
add
mov
push
push
push
push
and
inc
movsl
test
pop
lea
xchg
and
out
in
jae
out
dec
jo
adc
arpl
divps
push
lcall
sbb
add
clc
add
sub
in
push
sbb
sub
movsb
push
sbb
jmp
jl
push
out
dec
add
bound
jl
and
call
xor
adc
int3
aad
js
sarl
fdivrs
ss
bound
loop
aam
push
cmpsb
adc
stos
xlat
lahf
fistpl
and
sarb
push
call
divb
lret
inc
ds
das
test
scas
mov
popf
mov
add
test
pop
fisubrs
cli
dec
ret
insl
aam
rolb
fdivrs
push
lock
add
fwait
mov
iret
mov
mov
icebp
or
mov
push
dec
and
dec
lahf
lods
add
into
sbb
aam
jmp
add
jmp
push
dec
les
push
data16
mov
mov
dec
pusha
mov
sub
leave
mov
jmp
dec
loop
mov
xchg
xorb
xchg
cmpb
lret
dec
sub
mov
cmp
cmp
clc
add
dec
negb
push
dec
outsb
pop
push
inc
mov
xor
add
movsl
sbb
stos
jno
mov
add
enter
cs
jmp
cmp
stc
scas
jmp
cmp
loop
js
loop
loopne
pop
sub
call
out
ret
or
pop
mov
adc
scas
xor
add
mov
je
movsb
push
or
cld
inc
push
fcomps
sbbl
notl
cmp
loope
call
jl
mov
icebp
lahf
inc
jns
ret
lea
es
inc
sbb
loope
arpl
mov
inc
lock
push
sub
test
aam
je
movsb
sbb
fiadds
loope
cld
jo
pop
sbbl
add
rclb
jmp
xchg
test
or
aam
jp
into
xlat
incl
xor
mov
test
loope
mov
jmp
ljmp
or
mov
mov
out
movsl
add
rclb
fdivrl
mov
push
xchg
adc
pushf
repz
cld
sbb
ljmp
out
or
fisubrl
pop
jg
aaa
in
xchg
add
sub
pop
outsb
mov
mov
cmpsb
pcmpgtb
mov
jo
cmp
cmp
sbb
lret
xor
les
inc
shlb
and
pop
inc
cs
ficompl
or
pop
in
mov
sar
repnz
pop
ja
les
lea
xchg
push
pop
sar
mov
pop
mov
xor
or
mov
outsb
movsl
pop
cli
out
je
add
aam
cltd
lods
xchg
lock
sub
push
shl
cli
bound
nop
std
pop
aam
in
add
and
cmp
xor
cmp
jmp
cmc
mov
leave
je
sbb
data16
sahf
pop
jp
fistps
xor
lcall
or
jle
nop
mov
or
cmp
push
or
ss
js
mov
mov
addr16
inc
pop
hlt
pusha
addb
jp
popl
pop
xor
inc
cli
pushf
jns
rcrb
or
or
and
fmull
mov
mov
in
jecxz
inc
loopne
add
lock
push
or
popa
icebp
lds
sub
rcrl
push
sub
xchg
arpl
stos
and
mov
loopne
inc
adc
jno
xchg
lock
fiadds
idivb
sub
enter
fwait
or
adc
adc
cmp
xor
xlat
mov
cmp
push
cli
cmp
inc
dec
shrl
xchg
cmp
imul
and
xchg
rcr
push
fadds
cmp
inc
testl
mov
pop
xchg
inc
cmovne
xor
sub
xor
repz
scas
ret
sub
push
in
dec
stos
cwtl
xchg
sbb
js
stc
cwtl
cwtl
adc
int
jmp
cmp
mov
mulb
inc
je
aas
jle
cli
and
pop
sbb
repz
push
add
adc
pop
inc
sub
inc
cld
aam
xor
push
or
fbld
fimuls
mov
and
into
jecxz
mov
ffreep
mov
add
or
mov
inc
xor
mov
xchg
jnp
fmul
aas
into
lods
sub
or
xor
jg
ja
pop
pop
push
shlb
pop
push
and
cwtl
mov
fnsave
sbb
into
add
fcoml
test
imul
adc
xor
sbb
rcrl
push
xor
push
mov
subb
rcll
leave
fisttpll
mov
sub
mov
test
mov
loope
dec
rcr
es
fld
pop
mov
fdivl
aam
pop
cmp
sub
jecxz
lret
iret
sub
push
stc
ret
jg
add
loope
push
push
push
push
inc
lds
iret
push
cmp
test
mov
xchg
aam
pop
dec
add
mov
popf
cmpsl
test
loop
inc
push
xorl
shrb
inc
ds
test
faddl
or
insb
mov
adc
insl
inc
xor
test
imul
rcrb
pop
or
jmp
mov
push
roll
jnp
push
insb
outsl
mov
cwtl
mov
lret
push
adc
cld
cli
je
popf
jno
mov
mov
andb
lea
mov
orl
xchg
mov
push
das
cmpl
mov
pop
mov
or
cmp
xchg
insb
jmp
cmp
cmp
jmp
jns
jae
adc
rclb
push
out
pop
inc
sarb
xchg
mov
jns
jle
ds
hlt
clc
shrl
or
and
adc
js
dec
nop
add
sub
pop
cmp
xor
xor
jbe
pop
push
imul
lock
into
sbb
js
repnz
test
js
or
jge
sahf
mov
jecxz
and
mov
add
jecxz
pop
lcall
xchg
test
mov
add
cmp
jle
xorb
sub
nop
jne,pt
fistpl
daa
or
shrb
hlt
mov
bound
add
pop
dec
xchg
je
dec
fimuls
jbe
addr16
aam
and
loope
sahf
pop
cmc
inc
mov
jne
pop
pop
cvtps2pd
xlat
outsb
dec
jae
test
jge
mov
test
push
aad
add
and
shll
dec
inc
hlt
mov
push
xor
or
sbb
pop
dec
call
popl
cmp
push
lea
dec
mov
mov
ss
stos
cmp
xchg
js
mov
arpl
bound
fistps
fists
pop
outsb
adc
cmp
pop
test
adcl
inc
insb
add
jl
add
sub
jno
adc
lcall
js
sahf
rcl
dec
add
das
shr
jbe
movsb
pop
addl
je
mov
jmp
xchg
loopne
inc
mov
xorb
add
mov
push
jmp
dec
inc
lcall
xor
stc
ds
jnp
jbe
lods
mov
mov
sub
or
mov
rcrl
mov
fsubs
lret
leave
mov
push
or
jp
fstps
into
roll
pop
mov
rcll
call
fisttpll
mov
sub
outsb
inc
das
sbb
cs
push
mov
das
insl
cmpl
shrl
cmp
jecxz
cli
es
in
sub
jo
es
stc
mov
pop
rcrl
sub
sub
lcall
and
mov
pop
mov
lret
lock
pop
addb
push
out
je
outsb
mov
pop
sbbb
fmuls
jbe
xlat
push
imul
push
mov
outsb
stos
mov
call
pop
cld
add
jmp
dec
je
sub
xchg
fwait
loopne
cwtl
mov
pop
xor
rcr
clc
adc
cld
lods
jno
add
lds
iret
adc
xchg
push
decl
cmpsl
sub
lods
push
mov
lea
or
mov
jg
mov
fs
inc
outsb
sar
faddp
cmpsb
push
mov
pop
xchg
add
cmc
cmc
xchg
pop
fidivs
scas
xchg
orb
fsub
jbe
js
sbb
or
adc
mov
cmp
addb
fsubl
test
mov
mov
dec
mov
je
and
push
sbb
inc
push
dec
mov
cwtl
scas
es
jmp
and
lods
ffreep
roll
xorb
into
and
mov
data16
loopne
pop
sub
psrld
jb
mov
cld
mov
add
sarl
and
push
popf
aam
jl,pn
adc
pushf
mov
mov
dec
pop
mov
stos
jbe
mov
roll
icebp
loope
in
xchg
push
xorl
xchg
adc
jle
pop
inc
test
data16
sub
out
push
inc
mov
push
loope
sbb
and
adc
adc
or
sbb
sub
xchg
xor
pop
movsl
test
push
and
xorl
test
push
dec
call
sub
fmull
pusha
loope
push
inc
jo
scas
int
pop
jnp
or
scas
lock
inc
adcb
movsb
fwait
dec
das
fdivs
xor
and
sub
data16
fs
add
clc
clc
mov
nop
js
push
cli
mov
leave
and
xor
mov
xchg
mov
idivb
jecxz
cld
cs
aas
notb
movsl
sbb
mov
mov
fisubrl
or
out
push
sbb
inc
pop
mov
or
jbe
push
inc
xchg
repnz
fnstenv
push
or
and
test
jmp
mov
addb
push
push
in
cltd
xchg
ret
lea
mov
dec
xchg
dec
scas
mov
insl
pop
inc
repz
xchg
fistpll
cli
pop
sbb
faddl
sub
push
std
inc
adc
adc
ljmp
lea
lahf
xchg
pop
mov
and
sub
add
sbb
cmp
inc
pushf
cmpsb
ljmp
daa
ljmp
cmp
cwtl
inc
push
ss
pop
fcomps
jmp
push
clc
nop
cli
shl
sbb
jp
and
in
push
je
scas
inc
sbbl
into
adc
jb
stos
xchg
jno
addb
or
mov
xor
movsb
movl
fcomip
lret
mov
rol
dec
sti
add
scas
fistl
aam
dec
cld
int3
shl
mov
jbe
push
sbbl
add
pop
inc
lods
mov
dec
add
popf
and
aad
sbb
and
sbb
lahf
pop
lahf
and
xchg
pop
jg
xchg
jp
repnz
daa
and
mov
mov
adc
mov
mov
dec
push
hlt
inc
xlat
jo
sub
inc
jge
loop
dec
xor
movsb
das
push
mov
sub
movsb
pop
jp
lock
stos
lock
xor
sarb
xor
dec
push
push
add
cmpsb
cmpsb
or
ljmp
filds
dec
scas
cs
xchg
push
push
xlat
orb
bnd
mov
push
adc
lock
icebp
test
sti
push
or
pop
mov
fbstp
inc
add
sub
sbb
sbb
or
push
shll
mov
test
loop
or
jns
xor
add
scas
hlt
xchg
shll
call
sub
xor
rcll
xchg
adc
ljmp
adc
pop
inc
test
orl
cld
pop
pop
pop
scas
xchg
ret
dec
or
add
adc
stc
rolb
std
inc
mov
loop
filds
lock
ret
xchg
push
aam
push
fimull
pop
repnz
fsts
mov
add
mov
mov
lcall
pop
int
xor
popf
push
or
aad
xor
fiadds
loopne
cmp
movsb
cmp
adc
arpl
sub
shrl
or
dec
mov
ret
mov
pop
sarb
mov
push
jae
outsb
dec
or
xor
mov
fdivs
sbb
insb
int3
sbb
sub
imul
jbe
adc
pusha
push
cmp
lock
pop
or
je
outsb
mov
aad
xlat
lock
xchg
lcallw
ss
icebp
clc
loopne
jmp
sbb
mov
sbb
jne
stos
cmp
lret
aas
xchg
xchg
testl
ljmp
cmpl
xor
clc
lds
jp
dec
out
cmpb
and
inc
lock
push
arpl
inc
cmpb
mov
daa
push
pop
repnz
cmc
push
mov
sub
mov
mov
mov
mov
addb
sub
test
xchg
jno
add
repnz
aad
pusha
lods
fldl
push
fmuls
imul
neg
out
sahf
into
loop
call
ret
xorl
aam
or
add
mov
xor
stc
and
lcall
pop
push
sbb
and
ret
in
call
jns
test
int3
rorb
cmp
mov
frstor
mov
cld
xor
in
out
cli
les
add
add
dec
int
stos
adc
dec
jle
and
dec
sbb
cld
jmp
cmp
mov
lock
stos
mov
repnz
and
pop
xor
mov
push
jge
mul
mov
add
jle
or
sti
sbb
adc
ss
cmp
sub
out
das
loop
push
push
dec
outsl
cli
test
mov
loop
pop
sbb
and
movsb
mov
sbb
mov
xor
sahf
dec
loop
xchg
lea
lret
jle
push
rorb
cli
cmp
shlb
push
mov
lds
mov
pop
adc
xor
jo
dec
popa
dec
push
mov
repz
adc
jecxz
call
adc
dec
or
adc
or
loop
outsb
add
adc
test
shlb
cli
arpl
test
push
and
push
daa
pop
stos
add
push
inc
adc
mov
repnz
xor
mov
push
push
mov
jmp
scas
add
pop
rcll
dec
call
lret
mov
fildl
xchg
mov
stc
sahf
sub
jg
cmp
clc
dec
mov
and
inc
xchg
jge
mov
je
sbb
je
jg
lock
ljmp
push
jp
add
loop,pt
or
test
lods
ljmp
lock
cmc
add
into
sbb
sub
pop
pop
fldl
jb
dec
sub
cld
pop
lret
jo
pusha
cmp
push
push
and
cmp
xor
pop
adc
and
mov
fiadds
mov
and
push
aaa
or
push
lock
cmc
sti
adc
movsb
adcl
or
mov
xchg
mov
and
push
pop
mov
inc
inc
xchg
adc
jle
jno
dec
mov
outsb
xor
jle
dec
test
mov
adc
mov
mov
ja
roll
jmp
pop
test
mov
jecxz
push
pop
lcall
arpl
decl
mov
cli
aaa
adc
add
leave
popf
add
add
or
pop
in
inc
add
push
cli
sti
bnd
stc
es
push
movsb
add
mov
rcrl
xor
jge
ds
addr16
int3
fstpt
ds
sub
mov
mov
lock
ds
arpl
or
hlt
movsb
in
sbb
fs
pop
fnsave
rclb
cltd
push
insb
sbb
ret
ds
ds
in
adc
inc
out
mov
mov
js
fwait
dec
push
fidivl
sbb
mov
sbb
clc
adc
xchg
dec
sub
adcl
sub
imul
jmp
lods
mov
pop
ljmp
stos
cmpsl
sbb
pop
sub
pop
or
sar
pop
fildl
jae
movsb
pop
push
lds
adc
mov
mov
sbb
inc
les
or
mov
push
lahf
out
mov
or
mov
pusha
je
fsubrl
push
mov
jo
cwtl
or
loope
ss
cmp
iret
fidivrl
add
adc
div
and
adc
shrb
sub
cltd
mov
lret
neg
sbb
or
mov
adcb
cmp
or
push
ret
inc
test
movd
inc
push
out
pop
xchg
jo
mov
xchg
ret
scas
pop
fadd
pop
orb
adc
ljmp
in
hlt
iret
mov
pop
mov
fstps
jbe
lret
negl
insb
jmp
push
ret
mov
imulb
stos
cmpsb
jmp
fs
mov
scas
aam
ret
or
pop
or
sub
rorb
lock
sub
mov
adc
fldl
add
dec
mov
fcoms
cmp
mov
or
cli
stos
inc
enter
xchg
mov
or
sarb
inc
iret
aad
push
data16
call
pushl
inc
dec
adc
add
test
jne
nop
je
pushf
push
fdiv
add
jo
xlat
cmpsb
incb
in
pop
mov
aaa
fwait
cs
lret
inc
ja
test
jl
jp
pop
jae
cltd
loope
test
push
push
aas
adc
jo
mov
test
enter
pop
mov
sbb
sbb
xchg
rcr
push
mov
lcall
push
mov
mov
sbb
xor
pop
mov
push
incl
inc
mov
adc
leave
mov
insb
insb
fiaddl
xchg
adc
outsb
dec
jp
outsb
lahf
or
jb
mov
inc
add
push
fmuls
test
cmpsb
sbb
pushl
lods
dec
in
shr
mov
roll
lcall
or
loope
sub
jge
xor
push
inc
imul
sbb
sub
pop
call
cmp
or
add
and
jle
scas
int
jp
sahf
jno
jns
push
in
inc
add
cmpsl
lcall
nop
pop
cwtl
pop
fisttpl
mov
inc
daa
hlt
arpl
out
clc
bound
call
or
loopne
sarb
mov
push
mov
mov
inc
int3
xchg
push
jl
or
insb
cmp
pop
cld
sbb
mov
pavgb
dec
das
add
fimull
not
mov
divb
inc
push
push
push
jg
sub
rclb
push
subl
popa
lods
cmc
pop
push
xchg
xchg
push
or
sub
add
cwtl
mov
push
add
push
sbb
lds
out
push
xor
inc
cld
loope
adc
pop
inc
sahf
subb
or
or
push
rcll
sbb
stos
in
andb
addb
push
xor
jle
or
out
xchg
repnz
push
add
dec
jo
push
ret
fdivrs
or
jl
adc
test
cmp
rolb
cmpsl
and
pusha
call
movsb
sub
adc
sbb
jle
loopne
sbb
mov
pop
sti
cmp
dec
je
cli
sub
std
mov
sbb
pop
jno
xchg
mov
aas
adc
xor
pusha
pusha
dec
rcr
shrb
sti
pushf
in
clc
push
ret
jp
push
sbb
jl
call
clc
adc
jbe
das
jmp
lahf
les
push
stos
push
xlat
fwait
leave
or
dec
and
std
push
mov
push
jge
adc
lea
jmp
jae
pushf
jmp
push
mov
bound
loop
sub
jb
adc
lcall
or
or
cmp
sbb
add
imul
lods
clc
scas
jo
cmpl
pop
dec
mov
jg
loopne
test
jae
fdivr
mov
add
insl
or
xor
fstpl
mov
jp
add
je
cmpsb
pop
stos
and
xor
out
out
aam
fsubs
mov
lret
ficompl
decl
add
incl
ret
inc
ljmp
loop
pop
dec
mov
dec
mov
sub
gs
and
pop
cs
mov
mov
ret
in
jae
lret
mov
push
stc
dec
jecxz
int
popa
nop
popl
xor
push
js
iret
push
dec
rclb
aaa
lock
mov
mov
insb
sub
inc
mov
mov
loop
inc
orl
sub
int
addl
loope
push
mov
das
inc
addr16
nop
popf
or
test
lds
lods
stos
mov
std
ret
lods
xchg
inc
nop
lahf
mul
push
roll
test
lock
popa
popa
sub
mov
adc
rcll
xor
xor
xchg
add
sbb
pop
mov
ja
loopne
pusha
les
mov
rolb
fwait
and
mov
ds
mov
inc
loopne
dec
and
insl
nop
xacquire
fildll
jbe
and
test
and
jecxz
or
jb
ret
or
mov
or
add
mulb
push
xor
xor
pop
and
and
mov
pop
xchg
inc
xor
ljmp
adc
imul
hlt
xor
ljmp
pop
xor
jmp
cwtl
out
and
mov
cmpsl
mov
adc
mov
mov
sahf
or
push
xor
xchg
test
jnp
shll
fcompl
aas
inc
pop
jle
test
adc
xchg
movsl
push
inc
push
jns
pop
push
mov
sub
stos
add
sub
mov
inc
sbb
hlt
cs
data16
jns
push
out
xor
adc
mov
out
or
adc
sarb
fcomps
pop
orb
and
ds
adc
mov
rcl
mov
scas
push
and
das
pop
push
or
mov
addl
and
cmpsl
out
incl
push
push
sti
insl
mov
pusha
mov
in
test
mov
cmpsl
jle
jnp
add
and
mov
push
jp
lcall
mov
dec
push
inc
mov
ret
dec
cmp
inc
pop
jecxz
adc
mov
pop
mov
test
imul
lds
pop
stos
inc
aas
inc
adc
je
cmp
ror
gs
xlat
dec
aad
addr16
sbb
rol
xchg
inc
cld
pop
scas
icebp
bound
sub
faddp
push
and
lahf
xchg
pop
adc
pop
cmp
dec
in
lahf
cmpsb
outsb
push
lods
mov
nop
lock
fs
pop
push
jae
movsb
sbb
xlat
xchg
sub
mov
enter
pop
add
andb
sub
popf
add
add
mov
arpl
repz
and
mov
addl
cmc
aad
mov
in
adc
pop
movsb
sbb
shll
pushf
aaa
and
mov
xchg
adc
inc
inc
push
cltd
sub
ds
adc
add
fs
xchg
insl
adc
scas
std
or
shrl
add
mov
adc
jne
mov
lods
push
iret
xor
das
mov
xor
mov
jns
or
daa
adc
sbb
push
ret
adc
mov
adc
xor
enter
jmp
adc
scas
dec
shll
flds
rorl
ds
mov
dec
imul
mov
es
jns
arpl
nop
or
xchg
cmp
sbb
rcll
add
pop
jmp
arpl
sbb
mov
out
cmpsl
or
mov
pop
pop
pop
cmpsb
inc
push
mov
sti
or
movsl
int
cli
mov
lods
mov
mov
mov
cmpsl
mov
outsl
dec
and
xor
filds
or
add
mov
xchg
pusha
sub
pop
cmp
popf
jns
mov
and
add
stos
pop
call
shr
jns
xor
les
cwtl
js
bound
inc
stos
ljmp
cwtl
xchg
ret
lock
sub
in
sbb
pop
adc
aam
lds
inc
dec
cmovno
aaa
and
scas
pop
sbb
sub
cwtl
sub
enter
mov
into
sub
stos
and
pop
cmp
adc
pop
add
and
mov
jae
push
mov
xchg
pop
jmp
negl
and
loope
lods
pop
mov
dec
imul
fwait
add
sti
stos
mov
pop
lds
lea
add
enter
dec
enter
push
dec
pushf
pop
push
xor
scas
fwait
jp
mov
pushfw
mov
add
cmp
sub
xchg
inc
aas
sbb
cmpl
nop
xor
std
rclb
mov
in
repnz
push
dec
mov
mov
or
and
sub
call
movsl
cmp
dec
pop
add
or
fdivl
mov
rclb
cwtl
imul
adc
mov
shlb
jo
popl
mov
lea
cmp
test
aad
std
les
out
jns
vxorps
jl
dec
jb
add
lret
les
nop
fists
add
cmp
sbb
mov
xchg
daa
imul
iret
or
fisttpl
test
xor
jnp
fadds
adcb
int
js
xor
loop
pop
out
jp
fisttps
loopne
jo
mov
daa
mov
jmp
pop
popl
inc
and
cs
mov
sbb
add
mov
and
adc
out
mov
imul
movsb
sub
mov
mov
push
loopne
fwait
orb
add
ljmp
sahf
lods
in
xor
push
aaa
cmp
in
fists
js
xchg
lds
add
cmp
gs
push
test
loopne
sbb
fwait
inc
adc
xchg
mov
loope
mov
xlat
scas
adc
jne
loop
inc
xlat
dec
cmp
push
jle
jne
or
vpmulhuw
pop
mov
mov
cmp
jl
mov
pop
cwtl
push
arpl
pop
ss
or
sbb
push
inc
ja
and
add
inc
cvttps2pi
out
inc
dec
push
mov
xor
movsl
inc
and
arpl
add
test
ret
fldt
mov
xor
jbe
add
cmp
clc
repz
int
imul
inc
add
bound
out
xlat
mov
insb
dec
pushf
and
inc
and
or
out
test
inc
xchg
pushf
dec
test
iret
idiv
jo
jo
sbb
loopne
inc
sti
mov
sbb
imul
rorl
clc
movsl
or
pop
jp
jg
jnp
pusha
ret
jmp
into
movsl
push
outsb
dec
push
arpl
push
fmull
mov
mov
sbb
xchg
aaa
repnz
loope
push
push
fwait
test
cmp
sti
loop
scas
in
and
cmp
popa
xchg
lret
addr16
stos
sbb
scas
jmp
cmp
lret
jle
lret
lock
sti
push
fcompl
push
fisttps
inc
or
inc
jae
sub
push
pop
push
imul
sbb
test
sub
test
std
adc
xor
mov
mov
push
gs
jo
lahf
subb
cmpb
ss
lods
scas
ds
and
xor
cld
xor
push
jns
inc
js
cmovge
loope
test
mov
mov
loop
or
mov
xchg
incl
sub
fimull
jg
sub
inc
push
icebp
ror
xor
mov
and
filds
jae
mov
hlt
subl
jno
mov
jmp
leave
jbe
bound
mov
xlat
call
xchg
les
pop
adc
inc
cmp
pop
inc
inc
scas
add
cmp
scas
pop
clc
jecxz
negl
add
push
loop
xchg
decb
mulb
sub
fidivrs
add
mov
mov
pop
add
addr16
jne
xchg
pop
sbb
loop
insb
subb
pushf
xor
inc
add
jg
sub
adc
shr
movsl
xorl
bound
jge
mov
and
test
std
jne
pop
shr
pop
je
cmp
mov
xchg
rolb
inc
sbb
sbb
lret
pop
lock
shr
inc
out
idivb
push
js
and
enter
mov
push
aas
les
in
push
dec
adc
pop
mov
cmp
sbb
mov
mov
out
lock
cmpsl
push
aas
nop
jp
mov
loop
dec
xchg
sti
mov
mov
insb
sti
mov
jge
ss
iret
cmp
scas
out
sub
jl
rclb
and
cmp
daa
jae
mov
movl
rorb
ja
insb
pop
sub
scas
xlat
loop
loop
test
cltd
push
mov
pop
jg
insb
sub
pushf
outsl
pop
sbb
mov
jo
gs
rclb
clc
xlat
mov
xor
adc
or
and
loopne
das
or
and
icebp
lds
pop
jae
sub
inc
push
pop
and
into
cli
cmp
push
xor
imulb
inc
jle
insl
inc
push
outsb
enter
xlat
push
lock
testb
test
dec
push
outsl
es
pusha
pop
inc
incl
add
das
dec
pop
lock
jg
pop
push
jecxz
jge
shlb
xor
lahf
cmc
add
mov
xchg
ja
jle
lock
push
popa
fnstsw
or
and
es
scas
xchg
jo
cmpl
lahf
pusha
cmpsl
mov
and
cld
mov
jbe
ror
jle
aas
or
add
pop
add
dec
frndint
test
xchg
cld
jb
or
lods
movsb
add
mov
pop
add
jg
mov
pop
push
lds
mov
mov
mov
out
repz
cltd
out
mov
hlt
and
ret
sbb
fisubs
rorb
cmp
aaa
xor
pushf
lock
rcrb
lock
sub
push
shrb
add
mov
loope
pop
loope
out
addr16
mov
clc
aaa
and
dec
add
es
cmp
bound
push
adc
adc
scas
pusha
mov
aam
sub
repz
mov
xor
mov
pop
lock
push
mov
xor
fidivs
push
fwait
lock
push
imul
cmp
mov
lock
pop
mov
das
push
xchg
mov
orb
or
push
pop
pop
or
mov
mov
jmp
aaa
mov
xorb
mov
mov
sub
outsl
inc
imul
test
xchg
jl
pusha
ljmp
sarl
sub
sbb
sti
sub
and
lods
adc
xchg
inc
lea
xchg
jo
aad
mov
push
aad
adc
xchg
ds
jecxz
jecxz
int3
adc
jns
mov
lcall
cmp
cmp
add
xchg
pop
ja
sbb
xor
sbb
dec
sub
and
jle
stos
pop
fwait
sub
sbb
repz
jmp
test
daa
xchg
aad
movsl
xlat
jle
add
mov
mov
hlt
adc
scas
dec
jbe
xor
sbb
xchg
js
inc
dec
jb,pt
fs
inc
rcr
test
ret
ret
aas
push
mov
lock
adc
fucomip
cmc
outsl
xor
lds
lock
cmpsb
out
ljmp
icebp
push
movups
mov
loope
jg
mov
dec
add
add
and
inc
cld
aaa
mov
push
add
pushf
aam
loop
insb
push
ret
ret
insl
lods
push
loopne
push
push
shr
fidivrs
rcll
ss
in
movb
sub
popf
mov
hlt
push
inc
mulb
lahf
dec
out
mov
mov
or
push
and
jmp
cmpb
mov
or
jl
fldenv
sarb
xchg
cmpsl
and
test
stos
push
add
jmp
lcall
or
fstps
cltd
in
cld
out
add
cld
imul
fnstsw
xor
mov
adc
hlt
incl
dec
mov
inc
shrb
pop
dec
mov
pop
adc
lods
int3
loopne
fldt
push
in
sti
sub
mov
lods
xor
inc
cmpsl
sbb
lahf
pusha
les
not
movsb
push
pop
or
adcb
jge
cltd
inc
cmp
fdivrl
lcall
push
stc
dec
enter
es
or
add
cmp
jecxz
dec
call
gs
adc
jno
data16
xchg
clc
nop
and
or
js
mov
clc
stos
fadds
cwtl
pusha
xchg
aas
push
clc
test
popa
mov
test
add
mov
mov
mov
jae
in
adc
test
xchg
rcl
push
shll
mov
sar
pop
adc
mov
inc
stos
data16
lcall
push
cmp
lods
mov
hlt
jbe
mov
add
sbb
fisubl
fdivl
lods
mov
aad
and
adc
push
xor
mov
hlt
xor
sub
sbb
insl
pop
mov
les
cmpb
in
mov
movsb
add
fstp
ss
cmp
les
mov
mov
dec
sbb
xor
pop
iret
data16
lret
fwait
pop
cmpsl
lods
and
mov
sub
dec
lods
pop
in
sub
fs
xchg
les
dec
mov
roll
out
sub
shlb
icebp
mov
jge
jae
dec
dec
test
xor
xchg
adc
or
mov
loopne
ficomps
popf
stos
adc
push
je
adc
mov
mov
aaa
aad
adc
xchg
cmpl
scas
in
aas
pop
pop
cli
fisttpl
lods
lds
xor
or
cld
lods
sbb
lcall
sub
fdivrl
cmpsb
jecxz
mov
lods
ja
in
xorl
adc
call
xchg
inc
ljmp
fs
sbb
fs
daa
inc
cmp
fbstp
in
xchg
jae
clc
test
jb
call
fiaddl
dec
enter
outsb
ljmp
pusha
push
xor
test
mov
jecxz
pushf
or
push
xchg
and
in
into
xchg
and
mov
cs
pop
lahf
push
ljmp
loop
adc
sbb
and
sarl
mov
mov
sub
pop
mov
test
loopne
or
sbb
sub
or
mov
xchg
push
mov
nop
out
sarb
cmpsb
push
pop
or
jmp
mov
enter
mov
shlb
jp
mov
mov
sub
add
fs
fwait
lea
xchg
fcmovu
add
fildl
out
or
xor
mov
adc
jecxz
sarb
jne
or
cld
push
mov
push
nop
sbb
out
mulb
or
mov
loope
loopne
xchg
cmp
push
push
mov
push
fsubl
sub
mov
pop
nop
mov
lods
push
xchg
sbb
dec
insb
cs
cwtl
stos
sub
orl
js
test
cmp
std
psrad
sbb
jecxz
push
loop
push
add
xchg
add
fmuls
pop
lret
push
cmpsl
pusha
sbb
cs
test
cmc
out
pop
pop
push
and
test
xchg
pop
jns
pop
cli
cmc
dec
adc
mov
ds
ds
jp
inc
pop
sbb
xchg
test
sub
xlat
or
pop
mov
std
sub
push
mov
out
in
jbe
into
push
lret
mov
mov
xchg
push
call
pop
xor
or
inc
jecxz
xor
dec
int3
sbb
std
divl
lret
and
push
inc
aas
pop
push
xchg
cmp
xor
std
xchg
mov
pop
add
adc
out
test
loope
cli
inc
popl
daa
nop
pop
jle
inc
js
mov
mov
loope
inc
jnp
shlb
jbe
pop
int
xchg
in
push
data16
jecxz,pn
sub
sahf
mov
adc
add
dec
inc
fiaddl
lahf
movsl
das
sti
sbb
inc
adc
test
cmpb
jl
dec
xorl
cmpsl
jle
sbb
mov
filds
and
mov
add
out
lods
bound
pop
stos
incb
pop
faddl
add
xorb
jmp
pop
jo
cmp
scas
loope
cmp
mov
lock
inc
fisttpl
pop
dec
loope
xchg
test
jo
push
movsb
mov
xchg
fst
cld
mov
adc
rol
add
mov
xchg
rorb
inc
in
lock
ja
dec
lea
xchg
ret
jmp
push
mov
stos
hlt
adc
cmp
test
lcall
add
in
les
leave
lret
mov
add
cmove
push
pop
movsb
mov
xor
adc
aaa
push
lcall
loop
shlb
pop
loop
lds
hlt
cmpsb
mov
adc
cmp
or
xchg
push
jns
and
aas
pop
cld
pop
mov
in
popf
sub
addl
xor
mov
sbbb
and
or
jl
adc
das
mov
in
mov
pop
xor
inc
out
push
icebp
cmp
ret
cmp
inc
and
push
sbb
push
into
sub
in
lods
and
sub
insb
mov
mov
outsl
pop
lods
jp
cmc
mov
lods
or
leave
push
mov
adc
mov
into
ret
mov
pop
or
adc
or
dec
sbb
leave
cmp
dec
loopne
stos
mov
xor
pushf
sub
xor
inc
sub
sarl
push
or
and
cmp
ja
iret
mov
and
fimuls
lock
pop
rolb
pop
pop
cmp
xor
push
je
cli
imul
and
sub
jnp
dec
jecxz
add
popl
aas
xchg
dec
mov
add
sbb
ss
lods
add
mov
fwait
pop
or
mov
xor
clc
pop
xchg
mov
sub
shlb
add
leave
cs
aaa
in
cmpb
ret
ficoml
ljmp
xor
sub
mov
inc
pusha
mov
add
sahf
sarb
xchg
pop
xor
adcb
sub
ret
dec
cmpsb
sbb
lds
inc
sub
xor
lock
pop
jl
sub
out
push
das
add
push
mov
fstpl
mov
out
divl
subb
flds
cs
shrb
fnstsw
jl
dec
pop
inc
and
inc
sti
les
sub
sti
push
incl
stos
loop
ret
in
inc
aam
cmc
xor
sbbl
xchg
ljmp
into
fildl
mov
lcall
pop
xor
mov
add
and
int
sti
mov
xchg
or
cmp
scas
lea
xchg
sarb
loop
out
mov
sti
js
repnz
mov
jge
jg
out
lahf
add
shll
and
stc
adc
inc
mov
mov
jp
add
in
inc
test
scas
adc
cli
enter
and
add
mov
test
sub
cld
mov
xor
cwtl
movsl
jmp
leave
cwtl
test
and
cmp
clc
test
sbb
push
or
andl
and
aam
lods
dec
cltd
js
aas
mov
ljmp
adc
or
loop,pt
push
outsl
stos
std
inc
mov
cmpsb
ljmp
inc
out
add
ss
in
add
ret
adc
add
hlt
cmpsl
jl
or
icebp
fisubl
js
add
clc
imulb
je
rclb
pop
adc
ljmp
and
mov
pop
lods
stc
add
roll
aam
push
out
rolb
push
jp
lods
jl
cwtl
push
pop
jb
sub
lcall
cmp
andb
ror
imul
lret
pop
shlb
mov
movsl
subb
adc
add
test
xchg
fdivr
mov
and
push
js
and
lods
and
push
rolb
dec
hlt
je
fisubl
fsubl
pop
cmpsl
mov
or
and
test
and
sar
xchg
add
int3
mov
mov
mov
cli
add
push
push
mov
jl
test
sarb
inc
andb
or
sbb
push
pop
in
pop
mov
inc
xor
xlat
adc
icebp
jge
ret
outsl
es
loope
mov
pop
xor
add
test
mov
or
and
je
roll
push
clc
and
mov
or
imul
adc
in
dec
lahf
imul
jo
mov
je
fdivl
ds
ss
shlb
inc
and
mov
adc
xor
orb
lcall
or
rcrb
sti
lea
fimuls
cmp
movsb
ret
lods
ficoms
ja
dec
pop
cmpsb
fiaddl
pop
addl
xlat
mov
sbbb
pop
inc
movsb
adc
adcb
jb
sbb
sub
push
mov
stc
clc
push
or
insl
rolb
pushf
test
mov
pop
cwtl
sahf
pop
test
jns
into
pop
outsl
add
sub
sbb
mov
pop
xor
shrb
inc
lahf
ss
cs
cmp
adcb
xchg
ret
mov
insb
loop
aam
mov
add
icebp
ficoml
lock
roll
mov
push
add
cli
mov
pushf
jle
or
and
cmpxchg
ret
push
pop
jb
and
sbbl
insl
loopne
ficoms
mov
imul
jb
call
jle
adc
adc
xor
lret
xchg
loop
dec
loopne
adc
test
fcomip
push
mov
fdivl
mov
xorb
sub
adc
pop
pop
inc
insl
aaa
dec
stc
cmp
pop
adcb
mov
pushl
or
pop
sbb
stos
mov
jae
jl
cmp
ss
clc
popa
jne
leave
ficompl
sbb
fdiv
mov
xorb
test
movsl
pop
dec
loope
inc
out
mov
sbb
jne
pop
bound
subb
inc
xor
mov
jg
movsl
addl
outsl
mov
or
sbb
push
fisubrs
rcr
dec
sbb
lret
add
lret
push
dec
jbe
mov
or
pop
xor
cmp
jl
das
jb
lahf
aam
lods
or
and
or
mov
cmp
push
or
and
jo
fmuls
das
or
insb
mov
inc
stos
outsl
in
pop
insl
arpl
and
xchg
mov
adc
lcall
add
lods
xor
lea
mov
or
ds
push
mov
sahf
xchg
adc
mov
insb
mov
pop
push
cmp
frstor
movsb
sub
or
or
jmp
sbb
loop
xor
nop
addb
repnz
add
or
add
flds
loopne
xor
cmp
ljmp
lahf
mov
cmp
test
dec
loopne,pt
add
sub
out
lcall
out
lds
cmc
xchg
ffreep
pop
jbe
sub
idivl
movsl
and
pop
out
movsl
xor
add
and
pop
and
cmpsl
dec
cltd
cmpsb
out
test
pop
or
xchg
pop
jl,pt
xchg
adc
xor
mov
cmp
inc
push
add
dec
adc
dec
loop
test
jge
test
mov
sbb
xor
xlat
in
orl
insl
shlb
or
clc
mov
mov
sbb
pop
lds
sub
xor
stc
out
or
sbb
jl
fdivrl
add
mov
inc
sti
loope
push
adc
js
int3
ret
test
add
out
cli
stc
push
dec
jge
or
int
or
mov
ds
push
rcl
adc
jmp
stos
out
mov
push
pusha
inc
dec
mov
mov
dec
dec
mov
rol
mov
adc
jae
arpl
sarl
cmp
das
test
inc
sbb
mov
mov
pusha
xchg
mov
lods
cmp
xchg
mov
sub
or
pushf
mov
mov
lret
jge
add
fs
cmp
mov
out
aad
scas
adc
imul
movsb
lret
ja
xchg
sub
adc
loope
ret
inc
in
jmp
dec
shll
stos
js
inc
sbb
repz
ds
mov
cwtl
pop
pop
rclb
xchg
scas
cmpsl
sub
sbb
adc
push
rcrl
push
inc
dec
mov
xor
and
jle
mov
add
or
subl
test
popa
or
add
mov
mov
ja
xchg
pop
ds
cmc
std
push
bound
xor
cld
add
dec
add
popf
push
clc
or
ret
cmp
sub
cmpsb
dec
aas
roll
cmp
dec
nop
inc
cmp
lcall
es
ret
xorb
shl
test
iret
fiaddl
jbe
mov
jecxz
adc
xchg
fadd
loopne
jnp
jbe
mov
ja
add
shrl
push
xchg
in
mov
dec
andl
push
bound
cltd
inc
test
popf
xchg
ret
lahf
rorl
xchg
push
icebp
xchg
lock
jb
stos
arpl
cmp
aas
daa
sub
push
test
add
and
mov
pop
sub
insb
scas
inc
inc
lods
or
add
insb
mov
push
and
aam
loope
in
cmpps
cmp
jno
stos
lds
jmp
nop
mov
sbb
outsb
add
jnp
sbb
fsubl
mov
dec
ds
add
test
push
or
daa
jmp
inc
sti
add
stos
cmp
insb
mov
adc
mov
jo
stos
icebp
mov
adc
or
fisttpll
sbb
cmp
cmp
icebp
aam
pop
sub
jb,pt
jo
cli
fadd
sub
xor
out
xor
sbb
aam
pop
mov
push
fisubrl
lcall
ret
or
shl
sbb
cmp
imul
pop
insl
jge
in
lea
add
jp
cwtl
mov
scas
push
jo
imul
clc
push
sub
inc
ret
dec
jns
ffree
imul
mov
loope
insb
xor
jbe
or
mov
das
idiv
cmpsl
sub
mov
jns
mov
add
xor
jg
cmpsl
fwait
cmp
pop
cld
mov
aad
shr
xor
cmpsl
mov
inc
mov
fcmovnu
ja
mov
mov
enter
or
dec
cmp
and
or
mov
fs
cmp
movsl
xchg
mov
pop
dec
stc
xchg
pop
sti
pushf
sti
test
rep
loopne
dec
sbb
addl
sti
test
pop
aam
and
stos
fldl
pop
ret
addr16
sbb
xor
shlb
pop
xchg
and
daa
cli
jecxz
fsubr
outsl
orl
les
outsl
xlat
subb
jp
fidivrl
push
pop
test
mov
in
jb
test
and
lcall
subb
sub
cmp
mov
or
sub
sub
sbb
and
popf
lcall
xchg
dec
mov
cmp
xchg
and
pop
adc
mov
dec
add
out
push
xchg
pop
lea
sub
mov
or
jmp
test
sub
cli
xchg
outsl
xchg
pop
or
orl
cmp
mov
cmc
lock
into
cwtl
pop
call
popa
rcr
and
cmc
scas
mov
rol
bound
sbb
pop
or
ret
mov
out
adc
sbb
test
call
int
push
cmp
notb
sub
push
shll
std
ds
stos
xor
xorb
call
in
push
sbb
rcrl
pop
jbe
outsl
inc
cmp
loop
aas
incb
in
mov
inc
mov
push
mov
cmp
sbb
ljmp
mov
adc
pusha
mov
fadds
sbb
adc
mov
mov
adc
cmc
pushf
arpl
sub
jmp
outsl
scas
arpl
add
push
cs
pop
sub
sbb
aaa
cmp
mov
mov
pop
and
scas
push
int3
out
jnp
push
xor
xor
xor
xchg
adc
mov
xchg
add
fsub
inc
outsb
or
and
fldt
sub
jmp
scas
lret
lock
and
push
adc
and
mov
pop
subl
bound
mov
icebp
push
insb
sbb
jo
or
rcrl
mov
movsb
xor
jp
dec
mov
jp
xor
mov
xor
add
or
cmp
iret
outsb
adcb
add
ret
dec
jg
xor
fcoms
ja
lcall
daa
mov
mov
add
cmp
mov
sub
test
mov
mov
jo
fcmovbe
mov
sub
adc
inc
sbb
test
or
rol
cltd
jp
mov
push
test
add
hlt
inc
xchg
in
adcb
cmp
push
jmp
mov
mov
sub
push
jecxz
push
xor
fadds
sbb
push
xchg
ret
jl
mov
into
jg
and
inc
add
cwtl
lods
fdivl
mov
dec
outsb
cmp
popa
fadds
imull
cmp
xchg
popa
add
clc
addb
or
xor
out
cmpl
xchg
clc
jecxz
xor
cltd
cmp
push
cmpl
je
sbb
mov
insb
aaa
movl
loopne
outsl
call
xchg
mov
scas
push
aas
cwtl
jbe
scas
sbb
adc
shrl
int
test
xchg
push
fidivl
dec
add
add
pop
inc
insb
subb
pop
insb
ss
pop
dec
stc
xchg
xchg
add
xor
mov
inc
lcall
push
loopne
inc
dec
mov
jle
sub
or
mov
jl
mov
dec
mov
rcl
xchg
lock
or
sti
or
fisttpl
add
sub
xchg
stos
push
or
xchg
rcrb
jecxz
ret
inc
push
xor
shlb
loopne
jns
push
sahf
cwtl
lods
pop
pop
test
add
daa
xor
fadds
jge
std
adc
sahf
repz
dec
adc
addl
mov
pop
pop
mov
mov
push
jbe
inc
pop
sub
inc
and
into
ss
xchg
jl
fsubp
or
and
and
or
pop
jo
loop
sti
cmp
sbb
inc
xor
call
nop
jb
pop
cli
cld
clc
clc
xchg
mov
jae
pop
rclb
cmc
push
test
stc
cs
fadd
add
pop
pusha
sti
popf
cmc
jg
sbb
cmp
scas
adc
andb
inc
scas
push
je
push
push
rcll
loope
daa
fwait
pmuludq
jl
pop
scas
inc
lods
and
lods
dec
add
mov
fucomi
aas
std
add
rclb
mov
mov
int
out
and
rcrb
es
out
and
push
dec
aam
or
fwait
scas
push
lcall
dec
xor
loopne
add
xor
push
sbb
rorb
cmc
pushl
rorb
push
pop
fisttps
push
push
jl
decb
mov
pop
cld
test
cmpsb
mov
insb
and
fdivrs
fwait
pop
lods
lods
or
out
addr16
adc
pop
imul
jl
or
push
imul
jbe
mov
and
adc
iret
inc
test
test
jmp
mov
sbb
inc
mov
and
cs
insl
ret
pop
jg
dec
cld
mov
sbb
cli
clc
inc
jl
or
push
mov
pop
in
movsb
lret
in
pop
jbe
std
lahf
push
scas
ss
out
push
jne
add
lock
mov
sbb
sub
pushf
shrb
push
test
cmp
dec
loop
ss
addr16
scas
popa
mov
mov
mov
cli
pop
repnz
js
ljmp
aam
insb
and
adc
dec
pop
insl
int
pop
shll
lahf
sar
and
fucomip
outsl
or
xchg
adc
add
adc
mov
push
ds
int
call
aaa
sbb
push
adc
jo
jae
jmp
cli
push
lds
sbb
out
jl
rolb
clc
and
pop
test
sbb
sbb
push
sub
and
adc
dec
cmp
rorb
push
imul
loope
outsl
stos
or
movsb
adc
sbb
adc
insb
mov
cmp
out
push
loop
cmc
pop
add
sbbl
or
or
jg
dec
aas
insl
mov
pop
icebp
test
xchg
fimull
scas
rclb
ljmp
test
rolb
nop
arpl
mov
cmp
call
shlb
loop
ja
inc
pusha
mov
js
lds
cs
fmull
xchg
mov
int
mov
fs
xchg
push
xorl
and
push
pushf
add
add
and
add
adc
xchg
pop
add
dec
or
push
push
pushl
js
push
sub
mov
xchg
add
lods
sarb
hlt
icebp
outsl
fiadds
mov
push
adc
mov
inc
call
sub
and
pop
faddl
and
mov
es
push
sbb
and
ficompl
aam
sub
jl
sub
ljmp
adc
in
adc
pushf
xchg
ds
cwtl
imul
mov
push
and
push
repnz
aaa
adc
scas
icebp
mov
nop
fwait
dec
and
stos
ljmp
sub
mov
push
cmc
dec
pop
es
cmp
lcall
mov
mov
test
mov
mov
sub
subb
mov
cld
or
popa
adc
sub
sbb
ljmp
aad
push
adc
mov
ret
and
ret
push
mov
mov
fimull
xor
orl
mov
jge
sahf
andb
dec
mov
jp
mov
in
call
xor
cmc
jg
lds
fiaddl
imul
ja
dec
cmp
gs
adc
std
cmpsb
arpl
shlb
mov
pop
or
loopne
or
adc
mov
ss
sbb
xchg
push
push
fsubrl
fs
push
add
lfs
mov
push
jg
rorb
cmp
add
push
adc
fcom
sub
xchg
test
sbbb
int
fstps
xchg
push
test
idivl
xor
test
fisubrs
cmp
xor
inc
test
aaa
mov
jge
jno
dec
rcll
in
jae
roll
sbb
add
mov
mov
jb
push
jle
mov
out
push
fiaddl
xchg
mov
push
cmpl
insb
mov
pop
push
mov
stc
sbb
js
loopne
xorb
push
mulb
and
int
or
ljmp
cmp
cmc
sub
movsb
pushf
inc
xchg
adc
shll
and
push
loop
adc
jl
lock
jge
js
cmp
out
dec
insl
push
aaa
ret
rorb
aam
jo
mov
data16
pop
mov
fdivrs
push
cmp
adc
sbb
movsl
incb
cld
jecxz
lods
and
sti
jbe,pt
movsb
dec
mov
stos
cmp
adc
xchg
stos
scas
sbb
jo
push
mov
mov
aas
push
int
and
add
push
inc
mov
loopne
out
dec
mov
add
dec
push
xchg
es
rorb
cltd
ds
dec
push
cmp
clc
xor
jb
ret
adc
jl
lret
test
movsb
popf
dec
loop
rorl
and
mov
xor
sub
xchg
sub
mov
addr16
js
mov
cmp
mov
mov
mov
fs
push
xor
loope
jecxz
orb
dec
jl
lods
adcl
inc
xchg
cli
js
mov
insb
movsl
or
jo
dec
outsb
push
xor
and
daa
mov
xchg
adcl
inc
push
lock
mov
fidivrl
js
ret
xchg
fildl
orl
es
out
ss
lea
adc
sbb
sbb
add
in
dec
loope
popa
addr16
leave
xor
jg
cmc
enter
adc
mov
jbe
iret
sbb
adc
mov
mov
pop
and
mov
and
gs
pop
mov
rcl
je
inc
filds
mulb
add
scas
js
pop
push
and
call
mov
hlt
pop
pop
clc
fcompl
icebp
call
sbb
adc
mov
or
pop
sbb
jecxz
push
clc
add
pop
andb
sbb
in
mov
outsb
or
adc
les
mov
lahf
ds
rorb
leave
pop
sti
or
rclb
mov
js
in
clc
and
shrl
push
loopne
pop
call
dec
mov
loop
push
or
sarb
ror
repnz
in
mov
mov
addr16
adc
mov
shlb
sub
jge
cmp
xchg
shrb
clc
push
je
inc
and
fimuls
icebp
pop
bound
inc
xlat
xlat
sarb
xchg
test
pop
lods
fwait
test
or
adc
icebp
mov
loopne
cmp
mov
mov
and
sub
sub
je
mov
pop
int
dec
movsl
inc
xchg
pop
sub
call
bound
repz
adc
push
sbb
push
in
or
in
dec
cmpsb
inc
fwait
repz
push
xchg
repnz
les
mov
neg
int
mov
add
iret
clc
loope,pt
push
outsb
inc
sbb
stos
and
std
add
incb
fwait
sahf
fcomp
mov
push
rorb
add
popa
jns
arpl
rolb
nop
jle
xor
lea
inc
jecxz
push
fildll
cltd
rcr
cltd
mov
sbb
mov
push
cli
adc
jnp
es
scas
clc
shlb
xor
in
push
imul
sbb
add
je
add
cmp
ljmp
insb
inc
or
and
or
fcomp
js
adc
outsb
push
mov
xor
stos
fdivr
add
fiaddl
cwtl
adc
jb
sub
mov
out
ret
sub
adc
or
and
and
loope
xchg
dec
cld
sub
jbe
scas
dec
shll
cld
mov
rolb
push
pop
dec
push
adc
clc
or
mov
in
mov
xor
or
rolb
in
inc
outsl
aad
pop
adc
rcr
xlat
inc
add
inc
ret
add
lret
lcall
int3
fidivl
and
movsl
adc
jl
jle
mov
int3
dec
call
mov
mov
adc
push
cmp
mov
out
xlat
push
int3
test
adc
fimull
sti
add
mov
and
sbb
inc
mov
sub
popa
movsb
js
adc
xor
mov
cltd
les
mov
in
cmc
xchg
and
pop
jbe
movsb
sub
pop
cld
and
mov
sahf
movsb
aas
mov
add
inc
push
pushf
and
dec
mov
in
rolb
sahf
dec
test
xlat
int3
insb
pop
xor
pusha
jle
add
outsb
xchg
test
call
int3
fstl
jmp
cld
icebp
sbb
jecxz
add
jge
pop
mov
adc
ret
sarl
pop
cli
dec
pop
pop
push
xor
test
roll
js
ret
xor
orb
mov
rol
rcll
cmpsl
rclb
test
ljmp
pop
fsubrp
add
loop
mov
pop
sbb
fwait
xchg
aas
fstl
insl
cli
sub
xor
xor
and
or
jbe
jle
aaa
mov
lcall
dec
rolb
outsl
enter
pop
stc
es
in
jne
xor
pop
xchg
xchg
dec
add
es
gs
add
push
ret
add
lahf
sub
xchg
pcmpeqb
into
pusha
sbb
mov
add
out
shl
repnz
test
add
andl
pop
or
insl
inc
and
cld
and
inc
in
push
shrb
mov
outsl
loope
insb
mov
adc
sub
adc
mov
mov
dec
adc
push
pop
push
jp
xchg
inc
dec
ret
inc
or
aad
adc
mov
mov
cmp
stos
sbb
insl
test
lcall
push
adc
jl
jmp
mov
sub
mov
cmpsl
add
cli
es
lret
and
fsubl
movsb
das
insb
adc
jns
popf
in
xchg
dec
inc
xchg
and
cmpsb
jno
and
or
jecxz
fcomps
and
lret
pop
push
xor
inc
xchg
xchg
out
js
sub
ljmp
or
shll
cs
cwtl
cld
insl
sbb
std
cmpl
add
and
sub
negb
xor
rolb
pop
dec
xor
fdivl
xchg
mov
pusha
loope
popf
mov
ror
push
lock
inc
push
mov
cmc
jl
dec
and
sbb
jno
jmp
dec
lds
ljmp
aad
aas
push
push
aam
xchg
pop
or
or
cmp
jne
test
inc
or
mov
xchg
cmp
push
pop
std
loopne
aam
push
andl
in
hlt
lahf
cmc
jae
inc
jb
add
aaa
xorl
movsb
lods
push
test
js
push
movsl
test
or
imul
cs
mov
xor
push
pop
xchg
call
popa
test
shl
and
mov
test
push
xor
mov
cli
cmp
add
lods
add
cmpsl
and
cmp
cli
cmp
jge
stos
pop
jo
mov
rolb
sbb
inc
notl
leave
pop
jp
mov
xor
xlat
xor
jne
mov
pop
push
and
call
es
loop
dec
or
and
scas
dec
jg
mov
mov
jbe
mov
add
repnz
mov
inc
inc
xchg
jp
int3
cwtl
dec
adc
add
int3
stos
mov
or
out
or
xorb
xor
notl
imul
bound
mov
cmpsb
jns
fstps
jp
jmp
hlt
inc
adc
sub
setl
push
pop
andl
sbb
jmp
sub
fcomip
sub
push
nop
sarb
or
jo
clc
push
xlat
js
mov
ret
insl
shr
jo
ds
rcl
and
cltd
cld
push
adc
dec
in
jl
stc
dec
popf
jno
shll
inc
les
es
ss
fs
inc
mov
sbb
subb
jmp
sbb
lock
fmuls
or
pop
sub
push
dec
jp
stos
iret
xchg
pop
cvtdq2ps
lods
loopne
stos
adc
loopne
fsubrs
inc
dec
in
shlb
test
out
add
inc
aad
sub
sub
sub
pop
test
mov
outsl
mov
dec
mov
xor
jle
cmp
ret
adc
add
lods
push
sub
addr16
ret
mov
push
adc
jp
mov
pop
sbb
push
test
mov
mov
loope
mov
popa
jmp
ret
adc
shrl
dec
cmp
lcall
dec
jb
test
pop
outsl
sbb
push
pop
lds
pop
sub
loopne
mov
cmpl
ljmp
popl
xchg
push
or
xor
and
out
mov
shrb
data16
dec
pusha
cld
cmc
fimuls
or
aam
pusha
shrb
stc
mov
push
out
mov
add
lea
dec
or
push
dec
scas
mov
push
incl
clc
mov
aam
cwtl
orb
xor
and
add
aam
subl
insb
in
in
pand
adc
loope
pushf
push
fmull
and
test
jmp
and
inc
insb
ljmp
dec
and
fwait
cmpsb
scas
xor
push
in
xor
push
xlat
loopne
push
ffreep
dec
mov
adc
add
xchg
push
lret
add
mov
test
test
xchg
sbb
inc
aas
mov
ret
ds
push
ret
xor
aam
dec
jl
mov
adc
roll
lods
push
inc
add
xchg
rol
iret
shlb
and
loopne
call
jo
lea
decb
add
mov
push
inc
inc
out
outsl
test
add
mov
mov
outsb
insl
adc
arpl
inc
mov
mov
push
ret
rcll
jnp
sub
mov
dec
pop
popl
lock
daa
addr16
adc
in
sub
inc
outsb
fimull
add
add
cld
xchg
int3
pusha
loop
mov
lock
lahf
roll
lods
cmp
mov
xchg
scas
pop
xor
jmp
push
movl
pop
add
adc
mov
dec
outsl
pop
aaa
push
lret
cmp
dec
les
or
shl
dec
lahf
jns
sar
ss
sbbb
mov
pop
xor
adc
jae
xchg
push
cld
push
inc
push
adc
and
sub
mov
stos
rolb
int3
sub
pop
push
inc
out
cmp
pusha
mov
aas
in
xchg
repnz
dec
sub
cmp
cmpsb
mov
and
dec
mov
mov
push
sub
insb
les
pop
cmp
xor
sbb
sti
pusha
ds
inc
inc
into
adc
inc
addl
jg
adc
jbe
movsl
xlat
ret
push
fstps
daa
mov
sub
orb
jae
fisubl
jmp
jne
loope
lods
ljmp
and
mov
shrl
mov
cli
mov
insl
rclb
mov
sahf
je
or
movsl
cmp
push
mov
andb
js
sbb
ljmp
xchg
sub
aaa
mov
clc
mov
add
pop
js
movsl
mov
int3
aas
ds
out
ds
cmp
mov
lahf
jnp
add
jns
addr16
jecxz
pushf
mov
arpl
andb
popf
aaa
fwait
lret
inc
xchg
shrb
pop
xchg
cmp
mov
push
mov
je
adc
repz
inc
mov
jl
cmp
jge
pop
add
inc
js
cmp
add
adcb
add
cmpsb
pop
ss
pop
or
mov
dec
cmpsb
mov
shlb
cmp
inc
in
mov
xchg
sbbb
and
mov
fbstp
adc
test
stc
sbb
push
inc
mov
sbb
xor
outsb
in
add
xchg
js
icebp
jne
adcl
and
mov
or
lret
dec
lock
pop
adc
mov
dec
iret
test
out
rolb
ficomps
notl
cmpsb
lock
cmc
jne
sbb
in
shrb
dec
lock
das
dec
leave
sub
cmpsl
outsb
test
imul
test
loop
and
fdivrs
sub
inc
mov
xlat
sbb
out
xor
enter
hlt
loop
pusha
pop
in
ret
es
cmpsb
xor
add
jno
jne
jecxz
xor
xor
fdivrs
lods
je
sahf
call
fcmovb
subb
pop
fwait
inc
mov
inc
inc
pop
ljmp
dec
jle
xorl
xchg
lods
insb
movl
or
and
testb
clc
jmp
inc
inc
stos
inc
je
je
test
fildl
jp
and
inc
ret
rcrl
jp
and
mov
cmp
repnz
cmc
int
mov
into
ljmp
fldl
fnstcw
push
mov
shrb
inc
sbb
or
mov
fcmovbe
add
adc
aam
daa
push
push
shll
pop
cli
mov
xchg
mov
incb
push
out
imul
dec
jno
push
adc
shl
adc
mov
push
dec
cmp
inc
scas
push
cmc
pop
gs
lds
ficompl
jae
mov
icebp
cmp
mov
and
mov
sub
sahf
inc
enter
int
ds
shlb
sub
mov
movl
cmp
mov
push
inc
popf
jle
push
dec
ja
sbbl
adc
and
mov
mov
xlat
xchg
or
pop
mov
mov
jl
mov
push
lods
jp
vpmaxsw
out
or
imul
adcb
in
adc
loopne
inc
mov
push
xor
lret
clc
cs
lods
aad
pop
sub
ja
mov
mov
jg
push
in
inc
push
fnstsw
cmpsl
mov
add
jne
mov
and
cmp
inc
inc
cld
sub
addb
imul
sub
cld
ds
cmpl
xchg
imul
ljmp
ds
push
orl
sub
test
faddl
gs
xor
push
test
pop
pop
xchg
test
xchg
mov
mov
mov
or
mov
xor
inc
stc
imul
add
xor
adc
pop
push
xchg
or
cmp
jmp
mov
psrlw
scas
cmp
or
fwait
lret
mov
mov
adc
js
pop
das
outsb
or
ss
fs
cmp
adc
fmuls
add
inc
add
push
mov
and
pop
je
mov
pop
or
or
and
inc
aad
das
jp
addr16
push
sub
jge
jo
ja
add
pop
lock
arpl
dec
adc
cs
jle
sub
bound
add
les
aam
repnz
es
jno
push
jmp
mov
jb
inc
ja
inc
pop
icebp
mov
push
mov
inc
int
fstl
std
orb
gs
mov
mov
sub
adc
and
push
adc
cs
or
dec
xor
arpl
ds
jp
push
mov
xor
rcl
xor
push
push
ret
xchg
push
in
sub
adc
sbb
negl
dec
dec
into
lock
call
mov
adc
add
stos
leave
xchg
xor
loope
xchg
mov
dec
add
fcoml
jb
cld
divps
or
push
push
dec
mov
stos
dec
sahf
sbb
mov
inc
stos
loope
rorb
jecxz
jno
sub
push
push
les
sub
test
leave
repnz
inc
pop
imul
dec
cwtl
sarl
jmp
imul
adc
xchg
push
scas
pushf
add
inc
out
dec
shld
in
call
sub
and
jge
sbb
mov
or
out
mov
xor
scas
movsb
leave
clc
dec
int3
into
pop
mov
push
repz
iret
push
popa
stc
bound
jecxz
sbb
fcoml
pop
cmc
mov
rcl
aad
shl
jns
and
pop
mov
mov
loop
inc
rsqrtps
mov
cmpsl
xor
xor
ss
rorl
inc
dec
insb
addr16
sbb
push
xchg
loopne
ds
sti
mov
mov
sbb
mov
jle
sbb
nop
test
lods
cmp
push
adc
jle
jmp
cmp
pop
dec
fldl
xor
es
jo
testb
lret
xor
test
das
and
mov
out
clc
sarb
hlt
mov
or
shrb
in
js
gs
inc
mov
in
insl
adc
lcall
jg
cmc
or
mov
xor
jg
ljmp
stc
out
test
push
incb
mov
xor
lahf
popa
mov
out
cmp
jbe
jmp
pop
adc
mov
stos
arpl
mov
add
dec
and
das
or
mov
lds
add
or
test
add
out
push
icebp
jae
lret
xor
inc
testl
xor
cwtl
imul
clc
fdivrl
das
pop
int3
rorb
movsb
insl
xor
and
push
into
mov
clc
and
cmpsl
out
sub
fdivrl
adc
outsb
and
push
icebp
mov
add
test
cmc
pop
cli
push
mov
mov
push
dec
aad
push
mov
push
adc
mulb
dec
or
shrb
mov
adc
lret
inc
pop
addl
dec
roll
add
sti
inc
push
or
mov
gs
adc
cwtl
mov
imul
cli
mov
idivl
loopne
dec
cs
lods
adc
outsb
insl
cmp
xor
jmp
ret
dec
ja
ljmp
xchg
pop
mov
sub
adc
in
push
sub
test
jle
push
sbb
insb
push
push
xor
enter
cmp
jo
and
xchg
std
ds
out
xor
nop
mov
or
cmp
xor
pop
inc
jge
xor
mov
mov
inc
sbb
fucomip
cmp
xor
pop
inc
mov
push
xchg
lea
roll
mov
stos
jmp
and
mov
jbe
movsl
jns
js
xor
dec
lods
cmp
add
push
or
das
push
mov
inc
sbb
xlat
fidivrl
inc
sub
dec
iret
mull
push
sti
add
xchg
dec
loop
pop
jne
out
xor
shr
test
stos
jbe
sbb
pop
insb
or
mov
fidivl
fstpl
adc
shlb
xor
stos
adc
mov
xorb
fs
cmp
shl
fwait
pop
xor
jb
insb
cld
lcall
mov
xor
repnz
fsubrl
pop
rcrb
cmp
and
push
push
insb
imul
movsl
ret
xchg
loope
mov
xor
adc
mov
mov
dec
sub
xchg
ss
cmp
dec
jmp
aas
fimull
stos
cwtl
and
daa
test
mov
mov
add
lods
stos
push
clc
xchg
sub
out
in
adc
je
es
xchg
mov
or
lret
cmpsb
fisubrs
sbb
mov
and
movsl
inc
mov
dec
cmp
adc
in
or
lock
call
iret
and
push
scas
cmp
fisttpll
dec
daa
pop
call
inc
inc
cmp
mov
mov
mov
stc
in
gs
insb
jnp
xorl
hlt
mov
lock
add
pop
test
inc
adc
inc
lock
pop
push
lds
push
aaa
sub
movsl
int3
into
push
sti
pop
dec
mov
hlt
aad
jne
mov
rorl
pop
or
mov
push
mov
xor
xchg
test
jp
add
sbb
sar
mov
push
mov
jo
add
and
fcoms
xor
mov
shrl
add
push
inc
cmp
pop
jl
pop
into
sahf
aad
pop
fisttps
jecxz
lods
pop
fsubrl
sbb
notb
aaa
jne
fpatan
leave
sub
ss
add
and
push
arpl
and
out
push
adc
scas
loope
pop
pop
lret
xor
mov
dec
in
sub
jmp
push
mov
sbb
xchg
mov
add
shr
jb
ret
and
xlat
aas
sub
xchg
scas
push
insl
data16
sub
xchg
aam
mov
pusha
cwtl
inc
out
and
leave
or
addl
std
test
adc
arpl
ret
out
mov
cmp
test
push
inc
xlat
mov
add
push
push
sbb
enter
dec
lahf
mov
outsb
jmp
iret
cmp
or
test
subb
xor
bound
es
fisubl
xor
xor
mov
jno
arpl
jl
loope
mov
xor
cmp
mov
hlt
push
shl
xor
add
jmp
ja
scas
xlat
sub
sub
mov
cmp
push
jbe
stos
or
daa
sub
or
inc
outsb
data16
ljmp
mov
xchg
xchg
mov
push
repnz
cmp
pop
out
cs
inc
jns
cmp
push
mov
fsts
aad
sub
pushf
pop
rcr
push
adc
sarb
fiadds
xchg
and
pop
xchg
repz
sub
mov
out
movsb
pop
aad
adc
imul
sbb
dec
lods
and
out
int
xlat
das
push
xor
in
lret
adc
lret
stos
jo
sbb
xchg
mov
sbb
jmp
dec
div
imul
in
sub
and
pop
cmp
jmp
loope
lahf
mov
push
cmp
hlt
mov
lods
push
aad
loopne
fcmovnu
xchg
stc
mov
loopne
pop
scas
inc
push
adc
insl
inc
out
pop
mov
rorl
mov
pop
inc
add
sahf
cs
fwait
inc
push
dec
and
xor
mov
mov
lock
idivl
dec
xor
int
jnp
jp
daa
push
push
xchg
sbb
xchg
mov
or
out
js
pop
lds
or
clc
cmpsb
xlat
dec
and
ret
sbb
es
mov
mov
push
movsl
fsubs
repnz
xlat
loop
xor
in
out
push
loop
lock
cmp
js
sub
cld
or
fnstcw
aam
adc
sub
loope
push
scas
shlb
dec
mov
or
shll
dec
loopne
and
jne
inc
adc
lret
sbb
push
imul
and
call
push
scas
lock
push
adc
pop
fsubrl
sub
pop
xchg
ja
aam
mov
jmp
fidivrl
ja
and
mov
ja
lahf
ds
imul
in
inc
dec
fwait
mov
mov
fsubr
inc
sarb
push
scas
or
mov
xchg
sahf
icebp
xchg
mov
ja
and
mov
mov
mov
mov
push
outsl
aaa
push
dec
xor
jmp
sub
dec
cmp
xchg
inc
push
mov
add
out
pop
jge
adc
pop
into
xchg
jns
mov
lcall
lret
xchg
pop
dec
push
js
pop
clc
mov
sbbl
int
sbb
negl
dec
xchg
or
or
pop
xchg
add
fwait
pop
sub
mov
enter
movsl
push
push
jae
dec
and
mov
and
sbb
insb
scas
lahf
insl
cmpsb
jle
add
dec
xchg
jmp
sti
call
cwtl
mov
mov
pop
push
dec
mov
cmp
out
leave
add
dec
xor
xor
imull
jge
dec
pop
or
pop
outsb
clc
mov
mov
mov
push
sbb
cmp
mov
inc
add
dec
pop
mov
scas
mov
pusha
lods
add
cmp
shlb
push
shrd
xor
or
test
dec
jae
mov
outsb
out
ficoml
mov
xchg
subb
lock
idivl
xchg
int3
pushf
dec
push
lcall
pop
xchg
sbb
cmp
push
aas
xchg
xor
mov
scas
jg
pushw
pop
test
jno
inc
fwait
icebp
xchg
and
dec
or
out
xchg
std
shll
shrb
add
fdivs
dec
jns
sub
dec
fwait
jmp
test
daa
out
xchg
cwtl
and
rorb
xchg
gs
jl
loop
ja
lock
push
addr16
jae
stos
hlt
push
cmpsb
xchg
scas
insb
mov
loope
cmc
faddp
mov
inc
inc
std
pop
aas
sbb
jno
ja
mov
enter
mov
xchg
stc
cld
js
rclb
add
ljmp
scas
arpl
and
jne
loope
fmull
lahf
cmp
data16
sub
mov
cmp
cmp
lret
test
popa
pop
movsb
imul
sti
sarl
xor
push
arpl
lret
daa
mulb
sbb
shll
or
dec
pop
incb
jo
inc
xchg
mov
xchg
shrl
ret
push
fisubrs
push
cmc
imul
add
movsl
int
scas
aaa
or
imul
scas
imul
mov
inc
xlat
add
adc
loope
jnp
fldt
jo
adc
push
inc
inc
xchg
pop
sbbl
mov
jne
or
pusha
xchg
mov
jg
outsl
ds
rcll
mov
xchg
mov
mov
cmp
insl
sub
lods
out
les
in
mov
dec
in
fidivs
mov
and
sbb
jns
jmp
addb
dec
jmp
bound
push
and
lcall
cmp
cmp
and
rorb
adc
out
fistl
cmp
out
jp
cmp
and
aad
aaa
xlat
dec
or
mov
dec
pop
jg
cltd
sbb
js
repz
movsl
imul
add
rclb
dec
add
sub
dec
lahf
pusha
push
add
ss
movsl
cmp
jl
enter
out
shlb
adc
cmp
imul
cli
xchg
mov
inc
or
jne
imul
pop
push
mov
lret
push
mov
cld
cltd
insb
xchg
xor
in
arpl
xlat
mov
adc
mov
add
or
stos
js
cmp
or
popf
fwait
cwtl
loope
outsl
mov
imul
mov
adc
mov
das
pop
test
mov
pop
int3
stos
sarl
cmp
in
xchg
pop
ret
sub
inc
loop
sub
hlt
aad
mov
add
mov
xchg
sbbb
int3
push
fisubrl
int
mov
push
push
into
ss
push
push
dec
icebp
or
sub
test
sbb
sub
lock
mov
jecxz
adc
dec
je
mov
ret
outsb
jb
cmp
sub
test
pop
lods
int3
mov
xchg
adc
jne
in
sbb
mov
mov
rol
ret
jmp
je
mov
movsl
push
je
jge
out
hlt
sub
cmp
fldl
ja
jno
outsl
fadds
inc
push
xchg
xchg
scas
insb
cmc
arpl
or
adc
imul
dec
enter
fst
idivb
sbb
xlat
sub
add
push
mov
mov
nop
sub
popa
cmp
pop
ljmp
ljmp
repz
dec
ja
pop
sub
sub
and
and
pop
sahf
pop
rorb
jle
dec
pop
jae
addr16
cmpsb
jmp
mov
das
adc
test
sahf
test
rcrl
mov
push
or
pusha
mov
cmp
mov
out
test
push
popf
sti
pop
shufps
adc
cmp
lods
fcoms
adc
lret
push
or
and
mov
and
jns
pop
pusha
icebp
jbe
leave
xlat
sahf
lea
loopne
sahf
push
cmp
mov
shl
adc
fs
cmp
lret
cmp
test
push
push
movsl
das
sbb
mov
mov
lods
jae
cmp
loopne
inc
push
fyl2x
dec
lods
je
inc
adc
xchg
add
and
cli
sbb
mov
sahf
mov
loopne
or
and
pop
loope
and
sbb
xor
decl
repnz
or
in
movsl
pop
les
or
sub
push
adcb
popf
jecxz
dec
stos
push
push
popf
inc
xchg
pop
inc
xchg
dec
pop
add
dec
pop
cmp
xor
and
cltd
js
or
cmpsl
das
daa
mov
xor
loope
mov
out
sub
mov
jmp
nop
lods
sub
push
and
mov
sub
jne
dec
jnp
dec
and
test
sub
sbb
pop
fisubrs
fwait
in
cmc
or
pop
icebp
sub
stos
imul
outsb
std
aad
push
cmpl
xor
xchg
xchg
pop
aad
jmp
push
arpl
or
add
mov
sub
je
stos
lods
in
or
pushf
adc
mov
pop
or
and
mov
arpl
xor
sbb
jecxz
mov
pop
ficompl
dec
cmpl
or
jno
pop
sub
push
scas
sarl
sbb
xor
jge
setle
mov
stos
cmp
pop
adcl
mov
test
mov
rol
cmp
fmull
push
sub
nop
jbe
xchg
push
loope
xchg
pop
adc
xchg
loop
cwtl
jg
dec
ret
pop
sub
neg
js
adc
inc
stc
inc
lds
push
xchg
sbb
and
jg
in
out
xor
test
jo
sub
inc
cmp
bound
pop
aam
mov
mov
xor
lahf
xchg
jo
pop
jmp
xchg
xchg
lea
push
outsl
push
xor
or
add
sbb
pop
test
dec
and
jne
push
aad
out
push
lret
inc
mov
mov
and
pop
and
arpl
insb
jmp
cs
or
les
pop
mov
mov
add
lods
jecxz
ret
sti
lds
cld
fsubrs
bnd
gs
pop
dec
mov
leave
dec
mov
xchg
lahf
dec
cli
sbbb
aad
nop
xor
hlt
fsub
test
outsb
ds
cmp
loop
fldenv
test
and
pop
jp
int3
aad
jmp
idivb
inc
pusha
sub
cmpsb
sbb
cs
test
jle
popf
mov
push
pop
sub
pop
jp
adc
mov
mov
sub
cmp
movsl
xorl
lods
cmc
jecxz
andb
in
dec
xor
xchg
mov
imul
mov
jae
sti
dec
cld
mov
arpl
or
add
mov
dec
ret
outsb
psrlw
dec
cs
shlb
loopne
jg
inc
adc
mov
push
test
sub
pop
inc
das
lock
imul
and
loop
out
mov
clc
mov
rorb
cmp
mov
stos
mov
adc
mov
adc
call
dec
pop
sub
test
sahf
icebp
mov
and
daa
in
arpl
arpl
xor
jecxz
add
add
es
adc
xchg
out
fdivrs
shrl
mov
jg
sbb
mov
inc
aaa
xchg
pop
mov
or
sbb
dec
gs
xor
mov
loopne
add
mov
push
xchg
test
mov
outsl
movsl
js
pop
pop
fwait
dec
dec
sub
mov
decl
decb
inc
arpl
push
shlb
pop
std
xchg
lcall
and
inc
adc
movsl
pop
mov
pop
adc
xchg
shr
or
sarl
sbb
shrl
xchg
rolb
mov
lds
push
push
fs
pop
fisttpll
add
ud2
jecxz
jmp
pop
jnp
loopne
ret
mov
add
dec
call
shll
outsl
adc
insb
stos
jmp
fcmovb
xchg
imul
cmp
or
dec
sbbb
push
mov
enter
cmp
popa
shrb
mov
idivl
or
dec
mov
jmp
roll
inc
xchg
cmc
dec
xchg
adc
mov
fwait
sbb
xor
mov
loop
inc
cmp
inc
cmovge
add
xlat
mov
lret
push
int
cmc
pop
sub
xor
xchg
cmp
jb
mov
shrb
clc
rcrb
stc
icebp
sub
leave
add
push
push
cmp
adc
push
pop
push
shll
inc
mov
add
xor
in
xor
cwtl
inc
filds
xchg
leave
outsb
cmc
push
dec
xchg
or
push
inc
mov
andl
stos
mov
rcrl
push
xorb
js
pop
js
daa
dec
add
pop
pop
ror
mov
aas
jns
sub
inc
fnsave
ja
xor
rcrl
pop
mov
nop
notl
movl
jbe
sbb
mov
sbb
sbb
inc
or
mov
and
fdivrl
sub
pop
stos
inc
and
das
loope
call
inc
aam
and
sbb
sbb
or
out
into
jns
sub
cltd
pop
mov
mov
cmp
cmp
push
sar
addb
mov
cmpsb
mov
stos
popl
cmp
pushf
sub
lods
xor
rcr
lock
mov
shlb
data16
fsubs
push
les
pusha
fnstsw
stos
push
inc
movsb
add
add
orb
sbb
flds
pop
lods
xchg
shlb
es
sarb
jle
pushf
ss
cmp
ljmp
adc
adc
add
popa
and
and
mov
lret
sbb
test
xorl
xchg
xlat
aam
pop
add
dec
aam
push
insb
mov
pop
push
std
cmc
sbb
xchg
adc
and
cmp
arpl
les
sbb
out
insl
pop
inc
dec
fs
mov
ja
ljmp
jp
fmull
loope
icebp
cmp
push
add
mov
in
add
iret
mov
hlt
jecxz
pop
leave
mov
test
inc
jle
cmp
jp
mov
popa
pop
repnz
leave
pop
pusha
or
inc
push
or
push
push
cmp
dec
sub
lock
adc
fisttpl
xchg
xor
idivb
and
je
insb
cld
into
fucomip
add
or
iret
fistps
mov
or
out
add
push
lahf
ret
add
pop
and
add
dec
sbb
mov
sub
cli
mov
cmpl
int
push
adc
sub
mov
xor
xor
imul
ljmp
and
pushf
adc
lahf
jmp
ds
and
mov
push
fst
sub
sbb
add
push
in
outsl
mov
shll
and
mov
cmp
adc
aam
cltd
lcall
mov
xchg
mov
std
pop
sbb
cmp
loop
dec
sub
inc
adc
iret
pop
in
inc
or
jno,pn
mov
fcomps
inc
mov
xchg
test
or
mov
sbb
mov
icebp
cmp
stc
cmp
mov
xchg
cmpl
adc
popf
xchg
les
aas
les
cmp
arpl
movsl
mov
adc
aam
mov
popl
jb
mov
and
xchg
ds
add
jge
cmpsl
ds
test
shl
push
or
push
clc
lock
dec
inc
ret
push
js
out
in
sarl
orl
ljmp
out
sbb
in
lods
xchg
popa
adc
iret
pop
repnz
xor
sub
cmp
dec
dec
in
pop
mov
scas
mov
icebp
stos
cmp
mov
or
add
add
and
out
pop
loop
nop
xor
orl
sub
or
in
sbb
call
in
or
xchg
movb
fisttpl
jne
rorb
or
in
ret
aas
rol
mov
in
call
js
add
ja
inc
push
imul
imul
sbb
es
jo
movl
bound
add
cbtw
repnz
fstpt
icebp
stc
or
fnstcw
xor
mov
stos
iret
rol
notl
sub
mov
insb
dec
mov
sub
loop
and
or
or
push
mov
lahf
add
fcomip
cmp
xor
loop
mov
mov
push
push
dec
enter
loopne
adc
scas
jecxz
aam
mov
in
aaa
sub
and
movsb
and
imul
in
adcb
insl
clc
and
fisubl
out
lret
test
push
pop
pop
lcall
push
ds
shll
cmp
and
sti
std
pop
sub
lret
shl
clc
ja
ficoms
mov
mov
push
test
cld
rolb
xor
push
sti
mov
inc
jp
int
roll
lock
imull
call
xchg
adc
mov
fdivrs
loope
ds
add
lods
push
sahf
pop
aaa
inc
mov
rep
loop
jl
cld
fdiv
lock
in
sub
jns
sub
test
movb
sarl
fwait
adc
add
jbe
jle
mov
pop
mov
daa
cld
imul
pop
lea
jns
adc
mov
or
pop
push
jb
addb
xor
lock
pop
mov
rol
lods
jae
inc
or
dec
mov
add
cmp
repnz
call
jmp
adc
aas
mov
cmp
test
cli
movsb
leave
fstps
jl
mov
sbb
mov
sub
out
stos
pop
sub
scas
mov
xchg
inc
pushf
shrb
inc
mov
jbe
push
push
adc
arpl
sbb
pop
imul
xchg
cmp
push
adcb
add
add
fdivrl
add
ret
ljmp
out
add
imull
sbb
adc
sub
xor
pop
pop
lods
cmp
dec
mov
mov
nop
lods
repnz
lahf
outsb
inc
shr
push
gs
add
cmp
xchg
mov
xor
outsb
loop
and
je
insl
cli
push
xchg
adc
sahf
cli
adc
jle
jle
ljmp
addl
jbe
lods
xor
arpl
das
call
jb
mov
lcall
call
cwtl
xchg
mov
shlb
pop
mov
mov
adc
pop
jnp
push
sub
and
aas
arpl
ds
shl
fs
cmp
ja
jmp
test
or
fcomp
mov
and
dec
adc
xchg
divb
test
cmp
fdivp
pop
lods
pop
int3
jbe
test
insl
inc
fwait
mov
xchg
scas
mov
mov
ja
xchg
xor
test
jp
aad
lods
mov
in
mov
fistl
jp
push
pop
cmp
ficompl
cli
test
cmpsb
adc
leave
pushf
mov
cld
mov
out
lahf
fcompl
gs
cmpl
pop
adc
out
xor
int
pop
out
pop
mov
pop
sar
cmp
mov
mov
in
lods
mov
xchg
cmpb
sbb
loope
xchg
rclb
or
mov
movq
fldenv
sbbb
pop
mov
cmp
sbb
outsb
test
push
inc
int3
mov
std
je
mov
ret
mov
jb
pusha
arpl
lea
jle
sbbb
cmp
inc
mov
popl
enter
xchg
and
enter
fadds
cmpsl
mov
in
jp
loop
not
cwtl
push
jg
lcall
sub
ja
dec
sti
test
xchg
xchg
cld
bound
out
call
sbb
test
and
jp
out
jnp
icebp
shl
faddl
in
imul
daa
xchg
ficoml
mov
cmp
int
jl
jbe
sub
es
das
leave
mov
ss
call
movsl
rolb
pop
push
push
loop
mov
ljmp
ljmp
xchg
adc
mov
jmp
mov
dec
sub
pushf
es
push
push
cld
fwait
xor
adc
pop
fdiv
sti
cmp
orl
jo
insb
dec
sub
add
repz
iret
pop
bound
cmpb
mov
ljmp
sbb
in
ja
ret
adc
push
push
icebp
mov
cmp
inc
mov
clc
push
mov
fistps
push
cmp
idivl
aad
aaa
ret
cmp
push
mov
lea
jno
test
jo
sub
pop
inc
iret
sub
and
rcll
inc
xchg
adc
addb
fs
jg
push
aas
cmp
mov
daa
jo
lds
sbb
and
imul
cld
lock
xchg
cltd
loop
jmp
sti
rcr
ret
jle
xchg
pop
mov
push
add
inc
xor
jo
jle
jg
jle
addl
int3
je
xor
jl
dec
repnz
lods
rolb
out
cld
outsb
adc
adc
dec
jl
add
dec
pop
cld
mov
lret
ret
stos
add
pop
or
push
xchg
jnp
and
test
push
push
std
mov
ds
fdivrs
sbb
xor
inc
jo
dec
sbbl
or
jmp
dec
stos
lock
and
jno
jo
jmp
js
outsl
lcall
mov
xor
sub
jae
cmpsl
inc
cwtl
xor
addl
inc
and
jg
test
add
push
pop
pop
jbe
mov
jno
xor
cmp
adc
xor
out
mov
push
imul
in
sub
clc
inc
xchg
mov
out
andb
clc
test
add
mov
adcl
mov
outsl
in
jns
popa
mov
push
jle
jg
jo
dec
sbb
nop
jp
fsubr
test
hlt
mov
negl
int3
pop
mov
das
pop
dec
cld
pusha
xorl
jo
outsb
loope
cmc
push
dec
jle
ret
es
pop
clc
or
dec
cltd
xlat
test
sub
add
sub
sbb
pop
mov
and
push
xchg
mov
sahf
fstp
lock
and
fisubs
xchg
xchg
fdivp
test
cmp
jle
outsb
fists
mov
cmpsl
pop
sub
pop
push
jbe
fidivrl
mov
lods
adc
sub
ret
lods
stos
mov
xor
je
bound
jl
sarb
loop
shll
or
scas
loopne
cmp
test
scas
fmuls
in
mov
lret
push
cmp
rcrb
aaa
or
popa
call
push
jp
lea
add
inc
push
lret
push
pop
push
dec
or
jmp
mov
shr
cli
add
mov
mov
test
adcl
sbb
push
arpl
icebp
lds
rcl
add
dec
sbb
dec
mov
lcall
mov
add
scas
pop
mov
hlt
cmpsl
in
mov
outsl
mov
mov
adc
add
push
sti
call
lcall
push
push
jbe
cmpsl
cmp
push
mov
lea
cld
push
fwait
notb
rcrl
inc
cmc
push
pop
lret
mov
mov
push
mov
pop
dec
fisttpl
loop
aas
aam
xor
addb
int3
in
roll
adc
fidivrs
cmpsl
test
adc
mov
sbb
sbb
sub
jl
ljmp
addr16
test
sti
xor
fsubl
ret
mov
lods
pop
mov
add
cld
pop
jg
mov
add
js
insb
push
inc
push
dec
fdivs
cwtl
push
cmp
fstps
cmp
popa
daa
cmp
mov
pushf
or
or
or
sub
mov
cld
add
pop
loope
ficoml
mov
lret
xchg
mov
out
pop
out
mov
mov
mov
add
or
inc
add
stc
pop
jne
roll
fstpl
or
out
lods
dec
and
pop
pop
and
adc
sahf
jp
mov
mov
aas
pop
mov
inc
mov
jle
hlt
mov
test
packsswb
add
loope
xor
sbb
fxch
add
js
jae
cmp
outsb
test
sarl
aas
fwait
js
icebp
rclb
sub
mov
shrb
jno
popa
lock
sbb
lea
popa
adc
mov
sahf
and
shlb
scas
xor
sbb
sbb
sub
pop
and
xchg
icebp
test
test
mov
mov
and
clc
push
cwtl
mov
orb
fsubs
mov
jmp
or
or
pushl
mov
or
push
arpl
out
scas
mov
mov
lea
loop
sub
lock
lock
test
push
rorb
jnp
or
sub
push
push
adc
xor
stos
pop
aaa
lret
mov
and
or
jge
dec
mov
sub
lret
cltd
dec
clc
les
and
pushl
mov
add
inc
mov
pop
ljmp
cli
enter
dec
aam
add
mov
popf
cmc
ret
xchg
ja
push
mov
gs
pop
xor
jo
lods
and
push
out
das
lock
int3
movsl
mov
les
aaa
jb
xor
jbe
mov
iret
popa
inc
addr16
xor
js
jp
add
inc
sbb
sub
and
lea
out
test
add
stc
incb
pop
in
loop
push
add
xor
pop
incl
xchg
jbe
in
rcrl
or
enter
add
and
insb
ret
push
sarb
inc
sbb
pop
jecxz
fmuls
cmc
scas
outsl
add
cltd
xchg
loope
enter
call
ljmp
and
and
inc
sbb
mov
fadds
push
ss
outsl
mov
lret
push
xchg
xchg
sub
sub
lods
cmp
lretw
les
mov
sbb
leave
and
popf
enter
pushf
adc
in
mov
out
rorb
fisttps
jmp
movsb
sbb
inc
pop
test
dec
and
js
inc
sub
cmp
jo
xor
into
adc
jle
addr16
jle
mov
adc
pop
adc
mov
jbe
cltd
inc
stos
mov
sbb
or
popa
mov
add
push
pop
mov
aam
call
rcr
push
sbb
add
push
jb
xorb
pop
or
das
ret
pop
cmpsl
sbb
inc
lds
push
and
mov
lock
clc
cli
pop
lods
xlat
fstps
dec
incl
dec
xchg
addr16
jbe
js
icebp
scas
sbb
shll
xchg
pop
push
mov
sub
inc
add
mov
pusha
lock
test
data16
inc
and
jo
sub
enter
cmc
dec
jo
icebp
mov
testl
test
cs
and
pop
out
xchg
cmp
mov
and
shlb
mov
push
mov
or
daa
sub
les
mov
xchg
cli
es
inc
cli
stos
xchg
adc
outsb
and
jge,pn
jae
push
dec
dec
lret
lock
cld
pop
rolb
loope
add
fildl
dec
xlat
insb
orl
pop
pushf
pop
testl
jmp
cmp
pop
or
adc
and
fdivs
inc
std
push
mov
sbb
push
add
rorb
or
mov
xor
jp
outsb
push
mov
sbb
insb
xchg
fsubrl
mov
addl
cmp
mov
test
jae
fs
loop
dec
sub
dec
dec
roll
xor
je
sbb
js
push
cmpsb
cwtl
incl
sbb
lret
sub
mov
mov
inc
or
sbb
push
getsec
jp
mov
push
xor
jne
loop
xchg
xchg
daa
xorb
popf
sub
enter
mov
int
mov
pop
out
cmp
stc
mov
add
mov
push
adcb
orb
imul
inc
out
push
lods
sti
push
dec
inc
mov
jg
les
add
pop
div
add
jl
out
pop
fimull
mov
sbb
int3
jbe
jnp
sbb
pop
or
call
push
mov
out
inc
sub
enter
jbe
cmp
add
add
push
or
sbb
divl
addl
insb
xchg
loope
xor
stos
or
jle
jo
push
loope
jbe
or
mov
or
push
ss
je
and
subb
mov
icebp
pop
ret
loope
aaa
jo
cld
rol
out
dec
orl
fadds
mov
test
mov
sbb
add
and
sub
and
stos
or
mov
sarl
mov
repnz
fs
sbb
aam
jmp
mov
dec
cmpsl
js
and
adc
shll
push
add
cld
mov
add
and
dec
int3
bound
or
add
imul
lock
ds
iret
pop
fcomps
ret
xlat
inc
add
pop
dec
push
cli
es
inc
out
pop
out
or
enter
mov
repnz
cmc
and
xchg
and
mov
imul
adc
mov
inc
or
and
mov
ret
icebp
mov
fbstp
jo
insl
movsl
or
push
lret
ja
jno
cmp
sub
inc
loope
mov
pop
pushf
pop
sarl
push
pop
pushf
add
mov
fidivl
inc
jl
xor
sbb
fld1
enter
sub
or
fistl
jns
loopne
ds
ss
mov
sub
pop
popa
push
sbb
stos
fiadds
or
fs
xchg
inc
out
hlt
xor
out
xchg
mov
jne
in
pusha
push
and
mov
imul
dec
out
mov
ret
or
xor
dec
add
shrl
sbb
fwait
clc
inc
add
loope
mov
jge
mov
mov
mov
pop
je
jbe
popa
ss
jmp
outsb
xchg
mov
adcb
mov
sar
pusha
test
mov
push
das
mov
cltd
inc
cmp
subl
inc
rorl
push
daa
test
sub
and
push
push
push
pop
mull
std
roll
mov
jnp
or
bswap
or
inc
sbb
xor
jne
push
push
jae
sbb
lcall
and
jne
mov
push
shrl
adc
fcmovbe
push
inc
sbb
pushf
loop
cld
sbb
insb
push
js
int3
dec
dec
jmp
subw
jb
ss
adc
or
lds
xchg
cli
icebp
mov
imul
inc
mov
mov
pop
test
outsb
test
ficompl
mov
mov
mov
xor
cmp
or
int3
lock
pop
sub
into
sbb
call
imulb
jmp
mov
mov
adc
repnz
push
adc
adc
stc
mov
gs
outsb
cmp
out
sbb
fwait
ret
clc
stos
les
xor
loop
test
popf
cmpl
je
inc
inc
xor
push
arpl
mov
sahf
aaa
lea
dec
mov
cmp
test
call
sbb
mov
pop
jo
outsb
mov
iret
mov
push
arpl
fwait
lret
scas
andnps
jb
or
sbb
out
or
adc
mov
call
push
xor
push
adc
mov
mov
sbbl
out
mov
rorl
icebp
scas
in
and
es
mov
ret
pop
scas
push
xor
out
dec
pop
fiadds
cmp
in
push
iret
lea
jecxz
or
adc
lds
loop
xor
jo
insb
jecxz
pop
shll
adc
jno
mov
add
jl
aad
inc
call
cmp
pop
mov
jno
stc
xor
dec
lahf
imul
stos
mov
hlt
sbb
mov
std
clc
lahf
mov
inc
outsl
popf
mov
clc
dec
xor
mov
xchg
in
pushf
add
int
lock
scas
lds
pop
xor
sbb
jmp
xchg
jle
scas
dec
je
mov
icebp
sbb
mov
push
sbb
rcll
xor
gs
fs
dec
lock
sbb
test
lret
test
icebp
push
adc
push
pop
cld
adc
mov
rolb
jns
or
pop
out
loope
enter
insb
mov
pop
mov
das
scas
xchg
and
pop
shl
pop
dec
or
in
mov
jg
daa
cmp
and
fcmovne
mov
dec
cmp
mov
jg
dec
sbb
pusha
lods
mov
pop
cmp
in
push
call
dec
sti
sub
ljmp
add
gs
aam
ljmp
daa
fistpll
jae
cmp
into
test
nop
jb
xlat
jae
iret
pop
scas
xor
je
mov
in
fildll
inc
mov
add
lcall
push
jmp
or
or
adc
sbb
icebp
ljmp
adc
sarb
test
ret
jmp
add
sub
fdivrs
sub
aas
dec
sbb
mov
insl
jno,pt
cli
pusha
shrb
and
jb
movsl
loope
in
mov
push
mov
inc
ja
loope
add
sarb
mov
adc
push
rorb
push
pop
lods
push
push
pop
pop
iret
mov
enter
loop
aas
sub
inc
out
mov
pop
outsl
loopne
jg
test
scas
cmp
jne
push
call
mov
arpl
movsb
jns
push
jnp
lods
cmp
adc
test
pop
or
push
iret
lock
jmp
icebp
lret
push
jne
xlat
movsl
pop
sub
cs
dec
xchg
outsb
fiaddl
pop
decl
fisttpl
in
jnp
cmp
lods
loope
fstps
outsb
gs
pop
movsl
inc
inc
add
cmp
sub
cmp
mov
js
dec
ljmp
sub
cwtl
fbstp
in
jl
sub
addb
mov
es
or
out
shrl
inc
dec
or
pushf
adc
repnz
in
std
jmp
in
movsl
addr16
xor
mov
vpshaw
mov
shrl
adc
roll
std
stos
inc
push
roll
loop
rorb
jge
jle
mov
outsb
xor
fstpl
test
fwait
bound
data16
bound
adc
adc
sub
dec
ljmp
imul
jae
dec
add
xor
inc
fnstenv
jno
mov
mov
mov
lret
inc
cmovp
call
mov
mov
mov
std
cmp
stos
lock
push
mov
js
add
imull
rcl
adc
rcll
dec
mov
mov
adc
lea
ss
mov
mov
jge
stc
xor
in
push
mov
sbb
rorb
jg
shll
jnp
sub
sbb
dec
insb
inc
inc
xor
xor
hlt
and
mov
ret
sub
xor
mov
fldl
adc
or
push
lds
add
pop
adc
push
add
and
stos
dec
sbb
push
push
push
adc
adc
cs
add
movb
andb
cs
and
dec
aas
mov
scas
mov
sbb
inc
pop
jg
inc
aam
mov
add
iret
ret
dec
adc
sbb
jmp
fsub
lods
mov
jnp
xchg
pop
cli
adc
cmp
push
xorb
or
dec
sbb
addb
jp
add
lcall
dec
aam
mov
out
mov
aas
lods
jno
shlb
in
push
xlat
mov
mov
cmp
out
loop
sbb
ror
mov
daa
push
movsl
mov
mov
jg
mov
pop
je
adc
or
dec
push
pop
cmpb
adc
sbb
mov
xchg
fwait
mov
mov
aaa
xchg
add
shrl
fiadds
xlat
mov
stos
mov
xor
mov
dec
in
fucompp
js
loope
mov
in
lcall
jle
mov
cwtl
adc
add
mov
and
adc
pop
jae
je
sbb
das
cmp
xor
pop
test
stc
mov
jge
add
popf
push
mov
cli
add
mov
sub
andl
adc
mov
fs
fsub
js
xchg
xchg
fs
mov
fldcw
push
shr
sbb
enter
aam
jp
mov
push
push
cmp
fadds
in
mov
cld
rolb
cmp
jnp
or
popa
inc
pusha
xor
push
loopne
xchg
mov
and
aaa
xchg
cmp
shrl
ljmp
jmp
and
jge
sbb
loope
push
jge
ror
pop
scas
ds
leave
push
aas
lret
addb
sbb
adc
cmc
imul
mov
mov
lock
ljmp
cli
cltd
pop
cmp
sbb
xchg
movsb
sub
or
add
sbb
or
adc
mov
test
and
push
push
mov
sub
xchg
and
pop
pop
pop
add
add
ds
cmp
jl
jmp
add
lock
cmp
mov
inc
dec
jbe
cmp
jns
sahf
insb
sbb
adc
sub
add
lods
pusha
adc
push
lods
xor
jle
sar
mov
icebp
jne
mov
nop
js
push
insl
mov
mov
repz
repnz
push
or
pop
nop
and
inc
and
sbb
sbb
mov
xchg
out
addb
lods
loope
aas
icebp
add
xor
mov
les
popa
js
in
mov
pop
idiv
cmp
dec
rorb
push
in
mov
shll
pop
adcb
mov
hlt
mov
cmp
insb
push
or
adc
pop
push
repz
lods
mov
cmp
mov
in
dec
mov
loope
mov
and
pop
loopne
pop
cmpb
xchg
imul
jge
cmp
in
jl
cmc
rcrl
shlb
test
dec
loope,pn
mov
sbb
pop
xlat
jo
jmp
lret
imul
adc
cmpsb
lods
push
rolb
push
movsb
push
ss
or
adc
fidivrl
add
scas
scas
adc
cmc
clc
and
pop
inc
sub
faddp
pusha
mov
call
jmp
lea
sub
scas
into
cmpl
in
cli
xchg
cmp
mov
sbb
dec
outsl
js
sub
data16
out
jecxz
fwait
lea
punpckhbw
mov
scas
lcall
or
or
loop
jnp
hlt
pop
mov
cmpsb
enter
dec
mov
lcall
stos
or
push
test
fwait
lds
test
rcrl
xor
jo
adc
int3
xchg
mov
mov
cli
add
stos
movsb
sub
inc
mov
pop
ret
dec
mov
xchg
add
cmpl
or
dec
in
adc
and
jno
in
pop
addw
inc
into
xchg
add
cmc
pop
aam
xchg
dec
mov
xchg
add
ret
inc
outsl
jp
jmp
xchg
cmp
or
mov
mov
adc
mov
xlat
dec
and
mov
or
or
mov
mov
cmp
cmc
pop
and
push
xchg
fildl
jbe
or
jp
popf
cmp
add
lea
add
rcrb
or
call
xor
pop
inc
add
mov
aaa
xor
xchg
out
mov
lods
loopne
xchg
mov
in
lret
dec
xchg
push
lds
cmpsl
pop
cli
and
sarl
xor
pop
cmp
push
ret
cmpl
fcomi
outsl
loope
and
and
outsb
cmpsl
in
mov
sbb
sbb
scas
sbb
xchg
rorb
jnp
imul
int
stc
in
or
dec
adc
or
bnd
das
jno
out
mov
lret
jb
stos
mov
or
cmp
ret
xor
sub
mov
mov
mov
in
lea
inc
xor
cwtl
mov
push
ret
imull
cwtl
add
pop
rcll
sub
adc
push
aaa
pop
mov
lods
xchg
and
lea
inc
clc
outsl
push
mulb
mov
notrack
pusha
adc
sbb
pop
dec
cmc
pusha
sub
push
xchg
jecxz
jle
sbb
cmpsb
or
test
adc
nop
leave
and
jo
xor
inc
jo
test
loop
repz
repz
mov
icebp
mov
mov
aaa
adc
sbb
push
pop
xor
pop
add
mov
lret
xor
and
push
or
ret
sub
mov
es
adc
loop
mov
mov
ret
jp
add
clc
je
adc
jb
pop
ljmp
ss
pop
xor
das
call
and
lahf
sub
sub
sbb
mov
insl
loop
mov
mov
mov
pop
ret
fiadds
mov
jnp
cwtl
popa
dec
adc
movsb
data16
pop
andl
mov
push
mov
ds
push
mov
lcall
aad
push
sbb
std
int
scas
and
sbb
arpl
pop
out
xchg
mov
out
cli
mov
ret
push
adcl
mov
das
scas
xchg
sbb
fdivr
clc
push
sub
lds
mov
ret
movsb
push
insl
adc
sbb
cmp
int
push
test
xchg
add
jl
scas
shll
mov
jmp
mov
sub
jp
add
js
add
mov
adc
ljmp
mov
xchg
sbb
stc
scas
push
lahf
sub
hlt
insb
icebp
dec
push
and
inc
dec
push
pushf
stos
mov
call
or
imul
sbb
inc
shrw
sbbb
inc
xor
outsb
xchg
and
data16
inc
mov
jo
lfs
add
pop
aaa
mov
iret
xchg
xchg
lock
xor
iret
fistpll
std
jo
fisttpl
cmpsb
in
rcl
sti
mov
js
imul
arpl
aas
aad
orb
js
sub
push
push
inc
sbb
ljmp
pop
ljmp
add
sahf
rorb
sbbl
jp
fsubs
jle
fistpl
das
xor
add
imul
test
pop
clc
test
push
je
xorb
mov
ljmp
test
aam
mov
push
or
js
and
mov
adc
mov
jl
jecxz
adc
jb
xchg
nop
and
rorb
popf
sbbl
push
xchg
clc
aaa
mov
and
sarl
jae
cmp
or
neg
das
aam
add
cmpsb
leave
test
in
out
push
sub
clc
in
int3
add
jb
addl
or
orb
xchg
jo
sub
push
les
loop
ficoms
mov
pop
cmp
mov
cmp
repnz
sub
mov
sti
sub
push
push
xor
dec
adc
mov
or
push
scas
inc
fnstenv
aaa
mov
nop
mov
xchg
xchg
push
hlt
shll
cmc
pop
add
xchg
add
addr16
cmp
push
loopne
inc
mov
call
inc
cli
push
paddb
aam
loop
pop
cmp
sub
fmull
lds
rcr
ret
jno
push
shrl
jp
jns
pop
dec
loopne
cmp
scas
lods
pop
sbb
jle
das
addb
xor
loope
loopne
movb
testb
mov
cmp
movsl
jl
mov
dec
jl
and
loop
ss
dec
xchg
test
add
jg
in
sahf
cmp
fsubrs
addl
add
ffreep
out
sbb
jmp
popa
mov
xlat
cmp
stos
fcoms
nop
lcall
add
xor
cmp
scas
push
addl
mov
jmp
call
cmp
mov
pop
subb
adc
or
dec
mov
testl
sbb
sti
add
dec
xor
and
loopne
and
xor
insl
mov
xchg
xorl
jmp
loopne
xchg
fwait
jae
add
mov
mov
jo
cmp
push
imul
cmpsb
popa
lods
mov
inc
mov
mov
das
das
rcr
push
lock
jge
pusha
daa
shlb
scas
insb
push
stos
cmp
rclb
ds
jp
mov
std
mov
in
dec
pop
pop
pop
push
xorb
out
js
dec
rcrl
js
test
lods
dec
mov
pop
or
in
rolb
sub
mov
sbb
loop
shlb
cmp
pop
out
shlb
mov
ds
mov
clc
vmovd
rcrl
or
inc
sbb
sbb
js
lcall
xchg
sarb
shll
mov
push
loope
adc
jbe
aad
pop
push
mov
icebp
push
sbb
mov
rcl
std
inc
and
push
aas
adc
cld
add
inc
sub
mov
push
sti
fisttps
icebp
ljmp
pop
adcb
and
mov
aam
aas
mov
xor
xchg
loope
cmpsb
pop
call
in
inc
std
mov
enter
popf
dec
clc
pop
movsb
xchg
or
mov
sbb
ficoms
push
and
dec
cmpsb
dec
pop
shll
jge
pop
subb
cmp
add
or
pop
icebp
addr16
pop
jb
pop
or
ljmp
repz
fldl
loop
jae
in
jle
leave
cmp
jl
ficomps
add
jmp
cwtl
or
bound
and
stc
es
pop
loop
lahf
movsl
jns
cmp
cmc
mov
sahf
jmp
xchg
insb
add
loop
or
es
lods
sahf
nop
aaa
js
or
loop
popf
insb
sbb
mov
mov
or
lea
mov
mov
and
in
rorb
pop
int
ret
jno
sbbb
mov
loope
cmp
inc
aam
push
sbb
jecxz
add
xchg
mov
es
loopne
xchg
sbb
stc
out
lds
mov
push
add
scas
fcmovbe
int3
jne
scas
stos
test
or
and
sub
push
in
clc
and
cmp
or
dec
jmp
dec
inc
test
enter
dec
aaa
aam
enter
adc
jmp
inc
jl
fisubrs
aad
mov
fisubs
fildl
call
lds
xor
mov
push
push
push
shr
mov
outsb
adc
cld
or
jnp
xchg
add
mov
shrb
int3
and
add
ret
scas
clc
or
inc
xchg
sahf
pop
lock
push
adc
subl
lea
fcmovb
cld
cmp
or
adc
sti
roll
mov
aad
inc
test
adc
test
pop
lds
cld
scas
cmp
jge
xor
cmc
mov
icebp
add
xor
add
test
pop
mov
ljmp
push
dec
enter
clc
dec
gs
out
pusha
push
fs
mov
and
push
mov
adc
cltd
xor
pusha
lods
lock
xchg
loop
sbb
jmp
out
mov
lock
jnp
inc
dec
int3
dec
notb
scas
mov
shll
mov
mov
fcompl
popa
insl
les
and
mov
jns
or
ficompl
pop
out
add
dec
jp
stc
repz
repnz
push
jne
fldl
subb
mov
cmp
lret
mov
sub
sahf
sbb
dec
xor
push
push
push
dec
sbb
adc
and
pop
js
imul
or
sti
dec
xchg
xlat
and
xorb
and
scas
or
mov
repz
ret
cli
cld
jo
loope
lret
pop
out
xorl
icebp
lea
repz
imul
mov
call
dec
sbb
das
inc
mov
sbb
push
inc
adc
pusha
xchg
les
jbe
adc
mov
adc
dec
xchg
push
sbb
loopne
lea
dec
imul
mov
xor
mov
hlt
ss
adc
jae
scas
dec
mov
test
or
orl
lods
push
push
hlt
test
ss
add
cli
mov
test
adc
pop
push
cltd
lods
loopne
push
cmp
mov
mov
mov
mov
sub
icebp
cmp
out
pop
mov
pop
rcrl
sahf
inc
mov
lret
push
sub
push
je
cmp
xor
push
dec
ror
cmpb
rclb
pop
push
jl
fidivs
cmp
cld
lds
loopne
hlt
inc
int3
ret
push
cmpsb
jo
iret
lea
mov
ret
nop
xor
out
mov
inc
sbb
fmulp
aad
lock
cmp
jecxz
push
pop
push
push
xchg
mov
push
pop
loop
mov
cmp
je
push
jg
fsubs
outsb
mov
xor
lock
dec
or
js
das
xchg
pusha
ret
ss
cs
sub
flds
lds
cmp
icebp
daa
mov
aaa
push
jg
aad
lds
mov
xchg
hlt
add
cmp
add
push
push
and
sub
loopne
adc
mov
dec
xchg
pop
mov
jo
sbb
lret
mov
fbstp
test
lods
ds
fildll
fsub
pusha
pushf
or
testb
xchg
mov
xchg
pop
xchg
mov
mov
into
fadds
aas
mov
into
andl
cmp
test
inc
mov
neg
mov
shll
inc
push
hlt
mov
jbe
mov
movsb
sbb
decl
xchg
ljmp
adc
and
pop
lods
notb
adc
sub
mov
sbb
push
cs
dec
pop
subb
add
in
sarb
sti
inc
cmp
lods
adc
pop
aas
push
scas
or
xchg
hlt
mov
test
sbb
ficoml
les
fs
out
sub
icebp
pop
xorb
enter
jle
or
mov
jp
mov
jno
lods
mov
cmp
daa
mov
adc
add
dec
lret
adcb
add
in
inc
push
stos
clc
test
lock
add
lahf
mov
js
fs
pop
test
push
lock
sbbb
sbbl
data16
cli
mov
sahf
xchg
cld
mov
add
mov
es
inc
fwait
adcl
jecxz
adc
scas
mov
outsb
lcall
pop
or
out
sbbl
jns
pop
enter
dec
jmp
enter
xchg
test
roll
or
jg
or
pop
mov
mov
cld
adc
add
mov
gs
outsl
or
cltd
movsl
push
jo
dec
daa
mov
jg
mov
sub
jo
mov
ds
jbe
pop
test
push
push
sub
imul
xchg
push
jecxz
loopne
cmp
loope
and
inc
rolb
ss
sub
jl
push
cmpsl
mov
outsb
loop
rolb
mov
in
mov
loope
or
push
mov
cmp
ficoms
mov
stos
add
push
add
dec
push
xor
div
cmpsb
loop
push
shrb
clc
push
pop
dec
outsb
sbb
inc
jae
mov
cmp
scas
sahf
jge
adc
fisttpll
lret
pop
mov
outsl
das
mov
leave
rolb
and
lock
push
js
xor
sub
adc
fistpl
lcall
xchg
movups
lock
sub
mov
pop
or
fldl
cmp
push
daa
pop
es
cmp
jbe
in
orb
or
push
add
cmc
test
popf
jp
jbe
aaa
xchg
add
cli
and
mov
clc
or
inc
pop
out
mov
std
mov
cmp
fs
mov
adc
loope
aam
bound
or
imul
xor
outsb
mov
ret
lock
outsb
push
mov
int3
lea
aaa
loope
je
mov
test
sub
into
int3
xor
push
das
pop
lcall
xchg
and
pop
cmp
pop
add
inc
or
icebp
int3
cmpl
clc
mov
jg
rolb
cltd
xchg
test
cmp
iret
cli
push
aam
xor
imul
iret
cmp
shll
push
push
std
in
fsubs
aam
lret
push
cld
stos
adc
jle
jno
ljmp
sub
hlt
or
fistps
lea
and
and
sub
and
loope
lods
sbb
imul
pusha
mov
loope
jo
imul
mov
push
mov
or
loope
insb
loope
in
xor
jle
push
xchg
dec
mov
les
pop
mov
adc
test
aam
adc
push
ret
data16
add
aam
jne
jne
in
ds
decl
in
and
and
daa
in
push
fisttps
in
ds
sub
xor
cli
jmp
out
mov
xchg
rclb
mov
mov
sbb
movsl
push
popa
fists
inc
mov
add
mov
and
push
and
cmp
clc
outsl
clc
mov
sub
mov
dec
rcll
daa
test
shl
push
inc
sub
mov
mov
or
shlb
mov
mov
dec
dec
popa
outsb
adc
bound
leave
fiadds
mov
faddl
insl
shl
loopne
loop
movsb
xor
je
xor
adc
orb
mov
icebp
jo
outsw
lret
pop
icebp
dec
mov
fsubr
ret
mov
fisubrl
dec
ret
add
pop
dec
jp
dec
mov
mov
mul
cli
inc
dec
js
push
jns
or
and
cli
push
and
js
pop
xchg
lock
shlb
js
pusha
adc
xchg
inc
push
sbb
in
mov
addr16
sti
outsb
add
out
jp
call
cli
add
push
sbb
out
aaa
pushf
add
add
aam
pop
sbb
scas
orl
out
inc
sarl
push
mov
mov
or
and
mov
mov
pop
lcall
cwtl
mov
loopne
cmp
push
push
mov
clc
pusha
sbb
mov
nop
adc
sbb
add
mov
push
aas
ljmp
jle
mov
cmp
fwait
movsl
jbe
xchg
and
cmc
imul
das
inc
test
mov
imul
cmc
stos
std
cs
jbe
insb
pop
push
mov
pop
loopne
cld
adc
or
xor
mov
fnsave
push
inc
dec
add
andl
cmp
jns
shufps
inc
xchg
out
push
or
lods
sub
add
fcomp
jmp
pop
lret
fdivrs
mov
stos
pop
outsl
insb
sbb
sbb
xchg
push
inc
pop
jp
or
and
popa
loope
jne
fisubs
or
out
pop
mov
std
ljmp
aas
jle
pop
jle
cwtl
or
jle
nop
sub
jle
jp
sti
pop
dec
xlat
dec
sbb
adc
stc
bound
test
push
fbld
xor
push
sub
pop
scas
add
jmp
jo
pop
inc
fistl
or
repnz
cmpsb
sub
adc
test
loop
sahf
add
jmp
loope
cmp
jl
gs
sub
addr16
cmp
jbe
rcl
jp
cmp
icebp
addl
mov
dec
cmp
mov
or
inc
jo
cmp
cmp
xchg
adc
mov
dec
cmp
movsb
testl
add
loop
or
pushf
cmp
ss
popa
out
pushl
rcrl
xchg
rcrb
fisttpl
jl
mov
adc
test
loop
pop
outsb
add
sarb
or
mov
and
cmpsl
jg
repz
xchg
ja
inc
jge
in
xor
test
xor
pusha
or
cltd
cbtw
inc
inc
ds
jecxz
adc
gs
xor
push
add
push
test
sbb
mov
loope
cmp
adc
jne
dec
jns
mov
cld
jp
jae
sbb
xor
fisttpl
popa
push
cwtl
rcrb
cmp
vaddsubps
test
scas
push
sbb
push
mov
xchg
lret
or
push
mov
mov
and
arpl
mov
stc
push
out
es
cmp
cs
outsl
sbb
loopne
imul
cmp
inc
decl
cmpsb
notl
in
js
inc
scas
cmp
xchg
inc
insl
add
outsl
in
cmp
or
xchg
xchg
jae
es
push
mov
mov
dec
push
jl
std
call
inc
inc
ficompl
fldl
mov
jle
mov
sbb
push
cmp
sub
pop
stos
xchg
loopne
testb
mov
dec
fwait
sub
loopne
clc
leave
push
repz
ja
xchg
mov
add
dec
orl
ss
xor
clc
in
fnstenv
js
aas
pusha
jecxz
repnz
pop
out
pop
jmp
push
decb
inc
cld
push
cmp
aas
inc
insb
sub
adc
cltd
jo
dec
fcom
cwtl
sub
mov
in
push
loop
rolb
cmp
pop
push
pop
or
mov
cltd
scas
sbb
mov
mov
in
xor
insl
sub
mov
cs
shlb
mov
int
mov
mov
ljmp
push
aam
or
mov
outsb
leave
shll
ret
lods
addr16
inc
mov
das
mov
sub
fnstcw
jp
adc
push
sbb
into
sbb
mov
js
push
adc
loopne
clc
aam
ja
movsb
pop
cmp
add
loope
aam
stos
push
inc
loope
or
jno
sahf
add
cmp
cmpsb
xchg
test
fnstsw
mov
add
ja
cmp
bound
xor
or
loopne
rcrl
adc
lea
mov
jp
std
push
pushf
es
add
test
sbb
out
xor
in
inc
xor
clc
xor
pop
outsl
dec
mov
sbb
pop
popa
testb
mov
xchg
add
or
adcb
in
inc
xor
insb
xor
or
pop
jnp
test
loopne
mov
mov
and
sbb
std
adc
dec
push
shll
js
outsl
mov
add
insb
popa
dec
pop
jbe
cmpsl
pusha
pop
and
jo
or
push
adc
mov
int3
xchg
xchg
add
insb
pop
adc
pop
mov
movsl
push
cmovb
push
xchg
test
das
fisttpll
mov
mov
loopne
jmp
sub
push
push
fdivl
fchs
push
test
insl
or
ret
mov
adc
int3
xor
xchg
mov
add
jecxz
imul
xor
xor
rorb
pop
repnz
push
cmp
xchg
je
jno
xor
xchg
push
test
sub
xchg
repnz
enter
call
scas
xor
and
xchg
sbb
cmp
loopne
es
sub
loopne
push
popf
jno
cld
sub
dec
popf
test
sbb
int3
push
add
xchg
mov
adc
movsb
call
shl
call
pop
repz
xchg
das
xchg
sbb
add
jmp
rcrb
adc
mov
fdiv
cmp
mov
in
push
adc
into
adc
sub
sbb
ss
cmp
add
or
jns
test
int
pop
insb
lods
in
test
cmpsb
mov
dec
scas
ljmp
xor
adc
push
add
and
rorb
push
jns
std
mov
adcb
mov
inc
cmp
stos
sbb
sbb
incb
mov
out
xor
cld
lea
xchg
add
pushf
mov
cmpsb
mulb
xor
js
pop
lock
push
or
sbb
lds
dec
cmp
nop
dec
push
sub
idivl
iret
cmc
in
fildl
jbe,pn
add
jp
out
nop
loopne
enter
inc
push
outsb
push
xchg
pop
xlat
sbb
and
ljmp
xchg
in
push
sbb
cmp
inc
cld
push
mov
sub
cltd
mov
jecxz
loopne
sub
adc
xchg
inc
rorb
push
mov
jmp
cld
bound
icebp
push
cs
ljmp
inc
mov
jb
cltd
test
add
pop
mov
sbb
jle
arpl
fbstp
jo
jbe
xchg
and
or
loope
test
pop
or
fcmovb
jb
rcrb
rcrb
mov
stos
lahf
clc
and
imul
mov
sub
jp
rcrl
sbb
test
add
aaa
or
dec
sub
adc
pusha
call
mov
loop
jp
fldenv
add
pop
inc
cli
stos
lock
int3
pop
and
lea
inc
and
jne
xchg
out
out
daa
mov
enter
jmp
js
xchg
test
push
ret
call
popf
loope
fdivp
testb
mov
push
mov
add
stc
sbb
imul
jo
mov
xchg
mov
and
rclb
sbb
cli
out
rorl
adc
dec
in
rcr
sub
push
dec
jmp
orl
sahf
out
adc
ltr
xchg
nop
mov
sub
xchg
mov
push
sub
mov
dec
lods
adc
daa
jne
rorl
xchg
mov
xchg
jl
pop
lcall
js
aad
mov
mov
add
pop
sbb
xchg
out
and
stos
sub
push
push
inc
divl
xchg
sarb
fwait
push
add
ret
xchg
popf
iret
iret
push
sahf
adc
dec
push
or
sub
pop
enter
lcall
cltd
cmpsl
sub
mov
cmc
loope
enter
xchg
mov
pushl
xchg
movsl
xchg
cmpsb
mov
xor
adcl
sahf
scas
mov
mov
out
mov
or
add
sub
mov
cmpsl
ret
cmp
add
outsb
ss
or
or
push
mov
insl
movsl
fsubs
aaa
scas
sub
test
ret
fs
push
xorl
fisttpll
lods
xor
adc
movsb
inc
jo
in
and
call
cmp
xor
sbb
pop
or
push
add
cmc
ret
lcall
imul
and
jnp
sub
int3
fwait
add
movb
iret
mov
in
push
bound
loope
pop
mov
mov
dec
loopne
push
lret
xlat
mov
xchg
cmpsl
iret
dec
test
cmp
sbb
xchg
and
orl
push
sub
pop
ljmp
and
sbb
mov
inc
nop
aaa
and
jg
ds
hlt
push
xchg
dec
arpl
je
pop
movsl
sahf
jne
int3
out
push
add
imul
jae
lods
mov
scas
lea
hlt
inc
stos
ljmp
loopne
mov
cld
insl
or
fmuls
cltd
pop
pop
aaa
sbb
mov
push
aad
lock
mov
mov
popa
xor
mov
data16
mov
fwait
cld
and
add
push
or
or
adc
lods
aas
push
hlt
cld
rcrb
call
fidivs
or
jmp
inc
mov
lcall
int3
or
or
sub
add
sub
mov
repz
jg
outsb
out
fdivp
lods
cmc
sub
jnp
xlat
fisubrs
jae
js
or
mov
shll
jge
in
dec
xchg
adc
add
mov
addl
pusha
or
vpavgb
mov
lods
pop
gs
movsb
cmp
xchg
pop
rorb
push
lods
js
pop
test
add
fildl
inc
or
pop
lcall
dec
js
mov
and
into
lret
call
add
inc
bt
imull
pop
inc
mov
xchg
movl
cmp
and
stos
dec
mov
inc
cmp
lds
and
dec
jae
or
nop
dec
add
push
jge
mov
mov
dec
pop
dec
call
cmp
dec
cmp
cs
aam
ljmp
fildl
xor
xchg
icebp
or
clc
jp
test
add
fs
fwait
test
aaa
jle
xchg
popf
adc
mov
mov
jmp
push
cli
je
pop
pop
push
lock
push
jl
test
dec
and
js
push
xchg
sbb
in
add
jno
test
test
inc
std
movsl
adc
xor
lods
das
mov
add
imul
cmpsl
and
jmp
sub
enter
mov
imul
stc
std
sub
push
or
inc
mov
pop
xorb
les
aam
mov
add
aas
out
xchg
mov
or
mov
inc
xchg
imul
dec
idivb
push
cmp
sub
test
mov
out
push
xchg
out
mov
cmp
imul
popf
mov
lds
jge
push
nop
imul
cli
push
out
out
out
aad
jno,pt
adc
scas
das
or
push
xor
mov
mov
cmp
hlt
test
push
shll
lock
jo
loop
cmp
loope,pn
adc
mov
cmp
inc
sbb
push
daa
fistpl
sub
mov
jns
and
or
scas
aam
xchg
add
cld
rolb
fldenv
and
ljmp
xor
push
clc
jmp
call
sbb
bnd
mov
push
mov
pop
nop
mov
add
fxch
jle
xorb
ljmp
lods
shrl
or
sub
sbb
cli
lods
xchg
mov
out
mov
aad
movb
adcl
scas
lods
cmp
jmp
adc
ret
aad
test
xchg
imul
xlat
mov
and
dec
jnp
ljmp
push
mov
rorl
and
shl
dec
mov
inc
subl
mov
pusha
xor
mov
imul
imul
inc
or
insl
insb
mov
and
cmp
in
sbb
test
rol
repnz
mov
mov
push
rcl
or
mov
lods
js
inc
and
or
mov
imul
ljmp
adc
lahf
jg
pusha
icebp
rorl
sub
dec
mul
or
sub
inc
push
les
je
aaa
sub
lods
shlb
push
je
push
js
mov
xchg
cmpsl
or
shl
inc
add
dec
ret
pop
sub
roll
or
movsb
xchg
fidivs
mov
lret
in
fdivrl
inc
jg
in
mov
jb
in
adcb
cmc
pop
in
and
lds
pop
pop
cmp
jo
pop
add
push
lahf
push
sahf
shlb
ds
push
adcb
repz
sbb
lds
adc
mov
into
xor
hlt
lods
cmp
fstps
pop
fsubr
mov
in
js
out
cmpsl
aas
pop
hlt
jecxz
mov
lea
xchg
and
xchg
sahf
jp
xchg
cmp
jae
pop
mov
mov
jb
inc
aaa
clc
inc
sbb
inc
mov
pusha
pop
sbb
loopne
mov
push
sub
cld
rcl
call
adc
cmc
push
add
mov
push
dec
adc
outsl
aam
jnp
aaa
sti
xor
mov
rorl
in
pop
scas
mov
push
push
push
xchg
and
and
out
or
push
lea
and
out
clc
sti
repnz
pusha
add
sahf
jp
dec
pop
pop
jns
sbb
xchg
insl
out
add
sbb
add
rcl
mov
cmp
test
jp
sbb
xor
jno
jns
push
lock
sbb
mov
movsl
xor
or
cmp
out
add
or
xchg
jo
jp
jl
push
or
pop
push
mov
fisttps
and
cltd
adc
inc
mov
jmp
into
je
mov
add
test
lods
and
aam
add
push
mov
popf
adc
or
lahf
lea
fisttpll
mov
add
std
clc
xchg
mov
cmpsl
bsr
daa
inc
xchg
inc
or
adc
fdivs
jecxz
hlt
sbb
imul
shlb
push
or
or
test
or
mov
inc
xor
cmp
rclb
push
je
fsubr
add
adc
pop
shrb
jno
lods
jmp
add
ret
inc
push
and
cmp
mov
and
mov
add
call
sub
testb
aam
pop
sbb
push
out
sarl
shrl
pushf
and
invd
jl
mov
xor
mov
sbb
add
insb
mov
test
push
popa
loope
push
and
add
mov
xchg
call
cmp
fs
mov
or
jbe
mov
subb
jnp
test
ret
mov
mov
mov
xor
adc
es
or
jbe
dec
mov
orl
aam
sahf
lret
inc
popf
jo
sub
pop
pop
je
sub
or
rcr
stc
jbe
jo
int
cmp
mov
ret
shll
push
cmp
test
sub
shll
out
rcll
cmp
mov
sbb
mov
fiaddl
pop
add
and
imul
in
aad
mov
stos
pop
push
dec
fmul
mov
iret
push
cmpsl
dec
daa
cwtl
js
cmpsb
add
jno
sbb
sbb
add
mov
adc
icebp
pop
scas
mov
lock
xchg
andb
sbb
xorb
pop
or
mov
sbb
pop
dec
clc
pop
inc
js
movsb
mov
add
push
push
fistpl
pushf
inc
sbb
xchg
fildl
test
je
outsl
push
mov
xor
push
push
test
rcll
or
and
insl
mov
enter
cmp
shrl
sbb
ljmp
clc
dec
imul
xchg
add
mov
lret
aas
adc
mov
jecxz
scas
xchg
paddd
fisttpll
and
xor
mov
fcmovnb
in
sbb
fsubrl
shrb
and
sbb
and
ss
emms
mov
mov
sub
jl
es
call
xor
jecxz
insb
dec
add
cmp
push
inc
rcll
data16
jmp
pop
test
fcompl
je
faddp
xchg
mov
push
mov
loopne
and
ds
mov
and
and
xchg
leave
dec
loop
rorb
sub
lea
lret
sbb
jae
pop
add
repz
or
jno
mov
xchg
daa
sub
push
ret
cmpsb
lcall
inc
stos
out
leave
mov
xchg
adc
mov
sbb
bound
push
push
adc
frstor
jo
imul
loopne
jg,pn
andb
inc
mov
cmp
and
inc
cltd
shr
sbb
pop
inc
jp
addr16
scas
sub
movsb
pop
ja
jle
inc
fldenv
in
jl
push
inc
mov
jnp
mov
bswap
rcll
iret
xchg
lret
cmp
or
or
stos
inc
mov
fimull
test
pop
add
js
ja
scas
xchg
xchg
lods
push
mov
je
cmp
clc
rcr
sahf
adc
movsl
dec
cmp
adc
add
sub
xchg
sbb
test
adc
outsb
mov
sub
gs
xor
xchg
aas
rcrb
xchg
sub
pop
aas
cmp
cmp
ss
subb
add
xlat
and
mov
push
push
or
loop
imul
fsub
ljmp
flds
int3
mov
push
push
insb
xchg
cmpsl
push
mov
jp
push
outsl
in
mov
setg
mov
cmpl
inc
pop
inc
jl
mov
movb
mov
test
and
ljmp
ret
add
mov
out
std
and
aaa
inc
and
lock
dec
jae
lds
scas
jb
adc
arpl
lods
xchg
cmpsl
pop
loop
cmpsb
ficoms
or
cmp
psubb
xchg
xor
aam
loope
scas
iret
fwait
sub
cmp
lods
inc
imul
or
jg
lret
or
add
push
out
sbb
stos
fcmovb
and
adc
adc
loopne
xlat
add
rcll
lret
inc
mov
or
mov
adc
repz
les
xor
adc
cli
jmp
loop
jl
stc
xchg
mov
or
pop
push
push
stos
data16
xorb
stos
push
push
push
inc
into
cli
push
hlt
stc
fdivrl
sub
call
cmp
push
aas
std
mov
fwait
iret
lds
adc
mov
sahf
enter
call
xor
xor
fsubr
pop
xchg
in
mov
mov
inc
insb
mov
icebp
inc
cmpsl
ret
jb
ljmp
ljmp
cmc
stos
or
push
xor
jbe
fcmovu
adc
inc
sbb
sbb
mov
adc
outsb
ljmp
das
ss
adc
sub
dec
xor
adc
jne
test
add
xchg
mov
iret
cmp
jmp
inc
rcr
cli
cmp
test
jo
mov
jbe
in
les
jmp
push
xchg
mov
xlat
das
sbb
jecxz
fsubs
xor
push
nop
outsb
jbe
dec
jecxz
mov
std
aaa
dec
mov
aas
or
mov
push
fdivrl
fptan
xchg
lea
nop
fs
or
js
or
inc
pop
inc
push
js
push
or
fs
inc
leave
and
cmp
push
out
jecxz
mov
or
dec
pop
imul
js
lds
lret
pusha
sti
movsb
flds
aad
fsub
icebp
push
js
and
dec
add
mov
and
mov
pop
fdivrl
add
es
test
loop
sarb
out
sbb
jo
inc
push
xchg
pop
cmp
sar
inc
push
lods
cwtl
jp
roll
shll
mov
and
or
push
mov
push
or
hlt
hlt
inc
aaa
push
clc
mov
or
mov
popf
mov
in
orl
pop
xchg
mov
and
xchg
fcmovb
add
cmpsb
pop
jbe
or
mov
and
rcr
pop
fcompp
cmp
push
ret
inc
jmp
dec
mov
fdivrl
add
fmuls
jp
cmp
repnz
addr16
dec
and
xor
pushf
sub
shrb
jg
jmp
scas
push
and
or
inc
test
aam
adc
sti
push
mov
nop
hlt
pop
inc
sub
push
push
je
mov
lds
mov
push
addl
push
xchg
mov
push
fwait
add
fwait
sarb
push
sbb
addr16
out
cmp
les
lret
xchg
sbb
xchg
sahf
nop
outsl
shlb
stc
sbb
mov
sbb
mov
fsubrp
xor
push
adc
call
imulb
inc
mov
pop
rorl
xchg
psraw
or
es
inc
mov
sub
mov
shlb
add
mov
cmp
das
insb
cmp
lock
stos
dec
dec
insb
add
and
mov
sbb
mov
xor
hlt
loopne
inc
cmp
pop
je
gs
imul
jge
outsl
inc
dec
mov
loopne
and
mov
aam
mov
lcall
pop
out
jmp
in
imul
sub
mov
pop
mov
cmpsb
lock
push
push
jb
bound
test
adc
and
notb
xor
push
lret
and
les
mov
bound
adc
inc
mov
aas
add
pop
adc
fwait
stc
out
test
sahf
and
sti
addr16
sub
aad
daa
stos
xchg
icebp
adc
mov
jle
ljmp
inc
jbe
in
dec
jmp
push
rorb
jne
mov
jmp
and
mov
pop
popa
inc
loopne
call
rol
push
test
jmp
push
xor
push
mov
and
push
mov
sub
icebp
adc
rclb
lret
rclb
in
cld
push
pop
sbb
cmpsl
pop
inc
dec
adc
mov
adc
hlt
test
ja
stos
lock
pop
aam
dec
scas
repnz
fwait
or
adc
pusha
pop
mov
psubsb
scas
push
add
insl
movsb
inc
shr
or
outsb
cmp
push
outsb
or
push
sub
daa
ret
je
call
pop
or
or
icebp
mov
mov
cs
mov
sbb
jmp
jne
and
sbb
stos
js
xor
or
adc
pop
and
cli
add
jle
lds
inc
pop
and
add
mov
lods
call
mov
loopne
rcrb
aam
jno
push
mov
or
xor
sbb
xchg
cmp
incl
das
test
xchg
mov
call
clc
inc
enter
movhps
je
push
mov
rol
insb
pushf
test
lock
imul
dec
out
test
pop
or
xor
xor
lea
dec
pop
lods
and
or
adc
sar
lods
xchg
pushf
les
stos
cmp
sub
cmp
pop
test
dec
mov
push
pop
lods
in
int3
scas
scas
mov
loope
or
inc
in
ror
add
repnz
add
cli
pop
shrl
icebp
test
shufps
adc
mov
loopne
sbb
stos
sti
sarb
pop
cmp
fucom
imulb
fwait
push
and
cld
lds
lock
fadd
fstpt
sarb
pop
je
dec
pop
inc
dec
adc
dec
flds
jnp
lret
and
jecxz
and
cmp
cld
adc
cld
sti
mov
es
inc
pop
mov
call
mov
cmp
data16
cwtl
mov
mov
aam
fisubrl
ss
lods
dec
and
fidivs
loopne
loope
inc
sahf
inc
mov
fwait
les
lods
lret
popf
or
ljmp
xor
pop
xor
or
mov
lods
mov
fdivs
outsl
fs
int3
aas
idivb
jb
loopne
jo
lret
jp
or
add
adc
adc
inc
repnz
mulb
cwtl
jae
push
loopne
ret
jmp
loop
jnp
add
das
push
sbb
pop
in
ror
dec
push
sbb
and
jb
or
cltd
mov
xchg
push
lret
jg
lcall
add
pop
cli
jbe
mov
pushf
xchg
adc
xor
mov
stos
sub
movsb
lods
mov
inc
fistps
addb
and
sub
pop
xchg
or
imul
fimuls
jge
fs
pop
data16
inc
jmp
mov
sbb
lret
add
cs
mov
mov
push
in
mov
lods
mov
insb
or
das
mov
push
repnz
push
stos
xor
jo
mov
addb
rorl
mov
cmp
mov
or
add
jns
sbb
addr16
les
xchg
arpl
dec
pop
gs
inc
pusha
push
jns
push
ret
stos
inc
cmpsb
or
mov
pushaw
mov
sub
xchg
std
loopne
pop
jl
test
in
dec
inc
sbb
sbb
aam
dec
push
sbb
pop
jae
or
ljmp
scas
lea
scas
xor
sbb
movl
popf
cwtl
sbb
jmp
xchg
xor
aas
push
pop
sbb
incl
pop
or
mov
sub
pop
bound
fiadds
subb
or
les
ret
adc
dec
in
shll
mov
mov
ljmp
gs
mov
mov
nop
adc
call
stos
cs
and
push
inc
lock
push
cmpl
stos
das
fimuls
incl
jge
mov
add
lea
mov
shlb
add
imul
inc
rcr
in
jnp
xor
movsl
stos
rclb
fs
pop
cmp
or
test
jp,pn
mulb
js
fnstenv
out
xchg
jg
lock
adc
push
or
adc
pop
lahf
and
mov
aad
mov
xchg
popf
test
hlt
adc
clc
push
jg
pop
dec
mov
add
dec
imul
bound
mov
dec
arpl
rol
dec
push
adc
mov
loopne
stc
pop
xlat
xorb
rcr
jp
mov
dec
mov
faddp
imul
ret
sarb
adc
inc
push
push
jg
sbb
insb
mov
and
mov
add
mov
aam
jnp
fwait
sbb
mov
xor
jnp
pop
leave
mov
sub
scas
and
lock
sbb
hlt
pop
xchg
test
sub
call
or
je
test
mov
lock
lock
or
incb
cli
pusha
fiaddl
push
or
mov
loopne
pop
test
dec
test
dec
mull
dec
jnp
subl
push
call
bound
aam
fistpl
cmpsb
add
xchg
adc
mov
fcoms
adcb
pop
mov
push
rcll
dec
and
test
cmp
mov
loop
sub
fs
push
mov
shlb
sbb
or
lret
cld
and
pop
fistps
fwait
imul
or
push
inc
mov
shlb
test
je
das
inc
outsl
dec
mov
xchg
lds
or
outsl
xor
or
jo
sbb
rcr
cmp
jmp
js
mov
jp
mov
and
inc
adc
data16
lea
or
loope
mov
ss
adc
nop
or
inc
mov
or
mov
push
int
cmp
idivl
xchg
xchg
call
cmpsb
cli
lds
pusha
ss
add
cmp
or
stos
inc
inc
std
repz
mov
jecxz
sbb
es
sbb
out
into
movsb
sub
in
jmp
fimuls
mov
fdivs
shl
xor
clc
cmpsl
or
rcl
jl
stos
add
inc
xchg
mov
inc
pop
and
mov
rol
sbb
clc
hlt
or
xor
cs
fnstsw
xor
inc
mov
jo
pushf
add
shll
add
call
ss
pop
inc
fdivs
add
pop
cmpb
inc
mov
cld
call
sub
lock
xchg
cwtl
cs
push
jp
fmul
xchg
shr
sub
pop
sub
or
fwait
sub
js
or
loope
call
sbb
loop
pop
push
movsb
or
fs
cmpsl
jl
xchg
call
add
mov
push
jl
cmp
pop
je
add
mov
imul
mov
jp
lock
cmpsl
mov
adc
adc
pushf
pop
inc
dec
es
stc
mov
es
lahf
pop
repnz
lahf
popa
dec
lds
mov
aam
rcrb
stos
pop
cli
ret
jo
xchg
jge
push
cmp
add
shl
mov
inc
add
pop
loopne
xchg
or
jecxz
cwtl
cmpsb
mov
jae
pop
aas
jo
loop
cmp
cmpsl
mov
es
jne
ss
rcr
into
inc
xchg
inc
fucom
add
adc
enter
or
imul
jo
xchg
cmpsb
push
mov
dec
xor
decl
xor
hlt
inc
dec
adc
lret
push
sub
add
mov
ds
repnz
bound
loopne
and
inc
lahf
sub
xor
hlt
inc
mov
sahf
movsl
add
sbb
cmp
inc
mov
int
repz
or
pop
xchg
icebp
dec
xchg
mov
inc
push
pop
clc
or
scas
mov
lds
std
ret
mov
jae
insl
outsb
mov
sbb
push
ret
xchg
jbe
adc
dec
adc
dec
aam
xor
xor
pop
dec
cmpsl
and
es
and
inc
outsl
int
sub
mov
movsb
andb
test
stc
push
xchg
fcom
in
push
test
adc
sub
mov
add
dec
icebp
inc
scas
subb
jl
inc
loopne
jmp
pop
mov
popa
inc
pop
ss
pop
pop
lock
movsb
jmp
cmp
stos
xor
hlt
stc
dec
rolb
mov
lcall
jp
das
ss
sbb
fcomps
in
ss
aam
cmc
mov
inc
and
push
and
enter
xorb
pop
add
fmulp
arpl
popa
inc
lret
push
jbe,pt
lcall
addr16
fwait
lods
push
pusha
pop
sbb
insb
in
dec
dec
or
add
movsl
filds
fildl
pop
pop
out
test
fisubrs
shlb
dec
clc
push
cmp
lds
pop
dec
and
jns
das
mov
leave
push
mov
mov
and
in
nop
in
aam
mov
xor
pop
xchg
push
movsl
inc
movsl
mov
lret
icebp
imul
fwait
addl
inc
jo
cmpsb
dec
ret
bound
push
insl
std
test
mov
outsb
loope
mov
sub
mov
mov
es
cmpb
sbb
rol
sti
fs
test
add
mov
mov
mov
popf
aad
repnz
arpl
shlb
xor
dec
call
xchg
sahf
cltd
je
addb
dec
out
lds
in
testb
cltd
adc
stc
loop
inc
cs
or
xchg
cmp
cmp
in
cmc
mov
and
adc
xchg
fnstcw
lret
sbb
test
or
mov
mov
dec
xchg
pop
xchg
jnp
inc
addr16
nop
add
or
stos
lret
movsl
xchg
scas
sahf
sub
outsl
pop
dec
lcall
fsubrs
adc
sti
fs
push
xchg
sbb
iret
sbb
rolb
mov
push
sub
lret
jmp
pop
rorb
shrb
ss
repz
dec
mov
cld
jmp
push
and
inc
in
xchg
adc
cwtl
push
test
daa
testb
sub
inc
cld
aam
mov
mov
mov
cmp
out
jmp
loop
lock
add
fwait
or
mov
lret
dec
or
in
lret
std
or
cmpsb
lock
mov
mov
test
dec
dec
xchg
lods
adc
pop
imul
and
lea
push
pop
mov
or
pusha
ss
movsl
sbb
add
mov
push
mov
sub
xor
mov
sub
jnp
xchg
inc
insl
test
pushf
mov
ret
and
mov
idiv
or
cwtl
sub
dec
adc
inc
adc
mov
data16
loope
or
lret
add
pop
xor
test
push
clc
xor
mov
mov
mov
loopne
vaddsubpd
cmpsl
jne
or
cmp
push
ja
mov
inc
fsubs
stos
mov
orl
xor
ret
ret
sbb
push
add
scas
pop
mov
daa
or
and
add
jge
insb
in
loope
adc
pop
jns
inc
ds
and
sahf
dec
mov
xchg
rorb
inc
rorb
jae
daa
mov
imul
nop
push
xchg
sarl
shll
jle
or
xchg
or
popf
sub
pop
ja
mov
mov
adc
adc
cmp
and
adcl
sub
pop
pusha
cli
rolb
adc
loop
into
test
or
inc
adc
mov
add
sub
add
dec
pop
xor
addb
sub
lds
fildl
xchg
jne
inc
adc
stc
loop
sti
std
jns
pop
loope
pusha
adcl
xchg
shrb
mov
add
mov
jno
lea
lea
data16
pusha
testb
dec
sbb
in
cld
jno
and
daa
movsl
add
rcrb
or
dec
cmc
mov
loope
xchg
mov
cltd
or
push
sub
add
inc
cmp
psubusb
cltd
lcall
fnstcw
popl
int
dec
sub
stos
call
push
jne
xchg
sbb
push
loope
pop
mov
sbb
cli
push
scas
scas
je
movb
dec
mov
aas
jno
in
ret
popa
xor
pusha
add
lret
dec
setns
xor
mov
call
adc
and
scas
jns
jnp
call
jmp
shlb
enter
setbe
mov
je
aas
stos
dec
sub
fcmovne
loope
add
hlt
xor
jns
imul
cs
pop
cli
cmp
adc
jg
mov
or
mov
cmp
stos
pop
add
mov
add
and
cs
adc
push
jp
sbb
cmpsl
test
popa
out
xchg
add
out
das
lods
nop
add
jo
fwait
cmp
loop
xor
xchg
in
inc
mov
dec
div
and
inc
decb
xor
movsb
add
cmp
sbb
dec
clc
js
inc
sbb
dec
xchg
mov
loopne
mov
in
jno
dec
pop
int3
jmp
push
push
pop
enter
xlat
lds
fdivs
xchg
imul
mov
scas
mov
add
negb
and
aad
es
mov
mov
shrb
pop
xchg
xor
push
or
xor
scas
std
int
inc
outsl
rcr
mov
ja
cmpsb
mov
xor
out
cmc
jne
adc
or
jl
cmpsl
adc
pop
pop
mov
cld
mov
add
xor
sub
inc
out
jmp
clc
mov
mov
stos
pop
daa
or
testl
adc
add
adcl
nop
adc
xor
and
lcall
cmp
mov
and
xchg
xchg
jno
push
sbb
scas
call
jns
inc
inc
cmpsl
and
xlat
and
inc
jbe
pop
or
and
push
cmp
dec
dec
lret
xor
sbb
daa
lods
sbb
lock
or
bound
aam
mov
jmp
sub
outsl
inc
pop
adc
repnz
mov
or
mov
cmp
mov
jns
roll
pop
jecxz
call
mov
cmpsl
mov
pop
fwait
sbb
dec
jg
pop
cli
or
aad
call
cwtl
cmpsb
sub
sbb
sbb
inc
dec
js
lods
jns
cmpsl
mov
sarb
push
pop
push
mov
push
dec
lcall
mov
in
popf
push
cli
jmp
sub
xchg
pusha
fcoms
test
fcmovnu
sbb
and
pop
sahf
popl
sub
insl
inc
or
outsb
insb
out
inc
inc
jne
shlb
sbb
ret
insl
pushf
dec
sub
movsl
loop
jle
icebp
sbb
scas
lock
repnz
imul
sub
push
loop
mov
mov
shr
fwait
test
into
cmc
std
pop
or
xchg
xor
sub
nop
mov
xorb
fwait
hlt
pop
loopne
lds
int3
mov
rcrb
loope
adc
xorb
pop
mov
daa
inc
mov
es
dec
xlat
repz
or
inc
pop
jo
mov
push
push
mov
es
or
cmp
and
pop
add
dec
xor
sub
cmc
xchg
scas
loope
dec
ret
cld
frstor
mov
xlat
pop
dec
inc
dec
push
fcompl
mov
push
fsubl
jbe,pt
rclb
ljmp
add
xor
stos
inc
pop
dec
xchg
stc
cmp
pop
xor
mov
jecxz
stos
pusha
cld
dec
or
jne
clc
pop
mov
orb
and
mov
jmp
rolb
sub
dec
cli
xchg
insb
or
sbb
repz
daa
hlt
lock
pushf
push
dec
dec
pop
sbb
stos
inc
aas
aad
mov
inc
sahf
rclb
aaa
xchg
pop
loop
sbb
jl
jl
and
fcmovnu
mov
ret
add
ret
js
jmp
ss
mov
push
pop
cld
nop
add
or
pop
mov
notb
les
cmpsl
andl
push
adc
in
mov
push
add
pop
dec
or
xchg
loopne
add
pop
pop
push
adcl
outsb
mov
mov
lds
ljmp
imul
add
add
xor
ja
jmp
pop
mov
in
sub
fs
xchg
adc
lea
push
loope
faddp
add
xor
xchg
decl
stos
cld
fwait
popf
cli
leave
iret
push
ss
inc
dec
cmp
andl
add
ret
pop
cmp
cmc
xorb
jo
sub
dec
lret
xchg
sbb
inc
je
cmc
add
sub
gs
push
inc
pop
push
inc
cmp
test
fnstcw
adc
cmp
xchg
out
push
ja
test
inc
pushf
inc
inc
div
cmp
movsl
mov
mov
sub
sbb
and
add
and
mov
jbe
pop
insl
ret
xchg
xchg
in
mov
jecxz
mov
add
jb
add
in
jbe
in
add
leave
cwtl
dec
mov
test
xchg
inc
outsl
xor
les
fstps
adc
aaa
movsl
jg
ret
xchg
clc
xchg
mov
add
cmpb
and
lret
pushf
rol
jne
fs
pop
out
and
mov
js
jns
scas
cmp
mov
jg
push
pop
fstpt
clc
sarb
outsb
mov
or
popa
dec
imul
pop
mov
sbb
loop
sarl
shlb
sub
leave
call
shlb
or
mov
ds
mov
or
inc
in
je
add
in
orb
mov
es
lea
adc
xchg
lea
hlt
push
xchg
leave
ret
aas
ret
add
sbb
mov
je
sbb
adc
pop
rclb
cmp
sahf
and
inc
add
push
or
fucomi
je
orl
pop
pop
notl
sbb
pop
jle
cli
repnz
or
push
xor
pop
pop
loop
push
mov
mov
pop
jle
and
addb
sub
pop
and
add
stc
dec
inc
sub
push
push
nop
sub
mov
pop
pushf
cmpsb
notb
je
jb
or
sub
jo
add
fdivrs
das
and
sbb
incl
shlb
mov
rcrb
hlt
mov
decl
das
pop
dec
popa
pusha
inc
into
lods
out
pop
loope
mov
push
std
in
mov
push
je
adc
fidivl
sahf
in
xchg
inc
mov
iret
push
mov
inc
inc
subl
adc
mov
add
jl
out
sti
and
les
int3
enter
roll
insb
es
rclb
rcrl
stos
pop
xchg
inc
or
pop
shll
dec
aas
ss
cli
and
stc
movsl
es
mov
mov
out
xlat
dec
mov
bound
das
es
aaa
dec
int
adc
adc
dec
sbb
cmp
xor
scas
je
test
test
notb
insb
push
dec
sbb
mov
cmp
jo
pop
mov
in
xor
jne
mov
icebp
jmp
int
and
fsubrs
fidivl
mov
testb
push
pop
loopne
mov
rcrl
push
test
gs
push
es
outsb
ret
inc
daa
sbb
lcall
mov
mov
mov
jns
icebp
pop
test
popa
movsl
or
pop
cmpsb
cmp
out
push
pmulhuw
imul
imul
rorl
xchg
pop
xorb
mov
sub
std
add
les
push
jge
pop
pop
dec
push
dec
fistps
inc
hlt
lock
sub
xor
sbb
popf
mov
loop
adc
das
sub
adc
mov
jmp
addr16
jns
sub
mov
jl
sub
sub
bound
xchg
and
fstpt
movsl
pop
fldenv
movsb
pop
xor
mov
out
adc
cs
push
fcomps
cmpl
mov
pop
in
mov
xor
adc
xor
loop
push
rorb
xchg
mov
or
cwtl
cmp
lea
in
cmpsl
fiaddl
fstpl
mov
and
pop
push
ret
dec
and
loopne
rclb
rcrl
add
insb
mov
inc
mov
aad
aaa
rcrl
pop
jnp
sub
lcall
addb
sbb
imul
xchg
loop
mov
dec
nop
sbb
cmp
imul
mov
lret
mov
je
mov
sub
loope
adc
loope
inc
sbb
popa
dec
outsb
clc
clc
aad
jnp
sbb
je
cli
push
mov
je
and
pop
lret
sub
add
les
jl
or
push
push
cmc
test
inc
sbb
cmpb
addl
fisubrl
loop
imulb
dec
shl
xchg
xchg
xchg
fiadds
das
js
dec
loopne
dec
gs
fmuls
fimull
std
lcall
popl
mov
out
test
xlat
jge
int
xchg
and
inc
fiaddl
pop
loopne
ljmp
std
push
adc
ljmp
xbegin
mov
daa
jbe
std
je
jae
push
ja
dec
dec
fdivs
mov
ret
xor
call
cli
rol
or
inc
fistps
or
test
xor
xchg
ret
dec
mov
push
sbb
inc
inc
outsb
insb
call
out
call
pop
pop
xor
adc
inc
bound
inc
cmp
cmc
push
lea
call
adc
int
sahf
pop
jmp
jae
cli
scas
js
inc
jns
adc
clc
ret
cmpb
pop
cmpsl
mov
dec
mov
in
fldt
insl
lods
mov
js
mov
inc
enter
sbb
xchg
popa
fs
shlb
popa
add
pusha
notl
pop
mov
nop
lods
js
xchg
sbb
dec
inc
sahf
fldl
jecxz
mov
push
mov
out
insl
jecxz
scas
loop
inc
loop
insb
adc
mov
rcrl
push
pop
aad
mov
adc
and
cli
loop
adcb
xlat
jb
aam
pop
lods
xchg
push
scas
or
xor
push
sbb
mov
je
fwait
bound
or
dec
movsl
cwtl
add
xor
xchg
mov
push
xlat
roll
sub
daa
mov
xor
movsl
jmp
in
jg
cli
or
push
push
pusha
clc
xchg
mov
xor
mov
sbbb
lret
lcall
push
xchg
sarb
mov
sub
cmpsl
jo
and
add
jno
notb
mov
mov
and
xor
push
lahf
mov
pop
ret
test
fdivs
cwtl
jle
mov
pusha
sub
out
mov
stos
xchg
in
pop
sbb
sbb
mov
scas
stos
adc
aas
jo
stos
jne
push
cld
mov
lea
shlb
jmp
rol
push
ficomps
or
clc
arpl
rorb
int3
pushf
sub
rcrl
fwait
rolb
and
in
sbb
or
xor
add
out
cmpsl
cmpsl
and
cmp
mov
dec
mov
rcrb
and
xor
mov
ja
fidivrl
fbstp
inc
pop
push
test
clc
mov
cmpsb
xor
mov
xlat
add
and
ja
push
and
xor
hlt
add
mov
cs
leave
cmp
jbe
icebp
andl
call
jmp
movsb
daa
jge
dec
rcrl
arpl
xchg
push
lock
test
cmc
js
sbb
lods
call
push
push
jno
mov
nop
sub
sahf
je
rcl
add
imul
loope
jbe
lods
scas
mov
ljmp
add
into
mov
sbb
movsl
test
add
pop
add
shl
sbb
push
or
cmpsb
add
sbb
add
test
or
das
fisubrs
xchg
lea
mov
dec
mov
shlb
aas
ljmp
jl
addb
scas
ret
dec
pop
mov
mov
pop
imul
jnp
loopne
clc
test
aam
test
push
lcall
push
shll
and
or
cmc
rcr
sbb
roll
ja
sbb
jecxz
mov
clc
fistpl
cmp
mull
pop
pop
dec
addr16
shll
mov
pop
clc
jnp
pop
scas
and
jbe
movsl
xlat
xor
xorb
in
mov
into
mov
push
mov
pusha
outsl
adc
cmp
xlat
lds
inc
bound
mov
cld
stc
lahf
shrb
mov
sahf
stos
add
icebp
and
stc
incb
sti
mov
push
xchg
ficoms
in
cmpb
enter
dec
leave
gs
mov
or
int
mov
movsl
or
call
dec
xor
inc
cmpsb
add
add
aam
push
fcomip
or
adc
lock
movsb
adc
xchg
aas
dec
sbbl
popf
clc
scas
nop
cmp
sahf
push
imul
imul
mov
adc
add
iret
push
mov
insb
loopne
into
je
mov
bound
mov
pushf
clc
dec
cmp
and
jp
lods
add
jmp
lahf
and
or
incl
inc
push
pop
aas
or
inc
cmp
outsl
stos
sub
popa
add
push
add
sar
and
movsl
mov
mov
xlat
xchg
js
adc
stc
xor
cmp
lock
pop
add
push
push
and
sub
jg
test
les
enter
test
adc
adc
fidivs
adc
cmp
jnp
mov
mov
sbb
stos
imul
in
pop
add
and
fnstenv
test
iret
xor
mov
sub
adc
fsubr
mov
nop
icebp
jnp
cmp
pop
cltd
pop
loopne
orl
or
icebp
popa
jle
inc
ret
pop
mov
stos
test
andl
mov
and
xor
cmpsb
sub
sarb
clc
dec
xchg
xor
sbb
push
sbb
std
mov
push
push
xor
lods
sbb
xor
fucomi
sbb
test
mov
mov
mov
test
int
jle
inc
mov
outsb
popf
pop
or
movsl
fimuls
dec
pop
hlt
andb
cmp
dec
fsubr
sub
mov
xchg
dec
xor
ffreep
int
stos
lds
popa
or
pop
stos
movsb
movl
data16
jp
jb
inc
push
mov
sub
add
pop
mov
sbbl
je
adc
mov
jae
ja
fidivrs
shlb
lods
jle
out
dec
test
sbb
lgdtl
xchg
mov
test
mov
les
test
repnz
cmp
xchg
pop
push
jge
jle
pusha
adc
xchg
mov
rorb
mov
bound
pop
stos
cltd
loop
sahf
and
mov
and
fwait
call
cmp
js
jb
rep
push
mov
dec
lods
dec
sbb
dec
shl
push
mov
or
jbe
pop
js
and
xchg
into
je
mov
shrl
cmp
and
iret
clc
es
push
push
pop
mov
cmp
in
adc
pop
arpl
mov
cmp
cli
clc
clc
lret
fisttps
cwtl
filds
stos
fmul
les
mov
sbb
pop
cld
push
sbb
add
cmp
mov
xor
sahf
jl
cmp
into
ds
xchg
mov
sub
mov
or
mov
xlat
idivb
inc
les
fmul
mov
add
push
and
mov
aam
pop
xlat
push
movsl
adc
or
sbb
enter
fcoml
ss
and
mov
test
lock
xor
xchg
mov
dec
pop
mov
adc
imul
inc
insl
leave
push
push
test
lock
js
and
xor
mov
push
or
rclb
cmp
insl
pop
dec
push
pop
mov
out
clc
inc
jecxz,pt
clc
loop
or
ret
mov
test
inc
lret
push
mov
sub
or
ljmp
jmp
int3
out
imul
rcll
sub
in
bound
clc
lds
jbe
fisttpll
dec
iret
adc
les
or
loop
outsl
push
ss
or
jmp
negl
ss
push
mov
or
enter
sub
nop
ljmp
outsl
ljmp
ja
ljmp
adc
push
sub
push
call
rcr
and
cld
inc
cmp
jb
popf
mov
or
ljmp
jmp
daa
outsb
sbb
xchg
xchg
dec
fmulp
cmc
lcall
repz
or
outsb
mov
xor
sbb
test
bnd
add
aad
shll
jo
lcall
call
outsb
call
xchg
test
xchg
int3
cwtl
jno
lds
jecxz
sub
sbb
mov
das
aad
dec
sbb
imul
and
adc
xor
aad
leave
mov
adc
orl
jae
xchg
cmp
jns
push
fmuls
movsb
clc
jne
inc
xchg
aas
icebp
and
mul
mov
or
pop
paddsw
pusha
imul
loopne
jle
push
jmp
push
or
sub
sub
mov
or
lret
xchg
jge
outsl
xchg
insb
scas
sub
push
js
cmpsl
pop
movsb
lock
aaa
add
lret
xor
in
iret
push
jmp
inc
xor
stos
add
jmp
test
adc
mov
jno
push
and
sbb
insb
inc
dec
mov
push
test
jg
popa
pop
adc
loopne
xor
xchg
dec
out
mov
pop
add
ret
pop
mov
loopne
add
out
out
test
sub
or
mov
dec
insl
lock
push
add
mov
lea
lods
mov
cmpsb
mov
jo
push
adcb
sbb
subb
mov
fildl
outsb
xchg
pop
ss
loopne
jl
or
sub
ljmp
mov
xchg
shrb
sbb
jle
adc
lods
sub
movsb
mov
aaa
mov
into
shl
aaa
std
mov
sarb
jbe
pop
loope
mov
hlt
pop
test
push
sub
adc
sti
icebp
add
jp
pop
inc
adc
jno
les
fs
inc
mov
xor
mov
push
jle
movsl
add
mov
test
dec
cmp
and
dec
dec
pop
decb
in
mov
out
mov
cmp
jg
shl
inc
stos
sbb
sub
je
addb
sbb
ud0
or
and
stos
call
stos
sbb
out
data16
pop
clc
mov
mov
cmpsb
inc
or
mov
jo
mov
es
ret
adc
mov
pop
mov
clc
enter
add
xchg
sarb
dec
popa
or
push
jl
mov
outsl
dec
jno
ret
jp
sbb
jecxz
sbb
cmp
xchg
push
push
or
les
add
xchg
in
aam
xchg
mov
lods
out
jbe
cmp
jo
shlb
dec
sarb
std
pop
loopne
inc
or
push
rcrl
pop
js
test
adc
test
loop
mov
push
and
mov
stc
mov
mov
xor
push
mov
pop
cld
xchg
dec
mov
push
call
icebp
js
mov
sbb
cmp
xorl
lret
or
cvtps2pi
test
jmp
test
and
std
pop
fists
outsb
out
inc
insb
jl
push
cmp
into
jae
push
inc
fidivrl
jmp
pop
and
ja,pt
rcl
mov
fstpl
sahf
fistl
cmpl
add
xchg
jmp
cmp
xchg
mov
das
push
fldcw
rcrb
inc
xor
mov
jecxz
jp
test
add
les
pop
lcall
mov
test
loop
mov
pop
mov
insl
sub
into
jmp
mov
pop
andb
ja
jge
cmp
movsb
dec
je
rclb
cmpsb
movsl
pop
dec
scas
mov
test
shlb
dec
pop
push
std
mov
fiadds
mov
es
sbb
pop
pop
or
sbb
pop
and
adc
mov
enter
xchg
lock
inc
jl
testb
test
inc
loop
cmc
testb
push
xor
lar
in
push
cmp
scas
ret
test
inc
int3
add
rcrb
xchg
add
icebp
sub
imul
sbb
fidivrl
add
test
add
test
insb
call
shll
inc
lds
add
rcrb
outsl
pop
pushf
xor
hlt
call
jp
js
enter
fdiv
mov
lret
or
and
pop
jle
lret
sti
ja
insl
cmp
sbb
xchg
das
or
nop
fidivrl
pop
push
push
ret
test
push
inc
pop
js
push
popa
aas
xchg
add
ret
mov
fldenv
jle
xchg
dec
sti
aas
nop
test
pop
arpl
mov
add
jecxz
pusha
popa
nop
in
pop
shrb
test
ss
test
icebp
in
sub
xor
in
loop
insb
cwtl
mov
pop
test
mov
stos
and
cmpsl
or
out
movsl
out
jle
mov
xchg
sbb
mov
sbb
fistpl
xchg
dec
enter
and
aam
mov
les
inc
fmuls
mov
or
adc
mov
jne
add
fs
xchg
andb
jle
mov
sub
movsl
out
les
sbb
dec
xor
out
pop
loop
or
test
rorl
cs
stos
mov
mov
decb
sar
icebp
add
dec
sub
fildll
sbb
popa
cmp
inc
adc
aas
orl
mov
pusha
icebp
inc
add
ds
mov
orb
push
fisttps
sbb
scas
data16
jge
inc
add
stos
jnp
test
sbb
iret
addr16
jno
ja
loopne
mov
jl
sbb
pop
cld
mov
jg
mov
testb
or
push
cli
and
jl
and
inc
push
xor
mov
aaa
pop
push
mov
or
mov
jno
aad
mov
xor
mov
mov
in
aad
imul
test
cmp
cmpsb
xlat
push
cwtl
dec
ss
xor
outsb
cmp
push
xchg
scas
aam
push
or
in
xchg
add
movsb
xor
xor
sbb
and
stos
sub
mov
inc
fisttps
dec
mov
push
xchg
ret
jp
repz
cmp
push
mov
push
ljmp
add
pop
loopne
sub
sub
or
add
and
in
mov
push
mov
push
in
dec
xor
fdivr
clc
pop
in
pop
add
orb
cmp
jp
fs
int
adc
ljmp
push
mov
into
inc
mov
jp
mov
mov
dec
push
rcrb
push
cmpsl
cmp
xchg
es
insl
mov
mov
outsb
shlb
inc
mov
fs
fwait
xchg
inc
dec
lcall
call
lods
jl
arpl
in
pop
mov
addb
or
lock
lods
xor
cmp
je
pop
and
dec
jl
stc
inc
out
jle
mov
and
leave
or
inc
imul
into
xchg
mov
fwait
bound
inc
push
in
adc
xlat
inc
push
sub
mov
sbb
mov
ret
push
clc
push
cmpsb
mov
cs
and
mov
cs
movsl
gs
dec
imulb
out
lock
lods
in
xchg
adc
je
shlb
ds
int3
fdivr
add
adcl
stos
fistl
jo
bound
or
stos
dec
test
cmp
inc
mov
mov
cmp
sbb
jb
xor
out
subb
mov
lcall
cmp
sbb
inc
push
and
xchg
call
cmpsb
call
andb
inc
mov
sbb
das
or
sarb
arpl
sub
pop
mov
outsb
adc
fs
decl
hlt
ret
fdivs
faddl
jno
jne
std
mov
add
cmpsb
dec
add
or
scas
popf
cmp
inc
cmp
clc
pop
and
sbb
js
cs
mov
js
scas
test
mov
mov
aaa
lock
sbb
loope
mov
ds
int3
add
mov
insb
lcall
rorl
test
or
outsb
or
push
pop
stos
xchg
std
lods
shrl
mov
jg
lret
mov
push
out
les
fcomps
push
movsb
jb
add
lret
sahf
sub
and
mov
pusha
stos
push
xchg
and
pop
test
add
sbb
add
mov
std
dec
pop
pushf
push
inc
fsub
addb
bound
sub
push
xor
or
push
mov
popl
pop
aam
pop
loop
inc
dec
sub
xor
icebp
dec
mov
scas
insb
inc
leave
nop
adc
xchg
sbb
inc
stos
or
insl
clc
bound
jbe
sbb
jb
out
cmp
shlb
std
int
das
push
add
xchg
jle
imul
jle
popf
enter
mov
decb
jg
pop
je
js
imul
inc
mov
xchg
sub
xor
jb
jle
popa
pop
mov
scas
mov
mov
pushf
or
pop
les
cmp
aaa
jmp
sub
push
ficoms
fwait
mov
or
xor
test
pusha
in
jbe
dec
out
daa
incl
mov
mov
add
mov
aaa
std
das
push
mov
fcom
cltd
push
mov
pop
insb
mov
xchg
sub
jb
add
loope
sbb
mov
fidivl
dec
dec
insb
inc
dec
dec
mov
insl
sarl
mov
out
scas
fidivrs
add
cmovge
add
test
mov
jb
orb
call
out
inc
inc
andl
push
mov
lcall
stos
in
or
jge
lahf
out
adc
jne
mov
push
dec
aaa
adc
jno
add
inc
sti
add
lock
add
add
ret
push
inc
shll
xchg
loope
js
push
cmp
minps
mov
or
push
xchg
jo
cli
pop
orl
mov
dec
out
cmp
lcall
call
push
loop
pusha
push
xor
cmpsb
dec
dec
ja
gs
xchg
loopne
sub
xchg
add
scas
fadds
sarb
or
add
ds
rclb
loope
sub
enter
xor
fcoms
add
add
and
nop
dec
mov
fdivrl
add
adc
lret
or
outsb
add
push
xor
shll
xchg
sahf
mov
fdivp
mov
xor
scas
div
lds
cmp
xor
xlat
cmpb
add
jae
mov
ret
icebp
daa
mov
sbb
outsb
dec
or
les
mov
sub
add
movsl
adc
movntps
cmp
mov
bound
xchg
add
stos
cmp
ds
aas
and
dec
dec
lods
ja
mov
xor
mov
push
ret
mov
imul
dec
cmp
popf
jp
xor
loopne
data16
add
jae
jno
mov
add
or
mov
movsb
leave
cmpb
ss
cmc
push
repnz
pop
in
xchg
adc
push
sbb
xchg
shrb
pop
push
dec
addr16
loopne
addr16
rcr
xlat
decl
inc
xchg
fwait
out
dec
imul
add
mov
jmp
mov
jno
xor
cltd
lods
mov
lahf
adc
jb
inc
loop
clc
adc
test
int3
pop
push
dec
jecxz
lcall
adc
nop
rcrb
pop
addb
jae
xchg
loopne
xlat
out
or
pop
jne
fs
xor
out
jb
into
ret
xchg
dec
or
xor
xor
ret
push
loopne
add
sbb
dec
fldl
push
mov
lret
jl
pause
js
int
nop
cli
aam
fistpll
bound
add
pop
adc
or
inc
test
into
sbb
mov
inc
mov
call
movb
shll
in
inc
movsl
or
sbb
mov
sub
push
mov
xor
cwtl
jae
ficomps
push
decb
xchg
fimuls
lret
mov
xchg
clc
jo
lcall
mov
out
lock
loope
popa
test
iret
sbb
lea
shrl
aas
dec
lods
dec
loopne
cmp
mov
adc
mov
movsb
inc
ret
andl
cmp
push
fiadds
xor
shl
sub
and
push
push
outsb
and
add
jnp
push
mov
push
adc
push
loope
clc
push
xchg
push
test
ds
test
adc
rcrl
add
adc
cltd
cmp
popf
aas
mov
pop
xchg
bound
ret
popa
sbb
shrb
inc
cmp
fistl
mov
or
lods
lods
and
cli
mov
stc
dec
js
out
and
clc
fists
and
lods
xlat
loop
mov
das
mov
cwtl
adc
lock
scas
ds
add
add
shlb
push
adc
nop
pop
push
je
mov
pop
inc
jl
xchg
and
in
or
leave
inc
jecxz
lds
mov
xlat
leave
cmp
xchg
das
pop
in
imul
push
out
nop
je
inc
sbb
roll
push
mov
xor
sbb
adc
push
sub
push
mov
mov
push
roll
dec
push
dec
outsl
jo
push
xor
in
lods
jp
aam
cwtl
sbb
sub
lods
sub
fs
mov
mov
xchg
rclb
les
xchg
or
mov
push
pop
lods
sbbl
imul
dec
outsb
aam
rol
or
mov
cli
fwait
subl
data16
aam
pop
xchg
add
fs
add
inc
shr
xor
jg
pop
jp
aam
insl
orb
pushf
mov
sub
inc
rolb
icebp
out
push
mov
xchg
cmp
repz
mov
loopne
sub
test
gs
loopne
or
cmp
loopne
icebp
shlb
cmp
push
push
enter
dec
pop
movsb
mov
iret
mov
cmp
subb
add
jae
xchg
int3
adc
and
sub
inc
mov
dec
subl
xchg
ds
insl
mov
adc
es
stc
orl
sbb
stos
and
roll
and
ret
pop
mov
xchg
push
loopne
fmuls
es
mov
and
inc
sti
addr16
mov
or
fcomip
jle
outsb
mov
push
mov
xchg
jp
enter
leave
lods
rclb
enter
sbb
push
rolb
dec
stos
mov
sbb
lds
sbb
je
pop
cli
shrl
push
or
test
pop
arpl
lret
insl
mov
movsl
mov
xlat
mov
das
mov
dec
mov
xchg
arpl
pop
notl
xor
std
lahf
jecxz
add
jp
add
mov
sbb
test
data16
psllq
or
add
inc
push
jg
mov
scas
shrl
jns
cmp
adc
or
cmpb
repnz
leave
mov
add
xchg
mov
jmp
sahf
push
ljmp
lock
cmp
dec
call
xchg
cmp
rorb
cmp
mov
mov
sti
rolb
icebp
imul
push
sbb
addr16
mov
shrb
and
dec
dec
loopne
xor
xchg
pop
cs
mov
ficoml
cmp
pushl
test
outsb
aaa
inc
mov
push
adc
mov
push
pop
mov
movsl
mov
sbb
imul
xorb
testl
push
cmp
aas
int
cmpsl
loope
sbb
test
mov
add
cmp
iret
mov
jno
pop
xor
clc
inc
sub
and
orb
test
movsl
add
fisubrl
push
sbb
adc
xchg
mov
dec
or
sbb
or
call
loope
and
jae
dec
push
addr16
icebp
adc
cmpl
sbb
scas
gs
imul
or
pop
std
cmp
pop
or
leave
rcll
push
and
inc
sbb
sbb
imul
xor
sar
pop
scas
adc
sbb
mov
mov
jecxz
pop
les
lods
mov
push
ss
pop
movsb
loop
mov
cltd
cmp
jl
iret
into
cmp
xchg
sti
ror
pop
js
insb
mov
fldenv
insb
inc
push
lahf
jns
pop
push
sbb
mov
cwtl
imul
cmpsb
popa
das
loope
imul
or
inc
test
mov
das
lea
les
data16
jns
push
mov
mov
int
clc
hlt
or
inc
rcll
imul
push
aas
clc
push
push
xchg
mov
xchg
inc
hlt
call
xor
ficompl
pop
iret
nop
lea
ret
scas
jne
mov
cwtl
dec
call
mov
inc
movsl
jecxz
mov
jl
mov
rorb
icebp
sbb
xorl
push
popf
xor
cmp
mov
imul
add
sbb
push
outsl
jae
pop
movl
xchg
add
jecxz
inc
inc
fwait
rolb
fdivrs
pop
test
scas
or
cld
sub
cmpsb
and
inc
cmp
dec
push
jo
fsubs
rcrl
mov
jg
xchg
inc
pop
lea
xchg
data16
sub
cld
sub
clc
mov
push
push
push
ss
imul
loop
fidivl
mov
test
sub
xchg
inc
jnp
add
rcl
mov
cltd
shr
lods
aas
sti
cmpsb
ret
xchg
jmp
adc
je
inc
sbb
pop
adc
mov
hlt
aam
cmp
rcrl
or
lcallw
or
inc
cmp
jecxz
insb
xchg
ljmp
inc
push
scas
sbb
jp
pop
sar
fwait
jle
cmp
or
mov
lret
jp
vprotw
cmpsb
sahf
mov
xchg
rorl
xlat
fwait
and
push
loop
cmp
jmp
shl
out
push
loope
inc
add
popa
addb
or
aad
xchg
or
xchg
outsb
push
aas
jl
dec
push
and
outsb
lea
pop
mov
xorl
insb
xor
pop
jle
mov
jp
or
je
mov
xchg
or
stc
aad
iret
xchg
fidivl
add
adc
daa
stc
xchg
loope
jmp
and
sub
lea
inc
fwait
xchg
adc
hlt
addr16
rclb
add
dec
inc
and
ficomps
popa
shr
mov
jmp
and
scas
pop
loope
sbb
movsl
or
adc
sbb
fwait
and
mov
jp
test
mov
add
pop
es
lds
and
dec
cmp
je
push
outsl
jl
es
fs
xchg
insb
jb
lods
lock
sbb
dec
test
out
xor
adcl
push
sub
stc
inc
xchg
aaa
movb
hlt
fsubr
testl
int3
test
fsubp
stc
xlat
sti
xchg
imul
pop
push
dec
aad
inc
add
mov
xor
push
add
cmc
fmuls
push
inc
scas
xor
mov
and
cmp
or
adc
adc
ja
and
dec
adc
adc
push
sbb
xor
shll
popf
push
js
out
xor
pop
push
stos
das
call
jb
push
and
insl
cmc
ret
sahf
fisttpll
pmullw
into
mov
xor
cmc
mov
inc
add
xlat
sbbl
cmp
in
out
adc
in
pop
faddl
or
or
fnstcw
aaa
and
fbstp
xor
and
mov
fisttpll
jne
ret
mov
nop
xchg
cmp
and
es
call
mov
mov
loope
xor
xchg
add
out
adc
pop
add
fidivl
or
ds
mov
std
lcall
lock
aas
and
mov
jecxz
mov
addr16
pop
and
addb
jo
or
cmp
mov
sbb
mov
int3
popa
push
cmc
test
ljmp
inc
inc
pop
mov
or
cli
lahf
ja
aaa
rsqrtps
lahf
shrb
or
rcll
stos
icebp
mov
sub
push
mov
clc
pop
rclb
stos
sbb
test
and
aas
pop
push
jle
sub
in
pop
or
sbb
add
fbstp
lds
pushl
mov
hlt
mov
stos
inc
shlb
pusha
push
jle
cmp
std
stos
jge
inc
pop
mov
push
mov
mov
test
pop
out
fbstp
imulb
outsb
inc
push
stc
xor
and
mov
stc
or
repnz
adc
jg
aam
int
mov
into
js
mov
sub
addr16
out
fdivrl
mov
add
popa
cld
mov
xor
push
sbb
stos
sbb
jge
and
ds
test
fcomps
subb
movsb
scas
mov
add
jge
jecxz
sbb
add
pop
pop
and
cld
push
jg
mov
jnp
std
in
push
adc
add
xor
shrl
lods
pop
add
or
clc
fidivl
popa
nop
mov
pushf
mov
sub
test
pop
dec
inc
and
cld
add
cmp
lcall
mov
in
inc
nop
out
push
or
rorl
push
sub
inc
subb
std
andb
dec
sub
js
add
mov
or
add
sbb
and
arpl
sub
iret
push
jecxz
test
push
mov
add
adc
mov
cld
lods
cmpb
jns
sub
mov
cmpsl
decl
jnp
and
or
jbe
das
and
scas
in
or
pop
mov
cs
inc
loopne
test
add
iret
mov
sbb
inc
add
test
pop
bound
notl
inc
test
jae
rorb
fbstp
sub
sbb
sub
adc
fsubrl
mov
testb
test
mov
sbb
subl
hlt
pop
pop
pusha
sub
mov
sti
test
inc
and
idivb
and
jo
pop
lcall
push
sti
jle
adc
sti
das
enter
outsl
push
or
test
insb
imul
in
testb
sub
out
mov
test
cli
mov
cmp
notl
jo
out
pop
sub
cmp
xchg
mov
enter
scas
lea
mov
pop
mov
mov
sub
push
add
pop
loop
xchg
decl
pop
push
stos
iret
mov
out
ret
push
add
xorb
pop
imulb
rorb
bound
in
fsubrs
or
cmpsb
sub
addb
jp
nop
cmp
addl
aam
push
xor
mov
call
mov
mov
fwait
cmpsb
add
jp
addr16
insb
add
xor
aaa
divl
mov
push
decl
test
inc
mov
scas
cltd
cmpl
insb
push
mov
xor
push
add
cmpsl
aas
movsb
cmp
mov
lods
sbb
sbb
adc
xchg
leave
ljmp
cmpsb
mov
mov
xchg
inc
add
inc
inc
push
sub
inc
jle
push
aas
lock
and
pop
push
je
xchg
cs
fs
mov
data16
pmulhw
js
iret
icebp
cmpsb
sbb
sarl
cld
fbstp
jo
out
dec
xchg
pop
or
and
shrb
ljmp
mov
xchg
mov
sbb
enter
std
inc
pushf
js
out
mov
ds
or
ja
mov
jne
adc
mov
lods
out
dec
cmp
fiadds
lahf
cli
and
xchg
pop
dec
mov
inc
sti
test
xchg
test
ds
sub
cmp
push
out
shll
sbb
xor
xorl
call
leave
js
addb
xchg
lods
lcall
or
ja
leave
movsl
fsubl
xchg
jg
in
xor
insb
cli
xchg
xor
lds
mov
jge
cli
rcrb
mov
enter
push
mov
pusha
sarl
mov
add
call
push
cwtl
bound
fsubl
pop
pop
add
inc
sub
xchg
adc
cmc
mov
push
pop
push
cld
lar
sbb
in
stos
shrl
sub
sub
movd
xor
aam
adc
jle
sbb
jmp
cmp
js
dec
dec
rclb
cmpsb
or
cmovb
xchg
cmpb
pop
andl
sub
jb
adcl
out
inc
push
xchg
xor
and
and
push
dec
shll
ror
aam
xor
insl
in
shlb
or
gs
push
mov
fcomps
test
lock
dec
lcall
xor
outsl
movsb
popa
rcrb
mov
inc
daa
icebp
dec
insb
dec
push
pop
pop
sub
gs
ss
pop
and
subb
mov
aam
repnz
pop
xchg
push
int3
les
sub
in
add
ljmp
sub
je
jbe
test
add
inc
outsl
mov
ret
fists
shll
mov
dec
lods
out
loopne
fcom
js
pop
mov
out
fwait
mov
mov
or
sahf
sbb
mov
lock
adc
or
movsb
fldl
hlt
mov
push
cld
mov
jno
inc
sub
push
outsl
aaa
pop
lods
sub
sub
loope
push
and
or
testb
inc
cli
add
testb
mov
loop
mov
insl
push
pop
mov
jg
inc
add
bnd
js
pop
aad
push
test
dec
pusha
dec
mov
mov
insb
lods
push
jae
outsl
es
adc
fadd
pop
jge
shl
or
cmpsb
push
arpl
add
xchg
repz
sbb
outsl
cmc
xor
movsb
mov
ljmp
dec
clc
or
sub
jbe
mov
xchg
dec
mov
movsl
cmp
pop
daa
dec
xor
sub
test
dec
pop
movaps
sbb
popf
jg
push
jl
and
push
mov
sub
das
adc
rorl
arpl
fidivs
push
adc
mov
xchg
mov
cmpsl
sub
sub
pop
jae
pop
jno
adc
pop
xor
sub
xor
aad
out
sbb
sbb
sub
mov
xchg
sbb
inc
sbb
in
and
cmpl
adc
or
pop
and
dec
fldl
mov
jnp
push
es
sub
sbb
sbb
mov
into
mov
scas
cli
xchg
push
fs
sub
mov
xchg
sbb
dec
std
mov
std
popf
movsb
mov
xchg
loop
cli
orb
imul
pop
mov
dec
mov
sub
push
jl
ret
insl
imul
sub
sbb
xor
es
cmp
add
mov
xchg
mov
dec
packsswb
cwtl
pop
cld
inc
mov
xchg
clc
push
and
int
cmpl
popf
pop
add
push
xchg
fsub
mov
pop
pop
lods
in
insb
add
pop
dec
fmull
ljmp
js
dec
inc
shll
inc
sbb
cmp
add
loop
in
dec
mov
ja
je
jb
cmp
xchg
adc
pop
aaa
clc
orb
testb
sbb
and
sub
subl
flds
or
mov
sbb
shl
out
jbe
jb
pop
or
adc
fstpl
sbb
mov
loop
inc
sub
inc
sarl
inc
fsubr
das
rolb
das
dec
sub
jbe
scas
jnp
xor
dec
push
adc
add
adc
insb
jg
pop
cmp
test
or
mov
cmp
mov
jle
push
push
dec
cli
lock
rclb
int3
ss
mov
mov
xor
add
jmp
mov
fwait
out
call
jl
mov
add
ret
movsb
stc
iret
popa
sub
cmp
stos
popa
jnp
jmp
cmp
je
stos
das
sti
inc
das
fdivrs
xor
push
cmc
or
shrb
sbb
loopne
loop
out
movsb
sub
xor
jb
cmpsl
cmpsb
icebp
je
mov
loope
dec
and
ss
dec
sarl
shlb
push
xchg
sbb
xchg
add
imul
sub
mov
in
adc
and
cmpsl
testb
int3
cmp
shrl
jl
std
pushf
dec
inc
int3
mov
ror
stos
dec
movsb
leave
jle
lahf
mov
cmp
push
mov
pushf
jno
jmp
enter
hlt
inc
shlb
movsb
cmp
loopne
arpl
and
mov
cmp
and
inc
test
mov
mov
inc
and
lods
inc
dec
cmp
or
mov
loopne
mov
into
sub
mov
mov
mov
xchg
mov
or
xchg
iret
xor
movsl
ds
push
sub
inc
mov
or
mov
pop
push
mov
test
loop
arpl
data16
adc
pop
dec
aas
cmp
jmp
inc
pusha
cltd
add
fdivs
ficompl
enter
loopne
push
xor
pop
push
hlt
mov
cmp
mov
push
pop
sti
push
xlat
pop
or
xor
mov
pop
nop
push
sub
mov
add
pushf
aam
adc
push
adc
and
jbe
adc
add
xchg
xchg
ret
fdivrl
push
outsl
sahf
fwait
cmovo
push
mov
lods
sub
sub
lcall
or
mov
repnz
popf
subl
lret
xchg
inc
nop
icebp
sub
inc
cwtl
xchg
pop
mov
nop
sahf
fcomps
clc
xchg
test
add
inc
pop
adc
sbb
addr16
mov
inc
int
lods
sub
and
sahf
test
xchg
jae
popa
cwtl
sbb
and
data16
shll
cmpsl
outsb
sbb
clts
data16
test
mov
xchg
je
or
and
adc
xchg
push
inc
add
inc
sbb
insb
lds
mov
loop
adc
mov
fstpl
ds
call
mov
push
sub
scas
jne
lock
xchg
lods
outsl
mov
pop
sub
push
and
out
push
jp
adc
mov
aas
xchg
cld
call
push
ror
lcall
pop
cmp
addl
loope
pusha
loope
outsb
dec
push
cmpl
cwtl
es
in
testl
pop
push
add
std
or
inc
pop
xor
dec
jge
int3
mov
fisttpll
stos
jp
push
test
int3
or
mov
fisttps
cwtl
pop
es
jg
push
mov
lods
test
es
out
dec
sub
js
js
jecxz
add
out
fwait
and
xchg
push
insl
cli
mov
pop
fnclex
cld
sbb
adc
loopne
pop
int3
cmp
xchg
cli
lahf
sbb
adc
jmp
dec
jmp
pop
cld
dec
cmp
ds
fstl
push
mov
sbb
inc
or
add
jp
cli
rol
and
inc
adc
sbb
inc
es
subb
xor
xor
pop
push
icebp
loop
shll
pusha
push
or
fcmovb
adc
ret
das
ds
mov
add
gs
test
sahf
inc
sbb
xchg
xchg
out
add
mov
icebp
xor
sbb
mov
jb
out
stos
jno
adcb
sbbl
push
aam
loop
add
inc
and
ret
jg
notl
mov
or
xorl
mov
sbb
cmp
add
daa
inc
push
ljmp
stos
or
enter
pushf
push
addps
ss
inc
sbb
dec
mov
xchg
rorb
inc
cmp
cli
sbb
loopne
cmp
gs
jg
in
jg
andl
popf
popf
ss
dec
ljmp
test
movsb
in
aam
lea
sbb
jno
cmp
fildl
pop
adc
js
mov
rclb
jge
cld
sbb
or
cli
mov
push
cmpsb
cmp
in
movsl
push
arpl
cs
nop
sbb
ss
outsl
sbb
mov
mov
adc
sti
mov
push
fcompl
ret
push
cltd
cli
enter
pop
fistpll
jno
cwtl
push
leave
push
pxor
ja
jo
std
xor
outsb
or
idivb
mov
xor
out
push
ret
lret
scas
jo
add
xor
mov
insl
icebp
sbb
ss
jno
mov
mov
xchg
or
test
mov
lcall
cmp
sbb
fcoms
in
adc
adc
clc
cld
mov
sub
cmpsb
icebp
cmpsb
xor
inc
daa
inc
rolb
or
mov
jecxz
loopne
test
add
lahf
sub
decl
and
mov
mov
adc
xchg
dec
and
sbb
test
pop
push
ret
push
ss
insb
dec
pop
adc
pop
rorl
cld
sbb
test
scas
inc
cmpsl
pusha
xchg
in
add
push
or
mov
and
rclb
push
lcall
into
bound
enter
mov
xchg
add
lock
daa
push
loopne
lea
fwait
loope
xor
clc
inc
das
outsl
aad
shll
sbb
xor
dec
xchg
push
les
or
mov
test
repnz
mov
mov
push
pop
fsubrl
int
mov
jbe
int
mov
mov
leave
cmpsl
stos
clc
pushf
add
cld
aas
xor
arpl
and
or
mov
or
lock
sbb
out
push
mov
mov
and
inc
out
xchg
sbb
rorb
out
cld
jle
stos
or
push
scas
push
cs
cltd
push
sub
sub
shlb
add
addr16
add
inc
or
xor
or
sub
mov
dec
mov
sbb
mov
jo
sub
add
xor
pop
icebp
dec
orl
cmpsl
data16
jbe
ljmp
ret
mov
fmuls
movsl
je
pop
pop
dec
jb
in
pop
jmp
insb
jecxz
outsl
lcall
push
ret
out
adc
in
lea
loope
insb
pop
cli
cmpsl
subl
out
sub
imul
push
or
movsb
inc
adc
das
lods
xchg
cmp
or
out
outsl
andb
jo
xor
mov
jge
scas
insb
loop
mov
stos
mov
mov
js
rorl
jmp
ljmp
int
shrl
dec
push
pop
int
and
aad
xchg
mov
out
xchg
dec
dec
xchg
repnz
push
or
mov
inc
js
and
sbb
xor
roll
enter
daa
pusha
pusha
in
fstl
xor
in
or
orl
pop
iret
aas
add
popa
loopne
jecxz
push
shrb
xor
in
xlat
insl
lock
xlat
mov
cli
jle
adc
js
test
xor
andb
imul
out
test
sbb
cli
insb
js
xlat
fs
imul
js
jbe
and
iret
int
or
loope
sub
jg
adc
fsubrp
push
je
ja
mov
mov
lret
pop
add
add
lock
dec
clc
jnp
xchg
insb
gs
xor
add
outsl
sub
mov
xor
outsl
cmp
pop
stc
rol
jae
pop
lock
out
mov
sbb
rorl
pop
punpcklbw
xor
mov
cmpsb
call
into
fcomip
push
adc
xchg
aaa
popf
and
cmp
pushf
adc
rcrb
adc
fstps
aas
pop
pop
inc
lock
insb
aam
xlat
test
mov
fcmovnbe
in
test
icebp
insl
loopne
dec
adc
test
jmp
js
pop
repnz
adc
ret
xchg
sub
shlb
ss
mov
pop
mov
push
out
fs
or
push
mov
add
stos
pop
es
movsb
pushf
jg
or
and
lods
jp
js
cmc
jmp
mov
mov
std
orb
xor
dec
push
enter
push
in
out
lret
dec
into
jae
stos
dec
in
push
icebp
daa
fsubrs
xchg
pop
arpl
cmp
jne
inc
pop
out
or
inc
out
scas
xlat
xor
or
leave
fcom
xlat
xchg
std
mov
test
xor
jns
adc
adc
push
add
xor
fdivrl
scas
lock
not
out
xor
mov
cwtl
mov
popa
ljmp
movsb
jge
push
or
cmpl
cltd
call
xchg
lods
lret
adc
pop
es
pusha
ret
fwait
rorl
lret
repz
mov
dec
iret
pop
pop
dec
shll
and
xchg
mov
pop
cmpsb
mov
push
js
xchg
or
jb
and
adc
loope
add
or
repnz
pop
inc
aam
movsb
loop
pop
cmp
es
add
or
push
xorl
data16
add
or
les
stc
fcom
sub
insb
sbb
pop
pushf
xchg
nop
fs
roll
sbbb
xchg
dec
insb
adc
xchg
nop
sbb
jp
clc
push
lods
push
pop
mov
pop
decb
sbb
insl
jmp
les
and
dec
int3
loop
xchg
inc
xchg
ja
inc
mov
vaddsubps
push
dec
xchg
cmpsl
cs
loop
inc
aam
cmp
outsb
pop
iret
call
or
loop
add
divl
sbb
sbbb
xchg
pop
jnp
cmpl
enter
xor
mov
xchg
lret
pop
insl
push
lock
jb
dec
add
sbb
rcrl
lods
or
pop
and
push
jne
push
jo
shrb
into
push
inc
jg
add
adc
sub
les
mov
stos
out
xchg
data16
sarl
clc
push
ds
pop
add
inc
mov
add
ds
ficompl
call
fdivp
ss
add
sub
dec
pop
push
sub
subl
sbb
test
mov
mov
add
das
xchg
pop
sbb
jno
dec
sbb
sub
std
out
adc
ds
das
sub
push
xor
adc
dec
enter
add
push
mov
cwtl
mul
clc
or
movsl
fdivrl
stc
add
js
pop
test
mov
xlat
insl
iret
pop
push
scas
push
push
and
stos
cld
cmp
das
push
add
inc
mov
cmp
jno
xchg
dec
les
ds
stc
jle
pop
in
mov
stc
pop
mov
adc
mov
mov
mov
lods
jns
dec
push
dec
mov
adc
xor
movl
stos
mov
scas
pop
movsb
insb
jo
imul
sbb
jle
push
sub
xor
mov
push
shrb
lahf
push
mov
mov
sbb
xchg
or
xchg
hlt
jmp
adc
rorb
rol
insl
xchg
loopne
sub
divl
xor
ja
outsb
int3
stos
push
call
adcb
jnp
imull
insb
mull
adc
fbstp
xchg
dec
add
jg
mov
and
add
mov
lahf
addb
adc
jp
outsl
jge
and
push
mov
add
inc
adc
mov
lcall
call
bound
add
pushf
pop
mov
das
pusha
lret
inc
mov
fidivl
jl
icebp
stos
pop
jbe
cmpsl
cmp
js
jecxz
and
inc
mov
cli
stos
pop
push
out
in
adc
ret
aas
dec
int
cmp
fldcw
pushf
cwtl
loopne
sub
xchg
or
popf
mov
push
pop
jns
arpl
cmp
adc
pop
call
dec
loope
js
sbb
adc
mov
nop
sbb
sbb
inc
lea
ds
and
clc
int
bound
out
stos
add
xchg
fadds
les
ljmp
push
scas
pusha
dec
loope
jle
mov
push
outsb
sub
aam
jl
pop
out
adc
push
orl
lcall
sbb
push
lods
pop
inc
ja
clc
fiaddl
movsl
orb
dec
dec
subb
clc
icebp
sub
push
lock
inc
cmp
clc
or
pop
sub
dec
ljmp
int
test
lcall
ds
into
cmpsb
adc
xchg
add
push
cld
mov
fcomps
clc
testl
aam
mov
negl
add
lods
addb
loop
mov
stos
ja
dec
mov
and
mov
fs
mov
adc
add
inc
push
dec
push
rorl
pop
pop
or
xchg
and
push
cmpsl
fs
and
dec
in
cmova
idivb
cld
les
jno
mov
sub
test
sbb
addl
iret
push
mov
lahf
aad
sub
xchg
mov
ficoms
xlat
mov
inc
sub
jo
rorb
je
push
pop
dec
fcomi
xchg
ret
add
pop
inc
out
push
sbb
jmp
cmpsl
xor
and
xchg
mov
lods
jb
das
jmp
in
js
add
xchg
int3
aam
adc
sbb
push
cmp
dec
push
pop
inc
int3
ds
movb
subl
ret
adc
call
adc
inc
sub
icebp
mov
dec
lret
ret
xor
cld
and
or
dec
lods
push
inc
cmp
sub
pop
add
mov
or
loopne
rorl
ds
enter
loopne
call
mov
adc
mov
mov
mov
cmp
ret
push
jg
sub
or
pop
call
fwait
or
repnz
test
xchg
and
adc
sbb
xlat
test
lret
aam
outsb
in
popa
jl
ror
xor
clc
cmpsl
mov
xchg
ljmp
mov
jno
es
sbb
dec
fs
loop
stc
icebp
mov
pop
mov
or
push
mov
lea
sub
pop
pop
inc
cmpsl
sbb
mov
inc
pop
scas
jns,pt
mov
dec
sub
stos
mov
push
inc
xor
pop
xor
xor
add
pop
xchg
jg
les
dec
xlat
mov
loop
sbb
pop
cli
cmp
mov
icebp
xchg
sbb
and
hlt
pop
es
jno
and
xchg
fwait
notb
sti
pop
outsl
xchg
xchg
shrl
xlat
fcomps
cmp
jge,pn
add
mov
inc
clc
inc
push
push
fnsave
jnp
mov
repz
xchg
pop
hlt
add
mov
pushf
mov
mov
xlat
clc
shll
fwait
lods
push
or
jns
into
lds
iret
mov
cli
loop
lods
das
or
xor
scas
divl
dec
add
bound
jbe
addb
jmp
xor
mov
pop
lahf
pushl
stos
daa
jne
dec
outsb
repz
insl
cli
cmpsl
mov
mov
push
aad
loope
push
jbe
insl
es
push
or
or
cmpsl
xchg
fs
popa
or
js
loope
jmp
jge
mov
jnp
std
rcr
out
push
xor
and
push
sbb
fcomp
leave
push
sahf
jno
rcrb
ret
sbbl
loopne
pop
lods
add
inc
mov
and
push
int3
cld
push
sbb
cmp
cld
ss
pusha
pop
inc
pop
mov
fidivs
jle
cmp
push
pop
aam
pop
lods
adc
cmpsl
jp
cld
cmc
lret
jl
sbb
hlt
je
mov
pop
pop
push
repnz
lds
xchg
pop
ret
push
loopne
subl
pop
clc
ljmp
and
sbb
sub
fiaddl
pop
mov
mov
mov
push
xchg
cmpsl
sub
push
adc
lods
adc
sbbl
or
mov
stos
add
int3
mov
add
ljmp
dec
les
dec
out
loop
imul
gs
sub
inc
imul
mov
dec
arpl
sti
dec
inc
cmp
cli
or
sub
jle
in
xchg
xchg
out
add
rol
pop
sub
sbb
mov
test
cmp
in
dec
repz
sbb
stos
lock
or
loopne
and
and
or
sub
and
test
mov
sti
mov
je
cmp
repz
rcrl
dec
sub
enter
pusha
adc
xor
mov
or
cmp
fwait
and
mov
leave
clc
shr
das
inc
aaa
adc
rorb
dec
mov
inc
arpl
xor
js
sub
jnp
ds
imulb
adcb
ljmp
xor
sbb
mov
das
inc
mov
and
push
cbtw
inc
bound
out
lea
es
push
movntq
unpcklps
cmp
mov
pop
sub
cli
inc
xor
sub
orb
cld
loopne
fisubrl
and
jmp
and
icebp
xchg
and
push
cld
push
mov
dec
dec
sbbb
mov
ljmp
idivb
sbb
push
push
mov
int3
mov
insl
jge
divb
mov
jmp
lock
loop
fsubrl
sbb
roll
sbb
and
jb
pop
jl
dec
and
inc
loop
mov
inc
dec
xlat
jb
sbb
roll
sbb
aas
mov
cmp
lret
jb
shrl
mov
sub
nop
sbb
cmp
mov
jnp
add
cmp
orb
divb
loope
push
jmp
mov
add
lods
dec
fnsave
hlt
in
adc
or
jb
lods
faddp
loope
inc
fldl
test
xor
lods
mov
incl
inc
shll
xchg
lock
pop
jl
in
int3
mov
sbb
cld
push
mov
into
pushf
jnp
andb
cmpsb
test
rol
paddb
int
iret
or
mov
xchg
fistl
sub
inc
cmp
push
xchg
push
lds
lods
andb
shll
xor
pop
fimuls
cmp
jno
cwtl
not
jg
scas
push
enter
outsb
ds
pop
inc
and
rolb
gs
lcall
cmp
adc
fistps
scas
mov
jecxz
adc
stos
mov
fistpl
jne
push
dec
xlat
push
lock
enter
adc
rol
pop
adc
mov
sahf
jns
dec
push
jp
shrb
jl
jbe
mov
in
imul
cs
rorl
in
xchg
pop
rclb
cmpsl
xchg
popa
push
push
cmc
sub
movsb
mov
xchg
add
cwtl
push
in
lret
sbb
pop
mov
push
insl
jg
sbb
insb
je
fidivl
fldenv
out
shll
sbb
push
add
hlt
cli
scas
mov
cld
mov
inc
pop
xorb
pop
pop
enter
imul
adc
aad
push
leave
xor
and
mov
pop
cld
rorb
cmp
cmp
shl
adc
cmp
sub
ds
repnz
push
push
idivl
or
shlb
cmp
push
add
lcall
mov
ja
lcall
mov
sub
mov
xchg
push
mul
inc
push
pop
ss
loope
push
iret
dec
loop
loop
jmp
add
mov
cmp
and
or
neg
pop
jae
outsb
mov
push
and
push
scas
sbb
mov
mov
fnstcw
dec
pushf
mov
sti
bound
push
pop
mov
inc
test
cld
or
leave
cmp
aaa
repnz
iret
xchg
push
roll
and
adc
or
jmp
movsb
push
mov
in
pop
lret
sub
cmc
mov
adc
mov
mov
sub
pop
jge
mov
lret
movsb
out
cmp
sbb
add
arpl
sub
testb
adcl
lods
inc
push
and
pop
jl
in
mov
imul
fdivrs
movsb
hlt
push
pop
mov
inc
in
fstpt
push
sbb
inc
and
shlb
mov
lret
ficomps
xchg
lock
add
sbb
ljmp
mov
mov
inc
jl
sub
dec
and
add
jecxz
mov
inc
pop
pop
mov
xor
mov
inc
mov
sahf
or
mov
or
jmp
inc
addb
mul
adcb
loope
xchg
inc
xlat
fcoms
adc
mov
ds
std
mov
mov
add
jecxz
add
push
jae
jno
jle
je
stos
adc
jecxz
dec
sbb
push
leave
repz
clc
hlt
add
inc
push
jge
pop
jl
pop
or
cmp
in
aad
inc
push
cmpsb
dec
xchg
test
aas
adc
in
lcall
lahf
push
inc
repnz
int3
inc
fistl
cld
mov
cltd
mov
xlat
push
mov
pop
call
sub
mov
fsubp
pop
push
mov
sti
or
inc
mov
leave
sub
loope,pt
sub
lret
or
sbb
clc
add
inc
test
mov
test
sbb
sbb
jp
push
pop
rcrb
jle
insl
ret
lods
add
insb
cmpsl
outsb
push
daa
mov
mov
cmp
stos
inc
enter
fucomp
cli
rcl
jno
adc
loope
fisubs
xor
aam
je
rcrl
mov
aam
sub
out
jecxz
dec
mov
jp
cmp
mov
add
push
push
out
fwait
jb
std
sbb
jnp
arpl
dec
ja
sub
xchg
cwtl
push
stos
or
xchg
jle
mov
sub
lods
shll
push
cmp
pop
subl
pop
dec
mov
dec
jge
adc
mov
jmp
aam
addb
aad
or
inc
and
loopne
xchg
mov
add
cli
js
or
call
lret
push
scas
jle
push
arpl
dec
push
imul
mov
movsb
xchg
cmpsb
les
and
mov
test
mov
mov
add
jecxz
mov
inc
jp
popf
int
loop
adc
js
and
int3
testl
sti
hlt
xchg
adc
aaa
inc
aaa
adc
add
mov
mov
imul
stc
add
mov
fsubl
pop
rol
lret
jp
push
arpl
les
icebp
lock
popa
sbb
fs
sbbl
jne
mov
add
fs
mov
data16
push
and
pop
mov
popa
movsb
movsb
sub
lods
imul
fwait
cs
xor
mov
jne
lock
mov
bound
mov
jo
pop
pusha
pop
mov
mov
adc
or
std
cmpsl
adc
stos
addr16
cs
mov
push
iret
sbbb
or
xlat
xlat
add
mov
imul
adc
or
add
mov
cmc
fucomp
pushf
in
jecxz
sbb
jb
and
sub
mov
push
mov
clc
shl
push
cltd
stos
cmp
adc
cmc
adc
pop
adc
iret
outsl
push
mov
mov
push
insb
add
insl
mov
push
jl
mov
mov
dec
les
xchg
dec
test
mov
push
dec
xchg
cmpsl
and
xor
or
movsl
add
mov
fisubrs
sbbl
add
fcompl
jae
clc
out
lcall
imul
int
push
es
nop
lock
adc
jo
pop
sub
in
fbld
xchg
fsubs
add
cmpsb
adc
or
es
xchg
push
movsl
push
add
das
out
jmp
sbb
ss
dec
test
mov
sub
add
or
subb
sbb
mov
sahf
jl
nop
aaa
pop
xchg
push
gs
ljmp
js
aam
sbb
pop
add
lcall
les
mov
or
add
pop
inc
insb
dec
push
xor
inc
inc
stos
mov
test
mov
cmp
andb
sbb
sub
push
movsb
in
lods
loope
adc
jne
sbbl
jno
pop
std
dec
sbb
mov
sbb
xor
fmuls
cmp
pop
mov
push
add
scas
inc
prefetcht0
push
sub
fisubl
add
loope
test
shlb
cmpsb
fcmovnb
aad
xchg
jno
std
jecxz
popa
mov
stc
inc
fcom
jae
ret
sbb
lret
adcl
jb
cld
sbb
nop
xor
inc
mov
pop
es
ljmp
sbb
pusha
push
pop
mov
cmc
scas
mov
mov
xchg
testl
inc
icebp
movsl
arpl
or
inc
and
bound
fcmove
jp
pop
sub
jl
pushf
scas
mov
push
or
lods
rorb
sub
mov
or
scas
sbb
mov
jnp
pop
inc
inc
inc
push
roll
lret
lods
insl
cwtl
cmp
add
test
pop
cli
xchg
add
lock
hlt
jle
cli
lret
test
loope
repz
and
nop
mov
push
aaa
mov
rol
adc
jecxz
jo
push
orb
pop
cli
ds
inc
pop
testl
mov
mov
imul
pusha
dec
loopne
arpl
test
mov
aaa
push
inc
cs
cwtl
push
jne
inc
xor
xchg
xchg
and
outsl
fcmovne
dec
dec
rcrb
or
lea
add
push
mov
sbb
sarl
mov
mov
popa
sbb
in
jnp
das
int3
or
fisttpl
sbb
imul
pop
inc
xchg
inc
pusha
subb
mov
sub
cli
enter
in
xchg
pop
lock
xor
dec
add
jns
dec
sub
mov
imul
ja
mov
dec
adc
jo
jge
push
fwait
and
dec
or
jns
rclb
ret
into
add
push
out
lock
jle
xchg
ds
push
mov
sahf
mov
mov
ljmp
ds
out
pop
std
int3
in
xor
gs
bnd
popa
nop
xor
scas
aad
mov
js
test
lock
ss
inc
inc
cmp
cs
adc
rorb
shll
adc
daa
mov
adc
outsb
test
xor
into
fbld
xchg
fidivl
fcoml
mov
cld
outsb
das
fcoms
sti
push
sbb
push
dec
stos
adc
push
jns
add
das
sbb
xchg
pop
and
imul
or
jb
movsl
cmc
xchg
mov
fmuls
bound
mov
push
adc
popa
adc
daa
xchg
sbb
or
push
loop
jge
aam
in
js
popf
pop
in
mov
ret
dec
sbb
les
and
and
inc
adc
clc
je
into
mov
push
inc
or
cmp
test
cmpsl
popf
xor
rcl
jmp
mov
jecxz
scas
scas
sbb
cmp
out
pop
cmp
sbb
push
das
jmp
mov
push
stc
pop
jge
loopne
or
push
jne
mov
cmp
pop
add
push
or
das
and
fcom
ljmp
jb
es
push
movsl
add
pop
xchg
pop
outsl
lret
cmpsl
les
es
push
fisttps
dec
sub
add
inc
mov
inc
or
sub
jle
jno
mov
pop
cmp
xor
jp
cmp
outsb
mov
cwtl
sbb
daa
mov
loope
fs
pop
jl
and
ret
mov
lods
lret
push
xor
insl
sub
jbe
inc
jge
or
dec
cmp
lods
das
fld
pop
mov
rcrl
movsb
pop
cmp
jo
xchg
mov
fstpt
cmp
cmp
lea
adc
bound
xor
or
das
aam
mov
test
xor
add
pop
call
mov
lcall
xchg
sar
add
lahf
cwtl
add
icebp
inc
loopne
bound
cmp
fsubrs
jbe
xchg
clc
addl
imul
and
sbb
fcomps
cs
aaa
cmpl
push
cmp
ds
fiaddl
outsl
mov
jecxz
lret
or
ret
lock
cmpsb
ds
loopne
sbb
sbb
push
sti
dec
xor
mov
sbb
sbb
push
inc
sub
pop
insb
call
add
xor
push
lret
push
or
xor
sub
enter
mov
ret
adc
aad
xor
test
cmc
adc
out
xchg
lock
enter
cmp
pop
pop
dec
or
lods
pop
addr16
repnz
xorl
pop
cmp
sti
xor
mov
unpcklps
mov
sbb
push
fsub
cmp
ljmp
jae
dec
xchg
xor
cmp
aaa
mulb
testl
cmp
add
fisubrl
xor
loop
aas
xor
mov
pop
scas
lret
or
movsl
mov
aad
pusha
push
mov
dec
add
inc
dec
iret
jle
push
dec
fisubs
xor
jo
adc
xchg
jecxz
mov
dec
data16
fisttpl
xlat
xor
je
imull
or
rorb
adc
call
out
adc
jnp
push
and
les
cld
popa
mov
jo
std
push
mov
je
and
aam
das
inc
imul
inc
scas
and
push
iret
sbb
fldt
pop
sbb
sbb
adc
scas
sbb
data16
out
mov
mov
xchg
sbb
cmpl
es
out
test
cwtl
cmp
jbe
pop
das
test
adc
rcrl
ret
or
mov
cld
jp
push
xchg
lcall
sub
mov
lock
sbb
fs
cmp
xor
mov
mov
ficompl
shr
push
cld
fisubrs
sub
pop
and
ss
lcall
mov
mov
push
mov
lea
mov
xlat
imul
dec
add
popf
sbb
jge
out
add
int3
fmull
mov
icebp
and
iret
popa
mov
push
repnz
data16
cmc
pop
dec
imul
inc
add
pop
icebp
mov
push
cmp
or
dec
pop
ret
fdivr
cmp
dec
sarl
push
add
cmpl
adc
scas
or
jnp
inc
sub
decb
or
xchg
push
icebp
add
or
and
inc
add
inc
add
mov
sub
jnp
leave
jmp
mov
stos
js
pop
xchg
xor
rolb
push
add
clc
in
adc
jmp
cmpsb
lods
add
cmp
sbb
arpl
std
loope
push
mov
aad
inc
jmp
inc
mov
in
cmpsb
mov
in
add
fidivrl
mov
shrl
test
aad
sub
bound
xlat
fisubs
sub
sbb
sti
cmp
inc
nop
cli
int
cwtl
scas
jle
cmpsl
cmc
dec
sbb
rolb
gs
cli
aad
cltd
sahf
notb
and
cltd
dec
inc
insl
pop
mov
adcb
sbb
xchg
pop
sarb
adc
push
sbb
add
mov
daa
xchg
cwtl
test
pop
jge
test
shll
xchg
pop
xlat
leave
hlt
rcrl
insl
mov
sub
jl
sbb
cs
push
sub
mov
ljmp
and
jle
adc
rorl
add
adc
and
push
xchg
inc
pusha
popf
jo
aad
btc
std
call
cmp
movsl
inc
inc
test
pop
mov
xor
lret
jge
mov
popf
je
shlb
daa
lea
loope
and
sub
dec
pop
mov
jno
loope
js
ljmp
sbb
inc
fidivrs
aaa
cmp
movsl
push
xchg
mov
loopne
daa
push
test
xor
test
adc
test
pop
adc
xchg
js
push
fistpll
pop
outsl
mov
subl
int
cmc
out
adc
loope
mov
roll
loopne
sub
xorl
aaa
mul
icebp
sbb
xlat
push
insb
mov
insb
add
push
push
or
xorl
dec
cmpsb
inc
std
and
sbb
test
test
xchg
push
xchg
xor
xchg
push
jle
xchg
mov
push
and
cmp
in
inc
and
iret
xchg
mov
push
stos
aas
push
sbb
sahf
lea
pop
xchg
jo
add
xchg
inc
in
hlt
add
xorl
sub
mov
xchg
ret
and
lds
mov
jmp
stos
repnz
sbbb
pop
sbb
mov
mov
popa
sbb
sub
lea
cmc
fstl
sub
in
arpl
bound
add
push
inc
mov
xor
ljmp
cwtl
mov
add
lods
ss
ficompl
pop
leave
or
xchg
gs
dec
fcmovb
call
mov
adc
jbe
clc
sbb
popf
movsb
xor
movsb
or
movb
mov
sub
xrelease
add
cmp
or
movsl
lret
sbb
mov
push
add
addr16
mov
movsl
idivb
orb
xchg
arpl
enter
push
or
pop
xor
aam
lds
and
mov
outsl
lods
and
and
cmpps
push
mov
push
xchg
pusha
push
pop
push
pop
ja
mov
push
dec
rcrb
movsb
bound
fidivrs
fistpll
sub
jecxz
scas
xor
push
popa
xchg
mov
lahf
roll
and
mov
fstpl
mov
push
jbe
push
mov
or
xchg
fwait
jmp
rcl
aaa
jp
adc
or
or
or
push
aas
jb
sbb
outsb
add
cmp
add
stos
loopne
jmp
xchg
addr16
movsb
fstpl
popf
push
cmp
js
cwtl
push
jg
xchg
stos
sub
xor
push
scas
sub
xor
pushf
ds
mov
adc
adc
adc
sar
call
fstpl
sbb
pop
in
cld
mov
jo
adcb
clc
add
movsb
pop
mov
out
fisttps
or
cmp
test
push
jnp
jge
dec
adc
test
or
or
or
ret
lea
xchg
sbb
nop
push
loope
pusha
js
mov
xor
adc
sub
push
xlat
push
add
jg
out
mov
pop
pop
or
pop
mov
das
adc
dec
scas
gs
inc
add
int
cmp
fwait
add
outsb
std
push
pop
inc
cli
cmp
xor
pop
jl
xor
das
mov
in
xor
leave
sbb
mov
cmp
jecxz
sbb
xchg
add
or
cwtl
cmpsl
sbb
dec
sbb
loope
jbe
jb
les
out
jecxz
or
std
inc
loop
inc
xor
fdivs
jno
pop
sbb
dec
xchg
mov
push
cld
or
adcb
mov
pushf
loope
mov
enter
imul
adc
icebp
adc
xchg
incl
sbb
fwait
out
pop
jecxz
loope
xor
jmp
lea
ja
gs
ud2
call
fninit
xor
mov
dec
mov
jo
pop
add
mov
mov
push
pop
out
adc
bound
ja
movsb
pop
add
inc
nop
outsl
lea
inc
xchg
nop
pop
scas
mov
aam
fwait
lahf
orb
clc
push
pop
insb
push
clc
dec
pop
jp
xchg
jp
rorl
ret
mov
or
and
es
shll
mov
std
pop
mov
push
mov
add
and
mov
mov
shrb
jp
jmp
ds
ss
mov
std
xchg
add
jmp
xchg
aad
adc
in
bound
fs
sbbb
aam
fmull
inc
xor
mov
sbb
and
jg
jnp
cld
int
mov
sub
test
jb
push
or
sbb
add
adc
push
mov
movsb
adc
mov
sbb
mov
movsb
mov
mov
add
jge
cli
sbb
and
push
and
cmp
in
jae
xchg
xor
xchg
mov
sub
jecxz
adc
jne
jne
pop
mov
jmp
dec
bound
pusha
push
xchg
pop
jae
add
outsl
das
sub
cmp
loopne
adc
dec
push
inc
popa
xor
fs
clc
jecxz
sar
cmpsl
dec
je
fs
push
ret
sbb
bound
outsb
sub
icebp
xlat
mov
mov
aam
fldenv
adcb
out
or
mov
add
xlat
mov
mov
lds
pop
or
jecxz
js
push
mov
inc
stos
popf
test
cmp
push
in
sbbb
data16
pop
sbb
inc
fwait
rcll
rorb
cmp
lods
lock
cld
mov
popl
mov
pop
aaa
cltd
adc
ds
decb
inc
or
in
jecxz
adc
inc
mov
pop
pushf
and
pop
and
lcall
add
mov
call
sub
jne
push
sti
push
mov
cwtl
aad
jnp
or
rclb
push
in
leave
push
mov
hlt
add
sarl
jno
orb
inc
idivl
pop
push
sbb
lock
pop
call
or
push
test
or
adc
je
pop
pop
dec
push
lds
addr16
mov
mov
push
es
jno
lds
fisubs
ja
sbb
mov
push
sbb
out
lret
fmul
shrb
jnp
xabort
pop
mov
aad
jae
cmp
cmp
mov
cltd
les
xchg
sub
sbb
aaa
add
push
or
or
push
push
pop
bound
mov
xchg
pop
rcrb
and
cltd
nop
shll
sub
movsl
or
sbb
jg
cltd
test
das
jne
stos
shr
pop
or
and
sub
fcompl
or
test
mov
xchg
lea
insb
shl
into
or
test
shlb
out
js
mov
cwtl
es
out
mov
cs
mov
mov
push
lcall
andb
insb
pop
add
and
loop
sub
add
mul
aad
rclb
xlat
mov
ss
mov
inc
insb
cmp
dec
in
movsb
inc
lods
xlat
jno
add
push
sbb
arpl
mov
jmp
scas
sbb
add
dec
push
das
inc
lret
sub
jmp
testb
fnstcw
adc
mov
sbb
int3
jge
jnp
loopne
sub
incl
add
aas
pop
jge
mov
dec
dec
push
iret
mov
test
sub
pop
bound
fidivl
mov
cmp
lret
sub
and
adc
in
xchg
xchg
push
jns
jb
out
or
jl
fadd
and
loope
stos
stos
push
andb
add
imul
mov
repnz
add
push
xor
cltd
sbb
or
dec
jne
shrb
pushw
pop
subb
test
roll
add
fsubrs
inc
rorb
aad
push
cwtl
jge
dec
stos
shr
outsl
push
fadds
ja
xchg
cmpsl
jne
roll
or
or
sbb
mov
ljmp
cmpsl
and
pop
es
add
jno
xchg
and
sbbb
loopne,pn
inc
add
or
or
jne
movsl
jp
push
dec
das
sbb
jno
mov
xchg
mov
loop
test
aas
jnp
in
xor
mov
or
mov
shrb
and
cld
dec
lret
test
inc
fdivrs
jle
lock
adc
xchg
mov
inc
jb
pusha
lock
fs
cmc
rcr
test
cmp
sysenter
xchg
sbb
mov
pop
pop
cmp
fs
sub
shl
mov
lahf
add
ret
loop
stc
or
pop
lahf
insb
ds
cmp
cmp
data16
cmpsb
mov
clc
mov
jno
mov
sbb
nop
stc
addl
in
ret
jge
imul
ret
imul
push
pop
push
cs
movb
xor
popa
in
outsb
les
push
push
xor
mov
ret
and
push
push
adc
mov
xor
cmp
push
pusha
sbb
sbb
jmp
enter
add
and
add
jle
xchg
test
jle
sbb
xlat
inc
sti
sarl
fdivr
push
push
movsl
scas
adc
fiaddl
mov
mov
das
xchg
int3
and
test
dec
and
dec
fldcw
lea
sub
addl
packuswb
mov
jmp
jg
xchg
sub
inc
scas
out
add
push
sub
xchg
ljmp
add
mov
xchg
push
aas
inc
cmpb
cli
jb
xchg
push
push
xchg
inc
push
pop
mov
cli
mov
sub
adc
xor
jl
lock
mov
fmull
das
cld
cmc
adc
pop
int3
cmp
adc
push
test
fistps
in
cmp
inc
pop
or
imul
insl
mov
mov
in
xchg
clc
mov
dec
jl
sarl
jbe
lods
fdivs
stos
pushw
adc
sahf
jno
bound
sbb
sbb
mov
nop
mov
mov
and
jo,pt
jae
and
mov
outsb
bound
mov
call
adc
jnp,pt
xor
xchg
outsb
mov
enter
das
push
and
xor
push
sub
rorl
test
lret
orb
fwait
test
shrb
jno
push
jae
cmp
sub
jb
arpl
negb
sub
push
jns
imull
pop
fldl
xchg
repz
iret
xchg
js
roll
mov
or
pop
mov
int
sahf
jmp
ja
add
jnp
xor
adc
mov
imul
and
lret
xchg
jge
fwait
lock
push
jno
dec
hlt
and
xchg
dec
pop
xchg
push
es
lock
xorl
adc
sbb
push
pop
sti
sbb
pop
std
test
xchg
inc
ret
mov
fisubrs
movsb
jp
mov
mov
scas
gs
std
mov
clc
les
mov
orl
mov
sub
pop
lods
add
xchg
cmp
in
push
aaa
test
jbe
xchg
sub
xchg
shll
push
or
jge
cmp
out
inc
subb
xchg
push
test
mov
pop
xchg
push
and
aas
push
fsubl
add
ret
mov
outsb
imulb
sbb
inc
mov
jbe
sbb
loope
ja
test
mov
pop
jp
andl
lret
add
and
jp
loop
add
push
cmp
imul
mov
add
xchg
lods
hlt
lcall
sbb
mov
xchg
testb
test
add
lock
cltd
jle
lret
inc
rcr
pop
sub
daa
dec
mov
daa
mov
rorb
bound
push
nop
push
push
sbb
push
popf
mov
jns
or
je
pop
mov
add
dec
pop
cld
push
push
pop
xor
add
dec
or
sbb
xchg
popf
mov
push
or
push
mov
mov
or
es
mov
xor
xchg
js
jmp
ja
repnz
sub
dec
cmp
xorl
rcrb
mov
dec
js
mov
insl
add
sbb
add
mov
mov
mov
rclb
std
push
enter
int3
add
xchg
dec
les
fldl
push
xor
ss
mov
ds
enter
xor
jbe
lcall
lods
jo
or
repz
add
popf
and
and
cmp
dec
adc
pop
push
rolb
mov
inc
jo
xchg
push
ljmp
clc
sbb
fwait
adc
ljmp
or
jp
xchg
add
xchg
lock
dec
xlat
sub
ds
adc
jbe
sbb
mov
insb
or
adc
push
cld
pop
lock
inc
pushf
pop
ficoml
adc
jb
or
cmp
dec
mov
das
mov
sbb
sub
cmp
xor
iret
and
inc
mov
mov
add
movsl
js
ds
or
decl
add
sbb
and
dec
stos
sbb
test
clc
jmp
jne
cwtl
call
lahf
shlb
sahf
jp
push
rclb
fcomps
inc
cmpsb
mov
inc
push
subl
lds
js
jno
mov
fstpt
insb
dec
xlat
call
outsl
pushf
and
add
adc
dec
adc
add
je
fwait
mov
sub
cmp
inc
loopne
jnp
mov
cli
out
enter
pop
ljmp
inc
mov
jnp
into
sub
mov
adcl
lea
jg
rclb
lods
inc
jbe
lcall
rcl
and
dec
je
mov
repnz
jp
dec
inc
pop
fs
inc
sbb
mov
push
push
nop
sti
into
pop
jge
test
cs
add
popf
pop
xchg
cld
rol
xchg
hlt
add
xchg
adc
or
gs
sub
idivb
les
rcl
out
pop
add
add
lods
mov
jnp
sbb
cmp
fidivrs
jecxz
aas
iret
incl
hlt
mov
pop
dec
movl
mov
mov
sub
ret
setle
das
into
add
adc
js
push
push
and
hlt
cli
dec
pop
jp
cmp
adc
stos
add
and
movsl
adc
sub
nop
xor
aam
sbbl
mov
dec
inc
inc
pop
ret
xor
std
insl
dec
iret
cmp
daa
orb
mov
pop
and
lods
add
stos
lds
sti
xor
dec
jmp
push
loope
push
sbb
imulb
cld
mov
in
cmp
jge
fcomps
xchg
andl
push
mov
bound
aas
dec
lret
test
pop
push
mov
call
adc
sbb
and
test
jl
in
pop
jne
sbb
mov
jmp
ficompl
call
gs
inc
outsb
inc
mov
xorb
sub
sbb
cmp
or
loope
aad
mov
push
or
cs
xor
push
bound
cmc
push
mov
inc
sbb
roll
lret
and
cmp
jg
and
adc
mov
or
pushf
mov
outsb
mov
pop
xor
flds
decl
incl
nop
movsb
mov
sbb
pop
inc
test
decl
sub
pop
cli
adc
dec
imul
loopne
xor
mov
and
fstps
dec
aaa
dec
cmp
adc
and
sbb
adc
jl
cmp
testb
movsl
cmpsb
in
out
add
mov
and
add
sub
mov
or
notb
enter
lret
jecxz
nop
push
xlat
push
ret
insl
stos
ret
add
call
or
pushf
in
and
jb
jle
lock
popa
jne
ss
jp
pop
loopne
cwtl
repz
outsl
mov
dec
test
rclb
xchg
dec
test
je
inc
jl
ret
rcrl
nop
or
aam
xchg
or
add
mov
add
push
adc
mov
xchg
sbb
and
jno
andb
iret
rcrl
or
subl
jl
fstps
popf
adc
icebp
sbb
push
int
and
sub
int
femms
mov
push
jg
mov
pop
scas
adc
gs
xor
lock
nop
adc
add
push
ds
sub
and
dec
cld
pop
test
iret
shlb
in
push
mov
test
jb
outsb
test
mov
int
cmpsl
mov
pushf
mov
xchg
gs
push
lea
mov
push
rcrb
sbb
jl
cmp
mov
das
jne
add
lods
add
or
inc
push
cmovae
int3
cli
sub
cmc
rclb
mov
sbb
add
insb
push
das
cvtps2pi
jbe
popf
xchg
fildll
in
in
cmp
push
stos
push
jns
or
pop
mov
push
cmpsb
push
jns
xlat
mov
ljmp
sub
mov
push
add
pop
sbb
xchg
push
les
in
fwait
enter
test
imul
scas
mov
mov
jnp
les
addb
add
idivl
pop
movsb
cwtl
test
xchg
mov
mov
cmpsl
inc
daa
jecxz
dec
fldt
pop
inc
mov
sub
int3
js
inc
pop
xor
in
add
push
repz
aas
mov
popa
lds
push
les
es
mov
cwtl
pop
enter
loopne
mov
mov
inc
pop
lods
mov
pusha
mov
in
cmp
lea
jecxz
out
aam
xchg
out
cmp
lds
adc
enter
imul
xchg
lock
adc
xor
pushf
or
push
sbb
lahf
fistl
sbb
xchg
cltd
lret
jno
enter
dec
andb
push
or
pop
and
and
or
std
pop
leave
xchg
incb
addr16
loope
push
loopne
loopne
mov
aad
rolb
push
test
fdivrp
xorl
test
xchg
cmp
movsl
imul
test
sub
push
and
mov
dec
xlat
imul
or
xchg
cmpsb
xlat
icebp
mov
jnp
pop
inc
xchg
roll
push
pop
dec
test
mov
loop
push
pop
pop
inc
or
cld
lret
inc
aas
mov
jb
mov
jle
sbb
push
sbb
test
mov
mov
dec
fucomip
jo
cmp
jb
sbb
push
jl
pop
and
jne
mov
bound
rol
add
jecxz
xor
out
mov
icebp
cltd
fisubrl
rorl
lock
mov
je
ficomps
jns
mov
leave
imul
bswap
mov
sbb
mov
lock
imul
filds
push
pop
test
es
jle
sbb
mov
cli
loopne
nop
dec
ja
cmp
dec
sbb
mov
inc
fcom
cmp
mov
cmpsl
jecxz
pop
inc
outsl
mov
push
jns
sbb
aam
in
jne
push
push
dec
mov
or
mov
leave
mov
sub
mov
mov
icebp
cmpsb
mov
mov
cmp
lods
in
push
aas
fadd
aam
movsb
lock
loop
adc
lret
xorb
rcll
add
adc
repz
imul
inc
push
sub
stos
scas
daa
adc
pusha
mov
iret
mov
movsb
xor
addl
and
int
sub
push
adc
pushf
jg
movsb
hlt
cmc
sub
xor
movsb
push
dec
sub
pop
add
lock
adc
xor
and
mov
lcall
js
mov
mov
addr16
out
rcrl
ljmp
les
adc
mov
mov
repnz
stc
sbb
rolb
and
inc
cmp
push
mov
sub
jmp
mov
pop
fstpl
and
pop
mov
rcl
mov
outsl
or
xchg
cmp
xchg
sub
psubusb
mov
arpl
dec
and
push
inc
inc
push
mov
jl
sbb
pop
pop
pop
inc
mov
js
ds
ret
push
or
ljmp
je
xchg
xchg
sbb
pop
pop
mov
sub
sti
xchg
dec
lcall
and
and
cld
fiadds
notl
cwtl
mov
inc
fwait
or
xchg
mov
cli
rcll
or
push
or
imul
xchg
mov
xchg
lods
sahf
out
leave
dec
or
jle
je
sti
dec
jbe
and
ret
lret
dec
jg
inc
mov
hlt
adc
xchg
popa
lahf
popf
jg
mov
xor
nop
mov
mov
mov
bound
adc
inc
sbb
arpl
sbb
and
cld
fstpl
popa
mov
fsubr
cmp
rolb
inc
addr16
loope
mov
ja
pop
push
mov
mov
popa
adc
xchg
add
js
std
orb
loopne
mov
lods
adc
hlt
repnz
popf
mov
xchg
jno
dec
pop
push
or
bound
xor
inc
pop
dec
inc
std
pop
add
add
je
adc
out
add
loope
out
fcomp
js
add
push
icebp
pusha
movsl
sbb
call
pop
mov
cmc
pop
xchg
clc
adc
dec
push
mov
pop
sbb
nop
aas
rclb
mov
adc
les
roll
cmp
jne
loop
test
xorb
sahf
je
inc
cmpsb
gs
sbb
push
pop
pop
push
mov
adc
xchg
pop
mov
out
insb
je
filds
mov
arpl
idivl
in
inc
xor
icebp
add
jp
mov
jb
add
jmp
repz
test
insb
fsubp
jp
popa
sbb
pop
popa
or
nop
les
js
popf
int
pop
std
fsts
add
pop
jge
sub
push
dec
pop
jp
or
cmpsb
mov
pop
shl
cltd
mov
push
out
push
lahf
pop
ret
xor
rcr
cli
xor
sub
insb
and
sub
orl
das
pop
ret
xor
pushf
mov
pop
jecxz
add
inc
sbbb
sbb
and
or
mov
cli
icebp
out
or
xlat
fdivs
fiadds
ss
inc
mov
fwait
cmp
adc
or
and
and
out
mov
xchg
xor
je
cld
dec
pop
je
xchg
jge
outsl
hlt
hlt
push
xchg
mov
enter
cmp
pop
mov
lods
xchg
leave
push
xor
and
fcmovbe
imul
sbb
bound
test
out
pop
push
jl
xchg
adc
inc
hlt
aas
ja
mov
movsb
ljmp
mov
jbe
call
sub
loop
mov
or
ret
or
nop
fwait
cmpsl
iret
dec
jl
and
adc
pop
push
nop
daa
popa
shrl
sub
insb
pop
cmc
pop
pop
js
leave
push
jno
sub
jge
push
or
jmp
shlb
jns
jb
mov
jbe
and
aaa
loop
push
ljmp
mov
cli
lea
js
jge
cmp
jb
insl
leave
sub
add
out
sbb
adc
rcrb
imul
cld
in
sti
jp
cli
or
insb
das
jns
cmp
cmpl
adc
ljmp
add
push
pop
sub
sub
adc
insb
inc
adc
or
mov
cmp
cmpsl
faddp
xor
jo
mov
cmp
fdivl
shrb
fiaddl
lock
sub
int3
cmp
xor
mov
pushf
icebp
test
mov
or
jo
inc
fs
pop
xlat
pop
cmpsl
jge
iret
ret
sbb
push
test
mov
mov
cmpsb
adc
inc
je
mov
fcoms
and
subb
push
in
dec
repnz
xchg
adc
add
fwait
jecxz
push
and
xchg
and
daa
dec
test
push
cs
jno
mov
pushl
add
jnp
shr
fistps
in
sbb
out
ds
mov
and
loop
or
in
add
outsl
fimuls
sahf
fisubrl
repnz
xor
loope
icebp
insb
adc
or
sbb
xchg
pop
pop
mov
mov
cmp
cmp
in
add
out
pop
pushf
js
or
xlat
das
add
sbb
das
push
mov
iret
sub
imul
push
push
daa
add
ss
out
dec
sbb
inc
rclb
sbb
movsl
movsl
scas
rorb
je
ret
lcall
xchg
sbb
mov
jp
sbb
xor
add
pop
sbb
mov
cli
and
int3
arpl
inc
push
lock
add
cmpl
dec
cmp
jecxz
inc
mov
push
testb
insb
sahf
adcb
lea
jg
insl
gs
scas
insl
and
cmp
roll
jge
mov
stos
addl
fnclex
dec
inc
cmp
clc
xchg
movl
fdivrl
scas
cwtl
or
in
test
mul
in
push
mov
pop
jnp
fisttpl
call
outsb
or
pop
dec
jne
insl
stos
testb
mov
loopne
mov
aad
test
cli
imul
ds
lret
push
mov
lea
scas
pop
dec
jl
and
sbb
stc
cmpsl
mov
fs
or
pusha
lods
jae
int3
nop
sarb
add
lock
gs
adc
addr16
adc
and
dec
pop
cmp
mov
xchg
xchg
movsb
pop
fisubl
lods
mov
xor
pop
mov
xorl
inc
xor
pop
clc
cmp
xor
mov
xor
mull
push
mov
div
out
aad
shrb
bswap
mov
dec
mov
sbb
aas
mov
and
push
mov
popa
add
mov
sub
jecxz
mov
cmpsl
imul
inc
push
push
xchg
movsl
dec
push
jg
pop
ljmp
pop
pop
cmp
mov
js
jl
jmp
rclb
xchg
movsl
jne
scas
cmc
cmpsb
cltd
nop
movsb
lahf
pop
or
add
pop
add
pop
inc
mov
pop
xlat
or
test
ds
jecxz
popa
imul
add
icebp
dec
mov
sub
js
ss
mov
push
xor
test
fdivrl
xchg
fs
push
out
test
push
xchg
arpl
adc
inc
dec
les
xchg
or
popl
loop
mov
subl
push
cld
dec
sbb
or
repnz
or
test
aam
insb
mov
addl
outsl
or
std
jge
jp
lock
sub
xor
movsl
mov
popf
push
push
clc
scas
dec
pop
stos
mov
ror
shrl
xor
push
cmp
jle
push
dec
pop
jle
xlat
mov
cmp
movsb
inc
aaa
jle
daa
or
mov
daa
cmp
ljmp
in
and
aam
nop
xor
adc
test
rcrl
pop
xchg
mov
push
mov
mov
add
sub
scas
jno
push
dec
dec
push
sub
enter
adc
mov
lcall
js
stos
or
scas
push
and
push
scas
pop
sub
aad
cwtl
push
push
dec
call
aam
mov
sbb
inc
lock
push
ret
dec
ret
mov
test
sahf
cld
push
pop
inc
pop
and
call
and
mov
dec
out
and
hlt
jno
dec
add
imulb
add
loopne
push
rol
test
sar
xor
ds
push
in
mov
dec
insl
pop
add
test
push
fmuls
notl
inc
aam
cmp
mov
push
test
push
lret
mov
scas
mov
jmp
mov
pop
ds
xchg
xchg
lds
mov
les
lods
ljmp
shlb
dec
clc
testl
mov
push
pop
sbb
popf
sub
insb
cmp
adc
mov
sub
xor
es
frstor
stos
push
jae
stos
sub
mov
mov
cwtl
cmp
stos
loop
push
or
inc
aam
insl
push
dec
popa
orl
sar
push
daa
dec
lock
ljmp
or
pop
jne
mov
adcl
cmc
push
jb
jno
cld
dec
push
icebp
cli
ja
icebp
call
adc
test
dec
fsubrl
fwait
xchg
pop
add
mov
fistps
mov
push
in
sub
pop
pusha
mov
daa
je
adc
inc
scas
fs
mov
inc
xchg
push
inc
mov
fcomip
rorl
xlat
jle
add
pop
mov
cmpl
xchg
cmpb
sub
mov
adc
xchg
or
test
lahf
scas
add
mov
sub
loop
mov
push
iret
sbb
mov
mov
push
cmpsl
mov
cld
or
xor
loop
sarb
js
push
ja
stos
data16
ja
push
dec
sahf
adc
pop
adc
pop
push
dec
leave
jmp
lret
repnz
pop
popl
cmp
sub
aaa
push
jns
outsb
addb
cmp
addl
mov
test
or
filds
cmpsl
lods
inc
leave
mov
insb
cmc
sub
mov
outsb
imul
div
mov
pop
loopne
inc
les
out
test
lock
xchg
insl
pop
lea
test
and
xor
in
and
push
adc
das
push
mov
test
push
hlt
mov
pop
out
fs
adc
or
mov
out
ficoml
push
push
jo
int
sub
inc
xlat
push
xchg
rcrb
push
outsl
cmp
push
ljmp
clc
fstpl
sahf
xor
shll
dec
inc
mov
mov
sub
jmp
imul
push
jnp
mov
fnsave
xor
pop
test
and
ds
call
xorl
imul
shlb
in
ret
pusha
int3
inc
inc
aas
fmulp
mov
add
test
add
jno
mov
lea
sbb
xchg
fadds
push
pop
pop
push
cltd
dec
repnz
loopne
lock
mov
in
mov
lret
mov
sbb
fnstcw
sbb
lret
mov
in
int3
icebp
bound
mov
jl
mov
jle
pop
popf
fsubr
out
push
clc
push
or
add
or
ljmp
mov
gs
fistps
int3
push
inc
mov
mov
adc
shlb
push
push
loope
push
xor
jge
fldenv
xchg
jno
mov
hlt
cli
inc
push
iret
push
inc
xlat
push
and
cmp
addl
add
mov
in
les
sub
clc
xchg
orl
data16
fistpl
mov
mov
add
repnz
ss
mov
lods
lock
test
and
fsub
insb
push
aam
mov
dec
pop
cmp
sbb
push
rcrl
push
cmp
jb
or
sbb
push
insb
mov
dec
orb
mov
jno
push
rcll
pusha
jp
mov
xor
popf
test
loope
xchg
jmp
movsl
xchg
cmp
lock
xchg
inc
lea
movsl
mov
cld
jge
shlb
adc
jge
imul
ljmp
insl
icebp
cmc
adc
aam
push
ss
test
add
inc
mov
stos
mov
test
out
ret
jae
jmp
push
cli
inc
sbb
push
daa
pop
jge
pop
mov
pop
add
adc
movsb
cs
mov
lods
sarb
inc
cmp
adc
ds
sbb
cmp
loop
nop
push
cmp
fisttpl
pop
je
dec
pop
leave
mov
or
popf
das
or
js
ljmp
xor
cmpl
insb
mov
cmpsb
mov
mov
adc
lock
jo
inc
inc
popf
add
pop
stos
mov
xor
or
dec
sbb
sbb
aas
xchg
inc
dec
jge
daa
push
testl
add
mov
or
incb
shlb
jo
sub
xor
sbb
inc
pop
push
sti
jne
hlt
xor
sub
lock
movsb
push
roll
in
into
add
push
int
mov
sub
dec
jg
ret
je
stos
arpl
and
sbb
int
or
dec
pusha
loop
stos
xchg
loopne
add
fadds
mov
ret
adc
je
push
ja
and
inc
notl
push
lods
sub
push
or
mov
dec
xchg
outsb
scas
das
movsb
and
test
dec
insb
dec
sbb
push
cmp
sbb
jbe
sub
pop
jo
shl
movsb
xor
daa
cmc
push
xchg
pop
mov
push
int3
sti
mov
fs
cli
sub
or
mov
mov
int3
movsb
cmc
inc
repz
popf
lock
les
xor
icebp
jns
cmp
scas
adc
adc
out
orb
mov
push
inc
out
xor
sahf
mov
push
shll
lods
sbb
cmpsl
insw
inc
arpl
adc
repz
adc
insl
inc
xchg
push
inc
inc
pop
icebp
push
lods
push
cmpsl
or
dec
or
jle
mov
loopne
movsb
jo
mov
inc
cs
and
jl
fnstenv
ja
mov
dec
lret
jmp
sub
add
jo
pop
bound
in
dec
jmp
test
sbb
cmpsl
ja
add
aas
loop
test
jmp
pop
call
arpl
xchg
cmp
cmp
push
cwtl
imul
xchg
or
iret
movsl
test
dec
mov
je
rolb
fmull
jecxz
cmc
inc
sub
add
inc
dec
addr16
jmp
sar
in
test
aas
cmp
ret
in
insb
dec
fsubrl
adc
push
es
andl
or
pop
push
arpl
push
xor
insl
xchg
cmpb
pop
stos
xchg
push
xchg
xor
cmpsb
adc
push
lret
ljmp
cmpsl
push
repz
stos
lods
inc
sbb
shlb
cmc
bound
jo
negl
adc
mov
and
mov
scas
dec
dec
xor
call
test
and
push
outsl
xor
fimuls
xchg
xchg
icebp
add
sbb
rcrb
rorl
insl
mov
arpl
sbb
inc
mov
sub
inc
cmp
shll
in
aaa
jnp
pop
lods
scas
adc
aad
add
mov
js
push
les
sbb
push
mov
pop
jle
pusha
test
push
jbe
shlb
cmp
fidivs
sub
xchg
clc
mov
mov
scas
jbe
dec
pop
stos
loopne
fsubrl
jb
pop
hlt
xchg
inc
bound
ljmp
push
cwtl
mov
xchg
dec
mov
call
stos
sbb
pop
stos
sti
cmpsb
inc
xchg
sub
pop
jno
cmp
int
and
push
or
push
jl
add
cmp
mov
movsb
test
lcall
inc
pop
sub
pop
lds
mov
dec
mov
lret
jno
jmp
jae
xor
pop
push
mov
decl
xchg
and
shlb
cmp
fwait
clc
and
and
insb
xor
fldcw
sub
or
or
push
mov
lret
test
mov
sub
xchg
dec
popf
lods
mov
and
into
add
lret
daa
mov
add
sub
out
fimuls
pop
mov
in
stos
and
xchg
fistpl
xchg
jl
es
inc
fisttps
cmp
xor
into
iret
lds
int
inc
xchg
xor
clc
lods
mov
les
cmp
or
sub
xchg
and
jmp
lret
cmp
mov
aaa
mull
inc
call
cld
push
mov
and
loopne
mov
popa
adc
js
jb
xor
std
jl
mov
dec
mov
mov
cmp
push
mov
xchg
mov
in
test
sbb
movsb
cmp
inc
arpl
xor
ret
pop
sbb
inc
rcrb
daa
lock
test
mov
sub
xchg
xor
cmc
dec
push
or
pop
dec
push
arpl
int3
ja
ret
test
dec
movsl
mov
push
sbb
inc
aas
push
push
call
cmp
mov
and
adc
arpl
or
pop
adc
mov
scas
mov
mov
adc
pop
out
and
lcall
push
push
mov
insl
add
and
xchg
jmp
repnz
fimull
xchg
pop
cmp
mov
mov
mov
or
mov
mov
sbb
lret
push
sub
in
movsl
or
mov
testb
adc
jns
clc
xchg
ret
push
in
insb
mov
pop
aaa
adc
push
test
fcomp
das
movsl
shr
jl
out
add
or
cmc
les
pop
ljmp
test
loopne
and
addb
jp
mov
in
cld
and
push
cltd
push
rorl
sbb
push
mov
push
std
pusha
sub
mov
pop
mov
fidivs
movb
xchg
addr16
sbb
out
pushf
xor
push
and
je
pop
sub
jg
pop
push
pusha
mov
pop
fistpll
es
daa
out
mov
xchg
sub
mov
push
mov
mov
cmp
xchg
rcrl
sbb
sub
notl
das
mov
xor
jo
xchg
call
jno
push
rclb
adc
sbb
push
sub
and
push
mov
scas
aad
xchg
jmp
imul
aam
mov
mov
inc
fiaddl
adc
mov
mov
rorb
adc
jge
jp
sbb
add
psrad
xchg
mov
ss
or
int3
mov
inc
out
sti
rclb
imul
psraw
movsb
mov
jo
pop
pop
pushf
imul
ds
aas
cmp
cmp
inc
pop
pop
mov
pop
fdivs
loope
fdivrs
movsb
jp
jg
adc
in
aas
dec
call
fdivl
or
insl
das
pop
bound
dec
popf
xchg
mov
sbb
sbbb
das
pop
add
aam
insb
sahf
mov
mov
cmp
das
xchg
pop
adcb
aad
push
pop
aaa
test
adc
push
outsl
leave
out
nop
xchg
fsubp
adc
mov
cmpb
int
add
dec
aam
fisubl
insb
rclb
mov
mov
in
rolb
sub
inc
jmp
push
push
mov
fcoms
lcall
adcl
dec
jmp
fcoms
dec
or
jmp
push
aas
out
sub
aaa
test
faddl
movsl
inc
jmp
pop
fdivrs
mov
adc
mov
shrd
shl
inc
sub
push
ja
jmp
imul
pop
dec
mov
cs
ljmp
loope
dec
clc
pop
push
push
rcrl
dec
add
xor
push
sub
outsl
cmc
loopne
sbb
xchg
xchg
iret
cs
mov
mov
ficoms
sbb
aad
out
aam
arpl
cmp
or
mov
and
jb
hlt
cmp
insb
lock
sub
imul
jg
lods
sbb
test
cmp
add
mov
out
shld
enter
sbb
mov
clc
inc
daa
enter
xlat
pop
pop
fistpl
clc
cmp
jle
sbb
mov
dec
shrb
jg
add
pop
adc
and
scas
or
loope
inc
js
or
cli
adc
inc
shll
mov
fwait
xor
cmp
mov
aas
and
lahf
je
cmp
push
mov
stos
and
xlat
hlt
lock
push
sub
adc
js
lret
and
cwtl
push
loope
cmp
fstpl
pop
mov
or
mov
adc
mov
addl
jle
jnp
and
inc
test
inc
add
sbb
movntps
dec
insl
and
sbb
xchg
ja
nop
jne
xor
push
flds
adc
cmp
cmp
fmuls
add
and
sbbl
and
or
mov
lock
sar
testb
lea
xor
fildll
push
bnd
dec
mov
adc
mov
dec
test
movsb
addr16
mov
xchg
push
sbb
cmpsb
pop
adc
push
movb
arpl
push
jne
int
fsubl
insl
js
xchg
pop
xchg
jle
xchg
mov
cmp
sub
iret
mov
adc
pop
cmpsb
dec
push
dec
sbb
and
xchg
das
mov
jns
xlat
ss
add
jb
add
shll
xchg
xchg
lcall
daa
test
dec
mov
ds
xor
scas
mov
mov
ret
dec
push
pop
into
inc
sbb
inc
imul
add
adc
push
js
cmc
mov
jo
mov
in
in
mov
je
test
push
lock
pop
insl
cli
scas
iret
ret
cli
insl
add
stos
inc
orl
or
mov
xchg
lret
mov
in
repnz
scas
mov
mov
pop
outsb
xor
not
push
adc
mov
out
mov
sti
lods
shll
aas
cmp
gs
xchg
cmpsl
cmp
rcl
lods
push
or
add
inc
push
push
shlb
loope
pop
es
fnstsw
lods
push
pop
jmp
mov
jnp
mov
or
int
repnz
xchg
sete
sbb
push
jne
call
add
mov
mov
outsb
les
pop
dec
mov
xor
jl
lcall
xor
jnp
in
ja,pn
dec
cmpsb
rcrb
or
loop
sbb
das
nop
dec
jg
loopne,pt
std
mov
das
add
nop
jo
wbinvd
ja
and
scas
inc
dec
inc
pop
cmp
loopne
sbb
jmp
pop
je
mov
jmp
movsl
inc
sbb
je
xor
add
fildl
jp
mov
es
add
fsub
jp
mov
or
fs
dec
loopne
ret
inc
ljmp
out
mov
pextrw
adc
test
scas
pop
and
sar
mov
sbb
add
and
mov
ds
jl
and
in
inc
mov
or
aam
enter
cmp
sub
jl
and
sub
push
and
imul
push
je
mov
shrb
sbb
call
xor
jmp
test
push
sbb
jns
cwtl
inc
sar
imul
loop
xchg
mov
push
inc
push
es
xor
jecxz
mov
loopne
xchg
loopne
outsb
and
icebp
out
shll
adc
pop
adc
pop
cmp
add
movsl
jo
ja
mov
or
add
inc
jnp
pop
dec
call
fnstcw
xor
movsl
add
xchg
jmp
sbb
adcb
mov
sbb
in
add
add
sti
inc
jbe
mov
sbb
fsubs
xchg
cmp
hlt
and
xchg
xchg
lea
movsb
cltd
cwtl
or
push
jnp
mov
inc
or
push
test
mov
daa
and
fcmovbe
jmp
xchg
sti
or
pop
jp
hlt
and
es
in
cmp
call
test
and
inc
jno
mov
mull
sbb
shrb
femms
repnz
mov
inc
ret
sbb
icebp
inc
call
xor
repz
or
popa
mov
cmpsl
mov
js
mov
lea
cli
pop
jno
mov
or
cli
adc
ret
addr16
mov
ljmp
pop
pop
fcomps
pop
xchg
out
mov
jge
subb
imul
mov
pushf
ret
sbb
cs
ss
mov
ss
jo
jo
push
sub
cmp
fists
mov
jecxz
mov
cmpsb
sbb
mov
push
sbb
cmp
pop
add
xchg
mov
in
aas
loop
insb
adc
push
ja
mov
fdivl
popf
outsl
inc
sbb
push
std
jne
push
lcall
into
or
mov
cmp
and
push
jp
mov
popf
adc
pop
sub
or
mov
fnstsw
and
mov
adc
or
xchg
and
insl
dec
inc
iret
adc
rcrl
xchg
loopne
test
or
add
xchg
gs
inc
sbb
inc
and
shll
dec
mov
ss
add
icebp
fmuls
lods
lods
mov
loop
xor
pop
push
cli
aad
ret
dec
idivl
inc
fidivl
xchg
mov
loopne
inc
leave
gs
and
inc
dec
and
cmp
rorl
out
outsl
ja
sti
sub
push
push
pop
or
mov
stos
leave
stos
adc
and
lret
sbb
pop
sbb
out
xchg
insb
pushf
in
push
arpl
jmp
mov
jbe
loope
dec
xor
dec
nop
push
dec
sub
push
inc
loopne
cmp
shl
jge
enter
inc
mov
adc
cmp
adc
jbe
cmpsl
inc
inc
lret
addb
or
loop
movb
sub
sbb
insb
mov
xchg
sub
cmpsb
and
in
adc
int
shlb
jecxz
out
sub
jmp
inc
inc
pushf
cmp
outsl
push
in
loope
rcl
jbe
push
leave
xor
sbb
mov
gs
ss
inc
mov
test
stos
lods
popa
adc
ljmp
pop
bound
mov
dec
mov
in
mov
shll
gs
inc
mov
jp
or
sbb
jecxz
cmp
testl
push
lock
jbe
aaa
cmc
push
mov
mov
xchg
mov
inc
cmp
pop
add
and
mov
insb
rclb
ljmp
sahf
mov
lcall
jae
test
out
repz
roll
mov
rcr
and
lret
inc
ds
cmp
pop
cmp
and
ret
fisubrl
imul
ret
cs
jle
add
inc
maskmovq
negl
xor
loope
cwtl
call
add
ljmp
push
into
lock
les
jecxz
rolb
out
jmp
ds
test
push
movsb
mov
std
add
mov
push
cs
sub
pop
aad
cli
std
enter
in
psubd
test
push
xchg
out
rclb
scas
jae
and
jge
pop
cmp
add
inc
inc
mov
sub
ds
lock
and
push
mov
lods
imul
outsl
pop
or
ja
and
push
das
pusha
mov
push
mov
pop
add
incb
adc
fidivrl
lret
push
shrb
xor
cld
mov
push
xchg
dec
mov
fbstp
je
mov
cmp
jl
and
jp
add
lods
aas
mov
leave
rolb
sbb
std
inc
ja
test
xor
std
mov
rclb
ljmp
shrb
aad
imul
mov
jle
lea
inc
and
out
out
xor
fwait
pop
jge
lahf
push
cs
cmp
lret
mov
ret
push
jmp
clc
xor
int3
push
cmp
clc
or
adc
pop
or
adc
ret
push
xor
lea
ret
mov
imul
lcall
dec
mov
inc
rcll
addb
fwait
add
mov
lock
add
mov
std
out
cwtl
mov
lahf
cli
ret
add
mov
das
int3
incb
adcl
xchg
ljmp
push
movsl
add
mov
loope
orb
and
dec
test
xchg
or
pop
push
xchg
dec
sarl
adc
movsb
cmpsb
xchg
pop
adc
sub
sti
push
movsb
mov
push
xor
adc
jae
cmp
pushf
js
and
mov
dec
fsub
in
rol
jnp
sub
leave
ss
jl
cli
mov
jno
and
in
adc
popa
sbb
pop
aas
xchg
ffreep
inc
and
loopne
outsl
ss
test
enter
sub
mov
inc
ret
popa
sahf
stos
push
sbb
imul
pop
and
jecxz
shrl
and
inc
add
or
dec
jno
fs
add
in
xchg
xor
gs
sub
aad
adc
mov
jp
or
rorl
and
push
sbb
or
add
mov
push
or
adc
incb
mov
sbb
lea
mov
mov
add
repnz
cmp
sub
cmc
lock
in
jb
mov
call
and
rcrb
pop
es
popa
jge
stos
dec
mov
aam
cmpsl
pop
loope
fbstp
sbb
jmp
repz
pop
mov
aaa
pop
or
xchg
mov
test
test
xor
pusha
call
jmp
mov
jbe
cmp
add
ret
cmp
iret
out
xor
inc
or
mov
xchg
insl
outsb
push
push
dec
push
test
add
call
sub
or
in
or
in
add
cs
aam
out
adcb
pop
push
popf
dec
dec
test
popa
sub
xchg
je
aam
inc
cli
xchg
adc
mov
jo
cmp
mov
cltd
dec
inc
jp
imul
movsb
mov
fildl
and
adcb
mov
js
not
pop
clc
push
leave
test
pushl
popf
dec
movsb
or
add
jmp
out
testb
sbbl
inc
jg
aaa
pop
imul
fwait
mov
insl
sub
xor
mov
adc
xor
mov
jb
shr
pop
and
sub
pop
addl
inc
mov
gs
loopne
les
out
test
adc
out
add
xor
adc
or
das
outsb
xchg
loop
push
loope
or
jne
mov
pusha
xor
clc
xor
aas
jecxz
xor
mov
sbb
inc
movsb
or
adc
bound
mov
mov
repz
outsl
inc
mov
cmp
push
xor
pop
ret
scas
adc
mulb
lds
inc
sbb
mov
and
scas
push
gs
psubsb
sbb
push
jg
sbb
icebp
ss
mov
mov
pop
push
test
out
notb
add
add
cs
int
xchg
or
aam
push
lock
lods
adc
pop
pop
push
movsl
dec
loopne
jp
scas
incb
movl
push
mov
inc
sbb
lret
xchg
clc
lret
push
dec
ret
xchg
dec
lods
cmc
call
push
dec
or
in
test
jmp
cld
mov
out
test
mov
push
cmp
mov
out
mov
mov
dec
cmpsb
pop
insl
aam
out
jecxz
stos
leave
dec
xchg
or
cs
in
in
imul
jno
add
cli
lods
push
fiaddl
mov
mov
add
test
mov
outsl
inc
xchg
mov
adc
sbb
push
lock
or
pop
mov
mov
outsl
dec
mov
lea
pop
jnp
daa
or
pop
je
mov
push
mov
sub
dec
sbb
nop
fs
das
lods
jp
movsl
mov
jp
cs
or
mov
orl
pusha
aas
daa
push
jnp
decb
test
add
pop
inc
xchg
inc
sbb
js
push
sbb
mov
mov
push
scas
mov
rolb
adc
adc
addr16
dec
pop
sub
adc
pop
imul
mov
xchg
mov
pop
popa
adc
pop
decl
ret
clc
rcrb
inc
dec
sub
dec
sbb
add
add
lods
mov
mov
sub
jle
jmp
arpl
out
sbb
jbe
icebp
and
pusha
add
fistl
mov
and
nop
and
inc
pop
inc
cld
icebp
adc
mov
and
test
and
cmp
nop
cmpsb
add
jmp
mov
adc
push
cmc
jno
or
dec
xor
sub
adc
inc
loopne
ja
push
fisubs
or
mov
xchg
or
outsl
xor
xchg
out
mov
lods
mov
inc
jno
mov
xor
mov
mov
ja
cmpsl
jmp
in
daa
test
jmp
pop
xor
jl
mov
outsl
int
mov
adcb
inc
in
add
add
push
icebp
lds
cmp
pop
cs
faddl
movsb
and
lock
loopne
and
aad
push
adc
xorl
fsqrt
stos
dec
xchg
pop
pop
orl
shlb
mov
sub
in
js
cmp
xchg
xor
enter
xor
shrl
out
xchg
add
insl
push
and
stos
jo
and
ljmp
clc
imul
dec
jge
push
cs
xchg
shll
fcmovnb
xor
adc
dec
icebp
loopne
mov
sub
orl
or
or
cmp
xchg
inc
sub
faddl
stc
loop
pop
sbb
cmc
pop
inc
lret
mov
add
adc
jo
jmp
dec
ds
xor
cmpsb
test
adc
jo
jg
fisttpll
in
aam
int3
loopne
mov
sub
sub
sbb
cmp
mov
outsb
add
fs
mov
and
sahf
jnp
adc
and
mov
stc
shl
incl
inc
mov
push
sbb
das
xchg
sub
push
mov
shlb
pop
rorb
roll
test
rcll
movntq
dec
loope
xchg
mov
add
xchg
jl
fdivl
dec
stc
cmpsb
dec
jo
adc
movsb
and
ret
push
loope
push
dec
sbb
scas
and
jo
push
xchg
pop
xor
cmpsb
mov
jno
dec
jmp
mov
and
and
mov
test
repz
mov
loop
loope
jg
loopne
stos
shlb
push
jmp
adc
inc
pop
int
xor
outsb
add
je
insb
jbe
les
ds
adc
lea
test
and
shll
cwtl
bound
adc
mov
inc
sub
dec
cmp
push
bound
push
and
insb
rcll
aas
lea
ret
hlt
xchg
cmp
lods
fcmovnb
sub
out
mov
adc
sub
rorb
rorb
add
xchg
mov
xchg
sub
lods
push
in
aad
fadd
add
or
shl
pop
movsb
in
xor
pop
scas
or
pop
inc
or
mov
in
or
test
repnz
mov
mov
insb
pop
call
ret
test
faddl
cmp
mov
push
xor
fs
in
in
xchg
mov
mov
fnstcw
adc
icebp
ret
roll
ret
in
adc
scas
push
imul
xor
test
out
imulb
insl
rcrb
pop
xor
or
cmpsl
mov
imul
pop
movsl
les
movb
movsl
add
xchg
jns
push
fs
push
sbb
push
inc
mov
jecxz
push
sbb
ds
cltd
arpl
int3
add
pop
lret
add
insl
and
sbb
scas
cltd
mov
in
and
sarb
add
push
sbb
jae
dec
push
in
push
sbb
test
xchg
fyl2xp1
dec
jg
rolb
or
pop
xor
outsl
dec
lds
and
cmp
movsb
push
shlb
jl
loop
arpl
or
or
sbb
fsubr
popf
dec
xlat
test
mov
movsl
dec
pop
xor
fsubr
pop
jo
mov
aad
add
shlb
lods
pop
pop
out
mov
jmp
loop
pop
add
sbb
std
sbb
mov
xor
cmpsl
aam
loopne
add
jb
push
mov
xchg
mov
inc
scas
loop
adc
xor
add
xchg
hlt
into
ss
add
movsb
lret
lock
cmp
xor
mov
jecxz
pusha
fbstp
adc
inc
add
xor
sarl
mov
lcall
adc
dec
mov
jp
icebp
pop
xor
and
lahf
jp
test
outsl
scas
roll
and
jne
ja
cmpsb
cmp
loopne
les
adc
std
movsb
sti
test
or
pop
push
jecxz
inc
mov
and
mov
icebp
xchg
fdivrl
lret
xor
mov
push
loope
enter
add
xor
test
adc
call
sub
cmc
xor
aad
mov
out
xchg
dec
fwait
dec
mov
cmp
popf
js
sub
movsl
negb
negb
and
inc
pushf
xor
insl
push
push
jle
orl
pop
jge
jmp
popa
cwtl
dec
push
scas
push
int
sub
cmpsl
dec
xchg
daa
sub
test
out
fidivrl
xlat
js
xor
adc
lds
add
jmp
imul
imul
mov
dec
loopne
push
sbb
sbb
stos
inc
xor
jns
mov
xor
or
scas
loope
daa
and
or
push
and
fwait
in
fstl
sub
arpl
xorb
jo
inc
xchg
divb
mov
in
add
pusha
dec
mov
movsb
testb
addb
add
push
ljmp
jl
stos
sbb
xor
nop
sub
movsl
inc
pop
adc
ret
pop
dec
cli
xor
dec
mov
out
daa
pushf
push
adc
aaa
jb
loope
push
aas
icebp
mov
test
movsl
jg
stos
mov
xchg
fwait
dec
cmpsb
popf
mov
popf
xor
repz
cmc
pop
adc
icebp
mov
lret
je
test
fidivl
dec
pop
adc
inc
jg
out
sbb
sbb
hlt
mov
icebp
mov
movsl
aam
dec
ljmp
cmp
aam
and
popa
sub
ds
push
lret
adcb
inc
adc
daa
mov
sub
pop
jno
add
push
mov
imul
adc
add
test
femms
sbb
cmp
out
inc
outsb
adc
stos
or
adc
mov
push
or
dec
lahf
incl
loop
ret
adc
and
loop
pop
nop
scas
mov
loopne
jno
ljmp
aas
insb
and
or
lcall
int
stc
add
mov
test
pop
cwtl
push
fisubrl
ss
lahf
xor
add
bound
jne
mov
pop
ljmp
cli
mov
dec
packuswb
daa
rorb
and
cmp
and
jb
and
push
xchg
repnz
mov
imul
insl
in
pop
ljmp
mov
pop
loope
add
pop
or
jae
lcall
lock
dec
xor
sbb
mov
sbb
cli
adcb
mov
add
pop
mov
and
int
dec
andb
popf
mov
inc
sbb
mov
rcrb
movsb
shlb
fwait
imul
jle
jb,pn
cmp
cmp
in
sbb
hlt
push
and
icebp
push
nop
rorb
mov
in
aaa
push
rcrb
add
stos
xchg
add
stos
pusha
xlat
inc
push
std
call
add
xor
daa
mov
jmp
sub
jl
outsb
and
xchg
test
jmp
jo
pop
push
mulb
aad
xchg
jle
fnstcw
xchg
push
loop
sbb
mov
dec
sbb
push
loopne
jo
push
pop
dec
mov
inc
pop
imul
stos
cmp
mov
adc
fcmovbe
fnstsw
sub
lods
add
scas
cmp
aas
cmp
popf
cmp
jecxz
cwtl
jmp
inc
xor
aaa
hlt
xor
mov
xchg
decb
add
aaa
daa
icebp
inc
scas
sub
xor
gs
imul
loope
mov
inc
cwtl
xor
js
add
movsb
adc
bound
rcrb
sti
xchg
adc
xchg
and
mov
scas
mov
popa
mov
xor
pop
fcomp
test
xchg
inc
clc
mov
pop
push
mov
imul
dec
les
mov
fwait
adc
inc
loopne
xchg
cmpsb
pop
sbb
dec
aam
or
rolb
sbb
inc
jo
push
sbb
cld
push
push
adc
mov
mov
xor
mov
mov
cmp
in
push
sub
jecxz
or
shll
out
fmull
inc
test
scas
add
push
sbb
lock
int
fwait
push
mov
inc
jmp
xchg
cmp
nop
movsb
popf
jmp
pop
mov
mov
or
pop
dec
daa
cs
jg
inc
outsl
es
hlt
sub
arpl
pop
adc
repnz
pusha
movsl
fiadds
jge
push
pop
rolb
jmp
pop
ficoml
std
inc
mov
mov
xor
clc
or
ds
xchg
ja
dec
imul
fldl
out
xchg
jp
push
xchg
lcall
mov
push
or
and
sar
add
lea
or
sub
dec
mov
sub
loope
pusha
popf
lret
pop
jl
adc
loopne
add
cmp
dec
sti
js
daa
and
test
sbb
cmc
psubq
mov
jl
daa
mov
js
jp
inc
mov
xchg
je
in
push
pop
xor
adc
push
jecxz
push
mov
lods
pop
sti
mov
sub
addr16
mov
test
lock
jne
ficoml
push
ja
cmp
lret
cmp
ljmp
bound
por
inc
or
push
or
mov
mov
in
xor
test
or
dec
rolb
leave
jle
sub
pop
sbb
imul
and
fildll
inc
cmp
xor
cwtl
jbe
jge
pop
pop
insl
inc
sub
faddl
mov
cmp
sbb
pop
cmp
movsl
jne
and
and
jns
lahf
cli
shll
aaa
add
add
and
push
add
jecxz
clc
mov
pop
icebp
movsl
add
mulb
and
sti
call
ss
and
sbbl
mov
out
insl
mov
xchg
sahf
bound
cmc
aas
cmpsl
or
sbb
push
icebp
cmp
aam
mov
adc
fstpt
jno
fxch
outsb
xor
ret
leave
les
sbb
push
mov
inc
aam
inc
scas
inc
scas
outsb
pop
rcll
or
or
in
and
mov
add
outsb
jns
lcall
sbb
in
xor
cmpsb
aaa
arpl
xchg
repz
cmc
mov
mov
out
push
test
pusha
pushf
out
pop
dec
inc
addl
into
dec
scas
mov
dec
add
xchg
pop
js
fs
cmp
and
ret
pop
rcrl
test
jmp
pop
mov
push
jge
push
mov
sub
repnz
xchg
lods
cmp
or
fimull
pop
mov
mov
test
mov
jge
lods
cmp
stos
ja
adc
fcoms
imul
outsl
ret
ljmp
outsb
push
aam
mov
bound
int
xchg
cmp
pop
notb
daa
loopne
jecxz
mov
loopne
pop
clc
outsl
fisubrs
cmp
mov
mov
jecxz
xlat
mov
pop
or
and
adc
add
imul
mov
cmp
jle
add
dec
cwtl
addb
jecxz
mov
mov
push
cmp
js
add
xor
xor
js
dec
lods
mov
in
and
mov
mov
imul
sti
jp
adc
in
cmpsl
xchg
jbe
and
mov
out
mov
div
jbe
fdiv
xchg
add
mov
push
mov
sub
jecxz
cmp
pop
add
jecxz
push
dec
mov
mov
dec
sub
cmc
jl
dec
push
pop
mov
shlb
sbb
aad
mov
rcrb
out
js
pop
movsb
adc
mov
push
scas
out
push
push
ja
clc
lds
std
pop
mov
jl
or
jne
inc
mov
xor
aad
push
mov
xchg
outsb
push
pop
rorl
popa
dec
inc
push
pop
ss
pop
adc
sbb
add
jo
jl
inc
mov
sbb
orb
xor
daa
jp
pop
aas
cmp
dec
int3
sbb
and
lea
adc
and
lds
das
sub
dec
cmp
jno
jnp
cmp
add
addl
daa
sub
frstor
jecxz
sub
mov
dec
jo
sti
push
fistl
xor
andnps
pusha
sub
inc
pop
mov
nop
int
nop
push
dec
jne
mov
in
cmp
cmc
push
popa
in
leave
fdivrs
mov
jno
mov
cltd
aad
pop
xor
in
sbbl
mov
loope
sahf
add
mov
shlb
or
mov
push
fnstsw
movsb
push
call
mov
les
je
sarb
pop
sub
dec
call
testb
xor
cmp
jnp
test
push
into
or
adc
imul
mov
jecxz
inc
lods
mov
lods
sbb
pop
jbe
dec
sub
jmp
mov
add
in
dec
xlat
mov
cmp
les
push
inc
cmc
xchg
push
stc
je
push
scas
sub
xor
mov
in
out
rorl
sbb
pop
mov
test
xor
and
jb
test
xor
adc
in
sbb
mov
xchg
jbe
out
mov
sub
add
imul
fbld
and
inc
loop
insl
fiadds
cmp
stos
mov
sub
flds
mov
push
out
add
push
lcall
movsl
hlt
mov
hlt
bound
inc
push
mov
stos
rolb
repnz
push
inc
mov
or
xor
arpl
loop
xor
aas
push
addr16
je
fucomi
push
addr16
and
ljmp
dec
jg
sbb
out
xchg
je
pop
dec
xor
and
imul
jmp
push
jbe
mov
or
adc
jne
ret
bound
cmp
pop
test
sub
jb
pop
dec
rcrl
push
push
insl
pushf
outsb
in
jno
mov
fcomps
inc
mov
ljmp
push
daa
mov
pop
test
sahf
outsb
je
inc
in
sub
push
aam
or
gs
in
mov
sbbl
std
out
cmpl
jmp
hlt
leave
mov
in
jp
pop
and
and
and
icebp
push
ror
add
shll
inc
pop
sbb
test
std
and
mov
xor
dec
xchg
push
shr
jno
pop
sub
lahf
notb
fldt
leave
in
jo
pop
pop
lods
aas
sub
lds
push
lods
into
push
push
int3
jecxz
mov
or
popf
lods
rclb
mov
insl
fimull
lods
pop
fisubrl
xchg
roll
mov
arpl
imul
sbb
xchg
adc
insl
loopne
sub
sahf
dec
or
lods
sbb
rcl
fldenv
fcoms
sub
and
xchg
aas
mov
imul
xchg
mov
popf
cltd
and
iret
mov
cwtl
push
jmp
divl
cmp
js
push
gs
les
cmc
xchg
rorb
dec
adc
ljmp
dec
ljmp
addr16
mov
and
xor
hlt
out
xor
xor
mov
or
jge
mov
xchg
aad
inc
notl
aaa
and
sub
add
or
mov
movb
inc
test
fwait
outsb
stos
fmuls
push
mov
rclb
sub
pushl
dec
and
lcall
negb
rcl
push
mov
jecxz
sbb
pop
push
fucom
add
imul
mov
jno
xor
scas
cmp
push
pop
pop
pop
mov
test
cmp
inc
imul
xor
mov
jb
lock
movsb
push
push
inc
stos
inc
es
xor
adc
popf
mov
mov
loop
add
cmpsb
cltd
iret
cmp
js
inc
in
mov
cmp
add
imulb
movsb
ljmp
inc
xchg
lods
out
mov
mov
add
cmp
es
mov
or
fs
sahf
add
sub
dec
fadd
jae
push
out
adcl
or
jmp
imul
int
pop
mov
inc
cs
mov
mov
lret
imul
xor
ffree
or
sub
push
mov
xor
repz
xor
jb
icebp
pusha
sbb
or
adc
cltd
push
outsl
xorb
pop
cmp
test
pop
js
ljmp
bound
xchg
pop
mov
or
cmp
adc
les
inc
xchg
fisttpll
aam
inc
inc
sub
andl
sbb
and
and
cs
and
mov
sub
sub
fldt
rclb
xor
jne
and
or
sub
js
out
push
cmpsl
mov
scas
inc
fs
pop
scas
icebp
add
lahf
pop
ror
movb
sbb
mov
mov
repnz
sub
leave
out
mov
cli
inc
cmp
pop
and
or
and
mov
add
dec
fwait
cli
push
pusha
ja
jle
testl
hlt
dec
out
or
add
scas
xchg
js
pop
outsl
mov
js
fldenv
jo
xchg
sahf
popw
cmp
push
out
repnz
in
movsb
sbb
pop
pop
or
icebp
adc
jnp
add
dec
andb
jo
and
ja
iret
pop
outsl
test
filds
shrl
xor
jge
popa
push
dec
push
in
mov
push
pop
fistl
dec
inc
arpl
js
pop
push
enter
das
dec
mov
push
add
lahf
jb
fwait
jbe
popf
out
add
mov
xchg
dec
clc
or
std
sbb
mov
or
sub
addl
in
int
and
cmp
xor
ljmp
xor
hlt
jns
adc
es
mov
inc
add
sub
pushf
and
addb
cmp
push
or
mov
decl
xchg
dec
stos
popa
sarl
mov
cmpsl
sub
dec
sub
or
push
xchg
std
and
push
pop
cmp
pop
ja
xor
fdivrp
loope
jne
flds
push
lret
imul
popa
subl
pop
js
loope
andl
cmc
mov
lods
stos
andl
imul
rorb
add
sbbl
jmp
mov
lea
jge
sbb
dec
adc
arpl
cmc
std
dec
pop
inc
cmp
push
sahf
dec
sub
pop
loop
outsb
orl
pop
lds
jg
dec
aam
sub
add
stos
cld
loope
mov
ret
aad
insl
jecxz
addr16
sub
dec
pop
or
imul
jnp
dec
stos
movsl
icebp
fcmovnu
jmp
repz
mov
dec
mov
add
dec
sbb
scas
rorl
pop
roll
loop
pusha
inc
imul
ror
mov
pop
cmp
out
jge
int3
in
rolb
or
movsl
arpl
push
out
mov
cli
sti
add
adc
pop
sarb
xor
rclb
pop
cmp
jg
orb
cmp
xchg
mov
mov
pop
or
xchg
popf
or
mov
out
mov
cmpsl
cmpb
mov
mov
add
push
push
mov
push
and
push
mov
and
imul
into
les
sub
push
jne
ds
in
fwait
lcall
and
sbb
mov
add
rolb
push
les
pop
aad
nop
lock
jecxz
test
lock
mov
inc
shrl
pushf
and
fisttps
pop
xchg
mov
popa
and
scas
addr16
in
cs
and
mov
ss
test
ljmp
cmp
and
cs
jp
push
das
lods
movlps
movsl
push
fwait
xchg
push
jl
sahf
scas
push
jne
jbe
sub
enter
repnz
into
cmc
adc
aaa
std
jecxz
sbb
in
inc
sub
xchg
aad
daa
shll
mov
cmpsb
inc
aaa
scas
add
and
dec
pop
mov
hlt
inc
or
xor
jmp
and
fldcw
rcrb
adc
iret
hlt
call
pop
push
mov
xor
sbb
popf
outsb
jmp
mov
cmp
mov
mov
dec
mov
inc
sub
pop
arpl
mov
inc
loope
bnd
cmc
sub
test
jmp
insl
push
jp
roll
scas
int
sbb
ret
mov
call
sub
pop
and
xchg
or
xchg
outsl
inc
sbb
je
fisttps
mov
idiv
sbbl
movsl
adc
dec
push
cltd
push
mov
xchg
adc
lea
ss
pop
push
loope
hlt
jecxz
push
mov
add
mov
mov
xor
xchg
lret
pop
push
adc
fistps
mov
jns
ret
neg
movsb
popa
jp
mov
sbb
pop
call
cmp
repnz
pop
dec
add
wbinvd
mov
pop
cmpsb
mov
xchg
mov
xorl
xchg
stos
dec
and
fistpl
xchg
enter
lcall
jle
sarb
cmc
push
cmc
test
mov
fsubrs
add
pop
cbtw
movsl
push
in
mov
rcll
cli
mov
jge
aam
and
or
inc
shrl
js
sub
jmp
xor
pop
cs
repnz
fstl
test
popa
lahf
lds
fsts
in
push
cmp
fstl
and
or
icebp
les
fst
into
stc
mov
mov
sub
das
pusha
fs
push
jo
and
scas
dec
ret
push
std
sub
mov
inc
and
ja
shll
jmp
sti
lret
pop
mov
rorl
mov
mov
mov
and
push
dec
pop
test
rol
sbb
push
movsl
or
sbb
lods
and
fstpl
insb
das
data16
sbb
push
xchg
icebp
sub
incl
ffree
bound
adcl
cs
sbb
pop
cmc
push
cmp
jp
dec
mov
cmpb
cmp
rcl
mov
adc
sub
das
add
push
cvtdq2ps
adc
sbbl
fiaddl
notl
aaa
pop
jle
xorl
dec
dec
loop
mov
adc
and
jb
popf
lcall
xchg
pop
jne
cmpsb
imul
dec
mov
mov
loope
out
cltd
xchg
jmp
mov
mov
pop
dec
adc
loopne
std
and
mov
es
and
and
xor
mov
adc
jne
push
or
stc
mov
push
pop
ud0
mov
lock
clc
dec
push
pmulhuw
sbb
sahf
jne
andl
add
jmp
mov
mov
dec
xorb
add
dec
addb
adcl
imul
pop
adc
stos
popf
in
add
inc
pushf
cs
xor
push
rcrb
test
out
movsb
xor
push
enter
rcl
mov
jecxz
fistpll
fdiv
sbb
sub
pop
loopne
dec
adc
mov
leave
sbb
negb
das
inc
and
jmp
inc
push
xchg
je
js
lods
sbb
xchg
pop
and
mov
lea
mov
out
xchg
mov
xchg
add
shl
cmp
cmp
clc
push
test
dec
push
cmp
adc
in
jg
cld
or
mov
lock
shll
popw
sub
call
or
data16
mov
sarb
lea
sbb
push
or
cmpsb
ljmp
test
lods
mov
inc
add
test
daa
jnp
lahf
aam
mov
inc
sub
xor
xorl
in
pop
jg
aad
call
and
xor
add
daa
push
xchg
outsw
xchg
inc
cs
leave
int
dec
dec
push
sub
nop
hlt
test
mov
dec
in
push
pop
push
test
cmpsb
sbb
mov
xchg
inc
jne
and
adc
jmp
or
jecxz
je
push
sbb
inc
xor
sbbl
sbb
pop
add
sub
clc
xlat
daa
inc
xor
in
jbe
push
cltd
imul
adc
imul
nop
add
add
dec
mov
xor
in
push
inc
inc
je
imul
cmp
sub
repz
out
loopne
jnp
in
sbb
add
jno
xchg
inc
imul
aad
push
fisttpll
mov
jle
js
sahf
jo
mov
arpl
adc
jne
adc
stos
testl
mov
rorb
outsl
xchg
push
arpl
aaa
mov
xchg
push
test
mov
popf
xchg
sarb
das
mov
sub
mov
aam
jne
mov
jne
add
enter
fwait
sub
leave
and
or
xorl
jge
add
mov
lcall
andl
jecxz
psrld
xor
jns
fwait
jno
xor
mov
aad
sahf
out
aam
push
je
pop
add
sbb
xchg
test
dec
sub
test
fmul
popf
int
inc
subb
mov
and
repnz
ja
mov
lock
pop
pusha
negl
dec
orl
inc
mov
stos
pop
lods
xor
xchg
loope
xchg
ss
cld
rolb
cvtpi2ps
or
call
shr
xor
cltd
dec
add
push
pushf
clc
gs
cmc
cld
pop
sbb
movsl
jmp
loopne
xchg
in
add
lea
and
bnd
cmp
sti
mov
adc
sub
jns
adc
call
loop
movsb
cli
iret
cltd
ret
scas
inc
jg
out
push
inc
mov
aam
jecxz
lret
mov
sahf
mov
xchg
pop
divb
pop
jne
jae
sbb
mov
sub
adc
bound
add
inc
add
sahf
out
js
lock
mov
xor
mov
mov
ret
cli
test
lock
mul
mov
sbb
mov
lods
jne
push
pop
mov
xchg
es
hlt
push
scas
push
std
pop
aam
push
fidivrl
in
or
outsb
xchg
mov
add
pop
loope
dec
mov
push
or
lret
xor
xchg
mov
sbb
xlat
inc
pop
cmpsb
inc
daa
or
mov
mov
scas
inc
stos
adc
in
movsl
int
lea
mov
add
das
popf
insl
push
ret
mov
mov
daa
push
popf
jae
or
ret
pop
test
inc
pop
cmp
lea
inc
bound
cmpsb
push
ljmp
fnstenv
adc
es
push
pop
add
adc
xchg
push
call
and
xchg
mov
scas
mov
xlat
sbb
popf
push
mov
xor
add
std
cltd
pop
mov
aad
and
xchg
ss
pop
outsl
int3
leave
adc
xchg
jle
andl
push
not
dec
lret
pop
pop
cs
cmc
shlb
xchg
ja
push
stos
rolb
or
rcrl
mov
loope
xchg
inc
movsl
jno
fcom
adc
int3
test
pop
ljmp
fisttpl
push
imul
and
cld
dec
jae
scas
mov
popa
ret
mov
sub
jmp
jle
mov
or
mov
lcall
cmp
loop
mov
jae
pusha
cld
movsb
mov
enter
mov
xor
and
shlb
pop
jmp
rcl
sbb
sub
arpl
stos
sbb
push
or
xchg
add
push
inc
mov
aas
cmp
adcb
xor
cmc
jmp
push
mov
push
mov
mov
xor
addr16
popf
mov
mov
xchg
add
and
mov
test
ja
sub
ljmp
or
fidivrs
push
and
cmc
push
dec
out
xchg
std
leave
pop
inc
dec
add
vrcpss
push
or
das
pop
mov
out
es
fisubl
ss
or
adc
mov
or
add
les
aas
cmp
and
lock
cmpl
dec
mov
sbb
adc
in
fisubs
rol
rorl
nop
popf
jb
xor
xor
pop
rcrb
test
pop
sub
into
cmp
lods
mov
outsb
dec
xor
cmp
sub
popa
dec
mov
ds
mov
icebp
add
cmpsl
ret
mov
xor
pop
aas
jmp
jne
dec
pop
fwait
or
inc
ret
push
add
jg
xchg
jecxz
pushf
cltd
loope
addr16
add
fiadds
lcall
aad
cs
or
push
dec
xchg
in
fsubl
mov
sub
insl
add
or
popf
xor
xchg
mov
push
add
test
ds
mov
add
sarb
push
cmp
lods
cmpsb
sbb
pop
jg
popa
pop
push
pop
mov
mov
dec
scas
andl
or
icebp
call
xchg
rclb
jp
fists
cmp
loope
jmp
sahf
leave
cltd
mov
add
cwtl
insb
js
inc
sbb
arpl
or
enter
xorl
cmpsb
push
add
sub
inc
lds
sbb
xor
mov
push
dec
add
test
scas
push
mov
hlt
int
or
sahf
hlt
xchg
es
sub
in
add
adc
jecxz
cmp
cld
hlt
or
aam
ss
or
mov
ja
mov
nop
sbbl
jl
mov
or
and
xchg
add
jne
sbbb
das
jge
fldenv
push
rclb
loope
bound
test
fs
push
jl
adc
testl
in
stos
test
rolb
dec
jge
and
adc
jo
gs
pop
add
sub
in
xchg
rclb
lods
loope
imulb
sarb
fiadds
xchg
bound
ljmp
xchg
xchg
call
jp
sub
out
xchg
pop
arpl
subb
stos
addr16
cmpsl
repz
aas
and
call
incb
das
push
das
sub
stc
push
adc
ret
scas
test
dec
rcrl
inc
push
outsb
push
mov
rolb
mov
mov
dec
add
call
or
int
add
negb
jbe
or
rclb
dec
dec
or
xchg
inc
pop
and
mov
jnp
gs
insl
and
pusha
je
ret
sti
or
push
inc
or
dec
das
mov
sub
xchg
out
dec
push
inc
jg
shrd
dec
and
aam
sub
scas
lock
mov
mov
nop
push
adc
or
add
mov
icebp
mov
outsb
jae
adc
inc
fldl
jo
sbb
cmp
decb
or
adc
xchg
test
jo
rolb
fbld
push
pop
mov
dec
mov
dec
mov
jecxz
cmp
popf
mov
in
int
jle
adcb
insb
jb
inc
cmp
mov
mov
mov
dec
lock
outsl
aas
stos
jp
xchg
loop
push
je
in
sub
call
test
sub
imul
xchg
or
cmpsb
dec
mov
xor
aam
sub
clc
ljmp
push
adc
stos
push
jmp
sub
iret
and
hlt
aas
inc
cmp
sar
out
push
rcll
mov
push
imul
xor
stos
lods
movsl
movsb
and
adc
das
cltd
bound
scas
cmc
pushf
add
icebp
inc
ljmp
scas
push
inc
mov
and
mov
imul
xchg
into
xor
jmp
and
xchg
or
std
add
lcall
js
loopne
cli
loopne
mov
xor
add
jecxz
push
mov
aaa
rcrl
pop
push
add
sbb
call
es
pop
push
inc
pushf
pop
pop
repz
incb
fidivl
jecxz
psllw
test
fildll
pop
dec
adc
ret
pusha
fnstenv
and
pop
int3
inc
in
sub
dec
negb
add
pop
push
or
lret
sub
mov
aam
inc
push
lods
icebp
nop
bound
cmpsl
es
sub
je
add
xchg
mul
sub
cmp
divb
call
in
mov
pcmpgtw
cmp
cmpsl
adc
jg
icebp
jecxz
adc
sbb
ss
sbb
mov
mov
data16
repz
call
and
pop
loop
adc
repnz
ret
int
pop
or
aam
or
imul
push
or
scas
xchg
jb
lahf
movsb
stos
cmpb
push
mov
inc
ss
mov
push
loopne
jmp
clc
pop
std
repnz
xchg
cmp
je
dec
loop
mov
mov
out
dec
jmp
push
inc
push
repnz
in
add
pop
in
stos
aaa
nop
and
xor
inc
stos
ds
idivb
rorb
ret
rcrb
mov
jp
jmp
inc
push
loop
or
shrb
sub
jle
push
es
pusha
call
lds
fsubl
dec
enter
jo
and
push
mov
and
add
or
fcmove
add
pop
aam
dec
mov
mov
cld
int3
pushf
mov
leave
and
sub
sub
test
les
lea
push
outsb
clc
sub
xor
mov
mov
nop
mov
mov
inc
xor
jecxz
fs
orb
inc
dec
mov
add
push
dec
xchg
in
lods
cmp
mov
test
cmp
pop
fldt
js
inc
sub
mov
jle
and
pop
xchg
movsl
popf
sar
dec
mov
mov
nop
inc
push
mov
adc
jl
push
cmp
shll
in
or
push
ss
call
cmpsl
fists
das
aaa
ss
xorb
repnz
mov
jle
outsb
inc
adc
rcrb
sub
jae
add
test
sbb
call
test
or
lahf
add
xor
iret
and
cmpsl
jg
fdivrp
push
push
loope
or
negl
notb
sub
pop
std
test
outsb
popa
mov
jne
push
loopne
jns
cmp
std
push
add
sahf
ljmp
and
scas
mov
sbb
shlb
fsubp
adc
aas
dec
and
adc
loop
xchg
inc
mov
ljmp
loopne
push
in
add
pop
or
das
int3
mov
and
jmp
sbb
pop
scas
xor
test
mov
pop
lcall
or
push
add
in
out
ret
xchg
dec
pushf
and
inc
into
push
pop
add
mov
test
push
and
pusha
lret
dec
mov
or
push
ljmp
cmp
jb
ljmp
pop
jae
xchg
aam
loope
arpl
jnp
cli
mov
sbb
mov
in
mov
ss
pop
cmp
je
fdivl
or
mov
jecxz
mov
add
mov
or
mov
push
loope
into
insb
add
jle
add
int
pop
fistpll
push
jns
pop
mov
inc
sbb
add
ljmp
fwait
push
and
or
rcl
mov
addr16
push
cmp
inc
cmp
pop
into
mov
pop
or
jg
ss
add
inc
push
push
xchg
test
std
push
ljmp
or
cmc
inc
popf
mov
cld
stos
lahf
mov
cs
inc
test
lods
xchg
imul
mov
fyl2x
lahf
test
dec
sub
lea
xorb
push
mov
enter
out
cmp
push
and
push
hlt
push
in
xchg
adc
lock
push
js
mov
hlt
inc
xchg
pop
inc
stos
mov
cld
stos
pop
in
mov
lret
rclb
imul
jbe
mov
repz
inc
and
mov
sbb
fsubrs
push
pop
adc
lds
and
imul
xor
or
sbb
rcll
icebp
jecxz
fcoms
inc
pop
mov
or
imul
pop
test
cmp
or
xchg
push
mov
add
mov
sbb
cmp
cmp
sbb
je
xchg
ret
imul
pusha
and
lods
adc
in
jg
adc
movhps
pop
push
arpl
test
dec
mov
add
std
out
aas
outsb
and
mov
cmp
push
jb
js
mov
subl
pop
adc
mov
in
repz
enter
jp
fwait
scas
add
xor
fimuls
dec
push
out
inc
cmp
lds
cmp
push
pusha
mov
into
mov
dec
dec
out
add
xchg
dec
push
mov
cmp
pusha
mov
mov
aas
call
add
pop
imul
test
cmp
jnp
jns
cld
pop
cwtl
jo
pusha
adc
xchg
mov
push
dec
sahf
pushl
mov
mov
mov
shlb
cld
mov
rolb
add
push
and
into
mov
push
test
mov
lea
or
popf
xor
gs
fs
outsb
mov
inc
add
push
js
push
jp
mov
fcoms
outsl
cwtl
xchg
ret
inc
cmovbe
aad
or
xchg
lock
dec
mov
out
sbb
mov
leave
outsl
adc
cmp
popf
jo
sbb
mov
jl
ljmp
mov
movsl
call
cmp
mov
sbb
sbb
dec
addb
cwtl
add
bnd
pop
loope
or
je
xor
mov
push
and
cmpl
mov
xchg
pop
cld
mov
push
and
ja
cmp
decl
out
adc
inc
pop
xchg
test
cwtl
dec
pop
ljmp
ret
xchg
vaddsd
mov
or
lret
cmpsb
mov
inc
cwtl
adc
inc
xchg
inc
repz
test
or
xchg
xor
sub
push
add
inc
sub
lock
out
rcrl
xchg
lods
in
outsl
push
cmc
jne
clc
add
out
test
push
mov
ljmp
mov
dec
bound
xor
jmp
and
and
scas
or
test
fildl
js
adc
fwait
call
std
aas
fisubrl
add
mov
inc
adc
jns
inc
pop
xor
stos
mov
mov
cli
mov
jmp
mulb
jl
jp
add
mov
test
ljmp
ljmp
xor
inc
aaa
test
rcrb
sbb
mov
sbb
loop
mov
and
and
adc
fmul
mov
cmp
outsb
lret
inc
or
dec
mov
jg
mov
and
or
gs
lock
dec
mov
test
inc
cld
mov
nop
cmp
push
inc
mov
push
cs
sub
push
or
mov
lahf
std
sub
sarb
mov
pushf
int
mov
mov
gs
mov
adc
mov
pop
xchg
adc
mov
dec
bound
push
das
dec
loop
andb
scas
pop
push
fcoml
shlb
inc
jp,pt
mov
pushf
roll
imul
jp
aas
jns
jmp
mov
inc
pop
mov
xchg
data16
mov
in
inc
mov
pop
mov
pop
dec
dec
push
sbb
lcall
dec
push
mov
push
in
and
sbb
lret
jno
jecxz
mov
push
adc
movsb
xchg
insb
mov
lea
mov
imul
cwtl
mov
lret
scas
mov
pusha
jl
ss
in
fwait
testb
cmc
push
push
pop
xchg
sub
add
fbld
stos
out
pop
loop
inc
push
and
mov
arpl
push
push
mov
dec
add
cmp
jle
sbb
in
dec
dec
out
rcrb
enter
push
nop
pop
mov
adc
fst
sub
add
push
ficoms
dec
sub
es
ret
and
push
into
adc
sbb
loope
sbb
xchg
push
pop
int3
xchg
or
insb
lcall
jmp
data16
ret
jb
imul
push
repz
pop
and
loope
hlt
orl
xor
add
sub
and
push
mov
loope
and
scas
icebp
or
ret
imul
cltd
inc
lds
test
adc
xor
sub
shll
jl
imul
dec
mov
ss
push
fistpll
mov
add
dec
notl
arpl
stc
xchg
mov
mov
insb
mov
sub
xor
jnp
insb
aas
sbb
pop
outsl
mov
and
add
mov
mov
imul
jae
movsb
loopne
pop
aad
sbb
push
xchg
addb
ds
js
pop
adc
push
push
xchg
sub
jl
mov
js
xor
jne
mov
outsb
loope
jne
mov
adc
jl
and
test
mov
push
mov
dec
mov
into
popa
sbb
inc
jecxz
or
std
xchg
les
mov
sbb
jbe
xor
lcall
cmc
aaa
sarl
sar
inc
mov
or
push
mov
dec
loope
scas
and
aam
aaa
and
mov
mov
push
dec
enter
adc
cld
jp
xor
mov
lret
orb
inc
movsl
fmuls
jne
lahf
cmp
inc
in
repz
mov
adc
ljmp
xchg
jo
lea
and
rcrl
mov
popa
filds
in
lcall
pushf
ss
cmp
mov
jle
push
dec
inc
mull
mov
mov
fabs
dec
dec
mov
div
fabs
xchg
daa
dec
or
adc
js
and
scas
sub
xor
mov
fsts
inc
fiadds
into
shrb
sti
std
mov
pop
clc
bound
jne
xchg
pop
rorl
and
jp
ret
fnstcw
mov
leave
mov
fwait
lods
pop
xor
cmp
add
mov
loopne
inc
movntps
and
inc
push
inc
mov
cmpsb
shl
fildl
std
aaa
mov
scas
jle
les
add
scas
xchg
adc
imul
jae
hlt
imul
scas
cmp
and
daa
nop
jg
ret
sub
xlat
scas
or
nop
out
cltd
cmp
or
mov
js
jmp
or
loope
subb
adc
mov
lcall
adc
adc
lret
das
in
fimuls
sub
dec
cmpsl
shrl
xchg
enter
fisubrl
mov
lea
out
xorb
xor
enter
jmp
mov
rolb
jae
ret
add
cwtl
xchg
add
rcrl
inc
push
sbb
movsb
and
scas
fnsave
inc
daa
sub
xchg
pop
test
pusha
pusha
int
pop
or
jo
cmpsb
loopne
push
bound
outsl
pop
mov
imul
mov
xor
les
js
ret
jp
leave
leave
pop
andl
dec
mov
sbb
sub
les
mov
adc
sbb
cmc
mov
sbb
mov
daa
rol
ljmp
ret
sub
sbb
mov
sbb
pop
adc
stos
sub
xor
pop
movsl
inc
in
pop
pop
pop
lods
adc
cwtl
fmul
xor
xchg
popa
add
jmp
adc
jns
rolb
jge
cmp
les
cmp
cmp
inc
rol
push
push
aam
pop
dec
andl
fisttps
inc
arpl
icebp
add
add
loope
aaa
cmp
in
fsubs
inc
mov
cmp
lahf
lret
arpl
cmc
jbe
sbb
dec
repz
inc
pop
dec
mov
pop
inc
push
lock
test
imul
and
mov
or
and
xor
dec
pop
jnp
sti
test
mov
jp
sub
sti
jne
xlat
mov
and
cmpsl
mov
rcr
dec
jp
add
xchg
shrl
jne
mov
mov
pusha
mov
arpl
push
dec
sub
mov
movl
repnz
pop
popa
cmc
xor
jbe
rclb
cmp
or
imul
in
sub
popa
sar
shrb
sti
sbb
ror
mov
stc
pop
iret
pop
lret
xchg
lods
jmp
sbb
adc
add
insl
aaa
sahf
or
adc
adc
jmp
sub
jp
sub
and
inc
ret
rol
test
add
fstl
pop
jae
sbb
cmp
jae
add
insl
lea
mov
mov
xchg
inc
and
mov
imul
jp
xor
dec
shlb
or
popa
sti
les
jno
gs
cli
pusha
movsb
adc
out
jecxz
pop
inc
and
and
adc
jecxz
cmp
in
mov
adc
inc
imul
push
test
dec
xchg
xlat
sbb
dec
sub
sbb
stos
mov
inc
fldl
ret
dec
jg
xlat
scas
leave
cmpsl
stc
in
testl
stos
shlb
shrb
icebp
loop
sarb
lret
mov
out
cmpsl
aaa
cmc
adcb
stc
sub
mov
push
cmp
jl
loope
cmc
jl
daa
icebp
or
push
outsb
jns
xor
icebp
fidivs
xchg
or
jne
fs
mov
lahf
mov
jne
push
popa
pop
sti
sbb
mov
xchg
lods
cs
sbb
cmp
bnd
jmp
mov
stos
mov
cmp
dec
sub
pop
les
mov
dec
aas
aas
hlt
fldt
in
lods
dec
xor
test
xor
rolb
subl
jnp
jmp
out
dec
sbb
jo
dec
adc
movsb
scas
lret
movsb
sbb
jecxz
in
cwtl
inc
orl
stos
cmp
or
xchg
js
scas
repz
cmc
push
inc
mov
icebp
xchg
mov
sbb
jb
mov
sbb
out
sub
add
shlb
add
rcl
push
lea
jbe
push
dec
jno,pn
add
rcrl
iret
or
test
mov
std
cs
cmp
mov
xlat
pop
mov
xchg
sbb
xor
addr16
xor
std
ss
cmp
js
mov
cmpl
fdivr
lcall
mov
push
gs
and
cs
push
movsb
out
and
adc
push
test
fnsave
mov
pop
pop
std
xchg
test
mov
add
jl
adcb
lock
call
adc
inc
xor
mov
cmp
jmp
aad
mov
in
sahf
add
push
vpinsrw
jae
call
add
cmpsb
cli
sub
ja
mov
sahf
mov
in
mov
popa
or
ret
psrld
in
or
out
push
jno
in
into
pop
rcr
test
push
sbbb
shlb
xchg
shlb
adc
and
sbb
pusha
aas
add
pop
adc
cld
pusha
rcrl
scas
xlat
inc
rcr
sbb
lahf
icebp
fistl
idivl
daa
shlb
loope
sub
fidivrs
sar
icebp
or
stc
ljmp
call
call
enter
mov
or
mov
mov
fidivrs
xor
pop
jmp
cli
call
ret
ja
sahf
dec
sbb
std
and
rorl
add
or
movsb
icebp
popl
add
decl
mov
lods
pop
mov
es
jge
out
pop
lods
mov
stos
and
fdivl
push
cli
mov
jecxz
add
mov
push
cmpsb
push
dec
fsubr
jp
cli
push
sarb
jmp
aas
mov
jno
cmc
or
fdiv
outsl
dec
mov
add
and
addb
in
jp
mov
pop
sarl
dec
cmp
inc
cmpl
fbstp
mov
scas
and
or
xchg
rcrl
mov
xchg
add
inc
inc
into
dec
and
adc
shrb
nop
sbbb
pop
cli
int3
movsl
sbb
adc
push
lcall
outsl
imul
sbbb
out
adc
inc
or
mov
mov
cmp
jp
push
mov
hlt
jo
pop
hlt
xor
or
andb
inc
pop
dec
insb
sub
divl
sub
test
xor
mov
loopne
ret
out
clc
fistpl
nop
aaa
add
or
or
cmp
js
lods
push
outsl
lods
rcrb
sbb
scas
jge
jg
cmp
xor
mov
lds
fs
dec
andb
sub
push
insl
iret
pop
cmpsb
cmpb
orl
cmp
xchg
mov
jns
rorl
mov
cwtl
jge
cli
jg
push
shlb
in
push
and
sub
inc
je
int3
shrb
add
mov
sbb
or
out
jbe
cmc
dec
inc
repnz
dec
push
jg
push
adc
daa
xchg
sbb
pop
negb
jg
jp
leave
lods
push
dec
mov
lds
je
pop
cwtl
je
xchg
loop
dec
mov
popa
or
in
and
in
ljmp
lcall
fsub
das
or
push
mov
mov
cs
and
repnz
xchg
orb
clc
cmc
sbb
xlat
arpl
add
test
ret
add
push
sub
mul
xchg
lock
sbb
pop
jecxz
in
push
mov
jle
mov
sbb
lods
sub
cs
push
lret
mov
mov
in
xor
mov
mov
rcrb
adc
cs
inc
pop
push
popf
rolb
imul
ss
add
lcall
test
aam
pop
inc
jecxz
in
js
inc
fadds
cld
ljmp
rorl
or
fisubrl
mov
sbb
ret
in
ljmp
mov
addr16
push
jge
xor
xor
sarl
push
call
add
cwtl
mov
adc
clc
ret
lods
and
mov
mov
mov
adcb
xchg
mov
and
pop
adc
pop
fmuls
test
mov
shll
decb
ret
sti
dec
cmp
call
mov
test
xor
std
jo
test
inc
adc
or
or
adc
sub
mov
push
scas
rcll
and
dec
xor
sti
clc
or
lahf
dec
inc
bsf
test
sti
scas
xchg
incb
push
ss
jnp
ret
xlat
outsl
xor
jle
les
jns
jbe
mov
in
jmp
jl
add
aad
sub
cmp
loope
test
adc
pop
test
pusha
cmp
xor
adc
inc
push
inc
mov
jbe
mov
add
add
outsb
cltd
sub
call
popa
mov
add
jp
out
xchg
xlat
pusha
rcrl
movb
add
ret
jg
dec
jb
mov
xor
pop
stos
inc
pop
je
mov
pop
das
jnp
jbe
repz
shrb
mov
mov
sbb
aad
psubb
cmp
sbb
adc
insb
cmp
fsubl
inc
push
inc
js
push
mov
xor
xlat
fildl
insl
add
jmp
clc
cli
xor
sbb
lock
cld
add
add
cmp
scas
in
loop
gs
test
sti
add
mov
adc
out
cmc
xchg
movsl
adc
stc
loop
xlat
jle
out
pop
int
cmc
push
fbld
outsl
mov
mov
cltd
add
mov
xor
cmpsb
es
js
adc
test
movsl
pop
loopne
sub
gs
push
movsb
or
js
xchg
push
mov
pop
mov
negb
fadds
mov
or
pop
jg
mov
fs
adc
test
or
shlb
pop
lock
out
inc
jle
cli
inc
ja
and
pop
insb
cmp
pop
xor
mov
mov
adc
inc
jo
in
clc
cmc
mov
sub
inc
jne
mov
mov
mov
cmpsl
and
adc
inc
arpl
das
mov
add
sbb
xchg
decl
cld
mov
xchg
frstor
inc
mov
adc
push
dec
pop
mov
mov
mov
sbb
outsl
aaa
jmp
mov
pop
adc
mov
int3
movl
test
lock
insb
inc
mov
add
ret
mov
dec
or
xchg
dec
sub
incb
cmp
and
jbe
movsb
push
add
pop
mov
ret
call
call
add
into
hlt
adcb
fists
adc
pop
pop
push
push
and
test
dec
scas
dec
les
sar
fbstp
mov
mov
or
jl
je
jp
jbe
push
enter
mov
add
add
gs
loope
sub
dec
sbb
sbb
add
jb
out
mov
std
ret
push
shlb
sbb
rcrb
xor
pop
lock
or
add
idivb
pop
xchg
xor
inc
pop
add
pop
dec
fs
sbb
mov
out
daa
mov
mov
aas
out
popl
push
andl
test
inc
pop
xor
mov
andb
mov
xor
test
xor
mov
ljmp
mov
sbb
xchg
lcall
cltd
add
inc
mov
push
bound
ljmp
rcrb
push
nop
js
cmp
mov
scas
inc
ljmp
cwtl
sbb
push
and
lret
std
aas
fidivs
or
xchg
mov
push
nop
adc
jl
or
rorl
xchg
jg
add
andl
lea
xchg
fimull
push
add
push
adc
stos
es
cmp
xlat
pop
inc
mov
cmp
push
xorps
sub
movsl
jae
cld
pop
data16
or
andl
and
fiadds
test
sbb
cmp
pop
lahf
dec
jo
loope
cld
inc
sarl
fs
jp
or
rolb
add
sub
cmp
sti
push
mov
cwtl
mov
mov
xchg
movsb
pushf
mov
rcrl
nop
inc
lds
sub
add
adc
aam
ljmp
or
inc
inc
cmp
sbb
in
mov
out
lods
jno
test
jle
push
jle
aaa
cli
sub
mov
test
pop
sub
or
les
pushf
xor
iret
adc
data16
or
shll
and
out
push
cmpsb
cld
mov
xor
or
jl
and
flds
cmp
cmp
add
or
add
pop
adc
adc
add
mov
pushl
dec
xchg
icebp
dec
push
mov
inc
bound
outsl
or
or
pop
rcrl
in
das
cltd
das
push
je
jmp
jb
mov
or
sub
jbe
xchg
push
shl
popf
lret
lods
mov
xlat
sbb
dec
and
add
scas
fs
xchg
jbe
jb
cmc
mov
push
mov
lods
cmp
mov
fisttpll
or
cmpsb
in
jge
cwtl
in
cmp
xlat
es
test
insl
rcrb
rcrl
adc
pop
hlt
pop
enter
stos
sub
mov
inc
ret
xchg
cmp
jmp
mov
es
inc
adc
sahf
sub
sub
in
add
xor
in
xchg
sub
xchg
or
pushf
xchg
ret
push
sbbl
cmp
mov
repz
sbbl
mov
dec
sub
mov
mov
inc
psubb
mov
mov
fdivl
lock
xchg
shlb
outsl
or
out
repz
bound
stos
cld
testb
in
loopne
insb
jne
fwait
sub
mov
and
and
aad
push
pop
movb
jbe
inc
rcll
push
lret
orb
add
into
ret
pushf
mov
call
sahf
ss
pop
jmp
sub
nop
into
push
in
addr16
xchg
enter
and
push
xchg
jle
or
push
out
or
inc
adc
and
xor
fdivl
dec
jne
hlt
xchg
sub
dec
popf
mov
iret
imul
outsb
je
bound
sbb
nop
cmp
adc
lock
fbstp
stos
xchg
bound
push
ds
pop
lcall
mov
inc
jmp
and
lock
aas
jne
or
outsl
and
inc
fcoml
mov
sahf
fimuls
adc
inc
xchg
pop
incb
mov
jmp
gs
das
sbb
push
xchg
outsl
in
cs
push
mov
loop
in
add
jnp
inc
pop
movsl
icebp
jmp
mov
sub
rclb
mov
orb
push
add
in
test
repnz
xor
ret
pop
mov
dec
mov
or
add
mov
xchg
inc
adc
mov
mov
addr16
loop
xchg
xchg
mov
cwtl
adc
out
mov
into
call
mov
pop
pop
mov
mov
add
jno
push
loope
sahf
inc
or
lods
jle
adc
testb
or
dec
cld
jmp
out
mov
ret
ret
mov
call
popa
leave
adc
adc
xor
popf
and
gs
jg
movsb
test
pop
or
cmpb
and
cli
push
dec
je
adc
cmc
or
subl
or
rolb
or
pop
jbe
adc
xor
mov
sbb
and
mov
in
test
js
cs
aas
sub
daa
add
pusha
cmc
xor
add
cli
je
pop
dec
pop
push
inc
dec
loopne
lcall
repz
xchg
dec
dec
dec
push
xchg
push
test
ds
lock
push
sbb
mov
adc
mov
sub
subb
insl
mov
iret
dec
sub
pop
cwtl
push
es
pop
jo
pop
jns
jecxz
mov
sub
cltd
sbb
adc
lret
push
in
and
lock
sahf
pop
sahf
and
loop
loop
mov
inc
fisttpl
test
inc
jle
sub
subb
dec
pop
jns
add
add
mov
pop
cltd
fldl
lock
std
jnp
cld
push
jle
xchg
mov
xlat
movsl
sbb
ficoml
sub
jae
cmp
in
or
loop
push
insl
adc
and
pop
cmp
outsb
lock
pushf
mov
sub
mov
push
adc
xchg
std
lds
sahf
cmp
jmp
adc
lock
mov
gs
jbe
dec
js
lea
rorb
mov
xchg
jg
outsb
imul
pop
cmpl
test
pop
and
inc
mov
arpl
mov
lret
std
mov
cmp
or
ljmp
jg
or
sbb
jle
cli
pop
xchg
rolb
in
nop
pusha
fisttps
movsb
cli
mov
out
mov
je
or
sbb
or
je
xchg
movsb
adc
and
adc
popf
sbb
pop
std
add
in
or
ds
incl
jp
fcom
js
out
jl
xchg
jp
movsb
int3
ss
pop
and
jp
dec
xor
xchg
add
ficomps
test
dec
mov
addb
and
scas
pop
cld
xor
lret
mov
xor
in
sahf
mov
mov
in
es
jl
ljmp
push
lock
dec
shlb
push
lods
mov
subl
icebp
lods
fcomps
or
movsl
repz
sbb
cmp
ja
sub
test
push
fstpt
popl
pop
mov
ljmp
pop
xchg
pusha
les
pop
fbld
add
push
adc
mov
adcl
push
pop
push
fistl
sbb
scas
ret
xor
pop
in
je
mov
cmp
jl
jne
mov
int3
or
mov
push
mov
cwtl
mov
gs
fdivl
cmp
dec
mov
in
adc
sbb
int3
lcall
insb
jb
sbbb
or
push
je
subl
sub
imul
xor
shlb
popa
xadd
insb
push
les
push
or
mov
mov
pop
pushf
inc
mov
std
mov
adc
rorl
inc
rcrb
push
cmp
sub
push
insl
cld
or
push
mov
std
mov
loopne
dec
lcall
mov
push
jle
sbb
loopne
inc
enter
push
mov
rcrb
push
cmp
pop
dec
pop
cmpsl
outsl
outsb
jp
cli
add
cmpsl
mov
push
pop
shl
pushf
lock
fucomp
push
xor
mov
or
sbb
stos
inc
inc
mov
sbb
test
xchg
fildl
mov
ss
mov
int3
cmp
stos
fmul
or
inc
cli
fmull
pop
cmpsl
aam
cmpsb
jmp
and
cld
add
arpl
push
jle,pt
div
xchg
add
jmp
or
add
xor
imul
ficoms
pop
jge
or
shrb
xchg
push
and
sub
cmpsl
add
stos
stos
ret
sbb
jle
je
cmc
xchg
mov
imul
sbbl
pop
nop
add
inc
test
xchg
std
inc
mov
shlb
add
out
inc
sbb
sub
hlt
test
les
sar
inc
add
mov
lock
mov
les
jmp
inc
pop
xchg
scas
push
jge
ret
aaa
pop
dec
nop
into
dec
jmp
jne
mov
fsubr
xor
pop
ljmp
adc
cmp
add
and
inc
test
jle
stos
xchg
outsl
ss
lret
add
add
mov
inc
fimuls
cmpsb
leave
shll
sub
gs
shrb
movsl
jle
mov
scas
adc
mov
int
xchg
jecxz
mov
je
fiadds
or
lods
jno
push
pop
loope
fwait
lcall
pop
ss
jae
scas
and
insb
mov
push
sub
mov
xchg
mov
mov
xchg
cld
push
mov
or
outsb
or
xlat
in
mov
ret
sbb
shl
sbb
loope
pop
hlt
test
inc
aam
nop
flds
aaa
push
fwait
cs
add
ret
xabort
cmp
shlb
or
cmp
ret
outsl
mov
inc
adc
es
adcb
jl
sbb
mov
movsl
sub
inc
loopne
push
xor
cmp
or
repz
pop
mov
lock
push
loop
out
push
jns
incl
popa
fiaddl
les
ljmp
scas
mov
in
shl
add
cmp
mov
cmpsl
add
shrl
subb
in
ss
testl
aas
cwtl
push
mov
clc
rcll
and
outsb
mov
dec
xchg
js
fmuls
jge
pop
out
out
pop
inc
ror
rol
or
push
lods
das
test
cmpsb
clc
dec
pop
addl
push
or
icebp
mov
insb
adc
shl
mov
jnp
lds
int3
fs
data16
xchg
inc
mov
pop
adc
inc
icebp
mov
es
out
add
lahf
shr
sub
xchg
cmp
sub
xchg
and
lret
jmp
into
inc
sbb
add
mov
rcll
cmp
cmpl
dec
sub
mov
adc
insl
mov
cmp
inc
or
add
stos
mov
mov
ds
les
jo
icebp
push
fdivrl
repnz
cmp
inc
xchg
int3
lock
mov
loop
out
mov
and
or
mov
push
call
out
xchg
test
fidivrl
pop
inc
jecxz
imul
jns
mov
enter
add
push
aas
fistpl
ljmp
jno
mov
dec
mov
sub
sbb
sub
jl
shl
or
jle
stos
cmp
aam
or
loopne
jge
pop
imul
testb
adc
push
and
push
inc
mov
test
test
test
fdivrl
adc
lds
scas
adcl
xor
jnp
adc
shl
pop
les
mov
inc
adc
push
ljmp
cmp
and
or
mov
pop
cmp
cmpsb
mov
repnz
inc
js
fildl
push
pop
sbb
cmp
lods
mov
jmp
dec
rcrb
mov
fadds
ljmp
ds
fidivs
and
push
jno
dec
add
mov
xlat
inc
pop
pop
fisttpl
adc
ja
aaa
fldl2e
sub
mov
push
mov
pop
pusha
mov
jp
sbb
test
push
jmp
or
mov
pop
push
push
jp
mov
ljmp
cmpl
and
mov
dec
pop
loop
icebp
dec
sbb
push
das
pop
in
mov
xor
ds
add
lea
mov
mov
call
sub
xchg
sbb
mov
adc
js
roll
add
fs
lods
sahf
adc
dec
aad
mov
leave
jb
addb
sbb
push
shrb
clc
bound
push
dec
daa
decl
test
xchg
clc
jb
pop
popa
mov
outsl
notb
sub
pop
mov
lods
andl
repz
jg
std
dec
std
push
daa
cwtl
inc
dec
lea
mov
adc
add
cli
aad
xchg
cmp
fcmovu
pop
inc
aaa
mov
test
test
pop
fidivl
aam
rcrl
push
fmul
and
adc
adc
bound
outsl
sub
lret
sub
test
mov
es
std
ja
and
adc
cmp
mov
scas
popa
sub
and
xor
push
shl
out
xor
push
pusha
enter
pop
jae
inc
test
lret
ret
and
ret
cmp
test
xchg
mov
mov
add
dec
out
add
sbb
push
dec
mov
sbb
dec
push
xchg
xor
push
xchg
inc
insb
and
xor
sub
and
jl
ss
test
xchg
daa
push
jmp
add
add
dec
ljmp
adc
inc
cmp
adc
and
jbe
pop
jo
dec
xor
cmpsl
popf
mov
xor
test
or
js
loope
or
ret
ds
enter
loop
test
push
clc
dec
ja
iret
std
andb
sub
sbb
dec
push
cmp
and
pop
xor
daa
sub
push
or
clc
xchg
mov
aaa
popa
jbe
pop
add
add
les
lds
and
out
dec
sbb
inc
adc
inc
push
jge
mov
insb
and
call
repz
adc
cwtl
loopne
ret
mov
clc
or
aad
dec
aas
pop
stc
push
sub
movsb
rcr
push
ret
pushf
sahf
jmp
mov
adc
push
mov
fcmovbe
adc
dec
aam
xchg
test
add
ret
clc
pop
rorl
xor
je
cvtps2pd
test
dec
call
out
popf
mov
mov
or
push
testb
add
lock
pop
or
and
and
sbb
mov
jns
fs
xor
lds
pop
ficompl
inc
fwait
insl
fildl
jns
outsb
fsub
pushl
adc
mov
jbe
adc
stos
ficoml
fcomp
lea
mov
scas
cmpsb
mov
push
or
fdivrs
into
sub
jbe
push
testb
xor
mov
push
ss
aas
inc
xor
inc
test
ds
incb
pop
in
pop
repz
mov
sbb
cs
inc
test
or
into
mov
jno
shlb
pop
arpl
and
pop
mov
sub
adc
pop
add
cmpsl
aas
push
ljmp
pop
test
cmpsb
inc
cs
mov
mov
sti
mov
pop
dec
and
jmp
add
dec
aam
or
adc
dec
add
mov
std
add
pop
push
sbb
or
icebp
adc
mov
lock
push
scas
loope
clc
dec
iret
ret
cli
pop
in
pop
pop
and
jns
push
cld
mov
add
cmpsl
loope
scas
xchg
call
scas
inc
iret
cmp
jmp
pop
icebp
lahf
mov
lods
rolb
push
ret
jbe
movsb
mov
outsb
fisubrs
ljmp
int
mov
cmpsb
addr16
cmova
imul
sbb
stos
mov
pop
fs
push
popf
xchg
lock
adc
test
addb
jbe
testl
mov
js
arpl
pop
jp
call
jl
fidivl
hlt
mov
sbb
call
aas
cmpxchg
scas
add
jo
popa
jne
adc
lods
cmp
push
or
push
push
test
push
inc
sub
out
lea
pop
or
repnz
cmc
xchg
mov
xchg
clc
insl
inc
pop
mov
xor
sbb
call
add
and
test
fdivrs
pop
aam
inc
pop
inc
adc
jns
mov
jmp
sub
jno
loope
push
sub
cmp
pusha
adc
xor
xchg
lds
mov
cmp
xchg
push
pop
push
push
lock
lcall
test
and
xorb
sub
add
icebp
outsb
mov
cmp
xchg
scas
clc
mov
pop
push
hlt
or
mov
cmp
sahf
or
jmp
repz
pop
mov
xchg
add
fisttpll
dec
pop
fldt
sbb
repnz
mov
cs
sub
rorl
rorb
cmp
cmp
sub
mov
aad
fidivrl
shlb
dec
cmp
mov
sahf
fmuls
push
fnsave
js
cld
add
pop
adc
xor
xor
dec
pop
or
cmp
cli
push
incl
add
mov
fdiv
pop
out
and
je
nop
and
jae,pt
int
push
pop
adc
repnz
inc
stos
push
ljmp
xlat
add
inc
outsl
and
push
jmp
xchg
push
mov
xlat
scas
xchg
mov
dec
inc
fstpt
outsb
sub
int3
hlt
xor
and
sub
inc
sahf
lock
push
xchg
int
mov
sub
incb
push
adcb
test
shl
rcll
cmc
xchg
sbb
adc
xor
inc
or
jl
mov
psubb
cwtl
push
insb
clc
add
loopne
mov
add
popa
call
fstps
pop
je
push
cmp
aaa
rorl
out
xor
jge
stc
andl
lcall
lret
lahf
sbb
xorb
ljmp
sub
nop
push
mov
loopne
pop
hlt
popf
mov
cmp
jle
movb
adc
and
xlat
cmp
xchg
mov
lods
lods
jecxz
outsb
clc
jl
sbb
es
jecxz
aad
jno
jne
jo
inc
inc
dec
out
ss
test
sbb
sarb
es
cltd
push
fsubrs
movsl
mov
repnz
push
ljmp
repz
data16
push
pop
push
lcall
rolb
adc
xchg
nop
mov
or
pushl
push
mov
lret
and
push
js
lea
bound
cmpsb
das
mov
loopne
mov
outsb
inc
jl
or
or
mov
lret
rolb
fwait
mov
xchg
inc
movsb
sbb
stos
jnp
dec
push
inc
sti
add
sbb
stos
mov
sub
stos
push
outsb
xor
xchg
hlt
mov
roll
inc
lcall
inc
insl
mov
incb
and
inc
fisttps
add
shll
mov
push
repz
mov
or
dec
aad
sbbb
push
lcall
mov
aad
aas
out
cld
jg
push
xor
sbb
push
cld
out
nop
mov
push
jbe
mov
sbb
and
aam
cmc
and
or
addr16
fsubrs
cmp
sarb
jg
cmp
inc
adc
cmp
in
pushf
xchg
xchg
inc
sarl
sahf
imul
popa
mov
add
add
xchg
inc
orb
jo
adc
adc
fistpll
mov
mov
mov
lcall
fsubrp
stos
rclb
sub
lret
mov
ret
xchg
inc
xchg
lods
mov
js
aam
cmp
cmp
in
pusha
mov
lahf
mov
sbb
les
dec
xchg
adc
mov
push
sub
call
test
ret
test
pop
ds
sub
push
stos
lock
test
adc
mov
clc
or
pop
int3
xchg
push
add
add
inc
xchg
inc
imul
mov
movsl
aaa
sub
mov
aam
adc
dec
sbb
testb
mov
lods
adc
xor
add
mov
inc
xchg
insb
push
xchg
movsb
loope
dec
or
and
xchg
iret
push
lea
or
adc
cmp
adc
jo
or
lock
and
adc
xchg
dec
cli
rdmsr
pop
or
clc
mov
je
inc
cmp
inc
clc
test
sahf
xorb
jg
sub
and
in
pop
jle
stos
jno
icebp
outsl
shlb
jmp
adc
push
repz
outsl
mov
jg
and
push
xor
loope
adc
ss
dec
mov
cmp
loopne
xchg
sub
and
xchg
cmp
fildll
repnz
lock
mov
aam
jecxz
xchg
mov
cmp
mov
sub
sbb
stos
xor
cli
sbb
cmp
or
cmp
mov
jnp
dec
shrl
pop
test
push
mov
xor
shl
out
add
stos
dec
mov
sbb
inc
ret
stos
mov
shr
es
push
xchg
clc
ss
mov
sub
or
xor
andb
xchg
jo
mov
sbb
mov
ret
xchg
mov
xchg
sub
mov
dec
jmp
addb
or
sub
or
xchg
mov
das
xor
cwtl
arpl
jb
lret
or
roll
xor
xor
xor
pop
mov
in
leave
mov
and
ret
loopne
aas
popa
inc
push
or
lock
dec
leave
inc
sub
addl
push
sub
shrl
sarb
pop
into
je
lea
jg
xor
mov
mov
cmpps
movsb
xchg
adc
xor
lock
lock
sbb
cli
dec
outsb
roll
fistpl
mov
cmpsl
mov
lea
rol
cmpsb
cmp
out
daa
jle
add
jae
or
scas
inc
add
sub
jmp
pop
mov
rorb
fxch
cmp
scas
mov
rcrb
lcall
sbb
ss
call
aaa
dec
push
loopne
sub
xor
lods
sbb
hlt
repnz
sahf
and
inc
shll
cmpsb
inc
hlt
ret
dec
cld
xor
fcompp
push
adc
mov
std
or
sub
mov
and
and
js
jne
cld
call
cmc
loop
mov
or
pop
in
test
jbe
xor
pop
nop
test
xor
inc
movsb
mov
inc
aam
int
loop
int
add
adc
aaa
pop
pop
inc
lcall
mov
mov
popa
cwtl
push
rcrb
lret
lock
xor
jne
xchg
inc
std
xorb
xor
add
daa
mov
dec
push
jmp
inc
mov
mov
xchg
adc
call
or
clc
out
or
loope
arpl
xor
fnsave
or
bound
mov
push
addb
sub
mov
ds
and
jp
sbb
add
mov
xor
inc
cs
scas
xor
les
lock
in
adc
leave
and
nop
fdivs
jo
enter
mov
adc
call
out
inc
out
fnsave
mov
data16
adc
hlt
arpl
dec
mov
sbb
fcmovnbe
lock
push
adc
repnz
movsl
insl
dec
mov
lea
xor
cmpsb
out
scas
stc
push
xchg
inc
xchg
mov
add
xor
push
ljmp
sbb
hlt
cmc
imul
cli
test
jnp
xchg
cmpsl
jg,pt
sub
inc
imul
sub
jbe
popa
sbbb
add
dec
popa
loopne
or
clc
pusha
std
push
inc
mov
inc
mov
xchg
test
test
sub
push
pushf
or
cmpsl
mov
mov
mov
push
cmc
xchg
ficomps
cwtl
push
ret
sahf
test
inc
jne
movsb
dec
push
cmpsb
fimuls
dec
into
push
cmp
inc
outsb
dec
adc
popa
loopne
xchg
scas
xor
push
mov
dec
xor
push
sub
test
xchg
icebp
or
pop
fwait
pop
lock
cld
and
jo
stos
neg
adc
scas
fisubs
aas
push
ljmp
or
les
mov
pusha
push
mov
mov
push
mov
push
xchg
and
jno
cld
hlt
cmpsb
pop
loop
xlat
push
stos
sahf
stos
outsb
xchg
test
movsl
sarb
push
push
jg
dec
rcrb
sbb
cltd
xchg
pop
fs
lcall
adc
push
rcrl
jae
xchg
in
pop
lret
sbb
mov
sub
mov
push
pop
or
mov
pop
push
sbb
adc
mov
jnp
jnp
mov
lea
jmp
mov
test
pop
bnd
or
cmpsb
dec
fbstp
lds
inc
shlb
dec
enter
cli
add
and
fsubl
rorl
in
mulb
test
out
push
mov
fs
rcl
inc
push
xor
mov
sub
mov
js
push
jl
std
jb
dec
adc
lret
inc
xchg
clc
cmp
push
lret
inc
push
ret
into
jle
into
dec
pop
testb
mov
mov
pop
push
shr
mov
mov
sarl
fs
in
xor
add
or
stos
dec
xor
mov
mov
or
mov
es
add
in
adc
shl
popf
push
mov
dec
xor
aad
daa
dec
mov
sbb
mov
in
jg
addl
xor
test
jmp
xor
mov
add
xor
adc
negl
dec
addr16
jns
lret
mov
mov
call
cmp
stos
in
cmp
popa
inc
xchg
sub
ret
lcall
push
cmc
pop
lret
mov
iret
fwait
mov
or
loope
pop
or
adc
cmp
xor
xchg
mov
pop
outsb
push
hlt
fwait
pop
stos
dec
push
stos
leave
jecxz
dec
clc
dec
out
js
inc
cwtl
lret
shr
ja
fsts
test
or
jne
lods
dec
dec
cwtl
ror
adc
sbb
or
pop
shrl
sbb
aam
aaa
xlat
test
das
mov
in
pop
mov
fwait
add
mov
aas
xor
xor
roll
push
das
add
int3
pop
daa
hlt
and
cltd
shlb
push
jge
mov
jne
jnp
ja
mov
lods
sti
fists
pop
sbb
mov
lock
int3
ret
test
add
test
loop
mov
jl
xchg
adc
xchg
sbb
bnd
imul
cmp
push
sub
and
dec
lods
fwait
add
ror
pusha
add
aas
fcmovnu
push
pop
push
test
dec
jle
repz
aas
hlt
mov
rcrb
nop
call
bound
inc
daa
lock
dec
sub
ficoms
pushf
out
pop
lret
xchg
add
adc
adc
out
push
sbb
imul
or
sub
xor
xorb
sbb
jne
xor
decl
and
inc
cs
fdivrl
clc
aam
jne
aam
lret
fisttpll
test
add
or
add
lock
adc
div
or
or
inc
adc
inc
or
aad
or
test
pushf
movsb
jmp
mov
in
or
xlat
mov
clc
psllw
mov
das
cmpsl
inc
push
ret
test
or
push
cmpsb
mov
loopne,pt
lea
ret
hlt
jnp
pop
arpl
dec
push
pop
movsb
mov
in
cltd
cmp
divl
cmpb
xchg
sbb
inc
adc
rorl
sbb
adc
jecxz
loop
insb
inc
dec
pop
repz
and
jo
lahf
sbb
pop
das
fldcw
cltd
out
adc
andl
stc
mov
sarb
mov
xor
mov
lea
in
loope
mov
cld
sub
aam
push
pop
cwtl
and
adc
lret
stos
adc
add
pop
jne
or
incl
inc
int
or
inc
insb
loope
xlat
ds
aad
incb
testl
incb
outsb
xor
mov
mov
add
pushf
cmp
push
add
or
jle
jnp
popa
rcll
push
stos
and
stos
inc
mov
or
xchg
frstor
loopne
imul
mulb
lcall
ljmp
movsb
cld
add
popf
fisttpll
sarb
xor
dec
inc
daa
movsl
pop
andl
mov
fisttpl
mov
xor
jbe
xchg
push
sbb
sub
mov
mov
clc
jecxz
js
xor
add
mov
outsl
clc
jle
or
adc
fcompl
pop
jp
add
cld
xchg
call
jae
je
inc
pop
pfrsqrt
daa
mov
es
stos
nop
test
inc
arpl
cli
lds
cmpsb
cmp
or
fidivs
nop
mov
shrl
jmp
test
jns
mov
mov
add
movsl
je
mov
mov
inc
xchg
pop
daa
push
clc
mov
inc
dec
dec
cmp
jne
inc
adc
mov
xor
dec
inc
dec
outsl
sub
inc
fisubrl
jecxz
cmp
cmp
pop
sub
xchg
push
outsb
cmp
outsb
fcoml
fwait
mov
mov
outsb
imul
push
jbe
dec
jge,pt
mov
xor
jge
das
push
je
je
pop
testb
stc
add
inc
add
fwait
cli
shlb
popf
fadds
ljmp
sbb
mov
cmpsb
aam
push
sub
movsl
jne
daa
pusha
jge
sbb
dec
mov
lods
sbbb
adc
aas
ret
xor
sub
in
es
cmp
pushf
ja
nop
add
cld
mov
adc
sbb
jno
dec
inc
pop
add
or
scas
pop
int3
cwtl
mov
outsl
mov
fcmovnb
mov
rorl
lret
cmpsl
dec
adc
clc
arpl
movl
outsb
loope
into
push
add
push
xchg
push
add
push
mov
add
lahf
popf
xlat
push
sub
xor
aaa
sbbl
adc
adc
sahf
lock
scas
mov
les
imul
test
push
pushl
cld
xchg
movsb
in
and
xchg
jae
fcmovb
dec
sbb
lcall
add
inc
imul
or
and
pop
jno
cmp
lods
clc
stos
into
movl
loope
xor
iret
popa
mov
cs
lahf
jb
popa
dec
cmpb
sahf
lods
or
xchg
loope
lahf
dec
xchg
sbb
fwait
cmpl
scas
aam
adc
loopne
jb
scas
icebp
sbb
jl
or
ljmp
fcomi
add
cmp
test
adc
cld
xchg
push
jl
adc
ds
jecxz,pt
out
pop
outsl
pop
pop
ja
aad
sahf
mov
add
push
pop
xchg
fdivl
sbb
cli
push
jo
inc
mov
and
jns
mov
aad
das
pusha
les
cmpsb
das
sbb
imul
mov
inc
imul
call
xlat
xor
addr16
sarb
xorb
xorb
push
add
loope
cmp
sarb
jmp
sbb
xlat
in
es
pop
lahf
loop
sbb
cli
js
push
arpl
jbe
or
mov
es
xchg
cld
mov
push
sbb
dec
js
inc
cli
add
jle
push
or
push
xchg
pop
push
jae
adc
fdivs
and
mov
dec
lods
mov
cmp
pushf
clc
jmp
dec
ljmp
popf
icebp
xchg
sub
movsb
push
sbb
cmc
inc
out
adc
jnp
jmp
lret
stc
or
movsb
clc
lahf
popa
nop
sub
mov
ret
mov
mov
fsubl
or
lds
add
cmp
insb
pop
xchg
scas
add
addb
sub
fwait
test
cmp
mov
push
add
ret
inc
lds
jle
sahf
inc
shrb
fiadds
popf
ret
dec
mov
push
bound
out
clc
push
add
lahf
add
loopne
lcall
filds
dec
lds
leave
loope
es
fstl
mov
dec
inc
in
jnp
sub
insb
mov
inc
mov
and
cwtl
inc
sbb
jno
mov
push
es
jbe
mov
push
push
sbb
dec
pop
bound
fbstp
fldl
xchg
mov
clc
loope
pop
aam
xorl
pop
cmp
std
test
pop
lods
iret
push
adc
mov
and
mov
out
cmpb
jp
xor
sbb
inc
jb
dec
jge
inc
movb
nop
aad
jmp
lea
jns
sbb
repnz
lods
pop
jg
sbb
int3
into
out
movsb
sub
mov
inc
inc
add
or
push
jo
les
fpatan
popl
imul
aaa
lds
ficoml
jmp
addr16
and
cld
adc
jle
jp
into
ficomps
aad
mov
idivl
xchg
or
lahf
and
jno
sbb
sbb
sbb
mov
rcrl
inc
sbb
xchg
rol
testb
sbb
fsubp
and
insl
adc
inc
mov
aas
sub
hlt
mov
mov
xchg
jl
call
and
dec
shlb
scas
mov
mov
jmp
popa
sti
loopne
jb
mov
test
mov
test
gs
test
shlb
jle
jo
inc
or
pushl
test
loopne
xor
insb
rcll
lods
push
rolb
push
rorb
xchg
arpl
cli
mov
push
ja
call
clc
inc
js
das
pop
xlat
cs
cld
lret
decl
xorb
dec
mov
lock
sub
add
cmp
fsubp
mov
iret
dec
jmp
add
pop
outsb
sub
cmp
add
repnz
sbb
xor
mov
sbb
and
push
leave
les
lods
mov
cmc
mov
inc
call
push
dec
ficomps
xchg
mov
stc
jns
mov
shll
fisttps
add
movsl
je
test
push
or
jge
icebp
inc
add
push
push
cmp
dec
das
push
dec
adc
dec
or
xor
xor
sub
pop
add
mov
addr16
add
fs
stos
mov
das
xor
and
add
pop
cli
and
mov
test
jo
rclb
out
pop
rorb
inc
dec
sar
push
push
outsl
insb
dec
mov
or
pop
test
xor
mov
out
xchg
jle
pop
pop
lods
jle
dec
popa
aas
test
add
test
pop
push
cmpsl
and
loope
test
xor
push
test
or
aam
ficoml
jb
and
and
mov
sbb
jne
insb
pop
mov
mov
add
lret
mov
ss
pop
xchg
rcrl
sbb
mov
loop
insb
mov
push
mov
mov
enter
xchg
nop
js
popf
subb
jp
mov
cmpsb
xorb
out
jl
xor
adc
pop
jg
ret
pop
les
insb
cmp
pop
ret
sbb
cmp
pop
mov
inc
jp
cmc
mov
loope
dec
adc
lea
mov
cmp
outsl
sub
sbb
ljmp
jge
popl
repnz
ret
sbb
test
outsb
test
push
sbb
lods
sbb
cwtl
shr
in
test
push
divb
jbe
jno
stos
sbb
add
ds
mov
add
testb
xor
cmc
ret
int
les
mov
ljmp
push
add
dec
jge
loop
sub
in
xchg
add
popf
push
inc
clc
aam
sbb
das
ret
xor
iret
sbb
mov
in
add
call
cli
enter
lahf
cmp
inc
pushf
and
bound
and
sub
push
cld
and
ja
lods
push
cmp
adc
pop
out
inc
es
das
ss
or
or
and
jecxz
dec
jecxz
cmp
ja
pusha
inc
pop
ljmp
pop
cli
dec
call
mov
stc
shl
popf
sbb
les
cmpsb
mov
push
hlt
adc
or
mov
aam
das
call
mov
adc
pop
add
mov
mov
xor
movsb
mov
sti
adc
mov
scas
outsl
cli
clc
dec
or
pop
add
push
xor
inc
ficoms
jg
bound
dec
cmp
insl
xchg
hlt
stos
lea
out
decl
mov
sarb
and
adc
fsubrl
sub
test
cmp
ret
fsubs
leave
shrb
icebp
sub
movsb
xlat
push
ljmp
je
andb
adc
inc
xchg
and
cmpsl
sub
ds
mov
or
lret
or
mov
inc
add
das
xchg
jle
test
inc
and
add
dec
ljmp
sub
mov
mov
mov
xchg
xor
insb
dec
add
cmpl
jmp
out
add
cmpsb
fdivp
mov
adc
cmp
and
insb
data16
cmpl
pop
fcmovu
jle
in
ja
aas
xchg
inc
cmp
into
mov
rorl
sub
inc
push
movsb
cld
mov
adc
ret
inc
and
ret
push
jecxz
jbe
cmp
movsl
sbb
jne
sub
imul
inc
sub
and
scas
loope
mov
pop
push
nop
jae
lahf
xor
and
pop
sub
jecxz
add
testl
daa
enter
push
jno
or
push
sarl
sbb
into
repz
loop
mov
jbe
pop
adc
xor
std
imulb
adc
push
mov
inc
push
xor
cmpsb
fdivl
pop
add
push
ljmp
lods
lret
mull
mov
dec
push
cmp
mov
adc
sbb
scas
dec
mov
popa
cmp
mov
jg
xor
or
inc
out
cmp
dec
pusha
adcl
cmc
pop
mov
sbb
mov
add
adc
out
fcos
jns
mov
add
std
dec
cld
mov
add
leave
jb
pusha
testb
inc
and
lcall
sbb
imul
xchg
adcb
push
pop
cmpsl
mov
mov
push
and
push
pop
hlt
xor
jecxz
cld
arpl
mov
jmp
and
mov
sar
sarb
icebp
lods
repz
and
pop
xor
mov
sti
and
sub
fcmovnb
gs
outsl
pop
add
mov
or
enter
ret
mov
mov
out
mov
mov
push
popf
or
stos
push
pusha
inc
xchg
stos
roll
xchg
or
cld
mov
je
cs
add
test
insl
inc
test
xchg
ljmp
push
fmulp
add
mov
insl
or
jge
test
add
pusha
sub
jge
jle
je
nop
jecxz,pt
inc
insb
pop
sub
adc
push
stos
mov
or
shll
dec
pop
cmpsl
jecxz
xchg
adc
add
and
cwtl
in
pop
mov
jp
nop
pop
dec
xor
add
inc
in
jo
and
sbb
insl
or
out
test
shl
imul
ret
add
repz
popa
or
dec
add
repnz
push
adc
add
mov
test
rol
and
pop
call
xor
push
mov
daa
inc
mov
adc
and
getsec
loopne,pt
jo
jns
outsb
xadd
out
cli
jae
outsb
sub
pop
mov
sub
mov
mov
sub
in
repnz
jno
adc
shrb
jp
or
inc
xchg
push
mov
loop
jo
sbb
dec
pop
stos
push
dec
insb
adc
add
fidivrl
nop
mov
and
mov
or
mov
and
cwtl
push
outsb
lfs
lcall
xchg
mov
and
push
dec
push
and
and
jle
rol
sub
call
mov
dec
adc
add
dec
mov
pusha
rclb
cs
aam
sbb
je
cmpl
cmc
lret
insl
pop
push
xlat
sbb
push
lods
or
popf
int3
imul
xchg
and
xchg
stos
mov
mov
or
adc
mov
fcoms
loope
mov
sqrtps
pop
cltd
push
cmpsb
xchg
out
inc
mov
mov
push
rclb
mov
lretw
mov
js
xorb
ljmp
adc
push
aas
repnz
sbb
pop
jno
lds
aad
lahf
ss
cwtl
jne
pop
jbe
lock
inc
sti
xchg
sbb
mov
addl
push
fdivl
xchg
leave
ret
mov
pusha
adc
outsl
cmp
inc
loopne
push
lcall
push
aam
mov
mov
movsl
lcall
in
push
jecxz
sub
data16
jmp
lock
sbb
rcr
hlt
test
lret
jnp
xchg
pop
add
scas
pop
or
cli
pop
roll
leave
aam
push
pop
jb
ret
mov
movaps
xor
movsl
push
shr
xchg
stos
pop
fimull
test
or
test
xchg
loop
mov
mov
xor
xor
sbb
jecxz
ret
sub
roll
push
int
jno
and
add
jmp
outsb
pusha
jmp
nop
xchg
sub
cmp
mov
xchg
les
adc
aaa
aam
popa
shlb
sbb
ret
sarb
fbld
xlat
sbb
or
stos
movsb
ss
cli
jle
dec
jne
sbb
push
pcmpgtd
mov
icebp
dec
popa
fstl
les
jecxz
push
ret
xchg
inc
adc
call
sbb
push
in
sbbb
inc
or
divl
mov
inc
nop
stos
cmc
mov
add
mov
int3
xchg
pop
cmp
clc
adc
add
or
sub
sbb
or
leave
ret
mov
mov
hlt
scas
fldenv
mov
lahf
and
or
mov
bound
rclb
cltd
dec
pushf
lock
or
inc
pop
push
jp
xor
and
dec
in
xor
pop
jl
sbb
xchg
push
in
xchg
arpl
cmp
shlb
ror
sub
add
jae
vmovlps
pop
je
lret
cmp
lahf
xor
push
mov
sbb
sub
cmp
push
hlt
ljmp
inc
movsb
pop
repz
negb
pop
imul
dec
fs
inc
push
mov
cmp
enter
hlt
lds
ja
push
jno
pop
or
ss
pop
scas
popf
push
mov
mov
dec
fsubrs
sbb
sbb
andl
std
les
xor
loopne
mov
mov
pop
cli
mov
stos
movaps
pop
cmpsl
scas
add
adc
aam
push
pop
stos
pop
jo
hlt
push
inc
rcr
or
jl
loope
push
subb
andl
mov
ds
cmp
push
imul
push
add
mov
mov
mov
mov
push
cld
jbe
and
add
lock
xchg
dec
stos
mov
lds
xor
xchg
andl
push
sbb
fiaddl
jb
push
inc
mov
sarb
xor
sub
xor
fcoms
jmp
inc
add
inc
scas
jo
xor
hlt
lcall
ret
add
xchg
jle
outsb
out
scas
cmp
xchg
mov
mov
ds
add
scas
pop
outsb
sub
cmp
dec
mov
and
jp
push
ds
push
loopne
sub
scas
subb
sbb
loope
pop
fiadds
dec
js
dec
mov
loop
std
mov
nop
xchg
incb
sbb
jne
push
xchg
mov
jnp
sbb
test
mov
add
jge
mov
cmpsl
in
ja
xchg
out
rclb
aad
push
mov
push
push
sub
adc
repnz
std
pop
fldl
xor
add
sub
bound
inc
dec
andb
xchg
add
push
testb
leave
scas
test
inc
jno
lds
leave
inc
xchg
outsb
jmp
cmpsl
cmc
sub
loope
push
js
add
sub
cmpsb
mov
shlb
inc
cmp
adc
cmpsb
mov
and
and
out
nop
sbb
mov
int
repz
xchg
push
pop
and
arpl
push
push
repnz
push
pop
data16
ss
lock
mov
in
push
push
sub
ret
shl
or
cmp
inc
inc
dec
mov
sti
mov
outsb
push
pop
in
sbbb
and
and
popa
test
pop
pop
push
adcl
ret
repz
inc
cmp
sub
mov
pop
sub
push
and
leave
xor
or
sbb
stos
shrl
push
cmc
pop
mov
cmp
cwtl
ret
or
test
lret
in
pop
and
js
sbb
push
mov
popl
or
ret
out
sub
inc
pop
int
lods
aaa
lea
popa
scas
mov
add
dec
imulb
add
lds
testb
sbb
scas
in
shll
fdiv
sub
dec
adcl
jl
test
cmc
add
pop
lods
inc
mov
call
add
jge
nop
pop
shrb
sub
xchg
xchg
push
leave
xlat
ljmp
and
mov
adc
sub
mov
sub
insl
or
jmp
mov
and
enter
xchg
mov
add
outsb
pop
iret
add
in
mov
lea
test
stos
add
movsl
push
and
mov
xchg
dec
pop
push
imul
and
or
bound
xor
les
push
pop
test
xchg
inc
sahf
es
push
out
push
test
nop
push
and
lds
sahf
pop
add
and
or
fsubs
and
add
je
sub
sub
or
pop
jnp
or
add
fisttpl
add
inc
stos
cmp
int3
cmc
inc
test
adc
jg
stos
inc
test
mov
rorb
jno
or
sub
outsb
mov
add
loop
jp
xchg
dec
out
fldt
sbb
les
scas
sub
fstpt
arpl
jae
leave
cmpb
outsb
push
xchg
pop
cmpb
jmp
lcall
hlt
push
test
or
adc
mov
or
lret
mov
stc
mov
hlt
add
ja
adc
lds
fdivl
mov
aas
ret
in
sub
popa
stc
rclb
xor
inc
loope
add
mov
int3
jge
jl
inc
mov
inc
mov
jb
push
dec
pop
jg
hlt
test
jno
fwait
add
push
xor
jns
jl
sbb
icebp
std
inc
xor
push
insb
sub
pop
stos
fisubl
loopne
pop
stc
loop
inc
scas
lea
add
dec
push
cwtl
stc
rorl
xchg
adc
aad
int
mov
mov
jno
call
lret
sbb
push
scas
mov
fcoml
imul
push
sbb
sub
sub
push
xchg
mov
jmp
cmp
adc
stc
icebp
cmp
repnz
mov
sahf
repnz
inc
push
loope
add
or
lret
mov
es
lret
sbb
or
mov
sub
xchg
andps
aas
js
loopne
inc
mov
mov
adc
xlat
xlat
sbbl
mov
insl
mov
sahf
jg
inc
mov
xchg
sbb
add
cmp
cld
mov
dec
xchg
fcoml
inc
push
jb
loop
cmp
fsubp
movsb
jnp
adc
mov
cmpsl
lea
inc
adc
xor
adc
fbstp
or
jo
int3
push
cmp
mov
mov
mov
test
cwtl
mov
subl
xor
xchg
xorb
mov
or
xchg
adc
jne
add
pop
mov
xor
jp
push
pop
mov
xchg
cld
movb
inc
jmp
pop
rclb
clc
sbb
ja
sub
mov
cmp
leave
xchg
and
mov
aad
pop
inc
std
test
sub
mov
push
gs
dec
dec
jg
sbb
sbb
movsl
loopne
mov
leave
add
pop
aas
pop
jp
jle
mov
add
xchg
jmp
fsts
shlb
pop
cmpsb
push
sbb
xor
shlb
fistl
mov
movsl
mov
or
int3
mov
mov
rcrb
clc
jnp
dec
sti
mov
cmpsb
cmp
sbb
rolb
or
xor
dec
sbb
ret
jno
sbb
fs
pop
cmp
fstpl
or
sbb
mov
cld
int3
jbe
lret
mov
scas
sti
xchg
fldl
mov
or
daa
dec
inc
mov
hlt
rclb
add
push
mov
add
xor
leave
in
push
xor
and
rolb
les
mov
ljmp
mov
sub
loope
add
add
stos
ss
adc
lret
mov
sbb
mov
orb
push
shlb
sub
push
sbb
adc
xchg
xor
js
mov
sbb
je
mov
shrl
mov
sbb
repz
or
pop
xchg
xor
cmpsl
ret
es
mov
mov
scas
into
pop
pop
lahf
xor
xchg
ret
mov
ror
repnz
loopne
jmp
xchg
stos
lock
push
pushf
mov
lret
add
pop
lahf
sbb
dec
clc
dec
movl
jbe
test
outsb
and
and
fmulp
popf
dec
cmpb
dec
mov
hlt
lcall
add
pop
add
and
pop
inc
adc
cld
or
roll
test
xchg
sbb
je
and
addl
and
jp
sub
xchg
aad
cmc
in
lret
popa
shr
int3
inc
cmp
add
fildll
jo
fnstenv
jle
and
mov
popf
insb
inc
outsl
out
push
xlat
mov
icebp
and
xor
mov
mov
and
arpl
cmp
out
jns
pop
cmp
in
pop
mov
scas
gs
rcrb
mov
lods
and
push
fisttps
and
jb
dec
rolb
mov
jle
adc
mov
push
orb
das
push
test
call
mov
mov
adc
and
sub
insl
pop
addb
scas
cmpsl
push
loopne
fmull
cmp
lcall
cmpsl
jns
jb
xor
inc
xchg
repz
fdivr
push
jg
pop
jp
rcll
jp
inc
dec
movsb
xchg
lods
iret
dec
inc
leave
inc
jmp
jp
sub
xchg
jl
sub
sbb
push
aaa
mov
das
mov
fdivl
adc
popa
dec
mov
xlat
jge
xchg
inc
add
loopne
pop
add
scas
insb
cli
jg
adc
into
adc
xchg
add
xor
mov
cwtl
xchg
push
sub
or
push
jle
dec
pusha
jl
aaa
out
cli
jecxz
aas
sub
xor
adc
call
pop
adc
aaa
jl
cmpsl
cwtl
pop
mov
push
incb
or
inc
scas
adc
adcb
rcrb
and
dec
or
ss
xlat
sbb
popf
or
pop
loop
daa
shll
cmp
push
out
add
push
insb
cmp
ljmp
fs
mov
aad
adc
jg
add
cmp
dec
push
add
std
add
inc
sbb
xor
pop
mov
lods
ds
mov
cmp
xor
pushl
add
movsl
out
xor
pushf
inc
mov
fcomps
inc
outsl
and
pushaw
cmpsb
xchg
popa
fsts
add
sub
mov
lods
xchg
mov
cltd
call
ljmp
adc
cmp
test
rcl
aad
stos
pop
fisttpl
or
sti
or
cli
lods
sub
xor
inc
xchg
loop
add
std
call
imul
out
xchg
sbb
adc
jmp
paddsb
push
test
movsb
in
add
pop
or
or
and
mov
ja
add
paddusb
cld
adc
scas
push
xchg
mov
xchg
push
arpl
or
sar
fs
fwait
cwtl
inc
push
push
fildll
pop
xchg
data16
outsl
jo
pushf
cltd
push
scas
xchg
adc
imul
fadds
fwait
mov
sbb
sbb
divl
mov
test
add
pop
in
pushf
dec
sbb
ror
inc
cmp
hlt
jge
mov
dec
out
popa
pop
icebp
xchg
adc
mov
pop
dec
sub
push
push
lock
jp
mov
es
mov
inc
sbb
adc
clc
and
aam
and
dec
jne
push
test
enter
fisubrs
int3
dec
pusha
movsb
dec
jmp
movl
push
sub
scas
ret
divb
sub
pop
sti
iret
test
cmp
dec
cmp
jl
sbb
push
jmp
sub
out
cmpsb
dec
add
adc
add
lcall
lret
cmpsb
cmp
or
or
mov
and
inc
daa
push
push
pop
jg
loope
jle
rorb
push
call
adcb
sbb
pusha
inc
orl
xorb
insb
and
rcll
ljmp
or
fs
xor
mov
jmp
lret
jo
in
lcall
cld
js
js
mov
push
lea
xchg
and
mov
lret
jg
loopne
jl
cmp
and
fadd
out
loopne
and
sti
popa
xor
push
push
sbb
mov
mov
aam
mov
loopne
xchg
rorb
sahf
cmp
lock
jns
xchg
test
sub
outsb
or
add
fisubrl
jne
mov
mov
xorb
jg
in
mov
dec
xor
fst
loopne
or
call
enter
fwait
jmp
pushf
adc
daa
sub
daa
sbb
aaa
stos
imul
fdiv
lret
popf
sbb
cli
data16
fildl
sbb
aas
nop
push
and
push
jbe
scas
inc
std
inc
dec
jae
push
data16
inc
add
dec
mov
imul
push
mov
push
inc
push
jnp
pop
and
fs
inc
jle
rclb
inc
cmp
mov
push
fbld
fwait
pop
pop
mov
xchg
lods
clc
xchg
xchg
ds
rorb
lret
in
lock
pop
jge
push
mov
sahf
roll
cwtl
sub
incb
jae
in
clc
mov
cli
stos
jmp
add
lock
jne
and
jb
push
push
sbb
test
mov
dec
pop
negb
enter
push
stos
icebp
int
outsb
sub
decl
and
out
pop
hlt
xchg
xchg
fcoml
imul
mov
and
and
test
movb
or
mov
jmp
aaa
shrb
ss
jle
xor
push
stos
mov
std
dec
jo
pushf
jno
pushf
ret
gs
fiadds
ret
dec
xor
mov
xor
mov
add
or
jle
cli
pop
jmp
sbb
loopne
mov
loopne
sahf
icebp
adc
lea
mov
ficoml
pop
xchg
shl
sub
adc
add
bound
faddp
mov
out
xlat
pushf
dec
pop
mov
pop
sbb
sub
fstps
popa
add
push
cmp
inc
shrl
push
movsb
addr16
xor
ret
dec
iret
pop
lcall
pop
sahf
dec
cli
cltd
or
mov
lcall
je
or
adcl
xchg
adc
mov
push
jb
lahf
sbb
add
aaa
add
lods
ret
repz
cmp
adc
sub
push
inc
xchg
mov
call
pop
popa
pop
lock
rorb
scas
sub
mov
mov
mov
pop
popf
sbb
fdivs
filds
sbb
or
mov
js
loope
aaa
jo
add
les
xchg
fsub
cmp
inc
movsb
lock
jle
sbb
cmp
dec
pusha
mov
bound
data16
cmpsl
xor
pop
dec
cmpsb
push
sub
roll
sub
mov
pusha
lcall
dec
addb
or
mov
cmpsb
movsl
call
cmpsb
jle
push
filds
test
sub
and
or
xor
repz
repnz
aam
lock
xchg
cltd
mov
add
mov
jp
cmp
adc
add
adc
fidivs
push
lahf
insb
xchg
jb
xor
lds
movsb
push
mov
push
loopne
xor
adc
jno
cmp
enter
jno
imul
cmpsl
mov
and
sbb
sbb
andb
hlt
or
jae
pop
into
push
xlat
fnstenv
pause
adc
dec
or
mov
call
xor
stos
jmp
cwtl
imul
lock
movsb
mov
xchg
xchg
xchg
stos
mov
and
incb
inc
aam
jo
inc
insl
and
add
or
pop
les
adc
cld
mov
or
mov
or
fsubs
iret
fstpl
sbb
push
adc
aas
inc
cmp
nop
sub
inc
pop
sub
push
xchg
or
lock
incb
icebp
lahf
add
xchg
mov
mov
dec
stc
and
and
fimull
data16
ficoms
sub
jmp
ds
jle
and
add
ret
out
test
rcrl
mov
sub
inc
icebp
fdivs
sub
pop
sbb
testb
test
fs
aam
mov
sahf
cmp
mov
sarb
xchg
push
jbe
out
xorb
pop
cmc
icebp
xchg
add
mov
jle
fmuls
lahf
and
xlat
and
jnp
lock
push
inc
push
fwait
and
lea
sahf
adc
xor
pop
mov
jo
add
lock
pop
xlat
or
xchg
push
fnsave
dec
cli
xor
fmuls
test
call
loopne
or
not
loop
rcll
mov
insb
sbb
mov
mov
add
bound
into
push
or
test
cmc
cwtl
insb
push
into
add
dec
orb
push
xchg
outsb
xor
dec
daa
sbb
cld
loopne
or
jmp
ljmp
fstl
cmp
imul
adc
sbb
stc
jg
xor
xor
mov
fstps
jns
stos
add
aad
sbb
push
inc
stos
in
sub
jns
and
inc
jge
repnz
aad
xor
repnz
cltd
in
dec
das
cmp
adc
inc
out
add
pop
xor
movl
mov
mov
add
stos
jnp
or
aam
jl
ljmp
daa
loopne
push
mov
cli
lock
push
sub
mov
mov
push
mov
mov
inc
out
mov
shll
add
scas
push
sti
fisubrs
lret
lods
stos
test
hlt
inc
inc
push
mov
mov
ficompl
or
aam
push
fdiv
cltd
dec
xor
sub
movsl
jo
clc
ficompl
test
shl
and
test
sbb
out
sub
sbb
or
ss
or
pop
movsl
dec
call
mov
inc
mov
mov
sbb
fs
dec
adc
fmuls
inc
dec
dec
pop
ffreep
je
pop
insb
rcrb
and
xchg
clc
mov
addl
mov
push
add
ljmp
add
test
add
ja
bound
clc
loope
dec
fwait
push
pop
dec
pushw
sbb
lods
or
mov
jle
fsubp
jle,pn
loope
and
enter
rcr
outsl
lods
in
jnp
mov
mov
loopne
add
mov
je
xchg
cmp
bound
test
outsb
cmc
mov
cld
mov
sti
frstor
repnz
add
pop
push
mov
fldenv
pause
xchg
cmp
test
ss
mov
xchg
mov
fucomp
fadds
sub
pusha
mov
add
or
aam
push
mov
xchg
add
cmp
xchg
adc
sar
je
inc
sub
jno
fistpll
int
jb
sub
xchg
mov
test
fmuls
mov
cmp
repnz
push
ds
movsb
ret
mov
mov
add
fwait
push
push
push
enter
insl
enter
repnz
and
jp
jg
cld
cmp
dec
subl
mov
dec
add
cmp
sbb
andl
or
call
add
jno
leave
dec
les
cltd
jno
dec
xchg
adc
clc
or
add
inc
ret
outsb
pop
and
lcall
inc
out
add
mov
sbb
jmp
jne
repnz
lods
inc
sub
mov
push
loopnew
mov
ret
mov
outsl
add
pusha
mov
cmp
fnstenv
frndint
mov
push
sbb
ret
fwait
pop
shlb
fiadds
std
xchg
mov
push
push
out
lret
sbb
mov
xchg
pop
fidivl
aaa
dec
xchg
nop
pop
int3
mov
ja
jmp
inc
pop
add
sbb
adc
test
mov
es
jbe
subb
push
insb
test
into
inc
cwtl
add
sbb
jbe
sub
les
pusha
ret
js
adc
in
das
je
mov
inc
pop
xor
jo
and
inc
outsb
cmp
dec
cmp
push
mov
je
in
jb
jge
subl
test
jo
cmp
ds
mov
adc
sahf
aas
es
aaa
leave
inc
push
dec
inc
sub
mov
es
mov
insl
test
cld
jmp
sti
push
push
or
jle
dec
pop
lcall
jo
stc
xchg
lods
rcr
or
in
and
lock
pop
mov
daa
xchg
loope
shll
jmp
lods
cmpsl
fs
cmp
cmp
testl
jecxz
shrl
mov
mov
std
inc
js
into
loop
std
cmp
jns
lret
xor
mov
and
movsb
jecxz
dec
dec
loop
scas
push
or
sahf
jnp
pop
add
jmp
rol
cli
xchg
push
les
into
or
cmp
push
xchg
xchg
std
pusha
push
shll
mov
jmp
cmpsb
sbbl
sub
mov
sub
adc
and
push
sbbb
ss
cld
negb
movsl
outsl
incb
pop
iret
or
shrb
mov
cld
fs
sub
sbb
sbb
into
or
nop
pop
push
inc
into
mov
insb
add
sbb
jle
stos
jmp
pop
shrb
add
mov
sub
data16
add
leave
arpl
shll
out
or
icebp
mov
lods
pusha
or
add
ficoms
adc
enter
inc
xor
ror
mov
shll
movsb
or
jp
or
xor
js
stc
loope
mov
or
lcall
fucomi
xchg
int3
xor
adc
aas
fimuls
gs
ss
das
sbb
xor
ja
fisubl
mov
and
mov
push
movsb
sub
pop
ljmp
sub
jbe
xor
pop
scas
sub
stos
pop
ret
mov
enter
lock
and
and
mov
hlt
pop
es
push
sti
pop
jmp
and
aas
cld
mov
xor
rorb
dec
aaa
arpl
dec
or
mov
adc
repnz
add
and
or
xchg
jbe
sarb
das
clc
sub
inc
push
fabs
or
stc
dec
sub
shl
adc
cmp
mull
adc
bound
mov
jb
sbb
or
aad
add
add
xlat
mov
scas
xor
fisubrs
mov
test
inc
rcrl
mov
inc
stc
push
xchg
xor
movsl
dec
sub
sbb
ljmp
rcrb
pop
mov
cmp
push
xor
lea
xchg
decl
dec
lods
cmpsb
mov
js
or
add
loop
push
add
rcll
inc
loopne
inc
subl
cs
lahf
xchg
fmull
xor
pop
dec
rcrb
es
add
mov
mov
adc
rcr
cltd
jp
and
jecxz
cmpl
cmp
cmp
cmpsb
add
inc
mov
inc
push
fs
pop
cmpsb
push
xchg
and
jg
pushf
bound
cld
fpatan
mov
test
push
sub
or
sub
sbb
and
ss
cmp
clc
mov
pop
repnz
jmp
loopne
pop
or
xchg
lock
pop
mov
into
dec
fdivrs
outsb
sub
mov
sub
push
lahf
mov
xchg
mov
jl
xchg
ret
or
push
pop
lock
mov
js,pn
int
scas
push
fidivl
insb
fwait
outsb
inc
add
sub
mov
xchg
out
mov
ret
sbb
add
aaa
mul
cs
mov
inc
mov
repz
in
jl
xchg
js
pop
dec
andb
imul
jae
rcrb
push
sub
movsb
inc
sub
fwait
push
mov
int
cmp
jle
movsl
mov
leave
loopne
ljmp
mov
loop
mov
add
mov
imul
cmp
insl
nop
fadds
cmpsb
jmp
aam
movsl
mov
jb
orl
push
push
jnp
mov
aas
aad
push
xor
mov
test
imul
pusha
sbb
sub
and
out
es
mov
mov
bnd
dec
pusha
push
int
jbe
inc
or
mov
enter
enter
mov
xlat
xchg
push
hlt
xchg
cld
cmp
mov
dec
cmpsb
and
add
fwait
clc
mov
repnz
add
mov
sub
push
call
scas
jmp
je
lods
mov
mov
rorl
js
lods
clc
arpl
js
rcl
sub
mov
inc
sub
addr16
cmp
aam
das
lock
push
dec
mov
xor
icebp
mov
mov
push
pop
icebp
cltd
frstor
sub
add
add
add
shlb
sti
sbb
add
pop
sbb
sar
test
push
mov
add
cmp
adc
sbb
sub
lds
push
nop
cmp
or
fdivrl
aas
cmpsb
test
in
jmp
call
xor
push
inc
les
enter
cli
inc
imulb
inc
mov
imul
nop
jno
xchg
adc
cmpsb
inc
mov
and
pop
fnop
jle
fisubrs
jmp
or
push
popa
lcall
mov
xchg
repz
mov
sbb
rcl
jnp
fdivrs
jbe
test
push
mov
cmp
push
and
addb
inc
lahf
cli
cld
jg
push
pop
add
xchg
loopne
cmc
xchg
nop
lea
cmp
adc
mov
dec
cmp
loop
enterw
fdivrs
add
and
ja
xchg
xchg
pop
movsl
xor
ja
mov
inc
adc
outsb
adc
mov
aas
ss
dec
inc
jle
wrmsr
fdivr
scas
jnp
add
push
nop
cmp
mov
shl
jg
mov
mov
xchg
push
sbb
nop
rorb
mov
sub
mov
mov
xchg
adc
mov
fwait
mov
inc
fistl
imul
sub
cmpsb
repz
cmp
cltd
das
inc
call
pop
jge
jle
sub
movsb
xor
xor
push
push
pop
fwait
add
cmpsb
pop
je
out
sti
add
xor
arpl
mov
sub
mov
and
ja
add
or
mov
mov
lock
dec
cmp
test
add
leave
push
imul
sbb
test
inc
bound
aam
xchg
cmp
fs
leave
xchg
jmp
dec
outsl
int3
jns
jp
scas
nop
arpl
push
insl
inc
ljmp
sarl
je
add
fistpll
inc
sahf
test
jne
aaa
cmovne
jbe
rorl
inc
rorl
ss
adc
fs
lahf
mov
add
add
push
push
or
xchg
and
jae
or
push
xor
mov
adc
lock
dec
pop
mov
lahf
xor
jge
je
jle
jp
clc
stos
fwait
and
mov
sbb
out
inc
sbb
add
cs
out
dec
inc
je
xchg
dec
adc
jg
inc
ss
cmpsl
aas
jmp
jno
sbb
incl
pushf
pop
add
mov
fstps
mov
pop
rorb
pushf
pop
xor
push
sbb
and
ja
cli
push
jle
lods
aas
lcall
inc
add
dec
pusha
das
ret
pop
mov
pop
sbb
cmpsb
hlt
fidivl
and
mov
push
mov
cmp
shl
push
push
out
push
ss
repz
ljmp
aas
and
incl
cmp
xchg
pop
imul
xor
mov
lret
dec
js
shlb
test
jge
lcall
pop
mov
push
pop
mov
ret
mov
jle
lods
ret
sbb
je
sbb
mov
fdivl
iret
loopne
jecxz
outsb
mov
in
jo
icebp
jg
mov
jle
push
push
push
scas
add
inc
or
clc
and
pusha
adc
outsl
std
and
fstl
add
adc
jl
or
pop
loop
push
dec
mov
inc
loopne
push
add
fdivs
xchg
mov
push
int3
add
leave
add
jne
lret
cmp
sbb
and
movsb
aas
inc
stos
inc
jmp
and
ss
xchg
lods
inc
adc
aas
push
inc
add
ffreep
fwait
andb
cli
sub
or
pop
inc
add
aas
push
ret
ljmp
aaa
or
push
dec
cli
push
test
or
es
mov
jns
shrb
loop
ja
adc
jl
cli
ja
filds
loopne
faddl
inc
or
mov
divb
add
cld
imul
adc
sbb
and
pop
dec
data16
xor
inc
pop
mov
push
and
cmp
stos
ljmp
int
add
sub
push
or
enter
xchg
ja
cwtl
add
add
xor
sub
out
xorb
xor
inc
cmp
cmp
push
cmp
xchg
jb
loope
movb
sub
pop
outsb
pusha
jno
push
sub
mov
outsb
lock
inc
adc
jbe
ret
cmp
and
loope
add
jo
mov
dec
mov
repz
mov
sub
cs
mov
mov
mov
shlb
jb
ljmp
add
push
ds
icebp
xchg
adc
loop
rol
mov
mov
jle
cmp
or
push
insb
adc
lcall
sbb
rcr
mov
push
pop
fcompl
sbb
fs
push
andnps
ss
andl
xor
mov
cld
push
rcl
push
out
mov
mov
or
mov
int
sub
and
xchg
push
cld
pop
ret
or
push
cmp
mov
and
clc
xorb
call
aas
js
jae
mov
leave
jl
fdivs
je
test
mov
fisubs
arpl
ret
ret
pop
cli
mov
jmp
inc
sbb
cmpb
popf
fnstsw
add
push
out
jp
andl
repz
sbb
loopne
inc
mov
out
sub
ret
pusha
hlt
or
jo
sbbb
jb
xor
adc
loopne
pusha
or
cwtl
dec
xchg
es
shll
mov
pushf
and
cld
clc
aad
mov
js
mov
nop
mov
cmp
xchg
or
aam
xchg
jmp
mov
inc
jle
test
pop
repz
sbb
jb
push
inc
jnp
add
rol
adc
pop
and
inc
xor
int3
test
and
xchg
ficoms
pop
cmp
mov
adc
lea
hlt
sar
sub
xchg
in
and
mov
leave
push
dec
popf
hlt
ror
lods
adc
and
add
in
insb
mov
dec
cld
push
movsb
lods
dec
cmpsb
test
add
pop
jns
push
and
dec
mov
inc
orl
insb
loope
xchg
enter
adc
xchg
aaa
mov
clc
cwtl
dec
pop
clc
pushf
jl
outsb
mov
and
js
stc
fdivl
jbe
mov
sbb
aaa
add
in
lcall
cmp
push
dec
push
lock
push
fndisi(8087
ret
cli
cli
push
push
shrb
hlt
push
out
sahf
rorl
push
xchg
rolb
inc
mov
jecxz
push
mov
and
loop
subb
lock
das
repnz
iret
mov
movsb
sbb
lods
std
jg
mov
clc
dec
sahf
xor
push
jg
pop
cli
test
sub
mov
pop
adcb
and
push
push
or
lret
loopne
and
cmpsl
or
dec
lahf
ret
mov
ss
out
outsl
xor
rclb
mov
shl
incl
mov
adc
add
jl
dec
ljmp
sub
jne
or
inc
aas
clc
and
cmp
les
arpl
sbb
mov
jle
dec
lods
repz
js
movsl
jae
out
or
or
les
std
loopne
adc
add
adc
mov
xchg
aad
jo
ss
repz
inc
into
movsb
sbb
add
fiaddl
adc
add
bound
jp
fcmovb
ja
dec
mov
pushf
insl
pop
das
jge
push
or
cld
add
and
fidivl
adc
and
sarl
call
jbe
aas
inc
adc
fsubrp
and
mov
aaa
mov
adc
adc
retw
call
mov
mov
in
cwtl
loop
jmp
std
stos
cmc
xlat
lcall
pop
cmp
je
jo
or
mov
fldl
fcmovbe
mov
sbb
mov
adc
mov
test
in
dec
xchg
mov
popa
jl
xadd
outsb
mov
loopne
push
sbb
loopne
fdivrl
jg
aam
push
stc
insl
or
outsb
push
es
loopne
jge
cld
ljmp
and
mov
sub
and
xchg
scas
sub
and
pop
mov
ja
add
decb
jecxz
fcoml
pop
imull
addr16
add
cmp
mov
pop
cwtl
orl
rcrb
rclb
or
inc
cmp
js
adc
hlt
xchg
mov
and
mov
push
aaa
mov
mov
outsb
scas
cwtl
aas
adc
and
sub
mov
es
mov
cmp
add
scas
or
cmp
xor
add
fidivs
inc
jecxz
inc
repnz
hlt
es
inc
push
push
in
iret
sub
xor
adc
out
xor
push
xchg
add
mov
mov
push
inc
dec
popa
repnz
jns
lock
adc
sbb
mov
pop
fsubr
mov
pop
xor
inc
ret
dec
test
fistpl
aas
push
pop
mov
jp
jbe
sbb
out
in
scas
and
xchg
mov
mov
mov
jb
mov
xchg
fwait
cmpb
push
jae
mov
scas
add
jne
insl
xlat
or
pop
sbb
sahf
xor
imul
add
adc
xor
and
sbb
push
sbb
push
es
xor
orb
pushw
mov
inc
roll
mov
mov
cmpb
shlb
mov
mov
mov
or
dec
cmp
imul
test
or
test
inc
out
dec
jne
and
push
pop
loop
cld
add
adcl
or
cmpsl
outsl
push
out
movsl
jbe
rorb
pop
push
in
aaa
jmp
ret
test
ss
xlat
call
cli
cltd
sub
outsb
jg
jo
call
arpl
into
mov
les
lret
mov
adc
push
insb
inc
push
int3
fimull
out
pop
in
sub
adc
xchg
in
and
insb
dec
aaa
mov
pop
adc
push
cltd
cmp
nop
and
rcl
add
sahf
add
adc
or
xchg
sbb
iret
push
add
test
rorl
add
adc
scas
mov
and
fildll
adc
inc
ljmpw
inc
sbb
jns
sub
mov
add
shrb
cs
dec
sti
add
popa
lcall
lock
xchg
fsub
or
add
outsl
cmpsb
sub
inc
xlat
add
jne
inc
mov
cs
inc
mov
add
test
repnz
lcall
fcoml
loope
dec
and
mov
stos
cli
pop
xor
pop
adc
ds
xor
clc
mov
lods
icebp
and
xchg
xchg
inc
repz
adc
xchg
xchg
aad
sahf
and
mov
jns
rorb
push
into
leave
stos
add
pop
cwtl
push
dec
mov
test
pop
loopne
cmp
lods
xor
mov
std
or
push
adc
jle
or
rolb
mov
scas
enter
jno
sub
les
addr16
mov
lret
and
fistpll
pusha
ds
pop
dec
or
cmp
xor
inc
cmp
loop
xchg
leave
andb
xchg
sbb
cwtl
cmp
jno
pop
push
add
movsl
inc
inc
mov
jmp
pop
jne
adc
fstl
adc
mov
xor
and
push
cmp
adc
xchg
pop
adc
push
xchg
nop
pop
push
push
mov
testb
hlt
mov
xchg
cmp
and
sbb
cmp
mov
push
leave
pop
sbb
adc
es
xor
pushw
ja
dec
scas
popf
inc
ret
dec
sub
jge
push
fimuls
xchg
sbb
sets
inc
je
add
lahf
in
sub
pop
dec
movsl
data16
cmp
push
jge
in
or
fdecstp
jo
and
jne
sub
ret
mov
std
add
cmp
or
adc
xchg
and
push
mov
cmp
lea
push
mov
nop
in
lods
data16
lock
int3
jns
mov
xor
sbb
loopne
cmp
lret
dec
mov
adc
in
sbb
je
xlat
faddl
sub
push
stc
adc
sbb
movb
push
push
insb
mov
sub
adc
out
push
dec
arpl
in
shll
push
or
loopne
mov
pop
adcb
ja
and
fs
mov
ror
ret
and
or
sar
mov
xlat
push
mov
jecxz
pop
int
and
insl
inc
dec
jns
fstl
push
jl
shrl
gs
aam
jge
leave
mov
sahf
fadd
inc
xchg
fdiv
je
xchg
jmp
sbb
add
sub
push
imul
or
add
loop
and
outsl
arpl
sub
jbe
xor
into
push
ret
shrl
cli
mov
cmp
xchg
dec
pusha
xor
movsl
inc
or
ret
inc
jmp
cmpsl
in
sbb
mov
mov
add
call
mov
lea
cmp
mov
or
push
lods
inc
jb
xchg
ds
adc
push
gs
pop
adc
xchg
test
mov
xchg
add
inc
mov
je
es
sub
loop
int
or
and
cmp
xrelease
fwait
testb
or
stos
lret
and
add
lock
mov
mov
std
mov
or
inc
adc
hlt
aam
mov
sbb
push
in
fucomi
inc
inc
dec
js
xorl
push
mov
mov
fisubrl
mov
test
insl
cmp
shll
cmpsb
in
jae
inc
addb
out
cmp
jle
test
fildll
add
sbb
sub
es
mov
in
dec
sub
mov
mov
je
loope
data16
add
xchg
mov
popf
ss
pop
fwait
sti
pop
dec
ljmp
add
rcll
or
sbb
mov
push
xorb
mov
or
sti
je
cmp
pop
sbb
mov
ljmp
sub
inc
xchg
addr16
into
scas
sti
movsb
iret
and
pushl
imul
inc
mov
sbbl
push
inc
fldln2
outsb
add
mov
cmp
aas
addb
mov
mov
orb
dec
ljmp
jnp
mov
sbb
mov
sbb
fcoml
cmp
ja
out
scas
cmpsb
in
jg
mov
cmp
gs
stos
addr16
rcl
sbb
mov
loop
pop
push
dec
notb
xor
or
es
icebp
adc
sub
mov
test
adc
adc
pop
push
pop
and
sbb
inc
popa
icebp
shl
ret
test
fstp
xchg
in
shrd
inc
inc
xlat
push
fwait
jbe
xor
scas
add
shl
fucomi
rcr
mov
pop
and
scas
test
push
mov
mov
inc
jbe
pop
xchg
test
dec
stc
adc
inc
sbb
outsl
mov
jp
jl
stos
mov
mov
xor
fs
scas
and
inc
sbb
sub
pop
decl
test
jmp
and
add
jae
jle
xchg
test
aaa
repnz
gs
push
push
outsb
inc
mov
add
mov
in
dec
hlt
call
cmpb
enter
pushf
shll
sar
mov
sahf
inc
pop
lock
mov
cmp
sahf
cmp
cwtl
xchg
pop
outsl
ret
pusha
out
xchg
stos
xor
mov
pop
insl
xlat
orb
inc
imul
add
ss
leave
and
loop
inc
mov
sub
mov
ret
pop
push
int
and
add
stos
xchg
push
cmp
adc
sbb
add
mov
leave
adc
fs
sub
sbb
mov
hlt
popa
aam
clc
fisttps
xlat
mov
add
pop
addr16
je
mov
pushf
shrl
mov
or
adc
push
add
sub
mov
ja
jo
mov
sub
or
cmp
mov
sub
addb
jmp
mov
jb
pop
mov
xor
int
dec
mov
xchg
imul
cli
inc
js
jbe
push
movsb
stc
push
loop
jo
push
add
sub
inc
and
adc
pop
adc
sbb
aad
mov
push
mov
mov
loopne
cmp
icebp
and
fdivs
stos
xchg
imul
sbb
mov
xor
mov
pop
das
mov
mov
jnp
mov
inc
test
cmp
mov
adc
loopne
xor
js
nop
lods
xor
inc
cmp
leave
js
inc
in
jbe
fiaddl
and
inc
popf
sbb
or
dec
shl
xlat
mov
rorb
loop
loopne
mov
in
push
test
sahf
clc
mov
dec
dec
rorb
popa
pop
adc
aam
daa
adc
inc
mov
push
cltd
fsubp
xlat
jmp
sub
inc
adc
cmp
call
popa
cs
inc
sarl
movsb
adc
clc
inc
in
sbb
cmp
popa
dec
cmpb
insb
jg
xor
pop
pop
out
addr16
mov
addb
jmp
xchg
mov
sbb
mov
xor
push
mov
xchg
lahf
and
insl
fwait
in
hlt
jge
or
fidivs
out
add
adc
add
mov
aad
daa
and
push
inc
push
fninit
inc
dec
inc
xchg
test
and
fld1
flds
leave
adc
aam
loope
aaa
or
stos
ret
ficomps
invlpg
add
lea
hlt
xor
lahf
pop
lock
ficoms
inc
cmpsl
jno,pt
cmovl
pop
out
ficompl
mov
inc
popf
popa
bound
mov
or
lcall
inc
jp
fdivrs
push
icebp
cltd
push
push
ja
rol
cs
sbb
aad
pop
jp
clc
sbb
mov
cmp
subb
push
insl
ret
out
pusha
adcl
push
ja
inc
lret
cmp
push
and
jmpw
inc
or
scas
sub
dec
daa
and
pop
test
imul
pop
pop
cmp
test
push
scas
xchg
dec
jp
mov
scas
mov
inc
jne
mov
pushf
or
lods
mov
clc
xchg
scas
and
or
andl
sbb
pop
jecxz
xlat
ret
loop
iret
shrb
push
push
ljmp
mov
andb
shlb
mov
sbb
cmp
aad
jl
stos
or
mov
enter
or
mov
pop
mov
adcl
dec
adc
js
cmpsl
enter
push
mov
fimuls
fldt
subps
shll
pop
arpl
cli
insl
adc
roll
das
mov
mov
lods
inc
test
inc
clc
jle
pop
aas
into
push
nop
add
push
mov
addr16
pop
cmp
outsb
pop
gs
popa
inc
or
cmpsb
add
rorb
pop
cmp
test
cmp
cmpsl
xor
xchg
cmp
cmc
cli
push
pop
push
push
xor
enter
lock
insb
cwtl
cmpsl
hlt
ljmp
push
sarb
mov
clc
shll
or
ret
xchg
xor
add
add
push
or
inc
cmp
mov
push
or
xor
psrlw
sbb
jle
and
inc
jle
incl
pop
jae
adc
lea
jmp
dec
mov
fwait
test
pop
test
lret
hlt
pop
pop
test
cs
imul
cmp
pop
xor
out
mov
out
xchg
js
adc
scas
mov
inc
pusha
outsb
clc
in
cmp
aam
pop
or
or
loope
or
jno
mov
lcall
loope
sub
addl
adc
jb
jo
ljmp
mov
mov
into
and
push
or
fistps
adc
xorb
mov
pop
std
out
dec
sbb
hlt
movsb
les
mov
je
cmp
aaa
and
ficoms
fdivrs
push
xlat
adc
mov
sub
pushf
push
pop
dec
pop
push
repz
int
add
js
xor
loopne
adc
cld
dec
enter
adc
push
sbb
jo
icebp
mov
mov
jo
les
test
mov
das
jb
imulb
bound
mov
faddp
cmpl
inc
sbb
sbb
lock
andl
add
cld
mov
lcall
shll
mov
and
addr16
loop
cld
xor
push
mov
push
mov
or
jl
push
scas
mov
test
mov
gs
xor
jle
jge
sub
jecxz
fdivs
mov
add
add
sarb
sub
into
jmp
aad
mov
jle
push
int
jmp
scas
test
test
dec
lahf
or
xor
pop
sbb
shll
xor
stc
sbb
bound
jb
je
icebp
pop
fnstsw
jns
mov
sbb
jno
scas
push
mov
insb
shrl
pop
out
mov
fdiv
cwtl
les
dec
sub
xchg
lds
push
jne
mov
cld
xchg
push
stos
xor
push
push
movhps
clc
mov
inc
je
or
jns
xorps
cmpps
ret
inc
sbb
cmp
adc
and
addr16
mov
add
je
dec
mov
jno
shll
pop
or
repz
bound
xor
pop
cwtl
xor
fmull
movsb
andb
aas
decb
push
ja
mov
and
test
adc
clc
pop
shlb
aad
pusha
and
dec
adc
faddl
je
xor
fldl
sbbb
fnsave
mov
jo
adc
xor
jmp
adc
xchg
inc
add
ret
push
pop
sub
xchg
sub
roll
xchg
dec
fdivl
cli
xor
call
inc
xchg
decl
ss
rcl
pop
add
pop
push
sub
lods
cld
sub
rol
mov
outsb
fimull
jg
std
mov
stos
add
mov
js
push
jecxz
ljmp
fs
enter
lret
inc
mov
xor
and
imul
mov
das
lods
cmpb
mov
fnstenv
cmc
push
mov
lea
scas
push
or
lcall
adc
sub
cmp
or
and
test
xchg
push
pop
cmp
push
je
mov
hlt
ljmp
stos
insl
jg
xor
jge
adc
pop
aaa
inc
mov
addr16
inc
mov
and
or
or
rorb
scas
popl
inc
cwtl
xchg
mov
sub
scas
sbb
clc
mov
dec
addl
ret
mov
jo
push
aad
sbb
xor
imul
push
jp
loopne
in
ds
nop
out
mov
nop
and
mov
hlt
loopne
pop
out
mov
push
fistps
push
rcr
ljmp
mov
jb
mov
lds
xorb
mov
xor
add
add
add
pop
insb
test
mov
push
add
mov
ljmp
jno
pop
pop
rorb
or
and
adc
movsb
mov
adc
and
or
adc
add
xor
insb
fs
mov
scas
inc
jmp
sbb
sub
in
jno
cmpsb
lock
lret
pop
insb
movsl
lods
bound
data16
dec
iret
out
add
xor
arpl
and
push
sbb
and
mov
sbb
sbb
or
ficoms
in
movswl
in
sbb
daa
pop
jne
jo
flds
movsl
mov
aam
sbb
xorl
pusha
sbbl
push
dec
repz
scas
lock
inc
sub
inc
and
iret
dec
fmull
xchg
mov
jp
cmpsb
mov
xchg
sarb
rorb
and
push
or
repz
leave
jg
mov
jne
lock
jb
adc
andl
std
rol
push
inc
jl
add
inc
or
bound
ss
push
jnp
out
out
outsl
mov
movsl
lcall
inc
sbb
rclb
pop
mov
adc
and
xchg
push
mov
out
mov
and
push
hlt
and
dec
mov
push
cmpsb
call
stos
jg
sbb
test
es
scas
lock
sbb
push
jp
pop
mov
notl
dec
inc
adc
lods
jo
mov
or
pop
cltd
ljmp
mov
sbb
daa
ret
subb
add
jge
out
data16
mov
push
add
mov
jg
or
jo
xchg
inc
xchg
outsl
ljmp
out
add
cmp
push
cli
jp
inc
add
ljmp
ret
or
push
adcl
add
sub
dec
jge
stc
mov
rcr
adc
inc
insl
call
dec
loopne
push
xchg
inc
and
imul
in
out
out
movsb
push
mulb
ror
out
aam
call
push
lret
dec
pushfw
pushf
pop
dec
pop
jg,pt
xchg
ss
jl
pop
cmp
inc
scas
inc
lods
or
or
xchg
and
push
push
jp
subl
mov
mov
idivb
push
clc
xchg
mov
jb,pt
js
fisttpl
stos
aas
nop
jo
dec
pop
cmpsl
mov
mov
and
sub
cmp
stos
popf
sahf
xchg
dec
sub
ficompl
pop
mov
mov
mov
xchg
ss
nop
lret
push
mov
outsb
js
rorb
cli
mov
mov
push
push
mov
sbb
or
dec
inc
in
mov
cld
inc
push
insb
int
ret
leave
icebp
fisubl
loope
fld
adc
sbb
mov
std
dec
loope
shrb
shrb
into
bound
adc
mov
mov
sbbl
loopne
mov
sub
add
daa
popa
imul
mov
mov
or
mov
mov
lret
test
xchg
mov
fmuls
jae
mov
push
cs
test
sub
mov
aas
adc
hlt
add
pop
cmpsb
int3
adc
mov
test
push
sbb
jg
adc
inc
es
aaa
es
mov
cmc
ljmp
add
xchg
scas
and
xchg
sbb
cmp
nop
cmpb
in
nop
pop
add
sbb
lea
sar
addl
test
jg
in
xchg
ds
xchg
mov
insl
push
leave
call
pop
loopne
cmp
push
or
mov
lcall
ds
enter
mov
std
adc
xchg
adc
or
inc
sahf
fldt
shlb
xchg
and
adc
cld
stos
mov
sbb
push
sti
pop
ja
inc
jg
loop
iret
repnz
std
mov
pop
jmp
pop
scas
cli
cmp
pusha
mov
out
xchg
js
inc
roll
jecxz
aas
xchg
in
mov
roll
dec
sub
loope
jecxz
lods
xorb
jae
out
mov
es
pop
fmul
out
mov
mov
test
jecxz
adc
sbb
mov
cmpsb
push
jno
mov
xor
nop
mov
ret
and
out
adc
in
and
adc
les
dec
sbb
dec
xchg
mov
aas
fld
dec
jg
sbb
push
ret
movsl
shrl
adc
lods
pop
jb
sbb
outsb
iret
push
daa
inc
lea
sub
int3
int
add
das
push
jo
adc
pop
stos
cwtl
or
jno
fwait
pshufw
loop
sbb
add
jmp
sbb
push
insl
or
mov
mov
mov
fs
push
aas
ret
out
pop
das
push
jns
lcall
stc
js
enter
or
js
or
mov
fldcw
mov
sahf
nop
inc
fildl
jnp
data16
fdivs
in
adc
ror
rclb
fwait
or
xchg
mov
add
bound
mov
decl
mov
jo
mov
push
adc
cli
push
cs
or
rcll
cwtl
shll
call
pop
xchg
cmp
dec
nop
sub
insl
add
jg
cli
mov
xchg
rolb
aam
xchg
cltd
cli
addl
pop
faddp
daa
sub
or
cltd
cli
rcrl
adc
fsubs
mov
xchg
ret
and
cli
iret
scas
cmp
lods
int
mov
and
cwtl
fdivl
add
in
ret
lods
push
jmp
adc
cmpsb
add
pop
lcall
sbb
cmp
test
cmc
pop
dec
movsl
add
mov
out
cmc
clc
mov
popf
sbb
jge
icebp
sbb
hlt
sbb
idivl
mov
mov
push
sbb
icebp
dec
add
stc
mov
inc
xor
cmp
jl
push
pop
add
lds
ja
stos
shll
outsl
push
mov
lret
ret
fcompl
cmp
das
and
mov
fisubl
stos
xchg
fisubrl
or
sbb
ss
les
loopne
lods
mov
mov
xchg
and
popa
adc
lock
in
test
mov
arpl
cmp
sub
ja
add
add
sbb
dec
aad
sub
add
and
roll
push
sub
jns
shr
rorb
mov
testb
int3
ret
mov
fs
aas
fisubs
test
lock
add
jecxz
fistpl
mov
pop
ds
push
sbb
add
jecxz
aas
cld
mov
cli
sub
cs
mov
push
fs
fisttps
add
subb
sbb
jg
add
xorl
sub
insl
push
pop
test
mov
out
pop
rcl
pop
bound
or
push
cmp
arpl
pusha
lcall
ja
inc
cs
stos
call
adc
sahf
or
xor
outsb
add
add
push
push
fistps
inc
fwait
jo
clc
bound
pop
xchg
push
ljmp
or
push
dec
jg
sbb
jnp
xchg
jnp
shrb
cmp
xor
mov
cmp
sbb
pop
imul
test
lret
jmp
jns
repnz
arpl
xchg
scas
cmp
loopne
int
push
cli
or
xor
pminub
dec
enter
ret
and
cli
decb
aad
les
andb
push
and
mov
std
mov
xchg
mov
lock
mov
and
or
ret
cltd
xchg
cs
mov
add
jno
adcb
pop
das
pop
jbe
xchg
jle
cmp
aam
int3
out
not
fisubrl
fstps
gs
and
cld
push
std
movmskps
mov
rolb
push
mov
cwtl
jl
xorl
movsb
das
push
pushf
inc
dec
stos
mov
cmp
dec
add
insl
and
jg
inc
xchg
cmc
inc
ret
icebp
mov
jmp
xor
jo
dec
loope
les
das
or
lock
or
or
stos
test
movsl
in
adc
xor
test
lahf
pop
xor
lret
loopne
dec
pop
std
sbbb
and
clc
jecxz
dec
lock
cli
es
push
insb
cmp
mov
lock
aad
pushl
and
push
addr16
and
das
fstpt
lock
test
int3
xchg
add
jo
aam
push
add
mov
sti
sti
pop
dec
std
sub
xor
repnz
stos
inc
ljmp
cmpsb
inc
std
and
add
daa
jl
packsswb
and
inc
jmp
call
ret
or
jno
clc
andl
into
sar
or
fists
mov
and
hlt
mov
adc
out
dec
and
pop
mov
int3
adc
in
stos
add
into
into
cld
push
mov
loope
aad
sbb
adc
fwait
mov
jmp
xor
push
loopne
xor
cmpsl
scas
mov
inc
pop
je
pop
popa
cmp
fbstp
xor
and
xor
jg
js
push
fs
test
jmp
lcall
push
inc
repz
sbb
subb
int
inc
or
jno
cli
iret
shll
je
ret
cmp
xor
sbb
push
xorb
adc
cld
mov
mov
test
sub
sbb
or
mov
js
in
mov
cmp
stos
bound
mov
mov
push
and
and
fcmovbe
arpl
sub
pop
icebp
push
push
and
and
dec
sub
loope
mov
mov
mov
scas
pop
gs
data16
pop
xor
popa
bound
outsb
adc
jbe
jle
xor
push
rcl
add
push
ret
adc
clc
mov
aas
mov
add
ss
fwait
push
test
stos
xor
cmpsl
scas
mov
sub
or
outsl
jmp
push
pop
or
lods
mov
lds
mov
mov
sti
push
xchg
dec
adc
mov
aaa
aad
rorl
outsl
lcall
xor
pop
icebp
inc
lret
in
jo
jne,pt
cmc
adc
pop
xchg
mov
jne
sbb
mov
ret
inc
popf
cmp
sbb
in
jae
push
xchg
pop
jmp
orb
lahf
out
bnd
push
inc
loope
xchg
jbe
push
and
scas
popf
test
sbb
mov
add
sbb
negb
jle
gs
dec
movsb
pop
js
sbb
jno
mov
iret
sbb
lods
lock
mov
inc
je
loop
xchg
lods
inc
push
inc
adc
xchg
dec
and
push
sub
movsb
pop
fdivrl
fistpll
fidivrl
and
push
test
push
je
xchg
icebp
clc
and
mov
and
imul
or
inc
inc
stos
adc
pop
push
rcl
add
and
enter
xchg
je
or
and
das
addr16
push
cmpsl
pusha
pop
inc
xor
idiv
xlat
mov
jo
enter
xor
stos
je
sbb
adc
dec
rcr
cmp
lcall
ret
mov
pusha
mov
cmp
inc
inc
ret
and
inc
push
dec
adc
popa
push
pop
pop
mov
jo
push
lock
fcomip
pop
or
push
mov
sbb
xchg
jb
push
int3
pop
xor
push
push
sbb
es
mov
add
pop
jmp
ret
cmc
pusha
mov
cmp
daa
xor
dec
and
mov
getsec
or
je
jae
fs
add
adc
arpl
add
adc
shlb
shlb
mov
jecxz
adc
ss
out
mov
dec
add
dec
fdivl
and
add
xchg
mov
adc
pop
fs
sbb
sub
adcl
jae
jb
pop
pop
xchg
outsb
rolb
mov
mov
std
cmpsb
jbe
aaa
xchg
xchg
cmp
pop
sub
arpl
lock
addl
daa
iret
nopl
popa
dec
and
jo
cltd
enter
add
sarl
jmp
jmp
jbe
and
adc
inc
xchg
sub
mov
dec
mov
dec
fcmovb
inc
rcrl
lods
fldl
popf
mov
mov
mov
xchg
addb
mov
pop
cmp
es
stos
mov
divl
in
xor
add
xor
lock
xor
cmp
jl
insb
xchg
int
xor
add
shl
cmpb
sub
mov
lret
or
enter
into
call
or
stc
leave
and
int
into
cmp
jo
or
pushf
mov
or
insb
faddp
cld
sub
push
das
jne
inc
jnp
lcall
aaa
pop
test
std
outsl
inc
jne
sti
js
scas
insb
cmp
in
xor
mov
test
pushf
dec
lret
adc
test
inc
mov
push
push
mov
jne
ds
xlat
sbb
insb
pusha
int3
add
xor
push
push
cld
pop
mov
mov
cmp
xor
iret
xorb
cli
dec
call
lcall
ret
pop
stos
jbe
fistpl
sub
adc
ficomps
jne
lods
sahf
add
lcall
mov
fs
insb
aaa
imul
dec
in
in
leave
jl
sbb
test
pop
mov
cmp
fsts
jg
jne
jmp
ss
aas
sbb
jbe
pop
pushf
int3
pop
add
mov
add
call
mov
fists
fidivs
sub
inc
mov
or
mov
and
cs
ja
sahf
and
aaa
jl
cmp
sbb
call
fwait
or
sarl
das
das
popf
fmuls
cmp
adc
arpl
xchg
jno
mov
mov
or
jne
imul
pop
and
cmp
cmp
hlt
loope
cmp
ret
rclb
shll
into
cli
mov
hlt
mov
xchg
xor
xor
or
les
fwait
sbb
pop
cmpb
adc
sub
pusha
in
shr
icebp
mov
cld
push
cwtl
mov
ret
jnp
sbb
scas
ret
pushl
or
xchg
lock
pop
into
adc
inc
push
loope
push
pop
cs
mov
test
mov
loopne
and
sub
repnz
jle
mov
sahf
mov
push
push
nop
repz
xor
es
insl
cmpsl
adc
je
xchg
adc
cltd
mov
pop
sbb
insl
cmp
insb
add
fmull
xchg
clc
loopne
add
xor
iret
add
pop
mov
xor
adc
mov
pop
pop
rol
push
add
mov
mov
sbb
sbb
in
lret
movsl
ret
cwtl
cmp
fcompl
cmp
icebp
pop
ret
sbb
rcr
xor
xor
dec
push
xchg
mov
mov
loop
imul
bnd
fiaddl
inc
jb
pop
into
into
mov
xchg
cmpsl
mull
fimuls
enter
push
xor
xchg
cwtl
push
and
and
ret
mov
push
jnp
faddl
movl
push
pop
je
cwtl
in
jmp
sbb
cmp
mov
mov
push
pop
rcrl
xor
lock
repnz
xor
sub
sub
mov
xlat
icebp
test
add
enter
sbb
mov
je
dec
lock
cwtl
xchg
aam
add
inc
or
mov
out
push
push
sbb
mov
jle
lods
jb
scas
fstl
jge
fstps
lcall
mov
rol
inc
mov
lea
inc
sti
cmp
and
mov
cwtl
push
mov
pop
ds
stos
in
mov
aas
push
push
aam
insb
popa
daa
bound
es
std
js
ret
fsts
pop
sahf
insb
mov
mov
dec
in
movsb
pop
sbb
hlt
pusha
ss
test
adc
jmp
lcall
push
pop
in
imul
in
andl
cli
sub
cld
loop
insb
lods
inc
movsb
shlb
add
ret
lock
lods
loope
push
sarb
inc
push
je
and
push
mov
iret
stc
gs
dec
daa
push
cmpl
adc
adcl
xorl
mov
push
lahf
mov
xor
std
pop
push
loopne
and
stc
jg
fnstsw
clc
dec
or
push
push
jo
mov
mov
imul
xchg
sbb
inc
js
popf
arpl
pop
cmpb
test
mov
jecxz
xchg
inc
aam
inc
add
loope
es
sbb
xor
inc
cmovbe
mov
ficompl
push
scas
imul
shll
sbb
repnz
cmp
testb
sarb
pop
mov
jle
clc
pusha
lcall
xchg
hlt
adc
sub
jp
push
es
imul
jo
xchg
cli
push
fwait
jl
lcall
jecxz
scas
add
cmpsb
xchg
cmpsb
iret
cmc
inc
mov
and
cwtl
inc
push
aas
pop
aam
mov
ret
std
clc
dec
js
add
xchg
inc
sub
inc
jo
scas
mov
js
and
std
adc
lds
lret
or
icebp
icebp
mov
pop
or
idiv
or
sbb
mov
push
out
adc
pop
call
add
mov
inc
or
inc
movsl
rcr
repnz
cmp
test
ljmp
or
jge
xchg
scas
cld
mov
sub
lods
mov
and
inc
stos
insb
repz
pushf
mov
popf
scas
mov
sub
adc
xchg
stc
imul
fldl
and
adc
adc
sbb
ja
or
out
xchg
and
movl
cmpsb
mov
icebp
mov
jecxz
push
int
jp
lock
jno
xor
add
adc
cs
sub
xlat
insb
std
insl
mov
and
or
add
clc
movsl
push
xor
and
ficoms
imul
inc
xor
das
scas
adc
xchg
inc
enter
sti
mov
xchg
pop
js
sub
jmp
lea
xor
and
inc
aaa
mov
adc
lret
inc
lods
clc
mov
xchg
xor
fstps
das
ret
movaps
cmp
js
jge
hlt
ss
mov
movaps
push
outsl
pushf
hlt
sub
roll
lret
iret
fcmovnu
addr16
adc
push
sti
adc
lods
pop
inc
push
jge
add
cmp
mov
out
or
scas
inc
adc
sbb
xor
mov
call
or
and
and
popa
xchg
pop
pushf
and
fcoml
push
adc
mov
adc
cltd
sbbb
popl
mov
push
mov
dec
cmp
ljmp
mov
aam
and
test
icebp
das
add
sbb
mov
es
adc
inc
mov
test
jmp
xor
stc
mov
push
mov
pop
pop
dec
fisubl
or
insl
push
add
js
ss
rorl
sub
lsl
add
lahf
or
scas
inc
mull
dec
mov
xchg
insl
shll
scas
dec
push
neg
clc
push
mov
ds
cmc
es
stos
pop
jl
sub
adc
hlt
adc
mov
cwtl
dec
pop
pushf
and
imul
ss
ja
stc
add
ds
or
movsb
call
in
pop
add
cmpsb
sbb
nop
dec
pop
in
ljmp
xor
addr16
shlb
or
insb
push
push
sbb
loopne
nop
cli
call
dec
pop
sub
les
sub
cld
stos
xor
stos
add
imul
add
rolb
adc
inc
xchg
subb
fwait
sbb
scas
cmp
aas
sbbl
xor
dec
js
rcl
add
pop
adc
mov
add
cmp
jne
mov
jle
test
and
lahf
mov
clc
push
ds
push
dec
dec
out
call
inc
je
aaa
loopne
jo
in
popf
jp
dec
mov
mov
clc
or
inc
lret
dec
rcr
sbb
mov
xor
lds
in
mov
and
js
pusha
xchg
sbb
or
out
push
das
sbb
mov
pop
jo
addl
mov
pop
mov
fcompp
sbb
std
loope
ds
cmp
dec
push
xor
dec
and
jp
xor
jo
aam
cmp
sbb
jne
sbb
popf
push
repnz
mulb
out
mov
int3
adc
xor
fxch
inc
mov
ds
icebp
aaa
andb
mov
mov
repz
jp
xchg
std
add
int3
cld
mov
fnstcw
add
js
adcl
cmp
mov
and
push
int
lock
js
lods
xchg
pop
xor
mov
sbb
or
sar
aaa
add
dec
or
add
das
sbb
and
rcr
aad
ret
cmp
push
inc
std
dec
push
cld
fdivs
cs
daa
jae
loop
jl
pop
mov
jmp
loopne
orl
cmpsl
dec
add
mov
daa
mov
xchg
mov
add
test
repnz
leave
scas
jne
pop
pop
pop
ds
jnp
addl
ljmp
fildll
ror
cmp
scas
das
or
push
pop
xlat
sub
out
hlt
add
adcl
rcll
mov
xlat
or
mov
inc
push
pop
mov
dec
inc
xor
push
outsb
rolb
subl
shrl
movsb
cmp
adc
add
xchg
mov
or
pop
ds
add
popf
mov
sub
or
jmp
jl
fwait
mov
mov
push
jg
idivl
loop
int
js
xlat
mov
cmp
aam
ret
cmp
or
dec
test
jns
push
daa
inc
fld
push
dec
idivb
mulb
push
ds
sub
cld
add
inc
cs
add
sub
addr16
scas
lock
flds
outsl
mov
jle
pop
cltd
and
mov
pop
mov
jnp
out
jbe
movsb
cmp
cmp
xor
jp
jnp
scas
mov
ds
push
aas
shr
and
nop
push
test
dec
subl
lock
push
mov
pop
fiaddl
mov
lea
loope
dec
pop
or
jle
mov
rorb
je
aaa
mov
mov
jae
cs
cmp
push
xchg
insb
mov
mov
idiv
inc
cmp
ret
fistl
sub
clc
and
dec
in
cmpsb
fcoms
inc
clc
cmpsl
add
add
movsl
pop
jnp
outsb
mov
cli
nop
and
adc
inc
or
out
fimuls
arpl
data16
cwtl
push
fistl
ror
mov
or
ror
mov
subl
cmpsl
enter
push
loopne
test
add
pop
test
cmpsl
mov
out
in
inc
mov
dec
mov
dec
push
insl
jb
jp
mov
adc
xor
sbb
add
xor
xor
call
jne
and
pushf
sub
js
cld
or
dec
ficompl
pop
xorb
sub
inc
stc
les
xor
and
mov
in
into
test
fisubs
loop
and
fcmovbe
add
sbb
cwtl
ja
outsl
mov
movsb
iret
pop
nop
movsb
and
xchg
xor
xchg
adc
mov
incb
icebp
xchg
sbb
popl
mov
fcmove
sbb
push
xor
or
pop
rcl
push
pop
test
pop
push
xlat
mov
fidivs
or
pop
xchg
shlb
sbb
xor
mov
or
in
hlt
cli
adc
icebp
and
add
inc
push
push
es
lahf
js
subb
push
ss
ss
pop
add
decb
mov
inc
unpcklps
inc
sbb
xor
xor
sbb
shl
pop
pusha
add
jmp
adc
xchg
cmc
add
mov
out
adc
test
xor
mov
das
push
inc
ss
into
xchg
pop
xchg
adc
mov
or
jno
int3
pop
jl
rcll
adc
or
xlat
add
mov
sub
add
mov
pushf
dec
push
fiadds
aas
shlb
fdivrl
ret
repnz
mov
movsb
invd
addb
insl
stc
mov
hlt
adc
push
outsb
pusha
icebp
int3
pusha
shll
ja
mov
sbb
aaa
fs
enter
shrl
out
nop
rorb
into
xor
mov
icebp
mov
sub
dec
mov
push
pop
mov
pop
aad
jbe
or
shrb
cli
stos
add
and
pop
mov
pushf
dec
aam
sub
sahf
push
pop
pop
ljmp
inc
pop
mov
mov
jle
adc
pushf
mov
push
mov
xchg
repz
add
jb
push
cmp
pop
test
test
sub
enter
hlt
cmp
dec
in
mov
movl
fisubl
sti
cli
inc
sub
jo
push
cmpsl
sti
shrl
rorl
xchg
shlb
xchg
clc
pusha
shlb
xchg
jno
call
xchg
mov
mov
mov
jge
int
mov
pop
pop
rolb
lock
push
pop
std
stos
lcall
push
lock
push
aam
push
pop
jl
xor
xchg
out
xchg
bound
movsl
xlat
rorb
mov
xchg
mov
xchg
push
push
loopne
mov
neg
push
idivb
stc
fildl
test
les
add
add
sbb
mov
sbb
cmp
push
jo
fdivl
or
ficoml
xor
shlb
lock
sbb
in
fnstsw
addb
add
ja
aad
sub
mov
andl
inc
test
outsl
and
mov
imul
out
test
lret
dec
xchg
scas
jge
add
scas
mov
mov
aam
and
xor
mov
inc
iret
sbb
inc
lcall
ljmp
xchg
hlt
repnz
jmp
sbb
aaa
leave
inc
aas
cmp
sub
mov
sub
sbbb
loope
stos
add
fldenv
psrlq
sarb
sti
lods
bound
cmp
je
mov
fsubs
xchg
push
inc
stc
rcrl
sti
ret
mov
mov
arpl
cmc
ret
xchg
jle
dec
fadds
pop
ds
adc
mov
seto
xchg
cmc
enter
pop
inc
filds
mov
mov
pop
js
xor
push
popa
jmp
fstl
jne
xor
test
push
cwtl
mov
sbb
popf
cmpl
out
out
lea
inc
xor
stos
das
inc
in
ss
in
repnz
or
cld
mov
fs
jge
cmpsb
add
ret
stos
js
scas
test
mov
xor
addl
out
out
jmp
inc
cltd
mov
loopne
rorl
pop
and
cmp
dec
sub
faddl
outsl
xorl
testl
cmpsb
sbb
cltd
in
xor
outsb
push
push
sbb
add
xchg
imul
and
fidivrs
in
mov
scas
jl
dec
pop
push
lods
add
xlat
mov
icebp
xchg
push
jb
shlb
mov
add
lods
mov
int
stos
sbb
add
cmp
flds
into
pop
dec
jmp
push
in
aaa
clc
stos
ja
out
ja
subl
inc
sbb
cmp
clc
aam
faddl
mov
cmpsl
dec
mov
push
call
or
fwait
add
jbe
lods
cmpsl
jle
sbb
cmp
out
sbb
clc
lock
sbb
or
xchg
xchg
pop
mov
sub
pop
mul
cmp
pusha
jne
push
jmp
adc
fbld
movsl
outsb
fmuls
fs
in
cmp
hlt
lret
mov
mov
cmp
dec
add
or
inc
mov
adc
add
add
cld
xor
or
fdivrs
js
mov
insl
stos
sar
ja
fnstenv
jp
dec
cmp
call
xor
jns
cli
add
jg
fwait
cwtl
add
scas
faddl
out
cli
inc
xchg
das
add
xor
cs
adc
jmp
add
add
shll
fsts
rcrb
lds
push
imul
js
sbb
addr16
mov
icebp
fcom
test
mov
shlb
and
sarb
or
xor
adc
xchg
insl
sbb
aas
jl
jl
or
pop
rclb
lock
shl
mov
aas
pop
fcmovnb
push
cmpsb
mov
icebp
test
jmp
in
and
outsb
hlt
add
bound
stos
jns
js
xor
mov
or
clc
call
lret
sbb
or
popl
rcll
cld
in
cltd
nop/reserved
xchg
bound
sbb
es
cmpsb
popf
mov
xor
jl
jg
sbb
xor
test
hlt
add
xor
pop
sbb
and
xor
inc
mov
xor
fdiv
and
cli
inc
ds
es
ret
repnz
inc
jmp
and
nop
jg
mov
roll
out
loopne
mov
and
shlb
lret
inc
add
xchg
xor
stc
ss
mov
das
cld
rorb
and
mov
sub
sbb
add
addb
sub
rolb
jno
lods
push
or
mov
adc
sbbb
repnz
stos
rcrb
stos
mov
les
cwtl
xlat
arpl
arpl
bound
loopne
shl
loopne
sbb
pushf
out
iret
xor
adc
scas
aaa
xchg
mov
mov
enter
lods
pop
sub
dec
mov
ss
push
cmp
pushf
fstpt
leave
pop
or
pop
cmpb
xchg
cmp
pusha
push
out
mov
arpl
mov
leave
scas
xor
mov
bnd
fucom
inc
push
dec
adc
mov
jno
popl
outsl
push
cld
and
dec
ljmp
dec
inc
and
dec
sbb
inc
xchg
fcmovu
dec
in
mov
push
xor
in
pop
cli
mov
dec
cli
xor
mov
hlt
aam
add
aam
xor
mul
scas
inc
mov
in
push
aaa
loope
or
lret
adc
jl
outsb
pop
fs
sbb
push
sahf
cmp
fsubl
clc
mov
mov
xchg
or
xor
outsl
push
adc
mov
cmp
out
inc
outsb
flds
xchg
or
xor
sub
sub
inc
sub
shlb
outsl
les
loopne
jb
ds
out
jo
xchg
adc
push
xor
pop
mov
cld
loopne
xorb
dec
stos
pop
stos
cmpsb
stos
adc
nop
movsb
adc
and
xor
clc
push
push
repz
call
adc
loopne
mov
dec
ja
jno
push
and
xchg
cmpl
xchg
ret
scas
imul
test
mov
mov
mov
add
sub
cmp
jge
pop
bound
sbb
push
sbb
cld
push
or
mov
and
loop
insl
or
dec
mov
loope
imul
and
test
sbb
jecxz
push
pop
fistpll
pop
and
inc
mov
rcrb
push
sbb
push
aaa
sarl
popa
mov
push
pop
sahf
fsub
jnp
jnp
in
aad
test
cli
mov
shl
inc
addl
fdivl
sbb
sbb
faddl
mov
in
jnp
lcall
mov
scas
mov
lds
insb
mov
pusha
jg
jle
mov
sbb
mov
mov
lock
inc
pop
mov
fucomi
call
xchg
or
xor
adc
rol
adc
mov
pop
add
cli
movsb
jae
and
xor
aam
icebp
popf
add
sahf
pusha
sbb
push
cmp
add
jle
imul
adc
sbb
push
push
dec
mov
cmp
xchg
lea
xor
push
test
pop
dec
jg
insb
xchg
out
or
add
lock
pop
mov
mov
mov
mov
stc
mov
mov
and
mov
jg
inc
out
scas
sub
mov
stos
dec
pop
pop
adc
and
pop
mov
or
and
or
fs
subl
push
out
xor
jl
pop
mov
lock
cmpsb
push
pop
xchg
cmp
pop
mov
adc
and
cmp
add
pop
loopne
loope
add
cltd
mov
sub
xor
and
sbb
add
xchg
in
push
xorb
in
fcmovnu
sub
mov
cli
push
jp
adc
cmp
add
jl
add
mov
cmp
and
aad
sarb
js
adc
xchg
cli
mov
dec
or
scas
add
lds
pushf
add
in
test
xchg
inc
cli
scas
iret
mov
lret
push
add
push
mov
dec
xor
outsb
in
cmp
dec
shll
out
lcall
xchg
aad
cmp
nop
lock
jmp
sub
xor
sarb
andb
imul
inc
inc
pop
pop
sti
jmp
pushf
adc
imul
xor
ljmp
stos
in
xlat
pop
rcrl
icebp
fs
subl
lock
decb
je
sub
fadd
outsb
sbb
insl
xorl
loope
push
js
xor
adc
adc
inc
cmp
into
lea
mov
clc
and
call
xor
lret
into
or
out
test
inc
xchg
sbbl
mov
cvtps2pd
ret
jp
jbe
lcall
push
mov
scas
pop
fisubrs
test
in
push
inc
ljmp
mov
inc
dec
stos
cmp
sub
sbb
add
fisubs
xchg
test
nop
mov
andl
mov
fsubs
cwtl
test
dec
push
pop
pop
loopne
sub
inc
adc
int
jmp
ja
addr16
sbb
and
fnstsw
jno
in
and
mov
dec
jecxz
pop
mov
sbb
jo
and
rclb
call
cmc
fsubrs
loop
cmp
adc
mov
mov
int3
pop
cld
addr16
mov
xlat
xchg
or
mov
or
xchg
sbb
pop
pop
mov
dec
cmp
push
loopne
sbbl
jmp
sbb
cli
xchg
mov
sub
ret
add
nop
movsl
or
push
jle
and
pushf
xchg
sub
add
dec
dec
mov
mov
pop
push
push
hlt
rclb
inc
push
mov
adcb
add
inc
sbb
sbb
dec
adc
adc
shll
cmp
out
jg
mov
xor
push
mov
lret
push
cmp
pop
loop
out
xchg
and
xorb
push
ret
inc
sti
pop
add
cmp
xlat
pop
pop
mov
add
das
subb
lret
adc
mov
sub
jno
sbb
pop
sbb
sbb
push
roll
outsb
or
and
loopne
aas
jle
mov
sbb
imul
jecxz
arpl
push
enter
inc
es
jecxz
and
sub
cmp
pop
lret
out
imul
push
sbb
cld
idivb
mov
lret
ljmp
fnstcw
sbbl
mov
push
xor
xchg
mov
les
push
jb
loop
fiaddl
dec
mov
imul
jmp
arpl
and
mov
xchg
add
add
mov
mov
fs
in
cwtl
faddl
scas
ds
clc
aad
cli
mov
lods
imul
inc
add
setnp
adc
insb
push
mov
enter
mov
pusha
push
mov
adc
popf
sub
mov
cltd
orl
mov
ficoml
add
addr16
mov
xor
add
xchg
mov
loope
arpl
push
in
inc
add
neg
aad
punpckhbw
fs
es
and
test
push
andl
lods
inc
xchg
rcrb
add
daa
add
jle
push
cltd
and
xchg
rcr
cmp
mov
mov
pop
dec
or
cmpl
cmp
shrl
roll
cli
pop
xchg
shl
mov
mov
xchg
mov
cld
out
mov
sbb
pusha
mov
test
push
push
stos
jge
out
loop
out
dec
out
xchg
jo
stos
mov
fdivs
adc
mov
cmpsb
dec
or
loopne
shrl
inc
fs
test
out
frstor
js
loope
jmp
inc
mov
aam
dec
imul
add
adc
or
clc
add
jl,pt
sub
pop
push
add
push
je
xchg
pop
aad
ss
xchg
xchg
mov
mov
loope
inc
rcrl
arpl
jle
je
and
pop
rolb
fistpl
push
pop
test
and
aad
xchg
iret
out
jle
int
cmpsb
shlb
push
xchg
cltd
mov
iret
addr16
loope
inc
pop
ja
inc
push
jmp
mov
dec
xor
data16
outsl
std
aad
sub
cmp
cmp
testb
in
and
idiv
faddl
mov
and
push
shlb
inc
aas
push
mov
add
pusha
cs
rorb
mov
out
test
pusha
repnz
adc
fs
fstps
mov
dec
push
mov
mov
or
adcl
inc
xchg
xor
pop
int3
pop
js
rcrl
leave
adcb
xchg
rcll
jae
sbb
lcall
lods
xchg
mov
xchg
in
sub
bound
les
cmp
and
inc
dec
cld
cli
jo
int
enter
popf
mov
cmp
lods
notb
mov
push
and
rcrl
inc
mov
cmpsb
je
or
inc
inc
xchg
jnp
add
addb
gs
xchg
icebp
lods
enter
fildl
lods
pop
ja
pusha
pusha
xchg
cwtl
js
push
ss
xchg
pop
test
add
aam
adc
push
rclb
jg
add
cmp
shl
pop
or
cmpb
lock
fidivl
outsb
add
fildl
sbb
cmp
push
out
or
daa
cmp
pop
lds
and
pop
repnz
push
sbb
dec
scas
add
cwtl
sbb
std
xchg
sbb
fstl
mov
loope
inc
movsb
decl
push
shr
mov
leave
jmp
test
xchg
inc
jne
mov
mov
enter
pop
sbb
divl
or
int3
push
ss
inc
push
pop
or
adc
mov
sbb
push
jp
push
adc
inc
incl
mov
push
sbb
ds
add
cmp
cld
stc
dec
out
inc
lcall
roll
mov
adc
dec
movsb
shrb
mov
cli
add
rorl
jb
and
dec
inc
adc
mov
mov
ljmp
xor
xor
lret
daa
inc
and
popa
jmp
cmp
lock
movzbl
in
and
and
pusha
inc
andb
enter
das
pop
sbb
xchg
rorl
je
ja
ffree
je
inc
mov
stos
and
idiv
mov
push
dec
sub
inc
insb
div
cmp
pop
pop
js
sbb
inc
and
repz
xchg
int
sbb
xchg
xchg
cmc
add
pop
and
sbb
adc
mov
jo
lds
js
mov
lahf
inc
xchg
sbb
movsl
mov
fwait
push
jns
insb
pop
cmc
cmp
xchg
mov
push
mov
sub
arpl
push
sti
and
add
sub
xor
lods
test
insl
addl
lock
incb
push
sub
clc
push
outsb
xchg
push
addl
mov
xor
loop
mov
jmp
jp
loopne
je
or
pop
mulps
xchg
pop
xchg
pop
in
xchg
jle
dec
inc
aaa
sub
adcl
popa
sub
add
xchg
mov
jl
shll
ret
call
or
mov
neg
xchg
shll
test
and
jp
lods
rcll
loope
icebp
mov
adc
lods
ja
xor
cli
sbb
ret
jg
leave
dec
sbb
clc
fwait
mov
inc
xchg
mov
decl
pushf
das
xor
test
or
xor
sub
push
mov
pop
push
dec
aaa
or
cmp
or
push
sbb
mov
icebp
test
mov
or
mov
and
nop
pop
test
fildll
jg
mov
and
jne
mov
or
pop
pop
jne
lock
int3
lods
stos
cmp
add
xchg
cmp
loope
cmpsb
push
mov
and
sahf
iret
push
xor
divb
bound
aas
jmp
icebp
ffreep
test
jle
push
sahf
mov
xchg
mov
mov
or
or
and
std
icebp
mov
adc
test
xor
scas
or
loopne
adc
sbb
jne
outsb
xor
movsl
enter
xor
nop
es
lea
mov
xchg
js
cmp
dec
lret
data16
lea
xorb
outsb
pop
and
jae
add
dec
in
sbb
hlt
jg
pop
leave
mov
in
and
scas
insb
xor
add
and
ljmp
or
push
fisttps
pop
sub
pop
pop
sahf
sbb
test
add
jle
adc
pop
ret
push
lret
je
and
sar
out
pop
mov
and
sbb
push
pop
mov
cld
rcrb
fists
je
push
xor
loop
inc
pop
pop
enter
cmp
daa
sarb
or
cli
aad
or
dec
mov
subl
sub
cli
and
or
jne
jmp
mov
out
fsts
je
or
sub
xor
daa
mov
jns
loop
xchg
iret
or
or
xor
or
sub
mov
jp
ret
lock
call
dec
pop
add
inc
loop
or
and
pop
loope
sti
call
adc
pop
hlt
mov
dec
std
jnp
fdivrp
mov
and
sub
std
mov
lods
stos
imul
push
sbb
xor
aas
aam
mov
movsl
mov
stc
cmpsl
sbbl
cmp
loopne
sti
sbb
or
dec
fnsave
add
adc
jne
std
dec
in
fiaddl
es
popf
orb
mov
aaa
rcl
add
sbb
in
call
mov
rcrl
mov
jb
cwtl
xchg
scas
aas
dec
mov
stc
add
add
or
hlt
mov
xchg
jbe
popa
decl
push
cmpsb
lods
gs
insb
js
and
cmp
std
push
test
inc
popf
repz
sbb
and
adc
mov
xchg
mov
pop
push
in
fidivrs
mov
clc
dec
or
fcomps
push
jl
popa
push
or
cld
aas
faddl
adc
addl
daa
lcall
out
lock
jb
shrb
mov
jmp
push
ja
or
mov
jecxz
out
xorb
sbb
lret
addb
push
cmp
fcomip
cmp
mov
pop
dec
push
sarb
adc
test
and
push
mov
push
popf
add
loope
loopne
or
add
or
cwtl
cmc
or
add
sbb
shrb
xchg
ret
xchg
or
cltd
xchg
cmc
xchg
mov
clc
jl
decl
inc
fdivrp
popa
les
popa
mov
in
sub
cs
add
scas
jae
mov
mov
push
scas
mov
mov
fiaddl
stos
in
push
inc
push
dec
mov
test
mov
lds
js
mov
xor
scas
pop
repnz
mov
mov
aam
iret
xor
js
test
sub
pusha
pop
pop
out
pop
iret
xor
test
out
mov
fcompl
push
pop
es
pop
fistl
adc
cmc
push
ss
rcl
pushf
movsb
cld
outsl
out
cli
pop
add
int3
cmpb
cmp
push
pop
jl
fidivl
adc
or
popf
push
push
xchg
xchg
push
in
push
mov
jecxz
les
js
xchg
mov
shr
data16
inc
testb
xor
dec
adc
xor
push
je
fimull
mov
loop
push
ja
sub
in
jmp
fadds
dec
gs
ljmp
aas
dec
gs
aaa
fs
xchg
lcall
cmpsb
in
pop
test
aam
add
aas
cmp
add
or
dec
rolb
insl
mov
outsl
cli
cmc
call
dec
mov
fwait
ja
mov
sbb
fs
popf
test
add
imul
xor
subb
and
cmp
push
jmp
aaa
lret
mov
sub
repnz
fdivr
ljmp
addr16
outsb
scas
sbb
and
loope
repnz
push
jmp
mov
mov
repz
xchg
mov
lock
loope
sub
fs
icebp
mov
cli
mov
std
cmc
sbb
jmp
lahf
out
inc
cmc
call
in
or
mov
and
cwtl
lahf
and
mov
shl
stos
and
inc
loopne
adc
movsl
scas
aas
mov
movups
xchg
mov
jg
pop
icebp
jno
call
iret
push
mov
sub
sub
jecxz
mov
jmp
mov
jmp
mov
das
adc
sub
push
sarl
adcb
pop
lds
jle
js
adc
adc
mov
sub
test
aaa
sbb
dec
pop
fcmovbe
test
aas
xor
scas
cld
mov
or
loope
test
test
int
aam
jbe
pop
pop
pusha
mov
jg
pop
les
das
insl
mov
mov
sbb
fadd
push
mov
dec
test
sub
inc
push
call
inc
push
mov
cwtl
clc
lahf
dec
fnstenv
push
push
and
out
setb
outsb
popa
mov
cli
aas
gs
sub
sub
rorb
fldenv
ss
addb
mov
adc
cs
enter
push
xor
push
xor
add
add
sbb
mov
sub
xchg
movsb
loop
xor
pop
sbb
fwait
mov
sub
into
add
xor
imul
mov
xchg
rorb
sub
in
test
dec
lsl
rorb
or
pop
xchg
jo
mov
idivb
xchg
pop
pop
sbb
out
enter
sti
xlat
std
or
inc
xlat
mov
sbb
and
fildll
inc
orb
jle
mov
nop
pop
cmp
ret
xchg
cmpl
hlt
fs
inc
mov
dec
in
xchg
inc
lret
lds
fmulp
movb
insb
add
cmpsb
fbstp
xchg
mov
dec
out
sahf
dec
or
inc
push
mov
mov
adc
fimull
inc
pop
xorb
sub
xor
into
aaa
test
std
clc
dec
fsub
sbb
pushf
loopne
xchg
pusha
jae
fistpl
std
mov
add
cmpl
sub
xor
dec
jnp
mov
fadds
adc
loope,pn
into
mov
jg
js
les
fadd
or
out
push
xchg
mov
dec
int3
cs
adc
jmp
decl
xor
arpl
fstps
xchg
andb
or
loope
stc
test
repnz
imul
out
fsubrs
xchg
lock
adc
loope
inc
jnp
daa
ds
or
ret
mov
aas
xchg
loope
fidivrl
sbb
xchg
mov
das
aaa
push
jo
adc
lods
out
mov
mov
sub
data16
jmp
cmc
inc
jno
sub
cmp
cli
incb
idiv
stc
push
cmp
fisttpll
xchg
adc
or
sbb
rcrb
sbb
ret
es
je
inc
cld
mov
out
sti
cs
cmp
xchg
roll
push
sbb
inc
or
mov
xchg
icebp
adc
mov
mov
push
jle
das
loopne
dec
mov
cli
push
lock
mov
inc
orl
inc
rcrl
dec
mov
test
cli
std
in
fs
and
xor
or
jne
xchg
push
push
sub
inc
mov
sub
adc
fdivrp
or
mov
lock
ret
frstor
sbb
jl
jo
mov
adc
hlt
stos
test
push
stos
push
cli
add
das
sahf
or
xorb
mov
mov
cld
dec
inc
xchg
into
ficompl
pop
pop
xchg
addl
test
loopne
xchg
pop
out
mull
inc
popa
or
pop
cld
popa
test
dec
fimull
lcall
sbb
inc
jno
sub
jle
add
mov
mov
add
outsb
mov
mov
stos
fdivl
add
push
adc
xchg
mov
xor
dec
or
pop
paddsb
rcr
inc
mov
mov
rol
jae
daa
shrb
aam
sbb
outsl
adc
add
ret
mov
add
add
fisttpl
inc
push
mov
aaa
mov
xor
clc
incb
arpl
cli
jno
mov
mov
ret
jb
popa
lock
mov
cmc
shrl
adc
mov
divb
ss
fsubr
ss
cmp
pop
loopne
adc
ds
cmp
or
shlb
adc
fisttpll
test
ja
push
push
ret
and
aas
dec
pop
pop
xlat
xchg
adc
xor
push
movl
xchg
pop
or
int3
orb
movsb
adc
shrl
xchg
push
push
inc
mov
push
xchg
loop
in
xor
movsb
sbb
aam
popa
mov
loop
jecxz
mov
ret
cmpsl
jecxz
add
xchg
dec
arpl
dec
xlat
jg
aaa
mov
mov
push
bnd
ret
sbb
jmp
push
imul
or
ds
mov
add
testb
out
movsl
mov
aaa
fcoml
lock
push
xchg
cmp
sbb
inc
push
int
cmp
mov
add
and
dec
jg
fucomip
or
xchg
mov
add
push
ljmp
insl
xor
cmp
imul
cmp
jle
or
out
sub
test
mov
mov
mov
mov
out
sbb
idivb
adc
imul
loop
sub
inc
lahf
inc
mov
mov
mov
jecxz
mov
add
js
insb
mov
lods
inc
jge
cmc
rol
loop
shr
and
dec
lock
rcrl
js
adc
jge
imul
fdivrs
stos
js
cmpl
xor
movb
pop
lods
jg
out
dec
jb
ret
inc
movsl
lds
pop
ret
ficomps
lret
pop
ljmp
dec
test
fsts
and
pop
push
cmp
scas
mov
mov
arpl
pop
dec
and
shrl
mov
jae
dec
jp
les
cmpsb
shr
fisttps
push
out
jo
lret
imul
mov
ljmp
mov
test
and
loope
es
lock
test
sub
jbe
sub
hlt
jns
mov
inc
xor
push
sbb
ljmp
fcomps
add
xor
call
mov
pop
pushf
loop
cmpsl
push
sbbb
fwait
push
push
mov
adc
jle
dec
adc
or
lret
in
daa
push
jb
test
sub
add
jns
add
andb
lods
notb
enter
mull
mov
cmp
insl
es
lds
mov
push
inc
cli
test
andb
and
inc
add
jo
xlat
sbb
movlhps
inc
mov
mov
dec
stos
mov
mov
std
and
cmpsb
push
push
mov
pop
sub
jo
subl
shll
xchg
mov
dec
fdivrs
xor
lods
iret
clc
insb
push
nop
xadd
and
inc
and
call
in
imul
imul
rcrb
mov
mov
add
push
add
shr
loope
mov
mov
pusha
sub
or
aad
loope
sarb
testb
inc
jl
xorb
inc
fsubs
and
in
roll
mov
cmp
xchg
adc
test
mov
cld
or
movsb
sub
inc
cli
mov
and
sub
nop
mov
mov
loope
sbb
xor
sub
inc
icebp
dec
jmp
int3
sbb
mov
fs
decb
lods
xchg
push
pop
jne
lahf
ss
xlat
and
push
sub
hlt
add
xchg
add
push
xchg
mov
insb
loop
dec
imul
jle
mov
ljmp
inc
icebp
adc
rcrb
mov
mov
sbb
fiaddl
sbb
mov
mov
cmc
push
pop
mov
decb
call
cmp
orl
in
cli
adc
shlb
std
or
mov
jo
mov
into
std
mov
push
xchg
popa
pop
mov
in
clc
aaa
jp
adc
in
fwait
jae
jle
je
mov
mov
adc
gs
dec
inc
push
xor
movsl
out
xchg
mov
shrb
jg
xor
loope
test
std
imul
jne
pop
test
jae
pop
add
or
in
inc
add
popa
dec
pop
into
scas
movsb
test
pop
aaa
sbb
les
inc
and
dec
rolb
shll
rolb
mov
adc
or
xchg
xchg
out
push
icebp
inc
xor
or
sbb
inc
push
or
cli
in
test
enter
adc
shll
add
xsaveopt
jl
push
inc
out
jmp
and
in
pop
insl
cmc
cmpsb
call
enter
in
clc
rcr
mov
shlb
test
add
and
call
pusha
sbb
std
cmp
negb
out
adc
outsb
mov
sub
xorb
iret
mov
leave
dec
movsb
mov
push
mov
loopne
pushf
out
mulb
rclb
cld
push
mov
jo
pop
jb
out
mov
ret
fsubl
xor
es
mov
mov
inc
and
cli
clc
inc
pop
ret
sub
pop
in
sub
cmp
jle
fildl
push
shl
inc
jnp
pop
pop
xor
fsubrl
or
aam
ss
push
mov
cli
xchg
psubd
or
xchg
adc
mov
fdivr
test
sub
clc
fisttpl
push
cmpsb
call
aas
or
repz
inc
pop
sub
xor
sub
je
push
pop
cmp
mov
into
loope
and
bound
sbb
push
das
add
and
in
shlb
mov
lock
xchg
roll
sub
push
lcall
stos
ljmp
andl
mov
es
xchg
xchg
pop
lods
add
mov
jg
lcall
push
add
in
xchg
and
sub
les
pop
jmp
push
push
adc
hlt
nop
inc
pusha
and
mov
aam
pop
bound
popl
and
insb
imul
dec
mov
pop
je
data16
mov
jae
or
and
js
cwtl
adc
roll
dec
sbb
mov
fs
lock
out
or
test
cmp
pop
mov
cmp
lea
cld
add
arpl
add
out
js
adc
mov
addb
mov
lock
les
inc
cmpsl
insl
adc
pop
sbb
lea
orl
or
dec
loopne
or
sub
xor
xchg
ss
or
leave
mov
cmp
dec
ss
xchg
mov
mov
js
mov
mov
cltd
lock
incl
icebp
scas
or
jae
icebp
dec
cmp
into
pop
fdivl
loop
xchg
pop
pop
sahf
pusha
jbe
xor
pop
add
ljmp
xchg
add
cmpsb
test
push
repz
fucomip
enter
and
pop
sbb
out
cltd
cmp
mov
out
adc
loopne
inc
sub
hlt
xchg
call
rcll
mov
or
test
pop
js
push
movsb
dec
pop
sbb
add
dec
fldenv
cld
imulb
pop
cwtl
push
inc
xchg
sbb
add
aas
rorb
mov
sub
adc
arpl
sbb
pushf
sbb
jecxz
jmp
clc
fdivs
pop
push
or
pop
call
mov
push
jb
pop
fs
popa
sahf
or
add
jne
push
lock
imul
test
sub
mov
dec
fcomps
cmp
call
jmp
inc
jbe
adc
add
inc
std
pop
xchg
mov
aad
sub
xor
das
jecxz
mov
mov
xlat
movb
dec
in
cs
jae
inc
movsl
jle
xchg
push
mov
ret
inc
mov
test
movsb
mov
aaa
arpl
lods
lods
testb
or
pusha
pushl
sbb
icebp
or
adc
repnz
mov
jecxz
ja
aad
inc
mov
loop
inc
jmp
jmp
in
hlt
mov
cmovno
scas
loop
aaa
xchg
jl
ds
jns
push
or
loopne
mov
das
dec
mov
test
xchg
sahf
mov
outsl
fchs
xchg
lcallw
mov
add
cwtl
lock
hlt
scas
inc
mov
mov
push
sbb
cli
xchg
xor
sti
jae
addr16
test
or
je
js
das
pusha
push
and
inc
inc
jbe
mov
shrb
inc
xlat
xchg
repz
sti
jmp
mov
mov
test
fs
fstps
inc
push
sub
sbb
imul
fsubrs
outsb
xor
push
pop
insb
and
add
dec
cmp
fmull
adc
add
pop
aad
or
enter
push
sub
mov
xchg
push
jmp
add
jnp
pop
mov
fs
pusha
leave
inc
cmp
sbb
mov
ret
sub
sub
inc
mov
jge
inc
mov
inc
push
incl
aaa
adc
dec
mov
mov
ljmp
xor
cmp
xchg
movsl
mov
pop
push
mov
adc
add
adc
push
push
mov
cld
insb
sub
xor
cs
xor
add
mov
lret
push
inc
mov
mov
push
daa
sarb
jg
movsl
add
addl
mov
nop
cwtl
cltd
adc
movsb
mov
imul
test
test
mov
ret
xchg
inc
push
test
in
imul
pop
stos
push
xchg
sub
cli
mov
xor
fadds
mov
outsl
shlb
leave
xchg
or
cmpsb
push
fiaddl
mov
sub
lret
fistps
cmp
inc
loop
jle
lods
and
push
mov
ret
pop
xchg
push
in
jne
adc
movsb
add
pusha
pushf
mov
sbb
pop
into
adc
in
mov
aad
push
out
inc
adc
adc
add
call
adc
pop
xor
clc
inc
cmpsb
addr16
inc
xor
mov
mov
xchg
les
je
ljmp
push
sti
insb
add
jo
xchg
push
pop
mov
mov
xor
push
mov
mov
adc
dec
mov
and
mov
add
je
cmp
jecxz
mov
inc
icebp
jmp
adc
pop
ret
js
cmpb
scas
mov
pop
pushf
movb
clc
bound
negl
mov
xor
and
add
cwtl
add
insb
and
dec
cs
jl
cld
or
push
sbb
cld
ficoms
inc
mov
push
dec
cmp
sarb
sahf
aam
xchg
sbb
imul
mov
xlat
xlat
and
mov
adc
fbld
jmp
jno
and
cmp
mulb
pop
sub
movb
xor
xor
mov
sahf
into
les
mov
sub
add
stos
mov
pushf
adc
mov
mov
dec
dec
sub
jl
cmpsl
fnsave
add
pop
imul
xchg
out
std
sbbb
mov
out
fwait
xchg
fists
sub
push
outsb
mov
cld
lea
pushf
cltd
jb
or
call
and
and
mov
js
and
mov
repnz
aam
pop
in
push
jo
adc
add
xor
pop
addr16
inc
sbb
mov
cld
or
fcoml
pop
and
inc
sbb
xor
aas
push
push
bound
in
dec
pushf
add
das
call
push
adc
sbb
add
dec
mov
aad
xchg
cwtl
adcl
mov
dec
lcall
add
orl
shll
inc
nop
lcall
out
jg
push
cs
stos
inc
andb
scas
xor
orb
ss
or
pop
pop
mov
inc
decl
dec
mov
adc
inc
pushf
je
aaa
sub
dec
mov
pop
leave
push
cmp
cmp
push
loope
pop
add
xchg
and
js
push
adc
and
fildl
pushf
cltd
and
pop
push
imul
jne
loopne
mov
loope
mov
loop
or
and
mov
xchg
push
fnsave
pop
jg
and
xlat
subb
sbb
cmp
test
rolb
dec
sbb
and
inc
or
cmp
push
or
push
adc
and
aaa
fmull
adc
mov
push
fimull
mov
fwait
sbbb
flds
cmc
adc
sarl
xor
adc
out
cmp
ret
push
mov
cwtl
cmp
cmp
jnp
add
fnstcw
pushf
loopne
xchg
push
mov
ret
cmpb
push
xchg
cmp
incl
sbb
xor
sub
dec
rorl
lods
aad
pop
xlat
push
fs
mov
sbb
and
ss
aaa
jbe
stos
jo
lods
adcb
sub
pop
xor
pusha
push
loop
jg
push
rolb
mov
dec
mov
pop
dec
shr
fnstcw
or
out
test
aaa
mov
mulb
jo
mov
bound
add
movsb
add
clc
scas
sub
aas
inc
push
pushf
or
xlat
inc
add
dec
lock
pushf
inc
adc
lods
or
jno
ret
cmp
mov
mov
add
inc
stos
push
inc
mov
add
mov
pusha
mov
in
pop
mov
aam
jge
pushf
cltd
cld
or
decl
and
bndstx
rcll
xchg
push
mov
popf
fsubs
cs
mov
push
mov
daa
les
adc
cmp
xchg
xchg
or
cmc
mov
push
or
out
ret
cs
cmp
mov
xor
test
ss
adc
daa
sbb
add
cli
es
aas
jmp
or
adcb
lahf
test
ljmp
push
adc
cwtl
add
jmp
clc
cmp
push
leave
sbb
shlb
or
xchg
xorb
and
inc
push
and
xchg
mov
mov
pop
lods
sbb
mov
jnp
dec
mov
or
or
push
and
fiadds
adc
jmp
aam
adc
int
lret
mov
repnz
dec
pop
std
out
test
pop
xchg
xchg
mov
cmp
mov
inc
test
cld
pop
aam
sub
packuswb
sbbb
or
scas
push
enter
mov
lock
sub
movsb
mov
or
clc
aas
jl
and
xor
sbb
mov
jmp
or
fldcw
addl
je
inc
idivl
and
dec
loopne,pn
push
in
jmp
adc
shlb
xchg
adc
xor
mov
cmp
cmp
fs
mov
ds
sub
push
or
call
jecxz
incb
sbb
cmp
lcall
add
or
mov
divl
cltd
or
leave
adc
dec
out
mov
int
cmc
xchg
rclb
cld
dec
push
mov
inc
fisttps
imul
aas
adc
lea
push
shl
sbb
loope
adc
mov
pusha
in
mov
ljmp
xchg
cwtl
add
sarl
cmpsb
adc
add
pusha
popa
pop
xchg
inc
lds
mov
aaa
inc
dec
cld
movzbl
push
loopne
pop
ret
popf
bound
shrb
daa
push
bound
mov
clc
mov
push
dec
or
cmpsb
cli
xchg
jp
dec
ss
loopne
mov
mov
add
or
pop
mov
hlt
sbb
add
cmpsb
popa
outsl
mov
sbb
jo
ret
es
jns
rolb
andl
into
push
pop
inc
xchg
pusha
xchg
js
jle
sbb
rorb
sbb
jecxz
sub
or
rclb
hlt
jns
rclb
and
add
out
xchg
jo
or
hlt
mov
push
lret
jns
mov
pop
mov
out
xor
sub
xchg
cld
stos
push
jle
rcrb
aas
push
shlb
sbb
push
sub
add
add
sbb
xor
pop
inc
subb
mov
pop
test
sahf
sbb
ljmp
add
js
loop
loope
dec
or
orl
xor
add
or
ret
adcb
push
popa
adc
or
popa
adcl
cmp
cmpsl
sub
push
sbb
rcrl
jo
clc
sbb
outsb
mov
pop
movsl
call
mov
je
test
pop
sbb
jb
rcrb
addr16
inc
in
jne
fadds
mov
fstps
push
dec
sub
mov
icebp
push
out
add
lea
add
push
cmpsb
lods
xor
xchg
dec
add
pop
mov
insb
xchg
or
ljmp
rorb
xchg
xchg
pop
ret
insb
ja
jo
sbb
cs
jle
xchg
mov
mov
shrb
iret
add
pop
mov
xor
jle
icebp
insb
add
sbb
mov
sub
adc
pop
mov
mov
mov
iret
push
loope
cmp
shlb
and
test
ret
pop
adc
popa
stos
ret
sub
push
ret
outsb
push
aad
mov
add
pop
jl
or
sbbl
daa
inc
outsb
and
xchg
xchg
push
adc
mov
mov
xchg
mov
je
ljmp
push
mov
xor
daa
sbb
je
lea
pop
insb
xchg
pop
inc
and
out
nop
les
pop
out
fcomps
pop
pop
add
adc
clc
addl
pop
add
leave
rorb
orl
mov
inc
mov
mov
loopne
stos
dec
pop
add
pop
mov
adc
jmp
mov
pop
cmp
mov
mov
call
ret
adcb
mov
mov
mov
mov
sub
sbb
sbb
xor
adc
xor
test
xchg
xchg
lock
loopne
sbb
ret
mov
mov
pop
push
pop
pop
insb
mov
stc
push
push
popa
sbb
leave
mov
dec
mov
lret
movsl
cmovp
xchg
sbb
cli
out
jge
mov
fwait
adc
aam
xchg
adc
add
mov
inc
jbe
cmp
push
lock
popf
roll
pop
cmpsl
or
add
sub
mov
fisubrl
mov
pop
adc
push
add
mov
push
jne
in
jo
int3
clc
cs
mov
clc
fstl
push
or
pushf
shlb
and
js
jno
sahf
jb
jb
mov
and
inc
scas
inc
adc
xchg
stos
shr
jmp
call
pop
inc
xor
test
pop
sbb
dec
test
add
inc
add
mov
push
movsl
call
xchg
jnp
mov
outsb
ja
inc
jmp
shlb
push
test
rcrb
inc
es
fmull
mov
add
movsl
mov
adc
movsb
out
xchg
xchg
xchg
aas
orl
mov
lods
xchg
push
rorl
test
jb
test
xlat
sbb
repz
mov
mov
call
andl
popa
cltd
in
mov
sbb
mov
mov
lds
fwait
jb
rol
insl
in
aad
mov
mov
enter
mov
cld
mov
cwtl
add
pop
or
jle
pop
or
sub
pusha
leavew
loop
or
pop
aas
insl
cmp
xchg
js
call
jmp
or
and
in
dec
je
mov
sbb
push
ficoml
std
xchg
test
mov
pusha
xor
lcall
sbb
rcrl
test
mov
loope
push
mov
pop
adc
jbe
dec
fs
lret
leave
test
sti
xchg
jg
ds
aad
ss
rolb
ud0
sbb
and
xor
js
inc
pop
insb
push
aaa
or
loop
aaa
inc
mov
test
ds
sub
pop
xor
or
repz
loope
in
prefetch
cwtl
push
cmp
mov
mov
loopw
pop
jp
mov
cmp
push
lods
ss
xchg
mov
les
inc
js
call
sbb
mov
lahf
adc
data16
and
das
mov
xor
mov
mov
int
mov
push
mov
loopne
stc
loop
adc
insb
jmp
cli
rorb
pushf
in
bound
and
jecxz
lret
xchg
xchg
fidivs
test
add
shll
jp
inc
loope
fisubl
xchg
out
push
loope
push
into
mov
fidivs
sbb
mov
mov
inc
inc
jp
notl
popf
insl
mov
icebp
xchg
pop
cmpb
inc
xor
hlt
nop
inc
movb
nop
hlt
jae
mov
inc
imul
sti
push
add
lods
mov
rcrb
dec
push
lret
scas
loopne
insb
sbb
clc
sub
add
adc
pop
fdiv
out
lods
mov
mov
cmp
adc
push
mov
jmp
xchg
jp
mov
icebp
ljmp
fcomps
loop
adcl
les
inc
ds
loope
pop
cld
rcrl
cmp
insb
jbe
cmp
fwait
cmc
xor
aad
and
mov
sub
aam
mov
cli
scas
push
andl
fsubrs
jo
ror
cwtl
fisttps
or
insl
push
das
pop
push
gs
push
shrl
stc
jge
iret
mov
mov
ljmp
mov
pop
je
and
push
push
fistl
cmp
xor
dec
or
jle
cmpsb
inc
cltd
cmp
add
mov
dec
cmp
xchg
add
ret
lods
out
mov
add
sub
xor
bound
xor
and
inc
nop
mov
xor
std
ret
shrb
sub
outsl
pop
fstps
or
add
pop
xchg
in
imul
es
out
push
mov
push
pop
mov
mov
out
mov
adc
push
aaa
clc
hlt
outsb
mov
and
leave
add
push
ret
pusha
movsl
or
js
sbb
sbb
imul
xor
cmp
mov
mov
movsb
or
mov
lret
lret
push
xchg
shl
jmp
jp
xchg
add
xor
xor
shl
or
stc
fadd
cmc
adc
push
mov
xor
mov
add
push
stos
ss
dec
cmpb
out
add
add
cld
sahf
inc
adc
rol
and
fnstenv
or
inc
hlt
push
and
filds
push
subl
mov
mov
rcrb
mov
cs
mov
mov
test
andb
lock
add
cli
popa
push
and
dec
pop
xchg
push
adc
into
lods
cld
adc
mov
sub
shlb
and
mov
or
popf
jnp
dec
sbb
data16
xor
xor
cmp
cltd
inc
inc
mov
sbb
clc
test
inc
stos
loop
movsl
mov
sbb
fsub
mov
out
push
sarl
cmpsl
dec
pop
adc
fsubrl
fstp
fdiv
arpl
pop
mov
push
cmpb
mov
ja
push
sbb
pop
stos
adc
jmp
cmc
ret
int3
push
sub
cmp
aad
hlt
and
jno
push
pop
stos
adc
mov
insb
or
lret
pop
sbb
push
pushf
jno
lea
dec
mov
jle,pt
mov
fwait
or
or
dec
sub
lahf
mov
add
icebp
inc
cli
ret
mov
dec
add
in
pop
xchg
stos
movsb
stos
jl
jo
mov
xor
pushf
sub
call
mov
adc
fnstenv
sbbl
les
rorl
ds
mov
mov
sbb
inc
dec
insb
ficoms
mov
shl
adc
add
shll
dec
inc
lock
imul
jns
and
aaa
and
movlps
mov
roll
lods
xlat
in
pop
data16
repnz
add
sub
push
xor
add
xor
and
sar
mov
pop
leave
push
push
pop
dec
lret
shl
cmpb
mov
jl
jg
cs
sub
and
test
mov
out
aad
clc
int3
repnz
enter
pusha
sbbb
call
aaa
insb
and
jl
xchg
push
add
ds
add
popf
gs
xor
mov
sbb
outsb
cmp
mov
xor
adc
adc
ret
xor
fcomps
arpl
ret
ret
xchg
test
sbb
xorb
jns
idiv
pop
int3
outsb
pop
cwtl
or
push
outsb
and
mov
out
push
push
mov
imul
adc
add
mov
clc
icebp
ss
jbe
jg
test
movsl
outsl
inc
cmpl
hlt
cmpsb
js
jle
mov
fwait
inc
ret
call
aas
push
mov
scas
je
in
rclb
or
out
fldcw
or
adc
aam
icebp
cmpl
and
out
negl
xor
mov
mov
orb
addw
hlt
lret
push
xchg
mov
ret
jg
add
push
jne
and
outsl
pop
imul
fistpll
cld
jb
inc
adc
pop
push
xchg
fwait
scas
mov
sahf
and
rorl
adc
ljmp
cmc
iret
push
lea
pop
shrl
or
test
dec
lahf
repnz
movsb
jb
or
mov
ret
lds
testl
cmc
sub
loop
jo
adc
fdivs
outsb
clc
jo
xor
cmpsb
insl
nop
movsb
jno
fmull
fnsave
adc
push
addl
jle
outsb
push
push
and
enter
out
pusha
lods
fs
push
jmp
push
out
and
pop
mov
hlt
lds
cld
adc
mov
popa
movsb
gs
mov
or
testb
xor
loop
push
add
and
and
pop
mov
lods
dec
shlb
push
inc
subl
adc
dec
ret
mov
stos
pop
ret
xor
sarl
adcl
push
outsl
stos
add
ret
enter
arpl
sub
in
xor
les
in
lods
sub
cli
icebp
rcr
clc
sub
stos
out
or
push
ret
pop
xorb
or
js
dec
clc
cmp
add
daa
stos
aam
jo
ljmp
pushf
pcmpeqd
xor
inc
mov
movlps
xor
pop
sar
nop
xchg
mov
stos
sahf
movsb
dec
out
add
lahf
pop
adc
pusha
add
xor
mov
xchg
lock
lods
pop
sbb
inc
dec
outsl
fwait
loope
ja
shlb
movsl
mov
fsubp
jnp
mov
jg
flds
sahf
ror
shr
sub
scas
dec
inc
xchg
jle
sub
or
mov
jle
shrb
xchg
adcb
gs
add
xchg
cmp
rcrb
push
mov
adc
push
test
scas
lahf
enter
sbb
daa
fimull
add
adc
sub
hlt
mov
mov
rcrl
jle
scas
pop
fdivrs
stos
lods
cmp
out
xor
add
mov
dec
rcrl
call
ja
aad
pop
cmp
ficomps
or
jbe
loop
lahf
cbtw
std
test
ret
je
adc
rorb
test
and
or
adc
test
mov
test
xor
divl
fucomip
push
xor
fwait
mov
mov
imul
pusha
insl
xlat
lods
push
cwtl
inc
mov
xor
and
jle
pushl
and
and
mov
adc
cltd
aaa
push
xor
ficoms
mov
ja
jbe
imul
adc
lahf
mov
adc
movsb
out
cmp
add
cmpsl
jae
mov
outsb
cs
jbe
inc
mov
jp
jbe
ret
imul
adc
add
inc
or
xchg
adc
fdivp
push
test
xchg
pop
orb
shll
test
jbe
stos
out
pop
hlt
xchg
push
add
pop
insl
frstor
ljmp
adc
xor
mov
daa
cmp
les
add
xor
fdivrl
adc
cli
pusha
notb
inc
loopne
mov
push
test
dec
pop
outsl
dec
mov
add
repz
out
lods
loopne
lock
js
mov
inc
repz
jb
sbb
out
dec
in
out
mov
or
loope
in
sbb
cltd
sbbl
xchg
ds
push
lcall
scas
pop
cmp
dec
add
inc
aas
lea
ret
add
sub
cltd
scas
insl
jne
cmpl
sti
cmp
pop
add
jp
scas
pop
add
pusha
insl
sbb
dec
xor
push
or
jmp
mov
repnz
xchg
xor
push
cmp
lods
mov
jp
dec
push
addr16
cmpl
popf
lcall
pop
mov
xorb
add
xchg
insl
and
sub
sbb
mov
xor
add
outsl
adc
sbb
xor
sbb
adc
mov
arpl
cli
ss
lds
orl
out
mov
leave
test
fwait
mov
add
outsb
inc
xlat
mulb
add
pop
dec
jle
mov
sbb
inc
aam
out
ret
int
adc
mov
mov
data16
push
fstpt
sbb
arpl
scas
sti
sbb
add
inc
mov
mov
dec
mov
mov
movsl
sub
stos
jo
movsb
incb
notl
sub
sbb
add
mov
jecxz
ljmp
cmpsl
daa
std
loope
loop
cmc
loop
js
push
decb
mov
pushf
adc
mov
adc
adc
call
subb
cs
loop
pop
mov
and
and
adc
inc
inc
dec
or
adc
insb
or
dec
leave
in
sahf
push
or
lods
xlat
sbb
xor
and
sbb
insb
cli
cmpl
shrl
jnp
mov
repnz
mov
in
adc
jle
iret
push
jbe
adc
xlat
add
movsb
cmpsb
mov
fs
xor
sarl
jne
jmp
mov
dec
pop
jecxz
test
and
xchg
and
adc
and
add
inc
daa
cs
les
ret
mov
das
bound
or
mov
or
adc
jae
subb
fisttpll
stos
das
inc
add
jbe
push
shl
pop
and
adcl
fisubrl
and
out
popf
add
xor
cmp
pop
notb
test
ret
into
clc
in
loop
aas
mov
test
jg
mov
dec
cmc
adc
mov
imul
daa
push
cmp
xchg
out
sub
cld
sbb
int3
push
sbb
adc
ret
jmp
mov
cmc
cs
shrl
ljmp
cli
cmc
mov
xor
mov
call
cmpsl
inc
jp
lock
add
std
test
aaa
mov
sub
imull
jnp
and
xchg
push
add
outsl
loopne
in
in
or
or
pop
stc
aam
add
push
and
or
jmp
dec
imul
jo
inc
dec
xor
inc
or
cs
pop
push
fucomip
js
xchg
loop
push
fwait
insl
push
stos
jle
mov
or
sti
out
scas
stos
jp
jle
add
rolb
sarb
les
cmp
sbb
mov
mov
insb
inc
rorl
xchg
or
sub
aam
imul
nop
and
cmpsb
scas
ror
es
add
sbbb
and
mov
jmp
pushf
jg
int
pop
andl
mov
cli
rclb
pop
or
sub
and
mov
jecxz
bound
push
jmp
movsl
inc
add
sub
pop
jle
or
adc
jl
lea
leave
lret
adc
add
or
mov
xchg
js
imull
aaa
dec
and
push
bswap
sbb
xchg
dec
lods
divl
mov
es
and
xchg
inc
add
out
add
scas
cmc
push
jmp
mov
xor
push
sbb
repz
sar
rcrb
mov
jl
aad
sbb
jo
add
sahf
pop
and
mov
jmp
dec
xchg
xor
add
cltd
shrb
call
push
insb
mov
dec
call
mov
clc
add
inc
adc
jp
pop
jp
imulb
push
pop
or
icebp
ljmp
imul
or
sub
lods
dec
cmpb
pop
mov
test
sbb
subb
mov
or
jge
orb
mov
repnz
sub
sbb
push
dec
inc
lock
fdivr
xchg
jb
into
lret
and
cmp
xor
je
scas
xor
fldcw
popa
and
ljmp
sbb
pop
pop
or
cmp
sub
sbb
adc
pop
pusha
push
dec
xor
call
hlt
mov
sbb
or
pop
mov
sahf
cld
pusha
test
fsubs
push
sbb
cmp
add
pushf
in
inc
test
fsubl
sar
out
popa
sub
xlat
mov
xor
or
mov
pop
lds
sbb
adcl
sbb
add
lock
je
daa
lock
mov
lret
mov
movsl
mov
or
add
js
jg
test
mov
cmc
ss
scas
push
popl
mov
clc
data16
lea
je
lock
in
or
cmpsl
adc
push
lret
lea
in
test
std
mov
or
xor
and
subl
mov
mov
adc
aam
in
das
inc
das
sbb
gs
mov
adc
add
orl
add
scas
adc
loope
xor
test
cmp
lock
ds
adc
out
push
mov
sub
dec
dec
inc
fcoms
lock
adc
in
nop
lock
cli
mov
add
loop
xor
loope
js
sti
sarl
pusha
xchg
xchg
push
push
sbb
pop
lret
aaa
sub
rcrb
out
dec
mov
or
mov
aad
test
rol
lds
add
cld
mov
outsb
sbb
and
or
cmpl
arpl
push
lea
sub
sub
cmp
push
dec
pop
push
loop
pop
ja
movsb
aas
lret
sbb
dec
es
or
pop
dec
xchg
push
insb
test
fbstp
jbe
frstor
sub
and
addr16
cld
je
popl
es
xchg
pop
mov
aas
in
sub
mov
pushf
scas
loop,pt
adc
jne
lods
sbb
xchg
adc
xchg
adc
sbb
icebp
and
xchg
adc
jecxz
add
jbe
sub
adc
sub
cmp
lods
mov
xor
test
push
pop
and
jl
mov
dec
or
shrb
xor
daa
sbb
cmc
sub
mov
push
xchg
fcmovne
shl
dec
pop
mov
or
mov
xchg
aad
mov
cmp
or
xchg
mov
in
enter
lcall
cmp
aas
sub
inc
loopne
jmp
cmp
vmovshdup
popf
jle
bound
arpl
mov
mov
pusha
test
shrb
lock
mov
mov
and
faddl
test
mov
out
arpl
adc
push
lods
in
and
adc
lods
xlat
adcl
inc
loope
jp
movsl
fisubrl
pop
inc
dec
push
imul
xchg
fisttpll
setne
sti
and
push
cmp
pop
xor
popf
sbb
scas
add
xor
sub
or
fildll
pop
push
inc
push
repnz
inc
call
addb
dec
and
hlt
ret
push
ja
xchg
inc
adc
sbb
rolb
pop
xor
test
xchg
jno
jp
aaa
xchg
outsb
lods
retw
sahf
in
mov
sbb
and
jle
movsl
add
and
sbb
test
inc
inc
cmpsl
inc
dec
sarb
jo
imul
sub
dec
lods
inc
cli
add
sbb
push
pop
inc
add
fstps
jns
sbb
mov
sbb
sub
cmpsl
aad
jmp
es
and
sub
sub
dec
xor
call
pop
mov
ss
inc
insb
adc
or
push
jg
push
or
sub
mov
xor
sub
pusha
jl
ss
xchg
stos
inc
and
aaa
stos
mov
fsubrs
add
cmp
fwait
add
cmp
jae
lds
mov
sub
xor
idivb
testb
mov
cld
roll
or
movsb
and
arpl
or
shl
ret
mov
mov
and
dec
dec
inc
sbb
ds
dec
sub
or
push
lds
sarb
pop
lds
jno
lahf
mov
shl
sub
fildl
sub
push
xor
sub
loope
or
shrl
lock
mov
add
aam
inc
ljmp
push
jmp
dec
lods
nop
adc
mov
add
loop
cmpsb
sbb
shll
jbe
loopne
and
dec
mov
push
jmp
movups
pusha
or
js
mov
push
imulb
xor
ds
imul
dec
push
and
xor
pop
and
imul
jle
cmp
cmpsl
out
int3
sbb
jae
or
adc
mov
jns
xor
pop
pop
mov
int
mov
jge
repz
sub
movl
incl
push
jne
ljmp
out
popf
push
push
call
push
shr
mov
or
gs
dec
mov
inc
aas
inc
jmp
shl
xchg
jecxz
pushl
test
sub
mov
lods
xchg
fsubs
cmp
addr16
adc
adc
lcall
shlb
daa
ret
js
stos
adc
loope
pop
cs
push
jp
addr16
js
jae
std
addb
or
push
mov
or
clc
loop
add
cs
cli
mov
jbe
and
add
iret
xchg
pop
loopne
shll
scas
xchg
sbb
movsl
xorb
xorb
dec
pop
std
je
mov
xor
verr
add
rolb
lret
mov
cli
mov
mov
aaa
sbb
lret
or
adc
cwtl
mov
clc
es
out
arpl
sub
ret
cld
sti
mov
imul
inc
ret
pop
test
push
test
mov
pop
cmc
dec
sbb
outsl
or
pusha
jne
lods
dec
sahf
js
notb
aam
mov
jl
lahf
test
ljmp
inc
add
test
shll
lret
sbb
xchg
lret
push
lea
movsb
ds
sub
or
rcrb
inc
adc
enter
in
nop
jl
int
adc
cli
add
jae
fwait
sub
push
xchg
ds
pop
push
aaa
xchg
jns
ja
mov
adc
pop
dec
push
std
sahf
fnstcw
jge
xchg
push
inc
icebp
scas
lods
popa
inc
loope
sub
xchg
scas
add
das
mov
pop
dec
inc
adc
and
rcll
push
test
add
dec
adc
sar
lods
loopne
cltd
mov
cltd
test
push
pop
cmp
fsub
adc
dec
repz
imul
sti
out
push
dec
jge
mov
les
mov
rcr
mov
pop
insb
push
in
mov
cmp
cld
add
add
repnz
push
pop
pop
loop
lods
pop
ret
jb
loop
push
out
xor
loop
scas
cmpsb
incl
adcl
inc
and
pusha
mov
xor
ljmp
adcb
inc
add
adc
loopne
push
outsb
inc
dec
jge
jp
scas
scas
repnz
xchg
ret
je
stos
jno
pop
pop
add
sub
cmp
or
mov
test
push
xchg
pusha
loopne
and
scas
mov
mov
orl
mov
jecxz
mov
mov
fiaddl
stos
push
test
xor
mov
sub
xchg
pop
or
inc
pop
add
sbb
adc
pop
loop
lcall
add
rep
clc
jnp
movq
xchg
push
mov
mov
inc
daa
bound
lds
mov
push
adc
fidivs
cld
je
xchg
xchg
aad
inc
push
stos
jne
mov
xchg
fnstcw
xor
outsl
aaa
ja
add
aas
inc
pop
sub
inc
test
lea
jnp
fmuls
mov
frstor
mov
pusha
lcall
call
stos
jge
jo
dec
sbb
sbb
mov
mov
iret
std
mov
enter
or
cmp
xor
xchg
xor
or
fbld
jo
outsl
cmp
pushf
sub
test
inc
out
and
pop
lods
or
push
jb
icebp
rcrb
sub
mov
jo
cmp
add
mov
or
test
rolb
add
mov
ss
add
add
pop
bound
pop
inc
jmp
cmp
les
test
mov
xor
js
dec
sub
lahf
jmp
inc
add
dec
test
dec
xor
shrl
lahf
fmul
mov
popf
inc
scas
xchg
and
aad
rorl
jne
cmp
into
push
pop
inc
and
or
xor
and
in
xor
popf
and
out
add
aad
sahf
rorb
loop
sbb
add
adc
and
xor
sbb
or
push
sub
fdiv
and
adc
jmp
pop
aam
lods
adc
aaa
pop
pop
pop
lahf
shl
sahf
or
repz
add
adc
mov
inc
mov
jbe
xor
ret
cs
cmp
cmp
jg
pop
movsb
incl
scas
lds
loope
xchg
sub
push
dec
dec
add
jmp
add
cli
mov
pop
adc
pop
ret
inc
mov
clc
inc
repz
mov
mov
mov
mov
outsb
fstpl
insl
jbe
out
xchg
mov
pop
sbbl
mov
sub
mov
cmp
enter
jle
adc
xchg
push
hlt
add
test
dec
cli
shrl
popf
lds
pop
dec
xchg
addr16
xchg
incl
lcall
mov
fildl
das
xor
jb
rolb
push
mov
imul
stos
or
js
add
sub
push
data16
lock
ljmp
in
incl
mov
rolb
pop
sub
hlt
push
mov
test
inc
pop
loope
inc
jno
cmc
adc
fs
pop
pop
inc
ja
insb
addb
fwait
xor
push
pop
adc
out
jns
mov
data16
scas
outsb
add
cmp
movb
and
mov
mov
mov
lods
pop
mov
xchg
mov
shl
leave
movsb
loop
stc
into
jbe
sbb
cli
dec
and
jle
adc
clc
lahf
add
je
push
mov
rorb
cs
ja
and
cwtl
out
stc
ljmp
nop
jo
add
jl
add
stos
daa
cld
je
dec
mov
and
push
ret
jecxz
out
cmp
push
sbb
cmc
pop
call
rclb
mov
lea
inc
pop
jne
push
push
dec
repnz
mov
jg
push
xorl
adc
in
icebp
sub
or
push
adc
or
rol
fidivl
ficompl
cmp
push
xor
icebp
dec
stos
or
mov
ljmp
dec
ds
data16
xor
add
and
dec
loopne
fsubrs
imul
out
loope
dec
fcompl
fidivl
stos
rcll
xor
testb
inc
mov
lret
arpl
pop
test
dec
push
rcrl
call
xchg
and
in
adcb
mov
js
jbe
jge
and
inc
adc
cld
jae
sbb
imull
adc
pop
jae
lahf
mov
out
rcrb
add
ds
mov
cmp
jns
sub
xchg
inc
pop
inc
in
mov
stc
in
and
mov
lods
fwait
mov
popa
sub
dec
cmp
sbb
mov
and
dec
mov
adc
cmc
daa
add
clc
lret
cwtl
push
in
mov
repz
sbb
popl
mov
mov
mov
xchg
outsb
add
sbb
je
or
xor
or
jmp
pop
push
movsl
ss
and
pop
xchg
jb
imul
and
popf
lcall
ret
faddp
push
dec
outsl
fs
fsubs
inc
push
sti
lock
cmc
mov
cltd
clc
lock
mov
ljmp
cmp
adc
jo
pop
into
dec
lret
bound
lret
xchg
mov
cmp
std
jo
mov
mov
sti
push
loop
xchg
pop
sub
mov
cmp
mov
push
add
add
into
lods
out
sbb
insb
sbb
sahf
lcall
add
mov
mov
or
and
add
dec
in
out
sbb
sbb
or
cs
jo
mov
mov
pop
xchg
into
adc
enter
pop
fs
lock
sahf
pop
fsubrl
cwtl
push
push
sahf
push
cmc
jmp
push
js
sub
push
add
push
mov
sub
insb
ficoml
adc
out
push
sbb
mov
and
push
ds
sti
fs
rol
ret
push
std
rorl
sub
xchg
jno
push
imul
aam
jbe
push
in
cli
add
sub
fs
cmp
jg
sahf
xor
mov
sbb
mov
data16
nop
and
out
in
movsl
ljmp
add
jno
add
test
testb
fwait
push
outsl
mov
sub
shl
jg
cltd
jmp
cs
cmp
cmp
cwtl
mov
movsl
loop
iret
or
into
repnz
adc
ret
mov
or
dec
cmp
sbb
fldl
nop
hlt
loop
shl
inc
dec
mov
loop
jg
icebp
cli
jmp
into
insb
push
scas
pop
rorl
pop
arpl
imulb
xchg
fwait
sti
mov
push
and
fwait
or
xchg
es
cmp
fbstp
push
jno
hlt
jns
jmp
inc
sbb
cmpb
xchg
push
outsb
sbb
pop
cltd
lock
lods
and
aam
je
mov
dec
inc
dec
addr16
les
adc
fcoms
pusha
mov
sbb
shr
pop
push
mov
sahf
dec
popa
aaa
imul
push
addb
pop
or
arpl
add
cmpsl
sbb
mov
inc
dec
icebp
pushf
sub
push
sbb
xchg
cmpsl
push
movzbl
xor
pop
in
add
pushf
push
nop
call
shr
test
pop
rcrb
aad
addr16
and
mov
pop
fs
mov
stos
gs
out
mov
lea
aam
sti
jle
aaa
sbb
adc
xchg
push
push
test
mov
push
call
aam
push
cld
shrb
or
lock
push
leave
addr16
sbb
xchg
dec
lcallw
xchg
insb
mov
int
ja
jg
xchg
xchg
or
xor
inc
rcrl
mov
pop
pop
pop
or
push
stos
pop
pop
xor
xchg
dec
adc
clc
dec
imul
mov
out
xchg
push
jne
in
cmpb
xor
sbb
sbb
int3
jecxz
push
pop
pop
inc
add
imul
inc
sbb
hlt
cmp
lea
fwait
dec
ret
movsl
add
cmp
js
je
es
mov
mov
adc
xchg
fildl
jle
xchg
loopne
push
pop
sbb
adc
or
mov
push
jg
mov
lods
mov
sbb
dec
insb
scas
push
inc
call
mov
std
jmp
rolb
idivl
lahf
out
pushf
sbb
in
lahf
stos
sbb
mov
fisubl
add
repz
cli
mov
jne
fdivrp
leave
cmpsb
mov
ret
dec
or
or
idivb
jne
jl
rorb
notl
decl
dec
dec
push
mov
push
sub
push
iret
xor
jno
xor
mov
es
rcr
fs
xchg
int
add
mov
mov
outsl
push
lahf
packssdw
cmp
aas
andb
dec
push
xchg
mov
stos
out
adc
jl
xor
imull
push
pop
push
mov
push
js
aad
outsb
adc
sub
inc
dec
scas
cmp
add
mov
dec
fbld
mov
and
adcb
clc
dec
test
push
movsl
dec
pop
push
mov
das
in
xor
cli
push
mov
cmp
test
lock
int
xchg
and
push
aad
pusha
xchg
jno
add
xchg
js
cwtl
xor
insb
fsubrs
jg
std
icebp
add
jno
jl
ret
pop
lock
push
call
mov
daa
clc
pop
mov
or
pusha
jae
ljmp
loop
shl
push
xorb
mov
cmp
adc
push
das
push
pop
cmpsb
sub
sbb
mov
mov
mov
adc
in
shr
add
daa
popa
or
enter
or
test
mov
gs
rcrl
inc
pop
repnz
lods
cmp
insb
call
loopne
in
cmp
int
add
je
sbb
xor
ljmp
mov
scas
adc
xchg
jmp
jp
in
and
xor
dec
pop
and
mov
loop
fadds
mov
sbb
rorb
pop
int
je
mov
and
dec
fstps
mov
lock
outsb
test
mov
xchg
pop
inc
mov
push
xlat
lret
daa
push
in
and
cmp
push
mov
mov
pop
pop
cld
clc
stos
inc
int3
pop
push
loopne
mov
jecxz
push
push
in
push
inc
into
xchg
pop
add
add
sbb
je
lods
add
xchg
cmpsb
icebp
inc
push
es
xchg
push
loope
stc
movsl
cltd
dec
andl
cmp
cmpsl
rol
jo
mov
std
and
push
stos
decl
ret
aam
sbb
sub
roll
mov
xchg
jo,pt
push
out
xchg
cmpsl
ret
push
push
mov
aas
divb
insb
cwtl
dec
xor
out
js
xchg
sbb
push
in
push
inc
ds
test
mov
lcall
pusha
nop
fidivl
inc
popa
push
out
shl
loope
popf
add
add
sahf
fs
pop
cmp
or
adc
and
aam
outsb
shll
lea
mov
movsb
mov
js
mov
outsl
and
dec
jle
mov
xor
iret
popf
jl
push
testl
popf
sub
imul
mov
adc
jb
sub
outsl
fimuls
shrl
orb
push
or
add
or
xchg
andb
pop
aam
push
or
fnstcw
hlt
xor
fsts
mov
sub
xchg
fsubrl
inc
sub
sar
xor
add
add
mov
jmp
aam
enter
inc
andl
enter
cs
fsub
pop
mov
push
iret
adc
outsb
repnz
pop
mov
imul
sbb
outsl
enter
mov
push
cltd
mov
call
loope
je
mov
dec
sti
cmc
data16
incb
pop
cltd
arpl
je
lock
mov
add
pop
int
int
cld
dec
scas
es
pop
cmpl
add
cmp
lods
sub
cmp
sbb
jbe
adc
xchg
and
dec
repnz
leave
xor
rorw
xchg
outsl
decl
lcall
inc
call
lock
add
xchg
cs
pushf
dec
inc
or
lret
inc
arpl
xor
jo
ljmp
and
or
push
adc
and
mov
mov
push
mov
xchg
out
push
fdiv
xchg
sub
addl
repz
inc
jo
mov
inc
mov
mov
or
leave
dec
inc
ret
mov
repz
mov
loope
xchg
dec
fcoml
pushf
stos
mov
imul
nop
rolb
and
jb
jns
daa
fdivl
and
sahf
insb
loopne
mov
mov
dec
fs
cmpl
not
xchg
mov
addr16
nop
les
jbe
andl
or
and
movb
clc
pop
mov
sti
cmp
jmp
cmp
cmp
add
push
cwtl
add
mov
inc
scas
xchg
or
xlat
hlt
jecxz
jg
and
push
mov
pop
adc
popa
mov
jmp
add
mov
mov
and
das
and
in
int
inc
jno
jmp
add
sbb
lret
lock
icebp
mov
push
push
pushf
js
pusha
add
and
pop
into
pop
ja
inc
enter
sub
mov
loopne
cli
dec
mov
outsb
rcll
pop
jecxz
dec
adc
rcrl
add
mov
mov
pop
test
pushf
mov
int
fisubrs
and
cli
add
out
mov
mov
cmp
js
jle
jle
andl
jl
push
cmpsb
jp
add
fdivl
fcom
mov
lcall
das
jno
or
pop
adc
fdivrs
dec
cmp
fildl
loop
inc
dec
sub
pop
imul
sub
iret
pop
ret
arpl
sbb
xchg
mov
inc
or
push
mov
push
mov
scas
pop
push
cwtl
mov
cmp
lahf
gs
mov
adc
in
add
sbb
pop
aad
inc
rcr
add
inc
jl
repnz
lds
into
mov
js
bts
in
jns
or
loope
mov
pop
or
xor
cmp
xchg
lea
xchg
imul
shll
lret
mov
push
cli
jo
data16
test
into
mov
inc
out
jmp
cmp
push
mov
ret
pop
insb
movsl
push
addr16
les
dec
or
inc
inc
gs
ret
sbb
scas
add
test
enter
xchg
loope
in
pop
sub
data16
xorl
jne
mov
sti
scas
shrl
and
rorb
aaa
or
enter
sbb
mov
popf
loope
cmpl
xchg
cmp
ds
adc
cmpsb
dec
mov
fs
pop
cmp
and
inc
jecxz
xchg
into
rclb
lahf
je
cmp
adc
or
sbbb
bound
fnstsw
mov
pop
adc
and
fistl
cltd
jno
out
fs
sub
jne
daa
xchg
lahf
arpl
aad
mov
repz
movsl
pop
nop
fldt
or
mov
aad
inc
fidivl
shll
sarl
stos
int3
jle
insl
push
test
sbb
lcall
lods
das
in
pop
int3
int
sarb
rcl
shrl
rorl
push
mov
ret
cmpsl
pop
fwait
jle
shlb
cltd
and
inc
bound
add
xor
test
popa
orl
in
adc
fsubs
mov
cs
push
hlt
loope
adc
dec
jp
insl
pop
mov
pop
push
and
xchg
test
sub
cmpb
xor
fwait
mov
dec
inc
add
fsubl
jbe
or
cld
inc
scas
imul
jmp
mov
inc
loopne
push
xorl
push
js
mov
adcb
sbb
int
inc
lret
sub
adc
les
sub
stos
and
and
sbb
hlt
repz
shll
pop
lret
mov
jle
push
inc
jmp
cmpsb
push
std
clc
jl
jb
add
push
dec
je
or
dec
fwait
in
popf
shll
testl
jmp
dec
roll
fs
adc
js
cmp
push
mov
enter
mov
push
and
mov
loope
dec
repz
xchg
repz
adc
scas
ficoml
xor
sahf
mov
pop
inc
imul
fldl
dec
loopne
jp
subb
adc
popf
stos
inc
xchg
leave
dec
jp
xchg
lock
add
loope
cmpsl
fildll
in
scas
xor
lds
xchg
rclb
adc
pushf
fdivl
jbe
loop
fwait
pop
inc
popa
or
fildl
shrd
and
sub
jns
sbb
icebp
stos
push
movsb
pop
das
push
aam
mov
xchg
nop
lret
mov
mov
and
ljmp
lods
jbe
loopne
and
sbb
stos
mov
cmpsb
stc
mov
jnp
jb
pop
jno
pop
adc
test
loope
xor
xchg
mov
mov
sbb
cli
popf
lock
add
shr
pop
xchg
mov
pop
adc
aam
jp
out
add
dec
jecxz
rcll
ja
fimull
dec
add
lock
lcall
bound
jo
cmpsl
subb
imul
daa
testb
fadds
or
and
es
ds
push
movntps
mov
daa
cs
out
popa
mov
ret
and
sbb
icebp
adc
sahf
in
xchg
mov
dec
xchg
cmp
push
mov
jnp
jne
dec
sbb
xchg
mov
rolb
lcall
pop
xchg
lea
xor
sub
repnz
xchg
xor
clc
outsl
add
insl
and
fsubrs
inc
ja
sub
lock
dec
in
dec
lods
push
fbld
cld
rcll
xor
add
mov
mov
add
mov
sub
sbb
icebp
bound
push
int3
cmp
xor
cmpsb
adc
frstor
jg
sub
lret
scas
incl
js
sarb
fwait
xchg
mov
jno
inc
out
cmp
jle
cmpsl
in
jbe
and
jne
add
shrl
push
arpl
inc
fs
mov
push
fmull
lods
dec
scas
mov
pop
lock
xchg
add
mov
inc
and
js
filds
xor
andb
xchg
dec
insb
adc
or
popa
add
xchg
xor
push
adc
loop
jecxz
pushf
pop
ret
fisubs
repz
and
lods
xor
adc
test
pop
ljmp
push
ret
iret
dec
pop
xchg
mov
test
hlt
aam
cmp
popf
mov
call
mov
push
hlt
subl
push
jl
inc
shrb
ret
aas
loop
xchg
mov
sti
push
mov
mov
push
cld
fldl
orb
xor
fdivs
scas
push
dec
daa
push
adc
hlt
add
jns
sbb
add
adc
push
out
xor
lcall
mov
loope
mov
sub
stos
pop
xlat
xor
push
lods
hlt
lahf
inc
scas
sbb
ret
es
xor
xor
mov
xchg
imul
aad
daa
mov
pop
mov
testl
out
enter
aaa
xor
cmp
ret
lret
push
scas
movsl
pop
fnstsw
fs
ljmp
out
rcrl
hlt
mov
sbb
xchg
adc
xchg
push
out
mov
adc
je
sub
aad
cmp
dec
pop
lahf
adc
ds
pop
push
pop
xchg
loope
xor
fnstenv
fsubs
orl
int3
movsb
pop
xchg
insb
sbb
mov
cmp
ror
popa
push
mov
in
xchg
lods
and
mov
mov
repz
mov
fcomps
jmp
je
outsb
negb
add
sarb
lret
mov
xchg
sahf
popa
and
mov
cmc
cli
cmpsl
fwait
loopne
js
dec
mov
mov
sbb
loop
mov
mov
adc
stos
les
pop
cmp
xchg
fwait
jbe
inc
js
fistpll
sbb
clc
push
add
cmp
ret
xchg
add
mov
mov
enter
in
sbb
clc
inc
shlb
pusha
cmpsb
stos
pop
test
or
jecxz
lods
aad
mov
pop
mov
pusha
mov
lret
fwait
ret
stos
daa
adc
pop
push
cmc
mov
mov
insl
add
xchg
ds
mov
scas
rclb
outsb
jns
push
je
push
outsb
inc
add
shr
lock
sbb
ljmp
ds
inc
or
mov
dec
and
fdivrp
adc
pop
mov
aas
inc
lea
lds
pop
push
shrl
pop
addr16
xor
sbbb
jbe
jae
xor
cld
pop
cld
and
loope
daa
sub
insl
cmovl
add
sbb
call
mov
mov
insl
insl
inc
mov
push
xor
jg
popf
or
adc
das
inc
adc
aam
iret
hlt
pop
rcrl
inc
cmp
adc
push
push
mov
cmpsl
addl
aaa
sti
mov
rclb
and
sahf
push
push
subl
lods
fsubrl
lcall
sbb
add
test
jo
mov
cmp
mov
mov
inc
lret
lock
and
inc
or
jo
add
pop
std
in
ja
mov
dec
sub
out
dec
es
inc
bsf
xor
or
pop
jnp
mov
out
and
addr16
test
mov
cmpsb
add
xor
push
repnz
dec
add
shrb
dec
xchg
aaa
inc
imul
sub
lea
mov
or
or
xchg
xchg
cmp
push
mov
mov
aaa
fwait
jg
jecxz
test
jae
push
push
cmpsb
or
and
pop
mov
mov
les
fdivrs
push
jae
lock
jbe
jno
test
dec
adc
aas
aad
sub
sub
fadds
addr16
push
dec
aas
divb
cmp
push
or
push
test
dec
rorl
in
int3
loope
mov
ret
xchg
pop
loop
xor
xchg
jge
jbe
push
call
sbb
add
movsl
push
aam
mov
xlat
js
sub
scas
adc
addr16
negl
pop
mov
add
mov
jecxz
cmpb
mov
and
mov
mov
and
add
mov
pop
in
fcoms
xor
sub
push
fcompl
or
pop
into
mov
cli
addl
dec
stos
sbb
sub
pop
js
imul
test
or
pop
jl
sbb
shrb
mov
jmp
loop
daa
or
jg
jns
int
movsl
dec
orb
inc
paddb
cmc
insl
mov
ret
pop
insl
xchg
movsb
mov
lds
mov
push
sbb
pop
sbbb
lods
inc
pop
out
lret
divb
or
test
dec
ret
mov
test
cmpb
or
xchg
sbb
adc
icebp
pop
das
xor
and
mov
mov
mov
lret
mov
xchg
ret
les
sub
mov
push
push
pop
xchg
sar
nop
jge
cld
inc
inc
stc
xchg
lahf
push
cltd
adc
fadd
rcll
loopne
xor
mov
xchg
pop
mov
ja
rcrl
std
rorb
lds
inc
lcall
dec
mov
gs
pop
mov
cs
jno
in
hlt
and
adc
loope
movsb
inc
push
addr16
test
add
fcmovbe
mov
inc
aad
divb
jo
jne
cmp
gs
adc
test
push
clc
xor
xchg
lcall
mov
mov
ds
test
xchg
in
xchg
inc
sarb
sub
inc
push
and
dec
xchg
aas
add
jb
sbb
and
gs
decl
adc
sub
clc
aaa
mov
sub
ret
cld
jmp
jno
jbe
mov
mov
repz
or
adc
push
mov
bound
pop
scas
push
lods
pop
adc
out
ficompl
std
xchg
test
int3
jb
cld
ja
push
fdiv
sbb
mov
hlt
popa
std
or
outsb
addb
cmpsl
mov
cmpb
data16
jecxz
mov
sbb
push
lock
popf
js
cld
cwtl
mov
and
pop
je
daa
shlb
and
test
cld
pop
xchg
inc
daa
les
pop
push
mov
loope
dec
stos
mov
push
xchg
jnp
add
enter
mov
pusha
and
cmp
adc
ret
push
add
stc
fdiv
test
inc
leave
xchg
and
cltd
xor
dec
jge
lods
pop
xchg
shlb
and
pop
cli
pop
lea
jbe
hlt
rolb
sub
push
mov
insb
xor
imul
mov
mov
and
fiadds
aam
cmp
add
nop
xchg
scas
mov
loopne
xchg
mov
andb
stos
lods
rorl
shll
mov
pop
add
pop
jecxz
fisttps
or
aam
push
pop
incl
add
and
xor
add
add
sbb
add
orb
add
and
idivb
adc
push
adc
add
add
loopne
adc
push
addl
decl
or
orl
test
push
add
and
cmp
jg
insb
sub
adc
cmpl
add
ljmp
int
adc
pop
sbb
test
nop
and
add
incl
add
add
or
or
test
and
iret
jle
in
push
rolb
sarb
inc
and
sbb
addl
ljmp
fildl
cmp
add
call
shll
dec
dec
in
decl
dec
or
andl
or
sub
mov
push
scas
dec
add
mov
icebp
or
sbb
or
cmp
dec
imul
add
xchg
add
call
add
inc
repz
lcall
add
leave
add
adc
or
idivb
clc
xchg
add
jo
mov
stos
mov
pop
jbe
int3
add
mov
add
add
in
out
mov
and
sbb
add
add
mov
in
fdivrp
repnz
add
dec
dec
add
adc
popa
je
imul
sbb
rclb
pop
int
aaa
jg
movb
movsb
mov
shrb
inc
std
cmpl
inc
add
dec
cmpsl
add
xor
pushf
ret
pop
mov
push
cmp
mov
push
jmp
add
xchg
jge
sbb
hlt
jbe
add
or
and
mov
pop
xor
cmpsb
add
xchg
iret
pop
adc
repnz
jg
out
bswap
and
add
nop
int3
pop
fs
in
adc
mov
dec
add
test
xor
push
add
add
inc
adc
add
fstpl
outsl
sbb
rcrl
or
dec
cmpl
gs
popl
sbb
rep
push
sbb
fidivrs
jbe
lret
cmp
cmp
sub
jl
sub
add
cld
gs
sub
push
jb
or
aaa
add
jae
and
push
add
and
or
xchg
rclb
xchg
cmp
test
fst
add
xor
mov
mov
add
loop
inc
mov
cmp
dec
mov
add
adc
ljmp
es
add
imul
xor
mov
and
pop
repz
jbe
stos
icebp
dec
daa
shrl
ss
lods
mov
add
out
out
in
add
mov
pop
ss
hlt
or
mov
popa
mov
add
cmc
lods
ljmp
xor
inc
add
pop
adc
or
ja
out
mov
mov
sub
pop
shl
pop
mov
add
sahf
xchg
jecxz
pop
push
cmp
cli
and
and
clc
fidivrs
inc
icebp
jb
add
adc
andb
pop
add
int3
aaa
jmp
add
inc
mov
jg
in
popl
int
jno
out
sbb
aad
and
sbb
repz
sub
adc
sbb
fcomps
rol
leave
lock
inc
xor
scas
sub
test
dec
dec
xorl
add
aaa
jp
cs
sub
mov
lahf
cmp
cld
repz
pusha
xchg
std
rolb
loop
bound
popf
sbb
xchg
or
sahf
jb
ret
fst
or
shrb
cmp
test
jo
sbb
xchg
cmpsb
xor
lret
add
or
mov
stc
cmp
add
divb
or
adc
lcall
scas
mov
hlt
cmp
shlb
inc
pop
shlb
mov
scas
es
ret
adc
js
sar
add
inc
movaps
adc
test
add
inc
mov
inc
mov
loopne
jmp
or
popa
cmp
enter
into
fildll
mov
in
shll
loope
xchg
and
mov
js
xchg
inc
sub
in
xlat
adc
add
mov
pop
fs
sbb
xchg
andnps
dec
or
add
stos
cmp
pop
lods
sub
mov
gs
xor
mov
sub
mov
cwtl
ret
jnp
mov
or
aam
mov
inc
push
cmp
push
decl
and
ret
shlb
je
cmp
sbb
mov
mov
jb
int3
jo
fwait
mov
cld
mov
call
dec
mov
sub
or
ljmp
sub
mov
mov
or
push
das
call
movsl
push
in
inc
int
mov
sbb
add
cmp
mov
and
fwait
test
insl
ds
testb
int3
sahf
jp
push
fsqrt
iret
bnd
sbb
add
jmp
dec
bound
xlat
dec
hlt
jmp
sub
add
outsl
scas
mov
fbstp
inc
xchg
lahf
out
roll
cmp
adc
cs
imul
popa
call
outsb
cmpsb
jmp
jge
movsb
stos
pusha
jnp
enter
add
mov
dec
adc
fs
out
fistl
fisubl
shrl
lock
adc
mov
dec
inc
xor
jl
rolb
sbb
mov
pop
adc
fsubs
cmp
xor
push
push
aam
pop
icebp
push
loopne
insl
inc
and
pusha
adc
xor
push
aam
lret
lods
push
lock
or
or
decl
arpl
mov
stos
xor
in
imul
jg
daa
int3
popf
inc
jae
ljmp
push
out
icebp
jp
cmpl
mov
add
fwait
mov
jno
add
movl
adc
adc
mov
popa
inc
retw
aad
cmpl
std
repnz
sbb
or
aam
push
xchg
pop
and
loopne
jmp
pop
sub
stc
jecxz
iret
test
mov
mov
ret
lds
xor
jle
mov
mov
ljmp
xlat
xchg
inc
pop
and
pop
sub
pop
shll
push
mov
pop
scas
add
repnz
xorb
push
mov
enter
mov
mov
add
mov
mov
movsb
pop
jb
je
jne
add
fsubr
lods
cmp
push
xor
lcall
scas
xchg
inc
add
sbb
mov
mov
push
inc
add
pop
mov
in
add
add
call
shll
insb
cmp
outsl
aas
jo
jp
pop
xor
xchg
mov
mov
cmpsl
fidivrs
push
sub
adc
out
mov
movsb
aam
call
loope
push
inc
push
push
and
sarl
dec
mov
mov
int3
xchg
loop
shll
pop
das
or
cmp
push
mov
dec
out
or
pop
hlt
mov
sub
enter
in
push
cmp
leave
and
adc
cmpsb
fnsave
xchg
xlat
xor
loopne
cmp
or
ss
dec
repz
push
inc
sbb
add
dec
or
xchg
aad
inc
adcl
insb
pop
cmpsl
pop
xchg
mov
mov
leave
dec
insl
pop
jl
lods
cmc
dec
movsl
out
bound
add
mov
aam
daa
clc
and
movsl
clc
fisttpl
bsf
adc
push
movsl
clc
sbb
div
imul
addr16
aam
scas
mov
lock
icebp
aas
popf
push
mov
xor
mov
cwtl
data16
cmpsl
shrl
mov
insl
or
rolb
lods
gs
lahf
sbb
icebp
jecxz
or
ds
xor
xchg
jnp
inc
mov
into
shr
ret
add
push
loop
inc
enter
scas
ds
mov
lahf
imul
sbb
push
loope
pop
mov
idiv
out
hlt
roll
lock
loopne
addb
gs
hlt
mov
rcll
jl
pushf
sahf
or
mov
cld
hlt
cmp
adc
sti
mov
or
xchg
out
pop
adc
bound
xchg
xor
add
pop
mov
negb
mov
add
loope
cltd
xor
ret
mov
outsl
fdivs
mov
sub
push
add
mov
adc
clc
push
cwtl
and
outsb
notb
jns
xchg
adc
or
add
out
push
scas
clc
push
sbb
sbb
pop
cmpxchg
inc
dec
mov
aad
sub
push
inc
cmp
rcrl
push
xor
lock
adc
cmp
filds
jne
test
faddp
les
sbb
ret
add
dec
in
jne
inc
dec
je
dec
cmp
fiaddl
add
dec
jg
mov
mov
fcmovnu
push
movsb
pop
cmp
lret
adc
cld
mov
cld
inc
or
inc
ret
hlt
out
pop
scas
add
inc
mov
jnp
inc
add
inc
mov
jmp
mov
test
decb
push
add
mov
mov
call
mov
lcall
mov
add
ss
jae
test
jl,pn
mov
pop
mov
pusha
xchg
inc
cltd
adc
lret
hlt
mov
push
flds
add
shrb
mov
xchg
test
ss
jl
push
add
adc
sbb
outsb
mov
movsb
scas
pusha
repz
ja
push
add
mov
jbe
mov
xchg
outsb
pop
mov
and
sub
in
outsl
push
sub
dec
add
repnz
in
imul
jbe
ja
cwtl
and
push
cli
sbb
dec
out
nop
cmp
test
xlat
and
mov
xor
mov
mov
dec
test
lock
or
or
shl
xorb
inc
test
mov
jl
xchg
jnp
push
orl
loop
jmp
stos
scas
xor
xchg
xlat
test
xchg
add
ja
repz
push
ret
push
out
and
adc
mul
int
dec
fmull
loope
jae
lea
add
mov
push
xor
cmp
xor
adc
inc
mov
and
add
or
or
or
fisubrs
cmpsb
and
xchg
push
xor
jb
rcrb
cmp
push
cli
jecxz
jae
insb
sahf
cmp
repnz
mov
rcll
xor
js
mov
mov
pop
mov
adc
into
stos
xlat
call
fsubrl
sahf
test
pop
scas
xchg
adc
sub
sbb
test
jae
loop
inc
add
aaa
addl
loop
push
insb
movsl
les
pop
mov
hlt
int3
clc
lea
clc
cmc
imul
jnp
xor
and
rclb
js
sbb
xchg
ja
xchg
scas
lret
bound
test
fwait
outsb
mov
jecxz
outsl
loope
cmp
adc
dec
fisttps
or
mov
inc
clc
inc
mov
xchg
add
test
je
fisubl
sti
sahf
ljmp
outsb
xchg
xchg
sbb
add
popa
stos
xchg
cmp
sub
pop
ficoms
push
pop
les
fidivrl
add
in
int3
push
stos
add
xchg
es
outsl
lahf
movsb
lods
ds
sbb
fmuls
or
and
or
ret
jb
sbb
add
mov
pop
sbb
lret
mov
ret
pcmpgtd
xchg
sub
std
jo
add
cmp
outsl
mov
pop
xor
pop
orl
sbb
mov
scas
filds
jo
xor
enter
inc
incl
aas
or
ficompl
lock
cmpsl
mov
dec
aam
aas
sbb
pop
sbb
jl
inc
mov
ljmp
xor
xchg
cmc
xor
out
adc
or
icebp
es
ds
std
std
out
les
clc
add
inc
ds
jno
jecxz
fdivl
fisubs
pop
int3
push
jbe
xchg
ja
or
sbb
sbb
lods
xor
ds
adc
addl
jle
hlt
cmp
fistpll
cmp
cli
inc
or
cmp
or
loop
jnp
push
or
push
incl
add
pop
adc
cmp
imul
jae
sti
mov
inc
add
cs
pop
inc
add
nop
xorl
into
iret
or
push
aam
insb
push
push
ds
xchg
pop
loope
sub
cld
xor
mov
add
outsl
mov
push
repz
add
adc
cmpsb
mov
and
frndint
xlat
jge
add
xlat
iret
hlt
xchg
int
pusha
arpl
fsubl
pop
push
mov
scas
xor
movsl
loopne
push
pop
add
sarl
cs
push
lret
mov
sbb
pop
ljmp
iret
adc
xor
loopne
push
test
and
push
mov
stos
out
bound
push
jae
das
ficompl
mov
and
pusha
test
in
icebp
addr16
cmp
add
in
or
cmc
xchg
adc
add
out
sub
jbe
jno
cmpsb
imull
jbe
cmp
mov
data16
push
into
xchg
fldenv
int3
in
out
mov
inc
pushf
jl
jbe
icebp
sbb
call
xchg
pop
or
filds
push
mov
and
pushf
icebp
push
pop
loop
imul
enter
out
push
or
add
inc
mov
movsl
fnstenv
enter
push
mov
rcrb
pop
dec
arpl
mov
inc
inc
mov
test
push
mov
aam
jne
scas
inc
cmp
mov
jp
mov
cmpsb
imul
nop
lret
lahf
pop
sub
sbb
adc
movsl
shrb
mov
fstps
sub
ds
mov
stos
or
jmp
inc
outsl
insb
jle
mov
cmp
mov
orl
adc
insl
push
mov
jmp
ret
ljmp
mov
ja
lock
sbb
pop
mov
pop
cmp
call
mov
clc
sti
rolb
cld
cmc
inc
sti
sub
fildl
jo
jle
jne
mov
ljmp
jae
xor
rorw
cmp
negb
mov
inc
mov
jae
and
incb
mov
ss
je
pop
daa
std
bound
dec
xchg
loope
test
popa
movsb
add
inc
pop
stc
pop
pop
mov
stos
pop
lret
push
fildl
addr16
shrb
xor
xchg
iret
push
sub
icebp
add
test
jecxz
scas
inc
xor
cmpsl
dec
and
xchg
cli
setnp
mov
fidivs
mov
mov
ret
mov
add
lea
test
insl
jnp
xorb
jmp
inc
shlb
call
and
pop
cmp
jno
sti
iret
mov
mov
add
jecxz
scas
leave
in
pop
mov
jmp
or
sti
push
pop
mov
mov
into
adc
jl
jge
cltd
inc
clc
push
xchg
ss
xlat
bound
mov
dec
push
gs
or
lahf
inc
movb
sub
xchg
out
icebp
push
push
icebp
jnp
sub
fisttpll
xchg
roll
jo
pop
mov
xor
test
xchg
je
lods
mov
sbb
test
dec
repz
inc
mov
ret
pop
cmp
loop
cmpsb
mov
adc
ja
popf
stos
cmpsb
imul
cmp
ss
ja
nop
dec
repnz
rolb
mov
mov
out
test
jg
cli
jo
popf
shl
cld
xchg
and
push
mov
xchg
dec
or
mov
push
adc
or
and
movsl
call
or
daa
dec
jnp
inc
shl
outsl
inc
fldl
sbb
mov
enter
subb
ret
add
push
bound
shr
xor
into
loop
lods
adc
ret
cld
out
subb
sbb
jp
imul
add
lea
repnz
push
das
and
or
addb
adc
outsl
rorb
shr
xor
out
add
jno
stos
xchg
push
movsb
rorl
adc
gs
cs
lock
ss
pop
lahf
scas
ss
dec
mov
repnz
mov
sbb
pusha
jbe
hlt
jp
clc
mov
jnp
add
add
fbld
mov
lea
lcall
ljmp
mov
roll
jno
pop
inc
pop
xchg
in
push
popf
sbb
iret
stos
and
int3
in
stos
in
bswap
cmpsb
push
push
pop
and
xchg
xchg
xchg
jmp
add
jecxz
popa
push
push
call
jge
pop
push
push
leave
adc
aaa
pushf
shll
out
loopne
and
mov
cld
loop
inc
insl
pop
scas
leave
push
cmp
cs
stos
faddl
push
mov
lods
adc
push
dec
sahf
xor
aad
pop
inc
cmp
mov
mov
jae
mov
out
add
xor
loopne
adc
lret
cmp
sti
xchg
sbb
fs
mov
mov
or
ja
fbstp
xchg
les
xchg
mov
xor
movsl
rolb
add
push
outsb
mov
dec
mov
or
xchg
dec
jae
in
insl
movsb
lcall
fwait
stc
or
inc
out
jo
inc
sub
sbb
mov
sahf
sub
stos
mov
es
ds
cmpsl
loop
repz
dec
jb
arpl
dec
xor
mov
popf
ljmp
in
and
jg
aad
push
les
add
orl
mov
sub
mov
jnp
push
mov
push
sbb
sub
ret
jp
pop
es
rorb
js
out
or
rorb
aad
cmp
pop
dec
pop
outsl
hlt
adc
jns
test
sbb
sbb
mov
jecxz
jno
or
add
lock
nop
sub
or
xor
mov
adc
test
sub
add
fsubrl
sbb
lock
nop
pop
sahf
cs
jl
xchg
stos
mov
push
ffreep
or
pop
dec
ret
mov
cld
mov
jb
xor
pusha
shr
push
add
enter
xchg
jmp
inc
call
loopne
clc
cmp
xchg
and
lock
mov
call
rorl
mov
mov
mov
jecxz
and
pop
in
rcr
jo
xor
xchg
pop
jmp
loop
fwait
pop
sbb
cmp
push
mov
mull
rcrb
pop
mov
ficompl
mov
add
pop
call
sbb
fisttps
adc
mov
xchg
sub
sub
int
insb
ffree
cs
ret
pop
clc
add
mov
aaa
fimull
loope
dec
mov
sbb
push
adc
lock
cld
out
or
push
sub
cmpsl
adc
push
int3
std
in
push
mov
outsb
jmp
out
jns
jnp
clc
and
fcomp
adc
mull
pop
je
cwtl
lret
mov
and
xor
pop
xchg
mov
xchg
scas
rcl
add
fisttps
nop
mov
pusha
and
stos
dec
adc
and
loop
cmpsb
fidivl
call
imul
repz
femms
aas
mov
dec
lret
sahf
xor
popa
jmp
pop
jecxz
mov
or
outsb
push
les
inc
or
cmp
push
popa
pop
mov
mov
mov
add
fldenv
sub
or
shl
sbb
lcall
or
cmp
mov
jmp
sbbl
repz
sbb
cli
das
lods
icebp
dec
mov
mov
ret
dec
ss
cmp
cli
adc
jmp
sahf
int
gs
mov
ja
aam
pop
and
gs
mov
ja
cli
xchg
and
and
out
push
aam
cwtl
mov
adc
orb
call
cmpsb
out
xchg
jle
cmp
sub
or
sbb
imul
enter
pop
sub
and
add
mov
mov
insb
mov
imul
inc
loopne
inc
ds
or
dec
rcll
dec
inc
xchg
xchg
leave
mov
adc
xchg
enter
mov
sub
sbb
jp
mov
dec
adc
dec
arpl
je
data16
or
cs
loop
rcr
mov
push
mov
inc
fisttps
mov
or
adc
mov
cmp
dec
orb
pop
mov
stc
out
pop
adc
dec
pop
fdivrl
icebp
sar
mov
aam
inc
imul
pop
aas
or
enter
jae
bound
dec
cmpsl
pusha
cmpsb
cmp
add
push
jg
mov
adc
jnp
and
dec
ja
sub
pusha
inc
inc
inc
aam
insb
pop
xor
xchg
push
dec
sub
cmp
pushf
stos
xor
cmp
adc
out
shlb
sub
loopne
fdivs
out
les
shrb
ds
call
addl
es
je
cmp
sarb
roll
aas
add
jo
xchg
xchg
inc
je
push
push
jp
xor
in
movsl
cwtl
jae
mov
adc
push
mov
pop
cmpl
ds
push
push
xchg
dec
pop
std
dec
not
out
js
xor
andb
shlb
ds
jbe
mov
add
sbb
das
mov
jns
mov
or
xor
sti
pop
xchg
xorl
mov
repnz
mov
rcll
icebp
jp
mov
sub
pop
and
gs
ds
mov
pop
and
scas
or
incb
mov
stos
dec
das
ljmp
cmc
fidivl
insb
or
xor
pop
js
js
cmpb
mov
pop
data16
sub
incb
xor
pop
jae
and
add
rclb
aaa
mov
and
mov
cmp
inc
xchg
push
rol
push
cmpsl
pop
cld
cwtl
push
dec
mov
dec
ljmp
pavgb
mov
sahf
pop
fsubrp
cmpsb
sub
and
inc
rcr
bound
int3
insb
cld
fsubrs
ss
and
in
add
rolb
outsl
xlat
adc
pop
pusha
je
add
dec
daa
rcrb
insl
ret
dec
rcr
in
mov
ret
dec
lcall
inc
sbb
inc
pushl
mov
dec
testl
adc
repz
dec
xchg
daa
cwtl
vmovhpd
push
add
jbe
stos
or
inc
push
xchg
fidivs
xchg
cmp
sbb
clc
icebp
fidivs
fwait
cmp
out
jl
and
add
sbb
cld
pop
incl
mov
lock
xor
dec
js
cmp
cmpl
pop
add
adc
fs
xor
insb
xor
dec
xor
sbb
sub
fmul
mov
inc
loope
adc
dec
ret
sbb
xor
mov
sbb
mov
pop
add
xor
adc
aas
cs
mov
add
push
mov
lea
add
push
xchg
outsb
inc
test
adc
mov
add
and
jmp
cmp
mov
pusha
cmpsl
mov
sbb
aad
sbb
loopne
aaa
xchg
stos
push
mov
sahf
pop
push
or
sbb
jecxz
add
jb
jne
push
mov
cmp
sbb
adc
stos
mov
in
xchg
add
aaa
mov
mov
and
insl
xor
mov
pop
scas
mov
ljmp
icebp
dec
call
in
mov
sbb
and
sub
in
xor
cmp
imul
xchg
mov
test
mov
test
and
xor
push
pop
or
push
pop
xor
or
ficomps
cmp
fucomip
jno
add
add
add
xor
and
jbe
dec
cmp
mov
fsubrp
fildl
pop
pop
xorl
ret
scas
mulb
adc
nop
push
mov
pushf
pop
cmp
xor
cmp
std
xor
je
sbbb
mov
fisubl
jno
hlt
inc
jl
pop
and
addr16
adcl
mov
mov
loop
pop
jl
sub
cmp
in
insb
cmpl
pop
mov
mov
insl
cwtl
xor
xor
xchg
lods
and
cmpsb
adc
pop
jnp
arpl
arpl
pop
imul
push
mov
or
subl
adc
loop
pop
mov
rorb
add
jne
das
or
xlat
call
leave
adc
frstor
int3
fdivrl
imul
shll
add
stos
inc
mov
cld
add
mov
push
in
test
repz
outsl
cmc
fistps
mov
xor
dec
push
aas
jno,pn
jno
pop
in
rorl
loop
or
jl
jmp
push
inc
imul
int
pop
rorl
jl
mov
adc
and
push
out
cmc
dec
jb
pop
sub
push
cld
rclb
add
sbb
decb
xchg
clc
adc
imul
shrl
adcl
ljmp
andl
or
fdivrs
test
stos
adc
and
cwtl
call
sub
mov
loop
int
addb
bnd
ljmp
mov
andb
push
das
test
inc
and
jmp
sub
ud0
fs
in
mov
addr16
or
into
js
addl
mov
jl
lock
jo
cmp
sahf
pop
push
js
inc
sub
lahf
mov
push
lock
pop
adc
mov
pop
jp
xor
push
adc
popa
mov
movsl
aad
fwait
lahf
ficoml
jo
mov
inc
sbb
xor
fld
sbbb
ret
std
xor
cld
mov
leave
movsl
or
test
in
mov
andl
pop
add
mov
fldln2
xchg
mov
jge
xchg
movl
xor
std
imul
aam
pop
dec
dec
jg
fnstenv
mov
scas
jle
inc
add
ljmp
stos
roll
mov
sahf
dec
mov
in
lcall
pop
mov
subl
test
xchg
mov
push
jae
pop
push
call
scas
into
sahf
mov
ret
dec
aam
mov
fidivl
mov
inc
jge
mov
mov
inc
stos
pop
jl
nop
cmp
pop
push
pushf
push
inc
addl
insb
cli
testl
sbb
or
pushf
popa
lods
sub
sbb
or
jg
pop
dec
sti
mov
movsl
adcb
andl
xlat
stos
push
cli
hlt
ss
sbb
mov
imul
jb
fsubr
inc
pop
pop
pop
mov
mov
pop
clc
xorb
inc
adc
adc
add
push
shl
xchg
test
jne
rorl
lods
stos
ret
inc
cmp
lock
mov
add
push
push
dec
mov
add
out
bound
js
mov
pop
jo
aad
in
add
lock
andb
js
jecxz
ds
movsb
idivb
mov
mov
stos
pop
ss
xor
xor
xor
adc
out
call
sub
dec
mov
cwtl
ja
mov
add
nop
loop
jp
fsubp
rcr
jecxz
shr
xchg
cmc
sbb
and
js
or
je
jle
jg
xchg
jo
xchg
and
pop
xchg
popl
and
rorb
in
fwait
inc
add
sbb
pop
das
lea
dec
test
and
pop
sbb
icebp
add
add
into
nop
in
pop
mov
sbb
gs
in
or
jl
out
jge
sub
inc
jl
add
inc
negb
mov
pop
jg
adc
push
ficoml
das
stos
cwtl
dec
cld
xchg
scas
test
jg
add
mov
ljmp
sub
stos
mov
jp
sbb
inc
int3
mov
cmp
xor
test
jmp
shll
inc
jle
insb
shl
outsl
xchg
lds
pop
stc
cmpsb
aas
cmp
jp
arpl
and
inc
dec
arpl
lret
add
mov
push
cmpsb
or
jo
pop
testb
fcoms
sub
xor
sub
or
lea
imul
shll
xor
ret
adcb
mov
mov
mov
je
scas
das
mov
push
addb
movsl
or
mov
das
and
or
xor
adc
push
outsl
fadds
push
add
roll
xchg
aaa
outsb
cli
les
mov
mov
les
les
leave
xchg
jg
mov
add
jp
jl
mov
lret
cwtl
iret
popl
loopne
test
inc
mov
sub
les
dec
pop
loop
jge
or
ret
jo
fists
lock
and
push
or
insl
inc
pop
sub
scas
cltd
movl
mov
fiaddl
cvtps2pi
test
clc
das
jo
xchg
ljmp
sbb
aad
aas
inc
add
cmp
repz
add
cmp
mov
dec
shlb
mov
insb
mov
or
lds
das
push
mov
jg
mov
lock
mov
xor
push
mov
jbe
jge
xchg
enter
jbe
jge
addl
adc
xor
mov
add
mov
cmp
lea
inc
sub
loopne
sbb
mov
ljmp
hlt
cmc
mov
mov
mov
inc
sbb
sbb
or
pop
mov
cs
in
call
outsl
add
jb
cld
jo
mov
mov
mov
adc
or
xchg
dec
notl
dec
adc
mov
sub
js
incl
das
mov
push
sbb
cltd
lahf
jle
jecxz
fwait
mov
loope
addl
pusha
rol
call
out
imul
mov
psubb
int
sbb
lret
dec
divl
jecxz
sbb
addl
xlat
loop
call
inc
hlt
ljmp
ds
testb
imul
mov
xchg
lods
or
or
pop
aam
das
push
cli
cmp
inc
lods
jo
bnd
sahf
sbb
add
icebp
and
push
pop
xor
int
test
mov
push
lret
shll
ficompl
inc
push
imul
adc
test
and
sub
mov
rcr
cmp
int
inc
out
adc
mov
mov
insl
mov
push
repz
adc
cli
test
das
cmp
cmpsl
xor
andl
fmull
pop
mov
loopne
js
dec
and
add
test
dec
aad
push
lods
push
movsl
cld
aaa
popa
out
sub
lods
xor
mov
push
scas
dec
mov
dec
sub
or
insb
test
cmp
and
pop
lret
dec
push
lock
cmpl
xchg
mov
xor
scas
jb
cltd
mov
daa
loopne
les
or
pushf
sub
inc
shll
ret
das
cs
pusha
mov
imul
adc
ret
mov
sbb
mov
adc
add
filds
add
fstl
cmc
pop
sub
in
insb
jno
pop
testb
popa
add
push
shl
dec
les
jl
push
or
xorl
loop
scas
scas
jb
pop
in
decl
mov
test
int3
inc
or
scas
repnz
push
xchg
out
jg
mov
inc
xor
in
mov
movsb
inc
lea
pushf
or
stos
pushf
adc
sub
or
sbb
pop
scas
xor
add
scas
popa
and
bound
pop
das
sahf
add
repnz
jbe
icebp
popa
mov
lds
cmp
pop
stos
or
loop
and
sbb
adc
jmp
mov
adc
and
shll
fs
mov
pop
aad
add
ds
jp
sahf
stos
iret
pusha
mov
icebp
xlat
inc
and
test
xor
int3
pusha
stc
rclb
inc
and
les
cmp
xchg
cmp
call
cmc
mov
mov
sbb
adc
mov
push
leave
and
sbb
inc
mov
adc
sbb
cmp
daa
pop
add
cmp
cli
mov
loope
jne
pop
arpl
mov
mov
es
cmpb
movsb
cmp
leave
jmp
inc
movsl
pop
xor
orl
push
add
jb
sahf
jp
arpl
fldz
lds
pop
jo
dec
xchg
imul
dec
mov
and
std
jnp
outsb
xor
add
sahf
test
addl
mov
testb
mov
loope
scas
push
jnp
sbb
in
dec
rcll
xor
mov
dec
sbb
repz
test
fcmovbe
cmp
pop
daa
jle
js
stos
inc
xor
les
fs
fildll
ds
push
stos
sub
sub
or
mov
repz
das
cmp
dec
in
mov
mov
sub
stos
int
mov
stc
icebp
dec
sbb
sarl
inc
add
test
roll
xchg
cmp
xlat
out
scas
ret
fists
push
pushf
ds
adc
test
fdiv
in
and
cmpsb
hlt
adc
xlat
xchg
push
fadds
cltd
or
xchg
loop
jno
lea
xrelease
pop
mov
loopne
ljmp
pop
push
sub
dec
or
mov
clc
test
fs
andb
jl
xchg
add
jge
daa
fadds
jmp
pushf
pop
jmp
mov
add
fldt
int3
jge
jb
xchg
sub
fldl
lods
das
ret
xchg
ja
test
shlb
dec
mov
daa
lock
push
lock
cmp
adc
inc
push
mov
mov
xchg
mov
pop
clc
dec
mov
aad
jae
sub
imul
and
fstpt
cld
mov
jg
jno
push
std
cmp
dec
lds
xchg
pop
outsb
subb
das
add
js
inc
add
ds
clc
outsl
dec
sub
scas
inc
movsl
icebp
out
sbb
xchg
scas
xchg
js
or
or
lcall
sub
addr16
xlat
pop
dec
cmovl
jnp
mov
dec
in
or
lock
push
leave
out
aad
add
lock
and
jmp
rorl
rcl
daa
and
ds
mov
xchg
fildl
rcr
fisttpl
pop
xor
loope
enter
aaa
adc
lea
and
mov
imul
add
es
rorl
inc
shll
shl
addr16
push
jge
scas
mov
sti
scas
jbe
lea
mov
lock
mov
mov
push
pop
sub
dec
cli
or
mov
mov
sbb
call
sub
mov
lea
mov
inc
cmc
out
es
push
and
ds
jae
filds
push
mov
jmp
cli
movsl
push
test
pop
mov
test
iret
jns
call
filds
das
repnz
std
xor
rcr
sbb
and
xor
std
adc
jne
add
sbb
cmpsl
xor
dec
imul
fldl
jp
jne
loopne
sbb
pop
out
inc
mov
jae
pop
das
or
addl
xor
xor
incl
add
sub
xlat
xor
add
mov
mov
stos
test
jle
ret
and
push
scas
outsl
mov
loopne
ljmp
jl
mov
ret
pop
loopne
imul
pop
xlat
rclb
sub
inc
loopew
pop
clc
and
in
dec
gs
jecxz
mov
inc
sub
mov
or
push
fcoms
push
push
mov
push
movb
mov
js
fs
mov
xchg
cli
divl
add
in
add
mov
es
push
notb
dec
je
inc
insl
and
pop
jmp
cld
push
adc
je
cmpsb
adc
xchg
vmovupd
push
aad
lods
popa
add
mov
push
fisubl
mov
push
rolb
cmp
jg
sbb
ds
jge
mov
lcall
mov
sub
mov
inc
jl
pop
test
fadd
push
adc
idiv
outsl
daa
xor
and
fs
leave
jnp
in
daa
arpl
inc
aaa
bound
mov
jg
stos
push
outsb
shlb
jno
sbb
mov
pusha
mov
roll
clc
fucomi
cs
add
outsb
inc
mov
addl
scas
bound
inc
in
ror
sarl
inc
inc
cmp
dec
jp
pop
cmc
sbb
mov
mov
popa
je
inc
dec
pop
leave
fucomi
jo
scas
adc
adc
sub
inc
mov
pcmpgtb
and
jmp
sbb
mov
push
popl
cmp
insl
out
into
movsb
mov
mov
dec
imul
jnp
push
mov
jns
aam
or
sub
sahf
sub
sbb
lods
jno
imul
sbb
pop
ds
lcall
aam
ret
adc
loope
sahf
call
lahf
and
pop
or
pop
cs
push
aam
shl
pop
cld
and
lret
lods
xchg
push
add
bound
inc
mov
sub
ss
pop
cmpsl
stos
lahf
cs
je
mov
mov
dec
in
int3
scas
je
loopne
adc
stos
mov
push
scas
add
int3
cmp
inc
adc
push
dec
mov
or
push
sahf
mov
pop
lods
decb
or
push
jo
test
rcrl
jg
mov
xor
dec
adc
je
pop
jecxz
jae
sbbb
inc
pop
out
adc
and
loopne
mov
and
addb
jp
cmp
hlt
or
mov
jmp
inc
add
push
or
push
aaa
ss
adc
hlt
adc
jp
lock
fsubs
testl
repnz
ljmp
sub
pop
mov
js
in
repnz
mov
pop
xor
inc
cmp
sbb
sub
pop
add
sub
test
mov
xor
fisubl
dec
ljmp
ret
icebp
inc
jns
jns
sbb
sbb
mov
dec
movsb
lods
xchg
sub
cmc
setle
inc
or
pop
mov
xchg
testb
aaa
jno
or
aas
lahf
jno
or
pop
xorl
lcall
lods
pop
push
jg
cwtl
outsl
mov
inc
jb
stos
test
js
fdivl
ljmp
xchg
xor
mov
stos
push
sbb
or
inc
ffreep
pusha
popa
or
push
cmp
jnp
mov
or
lahf
bound
jl
add
push
fbstp
ret
jb
idivb
insl
movsl
inc
jge
fldcw
into
mov
rorb
sub
call
dec
lds
and
xchg
adc
aas
fnstsw
call
fs
aad
lahf
lea
imulb
cmp
sub
lods
dec
test
and
hlt
adcl
jl
mov
pop
adc
sub
dec
and
in
adc
stc
pusha
mov
shlb
jnp
dec
int
std
rcll
arpl
jae
or
and
xor
lret
sub
inc
push
xor
jp
sub
mov
pushf
shl
das
outsl
in
fsts
mov
loopne
scas
mov
mov
jp
sahf
push
mov
daa
cmp
icebp
cmc
add
sbb
mov
mov
mov
inc
or
inc
push
jmp
cmp
cmp
addr16
ss
ret
mov
cwtl
dec
mov
stos
out
xchg
mov
stos
lret
cmc
inc
mov
mov
dec
adc
push
sub
or
cli
inc
cmp
roll
mov
xlat
rcrb
add
in
rcll
push
xor
imul
jno
lds
je
add
subl
repnz
subl
add
imul
pop
inc
cmp
call
fadd
sti
outsl
aad
jecxz
fucom
xchg
sbb
lcall
or
jmp
mov
push
cmp
jno
hlt
pop
lea
lea
fnstsw
inc
es
bound
push
fbld
sbb
test
cltd
adc
mov
xor
outsb
add
sub
jns
xor
mov
add
inc
sbb
in
add
filds
rol
je
cmc
loopne
xlat
aaa
cmp
ds
and
xchg
xchg
xchg
test
cwtl
call
push
or
pop
sub
aad
pusha
adc
lret
int3
or
inc
leave
mov
mov
shrb
or
sbb
fidivrl
mov
cmpsb
mov
xor
mov
mov
aam
test
inc
inc
addr16
sbbl
or
pushf
imulb
sbb
aas
mov
inc
outsl
and
pop
repnz
push
jo
push
stos
shlb
repz
jl
fcomps
loop
jp
xor
fsubs
pop
das
pop
fstpt
movsb
arpl
xchg
mov
mov
push
and
xor
add
cli
jnp
jo
jmp
jg
enter
inc
xchg
jp
adc
mov
xchg
js
adc
jg
sbb
sbb
lds
pop
fadd
mov
lret
popf
xorl
arpl
mov
loope,pt
mov
pop
mov
and
mov
xor
cmp
roll
pop
dec
add
pop
pop
sbb
pop
mov
arpl
ss
aaa
and
sahf
repnz
pop
popf
popf
add
ret
lods
sbb
jge
push
lahf
cmp
inc
mov
or
xor
scas
jnp
aaa
sbb
mov
pop
and
and
inc
dec
mov
stos
insb
jp
ja
cmp
fists
sarl
mov
loopne
in
icebp
or
jae
adc
pop
test
ffreep
mov
mov
mov
push
mov
add
sub
add
ljmp
add
dec
lcall
iret
arpl
and
pop
xor
cmc
push
lahf
dec
jnp,pt
xor
nop
lods
xchg
iret
aaa
adc
sbbl
mov
rcrb
shll
pop
inc
dec
push
pop
push
mov
cwtl
pop
pusha
mov
xor
sbb
addr16
mov
mov
rorb
inc
sub
inc
mov
inc
or
dec
xchg
cmpsb
test
nop
aas
imul
mov
popl
cmp
mov
ret
push
or
adc
les
test
leave
stos
sub
jo
push
and
loopne
arpl
adc
scas
loop
add
cmp
and
ret
jne
inc
sti
fadd
sbb
stos
fistpl
pop
xchg
inc
push
rcr
enter
or
jmp
popa
mov
mov
aad
mov
adc
dec
flds
mov
scas
jp
jp
dec
mov
pusha
inc
jnp
hlt
xor
mov
jno
int
cmp
pushl
mov
ljmp
scas
mov
imul
and
int3
jae
mov
jno
cmc
insl
cmp
adc
lcall
orb
ret
xchg
repnz
jp
fwait
sbb
rcrl
loopne
flds
insb
or
cs
mov
sbb
shrb
mov
insb
fildll
mov
sub
add
cmpsl
push
dec
and
push
pushf
aad
mov
in
js
fiadds
test
mov
jge
in
xor
shll
jg
or
cmpsb
pusha
pop
push
test
cmp
and
gs
es
popa
sub
fsubrl
cmc
ret
adc
sbb
or
shr
lar
fsts
imul
push
adc
xchg
and
je
dec
mov
mov
xchg
push
mov
pop
ret
stos
jecxz
das
ds
push
or
jb
cli
adc
fdivrs
in
jbe
jmp
rolb
sub
jp
mov
orl
add
mov
or
rcrb
fst
pavgb
out
and
mov
mov
jo
jnp
aaa
mov
push
hlt
scas
sbb
xchg
loopne
push
pop
push
jno
inc
out
daa
scas
pop
or
jnp
xor
mov
ljmp
jne
ljmp
repz
mov
push
popf
into
adc
sbb
cwtl
inc
test
mov
mov
mov
xchg
stc
stos
lahf
les
enter
sub
fcom
loop
scas
pop
mov
pop
jb
ja
movsl
dec
stos
sbb
lods
or
xor
out
jne
adc
push
sub
sbb
mov
cmpl
and
xchg
cmp
outsb
push
pusha
xchg
mov
stc
mov
aas
pop
pushf
push
push
mov
mov
jg
shrb
enter
fwait
jecxz
cmpsb
jecxz
dec
jge
fcoml
js
je
movq
jg
push
mov
pop
jne
xchg
pop
add
dec
and
clc
inc
xchg
mov
add
or
inc
lcall
sub
mov
out
lds
jbe
lcall
ss
ret
sbb
xor
add
mov
inc
je
mov
bound
push
stos
pop
sbb
psubb
xchg
cli
fldcw
dec
sub
incl
arpl
out
aad
loop
push
jle
pusha
pop
aam
sub
inc
pop
sbb
dec
pop
push
scas
mov
lock
repz
dec
loopne
rcl
stos
cmp
jne
lret
jmp
adc
adc
add
jp
pop
xor
push
mov
sti
stos
cmp
decb
mov
add
xchg
aas
rcr
inc
leave
sti
push
cmp
inc
clc
inc
jne
or
mov
shrb
mov
test
pop
add
adc
shl
jmp
add
cmp
out
xchg
inc
mov
xchg
jb
cmp
jbe
adc
les
push
pop
ds
mov
pop
das
andb
sub
push
and
or
das
cmp
push
jl
mov
rol
das
sbb
dec
dec
ds
mov
loopne
mov
push
dec
or
xchg
cmpsl
adc
call
adc
sub
sub
pop
jecxz
xchg
roll
xchg
imul
adc
pop
sbb
scas
jo
jge
sahf
insb
mov
and
in
mov
push
in
push
sbb
push
xchg
cs
pop
inc
roll
or
pop
mov
dec
or
sti
mov
xor
test
repz
imul
jbe
jb
and
lea
sbb
shrl
xchg
es
movsl
mov
sbb
rolb
push
fsub
cwtl
out
movsl
xchg
jno
and
shrb
pop
jae
and
mov
push
jecxz
mov
xchg
inc
insb
pop
jp
sbb
arpl
inc
sbb
mov
mov
adc
and
das
jbe
sbbl
jne
push
lcall
cli
jmp
rcrl
ss
jl
pop
and
jl
inc
pop
dec
fprem1
mov
adc
sbb
loopne
les
push
jne
scas
mov
hlt
jo
push
stc
jle
leave
add
add
je
ljmp
popa
sbb
in
xchg
sbb
cmp
loop
sbb
fsubp
xor
xchg
cmp
into
dec
jne
mov
ds
ficomps
pop
fwait
xchg
mov
inc
inc
jo
push
repnz
mov
sub
xchg
jnp
xchg
mov
repz
inc
call
and
push
lock
sbb
adc
lahf
aad
or
data16
fmull
pusha
int3
fnsave
and
jmp
aas
stos
repz
mov
inc
jp
fwait
jmp
das
hlt
sub
mov
shll
ljmp
out
aad
mov
les
jecxz
insb
inc
aad
adcb
stos
mov
sbbl
sarb
std
jbe
fiaddl
mov
incl
sub
jmp
test
dec
shlb
pop
jecxz
fstpl
jecxz
rclb
inc
insl
sbb
roll
push
push
cmpsb
pop
cmp
dec
push
mov
addr16
pop
mov
lret
mov
ret
into
enter
cs
inc
insb
push
inc
lock
adc
lea
mov
or
pop
lods
inc
add
sub
xchg
test
mov
cmp
add
aaa
scas
cmc
inc
daa
push
inc
pop
jle
leave
add
sub
inc
fistpl
mov
popa
push
cwtl
inc
shll
fmuls
inc
mov
cmp
dec
movsl
je
fsub
les
add
insb
push
sub
pop
sbb
ret
ficompl
cmp
adc
xchg
or
sahf
jb
cmpl
fnsave
imulb
bound
pop
inc
int
fimuls
out
testb
out
leave
push
sub
loope
jne
xchg
test
xchg
xor
out
in
loop
add
adc
mov
scas
lods
gs
push
mov
inc
xchg
and
xor
adcl
aad
pop
sahf
jno
push
popa
pop
xor
pop
test
decb
jp
xor
test
dec
adc
shrl
test
xchg
clc
push
jle
ffreep
add
iret
add
jl
mov
add
sbb
cld
mov
mov
jns
lods
mov
jecxz
sahf
enter
insl
push
push
arpl
inc
and
sarl
call
add
add
push
pop
or
std
cmp
xor
or
add
add
sarb
dec
and
jo
aad
push
fisttpll
insl
pop
cld
xchg
faddp
xchg
popf
xor
xchg
jp
sub
lods
cli
push
decl
gs
mov
mov
dec
inc
sbb
mov
aam
pop
push
xchg
xchg
shrb
mov
push
add
push
xchg
mov
push
imul
xor
insb
les
test
pop
and
shr
test
sbb
pop
mov
jbe
inc
jecxz
idivl
sbb
pusha
stc
rol
sbb
mov
ficomps
mov
aas
jge
rclb
das
dec
sbb
inc
push
push
js
and
loop
cmc
cmp
popf
ror
or
jp
cmpsl
inc
addr16
aam
incl
movsl
loopne
xchg
cli
sbb
pop
inc
fwait
loopne
or
lods
and
xchg
or
and
fistpll
mov
mov
movsb
dec
dec
iret
mov
cmp
call
in
shl
lock
and
or
sbb
out
xlat
inc
add
sub
sbb
loopne
push
push
jecxz
aas
add
jmp
push
mov
in
addr16
adc
aam
push
or
and
inc
mov
adc
cs
stos
fnstenv
ds
and
jbe
ds
sbb
out
mov
or
dec
ds
iret
and
loope
jmp
or
shrl
pusha
bound
push
xchg
fidivrl
push
daa
inc
mov
mov
test
jl
rorb
inc
cmpl
cmp
fsubrs
inc
and
add
adc
fcoml
push
inc
daa
xlat
rol
push
dec
int3
add
sbb
jae
push
push
loope
aad
sbb
push
xlat
adc
loopne
mulb
or
cmp
mov
push
xchg
out
roll
shrb
sub
pop
sbb
mov
dec
or
sbb
repz
add
cmp
test
daa
add
xchg
repnz
add
lods
add
lea
add
or
inc
cld
push
mov
insb
mov
mov
adcb
out
or
cmpsb
add
rclb
out
sub
add
mov
sbb
mov
inc
xchg
xchg
push
lret
rcr
push
jns
xchg
or
mov
push
loopne
aas
push
jo
ds
clc
xor
stos
jecxz
enter
scas
jnp
fdivr
add
pop
sbb
push
jl
in
sbb
add
cmpsl
aad
or
mov
in
mov
jmp
mov
xor
xchg
loopne
jnp
outsl
xchg
mov
pop
add
in
mov
loope
in
cli
xor
and
cmp
cmp
outsl
orl
mov
sbb
jmp
insb
push
jmp
adc
in
lods
ret
mov
xor
ss
cmp
ss
jb
mov
push
ret
xor
lret
cmpb
fdecstp
lods
pop
xchg
pop
pop
push
jl
cltd
lret
jle
push
fsubs
inc
fs
int3
pop
orb
lahf
jo
mov
mov
mov
pop
cmp
xchg
loope
daa
lea
mov
and
repnz
add
test
or
jmp
xchg
xlat
push
and
and
loope
lock
loopne,pn
fyl2xp1
adc
adc
sahf
jg
pop
dec
mov
out
outsl
loopne
test
mov
xor
leave
inc
dec
rcl
jne
les
push
inc
lcall
xchg
mov
lods
adc
outsl
out
daa
add
cli
test
xor
push
mov
ret
or
in
fistpll
aas
cltd
loope
jg
out
mov
mov
icebp
add
test
icebp
adc
fdivr
and
test
sub
sbb
or
inc
popf
cmp
mov
adc
imul
push
cld
lret
lds
mov
mov
aaa
adc
cmpsl
xor
mov
sub
pop
mov
mov
fwait
addr16
stos
jp
add
inc
lea
cs
iret
push
mov
repnz
or
lods
dec
push
fiadds
adc
or
mov
fisubl
mov
mov
bnd
scas
inc
xchg
mov
add
push
jmp
sub
jbe
jmp
mov
cmp
incb
test
pusha
jnp
aas
in
sub
pop
sarl
ja
cld
sub
adc
inc
test
jecxz
or
stos
mov
test
rorb
mov
fdivs
in
add
xor
sbb
testl
pushf
xlat
push
adc
js
repnz
int
scas
pop
mov
sahf
daa
xlat
popf
jp
loope
push
orb
lahf
cmp
lcall
out
fistpl
insl
rclb
and
mov
inc
mov
and
rclb
aaa
mov
mov
lods
push
pop
imul
movsl
cmpsb
lret
adc
mov
xor
mov
stc
pop
cmpsb
or
outsb
shll
add
or
cmp
lahf
pusha
test
xlat
test
scas
inc
iret
mov
outsb
in
sub
lods
mov
mov
push
dec
test
inc
cmp
or
mov
adcl
sub
mov
sub
cltd
cmp
insl
in
scas
or
mov
lcall
sbb
xchg
shlb
fnstenv
jne,pt
jecxz
mov
add
lds
push
out
add
fwait
cmpsl
adc
insb
mov
loope
mov
adc
ficomps
lock
add
add
pop
icebp
out
loope
mov
sbb
cmp
int
in
pop
loopne
pop
jo
ljmp
ret
xchg
add
jecxz
push
mov
fldl
or
push
out
inc
jecxz
sbb
add
sub
push
adc
cmp
xchg
frstor
jne
or
pushl
loopne
outsl
pop
fnstsw
jl
dec
mov
push
sbb
in
jl
jge
jecxz
inc
dec
push
daa
sub
test
enter
dec
ret
sub
mov
movsl
sbb
mov
push
mov
dec
f2xm1
push
xor
xor
sbb
inc
push
in
lret
push
inc
xchg
and
cmpb
cmp
shlb
aaa
mov
in
dec
mov
inc
outsl
xchg
pop
jmp
adcl
pop
add
test
imul
fistpll
stos
push
xor
andb
mov
cmp
js
jo
pop
cmp
mov
inc
pop
pop
mov
xor
sub
aad
inc
call
ljmp
cli
cwtl
arpl
repz
dec
loop
dec
inc
xor
sbb
notb
mov
mov
adc
lahf
jge
pushf
or
mov
jb
or
mov
scas
jg
insl
mov
jecxz
sahf
cltd
adc
cmpsb
add
adc
and
ds
inc
jb
fdivrl
mov
sarl
adc
sub
mov
adc
pusha
psubd
dec
add
dec
mov
clc
jo
xchg
cmpsl
fdivr
pop
push
sbbb
sbb
mov
push
repnz
mov
add
fs
push
inc
pcmpgtw
add
push
stos
xor
rcrl
icebp
push
sti
out
out
int3
icebp
jmp
or
enter
pop
stos
jecxz
data16
in
scas
dec
push
fstps
mov
adc
orl
sbb
and
cmp
lods
lock
stos
fwait
cli
out
push
scas
add
mov
gs
cs
xchg
iret
xlat
sbb
dec
adc
jg
mov
lods
arpl
in
push
out
cmp
mov
xchg
push
test
inc
es
in
cmpsb
xchg
ds
jge
pop
aas
outsb
add
sbb
or
movswl
scas
adcb
mov
cmpl
and
pop
jl
inc
xor
dec
leave
jp
lcall
test
and
push
out
test
xchg
adc
fucomip
subb
les
scas
sub
mov
mov
popa
imulb
cs
and
xchg
outsl
jno
lods
imul
daa
sub
outsl
punpckhbw
mov
cmc
scas
lods
popa
imul
lahf
xlat
outsb
test
add
cmp
pop
cmp
int
scas
push
sub
mov
mov
movsb
shll
add
pop
movsl
jnp
ja
or
dec
lea
jmp
mov
movsl
mul
adc
xlat
hlt
add
jl
xchg
ljmp
and
cmpsl
mov
imul
shll
mov
xchg
in
mov
jl
mov
in
xchg
movsb
add
mov
inc
push
add
xor
movsl
addl
mov
pop
outsl
testl
xchg
and
add
mov
xchg
or
mov
clc
cmp
mov
or
sbb
icebp
loop
and
test
loop
out
loope
sbb
les
mov
pop
dec
daa
in
insl
enter
lcall
sub
dec
cli
mov
pop
jo
scas
mov
pop
test
mov
and
inc
xor
sub
lahf
push
push
jecxz
jge
sub
cwtl
add
xchg
adc
or
push
push
jo
add
add
ret
add
sbbb
movsl
dec
mov
mov
pop
mov
mov
in
mov
arpl
int
imul
rolb
inc
out
pop
mov
das
inc
mov
cltd
mov
aad
movsl
das
jnp
pusha
or
pop
es
and
mov
test
fwait
mov
inc
or
add
shlb
popa
adc
aas
mov
pop
xchg
outsb
mov
negb
cmpsb
mov
jecxz,pt
dec
incl
fdivrl
lcall
push
pushl
pop
jecxz
aaa
arpl
xor
jno
mov
mov
add
stos
jle
fmull
outsb
aam
and
shl
xchg
xorb
xchg
shrb
adc
xor
add
lods
xor
cmpsl
rorb
add
insb
adc
outsb
inc
jne
rorl
mov
lods
mov
jo
insl
arpl
cli
inc
mov
imull
inc
push
rorb
movsl
jbe
pop
cwtl
jp
mov
inc
adc
loop
or
rol
imul
add
out
push
rcll
add
stos
sbb
mov
push
mov
shlb
leave
jg
adc
xor
shll
inc
loop
iret
cmpsl
xor
dec
fldl
inc
mov
jno,pt
mov
les
pop
movsl
subb
sub
or
adc
add
dec
add
loope
lock
adc
mov
xchg
inc
mov
pop
jl
push
rcr
pop
lcall
and
add
loopne
popf
movsb
lret
ret
xchg
dec
mov
sbbl
and
and
data16
mov
jb
and
xchg
out
jne
stos
pop
ss
push
shl
mov
push
adc
mov
pop
sbb
cs
push
das
jo
outsl
mov
jb
inc
outsl
and
cmpsb
push
and
xchg
out
in
enter
cmpsl
push
es
push
loop
jg
cld
jp
cmp
cmpsb
fistpll
call
arpl
cmpl
fistpl
daa
mov
mov
hlt
sbb
jle
es
add
or
call
ss
jge
dec
or
and
stos
push
sbbb
das
adc
adc
test
lods
sub
icebp
addr16
pop
shrb
loop
js
stos
test
roll
sub
aam
popf
stos
dec
shrl
push
pop
lcall
mull
pop
push
or
push
push
push
aaa
fsub
lods
out
lcall
and
or
dec
push
movb
test
out
loope
adc
push
pusha
subl
adc
es
out
cmp
and
fsubrs
mov
push
int3
imul
movsl
sti
cmp
out
in
cmp
xchg
pop
rol
fldenv
mov
pop
or
test
sub
jg
std
push
pop
mov
popa
pop
jnp
and
adc
mov
add
lcall
aas
or
mov
cwtl
or
imul
js
lret
jo
shlb
ret
andl
xor
push
xchg
f2xm1
add
out
pop
mov
loop
test
rorl
fnop
push
mov
sar
jnp
sub
clc
or
filds
jg
or
loope
jne
xorb
test
or
fidivl
mov
sbb
aas
cld
and
int3
test
xchg
outsl
outsl
sti
sbb
fisubrl
push
lock
shll
ss
jnp
push
adc
shlb
add
shrb
repz
and
push
cmp
inc
cwtl
in
sti
lret
mov
imul
or
movsb
pushl
pushf
lret
shrl
add
xchg
in
push
jne
jge
xor
add
cmpsb
icebp
shll
insl
push
shlb
add
cld
adc
xchg
sub
xchg
int3
arpl
sahf
dec
inc
repz
mov
dec
insl
loop
push
adc
push
inc
sub
scas
jge
int
dec
dec
hlt
jle
xor
sub
push
call
insb
outsb
sar
call
out
sub
popa
push
jmp
pop
outsb
jle
sub
mov
jnp
jecxz
rcrb
outsl
mov
and
ja
pop
pop
mov
jecxz
mov
je
cmp
cwtl
sbb
add
cmp
dec
cmp
jecxz
push
mov
add
jb
mov
jo
iret
mov
adc
out
jl
roll
dec
inc
inc
pop
and
lock
mov
push
xor
int3
call
test
xor
test
outsb
xchg
mov
dec
test
push
dec
nop
lods
int3
pusha
jno
mov
jge
loopne
adc
xor
add
rcrl
inc
fsub
inc
shl
xor
filds
add
or
iret
les
std
stos
imul
push
fwait
and
push
xor
cs
or
xor
xor
lock
sbb
loopne
cli
and
sbb
cmp
mov
mov
inc
js
mov
call
ja
pop
mov
add
or
jno
lods
push
push
stc
dec
cli
cltd
call
inc
nop
mov
mov
ret
sub
fsubrl
dec
pop
mov
in
es
rcrb
cmp
mov
testb
sub
lock
popa
mov
push
dec
rcl
and
cld
sub
mov
outsl
pushf
sar
int
cltd
dec
pop
mov
xor
sti
ret
xchg
jo
mov
cs
iret
ficoms
or
sarb
cmp
lods
mov
shrl
xor
aam
in
adc
mov
push
rol
adc
jbe
add
push
mov
inc
adc
mov
shrb
adc
iret
sub
icebp
dec
or
pop
mov
ds
sbb
push
add
cmp
loope
add
pusha
jbe
push
pop
add
cs
gs
add
mov
test
push
jae
rcr
push
mov
sarb
sub
mov
subl
int3
xchg
mov
push
cs
xor
lea
cmp
cmpsb
xchg
cli
into
sub
orl
test
lcall
pop
repz
mov
add
pop
fcmove
sub
cltd
movsb
jle
inc
jl
adc
push
pushf
popf
jne
and
inc
adc
xchg
add
dec
test
or
ljmp
loope
ret
pop
or
jo
loop
jae
jmp
xchg
sub
loopne
cmp
nop
lock
mov
cmc
inc
adc
in
pop
adc
addr16
std
adc
cmp
mov
notb
iret
movsb
orb
or
jbe
mov
outsb
rcrb
call
push
subl
push
lea
xorl
add
or
add
xchg
push
sub
push
lock
pop
mov
pop
mov
inc
jo
popf
rorb
mov
jo
dec
ret
mov
or
xor
js
pop
pop
fld
pop
cld
inc
inc
sub
pop
xchg
and
ljmp
sti
mov
loop
mov
cmp
int3
mov
add
xor
sbb
mov
inc
idivl
mov
cmp
out
inc
mov
pop
shr
cmp
or
test
hlt
not
inc
push
nop
loopne
cmp
jmp
inc
cmp
mov
movsb
sbb
rcll
cmp
into
add
js
das
sbb
clc
adc
pop
lock
mov
bts
insl
cmp
jns
lea
jge
xor
fcompl
cmp
aaa
movb
fisttpl
push
sbb
rcl
xchg
mov
inc
pop
jg
mov
jle
cmovns
adc
mov
mov
jo
nop
fbld
lods
lock
or
popa
inc
push
cmp
shll
das
lods
inc
aas
adc
pop
mov
adcb
pusha
pop
test
add
push
lock
or
outsb
enter
cmp
pop
sbb
add
fmull
mov
outsl
push
add
js
ds
andb
idiv
dec
movsb
jbe
and
inc
imul
out
mov
roll
lea
sbb
pop
mov
repnz
clc
pop
sbb
adc
les
pop
add
xchg
jb
cltd
repnz
mov
push
mov
jecxz
arpl
fistpl
cmp
shll
add
inc
xchg
xchg
mov
clc
les
gs
out
mulb
fldcw
in
pushl
addr16
or
push
and
dec
movsb
push
subb
dec
fists
loopne
dec
ret
xchg
test
lds
xor
dec
test
pop
mov
sbb
jnp
push
push
push
ds
cmc
xor
jmp
mov
jne
arpl
jmp
addl
mov
pop
jbe
mov
jg
xchg
jg
or
and
orl
and
pop
adc
xchg
cwtl
ljmp
fimuls
xchg
out
rcll
es
and
shrb
sub
test
movsb
cmp
adc
ret
xor
inc
cltd
and
mov
adc
addl
hlt
cltd
xchg
cmp
sub
cmpsb
xorl
mov
subb
sbb
je
mov
or
add
les
andb
pop
add
push
jp
fisubs
test
push
orl
in
sbb
mov
xchg
sub
setnp
and
mov
enter
and
clc
push
dec
in
dec
jecxz
push
cmp
mov
cmpsb
lcall
je
or
pop
inc
nop
fldl
shlb
add
jmp
inc
dec
mov
je
jne
into
filds
clc
sbb
imul
aam
rclb
loope
lea
leave
loop
mov
cmpl
or
jl
or
fnstsw
cld
add
les
addr16
mov
loopne
jb
xchg
not
xchg
jb
mov
dec
aam
jge
dec
sub
add
shrb
jg
insb
test
filds
test
inc
sub
adc
lock
out
mov
sub
loopne
jmp
add
cmp
adc
hlt
jmp
aad
mov
pop
inc
add
scas
aam
mov
push
test
jle
das
pusha
xor
int
sub
clc
ja
loope
dec
add
and
mov
mov
cmp
mov
jle
lea
add
mov
sub
xchg
sbb
jnp
int3
push
shll
loopne
pop
push
jmp
sbb
push
sub
sub
push
xchg
mov
xchg
lcall
loope
out
add
test
icebp
rolb
stos
pusha
adc
or
jmp
hlt
stos
cli
inc
pushf
fisubl
sub
test
and
movsl
aas
push
outsb
movsl
inc
outsb
push
cmp
pushf
test
ss
adc
sub
push
xchg
adc
lcall
xchg
xor
js
add
out
pop
subb
cmp
fsts
movsb
lahf
sahf
pop
jle
test
inc
imulb
sbb
jecxz
cltd
or
loope
push
pop
jb
xor
add
mov
adc
mov
mov
dec
sub
jb
sbb
push
ja
jle
int3
out
mov
xorb
mov
mov
xlat
xchg
ds
adc
fisttpll
sub
inc
ret
mov
push
pop
push
loope
cwtl
mov
ds
jo
inc
call
insl
daa
loopne
sahf
or
and
push
loopne
mov
and
lcall
mov
add
incl
push
int3
ljmp
lods
sbb
adc
fdiv
bound
or
pop
jl
dec
ja
xor
outsl
icebp
pop
addr16
lret
cld
push
xchg
outsb
pushf
stos
lods
pop
aad
or
in
jbe
idivb
out
jle
dec
out
faddl
jp
mov
push
pusha
ret
scas
mov
push
push
pusha
sbb
adc
sub
cmc
je
xor
and
push
repz
lea
pop
xchg
adc
cmp
sbb
dec
sbb
cmp
mov
mov
sub
bound
xor
dec
sub
mov
popa
cmc
ljmp
pop
movsb
lds
ljmp
inc
in
imull
test
lods
jae
inc
cmc
adc
icebp
dec
int3
rolb
lea
xorb
push
clc
pop
sahf
nop
subb
mov
fbld
js
pop
jl
in
jbe,pn
pop
ljmp
imul
call
xor
jp
or
xchg
mov
std
or
bound
add
repnz
clc
xchg
cwtl
jnp
sbb
lret
sbb
sbb
loope
in
cmpsl
pusha
outsl
xchg
jo
mov
and
adc
push
fnsave
test
sahf
mov
cmpsl
movsl
aas
cmp
xorb
mov
cmc
lcall
mov
jno
loop
ds
or
mov
test
stos
push
hlt
imul
adc
in
repnz
sti
xor
mov
sbb
add
sbb
add
inc
int
inc
loope
movsl
sbb
imul
or
leave
sahf
dec
addr16
pusha
stc
sub
mov
add
scas
les
push
inc
mov
outsb
push
mov
imul
loopne
cmc
mov
pop
daa
ror
nop
mov
dec
imul
shl
jecxz
pop
clc
or
test
inc
lahf
sub
rcrb
xchg
push
jmp
push
adc
mov
fsubr
aas
je
cwtl
jne
fmulp
test
jmp
adc
mov
mov
loopne
popa
add
mov
push
jp
mov
push
scas
stos
mulb
sub
or
push
fidivl
cmp
inc
push
dec
fbld
inc
sub
sub
dec
mov
js
xor
or
lret
popa
or
or
pop
aas
testb
lods
mov
or
nop
aas
jl
jnp
clc
xchg
out
lods
sub
dec
aaa
insb
insb
ror
pop
and
add
hlt
pop
dec
xor
fistpll
sbb
popf
popa
dec
repz
imul
addl
mov
bound
sarl
mov
inc
js
ds
add
push
nop
aaa
add
pop
jl
scas
loope
push
or
in
jns
cmc
mov
sbb
pusha
nop
out
xlat
add
add
pop
pop
out
xor
pusha
loop
icebp
adc
shrl
inc
dec
pop
jae
dec
enter
mov
mov
adc
jno
push
stos
add
mov
xchg
loop
mov
cltd
inc
cmp
xchg
xchg
pop
stc
jge
fisttps
jge
fisubl
pusha
pop
dec
test
add
int
clc
mov
insb
mov
push
test
or
jae
push
add
inc
pop
sti
aam
sbb
cltd
sbb
push
cmpsl
cmp
cmc
cmp
push
pop
jecxz
pop
jmp
jo
scas
mov
dec
pushf
imul
daa
mov
stos
scas
push
mov
sbb
shl
fwait
push
in
test
enter
iret
cmc
xor
pop
sti
popf
adc
add
mov
cli
ret
dec
adc
in
sbb
data16
sub
push
shlb
push
out
jecxz
cmp
ljmp
mov
lret
xchg
add
icebp
rcrl
cmpsb
mov
out
mov
pusha
xchg
adc
adc
xchg
or
lds
or
push
jmp
pop
es
add
dec
jp
cmpl
mov
out
rcrb
inc
dec
jb
push
ret
push
add
pop
fwait
push
subl
popa
or
cli
mov
dec
xchg
fstl
jns
push
pusha
xchg
and
ret
sti
data16
ljmp
mov
jb
mov
fwait
sub
inc
dec
push
ret
xor
jge
cmp
ffreep
sbb
in
mov
xchg
push
or
enter
sbb
cmp
bound
pop
js
sarb
adc
ret
cltd
push
clc
jb
and
mov
and
fcompl
push
stos
daa
das
mov
das
lds
adc
popf
mov
js
mov
adc
aad
sti
sbb
push
adc
push
pop
pop
and
insl
push
mov
iret
push
add
mov
insl
xor
pop
stos
leave
mov
movsb
mov
mov
loope
ds
aas
add
loope
leave
ja
push
lods
nop
adc
xor
jb,pt
jmp
mov
stos
cld
arpl
pop
add
adc
xchg
or
loope
fxch
sbb
rcrb
jnp
popf
push
sbb
inc
inc
xor
cmp
mov
repnz
mov
jp
mov
dec
sbb
es
call
mov
or
movsl
repz
sahf
mov
jmp
push
push
mov
dec
and
adc
add
aad
add
jo
lds
shll
fmull
xchg
dec
dec
or
ret
aas
pop
iret
mov
mov
mov
mov
out
push
fadds
pop
popa
mov
mov
or
jnp
mov
ror
dec
pushl
pop
jl
jge
rorb
add
mov
cli
pusha
inc
add
push
pop
mov
dec
xchg
mov
add
cmpsb
mov
lea
sahf
mov
in
pop
inc
push
lahf
cmpsl
data16
dec
orl
jecxz
aam
lcall
cmp
loope
or
mov
nop
inc
xor
int3
loopne
sbb
sbb
insl
lock
sbb
ds
xchg
lods
shlb
dec
roll
sub
enter
mov
cmp
pop
hlt
xorl
or
xchg
cld
sahf
dec
das
xor
fwait
imulb
mov
lods
inc
xor
sub
mov
std
gs
push
out
aad
xchg
ljmp
dec
movsb
push
mov
enter
push
test
aaa
insl
mov
je
add
stos
stc
addl
cmp
jecxz
ljmp
call
mov
mov
mov
lock
adc
mov
shll
mov
sbb
pop
push
inc
sub
adcl
fcomps
filds
addr16
mov
scas
loop
add
inc
in
repz
pop
mov
call
arpl
cmpb
fstp
movb
icebp
fldl
lahf
stc
shl
mov
popf
inc
mov
lods
adc
dec
nop
std
shrb
stc
cld
scas
fistpll
movsb
icebp
mov
daa
push
sbb
push
fnsave
xor
scas
inc
xchg
push
mov
sub
jl
popa
in
mov
in
add
loope
inc
xchg
dec
or
or
inc
loopne
xchg
jle
lea
sahf
cmp
mov
mov
in
das
jecxz
mov
mov
test
ret
cmp
jno
or
push
aas
test
xor
and
jbe
and
sbb
lahf
adc
in
loope
xchg
notb
sub
or
adc
xchg
scas
jmp
cbtw
sub
adc
daa
loop
je
mov
lcall
leave
inc
aas
mov
rcrb
movsb
loopne
mov
es
addl
rcrl
cmp
xchg
mov
jecxz
xor
pop
push
fdivs
repnz
clc
popa
or
adcl
iret
inc
pop
loope
aaa
aam
scas
mov
push
in
pop
test
popf
push
loop
scas
mov
adc
into
nop
mov
stos
mov
cmpsl
sarb
notl
mov
adc
sbb
pop
cmpb
out
pop
fists
in
faddp
hlt
or
jne
dec
hlt
add
ret
xor
das
fisttpll
sub
sbb
push
arpl
daa
jno
xchg
das
stc
in
mov
jo
mov
mov
add
lahf
shll
jl
call
filds
gs
dec
pop
ds
inc
or
into
push
scas
pop
or
pop
test
xchg
mov
mov
jne
mov
jb,pt
and
mov
xor
mov
lock
dec
rol
inc
sbb
rcll
mov
sub
ret
push
sbbl
fwait
in
mov
adc
jno
inc
mov
sbbl
xchg
sbb
mov
mov
xchg
adc
insb
subl
movsl
shll
xor
mov
push
pop
pop
popa
dec
push
cmp
pop
add
jne
popa
or
xor
adc
in
cmpl
mov
test
mov
sti
ljmp
push
push
mov
enter
lcall
cwtl
jecxz
inc
mov
adc
jp
dec
or
mov
loop
or
out
loope
mov
fdivrl
jo
test
jnp
movsb
xor
dec
je
daa
jp
fcoml
loope
rcrb
aaa
pop
fdivrl
in
dec
inc
adc
nop
or
sub
lcall
adc
push
pusha
xlat
push
sub
mov
test
daa
lds
loop
in
pop
popf
push
lock
mov
jle
adc
mov
scas
fs
mov
jg
fistpl
push
ret
push
push
into
add
mov
outsb
jns
je
xor
loop
in
mov
push
mov
pop
shll
pusha
fcoml
sub
ret
rep
pop
bound
jp
mov
add
mov
pop
stc
mov
clc
mov
pop
rcrl
outsb
push
adc
pop
jecxz
loope
or
xor
sub
scas
push
mov
jecxz
mov
inc
stc
or
sbb
cmp
push
outsb
nop
sbb
out
ret
mov
sahf
rolb
pop
xor
gs
mov
iret
cvtpi2ps
mov
push
add
cbtw
sbb
cmp
xchg
scas
mov
negl
xor
or
scas
ret
xchg
in
cli
mov
sbb
pop
aad
gs
clc
jmp
das
shll
mov
dec
or
cmp
push
or
and
hlt
pop
push
sub
aas
mov
inc
dec
sti
mov
sarb
jne
shlb
add
xchg
pop
outsl
mov
xor
mov
stc
mov
push
jns
outsb
mov
orb
add
xchg
mov
xorl
ss
paddd
xor
mov
andb
out
rclb
fsub
xchg
loopne
shll
and
js
lods
add
lahf
icebp
sbbb
inc
lds
shrb
dec
les
pop
mov
stos
fisttpll
cltd
xor
cmp
and
daa
ja
pusha
sbb
je
pop
fwait
cwtl
add
push
xor
ss
add
adc
xorl
push
out
add
mov
movsb
test
or
popa
fnstenv
xchg
xor
cmp
mov
gs
dec
test
dec
push
sbb
test
sbb
push
js
sub
add
lock
xor
faddl
and
enter
pop
aam
adc
push
add
rclb
jge
call
adc
jp
int3
loop
jg
movsl
cmp
xlat
add
shlb
das
cmp
int3
inc
mov
jnp
or
sahf
ret
fidivrl
in
adc
push
pop
test
sbb
pop
cli
adc
movsl
int
push
js
cmp
lods
pusha
jae
inc
mov
pusha
enter
daa
pop
jle
mov
je
test
mov
xlat
popf
cld
subl
movsl
pop
popf
mov
xchg
ja
lods
out
decl
mov
leave
outsl
jb
imul
rcl
sbb
mov
test
in
push
lock
mov
xor
cwtl
push
pop
push
jmp
xor
mov
adc
pop
inc
out
ss
and
push
rcr
lea
mov
mov
scas
fdivrl
fldt
sub
test
loop
andb
add
movups
int3
int
inc
cmp
cs
jp
mov
pop
fstps
mov
pop
call
mov
loop
sbb
xor
lea
adc
mov
in
mov
fldl
aaa
push
cmp
and
xchg
test
sub
or
and
fsub
dec
or
or
inc
mov
push
push
lret
inc
mov
inc
jae
out
lahf
sub
xor
jmp
or
xor
mov
lcall
subb
mov
lahf
or
jle
dec
dec
andb
lock
loop
mov
imul
gs
jl
movsl
push
addr16
clc
push
add
dec
jge
pop
inc
pop
or
out
aam
incb
rolb
stc
mov
and
int
and
jnp
or
push
adcb
xor
or
mov
and
push
push
pop
out
push
xor
movsb
inc
shrb
mov
aad
dec
sub
sbb
mov
stc
sub
aas
pop
adc
jo
xor
or
adc
xorb
sub
cmp
adc
add
cmp
adc
pop
sbb
add
fimuls
xchg
int3
popa
cld
insl
pop
mov
jbe
dec
mov
push
mov
lcall
pop
shll
ret
pop
push
aas
sbb
in
sub
in
mov
call
roll
popa
push
jbe
popa
fs
sbb
cld
cmpsl
int
cmpl
mov
mov
int
loop
push
mov
or
loopne
dec
xchg
stc
movsb
outsl
orl
in
adcb
jp
cmpsl
adc
xchg
sbb
icebp
scas
fs
test
dec
fildl
mov
dec
xor
popa
cs
mov
push
insb
sub
xor
inc
or
lcall
cltd
mov
pop
out
enter
orb
and
sub
mov
mov
ss
lea
jne
popa
iret
sahf
and
ficomps
shrb
mov
sub
mov
scas
mov
push
and
hlt
dec
incb
adc
shrl
das
out
push
stos
addr16
scas
add
std
pop
mov
cmpsl
cld
xchg
mov
nop
daa
inc
sti
sarl
lods
cmc
loop
cmpsl
sbb
xor
inc
pop
sub
sub
call
and
or
lock
loopne
pop
mov
push
jmp
popf
jne
dec
xor
mov
inc
test
or
push
adcl
lea
cmc
cmp
rcl
loop
test
int
fld
pop
cmp
inc
mov
mov
cli
pushf
jne
cmc
sub
sbb
out
sub
inc
inc
aaa
stos
push
push
out
inc
cltd
mov
je
je
xchg
ds
jl
xchg
cld
movsl
aad
stos
pusha
repz
popf
sbb
ds
push
xor
xchg
xor
adc
inc
xor
bnd
cmp
mov
or
add
nop
xor
jl
iret
inc
dec
jno
dec
mov
push
and
ljmp
das
add
jne
jmp
pop
lea
into
mov
sbb
std
mul
push
gs
loopne
ljmp
int3
sarb
or
movsl
test
jge
jl
lds
lods
lret
pop
sbb
and
jnp
xorb
outsl
or
xchg
jne
jb
rorl
xchg
std
sub
mov
cs
das
push
test
call
inc
shll
sub
cmp
dec
cli
aad
pop
and
sbbl
jmp
xchg
and
hlt
loope
lods
pop
roll
out
xor
lock
divl
adc
ljmp
enter
sti
stos
push
mov
mov
in
clc
add
movsb
aaa
mov
das
int3
mov
sti
jp
sub
xchg
lock
push
repnz
divl
mov
adc
mov
inc
imul
and
cld
sub
call
jmp
idivb
push
jmp
rolb
repz
insb
xchg
add
fnsave
in
movl
sub
sbb
sti
lods
add
adc
sbb
addb
mov
lds
pushf
xor
mov
xchg
pop
and
or
jno
aam
xor
js
jne
ret
mov
stos
push
pop
xchg
testl
loop,pn
xchg
sub
inc
add
add
add
cmp
sbb
scas
lock
movsb
xor
stos
icebp
out
std
stos
insb
popa
or
test
inc
sub
jmp
inc
aas
mov
mov
add
jg
test
mov
mov
sub
aas
orb
xchg
loopne
sbb
push
hlt
loop
loopne
fs
and
cmc
push
xchg
cmpsl
aam
push
xor
mov
idiv
fnstsw
ret
pop
es
nop
and
pop
sbb
lahf
sub
xchg
push
lcall
call
push
aam
or
mov
mov
cmpsb
test
in
push
sub
inc
xor
cmp
mov
mov
loopne
lcall
mov
mov
mov
test
jnp
fisubl
mov
push
push
and
sahf
inc
test
out
cmp
push
add
or
mov
xchg
add
jl
adc
rcrb
imul
xor
jle
adc
pop
mov
and
repnz
push
xchg
pop
lret
mov
sti
xlat
cmpb
mov
cmp
pop
shlb
pop
inc
mov
fst
daa
fsubl
leave
sub
inc
roll
xchg
cli
out
xor
into
fists
pop
or
cmp
xor
stos
mov
scas
iret
movsl
addl
inc
popa
fisubs
adc
pop
dec
pop
sbb
xor
inc
jecxz
adc
lock
insb
std
cwtl
and
jg
or
pop
sub
and
lods
scas
sbb
pop
push
inc
sub
loop
mov
xor
pop
jle
lret
adc
or
popa
xor
dec
mov
and
or
imull
les
daa
sub
mov
mov
jp
lds
ret
sub
push
pop
adc
js
sahf
test
cltd
and
outsb
cmpsb
jb
clc
in
jno
outsl
ret
lock
lret
mov
push
inc
mov
mov
pushf
rolb
mov
push
jnp
sub
cmp
insl
jg
inc
popf
jb
jne
and
fwait
lcall
das
cwtl
nop
mov
and
or
mov
in
push
movsb
popa
dec
xchg
sbb
adc
mulb
add
mov
jp
pop
mov
inc
push
stos
ja
pop
xchg
inc
std
rorl
add
ds
inc
stos
inc
cmp
outsb
and
fisttpll
sub
jge
and
test
ret
mov
dec
mov
mov
repz
pop
sub
mov
adc
in
xor
test
out
sbb
push
mov
rolb
cmpb
pop
popa
test
pop
sbb
jle
loope
enter
lret
subl
mov
ss
lock
lds
and
js
xor
push
jle
push
xchg
mov
sti
out
sbbl
shll
orl
add
adc
jecxz
push
int
in
jg
mov
push
pop
data16
fadds
pop
js
std
xor
iret
sti
sub
and
cmp
int3
sbb
lods
mov
ss
pop
cmp
out
push
stc
cmp
add
js
jo
adc
add
adc
push
jns
mov
cltd
and
push
add
push
je
xchg
inc
out
push
cmp
stos
inc
das
addb
ja
iret
mov
popa
push
xchg
add
push
rcll
push
sbb
enter
sbb
sub
imul
pop
pushf
push
inc
add
inc
call
xchg
sub
inc
push
xchg
cld
aam
mov
mov
add
sub
popa
scas
mov
repnz
movsb
into
and
inc
cld
sbb
xchg
xchg
ret
and
pop
sbb
pop
test
and
jo
hlt
sub
cmp
jae
mov
push
mov
dec
jbe
aaa
mov
sub
pop
lret
inc
add
xorb
js
outsl
mov
je
lods
sbb
incb
cmc
sbb
mov
lret
push
js
cld
pushf
icebp
aam
push
mov
mov
jle
imul
sbb
iret
mov
call
adc
and
gs
adc
mov
jecxz
loope
mov
and
clc
xchg
lock
add
mov
lret
push
and
outsb
aas
sub
test
les
xchg
xchg
loop
incl
mov
mov
push
sub
pop
test
ljmp
pop
out
xchg
push
sub
cmp
je
daa
dec
loope
mov
jge
fisttpl
pop
add
inc
fsubr
mov
jmp
lea
push
mov
or
in
sbb
lea
orl
mov
in
push
push
adc
mov
cld
aaa
cli
fistpll
cld
dec
enter
or
push
pop
cmp
test
faddl
xchg
cli
adc
outsb
js
icebp
int
mov
ja
lods
and
subl
mov
xchg
jg
jnp
adc
out
xlat
popl
mov
cld
inc
push
lahf
daa
loopne
rolb
xchg
outsl
test
dec
sbb
loop
test
loopne
scas
fsubrl
dec
dec
lds
or
imulb
xor
jb
inc
dec
fiadds
arpl
pop
adc
iret
pop
pop
cmpsb
mov
xchg
dec
sti
ret
cmc
loope
xchg
out
pop
mov
xchg
xchg
sbb
jmp
adc
mov
inc
test
jbe
push
push
jmp
add
push
mov
es
adc
jbe
pop
sbb
jle
fidivl
mov
ss
add
bound
lock
mov
mov
add
or
and
bound
ret
dec
pop
cmp
mov
movsb
fidivs
sti
cmp
and
sbb
jno
inc
insl
aad
rcr
mov
inc
jb
jmp
xchg
cmp
or
aam
xorl
aas
sbb
or
in
bound
add
xchg
mov
xchg
sbb
sub
loopne
test
xor
fnstcw
pushl
cmp
outsl
stos
sub
xor
or
mov
stos
icebp
or
enter
adc
inc
cld
int3
jg
pop
or
jl
or
hlt
es
dec
push
imul
mov
jb
movsb
test
inc
mov
aaa
sbb
rolb
jmp
pushf
and
push
cld
cmp
ljmp
add
fisubrl
add
mov
or
inc
adc
jmp
mov
inc
mov
lds
fsubl
daa
adc
dec
ret
jmp
push
sahf
loop
and
cmp
xor
fadd
sbb
addl
xor
dec
popf
cli
out
repz
aaa
cld
sbb
dec
jle
cmp
push
xor
stos
jp
nop
push
sub
enter
clc
jp
aad
push
mov
mov
ret
sbb
lea
xor
pusha
cmp
in
clc
xor
test
js
jns
or
sbb
cwtl
addb
mov
mov
lds
outsb
clc
mov
adc
fwait
push
push
mov
stos
push
movl
loop
imul
jb
xor
sti
dec
andl
jns
mov
xchg
and
mov
fists
hlt
andl
xchg
icebp
ljmp
mov
clc
add
sbb
loope
fdivl
sbb
scas
icebp
jg
fsts
add
inc
nop
mov
mov
dec
or
mov
cmp
pop
loopne
pop
push
pop
mov
in
mov
mov
and
mov
rclb
cs
xor
test
dec
add
je
out
mov
mov
clc
adc
and
fstpt
pusha
aad
push
mov
add
jmp
mov
mov
loope
out
bnd
shrb
add
cmpl
ja
mov
dec
xor
push
orl
test
rorb
iret
loope
mov
cmp
xchg
sbb
sti
mov
cmp
icebp
decl
mov
or
fbstp
and
std
mov
add
shll
daa
sbb
enter
inc
sbb
sti
and
fistpl
jmp
repnz
insb
pop
xchg
xchg
or
inc
push
sbb
xchg
and
std
fbstp
pop
adc
fldenv
adc
out
lock
movsl
iret
mov
push
jl
cwtl
add
add
inc
xor
xor
fimull
movsl
inc
fmuls
in
xchg
xchg
stos
adc
mov
add
cmpsb
cmp
jle
or
jmp
outsl
push
push
mov
xchg
add
sbb
cmp
and
fistpl
sub
sahf
pop
mov
dec
lret
jp
mov
mov
adc
or
sbb
lret
push
pop
mov
sbb
fmulp
dec
in
jmp
ja
mov
mov
hlt
mov
test
add
cmp
andb
push
xchg
mov
test
sbb
das
int
mov
sub
push
mov
sahf
dec
mov
pop
pop
push
or
or
jae
sub
push
or
add
cltd
jo
mov
aad
mov
je
mov
fadd
push
mov
pop
jo
mov
rorb
jp
fildl
insl
pop
pop
mov
ja
insb
bound
mov
arpl
mov
scas
xor
imul
adc
add
mov
cmp
xchg
and
stos
add
fsubr
insl
ret
ret
roll
pushf
jl
lods
ret
or
dec
out
push
in
movl
xchg
add
outsb
call
mov
cld
testb
clc
popa
in
fimull
fisttpl
pop
ljmp
pop
sahf
or
aam
pop
and
into
or
dec
jge
inc
push
mov
addl
mov
mov
sbb
pop
lock
enter
shlb
xchg
push
push
lods
xor
lret
daa
cmpl
cld
jg
loope
insb
xchg
jae
movb
fcoml
aam
rclb
rorl
cld
bound
mov
xlat
mov
xchg
dec
int
xchg
std
and
bound
pushf
sbb
insb
aam
cmp
sub
std
shlb
pop
outsb
outsl
push
in
enter
into
sbb
imul
dec
in
add
fisttpl
jae
ret
mov
sbb
cli
pushf
aas
or
lock
mov
mov
push
decl
or
mov
mov
orb
test
push
js
pop
inc
xchg
loope
dec
jmp
sbb
mov
pop
push
rolb
push
cmp
lods
mov
pop
jb
inc
sbb
aam
daa
mov
mov
aaa
cld
cmp
cld
sbb
insl
cwtl
aas
mov
cld
imul
mov
std
mov
cmp
add
jnp
subl
cmpsb
jmp
cmpsl
pop
sbbb
pop
test
data16
leave
mov
out
sbb
lret
lods
or
jge
ss
mov
dec
xor
mov
pushw
in
nop
mov
inc
add
sbb
push
sar
dec
mov
shll
pop
or
jo
les
adc
nop
sbbl
push
jl
ljmp
jns
jmp
dec
adc
in
das
js
cmpb
sahf
xchg
sahf
push
add
aad
rcl
jle
outsl
mov
xchg
cld
cmp
roll
fstpl
lock
std
js
roll
pushf
fwait
xchg
jp
movsl
cmc
cmp
and
lea
mov
sbb
pop
xor
aam
outsl
int3
and
orl
iret
hlt
or
jle
xchg
popa
fstl
cmp
xor
clc
jg
push
push
cmp
add
pop
ja
pop
in
jp
cmp
add
add
sbb
incb
out
xor
data16
call
testl
cld
sbb
sbb
into
sub
sbb
cmpsl
adc
fs
addl
jp
push
cmp
jl
jl
pop
mov
fidivrs
shr
or
cmpsl
jp
jbe
rol
push
popa
lahf
push
jmp
xchg
loopne
test
fnstsw
jno
mov
and
sarb
adc
add
aam
cli
ljmp
push
ljmp
sarl
imul
or
sbb
add
push
pop
cmpl
add
sti
cld
adc
mov
sbb
cmpsb
adc
out
stos
hlt
data16
fwait
lock
pop
js
jb
stc
inc
pushf
addr16
arpl
cmc
fidivl
into
cs
xor
xor
mov
decb
push
jge
adc
and
aam
aaa
ljmp
dec
dec
frstor
add
inc
sbb
push
fisttpll
ret
scas
add
adc
repz
and
pushf
jbe
lods
add
shll
pop
jg
lahf
fdivrp
js
xchg
lcall
sbb
xlat
jno
push
cltd
cmp
xchg
icebp
negw
hlt
mov
mov
jle
sarb
nop
jmp
in
jo
add
mov
sbb
mov
push
sub
pop
inc
xor
push
nop
cmp
repnz
rol
adc
and
mov
or
ja
ror
testb
addr16
jnp
setb
inc
scas
inc
sti
xorl
hlt
sti
sub
and
jb
xchg
xchg
xor
push
pop
lahf
inc
ja
jbe
sbb
cmp
bound
sbb
pop
mov
cmc
jp
rcl
dec
aam
add
mov
out
adc
xlat
mov
push
jb
lods
fidivl
jmp
add
add
pop
add
add
adc
mov
dec
jle
fisubrs
jp
into
sbb
lods
mov
pop
ss
adc
lcall
aam
inc
insb
add
sbb
lods
mov
shll
xchg
mov
adc
jmp
push
add
and
and
jp
push
rorb
pushf
add
filds
mov
add
test
in
es
cmpsb
fisttps
cmpb
jge
sbbl
cs
sahf
adc
lcall
shlb
xor
mov
adc
xorl
pop
jns
mov
pop
test
and
hlt
sarb
add
inc
dec
or
je
mov
inc
xlat
cmp
xor
gs
pusha
fisubrs
pusha
push
mov
add
rcl
scas
xchg
push
imul
push
mov
pop
cmp
xor
push
push
jb
pop
roll
push
jecxz
jl
and
outsb
push
int3
leave
mov
adc
jl
pop
hlt
mov
cmp
andl
sub
pop
ret
inc
jg
sub
jno
pop
lret
inc
adc
jbe
mov
jbe
popa
push
dec
xchg
adc
jo
adc
aam
dec
push
fwait
pop
adc
mov
pop
bswap
rorb
jne
push
cs
fdivrs
cli
sub
insb
lock
int3
pop
inc
in
loope
and
ljmp
jl
cmpsl
fdivp
in
icebp
inc
or
adc
cwtl
mov
aam
push
jge
push
stos
dec
mov
push
adc
popa
and
hlt
push
mov
add
sub
fdivrl
adc
xchg
xchg
nop
xor
cmp
push
dec
mov
adc
mov
test
jp
scas
xchg
fidivl
mov
jge
dec
les
sub
inc
add
sub
push
test
outsb
xchg
fmuls
mov
stos
mov
int
insb
sbb
add
idivb
dec
test
repnz
nop
int3
push
jmp
loope
cmpb
cld
ljmp
sbb
mov
dec
icebp
pop
je
lock
mov
test
sbb
sbb
loop
cmp
or
shr
dec
roll
mov
imul
stos
outsl
popl
das
dec
lcall
inc
imul
or
inc
jl
ret
inc
jns
scas
call
dec
lcall
pop
add
mov
ja
out
pusha
add
cmp
mov
jle
pop
popa
arpl
push
add
movsl
mov
mov
shlb
jne
and
ficompl
or
call
scas
cld
data16
and
lret
jle
push
push
or
dec
adc
decl
pop
mov
jb
jbe
int
xor
sub
mov
mov
cmc
inc
mov
call
ds
ss
xor
loope
sbb
xchg
jo
movsb
mov
xchg
or
xchg
subb
loope
add
pushf
xor
jnp
xchg
mov
fistps
arpl
loopne
jns
add
sti
loop
sub
sbb
lock
adc
push
sub
fwait
adc
mov
pop
in
inc
cld
push
add
loope
sbb
fidivrs
jne
push
add
adc
sub
repz
lcall
insl
sub
cmp
mov
stos
inc
sub
push
cmpb
jge
inc
movsb
mov
add
inc
call
sarb
pushf
ljmp
jne
fidivs
dec
sbb
cltd
mov
aad
sbb
or
lds
or
pusha
shlb
into
sbb
mov
push
xchg
inc
jne
out
stos
lret
pop
push
mov
dec
incl
push
and
inc
push
push
js
loop
insb
ret
cmp
add
or
icebp
cli
pop
or
std
std
lret
and
sarl
lock
xchg
pop
inc
lcall
mov
or
jnp
xchg
int3
fisubs
mov
xchg
mov
popa
ret
imul
scas
mov
cmp
xchg
loopne
mov
lret
sbb
sub
cmp
out
mov
notl
test
mov
jmp
cmp
add
pop
loopne
push
repnz
data16
jge
clc
icebp
das
loopne
mov
popf
pop
jnp
aaa
insb
sub
mov
je
jl
dec
and
mov
jne
pop
pusha
mov
add
inc
and
push
mov
orb
mov
dec
or
adc
xor
sbbb
and
push
call
add
adcl
sub
sub
icebp
or
cmc
or
fwait
out
dec
sar
or
je
pop
insb
in
insb
mov
lret
lcall
mov
mov
hlt
mov
jo
push
mov
sbb
mov
xor
add
xor
pop
jge
fsubl
cmp
ret
jo
push
or
out
or
sbb
pop
push
aad
push
outsl
cld
scas
cmpsb
mov
ljmp
pop
mov
rcrb
xchg
jns
je
push
ret
jg
rcll
out
cmp
dec
cmp
stos
test
push
insl
dec
adc
jne
orb
std
sbb
fs
pusha
inc
popa
xchg
mov
aaa
mov
sub
inc
push
xchg
push
push
inc
sbb
push
cwtl
addr16
or
add
mov
add
or
fdivs
jbe
ret
sahf
and
cld
add
cwtl
fisubs
push
rolb
inc
dec
je
bound
stc
ss
add
sub
sbbb
mov
sbb
adc
adc
lret
jp
cli
pusha
xor
and
loope
jb
out
das
loop
fdivrs
das
lods
pop
dec
sub
ljmp
mov
add
dec
xchg
sarb
xor
loopne
or
jo
loope
xor
enter
in
les
lret
fs
enter
rcr
andb
mov
add
add
icebp
or
inc
cwtl
push
mov
aad
mov
arpl
test
mov
daa
pop
xchg
aad
or
mov
les
out
lret
push
pop
push
loopne
mov
shl
mov
aaa
add
lcall
leave
loope
sbb
sub
mov
sbb
pop
jmp
mov
loope
cmp
sub
mov
in
push
arpl
push
xor
incl
fists
lds
push
or
popl
push
dec
cmp
push
clc
xor
adc
xor
xor
push
sub
fildll
jno
std
int3
subb
mov
shlb
fsubs
sar
jns,pt
sbb
aam
pop
aas
test
insb
movsl
add
les
je
sbb
pushf
lcall
mov
and
mov
rorb
out
mov
mov
pop
mov
pushf
test
xor
mov
jns
add
bound
popa
or
pop
inc
clc
cs
cld
and
incl
pop
or
cmp
xor
movsl
mov
nop
pop
test
adc
fwait
and
lcall
pop
dec
push
sbb
lock
xor
mov
jns
nop
imul
xlat
sub
pop
xchg
inc
mov
inc
and
mov
inc
bound
out
jg
fldt
ss
out
movsl
and
push
cli
decl
sbbl
inc
data16
int
popl
mov
dec
out
jae
scas
incl
test
add
hlt
pop
push
aas
orl
sbb
mov
xchg
cmp
fsubrs
dec
je
test
jne
repz
in
call
adc
adc
xlat
ficompl
lret
out
mov
jp
mov
push
loop
mov
jo
sbb
push
or
xor
push
sub
movhlps
test
and
loop
outsl
xchg
clc
mov
mov
stos
mov
incl
shl
clc
add
rcrb
push
or
or
and
test
cmp
mov
into
or
lods
ficomps
mov
mov
mov
clc
dec
clc
outsb
in
push
test
xor
jnp
ds
pop
add
inc
push
fisttps
pop
or
mov
xor
xchg
pop
sub
aam
popa
fmull
pop
dec
or
dec
cmp
mov
mov
mov
mov
aaa
rorl
in
ret
sub
ret
adc
jb
mov
aam
or
aam
jg
jmp
in
fdiv
and
sarl
test
cmp
daa
dec
inc
adc
sub
sbb
insb
lods
push
jl
mov
add
insb
scas
call
enter
int3
out
fmull
push
icebp
dec
mov
add
jae
pop
inc
xorl
cmp
adc
push
mov
and
push
in
or
lods
mov
push
push
cs
add
and
inc
pop
ficompl
ljmp
pushf
inc
lods
clc
shlb
popa
mov
sub
enter
out
mov
mov
cmc
pop
lock
xchg
add
aaa
jle
ud1
nop
mov
push
insl
or
mov
call
lcall
int3
cmpsl
scas
push
add
mov
sub
sbb
add
mov
cmp
shrl
in
inc
hlt
jbe
pushf
data16
pop
cli
jmp
pop
pop
mov
test
dec
inc
dec
popl
test
shl
sti
mov
daa
and
in
inc
lods
mov
pop
adcb
sbb
inc
in
mov
xor
dec
cmp
fstpt
in
ret
cmpsl
push
arpl
pusha
stos
icebp
notl
hlt
clc
and
sahf
adc
insl
les
shl
fidivrs
leave
mov
repz
pop
shrl
call
ja
or
in
fsts
fcom
hlt
pop
xchg
mov
cmp
out
add
mov
test
jg
inc
xor
sbbb
out
sbb
dec
xor
jmp
pusha
push
out
dec
push
call
adc
fidivs
scas
add
aaa
add
pop
cmp
xchg
scas
xchg
stos
xchg
into
push
inc
jb
mov
mov
into
adc
divb
int
sub
mov
adc
and
cwtl
and
jb
or
or
sub
pop
test
push
push
cmp
fmuls
clc
pusha
push
clc
mov
mov
jb
inc
stos
xchg
sub
lock
and
orb
and
lock
cmpb
inc
loop,pn
loopne
and
adc
fadd
filds
jnp
jbe
add
lods
imul
pop
das
ret
insb
outsb
lcall
push
lcall
mov
cmp
dec
int
arpl
es
loope
jecxz
mov
push
cmc
add
sub
and
mov
jecxz
repz
or
sub
mov
lods
inc
call
pop
clc
inc
push
rolb
push
test
pop
jle
inc
insb
dec
imul
cld
hlt
les
ucomiss
pop
pop
ljmp
iret
jl
xchg
fsubr
es
scas
call
lock
xor
xchg
mov
mov
sarl
add
or
mov
jecxz
iret
cmp
xchg
xchg
dec
mov
push
pop
stos
rcrl
call
jecxz
loope
orl
push
ss
clc
or
adc
pushf
xchg
add
xchg
cmp
dec
paddw
loope
push
cmpsb
clc
das
xor
stc
je
mov
mov
mov
scas
xchg
add
test
cwtl
jge
out
decb
mov
sbb
push
mov
jo
mov
arpl
mov
dec
je
rcrl
loopne
mov
sub
idivb
add
cmp
xorb
mov
push
mov
ret
sbb
push
js
ret
push
mov
adc
sbb
mov
xchg
mov
arpl
pop
sarl
and
xchg
jecxz
das
push
fisttpll
test
mov
addr16
mov
inc
repz
orb
btc
jne
pop
pop
or
dec
jnp
inc
ss
shlb
jo
outsl
popf
je
outsl
lock
xor
jo
stos
fsubs
and
mov
and
jno
xchg
sbb
idiv
daa
inc
xchg
add
stos
mov
fildll
sub
loope
add
mov
adc
shlb
and
and
aas
ss
dec
pusha
sbb
fwait
push
xchg
mov
xor
sti
into
mov
cmp
out
and
add
sub
jae
ja
arpl
or
movsl
mov
mov
cld
ja
add
lcall
mov
scas
mov
dec
push
sbb
andb
hlt
xor
pushf
fisttps
stos
adc
in
push
mov
jns
pop
pop
jl
roll
pop
insb
cmc
xchg
push
fchs
data16
lret
xchg
pop
add
dec
fisttps
ret
or
xor
sbb
enter
test
insb
mov
cmp
cld
and
jo
adc
dec
mov
ret
enter
push
or
negb
adc
into
fwait
jo
inc
jmp
dec
mov
cmpsb
inc
inc
pop
mov
repnz
jge
imul
pop
out
pushl
sti
sub
xorl
mov
scas
xor
jb
test
shrb
in
mov
mov
stos
sub
xor
xchg
pop
push
pop
sub
call
jle
fcompl
lcall
outsb
cmp
shlb
insl
sarl
push
and
ss
add
loopne
cmp
mov
loop
jae
push
or
or
or
ss
in
ja
pushl
adc
mov
and
lock
cmpsb
hlt
mov
mov
mov
mov
jno
push
add
sub
or
push
dec
or
pop
aad
std
mov
pusha
push
out
sbb
push
cld
pop
lock
in
out
push
adc
fadds
push
adc
adc
sbb
push
xchg
adcb
decb
inc
push
outsl
mov
and
andb
cmp
ja
xchg
lock
in
icebp
jmp
adc
insl
mov
not
mov
and
push
cli
xchg
ret
in
push
and
cli
inc
sub
jns
cli
jle
xchg
pop
adcb
out
or
je
cmpb
xchg
ljmp
pop
pop
jecxz
add
les
mov
mov
gs
push
mov
inc
fs
or
jl
fs
inc
push
in
and
mov
pop
xor
je
clc
xchg
bnd
mov
arpl
pusha
inc
jbe
fisttpll
aam
repz
stos
and
cld
mov
movlps
mov
lock
rolb
xor
nop
xchg
fldcw
and
pop
mov
mov
lds
mov
jo
push
dec
dec
loop
pop
flds
andb
lret
sbbl
lock
mov
jo
into
dec
aas
xchg
shll
icebp
mov
mov
aam
pop
inc
pop
lock
or
stos
ret
stos
loopne
clc
cli
jmp
loopne
pop
leave
shrb
pushl
pop
das
or
xor
setg
push
pop
inc
mov
dec
add
ficomps
xchg
enter
jne
bound
inc
ficomps
mov
lods
pusha
hlt
scas
sub
xor
adc
xchg
mov
jl
lds
or
pop
xchg
and
into
test
xchg
push
sub
adc
dec
jg
cmp
cli
ret
das
push
popf
push
dec
pusha
inc
pop
jo
push
xor
sar
add
sbb
in
add
enter
and
dec
aaa
mov
cmp
dec
push
dec
ja
push
mov
js
mov
shlb
enter
inc
sub
mov
cld
sub
jb
push
iret
std
out
mov
pop
hlt
add
push
cmp
push
mov
aas
into
cwtl
fdivrs
movsb
inc
push
clc
cltd
sbb
sarl
xor
rcrb
scas
and
push
lds
push
jo
jg
cs
jns
xchg
sahf
jmp
push
je
rcr
clc
add
inc
push
ss
or
inc
adc
inc
jnp
sub
cmp
inc
adc
add
setnp
loopne,pt
cld
mov
jno
sarl
cmp
imul
dec
push
mov
pushf
add
and
dec
pop
adc
xchg
jne
push
xrelease
or
jbe
aam
add
ds
es
pop
pop
jo
aad
mov
cmc
pushf
mov
lods
adc
addb
out
xlat
adcb
jo
pop
in
test
jmp
popa
dec
adc
int
scas
pop
sbb
push
mov
or
cwtl
push
outsb
pop
push
fdivs
jp
sub
adc
and
sbb
insb
aad
push
cmp
lds
movsb
insb
lods
into
scas
loopne
ds
repnz
fmull
mov
or
aaa
icebp
ja
xchg
mov
jne
inc
inc
xor
bound
lock
mov
adc
ds
fwait
mov
outsb
hlt
daa
imul
push
lret
shlb
ja
push
push
js
std
dec
jmp
dec
cmpsb
cmp
jmp
add
and
fistpll
sbb
mov
mov
or
movb
mov
cmp
and
sub
pop
fwait
xor
mov
or
xchg
mov
add
fwait
mov
sbb
aad
xor
aas
xor
and
mov
push
or
dec
bound
add
in
repnz
cmp
mov
inc
rolb
addl
lods
stos
outsl
ljmp
or
jns
cmp
insb
cmp
push
outsb
and
mov
popa
insb
jecxz
arpl
insb
adc
jp
shlb
outsb
or
mov
xlat
pop
push
mov
sar
call
inc
pop
das
pop
loopne
inc
cld
ret
out
xor
out
jle
mov
jg
repz
push
mov
jbe
dec
ss
pop
cld
in
addb
out
into
negb
scas
fwait
loope
inc
shl
insl
scas
jle
inc
cmp
test
lock
mov
xchg
cmp
jmp
adc
xor
orb
pop
pop
scas
jl
sbb
pop
xor
daa
xchg
jnp
push
rolb
mov
pop
cmc
pop
mov
mov
int3
js
movsl
andl
and
add
push
ret
sti
push
mov
mov
xorb
xor
lods
lahf
dec
insb
mov
push
sbb
mov
pop
fs
lret
mov
mov
test
xor
adc
or
icebp
dec
xor
dec
push
stc
xchg
sub
jp
outsb
adcb
lret
cmpb
shl
rcr
push
jl
stos
inc
orb
sbb
add
in
mov
lret
pop
adc
sbb
mov
pusha
ss
inc
mov
pusha
xor
popa
das
sub
xrelease
add
adc
pusha
xor
ljmp
aas
cmp
je
incl
jecxz
mov
lock
test
adc
out
icebp
daa
loope
loopne
sub
clc
add
ljmpw
jp
mov
jnp
fsts
xor
mov
mov
and
shrb
les
lcall
iret
loopne
into
dec
jge
andb
psubd
ss
mov
out
jle
stc
push
into
stos
loope
mov
scas
adc
pop
mov
sahf
pop
cs
push
mov
adc
fmull
push
cmpsb
je
mov
push
pop
js
mov
dec
cmp
fbld
xorl
xchg
lahf
adc
add
adc
mov
ljmp
es
lods
out
mov
inc
test
arpl
mov
adc
jle
pop
or
sbb
pop
out
rcr
add
mov
xchg
cmpxchg8b
into
jno
push
mov
push
jmp
jle
jl
mov
add
scas
clc
sub
dec
data16
sahf
mov
popa
stos
cmc
jmp
mov
mov
cmp
mov
mov
mov
fsubr
aam
push
ret
sbb
adcb
or
mov
popf
rorb
inc
rcrb
mov
scas
jno
ret
rorl
jno
xor
rorb
std
adc
and
std
mov
mov
adc
ret
mov
xchg
pop
mov
dec
inc
mov
test
mov
daa
and
pop
dec
cmp
dec
stos
sub
into
cli
push
pop
cmp
std
sub
xchg
jns
dec
test
push
push
ljmp
movbe
cmp
jo
call
testl
cmpb
jle
jg
add
adc
xchg
cmp
pop
fwait
push
inc
cmpsb
adc
or
sbb
or
pop
add
adc
add
push
insb
sti
cmp
imul
push
ljmp
aad
jae
mov
jmp
cli
pushf
xchg
pcmpeqb
xor
lret
push
xor
push
mov
test
shlb
pusha
dec
inc
in
bound
jno
or
and
pop
add
cli
lds
test
push
stos
ficompl
mov
jae
incl
fisttpl
mov
jb
out
mov
std
rolb
push
jl
lods
popa
faddl
add
jnp
lea
rorb
cmp
jmp
add
test
jl
aaa
lahf
pop
pop
movsl
sbb
js
sub
xor
sti
cs
test
sahf
loop,pt
xor
int3
test
pop
jp
clc
or
sarl
xor
mov
mov
xorb
rolb
add
sbb
outsb
outsb
mov
es
jmp
mov
push
sub
pop
add
nop
cmp
xchg
jl
xchg
out
inc
cmp
shll
mov
es
and
jle
rclb
sub
and
jae
jns,pt
addl
in
lock
add
lods
inc
sub
adc
or
push
push
sbbb
cmp
test
sahf
rorb
pop
inc
std
xor
dec
out
in
mov
xchg
jecxz
jg
iret
and
pusha
fcoml
fnstcw
ret
add
addl
or
icebp
push
add
test
lahf
stos
push
jno
inc
outsb
jg
inc
lret
xchg
push
jg
and
mov
lock
out
adc
push
inc
fidivrl
sbbl
mov
jb
and
pop
movsl
jb
repnz
rolb
outsb
ds
fcompl
jg
ret
pop
out
sti
or
js
mov
int
push
push
jp
or
sub
mov
or
jb
adc
js
aas
adc
push
mov
mov
xchg
in
cmp
pop
lods
or
imul
lret
xchg
and
call
mov
cmp
xchg
push
lock
pop
add
stos
aaa
lret
inc
js
pop
xor
stos
xchg
movsb
sub
das
and
dec
mov
xlat
push
adc
inc
clc
ss
int3
mov
dec
outsl
cmpb
sub
lahf
test
push
dec
pop
movsb
cmpb
lea
inc
aas
sub
inc
or
sbb
subb
add
mov
jecxz
push
mov
and
pusha
jo
add
xlat
adc
in
pushl
pop
or
test
add
icebp
push
jp
fmuls
mov
sbb
popa
aas
jle
mov
lahf
inc
mov
jno
inc
and
insl
jne
loopne
cmp
adc
mov
mov
iret
cld
add
loopne
in
push
jno
push
jo
ja
xchg
imulb
ljmp
scas
cmpsb
adc
add
or
in
popa
inc
cmp
pop
rcr
pop
mov
ficomps
ret
push
dec
sub
jecxz
jecxz
xor
jne
int3
ret
add
jg
daa
or
push
add
pop
pop
movl
ljmp
cmp
pop
bound
aam
push
stos
dec
lods
lock
cs
icebp
sbb
or
adc
adc
mov
or
sub
pushf
or
arpl
mov
xchg
sbb
or
mov
push
add
or
jb
subl
add
xor
mov
clc
sarb
mov
mov
jne
add
xchg
xor
mov
shrb
jb
inc
or
lds
inc
mov
inc
pop
cld
es
inc
in
and
adc
jnp
mov
dec
dec
sub
jge
mov
nop
sbb
mov
push
add
cmpb
pop
mov
or
add
gs
sbb
sarb
lods
dec
jne
movsb
out
mov
adc
outsb
fwait
insb
jecxz
popf
iret
jno
sub
push
ret
jle
push
popf
test
adc
stos
icebp
in
out
inc
sbbb
lods
add
lock
mov
lahf
and
sahf
xor
cmpsl
and
sti
ja
xorl
mov
sub
or
les
mov
addl
gs
mov
push
mov
ret
aam
mov
incb
dec
aam
inc
movsl
jle
mov
ds
dec
scas
sub
test
mov
mov
dec
pop
pop
orb
aam
pop
add
add
arpl
push
fistpl
or
pop
dec
lods
mov
lcall
add
pop
mov
shll
rcl
repnz
mov
mov
pusha
aaa
sub
orl
test
push
ret
xchg
ds
sub
ss
andb
or
add
sbb
inc
dec
cmp
call
push
sbb
mov
ss
push
mov
sub
sub
xor
push
pop
dec
in
cli
lret
and
cmp
mov
xor
mov
inc
add
and
fnstsw
pop
gs
add
push
ja
stos
pop
imul
mov
in
fdivs
dec
jno
add
or
jnp
lods
pop
xlat
inc
push
jl
fs
js,pn
mov
dec
mov
adc
add
push
push
mov
lods
mov
shlb
addr16
int3
xchg
pop
xchg
add
das
sbb
insl
cmpl
fs
push
mov
inc
lea
icebp
inc
adc
sub
push
or
jne
mov
push
mov
mov
je
mov
imul
fst
pop
xlat
cli
mov
cli
add
ja
repnz
data16
jne
movsb
ja
fs
cmc
cmp
or
xchg
jl
test
adc
push
sub
xor
lock
xor
mov
sub
loop
scas
je
insb
and
mov
xor
shlb
jp
rcll
cmp
jae
popa
add
subb
dec
push
icebp
inc
fisubs
out
cmpxchg
cs
shlb
jo
ret
ror
jp
test
mov
icebp
pop
xchg
and
mov
add
dec
pop
sub
shrb
mov
add
mov
out
aad
pop
stos
mov
add
jmp
faddp
pop
sub
fdivs
adc
cmp
pop
adcb
es
sbbb
mov
cmp
dec
pop
jbe
lods
inc
jae
cmp
mov
cmpsl
push
call
shll
xchg
sub
mov
lcall
pop
out
xchg
mov
shlb
les
notb
outsw
pop
or
notb
mov
sbb
stos
ja
mov
call
mov
aam
mov
adc
pushf
arpl
push
imull
rorl
out
cmp
sbb
popf
push
jno
pop
into
out
adc
xchg
push
push
in
adc
xchg
notb
mov
int
xchg
loopne
cmpsb
jbe
inc
bound
sub
jecxz
mov
or
or
mov
test
xchg
and
lahf
dec
mov
sub
lcall
sbb
adc
dec
sbb
cmpsb
and
scas
push
jmp
xchg
jne
aam
push
aam
jecxz
enter
faddl
cli
mov
mov
or
jno
call
inc
sbb
stos
and
rcr
ja
ds
jmp
imul
leave
mov
in
dec
mov
movsb
add
push
push
loop
loop
cmp
push
cmp
mov
sbb
nop
adc
inc
test
dec
sbb
out
push
stos
lds
fisubrl
decl
inc
sbb
les
pop
filds
add
mov
out
ds
sub
mov
mov
or
pop
je
jb
fs
int
mov
loopne
push
cld
sub
fs
lods
xor
mov
repnz
inc
mov
scas
das
mov
out
jo
inc
sub
ljmp
add
jbe
out
bts
inc
pushf
pusha
rol
lahf
icebp
mov
jbe
int3
sbb
push
mov
fstpl
xor
pop
imul
xor
add
sbb
pop
clc
xor
iret
sub
mov
mov
iret
jl
sbb
sbb
lea
push
lahf
mov
xchg
lods
incl
push
add
and
cli
clc
push
pop
or
xchg
imul
inc
dec
or
mov
push
pop
out
mov
fsubrp
insl
pop
push
jp
adc
movsb
push
adc
sbb
dec
jbe
lods
inc
ror
fwait
cmpb
inc
pop
outsb
subl
mov
mov
loope
ljmp
or
nop
push
into
sub
arpl
xchg
adc
mov
and
adcl
mov
ljmp
jb
push
lea
inc
pop
mov
movsb
or
jne
ret
outsb
pusha
xorl
sbb
adc
mov
xchg
cmp
icebp
jns
je
test
rcr
sub
mov
jae
lea
lock
aam
insb
inc
jl
lahf
xor
aas
sub
cld
add
push
stc
dec
imul
adc
adc
jbe
enter
pop
cmc
cmp
stos
inc
mov
sbb
test
mov
ljmp
lcall
mov
cmpsb
fimuls
movsb
lods
ljmp
cmc
in
ljmp
movl
mov
adcl
dec
jg
fmull
mov
dec
out
cmp
sub
push
jge
xor
iret
mov
jno
pop
sub
push
jle
push
and
dec
aas
and
stc
rcll
lcall
sbb
lods
test
sbb
ja
adc
add
mov
nop
cli
lods
outsl
call
fs
xor
dec
dec
xchg
dec
push
jae
add
mov
in
inc
mov
aam
lds
adc
repz
bndldx
daa
dec
mov
xlat
add
push
scas
mov
xchg
arpl
roll
adc
ret
daa
jnp
mov
in
fnstsw
jge
addb
add
or
adc
xor
adc
lods
xor
pop
pop
dec
mov
dec
je
pop
fwait
sbb
rcr
cwtl
out
cmc
xchg
cs
lret
rcr
mov
ja
cmpsb
or
add
push
jbe
inc
and
test
ds
test
cmpsl
mov
mov
outsb
je
push
mov
loope
aas
call
mov
aas
outsb
or
mov
sbb
arpl
jmp
xchg
adc
push
and
lcall
jg
adc
lods
adc
dec
xchg
popf
loopne
loop
add
mov
mov
loop
ja
pop
movsl
jmp
js
fcomip
inc
repnz
inc
lcall
fnstsw
mov
or
fsubl
or
cld
xor
cli
lea
adc
inc
cld
mov
mov
pop
icebp
inc
loope
insl
inc
fbld
movsl
ja
cli
adc
out
in
sub
or
rorb
xchg
stc
xor
scas
js
shll
xor
cmp
push
adc
push
pop
pusha
scas
movsl
loop
jp,pt
mov
jecxz
push
popf
cwtl
push
js
and
movsb
mov
adc
movsb
or
call
xlat
inc
sub
popf
xchg
leave
lock
inc
push
add
jge
inc
pop
inc
and
clc
dec
sbb
fmuls
sbb
test
mov
es
add
mov
enter
jmp
daa
jo
shr
clc
mov
ret
push
movsb
std
sbb
cmpsl
or
xchg
or
jle
sbb
aas
movsb
cld
sub
dec
lret
ds
or
repnz
fisubrl
mov
sbb
je
js
fistpl
mov
lods
stos
inc
inc
add
pop
pop
lock
mov
out
pop
adc
repz
pop
das
add
xchg
jnp
scas
les
push
add
pop
push
xor
stos
out
inc
enter
cli
push
test
popa
insl
cmpsl
ljmp
ret
xchg
mov
add
push
push
xor
icebp
lock
in
and
inc
in
cmc
aad
sbb
xor
mov
mov
clc
cmp
jb
lds
cs
sub
aas
cli
jp
mov
xor
fcmovnb
pushl
push
jp
mov
push
inc
stos
icebp
cmpsb
loopne
jp
mov
popf
in
jl
icebp
adc
mov
popa
out
out
sahf
ret
xor
popa
push
outsl
sub
je
popa
inc
jae
ss
pop
hlt
sbb
push
insb
push
pop
adc
and
sub
pop
cli
sbb
arpl
pusha
in
popl
inc
pop
mov
push
loope
mov
push
mov
sbb
inc
stc
aas
pushl
scas
mov
push
mov
xor
ret
xchg
outsb
lds
iret
shlb
sar
ljmp
mov
mov
cmp
jecxz
outsl
shlb
xchg
out
stos
sbb
mov
inc
fistl
jp
mov
inc
fstpt
hlt
in
mov
fdivrs
push
push
aam
incb
rorb
and
xchg
lock
push
outsl
sbb
mov
adcb
ret
insb
mov
ljmp
xchg
dec
stos
cmp
sbb
movsl
pusha
ljmp
fldt
cs
xchg
insb
frstor
mov
xor
imul
xchg
aad
aas
into
mov
dec
mov
enter
add
mov
ja
addl
adc
mov
push
fistpl
loopne
loopne
int
cwtl
lods
mov
test
cmp
loop
popa
dec
sub
ret
in
and
cmp
outsb
lret
push
xchg
cmpsb
and
icebp
movsl
mov
mov
push
inc
mov
cmp
and
push
icebp
inc
lods
push
in
aad
sar
adc
mov
icebp
arpl
and
xchg
cmp
inc
shll
jl
outsl
and
jbe
add
adc
add
mov
xchg
inc
cmp
xchg
add
mov
cmp
mov
stos
and
and
adc
sbb
dec
add
push
mov
pop
jb
mov
arpl
decl
in
test
add
and
adc
jle
mov
mov
mov
mov
stos
arpl
clc
sbb
call
push
in
jae
xor
call
sbb
lock
test
pop
dec
push
jne
leave
xor
push
mov
dec
pop
test
out
and
loopne
fldl
xchg
test
out
out
and
sub
call
inc
push
jo
cmp
xor
in
add
xchg
movsl
mov
aaa
mov
inc
fisubs
inc
mov
mov
xchg
push
push
dec
js
add
jp
cld
loope
and
insb
xchg
insb
jns
stos
and
xor
cmp
loope
jns
adc
add
mov
or
ss
push
or
sbb
mov
adc
rcr
in
test
ss
xor
mov
and
js
rolb
or
inc
add
out
xchg
push
addr16
push
fbstp
lock
mov
mov
js
mov
shl
mov
sub
mov
sbb
mov
pop
je
sti
pop
mov
jo
dec
test
and
sub
sbb
shl
or
cmc
inc
stos
ljmp
mov
and
cld
in
dec
js
pop
or
push
push
push
outsb
xorb
mov
push
dec
jmp
mov
or
mov
cli
and
in
mov
add
sub
or
shll
push
push
outsb
shr
nop
cmc
mov
push
pop
in
or
aad
or
xchg
pop
mov
add
fisubrs
ret
add
int3
pop
adc
inc
or
shl
sub
inc
adc
test
std
add
stos
cmpsl
adc
jecxz
and
pushf
pop
lods
add
roll
enter
addl
in
jnp
inc
pop
sbb
xor
or
outsb
dec
pop
add
jl
or
rcrl
fildl
sub
imul
insb
je
ret
jp
cltd
dec
stc
mov
movntq
in
mov
je
movsb
je
mov
lods
mov
les
push
mov
pushf
clc
lahf
xor
mov
test
pop
fs
push
and
rolb
scas
out
mov
push
test
sub
icebp
sub
xchg
jo
icebp
scas
ror
into
xchg
push
add
fldt
adc
fcoms
enter
push
icebp
push
add
inc
or
or
cmc
int3
mov
fbld
sbb
jmp
std
nop
cltd
lea
into
loopne
xchg
xchg
sti
mov
lea
loop
cs
sbb
jbe
mov
mov
jne
dec
add
test
shl
rol
cmp
mov
xchg
dec
mov
inc
and
add
cld
loopne
lods
pop
inc
mov
dec
sbb
mov
mov
mov
ficompl
add
pop
pop
adc
add
add
ret
sub
jg
and
or
inc
adc
adcb
mov
cmc
sub
sub
enter
lods
mov
inc
ret
jecxz
rclb
dec
dec
test
stos
loopne
nop
mov
ljmp
adc
repnz
mov
and
push
leave
adc
push
ljmp
fs
gs
mov
jecxz
or
xchg
lock
loope
mov
or
xor
add
movsb
or
lahf
ds
adc
xorb
and
sar
dec
pop
sub
cmp
jg
decb
jae
pop
adc
pop
hlt
scas
pop
cli
mov
mov
data16
loopne
gs
fwait
and
jb
fsubs
in
jg
cmp
sub
int3
mov
in
adc
pop
dec
fcoml
mov
pop
push
jb
adc
in
mov
push
sbb
jb
ret
or
lods
decl
xchg
mov
inc
jae
jle
test
cmp
mov
add
push
fmull
je
xchg
fwait
cli
jns
test
and
mov
scas
and
fwait
ret
pusha
jo
xchg
movsl
arpl
push
in
loop
mov
pop
insb
mov
incb
or
push
push
jno
mov
jge
sbb
or
call
adc
jle
icebp
insl
lret
jg
add
jbe
sbb
push
mov
ss
push
popf
fisttps
rcl
into
test
jmp
sahf
push
outsb
adc
lret
pop
jl
sbb
iret
jl
sbb
or
enter
and
mov
sbb
in
in
decb
mov
mov
pop
movsb
and
adc
mov
or
nop
or
les
scas
inc
sub
scas
pop
test
push
push
sti
aaa
aad
jl
repz
mov
mov
sub
mov
cld
icebp
les
jns
jl
mov
repnz
les
mov
or
mov
fs
addl
sti
popa
loope
jl
fwait
dec
iret
inc
jbe
adc
jo
js
lcall
add
mov
push
aam
push
pusha
insl
scas
imulb
xor
or
out
or
jno
fists
mov
clc
mov
jp
pop
xor
jge
fsub
lods
je
nop
iret
adc
inc
xor
stos
das
add
shlb
sub
sub
xchg
bnd
popf
in
out
adc
clc
ret
ret
dec
mov
pop
cmp
mov
fsts
xchg
test
mov
dec
and
cli
ja
dec
outsb
jae
fidivrs
test
mov
adc
ret
shlb
mov
es
pavgb
into
das
lods
cmpsb
pop
icebp
sbb
jmp
xchg
cmp
icebp
repnz
daa
jne
cld
test
and
mov
xor
pushl
inc
nop
sbb
xlat
repnz
xchg
clc
scas
aad
hlt
sbb
push
addl
dec
jnp
shl
add
inc
sub
cmpsb
test
out
pop
addl
cmp
icebp
jo
pop
in
int
sarl
mov
mov
xchg
andb
mov
pusha
push
pop
mov
testb
es
adc
jbe
sbb
jnp
xchg
hlt
adc
fsubr
xlat
mov
jo
sub
dec
pop
fstl
and
adc
pop
lock
xchg
jg
add
xchg
ds
pop
ffree
sbbb
or
inc
mov
or
adc
ret
rclb
test
nop
ds
das
add
cmp
and
int
jecxz
or
or
jl
xor
lods
push
pop
ds
mov
pop
xchg
pop
inc
dec
xchg
call
pop
into
or
jge
sub
rorb
jge
inc
inc
repz
dec
lods
xchg
add
jg
push
cmc
dec
cmp
sbb
sbb
pop
inc
sub
fildl
es
cltd
push
fsubrs
daa
in
lods
ja
test
js
lcall
dec
out
sahf
scas
mov
loopne
sti
inc
in
loop
inc
imul
dec
xchg
scas
mov
mov
and
incb
sahf
push
rol
cmp
xchg
sbb
inc
fmuls
mov
loopne
jno
jns
push
pop
xor
jge
xchg
fldcw
mov
stc
popa
cmova
or
ja
je
call
mov
xlat
int
ret
data16
cmp
loopne
cs
cli
xchg
decb
or
out
pop
adc
push
add
dec
cmpsl
or
popa
cwtl
insl
andb
xor
dec
out
aas
gs
mov
jbe
or
dec
loopne
mov
or
add
js
cwtl
mov
mov
test
and
mov
pop
in
adc
decb
mov
rolb
pop
cli
or
dec
loope
mov
xor
mov
aas
out
adc
subb
stos
or
mov
mov
cmpsb
cs
mov
add
enter
pop
hlt
xchg
cmc
jne
insl
sbb
sbb
xor
pop
loop
ret
fs
sbb
cld
xchg
loopne
mov
push
fsub
scas
loopne
mov
xchg
ja
in
jb
loopne
mov
adcb
push
mov
inc
jl
xor
lret
test
xchg
sbb
lahf
mov
das
clc
stc
add
dec
cmc
dec
test
push
fmull
cmp
testl
jge
lods
sub
jecxz
ds
adc
scas
and
mov
les
pop
outsl
add
orb
sub
ret
dec
call
andb
add
out
jnp
mov
xor
push
aaa
fnstcw
xchg
inc
mov
add
or
mov
mov
daa
xor
into
imull
inc
adc
sbb
adc
jo
adc
stos
mov
insb
rorl
and
cmpl
lcall
push
push
cmp
mov
push
dec
or
lahf
lods
stos
daa
lret
push
fwait
mov
enter
adc
mov
fistps
adc
loopne
ds
scas
mov
repnz
repz
lret
adc
int3
sub
test
es
push
inc
mov
testb
cmp
push
incl
into
dec
loopne
jne
mov
testb
mov
xchg
lods
sub
or
xor
cmc
sbb
push
lods
arpl
dec
pop
inc
dec
and
lahf
pop
cmc
mov
rcr
dec
cld
jg
ss
xchg
pop
into
inc
lock
cmp
in
fisubl
lret
pusha
xor
sbb
lock
ds
sbb
shlb
sbb
ljmp
fcoms
loopne
imull
in
mov
or
sub
jle
cmp
push
popa
int
push
adc
and
add
sub
adc
xor
pop
pop
jbe
inc
imul
adc
ds
and
dec
clc
dec
push
push
xor
or
js
ljmp
les
add
push
push
out
push
or
ret
dec
fwait
cmp
cli
jno
push
push
pop
cmp
adc
and
in
fadd
or
enter
xchg
push
hlt
or
js
mov
stos
push
add
inc
into
ss
cwtl
fistps
mov
ss
xor
xor
inc
in
clc
iret
add
mov
push
clc
inc
popl
loopne
cmpsl
std
loope
add
sub
pcmpeqb
shlb
movsb
cld
xor
pop
lock
les
xchg
jae
push
mov
stos
push
jo
or
lret
fisubl
out
mov
dec
iret
sub
sub
mov
mov
sarl
jne
xchg
ret
or
leave
js
pop
and
push
push
incl
ja
lods
ret
imul
cs
add
mov
xchg
sub
jp
xor
mov
pop
inc
loope
mov
and
adc
fsts
sub
xchg
mov
xchg
jmp
clc
scas
xor
mov
mov
dec
xchg
clc
rol
pop
add
xchg
sbb
ror
je
mov
push
sbb
cmpsl
adc
pop
sbb
daa
loop
jns
mov
xchg
push
add
xchg
icebp
adc
nop
shrb
push
mov
jecxz
imul
dec
in
adc
sbb
movsb
and
bound
popf
mov
jg
mov
jp
xchg
test
sbb
rclb
loopne
pop
push
ret
ret
cmp
adc
test
adcb
mov
mov
ret
loop
lea
lret
imul
je
test
pop
hlt
mov
test
or
filds
sub
shl
scas
imulb
aad
adc
and
jne
lea
fnsave
mov
inc
adc
loopne
push
rolb
aas
and
or
popa
add
push
push
addr16
roll
adc
push
sbbb
leave
mov
pop
mov
push
stos
int3
fcmovne
nop
sti
mov
pop
push
or
ret
leave
sbb
aaa
pop
dec
mov
daa
gs
pop
xchg
rolb
adcb
pop
into
xchg
stos
shll
out
pop
cmpsb
aaa
jne
call
cmp
movsb
sbbl
gs
cmp
iret
jo
jo
push
or
adc
mov
dec
shrl
int
xchg
mov
xor
xor
les
pop
xor
mov
test
xor
dec
out
subb
in
xchg
sbb
push
out
pop
insb
mov
mov
pop
int
jno
lock
in
ss
adc
jecxz
in
push
mov
sub
int
loop
pop
fsts
out
pop
sbb
mov
jbe
mov
cmp
mov
xchg
jp
aam
clc
mov
bound
icebp
mov
cld
fs
dec
cli
mov
mov
push
xor
popf
inc
cmp
or
push
mov
push
mov
push
push
in
scas
pop
test
mov
add
shlb
push
js
pop
pop
mull
aad
inc
sarl
int
push
xor
and
pop
and
ja
clc
sti
daa
fisubrs
cwtl
call
jg
or
shl
adc
idivb
cmp
push
add
sahf
cmp
mov
jae
lods
call
dec
mov
or
pop
xor
mov
cltd
roll
add
jb
mov
popf
lahf
insb
or
mov
sbb
cmpsb
sti
pop
dec
sbb
cmp
shl
insl
sti
test
mov
pop
testb
add
inc
pop
cwtl
push
test
inc
add
or
dec
adc
movsb
scas
call
loop
icebp
outsb
lahf
mov
lea
xor
pop
loop
subl
mov
addb
push
movsl
xor
pop
stos
or
in
add
cld
lods
jp
aaa
inc
push
addl
out
or
add
mov
in
cmpsb
dec
and
mov
scas
jnp
and
nop
adc
xor
roll
sbb
pusha
or
push
lods
xchg
jge
push
pop
lods
pusha
filds
aad
sub
fs
rclb
mov
push
popa
cmpsl
bound
ljmp
mov
cli
pop
sbb
add
je
push
sub
dec
lea
push
mov
dec
arpl
or
jno
cmp
call
push
fwait
pop
rolb
lcall
lahf
stc
xor
xchg
cmc
jb
push
iret
popf
or
pop
sub
fmuls
shlb
push
lock
mov
pop
cmpsb
cmp
xchg
push
jns
lods
adc
xchg
cmpsb
pop
loopne
loop
in
push
cmc
or
mov
inc
push
ljmp
jbe
out
imul
loop
xchg
rol
add
cmp
mov
push
sub
adc
jge
push
out
mov
sti
notl
sub
sub
dec
xlat
pop
sti
sbb
lret
pop
scas
icebp
ret
push
or
rcrl
fiadds
push
out
popa
adc
or
pop
movsb
cld
popf
cmpsl
loope
int3
les
sub
push
pop
xor
cld
inc
push
outsl
cwtl
pop
sarb
adc
jl
inc
lods
int
or
enter
jnp
es
dec
xor
js
lret
daa
imul
and
or
in
adc
sub
test
inc
syscall
mov
push
sub
pop
dec
sbb
stc
jle
into
aam
imul
xchg
mov
add
ror
dec
inc
addr16
aam
dec
pop
fs
pop
cld
xor
mov
mov
pop
mov
and
push
repnz
int
pop
dec
out
adc
sub
mov
outsb
mov
in
repnz
in
outsl
xchg
push
das
fiadds
or
adc
sbb
fs
inc
add
mov
insl
cmp
inc
xorb
js
call
add
movsb
int3
cs
enter
sbb
mov
subl
inc
addr16
enter
cmp
andb
push
mov
fmul
sahf
xchg
stc
scas
jg
lods
push
cmp
ss
or
jecxz
int3
xchg
xorl
test
cmp
sbb
and
in
daa
push
xor
lret
cmp
clc
adc
xor
sub
jle
out
fs
loopne
test
cmp
xor
imul
mov
sub
or
jp
push
sub
ret
popf
ficoml
sarl
outsl
sub
icebp
shrl
cmp
aaa
mov
pop
or
je
mov
jo
jns
fstl
js
sbb
xchg
insl
sbb
push
imul
sbb
std
push
shrd
push
xchg
stc
dec
cwtl
loopne
lea
sub
iret
mov
jbe
cli
inc
add
orb
add
lea
jno
call
push
pop
cmp
psubb
add
pop
lods
push
andl
push
jp
enter
xchg
xor
mov
jno
sbb
fwait
inc
fisubl
lret
adc
dec
rcrb
addr16
mov
mov
push
xor
test
jmp
pop
push
shl
fmuls
movsl
or
mov
mov
popf
test
mov
cli
dec
inc
mov
or
cld
or
pop
jae
movd
cmp
jbe
popf
pop
push
dec
cmp
push
mov
lret
lret
aaa
hlt
push
jb
jnp
push
aad
sub
fidivrs
repz
decb
push
loope
mov
inc
fcmove
push
shl
add
inc
jno
pop
faddl
daa
cld
mov
les
mov
jne
inc
jl
xchg
rolb
jno
sub
fdiv
adc
sub
pop
cltd
icebp
inc
jmp
stos
scas
movsl
push
add
stc
cld
jbe
add
cmpsb
mul
sbb
cwtl
aam
pop
xchg
je
mov
dec
push
hlt
cld
mov
add
aas
inc
and
shrl
push
mov
push
add
loopne
mov
and
loope
addb
sbb
fs
cmp
push
mov
adc
cmc
inc
ret
xchg
lods
xor
mov
jnp
mov
outsb
xchg
and
pop
adc
je
test
xlat
jne
testb
fcomip
add
lods
lret
sahf
stos
mov
sahf
rcrb
mov
dec
ret
pop
stos
xchg
push
jo
xchg
xor
inc
cs
mov
in
bound
inc
or
mov
pop
xor
push
mov
mov
pop
outsl
sbb
mov
fadds
inc
pop
mov
lea
mov
sub
push
sub
test
pop
in
sub
adc
mov
fcomp
pusha
bound
sarb
fsubrl
jae
andl
xchg
inc
ret
scas
pop
or
sub
sbb
pop
les
jge
insl
movsl
pop
dec
sub
ss
jge
mov
les
inc
cld
mov
push
dec
stos
into
call
push
roll
pusha
push
mov
in
and
js
jecxz
ljmp
jg
push
sbb
jns
adc
ret
orb
test
cmp
push
int
popf
push
mov
test
mov
cli
and
mov
imulb
movsl
negb
pop
push
icebp
in
xchg
dec
jecxz
inc
loopne
sub
add
aad
xlat
cli
into
or
mov
ret
fwait
xchg
lret
sub
shr
inc
xor
pop
push
and
popa
test
repz
imulb
xchg
cmp
jg
pop
push
jne
inc
fmuls
stos
in
fbstp
xor
mov
js
adc
cmp
test
andl
ljmp
rcrl
int
loop
or
xchg
outsw
mov
orb
frstor
pushf
fs
push
in
pushf
add
add
push
xor
add
fs
orl
jne
sarl
pop
les
push
mov
lock
dec
pop
lret
pushl
push
xchg
mov
and
rclb
add
scas
mov
or
dec
icebp
pop
mov
xor
inc
jmp
cld
arpl
adcl
sub
into
shll
or
mov
lods
cmp
pop
mov
add
cmp
fs
lds
mov
cmpsb
iret
and
ret
inc
loop
xor
int
adc
push
add
in
call
stos
adc
add
adc
popa
xchg
and
loop
xor
inc
mov
pop
jbe
adc
js
in
push
cmp
incl
and
mov
in
fsts
or
lahf
lock
shl
add
sti
xchg
cwtl
mov
aas
xchg
and
push
xor
mov
subl
int
fs
test
dec
inc
cmp
cld
adc
ret
adc
add
inc
jp
fs
mov
sbb
sub
xchg
scas
push
daa
fcmovnbe
mov
jae
stos
ret
inc
cmpsb
ljmp
call
xchg
xor
sbb
mov
rcrl
inc
xchg
push
push
outsl
ja
or
or
les
cmpsb
loope
sti
aaa
cltd
mov
fnstcw
outsb
hlt
and
inc
and
stos
mov
and
inc
nop
push
xchg
pop
xchg
jbe
addr16
push
rcrl
or
andb
incb
jg
jp
scas
std
callw
jo
inc
mov
and
pop
jmp
pop
and
push
sbb
cmp
stos
stos
cld
gs
jo
xchg
jbe
jmp
fldt
loopne
jp
jno
or
sti
jmp
pop
pop
push
leave
ret
dec
inc
ds
mov
xor
fdivrl
mov
dec
and
dec
cld
scas
ja
sbb
sub
stos
stos
sub
pop
shrb
add
test
mov
mov
adc
xchg
xchg
jmp
cli
imul
mov
int3
mov
lods
js
add
in
test
inc
insl
jge
out
push
in
cld
mov
pop
add
nop
inc
in
dec
cwtl
dec
inc
cmp
int
lods
outsb
xchg
sub
mov
outsb
sti
or
and
bound
and
mov
fcmovnb
es
sub
dec
push
hlt
cmp
adc
pop
push
or
sbb
rcrb
xor
jb
lret
mov
push
push
sub
add
loopne
loop
adc
xchg
mov
push
cltd
loope
sub
lock
or
loopne
and
push
test
cmp
adc
sahf
xchg
outsb
cmc
orl
cmp
cli
push
cli
pushf
jnp
sahf
icebp
mov
ret
in
dec
sbb
push
push
inc
cld
jecxz
movsb
stc
push
ret
adc
xchg
fcomps
and
cwtl
jmp
ljmp
adc
mov
mov
shlb
test
lock
gs
push
rorb
sbb
shlb
in
mov
movsb
push
sub
mov
and
inc
lock
fcmovbe
stos
es
push
fcomi
flds
nop
dec
rcrb
leave
test
jg
push
pusha
insl
push
rcrb
xchg
aas
ljmp
les
cmp
inc
sub
jge
aas
outsl
inc
mov
gs
loop
adc
ret
andl
xchg
shll
popl
loop
nop
xorb
aas
mov
or
pusha
mov
dec
fmuls
pushf
clc
and
push
fsubrs
rcrb
mov
add
inc
jge
jne
adc
pop
jmp
inc
cli
cmpsb
out
fdivl
pop
jo
aaa
mov
enter
das
fdivrl
imul
dec
inc
aam
adc
pop
into
sbb
mov
inc
js
mov
pop
add
inc
ljmp
adc
jmp
out
xchg
sbb
push
pop
cmpsb
ud1
adc
cwtl
in
in
push
pop
mov
push
push
cmp
xor
cwtl
mov
mov
test
mov
aam
fiaddl
or
push
cmp
mov
sub
jmp
push
subl
inc
jl
and
insl
std
scas
ljmp
pop
jle
mov
lea
orb
add
xchg
dec
jns
into
xlat
add
push
mov
push
cli
inc
ja
push
mov
dec
inc
fwait
pop
xor
push
in
dec
stc
mov
nop
cmpb
and
mov
cwtl
push
lcall
inc
dec
ror
loop
sub
pushf
or
call
or
or
or
push
aaa
ds
or
push
loopne
and
jecxz
cli
je
inc
fisubl
fs
fidivs
push
pop
xchg
testb
ljmp
test
mov
popa
jg
xchg
inc
test
xchg
and
push
inc
call
mov
inc
push
sbb
outsb
dec
loop
rcr
call
xor
and
gs
sub
add
mov
xchg
cli
dec
es
jb
jb
rorl
sbb
mov
dec
lea
hlt
or
fwait
rorb
cmp
les
loopne
mov
clc
jns
out
or
je
inc
or
shr
cmpsl
icebp
dec
test
and
inc
or
in
pop
push
pop
sbb
dec
push
stos
pop
incl
cmp
movl
sbb
fdivrs
add
pop
stos
aaa
insb
mov
mov
imulb
sub
lods
cmp
pop
in
ja
xchg
mov
movsl
xchg
test
dec
xor
shll
mov
cmp
add
lahf
mov
dec
pop
mov
dec
cwtl
inc
jo
xor
fidivs
or
lods
add
test
addl
add
clc
xchg
add
icebp
aam
imul
dec
jnp
or
pop
and
ret
inc
or
imul
sbb
dec
test
bound
iret
push
pop
add
mov
dec
mov
das
lods
ljmp
mulb
dec
cmp
pusha
insb
dec
pop
cld
ret
xchg
mov
or
aaa
add
mov
outsl
lahf
push
pusha
pop
mov
cmp
mov
subl
enter
add
inc
incl
push
sbb
add
insl
jnp
in
push
mov
sahf
inc
movsb
dec
mov
or
mov
popa
rcrb
or
xchg
adc
adc
mov
cmp
pop
cli
inc
push
add
shrb
lods
les
call
mov
or
mov
adc
sub
loopne
inc
stos
push
dec
lock
mov
jg
enter
xor
out
clc
sbb
cmc
dec
cmpsb
fsubr
cmp
inc
or
in
or
loopne
sti
inc
into
pop
adc
iret
cmp
sarb
push
jne
mov
mov
cld
mov
xchg
call
and
jae
std
ret
xor
mov
xor
lock
rol
out
pop
test
call
js
ds
notb
push
xor
xchg
sbb
test
mov
mov
push
insb
movsb
repz
push
bound
int
mov
lret
push
in
repz
insb
popa
add
push
xchg
icebp
repz
inc
movsb
loopne
in
sbb
cwtl
fs
push
ljmp
mov
pop
imul
ja
mov
aas
stc
inc
inc
lock
testb
cmp
sub
and
mov
xchg
pop
les
mov
lods
pop
cld
nop
adc
ljmp
test
jbe
sub
dec
add
call
jmp
loop
jge
clc
movsl
cwtl
lock
push
mov
mov
andl
test
add
rolb
push
push
sbb
mov
sub
das
loopne
call
and
jge
ret
cmp
add
fsubrl
add
test
or
mov
ja
mov
js
jns
pop
mov
rol
xor
std
push
push
repz
test
mov
inc
or
out
rolb
call
xorl
xchg
mov
mov
jg
test
int
cli
cs
pop
adc
mov
sarb
push
jl
cmp
cmp
inc
push
push
sbb
mov
out
cwtl
adc
or
rsm
push
std
cmp
addb
add
clc
lahf
pushf
loopne
push
pushf
inc
dec
bound
and
adc
es
push
fwait
andl
dec
mov
push
push
push
adc
cld
add
inc
xchg
sahf
ja
mov
add
aaa
push
aas
sbb
lods
mov
push
lret
xor
mov
insl
push
in
or
inc
xchg
loop
test
jmp
push
test
cmp
jp
or
movsb
data16
and
dec
inc
pusha
mov
sbb
outsb
push
mov
xchg
outsb
out
das
fs
loopne
or
test
push
cmc
popl
aaa
inc
mov
aas
cmpsb
out
pop
or
adc
fwait
add
jmp
adc
stos
shl
loop
fsub
and
push
mov
in
loopne
mov
in
pop
or
adc
je
or
mov
test
lock
imul
stc
pop
mov
ret
dec
sbb
cmp
or
adcb
jbe,pn
loop
cmp
mov
add
ret
sbb
mov
mov
mov
push
into
cltd
stc
ljmp
scas
add
xor
gs
and
push
and
repnz
lcall
orb
jno
cld
jb
jp
cli
outsl
js
out
shl
inc
xchg
dec
addl
nop
fimull
nop
mov
dec
inc
leave
inc
aam
je
push
fnstsw
ret
out
fadds
cmp
or
jne
mov
mov
in
test
fdivrs
jg
sti
pop
jge
jbe
xchg
lcall
cmp
dec
pop
call
push
pusha
or
insw
negb
add
loope
icebp
ficomps
push
push
and
aad
fcomps
sar
pop
push
loopne
push
daa
mov
test
dec
cmp
mov
jg
pop
clc
add
jb
sub
pushf
push
fcmove
add
shr
and
in
into
sub
pop
scas
mov
sar
inc
rol
mov
nop
cmp
sbb
cltd
push
fwait
mov
jae
add
push
or
or
add
sbb
push
test
addb
mov
jl
and
ljmp
sbb
add
pop
inc
sub
sbb
pushf
xor
popa
sbb
push
out
daa
mov
xorb
add
mov
lcall
ljmp
xchg
cmc
push
orb
and
repz
clc
incl
sar
xor
lods
mov
sar
push
lock
aad
loope
inc
jbe
mov
lock
xor
push
sbb
push
sbb
mov
fs
fcoms
adc
ljmp
les
adc
js
decl
pop
jg
mov
pop
inc
inc
push
aaa
lock
add
dec
out
xchg
aas
out
rorb
adc
bnd
cld
iret
xchg
push
fcmove
jmp
pop
stos
incl
inc
jmp
xor
dec
mov
subl
test
ret
clc
or
scas
xchg
add
pop
cs
mov
mov
inc
jae
dec
in
stos
cli
inc
jb
xor
loopne
int3
sub
dec
mov
or
mov
ret
inc
ret
dec
jo
xor
dec
rcrb
mov
int
leave
testb
or
not
cmp
int3
gs
add
and
or
sahf
ja
jae
cvtps2pd
mov
mov
xchg
add
mov
push
inc
sarl
scas
js
stos
fs
cs
inc
sbb
std
jle
mov
call
xchg
mov
sbb
pop
inc
add
lock
incb
cld
jg
push
push
xlat
sub
ja
test
cli
call
dec
popa
jnp
and
in
xchg
hlt
xchg
es
xchg
push
rclb
xor
xor
shll
call
mov
movb
push
push
add
pop
clc
inc
mov
pushf
rorb
js
xchg
rorl
xor
cli
adcb
mov
lods
mov
leave
imul
aam
shlb
ficoms
adc
and
rclb
push
adc
ficoms
jmp
orl
cmp
out
pop
lock
xlat
mov
or
js
repnz
sahf
inc
xchg
cld
test
fisttps
mov
adc
jl
icebp
lods
xchg
mov
fbstp
aaa
push
lds
dec
mov
in
pop
sbb
aad
xchg
jno
ficompl
addb
int
cmpsl
jno
bound
icebp
imul
incl
xchg
ljmp
test
sbb
fwait
adc
mov
dec
aad
push
fisubrl
xchg
and
sbb
and
out
jle
es
arpl
bound
sub
sbb
push
mov
test
and
mov
or
into
sub
xchg
std
mov
sbb
adc
repnz
test
out
add
push
addl
push
cmp
or
ja
jno
inc
cwtl
inc
inc
lods
lcall
mov
insl
out
mov
fmull
mov
jge
cmc
lcall
xchg
push
call
icebp
jbe
adc
jp
daa
add
popa
lahf
jne
loope
arpl
rcll
rolb
mul
insb
cmp
test
out
adc
leave
mov
mov
sub
mov
lods
enter
lret
jp
mov
notl
cmpsb
mov
js
adc
imul
sbb
xchg
jbe
adc
sbb
sbb
scas
icebp
fadds
ds
jle
int
mov
stos
pushf
addb
jbe
out
jecxz
mov
cmp
sbb
loop
mov
shll
aam
sbb
movsb
cs
or
jbe
xchg
fs
repnz
rol
inc
cmp
jo
int3
cmpsl
mov
call
inc
mov
cs
mov
clc
jne
mov
ret
cld
inc
fwait
mov
cli
scas
mov
push
add
jbe
cmc
or
jb
mov
stos
shrb
into
rolb
sbb
inc
cmpsb
cmp
aaa
add
loopne
ret
into
jne
lods
fsubs
push
lock
sbb
lods
pop
mov
repnz
push
sbb
add
push
loopne
fdivr
add
gs
cmp
orb
dec
in
xor
pop
jmp
push
cmp
lcall
popf
pop
xor
push
and
sub
or
sub
cs
rcrb
out
test
sub
out
je
stc
add
jne
lcall
push
leave
add
jg
lods
in
cwtl
xor
dec
or
clc
push
xor
nop
mov
ficoml
addb
jae
mov
cmp
fnsave
push
pop
sarl
add
mov
adc
cmpsb
adc
cmp
sbb
xor
jle
icebp
add
jl
jle
cld
dec
mov
outsb
sub
pop
jle
push
sbb
mov
in
cmpsb
mov
add
mov
or
js
imul
test
gs
jle
or
pop
push
or
cmpsb
lds
push
fldt
adc
xor
out
or
inc
mov
ret
dec
or
xchg
pop
add
insb
es
adc
js
repnz
xlat
mov
cmpsb
jl
outsb
sub
lds
pop
mov
add
sub
inc
mov
jecxz
add
adc
stos
cmpsb
mov
cmpsb
dec
iret
mov
dec
aad
jle
xchg
lods
add
or
movsl
adc
mov
cmp
pusha
int
add
scas
xchg
aam
dec
add
cmp
clc
adc
jno
out
icebp
clc
ljmp
mov
pop
pop
xor
push
hlt
fs
into
xchg
xchg
adc
nop
cmp
into
mov
shrb
sub
clc
pop
add
sbb
sub
mov
inc
mov
cmp
clc
leave
and
and
add
psraw
cmp
sub
aam
data16
push
pusha
dec
ret
rcrb
clc
arpl
mov
sub
or
add
jecxz
shrb
popf
shlb
ss
pop
in
mull
xchg
cmp
pop
pop
push
ljmp
push
lock
sub
das
les
or
jbe
imul
push
clc
push
adc
fimuls
pusha
or
or
adc
iret
insl
add
jmp
sbb
push
pop
add
cmp
scas
pop
mov
adc
push
test
icebp
aas
mov
mov
xchg
js
subb
pop
jg
add
ss
sub
mov
aas
cs
arpl
or
mov
cmp
xchg
push
cmp
nop
lods
mov
stos
inc
add
clc
jo
ret
or
dec
push
lds
pop
ss
adc
jp
icebp
rcll
adc
daa
push
adc
cmp
add
test
out
jl
xor
jl
sbb
das
xchg
lock
dec
adc
call
cmpsl
mov
dec
dec
jecxz
std
push
pop
pop
sub
pop
inc
adc
push
push
fisubrs
mov
inc
fsubrl
orb
and
jo
xchg
jp
test
sub
xlat
sbb
in
cmpsl
cmove
sbb
cmpsb
xor
jl
or
push
pop
aad
push
and
stc
mov
js
andb
mov
adc
test
test
out
pop
in
dec
pop
subl
add
mov
scas
mov
imul
dec
cmpsl
test
test
add
test
pop
testl
ror
jle
add
sbb
and
pop
ror
and
push
fmuls
inc
and
xorb
dec
ljmp
outsb
imul
sub
divl
inc
sti
push
jmp
daa
cltd
cwtl
add
lea
dec
movsb
xchg
push
xchg
les
inc
xor
pop
push
lock
sbb
lock
xchg
clc
sbb
pop
in
or
or
lods
jbe
jnp
in
adc
adc
pushl
addr16
push
rcll
rcrl
lret
xlat
push
sbbl
orb
bound
shrl
jb
je
cmp
push
fstpl
push
jne
iretw
push
mov
loopne
jl
loope
inc
cmp
inc
mov
sub
mov
scas
iret
fsts
xchg
sub
ss
call
push
push
jno
jbe
in
sub
sarb
lock
into
lock
mov
and
hlt
daa
add
mov
nop
ljmp
jp
mov
pusha
cwtl
aam
push
inc
loop
cltd
pop
or
movswl
js
into
insl
sbb
icebp
push
clc
mov
call
movsl
movsb
jp
arpl
addl
dec
dec
je
jge
cmp
aad
or
clc
divl
icebp
jmp
dec
mov
mov
xchg
xor
sahf
dec
fsts
lods
je
add
andb
ss
out
sub
nop
shll
shlb
fmuls
xor
push
mov
out
les
jo
xchg
rorb
xchg
and
std
jno
adc
push
mov
add
aaa
loop
cmpsb
ret
scas
xor
das
pop
push
cmp
mov
adc
popa
addb
hlt
ss
xor
sbb
sub
outsl
fs
adc
out
push
push
loop
aas
xchg
mov
mov
fldl
not
imul
cld
adc
mov
push
and
hlt
out
or
adc
loopne
mov
stc
adc
gs
lods
sbb
jmp
scas
sub
iret
dec
add
jecxz
out
or
roll
push
xor
sbb
test
es
jo
cld
loopne
repz
xor
jmp
ljmp
or
loopne
mov
test
add
pop
mov
pop
mov
loope
add
pop
push
sub
aaa
sub
mov
lret
jns
add
lcall
and
adc
out
sbb
int
cmpb
popf
push
scas
leave
and
addr16
nop
mov
inc
addr16
in
out
rcll
and
shrl
rorl
mov
push
inc
sbb
sahf
pop
mov
rclb
add
mov
sahf
bswap
cld
scas
or
sbb
push
jne
rcll
pop
clc
inc
fmul
push
fwait
add
pop
ret
mulb
add
jge
inc
jl
call
pusha
bound
testl
orb
mov
add
les
pop
aad
mov
aam
sub
paddd
jns
xor
adc
xor
add
stos
mov
or
add
aam
add
icebp
pop
pusha
push
out
mov
dec
std
push
out
rcr
and
loopne
fisubrl
clc
mov
and
scas
xchg
pop
adc
dec
inc
xorb
js
and
and
cmp
pop
insl
mov
adc
adcl
push
cmpb
pop
sbb
out
mov
scas
or
nop
repz
sbb
ret
aaa
pop
sbb
test
mov
scas
icebp
mov
or
je
adc
add
int3
lods
sbb
inc
insb
push
fildl
fwait
insb
sbb
jnp
mov
pusha
imul
rorl
jae
mov
hlt
push
push
dec
scas
push
push
call
stos
jg
into
jmp
add
xor
js
sbb
daa
lcall
inc
pop
shl
das
aad
push
jnp
ret
xchg
inc
cmp
add
adc
nop
cmp
es
xlat
sbb
adc
icebp
inc
aas
mov
jae
sub
das
loope,pt
shlb
iret
in
cmp
push
pop
mov
pop
mov
loop
mov
xor
mov
add
in
and
push
sub
je
iret
fists
xor
popa
stos
push
xchg
adc
add
sahf
cmpsl
mov
push
xchg
jge
sub
push
int3
imulb
mov
es
fisubrl
or
cmpsl
sub
dec
sbb
insl
test
aas
out
inc
push
mov
or
lret
pop
mov
jo
and
pop
ljmp
dec
popl
ljmp
outsb
addr16
daa
sub
lret
cmp
mov
js
add
mov
sbb
mov
clc
fdiv
sarb
cmpb
cmovp
dec
mov
cs
and
orb
mov
adc
jb
shlb
cltd
ljmp
inc
loop
adc
gs
push
jmp
jl
fidivrs
xchg
sbb
or
cs
movsl
mov
hlt
shlb
and
outsb
cmp
add
push
movsl
jnp
das
mov
in
push
ss
je
iret
fisubs
push
mov
jmp
push
dec
dec
mov
clc
lods
push
shlb
pop
mov
mov
push
ret
leave
xlat
jecxz
pop
ds
or
add
mov
mov
out
inc
ficomps
hlt
int
xchg
lods
push
jo
mov
scas
fs
jl
adc
inc
lods
mov
push
fsubs
push
fnstenv
push
clc
adc
sub
test
shll
xchg
dec
scas
pop
mov
pop
fbld
bnd
loop
xor
loopne
lcall
aam
fiaddl
aaa
loop
lods
mov
jae
inc
sbb
into
sbb
lret
jecxz
lahf
test
pop
loopne
cmp
jmp
loopne
in
sbb
add
pmuludq
cmp
pusha
cmpsl
scas
sub
jp
stos
nop
pushf
daa
add
cltd
adc
jnp
sub
and
dec
add
mov
push
inc
inc
in
mov
and
leave
xchg
cwtl
fdivrl
loopne
scas
sbb
adc
xor
xor
loopne
adc
aam
mov
in
dec
cmp
mov
inc
addr16
mov
sub
jno
insl
in
xchg
je
mov
mov
repz
rcll
mov
adc
jnp
push
mov
mov
mov
cmc
inc
mov
and
xor
clc
gs
lcall
addr16
adc
push
out
daa
lea
inc
faddl
cwtl
add
sub
jp
push
push
in
xchg
pushf
sbb
lods
jg
mov
rcr
test
cmp
sbb
inc
rcl
js
sbb
lods
scas
cwtl
or
add
out
inc
pop
ret
pop
and
mov
inc
xchg
pop
cmp
cmp
cmpsb
arpl
clc
cmp
push
mov
mov
or
fwait
push
ja
mov
call
inc
cmpsl
scas
mov
dec
inc
push
jp
repnz
fisubrs
aam
pusha
ret
pusha
sbb
add
loopne
push
ljmp
jecxz
xlat
jb
dec
xchg
push
dec
xor
iret
jb
out
mov
mov
aam
and
fisubrl
ljmp
inc
loopne
loopne
jmp
rolb
pusha
lds
and
insb
outsl
mov
pop
mov
adc
jo
and
cmp
pop
dec
dec
test
xchg
lods
int3
pop
jg
mov
pop
add
std
adc
push
imul
sub
pop
cmp
and
push
jmp
inc
add
and
pop
dec
or
mov
insl
sbb
dec
sbb
outsb
and
pop
popa
pop
adc
add
lahf
or
daa
mov
sbb
push
mov
add
push
fwait
xor
mov
jmp
popf
and
push
cmpl
out
xor
mov
imul
cmc
mov
xor
xchg
js
add
mov
pushf
adc
hlt
mov
add
loop
lods
add
shlb
or
sub
cmp
orl
das
push
insb
idiv
pop
icebp
mov
int3
paddsb
or
arpl
cltd
mov
movsb
pop
pop
or
jmp
sbbb
jb
mov
cmpsl
and
or
js
mov
cmc
push
and
push
cli
call
sbb
and
xchg
push
pop
jmp
rcl
mov
popa
insl
push
sbb
adc
addl
imul
fsubrs
insb
lock
adc
sarl
jnp
mov
add
adc
dec
pop
push
out
ret
rol
cmpsl
mov
jne
adc
and
jge
std
rolb
add
fxam
dec
and
mov
xor
sbb
add
add
lahf
out
dec
pop
xchg
jmp
adc
rolb
cmp
xor
pop
popa
cmp
lahf
push
mov
fwait
pusha
aas
push
jecxz
fnstcw
ret
aad
stos
inc
enter
pop
enter
int3
andb
pop
adcl
cmp
scas
pop
cmp
adc
xchg
jb
pusha
punpckhdq
adc
and
cs
mov
aaa
xor
push
push
sub
push
xor
insb
adc
inc
sti
rorl
mov
mov
cmp
inc
jl
rorl
jo
pusha
mov
sub
mov
lahf
insb
and
cld
mov
xor
pusha
notb
dec
xor
loopne
enter
repz
or
pushf
push
inc
mov
sarb
xchg
mov
daa
lock
xchg
sbb
add
mov
rclb
enter
aaa
ret
ficoms
ja
and
add
or
ja
repz
imul
testb
ret
sbb
in
pop
and
inc
outsb
out
sub
fsub
aaa
dec
inc
inc
mulps
add
js
imul
scas
mov
bound
mov
clc
arpl
adc
mov
push
pop
xchg
mov
lods
xchg
mov
adc
pop
jecxz
test
add
addr16
fldenv
add
fwait
dec
cld
loopne
ds
or
jmp
inc
pushf
xor
and
ret
jp
neg
fldl
fstpl
mov
or
std
mov
cwtl
jl
dec
add
test
and
fsub
mov
out
imul
or
popf
jbe
movsl
insb
les
stc
cwtl
fcoms
rol
adc
mov
andl
test
andl
cld
cld
ret
inc
cmp
clc
inc
xor
mov
cmp
xor
cmc
cs
mov
pop
clc
addb
into
lret
pop
mov
cld
pop
popa
loope
pop
dec
pop
sahf
inc
and
lock
lock
imul
ret
xchg
js
dec
mov
sub
lret
mov
roll
pop
in
sbb
mov
mov
fwait
das
add
lea
les
add
hlt
mov
lret
adc
xor
push
jbe
pop
inc
mov
cmp
add
ds
fdiv
and
add
add
push
adc
jae
adc
mov
out
shll
and
mov
and
out
push
inc
pushf
outsb
push
sbb
std
sbb
xlat
and
adc
add
push
js
ja
push
push
daa
movsl
lret
leave
mov
fisubl
sahf
add
xlat
xchg
lahf
mov
adc
push
sub
push
lods
lret
xor
inc
adc
jp
jbe
outsb
subl
rcll
cmp
xchg
jnp
pop
xchg
push
push
sub
loop
jae
loope
in
cli
and
add
call
push
push
mov
inc
push
sbb
pop
pop
stc
cmp
flds
adc
ficomps
xchg
sub
lods
paddb
push
lret
fimuls
mov
bound
pop
cmp
sub
les
pop
and
cltd
icebp
insl
or
inc
inc
sub
lods
scas
jmp
xchg
filds
lods
ljmp
dec
adc
adc
imul
add
pop
cmp
add
mov
inc
cmp
mov
mov
mov
dec
mov
sti
dec
addb
in
mov
stos
test
stos
das
jne
add
xchg
or
jae
cmp
les
xchg
out
nop
fsts
outsb
push
or
addr16
xchg
lods
mov
lcall
inc
das
loopne
xlat
cmp
insl
sbb
mov
and
jmp
aas
xor
cmp
fscale
sbb
and
xorb
inc
push
mov
cmp
ss
xor
inc
pop
sbb
push
pop
loopne
cmpsl
xor
jo
das
fincstp
imul
sub
push
cmp
mov
aas
jecxz
sbb
xor
sar
pop
es
in
jp
mov
scas
jo
icebp
lret
rcrb
inc
mov
jle
push
add
jns
jns
ja
test
mov
sbb
out
shlb
push
push
sub
add
mov
or
in
ret
addr16
and
sub
adc
lock
dec
test
push
mov
lahf
or
push
jmp
dec
cwtl
cmpsl
cltd
in
bound
sbb
mov
shll
mov
mov
divl
jmp
push
je
cld
arpl
jp
imul
and
cmp
negb
in
in
clc
add
or
or
out
pop
movsb
sub
mov
test
push
jb
dec
into
jae
mov
push
jge
fsubr
inc
xor
xlat
pop
pop
add
pop
add
or
mov
mov
xor
push
add
cltd
push
fisttpll
leave
subl
inc
mov
adc
jge
push
fistps
dec
std
push
mov
mov
sub
sbb
mov
je
ja
xor
ficoml
cmp
mov
cmp
pop
sub
inc
popaw
ret
pop
xor
lods
in
mov
add
mov
push
pusha
dec
hlt
fldcw
rcrl
push
inc
xchg
xlat
sub
xchg
mov
orb
xlat
rol
or
jecxz
mov
fiaddl
jbe
push
movsl
loopne
popa
jp
mov
in
adc
push
inc
in
cmpsb
sbb
bound
adc
jge
mov
inc
int
imul
pop
rorb
xor
jb
stos
sbbl
andb
mov
pop
jne
lock
icebp
add
inc
sbbb
mov
cmp
insl
push
sahf
mov
mov
repz
nop
repnz
dec
stc
dec
pop
cmp
xchg
dec
sub
lds
pop
push
push
ja
jno
push
icebp
adc
pop
cli
rorl
int3
imul
xchg
xchg
cmp
cld
test
lea
jg
outsb
and
cltd
and
mov
xlat
cmp
clc
test
add
bound
pop
or
lock
test
and
inc
sub
mov
dec
push
add
loopne
dec
xor
and
fwait
sbbb
scas
loope
cmp
popf
test
and
lods
mov
lds
xor
leave
and
call
les
jo
sbb
std
add
pop
and
push
cltd
jne
xlat
cwtl
jae
inc
ret
push
clc
dec
dec
or
lea
xor
jnp
or
rorb
sbb
jne
inc
cmp
stc
and
push
mov
aas
xchg
bound
rorb
data16
sar
mov
shlb
pushf
addl
sub
pop
cmpsl
loopne
or
and
scas
cs
out
wrmsr
push
inc
inc
mov
outsb
mov
dec
sbb
xor
or
xchg
outsl
and
jnp
inc
enter
inc
inc
loopne
adc
mov
dec
in
mov
mov
stos
orl
loop
cmp
ljmp
imul
dec
jns
data16
or
jecxz
xchg
outsl
cmpsl
addr16
push
mov
jecxz
scas
inc
cmp
adcb
add
pop
sarl
add
jae
ljmp
shrb
and
addr16
faddl
mov
cltd
add
mov
int
rcr
rorb
cmp
loope
inc
push
cmp
add
add
mov
mov
popa
mov
lea
sbb
dec
xor
xor
andl
xor
pop
add
push
addb
sbb
and
icebp
and
stc
add
adc
pop
sub
mov
sbb
or
pop
mov
mov
inc
ja
push
adc
ret
cli
xchg
adc
mov
add
out
jmp
into
aam
or
movhps
test
iret
add
sub
and
insl
inc
stos
shll
cmp
inc
aas
repz
add
nop
mov
imul
jecxz
je
lea
fnsave
jnp
push
xchg
insb
push
adc
mov
xchg
sahf
decl
mov
jnp
insl
push
cltd
lock
sbb
shrl
inc
sub
or
jbe
out
inc
out
dec
adc
mul
push
cld
adc
inc
das
aas
push
jns
jo
mov
mov
mov
popf
clc
in
arpl
divb
and
outsl
push
mov
scas
lods
imul
lret
gs
test
and
mov
adc
scas
and
in
pop
dec
in
dec
adc
pop
jp
movsl
push
xchg
imull
add
in
cmp
mov
push
cwtl
mov
mov
jnp
mov
dec
shll
cmp
inc
push
addb
push
adc
add
cmp
addl
cmp
push
jo
out
lcall
lcall
mov
xchg
in
push
inc
lret
rorb
jo
add
lahf
rclb
xchg
cwtl
adc
fs
mov
dec
pop
or
scas
push
inc
stc
shll
sbb
dec
lods
cmc
fisubrl
addb
popa
insl
and
jae
or
popa
inc
mov
mov
es
mov
add
add
in
lret
sbb
pop
xor
add
cmp
fmul
add
and
and
movsl
scas
and
push
jb
pop
js
clc
cmc
lds
sub
or
mov
ds
fs
adc
sub
les
lock
ret
lret
xchg
ret
mov
xor
lea
insl
rcrl
andl
daa
fidivrs
add
lds
push
mov
pusha
stos
cmp
and
outsl
jo
push
popf
rolb
movsb
imul
lea
insb
mov
cmp
shll
shrl
or
sub
dec
jp
mov
xor
add
pop
push
stc
out
xchg
cmp
inc
lahf
adc
sub
sub
mov
das
outsb
sti
ret
leave
push
and
mov
push
mov
and
popf
call
scas
sub
mull
dec
lock
fmuls
inc
jge
aam
xor
addr16
cmp
in
jns
jno
pop
leave
sub
mov
mov
out
in
pop
in
pop
jp
lods
sti
adc
pop
mov
mov
jo
nopl
dec
das
js
fldcw
sti
cmpsl
pop
aas
pop
pop
outsl
popf
fwait
sub
addr16
add
adc
lods
jg
les
sbb
mov
pop
pop
xorl
sbb
sub
lods
adc
cltd
test
in
pop
sub
push
sbb
aad
jo
loop
pop
push
push
mov
testl
adc
lcall
jno
pop
adc
loopne
mov
andl
hlt
push
ja
jnp
ret
dec
jno
xlat
mov
xchg
cmp
or
dec
sti
in
das
dec
int3
in
xor
cmp
push
add
ja
sbb
fsubrs
aad
mov
in
dec
push
arpl
enter
push
sbb
mov
cmp
es
jo
cmp
adc
hlt
sar
push
outsb
cltd
rcl
ret
les
pop
inc
pop
jmp
sbb
cmp
stc
fbld
inc
pop
outsl
cli
in
cmp
lcall
fwait
test
and
mov
or
pop
aam
scas
mov
pop
xchg
pop
lock
cwtl
mov
sub
and
mov
ret
out
cli
jmp
pop
adc
movsl
or
lea
sbb
or
mov
enter
orl
add
insl
jne
sbb
popl
mov
insl
enter
inc
cwtl
insb
jo
ss
bound
cli
dec
or
or
clc
bound
out
xchg
lret
in
xchg
les
adc
test
pop
cltd
push
lahf
jge
cmp
dec
push
cld
mov
and
inc
pop
movsl
shl
pop
pop
andb
push
ja
add
testl
jne
arpl
cmp
pushf
dec
pop
icebp
push
adc
mov
jg
cmpl
sbb
int3
jl
ret
and
cmp
push
xor
jnp
mov
adc
ja
mov
push
rcl
mov
or
pop
dec
dec
outsl
repnz
xchg
xor
fadd
lock
and
cltd
adc
ljmp
lret
and
popa
and
mov
mov
jp
sub
call
and
or
dec
mov
inc
lea
jne
jge
ljmp
inc
mov
xlat
addb
mov
leave
into
xchg
fimull
and
das
das
mov
das
jno
mov
into
mov
scas
cmp
sub
lock
outsl
jb
pop
pop
pop
lret
xor
mov
adc
fucom
and
out
ret
pop
lock
jle
push
scas
sub
and
or
in
les
jge
xor
aad
in
adc
shll
and
insb
ljmp
aas
fidivs
pop
leave
sub
add
loopne
lret
add
pop
nop
or
and
setp
cld
or
loopne
xor
sbb
mov
popf
pop
aaa
fidivs
sbb
test
inc
jp
jg
cmp
mov
int3
xor
pusha
das
lods
sbb
or
inc
pop
jl
call
scas
push
cmp
rcrl
in
mov
ja
xchg
dec
dec
sub
fwait
mov
sub
call
testb
aaa
sbb
mov
adc
ror
incl
test
rcrl
mov
jbe
mov
cmp
cli
out
jl
jmp
filds
mov
sar
and
or
pop
sbbb
dec
inc
enter
cmp
sub
jge
sbb
js
adc
ret
addps
jge
push
hlt
push
cmp
sub
jg
sbb
shrb
adc
xorb
incl
mov
daa
jne
rorl
fimuls
push
ljmp
notb
pusha
pop
loop
pushw
push
xchg
or
pop
mov
mov
push
lahf
and
pop
mov
enter
pop
mov
sub
jge
andb
jne
adcl
lret
push
and
mov
call
je
shll
mov
pop
mov
xor
sub
data16
push
push
inc
loopne
js
sar
outsb
ret
lock
sub
and
sbb
bound
pop
mov
or
inc
xchg
sub
das
adc
inc
sbb
push
cmp
jbe
sub
es
pusha
mov
imul
adcb
int
and
shr
cmpsb
sbb
add
pop
rol
and
jo
mov
popf
and
xor
and
pop
lods
and
insb
push
pop
pop
mov
enter
sub
jmp
das
es
xchg
test
cmp
imul
nop
lds
sub
clc
push
mov
cmp
push
pop
lods
mov
or
add
ja
mov
std
cmp
or
jae
cmp
movb
push
or
sbb
ja
scas
jg
popf
inc
xor
mov
mov
int
push
cld
es
out
dec
mov
dec
rcl
sbb
lret
xlat
loopne
adc
iret
jae
mov
mov
js
xchg
loopne
xlat
scas
xor
inc
mov
lds
jmp
ror
aaa
popf
fisttpl
push
adcb
testb
ja
fisttpll
xlat
ds
dec
inc
add
test
xor
movsl
push
pop
js
or
lcall
mov
cmc
xor
push
mov
pop
aam
sbb
xorb
cli
mov
lahf
int
inc
lea
adc
mov
stos
adc
mov
jne
gs
push
test
imul
in
pushf
cmp
mov
or
jo
adc
les
rclb
mov
add
push
in
mov
incb
sbb
xchg
scas
jg
cmpb
arpl
mov
push
roll
sub
pop
ja
xchg
inc
mov
push
xchg
or
adc
cwtl
mov
push
dec
cwtl
ljmp
xor
pop
inc
loop
pop
mov
add
adc
jp
xchg
pusha
aam
cmp
repnz
ret
fistpl
mov
fisubs
cs
lahf
jae
movsl
mov
add
idivl
inc
mov
sahf
out
mov
fwait
or
push
test
xchg
mov
es
ljmp
insb
jg
sub
add
push
push
cmpsb
mov
jle
movb
cmp
xor
sbb
and
jae
dec
jp
xor
jle
fistpll
daa
fcomps
aam
mov
pop
clc
push
hlt
inc
push
pop
cli
xlat
rcr
nop
pop
inc
pop
xchg
sbb
aas
sub
push
mov
outsl
mov
repnz
inc
outsb
mov
mov
test
push
ficompl
les
addl
jo
in
and
dec
rcrl
daa
pushf
push
mov
fiaddl
push
jb
in
mov
pop
fisubl
push
push
add
loope
inc
aam
stos
outsl
mov
jne
jecxz
jb
inc
stc
mov
mov
mov
pop
cltd
div
adcb
cmp
icebp
or
ds
notl
cmp
add
sbb
icebp
mov
add
andl
mov
xchg
lcall
pusha
call
jg
shr
xchg
push
icebp
je
pop
add
inc
push
fldenv
xor
and
call
cli
inc
lret
inc
fcmovnu
call
jle
test
add
cmp
jo
mov
outsb
movb
bound
mov
xchg
repnz
fisubrl
mov
loopne
pop
inc
jb
pusha
sbb
test
andb
imul
call
inc
je
cmp
dec
mov
sar
adc
sub
stc
mov
mov
xor
push
mov
pushf
cmpsl
rcll
int3
jo
loopne
nop
nop
es
mov
icebp
mov
jnp
push
push
pusha
mov
addb
fs
xchg
mov
inc
mov
nop
cmpsl
and
rcl
jne
in
dec
pop
jecxz
cs
sbb
mov
pushf
int3
fwait
mov
push
cmc
mov
adc
inc
aam
add
clc
fistps
test
popf
or
outsb
cli
inc
xchg
and
cli
sarl
xchg
ror
cmp
aad
xchg
aam
push
pop
insb
popf
outsb
cltd
or
stos
inc
mov
sub
mov
add
mov
cmp
lods
cmp
push
inc
sti
pusha
int3
xchg
shrl
cld
das
lods
rorb
stos
shr
dec
adc
lahf
es
mov
sub
dec
cld
fnstsw
inc
cmpsl
shlb
test
sbb
pop
cli
ret
pop
mov
cwtl
push
push
aad
das
hlt
loopne
push
popw
arpl
or
dec
aaa
xchg
js
and
es
mov
ffreep
dec
xor
mov
fidivrs
loop
and
testb
sbb
sbb
fcoms
xchg
mov
dec
sub
lock
lea
cli
es
mov
inc
cld
decl
loop
cli
imul
sbb
push
lds
mov
push
and
push
mov
fs
push
mov
aam
pop
add
jle
cmp
in
add
push
pusha
pusha
les
pop
into
add
test
xor
xchg
push
daa
mov
or
test
push
out
stos
inc
xchg
mov
pop
dec
loop
push
xor
adcb
test
and
and
fwait
pop
popf
push
dec
sbbb
push
mov
loopne
mov
and
jg
dec
popf
or
addb
cmpsl
popf
aas
test
xchg
loope
push
mov
fs
mov
sbb
jecxz
rcrb
pusha
mov
out
sub
jno
xchg
outsb
push
sbb
push
mov
sbb
add
sub
cs
lock
filds
rcl
pop
aaa
shll
adc
add
int3
daa
test
adc
aad
sbb
xor
push
mov
and
pusha
pop
outsb
cmp
sbb
notb
inc
or
inc
cmp
mov
cmpsl
cmp
sbb
adc
push
pop
mov
adc
or
pop
sbb
subl
mov
push
dec
jmp
adc
add
dec
lods
aaa
push
pop
in
int3
punpcklbw
mov
out
arpl
xchg
pop
pushf
mov
add
cmpsb
inc
cmp
or
fldt
pop
adc
sub
aam
inc
rcll
in
pop
pop
jp
add
clc
cmp
js
daa
and
mov
mov
jno
adc
mov
out
pop
ja
aas
scas
mov
hlt
imul
insb
pusha
call
daa
sub
nop
repz
cwtl
xchg
jae
xor
and
jmp
mov
fisubs
xor
sub
adc
add
pusha
jb
xchg
sbb
or
inc
aaa
jnp
push
add
mov
inc
adc
aaa
aad
in
push
cmpsl
adc
les
outsb
ss
push
into
shrb
push
loop
mov
mov
inc
sub
or
es
mov
adc
sbb
addl
mov
mov
das
mov
stos
xchg
or
push
les
cmp
mov
push
shl
movsl
inc
inc
dec
aaa
mov
add
push
imul
jge
sub
scas
xchg
sub
inc
shrb
and
cwtl
sub
adc
scas
add
pushf
jmp
mov
outsl
imul
pusha
or
mov
xor
stos
imul
or
inc
fsub
push
sub
pushl
cmp
cmpsb
hlt
mov
mov
pushf
aad
movsl
test
inc
cs
cmp
push
jb,pt
xlat
mov
xor
nop
jge
pop
xor
xchg
aas
shrb
repnz
std
push
cmp
push
xorl
loope
daa
mov
push
lret
mov
ret
mov
jg
out
out
out
mov
pushf
sbb
jge
mov
lahf
outsb
mov
ret
lea
test
mov
push
mov
sbb
jnp
incb
pop
push
mov
add
dec
and
push
movsb
pop
js
negl
ret
mov
xchg
repnz
jae
cmc
fwait
inc
pushf
fndisi(8087
xchg
iret
mov
jl
cld
and
imul
push
push
ja
lods
andl
addr16
pop
dec
sbb
inc
test
loop
jnp
icebp
daa
jecxz
sub
inc
in
dec
ja
testl
fiadds
rolb
xchg
xchg
js
fwait
lock
add
in
adc
or
add
cmp
mov
dec
cli
jb
pusha
loope
pop
or
xchg
cwtl
sbb
add
cmpsb
out
pop
sub
push
jp
xchg
out
aas
test
dec
rolb
rcrb
sub
in
fsubr
test
push
mov
dec
and
fsubs
loope
cmp
movsb
sbb
test
or
fstpl
ss
rclb
pop
rcr
mov
cmp
xchg
inc
popa
scas
ret
mov
mov
cltd
andl
add
pop
lea
cli
add
add
xchg
add
push
shrb
cmpsb
aam
mov
mov
js
mov
mov
xor
jno
pusha
xchg
sbb
addl
dec
sbb
cwtl
sbb
cmpsb
pusha
push
lods
sub
mov
sbb
call
popa
push
mov
adc
mov
inc
mov
dec
pop
cmp
outsb
or
or
jmp
or
and
pop
movsb
and
mov
aas
push
sti
push
insl
js
push
je
or
ret
jp
ret
jae
and
adc
push
jmp
mov
xor
or
lret
ret
dec
repnz
loop
push
or
nop
mov
sbb
cmpsl
clc
lcall
rcr
push
and
pushf
jb
xor
lock
sbb
jmp
fimuls
clc
cmp
mov
aas
ficompl
xchg
mov
lods
stc
xchg
add
jge
jns
clc
popa
arpl
adc
sub
add
or
jle
mov
js
add
mov
loopne
cmp
cli
jp
nop
mov
jo
dec
je
daa
xor
pop
lret
sar
fwait
mov
xor
pop
scas
fstl
flds
popf
cmp
and
add
imul
jae
xor
inc
mov
rolb
int
loopne
movaps
std
pop
je
shlb
out
push
push
call
popa
das
ja
push
inc
sbb
sbb
inc
mov
and
loop
outsl
pushf
cli
dec
stos
mov
cmovb
mov
jge
scas
mov
adc
sti
sub
mov
mov
mov
jg
cli
call
mov
mov
popa
jne
jne
adc
mov
mov
aaa
fs
cmp
add
aas
lret
cmp
cwtl
ret
mov
xchg
jmp
mov
mov
bound
pushf
dec
xchg
repz
pop
inc
into
lods
shl
cld
sbb
inc
inc
pop
cltd
push
filds
or
pop
aas
fiadds
inc
push
jmp
aam
gs
in
clc
mov
out
movsb
xchg
inc
jge
adc
adc
push
test
add
push
and
cwtl
daa
insb
mov
push
mov
and
push
hlt
filds
mov
xchg
sub
sbb
jmp
ds
roll
jmp
mov
cmpsb
aas
mov
lahf
insb
or
add
orl
ljmp
pusha
cmp
inc
frstor
dec
mov
jle
jle
addb
test
shl
bound
mov
pop
in
addb
push
lods
xor
cmp
fildl
push
mov
push
out
lods
test
push
adc
cmpsb
subb
addb
outsb
pop
dec
mov
ficoms
ljmp
jo
cmp
in
mov
imul
pop
cmpsb
push
jo
add
push
jge
push
cmp
sbb
and
clc
sbb
movsl
mov
jp
pop
inc
aaa
jle
ss
inc
subb
adc
fucomp
jle
add
add
repz
xchg
jl
mov
push
ds
pop
test
arpl
jb
outsb
ficoml
inc
jbe
jl
jle
lahf
rorb
mov
and
rcll
push
add
jbe
out
loop
add
cld
out
js
popa
cmp
cli
pop
fcoms
lea
and
clc
mov
jle
mov
rcl
adc
cs
in
mov
xchg
and
out
dec
rolb
hlt
mov
cmpsl
mov
daa
mov
cltd
pop
js
les
add
cmpsb
and
xchg
lods
cmp
pop
add
outsb
test
inc
hlt
je
in
xor
push
test
inc
xchg
add
and
sbb
ret
inc
insl
mov
loope
sub
dec
clc
or
dec
pushf
sbb
xchg
xor
inc
push
add
mov
pop
lea
jle
mov
sbb
cs
inc
inc
cmp
add
inc
xchg
mov
out
mov
push
icebp
pop
xor
cmp
mov
das
mov
sbb
add
adcl
cmp
test
dec
jae
dec
mov
mov
push
jmp
jno
fsubp
inc
and
outsl
shlb
push
hlt
pop
xor
pop
add
pop
cmp
and
call
pushfw
hlt
outsl
fstpl
leave
push
adc
mov
pop
enter
push
push
push
cs
jmp
int3
xorb
test
shll
test
or
and
test
adc
mov
ret
mov
mov
or
and
dec
notl
rcll
in
insl
js
sbb
pop
loope
sahf
add
rcr
pop
aam
add
add
sbb
add
mov
test
cld
push
icebp
xor
adcl
aaa
dec
dec
sbb
adc
enter
aaa
push
pushf
sub
outsb
pushf
sub
bound
pusha
adc
je
mov
call
cmp
in
xor
cmp
and
inc
or
inc
sbb
lret
cld
scas
faddl
movsb
ja
adc
xorb
mov
xor
mov
jmp
adc
pop
xor
sub
shl
lea
jno
mov
clc
jns
das
push
fstpt
mov
arpl
cmpsb
pop
jle
dec
xchg
ss
and
insb
xor
sbb
fimuls
or
cmp
inc
push
cmp
iret
out
sub
pop
cmpsl
sbb
std
jg
insb
xchg
dec
adc
loop
dec
mov
popf
xor
adc
inc
loope
xchg
mov
add
dec
repz
int3
or
jne
or
test
mov
shlb
ss
xor
dec
add
mov
andl
xorl
sbb
clc
push
add
pop
mov
call
sti
rol
or
mov
adc
mov
sarl
add
xchg
imulb
orl
sub
je
incl
pop
arpl
mov
sbb
je
pop
pcmpeqb
lock
mov
sub
or
add
push
lock
cmpb
add
or
cmc
and
mov
shlb
sbb
mov
fwait
add
pusha
pcmpgtb
xor
cmp
scas
xor
je
cmp
adc
data16
sub
jo
lds
sbb
and
pop
push
outsb
loope
and
icebp
mov
jl
inc
inc
cmp
sub
cli
dec
sub
fimull
lea
mov
mov
imul
rcrb
scas
xchg
xchg
insb
inc
xchg
dec
mov
lcall
mov
ss
sbb
iret
loopne
mov
jno
int3
adc
rclb
dec
pop
inc
mov
push
aam
xchg
pop
mov
ja
add
cmpsl
xchg
in
inc
test
stos
cmp
lahf
mov
pusha
jmp
call
mov
push
dec
push
aam
pop
mov
and
movsb
fiaddl
or
sbb
cmp
call
sahf
inc
jmp
xchg
aad
aaa
sub
add
fs
xorl
std
test
sbb
xor
jnp
mov
enter
sbb
adc
cmp
dec
jmp
sub
clc
dec
pop
clc
icebp
xor
lahf
popa
mov
cmp
adc
dec
shl
xchg
sahf
cmp
xchg
mov
arpl
mov
xchg
jne
pop
add
or
out
cs
mov
jmp
js
stc
test
leave
xchg
scas
jmp
scas
mov
popf
and
jmp
adc
popa
and
add
ja
cli
call
mov
inc
pop
mov
outsl
add
lods
movsb
dec
or
or
hlt
out
cmp
arpl
cmp
ja
mov
pop
jo
outsb
incb
push
loope
or
and
pop
movsl
cmp
adc
fcomi
sbb
outsl
pop
dec
inc
js
fs
pop
add
and
lret
or
jg
sahf
pop
inc
jp
jp
es
lock
pop
shll
adc
inc
fildll
fucom
mov
stos
push
fs
pshufw
xlat
cmpsb
call
sbb
xor
mov
fwait
lahf
icebp
loopne
out
popa
pop
aam
lock
push
or
add
jo
cli
stos
roll
cmp
ljmp
inc
add
mov
jne
pop
lock
jnp
mov
or
push
sti
dec
lret
adc
fcomps
call
iret
xorb
or
xor
and
lret
mov
and
lods
xchg
insb
add
sub
add
add
mov
mov
sahf
push
add
idiv
cld
mov
add
lcall
push
push
enter
fldcw
jo
dec
cmpsb
fnsave
ss
pop
dec
mov
or
lds
or
icebp
sbb
mov
popa
xchg
roll
push
push
js
dec
les
mov
sbb
test
mov
test
adc
and
rcl
jbe
les
jl
inc
mov
sbb
sbb
push
fisubs
push
addr16
push
push
jne
dec
xor
jae
dec
sti
dec
jns
adcl
mov
pop
push
pop
loopne
call
add
stos
push
push
add
ret
inc
mov
cmpsb
xor
add
fndisi(8087
test
add
ds
inc
mov
mov
push
out
clc
out
mov
sub
and
pop
popa
std
inc
jmp
fiadds
mov
pusha
test
push
and
sbb
add
inc
jo
add
idiv
add
hlt
jbe
mov
pusha
js
and
andl
loop
and
mov
jnp
je
mov
scas
jns
mov
cmpsb
andb
adc
ljmp
ljmp
divl
push
arpl
pop
cmp
mov
loop
inc
ljmp
or
or
sbb
adc
mov
test
lock
push
mov
mov
rorb
testl
or
push
add
in
jnp
pop
iret
inc
cmp
mov
in
and
sbb
sbb
cmp
cmp
call
or
push
ds
and
jecxz
adc
mov
out
xchg
mov
push
ja
icebp
jae
je
and
insl
mov
push
mov
mov
lods
xlat
ljmp
aaa
push
jno
mov
xchg
dec
jns
adc
imul
mov
fdivl
call
jmp
loopne
ret
jl
ds
pop
test
ret
mov
sbb
adc
insl
mov
js
shrb
scas
push
call
push
push
shrl
hlt
rcrl
pusha
daa
aas
mov
xorb
in
inc
add
mov
popl
int3
xor
je
dec
mov
inc
iret
mov
data16
mov
test
mov
sbbb
pushf
mov
add
scas
movsl
inc
sub
fmull
clc
mov
inc
arpl
pop
pusha
aaa
cmc
movsb
mov
mov
jo
gs
fmuls
jmp
and
adc
mov
cmp
loop
iret
lods
add
sbb
pop
add
jno
push
nop
cmp
mov
test
cmc
jo
xor
lret
test
loopne
or
pusha
jbe
addb
and
stos
cmp
add
mov
cwtl
les
sub
movsl
mov
mov
cmp
or
in
push
scas
add
lods
pop
pop
adcb
push
arpl
jp
push
sahf
push
jnp
or
rorb
lock
sbb
adc
mov
fdivs
and
pop
adc
push
ljmp
mov
add
mov
aaa
lods
pushf
jmp
pop
cwtl
fs
push
pop
outsb
enter
loopne
fldl
add
and
sbb
mov
sub
push
push
bound
pushf
fldt
pop
or
pop
jle
lock
sbb
cmpsl
fmul
popa
iret
loopne
mov
jmp
jp
movsl
and
add
mov
lock
fldenv
testb
jmp
es
shl
or
addb
imul
xchg
imul
nop
shlb
loope
ret
pusha
cmp
sub
cmp
and
sbb
rclb
dec
push
mov
cmpxchg
inc
xor
lock
and
jnp
pusha
xchg
inc
push
int
popa
mov
out
stos
inc
ljmp
arpl
mov
sub
sbb
or
inc
aas
pop
insb
inc
popf
out
adcl
punpckldq
or
loop
or
dec
sar
pop
out
hlt
imul
sub
cmp
lock
jno
xchg
aad
or
das
and
rolb
mov
aam
pop
stos
and
cmp
ja
jl
loopne
loope
pusha
and
inc
mov
or
out
inc
push
lock
out
jo
repz
cmp
filds
out
scas
cli
and
and
push
cs
xchg
mov
add
les
loope
or
pop
pop
ret
ja
push
or
psllw
dec
lods
jecxz
fsubr
rorb
add
xchg
out
mov
and
lret
popa
movsb
dec
shlb
aaa
or
pushl
add
jecxz
mov
out
or
out
cmp
xchg
sbb
movsb
xchg
pop
imul
add
pop
jae
lock
fs
cmpl
cmp
subb
inc
cmpsl
pop
mov
push
ds
std
jmp
pop
pop
cmp
xor
mov
ds
movsl
add
sub
inc
add
gs
iret
std
fldt
push
orl
sbb
nop
mov
push
add
data16
mov
fs
add
lods
mov
adc
loope
jae
push
and
mov
or
sbb
scas
jp
sub
rorb
add
mov
dec
inc
arpl
lods
jmp
dec
adc
jnp
adc
int3
and
add
add
sub
lods
mov
loopne
xchg
xchg
xchg
add
xchg
sub
dec
fisubs
sahf
fcmovbe
ret
fs
sub
or
int
mov
aam
jae
loop
mov
loope
pusha
shl
rclb
add
loope
scas
push
add
jge
mov
rol
dec
ret
mov
cmp
sub
adc
jb
testl
enter
dec
push
pop
mov
mov
pusha
arpl
jp
icebp
or
or
jge
leave
iret
inc
sbb
mov
cli
sub
mov
int3
jle
push
xor
xor
pop
out
and
test
rolb
mov
loopne,pt
or
cmp
mov
adc
cmp
sbbl
aaa
fmull
lods
xor
inc
das
mov
dec
mov
adc
sub
xor
and
push
sub
ss
ret
cmp
hlt
das
arpl
jg
push
jmp
outsb
rorb
lret
jo
push
js
mov
sbb
sub
movb
jmp
dec
icebp
loop
sub
sub
das
jne
or
icebp
pop
push
cmc
inc
jb
push
inc
clc
call
mov
je
movsb
ljmp
push
jo
in
int3
test
add
rorb
adc
add
push
scas
mov
lahf
jb
pop
xor
ret
inc
inc
cmpsb
jno
fs
call
pop
pop
movsb
call
mov
icebp
scas
insb
sbb
shl
push
push
push
cmp
movsl
daa
push
cmpsl
aas
rolb
and
xchg
data16
adc
out
popa
push
mov
fstps
push
test
xchg
lcall
loope
loopne
adc
inc
enter
pop
adc
xor
dec
mov
mov
std
dec
or
jmp
loope
jge
aam
arpl
adc
rclb
xor
mov
aas
leave
lock
adc
mov
xor
data16
mov
cmp
pop
scas
sarb
rcl
cmp
les
push
or
pop
sub
jp
pop
call
lds
xchg
mov
xchg
mov
add
mov
mov
adc
jae
jge
add
icebp
pop
lods
in
or
mov
fisttps
comiss
jo
aas
xchg
adc
pop
mov
cld
xor
aam
pop
test
into
test
mov
pop
flds
mov
lret
add
jbe
mov
cmpsl
push
shrl
sahf
cli
xor
or
test
int
ja
and
adc
add
add
pop
adc
lret
xchg
movl
mov
lea
sub
loope
loope
dec
mov
inc
sub
mov
fwait
movsl
into
scas
xlat
dec
jp
jle
dec
or
fiadds
insl
lea
inc
js
mov
adcb
fs
xor
mov
clc
dec
lods
pop
mov
mov
adcb
fsubrl
push
dec
outsb
hlt
sbb
mov
enter
outsl
sub
sbb
xor
pop
cmp
dec
xor
mov
add
adc
sar
sahf
push
out
ret
mov
ljmp
ljmp
ljmp
push
testb
mov
mov
cmpsb
imul
inc
mov
fcomps
dec
outsb
in
fs
popa
adc
adc
sub
mov
ds
jl
xor
mov
pop
fs
mov
adc
mov
pop
negb
inc
pop
cwtl
ljmp
xchg
in
mov
push
push
cmpsl
mov
or
out
repnz
pushf
or
xlat
fistps
sbb
or
mov
test
std
mov
push
stos
add
jecxz
mov
and
ficompl
and
lock
cmpb
push
lods
sbb
leave
stos
gs
fst
mov
aam
pushf
outsb
add
sub
and
inc
mov
vgetmantps
rcrl
mov
fcoms
mov
mov
cld
mov
mov
mov
fisubrl
int
rol
ja
sub
xchg
clc
repz
lret
test
pop
in
adc
shl
add
stc
into
fdivrl
jp
shlb
loope
xor
inc
xor
std
and
inc
lods
mov
jbe
or
loopne
mov
cmp
add
xchg
hlt
jl
lret
out
mov
push
nop
push
cmc
or
repz
dec
inc
mov
loop
xor
rolb
loop
mov
iret
mov
or
cmp
scas
lahf
nop
pop
aaa
add
xor
arpl
ds
popa
add
ss
mov
push
fidivrs
mov
imul
push
xor
jns
xchg
call
lcall
lods
or
sub
aaa
mov
arpl
xor
mov
pushf
inc
cmp
sbb
inc
or
dec
inc
xchg
jb
test
inc
mov
xor
cwtl
sti
sbb
cld
cmpl
push
and
orl
outsb
or
adc
je
stc
push
add
shlb
push
movb
es
cmc
daa
mov
fdivr
clc
jmp
sti
pop
adc
mov
mov
popf
orb
js
mov
cwtl
fwait
pusha
jg
std
inc
mov
sub
icebp
adc
add
test
add
mov
push
and
sbb
mov
xor
xorl
cltd
out
push
jb
xlat
js
xor
add
call
jl
movsb
int3
je
fdivrl
popa
orb
std
mov
adc
dec
call
movsl
frstor
stos
mov
cmc
or
xchg
ss
stos
test
add
xchg
negb
mov
dec
or
xor
xor
pop
rcrb
mov
mov
lock
push
addb
cmpl
add
add
lods
xchg
push
add
dec
mov
jl
aaa
jge
jle
or
mov
popa
popa
jo
xchg
pushf
movsb
mov
in
pusha
mov
fldl
stos
inc
arpl
jge
push
sbb
mov
stos
pop
shl
push
vsubsd
mov
sbb
add
mov
mov
lcall
add
mov
dec
dec
mov
ljmp
loop
in
loopne
test
push
stos
adc
sahf
dec
adc
jp
icebp
ljmp
jns
push
nop
sbb
jmp
mov
adc
ret
mov
out
sub
dec
out
divl
lds
shll
xor
mov
lds
in
and
aam
cmp
jnp
sbb
sbb
mov
shlb
mov
aaa
mov
jo
out
aad
cmp
test
scas
sahf
cmp
add
jg
xchg
scas
sahf
add
push
scas
xlat
aaa
xchg
outsb
push
std
push
push
inc
jbe
cmp
ss
outsl
cmpl
jg
push
outsb
adc
scas
aas
mov
cmp
xor
in
in
in
push
lcall
cmc
fneni(8087
test
cmp
dec
push
subb
decl
sar
addl
pusha
xor
mov
pop
cmp
ret
or
jmp
jne
lds
scas
cltd
add
pop
xorl
movsl
dec
inc
or
sbb
pop
xchg
mov
pop
outsl
dec
clc
loope
lcall
dec
adc
bound
cld
xchg
mov
aam
xor
int
push
add
inc
push
scas
or
xchg
xor
inc
cwtl
divb
mov
pop
iret
aaa
jbe
fiadds
add
roll
xchg
shrb
ret
mov
add
gs
pop
shlb
cmp
mov
push
test
call
push
mov
jns
cltd
mov
pushl
test
add
add
out
lds
andl
add
adc
rclb
jnp
jge
dec
scas
stos
dec
push
xor
mov
shlb
add
add
mov
dec
mov
lods
loop
pusha
inc
cli
cmpsl
stos
mov
orb
shr
jnp
mov
pop
cmp
movsb
rorb
mov
int3
cltd
ds
adcb
outsb
aam
inc
mov
inc
mov
jbe
add
addr16
ljmp
or
das
popf
adc
jb
aam
add
loope
in
mov
jle
hlt
push
jg
repz
adc
popa
and
fwait
dec
xchg
push
lods
lock
es
lahf
lcall
insl
xchg
adc
clc
gs
in
js
jno
cwtl
sub
fisttpl
pop
xor
and
test
aaa
std
or
adc
out
aas
sub
xchg
adc
lods
jb
push
popf
in
rcl
in
mov
push
cmpl
loop
and
add
nop
adc
inc
sub
add
mov
sbb
scas
jecxz
inc
inc
xchg
fildll
mov
adc
mov
leave
aaa
xchg
mov
pop
mov
int
mov
rolb
insb
inc
sub
cmp
xor
dec
push
fiadds
xchg
loop
rorl
mov
or
mov
push
cmc
adc
push
aad
mov
leave
cmp
xor
or
mov
pop
xchg
rorl
aam
lods
mov
push
mov
bound
in
mov
ljmp
subb
call
out
movsl
aam
ljmp
dec
pop
jno
ja
aaa
out
add
pop
div
sub
insl
call
pushf
inc
push
call
jp
inc
sbb
out
and
aas
cmc
loopne
push
pop
loop
scas
pop
popf
jno
xor
imull
ljmp
jnp
mov
mov
pushf
xchg
icebp
or
fdivr
jne
pop
mov
movsb
outsl
cmp
mov
jp
add
stc
sti
and
cmpb
xor
push
addl
fcoml
jbe
mov
dec
fnsave
lock
cltd
mul
jg
fcoms
sbb
jecxz
pop
inc
sbb
nop
mov
jb
cmp
sub
movsl
xchg
ja
xchg
popa
imul
outsb
add
testl
xchg
pop
push
push
mov
pop
or
repz
daa
mov
shlb
adc
rolb
lods
rcrl
cmp
pop
shr
adc
loopne
jge
or
into
lods
xor
jbe
sbb
insb
xchg
push
shlb
imul
ss
fsubl
test
inc
push
sbb
bound
outsb
int3
sbb
aas
pushf
in
lea
lea
jmp
rcrb
jae
je
pop
cmp
dec
jp
mov
lret
push
je
jmp
sub
mov
pop
scas
inc
out
nop
sbb
bound
lret
ljmp
push
inc
cwtl
cmp
push
pop
sub
push
jle
ljmp
mov
jl
sub
dec
insb
and
jmp
fimull
jns
ds
dec
xchg
push
test
pop
cmp
xor
xchg
lahf
je
loopne
or
xlat
insb
mov
cmpb
cli
push
adc
rcrb
xor
clc
scas
sub
and
out
test
mov
jo
fidivs
call
add
xor
xor
pop
inc
das
call
or
jle
mov
hlt
movsl
xchg
pop
add
ficomps
jecxz
pop
mov
mov
xor
lret
paddd
js
xor
push
test
repnz
pop
mov
es
inc
mov
rolb
push
inc
push
loope
stos
lock
cld
dec
sbbb
xchg
mov
cmp
push
xor
xchg
push
ds
out
repnz
jecxz
je
out
sbb
sti
ss
lea
mov
loope
and
femms
lock
jecxz
add
pop
jp
cli
stos
add
cmp
call
pop
lods
cmp
cmc
mov
jno
sbb
pop
pop
lock
jle
clc
fwait
in
ffreep
or
and
adc
ret
mov
ret
xor
push
enter
xchg
and
lods
call
and
je
add
adc
scas
fcomp
jnp
xchg
or
leave
lds
cli
or
dec
mov
sub
out
mov
fwait
xor
lds
movzbl
sbb
add
sub
aam
mov
mov
ja
je
sub
in
lret
ljmp
mov
sbb
mov
call
dec
mov
mov
adc
jbe
sbb
xor
leave
dec
scas
xchg
out
add
push
jg
popf
mov
or
stos
lock
stos
ljmp
call
lods
mov
sub
mov
xchg
scas
fs
in
iret
add
fcompl
leave
and
jnp
loopne
push
stos
pusha
jmp
pop
xor
push
xchg
jb
nop
fidivrl
push
je
test
mov
sub
jle
or
mov
jg
cs
jle
mov
enter
fiaddl
jl
shlb
icebp
cmp
test
sbb
push
push
cmpb
mov
into
dec
movsb
lahf
jne
adc
out
imul
rorb
inc
cs
pushf
push
fcmovne
aaa
and
into
add
jl
fadd
xchg
xor
jae
dec
aad
leave
xchg
cmpsb
sub
or
jo
sbb
enter
andl
add
mov
ss
add
mov
jae
lcall
fwait
mov
xor
cmc
sub
cmp
subb
jg
out
add
cmc
or
pusha
jl
je
loope
adc
sarb
mov
pop
sbb
mov
mov
or
out
faddl
out
out
pusha
mov
or
and
cmpsb
enter
ret
nop
pushf
inc
mov
sahf
push
scas
clc
fistpll
xor
stos
adc
leave
mov
push
push
nop
sbb
jge
pop
sbb
pop
addl
mov
cmc
mov
dec
rolb
icebp
dec
push
sbb
loopne
stos
call
lret
add
mov
repz
mov
aad
cmp
popa
and
push
adc
add
jbe
outsb
lock
mov
add
roll
insl
cmpsl
sahf
fs
cmp
std
xor
or
ret
inc
lret
aad
add
jb
repnz
test
ljmp
xorb
or
jp
and
test
in
inc
sbb
jbe
sahf
fidivrl
mov
cmp
add
lods
sbb
ret
pop
pop
imul
cmovbe
pextrw
add
lds
add
icebp
stc
sub
xchg
int3
mov
testb
inc
inc
inc
int3
sti
das
gs
movsl
daa
enter
and
fdivl
and
push
ljmp
mov
push
xchg
and
test
inc
out
cld
push
cmp
test
es
lret
loopne
stos
and
fdivl
xchg
test
cmp
fdivs
loopne
sbb
sti
or
aaa
ret
adc
aam
add
add
mov
dec
mov
test
fnstenv
pushf
and
xchg
and
stos
test
mov
cmc
pop
add
es
shrb
add
push
and
daa
jmp
add
out
clc
sbb
dec
scas
pop
sub
sarl
sbb
or
inc
inc
test
loopne
and
rclb
or
fwait
test
xchg
fstpt
out
mov
adc
xor
mov
int3
pushf
push
or
push
mov
adc
fnstsw
es
or
lods
imul
icebp
shll
ret
dec
loop
inc
cmpb
lcall
xchg
or
movl
xchg
fisttps
unpcklps
push
ret
mov
add
pop
jb
nop
and
jmp
push
test
xor
les
and
dec
fidivrl
sbbl
insb
into
sub
js
ret
into
cmpsb
in
pusha
xor
enter
inc
pop
std
loopne
je
dec
out
pop
nop
out
push
aad
or
push
inc
out
add
mov
es
sbb
adc
or
lds
rcrl
dec
and
lret
mov
adc
adc
xor
mov
icebp
out
cmp
fucom
sbb
outsb
in
imul
pop
mov
rcr
test
idiv
aaa
mov
mov
add
std
loopne
in
and
movsb
rorl
stos
sub
xor
sbb
mov
popf
jecxz
insb
sbb
int
pop
cwtl
inc
jne
jns
pop
jb
or
ss
jne
cli
ret
inc
mov
mov
jg
add
mov
and
inc
lahf
dec
sub
es
rol
xlat
inc
outsl
stos
insl
or
mov
and
pop
dec
adc
shr
and
pop
or
lds
ds
and
pop
cmp
xchg
in
xchg
adc
mov
xchg
xchg
loope
jo
push
xor
outsb
adc
scas
call
inc
stc
or
cmp
cld
incb
jg
add
incb
pop
call
imul
daa
mov
push
cwtl
push
ds
lcall
iret
add
pop
sbb
mov
fiaddl
cs
jecxz
lret
lahf
or
lahf
scas
push
rcrb
adc
xchg
ficomps
addb
fs
mov
repnz
loopne
inc
daa
mov
js
imul
inc
xchg
lods
adc
adc
fadds
lcall
pusha
mov
fcompl
dec
jo
stos
adc
pop
sub
sub
xor
push
nop
add
xor
mov
adc
jl
jle
pop
sub
cwtl
mov
and
cwtl
insb
inc
adc
std
xor
fldenv
push
push
pop
data16
sub
es
push
xor
or
jp
push
enter
inc
jge
jle
and
sarb
cmp
mov
jb
lock
add
cmpb
mov
pop
inc
add
pusha
pop
push
es
jns
mov
ret
mov
push
outsb
enter
jo
es
push
test
xchg
inc
cmpsb
popa
loopne
pushf
outsl
test
dec
dec
lea
repnz
stos
push
fdiv
inc
stos
scas
daa
aam
cmp
push
lods
lock
xchg
mov
lahf
or
loopne
hlt
ja
xor
enter
out
adc
and
js
inc
push
push
outsl
add
sbb
call
dec
inc
dec
pop
ret
fwait
mov
data16
das
dec
xlat
shlb
cltd
repnz
arpl
and
add
push
rcrb
fldt
push
xor
and
xchg
adc
lock
dec
lcall
and
mov
cld
shlb
jl
sbb
push
sbb
aaa
int3
cmpsb
sub
cmpsl
lods
lahf
inc
jno
adc
sbb
mov
ss
dec
dec
push
add
addr16
setnp
add
imul
outsl
out
lock
stc
push
add
lret
ja
sti
adc
inc
ror
fnclex
adc
mov
xorl
dec
jmp
sbb
into
fidivl
sbb
mov
adcb
dec
insb
inc
ret
clc
mov
pop
in
cli
or
in
test
sbbb
outsb
inc
fisttpll
mov
leave
cld
stos
dec
cli
out
cmpsb
pop
lock
mov
add
mov
mov
sbb
xchg
lods
daa
fildll
xor
mov
test
cmp
dec
cld
mov
pop
jg
xchg
fldl
lock
fimuls
sbb
fadd
fsubr
outsl
mov
mov
pop
arpl
xor
rolb
mov
js
push
std
jge
ret
xchg
inc
cmp
call
inc
fcmovnbe
pushf
sbb
cmp
jmp
mov
and
loopne
movsb
push
dec
push
div
mov
jne
repz
loop
hlt
inc
pop
jmp
cmc
jmp
mov
xorl
mov
cld
out
cmp
lahf
or
mov
xchg
add
shl
mov
std
or
cltd
shrb
mov
pop
or
adc
addr16
pop
xchg
push
fmuls
clc
jno
fisubl
lar
jle
and
nop
sbb
sbbl
dec
or
adc
lcall
mov
jl
jmp
inc
out
xor
xchg
and
pop
rcrl
fsubrs
dec
mov
inc
lock
xor
xor
lret
adc
or
sbbl
jnp
ret
jo
pop
hlt
in
or
push
in
movsl
xchg
sbbl
jno
loop
das
mov
dec
sub
sub
pop
daa
jo
mov
mov
jnp
clc
add
mov
pop
xchg
adc
dec
mov
movsb
add
push
les
adc
jmp
adc
cmp
adc
adc
inc
xchg
fwait
xchg
lock
lock
ss
ret
rolb
aas
xor
ljmp
subb
sub
test
xchg
jae
or
call
fsubr
orl
inc
ljmp
shrl
mov
aad
clc
sub
and
add
and
adc
ror
int
test
mov
pop
mov
int3
mov
out
nop
push
sahf
aam
mov
mov
add
popa
ljmp
fdivs
fmull
xor
xor
cmp
in
movsb
inc
xchg
dec
aad
cmp
jmp
or
decb
adc
and
pop
dec
push
add
test
sub
daa
or
jl
add
shll
xor
dec
ljmp
fnstcw
lods
add
add
jl
mov
jbe
out
jae
cmpb
inc
pop
dec
ljmp
fcmove
add
mov
jp
std
test
shr
add
mov
stc
sub
pusha
push
dec
popa
push
or
sbb
fucomip
adc
js
pop
frstor
ret
hlt
jno
and
sbb
cmpsb
movsl
jbe
ret
push
rol
cmp
add
push
ss
jbe
cli
inc
mov
mov
push
inc
cld
sub
shll
test
mov
cmp
outsl
cs
sub
cmp
push
inc
gs
pop
cmp
or
insb
es
lods
and
jle
mul
xlat
mov
mov
aad
lss
xchg
jle
push
stos
pusha
testl
xchg
and
movsb
aam
arpl
cld
cwtl
pop
mov
out
xchg
push
jbe
sub
jno
mov
movsl
ds
js
lahf
add
pop
addr16
decb
sub
inc
in
nop
int3
popa
stos
gs
sar
adc
jmp
mov
js
out
and
add
cmp
fadds
inc
lds
xchg
mov
fdivrs
ret
xor
jl
ret
dec
jg
dec
or
push
js
mov
stos
or
mov
movsb
orb
addr16
call
pop
sbb
cmpsb
lds
xchg
je
inc
mov
cld
mov
xchg
inc
add
lds
rorb
or
aas
lock
pop
mov
xchg
pushf
mov
lods
daa
cmp
pop
mov
clc
aas
mov
mov
cmp
fmul
cmc
mov
and
and
jmp
sti
inc
out
xchg
add
pop
mov
pop
pop
xchg
mov
sbb
in
adc
sub
mov
test
fwait
or
pop
int3
add
out
nop
cmp
movsb
xchg
mov
xor
in
and
push
mov
clc
inc
out
xchg
add
or
push
inc
fdivl
push
pusha
cmp
or
pop
sahf
incb
or
repz
jecxz
mov
aas
mov
push
insb
stc
fcmovbe
les
ret
push
bnd
mov
lock
repz
outsb
sub
push
inc
pop
fdivrs
pusha
sub
pop
nop
add
out
pop
jmp
dec
or
ret
add
push
loopne
cld
xor
mov
or
mov
xchg
jo
leave
pop
or
push
imul
mov
je
getsec
jbe
push
hlt
push
out
clc
inc
lcall
loope
xorb
pop
insb
cld
cld
add
adc
loope
cmp
ja
jne
out
outsb
ljmp
std
sbb
mov
xchg
push
gs
xchg
sbb
xor
jge
mov
pop
cli
pusha
jns
add
add
ficoml
loopne
mov
sub
mov
cwtl
inc
lahf
sub
aas
adc
arpl
or
popf
mov
stos
inc
adcl
test
lods
or
push
pop
popf
mov
movsb
je
push
int
pop
sarl
sbb
popl
mov
js
ds
pop
mov
cs
push
or
dec
jbe
stos
cmc
inc
xor
mov
pxor
lods
push
sub
and
iret
sub
add
push
lock
sub
push
and
pusha
lock
xor
xor
push
test
cwtl
shl
jle
mov
adc
push
inc
stos
rcr
cmp
and
call
mov
orl
pop
push
aas
sahf
sub
cmp
push
rclb
loop
loopne
and
loope
push
mov
lcall
les
inc
lds
push
mov
mov
mov
mov
push
gs
sbb
sub
push
pop
fstps
jecxz
jecxz
mov
sahf
pushf
lcall
mov
pusha
leave
xor
add
lcall
enter
dec
outsl
imul
test
aas
ret
push
data16
sbb
cmpsl
sub
insb
cltd
inc
shll
out
push
cwtl
xchg
sbb
add
fimuls
int
inc
dec
imul
out
ljmp
outsl
stc
into
jl
popl
jne
mov
cmp
sbb
aad
mov
rclb
in
pop
mov
shlb
orb
pop
xchg
jae
pop
mov
leave
out
inc
and
fnstcw
lods
popa
cmp
or
andl
add
js
pusha
and
push
mov
and
dec
mov
das
mov
rcll
jo
mov
aas
aaa
stos
mov
fmuls
or
jmp
aad
inc
dec
xchg
and
sti
cmc
and
lods
lds
sbb
rorb
pmullw
or
cmp
lock
mov
popa
add
inc
xor
scas
mov
jge
xor
add
jge
lods
fstpl
cs
xor
add
push
into
inc
sbb
mov
test
bnd
cld
xor
cmp
push
addb
stos
dec
out
lock
mov
cs
outsb
jmp
or
adc
and
lcall
scas
out
adcb
push
outsl
mov
cmp
repz
inc
push
xor
aam
shlb
in
pop
std
pop
das
daa
movsl
or
add
mov
pop
hlt
cmp
pushf
fdivr
push
pushf
inc
push
scas
sbb
nop
jle
rcrb
push
push
add
aad
repnz
scas
mov
mov
push
sbbl
popa
rcll
add
add
cmpl
repz
push
jg
inc
jmp
mov
sahf
mov
jne
leave
mov
pop
ret
loop
xchg
mov
fimull
adc
mov
movsl
bound
cmc
adc
mov
push
bound
adc
cmp
adcb
mov
xor
shll
push
sbb
rol
xchg
rcrl
push
xchg
xchg
in
out
int
cmpsl
xor
push
cwtl
test
add
or
push
lcall
adc
cmp
fwait
dec
or
test
and
pop
jmp
iret
jge
es
jo
jo
jg
adc
push
push
repz
xor
add
push
cmp
mov
sti
xchg
lds
sbb
xor
test
sub
adc
rclb
ret
addr16
popa
aas
sub
addb
inc
int3
mov
sub
pop
addb
or
pusha
in
jne
sub
xchg
cmp
add
inc
jbe
mov
sbb
lahf
cld
inc
xchg
mov
xchg
ror
xchg
das
jmp
xchg
iret
aas
sub
outsb
and
or
and
xchg
jecxz
xchg
pcmpeqd
and
lret
adc
int3
std
imul
dec
test
scas
mov
jo
hlt
mov
lea
rorl
lods
pop
test
mov
adc
cmp
movsl
mov
in
ja
mov
and
sub
or
in
jno
add
sub
inc
cmpb
shrb
arpl
insl
or
loopne
imul
adc
aaa
into
idivl
cmp
fldenv
cwtl
and
imul
popl
imul
pop
ljmp
in
int
nop
jp
fwait
aas
call
xchg
jns
xlat
push
cmp
mov
das
stc
and
lds
mov
test
mov
push
cwtl
imul
fdivrp
pop
and
lock
add
test
in
loope
dec
or
scas
add
adc
push
fcmovnbe
lds
adc
push
jmp
or
inc
sub
cwtl
lret
into
js
jo
cwtl
mov
pop
adc
mov
xor
sub
xorl
stos
push
je
xchg
mov
mov
mov
push
in
sbbb
stc
or
dec
lods
mov
dec
ja
add
mov
leave
xchg
and
stc
sbb
sub
jecxz
ja
add
roll
mov
adc
leave
mov
inc
push
pop
movsb
mov
rcrl
loope
repnz
jae
sub
cltd
sbb
xchg
mov
jb
xor
push
orb
sbb
dec
jg
fsub
int3
pop
adc
and
insl
jecxz
xchg
jo
cmp
push
add
daa
sbb
cmp
add
fs
and
fistpl
jno
hlt
test
add
mov
ror
and
insl
cli
xor
sbb
pop
and
aad
fildl
xchg
ja
iret
lcall
imul
push
lahf
test
loope
xor
leave
sbb
popa
adc
jno
call
sub
or
sub
enter
jge
fisttpl
icebp
mov
ror
pop
call
imul
pop
xor
mov
sub
mov
sahf
movsb
repnz
int
out
push
inc
ret
imul
out
movsb
xchg
nop
push
sbb
cmp
mov
xor
jle
stos
cld
sub
sbb
fcoms
pop
sbb
movntps
push
ja
aaa
scas
pop
push
cmp
stc
incb
jp
call
outsl
fcoms
flds
add
sbb
gs
cs
mov
or
mov
loope
loope
les
and
pop
in
loope
cld
add
pop
fisttpl
sbb
add
pop
push
dec
push
js
int3
repnz
add
mov
js
push
mov
sbb
movsl
mov
ret
rclb
mov
in
xchg
aas
sbb
sbb
fisubl
sub
sub
cmp
test
inc
repz
inc
add
cmp
dec
sub
cld
pushl
dec
xor
loopne
bound
push
adc
or
or
hlt
ljmp
push
xor
mov
dec
dec
or
sbb
in
jb
repz
adc
cmpsb
push
push
push
jle
incb
push
mov
data16
add
dec
push
sbb
scas
xchg
test
sub
adc
std
xchg
add
inc
push
lods
push
in
icebp
xchg
lret
cld
jno
xchg
mov
fwait
out
adc
mov
sub
dec
ljmp
inc
sbb
push
loope
std
fs
test
or
adc
push
mov
jne
jne
mov
stos
fwait
pop
pop
mov
orb
enter
and
rclb
inc
adc
pushf
add
pop
dec
sbb
dec
outsl
xor
mov
shrb
mov
fisubs
pop
inc
loop
in
add
xor
test
inc
in
add
jb
push
or
mov
push
packssdw
xor
data16
push
cmp
in
mov
xor
mov
test
push
sub
movsl
lock
mov
pop
outsb
jge
cmpb
insl
js
dec
push
mov
xor
mov
lods
jnp
popf
adc
div
xchg
or
jp
ja
sub
pop
das
dec
clc
out
out
xor
pusha
mov
jns
clc
sti
cmc
out
shll
pop
and
pushf
loop
mov
or
in
sub
subl
dec
data16
or
push
incl
in
testb
into
and
and
sbb
lcall
or
pop
and
mov
clc
inc
cmp
pop
aas
inc
popf
enter
adc
pop
push
push
pop
push
stc
das
inc
mov
fs
add
nop
add
faddl
test
xchg
stos
sbb
mov
adcl
in
sub
test
or
add
cmp
addr16
ds
push
bnd
sbb
loopne
outsl
xchg
push
dec
or
sub
lock
cs
into
lds
in
adc
call
pop
stos
es
scas
sbb
and
mov
cmp
loop
cmc
sub
pop
into
sub
mov
push
outsb
xor
jecxz
inc
mov
adc
fmull
jbe
mov
outsb
int3
push
jo
jmp
aam
imul
iret
pop
xchg
or
incl
xchg
incl
mov
push
cmpsl
cmpsl
shr
divb
jo
pop
repz
sbb
dec
jno
sub
xor
lcall
xor
call
mov
pop
out
add
pop
jbe
andl
mov
adc
imul
dec
xchg
js
popa
andb
clc
jmp
ds
inc
ret
and
inc
ret
adc
mov
adc
ljmp
arpl
fsts
push
inc
rep
pushf
cli
sar
fists
inc
mov
adc
clc
dec
mov
les
lret
incl
lcall
test
cmpb
lods
sub
add
dec
movsl
push
lock
jecxz
and
outsb
add
xchg
or
movsl
or
decb
xlat
xor
push
pushf
cmp
push
pop
scas
push
pop
mov
adc
int3
test
lds
sarb
and
cmpsb
dec
sahf
dec
ror
push
xlat
jg
jl
iret
ffreep
add
les
jge
add
pusha
cwtl
icebp
decb
jg
fdivr
cwtl
jl
cmovb
and
rorl
orl
rolb
jo
cmp
cmpsl
dec
jle
ljmp
or
xchg
push
ljmp
in
mov
stos
addr16
mov
fs
insl
or
push
jbe
mov
adc
addr16
sbb
movsl
adc
jo
inc
imul
ds
pop
mov
mov
xchg
pop
or
daa
mov
push
aaa
pusha
mov
pop
shlb
mov
mov
lahf
sbb
leave
mov
jne
aam
pop
std
or
jo
or
jae
movsb
inc
cmp
ss
adc
and
inc
mov
inc
jl
mov
data16
lret
sahf
cmc
test
and
call
mov
roll
xchg
bound
push
stos
lret
mov
enter
cld
mov
push
negb
lret
scas
push
mov
movsl
mov
ja
xor
in
push
sub
sbb
lods
dec
cmp
push
pusha
fisttps
js
loopne
ret
andb
mov
call
jle
enter
lahf
aaa
push
pop
in
push
sbb
cmp
push
ret
sti
jbe
xor
or
fldl
clc
ret
push
xor
insb
clc
and
hlt
cld
pushf
ret
mov
sub
in
pusha
xchg
or
std
or
int
mov
or
lds
add
hlt
stos
loopne
jo
div
add
addr16
pop
jle
leave
xchg
adc
pop
test
ljmp
sub
mov
add
daa
ds
loopne
mov
pop
test
jl
and
pop
out
sbb
icebp
cmc
aad
pop
jmp
arpl
notl
dec
std
mov
pushl
adc
adc
cltd
lock
iret
cmpsb
rclb
sub
aas
mov
adc
sbb
imul
clc
lcall
ljmp
inc
mov
cltd
or
cvtps2pd
mov
sbb
repnz
xorb
test
push
lods
inc
xchg
jo
jl
and
ss
pop
or
cmpsb
lahf
mov
mov
pop
or
adc
xchg
mov
dec
inc
dec
test
and
add
scas
fists
mov
push
sbb
xor
ds
mov
data16
jbe
cli
pusha
sub
insl
ret
or
hlt
lret
pop
xor
in
clc
loop
loopne
inc
mov
cmp
lahf
dec
sbb
scas
jo
nop
and
sbb
inc
scas
movsb
add
mov
rolb
gs
in
arpl
mov
xchg
jb
into
push
xchg
sti
or
les
jbe
sbb
ljmp
xchg
pop
rol
inc
pop
or
mov
jno
jecxz
jecxz
jbe
andl
add
pop
jp
xor
loop
ljmp
pop
lea
pop
rclb
insl
arpl
inc
mov
aas
mov
cmp
ljmp
sub
mov
push
mov
mov
test
pop
int
jmp
iret
lea
jo
pop
mov
out
mov
mov
in
sub
rorb
pop
pushf
out
xchg
push
pop
lock
cmp
mov
xchg
sbb
and
inc
fs
pop
push
in
ljmp
orb
lcall
mov
push
sub
or
inc
sbb
cs
inc
sbb
fwait
inc
mov
cmp
add
inc
cmp
lret
fmull
xchg
mov
mov
or
mov
push
add
xlat
in
in
mov
inc
or
sahf
dec
jns
call
mov
xlat
sbb
mov
ljmp
mov
dec
jb,pn
mov
enter
push
mov
adc
mov
mov
es
xor
loop
or
sub
push
subb
subl
ljmp
push
dec
mov
dec
popa
cmpsb
mov
push
jo
in
cli
xchg
xchg
sub
push
hlt
and
repz
fstpl
add
inc
sbbb
xchg
mov
xchg
jbe
rcrb
fucom
xchg
add
sub
mov
mov
pop
shrb
stos
aad
popf
jns
jl
lcall
push
xchg
dec
mov
cli
add
nop
and
and
loopne
imul
xor
push
mov
arpl
ljmp
test
in
add
pop
popa
shlb
pop
add
jno
cmc
xchg
mov
mov
mov
mov
inc
jae
push
add
sahf
and
movsb
test
fcmovb
pop
mov
icebp
dec
ret
mov
fldt
popf
mov
cmc
shlb
incl
scas
push
test
xchg
inc
adc
pop
call
xor
mov
inc
mov
pop
aaa
jp
cwtl
leave
mov
outsb
test
cmp
inc
cmp
xor
mov
sarb
nop
or
pusha
mov
sbb
in
xchg
fs
hlt
movsb
inc
faddl
push
jbe
sub
push
popa
push
ret
mov
fidivrs
hlt
jp
repz
add
jp
into
fdivr
mov
inc
ret
scas
lock
adc
add
in
aam
loopne
loopne
shl
scas
cltd
push
lods
push
sti
cmpsl
add
xchg
inc
push
fwait
adc
mov
lcall
lods
paddusw
push
bound
adc
mov
add
mov
fnsave
nopl
dec
fstpt
push
pop
shr
and
adc
adc
cld
xlat
js
fsts
cmp
shll
adc
xchg
stc
insl
rorl
pop
mov
out
rcr
ds
jecxz
push
test
lods
xchg
cmpl
sbb
movsl
cmpsl
xchg
ljmp
movl
adc
rcl
jns
sarb
mov
adc
dec
mov
jbe
pop
out
xchg
sbb
popf
in
add
or
pop
pop
mov
mov
test
sub
int
xchg
orl
inc
lods
push
pushf
inc
pop
jl
or
adc
cld
push
inc
daa
mov
cmpsb
xor
jae
fmull
adc
rcll
jno
out
sub
in
dec
push
ljmp
sbb
and
shlb
and
jg
lock
push
je
and
adc
pop
push
cwtl
add
lcall
lea
adc
sbb
add
adc
sbb
out
adc
and
or
sub
push
pop
setb
ret
fsub
or
mov
nop
lret
das
jbe
xor
mov
adc
push
fcoml
test
pop
enter
jo
outsb
xchg
and
dec
dec
ret
mov
arpl
jle
pop
cld
fmuls
push
es
es
push
fsubrs
sub
add
pop
ja
test
sti
push
or
adc
and
dec
cs
icebp
enter
inc
or
aas
add
push
sbb
in
ret
adc
pop
inc
iret
outsl
incl
arpl
das
rcrb
cmp
mov
mov
xor
pushf
pop
es
into
mov
pop
pusha
dec
mov
push
jle
cmpsb
ja
sbb
sarb
push
scas
inc
mov
aam
cmp
mov
dec
loope
inc
outsb
cld
movsl
cmc
out
shrb
mov
push
mov
push
add
popf
test
adc
mov
cmp
fsubs
int
dec
add
daa
cmp
cmp
pop
xor
repnz
into
or
test
scas
sub
das
mov
mov
mov
and
adc
ja
sbb
rolb
push
insb
sbb
dec
mov
push
push
aas
cmpb
data16
cmp
fwait
lock
or
clc
mov
push
or
push
rcrl
test
push
movsl
insb
adc
sub
daa
cmp
mov
mov
mov
and
mov
push
or
pop
int3
dec
sbb
aad
mov
divl
adc
or
push
ret
ljmp
loopne
push
and
test
inc
jbe
lods
mov
insl
into
mov
ljmp
stos
and
adc
ljmp
push
int
jl
xchg
ljmp
ret
add
push
dec
insb
sbb
pop
je
addb
lods
mov
add
and
icebp
pop
imul
cli
lret
les
mov
aaa
mov
popf
loopne
shl
pusha
fwait
ret
mov
adc
mov
push
ret
xchg
inc
adc
lods
xchg
pop
inc
inc
leave
cs
cli
inc
pop
pop
push
mov
fwait
inc
insl
scas
bts
xlat
cli
jle
in
lcall
lods
orl
pop
inc
cli
push
lock
shll
daa
fldl
sar
rcrb
es
insl
fsubs
aas
adc
shlb
push
shl
fisubrl
mov
fbld
call
xchg
outsl
xor
stos
test
fidivrs
cmp
clc
or
test
shlb
mov
inc
pop
mov
adc
sub
sarl
cmp
jbe
lock
pop
decl
adc
and
or
cmc
sbb
dec
adcl
add
jg
add
sar
sahf
mov
mov
imul
sbb
pop
adc
or
clc
or
push
and
pop
sub
mov
hlt
out
sbb
add
ret
mov
call
lds
sub
or
pop
xor
adc
mov
adcb
or
loop
enter
aas
or
xor
pusha
inc
or
testl
mov
insb
and
sbb
nop
call
fdivrs
jle
adc
in
data16
testb
push
pop
cltd
push
dec
xor
mov
roll
jg
mov
js
inc
add
mov
daa
jle
nop
mov
shlb
mov
fdivl
and
jecxz
add
mov
sbb
ficoml
in
loopne
popa
idivb
inc
push
fdivs
lret
lahf
imulb
cld
push
mov
in
adc
aaa
sbb
popa
add
ret
out
mov
inc
lcall
orl
mov
sbbb
loopne
inc
icebp
add
inc
in
test
mov
xchg
aam
and
jp
idivb
ljmp
or
fs
add
movsl
dec
mov
divb
xchg
cli
mov
repz
out
hlt
pop
inc
das
aaa
jmp
repz
xor
sub
push
jecxz
pop
je
dec
fs
enter
adc
sbb
and
lock
insb
adcl
or
mov
das
ss
pusha
mov
in
leave
dec
mov
mov
xor
inc
inc
inc
and
lcall
js
mov
push
fsubr
test
sub
push
clc
jp
mov
push
test
jle
sbb
shll
subl
mov
mov
cs
decl
call
loope
add
mov
push
jle
xor
inc
sbb
mov
mov
sbbl
aas
add
xor
push
sub
push
cmp
cmpsl
ljmp
inc
shl
and
cmp
cmp
stos
repz
js
adc
sub
ret
js
repz
test
or
push
nop
mov
add
cwtl
push
ret
mov
mov
or
cmpl
cltd
ljmp
cld
mov
cmp
inc
xor
scas
inc
inc
dec
jne,pt
loope
sub
sbb
and
push
out
xor
mov
cmc
js
dec
push
insb
outsl
add
xlat
sub
push
cwtl
data16
inc
and
shl
enter
sbb
in
aam
add
scas
jp
cld
xchg
mov
mov
and
add
sbb
pop
cmp
out
shlb
or
adc
and
scas
pop
add
sub
and
arpl
lret
dec
lea
dec
insb
push
or
test
or
inc
sbb
add
sbb
xor
push
mov
mov
lcall
hlt
sbb
jo
cld
mov
loopne
push
adc
jbe,pn
push
or
xor
sbb
lods
cltd
inc
fadds
shl
jnp
and
add
jbe
test
int3
dec
cmpsb
adc
mov
ret
divb
xchg
add
sbb
mov
js
pop
lods
fxch
xor
mov
push
notl
ljmp
nop
push
jns
insb
adc
daa
cmpb
push
fsubrl
bound
add
jbe
in
dec
push
lods
push
xchg
or
xor
xchg
pop
mov
push
rcl
sarb
sub
add
mov
or
or
mov
adc
test
mov
aaa
sar
xorb
lcall
stos
iret
out
cmp
dec
mov
push
mov
pop
xor
test
push
jnp
pop
pop
test
mov
je
jle
in
xchg
or
add
or
ljmp
add
inc
jmp
mov
jbe
cli
inc
hlt
adc
ds
xor
add
mov
sub
inc
mov
inc
imul
jl
repnz
or
jmp
test
mov
xchg
cmp
das
and
fdiv
rorb
imul
fisttpl
push
add
shlb
mov
andb
inc
mov
pop
mov
sahf
loop
stos
mov
loope
pop
jmp
stc
add
sbb
test
lcall
adc
push
aam
mov
stos
xor
mov
ret
daa
fmull
aaa
dec
movsb
sub
and
in
rclb
cmp
sub
push
js
fsubs
add
aaa
incl
lds
dec
cld
xacquire
repnz
add
shrb
mov
or
cmpsl
pop
push
jmp
or
daa
sub
or
lock
xchg
cmpsb
jmp
sbb
mov
push
insb
lea
mov
sbb
pop
jo
jnp
nop
push
sub
dec
pop
xchg
addr16
roll
push
lods
ficoms
adc
out
mov
inc
iret
stos
sar
les
mov
shll
pop
cmp
add
fwait
mov
adc
jle
out
je
shlb
push
fs
jb
shrl
add
xor
inc
adcl
pop
dec
arpl
stos
pop
pop
pop
idivl
inc
add
stc
mov
outsl
ret
loope
xor
jle
fs
jl
or
cmc
xchg
cmc
aas
xchg
addb
pop
mov
sub
inc
and
pushf
je
xchg
mov
dec
aam
inc
pop
mov
in
je
mov
jae
push
loope
clc
cmp
ret
xchg
paddsb
sbb
ret
mov
or
lret
das
add
nop
pop
add
and
clc
mov
mov
aad
fsubrp
jo
push
and
inc
and
in
xchg
push
cmp
ficomps
xor
sbb
mov
in
jle
lahf
shlb
imul
mov
lea
or
jo
pop
addb
rcl
sahf
js
sub
dec
into
sahf
dec
push
pop
jecxz
and
sub
in
adc
sbb
lds
clc
dec
add
xchg
aad
mov
dec
test
inc
or
jo
add
scas
and
xchg
movsl
out
jno
aad
hlt
fisubrs
push
mov
xchg
jp
or
push
lock
and
push
testb
inc
sbb
ss
rclb
jns
int3
mov
add
into
mov
sbb
jo
daa
fs
inc
jl
cld
dec
daa
or
bnd
loop
mov
adc
out
sti
loope
outsl
sahf
ds
sbb
test
lock
daa
adc
cmp
int3
adc
add
xchg
mov
hlt
sbb
or
and
push
adc
and
adc
sub
jno
rolb
loope
sub
mov
das
cmp
aam
sti
or
pop
rolb
mov
add
lds
loope
pop
mov
mov
sarb
mov
xchg
pop
mov
dec
outsb
mov
add
fildl
fdiv
pop
outsl
sub
push
mov
sahf
imul
or
and
add
rolb
stos
ret
imul
jg
xor
pop
dec
add
sub
or
dec
shr
mov
mov
loop
rcrb
in
jb
adcl
jmp
pop
add
xchg
int
aad
jp
lods
cmp
iret
sarb
jae
xchg
mov
jb
js
fstl
sub
inc
pop
fs
stos
fidivrl
xor
adc
scas
and
or
pushf
out
or
rcrl
dec
fdivs
jl
rcll
pop
inc
push
sbb
inc
mov
test
je
mov
mov
sbb
addr16
jo
lods
pop
in
mov
or
stc
lcall
xchg
push
pusha
das
cmc
add
sbb
xchg
push
pop
mov
add
sbb
pop
nop
jns,pt
out
sub
cmc
adc
sub
repnz
pop
insl
inc
push
pop
rolb
jnp
dec
scas
test
fdivr
or
rcl
pop
rolb
jg
sbbb
mov
fildl
push
jl
std
insl
xorb
adc
mov
ret
ret
xchg
inc
fsts
push
ret
cmpsb
repz
negl
dec
xchg
lret
enter
pop
push
aam
jp
lcall
pinsrw
pop
push
and
add
movsl
pop
pop
sub
fstpl
test
push
pop
mov
inc
dec
jmp
imull
fidivl
inc
xor
adc
or
sub
fs
mov
add
inc
sbb
clc
cltd
fisubrl
and
sub
imul
ja
xor
xor
test
and
idivb
js
or
cltd
push
inc
popa
and
pop
xchg
call
or
sbb
jo
mov
sbb
add
andb
dec
gs
xchg
mov
lret
pop
add
sbb
ljmp
adc
sub
sbb
cmpsb
push
and
imul
push
pop
test
push
lret
inc
adc
or
and
jecxz
orb
inc
or
jle
mov
lret
loop
loope
adc
add
pavgw
mov
add
or
rorb
das
mov
inc
xchg
mov
icebp
mov
cld
dec
add
add
je
in
push
jp
add
push
les
or
leave
scas
sub
add
icebp
nop
jne
ljmp
out
aam
xor
jmp
inc
xor
mov
icebp
sbb
out
out
mov
cmpsb
push
fcmove
lds
inc
cmp
mov
incl
sub
sahf
xchg
pop
movsl
pop
lea
mov
xchg
fiadds
test
mov
js,pn
bound
push
sub
lea
push
sbb
pusha
loopne
enter
mov
ss
mov
inc
and
rcrb
rorb
je
add
pop
mov
ds
mov
and
ss
push
cld
inc
clc
xlat
and
dec
adc
iret
lock
jns
in
mov
mov
mov
pop
pusha
add
mov
mov
lret
scas
out
jo
nop
dec
add
ret
call
push
lds
mov
jae
mov
rorb
dec
dec
fcoms
and
in
arpl
fstl
dec
add
push
mov
andl
in
jmp
in
cmpsl
or
ret
notb
push
inc
dec
test
pop
fstpl
pusha
add
or
mov
push
lret
or
fwait
int3
and
sbb
lods
sub
inc
jno
cli
push
or
inc
mov
mov
dec
mov
sub
outsl
dec
dec
push
xchg
xchg
out
call
test
mov
loopne
paddb
in
leave
inc
mov
ficoml
movsb
ficoml
inc
test
adc
fcomp
bound
sub
pushf
lahf
inc
popw
mov
in
into
jge
add
dec
out
sti
jb
loopne
jle
xor
fstpl
sbb
xor
outsb
rcrb
stos
inc
fs
mov
das
dec
sub
xchg
adc
mov
or
xchg
push
cmp
cmp
add
and
in
cmpl
cld
imul
xchg
jo
mov
outsl
js
mov
adc
xchg
shll
or
cmp
pop
outsl
push
rcrb
nop
dec
xchg
add
mov
sahf
clc
and
sub
sub
jp
ficoml
fiaddl
pop
cmpb
push
push
es
cmp
jmp
rol
insb
add
ljmp
and
int3
xchg
add
cs
dec
outsb
jge
insb
add
xor
mov
pop
arpl
pop
aaa
nop
sub
stos
mov
pusha
sbb
push
andl
pop
aaa
lods
adc
sub
xchg
int
adc
js
jne
dec
ret
shll
iret
jne
cld
mov
xor
stos
cmp
and
mov
xchg
mov
sahf
xchg
hlt
out
adc
cmp
jnp
jle
es
arpl
mov
not
call
out
inc
enter
loope
dec
xchg
scas
popl
pop
fdivrs
mov
pop
mov
push
inc
ds
out
int3
push
inc
mov
add
push
cld
daa
aas
les
cmc
jns
movsb
imul
jnp
and
in
jl
cwtl
jp
mov
test
jle
and
addb
fcomps
mov
xchg
out
pushf
lds
sar
incl
dec
enter
dec
sbb
outsb
iret
pushf
jg
xor
call
xchg
xchg
lds
js
adc
daa
sub
or
mov
add
mov
or
call
in
pop
inc
add
add
push
outsb
xchg
pop
mov
mov
fs
repnz
leave
push
popa
xchg
push
xchg
sub
sahf
fnsave
rorb
xor
subl
mul
xor
add
push
sbb
or
int
mov
mov
outsb
xchg
fldl
outsb
subb
mov
insb
jp
loopne
hlt
xor
push
and
popa
adc
cmp
pusha
cld
and
or
mov
cmpsl
cmp
mov
push
test
pop
outsb
mov
adc
js
sbb
and
cmpsb
or
or
test
js
mov
in
push
jno
inc
add
cmp
push
and
mov
mov
cld
pop
xor
and
je
push
loope
shlb
fs
cmp
push
add
and
mov
sub
hlt
hlt
scas
les
scas
stos
mov
sub
jo
xchg
adc
clc
xor
iret
clc
cmp
push
sbb
lcall
sbb
mov
pop
pop
fs
out
pop
and
sbb
loopne
lret
jbe
adc
push
push
shrb
add
fistpl
sbb
ljmp
push
inc
xchg
test
pop
movsb
jmp
cld
insl
sbbb
mov
call
or
cli
adc
cmp
or
int3
sub
icebp
or
cwtl
rcll
insl
dec
lea
cmpsl
js
movsb
out
loopne
in
iret
sbb
fisttps
sti
das
push
cmc
or
outsb
repnz
jo
jg
pop
das
xor
jo
popa
sti
ret
add
jb
dec
xchg
adc
bound
pop
pop
sbb
shlb
mov
xchg
push
add
pusha
std
int
imul
xorb
fidivs
outsl
movsl
loop
rolb
cmc
fcmovnu
je
xorb
psllw
rolb
add
sbb
lock
mov
cli
dec
mov
fldt
pusha
pusha
cmp
pop
dec
loope
daa
nop
hlt
pinsrw
popa
hlt
enter
push
pop
jge
mov
mov
insl
jge
or
push
sti
mov
negb
call
aad
dec
and
sub
sbb
ret
jle
push
push
in
jnp
sub
adc
jecxz
sbb
mov
push
lds
add
int
sbbb
js
and
push
dec
mov
mov
cs
out
inc
inc
stos
lahf
lock
xor
mov
push
cs
outsl
inc
mov
orb
fcoms
xchg
js
subl
mov
dec
sub
ficoms
sbb
out
mov
rcrl
jp
add
lcall
loope
and
andb
dec
ret
pop
jmp
lock
or
jae
add
jl
mov
and
add
dec
sbb
or
mov
js
es
mov
push
fimull
into
or
and
xor
aam
adc
fisttpll
inc
mov
aas
mov
mov
test
movsl
push
xorb
add
bound
mov
in
aad
test
repnz
fidivrl
mov
cmp
dec
inc
rcr
xchg
add
push
outsl
mov
push
repnz
jnp
cmp
sahf
rcl
dec
mov
mov
movsl
mov
andps
jo
scas
xor
or
outsb
in
das
rcll
hlt
mov
pop
loopne
pop
inc
icebp
jmp
je
jo
push
movsl
jo
push
sub
ljmp
sbb
push
jl
and
and
negl
ret
scas
dec
cld
bound
cwtl
clc
add
add
out
mov
js
mov
add
sbb
and
pop
lea
daa
jp
jge
pusha
xchg
js
enter
pusha
pop
orl
pop
sub
pop
jg
sbb
pop
shl
dec
pop
ret
jne
ret
mov
js
xchg
sbb
xor
push
aam
adc
in
pop
test
push
inc
cmp
inc
jl
popa
mov
fcmovne
call
push
and
es
pusha
push
in
pop
mov
mov
insb
loope
addr16
insb
xchg
aad
sahf
lret
loop
adc
pusha
aas
inc
fcoms
xor
mov
push
pop
sub
adc
sub
js
push
sub
inc
dec
xor
jne
push
jmp
cld
dec
jp
add
aas
jnp
nop
cs
sub
sbb
fs
clc
inc
es
cmp
repnz
ja
clc
shr
mov
xlat
lahf
es
rcl
xchg
dec
lcall
xchg
sahf
sub
xchg
icebp
lds
adcl
out
or
subl
sub
adc
es
movb
and
push
loop
ja
push
or
mov
add
call
sbb
xchg
gs
aam
fisttpll
repnz
loop
add
add
cmp
or
negb
test
loopne
mov
mov
int
xorl
fnstsw
pusha
sbb
pop
lcall
pop
mov
ds
ds
mov
pop
mov
sbb
jnp
mov
rclb
inc
mov
push
mov
adc
adc
inc
inc
shlb
jno
push
cli
push
sbb
aad
xchg
mov
inc
xchg
mov
push
inc
push
rsm
mov
or
mov
push
mov
dec
inc
fcmovnu
clc
adc
sub
dec
lea
fdivrl
inc
aaa
or
pop
enter
shll
cld
jbe
in
inc
popa
add
lea
xchg
jne
xchg
mov
dec
adc
push
cmp
dec
pusha
iret
jl
popa
fisubs
jbe
add
mov
jecxz
das
cmc
fcoms
sbb
repnz
mov
jl
sbb
and
ss
jo
pop
mov
or
fsubr
add
push
and
test
and
cmp
jb
ret
test
sbb
mov
xchg
push
cmp
adc
add
lahf
sub
push
outsb
nop
cmc
cmp
dec
js
aaa
dec
push
mov
dec
rcl
pop
add
fimuls
loop
push
and
movsb
stc
inc
pop
cmp
clc
jmp
xlat
int3
in
mov
and
sahf
pusha
adc
dec
std
jo
mov
push
in
jne
aas
iret
clc
lods
xchg
aas
pop
adc
cmc
jecxz
jnp
xchg
adc
xlat
sbb
or
push
cmc
jmp
mov
sbb
sbb
add
sub
dec
jl
inc
jecxz
mov
cmp
inc
ljmp
lds
jle
mov
enter
test
dec
jge
xchg
fistl
mov
sbb
mul
jno
push
pop
adc
xchg
enter
enter
ret
clc
scas
imul
push
xchg
push
add
pop
mov
out
push
push
cmp
mov
add
dec
aad
test
in
aas
add
mov
into
cltd
mov
cmp
repz
cmp
mov
mov
pop
or
inc
aas
test
ficompl
outsl
mov
pop
push
cs
stos
scas
or
fiaddl
xchg
jbe
addr16
int3
push
mov
ficoml
or
pop
mov
lret
push
rclb
mov
cld
les
jne
mov
loop
popa
or
jp
cli
xchg
jb
fwait
rcll
aaa
inc
dec
lods
adc
cmp
mov
clc
lcall
pop
dec
in
insb
loopne
xchg
rcrl
sub
aaa
sbb
clc
inc
enter
inc
xchg
rolb
cwtl
xchg
ljmp
mov
sub
xchg
popf
xchg
or
sub
mov
rorb
lahf
inc
inc
dec
js
dec
jo
mov
rclb
push
add
scas
mov
or
xor
push
pop
sbb
sub
push
jbe
or
inc
adc
cmpsl
xor
add
mov
ljmp
mov
inc
pushf
shrl
lods
nop
ret
orb
hlt
add
and
cmp
jne
hlt
push
icebp
loope
mov
outsl
sbb
mov
mov
or
or
xchg
aam
mov
jo
imul
xchg
insb
enter
inc
add
fstl
jp
iret
fnstenv
adc
scas
adc
inc
inc
mov
mull
push
xchg
cmc
shlb
or
cli
loopne
in
rcl
add
imul
leave
mov
jmp
stos
pop
xlat
adc
adc
mov
cmp
repnz
ljmp
pusha
pop
loope
dec
cmp
xor
stos
les
and
inc
adc
push
jg
std
xlat
ja
clc
popl
mov
or
dec
leave
js
pop
fs
dec
mov
ror
sub
jge
pop
pusha
adc
xchg
aam
jo
add
adc
pop
xchg
nop
xchg
jbe
sub
fildll
push
pop
test
repnz
test
adcl
test
or
out
jb
adc
pop
clc
mov
into
sub
test
subl
sbb
cmp
popa
rcr
xchg
jle
and
fs
pop
es
mov
xor
jl
mov
insb
push
push
mov
test
lock
pop
add
fmuls
dec
cmp
jle
mov
rolb
ja
adc
shl
add
sbbb
ds
sbb
mov
add
xchg
fsubs
jnp
mov
js
pop
mov
mov
adc
das
cmp
nop
push
outsl
sbb
push
cs
dec
inc
js
pop
lcall
je
jbe
fldl
mov
scas
jno
or
mov
scas
pop
sub
jp
add
pop
mov
cmp
mov
mov
je
testb
call
dec
pusha
mov
clc
ds
aaa
sbbl
push
mov
fwait
out
jle
imul
pop
xor
mov
arpl
aaa
mov
lret
pusha
add
movsb
shl
mov
add
call
in
cmc
cli
nop
adc
insl
push
pop
cmp
push
pop
or
xchg
mov
ds
scas
jbe
push
test
pop
or
mov
sub
mov
addb
outsl
mov
mov
adc
arpl
xchg
push
out
mov
outsb
gs
mov
push
or
jo
fisttps
addr16
and
mov
mov
mov
mov
push
dec
dec
call
push
sub
sahf
cmc
push
sub
jae
mov
mov
pop
xorl
xchg
inc
push
aam
mov
push
or
mov
test
call
cld
nop
sbb
inc
xchg
push
divb
icebp
outsl
and
xchg
pop
div
xor
push
add
loope
pop
dec
push
test
jb
mov
xor
dec
sbb
fdivp
je
mov
or
add
sti
inc
sbb
and
jle
fs
and
jne
mov
add
call
hlt
sarb
cs
mov
sahf
ljmp
jp
fimuls
mov
sbb
jb
cmp
mov
ficoms
pop
sbb
adc
jne
push
and
cmp
es
in
stos
add
sub
movsl
sub
push
incb
cltd
stos
push
imul
scas
out
das
pop
inc
js
rol
mov
loopne
dec
mov
aam
pop
iret
int3
fcmovnu
hlt
dec
adc
mov
ret
or
pop
shlw
cmp
cmp
sbb
arpl
cmp
xor
fsubs
aad
outsl
xchg
aad
mov
push
je
cli
pop
daa
js
negl
inc
out
cli
jg
rorb
rolb
xlat
inc
lcall
add
inc
push
or
mov
xchg
daa
pop
mov
or
jp
mov
or
ret
xor
push
push
rorb
sbb
nop
and
test
insl
sahf
add
dec
ds
outsb
push
jne
dec
test
ds
aam
adc
mov
lea
xchg
ljmp
add
xchg
aad
lahf
mov
je
cmp
pop
aaa
jmp
lods
negl
outsb
xchg
jge
dec
andb
mov
in
jp
add
insl
jae
pusha
icebp
push
sub
aam
bound
jge
sub
jmp
jo
movsl
movsl
cmp
pop
xor
xor
pop
sub
cmp
imul
scas
mov
ljmp
call
xchg
add
aad
sub
stos
fucomip
and
jmp
jg
lds
push
jns
mov
add
mov
mov
ret
arpl
push
iret
cmc
sbb
les
js
push
sbb
push
dec
pop
aaa
inc
ud0
negl
lds
ret
sub
gs
icebp
sbb
push
or
arpl
pop
jecxz
aas
shr
add
dec
roll
xchg
lock
gs
mov
dec
lods
add
or
ljmp
aad
jno
pop
insb
imul
sbb
imul
and
lock
gs
nop
push
rclb
mov
add
icebp
sub
jns
or
out
ret
add
mov
xchg
mov
mov
jo
ds
xchg
cmp
and
pop
jmp
inc
jp
sbb
rorl
jns
lods
movsb
mov
sbb
pop
daa
sbbl
mov
inc
ret
jmp
popa
mov
leave
cltd
pop
push
xchg
cmp
adc
popf
mov
out
test
add
cmp
inc
fbstp
sbb
mov
pop
mov
xchg
and
enter
xchg
add
dec
icebp
xchg
rclb
xor
xchg
roll
jl
aad
xchg
jbe
sub
loope
ljmp
lret
in
jno
mov
int3
loopne
clc
adc
xor
cltd
mov
mov
lcall
fsubl
dec
clc
jo
mov
jne
push
js
rclb
repz
outsl
jl
add
popa
adc
popf
repz
inc
sub
je
cmpsb
and
imul
dec
mov
cmp
inc
vpminub
xor
test
jb
xchg
sbb
ficoms
lods
or
jae
sub
sbb
pusha
dec
scas
inc
clc
jecxz
arpl
pop
ss
mov
out
jo
adc
mov
test
sub
js
ss
sbb
dec
xor
xchg
pop
stc
sbb
mov
aas
mov
lret
sub
adcb
xchg
adc
xor
cltd
xor
repnz
clc
pusha
lahf
bnd
and
or
fxch
call
imul
sbb
add
inc
jle
stos
push
inc
push
scas
pop
mov
dec
or
sub
mov
andb
pop
dec
add
ljmp
xlat
imul
and
xor
flds
mov
out
xor
mov
mov
push
and
mov
pushf
in
xor
aad
xor
daa
fdivrl
inc
dec
adc
or
cmpsb
inc
mov
cmp
aam
mov
sar
imull
and
rclb
test
or
clc
sbb
push
mov
nop
and
aaa
sbb
jecxz
xchg
pop
inc
push
aaa
mov
xchg
fsubp
shl
xchg
push
mov
lds
dec
mov
xlat
ja
pop
loope,pt
testl
ficoml
add
mov
cmp
popa
in
out
pusha
fcmovne
jmp
pop
add
orb
dec
cmpsl
cmp
mov
test
push
call
push
pop
add
loop
mov
enter
inc
xor
push
push
loopne
push
fstl
sbb
jmp
popa
jno
pop
leave
adc
sbb
ljmp
and
lahf
pop
les
add
xor
out
push
xor
xor
jmp
test
adc
pop
pop
sahf
pop
xlat
mov
inc
ss
cmp
mov
mov
ds
mov
and
sbb
push
in
sub
jmp
jle
pop
inc
cs
sbb
shll
mov
out
jne
jecxz
lds
mov
sbb
add
sahf
inc
fsts
js
sbb
pop
orb
es
ret
clc
pop
lret
movsb
call
xchg
popa
jge
shlb
mov
test
mov
mov
mov
mov
jns
cmp
mov
pop
pop
loope
leave
pop
push
sub
mov
inc
rorl
jne
loop
mov
cld
iret
adc
shlb
jl
fbstp
scas
in
outsl
jmp
iret
push
test
les
mov
pop
push
cmpb
push
int
push
mov
cmp
push
roll
jl
jne
push
pop
mov
inc
mov
mov
push
dec
loopne
xlat
or
push
in
fcoml
scas
jecxz
cltd
dec
bound
adc
mov
fstpl
inc
pop
in
inc
fidivrs
test
pop
int
sub
mov
pop
pop
pop
in
mov
pusha
or
sub
bound
cli
daa
out
add
test
xor
loope
mov
cmc
mov
xor
aam
in
push
daa
xchg
cmc
inc
jae
lds
scas
fisttpl
iret
jge
lock
pusha
push
pusha
and
add
ret
push
jmp
leave
pop
push
fwait
mov
inc
push
scas
sbb
mov
sbb
pusha
rorb
popl
dec
xchg
lods
js,pn
insb
fisttpll
data16
jae
sub
int3
adc
pop
int
lock
sbb
insl
and
scas
push
dec
xchg
iret
gs
push
nop
and
sub
adc
out
pop
das
mov
inc
dec
mov
or
cmp
or
jmp
lret
cld
test
and
int3
inc
inc
cmpsl
and
cmpl
sub
int
add
mov
mov
jecxz
sbb
xor
outsb
lret
std
xchg
mov
cmp
pop
imul
int3
mov
ds
scas
cwtl
outsb
into
xlat
scas
icebp
jo
sbb
scas
pop
std
push
sbbl
inc
push
mov
testl
sub
pop
xlat
lock
rcll
imul
push
lods
pop
adc
push
je
lret
mov
add
adc
sbb
mov
add
dec
sbb
add
xchg
push
std
adc
pop
es
jge
loope
notl
gs
add
ret
sub
mov
add
imul
cli
mov
imul
pusha
loope
xchg
push
inc
adc
pop
loope
dec
pop
hlt
dec
popa
mov
pop
loopne
ss
and
mov
or
pushf
cmpsl
into
dec
les
jg
lds
imul
mov
lds
ret
loopne
mov
jmp
sbb
sbb
or
imul
mov
xor
adc
mov
xchg
sub
mov
popa
scas
dec
add
loop
push
movsb
adc
cltd
xchg
jge
or
push
mov
pop
test
shl
cmp
mov
push
aaa
fcoml
aas
imul
jns
jg
loop
les
pop
xchg
xor
enter
rorl
pop
mov
cmp
clc
and
push
jp
add
ret
pop
shl
ficomps
mov
cld
pop
lahf
pop
je
mov
test
and
test
jnp
inc
aas
cmp
inc
pop
cmp
inc
andl
jmp
mov
pop
pusha
or
hlt
and
test
out
push
add
mov
or
jne
mov
je
xor
mov
push
xor
sti
in
and
test
out
mov
cli
ret
mov
insl
call
pusha
jmp
xor
pop
cmp
js
jmp
loop
inc
xchg
and
and
inc
xor
xchg
clc
in
cmp
pop
pop
dec
cwtl
jmp
addl
mov
ret
or
dec
shll
inc
jle
rclb
test
out
push
gs
inc
incb
cmpsl
ljmp
out
addr16
popf
mov
mov
rclb
push
jns
add
cmpsl
sbb
cld
jmp
adc
lods
fwait
mov
mov
lods
idivl
jl
shlb
mov
pop
jb
stos
jno
test
push
lds
lcall
in
pop
aas
xor
out
out
shlb
adc
pop
inc
xchg
push
das
punpcklbw
sub
lcall
rol
inc
xor
outsl
js
xchg
lds
loopw
fsubrp
lahf
mov
sbb
dec
loopne
cmc
mov
fisttpll
shll
loope
push
add
mov
push
or
and
xlat
adc
push
add
mov
rcrb
icebp
inc
jno
cs
repz
pop
fadds
sbb
push
xchg
lea
stos
jo
xor
insb
xchg
sub
mov
cmp
pop
add
mov
pop
xchg
push
mov
mov
jae
aad
aaa
sahf
scas
andl
ss
mov
insl
pusha
and
lock
adc
sbb
push
fsubl
les
jno
cmp
jle
lcall
lock
loope
inc
cmp
jmp
cmc
add
pop
xchg
cmp
cmc
ds
das
xchg
mov
icebp
test
lret
orb
mov
gs
cmp
push
incl
shll
orl
lock
sbb
dec
ficoml
sti
add
imul
roll
sbb
scas
mov
mov
add
pop
xor
popa
int3
mov
test
push
sbb
sub
in
loope
inc
add
inc
pop
adc
inc
test
ret
jl
cmc
xchg
push
icebp
ja
sbb
xchg
les
push
std
outsb
jle
pusha
imul
repz
sbb
cwtl
mov
sbb
jmp
cltd
popa
clc
xchg
mov
leave
scas
mov
xchg
sarb
fcoms
cli
cmc
addl
cwtl
int3
and
and
jl
mov
iret
jbe
pop
ficompl
fsubs
xchg
add
lds
mov
icebp
mov
ds
ss
mov
ljmp
cmpl
adc
push
or
add
or
movsb
mov
ficompl
add
fimull
add
or
jg
xchg
push
das
jo
mov
push
arpl
dec
insb
aam
aam
xchg
sbb
mov
test
clc
adc
aam
je,pn
xchg
xchg
cmpb
imul
push
jmp
lahf
or
push
sub
clc
xchg
add
fucom
adc
jmp
hlt
xchg
sub
loop
je
gs
push
repz
xor
out
stc
and
xchg
into
aas
or
add
leave
dec
and
in
aad
je
inc
push
push
fwait
stos
popf
jp
enter
or
test
mov
sbb
xor
lcall
cmp
push
in
xchg
cmpsl
not
jle
sahf
cmp
push
pop
into
mov
out
add
sub
ficomps
mov
xor
mov
in
inc
jnp
inc
das
add
xor
das
pop
subl
in
or
add
push
out
push
or
xchg
rcll
inc
fdivs
cltd
stos
adc
jg
cmp
pop
cmp
pop
lock
cmp
push
adc
and
call
push
pusha
in
adc
aaa
lods
repz
pop
add
test
xchg
pop
arpl
push
icebp
ficompl
test
lahf
mov
sarb
roll
ret
lods
das
bound
orb
add
in
inc
push
repnz
dec
mov
andl
bound
sbbl
cmc
add
sub
loope
jp
sbb
xchg
js
lfs
cs
or
faddl
or
leave
sub
dec
jne
cs
adc
arpl
jns
push
lea
dec
mov
cmpsl
les
mov
and
pop
mov
mov
adc
lock
mov
je
addb
or
addb
aas
shll
imulb
cmp
jecxz
faddp
sti
push
pop
fs
in
imul
inc
fildll
andb
mov
mov
cli
fwait
imul
orl
in
jns
fsubl
dec
pusha
add
xchg
cmp
cli
test
in
cmpsb
rcr
inc
mov
gs
add
inc
call
nop
test
je
sbb
push
dec
popf
mov
sbb
jbe
clc
pop
pop
lock
mov
sub
add
or
das
daa
xchg
fwait
ds
mov
sub
push
jno
jne
repnz
repnz
jle
test
push
add
xlat
pop
iret
clc
adc
cltd
adc
in
popf
jle
inc
and
call
mov
mov
inc
mov
test
lret
cmpsl
fucomip
cmc
imul
add
stos
je
mov
pop
mov
cmp
ss
xor
ss
dec
adc
push
push
int3
xor
push
or
insl
mov
lods
mov
xchg
hlt
add
loopnew
sbb
je
fadds
lret
sarl
pushf
push
pop
fsin
dec
mov
aaa
in
iret
xchg
loop
pop
sbbb
pop
pop
or
push
push
sbb
je
push
jo
lret
ljmp
adc
rcll
add
or
or
dec
pop
nop
push
mov
jp
or
mov
lahf
and
adc
repz
hlt
push
push
je
stos
bound
ret
sub
hlt
inc
mov
mov
dec
add
testl
inc
imul
adc
xor
pop
dec
adc
mov
jae
ljmp
out
cmp
push
inc
jp
add
mov
xchg
mov
pop
or
xchg
or
popa
lods
pop
fldt
push
insl
or
ret
or
dec
cmp
xchg
stos
popa
add
inc
call
sbb
lock
dec
mov
cmp
pop
mov
and
mov
movsb
mov
test
hlt
std
andl
pop
mov
outsb
or
xchg
inc
pop
loopne
cmp
lret
adc
daa
loope
fidivrl
and
mov
or
loopne
lods
mov
sub
lahf
subb
arpl
insl
mov
fwait
xchg
or
pop
fs
nop
daa
inc
rcrb
fdivrs
js
test
sub
aaa
ret
hlt
sub
xchg
jbe
mov
push
xchg
or
call
or
sub
enter
sub
pop
dec
in
pop
or
jnp
ljmp
add
pop
sbb
iret
sbb
jbe,pt
loopne
jns
xchg
push
cmp
pop
push
lods
push
or
dec
jne
subb
inc
aas
mov
call
out
mov
xchg
cmp
notl
sbb
ret
jg
loopne
mov
stos
pop
test
lahf
dec
and
xor
xchg
cmp
dec
or
push
sbb
inc
sbb
aas
mov
aam
pop
dec
mov
or
repz
pop
mov
test
dec
push
mov
add
pop
adc
pushf
pop
mov
xchg
cmp
mov
or
and
or
cld
fiaddl
jmp
jp
push
lea
js
xor
sub
rorb
loopne
cmp
call
andb
sub
jbe
jae
rol
rcrb
les
jge
xorb
mov
and
xor
cmp
vmwrite
loopne
mov
fisttps
nop
dec
cmp
inc
mov
out
fpatan
push
add
xchg
jbe
cmp
jle,pn
jp
sbb
std
or
subb
cs
loopne
jmp
imul
mov
call
pop
aad
cld
movsb
mov
lret
js
test
pop
mov
cmp
mov
mov
xor
test
sbb
lods
in
push
jmp
cwtl
sbb
xchg
or
jecxz
dec
sbb
lock
fs
mov
add
out
xor
je
test
xchg
lcall
sbb
gs
sub
outsb
cmpl
adc
sub
and
mov
mov
pushf
shlb
dec
ja
pop
mov
cmp
mov
out
push
outsb
mov
dec
stc
cwtl
mov
aaa
mov
sbb
ret
xorb
sahf
cmp
pop
xchg
add
mov
cmp
cs
add
std
dec
push
cwtl
xchg
dec
cmpsb
cmpsl
mov
out
mov
fadds
cs
shlb
stc
shr
aam
cmp
pop
or
xorb
fisttps
cmpsb
insb
sbb
dec
inc
insb
sub
mov
mov
and
and
aad
dec
pushf
cmpl
push
sub
decl
mov
test
add
bound
cmc
dec
xchg
cmp
dec
icebp
jnp
les
jle
push
xor
pop
pop
dec
pop
sbb
and
cli
movups
mov
loopne
push
xor
adc
fisttps
fisubrs
icebp
inc
lahf
fistl
add
sbb
test
movsl
jl
mov
test
inc
cmp
jmp
jns
outsb
out
mov
scas
xchg
aaa
and
cmp
cs
and
jecxz
scas
lock
xchg
mov
int
and
neg
popf
mov
lds
push
and
imul
js
add
loopne
aaa
stos
mov
aam
sbb
ljmp
cli
pop
mov
dec
adc
pop
popf
inc
jae
mov
push
loop
imul
dec
adc
test
lea
stos
inc
movsb
mov
jge
shl
jl
je
inc
gs
jne
xor
in
scas
xchg
add
imul
roll
lods
xchg
into
or
adc
inc
push
adc
ds
xchg
ds
std
je
rcrl
cwtl
sub
push
cli
inc
mov
jle
xlat
movsb
popf
jb
jmp
and
add
jno
pop
and
or
rcll
lret
inc
loope
call
sarb
mov
leave
sti
adc
lods
push
imul
lods
jns
and
call
xchg
in
popa
adc
mov
js
pop
outsb
es
push
dec
jb
xchg
les
loopne
or
add
mov
adc
loop
das
mov
push
imul
mov
scas
pop
sbb
push
sbb
push
xorb
pop
xchg
cmpsb
mov
ja
xchg
and
je
cmp
ret
dec
sub
movsb
xchg
imul
push
clc
les
add
push
cmc
pop
lods
test
test
mov
jge
or
jmp
dec
jb
dec
mov
adc
cmp
lods
mov
cltd
adc
aam
pop
and
js
dec
jo
out
jle
test
hlt
jl
mov
xor
mov
sub
lret
adc
test
adc
lods
xchg
lock
jge
out
push
cltd
mov
cmp
lahf
push
in
out
xor
lods
popa
mov
nop
add
fdivrs
sbb
fnsave
jecxz
in
out
sti
sub
mov
xor
inc
rcrl
imul
js
mov
push
call
and
iret
popf
xchg
mov
cmp
xor
xor
add
dec
cmp
xchg
jl
andl
jns
std
add
jmp
push
pop
sbb
out
sub
inc
fcmovbe
dec
ret
mov
imul
andb
loope
jne
and
pop
pop
icebp
xchg
in
clc
cmp
mov
cmp
add
mov
hlt
arpl
cld
sbb
sbbb
add
xorb
mov
ffree
shl
xor
cmc
adc
inc
adc
cmp
cli
into
popf
sbb
add
push
add
insb
mov
movsl
icebp
ret
push
and
sub
rolb
lods
clc
ljmp
mov
xchg
mov
add
wrmsr
xchg
sbb
mov
loope
lds
mov
lock
negl
and
outsb
xor
mov
lods
cld
outsb
outsb
cmp
push
or
cs
mov
or
enter
mov
jle
sbb
jb
fimull
adc
add
inc
cmpb
pop
cwtl
fdivs
dec
add
test
mov
or
loopne
frstor
nop
adc
jge
aaa
lahf
int3
and
shrl
stc
sti
sbb
or
cmp
lock
arpl
fidivrl
pop
pop
cs
imul
dec
jbe
popf
fbld
push
scas
test
inc
pop
cmp
aad
pop
cmp
or
loopne
and
xlat
out
mov
rcll
movsb
xchg
mov
nop
or
cmp
mov
or
gs
ja
aad
pop
stos
adc
sbb
ficoml
scas
fistps
loopne
adc
push
aas
cs
loopne
jne
push
adc
nop
sub
adc
xor
or
cmpsb
push
sbb
and
lret
int3
aam
mov
loope
int
pop
daa
cmp
mov
dec
add
lcall
hlt
mov
or
xchg
imulb
sbb
add
and
mov
in
push
jl
sub
mov
je
mov
iret
aaa
jmp
adc
dec
inc
xchg
add
lcall
add
cmpl
fucomp
jge
sbb
mov
rcrb
cmp
scas
cmpl
adc
push
jl
rorl
xchg
sbb
lods
push
sbb
cmp
mov
movaps
mov
or
jl
cld
xorb
or
sub
je
push
loop
jg
mov
inc
adc
push
adc
std
loop
test
aad
ss
fsub
pop
leave
cmc
cld
js
imul
out
fisubl
or
pmaxsw
push
sbb
rolb
pop
shll
or
cmp
lcall
cmc
jle
lock
and
lods
lret
jge
pop
loopne
dec
out
rcr
add
xchg
xor
scas
sbbl
lcall
nopl
fwait
sbb
dec
cmp
dec
dec
out
pop
stc
sbbl
inc
mov
aad
pop
sbb
mov
mov
lea
bound
mov
icebp
jmp
push
out
jae
into
add
mov
aam
lds
outsl
add
fcmovu
mov
call
mov
jne
sub
or
cltd
xor
das
je
mov
mov
xor
jb
bound
mov
dec
je
add
mov
cmp
jo
ret
add
push
add
movsb
pop
jg
clc
dec
je
pop
lea
out
int
daa
xor
cmp
addr16
xor
incl
add
sub
adc
jge
out
in
ljmp
add
rcrb
aam
sub
xor
cmc
adc
loopne
inc
dec
mov
dec
jno
orb
out
fucomi
xlat
xchg
out
or
sbb
imul
and
stc
xchg
sbb
cmpsl
aam
jle
or
dec
push
push
clc
sbb
orl
pop
push
repnz
xchg
mov
pop
gs
in
sub
pop
mov
add
and
xchg
loopne
mov
insb
mov
adc
xchg
pop
mov
mov
aam
out
inc
jo
sbbb
inc
mov
std
adc
pop
nop
pop
je
jno
xor
cmp
adc
jecxz
mov
jo
daa
lcall
xor
push
add
jg
scas
jl
je
daa
jno
enter
push
iret
push
sahf
ja
pusha
xchg
fimuls
pushf
cmp
mov
push
out
jl
scas
outsb
jle
fdivrl
insl
xor
mov
fisttps
stos
mov
js
cmp
mov
mov
ret
in
mov
mov
movsb
iret
mov
mov
xor
clc
shll
int
or
loop
loope
cltd
divb
xchg
clc
loopne
sbb
aaa
shll
negb
movsl
sbb
decb
lcall
repz
add
or
cld
adc
call
and
push
xor
cmp
mov
jge
mov
lcall
ffree
or
cwtl
insb
mov
jbe
push
test
adc
fmuls
add
or
sbb
mov
loope
std
out
add
mov
mov
int
adc
dec
xchg
fcomps
and
mov
incb
mov
dec
sbb
enter
pusha
xchg
inc
xlat
fcompl
cmp
movsb
add
mov
jp
xchg
out
fwait
mov
arpl
lock
and
sub
xor
in
mov
fildl
cmc
cmp
rcrl
add
push
ja
adc
int3
inc
inc
xor
xor
or
pop
sub
add
add
adc
sahf
pop
lods
jmp
pop
ss
rorb
jbe
arpl
out
daa
add
cltd
mov
mov
and
fmul
push
sub
mov
or
fisubrl
lcall
jp
dec
add
or
dec
out
adc
enter
jl
cmp
mov
dec
les
mov
testb
in
test
add
or
xchg
test
test
inc
inc
lea
pushf
data16
dec
sub
inc
das
outsb
sbb
bsr
adc
mov
sub
xor
ret
ljmp
in
or
adc
mov
mov
lret
enter
je
lods
add
inc
outsl
xor
mov
add
mov
mov
ss
and
jle
cltd
inc
sbb
sub
mov
jb
pop
lds
mov
sbb
pop
pop
mov
ss
jmp
test
xchg
cmp
inc
sub
hlt
leave
rclb
iret
cmpsb
cmpsb
lock
aam
mov
and
bnd
xchg
pop
mov
ret
add
loopne
lfs
add
mov
xlat
add
mov
jne
pop
insl
es
jp
bound
scas
leave
jmp
pop
or
jmp
sbb
in
out
ret
add
jae
or
mov
push
adc
das
icebp
xchg
loopne
cmp
mov
jne
inc
test
pop
lcall
xor
push
cmpsb
pop
mov
rcrb
subl
mov
shr
dec
jb
dec
cwtl
out
add
stos
scas
je
adc
insl
test
pop
push
jae
or
jo
cmp
dec
add
sahf
cmpsb
jle
push
rcrb
movsb
cmpsb
inc
and
faddl
pop
mov
sbb
jg
loopne
loop
bswap
push
shll
sbb
insb
loopne
pop
imul
cmp
or
or
ja
xlat
inc
cmp
fdivrl
pop
cli
inc
hlt
mov
insl
adc
pop
or
ret
add
mov
clc
jns
arpl
stos
cld
mov
bound
sbb
cmp
fs
or
cmp
add
call
xor
lds
add
jl
iret
pushl
xor
aas
add
mov
push
or
and
cmp
sbb
outsb
xor
orb
shrl
jmp
fsts
sbb
loopne
add
je
or
sub
jno
push
pop
inc
sarl
insb
les
add
or
dec
cmp
stos
mov
mov
xchg
and
ljmp
lcall
sbb
add
mov
jae
call
daa
cmc
sbb
cmpsl
jecxz
cmp
mov
and
sbb
cli
je
pushf
fucomp
sbb
lock
or
fbstp
jno
mov
sahf
ljmp
lea
lods
cmp
inc
mov
xor
pusha
cmc
dec
dec
dec
in
scas
push
or
mov
jo
lods
or
cmovns
hlt
pop
jle
fldcw
loope
ljmp
mov
jnp
rcl
xor
and
lock
sarl
icebp
and
out
add
aad
in
push
dec
mov
jno
adc
nop
pop
call
inc
nop
in
or
mov
imul
and
lahf
arpl
and
les
out
mov
add
in
loop
mov
mov
xchg
cmpb
pop
mov
pushf
sbb
or
pushf
and
push
leave
jno
mov
mov
ljmp
xchg
and
sbb
jnp
add
adc
lock
aam
lret
out
add
pop
movsl
lret
sar
dec
mov
pusha
loopne
xchg
and
fcoms
jb
cmp
aam
sub
out
xorl
sahf
out
pop
add
cmpsl
and
lock
arpl
loopne
rolb
nop
sbb
push
repnz
push
sarl
andb
std
inc
das
jb
jns
out
fs
test
outsb
jl
scas
and
xor
test
and
mov
test
or
loope
jb
pushf
or
ja
adc
aaa
add
fsubrl
xchg
arpl
push
out
jbe
jae
popf
mov
mov
sahf
mov
push
adcl
or
test
jno
jp
sbb
sub
pop
fwait
adc
lds
ss
adc
push
test
pop
mov
add
sbb
mov
pop
mov
inc
imul
ljmp
lods
push
xor
out
pop
outsl
push
jne
int3
inc
inc
aaa
cmp
inc
mov
push
cli
inc
jp
ljmp
cmc
enter
add
jecxz
icebp
je
popf
subl
jno
xchg
shrb
shl
push
xchg
ljmp
sbb
dec
addl
sbb
fisttpl
cmp
xchg
mov
js
pop
xor
jbe
out
insl
stc
aas
jecxz
jecxz
jmp
cmp
push
mov
xchg
add
jmp
fwait
movsl
mov
xchg
or
fimull
btc
mov
or
out
inc
push
sbb
cmpsb
inc
popf
push
rorb
cmp
mov
mov
mov
jns
xchg
cli
adc
jo
clc
adc
xchg
cwtl
pop
xchg
rcl
cmpb
inc
mov
xor
sti
into
adc
outsb
cmp
add
out
jo
cwtl
mov
mov
test
xchg
es
loop
test
sahf
and
scas
movsl
jmp
insl
mov
jp
mov
or
shl
sub
data16
cmpsl
inc
sbb
xor
inc
pop
push
dec
jge
adc
roll
mov
das
out
aad
xor
in
mov
or
adc
call
imul
stos
sub
mov
cmpl
sub
addr16
enter
adc
inc
pop
or
lea
xor
pop
or
mov
or
adc
out
adc
movsl
or
pop
cli
dec
les
shrl
sbb
xchg
inc
adc
mov
mov
adcb
ret
xchg
xchg
sub
sub
pop
pop
mov
sti
popa
pusha
arpl
lods
dec
lahf
mov
pop
out
pop
fisubrs
adc
scas
outsl
in
movl
movsl
or
sbb
mov
sub
xchg
push
jb
ret
les
ret
jl
aad
hlt
adc
cld
adc
pop
loop
xchg
lock
and
sbb
mov
adc
addb
mov
aaa
push
mov
add
js
and
or
jb
scas
lock
xor
std
or
mov
mov
add
xchg
jne
mov
sub
call
std
nop
movsb
aam
sub
dec
mov
iret
sub
lds
sub
pop
jmp
pop
js
mov
movsl
insb
inc
clc
inc
and
add
addr16
and
cld
aad
mov
jle
pop
sub
cs
js
xchg
lods
bnd
sbb
dec
das
cmpsb
shlb
les
xchg
or
xchg
push
add
mov
fwait
xchg
add
lods
test
fwait
nop
xchg
mov
sbb
add
movsb
int3
arpl
dec
imul
adc
jbe
movb
add
or
loop
jle
mov
mov
aaa
rcrb
xchg
out
xlat
scas
call
sbb
pinsrw
shrl
std
jecxz
and
gs
mov
sti
and
in
lds
jecxz
and
push
into
or
mov
jbe
hlt
jnp
jnp
scas
in
push
aad
and
fistpll
jo
mov
loopne
dec
fists
add
sbb
lcall
pop
das
movsb
stos
mov
inc
repz
sbb
adc
sub
idiv
or
mov
cs
jmp
stc
mov
adc
sbb
aam
ja
push
int
push
cmp
dec
or
adc
push
jge
pop
cmpsl
add
and
adc
add
inc
sub
xchg
vfrczps
and
shrb
sbb
aas
hlt
or
mov
call
mov
pushf
jo
xchg
popf
dec
sbb
add
testl
lahf
and
xchg
mov
push
add
inc
and
fstpt
sbb
jecxz
and
push
xchg
sub
ss
jne
leave
mov
adc
mov
sub
bound
rcrb
push
add
or
adc
shl
shll
lahf
test
test
scas
movsl
xchg
outsb
push
or
pop
add
cli
cmp
ss
jo
rorb
in
fsts
pop
test
push
and
dec
cmp
jb
cs
rcrl
mov
je
adc
lcall
add
fildll
adc
and
idivb
add
xor
or
dec
pop
stos
dec
lea
adc
aam
sbb
pop
pop
pop
clc
popa
push
mov
je
test
in
dec
arpl
divb
jle
sbb
xor
les
int
fdivp
loope
mov
mov
in
mov
stc
pop
pop
jno
fsubrs
lret
loop
ret
xchg
push
scas
enter
out
xor
dec
xor
push
sub
loope
inc
stos
sub
test
adc
cli
loopne
shrb
call
cmp
mov
leave
push
in
add
push
mov
lahf
dec
out
xor
movsl
push
bound
dec
push
mov
push
fldl
mov
inc
orb
push
dec
out
xchg
ja
mov
push
lahf
test
lods
sub
fidivrs
ffree
jbe
in
add
dec
jo
rcl
imul
jl
mov
mov
popa
mov
fs
push
aaa
inc
push
fnsave
pop
imul
fistpl
cmp
and
fdivrl
jo
sbb
mov
cwtl
xchg
loopne
sbb
sbbb
ss
push
xchg
cmp
lock
mov
and
mov
test
addl
loope
lret
inc
add
outsb
lds
dec
xchg
mov
jae
loopne
xor
xchg
popa
flds
ds
and
ret
ja
stos
movsl
and
in
or
dec
mov
enter
lret
mov
das
stos
test
sbb
add
out
or
dec
insl
aam
fists
adc
xchg
dec
pop
add
sub
xor
mov
and
jnp
mov
dec
jl
loop
enter
out
mov
roll
adc
xchg
ljmp
mov
mov
cmp
hlt
sbb
andl
inc
addr16
outsb
ss
cmc
jl
test
push
cmp
sbb
xlat
mov
ficoml
xor
lock
pop
push
movsl
in
fstps
lea
xlat
inc
sbb
es
je
push
sti
shll
loope
lock
or
ljmp
add
js
jp
fdivrp
adc
push
and
imul
mov
ljmp
enter
xchg
cmpsb
call
mov
icebp
adc
push
rolb
xchg
cli
xor
in
and
or
push
adc
sbb
popa
jb
into
push
mov
cli
mov
pop
rorl
sbb
test
lret
outsl
loop
lods
outsb
lret
scas
orb
movsb
jl
cmovbe
mov
pop
or
and
sbb
and
push
dec
inc
add
cmc
jl
leave
test
add
jns
xchg
mov
and
loop
cmp
std
adc
sbb
or
ja
mov
inc
cli
pop
cmpb
adc
xor
adc
scas
jno
xor
xor
lods
cmp
test
add
fnstcw
movsb
push
movsl
xchg
fwait
add
in
loopne
test
mov
add
fs
sub
pop
jns
in
mov
clc
and
scas
xchg
repnz
lods
aam
push
stc
out
aad
cmpsb
push
jp
dec
in
negl
nop
scas
in
out
mov
adc
dec
ja
cmp
in
cmp
jp
add
loop
or
or
and
push
jnp
mov
push
sbb
add
push
dec
pop
add
cmp
subl
sbb
inc
sub
mov
scas
rcll
jae
or
fiaddl
push
stos
mov
or
pop
dec
pop
fs
cmp
pop
inc
add
mov
nop
sub
and
mov
or
inc
jbe
scas
pop
inc
rolb
xchg
jo
nop
roll
xchg
push
cmpsb
test
orl
loop
pushf
or
push
lcall
rol
stos
cmpl
mov
test
ljmp
add
rclb
push
fimull
xchg
pop
lahf
push
pop
jmp
sbb
jbe
mov
fistpll
or
lods
ds
or
sahf
lds
rol
push
add
or
mov
push
psubsb
and
ja
inc
shl
loop
sbbl
mov
mov
enter
mov
fstps
mov
imul
iret
aam
rorl
pmullw
loop
insl
rolb
mov
jl
rcrb
nop
orl
dec
rolb
add
inc
fmull
in
rcl
dec
mov
mov
icebp
add
js
ljmp
fistps
dec
sbb
xchg
ds
loopne
lods
andb
adc
js
adc
movsl
lahf
push
jecxz
cmp
or
pop
lret
nop
out
mov
adc
or
es
xchg
nop
or
mov
mull
pushf
fs
pop
out
arpl
sbb
fwait
pmulhuw
pushf
push
insl
dec
popa
sbbb
sub
jne
adc
sub
sub
mov
dec
xor
sti
xchg
adc
sbb
mov
fwait
jmp
xchg
rorb
imul
xor
sub
lcall
test
add
gs
icebp
adcl
mov
cmp
mov
mov
std
mov
sbb
mov
lahf
scas
sub
cmp
in
addr16
or
or
cmpsb
dec
cli
arpl
lds
testl
pop
or
mov
dec
lods
inc
cmpsb
sbb
xor
pop
and
stos
mov
rcrb
icebp
push
inc
aam
fsubrp
fdivrl
das
push
sbb
mov
hlt
jecxz
in
pop
sub
lods
cli
and
std
pusha
or
nop
dec
shll
or
jo
push
sub
lds
adc
pop
pop
xchg
sub
add
sub
data16
imull
or
daa
movsl
jmp
mov
dec
das
mov
stos
into
xchg
cwtl
xchg
dec
mov
int3
mov
push
add
jno
pop
roll
daa
jge
mov
mov
adc
loope
out
iret
inc
pusha
jg
mov
lret
mov
mov
adc
shrb
int3
sub
xchg
pop
or
sub
jb
xchg
lock
pop
iret
aam
hlt
jno
jno
jp
jmp
sahf
adc
jge
push
insb
mov
cltd
jl
lock
lock
scas
xchg
imul
inc
popf
mov
cmp
lds
add
sub
movl
nop
aad
mov
lods
xor
ljmp
nop
fadds
pop
int
xchg
mov
mov
and
add
pop
xchg
stos
into
pop
adc
addr16
push
int3
cmpb
push
je
adc
jge
dec
flds
fildl
cmc
xchg
and
cli
pop
push
fisubl
add
daa
icebp
test
mov
add
and
imul
inc
cld
movsl
or
jmp
add
js
add
pushf
test
sbbl
sbb
adc
test
mov
or
iret
sub
inc
push
or
shrb
sbb
mov
outsl
mov
iret
cmp
cltd
mov
movsb
mov
sti
sub
popf
pop
inc
lock
loop
pop
in
mov
cltd
fwait
jbe
jno
xchg
fisubrl
ljmp
sbb
dec
jecxz
int
cmp
dec
scas
or
mov
fstps
leave
lods
mov
cmp
mov
inc
adc
or
xor
jnp
mov
imul
rolb
andb
pop
shlb
lea
out
movsb
fldcw
movb
mov
mov
into
lock
inc
cwtl
lds
jp
clc
mov
jge
cmp
adc
fldt
sbb
jns
jae
call
adc
clc
mov
lods
mov
or
aas
int
sub
scas
or
xorl
add
push
xor
aad
adc
or
push
in
lcall
inc
orb
xchg
js
lea
mov
ja
cmp
add
mov
fldenv
cs
js
lock
jecxz
dec
mov
andb
push
fiadds
lock
fstpt
push
xor
loop
adc
add
orb
test
sbb
lcall
inc
les
sarl
pushf
jg
push
xor
fimull
push
fimuls
jns
in
sbb
sbb
loopne
jle
sbb
xor
pushf
add
shl
or
fs
daa
idiv
dec
sub
insl
inc
xor
xor
icebp
mov
int
ljmp
xor
sbb
pop
mov
mov
push
popa
test
sahf
mov
sahf
mov
fwait
loopne
cmp
and
mov
add
xchg
dec
cltd
negb
mov
mov
repz
push
fsub
test
pop
arpl
or
out
xor
push
cmp
and
or
xor
xchg
loopne
mov
sub
test
add
daa
sbb
pushf
sbbb
call
movsl
cltd
cmp
loopne
arpl
jo
loop
scas
lea
pop
and
jo
mov
imul
pop
loopne
cmp
jmp
fldt
push
mov
call
and
shlb
cmpsl
outsb
aas
hlt
mov
pusha
or
insb
xor
cmp
mov
pop
add
aam
pop
scas
mov
dec
imul
add
dec
cltd
pop
mov
ja
stos
icebp
inc
in
stos
pop
adc
lcall
subb
mov
mov
sub
fwait
gs
fnsave
pushf
xor
sub
lcall
aad
movsb
pop
push
jb
add
outsb
imul
xchg
fisttpll
out
hlt
sub
jmp
cmp
sub
aad
outsl
add
dec
dec
cld
xchg
xor
fistps
xor
mov
out
mov
add
inc
in
add
subb
push
aaa
dec
adc
mov
jg
push
pop
pop
loop
dec
push
loopne
push
fnstcw
adc
sbb
push
pop
repz
cwtl
in
pop
fstps
jle
dec
and
push
xchg
iret
add
push
and
lcall
imul
jbe
pop
xchg
pop
mov
mov
pop
sar
call
adc
ljmp
push
jecxz
lcall
add
mov
pop
or
lods
add
sub
jecxz
fwait
int
and
adc
das
mov
add
dec
out
xchg
in
xchg
mov
lds
mov
pop
push
xor
dec
cmp
pop
ds
fsubrl
es
test
clc
test
jns
repnz
aaa
adc
add
pop
jp
and
cmovo
sub
xor
aad
test
les
lods
or
sub
cltd
push
fs
push
mov
mov
inc
in
sbb
ret
push
ret
clc
adc
enter
mov
xchg
shlb
ds
or
test
movsb
add
psubsb
cmp
sub
xchg
inc
call
add
sahf
mov
inc
mov
or
cmp
out
pop
mov
int3
sub
push
test
sbb
add
sub
sarb
mov
xorl
jmp
out
jge
mov
shl
add
adc
push
shll
pop
cmp
sbb
cli
in
scas
dec
iret
xchg
movb
xchg
push
bound
push
test
cmp
data16
sbb
sbb
popf
jg
in
stos
outsl
or
mov
push
pop
imul
sbb
in
push
ja
push
enter
push
pop
popf
adc
mov
sbb
loope
fnstenv
cld
inc
xchg
xchg
xor
shrb
fildl
sub
push
scas
pushl
faddl
gs
xlat
lcall
rorb
ret
xchg
add
outsl
lcall
hlt
fiaddl
hlt
pusha
xchg
jne
gs
adc
sbb
jge
mov
cmpsl
fistl
mov
cmpsl
in
mov
fildl
xor
in
insl
les
les
xchg
out
inc
sub
mov
orl
adcl
ss
jae
insb
nop
cmp
jge
aaa
mov
add
xchg
fucom
in
daa
push
pop
jg
flds
movl
xchg
sub
or
inc
or
or
enter
or
add
dec
sub
and
dec
mov
in
push
sahf
rcrl
xchg
sbb
lods
mov
adc
inc
repnz
jle
arpl
div
repnz
jnp
mov
adc
mov
arpl
lahf
mov
imul
cmp
inc
or
cmpl
loope
cmp
rcll
scas
cmc
and
push
mov
xchg
divb
mov
push
outsl
in
push
cmp
push
jp
sbb
push
leave
ret
dec
ret
rorl
dec
sub
or
xor
test
sub
loope
roll
mov
mul
push
pop
nop
dec
std
rorb
inc
cmp
notb
fistl
mov
mov
out
insb
push
dec
mulb
add
cmpsl
in
loopne
test
dec
add
call
mov
mov
inc
push
stos
cmp
shl
loopne
sahf
push
scas
mov
jmp
mov
or
xor
mov
iret
jnp
or
call
mov
cmp
xor
jecxz
mov
pop
fistl
call
arpl
cmp
push
dec
adc
test
mov
mov
stos
aam
inc
add
lahf
push
dec
cwtl
lods
mov
movsl
push
orl
pop
add
int3
add
fnstsw
rclb
adc
test
mov
sbb
and
notb
mov
aaa
add
jp
adc
and
jge
movsb
fs
in
pop
popf
add
xor
sbb
fwait
dec
mov
sbb
insl
outsl
je
lret
xchg
inc
pop
call
and
pop
adc
xchg
inc
or
adc
ficompl
nop
cwtl
sbb
nop
mov
push
loope
jnp
or
mov
mov
insb
pop
push
sub
jns
sbb
out
jno
or
add
addr16
into
popa
neg
mov
test
adc
dec
jbe
mov
in
mov
and
in
in
scas
xchg
fdivrl
mov
push
or
mov
or
mov
mov
xor
hlt
subl
adc
xchg
insl
js
cli
jne
jmp
sarb
mov
jo
push
adc
aad
lock
adc
fsub
xchg
xor
inc
insl
aas
sbb
and
dec
sub
inc
scas
cmp
test
test
push
aad
imul
mov
nop
sub
orl
int3
outsb
scas
mov
or
mov
dec
je
lock
in
je
insb
leave
loopne
jno
sub
push
add
jp
loopne
cmp
jmp
cmp
and
shrb
inc
arpl
mov
adc
cmc
lea
xchg
popf
fsub
mov
and
pop
popl
pop
pop
mov
lods
fwait
mov
cmpsl
dec
adc
test
add
xlat
icebp
or
out
add
push
mov
ljmp
mov
inc
sub
cmp
push
jg
sbb
cmpsl
outsb
stos
mov
int
icebp
inc
nop
cmovge
daa
rclb
mov
inc
lret
clc
push
gs
mov
cli
imul
stos
dec
push
mov
lods
and
testb
fisubrs
dec
movsb
aad
pop
iret
ss
fstl
sbb
xchg
lds
cmp
push
cmp
ficompl
xor
jns
push
hlt
mov
stc
int
inc
clc
in
mov
xor
pop
xchg
mov
repnz
ljmp
xchg
imul
in
aad
ret
fnstsw
sub
cmc
pop
repnz
movsl
dec
jae
push
adc
imul
dec
mov
mov
ljmp
idiv
xlat
mov
push
jo
sbb
cwtl
push
dec
test
push
cli
xchg
mov
add
push
jl
xchg
jge
stos
daa
sub
push
das
mov
movsl
out
lds
mov
mov
sub
clc
xchg
mov
push
outsb
mov
and
dec
pop
repz
sahf
mov
icebp
push
adc
cmp
add
or
jle
jp
inc
cmpsb
and
imul
jb
fstpl
or
or
sub
rolb
adc
push
cli
loopne
stc
mov
arpl
aas
inc
push
mov
jp
nop
jb
pop
daa
and
daa
jl
and
or
or
cmc
and
cmp
pop
xor
dec
out
not
sbb
mov
loopne
dec
movsb
out
clc
les
xor
mov
pop
in
and
adc
push
sbb
andb
js
mov
je
jl
mov
fsubr
es
aas
lcall
mov
int3
mov
fimull
int
pop
add
mov
popa
ss
call
jb
sbb
cli
xor
pop
jno
lea
xor
jae
shrb
out
or
adc
sbb
movsb
add
test
sti
and
jge
push
xor
or
inc
xor
mov
push
and
out
out
adc
outsb
ljmp
nop
mov
das
push
ficoms
xor
ja
daa
es
jb
scas
cmc
dec
setbe
fldcw
add
ds
xor
es
aam
movsb
imull
lcall
sub
adc
lds
xor
jns
jecxz
mov
jo
push
mov
mov
xor
lcall
cmpsl
jecxz
ret
in
xchg
sbb
mov
clc
mov
pop
nop
inc
jae
je
xor
xlat
push
adc
push
push
sub
sub
cltd
jle
push
mov
stos
popa
mov
xor
shr
sbb
mov
lret
add
je
jge
jae
cli
aam
int3
sbb
cld
mov
fs
int
andb
cmp
jne
icebp
sti
cmpsl
lds
adc
inc
loope
adc
cmp
fsubs
ds
mov
lahf
pop
shll
xor
mov
push
js
cmp
mov
adc
shlb
jae
mov
call
xchg
stc
es
frstor
sahf
cmp
insb
adc
call
sbb
inc
into
push
shlb
add
movb
cld
out
mov
idivl
outsb
addr16
mov
fdivs
aad
call
xchg
lea
lds
push
andb
or
xor
dec
js
mov
push
js
mov
inc
shlb
push
mov
jg
lods
push
loope
add
push
fwait
lods
inc
add
lcall
imulb
mov
std
adc
pop
scas
pop
fwait
stc
mov
ret
jmp
test
push
jbe
std
xchg
pop
test
ljmp
stc
and
mov
pop
jp
sbb
add
cli
pop
lock
jmp
xchg
xor
inc
or
push
push
or
push
or
xor
enter
mov
dec
xchg
add
mov
mov
popf
jle
push
std
dec
xchg
ret
push
or
icebp
cld
fcom
cwtl
rcrb
sbb
fsubs
and
lea
mov
or
sbb
imul
inc
loopne
add
or
mov
sub
aas
test
sbb
arpl
push
dec
add
dec
or
push
dec
lcall
push
data16
or
scas
orb
fldcw
and
enter
ficomps
fsubrs
cmp
into
mov
or
push
mov
pop
ret
pop
lret
add
mov
mov
out
xlat
movsb
or
cwtl
mov
js
add
mov
aam
push
cltd
inc
dec
hlt
and
popw
insl
fidivs
sub
out
int3
nop
and
push
jp
add
mov
mov
xchg
inc
ss
daa
and
int3
and
mov
pop
movsl
cmc
out
aaa
in
test
loope
inc
jge
push
leave
outsb
push
call
movsl
pop
imul
mov
pop
lock
mov
dec
dec
dec
cmp
cmc
add
mov
xor
sub
pushf
pop
push
adc
and
jae
mov
nop
xchg
loopne
xor
dec
scas
sahf
mov
sbb
mull
sar
ds
dec
pushl
mov
in
pop
xor
sbb
enter
stos
add
adc
stos
fldcw
mov
jbe
ret
bswap
and
loope
push
loop
mov
repz
dec
rol
into
pusha
adc
fs
mov
dec
sbb
ljmp
inc
push
fimull
in
lahf
ja
adc
xor
pushf
or
fwait
mov
xchg
cmp
xlat
es
mov
stos
pop
inc
stos
lods
iret
jl,pt
push
mov
data16
imul
pop
xchg
filds
popl
lret
xor
xchg
jp
cmp
jne
pop
mov
cmc
xor
add
add
mov
out
lahf
xchg
lret
pop
std
les
js
insb
insb
mov
lock
in
clc
cltd
inc
mov
lods
into
xlat
inc
popf
and
lea
aam
dec
call
test
fidivs
clc
adcl
mov
xorl
jae
xchg
and
in
pushl
lea
sbb
or
pop
shrb
push
pop
sbb
loope
mov
aam
mov
rorl
aas
dec
les
in
dec
scas
add
out
pop
cwtl
xor
jae
and
loopne
aam
sbb
xor
mov
mov
les
jo
mov
fldcw
and
aad
sti
scas
and
fs
fcmovbe
fdivr
pop
dec
xlat
add
cli
xor
lock
xor
outsb
add
inc
sbb
clc
mov
rcrl
sub
hlt
mov
aam
int3
subb
dec
test
push
popf
das
hlt
lods
bound
or
sti
pushf
mov
dec
inc
js
push
das
popl
push
cmp
adc
or
testl
push
or
xchg
cmp
and
push
cmp
lahf
sub
push
inc
fucomip
xor
sbb
mov
movsl
daa
inc
insl
dec
popa
mull
sub
ds
xor
orl
cmc
and
adc
pusha
sti
cmp
pop
add
sub
adc
lock
icebp
mov
cmp
hlt
jbe
or
andb
cmp
fidivrs
and
cmp
outsb
repz
jle
push
pop
inc
xor
fnstsw
pop
outsl
add
scas
fildl
das
sub
inc
mov
cmp
dec
loope
sub
pushf
mov
xlat
push
jecxz
push
inc
xor
push
mov
inc
inc
sbb
fildll
adcl
jae,pt
sti
mov
ret
add
scas
xchg
pop
sbb
lods
sarb
daa
inc
pop
call
push
orl
add
stos
scas
ret
mov
cmp
sbb
loop
push
movsl
idivl
cld
or
js
push
mov
jne
sub
dec
and
imul
loope
incl
or
mov
int3
adc
or
leave
jge
xchg
jo
jmp
rorb
push
pop
insl
cmp
loop
xor
pop
aam
cmp
mov
sub
jle
pop
sbb
cmp
out
sbb
push
adc
push
out
dec
je
sahf
xchg
push
loope
pop
js
ljmp
jg
jnp
lret
push
fnstsw
push
iret
and
mov
sbb
les
jbe
add
or
jmp
and
mov
or
xor
pop
cmp
popf
sbb
xchg
lcall
cli
cli
fcomps
sub
or
in
scas
and
ja
pusha
adc
in
adc
ss
div
out
pop
pop
dec
or
imul
pop
mov
cs
test
call
bound
in
add
daa
jg
mov
sub
mov
insb
fwait
das
lods
rolb
xchg
fimull
loopne
cmp
mov
test
movsb
into
mov
xchg
imul
fldt
insb
shll
cld
into
mov
js
cmc
dec
pop
daa
imull
adc
das
fiaddl
cld
bound
xor
cld
movsl
dec
jo
push
jecxz
aas
out
sbb
jno
stos
pop
testl
repnz
jg
sbb
cmp
cmp
and
xchg
lea
and
pop
popa
mov
lret
sahf
push
jge
sbb
into
mov
dec
shrl
or
mov
mov
inc
mov
jg
stos
push
imul
jb
sahf
push
adc
mov
clc
xchg
in
mov
add
adc
pop
incl
push
add
jo
inc
mov
jl
ss
push
ret
loopne
into
nop
das
idivb
sbb
inc
jp
iret
jb
outsl
mov
rcr
nop
mov
adc
dec
cmp
jo
repnz
cmp
insl
in
add
js
add
int3
cmpsb
bound
inc
test
xor
out
out
sbb
pop
inc
dec
jle
jmp
pop
mov
pop
mov
je
xor
xor
push
dec
or
rol
int3
cmpb
add
ffreep
push
xchg
pushf
adc
fildll
dec
jno
popa
aas
pop
fsubrs
add
movsb
adc
and
pop
stos
std
sbbl
cli
test
in
mov
sahf
jo,pt
push
shll
nop
push
pushf
add
xor
push
and
stc
dec
outsb
icebp
jno
jb
out
movsb
mov
sbb
mov
pushf
add
xchg
outsb
js
pushf
stc
pop
or
fisubs
or
add
js
test
add
movlps
sub
adc
xlat
test
pop
insl
rcr
std
ljmp
testl
test
xchg
and
movsl
inc
xchg
cwtl
dec
jns
jp
sbb
pop
push
xor
mov
push
jge
inc
aas
or
cs
mov
push
stos
jae
out
jg
cltd
js
clc
pop
dec
jle
pusha
xor
and
add
je
gs
push
rorb
cld
shrl
pop
clc
test
xor
add
ds
cmp
inc
lar
mov
bound
ljmp
pop
push
repz
jecxz
cmp
outsb
rcl
jne
ret
mov
mov
pop
mov
jb
jbe
jge
sbb
add
mov
call
shr
dec
or
ljmp
inc
and
dec
cli
mov
imul
or
sbb
mov
push
add
add
aas
cmpsb
and
cmpsb
pinsrw
adc
es
mov
es
aad
lahf
mov
dec
add
rcr
aas
mov
sub
stc
xchg
pop
test
push
popf
rcrb
loope
jmp
xorl
adc
mov
fsub
add
push
les
imul
or
xor
shl
or
inc
stc
xchg
xor
dec
mov
dec
ret
fwait
pop
sbb
push
or
inc
ret
out
mov
jecxz
outsb
xchg
dec
sbb
sbb
inc
lods
outsb
in
jno
stos
shll
adc
and
jge
adc
dec
jae
jno
int3
mov
bound
aas
cmp
stos
inc
test
or
ret
lret
imul
rorb
fiadds
enter
clc
aam
inc
and
adcb
ja
add
fdivp
mov
nop
stos
dec
stos
jg
inc
or
pop
leave
mov
mov
outsb
sarb
sub
mov
xorb
and
jle
popf
cli
cmpsb
xor
je
xor
lret
jb
fcmovu
mov
test
xchg
leave
cmp
das
xchg
mov
inc
xchg
mov
std
sub
cli
xchg
jp
xor
push
aaa
incl
pop
insl
pop
cmp
loopne
popa
or
xchg
pop
fbld
xchg
and
loop
sbb
mov
lea
int3
shr
fdivrl
adc
testb
mov
pop
mov
xor
int
pop
push
jne
lods
mov
cwtl
out
xchg
push
stc
test
movsb
testb
aam
loop
mov
pushf
pop
sub
rclb
lods
addl
sti
hlt
inc
mov
shll
clc
or
mov
jl
mov
jmp
xchg
push
incb
inc
test
sbb
lods
push
mov
cli
jne
inc
lret
cli
je
push
and
or
nop
add
sbb
push
pop
push
mov
test
out
mov
movsb
es
das
lcall
hlt
imul
push
inc
or
rcrb
loope
fwait
rol
sub
mov
add
mov
xchg
fnsave
loopne
and
mov
bound
loope
jns
mov
outsl
out
sahf
movsl
dec
jecxz
add
xor
pop
enter
dec
movsb
xorl
inc
add
push
sbb
lahf
push
movsl
mov
sbb
adc
add
mov
or
roll
lods
lret
in
jno
and
lds
add
pop
inc
push
mov
add
xchg
cwtl
cli
jge
adc
into
bound
sub
push
and
push
mov
arpl
mov
pop
mov
fisubrl
popf
ret
rcrb
inc
mov
push
push
scas
decl
lret
sbb
cwtl
add
or
inc
or
jo
std
aaa
cwtl
dec
sbb
and
decl
adc
lret
daa
push
movb
insb
jp
arpl
mov
inc
ficomps
mov
pushf
out
data16
inc
lock
jg
sarb
adc
fisttpl
lahf
gs
pop
lock
out
test
push
insb
cmpsb
mov
push
cs
add
inc
aam
push
adc
call
and
cmpsl
lcall
insb
vmovddup
xchg
out
movl
adc
lcall
adc
das
adc
imul
cmp
ljmp
dec
cmp
mov
lods
lcall
jge
cmp
sub
int3
push
test
or
sub
jb
data16
adc
adc
mov
sbb
add
pop
xor
jle
stos
aam
pop
testb
pop
cwtl
mov
fiadds
push
rorb
sub
sbb
adc
sub
add
or
mov
lods
add
fsubrs
adc
adc
and
loopne
mov
ja
inc
dec
adc
push
mov
jle
mov
ljmp
scas
cltd
test
or
dec
dec
or
daa
mov
or
in
dec
add
cmp
int
das
dec
ljmp
mov
das
mov
jg
shrb
pushf
mov
mov
repnz
mov
popl
ss
or
hlt
xor
nop
adc
push
and
fwait
mov
movsl
test
xchg
push
add
in
add
jnp
dec
xor
lock
aaa
add
in
or
dec
scas
fcomps
add
aam
shlb
and
fidivl
sbb
stc
int
lcall
xor
dec
ss
bound
sbb
pop
in
mov
into
dec
dec
sbb
rol
sub
rcrb
push
insb
mov
sub
lock
adc
ret
lds
cld
jb
insb
inc
in
inc
and
adc
jnp
jp
stc
lea
mov
pusha
add
xchg
out
and
xor
je
mov
cwtl
adc
neg
scas
adc
fldt
fs
adc
cmp
fnstcw
pusha
das
ret
jp
inc
pushl
ds
push
xor
mov
adc
addr16
pusha
or
dec
pop
xchg
xchg
ja
je
jmp
sbb
fcoml
push
or
dec
ret
ret
scas
push
outsl
int
inc
add
fsubrs
arpl
xchg
out
jecxz
jmp
mov
movsb
mov
mov
repnz
js
es
inc
pop
test
sbb
je
sub
ja
test
add
ljmp
shlb
push
inc
pop
sbb
and
enter
mov
and
fistps
mov
mov
les
repz
stos
and
cld
aam
nop
dec
or
shrb
or
mov
pop
cli
xor
jno
and
mov
mov
or
jle
mov
mov
sarb
push
lds
fsubrp
fsubrs
outsl
or
push
inc
jo
or
mov
stc
inc
sub
leave
push
cmp
jg
add
cmc
jecxz
and
sub
xor
hlt
add
mov
repnz
cld
pop
loopne
push
ljmp
pminub
test
test
outsl
out
movsl
lods
add
sub
aas
ds
jb
push
repz
xor
test
add
fadd
scas
inc
dec
repz
lods
clc
roll
mov
mov
insl
pop
lock
icebp
adc
shll
testb
sbb
scas
add
xchg
add
aas
dec
aas
in
xchg
sbb
xor
add
mov
addr16
inc
test
aam
mov
loopne
inc
pop
frstor
daa
cltd
adc
dec
and
xorb
icebp
mov
fwait
mov
and
pop
push
js
pop
fs
xchg
push
sub
jl
loope
call
bound
push
mov
cmp
ret
test
mov
sbb
fdivr
xchg
jo
testl
push
arpl
dec
mov
push
loop
or
cmp
xchg
hlt
sbb
or
test
adc
fiadds
xchg
rclb
fildll
add
rolb
fldl
in
fdivrs
sbb
mov
xchg
movsb
mov
rorl
pop
in
sub
sbb
mov
push
add
loop
or
js
imul
lret
inc
pop
xchg
add
enter
push
fwait
cli
cmpb
push
test
cmc
or
sub
cld
cmp
fstl
pop
pcmpeqb
inc
push
adc
aaa
lock
add
in
sbb
add
icebp
xchg
les
aaa
test
loopne
enter
xor
ret
inc
sub
and
xor
mov
and
sub
scas
imul
pop
xchg
pop
fs
aas
call
adc
cmp
mov
pop
push
cmp
insb
jae
scas
test
out
inc
push
mov
push
xchg
inc
jne
arpl
test
cmp
or
inc
loopne
push
push
shrb
push
hlt
paddq
mov
dec
sub
fcoml
push
inc
inc
dec
jecxz
shrl
ret
jbe
shrb
dec
in
push
ja
mov
mov
push
xchg
aam
adc
lds
mov
xor
or
and
mov
addl
fists
or
xchg
and
and
mov
dec
mov
out
incl
push
push
adc
mov
pop
pop
pop
pop
inc
loopne
lds
inc
xor
mov
mov
jb
into
jecxz
pop
sub
fs
repz
shrb
sub
mov
ss
jl
idivl
mov
mov
push
xorl
cmpsb
adc
sbb
dec
or
out
and
addb
mov
pop
shrb
jle
mov
fisubrl
loop
adc
xchg
pop
scas
sub
inc
sbb
std
jle
cmp
fwait
and
push
and
aaa
xchg
shll
stos
in
mov
push
call
lea
test
je
add
jne
push
cwtl
push
dec
jnp
or
add
mov
or
aaa
or
pop
and
push
cmpsl
mov
test
jp
mov
adc
cmp
test
mov
dec
adc
push
mov
cmp
xchg
cmp
jmp
jle
xchg
std
lods
xchg
jle
jb
xchg
ss
daa
pop
jo
hlt
shll
in
and
sahf
sbb
xchg
outsb
ds
loop
xor
ret
mov
and
nop
ficoms
push
fs
or
cmp
lret
mov
xchg
sahf
aad
mov
push
fwait
xor
std
imul
mov
mov
add
mov
rorl
inc
lock
dec
dec
fwait
xchg
push
adc
and
jno
std
test
nop
lds
sbb
stc
cs
xchg
test
sub
and
ljmp
jns
lods
andl
inc
adc
sbb
fistpl
or
mov
cmpsb
and
xorl
xor
mov
negb
fsubrs
mov
inc
ds
shlb
sbbl
pop
push
adc
inc
bound
add
cmpsl
pop
shrb
mov
popl
and
fdivrs
or
add
inc
aaa
jle
fwait
dec
in
mov
inc
sub
add
aas
sub
icebp
pop
outsl
add
mov
mov
jp
cmp
int3
cli
lret
jne
mov
xor
xor
loopne
or
pusha
dec
cmp
mov
je
imul
ja
add
mov
outsb
ss
jecxz
add
add
loopne
mov
hlt
pop
jecxz
sbb
xchg
shl
in
mov
rcrb
dec
jge
fwait
scas
mov
lds
rorb
jo
sbb
popa
add
arpl
mov
mov
mov
xchg
into
cwtl
push
movsl
outsl
jg
push
in
in
lret
mov
jo
adc
hlt
outsl
xchg
mov
mov
cmp
data16
sub
in
sub
subb
jge
add
or
pop
jg
js
rorb
and
adc
sub
mov
subb
jbe
das
subl
dec
mov
cmp
push
loop
mov
xchg
int
mov
fisubs
dec
insl
pop
sbb
adc
jnp
lock
sbb
inc
mov
aad
in
neg
adc
lcall
fwait
inc
clc
xchg
cltd
fs
ds
subb
add
dec
mov
mov
loopne
es
lret
sbb
mov
inc
dec
xchg
xor
gs
jecxz
ja
mov
push
mov
les
fldl
fsubrl
adc
mov
cmp
dec
bound
pop
out
movsl
or
sahf
xor
flds
jp
and
jg
outsb
push
cli
out
ja
jle
call
inc
add
or
dec
pop
mov
leave
jle
push
and
loope
mov
je
push
je
fsubrs
mov
xor
in
fimuls
fcompl
call
push
mov
mov
mov
das
xchg
scas
cwtl
or
inc
icebp
dec
into
aaa
out
mov
cvtps2pi
xor
pop
shrb
mov
push
and
addr16
mov
fmul
in
aas
or
pop
orl
push
lcall
sub
hlt
aas
fcomip
inc
test
mov
and
or
test
adc
loope
inc
scas
xchg
fld
outsb
pop
push
pop
hlt
fcomps
push
jge
iret
cmp
push
test
push
jnp
int
clc
add
mov
into
cmp
sub
pop
push
push
fcompl
sbb
cmp
lods
pusha
insb
jmp
bound
mov
inc
decb
adc
and
sub
stc
cmp
das
pop
outsl
outsl
rol
add
lahf
cmp
add
dec
loope
inc
aad
adc
inc
pop
push
inc
clc
push
mov
pop
andb
sub
leave
arpl
and
ja
xor
sbbl
xchg
shrb
notb
xchg
adc
mov
mov
push
xchg
icebp
nop
jl
jl
push
pushf
dec
cmp
sahf
mov
mov
mov
push
out
push
push
sbb
mov
adc
bound
or
rcrb
pusha
sbb
ljmp
pop
dec
push
pop
or
pop
adc
add
adcl
outsb
ss
lock
dec
xor
xor
lea
fcmovnu
jg
jns
test
aad
xor
ficompl
xchg
add
test
sbbb
pushf
sbb
and
cli
in
loop
add
popf
push
testb
dec
mov
nop
sub
or
cwtl
jle
mull
fmul
cmpsb
push
sbbb
sub
add
gs
mov
push
outsb
push
jnp
xchg
jg
loope
jle
ds
adc
jb
mov
les
lahf
inc
xlat
out
mov
xor
lock
orl
dec
ret
hlt
incb
test
int3
in
pop
leave
pop
data16
int
pop
clc
ret
insb
jbe
cmp
or
les
mov
cmpsb
lods
and
not
lret
adcb
cmp
sbb
fdivr
sarb
test
mov
fnsave
xor
mov
dec
ds
movsb
and
jl
cmpsl
clts
xorl
jmp
cmc
repnz
inc
stc
and
mov
fsubrs
push
jb
adc
xchg
aaa
popa
jp
mov
mov
push
mov
dec
les
adc
hlt
add
ljmp
cld
and
push
lret
dec
testl
sub
pusha
xchg
enter
add
lahf
mov
sbb
pop
sub
push
sbb
xchg
push
xlat
adc
push
cld
lret
pop
pop
mov
mov
clc
inc
mov
add
outsl
ds
jb
dec
adc
loopne
scas
mov
fsubrs
mov
and
mov
lahf
rolb
sbb
dec
shrl
sbb
out
rol
cmpsb
xchg
adc
scas
es
mov
aas
sbb
into
js
and
or
test
jbe
stos
push
daa
and
push
and
ljmp
adc
mov
inc
adc
jp
sbb
outsb
and
ss
inc
and
lcall
pop
lods
stos
ret
push
rol
lcall
sub
dec
mov
nop
cmc
and
cmp
mov
sbb
ret
les
sti
js
stos
or
push
mov
pop
pop
add
pusha
test
pusha
cmp
add
lcall
nop
push
loop
movsb
fs
and
or
lock
repz
sub
push
inc
lock
aas
lret
sub
cmp
adc
hlt
sbb
std
andl
pop
push
pop
pushf
addr16
dec
movsb
adc
xor
andl
xchg
jo
mov
orl
test
mov
and
movsb
jg
lock
add
mov
scas
mov
lods
cmp
dec
ret
add
lea
adc
cmp
dec
clc
inc
inc
les
inc
jb
ret
inc
shlb
inc
loope
adcl
pushf
into
int3
inc
aad
les
dec
test
push
mul
xor
mov
inc
or
aas
mov
push
cs
and
clc
repnz
jne
notb
add
xchg
fiaddl
cld
mov
xchg
rorl
cwtl
and
pop
or
pop
in
xchg
jnp
sbb
push
sbb
lahf
cmc
adc
inc
jno
imul
and
cmp
int
adc
jo
hlt
shl
push
dec
inc
test
add
loop
adc
pop
nop
lods
inc
sbb
fidivs
mov
lahf
fs
jb
cmp
adc
orl
push
ret
and
lods
mov
rcrb
sahf
je
jg
or
in
push
mov
pop
mov
cmc
sahf
pop
les
ficoms
push
add
test
fistl
test
addr16
pusha
push
pop
lds
jg
ret
cmc
add
xchg
aaa
pusha
test
stos
pop
and
imul
es
add
orb
cmp
mov
xor
push
and
test
adc
mov
dec
sahf
mov
nop
xchg
mov
push
addb
in
div
ret
lahf
mov
inc
in
or
dec
rcll
sub
add
xor
shlb
push
aam
jp
idivb
shl
sub
xchg
add
std
je
std
add
sbb
pop
adc
stos
outsb
jl
push
and
loopne
push
mov
mov
addr16
inc
xchg
daa
cmp
ja
mov
aam
mov
js
pop
cmp
sahf
movsl
dec
lea
add
mov
les
push
loopne
dec
cs
fdivrp
sbb
dec
mov
xor
jb
and
dec
fldl
pop
adc
mov
insb
xor
ss
sub
mov
xchg
xchg
imul
in
aam
iret
cmp
in
xlat
shr
inc
add
xor
pop
jmp
das
or
iret
and
cmpl
cmp
mov
or
push
popl
movsb
icebp
or
stos
inc
addl
lock
or
inc
sub
cmp
push
insb
mov
icebp
xor
or
pop
pop
fisttpll
or
mov
ret
push
mov
dec
mov
pop
push
ljmp
ret
push
jg
in
subb
out
in
sub
outsl
inc
cltd
mov
repz
lods
pop
add
nop
add
push
das
jns
shrl
inc
inc
fildll
push
inc
ret
cwtl
or
lods
cmpsl
mov
hlt
int3
xorb
inc
adc
push
inc
les
push
mov
mov
ja
add
aas
jl
cmpsb
or
pusha
push
xor
inc
iret
lea
dec
loop
mov
ret
pop
ret
cmp
push
mov
cs
mov
movsb
insl
psraw
jecxz
jo
stos
mov
insb
movsl
mov
jecxz
sbb
push
jnp
sbb
cmp
shll
pushf
lods
sub
add
xchg
stos
dec
push
jb
mov
mov
clc
jnp
adc
pop
xchg
pop
sbb
sbb
fdivrs
js
mov
in
orb
dec
test
cli
popa
imul
sbb
mov
push
insb
dec
sbb
ret
mov
inc
mov
fldl
out
pop
sub
cmpsl
add
test
pop
mov
pop
push
sar
fists
mov
sbb
or
lret
jb
xor
call
cmp
in
stc
push
rorb
repnz
mov
jb
fsubs
test
and
bts
add
dec
cmp
aad
mov
fstp
dec
mov
dec
add
adc
repnz
jg
sub
or
pop
pop
add
mov
imul
enter
scas
pop
push
shlb
or
call
pop
inc
out
push
xlat
dec
add
js
push
cmp
inc
mov
sub
jl
pop
loope
xchg
or
stos
scas
mov
adc
dec
jmp
xchg
mov
xchg
rcrl
push
dec
ss
or
nop
jp
jecxz
push
adc
nop
sarb
xchg
js
jbe
dec
and
lock
adc
adc
lock
ret
mov
enter
or
push
push
lods
jmp
lea
adc
adc
pop
xchg
in
mov
loop
xor
pop
push
sahf
add
adc
repnz
mov
jmp
sub
dec
cmp
xchg
ds
sbb
pop
cmp
xchg
aad
cmpsl
aas
jns
add
or
je
sub
icebp
fistpl
stos
outsb
loopne
xchg
lods
rcll
mov
in
mov
or
fdivl
jp
fwait
xchg
stos
inc
repnz
pop
mov
mov
push
rorb
jns
pop
clc
and
rol
ud2
jnp
ja
and
shl
aas
stos
mov
and
push
push
push
cmp
cmp
xchg
fldt
inc
inc
pop
push
mov
push
sub
mov
mov
jo
push
outsl
and
xchg
sarl
jmp
fsubs
xor
push
gs
test
je
fdivs
sahf
icebp
int3
aam
xor
jnp
shlb
adc
or
hlt
dec
cld
xor
sarb
and
in
mov
jecxz
cmp
mov
push
ficoml
sbb
outsb
cmpsb
movsb
cld
pop
insl
inc
orb
jl
loopne
mov
adc
push
jo
cltd
daa
icebp
mov
stos
subb
mov
mov
mov
push
adc
sar
sbb
test
outsb
sbb
sub
inc
clc
fldt
test
ret
addr16
adc
mov
cltd
sahf
pop
fcmovu
mov
orb
test
dec
loop
sbb
jnp
scas
andl
xor
adc
push
and
in
out
aaa
xchg
sbb
mov
add
jo
push
add
push
or
inc
cmp
decl
fadd
add
in
push
and
adc
in
push
bound
xchg
push
pop
mov
lock
lods
mov
cld
jo
jmp
rcrb
rorb
push
ret
adc
sub
rclb
lock
adcl
push
push
sub
xor
pushf
push
cli
dec
jbe
iret
mov
insl
int3
adc
sbb
pop
ja
test
aaa
mov
push
add
or
out
insl
add
xchg
or
lcall
jp
xorb
adc
loope
pop
stos
xchg
cwtl
cli
jbe
sbb
rclb
jae
and
push
out
test
xchg
lcall
xor
add
adc
and
pusha
jg
fmuls
icebp
mov
add
cli
mov
and
xor
xchg
mov
out
int3
push
ja
and
adc
inc
dec
rclb
scas
int3
js
in
xchg
xor
mov
std
loopne
mov
je
arpl
aam
lods
push
xor
cmp
xor
insb
mov
out
jp
and
xor
scas
add
adc
and
sbb
leave
outsl
or
xchg
cmp
jge
inc
sub
pop
stos
lock
cli
and
orb
iret
in
sbb
push
add
ficoms
sahf
cmp
xchg
cmp
inc
xchg
mov
fsub
imul
orb
rcr
mov
xchg
repz
or
dec
mov
push
cld
jo
loope
jmp
lods
and
and
or
xor
out
aaa
and
jge
jmp
or
add
mov
cwtl
jl
xor
hlt
jmp
jmp
cmp
push
js
and
push
xor
ret
sub
icebp
test
imul
mov
loopne
jge
mov
das
mov
sbb
inc
xor
bound
or
lahf
jg
out
sti
into
inc
je
fs
jns
ret
into
enter
stos
out
sbb
hlt
mov
or
sub
cmpsl
cwtl
push
ljmp
jns
nop
sbb
push
fcmovnbe
bound
mov
mov
xchg
add
scas
or
ret
mov
adc
test
and
mov
and
in
add
pusha
inc
dec
xchg
push
aam
pop
les
mov
cmp
cld
loope
or
clc
enter
cmp
movsb
mov
cmp
cmp
stos
cmpsl
cmpl
aas
mov
push
std
push
imul
jge
mov
shlb
mov
cli
push
fdiv
push
lods
jle
stos
lcall
xchg
mov
ja
xchg
pop
cmp
lock
mov
inc
nop
cmp
pop
and
push
mov
adc
cmpsb
test
inc
xorl
mov
adc
cmp
adc
lahf
push
stc
mov
mov
inc
ds
lea
hlt
adc
cmp
jge
into
mov
movsl
lods
insl
repz
mov
adc
mov
lahf
jle
push
sbb
std
jbe
sub
imul
cld
or
push
pop
dec
cmpxchg
divl
sbb
fs
subb
jae
xchg
mov
sbbl
fwait
mov
and
inc
inc
push
ficompl
rorl
fcmove
test
repz
xor
and
lock
push
outsb
or
adcl
push
adc
orb
cmp
push
loop
cmp
jl
outsl
clc
push
xor
dec
into
mov
bound
pop
lea
or
pop
loope
xchg
loopne
lea
cmp
inc
out
lahf
adc
data16
hlt
or
push
loopne
or
test
inc
push
out
add
nop
imul
inc
push
mov
jg
lods
mov
pop
or
xor
ret
shll
xor
scas
mov
lahf
ds
pop
or
mov
fimull
add
push
pop
lods
and
and
sub
hlt
cmp
jg
xchg
sbb
data16
daa
push
xchg
in
sbb
xor
cwtl
mulb
loopne
mov
gs
insb
xchg
aam
xadd
ret
pop
dec
cmp
mov
mov
rorb
das
mov
add
sbb
idivb
mov
rcll
aam
aad
popf
push
mov
sub
adc
mov
sti
out
fabs
js
mov
ljmp
or
and
lds
outsb
xlat
popa
fsubs
adc
mov
lret
aas
pop
push
testl
jp
mov
cltd
inc
push
shr
sub
mov
mov
inc
mov
mov
sub
inc
popa
and
shrb
stos
xchg
mov
lods
push
sarb
dec
xchg
mov
mov
movsb
mov
pushf
and
les
push
xchg
sbb
fstpl
adc
xchg
dec
add
lock
ss
rorb
push
movsb
out
into
xor
pop
jo
add
xor
add
jecxz
adc
shll
ljmp
pop
lods
movsb
test
inc
pop
inc
shrb
pop
loopne
dec
cmp
and
cmpsb
pop
fiaddl
in
jmp
insb
push
addb
ds
lea
xor
sbb
icebp
adc
shr
lcall
xchg
icebp
adcb
add
sbb
repz
jmp
sbb
dec
sub
shl
or
comiss
mov
test
loopne
sarl
test
js
adc
pop
lcall
cmp
jl
adc
ja
fidivrl
addr16
sub
roll
cmp
nop
pop
nop
insl
jmp
inc
sub
movsb
jo
fmulp
js
or
dec
dec
add
test
in
ljmp
shlb
and
jp
mov
shl
mov
xchg
and
cmc
call
imul
je
and
outsl
mov
or
mov
shll
cmp
fidivrl
sbb
adc
clc
add
fsts
dec
pop
loop
adc
lods
bound
inc
es
insb
mov
mov
int
add
push
lods
jp
rcll
and
push
or
outsb
xorb
mov
xor
inc
xor
fimuls
lds
or
push
loopne
dec
cld
jae
inc
lods
je
mov
push
fimuls
dec
jl
dec
inc
fs
sti
push
or
inc
loopne
jno
pop
dec
hlt
aas
push
mov
lcall
bound
sub
mov
add
dec
call
dec
jmp
mov
ljmp
inc
add
cmpsl
pop
mov
mov
clc
ret
inc
test
pushf
pusha
rep
push
xor
int3
inc
aam
add
dec
pop
mov
push
push
lds
loope
call
fwait
dec
adc
push
test
sbb
in
fs
pop
adc
xor
inc
js
icebp
lock
sbb
aad
mov
jnp
xor
inc
adc
js
fildll
add
or
or
out
xchg
aam
inc
imul
loop
dec
push
and
mov
adc
hlt
or
subb
jbe
imul
inc
xor
fdiv
and
hlt
push
loop
icebp
inc
sub
out
mov
int3
sbb
or
mov
nop
or
rclb
pop
fmul
outsb
add
fimull
fstpt
cmpsb
and
dec
xor
outsl
outsb
in
mov
in
pop
mov
jl
adc
xchg
cld
pop
ljmpw
fdivr
pop
jmp
rcrb
push
adc
pop
mov
jg
scas
mov
mov
cmpsl
in
jb
lahf
add
stos
sub
or
loope
or
sbb
push
jnp
loop
enter
lcall
adc
sbb
push
scas
add
gs
or
or
iret
pop
cld
rclb
mov
push
dec
fisttpll
adc
dec
inc
scas
push
pop
sub
or
pop
or
mov
pop
sarl
cmpsb
xchg
sahf
and
inc
imul
and
cmp
fwait
repnz
and
imul
into
mov
mov
jno
xchg
inc
lahf
clc
sbb
xchg
mov
inc
mov
movsl
shlb
push
push
loopne
add
adc
dec
cld
mov
in
test
add
jmp
inc
inc
xlat
addl
mov
xor
stos
and
dec
andl
push
mov
adcb
push
or
in
test
fldl
mov
dec
push
and
mov
decb
pop
xchg
pop
movsl
pop
js
push
push
mov
xlat
mov
xchg
adc
mov
sub
test
xchg
push
lds
dec
icebp
dec
sub
mov
bound
adc
inc
rclb
clc
js
jnp
jge
push
mov
in
or
hlt
push
repnz
inc
sub
lds
pop
shlb
lcall
test
mov
outsl
mov
push
loope
cs
add
pop
ret
cmp
mov
loopne
add
in
fsts
pop
or
mov
repz
js
add
shll
sbb
pop
adc
scas
mov
mov
stos
clc
jo
add
mov
addl
pop
decb
mov
je
shrl
mov
test
js
sbb
enter
pop
pop
mov
cltd
jb
xchg
std
xor
les
pop
xor
jecxz
test
lea
xor
pushl
mov
lcall
pop
std
je
fs
sbb
insb
jmp
sahf
call
adc
ret
add
cmp
dec
inc
cmp
idivl
movswl
sub
or
mov
adc
inc
popa
lock
cmpsb
push
arpl
mov
add
sub
inc
xrelease
sbbb
jo
or
iret
xchg
lahf
jp
mov
mov
xchg
mov
add
inc
pop
loopne
pop
jmp
es
mov
iret
in
jne
dec
or
and
jns
hlt
fldl
addl
mov
sub
jg
cmp
add
test
sbb
stc
mov
sub
push
mov
sti
mov
mov
mov
loop
f2xm1
inc
das
dec
mov
push
and
sbb
lret
inc
inc
subl
mov
cwtl
cmpsb
roll
xorb
clc
push
adc
test
dec
push
add
jnp
inc
jp
or
add
mov
or
sahf
mov
dec
jno
mov
dec
pop
cmpsl
out
xchg
xorb
ret
push
add
je
push
rcll
xor
and
jno
pop
mov
push
cmp
and
stos
pushf
add
mov
mov
mov
out
xchg
sbb
push
cmp
push
mov
ds
mov
loopne
push
lret
loop
push
pop
add
nop
push
scas
add
sbb
or
loopne
out
pop
or
cmp
aas
test
outsb
ret
insb
dec
mov
mov
gs
pop
aam
clc
stos
ret
ss
stc
inc
testb
inc
add
mov
xor
iret
test
or
jle
int
jne
jmp
push
lcall
jp
lock
pop
dec
cli
mov
xchg
fsubs
adc
push
rcrb
enter
xchg
aam
popa
dec
jp
dec
sarb
shll
add
dec
mov
push
clc
adc
ljmp
dec
and
pop
mov
adc
shll
pusha
or
rol
cmp
lret
add
add
jl
in
sub
inc
mov
jge
jl
pop
loope
pusha
insb
sbb
js
and
hlt
dec
filds
jb
inc
xchg
mov
popa
sbb
inc
mov
jge
mov
push
cmpsl
jb
fdivp
ret
add
cs
push
xor
lcall
inc
mov
les
std
jmp
xor
add
and
stos
movsl
add
lock
outsb
in
push
test
fisttps
cmp
shl
pop
xchg
and
std
push
and
js
xor
sub
outsb
xchg
loopne
and
mov
mov
iret
dec
pop
jmp
sub
xor
and
sub
jb
add
bswap
in
fldt
stc
call
sbb
dec
shrl
icebp
test
sbb
cli
jno
jne
arpl
adcb
and
add
pop
aam
mov
outsb
pushf
xchg
add
pop
jecxz
shrb
bound
imul
loop
cmp
notl
lods
mov
lret
lcall
or
insb
out
xor
or
lret
xchg
jbe
pop
out
pop
clc
xor
push
xor
cmp
jp
or
xlat
cld
and
cld
fwait
sbb
and
loopne
js
loopne
push
imul
insl
cs
mov
mov
push
mov
insl
js
sbb
enter
sub
ret
out
jg
push
in
push
cmp
push
sbb
rcl
cld
sbb
xor
outsb
hlt
je
dec
mov
shll
and
outsl
or
mov
incl
adcl
pop
addr16
loope
and
cmp
mov
jmp
jle
loop
pop
hlt
stos
shlb
lods
jnp
mov
rclb
cmp
ljmp
mov
inc
push
roll
subl
adc
xlat
pop
in
cmpsl
idiv
sub
pop
dec
dec
subb
lods
stos
scas
xor
or
and
xor
push
fdecstp
orl
je
inc
inc
pop
scas
daa
test
out
dec
jge
inc
adc
mov
sbb
test
xchg
add
jl
fsubrp
mov
test
sbb
not
sub
cmpsl
mov
shl
add
push
les
test
mov
add
pop
push
int3
mov
cmc
xchg
xchg
fisttpl
or
mov
xchg
fisubl
stos
or
dec
jg
mov
sub
pop
mov
sub
jno
sti
and
loope
jne
iret
mov
daa
push
and
jne
insl
jg
add
adc
push
xor
movl
ss
jo
hlt
cmpsl
and
cmpsb
and
push
mov
mov
sti
fldenv
sub
ret
lock
xchg
je
sbb
repnz
adc
lret
inc
dec
cmpb
fwait
hlt
movsl
lock
push
pop
lret
add
movsb
sub
xchg
call
cmp
adc
push
into
enter
dec
pop
or
jle
ss
push
sbb
sbb
std
pop
or
dec
sbb
pop
jl
xor
jmp
dec
mov
cmp
push
and
push
cmp
lret
mov
testb
dec
mov
xor
bound
xlat
pop
cmp
fidivrs
cwtl
cmp
pop
xor
mov
lods
mov
xor
xchg
out
orl
mov
push
scas
clc
mov
cwtl
cld
dec
enter
gs
cli
repnz
mov
sbb
dec
aam
pop
jb
addr16
push
scas
mov
sub
pop
into
xor
fwait
popa
test
push
loop
xchg
xlat
pop
les
and
nop
add
test
xor
mov
mov
rorl
jecxz
sub
cmp
jmp
lret
mov
ds
popf
dec
sbb
mov
sbb
or
mov
popf
loop
arpl
wrmsr
push
popl
std
fimull
mov
insb
outsl
sub
xchg
dec
js
mov
outsb
push
outsb
ljmp
fistl
push
outsb
shl
testb
fidivl
bound
cli
sub
or
and
sti
bound
cmpsb
insb
xor
xchg
xchg
fdivl
mov
dec
push
pop
cmp
mov
mov
mov
popa
mov
jne
fiadds
pop
fidivs
add
ret
and
ljmp
sbb
mov
push
xchg
xor
inc
mov
ljmp
movsb
ja
call
roll
push
mov
pop
inc
xchg
cmp
push
repnz
xor
and
xor
popf
clc
sti
das
insl
iret
sbb
mov
insb
inc
incl
pop
adc
pusha
mov
or
jp
push
dec
push
lea
mov
push
lock
int
xchg
int3
inc
stos
std
gs
icebp
push
adc
orb
push
pop
push
xchg
and
or
mov
mov
add
xlat
fsub
pop
mov
xchg
out
fiadds
pop
mov
in
push
aam
negb
push
jns
shlb
js
pop
aas
mov
add
or
or
jl
int3
sbb
dec
cld
idiv
add
jmp
cmp
lret
mov
lahf
cmpsl
inc
mov
fisubl
mov
push
push
loop
ret
pop
sbbl
pop
fwait
sarl
idivl
sbb
out
mov
add
outsb
push
js
adcb
mov
mov
dec
lock
inc
data16
addb
or
add
scas
and
sub
and
adc
adc
ret
leave
add
ljmp
add
in
pop
jle
or
cli
js
hlt
pop
or
jmp
mov
add
mov
mov
mov
add
jbe
lds
cmp
icebp
arpl
les
jle
ljmp
jmp
inc
adc
jnp
mov
dec
adc
mov
bound
pop
fdivrl
push
sbb
adc
xlat
shll
aam
add
aad
clc
es
or
out
xchg
cmpb
hlt
aad
popf
repnz
dec
push
movl
mov
int3
add
push
adc
mov
fiaddl
sub
and
mov
fstpl
and
inc
pusha
cmp
xchg
sub
xor
mov
xchg
je
stos
add
or
push
push
mov
test
mov
addb
scas
jb
pushf
mov
mov
jmp
sbb
xor
ja
jne
push
addr16
shll
dec
out
and
and
push
mov
data16
sbb
xor
ljmp
pop
aas
and
incb
jecxz
sub
xchg
cmp
push
pop
cli
ss
and
pop
pop
sbb
arpl
xchg
mov
jg
dec
lods
inc
mov
push
and
les
cmp
jge
outsl
mov
and
pop
xchg
fnstsw
sbb
out
and
push
jb
test
std
call
les
scas
pop
jl
cld
or
iret
dec
adcb
adc
daa
or
jbe
data16
jge
test
push
repnz
add
insb
mov
adc
xlat
fmuls
jl
inc
repnz
jle
scas
mov
aam
xchg
fcoms
push
iret
fwait
push
or
sub
loopne
cltd
adc
data16
das
out
inc
jl
lods
pop
sub
imulb
arpl
ds
mov
and
jno
jo
inc
pop
push
pop
hlt
add
cs
ds
scas
pop
and
mov
mov
mov
mov
or
fnstenv
icebp
outsb
insb
add
out
jecxz
lock
clc
push
sbb
aad
loop
mov
or
cmp
inc
pusha
fmull
into
and
aas
sub
aam
dec
or
mov
push
cltd
pushf
and
rorb
lret
loop
push
push
cwtl
pusha
enter
xchg
and
sbb
add
push
add
test
add
sub
cmpsb
mov
xchg
cmp
enter
add
scas
xchg
sub
call
inc
out
xor
mov
imul
arpl
movsb
push
dec
mov
lock
divl
hlt
ss
xor
add
rorb
lret
pop
sarb
outsl
ret
loopne
int
push
ret
ljmp
mov
add
jae
pushf
rcrb
arpl
mov
jne
lea
cltd
cmc
push
clc
rolb
jns
js
or
aaa
shll
sti
and
shll
movsb
or
pop
or
or
or
les
sub
bound
mov
jbe
adc
xchg
mov
movsb
addl
mov
dec
shrb
mov
arpl
push
test
add
push
xchg
jnp,pt
stos
std
and
mov
and
xlat
jl
movsb
pop
pop
mov
push
mov
negl
mov
movsb
and
js
nop
push
loopne
mov
popf
ss
sbbl
fsts
jns
lret
fimull
mov
ror
rorl
jg
decb
rolb
in
sti
mov
scas
pop
ljmp
fs
adcb
mov
imul
or
cmp
jl
test
push
mov
sbb
xchg
pushf
rorb
mov
gs
lods
adc
iret
xchg
js
out
inc
xor
mov
jp
or
pop
or
cmp
xchg
loope
lret
cmp
gs
imul
mov
pop
lret
negl
ret
cmc
pop
cli
inc
aam
xor
cltd
push
xor
test
xor
inc
adcl
loopne
sbb
rorl
ds
mov
xor
rorb
scas
int
sbb
daa
and
les
push
pop
imul
cmp
cmp
push
cs
sbb
std
inc
sbb
in
mov
loop,pt
or
add
in
in
roll
pop
lock
mov
rcll
add
xor
cli
sub
mov
mov
add
icebp
test
int
or
inc
sub
push
clc
inc
sub
pop
sbb
pop
in
pusha
jno
push
pop
push
xor
jne
push
xchg
inc
and
push
mov
lds
sbb
add
and
fsubrs
mov
dec
lcall
xchg
call
mov
dec
dec
and
loope
jns
lods
es
adcl
or
add
shlb
inc
sbb
mov
dec
mov
inc
xchg
xor
pop
fidivrs
xchg
push
test
rclb
mov
nop
fsubl
jge
loopne
aaa
push
loop
addr16
and
mov
lea
or
imul
sahf
mov
sti
clc
inc
orb
loopne
lea
xor
mov
in
out
inc
xor
ficompl
mov
and
loopne
inc
mov
dec
sub
dec
dec
sbb
stc
push
sub
fs
or
pop
xlat
sub
jno
sub
insl
xchg
push
push
inc
add
out
push
mov
rorl
lods
ficoms
xor
add
or
xchg
push
es
jb
fimull
clc
movsl
enter
adc
mov
push
push
mov
repz
dec
push
pop
dec
in
dec
adc
fadd
add
jne
insl
fimuls
and
fisubrs
clc
sub
lret
clc
inc
fldt
emms
test
out
pop
lret
mov
idivb
or
adc
lds
sbb
popf
data16
adc
push
std
ret
xchg
xor
lock
adc
mov
xchg
roll
loop
shl
jg
test
shrl
jecxz
push
mov
jle
mov
jle
jns
push
mov
aas
in
xor
popf
lret
push
inc
test
lods
pop
std
lock
imulb
rcr
push
mov
push
inc
out
out
aaa
out
mov
test
mov
sar
mov
mov
out
push
cmc
add
push
pop
mov
add
int3
dec
in
test
sub
int3
clc
or
loop
insl
lret
ss
adc
pop
inc
pop
and
push
xchg
mov
and
das
shl
sub
sbb
inc
fwait
enter
push
fnsave
fisubrs
dec
shrl
mov
jl
xchg
jbe
cmp
or
repz
pop
call
mov
andb
pop
popa
jnp
pop
stos
out
or
fimull
sahf
adc
icebp
aad
js
pop
xor
scas
mov
push
lods
jmp
stos
aas
xchg
dec
cmp
xor
popa
or
and
inc
adc
sbb
cmp
gs
jmp
jmp
mov
js
jne
and
mov
fistpl
dec
push
jns
jl
add
jmp
add
les
mov
fsubr
test
arpl
push
inc
fcoml
sbb
pop
pop
out
pop
dec
test
imul
loop
pop
js
loopne
adc
push
lods
in
into
lahf
inc
or
jo
mov
jmp
dec
xchg
push
mov
inc
mov
xchg
mov
adc
bnd
leave
ror
sub
xlat
outsl
push
cmp
mov
loopne
push
mov
rol
loopne
ss
sbb
mov
mov
fdivs
pop
faddl
dec
lret
and
pop
or
push
mov
pop
scas
andl
xchg
mov
mov
subl
mov
push
pop
jg
mov
mov
pop
dec
rcr
stos
dec
xchg
mov
lar
adc
scas
adc
or
scas
and
mov
movsb
loope
push
mov
neg
fstl
add
mov
add
loopne
add
dec
int3
insl
cmp
add
daa
out
pop
stos
out
pusha
lcall
cld
pusha
mov
jo
sar
jp
leave
int
mov
icebp
jb
clc
mov
in
stos
push
outsb
ret
call
xor
es
call
pushf
mov
inc
inc
mov
or
aaa
ja
lcall
scas
sbb
mov
ficoms
mov
jmp
test
push
ds
xor
mov
sub
dec
or
aam
fwait
push
loopne
xchg
add
pusha
cmp
add
ret
cmpsl
push
mov
inc
insb
in
push
or
movsl
js
mov
fsubrl
iret
orb
iret
subb
stc
xchg
fs
lock
jmp
data16
pop
repz
xor
iret
jle
orl
mov
por
loop
jl
adcl
push
jae
popa
lods
pusha
mulb
sbb
subb
xor
push
sbb
lcall
ret
sub
add
jne
aas
clc
pop
sbb
cmp
lds
mov
mov
mov
sbb
push
sub
pop
andb
fcmove
sub
pushf
dec
ss
pusha
sbb
ss
and
outsb
adc
daa
rclb
sbb
mov
rcr
test
sti
add
push
and
push
mov
adc
gs
sub
in
aad
mov
jno
cwtl
ret
sbb
xor
xor
push
inc
lods
or
cmp
jp
push
xchg
aam
dec
cmp
or
faddl
push
jg
cmp
or
ja
aam
inc
enter
push
pslld
add
jno
mov
popa
insl
pop
mov
cmpsb
scas
sub
add
sbb
mov
daa
lods
or
mov
mov
xor
xor
mov
or
lahf
leave
push
mov
adc
mov
lock
push
enter
sbb
xor
push
dec
mov
inc
loopne
je
dec
les
xchg
pushl
loope
mov
fdivrs
test
out
insb
divb
arpl
adc
pop
xchg
dec
in
prefetchwt1
or
imul
fs
sbbb
mov
add
pusha
mov
mov
adc
shlb
pop
mov
or
jg
jge
in
js
sahf
dec
xor
push
fwait
sti
insb
test
fcoms
lock
mov
sub
xchg
lret
es
aas
in
inc
sbb
out
bound
insb
dec
mov
scas
dec
leave
rolb
push
cmp
je
mov
pop
lods
mov
push
pop
add
mov
cmp
sbb
outsl
dec
in
addb
mov
or
insb
test
jo
scas
insb
js
in
roll
mov
ljmp
cli
aam
aad
cmp
and
loope
fwait
icebp
mov
sahf
stc
push
pop
adc
cmp
outsb
or
push
les
and
in
add
xchg
cwtl
bound
out
pop
mov
mov
jbe
adc
push
jmp
outsb
shrb
push
and
sub
inc
or
push
xor
call
out
jp
sub
incl
or
pop
icebp
dec
clc
push
cmp
push
mov
imulb
insb
dec
inc
repz
mov
subb
loopne
mov
jle
aad
out
shlb
or
cli
fcomps
cmpsb
xchg
and
cwtl
sub
and
push
mov
stos
add
sbb
movsb
add
movsb
fisubs
cld
add
dec
rcl
xlat
imul
mov
mov
or
lods
inc
jo
je
ret
data16
pusha
inc
fimull
mov
xchg
outsb
adc
cmpsb
fwait
test
mov
or
xor
mov
lcall
pop
lcall
inc
ss
out
aad
pop
add
push
add
adc
adc
lods
dec
or
pop
xlat
pop
sub
scas
aam
int
cltd
pop
insl
aas
adc
clc
aaa
push
leave
data16
sar
mov
add
call
mov
mov
xchg
push
mov
imul
enter
stos
dec
test
ret
lods
es
pminub
pop
mov
std
add
mov
fcomps
xor
testb
push
mov
les
scas
pop
loop
jecxz
out
pop
or
call
dec
pop
fwait
jbe
adc
or
sahf
jmp
movsb
ja
xchg
add
pushf
pop
add
data16
jnp
pop
sbb
jb
or
cmp
fndisi(8087
add
or
loop
pop
cli
addr16
rorl
pushf
cs
pop
add
xchg
inc
sbb
dec
xchg
jbe
lret
mov
shrl
xor
dec
xlat
ljmp
out
adc
loopne
dec
mov
fisttps
leave
pop
push
sbb
inc
pop
pop
enter
adc
mov
arpl
xchg
sbb
mov
mov
ss
rorb
mov
and
sbb
xchg
push
jmp
adc
lock
mov
cmpsb
shrl
pop
push
xchg
das
cmpsb
imul
mov
cld
les
orl
cmpsl
int
adc
fcmovnu
push
pusha
repnz
push
pop
leave
movsl
lods
daa
mov
lret
loopne
aas
lretw
iret
add
mov
pusha
aaa
in
xchg
ficomps
stos
aaa
and
and
mov
push
push
xor
rcr
jge
add
push
sti
roll
mov
mov
inc
fsts
mov
dec
imul
clc
es
sub
mov
mov
clc
inc
in
pop
jle
jl
jbe
xchg
or
sbb
or
fwait
sbb
sbb
fnstcw
ljmp
loop
adcb
icebp
mov
pop
adc
pop
dec
xchg
jecxz
fstl
xlat
or
pop
add
add
stc
jl
cli
rolb
cmc
insb
dec
sub
cmp
in
pop
xchg
mov
adc
cmp
add
lock
jb
pusha
jns
fisubl
inc
adcb
or
imul
loop
cmpsl
and
sub
add
sbb
cmpsb
aas
aas
jo
add
xchg
imul
and
shrb
test
in
stos
cli
loope
fistl
out
jle
cmpsb
mov
add
sahf
xlat
in
outsl
je
or
fists
into
cmpb
lcall
popa
mov
test
add
sbb
pop
xchg
dec
pop
into
and
pop
fisttps
mov
mov
push
or
gs
shll
js
fnstsw
add
jae
push
fisubrl
iret
mov
loop
fsubrp
rorl
push
and
bswap
mov
xchg
cmpb
pop
push
and
push
das
xchg
jno
popf
jbe
movsb
adc
pop
cli
ljmp
pop
dec
daa
lods
pop
shrb
sub
pop
and
xchg
or
mov
js
stos
js
add
jle
hlt
push
dec
fsubrs
fisubl
popf
jmp
dec
jmp
cmc
xchg
cmp
add
sub
pop
mov
and
push
xchg
inc
or
mov
sbb
movsb
mov
jp
xor
frstor
cmpsb
imul
shll
mov
xchg
mov
in
add
loopne
test
mov
aas
adc
dec
insl
push
xor
cmpsb
mov
mov
push
mov
jle
rcrb
fwait
inc
lret
or
nop
subl
dec
clc
cmc
push
mov
sbb
rclb
lret
mov
js
ror
sti
repz
xchg
adc
mov
sub
adc
push
mov
sahf
add
lods
bound
sub
lcall
fisttps
in
push
sbb
popf
fwait
push
sbb
mov
aaa
sub
add
hlt
addb
lea
cmpsl
ljmp
sbb
add
jge
xor
inc
shrb
loop
inc
cmp
adc
add
fwait
xchg
xor
adc
sbb
je
and
add
push
daa
cmpsl
fstpl
add
pop
enter
and
xchg
pop
cmp
test
cmpsl
cmp
fs
cmc
pushf
mov
mov
js
rolb
arpl
cli
ds
jno
ret
add
pop
push
inc
dec
stos
loopne
inc
test
or
fimull
inc
rcl
push
les
adc
inc
push
jl
fcomps
xor
cmp
orb
scas
pop
jp
sbb
adcl
es
mov
js
out
jne
int
mov
jge
loope
fadds
mov
orl
mov
shrl
push
add
out
sbb
add
push
aas
dec
push
enter
scas
push
mov
into
inc
repz
pop
cltd
out
add
addl
dec
pop
sub
push
data16
lock
psubsw
mov
aas
cld
dec
dec
hlt
adc
pop
loopne
popf
out
pop
or
jl
lret
or
lock
es
pop
cld
pop
movsb
adc
dec
sbb
jo
fldt
movsb
mov
mov
xchg
jo
mov
or
adc
mov
dec
sbb
hlt
test
lcall
adc
add
push
sub
inc
orb
lods
dec
lahf
cmp
mov
sub
pushw
in
push
clc
mov
xchg
cmpb
and
imul
loop
mov
ds
dec
andl
cs
xchg
jp
adc
pusha
into
xor
pop
repnz
xor
adcl
je
mov
sub
xor
jbe
inc
cmp
adc
faddl
jno
cltd
and
loop
cld
imul
push
jno
arpl
add
pop
sbb
lds
shrl
push
popf
pop
dec
mov
pop
pop
xchg
sbb
pop
mov
jge
ret
sbb
rcrb
xor
mov
imul
mov
or
add
push
sbb
test
add
mov
add
dec
push
xchg
lcall
pop
mov
push
repnz
ret
pop
test
out
ljmp
cmp
inc
xor
pop
dec
rorl
or
popa
inc
testl
xchg
cmp
scas
mov
inc
clc
rcrb
xchg
pop
mov
inc
icebp
dec
iret
outsb
movsl
sub
aad
out
dec
pop
mov
shl
lds
insb
xchg
or
mov
mov
scas
push
iret
in
sbb
mov
adc
jecxz
icebp
xor
and
mov
cs
jnp
push
imul
clc
and
push
outsl
jp
xor
jle
inc
into
cmp
dec
scas
loop
lahf
pop
das
pop
pop
das
sub
fdivp
sbb
dec
ljmp
cmc
push
roll
xor
inc
mov
mov
adc
in
pop
ficoml
sbb
dec
mov
gs
cmpsb
mov
stos
das
adc
cmp
cli
and
stc
cltd
jo
loop
add
push
sub
xor
adc
es
push
arpl
lcall
push
mov
xchg
and
lods
adc
popf
sbb
sbb
or
outsl
add
or
xchg
call
iret
in
inc
insb
push
fstpt
mov
call
icebp
adc
jno
and
mov
stos
cmp
xor
or
mov
add
jae
std
xor
cld
mov
sbb
push
stc
add
pop
stos
xor
fsubrs
roll
pusha
out
add
orb
icebp
add
pop
scas
mov
inc
loopne
test
enter
add
sahf
dec
in
loopne
and
mov
cmp
dec
cmp
std
sti
mov
or
fisubrs
and
test
jge
push
sbb
cmc
mov
test
popa
adc
lea
lods
xor
xor
shrb
mov
adc
dec
xchg
adc
add
fldl
fldl
shrl
xchg
repnz
aad
gs
cld
pop
cmp
jo
adc
mulb
lea
out
pop
sahf
mov
dec
fucomp
jmp
aaa
sub
jle
mov
push
sub
add
clc
mov
xchg
in
lods
movb
test
js
dec
cmp
jmp
push
mov
sahf
mov
lods
les
scas
mov
ror
mov
adc
or
adc
or
sbb
push
mov
push
cld
lcall
push
and
popl
lea
rcl
add
and
add
adc
sub
mov
sub
leave
adc
cmp
js
or
inc
dec
movsb
cmpsl
xor
fimuls
cmp
sarb
pop
out
push
sub
jmp
jecxz
push
mov
cmp
add
lret
mov
movsb
sbb
xor
push
in
pop
and
lods
jns
cwtl
and
xorl
inc
jb
insb
pop
fisubs
pop
and
js
stc
sbb
ss
ret
popf
jb
and
and
mov
jae
push
sti
pop
push
test
dec
push
lods
mov
notb
xchg
or
add
pop
pop
les
mov
fmuls
daa
mov
pop
inc
fdivrp
or
or
loop
sbb
outsl
inc
cwtl
shrl
clc
jecxz
clc
jp
mov
gs
imul
push
fsubrs
jmp
std
push
and
dec
adc
add
imul
dec
insl
movsb
xchg
sbb
jbe
pop
hlt
stc
aam
mov
add
mov
jae
cmpsb
cmp
inc
clc
or
mov
jl
push
dec
and
sbb
cmc
les
repnz
and
clc
dec
ss
sbb
pushf
jmp
mov
pop
cmc
call
daa
dec
xchg
or
psubusb
sub
test
nop
pop
inc
stos
mov
mov
sbb
mov
mov
rcll
mov
cmp
push
cwtl
test
loopne
lods
adc
mov
jo
pop
popa
shrb
je
pop
mov
jnp
mov
mov
fbstp
outsl
test
leave
ljmp
daa
mov
arpl
dec
fdivl
outsb
mov
mov
push
push
ret
leave
arpl
cmpsb
adc
pop
loopne
negb
imul
fimull
mov
cmp
inc
inc
aaa
enter
mov
mov
xchg
mov
test
xor
orl
push
popa
stos
mov
mov
mov
divl
inc
mov
in
sbb
stos
or
jbe
clc
mov
sbb
and
jbe
repz
decl
in
sbb
pop
sbb
mov
push
mov
rcl
pop
fcom
roll
outsl
fwait
call
xchg
ror
daa
out
jnp
inc
dec
cmp
sbb
aad
test
setne
or
push
sbb
stos
cmp
cltd
pop
pusha
jo
and
mov
movsl
pop
lds
testl
in
cmpsb
filds
jno
lea
rcl
cmc
nop
pop
adc
dec
sbb
repz
jle
daa
shl
sbb
and
rclb
dec
jno
std
test
mov
nop
jmp
fildl
jne
pop
xor
sbb
and
daa
rcrb
stos
repnz
mov
jmp
insb
xor
dec
hlt
insb
ss
aas
cli
xchg
out
mov
xchg
arpl
add
pop
out
push
stc
mov
dec
jnp
sub
sub
lret
pop
jle
test
ret
repnz
push
scas
aaa
test
nopl
jp
insl
popa
fdivrl
push
dec
aaa
stos
cld
xchg
pop
les
add
add
add
fwait
lret
dec
and
popf
lock
jno
fisttpl
xchg
andl
cmp
cmp
push
jp
sbb
push
dec
rclb
outsb
mov
sahf
inc
pop
std
cmp
xor
daa
iret
in
cmp
push
movsb
jno
cmp
leave
rclb
in
sub
xor
add
add
xor
insl
adc
push
xchg
out
sbb
inc
aad
push
jnp
cmp
cld
std
shl
mov
rorl
adc
cmc
stos
add
inc
push
lods
jle
rolb
sub
subl
popa
jno
cmc
mov
pop
push
mov
or
pop
adc
dec
jns
and
xchg
or
test
mov
jo
popf
loope
inc
pop
or
push
inc
orl
std
shlb
xchg
jns
or
jno
cmovno
lahf
cwtl
sbb
pop
addb
shll
push
jge
add
and
jp
sarl
lret
xor
mov
popf
sub
cmp
push
push
xchg
out
xor
xchg
lahf
xor
rolb
mov
test
xchg
xor
cmp
lods
cmp
cld
int
dec
dec
mov
out
enter
and
xor
pop
lods
push
rcrb
sub
inc
and
push
insb
adcl
bound
mov
in
ret
xchg
lods
ds
in
jnp
sbb
xlat
insl
xor
xchg
adc
cltd
adc
jl
xor
leave
mov
xchg
test
fwait
add
stos
push
outsl
sarb
add
hlt
in
les
mov
inc
movq
xor
bound
xchg
out
lcall
std
in
addb
cmpl
in
frstor
je
dec
mov
inc
popa
mov
repz
mov
xor
mov
jne
inc
xchg
insb
add
sbb
loope
hlt
rolb
mov
test
jecxz
popf
jle
mov
add
or
cmp
adc
dec
sbb
pop
bound
std
push
dec
or
xchg
das
fsts
lahf
shl
sti
add
pop
into
inc
mov
loopne
ds
or
or
js
pop
dec
sub
notl
cmpsb
mov
nop
jmp
add
add
adc
frstor
sbb
stos
mov
xchg
mov
sub
js
or
sbb
push
icebp
push
jnp
lock
pop
add
cmp
dec
dec
outsl
inc
and
or
cmp
push
aaa
sbb
dec
inc
inc
jp
cli
repnz
push
inc
rcl
xchg
push
je
lret
jecxz
inc
mov
pushf
aaa
push
push
in
jnp
jmp
jne
jecxz
and
pop
mov
sub
jmp
roll
icebp
outsl
std
outsl
and
scas
mov
or
pop
jl
andb
sub
ss
mov
jge
movsl
sbbb
fstpl
lods
pop
or
add
mov
outsl
push
rorl
ss
nopl
int
mov
mov
jne
xchg
sub
sub
jecxz
ret
hlt
icebp
pop
js
push
andl
cmp
sbb
add
mov
aas
push
mov
ljmp
iret
jg
lret
add
add
jg
repz
shll
push
imulb
daa
push
add
in
and
or
push
shlb
mov
lods
xchg
inc
fisttps
and
test
loop
adc
int
divb
push
adc
sbb
rolb
sub
sbb
das
xchg
lds
lods
in
icebp
shlb
sub
add
je
push
xor
sbb
jg
push
sub
stc
aad
ds
and
pop
js
ja
aaa
mov
push
sub
inc
test
arpl
std
ret
fucomp
jne
rcrb
pop
add
mov
imul
lret
adc
cmp
loop
or
or
inc
xchg
sub
add
push
jge
push
out
out
ds
mov
addb
sahf
dec
aaa
jecxz
hlt
jnp
jno
cmp
cmp
mov
mov
add
xlat
dec
adc
jb
pop
js
inc
lea
test
iret
adc
fnstcw
pop
addb
int3
mov
nop
arpl
jo
xor
dec
jmp
mov
mov
mov
jnp
shll
std
lret
in
clc
jno
xchg
cltd
fnstsw
movsl
stos
sti
imul
or
sub
and
add
test
out
mov
sub
add
mov
das
hlt
enter
push
adc
aam
ljmp
ljmp
and
movsl
sbb
mov
pop
inc
pop
adc
jl
mov
arpl
xor
mov
push
jle
lods
cmpsl
rorb
mov
aam
mov
inc
cmp
add
addr16
stc
scas
in
cmc
rorb
sbb
sti
fisubrs
dec
cmp
outsb
rorl
das
pop
es
int3
jne
out
xor
int3
je
pop
push
or
inc
jns
sbb
lahf
dec
into
pop
sahf
jns
dec
cs
cmpsl
rcll
inc
movsb
mov
fisttps
xor
push
mov
pop
xchg
lds
cmp
cmp
mov
mov
mov
les
dec
or
jg
test
sbb
mov
mov
pop
fdivrs
clc
mov
fstps
adc
sbb
push
aam
adc
pop
adc
fiadds
scas
push
inc
in
aaa
xor
sti
je
mov
in
mov
fldcw
cld
mov
test
stc
movsl
dec
loop
shrb
mov
leave
test
loopne
jnp
mov
or
push
fs
inc
adc
lock
pop
xor
and
xchg
add
and
add
jle
fsubl
adc
pop
pop
xor
es
jbe
adcl
stc
push
or
or
push
jecxz
sbb
mov
cmp
add
cmc
add
call
pop
sbb
mov
mov
imull
sbb
xchg
addl
adc
or
jle
dec
push
in
xor
ja
mov
jl
cld
cmpb
mov
test
lods
rcll
scas
mov
push
pop
dec
pushf
clc
push
push
lahf
and
fiaddl
sub
fimull
dec
ret
xchg
es
inc
nop
mov
loop
daa
ds
cmpsb
test
or
pop
mov
pusha
lods
mov
dec
mov
daa
and
sbb
mov
pop
test
and
mov
out
sbb
jb
test
jl
jecxz
sbbb
test
ljmp
jge
or
cmpl
test
push
cmp
std
and
jl
aas
adc
or
mov
push
nop
or
pop
add
xchg
bound
mov
mov
scas
sub
stc
iret
xor
aaa
add
stos
mov
test
lcall
adc
dec
cld
fnstsw
xor
scas
cmp
push
push
mov
mov
movsl
mov
pusha
mov
inc
or
mov
or
aam
ss
pop
mov
inc
and
pop
sbb
lods
sbb
fwait
icebp
inc
cld
sbb
dec
mov
shlb
es
sbb
xchg
and
add
test
or
add
pop
fildl
lock
sbb
js
add
pop
mulb
cmp
popf
push
push
in
jmp
ja
mov
daa
add
lcall
int
jle
mov
je
and
mov
shrl
sbb
xor
loope
test
mov
mov
int
push
repnz
ret
inc
jb
xor
inc
clc
jb
mov
mov
pop
push
inc
iret
in
lds
sub
les
outsl
and
pusha
insl
jp
faddl
jnp
sahf
adc
js
lea
dec
out
xor
stos
dec
sbb
clc
inc
je
ss
sbb
pop
loopne
int3
pop
xor
cmc
or
ja
in
cmp
add
int3
and
gs
push
mov
test
hlt
addr16
push
push
adcb
push
mov
popf
xor
fldl
jbe
pop
sbb
and
mov
scas
data16
pop
cld
inc
sub
rolb
ss
iret
das
mov
push
mov
rcr
sbb
orl
andl
mov
shrb
or
sub
mov
pop
call
push
push
push
adc
dec
decl
xchg
ud0
out
sub
stc
xor
rol
xchg
sarl
popa
es
ljmp
gs
lock
lock
clc
xchg
dec
hlt
test
mov
adc
lcall
call
inc
or
mov
and
je
mov
ret
adc
adc
push
cmpsb
shrl
push
fsub
lds
xchg
rolb
lods
jle
insl
das
jns
aas
out
add
dec
lods
js
loopne
push
fisubrl
dec
jl
dec
inc
adc
and
fsubrs
out
push
mov
inc
data16
lea
cld
add
cmp
mov
lock
out
je
cmp
mov
lock
es
pop
cmp
in
sub
fldl
pop
cwtl
xor
sbb
and
in
jb
jg
xor
fadds
in
insb
std
pop
cs
ret
inc
push
sub
mov
stos
fcomps
pop
cmc
les
cmp
inc
xchg
adc
mov
sub
jb
push
jmp
stos
shl
lret
fisubrs
ds
xor
xchg
sub
ret
or
xchg
std
mov
imul
pop
insb
push
loope
and
test
lods
out
cld
cmc
sub
fsqrt
add
iret
outsb
dec
in
add
push
mov
mov
incl
repz
sub
add
fucomp
xchg
clc
push
and
enter
aam
mov
clc
and
cli
std
jns
xor
pop
fistpll
pusha
mov
cmp
xchg
adc
pop
fwait
clc
ljmp
xor
int3
inc
mov
pop
inc
pop
xchg
dec
adc
xchg
out
jno
ds
into
xchg
push
out
fwait
out
rcr
aam
js
mov
dec
pop
and
fwait
push
adc
fstpl
jae
pop
loopne
mov
inc
dec
adc
push
insb
xchg
adc
insb
test
jg
jge
fprem
push
and
cmp
mov
and
mov
mov
fadds
mov
inc
insb
pop
paddw
mov
inc
adc
cmpsb
ljmp
stos
sub
push
cmpl
adc
ljmp
aas
xor
outsb
push
xor
mov
xchg
ficoms
mov
sub
in
out
pop
cmpb
les
xor
insl
pop
or
sahf
add
mov
or
inc
out
xchg
jp
idivb
jle
pop
scas
or
mov
in
stos
ret
pop
jno
movsl
mov
xor
mov
popa
adc
in
addl
adc
fildll
mov
dec
fiaddl
gs
in
push
push
in
loop
and
push
shrb
push
icebp
add
push
xchg
dec
pop
in
xorl
sub
enter
icebp
or
sub
fwait
or
or
lods
cs
negb
test
or
mov
inc
rorl
jg,pt
dec
loope
lods
js
cs
jp
sarb
pop
adc
pop
sbb
movsb
xor
fdivrl
mov
xchg
dec
dec
push
pushl
jg
jl
mov
cld
repz
inc
scas
push
xchg
inc
pop
jecxz
out
inc
ljmp
clc
mov
inc
pushf
pop
and
inc
cmp
insb
insl
push
jg
cmp
dec
inc
inc
je
inc
lret
dec
sbb
shl
pop
or
lret
lret
pop
jge
xchg
sti
add
out
add
iret
mov
push
dec
sub
mov
and
pop
aaa
movsb
fcomps
enter
lret
sub
mov
flds
out
pop
add
mov
cmp
mov
arpl
mov
add
ds
jns
mov
sub
adc
xchg
add
leave
bound
aas
sbb
dec
les
lcall
push
sub
lock
jo
out
stos
cmp
sbb
lcall
ret
and
xor
mov
pop
fwait
or
cmpl
and
dec
lods
les
mov
jb
push
push
push
push
lock
bound
or
sub
inc
pop
fwait
inc
stos
inc
pop
jecxz
aad
xchg
loopne
ret
xchg
addr16
pop
push
dec
mov
fadds
adc
xor
fcmovb
dec
jl
cli
jbe
leave
push
mov
dec
lea
fildl
xchg
dec
andl
jp
add
sub
sbb
sbb
jbe
inc
in
adc
dec
push
mov
std
movsl
push
xchg
push
push
inc
cld
test
pop
test
push
mov
mov
mov
adc
jg
cmp
fdivrp
inc
lds
fdiv
insb
sbbb
ds
dec
mov
clc
push
rcr
loope
push
mov
outsl
insl
jecxz
arpl
pop
add
sub
mov
xchg
test
ja
shr
lock
aad
mov
mov
add
cmpsb
cmp
cmp
pop
lret
xchg
lcall
fiadds
mov
in
jbe
arpl
out
mov
cs
add
jmp
ja
mov
repnz
scas
aam
inc
clc
pushl
or
repnz
lods
adc
push
cmpl
out
test
mov
mov
add
push
jo
pop
xchg
lods
andl
push
mov
cld
insl
add
jg
pusha
subl
frstor
pop
in
add
or
lret
adc
fdiv
lcall
outsb
sbb
mov
mov
push
xor
inc
int
sub
sub
bound
fcomps
cmpsl
or
clc
pop
sarb
in
stos
out
jl
inc
sbb
dec
fildl
stos
xchg
stos
pusha
sbb
out
pop
in
aaa
add
cmpsb
iret
repnz
sbb
xchg
test
mov
sbb
cmp
xchg
aam
daa
pop
shll
jb
nop
je
and
jl
jecxz
lock
push
loope
push
sbb
pop
xchg
mov
fadds
cli
insl
sti
mov
pop
sarb
loope
cmpsl
les
aam
cs
xor
into
outsb
test
stos
push
push
push
inc
or
ljmp
pop
nop
pop
jle
xor
adc
sahf
or
call
fsubl
dec
or
inc
ljmp
jb
bound
dec
andb
push
and
and
xor
loope
xchg
shlb
call
jg
bnd
inc
dec
icebp
push
pop
or
sti
jbe
leave
pop
dec
aam
sub
ss
filds
adc
jmp
xchg
scas
xchg
adc
outsb
imul
push
cmp
ss
aad
enter
cltd
test
sub
es
jp
lret
ss
das
xor
xchg
inc
and
jnp
ret
mov
add
hlt
ljmp
sti
xchg
xchg
icebp
push
lret
es
cli
loopne
fimull
push
push
outsb
fimull
push
cmp
je
aas
pop
xchg
iret
ret
sbb
push
or
je
xchg
pop
inc
pop
lock
fcomps
dec
test
rcl
movsb
jae
stc
mov
call
inc
dec
dec
push
xchg
stos
fisubrs
push
stos
das
rcrb
or
pop
xor
fisttpll
insb
push
lret
dec
sti
subb
push
or
mov
out
int
clc
jae
dec
outsl
add
sbb
lods
lret
mov
rcrl
pop
and
cs
and
inc
dec
popf
pop
xor
jae
jg
jle
cmp
dec
xor
pop
inc
adc
cli
pop
outsb
ret
testb
lret
das
jbe
mov
inc
dec
repnz
push
stos
cli
xchg
mov
or
fidivl
subb
mov
jmp
fisttpl
mov
orb
push
call
in
stos
jle
in
popf
bound
mov
ja
imul
xor
jecxz
or
test
push
xchg
or
jne
push
push
andb
adc
add
mov
pop
and
cld
popa
push
add
js
jecxz
jb
test
pop
jg
add
add
xchg
fbstp
testl
sub
ljmp
xor
aaa
aas
push
cwtl
jge
sbb
das
inc
mov
data16
dec
cmp
cmc
xchg
fadds
orb
jecxz
jae
xchg
pop
aad
lods
jb
mov
cli
popf
mov
fdivl
aam
cmp
bnd
mov
inc
jne
dec
lea
dec
xchg
xchg
cmpsl
push
divb
cmp
add
mov
cltd
je
in
or
popf
xor
out
leave
decl
scas
punpcklbw
adc
mov
ds
sbb
clc
dec
ret
and
cmp
lds
xchg
sub
cmp
cmpb
cmc
movsl
pop
xchg
push
mov
pop
sbb
aas
mov
mov
out
insb
or
clc
test
sub
loop
std
add
jo
ss
pop
es
fbld
insb
bound
xchg
fwait
push
gs
cmpsb
mull
ss
movsl
dec
mov
add
add
incb
into
div
add
lcall
cmp
adc
inc
movsb
divb
loopne
sbb
insb
sbb
add
insl
push
mov
pushf
std
add
rorb
pop
cmp
loope
add
mov
jge
adc
hlt
dec
mov
adc
clc
mov
pop
cld
xor
roll
andl
dec
xor
dec
fs
xchg
lcall
and
iretw
add
pusha
cmc
out
daa
cld
cmpsl
dec
testb
imul
mov
lret
rclb
outsl
inc
loopne
xchg
mov
cmp
movsb
fsubrl
cmp
xchg
or
xchg
lret
incb
mov
add
in
sub
or
lock
mov
or
lock
sbb
lea
test
push
ret
es
test
fmuls
sub
mov
mov
jo
fbstp
mov
rcrl
push
or
cs
adc
jmp
int
lods
dec
mov
inc
ret
lret
fs
push
xchg
hlt
mov
or
fucomi
stos
xchg
loop
cmp
add
xchg
xchg
dec
add
pusha
add
pop
push
adc
sbb
test
cmpsb
ret
xor
lret
sbb
inc
cmp
cmpsl
jae
or
aaa
mov
hlt
stos
push
mov
fstpt
adc
pop
ss
daa
imul
inc
shld
push
mov
xor
and
inc
push
add
xor
sahf
cld
inc
cs
sub
mov
mov
notb
mov
adc
mov
lods
add
ss
das
jp
cld
lret
cwtl
dec
jns
insl
sub
mov
sbb
sub
std
popa
and
sbb
sub
push
outsb
or
pop
jg
jno
push
and
or
and
push
xchg
outsl
adc
or
cmp
xchg
mov
in
mov
rcrl
arpl
mov
mov
cli
ret
insb
cmc
daa
pop
mov
sub
mov
lods
in
loope
int
cmpsl
mov
sbb
or
out
rol
rolb
and
mov
xor
xor
aaa
mov
rolb
mov
ret
pop
or
jle
mov
out
add
test
and
xchg
imul
je
adc
mov
mov
scas
mov
divl
jno
cmp
jge
adc
cmpl
lret
icebp
scas
or
fwait
dec
lahf
imul
hlt
stc
xchg
or
fdivl
shl
xchg
jg
loopne
sarb
adc
mov
hlt
pinsrw
sub
and
jne
lock
mov
lret
xlat
add
ret
jns
out
rclb
fwait
rcrl
arpl
mov
or
push
shll
daa
xor
sub
cld
adc
sub
imul
or
sbb
loope
jp
sub
leave
adcb
pop
pushf
adc
sbb
pusha
push
mov
icebp
cli
push
pop
or
xor
sbb
sbb
rcrb
iret
rorl
adc
popf
add
mov
ret
ret
out
sahf
sahf
inc
add
popf
lahf
push
cs
mov
cmpsb
mov
aam
ret
adcl
mov
or
rcrb
movsb
and
add
mov
adc
or
sbb
out
cmpsl
rcrb
scas
xchg
adc
subb
sbb
push
icebp
mov
push
dec
inc
cmpsl
cld
sub
adc
add
xchg
push
adc
cld
shl
add
out
outsb
clc
nop
pushf
pop
mov
movsl
xchg
jb
and
dec
sahf
adc
sbb
cs
add
cmpsl
or
sub
out
ljmp
add
cli
mov
xchg
ds
sbb
rclb
adc
mov
pusha
jae
imul
into
dec
int3
pop
xchg
enter
sbbb
xor
int3
les
jle
mov
adc
mov
sub
mov
pop
cmp
test
sub
cmp
and
pop
ja
cs
jo
or
push
loopne
mov
imul
das
cmpsb
rorb
xor
bound
push
je
fstpl
jo
jne
movsb
push
int3
xchg
xchg
call
or
pop
xchg
pusha
mov
jno
ret
jnp
and
cmp
or
jp
testl
xor
cmp
fildll
lods
or
push
ja
stos
mov
jl
lahf
dec
inc
adc
sar
push
loop
mov
inc
add
dec
ret
inc
and
stc
rcll
mov
shrb
pop
push
cmc
or
ret
int
and
cmpsb
push
xchg
pop
repz
mov
fdiv
jne
mov
mov
mov
mov
lret
shlb
fsubr
sub
aad
cs
loopne
stc
or
in
ret
mov
adc
mov
push
dec
pop
lods
jbe
lahf
jge
and
push
mov
sbb
jmp
dec
mov
cmpsl
push
mov
cmp
push
mov
ret
inc
mov
sbb
fsubs
das
test
xchg
jne
nop
add
insl
aas
hlt
jmp
aas
cmpsb
repnz
int
dec
out
sbb
xchg
add
dec
popf
cmp
lods
insb
push
xchg
sbb
enter
xchg
add
xor
xchg
cmc
add
hlt
sub
in
cmp
mov
add
je
push
lret
bound
cmp
imul
clc
shrl
sbb
cltd
ds
mov
loop
push
push
mov
mov
test
jl
mov
lds
dec
xor
mov
mov
xor
and
mov
adc
mov
iret
mov
adc
sbb
pushaw
sub
lea
dec
adc
mov
cmp
adc
fcoms
es
mov
add
imul
xchg
je
nop
mov
cld
mov
loopne
outsb
sub
lds
std
sarb
cmc
pop
lahf
lahf
jmp
ret
xchg
cld
ja
leave
rcrl
lods
loopne
fwait
mov
decl
dec
jns
gs
pop
sub
pop
jne
cwtl
fdivl
test
jge
add
mov
mov
into
inc
ret
loopne
jp
shll
push
inc
ret
pop
mov
sbb
or
push
movsb
insl
lock
adc
inc
pop
sbb
imul
and
and
call
or
adc
mov
pusha
cld
push
jns
lods
mov
fiaddl
jbe
cltd
notl
mov
sbb
aad
mov
stos
test
in
jg
fucom
outsb
xor
xlat
lret
call
cltd
mov
sub
adc
push
cld
ret
mov
push
adc
sbb
je
adc
lock
jecxz
outsl
in
mov
and
cmp
sub
dec
inc
out
push
cs
sub
mov
xor
dec
in
jecxz
inc
push
rolb
enter
or
mov
adc
adc
push
mov
mov
ds
mov
in
inc
push
pop
or
cs
mov
cmpsb
popf
pop
adc
call
jne
and
popa
inc
add
xor
ror
adc
jne
or
cld
out
jo
adc
notb
pop
rcrb
cmp
sbb
aas
mov
rorl
cmp
pushf
sbb
and
push
jp
rorb
pop
lods
test
aam
sub
adc
dec
loop
mov
inc
mov
push
jle
jo
mov
popa
in
hlt
or
daa
push
inc
mov
aad
pop
loop
scas
ljmp
dec
std
mov
mov
mov
lret
popa
hlt
int
out
lcall
outsl
stc
nop
push
sbb
sub
fisubl
clc
movsb
add
cmpsb
xor
pop
cmp
outsl
push
xchg
sahf
mov
mov
out
pusha
mov
test
stc
xor
add
aad
in
xchg
sbb
ljmp
pop
pop
iret
push
ret
dec
cmp
std
xor
lret
add
jge
popf
sub
rorb
in
cmpps
sti
sbb
push
popa
loop
or
jge
lret
repnz
inc
clc
or
push
out
not
leave
pop
mov
push
into
aam
xchg
loopne
pop
out
xchg
adc
fwait
das
ret
adc
xlat
inc
push
xor
jb
rorl
adc
fcomip
add
mulb
ja
inc
xchg
mov
xor
shrb
push
imul
int3
and
bound
lods
inc
xchg
mov
inc
loop
cmpl
aad
push
ret
aam
mov
add
jno
outsb
and
lods
mov
nop
inc
imul
rcl
cmp
pop
mov
sbb
xchg
pop
sbb
mov
fs
jp
and
push
pop
or
sbb
sbb
lret
mov
jbe
je
add
gs
adc
fadd
cs
push
scas
aad
inc
subl
imul
lret
sub
xor
or
inc
int3
int3
push
push
movsl
add
in
adc
mov
xchg
cmp
mov
arpl
dec
lret
jmp
xchg
arpl
bound
or
lcall
sub
add
sbb
mov
fimuls
test
scas
inc
arpl
xor
es
stos
mov
imul
jae
cmp
aas
inc
inc
xchg
ss
in
cmp
add
mov
pop
inc
lds
stos
add
dec
pusha
mov
and
inc
movsl
movsl
or
lea
notb
sbb
sub
xor
jae
xor
push
or
xchg
mov
pushf
inc
inc
mov
cmp
jbe
jo
jmp
stos
jge
shrl
mov
inc
ljmp
out
push
mov
ds
add
and
ret
in
outsl
dec
popa
dec
and
mov
mov
lods
inc
and
push
add
pusha
jo
inc
xor
shrb
pop
std
jp
mov
sub
xchg
inc
mov
pop
or
out
dec
mov
fucom
dec
fistps
in
mov
sub
lcall
pop
data16
push
mov
aam
inc
mov
mov
push
inc
xor
and
or
mov
rcrb
push
add
pop
mov
jmp
sub
out
jecxz
ret
es
cmp
and
dec
popf
rol
xchg
pusha
es
add
les
mov
or
add
leave
lds
jg
xor
rorl
push
or
mov
adc
sub
sub
aas
dec
push
sub
sbb
cmpsl
jecxz
inc
dec
dec
pop
fs
das
mov
in
cltd
rolb
aam
push
mov
movb
arpl
dec
hlt
add
inc
arpl
arpl
xchg
mov
push
mov
xor
jle
adc
sbb
pop
icebp
hlt
aaa
pushf
jno
jl
or
pushf
or
fldcw
decl
xchg
lahf
jle
push
mov
xor
fcmovb
aam
ljmp
jo
dec
ds
fsubp
cwtl
ljmp
sbb
addb
xor
dec
xlat
push
mov
fwait
je
pop
adc
jp
jmp
cmp
adcb
popa
rolb
mov
aad
fdivrl
or
loope
lcall
dec
cltd
xchg
jb
test
incl
or
inc
test
popa
cmpsb
sub
rclb
idivb
sbb
cltd
loope
jno
adc
jg
xchg
xor
cs
mov
push
inc
push
loop
fdivrs
mov
test
xor
scas
pop
dec
fistl
loop
ret
icebp
cwtl
icebp
adc
mov
inc
scas
aas
mov
or
es
stos
loope
cmc
mov
or
jo
jp
sub
xchg
push
movsb
mov
push
lods
inc
cmp
ljmp
out
sbb
in
aad
outsb
je
push
push
sbb
mov
test
pop
std
pop
push
push
sbbb
sub
xchg
popf
lock
pushl
xor
jne
int3
sbb
in
fwait
push
outsl
stc
sbbl
jle
inc
aad
out
mov
mov
and
or
mov
es
fisubl
inc
mov
mov
mov
xchg
jb
sti
and
xlat
imul
scas
xchg
jno
aas
ljmp
insl
fs
inc
enter
mov
mov
mov
cmp
clc
clc
iret
xchg
mov
mov
dec
adc
cmp
mov
cmp
mov
jne
fwait
test
ss
ret
inc
mov
sbb
add
inc
push
jno
cmp
push
mov
lock
add
fwait
pop
or
insb
inc
sarl
xorl
popf
mov
pushf
cmp
push
scas
sbb
xchg
cmc
lock
adc
push
inc
push
sbb
adc
sbb
jae
lods
push
into
xchg
cmp
sbb
unpckhps
and
dec
inc
dec
xchg
sbb
lret
or
jnp
pop
mov
mov
sahf
xlat
shl
pshufw
or
cmp
cmc
test
sbbb
test
adc
fstpt
cmp
lds
in
mov
pop
mov
pusha
mov
mov
or
adc
rcll
loope
jp
or
sub
fildll
mov
or
shlb
jecxz
subb
cmp
pop
icebp
cli
repnz
clc
dec
inc
xor
mov
fimull
mov
or
fmul
sub
andb
sar
jbe
movb
mov
aas
ret
jmp
mov
push
sahf
lods
call
test
cld
aad
cmc
sbbb
mov
andb
sub
xchg
and
das
jbe
and
ja
cli
rorl
and
mov
mov
pop
jnp
ret
in
cmp
inc
lods
shlb
les
sbb
test
repnz
add
shlb
idivb
and
xlat
enter
adcl
or
mov
ret
dec
cmpsb
add
pushf
inc
sbb
imul
add
out
data16
and
adc
mov
cld
pop
clc
jo
stos
cmp
jb
jle
pop
jge
pop
mov
sub
mov
adcb
orb
and
test
adc
data16
pop
notb
add
inc
mov
ror
and
stc
rolb
daa
mov
mov
fldcw
popa
cmp
in
test
mov
shl
cld
push
add
mov
xor
jb
pusha
jle
test
jno
mov
cld
jg
pop
lcall
jb
stc
in
add
minps
rorb
sbb
rclb
mov
scas
or
pop
ljmp
cld
mov
jnp
sub
fdivr
mov
mov
inc
mov
dec
aam
push
and
call
pop
andb
mov
loop
cmp
sbb
in
dec
add
adc
add
arpl
and
aad
add
cmp
test
jmp
dec
and
sub
sub
dec
dec
xor
adc
inc
adc
jne
cmp
push
mov
inc
or
jne
lods
xchg
mov
jecxz
sub
call
add
into
lret
test
pop
insl
mov
xchg
into
out
cli
sub
aad
inc
inc
cwtl
lret
orb
dec
mov
in
xor
shll
and
mov
lods
mov
sub
lret
call
test
jo
and
push
cwtl
xchg
pop
clc
jecxz
ret
ret
js
jge
mov
pop
pop
rcrb
or
jl
lea
inc
int
sbb
lock
scas
outsb
clc
repz
and
imul
ljmp
popf
clc
push
cmp
movhps
pop
add
push
sbbb
mov
lss
fsubr
cmp
pop
cmp
lret
fistps
add
xor
xor
shlb
sbb
inc
push
mov
or
ret
and
and
ljmp
adc
jbe
jl
aad
jecxz
sbb
push
pop
sub
lahf
rcr
hlt
and
stos
inc
adc
stos
dec
push
xchg
sbb
jb
pop
pusha
das
movb
push
jmp
add
scas
gs
mov
je
repz
stos
mov
cmp
outsb
punpcklbw
push
lea
or
shrb
aas
lcall
mov
mov
push
iret
iret
lods
and
addl
out
fbstp
cs
xchg
movsb
shll
nop
call
cmpsb
repnz
push
test
jg
bound
mov
or
pop
cmpsb
jp
add
push
xchg
xchg
pop
js
cmp
push
in
clc
push
dec
es
xlat
fcoms
or
das
insb
mov
ret
ds
jmp
add
jl
add
insl
jo
pop
xor
data16
adc
pop
in
cwtl
jbe
aas
pop
call
fistpl
dec
or
add
sarb
sti
jmp
hlt
adc
in
shrl
adc
pop
or
lahf
cli
pushl
mov
inc
sub
std
nop
repnz
popa
xchg
outsl
pop
lret
adc
sub
push
mov
fwait
sbb
rcll
add
stos
js
push
cld
rorl
in
int
push
cmp
roll
push
andl
sub
jg
xchg
shll
adc
xor
fistl
into
jbe
fs
shrb
lret
je
push
sub
mov
idivb
shlb
nop
and
clc
dec
mov
xor
sub
sarl
test
push
add
lods
clc
and
push
std
xor
aam
push
push
mov
das
cmc
mov
jmp
loop
xchg
xor
push
add
or
es
insb
add
cmp
fldt
sbb
push
dec
je
pop
inc
test
adc
dec
mov
lds
in
scas
sub
mov
adc
adc
ss
jg
sbb
push
sub
xchg
orl
cmpsl
cltd
mov
adc
idivb
ds
dec
aad
cmp
push
and
les
xchg
cmp
test
call
cmp
cmp
int3
rolb
dec
cld
xlat
cmpsl
sbb
inc
pop
std
sahf
cmp
test
aam
jmp
pop
cmp
dec
es
sub
cmc
stc
into
xchg
scas
test
ficoms
mov
scas
pop
lods
lock
inc
add
cmp
movsb
mov
or
fdivrs
push
into
imul
das
mov
xor
add
jp
dec
push
dec
xor
lds
incl
inc
adc
iret
mov
push
loope
add
fistps
mov
jl
cli
arpl
lahf
xlat
mov
xor
push
mov
shrl
mov
and
dec
sti
jbe
jg
inc
pop
inc
push
xchg
pop
ret
dec
sub
gs
scas
int
stos
push
aad
pushf
test
call
sub
js
or
mov
jmp
fcmovnu
dec
call
fimull
shr
enter
mov
cmp
mov
or
push
sbb
inc
sub
cs
test
incl
stos
or
sbb
jmp
scas
dec
faddl
ljmp
mov
outsb
std
xchg
test
jbe
add
mov
jp
sbb
ljmp
push
bound
sub
xor
dec
inc
orb
icebp
inc
lea
icebp
rcl
loopne
add
cmp
ljmp
dec
sbb
jae
cmp
bound
jmp
shlb
add
sti
pop
mov
incb
rcl
call
mov
mov
push
add
mov
call
pop
cwtl
je
push
out
mov
scas
out
daa
test
push
mov
or
mov
enter
jb
inc
add
fdivrs
push
cmpsb
cs
sahf
jnp
and
mov
mov
or
insl
xchg
inc
lcall
aaa
sbb
sub
mov
loop
out
dec
cli
add
jl
enter
test
jb
clc
aaa
sbb
in
cmp
test
scas
dec
loope
pop
jbe
loopne
push
pop
icebp
pop
roll
jl,pn
mov
das
xlat
ljmp
call
ljmp
icebp
dec
pushw
cmp
cmp
cmp
fcmovb
or
jge
ss
sub
pusha
int
imul
mov
rclb
imul
push
andl
daa
inc
pop
lret
test
xchg
xor
inc
adc
cld
decl
inc
psrad
jae
pop
add
sbb
add
push
les
sbb
cli
inc
cli
nop
jno
mov
mov
pop
or
or
mov
and
dec
and
ss
mov
incb
dec
push
in
push
aaa
int
xor
call
imul
sarl
push
xor
aad
dec
mov
out
lock
movsl
mov
js
and
xorl
add
lock
incl
inc
xchg
add
je,pn
mull
mov
popa
pop
xchg
jmp
lea
sub
push
aaa
add
aas
cmp
cmp
ss
je
sub
imul
mov
push
clc
mov
adc
jmp
out
sbb
sub
bound
adc
mov
test
jbe
xor
lods
lret
dec
dec
daa
xchg
xor
rol
fdivr
stos
adc
iret
mov
cmp
hlt
pushl
sarl
jo
arpl
xchg
sbb
shrb
inc
clc
inc
sub
loopw
sbb
mov
xor
sub
iret
sub
sub
push
adc
cli
popa
push
cld
clc
and
out
and
push
sub
pop
xor
stc
je
decl
js
pop
les
xor
inc
xchg
std
add
insl
xlat
dec
xchg
mov
das
pop
mov
push
jnp
add
das
jmp
xor
pushf
add
cmp
ss
push
xchg
mov
pop
sbb
andb
jo
int
std
sub
insl
call
test
xor
xor
fiadds
jecxz
iret
cmp
test
pop
jle
int3
sub
aam
and
pop
cmp
inc
negb
dec
lods
sar
call
movsb
fstl
mov
jle
cmp
sub
sub
gs
adc
fs
ja
sub
jnp
std
sbb
pop
pop
mov
pop
sbb
mov
dec
aas
stos
lahf
push
pop
sbb
stos
rclb
icebp
decl
or
push
add
xchg
movsl
int
fcmovnbe
iret
mov
and
jmp
les
cmp
add
into
imul
pop
cmp
in
lock
xor
xor
cwtl
push
dec
in
xchg
jp
xor
ficompl
mov
inc
aam
adcl
mov
ljmp
subb
lock
push
mov
lock
mov
mov
add
or
push
mov
mov
arpl
cmp
or
jmp
add
dec
push
inc
aad
mov
pop
je
xor
xchg
icebp
inc
cli
mov
mov
xlat
adc
and
leave
test
je
cmp
fwait
mov
not
lret
jb
ret
mov
sub
loop
mov
int3
sub
sar
xlat
xor
lods
les
lods
xor
enter
test
in
jns
pop
mov
sbb
fldl
inc
jp
pusha
push
test
movsb
sub
fldl
pop
lret
ss
outsb
and
and
lock
sub
mov
adc
loop
add
dec
pop
mov
stos
sbb
cmp
pop
add
mov
mov
mov
aas
outsb
aaa
mov
cmp
fisttps
adc
adc
push
or
icebp
loop
dec
pop
cwtl
ja
out
mov
je
leave
push
sub
push
adc
mov
adc
sti
jnp
outsb
or
and
loopne
mov
add
outsl
pop
mov
cltd
ret
int
hlt
lret
xchg
dec
push
fdivp
negb
js
addl
fstpl
andb
mov
movsl
sbb
cli
and
pop
bound
push
xchg
jbe
std
push
test
push
cld
push
test
adc
and
push
jg
out
andl
add
pop
pop
fcmovnu
mov
hlt
testl
sbb
popa
cmpsl
pop
jnp
rolb
inc
pusha
cmp
test
inc
cwtl
incl
inc
jbe
fildl
dec
insb
mov
and
sbb
int3
pop
mov
or
pop
add
dec
mov
or
insl
pop
and
mov
decl
sub
mov
adc
insl
clc
xchg
push
in
push
push
push
xor
roll
mov
lods
pop
clc
adc
sbbl
ja
push
outsb
or
enter
rcll
adc
and
cli
idivb
push
push
xor
lock
sub
ljmp
call
hlt
or
and
in
clc
loope
loopne
inc
or
sbb
push
cmpsb
push
inc
mov
ljmp
inc
scas
adc
sub
lock
add
out
cmp
and
push
sbb
and
imulb
icebp
pop
aas
mov
fwait
dec
push
ja
shl
inc
mov
js
push
lock
xchg
ret
scas
and
sar
or
lret
inc
outsb
int
sub
mov
bound
xchg
out
cmp
pop
cmp
adc
sub
lds
push
test
or
bnd
ret
dec
push
xchg
orb
mov
jo
mov
outsl
dec
dec
setbe
push
dec
dec
sbb
jns
xchg
mov
mov
pop
mov
sbb
es
sub
cld
cwtl
hlt
je
mov
jmp
lret
fildll
jecxz
or
inc
or
into
push
movsl
clc
add
stos
mov
or
pop
decl
lock
add
js
in
sbb
push
test
or
cmpsb
in
in
insl
add
or
adc
pushf
loope
adc
out
dec
sarb
clc
scas
pop
xor
je,pt
mov
lret
jg
push
sub
clc
sub
addl
jns
add
or
push
and
repz
inc
std
push
adc
test
scas
lahf
sub
rcrb
and
loop
ret
clc
in
fidivrl
mov
pop
push
and
test
lahf
imul
cmpsb
enter
ret
lret
cmpsb
push
inc
lcall
xchg
sbb
and
mov
clc
pop
popf
popa
xchg
cwtl
xor
pop
push
adc
cmp
idiv
pop
adc
ja
jo
and
dec
loop
mov
adc
fdivp
mov
xlat
inc
mov
fimull
sub
fcomps
movsl
adc
sbb
mov
dec
mov
mov
scas
cmp
shlb
push
test
adcb
lret
mov
std
mov
rorb
adc
das
cli
cli
shrl
cmpsl
lea
pop
outsl
arpl
iret
scas
cli
scas
jb,pn
aaa
sbb
and
mov
ljmp
push
cmp
aad
cmp
mov
jmp
jmp
cli
call
rorb
adc
push
hlt
and
xor
add
pop
dec
xor
or
mov
xchg
mov
push
jbe
loopne
pop
loop
mov
nop
out
add
aam
xchg
cmp
fadds
call
lock
movsl
xchg
std
sbb
lcall
ret
or
inc
test
add
incb
or
das
pop
mov
js
jno
ficoms
sub
rcrb
xchg
ret
or
popf
pop
inc
movsl
mov
add
cmp
icebp
test
add
mulb
xor
hlt
sub
xor
out
push
pop
mov
adc
outsl
test
mov
or
and
mov
incb
jmp
mov
mov
loope
lcall
pop
dec
push
call
mov
icebp
sub
dec
cmp
jne
in
and
jno
cmp
push
pop
xor
stc
movb
push
int
inc
aad
gs
jo
roll
rclb
cwtl
cmpsb
lahf
in
xor
mov
ret
clc
ret
loope
out
es
add
or
dec
cmpsl
fs
adc
xchg
movq
xlat
fs
xchg
sub
push
les
out
enter
add
pop
imul
or
inc
pusha
inc
les
out
pop
lock
adc
test
gs
popa
fistpll
test
and
mov
jmp
or
cli
addr16
nop
rcll
xor
jp
and
add
xchg
mov
xor
mov
pop
push
xor
icebp
pop
sub
jne
jo
mov
xchg
mov
test
mov
inc
pop
or
or
mov
pop
mov
rorb
fsubl
inc
xor
in
scas
lret
add
and
mov
test
pushf
pushf
pop
into
add
sbb
mov
mov
and
and
push
popf
lea
mov
adc
push
lea
sub
dec
xchg
mov
inc
inc
movl
mov
mov
push
les
addl
mov
sub
aad
cwtl
sub
sbb
inc
sub
inc
mov
mov
pushf
pop
icebp
dec
mov
notb
sub
xor
push
xorb
mov
test
push
add
push
ss
mov
jmp
out
jb
loopne
fadds
out
lock
popa
inc
push
mov
push
test
and
andl
sbb
pushaw
cmc
aaa
mov
clc
add
out
es
push
shl
dec
add
dec
out
sub
jle
testb
sbb
stos
adc
cli
icebp
xchg
sahf
fstl
mov
xor
mov
mov
ds
or
les
fdivrs
loopne
xchg
add
jbe
mov
sbb
std
and
xor
adc
mov
rorb
sub
add
clc
pop
pusha
xor
xorl
xchg
clc
or
and
cmpb
or
cld
icebp
les
sub
or
xor
subl
fs
mov
mov
add
fisubrl
ss
bound
xchg
cmp
or
mov
push
aam
pop
fdiv
and
xchg
stos
jp
mov
sub
popf
insb
or
in
sarb
fadds
fmull
fstpt
ret
mul
std
mov
dec
pop
scas
adc
sarb
inc
shrl
adc
roll
shll
lods
int3
xor
sbb
sbb
inc
jnp
push
mov
adc
ret
dec
jne
lods
les
cmp
aam
push
mov
jnp
and
xchg
cmc
xor
divl
pop
jbe
in
jl
mov
and
xor
mov
std
je
shrl
pop
insb
enter
je
je
imul
adc
scas
call
cld
sub
pushf
ror
cmp
lret
out
dec
jno
into
jge
lock
sub
adcl
mov
xor
and
dec
jge
and
jb
or
push
insb
adc
mov
test
mov
in
add
push
mov
mov
ss
std
incb
ret
in
dec
sbb
mov
rcr
lods
jp
mov
mov
sub
stc
test
test
sbb
data16
xor
inc
mov
mov
clc
ljmp
or
jno
std
repz
ljmp
and
mov
jle
jle
loope
movsl
inc
sbb
adcl
add
scas
mov
pop
xor
jnp
xchg
fcomps
cli
push
mov
jne
push
xchg
ret
adc
stos
inc
add
call
push
imul
push
scas
xor
pop
fdiv
clc
loopne
mov
push
stos
jecxz
sub
inc
in
pop
dec
lret
adc
dec
clc
jg
mov
es
insb
mov
aam
xor
xchg
mov
sbb
or
sbb
xlat
mov
loopne
sarl
shlb
jo
ds
pop
fistpll
inc
xchg
ja
test
aam
outsb
cmc
add
jbe
mov
idivb
das
lcall
int3
jne
xor
hlt
out
pop
iret
sub
popa
and
cmp
stos
mov
adc
pop
shlb
call
inc
icebp
je
std
add
test
mov
xchg
cmp
outsl
dec
fcoms
add
out
popa
loop
shrb
xchg
xchg
add
mov
lahf
jge
bound
push
push
into
cmp
cmp
popf
push
cli
mov
jmp
cmp
call
fsubrs
add
mov
dec
ret
sbb
ret
sbb
add
inc
adc
add
jae
cld
fcompl
add
aad
lcall
ret
xchg
cmp
or
jle
or
jnp
movsl
add
or
aad
imul
incl
aaa
or
sahf
sub
mov
call
cwtl
sbb
xor
push
pop
cmpsb
jge
cmpsl
ret
inc
in
jo
mov
inc
xchg
or
stos
add
mov
das
jne
dec
lret
loope
inc
xor
or
inc
lods
sub
cld
loop
push
add
sbb
xchg
adc
cld
fnclex
or
sub
scas
jmp
xchg
ds
stos
mov
or
out
sar
add
push
or
push
adc
jnp
jge
adc
mov
add
outsb
mov
lods
mov
xor
jb
stos
fldt
push
and
fistpll
dec
jg
shl
mov
xlat
jbe
cmp
push
or
mov
hlt
dec
mov
sbb
cmp
xor
add
fdivs
sbb
cmp
popa
push
sub
adc
push
iret
scas
fsubl
or
cmpsl
push
aam
xchg
xchg
pop
and
fmul
or
gs
mov
ja
inc
cld
sbb
fucomi
addb
mov
dec
sahf
sahf
mov
pusha
dec
orb
movsb
mov
pop
mov
pop
push
fs
test
rcl
incl
adc
sub
mov
ret
push
shlb
test
test
popa
fsubp
mov
pop
out
data16
mov
mov
ds
pushf
in
mov
push
test
pop
lock
ds
pusha
addl
cmpsb
pop
outsl
rcrl
lock
pusha
aas
ret
add
and
jl
push
cmp
dec
ljmp
pop
jg
shrl
and
imul
loop
js
fdivs
loopne
imul
jbe
in
aad
sbb
push
push
in
sbb
fsubl
dec
inc
or
jo
mov
outsb
adcl
cmp
jnp
push
shll
xchg
dec
inc
xchg
mov
das
pop
push
adc
pushf
ret
add
cmp
mov
test
hlt
sub
pushf
inc
sbb
nop
cmp
clc
sarb
stc
mov
add
mov
sbb
cmc
dec
mov
push
cmpsl
mov
adcl
sbb
subb
sbb
push
add
scas
jmp
cmc
orl
out
inc
cmp
pusha
jmp
ficoml
popa
push
sbb
iret
mov
mov
sbb
ret
xchg
hlt
clc
lea
inc
aaa
mov
test
dec
sub
fidivl
outsl
mov
nop
ret
pop
mov
addl
pop
add
mov
add
ret
rolb
imul
and
mov
jbe
test
and
sti
ss
or
cmc
je
frndint
and
mov
in
mov
inc
inc
xchg
mov
test
xchg
pop
js
pop
mov
leave
ret
pop
jle
ljmp
inc
dec
jno
es
mov
scas
fwait
pop
or
inc
push
pushf
or
pop
mov
dec
loope
mov
fidivl
sub
arpl
and
cwtl
cs
cmp
jne
xor
or
cmp
out
add
rcrl
ja
fs
cmp
adc
fdivp
movsb
jmp
xorb
rcrb
add
push
mov
adc
mov
mov
jle
fldl
test
lahf
jp
inc
aas
pop
sarl
xlat
movl
mov
ljmp
movsb
push
push
sbb
push
mov
and
sub
hlt
mov
int3
and
clc
inc
xor
in
mov
cmp
shl
lods
orl
push
ljmp
loopne
mov
xor
dec
push
test
add
call
push
in
push
js
loopne
add
popa
or
pop
xor
pop
fiaddl
cmpsb
jle
mov
movsl
rorb
pop
jns
xor
jecxz
imul
and
mov
out
notl
adcb
xchg
lock
sarb
inc
movsb
push
mov
pushl
xlat
push
ret
sbb
or
pop
test
cmp
xchg
pop
shlb
mov
aas
cmc
dec
iret
js
testl
push
xor
jl
sub
sub
sti
shl
and
out
pop
pusha
adc
arpl
scas
push
or
jl
test
pop
pop
sub
movsb
fldenv
enter
lods
lods
mov
add
sbb
cmp
jp
xor
sub
and
inc
mov
inc
jo
adc
push
cld
cmpsb
fidivrs
fimull
cmp
mov
jle
popl
pop
mov
add
push
push
loop
push
daa
dec
addr16
push
out
mov
push
pop
out
test
inc
fisubl
lock
ret
mov
shrb
push
out
inc
jmp
into
ds
add
dec
and
push
lret
and
lods
roll
or
mov
cmp
cmp
or
rcr
lret
add
mov
mov
ljmp
fs
xor
jbe
pop
sarb
sub
or
mov
push
nop
mov
repnz
es
adc
inc
jbe
pop
mov
call
ret
int
iret
andb
shl
incb
dec
lds
stc
popa
push
scas
jns
orb
adc
leave
ljmp
pop
repz
hlt
loopne
xor
xor
fmuls
or
cmp
adcb
addr16
dec
or
xlat
mov
push
xlat
dec
xchg
dec
push
mov
rol
pusha
jne
cmc
pushf
popa
fcomps
jo
dec
adc
inc
dec
cmc
popf
dec
inc
xchg
or
dec
push
test
xor
jmp
pop
or
adc
or
sbbl
inc
mov
leave
fwait
xchg
inc
and
cwtl
clc
xor
jecxz
outsl
pshufw
into
dec
sbb
fcomp
test
adc
or
sub
loopne
sbb
mov
pop
pop
ret
sbb
xchg
push
inc
pop
sbb
xor
dec
pop
mov
inc
mov
int3
mov
xlat
cmp
adc
iret
std
jl
mov
inc
dec
addr16
lret
jg
dec
add
adc
jnp
ds
lea
sbb
mov
divl
add
cmova
aam
mov
loope
push
jo
adc
mov
nop
dec
fwait
sbb
stc
xor
and
data16
mov
pop
sbb
push
stos
pop
cmp
mov
add
add
inc
sbbl
sarb
in
rcrl
mov
mov
sub
add
ret
inc
sbb
arpl
cwtl
dec
test
nop
outsl
and
mov
cmpsb
cmp
nop
loopne
icebp
addb
imul
cmpsl
add
mov
out
jnp
mov
mov
xor
jmp
shr
sbb
xor
dec
aaa
dec
mov
ffreep
pop
andb
icebp
pop
fldl
mov
xor
mov
addr16
mov
lahf
fstpl
jmp
test
roll
dec
test
scas
sbb
movsl
fsubs
leave
jnp
inc
scas
cmpsb
and
add
ss
cmc
xchg
arpl
shrl
mov
je
js
adc
out
sbb
fwait
cwtl
fadds
mov
mov
sbb
sti
dec
add
and
xchg
cld
cmpb
lds
xchg
clc
add
cli
dec
jne
sbb
mov
adc
lea
in
xor
push
sub
es
dec
push
add
ja
pushf
jecxz
or
xchg
sbb
in
in
shrb
ljmp
jmp
pop
xchg
lds
rol
test
xorl
push
repnz
mov
adc
add
pop
lods
sub
xchg
mov
daa
shlb
cmp
pop
aaa
call
scas
cltd
jmp
add
mov
jne
rorb
or
out
push
or
pop
shl
dec
js
inc
int
mov
ret
mov
jle
or
cmc
aam
hlt
rol
js
or
or
fmuls
sub
xor
enter
jge
scas
and
add
jns
mov
mov
push
xor
into
pop
arpl
lcall
mov
xlat
repz
jae
inc
jo
stos
in
push
mov
outsb
test
xchg
xchg
or
jns
push
inc
daa
pop
andl
fcmove
aad
daa
andl
xor
sub
jno
jbe
cmp
mov
cmc
scas
inc
jae
hlt
cmp
repnz
cmc
sub
xchg
add
sub
mov
or
out
mov
xchg
xor
imul
sbb
mull
pop
mov
test
pusha
push
mov
and
jno
pop
xchg
ja
ret
adc
or
adc
and
xlat
stos
add
cs
insl
jno
or
mov
jge
xor
sbbl
or
fwait
mov
mov
cwtl
cli
xor
add
psubd
cmp
in
aas
push
or
lods
popf
ljmp
pop
sub
movsb
addl
scas
stos
adc
shll
jl
loope
pop
add
jns
lock
test
in
sbb
outsl
sbb
mov
in
push
mov
mov
and
inc
sub
fstl
rorl
push
inc
in
loopne
test
sub
push
je
or
or
icebp
les
int3
fdivs
push
icebp
xor
fsubs
out
lahf
push
push
addr16
and
mov
roll
jle
and
es
roll
cld
sub
lcall
jnp
daa
mov
xchg
jge
insl
jecxz
pop
pusha
xor
or
clc
mov
push
sub
sbb
sbb
push
ffree
jl
jp,pt
pop
add
push
sub
sub
mov
cmc
sti
xlat
addb
mov
stc
mov
push
loopne
lret
cmpsl
fadd
xchg
andl
js
test
mov
bound
inc
in
pusha
call
sar
loopne
enter
mov
icebp
fdivrs
and
inc
jmp
nop
dec
imul
add
fmul
mov
push
cltd
cwtl
cmp
scas
mov
add
rclb
cmp
pop
pop
dec
js
cli
lret
jns
lahf
icebp
loopne
sub
mov
nop
aas
push
or
push
add
xlat
jp
cld
jle
pop
loopne
xor
dec
dec
dec
imul
dec
lahf
or
pusha
mov
dec
cld
dec
movsb
xchg
xchg
test
jg
hlt
mov
pop
outsb
adc
mov
xchg
sub
clc
mov
addb
sub
and
outsl
pushf
cmp
fucom
push
aad
ljmp
movsl
divb
insl
imul
mov
dec
mov
cmp
or
adc
jge
jle
pop
rorb
lret
ds
pop
or
add
incb
into
pop
inc
data16
imul
bound
xchg
xchg
scas
pop
xchg
and
jne
subb
icebp
xor
mov
mov
and
jns
jb
and
xor
or
into
cld
insl
jns
rolb
add
xlat
xor
mov
sarb
and
popf
out
cmp
lcall
pop
jae
arpl
scas
adc
pop
dec
cmpl
mov
cmp
loope
je
push
pop
or
out
in
xchg
pop
loope
jo
bswap
pop
xchg
in
mov
mov
push
pusha
xchg
fneni(8087
pop
mov
andl
loop
lea
adcb
adc
out
lahf
shl
imul
call
mov
mov
cmp
imul
sub
mov
cmp
push
cs
mov
xor
fcmovnb
sub
xchg
int
sub
lcall
mov
mov
call
add
test
xchg
call
sbb
popf
imul
pop
cmpsb
push
ficoms
inc
mov
mov
fcompl
jmp
fnstcw
jge
test
ret
xorb
xchg
cmp
cmc
push
push
mov
mov
shlb
adc
mov
mov
and
cmp
dec
mov
mov
xor
popf
fdivp
test
mov
sub
add
adc
jp
inc
pusha
into
cmp
lock
push
clc
movsl
ja
repnz
cli
pusha
dec
daa
pop
shl
in
adc
jo
cmp
ljmp
pop
add
out
pop
adc
mov
mov
int
mov
addps
jp
into
scas
aas
insl
insl
mov
in
mov
imul
ljmp
cltd
aam
ds
mov
mov
jl
iret
aaa
mov
mov
das
scas
mov
fdivrs
push
cmp
adc
pop
pop
das
lods
push
loope
call
rcll
shrl
cmpsl
dec
icebp
js
std
leave
and
inc
ret
out
lea
inc
lret
cs
add
xlat
sbbl
dec
ss
cmp
int
jl
pop
or
ljmp
xor
adc
repnz
push
inc
mov
mov
add
dec
adc
jmp
imul
fstl
mov
mov
cmp
jb
fidivl
inc
add
mov
outsb
loop
or
aaa
adc
fprem
shll
repnz
jmp
lcall
lcall
and
mov
dec
paddsb
mull
dec
jmp
cmp
pop
pop
inc
lds
adc
shr
add
add
xchg
lods
jmp
test
das
pop
push
push
mov
cmp
out
test
mov
and
jne
hlt
add
or
jnp
inc
loopne
mov
imul
and
stos
adcl
ret
not
dec
add
cmpsb
lock
inc
sub
insb
jb
ds
aam
notb
icebp
push
xchg
pop
enter
popa
and
rorb
ret
adc
outsb
cli
lods
popf
je
cmpsl
mov
in
sbb
mov
push
mov
clc
cmp
stos
adc
push
cmpsb
jo
enter
push
pop
aaa
test
add
outsb
cs
xchg
sbb
mov
push
and
or
mov
dec
or
lcall
or
subl
fisttpl
mov
out
inc
and
cltd
xchg
fmuls
sbb
addr16
sub
sbb
mov
pusha
sub
and
cmpsb
mov
pop
pop
test
pop
dec
mov
ds
xor
xchg
jns
push
ss
mov
sbb
fbstp
rcrl
fdivr
loope
mov
jp
fdivrl
data16
inc
cmp
cltd
or
push
ds
mov
add
mov
dec
test
push
js
fdivl
in
aas
testl
mov
xchg
mov
adc
add
rolb
fistpll
decl
lods
pop
sub
shrb
cmp
dec
ss
sub
lods
mov
jecxz
adc
ret
mov
dec
dec
push
mov
mov
stos
fsubl
jmp
movsb
sbb
mov
pop
clc
and
leave
shll
outsb
lods
je
das
ljmp
mov
out
leave
dec
pop
xor
xor
xorl
scas
inc
inc
mov
pop
cmp
imul
dec
cs
call
je
cmpsl
pop
mov
das
or
inc
and
mov
inc
adc
rcll
cmp
cmpsl
lcall
pop
outsl
repnz
push
cmp
mov
sbb
mov
pop
scas
inc
nop
xchg
mov
outsl
push
sbb
mov
and
mov
push
push
pop
pusha
repz
mov
push
pop
and
out
mov
add
clc
mov
hlt
mov
xor
lods
fstpt
repnz
movsb
and
mov
je
mov
add
dec
lahf
adc
and
xor
mov
add
pop
mov
icebp
daa
sbb
push
xchg
mov
xor
push
dec
popa
jle
arpl
aad
loopne
rcpps
sub
and
mov
sbb
insl
sbb
pop
mov
xor
lods
call
cvtps2pi
xor
test
vmread
cmp
mov
cmc
out
adc
mov
push
xchg
pop
push
out
push
jge
add
mov
push
pop
mov
ret
and
mov
flds
movsb
push
add
inc
das
lcall
and
inc
lret
xor
cmp
pop
out
inc
mov
dec
lcall
int
out
scas
mov
sub
and
js
xchg
sub
pop
xchg
mov
test
add
call
mov
jl
pushf
push
je
insb
push
add
jp
jmp
xorl
popa
fbstp
mov
jle
jb
insl
clc
push
in
mov
jne
push
pop
loope
cmp
mov
sub
cmp
cmpsb
and
sub
ja
cld
clc
push
in
xchg
dec
mov
out
inc
and
sbb
cld
out
mov
mull
jmp
scas
loope
adc
pop
inc
xchg
push
mov
pop
jp
mov
repnz
push
aas
or
fmuls
ret
xchg
dec
mov
push
cmp
mov
cmp
popf
cli
xchg
dec
test
lock
push
add
sbbl
rol
cmp
arpl
xorl
inc
clc
sbb
stc
add
and
sbbb
xlat
sbb
call
push
leave
push
sbb
sbb
and
mov
dec
out
pop
in
xor
nop
insb
movsb
xor
or
in
sbb
push
mov
xor
cltd
inc
iret
or
imul
loope
push
xchg
pop
imul
xchg
adc
scas
popf
sub
xor
daa
jg
lods
mov
les
je
cmpsl
or
pop
into
scas
jmp
mov
insl
dec
inc
cmp
mov
push
dec
addr16
dec
pop
fstps
dec
xchg
test
pop
mov
mov
gs
pusha
in
pop
cltd
add
das
into
jbe
in
iret
push
clc
dec
inc
adc
pushf
mov
aas
js,pn
loopne
ljmp
insb
or
lods
cli
cmp
pop
jmp
inc
ficoml
sbb
in
das
jle
pop
addl
hlt
das
push
add
or
leave
flds
test
xor
scas
sahf
mov
test
push
repnz
xchg
pop
pop
dec
aad
mov
dec
inc
jl
add
rorb
call
bound
push
imul
add
ffree
pusha
sbb
push
adc
xorl
mov
and
mov
sub
rcl
sub
aam
mov
fidivl
pusha
push
ret
ret
pandn
sarl
fdivrs
xchg
mov
mov
rclb
insb
jb
out
cmpsb
test
lods
pop
repz
loop
js
or
adc
mov
je
in
push
fdivr
jo
xor
js
inc
push
js
subl
rol
dec
ret
jne
ds
aad
jle
or
dec
pop
xchg
repnz
and
insb
cwtl
push
fdivs
fwait
mov
and
add
std
leave
test
test
call
xchg
sti
dec
orl
dec
add
jne
insl
inc
inc
sub
loop
jo
or
push
imull
sbb
repz
cmp
cltd
ret
lock
aad
bound
out
cmp
sbb
iret
or
xchg
bound
ret
push
pushf
notb
ja
mov
push
inc
repnz
sub
cld
adc
mov
xlat
call
testl
jb
mov
addr16
ljmp
mov
xor
push
jne
insb
sarl
loopne
ljmp
js
push
and
cmp
ret
ret
lret
inc
or
jmp
gs
sbb
bound
mov
xor
rorb
test
clc
mov
mov
lcall
aas
adc
pushl
jl
arpl
mov
jns
mov
out
or
mov
pop
repnz
xor
sub
push
repnz
arpl
push
push
mov
sbb
jns
xchg
inc
pop
push
jl
popa
pop
fucom
scas
push
cmc
push
pusha
setg
insb
inc
shlb
in
es
xlat
mov
jne
sub
shrb
push
scas
fidivl
push
or
pop
cld
mov
les
sahf
aam
add
xor
popa
mov
sub
or
cli
bound
out
xor
jge
testl
add
or
mov
inc
movsl
cwtl
jb
mov
aaa
sbb
pop
sub
cmp
enter
or
jne
jle
add
mov
stc
dec
and
mov
and
inc
subb
dec
or
les
in
jae
mov
shlb
or
sbb
cmp
cmp
lds
js
bswap
cmp
inc
jl
mov
mov
dec
cmp
popf
lock
jp
mov
lret
jecxz
push
ja
mov
inc
lret
jecxz
mov
add
sub
mov
js
jp
inc
test
add
insl
add
int
sarb
add
xor
pop
bound
push
xchg
dec
ret
jl
jge
push
icebp
repnz
push
sbb
frstor
shrb
inc
stc
jne
pop
dec
add
lahf
mov
or
cwtl
cmpsl
inc
addr16
sub
lret
aad
pop
push
insl
mov
pop
repz
inc
je
imul
iret
iret
call
dec
or
xchg
enter
cmp
dec
xchg
mov
xchg
js
adc
rolb
mov
sub
pop
cmp
out
dec
cmp
lret
push
in
std
cmpsb
sub
jnp
fidivrs
sbbl
popa
cmp
cwtl
ficomps
xor
push
pop
ja
mov
dec
loop
jns
add
mov
iret
pop
push
sbb
call
into
int3
mov
jecxz
sti
movb
mov
xor
mov
dec
pop
and
mov
sbb
add
imul
mov
cld
ds
les
add
cmp
push
jge
pop
test
test
inc
inc
cmpsl
aam
cmpsl
and
lock
das
movsb
xchg
sbb
jo
mov
andb
enter
pusha
mov
dec
pop
and
dec
insl
ret
sbb
aad
stos
push
rolb
lods
mov
jmp
mov
or
mov
fistps
xor
das
xchg
mov
addr16
movl
mov
adc
stos
pop
add
jge
arpl
push
inc
dec
or
clc
lret
in
mov
jo
mov
aas
mov
jns
push
mov
and
sti
jo
cmp
xchg
nop
dec
fs
jge
test
cmpsb
test
or
imul
sub
filds
outsb
or
xor
and
or
aas
int
and
movups
mov
push
push
incl
cltd
dec
mov
pop
loope
add
cmp
inc
sbbl
sbb
ss
adc
js
jmp
adc
rcl
mov
sub
loop
popa
loop
and
pop
test
cmp
in
fcoms
cmpsl
test
pop
js
cwtl
jb
testl
iret
mov
mov
std
inc
dec
lea
arpl
outsl
mov
mov
push
add
cmp
jne
loopne
test
jnp
inc
xor
mov
in
daa
repz
mov
out
fs
cmp
leave
mov
dec
lds
mov
or
push
stos
jp
test
mov
ja
lcall
fldcw
dec
rolb
mov
fadds
out
call
iret
data16
adc
loope
push
icebp
stos
mov
dec
arpl
div
movsl
das
jmp
sti
push
add
inc
mov
les
orl
imul
clc
inc
jo
shr
cmp
leave
sarb
xchg
lods
dec
outsb
clc
jmp
icebp
cmp
cmpb
js
add
aas
iret
lcall
insl
pop
mov
loop
js
sbb
pop
adc
pop
dec
inc
out
push
bound
ljmp
ror
cmp
xchg
mov
ret
test
test
and
sub
jns
sbb
scas
cmp
mov
jmp
lret
jbe
jl
stos
mov
mov
xchg
jp
or
shl
bound
std
mov
adc
xlat
testb
and
jmp
push
mov
in
in
mov
mov
iret
fisubl
imul
xchg
negb
jo
xchg
and
rcr
addb
dec
push
mulb
and
movsb
mov
push
int
jl
adc
push
or
lcall
icebp
xchg
mov
and
dec
adc
mov
xchg
cmovle
mov
test
add
and
xchg
xchg
loopne
jle
xchg
cwtl
pop
je
imul
mov
imul
fmul
pop
push
mov
mov
into
or
rclb
incb
mov
dec
shr
out
jp
push
add
shl
aam
loope
dec
out
cli
mov
aas
fsubrs
ds
clc
es
mov
ret
insb
repz
pop
stc
lock
inc
loope
xor
jne
mov
lock
dec
add
sub
mov
test
xchg
sarl
sub
pusha
adc
inc
aad
sub
cwtl
lods
filds
out
dec
test
or
aam
and
mov
xchg
std
mov
inc
xchg
das
icebp
dec
dec
ret
mov
push
lock
fcoml
cmp
jbe
js
ds
daa
cmpb
mov
sbb
jo
xchg
testb
add
adc
out
inc
sub
inc
add
jg
and
xor
push
stos
test
ds
fwait
inc
jae
adc
lds
je
decl
pop
fmull
fsts
mov
call
xor
scas
fs
or
loop
cld
adc
jnp
test
or
pop
add
ljmp
add
daa
adc
sti
ret
fwait
into
xchg
fsubs
jb
cmp
dec
push
test
lahf
inc
fdivs
popa
pop
push
clc
shrl
mov
int3
push
xchg
cmc
rolb
sub
outsb
xor
mov
jge
out
jo
jns
adc
sbb
and
clc
in
mov
ret
xchg
push
test
cli
push
inc
xorb
jno
mov
stc
cld
movnti
jne
pushf
adc
xchg
cwtl
pop
iret
sbb
clc
push
incb
mov
pop
jbe
add
andb
xchg
fdivs
sub
xchg
mov
add
fdivrl
mov
jbe
hlt
push
icebp
sbb
dec
mov
mul
test
sbb
orb
jle
shlb
mov
mov
sbb
cld
cli
mov
loopne
xor
ss
inc
pop
cmp
sbb
rorb
ret
pop
add
push
pop
inc
js
imul
sbb
out
add
xchg
dec
sbb
sbb
xchg
mov
mov
stos
sbb
dec
inc
outsl
orl
jnp
call
mov
xchg
daa
dec
insl
imul
repnz
out
pop
in
jmp
add
mov
xor
mov
xlat
jle
out
cld
ret
decl
sbb
push
rol
popf
les
jne
sbb
sbb
ds
mov
in
stos
sbb
test
add
adc
ljmp
test
add
ret
add
dec
cmp
stc
cmp
out
or
punpckhbw
pop
sbbb
push
cmp
insl
sbbl
xor
je
pop
std
loope
pop
data16
insl
shl
jno
pop
mov
mov
inc
xlat
repnz
inc
sub
movsl
fisubs
push
and
ljmp
xchg
push
insl
div
daa
jge
inc
mov
call
add
mov
xchg
cmp
pusha
inc
arpl
add
imul
jl
pop
lock
sbb
xor
sub
adc
fcmovne
mov
sub
xor
rcrb
outsb
fildll
rclb
adc
mov
aam
daa
pop
add
inc
rcl
mov
add
jecxz,pt
mov
cld
push
add
mov
jbe
js
sub
imulb
inc
mov
incl
push
jb
push
pop
pop
jle
xor
js
hlt
adcl
mov
subb
insl
push
cmpsb
and
fmulp
and
lods
mov
cmp
mov
push
stos
or
jge
xchg
scas
into
lahf
mov
loope
aas
mov
push
outsl
movsb
sub
xor
mov
test
imul
lock
outsb
ret
mov
int3
scas
enter
into
xor
lcall
and
pop
scas
inc
mov
xchg
xorb
je
fisttpl
loope
outsb
mov
xor
adc
jp
mov
mov
fsubrs
lahf
sbb
jnp
xchg
addr16
jmp
jecxz
mov
les
insb
aaa
aaa
dec
jmp
xchg
lea
stos
push
addr16
inc
pop
pop
adc
pop
movaps
cmc
sbb
icebp
out
xchg
aas
add
ret
addr16
or
cli
mov
test
push
addr16
in
das
and
jne
cmp
lods
ret
xchg
dec
fdivrl
ds
lea
sub
negl
and
sub
lock
xchg
std
mov
sbb
popa
cmp
mov
ja
cld
sarb
lods
outsb
repz
sarl
enterw
lcall
addr16
cmp
js
call
dec
cmp
jmp
aas
fstpt
mov
mov
mov
aam
pop
or
ret
lds
xor
lret
shrl
cltd
lock
iret
jb
fistpl
xchg
rcrb
xchg
rcrb
lea
dec
cld
fstps
dec
xorb
sub
cli
in
cmpb
push
adc
xor
hlt
sti
outsb
add
and
mov
adc
or
dec
or
push
bound
pop
add
imul
sbb
inc
inc
pop
dec
sub
adc
jne
push
adc
push
mov
ret
arpl
repnz
addl
bound
add
ret
bnd
test
inc
call
add
ss
aam
mov
push
nop
jecxz
hlt
dec
add
and
push
orl
pop
cltd
aam
imul
xorb
push
cmpsl
cmp
les
andb
ret
or
push
rolb
push
sbb
and
popa
inc
sarl
into
inc
jmp
es
rorb
add
test
pusha
and
add
mov
dec
lods
inc
dec
mov
popa
mov
mov
outsb
jp
in
ds
outsb
mov
lock
pandn
les
xor
call
mov
cmp
mov
pop
jnp
rolb
outsl
push
sbb
xor
stos
popa
xchg
lcall
subb
add
xor
ficompl
jg
and
pop
mov
pop
push
mov
scas
leave
jns
lcall
push
inc
fstp
jae
das
fiadds
lock
push
shll
decb
jb
call
sbb
mov
mov
gs
and
sbb
in
jp
shrl
pop
and
jp
sti
roll
push
or
lock
js
mov
push
cmp
das
lock
mov
fsts
stc
pusha
cmpsl
pop
in
mov
cwtl
mov
mov
add
xchg
jl
and
mov
xchg
push
sub
arpl
adc
dec
push
ss
js
cvtdq2ps
arpl
out
roll
incb
inc
mov
orl
inc
xor
sarb
pxor
push
sbb
stc
cmp
xor
lods
les
jl
jbe
cmp
shlb
inc
inc
repz
push
cltd
cld
add
fsub
scas
lahf
xchg
aad
rolb
lock
jg
push
add
shll
jl
xor
xchg
sahf
stc
ljmp
test
jl,pn
loopne
mov
mov
lea
mov
insb
gs
scas
ss
jb
jne
cld
lret
mov
dec
add
push
hlt
outsb
hlt
shl
mov
jge
cli
mov
adc
dec
jb
icebp
aam
cli
out
xchg
inc
inc
and
mov
pop
je
mulb
inc
sub
ljmp
adc
push
imul
dec
idivl
xchg
cmp
inc
xor
test
sub
mov
pop
hlt
mov
add
xchg
movsl
ret
inc
mov
xchg
cld
push
js
xchg
and
out
adcb
out
ret
pop
sti
fadds
aas
pop
jge
fmuls
iret
inc
movsl
or
or
movntps
in
cmp
idiv
mov
rolb
dec
pop
call
push
adc
sbb
clc
hlt
stos
push
push
dec
jbe
lods
ret
sbb
xchg
mov
cs
int3
adc
les
mov
add
mov
stos
jmp
filds
test
int3
dec
jmp
repnz
or
adc
mov
mov
ret
test
and
inc
cmp
inc
int
xor
fsub
pop
loopne
sbb
scas
and
mov
dec
inc
adc
dec
sarl
push
inc
jg
bound
pop
push
hlt
xchg
rcr
out
mov
ret
pop
int3
jno
rolb
sub
cli
or
jno
int
mov
push
lods
lock
pusha
inc
dec
hlt
push
pop
aaa
fsubs
out
add
sbb
cmpsb
aas
cmp
add
xchg
cs
pop
and
pop
or
insb
loopne
outsl
cmpsl
mov
js
mov
sub
cmpsb
pusha
or
js
push
jae
repz
pop
ret
movsb
fdivrl
gs
push
mov
mov
fwait
dec
loop
ljmp
adc
push
adc
loopne
clc
loopne
push
or
aas
xorb
push
rolb
clc
je
sub
cmp
lcall
adc
out
cmpsb
in
pop
insl
mov
lock
sbb
mov
nop
jne
sub
in
in
adc
sbb
mov
clc
int3
dec
push
je
push
ss
fdivs
pusha
movsb
xchg
ja
or
mov
xchg
stc
mov
mov
fwait
adc
fsubrp
aas
sbb
pandn
cmpsl
ret
cli
inc
outsb
pusha
stc
adc
mov
pop
jmp
cmp
adcl
add
aam
mov
xchg
xor
ret
enter
lock
loopne
push
jl
xchg
or
jl
or
sarl
and
adc
aaa
cmp
test
rorl
fisttpl
cmp
js
aam
test
stos
inc
mov
stos
push
je
cmpsl
sub
in
incl
lahf
imul
add
add
inc
cwtl
pusha
add
pop
lock
aam
push
sbb
pop
pop
dec
xchg
xor
pop
je
sbb
out
sbb
mov
ret
insb
or
mov
fdivrl
js
push
mov
mov
mov
push
lock
leave
jmp
sub
fwait
xchg
cmp
iret
mov
test
fsubs
mov
jecxz
pop
inc
adc
and
lahf
clc
fstps
pushf
sbb
or
popa
xor
jmp
push
leave
cmp
icebp
js,pt
jle
rorb
mov
aam
movsl
mov
jecxz
jp
pushf
imul
outsb
push
out
push
adc
inc
repz
xor
mov
dec
inc
popf
insl
adc
push
mov
mov
test
cltd
imul
pop
ja
pop
gs
inc
fdivs
icebp
xchg
in
mov
pusha
jae
cli
xchg
das
xchg
out
xchg
jbe
test
sbb
pushf
or
repnz
mov
ljmp
xchg
loopne
es
push
je
sub
sub
movsl
mov
xchg
lock
cmp
dec
repz
pop
pop
mov
and
pusha
push
add
mov
mov
aaa
sbb
mov
or
out
pop
incl
pop
push
je
pop
call
fs
ficompl
fbstp
adc
cmp
es
cli
out
mov
cli
aad
push
mov
ds
fs
cmpb
adc
inc
les
icebp
or
orl
bound
scas
orb
jns
negl
ret
jns
pusha
inc
sahf
mov
jl
sbb
adc
mov
add
imul
in
dec
or
dec
sub
inc
imul
cmpb
inc
or
xchg
inc
rcr
or
inc
mov
push
incb
and
mov
outsb
stos
sbb
test
sti
sbb
clc
sub
sbb
pop
rol
lret
add
imul
fdivr
or
fists
pusha
push
jo
xchg
inc
dec
mov
sub
jno
fmull
sahf
adc
or
cwtl
mov
add
pop
fisubl
repnz
inc
minps
jmp
fs
daa
ss
lahf
dec
fs
fwait
or
and
add
test
mov
lods
push
xor
mov
sbb
mov
jae
cwtl
mov
cltd
rcrl
xor
test
xchg
jp
sbb
lahf
shlb
push
shll
fidivrl
aas
sbb
add
pushf
sub
mov
nop
jnp
mov
scas
icebp
xchg
mov
insb
dec
mov
jl
insb
mov
mov
stc
daa
icebp
rcl
std
or
xchg
ljmp
mov
jg
das
pop
jb
addr16
mov
int
js
insl
push
cwtl
scas
mov
clc
and
push
notb
arpl
stos
push
jle
dec
pop
test
mov
call
inc
add
cmp
mov
into
adc
push
test
add
jmp
sar
mov
mov
push
out
xor
push
pop
and
xor
cld
test
lcall
out
push
movsl
movsb
cmc
cmpl
lods
adc
cli
bound
idiv
mov
data16
xor
insb
add
and
or
pusha
rcrb
subl
push
push
ret
lea
ja
imul
pop
sub
push
inc
xor
push
imul
inc
jbe
in
andb
shlb
fcomps
cmc
xor
fsubl
stos
nop
pushf
pop
adc
mov
adc
loopne
pop
mov
fcomps
pusha
pop
sub
or
jl
pop
enter
add
fildl
mov
fidivl
push
dec
inc
and
or
mov
nop
mov
and
call
jo
in
or
loope
orb
lock
lods
sbb
fwait
out
mov
pop
dec
xchg
cmp
dec
lock
int3
xchg
ja
cmp
inc
lock
aam
add
pop
cmp
push
jb
mov
mov
and
xchg
cmp
jo
add
and
push
decl
sub
int3
push
jbe
scas
scas
call
lahf
nop
lea
mov
pop
lods
icebp
xor
stos
sbb
nop
lds
push
repz
nop
out
je
test
or
add
das
mov
dec
jnp
jmp
inc
mov
lods
mov
xchg
dec
pop
dec
push
mov
add
rolb
imul
cmp
js
push
add
test
sarb
mov
rcrl
das
add
dec
das
push
insl
sub
call
aaa
pminsw
ja
dec
fwait
jge
pusha
dec
out
loope
inc
in
jmp
fildll
mov
xchg
pop
add
dec
insl
aas
cmpsl
pop
fwait
mov
sarb
test
mov
test
dec
jl
lock
orl
sarb
or
fildl
int3
inc
sbb
or
mov
mov
sbb
insb
jo
add
out
loopne
out
iret
pop
dec
aaa
mov
mov
push
xchg
test
outsb
paddd
mov
stc
adc
push
lea
daa
rol
int
sub
hlt
push
pop
fisubrl
jmp
adc
aam
daa
push
dec
mov
mov
fnsave
or
adcb
jns
xchg
jb
adc
add
sbb
xor
loop
mov
shrb
cmp
std
int
ret
outsl
sbb
mov
in
and
bound
ljmp
mov
stos
push
stos
sahf
lock
jmp
scas
xchg
lret
ss
popf
addr16
pop
mov
cld
and
mov
lds
jle
mov
cmpsb
inc
loopne
inc
nop
pop
sub
cld
mov
cmp
add
sahf
jmp
rolb
cmp
leave
jbe
enter
das
outsb
or
mov
and
push
jl,pt
hlt
repz
or
jg
sub
ljmp
ljmp
and
andb
ja
movb
and
adc
push
add
mov
sbb
rclb
data16
loop
addr16
mov
clc
push
xchg
out
add
and
jae
cli
inc
or
push
test
mov
out
int3
push
add
test
shrb
dec
pop
xchg
adc
imul
ret
insb
js
cmpsl
ficomps
incl
inc
adc
fwait
dec
stos
insb
ret
xchg
in
test
mov
fstpl
into
add
inc
mov
mov
jmp
into
sti
ss
test
sub
lods
xchg
inc
or
add
lds
negb
mov
pop
lcall
ss
addb
dec
inc
sub
mov
stc
push
test
sbb
xor
and
outsb
ds
lods
push
outsb
loope
mov
movl
fs
cmp
pop
adc
leave
add
aas
fwait
aad
mov
jne
inc
pusha
hlt
mov
pushf
pop
pusha
sub
cli
inc
mov
pop
outsb
mov
pop
daa
add
add
adc
sbb
lea
jp
jg
or
pusha
leave
js
cmp
xor
inc
mov
inc
xchg
add
popa
and
dec
add
addr16
mov
popf
fadd
cmp
orl
in
lahf
es
cmp
jo
loop
xchg
dec
jo
xchg
lcall
xor
je
mov
xor
mov
sbb
mov
mov
mov
aam
mov
add
mov
mov
aaa
jbe
sti
in
test
arpl
lock
les
jge
sarb
dec
popa
add
jg
mov
xchg
test
imul
enter
stos
adc
add
pop
push
insb
mov
dec
mov
out
jmp
lret
jnp
mov
xchg
lods
cmc
sbb
pop
mov
bound
jo
lods
bound
xchg
lret
cwtl
notb
mov
push
lret
push
mov
scas
or
add
leave
mov
add
imul
sbb
enter
push
or
out
in
xor
mov
inc
cld
sub
mov
imul
xchg
cwtl
ss
sbb
jbe
lock
test
mov
fnstsw
and
mov
shlb
cli
scas
mov
sbb
aad
push
xchg
lock
lods
or
xlat
test
bound
adc
fisttps
cmpsl
dec
cmp
iret
in
shlb
cmp
pushf
adc
pushf
jl
aam
pop
dec
sub
and
insb
jmp
mov
cmpsl
push
adc
mov
stos
push
mov
dec
xor
or
dec
lds
jbe
rorb
subl
dec
je
add
int
add
inc
arpl
dec
inc
lods
dec
cmc
add
stos
loope
imul
cmp
add
ret
inc
xor
mov
rcll
add
aaa
xor
lret
cmp
fwait
and
jo
add
mov
xchg
sub
js
nop
loope
lock
scas
add
aad
mov
out
iret
insl
dec
iret
out
add
cld
jmp
and
jb
push
int
nop
pop
fcmovb
cmpsl
xor
add
and
dec
int3
daa
inc
je
loope
dec
lret
sbbb
or
dec
mov
add
ret
addr16
or
sub
jmp
cmp
mov
jg
dec
sub
repz
push
ds
push
aad
ret
sub
dec
je
popl
inc
enter
push
add
lcall
push
mov
mov
sbb
into
enter
inc
cmp
nopl
aas
jmp
cltd
push
adc
inc
and
out
pop
adc
add
adc
pop
cmp
lahf
dec
jg
push
arpl
cmp
js
sbb
hlt
sub
jno
lea
and
adc
pop
xor
dec
daa
push
or
cwtl
outsb
les
jmp
ficompl
insb
push
test
cmp
insb
push
add
adc
jae
clc
jl
jecxz
push
jge
int3
in
popf
iret
jge
dec
push
iret
fisttpl
jp
jg
gs
orb
ret
push
into
cmpsb
add
add
inc
insb
jo
adc
sbb
pop
clc
cmpb
mov
cmp
rcr
mov
rclb
lret
mov
add
int
push
jo
xor
dec
scas
mov
pop
pushf
mov
add
adc
sub
sub
adc
add
and
ret
dec
sub
mov
pop
enter
dec
inc
lea
or
lahf
inc
cmpsl
aas
jp
loope
mov
sub
sbb
dec
pop
sbb
in
sub
hlt
leave
and
jp
or
cs
gs
lds
mov
pop
addl
add
sahf
in
rorl
lods
push
int3
pop
sarb
and
test
lods
shrb
sbb
mov
or
negb
push
push
mov
pushl
or
bound
and
cld
pusha
mov
mov
and
xor
or
jg
pop
shlb
push
das
test
jg
ucomiss
pop
enter
scas
cwtl
loop
jg
hlt
and
and
sbb
adc
scas
inc
push
dec
addl
ja
stos
xor
mov
xchg
ret
mov
mov
sbb
sbb
lds
adc
xchg
xor
out
xchg
or
xor
fwait
push
jmp
mov
mov
mov
inc
daa
inc
xchg
add
out
ja
pushl
outsb
mov
cmp
rclb
mov
push
data16
mov
call
ds
imul
xor
mov
sub
mov
out
mov
pushw
call
outsb
add
mov
mov
push
rorl
icebp
clc
or
das
enter
xor
cs
pop
xor
fmulp
mov
sub
cmp
hlt
or
dec
mov
and
stos
lds
in
pop
mov
sub
add
add
jle
cmp
pop
xchg
adc
lahf
cmpsb
pop
xchg
inc
pop
test
inc
insb
xchg
mov
and
popa
push
loopne
xor
cmp
jmp
mov
shrb
xchg
xlat
xchg
lea
xorl
adc
popa
xor
fwait
jle
and
mov
mov
inc
sub
sarl
clc
lds
jl
mov
dec
mov
pop
push
mov
push
nopl
pop
jecxz
dec
cmp
push
sub
push
js
popa
out
cvtps2pi
cld
sahf
outsb
outsb
add
adc
loopne
or
add
and
enter
lods
xchg
pop
xchg
aad
jle
xchg
scas
cmp
push
add
subb
into
movsb
push
mov
mov
daa
fisubrl
mov
pusha
xor
in
dec
xchg
xor
addl
or
cld
arpl
mov
sbbl
or
subb
mov
scas
adc
test
negb
jg
neg
ret
cli
adc
jmp
or
push
mov
cmp
roll
mov
cmp
pop
pop
mov
and
ja
scas
inc
add
pop
adc
in
cs
pop
shl
mov
mov
es
nop
pop
dec
cmp
addl
push
dec
test
and
hlt
or
lods
xlat
test
or
and
mov
adc
aam
sbbl
mov
int3
adc
mov
sbb
cli
ds
and
inc
movsb
sub
sub
mov
add
jo
in
jno
stos
sti
pop
sub
mov
mov
sti
adc
lcall
sbb
jo
sub
add
sbb
lock
jg
sub
pop
rorl
or
orl
xor
and
pop
pop
inc
mov
sbbl
mov
xorb
and
shlb
pop
xchg
pop
pushf
sub
mov
pop
ja
es
insl
pop
divb
icebp
and
lods
imul
movsb
sahf
test
std
les
mov
daa
mov
cli
mov
dec
push
dec
test
and
nop
shlb
jo
dec
ss
dec
test
add
push
xchg
or
sub
popa
mov
aas
sub
or
sti
addb
pusha
sub
add
aaa
dec
push
push
cltd
and
ds
xor
lds
mov
icebp
jg
jmp
orb
sbb
repnz
stos
mov
adc
outsl
jb
cltd
pushf
rcl
insl
mov
lods
daa
mov
sarb
sbb
mov
fs
shll
cli
ja
pop
cld
stos
iret
aas
cmp
xor
repnz
dec
mov
xchg
dec
jl
mov
filds
ljmp
push
xchg
xchg
push
mov
mov
mov
stos
push
sub
cmpsl
mov
or
ljmp
popa
cld
pusha
je
mov
xor
insb
pop
sahf
push
pusha
and
loopne
call
int3
mov
in
dec
scas
hlt
subps
inc
enter
adc
ret
test
lods
clc
arpl
lret
mov
out
jp
stos
std
push
fistpll
adc
mov
pop
and
test
mov
les
xadd
rcrl
jmp
add
xor
and
jnp
out
mov
push
out
loope
xchg
mov
inc
sub
rclb
xchg
push
ja
and
mov
sbb
inc
fcmovnb
pop
cmp
outsl
lods
rorb
loope
adc
roll
in
sub
adc
daa
loop
mov
pop
lcall
or
rclb
sti
cmp
test
loop
pop
push
in
inc
call
mov
rcrb
jg
rol
add
aad
add
enter
mov
sbb
inc
push
das
cmc
and
dec
inc
push
clc
or
hlt
cmpsb
repz
xor
fistpll
subb
and
ljmp
sahf
lds
inc
push
fsubr
outsb
sbb
and
int
xchg
cmp
mul
bnd
and
adc
xchg
xchg
adc
sti
in
ror
scas
mov
pop
jae
jge
sbb
pushf
adc
add
mov
add
mov
movsb
xor
in
mov
loop
rolb
shlb
jbe
xor
cs
jecxz
movsb
shl
cmc
xor
mov
push
ljmp
inc
andl
pop
mov
push
mov
shll
mov
and
loopne
aaa
pop
out
sbb
imul
cmp
push
hlt
ss
test
xchg
push
fildll
lock
imul
xchg
das
int
mul
add
aaa
loope
inc
sub
mov
push
push
movsb
out
xor
test
or
push
adc
loope
cld
bound
dec
addr16
or
cmc
mov
loop
pop
pop
repz
pop
orb
das
inc
fisubrl
push
inc
sbb
and
cmp
xor
mov
test
out
test
xchg
adc
das
mov
push
lahf
sbb
arpl
cmp
popa
inc
xchg
pop
sub
test
out
cmp
push
imul
stos
outsl
push
add
rol
xor
or
or
add
and
lahf
xchg
push
jne
push
sbb
jge
adc
mov
or
rorb
cmc
jnp
add
scas
in
mov
cwtl
or
outsl
rcrb
dec
outsb
jmp
outsb
mov
sub
cmpsb
xchg
sub
mov
decl
popl
mov
pop
scas
loopne
sahf
push
push
xor
mov
mov
orb
jle
cmp
and
xlat
dec
sbb
push
inc
or
cmpsl
jmp
aaa
jno
mov
sarb
test
cwtl
decb
sub
addr16
adc
mov
mov
push
les
lock
aaa
je
ljmp
daa
jle
dec
adc
sbb
and
in
inc
jns
pop
cmp
push
xor
fcompl
pop
xchg
or
xchg
arpl
pop
in
xlat
aaa
inc
cwtl
xchg
jae
cmp
xchg
pop
stos
lret
sub
mov
and
addl
clc
outsl
icebp
mov
adc
add
cwtl
cmp
orl
loop
cld
test
mov
lock
fcmovbe
outsb
jl
lahf
push
aam
fsubrp
pop
inc
mov
cmp
mov
mov
push
sbb
cltd
mov
push
leave
jbe
insl
je
shrb
dec
test
ret
pop
sti
or
add
ficomps
movsl
out
fs
adc
cmpsl
pop
movsl
stos
push
daa
or
fisubrs
loop
inc
gs
and
fstl
or
sahf
xchg
jmp
into
cmpsb
ds
pop
sbb
fnsave
sti
iret
sub
or
xchg
pop
icebp
cmpl
push
orb
lea
pop
movsl
pop
ds
add
lret
push
push
cli
adc
cmp
shl
imul
inc
xchg
pop
or
cmp
mov
push
rorb
xor
ret
pushl
jg
cmp
pop
mov
test
sarl
pop
mov
jl
xchg
sbb
pushf
loopne
test
add
call
xor
or
pop
cs
inc
adc
add
imul
jo
out
mov
pop
scas
lods
movsb
inc
and
mov
iret
adc
fsubr
adc
pushf
add
data16
das
in
cmp
es
push
filds
out
dec
push
pop
rcl
xchg
cli
std
inc
mov
dec
mov
cmp
sub
adc
add
sbb
sbb
dec
cmp
inc
jl
test
test
dec
or
repnz
js
rcrb
mov
and
push
adc
ds
fisubs
add
xor
jle
hlt
mov
xor
fisubs
lahf
repnz
add
scas
dec
icebp
inc
xchg
adc
movsb
mov
cmp
jmp
call
adc
pop
mov
lock
pop
adc
into
push
fisubrl
jg
or
add
and
cmp
push
cli
dec
stos
cli
in
pushf
icebp
push
fcompl
or
xor
jle
pop
mov
ret
pop
cwtl
adc
enter
jmp
loopne
cmc
inc
repnz
adc
and
jno
xchg
mov
mov
jae
hlt
arpl
push
lods
lret
jecxz
mov
pusha
mov
insb
mov
movsb
xchg
cmpsl
mov
jo
test
shrb
sahf
loop
push
push
sbb
xor
call
inc
das
jmp
rcll
mov
pop
repz
mov
and
jle
push
addl
xchg
js
ret
mov
repnz
dec
or
jae
aas
add
out
aas
andl
std
cwtl
js
ljmp
mov
push
jg
inc
pop
out
aam
or
rcl
test
push
imul
pop
fldl
ja
sub
sti
cmpsl
jmp
test
scas
cli
mov
pop
cld
into
nop
repnz
rolb
out
mov
sbb
outsb
das
addb
and
fcoml
int
inc
and
dec
sub
rolb
pop
mov
cld
fsubrs
jmp
loopw
nop
mov
xorb
mov
leave
out
orl
rol
loop
sub
mulb
dec
add
enter
jae
push
sub
shlb
add
fidivl
mov
dec
movsl
pop
mov
mov
clc
adc
das
ret
mov
mov
repnz
add
fs
dec
mov
and
ja
fildl
iret
fimull
jl
sbb
add
arpl
fwait
sub
xor
loope
aad
addl
je
pop
mov
push
mov
or
and
test
mov
lock
shrb
add
sbb
mov
out
loope
loopne
push
xchg
js
ds
lret
js
jae
push
leave
push
shlb
sbb
push
mov
lahf
js
fsubr
mov
and
xor
fwait
aad
int
fistpl
push
lcall
pop
adc
jge
shl
addr16
and
adcl
sub
dec
jl
inc
mov
icebp
mov
mov
inc
rcll
add
ja
push
jmp
pop
pop
je
mov
jnp
cmp
cmp
dec
test
insb
jl
xor
cmp
std
mov
push
orb
imul
iret
lret
test
repz
mov
cmp
or
je
lea
push
clc
pop
push
push
mov
or
fcomps
not
or
jl
mov
or
test
nop
push
inc
sub
pop
leave
and
out
jmp
es
xchg
negl
aam
or
test
mov
or
into
arpl
sbb
sub
jge
push
adcb
sub
ret
ljmp
das
add
cmp
cmp
or
push
ljmp
lret
mov
and
loopne
sub
lds
hlt
dec
es
pop
in
lods
pushw
xlat
loope
popa
fwait
sbb
dec
in
pop
test
cmp
test
sbb
sub
mov
sub
xchg
push
stos
push
movsl
pop
sub
out
push
sbb
and
jb
int3
cmpsb
cmc
xor
sbb
dec
mov
push
inc
push
fisttps
fidivrl
jmp
ficoml
stc
add
and
outsb
or
pop
push
add
xor
push
mov
xor
add
loopne
cmc
aas
loop
test
or
xlat
xor
call
jae
add
sbb
ljmp
rorb
imulb
push
lods
insb
inc
stos
sbb
rol
adc
inc
xchg
pop
mov
pushf
jo
or
mov
add
xchg
adc
lods
imul
xor
push
insl
jmp
inc
rol
out
adc
mov
push
sub
roll
negb
mov
push
xor
mov
inc
mov
push
and
jo
push
push
jecxz
and
out
std
add
add
jmp
adc
repnz
add
mov
roll
enter
push
rorb
pusha
cwtl
movsb
or
mov
leave
adcl
mov
xlat
ror
shrb
jnp
sub
cmp
xorl
push
aam
adc
lock
incb
inc
in
sub
push
add
les
and
rclb
mov
jae
pop
loope
loop
icebp
pop
leave
sub
cltd
idivl
push
and
push
fnsetpm(287
rclb
xor
sbb
jmp
jle
pop
pop
leave
ret
movsl
lret
mov
push
ljmp
or
mov
ss
sub
outsb
inc
pushf
xchg
inc
js
call
fadd
xor
ret
sbb
rcrb
loopne
out
pop
cmp
lcall
out
test
aaa
cmp
or
jle
js
rcr
or
mov
jecxz
mov
push
outsb
in
lahf
icebp
cmp
xor
jo
sub
popf
mov
cltd
scas
cmp
mov
hlt
or
into
fists
xor
xor
aas
outsb
xlat
lods
sahf
fiaddl
lods
rcll
mov
xchg
jecxz
cmovb
cmpsb
inc
fldt
jbe
fistpl
gs
push
push
imul
xchg
mov
or
insb
jnp
push
push
jl
mov
cmpl
dec
scas
leave
fisubs
fmul
jbe
dec
icebp
bound
add
aas
scas
out
outsl
add
mov
push
push
push
push
and
inc
movsl
test
pop
lea
xchg
and
out
in
jae
out
dec
jo
adc
arpl
divps
push
lcall
sbb
add
clc
add
sub
in
push
sbb
sub
movsb
push
sbb
jmp
jl
push
out
dec
add
bound
jl
and
call
xor
adc
int3
aad
js
sarl
fdivrs
ss
bound
loop
aam
push
cmpsb
adc
stos
xlat
lahf
fistpl
and
sarb
push
call
divb
lret
inc
ds
das
test
scas
mov
popf
mov
add
test
pop
fisubrs
cli
dec
ret
insl
aam
rolb
fdivrs
push
lock
add
fwait
mov
iret
mov
mov
icebp
or
mov
push
dec
and
dec
lahf
lods
add
into
sbb
aam
jmp
add
jmp
push
dec
les
push
data16
mov
mov
dec
pusha
mov
sub
leave
mov
jmp
dec
loop
mov
xchg
xorb
xchg
cmpb
lret
dec
sub
mov
cmp
cmp
clc
add
dec
negb
push
dec
outsb
pop
push
inc
mov
xor
add
movsl
sbb
stos
jno
mov
add
enter
cs
jmp
cmp
stc
scas
jmp
cmp
loop
js
loop
loopne
pop
sub
call
out
ret
or
pop
mov
adc
scas
xor
add
mov
je
movsb
push
or
cld
inc
push
fcomps
sbbl
notl
cmp
loope
call
jl
mov
icebp
lahf
inc
jns
ret
lea
es
inc
sbb
loope
arpl
mov
inc
lock
push
sub
test
aam
je
movsb
sbb
fiadds
loope
cld
jo
pop
sbbl
add
rclb
jmp
xchg
test
or
aam
jp
into
xlat
incl
xor
mov
test
loope
mov
jmp
ljmp
or
mov
mov
out
movsl
add
rclb
fdivrl
mov
push
xchg
adc
pushf
repz
cld
sbb
ljmp
out
or
fisubrl
pop
jg
aaa
in
xchg
add
sub
pop
outsb
mov
mov
cmpsb
pcmpgtb
mov
jo
cmp
cmp
sbb
lret
xor
les
inc
shlb
and
pop
inc
cs
ficompl
or
pop
in
mov
sar
repnz
pop
ja
les
lea
xchg
push
pop
sar
mov
pop
mov
xor
or
mov
outsb
movsl
pop
cli
out
je
add
aam
cltd
lods
xchg
lock
sub
push
shl
cli
bound
nop
std
pop
aam
in
add
and
cmp
xor
cmp
jmp
cmc
mov
leave
je
sbb
data16
sahf
pop
jp
fistps
xor
lcall
or
jle
nop
mov
or
cmp
push
or
ss
js
mov
mov
addr16
inc
pop
hlt
pusha
addb
jp
popl
pop
xor
inc
cli
pushf
jns
rcrb
or
or
and
fmull
mov
mov
in
jecxz
inc
loopne
add
lock
push
or
popa
icebp
lds
sub
rcrl
push
sub
xchg
arpl
stos
and
mov
loopne
inc
adc
jno
xchg
lock
fiadds
idivb
sub
enter
fwait
or
adc
adc
cmp
xor
xlat
mov
cmp
push
cli
cmp
inc
dec
shrl
xchg
cmp
imul
and
xchg
rcr
push
fadds
cmp
inc
testl
mov
pop
xchg
inc
cmovne
xor
sub
xor
repz
scas
ret
sub
push
in
dec
stos
cwtl
xchg
sbb
js
stc
cwtl
cwtl
adc
int
jmp
cmp
mov
mulb
inc
je
aas
jle
cli
and
pop
sbb
repz
push
add
adc
pop
inc
sub
inc
cld
aam
xor
push
or
fbld
fimuls
mov
and
into
jecxz
mov
ffreep
mov
add
or
mov
inc
xor
mov
xchg
jnp
fmul
aas
into
lods
sub
or
xor
jg
ja
pop
pop
push
shlb
pop
push
and
cwtl
mov
fnsave
sbb
into
add
fcoml
test
imul
adc
xor
sbb
rcrl
push
xor
push
mov
subb
rcll
leave
fisttpll
mov
sub
mov
test
mov
loope
dec
rcr
es
fld
pop
mov
fdivl
aam
pop
cmp
sub
jecxz
lret
iret
sub
push
stc
ret
jg
add
loope
push
push
push
push
inc
lds
iret
push
cmp
test
mov
xchg
aam
pop
dec
add
mov
popf
cmpsl
test
loop
inc
push
xorl
shrb
inc
ds
test
faddl
or
insb
mov
adc
insl
inc
xor
test
imul
rcrb
pop
or
jmp
mov
push
roll
jnp
push
insb
outsl
mov
cwtl
mov
lret
push
adc
cld
cli
je
popf
jno
mov
mov
andb
lea
mov
orl
xchg
mov
push
das
cmpl
mov
pop
mov
or
cmp
xchg
insb
jmp
cmp
cmp
jmp
jns
jae
adc
rclb
push
out
pop
inc
sarb
xchg
mov
jns
jle
ds
hlt
clc
shrl
or
and
adc
js
dec
nop
add
sub
pop
cmp
xor
xor
jbe
pop
push
imul
lock
into
sbb
js
repnz
test
js
or
jge
sahf
mov
jecxz
and
mov
add
jecxz
pop
lcall
xchg
test
mov
add
cmp
jle
xorb
sub
nop
jne,pt
fistpl
daa
or
shrb
hlt
mov
bound
add
pop
dec
xchg
je
dec
fimuls
jbe
addr16
aam
and
loope
sahf
pop
cmc
inc
mov
jne
pop
pop
cvtps2pd
xlat
outsb
dec
jae
test
jge
mov
test
push
aad
add
and
shll
dec
inc
hlt
mov
push
xor
or
sbb
pop
dec
call
popl
cmp
push
lea
dec
mov
mov
ss
stos
cmp
xchg
js
mov
arpl
bound
fistps
fists
pop
outsb
adc
cmp
pop
test
adcl
inc
insb
add
jl
add
sub
jno
adc
lcall
js
sahf
rcl
dec
add
das
shr
jbe
movsb
pop
addl
je
mov
jmp
xchg
loopne
inc
mov
xorb
add
mov
push
jmp
dec
inc
lcall
xor
stc
ds
jnp
jbe
lods
mov
mov
sub
or
mov
rcrl
mov
fsubs
lret
leave
mov
push
or
jp
fstps
into
roll
pop
mov
rcll
call
fisttpll
mov
sub
outsb
inc
das
sbb
cs
push
mov
das
insl
cmpl
shrl
cmp
jecxz
cli
es
in
sub
jo
es
stc
mov
pop
rcrl
sub
sub
lcall
and
mov
pop
mov
lret
lock
pop
addb
push
out
je
outsb
mov
pop
sbbb
fmuls
jbe
xlat
push
imul
push
mov
outsb
stos
mov
call
pop
cld
add
jmp
dec
je
sub
xchg
fwait
loopne
cwtl
mov
pop
xor
rcr
clc
adc
cld
lods
jno
add
lds
iret
adc
xchg
push
decl
cmpsl
sub
lods
push
mov
lea
or
mov
jg
mov
fs
inc
outsb
sar
faddp
cmpsb
push
mov
pop
xchg
add
cmc
cmc
xchg
pop
fidivs
scas
xchg
orb
fsub
jbe
js
sbb
or
adc
mov
cmp
addb
fsubl
test
mov
mov
dec
mov
je
and
push
sbb
inc
push
dec
mov
cwtl
scas
es
jmp
and
lods
ffreep
roll
xorb
into
and
mov
data16
loopne
pop
sub
psrld
jb
mov
cld
mov
add
sarl
and
push
popf
aam
jl,pn
adc
pushf
mov
mov
dec
pop
mov
stos
jbe
mov
roll
icebp
loope
in
xchg
push
xorl
xchg
adc
jle
pop
inc
test
data16
sub
out
push
inc
mov
push
loope
sbb
and
adc
adc
or
sbb
sub
xchg
xor
pop
movsl
test
push
and
xorl
test
push
dec
call
sub
fmull
pusha
loope
push
inc
jo
scas
int
pop
jnp
or
scas
lock
inc
adcb
movsb
fwait
dec
das
fdivs
xor
and
sub
data16
fs
add
clc
clc
mov
nop
js
push
cli
mov
leave
and
xor
mov
xchg
mov
idivb
jecxz
cld
cs
aas
notb
movsl
sbb
mov
mov
fisubrl
or
out
push
sbb
inc
pop
mov
or
jbe
push
inc
xchg
repnz
fnstenv
push
or
and
test
jmp
mov
addb
push
push
in
cltd
xchg
ret
lea
mov
dec
xchg
dec
scas
mov
insl
pop
inc
repz
xchg
fistpll
cli
pop
sbb
faddl
sub
push
std
inc
adc
adc
ljmp
lea
lahf
xchg
pop
mov
and
sub
add
sbb
cmp
inc
pushf
cmpsb
ljmp
daa
ljmp
cmp
cwtl
inc
push
ss
pop
fcomps
jmp
push
clc
nop
cli
shl
sbb
jp
and
in
push
je
scas
inc
sbbl
into
adc
jb
stos
xchg
jno
addb
or
mov
xor
movsb
movl
fcomip
lret
mov
rol
dec
sti
add
scas
fistl
aam
dec
cld
int3
shl
mov
jbe
push
sbbl
add
pop
inc
lods
mov
dec
add
popf
and
aad
sbb
and
sbb
lahf
pop
lahf
and
xchg
pop
jg
xchg
jp
repnz
daa
and
mov
mov
adc
mov
mov
dec
push
hlt
inc
xlat
jo
sub
inc
jge
loop
dec
xor
movsb
das
push
mov
sub
movsb
pop
jp
lock
stos
lock
xor
sarb
xor
dec
push
push
add
cmpsb
cmpsb
or
ljmp
filds
dec
scas
cs
xchg
push
push
xlat
orb
bnd
mov
push
adc
lock
icebp
test
sti
push
or
pop
mov
fbstp
inc
add
sub
sbb
sbb
or
push
shll
mov
test
loop
or
jns
xor
add
scas
hlt
xchg
shll
call
sub
xor
rcll
xchg
adc
ljmp
adc
pop
inc
test
orl
cld
pop
pop
pop
scas
xchg
ret
dec
or
add
adc
stc
rolb
std
inc
mov
loop
filds
lock
ret
xchg
push
aam
push
fimull
pop
repnz
fsts
mov
add
mov
mov
lcall
pop
int
xor
popf
push
or
aad
xor
fiadds
loopne
cmp
movsb
cmp
adc
arpl
sub
shrl
or
dec
mov
ret
mov
pop
sarb
mov
push
jae
outsb
dec
or
xor
mov
fdivs
sbb
insb
int3
sbb
sub
imul
jbe
adc
pusha
push
cmp
lock
pop
or
je
outsb
mov
aad
xlat
lock
xchg
lcallw
ss
icebp
clc
loopne
jmp
sbb
mov
sbb
jne
stos
cmp
lret
aas
xchg
xchg
testl
ljmp
cmpl
xor
clc
lds
jp
dec
out
cmpb
and
inc
lock
push
arpl
inc
cmpb
mov
daa
push
pop
repnz
cmc
push
mov
sub
mov
mov
mov
mov
addb
sub
test
xchg
jno
add
repnz
aad
pusha
lods
fldl
push
fmuls
imul
neg
out
sahf
into
loop
call
ret
xorl
aam
or
add
mov
xor
stc
and
lcall
pop
push
sbb
and
ret
in
call
jns
test
int3
rorb
cmp
mov
frstor
mov
cld
xor
in
out
cli
les
add
add
dec
int
stos
adc
dec
jle
and
dec
sbb
cld
jmp
cmp
mov
lock
stos
mov
repnz
and
pop
xor
mov
push
jge
mul
mov
add
jle
or
sti
sbb
adc
ss
cmp
sub
out
das
loop
push
push
dec
outsl
cli
test
mov
loop
pop
sbb
and
movsb
mov
sbb
mov
xor
sahf
dec
loop
xchg
lea
lret
jle
push
rorb
cli
cmp
shlb
push
mov
lds
mov
pop
adc
xor
jo
dec
popa
dec
push
mov
repz
adc
jecxz
call
adc
dec
or
adc
or
loop
outsb
add
adc
test
shlb
cli
arpl
test
push
and
push
daa
pop
stos
add
push
inc
adc
mov
repnz
xor
mov
push
push
mov
jmp
scas
add
pop
rcll
dec
call
lret
mov
fildl
xchg
mov
stc
sahf
sub
jg
cmp
clc
dec
mov
and
inc
xchg
jge
mov
je
sbb
je
jg
lock
ljmp
push
jp
add
loop,pt
or
test
lods
ljmp
lock
cmc
add
into
sbb
sub
pop
pop
fldl
jb
dec
sub
cld
pop
lret
jo
pusha
cmp
push
push
and
cmp
xor
pop
adc
and
mov
fiadds
mov
and
push
aaa
or
push
lock
cmc
sti
adc
movsb
adcl
or
mov
xchg
mov
and
push
pop
mov
inc
inc
xchg
adc
jle
jno
dec
mov
outsb
xor
jle
dec
test
mov
adc
mov
mov
ja
roll
jmp
pop
test
mov
jecxz
push
pop
lcall
arpl
decl
mov
cli
aaa
adc
add
leave
popf
add
add
or
pop
in
inc
add
push
cli
sti
bnd
stc
es
push
movsb
add
mov
rcrl
xor
jge
ds
addr16
int3
fstpt
ds
sub
mov
mov
lock
ds
arpl
or
hlt
movsb
in
sbb
fs
pop
fnsave
rclb
cltd
push
insb
sbb
ret
ds
ds
in
adc
inc
out
mov
mov
js
fwait
dec
push
fidivl
sbb
mov
sbb
clc
adc
xchg
dec
sub
adcl
sub
imul
jmp
lods
mov
pop
ljmp
stos
cmpsl
sbb
pop
sub
pop
or
sar
pop
fildl
jae
movsb
pop
push
lds
adc
mov
mov
sbb
inc
les
or
mov
push
lahf
out
mov
or
mov
pusha
je
fsubrl
push
mov
jo
cwtl
or
loope
ss
cmp
iret
fidivrl
add
adc
div
and
adc
shrb
sub
cltd
mov
lret
neg
sbb
or
mov
adcb
cmp
or
push
ret
inc
test
movd
inc
push
out
pop
xchg
jo
mov
xchg
ret
scas
pop
fadd
pop
orb
adc
ljmp
in
hlt
iret
mov
pop
mov
fstps
jbe
lret
negl
insb
jmp
push
ret
mov
imulb
stos
cmpsb
jmp
fs
mov
scas
aam
ret
or
pop
or
sub
rorb
lock
sub
mov
adc
fldl
add
dec
mov
fcoms
cmp
mov
or
cli
stos
inc
enter
xchg
mov
or
sarb
inc
iret
aad
push
data16
call
pushl
inc
dec
adc
add
test
jne
nop
je
pushf
push
fdiv
add
jo
xlat
cmpsb
incb
in
pop
mov
aaa
fwait
cs
lret
inc
ja
test
jl
jp
pop
jae
cltd
loope
test
push
push
aas
adc
jo
mov
test
enter
pop
mov
sbb
sbb
xchg
rcr
push
mov
lcall
push
mov
mov
sbb
xor
pop
mov
push
incl
inc
mov
adc
leave
mov
insb
insb
fiaddl
xchg
adc
outsb
dec
jp
outsb
lahf
or
jb
mov
inc
add
push
fmuls
test
cmpsb
sbb
pushl
lods
dec
in
shr
mov
roll
lcall
or
loope
sub
jge
xor
push
inc
imul
sbb
sub
pop
call
cmp
or
add
and
jle
scas
int
jp
sahf
jno
jns
push
in
inc
add
cmpsl
lcall
nop
pop
cwtl
pop
fisttpl
mov
inc
daa
hlt
arpl
out
clc
bound
call
or
loopne
sarb
mov
push
mov
mov
inc
int3
xchg
push
jl
or
insb
cmp
pop
cld
sbb
mov
pavgb
dec
das
add
fimull
not
mov
divb
inc
push
push
push
jg
sub
rclb
push
subl
popa
lods
cmc
pop
push
xchg
xchg
push
or
sub
add
cwtl
mov
push
add
push
sbb
lds
out
push
xor
inc
cld
loope
adc
pop
inc
sahf
subb
or
or
push
rcll
sbb
stos
in
andb
addb
push
xor
jle
or
out
xchg
repnz
push
add
dec
jo
push
ret
fdivrs
or
jl
adc
test
cmp
rolb
cmpsl
and
pusha
call
movsb
sub
adc
sbb
jle
loopne
sbb
mov
pop
sti
cmp
dec
je
cli
sub
std
mov
sbb
pop
jno
xchg
mov
aas
adc
xor
pusha
pusha
dec
rcr
shrb
sti
pushf
in
clc
push
ret
jp
push
sbb
jl
call
clc
adc
jbe
das
jmp
lahf
les
push
stos
push
xlat
fwait
leave
or
dec
and
std
push
mov
push
jge
adc
lea
jmp
jae
pushf
jmp
push
mov
bound
loop
sub
jb
adc
lcall
or
or
cmp
sbb
add
imul
lods
clc
scas
jo
cmpl
pop
dec
mov
jg
loopne
test
jae
fdivr
mov
add
insl
or
xor
fstpl
mov
jp
add
je
cmpsb
pop
stos
and
xor
out
out
aam
fsubs
mov
lret
ficompl
decl
add
incl
ret
inc
ljmp
loop
pop
dec
mov
dec
mov
sub
gs
and
pop
cs
mov
mov
ret
in
jae
lret
mov
push
stc
dec
jecxz
int
popa
nop
popl
xor
push
js
iret
push
dec
rclb
aaa
lock
mov
mov
insb
sub
inc
mov
mov
loop
inc
orl
sub
int
addl
loope
push
mov
das
inc
addr16
nop
popf
or
test
lds
lods
stos
mov
std
ret
lods
xchg
inc
nop
lahf
mul
push
roll
test
lock
popa
popa
sub
mov
adc
rcll
xor
xor
xchg
add
sbb
pop
mov
ja
loopne
pusha
les
mov
rolb
fwait
and
mov
ds
mov
inc
loopne
dec
and
insl
nop
xacquire
fildll
jbe
and
test
and
jecxz
or
jb
ret
or
mov
or
add
mulb
push
xor
xor
pop
and
and
mov
pop
xchg
inc
xor
ljmp
adc
imul
hlt
xor
ljmp
pop
xor
jmp
cwtl
out
and
mov
cmpsl
mov
adc
mov
mov
sahf
or
push
xor
xchg
test
jnp
shll
fcompl
aas
inc
pop
jle
test
adc
xchg
movsl
push
inc
push
jns
pop
push
mov
sub
stos
add
sub
mov
inc
sbb
hlt
cs
data16
jns
push
out
xor
adc
mov
out
or
adc
sarb
fcomps
pop
orb
and
ds
adc
mov
rcl
mov
scas
push
and
das
pop
push
or
mov
addl
and
cmpsl
out
incl
push
push
sti
insl
mov
pusha
mov
in
test
mov
cmpsl
jle
jnp
add
and
mov
push
jp
lcall
mov
dec
push
inc
mov
ret
dec
cmp
inc
pop
jecxz
adc
mov
pop
mov
test
imul
lds
pop
stos
inc
aas
inc
adc
je
cmp
ror
gs
xlat
dec
aad
addr16
sbb
rol
xchg
inc
cld
pop
scas
icebp
bound
sub
faddp
push
and
lahf
xchg
pop
adc
pop
cmp
dec
in
lahf
cmpsb
outsb
push
lods
mov
nop
lock
fs
pop
push
jae
movsb
sbb
xlat
xchg
sub
mov
enter
pop
add
andb
sub
popf
add
add
mov
arpl
repz
and
mov
addl
cmc
aad
mov
in
adc
pop
movsb
sbb
shll
pushf
aaa
and
mov
xchg
adc
inc
inc
push
cltd
sub
ds
adc
add
fs
xchg
insl
adc
scas
std
or
shrl
add
mov
adc
jne
mov
lods
push
iret
xor
das
mov
xor
mov
jns
or
daa
adc
sbb
push
ret
adc
mov
adc
xor
enter
jmp
adc
scas
dec
shll
flds
rorl
ds
mov
dec
imul
mov
es
jns
arpl
nop
or
xchg
cmp
sbb
rcll
add
pop
jmp
arpl
sbb
mov
out
cmpsl
or
mov
pop
pop
pop
cmpsb
inc
push
mov
sti
or
movsl
int
cli
mov
lods
mov
mov
mov
cmpsl
mov
outsl
dec
and
xor
filds
or
add
mov
xchg
pusha
sub
pop
cmp
popf
jns
mov
and
add
stos
pop
call
shr
jns
xor
les
cwtl
js
bound
inc
stos
ljmp
cwtl
xchg
ret
lock
sub
in
sbb
pop
adc
aam
lds
inc
dec
cmovno
aaa
and
scas
pop
sbb
sub
cwtl
sub
enter
mov
into
sub
stos
and
pop
cmp
adc
pop
add
and
mov
jae
push
mov
xchg
pop
jmp
negl
and
loope
lods
pop
mov
dec
imul
fwait
add
sti
stos
mov
pop
lds
lea
add
enter
dec
enter
push
dec
pushf
pop
push
xor
scas
fwait
jp
mov
pushfw
mov
add
cmp
sub
xchg
inc
aas
sbb
cmpl
nop
xor
std
rclb
mov
in
repnz
push
dec
mov
mov
or
and
sub
call
movsl
cmp
dec
pop
add
or
fdivl
mov
rclb
cwtl
imul
adc
mov
shlb
jo
popl
mov
lea
cmp
test
aad
std
les
out
jns
vxorps
jl
dec
jb
add
lret
les
nop
fists
add
cmp
sbb
mov
xchg
daa
imul
iret
or
fisttpl
test
xor
jnp
fadds
adcb
int
js
xor
loop
pop
out
jp
fisttps
loopne
jo
mov
daa
mov
jmp
pop
popl
inc
and
cs
mov
sbb
add
mov
and
adc
out
mov
imul
movsb
sub
mov
mov
push
loopne
fwait
orb
add
ljmp
sahf
lods
in
xor
push
aaa
cmp
in
fists
js
xchg
lds
add
cmp
gs
push
test
loopne
sbb
fwait
inc
adc
xchg
mov
loope
mov
xlat
scas
adc
jne
loop
inc
xlat
dec
cmp
push
jle
jne
or
vpmulhuw
pop
mov
mov
cmp
jl
mov
pop
cwtl
push
arpl
pop
ss
or
sbb
push
inc
ja
and
add
inc
cvttps2pi
out
inc
dec
push
mov
xor
movsl
inc
and
arpl
add
test
ret
fldt
mov
xor
jbe
add
cmp
clc
repz
int
imul
inc
add
bound
out
xlat
mov
insb
dec
pushf
and
inc
and
or
out
test
inc
xchg
pushf
dec
test
iret
idiv
jo
jo
sbb
loopne
inc
sti
mov
sbb
imul
rorl
clc
movsl
or
pop
jp
jg
jnp
pusha
ret
jmp
into
movsl
push
outsb
dec
push
arpl
push
fmull
mov
mov
sbb
xchg
aaa
repnz
loope
push
push
fwait
test
cmp
sti
loop
scas
in
and
cmp
popa
xchg
lret
addr16
stos
sbb
scas
jmp
cmp
lret
jle
lret
lock
sti
push
fcompl
push
fisttps
inc
or
inc
jae
sub
push
pop
push
imul
sbb
test
sub
test
std
adc
xor
mov
mov
push
gs
jo
lahf
subb
cmpb
ss
lods
scas
ds
and
xor
cld
xor
push
jns
inc
js
cmovge
loope
test
mov
mov
loop
or
mov
xchg
incl
sub
fimull
jg
sub
inc
push
icebp
ror
xor
mov
and
filds
jae
mov
hlt
subl
jno
mov
jmp
leave
jbe
bound
mov
xlat
call
xchg
les
pop
adc
inc
cmp
pop
inc
inc
scas
add
cmp
scas
pop
clc
jecxz
negl
add
push
loop
xchg
decb
mulb
sub
fidivrs
add
mov
mov
pop
add
addr16
jne
xchg
pop
sbb
loop
insb
subb
pushf
xor
inc
add
jg
sub
adc
shr
movsl
xorl
bound
jge
mov
and
test
std
jne
pop
shr
pop
je
cmp
mov
xchg
rolb
inc
sbb
sbb
lret
pop
lock
shr
inc
out
idivb
push
js
and
enter
mov
push
aas
les
in
push
dec
adc
pop
mov
cmp
sbb
mov
mov
out
lock
cmpsl
push
aas
nop
jp
mov
loop
dec
xchg
sti
mov
mov
insb
sti
mov
jge
ss
iret
cmp
scas
out
sub
jl
rclb
and
cmp
daa
jae
mov
movl
rorb
ja
insb
pop
sub
scas
xlat
loop
loop
test
cltd
push
mov
pop
jg
insb
sub
pushf
outsl
pop
sbb
mov
jo
gs
rclb
clc
xlat
mov
xor
adc
or
and
loopne
das
or
and
icebp
lds
pop
jae
sub
inc
push
pop
and
into
cli
cmp
push
xor
imulb
inc
jle
insl
inc
push
outsb
enter
xlat
push
lock
testb
test
dec
push
outsl
es
pusha
pop
inc
incl
add
das
dec
pop
lock
jg
pop
push
jecxz
jge
shlb
xor
lahf
cmc
add
mov
xchg
ja
jle
lock
push
popa
fnstsw
or
and
es
scas
xchg
jo
cmpl
lahf
pusha
cmpsl
mov
and
cld
mov
jbe
ror
jle
aas
or
add
pop
add
dec
frndint
test
xchg
cld
jb
or
lods
movsb
add
mov
pop
add
jg
mov
pop
push
lds
mov
mov
mov
out
repz
cltd
out
mov
hlt
and
ret
sbb
fisubs
rorb
cmp
aaa
xor
pushf
lock
rcrb
lock
sub
push
shrb
add
mov
loope
pop
loope
out
addr16
mov
clc
aaa
and
dec
add
es
cmp
bound
push
adc
adc
scas
pusha
mov
aam
sub
repz
mov
xor
mov
pop
lock
push
mov
xor
fidivs
push
fwait
lock
push
imul
cmp
mov
lock
pop
mov
das
push
xchg
mov
orb
or
push
pop
pop
or
mov
mov
jmp
aaa
mov
xorb
mov
mov
sub
outsl
inc
imul
test
xchg
jl
pusha
ljmp
sarl
sub
sbb
sti
sub
and
lods
adc
xchg
inc
lea
xchg
jo
aad
mov
push
aad
adc
xchg
ds
jecxz
jecxz
int3
adc
jns
mov
lcall
cmp
cmp
add
xchg
pop
ja
sbb
xor
sbb
dec
sub
and
jle
stos
pop
fwait
sub
sbb
repz
jmp
test
daa
xchg
aad
movsl
xlat
jle
add
mov
mov
hlt
adc
scas
dec
jbe
xor
sbb
xchg
js
inc
dec
jb,pt
fs
inc
rcr
test
ret
ret
aas
push
mov
lock
adc
fucomip
cmc
outsl
xor
lds
lock
cmpsb
out
ljmp
icebp
push
movups
mov
loope
jg
mov
dec
add
add
and
inc
cld
aaa
mov
push
add
pushf
aam
loop
insb
push
ret
ret
insl
lods
push
loopne
push
push
shr
fidivrs
rcll
ss
in
movb
sub
popf
mov
hlt
push
inc
mulb
lahf
dec
out
mov
mov
or
push
and
jmp
cmpb
mov
or
jl
fldenv
sarb
xchg
cmpsl
and
test
stos
push
add
jmp
lcall
or
fstps
cltd
in
cld
out
add
cld
imul
fnstsw
xor
mov
adc
hlt
incl
dec
mov
inc
shrb
pop
dec
mov
pop
adc
lods
int3
loopne
fldt
push
in
sti
sub
mov
lods
xor
inc
cmpsl
sbb
lahf
pusha
les
not
movsb
push
pop
or
adcb
jge
cltd
inc
cmp
fdivrl
lcall
push
stc
dec
enter
es
or
add
cmp
jecxz
dec
call
gs
adc
jno
data16
xchg
clc
nop
and
or
js
mov
clc
stos
fadds
cwtl
pusha
xchg
aas
push
clc
test
popa
mov
test
add
mov
mov
mov
jae
in
adc
test
xchg
rcl
push
shll
mov
sar
pop
adc
mov
inc
stos
data16
lcall
push
cmp
lods
mov
hlt
jbe
mov
add
sbb
fisubl
fdivl
lods
mov
aad
and
adc
push
xor
mov
hlt
xor
sub
sbb
insl
pop
mov
les
cmpb
in
mov
movsb
add
fstp
ss
cmp
les
mov
mov
dec
sbb
xor
pop
iret
data16
lret
fwait
pop
cmpsl
lods
and
mov
sub
dec
lods
pop
in
sub
fs
xchg
les
dec
mov
roll
out
sub
shlb
icebp
mov
jge
jae
dec
dec
test
xor
xchg
adc
or
mov
loopne
ficomps
popf
stos
adc
push
je
adc
mov
mov
aaa
aad
adc
xchg
cmpl
scas
in
aas
pop
pop
cli
fisttpl
lods
lds
xor
or
cld
lods
sbb
lcall
sub
fdivrl
cmpsb
jecxz
mov
lods
ja
in
xorl
adc
call
xchg
inc
ljmp
fs
sbb
fs
daa
inc
cmp
fbstp
in
xchg
jae
clc
test
jb
call
fiaddl
dec
enter
outsb
ljmp
pusha
push
xor
test
mov
jecxz
pushf
or
push
xchg
and
in
into
xchg
and
mov
cs
pop
lahf
push
ljmp
loop
adc
sbb
and
sarl
mov
mov
sub
pop
mov
test
loopne
or
sbb
sub
or
mov
xchg
push
mov
nop
out
sarb
cmpsb
push
pop
or
jmp
mov
enter
mov
shlb
jp
mov
mov
sub
add
fs
fwait
lea
xchg
fcmovu
add
fildl
out
or
xor
mov
adc
jecxz
sarb
jne
or
cld
push
mov
push
nop
sbb
out
mulb
or
mov
loope
loopne
xchg
cmp
push
push
mov
push
fsubl
sub
mov
pop
nop
mov
lods
push
xchg
sbb
dec
insb
cs
cwtl
stos
sub
orl
js
test
cmp
std
psrad
sbb
jecxz
push
loop
push
add
xchg
add
fmuls
pop
lret
push
cmpsl
pusha
sbb
cs
test
cmc
out
pop
pop
push
and
test
xchg
pop
jns
pop
cli
cmc
dec
adc
mov
ds
ds
jp
inc
pop
sbb
xchg
test
sub
xlat
or
pop
mov
std
sub
push
mov
out
in
jbe
into
push
lret
mov
mov
xchg
push
call
pop
xor
or
inc
jecxz
xor
dec
int3
sbb
std
divl
lret
and
push
inc
aas
pop
push
xchg
cmp
xor
std
xchg
mov
pop
add
adc
out
test
loope
cli
inc
popl
daa
nop
pop
jle
inc
js
mov
mov
loope
inc
jnp
shlb
jbe
pop
int
xchg
in
push
data16
jecxz,pn
sub
sahf
mov
adc
add
dec
inc
fiaddl
lahf
movsl
das
sti
sbb
inc
adc
test
cmpb
jl
dec
xorl
cmpsl
jle
sbb
mov
filds
and
mov
add
out
lods
bound
pop
stos
incb
pop
faddl
add
xorb
jmp
pop
jo
cmp
scas
loope
cmp
mov
lock
inc
fisttpl
pop
dec
loope
xchg
test
jo
push
movsb
mov
xchg
fst
cld
mov
adc
rol
add
mov
xchg
rorb
inc
in
lock
ja
dec
lea
xchg
ret
jmp
push
mov
stos
hlt
adc
cmp
test
lcall
add
in
les
leave
lret
mov
add
cmove
push
pop
movsb
mov
xor
adc
aaa
push
lcall
loop
shlb
pop
loop
lds
hlt
cmpsb
mov
adc
cmp
or
xchg
push
jns
and
aas
pop
cld
pop
mov
in
popf
sub
addl
xor
mov
sbbb
and
or
jl
adc
das
mov
in
mov
pop
xor
inc
out
push
icebp
cmp
ret
cmp
inc
and
push
sbb
push
into
sub
in
lods
and
sub
insb
mov
mov
outsl
pop
lods
jp
cmc
mov
lods
or
leave
push
mov
adc
mov
into
ret
mov
pop
or
adc
or
dec
sbb
leave
cmp
dec
loopne
stos
mov
xor
pushf
sub
xor
inc
sub
sarl
push
or
and
cmp
ja
iret
mov
and
fimuls
lock
pop
rolb
pop
pop
cmp
xor
push
je
cli
imul
and
sub
jnp
dec
jecxz
add
popl
aas
xchg
dec
mov
add
sbb
ss
lods
add
mov
fwait
pop
or
mov
xor
clc
pop
xchg
mov
sub
shlb
add
leave
cs
aaa
in
cmpb
ret
ficoml
ljmp
xor
sub
mov
inc
pusha
mov
add
sahf
sarb
xchg
pop
xor
adcb
sub
ret
dec
cmpsb
sbb
lds
inc
sub
xor
lock
pop
jl
sub
out
push
das
add
push
mov
fstpl
mov
out
divl
subb
flds
cs
shrb
fnstsw
jl
dec
pop
inc
and
inc
sti
les
sub
sti
push
incl
stos
loop
ret
in
inc
aam
cmc
xor
sbbl
xchg
ljmp
into
fildl
mov
lcall
pop
xor
mov
add
and
int
sti
mov
xchg
or
cmp
scas
lea
xchg
sarb
loop
out
mov
sti
js
repnz
mov
jge
jg
out
lahf
add
shll
and
stc
adc
inc
mov
mov
jp
add
in
inc
test
scas
adc
cli
enter
and
add
mov
test
sub
cld
mov
xor
cwtl
movsl
jmp
leave
cwtl
test
and
cmp
clc
test
sbb
push
or
andl
and
aam
lods
dec
cltd
js
aas
mov
ljmp
adc
or
loop,pt
push
outsl
stos
std
inc
mov
cmpsb
ljmp
inc
out
add
ss
in
add
ret
adc
add
hlt
cmpsl
jl
or
icebp
fisubl
js
add
clc
imulb
je
rclb
pop
adc
ljmp
and
mov
pop
lods
stc
add
roll
aam
push
out
rolb
push
jp
lods
jl
cwtl
push
pop
jb
sub
lcall
cmp
andb
ror
imul
lret
pop
shlb
mov
movsl
subb
adc
add
test
xchg
fdivr
mov
and
push
js
and
lods
and
push
rolb
dec
hlt
je
fisubl
fsubl
pop
cmpsl
mov
or
and
test
and
sar
xchg
add
int3
mov
mov
mov
cli
add
push
push
mov
jl
test
sarb
inc
andb
or
sbb
push
pop
in
pop
mov
inc
xor
xlat
adc
icebp
jge
ret
outsl
es
loope
mov
pop
xor
add
test
mov
or
and
je
roll
push
clc
and
mov
or
imul
adc
in
dec
lahf
imul
jo
mov
je
fdivl
ds
ss
shlb
inc
and
mov
adc
xor
orb
lcall
or
rcrb
sti
lea
fimuls
cmp
movsb
ret
lods
ficoms
ja
dec
pop
cmpsb
fiaddl
pop
addl
xlat
mov
sbbb
pop
inc
movsb
adc
adcb
jb
sbb
sub
push
mov
stc
clc
push
or
insl
rolb
pushf
test
mov
pop
cwtl
sahf
pop
test
jns
into
pop
outsl
add
sub
sbb
mov
pop
xor
shrb
inc
lahf
ss
cs
cmp
adcb
xchg
ret
mov
insb
loop
aam
mov
add
icebp
ficoml
lock
roll
mov
push
add
cli
mov
pushf
jle
or
and
cmpxchg
ret
push
pop
jb
and
sbbl
insl
loopne
ficoms
mov
imul
jb
call
jle
adc
adc
xor
lret
xchg
loop
dec
loopne
adc
test
fcomip
push
mov
fdivl
mov
xorb
sub
adc
pop
pop
inc
insl
aaa
dec
stc
cmp
pop
adcb
mov
pushl
or
pop
sbb
stos
mov
jae
jl
cmp
ss
clc
popa
jne
leave
ficompl
sbb
fdiv
mov
xorb
test
movsl
pop
dec
loope
inc
out
mov
sbb
jne
pop
bound
subb
inc
xor
mov
jg
movsl
addl
outsl
mov
or
sbb
push
fisubrs
rcr
dec
sbb
lret
add
lret
push
dec
jbe
mov
or
pop
xor
cmp
jl
das
jb
lahf
aam
lods
or
and
or
mov
cmp
push
or
and
jo
fmuls
das
or
insb
mov
inc
stos
outsl
in
pop
insl
arpl
and
xchg
mov
adc
lcall
add
lods
xor
lea
mov
or
ds
push
mov
sahf
xchg
adc
mov
insb
mov
pop
push
cmp
frstor
movsb
sub
or
or
jmp
sbb
loop
xor
nop
addb
repnz
add
or
add
flds
loopne
xor
cmp
ljmp
lahf
mov
cmp
test
dec
loopne,pt
add
sub
out
lcall
out
lds
cmc
xchg
ffreep
pop
jbe
sub
idivl
movsl
and
pop
out
movsl
xor
add
and
pop
and
cmpsl
dec
cltd
cmpsb
out
test
pop
or
xchg
pop
jl,pt
xchg
adc
xor
mov
cmp
inc
push
add
dec
adc
dec
loop
test
jge
test
mov
sbb
xor
xlat
in
orl
insl
shlb
or
clc
mov
mov
sbb
pop
lds
sub
xor
stc
out
or
sbb
jl
fdivrl
add
mov
inc
sti
loope
push
adc
js
int3
ret
test
add
out
cli
stc
push
dec
jge
or
int
or
mov
ds
push
rcl
adc
jmp
stos
out
mov
push
pusha
inc
dec
mov
mov
dec
dec
mov
rol
mov
adc
jae
arpl
sarl
cmp
das
test
inc
sbb
mov
mov
pusha
xchg
mov
lods
cmp
xchg
mov
sub
or
pushf
mov
mov
lret
jge
add
fs
cmp
mov
out
aad
scas
adc
imul
movsb
lret
ja
xchg
sub
adc
loope
ret
inc
in
jmp
dec
shll
stos
js
inc
sbb
repz
ds
mov
cwtl
pop
pop
rclb
xchg
scas
cmpsl
sub
sbb
adc
push
rcrl
push
inc
dec
mov
xor
and
jle
mov
add
or
subl
test
popa
or
add
mov
mov
ja
xchg
pop
ds
cmc
std
push
bound
xor
cld
add
dec
add
popf
push
clc
or
ret
cmp
sub
cmpsb
dec
aas
roll
cmp
dec
nop
inc
cmp
lcall
es
ret
xorb
shl
test
iret
fiaddl
jbe
mov
jecxz
adc
xchg
fadd
loopne
jnp
jbe
mov
ja
add
shrl
push
xchg
in
mov
dec
andl
push
bound
cltd
inc
test
popf
xchg
ret
lahf
rorl
xchg
push
icebp
xchg
lock
jb
stos
arpl
cmp
aas
daa
sub
push
test
add
and
mov
pop
sub
insb
scas
inc
inc
lods
or
add
insb
mov
push
and
aam
loope
in
cmpps
cmp
jno
stos
lds
jmp
nop
mov
sbb
outsb
add
jnp
sbb
fsubl
mov
dec
ds
add
test
push
or
daa
jmp
inc
sti
add
stos
cmp
insb
mov
adc
mov
jo
stos
icebp
mov
adc
or
fisttpll
sbb
cmp
cmp
icebp
aam
pop
sub
jb,pt
jo
cli
fadd
sub
xor
out
xor
sbb
aam
pop
mov
push
fisubrl
lcall
ret
or
shl
sbb
cmp
imul
pop
insl
jge
in
lea
add
jp
cwtl
mov
scas
push
jo
imul
clc
push
sub
inc
ret
dec
jns
ffree
imul
mov
loope
insb
xor
jbe
or
mov
das
idiv
cmpsl
sub
mov
jns
mov
add
xor
jg
cmpsl
fwait
cmp
pop
cld
mov
aad
shr
xor
cmpsl
mov
inc
mov
fcmovnu
ja
mov
mov
enter
or
dec
cmp
and
or
mov
fs
cmp
movsl
xchg
mov
pop
dec
stc
xchg
pop
sti
pushf
sti
test
rep
loopne
dec
sbb
addl
sti
test
pop
aam
and
stos
fldl
pop
ret
addr16
sbb
xor
shlb
pop
xchg
and
daa
cli
jecxz
fsubr
outsl
orl
les
outsl
xlat
subb
jp
fidivrl
push
pop
test
mov
in
jb
test
and
lcall
subb
sub
cmp
mov
or
sub
sub
sbb
and
popf
lcall
xchg
dec
mov
cmp
xchg
and
pop
adc
mov
dec
add
out
push
xchg
pop
lea
sub
mov
or
jmp
test
sub
cli
xchg
outsl
xchg
pop
or
orl
cmp
mov
cmc
lock
into
cwtl
pop
call
popa
rcr
and
cmc
scas
mov
rol
bound
sbb
pop
or
ret
mov
out
adc
sbb
test
call
int
push
cmp
notb
sub
push
shll
std
ds
stos
xor
xorb
call
in
push
sbb
rcrl
pop
jbe
outsl
inc
cmp
loop
aas
incb
in
mov
inc
mov
push
mov
cmp
sbb
ljmp
mov
adc
pusha
mov
fadds
sbb
adc
mov
mov
adc
cmc
pushf
arpl
sub
jmp
outsl
scas
arpl
add
push
cs
pop
sub
sbb
aaa
cmp
mov
mov
pop
and
scas
push
int3
out
jnp
push
xor
xor
xor
xchg
adc
mov
xchg
add
fsub
inc
outsb
or
and
fldt
sub
jmp
scas
lret
lock
and
push
adc
and
mov
pop
subl
bound
mov
icebp
push
insb
sbb
jo
or
rcrl
mov
movsb
xor
jp
dec
mov
jp
xor
mov
xor
add
or
cmp
iret
outsb
adcb
add
ret
dec
jg
xor
fcoms
ja
lcall
daa
mov
mov
add
cmp
mov
sub
test
mov
mov
jo
fcmovbe
mov
sub
adc
inc
sbb
test
or
rol
cltd
jp
mov
push
test
add
hlt
inc
xchg
in
adcb
cmp
push
jmp
mov
mov
sub
push
jecxz
push
xor
fadds
sbb
push
xchg
ret
jl
mov
into
jg
and
inc
add
cwtl
lods
fdivl
mov
dec
outsb
cmp
popa
fadds
imull
cmp
xchg
popa
add
clc
addb
or
xor
out
cmpl
xchg
clc
jecxz
xor
cltd
cmp
push
cmpl
je
sbb
mov
insb
aaa
movl
loopne
outsl
call
xchg
mov
scas
push
aas
cwtl
jbe
scas
sbb
adc
shrl
int
test
xchg
push
fidivl
dec
add
add
pop
inc
insb
subb
pop
insb
ss
pop
dec
stc
xchg
xchg
add
xor
mov
inc
lcall
push
loopne
inc
dec
mov
jle
sub
or
mov
jl
mov
dec
mov
rcl
xchg
lock
or
sti
or
fisttpl
add
sub
xchg
stos
push
or
xchg
rcrb
jecxz
ret
inc
push
xor
shlb
loopne
jns
push
sahf
cwtl
lods
pop
pop
test
add
daa
xor
fadds
jge
std
adc
sahf
repz
dec
adc
addl
mov
pop
pop
mov
mov
push
jbe
inc
pop
sub
inc
and
into
ss
xchg
jl
fsubp
or
and
and
or
pop
jo
loop
sti
cmp
sbb
inc
xor
call
nop
jb
pop
cli
cld
clc
clc
xchg
mov
jae
pop
rclb
cmc
push
test
stc
cs
fadd
add
pop
pusha
sti
popf
cmc
jg
sbb
cmp
scas
adc
andb
inc
scas
push
je
push
push
rcll
loope
daa
fwait
pmuludq
jl
pop
scas
inc
lods
and
lods
dec
add
mov
fucomi
aas
std
add
rclb
mov
mov
int
out
and
rcrb
es
out
and
push
dec
aam
or
fwait
scas
push
lcall
dec
xor
loopne
add
xor
push
sbb
rorb
cmc
pushl
rorb
push
pop
fisttps
push
push
jl
decb
mov
pop
cld
test
cmpsb
mov
insb
and
fdivrs
fwait
pop
lods
lods
or
out
addr16
adc
pop
imul
jl
or
push
imul
jbe
mov
and
adc
iret
inc
test
test
jmp
mov
sbb
inc
mov
and
cs
insl
ret
pop
jg
dec
cld
mov
sbb
cli
clc
inc
jl
or
push
mov
pop
in
movsb
lret
in
pop
jbe
std
lahf
push
scas
ss
out
push
jne
add
lock
mov
sbb
sub
pushf
shrb
push
test
cmp
dec
loop
ss
addr16
scas
popa
mov
mov
mov
cli
pop
repnz
js
ljmp
aam
insb
and
adc
dec
pop
insl
int
pop
shll
lahf
sar
and
fucomip
outsl
or
xchg
adc
add
adc
mov
push
ds
int
call
aaa
sbb
push
adc
jo
jae
jmp
cli
push
lds
sbb
out
jl
rolb
clc
and
pop
test
sbb
sbb
push
sub
and
adc
dec
cmp
rorb
push
imul
loope
outsl
stos
or
movsb
adc
sbb
adc
insb
mov
cmp
out
push
loop
cmc
pop
add
sbbl
or
or
jg
dec
aas
insl
mov
pop
icebp
test
xchg
fimull
scas
rclb
ljmp
test
rolb
nop
arpl
mov
cmp
call
shlb
loop
ja
inc
pusha
mov
js
lds
cs
fmull
xchg
mov
int
mov
fs
xchg
push
xorl
and
push
pushf
add
add
and
add
adc
xchg
pop
add
dec
or
push
push
pushl
js
push
sub
mov
xchg
add
lods
sarb
hlt
icebp
outsl
fiadds
mov
push
adc
mov
inc
call
sub
and
pop
faddl
and
mov
es
push
sbb
and
ficompl
aam
sub
jl
sub
ljmp
adc
in
adc
pushf
xchg
ds
cwtl
imul
mov
push
and
push
repnz
aaa
adc
scas
icebp
mov
nop
fwait
dec
and
stos
ljmp
sub
mov
push
cmc
dec
pop
es
cmp
lcall
mov
mov
test
mov
mov
sub
subb
mov
cld
or
popa
adc
sub
sbb
ljmp
aad
push
adc
mov
ret
and
ret
push
mov
mov
fimull
xor
orl
mov
jge
sahf
andb
dec
mov
jp
mov
in
call
xor
cmc
jg
lds
fiaddl
imul
ja
dec
cmp
gs
adc
std
cmpsb
arpl
shlb
mov
pop
or
loopne
or
adc
mov
ss
sbb
xchg
push
push
fsubrl
fs
push
add
lfs
mov
push
jg
rorb
cmp
add
push
adc
fcom
sub
xchg
test
sbbb
int
fstps
xchg
push
test
idivl
xor
test
fisubrs
cmp
xor
inc
test
aaa
mov
jge
jno
dec
rcll
in
jae
roll
sbb
add
mov
mov
jb
push
jle
mov
out
push
fiaddl
xchg
mov
push
cmpl
insb
mov
pop
push
mov
stc
sbb
js
loopne
xorb
push
mulb
and
int
or
ljmp
cmp
cmc
sub
movsb
pushf
inc
xchg
adc
shll
and
push
loop
adc
jl
lock
jge
js
cmp
out
dec
insl
push
aaa
ret
rorb
aam
jo
mov
data16
pop
mov
fdivrs
push
cmp
adc
sbb
movsl
incb
cld
jecxz
lods
and
sti
jbe,pt
movsb
dec
mov
stos
cmp
adc
xchg
stos
scas
sbb
jo
push
mov
mov
aas
push
int
and
add
push
inc
mov
loopne
out
dec
mov
add
dec
push
xchg
es
rorb
cltd
ds
dec
push
cmp
clc
xor
jb
ret
adc
jl
lret
test
movsb
popf
dec
loop
rorl
and
mov
xor
sub
xchg
sub
mov
addr16
js
mov
cmp
mov
mov
mov
fs
push
xor
loope
jecxz
orb
dec
jl
lods
adcl
inc
xchg
cli
js
mov
insb
movsl
or
jo
dec
outsb
push
xor
and
daa
mov
xchg
adcl
inc
push
lock
mov
fidivrl
js
ret
xchg
fildl
orl
es
out
ss
lea
adc
sbb
sbb
add
in
dec
loope
popa
addr16
leave
xor
jg
cmc
enter
adc
mov
jbe
iret
sbb
adc
mov
mov
pop
and
mov
and
gs
pop
mov
rcl
je
inc
filds
mulb
add
scas
js
pop
push
and
call
mov
hlt
pop
pop
clc
fcompl
icebp
call
sbb
adc
mov
or
pop
sbb
jecxz
push
clc
add
pop
andb
sbb
in
mov
outsb
or
adc
les
mov
lahf
ds
rorb
leave
pop
sti
or
rclb
mov
js
in
clc
and
shrl
push
loopne
pop
call
dec
mov
loop
push
or
sarb
ror
repnz
in
mov
mov
addr16
adc
mov
shlb
sub
jge
cmp
xchg
shrb
clc
push
je
inc
and
fimuls
icebp
pop
bound
inc
xlat
xlat
sarb
xchg
test
pop
lods
fwait
test
or
adc
icebp
mov
loopne
cmp
mov
mov
and
sub
sub
je
mov
pop
int
dec
movsl
inc
xchg
pop
sub
call
bound
repz
adc
push
sbb
push
in
or
in
dec
cmpsb
inc
fwait
repz
push
xchg
repnz
les
mov
neg
int
mov
add
iret
clc
loope,pt
push
outsb
inc
sbb
stos
and
std
add
incb
fwait
sahf
fcomp
mov
push
rorb
add
popa
jns
arpl
rolb
nop
jle
xor
lea
inc
jecxz
push
fildll
cltd
rcr
cltd
mov
sbb
mov
push
cli
adc
jnp
es
scas
clc
shlb
xor
in
push
imul
sbb
add
je
add
cmp
ljmp
insb
inc
or
and
or
fcomp
js
adc
outsb
push
mov
xor
stos
fdivr
add
fiaddl
cwtl
adc
jb
sub
mov
out
ret
sub
adc
or
and
and
loope
xchg
dec
cld
sub
jbe
scas
dec
shll
cld
mov
rolb
push
pop
dec
push
adc
clc
or
mov
in
mov
xor
or
rolb
in
inc
outsl
aad
pop
adc
rcr
xlat
inc
add
inc
ret
add
lret
lcall
int3
fidivl
and
movsl
adc
jl
jle
mov
int3
dec
call
mov
mov
adc
push
cmp
mov
out
xlat
push
int3
test
adc
fimull
sti
add
mov
and
sbb
inc
mov
sub
popa
movsb
js
adc
xor
mov
cltd
les
mov
in
cmc
xchg
and
pop
jbe
movsb
sub
pop
cld
and
mov
sahf
movsb
aas
mov
add
inc
push
pushf
and
dec
mov
in
rolb
sahf
dec
test
xlat
int3
insb
pop
xor
pusha
jle
add
outsb
xchg
test
call
int3
fstl
jmp
cld
icebp
sbb
jecxz
add
jge
pop
mov
adc
ret
sarl
pop
cli
dec
pop
pop
push
xor
test
roll
js
ret
xor
orb
mov
rol
rcll
cmpsl
rclb
test
ljmp
pop
fsubrp
add
loop
mov
pop
sbb
fwait
xchg
aas
fstl
insl
cli
sub
xor
xor
and
or
jbe
jle
aaa
mov
lcall
dec
rolb
outsl
enter
pop
stc
es
in
jne
xor
pop
xchg
xchg
dec
add
es
gs
add
push
ret
add
lahf
sub
xchg
pcmpeqb
into
pusha
sbb
mov
add
out
shl
repnz
test
add
andl
pop
or
insl
inc
and
cld
and
inc
in
push
shrb
mov
outsl
loope
insb
mov
adc
sub
adc
mov
mov
dec
adc
push
pop
push
jp
xchg
inc
dec
ret
inc
or
aad
adc
mov
mov
cmp
stos
sbb
insl
test
lcall
push
adc
jl
jmp
mov
sub
mov
cmpsl
add
cli
es
lret
and
fsubl
movsb
das
insb
adc
jns
popf
in
xchg
dec
inc
xchg
and
cmpsb
jno
and
or
jecxz
fcomps
and
lret
pop
push
xor
inc
xchg
xchg
out
js
sub
ljmp
or
shll
cs
cwtl
cld
insl
sbb
std
cmpl
add
and
sub
negb
xor
rolb
pop
dec
xor
fdivl
xchg
mov
pusha
loope
popf
mov
ror
push
lock
inc
push
mov
cmc
jl
dec
and
sbb
jno
jmp
dec
lds
ljmp
aad
aas
push
push
aam
xchg
pop
or
or
cmp
jne
test
inc
or
mov
xchg
cmp
push
pop
std
loopne
aam
push
andl
in
hlt
lahf
cmc
jae
inc
jb
add
aaa
xorl
movsb
lods
push
test
js
push
movsl
test
or
imul
cs
mov
xor
push
pop
xchg
call
popa
test
shl
and
mov
test
push
xor
mov
cli
cmp
add
lods
add
cmpsl
and
cmp
cli
cmp
jge
stos
pop
jo
mov
rolb
sbb
inc
notl
leave
pop
jp
mov
xor
xlat
xor
jne
mov
pop
push
and
call
es
loop
dec
or
and
scas
dec
jg
mov
mov
jbe
mov
add
repnz
mov
inc
inc
xchg
jp
int3
cwtl
dec
adc
add
int3
stos
mov
or
out
or
xorb
xor
notl
imul
bound
mov
cmpsb
jns
fstps
jp
jmp
hlt
inc
adc
sub
setl
push
pop
andl
sbb
jmp
sub
fcomip
sub
push
nop
sarb
or
jo
clc
push
xlat
js
mov
ret
insl
shr
jo
ds
rcl
and
cltd
cld
push
adc
dec
in
jl
stc
dec
popf
jno
shll
inc
les
es
ss
fs
inc
mov
sbb
subb
jmp
sbb
lock
fmuls
or
pop
sub
push
dec
jp
stos
iret
xchg
pop
cvtdq2ps
lods
loopne
stos
adc
loopne
fsubrs
inc
dec
in
shlb
test
out
add
inc
aad
sub
sub
sub
pop
test
mov
outsl
mov
dec
mov
xor
jle
cmp
ret
adc
add
lods
push
sub
addr16
ret
mov
push
adc
jp
mov
pop
sbb
push
test
mov
mov
loope
mov
popa
jmp
ret
adc
shrl
dec
cmp
lcall
dec
jb
test
pop
outsl
sbb
push
pop
lds
pop
sub
loopne
mov
cmpl
ljmp
popl
xchg
push
or
xor
and
out
mov
shrb
data16
dec
pusha
cld
cmc
fimuls
or
aam
pusha
shrb
stc
mov
push
out
mov
add
lea
dec
or
push
dec
scas
mov
push
incl
clc
mov
aam
cwtl
orb
xor
and
add
aam
subl
insb
in
in
pand
adc
loope
pushf
push
fmull
and
test
jmp
and
inc
insb
ljmp
dec
and
fwait
cmpsb
scas
xor
push
in
xor
push
xlat
loopne
push
ffreep
dec
mov
adc
add
xchg
push
lret
add
mov
test
test
xchg
sbb
inc
aas
mov
ret
ds
push
ret
xor
aam
dec
jl
mov
adc
roll
lods
push
inc
add
xchg
rol
iret
shlb
and
loopne
call
jo
lea
decb
add
mov
push
inc
inc
out
outsl
test
add
mov
mov
outsb
insl
adc
arpl
inc
mov
mov
push
ret
rcll
jnp
sub
mov
dec
pop
popl
lock
daa
addr16
adc
in
sub
inc
outsb
fimull
add
add
cld
xchg
int3
pusha
loop
mov
lock
lahf
roll
lods
cmp
mov
xchg
scas
pop
xor
jmp
push
movl
pop
add
adc
mov
dec
outsl
pop
aaa
push
lret
cmp
dec
les
or
shl
dec
lahf
jns
sar
ss
sbbb
mov
pop
xor
adc
jae
xchg
push
cld
push
inc
push
adc
and
sub
mov
stos
rolb
int3
sub
pop
push
inc
out
cmp
pusha
mov
aas
in
xchg
repnz
dec
sub
cmp
cmpsb
mov
and
dec
mov
mov
push
sub
insb
les
pop
cmp
xor
sbb
sti
pusha
ds
inc
inc
into
adc
inc
addl
jg
adc
jbe
movsl
xlat
ret
push
fstps
daa
mov
sub
orb
jae
fisubl
jmp
jne
loope
lods
ljmp
and
mov
shrl
mov
cli
mov
insl
rclb
mov
sahf
je
or
movsl
cmp
push
mov
andb
js
sbb
ljmp
xchg
sub
aaa
mov
clc
mov
add
pop
js
movsl
mov
int3
aas
ds
out
ds
cmp
mov
lahf
jnp
add
jns
addr16
jecxz
pushf
mov
arpl
andb
popf
aaa
fwait
lret
inc
xchg
shrb
pop
xchg
cmp
mov
push
mov
je
adc
repz
inc
mov
jl
cmp
jge
pop
add
inc
js
cmp
add
adcb
add
cmpsb
pop
ss
pop
or
mov
dec
cmpsb
mov
shlb
cmp
inc
in
mov
xchg
sbbb
and
mov
fbstp
adc
test
stc
sbb
push
inc
mov
sbb
xor
outsb
in
add
xchg
js
icebp
jne
adcl
and
mov
or
lret
dec
lock
pop
adc
mov
dec
iret
test
out
rolb
ficomps
notl
cmpsb
lock
cmc
jne
sbb
in
shrb
dec
lock
das
dec
leave
sub
cmpsl
outsb
test
imul
test
loop
and
fdivrs
sub
inc
mov
xlat
sbb
out
xor
enter
hlt
loop
pusha
pop
in
ret
es
cmpsb
xor
add
jno
jne
jecxz
xor
xor
fdivrs
lods
je
sahf
call
fcmovb
subb
pop
fwait
inc
mov
inc
inc
pop
ljmp
dec
jle
xorl
xchg
lods
insb
movl
or
and
testb
clc
jmp
inc
inc
stos
inc
je
je
test
fildl
jp
and
inc
ret
rcrl
jp
and
mov
cmp
repnz
cmc
int
mov
into
ljmp
fldl
fnstcw
push
mov
shrb
inc
sbb
or
mov
fcmovbe
add
adc
aam
daa
push
push
shll
pop
cli
mov
xchg
mov
incb
push
out
imul
dec
jno
push
adc
shl
adc
mov
push
dec
cmp
inc
scas
push
cmc
pop
gs
lds
ficompl
jae
mov
icebp
cmp
mov
and
mov
sub
sahf
inc
enter
int
ds
shlb
sub
mov
movl
cmp
mov
push
inc
popf
jle
push
dec
ja
sbbl
adc
and
mov
mov
xlat
xchg
or
pop
mov
mov
jl
mov
push
lods
jp
vpmaxsw
out
or
imul
adcb
in
adc
loopne
inc
mov
push
xor
lret
clc
cs
lods
aad
pop
sub
ja
mov
mov
jg
push
in
inc
push
fnstsw
cmpsl
mov
add
jne
mov
and
cmp
inc
inc
cld
sub
addb
imul
sub
cld
ds
cmpl
xchg
imul
ljmp
ds
push
orl
sub
test
faddl
gs
xor
push
test
pop
pop
xchg
test
xchg
mov
mov
mov
or
mov
xor
inc
stc
imul
add
xor
adc
pop
push
xchg
or
cmp
jmp
mov
psrlw
scas
cmp
or
fwait
lret
mov
mov
adc
js
pop
das
outsb
or
ss
fs
cmp
adc
fmuls
add
inc
add
push
mov
and
pop
je
mov
pop
or
or
and
inc
aad
das
jp
addr16
push
sub
jge
jo
ja
add
pop
lock
arpl
dec
adc
cs
jle
sub
bound
add
les
aam
repnz
es
jno
push
jmp
mov
jb
inc
ja
inc
pop
icebp
mov
push
mov
inc
int
fstl
std
orb
gs
mov
mov
sub
adc
and
push
adc
cs
or
dec
xor
arpl
ds
jp
push
mov
xor
rcl
xor
push
push
ret
xchg
push
in
sub
adc
sbb
negl
dec
dec
into
lock
call
mov
adc
add
stos
leave
xchg
xor
loope
xchg
mov
dec
add
fcoml
jb
cld
divps
or
push
push
dec
mov
stos
dec
sahf
sbb
mov
inc
stos
loope
rorb
jecxz
jno
sub
push
push
les
sub
test
leave
repnz
inc
pop
imul
dec
cwtl
sarl
jmp
imul
adc
xchg
push
scas
pushf
add
inc
out
dec
shld
in
call
sub
and
jge
sbb
mov
or
out
mov
xor
scas
movsb
leave
clc
dec
int3
into
pop
mov
push
repz
iret
push
popa
stc
bound
jecxz
sbb
fcoml
pop
cmc
mov
rcl
aad
shl
jns
and
pop
mov
mov
loop
inc
rsqrtps
mov
cmpsl
xor
xor
ss
rorl
inc
dec
insb
addr16
sbb
push
xchg
loopne
ds
sti
mov
mov
sbb
mov
jle
sbb
nop
test
lods
cmp
push
adc
jle
jmp
cmp
pop
dec
fldl
xor
es
jo
testb
lret
xor
test
das
and
mov
out
clc
sarb
hlt
mov
or
shrb
in
js
gs
inc
mov
in
insl
adc
lcall
jg
cmc
or
mov
xor
jg
ljmp
stc
out
test
push
incb
mov
xor
lahf
popa
mov
out
cmp
jbe
jmp
pop
adc
mov
stos
arpl
mov
add
dec
and
das
or
mov
lds
add
or
test
add
out
push
icebp
jae
lret
xor
inc
testl
xor
cwtl
imul
clc
fdivrl
das
pop
int3
rorb
movsb
insl
xor
and
push
into
mov
clc
and
cmpsl
out
sub
fdivrl
adc
outsb
and
push
icebp
mov
add
test
cmc
pop
cli
push
mov
mov
push
dec
aad
push
mov
push
adc
mulb
dec
or
shrb
mov
adc
lret
inc
pop
addl
dec
roll
add
sti
inc
push
or
mov
gs
adc
cwtl
mov
imul
cli
mov
idivl
loopne
dec
cs
lods
adc
outsb
insl
cmp
xor
jmp
ret
dec
ja
ljmp
xchg
pop
mov
sub
adc
in
push
sub
test
jle
push
sbb
insb
push
push
xor
enter
cmp
jo
and
xchg
std
ds
out
xor
nop
mov
or
cmp
xor
pop
inc
jge
xor
mov
mov
inc
sbb
fucomip
cmp
xor
pop
inc
mov
push
xchg
lea
roll
mov
stos
jmp
and
mov
jbe
movsl
jns
js
xor
dec
lods
cmp
add
push
or
das
push
mov
inc
sbb
xlat
fidivrl
inc
sub
dec
iret
mull
push
sti
add
xchg
dec
loop
pop
jne
out
xor
shr
test
stos
jbe
sbb
pop
insb
or
mov
fidivl
fstpl
adc
shlb
xor
stos
adc
mov
xorb
fs
cmp
shl
fwait
pop
xor
jb
insb
cld
lcall
mov
xor
repnz
fsubrl
pop
rcrb
cmp
and
push
push
insb
imul
movsl
ret
xchg
loope
mov
xor
adc
mov
mov
dec
sub
xchg
ss
cmp
dec
jmp
aas
fimull
stos
cwtl
and
daa
test
mov
mov
add
lods
stos
push
clc
xchg
sub
out
in
adc
je
es
xchg
mov
or
lret
cmpsb
fisubrs
sbb
mov
and
movsl
inc
mov
dec
cmp
adc
in
or
lock
call
iret
and
push
scas
cmp
fisttpll
dec
daa
pop
call
inc
inc
cmp
mov
mov
mov
stc
in
gs
insb
jnp
xorl
hlt
mov
lock
add
pop
test
inc
adc
inc
lock
pop
push
lds
push
aaa
sub
movsl
int3
into
push
sti
pop
dec
mov
hlt
aad
jne
mov
rorl
pop
or
mov
push
mov
xor
xchg
test
jp
add
sbb
sar
mov
push
mov
jo
add
and
fcoms
xor
mov
shrl
add
push
inc
cmp
pop
jl
pop
into
sahf
aad
pop
fisttps
jecxz
lods
pop
fsubrl
sbb
notb
aaa
jne
fpatan
leave
sub
ss
add
and
push
arpl
and
out
push
adc
scas
loope
pop
pop
lret
xor
mov
dec
in
sub
jmp
push
mov
sbb
xchg
mov
add
shr
jb
ret
and
xlat
aas
sub
xchg
scas
push
insl
data16
sub
xchg
aam
mov
pusha
cwtl
inc
out
and
leave
or
addl
std
test
adc
arpl
ret
out
mov
cmp
test
push
inc
xlat
mov
add
push
push
sbb
enter
dec
lahf
mov
outsb
jmp
iret
cmp
or
test
subb
xor
bound
es
fisubl
xor
xor
mov
jno
arpl
jl
loope
mov
xor
cmp
mov
hlt
push
shl
xor
add
jmp
ja
scas
xlat
sub
sub
mov
cmp
push
jbe
stos
or
daa
sub
or
inc
outsb
data16
ljmp
mov
xchg
xchg
mov
push
repnz
cmp
pop
out
cs
inc
jns
cmp
push
mov
fsts
aad
sub
pushf
pop
rcr
push
adc
sarb
fiadds
xchg
and
pop
xchg
repz
sub
mov
out
movsb
pop
aad
adc
imul
sbb
dec
lods
and
out
int
xlat
das
push
xor
in
lret
adc
lret
stos
jo
sbb
xchg
mov
sbb
jmp
dec
div
imul
in
sub
and
pop
cmp
jmp
loope
lahf
mov
push
cmp
hlt
mov
lods
push
aad
loopne
fcmovnu
xchg
stc
mov
loopne
pop
scas
inc
push
adc
insl
inc
out
pop
mov
rorl
mov
pop
inc
add
sahf
cs
fwait
inc
push
dec
and
xor
mov
mov
lock
idivl
dec
xor
int
jnp
jp
daa
push
push
xchg
sbb
xchg
mov
or
out
js
pop
lds
or
clc
cmpsb
xlat
dec
and
ret
sbb
es
mov
mov
push
movsl
fsubs
repnz
xlat
loop
xor
in
out
push
loop
lock
cmp
js
sub
cld
or
fnstcw
aam
adc
sub
loope
push
scas
shlb
dec
mov
or
shll
dec
loopne
and
jne
inc
adc
lret
sbb
push
imul
and
call
push
scas
lock
push
adc
pop
fsubrl
sub
pop
xchg
ja
aam
mov
jmp
fidivrl
ja
and
mov
ja
lahf
ds
imul
in
inc
dec
fwait
mov
mov
fsubr
inc
sarb
push
scas
or
mov
xchg
sahf
icebp
xchg
mov
ja
and
mov
mov
mov
mov
push
outsl
aaa
push
dec
xor
jmp
sub
dec
cmp
xchg
inc
push
mov
add
out
pop
jge
adc
pop
into
xchg
jns
mov
lcall
lret
xchg
pop
dec
push
js
pop
clc
mov
sbbl
int
sbb
negl
dec
xchg
or
or
pop
xchg
add
fwait
pop
sub
mov
enter
movsl
push
push
jae
dec
and
mov
and
sbb
insb
scas
lahf
insl
cmpsb
jle
add
dec
xchg
jmp
sti
call
cwtl
mov
mov
pop
push
dec
mov
cmp
out
leave
add
dec
xor
xor
imull
jge
dec
pop
or
pop
outsb
clc
mov
mov
mov
push
sbb
cmp
mov
inc
add
dec
pop
mov
scas
mov
pusha
lods
add
cmp
shlb
push
shrd
xor
or
test
dec
jae
mov
outsb
out
ficoml
mov
xchg
subb
lock
idivl
xchg
int3
pushf
dec
push
lcall
pop
xchg
sbb
cmp
push
aas
xchg
xor
mov
scas
jg
pushw
pop
test
jno
inc
fwait
icebp
xchg
and
dec
or
out
xchg
std
shll
shrb
add
fdivs
dec
jns
sub
dec
fwait
jmp
test
daa
out
xchg
cwtl
and
rorb
xchg
gs
jl
loop
ja
lock
push
addr16
jae
stos
hlt
push
cmpsb
xchg
scas
insb
mov
loope
cmc
faddp
mov
inc
inc
std
pop
aas
sbb
jno
ja
mov
enter
mov
xchg
stc
cld
js
rclb
add
ljmp
scas
arpl
and
jne
loope
fmull
lahf
cmp
data16
sub
mov
cmp
cmp
lret
test
popa
pop
movsb
imul
sti
sarl
xor
push
arpl
lret
daa
mulb
sbb
shll
or
dec
pop
incb
jo
inc
xchg
mov
xchg
shrl
ret
push
fisubrs
push
cmc
imul
add
movsl
int
scas
aaa
or
imul
scas
imul
mov
inc
xlat
add
adc
loope
jnp
fldt
jo
adc
push
inc
inc
xchg
pop
sbbl
mov
jne
or
pusha
xchg
mov
jg
outsl
ds
rcll
mov
xchg
mov
mov
cmp
insl
sub
lods
out
les
in
mov
dec
in
fidivs
mov
and
sbb
jns
jmp
addb
dec
jmp
bound
push
and
lcall
cmp
cmp
and
rorb
adc
out
fistl
cmp
out
jp
cmp
and
aad
aaa
xlat
dec
or
mov
dec
pop
jg
cltd
sbb
js
repz
movsl
imul
add
rclb
dec
add
sub
dec
lahf
pusha
push
add
ss
movsl
cmp
jl
enter
out
shlb
adc
cmp
imul
cli
xchg
mov
inc
or
jne
imul
pop
push
mov
lret
push
mov
cld
cltd
insb
xchg
xor
in
arpl
xlat
mov
adc
mov
add
or
stos
js
cmp
or
popf
fwait
cwtl
loope
outsl
mov
imul
mov
adc
mov
das
pop
test
mov
pop
int3
stos
sarl
cmp
in
xchg
pop
ret
sub
inc
loop
sub
hlt
aad
mov
add
mov
xchg
sbbb
int3
push
fisubrl
int
mov
push
push
into
ss
push
push
dec
icebp
or
sub
test
sbb
sub
lock
mov
jecxz
adc
dec
je
mov
ret
outsb
jb
cmp
sub
test
pop
lods
int3
mov
xchg
adc
jne
in
sbb
mov
mov
rol
ret
jmp
je
mov
movsl
push
je
jge
out
hlt
sub
cmp
fldl
ja
jno
outsl
fadds
inc
push
xchg
xchg
scas
insb
cmc
arpl
or
adc
imul
dec
enter
fst
idivb
sbb
xlat
sub
add
push
mov
mov
nop
sub
popa
cmp
pop
ljmp
ljmp
repz
dec
ja
pop
sub
sub
and
and
pop
sahf
pop
rorb
jle
dec
pop
jae
addr16
cmpsb
jmp
mov
das
adc
test
sahf
test
rcrl
mov
push
or
pusha
mov
cmp
mov
out
test
push
popf
sti
pop
shufps
adc
cmp
lods
fcoms
adc
lret
push
or
and
mov
and
jns
pop
pusha
icebp
jbe
leave
xlat
sahf
lea
loopne
sahf
push
cmp
mov
shl
adc
fs
cmp
lret
cmp
test
push
push
movsl
das
sbb
mov
mov
lods
jae
cmp
loopne
inc
push
fyl2x
dec
lods
je
inc
adc
xchg
add
and
cli
sbb
mov
sahf
mov
loopne
or
and
pop
loope
and
sbb
xor
decl
repnz
or
in
movsl
pop
les
or
sub
push
adcb
popf
jecxz
dec
stos
push
push
popf
inc
xchg
pop
inc
xchg
dec
pop
add
dec
pop
cmp
xor
and
cltd
js
or
cmpsl
das
daa
mov
xor
loope
mov
out
sub
mov
jmp
nop
lods
sub
push
and
mov
sub
jne
dec
jnp
dec
and
test
sub
sbb
pop
fisubrs
fwait
in
cmc
or
pop
icebp
sub
stos
imul
outsb
std
aad
push
cmpl
xor
xchg
xchg
pop
aad
jmp
push
arpl
or
add
mov
sub
je
stos
lods
in
or
pushf
adc
mov
pop
or
and
mov
arpl
xor
sbb
jecxz
mov
pop
ficompl
dec
cmpl
or
jno
pop
sub
push
scas
sarl
sbb
xor
jge
setle
mov
stos
cmp
pop
adcl
mov
test
mov
rol
cmp
fmull
push
sub
nop
jbe
xchg
push
loope
xchg
pop
adc
xchg
loop
cwtl
jg
dec
ret
pop
sub
neg
js
adc
inc
stc
inc
lds
push
xchg
sbb
and
jg
in
out
xor
test
jo
sub
inc
cmp
bound
pop
aam
mov
mov
xor
lahf
xchg
jo
pop
jmp
xchg
xchg
lea
push
outsl
push
xor
or
add
sbb
pop
test
dec
and
jne
push
aad
out
push
lret
inc
mov
mov
and
pop
and
arpl
insb
jmp
cs
or
les
pop
mov
mov
add
lods
jecxz
ret
sti
lds
cld
fsubrs
bnd
gs
pop
dec
mov
leave
dec
mov
xchg
lahf
dec
cli
sbbb
aad
nop
xor
hlt
fsub
test
outsb
ds
cmp
loop
fldenv
test
and
pop
jp
int3
aad
jmp
idivb
inc
pusha
sub
cmpsb
sbb
cs
test
jle
popf
mov
push
pop
sub
pop
jp
adc
mov
mov
sub
cmp
movsl
xorl
lods
cmc
jecxz
andb
in
dec
xor
xchg
mov
imul
mov
jae
sti
dec
cld
mov
arpl
or
add
mov
dec
ret
outsb
psrlw
dec
cs
shlb
loopne
jg
inc
adc
mov
push
test
sub
pop
inc
das
lock
imul
and
loop
out
mov
clc
mov
rorb
cmp
mov
stos
mov
adc
mov
adc
call
dec
pop
sub
test
sahf
icebp
mov
and
daa
in
arpl
arpl
xor
jecxz
add
add
es
adc
xchg
out
fdivrs
shrl
mov
jg
sbb
mov
inc
aaa
xchg
pop
mov
or
sbb
dec
gs
xor
mov
loopne
add
mov
push
xchg
test
mov
outsl
movsl
js
pop
pop
fwait
dec
dec
sub
mov
decl
decb
inc
arpl
push
shlb
pop
std
xchg
lcall
and
inc
adc
movsl
pop
mov
pop
adc
xchg
shr
or
sarl
sbb
shrl
xchg
rolb
mov
lds
push
push
fs
pop
fisttpll
add
ud2
jecxz
jmp
pop
jnp
loopne
ret
mov
add
dec
call
shll
outsl
adc
insb
stos
jmp
fcmovb
xchg
imul
cmp
or
dec
sbbb
push
mov
enter
cmp
popa
shrb
mov
idivl
or
dec
mov
jmp
roll
inc
xchg
cmc
dec
xchg
adc
mov
fwait
sbb
xor
mov
loop
inc
cmp
inc
cmovge
add
xlat
mov
lret
push
int
cmc
pop
sub
xor
xchg
cmp
jb
mov
shrb
clc
rcrb
stc
icebp
sub
leave
add
push
push
cmp
adc
push
pop
push
shll
inc
mov
add
xor
in
xor
cwtl
inc
filds
xchg
leave
outsb
cmc
push
dec
xchg
or
push
inc
mov
andl
stos
mov
rcrl
push
xorb
js
pop
js
daa
dec
add
pop
pop
ror
mov
aas
jns
sub
inc
fnsave
ja
xor
rcrl
pop
mov
nop
notl
movl
jbe
sbb
mov
sbb
sbb
inc
or
mov
and
fdivrl
sub
pop
stos
inc
and
das
loope
call
inc
aam
and
sbb
sbb
or
out
into
jns
sub
cltd
pop
mov
mov
cmp
cmp
push
sar
addb
mov
cmpsb
mov
stos
popl
cmp
pushf
sub
lods
xor
rcr
lock
mov
shlb
data16
fsubs
push
les
pusha
fnstsw
stos
push
inc
movsb
add
add
orb
sbb
flds
pop
lods
xchg
shlb
es
sarb
jle
pushf
ss
cmp
ljmp
adc
adc
add
popa
and
and
mov
lret
sbb
test
xorl
xchg
xlat
aam
pop
add
dec
aam
push
insb
mov
pop
push
std
cmc
sbb
xchg
adc
and
cmp
arpl
les
sbb
out
insl
pop
inc
dec
fs
mov
ja
ljmp
jp
fmull
loope
icebp
cmp
push
add
mov
in
add
iret
mov
hlt
jecxz
pop
leave
mov
test
inc
jle
cmp
jp
mov
popa
pop
repnz
leave
pop
pusha
or
inc
push
or
push
push
cmp
dec
sub
lock
adc
fisttpl
xchg
xor
idivb
and
je
insb
cld
into
fucomip
add
or
iret
fistps
mov
or
out
add
push
lahf
ret
add
pop
and
add
dec
sbb
mov
sub
cli
mov
cmpl
int
push
adc
sub
mov
xor
xor
imul
ljmp
and
pushf
adc
lahf
jmp
ds
and
mov
push
fst
sub
sbb
add
push
in
outsl
mov
shll
and
mov
cmp
adc
aam
cltd
lcall
mov
xchg
mov
std
pop
sbb
cmp
loop
dec
sub
inc
adc
iret
pop
in
inc
or
jno,pn
mov
fcomps
inc
mov
xchg
test
or
mov
sbb
mov
icebp
cmp
stc
cmp
mov
xchg
cmpl
adc
popf
xchg
les
aas
les
cmp
arpl
movsl
mov
adc
aam
mov
popl
jb
mov
and
xchg
ds
add
jge
cmpsl
ds
test
shl
push
or
push
clc
lock
dec
inc
ret
push
js
out
in
sarl
orl
ljmp
out
sbb
in
lods
xchg
popa
adc
iret
pop
repnz
xor
sub
cmp
dec
dec
in
pop
mov
scas
mov
icebp
stos
cmp
mov
or
add
add
and
out
pop
loop
nop
xor
orl
sub
or
in
sbb
call
in
or
xchg
movb
fisttpl
jne
rorb
or
in
ret
aas
rol
mov
in
call
js
add
ja
inc
push
imul
imul
sbb
es
jo
movl
bound
add
cbtw
repnz
fstpt
icebp
stc
or
fnstcw
xor
mov
stos
iret
rol
notl
sub
mov
insb
dec
mov
sub
loop
and
or
or
push
mov
lahf
add
fcomip
cmp
xor
loop
mov
mov
push
push
dec
enter
loopne
adc
scas
jecxz
aam
mov
in
aaa
sub
and
movsb
and
imul
in
adcb
insl
clc
and
fisubl
out
lret
test
push
pop
pop
lcall
push
ds
shll
cmp
and
sti
std
pop
sub
lret
shl
clc
ja
ficoms
mov
mov
push
test
cld
rolb
xor
push
sti
mov
inc
jp
int
roll
lock
imull
call
xchg
adc
mov
fdivrs
loope
ds
add
lods
push
sahf
pop
aaa
inc
mov
rep
loop
jl
cld
fdiv
lock
in
sub
jns
sub
test
movb
sarl
fwait
adc
add
jbe
jle
mov
pop
mov
daa
cld
imul
pop
lea
jns
adc
mov
or
pop
push
jb
addb
xor
lock
pop
mov
rol
lods
jae
inc
or
dec
mov
add
cmp
repnz
call
jmp
adc
aas
mov
cmp
test
cli
movsb
leave
fstps
jl
mov
sbb
mov
sub
out
stos
pop
sub
scas
mov
xchg
inc
pushf
shrb
inc
mov
jbe
push
push
adc
arpl
sbb
pop
imul
xchg
cmp
push
adcb
add
add
fdivrl
add
ret
ljmp
out
add
imull
sbb
adc
sub
xor
pop
pop
lods
cmp
dec
mov
mov
nop
lods
repnz
lahf
outsb
inc
shr
push
gs
add
cmp
xchg
mov
xor
outsb
loop
and
je
insl
cli
push
xchg
adc
sahf
cli
adc
jle
jle
ljmp
addl
jbe
lods
xor
arpl
das
call
jb
mov
lcall
call
cwtl
xchg
mov
shlb
pop
mov
mov
adc
pop
jnp
push
sub
and
aas
arpl
ds
shl
fs
cmp
ja
jmp
test
or
fcomp
mov
and
dec
adc
xchg
divb
test
cmp
fdivp
pop
lods
pop
int3
jbe
test
insl
inc
fwait
mov
xchg
scas
mov
mov
ja
xchg
xor
test
jp
aad
lods
mov
in
mov
fistl
jp
push
pop
cmp
ficompl
cli
test
cmpsb
adc
leave
pushf
mov
cld
mov
out
lahf
fcompl
gs
cmpl
pop
adc
out
xor
int
pop
out
pop
mov
pop
sar
cmp
mov
mov
in
lods
mov
xchg
cmpb
sbb
loope
xchg
rclb
or
mov
movq
fldenv
sbbb
pop
mov
cmp
sbb
outsb
test
push
inc
int3
mov
std
je
mov
ret
mov
jb
pusha
arpl
lea
jle
sbbb
cmp
inc
mov
popl
enter
xchg
and
enter
fadds
cmpsl
mov
in
jp
loop
not
cwtl
push
jg
lcall
sub
ja
dec
sti
test
xchg
xchg
cld
bound
out
call
sbb
test
and
jp
out
jnp
icebp
shl
faddl
in
imul
daa
xchg
ficoml
mov
cmp
int
jl
jbe
sub
es
das
leave
mov
ss
call
movsl
rolb
pop
push
push
loop
mov
ljmp
ljmp
xchg
adc
mov
jmp
mov
dec
sub
pushf
es
push
push
cld
fwait
xor
adc
pop
fdiv
sti
cmp
orl
jo
insb
dec
sub
add
repz
iret
pop
bound
cmpb
mov
ljmp
sbb
in
ja
ret
adc
push
push
icebp
mov
cmp
inc
mov
clc
push
mov
fistps
push
cmp
idivl
aad
aaa
ret
cmp
push
mov
lea
jno
test
jo
sub
pop
inc
iret
sub
and
rcll
inc
xchg
adc
addb
fs
jg
push
aas
cmp
mov
daa
jo
lds
sbb
and
imul
cld
lock
xchg
cltd
loop
jmp
sti
rcr
ret
jle
xchg
pop
mov
push
add
inc
xor
jo
jle
jg
jle
addl
int3
je
xor
jl
dec
repnz
lods
rolb
out
cld
outsb
adc
adc
dec
jl
add
dec
pop
cld
mov
lret
ret
stos
add
pop
or
push
xchg
jnp
and
test
push
push
std
mov
ds
fdivrs
sbb
xor
inc
jo
dec
sbbl
or
jmp
dec
stos
lock
and
jno
jo
jmp
js
outsl
lcall
mov
xor
sub
jae
cmpsl
inc
cwtl
xor
addl
inc
and
jg
test
add
push
pop
pop
jbe
mov
jno
xor
cmp
adc
xor
out
mov
push
imul
in
sub
clc
inc
xchg
mov
out
andb
clc
test
add
mov
adcl
mov
outsl
in
jns
popa
mov
push
jle
jg
jo
dec
sbb
nop
jp
fsubr
test
hlt
mov
negl
int3
pop
mov
das
pop
dec
cld
pusha
xorl
jo
outsb
loope
cmc
push
dec
jle
ret
es
pop
clc
or
dec
cltd
xlat
test
sub
add
sub
sbb
pop
mov
and
push
xchg
mov
sahf
fstp
lock
and
fisubs
xchg
xchg
fdivp
test
cmp
jle
outsb
fists
mov
cmpsl
pop
sub
pop
push
jbe
fidivrl
mov
lods
adc
sub
ret
lods
stos
mov
xor
je
bound
jl
sarb
loop
shll
or
scas
loopne
cmp
test
scas
fmuls
in
mov
lret
push
cmp
rcrb
aaa
or
popa
call
push
jp
lea
add
inc
push
lret
push
pop
push
dec
or
jmp
mov
shr
cli
add
mov
mov
test
adcl
sbb
push
arpl
icebp
lds
rcl
add
dec
sbb
dec
mov
lcall
mov
add
scas
pop
mov
hlt
cmpsl
in
mov
outsl
mov
mov
adc
add
push
sti
call
lcall
push
push
jbe
cmpsl
cmp
push
mov
lea
cld
push
fwait
notb
rcrl
inc
cmc
push
pop
lret
mov
mov
push
mov
pop
dec
fisttpl
loop
aas
aam
xor
addb
int3
in
roll
adc
fidivrs
cmpsl
test
adc
mov
sbb
sbb
sub
jl
ljmp
addr16
test
sti
xor
fsubl
ret
mov
lods
pop
mov
add
cld
pop
jg
mov
add
js
insb
push
inc
push
dec
fdivs
cwtl
push
cmp
fstps
cmp
popa
daa
cmp
mov
pushf
or
or
or
sub
mov
cld
add
pop
loope
ficoml
mov
lret
xchg
mov
out
pop
out
mov
mov
mov
add
or
inc
add
stc
pop
jne
roll
fstpl
or
out
lods
dec
and
pop
pop
and
adc
sahf
jp
mov
mov
aas
pop
mov
inc
mov
jle
hlt
mov
test
packsswb
add
loope
xor
sbb
fxch
add
js
jae
cmp
outsb
test
sarl
aas
fwait
js
icebp
rclb
sub
mov
shrb
jno
popa
lock
sbb
lea
popa
adc
mov
sahf
and
shlb
scas
xor
sbb
sbb
sub
pop
and
xchg
icebp
test
test
mov
mov
and
clc
push
cwtl
mov
orb
fsubs
mov
jmp
or
or
pushl
mov
or
push
arpl
out
scas
mov
mov
lea
loop
sub
lock
lock
test
push
rorb
jnp
or
sub
push
push
adc
xor
stos
pop
aaa
lret
mov
and
or
jge
dec
mov
sub
lret
cltd
dec
clc
les
and
pushl
mov
add
inc
mov
pop
ljmp
cli
enter
dec
aam
add
mov
popf
cmc
ret
xchg
ja
push
mov
gs
pop
xor
jo
lods
and
push
out
das
lock
int3
movsl
mov
les
aaa
jb
xor
jbe
mov
iret
popa
inc
addr16
xor
js
jp
add
inc
sbb
sub
and
lea
out
test
add
stc
incb
pop
in
loop
push
add
xor
pop
incl
xchg
jbe
in
rcrl
or
enter
add
and
insb
ret
push
sarb
inc
sbb
pop
jecxz
fmuls
cmc
scas
outsl
add
cltd
xchg
loope
enter
call
ljmp
and
and
inc
sbb
mov
fadds
push
ss
outsl
mov
lret
push
xchg
xchg
sub
sub
lods
cmp
lretw
les
mov
sbb
leave
and
popf
enter
pushf
adc
in
mov
out
rorb
fisttps
jmp
movsb
sbb
inc
pop
test
dec
and
js
inc
sub
cmp
jo
xor
into
adc
jle
addr16
jle
mov
adc
pop
adc
mov
jbe
cltd
inc
stos
mov
sbb
or
popa
mov
add
push
pop
mov
aam
call
rcr
push
sbb
add
push
jb
xorb
pop
or
das
ret
pop
cmpsl
sbb
inc
lds
push
and
mov
lock
clc
cli
pop
lods
xlat
fstps
dec
incl
dec
xchg
addr16
jbe
js
icebp
scas
sbb
shll
xchg
pop
push
mov
sub
inc
add
mov
pusha
lock
test
data16
inc
and
jo
sub
enter
cmc
dec
jo
icebp
mov
testl
test
cs
and
pop
out
xchg
cmp
mov
and
shlb
mov
push
mov
or
daa
sub
les
mov
xchg
cli
es
inc
cli
stos
xchg
adc
outsb
and
jge,pn
jae
push
dec
dec
lret
lock
cld
pop
rolb
loope
add
fildl
dec
xlat
insb
orl
pop
pushf
pop
testl
jmp
cmp
pop
or
adc
and
fdivs
inc
std
push
mov
sbb
push
add
rorb
or
mov
xor
jp
outsb
push
mov
sbb
insb
xchg
fsubrl
mov
addl
cmp
mov
test
jae
fs
loop
dec
sub
dec
dec
roll
xor
je
sbb
js
push
cmpsb
cwtl
incl
sbb
lret
sub
mov
mov
inc
or
sbb
push
getsec
jp
mov
push
xor
jne
loop
xchg
xchg
daa
xorb
popf
sub
enter
mov
int
mov
pop
out
cmp
stc
mov
add
mov
push
adcb
orb
imul
inc
out
push
lods
sti
push
dec
inc
mov
jg
les
add
pop
div
add
jl
out
pop
fimull
mov
sbb
int3
jbe
jnp
sbb
pop
or
call
push
mov
out
inc
sub
enter
jbe
cmp
add
add
push
or
sbb
divl
addl
insb
xchg
loope
xor
stos
or
jle
jo
push
loope
jbe
or
mov
or
push
ss
je
and
subb
mov
icebp
pop
ret
loope
aaa
jo
cld
rol
out
dec
orl
fadds
mov
test
mov
sbb
add
and
sub
and
stos
or
mov
sarl
mov
repnz
fs
sbb
aam
jmp
mov
dec
cmpsl
js
and
adc
shll
push
add
cld
mov
add
and
dec
int3
bound
or
add
imul
lock
ds
iret
pop
fcomps
ret
xlat
inc
add
pop
dec
push
cli
es
inc
out
pop
out
or
enter
mov
repnz
cmc
and
xchg
and
mov
imul
adc
mov
inc
or
and
mov
ret
icebp
mov
fbstp
jo
insl
movsl
or
push
lret
ja
jno
cmp
sub
inc
loope
mov
pop
pushf
pop
sarl
push
pop
pushf
add
mov
fidivl
inc
jl
xor
sbb
fld1
enter
sub
or
fistl
jns
loopne
ds
ss
mov
sub
pop
popa
push
sbb
stos
fiadds
or
fs
xchg
inc
out
hlt
xor
out
xchg
mov
jne
in
pusha
push
and
mov
imul
dec
out
mov
ret
or
xor
dec
add
shrl
sbb
fwait
clc
inc
add
loope
mov
jge
mov
mov
mov
pop
je
jbe
popa
ss
jmp
outsb
xchg
mov
adcb
mov
sar
pusha
test
mov
push
das
mov
cltd
inc
cmp
subl
inc
rorl
push
daa
test
sub
and
push
push
push
pop
mull
std
roll
mov
jnp
or
bswap
or
inc
sbb
xor
jne
push
push
jae
sbb
lcall
and
jne
mov
push
shrl
adc
fcmovbe
push
inc
sbb
pushf
loop
cld
sbb
insb
push
js
int3
dec
dec
jmp
subw
jb
ss
adc
or
lds
xchg
cli
icebp
mov
imul
inc
mov
mov
pop
test
outsb
test
ficompl
mov
mov
mov
xor
cmp
or
int3
lock
pop
sub
into
sbb
call
imulb
jmp
mov
mov
adc
repnz
push
adc
adc
stc
mov
gs
outsb
cmp
out
sbb
fwait
ret
clc
stos
les
xor
loop
test
popf
cmpl
je
inc
inc
xor
push
arpl
mov
sahf
aaa
lea
dec
mov
cmp
test
call
sbb
mov
pop
jo
outsb
mov
iret
mov
push
arpl
fwait
lret
scas
andnps
jb
or
sbb
out
or
adc
mov
call
push
xor
push
adc
mov
mov
sbbl
out
mov
rorl
icebp
scas
in
and
es
mov
ret
pop
scas
push
xor
out
dec
pop
fiadds
cmp
in
push
iret
lea
jecxz
or
adc
lds
loop
xor
jo
insb
jecxz
pop
shll
adc
jno
mov
add
jl
aad
inc
call
cmp
pop
mov
jno
stc
xor
dec
lahf
imul
stos
mov
hlt
sbb
mov
std
clc
lahf
mov
inc
outsl
popf
mov
clc
dec
xor
mov
xchg
in
pushf
add
int
lock
scas
lds
pop
xor
sbb
jmp
xchg
jle
scas
dec
je
mov
icebp
sbb
mov
push
sbb
rcll
xor
gs
fs
dec
lock
sbb
test
lret
test
icebp
push
adc
push
pop
cld
adc
mov
rolb
jns
or
pop
out
loope
enter
insb
mov
pop
mov
das
scas
xchg
and
pop
shl
pop
dec
or
in
mov
jg
daa
cmp
and
fcmovne
mov
dec
cmp
mov
jg
dec
sbb
pusha
lods
mov
pop
cmp
in
push
call
dec
sti
sub
ljmp
add
gs
aam
ljmp
daa
fistpll
jae
cmp
into
test
nop
jb
xlat
jae
iret
pop
scas
xor
je
mov
in
fildll
inc
mov
add
lcall
push
jmp
or
or
adc
sbb
icebp
ljmp
adc
sarb
test
ret
jmp
add
sub
fdivrs
sub
aas
dec
sbb
mov
insl
jno,pt
cli
pusha
shrb
and
jb
movsl
loope
in
mov
push
mov
inc
ja
loope
add
sarb
mov
adc
push
rorb
push
pop
lods
push
push
pop
pop
iret
mov
enter
loop
aas
sub
inc
out
mov
pop
outsl
loopne
jg
test
scas
cmp
jne
push
call
mov
arpl
movsb
jns
push
jnp
lods
cmp
adc
test
pop
or
push
iret
lock
jmp
icebp
lret
push
jne
xlat
movsl
pop
sub
cs
dec
xchg
outsb
fiaddl
pop
decl
fisttpl
in
jnp
cmp
lods
loope
fstps
outsb
gs
pop
movsl
inc
inc
add
cmp
sub
cmp
mov
js
dec
ljmp
sub
cwtl
fbstp
in
jl
sub
addb
mov
es
or
out
shrl
inc
dec
or
pushf
adc
repnz
in
std
jmp
in
movsl
addr16
xor
mov
vpshaw
mov
shrl
adc
roll
std
stos
inc
push
roll
loop
rorb
jge
jle
mov
outsb
xor
fstpl
test
fwait
bound
data16
bound
adc
adc
sub
dec
ljmp
imul
jae
dec
add
xor
inc
fnstenv
jno
mov
mov
mov
lret
inc
cmovp
call
mov
mov
mov
std
cmp
stos
lock
push
mov
js
add
imull
rcl
adc
rcll
dec
mov
mov
adc
lea
ss
mov
mov
jge
stc
xor
in
push
mov
sbb
rorb
jg
shll
jnp
sub
sbb
dec
insb
inc
inc
xor
xor
hlt
and
mov
ret
sub
xor
mov
fldl
adc
or
push
lds
add
pop
adc
push
add
and
stos
dec
sbb
push
push
push
adc
adc
cs
add
movb
andb
cs
and
dec
aas
mov
scas
mov
sbb
inc
pop
jg
inc
aam
mov
add
iret
ret
dec
adc
sbb
jmp
fsub
lods
mov
jnp
xchg
pop
cli
adc
cmp
push
xorb
or
dec
sbb
addb
jp
add
lcall
dec
aam
mov
out
mov
aas
lods
jno
shlb
in
push
xlat
mov
mov
cmp
out
loop
sbb
ror
mov
daa
push
movsl
mov
mov
jg
mov
pop
je
adc
or
dec
push
pop
cmpb
adc
sbb
mov
xchg
fwait
mov
mov
aaa
xchg
add
shrl
fiadds
xlat
mov
stos
mov
xor
mov
dec
in
fucompp
js
loope
mov
in
lcall
jle
mov
cwtl
adc
add
mov
and
adc
pop
jae
je
sbb
das
cmp
xor
pop
test
stc
mov
jge
add
popf
push
mov
cli
add
mov
sub
andl
adc
mov
fs
fsub
js
xchg
xchg
fs
mov
fldcw
push
shr
sbb
enter
aam
jp
mov
push
push
cmp
fadds
in
mov
cld
rolb
cmp
jnp
or
popa
inc
pusha
xor
push
loopne
xchg
mov
and
aaa
xchg
cmp
shrl
ljmp
jmp
and
jge
sbb
loope
push
jge
ror
pop
scas
ds
leave
push
aas
lret
addb
sbb
adc
cmc
imul
mov
mov
lock
ljmp
cli
cltd
pop
cmp
sbb
xchg
movsb
sub
or
add
sbb
or
adc
mov
test
and
push
push
mov
sub
xchg
and
pop
pop
pop
add
add
ds
cmp
jl
jmp
add
lock
cmp
mov
inc
dec
jbe
cmp
jns
sahf
insb
sbb
adc
sub
add
lods
pusha
adc
push
lods
xor
jle
sar
mov
icebp
jne
mov
nop
js
push
insl
mov
mov
repz
repnz
push
or
pop
nop
and
inc
and
sbb
sbb
mov
xchg
out
addb
lods
loope
aas
icebp
add
xor
mov
les
popa
js
in
mov
pop
idiv
cmp
dec
rorb
push
in
mov
shll
pop
adcb
mov
hlt
mov
cmp
insb
push
or
adc
pop
push
repz
lods
mov
cmp
mov
in
dec
mov
loope
mov
and
pop
loopne
pop
cmpb
xchg
imul
jge
cmp
in
jl
cmc
rcrl
shlb
test
dec
loope,pn
mov
sbb
pop
xlat
jo
jmp
lret
imul
adc
cmpsb
lods
push
rolb
push
movsb
push
ss
or
adc
fidivrl
add
scas
scas
adc
cmc
clc
and
pop
inc
sub
faddp
pusha
mov
call
jmp
lea
sub
scas
into
cmpl
in
cli
xchg
cmp
mov
sbb
dec
outsl
js
sub
data16
out
jecxz
fwait
lea
punpckhbw
mov
scas
lcall
or
or
loop
jnp
hlt
pop
mov
cmpsb
enter
dec
mov
lcall
stos
or
push
test
fwait
lds
test
rcrl
xor
jo
adc
int3
xchg
mov
mov
cli
add
stos
movsb
sub
inc
mov
pop
ret
dec
mov
xchg
add
cmpl
or
dec
in
adc
and
jno
in
pop
addw
inc
into
xchg
add
cmc
pop
aam
xchg
dec
mov
xchg
add
ret
inc
outsl
jp
jmp
xchg
cmp
or
mov
mov
adc
mov
xlat
dec
and
mov
or
or
mov
mov
cmp
cmc
pop
and
push
xchg
fildl
jbe
or
jp
popf
cmp
add
lea
add
rcrb
or
call
xor
pop
inc
add
mov
aaa
xor
xchg
out
mov
lods
loopne
xchg
mov
in
lret
dec
xchg
push
lds
cmpsl
pop
cli
and
sarl
xor
pop
cmp
push
ret
cmpl
fcomi
outsl
loope
and
and
outsb
cmpsl
in
mov
sbb
sbb
scas
sbb
xchg
rorb
jnp
imul
int
stc
in
or
dec
adc
or
bnd
das
jno
out
mov
lret
jb
stos
mov
or
cmp
ret
xor
sub
mov
mov
mov
in
lea
inc
xor
cwtl
mov
push
ret
imull
cwtl
add
pop
rcll
sub
adc
push
aaa
pop
mov
lods
xchg
and
lea
inc
clc
outsl
push
mulb
mov
notrack
pusha
adc
sbb
pop
dec
cmc
pusha
sub
push
xchg
jecxz
jle
sbb
cmpsb
or
test
adc
nop
leave
and
jo
xor
inc
jo
test
loop
repz
repz
mov
icebp
mov
mov
aaa
adc
sbb
push
pop
xor
pop
add
mov
lret
xor
and
push
or
ret
sub
mov
es
adc
loop
mov
mov
ret
jp
add
clc
je
adc
jb
pop
ljmp
ss
pop
xor
das
call
and
lahf
sub
sub
sbb
mov
insl
loop
mov
mov
mov
pop
ret
fiadds
mov
jnp
cwtl
popa
dec
adc
movsb
data16
pop
andl
mov
push
mov
ds
push
mov
lcall
aad
push
sbb
std
int
scas
and
sbb
arpl
pop
out
xchg
mov
out
cli
mov
ret
push
adcl
mov
das
scas
xchg
sbb
fdivr
clc
push
sub
lds
mov
ret
movsb
push
insl
adc
sbb
cmp
int
push
test
xchg
add
jl
scas
shll
mov
jmp
mov
sub
jp
add
js
add
mov
adc
ljmp
mov
xchg
sbb
stc
scas
push
lahf
sub
hlt
insb
icebp
dec
push
and
inc
dec
push
pushf
stos
mov
call
or
imul
sbb
inc
shrw
sbbb
inc
xor
outsb
xchg
and
data16
inc
mov
jo
lfs
add
pop
aaa
mov
iret
xchg
xchg
lock
xor
iret
fistpll
std
jo
fisttpl
cmpsb
in
rcl
sti
mov
js
imul
arpl
aas
aad
orb
js
sub
push
push
inc
sbb
ljmp
pop
ljmp
add
sahf
rorb
sbbl
jp
fsubs
jle
fistpl
das
xor
add
imul
test
pop
clc
test
push
je
xorb
mov
ljmp
test
aam
mov
push
or
js
and
mov
adc
mov
jl
jecxz
adc
jb
xchg
nop
and
rorb
popf
sbbl
push
xchg
clc
aaa
mov
and
sarl
jae
cmp
or
neg
das
aam
add
cmpsb
leave
test
in
out
push
sub
clc
in
int3
add
jb
addl
or
orb
xchg
jo
sub
push
les
loop
ficoms
mov
pop
cmp
mov
cmp
repnz
sub
mov
sti
sub
push
push
xor
dec
adc
mov
or
push
scas
inc
fnstenv
aaa
mov
nop
mov
xchg
xchg
push
hlt
shll
cmc
pop
add
xchg
add
addr16
cmp
push
loopne
inc
mov
call
inc
cli
push
paddb
aam
loop
pop
cmp
sub
fmull
lds
rcr
ret
jno
push
shrl
jp
jns
pop
dec
loopne
cmp
scas
lods
pop
sbb
jle
das
addb
xor
loope
loopne
movb
testb
mov
cmp
movsl
jl
mov
dec
jl
and
loop
ss
dec
xchg
test
add
jg
in
sahf
cmp
fsubrs
addl
add
ffreep
out
sbb
jmp
popa
mov
xlat
cmp
stos
fcoms
nop
lcall
add
xor
cmp
scas
push
addl
mov
jmp
call
cmp
mov
pop
subb
adc
or
dec
mov
testl
sbb
sti
add
dec
xor
and
loopne
and
xor
insl
mov
xchg
xorl
jmp
loopne
xchg
fwait
jae
add
mov
mov
jo
cmp
push
imul
cmpsb
popa
lods
mov
inc
mov
mov
das
das
rcr
push
lock
jge
pusha
daa
shlb
scas
insb
push
stos
cmp
rclb
ds
jp
mov
std
mov
in
dec
pop
pop
pop
push
xorb
out
js
dec
rcrl
js
test
lods
dec
mov
pop
or
in
rolb
sub
mov
sbb
loop
shlb
cmp
pop
out
shlb
mov
ds
mov
clc
vmovd
rcrl
or
inc
sbb
sbb
js
lcall
xchg
sarb
shll
mov
push
loope
adc
jbe
aad
pop
push
mov
icebp
push
sbb
mov
rcl
std
inc
and
push
aas
adc
cld
add
inc
sub
mov
push
sti
fisttps
icebp
ljmp
pop
adcb
and
mov
aam
aas
mov
xor
xchg
loope
cmpsb
pop
call
in
inc
std
mov
enter
popf
dec
clc
pop
movsb
xchg
or
mov
sbb
ficoms
push
and
dec
cmpsb
dec
pop
shll
jge
pop
subb
cmp
add
or
pop
icebp
addr16
pop
jb
pop
or
ljmp
repz
fldl
loop
jae
in
jle
leave
cmp
jl
ficomps
add
jmp
cwtl
or
bound
and
stc
es
pop
loop
lahf
movsl
jns
cmp
cmc
mov
sahf
jmp
xchg
insb
add
loop
or
es
lods
sahf
nop
aaa
js
or
loop
popf
insb
sbb
mov
mov
or
lea
mov
mov
and
in
rorb
pop
int
ret
jno
sbbb
mov
loope
cmp
inc
aam
push
sbb
jecxz
add
xchg
mov
es
loopne
xchg
sbb
stc
out
lds
mov
push
add
scas
fcmovbe
int3
jne
scas
stos
test
or
and
sub
push
in
clc
and
cmp
or
dec
jmp
dec
inc
test
enter
dec
aaa
aam
enter
adc
jmp
inc
jl
fisubrs
aad
mov
fisubs
fildl
call
lds
xor
mov
push
push
push
shr
mov
outsb
adc
cld
or
jnp
xchg
add
mov
shrb
int3
and
add
ret
scas
clc
or
inc
xchg
sahf
pop
lock
push
adc
subl
lea
fcmovb
cld
cmp
or
adc
sti
roll
mov
aad
inc
test
adc
test
pop
lds
cld
scas
cmp
jge
xor
cmc
mov
icebp
add
xor
add
test
pop
mov
ljmp
push
dec
enter
clc
dec
gs
out
pusha
push
fs
mov
and
push
mov
adc
cltd
xor
pusha
lods
lock
xchg
loop
sbb
jmp
out
mov
lock
jnp
inc
dec
int3
dec
notb
scas
mov
shll
mov
mov
fcompl
popa
insl
les
and
mov
jns
or
ficompl
pop
out
add
dec
jp
stc
repz
repnz
push
jne
fldl
subb
mov
cmp
lret
mov
sub
sahf
sbb
dec
xor
push
push
push
dec
sbb
adc
and
pop
js
imul
or
sti
dec
xchg
xlat
and
xorb
and
scas
or
mov
repz
ret
cli
cld
jo
loope
lret
pop
out
xorl
icebp
lea
repz
imul
mov
call
dec
sbb
das
inc
mov
sbb
push
inc
adc
pusha
xchg
les
jbe
adc
mov
adc
dec
xchg
push
sbb
loopne
lea
dec
imul
mov
xor
mov
hlt
ss
adc
jae
scas
dec
mov
test
or
orl
lods
push
push
hlt
test
ss
add
cli
mov
test
adc
pop
push
cltd
lods
loopne
push
cmp
mov
mov
mov
mov
sub
icebp
cmp
out
pop
mov
pop
rcrl
sahf
inc
mov
lret
push
sub
push
je
cmp
xor
push
dec
ror
cmpb
rclb
pop
push
jl
fidivs
cmp
cld
lds
loopne
hlt
inc
int3
ret
push
cmpsb
jo
iret
lea
mov
ret
nop
xor
out
mov
inc
sbb
fmulp
aad
lock
cmp
jecxz
push
pop
push
push
xchg
mov
push
pop
loop
mov
cmp
je
push
jg
fsubs
outsb
mov
xor
lock
dec
or
js
das
xchg
pusha
ret
ss
cs
sub
flds
lds
cmp
icebp
daa
mov
aaa
push
jg
aad
lds
mov
xchg
hlt
add
cmp
add
push
push
and
sub
loopne
adc
mov
dec
xchg
pop
mov
jo
sbb
lret
mov
fbstp
test
lods
ds
fildll
fsub
pusha
pushf
or
testb
xchg
mov
xchg
pop
xchg
mov
mov
into
fadds
aas
mov
into
andl
cmp
test
inc
mov
neg
mov
shll
inc
push
hlt
mov
jbe
mov
movsb
sbb
decl
xchg
ljmp
adc
and
pop
lods
notb
adc
sub
mov
sbb
push
cs
dec
pop
subb
add
in
sarb
sti
inc
cmp
lods
adc
pop
aas
push
scas
or
xchg
hlt
mov
test
sbb
ficoml
les
fs
out
sub
icebp
pop
xorb
enter
jle
or
mov
jp
mov
jno
lods
mov
cmp
daa
mov
adc
add
dec
lret
adcb
add
in
inc
push
stos
clc
test
lock
add
lahf
mov
js
fs
pop
test
push
lock
sbbb
sbbl
data16
cli
mov
sahf
xchg
cld
mov
add
mov
es
inc
fwait
adcl
jecxz
adc
scas
mov
outsb
lcall
pop
or
out
sbbl
jns
pop
enter
dec
jmp
enter
xchg
test
roll
or
jg
or
pop
mov
mov
cld
adc
add
mov
gs
outsl
or
cltd
movsl
push
jo
dec
daa
mov
jg
mov
sub
jo
mov
ds
jbe
pop
test
push
push
sub
imul
xchg
push
jecxz
loopne
cmp
loope
and
inc
rolb
ss
sub
jl
push
cmpsl
mov
outsb
loop
rolb
mov
in
mov
loope
or
push
mov
cmp
ficoms
mov
stos
add
push
add
dec
push
xor
div
cmpsb
loop
push
shrb
clc
push
pop
dec
outsb
sbb
inc
jae
mov
cmp
scas
sahf
jge
adc
fisttpll
lret
pop
mov
outsl
das
mov
leave
rolb
and
lock
push
js
xor
sub
adc
fistpl
lcall
xchg
movups
lock
sub
mov
pop
or
fldl
cmp
push
daa
pop
es
cmp
jbe
in
orb
or
push
add
cmc
test
popf
jp
jbe
aaa
xchg
add
cli
and
mov
clc
or
inc
pop
out
mov
std
mov
cmp
fs
mov
adc
loope
aam
bound
or
imul
xor
outsb
mov
ret
lock
outsb
push
mov
int3
lea
aaa
loope
je
mov
test
sub
into
int3
xor
push
das
pop
lcall
xchg
and
pop
cmp
pop
add
inc
or
icebp
int3
cmpl
clc
mov
jg
rolb
cltd
xchg
test
cmp
iret
cli
push
aam
xor
imul
iret
cmp
shll
push
push
std
in
fsubs
aam
lret
push
cld
stos
adc
jle
jno
ljmp
sub
hlt
or
fistps
lea
and
and
sub
and
loope
lods
sbb
imul
pusha
mov
loope
jo
imul
mov
push
mov
or
loope
insb
loope
in
xor
jle
push
xchg
dec
mov
les
pop
mov
adc
test
aam
adc
push
ret
data16
add
aam
jne
jne
in
ds
decl
in
and
and
daa
in
push
fisttps
in
ds
sub
xor
cli
jmp
out
mov
xchg
rclb
mov
mov
sbb
movsl
push
popa
fists
inc
mov
add
mov
and
push
and
cmp
clc
outsl
clc
mov
sub
mov
dec
rcll
daa
test
shl
push
inc
sub
mov
mov
or
shlb
mov
mov
dec
dec
popa
outsb
adc
bound
leave
fiadds
mov
faddl
insl
shl
loopne
loop
movsb
xor
je
xor
adc
orb
mov
icebp
jo
outsw
lret
pop
icebp
dec
mov
fsubr
ret
mov
fisubrl
dec
ret
add
pop
dec
jp
dec
mov
mov
mul
cli
inc
dec
js
push
jns
or
and
cli
push
and
js
pop
xchg
lock
shlb
js
pusha
adc
xchg
inc
push
sbb
in
mov
addr16
sti
outsb
add
out
jp
call
cli
add
push
sbb
out
aaa
pushf
add
add
aam
pop
sbb
scas
orl
out
inc
sarl
push
mov
mov
or
and
mov
mov
pop
lcall
cwtl
mov
loopne
cmp
push
push
mov
clc
pusha
sbb
mov
nop
adc
sbb
add
mov
push
aas
ljmp
jle
mov
cmp
fwait
movsl
jbe
xchg
and
cmc
imul
das
inc
test
mov
imul
cmc
stos
std
cs
jbe
insb
pop
push
mov
pop
loopne
cld
adc
or
xor
mov
fnsave
push
inc
dec
add
andl
cmp
jns
shufps
inc
xchg
out
push
or
lods
sub
add
fcomp
jmp
pop
lret
fdivrs
mov
stos
pop
outsl
insb
sbb
sbb
xchg
push
inc
pop
jp
or
and
popa
loope
jne
fisubs
or
out
pop
mov
std
ljmp
aas
jle
pop
jle
cwtl
or
jle
nop
sub
jle
jp
sti
pop
dec
xlat
dec
sbb
adc
stc
bound
test
push
fbld
xor
push
sub
pop
scas
add
jmp
jo
pop
inc
fistl
or
repnz
cmpsb
sub
adc
test
loop
sahf
add
jmp
loope
cmp
jl
gs
sub
addr16
cmp
jbe
rcl
jp
cmp
icebp
addl
mov
dec
cmp
mov
or
inc
jo
cmp
cmp
xchg
adc
mov
dec
cmp
movsb
testl
add
loop
or
pushf
cmp
ss
popa
out
pushl
rcrl
xchg
rcrb
fisttpl
jl
mov
adc
test
loop
pop
outsb
add
sarb
or
mov
and
cmpsl
jg
repz
xchg
ja
inc
jge
in
xor
test
xor
pusha
or
cltd
cbtw
inc
inc
ds
jecxz
adc
gs
xor
push
add
push
test
sbb
mov
loope
cmp
adc
jne
dec
jns
mov
cld
jp
jae
sbb
xor
fisttpl
popa
push
cwtl
rcrb
cmp
vaddsubps
test
scas
push
sbb
push
mov
xchg
lret
or
push
mov
mov
and
arpl
mov
stc
push
out
es
cmp
cs
outsl
sbb
loopne
imul
cmp
inc
decl
cmpsb
notl
in
js
inc
scas
cmp
xchg
inc
insl
add
outsl
in
cmp
or
xchg
xchg
jae
es
push
mov
mov
dec
push
jl
std
call
inc
inc
ficompl
fldl
mov
jle
mov
sbb
push
cmp
sub
pop
stos
xchg
loopne
testb
mov
dec
fwait
sub
loopne
clc
leave
push
repz
ja
xchg
mov
add
dec
orl
ss
xor
clc
in
fnstenv
js
aas
pusha
jecxz
repnz
pop
out
pop
jmp
push
decb
inc
cld
push
cmp
aas
inc
insb
sub
adc
cltd
jo
dec
fcom
cwtl
sub
mov
in
push
loop
rolb
cmp
pop
push
pop
or
mov
cltd
scas
sbb
mov
mov
in
xor
insl
sub
mov
cs
shlb
mov
int
mov
mov
ljmp
push
aam
or
mov
outsb
leave
shll
ret
lods
addr16
inc
mov
das
mov
sub
fnstcw
jp
adc
push
sbb
into
sbb
mov
js
push
adc
loopne
clc
aam
ja
movsb
pop
cmp
add
loope
aam
stos
push
inc
loope
or
jno
sahf
add
cmp
cmpsb
xchg
test
fnstsw
mov
add
ja
cmp
bound
xor
or
loopne
rcrl
adc
lea
mov
jp
std
push
pushf
es
add
test
sbb
out
xor
in
inc
xor
clc
xor
pop
outsl
dec
mov
sbb
pop
popa
testb
mov
xchg
add
or
adcb
in
inc
xor
insb
xor
or
pop
jnp
test
loopne
mov
mov
and
sbb
std
adc
dec
push
shll
js
outsl
mov
add
insb
popa
dec
pop
jbe
cmpsl
pusha
pop
and
jo
or
push
adc
mov
int3
xchg
xchg
add
insb
pop
adc
pop
mov
movsl
push
cmovb
push
xchg
test
das
fisttpll
mov
mov
loopne
jmp
sub
push
push
fdivl
fchs
push
test
insl
or
ret
mov
adc
int3
xor
xchg
mov
add
jecxz
imul
xor
xor
rorb
pop
repnz
push
cmp
xchg
je
jno
xor
xchg
push
test
sub
xchg
repnz
enter
call
scas
xor
and
xchg
sbb
cmp
loopne
es
sub
loopne
push
popf
jno
cld
sub
dec
popf
test
sbb
int3
push
add
xchg
mov
adc
movsb
call
shl
call
pop
repz
xchg
das
xchg
sbb
add
jmp
rcrb
adc
mov
fdiv
cmp
mov
in
push
adc
into
adc
sub
sbb
ss
cmp
add
or
jns
test
int
pop
insb
lods
in
test
cmpsb
mov
dec
scas
ljmp
xor
adc
push
add
and
rorb
push
jns
std
mov
adcb
mov
inc
cmp
stos
sbb
sbb
incb
mov
out
xor
cld
lea
xchg
add
pushf
mov
cmpsb
mulb
xor
js
pop
lock
push
or
sbb
lds
dec
cmp
nop
dec
push
sub
idivl
iret
cmc
in
fildl
jbe,pn
add
jp
out
nop
loopne
enter
inc
push
outsb
push
xchg
pop
xlat
sbb
and
ljmp
xchg
in
push
sbb
cmp
inc
cld
push
mov
sub
cltd
mov
jecxz
loopne
sub
adc
xchg
inc
rorb
push
mov
jmp
cld
bound
icebp
push
cs
ljmp
inc
mov
jb
cltd
test
add
pop
mov
sbb
jle
arpl
fbstp
jo
jbe
xchg
and
or
loope
test
pop
or
fcmovb
jb
rcrb
rcrb
mov
stos
lahf
clc
and
imul
mov
sub
jp
rcrl
sbb
test
add
aaa
or
dec
sub
adc
pusha
call
mov
loop
jp
fldenv
add
pop
inc
cli
stos
lock
int3
pop
and
lea
inc
and
jne
xchg
out
out
daa
mov
enter
jmp
js
xchg
test
push
ret
call
popf
loope
fdivp
testb
mov
push
mov
add
stc
sbb
imul
jo
mov
xchg
mov
and
rclb
sbb
cli
out
rorl
adc
dec
in
rcr
sub
push
dec
jmp
orl
sahf
out
adc
ltr
xchg
nop
mov
sub
xchg
mov
push
sub
mov
dec
lods
adc
daa
jne
rorl
xchg
mov
xchg
jl
pop
lcall
js
aad
mov
mov
add
pop
sbb
xchg
out
and
stos
sub
push
push
inc
divl
xchg
sarb
fwait
push
add
ret
xchg
popf
iret
iret
push
sahf
adc
dec
push
or
sub
pop
enter
lcall
cltd
cmpsl
sub
mov
cmc
loope
enter
xchg
mov
pushl
xchg
movsl
xchg
cmpsb
mov
xor
adcl
sahf
scas
mov
mov
out
mov
or
add
sub
mov
cmpsl
ret
cmp
add
outsb
ss
or
or
push
mov
insl
movsl
fsubs
aaa
scas
sub
test
ret
fs
push
xorl
fisttpll
lods
xor
adc
movsb
inc
jo
in
and
call
cmp
xor
sbb
pop
or
push
add
cmc
ret
lcall
imul
and
jnp
sub
int3
fwait
add
movb
iret
mov
in
push
bound
loope
pop
mov
mov
dec
loopne
push
lret
xlat
mov
xchg
cmpsl
iret
dec
test
cmp
sbb
xchg
and
orl
push
sub
pop
ljmp
and
sbb
mov
inc
nop
aaa
and
jg
ds
hlt
push
xchg
dec
arpl
je
pop
movsl
sahf
jne
int3
out
push
add
imul
jae
lods
mov
scas
lea
hlt
inc
stos
ljmp
loopne
mov
cld
insl
or
fmuls
cltd
pop
pop
aaa
sbb
mov
push
aad
lock
mov
mov
popa
xor
mov
data16
mov
fwait
cld
and
add
push
or
or
adc
lods
aas
push
hlt
cld
rcrb
call
fidivs
or
jmp
inc
mov
lcall
int3
or
or
sub
add
sub
mov
repz
jg
outsb
out
fdivp
lods
cmc
sub
jnp
xlat
fisubrs
jae
js
or
mov
shll
jge
in
dec
xchg
adc
add
mov
addl
pusha
or
vpavgb
mov
lods
pop
gs
movsb
cmp
xchg
pop
rorb
push
lods
js
pop
test
add
fildl
inc
or
pop
lcall
dec
js
mov
and
into
lret
call
add
inc
bt
imull
pop
inc
mov
xchg
movl
cmp
and
stos
dec
mov
inc
cmp
lds
and
dec
jae
or
nop
dec
add
push
jge
mov
mov
dec
pop
dec
call
cmp
dec
cmp
cs
aam
ljmp
fildl
xor
xchg
icebp
or
clc
jp
test
add
fs
fwait
test
aaa
jle
xchg
popf
adc
mov
mov
jmp
push
cli
je
pop
pop
push
lock
push
jl
test
dec
and
js
push
xchg
sbb
in
add
jno
test
test
inc
std
movsl
adc
xor
lods
das
mov
add
imul
cmpsl
and
jmp
sub
enter
mov
imul
stc
std
sub
push
or
inc
mov
pop
xorb
les
aam
mov
add
aas
out
xchg
mov
or
mov
inc
xchg
imul
dec
idivb
push
cmp
sub
test
mov
out
push
xchg
out
mov
cmp
imul
popf
mov
lds
jge
push
nop
imul
cli
push
out
out
out
aad
jno,pt
adc
scas
das
or
push
xor
mov
mov
cmp
hlt
test
push
shll
lock
jo
loop
cmp
loope,pn
adc
mov
cmp
inc
sbb
push
daa
fistpl
sub
mov
jns
and
or
scas
aam
xchg
add
cld
rolb
fldenv
and
ljmp
xor
push
clc
jmp
call
sbb
bnd
mov
push
mov
pop
nop
mov
add
fxch
jle
xorb
ljmp
lods
shrl
or
sub
sbb
cli
lods
xchg
mov
out
mov
aad
movb
adcl
scas
lods
cmp
jmp
adc
ret
aad
test
xchg
imul
xlat
mov
and
dec
jnp
ljmp
push
mov
rorl
and
shl
dec
mov
inc
subl
mov
pusha
xor
mov
imul
imul
inc
or
insl
insb
mov
and
cmp
in
sbb
test
rol
repnz
mov
mov
push
rcl
or
mov
lods
js
inc
and
or
mov
imul
ljmp
adc
lahf
jg
pusha
icebp
rorl
sub
dec
mul
or
sub
inc
push
les
je
aaa
sub
lods
shlb
push
je
push
js
mov
xchg
cmpsl
or
shl
inc
add
dec
ret
pop
sub
roll
or
movsb
xchg
fidivs
mov
lret
in
fdivrl
inc
jg
in
mov
jb
in
adcb
cmc
pop
in
and
lds
pop
pop
cmp
jo
pop
add
push
lahf
push
sahf
shlb
ds
push
adcb
repz
sbb
lds
adc
mov
into
xor
hlt
lods
cmp
fstps
pop
fsubr
mov
in
js
out
cmpsl
aas
pop
hlt
jecxz
mov
lea
xchg
and
xchg
sahf
jp
xchg
cmp
jae
pop
mov
mov
jb
inc
aaa
clc
inc
sbb
inc
mov
pusha
pop
sbb
loopne
mov
push
sub
cld
rcl
call
adc
cmc
push
add
mov
push
dec
adc
outsl
aam
jnp
aaa
sti
xor
mov
rorl
in
pop
scas
mov
push
push
push
xchg
and
and
out
or
push
lea
and
out
clc
sti
repnz
pusha
add
sahf
jp
dec
pop
pop
jns
sbb
xchg
insl
out
add
sbb
add
rcl
mov
cmp
test
jp
sbb
xor
jno
jns
push
lock
sbb
mov
movsl
xor
or
cmp
out
add
or
xchg
jo
jp
jl
push
or
pop
push
mov
fisttps
and
cltd
adc
inc
mov
jmp
into
je
mov
add
test
lods
and
aam
add
push
mov
popf
adc
or
lahf
lea
fisttpll
mov
add
std
clc
xchg
mov
cmpsl
bsr
daa
inc
xchg
inc
or
adc
fdivs
jecxz
hlt
sbb
imul
shlb
push
or
or
test
or
mov
inc
xor
cmp
rclb
push
je
fsubr
add
adc
pop
shrb
jno
lods
jmp
add
ret
inc
push
and
cmp
mov
and
mov
add
call
sub
testb
aam
pop
sbb
push
out
sarl
shrl
pushf
and
invd
jl
mov
xor
mov
sbb
add
insb
mov
test
push
popa
loope
push
and
add
mov
xchg
call
cmp
fs
mov
or
jbe
mov
subb
jnp
test
ret
mov
mov
mov
xor
adc
es
or
jbe
dec
mov
orl
aam
sahf
lret
inc
popf
jo
sub
pop
pop
je
sub
or
rcr
stc
jbe
jo
int
cmp
mov
ret
shll
push
cmp
test
sub
shll
out
rcll
cmp
mov
sbb
mov
fiaddl
pop
add
and
imul
in
aad
mov
stos
pop
push
dec
fmul
mov
iret
push
cmpsl
dec
daa
cwtl
js
cmpsb
add
jno
sbb
sbb
add
mov
adc
icebp
pop
scas
mov
lock
xchg
andb
sbb
xorb
pop
or
mov
sbb
pop
dec
clc
pop
inc
js
movsb
mov
add
push
push
fistpl
pushf
inc
sbb
xchg
fildl
test
je
outsl
push
mov
xor
push
push
test
rcll
or
and
insl
mov
enter
cmp
shrl
sbb
ljmp
clc
dec
imul
xchg
add
mov
lret
aas
adc
mov
jecxz
scas
xchg
paddd
fisttpll
and
xor
mov
fcmovnb
in
sbb
fsubrl
shrb
and
sbb
and
ss
emms
mov
mov
sub
jl
es
call
xor
jecxz
insb
dec
add
cmp
push
inc
rcll
data16
jmp
pop
test
fcompl
je
faddp
xchg
mov
push
mov
loopne
and
ds
mov
and
and
xchg
leave
dec
loop
rorb
sub
lea
lret
sbb
jae
pop
add
repz
or
jno
mov
xchg
daa
sub
push
ret
cmpsb
lcall
inc
stos
out
leave
mov
xchg
adc
mov
sbb
bound
push
push
adc
frstor
jo
imul
loopne
jg,pn
andb
inc
mov
cmp
and
inc
cltd
shr
sbb
pop
inc
jp
addr16
scas
sub
movsb
pop
ja
jle
inc
fldenv
in
jl
push
inc
mov
jnp
mov
bswap
rcll
iret
xchg
lret
cmp
or
or
stos
inc
mov
fimull
test
pop
add
js
ja
scas
xchg
xchg
lods
push
mov
je
cmp
clc
rcr
sahf
adc
movsl
dec
cmp
adc
add
sub
xchg
sbb
test
adc
outsb
mov
sub
gs
xor
xchg
aas
rcrb
xchg
sub
pop
aas
cmp
cmp
ss
subb
add
xlat
and
mov
push
push
or
loop
imul
fsub
ljmp
flds
int3
mov
push
push
insb
xchg
cmpsl
push
mov
jp
push
outsl
in
mov
setg
mov
cmpl
inc
pop
inc
jl
mov
movb
mov
test
and
ljmp
ret
add
mov
out
std
and
aaa
inc
and
lock
dec
jae
lds
scas
jb
adc
arpl
lods
xchg
cmpsl
pop
loop
cmpsb
ficoms
or
cmp
psubb
xchg
xor
aam
loope
scas
iret
fwait
sub
cmp
lods
inc
imul
or
jg
lret
or
add
push
out
sbb
stos
fcmovb
and
adc
adc
loopne
xlat
add
rcll
lret
inc
mov
or
mov
adc
repz
les
xor
adc
cli
jmp
loop
jl
stc
xchg
mov
or
pop
push
push
stos
data16
xorb
stos
push
push
push
inc
into
cli
push
hlt
stc
fdivrl
sub
call
cmp
push
aas
std
mov
fwait
iret
lds
adc
mov
sahf
enter
call
xor
xor
fsubr
pop
xchg
in
mov
mov
inc
insb
mov
icebp
inc
cmpsl
ret
jb
ljmp
ljmp
cmc
stos
or
push
xor
jbe
fcmovu
adc
inc
sbb
sbb
mov
adc
outsb
ljmp
das
ss
adc
sub
dec
xor
adc
jne
test
add
xchg
mov
iret
cmp
jmp
inc
rcr
cli
cmp
test
jo
mov
jbe
in
les
jmp
push
xchg
mov
xlat
das
sbb
jecxz
fsubs
xor
push
nop
outsb
jbe
dec
jecxz
mov
std
aaa
dec
mov
aas
or
mov
push
fdivrl
fptan
xchg
lea
nop
fs
or
js
or
inc
pop
inc
push
js
push
or
fs
inc
leave
and
cmp
push
out
jecxz
mov
or
dec
pop
imul
js
lds
lret
pusha
sti
movsb
flds
aad
fsub
icebp
push
js
and
dec
add
mov
and
mov
pop
fdivrl
add
es
test
loop
sarb
out
sbb
jo
inc
push
xchg
pop
cmp
sar
inc
push
lods
cwtl
jp
roll
shll
mov
and
or
push
mov
push
or
hlt
hlt
inc
aaa
push
clc
mov
or
mov
popf
mov
in
orl
pop
xchg
mov
and
xchg
fcmovb
add
cmpsb
pop
jbe
or
mov
and
rcr
pop
fcompp
cmp
push
ret
inc
jmp
dec
mov
fdivrl
add
fmuls
jp
cmp
repnz
addr16
dec
and
xor
pushf
sub
shrb
jg
jmp
scas
push
and
or
inc
test
aam
adc
sti
push
mov
nop
hlt
pop
inc
sub
push
push
je
mov
lds
mov
push
addl
push
xchg
mov
push
fwait
add
fwait
sarb
push
sbb
addr16
out
cmp
les
lret
xchg
sbb
xchg
sahf
nop
outsl
shlb
stc
sbb
mov
sbb
mov
fsubrp
xor
push
adc
call
imulb
inc
mov
pop
rorl
xchg
psraw
or
es
inc
mov
sub
mov
shlb
add
mov
cmp
das
insb
cmp
lock
stos
dec
dec
insb
add
and
mov
sbb
mov
xor
hlt
loopne
inc
cmp
pop
je
gs
imul
jge
outsl
inc
dec
mov
loopne
and
mov
aam
mov
lcall
pop
out
jmp
in
imul
sub
mov
pop
mov
cmpsb
lock
push
push
jb
bound
test
adc
and
notb
xor
push
lret
and
les
mov
bound
adc
inc
mov
aas
add
pop
adc
fwait
stc
out
test
sahf
and
sti
addr16
sub
aad
daa
stos
xchg
icebp
adc
mov
jle
ljmp
inc
jbe
in
dec
jmp
push
rorb
jne
mov
jmp
and
mov
pop
popa
inc
loopne
call
rol
push
test
jmp
push
xor
push
mov
and
push
mov
sub
icebp
adc
rclb
lret
rclb
in
cld
push
pop
sbb
cmpsl
pop
inc
dec
adc
mov
adc
hlt
test
ja
stos
lock
pop
aam
dec
scas
repnz
fwait
or
adc
pusha
pop
mov
psubsb
scas
push
add
insl
movsb
inc
shr
or
outsb
cmp
push
outsb
or
push
sub
daa
ret
je
call
pop
or
or
icebp
mov
mov
cs
mov
sbb
jmp
jne
and
sbb
stos
js
xor
or
adc
pop
and
cli
add
jle
lds
inc
pop
and
add
mov
lods
call
mov
loopne
rcrb
aam
jno
push
mov
or
xor
sbb
xchg
cmp
incl
das
test
xchg
mov
call
clc
inc
enter
movhps
je
push
mov
rol
insb
pushf
test
lock
imul
dec
out
test
pop
or
xor
xor
lea
dec
pop
lods
and
or
adc
sar
lods
xchg
pushf
les
stos
cmp
sub
cmp
pop
test
dec
mov
push
pop
lods
in
int3
scas
scas
mov
loope
or
inc
in
ror
add
repnz
add
cli
pop
shrl
icebp
test
shufps
adc
mov
loopne
sbb
stos
sti
sarb
pop
cmp
fucom
imulb
fwait
push
and
cld
lds
lock
fadd
fstpt
sarb
pop
je
dec
pop
inc
dec
adc
dec
flds
jnp
lret
and
jecxz
and
cmp
cld
adc
cld
sti
mov
es
inc
pop
mov
call
mov
cmp
data16
cwtl
mov
mov
aam
fisubrl
ss
lods
dec
and
fidivs
loopne
loope
inc
sahf
inc
mov
fwait
les
lods
lret
popf
or
ljmp
xor
pop
xor
or
mov
lods
mov
fdivs
outsl
fs
int3
aas
idivb
jb
loopne
jo
lret
jp
or
add
adc
adc
inc
repnz
mulb
cwtl
jae
push
loopne
ret
jmp
loop
jnp
add
das
push
sbb
pop
in
ror
dec
push
sbb
and
jb
or
cltd
mov
xchg
push
lret
jg
lcall
add
pop
cli
jbe
mov
pushf
xchg
adc
xor
mov
stos
sub
movsb
lods
mov
inc
fistps
addb
and
sub
pop
xchg
or
imul
fimuls
jge
fs
pop
data16
inc
jmp
mov
sbb
lret
add
cs
mov
mov
push
in
mov
lods
mov
insb
or
das
mov
push
repnz
push
stos
xor
jo
mov
addb
rorl
mov
cmp
mov
or
add
jns
sbb
addr16
les
xchg
arpl
dec
pop
gs
inc
pusha
push
jns
push
ret
stos
inc
cmpsb
or
mov
pushaw
mov
sub
xchg
std
loopne
pop
jl
test
in
dec
inc
sbb
sbb
aam
dec
push
sbb
pop
jae
or
ljmp
scas
lea
scas
xor
sbb
movl
popf
cwtl
sbb
jmp
xchg
xor
aas
push
pop
sbb
incl
pop
or
mov
sub
pop
bound
fiadds
subb
or
les
ret
adc
dec
in
shll
mov
mov
ljmp
gs
mov
mov
nop
adc
call
stos
cs
and
push
inc
lock
push
cmpl
stos
das
fimuls
incl
jge
mov
add
lea
mov
shlb
add
imul
inc
rcr
in
jnp
xor
movsl
stos
rclb
fs
pop
cmp
or
test
jp,pn
mulb
js
fnstenv
out
xchg
jg
lock
adc
push
or
adc
pop
lahf
and
mov
aad
mov
xchg
popf
test
hlt
adc
clc
push
jg
pop
dec
mov
add
dec
imul
bound
mov
dec
arpl
rol
dec
push
adc
mov
loopne
stc
pop
xlat
xorb
rcr
jp
mov
dec
mov
faddp
imul
ret
sarb
adc
inc
push
push
jg
sbb
insb
mov
and
mov
add
mov
aam
jnp
fwait
sbb
mov
xor
jnp
pop
leave
mov
sub
scas
and
lock
sbb
hlt
pop
xchg
test
sub
call
or
je
test
mov
lock
lock
or
incb
cli
pusha
fiaddl
push
or
mov
loopne
pop
test
dec
test
dec
mull
dec
jnp
subl
push
call
bound
aam
fistpl
cmpsb
add
xchg
adc
mov
fcoms
adcb
pop
mov
push
rcll
dec
and
test
cmp
mov
loop
sub
fs
push
mov
shlb
sbb
or
lret
cld
and
pop
fistps
fwait
imul
or
push
inc
mov
shlb
test
je
das
inc
outsl
dec
mov
xchg
lds
or
outsl
xor
or
jo
sbb
rcr
cmp
jmp
js
mov
jp
mov
and
inc
adc
data16
lea
or
loope
mov
ss
adc
nop
or
inc
mov
or
mov
push
int
cmp
idivl
xchg
xchg
call
cmpsb
cli
lds
pusha
ss
add
cmp
or
stos
inc
inc
std
repz
mov
jecxz
sbb
es
sbb
out
into
movsb
sub
in
jmp
fimuls
mov
fdivs
shl
xor
clc
cmpsl
or
rcl
jl
stos
add
inc
xchg
mov
inc
pop
and
mov
rol
sbb
clc
hlt
or
xor
cs
fnstsw
xor
inc
mov
jo
pushf
add
shll
add
call
ss
pop
inc
fdivs
add
pop
cmpb
inc
mov
cld
call
sub
lock
xchg
cwtl
cs
push
jp
fmul
xchg
shr
sub
pop
sub
or
fwait
sub
js
or
loope
call
sbb
loop
pop
push
movsb
or
fs
cmpsl
jl
xchg
call
add
mov
push
jl
cmp
pop
je
add
mov
imul
mov
jp
lock
cmpsl
mov
adc
adc
pushf
pop
inc
dec
es
stc
mov
es
lahf
pop
repnz
lahf
popa
dec
lds
mov
aam
rcrb
stos
pop
cli
ret
jo
xchg
jge
push
cmp
add
shl
mov
inc
add
pop
loopne
xchg
or
jecxz
cwtl
cmpsb
mov
jae
pop
aas
jo
loop
cmp
cmpsl
mov
es
jne
ss
rcr
into
inc
xchg
inc
fucom
add
adc
enter
or
imul
jo
xchg
cmpsb
push
mov
dec
xor
decl
xor
hlt
inc
dec
adc
lret
push
sub
add
mov
ds
repnz
bound
loopne
and
inc
lahf
sub
xor
hlt
inc
mov
sahf
movsl
add
sbb
cmp
inc
mov
int
repz
or
pop
xchg
icebp
dec
xchg
mov
inc
push
pop
clc
or
scas
mov
lds
std
ret
mov
jae
insl
outsb
mov
sbb
push
ret
xchg
jbe
adc
dec
adc
dec
aam
xor
xor
pop
dec
cmpsl
and
es
and
inc
outsl
int
sub
mov
movsb
andb
test
stc
push
xchg
fcom
in
push
test
adc
sub
mov
add
dec
icebp
inc
scas
subb
jl
inc
loopne
jmp
pop
mov
popa
inc
pop
ss
pop
pop
lock
movsb
jmp
cmp
stos
xor
hlt
stc
dec
rolb
mov
lcall
jp
das
ss
sbb
fcomps
in
ss
aam
cmc
mov
inc
and
push
and
enter
xorb
pop
add
fmulp
arpl
popa
inc
lret
push
jbe,pt
lcall
addr16
fwait
lods
push
pusha
pop
sbb
insb
in
dec
dec
or
add
movsl
filds
fildl
pop
pop
out
test
fisubrs
shlb
dec
clc
push
cmp
lds
pop
dec
and
jns
das
mov
leave
push
mov
mov
and
in
nop
in
aam
mov
xor
pop
xchg
push
movsl
inc
movsl
mov
lret
icebp
imul
fwait
addl
inc
jo
cmpsb
dec
ret
bound
push
insl
std
test
mov
outsb
loope
mov
sub
mov
mov
es
cmpb
sbb
rol
sti
fs
test
add
mov
mov
mov
popf
aad
repnz
arpl
shlb
xor
dec
call
xchg
sahf
cltd
je
addb
dec
out
lds
in
testb
cltd
adc
stc
loop
inc
cs
or
xchg
cmp
cmp
in
cmc
mov
and
adc
xchg
fnstcw
lret
sbb
test
or
mov
mov
dec
xchg
pop
xchg
jnp
inc
addr16
nop
add
or
stos
lret
movsl
xchg
scas
sahf
sub
outsl
pop
dec
lcall
fsubrs
adc
sti
fs
push
xchg
sbb
iret
sbb
rolb
mov
push
sub
lret
jmp
pop
rorb
shrb
ss
repz
dec
mov
cld
jmp
push
and
inc
in
xchg
adc
cwtl
push
test
daa
testb
sub
inc
cld
aam
mov
mov
mov
cmp
out
jmp
loop
lock
add
fwait
or
mov
lret
dec
or
in
lret
std
or
cmpsb
lock
mov
mov
test
dec
dec
xchg
lods
adc
pop
imul
and
lea
push
pop
mov
or
pusha
ss
movsl
sbb
add
mov
push
mov
sub
xor
mov
sub
jnp
xchg
inc
insl
test
pushf
mov
ret
and
mov
idiv
or
cwtl
sub
dec
adc
inc
adc
mov
data16
loope
or
lret
add
pop
xor
test
push
clc
xor
mov
mov
mov
loopne
vaddsubpd
cmpsl
jne
or
cmp
push
ja
mov
inc
fsubs
stos
mov
orl
xor
ret
ret
sbb
push
add
scas
pop
mov
daa
or
and
add
jge
insb
in
loope
adc
pop
jns
inc
ds
and
sahf
dec
mov
xchg
rorb
inc
rorb
jae
daa
mov
imul
nop
push
xchg
sarl
shll
jle
or
xchg
or
popf
sub
pop
ja
mov
mov
adc
adc
cmp
and
adcl
sub
pop
pusha
cli
rolb
adc
loop
into
test
or
inc
adc
mov
add
sub
add
dec
pop
xor
addb
sub
lds
fildl
xchg
jne
inc
adc
stc
loop
sti
std
jns
pop
loope
pusha
adcl
xchg
shrb
mov
add
mov
jno
lea
lea
data16
pusha
testb
dec
sbb
in
cld
jno
and
daa
movsl
add
rcrb
or
dec
cmc
mov
loope
xchg
mov
cltd
or
push
sub
add
inc
cmp
psubusb
cltd
lcall
fnstcw
popl
int
dec
sub
stos
call
push
jne
xchg
sbb
push
loope
pop
mov
sbb
cli
push
scas
scas
je
movb
dec
mov
aas
jno
in
ret
popa
xor
pusha
add
lret
dec
setns
xor
mov
call
adc
and
scas
jns
jnp
call
jmp
shlb
enter
setbe
mov
je
aas
stos
dec
sub
fcmovne
loope
add
hlt
xor
jns
imul
cs
pop
cli
cmp
adc
jg
mov
or
mov
cmp
stos
pop
add
mov
add
and
cs
adc
push
jp
sbb
cmpsl
test
popa
out
xchg
add
out
das
lods
nop
add
jo
fwait
cmp
loop
xor
xchg
in
inc
mov
dec
div
and
inc
decb
xor
movsb
add
cmp
sbb
dec
clc
js
inc
sbb
dec
xchg
mov
loopne
mov
in
jno
dec
pop
int3
jmp
push
push
pop
enter
xlat
lds
fdivs
xchg
imul
mov
scas
mov
add
negb
and
aad
es
mov
mov
shrb
pop
xchg
xor
push
or
xor
scas
std
int
inc
outsl
rcr
mov
ja
cmpsb
mov
xor
out
cmc
jne
adc
or
jl
cmpsl
adc
pop
pop
mov
cld
mov
add
xor
sub
inc
out
jmp
clc
mov
mov
stos
pop
daa
or
testl
adc
add
adcl
nop
adc
xor
and
lcall
cmp
mov
and
xchg
xchg
jno
push
sbb
scas
call
jns
inc
inc
cmpsl
and
xlat
and
inc
jbe
pop
or
and
push
cmp
dec
dec
lret
xor
sbb
daa
lods
sbb
lock
or
bound
aam
mov
jmp
sub
outsl
inc
pop
adc
repnz
mov
or
mov
cmp
mov
jns
roll
pop
jecxz
call
mov
cmpsl
mov
pop
fwait
sbb
dec
jg
pop
cli
or
aad
call
cwtl
cmpsb
sub
sbb
sbb
inc
dec
js
lods
jns
cmpsl
mov
sarb
push
pop
push
mov
push
dec
lcall
mov
in
popf
push
cli
jmp
sub
xchg
pusha
fcoms
test
fcmovnu
sbb
and
pop
sahf
popl
sub
insl
inc
or
outsb
insb
out
inc
inc
jne
shlb
sbb
ret
insl
pushf
dec
sub
movsl
loop
jle
icebp
sbb
scas
lock
repnz
imul
sub
push
loop
mov
mov
shr
fwait
test
into
cmc
std
pop
or
xchg
xor
sub
nop
mov
xorb
fwait
hlt
pop
loopne
lds
int3
mov
rcrb
loope
adc
xorb
pop
mov
daa
inc
mov
es
dec
xlat
repz
or
inc
pop
jo
mov
push
push
mov
es
or
cmp
and
pop
add
dec
xor
sub
cmc
xchg
scas
loope
dec
ret
cld
frstor
mov
xlat
pop
dec
inc
dec
push
fcompl
mov
push
fsubl
jbe,pt
rclb
ljmp
add
xor
stos
inc
pop
dec
xchg
stc
cmp
pop
xor
mov
jecxz
stos
pusha
cld
dec
or
jne
clc
pop
mov
orb
and
mov
jmp
rolb
sub
dec
cli
xchg
insb
or
sbb
repz
daa
hlt
lock
pushf
push
dec
dec
pop
sbb
stos
inc
aas
aad
mov
inc
sahf
rclb
aaa
xchg
pop
loop
sbb
jl
jl
and
fcmovnu
mov
ret
add
ret
js
jmp
ss
mov
push
pop
cld
nop
add
or
pop
mov
notb
les
cmpsl
andl
push
adc
in
mov
push
add
pop
dec
or
xchg
loopne
add
pop
pop
push
adcl
outsb
mov
mov
lds
ljmp
imul
add
add
xor
ja
jmp
pop
mov
in
sub
fs
xchg
adc
lea
push
loope
faddp
add
xor
xchg
decl
stos
cld
fwait
popf
cli
leave
iret
push
ss
inc
dec
cmp
andl
add
ret
pop
cmp
cmc
xorb
jo
sub
dec
lret
xchg
sbb
inc
je
cmc
add
sub
gs
push
inc
pop
push
inc
cmp
test
fnstcw
adc
cmp
xchg
out
push
ja
test
inc
pushf
inc
inc
div
cmp
movsl
mov
mov
sub
sbb
and
add
and
mov
jbe
pop
insl
ret
xchg
xchg
in
mov
jecxz
mov
add
jb
add
in
jbe
in
add
leave
cwtl
dec
mov
test
xchg
inc
outsl
xor
les
fstps
adc
aaa
movsl
jg
ret
xchg
clc
xchg
mov
add
cmpb
and
lret
pushf
rol
jne
fs
pop
out
and
mov
js
jns
scas
cmp
mov
jg
push
pop
fstpt
clc
sarb
outsb
mov
or
popa
dec
imul
pop
mov
sbb
loop
sarl
shlb
sub
leave
call
shlb
or
mov
ds
mov
or
inc
in
je
add
in
orb
mov
es
lea
adc
xchg
lea
hlt
push
xchg
leave
ret
aas
ret
add
sbb
mov
je
sbb
adc
pop
rclb
cmp
sahf
and
inc
add
push
or
fucomi
je
orl
pop
pop
notl
sbb
pop
jle
cli
repnz
or
push
xor
pop
pop
loop
push
mov
mov
pop
jle
and
addb
sub
pop
and
add
stc
dec
inc
sub
push
push
nop
sub
mov
pop
pushf
cmpsb
notb
je
jb
or
sub
jo
add
fdivrs
das
and
sbb
incl
shlb
mov
rcrb
hlt
mov
decl
das
pop
dec
popa
pusha
inc
into
lods
out
pop
loope
mov
push
std
in
mov
push
je
adc
fidivl
sahf
in
xchg
inc
mov
iret
push
mov
inc
inc
subl
adc
mov
add
jl
out
sti
and
les
int3
enter
roll
insb
es
rclb
rcrl
stos
pop
xchg
inc
or
pop
shll
dec
aas
ss
cli
and
stc
movsl
es
mov
mov
out
xlat
dec
mov
bound
das
es
aaa
dec
int
adc
adc
dec
sbb
cmp
xor
scas
je
test
test
notb
insb
push
dec
sbb
mov
cmp
jo
pop
mov
in
xor
jne
mov
icebp
jmp
int
and
fsubrs
fidivl
mov
testb
push
pop
loopne
mov
rcrl
push
test
gs
push
es
outsb
ret
inc
daa
sbb
lcall
mov
mov
mov
jns
icebp
pop
test
popa
movsl
or
pop
cmpsb
cmp
out
push
pmulhuw
imul
imul
rorl
xchg
pop
xorb
mov
sub
std
add
les
push
jge
pop
pop
dec
push
dec
fistps
inc
hlt
lock
sub
xor
sbb
popf
mov
loop
adc
das
sub
adc
mov
jmp
addr16
jns
sub
mov
jl
sub
sub
bound
xchg
and
fstpt
movsl
pop
fldenv
movsb
pop
xor
mov
out
adc
cs
push
fcomps
cmpl
mov
pop
in
mov
xor
adc
xor
loop
push
rorb
xchg
mov
or
cwtl
cmp
lea
in
cmpsl
fiaddl
fstpl
mov
and
pop
push
ret
dec
and
loopne
rclb
rcrl
add
insb
mov
inc
mov
aad
aaa
rcrl
pop
jnp
sub
lcall
addb
sbb
imul
xchg
loop
mov
dec
nop
sbb
cmp
imul
mov
lret
mov
je
mov
sub
loope
adc
loope
inc
sbb
popa
dec
outsb
clc
clc
aad
jnp
sbb
je
cli
push
mov
je
and
pop
lret
sub
add
les
jl
or
push
push
cmc
test
inc
sbb
cmpb
addl
fisubrl
loop
imulb
dec
shl
xchg
xchg
xchg
fiadds
das
js
dec
loopne
dec
gs
fmuls
fimull
std
lcall
popl
mov
out
test
xlat
jge
int
xchg
and
inc
fiaddl
pop
loopne
ljmp
std
push
adc
ljmp
xbegin
mov
daa
jbe
std
je
jae
push
ja
dec
dec
fdivs
mov
ret
xor
call
cli
rol
or
inc
fistps
or
test
xor
xchg
ret
dec
mov
push
sbb
inc
inc
outsb
insb
call
out
call
pop
pop
xor
adc
inc
bound
inc
cmp
cmc
push
lea
call
adc
int
sahf
pop
jmp
jae
cli
scas
js
inc
jns
adc
clc
ret
cmpb
pop
cmpsl
mov
dec
mov
in
fldt
insl
lods
mov
js
mov
inc
enter
sbb
xchg
popa
fs
shlb
popa
add
pusha
notl
pop
mov
nop
lods
js
xchg
sbb
dec
inc
sahf
fldl
jecxz
mov
push
mov
out
insl
jecxz
scas
loop
inc
loop
insb
adc
mov
rcrl
push
pop
aad
mov
adc
and
cli
loop
adcb
xlat
jb
aam
pop
lods
xchg
push
scas
or
xor
push
sbb
mov
je
fwait
bound
or
dec
movsl
cwtl
add
xor
xchg
mov
push
xlat
roll
sub
daa
mov
xor
movsl
jmp
in
jg
cli
or
push
push
pusha
clc
xchg
mov
xor
mov
sbbb
lret
lcall
push
xchg
sarb
mov
sub
cmpsl
jo
and
add
jno
notb
mov
mov
and
xor
push
lahf
mov
pop
ret
test
fdivs
cwtl
jle
mov
pusha
sub
out
mov
stos
xchg
in
pop
sbb
sbb
mov
scas
stos
adc
aas
jo
stos
jne
push
cld
mov
lea
shlb
jmp
rol
push
ficomps
or
clc
arpl
rorb
int3
pushf
sub
rcrl
fwait
rolb
and
in
sbb
or
xor
add
out
cmpsl
cmpsl
and
cmp
mov
dec
mov
rcrb
and
xor
mov
ja
fidivrl
fbstp
inc
pop
push
test
clc
mov
cmpsb
xor
mov
xlat
add
and
ja
push
and
xor
hlt
add
mov
cs
leave
cmp
jbe
icebp
andl
call
jmp
movsb
daa
jge
dec
rcrl
arpl
xchg
push
lock
test
cmc
js
sbb
lods
call
push
push
jno
mov
nop
sub
sahf
je
rcl
add
imul
loope
jbe
lods
scas
mov
ljmp
add
into
mov
sbb
movsl
test
add
pop
add
shl
sbb
push
or
cmpsb
add
sbb
add
test
or
das
fisubrs
xchg
lea
mov
dec
mov
shlb
aas
ljmp
jl
addb
scas
ret
dec
pop
mov
mov
pop
imul
jnp
loopne
clc
test
aam
test
push
lcall
push
shll
and
or
cmc
rcr
sbb
roll
ja
sbb
jecxz
mov
clc
fistpl
cmp
mull
pop
pop
dec
addr16
shll
mov
pop
clc
jnp
pop
scas
and
jbe
movsl
xlat
xor
xorb
in
mov
into
mov
push
mov
pusha
outsl
adc
cmp
xlat
lds
inc
bound
mov
cld
stc
lahf
shrb
mov
sahf
stos
add
icebp
and
stc
incb
sti
mov
push
xchg
ficoms
in
cmpb
enter
dec
leave
gs
mov
or
int
mov
movsl
or
call
dec
xor
inc
cmpsb
add
add
aam
push
fcomip
or
adc
lock
movsb
adc
xchg
aas
dec
sbbl
popf
clc
scas
nop
cmp
sahf
push
imul
imul
mov
adc
add
iret
push
mov
insb
loopne
into
je
mov
bound
mov
pushf
clc
dec
cmp
and
jp
lods
add
jmp
lahf
and
or
incl
inc
push
pop
aas
or
inc
cmp
outsl
stos
sub
popa
add
push
add
sar
and
movsl
mov
mov
xlat
xchg
js
adc
stc
xor
cmp
lock
pop
add
push
push
and
sub
jg
test
les
enter
test
adc
adc
fidivs
adc
cmp
jnp
mov
mov
sbb
stos
imul
in
pop
add
and
fnstenv
test
iret
xor
mov
sub
adc
fsubr
mov
nop
icebp
jnp
cmp
pop
cltd
pop
loopne
orl
or
icebp
popa
jle
inc
ret
pop
mov
stos
test
andl
mov
and
xor
cmpsb
sub
sarb
clc
dec
xchg
xor
sbb
push
sbb
std
mov
push
push
xor
lods
sbb
xor
fucomi
sbb
test
mov
mov
mov
test
int
jle
inc
mov
outsb
popf
pop
or
movsl
fimuls
dec
pop
hlt
andb
cmp
dec
fsubr
sub
mov
xchg
dec
xor
ffreep
int
stos
lds
popa
or
pop
stos
movsb
movl
data16
jp
jb
inc
push
mov
sub
add
pop
mov
sbbl
je
adc
mov
jae
ja
fidivrs
shlb
lods
jle
out
dec
test
sbb
lgdtl
xchg
mov
test
mov
les
test
repnz
cmp
xchg
pop
push
jge
jle
pusha
adc
xchg
mov
rorb
mov
bound
pop
stos
cltd
loop
sahf
and
mov
and
fwait
call
cmp
js
jb
rep
push
mov
dec
lods
dec
sbb
dec
shl
push
mov
or
jbe
pop
js
and
xchg
into
je
mov
shrl
cmp
and
iret
clc
es
push
push
pop
mov
cmp
in
adc
pop
arpl
mov
cmp
cli
clc
clc
lret
fisttps
cwtl
filds
stos
fmul
les
mov
sbb
pop
cld
push
sbb
add
cmp
mov
xor
sahf
jl
cmp
into
ds
xchg
mov
sub
mov
or
mov
xlat
idivb
inc
les
fmul
mov
add
push
and
mov
aam
pop
xlat
push
movsl
adc
or
sbb
enter
fcoml
ss
and
mov
test
lock
xor
xchg
mov
dec
pop
mov
adc
imul
inc
insl
leave
push
push
test
lock
js
and
xor
mov
push
or
rclb
cmp
insl
pop
dec
push
pop
mov
out
clc
inc
jecxz,pt
clc
loop
or
ret
mov
test
inc
lret
push
mov
sub
or
ljmp
jmp
int3
out
imul
rcll
sub
in
bound
clc
lds
jbe
fisttpll
dec
iret
adc
les
or
loop
outsl
push
ss
or
jmp
negl
ss
push
mov
or
enter
sub
nop
ljmp
outsl
ljmp
ja
ljmp
adc
push
sub
push
call
rcr
and
cld
inc
cmp
jb
popf
mov
or
ljmp
jmp
daa
outsb
sbb
xchg
xchg
dec
fmulp
cmc
lcall
repz
or
outsb
mov
xor
sbb
test
bnd
add
aad
shll
jo
lcall
call
outsb
call
xchg
test
xchg
int3
cwtl
jno
lds
jecxz
sub
sbb
mov
das
aad
dec
sbb
imul
and
adc
xor
aad
leave
mov
adc
orl
jae
xchg
cmp
jns
push
fmuls
movsb
clc
jne
inc
xchg
aas
icebp
and
mul
mov
or
pop
paddsw
pusha
imul
loopne
jle
push
jmp
push
or
sub
sub
mov
or
lret
xchg
jge
outsl
xchg
insb
scas
sub
push
js
cmpsl
pop
movsb
lock
aaa
add
lret
xor
in
iret
push
jmp
inc
xor
stos
add
jmp
test
adc
mov
jno
push
and
sbb
insb
inc
dec
mov
push
test
jg
popa
pop
adc
loopne
xor
xchg
dec
out
mov
pop
add
ret
pop
mov
loopne
add
out
out
test
sub
or
mov
dec
insl
lock
push
add
mov
lea
lods
mov
cmpsb
mov
jo
push
adcb
sbb
subb
mov
fildl
outsb
xchg
pop
ss
loopne
jl
or
sub
ljmp
mov
xchg
shrb
sbb
jle
adc
lods
sub
movsb
mov
aaa
mov
into
shl
aaa
std
mov
sarb
jbe
pop
loope
mov
hlt
pop
test
push
sub
adc
sti
icebp
add
jp
pop
inc
adc
jno
les
fs
inc
mov
xor
mov
push
jle
movsl
add
mov
test
dec
cmp
and
dec
dec
pop
decb
in
mov
out
mov
cmp
jg
shl
inc
stos
sbb
sub
je
addb
sbb
ud0
or
and
stos
call
stos
sbb
out
data16
pop
clc
mov
mov
cmpsb
inc
or
mov
jo
mov
es
ret
adc
mov
pop
mov
clc
enter
add
xchg
sarb
dec
popa
or
push
jl
mov
outsl
dec
jno
ret
jp
sbb
jecxz
sbb
cmp
xchg
push
push
or
les
add
xchg
in
aam
xchg
mov
lods
out
jbe
cmp
jo
shlb
dec
sarb
std
pop
loopne
inc
or
push
rcrl
pop
js
test
adc
test
loop
mov
push
and
mov
stc
mov
mov
xor
push
mov
pop
cld
xchg
dec
mov
push
call
icebp
js
mov
sbb
cmp
xorl
lret
or
cvtps2pi
test
jmp
test
and
std
pop
fists
outsb
out
inc
insb
jl
push
cmp
into
jae
push
inc
fidivrl
jmp
pop
and
ja,pt
rcl
mov
fstpl
sahf
fistl
cmpl
add
xchg
jmp
cmp
xchg
mov
das
push
fldcw
rcrb
inc
xor
mov
jecxz
jp
test
add
les
pop
lcall
mov
test
loop
mov
pop
mov
insl
sub
into
jmp
mov
pop
andb
ja
jge
cmp
movsb
dec
je
rclb
cmpsb
movsl
pop
dec
scas
mov
test
shlb
dec
pop
push
std
mov
fiadds
mov
es
sbb
pop
pop
or
sbb
pop
and
adc
mov
enter
xchg
lock
inc
jl
testb
test
inc
loop
cmc
testb
push
xor
lar
in
push
cmp
scas
ret
test
inc
int3
add
rcrb
xchg
add
icebp
sub
imul
sbb
fidivrl
add
test
add
test
insb
call
shll
inc
lds
add
rcrb
outsl
pop
pushf
xor
hlt
call
jp
js
enter
fdiv
mov
lret
or
and
pop
jle
lret
sti
ja
insl
cmp
sbb
xchg
das
or
nop
fidivrl
pop
push
push
ret
test
push
inc
pop
js
push
popa
aas
xchg
add
ret
mov
fldenv
jle
xchg
dec
sti
aas
nop
test
pop
arpl
mov
add
jecxz
pusha
popa
nop
in
pop
shrb
test
ss
test
icebp
in
sub
xor
in
loop
insb
cwtl
mov
pop
test
mov
stos
and
cmpsl
or
out
movsl
out
jle
mov
xchg
sbb
mov
sbb
fistpl
xchg
dec
enter
and
aam
mov
les
inc
fmuls
mov
or
adc
mov
jne
add
fs
xchg
andb
jle
mov
sub
movsl
out
les
sbb
dec
xor
out
pop
loop
or
test
rorl
cs
stos
mov
mov
decb
sar
icebp
add
dec
sub
fildll
sbb
popa
cmp
inc
adc
aas
orl
mov
pusha
icebp
inc
add
ds
mov
orb
push
fisttps
sbb
scas
data16
jge
inc
add
stos
jnp
test
sbb
iret
addr16
jno
ja
loopne
mov
jl
sbb
pop
cld
mov
jg
mov
testb
or
push
cli
and
jl
and
inc
push
xor
mov
aaa
pop
push
mov
or
mov
jno
aad
mov
xor
mov
mov
in
aad
imul
test
cmp
cmpsb
xlat
push
cwtl
dec
ss
xor
outsb
cmp
push
xchg
scas
aam
push
or
in
xchg
add
movsb
xor
xor
sbb
and
stos
sub
mov
inc
fisttps
dec
mov
push
xchg
ret
jp
repz
cmp
push
mov
push
ljmp
add
pop
loopne
sub
sub
or
add
and
in
mov
push
mov
push
in
dec
xor
fdivr
clc
pop
in
pop
add
orb
cmp
jp
fs
int
adc
ljmp
push
mov
into
inc
mov
jp
mov
mov
dec
push
rcrb
push
cmpsl
cmp
xchg
es
insl
mov
mov
outsb
shlb
inc
mov
fs
fwait
xchg
inc
dec
lcall
call
lods
jl
arpl
in
pop
mov
addb
or
lock
lods
xor
cmp
je
pop
and
dec
jl
stc
inc
out
jle
mov
and
leave
or
inc
imul
into
xchg
mov
fwait
bound
inc
push
in
adc
xlat
inc
push
sub
mov
sbb
mov
ret
push
clc
push
cmpsb
mov
cs
and
mov
cs
movsl
gs
dec
imulb
out
lock
lods
in
xchg
adc
je
shlb
ds
int3
fdivr
add
adcl
stos
fistl
jo
bound
or
stos
dec
test
cmp
inc
mov
mov
cmp
sbb
jb
xor
out
subb
mov
lcall
cmp
sbb
inc
push
and
xchg
call
cmpsb
call
andb
inc
mov
sbb
das
or
sarb
arpl
sub
pop
mov
outsb
adc
fs
decl
hlt
ret
fdivs
faddl
jno
jne
std
mov
add
cmpsb
dec
add
or
scas
popf
cmp
inc
cmp
clc
pop
and
sbb
js
cs
mov
js
scas
test
mov
mov
aaa
lock
sbb
loope
mov
ds
int3
add
mov
insb
lcall
rorl
test
or
outsb
or
push
pop
stos
xchg
std
lods
shrl
mov
jg
lret
mov
push
out
les
fcomps
push
movsb
jb
add
lret
sahf
sub
and
mov
pusha
stos
push
xchg
and
pop
test
add
sbb
add
mov
std
dec
pop
pushf
push
inc
fsub
addb
bound
sub
push
xor
or
push
mov
popl
pop
aam
pop
loop
inc
dec
sub
xor
icebp
dec
mov
scas
insb
inc
leave
nop
adc
xchg
sbb
inc
stos
or
insl
clc
bound
jbe
sbb
jb
out
cmp
shlb
std
int
das
push
add
xchg
jle
imul
jle
popf
enter
mov
decb
jg
pop
je
js
imul
inc
mov
xchg
sub
xor
jb
jle
popa
pop
mov
scas
mov
mov
pushf
or
pop
les
cmp
aaa
jmp
sub
push
ficoms
fwait
mov
or
xor
test
pusha
in
jbe
dec
out
daa
incl
mov
mov
add
mov
aaa
std
das
push
mov
fcom
cltd
push
mov
pop
insb
mov
xchg
sub
jb
add
loope
sbb
mov
fidivl
dec
dec
insb
inc
dec
dec
mov
insl
sarl
mov
out
scas
fidivrs
add
cmovge
add
test
mov
jb
orb
call
out
inc
inc
andl
push
mov
lcall
stos
in
or
jge
lahf
out
adc
jne
mov
push
dec
aaa
adc
jno
add
inc
sti
add
lock
add
add
ret
push
inc
shll
xchg
loope
js
push
cmp
minps
mov
or
push
xchg
jo
cli
pop
orl
mov
dec
out
cmp
lcall
call
push
loop
pusha
push
xor
cmpsb
dec
dec
ja
gs
xchg
loopne
sub
xchg
add
scas
fadds
sarb
or
add
ds
rclb
loope
sub
enter
xor
fcoms
add
add
and
nop
dec
mov
fdivrl
add
adc
lret
or
outsb
add
push
xor
shll
xchg
sahf
mov
fdivp
mov
xor
scas
div
lds
cmp
xor
xlat
cmpb
add
jae
mov
ret
icebp
daa
mov
sbb
outsb
dec
or
les
mov
sub
add
movsl
adc
movntps
cmp
mov
bound
xchg
add
stos
cmp
ds
aas
and
dec
dec
lods
ja
mov
xor
mov
push
ret
mov
imul
dec
cmp
popf
jp
xor
loopne
data16
add
jae
jno
mov
add
or
mov
movsb
leave
cmpb
ss
cmc
push
repnz
pop
in
xchg
adc
push
sbb
xchg
shrb
pop
push
dec
addr16
loopne
addr16
rcr
xlat
decl
inc
xchg
fwait
out
dec
imul
add
mov
jmp
mov
jno
xor
cltd
lods
mov
lahf
adc
jb
inc
loop
clc
adc
test
int3
pop
push
dec
jecxz
lcall
adc
nop
rcrb
pop
addb
jae
xchg
loopne
xlat
out
or
pop
jne
fs
xor
out
jb
into
ret
xchg
dec
or
xor
xor
ret
push
loopne
add
sbb
dec
fldl
push
mov
lret
jl
pause
js
int
nop
cli
aam
fistpll
bound
add
pop
adc
or
inc
test
into
sbb
mov
inc
mov
call
movb
shll
in
inc
movsl
or
sbb
mov
sub
push
mov
xor
cwtl
jae
ficomps
push
decb
xchg
fimuls
lret
mov
xchg
clc
jo
lcall
mov
out
lock
loope
popa
test
iret
sbb
lea
shrl
aas
dec
lods
dec
loopne
cmp
mov
adc
mov
movsb
inc
ret
andl
cmp
push
fiadds
xor
shl
sub
and
push
push
outsb
and
add
jnp
push
mov
push
adc
push
loope
clc
push
xchg
push
test
ds
test
adc
rcrl
add
adc
cltd
cmp
popf
aas
mov
pop
xchg
bound
ret
popa
sbb
shrb
inc
cmp
fistl
mov
or
lods
lods
and
cli
mov
stc
dec
js
out
and
clc
fists
and
lods
xlat
loop
mov
das
mov
cwtl
adc
lock
scas
ds
add
add
shlb
push
adc
nop
pop
push
je
mov
pop
inc
jl
xchg
and
in
or
leave
inc
jecxz
lds
mov
xlat
leave
cmp
xchg
das
pop
in
imul
push
out
nop
je
inc
sbb
roll
push
mov
xor
sbb
adc
push
sub
push
mov
mov
push
roll
dec
push
dec
outsl
jo
push
xor
in
lods
jp
aam
cwtl
sbb
sub
lods
sub
fs
mov
mov
xchg
rclb
les
xchg
or
mov
push
pop
lods
sbbl
imul
dec
outsb
aam
rol
or
mov
cli
fwait
subl
data16
aam
pop
xchg
add
fs
add
inc
shr
xor
jg
pop
jp
aam
insl
orb
pushf
mov
sub
inc
rolb
icebp
out
push
mov
xchg
cmp
repz
mov
loopne
sub
test
gs
loopne
or
cmp
loopne
icebp
shlb
cmp
push
push
enter
dec
pop
movsb
mov
iret
mov
cmp
subb
add
jae
xchg
int3
adc
and
sub
inc
mov
dec
subl
xchg
ds
insl
mov
adc
es
stc
orl
sbb
stos
and
roll
and
ret
pop
mov
xchg
push
loopne
fmuls
es
mov
and
inc
sti
addr16
mov
or
fcomip
jle
outsb
mov
push
mov
xchg
jp
enter
leave
lods
rclb
enter
sbb
push
rolb
dec
stos
mov
sbb
lds
sbb
je
pop
cli
shrl
push
or
test
pop
arpl
lret
insl
mov
movsl
mov
xlat
mov
das
mov
dec
mov
xchg
arpl
pop
notl
xor
std
lahf
jecxz
add
jp
add
mov
sbb
test
data16
psllq
or
add
inc
push
jg
mov
scas
shrl
jns
cmp
adc
or
cmpb
repnz
leave
mov
add
xchg
mov
jmp
sahf
push
ljmp
lock
cmp
dec
call
xchg
cmp
rorb
cmp
mov
mov
sti
rolb
icebp
imul
push
sbb
addr16
mov
shrb
and
dec
dec
loopne
xor
xchg
pop
cs
mov
ficoml
cmp
pushl
test
outsb
aaa
inc
mov
push
adc
mov
push
pop
mov
movsl
mov
sbb
imul
xorb
testl
push
cmp
aas
int
cmpsl
loope
sbb
test
mov
add
cmp
iret
mov
jno
pop
xor
clc
inc
sub
and
orb
test
movsl
add
fisubrl
push
sbb
adc
xchg
mov
dec
or
sbb
or
call
loope
and
jae
dec
push
addr16
icebp
adc
cmpl
sbb
scas
gs
imul
or
pop
std
cmp
pop
or
leave
rcll
push
and
inc
sbb
sbb
imul
xor
sar
pop
scas
adc
sbb
mov
mov
jecxz
pop
les
lods
mov
push
ss
pop
movsb
loop
mov
cltd
cmp
jl
iret
into
cmp
xchg
sti
ror
pop
js
insb
mov
fldenv
insb
inc
push
lahf
jns
pop
push
sbb
mov
cwtl
imul
cmpsb
popa
das
loope
imul
or
inc
test
mov
das
lea
les
data16
jns
push
mov
mov
int
clc
hlt
or
inc
rcll
imul
push
aas
clc
push
push
xchg
mov
xchg
inc
hlt
call
xor
ficompl
pop
iret
nop
lea
ret
scas
jne
mov
cwtl
dec
call
mov
inc
movsl
jecxz
mov
jl
mov
rorb
icebp
sbb
xorl
push
popf
xor
cmp
mov
imul
add
sbb
push
outsl
jae
pop
movl
xchg
add
jecxz
inc
inc
fwait
rolb
fdivrs
pop
test
scas
or
cld
sub
cmpsb
and
inc
cmp
dec
push
jo
fsubs
rcrl
mov
jg
xchg
inc
pop
lea
xchg
data16
sub
cld
sub
clc
mov
push
push
push
ss
imul
loop
fidivl
mov
test
sub
xchg
inc
jnp
add
rcl
mov
cltd
shr
lods
aas
sti
cmpsb
ret
xchg
jmp
adc
je
inc
sbb
pop
adc
mov
hlt
aam
cmp
rcrl
or
lcallw
or
inc
cmp
jecxz
insb
xchg
ljmp
inc
push
scas
sbb
jp
pop
sar
fwait
jle
cmp
or
mov
lret
jp
vprotw
cmpsb
sahf
mov
xchg
rorl
xlat
fwait
and
push
loop
cmp
jmp
shl
out
push
loope
inc
add
popa
addb
or
aad
xchg
or
xchg
outsb
push
aas
jl
dec
push
and
outsb
lea
pop
mov
xorl
insb
xor
pop
jle
mov
jp
or
je
mov
xchg
or
stc
aad
iret
xchg
fidivl
add
adc
daa
stc
xchg
loope
jmp
and
sub
lea
inc
fwait
xchg
adc
hlt
addr16
rclb
add
dec
inc
and
ficomps
popa
shr
mov
jmp
and
scas
pop
loope
sbb
movsl
or
adc
sbb
fwait
and
mov
jp
test
mov
add
pop
es
lds
and
dec
cmp
je
push
outsl
jl
es
fs
xchg
insb
jb
lods
lock
sbb
dec
test
out
xor
adcl
push
sub
stc
inc
xchg
aaa
movb
hlt
fsubr
testl
int3
test
fsubp
stc
xlat
sti
xchg
imul
pop
push
dec
aad
inc
add
mov
xor
push
add
cmc
fmuls
push
inc
scas
xor
mov
and
cmp
or
adc
adc
ja
and
dec
adc
adc
push
sbb
xor
shll
popf
push
js
out
xor
pop
push
stos
das
call
jb
push
and
insl
cmc
ret
sahf
fisttpll
pmullw
into
mov
xor
cmc
mov
inc
add
xlat
sbbl
cmp
in
out
adc
in
pop
faddl
or
or
fnstcw
aaa
and
fbstp
xor
and
mov
fisttpll
jne
ret
mov
nop
xchg
cmp
and
es
call
mov
mov
loope
xor
xchg
add
out
adc
pop
add
fidivl
or
ds
mov
std
lcall
lock
aas
and
mov
jecxz
mov
addr16
pop
and
addb
jo
or
cmp
mov
sbb
mov
int3
popa
push
cmc
test
ljmp
inc
inc
pop
mov
or
cli
lahf
ja
aaa
rsqrtps
lahf
shrb
or
rcll
stos
icebp
mov
sub
push
mov
clc
pop
rclb
stos
sbb
test
and
aas
pop
push
jle
sub
in
pop
or
sbb
add
fbstp
lds
pushl
mov
hlt
mov
stos
inc
shlb
pusha
push
jle
cmp
std
stos
jge
inc
pop
mov
push
mov
mov
test
pop
out
fbstp
imulb
outsb
inc
push
stc
xor
and
mov
stc
or
repnz
adc
jg
aam
int
mov
into
js
mov
sub
addr16
out
fdivrl
mov
add
popa
cld
mov
xor
push
sbb
stos
sbb
jge
and
ds
test
fcomps
subb
movsb
scas
mov
add
jge
jecxz
sbb
add
pop
pop
and
cld
push
jg
mov
jnp
std
in
push
adc
add
xor
shrl
lods
pop
add
or
clc
fidivl
popa
nop
mov
pushf
mov
sub
test
pop
dec
inc
and
cld
add
cmp
lcall
mov
in
inc
nop
out
push
or
rorl
push
sub
inc
subb
std
andb
dec
sub
js
add
mov
or
add
sbb
and
arpl
sub
iret
push
jecxz
test
push
mov
add
adc
mov
cld
lods
cmpb
jns
sub
mov
cmpsl
decl
jnp
and
or
jbe
das
and
scas
in
or
pop
mov
cs
inc
loopne
test
add
iret
mov
sbb
inc
add
test
pop
bound
notl
inc
test
jae
rorb
fbstp
sub
sbb
sub
adc
fsubrl
mov
testb
test
mov
sbb
subl
hlt
pop
pop
pusha
sub
mov
sti
test
inc
and
idivb
and
jo
pop
lcall
push
sti
jle
adc
sti
das
enter
outsl
push
or
test
insb
imul
in
testb
sub
out
mov
test
cli
mov
cmp
notl
jo
out
pop
sub
cmp
xchg
mov
enter
scas
lea
mov
pop
mov
mov
sub
push
add
pop
loop
xchg
decl
pop
push
stos
iret
mov
out
ret
push
add
xorb
pop
imulb
rorb
bound
in
fsubrs
or
cmpsb
sub
addb
jp
nop
cmp
addl
aam
push
xor
mov
call
mov
mov
fwait
cmpsb
add
jp
addr16
insb
add
xor
aaa
divl
mov
push
decl
test
inc
mov
scas
cltd
cmpl
insb
push
mov
xor
push
add
cmpsl
aas
movsb
cmp
mov
lods
sbb
sbb
adc
xchg
leave
ljmp
cmpsb
mov
mov
xchg
inc
add
inc
inc
push
sub
inc
jle
push
aas
lock
and
pop
push
je
xchg
cs
fs
mov
data16
pmulhw
js
iret
icebp
cmpsb
sbb
sarl
cld
fbstp
jo
out
dec
xchg
pop
or
and
shrb
ljmp
mov
xchg
mov
sbb
enter
std
inc
pushf
js
out
mov
ds
or
ja
mov
jne
adc
mov
lods
out
dec
cmp
fiadds
lahf
cli
and
xchg
pop
dec
mov
inc
sti
test
xchg
test
ds
sub
cmp
push
out
shll
sbb
xor
xorl
call
leave
js
addb
xchg
lods
lcall
or
ja
leave
movsl
fsubl
xchg
jg
in
xor
insb
cli
xchg
xor
lds
mov
jge
cli
rcrb
mov
enter
push
mov
pusha
sarl
mov
add
call
push
cwtl
bound
fsubl
pop
pop
add
inc
sub
xchg
adc
cmc
mov
push
pop
push
cld
lar
sbb
in
stos
shrl
sub
sub
movd
xor
aam
adc
jle
sbb
jmp
cmp
js
dec
dec
rclb
cmpsb
or
cmovb
xchg
cmpb
pop
andl
sub
jb
adcl
out
inc
push
xchg
xor
and
and
push
dec
shll
ror
aam
xor
insl
in
shlb
or
gs
push
mov
fcomps
test
lock
dec
lcall
xor
outsl
movsb
popa
rcrb
mov
inc
daa
icebp
dec
insb
dec
push
pop
pop
sub
gs
ss
pop
and
subb
mov
aam
repnz
pop
xchg
push
int3
les
sub
in
add
ljmp
sub
je
jbe
test
add
inc
outsl
mov
ret
fists
shll
mov
dec
lods
out
loopne
fcom
js
pop
mov
out
fwait
mov
mov
or
sahf
sbb
mov
lock
adc
or
movsb
fldl
hlt
mov
push
cld
mov
jno
inc
sub
push
outsl
aaa
pop
lods
sub
sub
loope
push
and
or
testb
inc
cli
add
testb
mov
loop
mov
insl
push
pop
mov
jg
inc
add
bnd
js
pop
aad
push
test
dec
pusha
dec
mov
mov
insb
lods
push
jae
outsl
es
adc
fadd
pop
jge
shl
or
cmpsb
push
arpl
add
xchg
repz
sbb
outsl
cmc
xor
movsb
mov
ljmp
dec
clc
or
sub
jbe
mov
xchg
dec
mov
movsl
cmp
pop
daa
dec
xor
sub
test
dec
pop
movaps
sbb
popf
jg
push
jl
and
push
mov
sub
das
adc
rorl
arpl
fidivs
push
adc
mov
xchg
mov
cmpsl
sub
sub
pop
jae
pop
jno
adc
pop
xor
sub
xor
aad
out
sbb
sbb
sub
mov
xchg
sbb
inc
sbb
in
and
cmpl
adc
or
pop
and
dec
fldl
mov
jnp
push
es
sub
sbb
sbb
mov
into
mov
scas
cli
xchg
push
fs
sub
mov
xchg
sbb
dec
std
mov
std
popf
movsb
mov
xchg
loop
cli
orb
imul
pop
mov
dec
mov
sub
push
jl
ret
insl
imul
sub
sbb
xor
es
cmp
add
mov
xchg
mov
dec
packsswb
cwtl
pop
cld
inc
mov
xchg
clc
push
and
int
cmpl
popf
pop
add
push
xchg
fsub
mov
pop
pop
lods
in
insb
add
pop
dec
fmull
ljmp
js
dec
inc
shll
inc
sbb
cmp
add
loop
in
dec
mov
ja
je
jb
cmp
xchg
adc
pop
aaa
clc
orb
testb
sbb
and
sub
subl
flds
or
mov
sbb
shl
out
jbe
jb
pop
or
adc
fstpl
sbb
mov
loop
inc
sub
inc
sarl
inc
fsubr
das
rolb
das
dec
sub
jbe
scas
jnp
xor
dec
push
adc
add
adc
insb
jg
pop
cmp
test
or
mov
cmp
mov
jle
push
push
dec
cli
lock
rclb
int3
ss
mov
mov
xor
add
jmp
mov
fwait
out
call
jl
mov
add
ret
movsb
stc
iret
popa
sub
cmp
stos
popa
jnp
jmp
cmp
je
stos
das
sti
inc
das
fdivrs
xor
push
cmc
or
shrb
sbb
loopne
loop
out
movsb
sub
xor
jb
cmpsl
cmpsb
icebp
je
mov
loope
dec
and
ss
dec
sarl
shlb
push
xchg
sbb
xchg
add
imul
sub
mov
in
adc
and
cmpsl
testb
int3
cmp
shrl
jl
std
pushf
dec
inc
int3
mov
ror
stos
dec
movsb
leave
jle
lahf
mov
cmp
push
mov
pushf
jno
jmp
enter
hlt
inc
shlb
movsb
cmp
loopne
arpl
and
mov
cmp
and
inc
test
mov
mov
inc
and
lods
inc
dec
cmp
or
mov
loopne
mov
into
sub
mov
mov
mov
xchg
mov
or
xchg
iret
xor
movsl
ds
push
sub
inc
mov
or
mov
pop
push
mov
test
loop
arpl
data16
adc
pop
dec
aas
cmp
jmp
inc
pusha
cltd
add
fdivs
ficompl
enter
loopne
push
xor
pop
push
hlt
mov
cmp
mov
push
pop
sti
push
xlat
pop
or
xor
mov
pop
nop
push
sub
mov
add
pushf
aam
adc
push
adc
and
jbe
adc
add
xchg
xchg
ret
fdivrl
push
outsl
sahf
fwait
cmovo
push
mov
lods
sub
sub
lcall
or
mov
repnz
popf
subl
lret
xchg
inc
nop
icebp
sub
inc
cwtl
xchg
pop
mov
nop
sahf
fcomps
clc
xchg
test
add
inc
pop
adc
sbb
addr16
mov
inc
int
lods
sub
and
sahf
test
xchg
jae
popa
cwtl
sbb
and
data16
shll
cmpsl
outsb
sbb
clts
data16
test
mov
xchg
je
or
and
adc
xchg
push
inc
add
inc
sbb
insb
lds
mov
loop
adc
mov
fstpl
ds
call
mov
push
sub
scas
jne
lock
xchg
lods
outsl
mov
pop
sub
push
and
out
push
jp
adc
mov
aas
xchg
cld
call
push
ror
lcall
pop
cmp
addl
loope
pusha
loope
outsb
dec
push
cmpl
cwtl
es
in
testl
pop
push
add
std
or
inc
pop
xor
dec
jge
int3
mov
fisttpll
stos
jp
push
test
int3
or
mov
fisttps
cwtl
pop
es
jg
push
mov
lods
test
es
out
dec
sub
js
js
jecxz
add
out
fwait
and
xchg
push
insl
cli
mov
pop
fnclex
cld
sbb
adc
loopne
pop
int3
cmp
xchg
cli
lahf
sbb
adc
jmp
dec
jmp
pop
cld
dec
cmp
ds
fstl
push
mov
sbb
inc
or
add
jp
cli
rol
and
inc
adc
sbb
inc
es
subb
xor
xor
pop
push
icebp
loop
shll
pusha
push
or
fcmovb
adc
ret
das
ds
mov
add
gs
test
sahf
inc
sbb
xchg
xchg
out
add
mov
icebp
xor
sbb
mov
jb
out
stos
jno
adcb
sbbl
push
aam
loop
add
inc
and
ret
jg
notl
mov
or
xorl
mov
sbb
cmp
add
daa
inc
push
ljmp
stos
or
enter
pushf
push
addps
ss
inc
sbb
dec
mov
xchg
rorb
inc
cmp
cli
sbb
loopne
cmp
gs
jg
in
jg
andl
popf
popf
ss
dec
ljmp
test
movsb
in
aam
lea
sbb
jno
cmp
fildl
pop
adc
js
mov
rclb
jge
cld
sbb
or
cli
mov
push
cmpsb
cmp
in
movsl
push
arpl
cs
nop
sbb
ss
outsl
sbb
mov
mov
adc
sti
mov
push
fcompl
ret
push
cltd
cli
enter
pop
fistpll
jno
cwtl
push
leave
push
pxor
ja
jo
std
xor
outsb
or
idivb
mov
xor
out
push
ret
lret
scas
jo
add
xor
mov
insl
icebp
sbb
ss
jno
mov
mov
xchg
or
test
mov
lcall
cmp
sbb
fcoms
in
adc
adc
clc
cld
mov
sub
cmpsb
icebp
cmpsb
xor
inc
daa
inc
rolb
or
mov
jecxz
loopne
test
add
lahf
sub
decl
and
mov
mov
adc
xchg
dec
and
sbb
test
pop
push
ret
push
ss
insb
dec
pop
adc
pop
rorl
cld
sbb
test
scas
inc
cmpsl
pusha
xchg
in
add
push
or
mov
and
rclb
push
lcall
into
bound
enter
mov
xchg
add
lock
daa
push
loopne
lea
fwait
loope
xor
clc
inc
das
outsl
aad
shll
sbb
xor
dec
xchg
push
les
or
mov
test
repnz
mov
mov
push
pop
fsubrl
int
mov
jbe
int
mov
mov
leave
cmpsl
stos
clc
pushf
add
cld
aas
xor
arpl
and
or
mov
or
lock
sbb
out
push
mov
mov
and
inc
out
xchg
sbb
rorb
out
cld
jle
stos
or
push
scas
push
cs
cltd
push
sub
sub
shlb
add
addr16
add
inc
or
xor
or
sub
mov
dec
mov
sbb
mov
jo
sub
add
xor
pop
icebp
dec
orl
cmpsl
data16
jbe
ljmp
ret
mov
fmuls
movsl
je
pop
pop
dec
jb
in
pop
jmp
insb
jecxz
outsl
lcall
push
ret
out
adc
in
lea
loope
insb
pop
cli
cmpsl
subl
out
sub
imul
push
or
movsb
inc
adc
das
lods
xchg
cmp
or
out
outsl
andb
jo
xor
mov
jge
scas
insb
loop
mov
stos
mov
mov
js
rorl
jmp
ljmp
int
shrl
dec
push
pop
int
and
aad
xchg
mov
out
xchg
dec
dec
xchg
repnz
push
or
mov
inc
js
and
sbb
xor
roll
enter
daa
pusha
pusha
in
fstl
xor
in
or
orl
pop
iret
aas
add
popa
loopne
jecxz
push
shrb
xor
in
xlat
insl
lock
xlat
mov
cli
jle
adc
js
test
xor
andb
imul
out
test
sbb
cli
insb
js
xlat
fs
imul
js
jbe
and
iret
int
or
loope
sub
jg
adc
fsubrp
push
je
ja
mov
mov
lret
pop
add
add
lock
dec
clc
jnp
xchg
insb
gs
xor
add
outsl
sub
mov
xor
outsl
cmp
pop
stc
rol
jae
pop
lock
out
mov
sbb
rorl
pop
punpcklbw
xor
mov
cmpsb
call
into
fcomip
push
adc
xchg
aaa
popf
and
cmp
pushf
adc
rcrb
adc
fstps
aas
pop
pop
inc
lock
insb
aam
xlat
test
mov
fcmovnbe
in
test
icebp
insl
loopne
dec
adc
test
jmp
js
pop
repnz
adc
ret
xchg
sub
shlb
ss
mov
pop
mov
push
out
fs
or
push
mov
add
stos
pop
es
movsb
pushf
jg
or
and
lods
jp
js
cmc
jmp
mov
mov
std
orb
xor
dec
push
enter
push
in
out
lret
dec
into
jae
stos
dec
in
push
icebp
daa
fsubrs
xchg
pop
arpl
cmp
jne
inc
pop
out
or
inc
out
scas
xlat
xor
or
leave
fcom
xlat
xchg
std
mov
test
xor
jns
adc
adc
push
add
xor
fdivrl
scas
lock
not
out
xor
mov
cwtl
mov
popa
ljmp
movsb
jge
push
or
cmpl
cltd
call
xchg
lods
lret
adc
pop
es
pusha
ret
fwait
rorl
lret
repz
mov
dec
iret
pop
pop
dec
shll
and
xchg
mov
pop
cmpsb
mov
push
js
xchg
or
jb
and
adc
loope
add
or
repnz
pop
inc
aam
movsb
loop
pop
cmp
es
add
or
push
xorl
data16
add
or
les
stc
fcom
sub
insb
sbb
pop
pushf
xchg
nop
fs
roll
sbbb
xchg
dec
insb
adc
xchg
nop
sbb
jp
clc
push
lods
push
pop
mov
pop
decb
sbb
insl
jmp
les
and
dec
int3
loop
xchg
inc
xchg
ja
inc
mov
vaddsubps
push
dec
xchg
cmpsl
cs
loop
inc
aam
cmp
outsb
pop
iret
call
or
loop
add
divl
sbb
sbbb
xchg
pop
jnp
cmpl
enter
xor
mov
xchg
lret
pop
insl
push
lock
jb
dec
add
sbb
rcrl
lods
or
pop
and
push
jne
push
jo
shrb
into
push
inc
jg
add
adc
sub
les
mov
stos
out
xchg
data16
sarl
clc
push
ds
pop
add
inc
mov
add
ds
ficompl
call
fdivp
ss
add
sub
dec
pop
push
sub
subl
sbb
test
mov
mov
add
das
xchg
pop
sbb
jno
dec
sbb
sub
std
out
adc
ds
das
sub
push
xor
adc
dec
enter
add
push
mov
cwtl
mul
clc
or
movsl
fdivrl
stc
add
js
pop
test
mov
xlat
insl
iret
pop
push
scas
push
push
and
stos
cld
cmp
das
push
add
inc
mov
cmp
jno
xchg
dec
les
ds
stc
jle
pop
in
mov
stc
pop
mov
adc
mov
mov
mov
lods
jns
dec
push
dec
mov
adc
xor
movl
stos
mov
scas
pop
movsb
insb
jo
imul
sbb
jle
push
sub
xor
mov
push
shrb
lahf
push
mov
mov
sbb
xchg
or
xchg
hlt
jmp
adc
rorb
rol
insl
xchg
loopne
sub
divl
xor
ja
outsb
int3
stos
push
call
adcb
jnp
imull
insb
mull
adc
fbstp
xchg
dec
add
jg
mov
and
add
mov
lahf
addb
adc
jp
outsl
jge
and
push
mov
add
inc
adc
mov
lcall
call
bound
add
pushf
pop
mov
das
pusha
lret
inc
mov
fidivl
jl
icebp
stos
pop
jbe
cmpsl
cmp
js
jecxz
and
inc
mov
cli
stos
pop
push
out
in
adc
ret
aas
dec
int
cmp
fldcw
pushf
cwtl
loopne
sub
xchg
or
popf
mov
push
pop
jns
arpl
cmp
adc
pop
call
dec
loope
js
sbb
adc
mov
nop
sbb
sbb
inc
lea
ds
and
clc
int
bound
out
stos
add
xchg
fadds
les
ljmp
push
scas
pusha
dec
loope
jle
mov
push
outsb
sub
aam
jl
pop
out
adc
push
orl
lcall
sbb
push
lods
pop
inc
ja
clc
fiaddl
movsl
orb
dec
dec
subb
clc
icebp
sub
push
lock
inc
cmp
clc
or
pop
sub
dec
ljmp
int
test
lcall
ds
into
cmpsb
adc
xchg
add
push
cld
mov
fcomps
clc
testl
aam
mov
negl
add
lods
addb
loop
mov
stos
ja
dec
mov
and
mov
fs
mov
adc
add
inc
push
dec
push
rorl
pop
pop
or
xchg
and
push
cmpsl
fs
and
dec
in
cmova
idivb
cld
les
jno
mov
sub
test
sbb
addl
iret
push
mov
lahf
aad
sub
xchg
mov
ficoms
xlat
mov
inc
sub
jo
rorb
je
push
pop
dec
fcomi
xchg
ret
add
pop
inc
out
push
sbb
jmp
cmpsl
xor
and
xchg
mov
lods
jb
das
jmp
in
js
add
xchg
int3
aam
adc
sbb
push
cmp
dec
push
pop
inc
int3
ds
movb
subl
ret
adc
call
adc
inc
sub
icebp
mov
dec
lret
ret
xor
cld
and
or
dec
lods
push
inc
cmp
sub
pop
add
mov
or
loopne
rorl
ds
enter
loopne
call
mov
adc
mov
mov
mov
cmp
ret
push
jg
sub
or
pop
call
fwait
or
repnz
test
xchg
and
adc
sbb
xlat
test
lret
aam
outsb
in
popa
jl
ror
xor
clc
cmpsl
mov
xchg
ljmp
mov
jno
es
sbb
dec
fs
loop
stc
icebp
mov
pop
mov
or
push
mov
lea
sub
pop
pop
inc
cmpsl
sbb
mov
inc
pop
scas
jns,pt
mov
dec
sub
stos
mov
push
inc
xor
pop
xor
xor
add
pop
xchg
jg
les
dec
xlat
mov
loop
sbb
pop
cli
cmp
mov
icebp
xchg
sbb
and
hlt
pop
es
jno
and
xchg
fwait
notb
sti
pop
outsl
xchg
xchg
shrl
xlat
fcomps
cmp
jge,pn
add
mov
inc
clc
inc
push
push
fnsave
jnp
mov
repz
xchg
pop
hlt
add
mov
pushf
mov
mov
xlat
clc
shll
fwait
lods
push
or
jns
into
lds
iret
mov
cli
loop
lods
das
or
xor
scas
divl
dec
add
bound
jbe
addb
jmp
xor
mov
pop
lahf
pushl
stos
daa
jne
dec
outsb
repz
insl
cli
cmpsl
mov
mov
push
aad
loope
push
jbe
insl
es
push
or
or
cmpsl
xchg
fs
popa
or
js
loope
jmp
jge
mov
jnp
std
rcr
out
push
xor
and
push
sbb
fcomp
leave
push
sahf
jno
rcrb
ret
sbbl
loopne
pop
lods
add
inc
mov
and
push
int3
cld
push
sbb
cmp
cld
ss
pusha
pop
inc
pop
mov
fidivs
jle
cmp
push
pop
aam
pop
lods
adc
cmpsl
jp
cld
cmc
lret
jl
sbb
hlt
je
mov
pop
pop
push
repnz
lds
xchg
pop
ret
push
loopne
subl
pop
clc
ljmp
and
sbb
sub
fiaddl
pop
mov
mov
mov
push
xchg
cmpsl
sub
push
adc
lods
adc
sbbl
or
mov
stos
add
int3
mov
add
ljmp
dec
les
dec
out
loop
imul
gs
sub
inc
imul
mov
dec
arpl
sti
dec
inc
cmp
cli
or
sub
jle
in
xchg
xchg
out
add
rol
pop
sub
sbb
mov
test
cmp
in
dec
repz
sbb
stos
lock
or
loopne
and
and
or
sub
and
test
mov
sti
mov
je
cmp
repz
rcrl
dec
sub
enter
pusha
adc
xor
mov
or
cmp
fwait
and
mov
leave
clc
shr
das
inc
aaa
adc
rorb
dec
mov
inc
arpl
xor
js
sub
jnp
ds
imulb
adcb
ljmp
xor
sbb
mov
das
inc
mov
and
push
cbtw
inc
bound
out
lea
es
push
movntq
unpcklps
cmp
mov
pop
sub
cli
inc
xor
sub
orb
cld
loopne
fisubrl
and
jmp
and
icebp
xchg
and
push
cld
push
mov
dec
dec
sbbb
mov
ljmp
idivb
sbb
push
push
mov
int3
mov
insl
jge
divb
mov
jmp
lock
loop
fsubrl
sbb
roll
sbb
and
jb
pop
jl
dec
and
inc
loop
mov
inc
dec
xlat
jb
sbb
roll
sbb
aas
mov
cmp
lret
jb
shrl
mov
sub
nop
sbb
cmp
mov
jnp
add
cmp
orb
divb
loope
push
jmp
mov
add
lods
dec
fnsave
hlt
in
adc
or
jb
lods
faddp
loope
inc
fldl
test
xor
lods
mov
incl
inc
shll
xchg
lock
pop
jl
in
int3
mov
sbb
cld
push
mov
into
pushf
jnp
andb
cmpsb
test
rol
paddb
int
iret
or
mov
xchg
fistl
sub
inc
cmp
push
xchg
push
lds
lods
andb
shll
xor
pop
fimuls
cmp
jno
cwtl
not
jg
scas
push
enter
outsb
ds
pop
inc
and
rolb
gs
lcall
cmp
adc
fistps
scas
mov
jecxz
adc
stos
mov
fistpl
jne
push
dec
xlat
push
lock
enter
adc
rol
pop
adc
mov
sahf
jns
dec
push
jp
shrb
jl
jbe
mov
in
imul
cs
rorl
in
xchg
pop
rclb
cmpsl
xchg
popa
push
push
cmc
sub
movsb
mov
xchg
add
cwtl
push
in
lret
sbb
pop
mov
push
insl
jg
sbb
insb
je
fidivl
fldenv
out
shll
sbb
push
add
hlt
cli
scas
mov
cld
mov
inc
pop
xorb
pop
pop
enter
imul
adc
aad
push
leave
xor
and
mov
pop
cld
rorb
cmp
cmp
shl
adc
cmp
sub
ds
repnz
push
push
idivl
or
shlb
cmp
push
add
lcall
mov
ja
lcall
mov
sub
mov
xchg
push
mul
inc
push
pop
ss
loope
push
iret
dec
loop
loop
jmp
add
mov
cmp
and
or
neg
pop
jae
outsb
mov
push
and
push
scas
sbb
mov
mov
fnstcw
dec
pushf
mov
sti
bound
push
pop
mov
inc
test
cld
or
leave
cmp
aaa
repnz
iret
xchg
push
roll
and
adc
or
jmp
movsb
push
mov
in
pop
lret
sub
cmc
mov
adc
mov
mov
sub
pop
jge
mov
lret
movsb
out
cmp
sbb
add
arpl
sub
testb
adcl
lods
inc
push
and
pop
jl
in
mov
imul
fdivrs
movsb
hlt
push
pop
mov
inc
in
fstpt
push
sbb
inc
and
shlb
mov
lret
ficomps
xchg
lock
add
sbb
ljmp
mov
mov
inc
jl
sub
dec
and
add
jecxz
mov
inc
pop
pop
mov
xor
mov
inc
mov
sahf
or
mov
or
jmp
inc
addb
mul
adcb
loope
xchg
inc
xlat
fcoms
adc
mov
ds
std
mov
mov
add
jecxz
add
push
jae
jno
jle
je
stos
adc
jecxz
dec
sbb
push
leave
repz
clc
hlt
add
inc
push
jge
pop
jl
pop
or
cmp
in
aad
inc
push
cmpsb
dec
xchg
test
aas
adc
in
lcall
lahf
push
inc
repnz
int3
inc
fistl
cld
mov
cltd
mov
xlat
push
mov
pop
call
sub
mov
fsubp
pop
push
mov
sti
or
inc
mov
leave
sub
loope,pt
sub
lret
or
sbb
clc
add
inc
test
mov
test
sbb
sbb
jp
push
pop
rcrb
jle
insl
ret
lods
add
insb
cmpsl
outsb
push
daa
mov
mov
cmp
stos
inc
enter
fucomp
cli
rcl
jno
adc
loope
fisubs
xor
aam
je
rcrl
mov
aam
sub
out
jecxz
dec
mov
jp
cmp
mov
add
push
push
out
fwait
jb
std
sbb
jnp
arpl
dec
ja
sub
xchg
cwtl
push
stos
or
xchg
jle
mov
sub
lods
shll
push
cmp
pop
subl
pop
dec
mov
dec
jge
adc
mov
jmp
aam
addb
aad
or
inc
and
loopne
xchg
mov
add
cli
js
or
call
lret
push
scas
jle
push
arpl
dec
push
imul
mov
movsb
xchg
cmpsb
les
and
mov
test
mov
mov
add
jecxz
mov
inc
jp
popf
int
loop
adc
js
and
int3
testl
sti
hlt
xchg
adc
aaa
inc
aaa
adc
add
mov
mov
imul
stc
add
mov
fsubl
pop
rol
lret
jp
push
arpl
les
icebp
lock
popa
sbb
fs
sbbl
jne
mov
add
fs
mov
data16
push
and
pop
mov
popa
movsb
movsb
sub
lods
imul
fwait
cs
xor
mov
jne
lock
mov
bound
mov
jo
pop
pusha
pop
mov
mov
adc
or
std
cmpsl
adc
stos
addr16
cs
mov
push
iret
sbbb
or
xlat
xlat
add
mov
imul
adc
or
add
mov
cmc
fucomp
pushf
in
jecxz
sbb
jb
and
sub
mov
push
mov
clc
shl
push
cltd
stos
cmp
adc
cmc
adc
pop
adc
iret
outsl
push
mov
mov
push
insb
add
insl
mov
push
jl
mov
mov
dec
les
xchg
dec
test
mov
push
dec
xchg
cmpsl
and
xor
or
movsl
add
mov
fisubrs
sbbl
add
fcompl
jae
clc
out
lcall
imul
int
push
es
nop
lock
adc
jo
pop
sub
in
fbld
xchg
fsubs
add
cmpsb
adc
or
es
xchg
push
movsl
push
add
das
out
jmp
sbb
ss
dec
test
mov
sub
add
or
subb
sbb
mov
sahf
jl
nop
aaa
pop
xchg
push
gs
ljmp
js
aam
sbb
pop
add
lcall
les
mov
or
add
pop
inc
insb
dec
push
xor
inc
inc
stos
mov
test
mov
cmp
andb
sbb
sub
push
movsb
in
lods
loope
adc
jne
sbbl
jno
pop
std
dec
sbb
mov
sbb
xor
fmuls
cmp
pop
mov
push
add
scas
inc
prefetcht0
push
sub
fisubl
add
loope
test
shlb
cmpsb
fcmovnb
aad
xchg
jno
std
jecxz
popa
mov
stc
inc
fcom
jae
ret
sbb
lret
adcl
jb
cld
sbb
nop
xor
inc
mov
pop
es
ljmp
sbb
pusha
push
pop
mov
cmc
scas
mov
mov
xchg
testl
inc
icebp
movsl
arpl
or
inc
and
bound
fcmove
jp
pop
sub
jl
pushf
scas
mov
push
or
lods
rorb
sub
mov
or
scas
sbb
mov
jnp
pop
inc
inc
inc
push
roll
lret
lods
insl
cwtl
cmp
add
test
pop
cli
xchg
add
lock
hlt
jle
cli
lret
test
loope
repz
and
nop
mov
push
aaa
mov
rol
adc
jecxz
jo
push
orb
pop
cli
ds
inc
pop
testl
mov
mov
imul
pusha
dec
loopne
arpl
test
mov
aaa
push
inc
cs
cwtl
push
jne
inc
xor
xchg
xchg
and
outsl
fcmovne
dec
dec
rcrb
or
lea
add
push
mov
sbb
sarl
mov
mov
popa
sbb
in
jnp
das
int3
or
fisttpl
sbb
imul
pop
inc
xchg
inc
pusha
subb
mov
sub
cli
enter
in
xchg
pop
lock
xor
dec
add
jns
dec
sub
mov
imul
ja
mov
dec
adc
jo
jge
push
fwait
and
dec
or
jns
rclb
ret
into
add
push
out
lock
jle
xchg
ds
push
mov
sahf
mov
mov
ljmp
ds
out
pop
std
int3
in
xor
gs
bnd
popa
nop
xor
scas
aad
mov
js
test
lock
ss
inc
inc
cmp
cs
adc
rorb
shll
adc
daa
mov
adc
outsb
test
xor
into
fbld
xchg
fidivl
fcoml
mov
cld
outsb
das
fcoms
sti
push
sbb
push
dec
stos
adc
push
jns
add
das
sbb
xchg
pop
and
imul
or
jb
movsl
cmc
xchg
mov
fmuls
bound
mov
push
adc
popa
adc
daa
xchg
sbb
or
push
loop
jge
aam
in
js
popf
pop
in
mov
ret
dec
sbb
les
and
and
inc
adc
clc
je
into
mov
push
inc
or
cmp
test
cmpsl
popf
xor
rcl
jmp
mov
jecxz
scas
scas
sbb
cmp
out
pop
cmp
sbb
push
das
jmp
mov
push
stc
pop
jge
loopne
or
push
jne
mov
cmp
pop
add
push
or
das
and
fcom
ljmp
jb
es
push
movsl
add
pop
xchg
pop
outsl
lret
cmpsl
les
es
push
fisttps
dec
sub
add
inc
mov
inc
or
sub
jle
jno
mov
pop
cmp
xor
jp
cmp
outsb
mov
cwtl
sbb
daa
mov
loope
fs
pop
jl
and
ret
mov
lods
lret
push
xor
insl
sub
jbe
inc
jge
or
dec
cmp
lods
das
fld
pop
mov
rcrl
movsb
pop
cmp
jo
xchg
mov
fstpt
cmp
cmp
lea
adc
bound
xor
or
das
aam
mov
test
xor
add
pop
call
mov
lcall
xchg
sar
add
lahf
cwtl
add
icebp
inc
loopne
bound
cmp
fsubrs
jbe
xchg
clc
addl
imul
and
sbb
fcomps
cs
aaa
cmpl
push
cmp
ds
fiaddl
outsl
mov
jecxz
lret
or
ret
lock
cmpsb
ds
loopne
sbb
sbb
push
sti
dec
xor
mov
sbb
sbb
push
inc
sub
pop
insb
call
add
xor
push
lret
push
or
xor
sub
enter
mov
ret
adc
aad
xor
test
cmc
adc
out
xchg
lock
enter
cmp
pop
pop
dec
or
lods
pop
addr16
repnz
xorl
pop
cmp
sti
xor
mov
unpcklps
mov
sbb
push
fsub
cmp
ljmp
jae
dec
xchg
xor
cmp
aaa
mulb
testl
cmp
add
fisubrl
xor
loop
aas
xor
mov
pop
scas
lret
or
movsl
mov
aad
pusha
push
mov
dec
add
inc
dec
iret
jle
push
dec
fisubs
xor
jo
adc
xchg
jecxz
mov
dec
data16
fisttpl
xlat
xor
je
imull
or
rorb
adc
call
out
adc
jnp
push
and
les
cld
popa
mov
jo
std
push
mov
je
and
aam
das
inc
imul
inc
scas
and
push
iret
sbb
fldt
pop
sbb
sbb
adc
scas
sbb
data16
out
mov
mov
xchg
sbb
cmpl
es
out
test
cwtl
cmp
jbe
pop
das
test
adc
rcrl
ret
or
mov
cld
jp
push
xchg
lcall
sub
mov
lock
sbb
fs
cmp
xor
mov
mov
ficompl
shr
push
cld
fisubrs
sub
pop
and
ss
lcall
mov
mov
push
mov
lea
mov
xlat
imul
dec
add
popf
sbb
jge
out
add
int3
fmull
mov
icebp
and
iret
popa
mov
push
repnz
data16
cmc
pop
dec
imul
inc
add
pop
icebp
mov
push
cmp
or
dec
pop
ret
fdivr
cmp
dec
sarl
push
add
cmpl
adc
scas
or
jnp
inc
sub
decb
or
xchg
push
icebp
add
or
and
inc
add
inc
add
mov
sub
jnp
leave
jmp
mov
stos
js
pop
xchg
xor
rolb
push
add
clc
in
adc
jmp
cmpsb
lods
add
cmp
sbb
arpl
std
loope
push
mov
aad
inc
jmp
inc
mov
in
cmpsb
mov
in
add
fidivrl
mov
shrl
test
aad
sub
bound
xlat
fisubs
sub
sbb
sti
cmp
inc
nop
cli
int
cwtl
scas
jle
cmpsl
cmc
dec
sbb
rolb
gs
cli
aad
cltd
sahf
notb
and
cltd
dec
inc
insl
pop
mov
adcb
sbb
xchg
pop
sarb
adc
push
sbb
add
mov
daa
xchg
cwtl
test
pop
jge
test
shll
xchg
pop
xlat
leave
hlt
rcrl
insl
mov
sub
jl
sbb
cs
push
sub
mov
ljmp
and
jle
adc
rorl
add
adc
and
push
xchg
inc
pusha
popf
jo
aad
btc
std
call
cmp
movsl
inc
inc
test
pop
mov
xor
lret
jge
mov
popf
je
shlb
daa
lea
loope
and
sub
dec
pop
mov
jno
loope
js
ljmp
sbb
inc
fidivrs
aaa
cmp
movsl
push
xchg
mov
loopne
daa
push
test
xor
test
adc
test
pop
adc
xchg
js
push
fistpll
pop
outsl
mov
subl
int
cmc
out
adc
loope
mov
roll
loopne
sub
xorl
aaa
mul
icebp
sbb
xlat
push
insb
mov
insb
add
push
push
or
xorl
dec
cmpsb
inc
std
and
sbb
test
test
xchg
push
xchg
xor
xchg
push
jle
xchg
mov
push
and
cmp
in
inc
and
iret
xchg
mov
push
stos
aas
push
sbb
sahf
lea
pop
xchg
jo
add
xchg
inc
in
hlt
add
xorl
sub
mov
xchg
ret
and
lds
mov
jmp
stos
repnz
sbbb
pop
sbb
mov
mov
popa
sbb
sub
lea
cmc
fstl
sub
in
arpl
bound
add
push
inc
mov
xor
ljmp
cwtl
mov
add
lods
ss
ficompl
pop
leave
or
xchg
gs
dec
fcmovb
call
mov
adc
jbe
clc
sbb
popf
movsb
xor
movsb
or
movb
mov
sub
xrelease
add
cmp
or
movsl
lret
sbb
mov
push
add
addr16
mov
movsl
idivb
orb
xchg
arpl
enter
push
or
pop
xor
aam
lds
and
mov
outsl
lods
and
and
cmpps
push
mov
push
xchg
pusha
push
pop
push
pop
ja
mov
push
dec
rcrb
movsb
bound
fidivrs
fistpll
sub
jecxz
scas
xor
push
popa
xchg
mov
lahf
roll
and
mov
fstpl
mov
push
jbe
push
mov
or
xchg
fwait
jmp
rcl
aaa
jp
adc
or
or
or
push
aas
jb
sbb
outsb
add
cmp
add
stos
loopne
jmp
xchg
addr16
movsb
fstpl
popf
push
cmp
js
cwtl
push
jg
xchg
stos
sub
xor
push
scas
sub
xor
pushf
ds
mov
adc
adc
adc
sar
call
fstpl
sbb
pop
in
cld
mov
jo
adcb
clc
add
movsb
pop
mov
out
fisttps
or
cmp
test
push
jnp
jge
dec
adc
test
or
or
or
ret
lea
xchg
sbb
nop
push
loope
pusha
js
mov
xor
adc
sub
push
xlat
push
add
jg
out
mov
pop
pop
or
pop
mov
das
adc
dec
scas
gs
inc
add
int
cmp
fwait
add
outsb
std
push
pop
inc
cli
cmp
xor
pop
jl
xor
das
mov
in
xor
leave
sbb
mov
cmp
jecxz
sbb
xchg
add
or
cwtl
cmpsl
sbb
dec
sbb
loope
jbe
jb
les
out
jecxz
or
std
inc
loop
inc
xor
fdivs
jno
pop
sbb
dec
xchg
mov
push
cld
or
adcb
mov
pushf
loope
mov
enter
imul
adc
icebp
adc
xchg
incl
sbb
fwait
out
pop
jecxz
loope
xor
jmp
lea
ja
gs
ud2
call
fninit
xor
mov
dec
mov
jo
pop
add
mov
mov
push
pop
out
adc
bound
ja
movsb
pop
add
inc
nop
outsl
lea
inc
xchg
nop
pop
scas
mov
aam
fwait
lahf
orb
clc
push
pop
insb
push
clc
dec
pop
jp
xchg
jp
rorl
ret
mov
or
and
es
shll
mov
std
pop
mov
push
mov
add
and
mov
mov
shrb
jp
jmp
ds
ss
mov
std
xchg
add
jmp
xchg
aad
adc
in
bound
fs
sbbb
aam
fmull
inc
xor
mov
sbb
and
jg
jnp
cld
int
mov
sub
test
jb
push
or
sbb
add
adc
push
mov
movsb
adc
mov
sbb
mov
movsb
mov
mov
add
jge
cli
sbb
and
push
and
cmp
in
jae
xchg
xor
xchg
mov
sub
jecxz
adc
jne
jne
pop
mov
jmp
dec
bound
pusha
push
xchg
pop
jae
add
outsl
das
sub
cmp
loopne
adc
dec
push
inc
popa
xor
fs
clc
jecxz
sar
cmpsl
dec
je
fs
push
ret
sbb
bound
outsb
sub
icebp
xlat
mov
mov
aam
fldenv
adcb
out
or
mov
add
xlat
mov
mov
lds
pop
or
jecxz
js
push
mov
inc
stos
popf
test
cmp
push
in
sbbb
data16
pop
sbb
inc
fwait
rcll
rorb
cmp
lods
lock
cld
mov
popl
mov
pop
aaa
cltd
adc
ds
decb
inc
or
in
jecxz
adc
inc
mov
pop
pushf
and
pop
and
lcall
add
mov
call
sub
jne
push
sti
push
mov
cwtl
aad
jnp
or
rclb
push
in
leave
push
mov
hlt
add
sarl
jno
orb
inc
idivl
pop
push
sbb
lock
pop
call
or
push
test
or
adc
je
pop
pop
dec
push
lds
addr16
mov
mov
push
es
jno
lds
fisubs
ja
sbb
mov
push
sbb
out
lret
fmul
shrb
jnp
xabort
pop
mov
aad
jae
cmp
cmp
mov
cltd
les
xchg
sub
sbb
aaa
add
push
or
or
push
push
pop
bound
mov
xchg
pop
rcrb
and
cltd
nop
shll
sub
movsl
or
sbb
jg
cltd
test
das
jne
stos
shr
pop
or
and
sub
fcompl
or
test
mov
xchg
lea
insb
shl
into
or
test
shlb
out
js
mov
cwtl
es
out
mov
cs
mov
mov
push
lcall
andb
insb
pop
add
and
loop
sub
add
mul
aad
rclb
xlat
mov
ss
mov
inc
insb
cmp
dec
in
movsb
inc
lods
xlat
jno
add
push
sbb
arpl
mov
jmp
scas
sbb
add
dec
push
das
inc
lret
sub
jmp
testb
fnstcw
adc
mov
sbb
int3
jge
jnp
loopne
sub
incl
add
aas
pop
jge
mov
dec
dec
push
iret
mov
test
sub
pop
bound
fidivl
mov
cmp
lret
sub
and
adc
in
xchg
xchg
push
jns
jb
out
or
jl
fadd
and
loope
stos
stos
push
andb
add
imul
mov
repnz
add
push
xor
cltd
sbb
or
dec
jne
shrb
pushw
pop
subb
test
roll
add
fsubrs
inc
rorb
aad
push
cwtl
jge
dec
stos
shr
outsl
push
fadds
ja
xchg
cmpsl
jne
roll
or
or
sbb
mov
ljmp
cmpsl
and
pop
es
add
jno
xchg
and
sbbb
loopne,pn
inc
add
or
or
jne
movsl
jp
push
dec
das
sbb
jno
mov
xchg
mov
loop
test
aas
jnp
in
xor
mov
or
mov
shrb
and
cld
dec
lret
test
inc
fdivrs
jle
lock
adc
xchg
mov
inc
jb
pusha
lock
fs
cmc
rcr
test
cmp
sysenter
xchg
sbb
mov
pop
pop
cmp
fs
sub
shl
mov
lahf
add
ret
loop
stc
or
pop
lahf
insb
ds
cmp
cmp
data16
cmpsb
mov
clc
mov
jno
mov
sbb
nop
stc
addl
in
ret
jge
imul
ret
imul
push
pop
push
cs
movb
xor
popa
in
outsb
les
push
push
xor
mov
ret
and
push
push
adc
mov
xor
cmp
push
pusha
sbb
sbb
jmp
enter
add
and
add
jle
xchg
test
jle
sbb
xlat
inc
sti
sarl
fdivr
push
push
movsl
scas
adc
fiaddl
mov
mov
das
xchg
int3
and
test
dec
and
dec
fldcw
lea
sub
addl
packuswb
mov
jmp
jg
xchg
sub
inc
scas
out
add
push
sub
xchg
ljmp
add
mov
xchg
push
aas
inc
cmpb
cli
jb
xchg
push
push
xchg
inc
push
pop
mov
cli
mov
sub
adc
xor
jl
lock
mov
fmull
das
cld
cmc
adc
pop
int3
cmp
adc
push
test
fistps
in
cmp
inc
pop
or
imul
insl
mov
mov
in
xchg
clc
mov
dec
jl
sarl
jbe
lods
fdivs
stos
pushw
adc
sahf
jno
bound
sbb
sbb
mov
nop
mov
mov
and
jo,pt
jae
and
mov
outsb
bound
mov
call
adc
jnp,pt
xor
xchg
outsb
mov
enter
das
push
and
xor
push
sub
rorl
test
lret
orb
fwait
test
shrb
jno
push
jae
cmp
sub
jb
arpl
negb
sub
push
jns
imull
pop
fldl
xchg
repz
iret
xchg
js
roll
mov
or
pop
mov
int
sahf
jmp
ja
add
jnp
xor
adc
mov
imul
and
lret
xchg
jge
fwait
lock
push
jno
dec
hlt
and
xchg
dec
pop
xchg
push
es
lock
xorl
adc
sbb
push
pop
sti
sbb
pop
std
test
xchg
inc
ret
mov
fisubrs
movsb
jp
mov
mov
scas
gs
std
mov
clc
les
mov
orl
mov
sub
pop
lods
add
xchg
cmp
in
push
aaa
test
jbe
xchg
sub
xchg
shll
push
or
jge
cmp
out
inc
subb
xchg
push
test
mov
pop
xchg
push
and
aas
push
fsubl
add
ret
mov
outsb
imulb
sbb
inc
mov
jbe
sbb
loope
ja
test
mov
pop
jp
andl
lret
add
and
jp
loop
add
push
cmp
imul
mov
add
xchg
lods
hlt
lcall
sbb
mov
xchg
testb
test
add
lock
cltd
jle
lret
inc
rcr
pop
sub
daa
dec
mov
daa
mov
rorb
bound
push
nop
push
push
sbb
push
popf
mov
jns
or
je
pop
mov
add
dec
pop
cld
push
push
pop
xor
add
dec
or
sbb
xchg
popf
mov
push
or
push
mov
mov
or
es
mov
xor
xchg
js
jmp
ja
repnz
sub
dec
cmp
xorl
rcrb
mov
dec
js
mov
insl
add
sbb
add
mov
mov
mov
rclb
std
push
enter
int3
add
xchg
dec
les
fldl
push
xor
ss
mov
ds
enter
xor
jbe
lcall
lods
jo
or
repz
add
popf
and
and
cmp
dec
adc
pop
push
rolb
mov
inc
jo
xchg
push
ljmp
clc
sbb
fwait
adc
ljmp
or
jp
xchg
add
xchg
lock
dec
xlat
sub
ds
adc
jbe
sbb
mov
insb
or
adc
push
cld
pop
lock
inc
pushf
pop
ficoml
adc
jb
or
cmp
dec
mov
das
mov
sbb
sub
cmp
xor
iret
and
inc
mov
mov
add
movsl
js
ds
or
decl
add
sbb
and
dec
stos
sbb
test
clc
jmp
jne
cwtl
call
lahf
shlb
sahf
jp
push
rclb
fcomps
inc
cmpsb
mov
inc
push
subl
lds
js
jno
mov
fstpt
insb
dec
xlat
call
outsl
pushf
and
add
adc
dec
adc
add
je
fwait
mov
sub
cmp
inc
loopne
jnp
mov
cli
out
enter
pop
ljmp
inc
mov
jnp
into
sub
mov
adcl
lea
jg
rclb
lods
inc
jbe
lcall
rcl
and
dec
je
mov
repnz
jp
dec
inc
pop
fs
inc
sbb
mov
push
push
nop
sti
into
pop
jge
test
cs
add
popf
pop
xchg
cld
rol
xchg
hlt
add
xchg
adc
or
gs
sub
idivb
les
rcl
out
pop
add
add
lods
mov
jnp
sbb
cmp
fidivrs
jecxz
aas
iret
incl
hlt
mov
pop
dec
movl
mov
mov
sub
ret
setle
das
into
add
adc
js
push
push
and
hlt
cli
dec
pop
jp
cmp
adc
stos
add
and
movsl
adc
sub
nop
xor
aam
sbbl
mov
dec
inc
inc
pop
ret
xor
std
insl
dec
iret
cmp
daa
orb
mov
pop
and
lods
add
stos
lds
sti
xor
dec
jmp
push
loope
push
sbb
imulb
cld
mov
in
cmp
jge
fcomps
xchg
andl
push
mov
bound
aas
dec
lret
test
pop
push
mov
call
adc
sbb
and
test
jl
in
pop
jne
sbb
mov
jmp
ficompl
call
gs
inc
outsb
inc
mov
xorb
sub
sbb
cmp
or
loope
aad
mov
push
or
cs
xor
push
bound
cmc
push
mov
inc
sbb
roll
lret
and
cmp
jg
and
adc
mov
or
pushf
mov
outsb
mov
pop
xor
flds
decl
incl
nop
movsb
mov
sbb
pop
inc
test
decl
sub
pop
cli
adc
dec
imul
loopne
xor
mov
and
fstps
dec
aaa
dec
cmp
adc
and
sbb
adc
jl
cmp
testb
movsl
cmpsb
in
out
add
mov
and
add
sub
mov
or
notb
enter
lret
jecxz
nop
push
xlat
push
ret
insl
stos
ret
add
call
or
pushf
in
and
jb
jle
lock
popa
jne
ss
jp
pop
loopne
cwtl
repz
outsl
mov
dec
test
rclb
xchg
dec
test
je
inc
jl
ret
rcrl
nop
or
aam
xchg
or
add
mov
add
push
adc
mov
xchg
sbb
and
jno
andb
iret
rcrl
or
subl
jl
fstps
popf
adc
icebp
sbb
push
int
and
sub
int
femms
mov
push
jg
mov
pop
scas
adc
gs
xor
lock
nop
adc
add
push
ds
sub
and
dec
cld
pop
test
iret
shlb
in
push
mov
test
jb
outsb
test
mov
int
cmpsl
mov
pushf
mov
xchg
gs
push
lea
mov
push
rcrb
sbb
jl
cmp
mov
das
jne
add
lods
add
or
inc
push
cmovae
int3
cli
sub
cmc
rclb
mov
sbb
add
insb
push
das
cvtps2pi
jbe
popf
xchg
fildll
in
in
cmp
push
stos
push
jns
or
pop
mov
push
cmpsb
push
jns
xlat
mov
ljmp
sub
mov
push
add
pop
sbb
xchg
push
les
in
fwait
enter
test
imul
scas
mov
mov
jnp
les
addb
add
idivl
pop
movsb
cwtl
test
xchg
mov
mov
cmpsl
inc
daa
jecxz
dec
fldt
pop
inc
mov
sub
int3
js
inc
pop
xor
in
add
push
repz
aas
mov
popa
lds
push
les
es
mov
cwtl
pop
enter
loopne
mov
mov
inc
pop
lods
mov
pusha
mov
in
cmp
lea
jecxz
out
aam
xchg
out
cmp
lds
adc
enter
imul
xchg
lock
adc
xor
pushf
or
push
sbb
lahf
fistl
sbb
xchg
cltd
lret
jno
enter
dec
andb
push
or
pop
and
and
or
std
pop
leave
xchg
incb
addr16
loope
push
loopne
loopne
mov
aad
rolb
push
test
fdivrp
xorl
test
xchg
cmp
movsl
imul
test
sub
push
and
mov
dec
xlat
imul
or
xchg
cmpsb
xlat
icebp
mov
jnp
pop
inc
xchg
roll
push
pop
dec
test
mov
loop
push
pop
pop
inc
or
cld
lret
inc
aas
mov
jb
mov
jle
sbb
push
sbb
test
mov
mov
dec
fucomip
jo
cmp
jb
sbb
push
jl
pop
and
jne
mov
bound
rol
add
jecxz
xor
out
mov
icebp
cltd
fisubrl
rorl
lock
mov
je
ficomps
jns
mov
leave
imul
bswap
mov
sbb
mov
lock
imul
filds
push
pop
test
es
jle
sbb
mov
cli
loopne
nop
dec
ja
cmp
dec
sbb
mov
inc
fcom
cmp
mov
cmpsl
jecxz
pop
inc
outsl
mov
push
jns
sbb
aam
in
jne
push
push
dec
mov
or
mov
leave
mov
sub
mov
mov
icebp
cmpsb
mov
mov
cmp
lods
in
push
aas
fadd
aam
movsb
lock
loop
adc
lret
xorb
rcll
add
adc
repz
imul
inc
push
sub
stos
scas
daa
adc
pusha
mov
iret
mov
movsb
xor
addl
and
int
sub
push
adc
pushf
jg
movsb
hlt
cmc
sub
xor
movsb
push
dec
sub
pop
add
lock
adc
xor
and
mov
lcall
js
mov
mov
addr16
out
rcrl
ljmp
les
adc
mov
mov
repnz
stc
sbb
rolb
and
inc
cmp
push
mov
sub
jmp
mov
pop
fstpl
and
pop
mov
rcl
mov
outsl
or
xchg
cmp
xchg
sub
psubusb
mov
arpl
dec
and
push
inc
inc
push
mov
jl
sbb
pop
pop
pop
inc
mov
js
ds
ret
push
or
ljmp
je
xchg
xchg
sbb
pop
pop
mov
sub
sti
xchg
dec
lcall
and
and
cld
fiadds
notl
cwtl
mov
inc
fwait
or
xchg
mov
cli
rcll
or
push
or
imul
xchg
mov
xchg
lods
sahf
out
leave
dec
or
jle
je
sti
dec
jbe
and
ret
lret
dec
jg
inc
mov
hlt
adc
xchg
popa
lahf
popf
jg
mov
xor
nop
mov
mov
mov
bound
adc
inc
sbb
arpl
sbb
and
cld
fstpl
popa
mov
fsubr
cmp
rolb
inc
addr16
loope
mov
ja
pop
push
mov
mov
popa
adc
xchg
add
js
std
orb
loopne
mov
lods
adc
hlt
repnz
popf
mov
xchg
jno
dec
pop
push
or
bound
xor
inc
pop
dec
inc
std
pop
add
add
je
adc
out
add
loope
out
fcomp
js
add
push
icebp
pusha
movsl
sbb
call
pop
mov
cmc
pop
xchg
clc
adc
dec
push
mov
pop
sbb
nop
aas
rclb
mov
adc
les
roll
cmp
jne
loop
test
xorb
sahf
je
inc
cmpsb
gs
sbb
push
pop
pop
push
mov
adc
xchg
pop
mov
out
insb
je
filds
mov
arpl
idivl
in
inc
xor
icebp
add
jp
mov
jb
add
jmp
repz
test
insb
fsubp
jp
popa
sbb
pop
popa
or
nop
les
js
popf
int
pop
std
fsts
add
pop
jge
sub
push
dec
pop
jp
or
cmpsb
mov
pop
shl
cltd
mov
push
out
push
lahf
pop
ret
xor
rcr
cli
xor
sub
insb
and
sub
orl
das
pop
ret
xor
pushf
mov
pop
jecxz
add
inc
sbbb
sbb
and
or
mov
cli
icebp
out
or
xlat
fdivs
fiadds
ss
inc
mov
fwait
cmp
adc
or
and
and
out
mov
xchg
xor
je
cld
dec
pop
je
xchg
jge
outsl
hlt
hlt
push
xchg
mov
enter
cmp
pop
mov
lods
xchg
leave
push
xor
and
fcmovbe
imul
sbb
bound
test
out
pop
push
jl
xchg
adc
inc
hlt
aas
ja
mov
movsb
ljmp
mov
jbe
call
sub
loop
mov
or
ret
or
nop
fwait
cmpsl
iret
dec
jl
and
adc
pop
push
nop
daa
popa
shrl
sub
insb
pop
cmc
pop
pop
js
leave
push
jno
sub
jge
push
or
jmp
shlb
jns
jb
mov
jbe
and
aaa
loop
push
ljmp
mov
cli
lea
js
jge
cmp
jb
insl
leave
sub
add
out
sbb
adc
rcrb
imul
cld
in
sti
jp
cli
or
insb
das
jns
cmp
cmpl
adc
ljmp
add
push
pop
sub
sub
adc
insb
inc
adc
or
mov
cmp
cmpsl
faddp
xor
jo
mov
cmp
fdivl
shrb
fiaddl
lock
sub
int3
cmp
xor
mov
pushf
icebp
test
mov
or
jo
inc
fs
pop
xlat
pop
cmpsl
jge
iret
ret
sbb
push
test
mov
mov
cmpsb
adc
inc
je
mov
fcoms
and
subb
push
in
dec
repnz
xchg
adc
add
fwait
jecxz
push
and
xchg
and
daa
dec
test
push
cs
jno
mov
pushl
add
jnp
shr
fistps
in
sbb
out
ds
mov
and
loop
or
in
add
outsl
fimuls
sahf
fisubrl
repnz
xor
loope
icebp
insb
adc
or
sbb
xchg
pop
pop
mov
mov
cmp
cmp
in
add
out
pop
pushf
js
or
xlat
das
add
sbb
das
push
mov
iret
sub
imul
push
push
daa
add
ss
out
dec
sbb
inc
rclb
sbb
movsl
movsl
scas
rorb
je
ret
lcall
xchg
sbb
mov
jp
sbb
xor
add
pop
sbb
mov
cli
and
int3
arpl
inc
push
lock
add
cmpl
dec
cmp
jecxz
inc
mov
push
testb
insb
sahf
adcb
lea
jg
insl
gs
scas
insl
and
cmp
roll
jge
mov
stos
addl
fnclex
dec
inc
cmp
clc
xchg
movl
fdivrl
scas
cwtl
or
in
test
mul
in
push
mov
pop
jnp
fisttpl
call
outsb
or
pop
dec
jne
insl
stos
testb
mov
loopne
mov
aad
test
cli
imul
ds
lret
push
mov
lea
scas
pop
dec
jl
and
sbb
stc
cmpsl
mov
fs
or
pusha
lods
jae
int3
nop
sarb
add
lock
gs
adc
addr16
adc
and
dec
pop
cmp
mov
xchg
xchg
movsb
pop
fisubl
lods
mov
xor
pop
mov
xorl
inc
xor
pop
clc
cmp
xor
mov
xor
mull
push
mov
div
out
aad
shrb
bswap
mov
dec
mov
sbb
aas
mov
and
push
mov
popa
add
mov
sub
jecxz
mov
cmpsl
imul
inc
push
push
xchg
movsl
dec
push
jg
pop
ljmp
pop
pop
cmp
mov
js
jl
jmp
rclb
xchg
movsl
jne
scas
cmc
cmpsb
cltd
nop
movsb
lahf
pop
or
add
pop
add
pop
inc
mov
pop
xlat
or
test
ds
jecxz
popa
imul
add
icebp
dec
mov
sub
js
ss
mov
push
xor
test
fdivrl
xchg
fs
push
out
test
push
xchg
arpl
adc
inc
dec
les
xchg
or
popl
loop
mov
subl
push
cld
dec
sbb
or
repnz
or
test
aam
insb
mov
addl
outsl
or
std
jge
jp
lock
sub
xor
movsl
mov
popf
push
push
clc
scas
dec
pop
stos
mov
ror
shrl
xor
push
cmp
jle
push
dec
pop
jle
xlat
mov
cmp
movsb
inc
aaa
jle
daa
or
mov
daa
cmp
ljmp
in
and
aam
nop
xor
adc
test
rcrl
pop
xchg
mov
push
mov
mov
add
sub
scas
jno
push
dec
dec
push
sub
enter
adc
mov
lcall
js
stos
or
scas
push
and
push
scas
pop
sub
aad
cwtl
push
push
dec
call
aam
mov
sbb
inc
lock
push
ret
dec
ret
mov
test
sahf
cld
push
pop
inc
pop
and
call
and
mov
dec
out
and
hlt
jno
dec
add
imulb
add
loopne
push
rol
test
sar
xor
ds
push
in
mov
dec
insl
pop
add
test
push
fmuls
notl
inc
aam
cmp
mov
push
test
push
lret
mov
scas
mov
jmp
mov
pop
ds
xchg
xchg
lds
mov
les
lods
ljmp
shlb
dec
clc
testl
mov
push
pop
sbb
popf
sub
insb
cmp
adc
mov
sub
xor
es
frstor
stos
push
jae
stos
sub
mov
mov
cwtl
cmp
stos
loop
push
or
inc
aam
insl
push
dec
popa
orl
sar
push
daa
dec
lock
ljmp
or
pop
jne
mov
adcl
cmc
push
jb
jno
cld
dec
push
icebp
cli
ja
icebp
call
adc
test
dec
fsubrl
fwait
xchg
pop
add
mov
fistps
mov
push
in
sub
pop
pusha
mov
daa
je
adc
inc
scas
fs
mov
inc
xchg
push
inc
mov
fcomip
rorl
xlat
jle
add
pop
mov
cmpl
xchg
cmpb
sub
mov
adc
xchg
or
test
lahf
scas
add
mov
sub
loop
mov
push
iret
sbb
mov
mov
push
cmpsl
mov
cld
or
xor
loop
sarb
js
push
ja
stos
data16
ja
push
dec
sahf
adc
pop
adc
pop
push
dec
leave
jmp
lret
repnz
pop
popl
cmp
sub
aaa
push
jns
outsb
addb
cmp
addl
mov
test
or
filds
cmpsl
lods
inc
leave
mov
insb
cmc
sub
mov
outsb
imul
div
mov
pop
loopne
inc
les
out
test
lock
xchg
insl
pop
lea
test
and
xor
in
and
push
adc
das
push
mov
test
push
hlt
mov
pop
out
fs
adc
or
mov
out
ficoml
push
push
jo
int
sub
inc
xlat
push
xchg
rcrb
push
outsl
cmp
push
ljmp
clc
fstpl
sahf
xor
shll
dec
inc
mov
mov
sub
jmp
imul
push
jnp
mov
fnsave
xor
pop
test
and
ds
call
xorl
imul
shlb
in
ret
pusha
int3
inc
inc
aas
fmulp
mov
add
test
add
jno
mov
lea
sbb
xchg
fadds
push
pop
pop
push
cltd
dec
repnz
loopne
lock
mov
in
mov
lret
mov
sbb
fnstcw
sbb
lret
mov
in
int3
icebp
bound
mov
jl
mov
jle
pop
popf
fsubr
out
push
clc
push
or
add
or
ljmp
mov
gs
fistps
int3
push
inc
mov
mov
adc
shlb
push
push
loope
push
xor
jge
fldenv
xchg
jno
mov
hlt
cli
inc
push
iret
push
inc
xlat
push
and
cmp
addl
add
mov
in
les
sub
clc
xchg
orl
data16
fistpl
mov
mov
add
repnz
ss
mov
lods
lock
test
and
fsub
insb
push
aam
mov
dec
pop
cmp
sbb
push
rcrl
push
cmp
jb
or
sbb
push
insb
mov
dec
orb
mov
jno
push
rcll
pusha
jp
mov
xor
popf
test
loope
xchg
jmp
movsl
xchg
cmp
lock
xchg
inc
lea
movsl
mov
cld
jge
shlb
adc
jge
imul
ljmp
insl
icebp
cmc
adc
aam
push
ss
test
add
inc
mov
stos
mov
test
out
ret
jae
jmp
push
cli
inc
sbb
push
daa
pop
jge
pop
mov
pop
add
adc
movsb
cs
mov
lods
sarb
inc
cmp
adc
ds
sbb
cmp
loop
nop
push
cmp
fisttpl
pop
je
dec
pop
leave
mov
or
popf
das
or
js
ljmp
xor
cmpl
insb
mov
cmpsb
mov
mov
adc
lock
jo
inc
inc
popf
add
pop
stos
mov
xor
or
dec
sbb
sbb
aas
xchg
inc
dec
jge
daa
push
testl
add
mov
or
incb
shlb
jo
sub
xor
sbb
inc
pop
push
sti
jne
hlt
xor
sub
lock
movsb
push
roll
in
into
add
push
int
mov
sub
dec
jg
ret
je
stos
arpl
and
sbb
int
or
dec
pusha
loop
stos
xchg
loopne
add
fadds
mov
ret
adc
je
push
ja
and
inc
notl
push
lods
sub
push
or
mov
dec
xchg
outsb
scas
das
movsb
and
test
dec
insb
dec
sbb
push
cmp
sbb
jbe
sub
pop
jo
shl
movsb
xor
daa
cmc
push
xchg
pop
mov
push
int3
sti
mov
fs
cli
sub
or
mov
mov
int3
movsb
cmc
inc
repz
popf
lock
les
xor
icebp
jns
cmp
scas
adc
adc
out
orb
mov
push
inc
out
xor
sahf
mov
push
shll
lods
sbb
cmpsl
insw
inc
arpl
adc
repz
adc
insl
inc
xchg
push
inc
inc
pop
icebp
push
lods
push
cmpsl
or
dec
or
jle
mov
loopne
movsb
jo
mov
inc
cs
and
jl
fnstenv
ja
mov
dec
lret
jmp
sub
add
jo
pop
bound
in
dec
jmp
test
sbb
cmpsl
ja
add
aas
loop
test
jmp
pop
call
arpl
xchg
cmp
cmp
push
cwtl
imul
xchg
or
iret
movsl
test
dec
mov
je
rolb
fmull
jecxz
cmc
inc
sub
add
inc
dec
addr16
jmp
sar
in
test
aas
cmp
ret
in
insb
dec
fsubrl
adc
push
es
andl
or
pop
push
arpl
push
xor
insl
xchg
cmpb
pop
stos
xchg
push
xchg
xor
cmpsb
adc
push
lret
ljmp
cmpsl
push
repz
stos
lods
inc
sbb
shlb
cmc
bound
jo
negl
adc
mov
and
mov
scas
dec
dec
xor
call
test
and
push
outsl
xor
fimuls
xchg
xchg
icebp
add
sbb
rcrb
rorl
insl
mov
arpl
sbb
inc
mov
sub
inc
cmp
shll
in
aaa
jnp
pop
lods
scas
adc
aad
add
mov
js
push
les
sbb
push
mov
pop
jle
pusha
test
push
jbe
shlb
cmp
fidivs
sub
xchg
clc
mov
mov
scas
jbe
dec
pop
stos
loopne
fsubrl
jb
pop
hlt
xchg
inc
bound
ljmp
push
cwtl
mov
xchg
dec
mov
call
stos
sbb
pop
stos
sti
cmpsb
inc
xchg
sub
pop
jno
cmp
int
and
push
or
push
jl
add
cmp
mov
movsb
test
lcall
inc
pop
sub
pop
lds
mov
dec
mov
lret
jno
jmp
jae
xor
pop
push
mov
decl
xchg
and
shlb
cmp
fwait
clc
and
and
insb
xor
fldcw
sub
or
or
push
mov
lret
test
mov
sub
xchg
dec
popf
lods
mov
and
into
add
lret
daa
mov
add
sub
out
fimuls
pop
mov
in
stos
and
xchg
fistpl
xchg
jl
es
inc
fisttps
cmp
xor
into
iret
lds
int
inc
xchg
xor
clc
lods
mov
les
cmp
or
sub
xchg
and
jmp
lret
cmp
mov
aaa
mull
inc
call
cld
push
mov
and
loopne
mov
popa
adc
js
jb
xor
std
jl
mov
dec
mov
mov
cmp
push
mov
xchg
mov
in
test
sbb
movsb
cmp
inc
arpl
xor
ret
pop
sbb
inc
rcrb
daa
lock
test
mov
sub
xchg
xor
cmc
dec
push
or
pop
dec
push
arpl
int3
ja
ret
test
dec
movsl
mov
push
sbb
inc
aas
push
push
call
cmp
mov
and
adc
arpl
or
pop
adc
mov
scas
mov
mov
adc
pop
out
and
lcall
push
push
mov
insl
add
and
xchg
jmp
repnz
fimull
xchg
pop
cmp
mov
mov
mov
or
mov
mov
sbb
lret
push
sub
in
movsl
or
mov
testb
adc
jns
clc
xchg
ret
push
in
insb
mov
pop
aaa
adc
push
test
fcomp
das
movsl
shr
jl
out
add
or
cmc
les
pop
ljmp
test
loopne
and
addb
jp
mov
in
cld
and
push
cltd
push
rorl
sbb
push
mov
push
std
pusha
sub
mov
pop
mov
fidivs
movb
xchg
addr16
sbb
out
pushf
xor
push
and
je
pop
sub
jg
pop
push
pusha
mov
pop
fistpll
es
daa
out
mov
xchg
sub
mov
push
mov
mov
cmp
xchg
rcrl
sbb
sub
notl
das
mov
xor
jo
xchg
call
jno
push
rclb
adc
sbb
push
sub
and
push
mov
scas
aad
xchg
jmp
imul
aam
mov
mov
inc
fiaddl
adc
mov
mov
rorb
adc
jge
jp
sbb
add
psrad
xchg
mov
ss
or
int3
mov
inc
out
sti
rclb
imul
psraw
movsb
mov
jo
pop
pop
pushf
imul
ds
aas
cmp
cmp
inc
pop
pop
mov
pop
fdivs
loope
fdivrs
movsb
jp
jg
adc
in
aas
dec
call
fdivl
or
insl
das
pop
bound
dec
popf
xchg
mov
sbb
sbbb
das
pop
add
aam
insb
sahf
mov
mov
cmp
das
xchg
pop
adcb
aad
push
pop
aaa
test
adc
push
outsl
leave
out
nop
xchg
fsubp
adc
mov
cmpb
int
add
dec
aam
fisubl
insb
rclb
mov
mov
in
rolb
sub
inc
jmp
push
push
mov
fcoms
lcall
adcl
dec
jmp
fcoms
dec
or
jmp
push
aas
out
sub
aaa
test
faddl
movsl
inc
jmp
pop
fdivrs
mov
adc
mov
shrd
shl
inc
sub
push
ja
jmp
imul
pop
dec
mov
cs
ljmp
loope
dec
clc
pop
push
push
rcrl
dec
add
xor
push
sub
outsl
cmc
loopne
sbb
xchg
xchg
iret
cs
mov
mov
ficoms
sbb
aad
out
aam
arpl
cmp
or
mov
and
jb
hlt
cmp
insb
lock
sub
imul
jg
lods
sbb
test
cmp
add
mov
out
shld
enter
sbb
mov
clc
inc
daa
enter
xlat
pop
pop
fistpl
clc
cmp
jle
sbb
mov
dec
shrb
jg
add
pop
adc
and
scas
or
loope
inc
js
or
cli
adc
inc
shll
mov
fwait
xor
cmp
mov
aas
and
lahf
je
cmp
push
mov
stos
and
xlat
hlt
lock
push
sub
adc
js
lret
and
cwtl
push
loope
cmp
fstpl
pop
mov
or
mov
adc
mov
addl
jle
jnp
and
inc
test
inc
add
sbb
movntps
dec
insl
and
sbb
xchg
ja
nop
jne
xor
push
flds
adc
cmp
cmp
fmuls
add
and
sbbl
and
or
mov
lock
sar
testb
lea
xor
fildll
push
bnd
dec
mov
adc
mov
dec
test
movsb
addr16
mov
xchg
push
sbb
cmpsb
pop
adc
push
movb
arpl
push
jne
int
fsubl
insl
js
xchg
pop
xchg
jle
xchg
mov
cmp
sub
iret
mov
adc
pop
cmpsb
dec
push
dec
sbb
and
xchg
das
mov
jns
xlat
ss
add
jb
add
shll
xchg
xchg
lcall
daa
test
dec
mov
ds
xor
scas
mov
mov
ret
dec
push
pop
into
inc
sbb
inc
imul
add
adc
push
js
cmc
mov
jo
mov
in
in
mov
je
test
push
lock
pop
insl
cli
scas
iret
ret
cli
insl
add
stos
inc
orl
or
mov
xchg
lret
mov
in
repnz
scas
mov
mov
pop
outsb
xor
not
push
adc
mov
out
mov
sti
lods
shll
aas
cmp
gs
xchg
cmpsl
cmp
rcl
lods
push
or
add
inc
push
push
shlb
loope
pop
es
fnstsw
lods
push
pop
jmp
mov
jnp
mov
or
int
repnz
xchg
sete
sbb
push
jne
call
add
mov
mov
outsb
les
pop
dec
mov
xor
jl
lcall
xor
jnp
in
ja,pn
dec
cmpsb
rcrb
or
loop
sbb
das
nop
dec
jg
loopne,pt
std
mov
das
add
nop
jo
wbinvd
ja
and
scas
inc
dec
inc
pop
cmp
loopne
sbb
jmp
pop
je
mov
jmp
movsl
inc
sbb
je
xor
add
fildl
jp
mov
es
add
fsub
jp
mov
or
fs
dec
loopne
ret
inc
ljmp
out
mov
pextrw
adc
test
scas
pop
and
sar
mov
sbb
add
and
mov
ds
jl
and
in
inc
mov
or
aam
enter
cmp
sub
jl
and
sub
push
and
imul
push
je
mov
shrb
sbb
call
xor
jmp
test
push
sbb
jns
cwtl
inc
sar
imul
loop
xchg
mov
push
inc
push
es
xor
jecxz
mov
loopne
xchg
loopne
outsb
and
icebp
out
shll
adc
pop
adc
pop
cmp
add
movsl
jo
ja
mov
or
add
inc
jnp
pop
dec
call
fnstcw
xor
movsl
add
xchg
jmp
sbb
adcb
mov
sbb
in
add
add
sti
inc
jbe
mov
sbb
fsubs
xchg
cmp
hlt
and
xchg
xchg
lea
movsb
cltd
cwtl
or
push
jnp
mov
inc
or
push
test
mov
daa
and
fcmovbe
jmp
xchg
sti
or
pop
jp
hlt
and
es
in
cmp
call
test
and
inc
jno
mov
mull
sbb
shrb
femms
repnz
mov
inc
ret
sbb
icebp
inc
call
xor
repz
or
popa
mov
cmpsl
mov
js
mov
lea
cli
pop
jno
mov
or
cli
adc
ret
addr16
mov
ljmp
pop
pop
fcomps
pop
xchg
out
mov
jge
subb
imul
mov
pushf
ret
sbb
cs
ss
mov
ss
jo
jo
push
sub
cmp
fists
mov
jecxz
mov
cmpsb
sbb
mov
push
sbb
cmp
pop
add
xchg
mov
in
aas
loop
insb
adc
push
ja
mov
fdivl
popf
outsl
inc
sbb
push
std
jne
push
lcall
into
or
mov
cmp
and
push
jp
mov
popf
adc
pop
sub
or
mov
fnstsw
and
mov
adc
or
xchg
and
insl
dec
inc
iret
adc
rcrl
xchg
loopne
test
or
add
xchg
gs
inc
sbb
inc
and
shll
dec
mov
ss
add
icebp
fmuls
lods
lods
mov
loop
xor
pop
push
cli
aad
ret
dec
idivl
inc
fidivl
xchg
mov
loopne
inc
leave
gs
and
inc
dec
and
cmp
rorl
out
outsl
ja
sti
sub
push
push
pop
or
mov
stos
leave
stos
adc
and
lret
sbb
pop
sbb
out
xchg
insb
pushf
in
push
arpl
jmp
mov
jbe
loope
dec
xor
dec
nop
push
dec
sub
push
inc
loopne
cmp
shl
jge
enter
inc
mov
adc
cmp
adc
jbe
cmpsl
inc
inc
lret
addb
or
loop
movb
sub
sbb
insb
mov
xchg
sub
cmpsb
and
in
adc
int
shlb
jecxz
out
sub
jmp
inc
inc
pushf
cmp
outsl
push
in
loope
rcl
jbe
push
leave
xor
sbb
mov
gs
ss
inc
mov
test
stos
lods
popa
adc
ljmp
pop
bound
mov
dec
mov
in
mov
shll
gs
inc
mov
jp
or
sbb
jecxz
cmp
testl
push
lock
jbe
aaa
cmc
push
mov
mov
xchg
mov
inc
cmp
pop
add
and
mov
insb
rclb
ljmp
sahf
mov
lcall
jae
test
out
repz
roll
mov
rcr
and
lret
inc
ds
cmp
pop
cmp
and
ret
fisubrl
imul
ret
cs
jle
add
inc
maskmovq
negl
xor
loope
cwtl
call
add
ljmp
push
into
lock
les
jecxz
rolb
out
jmp
ds
test
push
movsb
mov
std
add
mov
push
cs
sub
pop
aad
cli
std
enter
in
psubd
test
push
xchg
out
rclb
scas
jae
and
jge
pop
cmp
add
inc
inc
mov
sub
ds
lock
and
push
mov
lods
imul
outsl
pop
or
ja
and
push
das
pusha
mov
push
mov
pop
add
incb
adc
fidivrl
lret
push
shrb
xor
cld
mov
push
xchg
dec
mov
fbstp
je
mov
cmp
jl
and
jp
add
lods
aas
mov
leave
rolb
sbb
std
inc
ja
test
xor
std
mov
rclb
ljmp
shrb
aad
imul
mov
jle
lea
inc
and
out
out
xor
fwait
pop
jge
lahf
push
cs
cmp
lret
mov
ret
push
jmp
clc
xor
int3
push
cmp
clc
or
adc
pop
or
adc
ret
push
xor
lea
ret
mov
imul
lcall
dec
mov
inc
rcll
addb
fwait
add
mov
lock
add
mov
std
out
cwtl
mov
lahf
cli
ret
add
mov
das
int3
incb
adcl
xchg
ljmp
push
movsl
add
mov
loope
orb
and
dec
test
xchg
or
pop
push
xchg
dec
sarl
adc
movsb
cmpsb
xchg
pop
adc
sub
sti
push
movsb
mov
push
xor
adc
jae
cmp
pushf
js
and
mov
dec
fsub
in
rol
jnp
sub
leave
ss
jl
cli
mov
jno
and
in
adc
popa
sbb
pop
aas
xchg
ffreep
inc
and
loopne
outsl
ss
test
enter
sub
mov
inc
ret
popa
sahf
stos
push
sbb
imul
pop
and
jecxz
shrl
and
inc
add
or
dec
jno
fs
add
in
xchg
xor
gs
sub
aad
adc
mov
jp
or
rorl
and
push
sbb
or
add
mov
push
or
adc
incb
mov
sbb
lea
mov
mov
add
repnz
cmp
sub
cmc
lock
in
jb
mov
call
and
rcrb
pop
es
popa
jge
stos
dec
mov
aam
cmpsl
pop
loope
fbstp
sbb
jmp
repz
pop
mov
aaa
pop
or
xchg
mov
test
test
xor
pusha
call
jmp
mov
jbe
cmp
add
ret
cmp
iret
out
xor
inc
or
mov
xchg
insl
outsb
push
push
dec
push
test
add
call
sub
or
in
or
in
add
cs
aam
out
adcb
pop
push
popf
dec
dec
test
popa
sub
xchg
je
aam
inc
cli
xchg
adc
mov
jo
cmp
mov
cltd
dec
inc
jp
imul
movsb
mov
fildl
and
adcb
mov
js
not
pop
clc
push
leave
test
pushl
popf
dec
movsb
or
add
jmp
out
testb
sbbl
inc
jg
aaa
pop
imul
fwait
mov
insl
sub
xor
mov
adc
xor
mov
jb
shr
pop
and
sub
pop
addl
inc
mov
gs
loopne
les
out
test
adc
out
add
xor
adc
or
das
outsb
xchg
loop
push
loope
or
jne
mov
pusha
xor
clc
xor
aas
jecxz
xor
mov
sbb
inc
movsb
or
adc
bound
mov
mov
repz
outsl
inc
mov
cmp
push
xor
pop
ret
scas
adc
mulb
lds
inc
sbb
mov
and
scas
push
gs
psubsb
sbb
push
jg
sbb
icebp
ss
mov
mov
pop
push
test
out
notb
add
add
cs
int
xchg
or
aam
push
lock
lods
adc
pop
pop
push
movsl
dec
loopne
jp
scas
incb
movl
push
mov
inc
sbb
lret
xchg
clc
lret
push
dec
ret
xchg
dec
lods
cmc
call
push
dec
or
in
test
jmp
cld
mov
out
test
mov
push
cmp
mov
out
mov
mov
dec
cmpsb
pop
insl
aam
out
jecxz
stos
leave
dec
xchg
or
cs
in
in
imul
jno
add
cli
lods
push
fiaddl
mov
mov
add
test
mov
outsl
inc
xchg
mov
adc
sbb
push
lock
or
pop
mov
mov
outsl
dec
mov
lea
pop
jnp
daa
or
pop
je
mov
push
mov
sub
dec
sbb
nop
fs
das
lods
jp
movsl
mov
jp
cs
or
mov
orl
pusha
aas
daa
push
jnp
decb
test
add
pop
inc
xchg
inc
sbb
js
push
sbb
mov
mov
push
scas
mov
rolb
adc
adc
addr16
dec
pop
sub
adc
pop
imul
mov
xchg
mov
pop
popa
adc
pop
decl
ret
clc
rcrb
inc
dec
sub
dec
sbb
add
add
lods
mov
mov
sub
jle
jmp
arpl
out
sbb
jbe
icebp
and
pusha
add
fistl
mov
and
nop
and
inc
pop
inc
cld
icebp
adc
mov
and
test
and
cmp
nop
cmpsb
add
jmp
mov
adc
push
cmc
jno
or
dec
xor
sub
adc
inc
loopne
ja
push
fisubs
or
mov
xchg
or
outsl
xor
xchg
out
mov
lods
mov
inc
jno
mov
xor
mov
mov
ja
cmpsl
jmp
in
daa
test
jmp
pop
xor
jl
mov
outsl
int
mov
adcb
inc
in
add
add
push
icebp
lds
cmp
pop
cs
faddl
movsb
and
lock
loopne
and
aad
push
adc
xorl
fsqrt
stos
dec
xchg
pop
pop
orl
shlb
mov
sub
in
js
cmp
xchg
xor
enter
xor
shrl
out
xchg
add
insl
push
and
stos
jo
and
ljmp
clc
imul
dec
jge
push
cs
xchg
shll
fcmovnb
xor
adc
dec
icebp
loopne
mov
sub
orl
or
or
cmp
xchg
inc
sub
faddl
stc
loop
pop
sbb
cmc
pop
inc
lret
mov
add
adc
jo
jmp
dec
ds
xor
cmpsb
test
adc
jo
jg
fisttpll
in
aam
int3
loopne
mov
sub
sub
sbb
cmp
mov
outsb
add
fs
mov
and
sahf
jnp
adc
and
mov
stc
shl
incl
inc
mov
push
sbb
das
xchg
sub
push
mov
shlb
pop
rorb
roll
test
rcll
movntq
dec
loope
xchg
mov
add
xchg
jl
fdivl
dec
stc
cmpsb
dec
jo
adc
movsb
and
ret
push
loope
push
dec
sbb
scas
and
jo
push
xchg
pop
xor
cmpsb
mov
jno
dec
jmp
mov
and
and
mov
test
repz
mov
loop
loope
jg
loopne
stos
shlb
push
jmp
adc
inc
pop
int
xor
outsb
add
je
insb
jbe
les
ds
adc
lea
test
and
shll
cwtl
bound
adc
mov
inc
sub
dec
cmp
push
bound
push
and
insb
rcll
aas
lea
ret
hlt
xchg
cmp
lods
fcmovnb
sub
out
mov
adc
sub
rorb
rorb
add
xchg
mov
xchg
sub
lods
push
in
aad
fadd
add
or
shl
pop
movsb
in
xor
pop
scas
or
pop
inc
or
mov
in
or
test
repnz
mov
mov
insb
pop
call
ret
test
faddl
cmp
mov
push
xor
fs
in
in
xchg
mov
mov
fnstcw
adc
icebp
ret
roll
ret
in
adc
scas
push
imul
xor
test
out
imulb
insl
rcrb
pop
xor
or
cmpsl
mov
imul
pop
movsl
les
movb
movsl
add
xchg
jns
push
fs
push
sbb
push
inc
mov
jecxz
push
sbb
ds
cltd
arpl
int3
add
pop
lret
add
insl
and
sbb
scas
cltd
mov
in
and
sarb
add
push
sbb
jae
dec
push
in
push
sbb
test
xchg
fyl2xp1
dec
jg
rolb
or
pop
xor
outsl
dec
lds
and
cmp
movsb
push
shlb
jl
loop
arpl
or
or
sbb
fsubr
popf
dec
xlat
test
mov
movsl
dec
pop
xor
fsubr
pop
jo
mov
aad
add
shlb
lods
pop
pop
out
mov
jmp
loop
pop
add
sbb
std
sbb
mov
xor
cmpsl
aam
loopne
add
jb
push
mov
xchg
mov
inc
scas
loop
adc
xor
add
xchg
hlt
into
ss
add
movsb
lret
lock
cmp
xor
mov
jecxz
pusha
fbstp
adc
inc
add
xor
sarl
mov
lcall
adc
dec
mov
jp
icebp
pop
xor
and
lahf
jp
test
outsl
scas
roll
and
jne
ja
cmpsb
cmp
loopne
les
adc
std
movsb
sti
test
or
pop
push
jecxz
inc
mov
and
mov
icebp
xchg
fdivrl
lret
xor
mov
push
loope
enter
add
xor
test
adc
call
sub
cmc
xor
aad
mov
out
xchg
dec
fwait
dec
mov
cmp
popf
js
sub
movsl
negb
negb
and
inc
pushf
xor
insl
push
push
jle
orl
pop
jge
jmp
popa
cwtl
dec
push
scas
push
int
sub
cmpsl
dec
xchg
daa
sub
test
out
fidivrl
xlat
js
xor
adc
lds
add
jmp
imul
imul
mov
dec
loopne
push
sbb
sbb
stos
inc
xor
jns
mov
xor
or
scas
loope
daa
and
or
push
and
fwait
in
fstl
sub
arpl
xorb
jo
inc
xchg
divb
mov
in
add
pusha
dec
mov
movsb
testb
addb
add
push
ljmp
jl
stos
sbb
xor
nop
sub
movsl
inc
pop
adc
ret
pop
dec
cli
xor
dec
mov
out
daa
pushf
push
adc
aaa
jb
loope
push
aas
icebp
mov
test
movsl
jg
stos
mov
xchg
fwait
dec
cmpsb
popf
mov
popf
xor
repz
cmc
pop
adc
icebp
mov
lret
je
test
fidivl
dec
pop
adc
inc
jg
out
sbb
sbb
hlt
mov
icebp
mov
movsl
aam
dec
ljmp
cmp
aam
and
popa
sub
ds
push
lret
adcb
inc
adc
daa
mov
sub
pop
jno
add
push
mov
imul
adc
add
test
femms
sbb
cmp
out
inc
outsb
adc
stos
or
adc
mov
push
or
dec
lahf
incl
loop
ret
adc
and
loop
pop
nop
scas
mov
loopne
jno
ljmp
aas
insb
and
or
lcall
int
stc
add
mov
test
pop
cwtl
push
fisubrl
ss
lahf
xor
add
bound
jne
mov
pop
ljmp
cli
mov
dec
packuswb
daa
rorb
and
cmp
and
jb
and
push
xchg
repnz
mov
imul
insl
in
pop
ljmp
mov
pop
loope
add
pop
or
jae
lcall
lock
dec
xor
sbb
mov
sbb
cli
adcb
mov
add
pop
mov
and
int
dec
andb
popf
mov
inc
sbb
mov
rcrb
movsb
shlb
fwait
imul
jle
jb,pn
cmp
cmp
in
sbb
hlt
push
and
icebp
push
nop
rorb
mov
in
aaa
push
rcrb
add
stos
xchg
add
stos
pusha
xlat
inc
push
std
call
add
xor
daa
mov
jmp
sub
jl
outsb
and
xchg
test
jmp
jo
pop
push
mulb
aad
xchg
jle
fnstcw
xchg
push
loop
sbb
mov
dec
sbb
push
loopne
jo
push
pop
dec
mov
inc
pop
imul
stos
cmp
mov
adc
fcmovbe
fnstsw
sub
lods
add
scas
cmp
aas
cmp
popf
cmp
jecxz
cwtl
jmp
inc
xor
aaa
hlt
xor
mov
xchg
decb
add
aaa
daa
icebp
inc
scas
sub
xor
gs
imul
loope
mov
inc
cwtl
xor
js
add
movsb
adc
bound
rcrb
sti
xchg
adc
xchg
and
mov
scas
mov
popa
mov
xor
pop
fcomp
test
xchg
inc
clc
mov
pop
push
mov
imul
dec
les
mov
fwait
adc
inc
loopne
xchg
cmpsb
pop
sbb
dec
aam
or
rolb
sbb
inc
jo
push
sbb
cld
push
push
adc
mov
mov
xor
mov
mov
cmp
in
push
sub
jecxz
or
shll
out
fmull
inc
test
scas
add
push
sbb
lock
int
fwait
push
mov
inc
jmp
xchg
cmp
nop
movsb
popf
jmp
pop
mov
mov
or
pop
dec
daa
cs
jg
inc
outsl
es
hlt
sub
arpl
pop
adc
repnz
pusha
movsl
fiadds
jge
push
pop
rolb
jmp
pop
ficoml
std
inc
mov
mov
xor
clc
or
ds
xchg
ja
dec
imul
fldl
out
xchg
jp
push
xchg
lcall
mov
push
or
and
sar
add
lea
or
sub
dec
mov
sub
loope
pusha
popf
lret
pop
jl
adc
loopne
add
cmp
dec
sti
js
daa
and
test
sbb
cmc
psubq
mov
jl
daa
mov
js
jp
inc
mov
xchg
je
in
push
pop
xor
adc
push
jecxz
push
mov
lods
pop
sti
mov
sub
addr16
mov
test
lock
jne
ficoml
push
ja
cmp
lret
cmp
ljmp
bound
por
inc
or
push
or
mov
mov
in
xor
test
or
dec
rolb
leave
jle
sub
pop
sbb
imul
and
fildll
inc
cmp
xor
cwtl
jbe
jge
pop
pop
insl
inc
sub
faddl
mov
cmp
sbb
pop
cmp
movsl
jne
and
and
jns
lahf
cli
shll
aaa
add
add
and
push
add
jecxz
clc
mov
pop
icebp
movsl
add
mulb
and
sti
call
ss
and
sbbl
mov
out
insl
mov
xchg
sahf
bound
cmc
aas
cmpsl
or
sbb
push
icebp
cmp
aam
mov
adc
fstpt
jno
fxch
outsb
xor
ret
leave
les
sbb
push
mov
inc
aam
inc
scas
inc
scas
outsb
pop
rcll
or
or
in
and
mov
add
outsb
jns
lcall
sbb
in
xor
cmpsb
aaa
arpl
xchg
repz
cmc
mov
mov
out
push
test
pusha
pushf
out
pop
dec
inc
addl
into
dec
scas
mov
dec
add
xchg
pop
js
fs
cmp
and
ret
pop
rcrl
test
jmp
pop
mov
push
jge
push
mov
sub
repnz
xchg
lods
cmp
or
fimull
pop
mov
mov
test
mov
jge
lods
cmp
stos
ja
adc
fcoms
imul
outsl
ret
ljmp
outsb
push
aam
mov
bound
int
xchg
cmp
pop
notb
daa
loopne
jecxz
mov
loopne
pop
clc
outsl
fisubrs
cmp
mov
mov
jecxz
xlat
mov
pop
or
and
adc
add
imul
mov
cmp
jle
add
dec
cwtl
addb
jecxz
mov
mov
push
cmp
js
add
xor
xor
js
dec
lods
mov
in
and
mov
mov
imul
sti
jp
adc
in
cmpsl
xchg
jbe
and
mov
out
mov
div
jbe
fdiv
xchg
add
mov
push
mov
sub
jecxz
cmp
pop
add
jecxz
push
dec
mov
mov
dec
sub
cmc
jl
dec
push
pop
mov
shlb
sbb
aad
mov
rcrb
out
js
pop
movsb
adc
mov
push
scas
out
push
push
ja
clc
lds
std
pop
mov
jl
or
jne
inc
mov
xor
aad
push
mov
xchg
outsb
push
pop
rorl
popa
dec
inc
push
pop
ss
pop
adc
sbb
add
jo
jl
inc
mov
sbb
orb
xor
daa
jp
pop
aas
cmp
dec
int3
sbb
and
lea
adc
and
lds
das
sub
dec
cmp
jno
jnp
cmp
add
addl
daa
sub
frstor
jecxz
sub
mov
dec
jo
sti
push
fistl
xor
andnps
pusha
sub
inc
pop
mov
nop
int
nop
push
dec
jne
mov
in
cmp
cmc
push
popa
in
leave
fdivrs
mov
jno
mov
cltd
aad
pop
xor
in
sbbl
mov
loope
sahf
add
mov
shlb
or
mov
push
fnstsw
movsb
push
call
mov
les
je
sarb
pop
sub
dec
call
testb
xor
cmp
jnp
test
push
into
or
adc
imul
mov
jecxz
inc
lods
mov
lods
sbb
pop
jbe
dec
sub
jmp
mov
add
in
dec
xlat
mov
cmp
les
push
inc
cmc
xchg
push
stc
je
push
scas
sub
xor
mov
in
out
rorl
sbb
pop
mov
test
xor
and
jb
test
xor
adc
in
sbb
mov
xchg
jbe
out
mov
sub
add
imul
fbld
and
inc
loop
insl
fiadds
cmp
stos
mov
sub
flds
mov
push
out
add
push
lcall
movsl
hlt
mov
hlt
bound
inc
push
mov
stos
rolb
repnz
push
inc
mov
or
xor
arpl
loop
xor
aas
push
addr16
je
fucomi
push
addr16
and
ljmp
dec
jg
sbb
out
xchg
je
pop
dec
xor
and
imul
jmp
push
jbe
mov
or
adc
jne
ret
bound
cmp
pop
test
sub
jb
pop
dec
rcrl
push
push
insl
pushf
outsb
in
jno
mov
fcomps
inc
mov
ljmp
push
daa
mov
pop
test
sahf
outsb
je
inc
in
sub
push
aam
or
gs
in
mov
sbbl
std
out
cmpl
jmp
hlt
leave
mov
in
jp
pop
and
and
and
icebp
push
ror
add
shll
inc
pop
sbb
test
std
and
mov
xor
dec
xchg
push
shr
jno
pop
sub
lahf
notb
fldt
leave
in
jo
pop
pop
lods
aas
sub
lds
push
lods
into
push
push
int3
jecxz
mov
or
popf
lods
rclb
mov
insl
fimull
lods
pop
fisubrl
xchg
roll
mov
arpl
imul
sbb
xchg
adc
insl
loopne
sub
sahf
dec
or
lods
sbb
rcl
fldenv
fcoms
sub
and
xchg
aas
mov
imul
xchg
mov
popf
cltd
and
iret
mov
cwtl
push
jmp
divl
cmp
js
push
gs
les
cmc
xchg
rorb
dec
adc
ljmp
dec
ljmp
addr16
mov
and
xor
hlt
out
xor
xor
mov
or
jge
mov
xchg
aad
inc
notl
aaa
and
sub
add
or
mov
movb
inc
test
fwait
outsb
stos
fmuls
push
mov
rclb
sub
pushl
dec
and
lcall
negb
rcl
push
mov
jecxz
sbb
pop
push
fucom
add
imul
mov
jno
xor
scas
cmp
push
pop
pop
pop
mov
test
cmp
inc
imul
xor
mov
jb
lock
movsb
push
push
inc
stos
inc
es
xor
adc
popf
mov
mov
loop
add
cmpsb
cltd
iret
cmp
js
inc
in
mov
cmp
add
imulb
movsb
ljmp
inc
xchg
lods
out
mov
mov
add
cmp
es
mov
or
fs
sahf
add
sub
dec
fadd
jae
push
out
adcl
or
jmp
imul
int
pop
mov
inc
cs
mov
mov
lret
imul
xor
ffree
or
sub
push
mov
xor
repz
xor
jb
icebp
pusha
sbb
or
adc
cltd
push
outsl
xorb
pop
cmp
test
pop
js
ljmp
bound
xchg
pop
mov
or
cmp
adc
les
inc
xchg
fisttpll
aam
inc
inc
sub
andl
sbb
and
and
cs
and
mov
sub
sub
fldt
rclb
xor
jne
and
or
sub
js
out
push
cmpsl
mov
scas
inc
fs
pop
scas
icebp
add
lahf
pop
ror
movb
sbb
mov
mov
repnz
sub
leave
out
mov
cli
inc
cmp
pop
and
or
and
mov
add
dec
fwait
cli
push
pusha
ja
jle
testl
hlt
dec
out
or
add
scas
xchg
js
pop
outsl
mov
js
fldenv
jo
xchg
sahf
popw
cmp
push
out
repnz
in
movsb
sbb
pop
pop
or
icebp
adc
jnp
add
dec
andb
jo
and
ja
iret
pop
outsl
test
filds
shrl
xor
jge
popa
push
dec
push
in
mov
push
pop
fistl
dec
inc
arpl
js
pop
push
enter
das
dec
mov
push
add
lahf
jb
fwait
jbe
popf
out
add
mov
xchg
dec
clc
or
std
sbb
mov
or
sub
addl
in
int
and
cmp
xor
ljmp
xor
hlt
jns
adc
es
mov
inc
add
sub
pushf
and
addb
cmp
push
or
mov
decl
xchg
dec
stos
popa
sarl
mov
cmpsl
sub
dec
sub
or
push
xchg
std
and
push
pop
cmp
pop
ja
xor
fdivrp
loope
jne
flds
push
lret
imul
popa
subl
pop
js
loope
andl
cmc
mov
lods
stos
andl
imul
rorb
add
sbbl
jmp
mov
lea
jge
sbb
dec
adc
arpl
cmc
std
dec
pop
inc
cmp
push
sahf
dec
sub
pop
loop
outsb
orl
pop
lds
jg
dec
aam
sub
add
stos
cld
loope
mov
ret
aad
insl
jecxz
addr16
sub
dec
pop
or
imul
jnp
dec
stos
movsl
icebp
fcmovnu
jmp
repz
mov
dec
mov
add
dec
sbb
scas
rorl
pop
roll
loop
pusha
inc
imul
ror
mov
pop
cmp
out
jge
int3
in
rolb
or
movsl
arpl
push
out
mov
cli
sti
add
adc
pop
sarb
xor
rclb
pop
cmp
jg
orb
cmp
xchg
mov
mov
pop
or
xchg
popf
or
mov
out
mov
cmpsl
cmpb
mov
mov
add
push
push
mov
push
and
push
mov
and
imul
into
les
sub
push
jne
ds
in
fwait
lcall
and
sbb
mov
add
rolb
push
les
pop
aad
nop
lock
jecxz
test
lock
mov
inc
shrl
pushf
and
fisttps
pop
xchg
mov
popa
and
scas
addr16
in
cs
and
mov
ss
test
ljmp
cmp
and
cs
jp
push
das
lods
movlps
movsl
push
fwait
xchg
push
jl
sahf
scas
push
jne
jbe
sub
enter
repnz
into
cmc
adc
aaa
std
jecxz
sbb
in
inc
sub
xchg
aad
daa
shll
mov
cmpsb
inc
aaa
scas
add
and
dec
pop
mov
hlt
inc
or
xor
jmp
and
fldcw
rcrb
adc
iret
hlt
call
pop
push
mov
xor
sbb
popf
outsb
jmp
mov
cmp
mov
mov
dec
mov
inc
sub
pop
arpl
mov
inc
loope
bnd
cmc
sub
test
jmp
insl
push
jp
roll
scas
int
sbb
ret
mov
call
sub
pop
and
xchg
or
xchg
outsl
inc
sbb
je
fisttps
mov
idiv
sbbl
movsl
adc
dec
push
cltd
push
mov
xchg
adc
lea
ss
pop
push
loope
hlt
jecxz
push
mov
add
mov
mov
xor
xchg
lret
pop
push
adc
fistps
mov
jns
ret
neg
movsb
popa
jp
mov
sbb
pop
call
cmp
repnz
pop
dec
add
wbinvd
mov
pop
cmpsb
mov
xchg
mov
xorl
xchg
stos
dec
and
fistpl
xchg
enter
lcall
jle
sarb
cmc
push
cmc
test
mov
fsubrs
add
pop
cbtw
movsl
push
in
mov
rcll
cli
mov
jge
aam
and
or
inc
shrl
js
sub
jmp
xor
pop
cs
repnz
fstl
test
popa
lahf
lds
fsts
in
push
cmp
fstl
and
or
icebp
les
fst
into
stc
mov
mov
sub
das
pusha
fs
push
jo
and
scas
dec
ret
push
std
sub
mov
inc
and
ja
shll
jmp
sti
lret
pop
mov
rorl
mov
mov
mov
and
push
dec
pop
test
rol
sbb
push
movsl
or
sbb
lods
and
fstpl
insb
das
data16
sbb
push
xchg
icebp
sub
incl
ffree
bound
adcl
cs
sbb
pop
cmc
push
cmp
jp
dec
mov
cmpb
cmp
rcl
mov
adc
sub
das
add
push
cvtdq2ps
adc
sbbl
fiaddl
notl
aaa
pop
jle
xorl
dec
dec
loop
mov
adc
and
jb
popf
lcall
xchg
pop
jne
cmpsb
imul
dec
mov
mov
loope
out
cltd
xchg
jmp
mov
mov
pop
dec
adc
loopne
std
and
mov
es
and
and
xor
mov
adc
jne
push
or
stc
mov
push
pop
ud0
mov
lock
clc
dec
push
pmulhuw
sbb
sahf
jne
andl
add
jmp
mov
mov
dec
xorb
add
dec
addb
adcl
imul
pop
adc
stos
popf
in
add
inc
pushf
cs
xor
push
rcrb
test
out
movsb
xor
push
enter
rcl
mov
jecxz
fistpll
fdiv
sbb
sub
pop
loopne
dec
adc
mov
leave
sbb
negb
das
inc
and
jmp
inc
push
xchg
je
js
lods
sbb
xchg
pop
and
mov
lea
mov
out
xchg
mov
xchg
add
shl
cmp
cmp
clc
push
test
dec
push
cmp
adc
in
jg
cld
or
mov
lock
shll
popw
sub
call
or
data16
mov
sarb
lea
sbb
push
or
cmpsb
ljmp
test
lods
mov
inc
add
test
daa
jnp
lahf
aam
mov
inc
sub
xor
xorl
in
pop
jg
aad
call
and
xor
add
daa
push
xchg
outsw
xchg
inc
cs
leave
int
dec
dec
push
sub
nop
hlt
test
mov
dec
in
push
pop
push
test
cmpsb
sbb
mov
xchg
inc
jne
and
adc
jmp
or
jecxz
je
push
sbb
inc
xor
sbbl
sbb
pop
add
sub
clc
xlat
daa
inc
xor
in
jbe
push
cltd
imul
adc
imul
nop
add
add
dec
mov
xor
in
push
inc
inc
je
imul
cmp
sub
repz
out
loopne
jnp
in
sbb
add
jno
xchg
inc
imul
aad
push
fisttpll
mov
jle
js
sahf
jo
mov
arpl
adc
jne
adc
stos
testl
mov
rorb
outsl
xchg
push
arpl
aaa
mov
xchg
push
test
mov
popf
xchg
sarb
das
mov
sub
mov
aam
jne
mov
jne
add
enter
fwait
sub
leave
and
or
xorl
jge
add
mov
lcall
andl
jecxz
psrld
xor
jns
fwait
jno
xor
mov
aad
sahf
out
aam
push
je
pop
add
sbb
xchg
test
dec
sub
test
fmul
popf
int
inc
subb
mov
and
repnz
ja
mov
lock
pop
pusha
negl
dec
orl
inc
mov
stos
pop
lods
xor
xchg
loope
xchg
ss
cld
rolb
cvtpi2ps
or
call
shr
xor
cltd
dec
add
push
pushf
clc
gs
cmc
cld
pop
sbb
movsl
jmp
loopne
xchg
in
add
lea
and
bnd
cmp
sti
mov
adc
sub
jns
adc
call
loop
movsb
cli
iret
cltd
ret
scas
inc
jg
out
push
inc
mov
aam
jecxz
lret
mov
sahf
mov
xchg
pop
divb
pop
jne
jae
sbb
mov
sub
adc
bound
add
inc
add
sahf
out
js
lock
mov
xor
mov
mov
ret
cli
test
lock
mul
mov
sbb
mov
lods
jne
push
pop
mov
xchg
es
hlt
push
scas
push
std
pop
aam
push
fidivrl
in
or
outsb
xchg
mov
add
pop
loope
dec
mov
push
or
lret
xor
xchg
mov
sbb
xlat
inc
pop
cmpsb
inc
daa
or
mov
mov
scas
inc
stos
adc
in
movsl
int
lea
mov
add
das
popf
insl
push
ret
mov
mov
daa
push
popf
jae
or
ret
pop
test
inc
pop
cmp
lea
inc
bound
cmpsb
push
ljmp
fnstenv
adc
es
push
pop
add
adc
xchg
push
call
and
xchg
mov
scas
mov
xlat
sbb
popf
push
mov
xor
add
std
cltd
pop
mov
aad
and
xchg
ss
pop
outsl
int3
leave
adc
xchg
jle
andl
push
not
dec
lret
pop
pop
cs
cmc
shlb
xchg
ja
push
stos
rolb
or
rcrl
mov
loope
xchg
inc
movsl
jno
fcom
adc
int3
test
pop
ljmp
fisttpl
push
imul
and
cld
dec
jae
scas
mov
popa
ret
mov
sub
jmp
jle
mov
or
mov
lcall
cmp
loop
mov
jae
pusha
cld
movsb
mov
enter
mov
xor
and
shlb
pop
jmp
rcl
sbb
sub
arpl
stos
sbb
push
or
xchg
add
push
inc
mov
aas
cmp
adcb
xor
cmc
jmp
push
mov
push
mov
mov
xor
addr16
popf
mov
mov
xchg
add
and
mov
test
ja
sub
ljmp
or
fidivrs
push
and
cmc
push
dec
out
xchg
std
leave
pop
inc
dec
add
vrcpss
push
or
das
pop
mov
out
es
fisubl
ss
or
adc
mov
or
add
les
aas
cmp
and
lock
cmpl
dec
mov
sbb
adc
in
fisubs
rol
rorl
nop
popf
jb
xor
xor
pop
rcrb
test
pop
sub
into
cmp
lods
mov
outsb
dec
xor
cmp
sub
popa
dec
mov
ds
mov
icebp
add
cmpsl
ret
mov
xor
pop
aas
jmp
jne
dec
pop
fwait
or
inc
ret
push
add
jg
xchg
jecxz
pushf
cltd
loope
addr16
add
fiadds
lcall
aad
cs
or
push
dec
xchg
in
fsubl
mov
sub
insl
add
or
popf
xor
xchg
mov
push
add
test
ds
mov
add
sarb
push
cmp
lods
cmpsb
sbb
pop
jg
popa
pop
push
pop
mov
mov
dec
scas
andl
or
icebp
call
xchg
rclb
jp
fists
cmp
loope
jmp
sahf
leave
cltd
mov
add
cwtl
insb
js
inc
sbb
arpl
or
enter
xorl
cmpsb
push
add
sub
inc
lds
sbb
xor
mov
push
dec
add
test
scas
push
mov
hlt
int
or
sahf
hlt
xchg
es
sub
in
add
adc
jecxz
cmp
cld
hlt
or
aam
ss
or
mov
ja
mov
nop
sbbl
jl
mov
or
and
xchg
add
jne
sbbb
das
jge
fldenv
push
rclb
loope
bound
test
fs
push
jl
adc
testl
in
stos
test
rolb
dec
jge
and
adc
jo
gs
pop
add
sub
in
xchg
rclb
lods
loope
imulb
sarb
fiadds
xchg
bound
ljmp
xchg
xchg
call
jp
sub
out
xchg
pop
arpl
subb
stos
addr16
cmpsl
repz
aas
and
call
incb
das
push
das
sub
stc
push
adc
ret
scas
test
dec
rcrl
inc
push
outsb
push
mov
rolb
mov
mov
dec
add
call
or
int
add
negb
jbe
or
rclb
dec
dec
or
xchg
inc
pop
and
mov
jnp
gs
insl
and
pusha
je
ret
sti
or
push
inc
or
dec
das
mov
sub
xchg
out
dec
push
inc
jg
shrd
dec
and
aam
sub
scas
lock
mov
mov
nop
push
adc
or
add
mov
icebp
mov
outsb
jae
adc
inc
fldl
jo
sbb
cmp
decb
or
adc
xchg
test
jo
rolb
fbld
push
pop
mov
dec
mov
dec
mov
jecxz
cmp
popf
mov
in
int
jle
adcb
insb
jb
inc
cmp
mov
mov
mov
dec
lock
outsl
aas
stos
jp
xchg
loop
push
je
in
sub
call
test
sub
imul
xchg
or
cmpsb
dec
mov
xor
aam
sub
clc
ljmp
push
adc
stos
push
jmp
sub
iret
and
hlt
aas
inc
cmp
sar
out
push
rcll
mov
push
imul
xor
stos
lods
movsl
movsb
and
adc
das
cltd
bound
scas
cmc
pushf
add
icebp
inc
ljmp
scas
push
inc
mov
and
mov
imul
xchg
into
xor
jmp
and
xchg
or
std
add
lcall
js
loopne
cli
loopne
mov
xor
add
jecxz
push
mov
aaa
rcrl
pop
push
add
sbb
call
es
pop
push
inc
pushf
pop
pop
repz
incb
fidivl
jecxz
psllw
test
fildll
pop
dec
adc
ret
pusha
fnstenv
and
pop
int3
inc
in
sub
dec
negb
add
pop
push
or
lret
sub
mov
aam
inc
push
lods
icebp
nop
bound
cmpsl
es
sub
je
add
xchg
mul
sub
cmp
divb
call
in
mov
pcmpgtw
cmp
cmpsl
adc
jg
icebp
jecxz
adc
sbb
ss
sbb
mov
mov
data16
repz
call
and
pop
loop
adc
repnz
ret
int
pop
or
aam
or
imul
push
or
scas
xchg
jb
lahf
movsb
stos
cmpb
push
mov
inc
ss
mov
push
loopne
jmp
clc
pop
std
repnz
xchg
cmp
je
dec
loop
mov
mov
out
dec
jmp
push
inc
push
repnz
in
add
pop
in
stos
aaa
nop
and
xor
inc
stos
ds
idivb
rorb
ret
rcrb
mov
jp
jmp
inc
push
loop
or
shrb
sub
jle
push
es
pusha
call
lds
fsubl
dec
enter
jo
and
push
mov
and
add
or
fcmove
add
pop
aam
dec
mov
mov
cld
int3
pushf
mov
leave
and
sub
sub
test
les
lea
push
outsb
clc
sub
xor
mov
mov
nop
mov
mov
inc
xor
jecxz
fs
orb
inc
dec
mov
add
push
dec
xchg
in
lods
cmp
mov
test
cmp
pop
fldt
js
inc
sub
mov
jle
and
pop
xchg
movsl
popf
sar
dec
mov
mov
nop
inc
push
mov
adc
jl
push
cmp
shll
in
or
push
ss
call
cmpsl
fists
das
aaa
ss
xorb
repnz
mov
jle
outsb
inc
adc
rcrb
sub
jae
add
test
sbb
call
test
or
lahf
add
xor
iret
and
cmpsl
jg
fdivrp
push
push
loope
or
negl
notb
sub
pop
std
test
outsb
popa
mov
jne
push
loopne
jns
cmp
std
push
add
sahf
ljmp
and
scas
mov
sbb
shlb
fsubp
adc
aas
dec
and
adc
loop
xchg
inc
mov
ljmp
loopne
push
in
add
pop
or
das
int3
mov
and
jmp
sbb
pop
scas
xor
test
mov
pop
lcall
or
push
add
in
out
ret
xchg
dec
pushf
and
inc
into
push
pop
add
mov
test
push
and
pusha
lret
dec
mov
or
push
ljmp
cmp
jb
ljmp
pop
jae
xchg
aam
loope
arpl
jnp
cli
mov
sbb
mov
in
mov
ss
pop
cmp
je
fdivl
or
mov
jecxz
mov
add
mov
or
mov
push
loope
into
insb
add
jle
add
int
pop
fistpll
push
jns
pop
mov
inc
sbb
add
ljmp
fwait
push
and
or
rcl
mov
addr16
push
cmp
inc
cmp
pop
into
mov
pop
or
jg
ss
add
inc
push
push
xchg
test
std
push
ljmp
or
cmc
inc
popf
mov
cld
stos
lahf
mov
cs
inc
test
lods
xchg
imul
mov
fyl2x
lahf
test
dec
sub
lea
xorb
push
mov
enter
out
cmp
push
and
push
hlt
push
in
xchg
adc
lock
push
js
mov
hlt
inc
xchg
pop
inc
stos
mov
cld
stos
pop
in
mov
lret
rclb
imul
jbe
mov
repz
inc
and
mov
sbb
fsubrs
push
pop
adc
lds
and
imul
xor
or
sbb
rcll
icebp
jecxz
fcoms
inc
pop
mov
or
imul
pop
test
cmp
or
xchg
push
mov
add
mov
sbb
cmp
cmp
sbb
je
xchg
ret
imul
pusha
and
lods
adc
in
jg
adc
movhps
pop
push
arpl
test
dec
mov
add
std
out
aas
outsb
and
mov
cmp
push
jb
js
mov
subl
pop
adc
mov
in
repz
enter
jp
fwait
scas
add
xor
fimuls
dec
push
out
inc
cmp
lds
cmp
push
pusha
mov
into
mov
dec
dec
out
add
xchg
dec
push
mov
cmp
pusha
mov
mov
aas
call
add
pop
imul
test
cmp
jnp
jns
cld
pop
cwtl
jo
pusha
adc
xchg
mov
push
dec
sahf
pushl
mov
mov
mov
shlb
cld
mov
rolb
add
push
and
into
mov
push
test
mov
lea
or
popf
xor
gs
fs
outsb
mov
inc
add
push
js
push
jp
mov
fcoms
outsl
cwtl
xchg
ret
inc
cmovbe
aad
or
xchg
lock
dec
mov
out
sbb
mov
leave
outsl
adc
cmp
popf
jo
sbb
mov
jl
ljmp
mov
movsl
call
cmp
mov
sbb
sbb
dec
addb
cwtl
add
bnd
pop
loope
or
je
xor
mov
push
and
cmpl
mov
xchg
pop
cld
mov
push
and
ja
cmp
decl
out
adc
inc
pop
xchg
test
cwtl
dec
pop
ljmp
ret
xchg
vaddsd
mov
or
lret
cmpsb
mov
inc
cwtl
adc
inc
xchg
inc
repz
test
or
xchg
xor
sub
push
add
inc
sub
lock
out
rcrl
xchg
lods
in
outsl
push
cmc
jne
clc
add
out
test
push
mov
ljmp
mov
dec
bound
xor
jmp
and
and
scas
or
test
fildl
js
adc
fwait
call
std
aas
fisubrl
add
mov
inc
adc
jns
inc
pop
xor
stos
mov
mov
cli
mov
jmp
mulb
jl
jp
add
mov
test
ljmp
ljmp
xor
inc
aaa
test
rcrb
sbb
mov
sbb
loop
mov
and
and
adc
fmul
mov
cmp
outsb
lret
inc
or
dec
mov
jg
mov
and
or
gs
lock
dec
mov
test
inc
cld
mov
nop
cmp
push
inc
mov
push
cs
sub
push
or
mov
lahf
std
sub
sarb
mov
pushf
int
mov
mov
gs
mov
adc
mov
pop
xchg
adc
mov
dec
bound
push
das
dec
loop
andb
scas
pop
push
fcoml
shlb
inc
jp,pt
mov
pushf
roll
imul
jp
aas
jns
jmp
mov
inc
pop
mov
xchg
data16
mov
in
inc
mov
pop
mov
pop
dec
dec
push
sbb
lcall
dec
push
mov
push
in
and
sbb
lret
jno
jecxz
mov
push
adc
movsb
xchg
insb
mov
lea
mov
imul
cwtl
mov
lret
scas
mov
pusha
jl
ss
in
fwait
testb
cmc
push
push
pop
xchg
sub
add
fbld
stos
out
pop
loop
inc
push
and
mov
arpl
push
push
mov
dec
add
cmp
jle
sbb
in
dec
dec
out
rcrb
enter
push
nop
pop
mov
adc
fst
sub
add
push
ficoms
dec
sub
es
ret
and
push
into
adc
sbb
loope
sbb
xchg
push
pop
int3
xchg
or
insb
lcall
jmp
data16
ret
jb
imul
push
repz
pop
and
loope
hlt
orl
xor
add
sub
and
push
mov
loope
and
scas
icebp
or
ret
imul
cltd
inc
lds
test
adc
xor
sub
shll
jl
imul
dec
mov
ss
push
fistpll
mov
add
dec
notl
arpl
stc
xchg
mov
mov
insb
mov
sub
xor
jnp
insb
aas
sbb
pop
outsl
mov
and
add
mov
mov
imul
jae
movsb
loopne
pop
aad
sbb
push
xchg
addb
ds
js
pop
adc
push
push
xchg
sub
jl
mov
js
xor
jne
mov
outsb
loope
jne
mov
adc
jl
and
test
mov
push
mov
dec
mov
into
popa
sbb
inc
jecxz
or
std
xchg
les
mov
sbb
jbe
xor
lcall
cmc
aaa
sarl
sar
inc
mov
or
push
mov
dec
loope
scas
and
aam
aaa
and
mov
mov
push
dec
enter
adc
cld
jp
xor
mov
lret
orb
inc
movsl
fmuls
jne
lahf
cmp
inc
in
repz
mov
adc
ljmp
xchg
jo
lea
and
rcrl
mov
popa
filds
in
lcall
pushf
ss
cmp
mov
jle
push
dec
inc
mull
mov
mov
fabs
dec
dec
mov
div
fabs
xchg
daa
dec
or
adc
js
and
scas
sub
xor
mov
fsts
inc
fiadds
into
shrb
sti
std
mov
pop
clc
bound
jne
xchg
pop
rorl
and
jp
ret
fnstcw
mov
leave
mov
fwait
lods
pop
xor
cmp
add
mov
loopne
inc
movntps
and
inc
push
inc
mov
cmpsb
shl
fildl
std
aaa
mov
scas
jle
les
add
scas
xchg
adc
imul
jae
hlt
imul
scas
cmp
and
daa
nop
jg
ret
sub
xlat
scas
or
nop
out
cltd
cmp
or
mov
js
jmp
or
loope
subb
adc
mov
lcall
adc
adc
lret
das
in
fimuls
sub
dec
cmpsl
shrl
xchg
enter
fisubrl
mov
lea
out
xorb
xor
enter
jmp
mov
rolb
jae
ret
add
cwtl
xchg
add
rcrl
inc
push
sbb
movsb
and
scas
fnsave
inc
daa
sub
xchg
pop
test
pusha
pusha
int
pop
or
jo
cmpsb
loopne
push
bound
outsl
pop
mov
imul
mov
xor
les
js
ret
jp
leave
leave
pop
andl
dec
mov
sbb
sub
les
mov
adc
sbb
cmc
mov
sbb
mov
daa
rol
ljmp
ret
sub
sbb
mov
sbb
pop
adc
stos
sub
xor
pop
movsl
inc
in
pop
pop
pop
lods
adc
cwtl
fmul
xor
xchg
popa
add
jmp
adc
jns
rolb
jge
cmp
les
cmp
cmp
inc
rol
push
push
aam
pop
dec
andl
fisttps
inc
arpl
icebp
add
add
loope
aaa
cmp
in
fsubs
inc
mov
cmp
lahf
lret
arpl
cmc
jbe
sbb
dec
repz
inc
pop
dec
mov
pop
inc
push
lock
test
imul
and
mov
or
and
xor
dec
pop
jnp
sti
test
mov
jp
sub
sti
jne
xlat
mov
and
cmpsl
mov
rcr
dec
jp
add
xchg
shrl
jne
mov
mov
pusha
mov
arpl
push
dec
sub
mov
movl
repnz
pop
popa
cmc
xor
jbe
rclb
cmp
or
imul
in
sub
popa
sar
shrb
sti
sbb
ror
mov
stc
pop
iret
pop
lret
xchg
lods
jmp
sbb
adc
add
insl
aaa
sahf
or
adc
adc
jmp
sub
jp
sub
and
inc
ret
rol
test
add
fstl
pop
jae
sbb
cmp
jae
add
insl
lea
mov
mov
xchg
inc
and
mov
imul
jp
xor
dec
shlb
or
popa
sti
les
jno
gs
cli
pusha
movsb
adc
out
jecxz
pop
inc
and
and
adc
jecxz
cmp
in
mov
adc
inc
imul
push
test
dec
xchg
xlat
sbb
dec
sub
sbb
stos
mov
inc
fldl
ret
dec
jg
xlat
scas
leave
cmpsl
stc
in
testl
stos
shlb
shrb
icebp
loop
sarb
lret
mov
out
cmpsl
aaa
cmc
adcb
stc
sub
mov
push
cmp
jl
loope
cmc
jl
daa
icebp
or
push
outsb
jns
xor
icebp
fidivs
xchg
or
jne
fs
mov
lahf
mov
jne
push
popa
pop
sti
sbb
mov
xchg
lods
cs
sbb
cmp
bnd
jmp
mov
stos
mov
cmp
dec
sub
pop
les
mov
dec
aas
aas
hlt
fldt
in
lods
dec
xor
test
xor
rolb
subl
jnp
jmp
out
dec
sbb
jo
dec
adc
movsb
scas
lret
movsb
sbb
jecxz
in
cwtl
inc
orl
stos
cmp
or
xchg
js
scas
repz
cmc
push
inc
mov
icebp
xchg
mov
sbb
jb
mov
sbb
out
sub
add
shlb
add
rcl
push
lea
jbe
push
dec
jno,pn
add
rcrl
iret
or
test
mov
std
cs
cmp
mov
xlat
pop
mov
xchg
sbb
xor
addr16
xor
std
ss
cmp
js
mov
cmpl
fdivr
lcall
mov
push
gs
and
cs
push
movsb
out
and
adc
push
test
fnsave
mov
pop
pop
std
xchg
test
mov
add
jl
adcb
lock
call
adc
inc
xor
mov
cmp
jmp
aad
mov
in
sahf
add
push
vpinsrw
jae
call
add
cmpsb
cli
sub
ja
mov
sahf
mov
in
mov
popa
or
ret
psrld
in
or
out
push
jno
in
into
pop
rcr
test
push
sbbb
shlb
xchg
shlb
adc
and
sbb
pusha
aas
add
pop
adc
cld
pusha
rcrl
scas
xlat
inc
rcr
sbb
lahf
icebp
fistl
idivl
daa
shlb
loope
sub
fidivrs
sar
icebp
or
stc
ljmp
call
call
enter
mov
or
mov
mov
fidivrs
xor
pop
jmp
cli
call
ret
ja
sahf
dec
sbb
std
and
rorl
add
or
movsb
icebp
popl
add
decl
mov
lods
pop
mov
es
jge
out
pop
lods
mov
stos
and
fdivl
push
cli
mov
jecxz
add
mov
push
cmpsb
push
dec
fsubr
jp
cli
push
sarb
jmp
aas
mov
jno
cmc
or
fdiv
outsl
dec
mov
add
and
addb
in
jp
mov
pop
sarl
dec
cmp
inc
cmpl
fbstp
mov
scas
and
or
xchg
rcrl
mov
xchg
add
inc
inc
into
dec
and
adc
shrb
nop
sbbb
pop
cli
int3
movsl
sbb
adc
push
lcall
outsl
imul
sbbb
out
adc
inc
or
mov
mov
cmp
jp
push
mov
hlt
jo
pop
hlt
xor
or
andb
inc
pop
dec
insb
sub
divl
sub
test
xor
mov
loopne
ret
out
clc
fistpl
nop
aaa
add
or
or
cmp
js
lods
push
outsl
lods
rcrb
sbb
scas
jge
jg
cmp
xor
mov
lds
fs
dec
andb
sub
push
insl
iret
pop
cmpsb
cmpb
orl
cmp
xchg
mov
jns
rorl
mov
cwtl
jge
cli
jg
push
shlb
in
push
and
sub
inc
je
int3
shrb
add
mov
sbb
or
out
jbe
cmc
dec
inc
repnz
dec
push
jg
push
adc
daa
xchg
sbb
pop
negb
jg
jp
leave
lods
push
dec
mov
lds
je
pop
cwtl
je
xchg
loop
dec
mov
popa
or
in
and
in
ljmp
lcall
fsub
das
or
push
mov
mov
cs
and
repnz
xchg
orb
clc
cmc
sbb
xlat
arpl
add
test
ret
add
push
sub
mul
xchg
lock
sbb
pop
jecxz
in
push
mov
jle
mov
sbb
lods
sub
cs
push
lret
mov
mov
in
xor
mov
mov
rcrb
adc
cs
inc
pop
push
popf
rolb
imul
ss
add
lcall
test
aam
pop
inc
jecxz
in
js
inc
fadds
cld
ljmp
rorl
or
fisubrl
mov
sbb
ret
in
ljmp
mov
addr16
push
jge
xor
xor
sarl
push
call
add
cwtl
mov
adc
clc
ret
lods
and
mov
mov
mov
adcb
xchg
mov
and
pop
adc
pop
fmuls
test
mov
shll
decb
ret
sti
dec
cmp
call
mov
test
xor
std
jo
test
inc
adc
or
or
adc
sub
mov
push
scas
rcll
and
dec
xor
sti
clc
or
lahf
dec
inc
bsf
test
sti
scas
xchg
incb
push
ss
jnp
ret
xlat
outsl
xor
jle
les
jns
jbe
mov
in
jmp
jl
add
aad
sub
cmp
loope
test
adc
pop
test
pusha
cmp
xor
adc
inc
push
inc
mov
jbe
mov
add
add
outsb
cltd
sub
call
popa
mov
add
jp
out
xchg
xlat
pusha
rcrl
movb
add
ret
jg
dec
jb
mov
xor
pop
stos
inc
pop
je
mov
pop
das
jnp
jbe
repz
shrb
mov
mov
sbb
aad
psubb
cmp
sbb
adc
insb
cmp
fsubl
inc
push
inc
js
push
mov
xor
xlat
fildl
insl
add
jmp
clc
cli
xor
sbb
lock
cld
add
add
cmp
scas
in
loop
gs
test
sti
add
mov
adc
out
cmc
xchg
movsl
adc
stc
loop
xlat
jle
out
pop
int
cmc
push
fbld
outsl
mov
mov
cltd
add
mov
xor
cmpsb
es
js
adc
test
movsl
pop
loopne
sub
gs
push
movsb
or
js
xchg
push
mov
pop
mov
negb
fadds
mov
or
pop
jg
mov
fs
adc
test
or
shlb
pop
lock
out
inc
jle
cli
inc
ja
and
pop
insb
cmp
pop
xor
mov
mov
adc
inc
jo
in
clc
cmc
mov
sub
inc
jne
mov
mov
mov
cmpsl
and
adc
inc
arpl
das
mov
add
sbb
xchg
decl
cld
mov
xchg
frstor
inc
mov
adc
push
dec
pop
mov
mov
mov
sbb
outsl
aaa
jmp
mov
pop
adc
mov
int3
movl
test
lock
insb
inc
mov
add
ret
mov
dec
or
xchg
dec
sub
incb
cmp
and
jbe
movsb
push
add
pop
mov
ret
call
call
add
into
hlt
adcb
fists
adc
pop
pop
push
push
and
test
dec
scas
dec
les
sar
fbstp
mov
mov
or
jl
je
jp
jbe
push
enter
mov
add
add
gs
loope
sub
dec
sbb
sbb
add
jb
out
mov
std
ret
push
shlb
sbb
rcrb
xor
pop
lock
or
add
idivb
pop
xchg
xor
inc
pop
add
pop
dec
fs
sbb
mov
out
daa
mov
mov
aas
out
popl
push
andl
test
inc
pop
xor
mov
andb
mov
xor
test
xor
mov
ljmp
mov
sbb
xchg
lcall
cltd
add
inc
mov
push
bound
ljmp
rcrb
push
nop
js
cmp
mov
scas
inc
ljmp
cwtl
sbb
push
and
lret
std
aas
fidivs
or
xchg
mov
push
nop
adc
jl
or
rorl
xchg
jg
add
andl
lea
xchg
fimull
push
add
push
adc
stos
es
cmp
xlat
pop
inc
mov
cmp
push
xorps
sub
movsl
jae
cld
pop
data16
or
andl
and
fiadds
test
sbb
cmp
pop
lahf
dec
jo
loope
cld
inc
sarl
fs
jp
or
rolb
add
sub
cmp
sti
push
mov
cwtl
mov
mov
xchg
movsb
pushf
mov
rcrl
nop
inc
lds
sub
add
adc
aam
ljmp
or
inc
inc
cmp
sbb
in
mov
out
lods
jno
test
jle
push
jle
aaa
cli
sub
mov
test
pop
sub
or
les
pushf
xor
iret
adc
data16
or
shll
and
out
push
cmpsb
cld
mov
xor
or
jl
and
flds
cmp
cmp
add
or
add
pop
adc
adc
add
mov
pushl
dec
xchg
icebp
dec
push
mov
inc
bound
outsl
or
or
pop
rcrl
in
das
cltd
das
push
je
jmp
jb
mov
or
sub
jbe
xchg
push
shl
popf
lret
lods
mov
xlat
sbb
dec
and
add
scas
fs
xchg
jbe
jb
cmc
mov
push
mov
lods
cmp
mov
fisttpll
or
cmpsb
in
jge
cwtl
in
cmp
xlat
es
test
insl
rcrb
rcrl
adc
pop
hlt
pop
enter
stos
sub
mov
inc
ret
xchg
cmp
jmp
mov
es
inc
adc
sahf
sub
sub
in
add
xor
in
xchg
sub
xchg
or
pushf
xchg
ret
push
sbbl
cmp
mov
repz
sbbl
mov
dec
sub
mov
mov
inc
psubb
mov
mov
fdivl
lock
xchg
shlb
outsl
or
out
repz
bound
stos
cld
testb
in
loopne
insb
jne
fwait
sub
mov
and
and
aad
push
pop
movb
jbe
inc
rcll
push
lret
orb
add
into
ret
pushf
mov
call
sahf
ss
pop
jmp
sub
nop
into
push
in
addr16
xchg
enter
and
push
xchg
jle
or
push
out
or
inc
adc
and
xor
fdivl
dec
jne
hlt
xchg
sub
dec
popf
mov
iret
imul
outsb
je
bound
sbb
nop
cmp
adc
lock
fbstp
stos
xchg
bound
push
ds
pop
lcall
mov
inc
jmp
and
lock
aas
jne
or
outsl
and
inc
fcoml
mov
sahf
fimuls
adc
inc
xchg
pop
incb
mov
jmp
gs
das
sbb
push
xchg
outsl
in
cs
push
mov
loop
in
add
jnp
inc
pop
movsl
icebp
jmp
mov
sub
rclb
mov
orb
push
add
in
test
repnz
xor
ret
pop
mov
dec
mov
or
add
mov
xchg
inc
adc
mov
mov
addr16
loop
xchg
xchg
mov
cwtl
adc
out
mov
into
call
mov
pop
pop
mov
mov
add
jno
push
loope
sahf
inc
or
lods
jle
adc
testb
or
dec
cld
jmp
out
mov
ret
ret
mov
call
popa
leave
adc
adc
xor
popf
and
gs
jg
movsb
test
pop
or
cmpb
and
cli
push
dec
je
adc
cmc
or
subl
or
rolb
or
pop
jbe
adc
xor
mov
sbb
and
mov
in
test
js
cs
aas
sub
daa
add
pusha
cmc
xor
add
cli
je
pop
dec
pop
push
inc
dec
loopne
lcall
repz
xchg
dec
dec
dec
push
xchg
push
test
ds
lock
push
sbb
mov
adc
mov
sub
subb
insl
mov
iret
dec
sub
pop
cwtl
push
es
pop
jo
pop
jns
jecxz
mov
sub
cltd
sbb
adc
lret
push
in
and
lock
sahf
pop
sahf
and
loop
loop
mov
inc
fisttpl
test
inc
jle
sub
subb
dec
pop
jns
add
add
mov
pop
cltd
fldl
lock
std
jnp
cld
push
jle
xchg
mov
xlat
movsl
sbb
ficoml
sub
jae
cmp
in
or
loop
push
insl
adc
and
pop
cmp
outsb
lock
pushf
mov
sub
mov
push
adc
xchg
std
lds
sahf
cmp
jmp
adc
lock
mov
gs
jbe
dec
js
lea
rorb
mov
xchg
jg
outsb
imul
pop
cmpl
test
pop
and
inc
mov
arpl
mov
lret
std
mov
cmp
or
ljmp
jg
or
sbb
jle
cli
pop
xchg
rolb
in
nop
pusha
fisttps
movsb
cli
mov
out
mov
je
or
sbb
or
je
xchg
movsb
adc
and
adc
popf
sbb
pop
std
add
in
or
ds
incl
jp
fcom
js
out
jl
xchg
jp
movsb
int3
ss
pop
and
jp
dec
xor
xchg
add
ficomps
test
dec
mov
addb
and
scas
pop
cld
xor
lret
mov
xor
in
sahf
mov
mov
in
es
jl
ljmp
push
lock
dec
shlb
push
lods
mov
subl
icebp
lods
fcomps
or
movsl
repz
sbb
cmp
ja
sub
test
push
fstpt
popl
pop
mov
ljmp
pop
xchg
pusha
les
pop
fbld
add
push
adc
mov
adcl
push
pop
push
fistl
sbb
scas
ret
xor
pop
in
je
mov
cmp
jl
jne
mov
int3
or
mov
push
mov
cwtl
mov
gs
fdivl
cmp
dec
mov
in
adc
sbb
int3
lcall
insb
jb
sbbb
or
push
je
subl
sub
imul
xor
shlb
popa
xadd
insb
push
les
push
or
mov
mov
pop
pushf
inc
mov
std
mov
adc
rorl
inc
rcrb
push
cmp
sub
push
insl
cld
or
push
mov
std
mov
loopne
dec
lcall
mov
push
jle
sbb
loopne
inc
enter
push
mov
rcrb
push
cmp
pop
dec
pop
cmpsl
outsl
outsb
jp
cli
add
cmpsl
mov
push
pop
shl
pushf
lock
fucomp
push
xor
mov
or
sbb
stos
inc
inc
mov
sbb
test
xchg
fildl
mov
ss
mov
int3
cmp
stos
fmul
or
inc
cli
fmull
pop
cmpsl
aam
cmpsb
jmp
and
cld
add
arpl
push
jle,pt
div
xchg
add
jmp
or
add
xor
imul
ficoms
pop
jge
or
shrb
xchg
push
and
sub
cmpsl
add
stos
stos
ret
sbb
jle
je
cmc
xchg
mov
imul
sbbl
pop
nop
add
inc
test
xchg
std
inc
mov
shlb
add
out
inc
sbb
sub
hlt
test
les
sar
inc
add
mov
lock
mov
les
jmp
inc
pop
xchg
scas
push
jge
ret
aaa
pop
dec
nop
into
dec
jmp
jne
mov
fsubr
xor
pop
ljmp
adc
cmp
add
and
inc
test
jle
stos
xchg
outsl
ss
lret
add
add
mov
inc
fimuls
cmpsb
leave
shll
sub
gs
shrb
movsl
jle
mov
scas
adc
mov
int
xchg
jecxz
mov
je
fiadds
or
lods
jno
push
pop
loope
fwait
lcall
pop
ss
jae
scas
and
insb
mov
push
sub
mov
xchg
mov
mov
xchg
cld
push
mov
or
outsb
or
xlat
in
mov
ret
sbb
shl
sbb
loope
pop
hlt
test
inc
aam
nop
flds
aaa
push
fwait
cs
add
ret
xabort
cmp
shlb
or
cmp
ret
outsl
mov
inc
adc
es
adcb
jl
sbb
mov
movsl
sub
inc
loopne
push
xor
cmp
or
repz
pop
mov
lock
push
loop
out
push
jns
incl
popa
fiaddl
les
ljmp
scas
mov
in
shl
add
cmp
mov
cmpsl
add
shrl
subb
in
ss
testl
aas
cwtl
push
mov
clc
rcll
and
outsb
mov
dec
xchg
js
fmuls
jge
pop
out
out
pop
inc
ror
rol
or
push
lods
das
test
cmpsb
clc
dec
pop
addl
push
or
icebp
mov
insb
adc
shl
mov
jnp
lds
int3
fs
data16
xchg
inc
mov
pop
adc
inc
icebp
mov
es
out
add
lahf
shr
sub
xchg
cmp
sub
xchg
and
lret
jmp
into
inc
sbb
add
mov
rcll
cmp
cmpl
dec
sub
mov
adc
insl
mov
cmp
inc
or
add
stos
mov
mov
ds
les
jo
icebp
push
fdivrl
repnz
cmp
inc
xchg
int3
lock
mov
loop
out
mov
and
or
mov
push
call
out
xchg
test
fidivrl
pop
inc
jecxz
imul
jns
mov
enter
add
push
aas
fistpl
ljmp
jno
mov
dec
mov
sub
sbb
sub
jl
shl
or
jle
stos
cmp
aam
or
loopne
jge
pop
imul
testb
adc
push
and
push
inc
mov
test
test
test
fdivrl
adc
lds
scas
adcl
xor
jnp
adc
shl
pop
les
mov
inc
adc
push
ljmp
cmp
and
or
mov
pop
cmp
cmpsb
mov
repnz
inc
js
fildl
push
pop
sbb
cmp
lods
mov
jmp
dec
rcrb
mov
fadds
ljmp
ds
fidivs
and
push
jno
dec
add
mov
xlat
inc
pop
pop
fisttpl
adc
ja
aaa
fldl2e
sub
mov
push
mov
pop
pusha
mov
jp
sbb
test
push
jmp
or
mov
pop
push
push
jp
mov
ljmp
cmpl
and
mov
dec
pop
loop
icebp
dec
sbb
push
das
pop
in
mov
xor
ds
add
lea
mov
mov
call
sub
xchg
sbb
mov
adc
js
roll
add
fs
lods
sahf
adc
dec
aad
mov
leave
jb
addb
sbb
push
shrb
clc
bound
push
dec
daa
decl
test
xchg
clc
jb
pop
popa
mov
outsl
notb
sub
pop
mov
lods
andl
repz
jg
std
dec
std
push
daa
cwtl
inc
dec
lea
mov
adc
add
cli
aad
xchg
cmp
fcmovu
pop
inc
aaa
mov
test
test
pop
fidivl
aam
rcrl
push
fmul
and
adc
adc
bound
outsl
sub
lret
sub
test
mov
es
std
ja
and
adc
cmp
mov
scas
popa
sub
and
xor
push
shl
out
xor
push
pusha
enter
pop
jae
inc
test
lret
ret
and
ret
cmp
test
xchg
mov
mov
add
dec
out
add
sbb
push
dec
mov
sbb
dec
push
xchg
xor
push
xchg
inc
insb
and
xor
sub
and
jl
ss
test
xchg
daa
push
jmp
add
add
dec
ljmp
adc
inc
cmp
adc
and
jbe
pop
jo
dec
xor
cmpsl
popf
mov
xor
test
or
js
loope
or
ret
ds
enter
loop
test
push
clc
dec
ja
iret
std
andb
sub
sbb
dec
push
cmp
and
pop
xor
daa
sub
push
or
clc
xchg
mov
aaa
popa
jbe
pop
add
add
les
lds
and
out
dec
sbb
inc
adc
inc
push
jge
mov
insb
and
call
repz
adc
cwtl
loopne
ret
mov
clc
or
aad
dec
aas
pop
stc
push
sub
movsb
rcr
push
ret
pushf
sahf
jmp
mov
adc
push
mov
fcmovbe
adc
dec
aam
xchg
test
add
ret
clc
pop
rorl
xor
je
cvtps2pd
test
dec
call
out
popf
mov
mov
or
push
testb
add
lock
pop
or
and
and
sbb
mov
jns
fs
xor
lds
pop
ficompl
inc
fwait
insl
fildl
jns
outsb
fsub
pushl
adc
mov
jbe
adc
stos
ficoml
fcomp
lea
mov
scas
cmpsb
mov
push
or
fdivrs
into
sub
jbe
push
testb
xor
mov
push
ss
aas
inc
xor
inc
test
ds
incb
pop
in
pop
repz
mov
sbb
cs
inc
test
or
into
mov
jno
shlb
pop
arpl
and
pop
mov
sub
adc
pop
add
cmpsl
aas
push
ljmp
pop
test
cmpsb
inc
cs
mov
mov
sti
mov
pop
dec
and
jmp
add
dec
aam
or
adc
dec
add
mov
std
add
pop
push
sbb
or
icebp
adc
mov
lock
push
scas
loope
clc
dec
iret
ret
cli
pop
in
pop
pop
and
jns
push
cld
mov
add
cmpsl
loope
scas
xchg
call
scas
inc
iret
cmp
jmp
pop
icebp
lahf
mov
lods
rolb
push
ret
jbe
movsb
mov
outsb
fisubrs
ljmp
int
mov
cmpsb
addr16
cmova
imul
sbb
stos
mov
pop
fs
push
popf
xchg
lock
adc
test
addb
jbe
testl
mov
js
arpl
pop
jp
call
jl
fidivl
hlt
mov
sbb
call
aas
cmpxchg
scas
add
jo
popa
jne
adc
lods
cmp
push
or
push
push
test
push
inc
sub
out
lea
pop
or
repnz
cmc
xchg
mov
xchg
clc
insl
inc
pop
mov
xor
sbb
call
add
and
test
fdivrs
pop
aam
inc
pop
inc
adc
jns
mov
jmp
sub
jno
loope
push
sub
cmp
pusha
adc
xor
xchg
lds
mov
cmp
xchg
push
pop
push
push
lock
lcall
test
and
xorb
sub
add
icebp
outsb
mov
cmp
xchg
scas
clc
mov
pop
push
hlt
or
mov
cmp
sahf
or
jmp
repz
pop
mov
xchg
add
fisttpll
dec
pop
fldt
sbb
repnz
mov
cs
sub
rorl
rorb
cmp
cmp
sub
mov
aad
fidivrl
shlb
dec
cmp
mov
sahf
fmuls
push
fnsave
js
cld
add
pop
adc
xor
xor
dec
pop
or
cmp
cli
push
incl
add
mov
fdiv
pop
out
and
je
nop
and
jae,pt
int
push
pop
adc
repnz
inc
stos
push
ljmp
xlat
add
inc
outsl
and
push
jmp
xchg
push
mov
xlat
scas
xchg
mov
dec
inc
fstpt
outsb
sub
int3
hlt
xor
and
sub
inc
sahf
lock
push
xchg
int
mov
sub
incb
push
adcb
test
shl
rcll
cmc
xchg
sbb
adc
xor
inc
or
jl
mov
psubb
cwtl
push
insb
clc
add
loopne
mov
add
popa
call
fstps
pop
je
push
cmp
aaa
rorl
out
xor
jge
stc
andl
lcall
lret
lahf
sbb
xorb
ljmp
sub
nop
push
mov
loopne
pop
hlt
popf
mov
cmp
jle
movb
adc
and
xlat
cmp
xchg
mov
lods
lods
jecxz
outsb
clc
jl
sbb
es
jecxz
aad
jno
jne
jo
inc
inc
dec
out
ss
test
sbb
sarb
es
cltd
push
fsubrs
movsl
mov
repnz
push
ljmp
repz
data16
push
pop
push
lcall
rolb
adc
xchg
nop
mov
or
pushl
push
mov
lret
and
push
js
lea
bound
cmpsb
das
mov
loopne
mov
outsb
inc
jl
or
or
mov
lret
rolb
fwait
mov
xchg
inc
movsb
sbb
stos
jnp
dec
push
inc
sti
add
sbb
stos
mov
sub
stos
push
outsb
xor
xchg
hlt
mov
roll
inc
lcall
inc
insl
mov
incb
and
inc
fisttps
add
shll
mov
push
repz
mov
or
dec
aad
sbbb
push
lcall
mov
aad
aas
out
cld
jg
push
xor
sbb
push
cld
out
nop
mov
push
jbe
mov
sbb
and
aam
cmc
and
or
addr16
fsubrs
cmp
sarb
jg
cmp
inc
adc
cmp
in
pushf
xchg
xchg
inc
sarl
sahf
imul
popa
mov
add
add
xchg
inc
orb
jo
adc
adc
fistpll
mov
mov
mov
lcall
fsubrp
stos
rclb
sub
lret
mov
ret
xchg
inc
xchg
lods
mov
js
aam
cmp
cmp
in
pusha
mov
lahf
mov
sbb
les
dec
xchg
adc
mov
push
sub
call
test
ret
test
pop
ds
sub
push
stos
lock
test
adc
mov
clc
or
pop
int3
xchg
push
add
add
inc
xchg
inc
imul
mov
movsl
aaa
sub
mov
aam
adc
dec
sbb
testb
mov
lods
adc
xor
add
mov
inc
xchg
insb
push
xchg
movsb
loope
dec
or
and
xchg
iret
push
lea
or
adc
cmp
adc
jo
or
lock
and
adc
xchg
dec
cli
rdmsr
pop
or
clc
mov
je
inc
cmp
inc
clc
test
sahf
xorb
jg
sub
and
in
pop
jle
stos
jno
icebp
outsl
shlb
jmp
adc
push
repz
outsl
mov
jg
and
push
xor
loope
adc
ss
dec
mov
cmp
loopne
xchg
sub
and
xchg
cmp
fildll
repnz
lock
mov
aam
jecxz
xchg
mov
cmp
mov
sub
sbb
stos
xor
cli
sbb
cmp
or
cmp
mov
jnp
dec
shrl
pop
test
push
mov
xor
shl
out
add
stos
dec
mov
sbb
inc
ret
stos
mov
shr
es
push
xchg
clc
ss
mov
sub
or
xor
andb
xchg
jo
mov
sbb
mov
ret
xchg
mov
xchg
sub
mov
dec
jmp
addb
or
sub
or
xchg
mov
das
xor
cwtl
arpl
jb
lret
or
roll
xor
xor
xor
pop
mov
in
leave
mov
and
ret
loopne
aas
popa
inc
push
or
lock
dec
leave
inc
sub
addl
push
sub
shrl
sarb
pop
into
je
lea
jg
xor
mov
mov
cmpps
movsb
xchg
adc
xor
lock
lock
sbb
cli
dec
outsb
roll
fistpl
mov
cmpsl
mov
lea
rol
cmpsb
cmp
out
daa
jle
add
jae
or
scas
inc
add
sub
jmp
pop
mov
rorb
fxch
cmp
scas
mov
rcrb
lcall
sbb
ss
call
aaa
dec
push
loopne
sub
xor
lods
sbb
hlt
repnz
sahf
and
inc
shll
cmpsb
inc
hlt
ret
dec
cld
xor
fcompp
push
adc
mov
std
or
sub
mov
and
and
js
jne
cld
call
cmc
loop
mov
or
pop
in
test
jbe
xor
pop
nop
test
xor
inc
movsb
mov
inc
aam
int
loop
int
add
adc
aaa
pop
pop
inc
lcall
mov
mov
popa
cwtl
push
rcrb
lret
lock
xor
jne
xchg
inc
std
xorb
xor
add
daa
mov
dec
push
jmp
inc
mov
mov
xchg
adc
call
or
clc
out
or
loope
arpl
xor
fnsave
or
bound
mov
push
addb
sub
mov
ds
and
jp
sbb
add
mov
xor
inc
cs
scas
xor
les
lock
in
adc
leave
and
nop
fdivs
jo
enter
mov
adc
call
out
inc
out
fnsave
mov
data16
adc
hlt
arpl
dec
mov
sbb
fcmovnbe
lock
push
adc
repnz
movsl
insl
dec
mov
lea
xor
cmpsb
out
scas
stc
push
xchg
inc
xchg
mov
add
xor
push
ljmp
sbb
hlt
cmc
imul
cli
test
jnp
xchg
cmpsl
jg,pt
sub
inc
imul
sub
jbe
popa
sbbb
add
dec
popa
loopne
or
clc
pusha
std
push
inc
mov
inc
mov
xchg
test
test
sub
push
pushf
or
cmpsl
mov
mov
mov
push
cmc
xchg
ficomps
cwtl
push
ret
sahf
test
inc
jne
movsb
dec
push
cmpsb
fimuls
dec
into
push
cmp
inc
outsb
dec
adc
popa
loopne
xchg
scas
xor
push
mov
dec
xor
push
sub
test
xchg
icebp
or
pop
fwait
pop
lock
cld
and
jo
stos
neg
adc
scas
fisubs
aas
push
ljmp
or
les
mov
pusha
push
mov
mov
push
mov
push
xchg
and
jno
cld
hlt
cmpsb
pop
loop
xlat
push
stos
sahf
stos
outsb
xchg
test
movsl
sarb
push
push
jg
dec
rcrb
sbb
cltd
xchg
pop
fs
lcall
adc
push
rcrl
jae
xchg
in
pop
lret
sbb
mov
sub
mov
push
pop
or
mov
pop
push
sbb
adc
mov
jnp
jnp
mov
lea
jmp
mov
test
pop
bnd
or
cmpsb
dec
fbstp
lds
inc
shlb
dec
enter
cli
add
and
fsubl
rorl
in
mulb
test
out
push
mov
fs
rcl
inc
push
xor
mov
sub
mov
js
push
jl
std
jb
dec
adc
lret
inc
xchg
clc
cmp
push
lret
inc
push
ret
into
jle
into
dec
pop
testb
mov
mov
pop
push
shr
mov
mov
sarl
fs
in
xor
add
or
stos
dec
xor
mov
mov
or
mov
es
add
in
adc
shl
popf
push
mov
dec
xor
aad
daa
dec
mov
sbb
mov
in
jg
addl
xor
test
jmp
xor
mov
add
xor
adc
negl
dec
addr16
jns
lret
mov
mov
call
cmp
stos
in
cmp
popa
inc
xchg
sub
ret
lcall
push
cmc
pop
lret
mov
iret
fwait
mov
or
loope
pop
or
adc
cmp
xor
xchg
mov
pop
outsb
push
hlt
fwait
pop
stos
dec
push
stos
leave
jecxz
dec
clc
dec
out
js
inc
cwtl
lret
shr
ja
fsts
test
or
jne
lods
dec
dec
cwtl
ror
adc
sbb
or
pop
shrl
sbb
aam
aaa
xlat
test
das
mov
in
pop
mov
fwait
add
mov
aas
xor
xor
roll
push
das
add
int3
pop
daa
hlt
and
cltd
shlb
push
jge
mov
jne
jnp
ja
mov
lods
sti
fists
pop
sbb
mov
lock
int3
ret
test
add
test
loop
mov
jl
xchg
adc
xchg
sbb
bnd
imul
cmp
push
sub
and
dec
lods
fwait
add
ror
pusha
add
aas
fcmovnu
push
pop
push
test
dec
jle
repz
aas
hlt
mov
rcrb
nop
call
bound
inc
daa
lock
dec
sub
ficoms
pushf
out
pop
lret
xchg
add
adc
adc
out
push
sbb
imul
or
sub
xor
xorb
sbb
jne
xor
decl
and
inc
cs
fdivrl
clc
aam
jne
aam
lret
fisttpll
test
add
or
add
lock
adc
div
or
or
inc
adc
inc
or
aad
or
test
pushf
movsb
jmp
mov
in
or
xlat
mov
clc
psllw
mov
das
cmpsl
inc
push
ret
test
or
push
cmpsb
mov
loopne,pt
lea
ret
hlt
jnp
pop
arpl
dec
push
pop
movsb
mov
in
cltd
cmp
divl
cmpb
xchg
sbb
inc
adc
rorl
sbb
adc
jecxz
loop
insb
inc
dec
pop
repz
and
jo
lahf
sbb
pop
das
fldcw
cltd
out
adc
andl
stc
mov
sarb
mov
xor
mov
lea
in
loope
mov
cld
sub
aam
push
pop
cwtl
and
adc
lret
stos
adc
add
pop
jne
or
incl
inc
int
or
inc
insb
loope
xlat
ds
aad
incb
testl
incb
outsb
xor
mov
mov
add
pushf
cmp
push
add
or
jle
jnp
popa
rcll
push
stos
and
stos
inc
mov
or
xchg
frstor
loopne
imul
mulb
lcall
ljmp
movsb
cld
add
popf
fisttpll
sarb
xor
dec
inc
daa
movsl
pop
andl
mov
fisttpl
mov
xor
jbe
xchg
push
sbb
sub
mov
mov
clc
jecxz
js
xor
add
mov
outsl
clc
jle
or
adc
fcompl
pop
jp
add
cld
xchg
call
jae
je
inc
pop
pfrsqrt
daa
mov
es
stos
nop
test
inc
arpl
cli
lds
cmpsb
cmp
or
fidivs
nop
mov
shrl
jmp
test
jns
mov
mov
add
movsl
je
mov
mov
inc
xchg
pop
daa
push
clc
mov
inc
dec
dec
cmp
jne
inc
adc
mov
xor
dec
inc
dec
outsl
sub
inc
fisubrl
jecxz
cmp
cmp
pop
sub
xchg
push
outsb
cmp
outsb
fcoml
fwait
mov
mov
outsb
imul
push
jbe
dec
jge,pt
mov
xor
jge
das
push
je
je
pop
testb
stc
add
inc
add
fwait
cli
shlb
popf
fadds
ljmp
sbb
mov
cmpsb
aam
push
sub
movsl
jne
daa
pusha
jge
sbb
dec
mov
lods
sbbb
adc
aas
ret
xor
sub
in
es
cmp
pushf
ja
nop
add
cld
mov
adc
sbb
jno
dec
inc
pop
add
or
scas
pop
int3
cwtl
mov
outsl
mov
fcmovnb
mov
rorl
lret
cmpsl
dec
adc
clc
arpl
movl
outsb
loope
into
push
add
push
xchg
push
add
push
mov
add
lahf
popf
xlat
push
sub
xor
aaa
sbbl
adc
adc
sahf
lock
scas
mov
les
imul
test
push
pushl
cld
xchg
movsb
in
and
xchg
jae
fcmovb
dec
sbb
lcall
add
inc
imul
or
and
pop
jno
cmp
lods
clc
stos
into
movl
loope
xor
iret
popa
mov
cs
lahf
jb
popa
dec
cmpb
sahf
lods
or
xchg
loope
lahf
dec
xchg
sbb
fwait
cmpl
scas
aam
adc
loopne
jb
scas
icebp
sbb
jl
or
ljmp
fcomi
add
cmp
test
adc
cld
xchg
push
jl
adc
ds
jecxz,pt
out
pop
outsl
pop
pop
ja
aad
sahf
mov
add
push
pop
xchg
fdivl
sbb
cli
push
jo
inc
mov
and
jns
mov
aad
das
pusha
les
cmpsb
das
sbb
imul
mov
inc
imul
call
xlat
xor
addr16
sarb
xorb
xorb
push
add
loope
cmp
sarb
jmp
sbb
xlat
in
es
pop
lahf
loop
sbb
cli
js
push
arpl
jbe
or
mov
es
xchg
cld
mov
push
sbb
dec
js
inc
cli
add
jle
push
or
push
xchg
pop
push
jae
adc
fdivs
and
mov
dec
lods
mov
cmp
pushf
clc
jmp
dec
ljmp
popf
icebp
xchg
sub
movsb
push
sbb
cmc
inc
out
adc
jnp
jmp
lret
stc
or
movsb
clc
lahf
popa
nop
sub
mov
ret
mov
mov
fsubl
or
lds
add
cmp
insb
pop
xchg
scas
add
addb
sub
fwait
test
cmp
mov
push
add
ret
inc
lds
jle
sahf
inc
shrb
fiadds
popf
ret
dec
mov
push
bound
out
clc
push
add
lahf
add
loopne
lcall
filds
dec
lds
leave
loope
es
fstl
mov
dec
inc
in
jnp
sub
insb
mov
inc
mov
and
cwtl
inc
sbb
jno
mov
push
es
jbe
mov
push
push
sbb
dec
pop
bound
fbstp
fldl
xchg
mov
clc
loope
pop
aam
xorl
pop
cmp
std
test
pop
lods
iret
push
adc
mov
and
mov
out
cmpb
jp
xor
sbb
inc
jb
dec
jge
inc
movb
nop
aad
jmp
lea
jns
sbb
repnz
lods
pop
jg
sbb
int3
into
out
movsb
sub
mov
inc
inc
add
or
push
jo
les
fpatan
popl
imul
aaa
lds
ficoml
jmp
addr16
and
cld
adc
jle
jp
into
ficomps
aad
mov
idivl
xchg
or
lahf
and
jno
sbb
sbb
sbb
mov
rcrl
inc
sbb
xchg
rol
testb
sbb
fsubp
and
insl
adc
inc
mov
aas
sub
hlt
mov
mov
xchg
jl
call
and
dec
shlb
scas
mov
mov
jmp
popa
sti
loopne
jb
mov
test
mov
test
gs
test
shlb
jle
jo
inc
or
pushl
test
loopne
xor
insb
rcll
lods
push
rolb
push
rorb
xchg
arpl
cli
mov
push
ja
call
clc
inc
js
das
pop
xlat
cs
cld
lret
decl
xorb
dec
mov
lock
sub
add
cmp
fsubp
mov
iret
dec
jmp
add
pop
outsb
sub
cmp
add
repnz
sbb
xor
mov
sbb
and
push
leave
les
lods
mov
cmc
mov
inc
call
push
dec
ficomps
xchg
mov
stc
jns
mov
shll
fisttps
add
movsl
je
test
push
or
jge
icebp
inc
add
push
push
cmp
dec
das
push
dec
adc
dec
or
xor
xor
sub
pop
add
mov
addr16
add
fs
stos
mov
das
xor
and
add
pop
cli
and
mov
test
jo
rclb
out
pop
rorb
inc
dec
sar
push
push
outsl
insb
dec
mov
or
pop
test
xor
mov
out
xchg
jle
pop
pop
lods
jle
dec
popa
aas
test
add
test
pop
push
cmpsl
and
loope
test
xor
push
test
or
aam
ficoml
jb
and
and
mov
sbb
jne
insb
pop
mov
mov
add
lret
mov
ss
pop
xchg
rcrl
sbb
mov
loop
insb
mov
push
mov
mov
enter
xchg
nop
js
popf
subb
jp
mov
cmpsb
xorb
out
jl
xor
adc
pop
jg
ret
pop
les
insb
cmp
pop
ret
sbb
cmp
pop
mov
inc
jp
cmc
mov
loope
dec
adc
lea
mov
cmp
outsl
sub
sbb
ljmp
jge
popl
repnz
ret
sbb
test
outsb
test
push
sbb
lods
sbb
cwtl
shr
in
test
push
divb
jbe
jno
stos
sbb
add
ds
mov
add
testb
xor
cmc
ret
int
les
mov
ljmp
push
add
dec
jge
loop
sub
in
xchg
add
popf
push
inc
clc
aam
sbb
das
ret
xor
iret
sbb
mov
in
add
call
cli
enter
lahf
cmp
inc
pushf
and
bound
and
sub
push
cld
and
ja
lods
push
cmp
adc
pop
out
inc
es
das
ss
or
or
and
jecxz
dec
jecxz
cmp
ja
pusha
inc
pop
ljmp
pop
cli
dec
call
mov
stc
shl
popf
sbb
les
cmpsb
mov
push
hlt
adc
or
mov
aam
das
call
mov
adc
pop
add
mov
mov
xor
movsb
mov
sti
adc
mov
scas
outsl
cli
clc
dec
or
pop
add
push
xor
inc
ficoms
jg
bound
dec
cmp
insl
xchg
hlt
stos
lea
out
decl
mov
sarb
and
adc
fsubrl
sub
test
cmp
ret
fsubs
leave
shrb
icebp
sub
movsb
xlat
push
ljmp
je
andb
adc
inc
xchg
and
cmpsl
sub
ds
mov
or
lret
or
mov
inc
add
das
xchg
jle
test
inc
and
add
dec
ljmp
sub
mov
mov
mov
xchg
xor
insb
dec
add
cmpl
jmp
out
add
cmpsb
fdivp
mov
adc
cmp
and
insb
data16
cmpl
pop
fcmovu
jle
in
ja
aas
xchg
inc
cmp
into
mov
rorl
sub
inc
push
movsb
cld
mov
adc
ret
inc
and
ret
push
jecxz
jbe
cmp
movsl
sbb
jne
sub
imul
inc
sub
and
scas
loope
mov
pop
push
nop
jae
lahf
xor
and
pop
sub
jecxz
add
testl
daa
enter
push
jno
or
push
sarl
sbb
into
repz
loop
mov
jbe
pop
adc
xor
std
imulb
adc
push
mov
inc
push
xor
cmpsb
fdivl
pop
add
push
ljmp
lods
lret
mull
mov
dec
push
cmp
mov
adc
sbb
scas
dec
mov
popa
cmp
mov
jg
xor
or
inc
out
cmp
dec
pusha
adcl
cmc
pop
mov
sbb
mov
add
adc
out
fcos
jns
mov
add
std
dec
cld
mov
add
leave
jb
pusha
testb
inc
and
lcall
sbb
imul
xchg
adcb
push
pop
cmpsl
mov
mov
push
and
push
pop
hlt
xor
jecxz
cld
arpl
mov
jmp
and
mov
sar
sarb
icebp
lods
repz
and
pop
xor
mov
sti
and
sub
fcmovnb
gs
outsl
pop
add
mov
or
enter
ret
mov
mov
out
mov
mov
push
popf
or
stos
push
pusha
inc
xchg
stos
roll
xchg
or
cld
mov
je
cs
add
test
insl
inc
test
xchg
ljmp
push
fmulp
add
mov
insl
or
jge
test
add
pusha
sub
jge
jle
je
nop
jecxz,pt
inc
insb
pop
sub
adc
push
stos
mov
or
shll
dec
pop
cmpsl
jecxz
xchg
adc
add
and
cwtl
in
pop
mov
jp
nop
pop
dec
xor
add
inc
in
jo
and
sbb
insl
or
out
test
shl
imul
ret
add
repz
popa
or
dec
add
repnz
push
adc
add
mov
test
rol
and
pop
call
xor
push
mov
daa
inc
mov
adc
and
getsec
loopne,pt
jo
jns
outsb
xadd
out
cli
jae
outsb
sub
pop
mov
sub
mov
mov
sub
in
repnz
jno
adc
shrb
jp
or
inc
xchg
push
mov
loop
jo
sbb
dec
pop
stos
push
dec
insb
adc
add
fidivrl
nop
mov
and
mov
or
mov
and
cwtl
push
outsb
lfs
lcall
xchg
mov
and
push
dec
push
and
and
jle
rol
sub
call
mov
dec
adc
add
dec
mov
pusha
rclb
cs
aam
sbb
je
cmpl
cmc
lret
insl
pop
push
xlat
sbb
push
lods
or
popf
int3
imul
xchg
and
xchg
stos
mov
mov
or
adc
mov
fcoms
loope
mov
sqrtps
pop
cltd
push
cmpsb
xchg
out
inc
mov
mov
push
rclb
mov
lretw
mov
js
xorb
ljmp
adc
push
aas
repnz
sbb
pop
jno
lds
aad
lahf
ss
cwtl
jne
pop
jbe
lock
inc
sti
xchg
sbb
mov
addl
push
fdivl
xchg
leave
ret
mov
pusha
adc
outsl
cmp
inc
loopne
push
lcall
push
aam
mov
mov
movsl
lcall
in
push
jecxz
sub
data16
jmp
lock
sbb
rcr
hlt
test
lret
jnp
xchg
pop
add
scas
pop
or
cli
pop
roll
leave
aam
push
pop
jb
ret
mov
movaps
xor
movsl
push
shr
xchg
stos
pop
fimull
test
or
test
xchg
loop
mov
mov
xor
xor
sbb
jecxz
ret
sub
roll
push
int
jno
and
add
jmp
outsb
pusha
jmp
nop
xchg
sub
cmp
mov
xchg
les
adc
aaa
aam
popa
shlb
sbb
ret
sarb
fbld
xlat
sbb
or
stos
movsb
ss
cli
jle
dec
jne
sbb
push
pcmpgtd
mov
icebp
dec
popa
fstl
les
jecxz
push
ret
xchg
inc
adc
call
sbb
push
in
sbbb
inc
or
divl
mov
inc
nop
stos
cmc
mov
add
mov
int3
xchg
pop
cmp
clc
adc
add
or
sub
sbb
or
leave
ret
mov
mov
hlt
scas
fldenv
mov
lahf
and
or
mov
bound
rclb
cltd
dec
pushf
lock
or
inc
pop
push
jp
xor
and
dec
in
xor
pop
jl
sbb
xchg
push
in
xchg
arpl
cmp
shlb
ror
sub
add
jae
vmovlps
pop
je
lret
cmp
lahf
xor
push
mov
sbb
sub
cmp
push
hlt
ljmp
inc
movsb
pop
repz
negb
pop
imul
dec
fs
inc
push
mov
cmp
enter
hlt
lds
ja
push
jno
pop
or
ss
pop
scas
popf
push
mov
mov
dec
fsubrs
sbb
sbb
andl
std
les
xor
loopne
mov
mov
pop
cli
mov
stos
movaps
pop
cmpsl
scas
add
adc
aam
push
pop
stos
pop
jo
hlt
push
inc
rcr
or
jl
loope
push
subb
andl
mov
ds
cmp
push
imul
push
add
mov
mov
mov
mov
push
cld
jbe
and
add
lock
xchg
dec
stos
mov
lds
xor
xchg
andl
push
sbb
fiaddl
jb
push
inc
mov
sarb
xor
sub
xor
fcoms
jmp
inc
add
inc
scas
jo
xor
hlt
lcall
ret
add
xchg
jle
outsb
out
scas
cmp
xchg
mov
mov
ds
add
scas
pop
outsb
sub
cmp
dec
mov
and
jp
push
ds
push
loopne
sub
scas
subb
sbb
loope
pop
fiadds
dec
js
dec
mov
loop
std
mov
nop
xchg
incb
sbb
jne
push
xchg
mov
jnp
sbb
test
mov
add
jge
mov
cmpsl
in
ja
xchg
out
rclb
aad
push
mov
push
push
sub
adc
repnz
std
pop
fldl
xor
add
sub
bound
inc
dec
andb
xchg
add
push
testb
leave
scas
test
inc
jno
lds
leave
inc
xchg
outsb
jmp
cmpsl
cmc
sub
loope
push
js
add
sub
cmpsb
mov
shlb
inc
cmp
adc
cmpsb
mov
and
and
out
nop
sbb
mov
int
repz
xchg
push
pop
and
arpl
push
push
repnz
push
pop
data16
ss
lock
mov
in
push
push
sub
ret
shl
or
cmp
inc
inc
dec
mov
sti
mov
outsb
push
pop
in
sbbb
and
and
popa
test
pop
pop
push
adcl
ret
repz
inc
cmp
sub
mov
pop
sub
push
and
leave
xor
or
sbb
stos
shrl
push
cmc
pop
mov
cmp
cwtl
ret
or
test
lret
in
pop
and
js
sbb
push
mov
popl
or
ret
out
sub
inc
pop
int
lods
aaa
lea
popa
scas
mov
add
dec
imulb
add
lds
testb
sbb
scas
in
shll
fdiv
sub
dec
adcl
jl
test
cmc
add
pop
lods
inc
mov
call
add
jge
nop
pop
shrb
sub
xchg
xchg
push
leave
xlat
ljmp
and
mov
adc
sub
mov
sub
insl
or
jmp
mov
and
enter
xchg
mov
add
outsb
pop
iret
add
in
mov
lea
test
stos
add
movsl
push
and
mov
xchg
dec
pop
push
imul
and
or
bound
xor
les
push
pop
test
xchg
inc
sahf
es
push
out
push
test
nop
push
and
lds
sahf
pop
add
and
or
fsubs
and
add
je
sub
sub
or
pop
jnp
or
add
fisttpl
add
inc
stos
cmp
int3
cmc
inc
test
adc
jg
stos
inc
test
mov
rorb
jno
or
sub
outsb
mov
add
loop
jp
xchg
dec
out
fldt
sbb
les
scas
sub
fstpt
arpl
jae
leave
cmpb
outsb
push
xchg
pop
cmpb
jmp
lcall
hlt
push
test
or
adc
mov
or
lret
mov
stc
mov
hlt
add
ja
adc
lds
fdivl
mov
aas
ret
in
sub
popa
stc
rclb
xor
inc
loope
add
mov
int3
jge
jl
inc
mov
inc
mov
jb
push
dec
pop
jg
hlt
test
jno
fwait
add
push
xor
jns
jl
sbb
icebp
std
inc
xor
push
insb
sub
pop
stos
fisubl
loopne
pop
stc
loop
inc
scas
lea
add
dec
push
cwtl
stc
rorl
xchg
adc
aad
int
mov
mov
jno
call
lret
sbb
push
scas
mov
fcoml
imul
push
sbb
sub
sub
push
xchg
mov
jmp
cmp
adc
stc
icebp
cmp
repnz
mov
sahf
repnz
inc
push
loope
add
or
lret
mov
es
lret
sbb
or
mov
sub
xchg
andps
aas
js
loopne
inc
mov
mov
adc
xlat
xlat
sbbl
mov
insl
mov
sahf
jg
inc
mov
xchg
sbb
add
cmp
cld
mov
dec
xchg
fcoml
inc
push
jb
loop
cmp
fsubp
movsb
jnp
adc
mov
cmpsl
lea
inc
adc
xor
adc
fbstp
or
jo
int3
push
cmp
mov
mov
mov
test
cwtl
mov
subl
xor
xchg
xorb
mov
or
xchg
adc
jne
add
pop
mov
xor
jp
push
pop
mov
xchg
cld
movb
inc
jmp
pop
rclb
clc
sbb
ja
sub
mov
cmp
leave
xchg
and
mov
aad
pop
inc
std
test
sub
mov
push
gs
dec
dec
jg
sbb
sbb
movsl
loopne
mov
leave
add
pop
aas
pop
jp
jle
mov
add
xchg
jmp
fsts
shlb
pop
cmpsb
push
sbb
xor
shlb
fistl
mov
movsl
mov
or
int3
mov
mov
rcrb
clc
jnp
dec
sti
mov
cmpsb
cmp
sbb
rolb
or
xor
dec
sbb
ret
jno
sbb
fs
pop
cmp
fstpl
or
sbb
mov
cld
int3
jbe
lret
mov
scas
sti
xchg
fldl
mov
or
daa
dec
inc
mov
hlt
rclb
add
push
mov
add
xor
leave
in
push
xor
and
rolb
les
mov
ljmp
mov
sub
loope
add
add
stos
ss
adc
lret
mov
sbb
mov
orb
push
shlb
sub
push
sbb
adc
xchg
xor
js
mov
sbb
je
mov
shrl
mov
sbb
repz
or
pop
xchg
xor
cmpsl
ret
es
mov
mov
scas
into
pop
pop
lahf
xor
xchg
ret
mov
ror
repnz
loopne
jmp
xchg
stos
lock
push
pushf
mov
lret
add
pop
lahf
sbb
dec
clc
dec
movl
jbe
test
outsb
and
and
fmulp
popf
dec
cmpb
dec
mov
hlt
lcall
add
pop
add
and
pop
inc
adc
cld
or
roll
test
xchg
sbb
je
and
addl
and
jp
sub
xchg
aad
cmc
in
lret
popa
shr
int3
inc
cmp
add
fildll
jo
fnstenv
jle
and
mov
popf
insb
inc
outsl
out
push
xlat
mov
icebp
and
xor
mov
mov
and
arpl
cmp
out
jns
pop
cmp
in
pop
mov
scas
gs
rcrb
mov
lods
and
push
fisttps
and
jb
dec
rolb
mov
jle
adc
mov
push
orb
das
push
test
call
mov
mov
adc
and
sub
insl
pop
addb
scas
cmpsl
push
loopne
fmull
cmp
lcall
cmpsl
jns
jb
xor
inc
xchg
repz
fdivr
push
jg
pop
jp
rcll
jp
inc
dec
movsb
xchg
lods
iret
dec
inc
leave
inc
jmp
jp
sub
xchg
jl
sub
sbb
push
aaa
mov
das
mov
fdivl
adc
popa
dec
mov
xlat
jge
xchg
inc
add
loopne
pop
add
scas
insb
cli
jg
adc
into
adc
xchg
add
xor
mov
cwtl
xchg
push
sub
or
push
jle
dec
pusha
jl
aaa
out
cli
jecxz
aas
sub
xor
adc
call
pop
adc
aaa
jl
cmpsl
cwtl
pop
mov
push
incb
or
inc
scas
adc
adcb
rcrb
and
dec
or
ss
xlat
sbb
popf
or
pop
loop
daa
shll
cmp
push
out
add
push
insb
cmp
ljmp
fs
mov
aad
adc
jg
add
cmp
dec
push
add
std
add
inc
sbb
xor
pop
mov
lods
ds
mov
cmp
xor
pushl
add
movsl
out
xor
pushf
inc
mov
fcomps
inc
outsl
and
pushaw
cmpsb
xchg
popa
fsts
add
sub
mov
lods
xchg
mov
cltd
call
ljmp
adc
cmp
test
rcl
aad
stos
pop
fisttpl
or
sti
or
cli
lods
sub
xor
inc
xchg
loop
add
std
call
imul
out
xchg
sbb
adc
jmp
paddsb
push
test
movsb
in
add
pop
or
or
and
mov
ja
add
paddusb
cld
adc
scas
push
xchg
mov
xchg
push
arpl
or
sar
fs
fwait
cwtl
inc
push
push
fildll
pop
xchg
data16
outsl
jo
pushf
cltd
push
scas
xchg
adc
imul
fadds
fwait
mov
sbb
sbb
divl
mov
test
add
pop
in
pushf
dec
sbb
ror
inc
cmp
hlt
jge
mov
dec
out
popa
pop
icebp
xchg
adc
mov
pop
dec
sub
push
push
lock
jp
mov
es
mov
inc
sbb
adc
clc
and
aam
and
dec
jne
push
test
enter
fisubrs
int3
dec
pusha
movsb
dec
jmp
movl
push
sub
scas
ret
divb
sub
pop
sti
iret
test
cmp
dec
cmp
jl
sbb
push
jmp
sub
out
cmpsb
dec
add
adc
add
lcall
lret
cmpsb
cmp
or
or
mov
and
inc
daa
push
push
pop
jg
loope
jle
rorb
push
call
adcb
sbb
pusha
inc
orl
xorb
insb
and
rcll
ljmp
or
fs
xor
mov
jmp
lret
jo
in
lcall
cld
js
js
mov
push
lea
xchg
and
mov
lret
jg
loopne
jl
cmp
and
fadd
out
loopne
and
sti
popa
xor
push
push
sbb
mov
mov
aam
mov
loopne
xchg
rorb
sahf
cmp
lock
jns
xchg
test
sub
outsb
or
add
fisubrl
jne
mov
mov
xorb
jg
in
mov
dec
xor
fst
loopne
or
call
enter
fwait
jmp
pushf
adc
daa
sub
daa
sbb
aaa
stos
imul
fdiv
lret
popf
sbb
cli
data16
fildl
sbb
aas
nop
push
and
push
jbe
scas
inc
std
inc
dec
jae
push
data16
inc
add
dec
mov
imul
push
mov
push
inc
push
jnp
pop
and
fs
inc
jle
rclb
inc
cmp
mov
push
fbld
fwait
pop
pop
mov
xchg
lods
clc
xchg
xchg
ds
rorb
lret
in
lock
pop
jge
push
mov
sahf
roll
cwtl
sub
incb
jae
in
clc
mov
cli
stos
jmp
add
lock
jne
and
jb
push
push
sbb
test
mov
dec
pop
negb
enter
push
stos
icebp
int
outsb
sub
decl
and
out
pop
hlt
xchg
xchg
fcoml
imul
mov
and
and
test
movb
or
mov
jmp
aaa
shrb
ss
jle
xor
push
stos
mov
std
dec
jo
pushf
jno
pushf
ret
gs
fiadds
ret
dec
xor
mov
xor
mov
add
or
jle
cli
pop
jmp
sbb
loopne
mov
loopne
sahf
icebp
adc
lea
mov
ficoml
pop
xchg
shl
sub
adc
add
bound
faddp
mov
out
xlat
pushf
dec
pop
mov
pop
sbb
sub
fstps
popa
add
push
cmp
inc
shrl
push
movsb
addr16
xor
ret
dec
iret
pop
lcall
pop
sahf
dec
cli
cltd
or
mov
lcall
je
or
adcl
xchg
adc
mov
push
jb
lahf
sbb
add
aaa
add
lods
ret
repz
cmp
adc
sub
push
inc
xchg
mov
call
pop
popa
pop
lock
rorb
scas
sub
mov
mov
mov
pop
popf
sbb
fdivs
filds
sbb
or
mov
js
loope
aaa
jo
add
les
xchg
fsub
cmp
inc
movsb
lock
jle
sbb
cmp
dec
pusha
mov
bound
data16
cmpsl
xor
pop
dec
cmpsb
push
sub
roll
sub
mov
pusha
lcall
dec
addb
or
mov
cmpsb
movsl
call
cmpsb
jle
push
filds
test
sub
and
or
xor
repz
repnz
aam
lock
xchg
cltd
mov
add
mov
jp
cmp
adc
add
adc
fidivs
push
lahf
insb
xchg
jb
xor
lds
movsb
push
mov
push
loopne
xor
adc
jno
cmp
enter
jno
imul
cmpsl
mov
and
sbb
sbb
andb
hlt
or
jae
pop
into
push
xlat
fnstenv
pause
adc
dec
or
mov
call
xor
stos
jmp
cwtl
imul
lock
movsb
mov
xchg
xchg
xchg
stos
mov
and
incb
inc
aam
jo
inc
insl
and
add
or
pop
les
adc
cld
mov
or
mov
or
fsubs
iret
fstpl
sbb
push
adc
aas
inc
cmp
nop
sub
inc
pop
sub
push
xchg
or
lock
incb
icebp
lahf
add
xchg
mov
mov
dec
stc
and
and
fimull
data16
ficoms
sub
jmp
ds
jle
and
add
ret
out
test
rcrl
mov
sub
inc
icebp
fdivs
sub
pop
sbb
testb
test
fs
aam
mov
sahf
cmp
mov
sarb
xchg
push
jbe
out
xorb
pop
cmc
icebp
xchg
add
mov
jle
fmuls
lahf
and
xlat
and
jnp
lock
push
inc
push
fwait
and
lea
sahf
adc
xor
pop
mov
jo
add
lock
pop
xlat
or
xchg
push
fnsave
dec
cli
xor
fmuls
test
call
loopne
or
not
loop
rcll
mov
insb
sbb
mov
mov
add
bound
into
push
or
test
cmc
cwtl
insb
push
into
add
dec
orb
push
xchg
outsb
xor
dec
daa
sbb
cld
loopne
or
jmp
ljmp
fstl
cmp
imul
adc
sbb
stc
jg
xor
xor
mov
fstps
jns
stos
add
aad
sbb
push
inc
stos
in
sub
jns
and
inc
jge
repnz
aad
xor
repnz
cltd
in
dec
das
cmp
adc
inc
out
add
pop
xor
movl
mov
mov
add
stos
jnp
or
aam
jl
ljmp
daa
loopne
push
mov
cli
lock
push
sub
mov
mov
push
mov
mov
inc
out
mov
shll
add
scas
push
sti
fisubrs
lret
lods
stos
test
hlt
inc
inc
push
mov
mov
ficompl
or
aam
push
fdiv
cltd
dec
xor
sub
movsl
jo
clc
ficompl
test
shl
and
test
sbb
out
sub
sbb
or
ss
or
pop
movsl
dec
call
mov
inc
mov
mov
sbb
fs
dec
adc
fmuls
inc
dec
dec
pop
ffreep
je
pop
insb
rcrb
and
xchg
clc
mov
addl
mov
push
add
ljmp
add
test
add
ja
bound
clc
loope
dec
fwait
push
pop
dec
pushw
sbb
lods
or
mov
jle
fsubp
jle,pn
loope
and
enter
rcr
outsl
lods
in
jnp
mov
mov
loopne
add
mov
je
xchg
cmp
bound
test
outsb
cmc
mov
cld
mov
sti
frstor
repnz
add
pop
push
mov
fldenv
pause
xchg
cmp
test
ss
mov
xchg
mov
fucomp
fadds
sub
pusha
mov
add
or
aam
push
mov
xchg
add
cmp
xchg
adc
sar
je
inc
sub
jno
fistpll
int
jb
sub
xchg
mov
test
fmuls
mov
cmp
repnz
push
ds
movsb
ret
mov
mov
add
fwait
push
push
push
enter
insl
enter
repnz
and
jp
jg
cld
cmp
dec
subl
mov
dec
add
cmp
sbb
andl
or
call
add
jno
leave
dec
les
cltd
jno
dec
xchg
adc
clc
or
add
inc
ret
outsb
pop
and
lcall
inc
out
add
mov
sbb
jmp
jne
repnz
lods
inc
sub
mov
push
loopnew
mov
ret
mov
outsl
add
pusha
mov
cmp
fnstenv
frndint
mov
push
sbb
ret
fwait
pop
shlb
fiadds
std
xchg
mov
push
push
out
lret
sbb
mov
xchg
pop
fidivl
aaa
dec
xchg
nop
pop
int3
mov
ja
jmp
inc
pop
add
sbb
adc
test
mov
es
jbe
subb
push
insb
test
into
inc
cwtl
add
sbb
jbe
sub
les
pusha
ret
js
adc
in
das
je
mov
inc
pop
xor
jo
and
inc
outsb
cmp
dec
cmp
push
mov
je
in
jb
jge
subl
test
jo
cmp
ds
mov
adc
sahf
aas
es
aaa
leave
inc
push
dec
inc
sub
mov
es
mov
insl
test
cld
jmp
sti
push
push
or
jle
dec
pop
lcall
jo
stc
xchg
lods
rcr
or
in
and
lock
pop
mov
daa
xchg
loope
shll
jmp
lods
cmpsl
fs
cmp
cmp
testl
jecxz
shrl
mov
mov
std
inc
js
into
loop
std
cmp
jns
lret
xor
mov
and
movsb
jecxz
dec
dec
loop
scas
push
or
sahf
jnp
pop
add
jmp
rol
cli
xchg
push
les
into
or
cmp
push
xchg
xchg
std
pusha
push
shll
mov
jmp
cmpsb
sbbl
sub
mov
sub
adc
and
push
sbbb
ss
cld
negb
movsl
outsl
incb
pop
iret
or
shrb
mov
cld
fs
sub
sbb
sbb
into
or
nop
pop
push
inc
into
mov
insb
add
sbb
jle
stos
jmp
pop
shrb
add
mov
sub
data16
add
leave
arpl
shll
out
or
icebp
mov
lods
pusha
or
add
ficoms
adc
enter
inc
xor
ror
mov
shll
movsb
or
jp
or
xor
js
stc
loope
mov
or
lcall
fucomi
xchg
int3
xor
adc
aas
fimuls
gs
ss
das
sbb
xor
ja
fisubl
mov
and
mov
push
movsb
sub
pop
ljmp
sub
jbe
xor
pop
scas
sub
stos
pop
ret
mov
enter
lock
and
and
mov
hlt
pop
es
push
sti
pop
jmp
and
aas
cld
mov
xor
rorb
dec
aaa
arpl
dec
or
mov
adc
repnz
add
and
or
xchg
jbe
sarb
das
clc
sub
inc
push
fabs
or
stc
dec
sub
shl
adc
cmp
mull
adc
bound
mov
jb
sbb
or
aad
add
add
xlat
mov
scas
xor
fisubrs
mov
test
inc
rcrl
mov
inc
stc
push
xchg
xor
movsl
dec
sub
sbb
ljmp
rcrb
pop
mov
cmp
push
xor
lea
xchg
decl
dec
lods
cmpsb
mov
js
or
add
loop
push
add
rcll
inc
loopne
inc
subl
cs
lahf
xchg
fmull
xor
pop
dec
rcrb
es
add
mov
mov
adc
rcr
cltd
jp
and
jecxz
cmpl
cmp
cmp
cmpsb
add
inc
mov
inc
push
fs
pop
cmpsb
push
xchg
and
jg
pushf
bound
cld
fpatan
mov
test
push
sub
or
sub
sbb
and
ss
cmp
clc
mov
pop
repnz
jmp
loopne
pop
or
xchg
lock
pop
mov
into
dec
fdivrs
outsb
sub
mov
sub
push
lahf
mov
xchg
mov
jl
xchg
ret
or
push
pop
lock
mov
js,pn
int
scas
push
fidivl
insb
fwait
outsb
inc
add
sub
mov
xchg
out
mov
ret
sbb
add
aaa
mul
cs
mov
inc
mov
repz
in
jl
xchg
js
pop
dec
andb
imul
jae
rcrb
push
sub
movsb
inc
sub
fwait
push
mov
int
cmp
jle
movsl
mov
leave
loopne
ljmp
mov
loop
mov
add
mov
imul
cmp
insl
nop
fadds
cmpsb
jmp
aam
movsl
mov
jb
orl
push
push
jnp
mov
aas
aad
push
xor
mov
test
imul
pusha
sbb
sub
and
out
es
mov
mov
bnd
dec
pusha
push
int
jbe
inc
or
mov
enter
enter
mov
xlat
xchg
push
hlt
xchg
cld
cmp
mov
dec
cmpsb
and
add
fwait
clc
mov
repnz
add
mov
sub
push
call
scas
jmp
je
lods
mov
mov
rorl
js
lods
clc
arpl
js
rcl
sub
mov
inc
sub
addr16
cmp
aam
das
lock
push
dec
mov
xor
icebp
mov
mov
push
pop
icebp
cltd
frstor
sub
add
add
add
shlb
sti
sbb
add
pop
sbb
sar
test
push
mov
add
cmp
adc
sbb
sub
lds
push
nop
cmp
or
fdivrl
aas
cmpsb
test
in
jmp
call
xor
push
inc
les
enter
cli
inc
imulb
inc
mov
imul
nop
jno
xchg
adc
cmpsb
inc
mov
and
pop
fnop
jle
fisubrs
jmp
or
push
popa
lcall
mov
xchg
repz
mov
sbb
rcl
jnp
fdivrs
jbe
test
push
mov
cmp
push
and
addb
inc
lahf
cli
cld
jg
push
pop
add
xchg
loopne
cmc
xchg
nop
lea
cmp
adc
mov
dec
cmp
loop
enterw
fdivrs
add
and
ja
xchg
xchg
pop
movsl
xor
ja
mov
inc
adc
outsb
adc
mov
aas
ss
dec
inc
jle
wrmsr
fdivr
scas
jnp
add
push
nop
cmp
mov
shl
jg
mov
mov
xchg
push
sbb
nop
rorb
mov
sub
mov
mov
xchg
adc
mov
fwait
mov
inc
fistl
imul
sub
cmpsb
repz
cmp
cltd
das
inc
call
pop
jge
jle
sub
movsb
xor
xor
push
push
pop
fwait
add
cmpsb
pop
je
out
sti
add
xor
arpl
mov
sub
mov
and
ja
add
or
mov
mov
lock
dec
cmp
test
add
leave
push
imul
sbb
test
inc
bound
aam
xchg
cmp
fs
leave
xchg
jmp
dec
outsl
int3
jns
jp
scas
nop
arpl
push
insl
inc
ljmp
sarl
je
add
fistpll
inc
sahf
test
jne
aaa
cmovne
jbe
rorl
inc
rorl
ss
adc
fs
lahf
mov
add
add
push
push
or
xchg
and
jae
or
push
xor
mov
adc
lock
dec
pop
mov
lahf
xor
jge
je
jle
jp
clc
stos
fwait
and
mov
sbb
out
inc
sbb
add
cs
out
dec
inc
je
xchg
dec
adc
jg
inc
ss
cmpsl
aas
jmp
jno
sbb
incl
pushf
pop
add
mov
fstps
mov
pop
rorb
pushf
pop
xor
push
sbb
and
ja
cli
push
jle
lods
aas
lcall
inc
add
dec
pusha
das
ret
pop
mov
pop
sbb
cmpsb
hlt
fidivl
and
mov
push
mov
cmp
shl
push
push
out
push
ss
repz
ljmp
aas
and
incl
cmp
xchg
pop
imul
xor
mov
lret
dec
js
shlb
test
jge
lcall
pop
mov
push
pop
mov
ret
mov
jle
lods
ret
sbb
je
sbb
mov
fdivl
iret
loopne
jecxz
outsb
mov
in
jo
icebp
jg
mov
jle
push
push
push
scas
add
inc
or
clc
and
pusha
adc
outsl
std
and
fstl
add
adc
jl
or
pop
loop
push
dec
mov
inc
loopne
push
add
fdivs
xchg
mov
push
int3
add
leave
add
jne
lret
cmp
sbb
and
movsb
aas
inc
stos
inc
jmp
and
ss
xchg
lods
inc
adc
aas
push
inc
add
ffreep
fwait
andb
cli
sub
or
pop
inc
add
aas
push
ret
ljmp
aaa
or
push
dec
cli
push
test
or
es
mov
jns
shrb
loop
ja
adc
jl
cli
ja
filds
loopne
faddl
inc
or
mov
divb
add
cld
imul
adc
sbb
and
pop
dec
data16
xor
inc
pop
mov
push
and
cmp
stos
ljmp
int
add
sub
push
or
enter
xchg
ja
cwtl
add
add
xor
sub
out
xorb
xor
inc
cmp
cmp
push
cmp
xchg
jb
loope
movb
sub
pop
outsb
pusha
jno
push
sub
mov
outsb
lock
inc
adc
jbe
ret
cmp
and
loope
add
jo
mov
dec
mov
repz
mov
sub
cs
mov
mov
mov
shlb
jb
ljmp
add
push
ds
icebp
xchg
adc
loop
rol
mov
mov
jle
cmp
or
push
insb
adc
lcall
sbb
rcr
mov
push
pop
fcompl
sbb
fs
push
andnps
ss
andl
xor
mov
cld
push
rcl
push
out
mov
mov
or
mov
int
sub
and
xchg
push
cld
pop
ret
or
push
cmp
mov
and
clc
xorb
call
aas
js
jae
mov
leave
jl
fdivs
je
test
mov
fisubs
arpl
ret
ret
pop
cli
mov
jmp
inc
sbb
cmpb
popf
fnstsw
add
push
out
jp
andl
repz
sbb
loopne
inc
mov
out
sub
ret
pusha
hlt
or
jo
sbbb
jb
xor
adc
loopne
pusha
or
cwtl
dec
xchg
es
shll
mov
pushf
and
cld
clc
aad
mov
js
mov
nop
mov
cmp
xchg
or
aam
xchg
jmp
mov
inc
jle
test
pop
repz
sbb
jb
push
inc
jnp
add
rol
adc
pop
and
inc
xor
int3
test
and
xchg
ficoms
pop
cmp
mov
adc
lea
hlt
sar
sub
xchg
in
and
mov
leave
push
dec
popf
hlt
ror
lods
adc
and
add
in
insb
mov
dec
cld
push
movsb
lods
dec
cmpsb
test
add
pop
jns
push
and
dec
mov
inc
orl
insb
loope
xchg
enter
adc
xchg
aaa
mov
clc
cwtl
dec
pop
clc
pushf
jl
outsb
mov
and
js
stc
fdivl
jbe
mov
sbb
aaa
add
in
lcall
cmp
push
dec
push
lock
push
fndisi(8087
ret
cli
cli
push
push
shrb
hlt
push
out
sahf
rorl
push
xchg
rolb
inc
mov
jecxz
push
mov
and
loop
subb
lock
das
repnz
iret
mov
movsb
sbb
lods
std
jg
mov
clc
dec
sahf
xor
push
jg
pop
cli
test
sub
mov
pop
adcb
and
push
push
or
lret
loopne
and
cmpsl
or
dec
lahf
ret
mov
ss
out
outsl
xor
rclb
mov
shl
incl
mov
adc
add
jl
dec
ljmp
sub
jne
or
inc
aas
clc
and
cmp
les
arpl
sbb
mov
jle
dec
lods
repz
js
movsl
jae
out
or
or
les
std
loopne
adc
add
adc
mov
xchg
aad
jo
ss
repz
inc
into
movsb
sbb
add
fiaddl
adc
add
bound
jp
fcmovb
ja
dec
mov
pushf
insl
pop
das
jge
push
or
cld
add
and
fidivl
adc
and
sarl
call
jbe
aas
inc
adc
fsubrp
and
mov
aaa
mov
adc
adc
retw
call
mov
mov
in
cwtl
loop
jmp
std
stos
cmc
xlat
lcall
pop
cmp
je
jo
or
mov
fldl
fcmovbe
mov
sbb
mov
adc
mov
test
in
dec
xchg
mov
popa
jl
xadd
outsb
mov
loopne
push
sbb
loopne
fdivrl
jg
aam
push
stc
insl
or
outsb
push
es
loopne
jge
cld
ljmp
and
mov
sub
and
xchg
scas
sub
and
pop
mov
ja
add
decb
jecxz
fcoml
pop
imull
addr16
add
cmp
mov
pop
cwtl
orl
rcrb
rclb
or
inc
cmp
js
adc
hlt
xchg
mov
and
mov
push
aaa
mov
mov
outsb
scas
cwtl
aas
adc
and
sub
mov
es
mov
cmp
add
scas
or
cmp
xor
add
fidivs
inc
jecxz
inc
repnz
hlt
es
inc
push
push
in
iret
sub
xor
adc
out
xor
push
xchg
add
mov
mov
push
inc
dec
popa
repnz
jns
lock
adc
sbb
mov
pop
fsubr
mov
pop
xor
inc
ret
dec
test
fistpl
aas
push
pop
mov
jp
jbe
sbb
out
in
scas
and
xchg
mov
mov
mov
jb
mov
xchg
fwait
cmpb
push
jae
mov
scas
add
jne
insl
xlat
or
pop
sbb
sahf
xor
imul
add
adc
xor
and
sbb
push
sbb
push
es
xor
orb
pushw
mov
inc
roll
mov
mov
cmpb
shlb
mov
mov
mov
or
dec
cmp
imul
test
or
test
inc
out
dec
jne
and
push
pop
loop
cld
add
adcl
or
cmpsl
outsl
push
out
movsl
jbe
rorb
pop
push
in
aaa
jmp
ret
test
ss
xlat
call
cli
cltd
sub
outsb
jg
jo
call
arpl
into
mov
les
lret
mov
adc
push
insb
inc
push
int3
fimull
out
pop
in
sub
adc
xchg
in
and
insb
dec
aaa
mov
pop
adc
push
cltd
cmp
nop
and
rcl
add
sahf
add
adc
or
xchg
sbb
iret
push
add
test
rorl
add
adc
scas
mov
and
fildll
adc
inc
ljmpw
inc
sbb
jns
sub
mov
add
shrb
cs
dec
sti
add
popa
lcall
lock
xchg
fsub
or
add
outsl
cmpsb
sub
inc
xlat
add
jne
inc
mov
cs
inc
mov
add
test
repnz
lcall
fcoml
loope
dec
and
mov
stos
cli
pop
xor
pop
adc
ds
xor
clc
mov
lods
icebp
and
xchg
xchg
inc
repz
adc
xchg
xchg
aad
sahf
and
mov
jns
rorb
push
into
leave
stos
add
pop
cwtl
push
dec
mov
test
pop
loopne
cmp
lods
xor
mov
std
or
push
adc
jle
or
rolb
mov
scas
enter
jno
sub
les
addr16
mov
lret
and
fistpll
pusha
ds
pop
dec
or
cmp
xor
inc
cmp
loop
xchg
leave
andb
xchg
sbb
cwtl
cmp
jno
pop
push
add
movsl
inc
inc
mov
jmp
pop
jne
adc
fstl
adc
mov
xor
and
push
cmp
adc
xchg
pop
adc
push
xchg
nop
pop
push
push
mov
testb
hlt
mov
xchg
cmp
and
sbb
cmp
mov
push
leave
pop
sbb
adc
es
xor
pushw
ja
dec
scas
popf
inc
ret
dec
sub
jge
push
fimuls
xchg
sbb
sets
inc
je
add
lahf
in
sub
pop
dec
movsl
data16
cmp
push
jge
in
or
fdecstp
jo
and
jne
sub
ret
mov
std
add
cmp
or
adc
xchg
and
push
mov
cmp
lea
push
mov
nop
in
lods
data16
lock
int3
jns
mov
xor
sbb
loopne
cmp
lret
dec
mov
adc
in
sbb
je
xlat
faddl
sub
push
stc
adc
sbb
movb
push
push
insb
mov
sub
adc
out
push
dec
arpl
in
shll
push
or
loopne
mov
pop
adcb
ja
and
fs
mov
ror
ret
and
or
sar
mov
xlat
push
mov
jecxz
pop
int
and
insl
inc
dec
jns
fstl
push
jl
shrl
gs
aam
jge
leave
mov
sahf
fadd
inc
xchg
fdiv
je
xchg
jmp
sbb
add
sub
push
imul
or
add
loop
and
outsl
arpl
sub
jbe
xor
into
push
ret
shrl
cli
mov
cmp
xchg
dec
pusha
xor
movsl
inc
or
ret
inc
jmp
cmpsl
in
sbb
mov
mov
add
call
mov
lea
cmp
mov
or
push
lods
inc
jb
xchg
ds
adc
push
gs
pop
adc
xchg
test
mov
xchg
add
inc
mov
je
es
sub
loop
int
or
and
cmp
xrelease
fwait
testb
or
stos
lret
and
add
lock
mov
mov
std
mov
or
inc
adc
hlt
aam
mov
sbb
push
in
fucomi
inc
inc
dec
js
xorl
push
mov
mov
fisubrl
mov
test
insl
cmp
shll
cmpsb
in
jae
inc
addb
out
cmp
jle
test
fildll
add
sbb
sub
es
mov
in
dec
sub
mov
mov
je
loope
data16
add
xchg
mov
popf
ss
pop
fwait
sti
pop
dec
ljmp
add
rcll
or
sbb
mov
push
xorb
mov
or
sti
je
cmp
pop
sbb
mov
ljmp
sub
inc
xchg
addr16
into
scas
sti
movsb
iret
and
pushl
imul
inc
mov
sbbl
push
inc
fldln2
outsb
add
mov
cmp
aas
addb
mov
mov
orb
dec
ljmp
jnp
mov
sbb
mov
sbb
fcoml
cmp
ja
out
scas
cmpsb
in
jg
mov
cmp
gs
stos
addr16
rcl
sbb
mov
loop
pop
push
dec
notb
xor
or
es
icebp
adc
sub
mov
test
adc
adc
pop
push
pop
and
sbb
inc
popa
icebp
shl
ret
test
fstp
xchg
in
shrd
inc
inc
xlat
push
fwait
jbe
xor
scas
add
shl
fucomi
rcr
mov
pop
and
scas
test
push
mov
mov
inc
jbe
pop
xchg
test
dec
stc
adc
inc
sbb
outsl
mov
jp
jl
stos
mov
mov
xor
fs
scas
and
inc
sbb
sub
pop
decl
test
jmp
and
add
jae
jle
xchg
test
aaa
repnz
gs
push
push
outsb
inc
mov
add
mov
in
dec
hlt
call
cmpb
enter
pushf
shll
sar
mov
sahf
inc
pop
lock
mov
cmp
sahf
cmp
cwtl
xchg
pop
outsl
ret
pusha
out
xchg
stos
xor
mov
pop
insl
xlat
orb
inc
imul
add
ss
leave
and
loop
inc
mov
sub
mov
ret
pop
push
int
and
add
stos
xchg
push
cmp
adc
sbb
add
mov
leave
adc
fs
sub
sbb
mov
hlt
popa
aam
clc
fisttps
xlat
mov
add
pop
addr16
je
mov
pushf
shrl
mov
or
adc
push
add
sub
mov
ja
jo
mov
sub
or
cmp
mov
sub
addb
jmp
mov
jb
pop
mov
xor
int
dec
mov
xchg
imul
cli
inc
js
jbe
push
movsb
stc
push
loop
jo
push
add
sub
inc
and
adc
pop
adc
sbb
aad
mov
push
mov
mov
loopne
cmp
icebp
and
fdivs
stos
xchg
imul
sbb
mov
xor
mov
pop
das
mov
mov
jnp
mov
inc
test
cmp
mov
adc
loopne
xor
js
nop
lods
xor
inc
cmp
leave
js
inc
in
jbe
fiaddl
and
inc
popf
sbb
or
dec
shl
xlat
mov
rorb
loop
loopne
mov
in
push
test
sahf
clc
mov
dec
dec
rorb
popa
pop
adc
aam
daa
adc
inc
mov
push
cltd
fsubp
xlat
jmp
sub
inc
adc
cmp
call
popa
cs
inc
sarl
movsb
adc
clc
inc
in
sbb
cmp
popa
dec
cmpb
insb
jg
xor
pop
pop
out
addr16
mov
addb
jmp
xchg
mov
sbb
mov
xor
push
mov
xchg
lahf
and
insl
fwait
in
hlt
jge
or
fidivs
out
add
adc
add
mov
aad
daa
and
push
inc
push
fninit
inc
dec
inc
xchg
test
and
fld1
flds
leave
adc
aam
loope
aaa
or
stos
ret
ficomps
invlpg
add
lea
hlt
xor
lahf
pop
lock
ficoms
inc
cmpsl
jno,pt
cmovl
pop
out
ficompl
mov
inc
popf
popa
bound
mov
or
lcall
inc
jp
fdivrs
push
icebp
cltd
push
push
ja
rol
cs
sbb
aad
pop
jp
clc
sbb
mov
cmp
subb
push
insl
ret
out
pusha
adcl
push
ja
inc
lret
cmp
push
and
jmpw
inc
or
scas
sub
dec
daa
and
pop
test
imul
pop
pop
cmp
test
push
scas
xchg
dec
jp
mov
scas
mov
inc
jne
mov
pushf
or
lods
mov
clc
xchg
scas
and
or
andl
sbb
pop
jecxz
xlat
ret
loop
iret
shrb
push
push
ljmp
mov
andb
shlb
mov
sbb
cmp
aad
jl
stos
or
mov
enter
or
mov
pop
mov
adcl
dec
adc
js
cmpsl
enter
push
mov
fimuls
fldt
subps
shll
pop
arpl
cli
insl
adc
roll
das
mov
mov
lods
inc
test
inc
clc
jle
pop
aas
into
push
nop
add
push
mov
addr16
pop
cmp
outsb
pop
gs
popa
inc
or
cmpsb
add
rorb
pop
cmp
test
cmp
cmpsl
xor
xchg
cmp
cmc
cli
push
pop
push
push
xor
enter
lock
insb
cwtl
cmpsl
hlt
ljmp
push
sarb
mov
clc
shll
or
ret
xchg
xor
add
add
push
or
inc
cmp
mov
push
or
xor
psrlw
sbb
jle
and
inc
jle
incl
pop
jae
adc
lea
jmp
dec
mov
fwait
test
pop
test
lret
hlt
pop
pop
test
cs
imul
cmp
pop
xor
out
mov
out
xchg
js
adc
scas
mov
inc
pusha
outsb
clc
in
cmp
aam
pop
or
or
loope
or
jno
mov
lcall
loope
sub
addl
adc
jb
jo
ljmp
mov
mov
into
and
push
or
fistps
adc
xorb
mov
pop
std
out
dec
sbb
hlt
movsb
les
mov
je
cmp
aaa
and
ficoms
fdivrs
push
xlat
adc
mov
sub
pushf
push
pop
dec
pop
push
repz
int
add
js
xor
loopne
adc
cld
dec
enter
adc
push
sbb
jo
icebp
mov
mov
jo
les
test
mov
das
jb
imulb
bound
mov
faddp
cmpl
inc
sbb
sbb
lock
andl
add
cld
mov
lcall
shll
mov
and
addr16
loop
cld
xor
push
mov
push
mov
or
jl
push
scas
mov
test
mov
gs
xor
jle
jge
sub
jecxz
fdivs
mov
add
add
sarb
sub
into
jmp
aad
mov
jle
push
int
jmp
scas
test
test
dec
lahf
or
xor
pop
sbb
shll
xor
stc
sbb
bound
jb
je
icebp
pop
fnstsw
jns
mov
sbb
jno
scas
push
mov
insb
shrl
pop
out
mov
fdiv
cwtl
les
dec
sub
xchg
lds
push
jne
mov
cld
xchg
push
stos
xor
push
push
movhps
clc
mov
inc
je
or
jns
xorps
cmpps
ret
inc
sbb
cmp
adc
and
addr16
mov
add
je
dec
mov
jno
shll
pop
or
repz
bound
xor
pop
cwtl
xor
fmull
movsb
andb
aas
decb
push
ja
mov
and
test
adc
clc
pop
shlb
aad
pusha
and
dec
adc
faddl
je
xor
fldl
sbbb
fnsave
mov
jo
adc
xor
jmp
adc
xchg
inc
add
ret
push
pop
sub
xchg
sub
roll
xchg
dec
fdivl
cli
xor
call
inc
xchg
decl
ss
rcl
pop
add
pop
push
sub
lods
cld
sub
rol
mov
outsb
fimull
jg
std
mov
stos
add
mov
js
push
jecxz
ljmp
fs
enter
lret
inc
mov
xor
and
imul
mov
das
lods
cmpb
mov
fnstenv
cmc
push
mov
lea
scas
push
or
lcall
adc
sub
cmp
or
and
test
xchg
push
pop
cmp
push
je
mov
hlt
ljmp
stos
insl
jg
xor
jge
adc
pop
aaa
inc
mov
addr16
inc
mov
and
or
or
rorb
scas
popl
inc
cwtl
xchg
mov
sub
scas
sbb
clc
mov
dec
addl
ret
mov
jo
push
aad
sbb
xor
imul
push
jp
loopne
in
ds
nop
out
mov
nop
and
mov
hlt
loopne
pop
out
mov
push
fistps
push
rcr
ljmp
mov
jb
mov
lds
xorb
mov
xor
add
add
add
pop
insb
test
mov
push
add
mov
ljmp
jno
pop
pop
rorb
or
and
adc
movsb
mov
adc
and
or
adc
add
xor
insb
fs
mov
scas
inc
jmp
sbb
sub
in
jno
cmpsb
lock
lret
pop
insb
movsl
lods
bound
data16
dec
iret
out
add
xor
arpl
and
push
sbb
and
mov
sbb
sbb
or
ficoms
in
movswl
in
sbb
daa
pop
jne
jo
flds
movsl
mov
aam
sbb
xorl
pusha
sbbl
push
dec
repz
scas
lock
inc
sub
inc
and
iret
dec
fmull
xchg
mov
jp
cmpsb
mov
xchg
sarb
rorb
and
push
or
repz
leave
jg
mov
jne
lock
jb
adc
andl
std
rol
push
inc
jl
add
inc
or
bound
ss
push
jnp
out
out
outsl
mov
movsl
lcall
inc
sbb
rclb
pop
mov
adc
and
xchg
push
mov
out
mov
and
push
hlt
and
dec
mov
push
cmpsb
call
stos
jg
sbb
test
es
scas
lock
sbb
push
jp
pop
mov
notl
dec
inc
adc
lods
jo
mov
or
pop
cltd
ljmp
mov
sbb
daa
ret
subb
add
jge
out
data16
mov
push
add
mov
jg
or
jo
xchg
inc
xchg
outsl
ljmp
out
add
cmp
push
cli
jp
inc
add
ljmp
ret
or
push
adcl
add
sub
dec
jge
stc
mov
rcr
adc
inc
insl
call
dec
loopne
push
xchg
inc
and
imul
in
out
out
movsb
push
mulb
ror
out
aam
call
push
lret
dec
pushfw
pushf
pop
dec
pop
jg,pt
xchg
ss
jl
pop
cmp
inc
scas
inc
lods
or
or
xchg
and
push
push
jp
subl
mov
mov
idivb
push
clc
xchg
mov
jb,pt
js
fisttpl
stos
aas
nop
jo
dec
pop
cmpsl
mov
mov
and
sub
cmp
stos
popf
sahf
xchg
dec
sub
ficompl
pop
mov
mov
mov
xchg
ss
nop
lret
push
mov
outsb
js
rorb
cli
mov
mov
push
push
mov
sbb
or
dec
inc
in
mov
cld
inc
push
insb
int
ret
leave
icebp
fisubl
loope
fld
adc
sbb
mov
std
dec
loope
shrb
shrb
into
bound
adc
mov
mov
sbbl
loopne
mov
sub
add
daa
popa
imul
mov
mov
or
mov
mov
lret
test
xchg
mov
fmuls
jae
mov
push
cs
test
sub
mov
aas
adc
hlt
add
pop
cmpsb
int3
adc
mov
test
push
sbb
jg
adc
inc
es
aaa
es
mov
cmc
ljmp
add
xchg
scas
and
xchg
sbb
cmp
nop
cmpb
in
nop
pop
add
sbb
lea
sar
addl
test
jg
in
xchg
ds
xchg
mov
insl
push
leave
call
pop
loopne
cmp
push
or
mov
lcall
ds
enter
mov
std
adc
xchg
adc
or
inc
sahf
fldt
shlb
xchg
and
adc
cld
stos
mov
sbb
push
sti
pop
ja
inc
jg
loop
iret
repnz
std
mov
pop
jmp
pop
scas
cli
cmp
pusha
mov
out
xchg
js
inc
roll
jecxz
aas
xchg
in
mov
roll
dec
sub
loope
jecxz
lods
xorb
jae
out
mov
es
pop
fmul
out
mov
mov
test
jecxz
adc
sbb
mov
cmpsb
push
jno
mov
xor
nop
mov
ret
and
out
adc
in
and
adc
les
dec
sbb
dec
xchg
mov
aas
fld
dec
jg
sbb
push
ret
movsl
shrl
adc
lods
pop
jb
sbb
outsb
iret
push
daa
inc
lea
sub
int3
int
add
das
push
jo
adc
pop
stos
cwtl
or
jno
fwait
pshufw
loop
sbb
add
jmp
sbb
push
insl
or
mov
mov
mov
fs
push
aas
ret
out
pop
das
push
jns
lcall
stc
js
enter
or
js
or
mov
fldcw
mov
sahf
nop
inc
fildl
jnp
data16
fdivs
in
adc
ror
rclb
fwait
or
xchg
mov
add
bound
mov
decl
mov
jo
mov
push
adc
cli
push
cs
or
rcll
cwtl
shll
call
pop
xchg
cmp
dec
nop
sub
insl
add
jg
cli
mov
xchg
rolb
aam
xchg
cltd
cli
addl
pop
faddp
daa
sub
or
cltd
cli
rcrl
adc
fsubs
mov
xchg
ret
and
cli
iret
scas
cmp
lods
int
mov
and
cwtl
fdivl
add
in
ret
lods
push
jmp
adc
cmpsb
add
pop
lcall
sbb
cmp
test
cmc
pop
dec
movsl
add
mov
out
cmc
clc
mov
popf
sbb
jge
icebp
sbb
hlt
sbb
idivl
mov
mov
push
sbb
icebp
dec
add
stc
mov
inc
xor
cmp
jl
push
pop
add
lds
ja
stos
shll
outsl
push
mov
lret
ret
fcompl
cmp
das
and
mov
fisubl
stos
xchg
fisubrl
or
sbb
ss
les
loopne
lods
mov
mov
xchg
and
popa
adc
lock
in
test
mov
arpl
cmp
sub
ja
add
add
sbb
dec
aad
sub
add
and
roll
push
sub
jns
shr
rorb
mov
testb
int3
ret
mov
fs
aas
fisubs
test
lock
add
jecxz
fistpl
mov
pop
ds
push
sbb
add
jecxz
aas
cld
mov
cli
sub
cs
mov
push
fs
fisttps
add
subb
sbb
jg
add
xorl
sub
insl
push
pop
test
mov
out
pop
rcl
pop
bound
or
push
cmp
arpl
pusha
lcall
ja
inc
cs
stos
call
adc
sahf
or
xor
outsb
add
add
push
push
fistps
inc
fwait
jo
clc
bound
pop
xchg
push
ljmp
or
push
dec
jg
sbb
jnp
xchg
jnp
shrb
cmp
xor
mov
cmp
sbb
pop
imul
test
lret
jmp
jns
repnz
arpl
xchg
scas
cmp
loopne
int
push
cli
or
xor
pminub
dec
enter
ret
and
cli
decb
aad
les
andb
push
and
mov
std
mov
xchg
mov
lock
mov
and
or
ret
cltd
xchg
cs
mov
add
jno
adcb
pop
das
pop
jbe
xchg
jle
cmp
aam
int3
out
not
fisubrl
fstps
gs
and
cld
push
std
movmskps
mov
rolb
push
mov
cwtl
jl
xorl
movsb
das
push
pushf
inc
dec
stos
mov
cmp
dec
add
insl
and
jg
inc
xchg
cmc
inc
ret
icebp
mov
jmp
xor
jo
dec
loope
les
das
or
lock
or
or
stos
test
movsl
in
adc
xor
test
lahf
pop
xor
lret
loopne
dec
pop
std
sbbb
and
clc
jecxz
dec
lock
cli
es
push
insb
cmp
mov
lock
aad
pushl
and
push
addr16
and
das
fstpt
lock
test
int3
xchg
add
jo
aam
push
add
mov
sti
sti
pop
dec
std
sub
xor
repnz
stos
inc
ljmp
cmpsb
inc
std
and
add
daa
jl
packsswb
and
inc
jmp
call
ret
or
jno
clc
andl
into
sar
or
fists
mov
and
hlt
mov
adc
out
dec
and
pop
mov
int3
adc
in
stos
add
into
into
cld
push
mov
loope
aad
sbb
adc
fwait
mov
jmp
xor
push
loopne
xor
cmpsl
scas
mov
inc
pop
je
pop
popa
cmp
fbstp
xor
and
xor
jg
js
push
fs
test
jmp
lcall
push
inc
repz
sbb
subb
int
inc
or
jno
cli
iret
shll
je
ret
cmp
xor
sbb
push
xorb
adc
cld
mov
mov
test
sub
sbb
or
mov
js
in
mov
cmp
stos
bound
mov
mov
push
and
and
fcmovbe
arpl
sub
pop
icebp
push
push
and
and
dec
sub
loope
mov
mov
mov
scas
pop
gs
data16
pop
xor
popa
bound
outsb
adc
jbe
jle
xor
push
rcl
add
push
ret
adc
clc
mov
aas
mov
add
ss
fwait
push
test
stos
xor
cmpsl
scas
mov
sub
or
outsl
jmp
push
pop
or
lods
mov
lds
mov
mov
sti
push
xchg
dec
adc
mov
aaa
aad
rorl
outsl
lcall
xor
pop
icebp
inc
lret
in
jo
jne,pt
cmc
adc
pop
xchg
mov
jne
sbb
mov
ret
inc
popf
cmp
sbb
in
jae
push
xchg
pop
jmp
orb
lahf
out
bnd
push
inc
loope
xchg
jbe
push
and
scas
popf
test
sbb
mov
add
sbb
negb
jle
gs
dec
movsb
pop
js
sbb
jno
mov
iret
sbb
lods
lock
mov
inc
je
loop
xchg
lods
inc
push
inc
adc
xchg
dec
and
push
sub
movsb
pop
fdivrl
fistpll
fidivrl
and
push
test
push
je
xchg
icebp
clc
and
mov
and
imul
or
inc
inc
stos
adc
pop
push
rcl
add
and
enter
xchg
je
or
and
das
addr16
push
cmpsl
pusha
pop
inc
xor
idiv
xlat
mov
jo
enter
xor
stos
je
sbb
adc
dec
rcr
cmp
lcall
ret
mov
pusha
mov
cmp
inc
inc
ret
and
inc
push
dec
adc
popa
push
pop
pop
mov
jo
push
lock
fcomip
pop
or
push
mov
sbb
xchg
jb
push
int3
pop
xor
push
push
sbb
es
mov
add
pop
jmp
ret
cmc
pusha
mov
cmp
daa
xor
dec
and
mov
getsec
or
je
jae
fs
add
adc
arpl
add
adc
shlb
shlb
mov
jecxz
adc
ss
out
mov
dec
add
dec
fdivl
and
add
xchg
mov
adc
pop
fs
sbb
sub
adcl
jae
jb
pop
pop
xchg
outsb
rolb
mov
mov
std
cmpsb
jbe
aaa
xchg
xchg
cmp
pop
sub
arpl
lock
addl
daa
iret
nopl
popa
dec
and
jo
cltd
enter
add
sarl
jmp
jmp
jbe
and
adc
inc
xchg
sub
mov
dec
mov
dec
fcmovb
inc
rcrl
lods
fldl
popf
mov
mov
mov
xchg
addb
mov
pop
cmp
es
stos
mov
divl
in
xor
add
xor
lock
xor
cmp
jl
insb
xchg
int
xor
add
shl
cmpb
sub
mov
lret
or
enter
into
call
or
stc
leave
and
int
into
cmp
jo
or
pushf
mov
or
insb
faddp
cld
sub
push
das
jne
inc
jnp
lcall
aaa
pop
test
std
outsl
inc
jne
sti
js
scas
insb
cmp
in
xor
mov
test
pushf
dec
lret
adc
test
inc
mov
push
push
mov
jne
ds
xlat
sbb
insb
pusha
int3
add
xor
push
push
cld
pop
mov
mov
cmp
xor
iret
xorb
cli
dec
call
lcall
ret
pop
stos
jbe
fistpl
sub
adc
ficomps
jne
lods
sahf
add
lcall
mov
fs
insb
aaa
imul
dec
in
in
leave
jl
sbb
test
pop
mov
cmp
fsts
jg
jne
jmp
ss
aas
sbb
jbe
pop
pushf
int3
pop
add
mov
add
call
mov
fists
fidivs
sub
inc
mov
or
mov
and
cs
ja
sahf
and
aaa
jl
cmp
sbb
call
fwait
or
sarl
das
das
popf
fmuls
cmp
adc
arpl
xchg
jno
mov
mov
or
jne
imul
pop
and
cmp
cmp
hlt
loope
cmp
ret
rclb
shll
into
cli
mov
hlt
mov
xchg
xor
xor
or
les
fwait
sbb
pop
cmpb
adc
sub
pusha
in
shr
icebp
mov
cld
push
cwtl
mov
ret
jnp
sbb
scas
ret
pushl
or
xchg
lock
pop
into
adc
inc
push
loope
push
pop
cs
mov
test
mov
loopne
and
sub
repnz
jle
mov
sahf
mov
push
push
nop
repz
xor
es
insl
cmpsl
adc
je
xchg
adc
cltd
mov
pop
sbb
insl
cmp
insb
add
fmull
xchg
clc
loopne
add
xor
iret
add
pop
mov
xor
adc
mov
pop
pop
rol
push
add
mov
mov
sbb
sbb
in
lret
movsl
ret
cwtl
cmp
fcompl
cmp
icebp
pop
ret
sbb
rcr
xor
xor
dec
push
xchg
mov
mov
loop
imul
bnd
fiaddl
inc
jb
pop
into
into
mov
xchg
cmpsl
mull
fimuls
enter
push
xor
xchg
cwtl
push
and
and
ret
mov
push
jnp
faddl
movl
push
pop
je
cwtl
in
jmp
sbb
cmp
mov
mov
push
pop
rcrl
xor
lock
repnz
xor
sub
sub
mov
xlat
icebp
test
add
enter
sbb
mov
je
dec
lock
cwtl
xchg
aam
add
inc
or
mov
out
push
push
sbb
mov
jle
lods
jb
scas
fstl
jge
fstps
lcall
mov
rol
inc
mov
lea
inc
sti
cmp
and
mov
cwtl
push
mov
pop
ds
stos
in
mov
aas
push
push
aam
insb
popa
daa
bound
es
std
js
ret
fsts
pop
sahf
insb
mov
mov
dec
in
movsb
pop
sbb
hlt
pusha
ss
test
adc
jmp
lcall
push
pop
in
imul
in
andl
cli
sub
cld
loop
insb
lods
inc
movsb
shlb
add
ret
lock
lods
loope
push
sarb
inc
push
je
and
push
mov
iret
stc
gs
dec
daa
push
cmpl
adc
adcl
xorl
mov
push
lahf
mov
xor
std
pop
push
loopne
and
stc
jg
fnstsw
clc
dec
or
push
push
jo
mov
mov
imul
xchg
sbb
inc
js
popf
arpl
pop
cmpb
test
mov
jecxz
xchg
inc
aam
inc
add
loope
es
sbb
xor
inc
cmovbe
mov
ficompl
push
scas
imul
shll
sbb
repnz
cmp
testb
sarb
pop
mov
jle
clc
pusha
lcall
xchg
hlt
adc
sub
jp
push
es
imul
jo
xchg
cli
push
fwait
jl
lcall
jecxz
scas
add
cmpsb
xchg
cmpsb
iret
cmc
inc
mov
and
cwtl
inc
push
aas
pop
aam
mov
ret
std
clc
dec
js
add
xchg
inc
sub
inc
jo
scas
mov
js
and
std
adc
lds
lret
or
icebp
icebp
mov
pop
or
idiv
or
sbb
mov
push
out
adc
pop
call
add
mov
inc
or
inc
movsl
rcr
repnz
cmp
test
ljmp
or
jge
xchg
scas
cld
mov
sub
lods
mov
and
inc
stos
insb
repz
pushf
mov
popf
scas
mov
sub
adc
xchg
stc
imul
fldl
and
adc
adc
sbb
ja
or
out
xchg
and
movl
cmpsb
mov
icebp
mov
jecxz
push
int
jp
lock
jno
xor
add
adc
cs
sub
xlat
insb
std
insl
mov
and
or
add
clc
movsl
push
xor
and
ficoms
imul
inc
xor
das
scas
adc
xchg
inc
enter
sti
mov
xchg
pop
js
sub
jmp
lea
xor
and
inc
aaa
mov
adc
lret
inc
lods
clc
mov
xchg
xor
fstps
das
ret
movaps
cmp
js
jge
hlt
ss
mov
movaps
push
outsl
pushf
hlt
sub
roll
lret
iret
fcmovnu
addr16
adc
push
sti
adc
lods
pop
inc
push
jge
add
cmp
mov
out
or
scas
inc
adc
sbb
xor
mov
call
or
and
and
popa
xchg
pop
pushf
and
fcoml
push
adc
mov
adc
cltd
sbbb
popl
mov
push
mov
dec
cmp
ljmp
mov
aam
and
test
icebp
das
add
sbb
mov
es
adc
inc
mov
test
jmp
xor
stc
mov
push
mov
pop
pop
dec
fisubl
or
insl
push
add
js
ss
rorl
sub
lsl
add
lahf
or
scas
inc
mull
dec
mov
xchg
insl
shll
scas
dec
push
neg
clc
push
mov
ds
cmc
es
stos
pop
jl
sub
adc
hlt
adc
mov
cwtl
dec
pop
pushf
and
imul
ss
ja
stc
add
ds
or
movsb
call
in
pop
add
cmpsb
sbb
nop
dec
pop
in
ljmp
xor
addr16
shlb
or
insb
push
push
sbb
loopne
nop
cli
call
dec
pop
sub
les
sub
cld
stos
xor
stos
add
imul
add
rolb
adc
inc
xchg
subb
fwait
sbb
scas
cmp
aas
sbbl
xor
dec
js
rcl
add
pop
adc
mov
add
cmp
jne
mov
jle
test
and
lahf
mov
clc
push
ds
push
dec
dec
out
call
inc
je
aaa
loopne
jo
in
popf
jp
dec
mov
mov
clc
or
inc
lret
dec
rcr
sbb
mov
xor
lds
in
mov
and
js
pusha
xchg
sbb
or
out
push
das
sbb
mov
pop
jo
addl
mov
pop
mov
fcompp
sbb
std
loope
ds
cmp
dec
push
xor
dec
and
jp
xor
jo
aam
cmp
sbb
jne
sbb
popf
push
repnz
mulb
out
mov
int3
adc
xor
fxch
inc
mov
ds
icebp
aaa
andb
mov
mov
repz
jp
xchg
std
add
int3
cld
mov
fnstcw
add
js
adcl
cmp
mov
and
push
int
lock
js
lods
xchg
pop
xor
mov
sbb
or
sar
aaa
add
dec
or
add
das
sbb
and
rcr
aad
ret
cmp
push
inc
std
dec
push
cld
fdivs
cs
daa
jae
loop
jl
pop
mov
jmp
loopne
orl
cmpsl
dec
add
mov
daa
mov
xchg
mov
add
test
repnz
leave
scas
jne
pop
pop
pop
ds
jnp
addl
ljmp
fildll
ror
cmp
scas
das
or
push
pop
xlat
sub
out
hlt
add
adcl
rcll
mov
xlat
or
mov
inc
push
pop
mov
dec
inc
xor
push
outsb
rolb
subl
shrl
movsb
cmp
adc
add
xchg
mov
or
pop
ds
add
popf
mov
sub
or
jmp
jl
fwait
mov
mov
push
jg
idivl
loop
int
js
xlat
mov
cmp
aam
ret
cmp
or
dec
test
jns
push
daa
inc
fld
push
dec
idivb
mulb
push
ds
sub
cld
add
inc
cs
add
sub
addr16
scas
lock
flds
outsl
mov
jle
pop
cltd
and
mov
pop
mov
jnp
out
jbe
movsb
cmp
cmp
xor
jp
jnp
scas
mov
ds
push
aas
shr
and
nop
push
test
dec
subl
lock
push
mov
pop
fiaddl
mov
lea
loope
dec
pop
or
jle
mov
rorb
je
aaa
mov
mov
jae
cs
cmp
push
xchg
insb
mov
mov
idiv
inc
cmp
ret
fistl
sub
clc
and
dec
in
cmpsb
fcoms
inc
clc
cmpsl
add
add
movsl
pop
jnp
outsb
mov
cli
nop
and
adc
inc
or
out
fimuls
arpl
data16
cwtl
push
fistl
ror
mov
or
ror
mov
subl
cmpsl
enter
push
loopne
test
add
pop
test
cmpsl
mov
out
in
inc
mov
dec
mov
dec
push
insl
jb
jp
mov
adc
xor
sbb
add
xor
xor
call
jne
and
pushf
sub
js
cld
or
dec
ficompl
pop
xorb
sub
inc
stc
les
xor
and
mov
in
into
test
fisubs
loop
and
fcmovbe
add
sbb
cwtl
ja
outsl
mov
movsb
iret
pop
nop
movsb
and
xchg
xor
xchg
adc
mov
incb
icebp
xchg
sbb
popl
mov
fcmove
sbb
push
xor
or
pop
rcl
push
pop
test
pop
push
xlat
mov
fidivs
or
pop
xchg
shlb
sbb
xor
mov
or
in
hlt
cli
adc
icebp
and
add
inc
push
push
es
lahf
js
subb
push
ss
ss
pop
add
decb
mov
inc
unpcklps
inc
sbb
xor
xor
sbb
shl
pop
pusha
add
jmp
adc
xchg
cmc
add
mov
out
adc
test
xor
mov
das
push
inc
ss
into
xchg
pop
xchg
adc
mov
or
jno
int3
pop
jl
rcll
adc
or
xlat
add
mov
sub
add
mov
pushf
dec
push
fiadds
aas
shlb
fdivrl
ret
repnz
mov
movsb
invd
addb
insl
stc
mov
hlt
adc
push
outsb
pusha
icebp
int3
pusha
shll
ja
mov
sbb
aaa
fs
enter
shrl
out
nop
rorb
into
xor
mov
icebp
mov
sub
dec
mov
push
pop
mov
pop
aad
jbe
or
shrb
cli
stos
add
and
pop
mov
pushf
dec
aam
sub
sahf
push
pop
pop
ljmp
inc
pop
mov
mov
jle
adc
pushf
mov
push
mov
xchg
repz
add
jb
push
cmp
pop
test
test
sub
enter
hlt
cmp
dec
in
mov
movl
fisubl
sti
cli
inc
sub
jo
push
cmpsl
sti
shrl
rorl
xchg
shlb
xchg
clc
pusha
shlb
xchg
jno
call
xchg
mov
mov
mov
jge
int
mov
pop
pop
rolb
lock
push
pop
std
stos
lcall
push
lock
push
aam
push
pop
jl
xor
xchg
out
xchg
bound
movsl
xlat
rorb
mov
xchg
mov
xchg
push
push
loopne
mov
neg
push
idivb
stc
fildl
test
les
add
add
sbb
mov
sbb
cmp
push
jo
fdivl
or
ficoml
xor
shlb
lock
sbb
in
fnstsw
addb
add
ja
aad
sub
mov
andl
inc
test
outsl
and
mov
imul
out
test
lret
dec
xchg
scas
jge
add
scas
mov
mov
aam
and
xor
mov
inc
iret
sbb
inc
lcall
ljmp
xchg
hlt
repnz
jmp
sbb
aaa
leave
inc
aas
cmp
sub
mov
sub
sbbb
loope
stos
add
fldenv
psrlq
sarb
sti
lods
bound
cmp
je
mov
fsubs
xchg
push
inc
stc
rcrl
sti
ret
mov
mov
arpl
cmc
ret
xchg
jle
dec
fadds
pop
ds
adc
mov
seto
xchg
cmc
enter
pop
inc
filds
mov
mov
pop
js
xor
push
popa
jmp
fstl
jne
xor
test
push
cwtl
mov
sbb
popf
cmpl
out
out
lea
inc
xor
stos
das
inc
in
ss
in
repnz
or
cld
mov
fs
jge
cmpsb
add
ret
stos
js
scas
test
mov
xor
addl
out
out
jmp
inc
cltd
mov
loopne
rorl
pop
and
cmp
dec
sub
faddl
outsl
xorl
testl
cmpsb
sbb
cltd
in
xor
outsb
push
push
sbb
add
xchg
imul
and
fidivrs
in
mov
scas
jl
dec
pop
push
lods
add
xlat
mov
icebp
xchg
push
jb
shlb
mov
add
lods
mov
int
stos
sbb
add
cmp
flds
into
pop
dec
jmp
push
in
aaa
clc
stos
ja
out
ja
subl
inc
sbb
cmp
clc
aam
faddl
mov
cmpsl
dec
mov
push
call
or
fwait
add
jbe
lods
cmpsl
jle
sbb
cmp
out
sbb
clc
lock
sbb
or
xchg
xchg
pop
mov
sub
pop
mul
cmp
pusha
jne
push
jmp
adc
fbld
movsl
outsb
fmuls
fs
in
cmp
hlt
lret
mov
mov
cmp
dec
add
or
inc
mov
adc
add
add
cld
xor
or
fdivrs
js
mov
insl
stos
sar
ja
fnstenv
jp
dec
cmp
call
xor
jns
cli
add
jg
fwait
cwtl
add
scas
faddl
out
cli
inc
xchg
das
add
xor
cs
adc
jmp
add
add
shll
fsts
rcrb
lds
push
imul
js
sbb
addr16
mov
icebp
fcom
test
mov
shlb
and
sarb
or
xor
adc
xchg
insl
sbb
aas
jl
jl
or
pop
rclb
lock
shl
mov
aas
pop
fcmovnb
push
cmpsb
mov
icebp
test
jmp
in
and
outsb
hlt
add
bound
stos
jns
js
xor
mov
or
clc
call
lret
sbb
or
popl
rcll
cld
in
cltd
nop/reserved
xchg
bound
sbb
es
cmpsb
popf
mov
xor
jl
jg
sbb
xor
test
hlt
add
xor
pop
sbb
and
xor
inc
mov
xor
fdiv
and
cli
inc
ds
es
ret
repnz
inc
jmp
and
nop
jg
mov
roll
out
loopne
mov
and
shlb
lret
inc
add
xchg
xor
stc
ss
mov
das
cld
rorb
and
mov
sub
sbb
add
addb
sub
rolb
jno
lods
push
or
mov
adc
sbbb
repnz
stos
rcrb
stos
mov
les
cwtl
xlat
arpl
arpl
bound
loopne
shl
loopne
sbb
pushf
out
iret
xor
adc
scas
aaa
xchg
mov
mov
enter
lods
pop
sub
dec
mov
ss
push
cmp
pushf
fstpt
leave
pop
or
pop
cmpb
xchg
cmp
pusha
push
out
mov
arpl
mov
leave
scas
xor
mov
bnd
fucom
inc
push
dec
adc
mov
jno
popl
outsl
push
cld
and
dec
ljmp
dec
inc
and
dec
sbb
inc
xchg
fcmovu
dec
in
mov
push
xor
in
pop
cli
mov
dec
cli
xor
mov
hlt
aam
add
aam
xor
mul
scas
inc
mov
in
push
aaa
loope
or
lret
adc
jl
outsb
pop
fs
sbb
push
sahf
cmp
fsubl
clc
mov
mov
xchg
or
xor
outsl
push
adc
mov
cmp
out
inc
outsb
flds
xchg
or
xor
sub
sub
inc
sub
shlb
outsl
les
loopne
jb
ds
out
jo
xchg
adc
push
xor
pop
mov
cld
loopne
xorb
dec
stos
pop
stos
cmpsb
stos
adc
nop
movsb
adc
and
xor
clc
push
push
repz
call
adc
loopne
mov
dec
ja
jno
push
and
xchg
cmpl
xchg
ret
scas
imul
test
mov
mov
mov
add
sub
cmp
jge
pop
bound
sbb
push
sbb
cld
push
or
mov
and
loop
insl
or
dec
mov
loope
imul
and
test
sbb
jecxz
push
pop
fistpll
pop
and
inc
mov
rcrb
push
sbb
push
aaa
sarl
popa
mov
push
pop
sahf
fsub
jnp
jnp
in
aad
test
cli
mov
shl
inc
addl
fdivl
sbb
sbb
faddl
mov
in
jnp
lcall
mov
scas
mov
lds
insb
mov
pusha
jg
jle
mov
sbb
mov
mov
lock
inc
pop
mov
fucomi
call
xchg
or
xor
adc
rol
adc
mov
pop
add
cli
movsb
jae
and
xor
aam
icebp
popf
add
sahf
pusha
sbb
push
cmp
add
jle
imul
adc
sbb
push
push
dec
mov
cmp
xchg
lea
xor
push
test
pop
dec
jg
insb
xchg
out
or
add
lock
pop
mov
mov
mov
mov
stc
mov
mov
and
mov
jg
inc
out
scas
sub
mov
stos
dec
pop
pop
adc
and
pop
mov
or
and
or
fs
subl
push
out
xor
jl
pop
mov
lock
cmpsb
push
pop
xchg
cmp
pop
mov
adc
and
cmp
add
pop
loopne
loope
add
cltd
mov
sub
xor
and
sbb
add
xchg
in
push
xorb
in
fcmovnu
sub
mov
cli
push
jp
adc
cmp
add
jl
add
mov
cmp
and
aad
sarb
js
adc
xchg
cli
mov
dec
or
scas
add
lds
pushf
add
in
test
xchg
inc
cli
scas
iret
mov
lret
push
add
push
mov
dec
xor
outsb
in
cmp
dec
shll
out
lcall
xchg
aad
cmp
nop
lock
jmp
sub
xor
sarb
andb
imul
inc
inc
pop
pop
sti
jmp
pushf
adc
imul
xor
ljmp
stos
in
xlat
pop
rcrl
icebp
fs
subl
lock
decb
je
sub
fadd
outsb
sbb
insl
xorl
loope
push
js
xor
adc
adc
inc
cmp
into
lea
mov
clc
and
call
xor
lret
into
or
out
test
inc
xchg
sbbl
mov
cvtps2pd
ret
jp
jbe
lcall
push
mov
scas
pop
fisubrs
test
in
push
inc
ljmp
mov
inc
dec
stos
cmp
sub
sbb
add
fisubs
xchg
test
nop
mov
andl
mov
fsubs
cwtl
test
dec
push
pop
pop
loopne
sub
inc
adc
int
jmp
ja
addr16
sbb
and
fnstsw
jno
in
and
mov
dec
jecxz
pop
mov
sbb
jo
and
rclb
call
cmc
fsubrs
loop
cmp
adc
mov
mov
int3
pop
cld
addr16
mov
xlat
xchg
or
mov
or
xchg
sbb
pop
pop
mov
dec
cmp
push
loopne
sbbl
jmp
sbb
cli
xchg
mov
sub
ret
add
nop
movsl
or
push
jle
and
pushf
xchg
sub
add
dec
dec
mov
mov
pop
push
push
hlt
rclb
inc
push
mov
adcb
add
inc
sbb
sbb
dec
adc
adc
shll
cmp
out
jg
mov
xor
push
mov
lret
push
cmp
pop
loop
out
xchg
and
xorb
push
ret
inc
sti
pop
add
cmp
xlat
pop
pop
mov
add
das
subb
lret
adc
mov
sub
jno
sbb
pop
sbb
sbb
push
roll
outsb
or
and
loopne
aas
jle
mov
sbb
imul
jecxz
arpl
push
enter
inc
es
jecxz
and
sub
cmp
pop
lret
out
imul
push
sbb
cld
idivb
mov
lret
ljmp
fnstcw
sbbl
mov
push
xor
xchg
mov
les
push
jb
loop
fiaddl
dec
mov
imul
jmp
arpl
and
mov
xchg
add
add
mov
mov
fs
in
cwtl
faddl
scas
ds
clc
aad
cli
mov
lods
imul
inc
add
setnp
adc
insb
push
mov
enter
mov
pusha
push
mov
adc
popf
sub
mov
cltd
orl
mov
ficoml
add
addr16
mov
xor
add
xchg
mov
loope
arpl
push
in
inc
add
neg
aad
punpckhbw
fs
es
and
test
push
andl
lods
inc
xchg
rcrb
add
daa
add
jle
push
cltd
and
xchg
rcr
cmp
mov
mov
pop
dec
or
cmpl
cmp
shrl
roll
cli
pop
xchg
shl
mov
mov
xchg
mov
cld
out
mov
sbb
pusha
mov
test
push
push
stos
jge
out
loop
out
dec
out
xchg
jo
stos
mov
fdivs
adc
mov
cmpsb
dec
or
loopne
shrl
inc
fs
test
out
frstor
js
loope
jmp
inc
mov
aam
dec
imul
add
adc
or
clc
add
jl,pt
sub
pop
push
add
push
je
xchg
pop
aad
ss
xchg
xchg
mov
mov
loope
inc
rcrl
arpl
jle
je
and
pop
rolb
fistpl
push
pop
test
and
aad
xchg
iret
out
jle
int
cmpsb
shlb
push
xchg
cltd
mov
iret
addr16
loope
inc
pop
ja
inc
push
jmp
mov
dec
xor
data16
outsl
std
aad
sub
cmp
cmp
testb
in
and
idiv
faddl
mov
and
push
shlb
inc
aas
push
mov
add
pusha
cs
rorb
mov
out
test
pusha
repnz
adc
fs
fstps
mov
dec
push
mov
mov
or
adcl
inc
xchg
xor
pop
int3
pop
js
rcrl
leave
adcb
xchg
rcll
jae
sbb
lcall
lods
xchg
mov
xchg
in
sub
bound
les
cmp
and
inc
dec
cld
cli
jo
int
enter
popf
mov
cmp
lods
notb
mov
push
and
rcrl
inc
mov
cmpsb
je
or
inc
inc
xchg
jnp
add
addb
gs
xchg
icebp
lods
enter
fildl
lods
pop
ja
pusha
pusha
xchg
cwtl
js
push
ss
xchg
pop
test
add
aam
adc
push
rclb
jg
add
cmp
shl
pop
or
cmpb
lock
fidivl
outsb
add
fildl
sbb
cmp
push
out
or
daa
cmp
pop
lds
and
pop
repnz
push
sbb
dec
scas
add
cwtl
sbb
std
xchg
sbb
fstl
mov
loope
inc
movsb
decl
push
shr
mov
leave
jmp
test
xchg
inc
jne
mov
mov
enter
pop
sbb
divl
or
int3
push
ss
inc
push
pop
or
adc
mov
sbb
push
jp
push
adc
inc
incl
mov
push
sbb
ds
add
cmp
cld
stc
dec
out
inc
lcall
roll
mov
adc
dec
movsb
shrb
mov
cli
add
rorl
jb
and
dec
inc
adc
mov
mov
ljmp
xor
xor
lret
daa
inc
and
popa
jmp
cmp
lock
movzbl
in
and
and
pusha
inc
andb
enter
das
pop
sbb
xchg
rorl
je
ja
ffree
je
inc
mov
stos
and
idiv
mov
push
dec
sub
inc
insb
div
cmp
pop
pop
js
sbb
inc
and
repz
xchg
int
sbb
xchg
xchg
cmc
add
pop
and
sbb
adc
mov
jo
lds
js
mov
lahf
inc
xchg
sbb
movsl
mov
fwait
push
jns
insb
pop
cmc
cmp
xchg
mov
push
mov
sub
arpl
push
sti
and
add
sub
xor
lods
test
insl
addl
lock
incb
push
sub
clc
push
outsb
xchg
push
addl
mov
xor
loop
mov
jmp
jp
loopne
je
or
pop
mulps
xchg
pop
xchg
pop
in
xchg
jle
dec
inc
aaa
sub
adcl
popa
sub
add
xchg
mov
jl
shll
ret
call
or
mov
neg
xchg
shll
test
and
jp
lods
rcll
loope
icebp
mov
adc
lods
ja
xor
cli
sbb
ret
jg
leave
dec
sbb
clc
fwait
mov
inc
xchg
mov
decl
pushf
das
xor
test
or
xor
sub
push
mov
pop
push
dec
aaa
or
cmp
or
push
sbb
mov
icebp
test
mov
or
mov
and
nop
pop
test
fildll
jg
mov
and
jne
mov
or
pop
pop
jne
lock
int3
lods
stos
cmp
add
xchg
cmp
loope
cmpsb
push
mov
and
sahf
iret
push
xor
divb
bound
aas
jmp
icebp
ffreep
test
jle
push
sahf
mov
xchg
mov
mov
or
or
and
std
icebp
mov
adc
test
xor
scas
or
loopne
adc
sbb
jne
outsb
xor
movsl
enter
xor
nop
es
lea
mov
xchg
js
cmp
dec
lret
data16
lea
xorb
outsb
pop
and
jae
add
dec
in
sbb
hlt
jg
pop
leave
mov
in
and
scas
insb
xor
add
and
ljmp
or
push
fisttps
pop
sub
pop
pop
sahf
sbb
test
add
jle
adc
pop
ret
push
lret
je
and
sar
out
pop
mov
and
sbb
push
pop
mov
cld
rcrb
fists
je
push
xor
loop
inc
pop
pop
enter
cmp
daa
sarb
or
cli
aad
or
dec
mov
subl
sub
cli
and
or
jne
jmp
mov
out
fsts
je
or
sub
xor
daa
mov
jns
loop
xchg
iret
or
or
xor
or
sub
mov
jp
ret
lock
call
dec
pop
add
inc
loop
or
and
pop
loope
sti
call
adc
pop
hlt
mov
dec
std
jnp
fdivrp
mov
and
sub
std
mov
lods
stos
imul
push
sbb
xor
aas
aam
mov
movsl
mov
stc
cmpsl
sbbl
cmp
loopne
sti
sbb
or
dec
fnsave
add
adc
jne
std
dec
in
fiaddl
es
popf
orb
mov
aaa
rcl
add
sbb
in
call
mov
rcrl
mov
jb
cwtl
xchg
scas
aas
dec
mov
stc
add
add
or
hlt
mov
xchg
jbe
popa
decl
push
cmpsb
lods
gs
insb
js
and
cmp
std
push
test
inc
popf
repz
sbb
and
adc
mov
xchg
mov
pop
push
in
fidivrs
mov
clc
dec
or
fcomps
push
jl
popa
push
or
cld
aas
faddl
adc
addl
daa
lcall
out
lock
jb
shrb
mov
jmp
push
ja
or
mov
jecxz
out
xorb
sbb
lret
addb
push
cmp
fcomip
cmp
mov
pop
dec
push
sarb
adc
test
and
push
mov
push
popf
add
loope
loopne
or
add
or
cwtl
cmc
or
add
sbb
shrb
xchg
ret
xchg
or
cltd
xchg
cmc
xchg
mov
clc
jl
decl
inc
fdivrp
popa
les
popa
mov
in
sub
cs
add
scas
jae
mov
mov
push
scas
mov
mov
fiaddl
stos
in
push
inc
push
dec
mov
test
mov
lds
js
mov
xor
scas
pop
repnz
mov
mov
aam
iret
xor
js
test
sub
pusha
pop
pop
out
pop
iret
xor
test
out
mov
fcompl
push
pop
es
pop
fistl
adc
cmc
push
ss
rcl
pushf
movsb
cld
outsl
out
cli
pop
add
int3
cmpb
cmp
push
pop
jl
fidivl
adc
or
popf
push
push
xchg
xchg
push
in
push
mov
jecxz
les
js
xchg
mov
shr
data16
inc
testb
xor
dec
adc
xor
push
je
fimull
mov
loop
push
ja
sub
in
jmp
fadds
dec
gs
ljmp
aas
dec
gs
aaa
fs
xchg
lcall
cmpsb
in
pop
test
aam
add
aas
cmp
add
or
dec
rolb
insl
mov
outsl
cli
cmc
call
dec
mov
fwait
ja
mov
sbb
fs
popf
test
add
imul
xor
subb
and
cmp
push
jmp
aaa
lret
mov
sub
repnz
fdivr
ljmp
addr16
outsb
scas
sbb
and
loope
repnz
push
jmp
mov
mov
repz
xchg
mov
lock
loope
sub
fs
icebp
mov
cli
mov
std
cmc
sbb
jmp
lahf
out
inc
cmc
call
in
or
mov
and
cwtl
lahf
and
mov
shl
stos
and
inc
loopne
adc
movsl
scas
aas
mov
movups
xchg
mov
jg
pop
icebp
jno
call
iret
push
mov
sub
sub
jecxz
mov
jmp
mov
jmp
mov
das
adc
sub
push
sarl
adcb
pop
lds
jle
js
adc
adc
mov
sub
test
aaa
sbb
dec
pop
fcmovbe
test
aas
xor
scas
cld
mov
or
loope
test
test
int
aam
jbe
pop
pop
pusha
mov
jg
pop
les
das
insl
mov
mov
sbb
fadd
push
mov
dec
test
sub
inc
push
call
inc
push
mov
cwtl
clc
lahf
dec
fnstenv
push
push
and
out
setb
outsb
popa
mov
cli
aas
gs
sub
sub
rorb
fldenv
ss
addb
mov
adc
cs
enter
push
xor
push
xor
add
add
sbb
mov
sub
xchg
movsb
loop
xor
pop
sbb
fwait
mov
sub
into
add
xor
imul
mov
xchg
rorb
sub
in
test
dec
lsl
rorb
or
pop
xchg
jo
mov
idivb
xchg
pop
pop
sbb
out
enter
sti
xlat
std
or
inc
xlat
mov
sbb
and
fildll
inc
orb
jle
mov
nop
pop
cmp
ret
xchg
cmpl
hlt
fs
inc
mov
dec
in
xchg
inc
lret
lds
fmulp
movb
insb
add
cmpsb
fbstp
xchg
mov
dec
out
sahf
dec
or
inc
push
mov
mov
adc
fimull
inc
pop
xorb
sub
xor
into
aaa
test
std
clc
dec
fsub
sbb
pushf
loopne
xchg
pusha
jae
fistpl
std
mov
add
cmpl
sub
xor
dec
jnp
mov
fadds
adc
loope,pn
into
mov
jg
js
les
fadd
or
out
push
xchg
mov
dec
int3
cs
adc
jmp
decl
xor
arpl
fstps
xchg
andb
or
loope
stc
test
repnz
imul
out
fsubrs
xchg
lock
adc
loope
inc
jnp
daa
ds
or
ret
mov
aas
xchg
loope
fidivrl
sbb
xchg
mov
das
aaa
push
jo
adc
lods
out
mov
mov
sub
data16
jmp
cmc
inc
jno
sub
cmp
cli
incb
idiv
stc
push
cmp
fisttpll
xchg
adc
or
sbb
rcrb
sbb
ret
es
je
inc
cld
mov
out
sti
cs
cmp
xchg
roll
push
sbb
inc
or
mov
xchg
icebp
adc
mov
mov
push
jle
das
loopne
dec
mov
cli
push
lock
mov
inc
orl
inc
rcrl
dec
mov
test
cli
std
in
fs
and
xor
or
jne
xchg
push
push
sub
inc
mov
sub
adc
fdivrp
or
mov
lock
ret
frstor
sbb
jl
jo
mov
adc
hlt
stos
test
push
stos
push
cli
add
das
sahf
or
xorb
mov
mov
cld
dec
inc
xchg
into
ficompl
pop
pop
xchg
addl
test
loopne
xchg
pop
out
mull
inc
popa
or
pop
cld
popa
test
dec
fimull
lcall
sbb
inc
jno
sub
jle
add
mov
mov
add
outsb
mov
mov
stos
fdivl
add
push
adc
xchg
mov
xor
dec
or
pop
paddsb
rcr
inc
mov
mov
rol
jae
daa
shrb
aam
sbb
outsl
adc
add
ret
mov
add
add
fisttpl
inc
push
mov
aaa
mov
xor
clc
incb
arpl
cli
jno
mov
mov
ret
jb
popa
lock
mov
cmc
shrl
adc
mov
divb
ss
fsubr
ss
cmp
pop
loopne
adc
ds
cmp
or
shlb
adc
fisttpll
test
ja
push
push
ret
and
aas
dec
pop
pop
xlat
xchg
adc
xor
push
movl
xchg
pop
or
int3
orb
movsb
adc
shrl
xchg
push
push
inc
mov
push
xchg
loop
in
xor
movsb
sbb
aam
popa
mov
loop
jecxz
mov
ret
cmpsl
jecxz
add
xchg
dec
arpl
dec
xlat
jg
aaa
mov
mov
push
bnd
ret
sbb
jmp
push
imul
or
ds
mov
add
testb
out
movsl
mov
aaa
fcoml
lock
push
xchg
cmp
sbb
inc
push
int
cmp
mov
add
and
dec
jg
fucomip
or
xchg
mov
add
push
ljmp
insl
xor
cmp
imul
cmp
jle
or
out
sub
test
mov
mov
mov
mov
out
sbb
idivb
adc
imul
loop
sub
inc
lahf
inc
mov
mov
mov
jecxz
mov
add
js
insb
mov
lods
inc
jge
cmc
rol
loop
shr
and
dec
lock
rcrl
js
adc
jge
imul
fdivrs
stos
js
cmpl
xor
movb
pop
lods
jg
out
dec
jb
ret
inc
movsl
lds
pop
ret
ficomps
lret
pop
ljmp
dec
test
fsts
and
pop
push
cmp
scas
mov
mov
arpl
pop
dec
and
shrl
mov
jae
dec
jp
les
cmpsb
shr
fisttps
push
out
jo
lret
imul
mov
ljmp
mov
test
and
loope
es
lock
test
sub
jbe
sub
hlt
jns
mov
inc
xor
push
sbb
ljmp
fcomps
add
xor
call
mov
pop
pushf
loop
cmpsl
push
sbbb
fwait
push
push
mov
adc
jle
dec
adc
or
lret
in
daa
push
jb
test
sub
add
jns
add
andb
lods
notb
enter
mull
mov
cmp
insl
es
lds
mov
push
inc
cli
test
andb
and
inc
add
jo
xlat
sbb
movlhps
inc
mov
mov
dec
stos
mov
mov
std
and
cmpsb
push
push
mov
pop
sub
jo
subl
shll
xchg
mov
dec
fdivrs
xor
lods
iret
clc
insb
push
nop
xadd
and
inc
and
call
in
imul
imul
rcrb
mov
mov
add
push
add
shr
loope
mov
mov
pusha
sub
or
aad
loope
sarb
testb
inc
jl
xorb
inc
fsubs
and
in
roll
mov
cmp
xchg
adc
test
mov
cld
or
movsb
sub
inc
cli
mov
and
sub
nop
mov
mov
loope
sbb
xor
sub
inc
icebp
dec
jmp
int3
sbb
mov
fs
decb
lods
xchg
push
pop
jne
lahf
ss
xlat
and
push
sub
hlt
add
xchg
add
push
xchg
mov
insb
loop
dec
imul
jle
mov
ljmp
inc
icebp
adc
rcrb
mov
mov
sbb
fiaddl
sbb
mov
mov
cmc
push
pop
mov
decb
call
cmp
orl
in
cli
adc
shlb
std
or
mov
jo
mov
into
std
mov
push
xchg
popa
pop
mov
in
clc
aaa
jp
adc
in
fwait
jae
jle
je
mov
mov
adc
gs
dec
inc
push
xor
movsl
out
xchg
mov
shrb
jg
xor
loope
test
std
imul
jne
pop
test
jae
pop
add
or
in
inc
add
popa
dec
pop
into
scas
movsb
test
pop
aaa
sbb
les
inc
and
dec
rolb
shll
rolb
mov
adc
or
xchg
xchg
out
push
icebp
inc
xor
or
sbb
inc
push
or
cli
in
test
enter
adc
shll
add
xsaveopt
jl
push
inc
out
jmp
and
in
pop
insl
cmc
cmpsb
call
enter
in
clc
rcr
mov
shlb
test
add
and
call
pusha
sbb
std
cmp
negb
out
adc
outsb
mov
sub
xorb
iret
mov
leave
dec
movsb
mov
push
mov
loopne
pushf
out
mulb
rclb
cld
push
mov
jo
pop
jb
out
mov
ret
fsubl
xor
es
mov
mov
inc
and
cli
clc
inc
pop
ret
sub
pop
in
sub
cmp
jle
fildl
push
shl
inc
jnp
pop
pop
xor
fsubrl
or
aam
ss
push
mov
cli
xchg
psubd
or
xchg
adc
mov
fdivr
test
sub
clc
fisttpl
push
cmpsb
call
aas
or
repz
inc
pop
sub
xor
sub
je
push
pop
cmp
mov
into
loope
and
bound
sbb
push
das
add
and
in
shlb
mov
lock
xchg
roll
sub
push
lcall
stos
ljmp
andl
mov
es
xchg
xchg
pop
lods
add
mov
jg
lcall
push
add
in
xchg
and
sub
les
pop
jmp
push
push
adc
hlt
nop
inc
pusha
and
mov
aam
pop
bound
popl
and
insb
imul
dec
mov
pop
je
data16
mov
jae
or
and
js
cwtl
adc
roll
dec
sbb
mov
fs
lock
out
or
test
cmp
pop
mov
cmp
lea
cld
add
arpl
add
out
js
adc
mov
addb
mov
lock
les
inc
cmpsl
insl
adc
pop
sbb
lea
orl
or
dec
loopne
or
sub
xor
xchg
ss
or
leave
mov
cmp
dec
ss
xchg
mov
mov
js
mov
mov
cltd
lock
incl
icebp
scas
or
jae
icebp
dec
cmp
into
pop
fdivl
loop
xchg
pop
pop
sahf
pusha
jbe
xor
pop
add
ljmp
xchg
add
cmpsb
test
push
repz
fucomip
enter
and
pop
sbb
out
cltd
cmp
mov
out
adc
loopne
inc
sub
hlt
xchg
call
rcll
mov
or
test
pop
js
push
movsb
dec
pop
sbb
add
dec
fldenv
cld
imulb
pop
cwtl
push
inc
xchg
sbb
add
aas
rorb
mov
sub
adc
arpl
sbb
pushf
sbb
jecxz
jmp
clc
fdivs
pop
push
or
pop
call
mov
push
jb
pop
fs
popa
sahf
or
add
jne
push
lock
imul
test
sub
mov
dec
fcomps
cmp
call
jmp
inc
jbe
adc
add
inc
std
pop
xchg
mov
aad
sub
xor
das
jecxz
mov
mov
xlat
movb
dec
in
cs
jae
inc
movsl
jle
xchg
push
mov
ret
inc
mov
test
movsb
mov
aaa
arpl
lods
lods
testb
or
pusha
pushl
sbb
icebp
or
adc
repnz
mov
jecxz
ja
aad
inc
mov
loop
inc
jmp
jmp
in
hlt
mov
cmovno
scas
loop
aaa
xchg
jl
ds
jns
push
or
loopne
mov
das
dec
mov
test
xchg
sahf
mov
outsl
fchs
xchg
lcallw
mov
add
cwtl
lock
hlt
scas
inc
mov
mov
push
sbb
cli
xchg
xor
sti
jae
addr16
test
or
je
js
das
pusha
push
and
inc
inc
jbe
mov
shrb
inc
xlat
xchg
repz
sti
jmp
mov
mov
test
fs
fstps
inc
push
sub
sbb
imul
fsubrs
outsb
xor
push
pop
insb
and
add
dec
cmp
fmull
adc
add
pop
aad
or
enter
push
sub
mov
xchg
push
jmp
add
jnp
pop
mov
fs
pusha
leave
inc
cmp
sbb
mov
ret
sub
sub
inc
mov
jge
inc
mov
inc
push
incl
aaa
adc
dec
mov
mov
ljmp
xor
cmp
xchg
movsl
mov
pop
push
mov
adc
add
adc
push
push
mov
cld
insb
sub
xor
cs
xor
add
mov
lret
push
inc
mov
mov
push
daa
sarb
jg
movsl
add
addl
mov
nop
cwtl
cltd
adc
movsb
mov
imul
test
test
mov
ret
xchg
inc
push
test
in
imul
pop
stos
push
xchg
sub
cli
mov
xor
fadds
mov
outsl
shlb
leave
xchg
or
cmpsb
push
fiaddl
mov
sub
lret
fistps
cmp
inc
loop
jle
lods
and
push
mov
ret
pop
xchg
push
in
jne
adc
movsb
add
pusha
pushf
mov
sbb
pop
into
adc
in
mov
aad
push
out
inc
adc
adc
add
call
adc
pop
xor
clc
inc
cmpsb
addr16
inc
xor
mov
mov
xchg
les
je
ljmp
push
sti
insb
add
jo
xchg
push
pop
mov
mov
xor
push
mov
mov
adc
dec
mov
and
mov
add
je
cmp
jecxz
mov
inc
icebp
jmp
adc
pop
ret
js
cmpb
scas
mov
pop
pushf
movb
clc
bound
negl
mov
xor
and
add
cwtl
add
insb
and
dec
cs
jl
cld
or
push
sbb
cld
ficoms
inc
mov
push
dec
cmp
sarb
sahf
aam
xchg
sbb
imul
mov
xlat
xlat
and
mov
adc
fbld
jmp
jno
and
cmp
mulb
pop
sub
movb
xor
xor
mov
sahf
into
les
mov
sub
add
stos
mov
pushf
adc
mov
mov
dec
dec
sub
jl
cmpsl
fnsave
add
pop
imul
xchg
out
std
sbbb
mov
out
fwait
xchg
fists
sub
push
outsb
mov
cld
lea
pushf
cltd
jb
or
call
and
and
mov
js
and
mov
repnz
aam
pop
in
push
jo
adc
add
xor
pop
addr16
inc
sbb
mov
cld
or
fcoml
pop
and
inc
sbb
xor
aas
push
push
bound
in
dec
pushf
add
das
call
push
adc
sbb
add
dec
mov
aad
xchg
cwtl
adcl
mov
dec
lcall
add
orl
shll
inc
nop
lcall
out
jg
push
cs
stos
inc
andb
scas
xor
orb
ss
or
pop
pop
mov
inc
decl
dec
mov
adc
inc
pushf
je
aaa
sub
dec
mov
pop
leave
push
cmp
cmp
push
loope
pop
add
xchg
and
js
push
adc
and
fildl
pushf
cltd
and
pop
push
imul
jne
loopne
mov
loope
mov
loop
or
and
mov
xchg
push
fnsave
pop
jg
and
xlat
subb
sbb
cmp
test
rolb
dec
sbb
and
inc
or
cmp
push
or
push
adc
and
aaa
fmull
adc
mov
push
fimull
mov
fwait
sbbb
flds
cmc
adc
sarl
xor
adc
out
cmp
ret
push
mov
cwtl
cmp
cmp
jnp
add
fnstcw
pushf
loopne
xchg
push
mov
ret
cmpb
push
xchg
cmp
incl
sbb
xor
sub
dec
rorl
lods
aad
pop
xlat
push
fs
mov
sbb
and
ss
aaa
jbe
stos
jo
lods
adcb
sub
pop
xor
pusha
push
loop
jg
push
rolb
mov
dec
mov
pop
dec
shr
fnstcw
or
out
test
aaa
mov
mulb
jo
mov
bound
add
movsb
add
clc
scas
sub
aas
inc
push
pushf
or
xlat
inc
add
dec
lock
pushf
inc
adc
lods
or
jno
ret
cmp
mov
mov
add
inc
stos
push
inc
mov
add
mov
pusha
mov
in
pop
mov
aam
jge
pushf
cltd
cld
or
decl
and
bndstx
rcll
xchg
push
mov
popf
fsubs
cs
mov
push
mov
daa
les
adc
cmp
xchg
xchg
or
cmc
mov
push
or
out
ret
cs
cmp
mov
xor
test
ss
adc
daa
sbb
add
cli
es
aas
jmp
or
adcb
lahf
test
ljmp
push
adc
cwtl
add
jmp
clc
cmp
push
leave
sbb
shlb
or
xchg
xorb
and
inc
push
and
xchg
mov
mov
pop
lods
sbb
mov
jnp
dec
mov
or
or
push
and
fiadds
adc
jmp
aam
adc
int
lret
mov
repnz
dec
pop
std
out
test
pop
xchg
xchg
mov
cmp
mov
inc
test
cld
pop
aam
sub
packuswb
sbbb
or
scas
push
enter
mov
lock
sub
movsb
mov
or
clc
aas
jl
and
xor
sbb
mov
jmp
or
fldcw
addl
je
inc
idivl
and
dec
loopne,pn
push
in
jmp
adc
shlb
xchg
adc
xor
mov
cmp
cmp
fs
mov
ds
sub
push
or
call
jecxz
incb
sbb
cmp
lcall
add
or
mov
divl
cltd
or
leave
adc
dec
out
mov
int
cmc
xchg
rclb
cld
dec
push
mov
inc
fisttps
imul
aas
adc
lea
push
shl
sbb
loope
adc
mov
pusha
in
mov
ljmp
xchg
cwtl
add
sarl
cmpsb
adc
add
pusha
popa
pop
xchg
inc
lds
mov
aaa
inc
dec
cld
movzbl
push
loopne
pop
ret
popf
bound
shrb
daa
push
bound
mov
clc
mov
push
dec
or
cmpsb
cli
xchg
jp
dec
ss
loopne
mov
mov
add
or
pop
mov
hlt
sbb
add
cmpsb
popa
outsl
mov
sbb
jo
ret
es
jns
rolb
andl
into
push
pop
inc
xchg
pusha
xchg
js
jle
sbb
rorb
sbb
jecxz
sub
or
rclb
hlt
jns
rclb
and
add
out
xchg
jo
or
hlt
mov
push
lret
jns
mov
pop
mov
out
xor
sub
xchg
cld
stos
push
jle
rcrb
aas
push
shlb
sbb
push
sub
add
add
sbb
xor
pop
inc
subb
mov
pop
test
sahf
sbb
ljmp
add
js
loop
loope
dec
or
orl
xor
add
or
ret
adcb
push
popa
adc
or
popa
adcl
cmp
cmpsl
sub
push
sbb
rcrl
jo
clc
sbb
outsb
mov
pop
movsl
call
mov
je
test
pop
sbb
jb
rcrb
addr16
inc
in
jne
fadds
mov
fstps
push
dec
sub
mov
icebp
push
out
add
lea
add
push
cmpsb
lods
xor
xchg
dec
add
pop
mov
insb
xchg
or
ljmp
rorb
xchg
xchg
pop
ret
insb
ja
jo
sbb
cs
jle
xchg
mov
mov
shrb
iret
add
pop
mov
xor
jle
icebp
insb
add
sbb
mov
sub
adc
pop
mov
mov
mov
iret
push
loope
cmp
shlb
and
test
ret
pop
adc
popa
stos
ret
sub
push
ret
outsb
push
aad
mov
add
pop
jl
or
sbbl
daa
inc
outsb
and
xchg
xchg
push
adc
mov
mov
xchg
mov
je
ljmp
push
mov
xor
daa
sbb
je
lea
pop
insb
xchg
pop
inc
and
out
nop
les
pop
out
fcomps
pop
pop
add
adc
clc
addl
pop
add
leave
rorb
orl
mov
inc
mov
mov
loopne
stos
dec
pop
add
pop
mov
adc
jmp
mov
pop
cmp
mov
mov
call
ret
adcb
mov
mov
mov
mov
sub
sbb
sbb
xor
adc
xor
test
xchg
xchg
lock
loopne
sbb
ret
mov
mov
pop
push
pop
pop
insb
mov
stc
push
push
popa
sbb
leave
mov
dec
mov
lret
movsl
cmovp
xchg
sbb
cli
out
jge
mov
fwait
adc
aam
xchg
adc
add
mov
inc
jbe
cmp
push
lock
popf
roll
pop
cmpsl
or
add
sub
mov
fisubrl
mov
pop
adc
push
add
mov
push
jne
in
jo
int3
clc
cs
mov
clc
fstl
push
or
pushf
shlb
and
js
jno
sahf
jb
jb
mov
and
inc
scas
inc
adc
xchg
stos
shr
jmp
call
pop
inc
xor
test
pop
sbb
dec
test
add
inc
add
mov
push
movsl
call
xchg
jnp
mov
outsb
ja
inc
jmp
shlb
push
test
rcrb
inc
es
fmull
mov
add
movsl
mov
adc
movsb
out
xchg
xchg
xchg
aas
orl
mov
lods
xchg
push
rorl
test
jb
test
xlat
sbb
repz
mov
mov
call
andl
popa
cltd
in
mov
sbb
mov
mov
lds
fwait
jb
rol
insl
in
aad
mov
mov
enter
mov
cld
mov
cwtl
add
pop
or
jle
pop
or
sub
pusha
leavew
loop
or
pop
aas
insl
cmp
xchg
js
call
jmp
or
and
in
dec
je
mov
sbb
push
ficoml
std
xchg
test
mov
pusha
xor
lcall
sbb
rcrl
test
mov
loope
push
mov
pop
adc
jbe
dec
fs
lret
leave
test
sti
xchg
jg
ds
aad
ss
rolb
ud0
sbb
and
xor
js
inc
pop
insb
push
aaa
or
loop
aaa
inc
mov
test
ds
sub
pop
xor
or
repz
loope
in
prefetch
cwtl
push
cmp
mov
mov
loopw
pop
jp
mov
cmp
push
lods
ss
xchg
mov
les
inc
js
call
sbb
mov
lahf
adc
data16
and
das
mov
xor
mov
mov
int
mov
push
mov
loopne
stc
loop
adc
insb
jmp
cli
rorb
pushf
in
bound
and
jecxz
lret
xchg
xchg
fidivs
test
add
shll
jp
inc
loope
fisubl
xchg
out
push
loope
push
into
mov
fidivs
sbb
mov
mov
inc
inc
jp
notl
popf
insl
mov
icebp
xchg
pop
cmpb
inc
xor
hlt
nop
inc
movb
nop
hlt
jae
mov
inc
imul
sti
push
add
lods
mov
rcrb
dec
push
lret
scas
loopne
insb
sbb
clc
sub
add
adc
pop
fdiv
out
lods
mov
mov
cmp
adc
push
mov
jmp
xchg
jp
mov
icebp
ljmp
fcomps
loop
adcl
les
inc
ds
loope
pop
cld
rcrl
cmp
insb
jbe
cmp
fwait
cmc
xor
aad
and
mov
sub
aam
mov
cli
scas
push
andl
fsubrs
jo
ror
cwtl
fisttps
or
insl
push
das
pop
push
gs
push
shrl
stc
jge
iret
mov
mov
ljmp
mov
pop
je
and
push
push
fistl
cmp
xor
dec
or
jle
cmpsb
inc
cltd
cmp
add
mov
dec
cmp
xchg
add
ret
lods
out
mov
add
sub
xor
bound
xor
and
inc
nop
mov
xor
std
ret
shrb
sub
outsl
pop
fstps
or
add
pop
xchg
in
imul
es
out
push
mov
push
pop
mov
mov
out
mov
adc
push
aaa
clc
hlt
outsb
mov
and
leave
add
push
ret
pusha
movsl
or
js
sbb
sbb
imul
xor
cmp
mov
mov
movsb
or
mov
lret
lret
push
xchg
shl
jmp
jp
xchg
add
xor
xor
shl
or
stc
fadd
cmc
adc
push
mov
xor
mov
add
push
stos
ss
dec
cmpb
out
add
add
cld
sahf
inc
adc
rol
and
fnstenv
or
inc
hlt
push
and
filds
push
subl
mov
mov
rcrb
mov
cs
mov
mov
test
andb
lock
add
cli
popa
push
and
dec
pop
xchg
push
adc
into
lods
cld
adc
mov
sub
shlb
and
mov
or
popf
jnp
dec
sbb
data16
xor
xor
cmp
cltd
inc
inc
mov
sbb
clc
test
inc
stos
loop
movsl
mov
sbb
fsub
mov
out
push
sarl
cmpsl
dec
pop
adc
fsubrl
fstp
fdiv
arpl
pop
mov
push
cmpb
mov
ja
push
sbb
pop
stos
adc
jmp
cmc
ret
int3
push
sub
cmp
aad
hlt
and
jno
push
pop
stos
adc
mov
insb
or
lret
pop
sbb
push
pushf
jno
lea
dec
mov
jle,pt
mov
fwait
or
or
dec
sub
lahf
mov
add
icebp
inc
cli
ret
mov
dec
add
in
pop
xchg
stos
movsb
stos
jl
jo
mov
xor
pushf
sub
call
mov
adc
fnstenv
sbbl
les
rorl
ds
mov
mov
sbb
inc
dec
insb
ficoms
mov
shl
adc
add
shll
dec
inc
lock
imul
jns
and
aaa
and
movlps
mov
roll
lods
xlat
in
pop
data16
repnz
add
sub
push
xor
add
xor
and
sar
mov
pop
leave
push
push
pop
dec
lret
shl
cmpb
mov
jl
jg
cs
sub
and
test
mov
out
aad
clc
int3
repnz
enter
pusha
sbbb
call
aaa
insb
and
jl
xchg
push
add
ds
add
popf
gs
xor
mov
sbb
outsb
cmp
mov
xor
adc
adc
ret
xor
fcomps
arpl
ret
ret
xchg
test
sbb
xorb
jns
idiv
pop
int3
outsb
pop
cwtl
or
push
outsb
and
mov
out
push
push
mov
imul
adc
add
mov
clc
icebp
ss
jbe
jg
test
movsl
outsl
inc
cmpl
hlt
cmpsb
js
jle
mov
fwait
inc
ret
call
aas
push
mov
scas
je
in
rclb
or
out
fldcw
or
adc
aam
icebp
cmpl
and
out
negl
xor
mov
mov
orb
addw
hlt
lret
push
xchg
mov
ret
jg
add
push
jne
and
outsl
pop
imul
fistpll
cld
jb
inc
adc
pop
push
xchg
fwait
scas
mov
sahf
and
rorl
adc
ljmp
cmc
iret
push
lea
pop
shrl
or
test
dec
lahf
repnz
movsb
jb
or
mov
ret
lds
testl
cmc
sub
loop
jo
adc
fdivs
outsb
clc
jo
xor
cmpsb
insl
nop
movsb
jno
fmull
fnsave
adc
push
addl
jle
outsb
push
push
and
enter
out
pusha
lods
fs
push
jmp
push
out
and
pop
mov
hlt
lds
cld
adc
mov
popa
movsb
gs
mov
or
testb
xor
loop
push
add
and
and
pop
mov
lods
dec
shlb
push
inc
subl
adc
dec
ret
mov
stos
pop
ret
xor
sarl
adcl
push
outsl
stos
add
ret
enter
arpl
sub
in
xor
les
in
lods
sub
cli
icebp
rcr
clc
sub
stos
out
or
push
ret
pop
xorb
or
js
dec
clc
cmp
add
daa
stos
aam
jo
ljmp
pushf
pcmpeqd
xor
inc
mov
movlps
xor
pop
sar
nop
xchg
mov
stos
sahf
movsb
dec
out
add
lahf
pop
adc
pusha
add
xor
mov
xchg
lock
lods
pop
sbb
inc
dec
outsl
fwait
loope
ja
shlb
movsl
mov
fsubp
jnp
mov
jg
flds
sahf
ror
shr
sub
scas
dec
inc
xchg
jle
sub
or
mov
jle
shrb
xchg
adcb
gs
add
xchg
cmp
rcrb
push
mov
adc
push
test
scas
lahf
enter
sbb
daa
fimull
add
adc
sub
hlt
mov
mov
rcrl
jle
scas
pop
fdivrs
stos
lods
cmp
out
xor
add
mov
dec
rcrl
call
ja
aad
pop
cmp
ficomps
or
jbe
loop
lahf
cbtw
std
test
ret
je
adc
rorb
test
and
or
adc
test
mov
test
xor
divl
fucomip
push
xor
fwait
mov
mov
imul
pusha
insl
xlat
lods
push
cwtl
inc
mov
xor
and
jle
pushl
and
and
mov
adc
cltd
aaa
push
xor
ficoms
mov
ja
jbe
imul
adc
lahf
mov
adc
movsb
out
cmp
add
cmpsl
jae
mov
outsb
cs
jbe
inc
mov
jp
jbe
ret
imul
adc
add
inc
or
xchg
adc
fdivp
push
test
xchg
pop
orb
shll
test
jbe
stos
out
pop
hlt
xchg
push
add
pop
insl
frstor
ljmp
adc
xor
mov
daa
cmp
les
add
xor
fdivrl
adc
cli
pusha
notb
inc
loopne
mov
push
test
dec
pop
outsl
dec
mov
add
repz
out
lods
loopne
lock
js
mov
inc
repz
jb
sbb
out
dec
in
out
mov
or
loope
in
sbb
cltd
sbbl
xchg
ds
push
lcall
scas
pop
cmp
dec
add
inc
aas
lea
ret
add
sub
cltd
scas
insl
jne
cmpl
sti
cmp
pop
add
jp
scas
pop
add
pusha
insl
sbb
dec
xor
push
or
jmp
mov
repnz
xchg
xor
push
cmp
lods
mov
jp
dec
push
addr16
cmpl
popf
lcall
pop
mov
xorb
add
xchg
insl
and
sub
sbb
mov
xor
add
outsl
adc
sbb
xor
sbb
adc
mov
arpl
cli
ss
lds
orl
out
mov
leave
test
fwait
mov
add
outsb
inc
xlat
mulb
add
pop
dec
jle
mov
sbb
inc
aam
out
ret
int
adc
mov
mov
data16
push
fstpt
sbb
arpl
scas
sti
sbb
add
inc
mov
mov
dec
mov
mov
movsl
sub
stos
jo
movsb
incb
notl
sub
sbb
add
mov
jecxz
ljmp
cmpsl
daa
std
loope
loop
cmc
loop
js
push
decb
mov
pushf
adc
mov
adc
adc
call
subb
cs
loop
pop
mov
and
and
adc
inc
inc
dec
or
adc
insb
or
dec
leave
in
sahf
push
or
lods
xlat
sbb
xor
and
sbb
insb
cli
cmpl
shrl
jnp
mov
repnz
mov
in
adc
jle
iret
push
jbe
adc
xlat
add
movsb
cmpsb
mov
fs
xor
sarl
jne
jmp
mov
dec
pop
jecxz
test
and
xchg
and
adc
and
add
inc
daa
cs
les
ret
mov
das
bound
or
mov
or
adc
jae
subb
fisttpll
stos
das
inc
add
jbe
push
shl
pop
and
adcl
fisubrl
and
out
popf
add
xor
cmp
pop
notb
test
ret
into
clc
in
loop
aas
mov
test
jg
mov
dec
cmc
adc
mov
imul
daa
push
cmp
xchg
out
sub
cld
sbb
int3
push
sbb
adc
ret
jmp
mov
cmc
cs
shrl
ljmp
cli
cmc
mov
xor
mov
call
cmpsl
inc
jp
lock
add
std
test
aaa
mov
sub
imull
jnp
and
xchg
push
add
outsl
loopne
in
in
or
or
pop
stc
aam
add
push
and
or
jmp
dec
imul
jo
inc
dec
xor
inc
or
cs
pop
push
fucomip
js
xchg
loop
push
fwait
insl
push
stos
jle
mov
or
sti
out
scas
stos
jp
jle
add
rolb
sarb
les
cmp
sbb
mov
mov
insb
inc
rorl
xchg
or
sub
aam
imul
nop
and
cmpsb
scas
ror
es
add
sbbb
and
mov
jmp
pushf
jg
int
pop
andl
mov
cli
rclb
pop
or
sub
and
mov
jecxz
bound
push
jmp
movsl
inc
add
sub
pop
jle
or
adc
jl
lea
leave
lret
adc
add
or
mov
xchg
js
imull
aaa
dec
and
push
bswap
sbb
xchg
dec
lods
divl
mov
es
and
xchg
inc
add
out
add
scas
cmc
push
jmp
mov
xor
push
sbb
repz
sar
rcrb
mov
jl
aad
sbb
jo
add
sahf
pop
and
mov
jmp
dec
xchg
xor
add
cltd
shrb
call
push
insb
mov
dec
call
mov
clc
add
inc
adc
jp
pop
jp
imulb
push
pop
or
icebp
ljmp
imul
or
sub
lods
dec
cmpb
pop
mov
test
sbb
subb
mov
or
jge
orb
mov
repnz
sub
sbb
push
dec
inc
lock
fdivr
xchg
jb
into
lret
and
cmp
xor
je
scas
xor
fldcw
popa
and
ljmp
sbb
pop
pop
or
cmp
sub
sbb
adc
pop
pusha
push
dec
xor
call
hlt
mov
sbb
or
pop
mov
sahf
cld
pusha
test
fsubs
push
sbb
cmp
add
pushf
in
inc
test
fsubl
sar
out
popa
sub
xlat
mov
xor
or
mov
pop
lds
sbb
adcl
sbb
add
lock
je
daa
lock
mov
lret
mov
movsl
mov
or
add
js
jg
test
mov
cmc
ss
scas
push
popl
mov
clc
data16
lea
je
lock
in
or
cmpsl
adc
push
lret
lea
in
test
std
mov
or
xor
and
subl
mov
mov
adc
aam
in
das
inc
das
sbb
gs
mov
adc
add
orl
add
scas
adc
loope
xor
test
cmp
lock
ds
adc
out
push
mov
sub
dec
dec
inc
fcoms
lock
adc
in
nop
lock
cli
mov
add
loop
xor
loope
js
sti
sarl
pusha
xchg
xchg
push
push
sbb
pop
lret
aaa
sub
rcrb
out
dec
mov
or
mov
aad
test
rol
lds
add
cld
mov
outsb
sbb
and
or
cmpl
arpl
push
lea
sub
sub
cmp
push
dec
pop
push
loop
pop
ja
movsb
aas
lret
sbb
dec
es
or
pop
dec
xchg
push
insb
test
fbstp
jbe
frstor
sub
and
addr16
cld
je
popl
es
xchg
pop
mov
aas
in
sub
mov
pushf
scas
loop,pt
adc
jne
lods
sbb
xchg
adc
xchg
adc
sbb
icebp
and
xchg
adc
jecxz
add
jbe
sub
adc
sub
cmp
lods
mov
xor
test
push
pop
and
jl
mov
dec
or
shrb
xor
daa
sbb
cmc
sub
mov
push
xchg
fcmovne
shl
dec
pop
mov
or
mov
xchg
aad
mov
cmp
or
xchg
mov
in
enter
lcall
cmp
aas
sub
inc
loopne
jmp
cmp
vmovshdup
popf
jle
bound
arpl
mov
mov
pusha
test
shrb
lock
mov
mov
and
faddl
test
mov
out
arpl
adc
push
lods
in
and
adc
lods
xlat
adcl
inc
loope
jp
movsl
fisubrl
pop
inc
dec
push
imul
xchg
fisttpll
setne
sti
and
push
cmp
pop
xor
popf
sbb
scas
add
xor
sub
or
fildll
pop
push
inc
push
repnz
inc
call
addb
dec
and
hlt
ret
push
ja
xchg
inc
adc
sbb
rolb
pop
xor
test
xchg
jno
jp
aaa
xchg
outsb
lods
retw
sahf
in
mov
sbb
and
jle
movsl
add
and
sbb
test
inc
inc
cmpsl
inc
dec
sarb
jo
imul
sub
dec
lods
inc
cli
add
sbb
push
pop
inc
add
fstps
jns
sbb
mov
sbb
sub
cmpsl
aad
jmp
es
and
sub
sub
dec
xor
call
pop
mov
ss
inc
insb
adc
or
push
jg
push
or
sub
mov
xor
sub
pusha
jl
ss
xchg
stos
inc
and
aaa
stos
mov
fsubrs
add
cmp
fwait
add
cmp
jae
lds
mov
sub
xor
idivb
testb
mov
cld
roll
or
movsb
and
arpl
or
shl
ret
mov
mov
and
dec
dec
inc
sbb
ds
dec
sub
or
push
lds
sarb
pop
lds
jno
lahf
mov
shl
sub
fildl
sub
push
xor
sub
loope
or
shrl
lock
mov
add
aam
inc
ljmp
push
jmp
dec
lods
nop
adc
mov
add
loop
cmpsb
sbb
shll
jbe
loopne
and
dec
mov
push
jmp
movups
pusha
or
js
mov
push
imulb
xor
ds
imul
dec
push
and
xor
pop
and
imul
jle
cmp
cmpsl
out
int3
sbb
jae
or
adc
mov
jns
xor
pop
pop
mov
int
mov
jge
repz
sub
movl
incl
push
jne
ljmp
out
popf
push
push
call
push
shr
mov
or
gs
dec
mov
inc
aas
inc
jmp
shl
xchg
jecxz
pushl
test
sub
mov
lods
xchg
fsubs
cmp
addr16
adc
adc
lcall
shlb
daa
ret
js
stos
adc
loope
pop
cs
push
jp
addr16
js
jae
std
addb
or
push
mov
or
clc
loop
add
cs
cli
mov
jbe
and
add
iret
xchg
pop
loopne
shll
scas
xchg
sbb
movsl
xorb
xorb
dec
pop
std
je
mov
xor
verr
add
rolb
lret
mov
cli
mov
mov
aaa
sbb
lret
or
adc
cwtl
mov
clc
es
out
arpl
sub
ret
cld
sti
mov
imul
inc
ret
pop
test
push
test
mov
pop
cmc
dec
sbb
outsl
or
pusha
jne
lods
dec
sahf
js
notb
aam
mov
jl
lahf
test
ljmp
inc
add
test
shll
lret
sbb
xchg
lret
push
lea
movsb
ds
sub
or
rcrb
inc
adc
enter
in
nop
jl
int
adc
cli
add
jae
fwait
sub
push
xchg
ds
pop
push
aaa
xchg
jns
ja
mov
adc
pop
dec
push
std
sahf
fnstcw
jge
xchg
push
inc
icebp
scas
lods
popa
inc
loope
sub
xchg
scas
add
das
mov
pop
dec
inc
adc
and
rcll
push
test
add
dec
adc
sar
lods
loopne
cltd
mov
cltd
test
push
pop
cmp
fsub
adc
dec
repz
imul
sti
out
push
dec
jge
mov
les
mov
rcr
mov
pop
insb
push
in
mov
cmp
cld
add
add
repnz
push
pop
pop
loop
lods
pop
ret
jb
loop
push
out
xor
loop
scas
cmpsb
incl
adcl
inc
and
pusha
mov
xor
ljmp
adcb
inc
add
adc
loopne
push
outsb
inc
dec
jge
jp
scas
scas
repnz
xchg
ret
je
stos
jno
pop
pop
add
sub
cmp
or
mov
test
push
xchg
pusha
loopne
and
scas
mov
mov
orl
mov
jecxz
mov
mov
fiaddl
stos
push
test
xor
mov
sub
xchg
pop
or
inc
pop
add
sbb
adc
pop
loop
lcall
add
rep
clc
jnp
movq
xchg
push
mov
mov
inc
daa
bound
lds
mov
push
adc
fidivs
cld
je
xchg
xchg
aad
inc
push
stos
jne
mov
xchg
fnstcw
xor
outsl
aaa
ja
add
aas
inc
pop
sub
inc
test
lea
jnp
fmuls
mov
frstor
mov
pusha
lcall
call
stos
jge
jo
dec
sbb
sbb
mov
mov
iret
std
mov
enter
or
cmp
xor
xchg
xor
or
fbld
jo
outsl
cmp
pushf
sub
test
inc
out
and
pop
lods
or
push
jb
icebp
rcrb
sub
mov
jo
cmp
add
mov
or
test
rolb
add
mov
ss
add
add
pop
bound
pop
inc
jmp
cmp
les
test
mov
xor
js
dec
sub
lahf
jmp
inc
add
dec
test
dec
xor
shrl
lahf
fmul
mov
popf
inc
scas
xchg
and
aad
rorl
jne
cmp
into
push
pop
inc
and
or
xor
and
in
xor
popf
and
out
add
aad
sahf
rorb
loop
sbb
add
adc
and
xor
sbb
or
push
sub
fdiv
and
adc
jmp
pop
aam
lods
adc
aaa
pop
pop
pop
lahf
shl
sahf
or
repz
add
adc
mov
inc
mov
jbe
xor
ret
cs
cmp
cmp
jg
pop
movsb
incl
scas
lds
loope
xchg
sub
push
dec
dec
add
jmp
add
cli
mov
pop
adc
pop
ret
inc
mov
clc
inc
repz
mov
mov
mov
mov
outsb
fstpl
insl
jbe
out
xchg
mov
pop
sbbl
mov
sub
mov
cmp
enter
jle
adc
xchg
push
hlt
add
test
dec
cli
shrl
popf
lds
pop
dec
xchg
addr16
xchg
incl
lcall
mov
fildl
das
xor
jb
rolb
push
mov
imul
stos
or
js
add
sub
push
data16
lock
ljmp
in
incl
mov
rolb
pop
sub
hlt
push
mov
test
inc
pop
loope
inc
jno
cmc
adc
fs
pop
pop
inc
ja
insb
addb
fwait
xor
push
pop
adc
out
jns
mov
data16
scas
outsb
add
cmp
movb
and
mov
mov
mov
lods
pop
mov
xchg
mov
shl
leave
movsb
loop
stc
into
jbe
sbb
cli
dec
and
jle
adc
clc
lahf
add
je
push
mov
rorb
cs
ja
and
cwtl
out
stc
ljmp
nop
jo
add
jl
add
stos
daa
cld
je
dec
mov
and
push
ret
jecxz
out
cmp
push
sbb
cmc
pop
call
rclb
mov
lea
inc
pop
jne
push
push
dec
repnz
mov
jg
push
xorl
adc
in
icebp
sub
or
push
adc
or
rol
fidivl
ficompl
cmp
push
xor
icebp
dec
stos
or
mov
ljmp
dec
ds
data16
xor
add
and
dec
loopne
fsubrs
imul
out
loope
dec
fcompl
fidivl
stos
rcll
xor
testb
inc
mov
lret
arpl
pop
test
dec
push
rcrl
call
xchg
and
in
adcb
mov
js
jbe
jge
and
inc
adc
cld
jae
sbb
imull
adc
pop
jae
lahf
mov
out
rcrb
add
ds
mov
cmp
jns
sub
xchg
inc
pop
inc
in
mov
stc
in
and
mov
lods
fwait
mov
popa
sub
dec
cmp
sbb
mov
and
dec
mov
adc
cmc
daa
add
clc
lret
cwtl
push
in
mov
repz
sbb
popl
mov
mov
mov
xchg
outsb
add
sbb
je
or
xor
or
jmp
pop
push
movsl
ss
and
pop
xchg
jb
imul
and
popf
lcall
ret
faddp
push
dec
outsl
fs
fsubs
inc
push
sti
lock
cmc
mov
cltd
clc
lock
mov
ljmp
cmp
adc
jo
pop
into
dec
lret
bound
lret
xchg
mov
cmp
std
jo
mov
mov
sti
push
loop
xchg
pop
sub
mov
cmp
mov
push
add
add
into
lods
out
sbb
insb
sbb
sahf
lcall
add
mov
mov
or
and
add
dec
in
out
sbb
sbb
or
cs
jo
mov
mov
pop
xchg
into
adc
enter
pop
fs
lock
sahf
pop
fsubrl
cwtl
push
push
sahf
push
cmc
jmp
push
js
sub
push
add
push
mov
sub
insb
ficoml
adc
out
push
sbb
mov
and
push
ds
sti
fs
rol
ret
push
std
rorl
sub
xchg
jno
push
imul
aam
jbe
push
in
cli
add
sub
fs
cmp
jg
sahf
xor
mov
sbb
mov
data16
nop
and
out
in
movsl
ljmp
add
jno
add
test
testb
fwait
push
outsl
mov
sub
shl
jg
cltd
jmp
cs
cmp
cmp
cwtl
mov
movsl
loop
iret
or
into
repnz
adc
ret
mov
or
dec
cmp
sbb
fldl
nop
hlt
loop
shl
inc
dec
mov
loop
jg
icebp
cli
jmp
into
insb
push
scas
pop
rorl
pop
arpl
imulb
xchg
fwait
sti
mov
push
and
fwait
or
xchg
es
cmp
fbstp
push
jno
hlt
jns
jmp
inc
sbb
cmpb
xchg
push
outsb
sbb
pop
cltd
lock
lods
and
aam
je
mov
dec
inc
dec
addr16
les
adc
fcoms
pusha
mov
sbb
shr
pop
push
mov
sahf
dec
popa
aaa
imul
push
addb
pop
or
arpl
add
cmpsl
sbb
mov
inc
dec
icebp
pushf
sub
push
sbb
xchg
cmpsl
push
movzbl
xor
pop
in
add
pushf
push
nop
call
shr
test
pop
rcrb
aad
addr16
and
mov
pop
fs
mov
stos
gs
out
mov
lea
aam
sti
jle
aaa
sbb
adc
xchg
push
push
test
mov
push
call
aam
push
cld
shrb
or
lock
push
leave
addr16
sbb
xchg
dec
lcallw
xchg
insb
mov
int
ja
jg
xchg
xchg
or
xor
inc
rcrl
mov
pop
pop
pop
or
push
stos
pop
pop
xor
xchg
dec
adc
clc
dec
imul
mov
out
xchg
push
jne
in
cmpb
xor
sbb
sbb
int3
jecxz
push
pop
pop
inc
add
imul
inc
sbb
hlt
cmp
lea
fwait
dec
ret
movsl
add
cmp
js
je
es
mov
mov
adc
xchg
fildl
jle
xchg
loopne
push
pop
sbb
adc
or
mov
push
jg
mov
lods
mov
sbb
dec
insb
scas
push
inc
call
mov
std
jmp
rolb
idivl
lahf
out
pushf
sbb
in
lahf
stos
sbb
mov
fisubl
add
repz
cli
mov
jne
fdivrp
leave
cmpsb
mov
ret
dec
or
or
idivb
jne
jl
rorb
notl
decl
dec
dec
push
mov
push
sub
push
iret
xor
jno
xor
mov
es
rcr
fs
xchg
int
add
mov
mov
outsl
push
lahf
packssdw
cmp
aas
andb
dec
push
xchg
mov
stos
out
adc
jl
xor
imull
push
pop
push
mov
push
js
aad
outsb
adc
sub
inc
dec
scas
cmp
add
mov
dec
fbld
mov
and
adcb
clc
dec
test
push
movsl
dec
pop
push
mov
das
in
xor
cli
push
mov
cmp
test
lock
int
xchg
and
push
aad
pusha
xchg
jno
add
xchg
js
cwtl
xor
insb
fsubrs
jg
std
icebp
add
jno
jl
ret
pop
lock
push
call
mov
daa
clc
pop
mov
or
pusha
jae
ljmp
loop
shl
push
xorb
mov
cmp
adc
push
das
push
pop
cmpsb
sub
sbb
mov
mov
mov
adc
in
shr
add
daa
popa
or
enter
or
test
mov
gs
rcrl
inc
pop
repnz
lods
cmp
insb
call
loopne
in
cmp
int
add
je
sbb
xor
ljmp
mov
scas
adc
xchg
jmp
jp
in
and
xor
dec
pop
and
mov
loop
fadds
mov
sbb
rorb
pop
int
je
mov
and
dec
fstps
mov
lock
outsb
test
mov
xchg
pop
inc
mov
push
xlat
lret
daa
push
in
and
cmp
push
mov
mov
pop
pop
cld
clc
stos
inc
int3
pop
push
loopne
mov
jecxz
push
push
in
push
inc
into
xchg
pop
add
add
sbb
je
lods
add
xchg
cmpsb
icebp
inc
push
es
xchg
push
loope
stc
movsl
cltd
dec
andl
cmp
cmpsl
rol
jo
mov
std
and
push
stos
decl
ret
aam
sbb
sub
roll
mov
xchg
jo,pt
push
out
xchg
cmpsl
ret
push
push
mov
aas
divb
insb
cwtl
dec
xor
out
js
xchg
sbb
push
in
push
inc
ds
test
mov
lcall
pusha
nop
fidivl
inc
popa
push
out
shl
loope
popf
add
add
sahf
fs
pop
cmp
or
adc
and
aam
outsb
shll
lea
mov
movsb
mov
js
mov
outsl
and
dec
jle
mov
xor
iret
popf
jl
push
testl
popf
sub
imul
mov
adc
jb
sub
outsl
fimuls
shrl
orb
push
or
add
or
xchg
andb
pop
aam
push
or
fnstcw
hlt
xor
fsts
mov
sub
xchg
fsubrl
inc
sub
sar
xor
add
add
mov
jmp
aam
enter
inc
andl
enter
cs
fsub
pop
mov
push
iret
adc
outsb
repnz
pop
mov
imul
sbb
outsl
enter
mov
push
cltd
mov
call
loope
je
mov
dec
sti
cmc
data16
incb
pop
cltd
arpl
je
lock
mov
add
pop
int
int
cld
dec
scas
es
pop
cmpl
add
cmp
lods
sub
cmp
sbb
jbe
adc
xchg
and
dec
repnz
leave
xor
rorw
xchg
outsl
decl
lcall
inc
call
lock
add
xchg
cs
pushf
dec
inc
or
lret
inc
arpl
xor
jo
ljmp
and
or
push
adc
and
mov
mov
push
mov
xchg
out
push
fdiv
xchg
sub
addl
repz
inc
jo
mov
inc
mov
mov
or
leave
dec
inc
ret
mov
repz
mov
loope
xchg
dec
fcoml
pushf
stos
mov
imul
nop
rolb
and
jb
jns
daa
fdivl
and
sahf
insb
loopne
mov
mov
dec
fs
cmpl
not
xchg
mov
addr16
nop
les
jbe
andl
or
and
movb
clc
pop
mov
sti
cmp
jmp
cmp
cmp
add
push
cwtl
add
mov
inc
scas
xchg
or
xlat
hlt
jecxz
jg
and
push
mov
pop
adc
popa
mov
jmp
add
mov
mov
and
das
and
in
int
inc
jno
jmp
add
sbb
lret
lock
icebp
mov
push
push
pushf
js
pusha
add
and
pop
into
pop
ja
inc
enter
sub
mov
loopne
cli
dec
mov
outsb
rcll
pop
jecxz
dec
adc
rcrl
add
mov
mov
pop
test
pushf
mov
int
fisubrs
and
cli
add
out
mov
mov
cmp
js
jle
jle
andl
jl
push
cmpsb
jp
add
fdivl
fcom
mov
lcall
das
jno
or
pop
adc
fdivrs
dec
cmp
fildl
loop
inc
dec
sub
pop
imul
sub
iret
pop
ret
arpl
sbb
xchg
mov
inc
or
push
mov
push
mov
scas
pop
push
cwtl
mov
cmp
lahf
gs
mov
adc
in
add
sbb
pop
aad
inc
rcr
add
inc
jl
repnz
lds
into
mov
js
bts
in
jns
or
loope
mov
pop
or
xor
cmp
xchg
lea
xchg
imul
shll
lret
mov
push
cli
jo
data16
test
into
mov
inc
out
jmp
cmp
push
mov
ret
pop
insb
movsl
push
addr16
les
dec
or
inc
inc
gs
ret
sbb
scas
add
test
enter
xchg
loope
in
pop
sub
data16
xorl
jne
mov
sti
scas
shrl
and
rorb
aaa
or
enter
sbb
mov
popf
loope
cmpl
xchg
cmp
ds
adc
cmpsb
dec
mov
fs
pop
cmp
and
inc
jecxz
xchg
into
rclb
lahf
je
cmp
adc
or
sbbb
bound
fnstsw
mov
pop
adc
and
fistl
cltd
jno
out
fs
sub
jne
daa
xchg
lahf
arpl
aad
mov
repz
movsl
pop
nop
fldt
or
mov
aad
inc
fidivl
shll
sarl
stos
int3
jle
insl
push
test
sbb
lcall
lods
das
in
pop
int3
int
sarb
rcl
shrl
rorl
push
mov
ret
cmpsl
pop
fwait
jle
shlb
cltd
and
inc
bound
add
xor
test
popa
orl
in
adc
fsubs
mov
cs
push
hlt
loope
adc
dec
jp
insl
pop
mov
pop
push
and
xchg
test
sub
cmpb
xor
fwait
mov
dec
inc
add
fsubl
jbe
or
cld
inc
scas
imul
jmp
mov
inc
loopne
push
xorl
push
js
mov
adcb
sbb
int
inc
lret
sub
adc
les
sub
stos
and
and
sbb
hlt
repz
shll
pop
lret
mov
jle
push
inc
jmp
cmpsb
push
std
clc
jl
jb
add
push
dec
je
or
dec
fwait
in
popf
shll
testl
jmp
dec
roll
fs
adc
js
cmp
push
mov
enter
mov
push
and
mov
loope
dec
repz
xchg
repz
adc
scas
ficoml
xor
sahf
mov
pop
inc
imul
fldl
dec
loopne
jp
subb
adc
popf
stos
inc
xchg
leave
dec
jp
xchg
lock
add
loope
cmpsl
fildll
in
scas
xor
lds
xchg
rclb
adc
pushf
fdivl
jbe
loop
fwait
pop
inc
popa
or
fildl
shrd
and
sub
jns
sbb
icebp
stos
push
movsb
pop
das
push
aam
mov
xchg
nop
lret
mov
mov
and
ljmp
lods
jbe
loopne
and
sbb
stos
mov
cmpsb
stc
mov
jnp
jb
pop
jno
pop
adc
test
loope
xor
xchg
mov
mov
sbb
cli
popf
lock
add
shr
pop
xchg
mov
pop
adc
aam
jp
out
add
dec
jecxz
rcll
ja
fimull
dec
add
lock
lcall
bound
jo
cmpsl
subb
imul
daa
testb
fadds
or
and
es
ds
push
movntps
mov
daa
cs
out
popa
mov
ret
and
sbb
icebp
adc
sahf
in
xchg
mov
dec
xchg
cmp
push
mov
jnp
jne
dec
sbb
xchg
mov
rolb
lcall
pop
xchg
lea
xor
sub
repnz
xchg
xor
clc
outsl
add
insl
and
fsubrs
inc
ja
sub
lock
dec
in
dec
lods
push
fbld
cld
rcll
xor
add
mov
mov
add
mov
sub
sbb
icebp
bound
push
int3
cmp
xor
cmpsb
adc
frstor
jg
sub
lret
scas
incl
js
sarb
fwait
xchg
mov
jno
inc
out
cmp
jle
cmpsl
in
jbe
and
jne
add
shrl
push
arpl
inc
fs
mov
push
fmull
lods
dec
scas
mov
pop
lock
xchg
add
mov
inc
and
js
filds
xor
andb
xchg
dec
insb
adc
or
popa
add
xchg
xor
push
adc
loop
jecxz
pushf
pop
ret
fisubs
repz
and
lods
xor
adc
test
pop
ljmp
push
ret
iret
dec
pop
xchg
mov
test
hlt
aam
cmp
popf
mov
call
mov
push
hlt
subl
push
jl
inc
shrb
ret
aas
loop
xchg
mov
sti
push
mov
mov
push
cld
fldl
orb
xor
fdivs
scas
push
dec
daa
push
adc
hlt
add
jns
sbb
add
adc
push
out
xor
lcall
mov
loope
mov
sub
stos
pop
xlat
xor
push
lods
hlt
lahf
inc
scas
sbb
ret
es
xor
xor
mov
xchg
imul
aad
daa
mov
pop
mov
testl
out
enter
aaa
xor
cmp
ret
lret
push
scas
movsl
pop
fnstsw
fs
ljmp
out
rcrl
hlt
mov
sbb
xchg
adc
xchg
push
out
mov
adc
je
sub
aad
cmp
dec
pop
lahf
adc
ds
pop
push
pop
xchg
loope
xor
fnstenv
fsubs
orl
int3
movsb
pop
xchg
insb
sbb
mov
cmp
ror
popa
push
mov
in
xchg
lods
and
mov
mov
repz
mov
fcomps
jmp
je
outsb
negb
add
sarb
lret
mov
xchg
sahf
popa
and
mov
cmc
cli
cmpsl
fwait
loopne
js
dec
mov
mov
sbb
loop
mov
mov
adc
stos
les
pop
cmp
xchg
fwait
jbe
inc
js
fistpll
sbb
clc
push
add
cmp
ret
xchg
add
mov
mov
enter
in
sbb
clc
inc
shlb
pusha
cmpsb
stos
pop
test
or
jecxz
lods
aad
mov
pop
mov
pusha
mov
lret
fwait
ret
stos
daa
adc
pop
push
cmc
mov
mov
insl
add
xchg
ds
mov
scas
rclb
outsb
jns
push
je
push
outsb
inc
add
shr
lock
sbb
ljmp
ds
inc
or
mov
dec
and
fdivrp
adc
pop
mov
aas
inc
lea
lds
pop
push
shrl
pop
addr16
xor
sbbb
jbe
jae
xor
cld
pop
cld
and
loope
daa
sub
insl
cmovl
add
sbb
call
mov
mov
insl
insl
inc
mov
push
xor
jg
popf
or
adc
das
inc
adc
aam
iret
hlt
pop
rcrl
inc
cmp
adc
push
push
mov
cmpsl
addl
aaa
sti
mov
rclb
and
sahf
push
push
subl
lods
fsubrl
lcall
sbb
add
test
jo
mov
cmp
mov
mov
inc
lret
lock
and
inc
or
jo
add
pop
std
in
ja
mov
dec
sub
out
dec
es
inc
bsf
xor
or
pop
jnp
mov
out
and
addr16
test
mov
cmpsb
add
xor
push
repnz
dec
add
shrb
dec
xchg
aaa
inc
imul
sub
lea
mov
or
or
xchg
xchg
cmp
push
mov
mov
aaa
fwait
jg
jecxz
test
jae
push
push
cmpsb
or
and
pop
mov
mov
les
fdivrs
push
jae
lock
jbe
jno
test
dec
adc
aas
aad
sub
sub
fadds
addr16
push
dec
aas
divb
cmp
push
or
push
test
dec
rorl
in
int3
loope
mov
ret
xchg
pop
loop
xor
xchg
jge
jbe
push
call
sbb
add
movsl
push
aam
mov
xlat
js
sub
scas
adc
addr16
negl
pop
mov
add
mov
jecxz
cmpb
mov
and
mov
mov
and
add
mov
pop
in
fcoms
xor
sub
push
fcompl
or
pop
into
mov
cli
addl
dec
stos
sbb
sub
pop
js
imul
test
or
pop
jl
sbb
shrb
mov
jmp
loop
daa
or
jg
jns
int
movsl
dec
orb
inc
paddb
cmc
insl
mov
ret
pop
insl
xchg
movsb
mov
lds
mov
push
sbb
pop
sbbb
lods
inc
pop
out
lret
divb
or
test
dec
ret
mov
test
cmpb
or
xchg
sbb
adc
icebp
pop
das
xor
and
mov
mov
mov
lret
mov
xchg
ret
les
sub
mov
push
push
pop
xchg
sar
nop
jge
cld
inc
inc
stc
xchg
lahf
push
cltd
adc
fadd
rcll
loopne
xor
mov
xchg
pop
mov
ja
rcrl
std
rorb
lds
inc
lcall
dec
mov
gs
pop
mov
cs
jno
in
hlt
and
adc
loope
movsb
inc
push
addr16
test
add
fcmovbe
mov
inc
aad
divb
jo
jne
cmp
gs
adc
test
push
clc
xor
xchg
lcall
mov
mov
ds
test
xchg
in
xchg
inc
sarb
sub
inc
push
and
dec
xchg
aas
add
jb
sbb
and
gs
decl
adc
sub
clc
aaa
mov
sub
ret
cld
jmp
jno
jbe
mov
mov
repz
or
adc
push
mov
bound
pop
scas
push
lods
pop
adc
out
ficompl
std
xchg
test
int3
jb
cld
ja
push
fdiv
sbb
mov
hlt
popa
std
or
outsb
addb
cmpsl
mov
cmpb
data16
jecxz
mov
sbb
push
lock
popf
js
cld
cwtl
mov
and
pop
je
daa
shlb
and
test
cld
pop
xchg
inc
daa
les
pop
push
mov
loope
dec
stos
mov
push
xchg
jnp
add
enter
mov
pusha
and
cmp
adc
ret
push
add
stc
fdiv
test
inc
leave
xchg
and
cltd
xor
dec
jge
lods
pop
xchg
shlb
and
pop
cli
pop
lea
jbe
hlt
rolb
sub
push
mov
insb
xor
imul
mov
mov
and
fiadds
aam
cmp
add
nop
xchg
scas
mov
loopne
xchg
mov
andb
stos
lods
rorl
shll
mov
pop
add
pop
jecxz
fisttps
or
aam
push
pop
das
dec
in
push
test
push
out
jl
jnp
sbb
rorb
cmpsl
aam
mov
outsl
in
cmp
add
xchg
adc
out
cmpsb
mov
mov
bswap
repnz
decb
hlt
popf
popa
das
lret
into
or
cwtl
jp
push
icebp
imul
and
jb
xchg
rolb
loope
rorl
sub
fs
add
or
mov
xor
pop
out
push
pop
add
test
std
mov
push
and
adc
in
jnp
dec
std
movsbl
cltd
bound
dec
or
jg
push
lds
cmc
or
xchg
cmp
notb
push
clc
mov
je
test
adc
cwtl
in
aaa
cs
adc
pop
lods
xchg
xchg
xchg
inc
decl
mov
sub
pushf
add
mov
lods
loopne
stos
xchg
sbb
fcoms
sub
pop
scas
adc
cmp
add
xor
cli
adc
cmc
or
xor
insb
xchg
popl
das
fdivs
cmp
add
mov
int
inc
pusha
lret
in
sub
xchg
push
or
and
xor
subb
sub
repnz
or
iret
in
cmp
sbb
fwait
stos
mov
and
pop
in
incl
loope
rol
dec
fsubr
jae
f2xm1
xor
mov
cmp
inc
push
jle
or
push
mov
arpl
push
or
scas
pop
aam
mov
push
loopne
jne
fucomp
cli
push
sahf
cld
push
repz
pop
mov
roll
mov
jo
rolb
mov
jg
sbb
mov
rorl
mov
jle
pop
loop
fdivrs
mov
lea
sub
mov
sbb
or
loope
xchg
adc
rcrl
pushf
in
adc
pusha
add
cmp
sbb
loopne
jle
push
cmp
mov
push
movsb
xlat
mov
fcoms
push
adc
fcmovbe
sub
mull
andl
push
push
inc
cmpsl
int
mov
mov
in
stos
and
test
xor
push
out
rclb
aam
lods
xor
dec
cli
dec
sub
gs
sub
shr
into
loop
hlt
shll
xor
ljmp
or
rol
dec
xchg
cmpsb
inc
jmp
sub
rorl
out
jge
in
pop
lds
stc
in
mov
pop
lcall
inc
arpl
mov
and
sub
sbb
clc
mov
imul
and
in
cmp
pop
icebp
movsl
call
arpl
xlat
out
arpl
add
push
imul
jmp
into
push
lea
mov
ljmp
or
idiv
leave
in
icebp
mov
pop
cld
into
popa
out
ficomps
ljmp
jp
mov
mov
dec
cmpsl
xchg
mov
and
jecxz
cmpsb
pop
xchg
mov
mov
sub
or
push
adc
imul
sti
andl
mov
sti
loop
xchg
aaa
ret
xlat
add
stos
inc
and
pop
icebp
cwtl
cmpsl
pop
push
sbb
sbb
cmp
sti
test
mov
or
add
dec
dec
mov
lods
mov
pop
cmp
jg
xchg
bnd
test
push
aam
cld
enter
mov
ret
sub
or
je
pop
leave
mov
stos
inc
cwtl
loopne
and
ja
icebp
decl
sub
or
pop
out
sbb
adc
loop
fucomi
test
xchg
repz
cmp
xor
out
jb
in
mov
out
cmpsb
push
or
js
repnz
push
pop
xchg
fisubrl
pop
jg
mov
sbb
xor
jp
lahf
shrl
daa
and
mov
cmp
test
decb
adc
add
mulb
ja
popa
xor
pop
lret
jl
inc
pop
in
push
xor
mov
add
pop
clc
cmpsl
loop
inc
xor
fnstcw
popa
fcmovnb
cli
jbe
mov
sti
das
mov
xor
bound
cmp
dec
fdivr
pop
pop
out
push
or
add
mov
sub
jo
mov
inc
test
mov
adc
mov
jecxz
push
add
sahf
cld
imul
mov
nopl
mov
outsb
pop
xor
push
jp
mov
xlat
push
pop
stos
insl
xchg
mov
es
lcall
paddusb
je
ret
loopne
lahf
jle
stc
mov
xchg
in
hlt
stos
dec
imul
mov
jne
popa
arpl
and
lret
repnz
ret
andb
dec
and
cld
xchg
inc
roll
rclb
push
out
mov
inc
sub
dec
loopne
push
hlt
cltd
lock
sub
fst
std
adc
xlat
lcall
sub
insl
jno
mov
xchg
cmp
cmpl
jg
adc
jae
inc
inc
sbb
push
sbbl
addb
or
mov
test
sbb
and
pop
sbb
cltd
mov
aad
mov
or
mov
test
in
dec
mov
push
cmc
sbb
outsl
movsb
add
mov
fisttpll
pop
cmp
mov
hlt
std
orb
or
mov
or
inc
out
js
sbb
aam
xor
popf
jmp
loop
mov
cmp
add
xor
fstl
stc
jne
pop
mov
outsb
aas
incb
pushl
icebp
mov
leave
bound
dec
push
dec
pop
rclb
daa
js
adc
test
and
aam
sub
inc
and
int
inc
cli
imul
mov
inc
mov
and
mov
mov
push
in
mov
mov
inc
cli
xchg
jl
jmp
lahf
sub
icebp
aam
adcl
lret
cmp
xlat
xor
cmc
sahf
test
mov
hlt
lea
mov
mov
push
insb
pop
daa
les
jmp
sbb
mov
jp
and
ss
stos
test
movsl
loopne
xchg
outsl
test
iret
ds
cmp
xchg
fs
fldl
dec
xor
jae
add
ret
cmp
idiv
jmp
sub
inc
cmpsb
pop
je
pop
add
shlb
adc
lds
mov
adc
cmc
pop
xchg
mov
jl
xor
dec
cwtl
and
mov
shlb
cs
lcall
scas
test
pop
aam
sub
std
fdivrp
pop
jbe
lock
adc
je
add
int
dec
sbb
imul
push
call
cmp
notb
mov
cs
jo
std
dec
loopne
inc
lods
cli
adc
cmpsl
loope
adc
insb
mov
sub
jae
add
sub
shll
xchg
xchg
mov
stos
fists
sbb
dec
stc
ret
jmp
testb
and
xchg
scas
movsl
push
inc
lea
and
push
cld
inc
mov
jle
pushf
ss
and
jno
jo
push
cmp
xchg
xchg
and
dec
jle
inc
pop
xchg
pop
outsl
dec
bound
jbe
xchg
sub
fildll
jne
push
pop
aas
cmp
enter
xor
jne
pop
and
clc
jno
pop
into
inc
cmpb
jo
xchg
mov
pop
popa
aam
popf
in
sbb
inc
mov
or
ret
dec
sub
xchg
je
xor
push
cmp
jg
pop
push
pop
popf
or
ret
or
mov
cmp
mov
push
aad
or
dec
and
nop
adc
inc
cmp
xor
sub
sbb
rorb
or
iret
add
cli
fsts
aaa
adc
lods
addr16
or
call
push
or
push
mov
aas
cmp
popa
dec
dec
aam
and
fisubrl
test
mov
sti
dec
pop
stos
push
sub
pop
mov
mov
push
cmp
push
js
and
add
mov
push
pop
movsl
push
mov
sbb
mov
stos
loopne
icebp
xor
jmp
pop
cmpsb
testl
dec
subl
lods
and
xchg
mov
arpl
stc
xchg
fnstsw
arpl
add
ja
add
xor
jl
std
sub
sub
dec
sbb
pop
jle
dec
fcmove
daa
inc
fucom
pop
push
les
enter
mov
mov
sarb
test
mov
inc
push
pushl
lcall
sbb
adc
pop
in
sbbl
loope
arpl
shlb
adc
inc
mov
call
fmul
imull
hlt
sbb
or
adcb
out
mov
dec
pop
rolb
dec
jb
push
movsb
scas
shrl
xor
cmpsb
dec
clc
pushl
sti
enter
fwait
popf
pop
cmpsb
push
loope
mov
lods
adc
and
lock
dec
ss
adc
xchg
adc
adcl
inc
outsl
add
loopne
mov
push
ds
adc
or
sti
std
dec
cvttps2pi
mov
or
push
mov
and
mov
push
std
lods
xor
jnp
shl
fistpll
adc
repnz
cmp
out
push
sbb
mov
fiaddl
adc
jae
pop
nop
mov
or
and
aam
je
in
xchg
pop
fsts
fistps
clc
ficoml
jb
insl
fstpt
push
js
jo
mov
mov
lfs
or
mov
mov
aad
cmp
pop
mov
fs
jo
mov
les
mov
mov
rorl
inc
push
xchg
aad
inc
ljmp
or
in
aam
lock
push
push
sarb
pop
ret
into
fldt
and
and
jg
movsl
cmp
mov
pop
scas
data16
lods
push
dec
or
mov
sbb
add
push
pop
push
and
pop
xor
pushw
and
mov
gs
repz
incl
or
pop
pop
mov
ljmp
sbb
add
xor
adcb
push
aad
outsl
sub
dec
xchg
push
pop
cld
inc
adc
lods
or
ret
mov
stc
mov
shlb
scas
clc
add
adc
jno
xor
pushf
lahf
jl
push
lcall
sub
pusha
jns
or
movsl
cmp
add
xchg
insb
aam
cmpsl
fsubr
xchg
ds
sbb
test
mov
jbe
mov
sub
lahf
fistpll
leave
jmp
pop
das
cmp
out
or
inc
loope
nop
cmpsl
pop
mov
push
xchg
mov
fsub
pop
fwait
jne
inc
fcoms
jecxz
das
movsl
add
cmp
or
mov
add
orb
xor
loop
repnz
jnp
jg
or
sbb
ds
xchg
and
pop
dec
lods
js
dec
clc
js
stos
ret
sbb
xchg
std
or
ret
or
xlat
jne
sub
cmp
dec
push
push
lahf
lahf
pop
add
fidivrl
and
imul
push
orl
mov
inc
mov
negl
pop
rclb
mov
cli
pop
aas
push
xchg
xor
push
mov
xorb
iret
or
jg
mov
rolb
fcmovnu
ljmp
inc
rorb
lea
pusha
adc
inc
sbb
cld
jle
cmc
mov
pop
out
sbb
push
xorl
adc
dec
insb
mov
out
scas
aas
xchg
cmp
je
push
lcall
push
lcall
call
call
mov
js
lret
add
cmp
and
add
sbb
inc
test
dec
add
iret
sub
mov
fiadds
push
dec
mov
les
ret
and
push
push
jbe
cld
notb
add
sub
testl
imul
push
add
inc
dec
ss
mov
mov
ret
mov
leave
fbstp
xchg
push
push
dec
inc
dec
cmp
mov
inc
dec
in
sub
notl
push
in
clc
push
dec
xor
mov
sub
and
fiaddl
sbb
clc
or
insl
nop
fimull
inc
cmp
dec
decl
jne
xchg
add
inc
int3
arpl
test
rclb
std
out
fwait
inc
mov
xchg
movl
add
or
jge
dec
adc
xchg
adcb
add
or
and
mov
fisttps
stc
dec
mov
pop
and
cmp
dec
add
inc
push
mov
inc
mov
mov
add
dec
cs
js
sbb
popa
dec
jb
xor
loopne
dec
sbb
pop
decl
ds
dec
push
xor
jae
dec
xor
add
push
dec
pop
sbb
xor
pop
push
out
cmpsl
push
inc
mov
ficoms
sub
add
enter
lea
push
sbb
nop
or
out
pop
ja
xorb
jo
dec
push
mov
dec
add
xchg
maxps
inc
sahf
cmp
pop
add
shr
push
fimull
jb
fcomp
inc
push
pop
mov
addr16
add
ud0
jae
dec
xor
mov
xor
xor
dec
ss
sbb
add
push
xor
test
add
sbb
notl
fwait
or
dec
cmp
push
jnp
in
loopne,pt
ss
add
fs
sub
pushf
sub
out
push
lock
fcmovb
inc
mov
fidivrs
cmp
aam
dec
cmp
jl
ss
adc
push
es
inc
scas
fsub
shlb
notl
or
insl
push
inc
out
xor
dec
adc
enter
push
and
aad
pop
test
adc
add
cmp
add
in
fidivs
sub
add
inc
je
add
ss
roll
outsl
push
ss
insb
inc
dec
jae
icebp
adcb
and
jb
lcall
imul
add
test
dec
clc
sub
add
cmp
jo
sub
out
dec
movsb
sub
fs
dec
push
cwtl
jns
cmpsb
daa
adc
mov
push
shlb
dec
adc
int
pop
cmpsb
sub
repz
cli
popa
push
push
xor
mov
outsl
sub
push
mov
inc
jbe
add
inc
dec
inc
movl
divps
cld
icebp
pop
push
push
xor
dec
jae
loopne
pop
xchg
adc
push
adc
add
int
into
cwtl
in
push
and
and
mov
push
cmp
cmp
pushf
fdivs
inc
fidivl
clc
jb
ja
addb
pop
mov
aam
shr
js
loope
inc
dec
sbb
dec
inc
dec
pop
push
jns
sti
sub
jle
inc
dec
push
push
push
dec
add
hlt
cmp
outsl
pop
xchg
ret
push
push
xor
dec
jae
test
rorb
lcall
out
movb
inc
loop
inc
push
outsb
divl
int3
push
jp
adc
pmullw
jg
push
push
cmp
out
jo
js
cmpl
push
pop
sub
mov
mov
fisubs
mov
inc
mov
fcoml
inc
jae
clc
insb
in
mov
js
dec
or
mov
ds
in
lock
xchg
and
lock
dec
add
inc
or
add
xor
xor
dec
mov
dec
inc
fstpt
and
dec
inc
testl
inc
xchg
inc
dec
and
in
pop
mov
in
aaa
jne
xor
imul
test
icebp
or
xor
ret
sub
inc
js
shll
cli
movsb
inc
cmp
inc
mov
jmp
jb
add
rolb
adc
dec
out
xchg
testb
push
dec
je
inc
mov
js
push
jp
and
shr
fucomip
ja
and
jno
push
pop
lea
push
push
jnp
fnstenv
gs
push
roll
dec
cmc
icebp
sub
push
inc
jbe
and
ds
insb
cmp
push
or
inc
decb
push
mov
popa
lock
xor
lcall
pop
push
push
push
arpl
mov
cld
mov
push
mov
aaa
adc
cmp
je
clc
adc
jp
xchg
js
jne
add
ret
pop
jns
xchg
popl
mov
outsb
push
xor
mov
mov
ja
or
push
add
bound
scas
lods
pop
sub
dec
ret
fucomi
out
dec
mov
push
sub
js
jno
xlat
cmc
or
out
imul
outsl
dec
jb
andl
sahf
inc
test
jne
add
dec
repz
push
in
mov
and
mov
loop
lret
js
iret
dec
sub
jmp
dec
pop
push
dec
push
sub
rcrl
mov
aam
dec
xor
lret
mov
inc
dec
add
ss
andb
xor
in
inc
add
aaa
rolb
jae
call
add
xor
jne
mov
xchg
pop
mov
xchg
mov
xchg
dec
sub
sahf
dec
jne
scas
pusha
loopne
mov
mov
int3
push
cmp
scas
arpl
outsl
shlb
cli
cmovge
cmp
outsl
loope
popf
push
or
push
sbb
inc
lock
dec
cmp
mull
data16
mov
adc
rclb
jp
aas
call
arpl
jae
dec
sbb
mov
out
inc
movsb
dec
inc
and
insb
pop
jmp
lcall
inc
dec
xor
push
push
mov
push
dec
add
fs
inc
xorl
dec
push
xor
enter
jo
rorb
dec
sub
add
sub
lock
inc
mov
adc
sarb
mov
sub
cmpsb
mov
inc
xchg
fidivrs
incb
jae
sub
ljmp
aad
faddl
jbe
dec
sbb
aad
fbld
insb
dec
inc
repnz
js
lock
ljmp
insl
ljmp
dec
push
cmp
shrb
outsb
fdivs
outsb
repnz
imul
xor
fxtract
push
inc
add
clc
mov
pop
sub
push
adc
push
dec
test
push
roll
fucomi
dec
push
inc
inc
int3
rcrb
roll
push
push
jge
xor
pop
lret
test
stc
push
push
mov
pop
dec
and
mov
fs
jne
test
insl
mov
pop
inc
pop
xchg
insb
gs
jb
inc
pop
mov
jbe
aaa
bound
movb
mov
mov
push
cmpsl
mov
repz
inc
std
mov
popf
mov
lret
sub
push
sbb
je
and
outsl
mov
xchg
inc
ljmp
ja
pop
inc
pop
jno
enter
sahf
dec
sti
fildll
xchg
sti
movb
push
jl
add
xor
stc
mov
pushf
push
loopne
inc
push
shlb
sub
repnz
insb
icebp
mov
adc
dec
rcrl
mov
xchg
push
pop
rol
sbb
lock
mov
imul
rolb
out
mov
sahf
inc
les
rclb
push
pop
push
jne
adc
push
xorb
aam
jnp
cld
ja
inc
ficoms
mov
push
imul
iret
and
arpl
mov
cltd
lcall
add
fidivrs
inc
sub
jne
movb
push
fistpll
dec
mov
mov
or
jbe
popa
jno
jne
mov
jp
nop
cld
rcrl
push
or
dec
xchg
movsb
dec
add
pushf
shll
popl
jg,pn
mov
mov
insl
gs
dec
adc
push
push
push
les
pop
test
je
out
inc
add
inc
popf
push
jl
add
icebp
add
jecxz
lock
cmpsb
cs
xor
call
add
movsb
jbe
jp
sbb
add
cmp
mov
dec
or
out
ljmp
aaa
bnd
add
inc
sbb
inc
dec
je
insl
push
mov
mov
je
mov
push
xlat
icebp
push
xor
pop
ret
push
jne
movsl
fcom
push
push
jbe
mov
rolb
in
jbe
sub
jp
pop
dec
jb
sbb
mov
inc
test
inc
add
xorb
cli
push
push
je
adc
add
popf
jb
xchg
outsl
mov
inc
imul
jp
xor
call
pop
push
lods
sub
mov
dec
jmp
jge
inc
and
dec
lea
adc
ret
push
ss
add
mov
cmp
gs
ss
add
dec
outsb
es
dec
xor
les
inc
push
pop
lock
dec
xlat
inc
push
dec
or
dec
mov
jnp
shrb
ja
push
push
ja
push
sbb
push
xor
fisubs
xor
inc
add
inc
call
pop
cmpsl
mov
jo
icebp
mov
xchg
mov
jbe
jnp
cld
push
sbb
cmp
push
pop
and
fdivs
and
and
roll
sub
mov
jne
dec
dec
or
ret
push
iret
mov
push
hlt
push
push
movsb
sub
es
jecxz
outsl
jl
ret
ror
imul
sbb
push
repz
push
loopne
lea
mov
call
xor
push
pushf
cmp
mov
push
xor
dec
insb
popa
mov
dec
shll
lea
jg
dec
popa
imul
popa
aas
ret
les
push
movsl
or
cmc
or
pop
xchg
bound
or
jnp
and
pushf
lock
push
xor
push
add
push
aaa
push
dec
push
in
or
xchg
push
push
lock
push
popa
repz
dec
scas
inc
cmp
mov
int3
ret
mov
inc
cmpsb
insl
lods
scas
push
inc
arpl
sbb
or
jle
aad
gs
lds
or
and
push
bound
pushf
insb
je
xchg
adc
xor
icebp
or
dec
bound
dec
inc
outsb
pop
lock
dec
movb
ret
bound
push
addr16
xor
mov
movsl
fadds
sahf
mov
addr16
pop
inc
xor
ror
xor
inc
pop
push
in
lds
cmp
inc
gs
add
lock
jns
loopne
inc
lds
inc
add
lds
pop
jns
fisubrl
xor
test
push
js
movl
mov
mov
shll
cs
gs
add
dec
sbb
dec
jg
sub
jbe
jo
push
xor
jno
test
dec
push
inc
dec
jns
jecxz
pop
and
aad
je
data16
push
test
movsb
clc
xor
mov
jp
cmc
pop
pusha
fs
arpl
test
push
pop
dec
jmp
inc
into
push
mov
and
ljmp
sub
fs
cmp
dec
rorb
sbb
rorl
stos
jbe
insb
insb
dec
aaa
sub
push
adc
jle
inc
push
jae
lcall
je
pop
xor
mov
lea
and
dec
pushl
pop
push
push
xor
ss
cli
pop
and
cld
decl
pop
adc
insb
inc
push
bound
mov
dec
dec
inc
fcmovu
jge
or
lock
dec
inc
dec
rclb
inc
orb
jne
mov
pop
pop
inc
mov
insl
inc
ss
call
mov
out
push
jmp
clc
repnz
imul
imul
arpl
dec
push
rol
and
ja
bound
push
xor
push
lea
sar
xchg
xor
ror
es
push
mov
movsb
out
imul
cld
insb
sub
ret
mov
sbb
xor
rol
pusha
xchg
cmp
cmp
sub
test
push
pop
js
aaa
dec
inc
mov
xchg
jl
ret
sub
scas
cmp
sahf
insb
repnz
add
mov
frstor
and
gs
fs
pop
push
test
iret
and
sub
sbb
imul
pop
add
fidivrl
push
inc
xor
inc
push
stos
shr
xor
and
sahf
push
jae
ficoml
out
jno
shrb
push
mov
add
or
cmp
dec
fcmovnb
and
xchg
jb
jo
pop
sub
lock
or
sbb
cwtl
inc
pop
inc
push
addr16
cli
loop
sub
out
push
fs
ds
insb
cmp
mov
jo
aad
inc
jbe
inc
stos
xlat
icebp
outsb
xchg
sbb
sbb
aaa
cmp
clc
dec
xor
lcall
out
push
bound
decl
or
call
xor
aad
out
sbb
mov
pop
aas
jb
sbb
pop
je
sub
inc
lcall
cmp
inc
pop
ret
fs
es
dec
cli
mov
ds
inc
clc
sti
mov
dec
cmpsl
shrl
mov
ret
inc
push
insl
push
push
roll
jae
pop
rorl
dec
jae
mov
push
addr16
mov
jecxz
jnp
and
clc
jmp
inc
scas
jne
insl
xchg
cmpb
nop
and
imul
jecxz
outsl
dec
insb
lods
fnstenv
pop
push
int
pop
dec
dec
je
mov
jmp
jne
dec
fnstsw
mov
clc
mov
movsb
dec
xchg
inc
push
iret
jns
popf
jo
dec
pop
jbe
outsb
or
mov
mov
data16
or
dec
scas
mov
outsl
or
sub
inc
call
movsl
sbb
mov
jg
dec
dec
outsb
ja
sub
mov
ljmp
inc
and
or
dec
jne
xor
movl
js
mov
sub
inc
cmp
push
push
sbb
fs
and
dec
fwait
sbb
clc
mov
mov
push
popa
dec
sbb
mov
mov
dec
inc
pop
mov
pop
push
push
push
lock
mov
add
clc
mov
sbb
cwtl
loop
pop
push
cld
cmpsb
test
das
mov
call
inc
cmpl
sub
stc
or
cmp
inc
bound
adc
shr
push
push
jle
ret
ja
and
loopne
mov
outsb
iret
mov
dec
push
mov
inc
inc
je
mov
dec
ret
or
ds
ljmp
xor
dec
jb
mov
sub
test
cmp
leave
sub
roll
mov
dec
sahf
arpl
jmp
test
inc
lods
ds
jo
aaa
mov
or
xchg
add
mov
movsb
inc
push
or
clc
lock
mov
repnz
addb
test
cmp
cwtl
das
cltd
cs
push
lock
pop
push
ss
pop
enter
lock
push
ds
jno
xor
enter
int
xorb
sub
fdivs
insb
push
paddb
ss
mov
fmul
inc
push
test
pop
ret
push
js
out
dec
pop
cmp
dec
jo
imul
or
xlat
add
mov
pop
repz
pop
push
shlb
dec
les
xchg
push
mov
dec
jo
cli
cli
fdivs
rcll
jle
xor
pop
das
hlt
or
mov
xor
push
clc
sbb
int
shlb
inc
add
aad
dec
into
sbb
test
mov
mov
jns
ja
sbb
push
lods
xchg
lods
mov
lret
mov
iret
dec
cmp
ja
rorl
jno
push
dec
call
cmp
stc
sub
cmp
cmp
dec
ljmp
icebp
test
das
shrl
and
pop
push
pop
add
lock
cs
lods
aam
xor
mov
ret
inc
mov
add
insb
jae
mov
stc
xlat
mov
shlb
lods
pop
test
inc
dec
sub
sbb
inc
push
movsl
test
jmp
inc
clc
adc
cmp
jae
ret
sbb
fs
inc
inc
inc
and
outsl
lods
loopne
xor
in
arpl
rcrl
popa
dec
imul
or
xor
mov
mov
dec
or
dec
ljmp
xor
fdivs
cmp
push
inc
mov
dec
inc
jo
xor
mov
out
xor
dec
jmp
jge
imul
jle
and
dec
dec
lret
andl
push
jbe
loopne
data16
add
add
inc
xchg
sarb
addb
xchg
shlb
push
mov
outsl
fs
arpl
add
add
dec
ljmp
jns
adc
inc
dec
dec
popa
inc
sub
push
dec
jbe
sbb
jb
xchg
sbb
mov
push
xor
inc
imul
loopne
mov
jp
roll
lock
and
std
int
test
icebp
insb
dec
cmp
rolb
mov
mov
push
outsl
jl
inc
outsl
ja
add
jne
push
fs
mov
fs
repnz
pop
das
push
pop
push
je
xchg
mov
fimuls
xor
arpl
inc
inc
dec
mov
push
dec
ja
repnz
daa
sub
push
out
push
test
inc
imul
pop
faddl
ja
push
ja
ret
insl
jbe
rolb
push
dec
xor
or
cltd
mov
jb,pt
jno
stos
es
fadds
mov
bound
adc
fisttpl
pop
mov
in
js
arpl
ds
jno
out
js
add
push
inc
add
xchg
inc
test
pop
sbb
outsl
adc
lock
push
jns
popa
xsaves
mov
imul
addr16
insb
and
leave
cmp
push
movsb
dec
push
pop
push
arpl
roll
ss
jmp
push
dec
jno
jo
je
inc
xor
lret
adc
xchg
cmp
fstpt
test
jo
imul
lcall
enter
push
repz
ret
aam
mov
adc
or
pop
cltd
add
mov
dec
dec
dec
push
and
sbb
push
loopne
cmp
mov
inc
dec
adc
test
adc
ret
popa
stc
and
jne
pop
movb
mov
cwtl
repz
inc
movsb
in
inc
dec
xor
rclb
ds
dec
push
dec
inc
mov
icebp
mov
cli
sub
in
out
jb
jne
jle
lea
jb
clc
lods
je
dec
imul
mov
data16
loop
xchg
and
dec
cwtl
sahf
adc
out
in
add
imul
mov
lock
loop
add
push
inc
dec
mov
mov
outsb
ss
js
dec
inc
mov
pusha
jno
insl
bound
loope
jae
jae
ss
mov
aaa
testb
rcl
hlt
outsb
push
push
leave
adc
adcl
rol
arpl
add
ljmp
add
or
push
out
mov
push
inc
xor
test
xor
jo
push
loopne
add
loopne
stc
sub
inc
push
adc
mov
jp
sbb
push
cmp
repz
jo
fisubrl
mov
cmp
jp
xor
cmp
xor
push
pushf
test
outsl
pop
je
cmp
neg
add
jno
or
pop
or
ret
subb
bound
cmpsb
pop
push
je
xorb
mov
aaa
push
in
jecxz
jp
je
aam
push
inc
cmp
jg
xor
push
sbb
repnz
cmp
dec
push
or
mov
mov
outsl
test
sbb
insl
push
into
outsl
inc
scas
push
cmp
shlb
adc
cmpsl
push
pop
test
xor
stos
add
cltd
sub
test
xor
mov
fmuls
push
inc
jl
cmpsb
es
inc
and
fcmove
lods
ds
xchg
in
push
lods
jmp
test
stos
sbb
sbb
inc
sbb
push
ret
je
or
jo
push
sub
loopne
push
sbb
mov
and
or
popf
ss
push
clc
mov
add
mov
cli
dec
and
jge
fmulp
inc
dec
inc
sub
push
arpl
jbe
and
imul
loop
jg
mov
fsubr
outsb
je
push
inc
inc
aas
test
jp
ss
and
push
and
aaa
andl
cmp
dec
dec
push
aam
jmp
push
dec
inc
push
inc
sbb
push
xor
ror
xchg
mov
push
int3
jecxz
xor
mov
xchg
jl
dec
js
push
mov
enter
bound
push
add
push
out
inc
shlb
pop
jnp
imul
loop
mov
mov
in
fucomip
dec
push
jb
insb
push
mov
outsb
xor
sub
loope
mov
dec
bound
imul
jae
ss
bound
call
dec
inc
cmp
dec
add
inc
imul
dec
inc
inc
sbb
das
shll
mov
js
inc
iret
xor
dec
dec
lods
adcl
movsb
xchg
cmp
xor
popa
dec
pop
mov
cmp
push
ja
fs
xor
loop
mov
adcb
push
test
fs
push
xchg
sahf
pop
pop
inc
fs
jno
cmp
mov
loope
sub
mov
push
outsb
dec
push
mov
movsb
icebp
jg
mov
clc
push
push
add
dec
jns
aad
inc
jle
inc
mov
sbb
rcrl
fnsave
aad
rcrl
jo
bnd
test
sar
pop
cmp
cmp
sub
inc
push
js
jb
push
jbe
pop
and
inc
inc
imul
push
std
rorb
xor
hlt
jo
jno
xor
xchg
jbe
scas
test
out
jo
shl
ret
pop
inc
inc
push
mov
test
dec
lcall
dec
sbbb
inc
mov
enter
pushf
dec
sbb
in
pop
pop
mov
cmp
dec
les
inc
rcrb
aad
jae
test
push
adc
xor
ficompl
jle
int3
push
arpl
mov
or
je
inc
push
int3
dec
adc
ficoml
xchg
pop
mov
pop
jmp
fbld
add
or
fcmovnb
jne
push
andb
cwtl
push
incl
xor
dec
decl
cmp
adc
gs
lods
inc
push
movsb
push
add
pop
aad
mov
push
aam
inc
mov
mov
adc
adc
mov
bound
and
dec
push
xor
nop
inc
mov
ljmp
ljmp
pop
push
clc
cmp
mov
inc
mov
lcall
test
inc
dec
into
bound
arpl
je
stos
jno
mov
push
pushl
push
aas
mov
sarb
clc
call
mov
aaa
insl
jbe
insl
lods
fldt
dec
dec
inc
into
and
cmp
cmp
push
inc
lea
and
loopne
ss
dec
imul
jne
cmp
roll
add
fstl
popa
push
mov
push
pop
push
sbb
jne
push
cmp
mov
into
mov
push
into
fdivs
rcr
mov
jecxz
xchg
jb
dec
outsl
sub
pop
dec
mov
cmp
sub
aaa
jo
pop
jg
push
fsubrs
imul
je
jecxz
pop
xor
clc
cmpsl
and
add
mov
rcrl
fsubs
push
xor
xor
addr16
sub
inc
xchg
andl
dec
cli
aad
jo
movb
call
orl
jmp
stos
sbb
leave
dec
arpl
add
add
imul
or
add
inc
add
or
sub
rclb
pop
adc
sub
and
xlat
add
pop
push
iret
add
int3
adc
cmpsl
add
mov
cmp
pop
mov
adc
and
flds
mov
gs
dec
add
push
out
jbe
mov
push
arpl
add
dec
std
pop
fstl
ss
push
gs
push
jp
or
arpl
adc
cmp
dec
rcrl
adc
cs
add
push
addb
fisubl
or
dec
sub
or
inc
movsb
mov
add
lahf
or
fs
pusha
sbb
add
mov
imul
aas
gs
add
add
sub
ja
and
xchg
loop
test
insb
cmp
dec
test
push
add
push
sbb
mov
xchg
sub
faddl
pop
add
add
pop
dec
mov
sub
rolb
stc
in
pop
imul
icebp
les
sub
push
pop
outsl
adc
mov
dec
xchg
insl
push
bound
sbb
out
mov
bound
cmova
xchg
popf
jo
dec
in
adc
inc
jg
jo
pop
add
or
mov
push
iret
adc
das
enter
add
xor
out
jg
sbb
je
mov
gs
push
push
mov
aaa
mov
push
imul
jmp
movl
lock
sahf
fisubl
dec
movb
roll
dec
pop
inc
lret
hlt
cmpsl
nop
icebp
and
cmpsb
mov
adc
mov
or
xor
mov
inc
loope
pop
rcrl
mov
add
dec
jo
test
bnd
hlt
add
out
xlat
mov
mov
cmpl
int
adc
jnp
rclb
adc
mov
jnp
push
add
enter
nop
push
add
paddb
scas
sub
cli
out
lahf
mov
sub
jg
decl
es
imul
add
push
push
test
inc
push
cmovno
roll
jg
jg
adc
fdivs
add
stos
stos
pop
add
lods
jg
add
out
incl
inc
sub
addb
mov
xor
repz
jg
test
out
and
insl
xchg
out
pop
ret
inc
outsl
add
jg
out
call
popa
imul
mov
dec
mov
or
cmp
or
or
pushl
dec
mov
or
out
insl
mov
or
or
dec
fmull
hlt
or
lcall
push
or
and
cmp
mov
push
cmpsl
mov
xchg
mov
jmp
mov
andb
jbe
add
lea
mov
shll
pop
repnz
jg
jg
into
push
mov
sbb
and
popa
aas
push
ret
mov
adc
xchg
inc
push
nop
mov
adc
iret
cli
push
sar
fwait
aaa
call
push
jp
dec
push
xchg
rcl
mov
jnp
cmp
sar
and
int
mov
and
cmp
xchg
sar
inc
ret
aam
ljmp
jg
xor
adc
xchg
aad
loopne
mov
jg
cmp
jmp
dec
mov
adc
push
xchg
xlat
ljmp
push
xchg
mov
decl
push
sbb
fcomps
inc
add
pop
pop
cltd
inc
das
ja
xchg
add
in
add
pop
lcall
pop
cltd
dec
add
sbb
fildl
mov
jmp
rcll
daa
lea
inc
pop
pushf
lds
pop
test
lcall
movb
popf
fstpl
pop
sahf
fisubrs
jo
pop
mov
pop
stc
lcall
fistps
pusha
call
mov
loopne
in
loopne
or
outsl
popa
mov
push
lret
mov
dec
push
outsl
and
bound
mov
jecxz
arpl
enter
in
sub
jb
and
and
and
cmc
push
lcall
and
stos
scas
iret
outsb
stos
cmpsb
out
xor
push
jbe
cmpsw
aaa
jmp
psrlq
daa
sub
call
sub
daa
sub
push
outsl
or
xchg
push
push
jmp
testl
stos
ljmp
stos
ljmp
xchg
stos
jmp
jae
ljmp
insb
lods
shl
jno
in
adc
in
sub
aam
mov
fistpll
lods
in
push
mov
mov
push
dec
clc
outsl
cld
fistpll
ss
scas
out
sbb
mov
clc
pop
cltd
or
lcall
je
pushl
mov
xor
sub
mov
xor
or
aas
outsl
jb
fildl
fistl
jae
std
jae
mov
xor
cld
jg
out
je
pop
sub
xor
negb
es
pop
inc
add
aas
mov
xor
xor
ss
dec
jmp
ljmp
aaa
ja
testl
divl
popa
idivl
js
mov
scas
sar
stc
fwait
aaa
cmp
loope
mov
mov
jp
jge
jp
out
mov
cli
cmp
sub
mov
lret
jmp
es
icebp
sti
cmp
jl
mov
mov
cmc
mov
cmp
addr16
or
jle
out
andb
mov
sub
test
push
subb
cli
inc
imul
aaa
add
pusha
mov
inc
imul
inc
adc
push
cmpsb
adc
out
scas
fwait
subl
xor
in
jo
sub
xchg
fucomp
pop
aas
sub
lods
mov
push
push
outsb
mov
mov
xchg
ja
cmpsb
and
je
push
pusha
das
pop
mov
push
xchg
or
cs
push
sub
mov
adc
inc
xchg
lock
dec
jno
and
mov
popa
sbb
mov
jae
int3
sub
mov
and
cld
or
dec
mov
pop
jbe
mov
push
data16
lcall
stc
sbb
xor
jne
xor
dec
push
adc
xor
cltd
shlb
push
mov
dec
mov
pop
ljmp
cmp
sub
notl
push
loopne
ret
dec
into
nop
mov
xor
popf
lea
push
cmp
jmp
sar
xlat
mov
out
jp
cld
cmp
sbb
mov
mov
repnz
pop
mov
push
jns
std
cld
push
dec
xlat
mov
in
sti
mov
aas
or
xor
mov
push
push
cmc
mov
imul
pop
jmp
ja
cmp
sbb
pop
and
mov
and
cltd
shl
cltd
fstps
in
ret
cltd
and
mov
and
pop
test
sub
pop
add
cli
jne
test
cmp
cmp
scas
test
cli
iret
inc
pop
pop
test
sbb
lds
repz
jg
push
popa
shll
jbe
and
dec
adc
mov
icebp
inc
sbb
push
mov
shrl
std
stos
push
ret
xor
mov
or
bound
sti
add
and
and
cmc
fcmovnu
lret
pop
push
mov
and
jecxz
pop
ss
out
or
cmpsl
and
xor
mov
push
and
dec
adc
inc
pop
movsl
lds
mov
nop
leave
gs
xor
cmpsl
sub
adc
test
testb
je
xchg
call
or
lret
ljmp
sarb
dec
rcll
stc
lods
jmp
imul
repz
sti
sbb
xlat
xchg
xor
jmp
icebp
inc
hlt
sub
and
repz
cld
jg
mov
xlat
mov
pop
jl
fsubs
scas
add
popf
les
adc
cltd
test
cld
sbb
icebp
xor
rcr
andl
push
mov
mov
add
sbb
out
or
push
cmpb
dec
mov
pop
cs
cs
sbb
mov
lods
cld
lds
add
xchg
jl
cmp
dec
leave
outsb
int
fisubrs
and
ss
push
or
ja
pop
hlt
sti
mov
sarl
sbb
fidivl
adc
xchg
mov
js
clc
and
sar
mov
lcall
inc
cmp
stc
les
push
xchg
in
xlat
jnp
push
in
xchg
pop
xchg
adc
cmp
lret
scas
mov
sub
mov
push
ds
cmp
in
popf
mov
std
cmp
test
scas
fs
loope
pop
pop
loop
call
xor
insl
pop
inc
ja
push
add
int
sub
scas
sub
push
fsubl
int
stos
pop
mov
mov
push
jmp
leave
pop
jmp
mov
sub
ja
cmp
fstps
sub
into
cmpsl
sub
inc
add
and
xchg
cld
ja
push
cld
push
outsl
in
xor
push
lods
adc
loope
call
es
push
push
call
int
iret
lret
push
mov
pop
pop
jg
jmp
adc
sbb
mov
xor
out
iret
mov
or
sti
hlt
push
mov
pop
xor
decl
dec
pop
mov
and
cmc
lret
hlt
xchg
lods
lret
mov
cs
jmp
inc
push
or
jne
push
dec
sub
repz
fnsave
xor
or
test
pop
push
pop
mov
mov
mov
pop
mov
int
push
nop
push
mov
jnp
sbb
push
xor
mov
adc
cmc
cld
scas
scas
cld
mov
xchg
jp
dec
addr16
sub
jp
sub
call
lock
std
or
pop
pop
and
cmp
add
push
fists
stos
jle
xor
push
or
jmp
je
xchg
rolb
push
push
jns
xchg
jns
add
sub
sbb
mov
stos
jmp
mov
push
push
mov
orl
iret
ja
mov
inc
ret
sub
arpl
addr16
ja
jne
inc
pop
sbb
push
sub
adc
pop
test
pop
push
lock
mov
sbb
sti
movsl
and
xchg
mov
js
pop
adc
pusha
push
and
xchg
pop
mov
into
ja
jmp
and
leave
lcall
gs
jl
mov
pop
dec
and
ficompl
pop
jnp
mov
jo
mov
xor
loop
out
sti
lods
dec
mov
push
and
inc
pop
jecxz
cs
lea
jo
sbb
dec
adc
sub
inc
pushl
or
jmp
and
out
stc
xlat
stc
fsubs
iret
into
movsl
xor
pop
idiv
fldpi
rolb
sub
cmp
test
iret
fnstsw
push
push
sub
stos
add
roll
cltd
xor
push
clc
adc
gs
jg
and
push
xchg
jbe
insb
lods
jmp
push
mov
push
mov
adc
push
sahf
mov
jmp
jge
repz
cs
stc
out
notb
mov
lcall
outsl
scas
fsub
mov
fmull
push
mov
mov
lcall
sbb
ss
pop
add
cs
sbb
in
cs
ds
sbb
mov
push
sub
jg
stc
mov
es
mov
sbb
in
mov
movsl
jl
cld
push
mov
std
pop
mov
sub
hlt
mov
dec
ficomps
pop
cli
in
push
push
pop
mov
ja
pop
dec
aaa
out
cli
xchg
ja
and
sar
cmp
sbbl
or
pop
push
jns
mov
mov
ret
push
mov
jb
inc
dec
and
std
jne
test
push
jl
in
cmpl
jnp
cmp
inc
inc
sbb
les
lret
test
cld
and
rorb
icebp
ret
cld
mov
and
ss
es
sub
lret
repz
fisubrs
decl
or
mov
mov
sbb
jge
stos
lods
add
jl
jmp
cwtl
int3
sbb
xchg
imul
inc
sub
loopne
outsb
repnz
stos
hlt
ret
mov
insl
rolb
inc
sub
mov
inc
inc
add
comiss
cmc
lock
xor
xchg
imulb
into
and
arpl
pushw
and
sbb
pop
xor
ljmp
mov
xor
xor
neg
cld
sbb
sub
mov
leave
xor
stos
lret
and
fldcw
xchg
fsts
sub
incb
cmc
sbb
int3
hlt
scas
xchg
dec
into
push
jbe
and
or
or
mov
push
lcall
dec
mov
shrl
jp
push
pop
dec
int
jmp
push
adc
sub
aad
stc
frstor
jmp
repz
addr16
sarl
xchg
jl
inc
xchg
lahf
jg
and
jl
pop
push
cmp
fwait
ja
jl
xor
outsl
cmp
in
aam
in
int
xor
push
push
xchg
cmpsb
jle
adc
dec
test
and
mov
mov
push
push
pop
shlb
roll
push
jecxz
in
ret
sbb
sbb
xchg
outsb
mov
push
ffree
aaa
mov
bound
sbb
out
stc
scas
push
adc
les
sbb
lahf
mov
mov
pusha
pop
sub
test
repnz
fwait
ja
outsb
sahf
ficomps
mov
enter
out
pop
sbb
mov
pop
pop
mov
fistps
or
jg
out
cmpsl
mov
or
or
ljmp
mov
xlat
addr16
sbbb
jb
out
cmc
mov
out
fs
movsb
and
sbb
and
lock
mov
cltd
into
cwtl
mov
arpl
es
mov
repnz
fldt
testl
jmp
fstpt
and
call
jmp
jae
sbb
rcrl
sub
mov
xlat
aas
fisttps
jp
push
cmp
out
sub
sub
xchg
adc
push
and
pop
mov
in
out
push
add
in
in
js
lret
push
sbb
jg
fiadds
xor
outsl
fmul
xchg
scas
pop
stc
int
sbb
sahf
mov
mov
jno
dec
inc
xchg
neg
add
out
fiaddl
push
push
inc
sbb
jmp
aaa
jo
sbb
stos
dec
sub
pop
jbe
clc
sbb
sbb
movsl
es
jns
sub
cs
xor
and
adc
or
xor
xchg
js
mov
test
pop
ret
mov
loopne
xchg
cmc
scas
popa
loope
mov
mov
aaa
ja
sub
loope
test
jge
sahf
push
and
data16
in
scas
ret
sub
stos
pop
and
fwait
outsl
push
mov
cmpb
aaa
int
pop
mov
xchg
push
cmp
mov
push
cmpsb
in
xor
addr16
mov
add
out
lahf
mov
and
mov
mov
pop
or
jl
subl
sbb
jmp
mov
inc
xchg
inc
xlat
push
jmp
cli
xchg
push
nop
mov
lods
movsl
pop
adcb
sub
rorl
lock
scas
sbb
jg
scas
les
outsl
sbb
inc
test
mov
icebp
xlat
pop
cli
jo
inc
inc
scas
jo
sbb
outsl
rcll
mov
insb
dec
mov
jg
mov
mov
fwait
ja
hlt
repnz
leave
repnz
mov
pop
jmp
cmpsl
lds
into
fdivl
lahf
hlt
jae
int3
lahf
mov
ret
push
jge
jbe
sbb
jbe
scas
cmp
cmp
adc
subl
sub
aaa
ja
cld
mov
movzwl
xor
scas
outsl
cs
push
add
and
sub
mov
jp
add
rcll
mov
fisttpll
jns
push
or
sub
jl
pop
sbb
push
adcb
or
mov
sbb
cld
push
and
fs
jmp
xchg
sarb
sub
xchg
rcrb
xchg
push
scas
adc
fadds
test
inc
mov
jmp
scas
lcall
lahf
lcall
mov
fyl2xp1
cltd
ja
mov
add
rorl
dec
cs
xchg
sahf
ficoms
mov
jns
push
dec
sbb
push
or
sub
jg
cmp
push
push
out
enter
enter
clc
scas
fisttps
sub
adc
mov
fdivrp
mov
stc
pop
divl
sub
das
cs
pop
and
outsb
mov
out
popf
aaa
jecxz
push
xor
movsb
nop
push
iret
cs
dec
mov
sti
test
or
jmp
test
out
ljmp
leave
test
mov
sbb
dec
push
ss
fsubrp
out
and
mov
mov
rclb
test
push
jp
inc
loop
scas
outsl
outsl
stos
shll
push
and
and
xchg
push
pop
mov
sub
aad
cltd
push
ja
std
outsb
cwtl
xor
jmp
jge
sub
push
je
or
out
in
sub
lods
lock
xlat
dec
lcall
xchg
dec
fldt
jge
stc
mov
push
sub
mov
jbe
jle
in
cmpsb
cmp
fwait
ja
push
stc
and
pop
sbb
jae
mov
pop
jmp
outsl
pop
cmc
fsubrl
movsb
pop
sbb
mov
xchg
sub
jno
scas
jg
xchg
jle
mov
cmpsb
pop
pop
adc
mov
pusha
movsl
jg
stc
insl
pop
cmp
mov
lock
and
fcomip
shlb
cmpsb
push
jns
adc
scas
bound
or
scas
sub
cli
and
es
mov
movsb
xchg
fs
cs
movsl
divb
test
inc
ss
mov
sub
mov
outsl
cs
jbe
push
xor
daa
push
jecxz
sub
imul
out
cmc
cs
jmp
push
mov
in
out
jne
or
add
adcb
cld
mov
lret
sub
push
sub
sti
mov
lahf
pop
out
push
xchg
clc
sbb
lods
mov
data16
std
cs
rolb
out
jp
fmull
scas
lea
popf
outsl
lods
das
jmp
cld
outsb
out
repnz
push
pop
xor
mov
jae
int3
pop
ja
xor
test
mov
icebp
lock
jae
mov
pop
fwait
rcrl
sbb
cmp
stos
call
push
hlt
fcoml
mov
mov
mov
dec
aaa
sarl
mov
cmp
push
sub
fisttpl
aas
clc
test
stos
rcl
stc
jl
out
movsl
push
bound
adc
adc
ljmp
push
fucomp
or
rcll
push
loopne
adc
sub
mov
xlat
pop
insb
sub
mov
daa
test
and
push
xchg
aam
iret
movsb
mov
mov
adc
aas
std
repz
ljmp
jl
shlb
and
jmp
ja
shlb
push
mov
shlb
pop
cwtl
subb
pop
cwtl
flds
mov
mov
pop
cltd
fmuls
pop
scas
or
push
sbb
aaa
ljmp
push
sbb
lods
fldpi
aaa
scas
das
add
adc
std
cld
xchg
dec
pop
inc
xchg
enter
icebp
insl
sahf
sub
jge
xlat
fldt
pop
push
pop
cwtl
ficomps
dec
aam
cmp
mov
jbe
and
jb
push
mov
inc
popa
mov
adc
add
mov
call
adc
arpl
jp
bound
and
dec
outsb
xlat
push
movsb
xor
hlt
mov
sbb
rorl
je
into
xchg
popa
cmp
out
mov
insl
xchg
push
adc
dec
or
ss
gs
std
jns
push
cmpsl
iret
sti
outsl
test
imul
xor
sbb
test
push
jmp
stos
sub
xchg
mov
sbb
push
jae
sub
jo
push
jbe
fsubl
mov
push
push
push
and
pop
outsl
mov
jmp
es
ret
dec
pop
out
and
mov
scas
and
lea
shr
scas
je
mov
inc
fs
orb
pop
int3
cmp
ja
out
push
sub
in
fadds
xchg
and
jle
pop
stos
mov
pop
and
icebp
xor
pushf
pop
push
xchg
mov
ja
lcall
jmp
sbb
mov
pop
sahf
add
das
jae
repz
into
mov
je
hlt
sbb
mov
mov
push
pop
mov
pop
clc
pop
mov
and
mov
loopne
test
push
mov
sti
pusha
imul
sub
jmp
pop
jp
loope
mov
sbb
iret
loope
cli
test
xor
icebp
cli
push
cli
mov
add
sti
cmp
mov
movsb
out
or
fisubs
in
mov
out
sbb
repnz
pop
jp
aaa
mov
mov
cmc
insl
sarl
mov
mov
call
scas
mov
and
aas
imul
or
ljmp
cmp
pop
sub
out
pop
add
sub
adc
add
mov
aas
ja
jg
add
add
test
lods
int3
outsl
xchg
or
inc
cmp
into
aas
add
scas
leave
xor
xchg
mov
adc
cld
pop
out
aad
nop
mov
jbe
jno
incl
jp
and
jno
or
dec
mov
inc
pop
aaa
jg
xor
out
cmpsl
sbb
mov
insl
mov
scas
mov
push
xor
lock
xorb
sub
dec
push
xor
mov
outsl
push
pusha
ret
or
test
mov
loope
mov
lahf
int
jge
adc
into
aam
repnz
jb
ja
clc
loop
nop
js
pop
push
and
scas
iret
ss
push
add
push
nop
mov
jp
push
push
nop
cmp
add
jge
jp
sar
pop
subl
lock
scas
aas
sbb
bound
xor
push
lret
adc
mov
and
adc
add
inc
fnstsw
test
fistl
mov
rol
push
xchg
mov
cmpl
call
jg
out
ret
scas
push
xor
xchg
xlat
push
or
cli
or
inc
movsl
jb
fadds
movsb
pop
shll
pop
mov
imul
pop
mov
mov
jb
cs
cmp
popa
rorl
movsl
mov
pop
mov
popf
mov
in
sbbb
or
pushf
jmp
call
fcomps
add
xchg
icebp
sahf
fbstp
or
pop
lahf
fisubrs
cs
mov
icebp
sub
dec
out
sub
and
fwait
push
mov
and
jnp
or
flds
sub
mov
rcr
dec
insl
and
dec
lock
add
cmc
outsl
ficoml
push
movsl
int
cmp
push
mov
aaa
inc
xchg
jg
pop
mov
iret
cmpsb
push
movsl
in
repnz
add
les
ret
push
push
push
out
mov
xor
sub
in
call
mov
xchg
inc
sbb
jle
and
xchg
inc
push
sub
sbb
sub
xor
mov
loop
push
cmp
xor
rcrl
subl
pop
xchg
sub
insb
add
scas
jge
lret
sahf
in
sub
lods
mov
call
out
xlat
dec
pop
scas
in
xlat
dec
aas
mov
pop
dec
xlat
fcomps
icebp
addr16
pop
je
xor
icebp
xchg
popf
or
push
add
dec
out
fwait
repz
test
imull
fstps
mov
sbb
je
lea
cmpsb
pop
orl
and
mov
outsl
mov
jne
mov
push
cmc
sarb
pop
sub
insb
scas
xchg
aaa
ja
push
sti
sub
scas
jg
cmpsb
pop
sbb
loop
js
dec
inc
bound
out
call
scas
fbld
mov
stc
cmp
add
cmp
lods
jge
fsubl
movl
cmc
rep
fcompl
in
xchg
movsb
adc
incb
mov
out
cli
cld
and
jbe
push
scas
add
mov
mov
add
scas
stos
faddl
mov
and
call
jl
mov
test
subl
dec
leave
ljmp
subl
test
pop
push
add
cmc
cs
clc
fcoml
and
test
or
add
mov
jp
out
pop
mov
jmp
mov
cmp
lock
nop
sub
fildl
push
imul
fldcw
and
jle
jae
add
jmp
jne
jo
mov
sub
jmp
mov
lret
lret
ds
aaa
std
dec
mov
int3
or
pushf
push
mov
cmc
jge
scas
lea
xchg
or
insl
aaa
inc
mov
push
or
in
adc
popf
inc
push
fdivrs
fucomi
add
push
adc
push
in
push
cmc
pushw
add
push
mov
loope
push
xchg
testl
pushf
rorl
cltd
ljmp
repz
cwtl
mov
lahf
aam
cmp
popf
jg
in
filds
push
out
mov
mov
xor
subb
mov
push
cltd
pop
sub
xor
std
xchg
out
and
and
into
dec
stos
fwait
jg
jae
subb
cwtl
inc
mov
div
scas
shrb
lcall
lea
outsb
aam
out
sbb
fisttps
sbb
popa
loopne
push
mov
vsubss
jle
std
aam
lods
dec
push
sbb
push
add
testl
dec
jle
cmp
lahf
mov
movsb
test
pop
jp
mov
inc
cmpsb
or
cwtl
imul
add
call
pop
xor
lret
and
xlat
lret
mov
mov
popa
mov
arpl
mov
or
mov
mov
and
in
pop
pop
xor
dec
dec
into
mov
add
and
test
or
jmp
cmp
int3
sbb
lcall
pop
jg
add
or
clc
lds
or
popa
sbb
push
push
jns
or
out
add
loop
and
lods
stos
adc
jmp
cmp
nop
shlb
rorl
push
sbb
push
adc
push
in
scas
lea
insl
lods
pop
add
push
hlt
cmp
in
jnp
xor
dec
pop
push
add
fistpll
das
push
sub
push
das
into
cwtl
sbb
aaa
lock
push
fisubl
sbb
loopne
ss
pop
jne
in
xor
iret
mov
ja
mov
sbb
and
sbb
movsb
icebp
fwait
ljmp
xor
xor
xlat
mov
xor
sahf
inc
xor
and
cs
add
pop
xchg
decb
mov
int
xor
or
ret
inc
mov
stc
jg
loope
outsl
push
xor
popa
lahf
dec
mov
jns
enter
mov
cli
cmp
insl
mov
sahf
push
push
dec
ja
icebp
scas
jl
cmp
mov
scas
jmp
mov
add
in
mov
std
cmp
mov
mov
dec
jg
dec
and
jmp
xchg
in
scas
mov
inc
push
adc
sub
clc
lret
jmp
and
pop
sub
inc
ret
js
outsl
std
scas
addr16
nopl
sub
ffree
inc
adc
ret
and
sub
ret
inc
aaa
mov
in
xor
dec
inc
test
mov
out
add
sub
mov
mov
adc
xchg
xchg
dec
push
cmp
xchg
enter
std
mov
xor
or
pop
lret
dec
or
fisttps
sbb
lret
cmp
ss
pusha
xor
add
mov
pop
push
xchg
cmc
in
mov
aaa
das
add
mov
xor
add
xchg
daa
outsw
cld
dec
scas
dec
ja
aaa
xorl
cld
push
pop
dec
js
xor
daa
xor
cmp
and
mov
fdivrp
xchg
rcll
imul
cli
fwait
jle
jecxz
pusha
mov
ja
arpl
xorl
in
clc
mov
lret
cmc
dec
fists
adc
sub
adc
movsl
jbe
mov
mov
imul
inc
xorb
stc
ja
sbbb
xchg
xlat
add
xchg
pop
rol
iret
cld
pushl
out
and
xlat
pop
inc
test
fwait
and
adc
add
rclb
fs
or
mov
jno
push
fildl
mov
mov
pop
movsl
fdivrl
ljmp
inc
in
fldl
adc
test
inc
scas
mov
and
dec
xor
scas
mov
pop
dec
out
call
xchg
jecxz
mov
hlt
sbb
sub
mov
es
lret
int3
cld
cld
cli
das
push
int
bound
or
das
push
lret
lock
xor
mov
dec
and
scas
int3
mov
xlat
std
lods
pop
in
int
push
sub
cmp
cmpsb
fprem1
pop
adc
sub
or
pushl
sub
dec
jmp
into
rclb
pop
outsb
add
push
adc
pop
std
shlb
test
scas
div
outsl
xchg
sub
push
add
outsl
cld
ret
push
adc
push
or
mov
mov
push
sub
insb
push
cmp
jmp
insb
lods
ja
mov
pop
and
xchg
ja
jge
add
xor
xchg
fnstenv
jne
sti
xor
pop
and
mov
mov
mov
push
add
xor
fsubrs
loope
cmp
push
xor
iret
in
imul
pushaw
sahf
sub
jl
insb
decb
int
jle
aaa
cwtl
outsl
idivl
hlt
pop
sbb
jne
fstpl
or
outsl
sbb
mov
sahf
in
fs
adc
mov
jmp
mov
nop
fbstp
test
cs
add
and
dec
jmp
les
mov
and
aaa
jle
mov
addb
fs
in
outsl
pop
stc
aad
mov
shlb
mov
ja
in
mov
sbb
cmpsl
and
aas
decl
jle
daa
out
daa
fisubrl
cli
repz
mov
add
jl
lods
push
gs
cs
clc
fdivrl
pushw
pop
add
jp
dec
fs
mov
inc
and
out
repnz
repnz
mov
sbb
push
mov
jg
add
cli
aaa
nop
push
outsl
fdivr
faddl
pushf
inc
xor
mov
inc
xchg
out
xchg
addb
inc
cmpsl
jno
in
push
or
or
adc
and
inc
dec
outsl
out
mov
leave
leave
jge
jae
out
dec
mov
mov
aas
fbld
sub
xchg
icebp
and
mov
pop
dec
rcll
dec
mov
adc
decl
test
xlat
cmc
dec
into
sahf
aaa
call
xor
push
dec
js
cld
dec
aaa
jg
fwait
mov
add
push
push
push
dec
pop
cmp
and
stc
add
dec
xor
aad
xchg
dec
mov
inc
jnp
sub
insl
scas
fistpll
mov
jmp
fists
adc
pop
decl
push
fcoml
cmp
std
addr16
jp
fmull
xchg
xchg
adc
fidivrs
ds
jge
or
jecxz
xor
in
mov
js
pop
pop
sbb
enter
sar
lock
and
push
cwtl
fcoms
into
dec
ret
dec
jg
or
lcall
aaa
mov
jl
scas
inc
push
jmp
pop
repnz
dec
test
stc
cs
test
sahf
ret
or
cmc
lret
sbb
lds
jbe
popf
daa
push
clc
jge
jnp
ja
sub
xchg
inc
pop
scas
sti
push
pop
popf
fiadds
ja
inc
loopne
into
hlt
adc
pop
mov
inc
loopne
inc
lcall
ljmp
leave
cmp
loope
mov
lret
out
push
mov
mov
mov
xor
jg
and
pop
aaa
ret
out
cli
notb
jb
push
in
pushf
lret
in
movntq
iret
lret
push
loopne
test
cmp
lahf
outsl
data16
iret
dec
push
pop
pushf
push
pop
jg
cs
xchg
inc
in
xchg
adc
dec
out
mov
push
and
adc
scas
dec
roll
int
mov
out
push
clc
stos
jmp
popl
out
scas
lret
add
repz
push
ja
jns
sbb
stc
dec
mov
scas
hlt
je
test
aaa
add
pop
jne
jne
push
mov
pop
jnp
inc
fistpl
push
xchg
push
xor
push
add
mov
sub
jo
fsubs
nop
scas
ret
repz
test
sti
sbbb
push
fwait
mov
pop
cmpsl
pop
xchg
dec
mov
xor
fimuls
pushf
mov
xor
outsb
cld
xor
and
loopne
addr16
mov
inc
or
xor
xor
inc
popa
cmp
mov
cmp
sbb
test
mov
fsubp
mov
jecxz
mov
inc
aas
mov
clc
pop
bound
mov
aaa
pop
es
outsb
mov
or
mov
sti
mov
movsl
out
pop
popa
aaa
das
adc
add
pop
jo
hlt
inc
loope
cmpb
cmpsl
xchg
addr16
stc
fbld
mov
sbb
insl
jg
cwtl
fisubrs
shrb
test
fbstp
xor
xchg
sti
inc
es
iret
lahf
mov
jb
out
inc
sub
aas
jnp
negl
xchg
insl
je
cs
jg
push
test
pop
divps
or
mov
pop
jo
jecxz
sub
les
xchg
jmp
fldl
push
or
adc
cwtl
mov
mov
pop
push
dec
mov
or
or
stc
jg
mov
call
cmc
je
or
lods
mov
mov
jne
hlt
xorb
sub
add
xor
mov
mov
pushf
push
mov
aaa
dec
div
mov
push
test
ja
cmp
inc
in
pop
or
push
jns
and
pusha
aas
fbld
cltd
stc
mov
cmp
mov
push
sub
sbb
rep
cs
bound
fwait
jnp
push
mov
fldenv
hlt
cmc
push
pop
ret
jmp
clc
mov
mov
and
xchg
mov
ja
lahf
aam
jle
aad
aad
mov
xor
pop
stos
xor
mov
mov
rcrb
fcompl
call
fidivs
cmp
sbbb
pop
rcr
scas
sub
fiaddl
lock
cli
dec
pop
push
test
repnz
mov
jle
mov
out
insb
inc
rcl
push
sub
cmp
adc
test
push
mov
sbb
push
fidivrs
or
push
push
adc
mov
adc
in
cmc
fmuls
xchg
in
pop
and
add
cmpsb
cli
loope
xor
lea
andb
cmp
out
clc
jmp
push
mov
adc
push
or
xchg
jecxz
xchg
fimuls
push
push
mov
mov
push
dec
sub
add
out
jo
fwait
aaa
cltd
dec
movsl
in
mov
add
jnp
xchg
push
mov
sub
push
test
imul
pop
xor
sub
mov
add
cmp
popa
push
pop
outsl
xor
out
sub
aad
pop
shrd
push
sub
xchg
pop
ss
adc
and
or
leave
jle
das
pop
mov
psubd
outsb
jle
pusha
pop
pop
faddp
es
cld
add
or
sbb
pop
jbe
jne
xchg
pop
jns
cmc
adc
cs
lock
popa
pop
jmp
mov
xor
je
xor
jp
adc
sarb
repz
scas
sbb
shl
scas
aas
aas
pop
fnsave
pop
sub
fimuls
push
pop
mov
dec
fdivl
std
in
adc
movsl
jnp
pop
loopne
jge
push
insl
jle
cmpsl
cwtl
adc
es
jl
out
xchg
jl
mov
clc
cli
cmpb
mov
test
sub
imul
or
or
fldt
bound
fstp
or
push
in
push
outsl
out
cli
mul
fisubrs
push
jge
addb
push
mov
cmc
xchg
add
mov
jge
leave
pop
hlt
xor
sub
mov
scas
frstor
push
sti
xchg
mov
push
inc
jnp
inc
mov
int3
imul
sub
pop
add
inc
loop
or
jo
shrl
pushl
adc
mov
repnz
test
out
push
and
outsb
lods
sbb
jg
lock
or
or
xchg
outsl
cmp
inc
ret
jg
pop
mov
dec
xchg
lcall
out
pop
or
jb
pop
push
xor
popf
cwtl
clc
xchg
scas
xor
mov
ss
fldl
pop
in
dec
mov
pop
mov
scas
fwait
xor
iret
mov
divb
xchg
dec
mov
sbbl
daa
sub
out
cmc
adc
adc
cmpsl
iret
cmpsb
mov
les
rcll
pop
mov
pop
out
jb
cmpsb
in
cli
xchg
mov
push
out
out
in
cmpsl
repnz
adc
push
clc
adc
jl
and
push
in
cmc
pop
out
push
sar
jge
push
jge
sbb
in
dec
aaa
outsl
cmp
fs
adc
sub
inc
stos
push
aam
scas
insb
fsubrp
pop
push
out
lahf
sub
push
mov
push
fdivs
pop
push
call
int3
fildll
test
out
add
mov
lcall
sbb
shr
pop
push
sub
addr16
test
repz
inc
add
add
outsb
xor
jecxz
pop
mov
add
xor
push
pop
xchg
xor
imul
pop
push
call
fdivrp
or
inc
lahf
push
leave
lds
outsl
jle
iret
movsb
and
arpl
or
xor
sbb
cs
lock
push
cmpsb
sub
loop
cmp
and
and
mov
cmp
or
test
push
fistps
mov
cmpsb
cmp
pop
cmp
sbb
mov
push
aad
sub
fistps
rcr
inc
test
and
adc
out
fstl
lahf
les
cmpsl
je
push
ja
push
adc
pop
scas
mov
mov
mov
mov
mov
mov
icebp
fs
aad
das
cld
out
inc
lods
mov
cs
out
jno
fldl
cmc
xchg
roll
pop
mov
lods
idiv
outsl
mov
push
jne
cmpsb
push
jp
jge
pop
lcall
pop
or
ja
fwait
outsb
inc
jb
jbe
or
xchg
push
out
sub
aaa
jl
pushf
inc
dec
jae
mov
sub
hlt
xor
loope
flds
jno
push
push
xchg
push
cmp
pop
fsub
mov
jbe
fwait
add
aaa
je
inc
mov
sub
or
test
ljmp
cmp
syscall
add
addr16
jnp
mov
push
mov
dec
pop
outsl
outsb
push
bound
gs
sarl
or
add
idivb
lret
dec
xchg
mov
addr16
loop
jle
mov
pop
dec
mov
test
cs
jp
scas
add
aad
and
push
mov
and
ljmp
ja
subl
xorl
pop
scas
ss
fsubrl
inc
outsb
out
lods
negl
fst
xchg
push
cs
scas
mov
test
push
inc
jmp
in
adc
sub
inc
aam
test
push
jbe
push
push
pop
xor
pushf
mov
or
bnd
pop
cli
inc
xchg
orb
and
pop
bnd
pop
scas
repnz
xchg
lret
cld
aaa
aaa
push
xor
mov
mov
pop
inc
lcall
cmc
scas
lods
jnp
out
cmpsb
mov
sub
aad
adc
mov
div
mov
dec
ja
es
jns
push
fisttpll
loop
push
mov
jo
cltd
ja
sar
pop
push
pop
cld
sarb
or
loop
jne
cli
pop
ret
xchg
inc
cmp
xlat
mov
add
mov
fcoms
loope
sbb
ds
push
call
jno
xor
iret
cwtl
ds
and
xchg
xor
stc
lahf
cmpsb
xchg
dec
int3
inc
jbe
push
pop
inc
sbb
jl
shll
cltd
int3
mov
jb
xor
add
jg
jb
sub
mov
pop
fiaddl
mov
stc
repz
test
push
sbb
ret
dec
xor
loopne
sbb
jnp
negb
xor
fistps
inc
in
fucomp
xchg
inc
mov
adc
mov
dec
or
push
jne
gs
dec
movsl
scas
cs
jno
pusha
outsb
push
hlt
aas
add
sbb
and
aaa
mov
mov
mov
sbb
dec
mov
repz
ret
sub
movsl
lea
sub
scas
or
outsl
ficomps
lea
movsl
in
les
jmp
xorb
pop
dec
cmpsb
in
rol
xor
out
daa
xor
pop
fisttps
adc
mov
dec
test
bound
mov
or
jo
jle
out
call
jg
sub
pop
dec
xchg
pop
fistpl
out
push
sub
in
insl
or
fcoml
repnz
adc
jbe
add
pop
out
cmpsb
rcrl
jge
in
lods
in
jg
xchg
out
cli
pushl
cmp
jmp
mov
fdivs
dec
int3
jle
bswap
cmp
cltd
stc
cmpb
sub
and
pop
in
xor
outsl
insb
clc
mov
es
sbb
xor
pop
scas
int3
xor
or
push
xor
xor
mov
push
mov
mov
push
and
push
cmp
int3
stc
sahf
negl
stos
xchg
cmpsb
lahf
mov
jne
xchg
jmp
imul
push
or
and
push
or
incb
loope
in
sub
jb
mov
inc
adc
and
mov
clc
lahf
mov
jecxz
mov
cmc
mov
fs
pop
sti
fs
push
cmp
bound
jp
in
cmp
or
jo
imul
or
cmpsl
lret
adc
daa
lods
mov
insl
das
cld
flds
and
jp
cld
add
jg
mov
pop
scas
push
add
add
cli
sub
cwtl
rolb
scas
and
ret
inc
test
lea
inc
sub
pop
ja
inc
sub
aad
insl
fmull
sbb
sti
pop
gs
repz
das
xor
add
ss
mov
jmp
mov
out
lock
xchg
ja
jne
xor
or
and
dec
push
xchg
cmpsb
xchg
mov
out
mov
inc
or
mov
es
call
ljmp
or
into
or
dec
jae
loope
js
scas
pusha
xor
ss
xlat
fwait
jg
aad
adc
and
pop
aaa
or
je
ja
push
fldl
nop
mov
mov
cmp
jmp
pop
bound
jns
scas
cld
das
sti
jb,pn
cwtl
mov
aam
pop
jnp
or
cmc
cs
adc
mov
xchg
cs
jl
or
lahf
movsl
mov
in
mov
xchg
sar
mov
int
ret
mov
ds
imulb
pop
aas
inc
mov
adc
push
inc
loope
cli
xlat
pop
inc
adc
mov
arpl
jl
cld
and
loope
stos
out
cmp
cltd
and
push
and
mov
xlat
stos
jns
inc
mov
cli
jp
imul
inc
push
iret
dec
xor
pop
push
call
push
call
data16
push
out
xor
std
pop
popf
fisubrs
pop
sbb
sarl
das
enter
sub
inc
push
loope
cs
fildl
push
int
and
cmc
pop
repnz
mov
aam
and
jg
sbb
and
in
ja
xchg
sub
loopne
movsb
fildll
cmp
fmull
mov
and
sbb
lea
add
das
cld
jl
push
pushf
lock
out
xchg
lret
jle
shrb
cmp
pop
xchg
cli
and
mov
mov
jmp
cmpsl
ds
jmp
xor
aam
jmp
rcrb
outsl
jmp
icebp
jmp
jp
ret
insb
stos
aad
cmp
sub
sbb
jecxz
loop
sub
push
call
push
add
push
cld
clc
rcll
fistl
jbe
push
mov
outsb
fsubs
pop
pop
es
cld
xchg
flds
pop
sub
push
add
sub
int3
sti
fstpt
mov
jbe
pushf
jb
je
je
js
pop
sbb
or
dec
cmp
adc
call
cmpb
mov
std
ds
fists
iret
inc
push
mov
jg
cmpsb
lahf
dec
fstpl
add
enter
sub
outsb
out
push
jmp
xchg
jle
push
mov
in
cmp
pop
adc
decb
and
cli
add
jo
jle
in
jge
push
cld
jae
or
mov
mov
and
add
or
in
push
jl
movsb
push
data16
in
cli
out
push
jle
ds
mov
cmpsl
xor
aas
jg
aaa
icebp
pop
sub
cmpsl
ja
pop
scas
mov
sbb
fs
mov
push
cvtps2pd
cmpb
scas
mov
pop
loope
mov
sub
dec
les
pop
jg
cs
in
adc
and
inc
pop
in
mov
push
aaa
int
push
stc
repz
or
test
pop
mov
lret
bound
jecxz
push
or
mov
xor
mov
ds
dec
mov
cmp
xchg
aam
fldenv
push
insb
push
cmpsb
mov
xor
jmp
sub
xchg
inc
mov
cli
or
adcb
xor
lods
mov
dec
ja
pop
dec
into
neg
lcall
aas
inc
mov
repz
aaa
pop
pop
loopne
jmp
pop
cli
int
xor
xchg
adc
or
jge
mov
xchg
jnp
ficoml
sahf
pushf
adc
repz
fdivrs
cmp
adc
inc
pusha
lret
das
add
and
cs
cwtl
mov
stc
mov
loop
outsb
mov
push
xchg
xlat
fistpll
adc
mov
sbb
push
mov
insl
mov
xor
add
pop
push
scas
add
jbe
mov
subl
pop
jb
gs
lcall
lock
inc
je
push
sub
in
sbb
fnsave
sbb
sti
in
dec
lds
xchg
div
push
jg
popf
lods
push
push
loope
pop
mov
iret
cmpsb
sbb
fistpll
in
xlat
out
jmp
movsb
or
test
test
aaa
outsl
loope
lods
dec
loopne
hlt
dec
mov
lret
jle
sbb
jb
rorb
clc
pop
mov
and
and
clc
cmp
test
movsl
int
ja
adc
dec
ret
in
pop
inc
fsubrp
ret
cmpsb
inc
adc
jb
and
nop
dec
idivl
and
xchg
call
insl
mov
call
aaa
cwtl
adcl
scas
pop
mov
stc
into
sub
and
scas
mov
scas
mov
dec
adc
aas
adc
test
stos
popa
cmp
out
sub
xchg
imul
mov
lods
in
jg
repz
js
push
insl
lods
xlat
or
pop
pop
in
cwtl
pop
add
adc
into
sbb
fistl
or
xor
xchg
testl
mov
pop
sub
pop
stc
jmp
jl
mulb
fistpl
adc
add
pop
xchg
or
adc
arpl
sahf
jae
xor
mov
into
jmp
fsubl
sub
cli
cmc
jb
mov
cli
and
flds
mov
dec
jg
pusha
jg
mov
mull
sbb
and
scas
xor
std
in
mov
outsl
sub
dec
inc
jp
loop
arpl
es
mov
movsb
movsb
xor
xor
cmc
xchg
xchg
cmpsb
inc
pop
pmulhw
enter
lea
xchg
std
data16
or
jge
mov
mov
outsb
in
cmpsb
xor
lret
mov
mov
sub
movsl
es
pop
int
push
out
popa
in
loope
sbb
add
mov
cld
int
popl
adc
xchg
xchg
add
outsl
mov
pop
adc
add
enter
cs
rorl
dec
cld
push
inc
jg
mulb
push
aam
daa
jge
das
xchg
mov
iret
das
mov
mov
movb
nop
ret
sbb
mov
int
jmp
pop
jge
jb
sbb
aam
mov
ss
stos
out
jne
xor
decb
call
imul
push
hlt
mov
das
std
out
lret
or
push
mov
lcall
fcomp
mov
dec
pop
and
mov
rorl
mov
pusha
cwtl
mov
pop
sub
or
sbbl
mov
es
push
push
fidivrs
enter
lea
fstl
cmpsb
or
adc
cld
add
xchg
mov
sar
arpl
push
xchg
pusha
xchg
mov
sub
pop
jg
jecxz
xchg
cld
out
call
jg
jg
repz
xchg
lcall
outsb
inc
jnp
pop
call
push
and
mov
push
cmp
push
jp
mov
sub
pop
pop
xor
cmp
divb
sbb
pop
test
sub
out
jmp
and
add
xor
daa
repnz
subb
push
jns
daa
es
clc
out
in
pop
outsl
loop
push
add
pop
bound
pushf
jo
aaa
roll
sub
or
and
aaa
mov
xor
cmc
add
aam
aas
sbb
int3
and
testb
std
mov
or
or
pop
push
gs
das
scas
cltd
xor
loopne
dec
hlt
gs
call
mov
and
in
int3
outsb
std
and
or
test
imul
jge
mov
or
push
mov
aaa
out
mov
mov
popa
rolb
mov
jp
push
mov
repnz
push
aaa
out
ret
push
xor
mov
jnp
pop
jno
xorl
outsb
adc
lock
arpl
jg
mov
dec
cld
cmc
out
sbb
push
dec
into
and
aaa
jno
jne
pop
mov
cmpsb
pop
push
fwait
cmp
push
shl
cltd
fnsave
js
scas
push
fdivs
sub
inc
mov
or
ret
loopne
icebp
push
inc
push
fistl
adc
fildll
add
xor
pop
mov
je
or
push
into
test
xor
cmc
jg
fwait
movb
pop
pop
sahf
idivb
dec
out
jg
cmp
lcall
and
cld
subl
out
pop
ds
je
pop
jecxz
cmp
aaa
ja
push
xor
or
cmp
jb
sbb
clc
outsb
jl
cmp
scas
std
addb
in
jae
fsts
xchg
ljmp
cmp
out
pop
aam
and
aaa
push
push
les
pop
dec
pop
and
test
mov
pop
outsl
jge
sbb
shlb
out
rclb
and
nop
lea
movsl
push
and
fildll
popa
xchg
ffree
insl
sbb
pop
int
cmc
outsl
ljmp
cmp
jp
inc
push
insl
cmpsb
pop
rcr
cs
lret
hlt
xchg
push
jo
aaa
jnp
addb
cmpl
fwait
push
jno
std
jle
pop
adc
loope
pop
inc
fnstcw
push
xor
ss
sbb
std
mov
dec
scas
int
sub
adc
in
in
jne
out
adc
je
arpl
add
xor
dec
int
ss
pop
int
and
mov
inc
pop
negl
das
adc
pusha
pop
push
rol
shlb
jbe
int3
jns
jecxz
seto
add
mov
test
mov
xchg
lahf
jnp
or
push
push
and
cmp
adc
inc
adc
outsb
xchg
jbe
jl
pop
pop
adc
ds
jp
loopne
fcoml
add
inc
sahf
call
gs
inc
subb
pop
inc
adc
xor
xlat
add
mulw
loopne
add
subb
mov
sbbb
jl
push
push
imul
push
dec
lcall
jecxz
les
cmp
add
xchg
lock
clc
scas
push
and
mov
pop
cwtl
pusha
movsl
jbe
or
into
xchg
xchg
pusha
mov
mov
mov
mov
push
les
cmpsb
stos
enter
ljmp
mov
insb
or
push
in
push
scas
xchg
pop
jo
jno
sub
testb
ficoml
or
push
mov
test
and
sub
cli
push
int3
dec
push
sub
pop
adc
mov
mov
pop
sbb
and
shlb
dec
data16
in
xchg
outsl
sub
fisttpll
xor
pop
cli
fisubl
cmpsl
mov
push
xchg
out
add
push
fildll
scas
mov
daa
push
push
das
lret
notb
arpl
cmp
ljmp
pusha
push
pop
cli
insl
js
cs
call
add
std
push
loop
loop
aam
mov
in
incl
push
insl
lods
loopne
std
insb
lods
out
sub
out
les
fsubrs
cmp
fcoms
movsb
and
add
jo
outsl
jg
pavgb
imul
fwait
pop
sti
pop
mov
lcall
and
lock
mov
xor
mov
push
pop
mov
xor
sbb
in
jp
mov
mov
pushf
jno
dec
ficomps
pop
popa
jbe
cmc
mov
mov
mov
out
ja
mov
popa
cmp
out
cs
add
pop
inc
mov
inc
jmp
out
ds
bound
cli
les
mov
std
and
fs
scas
cmp
movsb
pop
cmp
hlt
pop
movsb
inc
nop
jl
lds
mull
mov
mov
dec
add
or
stos
add
sub
push
movsl
jle
push
sub
jmp
mov
push
push
sub
pushf
sub
lods
faddl
cmp
into
inc
mov
outsb
jle
jne
jmp
jmp
ret
xchg
jle
cs
add
dec
loope
scas
fists
inc
test
outsb
sub
push
cs
inc
addr16
lea
ucomiss
mov
push
add
dec
push
fidivs
dec
inc
xchg
pop
orl
and
lock
sbb
push
add
dec
mov
pop
mov
jl,pn
scas
lret
lfs
leave
jge,pn
xchg
out
inc
mov
hlt
push
jb
fistpll
xor
cwtl
out
pop
adc
adc
loope
or
mov
outsl
outsl
push
push
aaa
imul
dec
fbstp
adc
pop
jp
int3
inc
pop
mov
mov
jecxz
mov
aas
lret
cmovg
jae,pt
add
rclb
call
test
sub
sbb
lea
pop
pushl
cmp
sub
push
push
sahf
scas
cld
cmp
mov
cmp
loopne
adc
popf
adc
call
push
mov
add
push
loopne
stos
insl
pop
imul
inc
push
pop
jg
sbb
inc
jle
loopne
jge
movsl
lods
mov
cwtl
add
es
sbb
hlt
gs
idivb
xorl
push
fcmovb
inc
out
test
or
mov
sub
mov
push
fldt
adc
pop
clc
out
xor
add
dec
rcr
test
int
pushf
lods
pusha
mov
popf
faddl
enter
gs
roll
negb
enter
out
test
mov
push
pusha
mov
jmp
mov
push
mov
test
mov
fdivrl
dec
jb
mov
adc
mov
idivb
dec
repnz
mov
mov
addr16
or
loope
aam
in
or
into
pop
xor
mov
frstor
scas
mov
pushl
sbb
adc
add
xchg
movsl
inc
push
push
shrb
lods
inc
pop
pop
mov
or
mull
pop
leave
mov
fucom
cmp
cs
shrb
mov
pop
cmp
fdivrl
jmp
cs
pop
das
adc
int
jb
aad
sub
pop
lods
jmp
mov
addr16
gs
insl
lods
jo
cmp
sbb
out
sub
dec
je
cs
lock
sub
mov
clc
adc
push
mov
out
mov
and
adc
jmp
sbb
mov
cli
lret
xchg
push
mov
dec
add
mov
insl
testb
or
jmp
mov
mov
mov
jmp
insb
jmp
mov
aad
jbe
dec
inc
scas
xor
mov
loop
inc
mov
clc
mov
dec
dec
idiv
jge
pusha
add
mov
ret
sti
push
sti
mov
push
fstpt
lods
add
out
inc
sub
ss
xchg
push
xor
jp
jle
aam
add
cld
ja
bound
js
mov
sub
movsl
aas
cli
int
ret
jl
jmp
ljmp
aas
add
incl
es
jb
add
nop
mov
pop
mov
sbb
mov
dec
or
flds
push
sub
sbb
pop
scas
mov
lods
jbe
jmp
js
outsl
inc
cmp
mov
inc
ja
out
sub
jns
movb
sbb
or
fcoml
int
xchg
int
inc
xlat
mov
push
cwtl
xor
stos
or
mov
xchg
adc
cli
mov
paddd
add
call
xor
je
add
loopne
leave
sbbb
or
cmp
call
adc
cs
fcomps
mov
jnp
push
ja
scas
sub
push
add
lret
pop
mov
xlat
adc
mov
cmpsl
mov
or
sub
or
adc
push
cld
adc
dec
dec
rcll
imul
rcrb
sbb
daa
rolb
jmp
sub
cmp
out
jb
add
je
pop
jl
mov
pop
and
sub
in
popf
add
xor
ret
add
jle
js
mov
mov
in
daa
inc
leave
mov
jb
test
subl
sbb
addb
cmp
cmc
xor
loopne
mov
lock
clc
nop
mov
jmp
push
pop
test
repnz
mov
inc
ret
xlat
jmp
pop
mov
xchg
inc
aam
loope
add
sbb
frstor
push
lea
outsb
outsl
xor
pop
or
sub
fsubl
ficomps
push
in
in
or
popa
mov
fcomip
mov
or
pop
loopne
adcb
and
sbb
jle
lret
cmp
loope
loope
pop
dec
mov
sub
sbbb
inc
add
popf
pop
push
pop
jns
add
lahf
frstor
lods
or
imul
idiv
aaa
bound
bound
data16
jbe
cwtl
adc
out
mov
imul
cmp
gs
push
rcll
pop
call
sub
and
jnp
jle
or
hlt
int
adc
mov
aas
xor
jmp
mov
call
gs
or
adc
cmc
fldcw
jg
push
inc
and
pop
and
das
sbb
sti
insb
push
inc
aaa
fnsave
nop
int
enter
fadds
sbb
insl
cmp
mov
das
scas
pop
iret
fistl
int3
jo
fisubl
pop
ja
mov
scas
lcall
jmp
xor
mov
xor
dec
sbb
out
xchg
mov
push
scas
mov
out
pushf
push
mov
adc
pop
jp
dec
nop
add
mov
ss
dec
pop
scas
cld
sbb
aaa
fisubs
cmp
jo
pop
addl
and
js
mov
xchg
fstl
or
sbbb
jl
cmp
loop
jb
add
cli
and
in
add
and
inc
mov
jae
dec
addb
cld
cmp
loope
insb
dec
add
push
ret
ds
add
daa
jmp
push
adc
cld
dec
aaa
enter
pop
adc
pop
add
sub
ljmp
xor
std
or
or
out
inc
imul
jnp
bound
mov
insb
push
ret
and
mov
insl
int
mov
jmp
test
in
fiaddl
jbe
mov
out
out
mov
lds
lahf
xorb
mov
pop
xor
push
es
pop
jbe
xchg
movl
pop
or
inc
aaa
ss
pop
icebp
adc
xchg
xchg
fdiv
imul
je
loopne
sbb
dec
movsb
or
fcmovnb
fwait
int
xor
lret
or
inc
popf
jbe
mov
mov
enter
das
scas
pop
mov
xchg
dec
push
cmp
and
push
mov
jge
dec
sbb
push
sahf
cmp
fnstsw
sti
push
sub
fdivl
mov
dec
push
jl
or
lods
shll
out
es
std
mov
inc
jge
out
dec
aad
mov
jg
mov
and
call
sbb
inc
in
fadd
fimuls
jns
cld
mov
cwtl
iret
sbb
pop
pop
das
and
fcoms
out
sub
popa
fcompl
mov
inc
popa
repz
lcall
and
mov
jg
stos
inc
arpl
sbb
into
pop
test
ja
xchg
xor
mov
cmp
pop
test
sbb
push
lahf
enter
lea
mov
mov
pop
xor
out
lock
leave
dec
inc
sub
fbld
mov
cld
pop
clc
nop
loop
add
dec
inc
mov
pusha
lret
or
test
mov
push
sub
pop
out
in
dec
or
push
xor
sti
and
sub
test
icebp
lret
xor
pop
jg
pop
neg
repnz
adc
dec
mov
and
cmpsb
fs
iret
scas
daa
sub
adc
test
out
leave
pop
mov
mov
push
xchg
sub
ret
xor
enter
mov
clc
adc
subb
addl
bound
jns
or
scas
xor
js
sarb
dec
pop
mov
pop
mov
inc
xlat
ret
inc
jecxz
xor
push
aas
sbb
addb
icebp
pop
rcr
cld
addr16
test
scas
xchg
sbb
sub
shrb
xor
stos
fninit
sub
inc
js
cld
mov
xor
lret
sub
and
pop
jnp
aaa
sub
pop
sbb
fcompl
into
addb
cmp
pop
lret
sub
jbe
jecxz
neg
bound
ja
aaa
je
out
loope
jmp
popa
lret
jecxz
stos
aaa
js
jp
clc
and
leave
mov
or
push
fdivr
outsl
std
push
std
and
or
inc
inc
cmp
dec
test
fldenv
push
push
std
jl
insb
fcomip
fdivrp
sub
jne
or
or
cmp
or
scas
cld
shlb
mov
jb
add
pop
sub
inc
push
sbb
icebp
stos
dec
loop
and
jno
lock
imul
dec
ret
mov
or
add
and
pop
sbb
or
or
xchg
cmp
mov
js
lods
lock
cld
in
shlb
test
into
shr
les
mov
outsl
mov
jge
mov
inc
push
cmp
mov
dec
in
push
jne
nop
je
sub
jne
push
out
inc
pop
and
in
pop
xorb
jmp
subl
jg
jmp
inc
leave
or
test
or
in
push
or
in
repz
push
push
aam
jge
sti
gs
cmpb
pop
test
ja
jg
test
das
cmp
cli
push
rorl
lods
movsb
in
js
int3
sbb
mov
push
pop
push
rcrb
inc
mov
rcrb
push
clc
test
pushf
xchg
cltd
mov
push
add
rclb
cmp
push
outsl
cld
jmp
aam
sbb
pop
mov
in
lea
xchg
dec
cmp
inc
and
push
aas
mov
mov
fwait
adc
xor
pushf
popf
pop
nop
std
test
subb
inc
cld
ret
pop
xchg
mov
rcrb
ss
sub
outsl
mov
inc
and
stos
frstor
sub
add
mov
inc
clc
aam
pop
daa
inc
sub
out
mov
call
jno
cld
nop
and
sti
aaa
sub
stc
push
bnd
sbb
mov
mov
outsl
or
ljmp
popa
xchg
dec
das
out
mov
sub
lahf
out
mov
hlt
addr16
call
out
adc
je
mov
or
sbb
pusha
mov
movsb
cmp
push
fadds
lea
das
cwtl
out
fildll
andb
clc
pop
movsl
jne
jo
pop
pop
pop
push
mov
jne
cmpsb
pop
inc
adc
pusha
cmpsb
lret
data16
int3
out
aad
int3
add
lcall
scas
sbb
lret
leave
test
xchg
jbe
push
jno
push
xchg
mov
inc
mov
out
jecxz
sub
mov
dec
xchg
or
outsb
ds
mov
adc
insl
lods
lcall
mov
lods
xchg
popf
pop
adc
lods
or
lock
mov
mov
xor
mov
add
pop
mov
and
orl
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
xorb
mov
imul
jae
inc
jb
in
fwait
jmp
dec
imul
gs
je
je
jo
outsb
outsw
inc
mov
push
push
outsb
push
gs
bound
imul
sti
imul
insl
insl
cmp
sub
xlat
pop
push
daa
and
dec
popa
jae
sub
mov
insb
push
imul
adc
jae
jb
jo
out
out
jns
push
popl
push
push
cwtl
jo
gs
push
imul
jne
imul
add
dec
gs
jo
insb
insb
jl
imul
sahf
addb
push
lret
aas
or
pop
cld
lods
inc
jne
data16
dec
outsb
addr16
inc
inc
dec
mov
fs
inc
push
inc
inc
push
inc
inc
dec
inc
pop
push
aas
xor
xor
inc
inc
push
xor
cmp
or
dec
inc
push
pop
cmp
push
mov
cmpl
leave
push
aas
inc
push
xor
push
addb
or
daa
adc
pop
adc
inc
aaa
pop
int3
pusha
dec
and
in
inc
pusha
cwtl
dec
dec
xor
sbb
fcmovnu
jno
sbb
sub
dec
stos
dec
data16
outsl
jb
out
push
bnd
inc
inc
pop
pop
out
inc
mov
pop
jo
sbb
bound
inc
sub
mov
xchg
cmp
insl
xor
mov
push
in
shrb
int3
pop
inc
fidivs
sahf
mov
into
mov
dec
jbe
cmp
or
cmp
das
lock
je
jb
jb
ja
repz
sub
dec
popa
xchg
out
inc
in
xor
sbb
sti
xor
ja
jo
je
xorb
imul
outsl
popa
fs
mov
outsl
outsb
push
gs
je
repnz
mov
je
lret
jno
fnstenv
jmp
add
add
add
push
pop
add
cmp
adc
mov
inc
pop
xor
or
add
sbb
cmp
insl
jae
movlps
lock
mov
push
mov
jne
std
dec
repnz
pop
add
insb
xor
inc
cmp
jo
scas
mov
and
cs
js
rorl
inc
pop
and
lock
inc
and
pusha
inc
push
push
push
pop
imul
dec
pop
lahf
addb
and
add
shrb
fs
nop
out
and
dec
sahf
jb
jb
push
repnz
or
bound
lahf
mov
pop
dec
adc
mov
rclb
jo
dec
lock
leave
lods
jnp
out
cmp
or
lahf
leave
jnp
pop
fstl
mov
and
outsl
fdivrs
dec
pusha
cs
xchg
and
fnsave
das
clc
inc
or
add
dec
incl
add
add
inc
add
inc
xchg
jo
add
negl
loope
pop
dec
and
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
imul
