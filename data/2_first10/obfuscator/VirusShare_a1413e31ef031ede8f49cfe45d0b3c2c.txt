push
call
ret
ret
dec
es
and
cld
jne
jb
inc
mov
mov
fidivrs
xchg
out
pop
gs
inc
das
cmp
out
mov
cmpsb
cmovg
mov
push
cmc
out
lds
jg
jl
daa
int3
cmp
mov
adc
loopne
minps
pop
ss
shrb
cmp
das
test
fs
test
fwait
lcall
mov
cmp
call
int
sbb
sub
mov
pusha
inc
iret
jnp
ja
gs
mov
sbb
push
in
mov
jecxz
or
pop
mov
lods
stos
or
jbe
std
xor
sbb
rclb
jo
pop
mov
lret
push
pop
xor
inc
jge
insl
pop
dec
in
dec
aas
lods
mov
call
in
sbb
ds
lds
fcmovu
jo
popa
xchg
mov
cmpb
pop
fsubl
in
repz
rcrb
sbb
mov
jle
imul
mov
lret
dec
dec
xchg
sub
push
shl
mov
cmp
andl
je
pop
bound
mov
xchg
xor
push
sbb
mov
lret
jl
lds
xor
or
pop
jl
adcl
pop
sub
push
ret
popa
pop
and
sbb
fimull
insb
out
xor
xor
lcall
dec
subl
and
subl
sarb
data16
push
jl
add
push
mov
and
sub
ljmp
jbe
jbe
out
in
cmp
xor
lret
enter
dec
mov
ss
fdivr
sbb
mov
sbb
sub
leave
loopne
outsl
cmpsb
add
adcl
jne
outsl
push
add
mov
cld
sbb
aad
jns
push
adc
mov
out
adc
pushf
mov
jle
adc
popf
sbb
jmp
popf
jmp
fimull
lret
dec
push
and
mov
cmp
ficoml
mov
outsb
pushf
mov
mov
pop
add
leave
aaa
insl
push
gs
cli
or
movsl
jnp
inc
rcrl
out
cmp
bound
pop
ficompl
aas
cld
outsl
adc
arpl
inc
or
xchg
dec
test
sub
xchg
xor
push
rcr
mov
les
push
push
push
fstps
xor
push
test
push
mov
aaa
cli
sub
mov
adc
inc
xor
pushf
lea
xor
sbb
iret
adc
xor
popa
daa
mov
jne
daa
mov
jne
je
cltd
push
cli
xchg
stos
mov
iret
aaa
xor
xchg
lods
aaa
mov
jnp
dec
push
push
loope
fcmovb
or
add
adc
js
mov
jl
ss
and
jns
rorb
andl
push
les
pop
ja
sbb
xchg
scas
ldmxcsr
movsl
xchg
sarl
push
pop
and
sbb
lods
add
das
inc
adc
pop
add
xchg
repz
mov
mov
inc
cmp
das
mov
stos
cmp
in
jl
dec
idivb
jo
or
cmp
fisubl
popa
into
mov
xor
pushf
cmp
rorl
cmp
sbb
mov
jo
out
mov
jns
mov
mov
lds
sbb
ja
lds
add
ret
dec
jecxz
hlt
sbb
sub
jne
mov
jg
xchg
pop
outsb
mov
je
dec
cmpb
cltd
aas
jl
cld
test
and
pushf
xchg
andl
jnp
push
push
lds
inc
aam
sahf
or
xlat
cmp
sbb
out
shrl
mov
cmc
and
lea
lahf
mov
ja
dec
xchg
jbe
negl
sbb
cmpsb
loopne
sub
cld
xchg
jo
rcll
xchg
loope
daa
ja
xor
xor
mov
subb
or
sub
jns
lahf
outsb
push
aad
popl
sub
adc
fisubrs
xchg
in
aas
pop
cmp
inc
addr16
mov
es
sbb
jmp
or
fiaddl
test
pop
into
ficoms
sbbb
or
fcmovne
jecxz
xchg
xchg
mov
add
sub
push
jns
fdivl
mov
imull
xor
loop
pop
outsb
adc
push
test
mov
jo
addr16
int
insl
or
fstpl
sub
scas
gs
lods
adc
insb
ja
sbb
loop
jnp
mov
push
sbb
jmp
out
dec
dec
add
fwait
mov
adcb
xor
roll
jns
popa
sbb
arpl
dec
int
dec
sub
jae
out
inc
dec
jecxz
inc
inc
scas
enter
loop
mov
mov
push
sub
cld
mov
std
push
cmp
sub
jne
mov
loope
scas
jg
jle
adc
xchg
pushf
push
or
and
push
in
sub
scas
outsb
or
xchg
insl
gs
dec
mov
into
movsb
jle
js
jp
lret
dec
imul
aam
sbb
fwait
sub
sub
push
hlt
sarl
xchg
insl
imul
jb
insl
xor
ja
dec
xchg
nop
lret
mov
push
and
mov
or
push
out
dec
pop
repnz
in
mov
lods
aad
nop
cmp
mov
push
push
inc
and
mov
inc
jno
and
or
sbb
fdivs
insl
push
jno
adc
ja
cltd
and
cmpsb
ljmp
xchg
nop
dec
mov
ss
or
jbe
jecxz
loope
pop
flds
shrl
loop
test
inc
or
int3
sar
push
ficompl
imul
inc
in
mov
shlb
jmp
int
in
subb
pop
mov
jne
pop
jl
sbb
out
fnsave
movsl
pop
sti
int3
pop
fidivs
and
inc
or
mov
test
pop
ljmp
xor
movsl
mov
movsb
std
fimuls
adc
fwait
mov
cmpsb
nop
jl
jle
out
pushf
adc
xchg
add
fmull
clc
xor
mov
aad
mov
or
outsb
setne
jmp
enter
and
mov
sti
xchg
sbb
mov
fs
cs
cmpb
repz
sub
int3
scas
aaa
push
fwait
sub
xor
push
adc
add
lea
nop
push
xchg
daa
xchg
inc
mov
pop
in
jge
enter
addl
xor
add
ja
and
imul
pop
cld
aas
mov
movsb
inc
in
adcl
stc
pavgw
inc
and
pushw
sarb
das
popf
ljmp
bswap
jne
movsl
je
loop
pop
das
repz
lods
mov
loop
pushf
ja
jl
jae
or
add
xchg
sbb
jns
insl
and
out
xchg
lcall
mov
cld
pop
xchg
adc
test
xlat
jecxz
pop
xchg
push
rcrl
jb
mov
lret
dec
scas
sbb
cmp
cwtl
push
jmp
lods
xchg
stos
cmpsb
pop
inc
mov
dec
lods
push
mov
aaa
roll
ja
nop
mov
fildll
mov
je
adc
call
mov
sbb
cwtl
roll
jg
push
add
mov
and
mov
fnstcw
fstpl
mov
rclb
lea
sub
cmpsb
lock
cs
mov
cmc
push
xor
or
int
jle
cmp
cltd
pusha
pop
pusha
inc
sbbl
out
cmpb
sbb
enter
cmp
out
cmp
adc
inc
outsl
push
adc
sbb
add
cwtl
push
or
int3
icebp
repz
sbb
cmpsl
sbb
mov
xchg
or
iret
inc
push
mov
cld
xor
lcall
sbb
dec
cwtl
fldl
dec
popa
lcall
sbb
cmpsb
rolb
inc
xlat
lret
pop
jle
das
lods
pop
dec
adc
xor
lret
into
cmp
sub
add
aam
je
pushl
aas
or
ficomps
fistpl
push
xor
push
mov
cmp
leave
loopne
xchg
or
pop
rol
pop
cltd
mov
mov
xchg
jb
adc
cwtl
pusha
gs
jnp
jg
hlt
lahf
fisubs
lret
outsl
xchg
jno
mov
adc
mov
or
inc
push
dec
mov
sahf
sbb
mov
sbb
pop
push
cmp
push
repz
leave
ljmp
lock
dec
cmpl
sbb
xor
inc
push
sbb
mov
dec
push
cltd
jo
add
push
js
in
icebp
xor
daa
bndstx
test
mov
sub
leave
and
dec
loop
adc
dec
js
mov
adc
arpl
jmp
cwtl
dec
adc
cmp
xchg
push
jle
aaa
xor
pop
test
push
aam
daa
xchg
scas
inc
orb
repz
testb
lock
test
dec
dec
cmp
into
cmp
movsl
nop
das
cs
aam
jl
mov
xor
xchg
repnz
push
jae
sti
inc
out
xchg
mov
in
loope,pt
frstpm(287
add
fcompl
mov
mov
aaa
mov
sbb
mov
or
add
cmp
xchg
addr16
push
sub
mov
adc
or
ja
clc
mov
inc
adc
enter
cld
push
or
sarl
mov
xchg
push
movsb
push
mov
repnz
jle
push
fmul
shll
add
mov
xchg
ret
call
pop
popa
insl
ljmp
lret
leave
push
stos
loopne
xor
mov
jmp
ret
jecxz
arpl
dec
push
fiadds
mov
mov
test
out
pop
push
loopne
or
dec
jle
mov
leave
xchg
aad
xchg
or
adc
dec
adc
cli
lret
pushl
dec
mov
loope
out
cld
mov
inc
lock
std
mov
lret
addr16
imul
xor
movsl
jge
xlat
xchg
inc
lret
jle
popf
xchg
insl
test
int3
cmpsl
jecxz
repz
les
lods
data16
aad
mov
test
into
insl
rcll
ja
adc
test
xchg
and
sub
es
stc
xchg
cwtl
pop
ret
fldt
xchg
add
enter
add
rcl
icebp
movb
sub
bound
mov
pushf
aam
push
pop
mov
jle
das
inc
aaa
or
cmp
jae
ret
jmp
into
lods
dec
fmuls
cmp
jg
mov
add
xor
xor
jmp
jg
fnstenv
addr16
pop
stos
rorl
loope
cmp
inc
lret
cwtl
test
and
aaa
push
pop
xchg
cmp
cmp
mov
xlat
hlt
xlat
lret
mov
inc
pushf
add
add
inc
mov
out
nop
test
les
push
imul
jb
outsl
mov
test
sti
fbstp
push
inc
cmp
call
sbb
insb
push
jge
push
aas
hlt
adc
fiaddl
dec
jp
imul
sub
push
jo
imul
pop
mov
les
jnp
aad
xchg
cli
adc
sahf
add
nop
or
ret
jle
jno
movsl
mov
leave
aam
xor
dec
insl
push
push
inc
jg
dec
std
mov
sbb
push
xchg
sti
fisubl
jo
fists
rclb
incl
fwait
js
adc
push
xlat
mov
push
stos
aaa
mov
scas
push
aaa
sbb
pop
scas
fiadds
add
or
xchg
mov
in
inc
fwait
adc
int
mov
movsb
imul
shl
jne
addb
ret
mov
mov
pop
scas
mov
xor
inc
push
or
call
pop
pop
and
mov
push
out
dec
hlt
in
pushf
movsb
xchg
scas
push
mov
and
pop
jbe
inc
sub
jb
pop
mov
cmpxchg
cltd
cmc
jg
sbb
pop
idiv
mov
test
shr
bound
scas
xchg
pop
or
out
lcall
gs
xchg
inc
in
ds
inc
int
fcmovnu
or
das
fcoms
cmp
and
scas
mov
jge
cli
add
jae
fldcw
testb
lea
roll
jno
and
and
ljmp
ret
mov
mov
mov
cwtl
push
cmp
xchg
aad
shll
dec
jmp
jo
test
aaa
sbb
adc
mov
mov
sti
sbb
loop
or
in
inc
pop
pop
jmp
dec
std
rcrb
mov
mov
lea
mov
roll
jne
outsl
mov
mov
jl
xchg
push
mov
or
lahf
jb
sub
sarb
scas
sti
xchg
push
pop
loop
ja
dec
mov
or
andb
pop
mov
mov
push
and
pop
pusha
test
xchg
scas
stc
sbb
outsb
std
pusha
int
mov
push
push
xor
mov
je
cmpsb
popa
test
mov
mov
stc
mov
cwtl
out
test
xor
adc
cwtl
mov
lds
sahf
cmp
jnp
scas
outsl
sti
call
idivb
adc
and
pop
ss
clc
push
jns
sahf
mov
mov
fadds
out
xor
inc
xor
inc
pop
mov
in
push
aad
add
pop
jg
fwait
pop
xchg
cmp
repnz
mov
xchg
sbb
sub
push
popa
enter
sti
cmp
into
lret
stos
addb
push
xor
pop
test
loope
inc
mov
jo
subl
loope
push
push
movsl
sbb
lock
lods
lods
mov
sub
xchg
lcall
inc
xor
sbb
inc
push
mov
in
xor
mov
int3
mov
mov
mov
inc
int3
stos
bound
xor
mov
and
dec
iret
sub
and
icebp
cmpsl
mov
scas
adc
ret
popf
inc
rcrb
lods
xor
dec
cmpsb
push
xorl
mov
cltd
mov
or
inc
insb
jp
scas
push
mov
lret
cmpsb
stos
xor
xchg
lds
mov
or
lea
rcr
addl
pop
jmp
into
fistpll
cmp
into
push
add
lret
fldcw
push
jo
mov
js
imul
xlat
leave
int
pop
and
push
push
sub
insb
fs
xlat
test
mov
outsb
popf
pop
push
push
out
adc
sub
inc
stos
and
int3
int
in
es
call
push
ret
filds
mov
call
stc
push
fdivrs
sub
sub
test
adc
rorl
insb
jle
lds
inc
inc
nop
pop
loopne
movsl
sti
inc
mov
popa
jge
enter
pop
push
lret
push
call
xor
loop
inc
in
adc
sub
cmp
aad
sub
inc
and
in
push
lea
mov
pop
pop
lods
or
xchg
xchg
push
cld
lcall
mov
jae
xor
mov
mov
add
jp
pop
out
test
inc
ss
jns
shr
jne
cmpsb
sub
inc
push
xchg
xchg
mov
call
or
mov
bound
subl
mull
ja
push
mov
lcall
je
jl
cmp
cmp
xchg
fcmovnb
addr16
or
cli
push
jg
pop
out
dec
pushf
ret
sub
mov
sti
es
dec
in
pusha
mov
es
shl
movsb
sub
sti
jle
sbb
sbb
mov
xchg
aas
xchg
pop
jnp
and
inc
sub
mov
push
into
sbb
insl
add
es
repnz
add
test
test
shl
cld
or
or
mov
lock
ret
dec
mov
push
aam
xor
lcall
test
lock
loop
jo
ljmp
mov
lock
das
movsl
mov
cmp
jnp
add
mov
mov
lods
sbb
mov
pop
mov
rclb
mov
xchg
mov
xor
mov
push
repnz
mov
adc
sub
inc
or
sti
decb
add
inc
scas
inc
fcoml
repnz
icebp
pop
xchg
iret
sub
pop
inc
mov
lahf
les
in
mov
shlb
mov
xchg
dec
inc
cld
ljmp
push
in
cmpsb
outsb
cmc
stc
ss
add
fildl
cmp
out
ja
cmc
enter
cmp
sub
insb
cmpxchg
mov
imul
adcb
push
addr16
aam
outsb
ret
into
dec
hlt
sub
clc
int
outsl
mov
fisubrl
jle
xchg
test
addb
adc
mov
mov
ds
data16
jp
js
or
mull
sahf
mov
adc
sub
add
and
jecxz
cmpb
add
or
sbb
or
test
jo
popa
enter
loopne
push
repz
scas
push
inc
or
fmuls
xor
push
es
dec
in
sub
mov
jp
pop
or
sbb
jl
ss
xor
mov
movsl
mov
dec
and
sarl
ja
jge
jnp,pn
xchg
push
jl
mov
xchg
repnz
mov
jecxz
push
movsb
or
mov
cmpsb
inc
xchg
jno,pn
inc
mov
add
mov
jg
lods
data16
jo
xchg
cmp
mov
inc
loopne
mov
mov
rorl
enter
aaa
jns
shrb
jne
icebp
jne
outsb
inc
xor
cwtl
mov
xor
loopne
pop
ficomps
popf
and
orl
mov
mov
add
repnz
ret
sub
xchg
mov
or
int
adcb
mov
ds
call
pushf
bound
cmp
and
call
in
clc
sahf
dec
or
jb
sub
inc
imull
popa
rcr
jo
add
pop
dec
inc
jns
inc
mov
outsl
dec
adc
sub
lods
arpl
push
dec
je
sub
call
or
xchg
dec
pop
scas
cmp
repnz
dec
insb
jecxz
pop
testb
ds
sub
out
repz
adc
sbb
sub
cmp
dec
sub
dec
fbstp
dec
sbb
sub
mulb
sbb
into
mov
pop
jle
jg
dec
rolb
sahf
mov
xor
cmpsl
scas
xchg
in
xchg
mov
daa
xchg
push
cmp
push
sarl
xchg
xor
or
imul
and
inc
dec
aaa
fwait
js
popl
ficomps
inc
in
jo
es
jecxz
addr16
inc
insb
rorb
jg
jp
sub
and
sbb
jg
mov
ja
mov
fidivs
int
push
pop
add
jno
mov
push
out
push
pop
lcall
or
cmc
cs
test
xchg
mov
add
adc
push
adc
mov
scas
sub
jmp
push
mov
std
jle
add
or
sub
adc
mov
cmpsb
int
imul
data16
stc
arpl
jle
sbb
sbb
addb
cwtl
pop
mov
pop
icebp
mov
rolb
mov
mov
cmp
mov
lcall
lret
lods
cwtl
jle
jmp
arpl
mulb
test
out
push
test
popa
dec
dec
cwtl
push
loopne
dec
xor
mov
xchg
fisubs
mov
cmc
add
loop
hlt
mov
cmp
unpckhps
cld
push
jecxz
imul
add
add
xchg
fnsave
jecxz
dec
fwait
mov
out
push
arpl
sub
jb
imull
jne
lods
pop
pop
jp
fstps
jo
jp
cld
data16
sub
sbb
inc
pusha
cmp
jbe
mov
inc
xlat
pop
fsub
ljmp
sub
inc
cmp
xlat
dec
notl
pop
repz
pop
jp
bnd
mov
clc
iret
lds
adc
aam
int
arpl
xchg
sbb
jg
lcall
dec
mov
mov
mov
out
jle
rolb
outsl
or
jns
hlt
xchg
repz
xor
dec
sub
sbbb
clc
inc
aas
xchg
sbb
pop
pop
mov
jmp
cmp
arpl
insb
and
sahf
out
push
ljmp
das
outsb
xchg
pop
xchg
test
pop
cmpsb
stos
popf
mov
sub
sub
mov
mov
push
fisttpll
std
sub
loope
sbb
in
data16
xor
xlat
outsl
mov
jns
fisttpll
mov
inc
sbb
ret
xor
sahf
gs
aam
mov
and
pop
dec
loope
push
fwait
dec
mov
mov
rcrl
cmp
push
pop
push
push
iret
xchg
xchg
decl
push
jns
pop
rorl
fstpt
cmp
mov
ret
push
or
lock
mul
dec
sub
inc
mov
sbb
sbb
mov
mov
out
mov
adc
adc
mov
test
fcoml
repz
jae
jp
adc
js
push
ret
xor
sub
jne
sub
jnp
xlat
test
scas
push
push
mov
addr16
std
cmpsl
jae
gs
dec
enter
loope
inc
xor
int
xor
cs
mov
push
mov
jae
jge
mov
xchg
jmp
jns
lret
lea
aad
out
outsb
mov
sbb
std
adc
aas
aaa
mov
mov
cmp
insb
sub
nop
xchg
cmpsl
pusha
xchg
cwtl
push
loope
mov
adc
psraw
gs
std
adc
push
mov
or
lcall
add
popa
jmp
call
lcall
mov
imul
pop
jno
and
cwtl
xchg
addr16
aam
jb
cltd
jmp
cmpsl
imul
aaa
or
jl
leave
jne
mov
xor
inc
lret
mov
out
or
or
icebp
add
push
sbb
xchg
aam
jns
shlb
cmpsb
sahf
inc
sub
ss
inc
cmpsl
lahf
cvtpi2ps
inc
in
or
inc
xor
or
push
rcl
xor
cmp
sbb
sub
inc
nop
inc
mov
mov
add
push
jge
sbb
jns
movsl
stos
sbb
pop
jp
sbb
push
fisubl
fldenv
push
cltd
dec
and
lods
in
insl
xor
xchg
mov
in
mov
lods
cmp
or
sbb
adc
stos
insl
sbb
push
inc
rolb
test
cs
push
mov
lahf
lahf
xchg
lods
push
push
fimuls
or
jmp
sbb
fists
ljmp
mov
cmp
fwait
sahf
fsubrp
les
xchg
call
imul
mov
mov
pusha
mov
popa
repz
int
dec
push
and
pop
scas
xchg
jbe
cmpsl
frstor
sti
inc
jne
lahf
xlat
pop
push
xor
pop
movsl
pop
addr16
outsb
xorl
pusha
xor
les
outsb
and
sar
mov
clc
pusha
push
lock
xchg
mov
xchg
mov
push
pusha
jle
lcall
sbb
push
out
pop
mov
lret
sub
rorl
push
jecxz
or
mov
add
jge
stos
jp
push
xor
sbb
outsb
rol
jno
sub
scas
push
inc
dec
or
cs
mov
xor
mov
insl
mov
cli
mov
cmovne
push
sbb
push
add
in
adc
shrb
stos
js
adc
dec
or
popf
dec
loope
mov
push
sbb
xchg
pop
faddl
dec
add
xchg
add
lea
stos
cmp
xor
into
pop
sub
test
adcb
mov
insb
xor
adc
or
xor
dec
pop
jno
mov
cli
dec
mov
add
out
mov
jmp
xchg
sbbb
inc
cmp
jae
push
imul
out
int3
xchg
xchg
sub
cmp
jmp
or
inc
push
rolb
adc
or
es
divl
push
ret
lods
inc
fcmovnb
arpl
rcrb
pop
lcall
inc
rorb
sahf
js
movsl
out
dec
inc
fldcw
inc
dec
test
mov
adc
in
mov
pop
and
mov
push
mov
shrl
xlat
cmpsl
inc
push
mov
mov
int
fmull
pop
jle
cmp
fisttpl
and
loop
sub
push
pop
lret
fldenv
cld
pop
idivb
xchg
mov
ljmp
data16
mov
add
cwtl
inc
clc
mov
cmp
jmp
pop
add
xchg
jb
fdivl
stos
inc
shl
push
or
mov
lahf
ljmp
push
add
sarl
pop
mov
sub
sbb
arpl
cmp
xchg
out
lcall
add
xchg
mov
aad
sbb
sub
and
cmc
stos
cli
mov
xor
jmp
rclb
jge
sbb
out
imul
lods
push
mov
das
rcrb
cli
or
add
and
inc
add
daa
xor
mov
cmp
repz
loope
orl
and
jl
jmp
push
cwtl
insl
fdivr
fdivrs
jnp
dec
lock
lcall
mov
cmc
adc
push
cmpsl
in
sub
mov
dec
adc
mov
add
outsl
cmc
sub
xchg
ja
outsl
add
jg
mov
data16
shll
inc
inc
pushf
mov
lds
ret
fdivrl
pusha
rolb
int3
sub
rcr
mov
adc
loop
or
adc
cmp
push
fldl
sahf
mov
push
pop
pop
xor
arpl
test
mov
pop
test
xchg
and
ret
mov
mov
push
jmp
jmp
stos
repnz
mov
mov
pop
jns
xlat
sbb
test
push
xor
in
jg
jmp
cld
sub
and
aad
mov
movb
icebp
mov
mov
push
lea
sti
mov
pop
icebp
into
push
icebp
sbb
mov
adc
out
cmp
lea
cld
push
jecxz
or
repz
outsl
in
xor
dec
xchg
and
lea
cmp
cli
mov
adc
sub
or
out
aas
dec
adc
arpl
inc
or
arpl
mov
jae
mov
psllw
mov
lock
push
mov
or
iret
dec
mov
scas
loop
mov
out
mov
dec
enter
ds
mov
and
in
fld
push
xlat
decb
jg
mov
xchg
insb
xchg
jnp
sub
push
or
into
jno
or
loope
adcb
call
je
test
outsb
push
xor
test
jns
cs
push
outsb
pushfw
sti
xchg
lret
mov
xchg
ds
into
ds
es
sub
es
in
loop
push
das
jmp
das
mov
int
lock
fidivrs
sub
movsl
call
enter
xlat
data16
mov
push
or
mov
push
iret
insb
cmc
rclb
lock
or
or
aad
sub
fsub
stc
ret
add
into
test
xor
cli
dec
mov
xor
icebp
leave
fs
scas
scas
orl
push
pop
testb
test
jb
lea
shll
imul
sub
add
xor
jmp
or
cmp
das
push
imul
xlat
lahf
adc
repnz
subb
or
push
xor
in
push
cmp
add
xor
hlt
jbe
xchg
add
ljmp
daa
stos
aam
cmpsb
sbb
mov
fs
mov
cmp
fnsave
jns
jno
rclb
add
mov
cmp
mov
jmp
add
sub
and
daa
leave
jge
or
js
push
test
outsl
mov
cmp
cmpsl
pop
push
shrl
iret
adc
imul
inc
movl
cwtl
cmp
stos
and
mov
clc
cltd
push
pop
add
imul
mov
push
cmpb
fnsave
push
push
movsb
les
call
xor
xor
out
daa
lock
and
add
into
adcl
pop
out
call
cmp
std
cs
mov
and
mov
movsl
ljmp
pop
sbb
int3
js
lret
push
pop
inc
inc
ds
push
mov
mov
call
mov
jmp
rolb
cmp
xchg
sbb
inc
fdivrs
and
add
add
jge
mov
pushf
mov
inc
iret
jne
loope
mov
in
cmp
adc
dec
int
jp
mov
sbb
pop
loope
aas
fildll
xorb
mov
inc
dec
adcl
pop
pop
loope
jb
push
ja
mov
or
es
jl
iret
dec
and
jnp
lea
or
sbb
aad
decb
lods
mov
ljmp
subl
movsb
add
sti
shrl
les
sub
xlat
subb
cltd
sbb
pop
mov
and
ret
stc
mov
in
cmp
in
and
dec
cmc
push
andb
imul
rcl
and
stos
mov
jb
add
inc
mov
cmpsl
adc
lret
mov
or
jbe
jp
and
repnz
pushf
dec
sbb
jbe
or
sub
sbb
nop
loop,pn
mov
push
pusha
adc
and
daa
test
jnp
push
dec
test
stos
mov
xor
jno
int
jb
pushf
sbb
adc
sub
mov
dec
mov
mov
push
sub
xor
mov
cmpsb
mov
sub
dec
xor
sbb
imul
or
imul
add
fnstenv
int
idiv
mov
imul
adcl
icebp
lea
hlt
and
mov
lds
les
adc
or
repz
dec
dec
stos
ss
lret
mov
xchg
ret
xlat
sbb
rcrl
clc
jge
les
cwtl
shrb
mov
out
jnp
daa
sub
pop
pop
lods
int
insb
fmulp
sub
jae
pop
xchg
cltd
xchg
cmp
inc
mov
jmp
mov
faddl
jmp
leave
cmp
insl
sub
test
test
mov
pop
int3
scas
movsb
xchg
jns
mov
cmp
xor
bound
pop
stos
outsb
cmp
jns
insl
mov
sub
shrb
mov
xchg
lahf
ss
loopne
outsl
imul
push
shlb
cmp
inc
mov
je
fcompl
jae
xor
cmc
pop
cli
mov
out
jb
lea
scas
cmp
mov
fsub
call
fsubrl
mov
push
cld
pop
cmp
fcoms
or
push
ret
xchg
fcmove
add
imul
sub
mov
mov
jbe
aad
into
adc
jmp
cmpsl
dec
inc
push
nop
inc
fdivl
pop
mov
in
push
sahf
pop
fildll
mov
cmpsl
jmp
mov
sbb
pop
js
lods
test
mov
dec
jnp
nop
es
je
loop
mov
loope
inc
in
jl
clc
push
je
sub
fs
sahf
cmp
enter
stc
xor
test
mov
push
rolb
push
cld
pop
outsb
mov
ret
and
xor
sbb
inc
jecxz
or
sub
cmpsl
cmovns
xchg
push
ss
stos
loopne
sub
xchg
loop
scas
cld
sub
pop
dec
mov
in
inc
stc
xor
push
lds
adc
sbb
dec
sub
cmp
or
enter
mov
push
pushf
fildl
jno
mov
xor
or
mov
adc
mov
xchg
sub
je
jg
js
and
inc
stc
jg
adc
jge
test
dec
mov
cmp
in
sti
aad
mov
sub
inc
xor
cmp
lock
pop
sbb
xor
xchg
sbb
pop
add
cmp
and
push
add
mov
push
js
vmread
aaa
mov
movsl
jb
daa
mov
inc
in
lea
mov
jle
test
iret
mov
mov
in
cmpsb
fstp
jecxz
push
mov
mov
jbe
das
sti
inc
notb
lods
dec
fimull
jo
cltd
scas
pop
cmp
sub
mov
adc
mov
inc
sahf
jae
outsb
int3
xor
out
lods
sbb
dec
push
xchg
dec
push
xor
ljmp
fldt
movsb
xor
adc
js
ljmp
jnp
push
cmp
inc
adc
jne
fbld
pop
int
cmp
mov
stc
ljmp
movsl
jbe
outsb
dec
add
iret
jns
sub
insl
xor
ss
enter
mov
jp
adc
fcmovne
push
pop
jbe
mov
adc
xor
add
xchg
std
cmpsb
push
mov
push
insb
adc
cltd
iret
dec
aam
adc
aam
or
popa
out
mov
xchg
hlt
out
nop
repnz
add
scas
add
aam
in
pusha
in
xor
jle
xchg
xlat
fidivl
add
or
ret
push
mov
mov
out
rcrl
mov
push
std
push
popa
stos
sbb
or
test
xor
cmp
and
mov
divb
loope
pop
push
mov
icebp
or
mov
lahf
sub
xchg
fnop
cltd
cmpsl
into
mov
jmp
xchg
into
sbb
xchg
gs
jge
jae
int
sub
push
mov
leave
icebp
aaa
imul
scas
mov
loopne
pop
sbb
push
dec
adc
sub
xor
sbb
xor
sbb
test
lock
lahf
aaa
out
loop
mov
mov
fstp
fldt
sbbl
inc
mov
push
xchg
pop
ror
mov
outsb
ljmp
adc
sub
fwait
mov
addr16
testl
dec
pop
int3
jmp
adc
sbb
push
sub
popf
out
cmpsb
push
or
insb
inc
mov
or
inc
cmp
fstps
scas
aam
out
fnstcw
rcrl
add
jne
popa
jne
lea
or
pop
sub
mov
jge
stos
inc
cmp
xlat
test
or
push
adc
lcall
sbb
scas
sub
in
add
add
sbb
dec
sbb
arpl
add
lea
jbe
adc
mov
adc
push
incb
lea
sbb
or
addr16
cld
leave
add
mov
es
fstpl
jg
bound
push
jl
mov
ljmp
rcrb
ja
jl
or
cltd
int3
and
mov
fdivrl
pop
repz
dec
ret
adc
push
daa
jle
out
pusha
mov
mov
mov
and
stc
mov
outsl
sbb
and
dec
int3
sahf
push
cs
add
lahf
add
sbbb
inc
repz
lcall
sbb
std
das
push
cmc
dec
imul
int3
inc
rcrb
lock
cmp
cmpb
fadds
push
mov
out
pop
and
adc
sub
pop
fiaddl
stos
mov
mov
inc
ds
lods
fs
mov
lods
pop
jbe
ljmp
stc
in
aam
int
pushf
add
test
jae
xchg
xor
subl
rcrb
int
aam
xchg
pop
ljmp
sub
stos
and
pop
push
jne
daa
jno
mov
xchg
loop
sbb
cmp
out
mov
push
mov
cld
dec
test
adc
or
push
add
fs
dec
scas
mov
enter
adc
inc
jle
pop
loopne
pop
adc
jge
push
xlat
jns
xlat
push
mov
push
mov
add
dec
xchg
xchg
push
stos
dec
sbb
pop
addr16
push
push
and
cmp
jnp
xchg
xchg
ret
bound
pop
sbb
test
rcrl
pop
mov
jae
aad
dec
pop
push
mov
in
and
push
xchg
inc
out
or
cwtl
inc
add
sub
mov
xor
dec
mov
enter
mov
or
shlb
mov
xchg
mov
sti
xchg
pop
loope
xbegin
inc
jnp
mov
loopne
ret
adc
xchg
mov
call
adc
andl
jnp
je
push
inc
in
dec
and
mov
xchg
inc
pusha
jl
test
pushf
rorb
xor
popa
imul
hlt
dec
out
push
xchg
clc
push
aaa
cmp
fldl
sub
and
ljmp
pop
andb
and
pushf
push
inc
inc
xchg
jne
shl
or
xchg
pop
in
pop
sbb
mov
adc
shlb
xor
into
sub
jge
cmp
sti
and
adc
jo
sahf
lods
xor
jl
mov
jo
imul
xor
push
pop
in
jns
ss
inc
in
cwtl
aas
dec
cli
adc
add
lock
xor
cmp
jno
lcall
pushf
xor
xchg
shlb
stos
aaa
nop
mov
movsl
adc
jns
adc
cs
and
test
flds
or
loop
pop
sbb
jbe
cld
push
shlb
add
dec
scas
push
mov
in
gs
push
lds
add
add
nop
push
sahf
ret
pop
lret
iret
xchg
dec
cmp
test
jle
jns
pushf
push
gs
xor
cmc
sbb
pop
ret
dec
lcall
push
xlat
push
dec
test
enter
and
mov
sub
mov
pop
mov
ds
pop
stos
loope
daa
je
je
mov
cli
and
mov
stos
xchg
test
mov
and
test
sbb
cwtl
inc
pop
inc
xor
cltd
sbb
jl
sub
je
pop
shlb
repnz
and
cmp
scas
fwait
jbe
rcrb
dec
inc
dec
xchg
xchg
shrb
out
adc
aaa
daa
push
mov
adcb
cmpsl
out
sbbl
or
sub
mov
mov
cmc
fimuls
sub
test
enter
add
jno
and
xor
push
add
inc
pop
in
loope
out
inc
movb
or
das
xchg
jg
cs
ss
arpl
add
inc
addr16
xchg
sahf
mulb
jne
push
shr
sub
aas
les
mov
fs
imul
mov
push
dec
sarb
jle
push
cmp
dec
push
bound
popf
mov
sub
lcall
cli
leave
lea
sub
insl
clc
fidivrs
shll
jnp
fisttpl
iret
dec
das
sbb
jo
lds
adc
add
jnp
and
push
cmp
pop
mov
pop
mov
mov
sarb
jne
aas
adc
jns
js
jp
jae
int
adc
test
or
in
cmp
sti
lahf
jo
jb
imul
orl
xchg
cmp
lret
jecxz
mov
pop
cmp
push
jle
cmp
or
sbb
push
mov
or
sbb
mov
adc
stos
dec
aaa
repz
sbb
stos
cmp
lods
in
mov
rcrb
je
fwait
jno
gs
in
nop
pop
jo
dec
xlat
jecxz
das
movsb
fistps
pop
ficoms
fisubs
fdivrs
push
dec
pop
out
push
cltd
in
pop
scas
test
jne
test
sahf
call
lret
xor
mov
std
stos
sbb
inc
aas
inc
roll
dec
jnp
pop
push
inc
fsubrs
cmp
or
pop
cmp
insl
cmpsb
sbb
ljmp
mov
jb
lret
xor
pop
mov
ljmp
es
aaa
jg
out
xchg
jae
xorl
dec
mov
inc
fsubrs
into
stos
in
dec
imul
mov
jno
test
lret
movsb
idiv
inc
dec
xchg
cmc
scas
addr16
mov
out
adc
gs
or
loope
mov
and
mov
rcll
and
xor
push
lock
pop
inc
sbb
inc
sbb
js
xchg
add
jns
xchg
icebp
inc
xchg
cltd
shr
aaa
insl
fnsave
push
into
mov
scas
rcrb
fldcw
fidivrl
ja
dec
ret
lcall
lods
scas
inc
pop
mov
iret
xchg
and
arpl
xor
dec
lcall
ds
insl
jmp
cmc
aad
or
cs
bound
aas
cmp
xor
add
cmpsl
ljmp
cmpb
fdivrl
push
sbb
outsb
mov
gs
cmc
or
mov
add
pop
push
push
cmp
dec
jp
inc
mov
pop
aas
into
mov
jle
lcall
pop
pop
push
es
imul
or
sub
ljmp
push
pop
jge
jnp
cli
jbe
sbb
mov
jmp
mov
das
adc
stc
ljmp
sbb
insb
jae
push
sbb
sub
ss
inc
icebp
fstpl
pop
mov
add
xor
pop
shr
aad
dec
dec
aam
and
scas
scas
inc
pop
icebp
enter
sbb
xchg
clc
sbb
pusha
mov
cli
jno
mov
imul
out
movsl
pop
push
mov
decl
popa
xchg
scas
mov
sub
push
push
sub
pushf
leave
xor
daa
adc
sti
fs
xor
dec
repz
gs
pop
xchg
in
push
mov
xchg
out
cmp
or
popf
push
pop
mulps
or
add
mov
loope
bound
and
stos
jo
adc
push
push
sbb
movsb
push
das
mov
dec
in
jno
xchg
sbb
pop
das
push
ss
jmp
jns
or
sarb
mov
pop
push
pop
and
les
inc
mov
out
mov
cmpsl
xor
sbb
pop
rcrl
loope
js
in
sbb
subb
jne
mov
sbb
ret
nop
adcb
xchg
jo
loope
sbb
jb
jbe
xchg
adcb
loop
dec
pushf
out
popa
mov
shlb
jle
pop
fs
push
lods
imul
xor
lods
and
mov
dec
mov
and
dec
sbb
dec
xor
jns
popa
mov
adc
int3
pop
pop
mov
dec
lahf
jcxz
loopne
inc
fisubs
adc
into
cmp
test
orb
outsl
jl
jmp
test
out
lock
lock
pop
dec
scas
es
inc
add
pop
leave
jg
xchg
pause
cmc
push
jg
dec
lahf
xchg
adcl
push
xor
sti
pop
mov
daa
cmovg
fisubl
ficoml
and
adc
sbb
movsb
pop
xchg
sub
ja
mov
mov
inc
mov
sub
int
mov
lret
fisttpl
xchg
jbe
pop
aad
push
push
cltd
push
xlat
es
rcll
in
lock
lods
imul
inc
fcmovu
xchg
jo
sbb
add
xor
mov
int3
lcall
xchg
mul
je
add
xor
test
pop
mov
stos
repnz
repz
adc
dec
shrl
pushf
pop
ja
pop
call
sti
sarb
aad
out
sub
add
cmp
pop
stos
push
push
subb
mov
mov
mov
push
inc
mov
out
adc
leave
imul
addl
pop
ret
repnz
and
ret
in
sbb
or
mov
jp
inc
fcmovne
lahf
movsl
xchg
cmp
lret
mov
jbe
cmp
mov
mulb
aad
jmp
sbb
adc
aaa
loope
jbe
dec
in
scas
loope
mov
in
push
add
cmpsl
pop
insl
shrb
fistpll
in
xor
ret
mov
sbb
jns
pop
pop
xchg
add
mov
sahf
fdivl
xchg
jge
imul
mov
mov
out
int
push
mov
std
rcrb
shl
add
daa
push
mov
mov
push
lods
cmp
inc
in
stos
push
add
daa
or
outsb
inc
loope
leave
jmp
sub
std
and
fs
fmul
dec
cmp
fisttpl
sub
or
mov
mov
dec
in
inc
mov
jl
aaa
push
pop
or
or
ret
xchg
dec
std
mov
mov
lods
push
lds
mov
pop
inc
cmpsb
loope
mov
sbb
lahf
popf
nop
aas
jecxz
nop
jp
pop
call
pop
mov
in
ret
inc
dec
ja
push
rcl
adc
xchg
popa
add
outsb
loopne
dec
pop
insb
mov
jecxz
xor
mov
xlat
sub
mov
push
movsl
mov
jnp
imul
adc
rcll
cmpsb
and
outsb
cmpsb
mov
in
or
cmpsl
imul
inc
cmpsb
addr16
popf
xor
mov
in
popa
lods
lcall
xor
push
adc
out
lcall
dec
mov
fsubrl
lahf
xchg
stos
ss
rcll
neg
movl
jg
push
fsubs
leave
push
test
push
xorl
or
daa
shrl
inc
jbe
push
dec
mov
mov
jns
adc
add
mov
push
sub
mov
inc
cmpsb
mov
loope
push
sub
pop
or
scas
sub
jl
dec
sub
mov
xor
push
daa
jl
push
cmpl
leave
lret
and
and
popa
pop
dec
inc
mov
shlb
stc
les
loopne
or
mov
or
jmp
aaa
lcall
ljmp
popa
sbbl
and
dec
sbb
loope
aaa
mov
ficoml
stc
pop
out
cmp
sbb
cmp
movsb
xor
fcompl
cmp
push
inc
and
test
call
cmp
incb
jl
leave
mov
adc
xchg
adcl
xor
mov
pushf
jp
lods
outsb
jb
leave
fisttps
nop
mov
jmp
js
shlb
ja
jle
pop
jg
jp
clc
xor
and
xor
loop
imul
or
dec
cmpsl
cmpsl
cwtl
cmovns
cmpsb
jb
push
mov
mov
sbb
mul
lret
das
stos
stos
sbb
cmp
cmp
xchg
arpl
pop
xchg
sbb
or
nop
mov
iret
sbb
insl
sbb
cmc
int
sbb
fwait
lods
lods
push
test
xchg
dec
fnstsw
push
jp
or
xchg
push
out
mov
jbe
jmp
sti
dec
push
cli
push
movsb
mov
sahf
stos
es
jne
clc
push
leave
hlt
loopne
push
loop
insb
dec
sbb
mov
pop
ja
fiaddl
pop
xor
je
sbb
inc
loope
cli
push
iret
mov
scas
dec
mov
xchg
lcall
lds
sub
cmp
mov
test
fdiv
mov
cmp
mov
inc
add
jns
arpl
pop
jg,pn
shll
das
mov
add
inc
jg
sub
imul
push
outsl
ds
repnz
cli
int
jae
ficoml
adc
inc
inc
cmp
insb
push
neg
clc
test
inc
rcll
push
push
inc
jle
or
int3
in
aas
ss
int
dec
adc
inc
jae
mov
rcrl
dec
or
fistpll
ror
inc
sbb
adc
mov
lret
mov
lods
orl
fcoms
push
lcall
aaa
bound
jg
xchg
dec
movsl
in
int3
aam
pushf
lret
xchg
jae
add
outsb
push
fisubl
cmpl
xchg
fidivl
mov
outsb
leave
lods
push
mov
popf
hlt
std
inc
and
xchg
sbb
inc
rorl
hlt
mov
lcall
mov
mov
push
add
dec
and
inc
stos
stos
pop
jmp
xor
pop
or
in
cmc
push
stos
pop
test
jecxz
mov
lock
mov
daa
std
es
push
fidivs
in
pop
sarb
testl
jo
movsb
jno
and
xor
ja
pusha
pushf
rclb
xor
xchg
imul
repnz
sbb
xor
aaa
js
dec
xor
std
scas
mov
stc
nop
or
jle
movsl
and
mov
and
xor
test
sbb
pop
mov
mov
cmpsl
into
fimull
test
or
or
inc
pushf
xchg
pop
sahf
pop
jno
fs
inc
subl
dec
mov
js
bound
pop
rcll
mov
xchg
cwtl
pop
shll
or
lea
jns
movsl
mov
ds
ss
ret
add
mov
leave
insb
out
imul
mov
mov
mov
cmpb
mov
adc
push
icebp
mov
sub
inc
and
jl
cwtl
sub
xchg
dec
cmpsb
jecxz
dec
jae
add
dec
inc
test
cli
out
inc
repnz
sarb
dec
sahf
ss
rcr
add
cmpsl
add
xchg
xchg
sahf
dec
int
orb
cli
inc
rcrb
gs
add
loopne
and
aaa
or
fstpt
push
xchg
sub
out
sbb
xor
cwtl
add
mov
stos
xchg
loop
pushf
pop
mov
inc
fwait
adc
out
mov
xchg
mov
fidivs
lret
mov
cmpb
pop
dec
mov
jecxz
out
paddb
adc
rcll
cmp
ret
jge
cs
in
push
scas
cld
cs
cld
test
mov
gs
xor
loope
mull
fcmovnb
andl
stc
xor
pop
pop
es
add
testb
fdivs
shl
shl
push
pop
jecxz
mov
mov
cmp
pushf
and
cmpsl
add
xor
lahf
push
movsl
adc
dec
bound
adc
shll
aaa
dec
lds
xchg
inc
mov
dec
sbb
lahf
aas
dec
jno
or
xor
mov
inc
ror
adc
in
hlt
ficoml
xchg
dec
jns
pop
fisubrl
sub
inc
sub
add
inc
out
mov
int
push
aad
fisttps
rcrb
outsl
rorb
lcall
jmp
mov
jae
cmp
sahf
sub
dec
fstpl
xchg
lods
xchg
sbb
and
fnstcw
js
out
hlt
push
ror
push
xor
fisubrs
ret
ficomps
outsb
jmp
mov
lahf
aad
je,pt
add
cmc
sub
pop
and
insb
sbb
jl
push
inc
jns
jmp
imul
outsb
cmp
mov
clc
inc
inc
xchg
ds
push
adc
fisttps
jnp
adc
inc
mov
hlt
movsb
jno
arpl
into
inc
fnstsw
subl
aam
xchg
cmp
adc
bound
fwait
fs
jb
ret
mov
fstpt
arpl
and
and
test
push
fcmovnb
jo
call
xchg
xor
xchg
sti
or
repnz
xchg
js
adc
leave
mov
sub
rcrl
lahf
dec
inc
movsl
mov
and
cmp
popa
int
dec
cwtl
xchg
incl
je
jecxz
pusha
jge
test
ljmp
dec
pop
sub
add
push
hlt
mov
fwait
int
clc
push
mov
mov
fisubs
std
xor
mov
jmp
out
cmp
mov
sti
cli
pop
and
xchg
mov
ja
aaa
fiaddl
in
pop
pop
pop
inc
clc
cmpsb
mov
sbb
sbbl
adc
pop
je
pusha
and
jo
push
fsubl
fimuls
dec
or
sub
xchg
adc
inc
scas
push
out
adc
cmp
sbb
shlb
adc
in
flds
xor
xor
mov
xor
sbb
jmp
sahf
add
popa
fidivs
mov
lods
aaa
imull
imul
jbe
out
jo
icebp
ret
in
das
mov
ja
popa
aad
scas
xor
sub
jns
sub
and
das
arpl
push
cmc
mov
mov
loope
pop
xor
insl
xchg
aaa
shr
out
mov
sti
jnp
and
cli
aad
xor
in
pop
outsl
push
dec
pop
repz
or
cmpsb
add
cmp
cmpsl
sbb
mov
in
jp
inc
or
xorb
inc
rcl
rcll
pushf
lds
les
mov
and
aad
inc
cli
sub
or
pop
pop
push
or
in
mov
mov
mov
call
or
in
enter
ret
mov
mov
xchg
mov
test
inc
les
aad
mov
rorb
std
nop
and
or
lret
sub
mov
xchg
and
aam
mov
sbb
stc
popf
mov
cmp
sub
int3
.byte
.byte
and
stos
mov
sbb
add
xor
sbb
sbb
jae
es
push
and
fidivrl
pushf
mov
push
ror
popf
fstpl
js
dec
mov
or
lea
mov
or
mov
xor
mov
aad
jg
fldpi
popf
outsl
cmc
mov
call
push
sarb
cmpsb
lret
cli
sbb
cmp
sbb
inc
push
xor
push
xor
cld
loopne
sub
rclb
push
hlt
pusha
xor
das
cli
mov
mov
push
push
mov
in
cwtl
push
sbb
pop
push
mov
adc
js
push
je
shr
idivl
pop
jne
sub
addr16
push
scas
gs
dec
inc
xchg
inc
lods
sub
inc
sub
xor
das
ja
stc
jnp
cltd
or
pop
push
mov
push
pop
cwtl
int3
jg
icebp
fisubrs
push
jb
ja
fimull
rol
rcr
movsl
cmpb
mov
adc
fistpll
cmpsl
outsb
ret
mov
add
dec
sahf
xor
and
push
pop
adc
sahf
xchg
loop
jae
xchg
dec
test
pop
cmp
mov
push
inc
mov
push
insl
lods
cmpsl
inc
xchg
and
xor
cmp
lock
xlat
das
loope
inc
pop
lods
push
out
adc
sbb
int3
jb
movsb
pop
bnd
pop
mov
xlat
out
loopew
inc
dec
mov
int3
adc
ficoms
es
mov
jo
call
lods
ret
xchg
insb
fsubr
xchg
cmp
pop
sub
scas
pop
rcrl
cmp
gs
pop
ret
pop
in
pushf
lcall
sbb
and
inc
push
mov
adcl
lahf
ja
mov
xchg
imulb
out
popf
add
cltd
inc
pusha
data16
outsl
adcb
sub
mov
or
or
inc
lock
ljmp
stos
push
cmp
sub
cmp
adc
sbb
fs
jl
xor
sub
daa
test
test
jp
pop
push
loop
scas
in
loope
test
jmp
fiadds
aaa
xor
mov
xchg
int3
mov
mov
xlat
fildl
std
push
loope
out
lods
cmp
into
icebp
clc
pushf
push
bound
ljmp
scas
into
lods
mov
sbbl
mov
cmp
das
dec
dec
repz
stos
cld
inc
ja
out
mov
icebp
dec
imul
cmp
pop
ja
add
outsl
call
xor
lret
jl
cltd
or
ljmp
cmp
adc
or
xchg
fbstp
pop
xlat
push
rcrb
icebp
sub
out
add
dec
scas
arpl
jb
test
fildll
xchg
sub
loope
hlt
call
test
aam
js
mov
fldcw
jp
xlat
jge
pop
jne
xor
dec
ss
addl
inc
sub
mov
xor
inc
insl
idivb
pop
and
mov
pop
ficoms
mov
sub
test
inc
clc
lret
movsb
arpl
add
pusha
into
and
mov
das
test
pop
inc
dec
cmp
push
popa
jae
cmp
enter
jecxz
in
pop
loope
outsl
out
je
popa
sub
arpl
test
jno
xchg
fdivrl
pop
fstpt
hlt
inc
ja
das
xor
mov
orl
out
or
jg
das
jb
inc
rorl
mov
jmp
std
mov
idiv
sbb
arpl
testl
scas
lret
mov
xor
and
xorl
adc
in
int
inc
nop
mov
leave
out
ja
lret
pop
and
sub
cwtl
ss
subb
mov
mov
lcall
lret
scas
or
xchg
add
pusha
or
leave
lcall
mov
mov
loope
inc
mov
ret
jno
std
cmp
jg
xchg
roll
movsl
lcall
jo
xor
addb
das
lods
xchg
push
pop
pop
sbb
xchg
xchg
and
loop
sbb
inc
xchg
cmp
leave
pop
subb
dec
adc
mov
out
inc
into
pop
mov
add
mov
sbb
repnz
sbb
out
mov
cld
popf
mov
cmpsl
lea
mov
lea
adc
je
add
adc
int3
pop
or
mov
addb
xchg
xchg
or
imul
cmp
add
add
and
mov
out
push
daa
mov
push
and
lret
xchg
mov
notl
lea
mov
fists
jecxz
xlat
aam
sbb
inc
fs
pop
jmp
insl
shr
and
mov
daa
sub
ret
inc
cmpsb
frstor
pop
stos
cwtl
mov
clc
mov
xchg
or
andl
add
pop
mov
sub
fstps
in
inc
stc
gs
cmp
sub
add
lea
mov
bound
push
jno
aaa
aaa
push
mov
xor
sub
lock
mov
pop
mov
push
loop
fidivrl
mov
lret
cmp
imull
pop
mov
dec
dec
xor
outsb
movb
in
movsl
andl
xchg
psubsw
lds
test
pop
movsb
jns
aam
ljmp
pusha
or
sub
lods
sub
in
inc
std
mov
out
cmpsb
cmp
ret
fsts
mov
fisubs
lcall
inc
inc
stos
lahf
xor
cmp
imul
or
and
xchg
inc
popa
inc
xchg
enter
and
call
inc
hlt
les
sub
inc
hlt
ljmp
adc
sub
push
xchg
data16
iret
mov
call
arpl
sahf
pop
jbe
mov
sbb
adc
and
sbb
mov
into
ss
xlat
pop
mov
sub
add
add
push
rcr
or
imul
xor
and
mov
gs
int3
inc
aam
gs
pop
inc
in
mov
jae
or
mov
xor
bound
inc
int
out
jb
xchg
int3
mov
shll
ja
push
and
ss
stc
cmp
sub
push
les
outsb
sti
mov
xchg
insl
in
std
aam
add
movsb
xchg
imul
pop
ret
imul
pop
rclb
std
dec
inc
cs
js
xor
popa
cmp
scas
je
mov
icebp
ffree
enter
lea
xchg
repnz
dec
fcoms
mov
push
pushf
movsl
adcb
pop
or
mov
ljmp
test
xor
pop
out
ljmp
imul
mov
mov
pusha
sub
xchg
stos
adc
sbb
sti
ret
insb
xor
pop
lods
aad
adc
fcmovbe
or
jp
sub
push
enter
call
cmp
cmpsb
ss
cltd
xor
mov
jecxz
jmp
js
mov
test
shl
inc
out
push
push
sarb
mov
mov
movsb
test
fstl
jno
fcomip
adc
test
aaa
xor
jo
sbb
xorl
iret
and
in
add
fdivs
dec
std
mov
cmpsl
xor
xchg
mov
sub
xchg
mov
stc
jmp
popa
les
add
fisubrs
clc
leave
fsubrs
push
mov
xlat
sti
je
out
roll
wrmsr
fst
push
clc
jns
outsl
in
jb
sub
call
ljmp
xlat
out
stc
inc
jnp
dec
jg
jp
iret
jne
nop
mov
inc
jno
dec
or
pop
dec
sti
push
cmc
in
jmp
and
in
lods
mov
adc
sbb
mov
flds
aam
idivb
sub
fwait
imul
test
cmc
xorl
push
icebp
in
or
cmc
inc
sbb
addl
shrb
leave
xor
cs
xchg
adc
leave
xchg
sarl
jmp
jp
arpl
sub
pop
jg
inc
xchg
mov
sbb
shll
cmc
lods
add
cli
lods
fildll
daa
loope
jecxz
mov
xchg
divl
xchg
or
cmp
cmp
sbb
clc
mov
cmp
arpl
adc
pop
ficomps
mov
pop
leave
jmp
and
lods
loopne
imul
adc
sbb
dec
arpl
dec
imulb
aaa
add
inc
je
pusha
push
push
pop
inc
test
es
cltd
jbe
sub
inc
xlat
inc
pop
clc
mov
fisubs
shrb
lcall
jbe
hlt
cli
cmp
xchg
pop
sbb
ret
mov
cmp
or
and
dec
push
cmp
push
cwtl
jne
sbb
xchg
inc
stos
sahf
lock
hlt
jb
fmulp
or
sbb
es
insb
scas
sbb
rorb
loopne
inc
dec
mov
dec
pushf
push
inc
sub
inc
mov
dec
pop
jb
insb
addr16
and
mov
ljmp
and
insl
leave
push
mov
sahf
cld
fld1
fdivrl
add
jl
js
pop
fcmovne
push
negb
adc
push
loope,pt
xchg
push
es
push
inc
sarl
dec
mov
xchg
mov
sti
jl
xor
sub
pop
jae
xchg
jbe
out
jl
shl
lea
add
cmpsb
xchg
and
popa
mov
jb
mov
jle,pt
dec
cwtl
sbb
lret
sbb
lds
pushl
and
jge
mov
adc
xchg
adc
nop
lds
pop
jae
cmp
mov
test
filds
mov
adc
push
push
mov
xchg
xchg
cmp
sub
mov
repnz
mov
les
mov
gs
jp
in
vpcmpgtw
setg
repz
dec
jg
lods
std
aas
jmp
dec
push
test
repnz
sub
jmp
pop
xor
subb
aaa
mov
or
pop
rorb
xor
js
sub
mov
sub
popf
aam
cli
fdivs
std
xchg
aaa
inc
roll
xchg
xchg
pushf
lahf
stos
sbb
dec
jp
pop
insl
push
inc
mov
add
jmp
jl
stc
loope
fbstp
xor
ja
rcl
sub
lcall
lods
xlat
and
mov
dec
dec
push
mov
push
xor
mov
es
rolb
push
outsb
nop
dec
inc
jl
jge
xchg
sub
call
cs
cmp
xchg
push
sbb
icebp
imul
lret
xchg
rcrl
dec
lods
jmp
dec
inc
cmp
lea
stc
pop
into
test
insb
fs
pop
int
mov
pop
inc
mov
out
das
add
mov
sbb
xor
adc
arpl
test
pop
mov
arpl
in
inc
pop
mov
ljmp
push
mov
fidivs
subl
pop
mov
aas
cmp
mov
fcmovbe
and
loop
pop
in
lds
aad
std
loope
out
enter
fidivrs
jle
in
call
mov
insb
xchg
js
rorb
addr16
add
js
int3
or
cmp
ret
iret
call
lea
ss
icebp
add
push
test
mov
add
clc
out
push
mov
mov
jmp
xchg
sbb
dec
outsl
push
push
jns
adc
aaa
aad
stc
test
push
int
xor
lods
push
jmp
mov
loope
dec
sbb
popa
iret
add
addr16
int3
addb
jle
dec
shrl
inc
jb
or
adc
cmp
out
mov
push
ficoml
lcall
mov
lds
jne
push
push
pop
jl
jle
lcall
mov
cmp
push
aaa
cltd
or
lahf
es
cmp
xchg
in
mov
les
dec
testb
arpl
repz
ja
sbb
cs
inc
subb
lock
mov
xchg
fisttps
pop
pop
leave
sbb
gs
xchg
jne
inc
xchg
or
push
add
jl
or
ja
xor
pusha
xor
cli
pop
and
movsl
xchg
out
mov
mull
dec
aad
outsl
push
cmp
lret
jecxz
push
data16
nop
cmc
pop
push
gs
xor
sub
xchg
lods
and
and
jbe
cmp
test
repz
dec
loopne
loop
jae
cltd
mov
pop
sti
shlb
adc
inc
or
add
dec
fldcw
sbb
mov
scas
mov
in
xchg
sbb
mov
hlt
jmp
repnz
call
or
xorb
sbb
das
clc
cmpl
cld
in
push
jns
ljmp
std
fcmovnbe
xor
xor
int
outsl
cmpb
insl
fs
in
push
push
lcall
xchg
dec
je
adc
ljmp
icebp
sub
rorb
add
lds
sub
push
lcall
mov
icebp
xor
imul
outsb
inc
cmpl
adc
push
fiaddl
fcomip
add
fadd
xor
cld
lods
pusha
inc
jno
xchg
or
daa
dec
fs
sbb
or
fisubl
mov
jg
pushf
outsl
fadds
cli
pop
xchg
dec
inc
iret
jmp
mov
ja
push
fcoml
outsl
call
jmp
push
lcall
or
bound
mov
movsl
or
call
inc
add
imul
out
call
mov
xchg
add
ror
leave
inc
pop
xor
gs
push
and
add
loope
psubsb
mov
lret
xor
mov
jecxz
push
push
insb
push
add
enter
jbe
sub
jno
jmp
fdivr
idivb
neg
lcall
loopne,pn
or
leave
loopne
mov
mov
fisttpll
inc
mov
or
fwait
pusha
call
mov
stos
test
ret
xlat
and
repnz
dec
data16
mov
jnp
xchg
enter
outsb
push
movsl
xor
dec
jae
nop
subl
aam
clc
add
jecxz
repnz
and
movsb
mov
orl
dec
out
cs
or
popf
cmpsb
xlat
popf
cs
jb
aas
xor
jmp
xchg
push
dec
dec
cli
jbe
aam
or
xor
scas
cs
add
push
nop
outsb
ljmp
sub
sbb
imul
xlat
mov
jl
enter
jno
cs
xchg
mulb
mov
lret
insl
popa
jmp
jmp
cli
jg
inc
mov
add
adcb
sarl
frstor
ret
mov
jbe
std
push
add
sahf
addr16
lds
cmp
add
fsts
daa
ret
das
sub
decl
adc
mov
rcr
subl
daa
mov
adc
mov
xor
adc
push
push
les
cmp
inc
out
xor
mov
add
jbe
xor
jecxz
xor
push
mov
cmp
or
mov
mov
push
fucomp
bound
stos
xchg
stos
or
icebp
mov
inc
bound
mov
popf
jne
fwait
adc
push
or
ss
out
outsb
cmp
mov
jns
add
and
insl
jbe
je
adc
pop
sub
call
pushf
mov
ljmp
cmp
or
adc
leave
inc
xchg
mov
pop
pop
xchg
pop
inc
and
mov
stos
mov
push
nop
out
add
mov
lds
mov
cwtl
mov
mov
test
loopne
stc
cmc
scas
inc
mov
imul
dec
push
js
aaa
dec
jp
dec
push
in
ljmp
orl
sbb
push
jle
lahf
int
jno
js
fmull
adc
inc
loope
mov
jp
movsb
mov
cmp
jns
in
pop
pop
add
fiaddl
dec
inc
mov
sbb
into
stos
adc
int3
add
shll
cmp
int
dec
test
icebp
loop
mov
les
into
fwait
xor
test
xor
mov
xchg
sub
icebp
pop
mov
fistps
rcrl
jne
cwtl
ss
in
fcmove
cmp
popf
push
jle
scas
xchg
fisttps
imul
rorb
loop
add
inc
sub
push
cmp
ss
or
imul
fadd
mulb
xor
jae
mov
ret
pop
aaa
stos
aad
push
addb
sub
mov
movsl
dec
add
dec
pop
aam
jbe
and
pop
pop
jge
mov
jp
out
push
les
jne
push
movsl
mov
xchg
movsb
ret
add
xchg
xchg
mov
aaa
jl
lods
sub
mov
jo
pushf
sbb
sbb
cmp
je
adc
push
lahf
ret
push
or
call
jne
xchg
jnp
jmp
cmp
push
adc
stos
sub
.byte
.byte
adc
mov
adc
add
mov
adc
popa
jl
out
pop
bound
cmp
mov
pop
inc
scas
dec
scas
jl
div
fcoml
aas
insl
imul
xchg
sbb
pop
fimull
clc
das
lret
jg
adc
test
lock
stc
leave
add
sbb
das
fwait
mov
ss
inc
mov
adc
int3
mov
dec
hlt
popa
bound
mov
lahf
adc
pop
into
mov
pop
adc
outsl
mov
dec
jge
stc
sub
cmpsl
fcoml
xor
pop
cmc
sbb
push
vpaddusw
mov
shl
imul
sub
cmp
and
jl
subl
mov
sbb
jo
jecxz
mov
xor
push
ret
dec
push
shlb
adc
or
adc
test
ficompl
jbe
xchg
pop
cwtl
movsl
das
and
jno
cs
inc
test
shrl
icebp
push
sbb
adc
mov
es
push
ss
stos
cmp
ja
and
hlt
sti
sbb
ficomps
outsl
aaa
sar
cmp
imul
in
in
jno
repnz
clc
sub
ja
and
or
xchg
jne
cld
sub
mov
pop
repnz
fiadds
lahf
iret
inc
jae
xlat
mov
mov
push
cwtl
or
mov
movsl
sub
cld
or
mov
mov
popa
pop
cwtl
pop
xor
loopne
repnz
pop
or
aaa
roll
cmpsl
push
test
xor
mov
gs
iret
push
jne
mov
xor
adc
or
arpl
dec
lcall
xchg
jb
repz
push
and
pop
push
std
xchg
inc
scas
mov
mov
es
aaa
add
mov
shrb
mov
jge
sub
lret
or
jge
scas
pop
outsl
leave
mov
push
mov
lods
sub
and
stos
adc
lcall
and
inc
inc
mov
sbb
xor
xlat
add
sub
cld
fdiv
hlt
rorb
add
sub
push
stc
mul
lcall
int
loopne
lea
mov
mov
push
dec
jno
cli
inc
jmp
insl
mov
cmpl
or
inc
push
xor
push
movsl
jne
jl
xchg
loopne
cmp
jne
and
repz
sub
sbb
or
cmp
ljmp
es
cmp
fadds
xchg
outsl
push
ja
add
mulb
push
adc
shl
pop
xchg
add
dec
imul
outsl
xor
mov
pop
add
in
inc
iret
clc
insl
dec
gs
out
aad
mov
push
push
jp
enter
adc
mov
mov
adc
gs
cld
je
fiadds
stos
sarb
push
cmp
push
movsl
mov
sti
mov
mov
jnp
push
arpl
or
addb
int
inc
jbe
cld
dec
xchg
and
jnp
fcomps
add
into
inc
lods
push
mov
push
adc
pop
xchg
ds
sti
cmpsb
dec
gs
mov
fucomi
sbb
adc
stos
xor
pop
and
pop
mov
aaa
adc
sbb
mov
nop
leave
outsb
jl
sbb
clc
fstp
mov
and
gs
sub
inc
loop
in
sub
jl
push
mov
jb
cmovb
pop
pusha
mov
add
sbb
and
jmp
xchg
jb
out
mov
pushf
mov
push
das
cltd
lds
add
loopne
mov
inc
pop
mov
dec
lret
mov
mov
xor
sahf
jg
lret
.byte
insb
.byte
add
add
pop
add
sbbb
add
add
add
addl
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
inc
add
dec
add
add
cmp
adc
shll
mov
sbb
mov
mov
sbb
mov
adcb
cmp
mov
xor
adc
cmp
call
cmp
push
ss
dec
xor
movsb
lds
cld
mov
or
jg
out
pop
aad
push
in
roll
paddb
jmp
imul
push
out
and
jno
pop
das
add
and
nop
stos
mov
sbb
arpl
imul
out
insl
jle
inc
xchg
loopne
cmc
mov
xchg
aad
hlt
pop
shr
xlat
dec
inc
mov
and
popa
jp
aam
add
mov
xchg
roll
jo
cmpsb
cmpb
fisubrl
sti
xor
in
xor
rcll
sub
scas
cltd
dec
hlt
xchg
add
dec
jp
arpl
movsb
or
fnstcw
push
test
mov
shrl
scas
fistpl
pusha
popf
bound
mov
scas
add
add
rcll
lds
push
int3
xchg
test
jecxz
andb
xlat
fsub
jbe
clc
inc
jno
popf
push
pop
sub
dec
lods
into
int
mov
mov
add
stos
jae
nop
mov
push
mov
mov
dec
rorb
nop
push
push
inc
xor
sub
movsl
sti
adcb
fnsave
pop
jno
dec
cs
inc
inc
sub
push
bound
pop
sbb
in
jno
or
xor
ror
pop
push
and
fadd
stc
es
pop
scas
jg
fwait
pushf
adc
and
dec
xchg
outsl
pusha
mov
add
scas
push
xor
dec
push
mov
std
insb
je
or
mov
rorb
jno
mov
in
xor
add
xor
pop
loopne
ret
mov
lret
push
cmp
mov
test
xchg
sub
bound
xchg
scas
push
and
outsb
aam
adc
push
sti
lahf
frstor
or
add
and
inc
pop
gs
movsb
jne
cmp
insl
sahf
xor
inc
pop
push
sbb
dec
das
jmp
xor
mov
and
add
je
sub
and
push
jmp
jle
in
imul
mov
sarb
std
mov
mov
sub
jb
fdivs
xor
push
div
xor
repnz
sbb
inc
test
int3
or
adc
mov
inc
cmp
dec
jl
test
into
pop
popf
sub
pop
loop
and
lock
adc
out
scas
pushf
push
mov
lds
call
lret
repnz
sub
inc
iret
xlat
ja
mov
dec
push
push
push
andl
inc
cmp
addr16
sub
sbb
cmp
mulb
adc
leave
adc
pop
push
sbb
fwait
pop
scas
pushf
movl
jg
mov
xchg
fdiv
mov
jns
lea
sbb
ds
andl
lahf
ret
mov
test
pop
bound
adc
jecxz
fs
out
push
pop
outsl
push
fdivrs
mov
fistl
pop
adc
jnp
stos
push
cmp
enter
sub
data16
rorb
xor
call
dec
loopne
repnz
nop
cmp
cmp
aas
jns
pop
sub
cltd
mov
fisubs
arpl
or
mov
ret
addl
iret
mov
pop
lds
mov
std
call
movsl
fistl
stc
mov
push
or
sti
and
jge
push
inc
sahf
inc
add
inc
fucomip
test
mov
push
sub
add
cmc
test
dec
push
add
sbb
add
and
xor
fsubrs
fbld
aad
dec
push
cmp
push
outsb
js
popa
cld
repnz
aas
mov
aam
aaa
sub
in
dec
in
push
or
mov
aaa
int
push
aad
mov
xchg
rol
cmp
inc
jnp
pop
inc
mov
aaa
mov
xchg
jl
pop
repz
negb
cwtl
inc
inc
xchg
outsl
add
fidivs
inc
mov
mov
data16
add
xchg
mov
lcall
inc
mov
sub
sub
lds
leave
outsl
adc
dec
negb
nop
mov
xchg
jl
and
pop
dec
repz
pop
les
cmp
and
push
push
mov
daa
rcl
movsb
iret
roll
mov
pop
movsl
and
lea
mov
lock
loopne
xchg
dec
xor
test
and
stos
sbbl
push
jb
arpl
lret
pop
mov
mov
mov
mov
xchg
mov
adc
ret
cmp
call
sbb
inc
test
mov
dec
and
push
mov
pushf
je
sub
dec
xchg
mov
inc
shlb
stc
mov
sbb
and
lods
into
sub
xor
jae
scas
mov
sti
xor
lahf
xchg
cld
sub
inc
adc
sbb
adc
cmc
cwtd
inc
adc
pushf
mov
addr16
sbb
or
fists
faddl
ss
xor
test
jb
xlat
mov
sub
cld
in
inc
mov
lahf
and
sahf
test
mov
or
ss
mov
cmp
or
pop
mov
xor
sbb
and
out
mov
iret
arpl
cli
std
imul
cmp
cmp
push
cltd
jb
xor
jmp
in
xor
andb
add
xchg
fsts
push
cmp
push
cmp
std
faddp
jl
pop
testl
out
mov
and
sbb
jno
push
mov
mov
fldenv
sahf
fcomps
mov
aam
push
sbb
xchg
mov
test
test
retw
bound
mov
loope
inc
bound
scas
add
xor
gs
pop
pop
pop
clc
mov
leave
sbb
mov
adc
in
in
jge
jp
dec
sbb
adc
cmovp
add
addr16
sub
pop
mov
jne
mov
cwtl
cli
jne
fstl
mov
push
sti
je
inc
and
dec
arpl
inc
xchg
sbb
mov
mov
sub
xchg
shll
mov
scas
pusha
loop
mov
xor
roll
pop
out
inc
aas
jmp
pop
add
fcoml
push
mov
arpl
sub
sti
push
xchg
dec
jne
les
push
sbb
pop
lret
mov
fsubrs
ret
lahf
scas
les
jo
push
or
push
and
insl
movsl
int3
rolb
mov
sbb
cmpsl
sub
sbb
pop
pop
sti
add
push
push
ffreep
adc
xor
arpl
out
mov
roll
hlt
out
jo
jbe,pn
xor
pop
nop/reserved
dec
fsubrs
and
jg
push
imul
mov
orl
inc
pop
sbb
ficomps
sbb
push
xor
arpl
push
jbe
sbb
mov
leave
test
je
xor
outsl
ret
mov
sub
notb
adc
mov
and
mov
outsl
jg
les
movsb
std
pushf
dec
enter
subb
comiss
jae
pop
popf
scas
add
mov
jns
jecxz
mov
mov
jb
xchg
mov
aas
negb
adc
int
adc
xchg
push
sub
fidivrl
inc
test
je
loop
or
gs
pop
repnz
repz
leave
jb
push
cmp
cmp
adc
mov
cmp
and
xor
fucomip
mov
xor
movsl
mov
dec
adc
lock
divb
jmp
jle
stos
into
shll
mov
jns
push
addl
push
add
lods
adc
or
mov
and
sarl
sub
lods
iret
dec
daa
test
pusha
nop
sub
into
mov
push
add
and
bound
and
pusha
sbb
inc
int3
inc
imull
sub
lods
in
fiadds
imul
push
xchg
pop
xor
adc
jecxz
push
pushf
inc
push
xor
aaa
or
icebp
inc
mov
movsl
push
enter
push
incl
sbb
shr
clc
test
cmp
insb
subl
cmpsb
pop
xchg
fisubs
jecxz
dec
int3
roll
sbb
orl
sbb
cmp
xchg
out
push
or
add
push
lock
jl
fcoml
nop
jecxz
sub
leave
push
das
orl
jle
fsubrl
fs
jnp
sahf
dec
mov
or
and
mov
xchg
aaa
jb
jge
cmp
xor
cmp
jbe
out
lods
mov
mov
mov
push
pop
xchg
mov
aad
or
pop
mov
rcrb
mov
push
mov
sti
aas
outsb
sbbl
pop
enter
ja
seto
jne
add
aaa
repnz
lea
lods
push
pmuludq
mov
mov
std
push
xor
icebp
aam
mov
sub
fisttpll
push
pop
lcall
movsb
enter
xchg
jmp
cltd
xchg
jecxz
insl
fcoms
mov
pop
imul
imul
push
xlat
outsb
lahf
sub
rol
ja
test
out
addr16
inc
xchg
sahf
nop
pop
pusha
in
sbb
sub
out
push
cmc
cmp
aas
ret
bound
bnd
leave
lods
rorl
stos
ds
push
dec
mov
jne
inc
nop
dec
adc
rcrl
fwait
cltd
sub
divl
mov
push
repz
shrl
out
test
test
js
jmp
in
stc
sub
jo
imul
jnp
icebp
pop
pop
add
lret
std
mov
push
jecxz
int
jle
pop
fdivs
push
xchg
mov
inc
cwtl
push
push
pop
jl
cmpl
jbe
dec
fistpll
adc
leave
out
addb
sub
outsl
pop
mov
les
pop
jnp
sub
loop
js
outsl
xchg
ljmp
sti
lahf
push
fucomi
fstpt
mov
in
inc
repnz
xchg
lods
xor
cmp
ss
pushf
lcall
daa
dec
or
pushf
fs
xchg
data16
test
inc
or
out
std
data16
push
jo
shlb
and
out
add
out
mov
jl
aaa
imul
and
sub
sbb
mov
dec
arpl
or
into
mov
ja
xchg
test
mov
jae
daa
mov
movsb
sub
cmp
aas
addr16
jecxz
jbe
cmp
or
ficoms
jno
sbb
jbe
test
das
sbb
in
bnd
cmpl
pop
ret
daa
mov
push
xchg
pop
out
mov
repz
js
fistpl
xchg
push
lea
xchg
in
cld
sahf
pushf
xchg
sbb
sub
pop
and
inc
pop
lcall
lret
pusha
jge
call
leave
scas
lcall
inc
ja
sbb
aad
dec
scas
pop
aaa
imul
pop
test
mov
xchg
test
in
cmc
cmp
dec
lock
add
jmp
popa
cmpsw
aas
xlat
jns
iret
sti
mov
hlt
test
adc
in
subb
sub
xchg
pop
pusha
popf
push
pop
add
cmp
cmp
mov
loope
sbb
lahf
mov
push
xchg
sub
mov
mov
test
lret
aam
xchg
jbe
mov
inc
repnz
push
shll
pop
jmp
outsl
int3
leave
fstp
inc
sarl
push
lock
cmp
call
sti
inc
jp
xlat
xlat
test
xchg
mov
stos
data16
and
mov
pushl
in
fwait
or
int3
adc
andl
subl
mov
or
aas
ss
fstps
mov
jmp
jmp
in
rorl
xchg
pop
cmpsb
insb
adc
gs
sub
jmp
pop
xchg
dec
lret
lea
xlat
pop
call
ds
push
daa
into
cld
push
mov
ss
mov
push
sbb
cld
and
mov
cmp
push
jmp
cmp
push
pop
fucomp
popf
xchg
inc
inc
mov
shlb
xchg
stos
xchg
sub
in
je
jns
ror
stc
imul
mov
mov
data16
sub
cmp
movsb
fs
adc
sbb
jno
mov
lods
ret
push
pop
pop
adc
jns
mov
in
pusha
lret
stos
sbb
rolb
pop
inc
add
inc
insl
pop
and
pushf
xor
iret
adc
pushw
aad
mov
xor
mov
lcall
out
lret
jl
cmp
cmp
test
or
test
in
lret
stc
push
cmp
shll
mov
sbb
pushf
fists
out
jno
adc
mov
mov
pop
jge
add
test
bound
xchg
sbb
aam
gs
xchg
lahf
fisubs
push
das
sbb
in
mov
or
mov
loope
fwait
jle
hlt
inc
stc
jg
dec
in
pop
jecxz
inc
xchg
pop
fdivrl
je
imul
jl
int3
push
adc
out
push
popa
xchg
dec
xor
outsb
enter
xchg
test
and
imul
out
push
jecxz
outsb
jno
stc
pop
add
cmp
ja
arpl
das
inc
jno
aaa
pop
xor
mov
out
push
cmp
push
xlat
arpl
pop
jb
daa
fiaddl
rorl
jp
mov
mov
mov
icebp
lret
mov
pop
sub
scas
jl
mov
or
stos
aad
imul
and
test
xor
cwtl
inc
add
pop
icebp
cli
jp
lods
lods
pop
lds
push
cmp
outsb
mul
mov
jmp
sbb
add
xchg
imul
mov
clc
roll
mov
pop
mov
adc
fsubr
mov
lret
mov
inc
aas
vphaddbw
push
mov
sub
rclb
and
pop
mov
pop
scas
movsl
out
cmp
mov
mov
mov
lods
aam
jmp
mov
movsl
repz
fmull
adc
and
les
rolb
pop
inc
fiadds
lcall
sbb
and
mov
test
iret
add
fs
add
popf
ret
lcall
cltd
jle
adc
call
aam
xchg
push
dec
adc
ret
out
add
and
shll
jl
ja
jecxz
bound
sub
aas
andb
mov
mov
nop
sub
les
sar
pop
leave
adc
imul
sbb
sub
fld
insb
push
pop
and
sbb
loope
js
notb
cmp
sti
scas
pop
sub
pop
pop
cmp
mov
sbb
pop
in
pop
enter
sbb
or
test
subb
inc
orps
fcoml
into
loope
lds
mov
std
xchg
jae
mov
mov
aaa
xor
pop
mov
rorb
lock
sub
dec
adc
aam
sti
inc
shll
dec
in
lcall
mov
sahf
gs
sub
add
inc
xchg
pop
push
mov
or
in
pop
ds
add
sub
fdivrp
loopne
push
pop
mov
arpl
mov
mov
push
cmp
inc
int
lret
jmp
add
or
cmp
gs
mov
adc
mov
mov
addr16
jno
ja
jmp
cmp
xor
int3
jo
sbb
addl
aad
add
sub
jo
in
jno
xor
lock
jb
icebp
in
jmp
hlt
push
das
mov
xchg
cli
add
and
andl
rcrl
loope
loopne
sbb
clc
ljmp
and
xor
jb
sbb
pop
jg
xadd
inc
mov
lods
mov
mov
pop
or
out
xchg
int
js
sti
or
add
aas
or
test
xchg
loopne
iret
neg
cmp
pop
mov
or
jp
pop
jae
push
jp
sub
mov
into
insb
fnstcw
inc
jle
subb
loopne
repnz
ja
fwait
insl
mov
mov
jb
lods
stos
inc
cmpsb
repnz
sbb
sub
imul
out
insl
adc
out
or
ror
out
cmpl
dec
push
jmp
aad
sbb
aaa
psubsw
or
adc
gs
push
adc
and
sub
pushf
mov
gs
test
jae
xlat
in
cmp
inc
fcomip
pop
jecxz
dec
loop
ja
int3
hlt
mov
out
into
out
sti
pop
int3
cwtl
xchg
mov
sub
cmpsb
push
pop
test
pop
add
test
js
pop
xor
in
lcall
push
add
mov
jo
or
out
cmpb
nop
pop
lock
jg
xor
stc
insb
adc
cmc
push
fadds
pop
int3
fistl
xchg
inc
in
push
int3
add
fs
mov
mov
push
mov
aaa
jne
and
adc
push
and
mov
popf
loope
sub
jmp
js
aam
mov
daa
sub
cwtl
lock
in
cld
stos
xor
push
and
sbb
pop
aad
dec
cmp
or
pop
add
add
es
ds
ret
and
xor
aad
mov
inc
cmp
sar
lds
push
mov
movsl
sub
in
je
faddl
xlat
ficomps
mov
jg
movsl
sti
and
mov
sub
rol
jmp
cmp
add
jae
mov
out
enter
pop
clc
push
call
test
pushf
sbb
gs
add
mov
sub
mov
rorl
mov
mov
mov
mov
sub
dec
test
push
arpl
ss
xchg
negl
mov
mov
or
test
pop
jbe
jns
adc
xor
enter
cmp
dec
pop
call
repnz
scas
sub
divb
mov
jg
cmc
bound
cmp
sbb
mov
pop
scas
cmc
in
mov
addb
stos
aaa
mov
jmp
outsb
lret
bound
sub
iret
cmpsb
daa
or
xchg
xchg
or
pop
cmp
dec
in
enter
inc
jle
cltd
or
mov
pop
push
mov
dec
inc
xor
nop
outsb
dec
push
in
lahf
mov
adc
cwtl
inc
cmc
ficomps
sahf
shll
insb
sbb
pushl
push
jo
sub
sti
mov
fucomi
adc
mov
stos
addr16
sbb
cs
lock
nop
lret
jne
addl
lret
sub
popf
inc
out
mov
flds
sub
popa
mov
repz
les
push
xchg
sub
sbb
jmp
adc
jbe
icebp
pop
arpl
fs
lods
adc
push
popa
and
sbb
mov
mov
inc
push
pop
xor
ds
inc
aam
test
jmp
inc
sbb
sbb
fldl
and
fiadds
jo
insb
ljmp
dec
daa
arpl
and
lods
in
sbb
pop
repz
test
dec
pop
xorb
mov
mov
adc
addr16
sub
enter
call
mov
inc
mov
and
bound
loopne
mov
add
and
js
int3
int3
sbb
mov
push
mov
or
mov
add
push
cmpsl
dec
lret
imul
out
sub
push
xchg
sub
xchg
pop
cwtl
popf
pop
push
dec
fisttps
cmp
cltd
fistpll
pop
ds
push
loopne
and
xchg
loope
std
sub
test
lret
mov
data16
lea
dec
inc
pusha
gs
out
ficoml
cmp
rcll
push
sbb
push
test
insb
pop
push
les
add
sti
add
cmp
test
cltd
jmp
mov
pop
mov
movsl
or
mov
add
subb
or
rol
mov
enter
or
les
add
xchg
cmpb
mov
mov
xchg
stos
les
clc
cltd
ret
push
fimuls
jae
arpl
repz
call
push
or
mov
addl
decb
bound
fsubrs
xchg
adc
andb
mov
std
sub
cmc
test
adc
ljmp
or
dec
es
sahf
mov
sbb
or
loop
xchg
mov
lret
movsb
pop
out
mov
mov
add
addb
frstpm(287
daa
cmpsl
push
rclb
mov
cmp
push
or
add
cli
repnz
cmpsb
inc
cltd
xchg
mov
in
in
in
push
scas
sbb
cld
out
int
nop
mov
ja
push
outsw
in
out
out
insl
mov
xchg
jge
popf
mov
leave
icebp
mov
and
in
push
hlt
outsl
mov
loop
jae
dec
mov
fsubp
mov
dec
rcrl
imul
es
push
cwtl
sbb
pop
sti
mov
mov
and
dec
fstpt
push
push
ljmp
fbld
insb
je
mov
test
jp
pop
jp
xor
iret
xchg
mov
addr16
cmp
out
in
aas
mov
and
lea
jg
loopne
dec
das
ljmp
jmp
andb
mov
lahf
dec
rclb
ret
cld
inc
push
test
inc
cs
dec
xlat
mov
jg
mov
push
jg
xchg
repnz
ljmp
cmp
xor
mov
in
pop
adc
sub
movsb
and
repz
ja
mov
jns
stos
dec
movsb
aas
cmpb
aam
pop
lea
push
mov
out
aad
fs
pop
and
subb
nop
mov
les
and
in
scas
pop
addb
xchg
rorl
mov
adc
movsb
xchg
mov
pop
add
loope
loope
jae
sbb
aad
inc
or
push
or
ljmp
mov
or
sbb
or
xchg
sbb
imul
inc
outsl
mov
and
push
lock
cmp
mov
xchg
pop
jnp
jo
push
rcrb
push
pop
dec
test
adc
scas
sbb
ror
cmp
mov
fucom
mov
mov
int
mov
add
out
adc
enter
outsb
cmp
and
dec
sti
jmp
arpl
pushf
inc
jns
pushf
pop
out
les
insl
dec
jno
dec
imul
push
sti
ja
idiv
push
dec
in
lds
pop
sbb
sahf
cmp
jecxz
adc
pop
iret
and
gs
movsl
fsubs
idivl
mov
loop
push
mov
pop
xchg
hlt
mov
rcrl
pop
xor
fdivs
adc
incb
inc
mov
ds
lret
daa
mov
pavgb
in
mov
mov
mov
and
xchg
data16
adc
pop
rcll
std
sub
dec
lahf
push
fadds
mov
push
mov
add
scas
roll
lahf
sbb
jns
mov
dec
jl
ljmp
shrb
dec
jae
xchg
jge
addl
fisubrl
sbb
ror
shrd
and
clc
inc
jl
lods
addr16
outsb
jne
ret
inc
dec
inc
insb
shrl
push
adc
jle
fwait
mov
inc
mov
and
dec
dec
add
inc
pop
pop
pop
adc
hlt
insb
ss
in
sub
fs
in
clc
mov
test
sbb
add
sahf
iret
aam
pop
jae
sbb
inc
cmc
rclb
rcrb
enter
gs
pop
test
pop
jge
dec
pop
xchg
dec
cmp
test
sub
mov
sub
leave
rcrl
push
insl
mov
je
out
fidivrs
iret
cwtl
cmp
loopne
pop
in
notb
pop
pushf
ljmp
adc
out
adc
dec
stos
and
mov
pop
pop
lcall
movsb
fadd
fs
loop
mov
mov
push
into
sbb
pop
lahf
sbb
mov
jl
push
outsl
jo
test
ljmp
std
fwait
aad
xchg
jae
cs
push
xchg
and
shlb
mov
pop
mov
int3
push
mov
mov
addr16
int3
xchg
pop
mov
jne
xchg
mov
fs
sub
divb
inc
jl
inc
repz
push
repz
pop
andb
fsubrs
jae
add
leave
push
jg
jg
pop
sarb
inc
mov
cwtl
repnz
out
lock
mov
sub
cmp
push
jge
bnd
jp
mov
jo
rcl
sti
into
mov
pusha
movsl
adc
pop
mov
dec
xlat
sbb
in
roll
or
lret
mov
popa
mov
repnz
adc
outsl
pop
cmp
sub
push
out
addr16
idivl
fdivrl
mov
scas
out
jne
pop
aaa
inc
je
sbb
int3
inc
enter
lods
mov
or
mov
outsl
ja
push
jb
or
fwait
sub
dec
sahf
pop
sbb
insb
stos
mov
push
pop
cmp
dec
and
int3
push
xchg
add
xor
push
daa
js
out
inc
je
cs
lret
test
dec
mov
aas
test
addr16
pop
push
ficompl
dec
lret
and
repnz
iret
xor
test
test
ds
repnz
std
mov
adcb
shll
test
cmp
inc
jo
nop
pusha
jmp
scas
mov
pop
test
imul
bound
push
subl
lds
cwtl
fdivrs
add
inc
or
in
pop
pop
loop
daa
push
fbstp
out
test
cmp
mov
cmc
cmp
popa
js
lahf
cmc
xchg
std
push
ja
sub
xchg
mov
mov
and
cltd
xchg
lret
pop
shll
in
in
icebp
xlat
sub
test
lds
lods
ficoml
sub
loope
mov
jnp
mov
or
inc
stos
dec
xorb
subb
mov
jecxz
aaa
pop
aam
mov
pop
out
gs
fstl
xchg
mov
scas
pop
or
pop
lods
sbbl
hlt
movsb
lret
mov
pop
cmc
ja
adc
pop
imul
add
jg
fidivl
jb
aam
mov
mov
fidivl
mov
pop
inc
jg
andl
inc
push
test
loope
in
adc
leave
pushf
add
lret
xor
xchg
add
push
pushf
stos
sbb
shrb
test
pusha
adc
std
cmp
cld
pop
mov
or
insb
cmp
xchg
mov
movsb
cltd
push
xor
jmp
xchg
mov
sti
movsb
mov
dec
xchg
ret
inc
xchg
add
sti
mov
mov
adc
stc
xchg
sub
push
inc
mov
and
dec
mov
cltd
dec
jmp
cli
std
dec
mov
daa
xchg
pusha
dec
call
fldcw
pusha
and
gs
pop
out
push
dec
xor
dec
fs
sub
jl
push
lahf
adc
int
clc
pushf
fsts
icebp
adc
jge
into
and
add
adc
aad
mov
and
mov
fwait
inc
loopne
inc
push
dec
or
and
push
lahf
or
movsb
or
sub
push
mov
pop
pop
cmp
fs
out
hlt
mov
mov
push
push
push
pop
dec
inc
push
mov
int
enter
imul
xchg
mov
call
clc
push
fldt
inc
dec
dec
repnz
setae
popa
xchg
ljmp
mov
or
cmp
sbb
dec
mov
popf
addl
sbb
sub
clc
outsl
inc
or
adc
push
dec
adc
orb
mov
dec
int
in
stc
ds
mov
mov
sbb
mov
jmp
fmull
in
adc
sub
mov
xchg
sub
fidivs
pop
mov
adc
lcall
pop
adc
inc
mov
cld
xchg
cmpsb
lods
data16
xor
pop
jo
js
or
in
or
add
movsl
dec
imul
fwait
shrb
je
inc
into
pop
sub
mov
out
aas
mov
imul
sti
paddw
mov
ret
rcrb
sub
fwait
popf
rclb
xchg
dec
mov
ret
js
subl
push
inc
movsb
mov
xchg
mov
out
ret
inc
adc
int
xchg
sar
mov
jge
test
cmp
or
xchg
inc
jecxz
andb
mov
gs
push
cltd
sub
cmp
inc
mov
pop
xchg
cmp
insb
test
mov
sbb
ret
mov
int
sub
repnz
dec
aaa
fcoml
inc
jmp
enter
pusha
sub
pusha
pop
sub
cmp
arpl
sbb
in
lock
and
ljmp
clc
lock
xchg
jle
fbstp
jecxz
lods
movsl
jle
and
jae
mov
push
rcl
sub
jp
xor
dec
out
adc
fnsave
cmp
test
pop
pushl
jo
loopne
add
jge
ds
int3
out
sbb
push
and
pop
cmp
pushf
mov
dec
fildl
in
test
inc
xchg
sub
js
fsubs
adc
into
jle
adc
js
outsl
lcall
mov
mov
dec
hlt
pop
fmuls
jnp
mov
movsb
mov
pop
movsl
adc
pushl
xchg
sbb
and
movsl
mov
sub
mov
add
mov
aas
mov
scas
lods
dec
and
test
fs
jg
push
push
nop
dec
sar
outsb
mov
push
adc
jmp
cmpsb
dec
mov
inc
push
add
pop
enter
xchg
test
pop
pusha
xchg
fbstp
mov
xchg
shll
shll
fcomps
add
out
inc
sbb
xchg
mov
jle,pt
cmpsb
bound
xchg
fldl
outsl
test
jbe
mov
xor
js,pn
popf
pop
pop
xchg
add
cmp
inc
inc
lods
insb
fistpl
sbb
push
gs
mov
outsb
test
inc
mov
xlat
adc
dec
out
out
stos
pop
addr16
rorb
daa
popf
cmpsl
xor
sahf
scas
lds
mov
cli
enter
outsl
jne
aas
lcall
ror
aas
aaa
or
int3
imul
punpckhbw
dec
dec
out
push
decl
pop
sub
movd
add
adc
test
mov
fstpt
negb
scas
addr16
add
lret
stos
mov
add
and
sub
add
nop
dec
shlb
popf
adc
loopne
jg
out
dec
mov
add
add
out
daa
sub
je
pop
pop
mov
rclb
arpl
adcb
jne
and
addr16
ret
movsb
nop
xchg
push
xchg
pop
test
sub
es
lods
mov
add
mov
cmp
jmp
lahf
pop
ret
xorl
shll
out
movsl
push
add
sub
aam
je
mov
push
stos
test
lods
aaa
or
adc
dec
mov
adc
xchg
push
mov
cmpsb
sar
shlb
and
insb
jns
cmp
or
sbb
fbstp
stc
repz
data16
push
adc
or
push
and
jne
push
iret
mov
addl
inc
push
int
rcll
imul
pop
sbb
inc
jge
add
inc
xchg
xchg
mov
inc
dec
xor
pop
lret
bound
jno
bound
adc
sub
lret
mov
and
mov
negl
dec
adc
pop
mov
inc
je
push
sub
xor
dec
nop
mov
int3
sub
mov
jno
jae
adc
add
cmpsb
loopne
and
xor
push
aas
or
ret
fucom
or
aas
mov
push
js
cmp
shlb
sub
mov
mov
push
fs
stc
dec
rorl
cwtl
cld
xor
neg
test
sub
icebp
shlb
add
adc
ds
flds
aaa
es
mov
mov
arpl
and
stos
add
pusha
shlb
vmulss
lea
fnsave
jle
fs
loop
sbb
pushf
cmp
fcmovnu
sbb
call
pop
das
ret
jl
mov
pmaxub
mov
outsb
test
cltd
or
or
subl
inc
push
sub
loopne
fcom
enter
lret
mov
stc
xchg
mov
mov
jno
cmpb
inc
adc
nop
cmp
push
leave
in
push
out
inc
std
flds
inc
dec
and
in
outsb
cltd
in
call
jbe
sub
or
call
test
jne
ss
ds
push
jns
jae
mov
adc
int3
push
into
cmpb
xchg
cmpsb
mov
addr16
mov
ss
inc
inc
jns
ret
outsb
es
cmpsl
mov
repz
ret
in
stc
scas
pop
cld
pop
sub
pusha
mov
test
lock
push
sub
mov
fdiv
std
call
repz
movsl
adc
das
mov
push
int3
imul
scas
push
int
aas
jle
mov
test
adc
add
push
data16
std
nop
shll
clc
xchg
or
xchg
loopne
jge
fildll
and
mov
popf
dec
and
or
addl
push
xchg
mov
jnp
pushf
lcall
or
fwait
scas
ja
mov
pushf
mov
aad
aad
mov
dec
jl
fucomip
rclb
fdivs
dec
repnz
ficoms
dec
loop
push
sub
pushf
pop
inc
dec
dec
cmpsw
add
cltd
xor
xor
or
jne
cmp
es
cmp
adc
mov
dec
inc
xor
push
pop
mov
popl
repz
ret
dec
test
inc
and
pop
les
dec
mov
pop
cli
sbb
pop
into
inc
add
xor
inc
jmp
mov
out
test
xlat
lock
out
pop
int3
mov
xor
inc
jns
std
arpl
stos
nop
cmp
fdivr
lret
sub
adc
out
dec
aaa
lock
xorl
mov
gs
dec
jb
dec
lahf
fmuls
stos
sbbl
sbb
test
int3
cmc
mov
addr16
fmuls
and
repz
repz
inc
add
cs
pop
pop
cmpsl
xchg
sub
scas
test
dec
cs
sbb
sub
nopl
clc
imul
movsl
jge
adc
jg
arpl
xor
dec
mov
pushf
sbb
js
cmp
fldl
mov
mov
repnz
in
xchg
mov
ret
mov
insl
and
test
mov
js
push
and
std
into
cmpsl
push
int
cmp
ja
or
mov
push
dec
hlt
or
decb
push
lcall
jns
xchg
pop
inc
jmp
and
inc
sub
xchg
std
loope
incl
cmc
pop
js
jg
sbb
aaa
jo
add
push
adc
into
rcrl
xor
pop
cmp
and
push
imul
xchg
ja
cmpsb
aad
sub
lods
jbe
addr16
xor
pop
dec
xlat
pop
inc
test
pop
mov
ja
and
loop
xchg
push
xchg
sbb
call
sbb
mov
adc
adc
and
popa
into
mov
dec
xchg
daa
insb
out
dec
and
cld
add
xchg
test
imul
jo
cmpl
dec
lea
cmp
adcb
aam
out
je
xchg
out
lea
cmpsl
sub
fs
or
push
dec
xchg
or
shrl
jmp
push
lods
out
or
ss
mov
or
xchg
xchg
clc
jp
in
mov
push
fistpl
movsl
mov
test
push
add
fs
jne
gs
arpl
lds
loopne
xchg
or
inc
inc
aam
popf
adc
mov
jg
shll
out
nop
aad
popl
cmp
mov
outsb
xor
mov
mov
movsb
sbb
bnd
daa
jns
adc
xchg
fistpl
pop
mov
inc
cmp
pop
aam
cmp
inc
dec
or
in
add
pop
xchg
pop
mov
push
sarb
xchg
in
sbb
jecxz
mov
ljmp
hlt
jle
outsb
ficomps
jl
add
push
fidivl
mov
dec
mov
lods
outsb
cmp
pop
or
movsl
rcrb
inc
and
mov
inc
pop
fdiv
pop
jne
addb
sub
mov
jnp
or
mov
inc
push
pop
enter
xchg
jns
mov
out
movsl
mov
maxps
clc
xor
sbb
pop
push
adc
loope
mov
gs
lea
cmp
add
jbe
ss
jg
iret
lods
jbe
cli
xor
push
aaa
push
pop
outsl
pop
mov
lcall
lahf
data16
out
mov
add
fs
mov
push
sti
out
pop
inc
clc
push
mov
shll
cltd
lods
cwtl
cmpsb
loop
in
push
jge
ja
pop
cmc
ror
insb
adc
push
xor
andl
iret
jge
les
jge
xchg
add
push
aam
pop
push
mov
xchg
loop
jmp
sbb
aad
inc
mov
cwtl
mov
sahf
out
mov
push
scas
jg
xchg
fcomp
and
int3
cltd
mov
insb
mov
into
orl
stc
dec
push
or
repz
or
adc
mov
and
mov
or
mul
xor
pop
adc
dec
mov
inc
fwait
in
lret
pop
ja
push
sub
dec
or
fidivs
lods
pop
int3
jle
into
stc
mov
mov
fnstsw
or
cld
pop
push
push
xlat
mov
mov
pop
or
les
pop
daa
stos
rep
xor
hlt
cs
mov
fdivs
mov
add
push
sarl
sub
test
mov
jb
ror
mov
icebp
dec
loope
mov
out
aaa
sbb
jecxz
push
fmull
shrl
inc
fldcw
push
test
cwtl
mov
fisubs
jecxz
rolb
mov
addr16
popf
mov
in
jnp
sub
adc
int
rclb
cmpsl
dec
push
sub
rorb
mov
addr16
daa
xor
push
and
std
lods
clc
dec
mov
into
and
test
out
push
or
xchg
mov
pop
aas
mov
or
gs
sbb
test
cmp
sub
in
jp
cmovp
or
xchg
dec
cmp
insl
inc
mov
jns
pop
mov
addl
stos
jle
cmp
mov
add
xchg
adc
jge
pop
cmp
cmc
jl
dec
cwtl
or
cmp
mov
inc
stc
jecxz
push
cs
and
mov
adc
cmp
xor
mov
gs
sub
ds
jb
cwtl
jle
jb
dec
push
ljmp
addr16
test
dec
push
xor
fadds
jecxz
cmc
push
push
shl
fdivrl
aas
adc
mov
jo
adc
and
mov
mov
pop
dec
mov
jb
push
aas
push
dec
sar
loope
sbb
jnp
mov
sti
mov
add
add
pushf
stc
dec
dec
mov
das
pop
shl
inc
outsl
xor
mov
scas
push
mov
lret
lcall
and
addb
xchg
mov
cld
das
out
inc
stos
xchg
and
mov
xchg
lret
and
pop
sahf
test
push
scas
fwait
jge
fwait
loop
inc
push
pop
bound
pop
push
lret
mov
adc
sahf
test
pop
cli
push
das
fcompl
nop
je
pusha
dec
mov
dec
nop
sub
ljmp
test
daa
dec
jbe
xchg
xor
adc
in
sbb
xor
loop
std
dec
cmp
daa
add
sub
push
lea
or
mov
push
jge
into
sbb
xchg
aas
aaa
sub
or
int3
xchg
cmpsb
test
xchg
std
mov
popf
jo
pop
bswap
dec
aas
icebp
ljmp
adc
jecxz
push
fwait
shrl
das
nop
lret
mov
xchg
jne
out
dec
mov
pop
fsubrl
popf
mov
xchg
xchg
push
repz
neg
insb
inc
test
sbb
jns
dec
test
and
xor
out
push
std
iret
loope
add
sbb
dec
stos
fisubrs
pushf
sub
pop
in
jmp
push
das
sahf
mov
add
lods
mov
repnz
outsl
loopne
and
movsb
mov
ss
push
jge
pop
mov
lret
mov
xchg
testl
cmp
xchg
lds
sub
mov
pop
sub
pop
int3
addl
jbe
and
setg
or
test
cmc
jb
out
stos
or
in
aaa
push
ds
mov
xor
cmp
cmp
lret
add
icebp
mov
jle
mov
jne
or
and
scas
cmp
imul
xor
loope
jnp
roll
add
or
stc
xchg
lock
enter
mov
mov
scas
sub
clc
cli
aad
pop
xchg
sub
mov
aad
fldcw
push
adc
push
dec
sbb
xchg
jbe
hlt
out
out
cli
and
mov
xor
out
sar
or
test
sti
mov
ljmp
ljmp
iret
jo
and
inc
sub
sub
or
xlat
mov
mov
jecxz
add
stos
add
cmp
test
pop
pop
jne
dec
mov
fsubrl
push
cmp
pop
hlt
sti
leave
ret
mov
stos
and
add
mov
pop
cmp
aam
outsl
dec
mov
popf
mov
sbb
leave
mov
or
jp
sub
lret
setae
lcall
insb
sub
mov
jge
pop
imul
cmp
xchg
or
outsl
inc
enter
loopne
adcl
test
fcmove
and
loop
sub
xor
mov
addr16
jnp
jge
fisubrl
pop
push
jnp
jecxz
in
test
insb
pop
shl
mov
scas
and
in
sahf
jg
sub
push
into
in
jno
fdivrs
pop
fwait
aad
jbe,pn
popa
xchg
mov
fwait
and
cltd
pop
jmp
pop
inc
jb
mov
pop
xchg
ds
cmpsb
sub
dec
insb
fadds
lcall
add
inc
jo
jns
push
inc
in
inc
testl
jp
lret
cmp
loope,pn
xchg
lods
jnp
jno
sbb
imul
sbb
cs
pop
pusha
dec
shlb
cld
inc
sub
xchg
scas
cmp
addr16
lret
call
stc
popa
pop
outsl
mov
pop
ljmp
xchg
cmp
sbb
cltd
pop
pusha
cmp
adc
fiaddl
and
inc
add
sub
arpl
shrl
repnz
shrl
dec
dec
loop
jmp
xchg
jo
test
inc
add
in
sahf
or
sbb
shll
divl
hlt
add
adc
rcrl
mov
and
pop
cmp
dec
popa
in
fsubs
daa
cwtl
sti
or
mov
sub
lahf
push
test
pop
mov
push
faddl
xchg
fists
adc
jl
jp
dec
mov
xor
adc
mov
mov
xchg
pop
mov
cmp
icebp
inc
xchg
pop
push
mov
movsb
mov
or
mov
pop
mov
out
jmp
movsb
cmp
pushf
cwtl
cmp
das
or
iret
fwait
mov
pop
sub
adc
adc
sub
push
cli
jle
xchg
mov
pop
repz
lock
push
cs
jbe
sahf
xor
mov
leave
ret
cltd
fstpt
test
loop
xchg
mov
js
sub
fcoml
mov
shrb
xchg
push
leave
adc
call
cs
add
test
pop
push
pop
sub
add
popf
and
lahf
mov
out
sub
pop
mov
or
scas
jnp
fiaddl
mov
fcom
xor
push
xor
add
mov
jne
cltd
sub
dec
or
xchg
inc
fwait
sbb
popa
mov
ret
push
addl
jns
pop
movsl
cmpsl
and
pushf
lds
push
mov
fsts
std
sbbb
out
mov
imul
orb
cmpl
xlat
fs
lods
sub
lods
outsb
ds
jmp
jl
cmp
outsb
rolb
sub
sub
jns
mov
jge
lret
dec
outsb
dec
lock
mov
rcll
cli
cwtl
cmpsb
xchg
xchg
insl
cmp
xchg
cwtl
dec
shll
leave
gs
or
sbbb
dec
push
xor
cld
scas
jmp
sub
jmp
jno
scas
fwait
stos
pop
fldenv
fisubl
dec
out
xor
or
outsl
inc
inc
push
jl
lds
hlt
jne
js
out
pusha
ljmp
xor
cwtl
mov
movsb
lods
pusha
cmp
mov
scas
movsb
fldenv
addr16
xor
insl
dec
xor
jmp
or
loope
xchg
insl
out
les
ret
mov
mov
cmc
xor
push
xor
dec
rorb
dec
cli
jnp
add
lods
leave
aaa
imul
mov
leave
jnp
and
sub
je
inc
shlb
xor
loopne
iret
cmp
ja
xor
cmp
and
lcall
mov
lret
sbb
mov
dec
jbe
and
jl
stos
leave
and
push
dec
cld
push
gs
ss
dec
icebp
mov
xlat
lcall
insl
xchg
push
fildl
xchg
test
adc
test
testl
movsl
jl
sub
lcall
or
push
jp
enter
xorl
xor
cmpb
adc
xchg
inc
iret
repnz
push
jmp
stos
xorl
ret
or
pop
enter
jno
popa
add
inc
addr16
pop
gs
add
icebp
mov
test
jno
add
and
add
mov
lcall
mov
cmp
inc
mov
add
loopne
ret
inc
jo
mov
lock
xor
in
jl
popa
pop
mov
negl
cmp
lret
divl
cli
sub
cwtl
movups
test
sbb
stos
cmp
out
cmp
pop
fdivr
enter
and
push
fstpl
faddl
test
shrb
mov
jae
jbe
pop
nop
mov
shll
cmp
push
mov
cwtl
test
jge
fstpl
and
std
dec
popf
mov
int
popa
jp
inc
mov
and
cld
mov
sub
scas
es
loope
fidivrs
pushf
fistps
and
adc
mov
iret
jl
fists
lock
push
mov
xchg
push
hlt
into
jecxz
lea
aad
and
arpl
arpl
and
mov
sub
ss
sbb
cld
push
fadds
mov
jne
jb
rclb
xor
stc
push
out
jmp
xor
ja
cmpsb
jo
cmp
out
mov
shlb
addr16
lcall
jg
cli
push
cld
movsl
pushf
push
das
cmp
mov
jge
in
cmp
sbb
outsl
pop
pushf
pop
sti
sbb
repz
dec
mov
movsb
adc
sub
xor
daa
addb
testl
jp
cltd
sarl
pop
jmp
fwait
movsb
inc
sub
lret
inc
sti
xchg
push
aas
xchg
mov
xchg
cmc
in
call
jl
push
shll
out
sub
in
sub
and
arpl
adc
sub
mov
sahf
xchg
movsl
movsl
leave
pop
aad
inc
js
xchg
fstps
mov
add
imull
sbb
popa
mov
adc
sbb
lret
repz
jl
dec
pop
shll
xchg
mov
jo
sub
xor
sub
mov
mov
cmpsb
cmp
sbb
mov
lcall
sub
pop
jno
sub
or
pop
mov
add
mov
stc
push
and
mov
pop
in
xor
das
sub
sub
test
ds
sub
stos
push
sub
bound
std
das
addr16
add
or
ja
mov
add
test
inc
insb
adc
lods
xchg
sbb
lea
cmp
sbb
shrl
mov
sub
pop
outsb
loope
mov
into
dec
push
stos
fidivs
or
ficompl
lcall
push
sub
push
imul
fnsave
cltd
mov
or
xor
jle
out
dec
xlat
iret
mov
out
aad
ret
bound
int3
stc
sbb
add
js
mov
sub
xchg
or
add
inc
scas
fsubrs
pop
ss
mov
pop
adc
xchg
mov
or
in
adc
mov
in
repz
sbb
pop
dec
jae
mov
gs
adc
push
mov
call
into
dec
imul
or
insl
jmp
mov
mov
jb
and
dec
call
push
push
sub
out
jmp
ret
bound
add
push
pop
jg
mov
adc
icebp
mov
dec
hlt
push
int3
mov
out
jmp
jmp
xor
jl
loopne
les
pop
cmp
js
and
data16
aam
mov
stc
inc
flds
sbb
adc
xchg
lock
xchg
imul
and
xchg
pop
or
pop
jecxz
mov
xor
xchg
pop
mov
cmpsl
push
in
mov
xor
mov
adcl
inc
lods
imul
mov
fprem
les
push
mov
out
mov
add
ror
stos
mov
lock
cmpsb
lock
sub
mov
inc
add
sbb
pop
faddl
push
pop
mov
or
dec
pop
and
push
mov
mov
sahf
inc
push
pop
test
call
cmp
mov
push
lret
dec
and
popa
daa
ret
test
and
or
cmc
mov
mov
cltd
adc
test
daa
pop
dec
scas
jecxz
nop
sbb
jge
std
adc
pushf
and
mov
hlt
jno
mov
stos
shrl
cmc
test
repz
cmp
jg
cltd
and
dec
in
pop
div
in
ljmp
lock
add
mov
sub
lds
or
cmpsl
insl
add
stos
in
loope
push
out
mov
add
aas
dec
push
or
imul
push
inc
xchg
hlt
cmpsl
sub
dec
xchg
mov
nop
loopne
jle
sahf
test
mov
cmp
mov
leave
push
mov
cmc
test
iret
shll
xchg
pop
adc
xor
cmp
jge
repz
dec
dec
pop
fistpll
cmp
ja
into
imul
lret
lock
and
or
fst
adcb
out
mov
jle
pop
cwtl
cmpsb
inc
xor
sbb
enter
jmp
add
mov
sub
jmp
mov
sbb
cmp
jp
push
rcrb
mov
cmp
scas
movsb
push
add
cltd
mov
pop
cmp
and
leave
adc
dec
out
jle
dec
sarb
cmp
sbb
mov
insb
sub
xchg
mov
int
in
int
xor
lea
mov
add
mov
add
add
mov
pop
mov
inc
jle
jg
mov
idiv
gs
pusha
scas
xor
mov
mov
shlb
in
bound
sbb
aad
push
outsl
cmpsb
gs
pop
xorb
pop
inc
xor
pushf
mov
outsl
rorl
xor
and
push
mov
out
jmp
decl
lods
fmul
add
dec
sti
and
cmp
jb
mov
out
jp
mov
xchg
loope
push
and
cmp
inc
mov
aas
icebp
or
bound
push
sahf
in
sub
lcall
push
pop
lods
fstpl
jne
in
jge
test
cld
sub
or
lret
aad
push
jmp
daa
xor
sub
fsubs
das
sub
out
jmp
sbb
inc
fistl
sub
mov
sub
add
test
fcmove
xor
adc
aaa
xchg
jnp
mov
add
lds
adcl
adc
xor
aaa
stos
stos
aam
cmp
mov
mov
rolb
in
cmp
mov
push
mov
dec
xor
aad
cwtl
jmp
push
ficoml
mov
imul
clc
lds
enter
shrl
pop
clc
es
push
dec
xor
jns
mov
sbb
insb
fstpl
fs
dec
lods
dec
fsubrl
cmp
sbb
addb
fistpl
stos
mov
scas
jle
dec
out
dec
push
sub
insb
shl
orl
sbb
int
adc
rolb
out
mov
cld
hlt
lods
outsb
push
enter
or
mov
lcall
testl
add
test
sbb
leave
scas
aaa
psubsw
xlat
scas
test
pop
test
addr16
rclb
loopne
inc
mov
mov
xor
loope
jge
ja
jl
js
ds
pop
popa
int3
lds
xchg
rcrl
mov
dec
call
jne
push
push
popf
fimull
ljmp
add
outsl
out
shrb
idiv
loopne
aam
enter
orl
or
mov
subl
mov
sbb
adc
icebp
mov
mov
mov
test
int3
ds
jae
aad
cmp
sub
sub
xor
dec
jb
fsubrs
fwait
cs
xchg
mov
sti
cmp
inc
add
adc
sbb
repnz
cmp
mov
sbb
int
ds
rorl
cmp
inc
lret
outsl
ss
xor
pop
pop
sbb
sbb
outsl
xlat
loope
mov
int3
adc
fwait
cs
sub
test
lea
loop
fsts
test
xchg
jecxz
mov
xchg
repnz
sbb
ret
movsl
add
mov
or
ljmp
xor
cmp
or
dec
loopne
mov
push
jb
jmp
xchg
pop
adc
adc
adc
fstpt
and
fs
pop
adc
js
sub
out
fistpll
push
dec
popa
jae
pop
mov
and
imul
faddl
pop
loop
mov
xor
and
jge
rcr
push
into
push
add
pop
or
pushf
fs
bsr
mov
fidivs
lret
fisttpl
inc
cmp
cld
notb
fstps
add
addr16
ret
xlat
movb
loope
insl
fnstenv
mov
arpl
jns
mov
in
popa
inc
mov
mov
aaa
dec
jo
push
push
pushf
test
dec
push
xchg
jno
add
mov
jmp
add
into
mov
out
xorl
lock
push
ss
cmp
cmp
leave
mov
cmpsb
out
push
pop
adc
mov
xor
adc
jmp
sarb
sti
jmp
icebp
jnp
inc
fs
push
in
ficoml
ss
into
cmp
cld
nop
inc
out
arpl
stos
cmc
jmp
inc
shl
push
mov
push
xchg
repnz
repz
mov
jbe
in
and
jb
insb
xor
mov
dec
xchg
jg
negb
jle
enter
out
imul
cmp
in
mov
and
and
xchg
jbe
jne
sub
das
aaa
xchg
cs
add
daa
adc
xchg
loope
cld
xor
mov
test
lds
lcall
into
shr
and
cmp
loope
push
jbe
imul
repz
jne
out
cmpsl
or
sub
mov
xchg
mov
mov
popf
test
and
push
mov
cmpsb
addl
jge
mov
fisubs
out
lcall
pop
push
or
mov
push
in
mov
loopne
in
push
inc
xor
and
adc
cmpsl
fdiv
dec
sbb
pusha
aam
lds
inc
sbb
dec
jbe
xor
sub
divl
dec
test
fwait
mov
xchg
pusha
cmpsl
std
push
jge
lods
aam
ret
sbb
pop
push
sub
flds
leave
add
testl
sub
add
dec
mov
in
inc
hlt
orl
outsl
add
mov
jmp
sbb
xchg
dec
mov
fdivs
lcall
add
pop
or
mov
ret
jb
mov
xchg
femms
sub
jle
out
or
fmuls
std
test
popa
lret
xchg
lret
lods
enter
divl
idivl
pop
inc
pop
pop
orl
jne
int
xchg
lds
sub
jecxz
sbb
mov
add
jp
push
adc
dec
int3
loope
ret
cltd
mov
mov
cwtl
inc
dec
cmp
pop
jo
fiaddl
stos
lahf
mov
jp
cmp
test
mov
dec
bsf
lcall
jnp
mov
push
jo
adc
sbb
repz
jns
sbb
push
into
jl
inc
mov
dec
push
or
scas
push
test
mov
jmp
mov
shrb
or
ljmp
rcrb
and
aam
and
in
aas
int
into
push
adcl
fcoms
mov
xchg
cli
push
adc
push
adc
pusha
push
mov
imul
scas
mov
dec
jl
in
push
out
jo
mov
int3
mov
jmp
adc
popa
adc
pop
mov
inc
push
arpl
inc
rorb
movsb
xchg
xchg
push
or
scas
jg
mov
push
jle
lret
ror
dec
fwait
xor
test
xor
cmpsl
ja
int
pop
add
add
jp
or
daa
lock
aad
nop
mov
sbb
mov
inc
and
imul
outsb
pop
xchg
ficompl
loope
popf
mov
test
dec
sbb
mov
aas
cmpsl
shrl
jle
mov
sub
nop
adc
xor
imul
xchg
shll
nop
mov
and
insl
sub
jecxz
adcl
int3
inc
cmp
jne
iret
cmp
leave
add
popa
icebp
loopne
sbb
mov
mov
add
incl
push
decl
xchg
mov
gs
xchg
adc
lods
das
pop
jno
jnp
insl
or
mov
call
fisttpll
lret
imul
fiaddl
mov
cmp
xor
xor
scas
cmp
mov
sub
push
inc
add
jg
jp
jno
pusha
pop
daa
adc
mov
xor
xor
stos
je
jno
and
gs
je
iret
in
test
ret
adc
push
fucom
inc
outsl
lods
in
push
nop
pop
push
sub
call
cmc
cmp
ficoms
fimull
out
push
dec
enter
jg
aaa
cmpb
push
and
mov
lret
dec
pop
push
xchg
aad
lret
mov
pop
in
outsb
jecxz
rcrl
iret
inc
arpl
lcall
mov
in
filds
push
leave
mov
popa
push
fistpl
adc
call
imul
adc
xchg
test
das
int
mov
out
add
push
mov
cmpsl
cs
cltd
shll
test
xor
mov
dec
arpl
jb
fstpt
movb
ss
mov
ret
mov
das
xor
jge
cltd
add
add
inc
addb
jnp
inc
mov
push
cltd
mov
sbb
out
pop
jne
clc
sub
movsb
xchg
inc
call
or
cltd
xchg
pop
xchg
imul
dec
inc
cmp
fstp
dec
mov
inc
sbb
out
into
div
iret
ds
fcmovnbe
ja
loope
pusha
xchg
cmp
loopne
adc
cmp
mov
fiaddl
adc
push
loop
mov
out
cli
repz
inc
incl
mov
loope
adc
cwtl
int
mov
es
scas
inc
lods
ja
push
les
push
jae
adc
ss
fprem1
fwait
inc
loop
jnp
inc
jae
ss
adc
cwtl
pop
cs
lock
and
or
test
mov
push
out
out
pop
cmp
gs
mov
test
imul
iret
sbb
fidivrl
or
cmp
xchg
jmp
xchg
shrl
shll
pushf
aad
or
pop
adc
mov
or
mov
add
inc
push
jp
pop
push
xlat
pop
xor
ljmp
or
push
int
aad
arpl
pop
mov
in
lret
aas
into
xor
ret
mov
fmull
cmpsb
or
movsl
data16
movsl
pop
fstl
add
fs
or
mov
cltd
push
or
das
and
sbb
xchg
sbb
cs
mov
xor
fstpt
pop
sub
imul
sub
xchg
inc
daa
inc
cli
gs
lds
mov
adc
jecxz
movsl
mov
mov
test
bound
subb
sbb
lea
add
fcomi
mov
pusha
loopne
and
jmp
push
loop
dec
jb
jbe
xchg
addr16
sbb
adc
shr
mov
xchg
fcoml
push
and
negl
xor
jo
sub
in
ljmp
mov
push
inc
jp
out
mov
rorb
xchg
xchg
push
and
jecxz
jecxz
int
inc
add
sbb
in
out
repz
movsl
cwtl
test
mov
cmp
mov
in
clc
cmp
loop
or
ds
xor
jmp
enter
mov
jns
cmp
or
imul
cs
dec
and
aaa
add
mov
jle
adc
sbb
test
imul
and
xchg
je
ss
movsb
sub
mov
or
cmp
sub
cmp
insl
inc
shrl
es
rcll
std
jno
les
jo
popa
icebp
jae
je
lds
cmp
subb
movsb
mov
sbb
cwtl
fimull
xchg
ss
cmp
push
jle
mov
stc
inc
je
decl
ss
mov
cmp
jecxz
xchg
mov
push
dec
sub
mov
aam
into
mov
pop
fwait
cmpsb
pusha
dec
ret
std
cmp
jo
and
cwtl
mov
das
inc
scas
cmc
mov
pop
dec
repnz
jo
cmp
dec
push
ss
and
jns
sbb
scas
lods
pop
daa
inc
adc
adc
movsl
sub
fiadds
fidivs
dec
xor
add
test
push
pop
mov
push
rclb
movsb
pop
xor
mov
cltd
loopne
int3
sbb
or
addb
insb
inc
lahf
stc
and
sarl
imul
test
fisttpll
jb
in
lret
adc
ja
pop
pop
aaa
out
les
add
push
lea
leave
mov
jne
mov
rolb
push
sbb
mov
shrb
dec
jbe
cmp
jbe
insl
or
pop
scas
sub
dec
and
js
sbb
mov
movsb
aaa
xchg
fwait
dec
adc
mov
shrb
sahf
aad
sub
rcll
xchg
push
mov
xchg
sbb
adc
mov
or
push
push
imul
dec
xchg
mov
cmp
shlb
push
pop
sbb
add
ud2
ja
push
lock
jns
int
jns
std
icebp
add
push
add
inc
sahf
jne
or
das
sub
xchg
jmp
std
and
enter
movsl
jns
rdmsr
test
loopne
adc
jp
pusha
imul
xorl
sahf
xchg
jg
out
test
jb
lcall
in
shl
pop
sbb
xchg
cmp
mov
cld
cld
mov
xchg
fwait
loope
mov
bound
fnstsw
sub
in
add
xchg
sahf
adc
je
loop
cmpsb
bound
aas
movups
lds
push
push
in
test
or
jmp
jg
jmp
lds
lods
mov
and
jg
sarl
sbb
sbb
lods
jb
sbb
enter
aaa
xchg
cmpsb
sub
cli
mov
xchg
dec
stc
in
test
cmp
test
cmc
shl
addr16
add
shrb
shlb
dec
pop
mov
mov
xor
and
cmp
pop
das
repz
pusha
movsb
ds
and
stc
popf
cmp
fcoms
fwait
sub
imul
mov
mov
mov
pop
push
outsl
gs
mov
xchg
and
dec
xchg
and
testb
sbb
xchg
cmp
xchg
pop
popf
lcall
das
mov
push
lret
mov
stc
mov
mov
loope
leave
adc
inc
lea
into
push
cmpsb
push
arpl
out
xchg
call
out
mov
or
repnz
iret
fidivrl
add
cli
test
inc
repnz
inc
sbb
and
lds
xchg
aas
inc
daa
icebp
push
inc
xchg
jmp
xchg
loopne
loop
aaa
and
ja
push
xorb
fmulp
cmp
out
scas
inc
add
lods
rcr
sub
out
pop
mov
rolb
lret
rorb
push
mov
mov
xchg
adc
mov
mov
mov
lret
fnsave
dec
mov
inc
das
mov
pushf
movb
add
sarl
sbb
xor
pop
lret
jb
push
int3
lcall
dec
inc
in
add
out
xor
in
cmpb
daa
xor
es
cld
push
jl
add
pop
test
aam
rcr
decb
xor
mov
lods
rcll
pop
jns
test
int
divb
fwait
mov
mov
xor
int
lcall
clc
stc
lds
popa
hlt
fisubrs
lcall
aaa
cltd
shrb
in
jno
add
sub
add
sub
jno
test
xchg
stos
cmpl
mov
sbb
into
dec
mov
cmpsl
cmp
popa
fstps
aad
incb
pop
mov
mov
mov
rcrl
inc
push
sbb
mov
popf
or
adc
and
pop
inc
rcr
cmpsl
or
dec
push
push
jecxz
inc
aaa
imul
les
jecxz
cmp
push
icebp
push
fwait
cmc
or
pushf
adc
jle
jmp
loope
add
in
outsb
push
insl
sub
bound
testb
lret
push
idivl
out
mov
sub
xchg
es
movsb
insl
cmpsb
cltd
stc
push
lock
lcall
in
sub
push
add
sbb
out
jo
pop
lds
pusha
frstor
out
cltd
pop
pop
sub
je
and
ds
test
mov
aas
mov
inc
mov
and
std
les
pop
aaa
adc
shl
xchg
aam
fisttpl
dec
test
fistl
sbb
arpl
fs
bound
add
shrb
out
dec
cwtl
int
sahf
mov
or
hlt
in
fwait
adcb
add
mov
jno
and
gs
lret
lret
mov
stc
jns
xor
mov
jb
pop
das
mov
enter
sbb
leave
repnz
sahf
arpl
jnp
xor
inc
add
and
test
inc
js
mov
mov
push
push
stos
push
and
popf
cmpsl
imul
gs
hlt
dec
inc
push
scas
mov
les
mov
lea
dec
lds
int
dec
scas
sub
mov
sbb
add
daa
cmp
mov
cmp
arpl
mov
std
cmp
or
xor
arpl
std
xchg
mov
xlat
mov
loope
cmpsl
ljmp
int
repz
in
cmpl
and
pop
mov
jecxz
imul
adc
cli
adc
ret
repz
movsb
scas
dec
out
mov
adc
or
ja
imul
xor
mov
and
push
xchg
mov
rcr
mov
inc
es
fstl
mov
dec
mov
fucomp
mov
sar
and
xor
fdivr
lret
jb
mov
jns
ljmp
stos
in
push
cwtl
js
sbb
dec
shlb
ja
cmp
repnz
jnp
scas
cmpsb
dec
inc
mov
xchg
sub
sub
sbb
mov
cs
mov
out
fstpl
lahf
fmuls
jecxz
aad
jmp
lahf
lret
iret
mov
leave
mov
es
movsb
nop
mov
sub
fcmovne
test
jb
xchg
mov
lcall
dec
sub
stc
mov
pushf
adc
mov
cli
push
test
hlt
xlat
lret
cmp
cmpsl
pop
aas
mov
push
push
jl
sub
insl
es
mov
xchg
dec
leave
call
mulb
add
movsb
fcomp
mov
pop
cmpsl
xor
les
js
sbb
lret
xchg
popf
cli
or
in
cld
mov
gs
nop
mov
stc
inc
mov
fs
adc
jge
pop
mov
das
incl
mov
push
adc
shll
out
sbb
push
inc
xchg
aaa
daa
jnp
adc
dec
sti
mov
in
arpl
andb
mov
cmc
aam
xor
pop
fcomps
imul
mov
out
enter
xchg
ja
mov
push
adc
xchg
cmp
xor
mov
and
incb
mov
push
sahf
loop
inc
or
popf
outsl
imull
sbb
popa
in
inc
pop
add
cmpsb
jp
in
sub
push
dec
cmpsl
enter
lods
ja
fsub
adc
lods
xorb
inc
js
lea
push
xor
xchg
loope
dec
fnstcw
xchg
pop
test
jne
jge
pop
loop
cmp
push
add
fs
push
adc
mov
or
xor
add
pop
jecxz
xchg
ja
fwait
jns
fbstp
shll
cltd
adc
mov
cmc
and
fstpt
jl
inc
nop
push
pop
mov
adc
add
or
pop
dec
cmp
fcmovnbe
mov
repnz
insl
fcoml
sbb
sarb
inc
mov
sbb
xor
movsl
addr16
cld
aaa
pop
xorl
pop
cmp
addr16
idivl
lods
lock
cmpsb
jl
fsubrs
xchg
dec
jle
mov
xchg
stos
xor
cld
adc
mov
jne
sti
xchg
add
stc
inc
pop
or
mov
pop
cmp
xlat
jno
dec
loope
in
fisubrl
sub
lds
jg
fidivrl
mov
and
lds
jns
push
xchg
pop
mov
hlt
or
scas
sub
in
mov
iret
pop
or
flds
outsl
jmp
push
xlat
pop
adc
sub
mov
sbb
dec
xor
shll
sbb
pop
fimull
xor
iret
push
xor
cmpsb
and
pop
cmp
insl
test
add
xchg
xor
jb
imull
jb
add
mov
rorb
nop
xor
mov
and
pop
push
mov
fmuls
and
xchg
cmp
jnp
sti
adc
int3
es
pop
mov
movsb
xchg
adc
loope
xor
add
inc
mov
add
insl
lea
xchg
or
mov
and
adc
pop
cmp
mov
pop
insl
xchg
inc
jl
test
les
scas
les
incb
push
sub
or
cmpsl
in
sub
fisttpl
cltd
popa
clc
adc
test
pop
loopne
cmp
pop
xor
mov
xorl
xchg
adc
out
jp
insb
sbb
pushf
ret
sti
xorl
out
fwait
cmpsl
pusha
jecxz
lock
int3
dec
cmp
mov
fs
sbb
jno
cmpsb
push
pop
xor
je
repz
jg
iret
sbb
dec
js
push
jb
ror
adc
add
test
andl
sti
fcmovb
cmpb
cli
ss
test
mov
pusha
jbe
cltd
adc
hlt
xchg
push
ret
push
iret
hlt
push
aad
repnz
sub
nop
and
and
in
idivl
add
call
out
mov
sub
testl
adc
push
lcall
lods
lret
jmp
call
insl
mov
addr16
leave
sarb
shlb
sub
lds
pop
lea
call
inc
cmc
in
vcvttpd2dq
xor
push
pop
cmp
loop
xchg
sbb
pop
into
xchg
jge
cmp
mov
outsb
jmp
jl
inc
sbb
adc
lods
push
add
outsl
dec
and
jbe
mov
in
or
sbb
mov
mov
adc
out
stos
ja
nop
mov
into
das
aam
mov
mov
push
dec
data16
aas
add
mov
xchg
mov
fnstenv
sub
fdivrs
subb
addb
imul
add
xor
cmp
repnz
sahf
or
and
pusha
adc
mov
aas
pusha
ja
sub
cmpb
in
mov
test
mov
cmova
cmp
divl
xor
cmp
outsl
lahf
adc
test
mov
inc
inc
shll
adc
mov
enter
push
pop
icebp
jno
fbld
je
cltd
push
cli
loop
or
xchg
es
sub
aam
loopne
ficompl
xor
sti
mov
sbb
gs
lea
pop
les
jo
pop
pop
inc
sbb
repnz
mov
push
xchg
lcall
insb
or
in
lahf
jl
or
push
dec
pop
cmpsb
mov
inc
and
cmp
pop
sub
fdivr
mov
dec
in
into
rclb
call
dec
lcall
aam
pop
lcall
jmp
mov
popa
aad
jb
movsl
jnp
scas
aam
rorb
add
cld
mov
cwtl
repnz
es
fcompl
inc
js
pop
mov
enter
sub
cli
sub
xchg
fwait
add
out
inc
cmc
jns
adc
fisubl
sbb
mov
pop
repnz
push
pushw
mov
mov
loop
call
mov
pop
cwtl
cmp
adc
cmp
dec
pop
insb
loope
or
adc
lret
hlt
sbb
movsb
mov
std
aaa
sub
repz
cmp
xchg
and
orl
stc
lods
ret
lds
mov
mov
push
sub
fildl
sbb
push
ss
xchg
test
ret
jo
inc
out
jge
call
icebp
repz
imul
jne
mov
ljmp
idivl
dec
xchg
in
dec
xchg
add
pop
nop
ds
push
adc
cli
daa
jl
bnd
js
cmp
xchg
and
pop
and
ljmp
pop
ss
dec
pusha
cmc
bound
xchg
sub
ds
push
push
pop
addr16
call
mov
les
fimull
push
lahf
cmp
and
cmp
test
roll
cmpsb
mov
test
leave
dec
add
mov
adcb
testl
mov
pop
mov
out
and
mov
mov
aad
push
mov
inc
pop
and
orb
xor
icebp
rorl
xor
or
pushf
fwait
cwtl
leave
jo
addr16
icebp
shlb
xchg
or
and
jne
mov
mov
mov
imul
sub
pop
lods
jg
push
sbbb
sub
cli
imul
mov
xchg
jle
xchg
push
rep
mov
movsl
stos
pop
jbe
icebp
push
xchg
ja
pop
add
sbb
jbe
dec
cmp
cwtl
pop
cmpsb
add
adc
fiaddl
inc
and
fisubl
fs
pop
sbb
inc
mov
in
pop
lock
in
inc
sbb
or
mov
cmp
testb
push
pop
sbb
daa
rorl
fisttpl
lcall
fsubrs
popa
test
dec
sub
and
pushf
mov
out
or
out
rcll
in
pop
pusha
cmpsb
or
fwait
inc
xor
and
out
and
iret
or
mov
sti
sbb
mov
movsb
mov
add
data16
and
or
outsb
push
repnz
pop
pop
xchg
mov
leave
jbe
shrb
mov
pop
dec
and
inc
iret
aad
pop
add
rclb
inc
add
popa
pop
cmpsl
lds
lock
sbb
jne
stos
aad
mov
loop
repnz
pop
in
dec
ror
cli
pop
out
leave
sahf
mov
popf
inc
loop
push
or
std
mov
xor
aas
cmpsb
jmp
adc
mov
outsb
aad
and
dec
cmp
jl
mov
mov
outsb
adc
xchg
push
lds
xor
sbbl
push
xchg
cmc
jle
aad
cmpsb
cs
xchg
lret
cmp
cwtl
jae
jne
xchg
pusha
xchg
sub
pop
repnz
iret
adc
jns
ret
in
in
aas
push
dec
ja
push
push
adc
dec
insb
jo
adc
call
jle
pop
mov
mov
jle
mov
sbb
inc
cltd
in
sub
sbb
mov
lods
mov
das
loopne
xorl
lahf
jmp
outsl
lods
xchg
test
mov
jmp
push
mov
fcoms
stos
aam
and
call
push
cmp
jmp
mov
xlat
iret
cmp
leave
daa
jns
pushf
pop
andps
pop
jns
jns
sub
sbb
mov
or
sub
stos
adc
cmp
add
in
pop
outsb
pop
scas
push
xlat
imul
pop
pop
test
movsl
xor
cmp
out
dec
fdivrl
out
xchg
inc
insl
aas
jo
sub
mov
enter
pop
sub
lret
iret
push
bound
sarb
xchg
mov
popa
mov
push
jo
add
enter
rcrb
and
out
add
cmp
pop
lret
mov
lcall
jae
mov
adc
adc
and
cmp
add
add
mov
cmp
sub
push
fsubrp
inc
or
scas
xchg
sarl
xchg
fisttpll
lret
ds
xor
cltd
push
lret
push
push
dec
jl
idiv
sbb
in
jb
mov
or
add
push
lods
sbb
mov
cmp
cltd
mov
mov
pop
mov
inc
sbb
fmul
xchg
cmp
dec
or
in
jae
mov
loop
pusha
xorb
je
jl
ds
ficompl
sbb
mov
pop
jae
jo
adcb
pop
in
add
clc
dec
scas
or
call
ss
lea
jp
jbe
sub
pop
xor
sbb
or
mov
adc
pop
jp
sub
push
cmp
notb
xor
mov
inc
jno
mov
out
cmpb
and
aaa
faddl
ds
in
ret
xlat
lahf
mov
addr16
lock
mov
pushf
pop
insb
and
jge
negb
std
in
outsb
inc
sub
cltd
inc
mov
test
ja
jns
jmp
xchg
mov
adc
dec
push
lds
sub
push
adc
fistpl
xchg
outsl
xor
cltd
jge
das
inc
add
out
jnp
sub
inc
mov
stc
inc
push
xor
movsl
push
aaa
nop
cmp
adc
cli
dec
dec
leave
insl
adc
pop
pop
out
pop
pop
ja
ljmp
pop
jnp
sarl
mov
mov
cmpsl
or
pushf
incl
fistps
dec
inc
mov
cld
lret
jl
mov
in
xchg
xor
xor
inc
repz
mov
cli
aaa
mov
mov
mov
inc
hlt
push
stc
sti
pop
imul
loope
hlt
iret
xchg
push
xor
mov
daa
mov
xor
pushf
fdivl
into
sarl
lcall
pop
daa
mov
in
outsb
cmp
or
cmpsl
cli
cmp
jne
mul
pop
jb
push
dec
nop
push
sbb
fldenv
mov
inc
ret
in
bound
je
sbb
or
leave
push
jmp
adc
push
mov
in
ret
dec
rolb
add
addb
popl
call
data16
cmpl
aam
xchg
sub
scas
sahf
or
jmp
pop
cmp
test
lds
mov
cmpsb
imul
push
cli
jl
icebp
ror
adc
sbb
ss
inc
out
xchg
and
addb
adc
mov
push
adc
or
jo
mov
push
xchg
sbb
lods
push
push
cwtl
push
sbb
push
cli
mov
insb
dec
insb
inc
popl
xchg
gs
adc
add
lock
mov
push
xorb
cmpsl
xchg
mov
cmp
int
shlb
jno
mov
cmp
pop
addr16
lea
or
pop
stc
adc
lods
adc
cs
scas
sub
fadd
shl
push
inc
in
sbb
mov
sahf
cld
addb
pop
das
adc
shrb
icebp
lock
ds
inc
in
cli
mov
sub
xchg
subl
xchg
mov
jbe
cmp
xor
mov
fisubs
jp
pushf
mov
scas
mov
mov
cs
fisttpl
cmp
jno
add
dec
dec
mov
hlt
or
sahf
dec
sub
dec
jmp
stos
insb
roll
insb
cwtl
aaa
cmp
call
rclb
xchg
lods
xor
mov
loope
mov
je
into
hlt
repnz
and
lahf
sbb
jmp
daa
jb
int
inc
fiadds
inc
adc
cwtl
fstps
pop
mov
flds
mov
outsb
xchg
cmpsl
jo
lret
repz
aad
and
jmp
popa
das
into
cmp
push
out
repnz
pusha
or
xchg
mov
pop
test
ret
dec
popf
mov
pop
jno
pop
xchg
mov
or
jp
or
push
mov
or
mov
clc
inc
xor
and
xor
lret
icebp
sub
push
sub
ret
push
xor
in
lods
cmpsl
mov
mov
ds
in
dec
sub
into
jo
mov
ror
or
push
pop
fstps
sbb
inc
loop
adc
pop
mov
mov
jl
lret
dec
mov
xor
xchg
sbb
or
mov
jp
and
ret
aad
sub
mov
mov
subb
divb
mov
sarb
fsubrl
int
mov
std
rcl
mov
aad
test
fwait
jmp
add
mov
inc
or
dec
xchg
push
push
iret
pop
lret
addr16
into
mov
jnp
mov
sub
pop
das
push
lcall
lds
adc
sub
add
add
mov
push
cs
ja
movsl
pusha
outsb
xor
sbb
push
cmp
pop
push
mov
lcall
test
aam
sti
adcl
imul
leave
ljmp
pop
sub
stos
shlb
ret
xor
arpl
push
es
stos
or
imul
sub
addr16
jb
sub
fbstp
xor
sbb
sbbb
mov
pop
lea
enter
outsl
das
mov
pushf
in
mov
add
add
push
incl
arpl
mov
xor
stc
loop
rcll
cmpsb
cmpsl
add
add
push
out
test
loope
pop
lret
sub
cmp
sub
outsl
or
inc
cmp
nop
dec
dec
fidivl
popw
mov
aam
aas
out
jno
test
ret
push
cmp
ret
push
mov
xchg
mov
inc
jns
repz
xchg
shr
xor
sub
gs
adc
dec
xor
imul
loopne
add
mov
xchg
push
scas
lock
pop
pushw
loope
dec
mov
mov
inc
mov
or
jno
inc
push
int3
ljmp
jbe
negb
and
fcomps
std
insl
jb
aas
ss
or
xor
pop
or
fisttpll
jae
sub
pop
cmp
ljmp
jecxz
out
out
cmp
xchg
popf
sub
in
push
out
movsl
mov
mov
xor
mov
mov
aad
jmp
faddl
in
jae
cmpsb
jne
xchg
das
push
add
movsb
pop
ret
loopne
sub
movsl
ret
lahf
out
lock
arpl
dec
in
sbb
xlat
ret
hlt
into
je
mov
outsb
xchg
jge
xchg
jno
mov
cs
jg
jnp
or
into
ja
mov
mov
xchg
rcll
fsubr
popa
fdivr
pop
jmp
rorb
cmp
xchg
scas
mov
xchg
lahf
subb
ljmp
mov
inc
add
pushl
fucomi
das
push
sbb
repz
stc
jns
inc
xor
sub
lods
lods
dec
add
ret
inc
std
in
data16
jbe,pn
jecxz
fstl
add
inc
xor
xchg
ja
jge
loope
addr16
test
inc
dec
enter
lock
dec
das
nop
cmpsb
push
lds
sub
mov
cmp
mov
das
cwtl
pop
jnp
aas
fcomps
cmp
popa
daa
cwtl
mov
loop
mov
and
sub
pushf
add
xchg
fwait
push
mov
sbb
mov
cmpsl
jmp
mov
shlb
push
xrelease
pop
repnz
pop
sbb
xchg
sbbl
dec
pop
out
stc
popa
hlt
pushf
ficompl
push
aaa
aam
bound
push
ret
push
leave
adc
mov
in
in
imul
mov
jp
outsb
stos
shlb
lods
jge
call
bswap
cld
test
stos
std
mov
adc
dec
arpl
jns
and
sarl
lret
jne
and
ret
vunpckhpd
jl
fldcw
jae
mov
mov
icebp
in
jp
sub
xchg
mov
sbb
popf
push
iret
rol
jg
fldcw
clc
loop
mov
lret
shlb
jne
push
push
adc
icebp
jecxz
filds
push
out
pusha
je
cld
cld
js
mov
jecxz
in
or
or
and
sti
jno
mov
pop
in
xchg
cmp
mov
mov
mov
mov
pop
inc
jno
cmp
xlat
sti
sub
scas
faddp
jno
daa
xchg
fidivrl
js
dec
mov
or
xchg
lret
loopne
push
mov
aaa
push
push
fstp
inc
xor
bnd
cltd
mov
loopne
pop
adc
mov
fldl2e
jecxz
fstpl
and
dec
add
pop
mov
and
inc
nop
pushf
cs
push
sahf
jnp
mov
mov
jle
push
sbb
es
sub
pop
rclb
pop
mov
ljmp
sbb
iret
sbb
mov
mov
aam
fildll
mov
icebp
into
jge
sub
mov
dec
cld
sub
pop
jl
pop
adc
push
mov
inc
aam
jns
loopne
mov
out
inc
shlb
leave
lea
mov
test
lock
std
add
sbb
add
lods
xor
cmc
icebp
hlt
mov
pop
ja
hlt
std
imul
jae
dec
faddl
test
add
xlat
or
xchg
negl
push
fldenv
mov
dec
jae
push
test
neg
clc
subl
daa
xchg
push
jl
jmp
push
nop
xor
loopne
lcall
ficoms
int3
push
mov
scas
aam
or
into
in
mov
inc
or
mov
sti
and
lds
mov
andl
lock
push
inc
push
es
pop
jecxz
scas
out
and
push
xor
movsb
cmp
das
mov
inc
push
jmp
bound
and
pop
rcrl
mov
add
int
cmp
or
sub
mov
aaa
lahf
xor
cmp
repz
daa
mov
fists
cmp
mov
sbbb
xlat
bound
test
pushf
jg
inc
daa
add
pop
mov
lods
popl
icebp
popf
add
dec
enter
or
andb
shl
cmc
js
adc
shlb
movsl
cmc
or
out
sarl
scas
aam
xor
insb
out
push
pushf
and
mov
enter
stc
mov
movb
mov
push
add
movsl
ja
push
push
hlt
pop
test
arpl
cmpsl
mov
xor
mov
and
lret
mov
and
push
adc
scas
shrb
mov
sbb
fsubr
cwtl
jns
jmp
mov
les
lods
dec
lods
xchg
mov
cmp
lea
jne
sbb
jnp
leave
dec
cmc
dec
dec
arpl
addr16
addr16
mov
outsb
ds
mov
test
sub
push
push
push
inc
mov
outsb
iret
xlat
arpl
push
sub
or
outsl
sub
lret
sbb
inc
aas
jb
sbb
into
inc
pop
push
and
cwtl
mov
mov
inc
mov
nop
mov
mov
or
loop
xorb
cwtl
jle
jb
mov
nop
aaa
cmc
inc
xchg
and
popa
arpl
pusha
push
inc
jns
call
inc
std
sub
aam
fisttpll
and
cmp
aas
xcrypt-cfb
cmpsl
and
jns
jnp
scas
dec
data16
lret
dec
push
fucomi
jmp
mov
cmpsb
jge
push
xchg
cwtl
add
mov
mov
cmp
add
mov
or
aaa
or
pop
mov
fisubl
sub
jecxz
add
or
jbe
div
stos
xor
jae
push
sbb
shll
xchg
push
into
arpl
dec
cmp
in
stc
sub
jge
jns
enter
jl
push
pop
jns
mov
insb
and
cmpb
adc
mov
in
mov
mov
sbb
stos
ret
dec
mov
shlb
push
daa
out
or
js
pusha
cmp
add
aaa
mov
mov
cmp
sub
cmp
xchg
sbb
pop
mov
dec
xlat
clc
addr16
or
mov
rcrl
mov
and
xchg
popfw
and
and
xor
icebp
adc
mov
jns
dec
add
xor
std
call
inc
xlat
dec
xchg
sbb
cld
aad
test
stos
mov
dec
into
sbbl
lcall
imul
xor
insb
mov
call
ret
jge
inc
lds
aad
xchg
jae
mov
addr16
xor
lock
push
imul
adc
bound
ficoml
decl
add
sub
fisttpll
ret
leave
pop
or
daa
in
xchg
in
and
push
xchg
cmc
mov
mov
jmp
jo
std
pop
cmp
push
cld
icebp
loop
aas
cs
sub
insb
inc
jb
cld
dec
push
fnstcw
enter
xor
lock
aad
inc
pop
out
adc
loop
int3
xchg
test
adc
sbb
shld
dec
lea
insl
add
sbb
or
das
xor
pusha
or
mov
call
adc
pop
hlt
mov
rol
dec
movsb
adc
popl
xchg
insb
jbe
rcrl
imul
pop
add
ror
add
shll
movsl
fildll
aaa
pop
add
es
fistl
mov
sub
addr16
xchg
dec
es
inc
or
xchg
dec
sbb
je
xchg
pop
xchg
push
out
cmpsl
xlat
and
sub
inc
loopne
test
ljmp
jecxz
cmp
jecxz
hlt
cli
js
push
pushf
cmp
sub
arpl
mov
sbb
jbe
mov
inc
notl
add
sub
mov
loope
ljmp
push
clc
mov
lods
jecxz
jne
das
xor
cmpsb
ror
fisubrs
pusha
cmpl
adc
lods
dec
sub
jg
nop
inc
xlat
and
pminub
pop
fbstp
pop
inc
fisubrs
or
movsb
inc
jle
or
jg
rcrb
outsl
jne
leave
and
and
insl
mov
xchg
ret
xchg
repnz
leave
adc
ret
out
xchg
jno
out
repnz
mov
gs
int
repnz
jne
pusha
jnp
test
lods
jecxz
mov
mov
lahf
cld
mov
xchg
cmp
push
xor
and
pop
sbb
inc
xchg
and
ret
mov
stos
iret
mov
push
xchg
mov
cld
int
mov
sbb
mov
insl
stos
push
pop
adc
xchg
pop
push
iret
jbe
jns
xchg
call
inc
ja
mov
mov
shl
pop
ljmp
mov
sub
xor
mov
mov
lods
shlb
lret
call
mov
ret
scas
or
add
fistpll
ljmp
dec
xchg
pop
pusha
fldl
out
mov
mov
inc
cli
repz
xchg
inc
mov
adc
repz
fs
or
mov
mov
inc
loop
cmpsl
pop
movb
inc
daa
fdivl
insb
sbb
push
in
dec
and
mov
or
push
cld
call
add
lahf
dec
pop
add
adc
mov
mov
push
cs
add
or
pushf
imul
fs
add
ja
push
mov
mov
test
mov
pop
ds
bnd
fistps
fs
dec
add
sub
cltd
fistpl
dec
pop
int
jmp
cmp
sub
push
in
xchg
dec
xchg
adc
popf
mov
pop
and
adc
dec
jbe
inc
sub
jl
sbb
lods
sub
int
repnz
jno
sub
mov
jl
stc
lods
test
cli
xchg
adc
xor
loopne,pn
test
or
ss
cmc
aas
movsb
outsb
inc
pop
mov
sti
scas
pushf
pop
stc
in
stc
push
add
inc
aam
inc
push
dec
shr
xor
repz
mov
jb
jno
xor
cmp
cli
out
popa
scas
mov
inc
sub
rcr
inc
mov
imul
xor
ljmp
mov
dec
xchg
pop
add
mov
adc
fdivrp
sub
push
sbb
fstps
test
mov
add
pushf
movsl
pop
cmp
dec
sarb
repnz
add
cmp
popf
int3
pusha
lret
sub
add
lcall
xor
sub
gs
int3
pop
xchg
mov
in
ja
mov
orb
cwtl
or
add
arpl
cmp
out
mov
inc
adc
sbb
mov
xchg
pop
lods
inc
mov
push
inc
push
lods
mov
mov
ficomps
popa
xchg
stos
insl
idiv
mov
or
subl
test
inc
or
mov
aad
mov
out
cld
push
pop
mov
xchg
pop
lea
subb
shlb
push
call
push
mov
mov
xlat
loop
fsubl
jle
xchg
pop
movsb
jle
mov
mov
mov
adc
xchg
ror
add
push
add
push
push
pop
mov
or
aam
out
sbb
xchg
inc
xchg
in
dec
daa
ljmp
push
dec
adc
dec
lret
sti
add
loop
outsl
inc
ret
shll
xor
mov
imul
cmp
ja
cs
add
cmp
mov
mov
imul
in
sub
mov
dec
clc
mov
enter
mov
push
add
adc
jnp
ss
and
aaa
xor
pop
adc
jnp
ss
dec
sub
lahf
jmp
add
rolb
pop
adcb
jecxz
lods
or
adc
mov
mov
add
sub
adc
add
cltd
fisttps
insl
jo
jb
pop
inc
ds
aad
rclb
jnp
mov
dec
sub
cs
push
aad
test
out
js
mov
das
out
cmpsb
in
pop
pop
rcll
shll
ljmp
ja
dec
xchg
gs
cmpsb
les
pop
pop
adc
pop
sbb
mov
pop
xchg
lods
outsb
mov
out
daa
rclb
cmp
pop
arpl
stc
mov
out
cli
fidivrs
sbb
xor
ds
test
jmp
and
daa
hlt
sbb
sbb
cmp
ret
fadds
adc
call
icebp
jl
or
orl
cmpl
popa
mov
cmp
out
dec
or
push
mov
scas
inc
es
cmc
cmp
sub
pop
add
pop
lret
das
mov
xchg
or
or
addr16
test
lods
subb
stos
pusha
mov
cmp
sbb
addr16
lea
inc
popa
out
test
pop
jo
sbb
outsl
imul
mov
in
mov
mov
repnz
sbb
fldt
inc
shll
lods
jnp
clc
xchg
cmp
xchg
mov
adc
adc
mov
idiv
icebp
pop
xlat
adc
xor
lahf
ret
jge
ret
pop
mov
stos
fs
imulb
int
out
pusha
movsl
loopne
inc
jbe
hlt
repnz
push
inc
sti
xchg
xchg
out
mov
xor
scas
push
pusha
pop
inc
fistl
out
mov
cs
lea
mov
fidivl
fadds
insb
pop
leave
data16
sub
leave
mov
pop
fbld
and
js
pop
cmp
sbb
in
mov
aaa
pop
inc
mov
xchg
jl
push
faddl
ret
sbb
and
mov
addr16
mov
sub
sub
mov
insl
xchg
hlt
mov
jb
lret
xor
pushf
scas
fcoms
arpl
mov
loopne
imull
mov
out
jge
mov
xchg
ljmp
sbb
sub
inc
arpl
call
scas
mov
xchg
mov
lds
mov
and
pop
lds
sarb
xor
jle
push
test
mov
lcall
mov
loop
inc
and
imul
cmp
ljmp
in
in
lret
jno
adc
dec
test
in
dec
mov
lea
mov
push
add
xchg
dec
mov
cmpsb
xchg
pop
lret
jae
mov
and
mov
imul
sub
jns
nop
sbb
rorl
out
push
xchg
ret
clc
mov
mov
jmp
inc
cli
call
cmp
fisttpl
xor
in
mov
sbb
push
sbb
popl
xchg
std
mov
inc
mov
mov
sbbb
hlt
outsl
movsl
in
sbb
xchg
cmp
int
dec
out
sbb
sub
jmp
pop
xchg
ds
adc
pusha
and
jmp
and
lds
inc
mov
cltd
and
inc
out
test
push
sahf
adc
in
scas
ja
dec
pusha
fdivr
mov
mov
loop
cmc
orb
sub
dec
xchg
cmp
cmp
push
cmpsb
ret
push
lret
stos
and
cltd
mov
jbe
iret
adc
and
sarl
or
and
mov
or
sbb
call
mov
sbb
hlt
mov
mov
pop
cmp
cltd
aaa
mov
fidivl
jg
adc
jl
in
push
mov
dec
das
insl
adc
mov
jbe
xor
iret
jne
in
lcall
xchg
dec
clc
hlt
insl
and
pop
jnp
mov
in
movsb
rcll
fildll
mov
xchg
loopne
cmp
rcrb
pop
enter
or
lods
repnz
cwtl
bound
icebp
sub
rclb
aaa
push
cmc
repz
xchg
add
cmp
out
dec
iret
jg
push
inc
add
faddl
mov
pushf
pop
fbld
dec
insb
sahf
lea
cld
pop
adc
sbb
push
dec
mov
adc
xlat
mov
mov
xchg
pop
jp
fisttpll
ficoms
xorb
xchg
jmp
cmc
mov
icebp
sub
ret
jg
mov
out
test
jae
pop
insl
xchg
mov
xlat
sti
enter
push
mov
sbb
lods
loopne
inc
xchg
push
or
imul
stc
rcl
out
ss
xchg
jne
xchg
arpl
xlat
xchg
jge
scas
adc
xor
stos
sbb
push
test
pop
lods
rorl
ret
addr16
sti
adc
mov
imul
pop
cltd
mov
mov
xchg
dec
adc
cmp
mov
popf
nop
popf
inc
xchg
add
repnz
inc
insl
adc
in
adc
sub
push
shlb
add
enter
or
flds
cmp
xor
sub
dec
mov
sbb
pop
cmpsb
xor
jbe
in
cmp
nop
cwtl
ljmp
aas
mov
arpl
xor
xor
or
and
scas
fisttpll
scas
lret
mov
and
mov
je
jmp
js
lahf
lahf
fnsave
sub
pop
xchg
subb
sub
adc
cmpsb
mov
sbb
loopne
cld
pop
mov
sub
xchg
mov
cmp
stc
adc
cmp
adc
jb
inc
cmp
les
sbb
xchg
mov
std
xor
pop
cmc
push
sub
inc
sub
and
outsl
lcall
into
int
test
adc
shll
dec
repnz
pop
imul
fisttps
xchg
push
add
mov
mov
push
fsubr
icebp
int3
inc
cmpsl
jecxz
ja
xor
mov
and
mov
adc
fsubrs
lret
xchg
sbb
test
mov
fwait
insl
dec
mov
xchg
or
pop
and
pop
mov
sbb
xor
popl
sbb
adc
inc
push
mov
sub
popa
xchg
sub
mov
sar
adc
jg
ffreep
stos
sbb
add
cmp
cmp
jle
rorb
insb
loop
cmp
movntq
sbb
cwtl
push
pop
repnz
inc
sub
xchg
or
aad
dec
jns
ljmp
push
call
subl
push
out
xchg
jne
shr
stos
mov
aam
sbb
adc
cld
fisttpll
mov
adc
xorl
xchg
mov
in
cmpsb
cmpsl
adc
sub
xor
xchg
mov
imul
or
lret
cmp
mov
sti
dec
add
xor
mov
in
std
sbbl
push
pop
jb
fildl
add
adc
inc
rorl
xor
test
arpl
mov
lahf
insb
adc
aad
add
outsl
xor
movsb
popa
xchg
pusha
inc
lea
setge
mov
ret
push
out
inc
ret
and
test
adc
cmpsb
ficoml
addb
fcoms
test
dec
mov
popa
cmp
mov
sar
lahf
lods
add
pop
cwtl
sub
jge
or
or
js
les
mov
iret
inc
or
je
push
sub
mov
mov
test
dec
or
imul
or
xchg
mov
mov
xchg
lcall
das
push
xor
ja
mov
test
fnsave
sub
xor
lret
and
push
pusha
and
cmp
enter
aam
mov
lods
fcmovne
out
adc
inc
mov
push
mov
push
jle
mov
mov
inc
inc
sbb
mov
push
or
add
mov
int3
loopne
jnp
stc
cmp
lods
inc
scas
in
dec
push
lret
imul
jne
mov
xchg
aam
ret
loopne
fdivr
or
sub
and
xor
or
fs
fsubrl
test
out
out
test
bound
loope
sbb
test
gs
mov
adc
and
cmp
outsb
cmp
or
mov
lock
dec
mov
pop
xor
mov
cmp
mov
pop
adc
xchg
jp
roll
out
cmp
lahf
mov
xchg
scas
call
jo
ret
lcall
in
cwtl
shll
cli
and
push
jnp
adc
inc
loope
stc
pop
dec
dec
outsb
xchg
mov
fisttpll
mov
mov
sbb
arpl
bound
cmc
mov
push
stos
add
sbb
nop
call
iret
mov
in
mov
jns
mulb
pop
jo
adc
mov
dec
lahf
dec
leave
cwtl
out
jmp
mov
dec
mov
jnp
mov
mov
push
push
push
xchg
loopne
sub
mov
mov
mov
lahf
popa
mulb
pop
aas
shl
mov
dec
pop
cmp
add
xchg
shlb
fildll
jbe
inc
enter
int3
xchg
test
sub
mov
enter
sbb
sahf
push
mov
push
test
add
xlat
imul
mov
shl
fildl
adc
out
mov
xchg
gs
dec
cmp
add
sbb
cld
test
push
aad
jmp
or
fildl
fldcw
rclb
inc
mov
pop
and
cmp
insl
stos
push
in
arpl
pop
aas
negl
mov
enter
movl
inc
adc
cmpl
enter
les
mov
xor
faddp
jmp
sub
cmpsb
and
daa
fadd
test
test
scas
ret
adc
mov
stc
mov
push
pandn
cmp
mov
add
movsl
xorl
pop
sbb
mov
push
mov
loop
clc
inc
sub
xor
rcll
mov
adc
mov
cld
mov
and
jecxz
mov
jb
cmp
and
mov
lea
sbb
jb
and
xchg
xor
adc
or
push
cmp
inc
mov
jge
pop
jl
jle
outsb
mov
sub
cmpsl
imul
add
pop
xor
movsb
xchg
popa
fisubrl
addr16
and
add
imul
jnp
popa
lods
icebp
push
pop
inc
adc
xor
inc
das
cmpsw
pop
imul
sub
andb
jb
scas
test
popf
dec
andb
xchg
scas
and
outsl
arpl
mov
ret
sub
adc
inc
jae
mov
aad
mov
ljmp
pusha
mov
lcall
scas
push
lods
dec
add
mov
mov
dec
mov
addr16
scas
pop
lods
lcall
gs
mov
cmp
scas
addl
add
jecxz
jmp
mov
arpl
stos
nop
enter
outsb
mov
popf
push
gs
add
movsl
xchg
popa
dec
mov
les
adc
repnz
loop
repnz
mov
lea
sub
add
dec
and
fmuls
sbb
clc
in
test
dec
out
shr
mov
leave
or
xchg
mov
in
jae
mov
pushf
leave
jg
test
shrl
int
pop
cli
mov
or
and
pop
enter
insb
pop
mov
repnz
push
adc
and
mov
sbb
lret
les
adc
sbb
mov
push
push
mov
mov
dec
push
add
pop
pop
cltd
popa
pop
dec
cmp
aas
xor
arpl
lret
xor
jl
sub
scas
imul
fmulp
icebp
jmp
psrlq
jno
push
adc
mov
xchg
jecxz
pop
adc
scas
jl
leave
pop
or
pop
add
adc
cmp
add
mulb
scas
pop
inc
in
pop
scas
inc
sbb
adc
or
pop
dec
vsqrtss
ret
push
pop
pop
in
sbb
jge
enter
ficoms
inc
or
cmp
arpl
jmp
or
enter
fimuls
es
xchg
jno
and
bound
adc
xchg
iret
sbb
ss
imull
adc
out
cmp
dec
les
xchg
xor
adc
xchg
out
push
push
sub
mov
imul
and
mov
push
out
cmpsb
dec
mov
mov
push
sbb
pop
outsl
mov
mov
popa
cld
aam
sbb
cmp
jmp
inc
leave
dec
cmpsb
mov
sub
dec
or
movsb
aaa
fs
jp
and
and
add
xchg
fists
dec
jno
lock
pop
pop
sbb
mov
add
and
stos
dec
jo
pop
and
mov
inc
je
fwait
and
das
dec
xor
dec
sti
jb
xchg
cmp
xchg
movsb
jnp
adc
jp
and
cmpsb
sub
inc
mov
out
unpckhps
xchg
cmpsl
cmp
mov
inc
inc
stos
adc
inc
sbb
mov
or
nop
mov
shr
pop
inc
sub
xorb
roll
inc
mov
popf
aaa
adc
stos
arpl
mov
add
mov
jg
movsb
add
adc
stos
mov
sub
popf
xchg
inc
lds
xor
inc
xor
loop
xchg
insl
push
sbb
imul
mov
mov
imul
pop
clc
cmp
mov
insb
scas
popa
and
push
outsb
out
lods
sub
inc
mov
sub
in
jno
inc
cltd
arpl
je
mov
push
push
pushf
fcoms
push
push
gs
jnp
icebp
repnz
push
dec
xor
arpl
jns
xor
scas
loopne
lahf
pop
push
test
repnz
jnp
xchg
lock
mov
sub
mov
fs
or
loop
jge
cmpsl
cmc
hlt
mov
mov
mov
scas
sbb
push
adc
ror
dec
adc
shl
rorl
lods
mov
add
cmp
es
scas
push
cmp
test
call
fisubrs
push
xchg
or
insb
ret
in
call
push
cmp
mov
sarb
pop
out
mov
roll
xor
xor
jle
nop
fisubl
loope
sbb
clc
inc
test
ror
jae
ja
sbb
ret
pop
ret
repz
mov
sbb
loop
lret
les
lds
inc
sub
iret
lods
fistl
imul
pop
dec
je
pop
fnstcw
mov
imul
int3
fwait
push
adc
or
push
dec
mov
jns
adc
lods
and
aad
aas
xor
ds
out
pop
mov
pop
xor
push
inc
cmp
mov
pop
sub
cs
iret
fdivrp
add
lds
fstps
mov
ja
rcrl
fdivrs
in
and
push
loope
sub
inc
aam
std
ja
daa
push
mov
mov
dec
add
xlat
sub
pop
insl
sub
pop
testb
jae
mov
adc
jmp
lock
loopne
or
lret
push
arpl
push
adc
loope
jno
inc
jge
lods
sub
sbb
add
lret
loope
mov
adc
shlb
mov
lret
mov
jbe
orl
mov
adc
addr16
pop
mov
hlt
aam
cmp
inc
xor
jmp
in
push
dec
pop
mov
sub
pop
mov
fnstcw
in
jnp
pushf
sbb
mov
das
shll
dec
jnp
loopne
xchg
sub
imul
pop
cwtl
test
ja
aad
inc
push
scas
add
xor
lcall
inc
mull
adcb
lds
jmp
inc
in
inc
xchg
jae
decl
divl
repnz
testl
negb
cs
pusha
dec
mov
xchg
add
jbe
daa
imul
ljmp
dec
out
lret
aaa
aas
lret
das
scas
mov
jg
fcomp
roll
dec
mov
xchg
aaa
sub
jge
es
aam
imul
xchg
mov
cmpsl
test
lea
xor
add
push
mov
xor
insl
adc
push
and
xchg
pop
rolb
jno
lods
imul
push
out
mov
jl
or
and
mov
push
out
test
sti
dec
inc
outsb
cmp
adc
mov
pop
adc
pop
mov
adc
jl
call
or
mov
pop
push
and
pop
out
pushf
mov
imul
scas
dec
mov
cmp
dec
movsb
mov
ds
and
repnz
xchg
cmpb
jecxz
loop
das
shrl
adcb
ficomps
pop
mov
add
dec
data16
int
cli
mov
pop
cli
popf
ds
ret
mov
je
fdivrs
leave
scas
add
mov
in
mov
fisttpll
std
adc
dec
push
lock
mov
adc
sub
das
inc
xor
lods
imul
mulb
or
fcmovu
push
inc
ja
jno,pn
jno
inc
mov
dec
rcll
mov
inc
jg
push
dec
push
xor
xchg
cmp
pusha
xchg
hlt
lock
jge
sbb
arpl
aaa
hlt
cmp
outsb
enter
lcall
jno
test
cli
jge
faddl
test
cmp
jmp
ror
andb
mov
inc
fs
jbe
dec
movsl
mov
cli
js
jge
sti
mov
mov
push
imul
jg
add
pop
movsl
aas
sub
cmp
stc
enter
pop
fnsave
std
mov
lds
int3
fisttpl
push
sub
sub
call
xchg
jns
popf
jne
dec
cmp
jecxz
repnz
inc
xchg
iret
inc
xchg
adc
jno
dec
dec
xor
test
pop
lcall
sbb
add
rclb
xor
nop
sub
mov
fisubl
aaa
leave
sbb
into
pop
mov
repnz
fidivs
jne
test
cwtl
popf
pusha
mov
ret
rcl
mov
pop
or
cmp
fs
xchg
cmpl
add
xor
xchg
lret
lds
xchg
out
add
or
add
loopne
inc
decb
stos
add
paddusw
cmp
jb
fldenv
loopne
sahf
inc
orb
xor
fbstp
xchg
into
dec
jno
cmpsl
mov
fcomip
lret
ljmp
adc
sub
and
sub
cmp
lahf
sbb
enter
mov
sbb
xor
mov
dec
stc
dec
addr16
sub
cwtl
out
and
mov
sub
data16
pop
lahf
sbb
jle
test
lcall
test
sti
daa
stc
pop
popf
les
es
sbb
es
mov
in
notb
andl
mov
js
lret
pop
out
outsl
std
mov
js
or
ret
ljmp
jae
movsl
mov
xchg
add
mov
in
dec
int3
push
out
ret
xchg
push
adc
xchg
out
xchg
gs
mov
ror
push
inc
sti
aaa
push
out
test
rcll
and
std
into
cmp
pusha
ja
xlat
xchg
dec
in
cld
sbb
mov
cltd
rorl
clc
mov
jmp
test
push
sti
incl
mov
pop
scas
push
dec
inc
addr16
sti
jl
ret
xchg
cmp
js
arpl
stos
das
mov
dec
xor
scas
cmp
imul
push
mov
mov
inc
test
lahf
xchg
and
cmp
pop
mov
or
mov
xlat
icebp
sbb
movsl
dec
mov
pusha
adc
sbb
push
lea
imul
inc
aas
and
es
frstor
pop
popf
lock
pop
pushf
into
mov
cmc
xchg
pop
das
icebp
push
imul
mov
popf
andl
mov
xorb
in
add
out
add
jno
outsb
imull
filds
sbb
loope
or
push
push
insb
push
js
xchg
test
sub
xor
xor
ljmp
in
pop
movsb
xor
clc
outsl
fisubrs
loope
daa
imul
popa
xchg
scas
adc
xchg
aas
mov
mov
add
sahf
mov
rcll
mov
push
dec
int
push
shll
imul
push
xorb
mov
out
adc
mov
and
lret
pop
sbb
out
mull
fistl
and
xchg
into
cs
cmc
inc
push
testb
jne
or
nop
imul
outsb
add
jb
negl
int
addr16
fwait
cmp
adc
xchg
sub
lods
push
ljmp
adc
scas
xor
fsubp
dec
and
mov
adc
test
repz
sbb
mov
test
adc
icebp
scas
jle
adc
imul
testb
addl
sbb
ja
lahf
ljmp
mov
xor
insl
push
pop
sbb
loopne
mov
mov
fdivrs
popa
cmpsl
bound
jo
imul
lcall
lret
cmp
xor
fs
lods
jmp
inc
out
cmpsb
cmp
arpl
pushf
nop
fmull
mov
loope
movsl
pop
jb
scas
sbb
inc
dec
notl
or
aad
xchg
xlat
scas
int3
outsl
mov
inc
std
sti
push
sub
jp
andl
inc
icebp
popa
sbb
test
xlat
sub
insb
sub
inc
and
test
add
fimuls
pop
xchg
xchg
lods
jge
inc
fnstsw
sub
fs
lret
shr
inc
fsubl
loopne
es
xchg
rcll
pop
pop
xchg
add
inc
insb
cmp
rcll
mov
out
jne
call
mull
jbe
push
xchg
adc
arpl
popf
pop
xchg
mov
jns
dec
scas
push
mov
xor
aas
pop
stc
add
test
mov
mov
enter
test
cltd
mov
adc
xchg
dec
icebp
repnz
cmp
incb
fmuls
jle
xor
ljmp
rcll
gs
xchg
rsqrtps
cs
xchg
mov
push
sarb
insb
and
mov
mov
mov
cmp
out
jns
leave
outsl
mov
roll
nop
fidivrs
cmpsb
push
or
push
mov
adcb
xchg
xor
mov
cmp
sbb
mov
dec
fbld
lcall
mov
jp
lods
push
dec
cld
je
scas
dec
xchg
fwait
cmpsb
sbb
xor
test
lcall
testl
mov
cmpsb
adc
mov
lods
adc
sarb
and
stos
hlt
or
enter
sub
mov
jbe
icebp
mov
push
adc
pop
aas
in
idivl
imul
cmp
inc
pop
mov
add
jge
sub
pop
xlat
stc
push
ret
sub
inc
mov
sub
jg
ret
cmp
push
and
jmp
ret
cmp
mov
mov
lods
cmp
mov
xchg
scas
mov
test
icebp
imul
hlt
out
mov
mov
jl
fwait
sub
jne
inc
xchg
clc
fisubs
inc
sbb
and
and
mov
lds
push
int
cmpsb
mov
test
test
cmp
sub
mov
cmpsl
mov
pop
stos
sub
cmc
iret
push
push
cwtl
or
pop
push
mov
xchg
sti
lds
test
xor
int
jo
mov
cltd
pop
ret
data16
das
imul
xchg
ret
aam
ljmp
dec
in
dec
ss
imul
pop
add
lods
inc
xlat
add
arpl
insb
cmpsl
mov
imul
push
dec
sub
pop
cmp
xchg
stc
pop
xchg
in
pop
arpl
fcomps
and
fsubr
push
repz
push
jmp
inc
push
push
pop
imul
mov
mov
repnz
fmuls
sub
js
and
pop
out
mov
scas
xchg
cmp
lods
mov
fdivrs
dec
shll
xchg
inc
or
mov
in
sub
das
rep
xchg
add
adc
push
lods
ret
repz
inc
adc
dec
pop
fidivrs
cs
inc
lods
push
cmp
rep
insl
pop
pop
mov
and
int3
sti
aam
dec
stos
sub
fsubs
adc
mov
sti
scas
mov
cmp
arpl
xor
aaa
ret
into
xlat
mov
imulb
mov
imul
imul
mov
jle
loopne
lods
cmp
les
mov
dec
push
cwtl
pushf
pusha
push
rcr
outsb
arpl
in
test
or
dec
outsl
pop
mov
cmpsl
xchg
rorl
or
xchg
neg
jg
xchg
sbb
in
pop
sbb
sahf
xor
dec
xor
mov
push
or
push
cli
push
cmpsl
inc
cmp
jbe
inc
lcall
scas
fisttps
add
test
mov
test
xor
call
mov
in
jecxz
scas
addb
sbb
jno
fstpl
loope
lea
xor
scas
pop
sub
out
cmpsl
mov
cmp
aas
cwtl
pop
imul
xchg
sahf
push
pusha
and
pop
cli
out
push
push
fstpt
xor
fstpl
loope
shrl
mov
cmp
mov
stos
mov
sub
dec
jecxz
mov
mov
scas
dec
cs
dec
pop
jmp
xor
inc
in
in
lcall
jno
or
mov
into
clc
pop
add
jmp
add
mov
jle
or
or
insb
movlhps
js
pop
movsl
lahf
mov
test
sub
addr16
jg
xorl
mov
sbb
add
std
ja
xor
inc
mov
lahf
imul
imul
push
sub
insl
pop
sbb
sahf
sub
cs
pusha
and
cwtl
int
nop
jae
push
lret
adc
sarb
adc
popf
pop
mov
repz
cmp
lods
hlt
push
jmp
mov
push
mov
push
add
insl
and
push
shr
loop
ret
fistl
xor
add
pop
pop
adc
or
sbb
push
stos
mov
loop
insl
jge
cld
mov
stos
and
lock
enter
mov
mov
in
jne
out
push
dec
out
cld
cld
repz
popa
cmpsb
out
negb
loop
mov
test
xorl
sbbl
popa
fsub
add
je
cmp
iret
vmovaps
lea
pop
mov
lock
xchg
or
jecxz
lahf
pop
je
xor
push
dec
call
lods
cmp
les
movsl
pop
inc
sbb
rcll
dec
jge
xchg
ja
orl
xor
push
fwait
in
sbb
xchg
in
ss
fsubrl
add
rorb
sbb
adc
xchg
lcall
sbb
or
or
adc
comiss
pop
sbb
dec
inc
cld
ficomps
jae
dec
sub
cmp
mov
aaa
lcall
out
test
sbb
xchg
cmp
ss
mov
sub
xor
jle
xor
out
mov
fsubrl
dec
mov
mov
fisubs
cmp
lock
ds
xchg
push
cltd
ret
mov
aam
sti
pop
icebp
js
and
or
das
int
pop
insb
jle
mov
sbbl
cltd
test
mov
pop
cmp
mov
aam
lcall
icebp
or
insl
lret
cli
lods
or
inc
sbb
pop
xchg
cmpsb
hlt
outsb
sbb
adc
movsl
loopne
mov
fsubp
cwtl
and
mov
rcl
test
add
ja
les
jno
cmp
add
mov
cs
sub
test
stc
xlat
pop
mov
std
mov
push
dec
mov
cmpsb
inc
cmp
out
outsb
arpl
jp
jecxz
push
dec
push
les
movsb
inc
ljmp
pop
enter
into
subb
cmp
sbb
aam
or
or
xor
pop
pop
dec
filds
sbb
ss
add
jne
enter
mov
push
hlt
add
push
into
pop
mov
loopne
test
add
dec
mov
xor
aaa
xor
and
pop
jle
jo
and
test
jne
jle
out
loopne
or
js
orb
mov
aas
mov
push
repz
and
iret
ljmp
mov
and
call
or
push
jge
shlb
mov
cmpsl
adc
test
jb
int3
or
aam
push
pop
inc
cmp
inc
adc
mov
scas
xorl
out
mov
loope
cli
mov
icebp
cs
pop
adc
sbb
mov
bound
mov
inc
lea
push
xorl
mov
cmp
jne
pop
pop
pop
jne
adc
and
or
jne
adc
and
test
ret
ficoms
ss
cmpsb
lock
pop
mov
or
sub
mov
add
fiadds
inc
subl
bswap
insb
dec
adc
lods
mov
adc
rcrb
pop
mov
call
cmp
test
lahf
call
jmp
arpl
xchg
jnp
push
in
xchg
add
ds
out
mov
xchg
xchg
ret
mov
popa
and
cmp
jb
xor
mov
flds
xchg
jmp
pop
push
les
pop
jecxz
jmp
enter
mov
loope
xchg
add
mov
xchg
push
cmp
dec
xchg
imul
pusha
push
rorb
sbb
xchg
iret
mov
adc
fwait
das
mov
fimull
jns
in
icebp
inc
in
hlt
add
clc
mov
das
xor
mov
shll
pop
push
iret
mov
add
arpl
rorl
dec
cwtl
fmul
test
add
fwait
cmc
xchg
jae
data16
pop
ja
cmp
ja
out
leave
cmp
inc
push
mov
xor
push
in
xor
jnp
jno
lret
dec
test
jbe
mov
adc
pop
mov
leave
fiadds
mov
lods
push
cmc
sbb
subb
jne
pop
mov
push
push
ret
fbstp
xor
loope
cwtl
or
out
test
out
clc
jb
inc
xor
mov
data16
sbb
mov
dec
push
pusha
js
xchg
and
or
add
nop
jl
cmpxchg
inc
rcl
pop
sbb
mov
cmpsb
fisubrl
pop
mov
cwtl
mov
add
xchg
and
repz
test
adc
test
add
or
pop
in
inc
imul
pusha
xchg
mov
and
inc
jae
test
pop
popl
or
das
dec
inc
ljmp
xbegin
and
mov
mov
scas
test
daa
xor
sbb
lods
push
cmp
cmc
push
jmp
int3
mov
pop
pop
pusha
add
cmp
mov
test
fcomip
jnp
dec
xchg
testl
jno
add
jo
push
xchg
push
clc
pusha
pop
mov
into
mov
mov
xor
cmp
and
jp
ljmp
pop
push
push
outsb
js
xchg
inc
cmpsb
push
test
movsl
test
jo
pop
sbb
daa
ret
es
mov
push
dec
jae
mov
fwait
movl
and
mov
adc
jmp
inc
mov
cmpsb
loop
fists
clc
dec
add
jno
lahf
jno
pop
fwait
adcb
or
or
in
jl
and
hlt
and
inc
adc
jle
pushf
xor
jno
cmpsb
adc
jp
into
sti
jb
test
popf
inc
aam
sub
push
push
test
jae
in
in
test
xchg
add
jmp
rcrl
inc
sub
fsubs
clc
add
push
dec
fisubl
jle
mov
nop
mov
imul
dec
iret
jnp
sub
loope
jecxz
outsb
test
xor
int3
int
adc
mov
orb
ret
cli
int3
subl
imul
jo
gs
fcmovbe
jmp
stos
mov
pop
pop
xor
pop
mov
je
cli
imul
jecxz
mov
inc
mov
dec
jp
fimuls
jp
xor
jge
xchg
xchg
xor
mov
jns
dec
xor
sti
in
lret
bound
jnp
and
in
mov
in
adc
mov
add
pop
into
or
xchg
push
inc
xchg
push
mov
xor
xchg
stos
xor
xchg
push
sub
push
ja
xchg
mov
lock
mov
mov
imul
popf
pop
in
pop
mov
ja
mov
jne
pop
cmc
xor
mov
jne
ds
pop
jg
outsl
sahf
add
outsl
mov
lcall
sub
pop
bound
scas
insl
iret
jmp
jle
ja
data16
add
sti
test
sub
sbb
je
in
cmp
aam
add
inc
sub
shrb
insl
or
fidivrs
sbb
ljmp
stc
sub
stc
not
adc
jge
loop
sub
jnp
fistps
cmp
add
pop
ja
push
cld
test
dec
jns
push
xor
lods
sbb
sub
xchg
rolb
clc
push
gs
jl
sbb
sbb
jge
imul
and
mul
jns
jns
cmc
jmp
dec
mov
inc
and
ss
sbb
cli
ds
std
stc
andb
xor
mov
pop
ljmp
fadd
enter
sub
stc
push
xchg
push
into
idivl
xor
push
enter
enter
and
lods
pop
push
lods
iret
push
mov
std
mov
sbb
pop
jge
test
andl
pushf
lds
fwait
mov
cmp
mov
sub
mov
shrl
push
jg
sub
push
xchg
sbb
jle
push
inc
subl
and
mov
aaa
inc
test
test
mov
ljmp
lea
into
mov
sbb
dec
pushf
movsl
xchg
push
sub
ja
stos
pusha
insl
and
movsl
pop
mov
movsl
ljmp
xchg
add
push
test
jo
cli
add
les
shl
sbb
push
or
popf
jmp
lock
mov
fwait
mov
iret
leave
mov
lret
add
adcb
sbb
fs
scas
add
sbb
cmpsl
repz
imulb
out
lock
and
rorb
or
scas
inc
in
loop
in
or
xchg
and
inc
cmpb
roll
bound
pop
inc
jo
mov
call
dec
popa
cld
fstp
xchg
test
sbb
aas
dec
outsb
ss
lods
sbb
xlat
ljmp
enter
adc
xchg
dec
sarl
and
cmp
out
and
xchg
aad
dec
sbb
cmp
dec
adc
add
icebp
or
sub
push
inc
into
adc
cmp
or
call
insl
inc
sarb
out
je
xlat
xchg
add
stc
mov
pusha
jo
inc
mov
pop
sbb
jns
push
lret
cmp
and
mov
stc
jmp
sub
mov
mov
xchg
xor
aad
outsb
xor
ds
xor
and
icebp
cmpl
daa
xchg
push
loope
out
ficomps
jo
lcall
ljmp
sbb
xor
mov
mov
data16
les
pop
sbb
jns
fs
loop
adc
mov
adc
xor
das
data16
xor
repz
sarb
and
lea
jae
lea
mov
out
es
popf
into
sbb
cmpsl
pop
test
ljmp
sbb
dec
or
je
repz
and
imul
adc
mov
cwtl
cmpsl
mov
int
cmp
pop
fwait
or
or
xchg
xor
sub
in
loop
ds
adcb
pushf
jecxz,pn
jmp
push
sbb
xchg
jp
popa
xor
dec
mov
jmp
aas
sti
xchg
lods
mov
xchg
int3
adc
jl
enter
xchg
mov
cltd
cli
xor
fdivrl
testl
call
and
cli
cmp
sbb
xor
cmpsl
xor
adc
dec
xor
push
cmpsl
js
pusha
inc
imul
loop
aaa
xchg
cs
xchg
in
sub
push
push
xchg
jns
rclb
jnp
xchg
adc
repz
ret
sti
mov
mov
sub
push
sub
inc
inc
addr16
sbb
xchg
ret
sti
jns
push
jae
fsts
fisubrl
aad
mov
lods
mov
lret
adc
pop
adc
out
cmpl
and
rolb
or
inc
scas
int3
sbb
sub
sub
xorl
jmp
inc
int3
sti
sbb
mov
nop
cmp
inc
xchg
fstl
loope
mov
dec
and
repnz
push
ret
sbb
add
sbb
or
push
push
jnp
mov
divl
inc
jns
sub
xor
xorb
testb
dec
iret
cmpl
in
mov
dec
pop
fwait
or
mov
push
sub
sub
je
call
roll
add
xchg
jb
mov
mov
sub
mov
jo
stos
mov
dec
add
push
add
mov
mov
lcall
les
stos
outsl
ja
mov
xor
fnstcw
lods
sub
add
sbb
fidivrl
adc
mov
pop
inc
mov
dec
push
sub
shrb
mov
ljmp
ss
cmc
adc
xchg
fmuls
rclb
sub
repz
or
loope
dec
mov
aam
roll
adc
or
sarl
insb
cmpsl
mov
jge
dec
pop
movsl
ret
imul
sub
inc
aad
fdiv
sar
aad
sub
sbb
mov
aad
jb
push
lret
iret
sbb
test
push
dec
fisttps
mov
dec
and
sbb
cmp
jge
shll
xor
aas
out
inc
xrelease
push
fdiv
rcll
les
mov
sbb
or
aas
loopne
dec
sub
xchg
fsubrp
ret
lret
cs
or
movsl
cmpsb
icebp
repz
cmpsl
mov
xor
lret
ja
out
mov
into
pop
jnp
into
mov
dec
add
xchg
push
and
push
push
flds
mov
mov
adc
xor
sub
repz
movsl
andl
lret
mov
cmp
push
mov
cld
aas
sets
jnp
aam
andb
cmpb
out
lods
pop
rol
ror
cmp
sti
loop
loope
into
or
sub
xlat
or
cwtl
incl
mov
lahf
mov
xchg
int3
adc
arpl
xchg
add
xor
outsl
jne
shll
div
loopne
ss
xor
or
mov
push
dec
jl
in
lock
in
xchg
mov
inc
lds
xor
mov
adc
out
inc
inc
mov
lods
adc
mov
lahf
gs
repz
scas
inc
leave
inc
mov
push
mov
loop
jmp
imulb
xor
rcl
test
lcall
sbb
testb
sbb
rclb
mov
or
dec
jb
sbb
cli
sub
mov
iret
cwtl
ret
cmpsl
inc
rolb
scas
jae
inc
out
mov
xor
push
lret
nop
out
pop
dec
ljmp
jnp
loop
push
ficompl
jnp
add
shll
jl
dec
cmp
lcall
sbb
cmp
lods
fldl
inc
mov
xor
dec
mov
push
mov
lret
xchg
sarl
imul
sbb
or
inc
xchg
jmp
dec
sub
leave
xchg
dec
cmp
lahf
pop
mov
or
sub
nop
out
xchg
mov
fsubr
mov
shr
lds
daa
and
jbe
dec
add
pop
sti
ret
push
dec
mov
jo
dec
jne
popf
push
je
idiv
inc
scas
daa
xchg
cwtl
lahf
dec
mov
pop
jl
fs
andb
push
mov
addb
fnstcw
mov
lods
sbb
pop
push
dec
adc
sbb
cmc
jmp
scas
mov
inc
xchg
or
sbb
or
sbb
pop
out
jo
adc
sub
mov
aas
ffreep
enter
xchg
jns
in
jb
jg
xor
mov
push
jnp
pop
sub
std
xor
les
js
outsb
pop
lods
leave
mov
push
or
xor
xchg
fnsave
jb
nop
mov
adc
mov
pop
xor
aad
movsl
lock
std
notl
lahf
xchg
or
dec
negb
xchg
sbb
xchg
fidivrl
ret
push
xor
loop
dec
sub
ds
inc
mov
xchg
or
shrb
jne
lds
and
pop
pop
adc
loop
pop
in
hlt
push
mov
sub
aad
mov
stos
jnp
mov
jb
into
adc
cmp
adc
repz
mov
scas
cwtl
dec
mov
add
push
adc
stos
loopne
xchg
and
shl
pop
cltd
movsl
pop
mov
jae
adc
stos
jns
adc
adc
testl
and
and
adc
fisttps
xchg
xchg
dec
cmpsl
fcmovu
loop
lret
in
popl
scas
rolb
imul
dec
scas
cs
cmpsb
mov
loopne
rolb
or
xor
adc
out
movsb
mov
icebp
xor
imul
ficoml
pushf
mov
ljmp
lret
in
jne
mov
and
dec
fldenv
call
xor
aaa
cmp
lcall
xchg
lds
and
dec
xchg
pop
mov
push
popf
cli
jmp
js
mov
enter
and
inc
adcl
push
mov
xlat
fs
or
xchg
add
mov
and
mov
xlat
adc
pop
mov
add
das
mov
mov
daa
xlat
sub
xchg
inc
data16
arpl
loopne
inc
cmp
orl
push
jo
test
jp
jg
xchg
push
adc
jp
pop
sahf
fmull
imul
stc
xchg
jmp
shrl
xorb
sbb
mov
jle
movsb
and
lret
pushf
add
incb
and
enter
int
push
inc
in
in
icebp
in
push
leave
mov
adc
cmp
call
jl
sub
mov
outsb
push
jge
add
orb
ljmp
xchg
shr
in
in
mov
mov
fs
cmp
adc
pop
test
dec
imul
loopne
cmp
add
gs
sub
movsl
orb
jp
cld
inc
sbb
xchg
cs
xlat
mov
xchg
push
in
flds
movsb
imul
fwait
jae
bound
or
sub
pop
push
idivl
in
or
pop
sub
and
loop
cmp
dec
mov
jo
sub
leave
mov
sahf
jge
sbb
jg
cmc
xor
pop
pop
xorb
mov
faddl
add
mov
rcr
sahf
sbb
or
insl
jmp
push
jbe
push
xchg
sti
inc
aaa
mov
cli
scas
ror
and
fisttpl
cmp
push
pusha
and
sub
notb
cmp
testb
push
push
stos
pop
mov
ret
pop
and
lods
daa
cmpsl
lret
push
xorl
enter
add
fisubs
stc
scas
mov
pop
cmp
iret
and
mov
inc
js
loope
adc
xchg
movsb
femms
xchg
sub
dec
lret
xchg
mov
stos
xor
inc
mov
cmp
lock
push
pop
mov
inc
aaa
repz
mov
hlt
sub
pop
stos
rcrw
pop
mov
dec
out
repz
and
es
mov
imul
sub
rcrl
addr16
into
xor
inc
sub
push
xor
mov
out
lds
mov
fstpt
into
cmpsb
js
clc
and
cmp
cmpsl
sbb
jl
nop
shl
cmpsl
cmp
cltd
pop
push
push
ficoml
subb
loopne
push
add
pop
sub
sbb
js
fs
gs
jo
cwtl
outsb
mov
out
jg
iret
mov
ljmp
sahf
mov
leave
push
mov
jl
mov
test
add
enter
xchg
adc
pop
fwait
imul
int
cmp
iret
repz
adc
adc
inc
inc
and
aad
xlat
bound
mov
sub
icebp
popf
sub
sbb
popf
and
push
sub
mov
mov
lds
inc
arpl
bound
fildll
cmp
or
pop
xchg
das
int
sti
in
jb
cwtl
fidivrs
sbb
xchg
roll
inc
roll
lds
xor
addr16
repnz
sti
hlt
mov
push
aad
cmp
movsl
lock
adc
shll
imul
xor
ljmp
push
dec
xchg
mov
dec
leave
or
lds
adc
or
hlt
es
fs
cmp
mov
repz
cmc
fcmovne
or
jnp
das
loopne
and
xor
cs
lds
pusha
inc
sub
push
jp
in
mov
test
es
push
data16
cmc
pop
repnz
xor
mov
xchg
cmp
jge
loop
stos
cli
mov
mov
mov
mov
add
jb
or
in
xor
out
subb
push
in
fldenv
jecxz
lret
in
sbb
fdivrl
mov
mov
sub
gs
sub
push
jge
aas
stos
fwait
out
mov
in
jno
push
std
hlt
or
das
cmpsb
jnp
jbe
pushf
xor
jnp
inc
imul
cld
inc
int
inc
dec
int3
sbbb
push
cmp
add
mov
xchg
out
jl
inc
daa
inc
xor
dec
outsb
add
or
xor
mov
loopne
imul
int
lcall
inc
push
push
fisubl
test
lret
inc
out
mov
test
mov
aam
sub
outsl
jne
les
xor
in
leave
mov
bound
pop
js
or
ja
out
flds
ja
pop
mov
pop
lret
int
ljmp
mov
mov
icebp
aaa
ja
mov
dec
js
push
lds
xor
sti
repz
inc
hlt
icebp
xlat
mov
mov
xor
test
fmulp
sahf
mov
pusha
lods
loop
mov
inc
xchg
gs
jns
js
mov
call
sahf
lret
push
lret
push
or
in
xchg
icebp
ljmp
jae
add
cli
sub
or
aad
jo
loopne
push
or
leave
rcrl
lret
stos
jmp
push
lahf
cmp
and
xor
out
xchg
leave
inc
arpl
pop
mov
dec
subl
pop
fmul
xorb
xchg
push
and
add
arpl
outsb
pop
adc
mov
mov
sbb
sbb
adc
sbb
repnz
mov
pusha
mov
mov
outsl
add
cmp
sbb
and
ficoml
push
jl
insl
je
out
insb
or
adc
xor
out
xchg
popf
dec
push
fdivrl
cmp
fsubs
fdivl
js
push
inc
arpl
push
jmp
stos
xlat
loope
repz
xor
fs
loopne
fistpll
xlat
pop
mov
mov
rol
sbb
or
mov
jnp
ret
adc
jns
decb
adc
push
lea
cmp
or
or
mov
xchg
mov
adc
cmpsl
jo
int
xor
mov
pop
push
out
pop
and
sbb
jmp
in
loopne
popf
mov
repz
jnp
out
hlt
stos
mov
adcl
mov
stos
nop
inc
repnz
xor
adc
mov
mov
outsl
pop
test
pop
xchg
jne
bound
aam
ficomps
mov
sbb
mov
xor
cmc
ss
dec
xchg
sub
cltd
jae
cmpsl
js
cld
fildll
imul
mov
mov
add
shrb
dec
out
lcall
enter
stos
repz
sbb
int
loope
push
adc
rcrb
dec
sub
ds
jmp
inc
jns
and
in
ja
les
movl
xor
pop
loop
xlat
fs
xor
pushf
jle
xchg
cli
movsb
and
popa
mov
cmp
cs
sbb
sbb
jnp
adc
cmp
cmp
in
clc
mov
inc
dec
jb
sahf
stos
loop
push
add
and
iret
je
jbe
cwtl
lods
xchg
pop
jo
jae
out
sbb
movsl
js
push
fldenv
push
mov
fldl
add
push
rorb
sbb
test
aaa
jmp
fistpll
test
push
sub
mov
test
adc
fstpt
mov
push
cmp
or
mov
add
sub
fwait
ds
cmp
mov
fwait
inc
ljmp
mov
enter
and
cmpsl
mov
outsb
mov
inc
sub
xchg
aaa
jbe
adc
adc
push
pop
add
mov
mov
stos
insl
sub
and
adc
out
scas
lds
cmpsl
mov
push
cmovae
fisttpl
adc
cmc
sbb
in
int
cmp
mov
mov
jp
xchg
fnsave
enter
cmp
stos
mov
pop
cmp
dec
fmul
lret
in
mov
dec
cwtl
flds
mov
mov
xor
loope
mov
jmp
mov
sbb
sub
out
iret
sub
cli
ss
stos
push
jne
jmp
out
frstor
sti
pop
mov
mov
xor
sub
aaa
mov
cmc
mov
add
imul
testl
clc
sbb
or
dec
popa
lret
and
out
test
cwtl
xor
cltd
xor
dec
outsb
sub
mov
xor
jecxz
mov
jne
sbb
pop
or
xchg
out
iret
or
and
in
dec
jnp
test
es
push
shrb
negb
stos
or
sbb
pop
lret
jns
mov
jne
xchg
shlb
paddsb
movsl
xchg
push
idiv
shrb
mov
addr16
sub
outsb
xorl
pusha
notb
cmc
adc
pop
ret
dec
sub
fisttpll
add
jbe
es
xchg
jg
dec
nop
je
mov
xor
shl
sarl
or
mov
lret
add
insl
cmp
repnz
dec
sbb
dec
jae
mov
add
movsb
inc
jno
mov
test
xor
rcll
jne
fs
xor
mov
xor
adc
push
xchg
fdivrl
jmp
es
and
push
push
movsb
xor
cwtl
pop
mov
mov
sub
mov
add
mov
icebp
loopne
loopne
jb
pop
xorb
mov
mov
xchg
into
xor
lcall
mov
out
mov
push
and
nop
das
or
pop
inc
shll
sbb
repz
test
mov
hlt
xchg
fisubrl
sbb
adc
adc
stc
add
test
xchg
dec
pop
push
pop
sbb
mov
loope,pn
adc
scas
or
and
aas
sbb
add
in
xor
lret
mov
add
dec
push
bound
inc
pop
lock
mov
imul
mov
xchg
loopne
ss
xchg
sub
or
loop
cld
stc
add
int
aad
std
sbb
aam
ret
xchg
push
add
xlat
mov
and
cmpsl
fisubs
xor
popa
data16
mov
push
inc
pop
cmp
icebp
jns
sarl
ret
adc
xor
lds
cs
rolb
mov
sbb
cmp
sub
xchg
xchg
xchg
push
shrl
or
outsl
pop
fcoms
sub
add
jne
pop
dec
repz
add
add
add
testl
jne,pt
loop
jbe
insl
pop
mov
sub
movsl
add
push
add
add
xchg
cs
jo
dec
or
mov
rcrb
fwait
xor
cltd
rcrb
jp
cmp
and
mov
mov
jae
adc
jbe
dec
fmul
insl
mov
stc
pusha
add
jmp
scas
mov
fistps
add
lea
or
adc
sbbb
dec
popa
cmpsl
cmp
push
jecxz
and
in
shlb
idivl
xlat
scas
xchg
cmp
ficoms
pop
sti
mov
push
or
out
int
in
pop
les
dec
xchg
dec
fnstsw
xchg
cmp
les
jecxz
out
or
aad
xchg
fs
into
into
inc
fistl
inc
or
dec
in
loopne
icebp
push
xor
cmpb
aam
aad
inc
scas
imul
mov
dec
dec
push
and
lret
fs
in
into
dec
jp
test
lods
js
outsl
lods
pop
movsl
mov
int
push
negl
add
jne
cwtl
out
fisttpl
stos
imul
pop
std
inc
cmp
fs
and
xlat
addl
pop
test
push
inc
rorl
jno
mov
ret
std
out
and
xchg
mov
daa
test
int
xchg
sub
out
cmpsl
lret
mov
push
enter
or
mov
push
shll
xchg
push
xor
cmp
imul
call
jmp
adc
jo
xchg
dec
loope
cmp
jp
or
cltd
and
movsl
pop
aad
pop
lret
dec
imul
push
push
outsl
mov
data16
imul
mov
fcmovb
aas
and
insb
sub
adc
inc
decl
mov
sbb
insb
inc
push
mov
cmp
scas
xorl
xchg
popf
insb
jmp
call
push
sbb
scas
push
mov
adc
adc
push
test
jo
xchg
inc
mov
mul
movsl
mov
mov
imul
dec
pop
lahf
iret
mov
inc
jp
fiaddl
std
es
rcl
xchg
fucomi
decb
xchg
mov
push
jbe
sub
mov
loop
jmp
mov
aaa
lods
cltd
push
pop
sarb
mov
je
or
push
xchg
sbb
cmp
cmpsl
fnstenv
insb
sub
push
inc
xchg
cmp
xchg
movsb
out
jb
pop
int
loop
inc
adc
es
push
adc
lahf
out
in
dec
jge
repz
jbe
jg
push
pushf
inc
test
or
orl
hlt
mov
add
mov
ja
in
add
xchg
out
mov
push
stos
sbb
fdivs
push
shlb
shl
andb
shr
outsb
inc
adc
sti
fmull
pushf
movsb
jmp
jmp
jmp
pop
cmpsl
orl
leave
aam
fs
and
fadd
jge
push
dec
and
push
inc
sahf
imul
test
dec
push
dec
out
mov
jl
dec
inc
pop
pushf
call
cltd
mov
mov
jg
mov
push
xor
fsts
daa
cmp
shrl
mov
repnz
inc
xor
sbb
mov
push
add
inc
mov
mov
or
fcmovnu
repnz
loopne
ljmp
mov
jge
inc
in
ret
cli
icebp
jnp
adc
pop
mov
rolb
idivb
stos
jns
loop
push
adc
jmp
jmp
ss
xchg
rcll
scas
pop
rcll
add
daa
cmp
insl
pop
xchg
rclb
xchg
mov
sub
adc
cld
aam
insl
dec
mov
daa
inc
mov
sarl
cmp
xor
notb
sbb
dec
pop
sbb
movl
xchg
xor
repnz
lea
icebp
pop
xchg
jl
popa
sbb
cld
ret
push
imul
mov
icebp
xor
rorb
or
pushf
lock
fcomps
or
fcoms
push
idiv
adc
pop
cmp
and
cltd
and
repnz
jb
dec
iret
mov
mov
add
scas
test
es
outsb
mov
outsl
mov
sub
mov
cltd
jnp
pop
push
xchg
xchg
xchg
ss
dec
sahf
mov
xchg
into
daa
pop
pop
jb
fisttpl
cld
mov
adc
clc
sub
hlt
cltd
add
add
adc
or
inc
sbb
sbb
cmp
pop
mov
cmp
inc
push
sub
rclb
ss
add
lcall
add
dec
pop
inc
jmp
xchg
mov
in
and
sbb
test
mov
push
push
mov
jne
mov
mov
mov
out
inc
pop
add
inc
rcr
dec
xor
cmp
dec
icebp
in
in
xchg
vaddps
add
andb
enter
push
cli
xchg
pop
pop
pop
pusha
mov
fwait
mov
push
nop
dec
daa
call
jp
in
mov
std
mov
call
fmul
les
cmc
fs
cmpsb
or
pop
jnp
push
movsb
in
roll
pop
xchg
pop
or
clc
mov
push
xchg
jae
add
int
mov
cmpb
sarl
popa
inc
out
sbb
or
mov
xchg
cmp
mov
outsb
lods
adc
jp
mov
jne
pop
dec
cmpsl
jne
and
xor
add
jnp
mov
xchg
or
push
cli
xor
cmpsl
stc
jns
imul
jbe
negl
pop
leave
repz
mov
mov
xchg
mov
sbb
jp
fstpl
lret
out
mov
dec
xor
out
pop
pop
mov
shrl
xor
fsubs
hlt
adc
and
xor
pusha
sbb
dec
inc
adc
out
inc
pop
pop
cmpsl
ret
mov
mov
push
sub
and
fs
xchg
mov
adc
scas
pop
jg
mov
adc
add
jp
inc
dec
and
lods
and
insb
addb
out
test
mov
subb
mov
and
jno
repnz
inc
lcall
jae
add
push
leave
and
mov
push
cmc
pop
cmp
dec
inc
and
mov
out
in
pop
xor
shr
jmp
xor
mov
outsb
stc
dec
xor
sti
cwtl
out
pop
lods
jmp
aaa
jbe
and
inc
pop
jmp
aad
into
mov
popf
add
roll
hlt
mov
dec
in
movsb
lcall
out
adc
sub
or
mov
fldl
call
mov
adc
loop
mov
int3
dec
xchg
xchg
jecxz
paddusw
mov
out
sub
sbb
mov
sbb
pop
ret
jl
sahf
shrl
pop
mov
ds
les
push
or
mov
testl
lret
or
fwait
pop
cmp
les
fwait
addr16
jg
jae
fimull
mov
xchg
outsb
loope
pushf
data16
nop
rsm
lods
jl
fisubl
add
leave
or
dec
popf
cmc
into
pop
inc
add
hlt
test
jns
outsb
ja
xchg
loope
xchg
inc
ret
sbb
adc
bound
rcr
adc
sub
pop
push
cli
pop
repnz
xchg
xlat
leave
gs
and
sub
or
cli
push
and
test
jge
xor
mov
jecxz
cltd
fimuls
lock
stos
or
repz
mov
ret
xor
inc
call
icebp
pop
dec
ljmp
scas
fildll
push
cwtl
das
fwait
scas
xchg
dec
xlat
mov
jmp
stos
mov
js
stos
jecxz
out
cld
pop
push
cs
push
xchg
sbb
cmpb
sbb
mov
mov
mov
fcmovnb
movsb
imul
jl
push
bound
or
fwait
push
xlat
outsl
loope
insb
xor
inc
adc
add
lods
mov
jbe
repnz
push
inc
and
cmpsl
into
nop
int3
jo
add
push
mov
lds
mov
inc
add
and
jae
push
pop
icebp
xchg
mov
inc
dec
js
nop
pop
xor
mov
loop
sub
push
push
out
mull
xor
sbb
fnstcw
xlat
bound
fsubs
adc
jle
mov
das
xor
cmpsb
adc
adc
mov
cmc
mull
push
stos
icebp
ja
cltd
or
test
mov
fsubp
mov
popf
mov
lahf
fstpl
jp
cmp
mov
jne
cmc
aaa
inc
push
add
pop
fcmovne
outsb
sub
or
jno
aas
fstpl
push
outsb
sub
jae
mov
int
sub
rolb
mov
out
mov
cltd
test
sahf
mov
xchg
xchg
or
movsl
jmp
sbb
cs
push
xor
sub
add
adc
xor
or
pop
sub
test
addr16
sub
push
add
fildll
add
pushf
ret
daa
xor
push
fxch
int
add
in
sub
add
xchg
rcrl
out
mov
cmpsb
add
je
sbb
adc
jl
negl
out
xchg
cmp
adc
sbb
shl
xor
out
sbb
imul
mov
mov
fistl
cmpsb
movmskps
push
sbb
push
data16
jmp
push
test
mov
outsb
mov
outsl
std
or
jp
out
sarl
mov
dec
test
jle
jecxz
mov
fnstsw
repz
mov
shll
out
adc
lock
dec
fdivrs
test
ret
adc
cmp
add
mov
push
iret
mov
in
fisttps
mov
movsb
jl
scas
add
xchg
cwtl
lea
outsl
mov
ret
dec
lods
add
xchg
dec
loope
xchg
mov
or
addr16
inc
pop
js
dec
jno
sbb
mov
pop
repnz
pop
enter
cmpsb
aam
repnz
mov
das
push
or
dec
das
adc
sub
cmp
push
push
rep
js
or
sub
fwait
dec
aam
push
out
loop
jge
push
dec
xchg
mov
popf
mov
fisubs
mov
or
and
hlt
sbb
stos
add
jae
cwtl
dec
push
fwait
ret
push
mov
adc
sbb
mov
adc
outsb
movsl
dec
xchg
jmp
mov
add
add
mov
nop
dec
ja
jb
call
fnstcw
sub
pop
xor
inc
mov
pop
ljmp
dec
loopne
mov
xor
sbb
sahf
gs
adc
cmp
jnp
test
fsubl
daa
mov
cmpsl
dec
ret
lahf
cwtl
popa
shl
xchg
jge
outsl
mov
inc
incb
divb
xor
aas
lret
out
movsb
xor
push
popa
add
xchg
fwait
aas
insl
out
out
sub
enter
rcrb
fldcw
adc
neg
jnp
mov
xor
pop
jmp
repz
or
sbb
shll
adc
imul
int
dec
xchg
addl
xchg
stos
in
jo
cmp
mov
cmp
sub
outsb
mov
lahf
sbb
pushf
push
mov
rcl
pop
push
sbb
aam
jns
sub
push
or
push
insl
adc
inc
repz
inc
jb
xchg
ljmp
mov
adc
and
fs
cmpsb
decl
push
adc
push
pop
gs
pusha
mov
push
movsb
or
int
call
es
xchg
lods
xchg
pop
int3
mov
push
mov
pop
mov
aas
xor
lds
or
ljmp
pop
adc
mov
into
mov
andl
shr
ficompl
imul
shl
popa
dec
adcb
ret
mov
xchg
int
dec
das
inc
pop
repnz
cmp
roll
lcall
pop
and
or
mov
movsl
mov
pop
cmp
or
sub
bound
pop
pop
sarl
ds
xor
and
test
out
xor
inc
jae
pushf
rcl
fstpl
testl
xchg
or
jmp
repnz
inc
cmp
xor
repnz
xor
jmp
aas
fs
cmp
aam
mov
fcmovbe
adc
push
rclb
or
mov
pop
cmp
push
lock
mov
in
xchg
sbb
inc
xor
movsl
xor
dec
pop
or
outsb
mov
ljmp
adc
cwtl
xchg
sub
insb
mov
out
lods
xchg
inc
fidivrs
aaa
jle
xor
cmpsl
outsl
dec
sti
pop
js
fimull
test
push
movsb
je
and
cmp
sbb
icebp
scas
aad
popa
dec
push
pusha
dec
fadd
sahf
jg
jo
mull
jmp
jo
xchg
pop
test
lods
jmp
mov
cmp
in
jb
lret
dec
or
pop
mov
sarl
test
pop
imul
or
lcall
shlb
rcrl
or
out
aam
fadds
sbb
xchg
arpl
into
jle
out
mov
std
lret
lock
xchg
mov
lcall
mov
sahf
popf
das
xorb
jl
cld
loopne
orl
insb
movsb
stos
mov
and
dec
pop
cld
popf
out
sbb
test
test
mov
jno
loope
sete
lret
out
mov
sub
jae
aad
int
xchg
ret
pop
cld
stc
popf
cmpl
xchg
adc
dec
sbb
mov
add
fbstp
dec
mov
xchg
xor
std
dec
sub
out
scas
jbe
mov
lea
roll
inc
shlb
into
cmp
push
ret
mov
icebp
push
mov
push
push
jl
out
push
ret
roll
pop
nop
mov
jmp
push
pop
mov
movsb
and
push
shll
aam
pusha
fimuls
lret
xchg
lret
mov
inc
and
fstps
jecxz
clc
jp
loopne
push
gs
jp
les
insl
loopne
xor
repz
hlt
sahf
lock
push
cmpb
mov
mov
lods
outsb
adc
in
hlt
ja
push
jo
sub
stos
repnz
push
pop
adc
push
xchg
arpl
xchg
test
push
dec
sub
in
lock
into
mov
jns
outsb
lea
leave
xlat
inc
jecxz
lods
xchg
cmp
sti
and
xchg
sbbl
mulb
sbb
jbe
adc
movsl
sub
fstl
arpl
pop
cli
cmp
jl
xor
int3
outsl
aaa
aaa
jl
adc
loope
imul
jg
loop
mov
adc
lret
lock
rol
mov
adc
adc
mul
push
movsl
cmc
push
xor
inc
mov
frstor
call
pop
sbb
and
mov
push
jl
push
inc
negl
sub
add
hlt
repz
outsb
push
ja
lea
dec
and
jmp
lods
mov
shlb
jne
ret
cmp
jmp
push
pop
je
dec
sbb
lahf
mov
lret
repz
lret
mov
nop
add
lea
outsl
add
pop
orb
adc
dec
or
add
mov
repnz
fdivr
ss
cmpsl
mov
cmpl
cltd
bound
xor
or
xor
insb
repz
dec
div
adc
push
lods
lret
popa
dec
xchg
sub
mov
jge
xor
mov
mov
pop
dec
dec
cs
dec
dec
mov
aad
inc
fstl
cmp
sbb
cli
add
cld
adc
out
ret
ror
fmull
fdivp
rorl
or
lock
idivl
mov
out
or
add
push
inc
xor
push
das
ljmp
dec
mov
push
sub
jge
loop
mov
add
lret
fistl
loopne
in
push
dec
test
push
stos
xchg
fistps
mov
xor
xchg
rolb
pop
dec
xor
rcl
std
push
inc
lds
push
push
out
sub
das
pushf
add
jecxz
stos
sbb
pop
push
lods
test
add
clc
rcll
fnstcw
es
push
lea
test
sti
stc
sbb
mov
adc
andb
fiadds
sti
cmpsb
pop
push
push
or
lods
mov
dec
inc
jle
popa
dec
sub
jns
pop
pop
add
scas
mov
lds
in
ja
mov
mov
out
comiss
xor
ljmp
pop
out
ss
dec
cmp
xchg
or
cli
incl
sbb
mov
lahf
xchg
shrb
fcmovb
and
sahf
in
negl
pushf
pop
out
sahf
cmp
in
or
in
mov
lock
dec
in
call
pop
roll
loop
xor
jae
jl
jne
int
add
aam
subb
mov
pop
adc
xor
pop
scas
mov
ljmp
push
xor
mov
xor
cmp
xor
inc
or
cmp
cmpsb
call
inc
xchg
jg
jo
test
sbb
cs
fstpt
add
stc
shr
adc
in
push
icebp
sbb
inc
jmp
test
mov
rolb
cltd
and
xchg
and
mov
repnz
fstl
adc
push
dec
xchg
pop
dec
fwait
jl
lahf
push
fwait
mov
push
xchg
mov
lods
aad
out
push
stc
mov
add
push
in
push
inc
pop
fs
pop
pop
mov
xor
push
pop
sub
fs
outsb
mov
push
sub
inc
loope
mov
push
inc
mov
xor
rolb
push
add
sahf
add
mov
aas
mov
cli
sbb
lret
or
or
lea
ret
sbb
dec
xor
sbb
inc
mov
loopne
jae
dec
inc
sbb
cmp
test
xchg
add
adc
push
jns
xor
call
mov
js
mov
dec
nop
jl
call
xlat
sbb
ror
push
jo
loope
fcoms
movsb
addr16
sbb
outsb
mov
mov
jp
cmp
loop
jecxz
push
mov
icebp
stc
test
sub
jl
mov
les
and
dec
mov
xor
xlat
mov
fcmovnu
pop
fidivs
mov
stos
cwtl
add
pushf
pop
jl
dec
mov
stos
fwait
int3
sti
jl
xchg
mov
aam
lea
clc
and
cmp
insl
aaa
shlb
shll
mov
or
fidivrs
cmpsl
mov
adc
aaa
cli
cwtl
scas
cmpsl
add
mov
stc
inc
cmp
das
andl
sbb
in
pusha
mov
push
mov
bound
sbb
in
mov
mov
out
sbb
mov
jae
xchg
cmpsl
jno
pop
inc
or
dec
mov
punpckldq
cmp
push
pushf
mov
nop
sub
nop
inc
aad
nop
imul
push
and
lahf
insb
fbld
jns
pushf
sub
inc
insl
ffreep
and
adc
and
int3
mov
std
bound
or
add
stos
mov
push
das
mov
xor
and
ja
clc
in
test
rcll
lcall
or
insl
pop
jecxz
jmp
and
std
mov
xor
fcompl
inc
lret
and
pmullw
out
test
in
xor
adc
call
mov
dec
push
dec
jl
scas
rcrl
sahf
lahf
iret
add
std
lret
sbb
stc
shr
push
pushf
lcall
shl
mov
or
mov
push
andb
mov
data16
or
scas
jmp
jno
and
mov
dec
sbb
rorl
xor
adc
loopne
push
int3
mov
pop
negb
mov
cmpsb
sub
rcrb
shlb
adcl
cmp
and
popf
sbbb
mov
test
test
mov
fwait
pop
xchg
mov
push
jbe
xorb
pop
rcrl
mov
stos
scas
movsl
sbb
cmp
mov
shrb
mov
lock
jo
int
outsl
std
test
jmp
test
add
jmp
and
mov
mov
ss
lock
movsl
jg
inc
xchg
movb
dec
sub
jbe
xchg
xchg
call
sub
pop
sbb
stc
shl
imul
mov
mov
stc
jmp
xchg
loopne
or
mov
pop
pop
mov
add
test
mov
jns
lcall
cltd
mov
xchg
add
aam
mov
jo
int
lods
sti
cmc
jns
push
sub
add
add
xchg
or
xor
gs
mov
addb
jo
lcall
push
push
hlt
pop
lods
push
add
stos
xchg
push
scas
testb
in
test
repnz
and
outsl
adc
cli
scas
aaa
add
xchg
sarl
popa
xor
mov
jbe
repnz
mov
jo
cltd
jo
cs
ds
dec
daa
arpl
aam
movsb
gs
cltd
mov
pop
pop
pop
lock
sub
xor
jl
in
lcall
push
mov
flds
dec
into
sub
or
sbb
stc
or
mov
sub
jo
pop
test
jge
pop
or
mov
out
enter
xor
and
enter
imul
rcr
mov
xchg
insb
test
mov
addr16
pusha
les
ss
jg
fs
push
insb
faddl
filds
jns
stc
cs
jge
mov
ja
xchg
fldl
pop
or
ljmp
inc
pop
mov
out
mov
insl
adc
lods
sar
xchg
mov
aaa
cmpsb
mov
pop
cmp
test
pop
movsb
gs
mov
dec
imul
mov
cmp
aam
mov
enter
mov
fidivrl
imul
mov
xor
sbb
movsb
mov
dec
sbb
cmpsb
fstl
mov
or
stc
add
into
je
mov
push
es
push
mov
inc
adc
pushf
repnz
xchg
push
mov
sbb
push
add
pushf
mov
pop
repz
test
in
ret
sbb
repnz
into
sbb
xchg
mov
sub
jp
ficomps
cltd
mov
fsubrp
sub
adc
leave
clc
mov
pop
arpl
push
clts
mov
int
adcb
mov
out
icebp
mov
mov
pop
xchg
mov
push
jns
outsb
fs
and
fstpl
jno
test
repnz
inc
push
loopne
jnp
cmp
inc
dec
inc
pop
je
in
adc
jp
inc
push
push
rcll
into
test
push
push
rorl
mov
movsb
cmpsb
xchg
pop
jbe
icebp
inc
jg
ret
xchg
scas
ds
pop
cmc
pop
int3
insl
push
mov
pop
enter
push
adc
push
frstor
insl
sbb
adc
lret
cmp
out
sub
pop
dec
jmp
dec
cmp
mov
in
cs
aaa
shrl
out
pushf
push
lea
lock
xor
adc
test
push
outsl
jno
lret
or
lds
pop
and
pop
test
mov
push
ljmp
enter
push
stos
jne
aad
sub
mov
fadds
sbb
popa
dec
or
dec
lret
push
dec
in
pop
pop
jb
dec
or
mov
cmp
mov
ljmp
push
mov
scas
je
ret
mov
das
or
pop
ja
and
daa
sahf
cmp
pop
and
xchg
push
in
push
xchg
xchg
fisubl
std
shrb
lret
pop
lods
adcb
inc
pop
subb
jae
lret
push
cmp
aad
jmp
test
cs
mov
xchg
inc
cmc
loop
in
leave
xchg
push
sub
xor
andl
sahf
lds
movsb
and
in
jp
xor
lret
out
fadd
mov
and
cmp
inc
dec
repnz
cltd
push
shrl
xchg
xchg
dec
cmpsb
inc
mov
cld
add
mov
mov
push
popf
cltd
jno
inc
xchg
mov
mov
adc
fisubrs
cwtl
jbe
hlt
cltd
dec
sarb
add
mov
pop
adc
and
ljmp
mov
jp
lods
cmp
push
fdivl
dec
das
in
and
pop
mov
xchg
fstps
pop
cmp
in
jp
push
mov
mov
test
adc
sub
mov
xchg
scas
sti
flds
push
xor
and
mov
mov
aaa
xorb
adc
ret
adc
cmc
mov
cmp
outsb
loop
pop
ds
outsl
insb
stc
inc
mov
inc
inc
or
fcom
fsubrl
mov
aaa
or
mov
aad
xor
dec
sbb
pop
cmp
lods
loope
sahf
mov
je
ret
mov
and
xchg
add
jno
mov
cvtdq2ps
xor
fcomp
sahf
sub
xchg
lods
jg
movsl
sbb
scas
clc
xor
jnp
jmp
movsl
out
xor
add
mov
push
cmpsb
push
andl
outsl
out
test
fmuls
mulb
cmp
das
mov
clc
ret
xchg
insl
fmull
xchg
sti
xchg
mov
pop
test
dec
or
pop
leave
insl
aaa
sahf
xor
cmp
mov
nop
push
iret
sub
sub
jp
fsub
cltd
mov
mov
cmp
iret
out
test
push
pop
lahf
jnp
movsb
lods
dec
shr
adc
mov
jmp
push
js
sub
cmp
nop
pop
sbb
xor
xor
pushf
insb
jne
xchg
pop
push
xchg
xor
in
fdivr
jne
call
inc
fs
xchg
sti
push
sub
cltd
neg
addr16
aas
xchg
lea
lock
test
push
mov
stos
add
fcoms
rorl
out
add
sub
movsb
pushf
cmp
aam
pop
cmp
fwait
mov
mov
daa
and
ret
sbb
jecxz
test
clc
data16
sub
icebp
dec
inc
aad
dec
jnp
jbe
add
fistpl
mov
popa
mov
push
fisttps
inc
lcall
aaa
clc
sub
push
mov
pop
ret
sti
cmpsb
or
fs
mov
xchg
ret
xchg
mov
mov
or
sti
fs
lcall
pop
idiv
adc
and
test
pusha
jmp
clc
push
mov
pop
xchg
add
jge
stos
out
push
inc
mov
jg
fadd
sub
ljmp
scas
shll
xor
imul
sub
cli
xchg
aam
pop
lods
cmc
clc
xchg
lods
outsl
ds
std
out
mov
pop
ret
movlps
stc
and
sub
xchg
fwait
dec
mov
mov
pop
scas
stos
insl
pop
orl
mov
and
xchg
push
cmp
in
adc
xor
scas
fists
ret
cmp
push
inc
into
jbe
insl
add
loop
pop
inc
sub
dec
rcll
or
mov
arpl
clc
mov
push
jge
and
divb
push
jle
xchg
daa
lea
mov
or
jl
inc
pusha
dec
cmp
push
adc
push
or
dec
jb
lods
mov
mov
push
les
les
sub
enter
ret
bound
aas
enter
insb
add
mov
mov
jb
cmp
mov
clc
mov
pushf
notb
jge
cli
adc
ss
pop
jno
add
push
imul
fcoml
cli
stos
pop
btc
out
out
loop
mov
ja
movsl
and
lods
lock
adc
mov
or
leave
in
jge
xchg
out
gs
sbb
jge
cli
arpl
mov
leave
jbe
rorl
fiaddl
jae
test
sbb
inc
inc
scas
gs
out
add
mov
fwait
xchg
inc
frstor
enter
lahf
ret
in
les
movsl
push
jo
add
dec
add
fstpt
xchg
ret
loope
push
jge
lods
sbb
xchg
scas
ss
xchg
shl
jmp
sbb
test
sahf
jl
sub
clc
insl
dec
mov
mov
in
sub
mov
aad
ror
fcomps
lcall
or
les
xchg
cmc
ret
jbe
faddp
mov
pop
daa
cmc
lock
dec
pop
jecxz
jns
dec
xchg
mov
xchg
dec
adc
and
inc
and
mov
in
xor
or
or
push
jmp
stc
lcall
xchg
xor
mov
sub
adc
xchg
inc
inc
and
push
jb
xchg
cmpsl
shrl
pusha
mov
inc
add
addr16
mov
std
lahf
cltd
sahf
stc
lds
jae
popf
out
dec
inc
lea
arpl
jp
loopne
xor
fiadds
pop
jp
cmpsl
aam
fidivl
add
push
cld
push
push
and
andb
popa
mov
xchg
imul
imul
inc
or
rcl
xor
rol
hlt
loop
stos
jns
fcmovu
inc
imull
dec
aam
inc
jbe
out
gs
mov
pop
cmp
test
lret
mov
fsubs
mov
add
scas
mov
mov
daa
bound
icebp
mov
jecxz
sahf
es
pop
mov
sbb
mov
cmpsl
add
push
lcall
mov
push
mov
out
int
adc
ror
inc
xchg
in
fmul
cmpsl
add
dec
rorl
and
fistpl
bound
int3
adc
mov
sbb
add
into
lds
adc
dec
push
aaa
inc
cltd
loope
mov
mov
push
imul
pop
popf
aam
in
and
or
shll
std
mov
ljmp
repnz
lock
mov
imull
pop
pop
mov
jmp
sbb
or
andl
int3
sub
iret
cwtl
into
sbb
lods
mov
outsb
clc
inc
test
jmp
mul
sub
jns
icebp
mov
mov
xchg
mov
push
or
lahf
sub
xor
mov
mov
jbe
cmp
bound
jns
not
fcmovnb
icebp
inc
out
sub
xor
jns
jno
sub
mov
xor
push
nop
insb
jp
popa
inc
arpl
jecxz
xchg
stos
sub
into
pop
or
in
inc
push
pusha
mov
lahf
mov
loopne
mov
sarb
fiadds
pop
mov
movsb
adc
gs
and
lret
and
fimull
es
sti
jae
jl
bound
rep
out
mov
inc
lea
dec
test
mov
subb
mov
mov
andb
push
je
rcrb
xchg
dec
xorb
pushf
xchg
sub
rorl
push
ret
daa
sub
movsb
iret
stos
mov
sub
mov
imul
add
arpl
or
pop
imul
pop
dec
cmpl
push
out
jno
loop
mov
call
das
iret
cmp
add
dec
sub
mov
cmp
push
nopl
ficoml
adc
pop
in
shlb
adc
idivb
mov
popf
push
sbb
outsb
cmc
xor
xor
enter
aad
xor
stos
xchg
mov
icebp
scas
mov
xchg
es
and
cmp
in
mov
jnp
sahf
in
add
out
fprem1
aam
sbb
imul
inc
jae
and
loop
jo
addr16
adc
fcompl
fdiv
add
xchg
dec
pop
fdivs
fnsave
jne
data16
add
rol
bnd
imul
dec
jne
aad
push
dec
into
push
test
leave
jg
outsb
mov
enter
gs
idivb
lds
pop
es
push
adcl
imul
push
mov
and
andl
inc
mov
js
bound
in
mov
add
ds
aad
das
mov
mov
cs
out
and
addr16
sti
jns
xchg
adc
in
push
in
jmp
ret
fmuls
cltd
call
sahf
les
xchg
pop
pop
insl
lret
loopne,pt
addb
push
push
daa
jg
fdivrs
test
mov
sbb
xor
or
pusha
xor
out
mov
daa
jp
jbe
cmp
out
add
push
lea
sbb
fs
cmp
sti
outsb
cmpsb
loope
dec
int
xor
or
jle
dec
fwait
in
and
imul
popf
push
mov
leave
lds
unpcklps
adc
add
pop
pushf
or
int
leave
icebp
xor
movsb
stos
fildl
mov
cmp
jbe
xor
cmp
pop
or
pop
adc
aam
sti
ret
fisttpl
sub
pop
iret
dec
aad
push
inc
xchg
mov
stc
dec
inc
xchg
ficomps
test
jge
movsl
inc
jb
pushf
ds
outsl
mov
fwait
lods
jbe
cmp
hlt
and
in
scas
dec
leave
out
jb
js
mov
sub
pop
sbb
or
imul
or
popa
mov
mov
ds
jl
popa
aad
popa
jae
adc
ss
mov
mov
rolb
loop
orb
cmp
rorl
out
insl
sbb
inc
rclb
ss
push
dec
add
pop
shrl
sub
dec
push
jmp
add
fldt
inc
sbb
js
sub
inc
add
out
mov
lea
out
sub
jl
jb
and
pop
push
pusha
enter
loop
push
loop
sub
mov
ja
cmp
gs
lods
andb
into
ss
out
lock
movl
inc
cli
in
cli
jns
loop
sbb
cmpsb
push
pop
idivl
xorl
std
gs
cmp
or
push
and
andb
xor
notl
popf
jg
xor
cwtl
pop
and
add
icebp
add
pop
push
adc
push
lock
mov
hlt
in
decl
enter
lods
xchg
or
stos
std
jb
and
leave
xor
and
in
push
and
xor
icebp
dec
fmul
jo
sub
and
out
mov
test
aam
cmp
mov
std
push
out
mov
mov
lods
jg
ljmp
ljmp
sub
rolb
dec
in
lea
pop
sbb
xor
sub
mov
mov
ret
out
lret
imul
xor
cmp
aaa
movsl
je
pusha
push
lahf
clc
out
fcomps
hlt
add
test
decb
sahf
insb
adc
lods
mov
sti
mov
xorb
xchg
lret
fs
push
fs
lea
aaa
cmp
ret
sub
and
xchg
leave
mov
or
xor
push
cmpsl
loop
out
pop
xchg
jb
or
std
dec
into
mov
cli
in
int
je
fwait
inc
mov
addr16
fistpll
cltd
mov
mov
outsb
mov
sahf
add
xchg
aam
add
mov
aas
in
mov
testl
clc
pop
lods
test
arpl
mov
cmp
inc
cmp
inc
addb
push
popf
imul
in
scas
fldenv
popf
rcll
xor
ror
call
xor
sub
dec
jmp
inc
es
test
testl
ret
sub
mov
lods
leave
lds
cld
in
out
cmp
icebp
inc
or
or
lea
je
add
mov
pmulhw
jno
or
lret
sbb
cld
sbb
cltd
jg
pop
jge
push
je
or
leave
test
mov
mov
aad
sub
cmp
mov
movsb
adc
mov
ljmp
sbb
mov
add
and
outsb
fnstenv
jecxz
sub
mov
dec
adc
mov
das
rcll
cmpsl
jmp
push
jge
pop
sbb
rclb
scas
dec
testb
scas
mov
sahf
xor
pop
jmp
scas
imul
inc
cmpsl
jmp
test
mov
mov
mov
sti
cmp
shll
push
sub
push
in
stc
push
mov
cwtl
inc
sti
dec
add
xchg
mov
pop
mov
add
adc
mov
test
xchg
adc
push
lds
mov
push
pop
pusha
xchg
add
sub
dec
lea
pop
mov
pop
mov
notb
int3
push
add
push
cwtl
enter
push
shrl
cmpl
repnz
mov
jnp
cmp
push
sub
and
push
push
mov
mov
jg
icebp
lcall
cltd
pop
fstpt
jb
xlat
pop
mov
adc
cmp
daa
adc
ds
mov
jl
enterw
jmp
arpl
mov
xchg
mov
mov
into
fs
xor
inc
dec
divb
data16
push
add
fcoms
pop
out
test
loope
and
and
sub
int3
fisttpl
mov
fstps
fs
mov
sbb
cmp
cmp
fs
les
pmaxsw
into
sub
sbbl
loopne
pop
jb
jmp
dec
testl
test
and
add
pop
inc
incl
sahf
std
push
pop
push
push
sub
or
mov
nop
dec
dec
std
or
cmp
gs
pop
lcall
cmp
scas
push
and
adc
sbb
mov
lods
sti
dec
adc
or
test
sbb
xchg
ds
pop
mov
fs
pusha
lock
in
mov
cmp
add
pop
insl
pop
jecxz
sbb
fstps
cltd
leave
mov
push
mov
das
mov
dec
cmp
xchg
adc
sbb
add
and
int3
pop
shll
cmc
push
mov
cmp
setns
cmc
xchg
or
fcmovbe
inc
add
testb
sbb
into
mov
push
mov
push
add
loopne
je
and
popf
ss
repz
test
inc
mov
sbb
mov
sub
mov
jb
cmp
add
mull
in
and
push
fwait
cmpl
inc
mov
push
dec
mov
aas
je
xchg
loopne
add
and
jl
nop
into
mov
push
inc
jecxz
push
movsb
jmp
test
xchg
aad
sbb
stos
cs
pop
push
aaa
aad
or
int
pop
popa
dec
add
inc
insl
lahf
divl
lods
adc
test
mov
xchg
sbb
mov
and
sub
lret
mov
test
inc
ret
lret
cmp
rol
loop
stos
mov
cmc
jmp
call
xorb
repz
mov
dec
clc
xchg
adc
xchg
rcrb
lret
scas
mov
stos
cmc
out
mov
sti
in
in
imul
cmc
mov
shl
adc
jne
inc
xchg
cmpsl
push
mov
add
ficoml
pusha
xchg
test
cli
into
pop
dec
mov
sbb
mov
mov
dec
push
cmp
adc
pop
cs
cmp
ret
xchg
push
mov
pop
sub
jl
loop
xchg
repz
xchg
in
enter
cmp
jae
pop
xchg
sbb
mov
clc
push
mov
sahf
sub
lret
into
mov
mov
mov
dec
ds
lock
cwtl
xchg
fcomps
bound
mov
jns
pop
pop
leave
pusha
pop
aaa
imul
pop
inc
idivb
mov
fcom
aas
movsl
or
sub
icebp
sahf
xchg
mov
or
push
xlat
imul
test
and
jne
and
or
lock
xchg
stos
sbb
and
aaa
mov
and
orb
pop
xchg
mov
das
dec
sbb
pop
jge
jbe
popf
js
cwtl
lcall
mov
inc
inc
jo
push
inc
mov
xchg
addr16
xor
adc
loop
mov
out
call
mov
xchg
rcll
leave
cmp
sub
out
rolb
mov
int3
out
mov
ja
cmp
cmpsb
dec
push
ja
outsb
cld
cli
test
daa
js
push
rcrb
mov
mov
cwtl
push
xor
cwtl
sub
fadd
ljmp
pcmpeqw
push
cmp
je
jge
xchg
outsl
mov
ja
mov
stos
add
outsl
mov
sahf
inc
imul
sbb
jne
loope
addr16
adc
out
orl
mov
stc
xchg
xchg
xchg
cmp
lea
mov
or
test
sarb
pop
pop
and
stos
fs
cmpb
sub
jbe
push
xor
push
jmp
pop
xchg
in
cmc
ret
aad
dec
fbstp
nop
popf
sarb
or
aas
mov
pop
xchg
insb
push
xchg
cmc
lds
jg
ret
in
sbbb
jecxz
cltd
cmp
xchg
add
cmpsb
fnstsw
xor
mulb
data16
test
in
mov
push
jae
idiv
jg
test
push
or
daa
insl
mov
insl
fiaddl
or
cmp
outsl
enter
das
ljmp
xor
rclb
repnz
sub
sub
divl
jg
stos
test
xchg
ljmp
testl
rol
mov
and
fisttpl
jno
inc
xchg
das
test
sbb
rorb
dec
dec
test
or
push
pusha
mov
das
add
jnp
repz
rcrl
test
cli
push
xor
mov
pop
xor
jmp
lahf
lock
sub
loopne
das
in
mov
lcall
mov
cmp
sub
cmpsb
jecxz
mov
out
scas
jle
int3
pop
mov
incl
fnsave
sub
adc
lcall
ds
dec
adc
loope
pop
loopne
inc
mov
mov
out
xor
decb
inc
sub
mov
scas
xchg
sarl
dec
jne
ds
out
cltd
dec
inc
mov
scas
bound
in
add
fists
pop
ss
pop
pop
movsl
fstpt
dec
mov
fstpl
jge
or
jne
mov
xor
xor
pop
repnz
rcl
cld
test
lret
inc
cmp
imul
fstpl
fdiv
and
push
mov
sbb
or
test
pusha
ret
nop
mov
mov
sarl
mov
or
and
jmp
rolb
mov
push
fcoml
xor
and
sti
test
fcmovb
sti
add
das
shrl
pop
cltd
sti
scas
aad
push
xor
mov
cltd
int
cmpsl
and
jmp
sti
je
cltd
mov
lods
xchg
ret
ljmp
aad
jno
adc
cmc
movsl
imul
push
mov
aas
add
xchg
data16
mov
sub
test
xchg
outsl
push
cmpb
sbb
jg
adc
arpl
sbbl
test
push
adcl
xchg
push
push
aaa
mov
ds
dec
or
fiaddl
xchg
movsb
lcall
cli
inc
fstpl
mov
sbb
dec
lret
mov
loop
and
cmpsl
lret
movsb
xlat
inc
add
push
push
jne
jns
sbb
out
or
jg
push
jnp
jb
push
sarb
sbb
mov
scas
adc
pop
or
mov
bound
xor
mov
dec
jae
cmp
fiaddl
sub
push
mov
and
mov
jb
fsts
xchg
orl
xor
loop
dec
fldcw
mov
mov
pop
pop
daa
loopne
jbe
cmp
inc
or
aas
mov
push
push
cwtl
rcrb
mov
or
xchg
rcr
or
xorl
mov
xchg
or
fbld
adc
js
pop
inc
ds
sarb
add
mov
cmp
arpl
add
loope
pop
aaa
mov
out
popf
jo
mov
imul
and
cwtl
mov
fstpl
adc
or
dec
mov
insl
inc
jns
iret
fstpt
push
and
sbb
sbbl
fcompl
cmp
jnp
xor
pop
lahf
jmp
pusha
inc
shrd
pop
pop
decb
mov
ljmp
repnz
shl
pushf
popf
pop
jp
arpl
jmp
js
sbb
mov
and
mov
mov
adc
cmp
mov
dec
push
popf
addr16
cmpsl
jnp
cmp
cltd
lret
jbe
push
mov
push
jo
addr16
mov
movsb
aad
cmp
sarl
sbb
pop
sbb
cmp
cmp
and
sbb
sub
xor
in
inc
xchg
scas
imul
test
push
cmp
xor
popa
sub
loop
and
adc
push
rcll
aaa
mov
mov
aas
roll
and
jge
out
mulb
push
inc
xchg
ss
loop
shlb
ds
push
inc
test
les
push
scas
jno
ret
pop
pop
das
dec
std
aaa
cwtl
jo
xchg
mov
xlat
dec
fst
outsl
pop
testl
or
ret
jne
dec
repnz
xor
mov
fiaddl
icebp
jmp
cld
xor
inc
bound
cmp
addr16
mov
orl
mov
push
imul
in
shl
mov
and
test
lods
xorl
prefetch
mov
lret
and
js
outsb
sub
imul
pop
pop
add
std
jne
push
rcll
ficomps
mov
popl
mov
sub
mov
fstl
icebp
bound
fnsave
js
loop
mov
lds
imul
pop
call
sub
stos
push
sbb
push
leave
sub
out
std
int3
xor
or
jl
scas
mov
lcall
pop
call
adc
addr16
or
clc
das
test
mov
inc
insl
xor
jg
xor
gs
fstl
in
xor
js
test
in
jo
push
mov
fidivl
cmp
clc
daa
dec
aaa
push
jmp
out
jb
add
adc
out
or
dec
mov
imul
add
push
aaa
or
sbb
addb
push
mov
jo
out
mov
test
jne
jecxz
cmp
push
roll
xchg
das
decl
or
cmp
mov
mov
leave
or
clc
loope
mov
jae
cmp
mov
outsl
jmp
iret
push
pop
mov
ret
and
call
sbbl
mov
and
lea
mov
dec
cmpsl
divl
pop
pop
sub
add
mov
xchg
xchg
sub
bound
jo
adc
jnp
cmp
icebp
test
sub
mov
inc
insl
xor
call
orl
xchg
adc
xchg
jg
adc
inc
loope
lods
aad
add
or
sub
bound
mov
cld
shll
dec
ljmp
pop
adc
jo
outsb
nopl
jecxz
jns
lcall
dec
xor
rorl
or
xchg
xchg
cmpsl
fsub
adc
jp
mov
pop
jbe
add
int3
leave
and
das
outsb
adc
dec
stc
pop
into
cmp
cmp
jo
ret
fwait
pop
xchg
inc
outsb
dec
jo
in
out
negl
xor
jbe
sbbl
sbb
sub
inc
fcoms
sbb
ja
mov
cmc
sahf
add
jmp
jbe
fcoms
pop
mov
leave
and
or
in
mov
add
int3
leave
pop
popa
outsl
aam
movl
inc
or
fadd
push
aas
aam
pop
dec
xchg
sub
xchg
std
lods
sbb
shrl
jno
ss
addb
jecxz
insb
bound
jb
add
xor
sub
jo
ss
adc
xor
cltd
mov
mov
push
aaa
das
imul
hlt
lret
dec
jns
inc
mov
mov
add
cli
fnstenv
enter
sub
pop
aaa
jae
inc
ret
mov
jp
push
sbb
mov
lret
int3
adcb
and
mov
addr16
mov
push
sbb
test
mov
rcl
subb
addsubpd
shrl
mov
nop
cmc
cmpl
or
outsl
jmp
mov
pop
pop
mov
push
insl
pop
xchg
sbb
loopne
mov
sub
dec
bound
imul
ljmp
pusha
out
or
jns
pop
pop
bnd
outsl
das
inc
and
mov
and
cmp
dec
pop
adc
ss
popa
add
fdivrl
jle
negl
jle
das
clc
pop
xor
adc
addr16
mov
mov
out
mov
sub
rcrl
mov
jns
enter
pop
scas
sbb
popf
pop
cmovnp
lock
pushf
cmpsl
pop
out
inc
fwait
pop
adc
jo
pop
mov
sub
pop
xchg
cmp
or
sub
lcall
ret
dec
mov
mov
xchg
icebp
cmc
sub
int
jmp
stos
in
insl
mov
lods
pop
inc
cmpb
daa
jbe
dec
lods
test
inc
pop
scas
sbb
mov
adc
xor
int
popf
xor
out
outsl
adc
imul
call
or
loopne
sbb
cltd
sub
add
fisubs
test
repz
and
loope
arpl
mov
dec
mov
pushf
pushl
cmp
subb
dec
mov
push
loope
dec
test
lods
push
sbb
inc
and
stos
or
mov
subb
add
sub
mov
mov
scas
nop
repnz
cs
leave
data16
movsl
mov
cmp
rcrb
adc
mov
mov
ljmp
sbb
ret
push
push
sarb
pop
leave
inc
mov
mov
js
lods
das
rcll
xchg
mov
mov
dec
add
jne
popa
scas
dec
xchg
lahf
sub
repnz
push
and
jo
sbb
shr
xchg
mov
sub
insl
dec
pop
mov
icebp
dec
dec
xor
ret
push
loope
pusha
adc
daa
or
mov
sub
xchg
cmpsb
js
in
jecxz
std
lods
cmpsb
leave
lcall
mov
jmp
xor
int
xchg
cmp
addr16
mov
xchg
ljmp
gs
mov
pop
int
in
lret
inc
pop
pop
xlat
or
mov
subb
sarb
ds
aad
insb
lods
add
fbld
es
mov
mov
sub
inc
sti
cmp
cmp
mov
sbb
movsb
loopne
dec
enter
inc
adc
imul
pusha
pop
or
jle
ds
add
inc
sti
imul
hlt
orb
scas
ss
sub
and
cwtl
xor
xor
sbb
push
push
outsl
and
inc
mov
sbb
add
xor
icebp
shrl
dec
daa
fwait
xor
outsl
stc
cli
push
pop
sbb
fldl
orl
pop
imul
daa
jge
pushf
mov
xchg
les
es
fucomp
lahf
fwait
aaa
jns
cmp
cmp
ss
into
lahf
repnz
cmp
fisubrl
xorl
std
pop
pop
lret
in
movsl
inc
xor
jl
sub
test
adc
pop
jecxz
and
loop
fs
dec
or
xchg
mov
adc
cmpsl
xchg
sbb
daa
ljmp
mov
andb
imul
fidivrs
in
cmp
dec
shrb
adc
or
aam
adc
enter
xor
adc
es
aaa
mov
cs
mov
adc
je
dec
lahf
imul
add
push
js
repnz
push
xchg
lds
in
sub
dec
andb
cld
lret
add
or
roll
xor
mov
cmp
mov
mov
mov
and
adc
and
inc
and
and
sarl
mov
push
js
sti
js
ficomps
daa
or
pop
xchg
outsb
mov
int
lahf
xchg
les
mov
jp
push
ss
cmp
mov
orb
xor
push
lods
mov
jecxz
push
jb
cmc
lods
jns
imul
xor
outsl
jb,pt
cmpsl
and
subb
inc
out
pop
lret
scas
shr
mov
jge
dec
mov
sahf
out
imul
pop
sbb
push
hlt
loope
cs
push
and
pop
test
mov
or
int
cmp
out
inc
add
xor
pop
add
imulb
pushf
lcall
push
cmp
pop
xor
mov
je
je
push
imul
pop
mov
jp
add
jb
pop
stc
sub
rcl
inc
mov
scas
loope
xchg
push
cld
inc
lds
scas
inc
mov
xchg
cmp
push
inc
fisubl
sub
mov
mov
addl
imul
arpl
xchg
mov
bound
andl
xor
push
cld
mov
xor
call
dec
pop
mov
jmp
mov
out
dec
int3
xchg
sub
leave
push
jb
sbb
xlat
test
push
or
movsb
xor
xor
out
jns,pn
rep
lods
xor
mov
xchg
mov
dec
push
lods
lret
movsb
ss
repz
dec
icebp
cmp
add
scas
nop
xor
cmp
pop
insl
mov
mov
test
dec
int3
cmpsl
pop
add
je
mov
inc
fisttps
xor
cmp
xchg
int3
rol
adc
insb
mov
arpl
out
pop
inc
leave
mov
movhps
push
and
jo
in
jp
mov
das
icebp
nop
arpl
pop
xor
add
xchg
adc
mov
negb
arpl
cltd
add
aad
or
fucomi
enter
jne
xor
ret
inc
outsb
ds
xor
push
sarl
cmp
cld
jecxz
je
push
push
or
adc
loope
sbb
sub
pop
xchg
dec
std
inc
in
out
inc
inc
add
test
push
loop
leave
pop
cld
shlb
inc
inc
and
js
mov
int3
sub
out
stos
sbb
cmpsl
loopne
sbb
rorl
test
cld
push
and
or
call
mov
nop
stos
pop
add
stc
ret
jmp
push
sbb
divb
lods
jl
mov
repz
add
loope
in
or
mov
mov
mov
lcall
xor
push
in
mov
jmp
pop
loope
int
mov
repnz
lret
mov
pop
es
push
ficomps
sub
mov
mov
mov
lret
popw
cmp
call
jg
inc
cli
cmp
iret
les
jmp
pusha
sub
xchg
fstp
sbb
and
notb
xchg
outsl
pusha
mov
test
aaa
push
adc
mov
movsl
dec
fwait
lret
cs
popf
imul
add
repz
repz
stos
out
jecxz
pop
shrl
pop
xchg
lcall
jo
xor
mov
and
or
sar
icebp
cmp
leave
fistps
leave
iret
shr
std
fs
jne
dec
scas
mov
jne
mov
ret
imul
add
cmp
dec
out
outsb
pop
data16
inc
mov
mov
lods
bound
test
adc
push
dec
and
mov
jne
enter
mov
xchg
es
mov
mov
sub
in
mov
push
push
push
hlt
data16
mov
push
inc
fldenv
or
cmpsb
jle
or
pop
scas
daa
xor
sub
add
scas
in
rclb
in
aas
push
sbb
movsl
inc
imul
adc
fcmovbe
sub
push
mov
mov
loopne
dec
xchg
in
out
shrb
shrl
lahf
xchg
sbb
add
ja
addr16
cwtl
add
inc
lcall
dec
shl
fldl
push
or
xor
cwtl
bound
jbe
ljmp
roll
sub
sub
mov
lock
ret
mov
sbb
pop
pop
notl
lcall
lea
call
ret
pop
pop
sbb
rcl
xor
lods
aad
or
sti
adc
pop
xor
mov
hlt
adc
xchg
pop
repnz
dec
xor
mov
jbe
test
movsl
bound
test
and
jns
nop
repnz
cmp
into
icebp
cmp
mov
xchg
sub
and
imul
sbb
mov
mov
idivb
inc
xchg
stos
mov
dec
ljmp
pop
push
nop
cmp
test
fstl
mov
add
mov
cmpsb
jl
add
mov
add
iret
sub
ret
ficoms
inc
push
sub
push
mov
scas
dec
mul
xchg
sbb
dec
jnp
mov
mov
iret
rclb
sahf
ret
dec
hlt
push
jns
into
mov
inc
or
xor
fdivs
dec
mov
mov
repz
das
test
sub
idivl
in
sbb
pause
sbb
aaa
inc
add
lahf
ret
mov
pushf
in
orl
xchg
jae
xchg
in
lds
ljmp
and
adc
negl
mov
mov
mov
cltd
rclb
jno
mov
add
push
scas
sub
mov
enter
in
pushf
fdivrs
in
and
mov
into
xor
mov
xor
out
cmp
fldt
cmp
loope
sub
aaa
rorl
pop
jb
and
movsl
adc
dec
pop
pusha
loop
dec
shrb
mov
adc
aas
xor
testb
in
cmp
cmove
mov
jb
fwait
mov
and
pop
in
sbb
sub
lahf
inc
or
outsb
xor
sarb
loopne
lds
xchg
sbb
mov
cmp
out
jne
rcrl
or
in
repnz
lret
rcrb
push
hlt
xchg
scas
lods
mov
cmpl
testb
sarl
dec
xchg
push
int3
add
lcall
jp
add
inc
xchg
mov
les
jns
hlt
inc
sub
or
and
popf
inc
mov
xor
or
and
xchg
add
clc
icebp
adc
outsb
ja
inc
enter
bound
sti
fisubrl
mul
int
jge
fisubs
sbb
mull
jnp
mull
pushf
inc
fildl
pop
xor
imul
fmul
sbb
mov
push
ficomps
dec
sbb
cmpl
and
xlat
scas
jo
push
icebp
inc
pop
pop
xor
aas
cmp
xchg
push
add
mull
inc
mov
cmp
lods
sarl
adc
mov
mov
lock
xchg
ret
call
adc
inc
mov
je
jecxz
out
jmp
stos
test
mov
adc
pusha
sbb
rcrl
into
scas
jnp
mov
fildll
pop
mov
push
xchg
int3
popf
movsl
test
lret
mov
out
push
aam
add
faddl
or
adc
sub
sbb
and
pop
mov
test
xor
sub
mov
movsl
stc
fldenv
fisubrs
mov
ljmp
js
inc
cmp
adc
les
fwait
sbb
sbbb
mov
inc
mov
cmc
scas
mov
inc
sarb
movsl
nop
jp
inc
popf
cmp
ret
cmpsb
outsb
out
outsl
and
imul
in
sti
xchg
js
cmc
lods
je
sub
lcall
orb
bound
adc
test
push
shlb
and
xchg
cwtl
mov
mov
jnp
ror
sarb
and
jl
cmpsl
jno
pusha
aas
cli
pop
arpl
sub
int3
ret
inc
aaa
pop
mov
lea
int
sub
lcall
sbb
jno
sbb
jle
push
out
fcmovb
pop
js
dec
sub
pushf
push
cmp
fiadds
or
stos
push
mov
movups
insb
lret
mov
and
sbb
test
sub
leave
xlat
sbb
adc
jmp
jl
icebp
and
cwtl
or
push
mov
jecxz
movsb
xchg
lods
les
lahf
pusha
or
sub
jne
shrb
mov
in
jg
aad
and
bound
xchg
xchg
nop
insb
push
pop
in
sahf
xorb
enter
xchg
repz
jl
lea
lcall
shlb
push
cmp
in
xchg
mov
lahf
mov
loopne
and
pop
xchg
push
aas
dec
add
cmp
adc
cltd
lret
lcall
mov
filds
add
mull
add
out
jae
sahf
push
dec
xor
mov
and
test
jne
xchg
cmc
sub
jbe
inc
push
inc
mov
push
and
into
ja
xchg
aad
outsl
fidivs
push
leave
pop
les
mov
jge
hlt
hlt
aam
addb
push
sub
add
pop
loop
movsb
out
inc
cwtl
fmull
outsb
sti
jle
mov
shll
frstor
les
or
mov
xchg
rcrl
or
out
fadd
or
mov
xchg
addl
test
rcrb
movsl
or
xchg
mov
stos
jle
out
lock
outsl
ds
subl
mov
xlat
jge
aam
imul
test
aad
sbb
mov
insl
leave
ljmp
repnz
lret
jbe
push
cmp
arpl
or
add
push
fbstp
sbb
push
popf
test
je
jo
or
mov
push
jnp
xor
dec
jmp
xor
push
mov
sbb
lahf
mov
lret
repz
fs
sarb
adc
out
inc
cmpsb
pop
filds
addr16
test
in
pop
sbb
iret
push
imul
into
cmpsb
mov
pop
push
mov
clc
inc
int3
test
andb
cmp
cmpsb
mov
inc
fists
jae
mov
push
mov
adc
sahf
xchg
dec
into
fadd
push
test
add
adc
in
pusha
inc
fnsave
fsubrs
rcll
daa
xchg
xchg
rorl
jb
popf
aad
sarb
rolb
xchg
out
movl
fstpl
shrl
loope
and
fbstp
add
sahf
out
mov
dec
xor
pop
and
movsb
dec
pop
push
xor
jle
push
insl
mov
sarb
dec
mov
xor
sahf
aas
test
mov
outsb
push
xchg
push
repnz
out
arpl
sbb
stos
jg
addb
mov
xchg
sti
aas
mov
sbb
les
ja
test
mov
sbb
dec
daa
shlb
or
inc
mov
icebp
stos
outsb
shlb
push
pop
lods
in
leave
popa
add
dec
scas
popa
mov
cmc
adc
mov
inc
aam
jo
xor
pop
frstor
jb
inc
add
push
xchg
inc
je
lock
xchg
xchg
test
cmp
push
push
or
lods
add
adc
out
outsb
mov
notb
sub
mov
push
push
pop
popa
rclb
fsubrl
push
jo
fs
mov
out
int
repnz
mov
dec
cmpsl
jge
outsl
xchg
ss
repz
jg
pop
fstpt
sub
sub
xor
test
cmp
movntq
cmp
sbb
add
xchg
aaa
push
lahf
sbb
inc
sbb
pop
lahf
mov
icebp
sub
lods
loopne
rolb
into
lahf
push
mov
sub
jo
and
sub
out
jp
aam
pop
add
pusha
jp
and
test
jb
push
jno
mov
out
int3
and
in
mov
notl
fisttpll
mov
loopne
inc
enter
imul
das
stos
jge
stc
mov
jae
int
into
in
lods
popa
leave
jne
push
roll
sub
and
fs
inc
jb
loop
loope
sub
cmp
xchg
shlb
inc
push
je
movsl
xor
cmp
mov
aam
xchg
movsb
add
bound
pusha
mov
std
bound
or
sub
push
aas
bound
lcall
mov
sub
dec
lret
hlt
cmp
cmp
mov
cmpsb
sbb
adc
mov
lret
iret
xlat
daa
stc
ret
cmp
cwtl
inc
cmp
pop
bound
das
push
pop
loopne
push
and
mov
and
filds
test
shll
pop
jge
cmp
call
fs
cwtl
loope
clc
add
dec
add
jl
scas
repnz
repz
daa
mov
and
mov
push
ss
pop
dec
jmp
push
lods
xchg
icebp
stc
dec
mov
in
jns
fdiv
dec
roll
pop
bound
push
ret
andl
nop
out
mov
push
push
sahf
jle
push
pop
pop
out
inc
lods
pop
shrl
bnd
jp
cltd
xchg
outsb
cmpsl
add
xchg
mov
rcll
stos
insl
cmp
inc
xchg
inc
xor
sar
jg
ret
mov
and
call
bound
mov
test
push
jmp
pushf
popf
pop
mov
fwait
repnz
xor
sti
inc
or
adc
push
dec
xor
idivb
pop
adc
stos
iret
outsl
xchg
insl
rorl
es
test
ret
inc
push
mov
sbb
jbe
fidivrs
cmp
andb
inc
xor
je
or
rorb
imul
jae
adc
sbb
pop
popa
adc
lods
mov
inc
jecxz
jns
jbe
enter
fs
pop
pop
mov
adc
adc
xorl
and
cwtl
inc
dec
or
add
pusha
cmp
popf
dec
cli
xchg
dec
push
and
and
push
jp
xor
mov
aad
xchg
movsb
mov
aaa
aaa
jecxz
decb
call
mov
sbb
xchg
or
or
hlt
dec
mov
xchg
add
xor
ds
sub
pop
iret
jb
sbb
cmc
add
outsb
jle
pop
aas
sbb
push
adc
and
mov
jp
add
cmpsb
dec
inc
pop
mov
jne
and
arpl
push
jb
adc
mov
popa
gs
in
cmpl
cld
ds
loopne
jle
movsb
cmp
mov
mov
and
mov
pop
and
cld
es
sub
xchg
loop
mov
subb
sbb
shl
dec
add
stos
pusha
inc
fsubr
inc
mov
pop
das
push
adc
cs
mov
daa
xor
dec
bound
inc
xchg
sbb
cmpsb
or
and
cmp
and
lret
data16
sub
mov
jbe
arpl
mov
mov
in
adc
stos
cmpsb
and
pop
push
nop
push
and
jp
es
pop
adc
insl
shrb
lds
jb
mov
and
jae
jne
lea
dec
xor
cmp
in
leavew
fidivl
xchg
jle
hlt
push
dec
push
outsb
stos
mov
addr16
jecxz
pop
cmp
push
rorl
push
xchg
out
cmp
pop
inc
jmp
fwait
aas
scas
mov
rep
jnp
xchg
sbb
jo
mov
cmp
dec
nop
test
pop
dec
subb
mov
les
sbb
jl
jp
inc
rorl
imul
ficompl
inc
pop
push
test
ds
ds
mov
mov
es
sub
pushf
jnp
movsb
out
mov
iret
sub
out
mov
imul
sti
out
inc
adc
ss
adc
or
mov
sbb
and
arpl
ror
dec
or
inc
mov
adc
sarl
sbb
lret
dec
lea
sub
push
xor
jae
inc
jae
cli
cmpsl
popf
cmp
jmp
mov
and
add
mov
shrb
int3
xor
mov
and
addr16
mov
add
nop
and
inc
xchg
adc
lods
push
push
dec
movl
sti
enter
out
call
int
push
sub
loopne
and
adc
loop
sbb
add
sahf
jg
or
out
push
push
xor
mov
push
loopne
int3
pop
sub
and
and
mov
mov
insl
loope
filds
push
jbe
in
push
fadds
adc
fwait
mov
adc
mov
push
sub
out
dec
lock
cmpsl
hlt
pop
jle
jne
mov
imul
inc
decb
jl
repz
dec
in
dec
movsb
sub
inc
push
leave
jns
rcll
dec
xchg
add
cmpsl
inc
lret
push
xchg
je
addl
mov
xchg
xchg
divb
cmp
js
sti
test
dec
dec
das
rcrl
lcall
cmp
fcom
mov
xchg
mov
clc
xchg
mov
hlt
pop
mov
jle
data16
leave
ret
cwtl
daa
loopne
fsubrs
flds
inc
test
rcl
call
out
mov
cmp
popf
mov
push
mov
fildl
pop
data16
sbb
xchg
mov
mov
xlat
mov
pop
in
ljmp
add
pop
push
adcl
sub
aas
pop
mov
mov
inc
xor
mov
xor
mov
decl
jl
jne
dec
lret
mov
push
fdivl
test
xchg
or
ja
outsb
int3
cmp
xlat
mov
sti
ret
je
adc
and
lds
icebp
popf
push
sbb
xchg
cld
cmp
cmpsb
mov
sbb
lahf
aam
mov
js
adc
xor
mov
pusha
sbb
cmp
shrl
sub
pop
mov
pop
sbb
aas
xchg
dec
sbb
or
mov
test
rorb
push
and
cmpsl
pop
stc
es
mov
xchg
add
xchg
cwtl
lock
fwait
xchg
rol
cmp
ds
iret
jns
mov
outsb
cmc
scas
iret
jnp
add
mov
loopne
hlt
test
mov
shlb
add
or
jecxz
jmp
mov
mov
add
xlat
mov
jmp
push
sub
out
or
mov
scas
mov
adc
dec
sbb
ljmp
iret
loopne
scas
or
adc
cmp
gs
jns
clc
fs
out
mov
shl
mov
pop
mov
sti
jl
je
mov
sub
mov
ss
not
add
mov
mov
loope
insl
mull
jge
mov
addr16
cmp
test
incb
scas
sub
add
add
mov
outsb
mov
jp
jne
lcall
in
sti
push
movsb
jg
ret
mov
jmp
daa
jge
cltd
out
jne
repnz
test
movsb
xchg
mov
imul
mov
int
sbb
or
gs
inc
sub
xchg
enter
push
ret
and
pop
push
and
fsubrs
jp
xchg
xor
pop
les
test
sub
dec
dec
sub
inc
or
int3
repnz
sub
jg
dec
mov
mov
bound
sub
sbb
adc
push
shrl
cmp
aaa
push
mov
push
out
fiadds
hlt
fsubrl
mov
jmp
aad
mov
lret
ljmp
and
dec
mov
outsl
clc
mov
sub
aas
cmp
stc
enter
or
arpl
je
pop
xchg
mov
das
and
out
xorb
jno
je
cmp
xlat
jmp
mov
rolb
mov
fsubrl
ljmp
aaa
cltd
mov
add
leave
cmovg
xchg
popf
movsl
fsubl
sub
push
es
ficoms
jae
decl
addb
pop
dec
jge
es
push
sbb
ljmp
jne
inc
sub
loopne
ljmp
xchg
jnp
pop
adcb
xchg
subl
jl
pusha
xchg
push
fcomp
xor
pop
pop
popf
negb
mov
popf
ljmp
or
clc
inc
mov
dec
mov
adcb
mov
push
adc
push
adc
jns
mov
movsb
mov
ljmp
fs
cmp
movsl
loope
cmc
cmp
mov
sbb
lcall
jno
jb
loope
jno
jns
lods
cmpsb
mov
mov
mov
pop
aaa
cmp
push
lock
mov
fisubs
mov
cmp
testb
dec
shlb
movsb
dec
loop
jo
pop
or
lods
push
add
cmp
add
mov
inc
rorb
mov
data16
mov
inc
pop
sub
faddp
outsl
pop
lds
mov
int
jnp
call
cmp
push
push
mov
inc
jmp
cmp
outsb
setp
leave
xor
hlt
sub
test
inc
mov
jecxz
pop
mov
fiaddl
sub
jl
ret
xchg
pop
mov
mov
inc
movsl
pop
aaa
fcoml
push
scas
fildl
aad
enter
pop
or
aad
lods
mov
add
jnp
jbe
int3
jnp
push
lds
pop
xor
and
in
lret
call
mov
lea
popf
fwait
inc
stos
and
xlat
adc
out
sbb
aas
push
xchg
sbb
incb
mov
mov
mov
push
add
mov
push
lcall
cmc
das
add
leave
or
call
adc
and
shlb
jb
push
xor
xor
push
inc
sbb
jne,pn
and
orl
jecxz
mov
xor
pop
movsl
daa
push
leave
xor
xchg
ss
sbb
dec
fwait
mov
stos
sarl
and
inc
mov
xchg
push
incb
sbb
dec
xchg
jge
and
or
cmp
xchg
ret
cmp
in
cmp
faddp
inc
and
movsl
dec
or
push
in
xor
movsl
inc
mov
fs
sbb
xlat
sub
jnp
xor
mov
mov
call
or
lods
sbb
cmpsb
jno
imul
xor
shlb
out
add
and
mov
adc
popf
xchg
fldenv
push
mov
shlb
inc
lods
or
sub
stc
cmp
mov
or
dec
in
icebp
add
in
pop
cld
adc
int
int3
in
mov
call
lret
sahf
and
lds
adc
cs
mov
adc
xor
insl
cmp
adc
mov
push
call
rolb
push
loop
test
out
clc
cmp
iret
cmp
aaa
mov
mov
xor
jmp
movb
out
stc
sub
cld
cld
shrl
adc
sbb
mov
xchg
adc
push
xor
add
xlat
lods
imul
psubusw
ja
xor
popa
push
mov
int3
push
mov
and
fisttpll
scas
outsb
push
sbb
adc
inc
pop
mov
inc
pop
jae
addl
pop
push
cmp
mov
out
push
xchg
dec
aad
push
mov
pop
leave
jno
mov
jl
jno
insb
in
push
and
adc
ret
inc
mov
out
cmp
out
jle
stc
push
xchg
fmull
dec
mov
outsl
push
or
mov
fldenv
and
dec
ljmp
mov
sub
add
inc
adc
bnd
lret
fisubl
cmp
ja
mov
fdivrl
inc
stos
aam
shl
mov
sbb
and
dec
xor
xor
lea
daa
ret
das
sub
jns
in
pop
xchg
fildll
xlat
mov
pop
pop
scas
ljmp
je
mov
fidivl
hlt
out
jae
into
les
cmp
or
bound
cmp
xchg
nop
mov
inc
xchg
sub
out
mov
repz
iret
xchg
js
cmp
or
cmp
and
jmp
out
popf
cmp
pop
sub
cmpsl
mov
test
es
sub
cwtl
aas
outsb
or
lcall
xorl
dec
arpl
xor
insb
xor
test
inc
lret
or
in
pop
stos
inc
and
outsb
pop
sti
subl
sbb
mov
scas
adc
addr16
adc
xor
xor
inc
lcallw
xchg
jnp
pop
mov
lret
jecxz,pt
sahf
roll
push
jmp
iret
lret
insb
jl
in
cmp
rcll
add
sbb
xchg
pop
mov
mov
cmc
inc
loop
mov
lahf
cmp
pop
push
mov
mov
or
jo
aam
lods
stos
testl
sbb
loop
push
push
push
test
mov
push
inc
pop
add
push
mov
xchg
test
sbb
imul
stos
daa
cmpsb
lcall
or
mov
ds
push
mov
das
xor
or
mov
mov
sbb
testb
fmulp
jns
sbb
mov
test
jp
add
stc
pop
mov
mov
pop
and
loopne
or
es
and
pop
adc
push
stos
sub
adc
or
mov
aad
int
adc
lahf
negl
repnz
or
jo
int3
scas
sbbb
add
dec
and
out
xor
sub
push
inc
mov
outsl
stos
fsubrs
subb
jb
mov
int3
loope
cmp
sar
mov
or
mov
jge
add
sbb
sub
adc
xlat
xor
or
pop
shll
in
dec
xchg
sub
push
loopnew
inc
dec
jp
rcll
cmp
jl
sbb
push
mov
popa
jle
lods
pop
enter
jp
into
or
mov
fsubrl
add
pop
aaa
push
cmp
pop
push
push
dec
outsl
je
lret
lea
pop
inc
icebp
cs
out
push
dec
cld
inc
jno
mov
ja
insl
imul
push
pop
cmp
cmp
push
push
jl
std
jnp
pop
inc
fcomp
sub
sbb
pop
cmpsb
push
faddp
decl
stos
lret
add
cmp
mov
pusha
pop
in
mov
rcl
xchg
cmp
mov
and
test
lret
call
scas
mov
push
out
jnp
adc
sbb
jge
add
inc
pusha
dec
in
cli
push
push
movsb
cmp
push
pop
sub
js
test
inc
xor
pop
jp
popl
in
xorb
mov
pop
pop
xlat
mov
add
xchg
xchg
cmp
stos
adc
jmp
cmp
cmp
loopne
adc
dec
mov
mov
cmpsb
testl
cltd
in
loope
mov
testl
jg
mov
and
or
adc
xchg
movsl
dec
sbb
fiaddl
call
dec
fwait
shll
pushf
jno
xor
or
jns
fiadds
pop
mov
jnp
push
lahf
fstpt
mov
sarl
push
sbb
mov
xor
cmp
xlat
cltd
xor
and
jg
mov
jbe
jb
sbb
xchg
dec
stos
xchg
sub
cld
mov
js
jge
push
jmp
add
push
and
cwtl
lahf
je
adc
sub
jbe
pushf
mov
shl
ja
dec
sbb
movsb
dec
test
icebp
pop
mov
cmp
xor
and
xchg
mov
gs
rclb
mov
fidivs
sub
pop
adc
cmpsb
push
pusha
out
sti
fbstp
mov
movsb
roll
xchg
and
gs
in
adc
xchg
fdecstp
xchg
ja
and
lret
xor
pcmpeqw
gs
leave
lcall
stos
aam
cmp
sbb
sub
repz
dec
fwait
mov
adc
xchg
or
adc
xor
pop
xor
jecxz
jmp
xor
jo
ss
test
fldt
add
sub
ss
pop
jl
inc
xlat
and
std
push
push
cmpsb
jge
or
ret
dec
mov
jae
sub
and
add
and
and
adc
xor
mov
push
ds
jo
loopne
shlb
mov
mov
inc
dec
cwtl
jno
pop
and
fcmovu
cmc
xor
or
addl
xor
vmovsd
icebp
and
lods
push
ret
mov
jg
loop
xor
shrl
cmp
ljmp
scas
test
mov
mov
xor
push
cmp
outsl
out
xor
and
mov
aad
pop
pushf
mov
xor
jmp
popa
mov
xor
sbb
adc
movsb
push
push
stc
shrb
dec
clc
shl
aad
roll
pusha
xor
movsl
xor
fdivrl
loopne
xchg
mov
loopne
popf
and
test
lea
jns
xchg
pop
int
inc
mov
dec
cld
cli
pop
pop
mov
xor
push
xchg
xchg
stc
popa
popf
cmp
addr16
out
sti
les
ljmp
loope
mov
sbb
jbe
les
dec
xor
subb
and
push
rolb
data16
sub
push
dec
ret
or
push
sbb
inc
jl
mov
push
sbb
mov
lret
mov
sub
and
nop
mov
ja
adcl
lock
das
bound
jg
cmpb
push
inc
mov
in
les
mov
mov
pop
inc
cmp
testl
jae
movsl
shll
imul
in
cmpsb
aad
test
shl
shll
cmp
mov
fcoms
jmp
mov
jmp
roll
push
rorb
mov
dec
inc
or
jae
in
int3
pop
inc
xorb
cmpsl
rolb
stc
push
ret
xlat
cmp
ljmp
cmpsl
sbb
lret
fisttps
imul
xchg
loop
mov
mov
adc
clc
xlat
cmpsb
icebp
xor
push
movsb
arpl
xchg
jae
pop
lahf
cli
pusha
loopne
into
iret
jg
and
hlt
xchg
adc
mov
std
es
sbb
mov
sbb
repnz
sarb
pop
sub
ljmp
nop
or
sbb
rorl
stos
lahf
out
andl
jne
ret
imul
sub
in
aas
xor
lahf
lds
imul
dec
addr16
ret
lea
pusha
lods
pop
divb
pusha
sub
lahf
dec
push
lods
bnd
xchg
xor
jle
pop
xchg
fcompl
pusha
iret
fcomip
jmp
cli
data16
loopne
jge
mov
xor
mov
jo
popf
imul
jle
xor
jbe
jle
dec
push
call
jnp
dec
outsb
into
or
in
nop
in
and
test
clc
sbb
je
leave
jecxz
divl
lcall
cmpsl
in
push
ljmp
xor
clc
pop
idiv
mov
xchg
pop
add
fcomip
lods
cmp
mov
sbb
and
lahf
adc
outsb
pop
push
dec
pop
sbb
and
lret
negb
fwait
push
adc
enter
sub
out
inc
mov
lret
pop
arpl
movsb
nop
fdivrs
ret
imul
pop
add
or
data16
jp
push
fucomip
outsl
cmp
cmpsb
popl
out
dec
sub
lock
cmc
cmp
mov
and
and
pop
sahf
test
lcall
add
push
push
in
imul
fidivrl
sahf
fwait
scas
std
sub
dec
jp
rol
gs
dec
adc
adc
sub
or
iret
sbb
sub
aaa
lea
cmpsl
ficoms
sahf
scas
pop
ds
mov
test
test
std
jno
ds
scas
inc
push
push
push
orb
nop
xlat
movsb
hlt
sbb
aam
repnz
je
jmp
mov
pop
cs
clc
inc
idivl
daa
jmp
psllw
in
scas
mov
out
daa
bound
cmp
inc
mov
shlb
mov
fisttps
sbbl
inc
mov
fwait
in
add
xlat
or
xchg
mov
dec
out
or
ret
adc
add
sti
jl
lods
lods
xor
xchg
and
mov
xchg
jmp
dec
mov
dec
push
dec
pop
jnp
fcmovnu
inc
mov
mov
cld
mov
pop
mov
in
sbb
pushf
in
imul
in
add
pusha
sarl
lret
or
arpl
push
jne
push
cmp
imul
mov
add
or
fcompl
andl
mov
cmpsb
cmpsb
xorb
mov
lea
outsl
movsl
and
mov
pop
mul
daa
mov
xchg
test
mov
cli
inc
and
jo
cmp
mov
xchg
stos
fmul
das
sbb
push
imul
out
in
ret
jnp
lret
push
out
xor
repz
aas
pop
mov
lahf
push
scas
sub
pop
adc
inc
adc
test
arpl
pushf
outsb
test
imul
sub
jmp
mov
jns
in
gs
xchg
mov
nop
jns
or
cli
jae
and
add
adc
in
lret
sub
cmp
cmp
es
dec
lock
jnp
imul
fistl
data16
ds
sub
mov
jne
hlt
pop
mov
sbb
iret
mov
stos
sub
mov
and
test
xorb
push
add
negl
lcall
mov
mov
mov
push
in
fsub
cs
jl
and
sub
sahf
jp
dec
test
negb
dec
or
or
dec
jns
jle
jg
gs
and
sbb
icebp
or
jp
dec
fsubs
push
repz
std
cwtl
sub
xor
adc
pop
jo
out
imul
rolb
jne
bound
icebp
dec
insl
add
pop
jb
lret
xor
push
enter
fistl
loopne
dec
int
pop
cmc
stos
mov
xchg
dec
push
adc
push
movsb
popf
fildll
dec
in
fwait
imul
xor
call
lea
lahf
xor
and
mov
and
sub
xor
or
add
rorb
hlt
out
into
fnstsw
or
adc
mov
cmc
mov
aas
lods
testb
sbb
xchg
mov
xlat
pop
push
cli
mov
ljmp
repz
mov
fiadds
push
dec
in
scas
dec
mov
cmc
jne
clc
mov
or
lea
sub
sar
sbbl
add
dec
add
lcall
jno
arpl
adc
mov
int
leave
pop
jge
jmp
es
in
lock
sahf
es
jg
pusha
and
ds
fsubrs
jne
push
cmp
je
outsb
add
stos
jp
xchg
outsl
fnstenv
jl
add
icebp
fisubrl
lahf
out
xlat
xor
mov
xchg
xchg
sbb
pushf
mov
jne
int
std
sbb
pop
pop
imul
fsubs
jmp
add
cli
fimuls
mov
mov
aas
loop
jne
sbb
cmpsl
mov
sub
dec
jbe
sti
jbe
shrl
xor
shlb
push
out
sahf
xchg
fnstcw
cmpb
fsts
jns
sahf
cmc
inc
aaa
mov
call
xchg
mov
mov
jo
faddl
and
push
jmp
add
xchg
push
cmpsl
int
cmp
push
xchg
outsl
cmp
das
adc
lock
sub
mov
pop
pop
xchg
jne
incb
lods
popf
iret
std
dec
mov
fadds
arpl
aas
xor
stos
adc
push
jbe
push
pop
ds
push
pusha
xchg
xor
sub
mov
push
sub
jmp
sbbb
cmpl
dec
mov
andb
int3
fidivs
pop
stos
out
shrb
popa
mov
xor
push
es
fisubrs
jno
popf
adc
data16
mov
push
loopne
mov
aas
repnz
sub
mov
aas
std
test
pop
in
insl
enter
dec
adc
in
rorl
leave
lret
into
cmp
adc
push
xchg
push
pop
enter
xor
cs
xor
loop
orl
popa
sub
jecxz
into
movsl
dec
repz
pop
pop
dec
sub
test
or
hlt
xchg
sbb
mov
xchg
pop
mov
test
sahf
and
xor
jne
or
inc
inc
lock
loop
fs
push
ret
xchg
cli
inc
jle
lods
repnz
out
fucomi
sbb
mov
dec
and
and
imul
cmp
dec
add
stos
mov
mov
ljmp
jge
hlt
sarl
dec
push
dec
mov
add
jge
imul
dec
lcall
push
inc
xchg
pop
add
add
pushf
and
pop
add
inc
xor
or
lcall
xchg
inc
inc
test
imul
mov
push
cmp
adc
in
mov
mov
stos
cmc
xchg
xchg
jno
mov
inc
or
lods
mov
es
jnp
lods
pop
nop
pop
enter
data16
gs
aaa
dec
sub
popf
ror
repz
nop
inc
in
fcoml
push
or
pop
sub
inc
repz
stos
icebp
pushl
xchg
adc
fisubrl
icebp
movsl
fsubr
imul
sbb
out
shl
push
rcrb
or
adc
stc
xchg
xor
inc
cs
fiaddl
int
fmuls
int3
pop
pop
lock
jo
stos
add
arpl
ds
pop
xor
push
dec
jg
cmp
mov
xchg
add
mov
push
mov
inc
enter
stos
mov
inc
scas
addr16
out
in
aas
push
mov
icebp
xchg
sbb
cmp
inc
jbe
mov
imul
js
in
cmpsl
sbb
xchg
xchg
roll
inc
out
test
popa
mov
sbb
push
cmp
out
mov
inc
xchg
cmpsl
test
andb
push
rorl
das
and
mov
pop
jns
mov
adc
aaa
je
daa
aad
xor
xor
idivb
add
adc
sbb
mov
shrl
cmp
imul
mov
xor
cli
add
push
xor
shr
mov
pop
inc
in
inc
xor
lret
or
sub
dec
cmp
jl
lret
repnz
push
jmp
loopne
xor
xchg
mov
mov
pop
inc
push
fcmovnbe
mov
fsub
cmpsl
test
jne
mov
pop
arpl
add
test
push
mov
mov
adc
loopne
stos
mov
mov
cmp
push
cld
adc
jno
outsl
dec
rcll
mov
adc
jmp
out
lahf
aas
mov
pop
lods
out
es
inc
daa
loope
ss
mov
add
mov
popf
mov
inc
cmp
fs
lcall
xchg
and
or
outsb
test
pop
mov
jnp
mov
bound
sub
push
inc
jecxz
adc
pop
xlat
sub
pushf
sahf
adc
testl
xchg
in
push
inc
out
stos
push
filds
dec
pop
mov
lock
xchg
push
push
mov
pop
data16
fwait
sbb
or
icebp
mov
inc
add
scas
pushf
dec
jle
sbb
push
mov
jp
push
lcall
and
cmp
mov
inc
addb
jns
decb
sbb
out
insb
ret
jno
popa
je
test
sbb
fistpll
jbe
in
fs
sahf
push
int3
mov
xchg
clc
int3
cld
shrl
mov
push
sbb
xchg
ret
lcall
fs
jne
fnsave
vpmulhuw
movsb
ja
pop
xor
jle
mov
inc
insl
jge
inc
xor
test
mov
out
mov
sub
pop
pop
fisubrl
rclb
jae
xchg
sbb
scas
sbb
or
and
xchg
loopne
into
in
imul
gs
sub
cltd
xlat
rolb
dec
sbb
cmp
out
xchg
pop
subb
dec
or
cld
cwtl
ss
jg
into
addr16
pop
test
negl
push
push
jno
cmp
out
in
rorb
aaa
lds
push
sub
jp
mov
insl
mov
movsl
or
test
stos
divl
daa
xchg
pop
in
dec
imul
in
popa
inc
mov
mov
jno
hlt
lcall
leave
mov
shll
repz
cwtl
push
sub
loop
popa
inc
push
dec
testb
mov
pop
push
mov
pop
je
in
jl
push
pop
jb
mov
mov
xor
out
and
push
xchg
xchg
movsl
scas
pop
stc
and
insb
in
es
mov
add
mov
push
data16
stos
mov
bound
push
push
loop
jg
dec
add
dec
push
jbe
daa
xchg
mov
test
sti
jns
mov
sar
push
sbb
call
aam
movsl
bound
push
fdivr
loope
into
hlt
pushf
jb
push
add
adc
push
cmp
push
sub
dec
mov
or
fnstcw
das
pop
xor
imul
sub
fdivl
dec
add
call
and
repz
mov
fucom
stos
call
xchg
pushf
nop
dec
add
repnz
or
dec
out
nop
xchg
push
mov
dec
add
xchg
xchg
add
fstpl
out
and
jno
lock
xlat
in
ja
ss
call
push
popf
rolb
mov
push
gs
jnp
roll
jo
push
popa
cld
stc
xchg
test
mov
loopne
lahf
outsl
mov
faddl
mov
movsb
xlat
mov
xor
lock
xor
std
sub
push
cld
sbbb
shrb
ss
dec
sbb
cmp
xchg
mov
cmp
fwait
adc
cwtl
je
in
xor
push
test
fmul
aaa
push
loopne
jae
add
adc
fdiv
pop
addr16
fmul
test
lds
dec
fsubp
cmp
adc
addr16
mov
ss
test
adc
xchg
pop
mov
or
daa
mov
cmpsb
popf
pushf
xor
pushf
fildl
int3
pop
jo
out
testb
or
fildl
cmp
dec
xchg
sbb
ret
test
sarl
stos
in
aad
insl
pop
xchg
sub
or
cwtl
dec
daa
movsb
dec
mov
jne
push
jecxz
jbe
fsubs
movsl
mov
out
test
pop
fdivrp
pop
cld
je
shll
cmp
dec
sub
lret
daa
enter
jbe
and
out
movsb
out
jmp
lahf
call
push
sarl
movsb
insl
push
shl
dec
adc
xor
or
sub
jecxz
push
add
rcl
mov
hlt
sub
mov
mov
mov
vunpcklps
jmp
clc
cmp
pop
cld
je
mov
pop
test
sbb
or
and
jmp
mov
adc
push
ret
and
leave
movsb
cmp
xor
sbb
or
divl
loop
dec
iret
insl
lea
movsb
cmpsb
mov
sub
subb
test
inc
and
and
insl
xor
and
xor
mov
mov
adc
pop
je
sub
int3
bound
mov
xor
outsl
fdivr
adc
sbb
out
xor
jl
sub
push
xor
cld
or
cmp
jecxz
bnd
insl
pop
dec
das
es
xor
in
or
ficoml
dec
inc
sahf
pusha
jge
and
sub
sub
pop
xchg
pushl
mov
fstpt
in
jne
outsb
sbb
ret
hlt
fs
aam
xlat
outsl
stos
cli
cmp
fsubrs
popa
repnz
iret
adc
xchg
sbb
shlb
or
stc
sbb
popf
mov
and
les
lods
in
inc
test
add
pusha
adc
aaa
mov
mov
addb
xor
inc
mov
cwtl
pusha
subb
ficomps
cmp
push
push
cltd
push
pushf
xor
push
ja
out
add
xchg
xor
dec
fcmove
pop
adc
ds
sbb
ljmp
xchg
jge
pop
int
add
sbb
sahf
std
inc
pop
fisttpll
nop
xchg
inc
xor
cmpl
xchg
xor
push
clc
outsl
fwait
jmp
cmp
incl
adc
or
xchg
gs
pop
inc
xor
jmp
fstps
dec
fs
in
mov
jle
div
sbb
or
add
and
cmpl
and
es
addr16
and
jne
cwtl
pop
ss
mov
hlt
adc
es
mov
jae
mov
subb
pop
fldenv
ret
dec
xchg
push
sarb
push
xchg
decb
pop
ss
push
sahf
ret
inc
mov
add
clc
pop
dec
sahf
mov
iret
sbb
and
leave
out
jns
push
out
push
mov
test
sahf
dec
inc
outsb
xor
incb
xor
repz
cld
les
sub
mov
fdivl
ja
push
mov
cmp
sub
movsb
cmp
cmpl
cs
idiv
movsb
mov
push
mov
lahf
pop
aaa
adc
mov
aaa
cltd
subb
xor
hlt
and
push
push
mov
out
jae
add
out
jmp
mov
iret
push
sub
ds
push
inc
push
insl
aam
push
test
mov
icebp
pop
jns
mov
das
cmp
xchg
mov
ss
mov
lret
in
jl
inc
arpl
push
or
cs
and
and
out
repnz
mov
test
lret
insb
stos
mov
and
sbb
sub
insb
pop
int
or
push
out
cmpsl
sbb
cmp
jl
stc
and
xchg
hlt
xchg
dec
or
xchg
cmp
jmp
push
mov
xor
roll
adc
ret
in
imul
fs
daa
shl
mov
addr16
push
sbb
rcl
mov
xchg
loope
or
fs
jmp
xchg
into
jns
sub
jo
jge
sub
rcl
pop
add
inc
jo
push
jle
or
lods
loop
sti
and
adc
xchg
insb
test
mov
test
xor
push
xchg
push
loop
shrb
cwtl
jnp,pt
sti
inc
dec
mov
jp
mov
or
mov
and
dec
lds
addb
cmp
adc
mov
add
cs
and
clc
jmp
imul
shll
lock
mov
fstps
cld
mov
sbb
out
jae
addr16
fldenv
mov
mov
sub
xor
int3
adc
cwtl
or
fidivl
movsb
mov
pop
imul
and
push
dec
fs
mov
fnstsw
bound
in
andl
adcl
cmp
xor
ret
negb
movsb
pop
add
mov
xchg
jno
fmull
mov
mov
fs
lods
arpl
xor
xor
movsb
jp
mov
aas
lcall
sub
sbb
cmp
sub
lock
sub
ret
jecxz
and
mov
movsb
inc
jbe
pop
and
pop
in
ja
repnz
mov
jnp
xchg
xchg
inc
push
outsl
mov
pop
cmp
pop
ljmp
das
fimuls
mov
sub
xchg
sbb
dec
rorb
cmp
mov
mov
popa
mov
jbe
stc
ds
lds
mov
add
cwtl
test
repz
les
jecxz
mov
inc
outsl
push
mov
sbb
stc
imul
push
cmpsl
ss
add
xchg
mov
icebp
sub
pusha
ss
cmpsl
scas
jo
invd
xor
rcl
xor
sti
int
gs
mov
inc
add
ljmp
mov
ficompl
or
enter
adc
rcll
xchg
subb
pushf
adc
pop
mov
cmc
and
sub
push
add
cwtl
das
xchg
jecxz
cmpsl
pop
scas
scas
pop
xchg
out
jg
fidivrs
ret
inc
pslld
push
lock
lods
notl
add
lcall
inc
cmpsl
mov
stos
mov
loopne
push
xchg
les
test
ljmp
test
jg
out
ret
dec
mov
ret
int3
ljmp
fdivrs
data16
sub
cli
push
add
xchg
insl
mov
out
inc
scas
es
sbb
repnz
into
mov
mov
fs
dec
aaa
inc
out
xchg
pop
lcall
adc
sub
or
enter
fsubrs
pop
sbb
pop
fwait
cmp
adc
inc
inc
mov
push
or
lock
stc
inc
dec
sarl
xor
ffree
mov
push
sarb
stos
das
movsb
adc
test
mov
in
mov
fdivs
jno
into
jne
fisubl
sbb
cltd
cmp
jo
cltd
jp
addb
lahf
testl
es
jno
insb
xchg
fisttps
stos
and
int3
xchg
jl
out
sbb
pop
sub
and
fxch
push
cmpsb
lahf
jge
add
or
cmp
outsb
jae,pt
sbb
inc
inc
sbb
jmp
jecxz
cmp
dec
pop
push
ljmp
cmc
cs
mov
stos
stos
mov
aas
aad
divl
sub
xor
mov
jb
clc
push
das
jle
enter
fnsave
mov
or
push
movsl
mov
fistl
aaa
aaa
inc
adc
mov
jo
aaa
popa
add
jne
xchg
sub
stc
cmp
in
cmpsb
mov
in
rcrl
test
addr16
loopne
pop
push
aam
pop
in
add
mov
xor
pop
xchg
mov
rorb
adc
mov
insl
jo
movsb
into
repnz
insl
lret
shrb
mov
inc
test
pushf
jbe
movsb
orb
insb
sub
loop
xor
ficoml
sub
add
mov
int
rcrb
or
pop
sbb
leave
push
xchg
sbb
inc
pop
test
decb
mov
jecxz
jno
cmp
mov
dec
push
insl
push
or
aam
outsb
push
sbbl
jo
ja
jb
cli
dec
fistpl
mov
mov
pusha
aad
popa
and
roll
add
push
or
add
fwait
dec
jb
mov
sub
sarl
mov
adcl
ss
mov
mov
mov
mov
push
adc
stc
push
daa
cld
or
in
loope
push
xchg
jnp
sbb
enter
add
in
icebp
js
adc
inc
push
nop
ja
mov
add
bound
dec
movsl
call
lret
mov
fisubl
inc
or
push
sbb
mov
push
ret
mov
cld
dec
loopne
adc
mov
inc
nop
sub
sbb
add
fstps
add
jle
test
insb
ljmp
jae
sahf
dec
pop
jp
pop
lret
pop
cmp
mov
pop
test
and
hlt
jp
or
xchg
inc
or
mov
push
add
add
pop
mov
jmp
popa
repnz
in
in
cmp
cwtl
flds
jo
xor
lret
pop
in
pop
mov
sub
push
pop
dec
ljmp
adc
repnz
mov
cli
and
fisubs
xchg
leave
sub
adc
hlt
xorb
xchg
adc
in
inc
rcrb
push
pop
loopne
iret
inc
pop
ret
mov
inc
mov
inc
jg
sbb
les
sub
add
xor
scas
shll
inc
js
js
mov
jb
and
sbb
sub
mov
mov
adc
push
lret
lahf
xor
push
pop
fwait
js
sbb
pop
pop
mov
sbb
mov
outsl
mov
sahf
imul
sahf
cld
push
in
and
cmp
roll
outsb
sbb
insl
dec
jp
shr
jnp
sar
loopne
sub
xchg
mov
cli
js
outsl
imul
mov
push
cmp
mov
xor
adc
mov
mov
lcall
add
in
xchg
jmp
enter
ficompl
in
clc
out
add
rcl
fstpt
gs
ds
or
mov
push
xlat
push
sub
inc
or
sub
xchg
imull
or
pop
dec
cli
jnp
cmp
mul
movsb
into
leave
in
bound
push
mov
jb
mov
jge
fstl
scas
xor
rcr
push
loopne
pop
mov
loope
jb
pop
push
sub
ljmp
int
test
dec
dec
jecxz
mov
loopne
ljmp
loope
pop
outsb
xor
call
adc
popa
lds
xchg
push
pop
jns
mov
jmp
dec
mov
sbb
or
dec
mov
lret
mov
femms
imul
inc
xchg
jge
icebp
filds
sub
mov
int3
mov
repnz
ds
scas
pop
pop
popf
mov
add
fmul
adc
and
dec
gs
aad
mov
mov
push
into
mulb
fsubs
push
or
mov
cli
daa
jb
jmp
jl
or
dec
subl
shlb
jnp
cli
enter
das
pcmpeqb
push
sbb
xorb
lret
lcall
xor
or
jmp
cmpsb
jle
push
stos
sub
xchg
xchg
inc
and
mov
and
jecxz
add
xchg
sbb
sub
nop
push
push
push
popf
jecxz
fidivrs
dec
dec
test
push
std
mov
push
lret
aaa
sub
jge
push
lods
lea
cmpsl
stos
or
cmc
push
sbbb
int
rorl
aam
out
sbb
in
mov
push
rclb
setbe
nop
cmpsl
xchg
ss
sub
mov
insl
nop
addr16
int3
sbb
jo
hlt
sbbl
stos
loopne
gs
mov
addr16
decl
add
pop
xchg
dec
hlt
xchg
inc
in
jmp
sbb
add
push
jmp
shll
inc
test
pop
jbe
lahf
add
inc
xchg
pop
cli
push
stc
pop
lds
add
loopne
cwtl
call
lods
xchg
ss
imulb
push
pop
rorb
xor
sub
pop
xchg
rolb
lods
add
xchg
cmp
pop
cmp
cmpsb
das
cmp
dec
daa
test
mov
repz
cld
sub
xlat
and
inc
sbb
mov
rolb
xchg
outsl
or
mov
add
cld
mov
lcall
cmp
pusha
sti
lea
nop
lea
repnz
xor
adc
int3
icebp
cmp
stos
xchg
push
lds
mov
loopne
jbe
clc
ret
adc
pop
mov
cmpsb
iret
pop
rcll
dec
jae
xor
adc
or
jp
pop
xchg
push
test
jne
lds
mov
cmp
cmp
mov
add
mov
sbb
sub
lods
adc
sbb
mov
adc
mov
fists
inc
inc
ljmp
mov
mov
in
lds
pop
mov
hlt
dec
mov
push
inc
imul
ja
adc
lea
pop
xchg
lahf
or
cmpsl
fwait
push
mov
ds
jnp
push
inc
adc
lret
dec
clc
nopl
pop
pop
cwtl
mov
mov
stos
inc
jmp
leave
sub
add
addl
or
and
jge
xor
gs
stos
popa
adcl
jp
scas
pop
cs
loopne
je
xorb
xchg
rclb
or
xor
cmp
stos
call
jmp
mov
mov
lock
jbe
out
jne
scas
out
mov
data16
cmp
in
xchg
insb
inc
lcall
cwtl
in
add
cmp
loop
or
mov
mov
push
std
je
mov
mov
rol
adc
fidivrs
push
rcll
jmp
in
les
shll
inc
icebp
in
ds
cld
push
jecxz
fsubs
lock
inc
mov
in
fcomi
out
xor
shrl
and
pop
iret
shll
incb
jecxz
ss
cwtl
inc
inc
push
test
jo
pop
cmp
hlt
dec
xor
sbb
mov
jbe
sub
fs
sub
xchg
pushf
bnd
and
sub
movsb
jg
lds
int
mov
jp
xor
popa
adc
scas
gs
mov
dec
adc
pop
fbstp
sahf
lds
sahf
fldenv
or
xchg
lods
xor
mov
or
xchg
out
sbb
pop
lods
fisubl
js
pop
sahf
sub
mov
adc
jnp
lock
stos
lret
inc
dec
xor
jne
and
inc
add
popf
repnz
push
rcr
fmuls
inc
pop
mov
mov
jecxz
mov
adc
mov
push
popf
js
outsb
ljmp
fstp
xor
xor
ret
adc
bound
test
jmp
jle
in
insl
ret
test
mov
outsb
iret
js
cli
adc
adc
push
xor
out
pop
sub
pop
or
mov
sbb
adc
iret
ja
sbb
mov
mov
enter
cmpsl
mov
test
stc
lds
ficomps
leave
test
enter
mov
fmulp
ret
cld
pop
push
dec
movsl
xor
fxch
push
ss
aam
sahf
into
lock
cmpsb
in
ds
dec
stc
mov
aad
fisttpl
jge
inc
adc
test
divb
xchg
cmp
push
shlb
dec
pop
xchg
es
pop
inc
shlb
sbb
inc
aas
imulb
into
mov
incl
gs
cmp
enter
inc
mov
push
outsl
es
cmpsl
shll
aaa
in
or
pusha
xchg
or
repz
movsb
fdivrl
inc
pop
int
xchg
adc
mov
pop
cmp
jp
xchg
pop
data16
fisubrs
mov
rclb
cmp
sti
test
sub
out
ljmp
out
fldcw
push
cmp
dec
nop
dec
int
arpl
add
in
fists
stos
mov
fiadds
in
sub
insb
insl
jo
adc
adc
inc
fimull
fs
mov
mov
test
cmp
mov
repnz
rclb
lret
push
cmpsb
sbb
mov
rorl
push
xor
insl
push
mov
outsl
ret
add
sbb
lcall
icebp
push
sbb
xchg
lret
jno
je
cmp
pop
jnp
jno
fst
cmp
cltd
add
push
inc
pop
pop
xor
xchg
into
loop
scas
repz
shl
pusha
push
repnz
pop
adc
jl
add
jbe
faddl
xchg
inc
mov
out
pmulhw
dec
fsubp
dec
fildll
pusha
push
lcall
or
shrb
cwtl
xchg
enter
push
dec
rorb
pop
mov
jecxz
xchg
in
or
scas
out
dec
decb
adc
fwait
dec
outsb
scas
inc
dec
jge
outsb
add
cmp
pop
movsl
xor
shrl
and
add
int
inc
and
xlat
add
notl
fisttpll
lcall
ljmp
xor
xchg
test
mov
xchg
inc
cltd
pop
pop
shlb
mov
push
ret
subl
test
out
dec
sahf
dec
add
sbb
cmpsb
pop
cmp
jecxz
fistpll
pop
lret
jl
lret
lret
jl
adc
bound
pusha
fcompl
xor
mov
int
lahf
int
mov
stos
sub
mov
jno
mov
pop
sti
cmp
into
mov
mov
imul
sub
gs
fistpl
repnz
mov
ret
cmp
lret
aaa
adc
hlt
and
cmp
bound
xchg
popf
or
sbb
loopne
push
movsl
cmpsl
xlat
xchg
out
popa
mov
inc
je
icebp
shr
dec
enter
inc
xor
xchg
pop
dec
push
rcll
mov
aaa
idivb
fstp
mov
pop
sub
pop
mov
lea
enter
out
pop
repnz
scas
notl
dec
je
xor
or
std
inc
cltd
loopne
mov
rclb
jo
test
test
cwtl
push
inc
shll
das
jmp
fwait
out
xchg
cltd
add
xchg
cmp
retw
cmp
test
aaa
xor
or
scas
pop
movl
xor
jb
pushf
fdiv
lea
rorl
xchg
sbb
cld
shlb
test
sti
add
lret
stc
push
mov
xchg
stos
jle
xlat
ds
fldcw
jp
jno
out
scas
popf
dec
add
mov
cmovb
out
xchg
xor
flds
cmp
aam
mov
mov
popf
xchg
push
test
fwait
jl
aaa
roll
add
or
shlb
gs
outsl
sbb
add
loopne
divl
sub
inc
inc
hlt
outsl
pop
mov
out
dec
je
jnp
dec
pop
push
pop
pop
mov
das
out
cs
lret
stos
jbe
add
mov
lock
xchg
loope
pushf
push
js
andb
test
jmp
outsl
test
xor
pop
mov
cmp
movsl
or
mov
jo
xor
es
mov
cmp
in
lcall
lea
hlt
jns
adc
scas
inc
pop
sub
in
movsl
cmpsl
movsl
addr16
das
mov
jge
shl
movsb
inc
pop
ret
stos
adc
mov
pusha
into
aas
mov
push
jne
xor
cmp
and
cli
cmp
ficoms
outsb
adc
mov
movsl
subb
imul
repz
into
mov
std
scas
xlat
push
test
nop
orl
mov
shlb
jb
mov
bound
inc
movsb
or
cmpsb
rolb
sbb
push
add
and
jns
jno
sahf
add
dec
mov
pop
sub
movb
cs
dec
fs
adc
mov
and
hlt
test
add
push
cmpl
push
mov
or
adcb
add
lods
arpl
pop
mov
cmp
into
mov
and
mov
push
ret
xor
rcr
testl
fisttps
test
add
out
adc
sbb
ljmp
inc
push
or
ret
inc
iret
insb
mov
arpl
repz
loopne
les
fcmovbe
or
pop
adc
hlt
into
sub
adc
or
xor
sub
pop
jecxz
scas
inc
fsubl
outsb
adc
xchg
xlat
mov
cmp
lea
pop
sub
insl
cwtl
add
loop
ljmp
xchg
add
mov
sar
jne
sub
fnstsw
dec
mov
xchg
cmpb
std
push
repz
cmp
in
stos
xchg
add
pop
ljmp
mov
and
jp
sub
xchg
jle
mov
test
in
jne
cmp
gs
lods
rcrl
lds
mov
jno
fsubrs
shl
mov
cmp
test
in
jno
ja
xchg
fsubs
les
sbb
mov
push
mov
outsl
mov
sti
fwait
stos
lods
ja
or
dec
fmuls
cli
or
rclb
adc
xor
dec
movb
add
out
test
mov
decl
push
add
scas
outsb
add
mov
icebp
stos
dec
push
cmp
dec
pop
gs
mov
sub
lea
inc
daa
push
jge
mov
call
ljmp
loopnew
pop
inc
adc
cmp
dec
xor
rorb
and
adc
push
pushf
dec
mov
in
jno
mov
mov
loopne
fdivrl
nop
mov
repnz
scas
mov
repz
jp
icebp
mov
mov
cmp
xor
iret
push
fsubs
roll
out
sbb
mov
inc
jns
push
sub
sbb
cmp
cli
dec
push
fdiv
mov
popa
or
push
pextrw
jbe
insl
inc
mov
push
test
cmp
adc
or
mov
scas
imull
mov
push
xchg
sub
lds
mov
popa
and
sub
add
xchg
std
shlb
or
in
jl
repz
xchg
mov
arpl
xor
je
ja
mov
hlt
dec
add
mov
dec
fistpl
mov
in
jmp
fs
ss
repz
fimuls
in
lds
out
test
push
popa
data16
ret
push
fcmovu
dec
or
jecxz
outsl
fisttpl
and
dec
cmpsl
sbb
cs
xchg
test
fs
call
xchg
push
cmp
push
jno
or
stos
ja
push
cmp
dec
add
jo
mov
adc
nop
arpl
jge
mov
bound
repz
pop
mov
in
sbb
dec
pop
mov
jmp
sbb
adc
out
push
test
sub
jne
mov
popf
loop
bound
int
fs
movsl
sbb
roll
adc
fnsave
popf
add
mov
in
test
lock
addb
jae
stos
jecxz
iret
dec
stc
repz
mov
enter
icebp
outsl
cmpsb
pop
cmp
pop
jmp
repz
mov
inc
xchg
mov
js
fcmovbe
cmp
pushl
testl
jne
dec
pop
jo
xchg
mov
pop
dec
cld
mov
add
lea
imul
outsl
out
in
mov
pop
or
loope
loope
ljmp
inc
insl
xchg
cmp
adc
xchg
add
push
mov
jl
pop
js
in
mov
stos
pop
xchg
ljmp
dec
and
xchg
push
fistps
xchg
stc
lods
imul
xchg
lock
jo
lret
mul
leave
lret
pop
nop
jle
shl
or
inc
cwtl
dec
push
test
aas
mov
push
jo
sbb
mov
mov
xchg
lods
mov
movl
ljmp
and
xor
add
xorl
lret
lock
sbb
push
out
lods
fnsave
sbb
sub
xor
mov
add
enter
clc
sub
loopne
adc
test
pop
xchg
xchg
cmp
pop
xchg
mov
out
in
mov
int3
add
cmpsb
aad
pop
sbb
cmp
jge
inc
adc
pop
push
stos
addr16
ljmp
push
cmp
jle
cmpsb
pop
push
insl
and
xor
cmp
inc
add
lcall
sarl
test
xchg
jge
mov
adc
data16
iret
push
push
add
fnstsw
fdivs
sahf
dec
dec
push
das
mov
mov
sbb
in
pop
in
es
xchg
loop
jne
mov
mov
cmc
in
inc
or
dec
movzbl
inc
jge
scas
add
push
mov
pop
jl
lret
fistpll
or
hlt
mov
sahf
sti
mov
mov
fnstsw
cmp
loop
cmc
fcoml
xchg
xor
push
fs
adc
mov
push
sub
sub
je
adc
pusha
rdtsc
decl
in
xorl
out
jg
movsl
repz
push
dec
mov
pop
add
push
test
xor
popf
pop
sarl
push
popl
mov
fstpt
mulb
insl
adc
cmp
push
stos
mov
push
repz
hlt
xchg
cmp
jne
aad
adc
mov
mov
lods
or
scas
pop
and
mov
and
mov
pop
push
xchg
mov
nop
push
jmp
add
jae
dec
mov
jmp
fwait
xchg
mov
loopne
dec
insb
cli
loope
cs
mov
inc
push
cmp
popf
jns
push
add
pusha
cmc
inc
jns
adc
int3
fs
xchg
clc
mov
lret
mov
sahf
test
loop
das
sbb
or
fdivr
loop
adc
test
and
outsl
es
mov
pop
push
pop
mov
outsl
aam
sub
cmpsb
or
jl
sbb
jecxz
adc
sbbb
jle
aam
xor
fistpll
jbe
aam
and
int
test
shll
daa
xchg
cli
sbb
xor
lret
popa
sti
jo
adcl
mov
mov
sbb
dec
sub
mov
cltd
mov
sarl
dec
sarl
add
loop
jne
call
and
jnp
jmp
aaa
ljmp
andl
sbb
decl
jge
sbbl
mov
faddp
rcl
pop
cmp
jbe
mov
aad
fisubs
mov
dec
das
insb
popa
jge
sbb
or
lods
xchg
scas
sbb
xchg
ljmp
fwait
fs
cmpsb
xchg
mov
lea
xchg
jl
or
cmpsl
filds
int3
jge
lret
sbb
sbb
cs
sti
mov
pop
push
mov
push
movsl
mov
cmpsl
sbb
and
mov
in
add
pop
cmp
sahf
adc
push
std
roll
xchg
and
mov
mov
xchg
aam
sub
sbbl
shlb
loop
push
mov
cmpsb
pusha
cmp
aam
push
add
xchg
enter
data16
out
cmp
je
dec
shrl
je
scas
inc
cwtl
pop
sub
sbb
out
jg
cmp
jge
sbb
pop
sub
xchg
mov
jbe
push
push
rcr
add
ja
fisubrs
push
inc
xchg
xor
fdivrp
mov
xchg
inc
push
cmp
sbb
pop
xor
flds
nop
fstl
jb
mov
cltd
movsl
in
ja
mov
scas
sub
mov
ja
inc
mov
jnp
push
mov
add
or
jmp
mov
sub
loop
outsb
inc
mov
aaa
rcrl
data16
jo
xchg
out
dec
and
sub
fildl
into
jnp
cmpsl
push
mov
adc
or
test
adc
hlt
and
insb
mov
xchg
cmpsb
or
xlat
push
subb
popf
cmp
adc
fimuls
cmc
mov
jle
adc
mov
inc
fnstsw
push
cmc
aad
add
fstl
jbe
data16
mov
push
outsl
clc
adc
aaa
mov
das
mov
stc
mov
and
in
daa
lock
in
mov
dec
sbb
jae
mov
int
addb
ss
jno
sub
shl
les
sbb
and
inc
movsb
or
adc
add
cmp
adc
sti
push
pop
cwtl
mov
sbb
frstor
jae
cmc
push
cmpsb
cmpsl
scas
xchg
and
jg
in
mull
push
adc
leave
dec
jecxz
xor
push
jle
test
pop
pop
lcall
outsl
shrl
bound
in
push
or
stos
xchg
inc
xor
mov
fnstenv
adc
fcmovne
sbbb
sub
or
and
xchg
call
pop
xchg
pop
ds
adc
leave
fcom
jb
cmpb
push
inc
jmp
push
xor
lea
call
or
repz
xchg
mov
divb
adcl
movsb
int3
arpl
jno
sbb
std
dec
lahf
cmp
movsb
faddl
icebp
cmc
fisubrl
push
test
aad
sarb
aam
stc
mov
mov
stos
in
xchg
push
xor
clc
xor
gs
adc
push
sahf
roll
call
ds
repz
xor
ds
scas
add
sbb
mov
mov
scas
xchg
sub
lahf
fsubrl
icebp
into
jo
fistpll
rclb
mov
cs
and
out
in
push
sub
aas
jae
mov
inc
in
or
int
daa
xchg
add
mov
in
lock
daa
jne
adc
jecxz
adc
cmpsb
mov
mov
sub
xchg
inc
sti
insb
jle
push
inc
mov
inc
std
mov
subl
push
xchg
mov
and
cs
jg
in
add
xchg
push
mov
std
divb
lret
movsl
inc
out
stos
adc
stos
aam
shrb
popf
mov
xchg
pop
outsl
imul
pushf
fstpl
cmp
fstpt
notb
add
mov
mov
or
and
jnp
loopne
std
inc
daa
nop
cli
pop
push
or
shr
push
mov
pusha
mov
jo
xor
imul
mov
lcall
push
sub
or
adc
imul
adcl
sbb
pop
inc
pop
pop
popf
push
lock
and
filds
iret
pop
dec
enter
shlb
pop
jge
sbbb
dec
es
mov
ficomps
xchg
xor
mov
gs
pop
inc
dec
mov
and
add
or
adc
jo
push
lods
stc
xchg
int
xlat
and
fldl
stc
les
mov
sub
sbb
out
mov
imul
xor
push
into
pop
mov
sahf
pop
outsl
and
inc
and
outsb
out
push
pop
ret
hlt
sub
stos
pushf
jp
pusha
sub
jo
sti
clts
das
dec
or
push
test
movsb
dec
cmpsl
pop
loope
push
dec
js
sub
mov
mov
mov
hlt
add
or
cmpsb
push
in
cmc
push
xor
jg
das
aad
push
dec
or
push
ret
lahf
ss
rclb
or
push
imul
ja
push
push
jne
xchg
add
fldcw
jmp
sub
xlat
rcrb
jne
mov
dec
adc
mov
mov
mov
dec
je
stos
xor
lcall
adc
push
push
mov
shlb
pop
sbb
stc
dec
push
std
data16
mov
inc
xchg
push
js
xor
inc
sbb
dec
and
jp
add
push
sbb
xor
data16
dec
movsl
popf
xchg
fstps
imul
xchg
pop
xchg
in
xor
adc
push
mov
xchg
cli
sahf
pop
dec
push
lods
xchg
mov
outsl
dec
jae
mov
test
push
or
jo
ficompl
sbb
mov
aas
call
or
fiadds
fisubl
loopne
jge
ret
push
or
mov
stc
sbb
xchg
fildl
xchg
cltd
dec
inc
mov
jg
push
xor
cmp
xor
sub
outsl
xorl
push
mov
mov
fwait
cltd
sub
mov
cmp
imul
mov
mov
jno
pushf
jp
adc
repz
sub
inc
pusha
xchg
adc
outsl
push
cmpsb
pop
out
out
mov
test
inc
mov
inc
and
int
add
jl
out
lea
and
mov
inc
and
sbb
fcmovnbe
mov
lret
cltd
inc
xor
and
test
je
or
scas
stos
adc
jl
inc
lea
sti
je
out
in
or
and
pop
inc
into
push
jp
lods
dec
or
sbb
inc
call
movsb
outsb
loope
fcomp
bound
mov
jmp
imul
clc
clc
sarb
mov
fimuls
cmp
jmp
xor
and
popf
xchg
lret
ss
lods
insb
aad
mov
jmp
push
inc
dec
cmp
stos
add
es
and
lods
xor
fidivrl
sbb
xchg
lea
xchg
push
sub
add
jge
cwtl
adc
sarb
lock
iret
shrb
dec
or
dec
jmp
pop
mov
xchg
and
lret
push
add
lcall
out
aam
mov
or
mov
call
fiaddl
mov
sbb
or
lret
pop
xchg
inc
fadds
dec
add
rcl
mov
cmp
inc
dec
add
mov
aam
adc
pop
adc
out
stc
push
in
out
add
iret
iret
out
ljmp
out
pop
leave
popf
add
aaa
cld
jecxz
rol
sub
mov
testl
test
xlat
mov
sub
shrd
in
adc
sbb
add
jecxz
outsl
dec
shl
xchg
stos
rol
lods
and
jp
sbb
fisubrs
rcll
data16
mov
lahf
dec
notb
shll
les
cmp
lcall
add
movb
into
repz
fcoms
pop
mov
sbb
xor
push
sbb
xor
push
pop
sbb
xor
mov
stc
sti
test
jb
jns
scas
ret
testb
loopne
sbb
push
inc
lods
add
adc
cltd
inc
jle
push
dec
xchg
fsubrs
xor
jl
cmp
mov
imul
xchg
test
arpl
add
and
jmp
adc
inc
xor
arpl
incl
jecxz
in
sbb
jmp
lods
xchg
inc
aaa
jns
add
nop
pop
push
repnz
jnp
or
xchg
or
xor
mov
or
xor
push
jbe
insl
fldl
sbb
inc
xor
int
stos
fnstenv
cmp
jo
or
push
jnp
andnps
mov
cmp
push
mov
pop
xchg
int
sub
movsl
cmpsl
sub
or
and
sub
dec
mov
sub
jle
xchg
ret
lds
ss
lret
inc
inc
push
and
jp
repnz
out
rorl
movsb
or
outsl
sub
xchg
xor
push
and
mov
jb
mov
lods
fistpl
das
jle
cld
leave
scas
icebp
ret
jmp
and
jnp
jmp
in
or
push
mov
test
lock
jge
dec
xlat
mov
int
es
cld
xchg
daa
cltd
sub
mov
push
movsl
aam
or
dec
mov
dec
cwtl
test
xchg
orb
cwtl
aad
inc
lock
daa
lahf
out
out
adc
leave
adc
out
push
adc
adc
movsl
or
cld
fwait
sbb
popf
push
inc
fstps
mov
call
dec
stc
push
aaa
push
jge
and
icebp
or
adc
out
push
popf
mov
nop
push
hlt
int
or
adc
aas
cld
add
inc
pusha
pop
icebp
dec
pushf
jge
push
jno
cmp
jg
mov
xor
je
pop
fdivs
daa
enter
pop
jbe
loope
jmp
mov
aam
cmc
xchg
push
dec
xor
pop
ljmp
sti
fistpl
pop
adc
pop
inc
fldcw
jmp
adc
mov
inc
icebp
leave
pop
test
fdivrs
movsl
notb
lret
dec
xor
pop
push
push
stos
rorl
add
jo
jae
daa
lock
cmpsb
jo
mov
sbb
insb
loopne
rorl
pop
mov
push
cmpsl
mov
mov
std
xor
push
xchg
cld
sbb
das
sbb
inc
decb
push
cld
cmp
cmp
mov
mov
lahf
cmp
loope
ljmp
sub
mov
cwtl
out
inc
out
xchg
mov
sbb
pop
sub
icebp
in
lods
and
mov
cmp
cwtl
adc
outsl
es
les
mov
movsl
fnstenv
and
out
dec
mov
bound
rol
outsl
mov
jb
test
mov
aad
add
cmp
cld
out
inc
adc
int
stos
ret
ret
lret
pop
and
inc
fcmovu
inc
sbb
clc
sbb
ss
adc
pop
xor
daa
jge
lds
repnz
adc
add
sbb
loop
repz
inc
pop
push
xchg
sub
or
jo
sbb
aam
ds
mov
out
adc
mov
outsb
and
xchg
and
into
push
fisttpll
mov
adc
cmp
test
inc
jae
test
sbb
dec
mov
cmp
imul
pop
sbb
fimull
inc
addl
call
dec
inc
rorl
loop
fmuls
adc
xor
adc
inc
iret
dec
mov
test
gs
push
fmulp
insb
repz
insb
pop
cmp
dec
pusha
push
aam
fiadds
xor
dec
add
sti
mov
nop
push
or
xchg
sub
sahf
cld
ds
and
adc
fildl
xor
cld
or
outsb
insb
mov
lcall
in
add
xor
dec
test
testb
or
sub
or
jno
add
incl
cmpsb
xor
fisubs
mov
or
clc
xorb
bound
lcall
mov
mov
sbb
pop
cs
fmuls
add
fmull
dec
lcall
test
and
or
mov
pop
sub
add
gs
jl
int3
push
fstl
ficoms
mov
cmc
repnz
and
cs
mov
popa
ljmp
sahf
inc
or
mov
aam
cmpsb
gs
in
idivb
sbb
inc
mov
test
cmpsl
aas
in
push
notb
inc
lret
test
lret
mulb
cmp
aas
cld
into
leave
ja
int3
mov
movsl
lret
nop
sarb
sub
mov
sti
lea
lock
push
aad
pop
ljmp
dec
mov
das
mov
cs
js
int3
cmp
sub
inc
push
adc
inc
out
mov
daa
mov
cmp
push
gs
insl
and
jns
mov
in
hlt
icebp
sub
sbb
test
mov
out
pop
jbe
add
cmc
sub
idivl
in
js
mov
call
xchg
subb
mov
jmp
mov
xlat
pop
rorb
sbb
xchg
pop
inc
xchg
mov
imul
cmp
ret
lcall
sub
pop
mov
sub
rcrb
dec
iret
adc
lea
push
jecxz
dec
sub
sub
cmp
push
mov
popf
arpl
sub
stos
cmc
and
sbb
bound
dec
mov
aaa
out
ret
jge
xchg
lahf
ljmp
sarb
add
int3
dec
orl
sub
mov
xchg
loope
sbb
inc
or
dec
mov
mov
leave
inc
jp
xchg
pop
xchg
cmpsl
xor
aas
mov
iret
imul
inc
ret
inc
int3
push
mov
sub
imul
lcall
add
push
jns
dec
fucomip
mov
add
inc
sub
popa
loope
rcrb
scas
das
sarb
sbb
js
jb
push
pop
sbb
xchg
mov
xchg
mov
mov
sub
addl
xor
or
pop
dec
pop
pop
mov
fdivl
mov
mov
lock
scas
xor
xchg
jne
jns
cmp
cmp
pop
bndstx
vpandn
pushf
pop
pusha
fcmovnb
cltd
mov
cmpsb
stos
jbe
sarb
fs
shl
jbe
loope
cmc
push
les
sub
sbb
leave
and
mov
jo
repz
cli
and
inc
movsl
pop
lds
in
int3
and
and
iret
xorb
mov
dec
ja
cmp
arpl
jmp
subb
mov
jbe
or
push
bound
jns
das
sbb
outsl
aas
mov
out
pusha
jle
icebp
inc
mov
pop
pusha
movsl
lret
nop
ljmp
sbb
popa
mov
mov
stos
je
sub
into
pop
ss
in
xchg
pop
xchg
bnd
dec
hlt
ds
mov
mov
in
mov
in
inc
je
out
xchg
scas
js
outsb
inc
xor
and
jp
imul
clc
and
mov
loope
adc
insl
test
scas
or
xorl
mov
dec
ficoml
decb
test
mov
mov
inc
out
testl
pusha
lcall
test
lods
add
out
cmpsl
mov
aad
lcall
xor
leave
xchg
in
pop
mov
sub
pushf
loope
insb
ret
mov
addr16
fiaddl
loopne
mov
cmp
mov
or
mov
xor
pop
mov
xchg
pop
lahf
nop
lret
lods
sub
fs
mov
clc
mov
repz
fisubs
not
ss
shlb
rcr
push
out
fisubs
inc
xchg
add
xchg
orl
orb
push
stc
leave
aad
stos
mov
iret
or
add
cli
inc
pop
daa
fcomip
adc
add
cmpsb
faddp
push
inc
dec
es
lds
push
mov
lahf
fmuls
test
mov
pop
pop
gs
mov
add
jl
mov
dec
inc
les
mov
popf
fnsave
in
adc
ret
add
rcr
mov
test
hlt
mov
lahf
xor
and
xchg
jle
push
adc
enter
dec
mov
mov
pop
cmpsl
mov
push
int
lahf
jae
fnsave
in
jge
xor
leave
dec
movsb
iret
movsl
out
incl
stc
pop
inc
mov
out
jb
or
push
push
pop
out
je
pop
arpl
adc
inc
fsqrt
mov
pop
xchg
xchg
push
inc
and
and
or
mov
sbb
insl
lea
push
push
lret
daa
icebp
data16
pop
mov
xor
scas
mov
jmp
fwait
add
mov
or
pop
ja
sub
test
jg
in
fcoms
push
fsubl
jb
dec
imul
mov
and
xor
ror
mov
inc
adc
mov
cli
dec
sti
test
scas
dec
push
push
mov
stos
sub
aaa
stos
sbb
mov
pop
mov
mov
push
jge
or
push
jg
sub
in
out
add
or
ja
clc
sti
bswap
aad
push
pop
adc
ror
in
push
and
aam
imul
es
jbe
inc
add
add
jmp
ljmp
imul
fildl
pop
pushf
data16
mov
pop
push
addr16
hlt
ret
jmp
lea
std
movb
add
and
lcall
stos
icebp
stos
mov
cmpsb
in
es
bound
mov
test
andb
or
jp
xor
jmp
in
iret
neg
lea
xor
in
pminsw
add
adc
test
arpl
mov
insb
or
mul
mov
and
pushf
sbb
sub
dec
dec
inc
dec
les
stos
movsl
ret
test
dec
xchg
dec
jl
sar
adc
pop
inc
push
lcall
cs
xlat
cmp
push
inc
loope
mov
mov
ss
jbe
cmpsl
lds
or
dec
addr16
fmul
imul
dec
ss
inc
ss
and
movsb
add
test
loope
adc
fidivrs
xchg
add
hlt
pusha
mov
int3
add
sbb
or
jge
test
jge
sbb
mov
mov
push
mov
fwait
nop
xor
leave
lea
sub
jge
nop
subl
mov
mov
mov
jns
push
lds
call
xchg
imul
add
fcomi
jbe
adc
mov
push
sbb
dec
mov
sub
inc
push
lock
mov
inc
test
in
sti
imul
pop
rcrl
pusha
add
dec
jns
cmc
push
cmp
into
xchg
stos
das
into
push
dec
lcall
arpl
lods
dec
mov
pand
mov
and
xorl
push
addl
push
mov
xchg
mov
or
lret
cmpsb
xchg
sahf
scas
lcall
fwait
add
xlat
lahf
and
push
in
subb
int3
cmp
aas
inc
jp
dec
add
adc
or
cmp
and
cmp
inc
and
daa
pop
dec
sub
sub
jg
lods
icebp
vcmpsd
shrb
xchg
jbe
xchg
sub
inc
shl
int3
xor
iret
sbb
notl
rolb
shlb
iret
lcallw
sub
mov
jge
pop
xlat
hlt
repz
and
fsubs
insb
pop
ja
jns
push
add
jp
ja
mov
test
push
xor
xor
mov
int3
push
lods
pop
mov
fimuls
xor
notl
addl
scas
inc
sahf
add
push
jle
cmpsl
push
mov
inc
mov
xchg
stos
push
mov
mov
jbe
xchg
dec
jnp
mov
ss
jne
fmull
ds
fdiv
or
out
push
add
fwait
rorb
and
lds
push
cmc
in
mov
imul
sub
jb
dec
dec
xchg
push
xchg
data16
pusha
pop
rcr
push
inc
mov
out
pop
stos
data16
cld
push
or
push
shll
cmp
stc
dec
outsb
int3
push
sbb
inc
repz
imul
xor
cltd
sarl
sbb
out
shlb
cmc
or
pop
or
pop
dec
js
in
rclb
dec
out
push
or
arpl
xor
test
mov
lahf
xor
out
rolb
xchg
cwtl
out
imul
subb
mov
cmp
mov
push
inc
stc
cmp
in
movsl
xor
int3
pop
cmp
dec
adc
dec
mov
test
mov
in
scas
cmp
xchg
push
or
imul
out
mov
loope
xchg
rolb
cld
add
jge
xchg
mov
pop
dec
push
lcall
rcll
into
rclb
dec
pop
push
jge
xchg
sub
stos
rorb
pmullw
jg
sub
ficoms
int3
or
imul
xor
lods
dec
test
call
pop
aam
in
out
std
dec
mov
mov
xchg
jecxz
movsb
inc
jp
xchg
dec
xlat
outsb
test
mul
jbe
mov
orb
roll
cmc
jo
mov
dec
cmp
inc
jnp
pop
push
dec
insl
fs
adc
sbb
sbb
cmpsl
mov
imul
lds
in
mov
lock
lock
in
jne
cmp
mov
mov
lods
jbe
movsl
mov
daa
fcompl
xchg
mov
inc
stos
jmp
jo
xchg
lahf
or
aaa
movsl
cmc
mov
cmp
pop
clc
push
push
addr16
add
mov
pop
mov
inc
subb
push
cmpsl
pushf
sahf
rclb
imul
call
pop
data16
mov
push
out
test
sbb
xchg
pop
mov
pop
inc
dec
xchg
incb
lret
cmp
sbb
jmp
jp
cmp
jmp
jbe
jmp
xchg
es
decb
flds
xlat
cmpsl
xchg
clc
pop
adc
arpl
sub
out
or
mov
fwait
jae
test
cmp
inc
aas
adc
test
aam
in
sub
pop
mov
add
xchg
xchg
push
negl
cwtl
cmp
shlb
push
jb
xor
aas
mov
sub
adc
dec
leave
jbe
pusha
jg
inc
inc
adc
jno
push
and
arpl
stc
pop
pop
pop
mov
push
xchg
in
xorl
xchg
loope
jbe
fisttpll
jno
repz
fwait
or
jns
lock
mov
inc
sarb
shlb
leave
mov
out
pop
and
sahf
adc
xchg
outsl
jns
cltd
imul
adc
in
xor
loop
vpunpckhbw
jle
xchg
sti
sahf
aad
cld
test
loope
sti
inc
mov
cmpl
sbbl
add
call
std
push
or
setne
pop
aad
scas
push
pop
sub
ljmp
adc
push
mov
lcall
sbb
sub
je
jmp
lahf
loop
mov
rcr
cwtl
push
add
and
add
add
mov
pusha
xor
enter
dec
add
push
cmp
enter
call
cmp
dec
iret
outsl
mov
xchg
cmpsb
jmp
and
adc
sti
push
mov
mov
sub
iret
arpl
dec
cmp
jecxz,pt
and
scas
lahf
test
mov
adc
mov
cmp
inc
addr16
out
dec
jne
and
adc
pop
and
mov
dec
jle
in
push
cmpsb
inc
cmpsb
and
int
outsb
stos
mov
add
test
push
cwtl
and
mov
iret
mov
add
mov
pop
xchg
mov
add
hlt
fildll
pop
xchg
push
mov
outsl
pop
subb
push
fwait
pop
clc
icebp
push
pop
clc
push
scas
aad
inc
pop
dec
push
imul
cli
add
add
daa
mov
inc
sbb
and
cmp
imul
stos
out
sbb
loopne
sahf
dec
outsb
inc
cmc
mov
sbb
sub
faddl
xchg
mov
mov
sbb
ret
mov
adc
add
jg
xlat
push
sub
sbb
mov
jne
lods
fidivrs
cmpsb
stc
add
out
jle
push
pushf
sub
mov
out
rol
dec
lods
movsb
cmpsl
mov
mov
jl
push
bound
dec
mov
test
mov
inc
insl
add
xchg
icebp
xchg
adc
jne
outsb
add
jg
cmp
push
xchg
cmp
push
dec
push
mov
scas
adc
pusha
mov
bnd
sahf
dec
bound
lcall
lea
add
lock
adcl
mov
fistl
or
fcmovnb
cwtl
or
pop
rol
mov
push
xchg
les
sub
rcl
sti
jecxz
mov
test
hlt
inc
leave
jecxz
mov
lock
push
push
test
xlat
out
dec
mov
out
push
repnz
sbb
mov
divl
lea
scas
scas
jle
out
sbb
mov
out
jae
mov
dec
mov
inc
ret
sbb
dec
add
aam
ja
pop
popa
xchg
pop
ss
ja
add
shll
scas
scas
movsl
loop
inc
fildl
push
pop
aas
es
xchg
cld
rol
push
mov
fs
test
imull
add
movsl
mov
mov
and
pop
jns
ljmp
pop
repz
sub
icebp
hlt
ret
sti
add
daa
push
inc
xor
ss
dec
pop
cltd
xchg
push
data16
or
int3
dec
mov
scas
jns
adc
mov
mov
adc
fsub
aaa
xor
popf
mov
jge
lods
testb
icebp
movb
pop
or
sti
insl
out
jmp
sti
pusha
test
xchg
rcll
dec
fwait
daa
ret
dec
dec
add
pop
and
in
xor
dec
sub
fdecstp
loope
stos
fwait
xor
dec
jae
push
or
fistl
arpl
and
push
cmpsl
xchg
pop
icebp
fsts
out
pop
sub
push
pop
mov
adc
xchg
cltd
cwtl
inc
push
mov
insl
jns
ja
das
das
push
in
stc
push
inc
in
dec
mov
popf
ja
and
test
cmpsl
int3
or
cmpsb
sbb
cmc
aam
xor
and
cmp
pop
js
lret
mov
stos
decl
pop
subl
pop
jns
daa
cltd
jecxz
mov
and
test
outsl
sarb
add
stos
sahf
fidivs
adc
fisubs
push
fs
cld
mov
aaa
les
lea
divl
cmpsl
stos
xchg
add
and
pop
rcrb
sub
loop
and
cmp
push
gs
mov
mov
adc
rolb
movsb
and
mov
outsb
dec
call
dec
lods
add
in
sub
mov
xor
lret
xlat
mov
xchg
arpl
fstpl
mov
repz
push
in
xchg
and
push
aad
nop
fwait
jmp
out
leave
jp
mov
push
jb
sbb
in
add
loopne
cmp
out
test
stc
je
mul
sub
sub
push
xchg
pop
int
jmp
out
aam
xor
fmull
inc
pop
adc
ret
push
aaa
push
adc
jmp
loopne
loop
mov
out
idivb
popf
sbb
ljmp
xor
pop
push
sbb
mov
mov
lods
adc
inc
scas
push
sub
or
lock
lret
sbb
enter
addb
out
out
ror
call
xor
sahf
push
pushf
lcall
and
iret
lock
aad
mov
arpl
jnp
call
inc
pop
mov
mov
xchg
jb
ljmp
ret
out
notb
xor
xor
pop
rorb
dec
je
cmpl
cmc
cltd
imul
sbb
push
loop
inc
movsl
xor
mov
mov
stos
cmpsb
fisttpll
cmpsb
and
lods
adcl
scas
icebp
adc
jecxz
outsb
hlt
xchg
mov
xchg
jmp
jb
jne
mov
jne
andl
jnp
jle
out
cmp
clc
and
fldl
cmp
aas
cwtl
hlt
or
fabs
cmp
adc
jo
popf
lret
repz
in
xchg
add
pop
push
dec
sarb
jg
addr16
out
imul
lock
rol
jmp
aas
lods
clc
mov
test
les
aas
loop
nop
test
shlb
das
xchg
in
ret
dec
das
mov
ss
out
cmp
push
insb
or
xchg
adc
in
cmpsb
pop
dec
pop
faddl
aad
and
xor
mov
das
push
xor
shll
adc
dec
sub
jp
inc
jge
jne
pop
cmp
addr16
arpl
fcmovnbe
adc
jecxz
mov
ljmp
sub
add
enter
push
push
sub
lods
cld
and
and
jno
les
jmp
insl
pop
xchg
pop
xor
in
mov
inc
in
and
loop
push
adc
add
xchg
mov
sub
les
aad
sar
sub
or
mov
adc
xor
call
and
sbb
lea
sub
out
popa
sbb
inc
pop
sbbb
add
add
push
int
in
mov
push
sbb
push
sub
jns
out
stos
sbb
psubw
mov
iret
outsb
test
fnstenv
ror
pop
sbb
int
imul
mov
dec
lahf
and
push
xchg
out
test
pop
sbb
mov
iret
or
shrb
mov
in
sbb
jae
sbb
xchg
dec
test
push
dec
bound
dec
add
push
popa
imul
inc
std
stc
shrb
stos
adc
sub
inc
inc
pop
pushf
sbbb
inc
push
dec
or
jnp
or
jne
daa
pop
cltd
ffree
inc
push
lret
sub
icebp
mov
inc
fisttpll
jne
addr16
xlat
pop
lock
mov
outsl
jg
rcl
push
sub
stos
push
sub
sti
cmp
js
jo
sbb
push
mov
inc
xchg
out
xchg
subl
adc
test
out
pop
jnp
cmp
fistpll
lods
int
out
cmp
jmp
loopne
fsub
pushf
cli
mov
add
imul
nop
stc
add
aam
dec
xchg
and
xor
fs
out
loope
test
pop
add
pop
inc
leave
sbb
out
sub
iret
push
das
mulps
mov
lret
push
adc
div
jecxz
push
fdivrs
sbb
daa
push
movsb
jno
mov
pop
aaa
notb
faddl
sarl
xchg
push
mov
mov
mov
mov
movsl
enter
sbb
inc
pop
fsubr
in
fistpl
shl
shlb
lea
gs
mov
sti
loop
lret
pop
test
pop
and
push
cmp
shl
xorl
icebp
idiv
cmp
and
daa
mov
ret
test
sub
xchg
mov
in
lods
lahf
mov
testb
pop
jl
es
add
in
clc
outsl
mov
pop
mov
sbb
das
test
adc
adc
mov
movsb
flds
int3
mov
and
es
test
mov
and
out
cmp
loop
and
fcoml
out
aaa
xchg
ret
push
hlt
mov
fidivl
les
test
fldt
ret
fdivrs
ja
inc
adc
out
sub
xor
jg
adc
loope
mov
push
orl
test
jb
shrb
mov
push
lahf
sub
or
outsb
push
add
pop
push
sarb
in
faddl
mov
push
sbb
pop
pop
sbb
enter
mov
cmp
cmp
enter
dec
push
int3
int3
pushf
sub
add
xchg
jae
das
ja
mov
sbb
int3
lock
stos
or
sbb
xchg
pop
dec
dec
icebp
icebp
ljmp
xor
mov
repz
sbb
adc
lock
sbb
or
iret
outsb
outsb
iret
jns
xchg
cmp
mov
mov
js
popa
jbe
adc
mov
add
out
adc
ljmp
push
addb
adc
out
cli
cmp
add
jo
lret
add
testb
jp
fiaddl
lods
aam
pop
rclb
cld
mov
and
bnd
mov
lods
arpl
test
cmp
mov
lret
xor
insb
test
out
andl
sbb
xchg
cwtl
sub
mov
ret
or
sahf
repnz
sbb
mov
push
das
stc
mov
and
pop
fldlg2
mov
in
and
dec
mov
das
lods
inc
sarl
jo
jo
pop
les
in
data16
in
jge
iret
mov
aad
xor
push
jmp
inc
test
sub
or
out
out
imul
add
adc
xchg
sub
push
ret
lock
mov
xor
pop
loope
mov
mov
inc
repnz
inc
push
jecxz
sbb
aad
or
inc
pop
js
cltd
lret
pop
rorl
int
ja
sub
fadds
lcall
cli
jge
jo
and
lahf
gs
movnti
mov
imul
xor
sub
repnz
or
popf
cltd
xlat
daa
loop
shlb
int
daa
mov
repnz
insl
jno
icebp
mov
sti
shlb
das
sahf
subb
jp
push
xchg
shl
add
jmp
xor
fnstsw
xchg
mov
mov
arpl
insb
fwait
ljmp
outsb
popa
jp
adc
inc
or
inc
pop
mov
mov
lods
mov
loop
cli
bt
aaa
insl
add
cmc
inc
and
xor
jae
pop
lcall
leave
and
iret
shl
mov
in
rep
movsl
test
push
ja
jns
jo
cmp
add
sbb
test
lret
dec
pop
jle
adc
hlt
push
mov
add
ss
mov
lock
sub
pop
xor
scas
les
adc
jg
sti
mov
cs
add
into
mov
fists
insl
xchg
inc
push
pusha
pop
ficomps
adc
in
ds
pop
or
lcall
add
mov
adc
lods
lahf
xchg
mov
adc
sub
lcall
movsb
hlt
shrb
stc
ds
mov
popa
pushf
push
pop
pusha
or
ror
or
repz
js
mov
adc
dec
pop
mov
popf
or
cmp
jne
orb
and
jle
dec
mov
dec
out
fs
push
dec
je
or
les
add
and
mov
jne
gs
cwtl
or
aaa
jmp
mov
pop
mov
in
into
scas
sub
test
mov
jno
mov
xlat
movsl
inc
sub
mov
mov
push
fcmovnb
add
push
fsts
mov
daa
pop
nop
adc
je
dec
adc
leave
sbb
rorl
cli
mov
push
pop
popa
outsb
jbe
jg
iret
mov
push
mov
sahf
dec
or
rolb
rcr
shlb
jge
xlat
test
in
sbb
pop
push
bound
test
shrl
inc
lock
and
push
xchg
xchg
pop
pop
inc
repnz
xlat
xor
add
mov
scas
insl
pop
les
mov
pop
dec
xchg
add
cmp
jno
xor
pop
inc
sub
fstps
stc
add
sbb
icebp
add
push
jb
movsb
jp
bound
pop
and
adc
out
mov
div
or
mov
dec
mov
repz
lea
shll
in
fisttpll
loopne
scas
out
mov
mov
and
cld
mov
mov
pop
adc
xchg
push
dec
pusha
pusha
loope
loope
mov
cmp
jo
sbb
mov
icebp
mov
outsb
mov
cmp
fmull
out
icebp
lods
mov
xchg
int
dec
push
jg
std
xlat
and
and
mov
mov
lds
test
das
fnstenv
adc
sub
sbb
inc
mov
or
leave
dec
jge,pt
je
scas
andb
mov
and
test
push
cmp
repnz
mull
xor
cmp
aam
shr
cmp
or
xor
enter
inc
jge
popa
vxorps
js
jae
cwtl
les
leave
jne
jl
cmp
inc
jmp
jl
cmpsl
out
and
pop
ret
lret
cmp
lret
ds
mov
clc
dec
mov
xchg
push
in
arpl
out
lods
mov
inc
push
mov
data16
gs
rcl
rcrb
mov
mov
jg
pop
jbe
outsl
dec
dec
adc
lods
inc
stc
test
inc
mov
andb
iret
xor
push
mov
xchg
fucomi
and
adc
adc
repnz
aad
gs
mov
lahf
mov
ret
xor
dec
mov
lret
in
jle
sbb
mov
cmp
xchg
xor
push
and
dec
shl
addr16
inc
mov
shrl
iret
pop
fstpt
mov
cmpsb
scas
ss
adc
std
add
fadds
int3
lea
fdivs
xchg
cmp
ret
nop
cli
and
fnsave
insl
int
lods
jge
mov
data16
outsb
notl
inc
lds
cwtl
inc
lahf
testb
xchg
push
sbb
cmp
divb
cmp
mov
mov
xchg
dec
call
dec
xorb
mov
lea
jno
jp
in
cmp
rcll
add
hlt
mov
adc
in
add
mov
stos
in
xchg
jnp
and
lahf
mov
loop
outsb
add
hlt
inc
rorl
push
pop
mov
inc
imul
lcall
cmpb
mov
imul
dec
and
insl
push
je
push
dec
xchg
jmp
cmp
or
lahf
pop
sbb
movb
leave
mov
repz
sub
popf
jecxz
movsl
push
and
inc
dec
lods
jecxz
mov
test
sbb
pop
into
sbb
cmp
mov
sub
add
fnsave
test
mov
cmp
add
mov
out
clc
jl
sub
test
lcall
pop
mov
test
sub
std
xchg
mov
enter
jl
cmp
jbe
mov
mov
jb
mov
lock
xor
fsubrl
and
mov
push
or
mov
mov
mov
xor
fsubl
daa
outsb
shl
ja
pop
jl
out
movsb
cmpsb
xor
cmpsl
test
dec
movsb
cmp
push
or
sub
cmp
lret
lahf
mov
aam
adc
add
or
mov
clc
out
xor
sbb
ja
rorb
xor
adc
lea
outsl
jge
mov
in
test
aaa
aaa
add
insb
cmp
mov
insl
pop
or
hlt
aas
or
popa
popa
divb
pop
je
or
add
push
jo
jg
inc
mov
cwtl
xchg
cmp
gs
cmp
add
xchg
xor
sub
lret
fidivl
mov
push
inc
adc
jnp
ljmp
dec
cmpb
mov
test
imul
lcall
push
test
and
mov
xchg
dec
test
or
pusha
adc
xchg
xchg
sbb
cmp
cmpsl
outsb
push
mov
in
fs
stos
push
inc
push
push
das
pushf
cmp
stc
jns
xchg
dec
adc
les
mov
sbb
lock
mov
xor
adc
jno
or
repnz
inc
jb
mov
inc
fcmovu
add
test
inc
xchg
mov
hlt
pop
lock
xor
jbe
andb
or
enter
jns
test
loop
dec
push
cwtl
and
mov
dec
xchg
mov
push
seta
add
lret
insl
fcmovnbe
daa
iret
repnz
or
sti
add
and
lret
push
dec
pop
push
addr16
loop
test
inc
popa
scas
out
std
and
rclb
aas
push
mov
dec
pop
lock
cmc
jecxz
xchg
test
sti
xor
int
or
mul
add
insl
ret
mov
mov
fs
mov
iret
xchg
inc
xchg
xchg
test
filds
lcall
out
xor
stos
repnz
inc
lock
mov
icebp
jno
adc
int3
adc
std
inc
lcall
and
jbe
dec
or
faddp
adc
mov
call
or
adc
push
push
pop
scas
movsl
add
and
cmp
out
rolb
lahf
xor
je
lock
daa
pop
movsl
scas
imul
lock
pop
rcll
mov
jmp
imul
mov
xchg
icebp
fildl
mov
fdivl
dec
out
inc
mov
xchg
icebp
mov
sub
ja
push
sbb
push
nop
add
sarb
test
inc
sbb
xchg
adc
mov
sbb
ds
lret
bound
and
stc
ret
xor
repz
or
test
out
cltd
ja
adc
jae
into
cmp
jbe
push
cmpsl
inc
xlat
inc
xor
dec
ret
sub
dec
mov
push
xchg
xor
sti
or
push
adc
xchg
lret
adc
mov
jecxz
in
adc
repz
ret
lret
ror
and
and
add
push
adc
mov
xchg
ja
test
jp
add
repnz
and
sub
aaa
sbbb
pop
mov
mov
jl
xchg
and
cwtl
pop
pusha
aad
push
inc
ror
and
xchg
repnz
mov
or
push
inc
or
lds
in
inc
xchg
mov
jne
ja
adc
outsb
xor
pop
fisubs
fldt
orb
pop
iret
adc
push
or
fnstenv
in
imul
inc
test
push
adc
push
push
adcb
rolb
in
jb
add
mov
and
bound
cli
lcall
sub
jno
adc
push
out
roll
jg
xchg
aam
adc
imul
ds
js
xchg
ds
adc
jmp
sahf
pop
mov
jns
jge
iret
fs
mov
lahf
mov
movsb
cmp
cmpsb
inc
pop
adc
lcall
push
lret
xor
adc
dec
or
pop
fcoml
mov
in
cmpsb
mov
hlt
sbb
and
mov
cmc
cmpl
mov
mov
div
sbb
pop
inc
inc
enter
popa
and
xchg
jno
jbe
int
adc
sbb
mov
movsb
das
jl
cmp
imul
mov
jo
rorb
push
setl
xchg
ret
fdivs
dec
xor
xor
aad
fistpl
inc
cmp
jmp
pushf
mov
iret
add
mov
adc
out
shll
mov
mov
xchg
testl
js
add
scas
adc
cmpsb
dec
xchg
fcom
sub
data16
jge,pn
cmp
in
rcl
fsincos
decb
cli
cli
or
cs
lock
xor
mov
mov
mov
cmp
jo
adc
cli
popa
jp
mov
fsubs
test
pop
adc
vmovupd
mov
mov
dec
pop
ljmp
outsl
xor
xchg
iret
call
lea
jnp
in
stos
xor
push
mov
push
dec
push
hlt
stc
fldl
out
pop
dec
mov
lret
loopne
fldenv
push
jle
pop
push
std
pop
mov
enter
mov
adc
stc
test
jecxz
in
daa
sbb
and
sbb
jecxz
bound
jmp
sub
sti
ljmp
add
orl
loopne
test
cld
nop
and
lahf
hlt
mov
mov
into
fisttps
push
xorb
or
cmpsl
stos
mov
leave
negl
pop
out
repz
outsl
cli
rolb
aam
les
mov
aad
push
push
popf
add
push
negb
inc
xor
xor
in
dec
rolb
pop
in
mov
push
inc
pop
push
inc
ljmp
cmp
mov
jbe
mov
mov
aaa
xchg
in
pop
aam
or
jmp
pop
fdivs
lret
std
gs
scas
mov
and
push
incb
inc
xchg
popa
add
insl
xor
pop
imul
pushf
adc
data16
shr
mov
or
movnti
sbb
adc
adc
inc
or
jnp
fcmove
fists
xor
push
push
xchg
pop
orb
sbb
enter
es
les
pop
movsl
inc
ret
push
cmp
dec
arpl
rcll
inc
or
jmp
loop
test
cli
xor
ds
lds
pushf
push
cmp
mov
iret
mov
rol
and
rolb
mov
stos
dec
cmpsl
pop
xorl
cli
pop
or
cmp
stos
aas
pop
push
dec
mov
mov
hlt
mov
cmp
ljmp
leave
cltd
push
jge
push
pop
lret
scas
push
adc
jns
mov
inc
push
cli
push
jmp
and
sub
pop
or
push
fmuls
mov
mov
or
cmp
and
test
lods
pop
stos
pop
mov
ret
pop
rcrb
lock
inc
adc
popa
fcompl
insl
in
sbb
cmpsl
mov
pop
sbbl
arpl
jns
cmp
jo
insl
jl
outsl
xchg
xchg
push
xor
jbe
mov
xchg
or
dec
faddp
pop
lods
popf
ss
pop
mov
xor
add
inc
push
mov
sahf
and
push
mov
pushf
std
ja
xlat
xchg
movsl
mov
ds
dec
lea
popf
push
fidivrs
test
mov
ja
int
dec
dec
mov
inc
and
ss
jb
push
pop
push
jle
stc
aas
test
xchg
stc
stos
aas
rcll
scas
inc
xchg
outsb
mov
pushf
pushf
xor
push
mov
mov
mov
or
jne
sub
push
dec
leave
and
jg
mov
fstl
leave
pop
and
push
inc
or
jo
iret
cmp
cs
mov
mov
and
mov
mul
pop
cld
and
dec
xchg
add
sub
jbe
scas
sub
pusha
mov
inc
scas
add
outsl
sub
test
fimull
fcoms
orb
fwait
xor
mov
je
sbb
add
int
in
pop
inc
push
xlat
mov
lret
pop
pop
mov
in
daa
fimull
fwait
mov
pop
jg
sbb
cmpsl
movsb
iret
outsb
and
repnz
fsubl
inc
ficompl
addr16
jns
enter
jmp
jge
push
fcoml
push
pop
jns
inc
out
lcall
mov
std
mov
mov
scas
mov
ret
test
fimull
aam
mov
add
popa
test
mov
cmp
push
nop
push
push
xchg
ficompl
cmp
pop
dec
xchg
dec
icebp
dec
addr16
sbb
xchg
adc
stos
xchg
mov
pop
orb
mov
out
cmp
cmp
repz
inc
and
ja
aaa
loop
mov
pmulhw
sub
push
rcrb
div
mov
and
jne
push
orb
int
fcoms
xchg
cmpsb
inc
sbb
adc
inc
std
scas
mov
ret
sbb
test
push
imul
jmp
inc
cmp
loope
incb
xor
mov
out
xlat
aaa
lods
and
in
inc
mov
sub
push
cmpsb
add
mov
ljmp
xlat
jp
int3
fmull
jnp
add
lods
adc
sbb
add
pop
sahf
sbb
leave
sub
cs
pushf
out
dec
dec
or
mov
jne
stc
xchg
lea
fsubrs
sbbb
and
pop
push
lahf
pop
xchg
and
sbb
es
inc
test
es
mov
add
jle
dec
movsl
jg
mov
pop
mov
gs
dec
mov
pop
sub
dec
add
pop
movsl
psubb
mov
add
inc
jecxz
int
jg
imul
rolb
call
dec
out
inc
add
or
xchg
inc
mov
jne
mov
into
test
mov
pop
adc
popa
mov
mov
test
and
mov
xor
jl
pop
xchg
sub
inc
test
push
cmc
lcall
insb
sub
mov
xchg
aam
mov
testb
add
xor
inc
push
pop
mov
xchg
out
mov
out
push
cmp
in
and
or
ds
cmp
daa
cltd
mulb
aad
pop
xor
jge
mov
xor
sar
sbb
xor
pushf
jp
test
ficoml
mov
xchg
push
pop
add
mov
ja
push
mov
pushf
shlb
pop
das
inc
push
xor
enter
cmpsl
rorb
rcr
ret
sbb
es
push
mov
jnp
add
adc
push
loop
mov
sti
push
mov
fmulp
nop
and
lea
xor
jmp
mov
and
fstpt
dec
popa
add
xchg
jg
inc
jne
or
push
and
sti
mov
hlt
test
fdivs
cmp
out
xor
dec
inc
movsb
out
rcrl
jecxz
sbb
mov
imul
jne
mov
shlb
loopne
icebp
mov
ja
cmp
test
mov
sub
or
sub
fdivs
ja
mov
je
addl
out
addl
mov
std
mov
lahf
sbb
gs
ret
cld
jne
lods
movsb
xchg
mov
imul
pop
adc
loopne
push
pusha
push
out
xor
aaa
jle
mov
pop
test
sbb
aaa
hlt
fnstcw
dec
popa
jmp
sbb
into
repz
es
dec
es
dec
jo
mov
mov
jmp
fldlg2
clc
or
mov
es
jb
push
pop
mov
xchg
inc
push
cmp
mov
push
and
and
sbb
push
add
jle
dec
mov
pop
or
cmp
pop
inc
xchg
movsb
push
mov
push
jns
idivb
dec
lods
shr
sub
or
into
adc
je
pop
movsl
mov
stos
sub
push
jae
or
imul
push
stc
mov
xor
cmpb
mov
ror
gs
clc
jb
fwait
cltd
lcall
and
adc
stc
sub
lret
mov
insl
divb
jne
inc
daa
push
cmp
daa
dec
pop
mov
hlt
ljmp
push
lahf
in
cmp
ror
in
inc
xor
pop
aas
dec
aas
jns
xchg
or
sub
jno
cmp
push
out
fdiv
idivl
in
pop
jp
mov
sbb
push
mov
inc
dec
sub
repz
pop
push
pop
ja
cld
cmp
jo
jg
mov
pslld
dec
push
or
mov
fmuls
aas
cmp
movsl
sbb
andb
out
push
jne
arpl
arpl
shll
leave
mov
xchg
shrb
mov
inc
add
and
test
orb
push
aas
popa
dec
add
cmp
addl
push
inc
push
ret
cmp
dec
scas
jg
jp
int3
mov
mov
mov
pop
and
and
std
pop
jg
jl
add
push
pop
inc
push
loopne
and
dec
jne
push
shlb
sbb
cmc
ja
adc
mov
adc
or
stos
dec
cltd
mov
pop
dec
fcoms
cmp
sbb
icebp
mov
lds
sub
movsb
xchg
test
adc
sub
aad
js
popa
xchg
sub
lcall
mov
push
cs
dec
repnz
jp
push
dec
fldt
xor
mov
and
in
push
outsl
scas
pop
or
dec
push
out
mov
ficompl
les
fidivl
in
outsl
mov
fcoms
and
xchg
out
add
or
and
mov
mov
sub
jle
sahf
cs
iret
mov
mov
scas
inc
add
mov
xlat
fldcw
inc
dec
dec
fbld
in
frstor
push
mov
lock
cmp
in
sbb
sub
daa
sbbb
pusha
mov
pop
sbb
mov
data16
xor
fidivrl
sahf
mov
mov
push
sub
adc
rorb
out
movsb
mov
dec
test
inc
mov
ds
xor
lea
out
sbb
or
mov
sub
sbb
inc
dec
mov
sub
imul
fprem
jae
jp
push
vshufps
push
call
repz
and
jb
xchg
push
je
rolb
in
insb
inc
popf
outsl
nop
xor
rcrl
loope
out
jo
imul
sbbl
mov
dec
cmp
adc
bound
sub
in
cmc
js
push
xlat
idivl
or
sub
pop
incb
sbb
ja
fs
sahf
dec
pop
cmp
ljmp
mov
jno
arpl
cmpb
insl
adc
clc
mov
ljmp
jo
lock
dec
jb
arpl
cmp
cld
cmp
fistps
test
int
xchg
push
and
filds
ret
mov
aam
sbb
pshufw
jle
mov
and
jg
xor
or
scas
push
popf
or
fcomi
xchg
hlt
mov
and
inc
insb
jb
fcomps
xor
cmp
dec
dec
movsl
cmp
mov
in
dec
in
xchg
push
pusha
into
and
inc
xchg
mov
pop
push
leave
cmp
imul
mov
mov
movsb
or
mov
mov
dec
repnz
fsubrl
shll
nop
outsb
push
jp
setne
pushf
jns
mov
fs
shlb
fimull
insl
or
cmp
test
inc
fmuls
and
push
mov
int
pop
pop
mov
jnp
jae
loope
pop
pop
repnz
xchg
push
loop
and
adc
xor
lcall
loope
stos
jo
or
or
cmp
js
leave
movsl
lock
aas
mov
xor
mov
push
movl
pop
mov
push
fisttpll
fwait
push
xchg
nop
cmp
mov
in
cmp
add
jnp
xor
pop
dec
jg
rcr
mov
fwait
loop
scas
in
hlt
into
movsl
fildl
lods
mov
flds
sub
jnp
mov
sarl
push
inc
fs
mov
and
imul
xchg
daa
ja
lret
inc
sub
sti
fisubs
popf
loop
push
cmp
sbb
pusha
movl
repnz
sub
jne
addr16
inc
add
fidivl
lock
and
adc
and
mov
add
das
mov
and
jbe
data16
enter
roll
shrl
or
scas
cli
jnp
mov
cltd
ss
pop
fprem
in
mov
dec
pop
mov
insb
mov
push
mov
mov
cmp
in
or
or
cltd
cwtl
pushf
jns
je
orb
jno
xchg
pop
mov
shll
sub
xor
aad
idivb
mov
xchg
sbb
mov
scas
rcl
mov
pop
in
pop
ds
pop
jmp
sti
dec
repnz
jae
into
sbb
decl
xor
int
fistpl
daa
add
fdivl
jecxz
inc
mov
xchg
popf
mov
dec
dec
ret
fstpt
out
xlat
mov
xchg
xlat
scas
lret
xor
adc
addl
and
lock
xchg
cmpsl
sarl
sbb
cmp
xchg
mov
das
jns
subb
fbstp
push
std
push
xchg
scas
repnz
sub
mov
sbb
adc
pop
inc
push
fcomp
push
fcomps
inc
fs
pushf
sbb
pusha
movsbl
sbb
dec
adc
jo
jl
mov
or
mov
jns
fwait
popf
je
lock
fcmovnb
pop
lods
rorb
insl
test
inc
mov
xchg
sub
cli
xor
ds
push
insb
pop
jge
and
cmp
out
ret
cmpsl
mov
mov
ljmp
fisubs
jl
push
xchg
test
mov
add
scas
lret
aad
xchg
ss
addl
lods
dec
leave
cmp
jae
pop
in
stos
das
test
cmpsb
test
pop
push
popa
popa
xchg
repz
push
cmp
lcall
shrb
jl
iret
xor
adcb
mov
sbb
stc
lahf
xor
sub
leave
cmp
out
in
mov
pop
rcrb
mov
jo
addr16
push
lret
cmp
pop
iret
sbb
push
leave
scas
lret
dec
adc
adc
push
xchg
imul
fldcw
hlt
ljmp
dec
aaa
cmp
call
out
ret
mov
je
ror
xor
in
out
sub
imul
repnz
dec
mov
js
and
xchg
xorl
mov
test
ds
mov
pop
mov
inc
dec
cmpsl
nop
stos
test
sbb
cmp
or
fs
enter
dec
ret
cmp
cld
jle
and
adc
std
out
cld
add
lcall
mov
lcall
lcall
sub
pusha
cmp
inc
testb
pop
add
out
mov
xchg
jnp
divb
mov
jl
jae
or
aaa
push
sbb
out
je
inc
out
call
xchg
inc
xchg
sbb
or
dec
clc
in
xchg
pop
adc
adc
cmp
cmp
adc
mov
xor
mov
xor
jnp
sbb
mov
das
aaa
xchg
call
xchg
and
inc
mov
scas
je
neg
out
dec
lret
pusha
or
dec
into
mov
mov
inc
addr16
xchg
mov
movsb
lret
lcall
orl
mov
xorl
in
insl
push
and
mov
dec
sub
xchg
mov
decl
out
lret
out
das
ds
out
cmp
push
inc
rorl
into
jmp
jnp
dec
adc
stos
inc
leave
fmull
cmc
mov
popf
pop
cwtl
inc
xor
mov
stc
mov
jno
adc
into
jnp
cmp
pop
test
je
call
add
inc
or
mov
pop
adc
andl
aaa
call
pusha
push
ret
stos
popf
enter
test
push
pop
mov
cs
mov
mov
mov
add
popa
fiadds
push
lods
push
popf
adc
sbb
repz
adc
fs
clc
gs
rolb
aad
pop
mov
jne
bound
aas
scas
daa
xchg
stos
jmp
inc
jecxz
push
popf
jbe
stos
stc
jnp
jo
xchg
add
addr16
add
push
lret
mov
sbb
out
mov
into
mov
xor
push
adc
fisttpll
add
fs
dec
xchg
in
cmp
jne
out
push
jb
jne
and
insb
loope
xchg
test
daa
aad
scas
lods
add
mov
jmp
fsubrs
or
sub
xchg
loop
les
dec
mov
push
sti
pmullw
repnz
int
test
sbb
cltd
sti
xchg
filds
push
addr16
mov
or
pop
imul
and
push
pusha
int3
xorb
out
pop
push
pop
push
test
stc
add
mov
insb
xchg
into
push
adc
jnp
cli
pushf
and
push
pop
adc
pop
std
iret
aas
int3
shr
or
jnp
xor
adc
clc
sub
add
jo
lods
cmp
popf
fsubs
sub
mov
or
sbb
jo
aam
int3
shlb
decl
add
pop
pushf
sub
rorb
mov
imul
fildll
mov
into
dec
popa
data16
xchg
mov
arpl
push
imul
push
xlat
js
jne
xor
out
rcl
popa
dec
cli
push
loopne
pop
mov
mov
insl
aaa
inc
cmc
mov
icebp
mov
inc
mov
or
loope
cmpsl
popf
mov
icebp
hlt
adc
in
mov
sub
xchg
mov
fxch
jecxz
push
mov
sarl
mov
shll
and
push
or
icebp
xor
ja
dec
xor
int
pop
outsb
cltd
stos
push
stos
mov
xor
sarb
or
andb
outsb
stos
dec
mov
sti
xor
lods
mov
add
push
test
jg
dec
addl
add
mov
jbe
stc
inc
lret
mov
adc
scas
jnp
xor
pop
pop
dec
jo
lahf
xor
push
adc
jbe
repz
jle
sub
stc
movb
cmp
dec
pushf
push
cltd
lods
sbb
data16
mov
sub
xor
scas
add
pop
sbb
ret
inc
adc
out
mov
adc
fwait
pop
negb
push
adc
mov
add
das
bswap
popf
sbb
dec
cwtl
push
jnp
aad
out
test
aam
ret
out
pop
sbb
fimull
call
lret
jne
scas
mov
adc
sbb
xor
sub
push
mov
adc
inc
out
movsl
popf
pop
push
mov
xor
in
xchg
jle
popa
aad
sub
xchg
movsb
daa
pop
jnp
unpckhps
lret
loop
pop
jp
and
addl
sub
sarl
xchg
lods
and
cmp
mov
xchg
es
push
jnp
pop
lds
imull
fucomip
sub
jnp
jns
cltd
or
cwtl
imul
sahf
mov
push
or
mov
mov
std
pop
push
fnsave
testb
js
out
dec
dec
scas
movsl
lds
cmpsl
es
rorl
leave
xchg
and
scas
dec
stos
mov
mov
pop
add
fisubrs
nop
pop
dec
push
or
shlb
mov
mov
xor
test
sbb
fldenv
jo
cld
cld
addr16
xchg
xchg
das
cmovae
mov
xchg
in
jne
sbb
negl
dec
add
cmp
mov
in
loope
cli
arpl
adc
repnz
adc
call
mov
push
stos
aaa
xchg
lgs
sub
stos
adc
ret
push
mov
jb
mov
decl
cli
push
sub
fisttps
and
jno
add
ja
int3
das
mov
mov
sub
test
xchg
out
out
and
inc
cli
or
jno,pt
jno
sti
loop
fwait
lret
cmp
repz
mov
ficomps
xchg
fbld
rolb
inc
imul
fsubrl
inc
adc
mov
mov
mov
bnd
jns
aas
out
roll
jae
push
xor
daa
dec
cmp
into
popa
sarb
mov
iret
imulb
mov
loopne
andl
pushf
jmp
sub
mov
cmp
cmp
fdivs
fdivrp
in
stos
insl
das
or
pop
iret
aas
repz
mov
lods
xchg
ficoms
fidivl
pop
mov
add
ljmp
jns
mov
or
cltd
jns
repnz
lock
clc
jmp
add
jecxz
movsl
xchg
inc
out
in
cmc
daa
mov
xor
push
lods
dec
cli
add
dec
das
add
arpl
cld
pop
xchg
cmp
push
and
aad
or
inc
outsl
jns
orl
fisttpll
adc
and
inc
cli
subb
cmp
jnp
xchg
mov
cmc
cmp
out
notb
cltd
adc
and
dec
imul
aad
ja
and
cld
push
rcrb
pushf
inc
fisubs
arpl
sahf
lods
or
xor
xor
fwait
sti
jl
jne
loop
scas
jge
sti
mov
jo
xor
pushf
push
in
insb
nop
aad
mov
mov
and
or
out
scas
dec
jno
out
jp
jle
add
inc
outsl
cmp
pop
xchg
out
pop
add
push
jp
cld
pop
sbb
add
inc
in
push
outsl
mov
rcrb
jg
testl
mov
and
loopne
add
stos
push
mov
clc
andb
inc
fstl
push
in
push
mull
push
or
mov
andl
das
faddl
sub
cmpsb
cltd
clc
dec
xor
mov
sbb
fmul
loop
js
movl
es
mov
xorb
xor
mov
xorb
ljmp
out
scas
imul
pushl
xchg
or
dec
imul
dec
sbb
inc
and
loopne
mov
fldpi
jge
ja
lcall
sbbl
call
add
insb
jb
sub
repz
sub
subl
mov
mov
out
pop
popa
into
or
das
dec
ja
fdivr
xchg
in
adc
jmp
xchg
mov
fimuls
cmp
sti
lea
sahf
or
sub
pop
jl
dec
push
push
fstl
or
and
decb
sub
roll
clc
push
mov
je
xchg
repnz
pusha
popa
jbe
pop
lahf
imul
fildl
ret
pop
pop
xchg
xchg
daa
xor
in
scas
int
jnp
hlt
adc
xchg
repnz
hlt
mov
mov
insl
and
lods
add
imul
adc
daa
aad
pop
stc
add
fidivs
int
fsub
lods
arpl
jl
out
push
jae
fisubrs
in
outsl
fs
outsl
fidivrs
scas
into
cltd
add
test
ret
xchg
jge
fcompl
mov
int
pop
cmp
and
jno
and
dec
rcrl
imul
lock
movsb
and
push
das
ds
sub
stos
pop
mov
mov
rolb
rcl
dec
mov
cltd
and
jo
je
imul
inc
add
repz
call
gs
pop
insl
lea
mov
xchg
loopne
imul
fisubs
dec
adc
lahf
inc
paddq
lods
je
ficoms
shrl
aaa
mov
lret
bound
sub
jae
insl
aad
mov
push
mov
pop
pop
shl
outsb
pop
das
cmp
mov
movsb
inc
cmpsl
scas
icebp
ret
arpl
shlb
and
xor
and
lods
lods
cmp
loop
ret
rcrl
popa
xchg
xor
jp
cmpb
mov
push
fcmovb
and
fsts
dec
fs
dec
xor
loop
xor
orl
insl
hlt
clc
dec
loope
fdivrp
stos
xor
insl
lahf
iret
push
add
jns
add
push
add
in
mov
push
sbb
movsb
dec
imul
adc
stos
daa
cmpsb
mov
ja
fcoms
pop
aad
mov
mov
in
repnz
adc
shr
pop
dec
rep
out
xor
cltd
jmp
add
leave
sbb
jecxz
popf
mov
rcll
das
ljmp
call
or
daa
or
adcb
inc
push
iret
call
mov
sbb
xchg
scas
jmp
call
xor
icebp
sarl
mov
push
xor
mov
iret
mov
enter
cmpsb
repnz
jae,pt
test
jne
cmp
mov
xor
fwait
and
insl
and
ret
push
rolb
test
cmpsb
cmp
sub
sub
and
rcrl
and
or
push
in
mov
mov
cli
push
nop
test
and
jbe
adc
mov
pop
pause
pop
sub
cli
xor
and
pushl
xlat
dec
pop
aam
mov
inc
cmpl
movsl
ja
sub
repnz
inc
jmp
pushf
push
lods
or
lcall
lock
movl
xor
loop
xor
xor
adc
sbb
clc
mov
in
pushf
sbbl
aad
jle
jmp
mov
push
dec
test
push
pushf
mov
arpl
enter
jp
mov
rcl
jecxz
lcall
out
pop
lahf
mov
rolb
mov
shrl
push
nop
xchg
dec
in
sti
xor
aas
xchg
add
xor
inc
ficompl
sub
pop
out
and
es
jg
dec
jb
in
fdivrl
ss
push
in
in
and
insb
test
push
mov
or
jns
or
push
inc
jno
xor
add
cmp
mov
fs
sbb
add
test
cmp
jmp
out
sub
adc
incl
jge
add
mov
fimull
mov
mov
das
popa
jbe
pop
xlat
mov
sbb
jne
jnp
xchg
sarb
push
stos
outsl
into
pop
mov
jecxz
lahf
xor
sbb
push
stc
ds
cmp
inc
sub
push
sbb
dec
imul
add
cmpsb
inc
icebp
dec
xchg
and
scas
call
rclb
mov
sbb
mul
cmpl
in
jecxz
inc
dec
pop
mov
add
fisttpll
jae
xor
mov
dec
stc
adc
pop
push
clc
cmpsb
dec
ds
xchg
repnz
mov
add
sarb
sub
xchg
mov
ss
call
sbb
jle
in
outsb
sbb
lcall
inc
sbb
mov
hlt
xchg
cmp
adc
and
stc
mov
inc
cli
test
in
out
iret
mov
sbb
add
scas
add
pop
mov
mov
sub
sbb
mov
push
idivb
push
xor
fistpl
inc
xor
sub
push
int3
in
and
xchg
icebp
test
xlat
inc
xchg
sub
mov
jno
mov
int
push
in
add
movsb
lret
call
lahf
repz
push
inc
mov
sarl
test
and
popa
hlt
stc
jecxz
mov
je
jno
fisttpll
jmp
jo
jmp
add
call
fisubs
push
inc
mov
cmp
imul
popa
jo
test
push
ret
jns
mov
lods
popl
push
es
mov
cmp
popf
dec
mov
jl
xchg
jp
push
aaa
pusha
js
ret
sahf
stos
call
inc
scas
aad
imul
fsubrp
inc
xor
sbb
js
xchg
test
fsubs
or
cli
mov
cmp
rolb
adcb
xor
lds
inc
mov
pop
or
mov
cli
add
cmp
jp
sub
pop
push
jb
mov
jbe
fmul
stos
jecxz
popa
fnstcw
outsb
inc
mov
fs
inc
shlb
mov
dec
popf
xchg
pop
or
scas
sbb
ficomps
jae
cs
nop
ret
in
clc
imulb
lock
mov
pop
push
or
xchg
out
inc
sub
lds
test
push
iret
movsl
fidivs
into
sub
jg
cmc
stos
ror
sbb
arpl
out
push
pushf
mov
ljmp
sbb
lock
iret
ror
push
in
aam
fstpt
in
mov
pusha
aaa
call
js
out
sbbb
jb
in
test
test
std
fwait
adc
mov
clc
loopne
mov
pop
int3
out
hlt
outsl
in
jge
nop
inc
adc
aad
cmp
movsl
dec
sbb
push
les
outsb
lret
sbb
into
ja
inc
cmp
inc
mov
add
bound
push
add
push
in
inc
push
sbb
in
call
outsl
jne
push
mov
and
and
insl
push
adc
mov
push
xchg
mov
punpckldq
pop
sub
out
in
xchg
inc
add
orl
pop
insl
pop
xchg
add
bound
add
jge
les
cmpb
out
scas
fildl
in
jmp
test
xchg
jnp
pop
mov
add
pop
loope
pop
paddd
das
cltd
cmpsb
inc
pop
dec
xor
lds
mov
out
fcmovnb
jbe
fwait
pop
push
jp
inc
xchg
xor
movsb
or
fdivrs
mov
fwait
mov
adc
dec
mov
xchg
jg
cs
xchg
pop
lahf
lods
test
pop
test
sti
jmp
loop
pop
cmp
dec
scas
jne
out
mov
movsb
add
or
mov
std
jnp
push
dec
fwait
sbb
cmp
jae
sti
out
dec
mov
std
pop
ret
jne
jb
ja
jae,pn
rol
in
insl
pop
js
aaa
push
std
jle
sbb
rorb
test
in
shlb
sbb
gs
cs
cs
imul
mov
and
fisubl
sarl
test
stos
daa
push
icebp
out
data16
adc
nop
imul
jo
pusha
nop
popf
xchg
loopne
or
shll
fs
cmp
mov
and
bound
inc
lea
ret
lock
cs
mov
mov
dec
and
lock
sub
sbb
mov
js
and
push
and
sub
in
fwait
jmp
cld
jmp
outsb
cmp
orl
movsl
cli
es
sub
jb
sub
or
xchg
dec
dec
mov
cmp
jg
pop
xor
mov
sbb
push
adc
or
mov
in
roll
pop
cmp
adc
mov
jo
test
pop
dec
mov
rol
push
fs
cmc
push
jb
pop
shlb
or
mov
pop
dec
lret
js
push
dec
pushf
sbb
xor
jae
in
pop
or
sub
lods
cmc
inc
arpl
fnsetpm(287
mov
jno
pusha
stos
in
adc
jb
mov
cmp
inc
mov
mov
adc
loope
lds
les
imul
adc
clc
xor
xorl
xchg
pushf
fidivrs
pop
out
nop
xor
mov
std
and
shl
push
pop
pop
xor
pop
push
loop
mov
xor
insl
push
loope
hlt
popf
fwait
cmpsl
xor
add
lods
inc
nop
dec
int3
xor
push
pop
movsl
pop
scas
loope
or
sub
push
movsl
inc
xchg
jbe
scas
mov
cltd
movsb
xor
jno
in
int
loopne
mov
mov
pop
or
dec
ret
imul
std
movsl
repz
js
pop
or
sbb
sbb
loope
xchg
and
pop
fs
test
fwait
add
hlt
lret
sti
cmp
or
dec
pop
fcmovnbe
test
das
xorb
mov
in
cmp
jg
cmp
mov
and
dec
fwait
loopne
xchg
test
les
imul
mov
sarl
mov
loope
lods
jns
push
packssdw
pop
sbb
push
scas
lret
add
and
cmp
out
jg
jns
lock
xchg
inc
mov
jl
pop
xchg
adc
xor
mov
mov
jle
mov
mov
movsb
divl
imul
shlb
pop
add
push
cmc
add
jmp
mov
adc
xlat
pop
popf
rcrl
clc
cmp
arpl
add
insl
lahf
sbb
sbb
cmp
inc
push
xorb
and
xor
enter
adc
out
in
lret
cmp
imul
std
test
mov
and
test
and
imul
xchg
faddl
cmp
in
dec
inc
jp
mov
data16
clc
add
pop
xor
cltd
pop
aad
inc
pop
addr16
sub
stos
mov
outsb
pop
es
jnp
call
jbe
or
out
icebp
cmpsb
pop
push
or
pop
push
sbb
pop
push
fcompp
sub
hlt
pusha
sbb
jo
lgs
out
jne
int
cmp
push
and
stos
lods
fst
push
xchg
dec
insb
jnp
cmp
add
push
lods
xchg
cmpsb
push
push
cwtl
fcomps
insl
xlat
push
jle
mov
imul
or
shl
aad
lods
xor
jecxz
mov
fwait
in
data16
dec
jge
sub
pop
fdivrl
push
pusha
out
lret
clc
jle
dec
test
pusha
fs
icebp
sub
jge
pop
out
cmp
push
arpl
jp
adc
sti
out
mov
cmpl
mov
or
dec
dec
mov
inc
mov
sbb
adc
mull
add
cmp
cmp
nop
and
inc
sub
xchg
sub
into
lock
insb
mov
jnp
imul
rcrl
xchg
push
or
cmc
push
xchg
imul
ja
je
pop
repnz
add
fwait
cld
fcmovnbe
dec
push
shrb
and
sbb
ja
xlat
lods
or
adc
andb
sbb
push
sub
cmpsl
fildl
stos
call
outsl
rorb
or
ja
cli
aas
cwtl
push
or
stc
arpl
pop
test
cmp
fs
out
sbb
jg
jnp
mov
mul
ret
adc
push
or
pop
test
lods
push
pop
inc
push
xchg
aam
pop
fiaddl
inc
lret
outsl
jae
push
push
and
popa
fidivrl
xor
imul
out
cmc
int3
aad
inc
je
push
imull
pop
xor
pop
aas
sti
dec
dec
xchg
jnp
mov
in
sub
inc
sbb
and
in
adc
out
and
sbb
int3
jp
cmp
xchg
mov
out
pushf
add
pop
pop
repz
sbb
pop
add
into
jge
ds
jne
push
mov
test
jge
jno
adc
xor
mov
gs
or
aam
mov
bound
or
inc
cmp
and
and
adc
leave
stos
push
xchg
je
test
pop
mov
into
rorb
add
inc
mov
jge
mov
imul
fwait
insb
add
sub
or
cmpsl
movsb
fldenv
nop
sub
pop
mov
sub
xor
fimuls
mov
out
mov
loopne
cwtl
cli
hlt
ss
lret
sbb
xchg
mov
or
mov
fcmovnbe
mov
adc
sbb
popf
push
mov
das
push
hlt
mov
cmpb
sub
mov
mov
ror
jecxz
push
jp
sbb
mov
push
negl
adc
adc
stos
and
adc
xor
dec
outsb
shll
imul
adc
sub
into
lods
je
mov
push
adc
jnp
xchg
mov
push
sti
xor
cmp
out
and
xor
scas
mov
jmp
sub
mov
fucomip
mov
nop
cmpl
in
ret
fsubrs
mov
jecxz
roll
std
jae
mov
sbb
inc
add
cs
insb
mov
inc
xchg
cmpsl
inc
mov
inc
dec
dec
jbe
out
sti
mov
stos
vmovshdup
sub
dec
repz
test
insb
jg
pop
in
jp
cmp
mov
popa
lock
dec
push
sbb
popf
mov
clc
mov
mov
add
ds
rolb
pop
push
cmp
jae
leave
rorb
movsl
xchg
and
push
js
xchg
lods
sub
push
add
testb
lret
mov
sbb
outsl
and
push
and
decb
mov
stos
js
adc
aaa
inc
lahf
xor
fmul
lods
mov
push
arpl
mov
jno
shll
out
icebp
fsubrl
jo
xchg
lods
cmp
pop
and
pop
add
and
mov
mov
push
xor
push
jge
jo
xchg
mov
fidivrl
or
pop
jb
dec
jle
jge
fdivs
ret
and
imul
pop
mull
xchg
and
inc
dec
add
xchg
jmp
inc
sub
mov
and
ret
cwtl
mov
and
icebp
das
mov
test
cli
inc
xlat
pusha
gs
xor
in
jae
mov
add
inc
dec
pop
adc
or
es
xchg
push
push
addl
inc
loope
xchg
dec
and
sbb
pop
pusha
insb
inc
insb
and
mov
push
and
test
andb
out
cmpsb
repnz
xor
loope,pt
push
push
repz
sub
sbb
imul
faddl
jne
adc
sbb
bound
fcoml
jl
fcomps
sub
lea
sub
push
scas
push
ljmp
aam
or
pop
imul
lods
loope
ret
dec
xlat
adc
cli
inc
push
sbb
enter
inc
movsb
xlat
xor
xchg
lahf
pop
jle
sbb
enter
je
adcl
rcl
push
cmp
sahf
fbld
pop
sti
mov
xor
jnp
arpl
cmp
push
mov
mov
mov
dec
mov
inc
or
jnp
rcl
or
mov
xor
ljmp
jns
inc
sub
lret
mov
inc
jle
mov
fimull
aad
and
out
sbb
js
inc
sbb
orb
xor
jns
das
jbe
mov
jns
test
aaa
sarb
adc
int
mov
mov
mov
jmp
ja
add
push
xchg
pop
mov
cmpb
test
jno
xchg
movsl
sub
aas
cli
xor
xor
movsb
pop
mov
mov
push
push
or
aas
add
call
mov
clc
jp
imul
cmp
dec
icebp
lods
adc
stos
sbb
fistpll
cld
in
aad
cltd
lods
lahf
xorb
jne
xchg
mov
es
cmpsl
jge
pop
adc
mov
xor
sbb
mov
sub
pop
test
sbb
sub
inc
jg
mov
pop
iret
or
xchg
lret
adc
mov
jne
mov
add
push
jbe
mov
and
mov
xchg
fimull
in
and
shll
call
mov
sbb
mov
dec
imul
adc
sahf
out
xor
repnz
mov
add
in
cmp
mov
in
pop
push
arpl
push
or
popf
pop
push
sub
pop
adc
aam
ss
mov
in
clc
dec
insl
xchg
jge
sbb
xor
out
iret
rorb
dec
scas
in
mov
nop
out
es
xlat
jl
mov
cmp
jg
xchg
and
and
jmp
data16
pop
icebp
dec
cmc
xor
mov
mov
lret
pop
xchg
fyl2xp1
aad
in
mov
nop
mov
out
ficomps
stos
fnstcw
daa
sub
ficompl
add
in
mov
jne
inc
inc
cwtl
repz
daa
stc
jg
repnz
in
jp
lods
sbb
lahf
jmp
mov
pop
add
adc
mov
adc
jb
fcomps
jnp
divl
push
or
cltd
cmpsb
insb
pop
popa
idiv
cmp
insl
sarl
push
in
loopne
dec
jb
mov
adc
add
ljmp
das
mov
das
scas
not
fisttpl
adc
lret
aas
inc
or
fdivl
xchg
mov
aam
inc
aad
inc
inc
into
iret
mov
push
stc
sub
pop
pop
adc
xchg
in
mov
pop
shlb
mov
sbb
xor
push
into
cltd
mov
xchg
adc
ret
inc
add
cmp
data16
mov
pushf
rcr
ja
or
add
mov
adc
sbb
mov
adc
or
xchg
push
cld
aas
js
sub
and
adc
out
shrl
test
in
iret
mov
test
mov
and
aad
dec
fcompp
movsb
cmp
push
push
scas
fidivrl
adc
dec
mov
stos
popa
rolb
es
test
jnp
fnstsw
add
dec
pop
sti
lret
lea
dec
iret
fisubl
in
dec
dec
pushl
das
mov
jge
fstl
rclb
ds
cmc
movsl
jno
imul
shl
jl
outsl
in
inc
sub
mov
loopne
inc
ss
ds
cmp
les
jne
inc
xor
aam
dec
mov
push
scas
inc
popa
daa
push
cmp
jp
or
mov
xchg
mov
xchg
xor
and
rol
sbb
and
cmp
lret
pop
int
fdivrp
sub
or
sbb
dec
or
push
or
mov
xchg
ror
cmpsl
andl
pop
out
mov
pop
or
push
mov
xchg
loop
jae
add
scas
cmpsl
ljmp
movsl
call
mov
adc
mov
mov
popf
fcomps
movsl
xchg
cli
cwtl
int
sbb
cld
mov
jb
sbb
jo
rorl
jbe
mov
jb
pop
sub
js
fisubrl
repnz
sti
fisttpl
ret
adc
movsb
mov
jp
jg
mov
push
in
leave
insb
fisubrs
sub
enter
fcmovu
pop
or
pop
mov
xchg
adcb
inc
sub
iret
mov
pop
movsb
cltd
inc
fmull
in
shr
pop
mov
shl
out
aas
enter
jmp
and
rcll
push
outsb
jo
jno
arpl
pop
in
and
cmpsb
jle
sbb
sub
sub
sub
or
or
inc
int
push
xorb
and
cltd
aaa
mov
repz
sub
xchg
adc
hlt
addr16
pop
jne
sbb
jge
mov
repz
xchg
int
decl
jge
cmp
cmpsl
arpl
dec
xchg
sub
jmp
dec
loop
leave
aad
sbb
cmp
ja
mov
push
or
leave
hlt
adc
pop
outsl
nop
movsl
xor
rcr
sarl
aad
and
and
out
and
push
mov
and
mov
cs
and
aad
and
inc
sbb
push
pushf
addr16
test
mov
mov
mov
test
movsl
mov
insb
mov
pop
cmpsl
adc
jb
outsl
nop
add
js
cmp
jb
dec
mov
out
and
repz
imul
inc
mov
loope
mov
xchg
daa
xchg
in
shl
iret
shll
ss
pop
cmc
out
mov
xlat
out
push
xchg
fcomps
cmpsl
data16
or
fisubs
mov
mov
jns
mov
call
lret
sarb
jg
sarl
outsl
add
hlt
pop
xorl
stos
mov
add
in
mov
scas
sbb
lahf
xor
rcll
leave
pop
and
sbb
xchg
dec
ss
cmp
mov
popa
xchg
pop
sub
jecxz
cmp
push
mov
adc
ret
scas
mov
sub
mov
mov
jne
scas
or
rclb
fcmovu
sbb
jne
and
ret
test
push
cmp
or
stos
dec
test
inc
adc
sbb
mov
mov
movsb
imul
ljmp
lret
movsl
or
cltd
aam
movsl
or
ret
or
xlat
popf
add
and
xchg
sbb
int
cmc
jbe
lock
mov
aad
xchg
fldenv
loopne
and
dec
mov
cs
aam
jmp
mov
outsl
aas
push
push
out
filds
sbb
pop
cmp
imul
xchg
lahf
es
outsb
outsl
add
sbb
sbb
mov
mov
xor
xor
sbbl
adc
mov
popl
cmp
outsl
jg
cmpsl
xchg
stc
xchg
sbb
repnz
bound
sub
pop
cmp
outsb
fisubl
add
in
push
jnp
mov
hlt
mov
sub
nop
shr
and
loope
test
ret
cmpb
loopne
cmc
out
mov
repnz
jl
add
dec
clc
cld
xor
iret
xchg
sar
pop
arpl
mov
lds
out
scas
jp
rcrl
in
dec
push
adcb
stc
sub
xor
notl
mov
repnz
clc
mov
popf
in
addr16
int
sbb
sarl
cmp
js
popf
adc
add
js
call
hlt
cmpsl
xchg
jne
mov
ret
xchg
jmp
imul
js
sbb
mov
inc
pop
jle
icebp
push
dec
test
icebp
mov
mov
pop
lret
loop
add
xchg
into
gs
popf
js
xor
sub
imul
shlb
mov
repnz
jae
dec
sar
add
cwtl
xlat
outsb
pop
mov
xchg
arpl
push
pop
fdivr
inc
xchg
adc
mov
fwait
lods
cwtl
inc
xlat
sub
dec
sbb
push
sub
push
enter
or
sarb
push
int
pop
and
repz
cs
inc
imul
out
cltd
jge
pop
icebp
lods
or
sbb
dec
pop
lahf
xor
jne
sub
mov
loope
lods
les
cli
loopne
jle
ja
dec
div
fbstp
push
repnz
mov
sub
mov
sbb
mov
sbb
inc
mov
test
shll
dec
push
jae
clc
lcall
cmp
adc
or
mov
ret
int3
test
rolb
inc
andl
xor
jo
pop
scas
hlt
cmp
inc
inc
repz
negl
nop
rorl
nop
push
aad
xchg
adc
push
sub
sub
insl
adc
or
scas
cmpl
repnz
aam
push
xorb
mov
and
std
inc
cmp
jecxz
xor
lret
jle
xchg
pop
xor
lahf
push
int
fcmovu
pop
dec
xor
outsl
push
or
test
or
xchg
pusha
jmp
jb
lods
mov
push
es
jns
xchg
jmp
clc
mov
mov
mov
inc
cmpl
inc
daa
pop
push
js
adc
add
leave
cmp
inc
test
loopne
add
sbb
movsl
loopne
pop
adcb
dec
pop
leave
sub
daa
mov
dec
adc
dec
popa
lahf
or
add
adc
mov
cld
mov
xchg
xchg
data16
add
xchg
pop
dec
into
jns
das
mov
outsl
fldl
pop
pop
adcb
lcall
jne
jo
pop
aas
rcl
iret
push
subb
mov
imul
and
pop
cmc
pusha
jle
ss
out
mov
jnp
xor
sbb
and
pusha
mov
cwtl
sbb
nop
outsb
fmull
repnz
imulb
insl
xchg
insl
cmpsb
push
addr16
sbb
cmp
mov
cmc
and
outsl
lcall
rcrl
adc
xor
inc
mov
xchg
sbb
orl
push
jp
mov
adc
lret
testb
idivb
xchg
in
sarb
nop
lods
pop
lret
idiv
xchg
push
jnp
lds
sub
jno
mov
xchg
pop
add
mov
mov
fcomi
fdivrs
jecxz
mov
adc
out
cmp
lea
xchg
repnz
sti
hlt
outsb
imul
mov
lods
xorb
add
jns
or
testb
jecxz
js
pop
bound
mov
aad
test
jns
scas
jbe
pop
dec
sub
inc
int
cmc
xchg
jnp
int
frstor
mov
rclb
cmpsb
inc
xchg
stos
jnp
xchg
insl
adc
add
pop
mov
pop
cmp
arpl
imul
and
cmp
inc
or
pop
lock
imul
fdivrl
pushf
push
enter
loop
lds
inc
in
or
pushl
popa
lahf
xchg
or
int3
fisttpll
xchg
fildll
in
ss
sbb
cmp
fldl
xor
addl
insl
jb
test
ds
repz
sbb
mov
fst
loopne
pusha
fistpl
pusha
xchg
sbb
xor
inc
loop
ret
ret
push
mov
gs
xchg
hlt
test
popf
xchg
pop
dec
add
mov
pop
pop
push
adc
cmp
add
pusha
cmpsb
jle
addl
adc
js
push
xchg
cmp
xor
pusha
cs
in
mov
jge
fucomp
outsb
pusha
scas
jmp
scas
xor
ret
mov
sub
testb
je
shlb
ret
out
xor
push
popf
xor
inc
test
jmp
push
pusha
out
push
js
ljmp
mov
cmp
sub
or
or
mov
das
pop
movsl
mov
stos
stos
inc
faddp
pop
lods
push
cmp
gs
pop
sub
sub
cs
rcl
les
dec
data16
lods
cmp
mov
std
sbb
dec
jo
dec
fdivl
repnz
or
xor
push
sti
mov
pushf
and
push
loopne
mov
test
jecxz
nop
xchg
mov
fcomip
mov
insl
lret
mov
jle
sbb
cmpsl
inc
mov
xor
add
cltd
mov
add
cmp
mov
sbb
and
call
push
dec
test
adc
call
mov
lods
adc
cmp
jo
cmp
cwtl
xorl
and
jnp
test
lea
fs
divl
and
inc
les
mov
add
inc
mov
js
push
push
adc
and
and
aaa
jb
sub
stc
sub
cmpsl
inc
pop
das
insb
cmp
movsb
mov
xchg
cmc
jmp
xor
cmc
push
cmp
adc
paddsb
dec
sbb
xchg
adc
lret
rcr
mov
in
and
fcmovb
addr16
mov
jnp
jb
xchg
cs
add
add
adc
fcos
push
pop
dec
cmp
jmp
aaa
add
jle
cmp
outsb
out
lds
std
cmp
cmpsb
mov
mov
mov
mov
add
xchg
fstl
push
jp
sbb
orb
inc
add
test
stc
out
out
adc
push
out
adc
mov
jmp
inc
adc
sub
and
dec
out
lods
push
inc
jmp
fdivrs
jecxz
mov
jno
test
mov
popa
jb
leave
cmpsb
pop
xor
lcall
out
xchg
fwait
adc
cld
sub
ljmp
aaa
fcoml
imul
idivl
push
pop
loopne
mov
movaps
push
and
cld
jae
imul
jne
jae
stos
ret
push
test
cmp
push
stc
or
or
cmp
mov
jo
mov
inc
lret
in
push
hlt
and
mov
mov
fldl
icebp
mov
push
jp
mov
push
jmp
imul
pusha
out
mov
push
mov
inc
sarb
leave
pop
pop
dec
push
mov
and
sti
adc
outsb
les
dec
cltd
imul
test
cmp
xchg
push
push
out
in
sbb
mov
push
mov
sub
rol
aad
and
mov
mov
mov
rcr
std
jnp
cmc
or
add
cmpsl
pop
nop
movsl
movsb
xor
movl
mov
mov
pusha
mov
mov
jne
shrb
or
ds
in
sbb
mov
ds
dec
add
mov
addl
jb
insl
andl
jmp
dec
nop
movsb
jno
nop
xchg
hlt
push
in
push
push
mov
leave
loope
scas
sub
jecxz
aad
fs
int
jno
jg
hlt
js
imul
cmc
out
shrl
cmpsb
or
fbstp
inc
outsb
ds
dec
sub
and
sbb
mov
dec
push
cmpl
dec
scas
fcmovnu
nop
mov
cltd
enter
sub
aam
in
std
stos
inc
pop
inc
add
inc
hlt
in
cmp
mov
lock
xor
inc
lahf
sbb
pop
in
rolb
fcmovu
push
and
nop
sub
mov
inc
push
push
sti
daa
shll
notb
sbb
loopne
mov
jge
ret
lret
rcr
fsubrl
jle
arpl
mov
cmpsb
scas
orl
and
push
fcoml
loope
jae
imul
inc
in
cmpb
xor
clc
and
lods
arpl
loope
in
jecxz
pop
cli
nop
sbb
lods
call
inc
insb
enter
int3
xor
ds
in
lret
fidivrs
sbb
push
fldt
mov
outsl
fldcw
adc
and
subb
push
stos
inc
aaa
push
cmp
fcom
inc
in
xlat
push
sub
imul
lock
jne
xchg
test
in
out
int
mov
add
adc
xor
inc
cmpsl
andl
cmpb
rol
jno
or
xchg
and
and
mov
dec
sbb
outsl
push
or
dec
xchg
xor
fdivs
les
cmpsl
push
ljmp
adc
inc
int
in
mov
push
lea
fs
mov
repz
jp
sub
push
rcll
xchg
xor
add
push
cs
subb
enter
aam
adc
jecxz
xchg
insl
ljmp
mov
fadds
jle
push
inc
arpl
lcall
mov
xchg
bound
cli
lock
cmpsl
andb
jmp
jns
push
xchg
sbb
adc
push
and
cmp
aas
push
cmp
push
mov
aas
and
pop
and
nop
pop
and
scas
lods
lea
dec
clc
shll
pop
mov
push
imul
mov
fidivs
cmp
dec
in
push
imul
jnp
imull
xor
fwait
mov
xor
call
ret
cmp
sub
test
jmp
je
push
jp
jbe
pop
xchg
dec
lock
mov
mov
or
insl
adc
imull
or
mov
dec
mov
fs
call
and
mov
push
sbb
popl
lock
sbb
in
repz
aad
into
aaa
sbb
aad
popf
cld
stos
mov
sub
sbb
and
mov
les
leave
test
enter
cmp
add
cmp
push
scas
stos
pop
inc
pop
pop
add
xchg
add
sbb
ret
in
mov
fiadds
mov
inc
outsb
add
lret
inc
jne
sbb
mov
fsts
nop
repnz
ret
cmp
pop
mov
je
shl
mov
fimuls
fstpl
push
loopne
loopne
mov
cwtl
lods
xor
mov
mov
stc
adc
dec
cs
sbb
pop
in
or
dec
out
xor
fdivs
xor
movsl
pop
dec
pusha
in
mov
inc
pop
in
or
inc
cmp
loopne
decb
leave
neg
nop
outsb
out
jnp
jo
repnz
je
mov
fs
lds
add
je
aam
xchg
jecxz
jbe
mov
aaa
in
lahf
mov
in
loop
lsl
test
inc
sbb
aaa
mov
nop
in
popa
pop
dec
push
lret
inc
pop
sbb
mov
cmp
add
sbb
inc
loop
leave
stos
jecxz
ja
jbe
mov
bound
sub
dec
out
cmp
pop
rcl
loop
mov
push
sub
mov
push
out
push
roll
fbld
sbb
xchg
mov
scas
in
adc
push
push
add
int
pop
sahf
rol
adc
pop
int3
nop
inc
je
mov
aad
pop
jbe
aaa
pop
ret
cmp
jno
jg
adc
movb
ds
xchg
mov
mov
mov
outsl
sub
mov
test
scas
bound
jecxz
lret
rol
bound
andl
push
pop
inc
mov
dec
stos
cmpsl
ficompl
andb
push
mov
lret
outsb
adc
test
mov
aaa
out
and
xchg
dec
push
movb
int
cwtl
bound
pop
push
push
jbe
add
jmp
dec
sub
xlat
jo
ljmp
fidivs
xchg
loop
dec
gs
les
mov
lds
icebp
inc
adc
or
sbb
xor
inc
fs
lcall
hlt
mov
or
sbb
sub
stos
add
sbb
outsb
lret
add
scas
aas
mov
fwait
or
out
pop
push
pusha
scas
insb
add
add
fnstenv
mov
fcom
out
add
movsl
movsb
xchg
rol
xchg
dec
dec
pushf
in
mov
xor
xchg
dec
push
sbb
mov
pusha
enter
pop
cmp
incb
icebp
cmp
inc
cmpb
mov
mulb
mov
dec
clc
lods
xorl
adc
lds
pop
fisttpll
das
jmp
into
aad
adc
shl
jns
fwait
fs
stos
insb
daa
jp
xor
xchg
jecxz
movsl
mov
test
jecxz
and
not
inc
pop
adc
popa
orl
leave
out
sub
or
call
dec
mov
sub
test
xchg
inc
pop
jge
adc
bound
in
cs
jnp
test
cmpsb
jo
mov
int3
adc
popa
xor
stos
xor
adc
hlt
xor
pop
mov
aam
or
repz
dec
cli
rcrl
inc
add
sti
jno
fmull
cmc
inc
jae
sbb
mov
data16
lods
and
ret
repnz
adc
sbb
lret
jo
and
cmp
mov
sbb
add
gs
jecxz
xor
rol
dec
mov
adc
jb
in
shr
in
pop
mov
push
add
lods
fnstenv
push
pop
push
pop
mov
imul
stos
sub
mov
inc
aaa
das
and
dec
add
int3
mov
test
jne
lahf
jb
ret
cmpsb
fidivrs
mov
popa
mov
testb
cld
sbb
in
std
cmpsb
bound
mov
inc
lods
pop
dec
pop
sti
gs
les
cmp
subb
lcall
mov
aad
hlt
push
add
jns
adc
inc
inc
pop
inc
inc
scas
add
dec
adc
pop
push
push
xchg
dec
jecxz
push
add
mov
adc
movsb
sbb
aad
js
inc
cwtl
lock
arpl
jo
cwtl
fisubs
lds
add
dec
int3
cmc
xchg
mov
cmp
adc
loopne
out
xchg
jg
gs
enter
fisubs
and
test
lods
imul
pop
stc
mov
mov
pop
pop
shll
aas
pop
adc
xchg
arpl
in
es
xor
insl
inc
mov
mov
lcall
cmp
fimuls
rorb
jae
mov
jmp
test
or
out
pop
sbb
in
cmp
pop
mov
xor
mov
and
lret
mov
loope
mov
adc
lcall
push
sub
mov
mov
lea
out
sbb
fucom
packuswb
das
imull
leave
dec
loopne
dec
adc
push
mov
jecxz
pop
adc
inc
sbb
cwtl
xorl
jo
int3
push
dec
push
sub
adc
aad
iret
int3
je
cmp
and
outsb
jb
and
push
ja
pop
inc
loop
test
inc
cmp
ss
jmp
adc
and
pop
push
mov
std
cmp
mov
das
mov
mov
imul
pop
xchg
push
das
pop
mov
icebp
inc
mov
int
sub
dec
ljmp
push
mov
mov
stos
loop
dec
lea
jle
repnz
mov
jbe
inc
or
cli
cmp
lea
mov
idivb
jnp
icebp
sub
imul
or
pop
add
insb
inc
push
inc
mov
fsubrp
push
mov
jle
pop
jle
sub
fisubs
dec
dec
sbb
out
sub
dec
pop
cmpsl
daa
and
mov
cmc
mov
hlt
and
call
shl
dec
adc
push
dec
scas
jno
icebp
lea
cmc
xchg
ja
out
xchg
mov
je
out
and
stos
and
adc
and
push
lods
stc
pop
fwait
addb
or
and
jns
or
cld
xchg
jl
inc
imul
xchg
mov
pushf
bound
cmp
movsl
or
mov
ja
std
sbb
pop
jge
xor
xchg
jmp
jbe
pop
adc
sub
pop
ficomps
dec
mov
insl
sbb
pusha
fisttpll
adc
xorb
or
je
xchg
test
push
jg
and
xchg
sbb
xor
pop
ret
popa
mov
sub
mov
dec
lea
push
sbb
cld
ficomps
add
sub
jle
inc
cmpsb
stc
lcall
sahf
dec
lret
push
mov
enter
add
idivb
nop
cmp
and
push
sbb
push
mov
icebp
lods
in
push
outsb
jp
incl
lahf
aaa
sbb
pop
fcoml
xor
loopne
xchg
test
push
sub
test
lret
lret
cmp
imul
mov
dec
sub
dec
jbe
sti
mov
into
js
inc
ljmp
mov
and
scas
push
inc
ret
iret
int3
bound
and
adc
push
aam
loopne
loop
jecxz
adc
mov
call
ss
imul
in
mov
fxrstor
inc
push
stos
js
movl
lret
xchg
icebp
jnp
ljmp
inc
dec
xlat
repz
aam
shll
jno
cmpb
pop
or
cmp
or
inc
xchg
js
xor
push
das
jae
fwait
addb
push
outsb
mov
xchg
data16
or
jge
ror
rcrb
test
cld
std
je
add
lods
push
and
loope
ror
lods
inc
je
ja
into
iret
sbb
push
lret
adc
sub
cmp
loopne
inc
mov
test
pop
ss
insb
xor
jns
xchg
cmp
mov
scas
dec
push
mov
xor
add
mov
xlat
in
cmpb
das
clts
scas
adc
pop
jmp
sbb
mov
cmpsl
cmp
add
or
and
mov
xor
sbb
hlt
mov
ss
push
test
stc
test
mov
adc
push
mov
mov
test
ret
and
mov
out
cli
ljmp
leave
fwait
sar
jbe
pop
dec
adc
jbe
popf
sub
mov
push
movsl
inc
dec
ljmp
lea
or
lds
push
iret
xor
xchg
mov
pop
and
ds
dec
sub
hlt
imul
inc
icebp
pop
scas
sbb
dec
dec
cmp
loope
sbb
add
mov
lock
cmp
dec
cmpsb
shr
mov
or
repz
data16
addr16
test
sti
or
lods
jo
inc
aam
xchg
fildll
or
out
add
xor
fdivrs
adc
dec
xchg
das
xchg
sbb
fisttpll
pop
mov
mulb
jns
xchg
xchg
test
sti
cmp
out
ret
sti
or
fs
sub
jmp
in
jecxz
xchg
push
push
add
xchg
cmpsb
pop
lea
mov
in
and
xchg
mov
jo
hlt
adc
cs
lahf
add
mov
dec
xchg
scas
jp
aam
cli
int
sbb
faddl
int3
mov
cmpb
aaa
cmpsb
dec
mov
ja
sti
stos
fs
popa
cmp
test
and
jne
xchg
jl
stos
lds
popf
fldl
aas
repnz
scas
mov
je
pop
push
popa
mov
aam
je
loop
dec
lret
lahf
jnp
dec
and
in
add
sahf
xchg
hlt
jp
dec
mov
int
sbb
mov
inc
jecxz
call
lret
loope
enter
sbb
aad
std
pop
bound
inc
or
pushf
out
cmp
loop
dec
pop
xchg
adcl
xchg
dec
into
cmc
mov
mov
pushf
insl
sbb
sahf
stos
pushl
jns
add
cli
aad
movsb
mov
push
pop
lahf
pop
cmp
loopne
sbb
dec
movsb
shlb
incl
sbb
mov
fldenv
movsl
sti
and
xor
xchg
push
xor
das
outsb
xchg
das
daa
mov
mov
aad
cmp
outsb
daa
scas
lods
stos
xlat
sub
lock
cmpl
movsl
xchg
xor
mov
mov
je
dec
push
outsl
and
out
bnd
in
dec
fwait
add
mov
mov
frstor
fcomip
sbb
xor
stos
add
adc
xchg
xor
sub
inc
push
cltd
add
cmp
cmpsl
mov
pop
cltd
movsb
loopne
xchg
sub
sahf
lods
mov
jno
cwtl
xchg
sbb
push
lahf
sub
adc
enter
popa
idiv
dec
pusha
out
int
inc
push
frstor
pusha
pop
dec
push
imull
stc
xchg
outsb
lods
loop
shr
nopl
push
or
mov
movb
sbb
dec
subl
pop
mov
pushf
int
test
out
add
sbb
icebp
mov
sub
rcl
jbe
mov
pop
clc
dec
enter
sub
in
in
fisttpll
cmc
adc
outsb
adc
gs
adc
cmp
mov
pop
mov
mov
outsb
xor
subl
xchg
dec
dec
adc
js
sbb
jle
enter
aaa
es
or
sbb
mov
adc
aad
mov
push
jl
out
inc
lea
pop
sub
pop
testl
insb
pop
dec
sahf
jne
inc
mov
roll
add
cmpsb
leave
mov
mov
inc
and
push
int3
cmp
adc
lea
mov
mov
mov
push
orl
push
gs
sar
xchg
int3
mov
jmp
cwtl
sbb
mov
popf
aas
sub
cwtl
test
mov
out
js
adc
cmp
pop
jo
or
jp
sbb
fidivs
addr16
sbb
jl
fiadds
mov
repnz
and
jns
dec
xchg
in
sbb
test
lahf
lods
sub
xchg
or
adc
in
into
dec
into
lods
addr16
outsl
int
cltd
mov
pop
scas
push
sbb
and
arpl
test
cld
or
inc
mov
inc
in
int
or
adc
out
fnsave
mov
das
push
dec
es
mov
cs
push
xor
mov
xlat
and
ja
nop
lods
je
scas
div
shrl
mov
fnstcw
les
sub
mov
dec
mov
mov
in
bound
xchg
lds
pop
mov
cltd
push
imul
loopne
stos
xchg
xor
outsb
mov
nop
cmpb
ljmp
movsl
mov
das
ret
push
jmp
inc
cmp
dec
jnp
daa
push
push
or
movsb
insb
sbb
xchg
fsts
add
xchg
lret
and
add
fldpi
pop
xchg
mov
lea
mov
and
inc
push
lock
jg
loopne
push
adc
lds
lods
mov
movsl
je
push
lret
push
mov
shlb
jp
mov
add
aad
les
cmp
add
fs
test
dec
outsb
mov
xor
or
inc
leave
xchg
out
push
test
xchg
cmp
call
mov
pop
jno
flds
sub
shll
mov
divl
and
call
jg
rcl
fisttpl
pop
jo
push
and
lods
call
mov
aam
cmpsl
fldl
xor
or
out
dec
cmc
mov
sbb
add
call
jecxz
jg
xchg
jae
push
imul
add
into
enter
inc
jne
sti
fistl
nop
dec
cmp
adc
jbe
cmp
test
shll
push
int3
add
jb
lahf
and
dec
into
cs
or
adc
in
sbb
push
hlt
mov
es
cld
subl
aad
xchg
inc
stos
dec
test
push
mov
mov
jg
ljmp
cmp
add
mov
sub
and
data16
xlat
xchg
add
aad
sub
loop
add
inc
or
mov
pop
repnz
pop
adc
ljmp
push
jo
mov
inc
test
in
push
mov
int3
jle
in
mov
mov
push
insl
sbb
std
add
xchg
cmpsb
out
clc
adc
xor
and
adc
jge
test
ja
mov
lret
mov
fcmovu
dec
sbb
dec
adcl
jge
shlb
pop
cmp
inc
in
adc
push
ret
jl
aad
jge
fwait
jmp
dec
xchg
push
lods
mulb
mov
jmp
inc
inc
cs
jg
int3
lret
aad
flds
orl
loopne
or
xchg
jns
pop
ss
and
shlb
stos
shlb
sub
jle
sub
cmpb
dec
mov
mov
and
xchg
comiss
mov
mov
pushf
add
dec
pop
lock
or
or
or
test
out
lar
cmc
mov
fidivrl
jae
push
pop
mov
sahf
mov
js
ja
and
xor
xor
bound
and
mov
lock
inc
into
sub
pop
mov
movsb
dec
push
lods
mov
ss
ljmp
push
add
inc
repz
pop
cmp
sub
mov
add
mov
push
test
jp
xorl
das
xor
jo
sarl
imul
push
mov
sahf
ja
jp
cmpl
outsl
wbinvd
fcmovb
std
addr16
jae
adc
inc
aas
pop
sub
cltd
xlat
cld
incl
pop
arpl
out
adc
in
jmp
push
or
jecxz
add
inc
rclb
sbb
add
sbb
adc
mov
jl
into
cmp
cwtl
xor
sbb
jns
jno
je
xor
push
lcall
jns
adc
or
stos
sti
ret
movsl
aam
stc
aad
int3
jbe
adc
outsl
fistpl
test
je
cltd
and
inc
pop
test
dec
jo
mov
sub
daa
push
sbb
dec
xchg
ds
mov
lcall
subl
cmc
push
cmpsb
mov
lock
sub
pop
mov
mov
sbb
xor
fadds
stos
ret
mov
inc
or
out
mov
jp
movsb
sub
repnz
push
jl
aaa
iret
pop
adc
dec
iret
addb
test
stos
jmp
pop
sti
pop
loopne
outsl
fsubrl
inc
in
faddl
xor
xor
mov
mov
dec
imulb
fdivrs
cmp
jbe
push
in
add
pop
sub
loop
xchg
or
sbb
nop
out
jmp
sbb
cmp
push
and
dec
lock
mov
xchg
dec
pushf
jle
ret
or
fistl
std
pop
shr
inc
xlat
cmpsl
in
enter
iret
andb
push
jne
mulb
inc
fs
dec
leave
pop
ret
jge
add
inc
ja
inc
je
add
scas
jo
in
mov
fs
fdivl
jl
test
cmp
in
mov
xor
inc
jno
repz
push
or
add
or
xlat
dec
js
jbe
jmp
hlt
test
sbb
imul
js
and
xchg
or
aas
ret
fists
sub
sub
sbb
mov
sar
xor
js
xor
stc
xor
sbb
jp
insl
push
xor
scas
sub
xchg
dec
inc
sub
dec
jg
or
stc
sub
stos
pushf
sbb
repnz
adc
int3
mov
adc
mov
adc
xor
sbbb
and
pop
fldcw
aad
push
pop
xchg
les
dec
test
fs
adc
cltd
pop
clc
mov
cmp
loop
and
jne
xor
cmpsl
fs
popa
mov
imul
out
addr16
adc
mov
push
imul
mov
data16
out
mov
out
mov
bound
push
xchg
aaa
lret
ret
lcall
scas
push
sbb
cmpsl
in
sub
mov
add
je
ja
inc
pop
mov
jb
xor
call
ret
mov
push
jge
push
or
subb
out
pop
rcr
aaa
xchg
test
xor
jo
stos
xlat
jg
fucomp
pop
cmp
jae
sub
rcll
xor
lods
push
ficoms
stos
insb
mov
push
imul
sbb
mov
pop
pop
and
mov
inc
xchg
mov
bound
popa
cmpb
sub
push
jge
pop
cmp
jb
dec
cmpl
test
adc
repz
pop
cwtl
hlt
out
or
insl
std
out
std
movsb
xchg
fstpt
xor
push
aam
push
cli
arpl
mov
lahf
test
cmpl
xor
fisubrs
mov
mov
adc
sub
mov
adc
push
rcll
jbe
jno
outsl
lahf
push
add
cmp
mov
jb
call
cmpsl
lods
jmp
sbb
test
stc
les
into
cmpsl
xchg
js
inc
repz
hlt
sub
xor
call
popa
cmc
movsb
or
les
or
neg
xor
cwtl
test
add
pop
adc
mov
sbb
push
test
lcall
loop
mov
inc
ds
jne
pop
or
push
cmp
adc
dec
and
push
jo
adc
xor
test
rcl
repnz
mov
pop
xchg
pop
mov
lods
jbe
mov
adc
jne
xchg
add
std
pop
aam
clc
pop
sti
lret
adc
cli
sbb
sbb
cmp
or
ss
push
fisttpl
outsl
out
ss
sbb
sub
jae
and
ficoms
jmp
pop
sbb
inc
daa
clc
cmp
push
iret
sub
inc
jne
xchg
dec
stos
sub
pop
lea
xchg
xchg
xlat
testb
sar
hlt
sub
fsubrp
jmp
pop
xchg
jae
add
ret
test
or
cmpsb
scas
adc
repz
es
outsb
or
mov
icebp
sbb
or
das
dec
mov
loope
out
sbb
test
push
outsb
sub
ret
inc
cs
dec
sbb
lock
test
into
daa
pop
mov
mov
xchg
je
insb
lds
and
add
add
add
movsb
shl
mov
out
push
pop
or
daa
mov
cwtl
mov
and
xor
jecxz
das
push
sahf
nop
pop
or
out
repnz
cltd
add
push
xchg
push
or
push
imul
stos
cmc
mov
call
stos
imul
js
shll
push
nopl
ret
xlat
jo
xchg
ja
mov
icebp
mov
pop
insb
test
bound
jb
cwtl
call
lcall
push
das
insl
or
cmpsb
add
insb
retw
cmp
jp
pop
divb
add
jae
mov
jge
xchg
adc
hlt
inc
jge
ret
xchg
lret
lcall
pop
call
outsl
sarb
and
pop
scas
outsb
jmp
cltd
scas
push
repnz
mov
push
add
or
movsl
clc
push
cmpsl
add
lock
push
int3
cli
je
and
pop
jno
lock
sub
xchg
iret
sar
add
loopne
xchg
pushf
or
adc
int3
add
xor
fiadds
inc
fcmovnu
shl
cmp
inc
mov
in
jno
pop
dec
cld
pop
movsl
mov
inc
jns
mov
iret
add
xor
inc
dec
shl
or
outsb
fs
stos
ljmp
push
xchg
rcr
gs
inc
add
dec
pop
xchg
rcll
push
idivb
ret
dec
es
xchg
dec
clc
jns
mov
mov
inc
aas
lret
xchg
add
or
pop
pusha
inc
pop
jne
inc
pop
std
sbb
sti
inc
push
roll
jmp
dec
mov
jge
and
lods
popa
gs
cmp
adc
int3
jmp
pop
sub
sahf
pop
pop
push
clc
stos
nop
and
inc
sarb
fistl
cmpsl
out
adcl
cmp
ficompl
mov
not
mov
mov
fwait
loop
mov
inc
jecxz
lcall
ret
daa
adc
cmp
xor
jnp
add
and
rcrb
pop
adc
add
lock
or
dec
sahf
add
mov
imul
arpl
cmpsb
xor
mov
xchg
xchg
or
jo
jnp
xor
lods
clc
add
or
lods
mov
push
ret
pushf
mov
push
inc
sub
cltd
or
xchg
outsl
xor
lods
and
pushf
loop
mull
add
out
mov
add
inc
mov
ror
or
out
cmp
add
jns
scas
mov
cmp
ret
push
fsts
add
addr16
clc
movsb
mov
jp
dec
pop
and
pop
pusha
aas
lcall
push
jae
xor
sub
cmp
imul
bound
mov
cltd
lock
xor
ficoms
aaa
cmp
sti
loope
xor
adc
lods
movb
testl
jns
lss
outsl
popf
adc
out
adc
and
pop
out
adc
sbb
jp
push
inc
push
mov
nop
ss
es
mov
sbb
push
lock
aad
sbb
mov
lea
test
inc
aad
sub
dec
lret
mov
jb
xor
adc
mov
push
push
push
xchg
adc
xor
adc
loop
addr16
insl
inc
adc
or
invlpg
pop
and
popa
mov
int3
out
das
sub
in
add
push
add
cmp
popf
lret
andb
xchg
sbb
sbb
fistl
sbb
mov
stc
push
aas
mov
adc
push
inc
sub
test
lcall
push
mov
cmp
mov
imul
adc
adc
pushf
or
sub
mov
adc
xchg
jecxz
jo
xor
out
jl
mov
jmp
sbb
fimuls
adc
mov
test
dec
xchg
xchg
push
xchg
out
aam
dec
add
jno
push
rcrl
out
faddl
retw
xchg
mov
or
lds
jno
mov
push
clc
test
xchg
pop
xlat
add
mov
and
sar
imul
ljmp
or
inc
or
dec
popa
out
sub
popf
pop
add
adc
ljmp
mov
sub
hlt
add
fucomp
jbe
out
out
sarb
stos
insb
sti
lahf
sub
add
into
xor
and
das
sbb
mov
je
jg
inc
mov
push
rcrl
mov
fistps
xor
fildll
out
cmp
lea
jno
sbb
mov
aas
inc
push
aam
inc
or
mov
outsl
push
lea
add
ljmp
lds
fnsave
sub
push
cmp
dec
cltd
inc
pop
jp
je
cltd
xchg
and
gs
sub
je
divb
inc
int3
inc
jae
aam
mov
insb
push
xchg
xchg
mull
pop
inc
mov
pop
jmp
cmpl
push
sbbb
and
inc
inc
push
dec
adc
arpl
into
in
bound
lds
lods
add
stos
test
enter
sub
inc
cmp
adc
jnp
dec
aad
inc
push
cli
ljmp
cmp
data16
mov
repnz
incl
lret
inc
repnz
push
mov
test
and
push
pusha
xlat
sbb
loope
jns
sub
mov
mov
inc
pop
loop
cmpb
popf
push
icebp
out
repz
aaa
mov
push
pop
jl
dec
mov
pop
arpl
add
pop
ret
mov
lea
aad
inc
mov
sbb
out
xor
lret
pop
jg
xor
jecxz
jbe
or
test
repnz
lods
mov
jecxz
iret
cld
int
xor
xchg
xor
cwtl
sbb
enter
les
cmpsl
mov
stc
mov
pop
adc
push
rcr
or
adc
test
mov
mov
or
ljmp
das
mov
test
jno
rcrl
mov
movsb
hlt
icebp
xor
sub
std
pusha
mov
clc
xlat
mov
pop
cld
push
sub
dec
jp
xor
and
add
jmp
push
ja
or
out
mov
enter
push
gs
sahf
push
jns
ret
xchg
xchg
jo
pop
adc
adc
test
or
xchg
fwait
push
jmp
mov
push
mov
scas
mov
pusha
mov
push
call
mov
mov
repnz
scas
iret
xchg
ret
and
stos
fisttpll
or
mov
jbe
int
daa
je
or
leave
push
lods
jmp
add
cmp
iret
sub
cmpsb
push
sahf
pop
and
lret
ljmp
jge
jo
mov
pop
outsl
mov
mov
push
sbb
push
jae
rcl
pop
and
xor
push
sbb
lock
pop
js
aas
lock
inc
dec
rclb
mov
loope
sahf
mov
shrd
sbb
rcll
das
dec
or
sbb
jle
or
jnp
cli
jg
mov
es
imul
xor
jnp
or
or
mov
imul
in
dec
jns
cmc
aam
xchg
mov
xchg
std
adc
scas
xchg
xor
jo
dec
jae
jle
test
xchg
andb
dec
add
sub
testl
lea
mov
cs
sub
aad
mov
or
insl
or
movsl
les
sbb
and
enter
sub
je
outsl
mov
ds
pop
jge
jne
jl
in
xchg
test
pop
lret
aad
sahf
gs
mov
xor
std
jbe
cs
fistps
mov
out
test
aas
or
lret
mov
push
lret
orl
sub
hlt
clc
mov
jo
fldenv
cmp
xor
cmpb
jecxz
fbld
lods
cwtl
add
cmp
cmp
adc
lods
je
imul
cld
pop
push
mov
mov
xchg
xchg
lods
jb
fcmovu
xchg
insb
push
loopne
mov
fwait
sub
iret
lods
movsb
cmpsl
sub
cmovp
xchg
sbb
testl
xor
in
jmp
lahf
ljmp
fsubrl
lret
mov
xchg
and
inc
mov
outsb
cmp
jbe
push
sbb
dec
sarb
xor
sbb
loopne
bound
aaa
inc
add
pop
bound
rcl
cmp
fsubs
enter
sbb
push
mov
adc
xchg
sbb
jmp
jo
test
mov
icebp
pop
xchg
rolb
xor
cld
sti
jmp
cmc
mov
lds
mov
mov
mov
inc
and
in
icebp
jmp
imul
xor
fs
iret
adc
arpl
mov
jge
and
inc
sbb
scas
iret
ljmp
fldt
jno
xchg
insb
ds
jg
cli
lea
jb
insl
cmp
adc
enter
cwtl
dec
or
push
pop
lods
popa
cmp
enter
sbb
adc
in
or
dec
sub
leave
sahf
outsb
ljmp
in
or
pushf
pop
imul
jmp
and
jns
jne
jb
std
mov
out
mov
enter
outsb
out
stos
pop
ficoml
insb
xchg
iret
aad
mov
inc
and
in
fwait
xchg
cmp
psubd
jb
test
repz
divl
cli
pop
push
cmpsl
sub
lahf
shll
lods
popf
cmpsb
in
xchg
add
xchg
mov
or
cmp
btr
add
and
mov
add
push
cmpsb
rorb
mov
cmp
test
mov
insl
inc
popf
mov
lret
jno
inc
popa
adc
mov
cs
cmp
std
inc
push
rclb
nop
test
fiaddl
jne
xchg
ljmp
xchg
stc
mov
and
out
or
sti
cmc
hlt
add
test
cmpl
push
sbb
dec
mov
cmp
imull
adc
mov
pop
mov
in
cmpsb
push
adc
je
clc
jg
xchg
xor
add
fdivs
js
dec
push
xlat
aas
xchg
mov
xor
xor
dec
arpl
scas
adc
sub
pop
lods
xchg
mov
mov
adc
loopne
mov
dec
cs
test
sarb
or
pop
andb
push
aam
dec
pusha
outsl
add
fisttpll
xchg
imul
ret
popf
imul
ja
push
push
lahf
add
aaa
cmp
and
daa
and
repnz
lds
dec
dec
sti
call
pop
add
mulb
push
cmpsb
cmp
or
cli
pop
pop
sub
inc
in
outsb
lea
push
ja
mov
dec
ret
dec
mov
aas
sub
sbb
in
xorl
or
fwait
js
ja
jnp
xor
out
outsl
xchg
pushf
xchg
push
mov
lahf
sti
repnz
adc
jns
lcall
fnstsw
lret
lret
jbe
push
push
jae
out
leave
shl
gs
lret
sahf
pop
imul
rclb
fistl
popa
adc
sbb
sub
mov
in
jo
cmp
shr
adc
jg
xchg
jg
movsl
push
stc
mov
xchg
shll
lret
xor
test
pop
xchg
sti
adc
mov
in
xor
pop
mov
pop
adc
movsl
fsts
xor
lods
ret
xor
jle
aam
pusha
pop
xor
shr
es
es
push
cs
daa
pop
cwtl
je
cmp
jb
pop
mov
mov
test
fisubrs
ds
in
adcb
aam
ficoml
mov
lds
stos
fists
cmp
scas
xor
ret
das
ret
mov
dec
lret
sbb
cld
jae
cmp
jno
mov
bound
xor
add
roll
rorl
jns
rcr
sub
add
inc
pop
mov
orl
sbb
ljmp
daa
inc
mov
stos
sub
insb
cltd
in
scas
imul
vpmulhuw
jbe
mov
test
dec
outsb
xchg
dec
mov
jae
adc
cmp
lock
repz
xor
loopne
frstor
adc
leave
je
add
clc
push
lret
mov
popf
cmp
insb
push
shl
sub
ret
das
cmp
jae
fwait
mov
jo
or
mov
sti
icebp
mov
stos
sbb
aas
mov
mov
xchg
clc
mulb
lcall
sar
incb
cmpsl
sbb
inc
ja
mov
inc
das
adc
cmp
push
fwait
lret
ret
inc
mov
jmp
lea
in
arpl
test
dec
repnz
inc
hlt
xor
iret
cmp
xchg
push
and
jbe
mov
lods
bound
pushf
loope
mov
jecxz
pop
mov
imul
and
insb
lahf
jp
inc
cmp
lods
subb
aas
and
pop
dec
gs
fld1
mov
fadds
push
fistl
mov
sahf
mov
enter
rol
fstps
mov
test
fidivs
jmp
les
rcll
std
mov
mov
in
enter
push
outsb
pop
push
xchg
and
cmpsl
mov
cld
imul
xor
enter
pop
sahf
push
rcr
push
rcl
bound
sbb
int
xchg
js
or
xchg
cmp
inc
imul
xchg
cltd
add
jge
cwtl
scas
roll
mov
shrl
jecxz
jg
mov
cltd
fwait
push
push
pop
bound
pop
mov
cmp
icebp
dec
fldcw
lret
out
jp
inc
mov
xchg
push
push
popf
in
xchg
fwait
mov
cli
test
sub
ljmp
loop
dec
ljmp
les
jne
data16
pop
dec
xchg
mov
aam
cli
popf
sub
pop
roll
outsl
push
pop
js
inc
fsubl
jo
sub
mov
adcb
jo
mov
add
xchg
stos
xrelease
subb
xchg
adcb
mov
mov
cmp
mov
sahf
mov
jns
repnz
mov
inc
lret
sub
ja
push
shlb
xchg
fcmovne
jecxz
outsl
xchg
ret
mov
cvtpi2ps
mull
mov
cltd
pop
fsts
dec
fwait
out
sbb
lcall
sahf
inc
or
bound
scas
das
fimuls
and
ficoml
or
pop
mov
mov
xchg
inc
cmpsl
sahf
lcall
test
ror
addl
mov
lods
lgs
add
cmp
or
mov
rcrb
jb
cli
insb
jmp
je
call
xchg
sub
iret
vpcmpeqb
ljmp
adc
mov
jae
aas
rolb
ss
insl
or
sbb
sahf
ds
xchg
cmp
dec
and
push
xor
ss
push
sbb
push
cld
push
cmp
pop
dec
mulb
jmp
mov
data16
sbb
push
movsb
mov
sub
repz
mov
neg
out
mov
aam
adcb
mov
jge
mov
jle
int
outsb
in
es
in
xchg
bound
sbb
enter
mov
ret
pop
jns
jmp
mov
popa
mov
pushf
pop
jbe
xor
jne
jno
adc
mov
adc
lods
aad
xor
dec
xchg
dec
test
add
daa
das
mov
or
adc
cld
sti
rcl
sub
pushf
je
cmp
pusha
sarb
xlat
and
mov
mov
adc
les
mull
clc
xor
cmp
dec
mov
test
adc
pop
mov
adc
shl
scas
pop
dec
jbe
inc
sub
inc
xor
push
push
inc
in
inc
jne
in
mov
push
das
jbe
add
pop
and
fstpl
dec
jmp
clc
pusha
loop
sub
dec
aaa
arpl
jg
mov
loope
and
aad
push
dec
fisubl
cmp
adc
adc
or
popa
clc
mov
sbb
clc
cld
xchg
xchg
bound
dec
push
pop
cmp
mov
int3
xchg
test
out
ret
repnz
cltd
mov
sbb
dec
movsl
xor
xor
dec
jmp
cmp
dec
je
lods
push
mov
inc
fbstp
add
mov
xchg
sbb
sub
test
ror
xchg
push
mov
lret
sarb
icebp
adc
mov
dec
das
cwtl
and
sarl
dec
mov
cltd
pop
jbe
out
gs
clc
scas
xchg
rcrl
and
imul
out
enter
imul
xor
cmpsl
scas
mov
jno
dec
mov
pop
jmp
shl
mov
mov
mov
dec
mov
adc
daa
mov
xor
mov
xchg
shl
jnp
stos
bound
int3
mov
clc
sub
mov
into
inc
and
dec
loopne
mov
push
icebp
jg,pn
push
das
add
loope
push
popa
outsl
cmp
stos
je
imul
or
addr16
sar
fsubp
jmp
lret
js
aad
sbb
outsb
mov
push
mov
cmpsb
sahf
xchg
xlat
sarb
inc
data16
sub
shl
test
pop
xor
sub
ficoml
aaa
movb
loop
test
sbb
lret
lock
xor
jmp
mov
xchg
loope
or
daa
lahf
or
jecxz
xchg
fidivs
mov
bound
or
fadds
je
mov
xchg
imul
cld
sub
mov
pop
lahf
inc
movsb
data16
dec
jl
stos
inc
daa
in
sbb
jl
clc
mov
inc
popa
xchg
popa
movsl
sub
push
xor
add
imul
in
insb
jb
fadds
jg
add
xchg
xchg
mov
cmp
push
sub
test
pop
jecxz
push
xor
ret
push
push
into
aad
push
fcmovb
xor
pop
popf
xchg
add
sub
sbb
sbb
addr16
adc
mov
andl
sbb
xchg
inc
mov
pop
pop
jno
aad
mov
mov
and
dec
and
add
and
imul
cmpsb
rorb
dec
mov
ja
xchg
dec
add
out
mov
hlt
jno
outsb
xor
andb
mov
add
andb
aas
jno
adc
fidivrs
lret
sub
mov
jns
es
lret
xor
or
mov
mov
mov
add
scas
sbb
cmp
imul
mov
call
push
cmp
divb
test
fildl
loop
out
rcl
outsl
aam
in
sbb
mov
adc
add
mov
inc
cmpl
sti
lret
sub
movsb
jmp
bound
ja
adc
lea
xor
dec
dec
out
add
stos
sub
out
jmp
add
iret
icebp
sbb
fistpl
mov
enter
ficoml
fwait
sub
scas
ss
rcrb
pop
or
fdivrp
pop
jae
inc
mov
fiaddl
or
out
mov
bound
rolb
push
push
sarl
inc
adc
cmp
pop
lds
stos
sbb
int3
mov
pop
rcr
popa
testb
sbb
xor
xchg
pop
pop
push
leave
jne
dec
repnz
mov
hlt
fwait
inc
in
jg
mov
xor
aam
repz
lret
pop
scas
push
add
int
lods
repnz
dec
inc
mov
cmp
idivl
pushf
adc
push
lock
cld
jg
mov
into
aas
xchg
or
orl
int3
imul
add
dec
add
cmp
jmp
inc
test
xor
fadds
xchg
mov
mov
insb
jecxz
sahf
sub
mov
aad
dec
xor
shrb
push
nop
jle
fists
add
adc
sahf
bound
cmpb
jb
flds
arpl
push
aas
ja
add
pop
popa
add
or
clc
pop
jno
std
cli
jge
std
jno
jge
pop
jl
imul
mov
pop
repz
movhps
sub
imul
insb
dec
nop
std
pop
lea
xor
lods
mov
movsl
js
idivl
or
in
sub
cmp
jb
and
jle
cli
test
dec
lds
mov
scas
rcrb
adc
jg
fwait
ss
sahf
into
mov
push
cmp
pop
mov
push
xorb
rcr
nop
pushf
mov
dec
js
mov
movsl
add
scas
sub
dec
push
xlat
cmp
cmp
mov
pop
sbb
and
pop
test
mov
inc
mov
cmp
pop
and
jb
sub
vpsllq
mov
stos
push
mov
scas
mov
and
or
sub
call
push
xor
in
fnstcw
loope
sub
pop
sub
sbb
push
dec
daa
pop
push
clc
sub
les
stc
pop
mov
push
mov
pusha
repz
scas
inc
hlt
or
std
cmp
jmp
jp
add
or
test
push
xor
jno
pop
jecxz
cmp
cmp
cmpsl
xor
rep
dec
scas
jb
aaa
jmp
ret
scas
aas
adc
inc
loope
sub
in
test
xchg
xchg
pushf
loop,pt
cmp
push
cmc
jecxz
repnz
push
jne
aas
pop
imul
pop
sbb
pusha
test
dec
sub
outsb
inc
xchg
dec
or
js
or
xlat
and
mov
incl
mov
jae
nop
fcompl
pop
and
dec
cmp
pop
rolb
nop
rcr
mov
popf
fwait
je
ljmp
imul
sbb
dec
es
enter
pusha
adc
in
mov
lcall
shrb
cld
push
dec
mov
xor
add
xor
push
add
sub
sarb
xor
pop
ss
inc
aaa
mov
push
xor
pop
dec
push
outsl
das
ds
cmp
movsb
out
loop
dec
movl
into
int3
or
repz
pop
lods
jl
in
insb
add
lods
xchg
xor
cs
xchg
int
cwtl
je
lock
ss
cld
fadds
inc
out
jge
mov
ds
roll
cmc
pop
outsl
lods
std
dec
rol
cltd
stos
scas
sti
xchg
add
add
dec
int3
loope
jo
push
dec
push
lds
dec
or
sub
cld
hlt
leave
aam
mov
mov
mov
sti
ret
lcall
jb
into
lock
jmp
pop
push
mov
pop
aad
pop
mov
pop
mov
shlb
mov
sbb
aaa
iret
pop
dec
mov
inc
inc
mov
popf
call
xchg
popf
inc
js
push
out
outsl
dec
jp
stos
sbb
ret
aad
imulb
xor
scas
nop
inc
out
ds
dec
movsl
shl
fnstcw
mov
xor
ja
imul
ret
dec
mov
inc
mov
sbb
and
mov
ss
cld
push
sbb
sub
and
pop
neg
push
xor
ds
notl
popf
cltd
and
push
jl
dec
outsl
aaa
test
xchg
mov
push
jno
int
xor
jno
mov
mov
lods
dec
mov
aad
out
sbb
pushf
mov
rep
shrl
movsb
test
bound
push
lock
pop
fnstcw
push
bound
js
and
lds
rolb
push
aaa
xchg
test
dec
fstp
fidivs
out
sub
xchg
mov
pop
jg
cmpl
icebp
test
nop
push
add
lea
adc
mov
adc
mov
mov
outsl
pop
pop
lods
cmp
push
in
push
aas
push
sti
pop
pop
in
lods
pop
jne
lds
fisubrs
mov
shlb
ret
js
jmp
push
lret
mov
mov
cwtl
adc
orl
sub
scas
cmp
mov
test
mov
jo
rolb
rcll
and
cmp
fiadds
add
jno
add
and
sub
add
sbb
incl
sbb
pop
cmp
outsb
cld
lods
in
xlat
movsb
inc
dec
inc
sbb
or
in
sbb
push
es
adc
ret
nop
add
xor
scas
cmpsb
cli
movsb
mov
cmp
dec
ds
iret
movl
test
pop
mov
lods
shrb
mov
in
or
out
sar
xchg
aad
push
mov
adc
cmp
adc
clc
push
mov
pop
leave
xlat
push
and
jnp
xchg
into
jp
negb
pop
int
pop
jmp
mov
mov
fmull
in
xchg
call
sub
rcr
addr16
cltd
xlat
add
xchg
ret
call
sub
push
mov
mov
imul
aad
xlat
movsl
lds
and
mov
push
andb
shr
push
in
rolb
nop
sbb
in
outsb
mov
jae
mov
xchg
popf
je
outsl
push
adc
nop
adc
shll
loope
or
mov
mov
sbb
mov
in
add
insb
or
jg
sbb
mov
jb
dec
loope
push
xlat
mov
push
mov
popf
mov
lret
hlt
lods
xchg
aad
shlb
push
sub
loope
or
dec
inc
xchg
pop
or
imul
mov
mov
dec
sub
xchg
cs
push
or
jmp
sbb
jl
enter
data16
icebp
jbe
daa
cmp
pusha
push
jb
out
mov
stos
hlt
ja
scas
xchg
push
add
pop
sar
sub
gs
jle
mov
cmp
sub
mov
xchg
adcl
or
or
aad
movsl
clc
sbb
push
inc
dec
mov
ret
mov
jo
mov
fidivs
mov
insb
not
cwtl
add
mov
fs
pop
movsb
jne
jmp
frstor
mov
stos
js
cmp
jae
dec
sbb
xor
push
dec
ds
push
sub
test
xchg
fsubr
or
xor
aam
popa
or
fnstcw
iret
push
xchg
dec
shr
shll
andnps
jecxz
aas
or
inc
scas
and
jbe
popf
cmp
xor
sbb
xchg
jnp
dec
mov
add
fistps
mov
mov
aaa
andl
ds
cmc
les
std
adc
push
mov
lret
inc
mov
push
mov
mov
aad
jnp
jl
lea
dec
lea
out
jle
push
pushf
push
mov
inc
add
lahf
xchg
loop
aaa
out
stos
bound
mov
jge
es
lret
inc
test
mov
nop
cmpsl
push
jo
aaa
push
xor
ds
jge
pop
inc
mov
inc
insl
mov
psubb
push
add
add
xchg
push
mov
shlb
mov
in
loopne
pop
ret
shrl
shll
fdiv
cltd
fdiv
mov
and
cmpb
dec
xor
dec
mov
lock
dec
xchg
pushf
adcl
xchg
scas
decb
popf
fiadds
fldl
ja
das
jns
inc
nop
sub
dec
mov
lds
or
inc
pop
sub
xchg
xchg
sub
mov
es
aaa
std
mov
mov
aaa
mov
pop
sub
nop
push
mov
sarb
dec
xor
test
fistpll
push
dec
std
jno
and
outsb
or
js
cmp
cltd
jne
pop
sub
jb
mov
mov
aad
repnz
and
cmp
inc
jbe
addr16
lret
xchg
jmp
sub
sub
fcomi
xchg
stc
push
lcall
ja
lahf
add
jl
lock
and
mov
push
mov
cmp
mov
jns
mov
std
xchg
inc
jmp
inc
mov
mov
and
js
das
out
dec
andb
out
fsin
fldpi
and
jmp
rcrl
mov
and
jle
inc
dec
lds
pop
xchg
add
rorb
roll
adc
or
orl
jo
mov
xchg
push
arpl
cs
es
add
sub
mov
enter
xchg
popa
fs
test
push
jno
int
jae
cs
bound
aad
cmp
pusha
repz
test
xor
mov
push
adc
call
sahf
in
leave
ljmp
cmp
push
mov
shlb
fsqrt
adc
xlat
cmpsl
push
fisttpll
ret
das
sbb
cltd
jo
aam
mov
jecxz
pop
jno
rcrb
nop
insb
js
rorb
sbb
mov
fs
add
pop
lds
mov
inc
adc
xchg
xor
test
ljmp
or
dec
mov
xchg
cmpsb
scas
pop
xchg
rorl
lods
out
cli
stos
or
cmpsb
sahf
mov
pop
push
outsb
insl
push
stc
sbb
mov
daa
pop
outsl
mov
mov
cwtl
xchg
add
push
jg
xchg
int3
add
int3
in
sub
loopne
pop
pop
jg
add
dec
cmp
and
jge
mov
fisubrs
aas
out
jnp
adc
inc
mov
cmc
add
aam
xchg
pop
xor
fcmovb
inc
jns
lcall
adc
insb
movsl
push
sbb
mov
push
int3
rorb
adc
ret
pop
andl
js
mov
lods
cld
test
enter
insl
add
mov
icebp
outsl
popa
in
test
leavew
adc
pushf
lcall
push
adc
pop
cmc
sbb
mov
push
inc
testl
dec
jle
shll
dec
xor
iret
sarl
in
pusha
repnz
stc
in
lcall
and
xor
test
xchg
test
stos
cs
mov
jne
repz
mov
or
mov
lcall
fsubrl
add
xor
adc
pop
mov
mov
cmpsb
sar
data16
ljmp
xor
ljmp
push
dec
adc
push
cmp
stos
adc
jbe
xorl
inc
mov
das
pop
scas
or
clc
mov
mov
jge
pushf
dec
adc
rcrl
inc
subl
mov
jns
fcmovnu
adc
inc
fs
in
and
sub
mov
dec
pop
pop
rorl
mov
lock
call
stc
sbb
and
cwtl
push
pop
inc
outsb
adc
jp
pop
add
push
adc
sbb
xlat
repnz
jae
or
add
ljmp
xor
pop
dec
dec
jbe
sbb
insb
scas
imul
pop
and
jle
cwtl
adc
push
xor
loopne
rcrl
subb
pop
outsl
xor
daa
pop
pop
dec
xor
xchg
fisttps
outsb
sbb
loopne
adc
mov
ret
jne
movsl
dec
adc
sbb
pusha
sahf
leave
outsl
push
inc
popa
inc
sarb
cmp
fisttpll
push
sub
data16
ss
stc
repnz
gs
and
les
rorb
out
stc
pop
and
xchg
out
aad
mov
inc
mull
fdivs
insl
and
popa
push
call
mov
add
push
movsb
out
cs
lea
xchg
or
popf
cmpsb
nopl
mov
xor
ja
stos
mov
dec
call
jno
jge
pop
xchg
loop
popf
or
loope
sbb
in
xor
cmp
ret
push
push
xor
outsl
dec
aam
or
movsb
mov
shl
das
inc
cmp
aas
sub
xchg
ja
adc
iret
das
xor
cmpsl
cmp
pop
es
inc
popa
and
pop
sub
scas
sar
push
daa
xchg
iret
sbb
and
cld
int
mov
xchg
inc
rcrl
nop
jmp
leave
xor
dec
in
loope
bound
rolb
insl
mov
mov
movl
test
inc
sbb
mov
fcmovnu
or
aaa
cmp
lea
jno
dec
push
dec
jle
or
sbb
lahf
test
cmp
mov
dec
push
je
popf
cwtl
cmp
cwtl
mov
ljmp
dec
loopne
popa
jbe
dec
test
lea
push
pusha
arpl
int
shrl
push
add
popf
adc
pmaxub
mov
fld
flds
mov
testb
xor
xor
mov
push
hlt
mov
cmp
in
dec
mov
andb
lret
mov
xor
dec
daa
cmp
add
insl
cmp
sub
xorb
and
imul
rcr
adc
push
mov
or
mov
lret
orb
sbb
rcrl
enter
ret
mov
sbb
jae
inc
lds
cmp
add
loopne
aaa
insl
jo
mov
and
lods
cs
sbb
ss
adc
mov
xchg
aad
or
cmp
sub
inc
lret
lods
in
dec
and
mov
pop
mov
fsub
mov
adc
nop
arpl
cmp
inc
jns
icebp
lcall
adc
decl
test
jecxz
mov
loopne
dec
fst
roll
aam
mov
cmp
hlt
mov
sahf
xor
stos
sahf
sub
xchg
sub
mov
pusha
jae
in
mov
stos
cli
fsts
das
or
push
fimuls
out
sub
mov
test
nop
ljmp
mov
in
outsb
lock
jp
or
add
lods
dec
jno
pop
sub
push
cli
or
js
mov
nop
mov
mov
and
or
dec
cli
pop
pushf
xchg
iret
push
and
sub
movsl
sbb
sbb
loope
mov
sub
je
mov
or
and
sub
mov
sbb
push
jo
and
and
enter
aad
out
xor
popa
mov
mov
out
jge
or
divb
imul
es
push
repnz
mov
stos
xchg
outsb
jno
cli
inc
mov
dec
loope
xor
lea
mov
test
jnp
shlb
aam
inc
or
int3
sbb
pusha
or
lcall
rorb
orb
repnz
and
clc
lret
mov
mov
pop
jmp
lahf
pop
out
test
push
xchg
aas
push
iret
add
cmp
hlt
out
test
popa
cmc
imul
not
loope
pop
mov
cld
fadds
mov
hlt
pop
cwtl
mov
xor
cs
cwtl
mov
push
insb
loopne
push
shll
lret
mov
mov
inc
pop
hlt
sbb
xchg
pop
pop
inc
mov
pop
ljmp
das
xchg
push
or
test
test
mov
fst
sbb
xchg
fwait
rolb
xchg
lods
std
cmc
lahf
cmp
jno
test
repnz
and
fs
adc
jg
mov
jae
mov
loope
mov
cmp
int3
mov
popa
dec
dec
out
or
pop
stos
sub
jne
loopne
add
xor
ja
adc
cmc
adc
or
cli
movsl
cld
push
std
lret
mov
shrl
les
and
jne
pusha
jmp
loope
mov
push
ret
adc
or
loopne
mov
ja
xchg
inc
in
sbb
or
sub
xchg
pop
fcompl
xchg
adcl
int
test
jb
push
sbb
out
gs
or
fstps
jae
iret
pop
jo
or
addr16
mov
hlt
sbb
xor
data16
lods
or
push
pop
dec
dec
cmp
andl
mov
xchg
outsl
ret
push
fimull
jl
xchg
cltd
push
inc
lock
pop
lods
adc
xor
mov
rcl
out
xor
and
mov
xorl
jecxz
stos
ret
sbbl
test
int3
push
bound
ds
add
or
jo
cld
aaa
push
in
xchg
xor
ja
fwait
int
dec
jg
es
dec
sub
out
pushf
push
mov
lahf
lss
jmp
je
cld
mov
and
dec
ljmp
xchg
lea
add
loope
mov
pop
inc
jns
push
mov
adc
xchg
cmpb
xorb
lret
andb
js
out
mov
dec
ss
sub
or
push
popa
xchg
stc
fsubl
imul
rdmsr
sbb
cmc
mov
cmpb
mov
pop
xchg
xor
clc
and
pop
adc
les
fildll
and
shr
fisubrl
enter
adc
adc
mov
mov
ret
dec
fstpt
push
out
mov
dec
xchg
sub
jle
or
stc
xchg
mov
out
notl
mov
lahf
xchg
sbb
or
fs
mov
imul
loope
cwtl
push
or
imul
dec
mov
inc
xchg
jns
pop
jmp
pop
add
mov
cmp
xor
pop
and
inc
dec
insl
nop
sbb
repnz
call
lock
inc
mov
xchg
add
call
push
jo
inc
mov
daa
or
addb
push
mov
int3
clc
loope
cmp
add
mov
xchg
cmp
mov
sub
cld
cmp
fsub
stc
cld
xchg
mov
xor
insl
ds
loop
push
dec
xchg
mov
movsb
mov
mov
xchg
or
outsl
and
or
getsec
dec
cltd
push
dec
addr16
jns
push
xor
stos
imul
sahf
subl
insb
pop
adc
aad
adc
popl
add
enter
nop
cwtl
cld
fsubrp
bnd
ljmp
cmp
push
inc
addl
bound
pushf
les
sbb
jns
xor
popa
fcmovbe
in
inc
sti
jno
adc
movsl
rclb
xor
mov
xchg
cld
and
mov
or
insb
and
and
vmulps
loope
scas
adc
push
pop
mov
xchg
mov
xlat
or
popf
scas
cli
push
sbb
loope
adc
test
xchg
jge
flds
mov
imul
lods
xchg
adc
jae
mov
xchg
inc
mov
divb
lock
ja
inc
add
jns
rorl
ret
fadds
test
add
lret
les
mov
andb
pop
data16
jbe
lods
mov
sbb
aam
test
in
push
and
sub
and
sub
pop
pop
loopne
adc
lods
inc
mov
push
inc
mov
out
sbb
pop
dec
jl
outsl
push
sbb
add
test
fcmovnu
inc
pop
mov
inc
out
and
push
pop
adc
cmp
outsl
add
ret
rcr
sub
mov
push
ficomps
pop
add
lods
test
inc
mov
push
mov
or
mov
into
lret
pop
sbb
dec
cli
stc
andnps
out
push
xor
and
push
adc
rorb
rcll
xorb
pop
mov
xor
xchg
push
dec
ret
cmp
lods
aas
scas
mov
out
inc
or
jle
data16
popf
pop
mov
pop
mov
fcmovnb
in
mov
fadds
xchg
dec
and
mov
mov
fiaddl
sbb
stos
add
ljmp
mov
mov
cmp
push
or
inc
pop
lods
jne
cli
mov
adc
add
movsl
sahf
out
fwait
in
scas
pop
dec
add
call
data16
inc
ficoml
movsb
mov
frstor
dec
xchg
out
adc
mov
xor
mov
sbb
adc
jge
aam
popa
mov
add
pop
in
dec
dec
xchg
fcomip
arpl
mov
sbb
sbb
jae
push
add
sahf
push
sti
inc
mov
stc
xor
pop
mov
or
push
fbstp
ret
nop
jp
add
jge
nop
stos
fsubr
aad
adc
mov
push
hlt
xchg
xchg
movsl
add
pop
pop
cmp
sub
cmc
push
iret
dec
push
pop
jecxz
or
rolb
push
pop
fsubr
popa
hlt
ja
or
mov
sbb
arpl
in
outsl
movsl
add
add
mov
sarl
lods
insb
ljmp
pushf
add
lret
leave
sarl
into
xchg
shl
inc
lods
ljmp
cmp
outsl
pop
or
ss
fistpll
inc
and
daa
cld
xor
dec
or
or
or
mov
xchg
add
insb
sbb
add
rorl
push
lods
cmpsb
mov
shl
jecxz
inc
insb
jno
mov
lods
sbb
sub
ljmp
mov
outsb
shrb
and
mov
test
or
enter
fidivrs
xchg
cwtl
pop
hlt
out
movsl
add
mov
hlt
xchg
pop
dec
mov
loope
outsl
or
sbb
test
in
or
dec
cmp
stos
mov
sub
insl
lahf
cwtl
or
shlb
in
out
iret
mov
loopne
sub
add
les
mov
mov
dec
jge
and
and
call
xor
jno
rorb
mov
jecxz
mov
jle
sahf
inc
mov
movsb
mov
incb
loop
jae
dec
fwait
mov
divl
bound
stos
mov
aaa
push
aaa
jbe
orl
jbe
mov
out
mov
popa
hlt
inc
idiv
pushf
idivl
arpl
sbb
cld
inc
test
imul
add
jp
jne
into
cmp
jb
mov
jbe
out
and
stc
js
pop
push
dec
add
jg
cmp
hlt
mov
xchg
inc
cmc
sti
lret
pop
dec
push
inc
ljmp
inc
loop
xorl
jmp
mov
xchg
push
popa
jb
nop
sub
xor
fldenv
cmp
or
cmp
xchg
lds
lret
es
or
xchg
cmpsl
pusha
adc
dec
enter
xchg
inc
jb
cmpsl
xchg
add
push
popa
in
sub
dec
add
repnz
pushf
dec
mov
or
notb
push
mov
push
in
push
cmp
out
loopne
fs
mov
das
aas
inc
pop
ja
lock
shll
in
inc
scas
push
enter
jl
jl
shr
test
data16
insl
stc
jns
ljmp
loope
daa
lret
fbld
movsl
or
inc
sub
jge
mov
jnp
fs
aas
lea
mov
jbe
mov
aad
mov
push
jbe
add
jge
pop
xorl
mov
pop
fcmovu
sub
mov
mov
sbb
inc
js
enter
out
test
mov
push
mov
int
dec
cli
jb
dec
mov
mov
sub
fmul
sbb
xor
test
cmp
scas
lret
inc
hlt
sbb
adc
mov
int
je
int
ret
dec
lret
jae
sarl
in
jmp
ret
pusha
adc
xchg
adc
ljmp
inc
and
sbb
adc
cli
dec
xor
rcl
lock
iret
je
out
cwtl
xchg
lods
jecxz
mov
stos
roll
mov
movsb
jp
sbb
add
mov
push
je
pop
jl
dec
je
outsl
filds
pop
scas
divb
jp
jne
pusha
lret
ret
fldcw
insl
fadd
insl
cmp
nop
les
std
mov
jns
jle
lds
or
sub
movsb
movb
cmp
add
xchg
cmp
je
pusha
xchg
and
sub
push
lea
les
or
aam
stos
adc
nop
je
insl
pop
faddl
test
cmp
cltd
test
mov
lock
push
stc
orb
xchg
ds
jl
les
clc
xor
mov
sub
pop
mov
jg
stos
mov
mov
nop
and
mov
sarb
cmpsl
fstpl
dec
ja
add
or
mov
jle
push
adc
cld
mov
push
mov
mov
mov
push
sbbl
push
push
mov
ljmp
mov
jmp
out
add
icebp
shrl
push
mov
fnstcw
movsl
stos
xor
in
scas
xor
mov
add
xchg
cmpsl
cmp
pop
aaa
stos
or
rcrb
adc
xchg
xor
into
fdivl
cmpsl
roll
rorb
mov
in
inc
adc
nop
pop
add
mov
mov
fdivr
mov
jno
inc
sbb
test
push
adc
jns
das
lods
outsl
cli
mov
jae
aaa
int3
sbb
adc
fisubl
jecxz
mov
lock
lds
pop
xor
xor
xlat
cmp
out
pop
cmp
fiadds
in
rol
mov
js
mov
iret
rcrl
and
sbbl
in
ret
dec
xor
mov
mov
rcll
mov
xchg
ficompl
daa
subb
push
mov
push
or
and
mov
cmpsb
adc
shll
inc
repz
test
int
and
adc
mov
gs
push
inc
lret
popf
mov
pusha
xor
popf
lahf
or
lods
testb
sti
repnz
js
sub
movsb
or
or
or
inc
push
mov
lcall
xchg
or
insl
repnz
ret
repz
inc
js
bound
pmaddwd
push
in
pop
hlt
lea
add
shrl
cmp
sti
ror
push
cli
cld
mov
cmc
sti
xchg
mov
mov
or
arpl
push
ret
mov
call
push
cltd
push
aam
mov
mov
scas
xor
pushf
or
sub
and
insb
fsubrl
mov
sti
jp
xor
pop
jno
loope
or
andl
push
ss
pop
add
jge
sbb
mov
lret
test
jmp
loope
sbb
repz
mov
mov
dec
add
call
in
inc
imul
xchg
gs
xchg
xchg
and
shlb
or
cmpsb
into
fldcw
pushf
mov
rcr
mov
lock
in
cmp
sub
push
push
pusha
jbe
xchg
mov
mov
xor
mov
shlb
push
fs
jle
cmc
test
orl
mov
cmp
je
dec
dec
ret
cmpsl
int3
arpl
pop
add
fxch
cltd
xchg
sbb
je
in
jg
push
mov
ljmp
mov
jae
mov
mov
xchg
or
movsb
cmp
xchg
aad
jmp
cmp
sbb
pop
push
xchg
jge
lods
sbb
cltd
in
notl
fisttps
fsincos
mov
lret
out
xchg
lods
mov
fwait
mov
out
pop
or
add
sti
cld
cwtl
sub
jmp
pop
inc
jno
xor
sbb
fwait
shl
push
xchg
orl
push
sti
dec
pop
inc
inc
aad
jmp
cld
mov
push
lret
dec
pusha
test
inc
test
xor
mov
ja
inc
ljmp
lods
mov
fimull
mov
call
repnz
jg
mov
jmp
cmpsb
shrl
in
sub
dec
das
out
add
mov
xor
xchg
es
sbb
js
movsl
push
daa
sbb
jg
sti
mov
andb
jecxz
and
bound
lret
lret
daa
daa
or
repz
xchg
pop
loop
daa
pushl
inc
sbb
add
aam
ss
jb
sahf
pushf
shlb
sub
adc
push
jbe
xchg
push
xchg
adc
popf
test
lock
mov
push
or
arpl
cli
cli
loop
cmp
jbe
jae
ror
shrl
push
push
sbb
mov
out
neg
sahf
test
or
jae
sbb
cmp
icebp
out
mov
adc
jle
mov
add
xchg
mov
inc
add
mov
push
or
inc
or
std
xor
and
xchg
inc
push
mov
mov
and
scas
xor
cmp
fmuls
les
sbb
lea
aam
or
ret
rcrb
xor
ljmp
inc
sbbl
clc
xor
les
pop
adc
mov
xor
mov
sub
adc
dec
lock
xchg
repz
cmp
cs
xchg
mov
jae
pop
inc
fdivrp
inc
repnz
test
call
adcl
imul
mov
pop
or
ret
xchg
sbb
mov
and
outsl
orb
xor
or
cld
push
shlb
jle
mov
add
imul
roll
sbb
pop
xchg
cmp
push
arpl
inc
jmp
sbb
cmp
push
jle
es
mov
push
scas
enter
sub
outsl
jmp
sub
or
xchg
lcall
shlb
xchg
jne
and
scas
push
xchg
cltd
sub
jns
inc
mov
mov
sub
lcall
push
dec
add
arpl
movsb
pop
cwtl
mov
mov
imulb
test
xor
push
jae
xchg
rcrl
mov
gs
out
jne
insb
sbb
cmp
jnp
mov
lret
dec
in
dec
mov
clc
sahf
adc
sbb
aas
out
dec
dec
mov
sub
in
sbb
xor
xchg
fmul
xchg
test
test
cmp
mov
shrl
mov
push
jb
loop
neg
push
cmp
fsubr
into
fsqrt
fs
ljmp
xchg
scas
jecxz
xchg
mov
std
inc
sub
dec
lcall
cmp
adcl
fwait
outsb
cmp
and
sub
cmpsl
dec
int3
repz
fisubl
rol
test
mov
xor
into
inc
xchg
lahf
scas
lcall
fadds
mov
or
gs
fsts
ror
add
xchg
jne
imul
fiaddl
test
loope
cmp
lret
lock
xor
call
movsl
dec
xor
sarb
sub
fprem
jns
push
inc
test
xlat
mov
xor
loope
mov
sub
jle
jnp
sub
out
jecxz
into
test
cmc
inc
inc
mov
in
inc
pxor
pop
int
out
dec
mov
das
pop
mov
in
sar
xchg
popa
outsl
add
inc
repz
pop
jo
sbb
sbb
fs
xor
dec
shlb
ret
data16
push
jg
push
xor
cs
sbb
dec
xor
and
jae
int
sub
inc
ljmp
div
dec
and
lods
das
js
add
inc
mov
mov
adc
push
mov
xchg
divb
sbb
sbb
fnsave
xor
and
mov
aam
adcl
xor
mov
inc
stos
xor
sbb
repz
std
insl
or
pop
orl
mov
das
xchg
ljmp
leave
rclb
jb
pop
fcoms
rcl
out
fcomip
lea
mov
ficoml
xchg
rorb
es
xchg
push
popa
xor
jns
call
shl
xorb
mov
xor
scas
push
fcmovbe
sub
add
or
or
or
xchg
out
sub
outsb
insl
out
xor
dec
jg
inc
mov
repz
jns
inc
cmpsl
pop
stc
pop
stos
jb
or
pop
ja
xchg
stos
lret
pop
in
fs
cmpsl
clc
sbb
movsb
movsl
jns
push
les
mov
aad
push
or
dec
mov
cmpsl
sbb
insb
xor
pop
addr16
jnp
js
dec
nop
xchg
and
xchg
and
push
mov
lret
jno
in
push
in
repz
in
inc
loop
in
nop
repz
fidivrl
cmp
xchg
int
xchg
jl
mov
rcrl
cmp
fmull
add
pusha
movsb
ficoms
imul
cmpb
pop
aas
or
rcrb
push
jecxz
loopne
enter
arpl
ljmp
pop
shl
dec
adc
xchg
sub
subl
aam
mov
sub
hlt
popf
add
int
insb
mov
xor
dec
fsubrs
pop
sahf
imul
cmp
lahf
dec
in
or
arpl
adc
xchg
roll
cwtl
lret
jmp
lock
arpl
pop
sbb
push
cmpsl
xor
ret
sbb
add
jl
jecxz
and
and
into
mov
and
addl
xchg
cmp
test
inc
rol
popa
nop
push
imul
dec
inc
jnp
fists
stc
xchg
push
pop
xchg
aad
mov
xor
out
pushf
and
cmp
dec
scas
enter
mov
movsl
lds
fidivs
push
rclb
xor
lret
popa
add
pop
adc
int
pusha
test
roll
cmpsl
mov
mov
jg
data16
pop
sub
lock
pop
or
xchg
sbb
outsl
mov
pop
les
stc
scas
xchg
inc
push
cmp
popf
xchg
movsl
sbb
lods
test
add
gs
scas
xor
mov
xor
imul
inc
inc
jnp
sarl
push
js
call
jae
shll
mov
int
movsb
outsb
lcall
cmp
pop
and
lret
data16
cmpsl
sub
xchg
adc
mov
arpl
mov
xor
cmpsl
mov
dec
xlat
lods
idivb
rcl
pop
pop
sub
mov
imul
xchg
loop
cli
imul
push
mov
dec
mov
mov
adc
inc
enter
clc
jno
sub
fsubrs
pop
ret
jmp
cmp
sub
add
std
sbb
pop
mov
mov
xchg
pop
lret
inc
jmp
scas
cmp
ss
js
cs
cld
or
fxch
dec
rorb
jl
dec
push
loop
jg
aam
mov
movsl
je
test
dec
push
add
xchg
pop
adc
daa
sub
js
jg
sub
or
jne
bound
cmc
filds
xchg
xorl
cli
mov
movsb
mov
xchg
xor
inc
dec
sbb
ja
pop
mov
sub
lds
push
ss
pop
ret
stos
push
or
sbb
aas
push
mov
mov
repnz
cmp
dec
lods
push
add
pslld
cltd
mov
dec
mov
jle
mov
push
mov
pop
cmpsb
cmp
pop
push
bnd
jl
and
jne
dec
pop
lahf
scas
xchg
and
lret
and
mov
pop
mov
xchg
jecxz
mov
cld
push
mov
cmp
sbbl
push
cmp
push
add
out
in
push
cwtl
mov
call
lds
dec
lock
jbe
mov
sarl
inc
dec
mov
mov
daa
mov
adc
pushf
je
mov
xor
add
test
sbb
ret
outsl
lds
lcall
add
mov
push
les
pop
adc
push
adc
xor
loop
incl
mov
lock
pop
xor
xchg
lahf
mov
enter
dec
cld
or
sbb
leave
push
fisttps
or
push
sub
inc
cmp
adc
cmp
mov
jns
ljmp
in
addr16
cld
aad
or
test
sbb
loopne
jns
jg
cmpsb
and
mov
xlat
mov
lds
push
lods
mov
push
xchg
pop
lock
dec
push
fsubr
fildl
cmp
dec
shll
adc
add
lret
cmp
or
in
cmc
dec
jne
push
out
xchg
arpl
xchg
push
jecxz
fsubs
adc
dec
jl
add
pop
push
dec
jl
icebp
xor
inc
cmp
pop
sarb
xchg
loopne
push
ret
out
push
cmp
push
mov
sbb
test
jmp
pushl
out
push
and
pop
stos
outsb
or
negl
aaa
adc
loop
fcomp
imul
shll
imul
mov
xchg
mov
pop
rcrl
mov
add
arpl
adc
negb
adc
jae
cli
int
cmp
pop
mov
mov
fcoml
adc
lock
icebp
mov
jmp
pop
adc
and
in
loop
xor
cwtl
rcrb
mov
pop
ja
and
ret
daa
mov
inc
iret
pushf
out
fs
cltd
pmulhw
sbb
movsl
sub
adcb
and
jno
adc
dec
xchg
sub
loop
pop
mov
adc
pushl
adc
cmc
jle
and
loope
push
movsb
xchg
jno
xchg
xchg
mov
jp
aad
aas
ret
popf
xor
stos
insl
std
adcl
jge
les
sbb
cld
mov
mov
dec
gs
cmp
add
mov
sub
mov
add
jnp
mov
pop
out
int3
gs
cmp
loop
jg
or
data16
icebp
lret
out
jb
lock
in
sub
ror
xor
fldt
scas
mov
jmp
jl
insl
sub
cmp
movsl
inc
outsb
loope
push
xchg
mov
inc
sbb
imull
repnz
std
andb
in
push
sbb
xor
icebp
push
xchg
out
out
aad
add
push
add
dec
rorl
push
or
mov
xor
in
xchg
xchg
lret
test
xor
sbb
push
es
add
shl
mov
mov
fnstcw
rolb
lcall
lock
lret
xchg
je
int
mov
sub
sahf
data16
fldenv
adc
push
incl
inc
test
mov
cmc
mov
leave
pusha
out
sub
repz
and
pop
ret
or
or
hlt
add
fdivrs
inc
rcr
mov
cmp
jl
inc
leave
es
cli
push
out
xchg
jl
pop
jbe
int
mov
sahf
mov
aas
lcall
inc
cmp
lock
jge
shrl
xor
and
push
push
mov
clc
aaa
sti
mov
add
fcomps
outsl
es
and
aad
lock
adc
decb
push
xor
ficompl
lods
push
outsl
data16
xor
sub
sbb
rcl
jge
fisubl
mov
push
icebp
cmpsl
nop
jmp
out
out
or
fwait
jne
sbb
cli
lret
push
lret
ss
or
mov
and
jns
push
dec
inc
fiadds
push
or
cwtl
aad
cld
cli
push
js
and
jns
dec
adc
lds
pusha
jb
jmp
mov
xchg
sbb
jp
lcall
push
and
bound
add
lods
xor
dec
shr
fldenv
fwait
dec
jle
dec
and
mov
fisubrl
sarb
jmp
cwtl
or
insl
mov
xchg
push
in
clc
mov
scas
mov
loopne
in
cli
push
stos
cmp
lcall
pop
in
jno
pop
mov
add
out
in
mov
ss
sub
adc
fiadds
lret
xor
mov
arpl
rcll
cmp
add
scas
ror
jecxz
or
out
mov
mov
jl
cwtl
popf
movsl
sbb
sbb
cmp
stc
push
dec
test
mov
cwtl
cmp
mov
stc
sarl
cmp
push
dec
mov
ret
sbb
pop
shrl
xor
xchg
popa
xchg
push
add
repnz
jmp
and
aas
sbb
imul
mov
enter
ljmp
xchg
test
or
or
push
pop
jo
je
xchg
test
cmpsb
les
cwtd
int3
pop
in
sbb
les
mov
das
xchg
push
jns
cmpsl
add
xor
fidivl
push
lock
push
dec
cmpsb
xchg
sbb
es
insl
mov
jno
xchg
nop
stos
xchg
xor
repnz
lahf
jns
jns
add
shl
add
mov
aaa
in
adc
cmc
dec
sub
sub
seta
sub
popa
mov
and
bswap
in
inc
push
mov
insl
adc
push
pop
xor
shlb
shll
ljmp
jns
and
dec
mov
cmp
loope
lcall
nop
nop
and
cs
inc
fcompl
fstpl
ds
inc
daa
mov
adc
notl
xchg
hlt
aas
mov
repnz
mov
adc
enter
andl
clc
ja
pop
icebp
sub
iret
sub
xor
xchg
jle
sbb
lahf
jno
call
cmp
xor
insl
jl
rorl
jge
push
mov
sar
out
fisubrl
loopne
int
add
mov
push
mov
insb
jp
int3
clc
fstps
ja
sti
inc
aad
cwtl
rclb
mov
push
mov
scas
xchg
cmpsl
xor
mov
lahf
fbld
test
ds
subb
fdiv
mov
in
insb
lods
jb
add
xor
sub
or
setg
loop
aam
fdivr
add
in
cmp
fiadds
xchg
inc
out
cmp
aad
aam
add
fstps
mov
inc
in
sbb
call
adc
push
pushf
cmp
and
fsubrl
pop
addr16
jb
pop
mov
pop
test
jle
in
flds
sbb
icebp
add
out
repnz
mov
fsubrs
ja
nop
mov
mov
push
xor
enter
cs
dec
ja
fldcw
in
dec
sbb
mov
stos
mov
pushf
mov
arpl
dec
adc
lret
test
mov
dec
sbb
inc
lods
push
mov
in
jno
inc
jp
cmp
fwait
rolb
inc
add
divb
xor
fdivrs
clc
aaa
fldenv
adc
int3
je
dec
jbe
mov
inc
shl
ljmp
dec
js
addr16
push
scas
scas
iret
pop
push
xor
repz
mov
sbb
sub
enter
f2xm1
add
addr16
stc
lahf
add
add
mov
popf
mov
sbbl
fldt
bound
xchg
lods
pop
in
div
sub
push
sbb
add
pop
ja
sbb
mov
inc
jmp
out
cmp
mov
test
push
sbb
dec
jb
mov
dec
sbb
lods
push
ss
or
jns
mov
cmp
pusha
xorb
pushf
hlt
xchg
xchg
into
lods
divl
pop
mov
sub
bound
and
hlt
jmp
mov
aad
mov
mov
in
dec
int
jp
cmp
jnp
sbb
test
adc
outsb
stc
popa
pushf
dec
sub
mov
push
xchg
sbb
sbb
stos
lock
movsb
clc
fs
and
pop
pushf
sub
pop
pop
pop
test
inc
test
jae
adc
testl
mov
iret
shlb
push
xchg
ss
adc
ficomps
mov
into
pusha
inc
dec
pop
test
fs
push
mov
cmpsb
mov
fsubrl
xor
inc
insl
adc
cmp
mov
cmc
stos
in
cwtl
mov
pop
aas
xor
popf
and
adc
mov
or
shll
or
loopne
hlt
inc
ret
loopne
jns
sub
pop
inc
insb
popf
fnsave
and
adc
xor
mov
sbb
jecxz
das
xchg
jge
mov
push
std
xchg
in
cmp
aaa
pop
sti
cmpsl
jecxz
fiadds
sahf
leave
jg
cmp
adc
popa
mov
cmp
xchg
sbb
fimuls
cmp
gs
iret
xchg
inc
push
mov
lds
add
mov
cmc
cltd
nop
xlat
dec
cmpsl
mov
jp
xchg
mov
insl
cmp
adc
ficoml
negl
mov
push
mov
dec
js
pop
js
js
scas
cmp
cmp
xorl
arpl
push
mov
pop
lea
mov
dec
sub
add
mov
lods
cltd
xchg
cld
xchg
dec
lods
cmpsl
sub
mov
mov
xchg
jp
pop
inc
lcall
cmpsb
test
pop
xchg
daa
and
fidivs
add
jae
lods
sbb
mov
adc
jp
or
fldt
popf
data16
mov
int
xor
push
add
xchg
enter
fs
movsl
jg
pop
cltd
xor
mov
inc
sbb
adc
int
lock
push
pop
xchg
aad
sub
pop
inc
inc
and
push
ret
mov
xor
testb
int3
push
insl
adc
xchg
push
mov
adc
or
leave
shrb
orb
xchg
ljmp
int3
fildll
jnp
mov
sbb
repz
fistpl
mov
mov
mov
add
push
jns
lcall
jmp
lcall
je
add
idivl
push
adc
push
cmpsb
ret
and
bnd
rorb
lcall
mulb
das
jle
mov
dec
sub
dec
adc
popa
les
xorl
pop
cmp
push
xor
dec
dec
fsts
call
aaa
addr16
cmp
cmp
insl
in
ret
mov
in
lds
inc
shlb
cmp
xor
outsl
push
in
rcrl
dec
xor
les
push
aaa
or
and
sub
xlat
jg
into
xor
daa
ljmp
cltd
out
ds
lcall
push
xchg
push
rolb
and
repnz
lahf
push
repz
jo
fwait
sub
popf
sti
dec
adc
scas
in
xor
cld
xorb
sub
fisttpl
mov
fcoml
into
mov
xchg
aas
negb
pop
cmp
fld
push
stc
sar
xlat
movsb
mov
inc
mov
sbb
and
into
je
adc
add
and
imul
in
xlat
cmc
frstor
imul
dec
arpl
cmp
fidivs
and
adc
mov
ljmp
imul
shrb
cmc
mov
sarl
lods
out
xor
jecxz
in
mov
das
lcall
addr16
xchg
xchg
fdivrl
das
fsubrp
jg
mov
pop
roll
dec
xor
push
jl
pop
loope
rcrb
dec
andl
or
sbb
or
lock
cmp
cmp
mov
add
add
xor
mov
xor
repnz
add
inc
sbb
jae
push
xorb
mov
xchg
das
das
notl
repz
jl
rorb
mov
pop
out
push
dec
int3
aad
pop
jns
inc
lds
ret
jno
and
outsb
sbb
mov
nop
push
jge
mov
adc
pop
jns
add
call
lahf
loop
lods
packsswb
lea
vmovaps
xchg
aad
xchg
sahf
insl
pop
cmc
mov
lock
outsb
cmc
sub
pop
pop
js
nop
shlb
mov
add
pop
lea
xor
imul
outsb
aas
and
or
sbb
addr16
je
xlat
pusha
jbe,pn
mov
add
mov
mov
inc
lcall
adc
mov
fmull
mov
das
test
push
mov
andl
fists
nop
sbb
rcrl
mov
lret
repz
xchg
mov
push
dec
mov
fisttpll
and
push
inc
dec
ret
loope
cltd
xchg
leave
cmp
rcll
ljmp
ljmp
test
push
dec
cmpsb
fidivs
lahf
testl
inc
imul
shlb
xorl
jb
stos
cli
dec
sahf
mov
inc
mov
pop
std
in
insb
dec
mov
xchg
sbb
cmp
cmpl
das
subl
inc
ret
sub
out
or
adc
out
dec
ljmp
cmc
push
inc
popf
mov
lahf
mov
xor
jno
inc
fisubrl
and
lret
xchg
dec
shrl
or
arpl
xchg
lcall
dec
movsb
pop
sbb
pop
bound
inc
test
clc
push
mov
xor
adc
icebp
dec
arpl
lock
test
outsl
dec
push
outsl
inc
and
inc
push
xor
inc
jp
or
dec
and
dec
loopne
push
mov
add
inc
lods
andb
jne
je
dec
xor
sbbb
dec
andb
push
mov
cmp
push
xchg
inc
stos
fcompl
inc
in
out
add
and
pop
xor
fs
xor
fsubl
adc
fisttpl
push
cmp
push
lds
and
arpl
fsub
push
xchg
incb
not
sub
movsb
jp
sbb
call
aam
jo
das
jp
xor
sub
mov
pop
inc
sar
popa
cmpsb
std
out
cwtl
aam
stos
bnd
ds
mov
call
fwait
lret
mov
sahf
into
mov
cmpsl
add
ret
jns
lcall
xor
or
call
mov
imul
fisubrl
dec
dec
pop
pop
outsb
ficompl
cmp
sbb
dec
add
mov
xchg
inc
xchg
repz
xchg
fiadds
add
sub
or
pop
inc
and
push
push
push
lds
arpl
jnp
xor
dec
pop
mov
xchg
es
xor
leave
sub
icebp
cwtl
jle,pn
add
inc
ror
fld
lods
inc
mov
xchg
or
push
pop
pop
ljmp
xchg
mov
inc
mov
out
movb
mov
sbb
xchg
jmp
mov
fs
rcl
ss
cli
push
out
nop
cmp
es
dec
les
insb
push
cmp
ret
lahf
or
das
aam
imul
imul
xchg
test
xor
rcll
xchg
negl
ret
leave
shll
mov
xchg
cmp
das
hlt
gs
ret
or
cmp
nop
xchg
jl
inc
imul
mov
inc
adc
and
xchg
xchg
or
inc
inc
imul
aaa
sarl
sub
insl
mov
outsb
mov
cwtl
sbbl
mov
jb
subb
test
lock
bound
jns
lret
cmpsl
push
loop
dec
push
inc
cmp
sti
je
mov
fcoml
into
adc
sbb
mov
mov
push
add
enter
je
test
rclb
sar
jecxz
and
cmp
movsl
mov
repz
mov
imul
leave
sahf
nop
sarl
push
xchg
aad
nop
adc
sub
test
inc
sbb
sarl
es
shrl
push
push
fsubs
adc
pusha
pop
xlat
adc
sbb
pop
dec
lods
and
mov
dec
mov
sbb
pop
inc
dec
int3
mov
rcll
sbb
rcl
int3
mov
es
jae
xor
nop
aad
leave
add
push
and
jg
hlt
sub
cmpb
jb
arpl
iret
inc
dec
xchg
mov
jb
lock
cld
sub
jl
leave
add
mov
xor
arpl
sub
xor
lds
jecxz
and
je
les
or
jno
sub
push
mov
clc
imul
scas
ljmp
mov
fidivrs
jl
scas
dec
jae
and
add
mov
dec
call
fisttps
arpl
insl
xchg
stos
add
fcompl
pop
hlt
stos
shll
in
loope
or
jno
and
mov
add
shrl
fimuls
mov
int3
imul
cmp
jb
sub
mov
push
icebp
mov
scas
xor
adc
dec
repz
lret
in
adcl
testl
push
cld
push
fnstcw
shl
cld
jl
xor
lock
push
gs
pop
icebp
adc
cmp
jp
dec
adc
sbb
fiaddl
push
pop
repz
pusha
cmp
ljmp
out
inc
push
mov
loope
pop
sahf
repnz
xchg
js
lret
lret
xchg
fiadds
push
adc
out
cmpsl
mov
imul
and
pop
sbb
pop
add
add
mov
scas
andl
push
dec
sub
jge
mov
xchg
or
cltd
jne
loopne
loopne
pop
fsubs
mov
sbb
fbld
clc
mov
test
cltd
sub
ret
jmp
mov
mov
mov
inc
push
fdivl
add
std
pop
roll
xchg
jns
inc
sbb
adc
insl
test
lret
cmp
jp
jecxz
divl
mov
lahf
cmpl
jmp
cli
repz
enter
or
ret
fldenv
jmp
push
mov
dec
sub
hlt
sbb
loop
pop
mov
repz
aaa
push
fwait
push
cmc
jl
or
out
xchg
or
into
mov
mov
vshufpd
adcl
jle
jbe
xchg
add
lods
dec
sar
out
cmp
sub
rcrb
scas
sub
inc
fsubrl
adc
test
rcll
xor
clc
out
std
jns
gs
pop
and
xor
and
fidivl
sub
mov
shll
inc
add
std
cli
das
loop
stos
aas
jb
mov
add
and
inc
sbb
xchg
clc
pop
cmp
stos
fs
inc
push
sbb
sbb
or
sbb
out
xchg
cmc
fucomip
xlat
vcmpss
movsb
andl
sub
mov
xchg
stc
mov
jae
jle
dec
xlat
loop
pusha
ds
jp
jmp
fwait
pusha
imul
xorb
cltd
clc
icebp
jnp
xchg
xchg
bound
or
mov
test
pop
mov
dec
mov
jae
shrb
cltd
ret
dec
mov
cmpsl
adc
add
fcmovnu
sbb
push
sub
sbb
pop
dec
jecxz
nop
push
addr16
push
jecxz
jns
xchg
xchg
adcl
icebp
mov
arpl
inc
fs
xchg
sti
fistpll
mov
add
daa
test
mov
cs
lock
insl
lods
sub
stos
out
fdiv
mov
add
outsb
or
cmp
mov
xchg
cmp
js
xchg
jns
or
outsl
pop
mov
aad
add
and
rcr
cli
sbb
xchg
sub
mov
cmp
pop
xlat
xchg
fists
jmp
push
mov
popa
fnsave
sub
ds
dec
ror
mov
cmp
adc
and
jmp
js
xor
ljmp
fistl
insl
movsb
pusha
mov
icebp
pop
ret
mov
mov
push
int
and
out
in
outsb
xorl
mov
mov
dec
addr16
lods
mov
and
mov
in
cmp
lahf
fucomp
shlb
dec
xchg
and
ror
insb
js
ljmp
jb
and
or
hlt
lea
xchg
and
dec
push
mov
add
pop
nop
gs
pop
push
xchg
push
mov
push
inc
sbb
ret
imulb
and
mov
out
lret
jne
in
movsb
adc
adc
mov
outsl
lcall
scas
imul
cmc
out
push
pop
out
aaa
add
pop
pusha
ljmp
das
dec
sbb
jecxz
push
ljmp
in
scas
movsl
lock
jnp
adcb
enter
mov
adc
xor
fdivl
cs
or
sbb
jl
adc
mov
xor
int
icebp
push
push
in
fistpl
sbb
jl
pop
loopne
jmp
jg
movsl
out
pop
sbb
insl
call
fisubl
popf
sbb
int
adc
nop
int3
les
orb
cltd
lock
lret
dec
mov
jge
adc
sub
inc
ret
cld
push
mov
sub
mov
insl
or
xchg
jl
jb
leave
shlb
popf
adc
ret
daa
add
scas
or
je
push
cmp
in
or
popa
sahf
pop
pop
adc
xchg
hlt
lcall
cmp
insl
inc
dec
cmpsb
fdivl
mov
add
jne
cmp
jle
iret
adc
loop
and
push
sbb
ja
mov
mov
jae
jno
fwait
mov
leave
and
into
lcall
dec
mov
jnp
jmp
jb
test
je
insb
stc
xchg
sub
rclb
ret
mov
arpl
shlb
dec
or
mov
dec
add
dec
fwait
pop
cmpsb
cmp
das
or
sbb
adc
ret
aad
jge
dec
jb
xchg
mov
rcl
or
and
dec
add
mov
aaa
mov
lcall
gs
aas
add
fdivrs
clc
inc
xchg
sbb
xchg
inc
fisubs
stos
push
test
addr16
and
stos
aaa
pop
cmc
ljmp
in
cmpsl
cwtl
mov
fidivrl
iret
bound
lahf
movsl
and
cmp
bound
decb
and
dec
test
jmp
pop
stos
pop
sub
or
add
bsr
rorl
pushl
addr16
cmp
xchg
ljmp
in
jl
xchg
fsubrs
xor
mov
rorb
ja
adc
sub
ljmp
adc
mov
mov
mov
push
add
fmuls
xchg
or
cld
jb
ds
test
in
hlt
mov
or
fildl
sub
int3
addr16
inc
cwtl
jmp
mov
xor
fdivrs
sahf
imul
jnp
jo
pop
adc
push
sub
or
popa
lcall
xor
mov
add
je
loopne
mov
dec
jno
xlat
dec
xor
mov
and
mov
je
add
dec
xor
je
outsb
or
add
scas
adc
inc
cmp
nop
lahf
in
popf
aaa
lret
mov
lea
and
orb
sar
bnd
popa
dec
cmp
mov
push
inc
mov
cli
es
pop
int3
add
movsb
pop
mov
icebp
hlt
cmc
adc
xchg
insl
ljmp
sahf
pop
clc
inc
mov
xchg
cmpsl
mov
shrb
imul
adc
in
sbb
arpl
fwait
sub
movsb
call
mov
jmp
mov
add
js
js
insb
int3
or
gs
dec
push
call
push
or
jae
mulb
scas
jle
addr16
push
push
mov
xchg
mov
cmp
inc
jnp
iretw
mov
sbb
arpl
in
push
mov
pop
ds
popf
shlb
sbb
inc
fwait
mov
aam
jp
cmp
gs
popf
je
aaa
and
xchg
lods
loop
xor
std
adc
mov
imul
ret
nop
mov
pop
jb
xchg
mov
adc
sahf
pop
xchg
call
mov
popa
jg
loope
xlat
ficompl
push
push
in
ds
cli
mov
ja
sbb
push
dec
pop
out
cmpsb
hlt
insb
xor
stc
adc
dec
pop
add
out
pop
fucomip
vfnmaddps
lock
pop
subl
mov
sbbb
pushf
ret
ljmp
and
inc
pop
cli
shlb
or
jl
sbb
test
and
insl
sbb
ja
fdiv
xchg
inc
pusha
dec
int
jnp
jge
inc
arpl
sti
mov
mov
call
movsb
aaa
jne,pn
popf
sub
mov
xor
cmp
or
cmp
inc
sub
mov
xchg
pushf
unpckhps
es
adc
popf
xor
dec
adc
cmpl
sbb
dec
and
add
lods
mov
das
xlat
xchg
in
pusha
ljmp
loop
xor
cmp
lds
lods
mov
fcomi
sub
mov
cmp
mov
movsb
hlt
mov
pop
mov
pusha
pop
in
push
decb
mov
lds
jo
sti
inc
jns
test
add
pop
sti
sti
mov
pop
out
and
xor
pop
xor
add
in
jnp
cmpsb
cltd
jb
cmp
or
repnz
pop
fistpll
fldenv
in
push
iret
out
mov
cmp
rcr
rolb
mov
js
pop
inc
mov
mov
inc
sbb
dec
dec
inc
in
sub
ds
fcomps
dec
adc
pop
sbb
jo
adc
ret
or
fsubrl
popa
mov
loop
xor
nop
mov
jb
sub
mov
adc
sub
mov
lahf
jecxz
addb
test
ss
ficoms
jle
mov
mov
cli
push
cmpb
inc
push
cld
daa
or
stos
outsb
call
out
fs
jle
and
xchg
repnz
ljmp
fistpl
inc
dec
jnp
mov
hlt
xor
das
cltd
fistps
mov
movsl
gs
xchg
call
mov
adc
lea
adc
fldcw
mov
xor
xchg
or
mov
stos
xchg
lods
into
sbb
sbb
add
xor
and
shlb
movsb
and
enter
push
lret
pop
inc
pop
cs
add
pop
sbb
sbb
mov
outsl
xor
pop
je
mov
aaa
mov
cli
lds
mov
or
xchg
inc
sti
repz
adc
xchg
xchg
mov
xor
scas
popl
mov
js
pop
xor
movsl
pop
stos
dec
adc
mov
cwtl
mov
mov
or
dec
ret
xchg
adc
aas
test
mov
adc
mov
cmp
or
or
xor
int3
test
xchg
mov
inc
int
add
sbb
lahf
jg
test
test
push
jbe
inc
push
cltd
pop
mov
add
fisubrl
jmp
das
sbb
insb
int3
xchg
push
jbe
jns
xor
ret
sub
ds
adc
ljmp
mov
and
push
cmp
in
push
inc
repnz
jp
mov
lock
sti
xchg
lcall
lret
aas
pop
mov
mov
jnp
or
adc
mov
pop
in
lods
adc
mov
sub
xchg
sub
jmp
add
pusha
jnp
push
imul
bound
shrb
cmpsl
test
and
and
sahf
xchg
mov
add
lret
cmp
lret
inc
mov
mov
sbb
hlt
das
jle
mov
add
and
movsb
jne
and
cmp
jne
cmpsl
into
xor
jp
lahf
sbb
jmp
and
test
dec
jno
xor
pushf
cmpsb
xor
rolb
jbe
cmp
aaa
movsl
jo
mov
or
adcl
icebp
sub
xchg
jmp
ds
push
cmp
into
leave
mov
imul
enter
lods
lock
sbb
subb
sbb
jp
int3
aam
or
out
mov
int
and
sbb
add
jne
cmpsb
clc
mov
push
mov
dec
je
pop
push
add
sbb
mov
and
jns
std
and
xor
mov
data16
xchg
push
ljmp
jecxz
decl
roll
inc
mov
pop
inc
dec
pop
dec
xchg
pop
xchg
fwait
jo
fdivrl
mov
mov
jg
cmp
int3
xchg
mov
loope
sbbb
xchg
pop
rclb
into
mov
mov
lds
stc
and
xchg
lods
out
adc
pop
sahf
rcl
cmp
nop
cmpsb
mov
jle
cmp
movsb
add
and
repz
pop
lods
sbb
out
es
popf
scas
scas
lcall
stc
call
xorb
inc
fstpl
sub
mov
ficomps
jne
mov
dec
aaa
repnz
push
and
in
dec
push
xchg
ja
adc
sub
mov
lock
in
repnz
mov
jb
dec
inc
ja
std
push
cmpsl
mov
ja
es
sarb
push
pop
stc
cmp
lret
sub
jns
push
mov
out
cmp
test
adc
stos
xor
inc
push
pusha
sbb
dec
or
jnp
dec
mov
sbb
test
bound
push
cli
fcmove
mov
xchg
or
push
xor
cmp
xor
and
mov
rcr
in
cwtl
imul
mov
stos
xor
fcoms
fidivl
pop
cmp
loope
daa
jmp
fiaddl
cmp
inc
sbb
pop
mov
pop
mov
lods
mov
adc
pushl
loopne
in
add
mov
dec
or
scas
push
sti
pop
xchg
test
loop
dec
mov
lahf
cld
dec
fs
dec
gs
xor
dec
sti
arpl
add
rcrl
gs
stos
shll
adc
arpl
in
rorl
fcoms
adc
cmp
frstor
add
jbe
fcompl
jge
rcll
adc
out
shlb
cmc
inc
loop
test
pop
lret
sub
std
pop
or
jecxz
fwait
int3
jne
shr
pop
mov
stos
inc
lock
movl
cmp
daa
popf
or
jb
add
add
int
cmp
and
and
sub
inc
adc
xor
push
ror
sbb
inc
or
push
call
loopne
push
jmp
push
xor
sbb
xlat
pusha
inc
mov
push
cmc
ret
daa
lcall
push
int
mov
and
aad
and
mov
mov
add
dec
stos
or
fs
jmp
daa
shll
test
ds
repnz
sub
pop
popf
lods
lock
stos
fistl
iret
xlat
jb
rolb
mov
mov
rcrl
cwtl
jnp
pushf
mov
inc
push
daa
mov
mov
cs
push
ss
mov
sbb
lods
ficompl
shlb
jnp
stc
add
xorl
sub
fsubp
test
pop
jne
dec
int
sarb
adc
push
pop
jne
push
push
data16
jl
loopne
rolb
xchg
xchg
mov
ss
aam
jnp
inc
js
les
or
cmp
das
pop
subl
and
lea
int3
das
pop
std
pop
cld
pop
adc
out
loop
in
clc
sbb
inc
mov
mov
mov
pop
push
xor
daa
mov
aaa
icebp
jge
sub
xchg
jo
adc
ret
outsl
and
mov
inc
mov
pop
into
jle
pop
in
jp
xor
mov
jo
sub
dec
cwtl
loop
dec
sbbb
adc
dec
xchg
pusha
ljmp
dec
cmp
pop
int
inc
icebp
dec
sub
xor
cmp
jp
cmp
and
stos
das
or
fldenv
push
cmp
jno
mov
push
out
pop
or
std
aas
ljmp
jl
inc
pop
outsb
dec
jbe
lret
add
push
xchg
fs
je
xchg
and
cld
and
jecxz
jmp
clc
push
in
sub
gs
faddl
imul
fdivrs
cld
repz
lods
dec
add
cmc
stc
sbb
les
jb
and
rorb
loop
in
roll
mov
jl
jg
fstl
sbb
inc
pop
lock
out
pop
cmp
enter
hlt
je
jns
lods
sub
mov
fwait
pop
mov
push
fimuls
movsb
cmc
or
xchg
hlt
cmpsl
xor
pop
fsts
in
ja
xchg
je
aam
fsubs
sub
or
arpl
fistl
rclb
mov
lret
inc
sbbl
sub
out
pop
jecxz
dec
jnp
mov
adcl
lods
sbb
mov
adc
fcoml
int3
push
xchg
lea
xchg
addr16
adc
push
inc
fistps
mov
dec
lea
mov
shll
mov
mov
insb
dec
cmp
push
out
adc
iret
aaa
loope
sarl
sbb
xchg
mov
ja
add
gs
pop
arpl
lds
dec
add
stc
cmp
in
xchg
enter
pop
and
xor
and
subl
loopne
add
fwait
leave
or
mov
jae
lcall
rcl
scas
decl
push
movsb
and
pop
xor
inc
xor
xor
aad
notb
push
xlat
or
cwtl
ror
pop
mov
xchg
xchg
push
popf
imul
andl
xor
inc
gs
push
lret
stos
mov
xor
sbb
xchg
and
sub
cmp
in
inc
sahf
jl
insl
adc
cmp
xchg
test
and
hlt
test
sahf
dec
out
adc
pop
fnstsw
xor
jg
dec
xchg
add
stos
into
or
ds
ljmp
push
mov
rol
ds
lcall
and
test
sbb
sbb
jl
es
stos
sbb
pop
xchg
dec
leave
cmpxchg
sbb
ret
inc
cmpsb
mov
cs
incb
hlt
xchg
lds
mov
or
es
loopne
ret
addb
lods
mov
js
pop
sbb
pop
jae
fldenv
inc
or
rcrl
sbb
mov
iret
mov
orb
xchg
lret
mov
cmp
cli
mov
fisubs
imul
cmp
add
cmc
aam
aad
cs
out
cld
pop
outsl
loope
mov
in
pop
nop
mov
cltd
loope
sbb
inc
sti
or
mov
pop
jo
popa
xor
js
adc
and
js
popa
nop
push
xor
mul
mov
push
insl
dec
xchg
mov
dec
daa
cmp
mov
sarl
cmp
inc
lret
jo
test
mov
jno
cmp
jge
lret
xorl
cmp
repz
push
pushf
js
and
xchg
clc
fimuls
xchg
test
mov
sbb
inc
lahf
sbb
jmp
mov
insb
adc
add
push
jmp
out
sbb
jl
aas
ja
movb
call
inc
shl
data16
add
mov
imul
lock
je
pop
test
jge
int
jmp
fldenv
push
fwait
xchg
dec
outsb
fisubrs
gs
out
jg
out
mov
addl
fsubrs
setge
jae
sbb
repz
mov
fbstp
cmp
or
adc
mov
loopne
sarl
push
cmpsb
pop
xor
ljmp
aas
cmp
aas
xchg
popf
addr16
fcmovnu
movsl
push
lea
inc
and
lret
add
mov
cmpsl
test
jecxz
leave
ret
insl
movsb
adcb
lods
cmc
xchg
push
push
testb
mov
pop
leave
repz
mov
test
ds
jmp
hlt
mov
lea
lahf
mov
sbb
out
jno
outsl
mov
add
dec
mov
loopne
and
inc
push
add
sahf
mov
jge
mov
lds
adc
roll
not
mov
mov
cmpsl
mov
add
mov
insb
pop
repnz
cmp
hlt
repnz
sub
scas
jmp
mov
push
pop
in
into
jmp
and
cmp
int
sub
inc
int
push
inc
roll
and
or
push
inc
pop
sub
jae
ret
push
sub
stos
mov
and
aam
and
mov
mov
jp
in
arpl
or
xorl
das
outsb
mov
push
cwtl
mov
adc
and
cmovne
cmp
and
sub
out
hlt
fstl
hlt
xor
insb
xor
jmp
cli
mov
gs
mov
xchg
xchg
popa
and
cli
inc
add
mov
lds
xor
xchg
addb
jecxz
xchg
enter
xorl
stos
scas
and
stos
into
test
xchg
or
sub
fldt
xor
lods
xchg
push
sbb
icebp
addr16
cltd
sub
cmpsb
int
notl
inc
mov
xchg
jle
add
js
push
xchg
or
add
lahf
outsb
cli
inc
loope
fwait
mov
xlat
aaa
sub
test
pop
or
mov
movsl
rolb
pop
xor
imul
or
sub
sti
pop
testb
xor
lret
outsl
or
clc
sahf
out
pop
loopne
pop
xchg
es
ret
or
jge
imul
sbb
dec
stos
aam
adc
jb
pop
sub
fsubp
pop
push
movsb
cmp
xor
xchg
sub
popa
fldl
add
imul
fsub
sahf
and
fimull
insb
pop
lahf
pop
adc
xchg
mov
adc
test
inc
sbb
cmp
mov
stos
hlt
mov
push
jb
movsl
test
test
cltd
mov
shll
push
mov
out
and
lret
and
fidivs
mov
jo
test
mov
push
jne
subb
inc
xchg
out
mov
xchg
adc
mov
push
in
push
adc
addl
lods
repnz
xor
popw
pop
fsubrs
stc
outsb
dec
sub
xchg
mov
push
or
mov
fcmovnb
std
int
test
or
fildl
add
inc
fimuls
dec
js
push
pop
lods
scas
sub
inc
jmp
cmp
std
jb
stos
iret
enter
xor
dec
jmp
push
mov
arpl
lds
imul
jge
in
sbb
cmp
gs
jmp
mov
popa
dec
pop
or
mov
mov
sbb
inc
add
pop
shrl
mov
xchg
stos
lock
stos
push
hlt
lret
out
sub
stos
cmpsb
iret
adc
icebp
scas
jb
adc
push
mov
cld
sub
lock
mov
sub
xchg
adc
ret
daa
cmpsb
jge
sub
ja
sbb
push
notb
xchg
gs
scas
mov
mov
fcmovu
in
js
int
jg
cmp
cmp
lret
sub
ret
xorb
dec
mov
ds
popf
pop
aaa
mov
and
clc
icebp
jo
fadd
adc
flds
incl
cwtl
dec
cmp
adc
or
push
dec
fisttpll
mov
mov
inc
add
movsb
movsb
lods
mov
into
mov
rorl
flds
and
adc
or
cmpl
out
aam
sbb
mov
nop
insb
sbb
xor
scas
mov
inc
jo
rcrb
inc
pop
scas
lret
xchg
or
lds
pop
cmp
xchg
dec
add
clc
xchg
outsl
enter
pop
fimuls
out
hlt
outsb
xchg
enter
in
sbb
lods
int3
movsl
push
in
push
in
inc
call
pop
cmp
std
cmp
sti
or
fidivrl
and
push
jns
add
cmc
or
mov
inc
jg
rclb
sbb
lods
adc
mov
movsb
mov
mov
dec
adc
enter
insl
in
mov
rolb
shl
pop
mov
orl
inc
xor
and
mov
lahf
mov
push
outsl
idivl
sub
cmp
ss
mov
rorb
dec
pop
insl
shrl
sbb
test
inc
ja
les
cs
lret
cmp
insb
into
inc
xor
mov
mov
mov
rol
push
jnp
mov
xchg
push
out
inc
push
cmp
cmp
mov
je
xlat
cmp
pop
fsubs
add
testb
popl
push
xor
int3
or
lret
or
xchg
hlt
sub
shll
sub
mov
adcb
loop
ret
or
mov
insl
pop
xlat
rcrl
lcall
ret
lahf
mov
sub
call
movsb
int3
fs
lret
nop
push
imul
stos
mov
xor
retw
cld
daa
test
adc
xor
bound
pusha
inc
shlb
mov
sbb
cmp
mov
stc
repz
push
add
repnz
dec
outsb
jl
andb
push
add
push
hlt
andl
lods
aad
xchg
in
inc
int3
jo
dec
in
inc
insb
push
cld
and
xchg
sub
lahf
push
add
mov
stc
mov
push
mov
xor
outsl
jg
daa
jmp
mov
and
and
jns
iret
adc
stos
lret
pop
sbb
nop
mov
jae
or
cmpsb
in
mov
and
gs
adc
shr
fcoml
pop
scas
or
mov
js
les
jmp
dec
andb
and
mov
test
mov
sbb
pop
inc
jbe
insl
lret
test
pushf
popa
push
aas
imull
dec
rcrl
rorb
xlat
lea
pop
andl
sub
or
notb
cmp
cmpl
cmpsb
repz
cmp
jmp
sub
adc
push
and
mov
xchg
mov
jmp
pop
repnz
cmp
cmp
shufps
inc
aam
shrb
push
mov
push
or
stos
test
cmp
sahf
push
out
adc
sbb
cwtl
xor
rorb
sub
ja
jnp
pop
testl
fisttps
push
sbb
jecxz
ret
pop
jp
add
jbe
bound
out
sub
xchg
outsl
les
sub
subl
shr
outsb
sub
inc
add
loopne
pop
ds
aad
mov
mov
or
mov
repnz
mov
add
divb
fwait
inc
xchg
cli
jo
enter
repnz
push
mov
lret
shl
inc
cmpl
jae
xchg
mov
lock
fimull
repz
nop
std
shll
jle
ss
sti
movb
xchg
xor
addr16
fsubl
pop
xlat
sbb
in
and
dec
mulb
mov
push
cmp
jb
pop
insl
dec
scas
imul
sbb
ss
pop
mov
xchg
mov
xor
xchg
adc
ficomps
push
aas
orl
mov
scas
test
adc
mov
nop
pop
xor
scas
pushf
ss
stc
adc
aam
repnz
xor
sbb
or
test
push
jne
inc
jl
inc
push
jg
mov
ds
cmp
dec
sbb
lret
mov
mov
in
test
mov
jle
push
cwtl
fisubrs
ss
add
adc
into
in
adc
jmp
int3
shrl
cmpsl
call
cmp
xlat
add
jle
adc
fisttpl
test
jb
mov
add
cmp
addr16
dec
push
sbb
fucomip
out
repnz
xor
adc
xor
gs
popl
jecxz
adc
pushf
dec
sub
cmp
inc
mov
sub
mov
jbe
loopne
lock
mov
sbb
add
repnz
jmp
movsl
pusha
cmp
ret
inc
mov
push
test
popa
xchg
mov
mov
xchg
mov
and
scas
add
andb
jp
lret
or
lods
fstl
ds
push
mov
pop
push
ss
xchg
or
jns
mov
ds
imul
xchg
cmpb
push
xchg
xchg
mov
or
test
lcall
inc
ficoml
das
dec
je
loopne
jl
pop
mov
jb
add
mov
incl
push
xor
negl
fistpl
sbbl
popa
je
add
xchg
mov
movsl
shll
aam
xchg
aas
sbb
mov
mul
push
and
inc
cmpsl
stos
into
sub
mov
cltd
push
xchg
in
cmp
and
and
inc
lret
mov
mov
ljmp
in
leave
add
fsubrp
add
cmpl
fstpt
addr16
pop
or
cmc
xchg
add
mov
cmp
in
out
sub
xor
push
sbb
scas
xchg
xchg
cmp
or
cltd
push
lcall
shrb
push
sbb
inc
lahf
mov
mov
movsl
sub
sbb
inc
push
push
hlt
mov
lea
xlat
jae
bound
mov
xor
test
sti
adc
mov
cs
arpl
das
xchg
inc
negb
push
xlat
cltd
roll
cmpsb
insl
pop
add
insb
das
stos
sti
leave
les
xchg
adc
mov
cmp
push
jle
lds
dec
sub
xchg
loopne
mov
pop
mov
call
test
dec
adc
xchg
jb
push
cmp
insb
pop
call
cmpsl
mov
mov
lea
stos
arpl
inc
cmpsl
fnstsw
jns
outsb
and
lahf
popa
fistpll
data16
mov
movswl
rcr
inc
xor
push
inc
dec
push
pop
in
in
test
push
jmp
inc
mov
out
mov
and
xchg
push
dec
adc
sub
push
dec
adc
push
mov
movsl
sbb
jge
rclb
jecxz
decl
fs
push
aad
cs
add
hlt
lcall
iret
fsts
shrl
mov
and
mov
pushf
push
push
scas
push
out
mov
xor
sub
test
fldt
aas
jns
push
popa
cwtl
push
inc
inc
jge
push
add
imul
sub
cwtl
movsb
pop
xor
sub
and
and
push
stos
loop
ljmp
clc
mov
xchg
lock
push
sbb
bound
push
into
add
pop
test
mov
sbb
sbb
sbb
leave
xor
rclb
push
fwait
lods
pusha
fwait
in
mov
or
xchg
adc
inc
mov
aam
push
jg
mov
mov
cmp
das
pop
insl
jg
or
dec
shlb
mov
in
arpl
dec
dec
and
stos
adc
bound
sbb
test
xchg
mov
movb
and
fistl
cld
xor
dec
nop
es
fcoms
shl
sub
jmp
or
idivb
push
push
lds
repz
cmpsl
pop
ret
sub
dec
jecxz
cmp
call
jno
shl
pop
fiaddl
jge
add
les
mov
add
rorl
xor
scas
aam
negl
flds
jmp
insl
insl
xchg
sub
add
dec
enter
pop
fdivrp
add
pop
orl
into
xor
inc
scas
add
adc
pop
push
mov
out
add
rcll
jns
ret
pop
jne
rorb
neg
cmp
xchg
dec
rolb
inc
pop
fnsave
stos
stos
pop
cmp
xchg
or
adc
jmp
lea
rcl
mov
mov
sub
pop
nop
xor
add
lahf
xlat
mov
stos
ja
mov
cli
gs
push
call
stc
xchg
mov
xchg
dec
push
adcl
add
sub
mov
xor
out
inc
add
in
rcrb
outsb
cmc
rol
mov
imul
cmp
sahf
xchg
mov
popa
lods
shl
or
fisttps
pop
inc
xor
jbe
dec
inc
xor
xchg
lahf
sub
jno
push
lret
jo
cmp
fsubrl
aas
shlb
sub
pop
fs
xchg
xchg
jecxz
xchg
push
mov
and
scas
mov
xor
pop
pop
int
cmpsb
sub
jmp
outsl
ja
push
in
ss
outsl
stos
cmp
pusha
pop
popf
inc
test
sub
inc
jo
mov
jmp
sub
or
xchg
pop
add
outsb
sbb
scas
fs
andl
mov
idivb
and
mov
pop
je
insl
shl
cmpl
outsl
xchg
push
add
xchg
sbb
xchg
divps
jmp
lea
push
mov
sub
sarl
dec
fsubrs
hlt
rcll
xor
js,pt
fadd
outsl
cmp
subl
movsb
mov
xchg
cmpsb
cs
pusha
pop
cltd
sbb
sub
jl
loope
sub
stos
addr16
mov
and
je
mov
xchg
sbb
cmpsb
xor
mov
mov
push
cwtl
outsb
inc
add
pushl
inc
iret
out
pop
adc
sbb
add
icebp
inc
pop
mov
push
add
outsb
sbbl
sub
es
pop
fnsave
pop
mov
js
lcall
aaa
xchg
les
inc
cltd
sbb
mov
sub
dec
int
icebp
cmpsb
mov
jl
jmp
test
sahf
repz
sub
mov
xchg
sub
js
stc
push
in
hlt
repnz
or
sbb
inc
push
sub
test
xchg
rcrb
adc
pop
mov
or
mov
test
sbb
loope
dec
fs
nop
in
sub
sub
pop
mov
pushf
xor
movhps
clc
inc
sub
scas
mov
adc
dec
mov
cmp
cvtpi2ps
in
sbb
addb
sbbb
or
outsb
xor
aaa
push
and
jg
out
jnp
inc
lret
dec
js
test
cltd
xor
test
pop
outsl
scas
out
bound
jns
pop
jge
in
stos
jbe
jecxz
xor
jmp
repz
lods
test
mov
movsl
xor
xlat
push
pop
fnsave
pop
lea
lret
pushf
mov
js
mov
mov
add
or
das
adc
cmp
sbb
push
in
push
adc
pop
xchg
cmp
jge
adc
daa
jp
sbb
pushf
pop
dec
cmpb
xor
pop
and
call
punpckhwd
aas
add
jae
repz
xor
dec
adc
lcall
ds
mov
out
cwtl
xor
imul
shrb
push
adc
jge
aam
or
pop
popf
cli
ret
mov
pop
dec
addb
inc
add
leave
js
mov
cs
mov
lods
movsb
rcl
aad
stos
cmp
shlb
xchg
mov
xor
dec
xchg
or
jecxz
xor
mov
js
cmpsb
jbe
scas
adc
arpl
xchg
cmpsl
out
inc
andb
cmc
add
popf
fsub
jb
inc
arpl
adc
jp
insb
adc
xlat
insb
push
hlt
dec
cmp
add
add
ffreep
xchg
sbb
lock
add
push
mov
pop
sbb
sub
fstps
cli
inc
push
mov
inc
mov
fisubs
rcrl
pop
lret
mov
mov
xor
aas
in
sub
lea
and
mov
xor
jne
sbb
ja
jp
faddl
mov
rclb
xchg
incl
push
pop
pop
jg
cmp
decb
sbb
imul
jno
inc
iret
lret
outsl
pop
iret
push
orl
sbb
sbb
addr16
pop
lahf
xchg
cltd
movsl
pushl
cmc
insb
mov
lock
in
lret
mov
pop
pop
clc
shl
dec
mov
jg
cld
lock
int3
adc
xchg
cld
mov
psrlw
lea
enter
hlt
pop
dec
cmp
xor
imul
jl
imul
hlt
push
cmp
mov
inc
push
adc
jnp
sbb
imul
lock
cmc
and
outsl
cwtl
mov
xchg
adc
cs
sbb
ja
les
add
stos
call
inc
lds
shrb
sub
xor
andl
xchg
adc
dec
andb
pop
ss
dec
nop
mov
js
push
es
xor
add
repz
jae
int3
int
dec
rclb
cld
adc
lret
out
push
les
mov
mov
dec
movl
inc
or
sarl
jp
xlat
daa
xchg
mov
inc
or
mov
pop
loop
and
or
xchg
push
and
mov
fsts
mov
adc
pusha
fcmovnb
xor
xor
and
pushf
push
mov
sbbb
mov
jge
or
xor
and
cmp
out
xchg
mov
ds
or
or
test
cmp
or
sub
sar
aaa
mov
and
add
and
dec
fcmovnu
xor
fadd
sbb
in
repz
xchg
push
lret
add
stos
push
xor
not
mov
jle
nop
add
cmp
xor
aaa
cmp
andb
call
out
jns
andl
int3
ja
fists
or
jns
out
cmpsb
js
ljmp
shl
movsl
icebp
jp
push
gs
lods
popf
insb
insb
sub
insl
pop
sbb
or
jae
dec
into
adc
stc
imul
aaa
xchg
adc
mov
movsb
mov
xchg
mov
cld
adc
mov
push
outsl
mov
cmp
ds
out
mov
mov
or
or
dec
fistl
or
add
pusha
das
inc
xchg
leave
jae
and
inc
lds
repnz
lcall
outsb
movb
push
dec
jo
mov
inc
adc
jl
sub
adc
aad
lds
lods
ja
out
ret
cmp
lods
out
stc
stos
gs
repz
mov
push
jl
xor
xor
add
xor
mov
push
or
jbe
mov
inc
xor
cs
imul
sub
xchg
aas
mov
test
cmp
add
mov
sbb
mov
sub
shlb
cmp
ja
bound
mov
ret
push
sbb
fldpi
mov
ja
inc
or
aaa
jb
stos
js
fcmovnu
dec
repz
inc
mov
jmp
shl
mov
test
loop
mov
stos
inc
icebp
popf
jo
sbb
or
cmpsb
cltd
jl
cli
out
lock
aas
mov
fs
sbb
adc
fs
or
and
ds
mov
xchg
push
mov
ret
ss
mov
dec
push
mov
incl
test
fisubrl
mov
std
jl
outsl
inc
sbb
mov
shrb
cli
aaa
dec
arpl
add
add
push
xchg
cmp
lods
push
inc
movsb
push
cmp
test
mov
js
mov
cs
sbb
das
insl
mov
or
sub
xchg
pop
arpl
cmpsb
repz
jns
fs
stos
in
out
lret
cltd
xchg
mov
xor
push
cmp
sub
dec
adc
divl
sahf
push
shlb
out
sbb
in
mov
ret
dec
mov
xor
adc
mov
fdivr
scas
roll
js
fucomip
xor
inc
addr16
cli
sti
adc
aaa
and
fidivrl
fiadds
fstpl
inc
mov
call
mov
addr16
sub
into
je
xlat
in
ret
and
xchg
mov
out
pop
rcl
popf
imul
mov
cld
xor
jne
test
cltd
pop
pmaxub
mov
mov
scas
test
dec
adc
into
pop
imul
jnp
rcrl
stos
sub
add
pop
inc
xchg
ret
and
ss
or
mov
lea
popa
or
adc
mov
jne
pop
xor
ss
mov
rol
rolb
adc
stos
dec
ret
adc
movsl
and
sbb
mov
popf
jge
daa
xorps
ja
loope
sub
ja
xchg
pop
mov
stc
stos
mov
lret
or
jle
fmul
lds
pop
in
scas
mov
inc
fwait
sub
nop
fiaddl
ret
adc
adc
test
out
testl
mov
sbb
xchg
insb
inc
hlt
scas
jo
mov
adc
divl
push
enter
xor
jge
iret
adc
adc
adc
inc
lock
push
aam
std
lret
sbb
out
test
inc
out
std
addb
insl
outsb
or
sbb
jo
inc
jae
jmp
jg
dec
jl
js
nop
data16
xchg
stos
daa
sub
ljmp
lret
jne
ljmp
and
sub
ss
jbe
rdpmc
add
nop
dec
mov
pop
xor
cmp
cmp
in
inc
xlat
std
dec
insb
lea
jno
pop
lcall
push
cmovae
mov
mov
stos
cmp
aas
out
les
popf
xor
es
rclb
fwait
out
sub
fiaddl
sti
add
sar
inc
test
lds
mov
jp
sub
inc
jmp
movsl
clc
sbb
pop
nop
jb
aad
cmc
imulb
lret
inc
mov
push
cmp
push
outsl
jp
pop
push
cmp
inc
jl
repz
das
add
nop
and
adc
repnz
arpl
sbb
test
mov
test
inc
jnp
ss
dec
and
gs
add
sub
popl
add
into
rclb
sti
mov
inc
dec
out
scas
jne
ret
mov
bound
mov
xchg
stos
sbb
dec
add
or
lods
xchg
push
mov
loop
movsb
pop
adc
mov
outsl
cmp
inc
fidivrs
mov
test
or
es
jp
adc
cmpsl
les
jmp
ret
in
pop
out
fldt
mov
xor
mov
jecxz
fsub
scas
mov
outsl
pop
jbe
hlt
push
aaa
dec
add
imul
mov
and
mov
push
test
gs
ss
lcall
cmpsb
ljmp
cmc
rol
sarb
das
sub
xor
inc
das
lcall
lods
ss
dec
fsubrs
mov
test
fwait
out
add
jb
inc
int
roll
inc
fdivrl
mov
jo
mov
adc
add
pop
mov
or
inc
push
popa
fs
mov
xchg
mov
lea
scas
adc
iret
scas
sbb
xor
inc
mov
push
mov
inc
dec
and
push
popf
repz
inc
xor
imul
add
fldl
lock
mov
outsb
outsb
mov
add
sub
aaa
fcomps
xor
repz
sbbb
movsb
jge
fwait
push
xchg
dec
sbb
outsl
cmp
test
les
inc
adc
sbb
sbb
fwait
nop
xchg
xor
pop
in
xchg
sub
repz
in
or
mov
popf
jg
shrl
sub
setg
push
mov
jne
inc
jne
push
frstor
notb
xor
rorb
lea
cltd
imul
inc
lcall
sbb
movsl
cs
repz
cmp
in
das
cs
nop
xor
leave
in
cmp
inc
adc
les
fcompl
sub
in
push
test
sti
sub
cmp
gs
setne
sbb
cmp
aad
addr16
stc
mov
dec
pop
jle
mov
dec
in
dec
or
popf
movsl
out
xchg
or
and
cmpsl
add
rcll
and
iret
xchg
cmp
inc
xor
popf
sub
mov
stos
test
cmp
push
ficomps
stos
aaa
inc
leave
fisubrs
sahf
fsubr
shr
or
dec
jge
pop
sub
icebp
pushl
aam
addl
clc
jge
pop
pop
adcl
xor
arpl
or
mov
gs
out
mov
pusha
iret
adc
cld
pop
testl
mov
das
pop
mov
inc
aad
push
cmp
or
loopne
jmp
mov
repnz
test
pop
jo
lcall
outsl
imul
repz
nop
test
and
clc
lret
ret
mov
xchg
or
out
das
push
mov
mov
adc
nop
lods
pop
fisubrl
loop
xlat
add
test
aas
inc
ret
xor
pop
push
arpl
mov
lea
insb
lahf
jl
cmp
inc
jecxz
out
fisubrl
add
in
mov
or
push
mov
xor
notl
aas
imul
lret
mov
insl
and
loopne
dec
je
or
fucomi
jecxz
mov
pop
jl
mov
bound
mov
icebp
and
dec
xchg
gs
fdivs
xchg
aam
push
pop
idivl
lret
push
loop
dec
pop
cmp
scas
loop
adc
fwait
sbb
xor
les
xchg
rorl
sbb
bound
dec
ret
imul
mov
mov
dec
adc
cmp
test
xor
sbb
orl
mov
mov
clc
inc
popf
mov
mov
repnz
cmpb
arpl
movl
cmpsb
imulb
and
fs
inc
mov
adc
int3
jns
mov
jle
jg
std
pop
adc
cmp
pop
fsubrl
xorb
inc
push
jns
xor
rcrb
ss
shl
loopne
daa
pusha
fs
dec
mov
dec
frstor
aaa
or
rcll
sub
imul
mov
sub
js
test
xchg
fxam
call
push
popa
call
pushf
jge
pop
jl
fcmove
bound
pusha
test
aas
iret
insb
lods
dec
xchg
jo
mov
sbb
lahf
ljmp
rcrb
outsl
sub
iret
lea
or
jnp
rcll
stos
iret
lea
mov
jb
fdivrs
mov
imul
out
adc
nop
push
mov
pop
or
popa
add
xchg
loopne
stos
jae
mov
popa
loop
in
rorl
dec
outsb
ret
fcoml
cmp
jae
add
repnz
repz
sbb
in
insb
mov
cmp
xchg
es
frstor
leave
cmp
sbb
xor
add
movsb
data16
pusha
gs
je
ffree
movsl
nop
push
in
bound
and
or
push
ss
sub
adc
mov
out
fnstcw
stc
sbb
mov
sbb
outsb
push
shl
or
push
xchg
sub
sub
adc
pop
sub
push
jge
test
sub
xchg
int
cmpb
into
test
int
pop
mov
pop
xchg
clc
cmp
pop
sbb
pop
test
pusha
jnp
fadds
mov
mov
pop
mov
inc
and
mov
push
insb
dec
inc
lods
xor
popa
pushf
sub
mov
daa
xchg
decl
pop
ljmp
cli
pop
dec
pop
in
aaa
pop
out
jg
mov
mov
sub
xor
push
xchg
test
mov
repnz
nop
ljmp
frstor
negl
xor
push
inc
sub
loop
loop
gs
and
cmp
jmp
push
dec
mov
sbb
call
push
or
shl
adc
push
inc
pop
mov
mov
push
ret
and
push
dec
inc
out
inc
cwtl
mov
xorb
inc
scas
cwtl
mov
xlat
pusha
xchg
insb
jecxz
hlt
rclb
push
loope
imul
mov
mov
mov
sbb
mov
test
jno
fldl
sti
loopne
push
mov
jge
dec
mov
dec
out
das
push
push
fldcw
stos
test
stc
jmp
lods
adcl
pop
jl
inc
das
xor
add
int
xlat
call
sbb
xchg
pop
std
sub
dec
jmp
shll
sbb
xchg
clc
leave
jl
mov
aaa
push
cs
stc
jns
push
or
jno
mov
or
sbbb
test
iret
fimull
inc
xchg
daa
pop
arpl
mov
sahf
push
nop
mov
je
sub
outsl
or
test
push
cmpsl
or
push
out
ror
dec
popa
enter
inc
and
mov
and
cmp
mov
pop
add
in
pop
and
ret
es
add
mov
pop
arpl
mov
xor
jecxz
dec
sbb
cmp
data16
std
push
xchg
pusha
push
jp
das
mov
add
out
add
lcall
xor
dec
int
nop
inc
push
pop
stos
pop
push
mov
int
inc
adc
mov
cmp
push
mov
das
fnstsw
cmpsb
clc
popa
lret
mov
popa
movl
cli
das
mov
xchg
jp
and
shrl
cwtl
cmc
cmp
mov
jl
or
dec
pushf
cmp
test
jne
push
mov
cli
mov
mov
fwait
aaa
mov
aad
mov
sbb
fldl
movsb
in
mov
cmp
gs
outsl
xor
push
push
mov
jge
sub
jns
xor
fistl
adc
and
bound
push
inc
pop
mov
inc
pop
inc
hlt
js
ss
add
data16
dec
pushf
pusha
rclb
cwtl
imul
outsb
sbb
mov
imul
adc
xchg
mov
xchg
add
pop
xor
bound
mov
fistps
cli
mov
mov
dec
and
daa
jb
pop
push
cmp
pop
add
and
in
mov
dec
in
cwtl
jns
inc
gs
cmp
push
into
stos
int3
subb
sub
push
dec
or
push
push
test
shll
shrb
inc
inc
int3
pushf
mov
cmp
inc
lock
cmc
jne
sbb
dec
adc
dec
xor
lods
ja
mov
dec
mov
mov
dec
mov
lahf
mov
push
enter
stos
jmp
or
out
mov
movsl
xor
enter
mov
ja
inc
ret
sub
pop
test
scas
adc
test
xor
mov
and
push
std
xorb
popa
fimuls
in
add
sbb
enter
testl
iret
adc
and
add
repnz
xor
adcb
mov
jae
or
cmp
lods
mov
decl
inc
in
pop
xchg
push
das
out
pop
add
ret
mov
xchg
je
stc
cld
mov
lahf
out
or
or
gs
lods
xorl
in
dec
xchg
xchg
inc
mov
xor
mov
or
aad
adc
push
ret
mov
push
cwtl
jne
aad
mov
jp
js
inc
popa
aas
pushf
shl
out
dec
sub
lods
inc
cltd
cmp
insl
in
push
push
sbb
fcom
cmp
and
push
push
cwtl
call
cmp
stos
je
test
mov
negl
aas
outsb
into
xor
jns
icebp
icebp
inc
pop
cmp
add
loop
leave
fadds
push
jbe
cmp
cli
shlb
mov
stos
in
sub
push
or
and
cwtl
mov
sub
dec
push
mov
lock
mov
shl
mov
loope
ljmp
call
cld
clc
loop
testb
bound
popa
lds
cmp
sub
sub
lahf
gs
dec
mov
mov
add
cmp
add
aaa
stos
xchg
mov
xchg
ljmp
into
lods
mov
sub
jns
or
mov
mov
and
and
sahf
inc
lret
inc
xor
inc
jge
test
push
and
lret
jmp
repz
les
dec
enter
loop
push
movsb
mov
jbe
cmp
sarb
push
repz
in
add
jp
xchg
inc
push
cli
adc
in
hlt
mov
fistpl
adc
mov
cmp
ret
leave
sbb
lock
js
and
daa
push
push
add
clc
mov
cmpsb
pop
loopne
mov
mul
inc
and
mov
into
mov
or
les
dec
lahf
jg
sub
incl
pop
popf
mov
jg,pt
push
cmp
stos
aad
in
test
xchg
mov
loopne
xchg
fadd
repz
or
pusha
enter
inc
dec
dec
mov
mov
test
sub
xor
fcomps
jl
jae
rorb
sub
cmpb
pop
mov
sub
fwait
ret
addr16
mov
fdivr
into
push
pushf
fwait
popa
mov
jmp
lcall
and
mov
mov
dec
stc
cmp
pop
or
xchg
mov
mov
nop
push
xor
jno
push
push
adc
xchg
outsl
jmp
push
dec
mov
mov
pop
inc
sub
dec
lods
shll
push
push
mov
mov
leave
fdivrs
outsb
iret
or
cli
loopne
push
dec
mov
stos
les
and
movsl
movsl
stos
jbe
movsl
stos
nop
sub
dec
cmpb
nop
or
decl
addb
insb
test
sbb
pop
sub
cmp
stc
popf
cmp
enter
pop
sbb
mov
test
and
cltd
adc
stc
pop
adc
sbb
lds
mov
add
adcl
cmp
or
cmc
and
jo
sbb
pop
dec
jbe
jbe
lods
cmp
jne
pop
push
mov
loopew
lds
cmp
xchg
je
mov
sub
mov
ret
cltd
movsb
stos
jb
add
xchg
pushf
loopne
xor
push
xor
iret
push
sbb
xchg
out
jns
or
pop
fistl
pop
movzwl
and
xchg
mov
in
and
xchg
outsb
push
loop
push
add
mov
inc
imulb
dec
cli
dec
scas
add
rorb
add
mov
adc
shrb
lods
lods
cmp
push
mov
bound
stos
pop
xchg
lods
mov
stos
lods
gs
dec
sbb
inc
in
jb
sti
ss
jno
dec
mov
push
or
shrl
jo
js
movsl
dec
lcall
dec
dec
mov
pushf
adc
decl
sub
add
xchg
incb
fcmove
push
adc
adc
adc
dec
inc
pushf
stos
xor
sbb
inc
and
pop
movsl
lods
leave
std
faddp
adc
xor
mov
or
sbb
push
jo
jae
lods
sti
aam
or
push
aas
inc
inc
xchg
jnp
or
dec
sbbl
mov
loop
scas
adc
aaa
out
mov
lods
or
mov
inc
inc
cmp
insb
push
jp
jmp
xchg
in
divl
mov
pop
push
cmp
xor
cld
loopne
adc
fadd
cmpsb
and
dec
imul
fiadds
fistpll
mov
iret
sti
push
mov
es
fwait
int
mov
out
invd
sub
insb
push
dec
shll
inc
push
test
sbb
shrl
test
pop
inc
push
je
pop
push
jp
aaa
add
test
leave
push
mov
arpl
xor
cld
faddl
or
test
je
fwait
adc
leave
and
mov
and
cli
push
xchg
mov
lret
ljmp
into
das
enter
and
push
stos
push
fcoms
mov
push
adc
bound
int
xor
push
jmp
mov
mov
testb
ljmp
rclb
mov
mov
push
in
sbb
insb
ficompl
fwait
cmp
into
add
setl
stos
and
push
xor
pop
pop
cmpsl
bound
aad
ficompl
cmp
lahf
mov
shrb
add
adc
test
mov
nop
lahf
cld
mov
loope
cwtl
dec
pop
loop
inc
and
pop
shll
inc
fs
pop
popf
test
jg
lods
cltd
repnz
or
cmp
xor
rorb
add
cli
cmp
scas
and
mov
rcrl
lahf
xor
push
sti
mov
inc
lea
mov
mov
lea
imul
and
int
adcl
or
aas
dec
adc
mov
scas
pop
ud0
jno
or
aam
jmp
add
cmp
jae
lret
sbb
push
test
in
mov
rclb
scas
xlat
and
adc
sub
sar
aas
push
mov
lea
xchg
mov
clc
clc
mov
jmp
pop
jne
dec
jmp
adc
outsl
outsl
jmp
jl
sbb
or
fstps
and
ficoml
loop
daa
sub
aad
cmp
gs
insb
dec
jns
test
cld
imulb
call
fsubrl
lea
call
outsb
cli
fbld
fs
lret
cmp
add
out
or
shll
lahf
mov
pop
aam
andb
insb
dec
insb
loope
dec
stos
test
mov
pop
gs
fstpt
lods
shll
data16
jl
adc
lea
cltd
jge
cli
test
pop
cwtl
xchg
roll
dec
lahf
fsubl
daa
add
adc
cltd
mov
scas
mov
cmp
in
add
ret
or
mov
xchg
xor
jb
mov
out
negb
mov
pop
sub
cs
adc
inc
into
sbb
and
xchg
and
and
inc
pop
movsb
movsb
test
jo
push
lods
sub
push
fdivr
outsb
cmp
shlb
cmp
inc
into
movsl
imul
xchg
add
pop
push
or
push
movsb
leave
jecxz
push
sbb
cmovp
jmp
sbb
lods
jb
inc
hlt
outsb
loopne
push
insl
popa
mulb
or
fwait
in
push
out
jne
bnd
mov
cmpb
mov
dec
and
mov
mov
push
fadds
jns
mov
loopne
jb
fcompl
cmp
pop
mov
scas
rcrb
popa
push
das
mov
pop
loopne
push
mov
fisttps
push
movsb
pop
pop
movsl
cmp
rorb
pop
add
test
sahf
adc
aam
sub
test
dec
cmp
jmp
mov
int3
add
xchg
ja
insb
sub
lahf
inc
mov
adc
cmp
lcall
cltd
inc
xchg
xor
test
mov
push
add
cmpsl
movsl
lods
xor
hlt
fwait
inc
enter
or
add
mov
lock
ss
dec
and
imul
daa
mov
or
push
test
movsb
adc
icebp
push
ficoms
pop
adc
aad
hlt
subl
je
cmpsb
xorb
push
imul
push
mov
jmp
jbe
fildll
pop
add
in
fmuls
cli
test
ja
adc
jo
mov
mov
dec
pop
addl
jne
aaa
xor
mov
rolb
dec
adc
sbb
andb
jns
bound
call
add
and
rcrl
dec
xor
or
inc
orl
xchg
dec
negb
icebp
add
adc
sbb
aam
loopne
sub
rorl
pop
ret
out
pop
mov
dec
xchg
inc
sbb
sbb
and
cmp
jne
push
sub
pop
loopne
mov
bound
ljmp
adc
pop
xchg
mov
out
js
add
pop
jg
pop
in
repz
mov
pop
lds
sub
lret
xchg
fistpl
cmp
lahf
sub
ds
mov
mov
cltd
std
xchg
sub
aas
cmp
scas
xlat
shll
and
shrb
lock
jmp
dec
push
push
clc
jle
pop
cmp
fdiv
cltd
stos
pop
roll
inc
or
mov
mov
imulb
imul
and
test
pop
mov
in
pop
roll
popa
sahf
mov
cwtl
or
xchg
daa
imul
cmp
or
xchg
mov
pop
cmp
mov
inc
jae
mov
pop
pop
xchg
mov
fldl
daa
fnstcw
les
jns
xor
lds
movsl
aaa
das
inc
daa
mov
orl
imul
jo
mov
inc
nop
pop
adc
pop
pop
cmpsb
ret
and
cmp
int3
push
rcrb
enter
or
add
ret
fwait
lcall
mov
lret
hlt
push
mov
mov
dec
insl
int3
and
repnz
lcall
add
mov
fisubs
jno
mov
and
repnz
push
add
cmp
aas
mov
add
mov
je
aaa
loop
and
adc
pushf
fidivl
test
jp
cmc
nop
cmp
xor
std
outsb
shlb
jle
notb
incl
xor
pop
push
adc
push
or
pop
inc
mov
jnp
subb
test
icebp
nop
lods
data16
and
inc
pop
adc
movsl
xchg
js
add
subl
add
ss
inc
hlt
cmp
adcb
jae
dec
and
jno
dec
add
xor
xchg
lds
loopne
push
cmc
pop
mov
dec
push
in
and
fidivl
fdivs
jp
jmp
loopne
inc
push
clc
aad
mov
sbb
cmpsl
pushf
jl
jge
push
push
sti
mov
pop
xchg
push
cmp
push
insl
xchg
mov
lcall
cltd
mov
ds
stos
arpl
mov
sub
js
jae
ss
xchg
dec
repz
dec
icebp
nop
ret
lods
mov
sar
out
mov
or
lods
ds
dec
cmp
adc
arpl
cmc
xor
sahf
mov
icebp
dec
fucom
repnz
adc
rcrb
xor
jecxz
int
je
jno
loope
mov
xchg
mov
mov
sub
xchg
popf
jns
pop
lret
and
testb
pop
dec
pop
es
ljmp
lds
push
or
cmp
push
cmpsl
and
shrl
push
push
adc
repnz
repnz
xor
cmp
jne
dec
sbb
push
lock
inc
or
sbb
adc
jl
or
jp
out
push
jns
test
push
insl
inc
pop
rclb
lods
pop
mov
xor
outsb
inc
in
xor
jb
daa
adcl
loop
cld
xchg
mov
or
inc
push
add
add
jge
shlb
orb
cmp
adc
insl
xor
pusha
or
aam
roll
rcrl
and
cmpsb
cltd
ja
mov
adc
testb
and
push
inc
pop
push
xacquire
decl
subb
into
xor
movsl
jge
call
insl
push
sbb
push
mov
aad
push
inc
fdivrl
inc
stc
mov
jmp
sbb
sbb
jle
addr16
sbb
aas
and
dec
clc
popa
outsb
enter
xchg
sbb
sub
lds
pop
repz
addr16
push
sbb
int
imul
jmp
cmc
adc
cmpsl
cld
and
gs
mov
mov
out
push
cld
sbb
dec
xchg
repz
pop
insl
pop
movsb
call
sti
jno
push
pop
fisttpl
leave
adc
aas
stc
out
mov
pop
inc
jno
push
stos
and
or
sub
pop
mov
sbb
cmpsl
addr16
in
aaa
push
pop
sbb
cwtl
sahf
dec
jp
xor
inc
mov
fbld
ja
ret
jno
in
push
xorb
aas
lods
jb
add
pop
sbb
mov
adc
jmp
sub
xchg
jp
jnp
rorb
mov
inc
inc
cmp
xor
dec
cmpsb
subl
push
sbb
fwait
aas
shrl
mov
xor
dec
xor
fs
insb
lods
add
push
jmp
mov
mov
and
sub
cmpsb
aas
pusha
fcmovne
sti
xchg
jbe
stc
or
mov
or
mov
adc
xchg
scas
mov
push
mov
sarb
jne
sub
out
push
sahf
xor
loopne
mov
addb
adc
inc
rclb
test
loopne
je
mov
shl
xor
xchg
pop
iret
cmp
push
jp
mov
mov
loopne
dec
clc
or
sub
xor
or
push
sub
mov
insb
dec
push
nop
out
movb
adc
inc
or
sub
push
inc
sbb
addr16
xchg
dec
aam
aaa
push
cld
stos
lods
mov
add
and
xor
imul
scas
out
fsubl
adc
lahf
jp
scas
xor
popa
movsl
add
push
fcoms
sbb
cld
and
jne
movsl
stc
icebp
lret
xchg
mov
cmp
adc
mov
ljmp
push
mov
ss
fwait
ljmp
dec
icebp
xor
test
leave
push
mov
fimull
jp
dec
sarl
sub
hlt
daa
or
pop
and
mov
pop
mov
adc
ljmp
adc
mov
cs
pusha
add
out
cmc
call
and
mov
cmp
pop
lock
jne
mov
jge
nop
call
dec
sub
and
int
cwtl
and
mov
or
mov
or
hlt
mov
iret
ljmp
test
jbe
mov
dec
addr16
lahf
mov
adc
mov
cltd
test
push
fiaddl
mov
jne
clc
icebp
xlat
jg
imul
fsubr
xchg
jno
mov
fists
mov
sbb
dec
push
mov
enter
xlat
insb
pop
iret
aam
add
jo
adc
xchg
push
add
out
fcoms
lods
sarb
and
aad
push
fcmovne
sti
inc
out
pop
std
call
inc
mov
pushf
lea
xchg
sub
jns
sbb
xchg
or
movsl
dec
out
dec
pop
stc
xor
scas
push
lret
cmc
dec
pushf
cmc
push
dec
sbb
shrb
lret
jle
add
test
daa
pop
mov
lods
xchg
jmp
scas
xchg
daa
jbe
and
mov
divps
mov
push
aas
fld
sar
movsb
lcall
mov
shr
or
sar
inc
add
cmp
fwait
icebp
fdivrl
mov
mov
ds
scas
filds
inc
sub
sbb
mov
jle
scas
mov
dec
subl
cmpsl
pop
test
pop
mov
aad
fwait
into
cltd
push
cli
sti
shll
lahf
ret
inc
test
sbb
stc
mov
push
pop
mov
scas
xor
and
push
pop
xchg
and
adc
fadds
pushf
jo
lds
mov
xchg
in
jo
mov
cmp
insb
ljmp
cmp
out
out
out
add
mov
sbbb
rcrl
xchg
pop
in
outsl
in
test
push
int3
cwtl
cmpsl
adcb
dec
mov
push
adcb
sub
fidivl
packssdw
sbb
xchg
xor
xchg
pop
jnp
sti
test
inc
clc
inc
sahf
fmuls
pop
enter
jns
xchg
mov
sub
cmp
adc
sbb
mov
out
adc
push
pop
xor
bound
xchg
inc
rcl
mov
test
je
jg
scas
pop
push
shlb
lcall
mov
pop
push
xor
movsl
mov
daa
mov
imul
mov
push
cmpsl
fldcw
jns
fstpl
mov
inc
pusha
jge
or
dec
stos
and
mov
mov
xchg
pusha
xor
adc
jg
push
xor
movsb
adc
int3
mull
cmp
mov
lahf
cld
insl
loope
sti
pop
inc
mov
popa
stc
inc
into
outsb
repnz
pop
adc
jns
lods
mov
push
sbb
jl
push
sbb
into
jno
pop
adc
pop
mov
aad
mov
test
jne
inc
outsb
test
xor
pop
pop
mov
ret
and
sbb
inc
sahf
xor
sub
mov
lcall
sub
mov
push
mov
or
dec
leave
sbb
arpl
xor
jecxz
xchg
lret
add
not
inc
dec
dec
add
xchg
sub
sbb
or
clc
cmp
aaa
icebp
mov
mov
sbb
mov
mov
or
cmpsb
lods
jp
es
test
call
repz
aad
das
pop
in
and
data16
mov
negb
mov
xor
xor
add
scas
fdivr
stc
lcall
push
mov
es
or
fildl
add
out
pop
stos
mov
add
outsb
sbb
push
outsl
outsb
repz
fldcw
std
and
subb
call
push
xchg
pop
fldcw
dec
xlat
inc
add
cmpl
popa
icebp
inc
push
or
or
enter
movsb
test
test
inc
jge
cmp
add
or
dec
xlat
dec
outsl
into
adc
repz
mov
push
adcb
xchg
mov
iret
call
pop
hlt
or
mov
mov
pop
push
push
jg
movsb
aam
in
movsl
shr
mov
xlat
jae
rcrl
scas
lods
repnz
testl
fnstcw
lret
or
ds
mov
test
jbe
addr16
cmp
cmp
dec
add
in
push
or
jno
dec
xor
lock
mov
or
fwait
push
stos
inc
push
jnp
push
loope,pt
pop
movsb
divl
rsqrtps
jo
cmp
dec
popa
ds
cmp
mov
push
test
out
xchg
lahf
rcl
sbbl
jo
sarl
movsb
shll
aam
add
dec
xor
push
fiadds
sahf
rclb
jo
sub
cmp
data16
aaa
pop
push
pop
mov
icebp
jge
call
xor
sarl
scas
outsl
pop
jge
mov
movsb
push
js
stc
jne
add
cli
out
mov
mov
jae
jb
adc
push
sub
jecxz
rcl
leave
dec
cmpsl
lods
xchg
xor
mov
jg
js
iret
push
xchg
imul
outsb
push
mov
dec
movsb
xchg
or
pop
mov
mov
call
jns
movsl
int
pop
scas
dec
add
loopne
sbb
insb
dec
or
adcb
loope
adc
add
test
addb
bound
jle
jns
mov
aam
movsl
push
std
pushf
rolb
cmp
cmpsl
pushf
pop
or
enter
nop
cltd
lods
dec
sub
push
les
inc
mov
imul
les
pop
out
das
repnz
push
ds
pop
mov
adc
aas
ret
movsb
inc
xchg
std
and
gs
sub
outsb
push
popl
push
mov
pop
addr16
es
xchg
fsubl
pop
int
std
inc
dec
out
fstl
and
dec
leave
add
or
call
repnz
stos
push
mov
xor
iret
nop
je
addb
stos
sub
das
outsl
jae
cmp
cli
cmp
les
popf
insb
rorb
sub
cld
sub
in
cmp
inc
dec
push
sub
out
sbb
mov
arpl
sahf
testl
xchg
mov
xor
outsb
mov
stos
xchg
pop
adc
jo
js
mov
aaa
sbb
cld
inc
ret
lods
push
and
fmuls
icebp
hlt
adc
push
adc
rol
inc
test
andl
ret
or
cwtl
add
ljmp
pop
enter
fdiv
sbb
push
test
dec
mov
push
push
pop
sub
ds
jg
sar
mov
rclb
movsb
or
leave
sbb
mov
outsl
dec
data16
js
push
popa
jae
adc
add
mov
adc
jnp
cli
es
fdivrl
nop
test
popa
add
jbe
or
repnz
xor
imul
jmp
xchg
fistpl
cmpb
mov
pushf
fs
jae
xor
add
fstl
imul
jmp
xchg
cmp
cmp
adc
cmpsb
dec
xchg
dec
enter
inc
xor
push
test
push
mov
ret
cld
push
ss
mov
aad
lds
ds
jo
add
movd
cmp
mov
idivb
add
test
cmc
mov
xchg
dec
fwait
xchg
je
inc
adc
sbbb
cmp
xor
mov
fistpl
aas
mov
cli
push
push
pop
lret
add
arpl
mov
ret
and
cmpsb
rorl
cmp
addb
adcb
pop
cmpsl
in
push
dec
push
jbe
js
into
sbb
and
std
lcall
dec
jl
sbb
ret
insl
adc
sub
xor
push
pop
les
pop
in
loope
movsb
mov
jmp
jae
into
rcr
in
ds
mov
in
icebp
inc
push
mov
xor
repnz
push
or
add
mov
pop
mov
pop
test
jns
imul
jo
push
mov
in
mov
xchg
mov
je
jg
out
out
xchg
icebp
test
addb
sub
loop
mov
add
sub
bound
jbe
sub
jge
pusha
dec
je
add
mov
mov
and
push
flds
fbld
outsl
and
lcall
pop
xorb
stos
inc
iret
out
fstps
dec
mov
jmp
mov
xchg
mov
orb
pop
sub
cmp
adc
cmc
pushf
cmp
mov
loop
jge
aam
rdmsr
add
imulb
pop
or
pop
mov
mov
arpl
push
scas
dec
lods
xchg
mov
mov
aas
out
dec
jbe
cmp
lahf
lea
jae
out
les
loop
xor
roll
or
cld
stos
mov
shl
dec
mull
pop
mov
fstpt
or
fldenv
sbb
aam
jnp
arpl
popa
push
cltd
xchg
mov
push
dec
mov
cs
stos
pop
les
inc
mov
int
fucomi
pop
mov
stc
xchg
lret
lret
cltd
adc
xchg
mov
sti
sub
cmpsl
scas
or
jo
dec
pop
jbe
pop
push
jnp
andl
lahf
aam
inc
mov
pop
jbe
cld
sbb
cmp
sub
gs
cmp
pop
or
inc
movsl
cmpsl
inc
jae
movsl
loopne
pop
dec
scas
adc
and
mov
sbb
mov
push
inc
dec
jbe
aad
test
add
sbb
fadd
add
xor
pop
sbb
sahf
add
push
push
pop
daa
adc
popa
movsl
into
sbb
dec
xchg
sbb
lods
lahf
jg
sbb
fcmovnu
test
or
push
loopne
xchg
stc
mov
mov
or
push
pusha
sub
cmpsb
xor
cmp
mov
xchg
lock
inc
nop
fs
into
orl
ja
add
fildl
lock
data16
cli
fst
mov
or
lock
sbb
jmp
add
push
sbb
mov
decb
mov
aas
mov
add
mov
lret
lock
or
pusha
popa
enter
jb
mov
inc
es
lret
fistpll
mov
add
pop
pop
inc
mov
sbb
mov
aaa
pop
xchg
mov
or
cmp
dec
outsb
xor
ret
jg
mov
rclb
xchg
out
icebp
lods
cs
clc
ds
mov
cmpb
xchg
imul
xlat
add
pushf
insl
clc
mov
pop
call
sub
dec
test
dec
xchg
and
and
fs
or
or
xor
lock
lahf
mov
stc
xchg
mov
cmc
repz
js
xchg
jecxz
lods
jecxz
inc
inc
adc
add
xlat
test
les
add
test
sub
fidivrl
inc
mov
shlb
daa
jb
cli
imul
es
loopne
idivl
adc
push
cmp
aad
mov
jmp
xchg
popa
cmp
xchg
push
push
cmp
jo
test
fcmove
insl
popf
imul
xchg
std
sbb
xor
push
movsb
mov
addr16
mov
mov
cmc
repnz
test
roll
roll
add
ljmp
test
aad
fisubrl
or
mov
pop
add
pop
aam
sbb
sub
sub
movsl
scas
mov
and
test
add
push
sbb
sbb
xchg
adc
push
xchg
jns
jmp
rcrl
int
rcl
adc
fisttps
mov
cmp
xchg
js
sahf
xchg
adc
xor
psubusb
addr16
xlat
adc
icebp
gs
lods
mov
jo
adc
jns
fsubr
inc
jne
outsl
bound
int
cmp
js
ljmp
push
inc
xor
dec
rcl
dec
pop
inc
je
test
push
mov
lcall
out
dec
pop
push
push
cltd
mov
dec
mov
cmc
mov
lods
adc
int
pusha
xchg
mov
dec
dec
xorl
fidivs
sub
ret
jae
lcall
fists
push
jle
in
lahf
aaa
xchg
mov
ljmp
pop
adc
jo
pop
jmp
adcb
inc
fs
pop
dec
sub
test
sub
lea
dec
ljmp
sbb
sub
xorb
xlat
dec
push
pop
fistpll
shl
scas
in
hlt
xor
jmp
sub
mov
push
stos
shr
aad
mov
mov
ds
xor
push
fsts
sbb
jns
pop
sub
push
ja,pt
insl
mov
xchg
leave
push
dec
repz
push
cltd
pusha
inc
xor
mov
mov
lods
pop
sub
shlb
jge
mul
mov
dec
movsb
arpl
and
shll
inc
xorb
mov
fstpt
incl
inc
mov
mov
inc
cld
push
out
and
or
lds
inc
fwait
sbb
mov
sbb
jnp
and
mov
shrl
ret
cmovg
das
dec
test
dec
or
xchg
sub
dec
adc
lds
leave
fwait
cmc
push
mov
pop
in
call
sahf
mov
jge
repnz
inc
ret
lahf
loope
test
hlt
jns
jbe
mov
std
out
lods
call
push
iret
fists
mov
and
es
dec
cld
test
xor
mov
gs
in
in
mov
inc
sbb
push
push
jl
mov
cmp
xchg
cs
pop
out
imul
cmpb
adc
jmp
lods
int3
xor
cmpsb
lret
les
into
mov
push
scas
xchg
lcall
ds
test
scas
or
scas
jns
pop
out
add
loopne
xchg
movsb
jb
icebp
push
pop
mov
out
xchg
add
pop
nop
sbb
push
loopne
push
pop
fisttpll
je
clc
fxch
int3
adc
sti
in
pop
fwait
ss
mov
jg
cmp
push
stos
push
fstps
or
movsb
movsl
mov
in
cmpb
mov
sub
mov
insb
sbb
and
jae
aaa
sbb
xlat
mov
sub
std
push
sbb
sub
clc
sub
sub
clc
and
daa
into
shrb
sub
pop
jmp
sbb
mov
push
jecxz
cs
pop
mov
mov
cmp
das
dec
loope
cmp
in
push
rcll
mov
movsl
hlt
stos
pop
push
jno
add
insl
jg
cwtl
sbb
add
pop
in
jo
je
scas
ret
pop
mov
mov
sub
fsubr
fadds
xchg
mov
fimuls
aas
out
imul
scas
push
pop
lret
mov
test
push
pop
hlt
jecxz
push
xor
fildl
cwtl
ds
cmp
movsb
xchg
xor
cmp
add
push
pop
sbbb
imul
iret
inc
push
sahf
lods
dec
adc
xor
stos
ret
mov
leave
mov
jmp
add
out
xor
push
mov
insl
inc
imul
rolb
sub
adc
mov
dec
in
push
xchg
sarb
fstl
mov
sub
sbb
pop
popf
pop
sarb
mov
addr16
lcall
test
xchg
fmull
cltd
adc
adc
push
cmp
test
ss
sub
mov
lock
and
hlt
fadds
dec
scas
arpl
cmpsb
daa
lds
ds
xchg
dec
mov
test
les
add
or
cmp
pusha
test
mov
mov
aad
in
sbb
jmp
mov
movsl
cmpsb
std
dec
push
jge
sub
fsubrl
mov
fmuls
pop
inc
cmpsb
sbb
out
movsb
xor
sub
xor
cld
jge
or
push
add
sbb
jns
sbb
and
cmp
jns
xor
jle
mov
mov
stos
fcmovu
jle
jo
loopne
fiadds
mov
jbe
pop
fidivs
pop
adc
out
dec
add
shr
mov
inc
roll
dec
dec
out
ret
shll
sti
ret
add
sbb
mov
push
add
aad
mov
sbb
sub
sbb
xchg
shl
pop
cli
fst
pop
ret
push
mov
push
test
and
aam
or
mov
cmp
push
sub
in
int
add
outsl
arpl
or
cmp
xor
xchg
das
mov
mov
cli
pushf
sarl
in
sahf
ljmp
and
repnz
or
hlt
pop
lods
push
dec
subl
mov
bnd
jl,pt
jp
or
aaa
enter
int3
xchg
dec
push
sbb
xchg
cmp
subl
xchg
push
mov
pop
inc
fcom
cs
dec
out
mov
xor
dec
test
in
pop
pop
dec
mov
or
mov
ds
test
sub
jmp
push
jl
icebp
iret
testb
jns
inc
and
sbb
push
push
pop
js
add
xlat
add
iret
or
lahf
xchg
not
cmp
dec
dec
mov
shl
out
pop
pop
xor
fisttps
sahf
sub
add
push
jnp
jg
jae
dec
or
cmp
xchg
sarb
mov
and
or
jmp
adcb
pop
dec
cli
dec
dec
xchg
jecxz
std
xor
mov
inc
sti
imul
outsb
cmpsb
subl
jnp
cmp
pushf
mov
fisttpll
mov
add
pop
outsb
and
test
out
push
mov
or
out
pop
sbb
fcmovb
hlt
mov
and
jb
push
add
testb
hlt
sarl
dec
inc
enter
cmp
fprem1
or
aas
cltd
orl
sub
xchg
pusha
push
dec
test
mov
push
xor
dec
ret
cmp
sbb
or
int
lea
add
ss
imull
mov
scas
xor
dec
aad
lds
inc
xlat
enter
in
lock
pusha
cmp
pusha
mov
jae
inc
std
fisubrs
dec
fdivrs
or
testl
idiv
lods
push
lahf
je
jmp
jne
jmp
inc
mov
sub
push
dec
in
xor
sbbb
rolb
out
add
mov
or
and
sub
insl
mov
mov
addr16
mov
xchg
loopne
push
push
xlat
out
mov
fsubrl
lods
testl
xchg
iret
inc
and
inc
test
and
out
adc
mov
dec
movsl
cmpsb
sahf
dec
fildll
sbb
and
les
mov
dec
cltd
jae
add
adc
xchg
pop
cmp
fsubrl
pop
cmp
addb
subl
lods
ja
repnz
js
sahf
adc
xchg
mov
and
and
test
cmp
bound
bound
ss
hlt
addb
adc
mov
add
cmp
lods
aam
cmp
mov
gs
pushf
sbb
cltd
fstpt
add
mov
pusha
gs
xor
jecxz
xchg
repz
and
hlt
push
insl
push
lock
cmpsl
repz
mov
gs
dec
adc
xor
or
mov
jo
insl
push
loope
lods
inc
cmc
jns
mov
xchg
mov
mov
push
dec
xchg
adc
xchg
fstp
and
aad
adc
jmp
sub
mov
aaa
mov
cmpsb
mov
clc
insl
push
xchg
dec
sahf
jns
mov
mov
dec
sub
mov
dec
rolb
in
sub
xchg
loope
mov
and
xor
push
sub
lods
jmp
cld
clc
xor
stc
add
jp
jne
iret
test
faddl
sahf
mov
sbb
test
xchg
xchg
das
cmp
out
iret
out
lods
sahf
stos
cmp
sbb
outsb
lret
xchg
sbb
push
jno
and
ljmp
xorb
lods
cmp
mov
pop
cs
aaa
aad
inc
aam
jge
into
pop
cld
xor
ss
pop
iret
xor
push
push
push
xchg
sub
ja
dec
orl
jecxz
or
addr16
iret
repnz
mov
scas
sbb
mov
jle
mov
nop
mov
add
jno
int3
popf
jmp
dec
xor
outsb
inc
adc
push
aam
dec
jb
fimull
stos
xor
mov
test
cmp
bound
or
gs
stos
fisubs
xchg
in
push
addb
mov
or
fdivp
pushl
leave
popa
jne
xor
or
mov
push
lock
bound
mov
cmpsl
test
insb
in
or
in
xor
pop
pop
icebp
cmp
adc
push
inc
and
repz
xor
popf
inc
mov
fcomps
lods
add
bound
add
xor
loope
int
inc
adc
lods
sub
in
or
movsl
cmp
les
xchg
mulb
leave
lahf
push
scas
xor
loopne
adc
sbb
mov
mov
and
mov
cmp
add
jo
fadds
fwait
lods
sub
pop
pop
nop
fnstenv
jmp
ss
sbb
pop
stos
gs
cmp
pop
mov
mov
or
mov
inc
fs
ret
movsl
in
cwtl
or
rcrb
add
cmp
cmp
mov
out
imul
lret
dec
roll
cmpl
lds
dec
sahf
lods
ljmp
lods
ss
lahf
hlt
xor
idiv
or
pop
lahf
jge
mov
shl
pop
cltd
jecxz
inc
leave
mov
mov
push
ss
mov
pop
mov
ja
movsl
stos
mov
incb
shlb
pop
mov
lods
mov
int3
insl
int
pusha
push
add
insb
jecxz
xor
sub
mov
push
repz
sbb
push
arpl
mov
gs
fstpl
aam
cmpsb
push
push
test
jbe
fdiv
rclb
mov
out
add
xlat
dec
test
ljmp
or
cmp
or
nop
fadd
lret
xor
jae
jae
jbe
sub
add
aam
push
jp
add
mov
fisttpl
inc
popa
loope
push
lock
in
sub
xchg
cmpsb
js
sub
shrb
fadds
cmp
inc
into
je
xchg
dec
fmulp
jae
pop
push
xchg
in
gs
sub
push
ja
aad
mov
loope
pop
repz
int3
push
mov
shlb
ds
and
push
push
dec
sbb
call
aaa
addr16
adc
or
and
daa
mov
xchg
inc
pop
ret
jae
lds
push
nop
lock
sti
jle
cmc
popf
xchg
dec
je
xor
push
adcb
cs
loop
loop
stc
dec
push
insb
addr16
ss
mov
xor
call
sbb
leave
aam
hlt
fisttpll
xchg
cmp
cmp
sarb
push
sub
push
xchg
icebp
and
rorl
roll
add
mov
jl
je
stos
cld
xchg
call
cmp
xor
xchg
jno
adc
inc
out
cmp
pop
dec
dec
call
inc
fldcw
dec
push
insb
and
nop
cwtl
inc
shlb
hlt
int3
pop
inc
dec
enter
clc
inc
pop
stc
cmpsl
push
xor
rolb
xor
lods
push
pop
push
insl
mov
fcomp
xor
stos
and
into
fcmovb
xchg
push
in
sbb
psubw
add
sbb
jl
lock
in
lods
sbb
out
loopne
xor
aaa
inc
dec
lods
xlat
imul
fwait
mov
inc
orb
cmp
mov
mov
push
xchg
popa
pushf
bound
xchg
cmpsl
test
orl
mov
pop
mov
hlt
jns
lods
and
loop
fidivs
in
mov
sub
adcl
andb
inc
mov
adc
lods
jno
dec
in
lcall
jecxz
inc
andl
mov
mov
xchg
jns
es
in
cld
pop
mov
mov
xor
shll
fldl
mov
sbb
pop
sub
hlt
cmpsb
ret
rcl
mov
data16
insb
sub
out
push
push
ret
hlt
cmc
aad
xor
les
lahf
add
cmp
jecxz
xchg
sub
mov
lea
mov
mov
clc
xor
in
pop
xchg
mov
es
mov
shrl
pushf
sbb
cs
push
inc
les
aas
lcall
enter
pop
dec
out
mov
out
aaa
lods
icebp
movsb
inc
test
out
dec
cmp
push
sti
mov
mov
adc
cmp
inc
lods
push
in
xor
sbb
cmp
cmpsb
xchg
mov
rol
cmc
popf
and
out
lods
push
lods
fbld
leave
lds
add
repz
nop
ja
push
pop
call
pusha
cmp
cs
mov
lahf
xchg
push
sub
mov
inc
str
aam
add
push
aas
ja
jmp
mov
call
lods
sub
sub
addr16
mov
push
push
js
shl
enter
xchg
lods
mov
push
mov
lret
or
push
loope
cmp
sbb
test
test
pushf
js
mov
rcrb
add
push
cmp
dec
ja
push
xchg
cwtl
pop
andl
sub
mov
pushf
push
dec
cmp
aad
outsb
sub
loope
ljmp
adc
in
aas
pop
fdiv
mov
ret
or
lcall
push
mov
jb
pushf
inc
movsb
das
aas
mov
std
push
pop
das
fwait
xchg
sarb
jmp
cmp
fistps
shrb
fnsave
mov
insl
loopne
sbb
sbb
adc
mov
jbe
xorl
push
dec
sbb
xchg
cmp
cmp
lods
push
popf
test
cmp
jg
iret
leave
or
and
out
stc
push
xchg
mov
push
insb
pop
jbe
test
loopne
or
mov
inc
ja
mov
jle
ror
addr16
xor
in
adc
sbb
inc
dec
aas
sub
mov
mov
stos
cmp
lea
stc
mov
in
das
mov
in
ss
dec
add
lcall
popf
mov
in
addl
pop
ss
fists
pop
aam
rolb
out
loopne
cmc
jnp
sbb
adc
mov
jmp
pop
into
add
sub
inc
mov
mov
push
jp,pt
inc
aam
xchg
inc
mov
sub
test
bound
and
popa
push
cmp
jmp
jg
je
mov
sub
sti
loope
insl
fwait
ss
mov
lret
cmpsb
xchg
push
adc
cmp
add
mov
test
stc
jnp
mov
dec
cli
leave
cmp
jmp
cmp
cmp
pop
push
out
fwait
and
out
jbe
inc
clc
push
jmp
xchg
popa
adc
movsb
popf
sub
add
mov
and
rcrl
leave
mov
dec
sub
cmc
mov
int
jmp
les
outsb
add
sbb
add
xlat
push
in
stc
dec
lock
iret
fcompl
pop
loop
inc
push
inc
inc
stos
sbb
push
out
jb
cltd
mov
jo
add
mov
sub
rcll
cmp
mov
cmp
xor
inc
pop
push
sbb
das
test
mov
or
scas
rorb
mov
mov
movsl
pushf
sub
stc
jne
arpl
sahf
jne
adc
mov
xlat
push
insb
loop
lock
sarl
jecxz
jl
xor
jmp
and
jge
ja
lahf
cli
mov
dec
xor
rcrb
scas
dec
out
sahf
test
xchg
mov
mov
addr16
shll
shlw
cmp
mov
and
ret
jg
inc
pop
or
push
mov
cmpsl
inc
cmp
scas
dec
pop
xor
int3
jns
mov
outsl
mov
sub
shlb
leave
mov
adcb
arpl
fdivs
ret
cmpsb
scas
push
arpl
mov
mov
scas
inc
movsb
add
push
call
push
mov
sbb
mov
and
cmpsb
adc
or
add
in
cmp
aam
aad
jno
mov
mov
ljmp
popa
insl
jnp
div
sub
lods
jge
shlb
sahf
mov
lahf
add
dec
test
cli
dec
mov
stos
decb
lock
rcl
movsl
in
int
pop
mov
imul
sbb
fcoml
cmp
add
stc
ja
cmp
idiv
outsb
out
dec
pop
push
ljmp
dec
push
add
xchg
push
or
pop
mov
add
cmp
push
das
iret
outsl
cmp
inc
repnz
cltd
out
dec
push
xchg
fmull
cltd
jae
xchg
imul
pop
test
out
push
push
sbb
mov
dec
aaa
push
xchg
imul
adc
lcall
push
adc
add
sbb
jge
imul
fldenv
push
clc
pusha
rcrb
arpl
mov
scas
lahf
aam
repnz
cmp
shlb
and
xchg
imulb
cwtl
pusha
jle
outsb
push
mov
inc
adc
push
dec
mov
mov
out
out
cmpsb
dec
push
loope
push
rcll
lea
fsubr
int3
gs
dec
push
dec
repnz
push
mov
clc
cmpsb
gs
arpl
jae
jle
mov
call
cld
sub
out
sbb
mov
out
rclb
loope
jmp
imul
outsl
xchg
xor
sahf
out
stos
lds
sahf
dec
or
popa
mov
lcall
aas
dec
scas
mov
pop
lahf
rorb
sub
adc
push
aas
sbb
lret
lcall
movsb
pop
or
roll
adc
clc
insl
mov
pop
imul
mov
jno
mov
fsubs
out
subb
inc
pop
mov
imul
bnd
lahf
in
dec
lods
mov
mov
or
outsb
xor
cli
pop
sub
dec
jae
xor
cld
jno
mov
out
pop
inc
add
adc
mov
mov
sub
es
pusha
sahf
cwtl
rclb
dec
out
pop
inc
and
ficoml
adc
pop
xchg
or
and
cmp
into
sub
stos
mov
repz
lock
push
cwtl
notb
popa
push
data16
scas
jl
jbe
or
dec
aaa
daa
push
or
scas
mov
lea
ja
shlb
inc
inc
imul
dec
test
test
rcl
cli
mov
icebp
aas
xor
call
mov
decl
pusha
sbb
mov
les
mov
add
mov
and
gs
loopne
es
mov
clc
icebp
dec
ja
xchg
cs
std
scas
sub
std
cmpl
add
add
sub
pop
test
movsb
shll
repnz
xor
out
je
out
adcl
lods
push
and
fwait
ret
sti
dec
pop
jae
and
hlt
inc
mov
loop
rorl
sahf
out
je
xor
mov
and
or
fs
sub
outsl
xchg
out
imul
and
loope
xchg
xlat
sti
adc
cmp
mov
or
pop
sub
or
add
xchg
add
shll
sub
hlt
das
lods
gs
aas
xlat
push
in
xor
mov
movsl
sbb
mov
pushf
adc
mov
adc
fldcw
shll
push
inc
mov
mov
arpl
js
jb
xchg
cmp
sbb
daa
mov
mov
cmp
test
les
cld
stos
iret
sub
and
out
outsl
insb
mov
xor
add
mov
gs
repz
enter
cmp
pushf
fs
rcl
filds
testb
add
and
popl
leave
into
sbb
ror
scas
mov
aas
or
fmuls
inc
xlat
jnp
aam
inc
inc
leave
add
add
add
inc
push
dec
aas
mov
test
jne
inc
fimuls
dec
insl
xchg
push
add
call
test
mov
fwait
lods
add
mov
les
jmp
pop
adc
push
and
push
repz
jmp
cmp
ds
xchg
mov
fistpll
adc
inc
call
adc
stc
mov
and
je
lds
inc
pop
fsubl
xlat
insl
test
fucomi
xor
dec
mov
mov
add
pop
and
xchg
jmp
jns
lret
xchg
out
shl
and
in
sbb
xor
add
jo
sahf
cs
iret
xor
scas
mov
xchg
jae
cld
ret
sub
cld
inc
add
xchg
mov
shll
xor
xchg
jg
leave
subb
adc
lahf
loop
add
push
inc
push
mov
xchg
mov
mov
push
dec
push
cmc
dec
ljmp
gs
mov
add
icebp
mov
sub
jg
xchg
lret
stc
push
push
pop
mov
data16
dec
mov
aaa
mov
scas
pop
lods
in
pop
xchg
scas
and
data16
ret
imul
xor
adc
pop
push
cmpsb
std
shlb
cmpxchg
lret
bound
adc
js
addr16
add
test
pop
pop
out
test
inc
xchg
std
dec
cs
mov
cmp
lret
sbb
imul
fs
cwtl
xor
ret
pop
add
int3
pop
shll
xor
pop
decb
popf
int
and
jb
push
mov
imul
lds
xchg
loop
pop
ret
sahf
xchg
aam
jle
jmp
repz
xchg
aaa
cmp
ja
addl
mov
jp
loop
and
fldl
test
mov
pushf
xchg
sbb
or
loop
cmp
xchg
sbb
test
adc
sbb
mov
fucomi
mov
add
rolb
or
cltd
sbb
test
inc
dec
std
xchg
out
aas
or
dec
scas
and
and
add
push
iret
or
mov
lret
into
outsl
pop
push
sub
xchg
js
adc
aaa
or
jge
or
xchg
push
aaa
add
push
xchg
icebp
xor
dec
in
and
lcall
inc
jo
fadds
jge
xchg
in
dec
hlt
arpl
and
fs
stos
or
insl
inc
dec
adc
popf
fisubrs
es
in
inc
daa
inc
cmp
subl
in
in
fisubl
sbb
mov
add
rep
mov
jp
dec
fsubs
nop
mov
stos
push
cmp
aad
rcr
cmp
dec
jp
imul
mov
pop
add
ds
push
in
mov
jecxz
mov
in
pop
lret
sti
mov
jnp
movsl
nop
movsl
sub
push
jl
and
xchg
xor
lret
pop
add
pop
aad
jno
sbb
iret
sub
inc
ret
rorl
icebp
popf
fsubrp
push
dec
push
xchg
rcrl
cmpsb
adc
fwait
enter
aam
stc
shrl
mov
xchg
add
sbb
int3
pop
decl
icebp
mov
push
sub
dec
adc
add
pop
mov
repz
and
bound
inc
addl
xlat
jnp
test
shr
fs
mov
enter
je
hlt
add
inc
pop
or
ret
inc
cmpsl
fnstenv
std
orl
xchg
notb
sub
push
pushf
std
dec
push
out
into
xchg
mov
mov
daa
jmp
mov
xchg
mov
dec
mov
xchg
adc
in
fwait
sbb
inc
or
xor
inc
sub
dec
addb
push
or
aam
xchg
push
or
int
ret
fwait
or
sub
jbe
mov
stc
mov
ljmp
imul
add
in
fs
adc
jns
cmp
fs
and
ds
add
mov
test
add
cmc
adc
les
mov
sub
cld
mov
push
adcl
mov
xchg
shll
adc
int3
cmpsb
sub
std
ja
adc
dec
xchg
das
cmpsb
lods
cwtl
mov
mov
inc
mov
add
imul
bound
xchg
enter
add
pop
leave
mov
and
xor
pop
jnp
pop
or
adc
iret
jns
and
loop
dec
std
daa
xor
push
es
adc
jle
int3
call
push
outsl
into
outsb
pop
adc
call
shll
rorl
xchg
or
mov
popa
outsl
pop
cli
adc
dec
stc
xchg
outsb
adc
push
jne
fcomps
push
sbbl
je
and
jae
inc
pop
sub
mov
jecxz
jnp
jecxz
cld
loope
inc
ret
out
frstor
aam
ljmp
mov
jae
call
mov
mov
aas
adc
stos
xchg
mov
cmp
dec
mov
dec
outsl
mov
shlb
adc
and
and
outsb
pop
xor
xor
and
popf
sub
lock
dec
idivl
push
int3
pop
xchg
or
rolb
mov
shr
in
loopne
push
push
stos
popa
test
fsubrs
jmp
mov
and
push
leave
inc
popa
jg
cmp
sub
mov
mov
or
cmp
push
dec
mov
cmp
lret
pushf
test
daa
cmp
xchg
out
out
negl
and
mov
test
mov
ret
imul
sub
push
movsb
add
adc
xlat
sub
pusha
lods
in
int
testb
js
mov
xor
movsb
sti
fdivrl
out
mov
gs
jo
test
pop
cmp
sbb
sub
push
testb
in
repz
in
in
lods
push
mov
pushf
or
jae
fildl
loop
and
ss
test
cwtl
imul
xchg
cld
add
cmp
loopne
cmc
cmpsl
dec
xor
enter
outsb
insl
pop
fnstsw
push
jl
lret
ret
mov
data16
mov
cmpb
test
pop
cmp
jmp
xorl
nop
mov
out
pop
stos
fisttps
lret
dec
xchg
ds
sti
mov
lods
sub
inc
dec
addb
test
mov
or
mov
in
cmp
outsb
movsb
pop
add
jo
add
outsb
or
ss
xchg
call
xchg
cltd
out
jnp
lods
mov
jle
scas
dec
inc
or
push
or
and
in
push
stos
dec
mov
cmp
test
cmp
jo
out
mov
adc
xor
pop
insl
cmc
mov
hlt
or
dec
add
pavgw
mov
and
lret
jmp
inc
sbb
sub
jae
cmp
hlt
sub
out
jmp
clc
jae
mov
cmp
dec
arpl
xchg
xor
test
xchg
mov
gs
cld
les
adc
xchg
rol
or
shrb
or
sub
int3
dec
jle
xor
push
ret
pop
aas
sub
outsl
push
sub
xchg
movsb
pop
push
and
xor
daa
xor
ret
loope
addr16
cmp
pusha
pop
je
rep
insb
nop
xchg
pushf
xchg
adc
je
mov
aad
push
add
cwtl
jl
push
enter
push
aaa
stc
popa
mov
mov
xor
xor
mov
adc
pop
and
pop
xor
scas
loop
popa
insl
leave
aam
add
jbe
mov
adc
cmp
dec
pop
fnstenv
push
mov
ret
adcb
cmp
xlat
jge
shl
cmp
mov
dec
add
call
add
pop
enter
cmc
push
int3
xor
cmc
hlt
adc
outsl
fmuls
sbb
fcmovnbe
mov
push
mov
cmc
cmp
shrl
sub
mov
cmp
aam
or
push
sub
add
out
and
jle
push
add
jns
and
fistpl
lret
andb
dec
mov
dec
orb
push
sub
idivl
mov
sbb
adc
cmp
fnstenv
xor
mov
and
xor
mov
fwait
adc
int
xchg
jnp
mov
xchg
xchg
add
pop
mov
adc
push
dec
sbb
cltd
ret
or
sbb
adc
jle
pop
sub
push
mov
mov
cmp
daa
jecxz
pop
or
jecxz
mov
mov
or
dec
cs
ja
mov
loop
mov
insl
adc
shrl
xor
xor
and
add
adcb
out
inc
jno
pop
adc
sub
cmp
xchg
hlt
daa
dec
sti
enter
sub
ss
lahf
fnstsw
or
mov
xchg
bound
push
orb
popf
inc
enter
inc
insl
fadds
pop
fildl
ds
imul
shrl
jl
jne
add
inc
xchg
adc
cmc
shll
out
inc
add
hlt
pop
test
xor
add
or
ljmp
movsb
stos
jp
jg
push
mov
cmpb
insb
int3
scas
lock
and
push
lea
data16
adc
sub
pop
lods
imul
sbb
fwait
and
xchg
sub
jno
aad
mov
aas
pop
int3
inc
jnp
movsl
pop
insl
push
mov
out
popf
and
int3
sub
std
jo
inc
inc
das
add
push
dec
mov
or
jae
push
lock
inc
mov
and
pop
sbb
and
sbb
or
fcmovnb
lcall
lock
mov
sub
sbb
dec
scas
jbe
adc
push
push
cmp
inc
in
shl
push
jae
shrl
sub
xlat
in
loopne
pop
addr16
fwait
nop
out
add
xor
jmp
pusha
es
and
xchg
scas
fcmove
or
loope
mov
and
adc
cli
ja
int3
mov
pop
out
xchg
cs
iret
mov
andl
mov
pop
xchg
frstor
add
out
and
mov
pop
jg
fstps
orb
mov
cmpsl
loopne
sbb
sysenter
pop
mov
mov
xchg
and
sbb
mov
xchg
jo
dec
jecxz
mov
movb
shl
adc
sub
rorw
sub
fadd
int3
insb
inc
ret
testl
loopne
dec
push
test
push
mov
lods
cltd
lock
movsl
fiaddl
push
fsts
mov
pop
in
fwait
pop
int
and
jp
cmp
rcl
dec
dec
mov
adc
pop
push
jle
sbb
lods
imul
es
dec
aaa
js
ja
in
aas
sbb
pop
loop
cmp
xchg
es
lcall
sbb
or
jp
and
imul
push
push
xchg
stc
mov
unpcklps
jge
add
pusha
jmp
shl
pop
mov
jne
jb
inc
mov
and
in
jns
out
sbb
jmp
sahf
add
shl
cltd
jno
push
das
xchg
pop
aaa
xchg
xchg
jo
mov
mov
movsl
cmpsb
les
xchg
ret
insl
test
out
stos
imul
sar
fwait
jae
xchg
ja
dec
mov
dec
sub
test
pop
or
inc
lods
movsb
test
adc
cmpsb
mull
and
in
pusha
incb
sub
mov
dec
mov
jae
lcall
idivl
fcomp
jns
ret
test
popa
in
lret
lahf
jl
lods
rcll
or
movsb
mov
pop
xor
lods
cmp
adc
or
mov
cmp
cltd
je
sbb
sbb
mov
data16
leave
loopne
imul
fistl
mov
sbbl
pop
xchg
test
aad
pushf
xor
push
leave
xor
decl
stc
jge
mov
aam
add
das
lods
dec
ja
dec
sbb
inc
fstpl
leave
dec
setb
hlt
jns
and
insl
hlt
sub
in
test
fcmovu
xorb
cwtl
jl
cmp
popa
xorb
popf
jmp
ja
mov
subl
jne
fisubrs
mov
je
mov
ret
mov
inc
xchg
popa
sbbl
fwait
imul
pop
lret
es
mov
add
mov
jo
aaa
imul
mov
pop
lcall
cmp
inc
mov
cmp
sti
bound
cmp
out
inc
iret
leave
or
mov
pop
shrb
scas
nop
mov
jmp
out
inc
push
out
sub
ljmp
xlat
xchg
xchg
aaa
iret
mov
lret
inc
out
xchg
mov
pop
jb
fabs
mov
lods
sbb
faddl
dec
or
inc
loope,pt
cld
xchg
jnp
mov
js
shlb
inc
movsl
pop
sub
out
and
out
xor
movsb
out
sbb
pop
movsl
and
in
mov
test
jnp
push
jb
mov
inc
pop
jg
jo
mov
add
shll
pop
push
add
icebp
mov
in
int3
sti
mov
orb
arpl
xor
pop
cmp
pop
iret
or
lods
xor
loope
inc
testb
sbb
or
jo
scas
stos
andb
filds
pop
decl
jno
out
jne
das
jmp
mov
xchg
stc
pop
fnstcw
in
daa
call
sub
xchg
xchg
iret
subl
push
xchg
movsb
daa
xchg
sbb
es
call
out
loop
call
jne
stos
movsl
jne
inc
add
dec
sbb
movb
add
fidivs
fildll
test
and
mov
out
js
adc
jne
dec
repz
cld
dec
movsb
pop
jne
shrb
jnp
adc
cmp
xchg
scas
cmp
push
addl
or
test
loop
lds
push
aas
dec
xor
rcl
push
sbb
in
mov
sahf
mov
jnp
inc
push
ss
xor
lods
cli
push
incl
add
mov
push
sbb
cltd
jl
push
aaa
cmpsb
fnsave
sti
fwait
sahf
je
ret
xchg
subl
pusha
nop
sbb
repz
cwtl
loop
mov
ret
pop
scas
test
lods
lcall
gs
xchg
push
inc
movb
outsl
lret
jecxz
clc
adc
je
sub
lock
out
cmp
cmp
jle
notb
jne
lods
das
pop
mov
jns
push
js
inc
les
xchg
les
dec
pop
out
push
sbb
jecxz
push
push
jns
mov
addb
mov
pushf
mov
and
mov
sub
mov
pusha
scas
popf
cld
lret
sahf
lods
jae
ret
cltd
loopne
xchg
cmp
xchg
int3
mov
les
sbb
adc
repnz
jecxz
jbe
add
int
fwait
movsb
mov
pop
and
xchg
enter
into
mov
mov
and
and
bound
les
jmp
ja
pop
mov
lahf
mov
lret
xor
xchg
iret
jmp
jl
push
js
xchg
jl
jl
and
pop
aas
test
push
das
jecxz
icebp
repnz
scas
mov
outsb
jb
insl
icebp
cmpsb
jbe
test
in
xchg
lods
mov
dec
mov
test
sub
pop
xchg
jle
or
subb
mov
sahf
adc
ret
arpl
mov
push
jae
fbstp
sbb
insl
xchg
or
loop
xchg
inc
data16
iret
dec
pop
dec
fwait
icebp
mov
xchg
test
mov
xorl
stos
cmpsl
aad
sbb
call
cmp
mov
scas
inc
cmp
jecxz
mov
push
jmp
jecxz
jge
js
sbb
dec
sbbb
mov
mov
jno
idivb
imul
aad
into
mov
es
jo
sti
mov
or
int3
xor
js
iret
xchg
imul
es
mov
loop
or
out
mov
sbb
cli
std
pusha
addr16
std
or
sub
jmp
sub
pop
insb
hlt
lret
dec
sbbb
dec
add
clc
mov
add
inc
dec
loopne
or
xor
out
gs
jmp
push
out
or
adc
cs
out
lahf
cmp
stc
stos
data16
mov
loop
xor
add
dec
rcll
xor
cwtl
sub
jmp
xchg
and
notl
gs
in
add
sub
xor
clc
push
popf
sub
sbb
push
fadds
inc
xor
push
ret
sbb
repz
cltd
dec
inc
adc
xor
push
mov
dec
pop
jl
ds
pop
xor
sbb
rcrl
or
std
sarb
mov
nop
outsl
jae
xchg
pop
adc
add
int3
daa
andl
dec
cld
inc
out
inc
and
xchg
inc
movsl
or
subl
adcl
pushf
jo
mov
jge
or
cld
les
sarl
fsubp
mov
sahf
leave
repnz
pop
jmp
mov
mov
in
inc
jb
cmpsb
adc
shlb
jmp
dec
jno
jg
shl
les
pop
in
loope
and
es
les
cld
cmpsl
out
sar
cld
mov
int
loop
fdivl
pop
inc
cmc
jl
sarb
cmpsb
xchg
xor
icebp
loopne
mov
adc
iret
imul
jnp
loope
jecxz
icebp
jo
cmp
jbe
lahf
stos
inc
lret
xchg
pop
sbb
in
add
pmaxub
inc
xchg
xchg
fsubrl
fisttpll
stc
loopne
mov
jecxz
adc
lods
sbb
ljmp
and
cmp
xchg
mov
lret
rorb
and
ja
mov
test
jge
cld
push
mov
outsl
dec
stos
or
push
rcrl
ret
push
mov
adc
cwtl
sub
add
jae
cwtl
jne
iret
imul
std
and
insl
inc
rorl
pushf
imul
mov
movsb
mov
into
pushf
adc
loop
sahf
movsb
sahf
lahf
or
fnstcw
jmp
xchg
add
scas
fiadds
jae
adc
mov
xchg
fwait
cmp
leave
rcr
pop
negb
jae
jp
out
xor
imul
push
push
push
cmp
outsl
sbb
pushf
sbb
cmp
bound
jno
or
xchg
xchg
sbb
addr16
inc
dec
jo
push
mov
push
pop
jnp
jb
jmp
jmp
jecxz
aam
loope
push
std
push
mov
jno
add
adc
std
hlt
sbb
cltd
dec
fsub
dec
cltd
xor
in
call
mov
jmp
jbe
out
push
dec
mov
push
mov
shl
mov
inc
cvttps2pi
jmp
add
vcvttsd2si
dec
imul
jl
mov
call
push
push
jne
push
sub
loopne
xor
dec
mov
inc
pushf
cmp
mov
scas
or
shlb
lds
mov
clc
cs
sub
cmpsb
das
out
xchg
cmp
inc
add
add
pop
imul
shr
push
ret
xor
mov
ficomps
rcrl
fidivrl
loope
lods
nop
inc
mov
pop
and
out
mov
dec
push
jne
mov
lret
insl
lret
es
mov
push
add
pushf
loopne
inc
popf
pop
sbb
ficompl
sti
mov
lock
out
dec
aad
and
mov
repnz
mov
add
in
fwait
mov
pop
mov
sahf
mov
int
lea
pop
in
push
fldenv
jbe
mov
int
mov
jg
ret
dec
push
insl
pop
arpl
xchg
shrl
sub
mov
sti
in
mov
and
add
lahf
fs
mov
pop
sbb
loop
jg
dec
push
xchg
adc
dec
loopne
out
fistps
jae
jne
push
daa
jb
pop
sbb
sub
imul
stos
inc
and
mov
movsl
mov
pop
aad
lret
insb
jb
std
or
xor
in
dec
or
popa
addr16
sbb
push
lods
adc
fdivrp
dec
add
xor
inc
popa
mov
mov
and
test
inc
xchg
jecxz
mov
rorl
clc
jmp
adc
mov
stc
inc
xor
mov
popf
mov
jmp
sbb
inc
xchg
cli
stos
addr16
inc
pop
xchg
push
mov
imul
and
add
xchg
dec
push
stos
out
xchg
xor
jns
incb
push
repz
js
int3
or
nop
ljmp
xlat
popa
stos
cmp
call
jno
mov
repnz
idivb
adc
cmp
sub
jo
xchg
sub
imul
lcall
imul
test
outsb
enter
inc
push
fnstenv
aam
aam
int
dec
pop
lods
mov
inc
test
mov
sar
int
subl
movsb
or
adc
pop
bound
fsubl
je
xchg
or
pop
jo
xchg
and
sbb
out
cmp
xor
and
pop
push
and
jnp
inc
xchg
mov
xor
lahf
pop
cmp
mov
jae
pop
mov
lods
add
enter
lock
ret
sarl
out
fs
pop
popa
gs
hlt
pop
mov
call
insb
in
andb
in
shlb
and
jp
lods
icebp
xchg
or
xor
mov
enter
mov
sti
adcb
jle
and
aas
aam
mov
inc
or
insb
fldt
push
subl
add
jnp
mov
les
hlt
push
cmp
lock
mov
int3
idivb
outsl
ficomps
clc
jl
dec
jle
inc
fmuls
out
cwtl
cli
or
decl
clc
inc
movsb
xchg
add
arpl
pop
addr16
or
push
in
sbbl
aad
cmpsl
sbb
or
xor
dec
loop
dec
loopne
sub
imul
aam
pop
xchg
mov
or
aad
dec
jno
mov
push
inc
push
xlat
jp
popa
mov
lea
push
mov
pop
std
je
pop
loope
push
sahf
ja
outsb
sahf
and
hlt
xchg
jg
xor
je
and
jmp
xchg
mov
les
adc
jae
mov
icebp
es
mov
inc
mov
mov
push
jo
fnstsw
int
xchg
dec
adc
pop
xchg
jb
push
lret
cmc
push
add
sbb
repnz
das
cmc
outsb
add
fisubl
shld
xor
push
mov
mov
test
cmp
sbb
dec
mov
mov
xor
adc
sub
out
ds
icebp
add
in
fiaddl
ret
ret
cld
push
mov
cmp
mov
xchg
or
mov
push
sbb
ret
inc
sbb
inc
cmpsl
notb
cmp
xchg
xchg
push
mov
add
sti
jecxz
in
pop
xabort
popf
jmp
xchg
add
rcr
sub
pushl
add
fwait
push
xchg
and
out
xor
adcb
into
movsb
arpl
imul
xor
fidivrs
movsb
adcl
pop
inc
jle
adc
or
stc
shl
add
popf
sbb
movl
je
add
mov
dec
or
xor
int3
and
xor
test
inc
jge
mov
mov
ljmp
push
push
outsl
enter
sub
push
jp
xchg
lahf
push
outsb
or
jp
stc
in
call
lahf
shl
cmp
inc
pop
mov
into
je
flds
addl
jns
call
xchg
std
sbb
and
jp
popf
sub
pushf
mov
insl
dec
sbb
insl
test
dec
mov
test
enter
or
repnz
sbb
jmp
enter
shlb
and
mov
add
outsl
jle
ja
outsl
push
mov
out
adc
fisttpll
mov
out
push
sub
in
dec
or
push
sahf
dec
add
add
sub
fwait
push
insb
pushl
mov
push
sti
movsb
and
ja
dec
push
mov
jne
jo
fnstcw
sarb
xor
movq
sub
push
jbe
daa
inc
sarl
nop
pop
cmp
fmul
fwait
jge
adcl
or
jle
lods
xor
xchg
ja
addr16
jae
xchg
fcmove
xchg
lock
hlt
mov
jle
into
sarb
or
jbe
ss
sti
or
push
rolb
ds
fiaddl
add
roll
loop
push
std
push
sti
push
pop
inc
sbb
rcrb
movsl
std
mov
jbe
inc
ss
cmp
mov
imul
and
dec
iret
jno
arpl
sub
pop
shll
shr
xchg
mov
aam
ret
nop
enter
test
add
adc
jno
xor
pop
movsl
lea
inc
std
or
xchg
mov
pop
popf
imul
data16
adc
dec
imulb
push
inc
fwait
mov
call
mov
push
xor
mov
add
lahf
loopne
into
jp
add
jnp
jns
fdivs
or
inc
sub
or
sbb
lock
int3
adc
fsubs
sarb
push
out
jg
pop
adc
xchg
daa
es
imul
into
push
xchg
rorl
out
jnp
cli
xor
jmp
xchg
jbe
push
push
pop
rcll
icebp
push
outsl
jmp
outsb
hlt
mov
lea
pushf
cmp
sub
ret
dec
push
sarl
call
inc
push
dec
xor
into
xchg
jmp
daa
cs
in
mov
and
aam
mov
pusha
push
stos
push
add
lahf
jnp
ss
fldt
loop
inc
subl
sbb
pop
cmp
adc
dec
stc
pop
add
in
leave
jne
inc
adc
aas
push
les
lcall
sbb
fdivrs
pop
flds
sub
mov
pop
and
orl
ss
mov
sub
dec
testb
mov
andb
add
jne
fiadds
mov
cmp
es
mov
rcr
sbb
dec
xchg
cmp
es
out
xchg
stos
lea
test
mov
jecxz
std
pushl
lcall
mov
inc
sbb
pop
add
int
push
addr16
add
xchg
outsl
xor
push
and
adc
inc
push
inc
jb
push
jmp
inc
lds
jno
mov
dec
lcall
les
fcomps
out
mov
shll
xor
add
inc
daa
push
dec
fadds
or
jle
insb
xchg
jb
adc
dec
dec
je
mov
or
cmp
jmp
mov
cmp
sbb
inc
xchg
cmc
adc
shrb
fldz
leave
outsb
pop
clc
dec
je
push
and
add
dec
jbe
dec
adc
push
ficoml
outsb
ficoml
xchg
and
dec
xchg
cltd
jl
imul
mov
mov
add
pop
mov
pop
aad
mov
mov
or
push
cmc
fcompl
sub
fmull
pop
movsl
js
les
pop
in
push
stos
or
popf
mov
ljmp
push
test
popf
push
mov
aaa
xlat
or
out
loope
xor
js
mov
not
test
or
test
cmp
push
clc
add
ljmp
mov
call
push
mulb
push
addr16
inc
leave
and
cmp
jecxz
or
mov
adc
enter
insl
mov
add
mov
mov
cltd
and
jge
jno
pop
mov
test
cmp
adcb
add
std
mov
mov
mov
push
jae
sub
jne
push
call
into
push
mov
dec
sahf
add
push
xchg
mov
fcoml
adc
outsl
fldcw
mov
add
adc
imul
adc
adc
mov
inc
je
repnz
pavgw
push
arpl
pop
fldcw
lret
sub
xchg
js
js
lods
imul
pop
int3
andl
or
js
mov
sbb
xor
notl
or
jle
adcl
push
lahf
lret
stos
in
xchg
seto
or
gs
sbb
push
jnp
cmp
or
pop
dec
mov
push
dec
pop
idivl
jns
pop
outsl
out
shl
push
aad
mov
add
mov
inc
jne
add
push
mov
ret
or
mov
in
imul
xor
xchg
pop
add
xchg
mov
sub
rol
cmpsl
inc
shlb
int
jae
test
mov
setno
push
mov
push
dec
lret
inc
pop
lods
jmp
fldl
rclb
loope
sbb
push
insb
mov
lret
mov
xchg
sbb
dec
rclb
sub
sbb
movsl
inc
outsb
imul
pop
jl
lcall
jns
cmp
dec
xchg
pop
jne
and
cmpsl
mov
das
fdivrs
insl
or
daa
push
sub
cmp
jb
sahf
xor
insb
imul
xchg
imul
pop
sbb
aam
mov
mov
imull
inc
jne
lods
add
mov
push
xchg
or
outsl
jnp
mov
jecxz
cvttps2pi
jno
dec
inc
jno
mov
jae
fistpll
in
insb
mov
sti
push
push
mov
cltd
sbb
faddl
adc
stc
or
cmpb
rcrl
xchg
cmovnp
mov
shr
ret
lcall
push
dec
ds
pop
leave
scas
ret
test
xlat
xlat
push
inc
cs
jmp
dec
std
loope
dec
adc
cld
outsb
xchg
mov
in
jmp
sbb
add
mov
fimuls
fisttps
pop
insl
mov
bound
pop
adc
icebp
scas
mov
cmpsb
lds
es
pop
into
push
jp
popa
jecxz
enter
push
jp
fdivrl
push
in
lock
xchg
cmp
sahf
push
out
inc
loopne
cmp
mov
lea
xor
incl
scas
mul
fldenv
in
mov
bound
xor
clc
pop
movsl
xor
lcall
inc
push
pop
popa
in
adc
dec
mov
push
jle
add
dec
mov
cmp
popa
xor
cmpsb
jno
popa
test
aas
ret
inc
insl
ret
xor
xchg
dec
mov
pop
in
xchg
push
lret
pushf
cltd
shlb
and
pop
add
push
in
xchg
cmp
lahf
jle
push
cmp
push
cs
cltd
pop
mov
pop
cmpb
jnp
cmp
push
cmp
push
or
jg
inc
mov
ljmp
cltd
jmp
mov
add
cmp
iret
sub
outsb
jmp
lds
les
ljmp
nop
insb
mov
mov
nop
xor
jo
bound
fistps
repz
aaa
pop
pop
imul
cmp
xor
cmp
mov
out
lods
dec
xchg
push
inc
or
jns
data16
iret
andl
xchg
add
inc
fists
andl
lahf
out
mov
adc
xchg
cs
fucomip
dec
adc
aam
cmpsl
jg
sbb
inc
cmp
int3
adc
mov
jecxz
pushf
mov
imul
in
xchg
and
in
cwtl
push
mov
imul
bound
and
dec
out
and
mov
sbb
mov
xor
stc
aas
outsb
adc
rcrl
sbb
dec
ss
int3
add
lret
test
es
hlt
sub
xchg
gs
or
cmc
aam
jne
xchg
mov
lret
mov
enter
int
inc
mov
loope
xlat
loopne
incb
xchg
lea
pop
fmuls
bound
sbb
push
in
push
mov
iret
repz
aas
and
jns
cmpsl
mov
int
ret
fisubrl
cmp
repz
js
and
add
fisubl
mov
gs
popa
and
add
mov
xchg
loope
js
pop
clc
cltd
jle
mov
mov
mov
mov
lahf
lret
fnstcw
ljmp
sarb
jne
loopne
iret
subb
es
jmp
pop
and
mov
add
sbb
inc
inc
mov
or
jge
sub
dec
rcrl
jns
lods
int3
ljmp
push
or
sub
orb
mov
push
inc
dec
pop
xorl
sub
sub
mov
push
cmc
xchg
adc
and
pop
in
or
sbb
repz
jg
lcall
lods
insb
add
cmp
movsb
push
pusha
inc
mov
notl
dec
ret
xchg
icebp
mov
sbb
int3
bound
and
cli
sbb
push
mov
dec
stc
stos
insl
iret
sbb
inc
push
mov
mov
call
sub
fisubs
xor
or
add
and
scas
jle
xchg
adc
fyl2xp1
xchg
imul
insl
adc
push
test
rorb
inc
test
dec
pushw
sbb
pushf
call
stos
push
out
mov
and
lcall
jecxz
rolb
adc
gs
mov
jge
push
mov
out
adc
push
push
aaa
cmpsb
testl
xorb
pop
mov
xor
push
sub
mov
rclb
dec
jg
dec
sub
add
cmp
pop
hlt
dec
push
lods
xor
or
das
and
enter
mov
xchg
jb
jle
dec
jo
mov
outsb
ljmp
pop
add
test
mov
js
push
cmp
ljmp
pop
xor
mov
into
sti
sbb
push
and
jo
sub
outsb
testb
jns
mov
sbb
test
in
mov
mov
push
cld
rolb
cld
dec
data16
leave
jg
xchg
daa
cmp
jmp
xor
dec
cmp
shl
enter
mov
adc
xchg
sahf
fcmovu
aam
dec
addb
pop
inc
pop
sbb
and
mov
pop
dec
cld
lcall
mov
mov
mov
adc
das
repnz
dec
call
aaa
inc
test
push
inc
imul
jae
ret
repz
adc
jo
es
cwtl
in
jmp
add
mov
xchg
mov
and
shll
pop
call
lcall
push
adc
je
and
jae
jmp
add
mov
sub
loopne
ljmp
xor
or
lds
mov
mov
fisttpl
jno
xchg
pop
orl
popa
mov
push
and
lcall
mov
xor
in
gs
test
xchg
iret
lock
jmp
jb
pop
or
fstpt
cmp
loopne
scas
sbb
push
bound
xchg
popf
sbb
out
and
arpl
cmp
dec
mulb
or
inc
stos
sub
nop
lret
hlt
and
push
ja
test
in
dec
orl
out
xchg
aad
cld
cmp
push
in
int
sbb
jbe
xchg
test
sbb
mov
stos
hlt
xor
pop
cltd
div
jbe
jb
mulb
or
add
mov
and
das
xor
hlt
div
imul
jp
popl
hlt
lock
inc
and
push
dec
cwtl
and
sbb
std
add
and
or
sub
out
pop
scas
scas
repz
lcall
xor
fnstcw
adc
into
aaa
sarb
stc
fmull
in
jno
add
xor
fistpll
xlat
fiadds
xchg
add
nop
xchg
flds
add
mov
and
mov
or
and
add
or
dec
or
cs
pop
sbb
out
stos
das
xchg
sahf
jno
bound
cwtl
int3
add
lods
and
addr16
and
test
mov
inc
or
adc
xchg
add
mov
sub
push
inc
mov
data16
cmc
add
xchg
bound
push
mov
jmp
dec
mov
cmp
dec
mov
add
or
mov
jo
icebp
leave
cmp
dec
mov
inc
inc
clc
mov
sbb
jmp
mov
fdivr
int
inc
aad
add
movsl
lea
adc
push
cmp
ja
dec
mov
cwtl
cwtl
dec
push
jecxz
mov
rcrb
pop
push
xchg
sti
xchg
xor
outsb
mov
js
mov
hlt
scas
xlat
xor
jno
or
hlt
movsb
fstpt
call
mov
xlat
jnp
ljmp
cmp
aas
loope
cltd
dec
aas
adc
xchg
mov
dec
adc
repz
push
das
mov
bnd
dec
jne
and
pop
push
mov
lret
jle
sbb
test
pushf
xor
movsb
cmpsb
orl
out
int
lock
mov
call
ret
loope
in
out
in
jle
inc
jmp
adc
fs
adc
push
ds
jge
popf
xchg
adc
and
cmp
ljmp
jg
adc
mov
xchg
mov
fwait
iret
cmp
jge
stc
jle
fcoml
dec
mov
sbb
lea
aam
dec
int
sub
sub
push
cld
sarl
or
mov
fldcw
sarl
and
cltd
fcomps
sarb
adc
cmpsl
insb
xor
inc
xor
xchg
pop
stc
or
cmpsl
mov
pop
data16
addb
fs
adc
addr16
jg
mov
add
jb
in
xchg
push
icebp
pop
nop
popa
adc
mov
fdivrl
inc
adc
fdivrl
jae
cmp
xchg
daa
subl
push
dec
rcrb
icebp
dec
std
fidivl
sbb
cwtl
sbb
mov
aam
dec
mov
xchg
xor
add
fs
sbb
pop
adc
sbb
push
cmp
lahf
popf
jns
faddl
pop
mov
mov
outsl
cmp
lods
and
xlat
push
mov
js
imull
push
ret
mov
jo
xorl
sub
fsts
lds
add
shr
push
fwait
jle
add
inc
mov
loop
fnstsw
sub
inc
ja
xor
stos
mov
es
fwait
cmc
pop
mov
inc
addr16
jmp
jns
push
xchg
xchg
cltd
imul
mov
into
xchg
rclb
xchg
loopne
jge
aam
and
sub
xchg
sub
fs
ret
push
xlat
outsb
lock
push
test
add
stc
dec
imulb
insl
cld
jo
mov
outsb
inc
movnti
cmpl
pop
and
adc
filds
dec
jl
push
inc
repnz
mov
loope
sub
cmp
repnz
cmc
ror
lds
xchg
mov
xchg
jecxz
outsl
fcmovbe
mov
icebp
or
or
cmp
out
js
dec
jg
movsl
pusha
sbb
into
sub
scas
jb
inc
push
push
repz
enter
fidivs
and
lds
mov
xchg
adc
and
push
sbb
es
mov
add
pop
ja
movsb
in
cmp
mov
jnp
pop
push
fstpt
lods
pop
and
sub
stos
sub
lea
add
sbb
xchg
mov
dec
aas
movsb
adc
push
cmp
dec
push
leave
push
js
xchg
xlat
sub
loopne
sbb
movsb
jns
cmc
xchg
sub
mov
popa
cmc
add
hlt
adc
imul
add
push
nop
out
in
sahf
aaa
scas
shll
mov
jp
xchg
mov
jp
xor
xchg
movsb
inc
pop
stos
or
jle
or
in
lret
mov
push
mov
popf
xchg
insb
insb
jge
test
jne
lahf
lods
gs
sete
fimuls
bswap
das
mov
mov
jns
das
and
insl
push
stos
mov
adc
faddl
dec
sub
push
out
push
mov
pop
sub
popa
fsubl
into
xchg
adc
mov
movsb
xor
sub
jmp
bound
outsb
stc
stc
adc
cltd
push
and
or
dec
lock
dec
pop
stc
fwait
jge
pop
sub
mov
xchg
dec
or
xor
cmp
or
dec
inc
es
stos
scas
xchg
add
shl
lods
adcb
add
push
xor
call
mov
pop
push
mov
or
jo
sub
pushf
xor
test
cmp
mov
bnd
les
mov
adc
std
or
ret
xchg
and
mov
stos
sub
imul
outsb
push
xchg
push
push
xchg
sti
inc
cmp
scas
shr
in
ss
cmp
xor
pop
gs
xor
nop
push
lcall
jne
pop
fldt
ja
mov
ret
and
test
inc
xchg
or
iret
inc
ds
jo
pop
dec
sbb
cmp
shll
adc
mov
add
dec
out
sbb
mov
pusha
xor
mov
inc
xchg
test
and
lret
mov
repz
mov
add
xchg
lret
mov
push
cwtl
inc
mov
or
push
int3
mov
in
pop
ret
test
jle
nop
mov
cmp
and
out
test
lret
pop
imul
inc
daa
sub
pop
in
mov
mov
mov
adc
int
enter
pop
testb
pop
push
pushw
lea
mov
xchg
scas
lahf
sbb
rorb
inc
mov
popf
xchg
rorl
test
push
shr
push
orl
xor
fsubrs
inc
mov
mov
sub
mov
andb
fwait
mov
push
pop
pop
sbb
hlt
pop
xchg
inc
jg
fistps
cmc
ljmp
cmp
push
fs
dec
xchg
lcall
imul
jmp
push
cmpsl
jg
fdivrl
cmp
rorb
push
mov
sbb
adc
mov
ret
sbb
cmc
push
lret
inc
mov
jnp
out
pushf
pop
fisubl
mov
jp
roll
adc
mov
sub
jp
in
mov
lods
lret
inc
push
aas
fists
jo
das
inc
cld
not
jbe
xor
divb
test
cmc
push
mov
pop
outsb
pop
push
lods
cmc
cli
icebp
adcb
mov
or
jno
bound
pop
xchg
daa
cmc
dec
loopne
mov
les
push
inc
in
jns
and
faddl
je
cmpsb
fcoml
sbb
xchg
mov
fisttpll
push
cmp
inc
fs
pop
mov
mov
adc
mov
dec
cmp
mov
jle
mov
mov
mov
adc
dec
les
cld
outsl
adc
movsb
ja
aam
xchg
mov
mov
or
or
ss
cmpsb
or
data16
xor
inc
dec
or
cwtl
imul
mov
push
mov
roll
jecxz
dec
sbb
or
test
add
inc
jno
call
mov
scas
andb
pushf
sahf
and
fstl
out
leave
and
or
inc
mov
repnz
into
mov
cmp
lahf
sti
outsb
push
ja
cmp
pop
push
lds
sbb
bound
mov
add
push
orb
xor
fistpll
cmc
fs
pop
nop
imul
ret
into
sbb
dec
jle
push
fsubrs
mov
test
int
or
movsl
mov
or
lea
lods
cmp
sbb
sbb
adc
push
in
fwait
shll
mov
scas
inc
out
mov
repz
stc
mov
dec
les
cltd
lea
out
push
xor
rcll
pop
dec
fcmove
int3
test
loop
sub
mov
dec
dec
push
mov
sahf
aaa
jl
lds
mov
mov
rclb
les
mov
lock
dec
dec
and
xchg
dec
fisubrl
inc
ss
push
push
lret
gs
popf
outsl
mov
aas
in
pop
add
jp
cltd
xor
test
popa
mov
sub
dec
rcll
test
out
sbb
test
aaa
lock
out
pushf
mov
and
mov
fistps
mov
popa
push
insb
cmp
js
iret
jbe
imul
popf
sti
cmpsb
sbb
ret
cs
shrl
aaa
jnp
pop
dec
cmpsl
insb
xlat
in
fwait
dec
lret
mov
or
and
cmp
imul
jbe
popa
mov
int3
add
out
out
dec
dec
mov
pop
pop
mov
gs
add
popf
sbb
sbb
sub
jmp
je
rolb
and
and
cmpsb
inc
pop
ss
mov
inc
sbb
inc
mov
dec
in
js
ljmp
ljmp
stos
mov
sub
mov
inc
pop
xchg
mov
push
pushf
outsb
xchg
ljmp
sub
mov
inc
xor
lret
stos
hlt
inc
pop
inc
popf
lret
dec
pop
test
bound
loopne
xor
xchg
inc
mov
pusha
push
inc
arpl
mov
adc
jnp
iret
dec
cmc
sbb
out
lea
mov
sub
or
stc
in
mov
js
add
dec
adc
xor
or
in
addr16
rcll
jbe
rcrb
mov
adc
in
stc
jb
fwait
idivl
fdiv
icebp
cli
push
xchg
lret
adc
daa
repz
mov
movsl
cld
pop
adc
mov
gs
and
pslld
push
inc
cmp
loopne
xor
icebp
shll
add
jnp
mov
rcll
and
mov
mov
subl
sbb
jge
lret
imul
dec
andb
cmp
sbb
pop
push
test
sahf
mov
sbb
jb
sbb
xchg
mov
les
adc
lret
out
inc
mov
fninit
mov
int
pop
mov
testl
push
cmp
or
xor
inc
popa
fwait
data16
das
mov
psubusb
in
xor
lock
das
dec
call
frstor
lahf
pop
aad
ret
cwtl
popa
push
xorb
stos
xor
out
test
loope
mov
fistpll
gs
push
cli
jbe
cmp
shlb
mov
cmp
outsb
int3
rorb
movsl
xor
jg
xor
add
ljmp
push
jmp
add
in
scas
fadd
push
out
lods
insl
mov
mov
cmp
dec
xorl
repz
in
call
das
jno
xor
fs
scas
sbb
add
arpl
jnp
mov
fcomp
stc
push
sub
popa
lahf
inc
stos
xchg
xchg
test
aam
ret
add
lahf
lds
arpl
sub
jmp
mov
push
jmp
sub
cmp
push
je
stos
aaa
cmp
jge
jne
push
addb
out
daa
out
popf
fwait
scas
popa
popf
sub
jo
adc
bound
push
in
mov
jle
lods
mov
mov
movsb
inc
push
sahf
int
pop
movsl
push
xlat
adcb
imulb
adc
jno
gs
inc
dec
cmp
xchg
inc
jae
pop
movsb
data16
jno
test
repnz
cmp
and
sub
push
insb
ljmp
mov
cmp
push
mov
out
lret
mov
inc
mov
xchg
xor
addr16
mov
jns
cs
insb
fwait
pop
inc
addb
pop
ljmp
mov
nop
fldenv
add
jae
cwtl
sbb
mov
push
cmp
and
push
pop
push
add
js
pop
out
cmp
push
xor
cltd
insl
in
push
dec
lea
dec
and
pop
fisttpl
push
push
sbb
nop
sub
xorl
jmp
fdivrs
js
leave
pop
movsl
jmp
add
xchg
cwtl
popa
enter
jns
mov
push
cwtl
pop
ret
cmp
fsubrs
mov
jne
sbb
hlt
test
movsb
scas
lea
xchg
push
mov
sarl
jnp
scas
mov
cmp
dec
int3
adc
cs
sub
xchg
sub
clc
jl
dec
int
les
mov
popf
mov
ror
jl
sti
jg
call
adc
xlat
cmpsl
stos
mov
stc
xchg
jle
aad
ljmp
bound
int3
inc
lret
loope
adc
adcb
mov
or
sbb
push
cmp
addr16
push
in
cmpsb
sbb
daa
dec
out
cmpsl
jl
shlb
outsl
aam
pop
lock
mov
cmp
jo
and
push
inc
stc
sti
ja
out
hlt
mov
out
out
pop
cmovne
lds
bnd
outsl
dec
jae
adc
mov
leave
mov
pop
dec
dec
sub
add
fisubrl
xlat
push
roll
and
jmp
aas
jle
xor
or
jbe
hlt
cli
leave
ret
or
or
mov
inc
loopne
add
push
push
dec
xchg
cmp
aad
jbe
mov
sarb
in
divl
ljmp
clc
jo
xchg
mov
fisubl
test
inc
push
cwtl
bnd
jge
test
shlb
cmp
inc
hlt
inc
int
xchg
out
nop
dec
or
das
ljmp
adc
movsb
inc
jae
leave
popf
push
jp
sub
daa
push
pop
jp
and
cmpsb
xchg
sti
fcomi
adc
or
ret
out
mov
inc
out
test
adc
scas
xor
add
lods
pop
repz
xor
lcall
into
std
lock
lods
pop
testb
push
or
mov
pop
or
inc
out
xor
sbb
in
mov
mov
fisubrl
jb
fcomi
mov
mov
aam
addr16
daa
mov
cwtl
adc
in
lds
addb
xchg
sub
push
sub
cmp
pop
push
push
jge
mov
ja
hlt
dec
mov
mov
into
filds
cmp
and
xchg
inc
int
mov
sbb
inc
int
sti
lahf
shlb
mov
xor
sbb
movsb
xor
imul
mov
cmpsb
xor
out
mov
fstpt
pop
lret
and
gs
in
lret
testb
mov
lret
add
push
cld
jo
pop
push
inc
mov
insl
les
je
test
jns
pop
clc
jge
xchg
xorb
sub
ret
dec
cmp
cld
stos
ret
push
jl
dec
or
xchg
cmpsl
push
push
jne
push
sbb
adc
inc
and
push
fimuls
xchg
gs
mov
and
negl
std
xor
pop
mov
mov
mov
jg
scas
mov
push
sahf
pop
mov
es
or
rolb
dec
xchg
pop
aas
push
xchg
or
lods
xor
daa
cld
scas
push
in
pop
cmp
test
lods
xor
sahf
add
je
jmp
repnz
adc
outsb
pop
push
pop
push
xor
mov
or
lahf
aas
xchg
test
into
jnp
push
mov
and
pushf
lock
jmp
out
sub
or
or
inc
inc
dec
dec
ret
add
pop
leave
jp
or
dec
adc
fnstenv
add
or
xor
xchg
lods
jo
clc
push
js
pusha
mov
movsl
addb
xor
lcall
ficompl
cmpsb
xchg
inc
mov
fs
insl
repnz
xchg
pop
rol
sub
lods
jae
push
outsb
jbe
loopne
jl
fnstsw
inc
push
rcrl
mov
sbb
xchg
mov
fcmovnbe
mov
sbb
mov
xchg
and
pop
mov
cmpb
dec
loope
lods
ret
pop
test
mov
dec
fstpt
cmp
adc
cld
mov
rol
mov
pop
adc
fcmovu
in
adc
into
cld
fwait
mov
rclb
stos
xchg
ljmp
mov
test
sub
jns
stos
and
mov
ficoml
dec
push
sti
or
jo
cmp
sbb
dec
movsl
push
xchg
inc
xor
lea
insb
aas
jmp
add
pushf
insb
into
inc
add
cmp
cmpsl
lcall
jns
fdiv
inc
push
mov
dec
lret
int
mov
leave
scas
cltd
xor
adc
mov
mov
xor
lea
push
push
faddl
mov
xchg
cmpsl
or
xchg
push
aaa
iret
pop
aam
mov
shl
mov
subl
push
shl
cld
dec
dec
sbb
sti
push
fwait
std
jp
jo
cmp
repz
pop
mov
dec
movsb
sbb
jb
cld
cli
sub
lods
mov
and
clc
push
dec
push
test
int
cmp
andl
xchg
mov
sbb
jmp
aad
testb
inc
pop
je
pop
sub
outsb
xchg
push
xor
in
lea
hlt
dec
jp
push
xchg
notl
js
fstl
push
jns
lds
shrl
push
cmp
orl
ljmp
test
out
ljmp
mov
lcall
mov
insl
daa
jo
notl
push
sbb
mov
mov
aam
xchg
push
lods
in
std
imul
aad
sarb
jne
mov
lret
mov
or
cmp
mov
and
mov
rclb
xor
popf
mov
add
push
pop
in
mov
cmp
jecxz
lret
ja
fimull
popf
sbb
js
or
mov
sub
and
divl
sub
hlt
dec
hlt
and
fisttps
pop
stos
mov
xchg
popa
repnz
inc
mov
mov
mov
sbb
cmp
sub
mov
scas
pop
pop
js
arpl
or
leave
sbb
add
std
mov
gs
or
in
testb
aaa
sub
es
dec
cs
ljmp
dec
mov
sahf
ljmp
je
cwtl
add
divb
or
stos
and
jecxz
cwtl
push
lds
push
xchg
out
mov
repnz
roll
mov
ja
jmp
inc
sbb
xchg
lds
jmp
inc
cmp
ds
push
push
in
push
xor
scas
and
or
fstps
adc
jg
lds
sub
sbb
xchg
add
xor
xor
ret
add
cmp
xchg
and
mov
push
enter
ret
dec
test
stos
mov
test
push
lods
cmp
imul
in
and
out
call
sbb
shll
orb
imul
aaa
out
mov
stos
cmp
inc
cwtl
jns
notl
mov
mov
add
or
cli
add
cmpsb
or
jmp
adc
lods
push
subb
int
dec
xchg
inc
icebp
lahf
test
xor
push
mov
insl
xchg
xchg
scas
in
lds
adcb
jno
mov
xor
dec
fidivrs
lods
je
dec
icebp
cmp
jo
stc
ficoms
lods
mov
inc
mov
stc
fldcw
les
pop
stos
mov
pushf
sub
fildll
jle
popl
lcall
sub
shl
addr16
dec
imul
aaa
mov
ret
mov
outsb
repnz
jge
xchg
xchg
in
fxch
dec
insb
mov
jns
cmp
lret
and
inc
xchg
or
push
cmpsb
pop
insb
or
addr16
or
mov
xor
xor
xchg
icebp
out
imul
flds
lock
inc
sbb
inc
dec
sub
mov
cmc
push
mov
jmp
outsb
xor
neg
inc
mov
aaa
sahf
xlat
dec
nop
lahf
or
push
mov
movntq
and
imul
ja
lods
and
fwait
popa
inc
jge
or
les
mov
adc
pop
or
lock
sub
mov
mov
mov
jne
fwait
inc
sbb
movsb
add
lahf
test
shrl
mov
stos
testl
sarb
or
lret
xchg
lods
es
mov
sbb
pop
xchg
sub
pop
pusha
jno
movsb
mov
inc
add
js
clc
les
leave
push
mov
push
mov
scas
xchg
data16
adc
cmpsb
xchg
notb
mov
iret
cmpl
out
in
dec
shlb
add
rcll
jp
pop
mov
xor
mov
dec
cltd
fdivs
scas
sub
cmpsb
leave
sbb
push
or
arpl
push
push
mov
xchg
cmp
adc
push
pop
pop
mov
dec
push
or
scas
sbb
bound
jno
mov
stos
lret
rolb
and
dec
addl
and
popa
xchg
sbb
xchg
pop
xor
jle
insl
rcr
or
push
cli
add
xor
ret
mov
push
cmc
test
leave
mov
lock
rclb
mov
shll
ficoml
and
scas
jne
push
sub
test
rorb
fisubrs
sbb
push
and
rol
xor
mov
push
add
mov
xor
dec
ljmp
and
pop
mov
outsb
lahf
fdivrs
clc
add
cmova
jo
adc
sub
fwait
adc
mov
sbb
test
mov
mov
in
insl
das
push
outsl
add
fld
fidivs
push
cli
or
bound
dec
popa
jno
xor
lret
push
and
hlt
std
dec
cmc
out
cmpsl
jle
ficomps
push
add
mov
lock
and
add
jle
or
adc
sti
or
dec
adcl
push
lret
and
dec
mov
sub
push
inc
add
jge
xchg
jp
cli
clc
out
repnz
dec
jb
mov
scas
inc
repnz
scas
test
cmp
movsb
je
shl
cmp
test
and
xchg
jb
pop
int3
mov
dec
add
add
das
mov
jo
pop
push
lret
es
pop
or
lods
adc
shl
sbb
jbe
sub
lods
sbb
cmp
jl
inc
inc
push
cmp
out
inc
mov
add
mov
call
mov
push
gs
mov
out
mov
add
clc
push
icebp
fs
daa
ljmp
in
xlat
ret
push
dec
and
sub
adc
cli
scas
jmp
xor
sbb
enter
out
adc
clc
loope
lcall
inc
xchg
out
mov
mov
into
aas
and
xor
aaa
or
les
fwait
mov
scas
jge
fwait
hlt
mov
adc
mov
push
inc
mov
cmp
pop
adc
mov
fldcw
xchg
jmp
inc
test
inc
mov
push
mov
xor
mov
mov
push
adc
pop
cmp
push
mov
mov
sub
jl
push
sub
mov
ds
sbb
pop
fcmovnbe
mov
cmp
dec
in
inc
jnp
mov
mov
int
fistpll
xchg
movsb
out
mov
push
pusha
mov
rcll
dec
and
jl
xchg
out
ret
push
sub
mov
sti
mov
cmpb
or
xor
or
xor
cmp
fldt
jbe
lods
xchg
into
mov
testl
cmp
andb
inc
call
lret
data16
jmp
gs
sbb
cmp
addr16
cmc
repz
and
out
das
lock
mov
fsubs
dec
cmpsb
fst
das
bound
mul
arpl
push
aas
out
mov
clc
stc
mov
pop
jbe
cmp
fisubs
adcl
and
mov
mov
mov
test
mov
es
bound
mov
outsb
cmp
xor
inc
ja
out
push
es
jle
sbbl
mov
test
andb
into
jae
add
sub
repz
and
add
cmpsl
cmp
bound
or
dec
inc
rcrb
pop
xor
xchg
xchg
aam
imull
insl
mov
cmp
cmp
mov
dec
repz
jle
mov
mov
mov
fcompl
dec
jbe
repz
sub
insb
insl
mov
adc
sahf
rcl
xor
js
pop
or
js
aaa
dec
add
icebp
fdiv
aas
inc
dec
lret
xor
fldl
loopne
nop
adc
and
xchg
cmp
add
dec
fwait
lahf
fistps
inc
icebp
aaa
int
outsl
adc
dec
int
stos
sbb
std
rol
fstpl
push
sbb
and
fcmovu
sbb
loope
repz
int3
xor
lods
xchg
or
push
movsb
xchg
test
push
iret
sbb
rcr
pop
mov
dec
or
cmp
ljmp
aas
js
mov
cmp
cli
cmpsl
mov
int
sbb
ss
sbb
insl
outsl
mov
sub
out
pop
xchg
cli
jbe
cmpb
mov
popa
sbb
daa
ret
subb
pop
mov
mov
mov
cmp
ljmp
pop
call
test
mov
inc
mov
mov
jl
mov
sbb
adc
clc
jg
sub
out
inc
jmp
push
out
bound
add
jo
lock
mov
dec
lds
mov
push
jae
repz
fldt
out
stos
xor
jg
rcrl
mov
xchg
insl
gs
push
stos
pop
jns
inc
push
or
xor
xchg
orl
mov
xchg
add
mov
inc
testb
push
mov
cmpsl
jmp
pop
mov
in
mov
movsl
jnp
jecxz,pn
sbb
mov
fistl
dec
aaa
call
or
int3
mov
cmc
jb
inc
add
insb
add
and
cmpsb
out
push
or
or
mov
pop
fmuls
call
stos
sbb
decb
cltd
jl
movsb
jnp
sub
inc
cmpsl
xchg
ficomps
inc
xchg
add
add
ja
subl
adc
ja
movsb
leave
dec
mov
or
jmp
aam
xor
nop
push
scas
stos
int
or
incl
loop
insl
shrl
std
call
adc
stc
in
movsl
sub
pop
sub
cmp
mov
mov
dec
fdivrl
cmp
shll
stc
pop
pop
lds
test
adc
xchg
or
jb
cli
fcomps
inc
mov
popa
loope
adc
and
mov
lcall
cltd
pop
mov
adcl
jno
out
jg
add
test
add
xor
std
sub
mov
inc
das
mov
add
test
pop
movsb
jo
inc
stos
jo
dec
dec
pop
xor
cmp
std
adc
push
xchg
jbe
ljmp
test
sub
ljmp
mov
push
push
adc
insb
leave
scas
xor
bound
pop
sub
xchg
xchg
repz
fisubrs
leave
add
cmc
pop
inc
pop
jne
mov
mov
in
cwtl
or
mov
ljmp
dec
push
cltd
ds
fimull
push
lret
push
cld
xor
in
jne
xchg
int3
mov
hlt
stos
push
xchg
inc
add
pop
ds
pusha
repnz
inc
popf
test
js
les
test
in
cmp
sbb
xchg
sbbl
pop
out
dec
repnz
pop
push
insb
int3
cmp
push
sub
mov
cmp
insb
es
mov
sub
push
or
sbb
pop
adc
jo
push
mov
fucom
or
and
mov
adc
cld
int
out
inc
shl
push
xchg
cmpsb
jecxz
popl
mov
std
dec
cmp
aad
add
xchg
leave
xchg
inc
mov
cli
jle
dec
mov
pop
stos
sbb
xchg
cmp
adc
push
pop
aas
sahf
fsubrp
cmp
mov
decb
mov
sub
add
dec
roll
xlat
jl
or
push
mov
shl
test
mov
lea
outsb
fildll
sbbl
xchg
ds
stos
fsubr
jo
push
or
jl
xor
mov
mov
mov
clc
sub
insb
pop
rorl
xchg
jne
sar
fcmovnu
push
dec
mov
and
pavgb
pushf
inc
pop
ret
inc
sub
sahf
bound
cltd
mov
out
mov
mov
stos
or
pushf
xchg
outsl
dec
inc
jne
push
mov
or
lret
decl
out
pop
push
xchg
loop
aam
dec
sbb
mov
adc
aas
arpl
fs
fidivrs
xchg
hlt
push
lcall
adc
or
inc
ss
jnp
xchg
mov
mov
repz
xchg
jno
repnz
xchg
dec
repnz
sahf
jp
inc
xchg
mov
push
or
xor
xchg
dec
fsubrp
or
and
inc
cmpsb
mov
outsb
notl
add
sub
pop
jno
mov
pushf
gs
mov
xchg
pop
jbe
xchg
call
scas
xor
push
insb
xor
rol
jno
fmuls
and
xchg
movsl
dec
cmp
dec
dec
jg
mov
gs
rolb
push
les
inc
push
fld
leave
mov
out
pop
jl
xchg
xchg
icebp
mov
sub
aad
and
mov
jns
jns
inc
inc
mov
xor
or
dec
idiv
mov
jno
iret
cmp
pop
pusha
pop
jnp
imul
pop
xchg
pushl
jnp
pop
ss
sbb
ficoml
add
mov
jge
and
jl
push
pop
fucomip
sahf
into
pop
inc
jl,pn
fstpt
xorb
jno
and
test
cmpsl
ds
sbb
adc
mov
repnz
add
adc
add
inc
insb
mov
push
cmpsb
std
ds
jmp
rcr
cmp
lcall
xor
rolb
xchg
lods
std
or
loop
loopne
out
sbb
fildl
sbb
mov
xchg
addr16
clc
adc
fmull
imulb
es
pop
cmp
xor
mov
loope
inc
cmc
jns
ficompl
mov
fwait
inc
movsb
cmpsb
cmp
jmp
pop
jnp
mov
xchg
or
pop
sbb
cmp
dec
sbb
gs
cld
mov
add
movsb
add
mov
xchg
loopne
xor
dec
jbe
jns
call
or
mov
shlb
dec
cmp
sub
test
add
loop
addr16
scas
adc
aas
cmpsl
roll
mov
out
stc
sub
mov
mov
mov
pusha
stos
fs
mov
clc
orl
jo
mov
mov
add
add
loopne
mov
mov
sub
xor
xchg
push
adc
cmp
xchg
call
andl
aas
filds
adc
add
dec
mov
xchg
cs
aad
mov
jns
repnz
dec
jecxz
jnp
inc
in
jne
insl
mov
cmp
mov
ja
and
sub
adc
mov
js
mov
adc
cmp
imul
cmp
dec
inc
iret
sub
ja
xchg
push
subl
lods
mov
ret
inc
pop
lcall
mov
push
inc
pop
inc
int
dec
pop
jmp
negb
xor
shrb
or
and
mov
xchg
pop
fsubr
and
dec
or
xchg
jge
in
jg
movb
add
sbb
lahf
lea
sbb
pop
inc
stc
sbb
mov
add
sbb
mov
ja
xor
ljmp
dec
inc
mov
xchg
xchg
ds
das
data16
jl
adc
rorb
mov
in
push
icebp
insb
sub
push
sub
int3
out
sahf
jl
pop
data16
hlt
test
movsb
push
int
dec
orb
and
lea
adc
daa
cwtl
mov
add
cli
js
or
dec
add
cmp
iret
lds
mov
enter
test
cmp
mov
mov
adc
aam
lahf
cmp
std
ljmp
arpl
cltd
cmp
inc
cld
lahf
outsl
aas
pushl
das
dec
push
push
and
add
in
mov
std
push
mov
jge
jecxz
lcall
pop
filds
push
or
cmp
jno
xchg
int3
mov
or
inc
or
sbb
sti
jmp
dec
lods
xor
mov
or
leave
mov
xchg
mov
cmp
add
stc
sub
xchg
dec
sbb
ljmp
cs
xchg
pushf
xor
out
push
xchg
nop
loopne
and
inc
mov
iret
movsb
rclb
orl
pop
lret
sub
aad
je
dec
fidivrl
jb
ja
js
inc
sbb
mov
jb
lods
out
jo
das
jne
or
dec
notb
ret
popa
les
mov
push
and
flds
mov
push
jno
lcall
push
mov
leave
ljmp
jne
push
or
or
js
cs
popf
jge
in
adc
or
test
mov
push
in
xor
ds
push
sub
les
cmp
inc
popa
push
pushl
xchg
outsl
jnp
insb
push
jb
sbb
sbb
xchg
xchg
sbb
subb
jno
enter
rcrl
enter
addb
mov
mov
mov
jge
jns
push
popf
divb
iret
xor
add
push
inc
aaa
in
jns
xor
lahf
jnp
dec
iret
or
lret
popf
dec
pop
xor
movsl
adc
out
cmc
and
mov
or
push
iret
lret
fstl
mov
lock
dec
push
aad
pusha
ss
filds
mov
test
xor
push
xor
imulb
imul
mov
and
repz
ret
ffreep
pop
test
mov
orl
cmpsb
push
sub
pop
mov
dec
or
xor
pop
gs
sbbb
cmpsl
std
inc
adc
sbb
insb
std
jmp
in
std
mov
subb
cmp
je
in
and
jp
push
les
mov
fwait
movl
pop
stc
mov
cwtl
mov
push
icebp
inc
sub
adc
aad
notl
test
push
test
ret
cmp
lock
jne
or
mov
cmp
xor
dec
in
sub
into
and
ret
lret
sub
or
mov
mov
mov
nop
fcoml
mov
or
and
aad
andb
sbb
pushf
xchg
in
mov
lods
out
jg
lock
cmp
popa
jp
sti
insl
test
cmp
push
lock
enter
ds
mov
pop
or
xchg
adc
dec
ret
cld
movsl
sar
into
shll
fwait
pop
repz
mov
inc
shl
addb
fistpll
pushf
ss
outsb
notb
rcrb
call
add
xor
vsubps
xchg
add
ljmp
dec
insb
jno
int3
sbb
ja
mov
ljmp
sbb
inc
pusha
lds
cltd
sti
lods
rorl
jns
in
and
xchg
sbb
movsb
add
ljmp
aaa
add
sub
mov
ja
mov
sub
add
mov
xchg
mov
outsb
pop
push
insb
lahf
insb
scas
imul
scas
push
fcmovb
sbb
mov
loop
mov
out
loop
in
mulb
lods
repz
cmpsb
imul
lcall
mov
adc
cld
push
jae
push
repnz
pop
cmpsl
xchg
imul
je
add
pop
xchg
mov
and
cmp
adcl
in
std
lods
test
insl
and
inc
xchg
xchg
in
push
mov
test
repz
add
pop
pushf
jp
cltd
sbb
into
push
out
sub
xchg
test
jge
adc
mov
push
or
pop
mov
jno
dec
cmp
mov
push
add
push
call
pop
adc
or
movsl
jnp
cli
cmpsl
push
mov
inc
movsl
imul
mov
push
sub
shrb
xchg
push
push
jl
or
xchg
push
and
add
xor
mov
repnz
mov
ret
movsb
daa
fiaddl
mov
out
mov
mov
add
xchg
dec
jmp
jbe
ret
cmp
jbe
add
popf
imull
push
subb
out
jnp
pop
cmp
lods
xchg
inc
aaa
mov
imul
test
pusha
add
inc
mov
cmp
xchg
inc
cli
xor
enter
inc
dec
arpl
out
jae
xor
enter
sbb
cmpl
push
int
inc
les
add
sbbb
out
cmp
or
jno
lret
dec
ljmp
ss
fnstcw
loopne
ss
cli
or
outsl
out
lret
sbb
aam
shrb
xchg
sahf
addr16
mov
mov
prefetch
lock
popa
dec
push
push
sahf
add
repnz
test
das
movsb
mov
adc
cwtl
and
pop
mov
jae
xchg
js
insb
enter
xor
sub
js
xchg
mov
or
fsubl
jl
pop
mov
push
and
imul
cwtl
jne
enter
orb
jne
ja
jbe
sbb
test
hlt
cmp
fadds
insb
pop
jmp
xor
cmp
sbb
dec
jbe
or
cmc
cmp
subb
ret
jecxz
arpl
pop
hlt
pop
in
mov
jnp
add
pop
lret
adc
fildll
xchg
nop
aam
or
mov
inc
xchg
pop
ja
inc
mov
inc
mov
cmp
movsb
in
cmp
jp
jne
xor
jp
adc
jnp
nop
dec
loopne
cld
into
cmp
pop
call
ficomps
nop
or
or
sbb
jne
iret
popf
adc
sbb
orb
or
int3
cmp
outsl
lods
cmp
pop
jmp
sbb
push
adc
add
mov
mov
dec
aad
mov
or
icebp
xchg
vmovntps
and
fistpl
lea
add
jle
ss
imul
sub
dec
mov
and
sbb
adc
pop
shl
mulps
or
or
iret
cmp
xchg
popa
push
xor
or
add
xor
adc
sub
insb
lahf
in
adc
test
add
iret
sub
mov
adc
or
mov
jge
shlb
sbb
mov
xor
addl
lods
clc
or
xor
pop
jp
jns
out
jno
test
dec
mov
pop
iret
les
iret
inc
repz
xchg
mov
inc
sbb
test
adc
loopne
je
lea
fisubs
dec
pusha
lret
leave
aad
push
mov
lods
push
popf
repnz
add
inc
jge
mov
or
pop
mov
pop
int3
or
dec
stc
push
pop
pop
in
adc
js
dec
cmp
mov
jbe
sahf
std
movsb
into
sbb
inc
into
daa
cmpsl
add
dec
pop
jg
mov
sub
imulb
adc
adc
es
insl
adc
loope
sbb
mov
jnp
push
gs
in
int
movsb
jae
or
ja
cli
add
das
out
clc
fiadds
popf
les
add
aam
into
cmp
xlat
push
das
lret
dec
inc
jno
pop
xor
ja
dec
bswap
movsb
sbbb
mov
and
xlat
mov
nop
fldt
sbb
fucomip
subl
js
fucomi
in
xchg
sub
dec
mov
repnz
jo
cmc
mov
or
sub
cs
bound
xlat
push
mov
daa
aas
in
adc
nop
rorb
mov
push
inc
popf
xchg
std
sub
lret
mov
stc
jbe
mov
pop
pop
sub
sbb
add
loop
sahf
ror
push
lret
lea
into
arpl
cltd
jge
insb
adc
loopne
mov
and
push
lods
add
lret
pop
pusha
adc
mov
push
aad
and
mov
subl
mov
xor
or
loope
ror
cmp
dec
mov
shl
fs
mov
jns
push
repz
sbbl
pop
ucomiss
ss
cmp
cmpsb
pop
pop
add
push
push
arpl
jp
es
shlb
sti
jbe
push
jp
ljmp
shrl
push
push
sbb
std
test
pushf
add
ja
xchg
std
pop
lret
cmp
es
incb
fisubrl
mov
das
xchg
dec
cmpsb
adc
loop
jmp
sbb
inc
repnz
and
loop
sub
xchg
add
pop
lods
loopne
or
loope
hlt
adc
shll
cmp
dec
cwtl
sbb
imul
loopne
lds
push
xorl
fnstsw
push
sbb
inc
out
lods
push
mov
jb
dec
repnz
mov
in
fistpl
bound
mov
cs
jle
xchg
push
cmpsb
iret
pop
mov
xor
push
cmc
fisubs
and
or
mov
js
in
and
adc
add
mov
mov
loopne
pop
std
mov
sub
add
out
mov
repnz
aas
inc
jmp
xor
cmpl
sub
shrb
cwtl
or
fcomps
dec
leave
fisttps
ljmp
push
stc
jns
jae
loope
lods
pop
xchg
and
das
mov
movsb
bound
jg
xor
or
popa
jae
shufps
outsb
sub
pop
loop
inc
repnz
lea
cld
push
pusha
pop
lret
xchg
or
and
fld
les
push
enter
pop
fildl
rcrb
xchg
lahf
inc
sbb
and
push
jo
mov
jge
cmpsb
arpl
outsl
mov
mov
inc
inc
push
jnp
xchg
cmp
xor
fisubrl
and
pushf
add
imul
in
or
dec
fcmovu
pop
adc
push
ja
jge
push
ja
xor
scas
adc
xchg
fnstenv
aaa
mov
mov
push
push
add
dec
push
lea
inc
sub
addr16
and
cltd
movb
xchg
popf
cmpsl
pop
fdivrp
jp
mov
xchg
xor
sub
popf
jmp
arpl
es
divb
into
ljmp
mov
jp
adc
jae
popf
inc
mov
inc
sbb
ror
cmp
add
xchg
ljmp
inc
jnp
stos
jns
pop
adc
addl
push
insb
mov
ret
stos
fchs
arpl
push
stc
mov
bound
iret
lods
pusha
lock
sub
into
inc
hlt
and
iret
or
adc
jbe
fsubl
jae
ret
cmpsb
adc
lds
mov
and
pop
adc
xor
sub
je
adc
insl
xchg
lret
jl
lea
sahf
iret
push
imul
outsl
xchg
inc
lret
out
push
ret
cmpsl
xchg
push
and
cltd
arpl
dec
sub
shrb
ret
xchg
push
pop
mov
and
fstpl
fwait
adc
rol
adc
add
push
icebp
dec
sbb
fwait
jb
inc
rorl
pop
pop
dec
mov
push
call
dec
stc
inc
sub
sbb
fisttps
sub
mov
dec
and
out
ja
and
out
push
outsl
in
inc
mov
sti
aas
adc
sub
fs
icebp
insl
cld
addr16
push
inc
xchg
lcall
cmp
dec
sub
jmp
mov
pop
xchg
jo
dec
cmp
lahf
xor
imul
popl
les
fisttps
out
lods
lret
cld
scas
ret
int
cmp
push
gs
out
xchg
lods
fs
sbb
xchg
jbe
adc
mov
mov
sub
je
inc
sub
add
sbb
pop
add
xchg
insb
or
dec
xor
fwait
testb
jg,pn
dec
aaa
mov
jp
pusha
cld
ret
mov
outsl
sti
scas
outsl
lods
mov
dec
in
xor
and
inc
jmp
push
scas
sub
sahf
push
sub
pop
sarb
adc
subb
pop
pop
add
lock
pop
jmp
add
add
xor
jbe
or
sub
pop
mov
rolb
xor
lock
push
mov
inc
test
sub
es
push
movsb
mov
test
adcb
jne
dec
nop
sbb
jge
pop
roll
xor
jo
mov
mov
in
jo
jne
jmp
ret
mov
jmp
or
jbe
jp
and
sahf
pop
xchg
test
outsb
sub
les
sbb
out
push
sbb
mov
xorb
imul
adc
repz
inc
push
push
lods
push
jle
scas
dec
push
fs
dec
pop
ljmp
pop
jecxz,pt
push
cmp
insb
insb
mov
rcrb
mov
cltd
and
call
sarb
cmpl
pop
leave
mov
add
cmp
or
out
push
add
mov
mov
mov
and
push
jbe
xlat
icebp
sbb
int
dec
adc
adc
mov
negb
fwait
lea
xchg
dec
lret
pop
dec
mov
ds
jnp
lahf
cld
mov
xchg
cmp
and
mov
push
xlat
ss
pop
adc
imul
movsl
sub
out
daa
pop
enter
mov
inc
outsl
pushf
loopne
cld
sbbb
fcompl
outsl
enter
inc
hlt
xor
mov
xlat
jl
int
aad
loopne
jg
inc
xor
push
dec
sarl
js
ret
pusha
dec
cld
lcall
lea
cmp
movl
mov
movsl
sbb
ficomps
or
cmp
pushf
je
lret
cmp
mov
mov
jnp
test
aad
jno
and
pop
cmp
jb
sbb
sbb
roll
mov
and
clc
into
test
out
mov
mov
push
loopne
jmp
push
loop
je
fucomip
sub
sbb
cmpsl
pop
cmp
sbb
mov
inc
inc
and
and
fildl
imul
jnp
enter
leave
hlt
cmp
jle
mov
dec
out
adc
sub
jmp
or
lods
jp
test
rcrl
sub
jbe
adc
outsl
jmp
add
mov
pop
lea
inc
ficompl
loop
int
out
xor
adc
in
adcl
roll
sarl
push
mov
cli
jle
cmc
or
mov
sbb
mov
popf
mov
push
xchg
dec
jg
cmpsb
cmp
ret
ror
sub
in
pop
mov
jae
push
mov
push
jnp
fwait
and
mov
adc
icebp
fsubrl
or
jbe
imul
pop
adc
scas
out
rolb
jno
jo
or
rcrb
fs
dec
pop
adc
cmp
shll
push
je
inc
lods
mov
loope
jns
aaa
and
shlb
xlat
cmp
aam
scas
cmp
dec
cmc
into
or
repz
xchg
xor
lea
in
inc
pop
xor
sbb
push
cmp
mov
inc
call
loop
das
mov
push
das
mov
in
fadds
repnz
cmp
notl
paddw
daa
cmp
fiadds
add
pop
xchg
lods
cmpsl
dec
popa
xor
fimuls
xchg
stos
and
mov
cmp
dec
add
sbbl
mov
mov
andl
add
dec
cmp
jbe
mov
mov
or
inc
mov
push
fldcw
or
js
imul
and
inc
xor
packuswb
dec
rep
or
push
dec
rcrl
aam
or
jecxz
loopne
mov
push
pushl
jg
jge
push
cmp
fistpl
jno
es
add
jl
lods
jl
sub
jbe
dec
cmp
add
jne
test
mov
imul
xchg
shrl
sub
fimuls
add
or
cs
mov
dec
pop
xlat
or
xchg
cmpsl
movsb
popf
cmpsl
push
rorb
cmpsl
stc
test
popa
xchg
test
push
fwait
cwtl
xchg
cmpsl
cmc
mov
fs
xor
shlb
ljmp
inc
adc
add
fdivrl
subb
stos
fists
aam
stc
push
adc
aad
inc
or
jno
stos
xor
inc
jecxz
stos
xchg
cmp
or
leave
adc
dec
arpl
inc
rol
push
adc
lea
imul
mov
outsb
cmp
je
dec
add
inc
fsubrs
in
or
adc
lret
lcall
subl
push
inc
je
data16
call
les
push
cmpsl
orl
scas
xor
push
add
push
and
adc
out
add
lods
push
xor
xor
ret
push
push
xlat
push
jmp
mov
cmpsl
or
xlat
shl
jnp
xchg
inc
or
fisttpl
cld
insl
inc
ja
inc
dec
jmp
adc
out
push
call
mov
cmp
aaa
and
ror
sahf
cmpb
pop
inc
rcll
mov
lds
pushf
insl
inc
sub
idivl
data16
and
into
push
mov
in
fs
push
sub
inc
dec
test
mov
push
shlb
data16
ret
lea
pop
call
mov
push
sbb
in
shlb
pop
mov
ds
mov
sub
sub
mov
cs
ds
je
cmp
popa
xchg
add
mov
daa
inc
mov
jecxz
mov
mov
and
ret
push
push
outsb
push
in
xor
out
pop
movsb
roll
mov
mov
cmp
adc
mov
mov
sti
adcb
nop
and
pop
push
jbe
mov
dec
dec
adc
insl
ljmp
loop
lahf
aam
in
and
push
sbb
push
dec
xor
out
xor
lock
adc
dec
imul
jle
sbb
push
pop
mov
or
push
je
repz
dec
mov
jmp
test
in
cmp
pushl
cmp
inc
ret
aad
cmc
adc
cltd
jmp
adcb
sbb
push
mov
cli
out
pop
mov
test
dec
xlat
pusha
add
lahf
adc
outsl
stos
or
sub
ret
cmp
pop
xor
and
lret
dec
icebp
stos
cld
mov
pusha
into
sbb
cmc
popa
xchg
in
and
inc
push
test
fs
test
clc
jge
pop
jne
sbb
dec
sub
sbbb
adc
inc
pop
rolb
jmp
push
nop
adc
mov
movsb
mov
fcomps
jns
sti
pop
bound
pop
pop
cmp
test
xchg
mov
jg
jb
push
pop
push
xchg
dec
call
mov
aaa
xchg
adc
stc
enter
jl
lcall
mov
jnp
mov
scas
pusha
cmp
daa
sbb
sbb
rcrl
sahf
das
cmp
pop
stos
ss
cli
dec
jo,pn
jmp
jae
stc
movsl
ss
jl
enter
mov
jbe
sahf
adc
jle
pop
jnp
jmp
adc
mov
dec
jno
mov
or
jns
out
ss
jp
jb
aad
xchg
mov
jmp
jb
xor
jl
imul
add
dec
or
pushf
out
out
test
or
shll
xchg
loop
mov
sti
mov
xlat
shlb
insb
in
repnz
sbb
daa
push
icebp
push
or
and
orl
and
out
mov
cmp
xchg
outsb
jo
into
pop
inc
add
scas
dec
mov
cmp
outsb
pop
movb
jae
data16
cmpsl
xchg
or
mov
insb
fisubrl
fwait
ljmp
movsb
adc
aam
mov
inc
push
icebp
push
shl
das
aam
idivl
mov
dec
push
ret
sbb
stos
sub
pushf
or
mov
adc
popl
mov
push
inc
cltd
lret
into
jb
sub
fwait
mov
jns
mov
ja
ret
sub
lea
iret
loopne
int
mov
in
push
aam
add
repnz
lock
in
cmpb
int
movsl
icebp
ljmp
push
pop
into
sub
xchg
mov
xchg
aas
mov
jge
mov
xor
pop
scas
mov
mov
and
adc
test
xchg
lods
clc
data16
rorb
fsubrs
xor
test
lret
mov
inc
add
icebp
repnz
jb
xor
add
ret
insl
rcrb
dec
or
add
mov
dec
fistpll
mov
cli
jb
add
push
std
push
mov
lds
cmpsb
jae
insl
push
push
psadbw
inc
push
xlat
lea
and
ss
inc
sar
dec
mov
imul
inc
add
testb
cld
and
fdivs
xlat
pushf
xor
add
add
orl
imul
cmp
push
fstl
push
or
mov
mov
cmovae
andl
cmc
jb
mov
daa
testb
mov
ror
loope
in
pushf
jo
inc
js
in
in
mov
jmp
cltd
mov
repz
shl
and
jae
adc
mov
lds
cmpsb
cmp
rol
cmp
fistl
arpl
mov
mov
hlt
push
sti
leave
jbe
cmp
add
dec
in
sbb
jge
lret
jp
sahf
xchg
hlt
or
push
stos
push
sub
pushf
fmull
bound
stos
repz
lgs
dec
push
sub
add
adc
int
imul
test
pop
jnp
mov
jl
inc
mov
add
mov
js
aad
bnd
loope
and
lret
fsubrl
mov
stc
fimull
inc
lock
mov
fstp
movsl
and
sub
sbb
ss
mov
stos
pushf
rcrl
lret
dec
pop
jbe
push
xchg
push
mov
mov
jle
mov
daa
sbb
inc
pop
and
dec
ret
push
mov
jno
in
or
lret
mov
loop
jmp
and
sub
mov
shll
lret
push
sahf
iret
mov
sti
or
xor
movsb
xchg
push
out
mov
and
outsb
cmpsb
sbb
arpl
sbb
scas
inc
cmp
test
imul
insl
in
in
pop
jne
out
jecxz
sahf
inc
pop
inc
mov
rcl
inc
jno
gs
push
xchg
jbe
daa
mov
xlat
call
leave
inc
mov
jo
jb
test
mov
test
jne
fsubrl
insl
je
lret
mov
dec
sarl
pop
xlat
sub
shrl
ja
lods
xor
push
jp
out
test
ret
sbb
inc
cli
mov
mov
xor
mov
mov
hlt
lret
pop
stos
inc
imul
push
iret
pusha
sbb
lea
mulb
mov
or
cmp
inc
insb
movsb
repz
cwtl
jg
push
andl
jae
jmp
inc
adc
cld
es
and
clc
push
stc
pop
jle
push
xor
push
inc
and
insb
scas
ss
cmc
bound
adcb
jl
mov
push
pop
cld
push
add
adc
pushf
push
mov
pop
mov
mov
sbb
jnp
movsb
fwait
jb
jb
sub
sarb
xchg
mov
test
arpl
pop
xchg
iret
pop
push
add
mov
movsb
sbb
xor
jno
test
mov
fcomip
int
mov
cmp
mov
sti
inc
fs
sbb
jmp
int
movsb
in
js
data16
sbb
xlat
jno
inc
or
out
fwait
mov
cld
ss
fxch
das
mov
jecxz
jmp
pusha
mov
inc
je
and
sahf
cmpsb
sti
inc
sub
movsl
mov
out
inc
xor
pop
fwait
mov
jne
movsb
cmp
aad
inc
rcll
xor
lock
inc
xor
or
add
outsb
cmp
loop
das
lret
lahf
pushf
jl
adc
mov
jo
mov
cmp
xchg
adc
cmc
xor
in
mov
pop
cwtl
jl
jg
inc
xchg
mov
push
push
fisubs
and
dec
imul
push
ret
out
icebp
mov
dec
push
jg
pop
jl
cmpsl
outsl
aam
adc
xor
std
iret
insb
and
push
mov
jle
lcall
imul
mov
in
or
into
stos
test
inc
pop
xchg
fstl
leave
sahf
dec
movsl
into
mov
imull
jno
arpl
pop
sahf
jnp
push
in
clc
sbb
adc
inc
pop
out
fdivl
repz
lret
xchg
andb
fisttpll
jmp
dec
dec
mov
pop
icebp
fidivrl
lret
cmp
xchg
xchg
imul
xor
cmc
sti
inc
jo
inc
into
push
leave
aam
jmp
cwtl
dec
pop
fiaddl
in
push
xor
imul
gs
mov
fcmovb
imul
das
xor
cmpsb
bound
mov
test
test
mov
dec
punpckhdq
or
xor
cmpsl
and
cld
xchg
in
pop
add
dec
or
cmpsb
lock
xchg
shll
repz
inc
ret
lods
and
and
std
add
sbb
xor
test
jb
inc
cmp
es
jge
push
pushf
push
dec
cmp
out
sbb
fists
or
ret
xor
mov
aas
jb
pop
int
xchg
movsl
clc
negl
pusha
xchg
sub
push
lcall
sbb
dec
sub
sbb
test
and
pop
adc
scas
mov
addl
push
or
stos
icebp
lds
xchg
jmp
adc
dec
lock
mov
jecxz,pn
sbb
cmc
flds
jnp
imul
je
mov
xor
stc
je
dec
loop
lods
rcll
mov
push
stc
jae
mov
movsb
imul
pop
jne
jp
xor
fs
pop
out
sbb
inc
sub
sbb
mov
int
pop
push
jns
sub
add
mov
outsl
mov
sahf
bound
mov
lret
xchg
mov
jnp
int3
cmc
addr16
jo
mov
popf
push
add
push
fsts
cltd
shl
daa
icebp
fcompl
arpl
dec
int3
xchg
mov
gs
inc
inc
mov
fsts
add
cltd
mov
dec
inc
loope
sub
das
stc
or
ret
xchg
push
sbb
adc
push
in
push
mov
arpl
dec
push
jg
pop
dec
cmpsl
pusha
pop
mov
je
push
loope
in
or
scas
inc
mov
pop
jmp
push
ror
popf
inc
inc
mov
push
push
addr16
adc
test
xor
ljmp
mov
sbb
sbb
je
cli
loope
push
loop
subl
stos
dec
dec
pop
daa
mov
mov
or
icebp
pop
push
daa
pop
mov
cmp
fwait
xor
ja
inc
xchg
leave
ja
in
push
dec
ds
fidivs
out
pushf
and
xchg
lcall
outsl
testb
push
and
fwait
cmp
inc
xor
dec
ffreep
add
or
sbb
out
stos
mov
sub
mov
xchg
and
into
outsl
testl
ja
cmp
or
lcall
cs
push
cmpsb
mov
test
movsl
xor
mov
adc
mov
xchg
add
cmp
sbb
and
insb
cwtl
ja
sbb
cmp
inc
pusha
push
mov
jmp
xchg
cmp
in
inc
mov
lods
jnp
or
jns
test
enter
lods
dec
jno
add
push
arpl
xchg
dec
popf
test
push
in
popf
add
icebp
cld
loope
dec
xchg
mov
fistl
xor
xor
pop
dec
inc
adc
jecxz
pop
fwait
fs
mov
out
mov
aaa
int
hlt
push
mov
mull
inc
jb
add
xor
fs
cmp
mov
jmp
and
in
inc
pandn
mov
mov
stc
shll
pop
jg
pushf
hlt
or
cmp
sbb
pop
cmpl
movsb
shlb
push
push
js
push
stc
and
les
out
adc
push
jle
dec
ret
cmp
cld
adc
xorl
cmc
or
and
jl
lods
cmp
xor
adc
loope
outsb
sbb
lret
in
fld
xchg
gs
push
aas
mov
or
fcom
mov
cld
push
push
xor
pop
in
gs
js
sub
in
sub
cmp
arpl
mov
lret
push
into
mov
jne
lock
rep
jne
aam
xchg
cld
jnp
out
fcompl
mov
lret
enter
dec
and
xor
cli
sti
inc
leave
sub
inc
dec
aas
ficompl
popa
mov
jmp
mov
jns
mov
cmp
xchg
lds
sub
jo
out
jge
dec
or
lods
inc
test
mov
jp
sub
pop
mov
xor
sub
sbb
lods
or
jp
fwait
scas
arpl
adc
cvtdq2ps
push
xchg
dec
jmp
mov
cltd
outsb
adc
xchg
cltd
test
cmp
sbb
inc
fsub
rcrl
inc
sub
scas
pop
xlat
pop
add
jns
fwait
jmp
popa
add
sbb
add
add
push
xchg
je
shlb
and
xchg
push
or
rcrb
mov
dec
insb
cld
push
xchg
imul
or
loope
shl
mov
loop
sub
ret
pop
xor
xchg
mov
sbb
test
mov
mov
push
fstpl
add
in
int3
push
mov
fwait
push
dec
push
push
push
lods
call
movsb
hlt
les
add
sbb
inc
adc
pop
addl
ss
jno
xorl
lahf
jns
ret
mov
and
sbbl
call
mov
push
xor
stos
loopne
mov
out
xchg
insl
mov
daa
cs
jg
je
inc
mov
sbbl
mov
pusha
adc
and
leave
and
dec
cmpsl
testl
and
push
mov
insb
arpl
addb
sub
filds
xchg
pop
cmpsl
cwtl
lret
push
fidivs
jb
stos
mov
iret
mov
or
mov
jo
lret
push
xchg
scas
jge
jge
mov
pushf
mov
das
mov
testb
mov
and
lods
sbb
push
jb
loopne
pop
nop
mov
dec
xchg
lret
lcall
cmp
out
push
and
mov
in
scas
xchg
or
lret
dec
mov
push
xor
push
add
cmp
push
sub
push
fisttps
sahf
shll
mov
fldl
adc
jae
insb
into
ljmp
icebp
les
mov
stc
inc
sub
lods
pop
cltd
push
cwtl
repnz
jecxz
frstors
and
dec
cmp
ja
shll
je
fbld
into
mov
mov
je
xlat
and
adcl
jae
leave
jb
push
out
mov
push
in
mov
icebp
les
xor
add
push
push
push
test
and
rclb
xlat
gs
out
pop
jl
int
clc
cmpl
rorb
cmp
jle
xchg
popa
pusha
mov
adc
mov
aad
inc
into
or
xchg
in
or
mov
fwait
jb
jae
dec
cmp
imul
mov
sub
aam
cmpl
repnz
sbb
add
lret
test
aaa
fdivrs
lock
mov
sub
fwait
pop
xor
aad
cmp
sub
cwtl
jp
and
aaa
cmc
movsb
sub
sub
jg
gs
jge
ja
in
xor
xorl
rorb
leave
movsl
sbb
popa
nop
adc
scas
stc
jae
test
jg
cmp
lahf
stc
scas
das
and
dec
repz
xchg
or
add
and
sbb
inc
xor
mov
pushf
cwtl
jbe
scas
outsl
test
mov
cmpsl
inc
out
or
test
xor
data16
lahf
pop
mov
cli
push
je
test
js
rclb
dec
js
mov
stc
mov
inc
in
jmp
push
lcall
mov
cmpsb
adc
and
mov
mov
fldcw
orl
xchg
jns
mov
pop
or
inc
and
adc
cli
or
and
and
stos
icebp
add
inc
xor
pop
sbb
cs
cmp
jmp
std
xlat
mov
sub
aad
jmp
sub
pop
test
lods
sti
xchg
mov
xchg
imul
js
sub
or
mov
inc
jbe
fidivrs
inc
jl
and
pop
xor
mov
mov
pop
outsb
jecxz
or
lods
and
mov
cs
call
pushf
aas
icebp
enter
stos
outsb
push
mov
lret
push
push
mov
in
icebp
cmp
and
adc
xchg
pop
pop
jae
or
xor
test
jnp
nop
push
sub
mov
mov
push
jnp
out
xlat
jb
lcall
xchg
dec
push
xor
mov
mov
add
xchg
inc
push
pop
fwait
nop
cmp
xor
stos
push
sub
in
sbb
jb
loope
je
loope
outsl
xor
and
add
mov
mov
test
dec
sub
sub
lock
pop
inc
cmc
mov
cli
sub
popf
mov
ds
test
popf
pop
jg
push
sbb
xor
sub
bndldx
movsb
in
jnp
or
clc
add
and
dec
mov
pop
adc
das
sbb
stos
mov
sbb
pop
imul
sbb
xchg
mov
mov
outsl
sub
cmpsb
jp
xor
fstps
push
xor
fmull
dec
fs
lods
fidivrs
out
push
mov
xchg
je
dec
mov
xorl
lcall
fwait
movsb
and
imul
and
or
or
mov
cmp
ret
xor
or
leave
lods
fs
enter
daa
jecxz
pop
sbb
or
sub
mov
xchg
mov
inc
add
mov
aaa
pop
leave
push
outsb
mov
cmp
into
nop
test
sub
xchg
lea
xlat
push
out
pop
adc
add
sub
hlt
or
adc
insb
jne
jo
ret
imul
stc
xchg
sbb
fcmove
mov
lahf
sub
xchg
lods
xchg
cltd
aam
enter
imul
and
out
jb
xor
outsb
mov
loop
inc
adc
popf
fimuls
dec
mov
pop
and
sub
sbb
adc
stos
xor
inc
scas
sub
push
xchg
add
push
imul
lcall
mov
popf
and
xor
push
ljmp
mov
ss
xchg
or
dec
movsb
cmp
pop
fwait
lret
inc
call
sbb
push
add
push
sub
inc
and
xchg
rclb
dec
mov
adc
les
push
cmp
psubsw
nop
out
push
push
lods
daa
inc
mov
or
xlat
push
ljmp
or
jne
mov
mov
jb
insb
add
xor
mov
push
cld
mov
cmp
lods
idiv
or
sub
pop
xchg
call
aam
movsl
divl
cltd
cmp
int3
push
xchg
adc
jbe
or
les
xor
or
out
sub
mov
insl
inc
dec
divb
adc
lods
cmp
mov
sbb
mov
addr16
mov
or
or
cli
in
jp
xor
pop
jg
push
shlb
test
je
push
hlt
add
xchg
pop
fmull
insl
addr16
xchg
andl
popa
movsl
movsb
pop
loopne
enter
std
out
and
mov
mov
mov
cli
pop
pop
xor
rorb
repnz
mov
sbb
pop
mov
mov
popf
sub
push
push
mov
ret
jne
jge
pop
fnstcw
pop
add
sbb
mov
and
es
sub
and
xchg
addr16
add
sti
fucomip
test
mov
pop
hlt
inc
or
dec
and
sub
jl
sbb
adc
ret
lds
cmp
add
adc
xchg
mov
outsb
lcall
xchg
into
cld
mov
fldenv
les
fdivrl
sub
push
inc
inc
mov
push
shrl
pusha
push
pop
sbb
xchg
inc
aad
fisubrl
jmp
insw
ja
push
ds
test
dec
jae
ja
imul
push
push
and
xor
mov
ss
jo
in
cmp
mov
shlb
cli
and
cmpsb
test
repnz
push
jbe
push
scas
ror
and
jno
jne
pushf
rcrl
iret
sbb
nop
mov
pop
mov
mov
mov
aaa
and
mov
adcb
movsb
fucomi
or
stos
pushf
mov
jmp
pop
rcll
mov
pop
mov
stos
movsl
test
push
push
push
in
cmc
call
in
adc
or
mov
icebp
in
lcall
jnp
test
or
rcrb
dec
scas
das
mov
shrl
and
inc
int
mov
test
or
imul
je
shrb
dec
pop
or
hlt
inc
jo
sbbb
adc
testb
push
mov
iret
jb
xchg
call
adc
adc
stos
fwait
or
mov
mov
inc
imul
scas
hlt
push
sub
nop
xor
loopne
jae
pop
sbb
ja
cmp
mov
mov
in
mov
sbb
push
push
insl
mov
loope
aam
pusha
add
je
inc
fiadds
push
cmpsb
jae
jecxz
sub
es
sbb
ret
push
mov
call
es
mov
xorl
xchg
jmp
mov
sbb
pop
and
cli
sbb
inc
adc
fnstenv
cmp
cld
int3
repz
loop
imul
int3
mov
test
push
jae
mov
push
mov
jno
lcall
addr16
push
pop
pop
mov
sub
iret
mov
xor
xchg
sbb
rorl
cmpsl
push
ffree
out
or
xor
xchg
xchg
xor
orl
cmp
jp
pop
mov
fildll
adc
and
out
xor
pop
mov
xchg
or
jg
imul
cwtl
int
arpl
add
adc
mov
out
inc
lret
sub
add
bound
mov
push
mov
sub
test
sti
pop
outsl
lods
dec
xor
xchg
xor
shrd
test
ss
jl
mov
insl
fadds
cmp
cmpsb
sub
or
mov
push
sbb
xor
mov
mov
pop
add
mov
movb
adc
and
iret
pushf
sbb
imul
adc
stc
push
xchg
leave
and
iret
mov
and
xor
push
inc
xchg
sub
das
repnz
xchg
adc
mov
dec
pop
adc
test
ret
inc
out
ds
testb
fsubl
dec
or
mov
inc
pop
shlb
scas
adc
fwait
inc
fisttpll
das
in
jecxz
mov
in
and
xchg
and
xchg
shll
add
lods
add
xchg
stos
push
pusha
lret
pusha
xchg
dec
cmpsb
test
or
jo
stc
dec
cmp
fistpl
push
test
and
je
test
add
add
aas
fidivrl
cmp
mov
pusha
sub
ss
push
cmp
ret
nop
notb
push
dec
pop
sbb
mov
rorb
inc
aam
dec
dec
adc
jmp
icebp
push
mov
into
out
mov
bound
push
fistpll
sbb
xchg
aam
rorb
fisubrl
scas
sbb
inc
jge
testb
shlb
mov
mov
ja
cmp
outsb
iret
sbb
fisubl
mov
inc
push
test
loopne
jne
cmc
xchg
jp
aam
stc
enter
push
inc
insl
inc
lret
jmp
inc
inc
mov
or
and
sbb
hlt
popa
fimull
imul
adc
mov
mov
jbe
mov
or
xor
pop
cli
outsb
lea
mov
fstp
mov
mov
int
or
push
sub
stos
ja
lock
lods
cmp
lock
mov
mov
jmp
jo
or
cmp
sub
nop
cmpsb
outsl
jmp
hlt
sbb
fmuls
or
sub
sbb
sbb
test
or
add
stos
xchg
push
adc
and
or
outsl
outsl
xchg
add
jmp
popf
or
shll
je
hlt
mov
int
fiaddl
pusha
mov
mov
cmp
push
dec
pop
sbb
sub
mov
lea
pop
ror
jbe
jp
or
sbb
dec
inc
pop
push
scas
lds
pop
pop
negb
sub
lock
test
pop
lods
sbb
push
xor
mov
sub
xlat
xchg
shrl
mov
xchg
fldenv
cmp
pop
ds
push
in
cmp
leave
jecxz
icebp
stc
adc
push
mov
mov
add
sub
xor
mov
aad
aaa
mov
je
inc
inc
into
shl
mov
jle
sub
or
lret
mov
or
mov
cmc
rcrb
sub
mov
shl
ds
xor
nop
out
loop
clc
pop
bnd
adc
and
adc
cmp
adc
pop
shr
popf
adc
jle
mov
mov
xchg
fstpt
imul
dec
dec
jmp
sbb
or
fdivrp
bound
inc
sub
ja
dec
xorl
cmp
or
xor
pop
inc
cmp
aas
sbb
aaa
sti
adcl
lds
bound
std
movsb
jg
push
dec
iret
jbe
daa
push
xlat
push
insl
sub
mov
mov
mov
mov
lret
jne
and
pop
mov
js
jle
es
or
mov
pop
repz
shrl
in
pop
jns
sbb
aas
nop
jae
xor
aaa
int3
cltd
out
or
lods
jmp
or
shrb
cld
imul
out
sbb
arpl
je
pop
lods
mov
cmp
ss
cli
mov
lret
sbb
mov
clc
xchg
out
mov
sbb
xchg
xor
fldt
mov
subps
pop
mov
mov
mov
mov
gs
std
repnz
and
push
or
xorb
pop
jbe
pop
mov
sub
mov
jge,pn
pop
push
ss
addr16
mov
out
inc
sbb
aam
pop
add
stc
cmp
mov
or
fwait
jge
cli
addb
iret
inc
sub
movsl
dec
fs
jne
inc
and
mov
mov
sub
or
into
xchg
cld
adc
pop
xor
sbb
in
add
xlat
pusha
loope
mov
ds
sbb
push
or
add
mov
xor
push
xlat
jbe
popa
in
in
out
mov
mov
pop
mov
sub
into
sub
fsubrl
shld
jne
jle
mov
inc
sub
jg
in
pop
bswap
cli
push
lret
dec
jns
push
jle
push
imull
ret
cmp
adc
xchg
xchg
xchg
jo
xchg
test
imul
inc
sbb
cmc
mov
cli
in
in
push
add
lds
cmc
and
mov
mov
bound
test
pop
imul
mov
mov
push
or
insb
pop
outsl
adc
push
mov
cmpl
clc
sbb
push
int3
mov
and
cmp
lock
and
mov
sub
cmp
lea
add
lods
ja
add
nop
push
enter
mov
sub
mov
mov
or
push
cltd
dec
loopne
loop
cmpsl
add
and
add
inc
and
dec
cli
inc
sub
sbb
dec
enter
adc
imul
xchg
rorl
add
mov
or
or
movsb
mov
mov
and
dec
jmp
ja
pop
push
nop
mov
push
or
orb
ds
sub
push
lds
mov
out
sbb
xor
jnp
inc
inc
mov
dec
sahf
push
jle
xor
gs
test
adc
insb
lods
popf
sbb
xor
lahf
xor
test
dec
sub
imul
sbb
hlt
lahf
js
mov
mov
out
sub
push
cwtl
pop
mov
jb
ret
stos
cwtl
xor
lahf
loopne
arpl
pushl
jnp
sbb
test
sub
adc
fiaddl
mov
bound
in
inc
cmp
insb
mov
ficomps
dec
sub
arpl
mov
outsl
pop
xchg
sub
int
sub
cltd
popa
xor
xchg
push
add
xchg
lret
cs
pop
filds
mov
adc
pop
aam
fs
mov
jge
mov
jmp
add
add
popa
enter
inc
aaa
out
inc
xor
cld
icebp
xchg
xor
shlb
sbb
pusha
adc
pop
and
jno
fidivl
clc
mov
lods
cs
pop
push
out
data16
and
into
lock
sbb
mov
mov
inc
pushf
push
adc
sbb
add
lss
jns
xchg
sub
imul
or
mov
cmp
icebp
aam
push
iret
xlat
adc
clc
lret
cwtl
and
jl
inc
arpl
ret
pop
inc
xchg
push
cmp
mov
int
lret
pusha
lahf
ja
xchg
mov
test
add
scas
out
cltd
into
adc
push
test
loopne,pn
cmp
and
or
pusha
mov
dec
sbb
adc
push
pop
cld
stc
sub
in
sbb
add
mov
jns
fsubrl
in
arpl
lock
es
xchg
movsb
fildl
add
lods
cmp
xchg
jne
xchg
pop
xchg
mov
sbb
and
bsr
mov
adc
addr16
leave
xchg
fwait
insl
inc
sub
jl,pt
inc
out
pop
pop
ja
repnz
push
loop
cmp
inc
push
cli
insl
cmpsb
pop
jno
lahf
rolb
cmp
cmp
xchg
call
ret
sub
sti
cmp
inc
pop
cmp
mov
and
notl
mov
lcall
xlat
adc
dec
shlb
frstor
jb
or
sub
adc
push
in
add
xchg
jo
push
lods
out
sbb
fldenv
mov
dec
fnstenv
fcmovnu
sbbb
mov
dec
in
jmp
imulb
fwait
jno
fcompl
shl
xchg
pop
fbstp
int3
mov
and
jge
mov
jl
andl
fistps
mov
sbb
test
popf
xchg
pop
mov
scas
repz
dec
orb
adc
mov
mov
pop
sub
movsl
sbb
cltd
sbb
ret
dec
imul
jnp
push
je
pop
push
mov
in
cmpsb
jnp
mov
add
push
scas
mov
enter
push
scas
je
push
adc
std
and
cmp
cld
loop
iret
adc
addr16
stos
push
inc
jb
lret
dec
mov
mov
mov
std
cmp
inc
cltd
cltd
inc
mov
mov
fcomi
mov
insb
adc
adc
jmp
push
jl
cmp
sbb
pop
inc
push
enter
jne
xor
add
mov
dec
cmp
add
fdivp
and
pop
dec
lret
push
mov
add
sbb
or
add
or
cmp
movsl
sub
and
xor
fstps
cltd
xor
js
gs
mov
pop
daa
fldl
les
push
or
test
xor
lods
jecxz
adc
pop
jmp
enter
push
ficoml
sub
subb
jecxz
push
or
xchg
sbb
inc
xchg
pop
or
pop
mov
or
mov
xchg
mov
lret
jno
and
ss
out
lea
mov
sub
cmc
shrl
sub
icebp
mov
dec
xchg
sahf
aas
sbb
push
mov
sbb
dec
cmp
mov
mov
enter
mov
iret
in
xchg
stc
push
and
pusha
out
adc
or
fsubl
push
jb
movsb
les
rcl
icebp
xor
sahf
jne
dec
in
lahf
in
jno
and
mov
xor
stc
mov
jge
fcom
dec
mov
testb
lret
cmpsb
xchg
sbb
sbb
jae
xlat
mov
xor
repnz
ja
or
popf
or
mov
addr16
push
mov
lret
xor
add
jg
faddl
push
push
out
xchg
pop
mov
xor
jb
or
add
lds
lods
in
jmp
leave
in
loop
jmp
clc
nop
fdivs
inc
push
sbb
in
or
in
push
ficomps
nop
cltd
pop
pusha
div
sar
test
ja
pop
xchg
jns
inc
int
je
imul
mov
aas
cmp
mov
inc
push
sub
cmc
dec
dec
ret
mov
mov
ds
mov
pop
repz
shlb
add
jns
mov
jbe
dec
mov
sub
cmc
inc
divl
add
orl
push
cs
hlt
jg
int
into
push
adc
outsb
cmp
int3
or
cmp
ret
sbb
lret
dec
cmp
cmp
lcall
sub
and
ja
repz
dec
jecxz
pop
xor
das
sub
addr16
nop
push
jnp
mov
jns
cmp
aad
ficomps
int
xorb
pop
out
loop
ljmp
in
adc
out
inc
les
pop
aad
clc
fimull
cmc
and
fwait
lret
mov
mov
ret
push
push
test
in
addr16
push
addl
sub
mov
mov
mov
jae
sti
xchg
ja
or
je
inc
add
jp
push
fmuls
sbb
lods
sbb
mov
call
test
pop
fmull
push
mov
sub
jmp
jne
mov
pop
mov
jge
inc
and
pop
or
and
aad
sbb
sbb
fcmovbe
sub
mov
sbb
xchg
inc
mov
adc
lcall
push
inc
arpl
scas
pop
sahf
xchg
sub
push
jb
jl
ja
enter
movsl
sbb
fldcw
xchg
xchg
repnz
lods
aam
movsb
xchg
and
int
sub
loope
mov
push
push
sub
daa
mov
out
mov
das
dec
imul
out
gs
ljmp
jle
popa
mov
xchg
push
loop
dec
sub
in
cmp
neg
stc
or
or
lock
js
jno
pop
adc
dec
jp
jp
and
in
movsb
inc
jmp
lock
bound
mov
jbe
jb
rcr
mov
shrb
push
push
dec
pop
mov
fcmovnu
int
fs
xchg
fisubrs
sbbb
inc
fisubl
pop
mov
pusha
mov
sbb
mov
adc
sbb
or
pop
stc
outsl
imul
sahf
mov
xchg
xlat
sub
lods
push
sub
clc
sbb
sub
ja
sub
push
jne
ljmp
fsubr
mov
and
sbb
out
addr16
push
fildl
rolb
adc
cli
sbb
push
imul
inc
cs
aaa
or
daa
jecxz
xchg
sub
jnp
in
or
scas
adc
cmovs
mov
bound
dec
xchg
jl
lret
lahf
dec
lahf
subl
xor
test
sub
sarl
jg
mov
ficoms
sti
pop
ljmp
inc
xchg
jmp
aaa
jbe
cmp
decl
out
or
mov
xchg
cmp
mov
mov
std
or
push
xor
mov
pushf
fsubr
dec
adc
cmpsb
mov
inc
out
mov
lock
pop
push
fmul
cmp
mov
movsl
xor
mov
outsl
jbe
in
jne
jl
xchg
bound
push
xor
in
lret
adc
cwtl
out
mov
jle
cmpsb
inc
mov
jno
xor
mov
jge
mov
and
sbb
call
ljmp
mov
pop
shll
lods
aam
xor
and
inc
dec
cltd
push
pop
jl
lods
in
mov
jp
inc
or
mov
cmc
testl
pop
lahf
jne
pop
sub
imull
mov
popa
xchg
push
and
pop
scas
cmp
shr
in
inc
inc
aaa
icebp
inc
movsb
and
in
js
sbbl
aam
jge
sub
xchg
sbbl
imul
mov
aad
je
lods
test
mov
inc
clc
cli
aaa
xchg
mov
in
sbb
mov
cmpsl
aaa
mov
fwait
inc
mov
inc
xchg
insl
pop
ljmp
bound
aas
jne
pop
pusha
mov
sub
insl
mov
sbbb
mov
mov
pop
and
sbb
aaa
add
in
push
seto
mov
pop
lods
jmp
loop
push
xchg
mov
mov
sub
stos
push
xor
jno
push
das
sub
negb
mov
sub
iret
or
jl
cwtl
cmp
sbb
ret
ret
repz
hlt
lods
push
pop
sub
stos
dec
inc
add
jl
jg
push
push
mov
clc
or
adc
pusha
xchg
pushl
xchg
add
bts
insl
in
or
pop
test
arpl
or
ja
xchg
sbb
mov
in
xchg
push
mov
push
cmp
scas
cltd
out
jns
rcrl
out
cmp
lret
xchg
addr16
popf
mov
fdivrs
dec
sarl
dec
enter
pop
dec
dec
mov
push
pop
push
sbb
or
ret
data16
xchg
fstps
call
jns
ds
pop
test
ja
adcb
gs
mov
sub
dec
mov
inc
es
cmpsb
mov
icebp
mov
cmpsb
mov
jle
pop
sbb
movsb
scas
int3
jp
shll
dec
addr16
pop
test
rcll
sbb
mov
stc
jge
imul
cmc
nop
ds
lcall
jp
push
jp
inc
subl
mov
mov
sub
mov
test
lahf
pushf
ret
movsl
fxch
pop
lea
mov
je
out
or
mov
mov
popf
fmull
dec
fsubp
lds
movsb
lock
xlat
lahf
adc
gs
xchg
xchg
pop
lock
dec
sub
outsl
fs
pop
pop
fbld
pop
dec
jo
inc
scas
xor
lret
or
adc
sub
clc
popf
mov
sub
sbb
mov
pop
dec
outsl
lods
push
pop
cli
pop
inc
or
cmp
pop
rorb
jne
adc
xor
inc
mov
cmp
xor
add
push
pop
ds
and
ljmp
enter
push
out
push
jns
xor
out
mov
push
repnz
decl
jae
cld
shlb
imul
add
std
cld
cld
lods
ljmp
sub
sub
sbb
enter
push
cmpsb
mov
and
jmp
inc
jae
mov
call
subl
int
mov
adc
aas
mov
cmp
out
add
ss
mov
pop
nop
bound
cld
sbb
push
pushf
push
or
cmp
ficomps
mov
xchg
jno
call
xor
mov
mov
adc
fidivs
and
push
fsubs
jnp
aam
leave
mov
and
aad
fstl
cmpb
mov
mov
inc
cmpsb
xor
fldt
lret
in
cmp
fstpl
pop
sub
cltd
ret
push
ret
mov
mov
sahf
sbb
inc
sbb
mov
in
push
sub
adc
mov
pop
add
aad
jbe
les
lods
pop
cmpsl
dec
out
jae,pt
and
pop
popa
std
add
pushf
mov
push
subl
add
cmp
repz
cmc
jecxz
jp
jmp
sub
iret
mov
or
and
sbb
mov
push
jae
loop
adc
or
cltd
int3
xor
push
repz
loopne
int3
push
mov
repnz
cmp
out
pop
push
push
or
test
ljmp
push
mov
and
lods
int
cmp
popl
mov
call
cmpsl
jp
pop
cld
cltd
mov
add
add
lea
and
imul
je
fwait
enter
fiadds
lret
ret
sar
inc
adc
add
int3
pushf
movsb
stos
lret
mov
sbb
rorb
out
inc
arpl
pop
in
out
push
jp
and
jne
aaa
sub
and
push
sbb
mov
out
sub
xorb
cld
out
and
jmp
fldl
in
mov
mov
repnz
push
lds
sar
iret
pop
das
bound
mov
orl
or
imul
stos
js
int3
ljmp
clc
mov
bound
ljmp
push
jne
je
aas
push
imull
jg
sahf
jecxz
stos
lods
sub
mov
cwtl
mov
push
jae
mov
stc
ss
ss
outsl
mov
cld
jecxz
ja
cwtl
fcmovnb
xchg
out
imul
cmp
in
xor
loope
or
mov
mov
xchg
mov
movsl
xchg
dec
adc
loop
jae
dec
jg
mov
cmp
push
in
jnp
sub
insl
jae
push
inc
mov
xor
jl
add
pop
sub
dec
ret
notb
fnstsw
inc
sbb
pop
jne
pop
dec
xchg
lret
cli
mov
daa
nop
or
pop
roll
fs
aas
lods
sub
mov
mov
adc
mov
pop
pop
in
cli
ret
movsb
sbb
enter
popf
addl
fstpt
jo,pt
cmp
push
cmc
fisttpl
clc
enter
fwait
sbb
movsl
fcoms
lods
adc
xor
lock
push
mov
clc
out
aas
jbe
test
jo
pop
or
push
out
cmpsl
sub
mov
sbb
cmp
mov
jmp
add
jecxz
mov
aam
sub
sbb
shl
mov
push
es
arpl
cmpsb
iret
out
pop
push
sahf
fsubr
xchg
push
xor
sbb
mov
mov
and
jl
popl
xor
jg
mov
fldenv
pusha
adcl
pop
icebp
fdiv
xchg
pop
mov
rcrb
mov
sbb
dec
sbb
mov
es
xor
mov
into
mov
jo
outsb
mov
cmc
pop
sbbb
iret
lds
outsl
jecxz
loop
xchg
ds
test
leave
xchg
movsb
pusha
iret
ja
jbe
mov
cmpl
popa
cwtl
mov
xor
jae
test
add
xor
outsl
stos
ja
jb
int
pusha
int3
fsubs
push
mov
xor
repz
pop
push
adc
scas
addr16
xchg
divl
adc
pop
xor
cmp
xchg
in
rcrl
jbe
add
dec
pop
sarb
loopne
insb
out
pop
cmp
insb
add
or
daa
leave
jecxz
out
jge
cmpsl
or
cmp
out
cltd
sti
cmp
xchg
movsl
cmc
sbb
popf
aam
jnp
int
mov
push
testl
xor
ja
mov
stos
dec
push
fnsave
lods
popf
clc
xchg
pop
and
faddl
sub
mov
adc
cmp
push
and
cmpsb
push
inc
jle
sub
ret
pop
sbb
lods
sbb
fs
jb
pop
shl
call
push
fistpl
adc
cmp
aaa
xchg
inc
xchg
cltd
xchg
imulb
mov
sub
pop
and
xchg
rcll
cmp
xchg
pop
shlb
fdivrs
gs
daa
ret
lods
incl
push
mov
xchg
pushf
and
mov
and
outsb
xchg
sub
in
sti
add
adc
lea
push
push
sbbl
cld
xor
mov
xor
inc
pop
add
cmp
mov
pop
in
outsl
push
lret
pop
lret
jmp
and
test
pop
fst
frstor
mov
or
jge
cmp
mov
sarb
mov
ror
das
cmpsl
sbb
sub
in
jge
cmp
filds
ret
xor
mov
xor
push
add
dec
in
subb
mov
jg
xlat
arpl
pop
dec
jl
xchg
pop
cmpl
imul
aaa
mov
leave
imul
ret
or
jmp
ss
lock
lods
jecxz
decb
and
push
cvtpi2ps
mov
mov
xchg
pop
lcall
mov
aas
push
jg
xchg
aaa
pop
sbb
sbb
add
xor
adc
mov
ja
pop
leave
or
daa
mov
mov
fldl
ss
fldenv
xchg
xchg
loop
sub
mov
fs
adc
jecxz
shlb
sub
scas
ret
lcall
loop
mov
cwtl
in
fidivl
pop
stos
sub
mov
ret
mov
dec
push
or
and
push
repnz
test
test
les
pop
aaa
in
pop
cs
jge
negl
or
repz
cmp
xor
dec
cwtl
fwait
add
imul
mov
sub
pop
cmp
leave
cli
push
ret
aam
mov
call
call
xchg
jmp
dec
dec
mov
enter
and
into
fcoms
pop
fldl
or
cmp
lret
cltd
mov
sub
loopne
cmp
clc
shlb
lret
mov
mov
adc
mov
mov
push
sub
xor
call
mov
inc
mov
nop
sub
xchg
sti
sbb
subl
rorl
call
mov
add
push
sbb
xchg
loopne
push
dec
cmp
push
in
xlat
add
dec
sbb
sub
insb
sub
adc
push
mov
inc
mov
fs
mov
cmp
pop
pop
dec
jl
jae
clc
int3
stc
icebp
sahf
shlb
xchg
lahf
xor
sbb
adcb
iret
jmp
jle
fnstenv
stc
lock
jo
int
pop
jne
out
xchg
lods
push
das
lds
stos
popa
mov
aaa
stos
jg
cmpsl
jbe
sbb
push
inc
sti
andl
pop
jnp
push
pop
xchg
xor
mov
adc
dec
xchg
add
mov
or
mov
popf
sbbb
xor
add
inc
push
mov
cli
popa
not
hlt
lcall
mov
imul
fucomip
shll
pusha
subl
cmp
sub
out
sbb
bnd
inc
inc
lcall
jae
out
jl
es
xchg
pop
scas
push
out
aad
cmp
push
xor
aad
in
js
cwtl
jp
andb
pushf
js
int
leave
jle
mov
shr
mov
mov
jb
popf
out
dec
jl
mov
cld
cmp
mov
movsl
adc
mov
push
cmp
movsl
push
cmp
dec
sbb
inc
mov
nop
xchg
adc
sti
sub
mov
clc
orl
lods
mov
sti
sbb
jbe
xchg
xchg
pop
repnz
in
lds
push
pop
addr16
jle
movb
dec
or
cld
xchg
orl
test
and
dec
jns
lods
sbb
shr
dec
les
testl
xlat
scas
xchg
cld
push
sbb
mov
out
push
sbb
dec
cmp
push
add
in
sbb
aas
aam
scas
xchg
mov
dec
je
adc
data16
jle
out
shrb
loopne
push
lcall
ljmp
push
pop
adc
jb
mov
mov
adc
lahf
int
in
mov
shll
ljmp
sahf
adc
stc
mov
xchg
sbb
call
cmp
cmpsl
sub
out
inc
sub
jcxz
add
lahf
cmp
mov
add
jne
add
xor
mov
sub
loopne
xchg
mov
sbb
rep
jbe
cmp
shll
lock
pop
xchg
int3
mov
pop
mov
or
test
hlt
stos
add
add
das
mov
push
xlat
add
xchg
insl
lret
daa
sub
pop
das
shl
xchg
or
add
add
pop
mov
jp
repz
repnz
loope
dec
xchg
cld
dec
addr16
sti
push
aam
inc
adc
inc
adc
lret
andl
loop
jne
js
sub
movsb
sbb
and
add
scas
aad
pop
mov
mov
int
inc
or
pop
mov
jb
test
sub
rcrl
sub
mov
adc
jg
xlat
inc
jg
add
xor
mov
add
mov
sbb
stos
mov
or
ljmp
fnstsw
xor
ljmp
inc
jge
in
test
in
xlat
mov
pop
push
hlt
xchg
fprem
cmp
or
fimuls
repnz
mov
pop
outsb
out
cmp
out
into
pop
aad
add
cmc
je
shll
inc
out
popa
repnz
loopne
mov
fs
xchg
jnp
data16
sub
lds
cmpsl
xchg
in
adc
sbb
notl
out
adc
push
mov
add
std
or
outsb
leave
rcll
push
dec
in
fnstsw
push
push
adc
pop
jmp
push
dec
into
bound
lahf
jb
xor
xchg
rcr
push
fucomi
lock
je
mov
push
sahf
push
pop
mov
pusha
sbb
sti
outsb
nop
mov
xor
inc
daa
aam
cmp
int3
ret
and
sub
out
comiss
cmc
mov
iret
popa
out
dec
daa
xchg
cmp
jb
push
sbbb
shrl
push
push
jns
push
psubd
and
int
sbb
pop
repz
aam
mov
add
lret
cli
or
ret
jnp
clc
addr16
mov
sbb
mov
jmp
inc
push
bound
sub
add
add
xchg
jb
fidivs
insl
push
in
add
sub
aad
jp
je
inc
xor
cltd
sbb
push
xor
mov
cltd
jp
out
or
xchg
arpl
sarb
jp
std
div
push
call
mov
in
mov
sbb
pop
inc
pusha
mov
rcrb
ja
jnp
mov
sbb
or
iret
sbb
mov
je
mov
clc
lahf
stc
mov
gs
lret
das
sub
sub
clc
push
sub
adc
mov
ss
xor
lods
test
cmp
popa
nop
dec
pop
in
out
mov
test
bound
fldenv
fs
cld
aam
shl
pop
adc
std
mov
push
inc
pop
bsr
mov
out
ret
fidivrs
sbb
pushf
pop
std
add
rcrl
pop
imul
add
int3
std
mov
ds
idivl
pop
sbb
ret
add
loopne
mov
out
hlt
inc
dec
pop
ja
xchg
lods
loopne
mov
addr16
lea
lahf
stos
neg
daa
loopne
dec
outsb
mov
fisubl
xor
and
adc
lea
or
scas
push
sbb
popa
inc
cltd
pop
mov
pop
xchg
pop
call
aad
pop
repz
mov
rcll
test
jl
xchg
lret
push
out
stos
mov
adc
sti
dec
pusha
pop
inc
and
cmp
das
es
inc
dec
push
aam
push
jae
aaa
sbb
xor
clc
ficoml
or
dec
push
push
jb
cmp
add
inc
sub
mov
ficoml
mov
aaa
pop
inc
cmp
mov
pop
add
inc
sti
pop
pop
push
mov
inc
lds
or
orl
imul
and
or
mov
mov
xchg
int
dec
call
mov
xchg
xor
push
sbb
push
mov
or
add
cld
enter
sbb
iret
add
lea
ds
sub
fs
pop
shl
and
pop
jno
sbb
pop
cwtl
aad
js
mov
xor
outsl
push
cli
iret
ret
pop
xor
dec
arpl
lret
xchg
jmp
push
stc
out
lea
lahf
jae
jb
and
cmpsb
or
int3
sti
shll
out
xchg
xchg
xor
pop
mov
and
xchg
xor
sbb
sahf
push
loope
ljmp
xlat
popf
test
mov
cs
loop
inc
sahf
rclb
sub
lods
adc
sti
push
shlb
or
jb
out
xchg
xchg
push
jbe
add
xchg
xor
lds
mov
lods
jne
mov
sub
les
in
inc
xchg
pop
cmp
dec
aas
xor
cmp
lret
sar
push
xor
xlat
push
fnstenv
fwait
in
in
xor
push
adc
or
jb,pt
aad
mov
jecxz
cmp
sub
cmp
imul
push
xchg
cmp
pusha
loop
rcrb
lret
cmpsb
fidivs
xchg
sahf
jmp
bound
rcpps
loope
or
add
pop
cmp
xor
cmp
fistl
jns
popf
arpl
jb
ds
xchg
divl
mov
and
lods
pop
add
test
jl
or
add
out
mov
add
inc
cmp
and
sbb
mov
pop
jp
arpl
jbe
ds
in
adc
in
lods
push
or
add
inc
mov
lods
sub
faddl
dec
cltd
out
inc
or
add
imul
push
mov
push
and
or
adc
or
xchg
aam
outsl
mov
add
mov
push
cmpl
aam
mov
pop
sub
sbb
lcall
push
nop
jmp
test
out
adc
and
pop
inc
loop
inc
sub
mov
push
data16
adc
repnz
mov
lods
popa
int
loop
inc
aas
cmp
test
leave
lock
cmp
xor
jnp
cmpb
ja
jg
test
rorl
int3
add
push
iret
mov
push
push
and
inc
and
xor
cld
mov
stos
les
xor
pop
mov
stos
divb
or
leave
das
sarl
xor
jg
or
adc
mov
add
fwait
adc
mov
or
jo
aaa
sahf
jnp
lock
add
out
mov
dec
pushf
or
mov
das
xlat
cmc
dec
xchg
lcall
push
popf
adc
push
jns
pop
cwtl
cld
aaa
mov
fcmovne
cltd
mov
mov
push
jae
daa
lahf
pop
dec
out
sbb
or
or
jle
bnd
inc
inc
rcrl
push
imul
push
adc
arpl
mov
loop
scas
loope
lods
push
ret
adc
aam
jo
bound
popf
pop
mov
push
hlt
push
leave
dec
std
setge
idivl
jbe
cmpsl
aad
xchg
adc
jo
jmp
pop
push
cli
in
in
jnp
scas
ljmp
push
cld
out
roll
mov
cltd
aam
mov
dec
lods
xchg
int3
add
adc
jne
jnp
movsl
loopne
cmpsl
jge
dec
inc
test
sbb
xor
outsl
mov
imul
cld
out
jno
add
sarl
add
es
add
pusha
out
fsts
lea
jb
inc
add
or
in
mov
jge
fdivl
sbb
cltd
adc
lret
les
lret
pop
das
insb
jo
adc
pop
lods
pusha
mov
pushf
xchg
and
popa
fcmovne
push
in
arpl
mov
xchg
adc
cmp
mov
cmp
add
xchg
adc
aam
jl
iret
push
int3
iret
cmp
adc
int3
and
sbb
pop
out
mov
xchg
pop
insl
int
rcl
je
cmpsl
adc
xchg
ret
cmpsb
out
imul
lods
cs
and
xchg
mov
cli
jns
in
adc
xchg
mov
mov
mov
addr16
pop
call
popf
and
push
loopne
ds
jmp
lock
je
dec
loopne
test
leavew
xlat
std
mov
adc
sub
cmp
arpl
jmp
lret
pop
pop
xchg
xor
pop
jno
cmp
ret
xchg
pushf
and
mov
js
jbe
enter
sti
mov
test
mov
mov
dec
pop
jnp
js,pt
out
stos
push
fwait
push
mov
cmp
mov
cmp
xchg
pop
test
add
xor
mov
inc
sti
push
stos
pop
push
xchg
cmpsb
cmc
mov
mov
jnp
jae
inc
mov
int
mov
ss
mov
sbb
jp
cmp
sarb
mov
xor
cltd
jno
cmc
push
aas
mov
xor
and
mov
arpl
mov
mov
add
iret
imul
jne
mov
inc
sbb
pop
or
or
or
cs
dec
ss
and
push
and
pop
rol
iret
lret
fld
fiaddl
sbb
mov
orl
lods
push
or
xor
inc
int3
xor
mov
pop
lcall
and
ret
rclb
es
add
fwait
jmp
xor
mov
sub
mov
and
aad
fldlg2
push
or
fwait
imulb
faddp
pushf
dec
pop
add
sub
lods
orl
mov
cs
cld
faddp
jmp
push
scas
fcmove
sub
xchg
xchg
jbe
mov
shrb
sahf
enter
push
add
cs
loopne
xchg
arpl
aam
filds
outsl
notl
dec
arpl
std
fdivr
cmc
mov
fs
cmp
cld
sub
sub
cmp
lods
leave
cmp
add
gs
test
imul
iret
add
iret
pushf
lcall
fwait
jo
dec
jae
xchg
sub
pop
cmp
xchg
sbb
jb
and
fwait
pop
test
cmp
mov
jle
or
inc
pop
fisubrs
jo
dec
sbb
inc
pop
mov
sub
jge
lods
insl
fistps
pop
iret
inc
jo
ret
inc
and
pusha
movsl
jg
xlat
push
jns
mov
js
xchg
roll
xchg
jle
scas
fisubl
test
adc
jge
mov
dec
mov
sti
dec
pop
mov
cmp
je
push
fldcw
in
dec
xor
inc
ja
pop
cmpsb
lds
push
inc
adc
xor
cmp
add
push
pop
or
lods
loop
sub
add
pop
mov
les
je
and
xor
mov
xorb
std
adc
bound
xchg
ja
xchg
int3
sub
lret
mov
movsl
xchg
hlt
pop
hlt
lock
ret
jp
cli
mov
inc
pushf
push
push
cmp
nop
pop
mov
mov
sbb
cwtl
lea
push
and
xlat
shl
in
add
jne
mov
fwait
jae
leave
fwait
push
lods
or
pop
lods
ret
ja
inc
fwait
mov
sbb
test
loop
or
mov
aam
imul
fisubs
int
popa
ret
adc
xchg
cmc
shlb
push
jne
addr16
sub
dec
orb
pop
lock
gs
xchg
nop
mov
jb
push
out
stos
pushf
mov
or
loop
scas
push
les
push
aam
shlb
or
xor
movsl
mov
jno
jb
addr16
jle
in
mov
push
and
push
subl
inc
xor
lcall
ja
push
push
xchg
add
add
aad
pop
ret
pop
mov
dec
xlat
mov
mov
push
cwtl
lods
mov
sahf
lds
rorl
adc
out
popa
adc
cmpsl
jo
shr
inc
dec
shlb
jbe
scas
enter
inc
cmp
jnp
in
jmp
add
and
mov
ds
xchg
cs
mov
aad
sub
sub
or
inc
rorl
add
push
sub
ret
sub
adc
ret
add
add
push
cmp
xchg
xlat
imul
cs
pop
jno
mov
pop
lock
loope
inc
push
push
sbb
adc
pop
xchg
lea
inc
push
mov
and
mov
js
iret
adc
inc
cmp
sbb
in
pop
fsubrs
clc
mov
jle
inc
stos
imul
fildl
lock
jmp
enter
lret
inc
repnz
cmp
push
pop
or
push
pop
adc
adc
rcrb
imul
in
cmp
iret
dec
jp
inc
sub
jbe
or
mov
adc
inc
and
dec
sar
sub
int3
aad
xor
add
push
jb
lods
xchg
inc
out
enter
mov
dec
out
shl
jle
clc
fs
inc
adc
mov
or
popa
mov
pop
dec
add
and
adc
sbb
cmp
xchg
jns
fs
shr
scas
xchg
test
adc
cld
push
gs
adc
daa
ret
sbb
pop
cmp
in
mov
sub
adc
xchg
out
and
mov
jl
add
jmp
xchg
cli
je
js
jge
pop
aaa
push
pop
outsb
add
out
fst
xchg
movsb
xor
dec
add
insb
aas
mov
or
nop
add
lods
pop
jnp
push
add
pop
or
dec
cs
mov
icebp
inc
data16
xchg
icebp
mov
or
scas
jbe
int3
jl
fadds
jmp
cmp
xor
and
idivb
mov
dec
adc
loope
aas
push
mov
lcall
push
aas
cmpsb
imull
jae
mov
add
mov
push
out
cmp
jp
jns
pusha
ja
jg
dec
scas
dec
sbb
stos
xor
outsl
dec
pop
lods
inc
ret
mov
and
mov
mulb
inc
aas
insb
hlt
call
icebp
or
mov
or
mov
data16
daa
cmp
inc
clc
add
in
fadds
push
sbb
jge,pn
sbb
icebp
pop
scas
aam
mov
and
cmpsb
mov
lret
outsl
ss
scas
jo
call
mov
pop
arpl
jbe
or
fidivrl
addr16
jle
mov
inc
in
mov
or
sbb
in
push
xchg
dec
clc
test
mov
sbb
sti
add
sbbl
fld
js
pop
inc
sub
popa
ds
sahf
loop
inc
and
lods
rolb
sbb
notb
cmc
inc
bndldx
and
mov
and
stos
xchg
sarl
aad
dec
dec
out
pop
push
into
mov
mov
insl
push
rolb
xchg
sarl
int3
sub
dec
stos
pop
stos
iret
ss
mov
inc
aas
xor
loop
sti
jns
ds
xchg
lahf
push
mov
scas
adc
lret
xor
ds
sbb
xor
dec
jmp
adc
dec
scas
ja
gs
push
fdivs
outsb
push
scas
xchg
cmp
and
sbb
sbb
xchg
ds
xchg
cmp
mov
clc
sub
sub
lods
jns
lea
sub
mov
outsb
jge
shlb
xor
aad
mov
push
shrl
shlb
jb
mov
andb
add
xchg
mov
cmpsl
mov
mov
cmpsl
ja
incb
addl
ds
mov
stos
or
cmp
xchg
adc
add
stc
lds
pusha
scas
mov
push
dec
pop
aas
mov
mov
xchg
std
pushf
or
lret
cmp
in
pop
scas
or
insl
mov
cmc
test
icebp
pop
loop
rclb
mov
lahf
imul
cmp
movl
sahf
movsb
add
inc
mov
insl
sub
scas
sbb
data16
rclb
add
mov
cld
cmp
or
and
mov
xlat
jae
jne
jp
inc
testb
pop
xchg
and
jg
sub
popf
fcompl
loopne
sbb
int
sub
or
inc
ficoms
cltd
push
lret
outsb
out
jp
aaa
rdmsr
push
insb
jge
and
dec
insl
out
cmpb
sub
hlt
call
pop
xor
cli
inc
out
movsb
shrb
popaw
dec
lret
lahf
adc
fidivl
cld
jp
lea
dec
jecxz
pop
adc
pop
jecxz
sti
push
pusha
adc
popa
adc
icebp
js
jne
mov
pextrw
mul
in
imul
dec
popf
dec
push
push
popl
addr16
lods
dec
es
push
ljmp
or
cmp
das
mov
js
mov
xor
in
pop
daa
test
outsl
mov
popa
mov
push
mov
mov
mov
and
pop
pop
ficoms
jmp
or
inc
mov
mov
iret
dec
mov
outsl
add
ja
inc
cwtl
cld
sbbb
mov
pushf
jnp
scas
add
add
jns
repnz
mov
cmp
inc
dec
lret
ja
es
lret
sub
cli
mov
orl
jl
cwtl
imul
adc
pop
cmpsl
test
adc
repnz
and
lahf
adc
add
gs
mov
jecxz
inc
ficompl
xchg
scas
cmpsb
repz
mov
xchg
test
cmp
rorb
jl
mov
hlt
scas
dec
shr
jle
repz
mov
mov
xchg
and
mov
xchg
lret
inc
into
lock
lea
xor
pop
cmp
shlb
cmp
mov
xchg
cmp
xchg
sahf
rcrb
fsubr
dec
cmp
and
pmaxsw
mov
shll
mov
icebp
hlt
stos
jb
dec
ds
jnp
movsb
xlat
imul
pop
mov
mov
pop
jg
xchg
jmp
roll
sbb
push
push
addr16
sub
loop
mov
push
and
add
shrl
clc
mov
clc
push
xor
movl
lds
cmp
hlt
out
fcoml
cmp
push
inc
pop
xor
mov
outsl
dec
sub
mov
mov
sbb
mov
mov
jbe
out
repnz
fsubr
imulb
mov
fcom
push
fsubrl
inc
dec
out
ds
shrl
mov
or
xchg
repnz
adc
pop
xchg
dec
lret
mov
ret
js
xorb
dec
add
and
pop
aaa
cmp
arpl
mov
and
int3
cs
int
or
sbb
adc
fcompl
cmpsb
mov
out
mov
xor
fadds
cmpsb
shlb
mov
mov
xor
xor
insl
rcrb
and
and
aad
jmp
dec
cmp
call
jne
push
jb
fbld
out
inc
out
cs
ja
mov
mov
jae
subb
cmp
adc
pop
adc
test
cmp
fstl
xor
or
jge
clc
inc
and
stos
mov
cmp
test
xchg
jnp
jns
iret
mov
adcb
in
mov
or
mov
xchg
hlt
mov
push
ret
mov
dec
add
jecxz
popf
dec
popa
sub
out
aas
gs
inc
les
mov
or
mov
or
mov
shll
or
add
pop
cmp
or
or
cmc
out
or
test
jns
cmp
cmp
pop
inc
or
out
xchg
inc
cli
cld
mov
in
adc
daa
mov
fisttpll
push
adcl
sbb
imul
loopne
jns
lcall
add
or
sti
daa
or
or
in
aas
jno
push
push
ret
pop
mov
mov
mov
adc
rclb
faddl
lcall
scas
push
cmp
les
imul
fwait
inc
je
andl
lea
jmp
insl
and
fsubs
fidivl
jnp
cmp
cwtl
test
pop
mov
js
fadds
xchg
mov
or
sarb
cli
lret
fcmovu
out
or
pop
dec
mov
mov
jbe
sahf
push
or
jno
lahf
cld
mov
scas
ja
lahf
in
pop
add
sbb
push
push
aaa
mov
scas
psraw
fidivl
outsl
int
sbbb
or
sub
jp
repnz
cld
ret
rcll
jne
je
popa
loopne
pop
mov
xchg
xchg
mov
push
mov
mov
aaa
mov
lods
fmuls
shll
push
decl
pop
in
nop
sbb
leave
imul
sub
jno
test
mov
into
lahf
es
es
adc
and
push
in
orb
pop
cmp
adc
inc
inc
popa
js
ljmp
int
movsb
mov
mov
rorb
test
les
scas
fxch
sub
adc
mov
adc
and
jno
and
jne
mov
sbb
dec
pop
cmp
cmp
fldt
jmp
insb
ss
cmp
dec
xchg
fldt
jnp
arpl
ffree
adcb
gs
mov
add
cmp
sub
icebp
mov
paddusw
je
jae
lock
pop
pop
push
push
popa
mov
test
lods
es
sbb
repnz
test
push
dec
rclb
dec
pop
dec
hlt
lea
leave
dec
outsb
xchg
das
enter
popa
call
xor
movsb
sub
fistps
xor
cmpsl
push
cmp
out
insl
addl
insb
jne
andl
bound
xorl
jmp
mov
mov
pop
ss
inc
popa
add
push
call
inc
mov
add
add
xchg
outsl
and
pushf
outsl
sbb
xchg
rcl
lods
jg
adc
cmc
jg
cmpl
pop
fisubs
inc
push
nop
dec
in
loopne
jns
lahf
xchg
imull
es
pop
addb
xor
mov
cli
rolb
dec
jno
xchg
shll
loope
push
scas
xorb
insb
mov
gs
out
adc
mov
fcoml
sti
cmpl
inc
add
aas
inc
push
stos
pop
pop
rcl
or
mov
and
pushf
jg
push
mov
xchg
xor
insb
rcl
test
leave
addr16
inc
cmp
lods
push
scas
push
jmp
add
adc
rclb
xor
rcrl
and
sub
mov
movsb
pop
sbb
adc
int
adc
mov
mov
or
repz
xor
inc
mov
rolb
inc
mov
dec
lret
leave
cmp
int
mov
fs
jne
xchg
nop
mov
push
or
nop
js
cmpsl
adc
jp
iret
cmpsl
mov
mov
dec
fisttps
ror
ret
jl
add
fcos
adc
imull
sub
imul
push
mov
rorb
test
sub
movsl
int
mov
cmp
sub
mov
add
jmp
sbb
dec
sbb
xchg
lret
je
sbb
xor
rcrb
mov
and
pop
es
pop
mov
cld
inc
sub
in
xchg
add
stos
add
xchg
fisubs
mov
aaa
or
gs
cli
mov
sub
lods
mov
mov
and
push
pop
push
movsb
jmp
notl
xchg
adc
dec
mov
cmp
scas
push
movsl
jb
xor
and
sbb
out
sar
inc
call
inc
int3
add
add
mov
jmp
sub
int
icebp
sti
push
push
mul
xlat
inc
and
mov
inc
cmp
lock
sahf
hlt
push
dec
or
inc
test
fs
push
addr16
ret
repnz
repnz
dec
mov
cs
dec
mov
loope
push
pop
adc
fstpl
push
rcrl
cwtl
inc
jg
inc
test
cltd
cmpsl
sbb
and
movsb
mov
xorb
idiv
pop
pop
and
subl
cld
jnp
xchg
xchg
push
js
sbb
or
sti
inc
or
lret
sub
hlt
pushf
dec
test
jne
xchg
push
aam
jb
lds
push
into
pushf
das
shlb
lcall
bound
xor
jne
push
aaa
push
bound
and
xlat
lock
jp
roll
add
int
cmp
iret
adc
cmp
subb
push
adc
lret
imul
or
xchg
or
sub
mov
mov
inc
push
outsb
in
in
mov
cltd
cmp
icebp
hlt
jl
or
push
cmp
xchg
sbb
cmp
adc
xchg
jle
mov
jp
orb
pushf
xlat
fstl
jecxz
add
jae
fldcw
insl
and
pop
popf
ret
mov
push
add
xor
xor
mov
inc
mov
outsb
jae
cmc
mov
shr
loopne
sub
cmp
ret
in
orb
sub
popf
test
shrl
mov
jbe
xchg
std
sub
in
push
repz
mov
loopne
lcall
sahf
test
mov
cmc
xchg
test
lock
out
repz
ss
cwtl
in
out
adc
and
xchg
cmp
aam
dec
repnz
mov
into
adc
push
js
xchg
adc
test
mov
scas
xor
cs
or
int
scas
repnz
pushf
enter
shr
mov
out
loope
out
mov
pop
xchg
mov
mov
imul
dec
jp
popl
pop
mov
pop
stc
inc
pop
loopnew
pop
xlat
jge
jbe
push
fwait
xchg
add
jge
addl
add
cmp
mov
cmp
mov
shrb
in
pop
stos
add
dec
ficomps
push
push
pusha
ja
in
xchg
movsl
das
mov
mov
hlt
xor
push
roll
lahf
push
lods
outsb
push
test
sub
jae
je
jge
cmp
rcll
jmp
push
and
or
test
data16
jnp
xchg
xor
sub
cli
imul
stos
jns
pop
cli
scas
in
movd
lods
pop
add
adc
mov
adc
pop
mov
hlt
sbb
add
cmp
sub
repnz
jle
push
daa
aaa
add
pop
ror
sbb
je
mov
subb
sti
stc
das
mov
dec
jae
mov
in
fnstcw
inc
fwait
sbb
outsb
mov
daa
xchg
rcrb
shrb
fstpt
punpcklwd
add
push
fistps
scas
sbb
add
les
js
movl
sub
xchg
ja
mov
incb
or
jno
pop
aaa
jnp
adc
adcb
fcmovb
and
adc
push
sub
mov
dec
xchg
mov
dec
xor
fisubrl
sbb
xor
push
gs
fimull
fs
scas
mov
sbb
cld
push
push
test
mov
roll
cmpsl
addb
daa
test
dec
xorl
addr16
mov
xchg
xor
fisttpl
arpl
imulb
aaa
dec
xlat
xor
push
xor
sub
loop
jb
stos
pop
jb
mov
jnp
add
loopne
push
cmp
lcall
aad
insl
cmp
xlat
adc
aad
movsb
push
call
dec
lret
clc
loop
movsb
xor
cmp
jmp
stc
push
cli
jnp
inc
mov
adc
push
xlat
xor
pop
xor
test
loop
rcll
popa
push
sub
iretw
cmp
jecxz
sbb
jo
pop
jp
scas
clc
mov
xchg
jno
push
fsubs
mov
les
jne
loope
pop
mull
es
xor
push
les
mov
ror
push
pop
loopne
inc
pop
rorb
mov
pop
into
xor
sbb
or
ljmp
popa
divb
pop
jp
xorb
lea
leave
cmp
cmpl
jge
xchg
jmp
mov
sbb
div
inc
test
je
movsb
lods
cmc
mov
add
or
test
les
pusha
cmp
bound
sti
sub
insb
scas
mov
std
call
mov
xor
js
and
lahf
mov
xchg
push
pop
stos
pop
aaa
iret
mov
push
and
mov
in
mov
jmp
dec
lea
in
lods
add
jae
xchg
fwait
dec
ds
adc
loop
mov
jp
mov
dec
addr16
mov
je
push
lcall
sbb
pop
dec
jae
lods
add
imul
movsl
shll
std
movsl
sbb
in
nop
xchg
push
ja
jge
jno
adcl
xchg
out
loopne
jo
pop
addb
out
rorl
shll
fstps
ds
mov
repz
pop
push
cmc
bound
gs
or
stos
mov
inc
pop
cmpsb
xor
and
sbb
or
xor
sbb
jmp
popf
mov
cli
mov
ss
xlat
inc
inc
xor
daa
xchg
lods
jnp
stc
nop
movsl
lret
jns
iret
nop
push
cmc
cwtl
out
and
jae
xchg
cltd
jnp
les
imul
nop
mov
xor
sbb
and
loope
push
mov
inc
push
test
mov
repnz
lret
dec
mov
xlat
xlat
xchg
add
xor
jecxz
cmp
mov
push
loopne
dec
xchg
incb
fldl
xchg
out
lods
popa
mov
xor
mov
mov
xor
pop
mov
adc
sbb
das
jge
jo
pop
mov
mov
xor
loopne
xchg
push
dec
push
fistpll
adc
mov
pop
jmp
leave
cmp
clc
mov
jb
add
rcll
addb
and
test
sbb
inc
test
nop
sub
sub
test
clc
jle
in
sbb
faddp
pop
dec
or
sbb
xor
out
adc
and
std
cwtl
mov
lcall
mov
ret
cmpsl
and
out
adc
jp
or
push
jmp
aad
fisubrs
push
ljmp
sub
fnop
jmp
push
stos
repnz
or
insb
or
add
and
lahf
and
test
jle
inc
xchg
cmpsl
xlat
jns
xor
inc
pop
add
and
test
inc
fs
movl
jmp
sub
xlat
pop
in
add
mov
jle
jns
insl
cld
pop
fbld
sbb
xlat
fsubrs
jle
rorb
arpl
push
arpl
mov
adc
incb
hlt
mov
std
jp
arpl
add
lahf
shrb
push
popf
hlt
mov
in
mov
mov
dec
mov
xor
add
dec
aaa
cmp
mov
cld
push
add
mov
pushf
popa
jg
pop
imull
aad
inc
or
andl
mov
mov
lret
mov
push
rol
mov
mov
test
push
mov
inc
jb
mov
inc
inc
cmc
mov
push
xor
iret
xor
lea
xchg
pop
loop
push
aaa
push
js
mov
jb
shr
fdivs
mov
movsb
push
pop
orb
mov
stc
scas
pop
stc
add
ret
sbb
rorb
stos
jo
fdivrp
mov
mov
mov
cmp
pop
aad
cmp
clc
mov
ds
fisubl
xor
jp
xor
jns
push
mov
jecxz
cld
pop
lea
fldenv
lods
pop
inc
das
jno
mov
adc
mov
loope
cmp
lods
out
jle
popw
xchg
sub
lock
mov
jbe
out
pop
test
lcall
or
dec
jmp
inc
cwtl
movsl
push
jle,pt
loop
lahf
into
sbb
mov
fldl
adc
ljmp
and
in
aam
aaa
pusha
ret
adc
mov
sbbb
push
lret
loop
in
mov
fwait
xor
pushf
mov
or
adc
and
and
sbb
inc
or
pop
clc
lods
call
cmp
stos
and
imul
ljmp
psubd
fld1
pop
inc
mov
not
dec
outsb
mov
jnp
sahf
inc
imul
out
inc
jo
sbb
scas
cmp
nop
xor
and
iret
je
loope
cli
xchg
xchg
ljmp
out
cmpsb
mov
ret
or
cli
pop
add
mov
rorb
lret
xchg
aaa
stos
or
jo
out
mov
pusha
sub
mov
add
dec
push
sbb
and
rol
inc
fcoml
leave
push
mov
fcoms
push
and
cwtl
dec
aas
add
ja
and
shll
jo
out
inc
dec
lods
xchg
jp
or
jno
sub
add
sbb
add
sbb
stos
xor
mov
xchg
pushf
out
cmp
test
fs
sbbb
mov
xchg
aam
xchg
jo
sbb
pusha
inc
dec
mov
out
dec
cmp
fsubrl
pop
mov
or
fimuls
add
arpl
leave
data16
push
stos
inc
sbb
js
cmp
nop
pop
dec
mov
int
inc
push
inc
xchg
and
je
ret
push
mov
mov
fwait
icebp
insl
outsl
int3
jnp
repz
dec
js
call
add
fwait
mov
pop
fcoml
xor
push
sbb
andb
add
lock
je
scas
cmp
adc
cs
subl
fstl
into
rcrl
fidivrs
or
push
jl
xchg
test
cli
add
cwtl
repnz
leave
push
sub
mov
into
shlb
fucomi
insb
dec
into
lock
sbb
popa
sub
jp
insl
dec
stos
cmp
add
xor
inc
dec
pop
jae
mov
adc
jecxz
fbstp
mov
cmpsl
fidivrl
pop
cs
bsf
mov
dec
xchg
jle
dec
gs
clc
ja
adc
inc
or
insl
int
popa
fsub
jp
mov
lock
or
cltd
or
jo
in
lods
subl
in
mov
jecxz
inc
dec
scas
popl
outsb
fidivl
lea
out
jmp
push
je
mov
xor
insb
aas
xchg
das
in
stos
popf
sub
aaa
loop
je
dec
sub
pop
pop
and
imull
xchg
lds
sbb
push
fstpl
adc
rep
ret
or
sbb
jmp
fsubs
adc
int
mov
cmp
mov
add
lock
xor
or
lea
aad
and
or
xor
add
add
and
xor
outsb
in
rol
xor
out
cltd
push
jg
pusha
jae
out
notl
cld
jl
xchg
cmp
loop
mov
lret
sub
dec
jae
add
jo
ret
jne
popa
mov
or
xchg
test
lea
fwait
jno
mov
inc
cmpsb
imul
addr16
stos
jb
and
lahf
sub
loope
push
jae
mov
cmp
xchg
adcb
sbb
arpl
adc
add
dec
ret
cmp
and
adc
mov
xor
jg
sbb
pop
dec
in
popa
or
popf
cmp
mov
fisttpl
les
mov
mov
dec
fcmovnbe
mov
mov
fdivl
pop
into
pop
jb
push
jg
pusha
jg
pop
push
pop
cmpsb
int3
mov
mov
loop
sbb
or
scas
in
cltd
adcl
push
in
jle
sbb
jmp
loope
mov
je
mov
xor
mov
push
push
sub
enter
pop
cmp
insl
jg
aad
mov
cmp
jnp
rcl
mov
and
cmp
in
popa
push
lods
test
jb
mov
lret
lret
mov
test
daa
or
pushf
mov
scas
pop
and
pop
adc
cs
xor
mov
sbb
lret
jo
and
cld
sub
dec
scas
sti
xor
mov
popa
cmc
jg
mov
sub
push
sbb
mov
ret
push
push
test
adc
add
and
inc
nop
pusha
into
aaa
adc
add
mov
jcxz
xor
jmp
and
or
rorb
xor
push
pop
bound
lods
xorb
dec
fcomps
je
jnp
dec
gs
dec
jnp
xchg
dec
dec
scas
mov
add
mov
jecxz
mov
pusha
nop
jae
fwait
fwait
push
push
mov
jnp
jbe
fstl
dec
leave
jmp
loope
or
in
adc
mov
sbb
test
push
xor
xchg
inc
add
jo
push
dec
or
jmp
fsts
test
aas
flds
aad
lea
hlt
jo
stos
nop
dec
or
pushf
inc
jle
mov
cmpsb
and
xchg
xlat
mov
jo
mov
or
lds
lds
xor
jge
fdivl
xchg
add
cmp
mov
cmpsl
fsubl
push
aas
ret
rcrb
std
lret
dec
adc
xchg
jle,pt
in
aad
jge
out
or
pop
sub
mov
rcr
inc
ret
xchg
int
lcall
xchg
pop
mov
in
mov
xorb
and
add
mov
sbb
or
xchg
leave
jmp
mov
addl
add
push
fwait
pop
and
pop
mov
ss
xchg
sub
in
pop
sbb
repz
test
adc
movsl
xor
mov
fsubrs
jecxz
and
popf
sqrtps
mov
decl
jns
jne
sar
subl
mov
xchg
xor
addr16
aaa
stos
pop
or
push
jo
sbb
xor
inc
mov
dec
dec
adc
daa
fs
mov
data16
pop
sbbb
add
cmp
rcll
jns
adc
pop
fld1
jo
and
adc
sbbl
jl
pop
pop
aam
je
sbb
mov
mov
mov
iret
push
popa
dec
movsl
lock
hlt
push
call
xchg
in
push
push
push
testb
lahf
add
or
pop
add
adc
mov
cmpsl
mov
cmp
dec
mov
adc
cmp
adc
aas
pcmpeqb
daa
jnp
rcl
jmp
or
lock
add
nop
fcmovu
fldt
in
lock
cmp
push
xchg
jb
adc
dec
pusha
and
aaa
dec
inc
adc
mov
mov
xchg
inc
xchg
mov
sbb
xor
mov
or
rorl
cmp
mov
movsb
jb
ret
ret
mov
jo
pop
xchg
sbb
mov
das
movsl
pop
mov
mov
pop
sub
and
or
loope
test
sbb
add
sub
cli
popf
lahf
add
xchg
arpl
jl
or
mov
aas
cmp
mov
ficoml
aam
sbb
fdivp
inc
and
fnsave
mov
push
and
xor
lahf
jmp
movsl
in
lods
aad
adc
xchg
nop
cmp
nop
out
jl
adc
lock
outsl
cmpb
add
push
rolb
mov
dec
and
out
xchg
and
ret
cwtl
lock
or
push
rolb
xor
scas
push
mov
pop
rclb
insb
rorl
dec
inc
test
and
push
pop
sbbl
jmp
cmp
cld
loope
in
lock
dec
movsb
push
pop
je
xchg
sub
ds
push
xchg
adc
rclb
hlt
xor
rcr
sbb
in
stos
lods
gs
cmp
nop
push
leave
in
sbb
add
fld
fstpt
cmp
jbe
mov
rorb
loopne
cmp
sarb
mov
and
mov
pop
mov
jo
popa
aad
shr
pop
mov
push
stos
push
sbb
ss
jne
pop
mov
movsb
push
mov
std
pop
inc
mov
rcrb
insl
pop
lahf
inc
bound
outsb
stos
jl
pop
dec
jne
mov
hlt
sub
jle
nop
int
pushf
fstps
lret
enter
xor
mov
divb
xor
mov
sub
pop
jb
add
xchg
movsb
mov
xlat
xchg
fstl
movsw
cmp
adc
mov
pusha
inc
mov
out
lds
aad
leave
or
adc
xchg
mov
loop
call
rorb
jae
insl
and
stos
orl
cmp
mov
xor
push
test
into
std
es
pusha
jae
jge
cld
fsubrs
in
sbb
push
rolb
jne
outsl
scas
jg
fmuls
jmp
aas
dec
add
es
xchg
push
mov
jno
cmp
inc
sub
lods
or
loope
adc
js
insb
xor
imul
jns
dec
imul
jge
cmp
js
dec
push
jle
out
dec
es
jg
out
out
mov
pop
push
js
stos
out
shrl
outsl
or
and
je
leave
xlat
test
mov
rol
idivb
jmp
sbbl
jle
int
test
js
iret
aaa
ja
and
into
out
or
or
and
inc
xchg
iret
mov
add
cmpsb
inc
stc
sub
cld
call
and
xor
xchg
sbb
xor
nop
andl
mov
xchg
push
jnp
sbb
adc
cwtl
lahf
xchg
xchg
test
mov
cld
cmpb
test
adc
orb
aaa
cltd
cs
push
les
in
movsb
scas
push
push
movsb
sbb
mov
call
pop
mov
jge
pop
cmp
mov
movsb
insb
cmovae
xor
jge
int
repnz
mov
sbb
inc
mov
rolb
les
adc
mov
nop
dec
xor
pop
dec
inc
iret
packsswb
fnop
adc
lea
xor
shl
mov
fisttpll
mov
fsubs
inc
je
fldt
std
pop
lahf
pop
xchg
mov
adc
inc
cli
mov
fistps
add
xchg
and
roll
jle
mov
push
lock
stc
insb
xor
push
out
stc
cmpsl
push
scas
sahf
sbbb
dec
jmp
loopne
pop
stc
imul
filds
js
inc
lret
fsubl
mov
repz
sarb
jle
pushf
fs
ss
xor
mov
jge
cmp
mov
stos
dec
adc
ja
mov
sahf
sub
std
nop
push
shl
sbb
sti
sub
or
cmp
scas
xor
fld
pop
push
push
xchg
fs
in
mov
push
insl
sbb
aaa
bound
popa
lahf
or
cli
jb
xor
outsb
mov
jge
inc
add
adc
mov
ds
sar
enter
clc
mov
and
je
and
push
jmp
inc
addr16
push
or
add
jne
fpatan
sbb
aam
cli
fistl
jg
scas
shrl
pop
iret
icebp
pusha
scas
dec
cmp
nopl
and
ds
fdiv
or
cmp
leave
loopne
cmpsb
or
push
dec
pusha
sub
leave
xor
in
xchg
ret
mov
rcrb
stos
cmp
pushf
loope
test
popf
mov
mov
and
mov
sbb
dec
jle
aas
in
paddusw
sbb
jno
jbe
xchg
insb
jbe
cmp
ja
or
in
mov
xchg
mov
fsubl
ljmp
out
sub
sbb
enter
iret
lock
incb
dec
mov
jmp
pop
loop
mov
adc
inc
sub
mov
sub
xchg
inc
push
imul
mov
or
pop
das
inc
or
and
loope
lcall
sub
frstor
sub
sti
cmp
mov
xor
push
das
xchg
cld
hlt
pop
xchg
cwtl
out
mov
sub
or
out
ds
or
js
ljmp
mov
scas
aad
pop
push
loopne
mov
ja
dec
mov
mov
xchg
outsl
jge
jg
dec
in
mov
inc
and
loopne
adc
in
and
aam
lds
xor
ss
adc
cmpsb
test
fisttpll
and
int
or
dec
stc
insl
add
pop
mov
fildl
push
mov
sti
xchg
add
add
pop
jb
pop
ljmp
stos
out
aas
test
sub
jns
sub
mov
adc
pop
jae
rclb
push
out
xchg
pop
fildll
fidivl
pop
repnz
add
jecxz
xor
or
inc
cltd
adc
dec
jno
xchg
mov
pushf
dec
xchg
lcall
pushf
mov
mov
mov
data16
ret
mov
iret
mov
pop
xchg
and
jp
add
data16
dec
pop
dec
popf
shrb
xor
bound
fidivrl
dec
nop
add
xlat
jmp
gs
jne,pt
dec
popa
lods
push
lock
lods
pop
out
movsb
mov
ret
add
fs
jle
dec
cmp
icebp
mov
jmp
test
xchg
jb
pop
outsl
pop
jae
mov
stos
and
jmp
lea
mov
in
es
repz
xchg
push
sbb
or
jge
mov
mov
jbe
fisubl
mov
es
mov
xchg
pop
add
cmp
or
out
or
mov
pushf
mov
fcmovnbe
push
into
sub
sbb
fcoml
lcall
xchg
mov
pushf
fnstcw
add
pusha
xor
push
mov
sbbb
mov
xchg
inc
mov
mov
sbb
xabort
add
mov
mov
enter
pop
mov
fmul
cmp
fcmovnu
xor
push
sub
jecxz
push
or
cmp
test
sahf
adc
lea
pop
fbstp
add
daa
dec
sbb
xor
cs
out
cld
das
xor
cmpb
cmp
lods
sbb
stc
add
dec
lods
sbb
movsb
mov
xchg
cmp
into
mov
loopne
arpl
notb
sti
inc
mov
sbbb
test
addr16
lcall
push
js
shlb
lds
adcb
sahf
scas
mov
int3
dec
dec
mov
adc
mov
dec
shlb
cmpsl
rclb
test
outsb
adc
jmp
dec
fldl
imul
leave
xchg
adc
push
push
pusha
cmp
mov
scas
nop
faddl
sub
shl
jb
out
cld
jle
stos
jbe
mov
mov
test
scas
shlb
enter
jbe
push
sbb
scas
adc
pop
inc
and
test
mov
ret
lock
les
push
sub
or
or
lcall
lods
nop
ds
inc
sub
pusha
jne
pop
leave
mov
xchg
sbb
or
and
andb
xchg
inc
adc
push
lds
gs
inc
test
adc
cmp
pop
jecxz
clc
in
iret
xchg
xlat
in
cmp
addb
pop
iret
std
or
and
repz
cmp
scas
and
sub
xchg
popf
lods
dec
jns
lahf
movsl
jne
pop
sub
dec
push
sbb
pop
sub
leave
idivb
out
jge
loope
jmp
out
or
ljmp
mov
sub
and
xchg
movsl
mov
mov
inc
jnp
jne
adc
mov
fucomp
cld
sbb
psubb
and
mov
mov
mov
lea
lods
loope
daa
dec
pop
jns,pt
cmp
lret
stos
and
into
adc
add
rolb
popf
mov
adc
dec
in
insb
fs
mov
xor
lcall
cmp
mov
popf
jg
cmc
leave
dec
mov
ja
pop
test
fdiv
or
sbb
adc
pop
cmp
movsb
ljmp
push
ret
dec
enter
fcom
xor
sarl
test
mov
inc
xchg
sbb
pusha
jbe
pop
aad
popa
addb
imul
pop
sbb
icebp
je
xchg
push
dec
and
sub
jle
jp
mov
push
clc
sbb
jbe
jb
es
cmp
pop
stos
adc
mov
xor
test
jo
push
sbb
or
pop
fsubs
std
enter
cmp
push
adc
aad
add
jg
int3
lret
enter
in
cmp
addr16
push
sub
cmp
imulb
xor
sbb
sti
fs
push
mov
cmpsl
rolb
std
fists
bound
out
mov
outsl
pop
xor
in
mov
mov
repnz
xor
adcb
fsubl
shlb
stos
cmp
out
xor
lds
sbb
xor
dec
xor
enter
cmp
decb
mov
mov
adc
shr
lret
cmp
adcb
push
je
and
pop
lahf
xchg
sbb
arpl
pop
ss
fcomi
inc
sbb
ret
mov
dec
cld
out
out
pop
inc
cmc
in
xor
add
mov
test
push
mov
mov
add
add
sbb
outsb
inc
push
repnz
fwait
aaa
ret
int3
out
sub
testl
inc
or
adc
outsl
xchg
scas
sbb
addb
push
xchg
dec
sbb
hlt
xchg
cmpsl
stos
stc
inc
ljmp
pop
fdivrs
aas
jp
adc
pop
and
cld
pushf
das
cmc
repz
mov
rclb
cmp
inc
adc
xchg
incb
xor
cltd
push
in
lock
fistpl
dec
js
movsl
ret
int3
ljmp
push
jp,pt
mov
int3
in
sub
jnp
xor
xorb
mov
jo
xor
stos
andb
adc
lcall
add
xchg
iret
jge
loope
mov
sub
rcrl
cmp
jbe
jne
push
stos
pop
rolb
out
cmp
stos
lahf
test
inc
mov
adc
ds
cmp
sub
add
adc
insl
push
push
mov
jl
ja
mov
mov
mov
inc
imul
shrl
push
loopne
xchg
push
pop
popf
in
cld
adc
call
sahf
and
xchg
testl
xchg
or
fimull
inc
push
sbb
lods
sub
rol
pop
jmp
movsl
jbe
xchg
dec
lahf
wrmsr
sahf
add
rcrl
ss
mov
aas
ret
dec
js
imull
pop
cwtl
ss
in
mov
insl
mov
cld
sbb
scas
pushf
add
ret
jmp
inc
out
in
rolb
xchg
push
push
xchg
sbb
loop
aaa
ds
aad
pusha
out
bound
aam
fsubl
jns
mov
inc
ret
dec
mov
ror
pop
xor
push
cmp
adc
xorb
xor
mov
mov
ds
push
cwtl
pop
push
call
dec
out
lods
xor
jnp
bts
mov
sub
loope
les
popa
inc
and
mov
repnz
xchg
int3
inc
dec
mov
daa
lret
shll
shlb
mov
jl
sahf
in
icebp
std
pop
sti
xchg
in
pop
mov
pop
enter
xor
or
cmp
pop
xchg
testb
and
and
mov
lods
mov
jo
inc
pushf
out
add
add
adc
fcmovb
and
jo
pushf
push
and
inc
mov
xchg
push
mov
in
stc
push
mov
insl
inc
mov
lea
pushf
sahf
jb
in
xor
std
pushf
inc
lcall
sub
jge
loopne
jbe
inc
repz
mov
xlat
loope
fucomip
negb
into
jmp
sub
fldenv
jge
jge
test
cmp
lret
xchg
cltd
push
sub
cmpsb
fnstsw
add
daa
out
xchg
jns
mov
add
jl
jge
into
push
jbe
fs
sub
pop
xchg
lcall
decb
cmp
cli
or
xor
ret
icebp
cltd
pop
inc
mov
cli
push
sub
xor
in
dec
fs
je
add
fcompl
std
mov
jo
jno
xorb
sub
xchg
sahf
or
pop
daa
jne
fwait
add
mov
push
insl
outsl
mov
lods
int3
in
jno
xchg
cmpsb
mov
xor
dec
mov
add
pop
aad
adc
mov
and
pop
sub
cmpsb
or
in
and
pop
mov
mov
movsl
cmpsl
aaa
pop
hlt
or
mov
push
push
mov
dec
orl
or
inc
jae
imulb
inc
inc
mov
icebp
sti
fs
loope
outsl
push
imul
loope
adc
inc
mov
xor
daa
cmp
aad
and
ljmp
push
je
and
gs
lods
xor
push
bound
push
pop
sbb
stos
xchg
or
es
loopne
pushf
mov
out
insl
xchg
out
xchg
add
enter
jno
cmpsb
jp
in
push
add
or
lea
pop
sbb
arpl
ljmp
std
inc
sbb
add
cltd
cmp
mov
jmp
inc
jmp
arpl
rcr
enter
inc
flds
inc
jnp
rclb
jl
dec
or
sub
sub
jbe
gs
ja
or
divl
scas
ljmp
rcl
ret
dec
jns
sbb
mov
push
ds
adcb
jp
negl
or
mov
adc
pop
fcom
je
jb
pop
loop
inc
imul
adc
sub
cmp
fistpl
cmpsb
mov
xchg
lret
adc
mov
into
test
push
je
adc
test
mov
cmp
in
out
sub
or
jl
outsl
mov
mov
bound
ss
jle
pop
dec
adc
pop
mov
dec
aaa
incl
cltd
clc
sbb
lods
nop
push
sub
sub
icebp
jb
lahf
loope
sahf
mov
cmp
jo
sub
xchg
into
mov
adc
push
cmp
and
mov
in
inc
in
fs
push
push
and
adc
mov
adc
dec
xchg
xchg
js
cmp
sbb
push
mov
push
dec
push
sbb
cs
pop
dec
mov
and
xchg
fnstsw
or
aam
cli
subb
sbb
sbb
dec
sahf
xchg
aam
jne
rclb
mov
fisttps
in
pop
in
adc
sub
rclb
inc
jp
cmp
push
pop
xchg
aaa
mov
and
inc
adc
fwait
mov
xor
cmp
dec
sbb
stos
aad
shrb
xor
mov
and
dec
bound
lahf
mov
sbb
out
mov
pop
mov
add
push
addr16
enter
lcall
push
loopne
push
cmp
bound
lcall
push
xorl
xchg
cmp
cs
and
lea
mov
push
sahf
lret
fcomps
dec
stos
inc
lock
aam
jecxz,pn
pop
cltd
adc
sbb
jno
decl
movsl
mov
mov
xchg
dec
in
mov
loope
gs
and
sub
test
loopne
xor
and
mov
int3
hlt
cmpsb
in
adc
ljmp
xor
cmp
fldcw
les
cmpsb
jecxz
push
decl
push
iret
xchg
pop
repnz
dec
mov
cmp
cltd
nop
xchg
cmp
push
mul
jae
stos
divl
or
notb
mov
sbb
inc
cli
push
add
push
scas
imul
xor
int3
pop
ret
push
mov
fxtract
prefetcht0
dec
mov
sbb
or
add
rcll
call
in
cltd
pushf
xchg
mov
leave
jbe
out
mov
pop
jno
pop
pop
popf
popf
mov
adc
xor
testl
cwtl
xchg
or
je
mov
repz
loopne,pn
scas
push
pop
in
push
mov
mov
inc
sub
cmp
mov
jmp
dec
xchg
jmp
add
mov
or
or
insl
mov
fistpl
hlt
mov
xor
imul
xor
push
fdivl
pusha
roll
xchg
insb
fisubrl
xor
negb
adc
pop
push
je
mov
mov
mov
mov
mov
test
bound
int3
jbe
adc
mov
pushf
jge
cmpsb
enter
daa
adc
mov
push
popa
lret
mov
xor
cmpsl
fwait
icebp
cwtl
push
subb
inc
mov
lahf
cmp
xor
mov
out
jbe
leave
sub
negb
cmp
in
cltd
inc
lahf
repnz
sbb
lods
mov
outsb
pop
and
inc
out
mov
sbb
push
push
mov
adc
iret
rcrl
ja
nop
inc
inc
loope
jg
push
popa
jo
sbb
cs
sbb
leave
jle
jge
adc
or
stos
lahf
mov
mov
lods
icebp
data16
lcall
ret
adc
dec
push
push
and
incb
adc
and
imul
in
inc
lret
add
cmp
push
je
sbb
adcl
pop
movb
fstl
loop
cli
jbe
gs
es
pop
icebp
mov
ljmp
push
sahf
mov
sbb
jbe
push
iret
lea
mov
ret
mov
cmpsb
pop
gs
cltd
loopne
or
inc
loop
or
test
push
pop
pop
inc
and
push
xchg
rolb
gs
andb
psrlw
cmp
sub
jecxz
rcll
mov
cmc
or
xor
and
sub
sub
push
mov
push
scas
orl
ja
mov
push
js
ss
jecxz
mov
mov
jmp
sbb
rcrl
jp
shrb
out
aad
in
scas
lcall
adc
pusha
inc
clc
addr16
mov
mov
jae
cmp
jg
scas
or
xchg
in
add
cmpsb
xor
out
dec
push
sar
mov
xor
xor
popf
filds
sub
push
sbb
push
push
clc
rolb
std
xor
sub
cmp
mov
je
xchg
sub
pop
or
lret
push
pop
and
ja
and
rcrl
cmpb
call
and
adc
adc
mov
and
js
lods
push
jns
push
sbb
cwtl
adc
cmpsl
cli
pop
jb
loopne
inc
push
and
rcrl
insl
ljmp
adc
inc
push
fwait
das
add
jmp
fsubrl
iret
ljmp
cmpsl
stc
clc
gs
enter
divl
pop
psrad
outsb
pop
je
cmovns
aaa
shl
adc
mov
push
loope
xchg
dec
push
push
testl
push
je
outsl
sarl
into
aad
mov
ficompl
jbe
gs
sub
xchg
add
push
fcoms
lahf
lret
in
rorl
insb
push
add
cmpsl
push
sub
pushf
jbe
adc
adc
or
subl
std
push
imul
xchg
stc
int3
into
loopne
inc
mov
xlat
jecxz
cmp
fwait
pop
imul
sbb
dec
pop
sub
jne
clc
in
xor
xchg
ja
lea
fildll
loopne
filds
addr16
jbe
sbb
repz
pop
loop
aas
imul
mov
pop
push
ftst
cmp
loope
push
push
subl
out
mov
jmp
movsb
fbld
xchg
inc
push
ficoml
inc
dec
or
add
les
out
xor
mov
hlt
push
cmpl
mov
stos
inc
xor
pop
in
sbb
int
jge
mov
call
mov
mov
push
shl
xchg
leave
or
cmp
iret
xchg
inc
cmc
bound
and
cltd
ljmp
fucomp
popa
daa
sub
fstpt
imul
gs
sahf
mov
cmp
mov
inc
jne
add
cmp
imul
scas
cld
pop
and
mov
dec
or
mov
and
scas
mov
lea
dec
push
cmp
clc
and
pusha
ss
dec
rclb
xchg
xor
and
adc
sub
mov
mov
das
adc
mov
ret
cmpsl
jge
leave
add
rcrl
or
push
push
rol
sub
scas
pop
sar
pop
lret
pushf
stos
cmpsl
insb
sbb
je
js
lods
add
mov
fildll
pop
enterw
push
and
outsb
mov
jg
sbb
rcll
sbb
insb
stc
call
mov
jbe,pt
mov
addr16
cmpsl
ficoml
mov
mov
daa
sbb
inc
lret
dec
dec
insl
push
andb
inc
sbb
mov
jmp
adc
pushf
sub
jbe
scas
push
aaa
int3
outsb
out
xor
inc
fidivs
add
stos
mov
in
ljmp
in
mov
das
or
dec
mov
push
xor
xchg
in
sub
xor
subl
xchg
ret
mov
xchg
addr16
push
call
cltd
add
inc
mov
sbb
xchg
jl
xchg
pusha
std
sub
test
mov
add
inc
popa
addr16
xor
arpl
call
jge
imul
inc
insl
xchg
cmpsb
popa
mov
cmpsl
fbstp
mov
shrl
pop
cs
sbb
mov
ret
gs
sub
pushf
lcall
in
mov
or
sub
cmp
arpl
sbb
xchg
jg
mov
fwait
jecxz
push
fisubrl
aad
push
add
jno
movsl
out
fldcw
jno
jg
pushf
dec
inc
fstpt
stos
cmp
inc
inc
popf
and
push
cmp
sub
ret
ret
stc
ljmp
ret
adcb
sahf
sbb
ja
insb
fdivs
leave
ja
xchg
adc
sbb
ficoml
xlat
outsl
out
xor
sbb
cmc
fisttps
cld
lds
in
and
mov
cmpl
lods
into
stc
sub
xor
imul
mov
enter
mov
int3
lods
shl
fwait
adc
outsb
movsb
aaa
mov
push
subl
adc
hlt
jg
pause
clc
push
mov
in
mov
push
ret
mov
or
add
mov
inc
add
or
in
jp
enter
test
imul
sub
pop
xchg
ljmp
in
lods
xor
push
fistps
xlat
hlt
out
popf
dec
cli
push
jle
loop
inc
mov
or
fs
repz
dec
mov
mov
pop
adc
inc
jmp
decl
enter
inc
mov
insl
sub
sti
ret
pop
or
mov
in
pushf
cli
jmp
daa
xchg
jbe
mov
pop
adc
cmp
push
or
cmp
lahf
push
xlat
outsl
mov
sub
inc
push
cwtl
adcl
fwait
xchg
cs
loope
xor
lahf
test
mov
dec
adc
inc
cmc
lock
test
pop
iret
dec
dec
or
pop
sub
cmpsb
mov
adc
mov
jmp
jg
jbe
ret
push
push
enter
jg
incl
or
fwait
call
sub
inc
jno
xchg
cmp
into
lock
jns
mov
sbb
addr16
or
mov
addb
ds
fistpl
mov
lock
pop
stos
jno
dec
inc
sahf
cmp
out
mov
sar
hlt
shll
jg
outsl
sub
shufps
xor
and
dec
inc
cmpsl
and
xor
loopne
mov
dec
push
cld
test
aaa
pop
es
or
dec
mov
jl
aam
test
test
adc
xor
adc
lret
sbb
lahf
movsb
icebp
dec
mov
push
stos
cmp
or
or
jp
or
mov
fwait
int3
insl
mov
dec
jns
or
mov
std
mov
or
push
pop
cmp
cmp
xor
hlt
pop
mov
mov
cmp
jg
push
sahf
data16
je
jle
push
pslld
pusha
push
int
sbb
aas
lcall
decb
sub
xchg
scas
pop
dec
adcl
leave
mov
movsl
mov
ret
add
jns
test
xor
js
decb
sub
scas
scas
jp
mov
adc
dec
jle
jl
inc
cld
sbb
and
cmp
mov
pop
icebp
cwtl
inc
mov
shll
and
inc
rorb
pop
fwait
dec
push
adc
enter
ficoml
aaa
push
lods
sbb
and
or
out
sub
fcmovnbe
push
push
pop
mov
fwait
push
fadds
and
imul
ds
jns
mov
mov
cmp
movsl
dec
push
fs
add
dec
push
xchg
lret
ret
inc
jecxz
cmpsb
mov
jp
test
lcall
and
push
add
dec
or
add
mov
mov
xchg
outsb
aas
test
lods
shr
aas
subl
subb
mov
lds
jp
ja
hlt
cmp
pop
das
loope
xor
rorl
ficoml
in
lahf
idivl
push
jecxz
add
xchg
je
mov
xchg
js
inc
mov
sar
bnd
cmpsb
shlb
repnz
mov
dec
rorb
push
mov
jnp
lret
int
inc
cmpsb
fimull
push
out
mov
sub
pop
cwtl
mov
addl
int3
add
fsubrs
mov
pushf
pop
lock
outsb
inc
mov
jbe
jmp
inc
or
dec
hlt
jb
sbb
fadds
fwait
rcll
push
sbb
dec
insl
jo
push
mov
sbb
jo
dec
mov
xlat
add
and
test
adc
xor
pop
mov
leave
push
or
addr16
ror
mov
sub
push
dec
adc
in
nop
jle
in
and
imul
inc
add
mov
or
out
mov
dec
fistl
xchg
jae
add
inc
xor
inc
mov
sub
lret
pop
xlat
imul
sub
jae
leave
add
loope
ret
xor
lock
sub
mov
sbb
int3
mov
xor
test
xchg
cmpsl
mov
test
std
pop
shr
test
cmp
mov
negl
xchg
gs
notb
mov
mov
xor
clc
pop
and
leave
es
out
dec
aad
sub
push
jns
out
popf
repz
add
fs
js
mov
stos
adc
dec
xor
pop
loop
cli
pop
mov
popf
test
xor
cltd
popa
nop
loope
jno
or
jae
std
mov
xchg
repnz
lcall
lret
ret
push
mov
push
inc
xor
xchg
cmpsb
pusha
jae
jno
es
enter
mov
addb
hlt
mov
insb
sbb
outsw
cmp
pop
mov
jle
fisttpl
jnp
dec
push
add
sarb
jmp
add
inc
cmpsl
outsl
push
fsts
inc
outsl
lcall
xor
and
dec
inc
scas
out
loop
fsubs
sub
add
jmp
mov
daa
and
clc
add
mov
js
dec
cs
push
test
ljmp
xchg
lods
sahf
test
loop
dec
mov
mov
movsb
jp
ret
sbb
stos
lds
std
adc
fwait
inc
dec
pop
dec
mov
cmpsl
xor
movsb
test
or
xchg
lretw
adc
pop
mov
sbbb
insl
xchg
rolb
int
fs
pushf
or
fildl
ret
es
das
mov
mov
push
jg
call
xor
mov
xchg
mov
notl
lock
scas
je
lret
lods
enter
jne
sbb
iret
xor
das
pop
inc
jecxz
cs
data16
sub
jno
fs
loop
push
push
repz
orb
dec
lods
xor
fiadds
inc
push
and
pusha
aas
in
data16
rcr
fsts
andb
clc
in
add
iret
jnp
or
and
sbb
movsb
adc
jns
es
cmp
adc
add
out
daa
jmp
mov
loopne
or
mov
sub
aas
ficoms
or
add
dec
cli
add
movsb
sbb
xlat
fwait
iret
sbb
mov
add
mov
mov
pop
bound
jp
stc
pop
rcrl
pop
xchg
and
cmpl
jmp
push
cmp
mov
jae
mov
jae
pop
cli
xchg
data16
leave
jle
xchg
jge
sarb
dec
sti
outsl
xor
dec
out
popa
aaa
lods
adc
and
mov
jne
sti
jmp
or
mov
jmp
adc
jns
mov
nop
or
ret
sub
adc
les
push
dec
push
and
or
mov
mov
inc
sbb
pushf
cmpsb
sub
cwtl
jne
scas
xchg
fisubs
xchg
adc
cld
shll
lcall
xor
adc
jecxz
dec
into
loopne
cmp
and
scas
mov
pop
adc
cmc
push
sbb
mov
xchg
sti
dec
cmp
inc
fldz
and
mov
cmp
ficoml
or
sbb
xchg
add
mov
inc
adcl
or
loope
push
jmp
mov
xlat
clc
out
add
aam
cmp
nop
sbb
add
ja
mov
pop
xchg
loope
mov
rcl
aam
insl
add
hlt
pop
iret
inc
aam
mov
xchg
lret
add
mov
mov
in
sbb
scas
fcmovb
bound
pop
ja
jecxz
xchg
imul
in
push
and
cmp
stos
jl
push
fmull
sbb
xor
test
fisubs
pusha
in
addr16
std
cld
mov
add
mov
cld
adc
shll
loopne
xchg
lock
mov
mov
cmp
sub
aaa
stos
and
sti
subb
inc
or
jl
dec
testl
rol
insl
mov
repz
mov
jecxz
lds
sub
pop
mov
push
pop
sub
and
lock
mov
jae
pushf
idivb
pop
dec
xor
lods
insl
lds
test
cmp
fcompl
pop
stc
push
xor
bound
pop
push
sub
push
notl
outsl
pop
mov
jns
mov
stc
add
adc
mov
pop
addr16
jg
ja
loope
push
test
sahf
das
push
jp
xchg
and
lcall
in
adc
mov
fsubrp
sti
sub
test
int3
cwtl
cmp
and
fs
lcall
rorb
int
pop
pusha
aas
sahf
pusha
nop
stos
test
mov
jo
std
cli
fwait
popf
jns
jae
jmp
js
push
inc
outsl
or
dec
pop
jp
loope
jecxz
inc
arpl
jbe
cwtl
mov
leave
dec
pop
or
lds
dec
adc
push
ret
das
push
push
inc
and
cmp
push
loope
aaa
cltd
rol
lock
addr16
mov
dec
mov
push
adc
repz
call
and
icebp
xchg
sbb
fistl
pusha
jmp
push
push
dec
mov
mov
sub
sbb
loope
mov
addl
sbb
jb
dec
fisttpl
bound
rcrb
call
ret
daa
mov
and
push
imul
mov
jg
xchg
inc
popl
gs
insl
and
and
sti
xor
es
adc
dec
inc
nop
mov
mov
mov
mov
daa
dec
fld
sar
dec
adc
and
outsl
mov
popf
add
xor
por
mov
fldenv
mov
cltd
dec
insl
or
fsubrl
pop
mov
sub
mov
sbb
xchg
movsb
fwait
lds
imul
cmp
sti
mov
xlat
sbb
sub
sbb
filds
out
fwait
pop
add
jmp
pushf
push
cld
outsb
test
fsub
and
sub
fwait
push
pop
sbb
leave
cmp
cltd
cmp
les
addl
lods
sarl
lahf
dec
adc
push
mov
outsl
pop
add
mov
push
sahf
repnz
loope
daa
push
stos
aaa
jbe
xor
lahf
mov
fildll
pop
adc
jo,pt
inc
inc
xor
mov
xor
loopne
push
iret
xchg
add
mov
pop
push
sub
xor
hlt
push
mov
popa
jge
loop
pop
or
dec
in
lret
dec
repz
sbb
push
into
das
scas
shll
mov
or
lret
cmp
mov
push
lods
movb
add
testb
and
adc
int
arpl
push
mov
push
sar
loopne
mov
mov
dec
scas
push
mov
les
pop
sub
fcoml
adc
jbe
ret
std
dec
test
das
and
pop
pop
xchg
rcll
loope
lcall
sbb
xchg
sub
adc
dec
iret
mov
push
mov
cld
rcrl
mov
ret
out
push
cmp
ljmp
pop
adc
xorb
lds
orb
and
icebp
pop
or
clc
pop
sti
pop
mov
jbe
pop
jnp
push
jno
fiadds
or
mov
pop
mov
into
test
cli
sub
aam
pusha
aas
or
fnsave
push
popa
mov
cmc
mov
adc
push
shlb
xor
xor
mov
push
dec
cmp
sub
movsb
adc
in
and
inc
subl
js
pop
push
sub
jo
outsb
mov
push
lcall
xorl
inc
scas
sub
in
lahf
xorb
sub
xor
lods
or
mov
xor
dec
cmp
and
jl
imul
xor
mov
dec
or
sub
adc
ljmp
adc
or
lock
in
pop
test
dec
xchg
out
loope
mov
mov
lcall
leave
mov
addr16
push
pushf
sub
rcrb
out
sub
sbb
test
aad
xchg
lret
xor
jge
test
dec
add
jle
xchg
data16
cmp
xor
mov
popa
jmp
fdivrl
dec
mov
outsb
cmp
push
adc
push
add
jl
nop
xchg
xor
jmp
add
inc
sbb
jecxz
push
xchg
or
je
outsb
loopne
pushf
iret
jg
sarb
dec
ljmp
nop
jle
add
or
push
incb
pop
sub
pop
mov
sub
das
mov
xchg
xor
dec
adc
sbb
jl
fnstenv
es
jo
or
lret
int
stc
inc
push
insl
movsl
lods
clc
cli
jnp
xor
sub
les
push
adc
out
inc
cmp
or
inc
pop
jno
stos
xor
stos
fists
jo
and
inc
push
cwtl
sub
fcoml
mov
int3
lods
cld
or
or
mov
ds
and
and
add
and
mov
pop
repnz
jge
add
cmp
mov
sub
lcall
or
pop
push
addr16
lahf
rorl
js
fwait
les
push
push
out
xor
lret
cmp
lea
loope
adc
push
dec
dec
inc
and
lret
xor
lcall
xchg
sub
sbb
push
add
push
mov
aam
and
cs
fcmovb
inc
aad
mov
sahf
mov
cmp
lcall
xchg
push
bound
push
mov
pusha
iret
lods
stc
xor
mov
stos
ja
pop
fildll
push
mov
lret
nop
mov
clc
xor
mov
inc
jns
in
or
std
out
fiadds
shl
arpl
push
loop
inc
push
fldenv
xchg
js
sub
shrb
stos
in
sbb
jbe
icebp
lret
inc
das
mull
aas
jecxz
fs
scas
jbe
pop
mov
cmp
sbb
xlat
addb
rcll
iret
fadd
jmp
pop
loope
cs
xor
fsub
jnp
jae
add
pop
xor
xor
jb
jp
in
out
insl
adc
mov
scas
leave
xor
icebp
sub
cld
call
int
mov
mov
add
rol
ljmp
test
fsubr
sbb
rorl
movsl
in
out
imulb
mov
pop
mov
dec
pop
addr16
ljmp
in
mov
leave
jbe
std
sbb
sbb
ror
dec
pop
shr
push
mov
adc
sarb
sbb
and
call
dec
test
pop
push
ja
xor
aaa
fxch
aam
stos
ret
and
xchg
aaa
sub
sti
or
jmp
mov
imul
bound
pop
pop
or
fbld
dec
insb
mov
insb
inc
inc
push
xchg
insl
dec
push
adc
bound
lret
adc
push
enter
xor
outsl
aas
insb
sarl
lahf
popa
movsl
sbb
sbb
mov
cmc
jno
adc
mov
loopne
lcall
pop
jb
aam
cld
outsb
outsl
repz
mov
jb
inc
ret
xchg
mov
jbe
inc
pop
bound
dec
cltd
aas
xchg
adc
iret
mov
mov
and
add
xchg
xchg
mov
push
mov
imul
inc
inc
mov
enter
fmuls
scas
jge
and
xor
aad
xchg
sbb
jle
jp
xchg
mov
lea
pusha
fldenv
sub
stc
out
jecxz
lds
sub
add
adc
call
mov
sub
shr
and
mov
mov
xchg
cmp
aam
movsb
repz
adc
sub
pop
cld
mov
imull
sub
leave
cmp
inc
lock
pop
mov
lcall
movsl
sbb
jle
adc
jne
es
pop
arpl
test
mov
dec
mov
xor
arpl
insb
dec
les
repz
rcrb
insl
in
std
jbe
imul
outsl
sub
jbe
rcrl
addl
xchg
xchg
mov
and
mov
inc
add
xchg
add
in
daa
test
mov
negl
jmp
mov
dec
xchg
cld
test
sub
fcmove
enter
jns
mov
sub
mov
dec
xor
jnp
or
call
jne
out
adc
or
lret
dec
stos
lods
mov
push
inc
xchg
icebp
and
push
fsubrl
xchg
lods
push
shll
pop
test
push
sub
sbb
inc
cmp
push
stc
test
xchg
pusha
mov
inc
scas
pop
shl
ss
daa
cmp
and
enter
test
rol
pop
pushf
inc
pop
pusha
sbb
mov
lds
dec
push
cltd
dec
add
adc
arpl
or
popf
stos
dec
sbb
mov
or
inc
dec
scas
push
out
fcmovnbe
imul
jg
out
jge
mov
mov
jmpw
pop
push
cmpsl
lods
push
lods
xchg
outsb
mov
mov
cltd
xchg
bound
cld
xchg
lods
jecxz
lret
mov
pop
test
test
scas
xchg
andb
mov
xor
xchg
roll
jae
mov
push
notb
dec
outsb
je
js,pn
mov
ja
xor
test
mov
pushf
and
out
adc
inc
xor
rcll
xchg
stos
faddl
cmpsb
xor
in
xor
and
adc
pop
test
xchg
lds
andl
call
sub
les
mov
sbb
cmp
gs
pop
push
dec
stc
and
cmp
add
out
jmp
ds
push
jae
xchg
icebp
jne
cwtl
dec
sarb
mov
lahf
mov
sbbb
repz
sahf
mov
insb
dec
mov
jl
pop
pop
icebp
aam
inc
mov
push
ret
mov
jno
sub
or
shrb
mov
lock
sub
and
int
loopne
pop
sbb
and
nop
out
sahf
out
inc
popf
dec
pop
and
cmpsl
rolb
sub
or
outsl
pop
psrld
nop
das
scas
repnz
xor
inc
ljmp
aad
pop
loop
call
addb
mov
xor
ficomps
scas
adc
push
xor
xchg
mov
cs
scas
sahf
fiaddl
dec
mov
hlt
out
dec
pop
mov
cmp
cmpsl
fsubr
sub
mov
lock
sar
push
mov
loopne
lahf
adc
scas
pop
push
call
mov
out
xor
gs
cmp
loopne
xchg
jo
mov
loope
mov
adc
jecxz
mov
cmp
imul
mov
call
push
aam
int3
cmpsb
pop
outsl
add
push
inc
or
inc
dec
jl
push
mov
push
mov
add
scas
mov
pop
push
fwait
stc
clc
pop
sub
imul
fwait
and
and
jns
mov
mov
hlt
push
mov
or
jns
add
pop
xchg
cld
outsb
out
insb
in
andl
call
sub
fisubl
add
mov
insb
repz
and
sahf
dec
mov
aaa
push
icebp
fmuls
inc
sbb
add
mov
fcoms
fdivrl
sti
lds
aaa
mov
xchg
cld
push
iret
jg
movsl
das
mov
mov
fisttps
call
cmp
push
mov
mov
xor
ja
inc
mov
xchg
lock
lret
sbb
pushf
ljmp
pop
and
sbb
loop
gs
ss
js
rcrl
cmp
js
pop
ss
in
ficomps
pushf
loopne
push
pop
aad
je
repz
scas
fcmovu
fcoml
test
cld
sub
cmp
mov
sub
or
mov
jbe
testb
add
scas
imul
int
je
sbb
ret
cmp
mov
lods
mov
xor
and
xor
pop
aas
sbb
cmp
dec
jo
inc
jg
fnsave
and
mov
sahf
jb
xchg
add
sub
push
daa
jge
cmpsb
iret
nop
loope
cmp
jbe
addr16
arpl
sbbb
or
out
std
leave
aas
cmp
mov
scas
iret
push
sub
xchg
cmpl
bound
lret
inc
xchg
movsl
inc
loop
push
mov
xlat
call
inc
xchg
loop
xchg
inc
pop
mov
rclb
xor
movb
push
loop
repnz
push
lret
in
bound
pop
arpl
mov
pushf
mov
pusha
mov
fs
push
or
insl
xor
lock
shll
fisubrs
and
pusha
ljmp
jnp
sub
aam
enter
push
fstpt
aas
arpl
jo
push
and
movsl
fs
out
pop
dec
aaa
clc
gs
xchg
mov
cmp
xor
imul
pop
push
pop
xchg
loopne
sbb
xchg
cmpsb
cmp
rcr
hlt
jne
cs
pop
add
lahf
sbb
inc
mov
imul
dec
and
ss
jge
mov
fldenv
in
mov
sub
mulb
mov
pop
push
in
rcrl
ss
and
jno
adc
jl
inc
mov
sub
cmp
add
push
pop
icebp
jle
ja
out
arpl
adc
fcoms
movsl
mov
fidivrl
shr
inc
and
xor
mov
subl
cmp
mov
adcb
or
mov
jmp
dec
inc
xchg
mov
mov
int3
pop
inc
insl
xchg
into
fnstenv
es
and
lods
pusha
mov
pop
lea
or
loope
dec
clc
mov
sub
fldl
mov
outsl
xchg
scas
cmpsb
cld
push
loopne
test
push
adc
fldln2
push
push
and
mov
inc
sbb
sub
add
movsb
test
xorl
xchg
imul
mov
inc
leave
bound
sub
or
push
cli
xchg
call
aad
jns
sub
repnz
dec
outsb
pop
add
jmp
pop
lret
scas
decb
push
stos
dec
lods
xor
in
in
pop
and
insl
jae,pt
jne
pop
mov
jmp
push
sub
stos
inc
loop
sub
movsb
mov
xlat
mov
push
push
or
repz
add
adc
adc
dec
mov
fildl
xor
test
int3
pop
inc
into
mov
jl
data16
rorl
mov
dec
mov
cmp
mov
mov
cmp
icebp
sbb
pop
mov
mov
outsl
push
mov
test
arpl
add
sub
mov
ret
enter
fwait
pusha
or
or
push
sub
nop
push
jae
mov
xor
push
sahf
mov
std
adc
pop
pop
lods
adc
jge
wrmsr
lret
push
shlb
and
jp
cmp
ficomps
mov
shlb
ljmp
xchg
cmp
stos
mov
xchg
mov
xchg
push
int3
pushf
mov
cmc
jbe
sbb
jecxz
hlt
stos
dec
je
mov
lret
ret
and
popa
and
rcll
aas
and
mov
jne
loop
or
les
sbb
or
dec
push
xor
outsb
orl
adc
dec
lods
jge
cmpsb
in
in
adc
enter
mulb
and
jl
aas
mov
mov
sbb
dec
sbb
dec
or
xor
fs
scas
push
jnp
mov
stos
ret
pushf
adcb
fwait
out
xchg
pop
icebp
aad
jne
iret
test
xor
stos
mov
add
inc
or
jns
dec
jbe
daa
dec
mov
inc
daa
test
iret
or
out
pop
or
fldt
test
cmp
aad
jl
insb
xlat
cmc
pop
scas
insl
scas
iret
or
iret
pop
je
sbb
inc
jno
mov
mov
sbb
xchg
jae
inc
movsl
cs
sub
in
loop
out
xor
fwait
aas
in
dec
adc
pop
daa
or
mov
xchg
stos
inc
test
fstpt
faddl
popf
je
out
mov
lret
fnstcw
enter
loopne
dec
frstor
scas
adc
mov
xchg
cmp
movsl
mov
cld
pop
aaa
sbb
add
jp
lock
push
inc
ja
inc
fs
mov
fisubrl
inc
push
leave
ret
outsl
jbe,pt
es
lods
xchg
fcmove
or
mov
xor
cmp
add
push
shrl
cmc
aaa
sub
xor
or
loope
push
sbb
aam
mov
cltd
lret
fwait
mov
sub
sub
xlat
into
repnz
mov
ss
std
ret
dec
lret
dec
cmp
cmp
jae
shl
jo
jmp
xor
sub
fnstsw
rorl
out
ss
mov
push
jb
xor
inc
adc
sbb
jb
push
sub
cmp
push
insb
push
imul
or
and
sub
in
jne
sub
rcrb
or
mov
adc
sbb
es
popa
xlat
divl
jns
cmp
test
test
sbb
test
outsb
clc
out
cli
push
dec
clc
add
lods
mov
adc
jbe
mov
sub
repnz
mov
sub
sub
adc
xlat
pop
mov
mov
mov
lret
and
mov
push
lret
or
xchg
pop
jle
sub
adc
sub
daa
push
imul
clc
cmp
out
aaa
adc
ljmp
push
mov
jno
push
loopne
orl
mov
xor
xor
test
cli
xor
test
fucomip
in
loope
push
add
in
lock
idiv
pop
fsts
push
jmp
sub
mov
test
xor
or
inc
test
mov
and
dec
mov
sub
sub
dec
xchg
es
orb
stos
ja
cmp
outsl
dec
sbb
and
clc
cli
int
frstor
inc
pushf
lret
ret
push
jp
imul
aad
inc
jns
idiv
pop
ffree
cld
int
inc
jbe
mov
jp
icebp
pop
fs
rorl
movsl
mov
xchg
push
cltd
sub
ret
lcall
jl
pop
div
sarl
adcb
xor
out
fadd
aam
test
sub
and
pop
rcrb
mov
or
sub
cmp
push
xchg
adc
inc
outsl
in
and
je
out
fdivrs
xchg
cs
and
in
or
loop
shlb
and
jge
je
jmp
mov
shl
jns
ror
jae
xchg
mov
cmc
or
pop
push
sbb
pop
jmp
jmp
cs
or
test
int
popf
mov
mov
popa
sub
mov
insl
and
js
es
pop
cld
pop
xchg
dec
add
nop
fs
pop
inc
pop
jg
push
sub
sub
add
adc
arpl
and
addb
shlb
mov
and
jo
mov
imul
xchg
rcrb
shlb
jbe
sbb
mov
incb
bound
mov
fwait
xchg
cmp
in
xor
repz
jl
or
cmpl
mov
push
adc
jmp
pop
add
aas
sub
sarl
xor
lcall
mov
mov
icebp
lcall
cmp
ljmp
jecxz
shlb
pop
sbb
leave
mov
push
daa
pop
xor
xchg
rolb
jp
fimuls
mov
inc
mov
xchg
push
sub
jmp
rcrb
inc
data16
xor
sub
shrb
std
mov
daa
addb
mov
mov
dec
sbb
aaa
enter
insl
test
mov
adc
lret
es
xchg
fucomi
mov
xor
mov
cmp
pop
mov
loope
cmp
inc
and
addl
fwait
lods
bound
ljmp
inc
sti
cmc
test
xlat
mov
arpl
test
and
and
stos
iret
insb
fmuls
and
sti
jl
add
mov
rcrb
adc
mov
loopne
divb
cs
jg
loope
push
mov
push
mov
sbb
jl
test
mov
repz
push
push
in
insb
inc
lods
mov
lods
sbb
cltd
mov
inc
stos
cmc
mov
push
js
cmp
xor
mov
pusha
mov
lods
ss
jge
adc
iret
cmc
fcomi
jmp
sbb
add
sub
push
mov
jae
xchg
cmpsb
cwtl
ja
loope
stos
notl
test
shll
insb
add
outsb
cmpl
jne
cmc
outsl
cmp
push
ror
mov
mov
and
rorb
cmp
cmpsl
push
mov
call
push
pusha
add
push
xor
inc
pop
in
sbb
jb
cltd
mov
out
loope
pop
les
repz
int3
xchg
clc
out
jns
test
sub
mov
inc
test
xor
daa
mov
pop
cmp
lret
fcompl
bts
xchg
add
in
pop
dec
mov
aaa
clc
add
mov
je
add
aas
int3
pop
popf
xorl
sbb
adcl
inc
jns
pop
aad
mov
jp
movsl
js
cmp
fimull
push
sub
jle
lret
adc
mov
inc
push
pop
jle
mov
lods
out
incl
adc
sub
mov
cld
or
sub
xor
pop
mov
fdivrs
pop
in
xchg
pushl
shlb
ficoml
mov
cmpsl
mov
adc
pop
xor
and
pusha
pusha
and
mov
mov
loopne
sub
adc
xor
push
fstpt
int3
scas
daa
rcrb
mov
xor
dec
push
pop
xor
push
xor
outsl
mov
mov
push
pop
jle
pop
cmpsl
test
ret
test
out
jecxz
jns
xchg
rcll
pop
xor
xor
roll
movsb
add
jecxz
xchg
xchg
and
push
in
mov
sub
mov
lock
pushf
sbbl
xor
or
pop
mov
fisttpll
pop
pop
popf
sub
push
cmp
xor
and
inc
dec
in
arpl
mov
out
dec
lret
and
insl
inc
cmc
and
mov
hlt
add
push
outsl
out
dec
jp
mov
inc
cvtpi2ps
mov
int
rcrb
mov
les
add
sub
insb
xchg
and
fxch
bound
fimull
push
adc
inc
xchg
int3
loopne
rorb
daa
pushl
inc
mov
and
int
pop
pusha
mov
cmp
iret
mov
mov
add
xor
mov
mov
lret
shl
push
pop
testb
lahf
rolb
jb
das
mov
rolb
fdiv
sbb
clc
iret
jge
mov
nop
push
ret
adc
jns
inc
in
lret
lahf
cmp
ja
mov
nop
nop
in
sbb
loope
shr
loop
cmp
xor
imul
or
inc
dec
mov
out
je
or
mov
js
inc
dec
add
call
movsb
enter
xor
arpl
fwait
mov
xor
add
fwait
push
fmull
imul
jl
mov
xor
aam
mov
sbb
inc
cs
orb
fwait
scas
stc
imul
popf
sahf
xorl
test
dec
mov
xlat
add
pusha
xchg
mov
lds
add
lret
frstor
cmp
fwait
adc
icebp
jae
dec
sub
filds
add
xchg
cmpsl
stc
jo
iret
lea
aaa
fsts
xchg
lahf
jecxz
stc
sbb
lret
xor
jge
xchg
fnstenv
dec
pop
mov
or
fcmovnu
mov
push
into
jecxz
or
push
fdivrl
and
mov
js
pop
stos
in
movsl
out
inc
js
pop
lcall
mov
sti
out
lock
sti
stos
fs
int
mov
jmp
adc
mov
sbb
lods
xchg
sahf
and
lds
cltd
cmp
fmuls
cltd
das
inc
adc
jnp
push
fstl
pop
adc
push
mov
icebp
lods
inc
sar
int3
cld
push
adc
cmp
sbb
jae
sbb
dec
mov
hlt
stos
gs
pop
pop
jae
movsb
sub
xchg
fsub
adc
loop
jmp
test
push
mov
mov
test
popf
je
loope
int
inc
outsb
or
or
xor
inc
and
dec
xchg
fimuls
je
sbb
xchg
mov
or
pop
sbb
out
sub
nop
gs
std
hlt
jns
test
and
jecxz
fadds
mov
sub
ds
jecxz
popa
test
pop
out
inc
imull
nop
outsl
aam
pop
out
ss
jbe
rcl
cmp
sbbl
loop
xchg
or
dec
inc
and
sarb
cli
popf
mov
adc
mov
add
xchg
mov
pop
xchg
test
push
into
push
push
cmp
lahf
push
iret
sahf
mov
fmuls
loopne
das
mov
jbe
or
jl
cmp
fcomip
add
ss
jmp
ret
mov
sub
int3
cs
jp
enter
jae
das
push
mov
or
daa
jg
inc
cwtl
adc
pop
inc
outsb
mov
repnz
push
scas
sbb
inc
jns
in
xor
sbb
and
mov
sbb
es
sbb
test
cmp
lret
test
mov
insl
add
imull
repnz
jbe
mov
jg
or
push
js
inc
in
lds
sub
and
jbe
ja
sub
outsb
xor
jbe
outsb
imul
add
test
push
and
fwait
xor
sbb
test
sar
es
inc
or
dec
sub
add
out
push
lods
jg
inc
sub
cmovne
inc
stc
xor
ja
outsb
mov
dec
fcmovb
xlat
lods
xor
ficoms
push
lds
sahf
test
pop
shlb
bound
sbb
data16
repz
cltd
leave
add
push
loopne
jmp
dec
aaa
sbb
lret
fnstsw
out
and
mov
mov
ret
mov
lret
xor
add
sub
mov
dec
popa
xchg
inc
popf
cmpsl
clc
in
pop
cmc
movsl
in
andb
aas
push
and
sbb
sbb
ret
jl
add
mov
sub
xchg
outsl
and
sub
push
push
cmpsb
nop
cli
in
xor
aaa
push
lahf
push
hlt
popf
dec
xchg
mov
addr16
mov
in
sbb
ljmp
mov
mov
les
fwait
jno
out
pop
fcoms
mov
ja
adc
lods
pop
mov
sbb
cld
es
ret
mov
adc
jg
cwtl
cmp
pop
je
mov
or
cmc
mov
ret
sar
add
and
nop
aas
or
push
rclb
out
mov
les
add
ror
fs
outsl
shl
test
add
or
bound
gs
insl
cmpsl
xor
daa
lret
pusha
xor
fnclex
sbb
decb
add
xor
fwait
sub
clc
mov
mov
in
in
test
add
xlat
cmpsl
jb
fmull
ljmp
cmovne
test
cmc
xchg
push
scas
mov
mov
or
outsl
sbb
mov
adc
inc
sub
mov
dec
mov
rcll
xchg
cli
and
frstor
jg
js
outsb
data16
xchg
ret
rorl
dec
push
lods
sub
jle
xchg
xorb
ror
enter
xlat
loop
dec
hlt
xor
ljmp
xchg
ljmp
push
jg
jae
mov
mov
imul
jo
imul
cmpsb
mov
sbb
dec
insl
cli
add
push
imul
xchg
call
sti
ljmp
out
jbe
mov
repnz
mov
mov
cmpl
and
or
shlb
xchg
jg
adc
ja
sbb
fadd
adc
sub
mov
in
inc
test
or
xor
adc
dec
sub
push
push
push
xchg
push
test
pop
hlt
mov
cmp
add
push
or
xchg
jle,pn
jns
je
in
ss
mov
divps
imul
lock
pop
adc
imul
shr
in
mov
lds
lock
shr
std
ss
jo
je
sbb
ret
in
imul
jp
shrb
insl
stc
fimull
fs
mov
mov
inc
jg
negb
push
add
jp
add
add
adc
sbb
push
fsubr
lock
ficompl
pop
rorl
sbb
jge
inc
lds
shl
push
jnp
sarl
out
and
loopne
push
test
and
movsl
cld
pop
mov
inc
rcrl
xchg
je
cmp
bnd
js
sbb
pop
cmp
jmp
int3
push
adc
dec
es
out
dec
aam
pop
sbbl
test
push
jbe
pop
adc
add
mov
mov
mov
xchg
add
mov
out
and
lret
inc
cmpl
mov
pop
sub
aas
sbb
ret
aad
dec
in
jl
pop
mov
sub
rcrb
jge
cmp
divb
or
inc
iret
mov
mov
popf
test
pop
out
leave
sub
sahf
pop
inc
out
xorb
xchg
sbb
mov
cld
pop
popa
sub
mov
fldcw
hlt
aas
push
xchg
dec
cld
jg
sub
ljmp
mov
loop
pop
cmpsl
adc
dec
dec
jmp
xchg
and
xor
cmp
xchg
bound
cli
in
call
pop
cmp
or
rclb
inc
or
mov
rorl
mov
aaa
push
loop
lods
ss
movsb
idiv
lret
mov
test
sahf
sbb
imul
push
push
sti
dec
sahf
mov
ds
xchg
lods
inc
repz
jp
icebp
pop
mov
and
mov
or
inc
mov
in
and
or
xor
dec
push
inc
movsb
mov
xchg
xor
repz
sub
ss
and
or
and
clc
pop
ret
mov
push
ret
fildll
repz
popf
lds
repz
jg
test
shl
push
cmpsb
and
cltd
je
push
push
mov
xor
jp
push
jb,pn
or
push
lds
jmp
jp
out
cmp
sub
mov
mov
dec
shll
int3
sbb
add
movsl
call
fisttpll
insl
rcll
jmp
jl
xchg
push
iret
aaa
sahf
add
cmp
mov
push
jecxz
fiaddl
sub
dec
jmp
jnp
fmulp
ret
push
push
xchg
std
xchg
call
aaa
ret
mov
les
stos
inc
daa
and
jbe
fstpt
pop
shlb
sub
mov
loope
sbb
or
sub
lds
dec
sub
fsub
jg
pop
adc
sbbb
jle
movsl
sub
xchg
or
dec
je,pt
fisubrl
push
push
jno
das
mov
cmp
mov
dec
ja
xchg
stos
fsubrs
mov
outsl
mov
xchg
out
aas
stc
arpl
nop
arpl
insb
and
push
mov
jae
jmp
jp
xor
sbb
fwait
or
xchg
inc
ja
cli
sbb
inc
das
insl
jle
in
pop
lret
leave
pop
jbe
popf
insl
push
xchg
cmp
aam
fstpt
dec
dec
inc
mov
loopne
adc
lds
dec
or
mov
cli
decb
test
inc
mov
ficompl
das
mov
ljmp
lds
adc
and
xchg
jp
xor
repnz
mov
testb
adc
repnz
pop
jb
push
xchg
lods
xor
cmp
xchg
daa
mov
adc
sbb
ret
mov
mov
mov
mov
cmp
dec
pop
mov
outsl
and
cltd
xor
inc
cli
inc
sbb
ja
mov
pop
nop
sub
sahf
call
inc
fnsave
icebp
mov
aad
mov
inc
pop
sub
cmc
pop
test
push
leave
pop
mov
mov
sub
xchg
outsl
mov
dec
and
dec
and
cli
ja
xor
lret
ljmp
sbb
mov
push
mov
nop
mov
cmpsb
inc
jmp
test
fwait
or
jl
jecxz
or
leave
sbb
out
mov
imul
sub
jle
arpl
sub
lcall
imul
lret
icebp
cld
data16
aam
push
je
in
jne
pop
push
les
fcmovnbe
out
mov
call
adc
sbb
mov
xchg
pop
andb
xor
push
test
addb
xor
out
and
popa
inc
int
or
dec
lock
in
push
xor
adc
fistpl
inc
adcl
pop
inc
xchg
adcb
movsl
or
lcall
cwtl
test
loopne
call
cltd
pop
loop
mov
clc
into
fcmovnu
stos
mov
idiv
imul
es
fldcw
and
in
push
pushl
cmpsb
sub
inc
push
mov
shlb
hlt
cltd
dec
adc
pusha
xor
pop
lds
push
roll
sbb
in
fdivr
repz
xor
lock
dec
adc
dec
and
lret
insl
stos
je
mov
iret
imul
mov
inc
je
mov
movsl
dec
or
fisubrs
xchg
ja
enter
xchg
mov
icebp
or
push
push
adc
cmp
cmp
push
or
faddl
dec
cld
xchg
cmc
std
bound
inc
dec
pushf
jg
cld
repnz
cmpl
fdiv
jno
aam
or
mov
fwait
xor
dec
cmp
stos
les
fcomps
popa
inc
in
out
inc
loopne
pop
bound
cmp
test
adc
cwtl
arpl
mov
xchg
imull
shrb
mov
jg
int
call
mov
push
jl
jno
ja
loop
mov
mov
lcall
lret
mov
pop
mov
dec
cltd
xor
daa
jge
mov
mov
das
sub
inc
mov
adc
dec
xchg
xchg
cwtl
daa
mov
aam
cmc
pop
mov
fldenv
or
xchg
lods
ss
push
and
adc
insl
je
cmp
sub
pop
mov
aad
std
in
xor
div
adc
std
jecxz
outsb
xchg
mov
dec
lods
jg
mov
add
push
jmp
mov
or
and
popa
push
mov
mov
add
mov
mov
fmuls
sahf
jo
arpl
or
insl
fucomi
adc
xchg
jecxz
sahf
insl
daa
rclb
scas
cmp
mov
cmc
mov
adc
int3
sub
jae
adcb
adc
mov
cmpsb
lods
push
inc
inc
adc
mov
jecxz
sbb
adc
push
ret
icebp
inc
sub
scas
std
int
push
out
xor
repz
xorl
test
movsl
outsl
jg
mov
cmp
push
xor
xor
pop
out
das
in
cmp
and
andl
dec
stc
push
xchg
add
dec
clc
icebp
jo
das
push
stos
push
adc
adc
and
iret
fdivl
jg
sbb
cwtl
xchg
fisttpll
jbe
and
inc
js
lcall
xor
ja
mov
or
xor
into
sbb
clc
sub
sbb
push
add
adc
adc
hlt
test
or
or
aas
xchg
lea
cmp
sti
loope
mov
cmp
aad
cmp
jns
clc
inc
icebp
sub
pop
xlat
push
popa
push
mov
mov
add
jp
out
mov
adc
out
cmp
add
mov
or
dec
lcall
pop
lock
das
sahf
aad
data16
insb
or
mov
pusha
sarb
insl
stos
lahf
mov
sbb
jbe
gs
adc
sbb
dec
sarb
hlt
or
mov
iret
das
mov
cmp
push
sbb
inc
rcll
popf
pop
cmp
lods
gs
mov
mov
bound
cld
mov
std
cmp
jg
or
dec
out
and
fsubp
dec
mov
mov
jmp
dec
insl
stos
xor
jle
inc
lock
leave
mov
sbb
mov
and
daa
jmp
jns
mov
dec
or
push
dec
ret
add
addr16
jl
or
enter
mov
sbb
das
out
sbb
mov
les
fcompl
jne
leave
imul
cmp
outsb
pop
jno
lcall
pop
call
sub
push
dec
xor
repz
mov
push
or
insl
scas
js
or
stos
imull
cli
cmp
mov
dec
arpl
adc
movups
xlat
sbb
fst
lods
inc
fcoml
mov
iret
ss
addr16
dec
mov
adc
jle
xchg
sub
movsb
xchg
insb
sub
pusha
and
lods
pop
ljmp
enter
dec
push
sbb
xchg
mov
jnp
mov
lret
stc
jmp
pop
ret
push
jg
cmp
arpl
sub
mov
mov
jmp
test
xor
mov
and
sub
push
inc
mov
lds
outsb
inc
stos
jbe
mov
fsts
loop
cmp
lret
inc
adc
and
repz
jo
ret
mov
lock
dec
into
xchg
aas
in
inc
inc
stos
aad
xchg
lahf
call
shlb
jmp
add
out
into
aam
sahf
xchg
inc
leave
ret
xor
imul
lock
cltd
hlt
cmp
mov
push
fistpl
fs
inc
dec
and
inc
inc
popf
mov
pop
movsl
inc
movsl
icebp
ret
push
xchg
outsb
sub
jmp
pushf
dec
mov
fistpl
aas
fisttps
clc
ficoml
jmp
test
inc
mov
inc
pop
not
ljmp
dec
dec
cmp
jne
xchg
adc
int3
xchg
push
pop
xlat
aaa
mov
orl
ljmp
sub
push
es
aas
stc
jle
stc
jge
fcomi
imulb
je
xchg
and
lret
fstpl
repz
ss
fdivs
xchg
inc
lds
sub
and
or
das
rolb
inc
pop
jge
cltd
cmp
outsb
jle
test
call
outsl
jp
add
jne
adc
cmp
sbb
and
ja
adc
fiaddl
and
sub
lds
mov
jmp
cltd
push
xorl
mov
movsb
mov
sbb
mov
fmulp
das
push
int3
xor
mov
push
in
or
insl
ljmp
mov
mov
fistl
jp
icebp
mov
pop
pop
xor
fs
rcll
cld
call
movsb
push
test
lret
cli
dec
inc
push
pop
rcr
in
lea
mov
into
mov
xchg
add
js
call
call
mov
push
repz
test
mov
js
sbb
popaw
cwtl
mov
je
push
mov
cmp
xor
pop
scas
mov
push
xor
jle
push
jo
insb
js
loope
cmp
xor
push
push
out
xchg
push
cmp
pop
cld
test
fistl
lret
in
lret
pop
mov
mov
jae
and
mulb
int
jl
and
addr16
cmpsb
rol
pop
iret
xor
sub
mov
inc
cmpsb
loopw
and
shlb
fsubrp
lcall
cmp
sbb
lret
add
ret
add
scas
xchg
or
inc
push
das
test
ja
pop
mov
sbb
ja
mov
pushf
jnp
and
sarl
in
out
in
fiadds
add
inc
mov
pop
nop
and
sub
xchg
jne
jne
imul
jmp
xchg
pop
lret
in
jns
xor
xor
cs
push
orl
mov
dec
in
fs
inc
enter
jne
mov
imul
push
cmpsl
fldt
stos
test
mov
dec
in
ret
add
push
iret
push
mov
inc
mov
sub
cmc
insb
add
cmpsb
adc
int
jns
pop
inc
and
std
inc
jbe
lds
sti
push
mov
mov
ja
jg
aad
push
insl
dec
pop
jae
dec
mov
push
lcall
in
xchg
pop
inc
sub
into
jno
mov
mov
dec
icebp
cli
push
cwtl
lret
mov
shl
adc
push
cmp
xor
jg
mov
mov
fs
sub
sbb
dec
jl
push
jbe
sbb
test
pop
jno
subl
aaa
das
pop
icebp
sub
xor
clc
sbb
push
dec
adcb
sub
cmpsl
jge
das
iret
sbb
and
js
push
repnz
jecxz
fbld
lods
push
imul
arpl
mov
fiadds
adc
ja
aad
mov
dec
call
fdiv
in
jo
xchg
mov
push
push
stos
jb
push
pushf
and
xor
sarl
push
jmp
test
test
sub
jno
icebp
mov
mov
cmpsb
mov
sub
dec
imul
stc
mov
or
jmp
ret
aaa
je
sbb
insl
test
shrb
jmp
call
xchg
pop
sub
out
aaa
fisttpll
adc
shll
gs
mov
and
inc
pop
inc
out
enter
or
shrb
aad
xchg
adc
or
mov
push
cwtl
loopne
stos
cmp
inc
fsubr
loop
sub
testl
or
or
inc
subb
rorb
adc
or
mov
insb
dec
and
or
or
mov
iret
dec
xchg
pop
sub
aas
mulb
sarb
stos
sub
nop
mov
cltd
fwait
push
clc
adc
ljmp
xchg
jb
enter
xor
adc
movsl
in
popa
icebp
lahf
push
fisubs
call
xor
pop
push
enter
dec
pop
or
loop
xor
imul
xchg
and
sbb
dec
ja
call
pop
mov
mov
xor
les
in
rcl
lret
push
xchg
mov
cmp
pop
testl
xor
insl
mov
test
nop
in
pusha
jne
jne
xchg
ja
dec
or
mov
lret
sahf
dec
cmp
fistpl
stc
jne
scas
mov
push
repz
out
pushf
dec
popf
push
movsl
bnd
adc
jp
mov
cmp
and
std
pop
jbe
test
mov
push
sbb
nop
xchg
in
xchg
xchg
dec
pop
push
inc
lods
mull
and
lods
punpckldq
xchg
mov
jae
mov
out
jno
inc
xchg
inc
pop
popf
jns
imul
jns
in
xchg
mov
jns
int
jmp
or
out
pop
inc
das
mov
sar
js
push
lods
xor
idivb
xchg
mov
mov
lea
or
or
daa
jmp
je
pop
rcrb
dec
fs
adc
xchg
inc
pop
popa
mov
mov
dec
inc
push
inc
mov
aam
rcrl
pop
outsl
sub
out
sbb
iret
sub
ljmp
jae
mov
fadd
jle
imul
or
xchg
push
add
in
mov
int3
mov
iret
cltd
fstpt
jge
int
ja
xor
or
into
mov
ds
les
ss
insb
out
out
gs
lret
les
cltd
jne
push
and
ljmp
cld
sbb
inc
xchg
add
ja
and
jno
ret
mov
shrl
inc
mov
pop
test
mov
jecxz
lahf
fisubs
add
mov
lahf
cmc
stos
push
aas
xchg
jge
jl
gs
das
inc
push
call
xrelease
cmc
sub
pop
sub
push
jecxz
shl
xor
sbb
pop
ss
pop
mov
and
xchg
into
mov
jns
out
test
jnp
aaa
mov
sbb
sub
and
inc
in
aad
fildll
test
push
jp
push
sub
repnz
jle
nop
sbb
dec
ljmp
fiaddl
add
dec
lods
and
lea
jge
es
inc
daa
pushl
sbb
dec
inc
mov
and
mov
mov
mov
and
sbb
fstpt
popf
jmp
dec
adc
xor
cmp
repnz
and
sbb
cmpsb
loop
add
fwait
dec
mov
cmp
out
and
cmp
outsl
cmpsl
xor
movsl
pushl
mov
clc
xchg
shl
adc
dec
adc
mulb
inc
das
scas
mov
ret
addr16
into
sti
mov
rcll
xadd
cmp
bsr
push
lret
xor
dec
inc
loopne
jmp
jae
femms
add
divl
cli
sub
imul
mov
aad
push
cmp
or
call
mov
imul
sbb
cmp
dec
out
insl
xchg
inc
int3
push
adc
jecxz
dec
jp
lds
sub
ret
jl
mov
std
pop
clc
stc
cmp
push
jae
xchg
addr16
jle
jl
rorl
pop
push
dec
lds
jle
pop
sbb
popf
or
push
rolb
pushl
sarl
dec
jecxz
lds
adc
ret
mov
mov
mov
test
insb
xlat
push
out
leave
cwtl
mov
cmp
push
jo
aad
jno
sub
cmp
pop
push
push
arpl
pop
or
call
inc
orl
push
sbb
movsl
xchg
cmpsl
movsb
in
dec
dec
lahf
and
jbe
ret
mov
pushf
sbb
jg
roll
add
icebp
loop
popf
sarb
rcll
mov
sbb
xor
dec
push
out
mov
add
cmc
pop
xchg
ljmp
cmpsb
cmpsb
pop
insl
jg
push
rcl
fisubs
or
pop
adc
ficoms
xchg
push
fisubrl
pop
out
sbb
add
aam
movsb
fst
pop
icebp
scas
xchg
in
call
push
cwtl
pusha
pop
xchg
pop
cmpsb
or
mov
inc
je
aas
lret
mov
jmp
adc
pop
aad
out
push
or
rol
cmp
cmpsl
mulb
push
out
les
mov
push
cmp
xor
mov
and
fcmovnu
popf
sbb
xor
enter
mov
add
xor
or
lret
cmp
xlat
cmp
and
mov
jmp
lods
lcall
xchg
jns
fs
sub
enter
das
dec
ja
cltd
loopne
ficoms
ja
insl
and
xchg
or
push
mov
xchg
mov
lret
inc
sbb
jno
pop
xlat
test
aas
into
adc
xchg
dec
sub
add
jecxz
sub
jae
xlat
orb
imul
cmp
addr16
jp
mov
push
or
test
dec
mov
sbb
mov
dec
es
icebp
leave
cmp
fstpl
sub
int3
int
stos
jne
jp
lret
dec
jge
adc
aaa
fs
mov
das
pop
ret
outsl
icebp
mov
jne
scas
mov
in
es
les
pusha
mov
int
ret
insb
lret
push
dec
outsb
mov
mov
pop
mov
scas
pop
add
ret
mov
push
test
push
jmp
pop
xor
push
xor
xor
push
sbb
cmc
out
jbe
ror
leave
and
stos
rcl
push
dec
push
das
or
mov
in
mov
sar
cld
adcb
dec
out
mov
push
dec
add
fdivrs
or
arpl
pop
stos
fidivl
sub
sahf
pop
sti
test
aad
mov
lods
and
jmp
data16
dec
add
int3
ror
out
mov
push
daa
aad
mov
bound
cmp
push
jmp
or
inc
lds
adc
rol
xor
in
decl
jge
or
out
std
xchg
inc
push
sub
pushf
mov
pop
nop
add
push
outsb
add
sub
adc
mov
rcrb
and
testl
loopnew
popa
jns
sub
jbe
inc
mov
mov
mov
ffreep
add
test
pop
inc
cmp
jbe
adc
jo
sbb
mov
std
pop
xor
cmp
add
sub
pop
mov
xor
stos
nop
jae
add
mov
repz
or
lods
push
cmp
jecxz
sti
jg
add
fmul
push
dec
or
xor
cmp
ss
cli
dec
jge
cmp
xchg
out
or
mov
stos
sbb
mov
mov
leave
pop
cltd
or
jecxz
scas
loopne
mov
dec
ss
xchg
pop
or
icebp
into
sub
adc
rcll
ss
sub
fcmove
lods
jb
movsb
pop
push
arpl
lahf
mov
test
jbe
jb
inc
dec
cmp
lret
push
xchg
ljmp
cmp
push
add
push
lock
inc
int3
push
pusha
inc
sbb
shlb
push
fstpt
inc
sti
stc
test
push
rorl
mov
test
pop
or
enter
sub
mov
pusha
fisttpl
rorb
in
mov
mov
shl
mov
pusha
add
cwtl
mov
test
sti
bnd
cmpsb
mov
lret
pop
rorl
js
mov
mov
xor
mov
call
mov
fbstp
pop
adc
jae
xchg
xchg
mov
scas
xor
xchg
sbb
add
lcall
fsubrl
jo
pop
push
fisubrs
into
mov
push
jl
in
mov
dec
cld
push
mov
dec
push
push
adc
sete
and
arpl
cmp
dec
sbb
into
loopne
out
aam
inc
pop
inc
mov
test
jmp
xor
int
sub
stc
mov
out
pop
fcmovb
rcr
adc
daa
imulb
insb
mov
mov
test
dec
xor
ret
push
adc
push
ja
inc
sub
jg
inc
leave
mov
push
cmp
pop
xor
sahf
add
xor
pop
jns
jg
or
cmc
leave
aad
mov
pop
inc
pushf
loope
push
cmpsl
adc
mov
addl
dec
lcall
or
pushf
jo
aad
lret
popw
cld
imul
or
arpl
inc
rorb
pop
mov
push
dec
pop
mov
pop
sbb
push
sub
sahf
rcrb
pusha
dec
mov
push
jne
es
inc
adc
ds
sub
xor
and
xor
and
movsb
imull
sub
xchg
rorl
cmp
je
int
or
push
in
ud0
push
pop
pop
dec
jge
fs
bound
mov
in
cmp
iret
iret
mov
mov
jae
in
out
mov
cmp
sub
xchg
outsb
stos
jns
or
mov
jne
adcl
int3
lods
cmpsl
clc
mov
jns
inc
jle
dec
and
cltd
sub
add
mov
jbe
cmpb
imul
cli
rorb
addr16
rorl
subl
inc
mov
divb
sub
mov
xor
loopne
pop
dec
out
loop
add
dec
in
incb
stos
xor
push
xlat
cmc
sub
lods
dec
pop
fcmovb
test
imul
adc
or
fsubs
test
sub
dec
pop
jae
fcmovb
shl
ror
int
mov
cmp
lret
leave
lock
sti
js
push
mov
cli
ret
fldt
xchg
test
jl
jle
orb
addl
or
out
xchg
aad
jmp
addr16
pop
xor
rorb
aaa
inc
loopne
js
std
mov
or
shll
or
adcl
pop
rcll
prefetchnta
cmc
dec
jp
mov
addr16
push
lret
mov
je
leave
adc
js
popa
mov
add
mov
xlat
cld
and
sbb
push
int
outsb
inc
cmp
mov
push
lahf
dec
adc
adc
movsb
jb
mov
add
lahf
pop
repnz
arpl
repz
scas
xchg
add
cmpsl
mov
inc
out
jb
leave
cmp
jo
mov
pop
cld
adc
jp
pop
rorb
cmp
jne
incl
das
xor
pop
push
roll
scas
sub
arpl
and
imul
and
imul
insb
les
addl
or
ja
call
xor
mov
fcmovnb
mov
sub
cmp
scas
pop
jnp
imul
into
inc
add
xchg
add
cmpsl
pop
add
std
fucom
bound
jno
ja
cld
inc
sti
jae
sub
sbb
sbb
jmp
dec
ljmp
mov
pop
testl
jb
enter
fdivl
mov
notl
loopne
xorl
push
lcall
inc
nop
clc
adc
jecxz
xor
rcll
xor
inc
imul
nop
daa
jle
lods
divl
enter
xor
jae
movsb
push
int
cli
inc
add
fdivs
sbb
int3
test
jnp
not
cmp
movsb
mov
repz
fldenv
add
outsl
sub
pop
icebp
and
dec
and
lods
mov
jmp
sar
jnp
and
sub
mov
or
cli
int3
lret
mov
sub
sub
push
dec
xchg
movsl
cmp
bound
adc
cbtw
and
cmp
in
outsl
movsl
aam
out
repz
cmp
push
jmp
ret
pushf
iret
sub
popa
stos
or
jb
mov
jb
shll
clc
sbb
jmp
mov
ja
loopne
aam
sub
xlat
cwtl
sub
cltd
pop
cmp
ret
sarb
adc
jecxz
bound
xor
mov
push
das
jmp
jnp
lea
jae
jecxz
cmp
mov
sub
push
mov
repnz
inc
rcrl
fsubl
mov
std
fsubp
insl
es
push
cltd
out
jle
pop
cwtl
adc
into
jl
rcl
push
fistpl
clc
dec
sarl
jge
cs
fdivrs
movb
or
sbb
push
ret
fdivrp
fwait
push
fwait
stos
fcom
outsb
mov
jbe
aas
fimull
push
out
roll
pop
sbb
add
arpl
aaa
cwtl
mov
jp
mov
icebp
pop
stc
aad
test
movsl
fwait
into
hlt
sbb
leave
dec
or
decb
pop
popa
push
ds
pop
insl
cmpsl
adc
js
lea
xchg
cli
cltd
shl
xchg
sub
mov
or
add
test
push
pop
insb
fsubrl
xchg
pop
in
pushf
scas
ss
jmp
or
es
cmp
dec
cli
mov
mov
fwait
aad
testl
sbb
decl
mov
sahf
jo
iret
arpl
aaa
sbb
sbbl
sti
movsl
jg
int3
fcmovnbe
push
inc
daa
sub
sub
test
xor
sti
dec
mov
xchg
lret
inc
push
or
cmp
or
mov
jae
and
mov
daa
add
push
fdivrs
sbb
loopne
fdivl
cwtl
or
fbstp
fstl
push
adc
sbb
mov
les
mov
adc
std
repz
inc
shll
xor
jae
std
andl
sbb
out
push
push
adc
mov
mov
add
fs
push
jp
stos
dec
jp
and
jmp
sbb
fcmovbe
pop
test
daa
stc
notb
out
xchg
sbb
xchg
push
jnp
js
dec
test
cmp
inc
lahf
jecxz
cwtl
xchg
jg
mov
inc
xchg
fwait
shrl
mov
jne
add
dec
jbe
inc
jns
pop
mov
dec
or
imul
pop
add
mov
push
sub
pop
mov
leave
add
inc
inc
or
mov
les
dec
int
cmp
inc
push
inc
je
hlt
pop
icebp
dec
fs
add
push
lahf
dec
outsl
test
popa
pop
sbb
scas
stc
cmp
adc
dec
sub
push
inc
xor
push
fld
push
je
enter
ljmp
enter
pop
sbb
push
imul
xchg
iret
mov
andl
push
mov
cmc
xchg
inc
cmp
push
loope
arpl
and
into
fstps
adc
mov
add
loope
ror
jo
adc
dec
outsb
test
out
pop
mov
iret
cmpsl
out
fwait
pushl
dec
mov
fwait
mov
popf
jns
mov
repz
icebp
sarl
popf
cs
repnz
jmp
aaa
andb
js
jp
mov
sbb
mov
sub
xchg
sti
push
mov
jne
gs
lods
ljmp
mov
lcall
add
dec
jge
adc
cmp
lea
mov
fwait
cmp
xchg
in
call
jnp
jo
dec
in
in
xchg
cmp
or
idivb
xor
clc
insl
loopne
nop
dec
fistpll
xor
inc
mov
subl
cmc
cmp
mov
clc
fxch
jae
push
inc
movsl
push
mov
sub
cmpsb
xchg
jne,pt
int3
or
jg
sbb
mov
daa
add
dec
outsb
sub
mov
ss
rcrb
rcll
lods
ljmp
add
add
cmp
or
aaa
aad
dec
outsl
jns
pop
daa
xchg
into
bound
int3
lea
es
xor
inc
jecxz
fs
sub
cmp
insb
scas
je
ss
or
fs
cmpsw
icebp
mov
gs
sub
orb
std
testl
lea
mov
mov
cltd
xor
pop
movb
xor
mov
loop
and
out
add
jne
ds
mov
push
cmp
and
add
push
lret
testb
xlat
add
ds
cmpsb
xchg
cmp
pop
xchg
das
inc
dec
dec
daa
movsb
sbb
cmpsb
inc
jne
gs
mov
push
mov
pop
xor
xor
add
cli
outsb
pop
cmp
movsb
and
adc
cmpl
test
dec
pop
push
jg
loope
int3
mov
jmp
call
adc
xchg
movsb
mov
lods
jp
test
jnp
movsl
jle
scas
fisubs
es
inc
sub
icebp
es
add
mov
and
movsl
sbb
in
jno
mov
fcmovnbe
cmc
mov
inc
xor
mov
ljmp
in
xchg
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
add
add
add
and
pushf
movsl
pop
and
add
mov
adc
pushl
mov
pop
push
pop
sub
mov
sub
mov
xor
xor
mov
add
sub
mov
dec
jne
call
loope
hlt
sbb
fidivrs
mov
pusha
pop
pop
jmp
mov
sahf
jmp
sar
lahf
in
mov
int3
fisubrl
adc
fwait
aaa
mov
dec
sarl
iret
insl
sbb
sub
aad
popf
rorl
xor
pop
xchg
cmp
dec
sarl
clc
pop
sub
fisubrl
insl
test
insl
sbb
fidivrl
ret
sbb
add
cs
or
testb
push
cmp
add
jmp
dec
mov
inc
jae
inc
xlat
insl
sbb
cmp
push
aas
stos
pop
or
or
inc
sbbl
jno
fisubrl
mov
movsl
test
mov
dec
pop
rorb
adc
cltd
pop
mov
arpl
repnz
fisubrl
divb
push
call
dec
ljmp
xchg
jmp
out
std
jno
mov
adc
and
dec
ja
jns
seta
sub
or
lcall
test
ja
fisttpl
mov
fsubrl
test
jno
sahf
aam
fistps
cmp
or
pushf
push
sub
sarl
arpl
fwait
sar
mov
insb
xchg
out
sub
or
rcrb
pop
nop
icebp
push
lods
mov
jns
movaps
or
rolb
mov
into
fisubrs
test
paddw
sbbl
cli
mov
loop
cld
shlb
cmc
mov
mov
dec
jge
fmuls
xchg
push
jns
dec
inc
pop
mov
xchg
test
fmuls
ret
sbb
jle
cmp
sbb
lods
or
pop
push
jecxz
fmuls
mov
mov
and
mov
dec
imul
pop
dec
xlat
sbb
sub
xorb
jmp
push
xor
mov
jmp
imul
outsb
pusha
mov
arpl
shlb
test
iretw
mov
les
iret
xchg
cmpsl
dec
inc
inc
cmc
adc
sbb
outsb
pusha
fwait
repz
xchg
fsts
jg
xchg
imul
xor
or
es
mov
test
aaa
or
and
das
mov
jg
lock
mov
cmp
mul
dec
pop
addb
xchg
jmp
popa
js
bound
mov
fldcw
mov
pushf
xchg
popa
mov
out
sub
sub
cmc
or
es
mov
push
mov
in
insl
sub
add
out
add
mov
addb
aad
add
sub
xchg
mov
stos
clc
add
push
fwait
decl
dec
cmp
pop
hlt
and
xor
pop
scas
inc
xor
scas
sub
enter
dec
stos
dec
pop
dec
pop
aaa
mov
push
lcall
repz
repnz
dec
cmp
sbb
push
sti
arpl
cmpsb
push
inc
icebp
stos
cmp
push
repz
shll
cmpsb
push
iret
cs
sti
arpl
cmpsb
push
inc
icebp
mov
and
push
hlt
and
push
hlt
and
sbb
pop
aaa
xchg
cmp
jl
sub
es
out
in
outsl
outsl
std
call
xchg
cmpsb
cmp
icebp
popa
jno
pop
loop
push
cmpsl
and
push
data16
enter
repz
hlt
and
push
repz
aaa
mov
outsl
lret
hlt
and
cmc
in
cmpsb
push
and
into
cmp
or
movsl
out
lock
into
fdivs
cmpsb
push
jno
pusha
pop
hlt
and
mov
test
cvtps2pd
lods
sub
enter
sub
daa
cmpsb
push
jno
cmp
jno
mov
jge
mov
hlt
scas
pop
or
jge
mov
hlt
lods
jno
outsl
mov
pop
hlt
and
sbb
scas
cmp
leave
and
pop
cmpsb
push
outsl
test
and
pop
mov
jmp
cmp
out
and
xchg
fistpll
mov
and
cmp
leave
and
push
sbb
lret
pop
hlt
and
pop
outsl
mov
pop
hlt
and
sbb
scas
sub
enter
pop
sub
mov
mov
and
pop
sub
daa
cmpsb
push
jno
mov
push
hlt
push
pop
push
push
and
inc
pushf
or
enter
push
and
mov
hlt
mov
pop
hlt
and
push
hlt
and
or
outsl
subb
dec
scas
lods
jo
insl
pop
mov
jb
ljmp
cmp
pop
rorb
cmp
push
mov
jb
ljmp
mov
dec
xor
dec
ds
shrb
scas
mov
xchg
pop
cmp
mov
xorl
mul
pop
ds
xlat
and
mov
pushf
cmp
cmpsb
push
lret
cmp
mov
xorl
inc
xor
orl
cmp
mov
xorl
inc
jge
lret
cmp
xchg
and
popa
mov
test
cli
jb
jge
daa
cmpsb
push
hlt
shrb
scas
mov
loope
pop
cmp
mov
test
arpl
cmpsb
or
gs
lret
cmp
xchg
and
fadd
movsb
pop
push
inc
out
push
outsl
add
test
push
inc
or
xor
out
pop
pop
pop
xor
imulb
fwait
test
push
inc
sbb
shlb
jno
mov
push
hlt
and
push
outsl
jno
js
and
cmpsb
push
leave
and
push
hlt
and
jae
dec
add
jge
mov
hlt
scas
out
and
pop
pop
and
cltd
add
and
and
hlt
scas
bound
lea
mov
flds
sbb
mul
daa
cmpsb
push
outsl
jo
push
mov
pusha
push
fimull
in
sub
btc
flds
mov
fcoms
shll
cltd
sub
mov
adc
clc
and
daa
clc
and
cmpl
pop
call
in
test
aad
mov
dec
testl
loope
neg
jnp
pop
icebp
mov
add
sub
sbb
pop
out
fidivrl
hlt
and
push
hlt
and
push
hlt
and
push
hlt
and
push
hlt
and
push
hlt
and
push
hlt
and
push
loopne
cmpsb
je
das
cmpsb
aas
cmp
xor
push
hlt
and
push
hlt
and
push
hlt
and
push
hlt
test
push
hlt
and
push
hlt
and
push
hlt
and
push
hlt
and
push
sub
pushf
pop
ljmp
std
xor
mov
mov
pushf
xor
cmp
dec
push
adc
adcb
cltd
test
xchg
subl
std
inc
jo
ds
xchg
mov
push
pop
fistl
pop
outsl
mov
out
or
xchg
sahf
sub
add
repz
add
loopne
push
sahf
mov
adc
xor
sub
pop
setp
rorb
into
inc
std
jmp
mov
fdiv
push
mov
mov
out
dec
imul
sti
in
mov
cmp
out
lret
arpl
lea
aaa
adc
xchg
sbb
fldenv
inc
pop
adc
xchg
add
cli
dec
xor
pop
rcrl
aaa
sub
mov
mov
iret
inc
mov
rcr
mov
xchg
fidivs
movsl
cmp
arpl
jbe
sub
cmpb
xor
add
daa
js
jg
xchg
sarb
out
or
pop
pop
pop
mov
jl
mov
jo
fistl
mov
fwait
dec
mov
fists
fildl
popa
popa
int
rcll
fmull
mov
sti
add
xor
sbb
sbb
icebp
sub
jl
dec
jnp
rcll
xchg
mov
cmp
pop
mov
sub
lcall
mov
pop
mov
mov
lcall
out
aas
lahf
mov
push
cmp
in
push
inc
ljmp
xchg
and
or
push
dec
mov
mov
cmp
or
dec
mov
adc
fsubs
push
sbb
xor
enter
cs
setg
loope
lock
dec
pop
loop
subl
adc
clc
cs
shl
in
enter
hlt
js
push
fcoms
push
add
adc
dec
sub
out
je
add
movsb
add
push
fldcw
jne
scas
daa
lea
pusha
out
popf
stc
add
negb
test
jb
mov
jb
push
dec
call
sti
pop
in
push
mov
add
xor
sub
mov
dec
and
shrb
lret
sbb
xchg
cmp
sub
fistpl
and
or
shrl
dec
jne
ret
test
jmp
sbb
rolb
mov
push
cmp
push
dec
int
add
icebp
gs
xchg
lock
iret
xor
gs
nop
xchg
mov
leave
shl
out
pop
test
sbb
push
mov
jo
and
jmp
jecxz
js
test
stc
gs
scas
adc
inc
call
pop
mov
add
add
add
or
add
adc
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
or
mov
or
add
mov
add
mov
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
mov
add
add
add
lea
add
add
add
add
jo
imul
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
dec
je
mov
sub
add
add
add
nop
xchg
sub
js
cli
xor
inc
rcrb
jmp
mov
add
push
popl
test
in
adc
rolb
add
movsb
pop
and
in
ds
in
mov
dec
cmp
jns
jo
repz
push
pop
cmp
idivb
loope
ljmp
fs
fs
mov
xor
sbb
test
out
cwtl
push
sub
inc
fdivrs
movsl
adc
loopne
pop
sbb
in
mov
or
mov
xor
jmp
cmp
push
mov
or
out
add
mov
push
mov
or
xchg
lret
mov
into
jl
mov
bound
dec
movsb
jns
and
fdivrs
scas
add
test
push
call
in
sbb
js
mov
arpl
shll
mov
push
lcall
int3
inc
jecxz
pusha
push
es
xchg
cld
icebp
std
sbb
cmp
xchg
ret
pop
jp
scas
adc
jb
add
adc
cmp
stc
dec
lahf
imul
or
xchg
inc
add
dec
jno
sahf
out
js
outsb
call
arpl
xchg
sbb
or
dec
test
jge
ja
repnz
out
ror
divl
subl
inc
xchg
jmp
inc
sbb
into
cmp
push
mov
dec
push
pop
aas
jne
add
test
push
jae
arpl
dec
imulb
sti
mov
cltd
popa
cmp
xchg
fcoml
lock
mov
jns
icebp
sub
stos
mov
sub
out
pop
cmp
scas
and
mov
jnp
fists
sub
repz
jle
stc
push
xchg
addl
popf
and
sahf
sbb
inc
arpl
sub
cwtl
mov
inc
stos
fadd
mov
insb
iret
add
push
orl
xor
mov
add
adc
xchg
mov
mov
and
xchg
mov
repz
lret
fs
out
jae
xor
decb
cmp
jae
lea
ljmp
and
cli
ss
push
jno
mov
aad
outsl
out
and
ret
add
orb
inc
mov
cmp
pusha
sbbl
mov
fidivs
mov
insl
or
mov
adcl
cmp
ljmp
xor
xlat
insl
lret
scas
cmp
push
xor
mov
push
sub
pop
iret
push
filds
inc
or
jo
jmp
mov
jle
bound
mov
paddb
negb
leave
scas
gs
int3
in
mov
push
or
fsub
pop
or
push
jbe
out
cmp
mov
iret
mov
adcl
bound
mov
sub
mov
stos
lahf
adc
inc
js
in
out
gs
sbb
leave
pushf
dec
out
mov
lret
inc
mov
aam
push
sub
neg
or
sub
push
or
mov
xor
shll
push
hlt
decb
jno
insb
enter
aas
pop
add
dec
movaps
adc
loopne
jmp
adc
cwtl
pop
rcr
rorb
pop
jecxz
mov
cli
or
pusha
lret
int
dec
insb
push
leave
dec
aas
repz
jne
mov
mov
pop
out
scas
add
lret
jbe
cmp
sub
add
inc
and
and
shlb
sub
bound
aaa
jle
ss
lods
mov
xor
pusha
xchg
aad
movsl
aas
aam
sahf
xchg
bound
es
call
dec
jle
adc
in
in
jno,pt
cmp
jg
lahf
aas
mov
lea
sub
push
xchg
sbb
aaa
xchg
das
and
addb
jbe
shll
push
aad
mov
push
and
xor
mov
push
push
or
cmp
adcl
mov
cmp
and
sbb
or
or
test
fsubl
mov
xor
inc
xchg
call
das
out
mov
aas
dec
add
data16
pop
js
add
or
jl
test
ljmp
fmull
in
fbstp
stos
mov
mov
cli
mov
cmovg
lcall
cltd
and
pushf
lret
cmpsb
pop
cli
sti
adc
gs
test
lods
mov
push
mov
xchg
pop
aad
sahf
not
clc
add
and
push
shr
and
dec
push
or
cwtl
mov
ja
sub
mov
xchg
add
xor
cmp
iret
mov
mov
sub
dec
push
imul
vcmpsd
scas
sub
push
adc
sbb
nop
ljmp
cmp
add
or
enter
pop
lods
sub
jnp
pop
mov
mov
push
ret
int
or
xlat
ret
mov
pop
xor
mov
inc
stos
pusha
xchg
call
mov
sbb
mov
jl
dec
clc
or
popf
ror
lea
lods
mov
sbb
pop
adc
cmpsl
pop
mov
js
or
fisttps
pushf
mov
push
pop
xchg
repnz
ds
xchg
sub
mov
push
or
lea
data16
sbb
dec
adc
fdivl
pop
out
movsb
pop
addr16
icebp
or
loop
xor
insb
fsubr
unpcklps
xchg
add
cmp
xchg
mov
dec
jecxz
sbb
mov
dec
push
jmp
pusha
outsb
popa
insb
movsl
jb
movsb
not
out
mov
test
or
mov
test
icebp
jae
push
sub
mov
fldl
inc
cmp
jno
hlt
in
push
push
sti
xchg
add
loope
sub
orb
clc
push
mov
mov
mov
orb
mov
out
aaa
pop
mov
ja
push
pop
bound
hlt
mov
les
sub
std
pop
movsl
xchg
in
es
xchg
mov
js
jecxz
inc
in
lea
das
pop
xlat
inc
das
mov
push
movsl
rcll
ds
cmp
movsb
sub
inc
repnz
mov
iret
mov
stos
mov
mov
cltd
lahf
and
jmp
sbb
push
cmpsl
adc
outsl
add
shll
and
inc
jl
adc
push
mov
test
fs
ja
outsl
pop
xchg
xchg
sti
insl
sub
push
mov
xchg
mov
push
repz
stos
xorl
scas
or
outsl
xchg
sbbl
dec
jno
dec
or
je
jge
xchg
cbtw
andb
mov
cmc
mov
sub
add
and
sbb
mov
leave
dec
imul
jmp
mov
cmp
adc
mov
sbb
xor
xchg
es
add
mul
pop
add
cmp
fsubrs
mov
orb
xchg
mov
out
mov
add
xchg
jo
add
cmp
loopne
xlat
aas
mov
mov
pop
adcb
or
xchg
and
or
jne
or
pop
push
adc
aas
jmp
sbb
lds
mov
jp
mov
lret
push
push
jg
lds
jecxz
add
inc
xor
dec
adc
clc
sbb
mov
iret
pop
dec
inc
ret
lods
xchg
fs
pop
imul
test
jge
push
pop
jle
mov
ss
bound
sbb
mov
and
fimuls
idiv
ret
dec
mov
ljmp
in
iret
mov
mov
mov
push
in
and
je
rclb
insl
jb
nop
popf
test
test
sub
shl
mov
hlt
fs
push
call
jle
dec
mov
or
sti
mov
add
test
mov
xchg
ja
push
mov
fwait
cmpsl
outsl
cmp
mov
cmpsl
push
xchg
cmp
xchg
jg
mov
adc
cmp
sbb
sub
dec
jne
or
aaa
lock
xor
pusha
dec
adc
mov
jne
and
imul
push
out
and
mov
repz
jl
cli
cmp
adc
lock
subb
lods
push
into
jae
adc
mov
sbb
inc
add
ret
pop
add
in
ficoml
test
lcall
and
push
xor
jb
push
cmc
ret
data16
adc
mov
and
lcall
in
stos
addr16
scas
xchg
jnp
hlt
inc
stos
mov
or
and
dec
or
jae
jge
adc
outsb
pop
cmpsb
pop
stc
hlt
xorb
pop
test
ja
push
dec
insb
inc
fmuls
jo
or
and
or
lock
push
lret
and
sahf
iret
movsl
push
jnp
xchg
inc
jbe
orl
iret
js
stc
scas
mov
push
and
mov
pop
mov
fincstp
hlt
in
outsl
sub
mov
outsb
mov
jo
inc
out
out
push
fstl
jmp
ss
insb
dec
js
lods
mov
xor
test
inc
mov
add
xchg
inc
jmp
cmp
jecxz
mov
lret
pop
xchg
mov
ret
aam
xchg
sbb
in
js
loop
add
sub
mov
cmp
mov
pop
jne
stos
cmp
ss
push
in
xor
xlat
mov
pop
sbb
mov
push
shrl
out
lahf
xchg
imul
xor
or
jns
outsb
cmp
pusha
sbb
xchg
adc
dec
test
xchg
jecxz
pop
mov
pushf
fmulp
lret
cwtl
push
mov
insl
push
arpl
adc
jno
jl
lret
data16
out
lret
xchg
imul
in
sti
imul
and
adc
push
ja
loop
filds
test
fdivl
rcr
or
int3
cs
lea
and
fwait
xchg
popa
sbb
cmpl
fldl
lds
mov
pop
data16
dec
shl
adc
cltd
call
mov
repz
add
in
mov
ds
lret
add
imul
ds
cmp
scas
sbb
mov
stc
ss
mov
pop
ss
push
aaa
adc
push
outsb
mov
out
pop
stos
or
and
add
jge
popf
mov
out
lods
dec
movsl
or
ret
sub
pop
scas
mov
jle
push
pop
or
adc
repnz
or
nop
in
mov
push
mov
jmp
enter
in
fidivs
sub
push
pop
shr
dec
inc
xlat
and
rclb
xchg
push
notl
pop
cwtl
mov
pop
add
sub
in
sub
cmp
dec
ret
pop
push
out
sub
int
push
rclb
movsl
xchg
lcall
fsubs
dec
insl
add
sbb
insb
pop
pop
sbb
jecxz
push
shll
sbb
pop
or
cmpw
hlt
cltd
add
jnp
icebp
fdivrl
xorl
pop
jp
out
jno
out
lret
or
repnz
std
inc
cmp
sbb
and
jb
js
xorb
outsl
inc
loope
jp
in
pop
mov
rcl
pop
test
or
movsb
ja
xchg
mov
daa
mov
imul
mov
out
or
divl
and
mov
and
sbb
cmp
les
lock
xor
sub
es
jae
cmp
mov
jb
mov
and
gs
jne
mov
movsl
dec
cli
jae
fsubs
or
mov
dec
mov
add
sti
in
loope
ss
ss
xchg
xlat
stos
jecxz
leave
add
xchg
pop
push
mov
jp
call
adc
repnz
fucom
js
dec
cmp
inc
mov
fstpl
aaa
dec
fidivrl
jmp
xchg
std
xchg
fisubrl
lods
call
lahf
cwtl
push
aad
movsl
imul
xor
mov
sub
xchg
pop
sbb
jge
movsb
in
or
ljmp
dec
mov
dec
scas
cltd
add
xlat
cmp
mov
jmp
jp
adc
stos
lds
jp
jns
push
dec
xor
dec
sub
insb
mov
in
mov
sbb
fs
xchg
pop
je
pop
pop
in
sbb
push
jl
mov
mov
push
cmp
pushf
leave
adc
pop
add
inc
add
imul
out
and
xor
test
adc
or
lods
pushf
call
lcall
pop
iret
shll
xchg
hlt
jl
inc
inc
mov
insl
cmpsl
cs
jnp
outsb
push
cmp
mov
jl
add
lcall
imul
mov
xchg
or
js
int3
pop
push
dec
popa
mov
outsb
adc
add
or
mov
push
pop
sti
adc
inc
popf
xor
sbb
int3
pushf
fwait
test
ret
es
cmp
lret
sbb
out
xchg
inc
daa
inc
shll
mov
fs
pop
stos
dec
fsubr
mov
es
inc
cmc
clc
mov
lds
stc
dec
mov
lds
and
jnp
fwait
in
cs
inc
or
jmp
sub
sub
ja
cmpsl
or
and
inc
xchg
adc
pop
cmp
xchg
or
repnz
les
cltd
cmp
pop
inc
cwtl
add
fsubrp
cmpsl
push
je
out
adc
jbe,pn
cmp
je
scas
in
ret
or
xorb
mov
outsb
cmpsb
xor
sub
xchg
jne
daa
xor
push
cli
jp
cli
loopne
push
or
outsb
cmpsb
xchg
push
sti
or
push
and
inc
sub
pop
repnz
ficoms
mov
jecxz
hlt
out
xchg
mov
xor
daa
push
test
rclb
mov
dec
in
adc
outsl
mov
faddl
push
sti
notb
jnp
xlat
mov
fucomp
ljmp
in
shll
push
ljmp
imul
mov
jae
jns
aaa
jmp
jo
fwait
sbb
push
push
cwtl
mov
adc
mov
clc
popf
jecxz
pop
out
int3
xchg
cmc
leave
push
or
ret
adc
mov
add
je
mov
aad
and
lds
rcr
insl
popa
lret
cmp
hlt
jg
sbb
mov
dec
je
push
sbb
scas
xchg
xchg
loopne
stos
mov
push
xor
into
pushf
shl
movsb
cmp
jg
rcl
inc
icebp
sbb
mov
inc
test
out
sbb
shrb
xchg
and
inc
cmp
jbe
cmp
sub
jb
out
movsb
gs
and
jmp
mov
mov
bound
lods
test
cmp
daa
decl
dec
movsb
aad
fdivp
xor
mov
sbb
negl
int3
pop
ja
repnz
aaa
dec
mov
xor
addr16
repnz
jle
ja
push
jmp
js
sbb
xchg
mov
movsl
mov
rorb
scas
loop
rcrl
xor
and
test
or
fidivs
repz
jb
jns
cmpsb
sub
ficoms
test
cmpsb
std
out
inc
mov
inc
jns
insl
sbbb
test
lahf
mov
aad
jg
rcrb
gs
or
pop
je
outsl
daa
push
mov
xchg
add
push
or
add
and
mov
pushw
fistpl
mov
cli
xchg
or
repnz
add
out
leave
divb
cld
loopne
add
pusha
xchg
push
pop
std
xchg
push
jnp
pop
inc
sarb
test
mov
loop
cltd
or
and
dec
and
jb
pop
out
outsb
sar
push
mov
push
and
sahf
fs
mov
mov
flds
adc
jbe
xor
pop
loopne
sbb
xchg
pushf
inc
mov
mov
shll
icebp
bound
mov
iret
mov
mov
fisubrl
les
jae
sbb
pop
fsubl
ja
push
push
adc
and
inc
test
push
mov
cwtl
mov
pop
lahf
jmp
pusha
mov
xchg
xchg
mov
fadd
div
repz
mov
popa
int3
mov
xor
jae
lret
sbb
inc
and
cmp
jbe
pusha
inc
movl
and
mov
jns
push
mov
les
dec
aad
mov
loop
push
int3
mov
outsl
add
sbb
lods
sbbl
push
and
inc
mov
and
sahf
out
mov
pusha
push
subb
test
sbb
mov
push
jbe
inc
xchg
popa
adc
dec
push
shrl
lods
cld
scas
lock
mov
push
and
sub
mov
out
out
bound
sbb
imul
bound
cmovge
or
inc
jecxz
aam
cmc
ret
stos
jbe
scas
mov
mov
int3
mov
mov
pop
inc
call
rcl
es
loop
dec
gs
ja
push
mov
je
stc
mov
adc
leave
inc
mov
and
jg
in
popf
push
callw
fldenv
mov
xor
enter
cs
push
add
push
cmpb
cwtl
repz
aaa
pop
icebp
loopne
arpl
iret
incl
fisttps
ja
divb
idivl
sbb
leave
jmp
lret
int3
inc
call
sahf
jg
push
pop
lcall
push
mov
sarl
cmp
sub
xchg
inc
movsb
cmp
jle
call
les
out
loop
pop
sbb
xor
repnz
xor
cmp
dec
mov
push
push
hlt
jle
cmovl
or
cli
inc
fisubl
cwtl
jae
cmpsl
inc
jmp
outsb
repnz
in
and
mov
xor
push
data16
dec
mov
daa
cwtl
inc
idivb
or
mov
cltd
into
xchg
repz
icebp
aam
jecxz
cmp
scas
jle
jge
jae
aaa
pop
cmp
fists
lret
and
dec
or
cltd
inc
xor
or
add
mulb
arpl
js
aas
sub
add
aam
pop
xchg
pop
sbb
or
mov
scas
aaa
jae
pop
ja
cwtl
xchg
rcl
out
repnz
mov
push
add
sub
jne
jmp
fstl
mov
jmp
into
dec
lcall
sub
sub
aad
and
addr16
jae
fisubrs
sarb
jge
adc
or
push
repnz
pusha
es
xchg
pop
sbb
xchg
in
nop
scas
and
in
lret
inc
and
sub
outsl
cld
mov
inc
rcrl
inc
push
sbb
dec
cmp
andb
add
xor
loope
jecxz
stos
pop
test
jmp
hlt
mov
jbe
sbb
mov
cmpsb
dec
leave
les
push
mov
pop
out
adc
pusha
insl
or
jecxz
fimuls
gs
push
popa
outsb
movb
rcr
and
jg
imul
push
or
lea
lret
or
shr
lcall
lret
sbb
mov
mov
cld
les
out
dec
xor
mov
jae
dec
cmp
jmp
cmp
jg
repnz
push
jg
call
push
ret
mov
or
aaa
add
sub
push
add
jl
dec
test
push
cmpsl
mov
inc
mov
or
mov
testl
xor
int3
lcall
push
xor
xorb
ja
push
test
dec
aam
adc
dec
push
push
mov
arpl
orl
xchg
insb
push
sbb
lods
stos
add
repnz
lcall
xor
test
scas
and
ficomps
pop
lods
sbb
pop
aad
fsub
mov
jge
sti
add
insl
dec
adc
daa
jno
negl
lcall
ficompl
test
cmp
mov
add
xchg
insl
fsts
pop
out
ret
sar
mull
or
jns
mov
rolb
mov
xlat
dec
inc
add
cmp
dec
pop
pop
jo
sbb
les
fwait
pop
shlb
call
mov
pushf
sbb
imul
es
jns
cmpsb
into
push
mov
add
mov
cmpb
sti
mov
jo
xor
xchg
int
sbb
mov
pop
dec
dec
fmuls
outsb
jae
push
in
movsl
stc
int
movsb
ja
das
pop
aam
bound
xchg
ja
mov
cs
mov
mov
cmpsl
adc
test
arpl
hlt
insl
add
jb
push
sub
aam
mov
mov
adc
pop
jecxz
ret
divb
pop
push
mov
cmp
std
jae
xchg
enter
lret
xor
cli
mov
sbb
lock
inc
es
pop
rclb
xchg
add
loopne
mov
ljmp
fistpl
into
icebp
xor
es
das
loopne
repnz
dec
rcrb
icebp
test
int3
es
je
ficompl
push
or
fxtract
add
pop
cld
mov
ja
je
push
dec
setb
sbb
adc
les
sub
lods
push
mov
lret
ja,pn
test
sbbb
xchg
or
jp
pushl
cltd
stos
sbb
lret
rorb
push
in
cmpsl
lods
push
xor
mov
adc
dec
jmp
xchg
testl
push
pop
jnp
rclb
adc
inc
test
mov
in
add
mov
mov
adc
push
cmp
rorb
jg
dec
idiv
dec
int3
dec
push
jle
movsl
ljmp
push
leave
dec
cmp
jmp
pop
scas
stos
push
inc
xchg
sar
mov
jmp
mov
ret
dec
movsl
jle
jnp
addr16
jge
test
subl
int3
daa
out
adc
mov
cmp
test
pop
xorl
mov
xor
mov
arpl
les
notb
dec
inc
add
inc
into
adcl
lds
xor
jle
push
std
xchg
pmaddwd
cs
fisttpl
push
stc
loope
push
fsubs
movb
imul
push
inc
cmpsb
shld
ret
mov
add
loop
call
push
xorl
and
insl
or
xor
gs
outsb
or
cmp
mov
test
mov
out
cltd
arpl
dec
cmp
nop
xchg
jo
and
out
xorb
jno
daa
jmp
or
mov
inc
ret
in
mov
pushf
aad
shlb
into
xchg
out
mov
and
leave
dec
pop
inc
xchg
dec
add
scas
pop
cmpb
jle
xor
xor
adc
mov
bound
dec
push
and
in
imul
bound
add
cmp
xchg
aam
jecxz
and
xor
dec
sbb
pop
or
aaa
add
popa
insb
aad
jl
xor
push
mov
bound
mov
dec
mov
iret
mov
scas
orl
and
jbe
daa
leave
rorb
jge
scas
mov
adc
jae
mov
adcl
adc
mov
inc
jnp
mov
adc
mov
inc
mov
inc
sbb
push
mov
sbb
push
pop
loope
rolb
xchg
sub
inc
push
nop
pop
xor
divb
mov
lods
push
add
and
mov
mov
aas
pop
cmp
adc
int3
movsb
dec
xlat
pop
cmp
inc
das
fsubl
adc
cmp
fcom
add
js
sarl
movsb
adc
inc
jno
je
jle
mov
push
sbb
aad
push
mov
or
rcrl
mov
cmp
pop
les
pop
nop
arpl
fdivrs
aas
jb
fldt
push
xchg
cmc
lea
cltd
lock
mov
loop
sbbl
fstpt
add
adc
dec
dec
fldt
lahf
fildll
sti
mov
addr16
stos
push
xchg
dec
test
fs
in
es
dec
lahf
sarb
jbe
in
icebp
aas
lcall
inc
or
inc
jmp
jl
xchg
imul
std
xor
arpl
pushf
ret
lock
pop
add
xor
or
sbb
pop
fcompl
ftst
mov
mov
xchg
jno
inc
xlat
jecxz
add
es
lcall
outsb
bound
insb
push
sub
mov
cmc
xor
mov
and
int3
or
xchg
sub
popf
icebp
pop
fistpll
lods
mov
pop
sbb
imul
leave
loopne
leave
pop
mov
mov
jns
cltd
bound
jae
cmpsb
push
lods
faddp
jle
mov
pop
pop
mov
xor
jns
push
or
inc
sbb
xchg
dec
or
xlat
shl
jecxz
nop
std
or
push
inc
sarl
mov
push
inc
test
jmp
cmp
inc
or
into
mov
mov
pop
add
out
mov
push
sub
ds
sahf
rcll
push
mov
sub
mov
push
fs
daa
dec
pop
rclb
pushf
xchg
or
aas
movsl
sub
xor
popl
fists
iret
mov
sub
cwtl
lods
out
pop
int3
pop
pop
mov
cs
jecxz
call
dec
fcompl
push
cwtl
pop
fcomps
aaa
repz
sahf
adc
mov
pop
mov
jnp
push
rclb
addr16
in
loopne
aam
sbb
int
fdivr
xchg
mov
call
push
aam
xlat
stos
inc
push
mov
cwtl
add
repz
lds
jecxz
mov
scas
leave
mov
jb
scas
in
add
pop
push
pop
adc
fwait
jnp
inc
sti
xor
movsb
sbb
cs
jb
mov
mov
add
dec
inc
stos
or
mov
addb
jbe
imul
mov
shll
sbb
ljmp
iret
cmpsb
and
je
in
sar
cli
out
mov
cmp
xor
and
subb
inc
xchg
push
cld
inc
int
push
mov
mov
das
jne
cli
sbb
std
sub
insl
inc
dec
rolb
out
sti
pop
cmpsb
mov
add
addl
xor
mov
cwtl
decl
or
xchg
cli
pop
nop
xchg
addl
pusha
mov
hlt
stos
pop
push
popf
pop
xchg
out
divl
mov
jbe
call
push
jae
mov
jecxz
cmc
movsb
in
fildll
adc
jmp
mov
dec
xchg
mov
sahf
loop
arpl
mov
testb
std
and
cmc
lret
sbb
or
jb
add
test
push
mov
test
sbb
mov
clc
shlb
mov
out
sub
jmp
mov
filds
lret
js
and
and
daa
cli
imul
mov
push
icebp
cmp
fbld
sub
xchg
divl
icebp
mov
fs
xchg
imul
enter
iret
xchg
jnp
mov
jp,pt
adcb
sbb
sub
sub
sbb
jge
jb
xchg
mov
jno
shl
inc
xchg
mov
cmp
cmp
or
push
sbb
mov
test
dec
ret
notb
pusha
cmpsl
mov
out
inc
cs
cmp
inc
mov
or
mov
xchg
or
dec
pop
pop
mov
xlat
loop
lods
sub
xchg
lds
lret
loopne
in
orl
cli
fwait
mov
ljmp
daa
aaa
mov
popa
dec
or
cmp
push
and
lret
test
add
call
inc
push
je
subl
jae
ljmp
cld
sub
in
or
sub
or
xchg
and
mov
xor
adc
aam
sub
orb
xchg
xor
jg
pop
repnz
sbb
test
cmp
lds
cld
clc
faddl
adc
imul
sbb
inc
pop
out
jmp
iret
or
push
pop
arpl
xor
rcll
or
sub
jne
jno
and
into
inc
push
add
and
ljmp
inc
das
xchg
xchg
arpl
cwtl
call
in
add
and
mov
xorb
xor
lds
mov
out
inc
add
addr16
lds
mov
cmp
or
inc
mov
add
fsubl
cmp
andl
js
mov
aas
out
call
popf
int3
out
enter
les
ficompl
jmp
push
lods
shll
fldl2e
call
std
push
fsubp
test
mov
push
fs
dec
and
cmp
dec
fimuls
dec
aaa
xchg
adcl
mov
sbb
fsubp
sti
add
jge
inc
add
ret
xchg
or
test
lcall
repnz
lods
repnz
inc
les
and
pop
sub
shlb
dec
cmp
lods
xchg
jns
dec
pop
fistps
iret
sub
xchg
adc
in
mov
bound
xor
insb
xor
jle
xor
int
test
inc
adc
jge
pop
outsl
cli
xor
mov
roll
dec
jnp
in
and
sbb
pop
js
clc
lahf
mov
cmpl
aad
add
push
hlt
fwait
fwait
push
test
das
je
add
movl
jns
decl
repnz
add
clc
inc
test
xchg
mov
xchg
out
add
dec
scas
stos
mov
xchg
jg
dec
pop
clc
mov
pop
xor
mov
imul
arpl
dec
stos
inc
pop
fimuls
ja
sub
dec
movsb
rcrb
inc
mov
mov
iret
scas
push
mov
xlat
out
shrl
icebp
loopne
icebp
sub
cmc
stos
ret
xlat
fisttps
hlt
or
imul
iret
lret
arpl
stos
dec
rcl
dec
pop
aam
in
mov
sub
pop
xchg
popf
cmp
cli
je
insb
dec
loop
xchg
mov
xor
push
setge
push
divl
out
sbb
jns
repnz
and
jns
xor
repnz
dec
fildll
mov
dec
add
mov
or
je
jno
pop
dec
fdivrp
leave
lds
sub
in
jp
jecxz
or
jne
sbb
stos
jb
cli
xor
cmp
pop
test
pop
clc
subl
fistpll
xor
lcall
push
test
cmpl
popf
test
cli
sarl
sbb
and
loopne
bound
stos
cmp
xor
mov
repz
pop
outsb
and
inc
icebp
or
dec
mov
nop
fdivrs
fwait
mov
or
scas
leave
mov
cltd
out
js
fdiv
in
xchg
pop
xchg
cwtl
les
gs
xor
repz
cmc
outsb
xor
nop
stos
mov
jo
sbb
push
mov
lods
lods
pop
adc
cmp
mov
fimuls
nop
or
push
aad
dec
push
out
add
push
pushf
add
pop
aam
jl
xchg
ds
add
jle
jge
jmp
stc
mov
jnp
mov
jbe
sbb
add
mov
xor
outsb
push
mov
das
movsl
popa
xchg
mov
adc
xchg
js
sub
add
shl
xchg
inc
ljmp
mov
call
movsl
rcrl
mov
push
cs
sbb
inc
or
jae
push
jge
aaa
push
out
iret
loopne
inc
jo
inc
cwtl
inc
addr16
lods
in
mov
mov
lods
mov
mov
mov
pop
les
loopne
xchg
adc
xchg
xchg
xchg
negb
hlt
lods
inc
popa
aad
cmc
push
jb
mov
fimull
std
mov
ss
jmp
orl
jb
inc
or
imul
loope
mov
sub
pop
clc
xchg
mov
lcall
and
and
or
dec
mov
sbb
add
adc
xor
ds
mov
outsb
sbb
pushf
xchg
mov
push
xchg
sbb
xchg
inc
sti
adc
popf
ss
sub
loopne
rcr
sub
and
mov
cwtl
ds
sti
dec
aam
arpl
loope
repnz
sbb
or
insl
and
mov
iret
lods
call
or
mov
je
ss
test
push
mov
icebp
scas
cmp
sub
test
mov
lds
fdivrl
and
jne
add
adc
mov
xchg
push
sub
jno
lahf
mov
add
dec
pushf
movsl
xor
sbb
mov
pop
filds
push
idivb
cmp
lods
sbbb
xchg
pop
aad
adc
gs
fisttps
lahf
es
sub
hlt
addl
insb
shrl
push
or
adc
jns
xchg
sbb
xchg
leave
dec
shlb
mov
push
mov
leave
cs
pop
mov
push
inc
popf
and
popf
cmp
sub
movsb
mov
shll
push
inc
jbe
inc
pop
mov
jmp
mov
mov
xor
ds
inc
jo
dec
cltd
out
fwait
shll
cwtl
mov
push
fdivrs
push
pushf
xchg
mov
fsts
das
jmp
pop
xor
mov
inc
movsb
xchg
push
dec
xchg
jb
sarb
shlb
cld
pop
in
out
aas
jge
push
gs
outsb
rdmsr
sub
daa
stc
jle
pop
mov
sbb
nop
repnz
or
leave
push
popa
push
xlat
das
incb
popf
add
es
ja
movsb
jns
push
aaa
filds
adc
pop
scas
jmp
popa
div
jo
aad
xchg
bswap
sub
hlt
dec
std
jns
mov
jge
xchg
nop
loopne
jp
push
hlt
addr16
leave
xor
cltd
pop
mov
xchg
mov
test
mov
out
jg
or
cmc
add
lahf
cltd
dec
loopne
and
in
fwait
incw
and
pop
jne
push
aaa
imul
test
xadd
shrb
mov
in
adc
dec
and
sti
jp
sbb
ret
xchg
push
fidivl
and
pop
inc
jbe
scas
xchg
out
jne
imul
mov
lds
or
inc
pop
mov
xchg
int
xchg
adc
enter
lods
popf
mov
stos
sti
xor
mov
fidivrs
sbb
mov
and
dec
loope
cmp
fs
into
loop
xor
mov
daa
sbb
daa
inc
jge
fistps
jne
rorl
or
adc
pop
sbb
inc
pushl
pop
in
inc
aam
mov
push
push
roll
mov
lods
insb
jle
icebp
icebp
xor
pop
xor
int
adc
dec
mov
pop
pop
cmp
jg
mov
into
mov
dec
sarb
mov
cmp
and
push
jo
dec
push
jg
je
pop
pop
mov
enter
pop
repnz
lock
mov
mov
daa
pop
in
adc
cli
fnsave
call
cmp
popf
and
outsl
js
and
sahf
add
data16
pop
sub
cs
xchg
mov
xlat
and
cmp
mov
rcr
xchg
pop
pop
inc
loope
push
or
inc
test
pop
pop
cltd
inc
mov
inc
subl
movsb
dec
ja
ss
mov
mov
lock
push
stc
or
out
sbb
jp
repnz
popa
cmp
push
ret
addr16
or
cmp
loope
pop
jne
outsl
mov
inc
xchg
es
mov
aad
test
stos
sub
xor
mov
mov
push
push
mov
jge
xlat
pop
dec
lcall
adc
scas
inc
mov
loop
in
dec
push
sbb
test
jp
dec
push
shr
mov
imul
arpl
ret
pop
dec
pop
push
daa
dec
mov
mov
fistpll
stos
sbb
pop
jns
xorb
adc
sub
lods
insb
cmp
xlat
add
jmp
and
mov
out
enter
jge
add
and
mov
ret
out
sbb
xor
jge
movsl
mov
fstpl
lahf
jb
test
lret
lahf
inc
push
sub
push
sub
and
dec
inc
add
sbbl
js
cli
into
and
out
mov
test
shlb
sbb
push
ja
test
push
jo
addr16
adc
mov
pop
lock
pop
das
mov
or
jecxz
mov
pop
push
pop
mov
les
shrl
mov
inc
push
insb
stos
out
hlt
cvttps2pi
and
push
fldcw
adc
mov
sbb
mov
and
jle
mov
mov
pop
jnp
jle
scas
addb
mov
jp
sub
xor
sbb
stos
push
sbb
dec
arpl
lret
sub
test
push
and
sub
cmp
inc
loop
sub
push
adc
pop
sub
out
lock
xchg
loopne
cmp
jne
xor
std
stc
fisubl
cmp
jae
jl
out
iret
repz
adc
dec
es
cmc
pop
lea
push
add
xor
jne
push
es
and
push
call
add
and
adc
in
pushf
dec
mov
pop
push
add
loopne
inc
int3
leave
dec
adc
sbb
mov
sub
xchg
jo
mov
cmp
xor
cltd
faddl
and
pop
jmp
adc
fcmovnbe
icebp
cmpsl
iret
lods
dec
mov
scas
dec
stos
push
dec
and
mov
faddl
mov
add
lret
dec
fsubl
negb
cmp
or
adc
mov
in
mov
gs
mov
and
mov
in
repnz
inc
mov
aas
sti
ds
xor
pushf
cmp
mov
cmpsl
vmread
data16
cmpsl
and
push
pop
inc
call
mov
xorb
sub
sub
mov
shlb
adc
dec
adc
cmp
fs
jbe
pop
jne
ja
and
pop
mov
and
xor
insl
lahf
xor
in
mov
fisttpl
push
pop
test
cltd
es
stos
mov
sbb
jl
mov
or
mov
sbb
xor
stc
adc
push
movsl
test
pop
icebp
dec
data16
lods
dec
inc
mov
cmp
pusha
insb
cld
enter
insb
pop
lret
mov
cmpsl
xchg
fcoml
cwtl
cwtl
or
mov
inc
sub
outsl
jnp
xor
mov
push
divl
call
in
dec
stos
clc
cltd
lret
mov
xchg
stos
in
pushf
push
div
pop
xlat
sbbl
fstpl
jbe
mov
loop
out
loope
rcrl
add
fdivl
iret
fimuls
sbb
daa
fdivrl
outsb
lods
sbb
je
rcl
sahf
bound
mov
cmp
inc
shlb
cltd
xlat
inc
fstpl
pop
rolb
xor
scas
jb
cmp
bound
in
movsb
sub
jbe
lock
es
js
push
xchg
and
add
add
adc
int3
aam
lahf
out
and
outsb
loope
std
mov
pop
dec
std
in
jne
push
lods
js
mov
cmp
ficomps
arpl
and
xchg
fimull
iret
jp
jno
mov
or
iret
popa
lea
xor
loop
and
adc
jns
mov
adc
fwait
out
cs
adc
jo
sbb
divb
hlt
jl
and
xlat
inc
sbb
imul
push
push
inc
dec
test
insb
adcb
sbb
imul
int3
fs
sub
dec
mov
shrb
insl
dec
jb
mov
sbbb
sarl
popa
or
bound
pop
mov
popf
sbbb
lcall
xor
ret
sahf
ss
mov
jp
out
jle
out
lahf
gs
mov
or
sbb
fisubl
jae
xchg
mov
lret
and
sub
jle
sub
lret
lret
das
jo
mov
push
fs
and
lret
inc
jle
sahf
fdiv
and
cli
dec
in
cmp
push
lea
mov
xor
rorb
push
inc
cmp
adc
inc
inc
les
and
push
xor
mov
xchg
xchg
lock
es
and
jnp
cmp
testl
sbb
mov
add
psraw
into
sub
jne
sahf
std
xlat
mov
cwtl
push
add
lods
inc
cli
xchg
out
incb
sub
pop
mov
imul
sahf
popf
inc
cli
xor
call
ror
xchg
sbb
stos
jecxz
cs
dec
aaa
inc
divb
out
sbb
sub
mov
mov
mov
scas
adc
int3
int
jno
icebp
subb
jo
cmp
xchg
push
or
leave
jbe
orb
jle
hlt
sbb
imul
rcll
sti
dec
je
enter
in
jp
dec
xor
filds
or
mov
fcom
inc
dec
leave
icebp
mov
comiss
movsl
mov
repnz
loopne
lret
jnp
std
scas
and
sahf
test
sub
jecxz
mov
mov
stos
int
mov
or
ds
or
inc
popf
dec
push
leave
mov
in
adc
bound
xchg
inc
ja
mov
cmc
hlt
xchg
lcall
mov
into
cmpsb
jg
mov
xchg
inc
cmp
shrb
fcomip
mov
or
into
sbb
aaa
fs
jecxz
pushf
jp
add
insl
jmp
rorl
xor
mov
mov
insb
mov
or
fldcw
out
fsubrs
pop
inc
notl
mov
or
add
push
mov
popf
mov
or
movsl
fidivl
nop
pusha
and
mov
pop
fdivl
mov
stos
and
out
js
and
cmpsb
test
jns
xlat
push
sbb
push
fidivs
add
sbb
in
es
in
dec
orl
fcompl
mov
mov
jo
pop
fs
fiaddl
lahf
ds
xor
insl
outsl
test
icebp
ret
clc
add
sahf
xchg
jne
mov
sbb
repnz
dec
cmp
inc
cltd
insb
xor
xchg
mov
push
cmp
es
cli
mov
insl
cmpsb
jl
mov
xchg
jne
sbbl
lret
ret
int3
inc
enter
int
pop
repz
jns
xor
and
push
mov
lods
fs
pop
js
fidivrl
adc
movsb
fldenv
popa
push
mov
cmp
insb
mov
dec
leave
not
std
pop
lock
push
in
pop
daa
or
jbe
aaa
int3
sbb
notb
inc
iret
xor
ficoml
and
xchg
and
dec
cmpsl
scas
push
push
sarl
clc
dec
movsl
inc
sahf
cld
stos
out
push
fwait
rolb
add
cmp
mov
xor
mov
mov
into
aas
jg
dec
sub
mov
push
jbe
shlb
jg
clc
inc
cmp
dec
jg
sbb
clc
notl
pop
jmp
ljmp
xchg
and
mov
scas
adcb
shlb
stc
inc
mov
pop
jmp
insl
fdivl
aad
fmul
bound
xor
iret
xor
mov
mov
outsl
icebp
aas
or
pop
stc
mov
aam
nop
xchg
inc
add
ja
jp
xorb
inc
inc
lea
daa
add
in
sar
jge
dec
fmuls
pusha
out
pop
enter
mov
pop
pop
xchg
data16
cmp
xor
sbb
subb
pop
imul
hlt
or
fwait
loope
dec
ret
fistl
cld
mov
orb
loop
xor
or
and
out
mov
fdivr
cmp
icebp
xchg
xor
lahf
cwtl
sub
fstps
mov
inc
add
sbb
test
out
mov
xor
cli
xchg
movsl
mov
sub
ja
sub
add
jno
dec
rcll
xchg
addr16
incl
leave
pop
sbb
enter
stos
or
sbb
std
jg
incl
push
int3
leave
mov
clc
stos
inc
and
out
sbb
gs
pop
and
mov
repnz
fcmovnu
jae
fidivs
cmc
add
idivl
imul
mov
je
fwait
shll
jmp
push
sbb
sbb
fisttpll
fimuls
imul
sahf
add
push
sbb
mov
sbb
dec
jns
mov
lret
jnp
mov
xor
jae
jnp
adc
push
adc
cmp
pop
mov
add
cmc
pop
int3
imul
push
adcl
sub
fnstenv
push
nop
sbb
shl
out
mov
mov
stos
je
enter
test
in
pushl
pop
adc
ret
test
and
mov
insl
or
incl
aas
les
das
inc
out
je
mov
mov
sbb
ret
mov
sahf
sbbb
sub
bound
sub
aam
mov
mov
stos
jge
cmc
testl
add
cli
in
or
sahf
or
inc
es
aam
or
xchg
mov
je
js
xor
cwtl
pop
test
ror
mov
fwait
dec
mov
iret
stos
push
jns
into
pop
xor
leave
imul
je
mov
outsb
adc
adc
inc
push
sbb
dec
inc
pusha
pop
jmp
inc
cli
cmp
cmp
push
divl
inc
outsl
sbb
imul
fsubs
push
cmpsb
das
lret
xchg
mov
pop
inc
inc
cmc
adc
mov
xchg
mov
inc
jg
lahf
dec
fwait
les
clc
call
mov
clc
pop
addr16
stc
xchg
mov
inc
stos
sahf
sub
jg
or
out
in
les
iret
xor
repz
inc
adc
pop
xchg
sub
icebp
jg
sub
data16
pushf
ds
pusha
sbb
xorl
aad
neg
js
lret
pop
jge
xchg
sbb
sub
adcb
das
xor
dec
add
out
adc
or
mov
icebp
mov
or
cmp
pushf
test
mov
cmpb
mov
xlat
jno
or
push
mov
inc
push
push
loopne
jnp
sub
sti
xor
iret
sub
mov
mov
sub
add
inc
jmp
xchg
xor
dec
stos
sahf
cmpl
jge
lods
mov
ljmp
dec
mov
insb
mov
pop
stos
dec
cmp
mov
cmp
out
jo
cmp
bound
sub
pop
movsl
or
popa
lea
insl
popl
loopne
mov
fisttps
mov
mov
mov
dec
adc
pop
popf
insb
jno
jnp
shll
push
cmp
pop
test
xor
leave
ret
adc
sbb
les
fucom
xlat
xchg
dec
jne
xor
cmpsb
sbb
add
stos
bound
movsb
imul
lods
cmp
sbb
dec
inc
mov
mov
idivb
adcl
fildl
lcall
or
cld
and
pop
xchg
out
andb
xor
inc
popf
movsb
cmp
pop
int
xor
mov
test
das
or
xchg
push
lods
adc
inc
in
repz
xor
loop
daa
dec
or
lods
test
in
or
jmp
int
insl
imul
cltd
outsb
loopne
aas
push
dec
enter
push
adc
sbb
and
fsubrp
sbb
ss
cs
fstl
and
or
fcom
add
loope
loope
dec
add
std
rorb
adc
push
rcr
outsl
sbb
rcl
cwtl
imul
push
sahf
stos
and
call
ja
and
pop
sub
aas
mov
jb
xchg
movsb
aam
mov
pop
push
fs
imul
inc
inc
pop
test
into
push
aam
jb
xchg
cs
sub
pusha
enter
test
and
sub
in
xor
adc
push
mov
pop
mov
fldt
sbb
xchg
dec
xor
mov
mov
xchg
dec
fnstsw
adcb
or
pop
adc
jge
pop
cld
insl
outsb
mov
inc
or
xor
mov
jne
sahf
push
shll
xor
mov
or
scas
cwtl
movq
inc
sahf
stos
mov
xchg
push
adc
notl
aam
and
xor
sub
jle
lret
cmpsl
out
jnp
loopne
cmp
pop
mov
mov
sti
mov
aaa
call
lods
mov
xor
rorl
cmp
and
dec
pop
inc
pcmpeqb
stos
addl
into
push
or
enter
xlat
or
movsl
adc
lret
cltd
dec
add
loopne
das
mov
lds
and
cmp
insl
sti
pop
icebp
dec
mov
jb
aaa
in
pop
inc
je
cld
or
stc
push
lret
sub
cli
rolb
jmp
shll
loope
mov
lods
mov
and
daa
jge
pop
sbb
mov
xor
cwtl
mov
ror
in
repz
mov
mov
loop
aaa
add
xchg
push
sub
jb
fsubrs
jnp
inc
les
popl
dec
lahf
sub
incl
outsb
add
push
push
pop
test
sbb
mov
test
mov
inc
mov
mov
adc
loope
xor
add
fstpt
leave
sub
and
push
add
jge
ret
js
das
push
xchg
mov
pop
xor
andl
cmp
sbb
mov
fwait
mov
leave
inc
push
imul
jae
push
xchg
testl
inc
clc
adc
into
xchg
test
les
mov
add
cmp
rcrb
lret
lods
lcall
mov
mov
push
mov
ljmp
jb
or
dec
popa
lcall
decb
insl
sti
nop
xchg
push
subb
dec
mov
jbe
jb
fdivrp
outsb
push
ret
adc
rclb
shll
fsubrs
loopne
lret
imul
mov
push
xor
sahf
cmpsb
add
in
dec
mov
lock
cmp
out
push
pusha
adc
popf
and
ds
in
shll
loopne
ret
jne
mov
mov
xor
sbb
loopne
dec
stos
jae
inc
js
sbb
add
and
dec
pusha
fisttps
stos
mov
addl
lea
cld
add
dec
movsb
cmp
mov
jnp
jb
lds
mov
xchg
icebp
in
iret
subb
hlt
push
aam
in
pop
xchg
add
jno
test
sti
int
mov
sbb
aas
sbb
xchg
out
cmpsl
mov
shl
sti
movsb
adc
push
mov
icebp
sub
roll
and
rcrb
sbb
and
dec
popa
pop
jo
testb
int
mov
leave
out
aas
divl
loopne
jge
mov
or
jp
adc
inc
aaa
xchg
vunpckhps
sub
scas
imull
adc
loopne
out
shll
loopne
push
jmp
movsl
iret
xor
iret
inc
push
push
popf
aad
xor
xchg
add
pusha
leave
jp
loop
test
adc
push
jmp
push
sub
out
sbb
inc
js
test
xchg
mov
or
dec
fldt
fldl
mov
xchg
xchg
xchg
inc
push
cld
ret
stc
das
mov
pop
cmpl
adc
insl
shrb
leave
popa
inc
and
shll
arpl
stos
jb
jle
aad
xor
cwtl
add
popa
loopne
pushf
jae
in
pop
jmp
rolb
mov
pop
xor
xchg
outsl
imul
lock
xor
imul
xlat
jle
imul
pop
xor
adc
cmp
mov
cmpsl
movaps
mov
leave
mov
xor
xor
cmpsb
dec
mov
mov
mov
dec
sub
sbb
ja
ret
add
cmp
arpl
das
mov
mov
xchg
je
lret
mov
sbb
pop
push
mov
mov
out
xor
inc
int3
add
mov
mov
mov
sub
out
rcrl
xchg
ror
pushl
xor
add
push
call
out
movsb
sbb
cmpsl
push
out
fimuls
push
sub
ficoms
xlat
insb
xchg
stos
cltd
add
sti
inc
sub
fs
cmp
sbb
inc
leave
jnp
fdivs
mov
outsb
lcall
add
mov
adc
cmp
adc
jbe
mov
aad
fstpt
or
fildll
clc
adcb
xor
in
xchg
cmp
jae
aad
mov
pop
jmp
cmp
fsts
cli
sbb
sub
inc
int3
aad
xlat
inc
jmp
lcall
cmp
lret
int
insb
adc
mov
lcall
mull
sarb
in
xchg
push
and
lds
mov
mov
add
mov
ret
pusha
rep
or
or
jp
push
cmp
test
out
test
nop
int
pop
add
lcall
push
or
xchg
xchg
out
loopne
rcr
testl
addr16
xchg
xlat
mov
xchg
adc
ret
jle
dec
jl
xor
xor
adc
cwtl
ss
push
sub
pop
and
leave
mov
scas
sbb
inc
adc
cmpsb
mov
repz
mov
sub
adc
pusha
xchg
or
ss
mov
es
cmp
jbe
lds
ja
call
rcll
packsswb
enter
add
push
ficomps
out
icebp
in
ss
pop
dec
pop
sbb
movsl
shll
and
sub
loopne
xor
dec
jb
push
je
xchg
mov
cmp
sbb
mov
cmp
ds
jnp
sbb
roll
adc
fbld
cltd
cmp
mov
sbb
das
jg
loopne
or
shll
jmp
mov
push
xchg
dec
xchg
mov
dec
xor
aad
push
mov
test
mov
ds
xor
aad
pop
mov
and
cmpsb
xchg
jl
mov
inc
sbb
scas
adc
das
lds
mov
aaa
inc
arpl
repnz
ljmp
dec
loop
out
sti
aaa
mov
jg
or
popf
pop
mov
sub
sub
ss
cmp
and
xor
push
in
subl
sahf
in
popl
lret
cmp
clc
movsb
fists
sbb
js
je
call
loope
pop
inc
mov
cli
imul
adc
lock
lret
hlt
dec
pop
and
popa
jne
add
xchg
scas
push
mov
insb
jle
dec
aad
sbb
std
test
imul
push
ja
in
data16
rol
lcall
adc
leave
jns
cwtl
nop
clc
inc
xchg
repz
push
pushf
mov
sub
sub
add
mov
nop
adc
nop
add
cmpsb
mov
and
sub
xor
xor
mov
or
mov
add
in
daa
add
push
fidivs
sbb
loope
ficoml
and
pop
inc
sub
insb
fwait
scas
push
mov
int
bound
pushf
add
adc
mov
fxch
dec
adc
pop
aad
test
jno
or
jno
or
test
rorb
sub
subl
mov
sub
push
fldt
jmp
and
loop
pop
jge
cmp
cwtl
fwait
div
jp
and
mov
sbb
xchg
jle
cltd
inc
ja
into
movsb
lret
mov
mov
sub
mov
pop
daa
dec
dec
cld
lea
lock
sbb
adc
sub
mov
insb
icebp
lock
sbb
pop
pop
push
and
mov
xchg
push
rclb
cmp
or
sub
daa
xchg
mov
andb
inc
inc
xor
xor
inc
int
lcall
mov
lock
out
pop
or
cmc
out
sub
pop
jo
jge
andl
add
imul
sub
add
sbb
cmp
push
pop
in
loope
call
add
jecxz
clc
add
popf
cwtl
sbb
cmp
ficomps
out
pop
pop
inc
scas
js
push
or
push
stos
pop
mov
mov
idiv
push
aaa
loope
fildl
mov
push
push
sbb
jl
jl
lds
shll
data16
iret
sarb
xor
xor
cld
mov
popf
add
outsl
adc
adc
mov
sub
cltd
jnp
push
xor
sub
out
mov
add
mov
add
mov
ljmp
lods
xor
jae
lahf
gs
shlb
stos
cmpsl
adc
decb
cmpsl
lds
jnp
add
inc
and
mov
jl
sbb
xor
push
push
add
pushf
pop
jp
dec
adc
cmp
je
std
gs
cmpsl
jge
out
inc
aam
sbb
push
ds
in
or
dec
mov
jno
inc
mov
mov
decl
and
xor
pop
notl
mov
inc
fldl2e
mov
jns
enter
int
add
dec
lret
in
sbb
xchg
dec
xchg
mov
adc
xchg
xor
aam
repnz
pop
ret
jbe
ja
inc
dec
popa
ds
cmp
xor
adc
cltd
lahf
mov
dec
test
rcrl
lock
fmul
aaa
mov
stos
and
lds
mov
fnstsw
cmp
inc
sub
mov
inc
mov
rcll
xchg
mov
push
ret
xchg
mov
lcall
pop
cmp
lea
out
jnp
lret
and
xor
test
insl
push
insl
cmp
xchg
imul
testl
enter
ret
mov
stos
xor
out
scas
adc
lods
mov
testb
int3
cmpsl
loope
inc
popf
xorl
mov
mov
xchg
stc
gs
dec
jmp
inc
jb
cmp
mov
push
jmp
shl
add
sbb
cmp
xchg
sub
negl
push
cs
sbb
fisttps
ds
xchg
fs
mov
incb
mov
jne
mov
imull
rorb
mov
mov
popa
push
dec
pop
outsl
mov
pop
xor
sbb
xchg
shrb
imul
test
daa
aaa
dec
in
mov
mov
pop
sub
inc
push
sub
shlb
inc
add
scas
mov
xor
and
fldl
fmul
mov
mov
cmpsb
clc
mov
sub
in
stc
addr16
inc
sbb
test
inc
or
adcl
sub
scas
adc
test
sahf
ljmp
jne
sahf
test
mov
out
dec
fildll
iret
adc
xchg
lea
push
pop
sbb
sbb
mov
cmp
xchg
stos
xchg
lock
adc
aam
and
lods
jmp
mov
jae
cmp
push
ret
imul
fsubl
push
adc
in
cwtl
mov
push
lock
int3
sbbl
push
in
cli
dec
mov
lock
sbb
gs
push
add
inc
mov
jecxz
dec
aaa
in
sarb
pop
dec
mov
push
fidivl
call
sbb
inc
or
push
pop
rorb
les
in
or
imul
shrb
cmc
movsl
adc
test
ja
mov
push
cmp
cmp
sbb
push
repnz
aas
xchg
jns
inc
push
loop
and
and
iret
sbb
repz
je
push
push
call
pop
sahf
inc
xchg
xorl
cs
nop
or
sbb
dec
in
add
cs
call
movsl
fidivs
pop
jmp
pcmpgtw
dec
or
jbe
out
adc
mov
or
inc
mov
mov
loopne
and
std
ljmp
ja
mov
notb
inc
popa
sbb
aam
jnp
inc
cmpsl
push
jnp
in
mov
negb
lock
adc
jp
ja
ljmp
xor
lds
mov
mov
les
cmp
push
push
arpl
adc
sbb
pop
lods
enter
loope
push
xchg
test
mov
mov
and
repnz
fnstsw
aas
push
pop
adc
xor
or
stos
dec
stos
imul
xchg
cmp
pop
jbe
test
pop
jnp
test
loope
hlt
ret
mov
and
push
js
nop
in
std
and
push
outsb
cmp
push
pusha
fs
push
xor
mov
push
je
ret
ss
das
ljmp
shrb
jae
icebp
pop
outsb
insl
jns
movsl
leave
ret
push
jne
xchg
xchg
lcall
dec
adc
inc
in
xchg
js
add
fisttps
sahf
inc
mov
loopne
or
sub
stos
or
popa
out
and
test
pusha
xor
mov
add
pop
imul
pop
or
mov
lea
xor
sbb
into
sbb
test
cmp
dec
push
js
aad
jmp
scas
mov
mov
sbb
aaa
bound
icebp
enter
ss
pushf
ds
cwtl
mov
fs
subl
imul
inc
cmp
ljmp
cld
or
pusha
sub
mov
mov
xor
lock
fstps
or
pop
mov
mov
cmpsb
sub
mov
sbb
arpl
push
lret
mov
mov
mov
ret
xor
push
faddl
das
pop
sti
push
pop
adc
cmp
call
adc
sub
add
pop
call
push
dec
rcr
jb
outsl
push
mov
cwtl
xchg
add
mov
call
cmp
out
cwtl
or
leave
push
in
dec
stos
ljmp
cmp
int
lahf
mov
gs
ret
mov
mov
aad
imulb
jl
cmp
push
xor
push
test
loope
xchg
int
lock
or
aad
mov
nop
ja
mov
inc
jl
dec
enter
mov
stos
add
jmp
adc
push
sub
cld
cmp
mov
iret
xchg
fcoml
sub
ss
sub
add
testl
inc
push
les
mov
xchg
movsl
shll
xchg
add
cmp
in
dec
mov
mov
ds
mov
push
imul
sbb
pop
or
and
push
jp
data16
outsl
imulb
nop
pushf
cwtl
sub
jecxz
pop
add
arpl
mov
push
xor
cmc
leave
xchg
fwait
insl
add
scas
bound
addb
outsb
inc
out
stc
test
jns
sbb
push
test
movsl
or
push
add
jbe
pop
xor
aam
lock
sar
pop
push
jns
mov
and
sub
cwtl
div
cmp
inc
in
and
adc
int
testl
aaa
mov
shrl
push
adc
aaa
lret
dec
mov
jne
out
test
cmp
mov
dec
add
and
in
ret
addb
xor
or
xchg
call
shll
mov
mov
pop
or
jp
inc
mov
pop
idivl
pop
stc
and
jmp
and
or
inc
jle
insl
sbb
test
inc
lcall
daa
cmp
push
enter
divl
mov
sti
mov
icebp
hlt
and
cmp
or
xor
clc
pushf
lcall
shrl
sub
fstl
in
inc
mov
cmp
mov
or
fcmove
int
ret
sbb
stc
lahf
movsl
xor
xchg
fisubrl
ja
mov
mov
test
cmp
pop
stos
jle
adc
or
std
std
dec
lock
mov
and
mov
shlb
inc
jecxz
daa
in
sbb
cmp
inc
out
and
fcos
mov
shl
jp
imul
daa
cmp
jmp
mov
mov
je
test
aaa
jle
mov
adc
mov
mov
jp
mov
popf
mov
sub
mov
dec
in
add
mov
and
or
cmp
inc
add
cltd
sub
clc
sub
push
sub
inc
fistl
pop
stos
pushl
inc
imul
shrb
sahf
ret
and
push
fistpll
idivb
mov
or
imul
and
in
inc
ss
data16
and
add
fucomp
insl
loope
inc
jmp
dec
and
scas
stos
pop
inc
ja
and
add
inc
int
xor
hlt
cmp
sub
pop
cwtl
ljmp
mov
and
push
and
add
push
cmc
lahf
jmp
ficoml
mov
dec
daa
xor
mov
mov
cmp
push
in
xor
adcb
push
popa
jnp
ror
xlat
aad
push
adc
inc
inc
imul
mov
cmc
xlat
push
loope
cld
mov
faddp
adc
repnz
xchg
in
adc
enter
jl
xchg
je
jle
fsub
cmp
and
dec
rcll
push
xchg
mov
out
and
cmpsl
mov
mov
dec
mov
mov
jmp
jno
test
lea
sub
xchg
cmp
mov
xchg
xor
mov
dec
flds
ret
dec
mov
and
aad
inc
jl
test
pop
cmpsl
ljmp
sub
mov
add
inc
repz
inc
into
out
pmuludq
xchg
cmp
adc
les
cld
frstor
inc
push
add
fcomps
and
imul
outsb
sbb
push
adc
int
jo
mov
out
mov
mov
sahf
cmp
pop
mov
jg
or
fwait
inc
dec
mov
add
sahf
inc
sbb
repz
cmp
leave
mov
push
jg
sub
pop
cmp
scas
dec
adc
add
dec
or
push
test
jno
jp
push
jae
es
sbb
xchg
fnstsw
xor
cmp
decl
stos
sahf
xchg
mov
push
popf
pandn
jg
sbb
adc
jbe
aam
js
xchg
or
pop
call
das
jno
and
cs
cmp
rorl
test
push
pushf
add
and
pushl
std
sub
mov
add
dec
inc
fistps
push
mov
cltd
mov
xor
lods
cmp
imul
and
jns
dec
call
and
push
mov
ret
call
cmc
out
pop
rorb
scas
imul
rcll
mov
lods
insl
lock
lcall
mov
xchg
roll
cli
sub
aaa
mov
push
jmp
incb
bound
insb
adc
jne
ficoms
xor
add
fstpl
and
sbb
in
xor
int3
lds
in
movsw
inc
pushf
fcompl
mov
jb
adc
cmc
pop
mov
sub
mov
push
loop
mov
in
sar
push
into
jno
mov
addr16
scas
mov
xchg
and
mov
das
gs
push
pop
cmp
adc
pop
data16
adc
xchg
push
aas
sub
inc
pop
add
inc
and
sbb
mov
push
or
mov
inc
adc
jns
mov
popa
jmp
and
xchg
iret
cmp
xchg
test
cmc
rorb
cmp
and
push
out
jb
cmp
jo
jecxz
out
in
cmc
or
cmp
xchg
push
les
jg
add
xor
mov
cmp
cmp
dec
adc
or
xor
sbb
popa
pop
loope
stc
test
adc
push
mov
iret
pop
adc
push
cmp
mov
ret
mov
les
aam
add
rcrl
cmp
lahf
clc
fcomi
in
mov
in
pop
jecxz
adc
outsl
ja
sbb
fwait
cli
loop
jle
rcll
xchg
push
mov
fdivrl
imul
cmp
sbb
jns
std
sarl
jbe
aad
repnz
out
repz
cli
pcmpeqd
imul
pop
mov
out
inc
adc
pop
jbe
mov
test
ja
push
or
mov
adc
mov
sbb
ljmp
cmp
imul
rcl
mov
dec
ret
imul
js
cli
lea
sub
data16
xlat
ljmp
pop
add
add
cmp
xchg
mov
inc
xchg
pop
sbb
push
cwtl
std
mov
or
shlb
and
jb
mov
iret
xchg
xor
xor
adc
pop
push
mov
pop
aaa
add
ja
xchg
jnp
jbe
cs
xor
idivb
dec
sub
mov
mov
lods
outsb
sub
cmp
mov
or
les
rclb
pop
filds
ds
loopne
push
cmpsb
mov
test
adc
out
das
jle
sub
test
xlat
xchg
xor
fiaddl
fs
cs
cmp
mov
out
add
pop
es
sbb
inc
or
loop
mov
cmpsl
push
adc
dec
pop
jo
pop
test
xorl
fnsave
arpl
cmp
mov
cli
mov
dec
sbb
iret
jg
in
in
push
pop
sub
xor
imul
push
int3
daa
stos
pop
dec
jl
adc
mov
jge
into
insb
add
xchg
js
les
dec
push
bts
dec
mov
fs
push
mov
sbb
movsl
lret
js
rcrl
mov
movsb
cmpsl
cs
fdivl
sub
je
cmp
mov
xlat
das
imul
jp
loop
sbb
std
fbstp
insb
test
adcl
pop
fwait
xchg
mov
shll
out
int3
lods
or
mov
cmp
sub
pop
std
jmp
sub
pcmpgtw
push
xchg
aad
in
lods
ja
adc
sbb
shlb
cmp
jmp
cmp
in
test
mov
pop
xchg
shll
inc
mov
sub
and
inc
dec
lahf
notl
jno
dec
xchg
inc
pop
add
pop
xchg
cmpsb
js
cmp
into
bound
aaa
jp
inc
push
adc
dec
mov
fs
push
inc
inc
push
push
mov
out
in
mov
and
sbb
or
adc
xchg
int3
mov
icebp
jne
xor
mov
add
es
cmpsb
fs
popl
ds
fldt
cmp
fisubrl
gs
negb
or
je
cmp
aas
mov
xchg
rcl
insl
imul
es
mov
mov
push
add
imul
mov
xchg
inc
or
jne
fisttpl
push
jno
std
sub
sbb
mov
bound
shr
mov
mov
mov
imul
arpl
test
mov
xchg
movsl
int
pop
adc
cmp
sti
test
ljmp
and
mov
cli
xor
scas
mov
dec
ljmp
cmpsb
adc
cltd
mov
inc
and
add
aaa
sbb
fstps
dec
push
mov
sbb
jo
push
and
out
xor
sahf
insb
push
lahf
lahf
test
lds
cmc
jbe
sarb
movsl
xchg
aaa
add
sti
cld
jns
inc
or
pop
ja
mov
fdivl
fdivrs
cs
lock
in
fstps
daa
xchg
xchg
test
pop
dec
sbb
pinsrw
mov
jmp
test
sbb
shrl
mov
dec
inc
sbb
push
xlat
out
and
orb
rcrb
mov
jg
inc
scas
mov
loop
sbb
popa
std
in
out
jp
xor
das
xorl
dec
and
push
pop
lahf
popl
imul
jp
shr
into
or
add
popf
addr16
jae
xlat
es
loope
dec
dec
daa
jns
xorl
testl
cmp
inc
jo
ds
cli
fs
mov
cli
jg
xlat
popf
mov
insl
inc
fdivrl
sub
sbb
nop
and
lds
dec
aam
mov
xor
mov
fistpll
andl
cmpsb
cmp
int
imul
xchg
outsb
xlat
jns
xchg
pop
lea
xchg
and
lret
leave
pop
jmp
xor
mov
inc
in
icebp
outsb
cwtl
out
mov
je
sbb
mov
pushf
add
repz
cmp
push
pop
cmp
cmp
js
je
jns
xor
push
add
mov
pushf
inc
or
jbe
push
aam
mov
push
pusha
push
dec
lods
xchg
cltd
push
fiaddl
insb
gs
xor
inc
inc
cwtl
ljmp
mov
lds
aam
ds
and
sub
jl
xchg
iret
lcall
pushf
jmp
and
popf
test
fs
dec
push
jne
lcall
and
in
mov
in
ljmp
mov
sub
out
or
pop
and
mov
pop
and
sbb
lea
xor
outsl
hlt
jmp
sbb
dec
rcl
ljmp
in
pop
pop
das
lret
shlb
lods
dec
stc
xchg
xor
lahf
lds
mov
and
xchg
inc
dec
test
mov
es
inc
fadds
mov
xor
insb
inc
and
add
cwtl
xchg
nop
pop
insl
dec
add
mov
rcr
dec
out
pop
pop
cld
adc
pusha
rcll
nop
ljmp
mov
push
in
push
gs
into
ja
addl
xlat
in
les
jle
sub
aam
push
std
mov
mov
data16
or
xor
adc
ret
insb
out
dec
adc
adc
xchg
sbb
mov
jge
lea
jle
shlb
fcoml
out
xchg
adc
pop
ret
adc
cmp
sub
rorl
push
push
add
mov
pop
inc
push
and
pop
mov
adc
inc
jno
fwait
mov
dec
dec
movsl
sbb
inc
fistps
push
jae
push
mov
cmp
inc
xchg
mov
pusha
lret
ds
in
dec
jae
out
inc
cmovg
or
dec
clc
nop
mov
sbb
push
movsl
add
mov
and
call
call
imul
pusha
jne
cmp
xor
push
fmull
jo
add
lcall
in
fsubp
jno
fs
pop
mov
and
mov
ljmp
imul
and
lods
lock
adc
adc
int
fbstp
stos
arpl
mov
test
xlat
popf
lds
shll
into
mov
jle
shll
fwait
add
dec
mov
xchg
sahf
enter
loopne
jno,pn
sub
jle
repz
pop
sti
xlat
ja
ja
call
cld
jno
movsl
std
popf
jae
jecxz
mov
push
xchg
adc
out
mov
fsubrl
push
mov
cmp
or
fwait
ja
jecxz
or
jmp
pop
xor
in
mov
inc
cmp
and
xchg
cld
dec
pop
imul
xchg
and
pop
inc
inc
ljmp
add
stos
out
mov
pcmpeqb
shrb
sbb
lret
in
sub
fs
sbb
or
adc
cld
xor
sub
mov
cmp
push
jmp
cmpsl
sub
ljmp
push
pusha
mov
dec
rcrb
and
jno
movsl
adc
pop
mov
jmp
enter
jae
add
out
je
jl
rclb
push
and
jno
sbb
or
fmuls
dec
mov
xchg
movsl
in
js
add
ljmp
mov
xor
or
xchg
std
fcomip
mov
cmpsl
and
cltd
ret
pushw
inc
mov
cld
adc
fisubl
push
shr
ret
ss
cmp
jl
mov
jmp
ja
push
cmp
int
xor
mov
adc
insl
loop
lods
dec
sbb
push
inc
mov
into
arpl
outsb
xchg
inc
mov
sbb
leave
pop
fwait
sub
lahf
loope
mov
rolb
jmp
sbb
adc
std
hlt
lds
pop
inc
adc
cmpsl
mov
paddusb
aas
sahf
gs
xor
mov
aaa
and
lcall
cmp
jne
jp
std
lods
jo
cmc
xchg
dec
pushf
je
sub
xchg
pop
inc
shlb
adc
std
inc
js
jle
les
cwtl
jle
ficomps
mov
hlt
and
cmp
ds
mov
add
popf
mov
int3
sbb
sub
mov
addr16
inc
rolb
adc
jb
repnz
test
cmp
cmp
xchg
ja
push
shl
jmp
mov
scas
imul
imul
push
int
sbb
add
add
sahf
jae
or
out
adc
aam
jae
test
inc
call
push
fimull
xchg
movsl
mov
dec
push
xor
xor
pop
adc
push
aas
push
in
ss
jnp
sbb
xchg
fwait
cmp
jecxz
sbb
mov
fs
cld
xchg
push
xchg
loopne
subb
pop
mov
lea
test
pop
adc
movsl
adc
jns
push
mov
mov
fs
adc
loopne
cmp
sbbb
push
add
adc
sub
push
rcrl
mov
ret
pop
inc
mov
dec
and
data16
cwtl
mov
cmpl
loope
mov
adc
xchg
loope,pn
mov
mov
das
inc
jg
add
cmp
aas
add
movsb
insl
add
enter
push
and
dec
inc
outsb
cmpsb
fldenv
das
push
lcall
jge
pop
and
scas
jae
enter
pusha
jecxz
mov
xor
das
fwait
movsb
pop
jl
in
sbb
test
mov
adc
pop
jle
enter
cmc
or
push
int3
sti
hlt
mov
pop
xchg
lock
bnd
cmpsl
int3
sbb
or
push
sbb
pop
push
jmp
xor
imul
repnz
roll
mov
aas
add
inc
test
fs
mov
fisttps
sbb
push
fldl
test
out
jp
and
mov
pop
inc
test
clc
mov
int
pop
push
test
cld
ja
cmpsl
ret
int
mov
adc
lea
cld
dec
rcrl
mov
cmp
sahf
inc
lret
out
xor
imul
xor
push
jmp
pop
fstpl
cwtl
lods
ror
xor
xchg
and
daa
out
mov
inc
mov
cmc
out
in
dec
and
lcall
jnp
out
fstpt
dec
adc
dec
das
push
fnstsw
or
hlt
stc
cmc
hlt
xor
outsb
andb
sbb
jge
dec
gs
dec
movsl
xchg
jl
pop
shlb
fwait
dec
dec
jle
fcmovbe
dec
pop
mov
adcb
xlat
int3
pop
cmp
fcompl
xlat
cmp
pushl
jo
mov
lds
test
push
xor
add
bound
out
es
and
inc
sub
lods
jnp
mov
dec
mov
arpl
adc
push
sub
or
cmp
cs
stc
imul
mov
sbb
cmp
jecxz
inc
pushf
cld
je
mov
dec
arpl
dec
repnz
lock
mov
popa
jg
mov
jecxz
lahf
fsubrp
stos
mov
lods
push
sub
mov
stos
rep
jge
fdivrs
call
sbb
add
out
pop
std
sub
mov
jmp
outsl
stos
out
insl
sbb
out
or
push
cmp
mov
pusha
lds
cwtl
fdivl
xchg
cmp
and
push
pusha
pop
mov
rcr
fsubl
test
int3
dec
sub
and
mov
vpunpckhdq
repnz
aaa
sbb
lods
rcrl
mov
fstps
test
mov
push
add
daa
add
jmp
inc
popa
jp
les
cli
mov
fldenv
pop
push
fbstp
in
jecxz
lds
popa
pop
cmpsl
aas
pop
bound
ljmp
pop
cli
pusha
dec
jno
std
loopne
add
idiv
lret
nop
adcl
addr16
fcompl
movsb
jge
repnz
into
add
das
sub
mov
jns
out
pop
or
push
and
or
lret
jb
mov
fsubrp
dec
jmp
imul
std
addr16
adc
js
push
mov
cmpsl
adc
test
xchg
mov
fmull
mov
xor
jne
add
aaa
ss
popf
sbb
sar
mov
cmp
sbb
daa
cmp
popa
imul
sbb
out
pop
ljmp
push
jg
outsl
push
mov
test
fldt
popf
mov
cmpsb
jge
pusha
mov
mov
xor
ljmp
popa
pop
dec
dec
out
je
stos
pop
subl
jae
pop
cmc
rclb
movsl
mov
sbb
cmpsl
add
add
imul
sub
call
ss
negb
rep
mov
inc
bound
sub
pusha
adc
aad
add
xchg
into
pop
lods
rorb
ja
stos
xchg
push
mov
inc
shll
xor
addr16
fbstp
popa
jbe
xchg
fisttps
pop
cmp
xlat
imul
jge
pop
and
iret
jge
sub
sub
pop
cmp
push
and
xchg
mov
mov
adc
cmp
pop
jae
stc
push
mov
fnsave
jg
les
pop
enter
sbbl
gs
aad
pop
into
adc
jae
mov
cs
repnz
int
imul
addr16
ja
mov
adcl
or
sbb
sub
rorl
xor
or
inc
je
push
xchg
cmp
test
dec
fmul
sub
jg
mov
ljmp
xor
sub
notl
out
loopne,pn
xor
scas
loopne
outsb
ficoml
nop
pop
and
jno
cmp
inc
fildll
imul
and
add
mulb
jecxz
imul
inc
inc
fimull
adc
loop
inc
pop
sbb
notb
mov
adc
add
and
inc
icebp
jbe
out
mov
sub
fsubl
mov
stc
sahf
cmp
addl
or
insb
fwait
cmp
xchg
jb
faddl
movsb
lret
int3
xorl
xchg
push
add
xor
push
iret
ds
std
sub
cmp
pop
insb
imul
cmpsb
jns
xchg
gs
mov
push
cli
jno
lods
dec
out
fdivrl
add
and
jae
dec
and
fisubl
ja
push
nop
into
popa
pop
push
clc
sarb
or
pop
jns
ja
lahf
and
adc
je
mov
adc
sar
shl
xchg
push
push
je
insl
xchg
test
xor
add
xchg
adc
and
push
out
mov
rcrl
inc
ficompl
ret
jl
pop
adc
fstpt
ja
inc
mov
jnp
test
cld
adc
out
cmp
out
and
je
dec
into
lds
stos
test
ffreep
mov
and
mov
xchg
iret
xor
out
jle
mov
sub
outsb
repnz
mov
in
mov
and
xchg
inc
imulb
int3
add
push
or
ffree
pop
dec
fnstcw
push
clc
popa
mov
jmp
pop
psubb
push
test
and
mov
xor
xor
daa
mov
sahf
mov
jnp
lds
inc
add
aaa
xchg
jb
xchg
xor
mov
mov
sti
daa
inc
ja
adc
pop
rorb
hlt
mov
inc
add
aas
jno
add
in
out
pop
pop
and
push
data16
clc
or
adc
push
inc
mov
dec
xlat
hlt
mov
xor
das
cs
leave
shll
xor
aad
mov
push
push
stc
pop
lds
aaa
mov
jl
data16
iret
dec
mov
lds
adc
mov
sub
cld
es
mov
add
aas
decl
mov
rorb
pusha
mov
xchg
test
addr16
pop
test
repnz
js
push
stos
or
hlt
pushf
test
sbb
pop
or
cmp
or
mov
out
test
jle
pop
arpl
pushl
mov
es
sar
push
cmp
clts
test
fidivrl
push
pop
arpl
xchg
jne
cs
aam
ljmp
cmpsb
inc
gs
lcall
jo
hlt
xchg
mov
sub
pop
imul
pop
out
test
and
stc
sub
pop
mov
ret
mov
xchg
jbe
sysexit
mov
in
mov
sub
cltd
push
jbe
loope
mov
jno
cltd
push
or
out
out
jnp
xchg
mov
inc
iret
out
and
xlat
mov
stc
mov
hlt
test
scas
xor
adc
sbb
fs
insl
outsb
mov
out
addr16
mov
in
cli
inc
mov
push
in
pop
dec
mov
icebp
out
icebp
and
arpl
push
clc
frstor
out
jae
scas
inc
cmc
stos
dec
nop
pop
inc
imul
push
push
cmp
sti
shl
and
adcb
mov
add
cs
scas
adc
aaa
aam
sbb
add
ret
push
fidivrl
sbb
shlb
add
clc
loope
sbb
mov
cmp
push
pop
testl
xor
fwait
xchg
cmp
or
fcomp
aas
push
hlt
mov
mov
leave
rcrl
and
andl
dec
cmpsl
sbb
mov
push
call
clc
mov
pop
mov
lock
mov
mov
popf
sub
mov
clc
jg
popa
sbb
stc
add
or
aad
icebp
mov
xchg
je
bound
mov
xchg
inc
nop
cmp
xor
jmp
mov
and
and
push
sbb
push
xchg
mov
jge
jle
ljmp
ja
in
mov
add
ret
sbb
lcall
ljmp
fcomp
pop
mov
insl
mov
cmp
outsl
inc
mov
cmp
cmpsb
lods
cmp
hlt
mov
repz
inc
lods
aam
push
inc
in
test
imul
idivb
mov
cs
or
cmp
mov
cmpsb
mov
in
aam
dec
sbb
adc
js
pop
push
jbe
add
mov
jae
cmpsb
adc
fcmovb
sub
adc
jb
adc
cmc
xchg
shrb
pop
insb
out
cli
push
mov
xchg
xchg
adc
ficompl
mov
pop
insl
sarl
jo
xchg
in
mov
cmp
mov
fmuls
lcall
adc
fcoms
nop
and
lahf
loopne
adc
out
lods
mov
push
xor
xor
lret
pop
dec
fs
dec
addl
sbb
outsb
subb
daa
dec
sahf
jle
dec
dec
sub
ds
popf
daa
or
cmpsl
inc
in
cltd
or
push
repnz
adc
minps
hlt
jb
inc
xlat
fwait
adc
mov
mov
pushf
insb
mov
cs
jle
add
push
inc
dec
loopne
and
insb
add
std
inc
lods
sub
inc
subl
sbb
fnop
test
add
shlb
imul
scas
xor
cli
lahf
or
jno
repz
mov
je
mov
cltd
loopne
push
shll
sbb
pop
sahf
xor
pushf
mov
push
and
sub
movsb
xchg
popf
addr16
mov
pushf
or
ss
movsb
push
mov
fisubrs
xor
pop
mov
lret
mul
nop
lea
xchg
ss
sbb
rolb
or
jg
xchg
cli
jecxz
mov
stos
repz
subb
les
es
lea
lahf
lahf
mov
fildl
and
das
ljmp
jmp
inc
pop
pop
negb
sub
push
cmpsl
pop
cmovno
mov
adc
sub
popa
dec
xor
rcrl
dec
mov
jmp
mov
inc
dec
cmp
jae
jnp
sbb
adc
jle,pn
dec
cs
mov
lods
das
lret
adc
sub
cmp
xchg
repnz
pop
mov
into
inc
sub
int
pop
pop
popa
scas
mov
std
cmp
pop
adc
and
mov
inc
mov
mov
lods
insl
pop
inc
je
scas
mov
addr16
jne
aam
jl
add
mov
mov
add
cmpsl
mov
sbb
xchg
mov
add
out
sub
and
xor
sub
scas
arpl
pusha
jmp
xor
dec
es
repz
mov
cmc
mov
pop
push
push
xchg
cmp
divl
in
loopne
xchg
lds
rcrl
adcb
and
mov
in
dec
mov
lahf
iret
in
sub
int3
dec
movsb
les
int3
bnd
push
jns
inc
test
insb
cmp
es
or
iret
pusha
mov
ret
add
inc
xchg
pop
xorl
xor
dec
fs
test
bound
sbb
push
push
lcall
jnp
nop
cmp
lods
dec
out
test
pop
popf
fmull
jg
dec
xchg
inc
sub
in
int
cmc
cmp
lock
iret
xor
repz
das
andl
inc
pop
rcrb
ds
or
pusha
push
jl
or
adc
cmp
mov
roll
test
std
aas
in
push
lods
adc
pop
inc
cmp
push
scas
sub
dec
or
jp
outsb
mov
or
push
fadd
enter
rorl
je
and
je
pop
les
cmp
or
pop
sti
xchg
mov
cmpsb
test
mov
jg
shll
jnp
cwtl
dec
jne
mov
mov
sti
dec
or
or
jmp
push
pop
loopne
shlb
subb
adc
and
inc
and
xchg
fs
or
or
clc
jne
sub
adc
fists
add
mov
adc
std
inc
stc
rclb
out
jno
lds
or
int3
xchg
and
jmp
sbb
inc
nop
sbb
out
or
dec
jmp
pop
popa
xchg
bound
pop
mov
jnp
test
mov
out
push
clc
jno
jnp
xchg
xor
mov
lock
mov
cld
lahf
mov
je
inc
lods
jl
sti
daa
inc
in
in
adc
push
mov
push
sbb
sub
push
inc
push
into
clc
push
lods
in
cmpsb
cmp
adc
dec
jne
jnp
lea
dec
adc
jnp
mov
mov
lret
dec
rorl
out
or
and
push
inc
bound
insl
push
lea
jge
fcompl
ret
xor
repnz
mov
jbe
mov
push
pop
cmp
and
mov
fcmovne
inc
mov
inc
pop
xlat
or
mov
lock
cwtl
daa
adc
pusha
pop
mov
mov
mov
mov
mov
ljmp
clc
cmp
and
mov
lret
in
jge
xor
out
jl
movsl
scas
int3
bound
aad
or
loop
add
jne
xor
push
and
out
push
int3
and
loope
inc
test
out
pusha
cmc
sbb
mov
mov
push
popa
inc
stos
and
subb
addr16
sub
iret
dec
pop
repz
addl
dec
movl
xor
push
in
dec
mov
dec
pop
xlat
popf
sub
mov
pusha
add
jb
daa
pushf
iret
bound
andb
mov
js
dec
push
inc
or
popa
je
push
sbb
lods
pop
sbb
es
mov
call
out
add
arpl
mov
xchg
xlat
push
pop
mov
fadd
sbb
add
jbe
mov
mulb
out
dec
dec
add
xchg
dec
inc
fsubrs
cmp
sub
es
lahf
or
out
pop
add
xor
filds
enter
lea
arpl
ds
sub
add
in
pushf
fdivrs
cwtl
bnd
mov
mov
add
cld
mov
test
out
fsubrs
sub
in
movsl
xchg
push
arpl
adc
or
push
movsb
cld
repnz
push
xchg
jmp
mov
push
cmp
rolb
scas
in
mov
cmp
orl
add
je
iret
jle
inc
cmpsb
jb
stos
aam
int3
fmull
cmp
in
popa
sub
jb
test
dec
cmp
rorb
in
aas
pop
or
jne
sub
adc
pop
lea
or
test
cmpsl
divb
mov
pop
adc
add
inc
sbb
pop
in
leave
inc
mov
xchg
lea
sub
cmc
stos
pop
lcall
popa
dec
mov
sahf
js
or
bndstx
push
in
xchg
sub
js
pop
shl
imul
rclb
add
or
scas
push
mov
leave
scas
xchg
ljmp
shll
dec
inc
test
fiaddl
rorb
stos
in
or
mov
inc
sbb
mov
push
mov
jmp
or
je
enter
mov
int3
loop
push
xor
inc
mov
pop
push
insl
insl
lods
sbb
jp
dec
or
cltd
gs
scas
cltd
ss
and
scas
push
sbb
loope
push
mov
pop
mov
jmp
mov
fidivrs
xor
or
aaa
mov
jle
aaa
int3
mov
sti
push
mov
ja
test
insb
push
repz
mov
mov
jl
iret
sub
ss
mov
push
inc
jo
dec
mov
and
lods
sbb
mov
push
add
sub
sbb
mov
adc
hlt
pop
sbb
dec
jecxz
add
fisttpl
ffreep
inc
rcll
pop
neg
ficoml
xchg
sbb
inc
push
add
and
pop
rcrb
addr16
je
mov
sbb
jo
cltd
fs
lret
mov
rcl
stos
test
cmp
in
in
xor
clc
popf
jge
testb
stc
cmp
pop
ljmp
push
jo
sbb
lock
and
rol
cmp
je
push
loope
adc
push
jb
xor
sub
sbb
adc
inc
inc
pop
lock
add
and
mov
pop
iret
inc
ja
out
jne
xchg
cmp
or
roll
and
lahf
jl
xchg
dec
inc
add
lahf
mov
xlat
stos
scas
stc
jecxz
out
pusha
sub
adc
lods
mov
dec
and
push
out
in
lret
out
js
std
aaa
pushf
jnp
sbb
jecxz
fwait
rcl
mov
mov
sbb
sub
mov
mov
mov
cmp
fwait
add
and
roll
stos
ja
mov
lods
pop
mov
ret
inc
lret
mov
enter
xchg
cmpsl
jg
sub
xor
jbe
lock
roll
outsb
adc
into
ss
jle
scas
imul
outsb
pop
test
dec
lods
cmp
insb
scas
cli
and
xor
mov
cld
push
loope
ds
les
cmp
pop
mov
cmp
aaa
pop
sbb
aas
mov
rcll
fmuls
cli
or
jbe
movsb
jle
rcll
cmp
incb
pusha
frstor
rorb
addr16
sbb
lret
imulb
ss
push
xor
aaa
das
push
mov
fnstcw
in
or
add
add
pop
jmp
bt
das
imul
clc
mov
jae
mov
lods
or
int3
jb
mov
sbb
pop
popa
imul
mov
in
jmp
lock
lret
les
scas
cltd
mov
inc
pop
loop
add
pop
jmp
jne
sub
jle
cmp
test
rolb
and
hlt
or
out
adc
sbb
xor
jmp
mov
outsl
inc
in
pusha
out
inc
pushf
movsb
and
cwtl
sbb
cmpsl
mov
int
stc
stos
ret
aad
inc
adc
nop
fisttpl
hlt
push
xchg
mov
pop
pop
mov
ds
inc
pop
subb
adc
push
inc
cmp
fstl
js
std
jo
inc
scas
sub
addr16
adc
cmp
jl
add
ss
push
dec
jle
out
fldl
add
mov
lret
mov
xchg
add
push
mov
fisttpl
out
in
cmpsl
lods
sbb
inc
fidivrl
xchg
insb
lret
mov
movb
sbbb
idiv
in
fsubl
pop
push
in
adc
push
xchg
jae
xchg
pop
add
sub
cmp
cmpsl
aad
es
adc
or
cmp
js
lret
ret
psrlw
pop
inc
loop
jecxz
popf
pop
push
test
out
das
mov
dec
dec
cmpsb
cwtl
mov
jmp
sarl
mov
lcall
enter
loop
mov
lcall
jno
add
push
push
pop
and
movb
mov
je
mov
dec
sbb
leave
xchg
mov
cmc
fisubrs
jb
add
xor
ret
aaa
cmp
mov
outsb
lods
and
or
sarl
sbb
sahf
add
cli
xor
ljmp
xchg
hlt
icebp
push
xor
xor
and
jmp
sbb
cmp
data16
cmp
mov
mov
in
in
jp
stos
and
cmp
mov
rcl
pusha
movsl
lock
pop
pop
and
and
orb
dec
hlt
insl
mov
adc
push
cmp
add
testl
fdivrs
cmpsb
inc
or
jae
xlat
push
jb
fbld
mov
outsl
dec
sbb
aam
inc
push
cmp
icebp
xchg
mov
test
les
lahf
sub
cmp
stos
pop
and
lea
aaa
cmp
push
adc
sub
popf
repnz
inc
orb
clc
push
sti
inc
rcr
xor
mov
jno
loop,pn
mov
rorl
push
je
mov
aam
das
cwtl
lock
xor
dec
shll
rcrb
mov
adc
pop
mov
mov
sbb
mov
xor
mov
push
inc
fiadds
adc
bound
and
stos
out
sub
popf
xchg
bswap
sub
je
out
jge
dec
in
sub
pop
pop
mov
sub
out
xor
int
pop
and
shrb
pushf
mov
or
clc
sbb
repz
scas
nop
negb
fadds
push
xor
nop
and
and
sub
cmc
xchg
pop
lock
pop
inc
dec
inc
loopne
xchg
add
inc
jo
test
test
and
pushf
xchg
insb
mov
insb
mov
mov
fldcw
mov
inc
xchg
lcall
pop
imul
or
mov
cli
and
add
pop
aaa
pop
xchg
sbb
in
in
sub
test
movsl
or
dec
clc
or
sar
lret
lods
sub
out
pop
xchg
stc
or
pop
out
bnd
xor
das
out
push
xchg
pushf
fists
test
sbb
pop
loopne
scas
test
lret
xor
fsub
ret
mov
and
mov
xor
pop
cltd
iret
lods
mov
cwtl
mov
lea
xor
lret
fisttpll
rorb
mov
psllq
call
outsb
adc
or
cmp
jns
outsb
xchg
rorl
jae
add
push
push
stos
cmp
aaa
mov
xchg
in
testl
shrl
add
mov
enter
ja
inc
xchg
shl
pop
mov
xor
ficompl
fisttpll
sbb
ss
in
ret
imul
mov
sti
sub
and
lahf
imul
pop
mov
popa
cmp
fwait
mov
fwait
test
aad
arpl
fstpt
imul
jl
aaa
fcomp
movsb
push
adc
out
dec
repnz
xchg
cmc
cwtl
filds
cmpsb
and
rcrl
dec
stos
andb
mov
pop
lods
sbb
sbb
cltd
adc
fidivrs
nop
sub
gs
mov
cmp
mov
xchg
mov
mov
fbld
jl
loop
push
popa
and
hlt
add
mov
popa
bound
xchg
jp
sub
xor
mov
inc
push
mov
mov
mov
pop
pop
lcall
jle
enter
mov
sbb
xchg
jecxz
int
xlat
scas
xchg
mov
lcall
push
push
xchg
pop
ret
add
add
mov
inc
or
pusha
adc
jmp
cli
call
cmpsb
mov
es
mov
scas
xchg
jo
mov
jno
out
out
shrb
pop
cmp
loopne
jnp
and
fildl
adc
fisubs
rcrb
pushf
cli
fadds
mov
add
dec
pop
add
ss
push
xchg
nop
cmc
out
mov
push
mov
push
out
jecxz
push
std
je
sbb
dec
rcll
mov
popf
mov
xchg
mov
repnz
inc
push
or
inc
xchg
or
pop
andb
test
test
lds
push
dec
arpl
inc
divl
jp
sbb
cmp
outsb
mov
mov
mov
fbstp
mov
xor
adc
pushf
mov
cmp
out
or
xchg
push
sahf
loopne
out
and
push
or
cmp
test
sbb
lcall
inc
jle
das
inc
mov
mov
mov
gs
mov
clc
sahf
test
aaa
jmp
jle
cmp
and
out
mov
mov
mov
mov
or
mov
jecxz
push
add
pop
shrl
pop
iret
stos
jl
sub
sbb
andl
shl
in
loopne
and
pop
dec
cmp
mov
xchg
jecxz
jae
mov
std
push
xchg
leave
pop
and
inc
xor
ficomps
repz
push
sbb
and
sbb
jmp
js
adc
jo
ljmp
scas
cmp
xchg
pop
jae
addr16
test
mov
mov
in
sub
or
or
pop
ja
or
incb
mov
mov
inc
sbb
stos
inc
push
jg
lods
stos
push
push
out
je
loopne
test
sub
push
and
lahf
es
inc
dec
mov
aaa
fwait
or
or
xchg
mov
imul
push
insl
in
subl
pop
push
aad
mov
lock
pop
in
inc
xor
movb
cltd
insb
jne
sbb
push
decb
push
xchg
push
mov
jle
in
push
aam
jle
push
xor
jae
jl
and
push
in
ror
popa
insl
sbb
cmp
adc
pop
push
mov
and
test
push
inc
lods
xchg
cmp
loope
jmp
push
outsl
mov
inc
fdiv
mov
movsb
sbb
cmpsb
test
cmpsl
movl
cwtl
out
incb
cs
pop
push
jae
xor
add
popa
sub
xchg
test
into
mov
pop
shl
push
inc
addr16
xor
fsts
pushf
inc
call
mov
inc
pop
cmp
push
lret
in
push
xchg
mov
dec
and
cltd
push
mov
aas
and
cmpsb
sub
push
push
xorb
xor
mov
cltd
mov
sbb
fsub
lcall
fcomps
cmp
add
jb
jmp
pop
imul
int
leave
xchg
or
mov
fwait
popf
mov
and
mov
enter
cmp
pop
jle
clc
outsl
jge
and
pop
fs
dec
sub
loopne
push
jo
addb
push
or
mov
push
fidivs
jbe
mov
xor
mov
pop
aas
or
aam
push
sub
or
mov
jmp
inc
pusha
stc
sbb
rcrl
sub
or
in
or
addr16
adc
int
jp
push
jbe
out
in
sbb
sbb
push
dec
lock
lret
es
sbb
loope
js
stos
mov
push
ret
pop
inc
xchg
ret
pop
sbb
mov
and
stos
negb
lea
mov
fstpl
fdivrl
jo
or
pop
ficomps
ret
dec
lret
push
mov
sbb
aad
jg
push
sbb
ss
outsb
xchg
lods
and
bound
into
pop
hlt
cmpsb
xor
sub
push
mov
add
mov
out
dec
mov
mov
mov
imul
cmp
xchg
hlt
add
xchg
out
mov
loop
lock
jp
test
dec
mov
or
and
pop
adc
test
xchg
cmpsl
sbb
scas
cmc
and
into
gs
insl
ljmp
xor
in
mov
imul
add
in
push
dec
add
jmp
jecxz
les
inc
rcrb
std
lock
add
out
aad
rdtsc
push
xor
adc
dec
mov
in
mov
xchg
inc
cmp
sub
push
test
test
sub
mov
xchg
inc
inc
movb
repz
lea
mov
pop
jp
insl
pushf
testb
pop
push
test
hlt
push
sti
mov
dec
sub
inc
or
mov
movsl
and
les
imull
or
jmp
rcrb
sbbl
les
jp
mov
stos
add
push
daa
or
mov
scas
out
mov
cmp
inc
rcl
into
cmc
adc
xchg
xor
inc
mov
mov
mull
and
jbe
aam
lret
xor
sahf
mov
and
inc
lea
lar
pop
add
pop
sahf
dec
mov
iret
aas
pop
pop
xor
jno
fsts
mov
add
add
cmp
add
ret
xor
jp
pushf
sub
scas
push
cmp
in
rcl
push
xorb
lcall
xchg
shl
dec
xor
lret
test
je
clc
data16
pop
or
jp
adc
gs
dec
stos
fildl
jge
aad
cmp
test
clc
sub
scas
sbb
or
inc
test
push
test
sbb
loop
xor
hlt
push
dec
inc
push
aam
or
push
sub
push
inc
or
add
or
call
dec
jge
cmpsl
les
pop
sbb
fucomi
ss
lcall
push
lea
mov
cmp
in
data16
loope
cltd
mov
dec
pop
jnp
xchg
sbb
or
push
cltd
sub
lahf
add
out
jnp
test
shr
mov
repnz
imul
mov
adc
jo
inc
imul
ljmp
dec
lods
xchg
ja
cltd
in
mov
outsl
inc
cmpsb
xor
cltd
std
ror
in
jg
imul
loopne
sbb
jmp
xchg
adc
mov
xchg
decl
add
shll
lret
mov
fsts
daa
adc
sub
xchg
call
jb
frstor
jbe
sbb
adc
sbb
xor
cmp
sbb
bnd
jmp
ljmp
pop
gs
fs
arpl
js
cli
adc
mov
mov
sahf
call
sbb
iret
test
cmp
mov
cmpsb
rcrl
sub
cmp
cmp
pop
xchg
in
jns
jp
arpl
ficoml
inc
jne
int
xchg
stc
sub
pop
in
mov
xor
inc
in
fmull
mov
xchg
loop
pop
or
daa
hlt
mov
sub
inc
daa
cmp
mov
mov
xor
icebp
in
popf
shlb
stos
fnstcw
leave
mov
or
es
add
inc
mov
sub
stos
cmp
sbb
push
xchg
loopne
xchg
imull
js
leave
xchg
xchg
add
mov
inc
test
stc
mov
xchg
in
fucomip
imul
js
or
movsb
sub
push
pop
fscale
push
jmp
pop
inc
mov
xchg
push
add
xchg
add
ds
and
xchg
xrelease
xchg
aas
dec
aaa
data16
adc
repnz
icebp
pop
jns
inc
insl
pop
mov
mov
inc
divb
xor
stos
jnp
mov
mov
dec
cwtl
clc
int
mov
mov
addr16
ljmp
movsl
aaa
jno
dec
popf
jnp
and
mov
dec
sbb
jp
dec
add
pop
xor
adc
imul
mov
mov
insl
add
inc
xor
stos
xchg
rolb
mov
sub
push
in
pushf
imul
leave
xor
out
inc
out
movsl
divl
lea
inc
aam
sub
cmpsb
cltd
adc
hlt
inc
das
sub
xchg
sub
and
add
ja
mov
out
movsl
mov
adc
rol
data16
rolb
aad
jl
lret
and
test
test
sub
mov
subb
cmpsl
mov
repz
xchg
or
lret
adc
rorl
test
mov
sbb
mov
leave
daa
fdivrs
or
sub
fsubrs
dec
jae
in
add
pop
or
imul
mov
mov
imul
or
in
test
mov
push
sbb
adc
lock
insb
jg
cmpsl
cltd
or
shll
cmp
imul
cltd
je
ss
sahf
push
adc
or
fadds
adc
fimuls
enter
or
xor
lcall
pop
out
xchg
pop
xor
push
pop
xchg
mov
sbb
es
cmp
ffreep
aaa
sbb
in
aad
sarb
sub
sub
pop
or
inc
idivb
jae
add
mov
arpl
sbb
rcl
xchg
fisubrs
xchg
mov
pop
lret
dec
cmpsb
mov
test
in
mov
mov
or
sti
dec
scas
inc
or
in
sub
call
add
insl
add
mov
push
mov
mov
sub
inc
dec
mov
call
test
fxch
lock
xor
adc
fdivs
int3
fwait
rep
xorb
lods
jae
ret
ja
dec
dec
push
into
movsb
adc
inc
add
cmpsb
xchg
jno
and
mov
cmp
outsl
jmp
mov
sub
and
rolb
fldcw
and
clc
pop
testl
adc
pusha
pop
inc
ret
mov
dec
sbb
cmp
dec
inc
adc
inc
and
xchg
dec
imul
shlb
shl
xlat
insl
shlb
push
into
pop
inc
jmp
out
push
movsb
mov
mov
or
dec
mov
pop
int
sbb
fstl
jle
enter
test
or
push
xchg
add
std
jbe
mov
scas
daa
pop
add
lahf
inc
lds
push
jl
jb
mov
push
ficomps
aaa
adc
call
mov
jb
rorl
mov
and
cwtl
pop
popf
fsubl
arpl
ds
dec
stos
hlt
jns
addr16
pop
cwtl
mov
push
push
inc
fmull
dec
es
ss
push
inc
mov
dec
std
lcall
mov
loope
js
inc
xchg
mov
or
das
loopne
in
or
fidivl
aad
rcll
jecxz
or
xchg
fbstp
in
jmp
les
pop
fiaddl
sub
xor
sahf
mov
dec
xchg
outsb
sbb
sub
pop
clc
cmp
pop
jg
mov
inc
push
xchg
mov
sbb
movsb
ja
fwait
mov
aas
jle
sub
test
dec
setg
mov
dec
stos
inc
push
addb
sbbb
clc
outsb
insl
pop
addl
mov
jle
insl
sub
add
push
mov
addb
es
mov
repz
xor
inc
mov
pop
sub
and
push
sahf
dec
imul
jp
bound
sub
mov
pop
rorb
mov
push
fs
add
lea
ret
test
shl
std
std
sub
es
adc
imul
arpl
xchg
adc
mov
clc
jg
daa
adc
outsl
gs
jae
rorl
adc
jle
jb
cltd
mov
and
loopne
fdivrp
pop
out
cmpsl
hlt
pop
insl
jae
mov
inc
cmp
push
pop
mov
notb
push
adc
inc
das
mov
fmuls
mov
sbb
adc
jmp
imul
push
rorb
jne
mov
xchg
sti
adc
mov
insb
adc
cmpsl
mov
adc
movsl
test
dec
mov
loop
cmp
daa
lea
mov
pusha
daa
xor
pop
outsl
test
pushf
mov
sbb
inc
sti
mov
stos
adc
imul
scas
shll
in
in
test
mov
push
jg
add
pop
jb
testb
dec
dec
sub
mov
jae
or
lods
bound
mov
mull
dec
or
jbe
jnp
dec
mov
aas
sub
xchg
sbb
xchg
add
dec
pop
mov
add
out
add
lcall
insb
pop
jge
stos
in
dec
shlb
insb
lock
sub
hlt
fcomps
call
pop
scas
in
mov
test
idivb
fcomp
lret
fdivl
and
sub
loopne
push
cld
push
jp
stos
into
cmp
dec
mov
in
out
movl
xor
pop
jmp
decb
fcomip
hlt
cmp
push
iret
out
out
sbb
inc
pop
ds
pop
and
je
push
out
xor
mov
mov
push
roll
and
or
pop
xor
jnp
fistpll
je
push
dec
jge
movb
pop
jmp
xor
clc
cwtl
dec
mov
lea
pop
lea
or
dec
ret
hlt
jp
sub
fidivl
jbe
mov
cmp
or
test
jp
push
nop
out
sub
xchg
test
adc
push
lods
mov
xor
xchg
scas
add
mov
popa
pop
dec
es
or
or
cli
sarb
fcomps
jns
clc
dec
lret
test
push
test
mov
mov
adc
jp
stos
sub
shll
xchg
dec
in
jne
cmp
xchg
ret
cwtl
shlb
in
mov
movsl
das
shll
mov
iret
insl
call
loope
fdivrl
xchg
outsl
leave
std
push
pusha
daa
pop
je
test
data16
popa
fstpl
in
dec
in
cmp
mov
in
cs
daa
dec
shl
add
mov
pushf
mov
push
adc
fidivrs
cmpsl
into
mov
sub
xor
pushf
aas
cmp
in
push
test
inc
or
dec
mov
repz
out
mov
pushf
mov
cmpb
mov
sbb
sub
xor
mov
sbb
sbb
push
and
mov
inc
js
notb
pusha
cltd
movsb
pop
stos
icebp
or
mov
popf
icebp
add
test
jecxz
and
icebp
sub
push
pop
mov
cmp
pushf
push
xor
pushf
cmp
and
pop
adc
imull
lock
pop
pusha
adc
and
mov
lock
push
ret
pop
or
xchg
stos
xor
cwtl
stc
insl
push
or
mov
rclb
sbb
lret
sahf
ret
ljmp
lods
nop
rorl
insl
lods
push
pop
mov
repz
pop
notb
xchg
fdiv
mov
mov
cmp
loop
repnz
jmp
cmp
cmp
push
cli
cmp
cmp
shlb
test
push
std
mov
adc
mov
adc
lret
and
jbe
jl
test
in
cvtdq2ps
call
shll
test
push
xchg
cs
faddl
fldenv
and
xor
insw
mov
out
pop
dec
enter
ret
pop
mov
outsb
dec
and
rcll
add
aad
and
and
push
push
xchg
roll
xor
push
xchg
mov
mov
ss
pusha
out
ret
fistl
call
lret
pop
add
icebp
mov
testb
mov
call
movsb
adc
jno
insl
shll
cmc
lea
xchg
mul
pop
popf
dec
cs
mov
push
inc
popa
andl
cmc
movntq
and
mov
add
dec
inc
cwtl
rclb
rclb
add
addr16
hlt
imul
in
das
xchg
inc
imul
loope
in
dec
xchg
data16
sub
xchg
lret
inc
movsb
cltd
push
shll
sub
icebp
push
dec
clc
outsl
xor
push
dec
jb
fldcw
cmpsl
mov
rolb
or
testl
sub
scas
mov
aas
cld
in
jmp
sub
dec
push
xor
addr16
lahf
scas
jl
in
psraw
mov
sti
mov
inc
jl
jecxz
dec
lods
lcall
or
pop
and
outsb
and
adcb
inc
movsb
jge
aam
dec
mov
movsb
xchg
lods
push
ja
mov
mov
or
rol
xlat
sbb
popa
mov
mov
in
movsb
sti
ret
jge
push
xor
int
mov
ss
call
fisubrl
in
dec
xchg
mov
and
xchg
ds
dec
xchg
imulb
add
insl
fwait
nop
sbb
dec
xchg
cmp
pop
mov
xor
mov
mov
xchg
pop
mov
mov
fs
xor
rclb
imul
xchg
call
dec
mov
orl
sti
and
daa
sti
or
mov
in
jecxz
inc
push
mov
fbstp
cmp
hlt
mov
stc
sbb
xor
push
or
incl
test
jl
call
aad
jb
call
and
push
jbe
pusha
retw
jo
clc
push
aad
lahf
mov
dec
jo
lea
jl
push
mov
mov
ss
adc
les
loop
mov
setle
adc
mov
mov
push
aaa
cmp
notb
adc
es
cmp
sahf
iret
dec
lods
cmpsl
stos
cmp
push
mov
sub
sbb
imul
sub
mov
push
pusha
ljmp
pop
jge
sub
sbb
pop
mov
loopne
pop
xchg
inc
dec
and
or
mov
es
mov
aad
stc
mov
cli
sub
xor
outsl
xlat
cmp
pop
push
loope
add
push
xchg
lcall
gs
ffreep
mov
je
push
scas
mov
mov
aam
pop
aas
and
xchg
xor
popf
inc
lock
pop
imul
add
xchg
add
xchg
mov
and
das
dec
dec
dec
xchg
sub
xchg
xchg
rclb
pop
and
lods
fldenv
dec
xchg
push
add
arpl
jb
imul
cld
data16
push
cltd
std
adc
xchg
xchg
adc
sti
mov
ss
es
int3
mov
insl
or
fs
repnz
push
sub
vmwrite
xor
sub
adc
mov
inc
xchg
pcmpeqd
xchg
in
push
sub
xchg
dec
adc
imul
pop
jp
push
sub
sbb
sbb
fisttps
cmp
jbe
jg
shlb
jo
mov
and
xchg
insb
mov
and
cltd
pop
insl
add
lods
scas
int
jmp
fdivrl
fidivs
repnz
sahf
fwait
xor
xchg
mov
cmp
cmp
out
shlb
adc
icebp
mov
das
sahf
jne
adc
repz
push
imul
test
inc
sahf
xchg
dec
mov
hlt
adc
pushw
jnp
lcall
push
cmp
mov
xchg
lods
inc
andl
in
jmp
movsl
inc
or
or
jmp
jno
xchg
icebp
pop
test
in
jo
push
push
data16
in
int3
fdivs
cmp
in
mov
cs
jne
addb
les
shll
stos
fs
out
gs
movsl
mov
ror
dec
daa
stos
xchg
xor
in
negl
xorl
inc
pushf
lret
clts
sbb
xchg
mov
movb
lods
jae
jmp
lea
xlat
mov
xor
and
pop
add
jne
int
sar
loope
scas
cmp
jo
les
inc
cltd
adc
ret
sub
jb
cmp
push
cmp
loop
mov
testl
pushf
data16
jg
mov
mov
or
mov
mov
jecxz
mov
pop
js
cmc
dec
dec
nop
mov
and
das
pop
jns
xchg
ljmp
cmp
jle
pop
push
xchg
dec
int
or
jbe
aam
mov
mov
adc
pushf
dec
stos
icebp
xchg
mov
int3
lods
push
inc
and
or
shlb
mov
aaa
je
outsl
jno
lods
fistps
mov
ret
inc
sbb
imul
out
into
adc
jae
gs
sbb
xchg
addb
pushf
cmp
shlb
mov
scas
adc
add
test
and
mov
rcrb
sub
xor
and
adc
push
push
adc
orl
in
xor
out
pop
rcrl
in
xchg
push
mov
test
aad
in
adc
movsl
lock
mov
loop
xchg
xchg
mov
pop
cmpsb
lods
adcb
test
push
mov
or
sub
mov
cmpl
add
mov
mov
sti
das
adc
test
insb
adcl
cmp
xchg
or
dec
mov
and
lcall
fmull
icebp
lahf
xchg
lahf
icebp
ret
lods
in
clc
jecxz
out
aaa
sub
es
clc
iret
pop
sbb
mov
sub
ret
enter
push
cmp
addr16
push
dec
and
and
push
orl
mov
cmp
lds
and
add
popa
ror
adc
leave
push
daa
dec
xor
jge
std
jbe
sahf
dec
adc
into
loopne
mov
insb
fldl
jp
cmp
sti
pop
cmc
loope
repz
sar
xor
or
sub
sbb
mov
cmpsl
sub
stos
cmp
popf
fsubrs
xor
in
lret
mov
lock
jl
ljmp
movsl
into
cwtl
sarl
popf
and
cmc
shlb
adc
push
cmp
fwait
pop
push
xchg
out
imul
mov
cld
popf
js
add
inc
js
push
dec
inc
loop
pop
das
jns
lret
nop
xchg
jecxz
push
aas
xchg
lea
or
add
mov
cmc
lret
xlat
addl
fdivl
icebp
jl
jle
jno
push
je
shll
xchg
xor
ret
xchg
inc
test
xor
mov
loop
sub
xchg
test
dec
adc
pop
hlt
mov
push
adc
test
js
out
sbb
ret
xchg
enter
fadds
inc
cmp
mov
dec
fldcw
movsl
jno
or
fs
movsb
das
jle
mov
add
in
fs
cli
mov
lcall
pop
or
stos
or
jne
dec
sub
inc
loope
jmp
cmpl
arpl
scas
pop
push
inc
gs
mov
sbb
inc
subb
icebp
mov
insb
xchg
shll
mov
neg
mov
ds
test
cld
andl
adc
push
jns
push
adc
mov
imul
inc
in
cmpb
popf
lods
addr16
in
daa
dec
jne
rolb
enter
sar
addl
fidivrl
int3
jle
lcall
fmull
test
mov
setbe
ss
push
sbb
pushf
decb
mov
jmp
mov
xor
jg
sbb
adc
testl
sbb
imul
loope
fnsave
aaa
adc
insl
xor
inc
cmc
repnz
out
mov
pop
cwtl
lods
stos
jp
daa
movsb
lods
dec
ljmp
sbb
dec
dec
nop
ljmp
bound
ja
sahf
xchg
add
out
test
jo
addr16
fldl
stos
icebp
test
loope
mov
push
out
mov
sub
jmp
jbe
pop
xchg
cmp
mov
out
sub
inc
dec
xchg
mov
pop
pop
sub
loopne
mov
or
cltd
pop
xor
popf
data16
and
aam
dec
push
jne
cmpsb
inc
xchg
inc
add
pop
ss
mov
add
sub
ja
add
nop
shlb
adc
cmp
jno
dec
or
cltd
sub
and
and
jno
xor
sbb
test
pushf
cmpsl
mov
mov
addr16
in
pop
pop
jl
mov
xor
js
jns
mov
xchg
int
or
inc
andb
in
outsb
nop
jo
dec
and
aad
dec
pusha
es
pop
arpl
out
pop
in
movsl
mov
or
push
sbb
int
xchg
iret
push
cmc
mov
adc
adc
movsl
cltd
or
gs
ljmp
arpl
dec
and
rcrb
movsl
xor
mov
pop
jo
in
mov
sbb
dec
gs
mov
stc
jnp
mov
inc
xchg
jnp
outsl
repnz
jns
pop
fs
inc
mov
jge
and
xor
lahf
adc
scas
and
loope
and
pop
cmp
push
xor
out
mov
mov
and
mov
inc
enter
cmp
and
iret
stos
je
pop
data16
fnstsw
inc
or
jb
stos
mov
sbb
sti
inc
or
loopne
sub
pop
fdivrp
adc
test
xchg
cmpsb
clc
xchg
repz
test
cmpsb
push
mov
ljmp
scas
cs
jne
sub
push
pop
fidivl
movsl
jb
pop
lods
or
add
push
out
cli
jl
mov
cmpsl
sub
push
dec
xchg
ja
loopne
and
mov
out
daa
decb
or
jmp
or
inc
mov
mov
jle
push
out
dec
add
pop
aaa
push
lock
inc
and
neg
data16
sub
scas
sub
jge
push
cli
iret
fisubrs
dec
imul
mov
mov
dec
or
in
ret
and
xchg
cld
cltd
in
sbb
sarb
jno
in
mov
into
xchg
pushf
insl
mov
pop
clc
out
pop
xor
adc
jmp
xchg
cmp
and
aad
das
cmpsl
sub
es
std
aaa
sub
cmpsl
mov
xor
fcoml
push
out
fs
lahf
cmpsl
jmp
pop
dec
mov
cs
xchg
cli
mov
shlb
ja
add
jg
dec
or
jmp
push
xor
ljmp
ret
pop
jecxz
inc
sbbb
sbb
lret
leave
mov
rcrb
test
data16
sti
addl
or
xorl
push
mov
push
iret
or
xchg
add
call
lcall
icebp
mulb
sub
aad
push
adc
push
ds
repz
sbb
pop
stos
stc
dec
popl
jl
in
stc
loopne
mov
jne
adc
xchg
mov
push
rcll
dec
xor
mov
idivl
xchg
adc
mov
xor
lods
push
test
jbe
pusha
cmp
test
jl
test
movsb
ret
jne
je
sbb
add
xchg
jecxz
add
fs
out
xor
cmp
mov
xlat
mov
mov
mov
ds
sti
push
popl
add
ja
mov
mov
subl
inc
in
arpl
sub
dec
mov
setnp
test
sub
push
or
push
mov
cs
and
jmp
aad
jp
faddl
aaa
dec
dec
fiaddl
cmpsl
jge
ficompl
push
pop
inc
cmp
sub
mov
fidivl
aad
arpl
sub
adc
push
sub
cmp
inc
dec
xchg
add
inc
mov
mov
cmp
xor
jo
sbb
sti
xor
cmp
ja
sbb
push
fcmove
out
mov
je
inc
into
aas
inc
inc
cli
outsl
sbb
or
jb
sbb
js
out
aam
iret
adc
nop
outsl
leave
adc
jo
into
adc
push
mov
inc
xor
call
mov
adc
or
lcall
scas
repz
push
mov
stc
mov
loope
pop
cmp
or
adc
in
das
aad
push
mov
ret
jbe
test
shll
ja
or
pop
cmc
xor
sub
psubd
mov
xchg
cmpsl
xchg
fwait
roll
xorl
movsb
negb
sub
push
add
inc
pop
mov
fidivrl
int
or
adc
or
and
pop
insl
fsubl
clc
loope
dec
ficoml
insb
cmc
xor
lea
int3
lds
aad
xchg
push
repz
sub
inc
out
add
ds
mov
inc
cld
testl
pushf
dec
fs
in
mov
or
lret
sub
xchg
push
cmpsb
jp
gs
xor
incb
mov
cld
xchg
push
mov
sbb
pop
ret
rclb
mov
add
ss
dec
inc
test
xor
jge
push
lcall
int3
dec
ret
scas
dec
and
cmp
cmp
inc
test
in
mov
or
pop
xor
sbbb
fadd
sub
cmpsb
or
dec
push
mov
call
push
shl
and
mov
nop
adc
ja
cmp
nop
imull
add
inc
push
ret
or
movsl
xchg
outsl
mov
pop
outsl
sahf
add
hlt
jo
into
push
filds
arpl
xchg
sbb
aas
push
dec
loope
andb
addr16
repz
cmp
or
jmp
repz
adc
xlat
into
pusha
or
call
dec
arpl
adc
mov
dec
roll
cmc
mov
es
cmp
jge
add
push
pop
pop
jp
sub
or
jle
test
jmp
pop
xlat
iret
inc
std
cwtl
lds
pop
popa
imul
jp
fcmovnu
repnz
enter
je
adc
daa
out
dec
cli
dec
mov
sbb
fsts
xchg
rcrb
or
jecxz
sub
sub
addb
and
mov
lock
cmp
std
lahf
arpl
int3
popa
jns
stos
pop
push
add
repnz
gs
mov
in
cs
mov
in
mov
push
jmp
mov
test
adcl
adc
mov
or
mov
sbb
insl
xor
mov
test
loop
sub
push
popf
bound
aad
xchg
mov
fwait
ljmp
xor
sbb
cmp
loope
ret
jo
stos
mov
xchg
sbb
adc
cltd
or
or
sbb
sub
ds
jae
movsb
das
shl
faddl
mov
mov
imul
movsb
adc
shll
lret
dec
incl
mov
push
mov
add
and
cmp
outsb
jecxz
imul
push
es
pop
mov
xorps
push
sbb
fdivrp
ss
dec
jmp
and
inc
mov
adc
js
cli
jmp
push
add
call
inc
decl
test
sbb
push
fisubrl
xchg
mov
clc
fld
sar
ljmp
push
pusha
movsl
subl
xchg
xchg
adc
jno
xor
insl
rcll
pop
mov
adc
es
xor
pop
jg
insb
mov
adc
dec
push
cmc
pop
pop
fwait
pop
sahf
out
inc
dec
test
test
sbb
decb
arpl
push
lea
test
jp
jne
mov
negl
sub
aaa
daa
addr16
adc
mov
cmpb
mov
and
rcrb
loop
in
fildll
ss
fiadds
mov
test
jmp
sbb
xchg
cmp
jo
push
pop
jbe
lcall
push
test
mov
pop
ja
fwait
pcmpeqw
xor
xchg
popf
scas
test
cmp
sarl
fstpl
out
nop
mov
es
fmuls
sahf
push
adc
insl
xchg
je
dec
fildll
cli
adc
pop
xorb
cmpb
pop
imul
jae
rcrl
dec
xor
or
jg
in
push
jmp
or
mov
xor
sub
mov
mov
xor
adc
mov
out
inc
andb
xchg
xchg
adc
sti
in
stos
lcall
cld
addr16
dec
test
xchg
sbb
xchg
push
stos
es
mov
ss
dec
loopne
jmp
dec
loop
pop
adc
dec
mov
or
lea
imul
sbbl
addr16
andl
inc
cwtl
arpl
jmp
pop
push
test
push
addr16
ret
or
mov
xor
xor
add
xor
add
stc
andl
mov
sub
xor
sahf
adc
pop
or
hlt
rol
shl
mov
xor
sbb
xchg
shll
or
adcl
xlat
sbb
frstor
rorl
or
daa
pop
cs
sub
fs
jg
pop
push
pusha
adc
dec
lods
jne
sbb
jp
adc
mov
sub
push
das
fs
or
inc
or
sahf
xchg
int
pop
cltd
mov
mov
std
mov
xor
push
sbb
mov
popa
cmc
enter
in
mov
lcall
std
mov
lahf
pop
roll
fwait
fcmovnb
addr16
dec
add
mov
jne
inc
jnp
dec
pop
leave
loopne
ljmp
mov
ljmp
and
inc
sub
rcll
jnp
xor
push
lret
stos
xor
mov
aas
into
sbb
subl
or
imul
call
mov
pushf
leave
in
sbb
std
dec
testb
pop
jg
punpcklwd
lahf
add
iret
in
xchg
lock
shlb
ljmp
jno
mov
add
loopne
popa
cmp
adc
into
rolb
cmpsl
or
xchg
and
adc
cmp
or
sub
rcl
dec
loopne
cmp
jae
adc
pop
pop
ret
pop
sub
cmp
sbb
push
add
je
jmp
movsb
fldcw
mov
add
popa
repnz
jns
dec
jo
dec
jg
inc
arpl
mov
pop
push
js
leave
and
inc
das
cmp
sub
arpl
inc
xlat
lret
add
jecxz
and
xchg
repnz
and
inc
cmp
push
or
repnz
ds
in
sbbb
xlat
nop
scas
mov
sbb
imul
in
pop
roll
or
fidivs
add
xchg
push
rclb
cmpb
sub
stos
xchg
daa
bound
jg
out
pop
dec
push
addr16
and
adc
test
std
adc
mov
pop
pop
mov
or
cmpsb
sahf
out
adc
scas
out
fwait
movsb
imul
data16
and
sbb
jno
jae
data16
mov
bound
jg
dec
mov
in
push
out
mov
or
cmp
out
stc
push
push
mov
les
mov
push
ret
cmp
stos
jbe
jl
leave
xchg
and
sahf
mov
mov
insb
enter
iret
rcll
xor
shrb
clc
ret
push
mov
sbb
xor
pop
cmp
mov
ret
mov
sti
pop
fdivrl
add
pushf
mov
cmp
cld
sahf
xchg
jl
jbe
pop
adc
xchg
clc
pop
mov
lods
jne
mov
ss
pop
xor
xor
cmp
mov
xor
icebp
mov
pop
out
cmpsl
bound
and
sahf
xchg
testl
dec
movsb
mov
inc
pushf
dec
xchg
dec
ljmp
push
xor
jmp
ds
pop
lahf
clc
cmp
scas
dec
mov
rorb
jnp
sub
xor
pop
inc
sahf
adc
subl
fwait
and
and
js
xchg
loop
shrb
in
jp
in
dec
das
push
les
rorb
cmp
jle
cmp
jmp
add
int3
add
in
dec
sbb
and
sub
lret
jnp
call
jae
testb
ret
sbb
pop
xchg
mov
dec
addr16
mov
lods
dec
out
insl
or
hlt
sub
bound
mov
loop
mov
lods
dec
pop
mov
sbb
nop
mov
lahf
cmpsl
mov
movsb
in
jae
ja
js
cmpb
inc
push
enter
xchg
cmp
out
stc
jae
stos
sub
xchg
pop
dec
pusha
push
mov
dec
lret
adc
push
push
cld
popf
mov
ds
scas
xchg
cmc
add
sbb
outsb
aaa
xchg
in
or
sub
lea
inc
call
int3
mov
fs
mov
or
mov
fwait
add
cmc
das
jno
aas
mov
mov
add
rcrb
sub
pop
sub
daa
xchg
data16
cltd
stos
sub
clc
xlat
cld
clc
cmp
jp
mov
pushf
popa
and
sub
mov
fdivs
lcall
mov
mov
sub
push
fdivl
pop
or
inc
ret
movsl
das
cwtl
jecxz
xchg
mov
in
dec
and
sbb
fadds
out
test
cmpsl
mov
mov
pop
sbb
add
fldt
sbb
push
adc
sbb
xor
cwtl
insb
dec
ret
cld
cmp
decl
in
jmp
ja
jg
fidivl
xchg
cmp
loop
add
and
pop
cmp
out
and
cmp
or
jne
fiadds
ret
adc
cmp
out
shlb
adc
fdivrl
fbld
and
fucom
adc
popa
mov
or
scas
sub
xchg
cmpsb
pop
and
lcall
icebp
testb
fwait
sarb
mov
out
fistl
dec
xor
sbb
cmp
clc
cmp
or
pop
std
inc
loope
mov
pop
push
inc
mov
dec
out
mov
ret
in
mov
mov
das
je
pop
inc
inc
loop
push
notl
loop
mov
mov
popa
fcmovne
xor
sbb
adc
xor
add
fstps
orb
outsb
outsl
aaa
adc
adc
sarb
xor
lret
add
push
mov
ficoms
inc
fistl
adc
sbbb
dec
and
mov
push
push
data16
cmp
mov
mov
cmpsl
adc
cmpsb
shl
movsl
inc
jmp
xchg
pop
and
insb
mov
push
mov
mov
adc
xchg
loop
js
lea
daa
mov
lea
dec
lret
in
out
xor
outsb
shlb
mov
cli
incb
fs
sbb
pop
stos
sarb
scas
push
addl
in
outsb
push
out
in
jae
inc
fldenv
mov
ds
sbb
into
and
cmpl
loope
fsubrl
adc
dec
ret
push
data16
xchg
movsb
xor
dec
cli
test
sbb
adc
test
rolb
jl
imul
dec
orl
je
shlb
or
push
hlt
dec
icebp
pavgw
gs
xchg
aaa
cmp
ss
xor
aas
fs
subl
sbbl
ja
test
adc
pushf
mov
add
add
xor
or
sbb
leave
mov
xchg
push
rorl
jbe
stos
add
sub
insb
pop
enter
shlb
out
das
cmp
das
dec
dec
cs
and
cmp
lret
pop
lahf
insl
jns
out
outsl
push
push
aaa
lock
push
push
push
inc
dec
dec
decl
shrl
dec
mov
icebp
push
lahf
xchg
test
jp
jne
lcall
mov
add
int3
mov
pand
pop
sub
pop
rorl
jnp
lea
cld
adc
mov
movq
pop
pop
movsb
adc
jmp
jns
add
scas
cwtl
and
jbe
fsubr
mov
enter
xor
fimull
mov
movsl
cltd
rcll
mov
dec
and
mov
and
mov
push
cmp
out
push
insb
outsb
data16
je
and
adc
pop
cmp
stos
in
jg
mov
mov
pop
jl
add
add
adcl
fnstsw
inc
shlb
in
iret
in
xor
aaa
lret
adc
rorb
iret
lock
mov
sub
mov
jmp
ss
or
loop
stos
mov
mov
call
loop
cmc
ror
dec
iret
jbe
adc
pop
hlt
mov
test
pop
pop
fcmovnb
loop
xchg
adc
adc
call
cwtl
cli
lret
add
mov
xor
mov
out
or
insb
push
test
dec
push
dec
shr
lret
dec
shlb
sahf
push
dec
int
mov
inc
add
jecxz
sahf
pop
push
adc
cld
in
scas
int
xchg
popf
icebp
shlb
jg
mov
cmp
xor
movsl
ja
gs
dec
in
xchg
fptan
insl
adc
xor
sub
lahf
cmpsl
mov
xor
inc
xlat
xor
push
add
mov
test
addl
loopne
xchg
lret
jg
jno
mov
aam
fiaddl
repz
xor
cmpsb
push
xor
pop
mov
adc
ja
pop
and
dec
lahf
aaa
loop
inc
push
push
scas
sbb
mov
aaa
fwait
or
sbb
jae
shrl
push
mov
shll
mov
push
xor
push
adc
jae
loop
mov
xchg
fdivl
adc
sbb
mov
xchg
push
pop
aaa
push
lock
dec
xor
fyl2xp1
data16
mov
cltd
cmp
leave
lods
xchg
movl
fwait
sbb
xchg
add
adc
int3
and
jo
xor
mov
test
lods
pop
in
jecxz
fistpll
mov
sbb
adc
and
in
jle
and
pushf
cltd
pop
jp
mov
arpl
les
cmc
cli
pushf
fdivl
xor
push
push
push
and
test
xchg
jecxz
pusha
mov
adc
add
mov
mov
pop
clc
dec
ret
cwtl
nop
inc
mov
imul
or
mov
gs
scas
adc
lahf
sub
cmpl
out
or
les
rcl
push
lods
mov
xor
push
xor
xlat
jno
sub
add
sub
dec
fdivr
out
xchg
imul
mov
cld
inc
mov
les
mov
xchg
jns
adc
imul
out
loope
mov
aam
out
sub
mov
inc
cmpsl
pop
xor
fisttpl
rep
sbb
pushl
push
scas
outsl
int
push
daa
push
or
xor
mov
mov
outsl
mov
mov
out
andb
sub
adc
xor
and
movsl
data16
sbb
ror
int3
push
rclb
cmpsl
cld
push
push
in
movsb
ret
loop
xor
inc
cltd
jmp
dec
mov
add
sti
mov
mov
es
stos
test
popf
inc
int
jbe
xchg
inc
pop
push
jmp
sub
or
adc
daa
fildll
push
sub
mov
js
adc
lods
adc
rcrl
mov
dec
xlat
xor
push
andl
mov
jecxz
jo
stos
out
push
xchg
cmp
sbb
dec
sbb
mov
xor
push
aam
gs
fucompp
pop
out
scas
cltd
xorl
dec
xchg
pop
aam
and
push
shlb
out
mov
scas
dec
and
lcall
dec
stos
test
test
mov
and
sbb
push
adc
cmc
inc
jmp
daa
mov
popa
mov
mov
sub
out
inc
push
sbb
xchg
jp
scas
dec
insl
jo
inc
or
pop
daa
mov
fnstcw
call
lret
xchg
cmp
xchg
out
daa
test
andl
and
adc
mov
inc
lds
sbb
movsl
je
xor
mov
sbb
jge
fcomps
push
cmp
movsl
rorl
test
cs
lahf
push
in
lahf
mov
js
push
stos
sub
loopne
inc
adc
adc
repz
xor
fildll
leave
inc
test
mov
aaa
push
std
push
icebp
insl
int
mov
jmp
imul
arpl
mov
cmp
cmp
in
sub
nop
in
sbb
xchg
or
leave
sbb
adcl
int
cmp
or
mov
push
jb
mov
ds
clc
dec
mov
mov
shlb
jne
ror
mov
sahf
fnstenv
ds
xchg
scas
jns
cli
push
ja
jae
inc
jl
lods
rcrl
ljmp
out
clc
dec
ret
mov
dec
es
xor
fsubr
adc
int
addr16
xchg
push
scas
cmc
mov
je
hlt
fldl2e
shlb
jp
and
jb
imul
test
repnz
mov
push
pop
mov
xchg
xor
push
mov
mov
xchg
adc
les
cld
push
xor
fstpl
xor
pop
mov
or
outsb
sbb
cld
sbb
mov
mov
hlt
cmc
jns
loopne
sbb
mov
sahf
mov
pop
cmp
mov
inc
cmpsl
cmpsl
xchg
dec
and
adc
out
pushfw
adc
adc
inc
mov
mov
mov
fs
repnz
imul
loopne
lret
std
mov
cwtl
cmp
fwait
push
lahf
xlat
cwtl
pusha
addr16
cmp
sub
stos
cltd
lret
sbb
clc
lods
jne
cltd
mov
and
arpl
shrl
sbb
scas
sbb
add
push
inc
sub
fdivs
mov
sub
rdtsc
aaa
les
inc
push
jbe
inc
cmp
add
ret
xchg
and
sbb
popf
fadds
aas
xor
xor
xor
mov
loop
pushf
sbb
xchg
adc
adc
fs
cs
fldcw
iret
add
popf
or
sti
xor
int3
addb
and
cwtl
js
xchg
sub
adcb
and
add
sahf
adc
subb
cmpsb
shl
inc
mov
push
in
sub
mov
inc
mov
adc
jno
push
mov
cli
push
xchg
xchg
xor
dec
adc
gs
cmp
fildll
test
and
sub
xchg
inc
fsubl
adc
ret
shll
or
loop
jle
mov
adc
push
arpl
xor
jns
cmp
sbb
add
js
jnp
sbb
dec
nop
scas
push
lds
shrb
movsl
lret
and
push
sub
enter
aaa
ret
add
inc
fsubrl
inc
pop
xchg
jmp
aaa
pop
xchg
int3
ficoml
xchg
ret
push
sub
inc
pusha
popf
cltd
xor
movsl
pop
mov
xor
loopne
add
gs
out
roll
fstpt
inc
and
test
clc
icebp
xor
xchg
lods
pusha
bound
xlat
sub
xor
mov
lods
jbe
mov
cwtl
jmp
imul
mov
sbb
adc
out
inc
jnp
and
idivl
dec
inc
jmp
jnp
movsl
movsb
or
fadd
xchg
je
xchg
in
cmpsb
sarb
outsb
movsb
xor
adc
mov
push
pop
xchg
inc
pushf
sar
imul
ds
js
pop
sahf
testb
add
or
cmp
lods
idiv
repz
cmp
hlt
dec
pop
icebp
inc
scas
inc
lock
test
imul
stos
cmpsb
imul
movsb
push
test
sarl
orb
adc
in
mov
dec
xchg
cmp
les
jb
jg
jmp
push
mov
insl
mov
pop
mov
xor
or
sbb
add
push
mov
jo
ljmp
push
sbb
pop
es
fnstsw
inc
shrb
mov
out
test
fcoms
jae
aad
rcrb
cmp
out
jb
movsl
mov
sub
fnstenv
cld
adcl
clc
outsl
andb
aad
unpckhps
push
xor
adc
inc
mov
mov
fs
jmp
xor
gs
or
cmp
pop
or
popf
push
gs
xor
sbb
shrb
data16
pop
movl
cmp
fistl
xchg
and
cmpsb
out
xchg
lret
push
jg
shll
cltd
push
lods
ss
movsl
bound
push
ficoml
fldl
inc
or
xchg
rcrl
into
dec
xor
movl
and
bound
sub
pop
test
jb
invd
ret
dec
pop
loop
std
test
addl
int
mov
in
inc
xchg
push
jns
sub
pop
lods
ret
les
ss
ja
pushf
les
cltd
aaa
int
scas
lds
mov
roll
and
pop
jb
scas
adc
repz
insl
xor
jg
dec
leave
lock
repnz
sbb
inc
fwait
dec
int3
lock
push
out
ss
stos
cmc
add
mov
mov
fldpi
adc
aas
loopne
out
sub
sbb
mul
pop
push
rorb
adc
adc
fmul
outsb
mov
and
inc
sarl
jle
adc
cmp
outsl
xchg
lock
inc
xor
fdivl
add
fs
xchg
sbb
test
js
in
test
fsubp
daa
sbb
inc
jne
outsb
addl
xor
dec
int3
mov
push
cs
addr16
ss
and
cmp
xchg
mov
inc
jnp
orl
shll
inc
dec
test
test
int
jmp
xchg
int3
add
dec
mov
stos
push
sahf
or
cmp
jne
pop
sub
push
loope
out
sbb
nop
lea
les
pop
in
jnp
jne
leave
out
xchg
rcrl
lea
loopne
xchg
push
xor
fisubrs
adc
pop
imul
cli
mov
pop
movsb
out
inc
ud0
jg
and
cmp
repnz
push
outsl
xchg
or
cmp
in
test
mov
je
cld
into
and
loop
test
loopne
xor
or
enter
sub
sti
dec
add
pop
shl
sub
adc
stos
xlat
jnp
jp
pop
pop
int
xor
dec
jge
int
push
jae
fwait
adc
and
add
vphaddubq
cmpsl
std
and
in
je
mov
sbb
lods
out
faddl
mov
shrb
icebp
dec
inc
jno
adc
cld
push
cli
inc
jmp
push
push
jbe
or
pop
fimuls
cmp
jne
inc
test
sub
mov
sub
or
outsl
rcll
mov
inc
sub
inc
cmc
pop
jmp
sar
mov
jno
out
add
jbe
rcrb
mov
or
push
mov
or
aaa
inc
cs
scas
dec
dec
dec
sbb
inc
ss
push
sub
inc
jl
frstor
cs
fmull
inc
pop
mov
dec
cmp
add
xlat
push
in
andl
pusha
xlat
mov
sbb
dec
mov
nop
mov
cmp
pop
push
leave
jecxz
lcall
out
imul
mov
jp
insl
xchg
mov
add
xchg
jno
xor
outsb
sub
push
mov
mov
and
inc
cwtl
mov
mov
aam
push
sub
mov
roll
mov
xlat
fwait
in
push
mov
mov
mov
mov
stc
pop
cs
pop
jnp
fcoml
jns
or
push
push
or
dec
aad
icebp
push
mov
adc
jae
mov
pop
stos
sahf
mov
subb
test
ret
cmp
js
lret
push
icebp
and
push
add
mov
stos
leave
add
sbb
jbe
sbb
jb
call
sub
aaa
out
fistl
loope
sahf
and
enter
sub
sub
xlat
outsb
adc
mov
push
xchg
inc
push
dec
cmp
mov
inc
ret
push
cs
arpl
mov
or
les
xchg
aam
add
fmuls
clc
sub
fdivrp
test
in
mov
pusha
mov
arpl
mov
and
je
sar
jecxz
loopne
and
mov
push
daa
pusha
je
flds
aam
dec
push
in
mov
sbb
rcrl
pop
and
xchg
add
pop
mov
popa
xchg
loopne
sbb
in
jo
imul
or
adc
enter
sbb
scas
repnz
push
and
cmpsl
int3
push
add
stos
push
mov
divl
daa
inc
popa
bound
iret
repnz
sub
insb
and
add
bswap
pop
int
jno
stos
jmp
mov
inc
orb
inc
adc
adc
pop
push
inc
jae
cmpsb
cld
es
cmpsb
fwait
sub
jmp
icebp
gs
jmp
xor
cmp
dec
or
test
rorb
push
shrl
lods
aas
pop
ljmp
sbb
cmpsl
mov
sbb
adc
xchg
leave
cmpsb
mov
adc
jl
sarl
std
mov
into
cmp
mov
js
cmp
and
and
xor
or
xchg
push
stos
push
cmp
lcall
scas
into
mov
fistl
out
jb
xor
sub
jp
add
xorb
cmp
aaa
inc
nop
ret
adc
push
addb
sahf
lret
xchg
test
inc
cmc
outsl
or
lcall
shr
jo
lds
mov
out
jne
pop
shll
leave
repz
test
xchg
push
dec
ljmp
clc
int
dec
push
cli
js
cmp
xor
movsb
repnz
call
fistpll
stos
lods
fcomp
lahf
push
sbb
les
bound
mov
sub
xchg
mov
in
cmc
stos
push
jl
and
iret
pop
cmp
and
cwtl
jge
push
push
loopne
add
nop/reserved
push
daa
int
adc
mov
pop
rcrb
rcrl
add
ja
mov
add
xor
dec
aas
dec
add
xor
or
mov
inc
xor
call
push
lods
push
cli
dec
popa
mov
fstp
sub
mov
ficompl
adc
push
adc
test
and
popf
int
sti
push
sbb
cli
fisttpl
cwtl
je
stos
adc
iret
sti
jge
xchg
clc
std
xor
mov
xlat
fimuls
inc
add
pop
lret
lds
popa
aad
inc
fwait
pop
push
jns
iret
mov
push
sub
repnz
inc
or
push
rcll
insl
mov
add
mov
push
ss
out
loopne
xchg
lock
hlt
outsl
add
popf
sbb
xor
mov
or
sti
jne
lods
push
aaa
or
fidivl
pop
push
insb
aas
sub
test
sbb
in
fs
mov
and
outsb
std
scas
jb
push
les
mov
push
mov
dec
jl
fists
sub
pop
adc
cli
mov
addr16
negb
adc
push
jb
fcmovnb
divb
in
insl
mov
adc
aas
lcall
pop
jmp
mov
ds
adc
das
out
sub
mov
and
fyl2x
imul
mov
lret
out
xor
and
in
fdivr
movsl
dec
popf
not
xchg
add
flds
adc
fs
mov
fistpll
push
andb
jb
rcl
shlb
and
push
push
sbb
adc
mov
and
lret
push
mov
cmp
repnz
and
lds
sub
or
mov
inc
jae
xchg
push
pushf
add
movsl
cmpsb
pop
in
pop
int
and
xor
push
adc
sar
sbb
in
inc
dec
jg
mov
sub
movsb
push
or
or
std
mov
imul
popa
aam
out
mov
enter
mov
loop
cmp
call
push
fbld
xchg
aam
inc
aam
push
fildl
in
sbb
jecxz
xor
hlt
in
dec
jp
adc
repnz
cmp
js
notl
mov
rcrb
testl
in
pop
xor
gs
xchg
cmp
aaa
aaa
in
adc
pusha
test
scas
jle
adc
pop
cmp
dec
std
repnz
inc
xlat
mov
rcl
pop
push
cmpsl
movsb
or
mov
push
mov
push
mov
fwait
push
adc
and
ret
pop
test
cmpsl
fs
dec
rcrl
pushf
jno
cwtl
pop
mov
mov
stos
pop
dec
int3
fwait
or
lods
push
in
ljmp
fmull
mov
fmulp
fistpll
sbb
addb
ds
das
rcrb
push
sbb
pop
icebp
es
push
mov
add
or
lret
out
pop
loopne
call
sbb
ret
or
lods
push
fwait
adc
sbb
add
repz
push
lds
sub
push
arpl
or
ljmp
or
sbb
xchg
scas
dec
xor
repnz
dec
adc
xchg
lret
sub
inc
pop
pop
cmp
sbb
inc
aam
and
jo
mov
stc
jb
cmp
fs
das
or
jecxz
dec
adc
inc
repnz
mov
sub
fcmovb
push
mov
ret
pop
rorl
mov
inc
cs
xchg
int
inc
pop
js
aas
jg
cs
loop
ds
das
mov
or
jb
aad
mov
xchg
jne
loopne
lods
xchg
loope
scas
xlat
fdivrs
mov
mov
stos
nop
sbb
stc
push
ror
out
push
sarl
in
push
ret
dec
adcb
movl
xor
idivb
jb
or
imul
lret
sub
mov
jp
cwtl
bsf
roll
outsb
movsl
stc
jo
out
sbb
lock
ss
icebp
inc
push
push
mov
imul
fstl
std
mov
mov
leave
out
jne
pop
pop
clc
popf
flds
mov
lods
mov
fidivrl
adc
arpl
cmp
je
iret
dec
fisubs
push
lcall
repz
xchg
mov
pop
loope
ds
xor
jnp
jg
mov
ret
add
nop
addr16
out
cli
test
cmp
clc
icebp
icebp
divb
lahf
ja
aas
jle
iret
or
repz
push
and
mov
clc
sahf
mov
dec
out
test
mov
popf
mov
jb
lock
out
das
aad
or
ljmp
ret
xorl
jb
cmp
adc
fidivrl
pop
outsl
add
stos
cmpsl
testl
popf
out
aam
fiaddl
pop
imul
insb
test
fwait
adc
adc
add
insb
pop
pop
pop
rol
sub
test
test
sub
mov
orl
outsl
rorl
pop
pop
lahf
push
sub
push
adcl
test
das
icebp
int3
iret
idivb
fidivl
mov
adcl
lcall
mov
movsb
cmc
jns
lods
fstpt
pop
test
pop
xchg
jp
push
stc
lret
adc
jns
stos
push
sub
loopne
shl
cmovb
lods
ficoml
xor
cs
mov
loop
pop
aam
jg
push
stc
cmpsb
mov
xchg
cmpsb
pop
loop
leave
pushf
push
xor
sbb
sub
test
push
jnp
jno
cwtl
movl
test
jmp
les
icebp
lds
fldt
cli
push
push
dec
iret
pop
push
or
shlb
sbb
jle
xor
cmp
cmp
decl
sbb
loop
je
fs
inc
cmc
xor
int
sub
clc
mov
add
xchg
push
mov
jmp
xchg
xlat
addr16
cmp
push
sbb
in
inc
cld
xor
fs
jmp
or
sub
popa
sub
inc
out
cltd
push
mov
sub
out
stc
mov
lods
or
jno
pop
iret
xchg
pop
inc
jmp
scas
mov
xchg
sub
hlt
xchg
adc
lock
cmpsb
dec
inc
lods
adc
sbb
push
pop
popa
in
outsl
jno
add
jg
xchg
sahf
xchg
sub
rcr
xchg
jns
stc
sti
leave
insl
pusha
sub
pop
rcrl
xor
jl
pop
push
int
jnp
gs
cmpsb
sub
testb
cmp
mov
sbb
xor
in
cmp
mov
and
std
push
fcompl
stos
fs
dec
push
sub
jle
iret
pop
and
mov
add
inc
xchg
unpcklps
xchg
repz
call
fdivs
lock
js
adc
and
aas
pop
lock
jg
stos
sti
gs
push
xchg
cmp
mov
cmp
int3
mov
lret
fcomps
mov
sub
xchg
jle
xor
sbb
daa
leave
sti
mov
mov
mov
and
dec
mov
or
add
add
lods
pusha
fstpt
int
enter
lods
std
jne
jle
jae
cmp
lods
sub
cmpsl
mov
push
inc
fmuls
pusha
sbb
xchg
sub
sub
int3
cmpsb
sar
ja
daa
mov
and
cltd
xchg
negl
xor
std
imul
sbbl
into
stc
pop
in
fsts
push
cltd
inc
pop
jge
mov
cmpl
pop
popf
lret
lods
pop
je
psrlw
xchg
hlt
cltd
ja
fistpll
mov
mov
sub
or
jae
cmc
push
out
xchg
insl
sbb
scas
jmp
mov
imul
jecxz
mov
fnstenv
lods
mov
mov
frstor
test
les
out
mull
jmp
add
sti
mov
nop
pop
inc
fiadds
cmc
and
clc
xor
or
xor
mov
xchg
sarb
or
xchg
sti
insl
in
xchg
and
adc
lea
das
inc
outsl
jmp
pop
int3
xor
movsb
inc
loop
mov
pop
enter
jg
mov
jb
dec
arpl
dec
dec
iret
cmpsl
push
repz
hlt
cmp
popf
mov
loop
ss
fs
xchg
xor
inc
ror
mov
add
hlt
push
mov
adc
mov
test
test
xor
test
shr
cmpl
jecxz
lods
mov
fnsave
jne
and
lahf
or
xchg
enter
andl
test
pop
and
and
xor
movsl
fscale
push
das
cld
push
mov
push
addl
cs
xor
push
repnz
sub
mov
mov
arpl
int
mulb
mov
inc
push
shlb
xor
rcl
xchg
cmp
or
pop
pop
clc
andb
mov
xchg
xchg
sbb
sub
out
adc
inc
in
sbb
addr16
xorl
loope
into
dec
rcl
scas
xlat
sbb
push
mov
pop
fimuls
and
ret
adc
fldcw
mov
xor
and
lods
push
pop
inc
inc
pop
mov
push
xchg
ret
adc
inc
push
aam
mov
cltd
popf
and
dec
test
sbb
xor
jno
es
jg
adc
ret
mov
stos
pop
aam
jne
jecxz
add
push
jae
cltd
cmc
and
aad
or
fadds
sbb
cmp
in
mov
shll
test
ja
popa
dec
je
in
lahf
sbb
stc
daa
fwait
movsb
movsb
sbb
xchg
lretw
and
xor
or
inc
shlb
insb
jl
push
cmpsb
xor
in
inc
rorl
xchg
jbe
mov
mov
dec
or
jae
cmp
sbb
addr16
xlat
test
mov
pop
in
enter
pop
insl
mov
scas
xchg
in
mov
mov
sahf
fistl
add
dec
cmc
cmp
lahf
fs
fcmovnbe
jno
xor
vpsubusw
push
mov
lret
jo
repnz
movsl
out
cli
push
pop
sub
sbb
add
aaa
cltd
orb
fdiv
les
cmpsb
adc
std
adc
stos
fdivs
xchg
lret
mov
sarl
dec
adc
or
cmp
shr
inc
push
lahf
mov
outsl
xchg
aad
subl
mov
jmp
jae
vmovdqu
lods
xor
outsb
dec
stc
sub
stos
lret
repz
daa
cmpsl
in
mov
mov
jp
rcll
dec
aas
sbb
jae
imul
pop
ja
mov
in
dec
movsb
push
jo
xor
out
sbb
std
push
xchg
dec
into
inc
pop
lea
int3
loopne
aas
mov
ljmp
orb
rclb
mov
push
in
and
popa
inc
cmp
jno
ror
push
adc
jle
pop
rorb
lds
add
pop
lods
ja
addr16
dec
jmp
and
mov
xlat
pop
add
or
xchg
lock
lcall
mov
lcall
add
cmpsb
repz
movsb
test
adc
mov
int3
pop
xchg
rcll
and
js
shlb
sti
sub
pop
sbb
mov
repz
lods
lods
insl
dec
enter
hlt
es
push
inc
pop
cmp
adc
xor
outsl
test
out
mov
push
adc
inc
rcrl
mov
and
cld
xchg
cmpsl
jnp
or
out
in
and
mov
stos
sub
mov
jno
pop
daa
sub
les
pop
pop
adc
jmp
pop
lret
inc
dec
xchg
and
push
popf
push
or
dec
jg
adc
dec
xchg
dec
stos
mov
sub
dec
pushf
pop
mov
xor
andb
xor
jle
int
pop
pusha
lcall
push
sarl
dec
enter
xchg
rclb
ficoml
push
negl
adc
arpl
cmpsl
fisubs
sub
fildl
pop
jbe
jne
dec
xchg
jns
stc
lds
xchg
mov
cmpsl
mov
jns
test
out
outsb
adc
cltd
pop
shll
inc
xchg
or
or
mov
jg
add
jl
cld
push
ret
add
leave
inc
in
loop
and
out
mov
xor
leave
mov
or
and
xor
or
pop
adc
fnstsw
es
adc
or
gs
mov
or
adc
pusha
es
mov
ret
inc
mov
mov
std
shl
dec
cmp
or
repnz
jnp
sbb
dec
mov
into
xchg
lock
xchg
and
fs
mov
daa
ds
jecxz
and
inc
int
psubsw
and
inc
pop
in
jns
mov
pop
adcl
xor
add
dec
add
cmc
or
loop
mov
pop
jp
sti
popf
mov
out
int
ljmp
jns
xchg
sub
jns
test
push
lea
lds
or
ret
xchg
xor
imul
cmp
and
cmp
aaa
cmp
cmc
arpl
outsl
das
out
out
sbb
imul
rcr
adc
int3
sub
sbb
pop
ficompl
sti
into
rol
push
in
popa
push
pusha
or
scas
or
pop
subw
xchg
push
popf
sub
cli
add
cwtl
or
leave
jp
xchg
out
pop
mov
cmp
pop
cmpsl
out
xchg
jl
loop
mov
fmul
xchg
rorb
popf
pop
jp
xchg
mov
and
data16
cmpsb
sbb
jbe
data16
mov
xchg
inc
adc
stos
jl
xor
loope
repnz
inc
lret
mov
enter
mov
push
xchg
xor
push
jnp
imul
fnsave
std
xorb
add
jbe
inc
loope
je
dec
mov
sub
stos
mov
outsb
insb
inc
xchg
sub
jecxz
sti
adc
push
mov
mov
add
xchg
int3
callw
cli
es
aaa
icebp
pushf
stc
xchg
mov
rcrb
aas
test
inc
xor
jnp
adc
fwait
add
dec
or
cmp
loope
push
es
inc
and
hlt
sti
sub
mov
sbb
inc
sbb
sbb
stos
push
insl
mov
stc
fcoml
rcll
add
repnz
imul
roll
mov
adc
inc
and
mov
incb
imul
sub
out
std
sbb
or
stos
iret
lcall
or
imul
and
pop
fidivs
xchg
ret
hlt
dec
mov
es
cli
mov
decb
arpl
imul
icebp
mov
add
int
mov
xor
push
outsl
in
fimuls
push
add
out
enter
pop
daa
dec
dec
push
das
in
push
adc
pop
inc
dec
sub
movb
mov
or
shl
mov
sub
das
addr16
push
mov
jno
aaa
sbb
stos
daa
inc
imul
xor
mov
jecxz
mov
lcall
cmp
mov
das
or
out
lahf
fwait
xchg
sti
stos
cmpsb
jecxz
outsl
test
pop
and
lock
out
push
std
jecxz
mov
insb
pop
test
push
pop
mov
sti
aas
adc
and
leave
in
call
stos
insb
std
hlt
cmp
xor
outsl
push
sbb
mov
or
mov
mov
cmp
es
mov
std
xchg
test
push
push
push
xchg
imul
or
add
cli
inc
mov
fdivl
or
and
hlt
comiss
cltd
mov
dec
sub
mov
sub
lret
dec
mov
ja
xchg
stos
jl
jne
or
stc
xor
shll
jle
xor
in
jp
inc
xlat
cmp
sub
ja
ret
push
scas
insl
cmp
rcrb
leave
cwtl
rep
dec
ljmp
lock
jg
mov
lret
and
lods
inc
rcr
mov
xchg
insb
in
push
shrb
outsb
bnd
mov
pusha
xchg
pushf
push
jg
es
push
test
sub
cmp
xor
int3
jl
les
iret
add
shll
ret
sbb
push
sub
xor
pop
dec
out
add
lea
lods
or
xor
out
sub
pushf
in
int
add
xor
pop
adc
mov
xchg
mov
adc
inc
mov
repnz
rcrb
out
fcompl
push
xchg
push
xchg
push
fsubrl
jo
aas
cli
nop
cmpb
jmp
pop
sbb
sbb
jo
and
inc
fstl
lods
fdivr
popa
sbb
fwait
int
aad
adc
xchg
imul
sub
xor
or
push
sub
sbb
cmpsb
jl
test
test
cmpsl
lods
mov
insl
add
rcll
or
jb
or
fdivr
or
xchg
pushf
push
mov
fisttps
inc
sbb
int3
test
enter
jns
je
or
xorb
pop
pavgb
js
cmp
and
mov
repz
adc
into
sub
dec
mov
adc
int3
inc
inc
divb
repnz
stos
mov
es
pop
pop
and
fisttps
stc
mov
loop
mov
imul
fsub
leave
mov
in
jecxz
ret
faddp
pop
mov
sub
push
push
js
lahf
mov
xchg
mov
mov
push
outsb
loop
xchg
push
xchg
xchg
dec
int
adc
xor
loope
fcomps
repnz
sahf
js
jmp
jmp
in
push
xchg
dec
or
pop
inc
loope
imul
mov
in
and
sub
fmull
clc
and
lret
ret
or
sbb
push
or
sub
inc
scas
push
add
jl
push
push
int
pop
adc
jbe
gs
pop
mov
stos
pop
inc
mov
xor
xorl
out
insl
or
mov
mov
mov
pop
adc
test
movsb
inc
push
xchg
data16
sbb
sub
jbe
aam
insb
push
int3
addl
dec
push
lods
leave
pop
or
xchg
and
add
insb
mov
push
imul
jnp
std
in
shll
mov
insl
fistpl
jns
fildll
jmp
lret
push
sbb
ljmp
test
pop
out
movsb
out
xchg
loopne
movsl
add
push
pop
outsl
mov
fisubs
aas
insb
push
repz
sub
push
or
sbb
xorl
aas
dec
cmpsl
shll
ffree
mov
stc
rcrl
xchg
lds
lret
push
pop
mov
pushf
mov
dec
add
mov
lret
add
das
inc
adc
mov
mov
sbb
movsl
scas
ja
mov
sub
cmc
mov
xchg
adc
jbe
pop
cmc
xor
daa
mov
fistpll
out
int3
mov
ret
das
jnp
shrb
ds
lea
add
or
int
mov
shlb
loop
test
test
ds
dec
adc
loop
and
incb
test
call
aad
pop
add
adc
aad
cmp
pop
inc
int
in
pop
inc
test
pop
xchg
hlt
mov
lahf
mov
xor
stc
add
mov
scas
lds
jp
subb
jecxz
inc
les
mov
dec
inc
cli
adc
xor
inc
je
shlb
jl
jno
push
ljmp
add
shr
mov
in
and
mov
sub
mov
and
mov
in
out
adc
push
xor
movsl
xor
int3
repz
and
pop
pop
stos
jmp
and
std
mov
mov
sub
rcll
xchg
mov
xchg
imull
test
mov
bound
and
xchg
jbe
sbb
rolb
lcall
fstp
mov
jge
mov
cwtl
or
jg
lods
outsb
insb
insl
sbb
andl
pop
mov
add
ds
xchg
enter
cmpsl
adc
bound
imul
add
pop
or
dec
push
mov
fdivr
inc
mov
push
pop
sub
pop
ljmp
into
mov
bound
cmpsb
xchg
aad
mov
add
aad
gs
pop
clc
loop
out
movsl
js
or
xchg
adc
js
mov
nop
xchg
cs
outsb
out
int
adc
mov
jo
mov
pextrw
and
shll
mov
mov
push
xor
mov
insl
dec
rolb
and
shll
fdiv
dec
hlt
and
cmp
xchg
addr16
push
call
pop
xor
sbb
jnp
and
getsec
xlat
inc
xor
shlb
add
aam
outsb
fidivrs
adc
inc
aam
or
push
pop
leave
rcrb
xor
loope
xchg
dec
leave
andl
fldt
xor
bound
stc
cli
lock
or
out
les
inc
push
pop
dec
jg
and
dec
sbb
add
loopne
sbb
or
cmp
sbb
jne
fdivp
xchg
pop
stos
orl
es
push
sub
pop
pop
sgdtl
lret
push
stos
imull
xchg
mov
hlt
mov
dec
jl
sahf
xchg
xchg
and
fisttpll
jne
rcl
nop
lret
xchg
cmpsb
sbb
mov
nop
cmp
add
leave
aaa
andl
fnstcw
enter
push
pop
and
inc
push
es
lea
or
mov
in
arpl
adc
loopne
cltd
cmp
lock
mov
lahf
sbb
psubd
push
adc
leave
push
idivl
lock
pusha
xchg
jp
mov
or
mov
mov
std
in
hlt
mov
popa
es
pop
popf
ja
or
fbld
arpl
jp
lds
push
insb
shrb
pop
lock
mov
mov
mov
cmpsl
enter
fcoms
xor
mov
and
jecxz
fsubs
jno
push
icebp
mov
xor
mov
mov
jge
outsl
fistpl
mov
mov
sbb
sbb
dec
or
pop
mov
and
inc
xor
lret
xor
push
clc
out
mov
adc
leave
mov
and
dec
sbb
or
lcall
mov
iret
aad
cwtl
outsb
mov
pop
push
mov
jb
stos
mov
jecxz
lea
fstpl
cmc
mov
cld
inc
and
sub
xor
roll
ss
fmull
pop
jae
fs
rol
pop
mov
loope
popa
pop
fs
iret
addb
and
pop
xchg
out
fsubrl
gs
pop
jl
int3
imul
fs
pop
int
fildl
inc
mov
lea
mov
push
xor
jmp
clc
cmpsl
push
sbb
imul
icebp
dec
push
jne
inc
hlt
xchg
sbbl
push
adc
mov
mov
add
or
push
push
and
test
mov
pop
mov
stc
mov
aam
xor
mov
cmp
xor
int
add
or
xor
inc
sbb
sahf
sub
cmp
add
sub
xchg
sbb
popl
xlat
dec
aas
es
jo
push
mov
sarb
cmc
dec
or
int3
xchg
push
cmp
cmp
jnp
jmp
xchg
daa
mov
fiadds
cmc
xor
movsl
hlt
adc
mov
cmp
loop
xchg
data16
jae
jl
cli
jno
scas
daa
cmpsl
les
sub
xor
dec
fists
lret
ret
push
add
movsl
cmp
pushl
cmp
lcall
jnp
xchg
jo
mov
and
fsubrs
nop
jg
sbb
cmp
bnd
pop
in
mov
popf
stos
lds
pop
loope
xlat
xor
ficomps
sub
jmp
xlat
imul
add
daa
mov
pop
in
dec
mov
daa
jbe
push
bnd
out
lea
sahf
xor
jmp
push
fsubs
cmpsb
dec
push
sub
lcall
inc
test
shrb
jl
das
repnz
out
xchg
sbb
sbb
cld
fwait
clc
enter
aam
test
jmpw
cmp
xor
out
xor
iret
insb
pop
in
iret
dec
shr
mov
pop
cmpb
adc
and
push
out
std
lds
inc
insl
nop
icebp
jae
mov
add
add
into
adc
loopne
cwtl
test
jno
jb
jae
push
sbb
xor
ljmp
xchg
insl
mov
mov
std
mov
mov
push
xor
repz
mov
mov
push
hlt
cmpsb
bound
shrb
insl
aaa
inc
xchg
loopne
lahf
test
xchg
roll
sti
das
pushf
sub
fstl
jg
mov
cmc
mov
pushf
scas
sub
pop
lcall
fwait
daa
insl
pop
dec
es
pop
jnp
rcll
and
xchg
and
xorl
int
idivl
xchg
repz
or
daa
or
mov
scas
loop
xor
int
mov
sub
push
shlb
addb
mov
inc
mov
mov
sub
cmp
lcall
xor
xlat
lods
push
testb
and
adc
scas
insb
fnsave
je
adc
push
mov
nop
mov
lods
inc
inc
push
in
mov
xchg
movsb
cmp
push
loop
adc
xchg
and
sub
mov
mov
sbb
mov
sbb
repz
pop
mov
int3
pop
jne
add
and
mov
or
sub
add
mov
mov
mov
in
pop
mov
addl
pusha
mov
es
ss
inc
sbbl
sbb
loope
add
xchg
out
add
pop
adc
or
xchg
lcall
dec
pop
cmpsb
ljmp
subb
jle
mov
sbb
lds
js
adc
add
insb
js
int
sbb
pop
inc
inc
cmp
inc
sti
push
xchg
insl
add
pop
push
mov
sub
or
cmp
icebp
mov
movsb
int3
jb
pusha
cld
addr16
cmovno
popf
adc
cli
sub
jp
mov
jp
lods
hlt
aaa
or
stos
cwtl
notb
xchg
test
ret
mov
jb
adc
inc
inc
jmp
xor
mov
mov
insl
pusha
or
jne
insl
push
jecxz
lret
loopne
daa
push
push
fiaddl
push
jae
mov
stos
lea
pop
pop
xor
out
pop
mov
sbb
push
jl
pop
jmp
fimuls
stos
sbb
sbbb
clc
imul
js
pop
jmp
sub
daa
or
push
iret
jecxz
pop
sub
scas
loopne
xchg
inc
mov
ret
xchg
test
push
mov
sub
jbe
pop
movsb
and
jo
push
dec
inc
or
or
and
push
int3
cwtl
or
xor
adc
cmp
es
rol
sbbb
cli
nop
jp,pt
and
shll
dec
push
dec
push
insb
mov
sbb
lock
in
pop
les
xchg
and
push
stc
xchg
sub
sbb
adc
push
cmp
cmp
icebp
ja
or
push
xchg
mov
push
sbb
mov
andl
out
mov
insb
mov
mov
int
or
mov
xor
adc
arpl
adc
std
ret
add
jae
jge
sahf
push
daa
pusha
ljmp
jb
cli
stos
in
cmp
dec
push
icebp
or
jno
cmpsl
dec
insb
cmp
xor
mov
ds
mov
movsb
inc
xor
sahf
cmp
xchg
enter
cld
cmpsl
dec
pushf
jb
sbb
jmp
mov
and
dec
cmp
mov
push
or
inc
push
imul
jne
xor
popa
sbb
ds
xor
lret
sbb
push
sub
mov
cwtl
dec
or
adcb
gs
fs
cmp
outsb
sbb
fistpl
xchg
mov
mov
xchg
outsb
mov
lret
movsl
mov
xchg
rclb
sub
fisubrs
mov
test
dec
outsb
cltd
aas
inc
test
mov
xchg
pop
loop
fistl
or
aaa
fsub
pop
sbb
jecxz
cmp
jp
cwtl
jge
push
or
jae
std
dec
ja
dec
mov
lods
fnstenv
mov
push
xor
and
in
pop
rol
test
aad
imul
outsb
imul
mov
cmp
jbe
cmp
aas
mov
mov
xchg
mov
mov
mov
jecxz
movsb
mov
in
out
pop
mov
popa
stos
dec
and
sub
lock
aaa
out
push
mov
in
loop
adc
scas
faddl
sbb
pop
aad
xchg
sarb
xor
dec
fcompl
rcl
jb
stos
push
add
out
xchg
mov
fsub
xlat
and
mov
cli
icebp
xorb
lods
fistpll
jecxz
les
cltd
daa
dec
sbb
fidivrs
repnz
inc
lods
fadd
adc
xchg
cwtl
imul
fildll
or
imul
mov
sbb
mov
leave
jbe
popa
repnz
mov
out
jns
int
ret
adc
or
int3
or
add
inc
fwait
data16
jl
and
dec
or
push
fstl
divl
dec
jno
and
popf
lock
aas
addr16
mov
push
jecxz
lods
movsb
ljmp
mov
inc
out
iret
jmp
cmp
dec
popa
adc
mov
dec
popa
and
xor
lds
mov
jp
xchg
and
test
push
icebp
adc
xchg
jnp
dec
dec
icebp
lcall
xor
pusha
xchg
outsb
mov
call
pop
cmp
ja
pop
orb
cmp
or
ret
imul
stos
scas
sbb
movsb
stos
xlat
sahf
push
pop
cmp
sub
mov
mov
stos
dec
push
push
idivb
jo
push
dec
push
pop
in
aam
popa
adc
jmp
mov
add
aas
add
movsl
mov
loope
inc
mov
dec
imulb
mov
lock
inc
ss
push
rorl
insb
add
movsl
lods
aam
aas
repnz
jl
fldl
scas
je
in
mov
sbb
mov
sbb
shlb
adc
daa
lcall
ljmp
xor
dec
lret
maxps
lods
sub
cmp
je
dec
jl
adc
pop
sub
dec
xchg
data16
bnd
cmp
es
in
xor
lahf
or
insl
xor
or
clc
ljmp
and
test
rolb
push
lea
dec
rcll
add
push
adc
xorl
mov
sbb
xlat
shl
dec
add
sbb
cmc
mov
fdivrs
insl
cmp
push
mov
pop
lock
in
xchg
add
adc
lds
inc
stos
xchg
aad
leave
push
pop
adc
test
mov
jne
push
faddl
cld
push
out
out
clc
or
push
sbb
bound
pop
pop
fdivrs
in
and
cwtl
and
xchg
fsubr
mov
mov
sub
scas
aas
push
leave
jne
mov
test
mov
mov
dec
push
sbb
fsubl
jl
mov
sbb
mov
pop
push
fildl
in
jmp
enter
clc
pop
sahf
nop
jns
inc
das
popl
ja
movl
jne
stos
roll
ret
mov
lods
pop
adc
mov
imul
es
andl
test
ret
inc
push
iret
nop
arpl
cmp
push
adc
jge
sar
rolb
xchg
adc
add
push
dec
mov
mov
or
sub
es
cs
jp
mov
mov
sub
test
js
mov
and
push
sub
cltd
lock
pop
es
push
fsubl
pop
push
mov
lret
mov
sahf
scas
repz
daa
rorb
and
in
add
repnz
mov
cmp
sarb
push
mov
mov
fnstcw
adc
call
and
add
int
fucomi
lods
neg
add
cwtl
loope
out
pusha
imul
outsb
data16
mov
addr16
adc
les
fwait
pushf
xorl
mov
add
xchg
cld
sbb
xor
ljmp
xor
or
dec
fs
push
cltd
popf
add
mov
add
call
jnp
stos
sub
les
fbld
arpl
push
fidivrl
data16
cli
cmp
jmp
imul
xchg
xchg
leave
push
lods
subl
jno
repz
call
sahf
ret
pop
pop
inc
outsb
cmp
or
sub
repnz
xor
mov
jge
movsl
jns
cmp
ret
mov
xor
loop
jg
lcall
stos
mov
adc
cmp
stos
mov
imul
or
xor
push
sub
in
lret
test
cmpsl
lods
outsl
fstpl
sbb
mov
xlat
addr16
fsubrl
lock
outsb
pusha
dec
dec
xchg
dec
mov
shr
pop
inc
pop
icebp
mov
or
sub
xlat
fldt
aas
push
out
les
sub
andl
and
push
cwtl
or
xchg
add
insl
fistl
mov
pop
les
bound
jns
xchg
and
repz
xor
and
sahf
flds
outsl
pop
mov
ret
mulb
push
icebp
and
sar
add
pop
push
in
dec
inc
or
sahf
push
int3
mov
jo
add
arpl
rcrb
dec
inc
adc
inc
mov
adc
jg
in
in
fdivs
lcall
or
mov
cltd
lea
sbb
mov
xor
lock
mov
push
leave
mov
movsl
fiadds
jnp
dec
push
xchg
sbb
call
cmp
gs
push
inc
cmp
xor
addb
test
lahf
out
xchg
in
jmp
ret
jmp
cltd
xor
add
ja
xchg
add
fidivl
cmp
fucom
pusha
cmp
scas
jg
dec
es
mov
fstp
adc
mov
enter
sti
mov
lcall
ds
sbb
adc
and
ja
dec
xchg
jge
rolb
dec
fldcw
in
jle
xor
aad
outsb
filds
or
dec
shll
dec
mov
pushf
jo
sub
enter
xchg
je
cmp
in
test
repnz
andl
aad
pop
rcrl
xchg
inc
adc
pusha
repnz
mov
push
jl
cltd
pop
push
mov
jl
ror
sbb
mov
pushf
neg
inc
inc
pop
jne
iret
stos
out
sbb
mov
pop
ret
das
icebp
push
dec
mov
xor
pop
xchg
ret
jmp
mov
xor
or
inc
lods
icebp
in
pop
push
lock
lea
push
inc
das
insl
mov
data16
sub
xchg
lret
cmp
jnp
scas
add
mov
jp
fistl
mov
xchg
add
pop
mov
mov
pop
aaa
xchg
inc
or
jge
pop
push
outsb
dec
dec
ds
adc
pop
mov
mov
and
das
nop
mov
xor
jl
hlt
mov
adc
pop
in
stos
mov
fnstsw
or
cltd
jmp
jns
adc
nop
lahf
sbb
out
in
pop
repz
jecxz
cmp
pop
lods
shlb
pop
cmpsb
int
push
leave
cmp
xchg
jg
out
shl
xor
jecxz
and
add
push
xor
jb
xchg
dec
mov
push
or
jecxz
test
xchg
aas
and
mov
push
adc
xchg
adc
stos
sti
notl
dec
gs
rol
fld
sbb
hlt
xlat
dec
xor
jg
dec
jo
add
in
push
cmp
mov
xchg
dec
fstl
loop
and
fadd
in
in
lock
arpl
cmp
dec
in
and
jns
pop
xchg
test
jmp
aad
pop
add
outsb
mov
mov
xor
or
ja
fwait
sub
rorl
nop
cmp
insl
dec
les
dec
mov
or
sub
inc
push
psraw
dec
fwait
xchg
in
scas
addr16
sahf
jno
addr16
mov
cmp
mov
popf
lcall
pop
js
pusha
icebp
sbb
outsb
mov
outsl
ss
hlt
cwtl
dec
std
in
pop
xlat
sub
and
ret
loopne
jl
dec
popf
cmp
jmp
and
rorb
mov
arpl
js
inc
xor
bound
push
inc
das
fs
repz
inc
ja
out
inc
in
cmpsl
dec
scas
cmp
dec
cmc
pushf
les
daa
test
test
push
fiaddl
xchg
sbb
ja
inc
or
lret
dec
and
subb
test
xchg
pop
push
pop
test
xchg
xor
mov
sub
xchg
stc
repz
push
in
subb
pop
or
push
and
xor
xor
cmpsl
dec
ret
ret
inc
sub
in
test
xchg
sbb
fidivrs
mov
mov
dec
pop
movl
mov
outsb
xchg
pop
lahf
scas
lret
jae
fistps
and
sbb
xor
ja
adc
inc
cmp
int3
mov
xorb
lahf
addl
pop
jbe
sbb
pop
hlt
inc
sub
lock
test
jl
jge
sbb
add
scas
cmp
cld
pop
jp
popa
lcall
mov
repz
lods
stos
repnz
in
mov
stos
pop
push
dec
mov
push
push
sub
dec
in
adc
lret
xchg
xor
mov
push
imul
jle
test
adc
pop
fisubrl
rcr
int
adc
mov
enter
mov
call
daa
mov
fists
xchg
fimull
call
out
jbe
fidivrs
mov
cmp
xchg
adc
or
add
or
test
adc
mov
cs
leave
push
inc
xchg
cmp
ja
jl
sbb
add
pop
pop
xchg
push
dec
outsb
and
addr16
repz
push
or
xor
popf
xchg
and
add
xlat
mov
shlb
mov
push
test
lahf
mov
sub
mov
and
imul
add
add
into
pop
sti
loopne
out
adc
push
enter
fidivrl
shrb
xor
xchg
or
mov
and
jno
cmpsl
outsl
jp
scas
inc
dec
pop
xor
inc
sub
test
inc
and
mov
mov
loopne
mov
test
pushf
mov
popf
jmp
fidivs
sub
jnp
cmp
mov
testb
aas
bt
mov
xlat
movsl
pop
pop
mov
dec
jb
xlat
mov
sub
mov
int3
int
dec
mov
jl
test
and
shrl
test
test
jbe
out
push
xchg
ret
push
ret
mov
stc
repnz
mov
in
jge
dec
xchg
adc
mov
sarb
and
mov
pop
mov
and
push
inc
mov
cmp
mov
fmuls
incl
adc
sub
arpl
xor
test
inc
in
mov
fists
jmp
cli
jge
xchg
lcall
pop
jbe
or
aam
add
decl
popf
sbb
popf
das
outsl
sbbl
test
push
inc
sub
fwait
jecxz
pop
jne
in
inc
cmp
jbe
push
xor
or
lret
leave
enter
out
icebp
shrb
shlb
testl
jg
cld
aad
loope
nop
pop
stc
fildll
pop
jge
in
push
aad
pop
rcrb
mov
sbb
outsb
jnp
popa
cmp
push
or
push
and
lods
lds
xor
push
and
rcrl
push
xchg
cmp
call
cmp
mov
mov
push
addr16
inc
mov
ss
stc
shlb
fidivs
call
sbb
inc
add
ffreep
test
int3
sub
lahf
shrl
add
shlb
leave
jo
roll
pop
sub
dec
and
cmp
push
add
shl
ror
dec
ret
dec
sti
popf
mov
mov
imul
and
fcoml
cmp
je
mov
in
dec
orl
addr16
stos
call
leave
test
dec
cwtl
ret
addr16
xor
lret
xchg
sbb
mov
nop
fcompl
xchg
pop
cmp
sub
imul
aam
hlt
inc
adc
repnz
mov
pusha
lret
test
clc
cmpl
jg
mov
inc
fadds
pop
adc
mov
lret
cmp
lcall
call
or
xchg
insl
or
stc
push
dec
sti
arpl
xor
icebp
insb
addr16
pop
sub
rcr
inc
adc
lret
pushf
ljmp
out
mov
lods
leave
cmp
push
ror
and
dec
cmp
lcall
mov
jecxz
xor
mov
lcall
lods
cmpsl
mov
mov
ret
scas
mov
hlt
ja
push
inc
mov
mov
and
jno
xchg
lret
push
addr16
sub
fldenv
incl
cmp
mov
sub
aaa
jecxz
in
xchg
sti
mov
cmp
into
push
loope
jne
movsl
out
push
shlb
push
out
push
pusha
pusha
sbb
jl
xchg
mov
cmp
xor
add
xorb
push
cmp
jnp
cmpsb
and
mov
jle
mov
leave
adc
xor
pushf
into
adc
xchg
ficomps
lock
or
sub
pop
sub
cmp
dec
dec
sbb
mov
lcall
push
cli
and
jb
fisttpll
test
stos
std
popa
lcall
insb
jmp
dec
pop
jg
cmc
testb
sbb
and
xchg
jecxz
in
sbb
add
adc
insb
cmpsl
aam
int3
test
mov
dec
jp
push
xor
pusha
std
cmp
xchg
fimuls
push
mov
adc
test
fimull
sub
bound
test
push
mov
jo
sub
fnstsw
outsl
insl
cmp
xor
xchg
lahf
cmpsl
push
movsl
add
push
and
pop
fmull
jp
scas
out
jmp
ja
nop
popf
jle
adc
jle
int
jo
or
out
out
cltd
fcmove
pop
pop
cmpsl
adc
push
jae
lea
stos
lods
pop
test
mov
push
and
xlat
out
addr16
stos
cltd
mov
sub
pop
mov
inc
lret
inc
xchg
sahf
cmpsb
push
arpl
dec
je
cmp
mov
sbb
inc
scas
ss
cmp
sbb
pusha
xchg
mov
scas
pop
cltd
addl
adc
shll
aas
push
sbb
rcl
call
inc
sub
pop
sub
loop
jne
inc
pop
or
push
leave
int3
pop
imul
or
add
xchg
jmp
jne
sahf
rcr
out
pop
xor
and
mov
or
jno
adc
xchg
jns
sbb
jne
jne
add
cmp
fistl
es
sbb
add
es
aaa
xor
inc
push
movsl
sbb
dec
out
xchg
dec
jb
out
add
pop
into
pop
pop
sub
je
push
mov
or
mov
sub
add
inc
shll
out
pop
push
push
in
xor
imul
sub
sti
mov
dec
mov
fistl
pop
enter
mov
inc
inc
dec
add
inc
xchg
pop
lea
dec
call
mov
xchg
aaa
and
mov
std
cmp
ljmp
mov
cmc
jbe
das
xchg
mov
dec
xor
es
aaa
leave
sahf
bnd
adc
jg
dec
fists
fidivs
mov
hlt
repz
and
xchg
mov
cmp
aaa
mov
movsl
adc
rorl
jnp
ret
stc
hlt
xchg
out
add
in
and
sti
push
incb
mov
add
lret
outsl
fwait
push
add
add
pop
ds
jge
nop
mov
shlb
sub
lret
xchg
or
ds
aaa
push
adc
jmp
pop
cmp
repz
push
mov
inc
and
inc
add
xchg
mov
ret
xlat
sub
pusha
and
lcall
xchg
jl
ret
sbb
gs
stos
jge
jo
inc
into
dec
aaa
call
dec
sub
jecxz
sbb
add
mov
imulb
daa
in
movntps
mov
dec
fs
pop
cmp
or
cmp
adcb
jno
dec
inc
fwait
xorb
sahf
dec
jne
ja
jnp
fwait
push
out
jo
mov
dec
dec
pushf
mov
jecxz
std
outsl
pop
pusha
lret
jge
outsl
mov
data16
outsb
inc
jl
and
dec
pop
push
es
shll
dec
hlt
test
push
mov
or
adc
xchg
ja
ret
mov
cli
and
loop
push
sub
or
fwait
insb
rol
in
lds
imul
iret
popa
cmpb
ds
and
jmp
mov
aam
stos
mov
sub
xor
repnz
xorl
mov
sub
mov
mov
xchg
push
mov
jnp
cwtl
popf
in
dec
repz
dec
add
lock
stos
jle
xor
push
cwtl
leave
loop
ja
adc
mov
add
std
insb
or
inc
mov
mov
aas
repz
dec
addl
inc
scas
mov
into
or
lea
cmp
nop
push
out
inc
xchg
pop
mov
sub
aaa
in
mov
int
and
jp
sub
sub
or
lret
or
lret
jmp
movsb
xchg
cmp
out
inc
cmpb
repnz
loop
stos
popa
cmp
cmpsb
out
sub
inc
xor
push
shll
shrb
movsb
icebp
adc
int3
insl
xchg
mov
xchg
jmp
call
aam
xor
fistl
dec
test
popa
fwait
inc
pop
cmp
cmp
add
jg
mov
and
divb
pop
and
in
mov
adc
sub
push
aam
lea
xchg
adc
jno
dec
mov
outsl
movsl
and
aad
xchg
push
insb
xchg
test
je
adc
jae
mov
jnp
lock
push
rcr
pusha
sbb
mov
lahf
pop
dec
inc
aas
or
in
mov
mov
std
sahf
pusha
sbb
push
sti
xchg
das
xchg
out
mov
jmp
dec
push
sub
inc
cli
push
mov
mov
xlat
stos
les
add
lahf
outsl
test
xor
dec
mov
mov
mov
pop
push
sbb
xor
xchg
jb
adc
movsl
inc
pop
sbb
dec
testb
test
mov
sbb
push
test
test
jp
jns
mov
push
insl
in
or
mov
add
cld
loop
fildll
sub
xchg
addr16
test
pop
xor
icebp
fmull
aas
ret
imull
popf
xorb
push
pop
clc
pop
or
xchg
jae
jns
int
adc
and
ret
dec
add
mov
int
imulb
and
mov
push
lods
out
xchg
dec
push
jnp
mov
sti
xchg
push
subb
inc
jp
mov
or
cmp
pop
mov
fdivs
loope
xchg
mov
call
or
lret
xor
fidivl
arpl
cmp
mov
daa
and
scas
movsb
rorl
fs
xor
sub
cltd
and
inc
adc
iret
pop
repnz
daa
jo
xchg
add
push
cmp
in
mov
pop
imul
mov
clc
mov
test
fcomip
pushf
push
jnp
and
add
outsl
jg
sbb
xor
sar
jbe
fisttps
cmp
pop
mov
ja
and
in
pusha
cmp
daa
in
jbe
push
push
add
in
cwtl
hlt
negb
nop
jl
sbb
out
ds
shll
push
and
rcl
setnp
sahf
hlt
nop
hlt
cmp
push
cmp
push
xor
xlat
rcrb
scas
sub
sahf
gs
cli
or
mov
adc
push
test
inc
mov
addr16
mov
pop
jecxz
xor
and
mov
pop
push
fcoml
imul
xor
rcll
xor
test
ja
imul
lods
out
adcl
xchg
push
mov
js
jle
es
pop
call
loope
adc
stos
and
lahf
xchg
or
subb
cwtl
xchg
or
inc
inc
imul
add
add
hlt
cmp
aaa
loopne
mov
sbb
imul
adc
sbb
leave
push
repz
bound
xchg
xor
dec
xchg
mov
lds
jne
testl
daa
pop
inc
imul
pop
shlb
xor
mov
adc
cltd
loope
std
or
jle
adc
rclb
adc
fchs
pop
fwait
jecxz
jnp
shl
popa
sbb
mov
push
loopne
mov
imul
rolb
loope
adc
repnz
lods
jne
xchg
xorb
dec
inc
add
pop
jecxz
sbb
xor
sbb
aaa
shlb
nop
mov
outsb
imul
and
xchg
or
mov
stc
repz
adc
movsl
stos
xor
xlat
bound
push
mov
inc
mov
sub
leave
ds
add
aam
outsl
push
xor
jb
dec
ret
cld
pop
addr16
cwtl
data16
movsb
iret
xchg
pop
mov
aad
addr16
jge
dec
inc
out
sarb
and
or
mov
fldcw
fdivl
inc
div
mov
xchg
cmpl
xor
test
dec
repnz
imul
mov
leave
adc
xchg
lds
push
loopne
loopne
in
repnz
sub
loop
dec
lods
sub
aas
sbb
jecxz
mov
sbbb
lock
xchg
ret
stos
fsubp
test
outsl
lods
mov
idiv
notb
les
scas
mov
rorb
push
and
cld
xor
ljmp
xchg
jmp
lock
sahf
idivl
test
push
repz
inc
clc
cmp
test
rcrb
inc
mov
push
ljmp
jg
mov
mov
or
jb
loope
add
xor
mov
lahf
ja
cld
inc
xchg
mov
enter
enter
popa
push
jae
jnp
adc
popf
mov
mov
call
pop
ret
push
jbe
or
xor
add
and
xor
jmp
cmp
das
mov
push
fs
xchg
outsl
movsl
ficoms
dec
in
rorl
mov
jl
add
movsl
mov
sbb
ljmp
pop
pop
sub
in
enter
mov
fchs
stc
jo
ret
jp
xchg
push
addr16
popa
fnstsw
cmp
and
jns
jp
addr16
xchg
push
mov
mov
lret
push
fisubrs
sbb
pushf
insl
mov
sahf
jbe
fwait
and
orl
xor
fsubr
inc
scas
inc
std
xor
filds
popf
fidivrs
in
and
or
and
xchg
adc
xchg
stos
test
std
inc
pop
in
arpl
push
aam
lret
insb
xchg
mov
or
push
add
mov
sbbl
bound
insb
cld
mov
mov
cld
sub
sbb
push
lret
gs
shlb
lahf
push
sbb
cmp
mov
xor
push
fmull
jl
add
xor
push
sahf
sar
lock
xchg
loope
insb
pop
mov
int
iret
add
sbb
or
fbstp
stos
cli
aam
fs
inc
push
and
mov
sbb
adc
push
add
pop
pop
inc
pusha
mov
pop
xchg
ja
ds
int3
lock
dec
out
mov
popa
loopne
cmpb
mov
dec
cmp
insb
add
and
fistpll
lea
sbb
jp
cmp
push
ja
out
ret
xor
pop
lock
adcl
fstp
pop
cli
jg
pusha
mov
or
sub
inc
subl
movsl
roll
fsubs
jne
jmp
cwtl
insl
mov
xchg
cmc
mov
jmp
push
push
mov
gs
fistl
push
fmuls
mov
jbe
inc
in
and
pop
push
or
sub
shll
inc
xor
add
pop
hlt
sub
fbstp
mov
and
mov
xchg
pop
fsubp
and
loope
cmp
pop
ss
mov
rcl
out
in
lods
stc
and
fcmove
aaa
cmpsb
out
lods
bound
mov
jge
fcoms
cmpsb
push
lret
xor
daa
inc
mov
xor
ret
cmp
aaa
out
pop
fs
cmc
lea
andb
pop
sbb
mov
inc
fs
lds
rcrb
fnsave
cs
js
inc
pop
in
pop
call
out
dec
xchg
cmp
pusha
data16
fstps
adc
cmp
test
or
jmp
cmp
loop
and
lret
sbb
lods
lock
inc
ja
shlb
jg
add
cmp
in
mov
aad
jge
jo
xor
addr16
mov
int3
xchg
mov
pop
push
shl
in
lcall
and
fmul
inc
pop
mov
sub
pop
repnz
mov
movl
jmp
into
notl
or
add
out
gs
lods
sti
aaa
inc
inc
mov
pop
dec
testl
int
fdivrp
or
cwtl
movsl
sbb
dec
xchg
outsb
xchg
notl
adcb
and
rcll
iret
adc
xor
pop
sarl
lret
out
jmp
std
sbb
into
add
mov
pop
jmp
pop
movsl
xor
dec
jno
test
ret
mov
int3
movsb
ss
repnz
lods
jae
mov
push
xchg
arpl
jmp
fs
fwait
cmp
and
xlat
jbe
add
dec
adc
inc
in
jnp
sbb
das
and
sahf
stos
and
push
aaa
jmp
movsb
push
and
push
ja
jge
jns
push
xor
lods
andl
outsb
jno
jne
push
pop
ret
mov
sub
sbb
sub
inc
lahf
jb
jl
mov
out
pop
lods
push
in
fcoms
pop
loopne
add
push
push
hlt
xchg
pop
pop
test
xchg
out
sbb
pop
fwait
mov
fcmovnu
lcall
test
jnp
or
push
xchg
pop
and
rcrb
hlt
aam
push
jle
ja
std
pop
xor
notl
push
fs
sub
test
pop
outsl
mov
sub
inc
push
fucom
mov
ss
jns
mov
sbb
and
pusha
push
popf
xchg
or
out
pop
cmp
mov
xchg
add
in
lods
sbb
adc
sub
fisubrs
dec
cmc
dec
add
pusha
fiaddl
sbb
cld
jge
aas
cmp
push
das
mov
sub
popa
cmp
pop
shll
pop
std
insl
movsl
sbb
jo
adc
sarb
inc
stos
mov
xor
xchg
outsb
bound
icebp
jl
push
push
movsb
shrb
or
loopne
push
mov
jmp
mov
loopne
cmp
cmc
das
mov
cmovns
test
sbb
sub
or
xchg
in
dec
imul
cld
inc
popf
push
adc
dec
xor
cltd
rol
fildl
lret
jno
andl
dec
dec
cld
aas
fnstenv
cmp
or
xchg
mov
inc
jns
or
aam
and
xchg
sub
dec
mov
push
sbb
push
adc
xchg
push
lock
repz
mov
mov
daa
mov
adc
test
sbb
mov
add
nop
hlt
imul
test
adc
or
xchg
ret
and
sbb
dec
sbb
loop
test
sti
addl
negb
mov
dec
pop
lret
cli
clc
stos
cltd
inc
add
mov
mov
cmp
insb
add
pop
lret
stos
jb
inc
pop
add
leave
ficomps
xorl
cmp
addr16
dec
incl
jg
sbb
mov
sub
cwtl
sbb
mov
outsl
in
into
rorb
pop
cs
push
inc
or
mov
cld
aas
adcl
jmp
fdivrs
cmp
repz
or
jmp
js
aaa
lods
jne
lods
shll
push
cli
push
sbb
mulb
push
cmp
xchg
and
push
inc
cmp
negb
dec
sbb
mov
inc
lea
fidivl
jns
push
dec
jns
dec
jl
cmp
inc
mov
inc
xor
xor
cmp
push
mov
sub
mov
out
xlat
je
mov
jp
push
and
clc
adc
jmp
clc
xchg
cmp
cmpb
outsl
sub
test
xchg
or
push
or
sbb
out
sbb
pop
xor
fs
mov
mov
dec
adc
or
cwtl
mov
mov
in
mov
lods
movl
pop
out
in
or
jo
cli
mov
push
ljmp
cmp
pop
into
insb
cmp
dec
mul
fisubl
pushf
les
dec
xor
in
int
mov
adc
cmp
jnp
outsb
push
mov
mov
dec
inc
jnp
test
or
jp
mov
mov
leave
hlt
lcall
aas
xchg
push
scas
es
push
mov
scas
outsl
sub
cli
hlt
and
sbb
and
sarb
mov
xor
cmpsl
test
sub
xchg
sti
adc
fwait
and
pop
mov
push
push
leave
insb
daa
cmp
jp
negl
push
mov
aad
inc
insl
mov
mov
or
inc
call
psubb
icebp
jb
imul
xchg
add
xor
fmulp
add
out
dec
pop
jge
pop
pop
stos
adc
daa
mov
popf
jns
sub
test
sub
jb
sbb
insl
jmp
es
call
xchg
push
cmp
mov
add
cmc
inc
sbb
mov
and
cwtl
pop
in
cmp
push
in
push
inc
insl
das
daa
icebp
in
shll
adc
pop
out
rcll
jg
fsts
push
xor
adc
mov
xchg
mov
mov
movsb
adc
push
pop
dec
bnd
xchg
hlt
out
imul
sbb
xor
adc
es
stos
xor
inc
add
jg
cmp
dec
je
test
cmpsl
aaa
adc
xchg
shll
mov
jnp
cmpsb
int
adc
call
adc
lret
xchg
sub
out
push
mov
sbb
xor
pop
insl
pop
test
sbb
ret
sti
repz
jle
adc
mov
outsl
arpl
pop
sti
stos
sub
stos
shlb
test
or
leave
pusha
pushf
in
cmp
addl
arpl
dec
mov
fmul
lea
jb
repnz
sbb
mov
jecxz
sti
xor
fs
movsl
scas
in
xchg
pusha
xchg
or
or
add
jno
pop
ret
xor
ror
jno
xchg
pop
lret
add
sbb
stos
dec
in
lods
dec
sti
cli
inc
insl
fstl
jp
push
mov
add
xlat
pop
jge
imul
loop
das
ret
incl
into
mov
idiv
mov
pop
scas
int3
xchg
xchg
lcall
xchg
cmp
or
popa
push
pop
jmp
rclb
arpl
adc
cli
sarl
sub
inc
testb
xchg
jns
or
iret
stos
inc
nop
xor
inc
fbstp
jae
mov
adc
mov
test
cmp
roll
divw
out
jno
out
hlt
mov
ja
cmc
add
lcall
dec
stos
repz
xchg
push
repz
xchg
insl
sbb
addr16
dec
stos
cmpsb
aaa
lea
int
data16
sbb
add
addr16
push
mov
loope
mov
and
xchg
add
aaa
dec
pop
sbb
cmpsl
rcrl
fwait
int
cmp
adc
movsb
cmp
cmp
outsb
add
mov
les
cli
xchg
int
stos
adc
leave
push
cmp
lock
push
sub
mov
inc
pusha
fmuls
sbb
mov
sub
je
sti
mov
out
cmpsb
xor
xchg
mov
fisttpll
add
adc
push
push
lea
mov
test
mov
sti
cli
movsb
lea
mov
js
push
xchg
aad
scas
jl
call
xor
insb
xor
cli
mov
pop
inc
gs
cmp
scas
pushf
sbb
stos
jbe
push
sub
gs
nop
nop
out
test
sub
jg
mov
daa
push
dec
mov
pusha
xor
data16
push
adc
dec
cld
mov
sbb
and
sub
lods
js
or
jbe
pop
xchg
repz
arpl
jo
outsl
sbb
iret
js
xchg
sub
lea
loop
or
in
rorl
inc
sbb
dec
mov
movsb
push
out
mov
icebp
jnp
xor
push
sub
call
sahf
mov
push
clc
mov
inc
dec
jo
dec
rcl
adc
sub
imul
test
outsb
insb
pop
mov
sbbl
dec
xlat
push
push
fcompl
fsubrp
jnp
xchg
pop
dec
stos
ljmp
sub
pop
jmp
mov
sti
rorl
xchg
cmc
aam
lods
inc
mov
jle
testl
xor
lret
ret
mov
dec
dec
xchg
popf
jo
pop
sbb
imul
sbb
loope
inc
or
les
test
cmp
xchg
fchs
and
imul
cli
pop
sbb
adc
push
push
xor
jns
popf
or
cmp
ret
gs
fs
mov
mov
sub
je
pop
cmp
ds
inc
add
mov
push
or
mov
cwtl
push
mov
add
xor
mov
inc
push
cmp
cvtdq2ps
lret
jns
into
inc
sbb
inc
test
inc
sbb
dec
ja
pushf
faddl
xor
in
jo
scas
pop
add
sbb
ret
adc
ds
mov
lods
mov
jo
lea
in
sbb
adcl
add
aad
test
xchg
cmpl
stos
enter
jno
dec
in
cmpsb
sub
fcmovu
in
sub
inc
lods
inc
jl
inc
push
cwtl
ja
mov
stos
cwtl
arpl
movsb
and
adcb
xor
imul
pusha
ja
cmp
xorb
jle
mov
shll
lods
std
add
outsl
addr16
mov
lret
js
hlt
sahf
dec
push
inc
xchg
push
in
dec
ss
scas
and
scas
push
cmpsb
orb
pop
sub
xchg
cmpsb
in
stc
lret
mov
sbb
push
inc
push
dec
icebp
pop
movl
push
pop
stos
lods
xchg
xchg
dec
out
aad
add
pop
and
jle
popa
sti
aas
jae
or
and
mov
xlat
out
jo
jbe
stos
push
add
leave
jmp
ds
mov
addr16
pop
sub
sar
ret
push
lds
xor
orl
mov
mov
lret
or
jg
stos
ja
xor
dec
dec
pop
adc
and
jl
jo
pop
ss
jle
dec
je
push
daa
stos
xor
xor
insl
fnstenv
and
aad
mov
jge
add
test
aas
pop
movsl
inc
xor
push
and
push
xchg
mov
adc
cld
add
sti
or
fnstenv
sub
lahf
push
mull
out
and
push
mov
xchg
sarl
test
pop
sub
sub
testl
cmc
into
push
xchg
mov
outsl
leave
cmp
inc
je
add
mov
add
cmp
arpl
or
dec
xchg
jmp
sub
xchg
daa
loop
and
and
inc
lret
jmp
popa
in
popa
enter
jo
and
cld
loope
lret
stc
cmp
shrl
je
pop
lea
mov
dec
push
dec
xor
xchg
fsubrl
dec
xlat
test
outsb
push
dec
add
xchg
xchg
sti
loop
out
lcall
xchg
inc
mov
inc
xchg
hlt
jne
incb
jl
mov
scas
hlt
push
lea
cmp
subl
mov
pusha
movsb
rcrl
loope
jl
shrl
out
pop
rclb
scas
int3
push
lods
test
ficompl
arpl
push
fcompl
sub
pop
fxtract
les
mov
in
dec
orb
xor
xchg
push
lret
in
sbb
insb
sbb
call
push
into
outsb
sbb
add
mov
xor
pop
ds
bound
sahf
jg,pt
out
add
cli
and
sbb
es
fldl
movb
jle
repz
push
aam
insb
movsl
roll
cmp
add
push
pop
inc
lea
sub
mov
das
lret
jo
mov
fstpt
push
sbbb
pop
lods
push
or
xor
mov
cmpsl
sbb
lock
cltd
push
cmp
add
mov
or
xchg
jp
cmp
fstps
ja
xchg
rorl
loope
dec
jp
dec
mov
lahf
cmpsb
hlt
neg
icebp
dec
xor
ret
movsl
xchg
adc
loop
mov
enter
stc
mov
mov
std
ficoms
mov
inc
mov
jle
add
jno
insb
mov
mov
mov
cmc
xchg
popfw
add
lret
or
mov
sbb
popf
stos
pushf
out
in
faddp
inc
pop
mov
or
pop
jo
divb
and
jns
popf
cltd
or
inc
jns
inc
aaa
and
mov
loope
stos
jp
cmpsl
mov
test
mov
cmc
lret
xor
lods
lret
ja
das
jae
fwait
and
xchg
cmp
push
mov
sbbb
ds
sub
loope
in
idivb
jo
pushf
inc
pop
aaa
pusha
xchg
and
pop
pop
scas
les
jle
sub
shrl
xchg
cli
add
pop
jne
adc
fwait
ret
push
dec
aas
testl
dec
sbb
mov
fisttps
jae
mov
fsubs
xchg
jns
pop
fidivs
xchg
and
jl
pop
inc
add
pop
sub
mov
cld
xchg
loope
dec
lret
jne
decl
pop
mov
jne
shrl
ljmp
pop
outsl
or
jg
pop
out
popa
add
push
loop
sbb
fld
jl
call
cltd
fidivl
xchg
fs
gs
pop
nop
sbb
sbb
pop
cmp
xor
mov
orl
loope
mov
sbb
xchg
push
jbe
xorl
fsts
push
in
loop
push
in
imul
jp
jmp
pop
mov
sbb
pushf
add
and
mov
mov
or
aad
lret
mov
cmp
and
shlb
cmp
xchg
jae
fcoms
jbe
or
dec
pop
mov
insl
in
cltd
ret
pop
mov
roll
ret
loope
div
adc
ds
shlb
push
test
fs
into
aam
out
cmc
in
sbb
cmpl
aas
in
adc
pop
jmp
xchg
sbb
mov
cmp
shrl
jge
jl
clc
cmpsb
test
adc
rcll
or
jle
nop
cltd
fwait
shrb
xor
push
cmpl
ret
out
jno
adcb
mov
mov
aam
jb
jmp
or
je
xchg
mov
rclb
mov
push
adc
or
popf
jge
orb
xchg
dec
pop
sub
mov
and
xor
pop
popf
adc
int3
mov
lcall
stc
aad
aaa
sbb
in
pop
pop
jb
sub
lcall
nop
sub
in
scas
xchg
or
cmp
subb
mov
jne
aam
mov
orl
out
mov
mov
xchg
jns
or
lret
popf
in
imul
shrl
mov
dec
or
out
mov
or
push
in
pop
xchg
idivl
push
ficompl
es
stc
ljmp
mov
sbb
scas
aaa
xchg
sbb
mov
jge
enter
ljmpw
push
ret
fmull
mov
or
call
std
add
repz
cwtl
aam
in
and
mov
pop
and
xchg
outsb
test
enter
push
mov
xor
not
sub
xor
stos
sbb
inc
ljmp
scas
adcl
movl
add
cmp
mov
and
mulb
out
and
xlat
push
xor
push
out
xchg
cld
subb
movsb
cmp
stc
popf
fldl
divl
loopne
xor
mov
mov
and
lock
adc
push
sub
or
jne
xor
das
sub
add
and
dec
es
or
cmp
fcomps
cltd
pop
stc
push
push
push
fbld
mov
fcmovnu
aam
ret
sub
data16
mov
pop
fwait
ljmp
mov
mov
sarl
mov
repz
xchg
fisubl
add
xchg
aad
jg
fcmove
push
inc
add
lret
cli
push
insb
pushf
psubusb
dec
adc
movsb
arpl
push
inc
push
adc
adc
movsb
insl
push
mov
cmpsb
hlt
out
inc
in
ficoml
sub
sbb
jecxz
mov
or
popa
scas
mov
or
sahf
jns
fimuls
int
jle
enter
inc
mov
xlat
inc
repz
push
int
xchg
xor
iret
adcb
insl
jo
adc
adc
fnstenv
push
icebp
pop
mov
out
mov
jmp
mov
inc
push
test
pop
cmp
daa
das
inc
xchg
adc
mov
shlb
les
cmp
insl
cmp
xchg
mov
fistpl
xor
mov
add
fwait
sahf
xchg
push
mov
aad
sti
stos
mov
rorb
mov
fiadds
push
sub
in
ljmp
jle
dec
push
sti
sbb
mov
mov
ret
imul
xchg
in
mov
movsl
or
shlb
enter
rclb
dec
negl
push
jecxz
imul
cmp
mov
add
mov
sub
mov
popf
call
and
pushf
pusha
mov
mov
rorl
pop
mov
std
hlt
push
jp
and
lcall
cmp
xchg
sub
mov
pop
icebp
sbb
cmp
xchg
xchg
xchg
dec
xchg
mov
ds
push
ror
jae
daa
gs
and
leave
adcb
push
dec
sbbb
hlt
testl
xchg
ret
jecxz
fistpll
push
aam
pop
mov
popa
mov
or
xor
shrl
pushf
dec
lret
push
add
sub
add
push
mov
xor
and
fwait
scas
cmp
fnstenv
mov
fmuls
mov
dec
xor
lods
in
xchg
fdivs
cmp
cmp
jbe
dec
jo
out
jg
mov
or
xchg
data16
xchg
cli
scas
mov
pop
push
pop
push
push
xchg
inc
sub
or
sbb
enter
xor
repz
addl
push
sahf
mov
fisttpll
mov
sysexit
test
in
popa
das
mov
and
in
and
mov
dec
je
push
cmp
and
push
add
decl
dec
divl
mov
iret
jne
clc
add
stos
push
sbb
dec
in
sub
and
leave
xchg
sub
and
sbb
mov
stos
idivb
ret
adc
xor
andl
cmp
pop
mov
xor
lea
sbb
xor
jae
adc
push
push
push
int3
out
pushf
cmp
shl
sub
push
or
dec
lret
sbb
mov
inc
decb
rcrb
das
and
sub
jl
xor
lret
stos
and
outsb
mov
shl
out
test
mov
add
lcall
lea
xchg
out
orl
mov
mov
and
inc
movsl
in
icebp
pop
inc
mov
fs
pop
cmp
inc
shrl
pop
pop
pop
outsb
push
pop
xchg
pop
cmp
cmp
pop
fiadds
jp
mov
fldenv
int
sti
dec
xor
xlat
mov
lock
pop
and
mov
pop
mov
and
jb
dec
rep
mov
adc
or
sbb
inc
in
dec
sub
xchg
mov
dec
adc
xchg
push
mov
das
popf
notl
add
hlt
lods
sub
mov
ret
sub
pop
xchg
cmp
lret
cmp
mov
pop
test
ret
fnstsw
nop
mov
xor
cmp
and
add
xchg
add
lcall
in
les
push
imul
in
decl
gs
mov
lock
pop
mov
lds
adcl
xchg
pop
or
cmpl
jo
sti
out
xchg
jnp
and
mov
inc
xor
call
lods
into
enter
add
out
jno
xchg
mov
stos
adc
stc
sub
stc
cmp
mov
in
sbb
xchg
pop
incl
and
and
pop
divb
ljmp
pop
ret
outsb
ljmp
dec
loop
test
cmp
ss
inc
in
cli
sbb
imul
pop
inc
mov
or
cwtl
or
pushf
mov
repz
add
lods
dec
dec
add
dec
push
push
imul
adc
pop
dec
outsb
inc
and
outsl
sbb
loopne
rcll
dec
lds
mov
push
sti
aad
and
or
fs
jno
sbb
sbb
cmp
push
rcrl
mulb
add
cmc
jg
pushf
testl
add
jo
adc
cmpsb
das
fstpl
ljmp
or
pop
pop
adc
js
insb
sbb
ret
cmpsb
mov
mov
push
mov
popw
xor
xor
push
sub
pop
and
xor
pusha
lret
test
sub
and
addr16
pusha
icebp
push
movsl
aas
faddl
pop
movsl
clc
cwtl
inc
stc
cmc
lret
loopne
lea
and
xor
in
js
pop
or
add
mov
ja
adc
test
xchg
mov
iret
mov
sub
mov
fwait
int
cmp
cmp
imul
es
ljmp
popa
int
mulb
std
orl
jge
je
in
mov
lcall
stos
fisttps
testb
cmp
std
dec
cmc
movsb
adc
loope
daa
jg
stos
push
or
mov
jne
ljmp
inc
sbb
stos
mov
test
dec
cmp
pop
repz
stos
call
in
xchg
inc
and
rcrl
sub
enter
hlt
popf
sahf
adc
mov
fcoms
mov
adc
scas
addr16
decb
addr16
push
ss
inc
lea
mov
adc
xchg
mov
movsl
js
pusha
adc
cli
shld
fwait
pop
xchg
sub
dec
lea
repnz
mov
dec
cmpsb
jmp
pop
push
mov
out
adc
mov
or
jo
mov
sbb
jg
jne
sahf
outsb
pusha
imull
clc
xchg
jne
mov
mov
mov
outsl
test
adc
adcb
mov
out
dec
jg
push
jbe
out
movsb
fistl
ja
push
aam
inc
jecxz
in
or
inc
xor
aam
ds
cwtl
mov
mov
shll
cwtl
fdivrl
sbb
pop
xchg
and
inc
iret
ret
xor
pop
pop
shlb
lcall
inc
cmp
adc
cmpsl
pop
dec
jo
bound
pop
jle
ficomps
bound
pop
mov
cltd
pop
cmp
gs
ret
push
frstor
outsl
xchg
mov
sub
jae
je
push
pop
add
pop
fwait
jo
mov
das
cmp
scas
add
addr16
icebp
dec
test
das
cmp
test
inc
lds
fimull
jl
jno
outsb
dec
sbb
pop
or
out
adc
int
out
dec
pop
mov
add
inc
inc
andl
cli
push
test
scas
cmp
mov
push
sahf
xor
xchg
mov
inc
int3
shll
and
das
xchg
arpl
adc
rcrb
addb
push
icebp
cmp
in
mov
shlb
out
mov
xchg
mov
mov
mov
mov
mov
cwtl
lret
jmp
shlb
mov
repz
and
popf
sbb
cmc
xchg
fs
out
je
mov
jg
negb
inc
cmp
mov
jnp
cmp
shlb
fstl
sbbl
pop
mov
dec
out
inc
fwait
xor
cwtl
insl
enter
clc
xchg
nop
add
je
add
std
jne
mov
jne
outsl
cmp
es
test
lcall
sbb
push
jo
push
dec
rclb
sbbl
jno
je
xchg
jmp
addb
pop
divb
adc
or
stos
fnstcw
gs
inc
btc
mov
sbb
test
add
push
arpl
ret
dec
mov
cmc
ret
pop
add
addb
in
lea
cld
dec
or
aas
jg
cltd
pop
xchg
mov
adc
add
and
dec
or
jnp
pop
mov
movsb
xchg
add
aad
rolb
ret
cmpsb
sub
gs
dec
push
imul
add
or
nop
push
sub
shrl
lods
push
sbb
inc
not
or
aas
add
ret
loop
sbb
cmp
es
adc
and
adc
sbb
xchg
mov
push
dec
test
ja
call
mov
ds
xchg
lods
sti
adc
dec
add
divl
mov
mov
push
cmp
test
inc
sbb
int
jecxz
cmovge
sbb
es
dec
pop
inc
test
call
xchg
in
sti
stos
cmpsl
pushf
xor
data16
xor
jo
in
sub
repnz
fwait
jp
lods
xchg
mov
sti
cli
inc
in
mov
mov
cmp
mov
adc
push
aad
inc
dec
cmp
inc
sahf
scas
fnstenv
add
leave
inc
cwtl
xor
cwtl
repz
negb
push
out
mov
cli
loop
jle
rcl
jp
jl
mov
xor
sahf
inc
adc
adc
in
in
sub
test
add
movsb
jo
sub
mov
xchg
sbb
mov
and
lods
imul
fsubrl
adc
stc
add
out
cmpsb
dec
xor
fldl
inc
jb
push
jns
add
sbb
mov
shrl
lock
lret
movsb
inc
inc
rolb
imul
subl
or
pusha
push
sub
jae
mov
cltd
imul
je
dec
lods
aam
cmp
repz
ss
mov
lahf
sub
sbb
cmpsl
lret
sti
and
loopne
lock
mov
mov
aaa
aad
dec
jnp
int
lea
sub
icebp
loopne
hlt
xchg
xor
cmp
cmp
cwtl
lods
lock
enter
dec
fdivl
or
lock
notb
bound
sub
dec
mov
mov
pop
popa
sbb
stos
mov
adc
jnp
js
dec
call
ret
jmp
jmp
dec
addr16
mov
popf
dec
pop
adc
xchg
shlb
test
lret
lret
pop
out
jb
jg
push
inc
mov
lods
mov
push
sub
cmp
shrl
ret
sub
push
lea
aam
dec
es
xchg
adc
jp
jge
fdivrp
and
pushf
mov
stc
pusha
mov
divb
dec
jge
inc
lds
and
cs
mov
fcoms
outsl
and
xchg
mov
inc
mov
or
jbe
enter
fwait
mov
add
xchg
xchg
adc
aas
inc
push
ds
test
scas
cmp
push
xchg
shlb
jge
inc
inc
add
scas
cltd
sub
roll
cmp
fldl
testb
pop
push
inc
xor
dec
ljmp
loopne
fadds
cmc
sub
cli
imul
sub
cwtl
outsb
outsb
clc
adc
ret
rclb
jecxz
and
xor
mov
scas
loope
and
movsb
les
cmp
fldcw
sub
add
and
adc
inc
cmp
jmp
pushf
jecxz
jle
xchg
push
mov
mov
js
xchg
sbb
adc
es
insb
push
pop
cli
xor
negl
rcrl
mov
lock
jg
inc
cmp
jmp
sub
int3
and
cmp
iret
or
popf
and
jecxz
mov
xchg
cmp
pusha
and
mov
cmp
cmpsl
sbb
les
insb
dec
push
rclb
bound
loopne
decb
sub
pop
rcr
lds
fcmovnb
enter
jp
pushf
and
push
or
inc
mov
cmp
daa
aas
pop
wbinvd
xchg
out
sub
cmpsl
test
sti
push
std
popf
push
or
inc
sub
imulb
cmpsb
sahf
movsb
test
mov
fiadds
xchg
mov
dec
movsl
cwtl
sbb
sub
shl
popa
test
stos
mov
outsl
add
or
mov
inc
call
aam
pop
ret
or
in
pop
repz
push
cmp
outsl
cmp
scas
mov
insl
into
mov
xchg
push
and
xchg
xchg
lcall
lret
mov
jmp
imul
popf
lds
and
mov
push
pop
dec
adc
pop
jp
orl
xchg
push
or
or
test
and
xchg
test
mov
in
mov
xor
or
mov
test
lcall
addr16
inc
enter
icebp
pop
xchg
test
push
cmp
or
outsl
sar
mov
dec
jg
stos
cltd
flds
xor
xchg
cmp
sbb
push
xlat
cmpsb
in
gs
sub
pop
mov
test
out
pusha
loop
mov
pop
inc
sbb
pop
nop
nop
repz
cwtl
add
stos
js
pop
mulb
jmp
jge
aas
sbb
test
adc
add
jno
sub
push
xor
jb
push
jge
mov
mov
add
mov
add
testl
pop
ret
cli
in
dec
sti
inc
daa
arpl
xchg
imul
imul
xor
pop
sbb
mov
push
pop
shll
lahf
addr16
cltd
adc
push
imul
adc
out
mov
lds
jno
mov
fdiv
sub
dec
clc
jnp
jecxz
sbb
gs
das
push
add
fldl
fs
pop
loope
andb
jns
inc
data16
mov
outsl
xchg
fcomps
pop
xchg
popa
stc
sbbl
mov
inc
push
ja
push
js
push
mov
lock
popf
add
xor
fmuls
add
mov
lcall
cmc
ret
arpl
in
cmp
movsb
inc
popa
xchg
cltd
je
ja
call
mov
mov
mov
dec
bound
cld
push
int3
shlb
sub
mov
pushf
sbb
xchg
add
cmp
jbe
push
dec
pop
jle
cmp
into
adc
dec
mov
and
fidivrl
jge
pop
mov
mov
jb
jo
jo
adc
jns
jb
pop
aam
sub
pop
shrb
je
or
daa
dec
lods
sub
jnp
mov
pop
jae
lret
mov
cli
push
sub
jl
push
jg
cld
sub
cli
popa
or
push
stos
test
daa
and
sbb
push
mov
adc
inc
mov
jae
cli
lock
mov
pop
jb
fmul
xorl
roll
xor
lods
std
insb
call
in
mov
mov
aam
jnp
fwait
mov
adc
ret
adc
sbb
pop
loope
mov
aam
pop
pop
mov
jge
imul
fcomps
shrl
mov
bound
push
sub
test
or
dec
adcl
movsl
xor
jo
mov
mov
push
loop
mov
jmp
fadd
in
cli
mov
add
inc
and
shrb
mov
notl
or
sub
scas
inc
mov
fwait
test
sbb
push
into
or
pop
jo
mov
lock
pop
in
enter
dec
repz
cmp
lods
mov
cli
push
sub
adc
sarl
inc
in
jecxz
pop
add
test
aaa
adc
faddp
mov
scas
sub
pop
xchg
xor
sbb
enter
cmp
fwait
jl
mov
fcom
mov
clc
mov
and
repz
add
inc
loopne
sbb
cmc
add
cmpsb
xlat
and
arpl
fidivl
lcall
rcrl
push
inc
cltd
aaa
pop
mov
in
jg
mov
cmpsb
repnz
lock
or
jb
popf
lcall
in
xchg
inc
or
movsb
add
shlb
loopne
test
xor
inc
js
faddl
push
add
jbe
ljmp
add
pop
xor
xchg
pop
sub
mov
dec
xlat
cmp
and
imul
rolb
int3
xchg
fimuls
pminsw
ljmp
jl
mov
fidivl
add
fisubrs
pop
cmp
movb
jae
into
inc
cmpsb
int
js
in
add
pop
add
cltd
jo
pop
or
sbb
cli
lock
js
xchg
sar
testb
movsl
call
stc
xchg
stos
or
cltd
cmp
hlt
lcall
decl
and
dec
jge
xor
loopne
xchg
mov
pop
cmp
cld
insb
movsb
sub
int3
aas
roll
mov
cmovno
popa
jmp
daa
insl
stos
adc
or
rcll
cmp
cmp
clc
addl
jl
imul
ret
imul
mov
pop
jp
lea
popa
repz
in
out
cmpsb
dec
ss
adc
lret
ficoml
rcr
add
repnz
xchg
cwtl
mov
cld
or
xor
aas
lahf
addr16
and
repz
dec
xor
aam
mov
mov
mov
sbb
in
sbb
cli
rclb
pop
aas
bound
in
xchg
lds
xlat
sti
in
aam
pop
out
cmp
mov
push
mov
lods
js
mov
test
test
jmp
aas
cwtl
sub
pop
imul
aam
lods
mov
xchg
scas
nop
cmp
call
fcompl
popa
mov
loope
pop
bound
xor
mov
add
push
pop
inc
shll
and
sarb
pop
loopne
adc
iret
lea
int
std
lahf
adcb
inc
mov
mov
dec
push
xchg
xchg
lcall
imul
xor
incl
jl
stc
rorl
jecxz
push
mov
dec
pop
push
xor
lret
les
in
fstpt
pop
jg
adc
jno
xchg
test
mov
push
xchg
xor
mov
sub
xor
jnp
jl
push
pop
ret
sub
lahf
testw
sub
psrld
mov
icebp
shrb
div
movsl
fisubrl
stos
mov
mov
movsl
fcompl
arpl
xor
jp
jg
stc
pop
fmull
stos
stos
aam
loope
adc
rcr
arpl
mov
cmpl
popf
push
jbe
add
fwait
xor
pop
scas
popa
mov
inc
cli
cmp
fs
xor
xchg
xchg
pop
adc
pushf
test
sahf
icebp
dec
lods
sarb
pushf
out
mov
dec
lods
lds
sub
lahf
inc
ja
clc
mov
loop
cmp
xor
cmp
cld
inc
repnz
push
xchg
cmpsb
mov
dec
fnstenv
inc
int3
cwtl
mov
mov
mov
inc
insl
shrb
or
push
out
and
call
or
ss
and
mov
pop
sbb
sub
or
mov
or
scas
outsl
xchg
xor
outsb
mov
push
mov
sbb
dec
cmc
or
stos
inc
std
cltd
xor
mov
push
neg
repz
mov
or
inc
inc
int
jbe
pop
adc
jo
sub
nop
iret
jp
lock
and
or
mov
push
scas
nop
loopne
dec
push
pop
mov
sbb
lock
pop
insl
lahf
repz
repnz
test
ret
mov
cmpsb
push
pop
xchg
jp
mov
push
or
mov
push
jbe
add
fprem
push
mov
pop
xchg
add
lret
mov
dec
sbb
sarb
insl
jnp
dec
inc
fldcw
pop
movb
ss
clc
pop
shr
popf
int
and
push
inc
cmp
inc
jb
mov
test
rolb
xchg
in
adc
ror
or
loope
call
or
add
jle
aam
push
mov
pop
push
pop
out
pop
mov
mov
adc
cmp
push
mov
sub
icebp
fmull
mov
push
test
mov
dec
lds
or
test
pop
xor
popf
dec
adc
lret
pop
stos
mov
hlt
inc
or
jecxz
cmp
in
ja
push
mov
mov
sbb
pop
rol
cmp
sub
push
push
in
sub
jmp
lahf
lcall
push
dec
jns
test
xor
push
ljmp
xchg
bound
stc
or
xchg
mov
cmpsb
sbb
negb
cmpsw
jb
inc
shl
fsubrs
mov
repnz
int3
mov
cmp
out
xchg
cmp
sbb
in
mov
mov
jo
es
cwtl
rorl
jge
gs
je
mov
mov
or
leave
ljmp
mov
xchg
icebp
push
ds
sub
mov
ficompl
lods
adc
mov
pop
mov
out
xor
ss
outsl
mov
inc
les
xchg
push
and
std
loope
mov
mov
int
sbb
dec
push
lds
arpl
addr16
xchg
out
cld
mov
iret
popf
je
das
and
xlat
jb
jge
out
jmp
xor
xlat
std
aad
jb
pop
adc
xor
jnp
lock
push
add
push
sub
repz
bswap
lahf
lahf
cmp
in
fdiv
pop
subb
repnz
push
and
dec
sti
mov
pop
push
aam
addr16
pop
inc
adc
aas
cltd
mov
mov
sahf
ljmp
pop
mov
dec
pop
inc
dec
mov
and
mov
add
mov
lods
scas
out
mov
and
mov
scas
jg
pop
sub
fs
icebp
xlat
clc
frstor
push
xor
jmp
jg
pop
mov
jle
or
rcll
sbb
jbe
ficompl
jne
lret
xor
insl
mov
inc
xor
jecxz
jl
xchg
mov
pushf
mov
pop
mov
aas
sbb
adc
popf
outsb
dec
push
jne
cmpb
lcall
sbb
add
inc
orl
sbb
xor
stos
mulb
cmpsl
inc
cmp
sbb
cmp
add
mov
into
frstor
xchg
xchg
popa
or
rorb
cli
mov
aad
xchg
sub
insb
es
xor
dec
popl
add
jg
push
pop
dec
shll
cmpsl
inc
mov
addr16
arpl
mov
adc
fstp
fsubs
push
lret
sbbl
cmc
call
call
fsubr
nop
jnp
dec
fxch
aas
stos
testb
fs
rolb
rcr
jae
cmpsb
mov
jmp
movsb
mulb
mov
loopne
bound
test
mov
je
cmp
or
out
or
cmpsb
add
cld
add
mov
and
sub
icebp
inc
push
jne
mov
call
in
popa
jg
sub
stos
push
cmc
repnz
rorl
xchg
add
ss
cs
xor
repnz
js
sti
adc
out
ja
jl
shrb
jo
push
mov
test
outsb
inc
cmp
inc
pop
pushf
fidivl
icebp
rcrb
mov
cwtl
lods
aas
out
repz
jne
and
lods
popa
pop
rclb
cs
out
mov
mov
lahf
mov
fsubs
cmp
lcall
mov
out
aas
sub
push
and
lock
imul
imul
test
and
sbb
mov
in
addr16
lcall
mov
cmp
push
pop
dec
push
xchg
dec
fucomi
fcmovnbe
push
mov
mov
push
adc
and
ds
adc
mov
pushf
push
dec
test
jb
lret
test
cmp
mov
rcrb
gs
xor
mov
sbb
insb
aam
jge
lds
add
fldt
rcr
in
lea
inc
insb
xchg
inc
add
mov
out
les
data16
pop
xor
cmp
inc
sar
mov
in
fwait
mov
in
push
xchg
jecxz
sub
mov
xor
fisttps
xchg
mov
pop
leave
adc
push
mov
xorb
xchg
pusha
mov
xchg
dec
in
lcall
mov
cmp
xor
and
sub
fisttpl
pusha
mov
movsb
mov
jl
sub
mov
mov
jmp
or
call
sbb
sarb
test
inc
lods
ret
cmp
mov
mov
xorl
insb
jecxz
cmpb
inc
push
subl
inc
pop
movsb
xchg
jl
imul
mov
mov
test
xor
pop
push
lahf
pop
dec
jae
add
arpl
mov
ror
fcompl
mov
pop
imul
cmpsb
jb
ljmp
bound
inc
mov
or
int3
mov
jae
adc
xorl
add
nop
sub
or
outsl
jae
clc
sbb
popf
outsl
cmp
dec
mov
inc
and
sub
or
les
loop
jnp
hlt
jns
rcl
cmpsl
jg
push
jnp
sub
xchg
or
push
fnsave
repz
cmp
ret
fwait
mov
fcomps
cmp
fiadds
cmp
insb
push
lahf
mov
jno
cltd
jo
adc
add
cwtl
pop
clc
lock
xchg
jmp
sbb
adc
dec
sub
adc
push
push
mov
jl
or
jecxz
cmp
dec
sbb
in
daa
sub
lss
lretw
fimull
ds
adc
clc
lock
ficoms
mov
int3
xchg
mov
sub
in
xor
dec
push
and
mov
loopne
or
insl
mov
cld
push
hlt
push
cmp
sub
or
imul
repnz
std
adc
add
xlat
mov
enter
testl
cmpsl
cmp
cmc
call
call
cmpsl
notl
xchg
mov
loopne
inc
shlb
pop
inc
addr16
sub
fdivrs
in
sbb
sub
ja
or
jns
xchg
jge
and
jo
adc
xchg
sarl
or
push
es
out
xor
dec
push
dec
and
insb
adc
les
ja
rcll
das
fwait
xchg
mov
push
sub
jbe
mov
add
mov
fnstsw
scas
pop
mov
mov
inc
jl
pop
mov
loop
inc
pop
pop
sbb
inc
or
xchg
mov
daa
jmp
xchg
dec
mov
movsl
arpl
xor
leave
loop
jp
xor
xor
jo
lea
fcmovu
adc
mov
jmp
ret
pop
in
jl
call
decl
mov
ja
ss
dec
insl
jl
adc
mov
or
mov
adc
psllw
lods
lahf
jnp
dec
aad
or
arpl
fildl
mov
cmp
jnp
mov
add
adc
push
test
idivl
push
sbb
mov
movsl
sub
fwait
outsb
mov
test
pop
sbb
mov
nop
call
push
mov
lods
xchg
mov
es
sbb
mov
ret
and
push
aaa
inc
ret
jge
xchg
imul
mov
push
sub
push
mov
les
add
test
lods
jecxz
pop
xchg
or
sub
mov
xor
sub
mov
int
pop
jecxz
dec
xchg
fnstenv
xchg
addr16
loopne
data16
scas
dec
imul
xchg
icebp
shll
sti
aad
mov
xchg
arpl
jae
ret
xor
and
jno
lea
inc
das
fmull
or
shrb
jecxz
pushl
xorb
lea
cmc
cld
cmpsb
cld
mov
and
sbb
pop
out
orl
inc
jo
andb
xchg
xorb
scas
pop
xor
shl
arpl
repz
sbb
xchg
subb
pop
int3
push
repz
aad
or
pop
xchg
jns
xlat
sub
data16
dec
sbb
pop
lock
loop
or
addr16
out
mov
pop
push
mov
or
repz
push
adc
sub
jle
mov
mov
outsb
incl
lret
aam
adc
sub
cld
jno
jnp
jne
int3
icebp
xchg
movsb
into
mov
outsl
and
ja
dec
movsb
mov
sbb
mov
lds
mov
xchg
xlat
jge
pop
sbb
jge
movb
cld
xchg
daa
xchg
dec
cld
js
mov
jbe
rcrl
in
cmpsb
out
push
push
mov
dec
das
rclb
icebp
mov
pop
adc
mov
xchg
imul
or
mov
scas
dec
daa
xchg
imul
lret
sub
gs
ljmp
sti
or
shrb
lcall
or
mov
test
lret
insb
ds
xchg
rolb
fwait
hlt
mov
dec
xor
jb
rorb
cmc
aam
push
inc
jmp
out
aaa
popa
in
out
sahf
cmp
hlt
insl
cwtl
outsb
popaw
or
out
ss
das
gs
outsl
ffreep
ds
mov
xor
andl
daa
adc
test
out
mov
pop
or
adc
fnsave
and
jno
sarl
xor
mov
adc
ljmp
push
xor
repnz
dec
lods
inc
or
idivb
pop
js
jg
pusha
pushf
mov
mov
and
cmp
xor
cmp
mov
mov
add
in
jp
lahf
cmc
fidivrl
cmc
add
lret
xchg
sub
fs
push
pop
pusha
sub
lahf
xchg
xchg
mov
push
mov
jbe
sar
orl
aas
hlt
imul
loope
sub
cmp
lret
cmp
insl
scas
jns
orl
xchg
loope
and
pop
inc
out
xor
mov
or
xchg
int
ds
jg
jle
cmp
and
rcl
sub
in
push
mov
lret
jmp
jge
sbb
push
adc
mov
iret
insb
cmp
xchg
jecxz
dec
push
stc
push
inc
jno
insl
inc
into
sbb
dec
popa
loope
in
sbb
cltd
push
push
insl
cmpsl
scas
mov
pop
dec
mov
ljmp
int
jmp
movsb
scas
adc
add
xor
pop
cmp
mov
adc
mov
cwtl
ret
arpl
mov
mov
nop
mov
into
outsl
jg
or
xor
push
icebp
loop
push
pusha
and
pop
out
test
or
cmp
leave
or
test
out
enter
push
hlt
adc
mov
inc
fnstcw
aas
outsb
or
mov
sahf
fwait
js
push
cmc
or
inc
jecxz
out
cmpsb
inc
mov
jnp
movsl
dec
call
jo
fisubrs
adc
jmp
mov
lods
dec
fsubrs
sbb
adc
cmp
sub
jl
mov
test
cmp
pop
add
xor
xchg
cmc
push
mov
test
mov
bound
dec
xchg
sbb
test
xor
test
cmp
xchg
lahf
mov
ss
sub
jne
jnp
pop
fsubrs
jo
sub
lods
aas
and
dec
outsl
sbb
out
sbb
xor
mov
sub
adc
int
xrelease
sub
add
adc
pop
lods
sbb
pop
push
pop
xchg
out
xchg
shll
mov
sub
mov
xchg
popf
movl
inc
ret
es
push
jecxz
push
ja
xchg
in
sahf
adc
mov
push
test
dec
lods
imul
mov
fdivs
mov
or
mov
or
lcall
and
sbb
cli
xor
pop
pop
jecxz
std
insb
aad
repz
mov
out
mov
sub
and
test
roll
inc
popf
jmp
sbb
push
stc
lock
fcmove
mov
mov
cmpsl
inc
sbb
push
xor
push
pusha
in
movsl
adc
repz
ss
in
xchg
orl
adc
or
les
hlt
adc
data16
or
stc
call
xchg
je
pop
stos
dec
mov
cs
adc
jne
icebp
add
and
sub
icebp
dec
cltd
in
and
jae
lock
fwait
nop
dec
test
in
sub
or
xor
jno
jns
shrl
push
inc
arpl
xchg
mov
xor
mov
das
mov
sub
push
cmp
imul
xchg
jle
xchg
adc
out
cmp
testl
jne
rorl
iret
sahf
mov
dec
pop
bound
out
repnz
lods
xchg
push
cmpb
jae
pop
js
sbb
dec
and
pop
ret
popf
bts
nop
xchg
inc
inc
fldlg2
mov
iret
iret
lods
pop
insl
add
daa
lods
loop
cmp
cli
xchg
push
push
gs
push
pop
mov
andl
ret
das
addr16
pop
aad
push
xchg
les
or
ljmp
mov
or
divl
lcall
sbb
js
fwait
mov
out
lods
cmpsb
add
lds
cmp
cld
sbb
scas
sbb
add
pop
cmp
sbb
aaa
in
cmp
loope
sbb
in
xorl
dec
icebp
mov
add
mov
lds
pusha
jge
lea
pop
sbb
mov
inc
ja
jge
inc
xchg
inc
sbb
push
pop
push
ds
or
mov
push
add
mov
cmp
or
outsl
leave
rcl
arpl
pop
pop
inc
add
int3
std
xor
or
rcl
add
mov
mov
pop
lret
add
ss
mov
adc
enter
cmp
cmp
add
xor
out
xchg
push
lea
inc
cmpsl
mov
aam
leave
adcl
test
movsl
outsl
and
in
fs
jo
mov
cmp
into
and
movsb
loop
inc
rcrb
mov
out
jg
jae
mov
test
xor
dec
ficomps
daa
sahf
push
dec
dec
cmp
bound
lret
fprem1
sahf
xchg
mov
icebp
les
sbb
mov
imul
loopne
add
mov
mov
pop
icebp
add
subl
pop
stos
and
fisubrs
les
jmp
dec
lcall
jle
ror
jecxz
hlt
dec
shrl
je
xchg
jecxz
nop
mov
out
add
inc
mov
add
out
pop
inc
loopne
aad
mov
add
jbe
pop
jp
xor
fistl
out
fdivs
cmp
mov
push
cwtl
testb
inc
inc
mov
inc
test
rcr
arpl
ret
loop
and
push
cmpsb
jb
mov
lret
pop
cltd
std
and
je
and
mov
out
cmp
cmpsl
mov
xor
jg
mov
mov
das
mov
adc
push
out
imul
push
lds
shl
push
cli
arpl
aas
sub
outsl
or
cmpsb
mov
jmp
mov
mov
enter
fwait
ds
dec
fs
dec
in
xor
jg
test
mov
sarl
icebp
cltd
int
mov
dec
or
add
addr16
push
and
mov
outsl
jne
mul
sbb
pop
repz
pause
clc
in
in
xchg
xor
cli
decl
rol
jne
sbb
ds
sbb
loope
adc
xlat
das
leave
call
out
add
dec
xchg
xor
xor
cmp
bound
movl
xlat
mov
int
adc
and
pop
dec
sbb
xchg
dec
mov
movsl
adc
mov
repnz
push
addr16
mov
pop
inc
repnz
call
xor
lret
mov
dec
add
fdivrp
pop
loop
sbb
clc
scas
mov
mov
pop
push
into
inc
lods
add
inc
inc
push
adc
fwait
aad
stos
je
aas
push
aam
or
jge
cmp
bound
mov
jmp
iret
stc
or
dec
out
jnp
or
movsb
stos
mov
das
aam
sub
jmp
pop
jae
lds
aad
sbb
les
cmpsb
jl
mov
in
pop
sbb
or
in
test
or
inc
xor
xchg
pop
movsb
inc
mov
sbb
pop
xchg
adc
mov
push
shll
outsb
and
push
jl
lahf
sahf
adc
fsts
adcl
stc
jg
jg
stos
and
adc
lea
sub
in
into
mov
lea
xchg
leave
rcll
lock
movsl
test
sub
jecxz
cmc
les
cmp
ss
xlat
and
icebp
xchg
jnp
mov
xor
mov
jb
dec
jbe
mov
pop
mov
xor
data16
in
pop
dec
fwait
dec
cwtl
cli
hlt
les
out
arpl
dec
ret
cs
sar
lea
xchg
mov
sbbl
dec
int3
push
mov
mov
or
sbb
push
inc
aad
push
add
push
dec
push
or
cmpl
mov
sub
arpl
stos
and
outsb
pop
jo
incl
xchg
mov
mov
sub
ret
sub
or
jg
lods
test
inc
push
int
pop
push
jmp
movsl
sbb
mov
xor
insl
cmp
and
jg
jae
outsl
xchg
mov
in
add
repnz
ret
test
push
add
aaa
jle
mov
gs
xor
clc
mov
or
jno
js
int
addr16
xchg
push
shlb
daa
mov
xor
dec
cltd
int
nopl
scas
jle
vmulpd
or
mov
dec
push
ds
test
adc
adc
and
stc
scas
shrb
mov
mov
add
leave
adc
loopne
jno
pop
push
cmp
or
jg
dec
arpl
notl
test
lock
popa
cmp
divl
icebp
cltd
push
pop
sub
xor
xor
mov
pop
cs
ss
loop
aaa
or
push
or
rcl
xchg
xor
and
fnsave
movsb
sbb
pop
pop
addr16
adc
xchg
adc
mov
in
inc
cmpsl
stos
pop
ret
xor
gs
clc
lds
cmp
insl
sbb
int3
push
push
xchg
fidivrl
inc
andb
push
imul
bound
lcall
push
xchg
mov
icebp
icebp
das
pop
jecxz
dec
mov
sbb
add
cmp
mov
daa
or
lock
dec
movsb
sbb
shl
pop
push
jns
adc
push
xchg
sub
sti
ljmp
pop
mov
push
dec
lock
push
dec
rol
mov
aas
inc
js
sub
push
cltd
cmp
stos
int
fidivl
sub
inc
cwtl
pop
loope
fsubl
andb
loope
inc
mov
sbb
jb
orl
lods
jl
rolb
add
aam
and
or
mov
popa
iret
push
stc
enter
jo
pop
call
mov
push
outsl
mov
aad
insl
imul
mov
loopne
sub
mov
push
lods
sahf
orps
enter
and
sbbl
ret
cmpsl
cmp
lret
mov
dec
jge
xchg
ret
dec
push
mov
jmp
das
sub
add
pusha
adc
add
sbb
test
inc
mov
lods
dec
dec
movsl
jl
push
es
mov
aad
fdivp
in
insb
les
stos
lock
mov
mov
mov
stos
addl
xor
and
xor
sub
mov
test
mov
jg
jmp
add
jmp
ucomiss
test
push
iret
mov
lods
call
xchg
pushfw
mov
add
lret
jo
rcll
pop
mov
jns,pt
adc
push
fnstsw
dec
jns
jb
cs
mov
popa
xchg
sbb
lcall
and
aam
test
fs
js
test
pop
add
push
imull
test
sbb
out
jmp
sub
push
in
or
sahf
aaa
mov
hlt
inc
inc
dec
icebp
add
adc
xor
fistpll
test
ja
jle
loope
scas
inc
popa
push
icebp
mov
adc
xchg
ret
mov
out
hlt
bound
mov
into
inc
inc
or
add
bound
inc
movsl
xchg
pop
sbb
in
push
push
daa
pop
jp
js
out
pushf
sti
popa
xor
mov
push
imul
fndisi(8087
nop
dec
test
call
fsts
xor
pushf
jmp
testl
sub
or
dec
inc
jb
cmp
and
push
cmp
orb
pushf
push
fcomps
scas
ret
movsb
push
xor
cmpsl
cs
jecxz
and
ljmp
and
pop
dec
adc
vpsraw
fcompl
inc
mov
negb
in
out
sbb
int3
popf
xchg
inc
dec
les
outsb
andb
cmp
jae
cmp
pop
adc
push
jmp
es
lahf
add
xlat
fildll
hlt
jecxz
dec
and
jae
test
or
prefetch
or
sbbl
ljmp
sti
dec
fwait
ljmp
xchg
cwtl
jmp
enter
lods
xchg
cld
jle
add
pop
ljmp
and
cmp
sarl
sbbb
pop
test
push
test
scas
test
xchg
inc
fsubr
inc
stc
jno
lds
and
out
xlat
loope
push
jecxz
jle
std
icebp
stos
sbb
push
mov
push
push
mov
xchg
sub
iret
mov
out
dec
xor
dec
insl
cs
dec
mov
mov
fnstsw
or
jmp
add
push
cmp
mov
lret
push
lcall
jg
ret
idivl
jle
mov
xlat
mov
adc
sub
icebp
pop
jle
lret
cmpsb
add
sahf
and
xchg
mov
fmull
push
out
dec
xor
aaa
adc
adc
sub
mov
fwait
cmp
xchg
jb
or
jns
lret
jmp
dec
or
clc
aad
pushf
add
sbb
mov
mov
in
and
and
int
jg
pop
inc
cmp
pop
lret
add
mov
xor
cmp
scas
or
mov
or
adc
sub
clc
push
add
adc
mov
rcrl
pushf
push
in
xchg
xor
adc
sub
push
cmp
dec
das
mov
movsl
les
gs
fiadds
jmp
sti
inc
dec
push
out
js
and
xor
sbb
popa
in
in
std
inc
icebp
mov
shll
add
cmp
and
pop
lret
push
mov
mov
iret
or
stos
xor
pop
jo
rcrl
pop
adc
inc
test
mov
mov
inc
scas
es
push
mov
cmpsb
movsb
mov
daa
icebp
insl
xchg
push
pop
in
push
lahf
int3
daa
sub
push
push
mov
jp
push
pop
push
adc
sub
je
pop
sbb
push
xchg
in
add
je
cmpsb
xchg
xchg
test
xchg
or
int3
cli
daa
popf
mull
out
arpl
cld
mov
push
test
dec
adc
cmp
pcmpgtw
je
or
pop
mov
pop
jnp
mov
or
push
neg
jns
push
leave
daa
test
xor
sbb
mov
push
push
pop
fsub
jp
mov
add
call
push
or
stos
mov
xchg
das
sub
rcrb
dec
popf
push
mov
les
jle
ja
les
and
shlb
and
loope
into
stos
mov
jnp
insb
loopne
das
scas
out
cli
insl
stos
jo
mov
jle
cwtl
pushf
xchg
repz
in
fmul
sub
jbe
ret
cli
roll
aas
pop
fld
mov
outsl
enter
mov
mov
pop
cld
rcrb
xchg
xchg
jle
sub
cld
fstl
mov
jae
enter
out
lock
lea
adc
xlat
dec
and
adc
or
clc
cmpsl
les
movsl
aas
jge
lods
cmp
pop
xchg
pop
or
mov
jb
rcrl
rcll
adc
jp
aad
popa
mov
cmpsb
fsub
ljmp
js
mov
sub
call
adc
inc
or
out
lds
test
push
push
or
into
aam
xchg
scas
sbb
cmpl
mov
xchg
es
xor
and
scas
mov
pushf
sub
pop
and
fdivrs
jne
mov
push
cmp
xor
das
repz
fistl
sbb
data16
jecxz
xor
mov
lock
cmpsb
arpl
push
cmp
and
mov
test
mov
inc
int3
cli
cmp
mov
push
pop
or
test
jmp
mov
sub
sub
and
in
cmpsb
movsl
inc
adc
popf
sub
inc
add
mov
inc
sbb
loop
or
xor
pop
ret
sahf
test
sbb
movsb
or
das
xor
cmp
lea
mov
jmp
addb
insb
aam
jb
push
mov
lds
adc
push
std
add
aam
push
dec
nop
and
and
jg
mov
dec
xor
scas
mov
pop
push
inc
xor
xor
sbb
cwtl
jp
cmp
sub
inc
cltd
sahf
or
inc
fists
sbb
push
loop
roll
dec
mov
add
or
xor
mov
xchg
call
mov
pop
and
pop
pop
rorl
out
adc
negl
pop
jno
cmpsb
xor
and
xor
push
sbb
push
or
les
jmp
jb
aas
xchg
rorb
cmpsl
insl
jns
adc
push
in
icebp
and
pusha
dec
sub
sbbl
jecxz
mov
cmc
test
inc
dec
mov
outsb
pop
dec
sbb
bound
int3
pop
sbbl
mov
or
dec
or
or
mov
mov
cmp
and
repnz
cmp
ljmp
in
and
sbb
call
aaa
imul
rclb
add
mov
inc
in
inc
int3
cwtl
and
aaa
add
jg
sub
xchg
mov
ret
xchg
pandn
sub
repnz
popa
add
ljmp
rorl
inc
icebp
lds
mov
mov
shll
test
or
mov
cmp
push
out
incb
jp
outsl
pop
mov
cwtl
jne
shrl
stos
fs
mov
lds
or
in
out
lret
into
jg
pop
test
push
insb
rcll
sub
cmp
ret
sbb
ret
xchg
out
stos
sbb
lea
inc
or
aaa
mov
dec
rorb
push
inc
xchg
jno
mov
lods
sub
mov
stos
fyl2xp1
fmul
mov
incb
xor
repz
jmp
cmp
adc
shll
xor
sub
mov
lahf
ljmp
xchg
adc
mov
aas
push
cmp
cltd
pop
push
cmp
inc
push
sub
xchg
mov
sar
lcall
mov
adc
fwait
repz
stos
inc
sub
push
div
in
jg
dec
je
lds
pusha
insb
in
xchg
pop
xchg
rcrl
movsb
jge
jecxz
mov
mov
in
and
outsb
cmp
add
mov
pop
popf
adc
xchg
stc
int
dec
mov
xchg
pop
in
shl
jge
les
mov
inc
cli
adc
dec
aas
pushf
int3
mov
mov
lret
sarb
cmp
mov
outsb
xchg
and
aam
mov
and
jmp
mov
rcl
dec
dec
test
imul
mov
ret
add
out
dec
sub
jne
mov
imul
ret
mov
mov
out
dec
out
icebp
add
sub
sbb
dec
dec
aad
cmpsl
cmpsb
and
mov
lret
loopne
inc
or
xchg
aad
or
stc
or
lods
popa
and
lahf
into
ret
lret
mov
mov
push
stos
xchg
dec
mov
push
repz
adc
scas
dec
add
sub
and
mov
stos
cmp
jecxz
adc
mov
dec
jno
and
sbb
std
fxch
stos
into
pop
loope
adc
enter
rolb
adc
std
fists
mov
pop
mov
inc
int
negl
adc
add
xor
dec
lock
mov
cmc
mov
mov
push
xor
out
shlb
jne
sbb
sub
push
adc
ss
adc
push
outsb
and
bound
rorb
ds
xor
push
repz
pop
fstps
mov
dec
mov
hlt
jbe
fists
scas
call
xchg
sar
jp
int
push
outsb
out
and
sbb
rcrb
js
dec
mov
sub
xchg
jb
pop
sbb
adc
jecxz
shll
rclb
inc
jl
xchg
push
mov
mov
lret
xlat
mov
mov
mov
cld
out
sahf
xor
ror
data16
js
and
xor
repnz
lea
mov
sbb
xchg
adc
sbb
jg
dec
adcb
and
fimuls
sbb
and
and
popa
mov
sub
in
mov
xchg
mov
iret
mov
adcb
std
mov
adc
ror
test
push
lret
xor
sbb
fs
mov
std
lret
adcb
mov
stos
jnp
xchg
cmpsl
dec
sbb
sub
ret
inc
pusha
fnstsw
add
int3
or
cmp
cmp
add
mov
cmp
add
xlat
test
dec
jge
pusha
cmpsb
mov
jbe
adc
dec
inc
call
lret
lods
mov
inc
popf
test
dec
pop
sub
mov
add
mov
dec
int3
xchg
jmp
xchg
mov
fisttps
cmp
sub
test
mov
jmp
add
jp
aam
cmc
adc
pushf
jae
pop
jp
out
popa
or
flds
add
mov
sbb
cmpsb
stc
pop
xchg
test
jp
mov
addr16
dec
scas
imul
cltd
popa
dec
push
sbb
mov
push
insb
mov
or
ficompl
and
leave
and
inc
mov
mov
pop
mov
push
inc
andb
test
push
and
pop
or
push
xor
inc
push
stos
cli
and
mov
in
shr
push
xchg
es
imul
dec
push
fidivl
pop
movsb
fisttpll
push
pop
cli
inc
and
adc
mov
xchg
pushf
js
inc
xchg
push
jmp
loopne
dec
pop
in
dec
mov
shr
xchg
and
idivl
inc
nop
or
xchg
mov
adc
inc
sub
js
pushf
mov
inc
jmp
es
mov
sub
addr16
dec
or
or
mov
cmp
jne
xchg
insl
inc
inc
pop
dec
movsl
dec
sub
inc
movsl
pop
and
ret
inc
in
pop
cmc
test
xor
sub
mov
out
decb
sub
sub
jo
mov
jp
scas
jae
pop
ja
insl
push
cmc
cmp
jge
test
popa
iret
mov
xor
stos
es
mov
mov
and
mov
mov
fstps
rorb
mov
jne
pop
iret
push
pushf
pop
xor
lods
cmp
pushl
jge
mov
fwait
aas
push
cmp
push
or
cmpsl
dec
test
jo
js
xor
into
xor
aad
or
inc
les
ret
jl
add
mov
jl
xchg
jg
add
adc
lods
test
lock
or
int3
sti
aaa
or
xchg
mov
xchg
fsubp
rcrl
arpl
sbb
stos
xchg
lret
cmpsb
sti
daa
push
sbb
ret
std
lahf
sub
mov
gs
jp
xchg
lret
push
gs
add
stos
xlat
cmovbe
mov
les
out
fwait
lret
dec
push
loop
fs
insl
pop
fcompl
imul
aaa
subb
xor
mov
lahf
sbb
jb
fidivl
int3
ret
xchg
outsb
xchg
out
out
lock
fs
addb
xchg
cmpl
xchg
or
fs
mov
pusha
cmc
push
or
lods
add
mov
jecxz
cmp
das
push
pusha
mov
out
loope
xor
and
fistpl
xchg
mov
lea
rclb
call
sarb
aam
push
outsb
ja
pop
lock
ss
ret
dec
dec
push
inc
sbb
mov
outsl
int
mov
lds
xchg
sbb
jl
and
lock
mov
insb
add
xor
jp
dec
sub
es
jmp
mov
mov
js
test
add
add
test
call
idivb
jne
jge
loope
clc
ds
outsl
arpl
inc
push
and
or
mov
fs
js
mov
and
out
jbe
daa
push
repnz
mov
pop
xchg
stos
mov
test
fwait
mov
pop
add
hlt
movsl
test
and
ds
jge
inc
pop
adc
mov
sbb
push
lahf
adc
mov
push
in
into
iret
shlb
and
sahf
imul
sbb
jne
adc
xor
outsl
ja
and
outsl
mov
lods
jecxz
mov
inc
jp
xor
add
xchg
jg
sub
ret
or
mov
fldl
enter
cli
cmp
xchg
loop
pop
push
fs
inc
in
shll
aaa
mov
xor
shrb
pusha
mov
xchg
mov
outsb
xchg
or
mov
insl
cld
out
xor
lcall
shl
mov
cs
pop
add
push
mov
pop
or
inc
cli
pop
or
jb
clc
dec
sub
and
adc
mov
adc
pop
adc
sahf
inc
jl
faddl
gs
mov
ss
and
lods
arpl
enter
fwait
push
sub
pop
data16
xor
inc
dec
mov
lret
pop
add
popf
fwait
jns
ss
cli
test
push
ja
das
or
sub
arpl
add
push
and
int
mov
cwtl
cld
dec
lock
in
scas
mov
jg
xchg
xlat
xor
clc
outsl
bound
dec
imul
mov
and
mov
xor
cltd
and
or
cmpsb
les
jbe
fs
jecxz
rcrl
and
mov
jl
xchg
dec
adc
dec
pop
jbe
out
jecxz
cmp
lret
hlt
mov
and
mov
mov
std
sbb
dec
push
lret
pop
orl
xchg
lds
xor
jg
sub
cwtl
add
aas
adc
pop
outsb
add
sbb
scas
cmp
ds
les
jmp
pop
sub
jno
or
loopne
or
mov
lods
mov
fsubr
aad
cmp
movsl
fidivrl
push
cmp
dec
test
inc
xchg
lret
test
xchg
jbe
outsb
xchg
clc
mov
push
fwait
sbb
push
xchg
rcrw
int
dec
pop
sbb
or
sbb
clc
cwtl
jg
and
push
cmpsl
test
in
je
mov
movsb
xlat
mov
imul
fbld
stos
lcall
shll
fimuls
and
jmp
subl
pop
sbb
push
push
dec
in
sub
loopne
inc
xor
iret
mov
sbb
cmp
fincstp
xchg
jle
loopne
repz
arpl
pop
jno
stos
ret
mov
dec
xor
mov
out
sbb
cld
mov
fucom
daa
sub
mov
stc
xchg
add
mov
scas
dec
aam
mov
add
jnp
sar
push
jmp
mov
pop
dec
aas
sarb
pop
in
cmp
dec
cld
fsubl
fdivr
jae
add
jp
pushf
insb
jo
fildl
inc
xchg
cmp
and
xchg
lock
mov
mov
cmp
pusha
das
sti
and
sar
dec
adcl
aas
sti
cld
add
hlt
push
add
pop
and
cmp
popl
sbb
rolb
xchg
cmp
xor
fstps
push
and
xchg
inc
mov
add
test
push
push
xchg
jno
adc
fs
mov
mov
push
push
je
gs
stos
cmc
out
adc
or
addl
shlb
add
outsb
push
sub
mov
cmc
xor
mov
xor
outsb
stos
data16
test
and
shlb
jb
ljmp
nop
outsb
dec
jl
out
fisttpll
cmp
and
ret
sub
fadds
adc
outsl
insl
js
mov
mov
mov
lods
add
repnz
lea
stc
call
cwtl
in
divl
and
loope
scas
xchg
mov
addr16
mov
fwait
mov
or
dec
jne
xchg
push
dec
xor
fidivrs
movsl
xchg
mov
mov
fisubs
test
out
insb
xor
mov
mov
hlt
iret
ss
inc
lds
out
adc
and
push
mov
add
ret
leave
push
out
xchg
jnp
repz
mov
rorl
fwait
int3
xor
pop
add
xor
sbb
lods
cmpsb
xlat
sbb
mov
and
cwtl
insl
mov
pop
js
or
ja
xchg
xchg
cltd
cwtl
jp
adc
jo
js
add
and
and
mov
pop
mov
lret
cld
clc
xchg
mov
lock
jge
cmpsb
sub
and
xorb
or
mov
jmp
inc
shll
loop
sub
add
adc
repnz
mov
fdivr
fdivrl
lods
aaa
and
int
lea
cmpsl
outsb
test
xor
lea
add
fs
das
es
xchg
push
sbb
inc
mov
scas
xchg
vmovdqu
cli
insl
adc
sarl
arpl
push
jp
add
lahf
js
sbb
pop
test
inc
ljmp
sub
sti
in
mov
shl
push
dec
pusha
rcll
xlat
leave
mov
adcb
xor
jae
xlat
pop
pop
push
and
jne
arpl
testb
bound
cmp
cli
shrb
imul
xchg
add
xor
fs
xchg
ret
orb
roll
pusha
lock
mov
push
call
jmp
aas
mov
in
xchg
push
or
xchg
into
cmp
pop
or
in
inc
iret
scas
dec
and
loope
and
cs
les
cmp
in
pop
jg
ficompl
testl
enter
lcall
out
lret
enter
pop
pop
aas
ds
add
in
add
lds
loopne
arpl
sbb
xor
in
ret
mov
ja
push
or
sbb
cli
andb
jne
pop
push
or
and
xchg
orl
add
roll
xor
sahf
outsb
push
push
mov
or
imul
outsb
fistl
mov
pop
and
and
dec
cmp
or
or
mov
dec
inc
stos
jl
jle
push
daa
pop
cmp
push
roll
jae
lea
push
in
mov
xchg
test
lret
cmovb
bound
lock
fmull
fisttps
or
int3
cmp
jecxz
ret
lock
xchg
in
pop
in
loopne
insl
cmpsl
stos
dec
jmp
dec
mov
ret
adcb
xor
mov
jne
lds
hlt
ret
add
notl
loop
and
int
test
xchg
loopne
push
mov
push
push
mov
adc
cli
lret
dec
push
int
mov
idiv
call
popa
inc
cwtl
jle
pop
cvtdq2ps
xor
test
sbb
fidivrl
dec
mov
fdivs
int3
rclb
movsb
pop
or
fsubs
jne
mov
and
pop
xor
adc
imul
pop
push
shll
sub
jo
nop
sub
xor
fcompl
pop
maskmovq
mull
xchg
lret
inc
fcmove
or
cltd
outsb
jecxz
lcall
outsl
dec
lahf
mov
neg
push
jecxz
jp
nop
xchg
into
add
adc
gs
dec
cmp
jnp
adc
mov
cmp
or
pop
xor
and
cmpl
mov
lahf
nop
aam
mov
dec
adc
adc
add
ljmp
insl
loopne
jbe
push
sub
pop
xchg
xor
cmp
mov
add
int3
rcrl
inc
xchg
push
cld
stos
fistps
pop
mov
scas
dec
pop
xchg
adc
jae
ret
jge
insl
add
add
and
fimull
repnz
xchg
out
jno
cmpsb
inc
stc
fwait
push
pop
das
inc
cld
je
jg
lahf
aad
push
int3
jnp
testb
cli
insb
mov
add
jle
insl
test
sbbl
xchg
test
xchg
mov
pop
push
jns
hlt
std
popa
ret
fwait
les
inc
enter
xor
stc
mov
mov
xchg
jl
cltd
stc
pop
dec
rorb
push
ljmp
mov
mov
aam
jg
in
xor
pop
fiadds
inc
inc
pop
sub
shlb
sahf
sahf
fcomps
sub
mov
fidivs
sbb
std
leave
fwait
in
into
cmpsb
lock
repz
int3
ja
mov
mov
hlt
xchg
sahf
in
mov
pop
lret
mov
mov
dec
test
scas
mov
xchg
dec
cmc
in
jle,pn
inc
cmp
in
xor
data16
mov
movsl
movsb
es
test
xchg
sarb
bound
scas
cs
mov
mov
push
mov
scas
iret
mov
jl
push
mov
mov
fdivrl
test
cmpsb
sub
inc
adc
loop
mov
xlat
stc
scas
jle
and
out
popa
sti
push
and
lods
mov
jb
sub
jl
mov
and
leave
test
loop
in
mov
test
xchg
xor
push
jbe
jno
pop
out
pusha
xorl
adc
rorl
cmc
sahf
jns
fldenv
js
sub
jg
cs
adc
pop
cmc
loop
aaa
pop
cmp
cmp
inc
mov
in
imul
hlt
or
movsb
sbb
shlb
xchg
cmp
dec
cltd
imul
push
movsb
or
ljmp
adc
dec
cmp
mov
pop
cmp
add
jmp
dec
adc
es
mov
std
push
jb
push
jle
xchg
pop
sub
in
int
pusha
je
pop
sbb
jge
sub
or
xchg
mov
movsl
popa
dec
stc
xchg
out
movzwl
out
push
fidivs
adc
push
ret
mov
int
cmp
or
jb
and
sbb
pop
jecxz
cmp
mov
mov
inc
mov
adc
sub
inc
les
sarb
lds
imul
sub
testb
fisubrl
push
int3
loop
cltd
test
loop
nop
mov
loopne
mov
sub
dec
pop
xchg
mov
fsubs
xor
and
push
fisttpll
icebp
inc
cmpsl
push
bound
pop
popa
out
and
jg
popa
mov
cs
inc
mov
push
imul
cli
push
pop
add
and
je
cmc
push
inc
lret
es
cmpsl
and
inc
fs
cmpsb
lock
in
jae
xor
adc
stc
mov
or
ret
mov
jecxz
mov
mov
mov
cmpsl
leave
dec
test
testl
fmulp
mov
pop
sahf
add
test
mov
rorb
lret
in
sbb
pop
int
sub
andl
inc
outsl
mov
ficomps
mov
mov
xor
sub
pop
inc
jno
xor
lcall
xor
ret
jne
in
jle
loop
push
inc
xchg
aam
fs
xor
xchg
inc
insl
mov
push
jb
cmpps
sarb
clc
jl
jmp
dec
xchg
daa
jae
imul
fcmovb
cli
xor
icebp
addr16
push
data16
loopne
clc
xchg
ss
dec
xchg
or
adc
adc
jno
xor
jne
jge
cmp
cmpsb
wbinvd
adcl
xor
mov
bound
pop
pop
arpl
xor
mov
hlt
adc
shlb
xchg
pop
adc
daa
call
adc
pop
push
pop
in
and
fiaddl
and
sti
out
jo
dec
jle
sub
shll
fadds
repz
jno
pop
xchg
pop
vmwrite
imul
cmc
pushf
mov
fs
cmp
cmp
cmp
dec
insb
fimull
xchg
cmp
shl
cmp
dec
pusha
das
stos
sbb
xchg
xchg
mov
sbb
xchg
mov
call
popa
sbb
inc
add
jno
aas
loopne
push
divb
sahf
insl
sarb
inc
stos
lret
fs
cmp
jo
movsb
rcll
setp
pop
pop
mov
ljmp
pop
and
out
jno
xor
loopne
mov
aaa
dec
loop
aad
rorb
mov
movsl
add
das
fistpl
lret
push
mov
negl
fbstp
xchg
std
cwtl
xchg
leave
push
sub
inc
repnz
aaa
orl
jbe
ljmp
inc
xor
cmc
stos
and
fisttpll
rcrb
push
and
lcall
enter
and
in
out
or
cmp
pop
outsl
cmpsb
into
faddl
jge
mov
mov
loope
das
sbb
or
int3
loop
mov
xchg
lods
out
sbb
jmp
mov
ret
mov
jmp
mov
stos
lret
scas
cld
lcall
lods
push
pop
push
adc
repnz
mov
push
jp
xor
call
pop
int
out
push
pop
les
add
call
mov
stos
and
jb
sbb
pop
cmp
addr16
push
mov
ficoms
in
mov
rclb
imul
adc
iret
sub
in
sub
fwait
sar
stos
mov
push
pop
repz
cmp
mov
es
cltd
or
pop
in
and
push
out
stos
jo
ljmp
mov
and
add
jno
testb
push
cs
leave
cmp
pop
repnz
rcll
mov
dec
mov
adc
into
mov
pop
psubusb
jp
pop
and
arpl
xchg
aam
push
lahf
add
sub
jnp
adc
stos
std
cmpsb
xor
cwtl
add
inc
in
mov
jb
out
int
jbe
mov
lcall
into
push
or
and
fsts
or
inc
adc
inc
mov
push
push
sti
pop
mov
mov
subb
shrb
ret
call
or
or
into
popf
mov
stos
sahf
add
cmp
cmp
iret
cmp
cmp
imul
push
in
xor
and
cmpsb
adc
mov
cli
std
xor
dec
mov
add
mov
pop
pop
pop
sbb
mov
xor
iret
and
pop
jl
jb
pop
lret
in
xchg
sbb
fsubrp
out
imul
xor
imul
idivl
rcl
pushl
xor
xchg
jle
jecxz
pop
sbb
cmp
insl
jbe
add
mov
addb
int
movsl
xchg
or
pop
cmpsl
xchg
inc
xor
jo
and
ud0
mov
repz
movsl
scas
jae
addr16
aam
pop
mov
push
sarl
dec
xchg
push
inc
imul
xchg
movsl
sub
inc
xorb
in
adc
add
repz
xor
stc
cmpsl
or
cmp
mov
jmp
rolb
sub
ja
push
pop
push
icebp
jmp
popf
and
adc
adc
mov
rolb
mov
push
jl
testb
sub
xor
mov
sahf
cmc
cmpsb
mov
std
mov
mov
mov
lock
arpl
cwtl
popa
les
pop
inc
sbb
adc
pop
and
cld
mov
xchg
mov
jb
sahf
jp
gs
or
nop
imul
addl
push
mov
popa
push
adc
mov
xor
rorb
xchg
mov
leave
mov
cmp
in
mov
xor
sbb
mov
jge
sub
insl
insl
jmp
stc
jno
hlt
push
outsb
xchg
add
jbe
icebp
mov
leave
notb
cmp
mov
movsb
mov
imul
sti
jb
mov
data16
mov
or
jno
es
jl
jmp
popa
fsubrp
inc
outsl
out
mov
insb
lods
mov
int
out
mov
loopne
cltd
or
cmpsb
rcll
and
and
das
inc
cmpsl
arpl
jb
mov
mov
lcall
sbb
fcomps
outsb
mov
inc
dec
mov
dec
int
js
ja
iret
xor
push
mov
sti
add
pop
fwait
clc
or
aam
mov
or
test
mov
or
test
stc
jne
sub
push
jmp
pop
call
inc
jg
jae
pop
adc
add
xor
push
push
lods
pushl
xchg
popa
loopne
popa
dec
sub
mov
fstpl
pop
hlt
inc
xor
mov
mov
jecxz
jno
mov
sbb
fnstsw
mov
push
mov
sbb
mov
add
cmp
movsl
aaa
adc
xchg
sub
aad
add
aaa
lds
ret
xchg
clc
xchg
mov
mov
push
dec
dec
adc
mov
mov
dec
sbb
jge
ljmp
pop
push
icebp
outsl
fmul
lods
mov
dec
xchg
push
outsl
insb
xchg
dec
xor
fisttpl
orb
test
jl
lock
cmp
jnp
cmpb
pop
xor
mov
jle
pop
jae
jnp
mov
dec
mov
aaa
mov
mov
mov
out
adc
rol
lods
mov
arpl
jno
jne
gs
mov
gs
aas
shll
int3
add
dec
inc
enter
sub
xlat
add
idivl
pop
fistl
adc
push
fs
cmpsl
or
pop
add
into
vmptrld
in
xchg
hlt
inc
into
pop
jae
in
sbb
xchg
rorb
sub
adc
lcall
addr16
fcmovne
repz
mov
scas
fdivrl
push
loopne
aas
mov
orb
aas
inc
arpl
js
repnz
out
out
shlb
outsl
ja
sbb
or
push
xor
inc
hlt
jne
lock
ss
cwtl
adc
pop
fdivrl
shl
add
sbb
pop
xor
adcl
repnz
sub
inc
pop
lahf
pop
call
add
scas
icebp
mov
fst
repnz
fsubrp
pop
mov
push
aas
enter
push
aaa
or
mov
repz
mov
xchg
or
push
sub
dec
sub
shrb
xchg
fidivrs
pusha
or
lds
aaa
mov
in
jbe
rolb
and
sahf
sahf
cmc
fwait
loope
mulb
cmpsb
mov
cmpsl
sbb
jmp
pop
std
adc
cmp
inc
je
out
roll
jge
ljmp
and
out
js
insb
scas
pop
adc
dec
rolb
int
mov
out
inc
icebp
add
ret
test
mov
fnstsw
aam
ljmp
outsl
and
xor
mov
push
jne
imul
inc
inc
repz
in
inc
stos
jbe
rorb
mov
ss
notb
lcall
mov
out
jmp
sbb
push
mov
pushf
xchg
jmp
fimull
inc
pop
jne
leave
adc
imul
roll
popl
mov
push
lock
and
mov
dec
mov
sbb
and
xor
in
mov
stos
push
mov
lcall
mov
stos
imul
mov
stos
scas
xchg
out
and
cld
ljmpw
adc
dec
in
sub
fs
rclb
loopne
fwait
push
js
cld
popf
aas
rcrb
mov
dec
jg
push
xor
es
out
fisubrs
xchg
je
jge
mov
sub
jge
pop
pop
enter
ljmp
fists
adc
or
addb
inc
scas
int3
jecxz
and
fcmovnu
out
or
iret
push
lret
sbb
adc
or
and
sub
lods
fldenv
mov
aad
adc
or
jp
in
shrl
mov
gs
lods
sbb
dec
cmp
out
jns
or
inc
cmp
and
xlat
std
shll
adc
cli
push
jg
neg
mov
inc
add
jg
lods
mov
sbb
jo
and
pushf
sti
and
les
xchg
in
push
sbb
cmp
das
push
mov
pop
jae
jle
push
iret
insb
jno
cmp
and
rol
es
xchg
sub
push
push
ret
xor
add
jnp
sbb
jo
jo
pop
pop
dec
and
push
clc
jge
mov
pop
pusha
lods
jle
cli
loop
dec
adc
pop
adc
call
repz
jbe
inc
mov
cmp
pop
or
push
outsb
and
lods
bound
das
aam
lcall
fwait
push
mov
add
xchg
or
pop
std
pop
push
inc
push
insl
adc
push
jae
cmpsb
in
fstpl
ja
sub
sub
lods
add
xor
test
loope
sbb
dec
pusha
movsb
add
cmp
lcall
jecxz
pusha
test
xchg
xchg
test
in
xchg
int3
mov
mov
lods
jge
cmp
push
loope
xchg
xchg
jle
or
std
push
orl
sbb
out
fisttpl
mov
mov
mov
in
dec
dec
xor
repz
xor
aaa
jns
into
mov
dec
jp
mov
mov
inc
push
jecxz
shlb
push
imul
mulb
ljmp
je
outsl
add
jg
jle
inc
in
xlat
or
xor
xlat
jae
push
fdivl
pop
lock
in
mov
lock
int
jb
mov
into
je
pop
daa
pop
and
in
sahf
mov
mov
mov
inc
cwtl
movsl
daa
ss
cmpsb
jge
xor
cltd
popa
push
inc
mov
popf
pop
sub
mov
fucomip
or
fnstenv
faddp
lea
dec
sub
fsubs
movl
mov
dec
shrl
dec
mov
clc
push
xchg
xchg
loop
dec
and
and
imul
jl
xchg
imul
shrb
out
mov
gs
add
add
and
mov
mov
fs
mov
or
aaa
int3
xor
gs
mov
sub
pop
fstpl
push
cwtl
icebp
jge
xor
out
outsb
out
add
or
insb
cmpsb
fistpll
xor
lret
xor
js
imul
jno
sub
mov
xor
rcll
loope
in
iret
jle
imul
fldt
and
outsb
add
xor
das
sbb
hlt
out
sub
mov
mov
inc
lods
loopne
loopne
dec
pushf
mov
cwtl
and
fucomi
jnp
cs
lods
jb
popa
imul
add
mov
nop
iret
jmp
inc
xchg
jecxz
cwtl
and
cli
mov
das
aad
inc
xchg
add
fistpll
movsb
movsb
ds
popa
out
inc
cld
mov
gs
mov
jecxz
dec
loopne
and
ret
pop
pop
repz
not
or
and
aas
xchg
push
xor
mov
and
jne
mov
jp
jecxz
or
push
xor
scas
bound
divl
je
xor
cmpsb
push
out
fimull
mov
cmp
cmp
shll
cmp
idiv
movsb
test
or
cmpsl
jnp
lret
icebp
cld
pop
fisubs
dec
jnp
mov
sbb
mov
mov
int
dec
repz
ds
adc
stc
jge
shlb
add
test
mov
mov
inc
vpshuflw
imul
lds
or
xor
xor
les
mov
mov
test
out
dec
push
mov
mov
pop
sub
lods
insl
aas
xchg
mov
das
adc
dec
adc
or
je
clc
call
sub
add
mov
cmpsl
stos
cli
lods
jae
adc
mov
inc
dec
xchg
jae
or
test
lods
mov
push
repz
mov
jmp
and
in
mov
xchg
dec
pop
mov
cld
inc
lds
push
mov
and
push
clc
push
dec
aad
lods
lahf
push
push
jnp
pop
dec
or
push
pushf
dec
int3
mov
sbb
xlat
cwtl
push
gs
jne
orl
mov
sub
sub
sbb
pop
pop
jb
fldt
test
add
and
lds
jno
xor
xchg
push
cli
dec
fmull
xor
pop
jns
jno
or
mov
and
cmpsl
addr16
hlt
sarl
and
xlat
xchg
rorl
cmp
xchg
push
loop
xchg
insl
lods
and
cmp
jb
lea
adc
pop
mov
sub
and
into
shlb
push
add
push
push
ret
pop
inc
mov
stos
mov
rcl
in
mov
fiadds
cmp
fcmovnbe
jle
cmp
jne
fucomip
test
pop
repz
ret
sub
ja
aad
es
xor
mov
mov
mov
fxch
cli
inc
dec
int
int
sarl
rcl
jb
push
pop
lea
rorb
lea
inc
sub
insl
repnz
dec
into
xchg
xchg
mov
ds
sahf
mov
or
or
in
jle
sti
or
mov
mov
push
jbe
fnstsw
push
lret
repnz
xorl
and
cmpsl
jb
jne
jb
ljmp
popa
dec
add
int3
ficompl
call
and
fldt
add
or
fwait
idivb
cwtl
scas
jno
inc
push
test
inc
pop
ret
xchg
or
cmp
ret
int
jbe
ja
pushl
or
fsubs
push
andl
andb
lret
xor
pushf
lods
cwtl
stc
outsl
xchg
cli
inc
pop
cltd
andb
lcall
or
stc
ret
out
jg
and
test
mov
and
adc
movsl
adc
cmp
pusha
lds
xchg
in
cld
les
ret
push
rcrb
jg
or
cld
mov
pop
mov
cmp
arpl
das
mov
cs
xlat
insl
mov
and
iret
cli
sahf
popf
in
mov
push
bnd
jae
inc
enter
cmc
sbb
outsl
test
add
addl
sbb
mov
ljmp
xor
lret
mov
mov
ficompl
sub
sbb
pop
add
movsb
ljmp
mov
xchg
xchg
sbb
in
sub
aad
lods
test
fldcw
scas
sbb
sarl
ss
and
push
cmp
das
mov
and
mov
out
mov
scas
testb
mov
loop
stos
or
test
xchg
fcomp
leave
mov
outsl
sbb
jno
gs
ss
adc
les
pop
rorl
and
mov
hlt
inc
adc
push
mov
push
xchg
lods
and
inc
lods
cli
inc
imul
xor
mov
rcll
xchg
mov
lods
inc
cltd
fcmovbe
mov
inc
xchg
jge
pop
dec
popf
insb
jp
mov
das
xchg
pusha
mov
jb
mov
cmp
mov
es
insl
add
scas
mov
inc
cmp
mov
data16
fnsave
sarb
mov
add
not
push
mov
sub
out
stos
xchg
dec
xchg
cmpsl
inc
out
add
lahf
test
mov
and
mov
fstpt
dec
jmp
scas
xchg
das
or
ss
dec
pop
test
pop
ret
aad
add
sbb
jmp
and
xchg
push
pop
pusha
sbb
fcomi
pop
pop
mov
lret
pop
inc
out
mov
and
jl
in
bswap
add
xchg
repz
xlat
jge
jg
aam
arpl
lret
ficoml
xor
enter
icebp
cmp
jmp
ss
dec
xchg
lds
jns
push
inc
imul
pop
popf
add
or
cmpsl
add
dec
aam
hlt
repnz
mov
dec
adc
in
add
clc
notb
xchg
int3
in
dec
jne
pop
das
pop
jp
jp
fdivp
ret
sub
aas
jl
inc
push
loop
lea
movsb
fisttpl
cli
mov
push
cli
mov
lock
addr16
inc
mov
or
sub
repnz
cmc
mov
and
xchg
pop
jno
add
mov
cmp
adc
inc
cmp
xadd
arpl
fsub
negl
out
dec
push
mov
fldl
cli
jns
sub
sub
push
bnd
pop
and
pop
sub
pop
out
rclb
xchg
jp
cmp
ja
fimuls
in
pushf
testl
cmpl
aas
xor
movsl
jg
cmovnp
mov
dec
mov
mov
or
jae
aas
ljmp
into
in
mov
dec
aaa
imul
sub
pop
cmp
pop
out
jae
out
xchg
mov
mov
xchg
int3
inc
add
lods
movsb
mov
stc
cltd
sbb
adc
int3
sub
insb
xchg
arpl
and
outsb
xchg
popa
gs
insl
xor
cmp
iret
pushf
xchg
lods
mov
xchg
loopne
jl
xor
in
and
ret
dec
or
lcall
jmp
cld
dec
scas
popa
cwtl
fisubs
and
cmp
pop
cli
std
jb
cmc
push
sub
mov
and
sub
jae
bound
lret
dec
enter
lcall
dec
dec
mov
sub
dec
lahf
adc
inc
xor
mov
mov
mov
add
lods
fiaddl
sub
lds
and
mull
pushf
aaa
push
subb
mov
or
xchg
xlat
mov
mov
arpl
cltd
or
adc
jp
adc
cmp
lret
es
ss
sarb
gs
cli
test
add
xlat
inc
sbb
add
push
pop
inc
pop
int3
mov
add
stc
mov
fnstsw
pop
sahf
fisttps
cmpsl
cmp
and
cwtl
movsb
nop
sbb
sbb
into
dec
dec
mov
push
and
add
mov
pop
bound
ss
dec
sub
cltd
popa
mov
fisubs
sub
cmc
aam
scas
pop
jnp
inc
cld
push
mov
dec
loopne
fdivs
pop
aam
cmpsb
and
outsl
dec
out
xor
inc
lea
clc
cli
xchg
cmp
ficoml
dec
fcmovu
pop
ss
sub
jnp
mov
inc
pop
nop
and
and
mov
mov
ficomps
je
and
xchg
in
hlt
mov
sbb
into
repz
xchg
sbb
pop
mov
fsubs
push
mov
pop
and
mov
adc
test
insl
pop
fwait
add
into
mov
aas
push
insb
lock
adc
dec
pop
into
jae
push
inc
push
xchg
cmc
call
mov
push
lds
mov
mov
inc
and
vcvttsd2usi
in
adc
pop
mov
in
jae
mov
das
cwtl
fsubrl
clc
jns
cmp
movsb
fs
push
lcall
ds
rorb
inc
imul
fildl
cld
mov
jne
aad
adc
jbe
xor
shrl
test
arpl
mov
in
fwait
outsb
xchg
hlt
mov
and
xor
and
adc
pop
mov
test
inc
in
mov
ret
imul
sub
add
sub
fs
cltd
data16
testb
mov
and
es
out
mov
push
outsl
inc
push
lret
xchg
fisttpll
imul
fninit
push
mov
test
rcll
jnp
gs
jg
cltd
mov
mov
lock
daa
imul
fisubrs
sub
mov
int3
nop
and
sbb
xchg
rep
repz
jmp
test
in
lds
or
xor
inc
cld
imul
loop
dec
jns
out
fwait
cmp
fs
rcll
jae
cmp
push
ss
call
iret
fstps
pop
push
mov
cmc
and
push
mov
jle
ja
jo
jo
mov
popa
xchg
adc
in
push
and
inc
out
shrb
jnp
jecxz
outsb
in
shll
in
ret
mov
or
pop
sub
lret
xor
inc
movsb
lcall
lahf
cmp
xchg
shlb
jno
jl
pop
or
enter
pop
mov
pop
into
scas
aam
mov
sarl
or
sahf
popf
push
xchg
test
pop
pop
call
cmpsb
dec
mov
dec
sub
sbb
mov
imul
nop
mov
push
cmp
jns
dec
in
sbb
popf
dec
adc
mov
imul
xchg
ret
cltd
mov
sbb
cmpsb
int
mov
fstps
aaa
sub
push
loopne
mov
and
push
movsl
fs
ljmp
lahf
xchg
push
push
jecxz
adc
cmp
adc
jl
pop
data16
mov
dec
sub
std
xchg
adc
addr16
popf
fdiv
repz
cld
ljmp
ljmp
aaa
xor
loope
jmp
mov
jb
mov
push
incb
fsubl
or
mov
int
shll
call
outsl
bound
dec
cmp
inc
adc
xor
dec
or
ja
scas
lods
lds
xchg
sbb
xchg
or
push
enter
inc
inc
call
inc
xor
cmp
and
mov
adc
in
rcrb
push
iret
dec
inc
icebp
xchg
sbb
ss
in
in
add
shll
xchg
int3
mov
pusha
mov
mov
ja
mov
add
mov
fadd
dec
movsl
ret
pop
xchg
mov
out
mov
popf
jae
xchg
jnp
fildl
or
cli
sahf
mov
dec
cmp
cwtl
or
pop
add
jnp
mov
in
jbe
add
fistl
inc
sbb
enter
js
insb
jae
in
mov
jnp
in
pop
sbb
inc
aad
push
lods
sub
dec
jg
mov
lret
fnstenv
mov
and
add
and
mov
xchg
icebp
xchg
mov
jge
scas
mov
icebp
lret
xchg
outsb
jge
enter
sub
xchg
push
inc
cs
test
adc
push
fwait
jnp
js
push
lds
mov
sub
mov
and
gs
cmp
adc
out
inc
loope
jns
or
jo
sbb
add
fdivrs
lods
jecxz
mov
adc
je
ja
fnsave
cmc
lds
ss
cwtl
jne
cmp
jns
dec
inc
loope
leave
mov
sbb
fildl
or
push
mov
adc
daa
lock
pop
xchg
add
mov
pop
sub
jmp
outsl
inc
mov
jb
clc
pop
in
enter
mov
inc
aaa
into
xchg
or
int3
push
popa
lock
scas
xchg
inc
xor
repnz
out
popf
push
push
mov
or
dec
lods
or
outsl
aam
and
or
rcl
jae
test
jne
dec
mov
ret
jae
jno
mov
enter
adc
mov
mov
and
insl
loopne
jg
mov
jns
dec
xor
repz
cmc
into
pop
notb
lods
cmpsl
mov
aas
add
ret
ljmp
fwait
mov
insl
add
mov
aaa
movsb
pop
push
not
inc
xchg
mov
sti
push
mov
cmpsb
into
cmc
push
or
xor
imul
mov
jb
push
sub
scas
cmpsl
addps
add
out
insl
or
mov
es
cs
inc
dec
sbbb
rclb
leave
pop
and
sbb
repnz
cmp
in
imul
clc
test
ds
dec
push
xchg
loop
in
mov
out
aaa
xor
mov
imulb
stos
mov
cltd
cld
pop
and
cmp
data16
std
cltd
mov
aad
adcb
mov
add
add
or
lahf
jb
push
mov
ja
aad
mov
push
mov
xor
fidivrs
clc
xor
ret
push
jae
js
and
lret
cmp
xorb
stos
xchg
cmc
cmpsb
cmp
negb
inc
jno
adc
dec
js
jp
pop
enter
pop
sub
gs
repz
jmp
or
ljmp
xchg
jno
imul
mov
mov
into
sahf
mov
dec
ret
mov
inc
mov
dec
xor
mov
ds
shlb
fmuls
push
sar
adc
les
out
push
mov
cmpsl
and
mov
cmp
in
inc
jo
push
in
daa
repz
fwait
push
testl
push
icebp
sbb
repz
ja
hlt
bound
push
rclb
loope
stos
xchg
xchg
fwait
sub
mov
scas
pop
mov
jns
xchg
inc
lods
fs
cwtl
sbb
and
mov
inc
jle
push
fisttpll
fsubr
leave
insb
rcl
add
div
adc
adc
adcb
fnstcw
hlt
xchg
pop
jae
pop
sub
lcall
and
xorl
insl
lock
shrl
pop
cmp
test
add
sub
xchg
loope
cwtl
push
rcll
or
inc
cmp
pusha
cmp
out
push
test
daa
mov
ficompl
jo
or
push
fldcw
adc
sub
lahf
push
das
nop
lds
popf
sbb
xchg
mov
addr16
or
inc
lret
pushf
sub
icebp
test
aad
add
mov
fcmovnu
xchg
mov
aam
popf
adc
stos
adc
mov
cmc
jg
cmpsl
pop
sub
aas
sub
cmp
xchg
int3
pop
add
scas
cmc
cwtl
pop
lock
lock
ja
inc
and
lret
push
mov
mov
mov
loop
mov
inc
ret
stos
push
adc
icebp
and
rorb
mov
or
test
clc
dec
pushf
test
push
sub
movsb
lcall
sub
or
dec
notb
dec
loopne
jle
cmp
dec
dec
mov
xchg
push
rorl
sub
sarb
arpl
mov
sti
xor
rclb
fisttpll
filds
das
enter
push
insb
data16
jnp
or
inc
push
xor
flds
fwait
repz
mov
test
pop
aaa
fnstsw
aaa
sub
jae
stos
cmp
pop
pop
or
outsl
lds
jo
mov
mov
xchg
lock
lds
mov
push
popf
pop
jb
adc
imul
hlt
or
movsb
shll
jmp
inc
movsl
push
sbb
inc
fcoms
pop
sub
xchg
adc
in
mov
inc
int
rcr
mov
pop
jns
mov
sqrtps
xchg
je
jns
cmc
in
loop
movb
loop
and
stos
and
sub
push
add
lods
out
cmp
sub
and
sbb
xchg
mov
mov
lea
shll
popf
dec
mov
jb
movsl
scas
dec
punpcklbw
jle
in
nop
std
pop
test
mov
pop
push
adc
mov
movsl
lods
add
out
pop
or
jns
sbb
cmp
add
mov
scas
sti
pop
out
sbb
js
lahf
ret
or
lock
adc
call
inc
ret
out
out
and
ja
shl
and
out
fbstp
aas
stos
aaa
test
adc
xor
daa
sahf
out
jp
xchg
sbb
sbb
mov
xchg
outsb
jae
aad
xchg
or
inc
lock
stos
movsb
pop
rcrl
jp
lahf
inc
inc
mov
cld
ljmp
pop
and
lahf
cmp
lock
inc
and
ja
mov
repz
repnz
fld
or
mov
insl
mov
rol
les
xchg
loope
or
into
lcall
test
xchg
inc
inc
dec
leave
mov
inc
flds
inc
into
addr16
push
cli
clc
ret
incb
jno
and
mov
sbb
sbb
inc
sahf
jo
adc
xor
xor
add
mov
pop
sub
inc
or
or
pop
jo
sbb
lahf
sub
jbe
mov
gs
data16
mov
mov
lret
stos
ja
adc
adc
or
aas
dec
lahf
and
mov
pushf
lods
imul
cmp
in
rol
mov
scas
dec
clc
out
sub
test
mov
adc
pushf
outsb
push
int3
mov
mov
jno
xchg
fidivrl
xorps
out
or
dec
stos
push
jno
add
movb
xchg
and
sahf
xchg
pop
mov
pop
add
adc
xchg
ljmp
xchg
je
xchg
adcb
rolb
mov
in
addr16
mov
sub
icebp
and
rorb
mov
push
int3
sub
xor
push
push
mov
cmp
out
xlat
cli
jo
inc
cwtl
mov
pop
or
add
std
insb
jecxz
adc
jns
or
ds
jecxz
push
xchg
in
sub
or
aaa
std
adc
cmp
push
in
push
xor
aaa
mov
cmp
data16
pop
outsl
inc
add
cmpsb
dec
ret
orb
sub
decb
js
push
movsl
iret
add
fisttpll
fcoml
mov
leave
out
enter
mov
adc
pop
and
push
xchg
push
sub
add
rcll
push
daa
xor
imul
fbstp
movsb
mov
pushf
push
mov
shl
imul
push
push
cmpsb
fimull
mov
adc
in
add
call
and
xchg
jns
sub
sti
mov
dec
adc
cmpsl
cmp
push
inc
pop
push
lds
mov
mov
data16
dec
imulb
dec
dec
pusha
or
or
hlt
fdivrp
test
cmp
push
movsb
loope
cli
in
xchg
mov
ljmp
pop
add
adcl
cmp
xor
mov
mov
das
mov
mov
movsl
addr16
sbb
stos
jae
out
or
dec
and
pop
in
rorl
and
dec
es
add
dec
lock
mov
enter
test
sahf
and
in
add
cmc
lret
movsl
fisubs
insb
neg
call
in
out
add
ret
or
mov
jge
xchg
lcall
mov
sub
pop
insl
test
or
add
adc
aas
cltd
bound
inc
int3
pop
mov
pop
mov
lds
lds
es
int
loope
adcb
push
mov
adc
xor
cltd
adc
lock
jle
jle
lods
fidivrs
bound
daa
jl
inc
jnp
dec
inc
pop
mov
test
pop
aad
out
mov
icebp
cmpsl
lods
jo
mov
enter
inc
pop
testl
test
add
sub
faddl
out
xchg
rorl
cmp
fwait
push
mull
jmp
js
xchg
das
and
push
adc
xchg
jp
xor
push
adc
sbb
int3
cmpsb
adc
test
mov
sti
fstpt
jge
dec
adc
fsubl
iret
pop
and
test
subl
aaa
mov
loope
js
and
dec
iret
xchg
addr16
inc
mov
mov
repz
flds
mov
in
pop
arpl
cmpsl
inc
xchg
push
mov
or
inc
pop
jl
xchg
lret
xchg
or
pop
mov
push
lret
popa
sub
xor
pop
dec
mov
cld
dec
in
xchg
gs
push
mov
pop
lea
inc
adc
popa
xor
lahf
sti
sbb
jle
repz
add
mov
xchg
xchg
push
loop
iret
frstor
stc
sti
movsl
lock
lea
aas
add
push
in
out
std
inc
push
cmp
sub
ja
xlat
ret
push
shrl
mov
neg
lods
jae
test
es
xchg
dec
loop
mov
push
dec
dec
mov
lret
xchg
jae
push
jle
jp
jmp
stc
mov
cmp
fwait
stc
mov
mov
mov
mov
data16
and
inc
mov
fnstcw
out
sarl
mov
sub
addr16
pop
pop
or
jb
add
sub
rorl
lods
dec
popl
ret
add
inc
testl
imull
lds
or
sbb
mov
cwtl
sti
popa
or
jo
cmpsl
xchg
shlb
outsl
mov
adcl
lock
and
xchg
jae
cmpl
cmp
nop
lock
loope
fs
stos
ljmp
push
aaa
xor
xlat
pop
fs
or
imul
inc
ret
pop
sbb
jbe
mov
testl
lret
mov
push
rorb
stos
jne
inc
mov
inc
dec
pusha
pop
mov
out
adc
and
cli
jge
push
ja
jne
jne
repnz
clc
jecxz
xlat
in
inc
ret
xor
jne
pop
pop
test
in
add
or
add
cmpsl
jae
or
fbld
push
inc
push
push
mov
dec
pop
adc
push
repnz
pop
push
popf
cmp
jno
nop
out
jno
stos
fxtract
jbe
andl
push
xchg
ss
enter
dec
push
xrelease
mov
rcr
mov
das
out
into
sub
popa
jbe
imul
or
test
clc
aad
inc
mov
mov
data16
adc
call
movnti
push
loope
sub
mov
mov
enter
pop
leave
imul
lods
or
addr16
fwait
imul
popf
jo
loop
cmp
aam
cmpl
in
xchg
push
xchg
mov
jne
cltd
test
testl
psubw
repnz
add
dec
dec
outsl
cltd
pop
pop
and
mov
push
mov
adc
rcrl
jge
jge
push
adc
and
and
fisubs
fdivs
add
add
insb
ret
aaa
pushl
jb
xchg
ret
pop
and
lock
dec
mov
fwait
or
and
loopne
scas
add
ds
out
xlat
in
cltd
mov
fs
dec
pop
fdivs
fs
pop
pop
clc
lods
or
int3
xor
jbe
sub
addr16
dec
add
sub
inc
pusha
addl
out
cld
mov
out
and
loopne
int3
push
push
mov
sub
sub
jns
dec
sub
or
mov
cmp
sbb
mov
or
test
xorl
std
mov
loopne
dec
nop
insb
xchg
pop
xchg
rcrl
imul
and
orl
xor
testl
call
enter
test
push
int
test
push
adc
rorb
sbb
xor
icebp
add
imul
dec
imul
movsb
sub
ds
outsl
xchg
shlb
movq
push
in
movsb
call
xchg
jmp
in
aas
data16
mov
lods
stos
in
pop
sysexit
dec
cs
add
cmc
xchg
add
xchg
iret
inc
pop
mov
lret
cs
imul
dec
adc
fcmovnb
dec
jl
dec
sbb
arpl
xchg
lret
mov
cmp
iret
pop
mov
pushf
xor
cmp
mov
pop
cmp
mov
cmp
gs
fcomip
int
notl
and
and
push
fldl
cld
shll
jg
lods
cmp
rcrl
or
push
push
cmpsl
or
ljmp
mov
mov
and
cmp
lahf
test
pop
adc
es
adc
es
arpl
adc
xchg
lock
or
negb
or
dec
jbe
or
jp
int
mov
pop
test
fadds
sti
lret
jae
jns
or
lods
xor
les
bound
stos
adc
cmp
or
xchg
sbb
mov
jnp
dec
adc
push
test
push
jns
inc
sbb
mov
sub
int3
out
in
int3
test
xor
push
ret
ficomps
add
cmp
popa
push
inc
addr16
mov
mov
mov
inc
mov
adc
pop
ret
invd
loopne
inc
adc
cs
out
mov
sahf
fildll
sbb
in
icebp
inc
das
fldenv
sbb
ss
dec
addl
popf
dec
or
adc
mov
aaa
adc
ss
xlat
inc
cs
clc
or
scas
adc
mov
imul
or
into
mov
out
jo
xor
stc
inc
push
dec
mov
out
in
or
rcrl
push
ljmp
pop
dec
mov
cmpb
adc
push
test
mov
scas
das
imul
cmc
out
jbe
cmp
mov
mov
mov
cwtl
push
mov
sahf
and
dec
cmp
ret
cmp
sahf
hlt
xlat
fs
int3
fsubrl
adc
outsb
xor
mov
cmp
xor
pop
cmp
ror
cltd
jno
fwait
imul
push
mov
mov
out
inc
push
add
lds
jecxz
repz
lret
xor
inc
ds
rcrl
jns
xchg
adc
repnz
cmp
adcl
jp
leave
or
in
test
inc
mov
xlat
mov
dec
inc
clc
push
add
lock
mov
push
lds
ds
es
jp
hlt
mov
outsl
pandn
roll
dec
jp
sbbb
in
ss
aad
lods
jno
cmp
mov
adc
sbb
imul
popa
sbbb
xor
es
jo
jg
mov
cmp
or
pop
cmp
push
or
and
fcoml
inc
fs
lret
sub
sub
sbb
add
mov
movsl
cmp
xchg
xchg
int
push
daa
pop
adc
cmc
pop
adc
scas
jp
cmpsb
sub
insl
jno
mov
scas
jns
jp
pop
mov
addr16
mov
sahf
insb
negl
addr16
roll
outsl
xor
cmpsb
sub
xor
add
inc
in
add
jb
pop
stos
mov
dec
xchg
mov
and
sbb
jmp
jbe
stc
lcall
push
mov
test
fisubl
repnz
ds
fldt
or
loop
scas
add
in
and
pop
loopne
scas
divb
pop
and
testb
scas
int
push
pop
pop
pop
xchg
fnstcw
ds
aaa
sahf
xchg
jge
mov
dec
and
insb
test
cmp
add
fisttpl
xchg
imul
cwtl
cmp
sbb
sbb
pop
ret
ljmp
mov
js
outsl
out
xchg
mull
xorl
jecxz
pop
fldenv
xchg
pop
aad
and
ret
sbb
add
add
in
in
sbb
sub
fcoml
mov
mull
lret
pop
lret
popf
mov
sbb
mov
mov
dec
rorb
jo
sbb
cmp
out
mov
mov
int3
xchg
mov
inc
mov
add
pop
push
jp
mov
imul
xchg
xor
mov
cmp
pop
aaa
sbb
pop
outsb
clc
sub
xchg
imul
xor
negl
push
les
arpl
lods
aad
fdiv
dec
pop
xchg
sub
stc
or
mov
inc
push
stos
pusha
movsl
sti
mov
cmpsl
mov
jno
xor
inc
and
jmp
sub
aam
adc
shlb
popf
dec
and
dec
sbb
loop
data16
dec
sub
xchg
icebp
xchg
pop
les
sub
popf
stos
push
xchg
pop
xor
inc
out
mov
mov
mov
jmp
pop
mov
jp
add
sub
xchg
push
inc
lods
or
and
aam
push
jnp
xor
in
add
fwait
outsb
jns
arpl
cltd
jge
js,pn
repz
sbb
or
or
cmp
add
fcmovu
scas
lods
xlat
add
rorb
cmp
inc
mov
dec
dec
jae
jmp
das
ret
lcall
in
iret
cltd
inc
mov
nop
xor
mov
andb
imul
testl
fs
mov
sub
add
adc
mov
std
jne
popf
sub
xor
mov
cmpsb
insb
cmc
jl
test
pop
xchg
jmp
in
negl
jno
push
and
mov
jp
outsl
pop
sbb
mov
jecxz
mov
inc
mov
dec
adc
scas
es
inc
pop
pop
mov
ja
rcll
xchg
andb
mov
ljmp
push
inc
ljmp
push
or
arpl
inc
add
jp
movb
cmpsl
mov
jbe
ds
test
jl
or
jp
and
xor
mov
mov
and
pop
je
sub
xchg
in
push
pop
jb
or
jne
stc
dec
and
test
adc
addr16
push
repz
hlt
xchg
iret
pop
dec
imul
push
je
int
pop
sti
jmp
sahf
mov
xchg
in
fstpt
xor
inc
adc
inc
rcrl
and
outsb
jnp
mov
dec
dec
adc
cli
in
jecxz
out
popa
and
lret
mov
in
jmp
jb
push
scas
enter
popf
dec
push
insl
lret
push
add
xchg
add
pop
leave
and
outsb
int
or
movsb
dec
loopne
jae
mov
lods
in
jp
cwtl
popf
mov
mov
push
lcall
sub
shr
ret
mov
mov
scas
push
mov
push
sbb
cwtl
push
out
add
sti
int
mov
fucom
lock
cmp
movlps
test
adc
dec
cmpsb
shrl
jae
xchg
pop
call
push
pop
xchg
cwtl
xor
jge
fs
shlb
loop
cwtl
jg
inc
adcb
cmp
cli
movsb
stos
inc
jns
dec
scas
cmpsl
sbb
fimull
inc
cmp
jo
hlt
imul
cs
xor
add
lret
outsb
sbb
in
push
lds
lds
enter
dec
and
mov
mov
leave
out
pop
or
adc
std
xchg
fwait
in
repnz
icebp
cmp
and
mov
mov
or
in
test
shlb
loopne
jae
fsubl
adc
xchg
leave
xor
stos
popa
insb
xchg
xor
push
ja
les
xchg
inc
push
sbb
rclb
aas
out
in
sub
fnstenv
sbbb
xchg
loope
sbb
mov
adc
into
xor
frstor
mov
jl
inc
push
sbb
mov
xor
enter
adc
movsb
add
cmp
adc
mov
add
pop
jge
pop
scas
xchg
in
jnp
ss
mov
push
or
and
pop
incl
add
pop
add
push
add
sahf
mov
mov
fildl
mov
and
cmpsl
aam
cmp
jle
add
adc
adc
sub
lret
fisttpl
jl
outsb
sarl
dec
movsl
in
jge
jbe
xor
mov
loopne
sbb
jecxz
sub
enter
jp
xchg
push
add
inc
xchg
or
xchg
bound
jne
add
and
call
pop
vcvttsd2si
jl
fs
cltd
xchg
in
bound
fs
jge
lret
inc
rcll
in
jmp
dec
xchg
inc
movsb
jae
shrl
xchg
imul
push
xchg
mov
sub
jmp
cmp
sahf
out
jno
push
mov
ret
mov
fimull
imul
xchg
or
adc
sbb
mov
outsl
push
fs
jmp
mov
jmp
incb
out
inc
lods
aam
adc
xchg
aaa
out
mov
sbb
add
cmp
fiadds
mov
push
addr16
adc
mov
mov
sarb
add
pop
mov
xor
lret
repz
rdpmc
xchg
sahf
xchg
imul
or
out
mov
cltd
rorl
jb
stc
aad
ret
xor
and
mov
arpl
lods
sub
in
mov
movsb
outsb
pop
add
lock
cmpsb
push
mov
add
dec
inc
or
inc
icebp
add
iret
ret
lret
mov
mov
mov
xchg
repz
imul
xor
pushf
gs
addl
stos
pop
mov
mov
pop
stc
rorl
cli
aad
aas
cs
lcall
addb
add
inc
into
add
sti
gs
mov
adc
scas
jo,pt
mov
inc
dec
cmp
insl
cs
cmpb
out
cli
xor
or
dec
xlat
mov
mov
jnp
cmp
add
stos
dec
dec
pop
xor
lahf
mov
out
fwait
adc
sub
daa
dec
add
add
xchg
movb
push
clc
adc
push
sbb
jne
sbb
rorb
sub
jmp
add
dec
maxps
cmp
test
out
dec
inc
stos
xchg
mov
lret
lods
jp
pushf
jl
xor
imul
sub
or
jge
leave
daa
fdiv
xchg
lret
ret
add
popl
dec
loope
jbe
pop
mov
dec
sub
cmpsb
push
mov
inc
cmp
fmul
leave
push
cwtl
ds
mov
sti
xor
dec
out
fwait
xchg
pop
test
cmp
dec
in
sbb
in
cmp
push
and
andb
fadds
in
cmpsl
js
or
xlat
adc
stc
inc
adc
jb
or
test
js
sbb
adc
or
xchg
add
adc
lret
es
cmc
fsubrl
mov
and
nop
pop
mov
sar
cmc
jmp
pop
pop
int
mov
jno
bound
into
cmp
pop
js
outsb
xor
adc
sbb
je
dec
and
push
mov
aas
jae
lea
inc
loopne
lret
adc
aas
inc
repnz
adcl
pop
inc
pop
es
xchg
test
xchg
int3
insb
or
std
sahf
mov
pop
rorl
outsb
icebp
or
dec
inc
and
add
xchg
insb
in
dec
iret
sub
push
orb
ljmp
dec
mov
cmpsb
repz
cwtl
das
adc
adc
xorb
scas
movsb
sbb
push
jmp
pop
mov
xor
je
lods
loopne
pop
leave
movsb
sbb
pop
pushf
cmp
adc
shlb
pop
push
aaa
push
aam
out
lret
sarl
in
insl
mov
test
xor
out
push
push
push
frstor
out
loopne
cltd
pop
xchg
add
xchg
cmp
and
out
ja
test
inc
in
ja
iret
add
lock
dec
add
bound
icebp
pop
rolb
in
out
inc
in
add
hlt
or
pop
lret
pop
cmp
mov
mov
pop
pop
pop
mov
loopne
jmp
fyl2x
add
jp
into
push
and
mov
cmp
mov
in
fildl
ja
loop
leave
dec
arpl
dec
dec
pcmpeqd
addr16
jnp
sub
stos
imull
inc
lea
jle
xchg
push
mov
push
int
push
push
pop
shll
in
push
lret
inc
jb
fldl
push
push
mov
inc
push
call
lods
push
dec
test
loope
cmp
mov
ljmp
pushf
xorl
fisubrl
repnz
fnstsw
mov
je
pop
imul
sahf
sti
sbb
test
or
int
shrl
push
outsl
fs
loop
push
jno
jg
and
leave
sarl
mov
inc
adc
das
aas
push
mov
inc
ja
xchg
push
hlt
and
inc
sarl
and
inc
cltd
pop
jmp
cwtl
push
outsl
mov
dec
jb
in
bound
jecxz
repnz
mov
out
push
pop
scas
jecxz
popa
adc
push
outsl
mov
xchg
bound
xor
test
or
mov
lahf
xchg
stc
xchg
jns
lcall
repz
cmpsb
xchg
sbb
mov
rcrb
insb
xchg
cltd
jmp
cs
and
pop
push
push
scas
mov
imul
jne
ret
aam
ljmp
icebp
icebp
sub
loope
imul
in
outsb
and
ret
shl
inc
pop
pop
into
sbb
cmp
push
jb
into
iret
fstps
fildl
andl
in
aaa
sub
lea
aaa
popf
cmp
sbb
mov
dec
sar
movsl
push
sub
les
push
stc
xchg
sbbb
cmp
imul
call
ja
push
xchg
cli
xchg
pop
jne
jno
mov
cli
push
enter
int3
mov
xor
inc
js
out
in
cmp
ret
push
mov
mov
arpl
bound
lods
mov
mov
jns
cmpsb
mov
xor
daa
fwait
inc
js
aad
insb
jb
and
ret
sar
mov
test
mov
adc
inc
insl
cwtl
out
in
cld
jno
cmp
push
bound
sbb
dec
roll
push
pusha
adc
adc
shlb
inc
stc
pop
push
add
stc
sub
movsl
xor
mov
adc
pop
mov
aad
cld
xchg
push
sub
mov
mov
mov
inc
out
jle
jle
lods
popa
adc
mov
push
bound
xlat
cmp
call
mov
jmp
aad
fiadds
pop
hlt
mov
jb
inc
std
test
es
adc
aad
in
popa
in
imul
jl
out
cmp
aaa
sub
jp
push
and
xor
inc
hlt
add
cmp
iret
cmp
pop
mov
stos
test
xchg
sbb
jo
ret
out
into
mov
es
sarl
pop
xchg
fwait
mov
jae
leave
add
dec
repnz
cmp
xor
repnz
addr16
mov
aas
push
andl
pop
mov
pushf
ss
xor
sarl
cmpsl
into
pusha
pushf
cmp
dec
push
dec
mov
shl
fs
xor
je
stos
stos
jecxz
adc
adcb
mov
aas
mov
fidivs
jle
xor
shl
ret
mov
jl
sti
push
loopne
cmc
dec
cmc
das
fnsave
lods
iret
pop
inc
and
in
ret
js
andb
lcall
dec
popf
sub
inc
fcom
pop
push
cwtl
add
shll
es
mov
mov
push
sbb
xchg
into
dec
xchg
pop
xor
fistpl
sub
jmp
dec
or
mov
sub
jbe
mov
push
rcl
jae
rcll
cld
andb
push
pushf
mov
xor
push
lods
int
ja
loopne
stos
into
xchg
add
xchg
inc
lahf
mov
sub
mov
pop
inc
fistps
dec
xor
or
lock
sub
mov
imul
push
dec
xor
sbb
gs
out
sbbb
xchg
push
cs
push
clc
jp
mov
push
imul
xchg
mov
and
fstpt
push
bound
xlat
lahf
cmc
dec
jae
mov
push
neg
les
inc
imull
sbb
mov
push
iret
lods
dec
cmp
ja
test
lret
es
xchg
adc
out
arpl
jns
lods
sbb
mov
test
icebp
insb
cltd
mov
aad
add
lods
mov
sbb
cwtl
cs
jnp
stc
jbe
out
pop
fcomi
jns
adc
cmp
out
sub
sub
pop
pop
nop
addr16
in
mov
cld
xchg
sbb
mov
and
and
movsl
and
pusha
rclb
xchg
cmp
insl
incb
test
cmp
iret
push
dec
xchg
shrb
lea
popf
cltd
dec
pop
ss
xchg
and
or
jne
mov
ds
lahf
repz
aaa
fldenv
jne
mov
rol
scas
adc
roll
and
int
idiv
rolb
packsswb
jae
mov
in
inc
mov
mov
inc
in
addr16
lds
xchg
and
lcall
dec
hlt
inc
cmovns
cli
jecxz
jp
push
mov
adc
sbb
lret
int3
jb
pop
push
stc
push
lret
scas
pop
push
stos
sbb
rolb
dec
adc
cmp
int
cld
cmp
lfs
gs
mov
pop
lret
loopne
enter
insl
call
adc
cld
push
sbbl
loope
mov
stc
add
movsl
insl
movsb
adc
xchg
stc
mov
pop
sarl
hlt
pusha
adc
rcrl
mov
lods
or
push
jecxz
stos
cmpsb
fdivrp
push
cmp
ss
add
cmp
mov
fisubs
repz
mov
xchg
mov
je
clc
push
les
and
inc
shr
dec
dec
add
push
lahf
pop
push
add
push
mov
sbb
movsb
mul
dec
movsl
add
jle
xchg
add
push
jecxz
cmp
loope
pop
push
adc
cmovnp
jbe
scas
pop
jns
js
sti
outsb
scas
imul
mov
inc
mov
fistl
js
imull
fadd
mov
mov
sbb
push
insl
xor
cmovle
and
movsb
adc
out
mov
sbb
pop
aas
loop
mov
test
inc
mov
repz
cmp
mov
in
cmpsl
sarb
jl
movb
pop
xchg
jbe
je
xchg
and
mov
sbb
clc
ja
dec
jmp
js
add
mov
mov
mov
jmp
repz
mov
sbb
mov
aaa
adc
mov
jl
mov
pop
xchg
dec
cs
lret
pop
imul
mov
adc
lods
dec
add
push
jp
mov
enter
hlt
cmc
push
pop
hlt
inc
scas
and
pop
push
stos
pop
sbb
fdivp
inc
fdivrp
in
sub
mov
outsb
in
add
xchg
xchg
lock
pop
out
outsb
fimull
xor
ret
xor
insl
add
xchg
lods
popf
shl
repz
mov
roll
push
lods
inc
movsl
sub
xchg
xorb
ja
test
mov
jnp
pop
lret
xor
push
dec
and
mov
jae
es
sub
push
fsubp
int3
pop
imul
cmp
jne
add
scas
cs
mov
and
es
test
xor
sub
clc
mov
push
test
loop
lcall
js
stos
xchg
jle
and
stos
ss
sar
mov
adc
or
add
inc
test
pop
icebp
pop
jmp
cmc
es
outsb
iret
inc
jecxz
jno
adc
cmp
shlb
fldpi
dec
enter
in
dec
cmpsl
add
ljmp
push
pushf
jg
or
lcall
mov
imul
ja
adc
lods
push
js
add
int3
cmp
test
ficompl
imul
insl
dec
popa
or
xchg
push
or
stos
hlt
jno
push
rolb
je
dec
pop
mov
das
inc
inc
jbe
inc
add
sbb
sbb
push
cwtl
hlt
stos
xchg
in
cltd
mov
loop
adc
push
cld
arpl
push
add
pop
pop
jp
out
xchg
fwait
jle
adc
mov
adcb
sti
cld
int
fldz
or
fmuls
sbbl
addr16
adc
cmp
lret
aam
shlb
add
fidivl
and
movsl
movsb
jl
das
inc
fisubrl
pop
frstor
cltd
out
pop
fstps
in
out
dec
stos
ja
mov
sub
loopne
loopne
xor
inc
jp
xor
sbb
cmp
adc
or
mov
push
test
pop
lds
sarb
imul
mov
aas
xchg
push
xchg
out
enter
sbb
test
movsb
inc
imul
mov
cmpsb
cltd
sarl
enter
test
xchg
lcall
and
xchg
mov
ret
ret
inc
mov
int
jle
arpl
push
inc
jg
pop
sbb
mov
adc
std
add
sarl
mov
cs
lcall
std
or
fmull
sub
nop
sti
jl
bound
aas
sbb
shll
loop
loope
out
gs
mov
sbb
in
shrb
dec
and
mov
sbb
dec
stos
cmp
and
dec
popf
mov
imul
or
test
cmp
mov
ficoml
out
dec
les
fs
pop
sub
sub
ret
clc
mov
sti
shll
push
dec
mov
mov
or
scas
inc
push
sbb
sahf
ret
rol
mov
xchg
or
xchg
dec
divb
mov
lret
imul
repnz
inc
dec
orb
and
push
and
push
and
and
ficompl
mov
mov
into
pop
sbb
or
inc
subb
push
xor
dec
popf
pop
push
rol
cmp
icebp
xchg
add
mov
or
fimuls
lahf
pop
aaa
push
xchg
pop
scas
dec
pop
dec
or
gs
inc
sub
push
mov
shll
aam
adc
test
scas
mov
add
push
adc
or
sub
test
push
xchg
pop
int3
lret
in
or
push
jg
push
push
lock
mov
call
sub
mov
inc
shll
fisttpl
fildl
pop
push
test
rcrl
mov
pop
sbb
mov
ja
pop
mov
test
pop
xchg
call
xor
mov
ror
lea
repnz
iret
mov
lock
sbb
xor
ljmp
pop
daa
push
inc
xchg
xchg
lahf
pop
jnp
inc
adcb
xchg
xor
fcomp
mov
jg
repz
add
and
lock
jns
jmp
jne
adc
jne
pop
push
jmp
in
sbb
inc
pushf
cmp
mov
aad
stc
das
xchg
test
loopne
adc
test
add
mov
sub
xchg
arpl
out
scas
adc
mov
in
sahf
popf
call
jne
int3
or
cmp
inc
movl
sbb
ret
push
imul
fnstcw
xor
notl
leave
cmp
dec
dec
inc
call
out
subl
int3
mov
jne
add
cmpl
ficompl
mov
jecxz
push
mov
xchg
mov
in
sub
out
lea
pop
mov
cmc
pop
enter
mov
push
add
cmpsl
push
lods
mov
pushf
jbe
jns
int
repz
cmp
adcb
inc
bound
mov
pop
out
dec
shlb
aaa
xchg
aaa
mov
jmp
pop
jb,pt
xchg
xchg
and
mov
es
sub
mov
and
add
cld
jns
and
xor
in
cli
xchg
lahf
and
leave
decw
cmpsl
dec
sbb
fiadds
pop
jle
pop
mov
xor
das
add
xchg
gs
lods
dec
ret
and
push
popa
push
dec
scas
cwtl
xchg
adc
scas
mov
sub
adc
pop
xchg
xchg
mov
sbb
pop
ret
fdivrs
shrb
cmpsl
sub
dec
inc
sahf
jl
mov
sbb
insl
mov
xor
roll
ret
mov
dec
jmp
or
mov
jnp
jecxz
js
mov
js
dec
addl
mov
mov
and
out
nop
repz
ljmp
loop
sti
jecxz
xchg
cmp
and
test
fsubl
in
pop
mov
faddl
outsb
sti
hlt
push
cld
xor
xchg
mov
ret
cmpb
jp
aad
sub
frstor
mov
xchg
dec
cmp
jnp
xchg
or
cld
loop
pop
pop
sub
jbe
sahf
and
adc
dec
jecxz
and
xchg
sbb
mov
adc
pop
sbb
fisttps
cmp
mov
add
test
ljmp
icebp
scas
push
or
ljmp
sub
xchg
ret
int
adc
cmp
mov
jnp
mov
xchg
sbb
pop
jp
ret
push
or
adcb
push
mov
imul
mov
or
xchg
cmp
lods
adc
add
ret
and
xor
pusha
or
inc
xchg
out
push
lret
sti
enter
je
rcrl
adc
in
dec
adc
push
adc
mov
inc
sub
jle
push
test
lock
xchg
sti
adc
xchg
mov
mov
adc
int
push
pop
inc
cmp
sub
xchg
das
test
sbb
push
add
mov
les
fs
aas
jle
push
pop
lock
and
sbb
insl
pusha
daa
cltd
outsl
jnp
dec
pop
mov
push
bound
sbb
lock
aas
sub
mov
push
into
imul
pop
xchg
out
pusha
aas
and
negl
nop
mov
stc
pusha
cmpsb
into
scas
inc
jecxz
and
jge
jp
insl
cmp
in
sbb
jg
push
sub
push
mov
hlt
lahf
dec
mov
fsub
cld
dec
or
jno
push
and
dec
xchg
fisttpl
add
lods
push
fsubl
inc
dec
test
jecxz
fisubrs
jo
in
scas
xchg
pop
mov
jmp
insb
sbb
repz
sbb
push
int3
mov
pusha
mov
insl
mov
adc
bound
sub
dec
pop
or
jb
inc
and
mov
js
dec
adc
ja
xor
adc
xchg
adc
pop
xor
mov
ret
mov
cmpl
sbb
sbb
pusha
add
cmp
int3
inc
push
shlb
das
push
sub
push
es
stc
jle
xor
rorb
add
sub
movsl
cs
hlt
cltd
cmp
arpl
pop
push
cmp
push
inc
pop
lods
pop
in
pop
cmp
aam
inc
mov
lcall
sbb
pop
in
adcb
inc
lret
ljmp
scas
pop
fsts
nop
aaa
cmp
pop
adc
cwtl
js
mov
xor
push
add
push
aaa
mov
in
out
std
mov
sbb
rcll
into
fisttpll
test
ds
clc
mov
scas
xchg
lret
inc
mov
jne
push
or
add
push
sbb
cs
lcall
add
cmp
dec
cmp
and
aam
cmp
sub
push
dec
inc
loope
push
sub
jp
std
pop
jns
ss
jae
push
pop
or
test
xor
adc
cmp
clc
fdivl
iret
jno
enter
push
es
gs
xchg
mov
js
or
daa
loopne
and
outsb
lock
fcom
sub
jo
sub
xchg
ret
test
xor
fistpl
nop
in
mov
jge
jg
ret
push
clc
aad
icebp
mov
test
fnsave
add
aam
jle
pop
mov
sbb
push
inc
aas
rol
jl
and
sahf
enter
cmp
insl
mov
mov
cmp
adc
movsl
adc
stos
data16
movl
ret
aaa
jecxz
cld
cld
jnp
int
loopne
into
jo
std
cli
pop
fnstsw
fadds
xor
push
mov
xor
or
jnp
cmp
jge
push
adc
jns
push
loop
push
xor
je
mov
in
test
xchg
mov
xchg
dec
rcrl
rorl
pop
insl
js
leave
push
xchg
push
jns
jp
xorb
adc
inc
dec
dec
data16
imul
sahf
cmp
fnstsw
pop
xchg
xchg
xor
sbb
mov
shll
subb
jl
outsb
jns
test
das
mov
push
clc
andl
mov
pop
scas
sub
inc
imul
fsubs
fs
sub
rolb
pop
jecxz
jl
lcall
cmp
rolb
out
dec
mov
daa
xchg
mov
pop
sub
icebp
cld
jecxz
mov
fcomps
out
daa
jae
call
std
sbbb
popf
and
movsb
pop
xchg
lds
das
loop
insb
dec
lahf
push
mov
test
je
or
aaa
xchg
negb
mov
or
xor
xor
cld
pop
ss
adc
xchg
js
cmpsb
xlat
int3
shlb
mov
mov
add
and
popa
loope
loop
cmc
loop
mov
enter
mov
enter
and
xor
fwait
rcrl
dec
inc
or
int3
pop
js
testb
aad
aas
out
xchg
fimuls
mov
sbbl
call
pushf
adc
xor
cmp
roll
mov
rcl
or
mov
aam
cmp
mov
and
pop
jg
cmovl
lret
push
mov
sbb
les
jo
mov
outsb
aaa
arpl
les
sbb
loopne
push
mov
pusha
lret
icebp
mov
adc
sub
cmp
sarb
cmp
adc
cmp
xchg
xchg
dec
mov
adc
iret
ljmp
outsb
mov
cs
stos
xchg
cli
loopne
cmp
mov
imul
mov
in
cli
adc
movsl
and
fldenv
sub
mov
nop
test
scas
and
xor
aas
inc
and
mov
or
inc
iret
and
loop
mov
cwtl
xlat
arpl
sub
xlat
cltd
jmp
pop
mov
xor
jmp
flds
aaa
outsb
das
testl
xor
lods
jecxz
shll
les
iret
insb
mov
ja
test
inc
in
sub
inc
popa
cmp
stc
sbb
dec
es
push
or
imul
jne
and
mov
xor
pop
and
adc
lods
jp
cltd
or
in
outsl
xchg
and
adc
mov
push
xchg
dec
stos
ss
ficompl
pop
xchg
repz
inc
stc
dec
ja
xchg
sti
sbbl
push
xchg
sbb
mov
out
cmp
jmp
lret
mov
stos
fildl
orb
pop
das
in
ffree
rolb
pop
jno
fnstsw
scas
incl
cwtl
loopne
xchg
cwtl
cmpsl
fcmovnu
cmc
adc
sub
gs
cwtl
dec
jge
mov
ret
rol
out
into
aaa
out
push
push
js
push
dec
into
cwtl
push
negl
xchg
repz
xchg
jae
subb
mov
xchg
and
adc
pop
mov
dec
push
std
adc
jp
or
stos
out
adc
es
push
cs
popf
mov
sub
dec
dec
or
sbb
fs
cmp
push
or
lret
sbb
ds
mov
in
or
cmp
lret
push
jno
test
lcall
ljmp
or
imul
push
pusha
dec
jge
insb
jnp
psubsb
lret
and
lods
xchg
ficompl
in
add
jb
or
in
add
jge
push
lods
sbb
mov
fisubrl
pop
repz
sti
movsb
js
jnp
clc
jbe
stos
sub
pop
in
mov
enter
mov
jle
repnz
mov
jge
fsubl
shrl
pop
jecxz
cmp
and
in
adc
call
in
imul
ja
pop
adc
gs
out
or
add
test
jecxz
test
xlat
adc
je
dec
call
jecxz
mov
push
xchg
add
xor
mov
sbb
push
out
push
jns
xchg
int3
movsl
sbb
xlat
cld
mov
mov
cltd
mov
fistl
negl
push
hlt
lahf
stos
sbbl
hlt
sahf
out
adc
pop
push
fstpt
add
idivl
out
adc
sub
inc
rorl
push
icebp
push
add
inc
push
xchg
xchg
jno
fcmovbe
cmp
mov
into
inc
dec
into
push
ss
ds
movsb
jns
dec
ret
clc
jb
jg
shrb
add
jnp
dec
lds
mov
push
pop
mov
in
data16
loop
bndldx
or
fidivrs
shlb
scas
pushl
adc
in
cld
orb
mov
lcall
imul
dec
out
and
pop
adc
fbstp
ficomps
call
mov
in
and
adc
xor
fiaddl
shlb
lea
popa
mov
cld
pop
clc
mov
adc
pushf
roll
or
and
pop
push
push
push
sbb
push
cld
in
cmp
sbb
ficoms
mov
outsl
sbb
ret
jge
xlat
aam
mov
out
inc
push
and
jp
jns
shlb
xchg
xor
cmp
loop
ss
sub
shrb
sbb
xor
enter
fucompp
aad
leave
add
inc
rcll
inc
adc
sbb
incb
jmp
or
cltd
sahf
repnz
enter
push
sbb
sub
test
pop
nop
ret
loope
sarb
fistl
out
push
mov
jne
inc
out
ljmp
shlb
dec
jecxz
xchg
xor
int
mov
lea
push
aam
stc
or
in
mov
pop
add
gs
or
xor
dec
aaa
sbb
lock
mov
arpl
jmp
mov
mov
ds
lret
ret
pop
mov
imul
inc
pop
cli
add
repnz
push
sbb
shlb
sbb
popf
cmp
fimuls
fists
xor
std
push
lods
call
pop
xchg
fiaddl
test
ljmp
les
cmp
das
imul
loop
repz
leave
int
sub
lret
sbb
cmp
call
sbb
jle
mov
imul
and
inc
in
bound
mov
stos
fwait
adc
lahf
out
dec
mov
add
cmp
mov
xor
mov
xchg
pop
pop
scas
loopne
push
sub
iret
mov
insb
add
ret
pop
pop
lock
pop
mov
adc
mov
mov
cmovno
addr16
xor
jbe
mov
push
mov
mov
imul
mov
cmp
sbb
mov
sub
stc
in
jg
jns
sub
push
imul
mov
hlt
nop
sub
jecxz
jnp
lock
or
repnz
inc
clc
out
mov
in
adc
jge
shll
aad
jl
dec
outsl
adc
push
mov
fisttpll
aad
mov
jmp
jge
jg
sbb
sbb
pop
and
gs
push
enter
out
and
push
jg
into
movsl
divl
lret
fs
sbb
push
clc
add
and
notl
testb
mov
adc
scas
clts
call
mov
xor
dec
mov
inc
sti
dec
in
mov
fmul
add
xlat
scas
add
jae
test
mov
adc
and
mov
sbb
xchg
aad
jl
jae
clc
push
scas
push
into
and
sbb
fnstsw
cmp
fisttps
mov
sbbl
xor
mov
lods
add
or
adc
add
nop
cmp
les
dec
imul
rclb
ret
out
into
push
mov
sbb
les
push
out
xor
mov
adc
lcall
push
pop
scas
lret
mov
xchg
pop
call
shl
mov
popa
stc
fistpll
mulb
and
test
inc
dec
das
fildl
sub
sbb
xchg
cli
loope
icebp
add
xchg
adc
mov
mov
sti
addb
shll
data16
je
jno,pt
lcall
in
addr16
mov
out
jo
adc
nop
loopw
ljmp
xor
scas
cmp
xchg
jb
rcrl
dec
xchg
xor
add
xor
cmp
popa
xor
mov
add
inc
dec
rcll
xchg
or
xor
and
sub
pop
inc
pop
cld
lea
stos
push
pop
into
lahf
pop
ffreep
ljmp
xor
dec
add
adc
sub
mov
call
adcb
out
aam
add
dec
xchg
sbb
inc
pusha
mov
pusha
icebp
out
jl
jmp
ljmp
out
and
xchg
daa
dec
dec
and
push
dec
push
call
cmp
repnz
mov
jbe
leave
pop
push
fisttpl
or
lahf
cmpb
loopne
push
and
add
int3
rcl
cli
dec
test
sti
cmp
int3
xor
mov
aam
push
notb
sub
mov
insl
sub
sbb
pop
mov
enter
pop
nop
or
xor
test
in
jo
dec
negl
dec
inc
mov
outsl
or
pop
cmp
iret
mov
pop
cmp
test
pop
fld
and
cmp
roll
pop
adc
mov
out
or
jmp
inc
cmp
push
or
mov
and
ja
sub
insl
xchg
pop
imull
jnp
add
push
and
pusha
fiadds
mov
mov
mov
push
push
mov
jno
divl
push
int
push
insb
push
sub
nop
movl
push
xchg
pop
aaa
aam
stc
pop
cmc
iret
mov
sbb
sbb
xchg
push
int
lea
cmp
or
mov
xchg
xlat
adc
mov
int3
mov
mov
sahf
cs
pop
jp
jae
leave
fistps
cli
pop
decl
cwtl
sbb
inc
cmp
std
aam
movb
jl
cmp
dec
xchg
push
mov
adc
fidivrs
enter
out
or
fstpl
dec
lods
mov
movsl
adc
lock
movq
gs
dec
leave
pop
jae
jle
mov
mov
pushf
je
sub
lds
lods
in
dec
and
stos
mov
shll
mov
xchg
outsb
decl
mov
add
jmp
pop
pop
pop
dec
adc
xchg
jg
cmp
xchg
ret
push
fsincos
insb
out
or
mov
add
and
xor
dec
jne
idivl
push
rorl
mov
mov
orl
je
or
in
or
outsb
inc
lods
ljmp
mov
dec
push
mov
ret
popf
lret
fwait
inc
fs
mov
cmc
daa
push
sub
jb
lahf
pop
repz
or
pop
faddl
pop
push
hlt
mov
xchg
mov
pop
adc
inc
mov
std
lds
and
rclb
addr16
xor
mov
mov
scas
add
ficoml
sub
pop
roll
orl
add
push
push
xchg
hlt
pavgb
cmpsb
xchg
sub
add
fcoms
out
fnstsw
fisubrs
push
arpl
cmp
fcomps
ja
lods
loopne
test
pop
push
int3
lret
leave
stc
sbb
movaps
les
loope
xchg
jg
loope
dec
jmp
decb
pop
push
out
mov
daa
mov
xor
lock
lods
pop
mov
sbb
push
inc
mov
andb
pop
push
jp
clc
or
ret
stos
lret
gs
jge
mov
jmp
sbb
pop
ret
xchg
jg
ljmp
xchg
inc
push
mov
cmp
shll
xchg
dec
cmp
cmpb
sbb
and
dec
add
out
repz
in
add
jo
cltd
nop
inc
cmp
dec
es
or
out
pop
aad
imul
adc
adcb
push
aam
in
ss
dec
cmpsl
or
ror
daa
xchg
repnz
dec
fs
push
js
and
adc
fcoms
mov
sbb
in
cmpsb
lods
and
imul
aam
int
adc
je
mov
lock
jmp
data16
mov
pop
mov
insb
xchg
xchg
sub
jecxz
sbb
mov
mov
fnstcw
dec
and
push
xchg
xor
jecxz
les
pop
sub
orb
subl
sub
fbld
pop
adc
andb
push
dec
pop
mov
sbb
lods
lods
dec
outsb
and
lret
jo
cmp
xchg
int3
add
gs
ret
movsl
bound
or
dec
sbb
inc
sub
inc
dec
mov
cmp
mov
cmp
mov
je
cltd
push
xor
sbb
xchg
jle
movsl
mov
addb
sti
sahf
in
sar
andl
cld
xchg
pop
cmp
icebp
pop
out
sub
jae
pop
push
mov
dec
dec
and
mov
ss
int
sarl
pop
and
es
pop
clc
xor
pop
fstl
sbbb
push
mov
nop
mov
test
lcall
pop
loope
mov
xchg
mov
cmp
enter
das
dec
shl
int3
stc
cltd
out
mov
push
and
mov
test
nop
sti
xchg
or
jb
insb
add
xor
mov
daa
dec
xchg
add
das
int3
mov
inc
fdivs
mov
lods
leave
in
roll
cmpsl
xchg
jns
cld
cmp
inc
mov
loop
loope
pop
out
ss
mov
sahf
xor
lods
mov
lods
decl
push
jl
xchg
cmpsl
add
push
xchg
outsl
aaa
sub
rclb
sbb
push
xor
xlat
sub
jo
or
test
adc
push
pop
std
ss
fildll
pop
sbb
push
std
outsb
loopne
xchg
mov
cs
push
sti
lods
sub
mov
mov
xor
jmp
push
fcomps
sbbl
xchg
enter
mov
push
jp
add
xchg
into
imul
mov
fisubl
adc
jmp
cmp
sub
scas
adc
sbb
leave
lcall
push
mov
ss
out
mov
mov
dec
sub
mov
xchg
jle
xor
cmp
fisubrs
ret
adc
movsl
mov
les
mov
adc
pop
fs
mov
mov
or
or
xchg
and
int3
stos
cmpsb
xorb
mov
test
mov
out
sbb
mov
sub
scas
sbb
gs
push
sahf
or
xlat
xchg
xchg
xchg
out
stc
vshufps
jo
mov
mov
js
push
jae
mov
pop
lds
dec
dec
mov
addr16
jge
ret
jno
sub
sbb
clc
test
add
push
sbb
mov
cltd
and
es
mov
aas
in
loopne
in
or
cmp
shr
jmp
or
test
jns
pop
mov
outsb
aaa
mov
pop
xor
push
xchg
mov
pop
push
add
mov
dec
jl
stos
inc
aas
or
xor
adc
mov
xchg
in
push
jg
mov
push
cwtl
test
leave
pushf
rorb
dec
rcll
xlat
fisttpll
dec
dec
sahf
mov
leave
dec
lahf
pop
sub
inc
lahf
test
std
cmp
cmp
lcall
push
leave
imul
into
fisttps
fadds
aad
in
inc
enter
ljmp
and
inc
ja
xor
aaa
push
jae
sbb
sbb
dec
inc
cmp
fstpl
rorb
lds
sti
out
jo
mov
cmp
xchg
sub
movsl
push
cmpsl
loope
lds
aaa
mov
imul
lods
add
stc
iret
repnz
lds
addl
mov
mov
fdivrs
cld
add
data16
cmp
mov
mov
dec
xorb
sub
pop
inc
push
int3
jmp
addr16
add
push
popa
out
in
push
ret
add
popa
imulb
mov
ficoml
push
loop
jo
and
cli
dec
xchg
mov
out
push
mov
addr16
add
xchg
xchg
adc
sub
out
icebp
jg
xchg
in
int3
mov
adc
aaa
sub
fmull
sbb
mov
xor
sub
or
sub
mov
test
sbbl
into
mov
ljmp
imul
xchg
mov
ljmp
mov
push
test
hlt
mov
jns
lret
ret
test
jnp
in
pop
arpl
push
roll
inc
shll
outsl
and
scas
xchg
pop
out
ret
int
dec
mov
pop
mov
push
stc
push
push
fisubl
insb
ds
sub
sbb
dec
xlat
sarb
fadds
ret
or
je
pop
in
shl
sbb
test
scas
xor
testb
jle
in
pop
xchg
loop
arpl
mov
sarb
rolb
sbb
cmp
mov
jae
or
adc
xchg
cmp
shll
repnz
xchg
jnp
inc
lods
bound
mov
aaa
les
sbb
pop
mov
mov
inc
and
inc
xchg
mov
pop
in
push
test
lock
mov
cld
out
popa
ljmp
mov
hlt
mov
add
rcr
pop
pop
out
ret
cmp
icebp
and
push
cmpsl
faddl
jecxz
insb
jbe
and
xchg
jns
jbe
xor
sub
push
xor
adc
adc
sbb
scas
popa
test
xor
inc
jo
mov
shlb
push
jae
aas
leave
insb
sbb
test
repz
mov
mov
icebp
test
mov
test
inc
mov
rorb
push
dec
push
scas
dec
inc
jne
and
mov
rcl
in
adc
pop
push
pop
jno
or
loopne
or
leave
dec
jae
mov
in
add
lahf
pop
mov
xchg
pusha
push
adc
jp
rcll
es
out
or
xchg
icebp
lahf
orl
push
hlt
fcmovbe
das
shl
int3
pusha
popa
pusha
notb
fwait
outsl
lea
push
std
xchg
or
mov
cmpsl
jg
test
adc
fidivs
jmp
xchg
inc
repnz
mov
ss
icebp
xor
mov
inc
fldl2e
jmp
add
push
inc
aad
push
adc
out
sub
mov
gs
push
mov
cli
in
lods
jb
push
xchg
dec
pop
push
cmp
les
mov
test
sahf
in
cmpsl
jmp
in
fs
fisubs
iret
fcomps
fwait
xchg
lret
lds
push
call
push
jo
push
xchg
insb
fs
add
xchg
lea
or
je
aad
mov
push
ss
inc
or
or
mov
jp
loopne
mov
mov
jo
aaa
aam
push
mov
mov
dec
insl
pop
xchg
out
aaa
lahf
dec
pusha
push
cmp
je
js
cmp
and
mov
ss
push
push
fidivrl
jne
sub
std
loopne
lahf
ds
ljmp
in
pusha
mov
dec
cmp
lea
cmpsb
mov
orb
xor
lcall
jl
imul
mov
jge
mov
xor
add
mov
test
add
lock
orl
push
jp
rorb
inc
movsb
xchg
sarl
pop
add
sbbb
dec
in
out
test
push
xor
jmp
sti
push
mov
and
adc
lret
lea
fcoms
lods
test
lods
push
jecxz
xor
int
xor
jg
pop
stos
push
insl
lock
sarl
cmp
pop
int3
icebp
insl
push
jl
mov
das
out
xlat
jne
push
xchg
dec
dec
sub
incb
jmp
testl
push
pop
sub
outsb
jae
mov
icebp
ret
insb
test
mov
inc
loope
mov
daa
jne
ss
enter
pop
sbb
pop
mov
fwait
roll
dec
ss
add
mov
scas
pop
es
pop
imul
push
xor
iret
mov
cmp
loope
cmp
pusha
jmp
lret
jae
pop
inc
push
fwait
mov
stos
xchg
ja
sub
cmp
pushl
gs
or
cwtl
sub
sbb
sbb
xchg
sub
pop
inc
ret
jmp
jecxz
pop
inc
mov
daa
mov
dec
dec
xchg
cli
mov
pop
loopne
jl
shlb
inc
gs
repnz
aaa
insb
fwait
and
xor
sarb
sbb
xchg
daa
push
inc
mov
shl
ljmp
push
or
and
inc
xchg
and
fcompl
push
ret
xor
sahf
and
jl
push
out
rcrl
push
xor
mov
sti
xor
pop
aas
mov
lret
ljmp
adc
aam
clc
stc
sbb
loop
push
insb
or
sub
pop
jge
inc
sbb
dec
insb
popf
xchg
dec
rclb
insb
rcll
and
cmc
js
mov
adc
sbb
fnstenv
ljmp
xor
mov
aaa
negl
mov
inc
out
adc
pop
xor
inc
jl
scas
out
pop
out
sub
xor
cmp
and
xor
pop
es
addl
or
jns
sahf
mov
imulb
pop
jle
mov
out
or
and
stos
mov
adc
pop
and
incb
dec
divl
es
jbe
pop
mov
xor
idiv
push
repz
xor
jo
adc
pop
adc
out
push
xor
loope
xor
sti
mov
xchg
or
adc
push
push
inc
int3
aas
mov
jne
lret
enter
shlb
lcall
ret
add
int
loope
push
push
mov
mov
or
push
mov
jle
push
mov
sbb
pusha
dec
xor
les
and
jle
cwtl
call
inc
xor
xchg
xchg
incl
cmpsl
mov
push
dec
fldenv
push
jmp
xchg
jbe
dec
mov
mov
inc
sbbb
sarl
jbe
ss
pop
and
shll
mov
sbb
sub
dec
scas
in
pop
stc
and
pop
popl
push
pop
pusha
jbe
jno
push
cmpsl
rorb
ss
add
sarb
fistpll
sahf
stos
jne
mov
ja
je
mov
pop
push
fisttps
bnd
or
and
dec
pop
or
js
mov
push
inc
cmp
mov
imul
jl
pop
dec
xor
test
pop
xchg
adc
or
stos
shl
sbb
push
ljmp
dec
aad
sbb
insl
pop
sbb
adc
pop
clc
push
pop
add
arpl
loop
sarb
jg
mov
cmpsb
sub
push
lret
push
shl
push
cmpl
dec
mov
mov
fdivs
or
call
xor
fistpl
fidivs
arpl
in
mov
mov
test
sub
test
cwtl
sarl
jmp
push
js
lock
cmc
aad
xor
into
cld
or
adc
mov
jnp
cs
xor
aas
jp
je
pop
sub
dec
sbb
lods
and
dec
pop
jnp
pop
add
popf
cld
push
xchg
notl
cmp
push
ret
ret
push
movl
imul
xchg
push
aam
faddl
ja
or
sbb
sub
push
xchg
mov
mov
addl
int3
out
pop
addr16
sbb
dec
neg
and
dec
mov
pop
jb
mov
mov
cmpb
inc
adc
and
in
mov
jge
inc
jb
xlat
mov
jns
movsb
fistl
repz
lds
inc
xchg
pop
cmp
xchg
cmpsb
xchg
es
cltd
mov
jge
mov
xchg
mov
jl
pop
bound
xchg
mov
idivb
jmp
lret
add
push
shr
adcl
or
dec
test
mov
insb
pop
jno
cmp
icebp
push
and
dec
mull
xchg
fdivrp
dec
bnd
in
adc
push
cmpsb
jle
dec
lahf
dec
cmp
daa
pop
and
rclb
mov
imul
push
dec
pop
add
jno
jmp
mov
enter
movsl
mov
jnp
js
shlb
or
xor
ljmp
mov
test
cwtl
movsb
xchg
jl
jp
mov
mov
aam
dec
xor
xchg
stos
xchg
mov
push
ret
pop
or
cmc
popa
cmp
pop
cmp
adc
ret
aam
mov
pushf
sub
loopne
push
enter
lds
jae
dec
lea
cmpsl
popa
vandps
push
flds
pop
pop
and
outsl
cmp
outsb
ss
mov
sub
aad
or
ja
sbb
push
dec
push
cli
fcoms
cmp
lret
xchg
test
or
push
cld
inc
rolb
or
fcomp
arpl
in
stc
mov
enter
mov
cmp
rdmsr
cltd
push
and
xor
cmpl
aas
ret
popf
push
cltd
xchg
lret
or
sub
push
das
aas
aaa
jo
scas
lds
stos
gs
push
sbb
add
nop
das
mov
in
adc
fsubrl
mov
shl
inc
rol
shrb
mov
add
mov
lret
out
jp
xchg
movsb
jmp
leave
lock
in
xor
out
aam
push
adc
and
dec
hlt
mov
sub
sbb
xchg
repz
jge
dec
test
sbb
dec
push
push
fstpl
and
sbb
and
test
xchg
inc
push
stc
es
fnstcw
sub
push
lret
ljmp
das
sub
add
fsubrl
stos
call
xchg
lock
stos
pop
enter
cmp
andb
pop
cwtl
ljmp
xchg
mov
mov
add
leave
mov
std
sbb
mov
dec
inc
dec
shlb
mov
push
dec
aad
pop
pop
cmpsl
xchg
xlat
test
cmp
adc
int
xchg
cmpb
adc
loop
fiaddl
mov
push
sub
and
js
in
adc
jne
cld
pop
jb
cmp
push
fnop
insl
add
int3
seta
and
inc
arpl
out
inc
pop
jl
mov
push
mov
lahf
mov
enter
adc
das
fcomps
cld
in
mov
hlt
mov
into
or
sbb
int
and
jb
sub
inc
test
mov
mov
pusha
loop
imul
mov
adc
mov
dec
cwtl
andl
ror
mov
or
push
aad
xlat
setae
fcoms
cs
out
inc
mov
in
adc
in
and
imul
inc
or
pop
add
test
or
mov
arpl
dec
hlt
pop
sti
adc
jnp
jo
or
mov
sbb
aad
xchg
jecxz
insl
adc
aam
cmc
push
sbb
out
shrb
jnp
inc
xchg
aaa
inc
mov
lret
lods
das
fs
insl
inc
movsl
cld
mov
push
movsl
lods
movsl
cmp
xor
data16
adc
mov
orb
dec
loope
pop
cmp
mov
cmp
mov
xor
into
pusha
or
rcr
sbb
dec
leave
xchg
stos
imul
mov
jecxz
aas
cmpsb
cmpb
xor
mov
xchg
or
mov
pusha
cli
cmp
sarl
andl
fnstenv
sbb
dec
sub
mov
cmp
jmp
inc
push
clc
sub
jecxz
push
xchg
outsl
mov
cmp
es
cmp
test
pop
sbb
dec
hlt
orb
cli
roll
xor
out
in
shl
ret
insb
adc
insl
test
shrl
mov
fsts
aas
in
pop
scas
jb
adc
sbb
icebp
adc
jno
jp
mov
repz
and
mov
push
outsl
sub
fdivrl
or
js
add
mov
cmpsb
and
loopne
push
sbb
movb
test
pop
in
push
push
dec
and
xor
testl
inc
add
pop
dec
mov
ljmp
add
pushw
insb
repnz
push
jle
xor
xchg
jge
sbb
adc
mov
je
xchg
xchg
mov
in
sub
jo
and
pop
mov
dec
arpl
add
enter
in
sub
bound
inc
mov
int3
imul
icebp
mov
add
das
adc
or
sbb
inc
sbb
adc
fsub
int3
xor
mov
inc
add
mov
jno
inc
fldt
add
sub
mov
jne
jnp
scas
push
mov
inc
gs
mov
jg
aam
add
je
shll
dec
cltd
mov
dec
movsb
idivb
pop
sbb
jne
push
cltd
clc
xor
push
sub
mov
xchg
and
sbb
inc
fs
or
mov
iret
stos
dec
xchg
cwtl
mov
and
rclb
dec
cs
sbb
outsb
cmp
dec
adc
xor
xor
xchg
mov
cmp
push
and
mov
pop
push
subb
cmc
sub
adc
push
lcall
inc
insl
xor
cmpsl
and
push
mov
push
mov
push
inc
mov
cmpsb
pop
lods
mov
adc
aaa
xor
pushl
or
insl
das
bound
push
int3
in
popf
es
jge
mov
sahf
xor
rcrl
and
lret
sub
lret
testl
mov
out
jns
cld
stc
sub
push
ror
xor
shlb
jmp
sti
adc
out
dec
insl
adc
mov
lds
cmp
leave
xchg
dec
hlt
test
and
pusha
rclb
cmp
push
cmc
pop
xchg
jp
jns
mov
jg
lcall
aam
dec
scas
lcall
arpl
lods
push
call
push
xor
sahf
clc
pop
xor
pop
push
fldenv
ret
stos
mov
jle
xlat
mov
jecxz
xchg
and
jp
push
scas
in
call
cltd
aas
outsb
fwait
or
movsl
xor
pop
xchg
nop
mov
icebp
jbe
sbb
mov
inc
scas
mov
push
xor
mov
in
scas
jmp
rcl
mov
loopne
sub
add
pop
xor
lock
movsl
movsb
mov
sbb
push
push
orb
call
es
rcll
test
inc
dec
pop
cld
mov
cmp
cmp
psubusb
bnd
inc
jne
pop
rolb
add
mov
pushf
mov
lods
mov
jl
out
or
cli
jns
and
sub
mov
inc
mov
push
cmp
mov
push
fucomp
dec
cmpsl
inc
int
mov
mov
iret
mov
cmpsl
mov
pop
mov
sbb
daa
sbb
pop
sbb
and
rcr
mov
cld
inc
ljmp
outsb
psubq
aad
repnz
xor
stos
and
lea
push
dec
pusha
pop
mov
lret
sbb
sbb
std
movsl
cmp
fwait
loop
std
jg
out
cmc
dec
sbb
jp
cmp
xchg
dec
pop
mov
sbb
in
jmp
fildl
scas
mov
push
pusha
leave
pushl
cwtl
mov
mov
fmuls
xchg
jl
iret
loope
xchg
mov
mov
inc
add
dec
xchg
outsl
pusha
pop
add
sbb
add
mov
popf
mov
bound
mov
push
leave
es
lock
iret
push
ljmp
inc
mov
push
dec
ja
mov
mov
stos
inc
jg
jecxz
jns
fs
mov
or
cmpb
and
pand
or
stos
mov
out
stc
inc
mov
and
cmp
mov
cmp
jmp
fwait
mov
sbb
mov
jg
mov
out
lahf
push
pop
adc
popf
pushf
mov
ret
das
rcrl
push
fmuls
pop
adc
cmpsl
jno
dec
mov
xchg
xor
jno
test
test
movl
imul
stos
xchg
dec
aam
pop
daa
xor
out
dec
int
mov
mov
xor
mov
aam
xor
addr16
outsb
jbe
nopl
push
push
mov
lods
loop
push
insb
daa
test
insl
add
cmpsb
out
xlat
and
outsb
and
jecxz
xor
gs
call
xchg
sub
dec
leave
inc
int
add
les
mov
dec
fucomip
cmp
cmp
movsb
fidivs
mov
mov
sbb
iret
mov
sbb
inc
xor
mov
negl
fbld
xor
sbb
jl
lock
mov
insl
roll
ror
imul
mov
mov
lret
xchg
add
leave
jns
mov
lea
pop
dec
ret
and
ficoml
bound
in
mov
xlat
push
mov
sub
imul
xchg
mov
inc
xor
mov
ret
cmpsl
loopne
adc
add
push
out
mov
cmpsl
sub
out
jno
movsb
ja
mov
repnz
daa
sbb
fisubs
mov
sbb
push
in
mov
aas
sbb
mov
addr16
iret
xor
jns
pop
xchg
sub
push
out
jnp
ja
test
xchg
icebp
sbb
das
add
sub
rolb
lcall
stos
cld
push
xchg
sarl
lock
add
imul
jp
fstpt
sbb
test
sbb
jle
imul
mov
incb
bound
and
loope
mov
ret
mov
out
mov
test
or
test
aam
mov
mov
iret
enter
or
cmp
fsub
test
jle
xchg
ljmp
mov
add
xchg
adc
enter
dec
ss
add
repz
test
push
aaa
int3
lods
add
xchg
shll
addl
mov
and
inc
pop
cmpsb
lret
dec
imul
roll
out
jno
sbb
ss
movsb
hlt
or
sbb
test
mov
sbb
test
shrl
mov
repz
insb
dec
adc
or
mov
push
fcmovu
adc
call
addr16
and
push
sub
sbb
add
jl
lods
xchg
scas
sub
pop
mov
dec
dec
xorb
cltd
cli
pop
orb
test
adc
adc
mov
ret
es
inc
push
cmc
pushf
out
add
or
add
aam
inc
leave
dec
repnz
test
sbb
jbe
xor
adc
push
sbb
jmp
sti
ret
and
push
jge
callw
pop
and
sub
pop
jge
ds
rcrb
pop
push
je
call
mov
mov
rcll
pop
inc
cmc
fnstcw
loopne
push
int
jl
pop
mov
and
fcompl
mov
jae
mov
jne
in
jns
add
push
mov
stos
xor
add
or
test
movl
adc
jmp
pop
sub
cmp
xchg
pop
leave
jno
push
jle
ds
sbb
mov
loope
fsubr
and
stc
stos
js
sahf
mov
out
lods
testb
mov
aaa
test
add
cmpsb
rorb
je
mov
adc
dec
inc
jne
sbb
enter
out
adc
pushf
xor
aaa
mov
jge
push
sbb
xchg
stos
or
test
bound
loopne
xchg
out
inc
mov
mov
rcrb
call
push
aam
pop
xor
cmp
mov
ror
ljmp
fwait
sarb
xchg
fwait
mov
inc
in
shrl
cwtl
ss
mov
loope
inc
inc
adc
mov
mov
and
es
push
outsb
fcoml
orb
jge
mov
int3
outsl
into
lret
push
pop
mov
cmp
aaa
cmp
popf
fsubrs
pop
jae
in
push
js
pop
test
dec
jbe
adc
push
lcall
adc
jno
ds
mov
addr16
sub
ret
hlt
arpl
ret
mov
xor
std
out
nop
dec
xor
mul
shlb
xchg
aaa
or
cmp
push
sub
mov
add
sbb
aad
mov
es
add
decl
fmuls
mov
test
outsl
xchg
stc
jb
and
js
repz
addr16
sbb
pop
aam
mov
or
test
ret
lahf
repz
lahf
divb
repz
cli
or
lods
sbb
ds
out
shlb
sbb
in
lock
mov
sahf
push
adc
int
xlat
stos
jl
divl
out
push
push
aas
pop
push
cmp
adc
aaa
fldl
xlat
test
and
pop
jge
insl
imul
push
cmpsb
inc
loope
add
ror
jecxz
aam
sbb
xchg
popa
mov
cmc
and
bound
cmpl
cmpsl
push
mov
lahf
fisubl
adc
sti
addr16
movsl
ds
cmpsl
ds
fcoml
push
fdivr
ds
rol
icebp
in
mov
jno,pt
adcb
and
test
pop
xor
sbb
leave
imul
xor
jnp
mov
les
or
adc
mov
jecxz
aaa
std
dec
lret
bound
mov
xor
sub
xor
stos
jp
pusha
jo
jbe
inc
jo
aad
jg
popl
std
mov
loope
mov
nop
or
push
or
out
cmp
or
cmp
lcall
sti
cmpsb
test
jno
ss
sub
mov
add
mov
push
filds
out
xor
xchg
in
arpl
data16
xchg
jle
out
sub
leave
fbld
push
cmc
int3
and
dec
pop
mov
pop
mov
pop
xlat
sub
push
mov
mov
xchg
mov
out
pop
mov
mulb
arpl
sbb
nop
fmul
addr16
lods
inc
sbb
inc
loopne
jle
in
xor
insl
daa
adc
das
push
cmc
out
jecxz
pop
sub
and
mov
xlat
cmp
or
mov
out
shlb
ror
sbb
xchg
add
dec
mov
sub
mov
data16
pop
loopne
cs
out
mov
out
pusha
mov
sahf
std
sbb
dec
outsb
push
add
dec
outsb
imull
aas
jmp
jp
or
mov
std
xor
or
sub
mov
sub
repz
lcall
and
jae
cli
out
pop
inc
in
loope
or
out
popa
mov
mov
mov
jbe
in
dec
aam
inc
inc
add
mov
pop
cltd
filds
pop
daa
jae
adc
lock
sbb
or
adc
dec
sarl
inc
imul
pusha
or
out
and
add
mov
lods
adc
xchg
push
and
mov
inc
lock
xor
iret
stos
fistpll
cli
or
stos
lods
sub
pop
inc
dec
mov
icebp
cwtl
lret
and
fisubrs
fstl
cmc
mov
mov
rorb
inc
and
fadd
push
push
rorb
sub
or
adc
jp
popf
rclb
push
push
jle
or
sbbb
fdivrs
add
in
loop
movsb
mov
imul
xor
jno
repz
adc
sub
pop
or
jno
pop
xchg
cmp
pushf
repz
push
addr16
add
pop
call
ret
or
fadd
test
dec
jg
mov
popf
dec
xabort
or
push
mov
dec
cmc
or
fidivrl
das
fsts
or
fldcw
add
push
add
repz
dec
sbb
hlt
pop
mov
add
aam
jo
and
fld
jg
pop
add
jbe
cmp
xchg
push
xchg
jge
pop
cmpsl
xor
mov
xchg
outsb
pusha
xchg
clc
cmp
push
mov
and
cld
jns
pop
sbbl
inc
daa
in
ds
xchg
and
sub
ja
fists
sbb
mov
subl
cwtl
jge
add
fdivl
mov
and
cmpsb
movsl
adc
mov
call
fisubs
pop
mov
jo
lods
xor
imul
out
repnz
rcll
jnp
faddl
lds
fcmovnb
enter
mov
in
cmp
inc
jno
xor
inc
divl
and
lods
cld
mov
mov
jnp
inc
mov
or
stos
or
stos
aas
lods
dec
ljmp
out
push
adc
lods
jmp
mov
sbb
ja
iret
call
lds
repz
test
bnd
out
mov
test
push
mov
push
andl
inc
sbb
sbb
mov
into
lods
xor
data16
mov
and
out
cmc
bound
ficoml
insl
xor
or
mov
nop
jnp
jge,pt
mov
xchg
ret
add
jb
sub
and
shl
sahf
mov
mov
dec
cs
shl
ja
mov
add
js
mov
push
daa
inc
dec
adc
int
xchg
addr16
cmp
dec
fs
test
or
imul
enter
pushf
sub
push
loopne
rclb
mov
sbb
test
inc
adc
sbb
push
mov
in
outsl
rclb
into
je
popa
int
xchg
xchg
lds
sub
aad
cmp
or
loope
sub
sbb
xchg
mov
jne
mov
sub
int
xorb
mov
stos
loopne
mov
test
lds
mov
hlt
dec
sbb
xchg
fcoml
xor
adc
push
cmp
or
daa
push
test
ror
inc
jns
scas
pop
sarl
or
mov
stos
inc
push
movsl
ficomps
push
mov
mov
adc
jle
sbb
fsubs
adc
jl
sbb
or
lds
test
pop
pop
rolb
or
lods
sub
adc
fisubl
mov
mov
movsl
out
adc
out
insb
out
lret
pop
adc
cmp
adc
push
loope
test
add
jnp
mov
data16
out
clc
xchg
repnz
imul
sbb
sbb
stc
jo
and
mov
lock
push
ret
jmp
or
jno
loope
sub
sar
jmp
loope
inc
push
ret
mov
sub
mov
add
shl
cmp
jle
mov
andl
sub
jmp
mov
pop
and
ljmp
jp
cli
outsl
fidivs
loopne
lret
mov
loopne
mov
xchg
popf
ret
push
mov
test
lcall
ret
push
es
divb
xchg
jne
jecxz
cwtl
enter
xchg
out
les
leave
dec
icebp
mov
sbb
dec
lahf
inc
jmp
lret
adc
fs
fs
push
stos
rolb
push
mov
xor
shl
xchg
adc
lods
adc
push
adc
add
pop
cmp
fnstsw
sbb
mov
mov
scas
mov
xor
sub
add
sub
inc
mov
lock
jp
cmp
arpl
dec
xchg
test
std
in
invlpg
pop
dec
xor
fldenv
clc
push
xchg
sbb
mov
enter
fiadds
inc
dec
jne
stos
fbld
flds
fwait
and
add
pop
jmp
int3
mov
mov
data16
lock
add
pop
lret
es
sbb
push
jl
pop
pop
xchg
nop
das
sbb
popf
insl
shr
enter
fdivrs
sar
into
and
jno
jg
cmp
jl
mov
enter
ret
cli
cs
ss
sbb
aam
dec
cmc
std
sbb
push
xchg
mov
sub
mov
cmp
push
out
repz
push
test
lret
jp
mov
in
iret
cmc
pushf
test
loope
cmp
ret
ret
mov
jo
pop
mov
and
sti
inc
loop
insl
lret
pop
and
xor
inc
cmpb
popf
mov
in
mov
cmpsb
inc
inc
incl
xchg
jle
cmp
nop
loopne
mov
adc
sahf
push
sbb
jb
in
add
sub
pop
fbld
iret
dec
hlt
jne
js
xchg
stc
mov
fnsave
shr
adc
push
nop
loope
int3
pop
lock
pop
xchg
adc
aas
stc
shl
fcoml
rcl
sar
and
push
add
insb
ret
aaa
dec
mov
pop
mov
mov
adc
outsb
add
aad
cs
inc
lret
mov
dec
jo
out
fwait
lods
cmpsl
movsl
sbb
ja
cli
push
roll
cmp
bound
inc
aas
dec
lods
pmaddwd
fdivs
and
cmp
mov
jecxz
aas
jmp
enter
pusha
cli
or
into
inc
frstpm(287
mov
push
shll
sub
popf
mov
sbb
lods
xor
xor
scas
fidivs
xchg
pusha
inc
imul
fbstp
sbb
mov
xchg
xchg
adc
adc
jmp
jmp
int
xchg
rcrb
xor
cli
aaa
cli
cmp
fnstenv
xchg
int3
pushf
shl
stos
adcb
int
xor
in
in
or
pusha
xorb
test
lret
mov
mov
ss
mov
inc
xor
pusha
mov
jecxz
mov
mov
xor
mov
roll
fdivrp
mov
fildll
fsts
inc
adc
subb
ficoms
fsubrl
jae
dec
dec
or
sahf
addl
clc
sub
add
or
inc
pop
inc
cmc
ja
shrb
out
lock
mov
xlat
ds
inc
mov
or
mov
mov
out
xchg
popa
fwait
add
sub
sbb
inc
js
iret
sub
aam
shr
push
or
sbb
xorb
mov
fisttpl
push
pop
in
or
cmp
movl
cmp
add
sub
negb
and
sbb
mov
mov
scas
mov
push
xor
nop
adc
inc
nop
sahf
mov
lods
rcl
lock
mov
jle
cmp
and
sbb
movsb
push
popf
je
in
jae
lock
sahf
xchg
and
sbb
xor
cmpb
ffree
aad
mov
ss
decl
jne
xchg
pop
fnstenv
movsb
inc
push
gs
pop
hlt
outsl
inc
xchg
into
mov
push
mov
loopne
jmp
out
lea
and
xchg
jno
lahf
and
jmp
jbe
adc
add
sub
mov
aad
outsb
jo
test
adc
mov
sbb
loope
data16
into
jg
mov
std
into
jg
sbb
and
aam
dec
jg
sti
jo
xchg
push
push
xchg
cmpsb
jns
jcxz
xchg
push
fsubl
xor
cmp
xorl
ficompl
mov
ret
mov
sbb
jecxz
lahf
sub
add
lret
incl
mov
or
sub
mov
sahf
pop
call
pusha
test
sub
jge
sub
adc
mov
add
jae
notb
insb
pop
fstps
jns
sbb
repz
ficompl
add
push
xchg
push
clc
push
hlt
lds
sahf
and
inc
data16
fs
aad
push
or
ds
out
iret
mov
and
popa
xor
sbb
shl
sub
xlat
idivl
push
cmp
jl
sahf
loope
loope
aam
ja
xchg
and
sub
ret
mov
lahf
adc
cmp
xor
pusha
cmp
jno
push
fdivs
cmpsl
out
sub
inc
xor
out
mov
test
cmc
sub
sbb
push
fiaddl
adc
enter
scas
add
aas
movsb
lcall
loop
lcall
ljmp
sar
adc
lds
repz
stc
sub
push
cli
dec
dec
mov
bound
inc
test
ss
jmp
fcmovb
and
sub
pop
push
add
cs
js
das
dec
xchg
or
inc
mov
out
jae
jno
fwait
push
pop
cmpb
or
mov
mov
arpl
fsqrt
fs
call
mov
or
xchg
push
lret
dec
mov
mov
shlb
or
scas
dec
mov
lahf
cmp
mov
push
pop
lods
inc
mov
sbb
add
mov
andl
filds
adc
rcrl
jnp
push
test
pop
test
ror
ja
inc
jo
cli
cmpsb
out
ds
inc
and
cmp
pop
xchg
cmp
mov
jecxz
das
jp
pop
jno
ja
pop
inc
daa
add
aam
mov
aam
mov
cltd
fsubr
push
adc
adc
sbb
inc
pop
jne
xchg
test
inc
jae
pushl
fs
jnp
lret
xchg
jns
inc
and
repnz
fcompl
mov
mov
xchg
in
push
mov
dec
inc
cwtl
cld
adc
push
xchg
inc
popf
dec
mov
dec
dec
xchg
pushf
xor
js
jmp
cltd
out
fsubs
xchg
push
mov
push
test
and
loop
xor
push
bound
mov
add
retw
dec
out
ret
jge
test
enter
bound
aas
inc
pop
push
movsb
cmp
and
jns
dec
fs
jp
out
ss
imul
mov
add
mov
fdecstp
pop
sub
mov
pop
sub
jle
in
icebp
push
dec
aad
pop
and
lds
movsl
sbb
je
imul
lret
in
jle
push
lahf
adc
iret
daa
mov
movsl
or
ljmp
lret
adc
repz
jo
lret
cld
into
inc
dec
fstps
movsl
push
sub
ljmp
push
mov
jp
cs
loope
outsl
pop
pop
mov
ljmp
call
push
cltd
or
jp
sub
inc
imul
dec
mov
xorb
mov
push
push
repnz
aam
mov
faddl
fwait
ror
and
mov
stc
cs
and
adc
shll
jae
mov
fdivr
mov
sub
xchg
inc
aam
jge
cmpl
adc
or
int3
inc
insl
adc
mov
jl
push
xor
mov
shrl
aas
lds
push
out
cmp
in
and
jns
rcll
sbb
gs
xor
mov
outsl
in
les
add
adc
loope
xor
aad
idiv
out
adc
mov
jmp
lret
sahf
jl
dec
mov
mov
into
xor
fcoms
cmp
or
lahf
das
pop
xchg
ja
jne
jmp
sub
sahf
push
push
ljmp
in
sbb
fistps
clc
adc
adc
and
enter
aad
add
inc
add
in
fidivrl
imul
mov
rcll
imul
jl
dec
sub
data16
mov
lahf
inc
int
push
lods
fisubl
inc
dec
movsb
dec
jnp
push
and
nop
jnp
subl
lock
mov
insb
mov
cld
add
and
mov
es
pop
dec
xor
scas
mov
xchg
xchg
daa
push
movsl
jmp
shr
mov
cmova
pop
adc
enter
loopne
and
ljmp
or
jmp
mov
xor
push
jp
xchg
inc
sub
es
cltd
popa
cmp
ja
ss
clc
push
jne
mov
insl
sub
cmp
sub
add
mov
cwtl
scas
mov
jno
dec
mov
icebp
mov
jl
hlt
repnz
movsb
iret
or
push
inc
daa
shlb
andb
sub
outsb
adc
xchg
xchg
mov
sbb
mov
push
push
adc
icebp
add
insl
mov
maxps
mov
xlat
dec
dec
mov
xchg
push
loop
jmp
ss
nop
test
and
or
push
xor
int
cmp
pop
mov
cs
cmp
ret
loop
inc
cmc
ret
stc
lock
inc
mov
sub
jp
jbe
mov
sti
and
insl
fdivs
mov
in
xchg
cmc
push
insl
push
aad
nop
push
inc
mov
movsl
or
push
aaa
rclb
push
inc
pushf
icebp
ja
push
dec
sti
test
icebp
xlat
into
xchg
adc
aam
insl
pop
cmpsl
sbb
fidivrl
cwtl
dec
or
and
cmpl
fwait
pushf
insb
and
lods
xchg
int3
xchg
add
fdivrs
or
xlat
mov
push
int
psubd
cmp
push
mov
scas
shlb
push
adc
cmc
out
xchg
pop
ret
and
mov
add
sub
and
mov
and
cmp
or
loopne
inc
cld
mov
int3
or
sub
xor
mov
mov
aas
pop
adc
aas
lret
std
jg
fwait
push
cltd
xchg
cbtw
cmpsb
shlb
xchg
repnz
mull
sbb
arpl
push
lahf
mov
imul
pushf
inc
fstpl
or
or
ja
jle
fxtract
push
imul
inc
leave
fdivrs
xchg
lret
jae
or
lock
or
push
push
insl
mov
add
add
xchg
lea
mov
sbb
fwait
pop
xchg
mov
mov
jns
mov
sub
jge
movsl
mov
test
nop
mov
pop
or
jge
dec
jbe
test
cmp
push
testb
fsts
adc
mov
cmp
and
mull
sub
mov
ss
pop
or
push
jle
or
or
xchg
cmp
jb
hlt
in
xchg
cmp
aaa
in
push
pop
sbb
add
cltd
sub
daa
arpl
ret
rcrl
pop
or
fildll
mov
hlt
lahf
sub
xchg
or
jb
out
adc
test
and
sahf
fistl
das
cmp
xor
andl
out
idivb
cmp
mov
or
sbb
in
adc
outsb
mov
mov
aaa
sbb
les
enter
push
divl
adc
das
push
test
pop
jl
idivl
mov
loopne
add
sahf
inc
enter
mov
repnz
and
sub
dec
out
lods
dec
push
mov
xchg
xor
sub
loope
stos
mov
mov
xor
aad
fistl
push
sahf
lds
lods
sbb
cmc
and
enter
jb
pop
xchg
fucomi
das
xchg
adcb
test
cmp
lods
aas
inc
pop
out
pop
out
imul
mov
sbb
scas
dec
add
loope
adc
shll
pop
sbb
lahf
jle
arpl
and
hlt
dec
into
mov
xchg
sub
cltd
xchg
mov
es
and
popa
fnstsw
pop
inc
inc
mov
xor
add
test
xorb
movsl
sbb
lret
pop
enter
es
imul
xor
andb
cmp
xchg
cs
subl
push
jmp
jl
repnz
xor
faddl
aam
sarl
adcb
sahf
xchg
or
jg
leave
pop
cmpsl
inc
scas
aaa
in
test
dec
andb
cltd
sub
jnp
xchg
divl
int3
fidivrs
xchg
scas
lahf
loope
push
xchg
jp
ja
sub
inc
out
je
mov
jmp
and
sarb
je
inc
mov
or
pop
sarl
nop
jl
out
dec
xchg
cmp
mov
or
rclb
test
scas
je
dec
pop
push
cmpsb
mov
insb
pop
jmp
idivl
leave
push
loop
xchg
ss
xchg
les
test
shl
and
xorb
ljmp
fsubs
mov
xlat
jnp
mov
into
or
shll
subl
imul
xchg
sbbb
js
rcrl
pusha
dec
out
lret
int3
aaa
lahf
mov
dec
jl
push
jno
jecxz
push
repz
adc
dec
iret
clc
movsl
cmp
mov
jns
push
enter
push
mov
jae
dec
jae
int
sbb
in
xchg
jb
addb
aas
repz
std
aad
nop
pop
stc
sbb
xchg
mov
and
inc
rclb
mov
cltd
lods
xchg
cli
add
popf
inc
in
xchg
out
sub
je
cmc
push
mov
xor
loope
jge
stos
int3
jbe
push
xchg
lret
xor
xchg
mov
or
mov
imul
xchg
sub
and
mov
into
mov
outsl
test
or
or
mov
es
sbb
dec
sbb
push
mov
jae
inc
cmp
jnp
pusha
push
xor
cmp
xor
enter
adc
insb
mov
shl
inc
xchg
addr16
or
leave
sti
lods
xchg
mov
add
ret
movsb
mov
jle
push
jl
mov
js
xchg
dec
sbb
por
mov
cmc
icebp
inc
test
mov
xor
mov
test
lcall
mov
mov
decb
sbb
push
xor
cmpb
divl
xlat
sbb
out
nopl
pushf
and
into
jne
push
sub
dec
inc
imul
cmp
dec
xor
push
faddl
sarl
test
pop
daa
cmpsb
repnz
inc
inc
and
out
pop
cmpsl
daa
popf
pop
mov
or
lock
shlb
mov
aam
dec
xchg
sahf
data16
mov
and
lret
addr16
fldenv
mov
jae
cmpsb
dec
je
or
mov
enter
mov
int3
pop
inc
lret
jae
int3
frstor
je
push
sub
aaa
popf
sbbb
jg
mov
dec
outsb
pop
test
sub
pop
cmp
repz
xchg
pop
sbb
out
jp
pop
pop
ljmp
add
sub
pop
clc
jecxz
int
leave
iret
mov
jg
imul
mov
mov
imul
shll
push
sahf
mov
mov
and
mov
imul
jl
xor
push
jge
push
stc
cmp
inc
add
add
iret
mov
pop
inc
lret
mov
mov
loopne
repnz
stos
int
ret
jae
call
callw
outsb
push
addr16
movsl
push
jnp
inc
pop
out
mov
mov
mov
mov
xorl
stc
mov
rcrb
repnz
mov
pop
shlb
xchg
xor
xchg
and
mov
jmp
or
xchg
inc
stos
mov
jb
xchg
mov
enter
scas
mov
xchg
imull
fstpt
sbb
cmc
cmp
jge
hlt
ja
and
jno
shl
add
ds
je
es
xchg
add
mov
imul
pop
popa
popl
test
insl
add
insl
cmp
xchg
fbld
mov
stc
xor
int3
sbb
fcmovnbe
mov
lods
cmp
fwait
mov
pop
jae
mov
push
ja
jmp
fmull
pop
and
ja
aad
lcall
sbb
cmc
adc
fwait
repnz
mov
data16
fsubrs
adc
or
repnz
hlt
lret
jge
inc
dec
push
pop
imul
push
jmp
adc
mov
mov
imul
pop
jp
imull
fmuls
pushf
popa
inc
les
icebp
pop
cld
push
aas
mov
push
dec
jno
jl
mov
or
and
xor
scas
sbbb
cld
xchg
and
out
out
cmp
or
fdivr
cmp
sbb
sub
addl
out
fistps
or
shrb
loop
lea
daa
scas
aas
aas
inc
call
dec
adc
lea
dec
ret
or
or
dec
adc
rcr
push
popa
jmp
and
mov
insb
lds
rol
ret
in
jnp
fisubl
sub
sbb
mov
stos
add
jnp
out
jno
mov
mov
lods
out
cli
aad
int
adc
jg
rcl
add
aaa
push
fildll
lods
mov
test
or
mov
aas
sbb
icebp
mov
ljmp
inc
sub
xchg
out
js
cmc
xor
std
rcl
lret
test
cmp
fwait
das
push
sbb
xor
imul
test
mov
jg
fwait
ss
cmpsb
sub
cld
mov
lock
inc
push
add
inc
xor
out
das
mov
inc
out
push
push
aam
movsb
and
test
cmp
jns
cwtl
in
mov
arpl
in
mov
and
fs
xlat
or
xor
and
pop
mov
mov
push
loopne
bound
push
dec
inc
orb
dec
sub
mov
das
jmp
dec
bsr
mov
lds
shlb
xor
icebp
jae
mov
pop
fistl
or
cmp
sbb
jne
and
cld
pop
or
clc
popf
push
das
jne
or
lods
xor
mov
aas
sub
or
jne
jecxz
mov
xlat
mov
jmp
lods
test
cli
pop
nop
fisubrl
ficompl
cmpsl
aad
jae
pop
sub
pop
pushf
out
mov
mov
cmovb
push
inc
sub
add
pop
mov
faddl
mov
lods
push
nop
cmp
out
sub
sub
adc
jmp
shll
inc
shll
pop
fs
sbb
es
gs
sbb
cmc
jne
xchg
add
fildll
pop
or
inc
mov
loope
jne
sbb
sub
mov
sahf
mov
sub
sbb
sbb
mov
fs
jnp
cmp
out
cmp
jo
push
inc
pop
jno
mov
mov
test
dec
pushl
mov
pushf
dec
jecxz
aaa
pop
dec
ret
das
ds
mov
adc
xor
jge
sub
jno
xchg
mov
sbb
jl
cmc
leave
add
jne
in
loopne
pop
js
xor
mov
add
das
mov
mov
pop
mov
pop
jbe
clc
cmpsl
xchg
ja
sub
add
dec
jbe
test
add
aas
clc
data16
lock
add
ret
orb
es
jl
adc
ficoml
jb
sahf
cmp
incb
push
mov
test
enter
jecxz
test
mov
inc
push
pushf
jg
sarl
pusha
test
insl
push
xlat
aad
mov
mov
sahf
adc
mov
cltd
xchg
or
loop
jns
lods
jns
pop
insl
adcb
xchg
push
enter
sbb
jb
cmpsb
mov
call
inc
repnz
push
mov
iret
inc
into
lods
dec
addr16
dec
mov
and
repz
andl
in
stos
push
inc
fisubrl
movsl
xchg
push
mov
mov
in
pop
sahf
push
jo
jp
aaa
and
cmpsl
pop
gs
jb
sub
loope
xchg
adc
cwtl
and
add
xchg
xor
add
loopne
repz
jnp
and
scas
sarl
ja
cmp
cmp
insb
add
nop
lea
faddl
push
sub
add
push
push
mov
outsb
adc
and
push
scas
loop
bound
pop
lret
pop
mov
mov
sub
xchg
test
int3
add
popa
push
xor
fwait
sub
mov
in
push
test
sar
mov
stos
int
lret
jo
pop
adc
mov
je
jnp
sub
js
inc
nop
test
fstl
out
add
repz
lods
popf
sarl
and
loope
out
loop
mov
xchg
gs
dec
fisubrl
cmp
inc
and
aas
xchg
mov
mov
aad
mov
lcall
adc
adc
mov
sbb
add
shll
and
sahf
cmc
cmp
xor
cld
rclb
fldenv
jmp
aad
test
hlt
inc
cmpsb
loopne
add
mov
pop
cli
outsl
pushw
movsl
mov
or
inc
adc
rclb
jno
lods
mov
xchg
inc
mov
je
mov
mov
cwtl
lods
jmp
adc
ffreep
cmp
jb
mov
sbb
nop
clc
mov
jge
push
pop
enter
xchg
imul
out
ss
cmpsl
aam
loop
dec
mov
and
inc
bound
jmp
ret
fdivrs
or
and
sub
add
cld
mov
rcr
cmp
test
pushf
lods
test
xor
cmp
jle
and
insb
xchg
adc
xchg
jle
pop
mov
bound
enter
jge
sub
fcmovnbe
sub
jne
aaa
bound
mov
hlt
push
bound
xchg
xchg
test
pusha
in
jne
jl
xchg
lret
adc
nop
out
add
mov
sbb
dec
xor
inc
fdivr
repz
decb
and
popa
and
mov
mov
test
sub
bnd
sub
test
and
popf
outsb
xchg
cs
scas
xlat
sbb
shl
cmp
jp
sbbb
jg
testl
cmp
or
ljmp
movsb
fldl
jmp
shrb
addr16
cltd
or
push
mov
sahf
push
lock
ds
inc
adc
pop
out
lcall
xor
mov
pop
jecxz
mov
aam
dec
sub
dec
push
shl
clc
mov
mov
add
pop
adc
pop
add
cmp
adc
lcall
fildll
sub
roll
dec
cmp
add
stc
jbe
es
push
jbe
push
popa
inc
xor
inc
imul
filds
insb
stos
cmp
or
pop
lods
leave
xorl
test
int3
repnz
adc
daa
ds
mov
and
push
xchg
sti
add
cs
jns
xchg
shrl
loope
mov
mov
je
scas
lods
testl
sub
pop
mov
sahf
inc
mov
jb
xchg
adc
scas
pop
inc
jno
sbb
ror
in
pop
out
cltd
cmc
sbb
stc
jg
insl
das
xchg
js
push
cs
sub
sbb
adc
pushf
inc
push
jecxz
sbb
inc
and
xchg
jo
icebp
sbb
adc
adc
sbb
orb
dec
fwait
mov
fnstenv
dec
cmc
mov
hlt
pop
mov
fiaddl
outsl
ss
lahf
or
xor
pmaddwd
xor
jge
or
sbb
mov
cltd
in
clc
mov
pop
leave
in
mov
pop
aaa
cmp
mov
pusha
pop
enter
pop
jp
pop
and
clc
out
arpl
std
xor
pop
or
sub
out
sub
cmpsb
jae
shl
or
mov
fdivrp
lea
cmp
dec
push
xchg
fnstsw
in
call
dec
lcall
jle
sbb
adc
rorl
jno
adc
sub
adc
clc
inc
push
push
adc
imul
jmp
imul
into
mov
loop
je
add
out
pop
rolb
adc
sahf
pop
mov
mov
add
aas
popa
mov
sti
repz
lock
fcmove
cmp
add
inc
dec
and
iret
dec
ja
jnp
dec
lock
pop
pop
sbb
clc
mull
jp
loopne
lds
mov
fwait
js
pop
mov
add
dec
rorl
add
pushf
ja
mov
shrb
push
sar
and
movl
fisubrl
inc
mov
aas
fstl
jo
and
popa
sub
lods
loope
sahf
xor
push
aas
out
pop
in
roll
iret
in
movsl
mov
mov
out
and
fdiv
std
adc
aas
and
inc
pop
loop
and
in
adc
or
inc
xchg
sub
jb
cmc
jl
or
and
push
call
adc
int
pop
jae
ret
push
mov
int3
inc
push
sti
shrb
lds
inc
push
loop
pop
filds
inc
fwait
paddd
sbb
bound
loopne
pop
ret
add
roll
lret
sarb
pusha
sbb
dec
jne
test
mov
lock
jae
cld
daa
mov
in
mov
into
xchg
jge
xor
sbb
addr16
and
sbb
or
cli
test
insl
push
jbe
in
push
dec
and
lcall
push
mov
mov
cmp
or
nop
lret
lods
inc
mov
lret
test
push
mov
jb
pop
inc
or
sbb
insb
xchg
fsubl
mov
stos
movsl
lds
mov
sub
jb
mov
xor
or
inc
stos
inc
sub
pop
sub
and
cmp
ficomps
data16
dec
addr16
jnp
shlb
hlt
push
pop
out
mov
cwtl
outsl
dec
lret
fdivrl
insb
xchg
pop
test
imul
add
jno
xchg
ljmp
add
xchg
inc
mov
sbb
adc
push
iret
adc
cmp
bnd
push
cmp
das
push
xchg
je
sahf
roll
pop
sbb
and
cmp
and
mov
sub
aam
mov
test
repz
xor
int3
aad
jg
scas
cmp
popf
imul
pop
ficomps
sahf
fidivrl
mov
xchg
xchg
dec
shl
sbb
mov
cmp
sbb
sbb
sbb
gs
test
jle
jo
xor
push
outsl
pushf
shlb
or
xor
rcrl
aam
jno
mov
push
sbb
aad
enter
add
in
adc
out
es
dec
sahf
sti
rorl
mov
xor
fnstsw
mov
fisttpl
and
sub
aas
out
ja
jmp
testb
sub
daa
test
clc
sbb
mov
cmp
lahf
push
sbb
aaa
outsl
pop
insb
add
filds
xchg
cmp
mov
inc
cmp
stos
add
pop
roll
inc
xchg
outsb
xor
mov
imul
mov
loope
pop
and
sub
push
cmp
out
aaa
js
sub
xor
mov
fdivr
mov
fcomip
add
outsb
fmuls
mov
jmp
sbb
lods
outsb
inc
cmpsb
inc
add
outsl
push
mov
das
ja
test
dec
gs
mov
adc
fcom
cmp
sbb
pushf
ret
add
or
add
addr16
inc
cmp
inc
sbbb
enter
mov
lcall
daa
lahf
in
jno
jecxz
sbb
xor
pop
xlat
push
or
mov
push
js
mov
sarl
and
test
sbb
call
mov
ds
stos
fisubl
mov
pop
sbb
push
push
mov
ja
jecxz
xchg
fldl
rcrb
fiaddl
fimuls
jbe
pop
loope
dec
pop
sahf
leave
ret
cwtl
mov
inc
out
push
cmp
mov
fisttpl
cmc
push
add
push
iret
xchg
adc
ljmp
stos
imul
dec
adc
jnp
into
pop
imul
mov
xchg
xchg
sbb
add
enter
jle
xchg
cltd
jns
jecxz
sub
jecxz
xchg
or
or
outsb
and
ljmp
cmp
xchg
dec
mov
das
into
jle
hlt
xor
stos
sti
push
mov
jl
shrl
mov
sbb
imul
push
pop
lahf
or
ss
movsl
push
rorb
repz
xchg
xor
sub
hlt
mov
sbb
jno
pop
int3
mov
ljmp
call
fwait
xor
xchg
xchg
push
cli
push
stos
fs
lods
insl
xchg
repnz
inc
pop
push
sbb
jge
cmc
add
sahf
xchg
or
mov
loop
test
sbb
imul
push
jecxz
jns
inc
scas
lcall
dec
inc
inc
xchg
xor
pop
mov
pop
daa
pop
cmc
pop
adc
xchg
test
pop
test
ja
sub
outsb
shl
fcoms
movsb
mov
in
es
nop
xor
ds
add
jbe
popf
loop
rclb
push
ret
xchg
and
rclb
mov
cli
stc
gs
insb
jg
cmpb
mov
sbb
ljmp
mov
adc
dec
cld
fidivrs
fsubs
stos
mov
xlat
movsb
sbb
mov
sbb
xor
cli
or
mov
cli
xchg
jl
fcoml
shr
imul
xor
rol
and
out
test
cmc
stc
cmpb
pop
pop
pushf
rcrb
clc
mov
cmp
inc
test
movsl
ret
or
jmp
in
dec
and
popa
push
or
data16
add
pop
mov
inc
sahf
lds
rcrl
sbbb
and
and
mov
inc
and
sbb
jg
loop
sub
sbb
movsl
shrl
pop
mov
sbb
shl
insl
xor
jbe
ret
jnp
cmpsb
push
adc
loope
mov
test
xchg
adc
xor
fldcw
out
roll
add
hlt
mov
mov
adc
arpl
or
cmp
rol
xchg
fst
imul
cs
js
stos
cmpsl
jno
push
xor
stos
dec
fidivrs
push
jne
sub
sbb
lods
iret
andl
scas
enter
cmp
hlt
in
mov
cmp
pop
loope
jbe
sub
mov
push
and
inc
push
icebp
sub
cmp
fisubrl
imul
std
das
xor
aaa
jle
mov
jno
xor
mov
mov
cmp
cmpl
jge
mov
sbb
cltd
sbb
sbb
addr16
cmp
sub
shl
or
daa
xchg
stos
in
in
ja
xchg
in
cli
hlt
into
in
mov
push
push
mov
cs
cmp
outsl
shll
and
mov
xchg
dec
and
inc
aad
push
ljmp
push
xor
inc
jns
dec
aas
mov
lret
cmp
sub
aam
je
jle
scas
test
cmc
lret
add
add
jne
push
and
ds
sbb
jle
ljmp
leave
stos
lahf
aad
push
xchg
lea
mov
cld
cltd
in
pop
mov
xchg
daa
es
shrb
push
add
ret
pop
cli
fs
mov
inc
stos
in
adc
out
pop
je
and
iret
jns
mov
shlb
xchg
cli
pop
inc
and
xchg
in
test
push
and
sub
insb
insl
jg
jmp
dec
subl
aas
cmp
aas
mov
inc
sbb
xchg
jo
adc
jae
stos
sbb
cwtl
ret
cli
jbe
subb
add
add
xor
iret
ds
lahf
mov
scas
jae
arpl
xchg
gs
sti
fcom
sbb
mov
cmp
in
repz
gs
and
movsl
pop
out
in
sahf
out
adc
mov
decb
pop
outsb
xor
push
mov
push
and
xlat
xor
scas
adc
insl
pusha
sbb
xor
sub
outsl
xchg
pushf
stos
jo
pusha
sbb
ss
jmp
pop
sbb
out
popf
aas
adc
push
scas
inc
inc
mov
xor
push
stos
push
jno
sbb
int3
pop
pop
loope
xor
andb
jnp
mov
or
aam
and
nop
lea
mov
cmp
xchg
jge
lret
pushf
jne
mov
mov
adc
and
adc
int3
jne
jns
lahf
fwait
cmpl
mov
or
pop
mov
pusha
and
mov
xchg
or
hlt
cmpsl
jbe
jge
out
jbe
in
sbbb
and
in
or
pop
jl
push
cli
inc
push
pop
adc
cmp
xchg
cmp
push
hlt
pop
int3
clc
in
insl
jg
das
out
mov
stos
add
outsb
ret
and
daa
xchg
or
and
sub
sti
sbb
pop
rorl
push
pusha
or
inc
mov
mov
out
icebp
and
cmp
and
inc
loope
lahf
int3
imul
add
push
int3
negb
xchg
adc
sub
sub
mov
stc
sub
negb
ret
xlat
mov
adc
mov
add
movsl
aaa
mov
jbe
lahf
rcrl
xor
data16
push
ds
les
dec
push
mov
sbb
imul
enter
add
jl
flds
mov
jb
mov
push
in
rol
sub
neg
xor
addr16
scas
cmpsb
jae
mov
test
or
shlb
mov
call
das
jl
adc
push
cmp
cs
jb
aad
lock
xchg
inc
add
aam
lods
push
jle
sbb
ds
pusha
clc
sbb
lds
loop
lds
add
mov
xchg
loop
aaa
rolb
divl
decl
enterw
lcall
sbb
arpl
pop
inc
lcall
jo
jp
iret
fistl
fsubrs
rorl
mov
jg
lcall
fxch
push
sbb
and
call
fstpl
sub
inc
dec
inc
add
xchg
xchg
rcr
or
add
call
aaa
loopne
packssdw
inc
inc
ljmp
mov
sti
test
mov
sub
pop
sub
enter
lret
dec
aas
inc
icebp
mov
repnz
fwait
mov
mov
push
inc
xchg
add
fcompl
or
in
stc
mov
testb
xchg
adcb
insl
loop
lock
adc
mov
in
and
jne
psrld
ret
xor
pop
imul
loop
repnz
and
sbb
aas
xor
push
sbb
inc
xor
dec
movsb
iret
dec
loop
lret
iret
hlt
mov
mov
mov
aam
pusha
outsl
or
cmp
dec
xor
cmp
jp
xor
idivl
outsb
lods
add
repnz
pusha
add
movsb
and
mov
push
rclb
insl
dec
popa
lock
and
mov
bound
jne
out
in
add
mov
push
pop
sbb
out
in
and
xor
xchg
mov
xchg
mov
scas
aam
and
out
stos
into
xchg
stos
jns
jp
adc
mov
push
andl
icebp
push
cli
push
mov
jmp
lcall
sub
push
lods
mov
enter
dec
dec
lret
into
fwait
mov
pop
nop
add
out
and
jge
imul
jecxz
ds
push
lcall
into
mulb
imul
jmp
gs
jnp
dec
shlb
fsubr
out
mov
jg
adc
subb
push
inc
mov
cwtl
mov
les
cmp
dec
pop
cmovs
jbe
mov
icebp
lahf
sbb
xchg
iret
add
scas
sbb
call
sbbb
push
add
push
imul
in
sbb
pop
xchg
sbb
push
mov
adc
pop
lods
jne
neg
std
cmpsb
xor
pop
stc
pop
fsubl
adc
lock
mov
js
add
xor
pop
adc
xor
xchg
sbb
cmp
mov
insb
and
xchg
call
jl
jg
mov
push
xchg
fwait
popa
iret
jp
lds
leave
push
cld
sahf
xor
rolb
mov
mov
into
jnp
pop
pop
jecxz
sub
in
add
mov
scas
add
sub
arpl
mov
aad
cmpsb
sbb
inc
jp
pop
stc
mov
mov
push
xor
sbb
mov
clc
bound
mov
cltd
dec
cmc
or
mov
js
lahf
ss
sar
cs
sub
mov
sub
stos
xchg
scas
sub
addr16
jno
push
in
mov
je
cmc
push
fidivl
xchg
in
push
xor
cs
out
stc
xchg
cwtl
jae
outsl
mov
jo
xchg
mov
xchg
int
movsl
lcall
adc
loope
and
leave
dec
jl
out
andl
jbe
push
or
xchg
roll
xchg
fucomp
push
stos
std
syscall
int
jnp
push
mov
pop
pop
addr16
mov
pop
cmp
inc
je
mov
cmc
ljmp
xor
or
jnp
jb
fmull
push
out
imul
icebp
mov
xchg
es
cmp
cmp
dec
lock
test
mov
adc
mov
xchg
push
ret
jle
mov
jp
lret
popf
pand
fs
jo
test
cmp
out
add
and
push
lcall
or
and
bound
xchg
popf
dec
fwait
call
movsl
add
stos
inc
mov
imul
test
add
mov
sbb
in
in
sbb
into
in
clc
mov
sarb
adc
sbb
xchg
lods
jo
xlat
call
test
xchg
lret
cs
into
dec
add
push
mov
jo
leave
mov
dec
and
scas
sbbb
xchg
test
lock
xlat
sub
icebp
adcl
add
dec
xchg
faddl
cmpsl
lods
dec
aaa
jp
imull
mov
loop
outsb
cmp
push
pop
cwtl
and
add
insb
xor
std
xchg
sbb
xor
add
bound
incl
pop
inc
hlt
and
jns
push
clc
cmpsb
mov
mov
push
pop
lds
ja
push
add
xchg
dec
adc
fnstsw
mov
add
jge
adc
xchg
rcr
icebp
enter
sub
sahf
sub
decl
dec
pusha
in
jnp
cmpsl
aam
mov
mov
xchg
inc
adc
mov
rclb
push
inc
cmp
push
jnp
iret
std
jg
int3
notl
fs
gs
jge
movsb
int
xchg
cmp
sahf
adc
pop
ds
cmp
xchg
stc
rclb
and
pop
lods
pop
sub
sbb
cmc
fsubs
and
scas
je
add
lods
sbb
and
pop
jp
mov
sbb
sub
xchg
inc
xchg
inc
jo
arpl
mov
les
fisubl
fcoml
call
aaa
leave
adc
push
repnz
shll
jb
and
inc
insb
pushf
push
subb
adc
and
add
pop
shll
mov
xor
and
out
jno
xchg
sti
in
arpl
dec
incl
out
insl
int
mov
das
sub
mov
lret
or
loope
push
cmc
incl
outsl
addr16
sbb
mov
scas
test
dec
dec
pop
mov
dec
mov
subb
cmp
call
mov
xor
and
mov
cmp
loopne
jb
loopne
adc
movsb
imul
push
and
xor
jle
xor
dec
dec
dec
es
add
adc
stos
add
xchg
push
ficompl
adc
sbbb
imul
jge
pop
dec
inc
subl
adc
pop
stos
lret
or
mov
lods
sti
mov
pop
sbb
into
sub
shll
xchg
xchg
jnp
gs
jo
xor
jns
cmc
sub
shll
and
shll
lods
clc
jno
sub
roll
lock
lds
push
mov
popa
mov
push
and
add
xchg
pop
jo
sbb
out
push
cmp
lea
scas
cmp
jae
subl
test
jge
cmpb
dec
imul
mov
jno
push
cmp
repnz
out
xor
stos
dec
push
enter
mov
push
orl
sbb
imull
xor
pop
push
mov
pop
push
mov
outsl
nop
imull
sub
imul
imul
or
dec
xor
and
cmpsb
mov
sahf
inc
and
cltd
ja
cmp
dec
sbb
mov
push
jmp
aam
ja
jle
or
insb
ret
aam
and
push
mov
insl
push
lret
leave
mov
push
pop
mov
loope
adc
aam
popa
and
and
ljmp
daa
mov
es
lret
loope
mov
mov
sub
inc
dec
mov
dec
ficoms
shl
lods
cmp
mov
xor
ss
dec
lds
rcr
inc
cwtl
fdivrl
adc
mov
xor
jmp
cmp
repz
sbb
clc
add
imul
mov
das
jl
xchg
fcomi
mov
lahf
push
cmpsl
push
adc
test
cmc
rolb
mov
std
inc
add
out
mov
lods
pop
and
cmpsb
xchg
mov
loop
sbb
jno
push
push
add
cltd
fwait
cmp
mov
mov
jo
and
or
das
or
std
ja
mov
xchg
xchg
adcb
cli
mov
lret
aad
cs
in
xor
adc
inc
lcall
data16
jnp
test
add
dec
inc
push
out
and
imul
adc
jo
rorl
push
out
daa
push
jnp
lods
test
inc
sarb
pop
fnsave
imul
mov
adc
lahf
inc
jge
lret
js
inc
rcl
fsubp
subl
xchg
lods
jae
and
xchg
and
test
ficomps
mov
clc
fwait
mov
pop
jp
jns
or
cltd
lea
mov
push
xor
shl
cmpsl
dec
xchg
shll
xorb
roll
in
xor
imul
loop
mov
scas
sub
push
mov
movsl
jle
adc
xchg
lcall
test
pop
mull
push
fistpl
pop
jle
cmp
sti
imul
sarb
and
cli
adc
jge
mov
in
mov
out
movsl
inc
jnp
mov
aam
inc
cs
sbb
add
lret
aad
or
popa
shll
and
out
adc
insb
jg
add
loope
aad
nop
sub
cmc
jmp
out
mov
add
notb
pusha
aam
jle
pop
shrb
or
int
ss
xlat
js
dec
rcr
jns
push
pop
xchg
cmp
add
push
jno
add
or
mov
xorl
push
fmul
ja
mov
ja
jns
scas
fmulp
testb
sub
fistpl
sti
sahf
push
cmpsb
jp
pop
jno
ja
insb
and
or
scas
in
mov
loopne
push
push
in
pop
adc
test
popa
sub
jmp
xchg
mov
pop
leave
enter
daa
and
mov
pushf
push
sbb
push
adc
dec
mov
int3
aad
fistpl
mov
adc
clc
insl
xor
push
push
xchg
jns
cmp
xchg
pop
jmp
shl
push
push
outsl
mov
jno
cmp
cmpsl
push
daa
inc
scas
pop
cld
pop
mov
adc
scas
sbb
fdivrl
adc
outsl
pop
pop
adc
sbb
orl
jle
cld
fisttpl
mov
xchg
sub
sub
cs
jl
pop
add
jp
dec
mov
jns
and
cmpsb
fwait
jo,pt
inc
sbb
movsb
ljmp
sub
xor
fmull
test
cmpsl
cmp
or
out
rorb
test
fcomps
xor
xor
adc
mov
cmp
mov
xlat
xchg
in
jg
pop
ret
xchg
sbb
repz
negl
xor
and
imul
movsl
push
xor
cmc
sbbl
push
sahf
lods
dec
cwtl
call
mov
fnsave
ret
adc
imul
iret
mov
sarb
dec
mov
xchg
mov
push
cmp
bound
sub
pop
jg
add
sbb
xchg
insl
rcll
clc
movb
inc
sub
push
xchg
scas
push
jbe
mov
andb
lret
push
jg
cltd
in
and
mov
sbb
xor
fpatan
stc
push
inc
dec
fisubs
rcl
idivb
cmp
arpl
push
test
es
fldenv
cmpsb
rcll
cs
in
and
push
test
cwtl
fsubs
ljmp
push
add
in
cmp
push
addl
adc
or
fs
es
push
xor
scas
adc
pop
sahf
pop
inc
mov
insb
popa
xchg
cltd
test
cltd
leave
xchg
fdivrl
sub
test
cmp
out
or
cltd
lea
xchg
push
push
mov
aaa
loop
mov
fs
push
lock
mov
or
push
std
shlb
out
adc
sub
lahf
push
push
cmpsb
movsb
mov
test
out
ja
adc
popf
xchg
mov
iret
lods
lahf
aaa
cli
sub
mov
mov
int
xchg
repnz
cmp
dec
test
mov
mov
xchg
sbb
jecxz
mov
sahf
pop
pop
xlat
adc
and
adc
xchg
xor
insl
mov
cltd
push
xchg
sub
xchg
js
sub
and
out
xorl
movsl
and
cmp
ret
cltd
sub
add
xor
lods
lds
add
ss
lds
lds
jl
push
xor
outsl
mov
add
jg
mov
mov
mov
mov
adc
cmp
decb
mov
pushf
out
jle
dec
dec
cmp
aad
sub
mov
push
fmuls
add
sbb
outsb
inc
mov
or
push
inc
and
jb
orps
outsb
test
loop
adcb
jecxz
dec
cltd
jmp
mov
xchg
sbb
push
and
adc
mov
addr16
mov
jecxz
xchg
mov
in
stos
push
mov
mov
mov
push
fldenv
std
lret
call
clc
xchg
shlb
in
lods
jno
dec
or
in
pop
and
mov
add
aas
sub
stos
dec
aas
fidivs
pusha
out
inc
adc
sbb
popa
int3
insb
xchg
sbb
faddl
out
dec
pop
andb
and
jnp
inc
xlat
dec
pop
jl
mov
rcrl
push
sbb
xor
mov
pop
mov
in
xor
jnp
mov
ffree
jns
mov
jo
subb
fs
rcl
gs
pop
out
mov
aas
push
movsl
fsts
out
adc
rclb
es
rcl
cmovb
daa
lret
daa
dec
push
push
mov
mov
filds
cmp
jmp
das
dec
shrb
xchg
cs
inc
xchg
cmpsb
lret
mov
out
negb
movsl
mov
outsl
ss
pop
test
push
imul
sbb
out
jne
daa
push
in
mov
add
jo
nop
es
clc
orb
xchg
adc
leave
inc
les
test
inc
movsl
jno
push
sub
xchg
or
ret
xlat
dec
mov
lret
push
pop
imul
or
popf
dec
add
fsts
or
inc
inc
mov
mov
lock
std
add
pop
daa
cmpsb
xor
aam
sub
out
xchg
mov
xor
daa
dec
lahf
fmuls
mov
sub
inc
dec
lahf
int3
jle
sahf
pop
movsb
adc
add
push
out
sbb
mov
jns
lahf
addb
push
scas
push
js
pop
mov
in
les
xchg
push
ljmp
sahf
cmp
push
inc
and
inc
test
ss
pop
push
mov
outsl
lret
jl
mov
call
mov
cli
cmp
std
fildll
cld
sbb
shlb
push
fucomip
jne
adc
cmpsb
add
pusha
das
in
mov
adc
test
mov
push
subl
dec
shl
add
rorl
repnz
lahf
addb
pop
shll
shrb
add
scas
int
mov
cltd
std
jge
lds
or
stos
fwait
mov
adc
xor
and
lret
inc
push
clc
inc
mov
inc
pusha
sbb
movsl
mov
pop
cmp
inc
outsb
sub
pop
dec
subl
sbb
lods
stc
ss
out
add
ficompl
imul
je
inc
and
mov
mov
push
dec
frndint
xor
lahf
cmp
mov
pop
adc
and
push
gs
push
xor
shrl
das
mov
xchg
mov
or
nop
test
fisttpl
icebp
aad
and
add
shrl
movsb
dec
test
sbb
sarl
lea
fs
inc
sbb
xchg
addl
cltd
cmpsb
ret
add
fmul
shrb
add
mov
adc
sub
jbe
push
and
xor
cs
push
mull
insl
mov
imul
imul
push
jo
ficoml
xchg
daa
and
and
pop
cmc
out
loope
inc
pop
fxch
add
sub
sbb
adc
mov
cmpsl
mov
push
in
sbb
insb
fildll
xlat
dec
repnz
les
add
pushf
addb
pop
jae
pusha
out
cmp
and
push
mov
popl
adc
repnz
jno
test
int3
loope
aas
orb
sub
ja
inc
mull
cmp
and
dec
in
shll
std
and
cs
jge
call
mov
std
cwtl
leave
mov
mov
gs
gs
bnd
and
cmpsl
fwait
xchg
test
in
lret
addr16
jne
push
cmp
pop
fdivrs
adc
out
adc
fldl
pushw
cmp
and
mov
xchg
jge
dec
jge
pop
cmpsb
call
push
cltd
ljmp
jnp
mulb
pusha
loopne
xchg
mov
and
sub
imul
aam
mov
adc
push
sbb
stc
adc
inc
loopne
shrl
sbb
mov
sub
dec
das
inc
and
cmp
jae
pop
popa
cmp
dec
mov
test
jmp
repz
js
test
inc
or
mov
adc
adc
push
jmp
lea
movsb
leave
mov
sub
push
xchg
cmpsl
jns
mov
shlb
mov
adc
and
and
pop
sub
lock
push
test
adc
mov
jbe
adc
adc
cld
xchg
mov
and
cmp
cmp
lea
sahf
push
dec
inc
ret
jb
xchg
je
xlat
sub
movsl
dec
cltd
push
enter
sbb
lock
fisubrs
nop
dec
sub
fnsave
and
addr16
push
push
or
push
divb
mov
ret
sub
lret
test
dec
lcall
sbb
push
stos
loopne
cmp
cmpl
mov
adc
xor
push
jp
shlb
sbbl
lds
dec
out
mov
out
dec
push
les
mov
sahf
dec
lock
adcl
push
aad
cmp
push
adc
fcmovnu
push
or
aaa
sahf
jo
pop
pop
jle
mov
ljmp
ja
popa
xchg
mov
js
and
cmpsb
imul
xor
sub
adc
dec
mov
inc
add
mov
nop
nop
xor
pop
jo
adc
inc
push
xchg
inc
jmp
jmp
cmp
xchg
scas
cmp
cmc
push
push
nop
cmpsl
adc
scas
sbb
cs
test
pop
lahf
sub
call
cmp
dec
pop
adc
mov
loopne
ja
mov
stos
test
out
sub
push
adc
and
xor
and
sbb
lea
push
sti
jmp
xchg
lds
imul
mov
notl
fcmovbe
jp
sbb
movsl
hlt
inc
sbb
mov
fucomip
out
in
std
scas
mul
insb
stos
js
sbb
xchg
dec
pop
imul
stc
mov
jl
lock
in
fstps
cltd
test
pop
mov
pop
inc
bts
and
sub
mul
adc
loope
mov
adc
pop
push
imul
aam
sub
adc
test
out
jo
sub
jae
jecxz
insl
ss
sbb
out
imul
ret
fs
push
xchg
ja
fs
xchg
jbe
ret
fwait
rolb
pop
fisttpll
sahf
dec
sarl
cli
aas
jnp
inc
cmpsl
xor
and
lods
jmp
push
jmp
cmpsb
jl
cwtl
xchg
iret
mov
mov
in
jne
xchg
sub
adc
sub
into
lcall
clc
rcr
out
mov
xor
xor
xchg
sbb
ret
and
pop
stos
mov
in
dec
testl
jnp
scas
push
daa
scas
inc
fidivs
call
iret
addr16
addr16
fdivr
fistpl
shlb
shlb
sub
jne
mov
clc
testb
push
sbbb
adc
jno
fimuls
and
repnz
push
jmp
ss
mov
mov
push
mov
mov
lods
enter
or
into
in
pop
mov
lret
push
mov
test
mov
popf
xchg
jne
add
sub
mov
test
xchg
outsl
cld
push
dec
adc
jne
xchg
push
insl
mov
inc
out
mov
pusha
lods
aaa
loopne
jmp
std
mov
loopne
out
pop
xchg
cmp
sbb
push
inc
mov
test
jno
icebp
sub
loopne
jno
sbb
ret
xor
add
lret
push
xchg
leave
std
and
sti
mov
hlt
fisttpll
and
scas
pusha
jmp
cs
push
les
scas
push
mov
arpl
inc
push
inc
movsb
int
pop
jne
insl
and
adc
add
gs
cmp
mov
faddl
cmpsl
mov
and
jp
bound
negb
lret
out
aaa
xchg
in
sbb
insl
jns
std
stos
addr16
and
in
loop
in
fadd
pop
and
bound
arpl
xchg
mov
pop
inc
cltd
or
sub
jb
inc
mov
clc
mov
adc
push
mov
inc
mov
cmp
mov
pop
dec
test
fidivrl
scas
stos
ljmp
jbe
mov
xchg
lock
in
and
sbb
ret
negl
mov
xor
mov
into
xchg
stos
fnstenv
mov
js
rclb
fiadds
add
cld
mov
push
lahf
push
mov
mov
xorb
add
jge
push
xchg
aam
jp
daa
sbb
sub
test
xor
mov
sbb
pop
or
xchg
fwait
insb
cmp
movb
ret
xor
xor
mov
jle
outsl
lret
daa
or
ds
jmp
xchg
or
mov
push
sub
es
repnz
jno
je
lret
xchg
loopne
cs
fs
dec
mov
dec
in
dec
nop
push
es
sub
pop
dec
adc
scas
mov
sti
inc
sub
fmul
mov
jl
sbb
mov
jle
outsb
data16
xchg
add
or
popf
adc
dec
dec
test
mov
ficoms
pop
jmp
mov
jecxz
push
mov
mov
pop
and
fdivrl
and
push
in
std
adc
out
outsl
rcrb
ss
es
xor
sub
and
pop
push
mov
sbb
shlb
in
shrl
rol
test
mov
jmp
fucompp
ljmp
add
push
inc
int
mov
inc
inc
lock
mov
sbb
in
clc
push
imul
push
and
std
mov
add
shrb
push
and
cmpsb
sarb
movups
aad
popa
pop
dec
mov
xor
jno
push
lods
inc
dec
and
mov
add
lods
ljmp
mov
adc
hlt
cmpsb
es
clc
sub
jns
int3
stc
xchg
repnz
shl
push
fdivp
mov
mov
mov
mov
and
or
call
incl
out
outsb
and
and
jmp
std
fcompl
aas
repz
jp
pop
adc
push
mov
das
pop
push
adc
jbe
shlb
arpl
adc
push
loop
adc
mov
ds
insb
outsl
icebp
mov
loop
inc
lock
fidivs
push
mov
loop
rep
mov
dec
push
pop
mov
in
mov
jmp
insl
int
mov
cmp
and
mov
cs
insb
dec
imul
test
mov
mov
sti
fwait
mov
int
inc
imul
push
cmp
sbbl
adc
add
jae
test
scas
xchg
inc
pop
push
xor
pop
fstl
push
nop
mov
mov
lods
std
aam
lcall
stc
das
inc
add
inc
rolb
jge
loop
push
leave
outsb
pushf
les
push
out
inc
scas
mov
in
loope
mov
pop
jp
fimull
pushf
das
enter
or
ja
mov
jnp
ficoml
push
or
cmp
pop
movsl
fsubl
inc
sar
mov
in
push
push
nop
les
mov
repz
pop
mov
faddp
lods
sbb
inc
mov
dec
jge
cmpsb
push
pop
add
stos
daa
inc
mov
pop
clc
jo
adc
out
and
mov
ljmp
pop
outsb
pop
lahf
jp
and
jnp
fs
push
push
pop
mov
fs
inc
out
mov
dec
sahf
adcb
stos
lcall
or
jecxz
jge
push
xor
lds
inc
bound
addb
add
dec
nop
sarl
mov
xor
jo
rcll
mov
xchg
lcall
mov
inc
mov
or
add
mov
jno
jecxz
inc
xchg
test
pop
lcall
in
das
std
into
insl
jno
jge
push
movsb
popa
les
mov
cld
jmp
jno
inc
mov
test
mov
mov
cmp
adc
add
aam
gs
sub
test
jo
orl
jge
out
out
jecxz
aaa
sub
ds
jle
jle
fwait
inc
xor
xor
int
jmp
xchg
stos
mov
dec
jg
aas
sbb
inc
mov
pusha
cmp
imul
mov
sub
xchg
out
mov
nop
xchg
push
sbb
dec
push
or
loopne
loope
add
xorb
and
xchg
inc
popa
cltd
xchg
aaa
clc
movsb
clc
lea
sbb
in
sbb
mov
or
xor
aad
lret
ds
les
sub
addr16
jge
sbb
ficoms
push
jo
push
call
call
pushf
imul
cmp
loope
ret
and
outsl
daa
adc
sbb
enter
lahf
adc
lcall
loop
dec
cmp
or
cmp
push
inc
shrb
push
imull
push
aas
cmp
fisttpl
popa
sti
orl
mov
pop
dec
mov
mov
pusha
mov
stos
popf
xchg
or
mov
push
das
dec
xorb
or
jb
push
xor
xlat
ja
xor
push
mov
fiaddl
mov
mov
mov
mov
sbb
mov
aad
out
popf
mov
sbb
pop
sbb
sbb
lea
daa
jl
popa
test
test
pop
scas
mov
aas
mov
fsubr
stc
fwait
xor
pop
mov
inc
and
push
hlt
repz
xor
jp
pop
mov
dec
xchg
into
cmp
test
out
cmp
aam
push
das
adcb
loope
dec
ret
push
popa
in
sti
outsl
sbb
mov
fs
fildl
std
arpl
scas
dec
icebp
cld
cmp
cmpsb
lret
add
jge
pop
test
jg
push
ds
adc
lock
icebp
pop
imul
and
inc
jb
loop
mov
enter
rclb
add
mov
in
fidivl
mov
enter
add
and
or
movq
shlb
and
pop
cs
jbe
xchg
or
jb
jne
jno
jg
xchg
xlat
inc
add
sub
pushf
sub
jg
sub
call
cltd
cmpsb
adc
in
and
cwtl
fs
push
or
cltd
dec
dec
aam
subl
xchg
mov
jnp
push
push
loop
xchg
sub
and
int3
or
in
ja
dec
movsl
jnp
lods
out
jp
push
sbb
xor
add
das
popf
sub
add
lock
jge
dec
mov
mov
jmp
and
or
jns
push
icebp
cld
aas
pop
mov
inc
hlt
mov
hlt
xor
jge
pop
ret
aad
adc
inc
sub
xor
aam
inc
inc
ja
dec
stos
fists
dec
test
dec
push
or
or
aas
inc
sbb
psrad
adc
jl
xlat
push
and
sti
xor
jne
dec
mov
jb
add
or
mov
lcall
enter
or
xchg
push
adc
addr16
cmp
mov
out
repz
push
das
pop
mov
adc
sahf
xor
pop
fnstenv
into
cmpsb
add
daa
nop
insb
cltd
jbe
loop
out
mov
pusha
in
xchg
xorl
lret
pop
sbb
push
cmp
inc
aaa
std
inc
mov
cmp
fiadds
add
push
inc
inc
cltd
rcrb
lahf
popa
push
push
stos
add
test
test
and
mov
dec
or
adc
gs
lret
pop
inc
cmp
loop
push
jno
and
ss
xchg
mov
leave
subb
loope
fcoms
addr16
mov
mov
pop
mov
lret
hlt
cmp
ljmp
clc
jle
cwtl
add
xchg
lods
insb
mov
add
jno
daa
fsubrl
pop
rclb
cltd
rol
rorb
dec
rcr
xor
push
adc
sarb
sub
sub
bound
pop
dec
mov
xor
push
int
cmp
out
in
cmp
push
aam
loop
inc
xchg
xor
flds
add
jnp
std
xor
cmc
ds
jle
mov
vcvtpd2psy
fimull
cs
fdivs
sarl
push
fiaddl
and
imul
stc
mov
and
mov
test
cmpsb
call
repz
inc
ret
xchg
mov
fimull
je
movsl
out
adc
jb
jmp
pop
rcll
xchg
in
mov
mov
and
lret
mov
call
or
jge
mov
mov
sti
adc
sbb
mov
arpl
scas
cmpsl
test
lods
mov
mov
adcb
test
jae
sbb
in
stos
call
lock
inc
shufps
popa
inc
mov
ror
test
xchg
aad
fcmovb
movsb
mov
mov
out
ljmp
repnz
xor
or
iret
add
sbb
cmp
xchg
mov
and
mov
out
mov
outsl
cmp
shll
lods
imul
shlb
es
jns
jp
test
xor
jp
stos
leave
xchg
sub
cmp
mov
sbb
cli
sub
push
into
jnp
xchg
shl
xor
mov
add
jo
jge
pushf
inc
lcall
js
adc
pop
push
jne
rcll
push
testl
loop
leave
and
nop
mov
js
ljmp
add
mov
jns
fs
pop
cmp
and
mov
mov
test
lods
sarl
daa
xor
xorl
jge
aaa
mov
sbb
pop
dec
nop
lea
xchg
pop
lret
stc
push
xchg
testl
insb
in
ficompl
mov
mov
push
lahf
movb
cmp
xchg
xor
or
pop
and
jecxz
shll
fbstp
xchg
fiaddl
test
add
xchg
add
cmp
inc
and
add
dec
push
or
xchg
sub
and
iret
in
cmp
or
fdivl
fistl
ret
sbb
outsl
lcall
lds
stos
lock
int
test
push
xchg
xchg
xor
xchg
pop
or
mov
inc
mov
xchg
sub
xor
mov
fwait
cmp
mov
mov
cmp
mov
push
or
and
aaa
out
cmpl
pop
adc
pushf
pop
pop
xchg
rcll
xchg
je
fstpl
lcall
loop
dec
jbe
xorl
or
mov
pop
sub
movsl
add
insb
sub
mov
outsb
in
insb
movsl
lret
ja
cmp
jae
jno
mov
jnp
hlt
clc
stc
clc
pop
bound
movsb
xchg
movsl
adc
cmp
mulb
pop
shlb
cmpsb
movsl
ret
in
int
or
mov
lahf
sbb
pop
faddp
fildl
adc
pop
or
cld
mov
xor
add
ja
push
popa
dec
sar
fwait
leave
push
fistpll
mov
push
shrl
stc
fistps
push
mov
jo
or
enter
js
mov
jecxz
movsl
add
inc
push
stos
ret
sub
repnz
sbbb
cmp
iret
ret
xor
cwtl
enter
js
sti
add
push
loop
outsb
push
cmp
push
aas
mull
hlt
adc
push
add
leave
jns
fisubrl
dec
jno
mov
pop
jge
mov
mov
ss
pop
orb
add
mov
iret
test
mov
xchg
lock
jmp
call
movsb
push
xchg
insb
movsl
mov
icebp
insb
imul
sbb
hlt
pop
popa
or
inc
mov
outsb
push
aad
in
and
jge
cmp
inc
xchg
data16
pop
push
lcall
sbb
mov
cmpsl
notb
popa
movsb
cwtl
clc
mov
mov
pop
jge
and
sub
hlt
popa
mov
pop
icebp
jmp
xor
xor
je
or
or
stc
and
arpl
mov
jmp
sub
fimull
ja
add
outsb
adc
push
or
in
push
jae
cmpb
aam
push
xor
xor
or
push
insb
cmp
int
imul
outsl
test
lahf
jno
gs
or
cmp
push
xchg
pop
xchg
outsb
mov
add
and
xchg
mov
lods
pop
out
orb
dec
xchg
movsb
mov
xchg
stos
scas
repnz
aas
mov
mov
fdivs
adcl
in
sbb
or
dec
stos
or
pushf
inc
test
add
pop
in
out
into
fwait
mov
xor
add
pop
mov
into
or
mov
push
mov
xchg
mov
adcb
pop
sar
stc
loopne
sbb
xor
mov
shlb
lret
loop
pop
movsl
enter
mov
scas
insb
fnstcw
mov
pop
fbld
aaa
scas
mov
xchg
jg
dec
add
xchg
jge
lods
call
mov
faddl
mov
mov
inc
lcall
hlt
mov
adc
jns
xchg
add
push
sub
outsb
popa
cli
or
in
fst
filds
cmp
jle
int
ljmp
or
xor
pop
push
inc
and
push
movsb
jae
insb
enter
cmc
jp
mov
cmp
lods
push
ljmp
mov
jnp
or
xlat
arpl
xchg
loope
jecxz
or
cmpsb
cmp
cltd
bound
cld
and
imul
mov
push
push
pop
ljmp
fcompl
fs
sahf
push
fiaddl
enter
inc
jl
mov
enter
cmp
pop
cmpsl
into
add
imul
xor
mov
inc
lock
push
cmp
fidivs
out
clc
fldenv
sub
outsl
push
add
adc
fs
aam
jns
iret
xor
aam
enter
mov
sahf
cmpsl
mov
psubb
cwtl
add
pop
rcr
dec
fnsave
movsb
aam
test
insl
mov
stos
cld
and
mov
xor
or
push
cmpb
mov
popf
into
push
or
dec
sti
hlt
shll
rol
je
fwait
add
and
mov
mov
popa
in
mov
enter
lock
and
es
js
arpl
mov
shl
jb
mov
insb
adc
adc
ror
lock
or
inc
inc
add
sub
add
dec
popf
mov
xchg
or
pop
mov
dec
mov
xchg
bound
jnp
fcoms
pop
mov
mov
js
icebp
in
jl
push
leave
xor
lret
pop
fs
ja
out
inc
dec
cli
shll
cmp
inc
jo
hlt
add
fwait
out
mov
dec
das
sbb
loopne
enter
adc
jb
xor
xchg
sbb
lret
mov
bound
cli
out
in
repz
mov
stos
mov
dec
nop
test
rcrl
push
pop
and
and
addl
sahf
insl
jmp
insl
adc
scas
fwait
jne
shr
cmp
lea
out
hlt
inc
jg
aaa
dec
xchg
orl
cmp
and
jge
jmp
mov
lds
stc
cwtl
or
loope
adc
xchg
js
sbb
popa
sub
arpl
cmp
aas
leave
gs
push
in
popl
dec
xlat
xor
sub
pop
dec
hlt
adc
dec
mov
pop
fdivr
sbb
pop
in
mov
xchg
icebp
pop
int
jae
jbe
jge
inc
xchg
pop
xorb
xor
inc
sub
sahf
inc
cmpsb
or
sub
inc
sbb
nop
movsl
jnp
xchg
push
push
mov
rorl
mov
jns
scas
fiaddl
movsl
sub
cmpsl
sbb
xor
movsl
jae
sbb
push
push
or
mov
mov
xor
lret
xchg
ljmp
cltd
pop
sbb
jg
ds
pop
cli
pop
mov
das
jnp
mov
jp
jmp
pop
sub
pop
mov
lret
lret
lods
lcall
xor
repnz
or
pop
dec
pop
mov
jno
or
mov
mov
mov
shl
mov
pushf
add
fildl
xor
outsb
jno
rol
and
lds
mov
inc
jl
dec
jo
adc
int3
imul
xchg
aad
sub
jns
jecxz
lahf
sarb
pop
mov
sbb
sub
out
dec
fldenv
dec
pop
test
sti
jg
add
daa
rcrl
pop
cmp
mov
mov
push
lods
mov
cmp
pop
sbb
and
mov
movsl
in
scas
or
lock
mov
jbe
cmpsw
mov
out
jo
xchg
or
push
adc
xchg
ljmp
xchg
push
jno
inc
pop
or
pop
push
loopne
lods
and
push
movsl
add
cwtl
sti
popa
mov
cmp
pop
jbe
fistpl
cmp
movsb
lahf
push
sub
ss
xlat
sar
div
add
pop
dec
repz
mov
xor
pop
mov
mov
mov
paddb
jecxz
dec
fisubl
loopne
pop
xchg
sub
jmp
jo
adc
add
mov
xor
push
inc
xor
mov
mov
sub
ret
inc
xchg
test
fistl
adc
sub
sub
sti
fildl
jne
in
inc
fisttps
push
pop
xchg
add
popa
fwait
jne
outsl
jle
pushf
out
mov
push
mov
mov
ja
loopne
ret
inc
add
jb
pop
sbb
dec
xor
arpl
mov
movsb
mov
pop
pop
push
mov
adc
mov
imul
sbb
cmp
jge
outsl
arpl
orl
lret
or
adc
cmp
sbb
cmp
mov
cwtl
dec
subb
add
mov
lret
mov
in
out
adc
pop
rcl
mov
icebp
mov
gs
scas
jecxz
and
rolb
mov
popa
mov
dec
aas
inc
test
inc
and
sahf
jae
inc
mov
jl
testl
divl
shr
ffree
inc
xchg
inc
or
pop
dec
and
adc
mov
adc
sbb
mov
sbb
movswl
mov
cmp
cmp
adc
faddp
inc
push
enter
mov
sbb
addb
or
jnp
mov
dec
cmp
pusha
cmp
in
call
xchg
push
fidivrl
in
mov
ds
and
daa
js
cmp
jge
hlt
add
insl
cmc
and
in
and
mov
lock
shlb
fwait
dec
rcrb
or
aam
cmp
stc
xchg
repz
ret
std
sub
icebp
stos
push
cltd
sbb
lahf
xchg
push
jmp
cmp
fwait
or
sbb
dec
ss
mov
das
sbb
out
fidivrl
or
sbb
jp
fists
sub
pop
sub
add
out
fnstsw
mov
dec
or
jno
jmp
push
int3
inc
pop
jge
sbb
lcall
int
push
out
xchg
cmpl
call
push
sub
push
lock
int3
mov
orl
cli
lods
mov
push
cmp
js
mov
xchg
pop
clc
idivb
adc
sbb
fdivrl
jo
dec
repnz
shlb
mov
test
test
push
adc
dec
in
lahf
pop
inc
sub
jl
lret
fs
xchg
xchg
mov
in
lods
jg
rorl
xchg
rorb
dec
scas
sub
ss
test
dec
push
inc
pop
cli
rcll
pusha
dec
lods
test
ja
lods
fdivl
mov
pop
mov
sbb
jecxz
sarb
stc
imul
and
roll
jnp
gs
pop
inc
enter
mov
inc
bound
ja
je
add
clc
out
add
xor
mov
sti
sub
mov
or
repz
cmp
lret
dec
sub
push
dec
mov
push
or
ds
and
mov
sub
fwait
hlt
add
rorl
dec
fiaddl
in
out
pop
out
jo
aaa
adc
pop
ret
scas
and
mov
mov
lcall
mov
adc
xor
jmp
lods
pop
jp
xor
pop
into
inc
add
fstpt
std
jns
inc
jno
addr16
aad
mov
dec
xor
js
fidivrs
ljmp
sbb
push
push
es
in
fwait
lock
jmp
sub
jb
dec
mov
nop
and
es
aas
iret
roll
inc
xchg
aaa
sbb
cmp
add
sbb
fdivrl
addr16
xchg
cltd
dec
sbb
cmp
out
push
cmp
adc
adc
push
xchg
sbb
roll
rcll
loope
rol
sub
clc
adc
cmpsl
test
cmp
add
mov
lods
sub
mov
int3
xchg
out
stos
jecxz
cs
test
jle
imul
imul
test
into
inc
ss
dec
mov
mov
pusha
fiadds
mov
mov
sub
jle
xchg
xor
rep
lcall
jmp
add
add
repz
sbb
nop
mov
test
dec
pushf
cmpsl
loope
fsubl
loop
pop
pop
data16
pop
scas
nop
jnp
into
int3
lret
sbb
push
pop
lahf
pop
and
stos
cmp
popf
xchg
lods
mov
bound
inc
dec
scas
cmp
jge
mov
adc
add
or
push
daa
fwait
cmp
jns
xor
mov
insb
add
movsb
and
inc
scas
or
ret
mov
adc
pop
cltd
rorl
adc
xor
ljmp
pop
xchg
pop
or
jmp
dec
out
aaa
lock
pop
scas
dec
lods
xchg
jbe
ret
push
in
jmp
cmp
int3
or
cmp
fs
jle
cmp
sbbb
pop
sbb
xor
sbb
ds
push
cltd
mov
lret
call
popa
sbb
sbb
sub
hlt
push
scas
push
add
push
int
leave
dec
sub
mov
imul
mov
lret
push
cs
pop
dec
xchg
cmp
pop
lret
aam
fnstenv
jb
adc
out
rclb
sub
mov
push
imul
mov
jp
dec
inc
adc
mov
mov
sub
cmpsl
lock
add
test
adc
test
cwtl
or
mov
test
jnp
call
stos
adc
test
xor
mov
ret
adc
stc
outsb
mov
mov
add
sub
nop
lods
addl
js
loope
fwait
stos
jno
mov
pop
jle
bound
out
imul
sub
push
imul
add
mov
les
sahf
jge
leave
mov
fists
subb
dec
in
cwtl
ret
cmp
out
enter
push
mov
shrb
push
sbb
mov
sbb
popa
sub
gs
popf
pop
pop
jmp
addl
stos
sub
clc
ret
xchg
and
pop
daa
push
addr16
mov
insl
fnsetpm(287
push
jle
out
xchg
hlt
cltd
call
cmp
pushl
jns
jmp
mov
inc
sbb
in
flds
mov
xor
stc
scas
xor
jb
xchg
shrb
das
icebp
lcall
dec
jecxz
lahf
xchg
pop
movsl
pop
in
push
pushf
xchg
test
jno
je
lods
adc
add
iret
jb
and
data16
repnz
and
popf
ljmp
test
mov
xchg
insb
pop
pushf
loope
mov
inc
incb
shr
icebp
pop
mov
sbb
movsl
jge
xchg
mov
push
sub
das
xchg
jbe
lret
xchg
mov
loopne
xlat
push
jno
test
cmp
bound
movb
addr16
jns
movsl
call
xchg
outsl
shlb
cmp
cld
lret
sub
sbb
cmp
fs
dec
inc
in
or
fists
add
aad
dec
rcrb
xor
enter
inc
mov
lcall
idivb
mov
mov
addr16
sbb
gs
int
lret
loope
call
in
gs
data16
out
pusha
popa
mov
add
xchg
clc
xchg
push
jb
mov
add
rclb
xchg
push
pop
push
push
push
call
lcall
mov
rol
add
xor
sahf
insb
das
cmp
js
inc
xchg
es
mov
xor
outsl
dec
mov
jnp
shrb
mov
ret
pop
fs
xor
pop
stos
fstps
ds
gs
jno,pn
cltd
loop
adc
inc
dec
and
mov
mov
movsl
ljmp
dec
jne
jno
or
xchg
rol
or
cwtl
rclb
dec
mov
pop
sar
adc
pop
shlb
iret
stc
cmpsb
insl
jb
dec
int
sbb
and
adc
stos
in
mov
xor
and
lahf
jbe
jno
popa
mov
stos
int
clc
dec
test
pop
bound
imul
push
aas
loop
pop
das
push
popf
mov
call
pop
sub
push
pop
adc
cmpsl
orl
cmp
sbb
movsl
insb
xchg
lods
scas
adc
enter
mov
jle
xchg
lock
mov
push
dec
js
int3
hlt
jl
cmpl
mov
mov
imul
xor
pop
add
jb
sub
lds
rorl
test
lods
add
pop
in
scas
add
adc
mov
push
mov
cmpsb
sub
add
xchg
dec
mov
jnp
xchg
popa
cwtl
dec
jmp
out
sub
mov
in
int3
cmp
imul
pop
stos
in
xor
mov
mov
roll
int3
cmp
test
lods
ss
or
mov
ja
rcrl
pop
jge
loop
sub
dec
lods
cltd
and
in
les
push
fistpl
dec
push
mov
xchg
or
pushf
cmp
bound
pop
std
fisttpll
jp
push
jle
adc
add
or
lock
adc
pop
shll
mov
or
push
adc
fdivl
popa
imul
inc
loop
out
fstpl
loope
subl
ss
inc
xor
in
ret
and
push
push
push
ret
shl
mov
dec
sbb
xchg
dec
adc
inc
sbb
xor
xchg
inc
jno
add
mov
mov
inc
cmp
ss
movsb
ss
xchg
out
mov
stc
adc
scas
fisubrs
adc
push
fs
pop
lods
dec
inc
popf
xchg
mov
cmp
in
pop
mov
popf
fdivrl
inc
int3
xor
fnstenv
jmp
and
aam
scas
les
cwtl
sub
cld
jnp
das
mov
jmp
add
mov
mov
dec
cltd
cmp
add
fimull
cld
xchg
cmpsl
jb
dec
test
add
lcall
mov
adc
xor
pop
add
outsb
dec
mov
inc
mov
jae
jl
pop
mov
jg
adc
xchg
mov
dec
and
test
cmp
adc
adc
mov
add
add
cmp
lcall
mov
pop
pusha
add
pop
and
or
pop
aad
imul
leave
loope
aad
das
sbb
jecxz
adc
or
add
jle
adc
jmp
in
mov
cld
pushf
push
mov
adc
nop
test
mov
pop
lret
popf
jne
jp
outsl
jmp
jl
xchg
call
sbb
pop
mov
jne
aaa
aaa
add
pop
arpl
movsb
lea
pop
xchg
pop
mov
andb
inc
jecxz
stos
add
test
jne
dec
mov
repz
test
pushf
xchg
sbbb
or
mov
les
jmp
jl
cmp
out
pop
fcmovb
mov
outsb
jo
ds
or
cmp
xor
sub
mov
fstpt
mov
inc
clc
out
or
add
cmc
sub
or
data16
xchg
mov
out
scas
or
das
mov
sub
jb
orl
je
int
lret
dec
in
sbbb
mov
mov
pop
add
mov
adc
int3
add
lahf
mov
or
daa
stc
inc
pop
fxch
arpl
into
nop
lds
pop
pop
imull
inc
lahf
pop
cltd
in
lock
sub
mov
stos
mov
aaa
xchg
outsb
add
pop
jae
sub
iret
and
imull
fimuls
xchg
add
push
mov
xchg
test
test
ficomps
dec
jb
mov
lds
adc
mov
mov
popf
sahf
sbb
push
push
dec
popf
aad
cmp
xor
jbe
clc
cmpsl
pop
ja
es
out
ret
inc
sbb
jb
nop
into
jp
xchg
push
stos
fisubl
or
and
daa
test
loopne
or
in
repz
jle
hlt
rcll
mov
sub
sub
lret
push
in
sub
lahf
xchg
adc
call
mov
mov
icebp
insl
in
jl
mov
aas
inc
or
inc
movsb
lock
mov
pop
imul
mov
inc
fcomp
mov
ss
into
data16
adc
dec
pop
inc
sbb
dec
loopne
cmp
adc
push
loope
aas
adc
and
shlb
add
aaa
dec
pop
mov
cmpsl
dec
or
jbe
bound
inc
sub
pop
lcall
mov
jne
negb
lcall
lcall
out
mov
sbb
and
or
jg
call
cmp
xor
aad
push
mov
les
lods
lds
and
in
mov
jmp
insb
jecxz
mov
es
mov
mov
data16
push
mov
or
repz
cld
mov
test
add
inc
jno
sbb
les
mov
in
jl
std
and
jmp
bswap
dec
lds
data16
out
cs
clc
mov
fisubl
dec
adc
pop
sti
or
cli
jmp
jo
xor
mov
pop
mov
roll
add
nop
push
pop
jmp
cmpsl
dec
rcrl
sbb
subb
cwtl
addl
call
das
popf
cltd
divl
adcb
add
pop
jp
mov
adc
inc
aas
jne
jp
shlb
xchg
adcl
sbb
jle
mov
push
fsts
dec
sbb
xor
sub
loopne
mov
xlat
int
push
dec
cs
aas
jl
negl
xchg
pop
and
xor
outsb
lods
sbb
cld
push
lret
add
xchg
lea
arpl
pop
icebp
push
mov
add
fs
mov
sbb
mov
mov
jge
cltd
pop
iret
fisttpll
inc
jne
movsl
dec
inc
ljmp
xor
and
adc
push
in
ja
in
gs
fcomip
in
sub
or
cmc
dec
cmpsl
cmp
inc
icebp
nop
ljmp
push
and
insb
fistpll
add
fadd
lock
mov
and
lret
fnstcw
xor
insb
cmp
jnp
and
mov
out
outsb
mov
jns
out
rorb
mov
aam
lods
sbb
mov
sub
imul
cmp
movsl
imul
or
xchg
pop
out
mov
aam
in
fimuls
setl
pop
push
xor
repz
add
je
std
pop
inc
into
mov
loope
add
mov
mov
xchg
pop
sub
sub
call
pop
xchg
push
push
or
sti
inc
cmp
cmp
into
push
imul
mov
dec
outsl
insl
sbb
test
leave
push
stos
lock
es
and
mov
cmpsb
in
mov
cmp
outsl
test
cs
jmp
cmp
cmp
jne
sti
cmp
insl
mov
sub
adc
dec
mov
data16
and
arpl
mov
cmp
sbbb
or
pop
dec
fbld
inc
ficompl
push
in
lods
push
popa
cmp
fcomps
shr
inc
sub
sbb
inc
sbb
out
or
mov
push
and
mov
sbb
fwait
sbb
mov
cmp
dec
and
imul
adc
xchg
cmp
cltd
and
mov
popa
scas
jo
add
cmovs
and
pop
inc
adc
sub
mov
iret
sbb
push
dec
mov
xor
mov
mov
jno
pop
jo
mov
xor
jg
jecxz
mov
test
fildl
loopne
repnz
jg
ficompl
orl
sbb
popa
popa
or
iret
fcmovbe
adc
push
hlt
iret
ds
push
fidivs
sbb
insl
cmc
je
scas
mov
ret
dec
jge
stc
adc
jecxz
and
sbb
test
pop
arpl
cld
xor
mov
xor
inc
int
inc
dec
dec
mov
test
jns
in
jecxz
jns
hlt
xchg
or
fnsave
popa
fwait
pop
cmp
mov
sbb
sub
es
mov
pusha
sub
jg
sub
subl
mov
dec
outsl
cwtl
incb
ret
cmpsb
mul
jno
into
ret
push
xorl
mov
out
repz
jae
add
cmp
stos
test
mov
pushf
lock
push
adc
sbb
rdmsr
inc
daa
pop
lea
mov
adcb
ljmp
pop
js
daa
xor
dec
ss
test
testl
rcrl
mov
out
imul
mov
shlb
into
andb
lret
imul
mov
mov
enter
insb
repz
mov
jns
cmc
movsl
daa
mov
sar
js
pushl
je
daa
push
push
xchg
cmc
cmp
fsubs
movsl
adc
adc
and
or
cli
ror
lret
lock
xor
ds
mov
insl
int
jmp
adc
push
push
jae
pop
fisttps
ror
hlt
xchg
adc
loop
fwait
sbb
aas
dec
sub
jb
mov
pusha
pop
adc
in
enter
cmp
pop
fiaddl
pop
push
xchg
fistpl
push
pop
mov
int
xor
ror
stos
aam
push
mov
ja
xchg
daa
mov
dec
inc
popf
push
imulb
std
xchg
sub
bound
jno
loope
aad
adc
sub
popa
push
lods
leave
insb
adc
ret
dec
pop
xchg
mov
xchg
clc
in
cmp
inc
ds
cwtl
push
mov
xor
pop
dec
ds
mov
mov
sub
notb
insl
shr
gs
pop
dec
jnp
inc
test
pop
mov
jp
cmp
add
call
gs
pop
jno
jmp
cwtl
mov
jne
iret
sub
push
pop
pusha
ss
insl
sti
pop
lds
rol
data16
pop
icebp
adc
or
pop
test
mov
mov
notl
push
fs
push
sbb
xchg
scas
daa
lcall
mov
mov
or
and
and
jg
push
mov
aas
mov
or
test
daa
imul
sbb
aam
add
dec
sub
mov
sbb
call
das
cmc
jge
mov
out
or
jne
les
sub
push
and
mov
stos
cmp
xchg
mov
jmp
ja,pn
aaa
loope
push
mov
shlb
jge
iret
sub
pop
jmp
or
xor
xlat
xor
retw
test
jg
adc
out
std
sub
or
call
xor
arpl
mov
dec
cld
inc
mov
aas
pusha
inc
lock
jp
add
out
xchg
pop
insl
or
test
adc
pop
fisubl
mov
sbb
mov
adc
sub
scas
add
out
clc
cmp
xchg
shlb
mov
lret
dec
jmp
mov
cs
imul
popa
iret
cmp
fs
ja
mov
xchg
jmp
jns
or
jecxz
jbe
jbe
xchg
sbb
out
inc
or
and
xchg
roll
push
test
sub
mov
adc
fldl
dec
inc
dec
test
test
cmp
test
xor
aaa
dec
pop
mov
adcb
rorb
jbe
jle
add
stc
shlb
repz
outsb
or
push
push
bound
sub
in
rcrb
cwtl
or
pop
loopne
in
add
outsl
bound
popa
shlb
sbb
adc
push
leave
loope
imull
mov
mov
enter
outsb
xchg
or
xor
xchg
aam
shll
pop
roll
inc
into
repnz
aad
mov
popf
jmp
add
mov
pop
out
enter
push
adc
les
shl
cmp
adc
loope
hlt
mov
sbbb
ds
xor
adcb
cmp
sub
jecxz
and
in
test
je
dec
jo
add
imul
xor
xchg
mov
cmp
fisubs
or
bound
loop
loop
pop
lcall
insb
xor
sub
out
cmpsb
insb
rolb
loopne
clc
dec
xchg
or
push
cmp
jnp
cmp
push
xor
pop
xchg
ja
sbb
test
neg
inc
into
repz
cld
sub
sbb
cmp
out
or
xor
push
inc
add
jmp
cmpsl
or
pop
testb
or
sub
jecxz
test
iret
sub
movsl
and
mov
xorb
fwait
das
leave
xchg
and
push
clc
cmp
pop
jb
in
pop
aaa
out
sbb
cld
mov
and
dec
push
shlb
rcl
pusha
jbe
fs
mov
fisubrl
fstpt
mov
or
or
mov
mov
sbb
lcall
movsb
sub
xchg
popa
stc
fdivs
rorl
insb
lea
fisttpll
sahf
mov
incl
inc
ja
push
loope
and
popa
pop
daa
mov
jmp
add
loope
dec
xor
inc
push
pop
mov
mov
nop
inc
cmp
ror
stos
ja
jg
inc
movsl
cmp
aaa
pop
lahf
xchg
adc
ret
hlt
stos
jbe
mov
addr16
int
dec
xor
push
cltd
mov
push
fisttpl
or
push
cmpsb
push
pop
sbb
jecxz
jnp
xchg
rolb
cmpsl
shlb
fldt
push
fcomip
xor
inc
fimuls
lods
jg
xor
imul
cmp
int
loopne
aam
lret
sub
or
jne
mov
push
add
cmpsb
sub
dec
add
sbb
hlt
mov
or
jmp
into
cld
daa
sbb
add
mov
mov
pop
pop
popf
adc
jne
pop
push
stos
jle
mov
add
cmp
sbb
inc
or
xor
and
jno
stos
in
xor
mov
loopne
dec
das
repnz
outsl
rclb
mov
pop
jno
pop
out
dec
pop
sbb
out
ret
cmp
stos
cmp
sbb
pop
lods
mov
jne
mov
outsl
lret
rolb
mov
stc
inc
rcl
mov
xor
imul
outsl
mov
fsubrl
mov
int3
addr16
mov
scas
cmp
aam
lods
mov
in
stos
xchg
inc
adcb
xchg
cmp
mov
jmp
cvtps2pi
hlt
push
mov
orl
insb
mov
add
sbb
sarb
push
jo
jo
mov
lcall
mov
adc
mov
push
cmpsb
pusha
jl
push
push
scas
mov
ret
mov
lret
pop
fdivp
jae
ja
testl
test
mov
out
push
inc
mov
dec
bswap
nop
call
push
mov
jecxz
test
add
and
pop
cltd
fldcw
aaa
adcl
les
orb
dec
pop
dec
jecxz
pushf
mov
sbb
insl
xchg
pop
pop
xor
jns
sbb
fbstp
hlt
xor
lds
ficoms
ret
jle
mov
cmp
gs
test
ljmp
mov
lret
repnz
ficomps
push
sarb
mov
jns
cmp
xor
clc
in
leave
scas
or
pop
xor
push
mov
push
push
mov
test
jmp
cmp
sysret
adc
cmp
popf
adc
mov
iret
inc
jle
lods
jge
dec
data16
lods
sbbb
jecxz
addr16
mov
out
mov
mov
xchg
nop
jnp
psrld
or
ljmp
push
mov
mov
lds
or
or
rcll
jbe
das
mov
cmp
pop
arpl
dec
push
mov
outsl
loopne
mov
orl
cmp
lret
test
mov
sub
and
cld
shlb
popa
and
jbe
in
js
pop
add
cmp
loope
pop
das
ror
pushf
dec
mov
fldenv
pop
int3
add
fisttpl
movsl
inc
sar
xor
jbe
mov
je
mov
jl
xorl
pop
out
mov
hlt
cmp
jno
das
aaa
sbb
out
les
xor
sbb
outsl
and
xor
and
push
cwtl
dec
mov
sarl
pop
push
daa
hlt
mov
sub
sbb
outsl
leave
dec
mov
xchg
jbe
movsl
std
mov
shll
daa
test
pop
or
shlb
dec
dec
cmp
mov
lods
push
inc
outsb
adc
imul
adc
jb
xchg
xchg
xor
mov
pop
lock
mov
repz
cwtl
cwtl
pop
lods
in
out
or
cmpb
f2xm1
insl
mov
cmp
xor
lods
pop
dec
ret
je
and
jp
call
sbb
imul
sub
arpl
cld
movsl
adc
and
repnz
jmp
xor
int
mov
cmp
jge
pop
mov
sub
cld
sbb
xor
stc
jge
mov
fwait
and
sub
cld
call
mov
sub
daa
push
aas
cmp
nop
adc
mov
and
inc
cltd
pop
data16
clc
lret
out
lahf
cwtl
jp
or
pop
jno
xchg
fildl
push
add
aad
cmpsl
inc
inc
adc
ret
push
xor
out
mov
jbe
test
fcomip
shr
testb
std
mov
adc
and
pop
adc
in
mov
es
jge
ss
mov
or
daa
sub
inc
cmpsb
mov
or
sbb
pop
or
daa
aam
and
jmp
inc
dec
je
sub
ficoms
push
scas
cld
stos
fcoms
std
ret
test
repnz
gs
dec
rclb
mov
lds
mov
or
dec
adc
fsubrs
cmpsl
mov
ret
xor
xor
xor
pop
lahf
rorl
jne
push
inc
jl
pop
dec
xor
dec
jbe
push
stc
inc
or
jg
push
lea
hlt
jg
mov
std
int3
subl
rcrl
es
inc
mov
pop
mulb
out
mov
xor
pop
and
pop
xchg
rcll
out
add
mov
outsl
inc
addr16
jmp
repz
sti
and
outsb
test
push
pushf
mov
xchg
pop
cltd
in
or
mov
pop
out
add
sbb
push
mov
push
pop
jp
fwait
sbb
or
xor
or
sbb
jne
call
lret
inc
pop
fwait
popf
inc
gs
ljmp
std
movsl
imul
push
loope
sahf
lods
int3
out
test
inc
inc
push
mov
xchg
jb
hlt
pop
in
cmpsl
stc
push
pop
add
and
lret
loopne
int
cmp
lahf
pop
sbbb
pop
bound
jae
idivb
ret
rcl
ljmp
cmp
movb
int3
push
cmp
mov
je
xchg
hlt
scas
push
cs
shl
sbb
mov
and
xchg
mov
outsb
cwtl
dec
cltd
les
in
sub
push
aam
mov
push
cmp
mov
iret
and
ret
hlt
push
mov
adc
sbb
xlat
int
cmp
jno
lea
cmp
andb
test
pop
sahf
adc
ret
sahf
out
ficoml
ds
fwait
cwtl
sbb
out
xchg
pop
dec
imul
pop
fldenv
jecxz
and
jmp
cltd
imul
dec
sub
gs
imul
hlt
and
dec
lods
data16
adc
jmp
mov
jge
adc
inc
pcmpgtd
xchg
xor
ja
sub
xchg
test
push
sti
cmp
pop
arpl
rcr
lea
pop
ficoml
scas
sub
jnp
pop
or
fsubr
mov
nop
lcall
pop
leave
in
mov
push
arpl
test
or
lcall
xchg
or
in
push
jge
push
pusha
repz
pop
leave
cld
push
andb
inc
and
es
stos
cltd
cmp
push
adc
loop
hlt
aad
cmc
movsb
and
fs
add
adc
jnp
popf
test
ds
jno
or
add
pop
test
xor
test
jo
inc
mov
fcompp
outsl
les
lret
insb
scas
lret
clc
clc
cmp
adc
popa
adc
jecxz
xor
pop
aad
mov
cmp
mov
fimull
lcall
imul
jp
pop
rcll
fwait
mov
insl
cltd
dec
mov
adc
shlb
hlt
fwait
add
cmpsb
mov
or
and
out
push
inc
je
xor
popa
lods
cmpsl
je
adc
mov
mov
out
xchg
daa
xor
xor
nop
arpl
lret
add
shr
or
mov
cmp
gs
sub
movsl
mov
mov
jg
xchg
push
lcall
inc
inc
movsb
roll
pop
xbegin
hlt
out
int3
inc
ja
fmul
sbb
dec
daa
xchg
pushl
popf
lods
jmp
nop
sbbb
jno
aad
cli
popa
ja
mov
push
popf
mov
jge
lea
mov
xor
shlb
jb
inc
jae
jle
fcoms
testb
outsl
pop
ss
pop
int
mov
push
das
mov
mov
bound
add
sahf
inc
nop
xor
ljmp
sub
sbb
or
in
add
fsubs
or
pop
popa
fwait
out
das
xor
lods
in
outsl
mov
jb
add
test
and
mov
outsb
out
lahf
pushf
mov
push
fs
add
fsubs
pop
mov
gs
daa
mov
lock
sub
les
mov
fisttpl
mov
xchg
test
cbtw
sbb
cmpsl
mov
stc
sbb
add
mov
in
jns
and
lret
xor
pushl
repnz
in
pop
cmp
in
fisttps
pop
in
sub
or
out
jno
mov
jl
mov
or
push
and
lret
and
adc
les
aad
push
xchg
jp
inc
lods
xor
rcll
xchg
add
leave
scas
jns
je
insl
std
dec
add
gs
mov
mov
rcll
imul
xchg
out
jne
mov
movsl
pop
mov
fs
xorb
ds
push
sbb
jnp
cltd
test
cmpl
mov
jae
push
js
sub
fdivrl
stos
sbb
xchg
fcomp
bound
sbb
lahf
idivl
and
push
and
or
mov
fcoml
int
iret
push
xchg
sarb
mov
push
pop
lods
data16
out
inc
idivl
jo
sub
adc
push
fstpl
aaa
lret
test
push
push
push
sbbl
out
or
add
push
xor
and
push
xor
mov
cmp
adc
xchg
or
call
inc
mov
das
repnz
rorl
or
mov
mov
and
aaa
repz
inc
xchg
or
xor
out
pop
or
cld
push
sbb
jno
in
and
xchg
push
jle
vmwrite
sbb
add
out
mov
jp
mov
enter
mov
ja
pop
mov
push
iret
aas
sub
xor
imul
add
mull
cmp
je
sub
push
pop
data16
adc
or
mov
ja
hlt
inc
imul
je
add
xchg
shrb
mov
aas
fadds
cmpsb
push
fwait
xchg
mov
sub
jg
xchg
jmp
sbb
xchg
dec
jp
cwtl
adc
je
sub
fidivl
adc
leave
cmpsb
push
xorb
sbbb
aaa
imul
insl
hlt
inc
fnstsw
xchg
cmpb
std
add
sub
sbb
push
shl
cmp
xor
loop
dec
or
cmp
sbb
int3
sbb
das
es
into
mov
loop
sub
and
jl
mov
add
dec
push
mov
add
enter
mov
cmp
rcll
pop
icebp
sbb
pop
xchg
je
decb
repz
mov
scas
paddq
xchg
mov
stos
sbb
in
sub
out
mov
scas
jmp
in
jnp
push
popa
mov
clc
pop
mulps
push
push
and
cmp
jle
les
mov
jbe
xchg
in
in
cmp
je
inc
in
jnp
lahf
nop
adc
add
es
in
mov
xchg
jmp
add
flds
xchg
stos
sarl
cmp
icebp
mov
xchg
aas
add
jmp
mov
dec
ret
add
sbb
into
lock
repz
and
add
sub
shl
add
push
and
jg
or
xor
push
sbb
or
adc
xchg
adc
ficomps
xor
je
sub
xchg
push
and
xchg
mov
jno
pop
test
lods
lods
pop
or
icebp
sti
dec
mov
dec
push
shll
mov
aaa
xchg
mov
test
test
xchg
xor
mov
aam
pop
push
rcll
data16
lret
push
mov
sahf
fidivs
mov
pop
test
aas
ja
fdivrl
and
and
loop
repnz
loope
mov
cmp
mov
push
ds
repz
sub
push
cwtl
ftst
mov
and
js
lret
inc
xor
push
addl
xor
into
inc
dec
mov
xchg
in
std
ss
lea
fiaddl
xor
iret
in
loopne
dec
ljmp
imul
or
or
sub
std
push
in
sbb
mov
imul
push
push
add
mov
mov
jg
jle
movsl
dec
or
lock
shl
int
lock
add
jb
push
fistps
add
jnp
ret
bound
xchg
pop
hlt
pop
out
mov
fdiv
loop
ja
add
inc
or
dec
movsb
jo
in
mov
es
xchg
pop
stos
lock
inc
arpl
sarb
pop
mov
cmp
pop
lds
mov
mov
mov
mov
jae
ret
inc
test
imul
outsb
jecxz,pt
push
and
cmp
aad
pop
lods
mov
pop
xchg
stos
mov
arpl
insb
push
add
push
jge
andl
cltd
sbb
orl
jge
and
pand
mov
pop
or
push
lods
cmc
mov
ret
int
fwait
dec
inc
push
push
imul
insl
jbe
dec
mov
xchg
mov
outsb
jb
and
mov
push
jg
out
lds
into
das
and
jae
fcmovnb
jne
mov
add
loopne
fsubrp
xchg
out
nop
or
cmp
adc
sti
sbb
rcll
pop
out
dec
mov
cmp
ds
cmc
inc
outsl
push
xchg
or
mov
sub
add
ljmp
add
sbb
mov
sbb
push
mov
outsb
movsb
xlat
int3
or
xor
xchg
jge
push
fisttpll
sbb
jg
mov
dec
imul
mov
adc
out
sub
mov
push
xchg
adc
insl
addb
jp
sbbl
push
fs
cltd
dec
sbb
les
add
pop
cmp
aad
adc
or
dec
test
mov
sub
cli
repz
sahf
mov
or
jo
hlt
pushl
xlat
xchg
aad
pop
shlb
loopne
sbb
sti
pop
mov
inc
xchg
lea
mov
xor
aas
lcall
pop
jg
clc
mov
adc
mov
fdivl
xor
pop
inc
dec
sbb
sub
push
xchg
cmp
xchg
inc
sarb
dec
or
sti
addr16
sbb
jne
mov
scas
cmp
movsb
xor
sub
jb
dec
popa
xor
dec
mov
scas
ja
inc
push
inc
xchg
sub
cmp
sbb
jae
mov
inc
je
test
adcl
cs
pop
sbb
fnstsw
mov
jb
mov
cmp
ret
test
sarb
push
adc
xor
lods
push
ljmp
push
and
loope
fcompl
xlat
xor
sub
jnp
popf
adc
mov
in
adc
xor
das
push
aas
gs
sbb
mov
leave
lods
cmp
mov
dec
loopne
mov
out
inc
pop
fldenv
push
outsl
xor
incb
fdiv
loop
or
data16
mov
test
and
mov
or
loopne
cmp
daa
out
fdivr
mov
mov
ja
mov
or
sbb
mov
mov
mov
movsl
jns
js
xchg
and
adc
ljmp
rorl
repnz
sub
inc
jmp
js
fsts
fbld
aaa
jne
sbb
mov
aam
dec
mov
dec
lcall
jmp
xor
adc
xchg
jo
and
and
xor
and
jne
cmp
data16
aaa
test
in
imul
iret
test
mov
rol
in
jge
sub
in
ja
pop
fs
mov
dec
or
mov
test
and
lds
mov
jg
pop
ljmp
in
jp
pop
adc
loope
xor
mov
int3
jno
sub
in
xor
sarl
xchg
in
sbb
push
sub
gs
and
and
push
call
leave
bnd
js
in
cmp
mov
and
dec
cpuid
jge
add
xlat
popf
stos
cmpsl
cwtl
cmp
test
cld
in
hlt
repz
pop
xchg
int3
mov
std
call
pop
adc
jecxz
mov
outsb
imull
jno
popa
divl
pop
pop
movsl
pop
jo
xchg
or
xlat
shlb
enter
aam
or
mov
xor
int
or
int
mov
fadds
inc
mov
ret
mov
mov
jle,pn
or
addl
jmp
jb
pop
push
lods
cmpsb
adc
adc
mov
jb
arpl
je
jp
inc
push
add
in
ja
pop
lret
fbld
ficoml
mov
push
negl
je
push
mulb
scas
roll
mov
ljmp
jo
in
les
inc
je
decl
xchg
sbb
aaa
fstpl
jecxz
js
insb
mov
hlt
leave
sarl
add
jmp
movsb
fdivl
test
xchg
sahf
call
jae
add
add
test
fsub
push
lret
push
lret
dec
sti
imul
xor
push
or
call
xor
jl
and
test
add
mov
add
add
imul
mov
bound
jmp
lods
adc
pop
jmp
add
mov
loop
mov
xlat
or
push
cmc
cmc
mov
int
fsubs
pop
sbb
push
mov
aas
cmp
inc
mov
sub
mov
shl
lock
outsb
ljmp
out
and
ficompl
push
cwtl
lods
or
inc
popa
scas
mov
jge
lea
add
inc
and
iret
push
js
cmp
test
jg
sub
cmpsl
cmp
loopne
cmp
into
cmp
push
out
aas
loope
cmp
inc
fidivs
std
insl
jge
or
andl
sbb
fwait
adc
sbb
dec
cmp
je
into
sbb
ds
or
pop
cmp
jo
or
insb
inc
fidivrl
inc
mov
xchg
enter
dec
cld
and
arpl
jmp
repz
cltd
ds
cmp
mov
jecxz
arpl
shr
xchg
inc
push
loopne
insb
in
mov
test
mov
pop
std
adc
stos
or
jecxz
in
inc
nop
push
or
into
adc
cmc
adc
mov
cmp
ss
mov
push
sbb
jmp
lret
out
call
push
and
push
icebp
loopne
add
data16
adc
test
mov
or
or
idivb
pop
push
shrl
xchg
mov
xor
sbb
out
adc
mov
jae
enter
jbe
insb
aas
and
sbb
cmpsl
push
push
fimull
mov
sbb
sub
mov
pop
sbb
lods
mov
and
and
xchg
cmp
idivl
subl
xchg
jne
jecxz
xorb
in
and
jmp
xchg
adc
insl
jno
pusha
leave
repz
les
aad
into
aas
ljmp
cmc
and
xlat
in
lcall
setle
repz
pop
cmpsb
push
sub
out
push
mov
bound
or
dec
xchg
cmp
cmc
out
xchg
cmc
fcoml
fwait
je
cmp
std
fs
idiv
jbe
push
inc
outsb
fiadds
movsl
loop
shll
int
out
push
sub
es
orb
pop
out
and
pop
rorl
test
sbb
and
cmpl
clc
pop
or
push
cmp
xchg
adc
inc
xlat
stos
dec
or
cld
outsb
arpl
lock
movb
mov
mov
loope
add
cs
cmp
loop
shlb
or
cmp
mov
iret
push
and
jns
fbld
push
fcmovnu
mov
push
pop
aam
jmp
xor
faddl
stc
cmpsl
mov
push
cli
outsl
pop
push
loope
inc
cmpb
or
lods
loop
shlb
bound
lods
inc
insl
es
dec
imul
jg
into
pop
addb
clc
add
sbb
mov
cmpl
xchg
fsubrs
mov
xchg
aas
add
dec
mov
push
jno
adc
mov
inc
call
shrl
lods
and
xchg
leave
int3
lods
fs
stos
outsl
mov
push
addr16
pop
insb
lret
mov
pop
pop
lods
in
adc
jecxz
xor
ljmp
cmpsb
in
adc
sub
ret
in
stos
lock
clc
rorb
mov
cmp
cmp
or
cltd
rclb
in
sahf
cld
mov
fisubs
repz
bound
lods
jle
adc
es
xor
repz
movsb
lahf
sub
mov
dec
sbbl
and
inc
inc
jnp
mov
int
imul
iret
and
bound
add
insl
xor
stos
xchg
shll
mov
mov
jnp
pop
mov
cmp
cmc
cmp
test
fistpl
pop
or
xor
out
imul
or
leave
jbe
push
dec
fiaddl
pop
mov
aad
addl
xchg
inc
mov
mov
lret
mov
cmc
icebp
nop
and
sti
mov
pop
divl
add
pop
aam
xchg
mov
out
xlat
sar
and
jne
incb
out
lods
xchg
lret
insb
xor
mov
incb
and
repnz
shlb
mov
imul
inc
jnp
xchg
dec
int
ret
adc
adcl
je
jecxz
call
jns
push
ds
repnz
sbb
cli
adc
jnp
std
pop
sub
test
test
inc
mov
int3
sahf
sbb
out
xor
sbb
pop
push
pusha
mov
pop
sbb
mov
cli
stos
xchg
sub
pushf
shll
ffreep
fnsave
rcll
decl
mov
xchg
dec
push
add
in
mov
sbb
shrl
sbb
shlb
push
mov
push
mov
mov
mov
push
inc
pop
outsb
pusha
adc
iret
imul
push
clc
adc
add
pop
cmp
sub
je
mov
loop
fs
dec
push
add
xor
adc
push
lods
cmp
popf
or
imul
adc
fdivr
and
mov
repnz
bound
mov
popa
and
es
rcrl
popa
or
pop
ret
daa
daa
int
in
insl
roll
movsb
xchg
test
adc
dec
ret
inc
mov
push
leave
bound
xchg
cld
int
adc
xor
insb
cs
pop
call
into
sbb
ret
jecxz
int
or
pop
xchg
daa
cwtl
pslld
loop
and
pop
scas
xlat
sub
mov
pop
xchg
mov
les
jb
or
cmp
and
xor
movsl
jmp
xchg
sbb
call
repnz
cmp
cltd
pop
push
sbb
inc
fcompl
lret
and
sbb
xchg
inc
rorl
sahf
dec
mov
int
movsl
xor
add
mov
xchg
lods
dec
or
int
out
mov
push
mov
mov
cmp
jmp
pop
rclb
sarl
orb
sbb
push
icebp
das
test
push
xor
jp
divb
shlb
or
adc
sahf
test
push
outsl
outsl
loop
filds
gs
mov
je
shr
lock
lret
mov
add
out
cld
je
aad
cmp
jge
ljmp
movsb
xchg
das
push
ljmp
cmpsb
mov
or
and
mov
xor
cmp
cmpsb
mov
stos
and
sub
cmp
jg
add
inc
clc
sub
pop
and
faddl
mov
fdivs
add
sub
inc
xchg
xchg
push
lods
or
int
jne
xlat
mov
cmpsl
mov
je
pop
add
or
push
xor
xchg
rol
sbb
jge
fisttpll
lret
call
and
mov
ret
jno
mov
gs
out
sub
mov
mov
cld
sub
mov
mov
lea
out
es
loopne
sub
push
mov
stc
lcall
out
push
and
push
arpl
faddl
sbb
insl
xor
outsl
xor
and
mov
or
dec
jbe
mov
clc
insb
lret
iret
es
inc
int3
sahf
or
les
rorb
xchg
std
and
test
loope
sub
mov
push
in
ret
shll
iret
orb
sbb
inc
cli
addl
xor
or
xor
cmp
jl
dec
and
mov
jb
repnz
mov
push
rcl
pop
imul
je
pop
lock
scas
or
jnp
xor
cwtl
dec
dec
xor
sbb
cld
loope
dec
ljmp
lea
int3
pop
or
adc
jmp
cmp
scas
mov
mov
push
xchg
mov
xchg
dec
bound
mov
pop
test
lret
xor
sub
jmp
dec
sbb
adc
mov
imul
and
or
xor
cmp
xor
pushf
cmpsb
mov
mov
and
cli
jbe
and
jne
jo
dec
sbb
repz
je
int3
aaa
mov
mov
cmp
dec
xchg
jbe
sti
hlt
rolb
movsb
push
scas
sti
mov
xor
call
mov
negb
mov
in
mov
or
in
mov
loopne
aas
lcall
xor
out
dec
outsb
mov
das
ss
fisubs
in
lods
inc
outsl
adc
ljmp
sti
imull
shlb
jl
xor
pop
sbb
es
push
cmp
pop
xor
les
mov
adc
insb
out
xchg
inc
in
imulb
mov
fidivrs
inc
std
fisttpl
fdivl
or
dec
mov
lea
sbb
push
xchg
bound
push
jg
sub
aad
insl
pop
outsl
jmp
jb
add
popf
mov
dec
mov
xchg
cmpsl
push
mov
mov
mov
add
outsl
push
stos
into
idivl
jae
lods
push
push
iret
lods
sbb
pop
hlt
addl
cmc
and
jp
inc
jle
jp
lock
call
shll
mov
movsb
push
mov
jp
fdivrs
lods
shlb
and
and
add
cmp
sbb
jle
test
fdivrs
scas
xchg
movsl
mov
int
jo
mov
hlt
mov
lret
xor
jp
or
push
cmp
addr16
jmp
pop
test
jae
cli
adc
sbb
or
xchg
in
out
push
hlt
push
cli
mov
or
jbe
fstl
lock
push
mov
xor
sbb
jnp
mov
sub
adc
adc
jle
out
dec
int
cmp
fmull
outsb
lret
dec
rcr
mov
aam
aam
adc
das
fnstsw
jmp
ds
or
je
mov
or
gs
jb
nop
mov
adc
add
fwait
pop
xor
into
pop
mov
jg
out
jb
adc
cmp
jne
dec
pop
jne
and
lahf
lock
cwtl
pop
icebp
xchg
mov
mov
cmp
jo
hlt
xor
in
adc
icebp
arpl
test
sub
pushf
pop
mov
lahf
xabort
mov
movsb
popf
mov
jns
pop
repz
cmpl
push
nop
inc
daa
rclb
push
add
dec
mov
out
sbb
cmp
frstor
lea
adc
or
xchg
in
loopne
mov
imul
dec
mov
mov
hlt
enter
xchg
sysenter
fcmovbe
rol
bound
sbb
loop
sub
ret
cmp
leave
sub
sbb
pop
mov
iret
dec
pop
inc
div
repz
aaa
shr
insl
adc
dec
jb
ss
adc
xchg
jl
dec
out
xor
imul
lahf
mov
rcll
movsl
mov
pusha
loopne
test
push
lock
push
push
popa
add
paddb
cmc
jne
jge
popf
mov
outsb
xchg
loopne
mov
and
les
enter
andb
popf
ljmp
gs
rcrb
ret
mov
stos
push
xlat
insb
jge
out
pop
add
mov
mov
repnz
dec
stos
jle
in
add
mov
mov
push
xchg
popa
fs
out
mov
divl
adc
dec
cmp
fs
mov
mov
sbb
cld
std
daa
mov
icebp
mov
sub
testb
mov
enter
js
xchg
inc
sbbb
xchg
push
hlt
loop
xor
loopne
push
sub
frstor
mov
dec
out
sti
cltd
sub
jb
dec
pop
xchg
mov
dec
and
add
rclb
sub
jb
add
mov
mov
pop
and
stos
mov
inc
add
ret
rorb
xlat
mov
in
jle
ja
xchg
pop
pop
dec
xlat
decl
mulb
jae
cltd
push
jbe
cmpsb
or
fs
negb
or
cwtl
imul
fstps
je
jno
mov
mov
mov
mov
repz
jg
and
jecxz
and
and
push
inc
gs
outsb
cmp
aad
jo
cmp
cmpb
add
adc
dec
mov
jnp
and
sti
push
jg
cli
hlt
jnp
shll
sarl
out
mov
pop
ret
stc
lds
dec
cmpsl
xor
gs
cmp
dec
into
xchg
mov
outsb
insb
stos
fsubl
in
pop
fwait
or
enter
add
repz
sbb
dec
out
fnstcw
dec
rclb
and
stc
fists
xchg
aas
dec
pop
int3
andl
pop
ficomps
inc
xor
aaa
in
jmp
fs
daa
mov
pslld
inc
mov
pop
sti
pop
imul
inc
repnz
cld
pop
pop
xor
cwtl
jo
shr
lods
nop
inc
or
jo
iret
sarl
add
test
push
add
mov
stos
cwtl
jo
ljmp
lods
outsl
aam
sub
fisttpll
sub
outsl
add
je
jno
jnp
xchg
lcall
cmpxchg
fwait
pushf
add
jle
movsb
fidivs
dec
pop
jae
stos
stc
add
jns
xor
loope
loop
or
mov
or
cli
into
pusha
mov
push
data16
arpl
fwait
cmp
cwtl
repnz
xchg
adc
int
push
les
push
and
jle,pn
es
push
mov
cli
cmp
ret
cmpsb
mov
fnstenv
adc
xchg
int
loop
xor
xchg
mov
sub
sahf
and
fs
adc
gs
idivb
mov
xchg
mov
pop
pop
test
cmp
mov
cmp
mov
bnd
push
cmp
ljmp
jecxz
outsb
jne
out
xor
insl
cltd
dec
addl
fadds
in
mov
dec
fisttps
add
cmp
push
inc
adc
ret
mov
adc
dec
xor
mov
ret
jecxz
dec
stc
add
rorb
lds
mov
cld
les
cmp
pop
and
jle,pn
stc
iret
lea
inc
data16
xlat
sub
leave
mov
adc
cmpsl
daa
push
cmpsb
jae
push
xchg
aad
add
jo
outsl
adc
lods
inc
cmpsl
mov
sti
lcall
pusha
mov
mov
pop
mov
rcl
sub
or
test
stc
shll
mov
icebp
fcomps
fwait
sbb
popf
insl
mov
lods
and
cwtl
es
repz
notb
daa
cs
sbb
insb
push
inc
pusha
push
sbb
xchg
inc
mov
fs
insl
sbb
dec
push
and
shll
jae
pusha
push
icebp
sbbb
pop
adc
mov
xor
outsb
sub
lret
insb
in
les
add
cwtl
pop
leave
lds
jecxz
push
inc
daa
pop
stos
mov
xchg
push
adc
orb
inc
pop
xor
ja
dec
dec
imul
pop
cmpsb
push
inc
mov
mov
lock
or
jecxz
cmp
sbb
lret
pop
push
xchg
mov
jmp
imul
mov
push
test
div
or
jmp
push
lock
jbe
add
and
and
add
std
mov
pop
fsubrs
fstps
stos
in
xchg
dec
fistpll
inc
cmpsl
iret
nop
xor
mov
jmp
adc
jnp
in
fstpt
and
pop
fistl
ljmp
jg
fstps
mov
and
pop
enter
jg
mov
sbbl
js
or
ret
xchg
jg,pn
je
inc
out
repnz
cwtl
or
and
idiv
push
inc
in
sti
lock
dec
pop
test
mov
dec
adc
jmp
dec
add
lcall
sahf
mov
in
jle
dec
rorb
inc
lahf
and
shl
adc
sub
sub
hlt
jp
sahf
pop
leave
sub
cli
jno
mov
mov
insb
push
or
adc
sbb
and
inc
xor
sahf
pop
push
push
fldt
sbb
add
mulb
cld
mov
test
shrl
icebp
arpl
add
cmp
xor
rclb
xor
roll
xlat
sbb
addb
add
cmp
out
pushf
es
cmp
jp
ficompl
aaa
and
shlb
ss
test
push
mov
mov
cltd
sbb
push
mov
lods
cmc
stc
cmp
xchg
insb
xor
cmp
lea
fs
sbb
test
mov
adc
lret
into
adc
dec
mov
ret
inc
and
and
int
add
inc
xchg
ja
cs
int
adc
lds
mov
je
jo
nop
jp
repz
clc
leave
aad
dec
in
out
push
xchg
xlat
outsb
cmp
jnp
jl
xchg
leave
cmp
cmc
or
in
jl
jp
push
push
push
mov
pop
in
push
lahf
sbb
cld
mov
mov
ds
mov
pop
stc
push
xor
cmp
cmpb
ja
cmp
sub
inc
jp
fcmovne
or
mov
dec
es
cld
cmpsl
mov
ret
scas
loope
dec
pop
adc
push
data16
aad
leave
mov
cmp
dec
test
jb
dec
pop
sbb
push
or
jnp
xchg
or
jb
in
je
push
inc
and
insb
dec
ds
in
or
pop
push
inc
pop
jl
out
or
out
repz
adcb
enter
int
xchg
sub
mov
sbb
pusha
nop
cmpsl
cld
loope
xlat
xchg
sub
lcall
cmp
cwtl
movsl
add
pop
push
je
into
imul
adc
loop
int3
and
mov
ljmp
aad
xorl
inc
addl
push
cmp
xchg
xor
aam
or
mov
mov
push
sub
jmp
cmp
cld
pusha
icebp
daa
or
jbe
mov
int
mov
shll
in
add
mov
cmp
in
push
push
push
or
mov
jns
out
and
js
push
lea
mov
cmc
push
stos
jg
xorb
leave
lods
and
loop
mov
push
stos
mov
mov
sarl
push
or
loope
faddl
or
aaa
sbb
hlt
dec
out
push
pop
popa
mov
ja
mov
repnz
cld
lcall
and
mov
dec
out
dec
jnp
cmp
int
cli
mov
imul
and
and
sbb
pushf
imul
fildll
scas
sub
mov
dec
adc
cld
xchg
push
cwtl
jo
outsl
pop
stos
daa
std
pusha
out
out
xchg
push
dec
rcrb
lcall
and
mov
and
push
and
xchg
mov
nop
out
iret
aad
rclb
adc
xchg
jge
js
sub
inc
inc
lret
inc
jl
inc
dec
outsb
call
fndisi(8087
inc
dec
mov
sbb
mov
jns
jns
adc
dec
inc
fs
popf
sbb
and
iret
push
and
into
xor
cmp
loope
mov
das
shlb
cwtl
mov
push
out
and
inc
rcrb
lock
xorl
jbe
cmp
sbb
add
ljmp
call
cmp
js
cs
cmp
out
cmp
adc
movsb
in
mov
xor
pop
lahf
xchg
hlt
cli
mov
data16
inc
xchg
lock
inc
in
mov
jg
mov
test
inc
leave
mov
pop
xchg
test
jl
sub
add
hlt
jmp
ljmp
loop
add
push
lods
test
add
in
pop
mov
call
enter
cltd
popf
pushl
mov
cmp
pop
cmp
scas
jle
cs
and
pop
mov
jg,pt
jae
or
dec
stos
xchg
jp
and
jae
jae
ffree
sub
pop
out
das
fnstcw
push
sub
cmp
xchg
xor
dec
into
nop
mov
adc
mov
lret
adcb
jle
or
bound
mov
negl
and
sahf
push
daa
add
cmpsb
pop
and
rclb
in
cmpsl
add
gs
lock
sbb
ror
test
in
in
bound
into
push
mov
imul
ss
out
aaa
bound
mov
fcmovnu
negb
jg
mov
xchg
dec
sub
cld
or
fsubp
jo
cmp
lret
sbb
idivl
test
int3
cs
es
adc
mov
pop
cld
mov
or
dec
mov
jb
sub
xorb
push
in
mov
jecxz
xor
fstl
hlt
sti
frstor
xchg
insb
push
shlb
push
out
rorb
cs
mov
xor
test
cmp
add
cld
or
das
xchg
sti
add
cld
sub
daa
in
xchg
sbb
mov
inc
rcrb
outsl
ret
add
mov
or
and
call
mov
mov
xor
dec
adc
pop
jmp
repnz
daa
or
pop
xchg
jne
outsb
push
push
in
mov
cwtl
pusha
lods
sbb
jne
sub
jbe
pusha
dec
scas
cmp
fs
mov
repz
xchg
nop
mov
mov
fs
sbb
or
cltd
int3
adc
out
sbb
pop
hlt
xlat
sub
xchg
mov
mov
push
mov
jp
xchg
ljmp
mov
leave
gs
in
fisubs
dec
stos
insb
data16
insl
stc
sub
test
rorb
dec
int3
pusha
xchg
fwait
and
adc
dec
push
pushf
out
out
stc
xchg
lock
adc
insl
inc
hlt
mov
or
jns
pop
push
dec
in
xchg
push
js
ljmp
dec
sbb
ja
cmc
and
jbe
data16
inc
jnp
or
notl
stos
cwtl
out
xor
int
les
repz
data16
adc
rorl
mov
bound
testb
push
jo
cmpsb
int3
icebp
mov
sub
pop
out
frstor
lods
fnstsw
mov
lods
lahf
loopne
xchg
mov
or
jnp
bound
push
jge
push
mov
outsl
xchg
jmp
mov
call
inc
sbb
ljmp
and
pop
mov
push
push
cmp
pop
push
or
cmc
sti
pop
sub
pop
jb
cmpb
jno
jmp
gs
mov
pop
adc
push
pop
fs
stc
popa
xchg
aad
imul
imul
xchg
adc
cmp
test
mov
xor
xor
popf
jbe
mov
aas
pushf
xor
imul
es
jg
ret
mul
cmp
xor
fidivrl
out
mov
insl
loopne
aam
mov
adc
int
xchg
lds
mov
pop
mov
cltd
imul
mov
addr16
jb
negb
jl
popa
xchg
push
push
in
push
mov
movb
xor
xchg
mov
jge
cwtl
pusha
mov
cmp
leave
jb
lds
lea
iret
dec
mov
ffreep
mov
dec
stos
loopne
in
cli
je
cmp
addr16
mov
sub
add
or
repnz
aaa
adc
cbtw
mov
mov
mov
mov
pop
sbb
mov
loop
pop
jg,pt
jg
mov
mov
cmp
mov
lcall
sbb
clc
ja
in
hlt
movsl
aam
pop
lcall
outsb
out
aaa
push
dec
mov
add
xchg
jecxz
add
add
add
inc
push
std
add
pop
mov
data16
sub
add
mov
ljmp
dec
stos
jns
jge
fcoms
movsb
insl
rcl
jno
sbb
sbb
loope
lea
scas
fsubp
cmp
mov
add
xchg
add
in
cmc
in
shlb
or
ljmp
or
inc
push
je
out
enter
pop
jae
neg
mov
pop
jg
and
aad
inc
ficomps
andb
mov
lcall
fists
xor
lock
pop
std
cli
loope
and
mov
add
jo
ljmp
nop
scas
js
cli
mov
mov
loope
sub
push
sub
fadds
add
ret
movsb
jp
xlat
xchg
loopne
daa
or
loop
int
cmc
sub
sub
jmp
xchg
dec
ffreep
mov
mov
movsl
dec
push
cs
loop
test
mov
dec
inc
mov
scas
fs
lods
shl
loop
jae
ljmp
int3
xchg
adc
popa
dec
jo
pop
pop
pslld
push
jns
bound
std
push
hlt
pop
mov
fidivl
xchg
mov
rcrb
mov
cmp
sbb
and
out
hlt
mov
scas
scas
xchg
in
mov
pop
mov
rcr
or
jecxz
cld
fdivp
insl
adc
mulb
mov
add
shrb
loop
sub
add
mov
por
enter
adcl
ficoml
div
adc
xchg
push
inc
pop
imul
lret
jb
add
out
das
cmc
xor
inc
jmp
and
pushl
lahf
shll
mov
jne
lods
addr16
inc
mov
dec
movsl
test
subb
inc
add
add
das
pop
test
jmp
add
and
rcll
sbbb
mov
adc
mov
loopne
out
jbe
adc
xor
mov
dec
cmp
into
push
test
arpl
cmpsl
fldt
dec
push
outsb
push
imul
fmulp
dec
shr
jo
inc
inc
ja
push
or
cmpsl
fdiv
in
jnp
int3
movsl
mov
mov
adc
cmpsl
and
xchg
pop
cltd
xor
stos
nop
cwtl
push
lahf
adc
out
xchg
mov
push
or
popa
mov
es
push
orb
lods
sbb
cld
jle
jbe
fisttps
stos
scas
mov
or
push
jae
and
xor
mov
pop
scas
out
dec
add
pusha
andb
xchg
scas
loope
add
xchg
push
pop
jae
out
and
lret
ljmp
pop
cmp
xchg
in
in
mov
mov
push
mov
xchg
push
push
sbb
push
pushf
stc
jp
mov
int
ret
pushf
test
and
es
mov
inc
xchg
test
push
pop
das
imul
push
fidivrs
xchg
jl
mov
pop
pop
cmpl
loop
or
icebp
jge
iret
pop
push
es
jno
inc
repnz
xchg
xor
jbe
jl
shlb
inc
xor
add
sbb
prefetch
or
test
mov
push
pop
jge
or
cli
pop
xor
shlb
xchg
gs
dec
cld
aaa
data16
mov
mov
hlt
and
push
sbb
call
sbbl
push
fcomp
cli
in
aad
mov
adc
mov
ja
add
in
inc
sub
loopne
flds
lret
xchg
or
xchg
pushl
pop
cld
mov
in
jae
cmpsb
xchg
mov
fiadds
scas
sub
and
mov
pushf
inc
inc
dec
sub
pop
push
adc
inc
or
jnp
test
lods
sarb
jne
dec
js
inc
scas
stos
pop
or
add
loop
sbb
sbb
call
push
imul
mov
ja
mov
mov
push
sbb
lret
aam
mov
imul
in
xor
fldl
popf
lahf
and
and
adc
int
mov
pop
and
dec
mov
jmp
xor
aas
les
or
inc
lods
adc
popa
mov
int
xchg
in
jp
sub
cltd
repnz
mov
inc
scas
mov
fwait
adc
and
xor
js
fstl
add
scas
adc
call
jno
cmpsl
hlt
push
push
push
loopne
jmp
xlat
sbb
int
rclb
cmp
push
xlat
dec
mov
cs
inc
mov
nop
inc
mov
enter
jge
inc
dec
lea
inc
rcll
sub
pop
inc
jl
stos
mov
lods
je
sub
mov
xchg
jg
aas
sub
dec
and
cmp
mov
xor
aad
in
adc
mov
mov
push
cmpsl
mov
or
arpl
xchg
pop
adc
outsb
pop
je
mov
xor
mov
outsb
test
cmp
mov
adc
inc
loopne
xor
scas
sub
fistl
lods
movsb
sbb
mov
movsl
mov
test
xchg
jl
inc
fisttpll
lahf
cmp
push
aam
dec
lret
jno
test
adc
imul
jbe
cmp
mov
sbb
mov
add
call
in
ljmp
out
mov
js
test
or
bnd
pop
xor
out
mov
jge
scas
mul
jb
inc
cli
out
lock
mov
pop
add
ret
push
and
scas
cltd
mov
cs
adc
push
notb
xchg
ljmp
ret
pop
lds
daa
sub
dec
pop
ss
cmpsb
popa
jno
jnp
sub
stos
push
cmp
xor
aam
js
mov
sbb
roll
xor
test
mov
xchg
repnz
push
pop
dec
jg
loopne
push
in
cmpb
loopne
adc
sub
repz
imull
xchg
add
mov
and
push
xchg
mov
mov
ja
fidivl
idivb
inc
cmp
loope
rcll
jno
xlat
jae
fucomp
jp
mov
movsb
notl
test
cs
jns
mov
adc
rcr
jg
pop
daa
adc
sub
sarb
inc
ss
nop
jg
mov
pop
push
dec
test
dec
mov
nop
aam
dec
sub
orl
mov
cwtl
ret
aam
sbb
mov
cmp
popf
push
in
lcall
jb
or
pop
lods
ljmp
jo
xor
xchg
sub
inc
xor
daa
rcl
sarl
xlat
cltd
xchg
xchg
cmp
inc
adc
fwait
jp
pushf
xchg
pushl
test
mov
and
or
imul
lret
push
cmp
stc
fmull
imul
dec
cmp
popa
mov
addr16
cmp
cmpsb
test
and
mov
sbb
inc
jle
sub
mov
rcl
icebp
lcall
popa
test
lret
aam
fstpl
mov
mov
dec
outsb
shrb
cltd
mov
push
imul
and
shrb
cmp
pop
hlt
mov
inc
jns
inc
jg
push
int3
in
inc
mov
lahf
clc
fistpl
scas
dec
mov
clc
jns
in
pushf
pusha
jmp
lods
sti
sbb
aas
mov
pop
in
dec
pop
jns
pop
pop
jmp
aas
mov
in
aaa
xor
and
insl
jl
sbb
add
push
add
xchg
addr16
je
xor
pushf
and
jae
xor
test
xor
iret
or
mov
jmp
test
mov
ret
mov
loopne
scas
inc
or
rcr
das
sbb
add
mov
cmpsb
test
sub
mov
outsb
loop
xchg
lret
sarl
pop
fs
cmp
mov
in
jecxz
sti
push
add
gs
jmp
outsl
clc
dec
dec
jg
cmp
fcmovne
add
ds
pop
cmp
dec
mov
mov
ret
add
xchg
mov
movsl
fucomip
and
add
test
mov
ret
push
lret
jecxz
jae
scas
jl
mov
stos
xchg
aaa
push
xchg
or
cvttps2pi
fcompl
sbb
dec
stc
les
sub
insb
xor
dec
and
xchg
ror
mov
insb
xor
subb
xchg
in
mov
pop
pop
aam
pushf
push
cmpsb
and
cmpsl
sub
jb
add
jp
inc
sub
sub
out
ror
dec
aas
in
push
pop
cld
imulb
shll
loopne
lret
addr16
test
dec
mov
fistl
xchg
cmc
pop
rcll
cmp
xlat
sbb
cld
inc
shll
repnz
decl
stos
fdivs
push
fldt
rcll
cmp
ljmp
xchg
frstor
iret
xchg
sar
or
xchg
stos
push
in
sub
pop
aaa
lods
bound
push
aam
xsavec
dec
xchg
dec
addb
sub
nop
add
push
clc
shll
arpl
sbb
pop
jle
dec
or
int
add
lret
mov
fwait
push
lahf
insb
in
and
loope
outsl
push
arpl
mov
or
or
into
bound
mov
push
lods
cltd
jmp
push
imul
cmp
das
mov
jg
add
jle
dec
in
cmpsb
push
push
insl
pop
arpl
ja
enter
mov
mov
ret
jns
pop
lret
and
sti
repnz
fiaddl
push
push
xor
jno
into
push
push
int
cmp
pop
call
sbb
jno
or
sbb
xchg
into
nop
sbb
and
sub
sbb
xchg
cmp
out
fwait
imul
push
or
cwtl
lds
push
mov
sarb
leave
jp
jnp
out
mov
mov
jge
clc
add
or
jmp
pop
and
adc
sti
daa
btc
mov
std
lret
xor
or
stos
and
xchg
iret
ret
sbb
sbb
out
popf
clc
cmp
rcrl
test
or
mov
xchg
movsl
sar
jmp
or
cwtl
std
test
ret
push
aas
push
addr16
jp
and
shll
push
andl
subl
loop
push
xor
call
in
mov
mov
lahf
add
popf
testl
push
mov
leave
jnp
push
fildll
in
shrb
repz
push
outsl
push
push
mov
out
addr16
arpl
xchg
movsb
loope
dec
into
adc
pop
dec
lret
add
lods
sub
add
sarl
xorl
pop
lcall
cs
jg
popf
mov
and
mov
cli
cwtl
nop
pop
add
mov
xor
pushf
fistpll
add
mov
push
jp
or
test
pop
push
imul
stc
ja
pop
fimull
es
push
xor
mov
cmp
enter
jne
aaa
xchg
scas
xor
sbb
and
add
out
xchg
repnz
rcr
out
aam
xchg
xchg
xchg
mov
jo
jg
jae
inc
in
or
in
movsb
jb
arpl
inc
lret
insb
pop
mov
outsl
cmp
xchg
pop
dec
dec
sbb
push
lea
sub
stos
gs
dec
lcall
adc
xor
sarb
or
mov
pop
pop
jmp
or
xlat
imul
test
and
and
test
ljmp
les
or
lock
push
inc
dec
jp
jmp
stos
jne
mov
mov
fxam
popl
jno
pop
xlat
mov
xchg
pop
or
or
loop
je
xchg
adc
inc
or
sub
pushf
sbb
sub
mov
pushf
jns
mov
lds
mov
andb
aas
shl
mov
sub
fwait
dec
jle
and
push
ja
popf
sub
pusha
or
mov
fisubs
xchg
xchg
mov
push
push
or
icebp
fwait
and
push
dec
es
arpl
fmulp
push
or
dec
aas
inc
and
xchg
pop
shlb
popa
push
shll
sbb
mov
push
push
fnstsw
aam
dec
or
push
aas
inc
xchg
add
lret
mov
sarl
ret
je
add
das
dec
popa
repnz
push
stos
mov
outsl
cmpsb
xchg
mov
dec
pushf
mov
repz
or
imul
sub
jge
pop
mov
cltd
xor
cld
stos
mov
xlat
je
dec
movb
jge
fistpll
add
or
adc
std
aam
lret
fadds
add
daa
push
cli
add
xchg
scas
pop
xchg
or
std
pop
pushf
or
jno
sbb
ret
add
icebp
std
or
inc
fwait
jle
dec
clc
add
out
inc
inc
cmpb
les
push
mov
adc
sarl
xchg
fmulp
ja
jmp
lea
fistpll
jae
stc
mov
mov
sbb
jns
hlt
xlat
pop
adc
movsb
imul
xor
mov
pop
jb
fnstcw
cld
lock
dec
out
or
popf
js
sbb
cmp
cwtl
mov
shrb
bound
mov
xchg
cmp
ljmp
xchg
fcmovbe
aas
and
dec
adc
jo
leave
hlt
outsb
or
or
cmp
inc
ss
popf
push
lock
mov
jb
in
or
leave
ljmp
mov
ja
lock
daa
xchg
push
cmpsl
push
and
jae
mov
inc
xchg
in
push
jmp
test
outsl
jg
shlb
sbbb
xchg
adc
inc
xchg
test
in
mov
fisttps
dec
pop
lds
xor
ljmp
leave
pushf
int
ror
popf
jb
inc
cmp
in
inc
fidivl
jp
push
mov
nop
iret
dec
mov
jno
mov
fsubs
scas
jge
inc
cld
adcl
lcall
in
add
aas
iret
jnp
mov
scas
shll
lods
ret
xchg
std
cmc
loope
push
jg
mov
xchg
push
mov
mov
adc
cli
addb
adc
iret
and
sbb
mov
cmp
dec
jb
subb
out
cld
inc
sbb
cmp
sbb
pop
sbb
outsl
sbb
shlb
dec
je
adcb
mov
sub
mov
test
rcrl
mov
mov
dec
mov
jg
dec
xchg
jno
icebp
push
jecxz
push
xor
sti
adc
mov
jecxz
jno
jbe
fldenv
aaa
popa
jne
test
add
mov
ret
and
movsb
mov
mov
xchg
out
ret
pop
mov
jne
test
mov
mov
cmp
adc
negb
hlt
mov
cmp
mov
data16
loopw
aad
mov
sbb
mov
fwait
imull
popf
dec
push
push
je
iret
lret
sbb
rcrl
mov
ret
sub
or
jp
daa
xor
mov
inc
cs
pop
cmp
jae
xchg
cltd
and
mov
in
in
add
call
lret
stos
ret
cwtl
adc
jb
cmp
stos
fs
adc
ja
sbb
and
sub
dec
jmp
rolb
xchg
das
roll
or
clc
push
jo
push
hlt
lahf
pop
adc
xor
int
sbbl
neg
pop
mov
in
add
sub
andb
call
xor
test
cwtl
movsl
in
mov
stos
inc
xor
out
dec
inc
or
fbstp
mov
mov
in
adc
rcll
mov
add
fcomps
cwtl
mov
cmp
xorl
push
mov
mov
and
cmp
push
xchg
cli
mov
mov
mov
daa
sub
loopne
pop
loop
xor
jmp
je
test
push
lret
pushf
jmp
mov
pop
xor
mov
inc
inc
sub
repz
mov
je
push
add
stos
in
mov
mov
dec
insb
loope
mov
in
dec
stos
out
test
sub
cltd
andb
sbb
out
pusha
mov
mov
inc
or
in
aad
push
inc
das
js
movsb
cmc
aas
jb
mov
mov
es
pop
add
push
test
inc
call
mov
loop
and
push
maxps
push
inc
insb
lret
aam
add
in
adc
pop
dec
loop
add
xor
subl
test
xchg
sub
mov
mov
lahf
jae
lahf
sbb
fnsave
cmpsl
pop
inc
and
adc
xlat
xchg
je
outsl
test
mov
loop
jmp
mov
mov
push
or
outsl
cs
adc
fdivrl
adc
sub
push
cmp
pop
inc
inc
neg
xor
pop
push
fnstcw
int3
mov
insb
scas
pop
and
fimuls
orb
mov
mov
push
mov
push
dec
or
cli
out
test
stc
imul
push
mov
xchg
movl
xor
adc
repz
stc
lods
loope
andl
nop
push
sub
icebp
push
int
cli
xor
mov
es
lds
pop
sbb
mov
jnp
pop
sbb
dec
jl
xchg
pop
cmpsb
ficompl
imul
lret
jae
nop
mov
adc
icebp
dec
out
fwait
mov
push
gs
mov
or
push
inc
xor
sti
test
sbb
sbb
loop
jbe
sbb
out
adc
insb
lods
outsb
dec
jnp
cmp
movsl
je
insl
orl
outsl
and
aaa
cmp
outsb
lret
iret
hlt
fldl
mov
cmpsl
xlat
xchg
adc
cmp
cmp
adc
test
cmp
mov
cltd
fs
ds
cld
fildll
xchg
in
pop
lahf
into
aad
or
insl
insl
xor
outsb
jne
popf
dec
out
fbld
mov
cld
rcrb
mov
sub
pop
add
fstpl
jb
repnz
pop
jecxz
int3
js
xlat
pop
fdivr
iret
pop
movsb
and
jp
sbb
and
loope
mov
clc
mov
mov
sbb
cmp
and
adc
jmp
push
scas
sbb
push
xchg
jb
inc
imul
imul
cmp
leave
pop
repnz
insb
mov
jno
dec
cmp
pop
xor
es
lcall
mov
xchg
mov
sub
pop
push
inc
cmc
xor
lds
sbb
fsubp
daa
or
test
gs
xchg
into
ljmpw
test
clc
and
rclb
inc
cmc
xchg
or
fmuls
scas
fsubp
sbb
dec
xor
sub
push
and
xor
add
cwtl
inc
out
inc
incl
aaa
pop
mov
mov
add
fcmove
aas
push
in
adc
or
mov
in
dec
xchg
cwtl
shrl
cs
xchg
iret
xchg
inc
push
popa
sbb
js
pop
jbe
mov
testl
cwtl
mov
or
dec
test
mov
xchg
mov
adc
sub
sub
cmpsl
out
inc
pop
pop
les
xor
inc
inc
pop
into
and
stos
push
jmp
sbb
cmpl
xor
je
aas
scas
push
sbb
inc
lock
inc
adc
lds
daa
inc
ljmp
outsl
lcall
popf
insb
sbb
sti
mov
cmpb
stos
sti
dec
jecxz
pop
push
cmp
cmp
out
daa
mov
into
dec
mov
ret
mov
cli
pushf
or
out
sub
mov
inc
push
test
or
sub
jle
jmp
fdiv
pop
repz
pop
sbb
popa
adc
mov
dec
mov
cltd
inc
pop
sub
lea
insl
inc
jns
adc
loopne
lcall
rcll
dec
push
test
and
into
cld
call
xor
mov
jo
lock
inc
rcr
test
inc
ljmp
hlt
imul
mov
int
mov
pushf
sbb
sbb
nop
mov
testb
fadds
out
mov
fdivs
xor
dec
xor
add
fdivl
fucomip
outsb
xor
push
leave
mov
js
pop
lea
sbb
call
cmc
inc
int
inc
mov
dec
out
sbb
sbb
loop
xchg
dec
stos
pop
cmp
iret
sub
gs
inc
adc
adc
cwtl
into
data16
enter
sahf
rorb
push
jnp
int
mov
add
int
into
das
pusha
mov
lret
jge
jb
lcall
jg
test
imul
pop
sub
xchg
cmp
xlat
bound
das
add
icebp
sub
into
rorb
jnp
lcall
jae
inc
mov
in
push
aad
insb
xor
xor
jge
fwait
mov
or
shll
pop
inc
jle
dec
lcall
ja
sub
lahf
sti
jg
je
stos
bound
push
stc
lods
cmc
or
push
mov
into
fiaddl
xchg
mov
xlat
fldpi
jmp
loopne
andb
jecxz
push
jle
xlat
out
jge
adc
aam
mov
sarb
xchg
mov
out
cmp
push
cmp
mov
mov
add
inc
and
loop
adc
mov
imul
jp
adc
sarb
push
cmpsb
adc
mov
movsl
mov
mov
push
xchg
stos
int
in
rcrb
inc
clc
test
scas
adc
mov
les
shrl
lods
lret
incb
ret
jne
ja
or
dec
push
fnsave
fwait
mov
sbb
or
addb
or
jbe
das
jo
adc
mov
out
jmp
mov
jns
imul
mov
movsb
adc
or
mov
or
ret
xor
jnp
outsb
xor
imull
mov
lock
fs
lds
sub
mov
test
push
std
mov
jge
insb
js
sbb
push
hlt
sbb
jp
inc
aaa
call
mov
sahf
icebp
and
lcall
dec
pop
dec
fnstenv
jecxz
mov
loope
je
sbb
lahf
sub
push
mov
xor
jge
dec
gs
loop
test
es
xchg
add
cmp
cmp
iret
rcrb
sbb
sub
xchg
pop
xorl
and
cmc
stc
fbstp
inc
ret
movb
dec
cli
scas
pop
mov
mov
mov
pop
rolb
cli
addl
call
pop
popf
xlat
mov
adc
insb
add
mov
je
mov
cmpsl
push
scas
ljmp
dec
inc
sub
jp
or
jmp
dec
les
cmpsb
unpckhps
testb
dec
jle
pop
std
pop
sub
scas
jp
mov
mov
sbb
sbb
mov
cmp
xchg
sbb
lds
dec
dec
and
sti
jb
aad
sar
inc
adcb
call
pop
fstpt
sbb
push
mov
pop
xchg
and
mov
aad
imul
sbbl
movups
lret
lea
adc
mov
pop
push
xchg
xchg
aad
xlat
popf
call
pushf
pop
sbb
dec
sub
sbbb
outsl
outsl
jo
push
adcb
rcrb
loop
xor
xchg
mov
add
push
inc
mov
cmc
imul
pop
mov
ret
and
mov
lds
insb
test
xor
mov
aad
cli
loope
xorb
iret
pop
or
sbb
add
aad
lods
aad
int
icebp
mov
xchg
cld
push
insl
xor
adc
imull
gs
movsl
orl
xor
popf
jle
cs
rolb
mov
mov
and
iret
ss
nop
inc
loope
pop
je
int3
jno
pop
cwtl
cmp
mov
mov
cld
dec
push
push
dec
pop
inc
xor
mov
and
stc
popa
inc
add
mov
popf
movsl
lods
sub
mov
pop
xchg
andb
and
jnp
or
and
cmp
push
shll
mov
std
sub
xchg
repz
or
repnz
fwait
das
adcl
add
sbb
das
imul
mov
fs
inc
aas
adc
scas
lcall
sbb
push
bound
daa
addr16
sub
ret
test
sub
pushf
out
pop
cmp
xchg
inc
movsb
push
test
test
cmp
aaa
addb
cmc
cs
fsubrs
pop
inc
pop
xchg
sbb
jg
aad
dec
shrb
push
loopne
leave
in
sahf
sub
and
xor
sbb
jecxz
hlt
pop
pop
jae
dec
sbb
scas
scas
mov
pop
dec
test
int
ret
jo
sbb
push
cmp
movsl
fbstp
das
push
lret
out
sbb
enter
jle
loope
cmpsl
mov
loopne
fmull
jmp
add
stos
cmpsl
sbbl
push
cmpsb
mov
loop
inc
xchg
fs
pop
xchg
mov
shl
out
jno
jmp
mov
popf
andl
call
xchg
push
icebp
mov
and
inc
jmp
in
jmp
mov
ffreep
sub
mov
jge
dec
imul
cwtl
jno
repz
iret
add
cmp
sti
repnz
out
mov
mov
xchg
adc
xorb
jb
dec
fisubrl
adc
mov
inc
jbe
rolb
inc
mov
andl
das
sbb
adc
out
gs
mov
call
int
mov
fdivl
adc
or
xor
iret
add
add
sub
mov
shlb
notb
popa
and
ss
push
inc
pop
loop
jle
pop
andb
out
fdivrs
and
rcrb
aam
mov
jns
inc
mov
rcrl
mov
xchg
mov
pop
mov
les
clc
imul
ret
scas
ret
ret
sub
test
daa
cmc
mov
inc
fldcw
andl
and
mov
cs
cmp
repz
inc
xchg
push
pop
shl
insb
sbb
mov
movsl
ja
jae
cmp
xor
loopne
popf
test
jno
neg
xor
sub
test
cwtl
mov
das
mov
cwtl
sub
ret
inc
outsl
and
pminub
lcall
sub
sub
sub
mov
mov
ret
sbb
pushf
test
lret
jae
push
mov
sbb
subl
cmp
push
push
lret
mov
movsb
sbb
push
insb
daa
xor
pop
mov
daa
xchg
mov
push
cmc
sub
sarl
push
xchg
add
ror
xchg
xchg
aas
rcrl
sbb
pop
dec
out
pop
adc
mov
pop
in
repnz
idiv
sbb
and
cmpsb
nop
or
stc
stos
subl
pusha
add
mov
pop
andb
sub
and
xchg
mov
data16
out
dec
xor
or
adc
in
cs
cld
daa
je
sub
fs
adc
cmpl
std
cwtl
mov
jno
or
out
aad
mov
clc
and
add
aam
adc
pop
jl
lcall
sub
mov
test
notb
mov
cmpsb
outsb
je
cmp
test
sub
mov
loopne
sbbb
xor
inc
out
ret
dec
xor
pusha
pop
clc
jecxz
mov
in
imul
pop
add
pop
adc
fst
add
outsb
leave
lods
dec
popa
iret
mov
aaa
rcrb
outsl
mov
lock
scas
sbb
popa
sbb
out
xchg
mov
mov
or
jno
lock
inc
fnstsw
xor
fwait
xor
dec
jl
jge
shlb
sub
dec
iret
les
xchg
mov
test
aad
imulb
test
mov
push
imul
pop
imul
pop
iret
adc
roll
push
repz
pusha
pop
mov
arpl
clc
mov
jmp
test
jp
cli
pusha
sub
inc
inc
mov
mov
push
xor
sbb
and
inc
xor
mov
mov
fidivl
mov
sbb
loopne
inc
sbb
decb
shlb
xor
pop
add
cmp
adc
push
dec
sub
sbb
xor
shl
dec
cltd
popa
repnz
push
add
cmpsl
shrb
sbb
sub
loop
mov
std
stos
push
sub
fwait
jg
sbb
cmp
inc
aad
cmpsb
sub
push
loopne
pop
sub
in
add
stos
loopne
xchg
iret
lcall
dec
push
inc
call
test
testl
arpl
js
adc
inc
sbb
push
mov
jb
subl
pop
in
and
mov
insb
ss
sti
ss
xchg
mov
ljmp
imull
mov
sub
arpl
or
hlt
lret
arpl
in
jo
loopne
dec
rolb
cmp
mov
xchg
push
icebp
mov
mov
inc
cltd
sub
pop
mov
ret
xchg
cmp
xor
outsb
cwtl
loopne
insl
imul
push
mov
cmp
mov
aam
jno
mov
shl
cmc
pusha
cmp
cmpsl
sbb
pop
imul
aam
sbb
mov
mov
test
sub
and
dec
push
sub
es
xchg
jge
loope
out
cmp
xor
pop
dec
in
sbb
mov
mov
dec
sub
cmp
ret
stos
movsl
into
dec
or
add
adc
outsb
or
rcrl
cmc
call
shlb
les
mov
es
frstor
addr16
and
adc
cmc
test
mov
mov
cmp
test
insb
rol
fwait
cmc
cmpsl
xchg
imul
iret
mov
pushf
outsl
xchg
pushf
mov
insb
xchg
push
mov
or
cmpsl
mov
pop
adc
mov
js
jg
fstpt
call
inc
mov
aas
ja
xchg
cmp
int3
add
mov
dec
insl
clc
cmpsl
mov
cmp
je
add
sbb
mov
mov
bound
inc
pop
mov
sub
cwtl
std
pop
ret
popf
icebp
jnp
shl
mov
sub
inc
dec
mov
daa
cmove
adc
dec
das
xchg
and
lods
dec
or
pusha
std
fwait
sub
addl
fs
xchg
cltd
fbld
mov
mov
pop
int
daa
xchg
mov
push
push
mov
int
popf
cs
loopne
adc
in
xlat
mov
jmp
ficoms
add
daa
push
pop
push
stos
ljmp
and
push
mov
lea
insl
jecxz
scas
dec
jns
and
cmp
adc
sbb
cli
lds
push
push
lcall
xchg
sbb
jb
aad
cmp
std
pop
pop
out
gs
inc
sub
inc
inc
push
xchg
hlt
sbb
adcb
adc
fistpll
jae
insl
gs
push
inc
jp
xchg
dec
test
sbb
in
mov
push
mov
or
push
fwait
pop
sbb
imulb
jne
push
adc
mov
push
push
popa
sbb
jmp
sub
enter
daa
push
and
pop
sub
xchg
incl
cltd
pushf
hlt
push
inc
xchg
mov
lret
movsb
push
out
sub
pushf
call
arpl
test
mov
sbb
out
add
add
jno
loopne
jns
jge
or
jno
mov
sahf
dec
ret
push
cmp
xor
jg
sbb
sub
mov
hlt
notb
cmc
mov
mov
lcall
fsubl
ret
rorl
jg
leave
repz
or
ljmp
cmp
in
shl
aad
leave
mov
add
icebp
sbb
xlat
inc
pop
sbb
push
mov
xchg
cld
jecxz
add
cmp
enter
cmp
xor
lock
loope
repz
filds
jns
sub
aas
ja
test
dec
xor
jp
pop
nop
cwtl
aad
mov
out
outsl
xchg
test
aaa
sbb
and
push
rolb
cmp
sbb
insl
xor
jnp
cwtl
daa
cmp
mov
mov
fldenv
jb
cmp
mov
mov
movsl
xor
lods
or
mov
jecxz
cli
cmp
es
inc
add
jmp
aad
fdivrs
je
ss
sub
inc
inc
shlb
xor
sub
add
mov
or
addr16
nop
cmc
jo
fwait
pop
insl
in
push
repz
mov
xchg
loope
sbb
push
dec
popf
movsb
add
es
push
shll
mov
movsb
mov
adc
mov
shrb
or
in
leave
mov
sbb
jg
fwait
icebp
xchg
cmc
mov
xchg
or
enter
jo
pusha
sub
lcall
xor
mov
push
dec
cmpl
lods
jnp
and
add
addb
ret
hlt
movsb
stc
stos
add
xchg
push
lock
jle
pop
stos
and
mov
pushf
xchg
cmpl
mov
mov
mov
aas
mov
enter
shll
ficomps
hlt
insl
and
add
movsb
add
pop
sub
enter
adc
inc
lcall
ds
sbb
mov
adc
mov
loopne
adc
jl
xor
pusha
popa
fnstcw
dec
mov
jl
scas
incl
and
ljmp
and
push
cwtl
and
aad
ds
aad
xchg
enter
and
les
dec
mov
pop
mov
jg
adc
xor
addb
adc
xor
adc
adc
push
dec
ret
pop
sub
xor
test
out
push
outsl
imul
push
xor
pop
jno
aad
lods
jg
cmp
xchg
iret
dec
popaw
les
adc
push
cmpsl
inc
adc
sbb
xor
or
fwait
adcb
pushf
and
fidivl
aas
lcall
add
mov
into
xchg
pop
and
push
and
mov
jae
cmp
and
ljmp
imul
push
push
mov
adc
or
adc
or
cmp
test
loopne
add
imul
jecxz
andb
inc
pop
adc
fldcw
je
sti
cmpsb
out
cmpsl
push
pop
fsubl
jmp
jge
fstl
sti
mov
mov
pop
mov
pop
hlt
fiadds
lret
fsub
cwtl
jge
jge
rol
rorb
ds
sti
adc
in
cmp
inc
sub
clc
adc
mov
mov
cmp
cmp
or
lret
clc
cmp
xor
push
inc
imul
jle
or
movsl
mov
fsubrp
nop
js
xchg
inc
mov
add
jo
stc
mov
dec
popf
sub
adc
mov
cmpsl
push
movb
stos
mov
mov
scas
stos
test
inc
imul
pop
addl
out
aaa
mov
xor
sub
cwtl
ss
dec
lock
jp
dec
mov
sbb
out
leave
add
es
imulb
adc
pop
sti
loope
add
icebp
das
adc
sub
movswl
jg
dec
insb
and
pop
jnp
jns
clc
mov
dec
and
dec
fsubrp
or
xchg
mov
clc
lahf
ss
jecxz
and
xor
jmp
inc
sti
xchg
mov
lret
daa
enter
add
push
int3
cmp
inc
and
lock
mov
xor
bound
rcrb
xor
clc
xor
sub
scas
mov
adc
cmp
loope
int
mov
enter
js
xchg
lcall
inc
aad
adc
pushf
outsb
lds
push
jecxz
sbb
cmp
mov
dec
scas
mov
jns
xlat
in
mov
mov
xchg
test
sub
lahf
popf
adc
test
jp
or
data16
popa
test
xor
ret
rolb
cmp
insl
mov
lock
jecxz
xchg
pop
xor
sbb
stos
sbb
mov
loope
pop
adc
mov
lds
int3
cmp
adc
sbb
jmp
cli
fisttpll
jmp
cmp
mov
xchg
pushf
imul
jmp
int
mov
loopne
sar
sub
add
xchg
mov
aam
or
fsubrl
push
popa
movsb
cs
pop
mov
inc
adc
das
in
lret
adc
nop
push
dec
jle
mov
mov
add
xor
xchg
dec
and
xlat
jp
into
mov
and
cwtl
jmp
or
pop
sub
cltd
xchg
movsl
clc
pop
xor
fstp
xor
enter
test
inc
mov
negb
js
sti
andb
adc
ret
pop
int3
out
add
sub
cwtl
mov
fcoml
shrb
movsl
bound
stos
jmp
cmp
in
fdivr
push
sbb
je
inc
jl
mov
js
fwait
ret
test
pop
sbb
lahf
pcmpeqd
or
push
dec
sub
les
xchg
push
daa
lret
out
push
jns
mov
insb
mov
jb,pt
add
cmp
mov
aam
xchg
sbb
sahf
add
push
out
sbb
inc
out
fmul
popa
xchg
pushf
in
fsubl
pop
adc
lods
xor
test
movb
loopne
mov
adc
gs
jbe
push
cmpb
fistl
sahf
sbb
repnz
ret
rcr
xchg
mov
rorb
in
cmp
shrb
mov
or
sbb
clc
mov
mov
test
jnp
xorb
hlt
mov
and
jmp
mov
lret
mov
jbe
ljmp
add
or
repz
jle
in
and
popf
add
mov
ret
dec
xchg
les
adc
or
sub
push
repnz
loop
or
test
or
sub
popf
bound
cmpsb
push
cmp
aaa
cs
cmp
cmp
sub
add
lcall
push
xor
jl
mov
dec
mov
cmp
lcall
lahf
cwtl
xor
cmpsl
pop
out
std
mov
cmp
and
lret
mov
sbb
xor
pop
test
inc
test
dec
stc
mov
int
leave
ljmp
sub
out
test
leave
jo
sub
push
xchg
in
adc
test
movsl
pop
xchg
jp
aas
pop
es
push
adc
imul
imul
popa
mov
push
dec
lahf
insl
stc
add
cmp
push
adc
and
pop
ds
ljmp
mov
dec
xchg
lock
dec
mov
lcall
gs
sub
pop
sbb
dec
pop
lods
int3
fucomip
js
in
jbe
mov
in
jp
inc
push
aam
mov
das
data16
dec
pop
int
add
jb
ljmp
xchg
pop
adc
xchg
hlt
rclb
cs
dec
psllq
push
insl
or
outsb
sbb
xor
mov
push
sbb
push
jle
dec
scas
xchg
cmpsb
cwtl
push
xlat
pop
pop
ret
rolb
lret
jp
fwait
xchg
sub
jl
xor
test
les
xchg
test
cmpl
xlat
jecxz
js
adc
cmp
das
test
out
cmp
lea
mov
cmp
cwtl
shrl
and
mov
in
cmp
mov
lret
push
push
xor
bound
or
mov
jp
test
ss
and
shll
adc
inc
daa
inc
int
shlb
leave
add
mov
into
mov
xchg
pop
add
adcl
push
sub
adc
push
pmullw
insl
out
cmpl
cmp
mov
jne
test
jne
xchg
rorl
xor
les
xor
lret
mov
addl
loop
ds
inc
fcomp
xor
mov
jne
or
sub
pop
shlb
cs
inc
push
fisttps
into
fsubrl
aad
lret
nop
and
stc
xor
jl
cmp
mov
add
sub
mov
nop
push
pop
cmc
sbb
frstor
insl
repnz
int
sub
adc
xor
adc
jmp
sub
test
dec
mov
xorb
movsb
sub
push
pop
int
lret
lahf
lock
mov
imul
arpl
stos
lds
jg
lods
cli
push
xor
and
cmp
and
movsb
shll
sbb
xchg
xchg
push
int3
mov
dec
inc
int
add
cmp
cltd
dec
rcrl
and
fisubrl
mov
push
jg
pop
out
inc
add
cmpsb
pusha
xchg
pop
and
xor
test
adcl
sbb
mov
dec
push
inc
sarl
fistpll
add
jl
outsb
sub
movsb
pushf
loopne
inc
mov
cmp
mov
adc
cmp
sbb
into
jmp
mov
icebp
outsb
orb
leave
adc
mov
xchg
jns
xor
jne
lret
nop
outsb
inc
insb
mov
imul
cmpsl
dec
inc
lods
idivb
testb
fistpll
dec
nop
jle
jo
mov
mov
aaa
imul
imul
icebp
fwait
out
dec
inc
pop
mov
xchg
mov
das
xor
jp
popa
clc
cltd
pop
pop
stos
insl
mov
mov
cmp
mov
xchg
data16
mov
cmp
cli
arpl
adc
xchg
fidivl
adc
in
icebp
adc
jmp
xchg
or
sbb
sub
clc
push
in
cmp
test
pop
jge
repnz
adc
iret
and
sub
mov
out
pop
loopne
mov
push
jmp
adc
roll
das
mov
add
mov
insl
mov
out
popa
negl
ffree
ficomps
push
push
ss
sub
arpl
mov
loop
lods
call
inc
imul
dec
movb
mov
or
fldenv
jne
push
out
or
or
sahf
sti
pop
fwait
push
clc
fdivs
loop
cmpb
lret
ds
adc
lods
jno
or
or
xor
add
aam
les
movsl
jp
int3
in
sub
dec
push
fcomp
cs
call
mov
out
xlat
clc
jp
push
testl
stc
insl
cmpxchg
sbb
ret
shll
xor
sbb
lods
pop
or
pop
mov
dec
ret
and
mov
daa
popf
mov
cltd
sarb
mov
xchg
sub
aaa
adc
jns
pop
xlat
add
cmpl
add
push
andb
push
jle
pop
aaa
and
popf
push
or
mov
sahf
js
out
pop
mov
outsb
pop
dec
add
xor
jne
rcrb
sub
pop
cwtl
cmpsl
jle
pop
mov
mov
cmp
and
inc
je
xchg
mov
or
pop
or
jnp
push
test
sub
cmp
cwtl
lds
loop
test
lahf
dec
add
nop
inc
aad
ret
cmp
popa
cmp
jbe
dec
cmc
sub
std
push
mov
repz
cli
and
jns
pop
pushf
jmp
stos
ljmp
push
mov
testl
rolb
cltd
ficoms
xorb
xchg
mov
pop
ret
dec
sub
pop
cli
ret
in
lea
ret
xchg
dec
fsts
xor
push
cmp
add
stos
repnz
dec
push
adc
xchg
xchg
xchg
addr16
jg
mov
xor
push
hlt
hlt
popa
movsl
fisttps
cltd
cwtl
mov
out
shrl
sub
and
push
cmp
pop
inc
mov
movsl
add
adc
shl
js
fistpll
xchg
and
dec
cmp
clc
adc
mov
sub
xchg
cmpsl
pop
xor
xchg
bound
jge
lcall
inc
cli
mov
push
jb
clc
pop
repnz
or
mov
xchg
pop
dec
mov
or
sub
or
out
cmpsl
cmp
addr16
es
insl
stc
push
test
gs
adc
sbb
or
iret
sbb
xchg
icebp
mov
fildl
cmp
add
cmpsb
xchg
scas
in
stos
or
ss
pop
cli
push
jne
incb
std
xchg
cmpsb
dec
jecxz
sbb
dec
mov
cmp
andl
fidivl
call
dec
inc
pop
jmp
sub
mov
mov
jg
enter
pop
dec
jl
jg
push
mov
popf
inc
xor
outsb
jbe
dec
and
add
outsl
xor
push
into
sbb
out
push
lods
mov
xchg
popa
push
cld
mov
ja
movsb
cmp
sahf
cltd
cli
xor
pop
pop
js
push
inc
and
movsl
cld
xchg
test
mov
mov
popf
loope
into
scas
xchg
xchg
pop
inc
add
ja
mov
jo
mulb
je
sbb
sbb
fadds
xchg
jns
pop
cmp
ret
inc
daa
pushf
xor
ret
pop
clc
inc
jmp
inc
rol
fsubrl
int3
xchg
fwait
inc
pop
mov
pop
out
std
jecxz
jae
cltd
mov
push
das
xchg
xor
cmpsb
push
xor
call
aam
subl
es
and
xchg
adc
mov
pop
std
or
add
mov
iret
loopne
mov
pop
out
sbbl
gs
sti
pop
push
das
xchg
xorb
pop
dec
add
mov
adc
into
jl
xor
adc
scas
inc
out
cmp
push
aad
mov
fmull
xchg
andl
dec
mov
or
add
das
aam
pop
aas
.byte
in
.byte
sub
