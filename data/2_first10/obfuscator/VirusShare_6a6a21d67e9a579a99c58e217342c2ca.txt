xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
xchg
addl
xchg
ret
add
popl
push
push
pop
push
pop
pop
push
xchg
push
xchg
add
push
xor
pop
xor
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
mov
ret
mov
ret
push
pop
pop
push
xchg
mul
push
pop
push
pop
push
add
add
ret
push
pop
ret
push
xchg
add
ret
xchg
addl
xchg
ret
push
xchg
add
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
push
call
call
call
push
push
push
call
push
push
call
push
call
push
push
push
call
push
call
pushl
pop
call
push
push
call
call
push
push
push
push
call
push
push
push
call
push
cmp
jae
ret
add
call
int3
mov
push
mov
sub
mov
push
push
xor
xor
cmpl
mov
mov
movl
jne
mov
push
push
push
lea
push
mov
add
push
call
push
push
push
call
jmp
cmpl
jne
mov
push
push
push
lea
push
mov
add
push
call
push
push
push
call
mov
sub
neg
sbb
inc
jmp
cmpl
jne
push
push
push
lea
push
pushl
call
push
push
push
call
cmp
jne
xor
inc
mov
mov
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
jmp
and
neg
sbb
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
jae
or
jmp
jbe
xor
inc
jmp
mov
cmp
ja
sbb
neg
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
jbe
mov
pop
ret
pop
jmp
int3
int3
int3
pop
mov
mov
dec
add
xor
add
jl
fidivs
sub
cmp
cmp
call
sahf
out
sub
pop
mov
lea
out
pop
cmp
loope
iret
jo
mov
ds
cmp
sbb
or
fisubrl
pop
xor
jmp
fildll
addr16
lea
rcrl
jno
lock
xchg
inc
int3
mov
sti
add
lds
lods
jnp
adc
leave
dec
fnstcw
lock
mov
push
ret
das
add
les
in
mov
mov
out
andb
ror
rcrb
xchg
pop
roll
icebp
inc
je
jmp
rcll
xchg
dec
add
and
fimull
xchg
mov
loopne
into
or
icebp
jmp
push
and
cli
mov
and
ljmp
xchg
cmp
push
jno
cmp
pop
fmuls
icebp
jbe
int3
and
dec
mov
arpl
mov
clc
jno
call
js
fwait
ja
aam
xchg
jo
lret
xchg
sub
jl
or
fwait
in
mov
sub
cmp
les
sbb
xor
es
sbb
imul
jae
cmp
add
sub
mov
pop
lret
push
jo
mov
push
and
js
push
roll
sahf
dec
divl
iret
loopne
xor
ja
inc
popf
dec
push
sub
jno
fisubrs
cltd
dec
jno
outsb
mov
mov
jo
test
or
mov
imul
js
mov
lods
push
out
enter
das
or
and
repz
sbb
cmp
cli
mov
ret
mov
adc
xor
pop
jl
mov
jae
enter
into
xorl
sub
pushf
pop
and
scas
ja
mov
loope
or
out
ljmp
xlat
pop
testb
sub
inc
xchg
lods
pop
mov
shll
xchg
inc
dec
pop
jmp
pop
mov
hlt
fidivs
shl
inc
jo
test
push
cmp
loop
insb
pop
jne
stos
imul
and
mov
and
ret
pop
lods
add
fistpl
enter
stc
fldcw
aaa
cmp
sbb
loop
loopne
xchg
mov
lock
pushf
dec
out
inc
sbb
popa
idiv
test
cmp
push
mov
inc
in
rolb
push
adc
aas
adc
inc
dec
xor
loope
es
inc
in
and
cmp
aas
es
cmp
cmp
pop
das
xor
popa
and
loopne
sub
fists
lcall
push
sahf
inc
push
mov
jo
cld
lcall
mov
sahf
jns
lea
adc
sahf
pop
xchg
xchg
mov
enter
dec
and
adc
aad
mov
sbb
cltd
and
dec
dec
push
mov
pushf
mov
jb
enter
xor
pop
or
popf
inc
out
or
jecxz
rol
aas
pusha
out
into
adc
in
call
call
lods
repz
xor
mov
cmp
stos
push
add
push
push
cmp
lea
adc
lcall
out
shr
cmp
loop
jb
push
push
fdivrl
xchg
jbe
filds
pop
pop
adc
out
insb
in
or
outsb
xor
jmp
mov
popa
mov
adc
mov
jbe
adc
xor
and
pop
add
hlt
fistl
sbbb
adc
jecxz
cld
sahf
mov
jmp
popf
lods
int
pop
sbb
out
iret
cmc
in
pop
arpl
dec
mov
inc
fwait
pop
ficompl
out
sub
jge
mov
fldenv
or
push
jmp
bound
not
or
sarb
jle
int3
push
testl
pop
jle
daa
jnp
cmpsl
stos
hlt
and
aas
and
dec
scas
cli
sbb
pop
push
stos
cli
scas
sarl
test
dec
mov
sbb
movsb
shrb
lahf
addr16
sbb
negb
sbbb
or
push
mov
xor
pop
fs
nop
fstl
addr16
add
push
inc
cs
fidivl
movntps
push
dec
xchg
dec
dec
xor
push
dec
push
sbb
insb
stos
stc
dec
and
insb
cmc
pop
stos
jp
fiadds
popa
stc
fdivrl
inc
in
inc
std
gs
loop
out
or
sbb
xchg
fwait
pop
dec
int3
cltd
out
xor
xchg
cmpl
jmp
arpl
xor
cld
enter
push
inc
sbb
pop
aas
cmpsb
sub
sub
and
es
rorl
inc
adc
and
push
push
out
pop
lods
push
or
bound
push
mov
adc
cmp
cmp
add
sbb
popf
and
and
and
mov
xchg
clc
xchg
mov
pusha
jecxz
shrl
lret
adc
lahf
mov
sbb
xor
into
jl
and
fcmovbe
in
jle
mov
pop
nop
in
mov
add
insb
or
push
push
pop
xchg
mov
pop
cmpsb
repnz
dec
xchg
mov
xlat
pusha
ljmp
xabort
fdivs
cmpsb
cli
repz
or
jg
mov
jecxz
mov
outsb
mov
mov
insl
xorl
sbb
jmp
push
pop
xchg
fldcw
mov
popf
dec
nop
cltd
sbb
cld
push
or
xorl
outsb
push
fldenv
ret
or
sbb
cmpsl
mov
pop
and
test
push
xchg
mov
sar
push
adc
arpl
or
sub
fs
xchg
inc
in
xorl
xchg
fdivs
stos
cld
cli
xchg
enter
xchg
xchg
lds
loopne
push
sahf
cmpsl
icebp
pop
cmc
mov
out
push
inc
and
fsubr
inc
insl
dec
je
adc
rol
movsl
inc
incl
or
mov
or
xchg
mov
sbb
pop
inc
rol
in
inc
arpl
push
es
and
cmp
xchg
inc
and
das
fstpt
xchg
ret
and
sbb
jecxz
fdivl
pop
adc
fbld
xor
mov
add
mov
repnz
not
and
cltd
std
rcrl
push
adc
push
lods
sub
xchg
inc
xchg
pusha
sqrtps
mov
stc
subl
pop
xor
cmpsl
xchg
jle
das
test
adc
test
fidivrs
jl
repnz
icebp
call
xchg
and
fstp
loope
fistpl
inc
imul
out
fmul
loop
jle
mov
cs
data16
je
fsubr
xor
jnp
push
dec
cmp
ret
push
dec
add
and
or
push
xor
pop
lahf
cmp
mov
push
adc
pusha
dec
dec
arpl
fbstp
inc
nop
push
sub
test
xchg
loopne
loope
pop
or
cld
roll
das
dec
or
adcl
pop
push
scas
je
stos
js
hlt
insb
xchg
stos
and
xor
arpl
js
fwait
das
jp
jno
rolb
mov
or
lcall
sub
mov
pop
xchg
or
test
and
nop
bound
popa
mov
add
and
movsl
pop
and
cmc
jnp
roll
xchg
or
insl
cmpsl
mov
addr16
es
push
enter
dec
std
fistpl
stos
xchg
sub
mov
shlb
or
jns
andl
orl
test
shrb
sub
cwtl
mov
xor
sahf
int3
or
xchg
out
adc
test
in
jge
cmp
push
enter
imul
or
mov
push
loope
ja
add
mov
pop
lea
in
lds
xorb
scas
adc
push
or
add
mov
jns
and
leave
stos
push
test
imul
push
inc
xchg
xchg
sti
pop
sbb
in
rolb
enter
or
adc
icebp
xchg
into
cmpsb
jmp
push
and
jp
push
push
aam
mov
ss
mov
daa
in
arpl
push
adc
lds
int
xor
lea
mov
fstps
cld
pop
push
push
cmp
div
in
sub
mov
jmp
mov
inc
ret
and
mov
push
ds
mov
jecxz
mov
out
outsb
arpl
mov
inc
jno
jge
push
les
push
in
test
fnstenv
leave
scas
mov
push
jecxz
stc
cmp
pop
fnsave
push
mov
aam
sub
jle
sub
cli
fildll
xchg
inc
push
test
dec
sbb
jmp
stos
inc
insb
stos
xchg
inc
fs
mov
cmp
sub
push
int3
lahf
sbb
adc
aas
repnz
ja
pop
aas
push
out
and
outsl
jb
andb
int
ret
stc
pushl
mov
push
fwait
xchg
arpl
or
cmp
lahf
add
dec
mov
leave
mov
dec
out
xchg
int3
mov
jnp
mov
clc
in
mov
and
inc
sub
push
cli
push
or
pop
mov
cltd
jo
je
imul
pop
jnp
dec
das
rorl
stos
jge
mov
mov
sub
inc
mov
push
outsl
xor
xor
dec
mov
js
xor
loope
jecxz
push
es
lock
fs
mov
inc
cld
outsb
pop
mov
out
add
adc
les
out
lea
xor
push
fsubr
ret
jb
pop
or
mov
popf
push
cmovp
ret
int3
xor
sub
icebp
push
mov
lock
push
sbbl
scas
push
jl
xor
cmpsl
lods
aam
addb
mov
mov
adc
push
mov
sbb
ja
push
lcall
mov
push
call
mov
push
jns
cmpsl
dec
jecxz
enter
hlt
fwait
movsl
xchg
retw
adc
mov
pop
adc
pushl
rolb
push
and
jno
arpl
daa
mov
pushf
pop
sbb
test
push
call
aad
fsubrl
dec
cmpsb
cmc
jno
xchg
lahf
mov
imul
addr16
lods
jbe
dec
lahf
push
dec
pushl
sub
aam
push
lock
lock
movsl
jae
mov
cld
mov
ja
and
mov
insl
aad
in
fld
sti
rclb
inc
and
cmp
test
sbb
mov
dec
jo
cltd
into
or
xchg
mov
cs
sbb
pop
addr16
movsl
bound
cmp
je
adc
and
pop
dec
xchg
push
cs
cmp
sbb
xlat
jg
aas
mov
dec
xor
and
sbb
lock
lock
es
xor
and
jp
and
int3
mov
repnz
or
rcr
pushf
mov
adcb
xchg
adc
movsb
and
test
aaa
fisubs
sbb
scas
aaa
sbb
xlat
cmpsl
sbb
or
das
pop
inc
shlb
nop
pusha
and
mov
sti
jbe
xor
lret
push
push
xchg
pop
lods
in
movb
add
mov
mov
test
sbb
jo
or
mov
rol
ret
push
jbe
jbe
aam
mov
mov
ror
call
pop
xor
add
xchg
out
leave
adc
jno
adc
movsl
out
dec
fisttps
sub
lret
into
out
gs
in
push
mov
mov
fistpl
jae
push
lahf
mov
in
mov
mov
cmp
inc
mov
mov
outsl
cmp
loope
imul
xor
sti
cwtl
jne
testb
inc
dec
mov
jmp
fsubs
jge
push
dec
sbb
outsb
stc
nop
dec
or
fwait
or
mov
gs
and
mov
fimull
jne
fsubrs
pusha
jmp
iret
jnp
jne
jmp
jmp
cmp
call
jne
insl
shrb
mov
jge
push
cmp
push
test
mov
and
push
test
mov
mov
in
cmp
shlb
pop
lcall
xor
out
mov
or
mov
data16
mov
aad
pop
ds
sbb
jl
push
bound
mov
sub
cmpsb
arpl
je
popa
ds
dec
ds
fsubrs
mov
and
sub
jne
ss
loop
out
cmp
repz
ljmp
jle
dec
sub
xchg
cmc
inc
mov
aad
push
cmpsl
stc
repnz
div
popf
dec
movsl
push
stos
xchg
mov
into
inc
inc
xchg
push
push
xchg
lcall
std
jmp
dec
inc
insl
or
adc
ffreep
jp
mov
pushf
mov
dec
in
or
adc
faddl
push
inc
dec
jecxz
fists
mov
out
pop
pause
cmc
dec
cmpsb
scas
and
es
movsb
cmp
xchg
daa
jne
or
jge
add
cmp
js
push
fucom
and
add
aam
loop
loope
add
mov
fldt
sub
and
xor
bnd
pop
fildll
pop
test
jmp
and
xchg
mov
adc
hlt
mov
push
fimuls
insl
inc
js
mov
dec
out
subl
and
cwtl
xlat
andl
ss
outsb
ret
std
xchg
imul
leave
push
adc
gs
aam
ret
fsub
inc
out
mov
jmp
test
loopne
adc
pop
mov
mov
fmuls
test
je
add
push
inc
xor
add
mov
shl
es
scas
fcom
pop
and
mov
cmp
or
dec
adc
and
mov
lock
push
test
psubsw
dec
adc
inc
mov
rcrb
mov
aad
mov
mov
push
and
fadd
jecxz
das
push
lahf
mov
aas
sahf
clc
lds
mov
cmpsl
mov
dec
stos
and
or
or
rol
mov
adc
mov
das
mov
jbe
inc
jecxz
inc
and
call
adc
cmpsb
jb
movlps
adc
repz
or
andb
jl
sbb
fwait
iret
or
test
popf
stos
dec
push
cld
mov
setno
fsubl
dec
outsl
dec
mov
adc
xchg
xchg
mov
dec
outsb
pop
add
imul
mov
mov
aaa
jo
and
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
in
sbb
fisttpll
out
inc
repnz
sub
sub
in
movsb
lods
add
addr16
lret
mov
cli
mov
lret
cmp
mov
inc
jo
mov
sub
mov
int3
leave
xor
mov
insl
adc
rcrb
pop
push
aad
fwait
jmp
xchg
in
jno
lods
rorb
lods
test
repnz
lcall
cwtl
pop
out
aaa
sub
lea
jnp
gs
jp
repz
xchg
lods
pop
into
ja
xor
xchg
sbb
call
aas
mov
out
mov
or
jle
add
xor
dec
cmp
jno
outsb
inc
add
push
movsl
or
outsb
ret
test
icebp
mov
outsl
add
in
enter
insl
push
mov
sub
lods
pop
jg
sbb
in
or
mov
negl
jne
ret
movsl
mov
sub
out
cmp
cld
jle
inc
cmp
xchg
and
pop
cs
cld
sub
xchg
dec
iret
mov
and
mov
leave
sub
pushf
enter
roll
jge
pop
fcoml
iret
fcoml
pop
ret
les
xor
push
add
cltd
fucomi
popf
rclb
jne
cld
pusha
jp
ror
dec
cmp
or
jp
jae
out
sub
aad
adc
sahf
xchg
jg
mov
mov
aas
leave
lds
into
mov
or
or
mov
movsl
shlb
pop
aas
mov
dec
idivl
mov
fidivs
dec
lods
xlat
mov
mov
adc
jge
cmp
clc
push
sbb
dec
cli
xchg
cmpsl
je
call
xor
out
cs
subl
or
jge
xchg
mov
loope,pn
jge
jecxz
imul
dec
mov
cs
lahf
xor
cmp
data16
mov
cld
loop
dec
pop
xchg
cs
xor
xchg
inc
stos
jmp
std
or
in
adc
add
xchg
mov
push
ret
icebp
scas
sub
cmpsl
lods
inc
ss
xor
xchg
jnp
sbb
ret
push
cmp
movsb
cmc
fsubs
adc
add
cmc
enter
lcall
pop
inc
shl
xor
jp
inc
nop
cmp
or
or
ret
ds
or
rcrl
clc
lock
jne
roll
movl
cmc
iret
iret
lahf
add
inc
sbb
cmp
fnop
mov
popa
pop
push
mov
aad
adc
push
mov
xchg
add
jge
sbb
lods
lahf
aad
movsb
dec
out
pop
jle
test
or
dec
mov
mov
orl
dec
aas
aas
or
popf
pop
repnz
xchg
push
xchg
or
adc
fnstenv
jp
test
scas
or
push
push
dec
lods
ds
enter
mov
insl
inc
mov
lds
pop
divl
out
enter
bound
cmp
xchg
fadd
xchg
repz
scas
xchg
jge
push
or
xchg
mov
shrb
rcrb
and
inc
add
xchg
jge
stc
mov
leave
inc
mov
jmp
mov
scas
xchg
leave
inc
jl
test
jp
xor
ret
or
add
roll
mov
and
out
add
rcll
into
arpl
mov
js
in
loope
adc
cmp
push
ds
in
dec
cmp
cmc
divb
jne
pusha
ficomps
int3
add
das
dec
out
aad
xor
xchg
sahf
jns
adc
in
aaa
das
cmpsl
pop
push
jge
push
incb
dec
xchg
aaa
add
xor
lret
add
pop
sub
inc
jmp
lcall
in
xchg
in
xchg
mov
outsl
pop
test
push
ficoms
dec
add
pop
test
psubb
in
ja
sub
xchg
js
ret
add
inc
xor
or
cwtl
jo
jno
scas
mov
sub
or
jmp
inc
jo
mov
ret
push
dec
xlat
nop
inc
mov
mulb
sbb
std
aas
mov
aam
adc
add
mov
fcos
ror
push
in
popf
enter
pop
mov
pop
ret
outsb
popf
movl
clc
shr
jp
nop
pop
push
ret
cltd
xchg
jl
daa
cmc
roll
mov
and
sub
lea
cmpsl
and
jmp
cmp
dec
jne
and
subl
fs
pop
pop
clc
sbb
cltd
push
pushf
xor
in
pushw
sarb
loope
iret
aad
in
fcoms
mov
and
cli
cmpsl
fldln2
ret
jbe
pop
icebp
mov
cltd
sub
adc
sarb
sub
pop
mov
fisubl
or
xchg
push
imul
adc
xor
ficomps
seto
test
cmpb
add
in
imul
sub
push
inc
or
movsb
test
pop
or
mov
add
mov
lods
or
daa
xchg
jp
test
loope
xor
clc
cmp
jp
pop
sub
imul
sti
sbb
sbb
aam
ffree
sahf
jae
lret
xor
push
insb
out
cld
push
jmp
push
xchg
pop
pop
cmp
push
mul
hlt
push
sub
popa
xorl
icebp
cmp
fists
daa
mov
cmp
hlt
outsl
push
scas
mov
icebp
inc
push
mov
dec
inc
jb
not
icebp
shl
adc
divb
mov
add
scas
arpl
dec
call
enter
xor
inc
xchg
inc
push
cmp
jle
in
pusha
push
dec
aas
pop
add
push
cmpsb
lret
xor
cmp
cmp
push
xchg
gs
push
cmp
bound
push
leave
aaa
and
jne
imul
lock
inc
movsl
dec
push
stos
sbb
ljmp
jae
out
iret
aam
call
xchg
push
adc
push
out
sub
pop
add
fildll
vpcomw
xor
lock
faddp
ljmp
lods
sub
jl
inc
mov
mov
cs
les
xchg
nop
sub
dec
inc
shlb
sbb
jnp
cmp
add
lods
cmp
jne
cmp
idivb
imul
jecxz
add
pop
addr16
dec
xor
enter
iret
dec
cmpsl
adc
adc
jge
movsl
sub
mov
data16
fcoml
call
into
adc
mov
bound
mov
mov
add
iret
jnp
insl
pop
jecxz
fidivl
sbb
aam
xchg
testl
sbb
lock
jnp
sbb
wrmsr
pop
inc
mov
add
or
mov
mov
or
inc
movsl
jecxz
iret
mov
stos
test
mov
xor
ror
test
sahf
jmp
push
les
push
fstl
and
mov
fcoms
ret
mov
hlt
cmpsl
mov
xchg
xor
stos
xor
sbb
jne
sbb
popf
cwtl
dec
push
and
popf
mov
cs
or
scas
mov
mov
xchg
in
pushf
rol
adc
adc
add
fldz
adc
idivb
in
lea
jge
mov
jo
out
into
dec
pop
popa
ljmp
and
pop
in
sbb
inc
add
mov
add
mov
jmp
xchg
cli
shll
xchg
into
cli
les
ja
das
daa
xchg
iret
loopne
cltd
rcrb
mov
pop
and
lret
xchg
mov
or
imul
fimuls
lods
loop
js
movb
rorb
mov
mov
scas
adcl
xor
lods
stos
mov
adc
je
repz
stc
inc
sub
inc
out
cmpsl
mov
jb
push
sti
sti
rolb
push
and
xchg
pop
enter
pushf
rcrl
push
cli
sub
mov
pop
sub
xchg
popa
sarb
pushf
push
mov
mov
out
cmp
in
je
mov
mov
enter
mov
fsubrs
xlat
lcall
jmp
cwtl
mov
add
outsb
sub
lea
jecxz
sbb
mov
xchg
or
jecxz
mov
icebp
adc
sbb
push
pop
sahf
enter
jns
jle
cmpsb
sahf
mov
clc
mov
andl
dec
adc
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
sbb
outsl
and
mov
mov
lcall
xor
sbb
dec
mov
xor
mov
je
pop
jecxz
in
mov
fld
les
loope
aam
out
cmp
or
cli
cmp
rolb
fisubrs
adc
xchg
add
jmp
stos
jnp
jp
jmp
push
dec
scas
xorps
inc
mov
xchg
add
repnz
inc
push
faddp
dec
or
xor
pop
add
jl
xchg
cmpsb
mov
js
or
es
pop
adc
stos
jbe
arpl
jbe
inc
push
sub
push
inc
test
jno
cmc
dec
test
push
lods
cwtl
xchg
call
pop
xchg
stos
insb
sub
mov
jl
or
dec
xor
lods
fdivrs
inc
mov
mov
jge
pop
popf
sub
cmp
pop
mov
push
insb
lods
dec
mov
inc
adc
inc
sti
int
push
insl
mov
cld
pusha
cmp
cmp
pop
ja
sub
sbb
stos
push
shl
in
cld
aad
sub
inc
out
movsl
in
sbb
sub
std
pop
mov
pop
jmp
add
cwtl
fdivp
sahf
dec
mov
outsl
aam
dec
mov
pop
add
push
xor
das
pop
adc
jnp
loopne
sbb
mov
dec
sub
mov
add
lock
sub
lock
fdivrs
aaa
mov
outsb
out
inc
out
jg
cmp
mov
adcl
sbb
push
leave
pop
lret
add
mov
pushf
xchg
dec
rcrb
sbb
das
lret
aas
pop
je
inc
lahf
cmp
jecxz
out
rcrl
rcll
aas
pop
mov
pop
lea
adc
sar
icebp
cmp
insb
xchg
ds
out
xorb
xorb
dec
dec
rcrl
mov
lret
in
inc
cmp
dec
adc
ret
cmpsb
xorps
add
dec
sbb
mov
jmp
fstpl
std
adc
mov
testb
xchg
dec
cmpsb
test
push
push
mov
insl
cmp
ss
xor
mov
into
in
dec
mov
dec
pusha
dec
les
add
stc
jae
inc
aas
or
dec
push
inc
push
js
xor
push
jmp
mov
in
cmp
mov
daa
xchg
ret
dec
sub
jp
adc
mov
pop
popa
cmp
sbb
pop
adc
xor
movsb
jns
and
jmp
xchg
pop
inc
dec
push
or
mov
outsl
fimuls
inc
jp
mov
js
loop
mov
call
cltd
je
lahf
xor
sahf
repz
mov
add
ja
mov
sbb
mov
or
xor
mov
mov
lcall
call
loope
xor
test
cltd
movsb
adc
mov
je
cltd
fs
dec
std
push
sbb
jbe
imul
mov
cmp
into
pop
rclb
cltd
daa
mov
mov
or
btr
jb
dec
cltd
cmp
xor
sub
divl
sbb
lock
mov
cs
jg
imul
lret
ss
pop
lahf
dec
loop
ja
and
pop
stos
and
push
adc
sbb
pop
push
xor
and
or
xor
xor
clc
lcall
pop
bound
cmp
int3
cltd
subb
clc
je
adc
aaa
xchg
iret
fldl
test
test
xchg
std
sbb
gs
sub
or
fcomp
test
stos
mov
fisubrs
pop
xchg
cmp
jp
out
clc
es
clts
jg
adc
xor
aam
push
outsl
ret
sub
sbb
jmp
sti
lret
cwtl
fwait
push
insl
adc
movsl
and
dec
data16
pop
cmp
push
imul
jg
das
xchg
mov
push
or
sbb
imul
pop
jmp
mov
xchg
or
stc
pusha
jp
xor
mov
scas
mov
push
fimuls
pop
shrl
cmp
mov
mov
lcall
mov
dec
les
jnp
add
outsb
add
test
mov
adc
movsb
test
enter
lahf
jp
aam
mov
sbb
movsb
pop
fwait
popf
jp
mov
mov
ljmp
cmp
arpl
add
xchg
ljmp
adc
sbb
mov
xor
xlat
xchg
loopne
icebp
xchg
jno
xchg
flds
xchg
andl
loop
mov
jno
ret
repnz
push
lock
xor
push
lcall
dec
mov
lock
or
lock
rclb
ds
xchg
cs
jmp
sub
pop
loopne
dec
inc
dec
jno
jno
cmp
jle
push
xor
imul
jge
loope
pop
xchg
cmpsb
test
arpl
dec
mov
inc
push
mov
mov
fdivrl
mov
negl
or
inc
xchg
out
movsl
adc
and
pop
rolb
incb
sbb
mov
lahf
pushf
mov
sahf
call
mov
ss
xor
and
add
jnp
arpl
cwtl
dec
nop
inc
and
xchg
orl
fstpt
imul
sub
mov
mov
push
mov
and
and
cld
dec
testl
mov
inc
movsb
out
fwait
jns
mov
loope
jb
out
lds
cmp
movsl
jmp
jg
mov
outsb
rorl
jp
fidivrl
pop
mov
add
fnsave
push
lcall
or
movsb
cwtl
jne
pop
ret
sahf
dec
fs
data16
dec
sbb
sbb
nop
les
sub
loopne
orb
mov
xchg
imul
sub
mov
lret
mov
es
xor
lods
pop
cmpsl
pop
mov
mov
adc
sbb
iret
fldt
push
pop
mov
sbb
xchg
jecxz
adc
jecxz
andb
hlt
pop
mov
stos
pop
mov
pop
sbb
fadds
mov
sub
scas
jae
mov
push
pop
dec
lcall
jne
sub
clc
in
inc
push
sub
mov
inc
push
inc
mov
lret
pop
mov
lret
cmpl
xchg
cmp
jmp
imul
cmc
int
push
test
mov
outsl
jns
and
xchg
and
sbb
add
mov
loop
aaa
loope
pop
and
stos
cli
inc
mov
lret
mov
cmp
mov
cmp
mov
sbb
jmp
mov
inc
icebp
jne
mov
sti
sub
xchg
lds
test
jp
ljmp
xor
inc
mov
pop
adc
jle
xlat
cmp
jae
rorb
mov
add
pop
sarb
push
jb
leave
ds
addb
incb
mov
in
pop
lret
lods
or
xor
sub
lret
lods
sahf
dec
and
mov
sub
outsl
mov
lds
jnp
sbb
test
repz
dec
xor
sahf
or
xor
dec
mov
or
or
divl
or
mov
mov
sub
pushf
xchg
popa
in
mov
shl
push
outsb
movsb
push
inc
and
mov
mov
pop
mov
ljmp
sub
mov
jl
sbb
mov
inc
icebp
fidivs
icebp
push
or
es
lock
inc
cmp
test
xchg
pop
popa
or
popa
mov
ljmp
cld
push
sub
iret
hlt
mov
xchg
mov
push
hlt
negl
rorb
mov
pop
in
enter
jmp
incl
mov
xchg
fnstenv
dec
popa
loope
idivl
or
mov
sub
dec
fidivrs
jmp
leave
fdivrl
add
pop
sub
outsl
mov
push
inc
jl
jmp
cmp
mov
push
or
mov
out
add
test
cwtl
mov
dec
mov
xchg
cmp
xor
repnz
xchg
mov
pop
test
xor
inc
movsl
popf
and
dec
inc
cwtl
popa
fisttpll
cmp
mov
mov
lret
dec
mov
dec
dec
xchg
inc
jb
aad
adc
divl
xchg
inc
mov
xor
mov
push
fsubrl
sub
pop
aas
pop
pop
mov
fadds
jo
or
notl
fwait
mov
jmp
sub
xlat
mov
push
in
jae
in
or
out
arpl
or
xchg
mov
inc
mov
pop
ret
aas
jbe
les
mov
pop
notl
jnp
imull
popf
ja
xor
jp
divb
add
xchg
jmp
mov
or
mov
cmp
out
ds
mov
push
fmuls
mov
xchg
scas
mov
shll
rorb
add
imul
movsb
lret
mov
call
xchg
mov
int
pop
inc
pop
mov
push
add
sbb
ret
lret
dec
leave
jo
push
or
xor
ss
pop
xchg
xchg
or
pop
or
push
mov
mov
inc
push
stc
fs
ja
cmp
jnp
fwait
insb
or
aad
jno
and
std
sub
daa
and
jge
movsl
sbb
loopne
cmp
adc
pop
cmpsl
addl
testl
mov
sbb
push
xchg
mov
sbb
pop
xor
pop
lods
add
mov
adc
pop
add
dec
sub
insb
lea
inc
movsb
test
int3
call
test
flds
add
into
dec
fsub
pop
fisubl
iret
in
jmp
add
mov
mov
lret
cmp
pop
jb
dec
inc
mov
outsb
and
cmpsl
scas
out
sub
xchg
xor
jge
adc
nop
push
sub
sub
xor
test
sahf
lea
sbb
inc
roll
inc
fsubs
out
es
push
mov
push
add
mov
inc
xor
cmovne
mov
cltd
jo
aam
rcr
in
jmp
lahf
adc
dec
pop
shl
mov
and
or
mov
pop
pop
push
mov
or
shl
mov
mov
cmpsb
repnz
lret
sbbb
rorb
cmp
out
mov
outsl
nop
sbb
jecxz
mov
xchg
jge
xor
cmc
jmp
int
xlat
mov
sbb
push
bound
cmp
inc
xchg
inc
outsb
insl
and
push
push
lret
std
popa
into
inc
cmpsb
mov
add
xor
cmp
pop
adc
sub
stos
xlat
lret
mov
std
fidivrs
ljmp
fdiv
adc
mov
addr16
dec
jl
hlt
sub
mov
jbe
jg
movsb
cld
sub
xchg
sbb
outsb
adc
pop
mov
push
inc
mov
pop
inc
test
mov
scas
xchg
jp
hlt
adc
push
rorb
shr
or
mov
xor
dec
dec
lds
movsb
xchg
lret
gs
cwtl
push
or
add
jmp
jae
mov
add
pop
push
and
int3
pop
arpl
cmp
sbb
sub
jmp
add
push
push
adc
sub
aas
jae
mov
jbe
xor
mov
mov
push
push
movsl
in
xchg
sti
lock
add
pop
push
jp
inc
repz
imul
in
mov
xchg
fmuls
jmp
insb
lods
es
jl
xchg
dec
decl
scas
mov
cli
pop
jnp
push
pop
or
xchg
int3
jno
and
cld
push
loope
sbbl
mov
in
lock
je
lret
testb
daa
adc
icebp
pop
int
insb
data16
jns
adc
sub
cs
aas
and
arpl
call
jb
into
hlt
bound
sub
lcall
ljmp
outsb
int
push
test
mov
fdiv
add
xor
adc
aaa
push
add
adc
movsb
test
cmp
arpl
ljmp
aam
mov
out
jp
stos
sqrtps
scas
sbb
movl
pop
inc
out
shll
clc
xchg
mov
sbb
cmc
add
cmp
sub
add
push
cli
int3
fstl
dec
pmulhw
dec
push
or
or
js
mov
mov
push
decl
add
lds
jecxz
add
mov
and
out
pop
icebp
dec
mov
popf
or
adc
ret
inc
cmp
dec
loopne
lret
xchg
jae
sar
xchg
js
loopne
pusha
xchg
loop
pop
sbb
ljmp
dec
inc
mov
stc
jo
jge
or
mov
push
xchg
jne
clc
pop
jmp
dec
shrl
adc
cmp
mov
dec
adc
inc
jecxz
jg
loope
mov
or
sub
cmpsl
into
hlt
lock
sub
and
ficompl
inc
cmp
sub
cmp
mov
stos
imul
mov
dec
cmp
inc
pop
push
pop
push
pop
xor
nop
jecxz
inc
fstpl
out
jg
insl
pop
fiadds
or
jae
cmp
inc
lods
and
aas
jnp
addr16
fadd
js
or
shll
jmp
stos
inc
mov
xchg
xchg
outsb
pop
filds
dec
divl
enter
in
enter
push
ja
scas
pop
or
jae
lock
cmpb
dec
jno
stos
frstor
xchg
sarl
aas
popa
notb
imul
negl
in
and
iret
mov
xchg
test
push
mov
ss
in
adc
inc
inc
fidivrs
pop
xor
push
clc
jmp
xor
daa
sub
outsl
sti
sbbb
mov
sub
popf
mov
or
push
push
iretw
div
lods
lcall
mov
jb
rcll
push
xchg
inc
sar
ja
adc
cltd
nop
cmp
xchg
jne,pt
xor
xchg
jo
add
pop
push
push
aas
popf
sbb
dec
std
dec
out
imul
roll
jns
sbb
push
ficompl
popa
arpl
cmp
insl
pop
das
repz
pop
adc
stc
rorb
ret
pop
xor
cmp
movsl
mov
mov
xlat
push
in
scas
mov
dec
ret
loopne
sbb
cli
jg
loope
mov
adc
add
movsb
cs
sub
fldcw
in
xor
imul
rclb
jae
jb
cmpsb
outsl
loope
push
imul
sub
jmp
xor
xor
mov
push
test
ret
mov
push
cmc
loop
test
mov
lret
inc
je
lock
pop
sub
fists
pop
mov
lock
in
and
ja
imul
jnp
and
sub
sbb
stc
imul
xchg
fsubr
push
test
or
stc
and
in
mov
jnp
int
call
es
test
gs
cmp
mov
iret
xchg
iret
inc
imull
jecxz
add
inc
push
repz
call
mov
lods
sbb
aam
in
xor
testl
lahf
push
inc
popa
ds
cmpsl
jle
sub
inc
mov
popa
adc
imull
ret
xor
pop
add
pop
daa
scas
icebp
lret
pop
rclb
loopne
mov
mov
lock
mov
pop
push
adc
mov
ret
and
pushf
jbe
sbb
push
sbb
mov
call
push
mov
in
loop
mov
cmp
cmpsb
decb
sbb
adc
or
test
cmp
or
out
mov
xor
add
xlat
data16
inc
fs
data16
or
fistl
loope
sbb
inc
xchg
and
push
sbb
dec
dec
sub
fcoml
push
lgs
xchg
add
or
inc
aas
movsb
dec
and
int3
mov
push
insb
mov
mov
icebp
xor
pop
xorl
dec
lods
lahf
mov
call
or
xchg
cmp
in
fdivrs
add
sub
sub
dec
or
and
ret
divb
into
or
sub
insl
push
add
int
scas
sub
das
test
test
cmp
mov
jecxz
mov
sub
cmpsb
cmp
movl
jb
mov
jae
ror
push
mov
inc
orb
fwait
scas
clc
sbb
sbbb
sub
cli
testb
js
call
push
or
andb
adc
xchg
lods
sar
loop
in
mov
sbb
clc
sbb
jge
adc
ljmp
jnp
inc
pop
incl
pop
push
in
into
mov
in
add
inc
scas
mov
outsb
mov
pusha
add
scas
addr16
mov
xorl
xor
js
je
mov
das
ret
jnp
inc
mov
push
movsb
sbb
pmaddwd
pop
imul
scas
out
jge
insl
test
xchg
jle
push
dec
mov
or
lea
dec
push
mov
sbb
cmp
fwait
jb
repnz
mov
in
mov
hlt
cmp
sub
sbb
mov
lods
sti
aas
lcall
xchg
or
xor
jmp
push
mov
push
fsubl
ret
cmp
and
fldenv
mov
mov
push
jo
inc
xor
sub
mov
add
into
sbb
pushf
mov
jecxz
mov
sub
shr
popa
lea
pop
jg
into
out
loope
xchg
je
jns
mov
lea
xchg
jae
pusha
mov
cli
cmpsb
loop
sbb
sub
adc
mov
pop
or
loopne
sbb
push
insb
add
outsl
aad
or
ja
inc
lahf
mov
jno
mov
or
xchg
je
mov
rolb
add
mov
test
sbb
ret
pop
std
les
push
into
inc
mov
inc
sarb
push
sub
shll
pop
lods
pushf
jge
cmpsl
shlb
mov
iret
jl
dec
mov
fadd
lret
mov
jnp
nop
add
imul
jp
pop
and
push
dec
lods
jb
mov
arpl
xchg
aam
xchg
jle
data16
fisubrl
cld
pop
std
pop
std
int
inc
mov
sub
fadds
cmp
push
mov
sbb
test
mov
loop
sub
adc
cmpsb
scas
sub
pop
mov
mov
orb
mov
cld
popa
jecxz
movsb
add
insl
scas
mov
sbb
stos
lcall
loop
outsl
rcl
mov
or
cmpsl
or
pop
push
out
adc
cltd
stos
cmp
es
push
dec
mov
sahf
stc
pop
sahf
int
pop
push
js
or
add
add
orb
push
popa
ja
cmc
sub
dec
int
jl
cmc
cmpsl
mov
adc
inc
jecxz
int
mov
xor
xchg
dec
or
mov
cld
inc
aam
pop
pop
add
call
mov
mov
mov
jp
pop
pop
gs
leave
pop
sbbl
cmp
lret
push
push
pop
or
lods
inc
mov
out
dec
loop
or
orb
jne
lea
lret
jns
aaa
mov
jg
mov
cmp
push
push
hlt
shlb
in
lcall
loopne
adc
outsl
push
sarl
adc
out
fs
xchg
repz
out
pop
inc
popa
ficomps
sbb
loopne
add
fwait
xchg
pop
push
jo
xor
bound
cmp
lretw
imul
aaa
jo
mov
loopne
mov
rolb
aaa
pop
inc
xor
in
popf
ljmp
out
push
fldcw
sti
push
push
push
rclb
cmpsb
mov
test
and
mov
repnz
mov
mov
mov
mov
lcall
loopne
sub
adc
push
mov
int
aad
jno
push
add
mov
mov
fistl
pop
lahf
pop
inc
xchg
mov
jne
xchg
push
fisttps
xlat
mov
cli
loop
sbb
jmp
dec
ds
pop
aam
out
imul
subb
mov
stos
add
repz
push
or
pop
adc
hlt
cmc
in
cmc
or
ds
fimuls
mov
pop
jp
xchg
std
xlat
mov
inc
xchg
in
pop
push
or
inc
dec
es
push
cltd
sub
js
or
pop
and
sbb
ret
iret
jne
into
into
jb
adc
dec
mov
stc
inc
repnz
popf
push
pop
rcrl
mov
shlb
insb
inc
sti
sub
xlat
mov
jle
fisubs
or
test
cltd
inc
cmp
fwait
outsl
push
mov
stos
clc
sarl
add
movsl
movsl
and
and
shll
leave
push
shrb
rcl
push
or
pop
cmp
xchg
arpl
cmc
inc
mov
sti
pop
xchg
sbb
lcall
arpl
inc
pop
pop
loopne
nop
mov
fs
xchg
jno
and
mov
scas
pop
enter
sbb
or
lock
icebp
lods
popa
xchg
fs
inc
adc
inc
cmc
dec
hlt
insl
jb
push
adc
pop
sbb
addr16
clc
and
repnz
cmpsl
pop
sahf
sub
popf
sbbl
and
jge
adc
xchg
sub
pop
inc
add
into
mov
adc
xor
xchg
fldt
scas
ficoml
in
adc
jae
pop
jno
push
mov
int3
outsl
pop
sbb
cmp
sti
rcrl
mov
push
fildll
repnz
sbb
sahf
jg
pushf
fst
push
mov
movsl
std
and
out
adc
ljmp
decb
scas
dec
inc
cmc
sub
cs
loop
or
xorl
loop
mov
xor
cmp
sub
sub
shr
pop
xchg
dec
imull
dec
outsl
movsb
push
int3
test
or
lods
decl
or
addr16
jge
pop
sahf
dec
inc
pop
jle
inc
sbb
pusha
fsub
fs
push
jmp
je
and
dec
mov
dec
aas
insl
insb
cmp
daa
rclb
hlt
cmp
mov
fdivrl
jo
lahf
scas
ja
cmp
enter
fcompl
cs
xchg
leave
popw
sbbb
add
cwtl
ds
sbb
push
cltd
pusha
pop
dec
xchg
inc
mov
adc
ljmp
push
loop
std
iret
lods
gs
cmp
sarl
insl
adc
cmpl
stos
inc
inc
ja
push
inc
gs
movsb
lahf
imul
pop
cmp
mov
jo
mov
adc
push
dec
and
fcoms
loop
mov
idivl
aas
in
adc
sub
clc
into
xor
mov
add
rcrl
cs
pop
imul
dec
pop
lods
nop
add
insb
mov
or
mov
inc
xchg
sub
jmp
fdiv
sbb
inc
mov
xchg
hlt
mov
pop
mov
xor
clc
cmpl
push
mov
shll
daa
cmpsb
or
loopne
gs
outsl
mul
sub
pop
xor
and
xor
jmp
andb
or
jmp
lcall
push
cmp
add
insb
in
add
lock
ficoms
ficoml
hlt
cmp
scas
or
jge
sbb
mov
out
lods
mov
out
cmp
popa
mov
mov
loop
aam
imul
fmul
lea
mov
xorb
pop
push
lret
xchg
clc
rolb
and
dec
or
jne
outsl
das
sahf
add
jg
jbe
mov
jmp
and
jmp
mov
cmp
xchg
movsb
mov
std
repnz
mov
outsl
or
xchg
fidivs
movsb
out
mov
into
test
xchg
inc
fs
leave
or
fldz
xor
and
xor
fidivrl
loope
mov
cmpsb
xor
in
adc
sbb
mov
xchg
adc
scas
push
test
add
bound
push
addr16
sub
sahf
and
hlt
lahf
inc
js
in
add
rorl
inc
lock
xor
xchg
jae
sub
rclb
test
xchg
cmp
aaa
dec
cmpsl
cmp
push
ret
mov
push
sub
dec
scas
jmp
fnstenv
push
and
jmp
mov
add
scas
loopne
or
mov
mov
ljmp
cltd
je
lahf
xor
movsb
mov
sbb
insl
out
mov
hlt
add
les
pop
adc
call
and
inc
mov
add
fdivrs
pop
imul
xchg
mov
cmpsb
cs
mov
popf
cmp
iret
out
push
pushf
or
xor
int
and
adc
repz
jbe
ja
int3
adc
call
mov
sar
jge
leave
insb
imul
inc
rcrl
xchg
pop
or
addl
sbbb
jbe
test
xor
rcrb
xor
xchg
xor
push
aas
test
cmp
adc
out
pop
int3
pusha
gs
push
lret
out
pop
lock
push
idiv
in
jno
in
cmp
aaa
sbb
in
pop
pop
rcr
sub
sub
outsl
enter
ret
cmp
xchg
jecxz
lret
or
dec
and
stos
fdivl
mov
pop
mov
add
in
repz
mov
or
jbe
out
test
pop
cs
cmp
out
addr16
jp
sbb
add
loop
pop
stc
and
sahf
xor
cmpsl
sub
in
pusha
pop
push
dec
jl
xor
loope
imul
aaa
aaa
les
mov
fsubrs
bound
xlat
or
mov
enter
ss
je
jo
adc
stos
enter
int3
jne
jo
sbb
inc
add
mov
fs
xchg
pop
hlt
scas
and
dec
jns
mov
fldt
pop
aas
in
xor
arpl
xchg
out
gs
std
mov
push
jl
ja
or
pop
sbb
mov
mov
add
xchg
fcoms
cmp
iret
nop
imull
loopne
nop
pusha
push
push
fbstp
adc
loope
inc
bound
fimull
mov
call
loopne
cwtl
dec
mov
imul
leave
daa
xchg
cmpsb
mov
les
sub
arpl
int3
ret
out
push
ja
push
loope
push
cmp
or
lret
je
dec
lret
scas
mov
std
push
xor
adc
or
mov
stc
mov
xchg
enter
pop
sub
and
fs
faddl
push
cltd
fsubs
sbb
es
hlt
sub
lods
pop
dec
lock
jecxz
mov
jno
jge
scas
sbb
mov
int3
jmp
stc
out
pop
dec
jg
scas
or
xlat
and
out
les
inc
mov
jb
jl,pt
imulb
fdivs
out
out
jbe
cld
aam
dec
inc
or
divb
mov
pop
dec
cmp
stc
pop
jo
lret
xchg
and
sub
lea
lahf
int3
mov
or
ret
xor
xchg
imul
lcall
jae
in
inc
jo
cmpsl
testb
xchg
adc
sbb
call
mov
outsb
pop
mov
shlb
adc
push
mov
ret
popf
out
loope
movsl
mov
aam
mov
movsl
out
insb
lahf
cli
add
adc
xchg
shrb
and
cwtl
aam
ljmp
sub
add
mov
fdivl
lcall
cmpsl
out
jmp
cmpb
popa
mov
mov
jne
xchg
and
movb
cli
inc
les
adc
mov
or
js
fistps
fwait
pop
inc
adc
adc
addr16
pop
rorl
fcoms
mov
iret
scas
je
add
push
pop
cmp
mov
loope
js
cmp
hlt
out
pop
lods
pop
or
add
fs
lcall
or
push
aad
outsb
ss
rcr
call
xor
pop
add
jmp
rcrl
or
psrlw
inc
lock
cmp
popf
popf
add
jne
out
ror
les
and
xchg
insb
in
and
in
sub
pop
loop
inc
in
mov
aam
mov
sub
cmp
push
aad
out
fs
movsb
fs
pop
loope
pmaxsw
push
insl
std
daa
fstpl
shll
add
adc
popa
cmp
xor
imul
sbb
andl
je
lahf
xor
enter
std
xor
popf
in
filds
pop
sbb
adc
andl
xchg
xchg
js
cmpsb
push
call
mov
jo
xchg
push
and
pop
inc
mov
test
cmp
xchg
test
sbb
test
fucomp
iret
loop
add
testl
ret
mov
mov
shll
xchg
jb
push
outsl
add
rolb
in
xor
xchg
mov
dec
ja
or
loope
int
mov
push
xchg
in
adcb
in
jg
mov
push
int3
ret
jae
mov
mov
icebp
sub
lea
int
mov
leave
cmc
xchg
cwtl
dec
leave
xor
mov
jbe
mov
cmp
push
out
fwait
cmp
daa
cld
in
push
cwtl
ret
jle
add
push
das
push
jg
pop
push
inc
sbb
push
cmp
and
or
or
cwtl
ss
aad
mov
add
and
fiadds
xchg
cmpsl
leave
push
pop
sub
mov
cld
outsl
insb
inc
xor
pop
daa
xchg
movsb
lahf
subl
movsb
jno
stos
mov
mov
cmp
rorb
lea
mov
gs
jl
lods
cli
mov
movl
iret
sub
xor
insl
mov
add
iret
push
mov
das
pop
arpl
test
push
fnstenv
inc
jmp
push
xlat
mov
int3
mov
movsl
adc
xchg
xor
test
and
std
scas
stc
ror
out
shrl
aas
mov
or
scas
push
adc
mov
add
cltd
xor
arpl
xor
dec
emms
mov
push
not
and
in
mov
arpl
movsb
lods
leave
cmp
mov
out
out
mov
pop
sbb
pop
insb
xor
cmpsl
add
xchg
push
cld
and
add
fwait
in
sbb
cs
out
sahf
leave
lcall
sbb
lahf
shlb
and
mov
inc
dec
ficoml
xchg
mov
fwait
je
adc
stos
fisttpll
mov
lcall
pop
jne
mov
jns
push
inc
clc
test
enter
mov
xor
orl
mov
ja
and
pop
int
movsb
mul
call
mov
dec
cwtl
dec
pop
xor
in
xor
fmul
add
and
push
mov
lea
adc
sbb
daa
add
movsb
push
mov
jmp
push
loopne
testl
xchg
sbb
mov
loope
jg
xchg
mov
dec
pop
pop
or
adc
cld
jmp
pop
dec
cmp
mov
testl
or
repz
leave
stos
jg
push
mov
mov
pop
and
ds
jnp
out
daa
aas
push
adc
pop
xchg
push
das
ds
cmc
sbb
fdivr
in
cmpsl
outsl
or
sbb
xor
cmp
push
repnz
je
fcompl
not
add
icebp
xchg
push
jbe
mov
mov
inc
out
test
out
and
xor
adc
aad
lret
outsl
fdivrp
jne
push
rcrl
in
sub
out
pop
mov
mov
fcmovbe
sub
into
mov
out
roll
jg
jecxz
sub
xor
icebp
call
out
sbb
lds
js
xor
repz
jae
daa
rcl
xlat
addr16
mov
sbb
push
sbb
fbld
leave
mov
mov
aas
fimuls
and
out
sbb
add
xchg
sti
notl
pop
aaa
aad
lcall
dec
rclb
xor
cmp
jne
loopne
xor
xor
inc
mov
jmp
mov
mov
sbb
pop
stos
push
sbb
dec
dec
sbb
jo
mov
mov
repnz
outsl
ficompl
fiadds
add
add
addr16
addl
fisttps
jg
repz
lods
inc
xchg
fiadds
sbb
push
cld
dec
fnsave
sub
fwait
nop
lcall
pusha
dec
ss
ficoml
in
mov
or
push
int
inc
and
ret
ret
cmp
incl
add
popf
xchg
sub
es
or
sub
sbb
sub
rorb
scas
inc
xor
stc
xchg
xchg
movsb
lcall
inc
xor
lods
movsl
mov
loop
icebp
mov
jns
inc
fsubs
gs
cmc
and
push
adc
xchg
scas
mov
add
fisttpll
cmp
xchg
cmpsb
add
sub
call
cmpsl
mov
hlt
scas
mov
mov
sub
addb
cmp
test
jecxz
maxps
sbb
gs
jns
xor
push
cltd
push
in
js
loopne
stos
adc
mov
or
ret
loope
mov
repnz
cmc
jae
mov
push
imul
test
adc
insb
stc
cmc
and
sarl
out
pop
lret
mov
popf
or
add
repnz
jmp
out
dec
in
fld
cmc
icebp
add
test
shll
xchg
dec
mov
push
ljmp
push
je
cmp
test
repnz
push
mov
xor
fwait
jb
outsb
mov
movsb
mov
aaa
cmp
pop
lock
ja
je
push
aam
sbb
xchg
addr16
popf
ret
rol
lahf
je
aaa
negl
mov
inc
push
and
dec
mov
mov
mov
dec
or
stc
xchg
cmp
aaa
push
dec
sbb
fidivs
cs
subb
sbb
rcll
out
mov
mov
jns
push
das
mov
call
mov
mov
sbb
and
adc
adc
out
or
scas
jne
testb
xchg
xor
add
out
xchg
mov
sbb
jae
mov
lret
movsb
xchg
adc
push
orl
sbb
call
pop
lea
push
lahf
adc
stos
jmp
cmp
inc
filds
int
mov
add
out
sub
stos
fmull
and
or
mov
xor
sahf
mov
sbb
xchg
movsb
repnz
mov
fmul
and
fnstcw
movsb
pop
enterw
je
repnz
cmp
jno
int
in
scas
jmp
and
repnz
ds
dec
loope
cmp
xchg
push
fs
dec
cmp
test
or
mov
movsl
pop
or
sbb
in
loopne
mov
xor
insl
ret
into
fnstsw
jmp
xchg
in
adc
xchg
cwtl
mov
pop
adc
cmp
pop
je
pop
dec
lahf
cmp
cmp
icebp
inc
inc
sub
push
jmp
cli
cmp
ret
cmp
mov
icebp
and
or
dec
enter
clc
imul
sub
jge
inc
pop
insb
fisubs
sbb
cmpb
cmp
lea
scas
adc
aam
fldt
add
cmp
sbb
adc
ss
and
xor
pop
aas
xchg
out
and
lea
jae
aam
out
psraw
and
addb
xchg
sbb
idivb
es
sub
xchg
das
lret
mov
xchg
data16
in
add
ss
add
incl
jmp
pop
fsubrp
mov
pop
or
filds
xchg
dec
js
xor
popa
push
push
fdivl
dec
mov
adc
jns
mov
xchg
cmpsb
add
push
mov
cmp
ds
push
mov
mov
mov
ret
mov
sub
pop
imul
iret
lods
jmp
pop
jno
and
xlat
scas
rcrl
dec
cltd
xor
pop
mov
movsl
xor
jge
insb
lcall
sub
sahf
icebp
xchg
icebp
push
nop
outsl
iret
jne
xlat
jo
scas
gs
loopne
and
adc
adc
jno
fidivl
pop
movb
testb
push
idiv
dec
movsl
fstpl
sbb
jmp
pop
fldenv
cmp
inc
adc
cmp
dec
adc
sub
lods
ds
jl
push
jmp
add
enter
jp
lret
dec
int
fidivrs
pop
test
push
mov
jle
mov
xchg
in
add
sarb
or
lock
iret
sarl
fstps
mov
mov
pop
mov
push
push
data16
shrl
xchg
dec
add
mov
stos
outsb
test
scas
xor
daa
mov
xrelease
pushf
repz
out
andl
in
fisttps
add
xchg
and
mov
sbb
enter
lea
stos
mov
sub
mov
test
push
push
dec
pop
outsb
jle
lods
xchg
cmp
call
xor
push
lret
imul
enter
jae
sub
cwtl
mov
call
repnz
cli
arpl
and
inc
nop
testb
lret
mov
orl
sbb
movsb
inc
pop
xor
jmp
pop
and
out
or
clc
je
add
mov
movsl
dec
ljmp
sahf
pop
xchg
xchg
jle
mov
outsl
fiaddl
adc
xor
sub
popf
lods
jnp
addr16
adc
dec
lea
mov
pushf
lahf
scas
mov
repz
in
mov
push
and
sub
lret
divl
out
stc
jb
mov
jno
mov
cmp
jnp
pop
ljmp
ja
fs
shlb
inc
lret
fbstp
aad
jo
mull
xchg
dec
or
pop
jl
mov
lahf
movsl
ficoms
sub
dec
sub
jae
sub
dec
leave
lcall
loop
sbb
ror
dec
test
mov
adc
rorb
and
outsl
repz
ss
js
mov
cmp
inc
cmpl
lods
jns
ja
jle
adc
xchg
jmp
xchg
lods
out
mov
arpl
dec
test
ds
jmp
pusha
cld
fs
dec
and
aaa
jbe
sbb
pop
cmpsl
push
frstor
ret
bound
add
dec
add
lret
aas
aas
dec
das
mov
push
fnsave
in
jl
dec
lcall
push
inc
push
mov
icebp
pop
push
in
mov
scas
push
stos
jae
fsubp
pop
mov
mov
movsl
add
int3
mov
mov
adc
jno
nop
int
and
test
adc
sub
inc
mov
aaa
mov
sbb
add
into
mov
sahf
mov
xchg
clc
inc
sti
insl
jle
sarl
mov
fisttpll
adc
xor
and
imul
mov
test
popf
loop
adc
mov
lahf
aas
inc
les
clc
mov
push
iret
pop
jmp
xchg
shlb
or
test
movl
or
cmpsl
loopne
xor
loop
scas
pop
sbb
pop
mov
xchg
xchg
es
icebp
pop
stos
fldt
add
pop
movsb
xchg
push
dec
lods
mov
loope
test
push
adc
lea
add
add
shlb
movsl
xchg
push
imul
pushf
mov
ja
jnp
rcr
je
insl
adc
out
jne
mov
lods
sti
push
and
insb
ljmp
dec
insl
inc
xor
outsb
sbb
or
int3
sbbl
pushf
out
jns
jg
shll
xchg
std
fs
mov
jecxz
das
mov
aas
xchg
loope
daa
mov
jb
xchg
cmp
int3
inc
xchg
loope
sub
lock
mov
lods
stos
push
dec
pop
clc
jno
test
lea
dec
and
mov
jno
jp
insl
xor
stos
and
xor
push
das
dec
in
jge
pop
mov
push
xor
sbb
insb
push
mov
lock
lock
inc
sub
pushf
pop
imul
sub
add
ficomps
pop
or
jmp
ljmp
aaa
popf
out
cs
gs
imul
addr16
subl
jl
inc
xor
int3
mov
arpl
jmp
pop
fxch
adc
in
or
push
orl
loope
sbb
push
cltd
in
add
or
mov
mov
and
icebp
jmp
movsb
inc
jge
lahf
xchg
ljmp
xchg
movsl
xchg
and
sbb
ret
imul
iret
mov
adc
rorl
not
addr16
mov
outsl
stos
in
sbb
loope
out
cmp
addr16
test
mov
xor
and
xlat
imul
arpl
mov
cmc
shlb
xchg
add
jae
loope
jle
xor
and
xchg
aam
cmp
push
and
scas
jns
jno
out
inc
dec
jns
inc
push
ss
mov
cwtl
pushf
adc
and
cmp
bound
call
outsl
dec
xchg
in
ret
sahf
ret
mov
sub
jle
out
add
popf
rolb
cltd
mov
adc
pushf
mov
mov
and
mov
sarb
pop
lcall
lret
outsb
mov
mov
rorl
sbbl
jmp
xor
jns
stc
lret
cmp
dec
xchg
out
lahf
pushf
hlt
adc
push
cmpsl
adc
jo
cmpb
in
es
mov
cmp
loope
sbb
movsb
cltd
scas
add
shrb
sub
inc
mulb
leave
ret
mov
loop
scas
dec
je
addr16
rcll
push
jo
pop
or
xorl
pusha
mov
dec
jns
js
daa
mov
mov
imulb
hlt
adc
int3
cltd
or
scas
push
outsb
sbb
fsubl
je
sbb
bound
sub
mov
jmp
pop
xchg
jge
loop
add
mov
enter
adc
mov
outsl
ljmp
jg
pushl
jns
pop
repz
mov
lds
notl
scas
mov
adc
cmp
ds
in
loope
inc
inc
mov
jp
pop
lds
xor
call
arpl
pop
int3
mov
test
lods
shrb
jge
std
mul
jno
mov
adc
js
addl
push
jae
jo
pushf
icebp
pop
nop
sub
adc
enter
popf
imul
aaa
js
mov
xchg
mov
pop
scas
adc
divl
add
push
std
jmp
mov
gs
push
rcll
jbe
pop
insl
mov
fdivrp
mov
adcb
testb
pop
out
xor
and
push
jno
push
dec
pop
inc
out
iret
testl
sub
mov
xchg
out
ret
arpl
push
cmp
pop
mov
out
inc
dec
dec
nop
push
cmpsb
dec
xor
cmp
and
mov
sub
sti
adc
push
adc
ret
sbb
aas
push
rcl
scas
gs
xchg
bound
je
fldl
arpl
sbb
popa
or
cld
ret
push
cmc
fs
fs
sti
xchg
jnp
inc
dec
jns
mov
mov
jge
fsubs
mov
subl
pop
in
push
jmp
pop
negl
mov
sbb
lods
fcom
xchg
xchg
adc
dec
xor
sbb
mov
mov
jb
ds
add
sahf
outsb
dec
in
daa
hlt
fwait
pop
or
mov
jge
add
mov
loope
testb
sub
roll
std
movsb
mul
jnp,pt
cltd
jle
ficoms
test
mov
stos
push
loope
add
mov
hlt
es
mov
adc
adc
shrb
filds
cmc
mov
pop
jnp
cmc
icebp
jae
shll
pop
addr16
xchg
xchg
inc
inc
inc
mov
xlat
cmp
stos
push
mov
push
inc
or
ret
movsb
sbb
xor
cmp
notb
push
fmull
pop
movsl
push
aaa
add
cmpsl
shrb
xor
pop
dec
sbb
cld
push
jo
loopne
push
sbb
xchg
push
ljmp
sub
adc
sub
clc
sub
or
cmp
inc
push
arpl
and
push
subb
jae
imul
imul
andb
andl
pop
hlt
in
popa
out
int3
mov
cmp
cli
dec
and
shll
mov
push
jns
xchg
pop
sbb
pusha
mov
inc
pushf
mov
mov
dec
mov
inc
jnp
and
sub
push
sub
sub
jo
jne
inc
cmp
paddb
cmp
cmpsb
call
mov
test
ficompl
push
punpcklbw
subl
fstps
les
xchg
stc
lcall
cmp
xlat
mov
or
fdivl
dec
in
mov
mov
mov
enter
jg
and
aas
adc
inc
xor
and
outsb
inc
hlt
add
and
pop
xchg
vmread
pop
pop
add
push
sarl
aad
mov
mov
dec
or
out
stos
and
rcl
les
aam
loope
xor
lock
mov
mov
inc
mov
mov
hlt
inc
popf
push
sbb
sub
mov
imul
insb
push
cmp
ja
and
sbb
popf
shll
ret
sti
test
aas
mov
add
add
inc
mov
icebp
push
call
add
testl
cmp
sbb
popf
aad
mov
xchg
add
xor
xchg
xchg
inc
ja
into
addr16
mov
xor
mov
nop
aaa
pxor
fstp
outsb
mov
push
je
jno
adc
adc
dec
sbb
rcl
out
insb
jae
xor
push
je
cmpsl
dec
sub
jae
pop
mov
sti
xchg
test
push
xchg
aad
bound
and
xlat
xor
mov
sbb
test
ret
inc
out
jbe
clc
dec
ror
push
nop
jno
fadds
adc
xchg
fbld
pop
gs
dec
adc
lret
stos
subl
insb
inc
pusha
push
pop
cmp
data16
dec
xlat
icebp
pop
outsl
stc
scas
push
outsb
push
or
jg
xchg
or
jmp
enter
xlat
push
xor
inc
or
scas
mov
fisubrl
leave
stos
jno
mov
or
incl
jns
and
outsl
adc
adc
jecxz
and
loope
inc
jecxz
pop
mov
cld
mov
lret
shlb
xchg
fstps
hlt
mov
xchg
sbb
pushl
int
xchg
sub
test
mov
les
mov
out
cs
xorb
pop
mov
shlb
ret
out
mov
in
popf
xor
loopne
mov
xchg
add
shll
out
or
stos
inc
emms
push
hlt
xor
rcrb
flds
enter
xor
and
jecxz
jl
push
mov
mov
mov
xchg
mov
inc
sub
and
mov
ja
dec
out
out
es
fidivl
in
fwait
sbb
movsl
cmc
mov
pop
xchg
je
xchg
xor
and
movsl
sarl
push
iret
popa
fistpll
aam
das
dec
int
sub
mov
test
and
std
jmp
bound
inc
xor
cmp
sub
mov
aas
out
and
sbb
repnz
outsb
xchg
cmc
dec
inc
xor
cmpsl
repnz
sub
lea
cmp
push
xchg
add
mov
dec
pop
mov
xor
outsl
xchg
dec
faddl
das
mov
fistpll
dec
loopne
push
sbb
out
mov
xor
icebp
cld
aas
and
jl
jge
nop
rclb
sub
sbb
sbbl
inc
push
loop
cmpsb
xchg
inc
xor
mov
into
jo
jp
dec
dec
mov
cs
jns
pushl
xor
push
xlat
cltd
sbb
jae
mov
daa
lods
mov
idivb
cmp
fildl
sti
lds
ss
mov
sti
fistpl
sub
mov
je
imul
push
jns
dec
pop
mov
sbb
das
pushf
sub
dec
aam
jp
pushf
mov
adc
fucomip
push
ljmp
cmpsb
push
pop
sahf
dec
xchg
push
jecxz
push
mov
lea
mov
cwtl
cmpsb
cmpl
mov
and
lods
mov
xlat
mov
mov
ret
les
lret
call
les
ljmp
mov
das
ss
mov
stos
hlt
push
das
ror
add
popa
jnp
pop
outsb
mov
adc
aaa
shll
call
aad
inc
mov
mov
adc
in
add
xchg
adc
dec
das
pusha
sbb
out
stc
sti
and
pusha
jg
rcrl
cmp
outsb
test
jge
fisubl
pop
cmp
ret
out
insl
out
jne
ficoms
mulb
dec
loopne
ret
or
add
push
mov
fldcw
mov
and
or
aam
adc
arpl
aas
or
push
sub
leave
xor
imul
ret
mov
xor
push
push
incb
imul
or
xchg
fbld
ss
push
dec
adc
cld
lret
adc
loop
dec
ret
cli
aas
add
repz
xchg
xchg
pop
fisttpll
popf
les
or
test
dec
stos
pop
mov
cmc
inc
jo
mov
pop
loope
fldenv
xor
sbb
jle
ds
or
xor
inc
in
neg
lock
test
mov
add
in
movsb
shl
mov
inc
lret
arpl
mov
jmp
aas
test
aam
mov
jns
push
push
lea
lods
movsb
cwtl
cmp
lahf
mov
or
cmp
lret
ficomps
jmp
add
mov
jo
fisttps
popa
xchg
data16
xor
jp
push
je
push
push
leave
jl
popf
mov
imul
adc
imul
push
jne
push
mov
and
mov
mov
jne
outsl
push
imul
repz
lret
adc
addr16
push
pop
pop
cs
jmp
popf
out
push
adc
pop
pop
push
jo
push
push
mov
rol
and
xchg
push
sub
or
xor
stos
or
das
sti
data16
int3
jno
jb
fists
rcr
jo
sub
adc
rorl
jae
cwtl
inc
loopne
push
jle
jmp
and
bound
lds
popa
int
lcall
add
lcall
mov
rcrb
jge
bound
les
mov
push
mov
ja
lods
sar
or
mov
lods
addr16
out
inc
mov
imull
add
stos
pop
xor
mov
es
rolb
aaa
iret
jle
push
pop
fld
jmp
sbb
insb
leave
stos
inc
push
test
sub
imul
xor
das
movsl
cmpsl
jno
mov
aaa
xchg
mov
movb
pop
loopne
aaa
addr16
or
jle
jmp
jno
in
or
dec
cmc
dec
sbb
mov
fsubs
loope
mov
adcb
sub
adc
in
xchg
sbb
out
xchg
fisubrs
jb
icebp
dec
jae
and
ret
test
gs
dec
add
shr
fld
je
repnz
inc
repnz
pop
es
and
mov
pop
xor
lods
out
sub
daa
mov
out
iretw
xor
mov
sbb
nop
mov
push
iret
stos
pop
insl
xchg
pop
in
sarb
add
out
inc
mov
lock
pop
jne
mov
xchg
pushl
cmp
or
sub
xchg
inc
pmullw
shrb
imul
mov
or
jb
mov
dec
pop
jb
out
push
shrb
xor
mov
pusha
bound
test
jl
jbe
mov
mov
iret
pop
rol
ret
xchg
cltd
jb
and
or
dec
push
mov
cmp
jle
in
ss
adc
and
or
iret
dec
mov
cmp
lret
fistpll
and
pop
mov
jnp
pop
loop
pop
jae
mov
xchg
rcll
push
xchg
ret
mov
outsb
inc
sub
popa
pop
pop
js
mov
psraw
xchg
mov
mov
xor
adc
inc
sti
add
mov
jnp
push
jl
jb
cmpsl
lods
inc
lret
sbb
shl
inc
fmul
ss
or
dec
add
cld
sub
add
cmc
shrl
push
clc
test
push
jg
stos
adc
je
lcall
mov
cmp
push
call
int3
mov
sahf
pop
sub
mov
popa
xlat
cmpsb
mov
sbb
sbb
mov
jns
push
push
sub
jbe
or
and
inc
hlt
loope
xchg
mov
test
add
mov
or
and
ja
and
shlb
sbb
out
pop
jbe
jno
out
jae
sub
mov
jecxz
jb
xchg
cmp
subl
shrl
test
lock
sbb
imul
cltd
icebp
por
jno
repnz
push
push
fildl
popf
gs
neg
aas
mov
cmp
js
mov
or
outsb
adc
lods
sub
xor
mov
in
fwait
lds
cmpsb
push
lods
gs
daa
in
or
or
mov
mov
mov
add
sbb
and
shlb
push
inc
push
cld
into
or
idiv
xchg
lods
cmp
inc
push
dec
mov
lcall
sahf
dec
cmp
mov
mov
test
lods
adc
mov
mov
mov
adc
cmpsb
in
punpcklbw
aad
cld
fwait
add
scas
pop
mov
push
stos
cmp
pop
stos
arpl
fnstcw
fstl
add
js
out
mov
inc
pushf
xchg
sbb
push
or
inc
or
add
pop
push
out
mov
push
cmp
vshufpd
xchg
addr16
mov
jno
int
adc
xchg
mov
or
mov
int
sub
xchg
inc
fcmovne
mov
jle
inc
lret
sbb
push
into
xor
popa
cwtl
xchg
mov
mov
push
movsb
pop
and
pop
sub
pop
leave
mov
inc
clc
ja
outsb
xchg
loop
xchg
mov
pop
lock
xchg
movsb
inc
pop
add
insl
pop
clc
mov
out
adc
std
mov
ret
push
mov
cmpsb
repnz
adc
push
adc
xlat
sbb
lret
std
pop
sarb
inc
push
aad
and
leave
add
mov
in
rol
lret
sub
mov
mov
imul
push
stos
stc
es
lods
mov
cwtl
push
xor
and
jns
punpcklwd
push
lret
sub
mov
mov
pop
jmp
add
add
dec
xchg
in
adc
cmp
stos
cmp
jmp
sbb
ret
std
fs
cld
js
sbb
jnp
lock
fdivs
mov
lods
and
and
push
jne
in
pop
sbb
mov
fnstenv
dec
xor
jne
add
mov
stos
leave
xchg
prefetchwt1
or
insb
clc
shl
mov
mov
lret
test
outsb
xor
cmp
fstpl
dec
sub
std
dec
lret
xchg
dec
inc
fmuls
dec
jno
pop
fiadds
faddl
scas
jle
loope
inc
add
or
call
mov
xor
rolb
or
loope
rcll
and
pop
or
lret
and
cmc
inc
xchg
mov
add
mov
cs
bound
push
sub
stos
roll
jnp
pop
adc
push
mov
jns
inc
xor
mov
sbb
in
dec
xchg
or
push
xchg
sub
int
jbe
mov
cmpsl
test
dec
scas
cli
jne
cld
insb
sub
jle
sub
fimuls
sub
or
fs
adc
push
es
pop
inc
cmp
inc
outsb
pop
xor
cmp
add
mov
xor
pop
jno
fwait
dec
daa
or
daa
repnz
popf
mov
xor
pop
and
in
sub
adcl
shr
mov
push
xchg
fidivl
pop
or
xchg
iret
mov
and
jne
pop
je
add
push
inc
jne
xor
or
leave
mov
push
xor
rcl
xchg
jnp
lea
cli
enter
add
mov
jnp
cld
or
stc
pop
fistl
xlat
inc
lret
jge
mov
fistl
inc
leave
xchg
pushf
push
fstpt
push
pop
hlt
movsb
ja
leave
fdivp
jmp
cld
subl
and
push
adc
das
xor
lret
aas
push
inc
pusha
test
inc
add
popa
jnp
fsubr
push
rcrb
dec
or
xchg
add
in
dec
sub
adc
in
js
mov
std
roll
lret
and
adc
inc
outsb
lea
jmp
scas
mov
fistps
fwait
ret
call
jl
jmp
inc
or
pop
and
mov
mov
mov
stos
push
inc
mov
dec
mov
loope
loopne
pop
dec
test
enter
pop
shrb
mov
pop
leave
inc
xor
testb
sbb
sti
test
in
cs
mov
stos
jae
inc
adc
lret
mov
jp
add
add
scas
sub
push
adc
inc
fimull
stc
sub
cld
fstpl
add
sbb
aas
adc
add
int
cli
jecxz
pop
push
es
fidivrl
sbbl
xor
ss
clc
sub
outsl
mov
movsb
sti
sbb
jnp
and
mov
mov
mov
movsl
jecxz
mov
cwtl
mov
outsb
or
addr16
sub
jecxz
mov
add
rorl
mov
repnz
xchg
fstpt
shlb
shlb
sti
xlat
push
imul
aas
in
aaa
repz
divl
sbb
pop
xor
test
sub
add
shlb
pop
xor
adc
imul
xchg
imul
cmc
inc
sub
adc
les
data16
push
rcrl
mov
fbld
mov
fsubr
jge
fsincos
out
xor
aam
add
into
mov
xchg
mov
out
subl
pop
out
loope
push
adc
fldcw
ljmp
lcall
inc
sbb
add
sub
sahf
push
addr16
jge
add
rcrb
push
test
mov
stc
dec
popf
bound
or
aaa
test
je
shl
pop
cmp
addl
mov
scas
shlb
push
cmpl
idivl
pop
pop
test
lcall
adc
clc
mov
jmp
rep
sub
insb
pop
jge
jnp
xor
cmp
jge
jns
pop
lods
aad
aam
popa
adc
mov
sbb
xor
pop
loope
push
and
outsb
dec
jae
out
popf
dec
and
push
out
add
push
xchg
mov
inc
sub
cmovle
xlat
mov
rcrb
pushf
enter
jnp
orb
bound
adc
and
or
ss
inc
cs
negl
test
add
cmp
idiv
rcrb
or
push
jb
and
cmp
or
rep
cld
into
cmpsb
push
ja
test
adc
lds
test
iretw
lcall
sub
jne
fistl
dec
outsb
push
mov
and
sahf
test
mov
lea
mov
addr16
aas
pop
and
xor
cmp
xchg
leave
xchg
dec
insb
test
test
sbb
push
cmp
test
sub
and
pop
outsl
xorl
mov
inc
pop
xchg
popf
jnp
mov
sub
xor
dec
out
es
mov
sub
iret
insl
pop
gs
dec
inc
add
xchg
sar
rcrl
popl
cltd
adc
mov
lods
mov
lahf
mov
addr16
xor
test
mov
out
mov
scas
inc
mov
and
dec
lock
cmpsl
sub
cmp
mov
fcmovne
sarb
dec
xchg
and
fs
jno
cmp
fs
push
sbb
sub
lahf
je
dec
inc
inc
or
mov
aad
adc
xor
test
hlt
repz
mov
dec
xchg
push
dec
scas
sub
scas
xlat
push
repnz
rcrl
popa
divl
mov
inc
js
divl
loope
imul
outsl
fildl
adc
jl
repnz
sahf
cld
dec
hlt
adc
rolb
rol
bswap
jnp
mov
jne
jge
sarb
pop
sub
lret
shrl
add
repz
adc
jae
loopne
push
sbb
divb
dec
lods
jl
fs
adc
mov
rol
sub
xchg
xor
mov
cmp
mov
push
aaa
and
mov
js
push
out
and
mov
stc
cltd
sti
into
mov
les
add
push
inc
loop
push
test
insl
adcl
xchg
lods
lods
mov
clc
bnd
add
addr16
mov
loope
push
cli
jge
imul
sub
aam
or
outsl
loop
fstpl
cmp
test
pop
mov
ror
push
and
pop
add
sahf
cmpsl
int
nop
push
and
push
ss
aas
sub
or
dec
rcrl
aaa
stos
stos
mov
xchg
mov
insl
ss
bound
and
mov
cmpb
fdivl
jge
dec
inc
xor
dec
adc
push
clc
mov
setne
add
or
std
or
lea
inc
ja
push
xor
sbb
mov
adc
pop
mov
pop
insl
dec
icebp
popf
jge
in
gs
xchg
and
mov
loop
aas
sbb
sbb
shrl
cmc
loopne
out
pop
push
icebp
cmc
dec
pop
and
icebp
ffreep
or
mov
and
or
mov
fisubs
cmc
lcall
aam
cmp
and
icebp
mov
pop
cmp
out
lret
push
or
test
xchg
pop
sbb
mov
push
sbb
cwtl
movups
testb
mov
aas
xchg
sub
mov
mov
jecxz
pop
jge
insl
and
dec
stos
sahf
test
or
xlat
or
xchg
bnd
push
add
sarb
xchg
jnp
lahf
aas
cld
add
roll
hlt
xchg
or
dec
mov
push
lock
inc
sub
adc
jo
mov
sbb
jb
xchg
sbb
iret
shll
sub
lea
test
jnp
adc
iret
sbb
push
in
mov
addr16
sub
or
adc
cmp
out
jb
mov
dec
jecxz
sarl
mov
mov
repz
jmp
mov
jl
push
xchg
xlat
arpl
cmp
out
iret
jb
jae
push
cmc
mov
rcrb
mov
jecxz
sub
pop
pop
cli
sarb
inc
out
imul
loopne
sub
fisubrl
mov
out
ljmp
stc
dec
les
movsb
jg
movsb
mov
cs
ljmp
and
icebp
push
sti
jbe
cmpsl
ja
push
pusha
mov
dec
push
cli
dec
mov
pop
lahf
sub
outsl
push
xor
lds
ja
adc
or
loope
test
sub
or
in
sbb
push
outsb
push
inc
cmpb
mov
data16
sub
mov
hlt
cmp
fisubl
test
aad
push
es
cmpsb
pusha
lcall
rcrl
mov
and
out
pop
popf
stos
mov
mov
mov
mov
popf
lods
fmulp
add
ja
dec
test
and
pop
les
push
aad
lds
daa
push
subb
cmc
cmc
mov
sbb
test
repz
mov
movsl
dec
push
adc
mov
xor
add
mov
dec
mov
std
pop
dec
mov
cmp
pushf
in
popa
lock
sub
push
sub
adc
add
loope
sub
aas
mov
pop
sub
push
sbb
pop
add
xlat
in
push
sbb
dec
add
xchg
jg
loop
popa
leave
sti
add
xor
push
xchg
repz
jnp
test
clc
or
ljmp
cmp
lods
aam
aam
imul
push
pop
pop
sub
mov
imul
lock
int
mov
jle
and
enter
pop
loopne
ret
xor
pop
mov
subb
movsb
test
jmp
mov
es
cmp
push
sub
and
xchg
mov
or
out
mov
int3
cmp
fadd
lock
mov
out
dec
iret
dec
xchg
sub
pop
pop
leave
and
add
pop
popf
scas
mov
fnstenv
clc
add
push
daa
shl
imul
repnz
or
mov
mov
cwtl
fldcw
push
pop
cmp
lret
push
sub
ss
xchg
mov
or
daa
faddl
lods
fisubrl
push
cwtl
loopne
fstpt
pop
add
xchg
sbb
add
xor
dec
fisubs
cltd
ja
inc
testb
test
imulb
testb
push
mov
test
in
lcall
fwait
xchg
fs
leave
pop
push
les
repz
ja
pushf
call
jp
sbbl
xchg
lret
mov
mov
push
or
mov
out
mov
aad
mov
mov
addl
or
repnz
pop
inc
or
rclb
mov
mov
and
sbb
test
lcall
mov
sub
insb
out
aaa
movsl
mov
sbb
add
lahf
jecxz
mov
out
in
std
jl
or
mov
aam
ja
testb
js,pn
enter
dec
daa
add
ret
or
jbe
cs
or
pusha
mov
adcl
out
es
dec
rcrl
push
pop
push
std
xchg
lods
into
dec
mov
mov
rcr
xorl
data16
jo
and
mov
mov
sbb
popf
xchg
out
and
cmp
sarb
pusha
int3
jmp
mov
sbb
sub
jno
enter
jns
mov
fprem1
jge
call
push
rcl
mov
jl
ret
hlt
xchg
xor
rclb
addr16
inc
push
adc
ljmp
mov
adc
mov
cmpl
cmp
dec
rcrb
sbb
pop
stc
decb
dec
cmp
popf
or
xor
pop
mov
push
pop
mov
pop
enter
in
xchg
imul
adc
jp
pop
iret
sub
js
jge
dec
cmpsl
xlat
scas
push
add
shlb
mov
std
ret
jo
lea
cs
shll
sub
out
push
push
fists
addr16
xchg
int3
cmp
test
test
adc
clc
sbb
xor
inc
imul
fwait
push
daa
push
daa
cmp
hlt
jl
in
mov
inc
movb
cmp
jp
dec
adcl
out
push
mov
xor
out
and
dec
cmp
push
fdivs
sbb
jle
xor
pop
call
push
push
sbb
push
jp
push
push
jns
or
mov
inc
pop
pop
push
arpl
addr16
test
adc
mov
mov
inc
repnz
mov
std
fwait
add
shr
pop
dec
and
xor
adc
das
cmp
addr16
test
sbb
fs
lods
push
inc
sarl
or
mov
inc
jmp
in
or
and
push
dec
jg
pop
cmpsb
jecxz
sahf
mov
stc
mov
inc
mov
cmc
push
lea
mov
sbb
sub
or
out
data16
dec
leave
mov
lcall
pop
lea
inc
mov
mov
cmp
sub
add
pop
lea
cld
fnstenv
mov
mov
enter
cli
inc
cmp
dec
push
push
push
push
cltd
mov
xchg
into
push
xor
jb
data16
repnz
popa
sub
push
je
popa
ss
std
or
adc
aaa
loop
push
mov
test
insl
subb
lahf
shlb
jle
mov
test
loope
add
inc
subl
test
adc
dec
mov
fsub
data16
mov
hlt
pop
jo
xchg
imul
js
insl
repz
cmpsl
mov
retw
stc
dec
mov
int3
ret
xchg
add
cld
imul
add
push
mov
adc
fdivrl
inc
xor
add
push
dec
cmp
adc
or
clc
mov
sub
dec
jl
pop
push
and
shr
inc
ja
clc
inc
xor
pop
out
in
decb
inc
inc
icebp
jmp
add
dec
adcb
movsl
push
xchg
push
push
push
mov
push
mov
std
rolb
push
mov
into
ds
pop
or
lret
xor
subb
cmc
pop
rol
xchg
shll
push
inc
cwtl
inc
xlat
dec
mov
xor
sbb
cmp
lea
fwait
xorb
xlat
fnstenv
lcall
notb
xchg
scas
call
dec
adc
mov
xchg
add
rcr
or
jp
test
or
mov
addr16
pop
lahf
and
enter
xchg
mov
mov
fs
xchg
scas
xor
lds
jne
push
shl
adc
sarb
call
mov
jge
add
scas
cmp
aad
inc
jns
xor
lods
pushf
add
mov
ss
lds
xchg
test
inc
pop
add
lcall
shll
sbb
inc
jecxz
adcb
pop
addl
imul
fists
call
pop
int3
xchg
inc
loope
in
ret
mov
and
and
cmp
mov
cli
iret
mov
xchg
sub
fisubrl
inc
fstpl
or
sub
aam
xorb
fcmovnb
ja
add
fwait
ljmp
dec
push
pop
cli
rdpmc
pop
adc
and
call
pop
addr16
lahf
and
sti
or
xor
pop
mov
mov
int3
xchg
pop
inc
out
mov
outsl
sub
xchg
movsb
jnp
into
scas
fnstcw
imul
add
cmpsl
and
mov
jecxz
sub
add
jecxz
mov
add
jg
jmp
jo
xchg
stos
mov
lods
add
xchg
and
loopne
outsl
mov
add
movsl
out
push
or
push
idivb
pop
arpl
sbb
dec
packsswb
mov
jno
cmp
ret
adc
cmc
ja
sahf
xor
mov
sar
jle
popf
andb
adc
pop
inc
xor
xchg
push
int3
cmp
or
lods
ds
sub
fcoml
and
fwait
pop
dec
sub
push
scas
mov
jb
sub
push
inc
cmp
cli
cmp
mov
add
jl
rcrl
and
es
clc
cmpsb
dec
inc
ret
jnp
insb
and
push
push
pushf
sub
test
push
push
xchg
int
adc
mov
int3
pop
sbbl
cmp
mov
cld
gs
sub
cli
ljmp
adc
add
mov
test
pop
xor
mov
fwait
ss
xchg
ss
inc
mov
add
pop
inc
jg
movd
push
mov
fdivs
test
aaa
mov
and
pushl
comiss
es
push
cmp
jecxz
inc
mov
ljmp
and
mov
test
adcl
shll
leave
nop
inc
adc
pop
lcall
inc
push
or
inc
mov
in
rol
cltd
xor
mov
fdiv
int
add
fnstcw
push
dec
jb
jmp
arpl
repz
movsb
push
mov
test
mov
movsb
xchg
das
movsl
imul
pop
popf
mov
sub
xor
add
xor
int
mov
push
loop
jb
and
orl
imul
clc
std
arpl
xor
pushf
lret
inc
das
repz
hlt
ret
mov
mov
push
cmp
sbb
mov
push
xor
mov
scas
fcmove
and
filds
jg
dec
xchg
fsubrs
neg
jl
inc
andb
mov
push
movaps
in
xchg
push
shl
shlb
into
icebp
loopne
imul
push
stos
dec
fcomip
push
stc
mov
add
inc
ror
and
adc
fsub
pop
sub
mov
jmp
cmp
ret
pop
inc
fwait
mov
in
pop
xlat
frstor
ljmp
push
mov
btc
mov
push
or
push
mov
sahf
push
int3
dec
and
sbb
fwait
pop
and
lds
ja
cltd
push
bound
out
jle
movsb
mov
js
jp
cmp
push
xchg
pop
mov
subb
cmp
mov
mov
xor
push
jno
mov
adc
adc
dec
vaddsd
pop
pushf
cmp
sbb
test
sbb
jb
imulb
cmp
iret
cmc
jns
inc
ffree
arpl
pop
jp
stc
mov
mov
xor
iret
xchg
pop
mov
push
test
push
icebp
test
mov
push
imul
mov
sbb
popa
cmp
push
leave
mov
rorl
inc
and
sarl
iret
mov
mov
xchg
sub
in
adc
cld
es
jnp
ljmp
sti
imul
out
lock
addr16
cltd
mov
dec
fwait
sbb
sub
in
mov
xchg
push
shl
push
pop
test
adc
ja
fwait
testb
adc
imul
push
loopne
out
cmove
mov
inc
lret
cmp
mov
je
dec
stos
and
mov
imul
icebp
lock
cmpsl
and
dec
push
pop
arpl
lods
push
sbb
xor
ljmp
push
cmp
sub
xchg
movsb
dec
roll
lods
shl
loopne
mov
and
cmpsb
sbb
xlat
sub
fldl
div
leave
jecxz
mov
test
jecxz
jecxz
xor
mov
xor
add
adc
push
add
ljmp
cmpsb
leave
test
out
roll
je
mov
mov
dec
bound
icebp
arpl
add
cld
and
lock
mov
cmpsl
xchg
dec
enter
pop
mov
sub
add
jge
inc
stc
bound
cmp
and
push
inc
dec
jnp
push
push
mov
ret
ret
cmp
jnp
cwtl
sbb
lret
in
loopne
sbb
sbb
jge
fwait
mov
jae
loopne
fsts
in
xor
jle
hlt
lods
mov
repnz
ljmp
pushf
aas
clc
add
xor
repz
call
hlt
xor
les
imul
popf
scas
xchg
inc
xor
dec
dec
and
mov
sbb
jae
decl
loopne
jl
shlb
xor
imulb
push
push
out
sbbb
mov
int
subb
pop
mov
jno
iret
out
outsb
push
pop
sbb
ret
xchg
xchg
imul
js
daa
into
jo
shll
pop
inc
sub
and
addr16
orb
sarb
stos
out
insl
mov
add
jbe
clc
scas
repz
dec
bound
test
sbb
arpl
cld
aas
sbbl
dec
ss
lods
cmpsb
out
push
lret
pop
xor
js
sbb
push
fsincos
mov
movsb
insl
cmp
shr
xchg
push
cld
push
aam
sbb
and
inc
inc
mov
push
jle
xchg
xlat
hlt
loop
leave
nop
xchg
mov
pushf
out
mov
ss
ds
xor
inc
imul
ret
xchg
incl
cltd
ljmp
add
mov
stc
in
xchg
aam
dec
xor
jno
jmp
push
ja
cmc
jno
das
and
inc
and
fsubrs
mov
out
mov
adc
mov
dec
or
icebp
lods
inc
cmp
inc
sub
cmp
scas
push
sbb
and
and
inc
mov
xor
imulb
and
ljmp
mov
push
addr16
dec
rcl
push
sub
imul
lds
jbe
or
bound
or
and
inc
inc
lret
jecxz
jnp
adc
mov
inc
adc
int
inc
adc
add
sbb
ss
push
pop
mov
xorb
jmp
pop
lret
sub
pop
daa
insl
sub
sub
sbb
inc
mov
xlat
adcb
push
cmpl
mov
loopne
dec
idiv
daa
test
inc
lahf
testb
jo
xorb
adc
sbb
push
out
xlat
xchg
xlat
rorl
movsl
sahf
and
roll
insb
xor
test
sbb
into
or
cwtl
or
fnstcw
jl
fs
xchg
fisubl
imul
mov
pop
push
or
fsubrs
repz
adcb
jge
gs
ja
jmp
mov
cmpsl
sub
repnz
sti
and
fldenv
push
insl
movsl
int3
ds
shl
push
dec
sub
cmp
or
mov
aam
xor
nop
jecxz
cmpsl
cmc
or
mov
mov
out
stos
loope
pop
xor
outsb
shrl
mov
dec
leave
faddl
into
pop
and
fldenv
sub
mov
push
mov
es
pop
xchg
mov
push
pushl
xchg
sub
sbb
jg
clc
cld
stos
sub
adc
add
cmpsl
pop
addr16
cmpsl
std
sahf
cmp
xchg
fs
inc
jb
insb
out
lret
mov
and
ret
inc
movsb
push
lahf
mov
xor
sbb
ret
sahf
in
lea
lea
test
sbb
sbb
sahf
insb
push
mov
cmp
test
lods
es
ds
sub
cld
loop
xor
push
insb
test
repz
int
cmpsl
stos
jge
mov
out
es
pop
xor
repz
sub
mov
xlat
push
xchg
iret
lds
shl
xchg
sahf
js
test
stos
cs
pusha
and
mov
dec
adc
js
loope
add
int
imul
jae
outsb
fwait
push
lret
hlt
mov
scas
dec
push
sbb
pop
cwtl
jbe
mov
fldcw
mov
icebp
dec
mov
sbb
rcl
mov
dec
loopne
mov
jnp
sub
pop
adc
insl
xor
cs
dec
repnz
cli
inc
in
arpl
stos
movsb
add
push
cmp
mov
pop
aam
and
inc
mov
sahf
imul
in
push
jl
aaa
inc
jno
jp
leave
gs
ret
jge
hlt
fcoms
dec
jle
movsb
adc
adcb
ficomps
ljmp
pop
mov
xor
imul
lahf
push
inc
jns
imul
cwtl
fprem
cltd
sbb
push
push
pop
hlt
jp
jl
sub
repz
and
imul
nop
js
test
fpatan
mov
mov
xchg
adc
and
xchg
jecxz
jmp
scas
f2xm1
sbbb
repnz
push
and
daa
sub
jle
outsl
shlb
jno
inc
xchg
push
cwtl
xchg
sbb
xor
adc
add
outsl
jmp
fbstp
pop
hlt
mov
aas
les
cmp
mov
repz
je
rorb
scas
or
mov
xorb
mov
xchg
scas
dec
mov
icebp
push
mov
add
je
stos
je
loop
xor
and
push
insl
jno
popf
popf
cld
pusha
ja
jae
sbb
xor
data16
aaa
lods
pop
repnz
cmp
decl
sub
popf
jbe
pop
movsl
xchg
xchg
jmp
jno
loop
mov
fdivs
loopne
bound
test
xchg
add
pop
pushf
mov
in
sarb
xchg
mov
mov
or
movsb
xchg
and
sub
test
push
stc
andb
inc
cmp
jne
cmpsb
inc
pushf
pop
mov
or
mov
sbb
ja
inc
push
inc
and
xor
aam
xor
inc
cmp
jnp
aad
mov
push
sub
mov
add
loope
or
inc
test
scas
addr16
and
rcl
xchg
or
lcall
repnz
mov
mov
pop
icebp
jecxz
xchg
sbbb
xchg
ret
xor
dec
mov
in
push
in
inc
sbb
or
push
xchg
and
sub
lds
lods
dec
jo
ret
adc
cmp
add
xor
lods
sahf
mov
aas
mov
imul
popf
ljmp
mov
lea
bound
nop
imul
addr16
push
das
jl
rorl
pop
add
orb
mov
outsl
loope
mov
movsb
aad
add
sbb
lock
push
test
mov
pop
jnp
jnp
movsl
scas
cmpb
movsb
adc
out
hlt
pop
add
test
adc
jbe
testl
jne
rcrb
inc
pushf
push
pushf
int3
mov
inc
xlat
test
inc
add
rcrb
sbb
out
insb
mov
push
lea
jle
sub
cld
cmpsl
push
fisubs
insb
clc
or
and
or
mov
or
scas
sbb
lds
jle
out
jl
xlat
xchg
shlb
mov
jnp
inc
repnz
ds
mov
out
ror
fs
imul
xor
fsubs
mov
pop
sub
pop
push
xlat
push
mov
xor
loope
pusha
pop
roll
scas
nop
sub
mov
daa
call
daa
adc
jo
call
test
incl
and
mov
mov
sti
or
aam
daa
lds
movsb
icebp
faddl
aas
jecxz
push
mov
xchg
pop
jl
adc
dec
loop
lock
or
cmpsb
cmp
adc
cwtl
test
mov
mov
into
inc
mov
and
dec
bound
xchg
and
movsb
push
sti
das
xchg
fs
ret
mov
mov
jbe
scas
mov
adc
xor
lds
cmp
lret
mov
je
mov
mov
mov
mov
inc
mov
scas
add
xchg
mov
push
aas
in
pop
in
cld
in
inc
sub
push
pop
push
sub
shrl
mov
test
and
fimuls
push
dec
adc
mov
add
push
jp
mov
pop
and
adc
stos
inc
jp
mov
push
clc
add
fsubrl
aas
popa
iret
cmc
test
call
dec
icebp
scas
mov
andl
lock
fsub
das
sbb
push
dec
sub
imul
shlb
jns
push
mov
stc
add
in
mov
int3
and
mov
sub
xchg
jb
loope
mov
pushf
xchg
pop
jl
push
aam
pop
sti
sarb
mov
imulb
jmp
cmpsb
mov
jb
fs
lahf
insl
jmp
mov
outsl
adc
xchg
test
xchg
or
xor
fistpl
mov
mov
mov
cmpl
or
sbb
add
mov
outsl
fistl
int3
aaa
pushf
das
arpl
or
push
clc
and
andb
xchg
out
push
inc
mov
jns
push
pop
dec
pop
clc
push
popf
dec
xchg
rcl
dec
inc
cmp
int3
sti
ds
into
jp
sahf
adc
out
lds
adc
xchg
xor
stos
inc
adc
cmp
addr16
aam
jns
lds
in
jg
fcoml
out
cmp
add
sarl
fnstenv
jo
or
push
out
add
lods
dec
xchg
inc
out
ljmp
int
loopne
sbb
popf
adc
lods
push
xor
cli
push
les
push
jle
xchg
movsb
push
shrl
pop
mov
jmp
je
repz
cmp
and
es
xor
cmpsl
lea
std
lahf
push
jo
mov
sub
fs
rorl
add
add
sub
mov
inc
sub
xchg
push
jbe
jbe
mov
jne
adc
ret
mov
sub
ss
rol
push
mov
sbb
shufps
push
sbb
roll
pop
xchg
sbb
xchg
outsl
sub
rclb
outsl
int
add
xor
dec
cmpb
pop
ret
xor
pop
inc
xlat
sarl
mov
and
mov
pop
stc
jbe
or
xor
jno
mov
mov
ret
insl
in
stos
out
push
inc
mov
ljmp
jne
push
pop
fwait
dec
sbb
pop
pop
jg
xor
add
enter
mov
jl
les
adc
cli
mov
add
or
popa
mov
or
inc
mov
test
cmp
es
push
test
dec
pop
je
cmp
push
js
lret
loopne
repz
add
push
bound
popa
hlt
dec
xchg
mov
rolb
push
scas
inc
mov
imul
sahf
lea
repz
aaa
mov
jmp
imul
shl
xchg
dec
enter
hlt
in
rcl
push
mov
enter
daa
outsb
jbe
xchg
dec
enter
rolb
and
jne
test
xchg
fmul
and
or
dec
fmul
dec
mov
sbb
push
push
or
mov
dec
dec
sahf
loop
in
in
add
cs
or
cmp
pop
cmp
stos
cmp
jl
in
xchg
rcrb
mov
rol
jecxz
or
loope
jb
adc
lods
push
mov
aas
jbe
cwtl
adc
jmp
js
xlat
in
icebp
jno
or
sub
call
sub
fldenv
sub
fldl
ret
sbb
dec
or
mov
popf
sbb
pop
xchg
mov
xor
repz
and
loop
push
shll
cmpsb
aad
mov
or
sarb
sbb
lcall
cmc
in
pop
test
movsl
mov
push
into
imul
dec
pop
jp
xchg
test
push
cmp
cli
insl
stos
jecxz
mov
lahf
jmp
in
adc
mov
mov
subl
loop
movb
add
outsl
add
subl
in
dec
test
lods
int
popf
cs
fistpll
mov
imul
in
push
mov
in
fistl
pop
pop
inc
sbb
aaa
fmull
lahf
pop
daa
sbb
pop
sbb
cmp
insl
mov
jg
bnd
popf
movsl
xor
repnz
pushf
int3
daa
stos
jo
sbb
or
pop
pop
shrl
dec
ja
sub
or
xchg
ret
sahf
gs
cli
pop
jne
in
push
nop
in
mov
add
out
pop
das
or
cwtl
aam
xchg
cltd
fiadds
cmp
loop
shll
pop
sbb
mov
xor
push
xchg
xchg
sbb
out
cs
mov
adc
xor
std
mov
test
adc
mov
sarl
jno
jae
adc
jecxz
rcrb
mov
push
adc
out
pop
stos
sub
test
xchg
ror
mov
adc
cmp
xchg
jecxz
cwtl
pop
test
inc
loope
mov
xchg
out
out
sub
dec
cmpsb
inc
mov
or
pop
jmp
sbb
outsl
out
pop
dec
dec
ja
scas
in
daa
push
inc
push
aam
jmp
xor
xchg
pop
add
cmp
outsb
jle
sarb
adc
xchg
ret
sbb
adc
sbb
pop
pop
push
add
push
jbe
pop
cmp
imul
mov
popa
ss
sub
ljmp
mov
sbb
rclb
cmp
pushf
pop
loopne
sub
jge
mov
pop
lods
leave
xchg
setbe
xchg
mov
scas
add
inc
in
mov
movsl
adc
jmp
mov
jno
sar
sub
out
scas
xchg
popa
mov
cld
roll
aam
push
insb
cmp
pushf
leave
in
dec
sete
stos
push
cwtl
mov
mov
jbe
out
xor
push
pop
inc
scas
test
test
add
push
jl
aad
add
xor
bound
subl
jge
xor
in
sub
sbb
xor
in
test
jl
rorl
arpl
iret
lock
bound
push
and
jae
lods
lcall
bound
lock
mov
adc
xchg
imul
mov
xor
stos
jl
jle
lahf
lea
mov
pusha
lcall
xor
out
cmp
movsb
pop
es
in
fnstenv
xor
push
xchg
pop
test
cs
xor
arpl
xor
insb
mov
addr16
rolb
dec
gs
ret
jb
pop
mov
xchg
retw
or
inc
test
mov
stc
cwtl
fs
mov
rcll
cmp
inc
add
add
ss
push
sbb
inc
pop
in
mov
jnp
mov
fadds
mov
inc
or
add
imul
xchg
xor
cwtl
xor
in
mov
bound
punpckhdq
fsubrs
inc
icebp
pop
push
and
jecxz
out
mov
sub
mov
or
pop
adc
dec
sbb
test
pop
push
cmp
ror
mov
or
mov
and
pusha
daa
pop
push
aas
andb
adc
cmpsb
cmp
ss
aaa
dec
add
sti
cmp
mov
inc
pop
inc
lock
push
iret
popa
movsl
dec
sbb
pop
dec
push
sub
and
sti
aam
cmp
leave
jle
push
xor
xchg
jb
repnz
sub
sub
cmpsl
xchg
clc
push
adc
push
clc
loope
cld
idiv
pushf
adc
dec
xchg
ja
or
gs
mov
mov
inc
xchg
xchg
das
cmp
out
ret
sbb
iret
jnp
mov
fimull
pop
mov
sbb
js
jle
xchg
inc
daa
pusha
fwait
scas
scas
ret
sbb
sti
push
cld
add
xor
filds
adc
mov
push
inc
or
lcall
adc
aaa
cltd
cmp
nop
inc
jno
add
sti
pop
mov
test
and
leave
das
mov
mov
push
cmp
or
inc
cmp
adc
lods
xlat
cld
popf
pop
cmp
sbb
lahf
jmp
jg
pop
xadd
and
xchg
add
mov
cmpb
push
push
xchg
fadd
xchg
sub
jecxz
rclb
or
add
adc
inc
xor
in
dec
mov
inc
jne
inc
adc
inc
in
frstor
adc
mov
or
jnp
fs
add
adc
scas
or
dec
cmpsb
pop
push
loopne
jp
push
dec
lret
mov
lods
test
sbb
bound
inc
rcll
daa
pop
out
jg
sub
es
push
fcoms
shlb
or
xchg
pop
js
sbb
jl
arpl
or
xlat
mov
adc
movsb
negb
mov
dec
mov
jl
in
pop
popf
push
pop
xor
flds
daa
xchg
push
and
add
cs
push
adc
movnti
add
ss
inc
or
lock
mov
inc
pop
cld
cld
daa
fs
jmp
mov
push
cmpsb
cmp
sub
dec
call
or
in
stos
push
js
jecxz
and
mov
andb
aas
mov
jbe
inc
dec
enter
pop
inc
loope
sub
jecxz
ret
iret
test
sbb
cmp
push
js
int
test
inc
ss
mov
or
add
mov
add
sbb
or
or
js
and
pop
mov
adc
pop
ja
mov
mov
xor
lds
and
insb
stos
adc
inc
push
int3
fdivrl
repnz
sbb
sbb
add
sti
mov
fwait
xchg
sahf
fwait
add
fmul
mov
mov
int3
mov
or
ret
xchg
ds
out
negb
outsb
inc
or
subb
pop
inc
addr16
pop
ljmp
outsl
jb
xchg
or
outsb
push
mov
or
mov
push
cld
xlat
xchg
xor
jbe
movsb
inc
addr16
out
sub
mov
out
or
imulb
rcll
or
jle
xchg
cs
jbe
lret
or
inc
push
stos
mov
xchg
or
lods
sub
arpl
xor
inc
xor
ss
paddsb
push
cmp
pop
icebp
push
push
test
outsb
sbb
loope
cmp
je
iret
fisubs
out
mov
mov
enter
pop
fnstcw
out
imul
sub
sbb
test
cmp
pop
push
sarl
jge
dec
jbe
adc
fsubs
test
fildll
xchg
sahf
push
in
aaa
dec
leave
push
pushf
or
or
inc
inc
ficoml
cmp
jecxz
inc
mov
cmp
das
pop
fwait
xlat
adc
xor
xchg
adc
add
cld
test
cmpsb
stos
or
shrl
cmp
inc
movsb
insb
test
jmp
xchg
inc
push
push
iret
add
movsl
imul
out
dec
mov
sbb
sbb
jg
outsb
scas
in
hlt
push
test
test
jb
sbb
mov
fadd
cmpsl
xchg
notb
xchg
sbb
ljmp
mov
daa
ss
aaa
add
call
cmpsb
add
out
add
or
push
mov
dec
jae
jae
and
cmp
loopne
into
clc
mov
fsubr
fdivrs
loope
add
jns,pt
out
or
in
cmp
rolb
jecxz
jae
out
xor
jns
lods
loopne
je
into
fcomp
lock
jge
adc
or
call
cmpsl
out
push
dec
adc
aam
mov
xchg
rcll
ret
adc
dec
addr16
daa
daa
repnz
loope
mov
subl
mov
outsl
sti
jge
fwait
mov
dec
lock
jp
lahf
int
aaa
lea
imul
negb
mov
fwait
add
sbb
push
daa
pusha
or
jmp
mov
mov
xor
adc
stc
mov
inc
mov
inc
rclb
andps
sarb
sub
push
mulps
jnp
std
pop
out
das
shll
xchg
or
cmp
xchg
test
push
push
data16
inc
cwtl
cmpsb
jl
mov
lcall
testl
jg
fdivrl
stos
mov
dec
mov
and
lods
mov
or
lret
cmp
test
inc
loope
repz
inc
sbb
push
loop
ficoml
cli
lds
cmp
outsb
push
enter
push
jge
iret
push
aad
clc
mov
mov
test
mov
pop
js
mov
ja
sbb
xlat
jg
fwait
and
movsl
xor
pusha
cmp
jbe
dec
xor
mov
xchg
push
es
loop
mov
dec
jo
or
and
hlt
dec
push
pop
iret
test
jbe
mov
sbb
xchg
aaa
out
in
pop
test
cwtl
cs
fidivl
mov
lahf
iret
cmpb
add
push
hlt
repz
and
call
push
push
lret
mov
test
in
scas
mov
scas
xchg
jg
rcrl
pop
sbb
inc
jbe
mov
adc
sbb
nop
push
jns
repz
mov
pop
mov
push
xchg
mull
cmpsl
adc
lea
dec
mov
mov
ja
dec
cmp
insl
jo
rcl
xchg
mov
mov
sbb
ret
and
movlps
or
jae
es
adc
imul
imul
dec
hlt
push
mov
sub
and
ss
lret
rorb
pop
daa
xchg
mov
loopne
xchg
mov
rcll
jp
xor
cmpsb
xor
test
adc
lock
test
adc
out
movsl
pusha
xchg
and
push
aaa
push
dec
xor
or
pavgb
es
and
stos
xor
addb
popa
and
enter
and
dec
nop
rcr
lret
mov
cli
adc
cwtl
pop
dec
test
out
mov
jo
fsubrl
daa
out
jl
subb
lds
jle
loope
push
movb
mov
dec
icebp
insl
fisubrs
sbbb
xor
cs
xchg
inc
dec
mov
aad
xchg
jmp
pushf
mov
dec
cli
and
dec
pop
lods
mov
in
push
pop
movsl
and
push
inc
cmp
cmp
ret
pop
sbb
pop
or
inc
push
push
mov
xor
outsl
xchg
insb
adc
pop
sub
aad
stos
icebp
in
aad
mov
push
in
nop
shll
cltd
cld
jae
aam
jnp
cltd
outsb
lds
mov
or
mov
inc
jne
inc
movl
bswap
arpl
cmp
sub
rolb
sub
mov
dec
cmp
mov
and
sub
push
fstl
and
es
test
imul
adc
mov
dec
lret
sbb
jmp
or
mov
gs
stos
xor
inc
pop
test
cmpsb
sub
imul
or
mov
push
add
push
loop
int
mov
mov
mov
sbb
fsubrl
das
fldt
shll
loope
or
inc
add
add
daa
pop
sbb
outsb
fsts
mov
jb
push
rorl
xor
mov
push
sub
fnstcw
xchg
xchg
mov
mov
imull
push
popf
in
fcomp
lcall
pop
inc
mov
or
xor
xor
clc
push
ret
jle
loope
push
or
pop
adc
fst
lcall
aad
mov
cmp
in
xchg
mov
cmp
aaa
in
test
fs
leave
xor
or
loopne
ja
pop
mov
and
mov
pop
mov
inc
sbbb
adc
jecxz
arpl
pop
and
mov
iret
pop
pop
dec
or
aad
mov
adc
and
inc
outsl
imul
nop
aam
jge
mov
add
add
nop
jns
mov
adc
repz
jno
addr16
xlat
aas
xorb
add
enter
xchg
repz
je
adc
jae
outsb
mov
mov
popa
sbb
jbe
gs
mov
inc
scas
sbb
cmpsb
cmp
fadd
rcrl
movsb
mov
jno
out
or
dec
fs
mov
mov
sub
je
mov
push
cmp
in
xchg
mov
mov
mov
or
cmp
xor
mov
flds
aas
mov
cmp
popf
push
and
ds
orl
sbb
icebp
popf
cmc
push
or
cli
jle
bound
mov
jmp
xor
adc
dec
ds
std
jno
pop
lahf
stc
xchg
ljmp
ret
inc
jae
cmc
cmp
std
dec
imul
cmp
sub
cs
pop
cwtl
and
mov
repnz
push
addr16
scas
pushf
jg
mov
fildll
test
loop
sbb
loope
mov
or
mov
data16
fwait
in
clc
mov
mov
fldl
loopne
jle
movsb
bound
rcll
es
sub
sbb
sub
xor
dec
or
jg,pt
mov
push
pushf
es
cltd
lods
pop
jbe
push
gs
cli
mov
movsb
or
lock
push
inc
mov
sbb
aas
idiv
aad
aad
lahf
pop
add
repnz
rol
divb
movsb
push
jno
push
jae
loope
push
mov
push
jecxz
cltd
push
out
pop
or
xchg
pop
test
inc
push
mov
data16
pop
mov
jnp
mov
inc
push
mov
mov
or
sbb
test
add
mov
mov
in
mov
pop
mov
mov
cs
clc
pusha
xchg
outsl
in
xchg
dec
push
insb
pop
xchg
mov
push
cmp
js
ds
pop
adc
gs
ljmp
inc
cwtl
lods
xchg
mov
je
jns
add
fadd
fdiv
das
int
sbb
clc
movsb
xor
pop
and
push
push
jo
test
loop
pop
in
jns
sub
fnsave
addr16
xor
cmp
jbe
stos
pop
ds
dec
in
lahf
ficomps
pop
xchg
jo
mov
sbb
xchg
fists
cmp
mov
lcall
mov
add
pop
clc
movsl
test
jbe
sarb
in
adc
in
icebp
and
xor
jg
jle
and
scas
lret
mov
neg
popf
mulb
ss
pop
jne
pop
adc
fidivrl
cmp
lahf
arpl
pop
outsb
inc
fidivrs
xlat
or
sahf
mov
call
pop
cmpsl
shrb
jle
lcall
mov
ror
lods
pop
push
pushf
das
jmp
cli
test
sub
jmp
pusha
int
aaa
mov
outsl
or
sbb
lea
mull
xor
imul
inc
mov
push
int
pop
cmp
lahf
movsl
loop
aaa
aas
inc
stc
push
ja
xor
repnz
xchg
inc
jmp
pop
ja
mov
shll
mov
push
sbb
ss
pop
jmp
loopne
xor
lret
inc
xor
mov
mov
fnstcw
cmp
out
mov
sbb
pop
jae
repz
movsl
mov
in
sbb
aad
lret
mov
lahf
push
inc
loop
lods
xor
fadds
mov
inc
xchg
sarl
dec
and
dec
or
stos
dec
cmp
setnp
pop
jo
and
icebp
pop
rol
call
pop
shll
pop
enter
adc
xlat
inc
adc
dec
pop
xchg
int
loop
imul
lret
xchg
test
xchg
rcll
test
add
pushf
in
stc
lock
and
push
stos
pop
icebp
jecxz
mov
call
adc
inc
insb
sbb
in
adc
xchg
cmp
sbb
enter
cmp
and
dec
test
mov
fxch
aad
ja
pop
iret
jl,pn
jge
popf
mov
mov
fcoms
push
pop
adc
add
sub
andb
xchg
adc
jle
lods
sub
push
cmp
push
std
sub
add
inc
subb
cld
dec
in
fmull
jl
dec
lea
fs
lods
pop
pop
arpl
rclb
ja
push
and
mov
or
jns
loope
xchg
ljmp
lcall
int3
mov
mov
lods
lsl
insl
add
add
popf
cli
xlat
aaa
loope
jp
jge
mov
ret
imul
jge
or
sub
in
mov
data16
ret
mov
and
jmp
mov
sbb
inc
adc
jmp
mov
fldcw
dec
cmp
leave
push
aas
sbb
fmuls
repz
test
xor
ss
movntps
dec
push
and
and
pop
icebp
inc
push
mov
and
stos
and
loopne
das
jb
xchg
push
mov
jp
ficoml
dec
dec
xchg
push
lcall
insl
add
ret
hlt
pop
in
push
inc
cs
idivb
add
dec
lods
out
add
pop
xchg
jl
jb
mov
mov
decl
mov
push
or
mov
dec
out
xor
add
in
js
or
test
adc
negl
xor
std
insl
andb
xor
add
mov
into
aam
xchg
ds
xor
cmpsl
dec
jnp
jp
dec
adc
std
adc
repnz
push
or
cmp
or
adc
lods
cltd
fisttpll
pop
les
mov
jnp
or
dec
fsubl
xchg
and
mov
sbb
adc
jbe
call
scas
ja
pop
test
in
out
xor
push
xlat
out
je
xor
repnz
cmp
push
cmp
lods
stc
clc
add
loop
sub
fnstsw
loope
sub
jecxz
lea
pop
and
lret
imul
aam
or
insl
jge
dec
pop
in
icebp
mov
fisubrs
push
inc
test
stos
jb
popa
add
xchg
mov
xchg
sub
mov
notl
out
jecxz
je
dec
test
mov
insb
aas
lods
shlb
fsubs
pop
cmc
sub
stc
mov
out
cmp
mov
mulb
pop
xchg
outsl
sbb
mov
test
lahf
or
bound
hlt
mov
mov
pop
xor
addr16
leave
mov
mov
xchg
test
sub
inc
iret
arpl
xchg
scas
or
mov
cli
adc
ljmp
push
movsl
pop
adc
mov
pop
jns
fstp
mov
add
jg
iret
pop
xchg
mov
in
out
stos
icebp
fs
push
add
scas
stc
xlat
test
subb
mov
sub
or
movsl
dec
in
pusha
xchg
lock
pop
jns
rorl
roll
sub
adc
dec
dec
aam
mov
cmpl
dec
mov
mov
hlt
jp
das
mulb
jecxz
pop
jecxz
int
cmp
inc
mov
or
popf
dec
dec
call
rolb
in
in
xchg
cld
out
inc
cli
pop
pop
jae
clc
xor
sahf
push
or
pushf
dec
sahf
adc
clc
test
xchg
into
push
mov
stos
xor
jge
ror
movsl
ljmp
push
xor
pop
aam
shll
mov
sbb
pop
sub
or
cmpsl
xchg
push
or
into
sbb
mov
in
pop
push
mov
xchg
adc
mov
loopne
mov
cli
jmp
mov
mov
mov
dec
rcll
jp
xor
lret
dec
out
add
mov
push
mov
push
pop
fs
cmc
inc
or
lret
sbb
adc
addr16
pop
mov
pusha
and
cmpsb
imul
inc
jmp
adc
xchg
mov
ret
shlb
roll
pop
pop
out
sbb
push
idivl
or
mov
pop
mov
int3
or
jle
gs
andb
sbb
sub
lret
dec
fs
cmc
mov
push
push
jns
xor
fcmovnbe
cmpsl
dec
inc
and
in
xchg
mov
rolb
pop
mov
ret
xor
aas
push
in
outsl
jmp
and
cwtl
inc
cmc
frstor
or
mov
ja
jle
clc
lods
cmc
lds
mov
fstpl
dec
push
mov
mov
push
sarl
dec
out
in
push
mov
adc
popf
xchg
mov
jp
test
les
mov
imul
lcall
fdivl
lret
pop
es
sub
es
fiaddl
push
mov
mov
imul
out
mov
fstps
add
fsubl
int
pop
data16
mov
push
pusha
sbb
bound
inc
push
pop
xorl
xchg
pusha
or
cmp
movsb
mov
cld
repnz
stc
stc
or
xchg
push
inc
mov
jecxz
jle
cmp
into
jb
push
push
dec
repz
add
rolb
mov
fs
es
mov
cmpsb
aaa
loope
add
test
dec
js
cwtl
sub
cmp
dec
idiv
or
rol
iret
jp
inc
inc
cs
testb
xchg
sbb
movb
ss
dec
pop
jecxz
fdivrl
int
push
sub
aad
fstps
setp
jecxz
sub
pop
or
add
jno
lock
jb
aam
xor
pusha
adc
ret
lds
sbb
pop
je
pop
test
mov
andb
pop
fstps
stos
jecxz
jbe
cmc
mov
pushf
incb
imul
inc
cmp
fnstcw
repnz
movsl
icebp
lods
or
rcl
or
scas
and
mov
lock
fcomps
dec
sub
out
mov
xor
sub
jbe
fwait
xchg
adc
mov
mov
pop
dec
xchg
inc
mov
pop
sahf
jno
xchg
xchg
mov
cmpsl
or
out
xor
sub
add
movsb
imul
mov
cmp
jle
fdivs
pop
mov
fisttpl
and
jecxz
cltd
pusha
mov
jp
stos
and
xor
test
out
ja
dec
cmp
loopne
cmc
test
js
in
push
repnz
or
xor
into
dec
lret
call
cmp
shll
sbb
mov
shrb
mov
aam
ljmp
and
inc
push
das
jbe
enter
out
popf
jl
rorl
mov
pop
adc
mov
add
aas
xor
std
pop
out
pop
xlat
inc
mov
hlt
mov
fcoml
in
or
push
or
adc
mov
out
lock
mov
in
cmpsl
lahf
sbbl
push
xchg
mov
mov
push
sbb
or
cmp
aaa
jnp
pminsw
push
popa
pushf
xchg
mov
pushf
fwait
iret
xchg
imul
orb
fcmovnu
mov
push
xchg
inc
sub
or
loope
ds
mov
mov
fisubl
dec
mov
loope
adcb
push
fildll
adc
ret
xchg
shll
fcompl
lret
pop
fdivs
mov
fstps
jmp
cmpsb
inc
lods
inc
mov
outsl
lea
sbb
jmp
adc
mov
mov
xchg
add
push
ffreep
mov
jmp
dec
cmp
adc
xchg
cmc
out
lods
sub
call
fsubl
inc
test
pop
push
cmp
or
fidivrl
push
inc
xchg
pop
sbbb
imul
aas
xchg
inc
sbb
cmpl
dec
adc
mov
mov
cmc
xchg
or
scas
and
mov
arpl
cld
pop
aad
mov
mov
xor
lods
push
push
inc
in
sub
mov
cwtl
lret
sub
cmp
inc
sub
fildll
add
sbb
mov
push
push
fidivrl
inc
pop
mov
jge
jno
push
xor
lods
adc
ret
das
fsubr
aas
daa
test
aas
or
or
addr16
fs
lods
and
cmpsl
sti
mov
cmpsl
cmpsb
dec
fldenv
jge
sbb
sub
push
jae
lods
push
inc
xor
inc
aam
pop
das
xchg
stos
roll
mov
sub
in
jmp
lods
outsb
or
lock
mov
xor
pop
push
inc
cmp
dec
lret
fcmovnbe
fs
push
imul
mov
push
mov
lcall
push
adc
fsubl
xor
mov
cmp
xchg
scas
loop
add
in
add
test
out
add
push
xchg
movsb
into
jmp
sti
and
jl
dec
jb
dec
lea
sahf
push
cmp
mov
mov
popa
lahf
adc
test
test
jmp
mov
loop
inc
int3
cmpsl
out
sbbl
insl
loope
test
lods
ja
jecxz
push
cmp
cwtl
and
sbb
xor
jae
lea
jmp
sbb
movsb
sarl
xchg
movsl
cmpsl
dec
scas
pop
mov
stos
imul
and
jg
cmp
xor
repz
cli
scas
sbb
adc
inc
movsl
js
loop
mov
clc
stc
push
shr
sbb
jne
shlb
sti
test
xor
cmp
iret
out
aas
inc
dec
adcb
rorl
add
inc
push
sub
mov
arpl
aam
mov
popa
aas
sub
lcall
xchg
push
jle
sub
addr16
lea
scas
lret
mov
out
xchg
cltd
cld
inc
aad
fs
stos
jae
scas
test
dec
jecxz
mov
pop
cltd
aaa
sbb
out
dec
std
push
push
dec
push
pop
inc
fs
sahf
jge
aam
loope
push
mov
mov
inc
int3
pushl
push
es
push
push
mov
call
ljmp
cmp
pop
jo
and
add
lods
and
popf
xor
push
andb
or
sbb
pop
in
test
push
fildl
lock
lods
mov
outsb
popa
int3
hlt
xchg
xchg
mov
push
xor
xchg
xchg
jle
in
xor
pusha
shlb
push
mov
stc
sbb
jp
xor
movsl
movq
pop
cs
leave
mov
je
cmp
lahf
push
mov
adc
insl
and
ret
aas
add
mov
out
mov
dec
cltd
shlb
inc
add
in
inc
xlat
ret
mov
mov
rolb
jle
push
mov
and
insl
incl
in
jl
lods
mov
jmp
aam
mov
mov
fs
insb
adc
dec
dec
xor
pop
cld
loope
push
or
add
stos
in
fsubl
mov
dec
ret
cld
lret
cmp
pop
inc
test
mov
add
in
bnd
push
cwtl
or
test
popa
pop
mov
xchg
push
jge
call
xlat
push
sbb
repz
jno
mov
mov
mov
mov
inc
in
mov
int3
xor
in
in
and
xchg
jbe
in
lock
xlat
inc
mov
stc
cmp
mov
lock
pop
daa
jbe
sti
cmp
and
fwait
rcrl
ds
inc
loope
xchg
and
dec
fidivrs
and
mov
out
cmp
pop
stos
mov
das
jnp
arpl
neg
dec
ja
movsb
push
bound
daa
push
loope
repz
xor
outsl
fs
mov
notb
inc
das
jle
stos
push
cmpsl
out
xor
mov
icebp
daa
fwait
arpl
push
cmc
mov
addr16
adc
inc
out
xor
nop
add
dec
arpl
lods
or
xor
das
xor
add
lods
rcrl
sub
cmp
xor
adc
push
mov
cmc
sbb
sbb
or
xchg
ror
sahf
sbb
test
test
cmc
outsb
mov
push
mov
dec
insb
scas
inc
arpl
mov
movsl
fistps
jno
pop
dec
sbb
loope
inc
ja
xor
dec
xchg
out
dec
adc
inc
mov
jecxz
and
pusha
add
or
clc
sbb
add
jne
stc
add
ret
inc
jmp
mov
or
in
lea
test
dec
pop
aas
push
push
xor
mov
jb
dec
pop
aam
push
loop
mov
lahf
inc
push
mov
push
je
shrl
mov
lock
push
push
sbb
xor
push
mov
in
mov
mov
sub
movsl
sub
jle
bound
add
rol
and
enter
adcl
roll
jbe
sbb
int
aad
mov
iret
push
sbb
inc
jae
jnp
aam
loopne
mov
ret
push
xor
shrb
adc
or
clc
jo
fldt
lcall
add
add
loopne
sbb
repz
pop
add
inc
lds
stos
mov
in
pop
es
pop
mov
inc
movsl
or
sub
ja
cmp
jge
shl
adc
js
add
jne
jl
add
leave
lds
gs
push
push
mov
jecxz
lea
inc
mov
mov
or
aam
pop
cmpsb
cli
sub
pop
lods
nop
lcall
xchg
out
imul
pop
push
jecxz
pop
mov
js
xchg
sub
fmull
hlt
cmpsb
stos
jl
xchg
adcl
dec
out
aaa
jns
push
cmp
subl
lret
stos
jge
fistpll
jle
divl
mov
ss
test
sbb
fmuls
outsl
std
aam
xor
aad
outsb
rclb
movsl
jp
jbe
xchg
push
push
sbb
jmp
xchg
pop
out
loopne
jnp
add
mov
xchg
xor
loopne
xchg
cmp
sbb
mov
inc
pop
mov
mov
jmp
mov
pop
jmp
cmpsb
xor
push
cmp
lods
outsl
xchg
popa
xchg
out
out
inc
and
mov
xchg
mov
mov
push
in
mov
ljmp
jl
lret
sarb
mov
psubw
mov
loop
cli
xchg
fiadds
inc
and
out
pushl
rclb
es
movb
negl
sbb
dec
les
cmp
jo
jecxz
pop
cmp
xchg
popf
scas
popa
inc
cs
pop
stos
jmp
lret
xorb
scas
pop
sbb
jne
and
outsl
pop
and
pop
jno
dec
inc
inc
jne
push
xor
fisttpl
fsub
in
xor
mov
adc
cltd
repz
aas
test
jmp
or
scas
adc
lcall
ret
inc
test
xchg
das
jmp
int3
addr16
hlt
or
movsb
inc
mov
dec
jno
mov
xchg
sub
pop
shlb
push
dec
push
cltd
sub
sbb
dec
jp
push
bound
or
mov
sbb
ret
lret
ljmp
ljmp
jb
popa
outsb
rcl
xor
das
jecxz
stos
inc
push
pushl
repz
cmp
fs
outsl
sub
fwait
lock
and
pop
xchg
jmp
mov
or
ljmp
push
shll
test
rcrl
fcomps
clc
xchg
in
sti
or
popf
imul
add
push
mov
or
jbe
cmp
pop
rorl
ss
mov
shlb
mov
lea
gs
push
negb
xor
call
pop
sub
mov
ds
sub
sub
dec
shlb
cmp
subb
mov
lea
sbb
adc
cmp
pushl
std
and
insl
cld
xor
int
mov
push
dec
mov
or
imul
mov
ret
roll
and
loopne
sub
xchg
xchg
or
dec
xchg
adc
jg
enter
jae
ja
cmpsb
xor
or
add
mov
push
sbb
or
dec
jno
push
std
out
daa
data16
jns,pn
mov
jle
xchg
fwait
or
ljmp
mov
fdivr
push
sbb
sub
dec
xor
adc
dec
testb
das
rcll
jnp
es
dec
pop
lods
inc
fildl
ret
ja
pusha
imul
scas
jnp
das
mov
and
cmp
das
rcll
add
lock
insl
mov
jecxz
jns
dec
sbb
inc
ds
jp
cld
inc
enter
cmp
xchg
scas
fmull
popf
cmp
cli
lock
and
xchg
roll
xor
scas
sub
and
fsin
les
xchg
add
or
or
scas
inc
mov
push
mov
dec
lds
and
leave
lcall
dec
test
dec
cmp
mov
pop
sti
into
clc
shl
add
inc
adc
mov
fwait
pop
jmp
in
mov
pop
sbb
stos
or
ds
mov
cmp
dec
cmp
inc
adc
pop
test
cld
adc
jecxz
aaa
call
sub
mov
jmp
pop
stos
addr16
push
lods
pop
loopne
xchg
addr16
sub
xchg
outsl
movsl
mov
test
call
mov
inc
call
pop
lock
sbb
mov
nop
and
pop
ljmp
mov
or
dec
lea
sahf
push
dec
mov
mulb
push
mov
pop
cwtl
push
xlat
dec
mov
adc
js
xor
aas
xor
sbb
fistpll
in
pop
cmp
jne
pop
mov
mov
mov
ja
push
daa
mov
mov
cmp
andl
pop
loop
and
push
nop
xchg
leave
int
add
aam
pop
pusha
cmp
and
and
mov
push
cld
ret
les
adcb
hlt
lret
and
or
jmp
sti
jmp
add
jmp
jns
sbb
lret
lds
arpl
pop
mov
out
std
daa
popa
pop
mov
sahf
xor
sub
lea
cld
or
fidivs
cmp
sbb
fsubrp
sub
fwait
adc
dec
sub
fistpl
lds
jae
or
inc
pop
xchg
lahf
cmp
pop
sbb
arpl
lret
jbe
outsl
shl
mov
adc
neg
or
adc
int3
and
cmpsl
ds
test
push
rcrb
test
rcrb
cmp
cltd
adc
hlt
cmp
or
cmpb
movsb
sbb
lds
out
out
push
sub
sub
lods
xchg
xchg
mov
mov
mov
neg
jnp
push
in
push
fwait
adc
sub
dec
lods
mov
mov
cli
push
jle,pn
les
aad
fistl
ret
fstpl
sbb
push
xchg
push
add
xor
push
pop
sub
mov
mov
mov
mov
add
inc
jno
xor
incb
insb
push
fisubrs
push
test
repz
jbe,pt
and
inc
xor
xor
mov
leave
repnz
mov
clc
inc
std
lods
popa
xchg
jae
imul
sahf
loop
mov
mov
sbb
imul
add
call
sub
pop
rcr
je
sbb
lcall
lahf
sahf
dec
sub
out
mov
xor
andb
shl
and
hlt
push
jne
mov
mov
jbe
rclb
nop
cmp
adc
cmpl
in
inc
roll
mov
xchg
cmc
pop
inc
outsb
or
loopne
mov
inc
push
idiv
andl
shll
scas
js
addr16
outsl
dec
mov
das
mov
push
out
lret
jmp
and
inc
push
stc
dec
lcall
lcall
jnp
mov
roll
pop
icebp
mov
insb
cmp
lds
data16
jl
jl
in
sbb
xchg
xchg
jge
jmp
inc
and
sub
outsl
sub
rcrl
lea
xchg
sbbl
fcmovb
out
and
ret
push
mov
add
mov
iret
and
cmpsb
mov
in
shlb
or
sbb
or
inc
jp
sub
xor
cmpsl
adc
and
in
pop
sub
imul
pop
orb
cwtl
inc
lcall
cmp
aaa
adcl
mov
shr
mov
pop
pop
pusha
add
xchg
jmp
ss
lret
int3
sbb
inc
xor
imul
insb
push
jp
lahf
inc
mov
dec
icebp
or
jg
aad
add
adc
jmp
daa
mov
shlb
dec
push
gs
sahf
movsb
dec
jl
mov
iret
and
mov
dec
imul
icebp
ss
sub
and
push
add
add
jae
cli
mov
aad
mov
mov
adc
das
into
pop
repnz
rcll
mov
decb
sahf
mov
inc
push
test
ljmp
insb
imul
sbbl
pop
add
push
mov
popl
fistl
dec
flds
mov
and
lcall
lret
testl
sub
addr16
xchg
mov
pop
insl
or
dec
push
pop
mov
outsb
fbld
leave
mov
ljmp
pop
and
xor
and
xchg
mov
fs
mov
mov
out
sub
lcall
mov
aam
das
hlt
cmp
jmp
scas
dec
mov
scas
or
sti
sbb
shl
repnz
movsb
xchg
btc
mov
call
xchg
test
jge
jo
cmp
add
jae
xchg
xchg
movsl
inc
dec
sti
sub
cwtl
flds
flds
fildl
xorb
pop
push
test
pushf
lahf
or
lds
and
mov
push
push
decb
pop
mov
mov
mov
jne
xchg
sti
stc
in
jge
jge
imull
xchg
xor
pusha
enter
nop
and
dec
ds
pop
pusha
mov
xchg
mov
push
ds
push
ret
dec
jp
call
push
movsb
daa
hlt
in
sub
sahf
outsb
cmc
push
cltd
into
mov
fcom
loopne
call
push
popa
cld
mov
sub
loop
pop
xchg
sbb
pop
es
ret
mov
mov
jne
pop
push
cmpsl
iret
cmp
into
inc
outsb
dec
cmp
sbb
add
jmp
xchg
mov
js
mov
jmp
pop
ret
dec
aad
loop
pop
xor
test
mov
jmp
dec
xor
add
fdivrs
xchg
xorb
xchg
push
clc
fwait
lods
daa
cmpsb
adc
fidivrs
sbb
cld
aaa
fisttpll
and
inc
sbb
loope
loopne
xchg
daa
popf
pop
mov
insl
sub
xchg
xlat
sub
mov
out
sub
inc
jbe,pt
lods
jae
data16
adc
pop
popa
outsl
add
test
or
lahf
mov
rcr
imulb
stos
inc
cmc
xlat
lret
icebp
inc
add
add
jecxz
hlt
add
add
insb
cld
xor
dec
mov
mov
loope
pop
enter
xlat
addr16
popf
mov
lods
fildl
ljmp
adc
and
repz
jnp
js
gs
add
or
lock
lods
cmp
bound
cld
js
mov
jno
inc
dec
xchg
or
or
push
jl
lcall
fmuls
dec
xor
pop
test
cmp
pop
pop
or
or
push
in
add
inc
stc
sbb
pop
and
pminub
sub
and
adc
leave
mov
std
lahf
mov
pop
rorb
fcomps
lods
outsb
aas
inc
int
imul
cmp
mov
cmpsb
cmc
outsb
inc
push
js
divps
inc
pop
test
psrlq
in
push
xchg
sub
rolb
incl
je
faddl
lods
imul
in
ret
mov
dec
cmp
and
push
js
or
xlat
mov
les
fstl
inc
stos
in
int
popa
aaa
cs
or
movsb
cmpsl
mov
lret
jg
sbbb
dec
ret
sbb
cmpsl
add
add
mov
push
dec
outsl
ret
mov
dec
fiaddl
dec
pop
and
inc
lds
mov
xor
lods
or
in
js
sti
xorl
rcl
fs
movsb
dec
test
dec
loopne
xor
fisubs
cmpsb
out
cs
stos
sub
xchg
add
ss
std
insb
jle
add
mov
jge
add
xchg
mov
lret
inc
cmp
fs
fisubs
addb
lods
jecxz
add
loopne
test
cmp
sbb
sub
addr16
sbb
das
xchg
lcall
outsb
hlt
sahf
xor
and
xchg
xlat
or
movsb
pop
pop
ljmp
std
loop
mov
xor
stos
stos
loop
fidivrs
out
cmpsl
adc
mov
xchg
xor
add
test
or
add
ret
fisubrl
movsb
inc
out
xor
fisubrs
cmp
ret
inc
pushf
add
sbb
push
jmp
ja
inc
shll
aaa
loopne
and
in
faddl
jno,pn
or
mov
data16
or
inc
pop
fsubrs
mov
sbb
cs
std
xor
fldenv
lods
and
push
dec
lcall
iret
shll
jge
xor
mov
js
cltd
into
jb
repz
inc
jg
cmp
adc
scas
lods
adc
xor
bound
test
adc
and
or
pop
xor
push
cs
sub
cli
push
jl
ret
sahf
mov
or
dec
int3
sti
fdivrs
aad
xor
sub
and
xchg
data16
imul
or
fs
push
stc
insb
fcoml
mov
in
lret
fsts
lods
push
sbb
lock
jle
repz
or
and
dec
mov
nop
push
loop
inc
push
popf
das
fdivrs
lret
sbb
pop
in
pop
sub
jmp
sbb
push
out
fidivs
js
push
cld
test
and
addr16
add
push
jle
jae
dec
bound
mov
and
and
jo
jmp
out
std
enter
pop
inc
mov
test
and
adc
ret
and
and
in
sbb
adc
cmpsb
and
into
or
xchg
mov
mov
into
sbb
stos
ror
jl
xchg
aaa
push
pop
xor
les
testb
push
fdiv
inc
ss
fistpll
pop
jl
pop
xchg
push
aaa
clc
je
int3
adc
mov
mov
outsb
add
cmp
lret
jl
scas
insb
js
andl
push
aaa
xor
jo
push
out
cmp
mov
sar
mov
xchg
sub
sbb
jecxz
jle
clc
sub
jmp
scas
scas
mov
ja
and
pop
std
adc
mov
pop
dec
mov
xlat
je
and
nop
ss
fwait
pop
out
add
mov
test
orl
hlt
leave
aas
arpl
push
or
adc
xchg
lea
jnp
jge
inc
cltd
jecxz
or
sbb
push
js
adc
xchg
les
lahf
lea
mov
xchg
into
inc
mov
rcrb
mov
mov
fistpl
dec
cld
dec
fimull
aaa
movsb
out
inc
dec
inc
sahf
cmp
cmp
in
scas
cmp
adc
inc
sarb
and
loope
inc
lcall
in
jb
jnp
iret
lret
das
xchg
lahf
pop
sar
mov
imul
loope
lret
add
sub
cld
mov
xchg
xchg
ret
dec
mov
scas
cld
mov
and
sub
sbb
rdpmc
std
ljmp
xlat
sub
jl
dec
shlb
insl
dec
add
cmp
gs
mov
jmp
dec
loopne
mov
push
mov
and
xor
into
push
cld
sub
es
adc
mov
enter
in
mov
xchg
cmp
mov
cmp
out
popa
xor
jnp
ret
je
test
stos
gs
pop
adc
ficoml
repnz
popa
push
dec
jne
hlt
mov
lcall
fdiv
jecxz
arpl
pop
iret
lret
popa
out
mov
mov
mov
adc
sbb
popf
test
dec
pop
test
cmpsl
daa
sub
or
jne
repnz
lods
mov
pop
in
stc
adc
arpl
movl
xchg
repnz
pop
xor
fstpt
xlat
aad
sub
xchg
fnsave
dec
sbb
xchg
cmpsl
loopne
jbe
int
and
mov
pop
or
xchg
and
jle
out
shr
out
or
jl
push
lds
xchg
mov
xlat
js
insb
pop
out
adc
enter
dec
fneni(8087
push
xor
repz
xchg
or
hlt
mov
mov
dec
pusha
cmc
xchg
int3
add
mov
shrl
stc
xchg
jle
enter
push
dec
add
testl
pop
sbb
push
bound
int
sbb
inc
sub
mov
sbb
addb
mov
mov
jge
add
and
push
loope
fwait
or
mov
fwait
lret
adc
xchg
adc
mov
daa
adc
pop
call
xchg
and
dec
popf
in
mov
mov
in
popa
sub
fdivl
pusha
mov
lahf
icebp
mov
popf
push
or
or
push
pop
stc
adcl
push
es
subb
xlat
and
jbe
in
stos
les
addr16
enter
out
cltd
pop
inc
inc
and
xor
mov
xchg
stos
nop
jge
sub
in
xor
cltd
int3
std
mov
lock
or
push
dec
inc
lea
aad
jg
mov
xchg
adc
add
test
inc
fstps
push
push
fs
cli
pop
pop
lahf
or
inc
sub
xor
lahf
push
and
mov
sbb
adc
xchg
fisubs
lock
xchg
and
mov
fsave
lret
push
cli
nop
jl
leave
loopne
pop
pop
adc
mov
or
mov
push
aas
jae
mov
pmaxub
xor
jns
jmp
fsubs
stos
mov
ds
in
std
jne
jno
pop
cli
test
mov
sarl
mov
repnz
dec
mov
scas
inc
jns
es
cmpsb
mov
pop
pop
adc
jns
ja
mov
sbb
rolb
pop
xor
and
cmp
lahf
bound
fisttpll
ret
sub
arpl
inc
sub
fs
je
push
cld
pop
mov
aas
or
iret
lahf
inc
cmp
addb
ds
mov
and
data16
fsubl
adc
repz
hlt
lods
pop
insl
cmp
mov
pop
pop
and
sahf
mov
or
filds
adc
mov
insb
in
pushf
imul
sbb
sbb
cmpsl
inc
aas
shlb
inc
mov
ljmp
pusha
mov
out
loope
lock
jb
or
sub
adc
test
dec
add
inc
push
imul
push
adc
cmp
adc
subb
lret
cmp
decl
mov
cltd
data16
dec
mov
inc
ret
outsb
push
xor
ret
outsl
xchg
push
sbb
xchg
sbb
dec
stos
push
int3
cmpsl
lds
mov
push
jmp
pop
clc
push
ficoms
leave
or
cmp
cmp
cmp
add
mov
and
sti
mov
or
jae
xchg
push
fsubrl
push
sub
pop
inc
xchg
jnp
jbe
in
rcrl
and
leave
mov
and
pop
jbe
inc
lahf
jno
and
sar
inc
sbb
cmp
call
cli
pop
fistps
push
nop
dec
popf
cwtl
push
ss
int
test
subl
out
or
xor
inc
adc
cmove
orb
dec
lahf
sbb
xchg
adcl
fs
mov
dec
xor
cmpl
xor
or
xchg
dec
loope
lods
xlat
imul
fildl
movsb
or
mov
cli
loop
clc
jb
sbb
jno
xor
les
orb
dec
cmc
mov
push
xlat
sbb
icebp
hlt
inc
mov
out
mov
fnstsw
cmpsb
stc
les
push
fldl
push
xor
pop
sbbb
das
lea
movl
and
jge
jb
mov
inc
rcrb
mov
clc
cmp
sbb
cmp
in
cwtl
jbe
std
xchg
mov
lret
sub
jb
mov
or
or
dec
cwtl
inc
movsb
xchg
loope
pop
inc
repz
add
jp
jg
pop
outsb
sub
pop
leave
inc
mov
dec
inc
or
pop
sarb
test
mov
cmpb
adc
adc
ret
ds
jno
fbstp
xchg
arpl
xor
push
cmp
pop
fs
movsb
xor
adc
jle
daa
mov
shll
ds
pop
pop
dec
sub
js
enter
mov
les
mov
lods
jnp
leave
mov
lret
in
test
outsl
popf
scas
in
std
jns
push
ss
push
sub
push
testl
push
cmp
adc
lods
cmp
inc
cmpsb
popf
add
push
ret
xor
or
cvtdq2ps
hlt
jp
dec
jne
cli
std
mov
lods
mov
rcr
decl
pushf
stos
add
gs
and
and
jle
scas
mov
push
fistps
imul
cs
ja
inc
test
or
mov
pop
test
dec
push
je
aam
test
mov
sti
sti
lcall
add
add
or
orl
es
or
cmp
lods
pushf
inc
cmpsb
push
mov
sahf
pop
lahf
mov
mov
xorb
jae
pop
fnstcw
adc
ret
sub
or
test
xchg
or
jmp
xor
sbb
cmpsl
lcall
incb
adc
subb
stc
insl
sub
lret
es
pop
insl
inc
jecxz
mov
cli
jp
xor
sub
pop
es
jmp
int
sbbb
in
push
mov
cli
enter
dec
lods
or
cmp
mov
lahf
lahf
fwait
lcall
jmp
add
cmp
adc
jmp
cmpl
jne
add
cwtl
data16
push
and
mov
mov
mov
ljmp
mov
adc
out
push
js
repz
dec
fdivr
leave
in
mov
sbb
pushf
xchg
mov
or
lods
mov
fadds
int3
ljmp
pop
aad
jne
fsubrl
loopne
adc
jno
push
dec
in
pop
imul
lret
iret
mov
in
dec
daa
pushf
inc
xchg
jp
mov
adc
fwait
stos
jne
imul
jae
adc
sbb
sahf
adc
mov
dec
loop
xchg
sub
int3
stc
and
in
jmp
sub
dec
xor
mov
dec
in
jae
push
insl
cwtl
xor
pop
mov
jmp
popf
add
aad
sub
cld
es
mov
subl
stos
rcrl
push
xor
fsubs
push
push
sub
pop
add
push
mov
dec
jg
scas
cmp
fistl
cmp
ljmp
sbb
imul
pop
das
sbb
push
jne
mov
pop
gs
test
aad
push
push
inc
push
add
pop
xlat
pop
xor
test
daa
shlb
or
scas
sub
sbb
and
xlat
adc
push
mov
jecxz
xchg
jg
fidivrl
pop
jl
stos
xchg
scas
cltd
js
push
std
dec
aad
pop
outsl
adc
bound
arpl
sti
jae
lea
out
cmpl
je
mov
data16
cltd
mov
fsts
daa
les
or
or
jbe
das
adc
andb
jnp
popa
cs
add
jnp
jb
cli
shrl
and
sbb
and
bound
pushl
pop
clc
loope
imul
jo
in
scas
mov
push
or
jne
lcall
jmp
les
in
pop
lods
orl
push
push
test
dec
push
out
jne
sub
aas
inc
out
push
lods
popf
pop
pop
ljmp
inc
jp
movsl
push
test
dec
xor
push
add
movsl
loopne
jg
mov
xor
mov
mov
xchg
dec
out
adc
negl
xchg
fcompl
outsl
cwtl
inc
pop
jmp
aaa
in
or
outsl
jmp
push
push
mov
sbb
jmp
scas
mov
sub
mov
mov
loope
dec
or
rorl
mov
mov
in
outsb
sbb
popa
mov
sbb
icebp
sahf
popf
sub
shll
std
fstps
aas
insb
int3
ja
or
adc
lds
ds
test
mov
insb
inc
xor
jb
les
and
xchg
push
cs
push
rcrb
jbe
cli
xchg
les
mov
mov
push
movl
xorb
insl
mov
jbe
and
scas
pop
cmp
ffree
insb
dec
repnz
dec
repnz
repz
xor
cmp
add
adc
cmp
add
mov
mov
bound
xor
ja
xor
sbb
test
jg
mov
add
sub
jno
jne
aaa
pop
and
sti
pop
dec
dec
mov
arpl
fs
inc
xchg
adc
xor
xchg
movb
push
mov
dec
cmc
mov
adc
xor
jno
or
scas
out
nop
jg
inc
aad
popa
imul
pop
repz
popa
lods
ss
stc
rcr
or
cmpsl
or
push
pusha
xchg
mov
fistl
pushf
push
mov
test
push
xchg
and
mov
lock
inc
xchg
jle
mov
sbb
xchg
in
movl
mov
or
scas
scas
pop
dec
imul
push
cmp
push
insb
repnz
pusha
aam
mov
test
mov
pusha
inc
int
add
call
inc
mov
arpl
and
xchg
enter
jmp
pop
loope
xor
push
test
mov
int
adcl
mov
jle
outsl
scas
leave
js
enter
out
mov
roll
insb
into
inc
mov
jmp
or
add
mov
sbb
add
sub
jle
std
call
lret
xchg
mov
or
insl
mov
subl
cmc
test
xchg
jp
jg
adc
in
and
ficoml
mov
mov
xchg
insb
mov
sbb
int
jl
aaa
call
inc
shrl
add
xor
mov
mov
mov
mov
lock
jg
sbb
icebp
inc
aad
add
pushf
aaa
add
cmp
push
cmp
push
in
jmp
push
xchg
adcb
imul
mov
adc
cmp
sbb
xchg
mov
cwtl
xor
nop
aam
adc
pop
push
testb
ret
fwait
dec
pop
mov
and
pop
mov
cli
rclb
fwait
push
loope
push
cmp
mov
adc
add
inc
fldcw
push
lcallw
dec
lret
lahf
push
adc
or
push
xrelease
pop
inc
add
xlat
hlt
popa
addr16
icebp
stc
jmp
or
ds
imul
cmp
or
arpl
outsb
aas
jne
lock
rcr
or
mov
xlat
shlb
or
jmp
inc
das
clc
loop
inc
dec
sub
cltd
mov
lahf
mov
inc
lock
cmp
cmp
jecxz
pop
push
or
sbbb
push
iret
jno
decb
fcmovnu
add
daa
jbe
inc
xor
rol
cmpl
lahf
out
pop
enter
mov
sbb
lcall
cmpsl
xchg
insl
mov
xor
stos
xor
cmpsl
push
push
scas
popa
adc
sahf
call
jnp
icebp
das
aad
or
adc
dec
inc
inc
mov
pop
js
and
aas
lock
xor
test
movsb
stc
je
xor
js
loope
out
mov
daa
pop
sub
mov
cmpsb
cmpsb
dec
mov
adc
in
shll
xor
jge
sbb
sbbl
movsl
xchg
out
dec
vmovhps
add
xchg
cwtl
ret
xor
or
ret
push
jae
mov
lret
lds
lds
dec
mov
lea
cli
ja
outsl
lods
movsl
mov
faddl
outsb
shll
lods
rcll
xchg
push
xchg
aas
mov
adc
jg
sub
pop
es
scas
or
addl
push
dec
fildl
or
popa
setge
lock
mov
mov
je
lods
aaa
int
mov
push
bound
lds
stos
test
dec
iret
out
and
mov
idivb
mov
jbe
inc
popa
sub
sub
or
adc
lret
mov
sub
and
xlat
mov
mov
test
sub
adcl
lods
aad
push
push
fcmovnbe
xor
nop
in
jb
das
or
sub
inc
jae
jecxz
fldl
mov
cli
inc
xor
aaa
mov
cli
rolb
sub
jge
mov
jnp
dec
insb
dec
adc
ret
and
cmpsl
push
lock
cs
or
shll
xchg
es
jns
popa
fsts
jmp
xchg
repnz
cli
inc
mov
sub
push
test
ds
add
cmp
mov
bound
jp
sbb
movsl
dec
loopne
cmpb
dec
or
push
mov
mov
mov
les
ficompl
mov
bound
stos
sbb
in
or
xchg
aad
or
mov
mov
pop
pop
sti
cli
add
fstpt
fldl
scas
push
lock
fdivr
jle
jae
or
sbb
mov
xchg
sbb
xchg
sbb
dec
and
push
mov
stos
xchg
outsl
xor
movsl
ret
outsl
add
aam
mov
lock
and
inc
jbe
cmp
arpl
pop
arpl
orb
mov
lds
push
xor
jo
stos
jnp
movsl
roll
pop
xor
push
fbstp
stos
cmp
es
adc
pextrw
cmp
in
pop
pop
adc
aas
insl
sub
mov
mulb
pop
and
and
mov
cwtl
cs
jle
or
scas
sub
cmpsb
pushf
mov
loop
lret
orl
scas
xor
mov
xor
inc
dec
daa
xchg
out
xchg
sub
ret
fcomip
and
or
pop
jge
fwait
add
repnz
cmp
andb
xchg
adc
dec
cmp
pop
aas
insl
mov
js
fsts
mov
push
cmp
mov
and
divl
mov
lret
sahf
int3
imul
pop
adc
ljmp
push
rcrb
push
and
jl
add
mov
jns
nop
fcoml
mov
in
inc
jb
jle
aam
or
jmp
insb
ds
xchg
or
sarl
push
out
fsts
aas
mov
shl
jl
lods
movsb
push
aam
or
sysenter
insl
jbe
loopne
sbb
insb
adc
call
daa
push
sbb
push
xorl
mov
test
je
cmp
adc
repz
xor
divb
pop
sub
clc
add
xchg
in
push
stc
test
sbb
jno
loope
add
push
gs
mov
sbb
xor
ret
mov
adc
ja
sbb
cltd
xor
mov
out
xor
jne
fimull
push
lret
scas
rcll
and
ljmp
arpl
test
cmp
dec
push
repnz
popl
pop
jg
adc
fwait
push
push
lret
mov
mov
mov
xchg
cmpb
xor
jge
xor
sbb
pop
ds
dec
dec
bswap
fidivl
and
out
add
push
jno
mov
nop
xchg
jl
popf
or
cld
pushf
and
ljmp
aam
push
loop
stos
cmpsl
adc
and
xchg
shlb
push
test
lret
mov
add
mov
iret
pop
sub
out
jmp
ss
cltd
mov
xchg
cmp
cmp
stos
pusha
mov
aaa
and
and
data16
sbb
insb
adc
stc
stos
xchg
xchg
push
fidivrl
shlb
mov
das
ja
mov
out
int
dec
jecxz
ja
mov
gs
outsl
ficompl
aad
ret
mov
insb
inc
orb
jae
fwait
and
arpl
imul
dec
xchg
or
adc
mov
std
pop
fldl
and
dec
inc
out
mov
mov
sahf
jne
xlat
outsl
hlt
pop
scas
mov
mov
cld
pop
sub
mov
in
cmc
mov
cmpsb
std
xlat
xor
rorb
mov
movsl
xchg
mov
sub
xchg
mov
xor
sbb
add
mov
xor
lret
fldenv
or
scas
aas
fsubl
pop
dec
mov
mov
cs
jne
mov
xor
push
fistpll
dec
dec
sbb
mov
fdivrs
sti
imul
add
pop
bound
jns
ret
add
sti
fwait
mov
mov
scas
das
xor
test
xchg
popf
stos
jl
and
cmc
mov
into
pop
fcmovnbe
enter
sbb
js
xlat
dec
lock
mulb
or
outsb
cltd
fisttps
xor
sahf
pushf
mov
repnz
xor
aam
mov
mov
pop
mov
roll
pop
js
sbb
adc
cmp
dec
repnz
cmp
mov
or
fwait
jbe
lods
cmpsb
jno
jno
fdivs
adc
rcrl
sahf
mov
cmpsb
es
fwait
mov
cmp
pop
negl
xor
movsl
andb
iret
pop
movsb
xor
leave
inc
icebp
sti
or
imul
lret
or
jne
push
cltd
and
ret
xchg
movsb
leave
mov
push
ss
in
mov
leave
lods
jmp
int
sbb
orb
jae
insb
movsb
sub
sub
xchg
insb
mov
mov
mov
aaa
stos
repnz
outsl
pop
xor
push
add
loop
inc
sbb
cmpsl
scas
imul
mov
sbb
jmp
fstpt
sbb
lock
inc
dec
ljmp
adc
fildll
ljmp
xchg
cmp
cli
jl
jl
cmc
mov
gs
add
repnz
or
inc
or
dec
lcall
and
cli
add
sarb
adc
loopne
data16
jns
dec
lea
jb
pop
mov
stc
jae
pop
adc
cld
lds
es
sub
add
fisubrl
adc
pop
cmp
dec
fnstsw
jne
pop
push
inc
dec
push
mov
repnz
andl
jae
xor
jo
add
or
movl
fs
iret
push
fcomp
and
cmp
scas
ja
adc
mov
mov
pusha
insl
push
movsl
jge
lods
or
cld
and
dec
add
push
out
mov
cli
mov
and
xchg
mov
jnp
cltd
cmpsl
stos
repz
cld
or
cmpsb
out
sbb
inc
mov
sbb
mov
xchg
mov
bound
mov
mov
fs
mov
dec
jle
inc
push
outsl
mov
inc
mov
ret
push
mov
push
and
shl
xor
xchg
mov
inc
enter
sub
clc
sub
jb
lahf
mov
aad
cld
or
jbe
mov
cmp
aad
jmp
dec
cmp
mov
adc
mov
push
mov
stc
mov
xor
stc
ljmp
das
push
in
dec
pop
fwait
es
lock
pop
sbb
push
cs
pop
push
inc
jle
shll
pop
xlat
out
lret
adc
pop
popa
mov
push
jnp
fildl
imul
mov
and
mov
mov
aam
pop
in
outsl
inc
rclb
jmp
push
push
push
jle
adc
sub
imul
mov
mov
iret
shlb
bound
push
cwtl
sub
push
das
mov
fcompl
push
pop
repnz
mov
jno
mov
jno
mov
or
xor
int3
ja
lcall
push
jge
aas
decb
jne
cmp
pop
xchg
fs
arpl
jne
in
loop
dec
pop
inc
in
mov
sbb
sub
inc
jmp
ja
or
xchg
popf
adc
std
inc
push
frstor
rcr
jae
sub
in
push
insl
mov
xchg
test
test
mov
nop
orl
sbb
xchg
iret
enter
push
mov
fadds
repnz
inc
ret
idivl
scas
cmp
imul
pop
dec
mov
in
lds
or
enter
xlat
xchg
das
fcomi
lret
pop
jne
fadd
loopne
popf
jb
out
jne
cli
fstpl
jmp
mov
fs
imul
je
ret
imul
test
or
ja
clc
mov
hlt
in
add
sbb
addr16
aad
xor
and
mov
cmpsl
inc
hlt
push
push
mov
fisttps
or
push
mov
fbld
loopne
mov
in
mov
stc
sti
aas
inc
cs
mov
and
pop
mov
std
jae
loope
sbb
jne
cmc
cmpsb
mov
insb
jne
xchg
icebp
shll
add
lcall
dec
sub
pop
mov
lods
add
in
xor
addl
mov
fists
jp
mov
add
sahf
adc
in
test
icebp
das
cltd
cmp
cmp
sub
and
scas
push
int3
jmp
dec
subl
mov
mov
push
jo
xor
lcall
mov
dec
int3
std
je
shufps
inc
mov
testl
lea
ss
cld
sub
aam
in
aad
jecxz
inc
cmp
je
scas
mov
call
cmp
lret
add
int3
test
out
popa
inc
js
push
ficompl
pusha
test
cmpsl
or
test
or
add
add
xchg
subb
stos
negl
push
ss
nop
sub
mov
inc
cmp
ljmp
add
xor
test
scas
out
int3
idivb
ret
cmp
rcl
inc
cmp
rcl
or
inc
sub
cs
adc
mov
pop
jg
int3
cmpsb
pushf
or
fs
mov
jl
jp
int3
pop
xlat
push
cwtl
addl
cmovno
pop
xchg
or
pop
daa
xchg
call
gs
ret
or
ret
inc
sbb
aad
inc
out
fwait
add
cwtl
pop
lock
movsb
enter
das
jno
xchg
mov
fldl
inc
mov
sub
mov
fs
out
shl
pusha
insb
idivb
mov
inc
add
scas
clc
std
cmpsb
enter
js
subb
or
lret
loop
push
xchg
scas
dec
fbld
test
icebp
in
mov
lods
xchg
pop
push
and
inc
and
test
mov
mov
adc
mul
jecxz
and
cli
xchg
sub
lods
aad
fdivrs
out
adc
sti
mov
push
cli
lret
das
mov
stc
adc
sub
pop
and
push
fwait
ret
sahf
xor
mov
decl
lahf
ret
inc
aaa
adc
inc
call
jmp
add
mov
ret
testl
std
repnz
nop
popa
int
div
adcl
loop
sbb
icebp
cli
andl
add
xchg
icebp
das
lahf
cld
xor
lret
mov
jnp
sub
mov
adc
test
add
cmp
inc
xorl
test
xor
inc
push
jne
push
repnz
leave
push
js
pop
jnp
mov
orl
popa
cmpb
iret
daa
dec
lahf
dec
lds
xchg
and
inc
cmpsl
cmp
mov
fstpl
add
xchg
pusha
cwtl
inc
xor
pop
pop
arpl
insl
xchg
cli
dec
stos
addr16
scas
jg
inc
xlat
shrb
call
xor
xchg
xor
ljmp
test
mov
push
xchg
and
pop
xor
popl
inc
jo
pop
pop
clc
lock
xor
or
push
inc
adc
mov
popf
and
scas
add
daa
subb
mov
in
sbb
mov
or
stc
dec
mov
push
divb
add
in
mov
jmp
or
mov
sbb
adc
test
add
pop
and
mov
js
fildll
xorb
pop
lods
and
int
data16
lock
cmpsl
cmpsl
inc
push
push
or
loop
mov
out
mov
lds
fisttpll
jp
mov
popa
add
ja
mov
enter
sub
adc
scas
divl
jmp
movsl
nop
push
lods
add
pop
xchg
sbb
lcall
adc
out
cmp
fwait
mov
rcll
aad
dec
movsb
cmp
jg
push
out
dec
mov
pop
jnp
testb
lods
and
lea
movntps
jg
sti
rclb
pushf
push
int3
sbb
js
lea
test
or
pop
xor
pop
cwtl
stos
shrb
or
pop
sbbl
popl
xchg
inc
mov
push
fwait
jnp
xor
pop
xor
xchg
inc
outsl
push
mov
cmp
jg
jmp
jge
mov
or
jb
mulb
jle
pop
push
sub
cmp
cld
inc
push
cmpsb
mov
mov
and
push
lods
jnp
push
sub
mov
or
inc
in
jnp
dec
mov
bound
andl
fistl
lea
add
push
out
loop
popa
inc
jb
arpl
or
or
sbb
jp
ret
xor
leave
dec
notb
movsb
ds
loopne
rorl
loop
sbb
pop
int
jmp
pushf
push
cmpsb
sub
xchg
add
mov
pusha
insl
loopne
and
lods
jp
call
adc
dec
addb
sub
push
pushf
dec
mov
mov
ret
fs
xchg
scas
inc
mov
mov
xchg
add
lds
mov
jbe
add
add
scas
xchg
les
imul
out
xchg
pop
xor
xchg
dec
xor
pop
dec
repz
cmp
mov
mov
inc
jp
icebp
add
mov
push
push
cmp
dec
jmp
cwtl
mulb
test
jnp
lds
mov
mov
aad
hlt
fcmove
ja
dec
test
lgs
ret
jmp
cmpsl
sbb
push
loope
dec
jno
xchg
pop
into
push
les
leave
test
in
arpl
adc
inc
or
in
inc
lcall
aam
movsb
jp
out
incl
and
mov
jb
mov
div
fs
push
mov
or
data16
pop
dec
xor
dec
sbbl
or
loopne
jge
xchg
scas
fdivrs
lahf
fdivl
mov
addr16
xor
pusha
push
test
lea
mov
dec
sbb
cmpsl
call
sarl
mov
dec
mov
sbb
xor
jmp
ds
push
icebp
sub
jo
dec
into
fsubrs
or
int3
rorl
sbb
js
sbb
or
jg
movsl
jg
ret
mov
dec
pop
cmovno
std
int3
fistpll
loope
dec
mov
loopne
and
xor
add
push
lds
shll
into
xchg
xchg
xor
jg
dec
ficoms
insb
out
movsl
mov
in
mov
lahf
nop
sub
push
xchg
rorb
dec
and
hlt
cmovae
jecxz
mov
je
mov
jle
dec
lds
mov
mov
dec
xchg
pop
movsb
in
jmpw
sbb
mov
lds
negb
adc
and
mov
ljmp
lea
jne
lods
scas
mov
cmp
ss
arpl
and
lods
add
inc
add
sub
sub
xlat
lahf
cmp
dec
sub
sbb
mov
add
sti
jmp
stos
ret
mov
add
loopne
repnz
jmp
dec
push
cmpsb
jg
dec
fldl
fs
enter
aam
fwait
rcr
push
loope
mov
mov
pop
pop
andb
out
sbb
nop
push
jmp
mov
dec
mov
pop
jne
adc
enter
fstl
imul
ffreep
push
popa
mov
mov
cmp
sub
pop
pop
std
fs
add
not
push
pop
lcall
unpcklps
sub
sub
pop
in
popfw
dec
clc
sahf
das
and
popa
push
repz
iret
loop
add
mov
or
xchg
lods
add
loopne
or
mov
add
mov
sub
jnp
ja
dec
mov
fmul
mov
data16
inc
jb
cmp
aad
adc
pop
inc
or
mov
cmp
mov
pop
mov
lods
pop
shll
mov
push
push
leave
jl
xchg
dec
dec
ret
jmp
rcrl
jne
add
div
setno
lcall
rcrb
pop
in
in
sbb
push
ror
lret
xchg
mov
inc
scas
inc
sbb
out
imul
fisttpll
imul
sub
dec
test
push
jno
mov
mov
pop
cmc
sbb
insb
cmp
pop
mov
cltd
sub
and
cmp
stc
sarl
xor
stc
icebp
jecxz
insl
pop
hlt
mov
and
cmc
icebp
loope
inc
xchg
dec
or
outsb
mov
out
stos
inc
xchg
ret
js
cmp
and
xlat
mov
test
sbb
stos
aas
pop
stc
cltd
mov
inc
movsl
xchg
sarl
sti
and
aas
jb
iret
mov
sarb
into
pop
insb
cmp
out
jp
jmp
in
jg
cwtl
enter
push
xor
adc
lods
cmp
push
mov
push
ss
out
out
iret
xor
enter
arpl
dec
jl
sbb
in
cmpsb
pop
add
in
addr16
lcall
mov
test
les
push
mov
jecxz
clc
adc
icebp
xor
movsl
rcrl
xorl
ss
mov
repz
xor
testb
push
pop
push
mov
or
imul
mov
adc
mov
inc
into
popf
inc
int3
rcrb
pop
xor
sub
call
xor
inc
lock
popf
repz
jmp
in
fmull
out
cli
or
sbb
xor
outsb
mov
mov
push
jns
mov
decl
sti
mov
cmpsl
pop
mov
dec
cmpsl
test
daa
js
insl
jp
pop
sbb
jecxz
xchg
push
stos
and
jmp
mov
daa
sbb
cmpsl
inc
add
inc
mov
pop
es
outsl
inc
add
mov
jg
lahf
add
jg
lock
jl
testb
pop
inc
mov
add
jg
push
test
inc
sbb
in
arpl
test
inc
xchg
mov
add
int
lahf
sub
arpl
sbb
adc
jle
sbb
adc
add
mov
sub
das
aas
sbb
in
fisttps
fs
in
pop
xchg
imul
mov
or
sbb
call
roll
xor
test
mov
daa
sub
dec
jl
mov
jecxz
ret
push
xchg
add
cmc
or
cltd
mov
mov
insl
mov
ss
xchg
fisubrs
jb
xchg
push
mov
pop
lret
add
inc
cmc
mov
inc
sbb
adc
ss
mov
jge
movsb
in
sarb
imul
add
stc
in
jecxz
mov
and
xor
inc
insl
dec
cltd
adc
popa
nop
insb
xor
mov
popa
cli
xor
dec
or
shrl
adc
xor
popf
jmp
adc
scas
mov
lret
mov
dec
shlb
jb
mov
push
inc
ja
sub
pop
mov
cli
negl
mov
xor
jns
pop
push
jle
enter
lds
adc
xchg
cmpsb
cmp
arpl
stc
loope
popa
mov
es
adc
push
jge
jp
or
mov
out
mov
add
add
daa
std
in
mov
ret
jb
les
dec
leave
sbb
lock
test
lret
pop
jb
add
mov
sbb
push
scas
lods
int3
mov
aad
js
pop
ret
pop
or
mov
scas
in
outsl
test
sbb
iret
or
push
xor
daa
pop
mov
mov
inc
movsb
rcrl
mov
inc
adc
mov
push
mov
mov
cmp
out
lahf
inc
and
jge
out
xchg
into
movsl
insl
orb
sub
xor
repnz
jb
ret
fsubrl
aaa
addl
pop
cld
dec
shlb
lcall
rolb
jo
lea
loopne
adc
push
mov
mov
mov
int3
or
dec
xor
adc
inc
push
mov
adc
shl
ljmp
pushf
testl
jle
cmp
ficomps
pop
xchg
mov
in
pop
in
dec
inc
test
xchg
popaw
inc
push
gs
sub
hlt
stc
sbb
fdivl
pop
mov
or
rcrb
mov
and
xchg
inc
gs
sbbl
mov
mov
jno
je
sub
nopl
pop
subl
pop
mov
test
mov
jge
push
pop
sbb
fs
cmp
shll
xchg
cmp
adc
repnz
sbb
out
rorl
xchg
pushf
pop
nop
int
jle
and
jno
xchg
sbb
ss
jne
fs
in
shll
fstpt
orb
int
inc
scas
mov
push
lock
leave
aad
adc
mov
aad
lods
push
push
sbb
jp
jno
cmp
or
jae
mov
les
jbe
jp
xchg
adc
mov
cmpsl
lret
push
mov
pop
ds
rorb
into
pusha
js
je
push
xchg
enter
inc
mov
dec
out
dec
mov
add
adc
push
fidivrs
dec
hlt
out
jp
and
out
dec
xchg
lods
fbstp
xor
aad
jae
mov
fstpt
sub
lds
shl
sbb
notl
sbb
push
or
test
add
adc
pop
nop
push
fadds
jae
and
das
inc
mov
pop
rolb
jbe
push
jns
push
or
mov
jg
push
das
push
test
popf
rorl
lea
jne
testb
pushf
cmp
xchg
cmpsl
jl
enter
mov
mov
stos
sub
sub
lcall
shl
cmc
push
jno
sti
push
fwait
push
mov
ss
jle
mov
push
movsb
push
dec
scas
mov
clc
out
fnstenv
iret
mov
xchg
call
bound
subl
fdivrs
inc
pop
pop
cs
jno
enter
mov
mov
push
xor
dec
mov
inc
mov
jb
xchg
in
lahf
adc
mov
and
movb
je
dec
lock
pop
bswap
and
shlb
inc
xor
inc
fstpt
int
addr16
push
aaa
in
mov
push
pop
shld
cmc
push
cmp
jle
sub
iret
or
and
push
jns
icebp
ret
jge
repz
jl
pop
pop
jecxz
sbb
add
cmp
jns
jns
movl
mov
jne
dec
call
xlat
dec
mov
addr16
outsl
sbbb
pop
cmp
icebp
inc
add
inc
jl
outsl
test
mov
cmp
dec
mov
outsb
sub
inc
mov
gs
adc
mov
and
test
jle
sub
and
repz
sub
stc
out
push
cmp
cmp
mov
pop
xor
mov
outsl
push
in
js
cltd
and
rcrl
outsl
add
inc
mov
out
inc
es
sub
push
fld
or
mov
ret
or
mov
mov
loope
stos
pusha
add
push
xchg
inc
ret
pop
jno
sub
add
lods
hlt
push
mov
mov
sub
aam
jmp
jns
add
push
sbb
inc
sbb
int3
add
sbb
int3
add
invd
leave
jnp
push
mov
mov
mov
repnz
sbbb
lahf
mov
jp
xchg
sahf
ffree
jns
cmc
clc
inc
out
pop
dec
movb
mov
push
add
sbb
xor
cli
xor
mov
outsb
or
push
add
and
jecxz
lahf
stc
nop
mov
repnz
fyl2xp1
fdivrs
in
sbb
stos
xchg
loop
addr16
lea
fisubrl
leave
pop
inc
stc
ljmp
es
rcl
push
xor
call
int
fcoms
lock
stc
push
xor
push
pop
push
inc
movsl
inc
lock
inc
push
test
adc
stc
sbb
loop
aaa
xchg
inc
js
or
pop
mov
leave
jp
xchg
inc
inc
push
sbb
repz
rclb
adc
test
fwait
push
add
mov
aaa
icebp
std
fstpt
icebp
imul
adc
adc
dec
mov
add
orl
les
mov
add
push
jecxz
xor
cmpsl
dec
int3
cmp
stc
ret
loope
call
stos
lret
xchg
aas
mov
fidivl
xchg
fwait
mov
addr16
dec
mov
mov
test
andb
fldt
mov
mov
faddl
stc
mov
sbb
movsb
filds
out
pop
xor
lock
push
fnstenv
push
std
push
or
aam
cmpsl
jno
mov
fwait
cmp
dec
rcll
mov
mov
push
inc
js
adc
cmpsb
lahf
xor
inc
or
and
sub
repnz
sub
lock
add
and
push
jl
and
loope
test
insb
andl
mov
mov
jb
iret
inc
inc
aad
mov
add
fidivs
push
or
int3
les
dec
shlb
lahf
mov
push
std
adc
push
aaa
or
and
imul
mov
push
inc
xor
xor
mov
sub
adc
sub
call
cmc
dec
fisubs
xchg
popa
sbb
push
mov
pop
or
movsl
std
in
xorl
xor
mov
and
push
add
test
in
add
and
lock
add
je
rcr
inc
cwtl
mov
or
jno
xor
clc
sar
outsb
xchg
dec
test
ljmp
cmp
lahf
cmp
xor
fcmovu
es
adc
mov
cli
imul
pushf
add
mov
cltd
and
fcompl
lahf
push
stos
and
cmpsl
adc
xchg
push
sbb
xor
repz
cld
mov
inc
stos
adc
xor
and
add
ds
clc
xchg
dec
jbe
pop
fnstcw
or
adc
cmp
popl
inc
dec
adc
mov
aas
subl
std
sub
mov
xchg
int
mov
dec
jnp
shrb
sub
push
sub
icebp
mov
fisttpl
push
cwtl
or
scas
mov
test
push
mov
cmc
pop
sbb
xor
pop
fdivs
mov
jl
iret
add
push
ret
pop
sbb
mov
jo
xor
pop
and
mov
inc
cmp
adc
fwait
lds
or
es
fnstenv
or
imul
push
ja
or
mov
icebp
pusha
scas
pop
cmp
jb
and
stos
stos
sbb
push
xchg
pop
out
btr
adc
jmp
sbb
cli
int3
popl
cwtl
loop
lock
aad
jns
sub
icebp
decl
sub
loopne
out
stc
or
cwtl
imul
movsl
lret
insb
sub
jmp
sbb
rcr
in
popf
test
clc
cmp
inc
mov
mov
test
inc
cmp
negb
dec
je
repz
inc
cmp
jmp
int3
cmp
decl
nop
mov
cs
xor
mov
fwait
add
mov
xor
lock
xchg
mov
in
je
test
sbb
mov
sbb
sbb
adcb
mov
fistl
add
enter
test
sbb
mov
sbb
icebp
ret
sbb
sub
add
pop
push
inc
mov
int3
cmpsb
or
out
xchg
in
arpl
test
lcall
inc
hlt
fistps
jmp
cmp
inc
pop
add
sar
pop
cmpsl
push
movsb
push
jne
xor
fcomp
popf
and
sbb
sub
mov
out
not
sub
sbb
mul
xchg
stc
xchg
push
mov
daa
nop
test
jecxz
outsb
inc
stos
dec
xor
movsb
sbbl
add
add
push
clc
xor
shrb
adc
ret
mov
mov
mov
sub
lahf
ret
xchg
mov
add
inc
aad
sbb
dec
imul
xchg
call
shll
or
dec
xor
mov
jno
popf
lret
insb
hlt
mov
add
shll
insl
cwtl
push
xchg
lret
lods
jp
cmpsb
icebp
repnz
push
scas
aaa
mov
mov
rcrl
fstpl
mov
xchg
xor
in
pop
je
cmpsl
jmp
data16
cmp
bound
mov
adc
iret
pop
ja
push
xchg
mov
repz
rep
mov
push
fwait
test
scas
jns
fdivrl
mov
push
add
fldt
cmc
int
and
fcmovne
loopne
push
fld
mov
int3
cmp
into
and
mov
xchg
inc
out
fdivrs
in
int3
cmp
call
jge
insl
xchg
xchg
xchg
sar
gs
jnp
fnstsw
cmpsl
push
les
in
and
push
lea
int
xor
test
sub
movsb
inc
jne
mov
mov
test
insb
cltd
out
cmp
jne
mov
or
nop
xchg
xor
lret
sub
loop
test
shll
mov
xchg
test
and
lret
cli
das
push
push
iret
inc
fchs
je
data16
jle
add
adc
clc
clc
icebp
cli
fs
mov
push
jnp
punpckhbw
test
adc
out
enter
fbld
in
mov
inc
mov
fmul
in
cltd
pop
cltd
in
pop
icebp
xor
dec
pop
sbb
dec
shll
ret
xchg
adc
aas
or
addr16
add
adc
das
sub
xchg
mov
bound
jg
xor
push
sbb
mov
imul
ljmp
mov
mov
ror
xchg
arpl
add
mov
and
and
mov
jb
jecxz
mov
or
xor
in
add
insb
aam
divb
sbb
push
cld
lds
dec
sbbb
or
out
add
hlt
xchg
fdivrs
add
cs
cmp
loopne
mov
adc
adc
sbb
mov
pop
iret
aam
jno
mov
lahf
push
mull
addr16
movq
call
sub
push
lds
loope
and
shrb
out
out
in
add
fnstenv
lods
loopne
int
js
das
stos
lds
mov
dec
push
test
or
loop
jns
test
fdivl
push
xor
push
and
push
cmc
popf
push
pusha
es
and
orl
loope
outsl
adc
add
ja
jbe
adc
ret
pop
sub
pop
cs
sbb
sbb
xor
lds
xlat
aad
mov
in
cmp
jmp
inc
sub
fistpll
lods
dec
mov
inc
nop
pop
test
test
popa
lcall
clc
add
mov
adc
or
mov
mov
sub
and
inc
pop
sub
loop
cmp
movsl
mov
adc
push
data16
cmp
mov
movb
add
jg
lcall
mov
outsl
push
bound
subb
cwtl
or
and
pushf
pop
into
adc
lcall
or
in
xchg
fdivl
sub
mov
les
push
push
mov
xor
or
sbb
sub
lea
lret
dec
cli
pop
sbb
jp
clc
add
and
push
inc
pop
scas
sarl
nop
lods
imul
or
dec
cmc
inc
jg
stos
cmp
aaa
data16
adc
jae
pop
xor
xor
sbb
ja
lcall
in
cmp
out
cwtl
inc
mov
cmp
outsl
ja
add
out
add
negb
push
push
push
shll
mov
and
pop
sahf
aaa
aaa
stc
mov
cmp
popa
jne
mov
das
inc
jle
mov
push
mov
sub
icebp
cwtl
push
subl
add
push
sbb
repnz
fsubr
xchg
jmp
inc
inc
rorb
sbb
jbe
test
inc
adc
and
lock
mov
pop
sahf
inc
ret
dec
imul
stc
sbb
xchg
jmp
mov
fisttpl
mov
shlb
repnz
pushf
ljmp
inc
aas
sbb
ret
and
js
jae
adc
push
fnstenv
mov
jl
fimuls
lock
mov
or
inc
incl
push
negb
sbbb
data16
test
insl
aam
mov
xlat
cmp
inc
xchg
test
mov
mov
nop
jle
xchg
mov
mov
jne
mov
aad
les
mov
or
push
xchg
ja
and
icebp
jecxz
cltd
fwait
or
sbb
stos
ds
cmp
testl
pop
shrl
lods
sub
mov
xchg
frstor
cli
fs
xchg
pop
jno
rcll
lret
daa
loopne
maxps
sub
hlt
xchg
lds
loopne
outsl
cmp
pop
mov
fdivr
mov
jns
pop
xor
enter
shlb
push
sub
push
inc
popa
pop
add
sahf
push
xor
sbb
jle
test
pop
not
xchg
push
sub
nop
nop
pop
es
pop
mov
sbb
stos
sbbl
insl
jns
lods
fs
and
repz
cmc
sbb
pop
outsl
jbe
sbb
mov
cmp
pop
push
aad
mov
mov
and
and
lcall
add
adc
push
xor
cmpl
mov
push
ljmp
test
or
call
loope
ja
xchg
out
shl
or
cmp
fs
push
int
clc
ror
sbb
add
movsl
inc
push
push
jns
imul
rorb
xchg
imul
mov
push
push
aam
xchg
xor
leave
mov
push
js
pusha
iret
aam
sahf
mul
mov
call
xor
pop
mov
int
cs
fwait
adc
sbb
dec
jmp
nop
pop
pusha
push
cld
fdivs
push
adc
and
xor
and
test
cmp
lock
mov
xor
test
push
dec
pop
jo
ss
fiaddl
leave
xchg
sarl
mov
xchg
sti
pop
dec
rorb
leave
dec
out
jnp
fcmovnu
add
jmp
in
aas
sbb
mov
iret
sub
jp
inc
push
js
repnz
jb
outsl
add
aam
movsl
dec
sub
clc
ss
loop
outsb
add
mov
call
sub
sti
mov
test
jge
mov
mov
movb
mov
ret
adc
pop
jecxz
les
dec
xchg
cmp
mov
ret
idivl
adc
or
fstps
push
arpl
das
push
xor
cltd
repnz
repz
mov
subl
cltd
xchg
cld
cs
pop
sbb
or
mov
popa
test
loop
mov
int3
je
sbb
std
cli
repnz
fsubl
inc
add
in
mov
gs
addb
stc
xchg
loopne
sub
pop
stc
scas
inc
test
jg
fiaddl
pop
mov
mov
lahf
outsb
mov
aaa
xlat
adc
add
fdivs
and
and
adc
mov
stc
pop
mov
adc
ret
rcrb
pop
lods
add
repz
test
int
mov
pop
mov
scas
mov
int3
add
dec
daa
push
aam
push
insb
lret
enter
adc
cmp
mov
popf
add
and
jb
xchg
test
mov
sbb
jl
push
sbb
insb
sbb
stos
pop
pop
popa
push
ret
cmc
pop
xlat
pop
addl
jle
gs
mov
push
adc
push
dec
jmp
jns
pop
and
sti
aad
sub
jb
mov
mov
and
mov
xchg
imul
andl
inc
sarb
bound
test
cmp
sbb
push
fsubrs
push
loopne
mov
mov
and
sub
jge
push
cmp
das
ret
shr
roll
mov
test
dec
sub
pop
pusha
sbb
xor
xchg
pop
push
cwtl
xor
sub
cltd
ljmp
aad
pop
aam
pop
inc
adc
shll
push
jp
mov
aas
xchg
js
mov
out
or
clc
loopne
call
fdivp
cli
mov
out
or
lret
jle
cmp
iret
scas
cmpsb
or
push
jbe
out
cmp
inc
sahf
lods
popf
mov
ficoms
enter
lds
leave
dec
mov
addb
adcb
outsl
pop
push
sarb
jg
fcomip
sub
adcb
dec
lds
sbb
adc
sbb
sbb
sub
int
or
int
xchg
ja
pop
mov
aam
cmpl
inc
pop
rcrb
cmc
xor
lret
push
aam
or
je
icebp
lret
in
shl
aas
jns
jne
enter
jecxz
scas
sahf
pop
mov
cmp
push
lods
sub
push
xor
cld
roll
fsubl
dec
lods
cli
and
out
data16
test
mov
xchg
pop
stos
dec
push
shlb
xchg
popf
jae
notb
arpl
into
cwtl
sbb
out
jmp
out
mov
call
jb
cmpsl
or
subb
jne
in
cmpl
jle
push
dec
cmp
jno
jns
inc
push
mov
movsb
xchg
int
sbb
mov
pushf
rcrl
in
xor
scas
xor
jbe
loop
mov
or
jmp
or
mov
aaa
fadds
out
fdivs
add
inc
int3
mov
cmc
aas
and
add
mov
push
pop
mov
jp
clc
pusha
jo
xor
jno
push
stc
icebp
ljmp
adc
enter
and
aaa
push
lods
adc
cli
xchg
aad
mov
int
jnp
jp
out
fwait
sbb
pop
lods
neg
pushf
add
fwait
mov
adc
sbb
mov
sbb
fwait
outsb
xchg
scas
sbb
push
test
popa
mov
into
leave
push
lods
repnz
mov
pop
stc
sub
ret
push
pop
in
xor
outsb
loope
sahf
popf
sbb
out
out
out
mov
cmc
xorl
push
int3
lods
jmp
cld
testl
pop
ret
mov
rorl
lret
in
out
mov
fcoms
xor
pop
movsl
mov
iret
in
movsb
sub
pop
cmp
jg
pop
fs
les
pop
in
imul
js
fs
adc
or
repz
cmpsl
pop
mov
enter
imull
push
pushl
rorl
out
mov
or
stc
popa
imul
and
or
pop
lret
or
nop
or
in
mov
cmpsl
repnz
cwtl
dec
ret
and
and
or
xor
shll
dec
popl
jp
xor
mov
jg
or
sti
xchg
mov
out
push
cmc
int3
jecxz
mov
sahf
inc
push
movsb
addr16
pop
cmpsl
movsb
xchg
add
cli
inc
dec
lods
push
xor
jp
adc
pop
stc
test
or
push
stos
mov
loope
push
sub
pop
pop
out
daa
sahf
hlt
ja
add
pop
jbe
jmp
adc
mov
cmp
mov
sbbl
js
push
pushf
xor
dec
jb
imul
idiv
dec
dec
scas
xor
pcmpgtb
mov
lret
jp
lahf
add
mov
pusha
bound
cmp
cmp
add
mov
xor
nop
loope
in
lcall
cmpsb
jne
mov
pop
adc
jb
movsl
data16
xlat
lds
mov
lds
xor
popl
or
orb
and
fisttps
jle
stc
std
or
and
ds
stos
lcall
sbb
jnp
dec
mov
mov
scas
je
loope
iret
stc
mov
push
shlb
fbld
xchg
jno
push
pusha
gs
fstl
sub
out
dec
cmp
cmpb
push
int3
mov
mov
cltd
sub
xchg
sbb
addl
int
imul
outsb
mov
and
pop
pop
dec
cmp
sub
fdiv
mov
out
push
pop
orb
ljmp
fimull
lcall
cli
mov
stos
add
adc
sub
cmp
iret
icebp
xchg
aaa
fst
xor
mov
or
xor
pop
push
mov
xor
and
push
add
cmc
push
fisttps
xor
mov
xor
jb
in
imul
in
push
ret
ljmp
xor
mov
mov
lret
pop
icebp
movsb
ret
js
arpl
leave
push
stos
hlt
repz
lret
mov
popf
mov
aas
repz
mov
lahf
and
fdivl
fs
mov
xchg
arpl
lahf
adc
mov
xchg
mov
ja
mov
xor
push
dec
int3
nop
xchg
ljmp
sbb
cmp
lret
jle
dec
pop
pop
and
stos
es
mov
pop
push
lods
mov
add
adc
fistps
jge
fstps
ja
mov
jns
mov
or
add
xchg
cmp
lods
jno
in
mov
xor
adc
mov
jp
xchg
out
adc
xchg
mov
aad
jne
movsl
dec
sbb
shll
xor
cli
cmp
test
test
push
or
sub
nop
cltd
dec
push
add
mov
psllq
cmp
scas
mov
sbb
dec
or
add
int3
or
cmpsl
push
jle
pop
rorl
jecxz
js
inc
imul
fsubrs
mov
push
mov
les
cmpsl
adc
fnstcw
mov
mov
push
cmp
xchg
lock
jno
fsubrl
lods
outsl
fldl
cmpsb
jmp
push
jmp
dec
ret
fmul
stc
jae
xchg
lret
jns
test
pop
dec
xchg
dec
jb
arpl
lea
jp
dec
je
iret
mov
imul
mov
scas
sbb
adc
aaa
sub
lea
test
or
pop
ljmp
sub
iret
gs
ljmp
jle
dec
inc
scas
pop
pop
test
push
xor
and
ds
iret
mov
xchg
fimuls
sub
push
mov
xor
add
xor
mov
mov
xchg
jb
repz
rclb
test
or
and
cmp
test
stos
pushf
fisubs
fmulp
pop
ds
pop
iret
cmp
push
pop
jns
sub
outsb
or
cmp
dec
ds
inc
pusha
xchg
inc
dec
test
mov
stos
sub
sub
mov
dec
sub
add
jnp
mov
xor
xor
inc
sub
mov
add
inc
jmp
lret
pop
int3
inc
inc
ja
jl
cmp
push
sbb
inc
icebp
mov
mov
mov
mov
aam
notl
aas
in
sbb
mov
pusha
push
popa
and
add
mov
pop
mov
clc
and
jmp
add
adc
cmp
push
imul
call
fmul
stos
mov
add
push
ljmp
and
aaa
iret
leave
xchg
jecxz
adc
push
cmp
arpl
out
or
jo
mov
mov
imul
inc
call
sbb
mov
divl
and
or
mov
adc
dec
mov
das
test
ja
rcll
cwtl
dec
jle
mov
jns
lods
outsl
cmp
loope
sti
xchg
jl
ds
out
push
mov
push
ljmp
push
cmp
divb
mov
jns
mov
testb
aad
sbb
test
repnz
pop
xor
add
mov
fadds
fwait
popf
cld
dec
xchg
cmp
inc
adc
push
data16
jp
fbld
mov
mov
pop
and
push
or
pop
stos
push
jns
insb
sbb
mov
sub
lret
nop
xchg
xchg
adc
xor
jnp
push
xor
mov
icebp
insb
xorb
or
push
dec
dec
les
mov
in
enter
xchg
in
xor
inc
add
adc
and
jnp
sbb
add
push
daa
inc
add
sbb
ficoms
das
jmp
mov
push
or
pop
int3
and
sbb
push
insl
push
inc
hlt
stos
nop
xchg
xchg
mov
dec
imul
xchg
xor
fnsave
insb
testl
out
shl
cld
inc
addr16
icebp
js
lret
ret
dec
ss
push
loope
cwtl
xchg
imul
jae
push
jne
inc
mov
and
in
jg
jecxz
inc
and
pop
jno
insb
or
xchg
mov
dec
call
movsb
psllq
sbb
mov
insl
sbb
push
les
popf
xchg
sbb
cmp
ss
xchg
sbb
xchg
repnz
push
jmp
inc
mov
lds
add
cmp
out
pop
mov
mov
cmc
outsb
inc
add
cld
enter
repz
mov
mov
sub
jne
inc
push
or
mov
mov
push
pop
jb
lds
lret
or
lea
pop
sarl
incb
popf
and
aam
sti
dec
sub
push
lcall
add
xor
loopne
add
ret
gs
mov
outsl
push
push
mov
stc
mov
in
lock
add
jg
sbb
cmc
iret
in
call
inc
out
and
stc
inc
enterw
cli
in
ret
or
cmpb
xor
mov
aaa
push
idivb
shlb
les
imul
pop
xorb
out
dec
cmp
mov
jl
das
insl
mov
in
pop
rcl
fisubl
into
and
dec
mov
mov
iret
test
out
dec
aam
jecxz
xchg
int
sbb
xor
mov
xchg
loopne
mov
mov
ret
sub
or
jl
or
into
jg
pop
and
pop
jecxz
leavew
sub
shrl
pop
in
call
xchg
add
fdivrl
mov
fiadds
cmpsb
xchg
pushf
push
es
stc
mov
mov
out
movsl
subb
inc
push
and
push
cmp
ljmp
mov
sbb
xchg
cmp
cltd
addr16
hlt
fistl
mov
dec
imul
daa
lcall
daa
movsl
push
push
add
stc
dec
jl
ja
adc
sbb
jno
push
ss
push
lret
pop
inc
and
pop
sub
adc
pop
cmovb
add
cmp
pop
and
sbb
jge
fwait
jp
stos
pop
mov
or
sub
shr
sbb
jge
loopne
mov
cmp
out
cld
test
stos
nop
dec
mov
mov
sub
mov
leave
fdivp
push
idivb
lcall
inc
sub
xor
es
adc
out
aaa
mov
jnp
adc
test
jmp
in
inc
hlt
icebp
cmp
and
imul
lods
ret
lock
cmp
cli
mov
xor
in
inc
mov
jb
sub
adc
movsb
sbb
fisttps
repz
lds
sub
insl
sub
iret
in
arpl
add
cwtl
mov
insb
jno,pt
fcmovne
and
lcall
fsubl
and
sbbb
aam
in
add
cmp
push
jmp
fmulp
sub
sub
rcrb
cmp
int
adc
iret
sbb
xor
pop
push
push
xchg
mov
sbb
pop
mov
enter
ljmp
sbb
roll
push
jle
adc
daa
rorl
dec
enter
sub
mov
and
pop
mov
add
cmc
outsl
mov
cli
pusha
adc
mov
mov
popa
push
aaa
imul
lret
inc
pusha
test
mov
js
imul
lods
outsl
iret
cmp
mov
cld
sahf
mov
push
mov
jbe
out
mov
pop
and
adc
sbb
inc
data16
pop
jge
cmp
dec
int
adc
add
in
mov
sahf
and
inc
push
xchg
push
or
lret
shlb
sub
clc
movsb
dec
mov
jne
sbb
push
div
dec
xlat
inc
jg
mov
jmp
or
jne
add
insl
mov
test
test
sub
ss
imul
xor
inc
arpl
xlat
flds
int3
jp
out
jge
or
pushf
subl
push
cmp
mov
leave
adc
adc
outsb
bound
xchg
pop
xor
into
in
or
mov
out
dec
sbb
popf
dec
test
and
push
jns
or
push
daa
xchg
sbb
jns
jb
add
pop
cmpsl
inc
and
pushf
adc
scas
pop
je
jno
dec
add
jmp
jmp
mov
push
mov
jl
vrsqrtps
mov
lock
xchg
cmc
gs
inc
stc
sub
ds
pop
pop
in
inc
mov
push
test
pop
mov
jp
mov
mov
or
adc
aad
xor
roll
dec
push
out
or
cld
popf
inc
lods
cwtl
std
add
hlt
ja
pop
lods
mov
xchg
push
add
push
pop
or
and
mov
adc
inc
out
fwait
xchg
jae
insb
scas
fmuls
cltd
xchg
mov
jg
mov
icebp
outsl
sbb
loope
mov
add
mov
push
mov
in
or
jns
loope
aaa
shrb
leave
test
jl
addr16
jmp
aaa
shl
jo
pop
popf
inc
mov
cmpsl
push
push
ds
lret
sub
roll
jne
inc
dec
je
jno
into
pop
loopne
fs
into
repz
cmp
insb
xchg
stc
cmp
mov
push
movsb
lahf
cmpsb
cmc
add
add
negl
lcall
mov
nop
fisttps
mov
mov
les
mov
mov
test
jp
lds
and
movl
dec
or
pop
adc
xor
adc
test
fadds
add
jb
subb
push
push
das
sbb
les
jl
ss
sub
popf
mov
cmp
dec
xchg
sub
sbb
xchg
or
jmp
stc
sub
pop
dec
pop
jns
ss
adc
mov
mov
scas
call
xorl
push
cmc
push
test
pop
xchg
jnp
mov
mov
loopne
cmp
cltd
xchg
cwtl
pop
push
and
xlat
shll
aam
ret
fsubs
movsl
repz
mov
xchg
ror
pop
dec
sub
sub
mov
and
or
pop
xchg
es
and
sub
sub
xchg
cld
cmpsl
imul
ljmp
cmp
das
mov
sarb
push
cmp
sub
xor
mov
adc
push
xchg
pop
and
insl
roll
sti
jle
jb
dec
push
inc
jmp
jb
daa
xor
xchg
cmp
xor
call
mov
sub
aaa
fpatan
test
pop
xchg
mov
inc
stos
sbb
xlat
adc
stos
lcall
mulb
jnp
shll
scas
inc
nop
dec
stc
stos
add
push
sti
inc
push
push
mov
pop
pop
add
test
dec
and
fnstsw
ljmp
cmp
arpl
lcall
push
jle
xorl
jb
repz
inc
mov
or
sbb
cmpb
mov
js
push
sub
jae
xchg
pusha
jge
mov
push
sbb
mov
cmp
loopne
cmpl
fwait
push
imul
jge
clc
bnd
cmp
mov
movsb
gs
sbb
dec
shl
out
cwtl
je
mov
mov
shlb
and
iret
fwait
loop
movsb
out
xlat
add
or
loope
sub
mov
sbb
push
sub
sub
mov
insl
mov
and
lret
loopne
movsl
push
aas
push
cmpb
dec
and
scas
push
mov
clc
cmp
enter
cmpsl
xor
in
das
je
fcmovb
adc
inc
mov
fnstsw
test
add
out
jno
or
sub
test
in
rcl
pop
leave
xchg
dec
and
repnz
mov
dec
jne
iret
icebp
sub
and
mov
dec
pop
out
inc
mov
or
xlat
inc
cmp
lock
push
movsb
or
xchg
data16
lea
xlat
aas
adc
loopne
addr16
mov
ljmp
add
fldl
sub
sbb
xchg
imulb
push
jmp
stos
jo
popf
enter
jne
xor
xchg
test
lahf
sub
inc
cmp
mov
pop
push
nop
fstpt
push
loopne
lods
jl
into
repnz
mov
fsubrs
add
inc
sarl
mov
in
stc
sub
clc
jg
cmp
jg
mov
and
cmp
addl
addb
xchg
scas
cmp
add
dec
cmp
pop
or
pushf
push
sbb
sub
fsubr
call
mov
mov
add
cmp
jecxz
dec
jecxz
push
xchg
sti
sahf
jecxz
and
mov
ret
jmp
xor
dec
hlt
xchg
mov
dec
out
mov
mov
cs
lds
jbe
lahf
stc
adc
insl
jae
mov
mov
lods
jo
adc
mov
mov
adc
inc
mov
add
dec
in
pop
xchg
adc
push
cmpsb
sbb
push
sub
rcll
mov
ljmp
daa
cmpsb
sub
and
push
add
aas
imull
lcall
xchg
lock
mov
dec
cmp
adc
cmp
mov
mov
popf
cmp
popf
push
daa
jp
adc
imul
hlt
pop
lret
sti
test
cmp
add
or
xor
pushf
sbb
inc
aaa
xchg
lcall
aam
sahf
pop
xchg
push
ret
in
inc
and
daa
push
mov
mov
push
fldl
push
inc
mov
or
xor
cmp
push
imul
and
xchg
nop
mov
adc
mov
or
test
mov
dec
rcrl
push
cld
xor
sbb
mov
cmpsb
fnstcw
sbb
out
jmp
sahf
add
pop
jp
pushf
test
cmp
add
fstpt
inc
es
fwait
pop
xlat
xor
dec
lods
push
mov
out
xchg
add
adc
mov
jge
imul
add
stos
mov
fimull
sbb
lret
inc
add
sbb
inc
hlt
xor
jg
rcrl
mov
dec
cmp
or
in
push
test
popa
push
inc
jne
xchg
fwait
or
scas
pushf
dec
mov
mov
push
push
jecxz
cmp
std
in
dec
loop
pop
or
push
xchg
add
mov
mov
cmpsb
inc
int3
push
mov
aaa
adc
add
jle
cmc
cs
mov
in
mov
les
shrl
cmp
xchg
dec
movsb
pop
leave
movsl
cltd
adc
out
xlat
mov
sub
enter
mov
jl
cwtl
sub
sbb
push
pop
cmpsl
movsb
push
xchg
outsl
fsts
lods
rcrl
mov
test
dec
jno
fwait
stos
dec
stos
sub
test
and
and
cli
or
jle
push
ffreep
scas
xor
gs
sub
aas
pop
dec
sbb
xor
inc
arpl
mov
scas
cwtl
fnstenv
addb
bound
pop
cwtl
pop
or
jmpw
mov
pushf
mov
hlt
or
or
lret
lahf
jns
std
adc
sbb
pop
aad
repnz
pop
dec
out
imul
mov
push
int3
jne
mov
xchg
lcall
iret
xor
roll
inc
out
gs
inc
daa
pop
cwtl
jno
and
xor
adc
mov
rolb
cmp
inc
dec
cs
addr16
dec
cmp
sbb
jae
jne
pop
inc
cs
mov
popa
out
and
inc
or
cmp
movsb
in
jo
insb
sub
aas
xchg
nop
repnz
cli
rcll
mov
int
mov
insb
out
mov
pop
je
cmp
ret
lahf
add
cmp
inc
add
addl
lods
enter
roll
aad
inc
pop
cmp
push
sarl
test
cld
movsb
in
mov
sub
fstpt
add
loopne
loope
cmpsb
cmp
stos
in
int
test
xor
mov
pushf
inc
push
ljmp
adc
das
sti
sahf
xor
jns
cmp
bnd
push
nop
scas
sub
mov
pop
xchg
or
sub
inc
mov
push
jne
dec
pusha
add
xchg
sbb
adc
lcall
pop
ja
orb
lcall
mov
mov
insl
leave
sub
mov
dec
mov
and
notl
dec
dec
adc
pushf
pop
out
xchg
shl
cld
xchg
pop
cmp
jmp
dec
lcall
sbb
nop
cmp
out
jl
dec
and
lret
mov
dec
shlb
mov
add
lods
push
clc
int
idivb
jg
add
jp
in
sbb
aam
dec
sbb
jo
imul
dec
call
test
xor
in
les
pop
jle
sub
mov
jge
cltd
cmp
mov
and
outsl
mov
lret
pop
add
sub
push
repnz
aad
push
mov
ljmp
scas
xor
and
out
cmp
sub
mov
stc
lods
out
push
out
inc
sbb
jne
mov
pop
add
cmpsl
mov
jmp
xor
lret
int3
or
jl
dec
int
sub
mov
lahf
insl
lods
inc
vmwrite
sub
shlb
mov
pop
int
jg
imul
fisubrs
xor
adc
jecxz
nop
pop
frndint
pop
lock
addl
imul
mov
leave
outsb
das
je
lock
not
std
cmpsl
insb
out
push
das
push
sbb
sarl
ficoms
enter
mov
test
mov
or
imul
xchg
jp
jbe
mov
out
dec
loope
pushf
arpl
fwait
fs
decb
into
mov
cmp
mov
lret
aaa
jecxz
cmc
dec
xchg
adc
adc
jle
adc
outsb
cltd
push
mov
sub
cld
out
mov
mov
mov
addr16
bound
or
mov
and
and
jnp
insb
scas
cmp
push
pop
faddp
dec
enter
xchg
inc
mov
mov
cmc
mov
lea
repnz
cmp
fmuls
adc
shr
test
lods
push
iret
and
mov
mov
lock
shrb
push
add
cmpsb
leave
push
icebp
jp
sarb
mov
aad
and
stc
loope
pop
into
mov
sub
jp
adc
lcall
movsb
inc
pop
lods
pop
les
shl
push
mov
fmull
mov
push
pop
loop
test
jmp
movups
ds
mov
adc
decb
pop
arpl
push
inc
jmp
mov
call
add
les
ss
sbb
sbb
ret
pop
popa
jle
cmc
rcrl
insb
incb
mov
shll
loope
shrl
lea
stc
push
pop
mov
aaa
dec
js
aas
jo
and
cltd
cli
idivb
cmp
xchg
jb
jp
jnp
jb
xchg
fidivrs
lods
pop
add
lods
nop
daa
fadds
jmp
out
xchg
sbb
sub
cmp
unpckhps
pop
push
movsb
rcr
xchg
out
lret
mov
notb
xor
or
not
repnz
mov
or
rorl
loopne
cs
sub
fstpt
aad
pop
out
lcall
fsubs
push
test
int
jb
gs
sahf
lods
stc
scas
cmpsb
fidivs
xor
pop
in
adc
mov
fidivrl
pop
add
mov
mov
mov
push
jne
mov
ja
dec
sbb
jg
and
pop
ds
dec
cld
jl
mov
xchg
sub
add
jno
mov
subb
jge
inc
sbb
shlb
sbb
neg
roll
lods
sbb
lcall
mov
shlb
ret
jo
sti
xchg
idivb
dec
jno
sub
ds
gs
js
pop
lret
xor
jne
data16
cmp
xchg
dec
jne
ljmp
xchg
push
mov
cmp
sub
xor
mov
push
shrb
subl
jmp
loop
or
pop
jne
fwait
jp
je
xor
stos
mov
lea
cmp
mov
in
adc
outsl
fsubrs
inc
adcl
in
xchg
fildl
out
adc
cld
mov
pop
lea
movsl
test
push
test
testl
int3
and
pop
les
fstl
jbe
popf
ja
add
push
fidivs
xor
lock
imul
sbb
inc
movsl
add
fcmovnu
push
scas
add
pop
inc
orb
stos
je
das
sub
jno
mulb
dec
shlb
repnz
inc
sahf
aam
pop
xchg
add
addl
fmull
mov
out
sahf
stos
jns
fsubs
std
add
mov
pop
nopl
loopne
fwait
pop
je
push
inc
or
andb
jg
mov
jle
mov
pop
shrb
cltd
sub
enter
dec
xlat
mov
out
xchg
add
xlat
dec
mov
lods
int3
sarl
dec
jns
shl
jno
inc
test
movsb
xchg
sbb
lahf
fists
stos
inc
imul
fwait
out
idivl
sub
mov
lea
aaa
shr
imul
cld
add
sbb
mov
jg
jae
jns
sarb
aaa
outsb
fmull
js,pn
pop
sbb
xor
sub
cwtl
dec
jo
mov
dec
mulb
mov
out
cld
divb
inc
lods
in
sub
lods
push
mov
dec
pop
aam
pop
sbb
loope
push
jp
ljmp
rcrb
loope
cmp
les
dec
adc
nop
sub
dec
loopne
mov
mov
xchg
dec
push
sbb
addr16
push
jns
and
dec
je
push
in
jp
sbb
shlb
ljmp
ljmp
jbe
and
sub
jge
xlat
inc
sbb
sbb
jne
add
mov
les
cmp
and
int3
sahf
pop
das
jl
pop
jno
pop
test
adc
js
sub
xchg
inc
test
cmp
push
push
out
xor
mov
push
daa
add
popa
mov
mov
aas
jecxz
lret
push
cmc
ds
ds
pushf
sahf
ja
aam
pop
cmp
cwtl
jge
cmpsb
pushf
mov
clc
mov
jo
lea
aaa
clc
xor
out
mov
cld
sarl
xor
and
sbbb
jno
repz
mov
dec
subl
add
sub
sub
pusha
cmp
or
sub
jp
stos
xorb
addl
fsubrl
insl
and
hlt
jno
lahf
mov
and
in
pop
pop
lret
test
repz
loope
xlat
ret
dec
mov
cltd
add
sbb
iret
xchg
cs
xchg
divl
fadds
adc
popf
cmp
dec
fidivrl
in
mov
aas
mov
jae
xchg
add
mov
cmpsl
add
pusha
push
xchg
cmp
imul
cltd
out
dec
xor
ret
and
add
or
xor
mov
xchg
push
mov
ret
sbb
in
popf
mov
aas
or
adc
jge
lret
sbb
cmp
xlat
outsb
and
pop
and
xor
mov
or
dec
dec
sti
out
out
std
mov
out
sbb
inc
mov
mov
sahf
mov
and
repz
test
push
cltd
ret
shl
call
addl
mov
repz
cltd
cmp
ret
mov
in
cld
sbb
sahf
pop
in
mov
fs
fadd
sbb
data16
jmp
ficomps
rolb
and
fwait
inc
sub
pushf
xchg
outsl
and
jbe
xchg
dec
dec
inc
ret
push
lods
sub
pop
inc
pop
jge
jecxz
or
stc
jb
mov
in
sbb
mov
arpl
sbb
loop
push
sbb
jae
orl
pusha
rcll
popf
add
or
and
cmp
inc
mov
stos
sbb
mov
and
aad
scas
sbb
int3
in
xor
notl
sahf
and
movsl
inc
mov
mov
int3
aam
loop
mov
pop
pop
sbb
in
xchg
out
dec
cmp
mov
in
sahf
mov
xlat
push
not
std
mov
adc
rcll
dec
enter
fcompl
mov
add
sbb
sbbb
imul
lahf
ret
and
repz
inc
lods
stos
pop
mov
loopne
arpl
imul
push
mov
cmp
insb
fwait
sbb
push
push
dec
xor
out
popa
jecxz
add
adc
aas
std
shll
push
lahf
add
sbb
fldcw
adc
cmp
loop
push
jl
mov
xor
in
mov
xor
cmpsl
push
enter
and
xor
std
rorl
je
aad
xor
xchg
mov
xor
inc
inc
push
fistl
ret
out
fs
lds
cmp
int3
mov
testl
xor
add
mov
xchg
scas
jae
ss
pop
fcoms
call
out
pop
aam
sbb
jns
repnz
push
in
push
popf
dec
jge
jnp
lock
cs
test
add
push
repnz
divb
sbb
ror
adc
xchg
outsb
mov
aas
sub
nopl
ja
data16
into
out
cmpsl
aaa
ja
push
les
sbb
xchg
popa
pop
mov
add
fldl
add
cmpsl
leave
pushf
pop
stos
pop
cmp
lcall
sub
cmc
sar
pop
sub
mov
ret
stos
imull
bound
pushf
jge
lock
and
pushf
jnp
repz
mov
incl
add
daa
and
pop
adc
inc
fsubrs
stos
das
mov
xor
in
adcl
pushf
lods
test
and
nop
dec
shlb
jl
ret
or
xchg
fnstsw
mov
movsl
push
lret
rcr
into
enter
push
out
jle
out
xchg
and
pop
xor
stos
loopne
lret
out
push
in
scas
int
pusha
sti
repz
inc
sbb
filds
hlt
std
aad
jp
jge
sbb
mov
jne
xcrypt-cbc
cmpsl
aam
and
loopne,pt
filds
sub
inc
inc
inc
popf
push
push
cmp
jb
repz
mov
adc
cmp
pop
vminss
lret
lahf
iret
shr
jae
xchg
shrl
fs
mov
jnp
stos
dec
inc
lock
mov
xlat
hlt
xchg
daa
mov
inc
insb
repnz
sti
mov
xchg
ret
aam
popf
mov
cmp
insb
add
ficompl
push
jno
xor
jns
test
push
jmp
xor
std
das
pop
test
push
cmpsl
dec
dec
mov
lds
add
inc
jo
inc
js
loope
mov
mov
xchg
call
dec
addr16
dec
popa
arpl
aas
aam
jb
lret
mov
mov
lods
incb
and
pushf
add
mov
xlat
je
imul
sbb
mov
mov
jle
scas
mov
xor
subl
xlat
add
pop
add
ret
pushl
imul
push
sub
sub
inc
loopne
pop
xor
fucomp
cs
in
mov
clc
fwait
add
daa
cmp
cld
ljmp
data16
add
sbb
das
shll
in
mov
clc
xor
mov
sbb
xchg
lret
pop
mov
sub
arpl
fidivrs
mov
outsb
lds
stos
mov
xchg
sub
jmp
and
mov
flds
add
inc
je
rorl
por
movsb
sub
mov
jo
stos
xor
add
mov
out
hlt
mov
xor
pop
sub
testb
sub
pushl
sbb
rclb
pop
jp
gs
sub
mov
in
dec
test
xor
add
lret
or
mov
jg
mov
rcrl
push
fs
and
jo
mov
inc
jp
cli
das
or
testb
aas
int
lods
movsl
negb
mov
jle
push
mov
xchg
jecxz
mov
imul
mov
stos
pop
out
push
adc
xchg
xchg
mov
mov
xchg
roll
sub
ljmp
jne
inc
hlt
nop
loop
add
mov
incb
jnp
loopne
call
insl
mov
jne
out
mov
xor
xchg
into
adc
push
add
ret
xchg
rcrl
in
scas
scas
cmp
test
stos
xor
lret
and
mov
xchg
pop
jl
pop
lock
xchg
filds
movsl
movsl
lock
jp
clc
push
daa
xchg
jecxz
test
out
mov
shrl
or
and
cmpsb
lods
push
sarb
adc
or
xor
push
loop
arpl
xor
mov
in
loope
lcall
xchg
push
sub
inc
dec
stos
inc
nop
addb
pop
pop
adc
sbb
sub
sub
jne
call
adc
mov
imul
clc
mov
xor
sbb
stc
cwtl
push
in
popa
mov
mov
ss
xchg
nop
or
xorb
and
cld
jo
fcmovu
pop
jo
shr
xchg
fidivs
in
push
inc
in
jno
out
das
push
repz
jo
aad
sub
push
outsl
adc
jle
je
mov
insb
test
leave
das
loop
jbe
or
aad
dec
or
out
jb
repnz
push
pop
jp
enter
lds
ja
aam
adc
in
mov
sbb
jl
outsb
mov
loop
cli
jb
adc
mov
iret
int3
dec
adc
fcoms
gs
cltd
push
jnp
rcrl
fs
imul
dec
jno
mov
pop
dec
scas
mov
in
xor
fs
lods
sub
scas
outsb
jge
mov
shl
xor
pop
out
push
adc
push
das
or
shrb
pop
or
mov
xchg
int
xor
fistl
jb
and
xor
sbb
in
lock
aaa
int3
or
nop
dec
add
ljmp
std
push
cltd
adc
icebp
mov
xchg
push
notl
nop
ja
out
scas
es
dec
decb
xchg
sahf
and
dec
mov
and
rorl
dec
xchg
jg
cli
dec
lods
test
adc
lret
insl
inc
data16
test
rcpps
lahf
mov
faddl
push
ss
sbb
loopne
xchg
test
xchg
pop
jg
lret
cmp
and
jb
xlat
lds
pop
pop
or
add
dec
cmp
cmpsb
insb
leave
neg
xchg
add
cmc
mov
jns
inc
aam
push
inc
mov
mov
call
add
pop
enter
popf
add
stc
xor
out
inc
mov
lcall
fidivs
popa
mov
outsb
xchg
aas
ljmp
hlt
sti
paddsb
fldenv
scas
dec
xchg
inc
sahf
xor
inc
in
je
inc
push
leave
sti
in
je
jb,pn
xchg
xchg
sbb
movhps
nop
sub
test
loopne
add
fwait
jg
xchg
jno
push
dec
cmp
and
jge
icebp
xchg
test
out
jg
mov
pop
mov
xchg
jbe
jp
ds
push
cmp
xlat
add
push
addr16
mov
adc
arpl
int3
mov
js
mov
mov
add
sub
mov
mov
rcll
sbb
ret
test
mov
inc
cmpsl
addr16
jbe
dec
les
popa
push
lret
lds
pop
clc
outsb
addr16
imul
cmp
lahf
pop
mov
mov
sub
insb
push
sub
lea
sub
std
aam
inc
shrb
mov
test
adc
arpl
xor
inc
mov
repz
test
imul
jno
shrl
js
jno
pop
mov
icebp
xchg
imul
stos
fnsave
sub
les
in
xchg
cmp
jl
enter
push
push
mov
xchg
scas
adc
dec
add
negl
push
into
stc
add
insb
mov
lea
test
pop
popf
and
xor
pop
stos
subl
xor
sub
push
lret
pop
call
cs
sub
mov
pusha
les
sub
lods
pop
mov
imul
push
jge
jge
jb
xor
fwait
jg
pop
xor
mov
clc
dec
mov
sbb
mov
sub
add
mov
js
repnz
in
sbb
mov
iret
xchg
cmpsb
lock
imul
fadds
rcl
jl
xchg
mov
and
adc
add
imul
jns
arpl
cmp
xchg
test
mov
push
jne
ja
pop
xchg
scas
test
fmul
adc
jns
daa
xchg
popa
cmc
adc
shll
sbbl
add
imul
cltd
push
aad
stc
lret
xorl
aaa
and
sbb
cmc
xor
xlat
addr16
lahf
aas
sub
add
jmp
sbb
insb
mov
adc
fcoml
and
stos
cmp
int3
and
xorb
call
aas
cmp
add
fsubs
outsl
push
mov
mov
ret
jbe
pop
sub
es
and
mov
pusha
imul
lods
push
out
mov
shll
test
popa
sub
lds
push
int
push
push
xchg
popf
ret
sub
adc
xlat
pop
decl
pop
sub
lret
cmpsl
mov
sbb
jmp
and
xor
ret
sbb
or
lods
out
cmp
fs
xchg
mov
push
mov
jb
insl
add
loopne
lcall
push
or
test
xchg
sub
jns
push
stc
ficoml
xor
inc
mov
push
mov
or
adc
jecxz
and
lret
std
dec
or
xchg
test
out
xorb
sbb
mov
hlt
js
jae
mov
into
scas
cmp
es
enter
mov
dec
pop
arpl
xor
int3
adc
push
lods
ss
lahf
loope
fstpt
jecxz
in
rcll
inc
lret
fidivs
cmp
add
dec
fs
ja
leave
xchg
cmpsb
arpl
or
pslld
mov
imul
inc
les
add
das
xor
cwtl
inc
aam
adc
cmpsl
imul
push
hlt
push
popl
jmp
sub
mov
fstl
mov
cs
and
call
movb
clc
mov
jg
in
daa
mov
and
or
add
jb
push
cmp
dec
negb
push
or
hlt
push
lock
mov
mov
sub
ds
pop
leave
dec
lods
inc
fisubrl
push
jp
pop
cmp
dec
scas
sbb
lret
aam
stc
pop
fimull
repz
jno
add
xor
sub
mov
cmp
xor
insl
repz
dec
xor
pop
jb
jbe
aaa
push
xor
int3
je
push
sub
jo
negl
push
and
call
mov
aam
repnz
sbb
or
jns
les
sbb
pop
jmp
or
mov
jle
add
iret
push
icebp
xchg
or
aaa
arpl
loope
outsb
sub
lock
adc
sbb
subb
test
or
call
cwtl
fidivrs
shlb
mov
jmp
cmpsl
adc
cmpsb
and
jns
sar
xlat
adc
gs
mov
xchg
mov
mov
mov
outsb
dec
mov
and
dec
iret
mov
cmp
jnp
addb
mov
or
pop
lock
adc
inc
mov
add
mov
cltd
mov
in
sub
test
xor
adc
mov
inc
add
mov
push
std
fwait
ljmp
mov
xchg
inc
xchg
or
push
lahf
test
std
xor
mov
jb
sub
adc
mov
mov
sbb
popa
movsl
inc
xchg
lahf
rolb
push
ds
scas
out
jbe
dec
idiv
fisubrs
lods
movsl
cmp
and
jbe
scas
cmp
or
std
jae
shll
cwtl
sti
lock
pop
pop
insb
mov
daa
jne
mov
sub
mov
imul
in
jnp
or
xor
fwait
cs
push
gs
pop
sti
out
adc
pop
sbb
lret
bound
nop
fists
dec
cmpl
loopne
int3
push
pop
fs
pop
sti
fs
or
imul
je
out
jns
jle
jns
bnd
outsb
cltd
bound
arpl
add
add
mov
insb
xchg
fwait
xor
clc
call
cli
daa
jle
shll
pop
mov
fcomp
push
in
mov
rorl
and
scas
fistpll
mov
les
icebp
add
xorb
sbb
dec
xor
aad
loopne
add
mull
std
inc
clc
sbb
adc
sub
xchg
inc
jmp
ret
pusha
cmp
lahf
xchg
jns
and
lcall
mov
xchg
jbe
outsl
ljmp
sahf
fiadds
fstl
in
cmp
add
out
stos
push
jno
dec
int3
fcmove
ret
int3
icebp
add
sti
inc
stos
sahf
in
cmpsb
ficoml
adc
fwait
sub
cmp
fwait
pop
dec
mov
into
call
mov
xor
adc
inc
shlb
insl
mov
repnz
fcomps
test
mov
imul
cmp
outsl
jge
xor
jl
testb
sub
mov
andnps
adc
notb
sub
clc
inc
es
xor
arpl
test
sbb
mov
sub
insl
jno
fcompl
push
lahf
rorl
cmp
jg
or
lds
sbb
repnz
and
fsub
mov
insb
sbb
and
daa
movsb
or
ss
xchg
cli
cmc
iret
pop
call
mov
mov
push
cmp
aas
insl
fisubs
cld
mov
sub
mov
inc
in
and
in
shll
pop
pop
or
mov
dec
sub
xchg
sub
cmp
rcl
ss
inc
mov
jl
outsl
dec
adc
out
incl
xchg
pop
imul
pop
clc
xlat
daa
push
lahf
and
xor
sbb
adc
andb
insb
xor
stos
inc
sahf
push
mov
into
cmp
setno
jb
adc
xchg
xor
rcll
fistpll
shrl
xchg
sub
subb
jp
fisubs
push
les
xchg
in
adc
xchg
fistps
mov
sub
jo
out
jo
arpl
lahf
lcall
mov
out
lock
leave
pop
rcrl
dec
mov
lahf
push
xchg
jne
loop
mov
andl
adc
bound
ficompl
pop
sbb
in
lods
cmp
daa
test
or
sub
daa
in
cltd
add
pop
xchg
inc
mov
std
jle
lcall
loope
push
test
lahf
pop
jbe
add
das
scas
sarb
jns
xor
xlat
outsb
mov
xor
pop
inc
xor
mov
jns
out
call
push
or
pusha
icebp
popa
lods
add
orl
add
mov
push
push
xor
imul
push
insl
test
adc
cltd
sarb
add
adc
sbb
push
js
out
scas
test
dec
decb
cmp
inc
mov
bound
pop
jno
sbb
jmp
cmpl
sub
mov
jecxz
push
test
mov
cwtl
add
sub
test
pop
add
in
fdivl
pop
jg
dec
push
or
or
jl
mov
stos
jo
lret
dec
cwtl
push
pop
xor
je
loopne
cmpsl
xchg
pop
test
fcomps
or
call
mov
lcall
cmp
mov
lods
xor
adc
jo
pop
add
ljmp
js
test
sub
jbe
pop
mov
mov
mov
push
leave
out
push
dec
dec
and
sbb
scas
dec
pop
inc
push
imulb
or
icebp
fistpl
enter
jo
int
mov
lcall
and
imul
stos
jbe
fimuls
pusha
test
inc
and
sbb
add
and
jge
cmpsb
jl
jbe
jg
mov
loop
sbb
jl
dec
fidivrs
pop
test
scas
push
xchg
pusha
pop
in
mov
mov
sbb
idiv
nop
jnp
imul
xchg
mov
add
sub
fsubrl
mov
dec
cld
pusha
test
aam
mov
push
insb
out
icebp
test
lcall
pop
mov
pop
mov
cs
es
mov
lcall
cld
out
or
leave
das
pop
jle
mov
mov
xor
nop
jecxz
cmp
jecxz
add
ret
ss
fidivl
scas
push
inc
adc
roll
xchg
incb
pop
sub
jo
jle
mov
inc
jge
movsl
hlt
pop
cltd
into
add
fldln2
dec
mov
pop
ja
repz
cs
test
cmp
cmc
sub
pop
pushw
mov
lcall
sub
mov
dec
loop
stc
sub
cs
xchg
jmp
movhps
or
icebp
aas
adc
test
icebp
loop
dec
fwait
dec
mov
mov
aas
bnd
mov
jo
out
sub
jne
sbb
movsb
shll
pusha
rclb
inc
pop
sahf
add
test
js
lret
insl
adc
ss
mov
jb
cmpsl
lock
fwait
xchg
std
test
sbb
es
decl
aad
jne
push
mov
jle
stc
lock
inc
clc
and
xchg
repz
movsb
fisubrl
mov
clc
scas
notl
leave
stos
xchg
mov
pushw
loope
je
cltd
addl
dec
push
test
sub
or
inc
xor
idiv
and
dec
cwtl
iret
pushf
andl
xchg
mov
push
push
or
sbb
in
mov
fidivs
jecxz
int3
mov
add
jbe
popa
sub
push
dec
jno
aaa
js
xor
loopne
cmp
jb
jae
rol
iret
ja
adc
dec
inc
les
mov
aam
push
movsl
fstl
fldenv
inc
mov
and
or
cmp
cmpsl
pop
mov
std
lret
jmp
push
mov
cltd
cmc
ds
in
add
sub
pop
mov
lods
jmp
cmp
cmp
pop
xchg
push
jo
mov
adc
je
mov
gs
imul
and
inc
cli
jns
sub
xor
sbb
or
inc
xlat
cltd
fwait
mov
leave
out
ds
pop
and
and
push
push
repz
pop
fsubs
or
sub
repz
add
add
aaa
aaa
lods
cld
mov
test
arpl
leave
ja
dec
or
out
mov
or
les
sbb
test
fstps
cli
add
xor
out
cmpsb
scas
mov
mov
xor
sub
leave
sbb
arpl
mov
out
rcr
pusha
les
adc
jmp
lea
sbb
scas
sbb
push
sbb
gs
jge
loopne
adc
hlt
das
bound
xchg
mov
cmp
mov
and
and
test
sti
cmp
push
mov
clc
fwait
test
ss
xchg
out
xor
pop
pop
rorb
call
arpl
test
int
insl
aad
mov
std
fsts
fists
lcall
push
cmp
pushf
inc
rclb
sub
xchg
hlt
insb
jmp
lcall
nop
or
fwait
int
mov
rorb
mov
out
je
loopne
sti
repz
rorb
ret
push
in
inc
xor
dec
roll
sub
idivb
movsb
mov
ficoms
leave
lods
jmp
push
jns
or
daa
dec
mov
sub
dec
mov
push
sbb
stos
jmp
test
fstl
mov
mov
or
aam
xchg
pusha
in
mov
lea
push
pusha
or
sub
jg
or
mov
mov
lds
add
movsl
jne
fcompl
daa
jge
xchg
rcll
xor
adc
sub
push
ret
cwtl
bound
es
cld
push
mov
cmpsb
ljmp
fs
cmp
jno
mov
test
lods
ds
and
jge
repz
popa
and
mov
pop
add
xchg
mov
test
cmp
in
mov
push
loop
decb
aas
ret
jecxz
cltd
jo
rcll
jb
insb
ss
outsl
pusha
mov
push
lds
adc
stos
adc
daa
xchg
sbb
dec
push
jp
inc
outsl
lods
xor
pop
and
mov
xchg
lret
out
je
push
mov
pop
les
inc
jmp
enter
aaa
mov
pop
jns
and
lcall
popf
and
into
test
shlb
xlat
jle
in
jns
adc
cs
fisubrl
dec
mov
aas
das
dec
outsl
arpl
mov
jne
push
push
push
fistpl
xchg
jbe
pop
ret
les
adc
aaa
fwait
and
and
xor
fdivp
daa
call
ds
xchg
pusha
int3
insl
or
ret
mov
stos
out
dec
xorb
out
push
cld
mov
inc
iret
insl
mov
ret
lock
jo
or
lret
xchg
nop
mov
jnp
stc
mov
pop
dec
packsswb
pop
add
out
je
lahf
movb
jb
or
xchg
lods
xor
hlt
mov
nop
mov
jp
inc
stc
xchg
add
shrl
int
bound
stc
stc
cmp
xchg
lods
rcll
jmp
dec
scas
dec
inc
aas
in
out
sub
dec
mov
push
sbb
adc
mov
dec
je
inc
mov
add
aaa
mov
cmp
sbb
ss
inc
jae
jmp
dec
je
lea
push
add
sbb
cmpl
pop
pop
cs
roll
inc
sbb
adc
jno
lret
inc
cmp
and
dec
mov
aas
or
xchg
push
lcall
mov
cltd
ja
in
or
dec
inc
inc
icebp
les
cmp
sbb
add
pop
mov
adcb
adc
bnd
fcomps
cwtl
push
mov
mov
sbb
outsb
ds
pop
sahf
mov
ror
or
jle
clc
int
scas
and
push
lcall
lds
iret
sbb
stos
pushf
les
gs
arpl
fwait
xor
push
push
pop
clc
add
insb
into
or
push
in
cmc
aad
cmpsb
xchg
mov
push
cmpsb
cwtl
mov
sbb
xor
aad
jo
add
adc
popa
rclb
mov
add
test
bound
push
push
lock
jge
testl
les
fsubr
les
test
jg
lods
mov
xor
aas
jp
idivl
push
idiv
pushf
cs
push
out
fs
push
xchg
lods
icebp
mov
add
fsubr
xor
es
pop
add
and
mov
and
das
or
sub
testb
mov
movsl
pop
stc
pop
mov
sub
arpl
addb
and
ja,pn
pushl
jnp
mov
jecxz
mov
fadd
lock
add
jbe
cmp
andb
mov
and
test
out
fs
jae
dec
mov
negb
movl
imul
xlat
adc
xchg
int3
add
out
add
mov
int
pop
pop
xor
push
xchg
aaa
pop
xlat
sbb
fs
jno
sbb
add
test
stos
inc
jge
xchg
arpl
cmp
das
sbb
mov
sti
leave
mov
rcrb
push
pop
push
ja
lock
cwtl
mov
sbb
cwtl
push
lods
jmp
push
and
mov
add
or
dec
sbb
arpl
mov
iret
adc
lods
adc
bts
mov
sub
mov
in
xor
test
mov
cld
out
aaa
dec
roll
xorb
scas
pop
retw
sub
pop
cmp
cmp
jle
ds
push
inc
mov
iret
xrelease
jae
out
cmpsl
popl
ljmp
or
mov
sub
sarl
popf
and
data16
mov
addl
ja
xor
sbb
mov
and
cs
stos
rorl
into
movsl
mov
hlt
sub
mov
fdiv
imul
pop
pop
xchg
stc
call
dec
adc
or
jp
lods
xor
mov
scas
lods
add
sub
sbb
adc
ja
push
das
lea
dec
in
movb
and
or
rol
enter
lcall
push
data16
xor
clc
xchg
repnz
pop
out
push
dec
insb
sbb
xor
or
sub
add
jnp
push
ss
lcall
das
ret
dec
sahf
and
push
std
mov
nop
cmc
push
fiadds
insb
dec
int
and
adc
mov
mov
xchg
xor
fs
push
ret
pop
scas
inc
cmpsl
scas
shrb
jg
test
xchg
or
sbb
jne
mov
test
movsl
clts
aad
aad
mov
add
xor
sahf
ret
pop
adc
inc
daa
icebp
xor
rolb
mov
daa
stos
mov
or
rclb
jge
ficoms
imul
adc
out
into
flds
js
xor
or
sub
pop
jg
cltd
or
sub
insb
mov
and
mov
clc
mov
leave
mov
push
rcr
scas
lods
push
fstps
mov
mov
push
ficompl
scas
add
movsb
movsb
xchg
jg
mov
jns
loope
roll
or
scas
add
or
cmp
add
sti
cmp
pop
or
shll
xor
xor
inc
pushw
stc
mov
fdivl
pop
data16
insb
test
movsb
sub
mov
sbb
icebp
mov
and
adcl
scas
sub
and
sub
inc
push
dec
cmpsl
ret
pop
or
icebp
outsl
xor
mov
mov
mov
xlat
inc
fisubrl
and
mov
push
adc
outsl
jg
jl
pop
xchg
mov
ljmp
clc
xchg
push
cmp
repnz
and
sub
movsl
mov
xchg
ljmp
mull
xchg
ret
mov
gs
or
jmp
push
pop
inc
outsb
stos
jns
and
dec
ja
fistl
xchg
aam
inc
inc
call
test
dec
data16
ds
mov
and
into
dec
sbb
push
mov
push
push
xchg
xor
mov
test
arpl
std
jns
xor
shll
in
arpl
pushf
imull
xor
arpl
in
lahf
in
add
add
rolb
cwtl
sub
mov
js
add
insb
lods
adc
or
inc
or
xor
call
cmpsb
xchg
pop
xchg
pop
adcl
mov
push
fildll
outsb
jecxz
mov
test
push
aaa
inc
sub
pop
add
add
std
std
lahf
popf
jecxz
xchg
add
sub
out
lock
push
ja
or
icebp
sbb
xlat
dec
pop
cmp
cmc
push
sahf
lcall
ljmp
mov
xlat
movsl
pusha
loopne
mov
clc
mov
iret
push
in
addr16
enter
int
adc
xchg
mov
push
dec
jg
call
repnz
dec
sub
out
ja
xchg
imul
cmp
stos
cmp
ret
divb
jae
jns
sahf
pop
mov
imul
outsb
fildl
cmp
lods
xchg
insl
in
inc
inc
pop
xor
sti
push
push
cmpb
divl
loope
imul
xorl
rorl
cwtl
test
popf
inc
mov
push
inc
imul
xchg
sub
cmpsb
cli
inc
lret
sbb
mov
dec
shr
loope
divl
sti
fs
and
fs
arpl
pop
mov
rolb
in
shrl
das
mov
fists
outsb
xchg
jmp
jns
enter
inc
mov
pushf
xlat
or
rcll
iret
adc
push
std
mov
lret
and
or
mov
lods
and
mov
stos
sahf
xor
lock
inc
das
fldenv
scas
or
jno
inc
add
inc
push
xchg
pop
shrb
mov
lock
rcrl
dec
mov
cmp
sub
arpl
testl
add
lret
cmp
fisubs
adc
mov
dec
xor
loop
xchg
cwtl
xor
rorb
mov
inc
add
pop
dec
jmp
or
into
repz
inc
mov
scas
lock
add
dec
add
mov
or
and
fnstsw
adc
sbb
adc
pop
out
sub
arpl
or
xchg
or
jbe
dec
aaa
cwtl
sub
sahf
cmp
stos
repz
dec
adc
push
rcl
stos
negb
add
jbe
ret
jbe
sub
pop
inc
mov
push
sbb
notl
cld
adc
push
stos
dec
into
pop
push
mov
int3
jnp
push
jae
cmp
cmpsb
xlat
add
outsb
jmp
mov
test
int3
sbb
xchg
loop
sbbb
mov
pop
jbe
mov
jl
js
fcmovb
pop
call
fmul
pop
sti
mov
mov
sbb
roll
pusha
repnz
lea
sub
neg
lret
inc
lret
imul
test
pop
in
popf
or
jle
imul
jmp
shlb
push
lods
adc
cmp
push
leave
and
addr16
std
pop
std
mov
mov
sbb
nop
jno
cmp
scas
sub
and
popf
or
adc
cld
add
jbe
mov
scas
jecxz
mov
daa
gs
push
scas
aad
gs
or
and
bound
mov
int3
fnstsw
data16
sbb
fildll
push
jbe
xchg
mov
push
jp
jnp
test
sbb
and
arpl
jno
cltd
and
insl
iret
inc
fisttps
shlb
pop
sbb
mov
or
fsubl
test
or
xchg
sbb
lcall
inc
cmp
cs
xchg
mov
fmul
cmp
arpl
and
xchg
fisubl
or
mov
mov
xchg
mov
sarb
jge
imul
cmp
lahf
pusha
xchg
test
cmp
lret
xor
int
push
out
pop
sbb
pushf
aad
pop
adc
sub
push
adc
cmp
sub
push
iret
test
aas
cmp
aaa
jecxz
nop
add
cmpl
mov
jae
or
insl
orb
dec
repz
rcrb
inc
add
xchg
lods
jecxz
and
xchg
mov
sub
scas
pop
outsl
repz
add
loope
jge
fs
cmp
sub
popa
jbe
jae
loop
insb
cmp
cli
xor
cmp
imul
jb
jp
cmp
shll
xchg
std
test
jns
lahf
xlat
cmpsl
sarl
jge
test
mov
mov
orl
lods
ds
fimuls
frstor
jo
lret
push
xor
jnp
outsl
mov
sub
dec
xchg
daa
outsb
inc
dec
cmp
cltd
int3
push
test
mov
fs
lret
outsb
imul
sub
add
mov
imul
idivb
dec
cmp
xchg
jo
mov
clc
mov
mov
sbb
test
arpl
adcl
iret
lahf
aad
arpl
sti
mov
cmp
mov
rcr
movsl
mov
mov
jmp
adc
fsubs
jl
and
int3
xlat
fucomip
jo
shr
xchg
insl
pop
mov
push
mov
mov
xor
and
cmc
and
mov
popa
sub
popf
lods
or
std
mov
mov
sub
mov
fsubrs
mov
sar
dec
enter
test
aaa
mov
dec
stos
sbb
jmp
icebp
scas
lds
sub
test
mov
lea
mov
outsl
pop
mov
jmp
popl
fmulp
xchg
and
shrb
or
inc
push
mov
push
stos
in
dec
test
mov
sbb
or
sbb
adc
out
inc
lret
out
sub
jmp
add
daa
les
xor
push
mov
out
sti
dec
pop
inc
xor
mov
add
rcll
xchg
lds
in
mov
out
lea
xchg
and
pushf
das
repnz
jg
adc
adc
push
sbb
cmc
bound
gs
push
into
out
sub
scas
and
popa
cltd
lcall
int3
jbe
and
lahf
adc
sbb
les
push
jnp
jp
ljmp
add
dec
dec
mov
inc
sbb
imul
adc
mov
pop
cmp
sti
arpl
inc
aad
dec
mov
popa
popf
mov
push
scas
pop
jnp
movsb
jge
xor
pop
or
test
pop
div
lcall
mov
or
repnz
sub
mov
xor
cmpb
pop
inc
push
out
ja
ds
negl
jbe
jne
inc
cli
test
outsl
push
mov
mov
jnp
or
and
sub
insb
push
sbb
test
adcb
insb
mov
or
cmp
push
inc
mov
sub
loop,pt
repz
sub
mov
nop
sti
mov
orb
jle
sbb
ret
movsl
hlt
gs
push
int
dec
js
insl
mov
pop
inc
insl
pop
push
dec
sbb
scas
and
imul
push
xchg
lock
or
je
mov
xchg
jne
mov
pop
xchg
mov
adc
mov
jle
cmc
lock
fildll
xchg
out
pop
enter
pop
mov
cmp
int3
inc
mov
and
ds
mov
xchg
das
push
daa
int3
mov
mov
push
ja
call
scas
mov
sub
call
push
xlat
mov
roll
or
sbb
inc
repz
jns
and
jno
inc
sub
arpl
mov
rclb
js
ret
or
popa
in
or
call
xor
shrl
or
shll
in
jae
rcl
icebp
fimull
stos
xchg
mov
sahf
iret
mov
shlb
mov
gs
imul
mov
cwtl
vmwrite
mov
or
shll
arpl
or
push
jg
sar
push
loop
sub
push
int3
mov
or
or
xchg
stc
shr
push
rorb
xchg
in
pop
or
popl
lcall
in
xor
mov
or
xor
push
xchg
subl
and
pop
add
push
std
adc
mov
jge
int3
push
add
out
roll
nop
adc
adc
sbb
pusha
cmp
xlat
mov
mov
call
pop
addr16
scas
pop
sbb
in
mov
mov
jne
pop
dec
mov
dec
push
and
sbb
sbb
int
add
lret
scas
add
push
imul
mov
push
sbb
xchg
aam
push
outsl
ja
fiaddl
jae
jno
ds
adcl
xchg
sbb
gs
push
mov
gs
dec
loop
add
and
xchg
push
into
hlt
mov
mov
xchg
pop
out
aaa
mov
fistpl
cmp
insb
ret
mov
cmpsl
imul
lods
inc
sub
js
push
int
dec
inc
add
xchg
pop
subl
movsb
inc
popa
notb
ficoms
inc
jno
test
mov
mov
fisubrs
pop
jg
xor
adc
xor
inc
popa
add
and
fidivs
insl
daa
or
int3
lcall
aas
mov
mov
fbld
lahf
and
je
sub
add
cmpl
mov
or
xchg
dec
push
scas
outsb
mov
fs
in
inc
fs
ss
sub
cmc
push
cmp
std
lcall
push
test
and
jo
mov
dec
rolb
aad
jne
pop
ss
pushf
and
call
pop
xchg
les
adc
popa
jge
cmc
test
fiadds
cmp
stos
mov
or
mov
lcall
mov
inc
lahf
out
sub
xor
rcrb
and
fbld
pop
push
insb
jecxz
lds
leave
popa
mov
mov
or
adcl
push
icebp
daa
sub
outsb
push
sbbb
push
push
insb
fcom
jae
out
add
push
pop
idiv
lahf
inc
pop
iret
clc
loopne
mov
arpl
sbb
push
jmp
jmp
pusha
nop
or
sbb
xor
shr
cmp
mov
movb
aas
ljmp
es
mov
mov
mov
sti
mov
mov
pop
cmp
xor
xor
ja
in
lret
outsl
rorl
test
pop
mov
mov
popa
data16
lret
loop
or
dec
jne
sbb
xchg
movsb
cmp
dec
aaa
cmp
add
cli
stos
insb
hlt
call
cld
std
jmp
or
fidivrs
mov
ss
jnp
les
aaa
cmp
test
inc
pop
pop
xor
mov
pop
aas
add
lods
jne
fucomi
ds
rorb
jecxz
test
outsl
in
stos
in
pusha
cmp
in
cmpb
insl
repnz
push
shlb
dec
test
rcrb
pop
xchg
pop
jecxz
into
icebp
out
sub
sti
xor
adc
xchg
fwait
stos
mov
sahf
mov
rcll
test
cmp
jle
sbb
xor
rcrb
sahf
std
and
push
jle
mov
xchg
fistpll
dec
sti
lret
or
add
scas
xchg
xor
test
inc
jmp
mov
jl
jns
pop
out
jb
out
push
mov
ficompl
aas
inc
adc
imul
outsb
and
scas
das
popf
adc
aad
stc
jne
les
push
in
in
addr16
icebp
add
cld
in
sub
push
add
dec
push
mov
loopne
push
mov
adc
mov
mov
sbb
mov
adc
mov
std
lods
into
add
or
xchg
xlat
xchg
cmp
xchg
xlat
xchg
cmp
xchg
mov
popf
ds
xchg
aam
jle
or
mov
or
fs
xchg
add
fimull
xchg
sbb
dec
scas
scas
push
pop
in
xor
jecxz
push
ret
dec
jl
icebp
ret
stos
sbb
mov
sub
cmpsl
pop
adc
pop
popf
adc
sbb
pop
jbe
loope
adc
popa
insl
push
aad
jne
push
jae
or
or
addr16
lods
insl
mov
movsb
iret
push
movsb
mov
mov
lods
nop
inc
mov
jbe
out
xor
insb
push
and
lret
pop
cmp
or
mov
and
iret
mulb
mov
int3
jbe
rorb
mov
push
xchg
mov
mov
jno
icebp
ror
adc
ljmp
shll
lea
pop
push
fildl
mov
les
cs
stos
popf
xchg
pushf
fmul
scas
test
bnd
imul
xchg
stos
enter
jmp
data16
in
icebp
or
lods
outsl
sbb
and
xchg
jmp
subb
shrl
mov
in
pop
imul
cs
nop
push
jnp
or
int3
sti
dec
pushf
out
std
out
sbb
aaa
xbegin
push
cld
pop
xchg
stos
fstps
subb
jmp
sub
mov
mov
rol
iret
pop
cwtl
xor
pushf
jae
mov
mov
xor
repnz
scas
xchg
leave
xchg
mov
mov
imul
pop
repnz
fimull
push
xor
cmpsb
int3
sub
lahf
jmp
or
and
ret
inc
daa
and
fmul
mov
enter
jo
sbb
xchg
mov
and
cmpsl
fisubl
mov
pushf
and
imul
adc
lret
jle
and
add
in
pop
pop
sub
insb
ret
mov
mov
lcall
insl
pop
push
jne
and
cmp
rclb
xor
stos
dec
jle
and
sub
mov
jmp
cmp
cmp
adc
mov
fs
adc
stc
push
jl
cltd
sub
mov
push
mov
stc
mov
cltd
cmp
shr
add
mov
in
adc
sub
mov
pop
or
add
xchg
aaa
xchg
in
das
jle
fdivrp
filds
movsl
sbbb
push
mov
cmc
mov
sbb
pop
jnp
cmp
mov
or
jge
inc
pop
mov
clc
aam
push
mov
xor
mov
sub
clc
cmp
movsl
mov
push
pop
inc
stos
stos
push
add
xchg
sub
jo
jg
pop
dec
xor
fisubl
jge,pt
incb
push
imul
xchg
ret
inc
mov
popa
pusha
test
sub
in
jae
cld
repnz
sub
xchg
adc
loop
cld
inc
dec
or
test
push
repnz
loope
inc
push
sbb
jg
mov
adc
nop
dec
adc
push
or
mov
adc
lcall
lock
pop
push
sahf
cmpsb
jle
in
int3
inc
icebp
mov
fs
mov
push
repnz
xchg
dec
sbb
popa
hlt
fisttpll
inc
repz
outsl
adc
ds
inc
push
test
xchg
repnz
scas
ficompl
fists
add
xchg
arpl
loope
xchg
xor
sbb
sti
ficompl
idivb
mov
cmpb
sbb
lock
jg
aad
and
popa
gs
push
or
sub
loope
cmp
add
jg
gs
and
xor
inc
sbb
adc
cmpsl
data16
pop
fdivrp
je
pop
jb
cmp
pushl
ret
fldt
cmp
test
fstpt
nop
jns
inc
popf
dec
pop
xor
fwait
adc
aam
and
imul
push
lret
inc
incl
inc
and
xchg
dec
sbb
pop
pop
pop
imull
test
sti
xchg
gs
and
loope
in
fstp
fwait
xlat
pop
sbb
ss
inc
adc
cs
push
sbb
xor
and
fidivrs
pop
test
adc
mov
pop
or
imul
adc
cmpsb
shll
scas
pop
push
sub
je
lahf
ljmp
jge
inc
xor
xchg
enter
outsl
outsb
out
dec
xor
and
enter
test
fldcw
lods
pop
iret
bound
leave
sub
js
inc
mov
xchg
or
fiadds
fs
lock
add
hlt
les
mov
fildl
and
add
mov
mov
sahf
test
aam
xchg
push
inc
pop
push
in
rorb
mov
sbb
xchg
inc
xchg
mov
push
aad
xor
mov
push
cs
or
orl
cld
and
ds
adc
daa
xchg
jno
shr
pusha
jno
xchg
mov
iret
test
std
dec
lret
xorb
lret
int3
ss
sbb
adcl
adc
xchg
sbb
add
jbe
les
inc
orl
pop
or
stos
ljmp
cmc
pop
movb
repnz
push
and
sub
test
jle
push
xchg
dec
jae
pushf
insl
pop
adcl
jg
cmpl
pop
pop
push
cmpsl
fiaddl
push
xchg
or
xchg
sbb
je
out
popf
push
test
ja
sbb
ja
pop
cmpb
lcall
mov
ja
add
fidivrl
enter
mov
je
xchg
test
je
and
or
std
pop
add
cmp
cmpsb
sub
sub
int
and
pop
cli
hlt
dec
cmp
xchg
adc
xchg
shll
mov
push
push
and
leave
std
clc
cltd
scas
xchg
inc
inc
insb
mov
addb
das
test
and
mov
cmpl
in
out
das
stos
fsubrs
xchg
mov
popa
mov
xor
sbb
jns
and
mov
push
repz
push
ss
enter
fmulp
test
ja
sub
pusha
fnsave
outsl
les
xor
xor
and
int
insl
jne
lcall
xor
pop
inc
rcrb
jecxz
aam
mov
out
sub
pop
jnp
fnsave
movsl
cmp
pop
push
xchg
pop
push
call
ds
jp
popf
jnp
xchg
sbb
adc
mov
adc
adc
sbb
pop
gs
ret
icebp
jmp
sbb
cmp
adc
sbb
jg
sar
push
xor
andb
cwtl
inc
mov
sbb
leave
pushf
negl
sbb
xchg
sbb
inc
pop
testl
lock
lock
inc
or
sub
pusha
mov
aas
cmp
aam
pop
jp
jmp
rcrl
add
push
adc
clc
jp
cmpsl
push
fldcw
mov
xchg
lret
mov
lea
sahf
enter
xor
mov
mov
repnz
in
nop
adc
mov
sbb
loope
xchg
lahf
xor
enter
push
sub
pushf
divl
test
add
cld
dec
cmp
xchg
jecxz
lcall
sub
test
clc
dec
fisubrs
shl
adc
pushf
push
pushf
outsb
insb
bound
jae
dec
stc
iret
in
push
jmp
push
cmp
ret
and
lds
cltd
xor
imul
sub
loope
arpl
mov
inc
cmp
mov
xchg
into
inc
xor
das
add
mov
imul
inc
fwait
movsb
insl
in
out
nop
or
or
pminub
adc
fldenv
insb
inc
cmp
xchg
mov
xchg
xchg
addb
imulb
aas
xchg
push
popf
call
and
jg
outsb
xchg
pusha
mov
cmpsb
or
out
mov
mov
mov
inc
mov
int
stos
adc
repnz
mov
adc
popa
mov
jg
inc
or
and
movsb
test
lds
or
outsl
cmp
rcll
loop
ja
loop
pushf
and
cmp
pop
adc
ret
pop
cmp
jne
adc
mov
inc
dec
cltd
std
dec
or
int
jle
lea
movsb
mov
sbb
xchg
mov
loope
ja
inc
add
sbbl
pop
adc
fisttps
add
sub
cmp
jne
xchg
mov
cmp
inc
mov
mov
pop
adc
push
lret
mov
sbb
addr16
mov
xorl
and
into
ljmp
movsl
push
loope
lea
aaa
and
lahf
popf
fsubrl
out
rolb
mov
enter
mov
inc
or
pop
push
and
in
mov
adc
movl
sub
xchg
and
pop
inc
mov
adc
decb
mov
sbb
push
mov
mov
shr
lock
xchg
loopne
mov
pop
imul
stos
mov
into
int
pop
sub
shr
push
inc
jle
fmull
xor
adc
in
les
inc
or
inc
orb
push
mov
or
cmpsb
xchg
add
outsb
out
mov
int
sub
out
and
cmp
loope
cmp
aaa
inc
xchg
fsubrs
shrb
mov
out
loopne
push
ljmp
cmc
sbb
pop
mov
je
push
and
cmp
out
out
push
daa
cmpsb
inc
or
fs
xor
adc
fdiv
xchg
mulps
xchg
test
jp
jnp
sbbl
lods
filds
push
fldcw
and
mov
in
inc
mov
xchg
and
imul
or
adc
pop
std
repnz
push
pop
mov
fsubr
jb
jl
fdivs
cmp
cmpsb
in
in
test
bound
cmp
sbb
sbb
pop
xor
int3
push
insl
cmp
push
vcvtdq2ps
sub
ret
mov
sub
negb
cmc
push
cmp
and
jl
sub
xor
and
in
push
mov
xorl
fcoms
imul
sahf
xor
cmpsl
adc
sarb
xchg
cmpsb
aad
testl
cld
add
lock
lahf
fwait
cltd
lds
pop
lret
lcall
fucomp
scas
mov
lods
and
sub
lret
push
lock
inc
scas
jo
scas
clc
testl
sub
jp
jne
mov
call
mov
jl
icebp
fiaddl
sbb
scas
in
jno
popa
lds
sub
cmpsl
sbb
and
adcb
or
xorb
rclb
and
int3
test
adc
dec
mull
cs
and
mov
jg
and
xchg
cmp
mov
jecxz
xlat
aas
xchg
movsb
dec
sarl
cs
and
mov
and
or
daa
call
pusha
mov
cmp
shlb
mov
sub
push
push
push
mov
xchg
xchg
push
and
xor
mov
test
repnz
icebp
pop
shll
xor
mov
out
int3
or
ljmp
loope
movsb
dec
fmul
nop
xchg
push
imul
xchg
sbb
cmp
negl
inc
ss
sub
cmp
lcall
call
rorl
arpl
push
sub
repz
dec
pop
mov
data16
fs
or
push
cld
dec
aaa
repnz
xchg
or
push
pop
mov
lcall
popf
jns
adc
popf
xchg
adc
dec
out
xchg
ss
push
mov
inc
push
pop
dec
jmp
adc
test
mov
and
cmp
out
dec
sti
cmp
sbb
push
sbb
mov
mov
icebp
mov
xor
sbb
mov
xor
stc
cmp
addr16
xchg
rcl
push
cmp
not
lds
enter
sarl
cmp
mov
sbb
popf
dec
fistps
push
mov
adc
push
insl
add
sub
jle
pop
lret
aad
inc
lcall
sub
in
andl
rclb
jmp
int3
xor
lcall
xchg
and
push
jle
inc
out
mov
js
jne
pop
xor
cltd
pop
in
orb
fcoms
adc
iret
aam
cmp
mov
mov
test
mov
ja
cmpsl
in
inc
insb
dec
lods
dec
clc
mov
insb
mov
sti
add
mov
mov
sbb
dec
inc
fistpl
stos
outsl
jle
or
cmp
xlat
xor
lds
shl
test
push
inc
mov
mov
add
hlt
shll
and
inc
movsl
mov
mov
pop
clc
imul
cmpps
sarl
push
mov
addr16
leave
lds
out
outsl
pop
dec
lock
lret
jno
xor
xchg
repz
aad
mov
xor
jmp
outsb
push
pop
jno
in
mov
and
sub
adc
pop
imul
inc
cmp
js
iret
jno
pop
aam
pop
mov
out
jno
into
pop
and
or
and
enter
decb
jecxz
sarl
lock
pop
mov
jl
mov
jnp
push
pop
scas
mov
mov
dec
push
add
bound
pop
cltd
sub
in
ljmp
nop
lea
mov
iret
jmp
pusha
arpl
xchg
push
out
xchg
sbb
shlb
pop
rcl
bound
and
insb
repnz
pop
xchg
inc
bound
loop
cmpsl
cmpsl
std
dec
add
push
lsl
fldenv
ds
mov
dec
cmp
mov
inc
cmpsl
adc
loop
inc
dec
enter
and
xchg
test
shll
dec
repz
push
sbb
pop
aaa
inc
push
xor
push
lret
xlat
dec
into
fists
test
cmp
cmp
loope
movsb
xor
ficoms
sar
sbb
mov
aam
xchg
aaa
mov
sbbl
insb
fiadds
push
and
shr
add
cmp
jle
adc
ds
adc
and
jnp
jge
cwtl
dec
ret
ljmp
cltd
and
mov
jle
dec
add
les
lea
rcr
push
xchg
scas
cld
mov
lea
adc
loope
in
arpl
outsl
iret
xlat
sub
pop
aad
mov
es
je
mov
or
or
mov
mov
mov
pop
jo
ret
clc
dec
loopne,pt
push
bound
mov
xor
std
int3
insl
repnz
in
enter
xor
jecxz
mov
sbb
mov
popf
in
sbb
dec
inc
jae
cmp
cmp
insb
or
orl
sbb
adc
gs
jae
leave
dec
pop
dec
lock
jmp
dec
sub
and
out
push
loope
stc
and
lods
cmp
jge
aas
insl
es
ljmp
je
ret
cmp
jae
das
movsl
sbb
cld
pushf
in
iret
dec
repz
jl
sti
jb
jne
push
xchg
push
or
push
dec
ds
push
mov
nop
hlt
adc
fistps
fwait
sbb
movsl
imul
dec
mov
mov
sub
scas
insb
ret
imul
dec
filds
leave
adc
or
cmp
insb
stos
aas
mov
dec
imul
in
mov
cwtl
mov
scas
or
test
fs
push
xor
out
test
push
mov
leave
xlat
pop
cli
push
xlat
cmpsl
aas
adc
adc
je
mov
adc
jl
pop
push
ret
and
outsb
imul
pop
iret
daa
fiadds
inc
mov
popa
pop
lods
or
icebp
xor
sub
cmpsl
cmp
sbbl
repnz
test
popf
mov
ljmp
clc
std
fcompl
call
xor
outsb
in
xchg
xor
push
pop
inc
jne
inc
pop
inc
push
dec
cwtl
jl
pop
dec
dec
std
imul
in
ds
cmpsb
inc
out
shrl
jp
adc
mov
fstps
pop
push
inc
inc
or
dec
xchg
sub
mov
aad
iret
xlat
sub
fucom
mov
fldl
in
divb
sub
mov
incb
pop
mov
xchg
mov
add
jp
es
ret
jg
or
sub
cld
dec
jb
jne
cmc
cmp
je
lds
push
lods
aam
mov
fists
xchg
lcall
push
lds
push
xor
sub
dec
sbb
das
sbb
inc
mov
mov
pop
push
xchg
mov
cmp
pusha
aad
and
dec
sbb
fcoms
fsubs
nop
mov
out
ficomps
xor
xchg
cmc
xchg
std
lret
adcb
enter
out
add
iret
push
or
into
or
mov
jmp
sti
pop
sub
fmull
or
loopne
mov
cmp
lcall
sbb
cltd
aam
xchg
scas
cmp
ret
fisttpl
mov
jns
fucom
adc
cmpsl
aas
popa
or
adc
daa
insl
nop
mov
loope
loop
popf
pop
or
ja
call
lds
outsl
scas
outsl
mov
sbb
ficomps
pop
icebp
bound
fwait
movsl
push
jp
mov
add
insl
das
cmp
loopne
in
inc
cmpl
pop
add
addb
dec
nop
pop
mul
popf
ret
jb
xchg
mov
shl
std
outsb
mov
sbb
fnstcw
mov
ljmp
xor
mov
call
jne
push
rolb
ret
test
pop
jl
and
stos
pop
out
xchg
sbb
sub
shl
les
loope
loopne
rorb
jmp
push
sar
xchg
mov
xchg
sbb
and
add
mov
mov
leave
push
icebp
mov
sub
es
or
arpl
mov
divl
pop
adc
mov
fisubl
jno
mov
aas
or
lcall
add
std
cmpb
iret
das
jge
mov
rolb
or
test
pop
push
jno
pushf
mov
hlt
stos
push
adc
arpl
addl
pop
insl
inc
lock
pop
add
leave
adc
pop
mov
dec
or
push
mov
mov
dec
pop
fimull
cmpsb
leave
hlt
fcoml
push
pop
incb
and
fwait
xchg
mov
ret
pop
in
push
filds
gs
int
test
inc
mov
movb
mov
mov
mov
sbb
push
dec
push
lea
pushf
xor
dec
cltd
ds
fistl
pop
repnz
fcomip
out
mov
inc
inc
or
jge
adc
out
sti
ds
loopne
mov
xlat
or
xchg
rcrb
mov
push
je
cwtl
xor
or
inc
sub
hlt
fisubl
add
xchg
inc
xchg
mov
xchg
lahf
add
mov
mov
jp
popf
xchg
js
pushf
push
jb
pop
pushf
movb
popf
sub
pop
push
xchg
push
ljmp
push
adc
sbb
das
mov
dec
push
jb
adc
jmp
cmp
mov
jge
mov
mov
in
dec
rcll
cmp
pop
cmp
inc
mov
and
dec
xchg
ret
jmp
mov
leave
cmp
add
xchg
call
xchg
mov
mov
push
les
xchg
adc
aam
popa
adc
adc
jge
and
and
mov
test
insb
scas
lods
and
add
inc
mov
lahf
cmpsb
push
in
mov
cld
add
arpl
imul
out
fnstenv
shrb
xchg
repnz
sar
inc
js
imull
sbb
inc
out
sti
popf
popf
pop
filds
ret
inc
jb
and
scas
mov
scas
or
pop
std
inc
or
jnp
inc
out
dec
cmpsl
ret
imul
in
frstor
daa
mov
jge
test
test
mov
fs
mov
pslld
fstps
aam
pop
adc
adc
pop
jge
icebp
mov
mov
mov
adcl
jg
or
loope
repz
inc
in
scas
jge
fisttps
sbb
cmp
mov
sti
dec
xlat
in
jne
xchg
sbb
push
iret
test
roll
nop
in
sub
mov
xchg
int3
ja
xchg
add
dec
ds
mov
lods
dec
test
cmp
neg
jne
test
pop
aam
fucomp
icebp
lds
cmp
adc
addr16
inc
mov
dec
popf
jbe
fisttpl
cs
les
add
jmp
sbb
loopne
mov
push
jo
adc
sbb
in
cmp
mov
loop
int
push
push
jae
xchg
rol
repnz
stos
nop
mov
inc
sbb
jge
imul
or
insb
retw
mov
pop
sbb
mov
dec
testb
fs
dec
jg
jge
rcl
cmp
xchg
mov
in
inc
pop
sub
cmp
xchg
pop
jnp
icebp
cmp
or
ret
add
jns
icebp
xchg
push
rcll
sub
sbb
outsb
jl
repz
loopne
fcoms
push
sarb
mov
inc
xchg
pop
jns
mov
mov
bound
test
mov
jmp
xchg
icebp
adc
adc
gs
in
xchg
pusha
stc
xchg
sub
js
lods
xchg
mov
mov
xchg
inc
test
dec
cmp
bound
or
cmp
mov
cmpl
pop
mov
jg
pusha
pop
test
mov
popa
add
sub
dec
mov
adc
jnp
adc
jno
popa
and
mov
test
mov
lret
adc
mov
inc
and
cmc
mov
inc
clc
sub
mov
adc
mov
daa
adc
mov
cwtl
lock
sahf
mov
orb
xor
repnz
subl
rolb
stc
dec
jle
mov
jg
lds
test
stos
fsts
xor
sbb
sub
lcall
in
push
loope
lods
pop
arpl
leave
xchg
popf
and
stos
into
sbb
orb
inc
cmp
or
ficoms
lds
xchg
lds
ficoms
lds
xchg
lds
ficoms
lds
xchg
lds
ficoms
lds
xchg
lds
ficoms
lds
cwtl
rorb
aaa
cltd
mov
pop
adc
xchg
mov
xlat
fnstsw
add
mov
lea
jno
mov
inc
cmp
andb
mov
enter
xchg
les
jo
das
mov
imul
push
cwtl
inc
mov
lahf
jge
xchg
jmp
xchg
xchg
jnp
pop
and
mov
outsl
aam
sbb
je
fildll
frstor
scas
imul
and
stos
mov
cmp
pushf
push
ljmp
xchg
push
mov
lock
inc
mov
scas
call
test
fiaddl
mov
popf
xor
adc
adc
xchg
push
in
mov
jge
mov
shr
int3
pop
push
xchg
lds
imul
pop
mov
pop
fs
mov
outsb
jp
mov
and
stos
adc
inc
xor
lds
adc
jno
dec
pop
shrl
js
mov
xor
and
add
push
mov
outsl
sbb
arpl
or
aam
aas
fildll
lret
push
scas
pop
xor
cmpsb
out
inc
mov
movl
inc
sbb
sti
pop
push
jo
fstpt
lods
test
pop
jmp
andb
inc
pop
or
js
imul
xchg
imulb
dec
ret
movsb
mov
sbb
inc
stos
stos
cmpsl
pushf
adc
fsts
rorb
outsl
fidivl
mov
bound
fists
sbbb
aam
lock
cmp
testb
pop
adc
inc
pushf
push
dec
es
in
jo
jae
and
sti
jbe
inc
sub
imul
into
jae
cmp
cmpsl
lret
adc
mov
repnz
test
dec
sahf
push
sbb
xchg
movsb
push
loope
mov
and
add
mov
loopne
imul
icebp
dec
popa
dec
mov
aad
jno
mov
lock
pusha
fcoml
inc
or
vsubss
sti
andl
popf
lcall
push
or
andl
test
adc
cmpl
xor
adc
dec
xor
lahf
shl
ja
inc
aam
in
inc
cmp
cld
xchg
sub
call
push
iret
push
mov
enter
and
jg
roll
xor
jo
pop
jns
out
cmpb
or
imul
mov
fidivrs
jl
fstl
xchg
inc
cmpsl
clc
fisubrl
adc
xchg
or
jg
fnstenv
les
mov
aad
sbb
mov
pop
add
stc
xor
stos
inc
imul
sbb
add
mov
gs
lcall
loop
lret
adc
mov
ja
add
scas
push
mov
imul
fwait
adc
mov
push
mov
pop
inc
push
cmp
push
in
adc
sarl
xor
and
arpl
ret
sbbl
cmpsb
mov
dec
pop
adc
sarb
mov
and
mov
jg
mov
mov
addr16
repnz
lods
push
jl
jns
push
sub
adc
or
cs
repz
outsb
jo
mov
xchg
add
mov
jno
mov
or
daa
mov
out
sub
pop
inc
sbb
adc
inc
mov
cmp
icebp
mov
xchg
xor
inc
inc
and
mov
jl
lock
mov
mov
repz
pop
arpl
div
insb
sbb
mov
cmp
adc
dec
dec
out
push
cmpsl
das
push
cmpl
lret
sahf
insb
popa
aad
mov
aad
rclb
mov
dec
xor
jae
dec
mov
mov
test
mov
jae
test
mov
adc
adc
and
jae
add
mov
push
inc
jge
xor
iret
dec
stos
stos
int3
sbb
pop
jbe
jp
mov
mov
mov
sub
cwtl
sbb
cmp
je
lods
mov
pop
add
iret
xlat
das
stos
lock
cli
arpl
sub
dec
test
push
gs
cltd
mov
cwtl
push
xchg
test
stc
dec
bound
sbb
into
sahf
pop
jg
movsb
divb
fs
test
fldl
aad
push
sbb
cmpsb
idivb
pushf
outsl
test
mov
xchg
movsl
xchg
cmp
jg
outsb
int3
daa
icebp
sub
ja
jle
xor
mov
mov
or
add
aad
sbbl
sbb
xchg
cld
lcall
push
pop
fcoml
insl
dec
pop
out
stos
jno
pop
lock
sbb
pop
imul
icebp
push
mov
std
sahf
xor
imul
stc
fistpll
rcrb
lods
inc
or
ds
in
mov
nop
neg
out
test
dec
pop
push
or
pop
jecxz
fwait
aaa
or
enter
mov
mov
int
mov
inc
xchg
or
rclb
icebp
dec
cmp
dec
sub
pop
inc
add
jnp
popa
mov
loopne
push
imul
cmpsl
jno
push
std
xchg
cmp
mov
inc
mov
ror
ds
xchg
dec
or
jae
xor
out
enter
push
loope
cmp
push
mov
pop
lret
xchg
push
nop
mov
test
jp
scas
into
sbb
orl
iret
and
stos
cltd
stc
xor
cs
pop
add
dec
bound
stos
je
or
mov
pop
adc
pop
popa
iret
mov
xorps
std
xor
xor
inc
movsl
push
push
insb
add
jl
popa
pushf
sar
pop
stos
movsl
cs
and
mov
nop
xor
push
enter
setno
jg
popf
mov
mov
inc
xor
xor
mov
and
xor
nop
inc
xlat
mov
call
test
insl
fsubr
imul
inc
call
fwait
pop
sub
sti
lcall
repz
jmp
mov
and
cmc
shr
rcrl
push
aad
dec
jg
pop
mov
or
and
scas
cmpsl
mov
add
xchg
mov
mov
pop
pushf
push
lods
je
adc
inc
push
int
jbe
and
jae
jno
cmc
test
inc
in
adc
sbb
cltd
fidivs
inc
sub
push
stos
dec
outsb
test
jae
fildll
sbb
pop
adc
sub
inc
mov
mov
idivl
jmp
xchg
std
iret
xchg
dec
out
sub
push
in
pop
outsb
jmp
data16
mov
mov
and
fdivl
lret
bound
jbe
push
push
adc
sbb
jnp
jge
lds
sbb
je
fldenv
xchg
fwait
add
fidivl
mov
fidivl
popa
xchg
jns
mov
sbb
inc
mov
jp
shl
or
sub
pop
ss
and
inc
mov
inc
scas
push
pop
sahf
fimuls
inc
xchg
cli
rcpps
leave
hlt
mov
iret
imulb
pop
cmc
and
or
out
xor
mov
repnz
mov
loope
hlt
sbb
xor
shl
jae
imul
or
int3
popa
arpl
out
lcall
xlat
pop
mov
rcrb
push
enter
pop
mov
std
push
lea
outsl
adc
add
shll
sbb
clc
sbb
xor
mov
negb
stos
popa
ret
xchg
pop
adc
hlt
mov
cli
xlat
adcb
aad
dec
push
and
fsubs
inc
sti
popf
aam
add
sahf
std
pop
bndstx
daa
push
stos
rorb
jge
cs
jne
sbb
es
adc
mov
fidivrl
or
jno
mov
xor
push
xchg
hlt
faddl
jge
repz
popf
into
gs
ret
scas
and
mov
cld
popa
pop
in
test
lcall
fs
cmp
test
jle
jo
or
insb
cltd
jle
stos
xor
dec
int
popa
in
loop
jae
and
out
add
mov
into
mov
movsb
faddl
andl
in
into
and
xor
mov
ret
in
call
mov
popf
lcall
cltd
iret
idiv
push
shlb
enter
xchg
aad
pop
or
daa
lods
mov
es
test
pop
mov
xchg
inc
push
push
shl
mov
icebp
fwait
jbe
mov
shll
int3
xor
orb
test
or
cmp
pop
sbb
in
xor
movsb
mov
aaa
or
dec
pushf
mov
cwtl
jle
xchg
icebp
inc
mov
jl
inc
bound
mov
mov
mov
mov
mov
adc
arpl
mov
incl
push
insl
leave
test
call
and
jno
mov
and
dec
stos
mov
adcl
loope
fcmovu
ss
repnz
push
pop
stos
xor
mov
push
push
mov
jo
jge
mov
and
xorb
sbb
ror
pop
push
pop
popa
sti
pusha
sub
cmp
cmp
xor
lods
mov
jecxz
jge
iret
xchg
jo
push
pop
mov
pushf
les
sbbb
pop
popa
cmp
mov
push
test
into
push
bound
negb
dec
subl
decl
dec
outsl
pop
ja
push
mov
push
push
push
jb
and
nop
jae
push
sub
inc
pop
loop
jno
mov
stc
xchg
ss
in
cmp
pop
pop
pop
iret
jb
jge
fcompl
mov
lods
leave
add
cmpsl
das
mov
loope
out
sub
sbb
je
out
sub
js
mov
sub
into
inc
mov
mov
cmp
sub
sahf
cmc
sub
fimull
pop
sub
lods
adc
sbb
lock
or
sarb
shll
xor
inc
mov
sub
pop
in
ret
sbb
rcrl
lea
sbb
add
inc
sub
xor
cwtl
fdivrl
mov
jge
push
dec
outsb
pop
mov
les
pop
outsl
and
xchg
call
or
call
ret
mov
inc
lahf
sbb
push
sub
call
push
inc
lcall
mov
adc
mov
cli
jmp
dec
fcmovne
cli
sub
in
inc
enter
aad
push
push
sbb
notl
stc
idivb
ror
mov
mov
fisubrl
mov
fidivrs
sub
pusha
xor
mov
lret
outsb
xchg
mov
jmp
push
push
addr16
out
cmp
pop
mov
lret
enter
mov
inc
fwait
or
xlat
rcll
xor
rorb
jbe
xor
stos
mov
jge
cmp
mov
stc
dec
inc
cmp
and
mov
mov
ljmp
xlat
dec
and
mov
imul
sbb
std
icebp
nop
aam
subl
aad
mov
mov
stos
xchg
jno
addr16
push
ficoml
or
scas
lea
call
and
jae
jl
cmp
clc
movsb
or
xchg
in
xor
out
and
test
xchg
xchg
insb
add
add
ret
or
sti
sbb
repz
inc
cld
mov
jmp
daa
push
hlt
bound
mov
pop
lret
xchg
pop
insb
leave
push
add
into
sub
lret
and
sbb
mov
pop
dec
cmp
mov
add
lds
test
in
ds
outsb
xor
sbb
mov
cmp
push
dec
or
nop
stos
outsl
rcll
repz
ret
cld
mull
mov
sbb
icebp
ret
push
lcall
push
gs
sbb
push
cltd
mov
push
mov
push
dec
pop
adc
push
imul
jmp
cmovnp
imul
test
data16
adc
mov
fiadds
or
lods
push
dec
pop
jo
xchg
outsb
pop
pop
mov
ss
out
std
fdivrs
xchg
adc
xchg
or
pop
shl
fstl
lret
pop
xor
mov
jp
cmpsb
xor
push
pop
pop
or
fcoms
insb
ret
mov
notl
adc
idivl
out
push
push
or
je
cmp
xchg
lahf
test
loop
xsaves
ret
fstpt
sub
and
push
shlb
sbb
sar
fildl
push
je
xchg
and
cmp
xor
add
sub
call
mov
cmp
jp
push
flds
mov
into
push
jbe
or
add
out
in
daa
cld
adc
in
lock
enter
icebp
ljmp
clc
xlat
or
mov
int
shlb
shr
and
jb
inc
dec
or
mov
outsl
xchg
and
or
mov
push
mov
adc
loope
fidivl
mov
lahf
dec
addb
fisttpll
stc
add
aaa
das
push
rcr
mov
and
cmc
dec
fidivl
test
mov
out
sbb
mov
add
insb
add
stos
add
daa
mov
clc
es
repnz
xchg
lods
or
es
xchg
call
orb
push
jbe
mov
leave
andl
adc
test
lcall
stc
stos
mov
or
inc
rorw
mov
push
pop
std
jno
lea
adc
lods
mov
mov
cmpl
cld
divb
jmp
pop
aaa
aad
cld
push
mov
mov
pop
rol
jge
pusha
push
shr
movsl
push
ja
pop
daa
adc
mov
xchg
jl
xor
xorl
inc
aaa
lahf
cmp
cli
mov
leave
test
pop
or
inc
enter
hlt
mov
sbb
test
es
pop
mov
mov
std
lea
inc
mov
shll
adc
adc
jle
mov
call
negb
cmp
jo
xchg
xor
pop
inc
pop
or
ret
cwtl
shr
ret
cmpsl
pusha
popa
loop
pop
fsubs
mov
and
pop
or
cmp
cwtl
xor
or
test
imul
roll
xor
mov
add
das
popa
fidivrl
pop
cmpsl
in
in
mov
add
pop
xor
clc
dec
in
fs
mov
sbb
aas
roll
pop
int
jl
int3
test
mov
jno
mov
inc
xor
or
lds
mov
dec
insb
and
jmp
test
push
sbb
repnz
xor
bound
push
out
jg
xor
pop
adc
xor
push
cli
push
jbe
ljmp
cmp
or
sbb
pop
add
test
or
aaa
rorl
cs
jle
sahf
adc
cmpsl
ds
mov
stos
test
popf
popa
sbb
pop
iret
jle
and
int
mov
jnp
add
jns
nop
sub
mov
pusha
pop
inc
rcrl
xor
adcb
popf
add
cmp
or
lea
push
stos
xorb
mov
and
sub
mov
fwait
lods
and
stos
xchg
jo
pop
xchg
das
jmp
test
es
dec
inc
pop
jg
stos
mov
popf
outsb
pop
add
xlat
mov
push
or
lret
ret
push
ds
in
mov
adc
cltd
and
xchg
fsubl
push
jne
fimull
add
cltd
les
adc
adc
fcomp
cmp
jns
daa
movl
loope
push
inc
xor
push
js
cwtl
inc
sarb
mov
and
fcoml
push
in
dec
push
xor
insl
cli
pop
cmp
or
jne
pop
dec
dec
stc
fsubrp
lock
mov
cmp
cmp
sub
imul
fwait
les
dec
pop
xchg
into
jne
mov
or
add
imulb
lret
fnstenv
pop
leave
and
mov
add
cmp
jns
adc
jg
insl
hlt
adc
xlat
mov
rcrl
pop
mov
cmp
pusha
xchg
lods
mov
mov
enter
or
fidivs
dec
mov
lods
mov
push
enter
mov
in
cld
imul
loopne
ror
adc
pop
mov
sbb
adc
xchg
pop
pop
andb
inc
adc
gs
mov
hlt
sbb
mov
mov
cmp
or
pusha
mov
push
cmp
in
into
mov
enter
sarl
je
mov
add
mov
sub
adc
xor
cmpl
push
jb
lock
pushf
inc
mov
mov
mov
push
sub
rcrb
jecxz,pt
scas
pop
jbe
add
xor
push
sbb
sub
icebp
jmp
subb
out
fwait
rol
cmp
jecxz
push
push
push
jecxz
xor
mov
jp
imul
pop
scas
xor
xor
gs
fsub
adc
movsb
stc
in
cmp
jp
inc
sbb
sub
sub
outsl
xor
mov
rcrl
daa
and
sbb
xchg
mov
and
gs
popa
test
jg
pop
sub
clc
inc
stos
cmp
jmp
push
adc
test
cmpsl
or
movsb
push
and
fwait
adc
add
push
fnsave
push
push
inc
adc
and
popa
cmp
ljmp
pop
lahf
and
fistpl
insl
test
mov
hlt
movsl
subb
ljmp
jmp
xchg
mov
mov
int
fwait
mov
pop
jg
mov
lods
hlt
in
xor
psrlw
pop
repnz
cmp
sbb
dec
ds
and
hlt
mov
sub
mov
and
lods
lods
adc
popa
ss
dec
jnp
enter
int3
mov
aad
dec
cmp
ds
sbb
clc
ret
push
hlt
outsl
out
xchg
inc
push
out
dec
scas
push
jecxz
sahf
fidivrl
xor
mov
cmp
or
jg
outsb
inc
pop
test
mov
add
pop
movb
mov
aas
jnp
cltd
mov
mov
cwtl
lods
or
push
dec
and
in
insl
mov
sbbl
std
dec
cmpsl
mov
mov
int
mov
mov
cmpb
push
out
pusha
jle
xchg
xor
test
cwtl
pop
jbe
xchg
in
pop
mov
fistps
mov
pusha
xor
mov
xchg
or
add
outsl
xchg
xchg
sbb
inc
lahf
test
inc
push
mov
icebp
pop
cli
aam
adcl
fiaddl
fadd
clc
scas
lods
leave
push
addr16
xchg
and
lds
add
leave
ds
pop
push
stos
cld
dec
push
movsl
dec
or
lcall
not
mov
lods
or
roll
mov
mov
xor
mov
mov
lock
xor
addr16
insl
jg
inc
mov
cmp
into
rcrb
testb
lock
mov
aaa
outsl
jle
xchg
jle
lock
in
pushf
rorl
icebp
cmpsb
mov
into
inc
out
push
push
sbb
sub
mov
negb
push
repnz
sbb
fdivrs
mov
or
push
jae
rcrl
fistl
or
or
and
repz
mov
push
in
insb
or
pop
mov
gs
lret
and
and
xchg
mov
ret
rcrl
pop
pop
hlt
push
push
cwtl
aam
adc
xor
add
mov
loope
cmp
repnz
jl
and
xchg
pusha
sti
dec
mov
jge
and
jecxz
jp
lods
inc
out
imul
mov
ret
mov
lret
clc
or
int3
cs
inc
lret
add
push
pop
mov
adc
outsl
repz
adc
adc
add
movsb
xor
push
push
out
inc
dec
lea
xor
fwait
mov
enter
test
inc
mov
js
sub
scas
push
mov
mov
mov
outsl
adc
pop
mov
pop
mov
sbb
inc
cmpsl
adc
xlat
inc
lret
xor
clc
cwtl
xor
and
cvtpi2ps
sbb
aas
mov
pop
pop
and
pushl
ljmp
stc
ret
mov
test
test
dec
sahf
shll
sbb
out
or
push
sub
push
imul
aam
mov
or
push
call
or
dec
xchg
inc
sbb
outsl
aad
daa
xchg
sahf
es
test
push
pop
cmp
fisttpl
rolb
push
hlt
shll
call
scas
scas
je
test
inc
out
xchg
loop
fidivl
jns
cmpsb
xor
and
jl
ss
filds
add
jb
jmp
psrld
jge
mov
add
push
aad
and
push
fldcw
xor
xchg
cli
fsubrl
adc
dec
jge
aam
mov
movsl
shlb
and
push
sub
cmp
mov
mov
mov
addr16
lcall
icebp
push
dec
mov
notl
sbb
jne,pt
xchg
mov
lock
stos
loopne
push
mov
xchg
int
notb
lahf
cmp
negb
insb
hlt
lods
push
add
pop
data16
sub
pop
std
scas
inc
jnp
out
cmp
jecxz
dec
sub
js
sbb
je
imul
cld
in
imul
mov
xor
lahf
es
sbb
mov
fbstp
adc
fs
ret
xor
loop
cmpsb
mov
call
aad
lods
in
xor
push
fdivrs
js
stc
push
dec
sub
push
mov
pop
pop
sub
insb
xlat
ja
fsubl
fstpl
fs
int3
mov
insl
jl
lea
leave
mov
in
and
push
mov
insb
jo
push
add
cltd
cwtl
daa
stos
andl
test
arpl
stos
or
mov
sub
cltd
imul
jge
test
cmp
aas
mov
je
fisubs
test
jo
inc
mov
in
push
imul
push
movsl
xlat
outsb
stos
loope
mov
iret
rclb
in
push
out
imul
mov
loop
push
push
push
out
loop
xlat
shll
outsl
inc
and
add
jg
sub
xchg
call
pop
lahf
jecxz
je
jne
cmc
cmpb
inc
xchg
sbb
dec
dec
movsl
mov
loopne
stos
add
inc
stos
out
fucomp
aaa
call
shlb
repz
jne
rolb
out
xor
xchg
push
js
jnp
jg
out
mov
mov
and
loop
push
jb
cmp
mov
loopne
les
add
imull
cmpsb
mov
cltd
and
push
adc
or
addr16
bswap
out
push
push
aas
notb
test
sub
subb
mov
mov
fst
inc
fisttpl
and
ficoml
fdivs
pop
js
cmp
fwait
and
mov
in
mov
pop
fdiv
dec
je
out
xchg
pushf
popf
movsb
addr16
stc
addb
lock
xor
int
out
xchg
scas
jne
js
scas
mov
push
sub
jp
rol
scas
jecxz
test
popf
movsl
addr16
push
mov
dec
sbb
jmp
fwait
enter
xchg
out
arpl
scas
sarl
std
ja
mov
xlat
xor
cmp
and
sbb
or
push
sub
repnz
push
sbb
in
add
out
jl
daa
inc
adc
xor
ljmp
sub
push
cmp
scas
adc
scas
inc
cld
mov
inc
push
leave
add
jge
push
or
faddl
push
pushl
add
cs
mov
adc
scas
sarl
les
jp
adc
stos
inc
popl
mov
jge
sub
dec
addr16
flds
xchg
mov
cmp
xor
add
sub
cmpsl
test
mov
push
cs
add
xchg
sub
call
mov
inc
ljmp
dec
cld
data16
mov
dec
cmp
mov
adc
std
jae
xlat
jle
ds
in
jno
loopne
xchg
bound
pop
pop
xor
mov
hlt
lea
add
jmp
les
pop
lock
xor
mov
sbb
mov
in
fdivl
dec
dec
bound
mov
sub
pop
loop
into
inc
sbb
insb
sub
arpl
cmp
fadd
jg
lea
scas
adcl
aas
cmp
movups
jo
sub
xchg
pop
ss
push
sub
pop
or
stos
or
cld
push
or
mov
mov
pop
dec
dec
out
dec
jae
jmp
jo
shlb
aas
cmp
lock
mov
mov
fs
subb
and
add
xor
sub
lock
int
notl
mov
dec
pop
movb
mov
add
mov
sub
jg
test
xchg
lds
xor
lock
pop
les
sub
xor
xchg
and
jno
nop
jp
ret
xchg
loopne
test
mov
out
inc
adc
push
imul
jbe
and
xchg
mov
ret
mov
mov
or
out
cltd
jbe
mulb
subl
push
in
ficoms
push
push
xchg
pop
jnp
push
inc
dec
je
in
movsb
mov
xor
and
imul
push
leave
lea
xlat
jno
rorl
stos
xor
jno
repz
mov
jo
inc
cmovle
shll
je
or
sbb
orl
stos
arpl
repz
repnz
sbb
pop
jno
mov
in
movsb
mov
push
push
int
jmp
pushf
push
cmpsb
sub
mov
std
add
ja
flds
aad
stos
iret
mov
mov
mov
mov
push
insl
push
movsl
xchg
sbb
xor
fldenv
xchg
mov
loopne
mov
pop
mov
fldl
xchg
ret
ljmp
testb
rcr
inc
fcmovbe
mov
mov
mov
cmpsb
and
jae
out
xorb
add
cmc
cmp
push
push
inc
clc
iret
daa
cmp
scas
adc
mov
leave
dec
mov
fs
dec
mov
fistpl
adc
test
insb
ljmp
not
insb
pop
add
push
or
das
icebp
add
aas
pop
rolb
filds
sbb
pop
clc
inc
call
hlt
push
loop
cmp
loope
xchg
lds
push
adc
jno
sub
aad
in
mov
pop
and
cltd
jmp
fstpl
add
xor
into
gs
xor
push
fisttpl
xchg
and
mov
inc
loope
inc
loopne
and
and
repnz
pop
orl
jns
push
mov
cmc
int
jae
pop
and
sarl
mov
cmpsb
rcll
sahf
movsb
repnz
push
dec
pop
or
test
ljmp
rcl
mov
repnz
stos
cmpsb
pop
hlt
lahf
adc
pop
adc
xchg
mov
movsb
xchg
and
shrb
inc
pop
adc
pop
cmp
pop
cmp
sti
jecxz
mov
js
dec
stos
or
push
dec
sbb
cltd
cmp
sbb
xchg
shll
xchg
in
fimull
dec
mov
pop
ret
push
xchg
jne
fimull
cmp
or
jns
mov
adc
scas
in
arpl
xlat
lahf
and
dec
shll
roll
xchg
fucom
inc
cltd
push
cmp
jg
pop
insl
lds
mov
nop
sbb
jp
jo
xorl
repz
push
xchg
fsubrs
pop
xor
aam
xor
xor
fs
inc
cmp
xchg
arpl
inc
sbb
ljmp
shl
repnz
add
aaa
nop
xchg
inc
mov
aas
jge
ficompl
jmp
sub
mov
aam
inc
push
xchg
bound
sub
stos
jl
cmp
fnstsw
sbb
adc
push
cmpl
mov
fsub
sbb
push
aad
je
pop
adc
lret
adcb
sbb
add
cwtl
popf
cmovl
out
popa
outsl
cld
sub
loope
xchg
and
sub
popf
dec
imul
cwtl
sbb
rcrb
loope
adc
and
loop
xor
cwtl
add
enter
outsb
outsl
aad
std
pop
pop
flds
and
add
dec
outsl
jae
into
adc
jle
stos
clc
pop
jns
mov
mov
testb
adc
mov
or
inc
pop
mov
aaa
push
testb
jg
gs
and
rol
inc
pop
rolb
sbb
cmp
push
in
fldlg2
loopne
out
pop
xchg
push
lods
pop
push
or
adc
out
sbbl
cmp
orb
iret
mov
xchg
add
fcmovb
mov
pop
aaa
sbb
stos
sub
cmp
lcall
je
pop
scas
jns
stos
cs
and
loop
jno
or
mov
mov
rcll
lret
inc
sub
repnz
arpl
dec
push
cmp
lds
mov
orb
test
incl
pop
push
hlt
adc
leave
insb
cld
lret
dec
sub
adc
mov
loope
mov
std
js
jmp
call
push
out
or
cmp
fsub
adc
rolb
sub
daa
dec
out
outsb
cmpsb
les
xchg
mov
adc
sub
movups
insb
mov
and
and
xchg
sub
loope
je
sbb
loop
test
cs
shrb
mov
xor
xchg
xchg
cld
sbb
jbe
cmpsl
mov
and
es
xor
loop
loop
push
pushl
xchg
jge
pop
mov
adc
es
sbb
pop
and
mov
pushf
push
fdivrs
movsb
sbbl
lods
lcall
leave
repz
ljmp
jae
sub
inc
push
shrb
inc
jno
enter
sub
cmp
stc
sar
testb
imul
fisubrs
insl
aaa
xor
mov
or
mov
out
mov
sbb
repnz
sbb
std
pop
mov
dec
cltd
jnp,pt
in
cmc
jb
push
add
insb
mov
pop
push
sub
push
stos
in
mov
inc
jg
jae
jecxz
orl
jb
scas
push
pusha
mov
insl
out
andl
add
jbe
out
repz
fsubrp
ljmp
xchg
popf
push
sti
cmp
lods
or
scas
jg
dec
dec
xlat
mov
movsl
push
jno
sarb
stos
roll
xchg
xchg
cmp
dec
push
push
lock
pushf
mov
jnp
addr16
dec
xlat
pop
and
in
push
xor
jb
adc
loopne
dec
pop
testb
sbb
imul
roll
ret
mov
dec
sahf
inc
mov
dec
cltd
fcomip
ja
cld
in
shlb
es
rorl
movsb
arpl
movsb
xchg
cmp
testb
jo
imul
mov
xor
xlat
stc
pop
add
psadbw
mov
pop
insb
imul
cmp
push
push
jecxz
insb
sahf
or
jge
imull
pop
cmp
fs
pop
les
repnz
aas
lods
mov
xchg
lods
mov
pusha
outsb
mov
add
adc
sbb
clc
sbb
xor
xor
shl
xchg
add
and
and
adc
dec
dec
mov
cmp
jo
scas
test
gs
jb
push
mov
les
dec
push
cmp
mov
push
mov
or
stc
cwtl
xlat
jge
pop
push
or
push
and
xchg
inc
sub
sub
mov
dec
or
sbb
cmp
dec
in
mull
je
es
dec
das
rcll
cmp
das
pop
mul
loope
xor
xor
clc
test
enter
icebp
test
mov
idivb
fwait
pop
arpl
andl
push
cmp
push
cmp
lret
mov
sahf
call
inc
lods
jb
call
adc
sub
jmp
enter
mov
sub
push
xor
into
jecxz
js
int
cmp
movsl
test
xchg
mov
js
out
shrb
shl
mov
dec
int3
in
pop
mov
int
cmp
pop
popf
ljmp
inc
jnp
inc
adc
popf
lods
inc
fildl
ds
mov
enter
adc
or
clc
fisubrl
leave
mov
pop
jge
add
jmp
push
hlt
movsl
sbb
cmpsl
imul
aam
inc
xchg
xchg
std
xchg
push
nop
xor
inc
arpl
or
stos
lahf
mov
popa
or
dec
dec
xchg
pop
add
add
aas
jecxz
and
stos
aad
fs
lcall
mov
fidivs
push
cmp
jl
lds
rcll
lahf
or
test
add
test
mov
jle
xor
lret
mov
es
pushl
lcall
mov
sub
repnz
aaa
in
push
loopne
lods
sbb
repnz
ds
mov
cld
cli
sbb
xchg
jle
mov
mov
cmp
mov
hlt
lea
lahf
lcall
push
loopne
int
or
jb
std
ror
jno
fisubl
inc
jge
std
jle
adc
cmp
mov
mov
enter
fucomp
adc
sbb
xor
cmp
outsb
inc
push
dec
iret
cs
xchg
dec
jno
sahf
out
xchg
clc
pop
inc
in
inc
mov
adc
aam
fisubrs
clc
in
addl
shll
mov
cs
cltd
jae
int
popa
adc
dec
adc
cmp
add
loopne
loopne
mov
aam
insb
inc
push
mov
adc
xchg
out
leave
ja
rcll
dec
xchg
sub
add
or
das
cs
push
out
mov
scas
imulb
fnstenv
insl
pop
jno
das
enter
lods
jbe
lcall
add
aas
push
mov
out
xchg
pop
or
fldt
push
inc
rclb
xor
lret
enter
fcomip
cmp
insl
imul
mov
mov
iret
add
lds
sbb
cwtl
scas
push
icebp
loop
cwtl
iret
xchg
sbb
mov
sbb
push
lret
fs
repnz
in
pop
sub
mov
xchg
cmpsl
pusha
lret
dec
sbb
flds
test
in
js
jl
jle
mov
push
adc
adc
mov
shlb
movsb
out
mov
shll
jnp,pt
nop
inc
movsl
jns
jp
dec
mov
lahf
adc
push
inc
add
cmpb
ja
mov
adc
dec
or
fnstsw
in
inc
arpl
inc
rcll
xchg
pop
rcrb
or
test
jg
or
lret
jmp
or
and
loopne
add
mov
mov
sub
cltd
rcrl
ret
or
xchg
push
push
int
mov
dec
pop
pushf
aad
sbb
das
hlt
xchg
jmp
xor
stos
push
dec
cmp
jnp
inc
xor
mov
shl
enter
mov
fs
enter
ret
mov
sbb
rorb
add
shlb
jmp
dec
scas
xor
push
adc
mov
imul
in
jno
push
jae
add
pushf
mov
cwtl
mov
ja
xchg
inc
xchg
pop
jge
xor
xchg
ret
jecxz
push
or
mov
fildll
in
ret
nop
or
inc
cld
fs
ficomps
adc
mov
fistpl
fnsave
pop
dec
int
or
jmp
pop
clc
rolb
adc
gs
lock
pop
xor
lea
push
enter
pop
lods
int3
jmp
cmp
push
sbb
mov
dec
int3
fldl
xchg
iret
sub
mov
mov
dec
sbb
cs
jnp
out
ret
mov
dec
arpl
xchg
xchg
mov
ljmp
aas
pushf
roll
js
sub
mov
push
add
ljmp
dec
mov
int
mov
jp
lret
notb
ljmp
int
inc
inc
pop
mov
inc
lcall
adc
mov
adc
push
adc
out
push
test
fwait
sub
shlb
lods
negl
add
aas
pop
rol
fldenv
dec
mov
mull
sub
pop
add
mov
shll
push
pop
addr16
pop
js
push
xchg
sub
mov
sbb
xor
sbb
push
dec
pop
mov
xchg
test
cmpsb
aaa
enter
jnp
push
lcall
ret
cld
jo
add
mov
lret
mov
adc
xorb
int
inc
cmp
mov
mov
scas
jl
or
icebp
jnp
aam
gs
add
enter
adc
aaa
nop
xchg
xchg
dec
in
lcall
sbb
out
pop
xchg
call
ds
mov
test
mov
insb
fimuls
xchg
cmp
int3
sbb
loopne
mov
adc
fucomi
fisubs
jae
gs
scas
icebp
pushf
inc
jb
sbb
or
mov
jl
push
mov
mov
jmp
push
mov
inc
cli
dec
sub
andl
frstor
in
mov
test
rorl
dec
adc
fwait
int3
dec
lahf
add
out
jge
in
and
push
lret
dec
push
push
mov
lea
or
push
fdiv
inc
aad
cltd
int
lret
lods
xor
lahf
xchg
repz
in
jno
loope
loopne
fsub
in
adc
arpl
mov
shrb
xchg
pusha
dec
cmp
cmpsb
arpl
inc
cmp
pusha
pop
mov
les
aam
dec
loope
mov
xchg
loope
cmpsb
jge
mov
rclb
jne
cmc
xor
cmpsl
lock
movsb
jg
repnz
pop
and
jmp
mov
jbe
mov
clc
xchg
pop
xor
inc
xor
fwait
push
dec
in
lods
mov
cmp
jg
xor
mov
shrl
js
fisttpl
inc
push
ss
inc
int3
jecxz
lret
dec
lahf
sbb
lret
test
cmp
imul
dec
jae
loopne
loop
stc
inc
mov
push
scas
add
fiadds
cwtl
lea
lods
cmp
push
mov
mov
fbld
sti
push
pop
pop
mov
imul
add
in
mov
inc
cmp
repnz
aam
outsl
sub
orb
ss
mov
mov
lret
mov
mov
mov
mul
inc
mov
mov
jmp
jmp
and
lret
or
aaa
sub
mov
sbb
add
outsb
pop
dec
dec
mov
test
jo
les
or
push
sub
aad
insl
sub
mov
imul
fsubs
pop
es
orl
sti
adc
inc
dec
add
cwtl
pop
gs
pop
fs
push
aaa
pushf
xor
dec
movsb
fsubrp
cmp
js
and
or
add
lods
lods
loope
into
xlat
xor
push
xchg
jae
inc
imul
movsl
jl
out
xor
push
hlt
pushf
std
push
lcall
sub
or
push
dec
out
lret
or
inc
decb
push
aam
iret
stos
jp
push
in
xchg
sti
imul
cli
or
and
lahf
lcall
and
push
jno
in
lock
aaa
aaa
inc
adc
into
icebp
lret
fwait
adc
loopne
fisttps
mov
pop
pusha
repz
pop
xchg
xor
mov
leave
sbb
inc
mov
in
imul
mov
jbe
sbb
pop
sbb
dec
inc
scas
xchg
fnstenv
pop
xlat
aad
mov
fstpl
fwait
movsb
sarl
cmp
jae
sti
loop
out
cmp
xlat
test
lock
cmp
jno
lds
fimuls
movsl
add
mov
enter
mov
shlb
out
lock
lahf
fstl
and
ja
sbb
mov
lret
dec
fwait
pop
sub
sti
pop
jb
daa
cmp
lcall
dec
xorl
sub
pop
and
pusha
jb
pop
cld
hlt
pop
in
shr
adc
flds
add
pop
push
push
jmp
adc
inc
push
add
sbb
dec
cmc
into
lock
mov
in
fcomi
lret
rolb
into
cld
mov
popf
ret
mov
jne
inc
xchg
test
cltd
pop
mov
outsb
or
jle
popf
mull
inc
xlat
lcall
push
xchg
lcall
lock
xchg
out
mov
mov
outsb
test
xor
aad
cmpsl
into
xchg
mov
aaa
stos
cld
cs
mov
fwait
add
pop
fmul
sub
mov
popa
push
dec
inc
and
cmpb
mov
adc
add
sub
outsb
stos
aad
pop
add
mov
sub
jno
xlat
pop
push
xor
mov
aas
inc
mov
or
iret
pusha
aam
cmp
icebp
and
push
adc
enter
jl
mov
dec
push
xchg
pop
mov
ficomps
add
loope
jp
fadd
push
adc
mov
xchg
je
leave
es
stos
js
push
cld
sahf
lods
cmp
dec
inc
lds
push
cli
push
dec
popf
xor
cmp
ljmp
or
xchg
fwait
dec
mov
xchg
mov
mov
sub
hlt
add
sub
pushl
sbb
popa
sub
sbb
add
cmpsb
xchg
rep
loopne
and
xchg
xchg
cmp
pop
fcoms
lret
push
dec
daa
addr16
fistpl
inc
mov
insb
mov
xchg
inc
or
icebp
add
xchg
lcall
imul
xchg
pop
rolb
cmp
scas
adc
aad
or
mov
test
out
push
fwait
xor
ret
pop
cltd
psrlw
xchg
or
out
or
mov
or
push
mov
add
cwtl
fs
pop
cmp
xlat
out
test
iret
xor
xorl
mov
sarl
arpl
mull
inc
fnstenv
and
lea
adcb
std
pop
test
insb
nop
sbb
jbe
and
lods
push
ja
xchg
inc
movsb
xchg
dec
fisubrl
jae
inc
scas
push
pushf
dec
fcoml
ds
in
jl
out
dec
out
movsb
addr16
dec
sub
xchg
imul
push
dec
bnd
add
pop
cmpsb
cmovb
cmp
cmpsl
push
mov
mov
pop
inc
xor
mov
orb
jb
sbbl
leave
xchg
arpl
mov
sub
inc
arpl
mov
inc
pop
sub
jne
or
std
stc
in
lock
jge
leave
in
adc
and
divl
in
pop
dec
sbbb
iret
sub
xchg
notl
gs
cltd
fstl
in
bound
pop
xorb
stos
std
lods
sahf
sbb
sub
int
mov
xchg
push
rorb
outsb
add
push
mov
cmpsl
sub
imul
adc
repnz
fdivs
into
lea
sbb
pop
mov
jnp
and
xchg
pop
addb
nop
sub
or
lret
mov
adc
xchg
cld
add
xchg
push
mov
mov
pop
rorl
dec
imul
out
jae
std
popf
cmp
out
loopne
push
pop
fcompl
arpl
sub
pop
jns
inc
shl
add
mov
jne
rorb
shl
inc
sahf
jge
jl
or
loop
shl
fwait
mov
mov
jg
es
andb
pand
or
out
insl
and
mov
subl
mov
inc
mov
pop
mov
jl
xor
mov
repnz
mov
rcrl
mov
push
gs
xlat
mov
mov
mov
jns
jnp
xchg
test
lds
mov
cmp
decl
std
mov
adc
pop
idivb
add
and
adc
cmp
cli
mov
lahf
or
ss
add
mov
add
push
leave
xor
mov
jg
daa
movsl
inc
mov
movsl
ss
jne
adc
decl
push
jo
pop
int
je
stos
jmp
mov
inc
xor
xchg
outsb
mov
iret
leave
rorb
mov
dec
mov
stc
rcr
in
shll
loopne
push
dec
shrl
dec
dec
jns
adc
cmp
je
mov
jecxz
mov
in
push
mov
fistpll
lea
nop
popa
mov
aam
add
push
and
jg
fwait
xchg
mov
das
push
test
xchg
repz
mov
adc
push
mov
repz
leave
adc
clc
stc
pushf
add
fmuls
inc
dec
jns
jge
in
push
fbld
lret
mov
sub
cmpl
pop
ja
lret
mov
lods
in
movsl
sbb
pusha
int
cmpsl
or
xchg
adc
aam
xchg
es
cmpsl
cmp
inc
or
and
mov
jbe
cmc
adc
fcmovb
pushf
test
aaa
inc
cmpsl
sub
sahf
int
pop
nop
lahf
sbb
ret
in
stc
mov
testl
and
push
mov
outsl
jge
sbb
xor
mov
push
out
insb
and
pop
aaa
inc
mov
repz
popa
dec
jae
into
lock
sub
cmp
lcall
push
stos
jae
lods
test
or
jge
xor
xchg
cld
dec
push
ret
fwait
pop
fidivl
imul
scas
stos
fsubl
mov
xor
mov
add
inc
lea
daa
fld
pop
aam
daa
in
out
stos
mov
mov
pop
nop
pop
imul
rorb
and
fwait
sub
or
dec
imul
cmp
je
call
pushf
pop
test
inc
xchg
cs
scas
cmp
jb
mov
shlb
push
jmp
mov
cli
cltd
mov
sub
xor
push
xor
push
andl
mov
mov
mov
xor
mov
push
mov
and
dec
das
lods
cmp
mov
jecxz
sub
das
repz
ret
out
sar
add
sbb
rorl
pop
daa
push
sbb
test
mov
jae
decb
pop
mov
sub
pushf
fdiv
sub
enter
mov
and
in
mov
shll
sub
jmp
insl
mov
pop
mov
fsubs
aas
mov
sarl
fnsave
xorb
jne
push
jb
jge
xchg
imul
jecxz
inc
hlt
test
or
negl
pop
push
xlat
loopne
xchg
xlat
pop
inc
mov
or
sarl
inc
sbb
loopne
rcr
ds
in
push
mov
pop
xchg
out
fsubl
lock
push
ret
jns
mov
orl
inc
jge
xchg
cmp
push
sbb
testl
int
xchg
mov
dec
and
lods
jl,pn
stos
sahf
cmp
je
movsb
xor
jg
xchg
sete
mov
iret
mov
xor
fnstsw
pop
sub
leave
aad
inc
rorl
pop
or
outsl
jne
shr
cwtl
mov
mov
sahf
es
test
movsb
cmp
adc
mov
repnz
mov
stc
ljmp
push
xlat
stos
sub
cld
dec
add
call
loopne
mov
sahf
sbb
test
in
sub
inc
cmpsl
adc
std
mov
shrb
incl
jbe
arpl
cmp
dec
cs
mov
mov
xlat
cli
test
pop
dec
fdivrs
ret
fistpl
and
xchg
movsl
push
add
sub
mov
add
rcrl
lods
and
xor
mov
jae
add
and
adc
pop
push
test
inc
in
sub
das
push
adc
outsb
mov
jmp
loop
fmuls
paddsb
rclb
cmp
add
ficompl
sub
stos
stos
in
shrl
push
shll
mov
mov
push
adc
add
push
inc
and
push
jb
ret
jge
push
jl
and
xor
or
rcll
int
sbb
xchg
lcall
jbe
xor
xor
daa
loop
jae
pop
rol
aas
movsl
jb
test
push
mov
xchg
ljmp
mov
jmp
out
mov
lock
lea
mov
pop
sub
imul
cltd
mov
popfw
jne
dec
pop
shlb
mov
inc
lret
cs
dec
outsb
ror
pop
out
testb
pop
inc
push
cmp
movsl
scas
xchg
or
push
test
lds
cltd
mov
add
dec
adc
pop
stos
addr16
loop
or
cmp
cmp
test
push
outsb
adc
xchg
sbb
int
fiadds
push
mov
imul
movb
push
inc
stc
add
mov
movsl
leave
les
or
testl
iret
in
cltd
stos
jb
aam
xchg
in
add
aam
je
inc
in
jle
scas
and
movsb
scas
gs
pusha
sub
aad
xlat
mov
mov
hlt
cs
xchg
pop
ret
aam
xor
mov
cmp
mov
adc
movsb
nop
add
sbb
loopne
xor
imul
arpl
mov
aas
cmp
and
subl
pop
andl
add
xor
push
push
sbb
cwtl
scas
das
lods
xlat
fdivl
pop
or
xlat
adc
pop
jl
lods
jmp
mov
fdivr
inc
mov
add
pop
add
fcmovnu
and
jnp
fists
or
sbb
push
cltd
imul
mov
repnz
and
es
cmp
sbb
or
fisubrs
or
push
mov
push
ret
push
add
pop
sbb
pop
pop
or
cld
nop
xor
mov
adc
test
jne
aaa
pop
loop
push
dec
out
sbbb
stos
enter
sub
aas
mov
inc
es
xchg
jo
mov
cmc
add
jp
lret
jecxz
cwtl
mov
sbb
test
pop
dec
jl
out
pop
iret
loop
pushf
cmp
lret
shll
out
mov
jb
inc
dec
mov
jo
jl
mov
sbb
add
push
sub
adc
call
rorb
nop
in
loop
and
jl
and
dec
vmaxps
push
sbb
xchg
inc
loope
in
jge
mov
push
xchg
mov
jge
mov
adc
imul
dec
or
mov
xchg
test
out
lret
mov
jge
xchg
jp
movsl
adc
dec
pop
lcall
shll
lea
xor
in
push
outsl
or
lods
dec
ja
out
push
jb
add
sbb
out
adc
or
into
sbb
test
or
push
xchg
mov
pop
lods
movsl
mov
pop
out
xor
pop
jo
mov
out
iret
sbbl
xor
mov
sub
movsb
stc
out
or
das
inc
mov
loop
scas
aad
xlat
outsw
ljmp
jno
stc
jne
dec
jbe
cmp
fdivr
pushf
int3
push
out
mov
add
loop
fidivrs
sti
adc
lcall
xchg
dec
out
in
xchg
sbb
push
pop
cmp
adc
lock
pushf
jbe
mov
add
in
rcll
loope
push
cltd
push
adc
xchg
inc
sbb
in
cmp
mov
add
push
dec
or
popf
sub
ret
add
cmpsb
pop
in
ficomps
icebp
shrl
mov
pop
push
jmp
sub
or
es
sbb
int
jb
sub
mov
cltd
clc
adc
sbb
pop
xchg
or
or
sti
stc
and
push
cmpsl
loope
xchg
into
cmp
les
dec
pop
adc
cli
xchg
gs
pushf
ds
scas
aas
jbe
inc
jbe
fdiv
jo
inc
bound
rorb
test
or
mov
mov
and
adc
ret
push
ds
icebp
push
js
adc
jecxz
es
fsubrs
jns
nop
lods
out
ss
xchg
sbb
mov
mov
jns
push
pop
inc
stc
jb
cmpsb
xchg
and
shll
or
inc
jl
mov
xlat
mov
outsl
push
ljmp
pop
push
xorl
stc
push
outsb
in
dec
andb
sub
push
mov
fld
mov
fists
add
les
mov
mov
cmp
mov
out
sahf
cs
iret
div
int
jp
mov
or
hlt
js
add
jl
fdivrs
mov
jb
and
ja
mov
pop
mov
loopne
xor
rcr
into
cmpsl
lods
cltd
js
cmpsb
or
pop
stos
push
mov
mov
mov
xor
pop
das
insl
xor
inc
in
call
mov
and
sbb
adc
mov
sub
mov
jle
movb
xor
dec
sub
fsubrs
fsub
cmp
sbb
cmp
or
pop
dec
addr16
adc
das
add
and
sub
int
test
sbb
aam
pop
cmp
movsl
outsb
loop
adc
push
inc
jo
mov
mov
jns
jo
out
insl
insb
mov
push
int3
dec
xchg
sub
xchg
mov
loop
insl
xor
stos
cmp
mov
mov
and
pop
pop
cmp
in
xchg
mov
jns
fwait
aad
mov
nop
mov
mov
int3
bound
imul
loope
dec
mov
jbe
test
pop
aam
push
js
je
xor
add
push
mov
pop
jo
mov
mov
ds
xor
inc
inc
pop
out
test
lahf
int3
sub
or
sub
andb
push
ficomps
jns
pop
cmpsb
adcb
push
jns
jbe
daa
pop
cmp
mov
dec
dec
mov
mov
xchg
cmp
dec
pop
mov
mov
repz
cmp
adc
xchg
clc
sbb
sbb
sahf
cmpsb
ret
aam
inc
push
xchg
pop
mov
cmp
mov
xchg
and
ret
das
ffreep
scas
test
sbb
aaa
cmp
ds
xchg
push
xchg
lret
sahf
dec
cmp
jnp
push
dec
out
and
xchg
daa
adc
call
inc
fisttps
rol
cmp
arpl
repnz
imulb
fmull
mov
pop
or
jp
pop
js
pop
add
sbb
inc
in
add
xchg
xchg
clc
xchg
mov
push
mov
jno
aas
xchg
repnz
loopne
jbe
pushf
les
xchg
jns
loope
call
xor
mov
rorb
insl
mov
lret
cmpsb
add
cmp
fldl
popa
jns
sti
xlat
pushf
push
aaa
sub
push
hlt
xchg
movsl
sub
push
iret
cli
mov
sahf
push
push
push
ja
mov
inc
out
xchg
icebp
xchg
sbb
pop
cmp
idiv
push
sub
xchg
loope
mov
add
andl
ja
adc
out
inc
outsb
dec
lret
loop
mov
mov
std
data16
imul
das
fistpll
gs
je
enter
jge
shrl
lret
out
mov
and
movsl
lcall
into
test
sub
movsl
mov
in
dec
into
mov
lahf
call
mov
xlat
or
inc
outsl
movsl
jecxz
repz
outsb
je
mov
mov
cmpsb
lea
xchg
mov
mov
les
jbe
sbb
out
lds
xchg
pop
stos
iret
mov
sti
sbb
and
cmp
push
push
jp
scas
mov
mov
jecxz
cmpsb
xor
pop
test
call
dec
adc
mov
mov
sub
shl
pushf
dec
fistl
add
loopne
sub
in
out
rclb
jle
adc
push
loope
rcl
leave
imul
add
inc
sahf
in
mov
xchg
loopne
push
lret
jae
sub
xor
pushf
pop
inc
pop
jae
xchg
hlt
xor
in
sbb
outsb
jnp
lock
mov
or
xchg
mull
or
int
pop
into
repz
int
out
pushl
xor
sbb
add
repz
inc
enter
xchg
aaa
pop
dec
aad
fistpll
arpl
call
inc
es
jmp
mov
repz
ss
lods
push
lds
and
in
and
jbe
cwtl
xchg
mov
int3
lock
inc
adc
stos
xor
lea
test
mov
push
xor
push
sarl
es
mov
repz
or
mov
push
push
out
mov
int3
bound
and
mov
push
notl
mov
jno
push
stos
testl
repz
mov
fcomip
test
inc
or
jns
sahf
dec
push
or
jge
lcall
cli
out
inc
in
cmp
test
in
mov
enter
sbb
xor
mov
push
lods
xor
nop
out
lock
push
push
jmp
or
xchg
cld
dec
mov
adc
test
jmp
push
jle
out
in
cmpsl
fisubrs
lret
jle
dec
inc
pop
mov
jp
fbstp
pop
loope
pusha
shrl
or
mov
sub
fwait
mov
les
add
push
pop
lods
sti
mov
add
pop
rorb
leave
mov
xor
pop
adc
loop
sub
fnsave
inc
jp
leave
adc
inc
adc
sbb
imul
roll
lcall
add
jbe
or
lss
push
mov
test
xor
pop
lea
enter
xlat
addb
jne
enter
jnp
rolb
push
dec
mov
push
inc
lret
lret
int3
test
loope
jmp
aam
cmp
xor
dec
inc
mov
push
jo
mov
ja
je
push
push
fsubrl
gs
sub
hlt
mov
dec
std
and
or
test
dec
pusha
cmp
in
scas
ljmp
or
imul
inc
fdivrs
lods
test
test
jge
xchg
xchg
push
and
inc
dec
imul
mov
jb
pushf
push
inc
scas
cli
aad
nop
mov
in
inc
or
out
sbb
loopne
icebp
cmp
lret
cli
out
push
ds
xor
cmpsl
push
cmp
mov
leave
xor
aad
mov
icebp
cmp
sbb
das
leave
lods
push
imul
add
stos
subb
sub
add
scas
les
div
out
inc
loop
fdivrp
iret
nop
push
out
rolb
or
and
mov
loop
push
mov
clc
jp
sbb
inc
scas
lahf
mov
mov
subl
xor
ret
imul
popa
loopne
xchg
and
cmp
mov
inc
test
jmp
es
enter
incl
inc
dec
sbb
push
lea
int
repnz
jae
or
dec
sub
xchg
cmp
div
xchg
cmpsb
scas
cmpsb
sub
pop
iret
shrl
shlb
mov
mov
add
icebp
push
adc
xorb
or
sbb
rcrb
js
mov
xor
and
xor
or
aam
fwait
icebp
pop
lahf
loopne
adc
in
add
fldl
mov
adc
jno
pop
daa
dec
mov
scas
loopne
inc
mov
adc
ficomps
mov
arpl
and
cmc
in
jno
jne
mov
scas
jmp
xor
jge
xor
shrl
das
adc
inc
sub
cmpsl
es
loopne
xchg
ficomps
push
movsl
mov
add
push
pushf
mov
sub
or
out
cmp
repnz
mov
xor
dec
pop
lea
ljmp
sub
mov
and
xor
sub
ret
sbb
aas
pop
pop
pop
imul
or
mov
pop
fucomp
push
jmp
scas
test
or
loopne
and
dec
in
sub
pop
insl
aam
sbb
outsl
ja
lods
stos
mov
mov
test
sbb
push
adc
xlat
dec
fistl
imul
push
repz
xchg
mov
pop
or
inc
sbb
sub
pushf
fs
sub
jnp
push
fimull
clc
xor
push
pop
push
pop
xor
and
inc
jle
push
rep
xor
push
xchg
in
cwtl
mov
lcall
lods
jmp
add
xor
cmp
or
xchg
in
fidivs
lods
xor
dec
sub
sbb
repnz
cld
std
fidivs
repnz
stos
daa
movsb
arpl
scas
inc
ficoms
rcll
in
add
jno
lock
jge
xchg
xchg
pop
or
or
push
xchg
out
push
cmp
ljmp
adc
dec
addr16
addl
dec
pop
jne
cmc
mov
pop
es
xchg
xchg
gs
mov
fs
sub
mov
push
jle
rolb
adc
add
dec
xor
inc
roll
mov
mov
cltd
mov
jnp
push
adc
push
enter
xor
fildll
loopne
shl
jo
clc
test
and
ror
pop
lcall
mov
imul
sbb
stos
cmp
xor
lahf
dec
sbb
xchg
add
and
lret
test
jmp
mov
ret
idivb
xor
aad
negb
subl
inc
loopne
sub
iret
in
je
rorl
push
jmp
sbbl
test
or
or
cmp
jbe
mov
xchg
dec
outsl
inc
inc
aas
mov
pop
sub
xchg
lcall
in
mov
jg
add
push
cmp
xlat
dec
in
shlb
in
sarb
jae
lock
loopne
push
daa
mov
stos
aas
sbb
in
jns
iret
lret
in
cltd
rcrl
pop
inc
xchg
dec
jnp
and
jnp
test
jp
jno
dec
jle
cmp
dec
jno
mov
push
test
das
sub
leave
add
sub
dec
xchg
and
cmpsb
and
push
mov
push
loop
outsb
sahf
jns
mov
xchg
mov
lock
repnz
xor
mov
lret
mov
adc
adc
inc
xlat
fbld
pop
xchg
jo
movsl
jnp
xchg
and
adc
jns
sub
or
bound
push
out
push
pop
lcall
out
add
repz
out
test
out
fdivp
inc
jle
mov
test
stos
mov
scas
sbb
sub
aas
xor
rolb
add
xchg
dec
popf
or
push
sbb
rclb
test
sub
add
into
pop
pop
sqrtps
mov
xchg
rorb
lret
adc
xor
mov
add
xchg
js
out
fmull
push
fincstp
leave
sbb
out
xchg
lds
jbe
pop
inc
addr16
pusha
jg
idivb
xlat
repnz
stc
imul
fistpll
out
adc
js
mov
pop
mov
xchg
sbb
mov
push
cmp
pop
push
adc
and
test
js
into
clc
or
mov
testl
lret
pop
loopne
in
fdivrl
cmp
mov
xchg
inc
cmp
orl
inc
jmp
adc
push
jo
subl
sbb
stc
or
movntq
pop
inc
sti
lds
std
mov
lods
inc
push
inc
sbb
or
adc
fdiv
out
mov
cmp
scas
xchg
mov
and
fwait
into
rcl
push
mov
clc
cmpsb
and
clc
cld
dec
adcl
push
pop
dec
pop
outsl
insb
xchg
push
mov
into
mov
aaa
push
je
stos
jmp
jnp
pop
dec
psubw
ss
push
ljmp
jl
aaa
das
ret
das
push
mov
push
pop
xchg
push
ficoms
mov
add
loope
sbb
leave
iret
scas
or
add
pop
push
pop
fists
xchg
pusha
add
repnz
outsb
mov
jnp
cli
cltd
sti
subl
addr16
adc
xchg
jnp
jbe
lret
adc
inc
ret
int
scas
mov
lock
icebp
cmp
push
stos
lret
inc
sbb
fsubr
scas
jmp
out
popa
out
mov
out
lahf
cmpsl
fnstcw
out
pop
dec
nop
adc
xlat
cmp
inc
and
popf
bound
xchg
in
cmp
loope
jae
jg
jb
xchg
out
cs
pop
pushf
inc
out
xchg
cmpsl
clc
push
loope
arpl
repnz
fldcw
adc
dec
repnz
cmp
jl
cmpsb
inc
pop
int3
orl
ret
inc
out
outsb
adc
into
jmp
mov
mov
add
sar
push
mov
arpl
repnz
add
add
rcl
mov
or
loope
mov
cli
inc
push
add
jmp
cmp
cmpsb
or
add
dec
push
jecxz
cmp
scas
sub
insl
sbb
inc
in
jo
iret
lcall
std
add
rcrb
jmp
xchg
mov
rorb
mov
xor
iret
add
int
dec
gs
out
sti
das
outsb
push
sub
and
int3
xor
lret
mov
or
orl
cwtl
icebp
addr16
pop
es
insb
frstor
mov
in
cmpsb
push
setg
insb
lret
inc
test
mov
scas
ret
inc
inc
movsl
mov
in
test
out
pop
decl
shrb
shlb
or
lea
cmpsb
mov
sub
inc
sub
or
add
jl
push
or
out
sub
mov
out
pop
push
nop
call
xor
ret
inc
push
addb
dec
shr
inc
aas
jbe
popa
add
das
jle
or
pop
popf
inc
mov
push
xlat
bound
test
mov
mov
insl
arpl
fwait
xchg
sub
adc
roll
dec
popa
pop
fimull
movzwl
and
in
scas
add
sarb
orb
insb
adc
pop
iret
cmp
adc
loop
mov
pop
pop
adc
push
std
dec
stos
rcr
cmp
jns
inc
sbb
stos
repz
icebp
add
xchg
test
pop
rcrb
rcrb
xor
lock
into
push
in
push
ds
inc
add
lds
pop
and
mulb
in
or
mov
dec
lahf
sbbb
call
in
xor
inc
shrb
aad
xchg
mov
mov
mov
aas
cltd
push
lahf
stc
fdivrs
movsb
lcall
fcomps
mov
mov
rcrl
popa
insl
adc
clc
push
jp
sub
adc
xor
mov
ljmp
push
ja
sbb
popf
mov
mov
mov
inc
dec
jp
push
xchg
test
dec
out
jno
push
inc
les
inc
sarl
jo
outsb
mov
push
subl
lret
mov
pop
in
sahf
dec
xlat
pop
int
out
test
orb
les
add
pop
mov
idivb
repnz
test
add
pop
cmp
and
push
in
xchg
rorl
xchg
or
pop
or
dec
push
jae
js
mov
xchg
push
test
rorl
aas
mov
jbe
in
push
dec
cmpsb
jne
test
lahf
lock
repnz
adc
sti
out
daa
cli
aad
sti
cmp
js
imulb
pop
pop
xchg
outsb
inc
lods
cmpsb
movl
subb
and
out
or
mov
pushf
fwait
mov
lods
xor
pop
mov
daa
faddp
scas
repz
push
push
dec
test
enter
ljmp
adc
mov
sbbb
test
mov
mov
das
stc
cmc
orl
inc
stos
mov
int3
and
jmp
out
aas
push
cmp
push
add
out
cmp
iret
notl
std
pop
frstor
sbb
lret
mov
fistpl
cmp
enter
sub
mov
repnz
into
into
notl
test
rcrb
outsb
push
adc
add
mov
lahf
sub
aaa
inc
pop
or
push
cltd
sub
mov
test
out
and
add
adc
push
push
stos
outsb
mov
mov
out
sbb
jle
add
fistpl
mov
mov
cltd
dec
inc
sbb
mov
mov
cmp
mov
inc
stc
and
jne
mov
jmp
mov
cmp
int3
xor
add
lods
mov
imul
xor
mov
pop
or
lret
jnp
cmp
das
dec
out
outsb
pushl
pushf
push
pcmpeqb
ds
sbb
not
ss
add
pop
pop
jb
fwait
push
sub
insb
sbb
shr
mov
sub
sub
inc
loopne
lahf
jl
repnz
pop
pop
or
jo
fbstp
jle
sub
subps
adc
cld
adc
mov
repz
sub
xchg
and
xchg
cmp
sbb
rorl
mov
mov
push
rclb
test
hlt
mov
mov
fcompl
rorl
lods
push
mov
mov
dec
pop
add
js
sub
adc
push
ljmp
and
and
not
jle
pushf
adc
ss
add
inc
xor
mov
mov
xchg
ss
or
xchg
stos
mov
pushf
or
dec
or
inc
sub
jns
xor
cmp
mov
mov
fucomp
pop
cltd
cmp
outsb
sbb
fsubl
ljmp
push
sbb
mov
cmp
mov
js
lock
pop
outsb
shlb
push
pop
nop
adc
or
adc
mov
mov
inc
in
sbb
ret
pop
out
and
push
sbb
cmp
push
add
inc
pusha
js
mov
xorl
out
hlt
or
dec
dec
sub
das
iret
insb
mov
pop
pop
pop
lea
add
loop
es
call
mov
and
jae
out
inc
dec
frstor
loope
scas
data16
or
jns
xchg
dec
icebp
add
sbb
dec
adc
jo
jno
cli
push
mov
lcall
in
in
stos
das
ja
sbb
push
mov
test
test
jo
cwtl
cmp
das
jns
cltd
or
enter
adc
test
lea
fdivrl
adc
pop
dec
movlps
mov
sbb
test
out
daa
rcrb
jno
aaa
pop
aam
add
scas
push
movsb
ljmp
sub
lods
mov
mov
bswap
shrb
and
ss
cmp
lea
push
test
ss
loop
jle
jmp
cld
sub
lods
shlb
pop
push
mov
and
cs
ds
insb
imul
jl
pop
enter
cmp
cwtl
nop
test
ss
xchg
sub
inc
cmp
aad
fsubr
xorl
xchg
pop
jle
inc
mov
leave
cmpsb
les
popf
mov
pop
mov
scas
jmp
aaa
xlat
fidivrs
jno
je
arpl
aas
push
cli
xchg
std
pop
push
test
test
push
pop
ret
or
fbstp
jg
and
push
sbb
gs
sbb
fcompl
push
push
mov
enter
clc
and
in
add
add
pop
in
xor
mov
push
inc
negb
mov
negl
jge
or
sbb
pop
in
jmp
mov
mov
jb
pop
push
push
add
push
and
inc
fsubrl
cmp
mov
jo
cmp
cld
decb
psubsb
cmp
mov
fcmovne
shrl
fldcw
mov
cs
xor
pusha
xchg
mov
fs
je
out
sbb
jbe
pop
hlt
sub
and
dec
pop
pop
xchg
outsl
mov
xchg
insb
fimull
cli
mov
xchg
fcoml
lahf
pop
xorb
sti
icebp
iret
cld
inc
fadds
orl
jge
xchg
not
sbb
sub
inc
shrl
rcl
rcr
rol
sub
neg
dec
mov
mov
out
stos
xchg
cmp
push
mov
xor
cmp
sub
cmp
fs
ss
pusha
mov
cmp
cmc
icebp
movsl
inc
addr16
xchg
lds
fisttpl
cmpsl
popf
lods
or
cmp
and
ljmp
loop
je
test
mov
movsl
mov
jle
test
out
mov
mov
int3
movsl
adc
xchg
ror
mov
in
inc
add
cli
dec
cmpsb
inc
lret
push
sub
leave
mov
mov
fidivrs
xor
push
push
out
xor
stos
add
fs
in
push
popf
cmp
and
push
js
faddl
and
xor
jp
decb
pop
stos
and
mov
ret
mov
xchg
out
test
fnstsw
mov
hlt
imul
push
test
dec
cmp
cmc
mov
mov
fwait
in
jns
adc
imul
xor
mov
jno
iret
mov
sbb
negl
ret
inc
jne
jo
cmp
cli
sub
dec
jge
pop
sbb
repnz
jecxz
addr16
mov
inc
xchg
sahf
cmp
movsl
rcr
adc
mov
lods
inc
push
mov
jns
insb
mov
jo
add
or
adc
inc
fbld
call
test
lds
lock
fstps
and
das
int3
aad
xor
dec
in
je
ret
or
inc
sub
pop
fcomps
mov
js
jo
imul
subb
aas
stos
push
jecxz
mov
lods
pop
inc
mov
mov
cli
test
adc
dec
xor
das
hlt
jns
test
xchg
sub
sub
sub
mov
rorb
xchg
lods
push
xchg
in
add
cmp
jg
push
adc
ret
stc
cmp
jle
cmp
or
cmpsl
jle
in
mov
xor
jb
daa
add
or
movsb
js
insb
sub
lahf
push
adc
out
jge
out
xchg
or
sub
adc
lods
das
push
setp
dec
sti
cltd
sti
cmpsl
add
xor
xchg
clc
sub
and
ds
sbb
subl
mov
jns
xor
sub
push
outsb
sub
jno
jg
inc
push
and
add
ds
mov
in
fiadds
gs
sub
subb
mov
mov
cmp
rolb
subb
jb
push
jge
adc
addr16
out
mov
test
div
push
loope
push
xchg
in
ret
mov
cs
inc
pop
cwtl
pop
sub
test
adc
xchg
inc
out
cmp
cwtl
pop
and
push
jge
inc
mov
add
xchg
jbe
das
dec
inc
mov
cmpsl
pop
sub
nop
ja
es
lock
stos
xor
ret
outsb
sahf
test
mov
enter
pop
dec
jge
out
mov
and
sahf
xchg
push
inc
or
sahf
xor
scas
dec
or
mov
xor
mov
add
xchg
mov
xor
pop
call
pop
cmc
cmp
xlat
xchg
sub
daa
aad
pop
ja
fnstsw
adc
mov
arpl
imul
mov
ljmp
sbb
in
sub
sti
adc
inc
test
fwait
lods
incl
push
fs
mov
sbbl
lea
sub
imul
mov
mov
or
inc
dec
lock
xchg
xor
cmp
pop
out
sbb
ds
or
sbb
dec
and
xchg
pop
jl
movb
push
or
repz
pop
mov
lods
mov
call
xchg
inc
jmp
push
scas
sub
mov
xor
xor
and
fcmovnbe
stos
jnp
insb
sbb
push
dec
scas
shlb
mov
fidivl
scas
mov
mov
jns
in
dec
mov
in
das
imull
mov
mov
xchg
subb
mov
dec
mov
sbb
jmp
mov
sbb
and
push
lods
mov
mov
dec
cmp
mov
fcomi
mov
nop
sub
xchg
or
mov
dec
or
jno
xor
adc
repnz
leave
sub
sbb
aas
jge
pop
aam
lahf
stos
push
pop
inc
cmp
push
inc
cmp
mov
into
adc
and
sub
jb
xchg
jl
sbb
icebp
shll
or
fisubs
inc
pushf
xchg
mov
lahf
add
adc
add
mov
pop
push
enter
inc
loopne
ljmp
jb
mov
adc
out
mov
aaa
lock
shrb
clc
lret
push
shrl
hlt
js
sbb
ret
adc
inc
xchg
mov
inc
outsl
add
add
aas
dec
aad
les
out
cld
cld
mov
and
cmpsl
sti
fwait
xchg
aas
push
sub
mov
push
imul
sbb
pop
pop
movsl
adc
jmp
mov
xchg
subl
cmp
pop
mov
outsl
jae
lds
cmp
mov
cmc
jb
mov
ss
mov
jle
fldt
push
sar
scas
xchg
jne
cltd
lock
scas
fnsave
out
sbb
outsb
xchg
ret
mov
in
hlt
idivb
out
leave
call
mov
push
stos
pop
cmc
mov
icebp
adc
or
xchg
das
pop
xchg
lret
out
enter
outsb
mov
fstl
in
sbb
cld
add
xchg
jae
jecxz
cmpsb
lret
movsl
xor
in
nop
cmp
push
add
mov
fnstsw
pop
cmc
sti
aad
cmp
mov
imul
test
pop
sbb
inc
mov
xor
fstl
sub
xchg
mov
inc
push
ficompl
icebp
inc
loop
pop
push
rorl
int3
mov
sti
cmp
pop
push
repnz
je
push
sub
xor
lret
adc
fisttps
inc
dec
clc
lret
mov
dec
je
popf
lcall
or
push
out
push
out
mov
add
popf
shrl
pop
cs
lret
fs
mov
xchg
xchg
or
ja
jb
pop
sbb
mov
lods
push
aaa
movsb
in
add
mov
dec
stos
daa
sbbb
mov
sahf
cmp
daa
sub
and
add
mov
mov
test
and
jo
sub
xor
pop
adc
sahf
aam
xchg
pop
mov
sub
ret
das
inc
movsb
iret
sub
xor
daa
and
inc
jmp
fwait
sbb
bound
lds
pop
dec
mov
add
mov
xchg
cmp
stc
mov
pop
pop
movsl
inc
mov
adc
sbbb
adc
pop
dec
jae
xchg
jae
mov
cmp
pop
sti
fwait
inc
testb
sub
fcomp
push
arpl
jo
adc
mov
lret
lds
jle
sbb
fs
sahf
cmp
mov
cmc
sub
jge
test
mov
outsl
mov
jo
pop
call
shl
data16
test
jmp
xchg
aam
stos
cmc
mov
jb
les
xor
hlt
into
xadd
faddl
in
scas
mov
rol
adc
push
bound
cwtl
lcall
out
inc
shrl
xor
lods
sarl
mov
fldcw
lcall
push
loope
les
pushf
repz
and
inc
aas
call
sti
jge
xchg
ss
test
out
mov
in
clc
arpl
sub
mov
popf
pop
leave
cmc
sub
mov
mov
out
aaa
fistpl
cld
mov
lea
jns
out
cli
adc
xchg
inc
dec
int
mov
imul
fidivrs
jns
and
fwait
aaa
outsl
push
call
sbb
js
pop
fnstcw
call
pop
mov
psrlq
loop
xor
xchg
mov
lcall
jae
test
mov
repz
stos
les
int3
addr16
pop
ds
pop
cmp
adc
mov
or
pop
xchg
lock
xchg
sbb
dec
daa
push
mov
adc
xor
add
push
cmc
sub
in
ret
lds
inc
xchg
push
xchg
push
leave
leave
imul
adc
sub
lock
dec
fadds
jbe
cmp
mov
inc
pop
pop
fs
iret
jle
test
enter
cmp
pop
mov
sub
orl
xor
mov
loop
shrb
in
cld
nop
cmp
dec
or
hlt
hlt
notb
mov
subl
inc
xchg
inc
sub
cld
sub
daa
inc
js
fs
gs
jbe
movsl
hlt
icebp
sbb
xor
sbb
jb
sbb
inc
leave
sbb
xchg
in
outsl
loop
cld
pop
mov
pop
mov
add
xor
jnp
movb
jb
in
pop
ret
aas
or
xor
test
int3
outsb
cmp
xchg
inc
cmpsl
jne
sub
pop
xchg
mov
sub
dec
iret
adc
rcll
inc
shl
jo
inc
pop
lahf
xor
mov
or
repz
int3
add
bound
je
mov
mov
das
sti
loope
pop
addr16
xor
cmp
lock
aaa
outsl
push
out
fcomps
and
add
xchg
or
pop
push
mov
rorb
in
mov
hlt
out
lcall
adc
mov
sub
ffree
in
scas
mov
dec
clc
insb
shrl
adc
mov
xchg
arpl
loope
mov
adc
xchg
test
and
sbb
mov
idiv
mov
adcl
ljmp
pusha
fmull
mov
jp
jmp
pop
testl
stos
dec
jns
mov
cmp
into
add
test
jg
push
mov
adc
pop
nop
xor
arpl
loopne
sti
std
push
or
into
ret
shll
sbb
aad
xlat
fildll
out
inc
mov
jp
jo
mov
imul
lret
sarl
sbb
push
call
add
pushf
popa
test
lds
mov
add
cmp
loope
push
daa
inc
or
das
arpl
dec
addr16
in
xor
dec
dec
inc
push
mov
das
xchg
jnp
jae
incl
sarl
ss
jb
jb
push
cmpsl
lret
adc
in
bound
ss
inc
xor
daa
loope
ds
sbb
shrb
insl
push
call
xchg
int3
jno
mov
mov
ret
shll
aad
loopne
push
icebp
mov
inc
ja
std
inc
mov
xlat
cmpsb
or
mov
mov
cwtl
jbe
orb
or
mov
push
jp
push
push
add
mov
sub
aam
push
mov
test
sub
push
pop
or
or
fiaddl
sub
inc
pop
in
or
out
jmp
fwait
jae
repz
fldl
xchg
popf
xchg
inc
lods
into
mov
mov
jl
pop
inc
push
and
and
rcl
repz
or
stos
push
jecxz
mov
or
inc
dec
adc
sbb
pushf
int3
std
data16
or
out
xor
cs
xor
push
pusha
scas
mov
pop
xlat
ret
add
cmp
mov
scas
sahf
add
sbb
adc
mov
neg
hlt
sub
fwait
test
or
mov
push
push
cmp
xchg
mov
movsl
pop
lahf
es
popa
push
dec
fwait
dec
ljmp
inc
pusha
sahf
imul
aad
jp
iret
mov
in
and
hlt
jns
fisubl
loopne
fstpl
movsb
stos
in
scas
or
adc
fs
clc
jecxz
js
mov
mov
mov
xlat
pop
fbstp
arpl
call
or
cmpsl
shl
adc
mov
inc
inc
xor
xchg
push
pop
fistps
int3
push
xchg
jnp
jl
inc
mov
sub
inc
or
pop
fiaddl
adc
out
xchg
les
push
mov
pop
mov
dec
test
pop
scas
push
mov
jns
lock
adc
dec
lock
dec
push
fs
mov
jo
inc
insl
mov
out
jp
jb
idivl
mov
sbb
movsb
test
and
mov
lcall
xchg
dec
cwtl
xor
shll
push
push
pushf
mov
dec
dec
test
in
pop
stc
pop
pop
mov
mov
jno
push
xor
and
idiv
push
ds
pop
sub
dec
xor
int3
push
sbb
sub
add
fdivs
hlt
inc
xor
mov
insl
xor
cmpsl
stos
sbb
mov
in
xor
jno
and
cwtl
cmp
sbb
cld
mov
push
repnz
lock
std
inc
movsb
jg
xchg
hlt
and
dec
pop
orl
dec
dec
cltd
jbe
mov
jl
nop
jae
daa
insb
cmp
mov
xchg
mov
push
imul
xchg
and
call
sahf
clc
pop
or
xchg
mov
or
mov
inc
add
mov
ss
mov
sub
inc
push
jnp
rcrl
add
sbb
mov
lds
lcall
dec
jns
sub
out
std
xchg
mov
push
xchg
pop
adc
sbb
js
scas
addr16
in
add
jecxz
xchg
push
imul
push
aam
mov
je
fwait
clc
jmp
jle
clc
jb,pn
iret
jae
mov
mov
mov
cmc
adc
or
xorl
outsl
std
popa
adc
outsl
cmc
in
mov
call
sub
pop
xor
rol
mov
xor
mov
add
lahf
mov
push
push
add
roll
xchg
adc
add
add
int
mov
rcl
out
ja
into
scas
pushf
or
mov
cmp
fidivrs
cwtl
mov
jb
cmp
ljmp
sbb
outsl
mov
mov
ds
jmp
jp
xchg
mov
jg
les
loopne
repnz
mov
mov
shll
roll
and
jnp
leave
addb
insl
add
fcomps
xor
push
outsb
fdivrp
cmp
push
into
dec
scas
push
mov
xchg
inc
inc
ljmp
adc
int3
jbe
mov
roll
inc
push
jg
in
lds
sub
loopne
fldl
xchg
mov
aaa
jmp
in
in
sbb
repnz
pop
imul
int3
stc
orb
pusha
stos
cmpsb
add
lods
out
mov
or
sub
pop
push
mov
xor
dec
push
in
sahf
imul
cmp
mov
mov
mov
stos
addr16
lods
inc
xlat
inc
inc
jecxz
pop
sub
std
in
roll
xchg
gs
jg
pop
rorb
insl
sti
jo
and
inc
aaa
dec
add
mov
aas
decl
mov
loope
inc
mulb
fsubs
fimuls
dec
jne
imul
sbb
mov
or
leave
push
lock
sbb
in
nop
insl
mov
adcb
jmp
push
scas
mov
mov
push
push
cmp
add
scas
mov
aas
pop
mov
addr16
incl
negb
adc
mov
mov
xchg
jae
cmp
jno
jae
pop
dec
adc
mov
adcl
cmpsb
add
stos
adc
push
mov
xchg
inc
mov
sub
cmpb
sarl
jne
stos
xchg
inc
push
insb
mov
push
imul
outsl
mov
push
mov
dec
aaa
mov
test
loope
fabs
shl
inc
jne
mov
ss
inc
daa
fwait
add
inc
outsw
jae
mov
call
mov
adcb
loop
dec
inc
xchg
jnp
bound
pop
lds
pop
bound
cmpsb
push
pop
imul
ja
jne
xchg
xchg
pop
rcrb
jmp
stc
ss
pop
icebp
fs
mov
add
mov
testb
pop
sub
aaa
notl
icebp
adc
push
lcall
pop
sarb
mov
das
subl
stc
pop
fmulp
push
dec
lds
lahf
push
inc
movl
cmp
pop
pop
pushf
lahf
dec
inc
enter
popa
jl
cmp
dec
in
mov
mov
mov
sbb
mov
imul
repnz
cmp
pop
les
sti
fidivrl
mov
xor
add
inc
xor
push
scas
loop
scas
and
inc
xor
or
sub
jno
cmc
mov
push
repnz
lods
imul
pop
mov
clc
mov
ljmp
or
insb
cmp
push
aad
jmp
cmpsb
add
pusha
dec
icebp
in
xchg
adc
lcall
test
pop
sub
mov
dec
bound
mov
push
cmp
pop
xchg
rcll
adc
inc
xchg
sbb
cmp
dec
inc
out
inc
les
outsb
int
stos
cmpsl
mov
fnstenv
and
push
push
xor
and
fcoml
xchg
mov
stos
jmp
jg
pop
mov
test
arpl
lock
daa
cmp
push
leave
hlt
mov
mov
cmp
or
gs
add
jecxz
dec
xchg
adc
xchg
lds
or
dec
adc
in
xlat
les
jns
ficompl
jno
lods
pop
bound
fldl
sub
push
xchg
lret
outsl
pop
inc
mov
mov
je
daa
stos
push
xchg
not
std
jecxz
xchg
pop
pop
or
mov
jae
xchg
shrb
icebp
mov
lods
fisttpll
cltd
stos
push
mov
cmp
cmp
loop
push
in
out
pop
aas
fisubrl
sub
lods
out
sbb
add
push
in
xor
es
js
out
cli
fwait
push
pop
xlat
imul
inc
mov
jl
sbb
insl
pop
and
cmp
or
ja
inc
fmull
push
push
sub
push
ror
pushf
sbb
xor
in
cmp
or
mov
lret
leave
add
repz
out
int
cwtl
mov
rcl
sub
mov
mov
pop
add
cltd
push
cmp
mov
lret
adc
push
push
jge
lock
fildll
ss
xchg
movsb
dec
daa
sbb
ds
lahf
and
mov
and
jecxz
inc
sub
mov
inc
jmp
xchg
xor
in
mov
movsb
dec
loope
stc
mov
sbb
jno
mov
mov
ss
pop
stos
mov
cld
insl
loope
inc
lock
mov
adc
addr16
out
in
mov
aaa
adc
or
jns
push
push
fistpll
or
repz
mov
insb
cwtl
int3
test
adc
fs
xor
in
xor
xchg
arpl
aas
scas
mov
nop
jl
xchg
sbb
push
dec
add
push
aas
sub
or
push
pop
insl
xchg
mov
push
cmp
push
sbb
xor
mov
push
inc
pop
pop
sbb
add
mul
cwtl
mov
mov
push
aam
and
stos
push
cmp
and
popw
sbb
xchg
sbb
push
and
xor
mov
cmp
aaa
addb
xlat
iret
mov
inc
xchg
lret
out
ret
adc
cmpsb
push
aam
sub
stos
and
pop
rorb
xchg
push
xchg
add
add
add
add
add
add
mov
add
mov
cmp
mov
cmp
movsb
in
dec
fildll
dec
mov
inc
mov
mov
mov
faddp
cmp
mov
add
mov
mov
inc
mov
mov
mov
inc
mov
mov
pusha
lahf
xchg
mov
inc
mov
mov
mov
inc
mov
mov
das
push
pop
mov
add
add
enter
add
add
pop
add
mov
inc
mov
mov
lds
jb
pusha
jb
add
rolb
add
in
add
add
add
add
push
add
add
add
add
inc
push
cmpsl
or
add
inc
add
add
add
add
add
add
pop
add
dec
jmp
add
sbb
add
add
xor
dec
cmpsl
faddp
mov
mov
and
imul
test
aaa
jns
lret
ucomiss
mov
or
cltd
mov
cld
lods
push
fwait
jnp
cmp
mov
imul
jmp
push
in
cmpl
out
jbe
lods
or
aas
cmp
fisttps
ja
pop
sub
arpl
jb
mov
fsubrl
mov
mov
loop
xchg
loope
and
shrl
cs
call
arpl
or
out
hlt
mov
jmp
xchg
scas
pushf
lahf
sbb
xor
jno
push
cmp
and
jns
mov
and
mov
shl
sub
mov
add
sub
fisttpll
or
enter
sub
cmp
xlat
stos
mov
scas
or
mov
cmp
pop
lods
push
icebp
test
and
fmull
ret
dec
lock
inc
out
arpl
addb
inc
mov
lret
dec
inc
fmull
lret
scas
cmp
movsb
data16
jmp
pop
in
cmpsb
lcall
les
aas
inc
insl
pushf
sub
mov
sahf
or
ficoms
pushf
fs
or
outsb
push
leave
cs
lea
mov
movsl
aaa
ss
mov
xor
sbb
adc
call
bound
mov
pop
addr16
cmc
mov
dec
jb
xor
lahf
lcall
andb
pop
scas
pop
mov
in
bound
in
sub
mov
mov
pop
mov
xchg
cmpsl
or
mov
cli
mov
dec
loopne
rorl
xchg
into
mov
inc
pop
adc
mov
push
mov
lret
adc
mov
lea
fildl
jno
shr
sarb
stc
push
ljmp
jb
add
dec
inc
adc
lret
addb
mul
inc
stc
mov
adc
lock
test
nop
rol
or
jecxz
sbb
jo
xchg
sarb
cmp
mov
jno
ret
jge
fnsave
sbb
cmp
push
pop
shlb
aad
das
dec
pop
cmp
scas
scas
mov
sbb
and
xor
xchg
pop
xchg
idivb
mov
xor
lcall
ds
paddd
dec
adc
lock
movsl
in
arpl
sub
ljmp
lds
jo
add
aaa
cwtl
dec
repz
fsubl
mov
rcrl
in
mov
icebp
add
stc
adc
jmp
cmpsl
aam
push
jne
rorb
cwtl
lret
shll
mov
push
divl
clc
fwait
and
jmp
xor
push
lods
inc
adc
inc
push
stos
dec
mov
lret
pop
jl
mov
ljmp
addr16
add
push
bound
lahf
out
icebp
xchg
inc
mov
dec
jmp
xchg
jle
enter
push
mov
shrb
add
mov
xor
xchg
sub
add
out
jnp
xorb
sbb
sbb
lret
enter
dec
mov
in
adc
arpl
push
pop
mov
in
fwait
imul
stos
rolb
cmp
add
sahf
aad
rep
push
pop
rclb
repnz
xchg
or
ss
imul
mov
adc
pop
inc
lods
xchg
pop
lds
pop
jne
jnp
jne
pop
xor
mov
xor
push
cmpl
xlat
lods
aaa
dec
ja
or
or
je
xchg
pop
inc
inc
cmp
inc
push
jne
aam
push
mov
sub
dec
lods
pop
jo
push
lret
xor
in
into
pop
add
xchg
cmp
fidivs
sub
js
mov
pop
pushf
cmpb
mov
push
out
cmp
out
cld
sub
push
std
push
push
push
adc
jle
imul
add
dec
xor
dec
dec
pop
mov
rorb
adc
hlt
pop
int3
push
lahf
imul
sub
jp
hlt
repz
test
pop
mov
icebp
adc
cli
out
test
addr16
xor
leave
push
push
leave
adc
sub
xor
and
orb
inc
pop
jbe
sub
scas
cs
mov
pop
in
imul
adc
jns
test
sub
mov
flds
jle
jno
inc
sar
cwtl
pushf
add
dec
dec
xchg
add
popa
sbb
lods
adc
xor
push
scas
bound
and
lods
push
xchg
mov
add
fildll
and
mov
rorl
xchg
cmp
cs
xchg
sbb
add
pop
cmp
sti
je
or
shrl
pushf
mov
imulb
and
cmp
dec
xor
fisttps
pop
lods
cwtl
mov
push
loop
jl
je
sub
xor
out
sub
scas
fisubrl
dec
cwtl
xchg
into
cmp
jle
push
stc
sahf
and
imul
repnz
cmp
cli
sti
add
roll
popa
icebp
inc
sbb
xchg
mov
cmp
mov
shlb
push
cli
or
push
test
pushf
pop
mov
xchg
xor
ret
es
cmc
mov
data16
mov
call
es
loopne
inc
arpl
stc
mov
jae
jmp
push
dec
or
push
aad
frstor
dec
mov
pusha
add
repnz
mov
cmpsl
lret
and
das
ret
push
pop
jle
dec
loopne
cmpsl
inc
jno
rcrl
aam
sahf
or
mov
pop
cmp
jo
xchg
nop
and
cli
lahf
cmpb
pop
mov
and
dec
and
mov
ficompl
cwtl
xor
push
and
test
jge
push
push
data16
dec
xchg
out
and
mov
jle
cmp
push
popf
rcll
fildl
jbe
das
jo
dec
mov
ret
inc
sti
ljmp
inc
stos
pop
inc
and
dec
mov
mov
add
mov
jecxz
das
mov
jl
inc
aad
int3
orl
loop
call
mov
push
rorl
mov
enter
dec
jno
repnz
jae
stc
xor
dec
sub
mov
daa
imul
std
jp
shlb
cmpsb
arpl
xor
sbbl
mov
mov
ds
shl
add
das
test
or
inc
insl
inc
dec
sbb
clc
repz
out
mov
dec
scas
mov
mov
mov
or
or
pusha
jo
fwait
xor
and
jmp
pop
cmpsl
inc
imul
pushf
cs
loope
mov
pop
fmuls
popf
je
inc
dec
inc
inc
in
jp
test
jbe
fxch
add
sbb
jle
ret
scas
pop
xor
mov
movsl
adc
das
jle
js
xchg
push
add
and
adc
arpl
adc
sbb
push
jecxz
xchg
cwtl
sub
mov
xchg
push
push
loopne
mov
mov
dec
xor
out
imul
out
lcall
ss
dec
cmp
cmp
pop
xchg
push
sub
test
cmp
out
xor
outsl
jnp
xor
jmp
jns
arpl
add
push
jge
mov
int
aas
lea
push
sub
pusha
push
mov
adc
fstpl
les
bswap
push
std
mov
cmp
sbb
ret
inc
push
dec
push
fisubs
jg
sbb
call
test
iret
test
xchg
pop
pop
jno
adc
mov
mov
or
or
in
pusha
cmp
jnp
incl
xchg
es
lea
lds
mov
mov
inc
pushl
mov
push
leave
adc
rol
lea
cmp
sbb
pop
adc
out
pop
lock
jns
pop
leave
lds
add
sbb
lea
dec
lea
pushf
cmp
add
mov
insb
or
int
jae
sub
sti
jl
stos
mov
ror
dec
dec
movsb
mov
add
mov
int3
push
xchg
add
cmp
dec
or
add
sti
loope
pop
sti
insb
cmp
aam
andb
add
mov
adc
xchg
sbb
insb
lahf
aaa
dec
leave
inc
mov
scas
xor
and
sbb
jmp
out
sub
jb
mov
adc
pop
push
push
mov
jo
ljmp
jg
jb
out
inc
int3
jl
lret
testb
mov
inc
inc
cwtl
push
mov
cwtl
push
clc
filds
jbe
pop
dec
test
icebp
or
pop
scas
imul
mov
das
and
xor
push
push
push
and
pop
push
jecxz
push
push
push
xor
sub
sbbl
adc
xor
in
jp
xor
xchg
adc
jns
repz
jno
sbbb
lahf
cld
aas
sbb
or
push
cli
pop
jmp
call
mov
or
int
stos
pop
xlat
pop
pop
insl
mov
xchg
gs
fisttpll
cmp
cli
adc
mov
mov
stos
jne
add
les
arpl
adc
rorl
xchg
out
stos
ror
sub
fisubs
or
test
mov
sub
aad
pop
xchg
in
fsubrl
push
jns
push
xchg
sub
push
jbe
cmovle
mov
or
pop
cmp
xlat
lahf
mov
mov
cmp
pop
test
ja
stc
popl
mov
mul
sub
inc
push
fs
xor
mov
mov
xchg
sbb
mov
pop
jge
mov
int
repnz
daa
shlb
hlt
push
sub
or
lods
lods
sub
push
sbb
movsb
in
mov
add
cltd
sbb
inc
scas
mov
mov
mov
int
out
xchg
icebp
lock
out
adc
dec
jb
push
pop
icebp
and
test
popa
jno
stc
out
sub
mov
test
inc
inc
loope,pt
loop
pop
ret
pushf
jnp
xlat
or
test
dec
inc
inc
arpl
push
jo
sub
out
jmp
es
push
ss
stc
cwtl
popf
sbb
push
xor
imul
jmp
enter
ret
dec
mov
gs
scas
int
divb
jne
hlt
jmp
cmp
mull
cmp
shrl
adc
pop
pop
test
jp
mov
sbb
cmpsb
lods
loope
in
jns,pt
mov
jg
xchg
xchg
jg
pop
stos
or
push
xchg
mov
clc
shr
lret
shr
repz
lods
loop
dec
pop
daa
pop
lods
mov
cmp
int
xor
in
and
sbbb
pusha
subl
push
xor
add
push
scas
lods
sbb
sbb
sub
sbb
sbb
sub
jnp
insb
test
shr
xor
pushf
das
cmp
rolb
std
xor
addr16
add
bound
push
mov
xor
pop
out
hlt
in
adc
dec
out
rcll
or
xor
inc
sub
adc
lahf
sub
mov
es
pop
icebp
sbb
in
lcall
stc
pop
xchg
push
repz
mov
les
data16
pop
test
neg
lds
push
jl
and
jp
mov
mov
dec
add
pop
rcrb
lret
or
fsubl
xlat
shlb
and
push
insb
adc
std
xlat
pop
clc
cmp
add
dec
lods
lock
pop
outsl
cmp
or
and
dec
cmp
movsb
das
push
adc
cs
mov
sarl
sub
xchg
jle
and
jb
mov
mov
pop
xchg
sbb
dec
pusha
xchg
imul
icebp
stos
push
sbb
fidivrl
dec
repz
scas
cli
in
and
sti
ret
dec
ret
jae
xchg
popw
and
mov
fnstcw
out
xchg
rcl
xor
pusha
scas
add
inc
add
and
mov
lods
push
out
call
int
cmc
dec
push
repnz
popa
cmp
adc
cmp
mov
xchg
loop
jmp
aas
pop
mov
lea
nop
lret
pop
xor
mov
out
in
push
pop
nop
lock
add
repnz
pop
dec
sub
divps
scas
dec
cmpl
xchg
mov
mov
inc
repz
dec
shll
jnp
leave
sbb
sbb
add
xor
inc
pop
movsb
and
jl
sbb
add
in
test
fwait
dec
or
inc
or
inc
push
andb
sub
sbb
repz
imul
pop
cmpsb
in
or
jns
xchg
aad
push
dec
int3
and
mov
sub
mov
in
idivl
cmp
cli
mov
or
lods
imul
add
into
int3
dec
push
and
mov
pop
push
sub
adc
iret
mov
xchg
dec
mov
mov
sarl
mov
pop
cmpsl
movsb
jp
les
aas
std
mov
andl
aas
int3
xchg
stos
dec
jle
push
jl
cmc
mov
nop
mov
fcmovnb
aam
sbb
mov
mov
cmc
fsubs
push
and
xchg
or
xchg
sbb
pop
sarb
mov
xchg
insb
xchg
jb
sahf
loop
adc
scas
imul
jo
dec
jnp
xchg
rclb
in
inc
mov
lock
test
mov
dec
fsubs
arpl
cmc
add
add
or
add
jb
add
xor
loopne
hlt
jo
subb
and
push
loop
dec
imull
jns
es
inc
dec
push
cltd
jge
stos
nop
cmpsl
inc
push
lcall
mov
test
jo
pushf
test
and
clc
pop
ja
out
cmp
rolb
xlat
mov
outsl
outsb
push
sub
dec
fsts
repz
repnz
and
jl
xchg
mov
jns
mov
movsl
pop
mov
xor
ljmp
mov
sub
shrb
ds
or
jne
mov
sbb
jge
dec
cltd
fdivs
and
shlb
addr16
sbbl
rorb
lcall
fistps
imul
mov
enter
cmpl
fdivrl
xor
lea
lea
sbb
sbb
dec
int3
inc
sbb
pop
mov
fsubrs
jno
inc
and
ja
sbb
sbb
lods
sbb
imul
inc
cmp
popa
fdivrp
mov
xchg
xchg
fsubrp
xor
mov
xchg
mov
imul
stc
gs
inc
arpl
sbb
inc
lods
inc
aam
inc
or
mov
imul
inc
sub
js
xchg
imul
in
mov
add
mov
push
mov
xor
inc
inc
ret
jae
adcb
mov
addr16
xchg
add
and
loopne
mov
dec
minps
mov
sub
lods
push
push
dec
cmp
aas
push
repnz
rcrl
mov
inc
test
add
push
outsl
call
dec
repnz
sub
push
inc
mov
stos
cwtl
scas
cld
and
push
lahf
call
push
mov
mov
adcl
fdivrl
push
and
cmp
pop
pop
loop
fwait
into
ljmp
cmp
and
and
xor
push
sbb
mov
xchg
fwait
les
adc
mov
pop
adc
lock
movsl
mov
dec
cmp
cmp
mov
and
cltd
inc
or
imul
and
in
inc
lret
pop
lock
cmp
js
mov
rclb
add
push
pop
hlt
iret
jp
push
stos
mov
stc
lret
inc
xchg
pusha
ja
movsl
xchg
movsb
jg
in
fsub
xchg
xchg
cmc
movsb
loope
sub
or
call
daa
ficompl
pop
xlat
mov
push
and
adc
jmp
js
inc
rolb
pop
or
bnd
fldenv
cwtl
or
xor
sbb
inc
xor
test
adc
sahf
cmpl
in
les
out
xchg
rorb
jne
add
call
jae
call
jnp
or
in
or
adc
pop
addr16
enter
stos
or
notl
push
pop
das
pop
lret
dec
pop
jmp
xchg
lea
lret
in
xor
add
mov
stos
dec
sbb
insl
out
cwtl
ljmp
rolb
or
push
addr16
inc
int
ficoms
xor
xchg
xchg
or
lret
cmc
jle
xor
xor
mov
orl
outsb
inc
les
das
mov
mov
xor
inc
out
sbb
sbb
mov
lods
popa
in
cltd
xchg
ds
mov
xor
mov
push
xchg
sub
stc
sub
xorb
imul
pop
fistpll
fbld
sbb
push
cwtl
cmp
cwtl
in
push
fidivl
ja
rclb
repnz
sarl
out
sbb
arpl
dec
cmpsb
and
dec
mov
dec
repz
stc
fists
cmc
pushf
mov
pop
mov
fimuls
movsb
cmp
adc
outsb
dec
pop
inc
mov
add
jle
jnp
scas
add
popf
aaa
cli
xchg
push
call
aad
into
and
sub
stos
sub
ljmp
lret
inc
pop
fcmovbe
add
push
xor
jmp
loop
sarb
lods
test
int3
test
out
xorb
pop
cwtl
cltd
pop
std
aas
dec
xchg
daa
outsl
mov
adc
jae
or
bound
dec
pop
lahf
mov
sub
mov
push
jge
lcall
es
xchg
mov
fisttps
jns
imul
jnp
out
jge
xor
leave
repnz
or
fs
sarb
xchg
xor
sub
int
into
flds
repnz
mov
scas
mov
popa
xchg
shl
fbld
push
cs
fnsave
aaa
push
mov
sub
arpl
adc
sbb
inc
repnz
xor
iret
orl
and
mov
dec
loope
fstpl
jno
test
mov
lock
xor
sub
imul
scas
movsl
gs
and
testb
ljmp
push
clc
out
xchg
add
xor
xchg
dec
ss
test
imul
mov
push
rclb
push
add
pop
jbe
mov
and
mov
push
inc
xchg
js
rolb
cmp
add
push
lds
and
aad
mov
jbe
mov
mov
movb
arpl
mov
ficoml
mov
mov
jl
pop
data16
pop
jmp
pop
adcl
xchg
in
mov
mov
fdiv
sbb
jb
sar
in
fmul
cmc
dec
aad
filds
inc
lods
or
mov
sub
pop
insl
arpl
shrb
out
mov
gs
pop
cmp
sub
sbb
mov
adc
adc
andb
clc
mov
and
inc
push
sbb
mov
cli
mov
rolb
imul
mov
sbb
shlb
pop
ret
jns
inc
xchg
les
inc
fmul
xlat
mov
dec
jg
inc
push
xchg
aam
xchg
mov
inc
pop
or
dec
inc
shll
fisubl
push
cmp
nop
xor
sbb
dec
mov
push
test
inc
or
adc
sub
add
ljmp
sbb
cmp
gs
sub
mov
push
aad
pop
push
inc
push
les
stc
fsub
sub
xor
dec
xchg
mov
stos
xchg
je
cld
xchg
movsl
or
and
mov
mov
stos
pop
fptan
inc
ds
jle
in
push
pop
pop
fdivl
xlat
and
push
cmpsb
inc
repz
cltd
sbb
subl
or
jmp
xor
ss
inc
mov
mov
imul
out
and
xchg
sti
out
icebp
mov
test
lea
lock
dec
loopne
xor
cli
sbb
sbb
loope
xor
sub
pop
dec
xchg
mov
mov
lds
addr16
add
jle
push
sbb
ret
dec
arpl
push
scas
dec
fnstsw
clc
sub
mov
hlt
inc
adc
push
fdivr
mov
cmp
lods
fcoms
test
cwtl
incb
inc
sti
push
das
mov
fsubs
enter
and
movsb
adc
or
inc
test
cmp
movsb
scas
ja
pop
loop
pop
pop
xchg
out
xlat
mov
lock
jbe,pt
mov
je
sub
mov
sti
fisubs
dec
or
imul
je
aam
add
ljmp
rolb
testl
testb
pop
shrl
xor
repz
fiaddl
test
pop
fnsave
pop
push
sub
fwait
cs
push
push
in
aam
clc
mov
aaa
cmp
jecxz
mov
or
out
ljmp
mov
outsl
int3
mov
xchg
jne
jno
rorb
int
pop
jae
and
shll
sub
sbb
nop
sub
jge
cmpsb
pushf
sub
adc
cmp
push
sahf
sahf
insl
xchg
or
jns,pn
adc
call
mov
dec
dec
pop
push
push
pop
scas
mov
xor
data16
push
mov
ljmp
ss
adcb
sarb
and
dec
xor
pop
xchg
outsb
push
int3
mov
inc
push
mov
add
add
push
jnp
add
nop
cmc
cmc
adc
and
pop
aas
fcmovne
push
mov
cmp
test
mov
or
dec
jmp
mov
jge
push
mov
mov
out
pop
cmp
lret
enter
mov
leave
inc
xor
into
or
fcmovnu
stos
jge
outsb
xchg
out
cmpl
xor
cmp
xor
imul
jg
push
add
mov
aam
xchg
inc
jge
popf
ja
pop
inc
and
mov
testl
or
out
pop
lods
jmp
int
mull
hlt
inc
in
push
mov
in
xchg
sbb
push
cli
ret
stos
sbb
mov
pop
scas
cwtl
inc
cmp
mov
andl
imul
mov
insb
and
mov
adc
sub
lods
lahf
xor
pop
cld
push
outsb
lods
in
push
mov
std
movsb
mov
into
sbb
jge
pop
mov
sub
js
jl
xor
lea
and
dec
jle
ficomps
sbb
les
pushf
bound
xor
lret
pop
sbb
int
ret
or
ret
loopne
mov
stc
shll
inc
inc
cmp
inc
mov
insl
lret
pop
inc
mov
dec
mov
lret
jecxz
xchg
aad
adcl
mov
out
les
fstpl
mov
popw
and
adc
sbb
out
xorb
add
mov
mov
in
shr
push
or
mov
or
pop
mov
dec
dec
xor
lock
inc
es
inc
push
stos
push
cwtl
push
jae
dec
imul
cltd
andl
pop
orl
js
and
stos
dec
leave
jne
dec
test
out
adc
cmpsl
mov
cmp
sub
add
sti
xchg
fcmovne
fmuls
stc
or
insl
aad
lret
ret
push
addr16
dec
jle
out
repz
and
push
lds
push
fistpll
sti
mov
pop
sub
repz
stos
xor
test
add
jl
sub
ja
xorl
stc
emms
cmc
fs
jle
xchg
leave
jp
movsb
dec
dec
stos
popf
movsb
stc
jns
cs
push
inc
adc
mov
push
lret
jb
jns
mov
and
mov
and
outsl
adc
mov
das
cmp
sahf
mov
lds
ljmp
outsl
jp
out
push
imul
ja
lret
pop
mov
test
clc
jno
dec
cmp
add
sahf
hlt
push
rolb
cmp
cs
idivl
jno
add
cmp
cmp
or
inc
push
jl
and
adc
cli
push
sti
or
and
ja
cwtl
inc
jmp
cld
imul
push
xchg
dec
jnp
lcall
imul
xchg
sbb
decl
test
fdivrs
cmp
mov
call
lock
lods
pop
jne
xor
cmp
inc
push
cltd
mov
out
pop
mov
pop
test
loope
mov
jecxz
hlt
loopne
mov
fiaddl
lret
rep
aas
lea
daa
adc
dec
stc
mov
adc
jecxz
ds
mov
jmp
xchg
bound
orb
inc
push
scas
shll
scas
jb
xor
inc
pop
xor
dec
popa
test
ds
jnp
sahf
stc
mov
adc
int3
push
xor
idiv
mov
jno
cmp
xor
dec
gs
push
clc
push
dec
cmc
sbb
pop
loop
inc
rcrl
lret
push
out
scas
test
fisubl
and
shll
scas
xlat
movsl
sub
and
stc
add
out
inc
adc
push
push
sbb
add
add
scas
imul
or
ja
and
into
mov
iret
setge
cltd
cmp
ss
or
out
cmp
dec
xchg
repnz
mov
fmul
inc
outsl
jns
cwtl
sysexit
subb
add
in
das
cmp
push
adc
sub
cwtl
push
ret
push
filds
lret
repnz
jo
pop
cltd
pop
andl
loop
je
mov
jnp
or
dec
dec
cmpsl
stc
pop
mov
xchg
popf
insl
mov
cmp
stc
and
adc
cmp
fnstsw
das
push
mov
cltd
fisttpl
adc
je
pop
mov
pushf
test
mov
bound
and
dec
mov
push
shll
mov
sbb
sub
mov
mov
fwait
jno
lock
daa
cwtl
sub
add
cld
inc
dec
xchg
xor
ljmp
push
out
mov
in
lds
fcompp
adc
out
daa
insl
fs
imul
dec
out
add
xchg
sub
xor
pop
inc
pushf
cmp
xchg
cmp
mov
push
sbb
scas
sub
jg
data16
iret
xchg
inc
je
lods
push
mov
xchg
jae
xchg
cmc
xchg
mov
stos
ret
fnstsw
xor
popa
aam
setns
mov
push
ss
dec
add
push
sub
add
hlt
fistpl
fwait
rorb
mov
test
inc
lock
sbb
add
xor
lods
cmpl
in
iret
and
push
std
repnz
daa
add
cld
stos
mov
or
and
add
xchg
clc
scas
add
icebp
ds
or
jb
jp
bound
xchg
xchg
sti
lea
mov
in
mov
jo
pushf
push
cmp
in
data16
arpl
mov
sub
xor
mov
jbe
xor
lea
out
jecxz
seto
cmpsb
aad
add
fistps
sbb
test
cmp
push
sarl
pop
ds
cmc
lahf
inc
shl
jne
ss
dec
push
popa
mov
hlt
rcrb
aaa
or
rcrb
out
mov
or
xchg
cmpsl
xor
xchg
addr16
icebp
jp
or
pop
pop
es
sbb
sub
pop
mov
repz
push
mov
xchg
es
pop
mov
jnp
add
add
or
dec
daa
inc
aaa
in
pop
mov
pop
es
mov
aad
outsl
aad
lds
test
dec
mov
xchg
cmc
mov
pop
dec
jl
inc
rorb
push
cmp
sbb
push
adc
les
in
cmp
mov
jbe
sub
mov
mov
push
clc
mov
xchg
pop
and
sbb
dec
mov
xchg
aaa
lret
roll
imul
push
mov
shlb
pop
out
mov
test
leave
mov
scas
dec
imul
divl
roll
jl
test
mov
pop
adc
and
outsb
scas
insb
jle
pop
adc
xor
mov
add
fistps
adc
insl
pushf
and
rorb
mov
fdivrs
mov
push
outsb
push
mov
ss
and
cli
sbb
pop
mov
imul
xchg
add
jmp
and
popa
daa
ret
std
fcoms
aam
cwtl
xchg
xchg
cmpsl
sets
push
mov
repnz
pop
lahf
pop
test
fwait
arpl
push
mov
mov
cmc
subl
fldt
test
xor
add
jmp
cwtl
add
pop
fsubrs
into
ret
in
sub
pushf
ficompl
mov
sbb
arpl
movsb
aaa
jmp
mov
adc
cmp
sahf
mov
pop
jo
je
push
call
sbb
fbstp
cmp
sbb
mov
in
popf
mov
out
mov
dec
fiadds
push
mov
mov
iret
and
sbb
mov
pop
and
loope
mov
jecxz
fbld
sti
imul
ljmp
sub
fwait
adc
jl
inc
pop
inc
push
add
insl
or
jg
fldenv
movsl
xor
shll
clc
in
rcrb
shl
shll
insl
jmp
cmp
mov
inc
add
add
xorb
xor
mov
pop
or
jae
fwait
jmp
sbb
xchg
cmpsl
xor
mov
loopew
popf
lret
xlat
jl
movsb
cmp
sti
jae
pop
sbb
or
mov
add
sub
mov
das
inc
and
add
cmp
fdivr
int
sub
cmpsb
shrb
outsl
jns
inc
lock
mov
lea
ds
insb
cwtl
repz
mov
shrb
movsb
xchg
call
and
mov
jecxz
scas
mov
arpl
pop
push
ffreep
adc
sarb
jne
sbb
inc
inc
popf
in
push
xor
push
mov
jns
pop
cmp
arpl
test
out
mov
arpl
leave
cli
jecxz
sbb
push
js
pushl
xchg
mov
sarb
aaa
leave
cmpsb
or
into
jo
xorb
pop
test
jmp
jnp
lret
aad
test
mov
and
pop
xchg
inc
mov
ds
int
psubq
mov
ret
push
and
adc
mov
lods
mov
lods
icebp
jp
ret
sti
cld
xchg
push
jb
dec
mov
js
jb
popf
pop
test
xorb
adc
mov
call
addr16
enter
les
fisubrl
sub
into
mov
pop
and
dec
lea
or
fcompl
xchg
aaa
inc
mov
shl
push
mov
mov
push
mov
push
out
pop
push
mov
cmp
fistpll
sub
and
movsl
cmpl
push
xor
das
mov
add
fs
fdivr
jo
icebp
pop
xor
sbb
or
add
jge
or
sub
and
xchg
je
inc
aam
xchg
xlat
shl
cmp
mov
pop
daa
imul
imul
xor
jnp
adc
cmpl
adc
lds
and
add
pop
fmull
std
testb
jae
fs
sbb
out
movsb
xor
pop
insl
lret
ljmp
jl
ss
orl
mov
mov
cmpsl
in
mov
dec
vpsubusb
rcrb
call
fisubrl
bound
push
jmp
jbe
lahf
or
or
sar
sbb
popw
fs
xlat
dec
ficompl
jge
repz
pop
adc
push
out
inc
xchg
fstpt
cwtl
sub
xor
mov
fnstsw
jnp
xor
xor
mov
jbe
loopne
mov
dec
rcrb
sub
sarb
xchg
xchg
jecxz
stos
addr16
addl
sbb
hlt
pop
stos
orb
lock
and
outsb
call
ljmp
xchg
stc
mov
aaa
ja
push
jg
or
push
fwait
or
inc
pop
push
nop
orl
in
xor
pop
inc
push
bound
or
ja
ds
mov
pop
cmp
imul
pusha
movsl
dec
stc
sbb
sahf
loop
pop
lahf
and
data16
push
mov
in
dec
out
mov
addr16
ffree
pop
sbb
out
inc
xor
mov
mulb
and
ret
mov
sbb
leave
leave
xchg
inc
fmulp
andl
dec
adc
shlb
movsb
dec
cmp
in
cmp
adc
std
stc
adc
mov
and
lock
mov
xchg
jg
std
orl
sbb
add
sub
lock
xchg
in
stos
mov
ret
insb
jbe
xor
fucomip
cmp
lret
das
cli
sbb
fmul
outsl
sahf
dec
stos
jl
xchg
mov
lcall
cltd
stos
decb
pop
es
cmpsb
es
js
nop
push
mov
and
mov
outsb
rorb
jmp
add
cmpsl
in
or
ds
mov
pop
daa
sub
or
mov
clc
test
cli
or
outsb
sahf
inc
loop
popf
ret
inc
mov
lods
out
shll
into
cmc
adc
inc
test
sbb
daa
ficompl
fsubs
xchg
hlt
leave
cmp
fisttpl
push
pop
push
adc
ret
sub
popl
sbbb
cwtl
testl
in
repnz
shlb
jns
stos
xor
popa
xor
xor
pop
data16
or
push
cmp
cmpsb
jecxz
mov
mov
cmp
orb
sub
adc
nop
xchg
mov
jbe
xor
jmp
xor
pop
jo
dec
sbb
adc
sub
cmpsl
aam
pop
xor
hlt
ds
shl
adcl
outsl
mov
xchg
outsl
jp
std
inc
cmp
lea
xchg
in
sbb
shl
xchg
or
lahf
stc
mov
je
negl
cli
jp
xchg
test
xor
mov
cmp
les
iret
fs
mov
insb
adc
or
hlt
scas
xchg
jae
loop
inc
jmp
dec
call
imul
add
and
mov
mov
std
mov
ret
pushf
popf
out
insb
mov
sub
test
fs
aaa
js
stc
mov
inc
add
jle
push
fs
xor
fcoml
pop
jl
sbb
or
jg
leave
inc
xor
adc
les
stos
push
fistpll
rcrb
test
dec
sarl
loop
push
and
out
adc
imul
icebp
cltd
inc
lret
gs
sub
out
pop
aas
xchg
and
mov
mov
pop
adc
out
xorl
imull
inc
fildl
cmp
adc
xor
rorl
sti
mov
push
push
adc
mov
cwtl
jg
fbld
enter
pop
xchg
inc
lds
call
adc
imul
xor
or
xchg
xor
addr16
popa
lret
xchg
push
pushf
shr
aaa
mov
cmc
sub
lds
fs
dec
xlat
xchg
js
loopne
fwait
gs
pop
test
ret
and
pop
dec
loop
lret
jns
inc
inc
xlat
mov
stc
ja
rcrl
cmp
xchg
fstpl
inc
xor
jmp
and
das
sahf
scas
adc
lcall
and
dec
or
push
test
dec
pop
xor
bound
pop
in
push
push
pop
and
jecxz
adc
mov
fistpl
jge
add
inc
inc
add
add
mov
loope
jno
imul
mov
cmp
xor
ret
adc
xchg
aam
jns
pop
mov
fwait
cli
insl
mov
lret
std
scas
mov
sub
pop
xchg
test
jp
insb
ljmp
adc
and
lock
add
les
xor
pop
xchg
shl
sub
jnp
mov
imul
in
jl
fwait
mov
test
int3
cmp
xchg
xchg
lock
daa
lret
out
sbb
mov
adc
jmp
lret
sbb
leave
xchg
mov
mov
popa
mov
je
mov
sti
add
xor
icebp
and
or
xchg
jne
lahf
fldcw
or
mov
pop
daa
movsl
sbb
inc
mov
pop
insb
cli
les
inc
out
adc
inc
adc
jmp
or
push
mov
divl
push
aas
push
cltd
sahf
addr16
fisttpll
mov
pop
aas
cld
push
mov
jg
outsb
stos
jle
mov
pop
dec
cld
call
fistps
xor
fnstenv
sbb
outsb
push
scas
cmpl
add
adc
cmpsb
outsb
push
and
pop
int
movsb
jmp
in
movsl
mov
or
dec
in
jmp
pop
inc
js
std
das
popf
scas
sbb
xor
jbe
mov
dec
ss
mov
dec
mov
enter
pop
add
xor
pop
pushf
js
fidivrs
and
sub
cmp
inc
inc
or
push
mov
cs
jne
xlat
je
inc
fnsave
mov
je
jle
addl
pushf
push
cmp
aas
inc
mov
mov
jp
xor
dec
pop
ljmp
insl
cld
push
jp
add
mov
or
fimull
and
aaa
lahf
and
xor
xchg
pop
cltd
call
cmp
repnz
mov
ja
jae
cmpsl
rorb
xor
inc
int3
mov
mov
xchg
inc
aad
out
bound
xor
pusha
cwtl
sti
dec
pop
mov
xchg
lret
nop
popa
sbb
lods
xchg
xchg
shll
inc
cmpl
popf
lret
in
mov
imul
mov
fisubs
shrb
sub
insb
xor
add
inc
mull
pop
fwait
pop
mov
cmp
std
jb
mov
cmp
in
out
adc
and
inc
lahf
inc
mov
mov
enter
ret
mov
xor
hlt
push
mov
bound
lahf
mov
cwtl
clc
fildl
sbb
lods
xchg
inc
cmc
out
pop
adc
inc
and
ljmp
lods
sub
xchg
push
pop
repz
repnz
enter
add
gs
jecxz
ss
xchg
cmpsb
out
and
test
fsubrs
ja
cmp
imul
pop
push
sbb
dec
dec
into
xlat
gs
das
cmp
mov
adc
jmp
lahf
out
int
lods
push
push
pop
xchg
and
inc
lret
push
mov
pop
test
push
icebp
push
cld
stos
nop
in
mov
cld
lds
outsl
aad
jecxz
lea
and
mov
in
xchg
jnp
xor
inc
cmpsl
pop
add
leave
mov
lret
mov
push
sbb
sub
out
adc
mov
adc
xchg
iret
pop
call
testb
sarl
mov
or
xor
gs
sbb
pop
inc
xchg
pushf
iret
int
xchg
fld1
outsl
stos
pop
xchg
dec
orb
add
inc
inc
mov
int3
xchg
push
jle
in
push
out
push
add
inc
mov
mov
push
out
mov
pop
and
push
scas
mov
add
pop
mov
mov
movsb
popf
enter
xchg
ds
ljmp
add
xor
xor
outsl
xlat
push
add
test
sti
lret
adc
ret
push
addr16
jmp
add
sti
cli
int3
or
clc
mov
xchg
sbb
pop
jmp
imul
sahf
or
jge
in
jb
inc
add
stos
loop
jno
cmp
fiadds
lret
ljmp
and
scas
inc
xchg
ret
mov
sub
mov
or
ja
repnz
add
ja
jb
jg
ret
jg,pt
outsl
pusha
outsl
adc
jp
inc
out
shrb
cmpb
fmull
popf
mov
pop
fidivl
add
push
mov
jecxz
daa
cmp
enter
inc
inc
cmp
je
cld
in
inc
cmp
stos
push
mov
sbb
ror
into
mov
pop
mov
cmc
push
or
test
stos
sahf
in
aas
cwtl
sbb
sub
stc
pop
or
rclb
jecxz
mov
mov
js
pop
test
mov
pop
push
jp
test
pop
call
dec
xor
pop
mov
fnstcw
jnp
cltd
fsts
sti
ret
xor
mov
aas
cmpb
jnp
dec
ficoml
fdivs
jge
pop
and
out
ret
xor
or
arpl
cmp
pop
std
cmp
in
sub
jecxz
pop
outsl
insb
or
jnp
movsb
sbb
xchg
out
popf
cltd
add
sbb
jae
cmp
push
jle
pop
adc
test
fcoml
inc
scas
out
sub
inc
ret
dec
mov
scas
xchg
fdivrp
out
loope
shrb
js
ds
cmova
shll
fimuls
mov
adc
mov
inc
pusha
lret
repnz
data16
cmpl
xchg
shl
pop
cli
imul
insl
leave
insb
push
clc
sub
cli
sub
jns
loopne
rcr
push
dec
lret
imul
arpl
sub
jg
arpl
jnp
fwait
aad
jmp
es
das
into
shlb
mov
sub
add
lcall
mov
push
vandps
jae
lret
mov
pop
sub
cld
push
push
aas
adc
ss
mov
stos
es
pop
xchg
jp
repnz
cmpsl
lahf
sub
sub
lods
cmp
mov
jge
mov
sub
repnz
sti
lock
addr16
xchg
cltd
pop
adc
in
scas
sbb
shl
scas
divb
or
mov
scas
or
daa
bound
jae
dec
imul
test
mov
clc
push
xchg
xor
jg
or
das
jl
pushf
out
pop
mov
pop
inc
dec
mov
xor
inc
and
out
and
pop
mov
aad
add
push
enter
bnd
inc
or
adc
inc
sub
fs
pop
add
push
sbb
add
adc
rcl
aaa
rcll
fnstsw
dec
or
adcb
jb
jbe
cld
sbb
and
int3
fucomp
loop
pop
pop
dec
leave
mov
movsb
push
xchg
push
repz
mull
or
lret
icebp
sub
inc
push
pop
jl
cmp
cmpsb
push
lret
sti
mov
xchg
cwtl
lds
jne
xchg
test
test
jo
push
push
pop
inc
ret
in
dec
sbb
lea
jb
and
jl
mov
or
dec
mov
adc
and
sub
dec
jb
xchg
jbe
jecxz
fwait
cwtl
inc
or
inc
mov
mov
or
or
mov
mov
push
cwtl
movl
jecxz
xor
jne
xchg
or
mov
add
addr16
or
sub
add
adc
add
cmp
mov
and
and
xchg
jp
lret
push
jmp
insl
call
inc
inc
xor
sub
movsl
fimuls
cmp
sub
pop
ljmp
sahf
mov
jle
in
or
imul
lods
iret
out
xor
nop
mov
push
inc
fmull
dec
cmp
and
mov
jae
dec
int3
lods
adc
jae
or
test
fisubrl
out
lock
pop
mov
cld
inc
mov
mov
fisubrl
mov
mov
mov
rorl
adc
inc
gs
and
xchg
push
or
jg
add
push
mov
cmpsb
cltd
lock
mov
in
add
cwtl
sub
xor
mov
sbb
out
sbb
inc
and
and
pop
sub
or
cmp
push
push
or
imul
pop
dec
shlb
lock
cmp
cmp
pop
cmpsb
imul
movsl
push
sub
sbb
xchg
mov
xchg
sub
mov
test
cmc
jae
int3
or
inc
or
loop
lret
popf
movsb
mov
fwait
andl
test
or
jge
mov
add
das
add
stos
lock
jno
jae
jo
data16
cmpsb
xchg
xchg
push
pop
jo
in
cli
sbb
cli
int3
xchg
fsub
testb
mov
in
xchg
mov
lret
xchg
xchg
jae
mov
cmpsb
repnz
or
mov
mov
sti
ja
push
inc
test
dec
rol
mov
or
jo
out
cltd
or
adcb
outsl
jo
insl
cmp
mov
repnz
bound
dec
out
and
inc
cmp
into
sbb
int
das
jp
aas
push
cmp
das
cli
gs
xor
pop
gs
mov
and
jmp
hlt
sbb
iret
fidivl
push
and
mov
mov
loope
popa
aad
lret
or
nop
les
xor
add
mov
nop
mov
adc
ficoms
mov
cmp
adc
or
pusha
out
cmp
std
test
subb
rcrb
mov
and
mov
test
ret
cs
pop
into
gs
push
lea
sub
inc
inc
and
ffreep
sbb
daa
call
fucomi
jnp
mov
imul
or
mull
loop
test
pop
outsl
loopne
pop
xor
dec
cmc
arpl
int3
lock
push
pxor
js
imul
ret
leave
jmp
xor
aas
dec
mov
jb
daa
pop
das
and
bound
or
out
push
shlb
aam
push
or
into
sub
test
in
sub
leave
push
stc
pop
dec
insl
mov
jecxz
into
cmp
lods
into
fidivl
icebp
adc
sbb
popa
mov
mov
mov
push
sahf
add
cmp
push
xorl
movsb
sti
nop
dec
lret
repz
pusha
adc
cmp
shrb
ds
add
lods
or
out
ja
sub
movsl
adc
gs
out
or
sahf
out
mov
ret
inc
imul
stos
sub
cmpsb
loop
jne
lea
cmpsb
stc
xorl
stos
call
sub
sub
pop
adc
imul
testb
rcrl
or
lret
movsl
imul
push
lret
ds
add
outsl
inc
faddl
jns
mov
andb
jno
lods
mov
jmp
jne
pop
subl
rorb
push
pop
or
or
jmp
sub
rcrl
jno
out
stos
pop
inc
dec
adc
lods
push
mov
and
xor
movsb
js
cmp
sub
xor
fbstp
cmc
cmp
scas
mov
data16
mov
lea
arpl
adc
push
out
jae
fstpl
lret
mov
arpl
cmp
mov
insl
jb
push
adc
adc
mov
mov
scas
scas
mov
mov
call
mov
inc
dec
gs
xor
cmp
imul
or
setb
mov
andb
dec
mov
icebp
mov
stos
inc
scas
je
jne
test
insl
xor
cltd
sub
inc
push
fbld
mov
jb
jno
aas
xorb
fwait
add
hlt
cmp
xchg
push
push
dec
ja
lock
loopne
movsb
mov
fwait
inc
movsb
lea
dec
icebp
cmp
dec
idivb
daa
adc
nop
jnp
jnp
mov
inc
adcb
fimuls
imul
lret
lcall
push
push
outsb
inc
sarb
pop
xchg
jl
scas
pop
bound
jbe
scas
pop
mov
add
push
push
pop
add
repnz
xlat
pop
les
xchg
leave
jp
fsub
pusha
sbbb
pop
mov
loope
inc
fucom
fxch
mov
adc
out
jge
cmpb
test
sti
push
fldpi
push
adc
fdivr
or
xor
sarb
divb
out
xor
sbb
xchg
in
fucomip
rcr
test
call
inc
adc
and
cmp
push
mov
leave
adc
xchg
cmpsb
out
inc
sbb
xor
jmp
sti
push
mov
faddl
loope
out
pushf
sub
sbb
popl
sub
cmp
rcrl
xchg
lret
cli
ss
push
jg
cmc
adc
mov
data16
adc
xchg
mov
and
cli
lea
add
xchg
push
cmp
repnz
test
sbb
jp
sahf
pop
iretw
out
push
cmc
rcll
sti
sbb
jg
cmpsb
inc
dec
popa
fidivl
jb
lcall
ljmp
out
pop
pop
mov
jbe
pusha
aaa
cmp
mov
mov
inc
add
daa
jp
outsb
sub
or
arpl
push
rcll
aad
lcall
sarl
jmp
repnz
jbe
fs
cmp
push
sub
inc
in
dec
out
fsubl
mov
adc
push
add
mov
push
jo
push
adc
mov
ret
arpl
shrb
js
dec
or
daa
ds
lock
push
mov
bound
das
fimull
pusha
fstp
rol
les
clc
or
je
fcoms
inc
ljmp
stos
lds
and
aam
nop
adc
sub
and
dec
shlb
cmpsb
mov
sub
lods
rorb
ljmp
mov
xor
pop
cmp
adc
sub
lret
pop
push
xor
rcll
jo
insl
and
sub
ss
jecxz
and
mov
xor
movsb
movsl
pop
or
xchg
adc
hlt
mov
fstl
xchg
insl
mov
ret
leave
push
iret
mov
rolb
data16
mov
and
inc
xchg
jb
imul
jb
adc
mov
jnp
push
stos
lds
inc
out
jp
fildl
jns
jb
mov
push
jge
add
mov
or
rcll
or
cmp
and
jmp
lea
fdivrs
sahf
or
dec
lahf
bound
ret
xchg
mov
jl
fisubl
and
xor
inc
and
rcrb
rcr
mov
push
cld
gs
pop
jne
push
scas
test
into
sub
mov
jno
test
lret
hlt
ret
dec
arpl
and
icebp
loope
rcrl
jb
scas
jle
popa
mov
push
xor
lret
jecxz
sub
rorb
push
inc
scas
xor
ja
pop
pop
scas
jmp
mov
jmp
mov
and
and
shll
push
subb
sub
or
or
sbb
fnstenv
les
stos
pop
mov
lcall
sub
mul
shll
enter
cwtl
adc
xchg
in
add
sub
fisubs
ss
mov
sub
pop
pop
adc
sub
sbb
roll
add
pop
cmpb
fdivr
nop
jl
out
sub
jno
mov
cmp
stos
pop
hlt
loopne
int3
sub
and
fidivrl
xor
int
xchg
daa
cmp
es
std
lock
mov
sub
aam
in
stos
and
pop
popf
jge
ret
lods
push
js
sahf
inc
in
ror
dec
jbe
add
cs
or
inc
scas
cmp
js
ss
std
sbbb
bound
faddl
test
repnz
imul
add
push
dec
mov
xchg
xchg
pop
fnstenv
test
out
mov
mov
push
repnz
sbbl
xorb
add
lods
fcomps
jg
push
mov
jle
in
cmc
mov
ret
pop
rolb
cmp
gs
adc
cmp
mov
dec
cld
xor
adcb
mov
jbe
cmp
mov
push
sub
sarl
sub
add
push
mov
mov
fcomps
bound
in
mov
xor
imul
add
pop
pop
repnz
pushf
lods
sub
xlat
call
ret
mov
push
filds
or
leave
pop
je
jnp
mov
lret
sub
push
and
pushf
ret
out
mov
and
mov
movq
mov
stos
xchg
mov
dec
loopne
adc
dec
movups
xchg
mov
jno
popa
cmp
or
xor
mov
scas
adc
or
cmp
inc
push
out
mov
inc
xchg
cmc
out
arpl
push
and
fcoml
icebp
arpl
push
mov
shl
outsb
stc
repz
pop
ficompl
daa
cmp
imul
iret
inc
push
jns
jbe
pop
cltd
arpl
mov
cmpl
xlat
out
dec
sub
outsl
pop
loope
add
mov
pop
scas
cmp
incb
sti
cmp
sub
jno
rorl
adc
cmp
push
add
pop
mov
call
mov
inc
and
and
cmp
jne
gs
outsb
pop
in
add
pushf
and
in
nop
roll
or
jmp
inc
sub
mov
gs
xor
test
adc
cmp
lds
jmp
lods
enter
inc
and
and
xor
mov
jno
insb
adc
out
scas
mov
insl
std
mov
out
daa
mov
das
xchg
xor
sbb
mov
ret
sbb
mov
ds
mov
loopne
xchg
test
clc
push
seta
incl
lret
push
mov
sub
add
mov
test
mov
pop
dec
cmp
sub
add
sub
loopne
nop
cmp
add
xor
pop
lret
xchg
popa
push
jmp
pop
outsl
and
cmp
mov
xor
outsb
and
xchg
das
cltd
xchg
jmp
xor
pop
stc
xchg
rcll
test
jp
mov
lahf
stc
lods
xor
cmp
mov
pusha
aas
push
roll
xchg
in
jae
ror
sub
arpl
push
jno
inc
insl
fwait
mov
in
push
movb
adc
fistpl
addr16
cmp
inc
jns
inc
xchg
imul
push
ss
in
xchg
xor
inc
jmp
ljmp
aad
pushf
jnp
fdivl
xor
jmp
or
out
sbb
decl
lea
stos
sub
lcall
lds
js
adc
adc
notl
notb
repnz
pop
jns
inc
addb
cmpsl
cmc
inc
pop
xlat
aaa
lret
mov
sub
pushf
out
sahf
in
dec
push
jecxz
shll
inc
adc
cmp
je
clc
pop
in
xchg
cmp
jns
int3
push
dec
inc
xchg
push
aad
popf
push
fisttpll
mov
xor
xor
mov
bswap
cwtl
or
dec
mov
out
cmpsl
dec
mov
clc
sti
cwtl
jbe
scas
push
mov
dec
inc
xchg
pusha
ds
data16
inc
add
pop
dec
nop
cmpsl
pop
cmp
pop
in
lcall
add
sub
popf
lcall
xor
pushf
ficoms
jge
pop
push
jbe
stc
cmpsl
movsb
adc
cli
lret
loope
fcoms
cmp
divb
add
jae
dec
lahf
cmp
adc
pop
xor
jmp
mov
subl
jno
notl
movsb
cmp
xchg
xchg
dec
stc
fiadds
test
shrb
cmpsb
xor
jle
xor
bound
fwait
pop
call
xor
das
sahf
cmp
ja
loop
call
sbbl
mov
imul
movsb
in
testb
dec
or
sbb
push
ja
pop
push
adc
mov
pop
xor
pop
push
shrb
pop
mov
std
pop
pop
push
ds
cwtl
mov
pop
sti
mov
imul
aam
popa
fistpl
lret
xor
xor
lock
mov
inc
fwait
lcall
mov
out
popf
sti
sbb
mov
push
pop
or
sbb
lods
mov
and
rcrl
or
repnz
add
cltd
mov
inc
out
inc
jl
aad
sub
lahf
out
pop
mov
add
cmc
mov
add
in
aaa
lret
insl
int3
hlt
fidivrs
mov
sti
mov
leave
and
push
ja
mov
cmp
or
xor
sahf
cmpsb
dec
nop
bnd
stos
dec
lea
gs
xor
add
or
mov
sbb
push
in
and
sahf
inc
int3
mov
sub
jge
lds
mov
scas
ret
sahf
mulb
lods
or
or
in
call
mov
negl
push
jp
test
outsl
push
push
mov
aas
pop
xchg
stos
fcmovb
mov
in
mov
xor
sub
mov
dec
jl
mov
mov
nop
je
ficompl
mov
fimull
xor
push
test
pushl
mov
lret
pop
pop
pop
aaa
lahf
pop
dec
ja
dec
mov
arpl
mov
xchg
pop
clc
add
cmp
inc
jg
jg
push
cmp
xor
xbegin
push
cmp
sbb
push
or
xlat
sub
dec
or
pop
mov
into
mov
xchg
xor
add
jmp
inc
dec
outsb
sub
pop
jg
and
loop
lcall
pop
cltd
adc
shrb
pop
dec
add
out
iret
jge
fistpll
cmpsb
mov
inc
loop
jecxz
mov
pop
fdivrl
popa
repz
sbb
and
sbb
ljmp
iret
jne
mov
outsl
cwtl
and
xlat
pushf
jbe
lahf
dec
cmc
lahf
fwait
mov
pop
lcall
mov
bound
data16
xchg
les
add
pop
mov
subb
cmp
pop
dec
nop
es
adc
imul
in
insb
cmc
in
xor
movsb
cmp
cs
in
xlat
sbb
jo
popa
mov
loope
mov
in
cwtl
xchg
lahf
mov
and
mov
ret
inc
lods
sti
shlb
int
clc
push
out
inc
adc
push
pop
cmp
add
pop
aam
dec
fmul
mov
sbb
test
mov
shrb
fnstenv
inc
xor
xchg
push
dec
loopne
push
cmp
aad
sub
cmpsl
dec
fwait
jns
and
clc
and
out
testl
mov
or
dec
push
xchg
mov
data16
dec
mov
out
mov
shl
mov
mov
mov
hlt
sbbl
test
insb
sar
aad
pop
ljmp
sbb
xchg
outsl
xorl
out
inc
in
push
sub
mov
mov
push
push
test
add
lds
and
in
xchg
das
jecxz
sbbb
jbe
outsb
pop
jge
jecxz
jl
and
xor
cmpsb
push
push
mov
aam
aaa
nop
xchg
mov
mov
pop
cmpsl
lods
insl
jne
mov
pop
sbb
or
out
imul
pushf
and
mov
cmpsb
std
cmp
jle
iret
ja
pop
add
or
shl
hlt
popf
dec
add
mov
int
inc
mov
lock
xor
aam
push
mov
sbb
jne
dec
lods
lds
dec
out
cmpsl
rorb
push
mov
sub
in
sbb
mov
bsr
xchg
adc
sbb
mov
ljmp
aam
ret
push
xchg
lock
jnp
dec
mov
pusha
movsb
jle
adc
pop
jb
mov
push
loopne
jno
add
jo
out
fcom
mov
push
jbe
and
jno
mov
or
stos
sub
aad
jle
sub
or
xor
addr16
loope
jns
aas
jns
fldcw
or
mov
pop
and
sbb
pushw
jecxz
orl
or
rcll
or
in
lcall
dec
add
xchg
lds
jb
xor
shlb
mov
pop
insb
cmp
movsl
mov
add
gs
mov
je
pop
rcr
sbb
inc
and
mov
imul
jg
jmp
pop
jle
adc
scas
and
push
icebp
sbb
add
mov
add
mov
sub
and
rclb
add
hlt
pop
xor
outsb
ds
mov
mov
xchg
jns
rcl
dec
pop
lds
sbb
lods
out
xchg
jb
cmp
not
jle
jle
and
or
mov
in
jb
sbb
jmp
cwtl
push
fists
inc
imul
or
jle
push
adc
mov
pop
add
dec
and
and
cmp
adc
cmp
icebp
sub
add
scas
icebp
aas
jle
mov
cwtl
jp
cmpsb
jecxz
das
push
sbb
push
push
in
xlat
scas
mov
stos
sahf
loop
mov
cmp
and
pop
mov
or
mov
fisubrs
hlt
xchg
xchg
cld
fs
cld
inc
xchg
push
xor
jbe
cltd
daa
les
movsbl
sti
fs
insl
or
sbb
jbe
insl
iret
jb
mov
jo
cld
or
ret
mov
and
rol
stos
inc
cltd
sub
cmc
jge
rorl
mov
lods
mov
bound
xchg
mov
scas
jle
sub
mov
addr16
and
call
lods
xlat
and
sti
mov
pusha
pop
sub
es
ss
loopne
add
xor
sti
push
push
aaa
jle
movsb
jne
xchg
sbb
hlt
ret
sbb
push
push
shll
pop
or
cld
test
icebp
stos
pop
cmp
and
pop
jl
lret
adc
cmp
test
mov
out
mov
adc
ficompl
and
jb
lcall
ret
in
loopne
out
shrl
push
fxch
lahf
sub
test
pop
sbb
push
stos
or
jno
cmpl
add
fmuls
adc
add
xor
mov
stc
scas
push
test
sarb
lcall
lret
repnz
adc
mov
loope
or
scas
adc
cld
push
inc
outsb
jbe
fldcw
jmp
dec
in
cmpsl
fwait
adc
sub
dec
mov
in
or
enter
xor
mov
fs
xchg
push
mul
scas
orl
add
test
ds
sub
scas
cs
cmp
ds
popa
jno
pop
hlt
xchg
push
and
imul
subl
cmpsl
jg
xor
add
push
jo
add
loope
jecxz
cmp
pop
jns
pop
xor
sarb
ja
fwait
fwait
or
or
insl
into
mov
mov
mov
push
mov
pusha
jmp
out
cs
leave
dec
xlat
dec
xor
lods
sar
out
mov
stos
cmc
sub
call
add
pop
fxch
mov
pop
repnz
out
repnz
add
cmp
inc
sub
ljmp
sub
mov
or
dec
push
lret
lock
stos
push
push
pushf
hlt
adc
pusha
je
pop
pusha
negl
add
cwtl
aas
xchg
jl
fucomip
fcmovu
mov
dec
popf
icebp
data16
loope
lret
std
jecxz
mov
cmp
stos
and
test
lret
add
sbb
imul
pop
aas
jge
push
push
pusha
ss
fistl
push
xchg
test
and
xchg
pop
or
jmp
xchg
ds
inc
clc
in
pop
cmp
push
jo
jle
inc
xor
popf
and
leave
inc
into
cli
test
lcall
cmpsl
pinsrw
int
inc
inc
ret
or
imul
sbbl
pop
xor
lods
icebp
mov
fadds
cmpsl
and
pusha
movsb
dec
or
and
hlt
sub
rorb
mov
inc
jp
mov
add
and
mov
fcomp
cmpl
pop
push
jae
ss
in
cwtl
movsb
pop
mov
in
sbb
jl
cmpsb
out
sbbl
inc
loop
inc
mov
mov
sahf
and
pop
popf
aaa
add
dec
push
aam
out
cmc
push
and
and
cmp
das
cli
sub
std
int3
or
dec
dec
or
and
ret
mov
icebp
add
sbb
sbb
sbb
xchg
fwait
lock
add
das
mov
dec
gs
cmp
mov
dec
rcr
cmp
jne
mov
pop
jo
out
ds
insb
add
popf
movsl
add
pushl
xor
jl
xorl
add
sbb
mov
repz
sbb
lcall
push
add
jmp
jo
mov
loopne
shll
or
pop
push
fisttps
mov
push
cmp
ds
fdivl
out
addl
into
jg
xor
jne
bound
ds
push
add
cld
cmpsl
and
movsb
mov
inc
push
sub
divl
imul
push
inc
cmp
sbb
dec
fcoml
inc
mov
shlb
jne
cmp
mov
cltd
sbb
inc
inc
dec
int
push
mov
mov
push
jge
jno
push
and
mov
stos
sub
fld1
sub
mov
jae
and
jecxz
push
pop
mov
out
lcall
movsb
mov
dec
sbb
push
mov
fcompl
popf
ret
mov
lret
sbb
jo
data16
cmpsl
popa
pop
cmc
imul
sub
xlat
loop
pop
enter
lods
xor
jno
sbb
mov
bound
fwait
or
jmp
adc
mov
mov
push
pop
dec
pop
xlat
fwait
push
sbb
aaa
push
shrb
cmp
les
or
and
ret
or
jp
xchg
int
cmpsb
push
push
jl
addl
mov
mov
arpl
cmpsl
jno
sbb
adc
mov
pop
call
ret
jae
lahf
shrl
pop
pop
testl
insl
orl
or
repz
nop
xchg
nop
inc
pushw
and
int
jb
mov
adc
das
xor
or
inc
sbb
dec
add
cmp
dec
cmp
inc
ret
push
jl
scas
sarl
inc
outsl
and
aam
sbb
cwtl
sub
scas
pop
lds
in
push
arpl
adc
push
ret
dec
inc
ret
sbb
lcall
inc
push
mov
mov
mov
xchg
fwait
shrb
cmp
inc
mov
out
mov
cmpsl
subl
mov
mov
vpor
inc
mov
stos
test
jne
lahf
mov
cli
cmp
cmp
or
inc
orl
xchg
daa
add
loopne
shrl
pop
sbb
adc
mov
lahf
jno
or
movsb
lret
inc
and
jno
test
pop
in
iret
loope
pop
jge
xlat
nop
pop
ret
jle
outsl
and
lret
fistpl
sahf
icebp
mov
adc
fwait
cwtl
sub
add
mov
es
add
jle
dec
mov
dec
enter
decl
incl
sub
and
jmp
insb
sbb
mov
ljmp
imulb
xchg
xor
mov
out
jle
inc
sbb
loope
ljmp
loopne
inc
or
pop
push
adc
or
lea
mov
lahf
lods
mov
mov
outsb
in
insl
lea
bound
jns
ljmp
mov
push
sub
inc
push
or
push
cmp
test
add
push
sub
mov
add
mov
fstl
sbbb
cld
cmc
xchg
daa
sub
insb
int
cmp
inc
mov
adc
arpl
jns
enter
fldcw
addr16
imul
push
dec
cmp
or
loopne
push
fisubl
jp
cld
push
shll
shrb
inc
out
sbb
fistpl
lcall
ret
mov
outsl
lret
push
lret
push
sub
push
pop
xlat
test
pop
cmp
mov
sti
push
pop
dec
fisttpll
dec
mov
xchg
sti
int3
ret
enter
cli
pop
cld
out
or
cmp
cltd
gs
xchg
fs
insb
lcall
gs
test
mov
jp
adc
daa
jnp
adc
or
nop
aad
das
das
aam
push
repz
mov
add
push
outsb
leave
dec
mov
push
insl
sbb
je
xchg
adc
xchg
loopne
jg
in
mov
ficomps
into
dec
jnp
dec
call
jnp
xor
xor
mov
out
hlt
cmp
xlat
xor
fisubl
dec
jbe
cs
incb
cmc
cmp
sub
sub
imul
scas
sbb
fcmovbe
aaa
inc
xchg
adc
and
imul
pop
push
adc
sbb
cltd
gs
adc
bound
mov
xchg
lcall
dec
mov
push
scas
loopne
fwait
push
les
mov
jecxz
testb
sbb
out
mov
mov
ret
enter
adc
imul
adc
or
jne
mov
rorl
fadd
inc
xorl
pusha
lahf
pop
je
in
aad
in
call
aad
scas
dec
dec
aas
sahf
jne
lea
sub
jmp
or
jmp
or
lods
push
push
sbb
xlat
sub
push
je
call
xor
push
mov
jnp
sbb
mov
clc
cmpsl
int
out
lods
jg
lret
lret
gs
dec
repz
jb
sub
add
repnz
aad
mov
xchg
lods
movsb
sbb
or
inc
enter
sti
dec
lods
lcall
lods
out
imul
and
hlt
mov
mov
push
scas
adc
push
jne
and
loopne
xchg
dec
sbb
sub
and
xor
dec
pop
std
inc
lock
dec
pop
push
inc
nop
hlt
or
loopne
das
in
pop
leave
pop
jecxz
add
pop
xchg
sahf
xchg
sub
fs
sbb
xchg
mov
in
xor
push
scas
cmpl
cmp
scas
sub
adc
dec
loop
and
add
shrl
or
push
pop
push
repnz
call
jl
in
sbb
outsl
xchg
aad
es
mov
cmp
sub
push
xchg
xchg
add
jo
mov
push
fiaddl
idivb
pop
mov
pop
cmp
stos
std
cmp
mov
loop
cmp
jp
lds
stos
xchg
fisubrs
mov
push
cmp
pop
outsl
inc
cmpsl
mov
and
push
xor
push
push
push
pop
or
iret
cs
test
cmp
test
sti
loop
push
std
jle
outsb
div
sbb
iret
jl
adc
fisubrs
mov
xchg
fnstenv
push
mov
xor
or
mov
pusha
icebp
xor
pop
lea
out
sahf
ds
dec
adc
movsb
push
out
scas
loopne
aad
popa
or
pop
ss
sbb
aaa
jge
lcall
cmc
sbb
mov
fs
cmp
sahf
pop
adc
mov
data16
stos
aas
jne
mov
loope
fwait
imul
nop
inc
pop
data16
cmp
dec
aas
lcall
sahf
push
pop
pop
jae
cld
cmp
into
cmpsl
mov
dec
push
push
cmp
jecxz
dec
xor
enter
mov
mov
jns
sub
pop
mov
xor
loop
or
xchg
or
imulb
pop
xor
mov
jp
cli
fwait
cltd
fildll
and
push
adc
std
and
inc
int3
fsubl
fcomps
push
in
mov
cli
xor
inc
sbb
dec
push
aad
repz
and
jb
xchg
jg
lahf
popa
int
movzwl
add
mov
gs
call
mov
je
xchg
decb
imul
sbbl
jb
test
fdiv
mov
fimull
xor
pop
mov
pop
push
xchg
xlat
push
jp
cmpsl
scas
adc
pop
mov
mov
pop
sub
shll
mov
bnd
adc
scas
shlb
push
adc
pop
out
ss
mov
loop
sbbl
xor
dec
sti
cmp
xchg
inc
mov
mov
das
push
out
scas
insb
xlat
andl
pop
push
xchg
mov
dec
shlb
jg
or
cmpl
aaa
outsl
xchg
shll
mov
pop
xchg
out
fdivrl
ja
lahf
push
cmp
jae
out
sbbb
mov
les
xchg
shll
fsubl
ljmp
or
mov
mov
pop
cld
pusha
sbbb
add
inc
jp
inc
and
mov
mov
cmp
push
cmp
popa
shrl
pop
push
lea
mov
mov
push
mov
and
pop
scas
push
fidivl
adc
pop
dec
mov
jbe
xchg
ds
fadds
cmp
cltd
pusha
xlat
jo
push
pop
add
adc
mov
sbb
sub
adc
lret
mov
add
sbb
cmp
in
mov
sbb
push
xor
xchg
dec
cmp
jg
int3
ret
ficomps
ret
stos
xor
insl
mov
call
mov
js
in
xchg
mov
jecxz
mov
pop
mov
divb
pop
scas
sub
sub
mov
ss
in
jae
aad
push
out
adc
xchg
push
jecxz
aad
push
shl
cmp
sarl
adc
pop
movsb
fimuls
pushf
cmp
dec
dec
adc
sbb
sbb
xchg
jecxz
push
shlb
ss
int3
repnz
ret
orb
mov
pop
jmp
leave
lret
mov
sub
mov
push
roll
xchg
popa
mov
add
pop
adc
pop
popf
jno
repnz
or
in
push
lock
out
test
loopne
add
jbe
test
cs
pop
fadds
inc
mov
ret
push
in
jne
adc
shr
pop
push
stos
and
loopne
imul
lret
out
jne
fcomp
mov
mov
lret
lret
dec
scas
fidivs
xchg
add
sub
jns
mov
push
loope
test
mov
repz
cld
cmp
out
adcb
imul
in
mov
mov
pop
sbb
gs
aam
jecxz
imul
dec
mov
sbb
adc
sub
lcall
repz
mov
incl
adc
xchg
shll
popf
mov
inc
arpl
mov
hlt
sub
or
jnp
jb
xor
mov
stc
inc
stc
js
pusha
mov
xchg
shrl
cmp
in
stos
andl
fnstsw
lret
add
mov
ljmp
sub
gs
mov
ret
rcl
movsl
arpl
sub
fbld
jecxz
imul
dec
xchg
and
movl
imul
pop
jp
xor
nop
int
mov
push
pop
pop
dec
data16
and
insl
je
inc
and
mov
or
ja
scas
fisttpll
and
jge
mulb
dec
daa
push
rcr
enter
mov
add
adc
jno
jae
ljmp
add
fiaddl
mov
insl
int
dec
xor
mov
cmp
sbb
push
and
aam
push
cmc
iret
in
fldt
outsb
mov
jnp
push
stc
pusha
fdiv
cmp
add
scas
stc
ljmp
subl
aaa
loopne
jg
stos
ja
testl
test
push
add
pop
adc
ss
push
mov
dec
mov
xchg
imull
or
cmp
xchg
scas
jo
and
aas
aas
js
das
pop
es
mov
and
pop
cs
outsl
mov
fcmovnb
fwait
sbb
mov
bound
mov
pop
xor
ljmp
mov
das
xor
adc
lret
sarb
xchg
popf
dec
or
das
insl
sti
sbb
cld
sub
add
inc
and
xor
adcb
sahf
test
push
hlt
dec
and
lods
dec
shl
push
cmp
cmp
cmpb
sti
lea
or
pop
lods
scas
notl
mov
xor
cmc
clc
xchg
pop
shll
pop
notl
dec
sub
stc
push
in
push
mov
adc
xor
xchg
addr16
cmp
pop
push
jnp
sub
push
and
std
mov
mov
inc
cmp
add
or
fidivrl
ret
cmp
xor
sbb
jl
aaa
dec
insb
dec
pushf
sub
mov
cmpsl
mov
adc
ja
pop
mov
mov
arpl
mov
xor
add
mov
dec
fs
or
loop
cmp
scas
and
xor
shlb
sar
mov
xchg
in
jne
lcall
add
adc
cli
xchg
cmp
xchg
decb
enter
push
movsl
xor
jno
jno
add
sbb
add
mov
ds
cmp
xor
loope
pop
test
int
out
and
pop
mov
or
insl
ljmp
mov
or
jle
push
push
aam
xor
rcll
fs
jg
frstor
lods
dec
testl
jle
loopne
add
and
and
inc
es
mov
push
xchg
js
dec
sti
mov
inc
out
iret
lods
xor
dec
push
mov
int
mov
xor
orl
xchg
xor
out
jp
insl
or
popf
inc
mov
pop
ss
push
in
adc
jge
push
dec
das
sbb
add
inc
pop
cmpsb
mov
aaa
jmp
inc
insl
jae
inc
add
popa
ss
adc
push
add
pop
lahf
add
xor
es
and
fstpt
jne
mov
arpl
mov
cmp
fwait
aaa
push
jno
dec
aad
pop
repnz
lret
ret
rorl
mov
ds
mov
adc
inc
add
push
imul
push
xchg
mov
mov
push
mov
fnstsw
add
orl
js
pop
mov
sti
movsb
cs
imul
push
and
in
gs
into
cmp
test
imul
fstpt
aaa
adc
in
jbe
jle
notb
daa
lods
xchg
ror
mov
int
mov
lea
pop
pushf
mov
or
add
inc
push
ss
stos
cmpsb
jp
xchg
adc
jmp
jne
ss
dec
jo
dec
lret
add
sbb
nop
lahf
clc
ds
push
sti
imul
sbb
jb
dec
cmpsl
mov
pop
sti
rcrb
or
mov
sarl
lahf
push
test
mov
cs
sar
ret
sub
out
lahf
lret
shlb
rcr
push
es
mov
xlat
fs
jns
inc
cld
or
adc
jp
out
int
clc
xchg
push
mov
adc
movsl
sub
fs
inc
rorb
sub
scas
mov
test
shlb
divl
outsl
popw
jecxz
fsts
add
xor
lods
test
shrb
cld
enter
dec
mov
sbb
scas
inc
push
mov
js
out
sbb
mov
sbb
enter
ffreep
pop
ficompl
ljmp
out
icebp
setno
inc
pusha
dec
sbb
out
dec
mov
pop
pusha
shrb
stc
pop
jo
and
sbb
jo
cmp
sbb
jle
lret
mov
fisubs
adc
hlt
roll
dec
jae
mov
mov
std
push
daa
or
xor
lods
and
xor
pop
les
mov
cld
inc
faddl
mov
inc
add
pop
or
inc
xlat
clc
jnp
sbb
sub
ja
insl
movsb
cmpsl
jl
dec
add
popa
xchg
add
lds
cmp
mov
fs
out
in
inc
call
inc
rol
aaa
in
jp
xor
adc
cs
jo
fdivrs
or
in
dec
and
adc
into
mov
xlat
or
popa
in
mov
jns
sbb
iret
fsub
push
stos
or
stos
popa
inc
inc
jg
into
das
ds
in
add
cmc
lods
in
in
or
in
lret
movsb
xlat
mov
inc
test
aad
out
mov
sahf
sub
outsl
xchg
xchg
xchg
sti
fwait
sub
mov
push
lods
ret
and
cmp
lahf
pop
mov
jmp
in
push
leave
sbb
push
loop
dec
arpl
aam
pushf
fs
in
or
shl
mov
loopne
xchg
cmp
mov
pop
add
in
inc
mov
out
ret
xor
and
sbb
rclb
shll
push
xor
loop
aad
into
xor
inc
dec
aad
or
cmc
mov
adc
sti
sub
adc
mov
sbb
test
lods
mov
xor
cwtl
mov
xor
xchg
mov
inc
pop
mov
cmc
or
ds
neg
add
ljmp
mov
mov
pop
scas
adc
xchg
add
adc
popf
movsb
sbb
jmp
inc
rclb
dec
mov
lcall
sub
popf
pop
hlt
sbb
mov
mov
inc
js
js
adc
hlt
insl
mov
xor
insl
sbb
fcmovu
adc
inc
mov
loope
push
outsb
or
imul
jne
addr16
inc
cmpsb
jg
mov
fsubrs
ficoml
push
nop
mov
xchg
pop
adc
pop
mov
cmp
cs
loope
mov
cmpsb
lret
out
outsl
orl
and
imul
fcmovu
push
or
pop
add
mov
adc
xchg
insb
jg
mov
or
in
inc
shll
fcoms
xor
scas
mov
mov
les
and
repnz
mov
cmp
aas
ljmp
dec
adc
cmp
sbb
icebp
add
mov
lods
rclb
notl
lea
push
out
xorl
pop
movsb
frstpm(287
mov
sbb
lret
adc
imul
les
inc
daa
lds
cli
cmp
dec
cmpsl
mov
cmp
dec
bound
xchg
add
mov
mov
dec
pop
test
mov
ret
ja
fiadds
cmp
inc
pop
xchg
and
inc
adc
adc
jnp
and
std
stos
xor
ficompl
int
inc
pop
and
mov
adc
mov
cmp
pop
hlt
imul
rclb
sbb
xor
push
sbb
sbb
jl
cmpsb
pop
push
in
pushf
sbb
movsl
out
push
adc
pop
inc
lea
mov
xor
inc
push
dec
stos
cmp
mov
addl
cmp
hlt
push
cs
dec
in
movsl
adc
das
sub
int3
mov
out
aas
add
xchg
rcl
pop
cmp
ds
dec
insb
daa
inc
xchg
or
jb
mov
lcall
loop
inc
sub
and
or
fwait
bound
sub
jge
test
mov
ds
pusha
rorl
push
cmp
cmp
pop
ds
stc
imul
cld
ficoml
dec
sub
lret
xchg
pop
pusha
jo
test
adc
stc
mov
ds
lods
cmpsb
popf
sarl
jb
mov
lock
das
ret
sbb
inc
cltd
into
jnp
shl
cli
xor
mov
insb
cmpsb
cltd
inc
shl
push
xchg
daa
insl
rolb
jle
and
or
aas
xchg
add
aas
jns
push
mov
rcrb
jnp
dec
mov
add
imul
xor
xor
add
popf
les
push
out
loop
mov
sbb
xor
js
pop
lret
push
leave
mov
xor
sub
cmc
pop
daa
filds
mov
cwtl
dec
imul
inc
fildl
out
jae
sahf
or
xor
push
cli
mov
pop
mov
push
cs
lea
js
aad
mov
cmp
sub
sub
mov
sti
inc
mov
push
leave
incb
sub
lods
xchg
cli
das
ret
aad
inc
adc
mov
ret
imul
xchg
jecxz
addl
inc
or
push
stc
xor
ja
jge
xchg
std
or
outsl
movsl
pop
jge
sbb
sub
movsl
je
test
dec
jne
imul
xor
push
nop
lret
test
push
outsl
pop
inc
sub
push
stos
mov
lret
push
xor
dec
rcrb
test
das
pop
add
mov
je
in
push
aam
std
add
or
push
xchg
inc
addr16
or
out
scas
test
scas
mov
jns
ljmp
dec
inc
in
jmp
sahf
movsb
sbb
aaa
sbb
stos
add
lock
mov
leave
outsb
mov
outsl
or
adc
pop
xchg
icebp
mov
imul
add
daa
in
adc
xor
sub
push
insl
dec
jno
jge
jns
loopne
fistps
test
pop
addr16
push
xor
fisttpl
pop
daa
mov
cli
in
dec
add
pop
jmp
or
movsb
pop
mov
jecxz
push
out
ljmp
xchg
iret
cmp
xchg
mov
repnz
jecxz
movsl
and
push
adc
jae
xor
pop
sbb
ds
add
iret
shl
ljmp
repz
or
sub
or
sbb
sbb
dec
push
rorb
sbb
pop
mov
hlt
roll
movsl
in
jnp
stos
int
into
or
ret
cmc
stos
xchg
xor
loope
data16
data16
insl
shrl
movsl
jno
push
int
cli
adc
cmpsb
push
fwait
jecxz
xlat
subb
fs
sbb
ss
in
adc
mov
movsl
rcrb
aaa
adc
loope,pn
push
stos
fldcw
sbb
mov
add
int
rcr
or
cs
pushf
pop
fldcw
pop
push
aad
mov
sahf
inc
pop
rcll
cld
push
inc
inc
push
jno
mulb
mov
pop
mov
jge
inc
int3
and
jecxz
or
sbb
test
push
jno
lahf
movsb
lods
jecxz
loopne
mov
jle
ret
movsl
pushl
xchg
pop
push
pop
dec
arpl
mov
and
sbb
sub
pushf
push
and
mov
pushf
fbstp
mov
fildll
sbb
dec
xchg
lret
imul
out
mov
mov
loopne
imul
das
outsl
das
inc
sub
push
enter
xor
fst
int3
int3
jno
push
ss
xchg
mul
notb
add
pop
std
lret
in
cmpsl
test
sarl
aad
leave
pop
cltd
test
mov
lret
rorb
stos
push
leave
rclb
adc
adc
clc
and
sub
jne
hlt
add
add
xchg
mov
cmpsb
adc
mov
cli
addr16
push
mov
jns
out
lock
pop
push
or
mov
push
jns
mov
cmp
mov
jecxz
call
push
or
lcall
or
adc
ficompl
push
xor
test
mov
dec
int
xor
call
mov
xchg
push
jnp
ret
mov
mov
and
sbb
pop
mov
cli
xor
in
lock
lcall
fldenv
fs
xor
mull
rclb
jae
push
inc
inc
hlt
inc
add
jle
fldl
loopnew
jg
idivb
jg
jge
or
push
in
sub
call
mov
sahf
add
sar
leave
in
sahf
xchg
lods
into
insb
jp
rclb
fdivs
fs
fdiv
adc
inc
enter
pop
mov
mov
repnz
add
push
cwtd
xchg
jb
or
fists
push
into
mov
push
mov
cmp
in
fs
mov
inc
mov
fsubs
inc
clc
ss
stos
lcall
ret
push
fmul
aad
in
sbb
or
mov
popf
ret
mov
push
out
pusha
scas
mov
mov
into
sub
adc
pusha
push
cmpsb
roll
clc
xor
adc
push
inc
sub
mov
jns
dec
sub
adc
popf
adc
add
test
mov
dec
int
nop
pop
loopne
call
or
sub
ds
cmp
mov
add
mov
mov
clc
adc
lcall
inc
ret
push
adc
pusha
mov
push
jne
mov
ja
addl
jecxz
xchg
jnp
insl
int
mov
lret
es
xchg
ret
dec
push
ds
pop
repz
pop
xor
sub
xchg
test
stc
mov
jb
outsl
mov
sbb
sbb
mov
xchg
mov
test
lahf
and
pop
inc
xor
rclb
xchg
rorb
subb
mov
or
pop
scas
aad
fisubs
adc
aad
movsb
jno
sub
xchg
mov
arpl
int3
pop
adc
movsl
lds
add
mov
adc
jmp
sub
mov
mov
rclb
cltd
orb
loop
mov
aad
adcb
arpl
pop
push
sbb
xchg
sbbb
mov
decl
popa
pushw
lcall
testl
pusha
sbb
mov
or
xor
loopne
lds
pop
lods
and
dec
adc
adcb
pop
je
hlt
cmpsl
mov
sub
push
sbb
sahf
leave
les
rcr
rol
mov
das
mov
cmpsb
cli
cmp
ljmp
and
repnz
rcr
dec
loop
cmp
divb
or
out
pop
dec
lahf
jg
fwait
inc
jne
mov
xchg
bound
mov
and
gs
hlt
std
xor
or
das
gs
insb
test
sub
aam
lret
ret
adc
cmc
shlb
xchg
adc
sub
xor
ljmp
pop
lods
insb
aas
not
push
push
push
mov
jp
cmpsb
std
or
daa
xor
int3
in
fbld
jo
dec
mov
xchg
jns
adc
mov
jnp
mov
pop
rcr
mov
aas
jmp
or
test
in
es
cmp
popa
jb
bound
push
andps
fdivrl
in
sub
orl
add
cmp
xchg
xchg
push
cmp
fs
rcrl
push
dec
lret
jg
mov
adc
aad
xchg
dec
vcvtps2pd
xor
cmp
jl
subb
cmp
jg
daa
shll
sub
sbbl
add
xor
inc
out
lret
ja
int3
clc
xor
lret
pop
call
cwtl
mov
push
sbb
sbbl
pop
ss
jne
mov
add
or
sbb
outsb
fs
xchg
jnp
mov
rolb
xchg
fwait
push
out
gs
xchg
xchg
outsb
xor
insl
movsb
imul
cmp
or
and
or
add
push
test
mov
pop
or
ljmp
pop
ljmp
cmp
data16
loopne
andb
nop
mov
pop
adc
hlt
pop
add
fwait
lods
and
push
push
or
mov
idivl
test
and
add
imul
into
cmp
jle
mov
aaa
out
fistpll
dec
popa
mov
inc
add
or
add
mov
les
add
jp
hlt
push
sti
mov
lahf
mov
cmpb
gs
jne
mov
jp
cmc
stc
inc
dec
sbb
sti
mov
push
das
nop
xor
in
push
mov
std
jmp
jmp
outsb
and
out
add
xchg
or
int
dec
mov
mov
inc
fcomps
pop
scas
mov
cmc
jl
mov
push
add
ret
dec
xlat
sub
movsl
jbe
js
pop
jg
testb
fcomip
movsb
dec
push
xchg
rcrb
dec
das
sbb
nop
jne
push
incb
adc
fisubl
scas
sbb
fdivs
push
push
xor
cmp
rcll
sbb
or
mov
std
ds
xchg
mov
subl
adc
stos
ja
adc
stc
and
push
jnp
mov
push
mov
cltd
popa
out
sbb
inc
xchg
and
inc
cmp
rcrb
in
es
push
pop
add
scas
and
and
adc
mov
adc
fpatan
pop
sbb
in
sbb
pop
sbb
call
jae
lods
xchg
leave
insl
pop
push
add
lcall
pop
mov
inc
adcl
popa
jo
ds
rcl
inc
mov
push
mov
cmp
jp
mov
lcall
imul
shll
fwait
arpl
scas
xchg
lds
mov
sbb
aad
inc
imul
mov
mov
js
outsl
dec
lcall
rcll
in
cmp
outsl
dec
cmpsb
and
mov
repz
popa
sti
mov
jns
and
lahf
imulb
adc
xor
jnp
push
leave
sbb
mov
cmpsb
inc
jg
add
sbbb
inc
mov
xchg
jp
sbb
lret
lret
loope
addr16
mov
repnz
out
lret
mov
shll
push
adc
inc
cmp
sub
out
inc
sbb
dec
cmp
jo
loop
iret
sbb
inc
loop
sub
je
iret
sub
test
std
icebp
in
stc
pop
jo
daa
mov
inc
mov
xlat
pop
fcom
jl
in
fs
cltd
mov
mov
add
jae
fpatan
push
bound
inc
subb
mov
popf
aam
dec
out
outsb
pop
mov
mov
xor
mov
cmp
inc
jno
pop
cmp
mov
sbb
cmp
xchg
sarl
test
dec
cmp
dec
and
repz
cmp
sub
mov
xor
jo
and
int
mov
or
xor
push
jae
mov
popa
sub
mov
movsl
jae
jb
bound
popa
loop
xorb
push
mov
pop
xchg
jae
subl
mov
add
cmp
ss
adc
out
pop
shlb
stc
stos
mov
sbb
or
in
mov
hlt
cmp
push
cmp
xchg
ja
xlat
aad
jp
pop
push
cwtl
scas
stc
add
test
fisubs
or
mov
cld
mov
pop
fimull
fs
stos
jns
loopne
cmp
sbb
or
cmp
mov
ds
mov
cmp
outsb
in
mov
rcll
add
sub
bound
sub
sar
shll
mov
js
inc
clc
add
cltd
ret
iret
inc
cwtl
in
lahf
outsb
scas
mov
xchg
inc
repz
sbb
pushf
push
dec
mov
lea
xchg
jbe
jae
cmp
jo
mov
add
fisttpll
mov
pusha
pop
sti
loop
fistl
ret
mov
lcall
in
sub
xor
add
add
mov
loop
xor
cwtl
out
mov
or
push
fs
sub
push
jp
mov
decb
call
or
dec
xor
scas
xor
ret
adc
int
mov
lock
fbstp
adc
cltd
and
rcl
pop
xor
outsb
ret
or
sub
lods
in
aad
in
test
lret
fistl
adc
xor
push
adc
push
mov
ljmp
test
mov
jnp
pop
mov
bound
and
pop
test
jmpw
mov
test
shlb
jo
sbb
mov
jmp
leave
fucom
jmp
call
lods
cmp
and
mov
and
push
jcxz
sbb
jl
fidivl
imul
cmp
lock
adc
mov
clc
shlb
out
sbb
ds
shrb
inc
xchg
add
dec
xchg
fnstenv
jmp
in
mov
cld
jno
add
orl
ss
aaa
icebp
add
mov
sbb
ret
test
inc
lahf
test
xchg
test
loopne
sub
popf
sub
rcrl
jle
call
or
hlt
xor
popf
lods
cmp
nop
adc
lret
xor
test
cld
fwait
test
mov
mov
addr16
push
xor
or
ret
pop
popf
std
ret
sbb
lods
ja
xchg
jae
dec
jp
rclb
rcll
les
cmc
pop
loope
dec
xchg
mov
dec
jns
or
push
ss
rcll
lock
push
pop
mov
in
xchg
sub
push
in
and
das
mov
notb
mov
mov
in
sub
ret
insb
out
gs
mov
lcall
rcll
sub
fisubrl
cld
mov
imul
lods
or
in
imulb
jo
jp
pushl
cltd
hlt
jne
dec
push
ljmp
jecxz
xor
js
and
or
mov
xchg
stos
jne
cld
ficomps
repnz
clc
lods
pop
cmc
and
sub
fstpt
push
pop
int
inc
jne
xchg
int
push
cmp
pop
lods
or
pop
jecxz
cld
dec
lods
add
loopne
sbbl
push
mov
shl
orb
mov
clc
daa
insb
shrb
es
lret
pop
test
and
in
mov
pop
add
int
mov
and
outsl
stos
inc
das
adc
ljmp
aaa
cmp
lods
dec
mov
pop
shlb
push
lahf
push
cmp
adc
push
inc
mov
sub
repnz
push
outsl
push
cmc
or
les
mov
jmp
fsubrl
mov
sarb
inc
xor
ror
and
xor
mov
add
mov
mov
aam
andb
sub
sahf
fs
in
mov
mov
ss
mov
ss
mov
push
or
pop
std
push
into
pop
fadd
mov
sub
dec
int
jl
sbb
cmp
pushl
repz
leave
cmp
ja
add
xchg
adcl
in
cli
loopne
insb
adc
hlt
rclb
fisttps
add
test
mov
clc
shrb
pop
cltd
jmp
loopne
pop
sub
mov
inc
test
adcl
pop
out
xchg
xor
inc
test
push
jne
jae
inc
push
js
insl
sbb
daa
xor
add
scas
dec
jne
inc
sub
adc
add
gs
cmc
xchg
sti
push
lret
shlb
xor
sub
imul
add
mov
fsts
jo
adc
xor
imul
shrb
in
mov
sub
data16
in
push
mov
mov
sbb
adc
cli
shll
fs
cs
push
fmuls
mov
xchg
imulb
shll
dec
mov
inc
sub
mov
lods
xlat
dec
push
push
pop
hlt
jb
lods
mov
jo
je
sti
sub
cmp
out
push
pop
and
jecxz
ss
sub
sub
xchg
test
pushf
adc
push
mov
testl
sbb
sub
add
repnz
mov
mov
sbb
addr16
cmp
loope
xchg
sub
mov
pop
jno
add
add
pop
push
mov
push
dec
sub
aas
loopne
mov
or
call
xchg
or
cmpsb
xchg
lret
lock
fsubrl
pop
or
add
fisttpll
insl
adc
cwtl
mov
inc
mov
jns
sbb
dec
jo
dec
cmp
push
mov
push
icebp
add
repnz
push
stc
imull
shlb
or
sub
mov
fstps
jp
into
sub
pop
gs
nop
jle
es
xchg
pop
inc
jle
lret
out
dec
addl
cmp
addr16
call
ljmp
add
cmp
dec
sub
scas
and
flds
push
fwait
iret
sbb
dec
mov
jecxz
xchg
fs
movsl
xor
and
dec
into
shrb
pop
xchg
mov
add
mov
push
mov
dec
hlt
cltd
jmp
push
daa
and
in
lea
push
js
push
jne
dec
ss
push
add
cli
mov
pop
fsubr
mov
push
cmp
mov
adc
xchg
adc
int3
jg
ret
ja
cmc
cmp
pop
xchg
or
jp
std
mov
and
cmc
pop
lock
cltd
pop
pop
test
push
mov
xchg
fdivrs
dec
popl
testl
mov
js
jne
mov
xchg
das
pop
jle
and
movsb
jns
in
mov
popa
bound
push
sbb
jbe
inc
fcmovnb
and
mov
dec
out
xchg
cld
xor
sub
js
je
cmp
pop
stos
mov
aad
push
data16
jg
push
sub
mov
dec
stos
dec
push
lock
or
xchg
pushl
jbe
shll
and
rol
push
xchg
push
cmpsl
scas
scas
stc
jae
inc
icebp
ja
fs
jecxz
iret
jo
aam
pop
sbb
sub
mov
mov
adc
addr16
in
add
pop
js
scas
dec
xor
sbb
mov
out
cmc
xlat
into
sti
insb
add
inc
add
push
aas
sti
enter
pop
jno
mov
add
dec
xor
sub
test
xchg
xchg
adcl
lock
lods
in
sbb
inc
and
sbb
cmp
dec
out
hlt
fbld
mov
aad
dec
dec
and
inc
fstpl
jmp
xchg
mov
fisubs
das
lods
sub
xchg
and
add
rolb
mov
inc
movsb
in
and
add
andb
mov
dec
sbb
mov
adc
push
jae
fnstsw
cmp
outsb
je
daa
push
mov
andl
jge
xchg
imul
lock
repnz
pop
test
jno
lret
mov
mov
sahf
mov
rcll
stc
popf
test
mov
mov
jb
dec
cmp
push
xchg
push
sbb
out
mov
or
fwait
mov
lds
sti
sahf
push
push
dec
sub
xchg
in
test
mov
shll
pop
mov
jnp
fstpt
cmpsl
sbb
adc
dec
mov
cmp
rcrb
insb
das
loopne
adc
jmpw
lret
iret
pop
iret
push
sub
insb
inc
dec
test
ljmp
jno
inc
data16
sbb
lock
sub
mov
jecxz
and
leave
adc
adc
add
je
loop
inc
mov
shlb
xchg
out
repz
in
mov
inc
sarb
add
xchg
add
rcll
dec
das
xchg
stos
cmp
aaa
mov
cld
and
movsl
ficomps
jmp
out
mov
insb
imul
fidivrl
jg
push
xchg
test
jne
pop
sub
mov
mulb
shl
adc
dec
filds
lret
in
mov
dec
lahf
add
aam
shrl
pushf
sbb
mov
lea
fldt
test
mov
sbb
or
mov
loopne
cmp
roll
sbb
adc
scas
sahf
movsl
inc
mov
adc
lret
pusha
mov
dec
cmp
fs
lods
cs
out
fldt
or
push
sbb
das
and
xor
cli
push
int
xchg
sahf
in
cs
pop
adc
inc
icebp
lret
or
push
mov
xor
fadds
jl
cmp
push
xor
xchg
mov
pop
rcl
imul
aam
push
xchg
and
lret
rclb
shrb
sub
pop
fisubl
xor
inc
or
shrb
push
not
js
ljmp
push
in
mov
test
ljmp
inc
js
fwait
repz
iret
ja
push
xchg
ljmp
push
adc
jle
sti
stc
sub
mov
lock
sub
jle
testb
cmp
jl
in
sub
xor
mov
mov
aas
hlt
cltd
push
sub
inc
dec
mov
cmp
mov
push
jl
into
ret
ret
push
mov
xchg
or
push
jb
sarl
mov
xchg
mov
add
push
fimull
mov
mov
aaa
cmpsb
adc
iret
movsl
sub
or
ss
and
popf
aas
inc
decb
xor
lahf
xor
jmp
dec
mov
push
cwtl
jb
add
push
lret
inc
fldt
std
jge
cmp
into
and
clc
sub
rcrb
cwtl
ja
orb
xlat
and
xchg
xlat
cvtps2pd
jae
and
dec
cmp
daa
and
cmp
push
adc
push
and
in
mov
imulb
inc
aas
shl
orl
sbb
pusha
sbb
sub
repz
cmp
mov
cwtl
aas
push
pop
imul
xor
add
or
sub
hlt
xchg
cltd
andb
mov
fs
popf
pop
imul
jmp
stos
jnp
call
push
add
xchg
dec
mov
stos
pop
clc
roll
je
int
cmc
push
rcll
jne
nop
push
adc
test
push
mov
mov
fwait
shll
and
and
cltd
and
icebp
pop
ds
daa
dec
scas
stos
mov
push
jnp
mov
out
rorb
push
adc
inc
lahf
xor
mov
inc
jbe
insl
enter
sbb
leave
jae
test
ret
pop
incl
imul
pop
imul
cmp
pop
adc
xchg
xchg
das
mov
add
daa
dec
bound
xchg
inc
jmp
sbb
out
movsb
testb
addr16
bound
sbb
mov
inc
js
pop
std
and
pop
aad
mov
dec
lahf
inc
cmp
xor
xor
loop
rcrb
jae
std
adc
inc
jp
nop
shlb
clc
cmpsl
add
xchg
pop
es
not
inc
jno
push
add
loopne
mov
sub
test
push
push
jge
cwtl
lods
sbb
jmp
aam
jnp
out
mov
jnp
cmp
or
lret
stos
mov
add
js
jns
cmp
fdivrl
cs
insl
dec
addr16
enter
jne
lods
xchg
xor
xchg
loop
stos
sahf
dec
pop
xor
inc
es
sub
inc
fs
inc
test
add
push
int
sti
movsb
mov
hlt
pop
dec
pusha
jp
inc
cmc
add
pop
sbb
clc
xchg
jge
and
in
mov
mov
push
push
stc
adc
test
sbb
mov
fcmovnu
xchg
mov
aad
inc
and
js
push
mov
adc
xor
jmp
mov
leave
mov
push
jp
push
add
or
pop
and
push
cwtl
popl
xor
iret
test
jne
lock
jno
jnp
jno
cmc
xlat
add
inc
or
push
jbe
fnstenv
test
movsl
cmp
lea
rcrb
jp
mov
adc
mov
mov
call
jg
rcr
aas
fisubrl
mov
cmpsl
std
movsl
ret
mov
fsubrs
jnp
adc
sahf
push
popa
inc
mov
scas
sbb
xor
mov
repnz
shr
shlb
inc
stos
sub
jae
adc
fsubrl
addb
adc
movb
sbb
push
mov
mov
push
pop
ss
imul
insb
inc
iret
sti
fstps
inc
add
fmuls
dec
add
jnp
test
xchg
fisubrl
pop
and
sbb
stc
xchg
adc
mov
cmp
sbb
loop
jo
sbb
pop
lods
push
jne
and
jmp
jae
inc
cld
mov
lcall
push
adc
push
and
add
lahf
clc
or
jge
test
push
xor
mov
out
or
xchg
push
cs
ret
adc
fcompl
ffree
adc
jge
xchg
mov
mov
imul
and
dec
fs
bound
lds
or
inc
adc
xchg
sub
push
jle
mov
jno
xlat
pop
mov
ja
push
movl
test
xchg
cwtl
sbb
inc
sti
push
add
loopne
push
pop
jno
fcos
inc
jnp
stc
push
mov
sbb
sub
xchg
loope
or
int3
jb
ret
xchg
xor
jnp
mov
rolb
cmp
dec
sbbb
push
cltd
in
dec
sbb
nop
fbstp
cmp
movd
lods
lret
sbb
add
mov
mov
push
pop
add
jle
push
cs
pop
shl
jmp
mov
jl
arpl
xor
fstpl
fnstcw
sub
out
jne
iret
enter
inc
jb
or
data16
fdivrl
add
push
pusha
pop
jg
and
sub
cmp
xor
cmp
xchg
and
mov
mov
mov
int
jle
push
out
in
ljmp
xchg
jbe
xor
fdivs
stc
inc
pop
sbb
mov
jmp
and
ljmp
in
cld
add
imul
mov
mov
lock
lods
bound
or
mov
mov
jns
inc
adc
dec
repz
jne
jp
fdiv
sub
pop
mov
mov
popa
std
inc
bound
pop
xor
xor
pushf
pushf
adc
sbb
or
les
push
sarl
pop
movsb
enter
loop
mov
sub
add
mov
movsl
ja
aam
out
xchg
sbb
xchg
jge
pusha
nop
dec
cmpsb
and
das
xchg
push
pop
rcr
cmp
jbe
xchg
cmpsl
std
push
negb
fsubs
cld
pop
adc
hlt
nop
xor
pop
incl
in
mov
mov
test
xor
inc
stc
xchg
pushf
or
movsb
pop
cli
or
inc
movsl
prefetch
or
mov
insl
jge
dec
or
test
es
xchg
dec
jp
xlat
sub
ja
les
ds
out
pop
std
cmp
xchg
mov
fs
enter
mov
outsl
sbb
xor
jecxz
fstl
das
iret
add
inc
and
dec
aas
cmpsl
inc
add
bndldx
gs
cmp
imul
daa
sahf
loop
xor
movsb
ret
aaa
pop
and
cmp
loope
mov
xchg
pop
pop
sbb
jecxz
cmpsb
xchg
pop
mov
mov
notb
inc
mov
inc
mov
inc
pop
sub
lret
xorl
add
js
cmp
or
push
push
inc
cmp
in
aad
loop
cwtl
addps
mov
jecxz
shll
and
xchg
mov
sub
adc
cmc
push
stos
push
adc
push
xor
clc
pusha
in
xchg
loop
fwait
aam
mov
and
rcr
or
adc
popa
xchg
int3
xor
sub
test
mov
cmpsb
pop
iret
pop
pop
dec
jnp
sti
dec
pop
xchg
pop
imul
sub
outsl
pusha
insb
mov
les
and
mov
out
hlt
in
bound
jns
out
add
xlat
xor
mov
mov
xchg
mov
xlat
jno
into
mov
xchg
je
loopne
push
lahf
inc
daa
sub
cld
mov
inc
push
mov
sub
adc
mov
push
fists
pop
mov
nop
cmp
mov
out
insl
push
cltd
jo
adc
pop
insl
rcll
xchg
inc
pop
imul
rcl
mov
jne
sub
outsb
shrl
mov
mov
xchg
mulb
add
or
sbb
test
cmp
jmp
lcall
or
and
xorb
leave
dec
xor
cwtl
and
mov
fsubs
lahf
xor
add
in
and
sub
mov
jp
cltd
fisttpll
in
out
inc
pusha
inc
sub
jae
push
popl
addr16
test
xor
jo
loop
es
pop
push
js
dec
inc
or
scas
repz
xor
fcomi
sti
shlb
faddl
iret
xchg
xor
imul
fidivrl
sbb
pop
cmc
leave
cmpsb
jmp
mov
rep
repz
mov
in
add
scas
fildl
sub
adc
xchg
out
jge
popf
push
pop
cwtl
push
pop
jecxz
cmp
into
icebp
imul
in
imul
jecxz
js
pop
adc
push
jne
inc
aam
sar
pop
dec
push
xchg
pusha
jle
dec
negl
lahf
and
inc
iret
adc
dec
push
cmp
pop
aas
add
ret
cmp
cltd
pop
pusha
jb
pop
and
daa
cmp
add
popf
pushf
test
adc
xchg
lods
dec
cmp
mov
fimull
ret
mov
xor
out
jae
add
and
mov
pop
in
and
testb
ss
xor
lods
cmp
mov
jno
rcl
jbe
xchg
iret
adc
inc
outsl
pop
sbb
cld
add
imul
lods
movsl
cmc
cmpsl
int3
rol
pop
inc
pop
add
lds
cwtl
mov
pop
lods
ret
fistpl
inc
xchg
nop
mov
push
inc
mov
or
xor
js
mov
ret
add
sub
pop
jl
mov
adc
dec
daa
jle
cmpsb
cmp
adc
pop
cmpl
pop
arpl
call
shll
mov
rcll
jl
mov
mov
pop
sbb
xchg
mov
aad
push
pmaddwd
scas
and
jp
xor
pop
fldenv
mulb
lods
xchg
test
jnp
jb
ss
push
cltd
aad
jo
fdivs
xor
push
stos
bswap
ljmp
jecxz
cwtl
enter
dec
ljmp
imul
push
popa
xor
loope
mov
xchg
add
mov
rcll
or
mov
cld
stc
dec
iret
cmp
out
getsec
mov
test
js
push
sub
dec
xchg
call
ljmp
adc
adc
int3
mov
xchg
imul
cmp
push
sbbb
inc
inc
xor
pusha
lahf
loop
scas
dec
push
xchg
ja
sub
mov
inc
in
push
or
mov
pop
pop
dec
fstpl
fcompl
cmp
pop
in
add
push
lret
cmpsl
mov
cmpsl
dec
mov
outsb
icebp
adc
cld
dec
lds
clc
rcrl
cmc
cmpsl
clc
adc
inc
fwait
add
xor
pop
fildl
cmp
xchg
nop
icebp
mov
mov
xor
subl
leave
mov
push
repnz
push
push
out
pop
pop
mov
add
cmp
loope
gs
ret
cmp
jno
pop
xchg
mov
in
adc
insl
mov
xchg
sub
imul
fs
cmc
mov
pop
iret
pop
or
inc
shlb
ds
cltd
fsubr
stos
mov
dec
pop
sbb
fcomi
aaa
sub
xchg
dec
repz
popf
add
mov
jb
out
sbb
mov
lds
into
adc
adc
lret
shlb
xchg
push
add
xor
jae
adc
xchg
mov
push
add
mov
daa
imul
mov
mov
fbstp
sub
bound
mov
imul
js
aam
adc
cmp
sbb
dec
xlat
sbb
adc
mov
jae
mov
and
loope,pn
popf
fldcw
sbb
dec
mov
add
xor
cmp
add
sahf
mov
insl
fmul
insb
dec
lahf
fstpl
fwait
pop
inc
inc
sub
je
movsl
addr16
out
xor
jnp
and
cmpsb
inc
dec
mov
jmp
xor
iret
inc
scas
mov
enter
add
jge
cld
aaa
mov
repz
and
sub
outsb
xchg
dec
orl
pushf
adc
sub
jnp
xchg
icebp
jmp
iret
mov
popf
dec
push
xor
and
addr16
xor
js
add
cmp
mov
imul
negl
cmc
inc
xchg
jns
mov
push
push
orl
push
mov
push
jnp
js
stos
lea
push
loop
repz
mov
adc
mov
in
lcall
sbb
jle
dec
mov
sub
xchg
mov
inc
push
imul
mov
and
adc
mov
inc
int
lea
sub
ret
sbb
push
mov
mov
enter
in
insl
dec
int3
and
push
mov
jno
mov
in
dec
cltd
pusha
cld
outsl
or
pop
sar
jg
das
fcoml
cmpsl
adcl
shlb
into
xor
ret
xlat
jb
jp
hlt
leave
loope
ljmp
jae
push
std
fwait
mov
xor
in
shl
mov
jo
dec
sbb
fildll
jne
or
mov
pushf
orb
loope
fisttpll
in
movsl
outsb
add
es
clc
sarl
sub
in
lock
stos
imul
adc
pop
stc
inc
add
mov
dec
dec
fmulp
or
xor
xor
and
xor
jmp
shr
adc
xlat
push
push
mov
imul
push
mov
out
lds
imul
stos
mov
sbb
mov
sbb
inc
add
insl
push
and
scas
rcll
aad
xor
arpl
fcomps
call
shrb
call
sub
adc
xchg
xchg
nop
int3
jae
je
mov
in
scas
std
movsb
lret
outsb
addr16
mov
mov
adc
out
lock
jno
ljmp
add
movsl
or
cld
mov
jno
or
push
mov
ja
pusha
push
mov
addb
lret
push
mov
inc
scas
push
mov
jmp
repz
sub
adc
lods
aas
push
stos
xor
fsubr
scas
adc
cmpb
insl
xor
js
int3
jle
test
js
clc
jne
cmp
fwait
je
inc
std
sahf
mov
xchg
stos
adc
inc
mov
fistpll
outsb
sbb
push
xor
jecxz
add
sbb
mov
subl
lods
pop
cmpsb
mov
es
mov
mov
or
sbbb
cmpsl
dec
ds
outsb
or
stc
test
cmp
fxch
nop
and
add
add
pop
or
sub
les
fstl
push
or
mov
push
inc
pop
inc
cmpsb
in
sub
bound
pushf
cwtl
push
orl
cs
dec
mov
jmp
mov
xor
bound
dec
jg
pop
fcmovnu
add
out
int
jle
mov
shlb
mov
mov
loopne
dec
jb
movsb
or
mov
jne
vunpcklpd
aam
int
mov
addr16
and
pop
xor
aaa
mov
mov
sub
enter
push
cmp
push
lret
pop
and
cmp
mov
mov
enter
xor
push
gs
les
dec
jne
dec
enter
in
clc
mov
data16
mov
test
inc
push
sbb
pop
add
test
jnp
add
or
inc
cwtl
pop
out
shll
in
movsb
xchg
bound
in
mov
adc
push
dec
fmul
and
mov
bound
pop
xchg
es
addb
mov
ret
add
hlt
cmp
add
mov
push
ret
sbb
sbb
push
and
jno
cmp
popl
xchg
inc
mov
add
cmp
rcrl
rcr
mov
add
loopne
adc
mov
xchg
add
push
in
inc
adc
dec
mov
adc
cmp
xchg
movsb
jnp
call
inc
cld
pop
imul
movsb
repnz
stos
shll
add
adc
scas
aaa
imul
jne
push
cld
dec
in
xchg
mov
cmp
mov
push
adc
add
dec
dec
rep
pushf
rep
int
int
lock
loopne
pop
fnstsw
in
repz
push
fisttpl
xchg
sub
dec
xor
push
out
push
gs
outsl
gs
mov
jns
xor
inc
cli
daa
jbe
xchg
add
das
mov
cltd
stos
add
sbb
jb
pop
stos
mov
sbb
mov
fcoms
fs
sub
daa
gs
xor
inc
popa
or
cltd
push
dec
jnp
js
std
add
pop
jg
xor
loope
cli
cwtl
xor
sbb
dec
lcall
jge
adc
dec
aam
scas
addb
test
mov
adc
push
pop
mov
mov
pusha
sbb
xlat
jae
push
adcl
sbb
xchg
pop
loop
cmpsl
in
int
sbb
pop
mov
jne
mov
jb
sbb
test
push
mov
add
or
test
add
dec
dec
xlat
mov
pop
cmpsb
sahf
mov
cs
mov
push
mov
xorl
lods
sti
push
adc
cwtl
in
call
inc
push
jns
lcall
xor
mov
repnz
int
pop
int
cli
or
repz
outsl
push
inc
xchg
stc
sbb
test
imul
mov
rorb
movsb
add
jl
enter
mov
or
inc
shrb
leave
pop
adc
stos
inc
sub
pop
inc
stos
std
in
adc
fsubs
es
and
cmpsl
fsubl
sbbb
pusha
out
scas
and
into
pusha
sbb
fcmovnb
xor
sbb
and
sbb
sbb
jae
sarl
addr16
xchg
pushf
sbb
aaa
lret
cli
movsb
xchg
jg
mov
das
loopne
mov
jg
dec
inc
shll
and
jecxz
push
push
or
inc
jl
orb
push
fadds
sbb
ljmp
push
iret
inc
imul
insl
dec
xor
sbb
pop
outsb
sbb
push
push
adc
push
out
or
push
jge
or
push
cs
mov
notl
icebp
sbb
das
xchg
dec
loop
inc
xchg
push
dec
and
pop
and
xor
inc
cmpsl
mov
push
push
cmpsb
xchg
sti
aad
mov
loopne
inc
or
clc
xchg
push
lcall
xchg
sbb
cmp
inc
push
cs
fsts
add
xor
cmovns
jp
cli
mov
pushf
pop
data16
jbe,pn
add
dec
inc
jp
js
pop
arpl
jle
movsb
in
icebp
jns
push
movsb
call
rclb
dec
cmp
cld
dec
pop
push
mov
testb
cld
rcl
sub
jle
jae
outsb
lock
pop
xor
xor
add
dec
adc
and
dec
mov
dec
or
fwait
ss
pop
xchg
or
cmpsl
mov
pop
dec
inc
js
ret
add
int
into
mov
jl
in
out
cmp
mov
mov
mov
arpl
cmp
aaa
hlt
enter
lret
and
jge
mov
xchg
jmp
mov
and
jg
fistps
mov
cs
xor
mov
lods
mov
mov
xor
scas
nop
jmp
divb
adc
gs
add
std
and
lret
popf
xor
mov
sbb
popl
movsw
pusha
adc
stos
cmp
inc
sahf
or
jne
stos
fs
stc
xchg
and
andb
adc
xor
outsl
aas
jno
rclb
xchg
enter
dec
mov
out
test
outsb
adc
out
jno
xchg
xor
repz
adc
sbb
rcll
mov
fbld
cmp
mov
sbb
scas
stos
xchg
mov
push
jbe
int3
daa
dec
mov
or
sub
add
mov
negl
dec
xchg
out
movsl
sub
cmp
and
outsl
adc
mov
scas
xchg
or
stc
cltd
and
clc
sub
lret
ljmp
push
arpl
push
xchg
pop
loopne
mov
iret
scas
lods
push
fwait
jb
push
mov
xchg
bnd
hlt
jb
aaa
pop
jp
and
dec
movsb
movsl
pop
jno
xor
stc
bound
arpl
add
js
or
call
addb
lret
shl
jae
jb
lahf
cmp
cmp
lods
rcll
mov
xchg
mov
mov
fsts
mov
mov
or
test
jae
int
sub
and
popf
xorl
sti
xor
ds
mov
out
push
dec
cli
xlat
test
clc
mov
add
jl
add
nop
fs
testb
in
and
aam
sbb
sub
cmp
lahf
in
jbe
iret
insb
rcrb
paddb
out
mov
popa
movsl
arpl
jo
add
sub
push
test
data16
xchg
or
enter
pop
insl
roll
out
rorl
pop
test
stc
les
adc
pushf
jl
lahf
jecxz,pt
push
jmp
fdivrl
clc
sti
mov
push
lock
in
test
adcl
stos
cwtl
and
lahf
jmp
das
out
popa
adc
pop
mov
pushf
and
mov
adc
pop
and
fwait
jae
repnz
popf
adc
jb
sub
insb
je
cmp
inc
insb
outsl
inc
and
hlt
mov
jnp
pop
jbe
dec
into
sub
clc
adc
and
or
dec
inc
cmpsb
mov
fsubs
cld
xchg
jne
mov
outsl
push
ret
jg
push
adc
outsb
or
push
xor
xchg
lea
and
roll
testl
xchg
loopne
imul
enter
pop
xchg
mov
scas
aaa
cwtl
jle
and
stos
sbb
adc
xor
aam
inc
push
mov
iret
jp
lret
add
in
clc
lcall
mov
in
dec
dec
add
mov
stos
cli
ja
outsl
daa
jge
lret
pop
sub
jbe
pop
add
scas
adc
xor
push
and
add
fnstcw
jg
loopne
adc
mov
lock
dec
sbb
or
jns
stos
loop
arpl
cmpsb
lods
lret
or
int3
mov
sub
rorl
pop
cmp
hlt
or
jne
xchg
gs
iret
mov
or
or
shlb
xor
inc
mov
icebp
add
pop
addr16
in
xor
xchg
and
sbbb
daa
or
pop
jno
inc
mov
in
insl
aam
std
loopne,pt
lock
push
and
jb
jae
push
pop
sub
and
or
negl
inc
mov
or
add
add
and
mov
xchg
cmp
sub
sbb
push
xchg
fisttpll
loopne
cmc
and
jp
xchg
jl
mov
idivb
add
out
xchg
jmp
test
inc
repz
into
sti
mov
mov
mov
or
add
dec
jp
cmpsl
nop
or
arpl
adc
mov
pop
loop
mov
inc
ret
sahf
xchg
das
fcompl
scas
cmp
popf
mov
out
mov
adc
xor
xchg
adc
mov
scas
add
mov
in
stc
cmp
xor
lds
or
imul
sbb
jb
mov
imul
add
add
mov
outsb
and
inc
xor
dec
and
push
push
and
and
nop
inc
cmc
xchg
mov
adc
adc
int3
mov
push
mov
inc
and
shrl
in
mov
xor
ljmp
cmpsl
das
sub
dec
in
pusha
and
ja
cmp
aam
shrb
and
or
pop
add
imul
xor
and
in
movsb
jo
lds
xchg
imul
or
push
adc
push
push
push
test
jnp
testb
lods
notb
xchg
out
pop
bound
out
xor
fidivrs
adc
ror
cld
dec
cmpsl
sub
imul
repz
adc
stos
jmp
mov
ret
notb
mov
xchg
fwait
rcrb
ljmp
add
rolb
mov
ds
cmp
sahf
sub
mov
adc
popf
inc
std
dec
dec
xor
cmpsb
jl
nop
pushf
jbe
addr16
ss
sbb
lahf
jns
xchg
es
jmp
xchg
insl
adc
mov
lret
mov
pop
xchg
ljmp
mov
jmp
mov
es
push
push
sub
add
pop
icebp
fnstcw
popa
out
jp
sahf
xchg
jge
add
roll
lea
adc
ljmp
mov
pusha
cmp
and
adc
in
add
push
mov
mov
jle
jl
dec
out
cmpsb
shrl
xor
enter
dec
adc
lcall
xchg
adc
out
fcom
ret
jl
mov
icebp
pop
int
in
push
push
gs
mov
clc
sbb
std
jo
sub
leave
or
test
pop
dec
adc
dec
sbb
loop
pop
push
roll
fs
inc
popf
inc
xor
cmp
dec
pop
dec
ret
out
dec
xor
sbb
push
cmp
dec
fs
mov
add
or
xor
pusha
movsb
stc
cmp
jb
push
int
orl
adc
popf
push
pop
and
jno
les
dec
sub
push
sbb
rcrl
sub
daa
xlat
adcl
sbbb
pushf
mov
pop
jge
add
in
add
pop
js
dec
add
mov
loop
jmp
push
out
lret
sub
xor
pop
imul
xchg
rcrl
inc
loope
cmp
test
sbb
pop
xchg
loope
pusha
mov
and
or
push
shll
cmpsb
stos
out
gs
push
xor
push
xor
aas
movsl
xchg
sahf
mulb
jl
or
into
push
roll
mov
mov
jg
or
out
insl
sti
add
push
iret
mov
xchg
and
sbb
jecxz
xchg
adc
jg
int3
ljmp
das
cs
xchg
xrelease
clc
sti
xchg
std
cs
mov
sahf
and
out
inc
push
sbb
bound
cmpsb
mov
xor
ja
hlt
jns
and
xchg
outsl
arpl
jg
jmp
mov
pop
pop
mov
scas
jle
push
ja
sbb
or
clc
in
mov
mov
xchg
lahf
mov
mov
pushf
imul
add
rcr
jns
push
or
fwait
pop
leave
dec
dec
fsubl
in
cmp
adc
dec
add
sub
sub
sbb
popa
or
fsub
jno
lahf
pop
repz
ret
xchg
rorb
and
insl
leave
int
aaa
xorb
or
dec
scas
mov
pop
imul
xchg
in
fsubrs
xchg
lock
dec
shl
imulb
cmp
or
push
sbb
insl
jo
dec
hlt
and
mov
outsb
icebp
jmp
add
scas
insb
scas
sbb
pop
stos
aad
gs
stc
sub
pop
push
in
inc
insb
push
sbb
int
and
outsb
mov
and
and
and
addb
aam
push
cmp
jns
dec
push
xor
dec
push
or
loope
pop
gs
mov
add
pop
sub
xor
mov
adc
mov
cmp
int
enter
movsl
rsm
sbb
sarl
xchg
movsl
fidivl
sti
adc
ret
jne
shll
outsb
sub
hlt
das
enter
test
fcmovnbe
into
jns
ljmp
and
mov
mov
pop
lahf
jo
xchg
or
aas
mov
lret
mov
out
jg
lock
xchg
pop
mov
in
dec
iret
fstpt
dec
mov
mov
ret
or
add
jecxz
cwtl
imul
out
inc
cmpsl
mov
pop
push
inc
les
jo
lock
sahf
test
add
lret
movb
out
pop
clc
jp
rorl
int
bound
lds
xor
cmc
vprotd
repz
stc
xchg
xor
adc
push
inc
lret
pop
cmp
rcll
cltd
pop
adc
ret
or
je
mov
or
je
lea
cmp
icebp
das
repz
insb
fwait
pop
lahf
lods
aas
in
sub
jmp
rcrl
cmp
clc
cltd
jns
push
rcll
clts
adc
push
push
push
cmp
pop
aad
and
vmread
sub
adc
sbb
xor
out
shrl
and
push
mov
test
dec
push
jecxz
sbb
jno
inc
fstps
roll
mov
adc
dec
mov
leave
bound
pop
rcll
call
cmp
pushl
push
nop
inc
lcall
push
insb
shll
mov
fildl
lret
out
cmp
mov
sti
mov
mov
jns
ffreep
repnz
or
jae
gs
pop
mov
jp
insb
fucomi
sti
cmp
shl
mov
fsubr
fs
add
mov
stc
sbb
dec
outsl
out
add
inc
out
mov
mov
adc
mov
ss
jae
jge
in
test
outsl
cmpsl
clc
js
cwtl
inc
lcall
adc
test
mov
mov
inc
add
sbb
mov
loopne
leave
push
in
adc
mov
lea
aad
cmp
dec
out
cmp
icebp
mov
xor
bound
mov
pop
sti
bound
pop
mov
arpl
daa
jb
cmpb
popa
out
xor
aas
scas
adc
js
add
and
push
push
dec
pop
fwait
sbb
aad
pop
test
or
cmp
adc
test
jg
push
xchg
cmp
mov
push
mov
lds
pop
mov
enter
inc
pop
and
xchg
jns
out
sti
inc
sbb
adc
inc
add
adc
in
cmp
inc
cli
clc
movsl
icebp
mov
xor
xchg
push
movsl
xchg
sbb
ss
jmp
ret
and
loop
add
leave
imul
icebp
jecxz
jl
mov
xchg
pushf
adc
shll
xchg
pop
shll
enter
cs
arpl
mov
add
or
in
jbe
scas
mov
and
sbb
xor
jo
pop
fsub
mov
adc
aam
inc
stos
push
out
cli
xchg
mov
mov
lret
dec
xchg
das
push
jae
adc
add
xor
insl
lods
cmp
popf
shrd
mov
add
push
dec
or
sub
mov
mov
testl
xor
movsl
ficoml
adc
pop
adc
sbb
jg
mov
into
or
cmp
jno
daa
push
jp
enter
dec
sub
dec
gs
outsl
cmp
das
int
sub
out
sbb
xchg
lret
shrl
sar
inc
cwtl
cmp
inc
dec
or
mov
jae
clc
xor
or
lret
push
dec
inc
cs
xchg
pop
daa
pop
sbb
fisttpl
and
jb
or
xor
sahf
adc
jmp
stos
sbb
xor
mov
push
nop
out
incb
mov
pop
movsb
dec
mov
pop
lods
insb
bound
pusha
rclb
sub
fs
jle
cwtl
je
or
xor
aaa
mov
call
xchg
shrb
icebp
add
les
inc
cmp
mov
rcll
and
imul
loopne
mov
addb
pop
inc
jg
stos
fcoml
push
fisubs
int
jge
ret
inc
fcom
inc
xchg
rolb
lahf
ficoml
daa
mov
push
cmpb
cmc
subb
mov
mov
inc
add
mov
adc
add
jecxz
lods
neg
jecxz
andl
jne
add
xor
test
or
xlat
add
sub
mov
dec
dec
sub
je
testl
sahf
add
shrl
mov
jb
dec
popa
leave
pop
jge
mov
mov
addl
mov
rol
jp
push
adc
push
push
lods
inc
movsl
xchg
pop
stos
or
mov
push
pop
inc
push
pop
jo
add
loop
sbb
shll
mov
pop
loop
xchg
ja
xor
stos
arpl
je
push
push
sub
or
cmp
rolb
jl
sbb
cmc
icebp
cmp
in
mov
mov
fmul
mov
test
es
in
sbb
pop
mov
insb
cmp
int3
sbb
mov
int
sub
cmp
adc
sar
or
stos
mov
cmp
xchg
push
dec
inc
and
push
test
imull
sub
out
push
pop
inc
aad
test
xor
fnstcw
leave
and
sbbl
mov
lods
cmp
cmc
or
jns
mov
pop
add
mov
dec
mov
lcall
in
jecxz
out
cmpsb
or
push
xchg
mov
iret
jmp
push
inc
push
es
and
in
mov
dec
in
sbb
idiv
pop
cmp
jg
jg
fcmovnb
push
rorl
xor
pop
pop
aam
jp
clc
daa
mov
pop
mov
loopne
jb
add
fisubrs
movsb
or
sbb
add
iret
ret
sbb
xchg
sbb
test
push
std
ljmp
pusha
fwait
stos
mov
ljmp
pop
inc
mov
jne
push
mov
xchg
pop
aaa
aad
scas
int3
outsb
pop
xor
stos
add
xor
clc
inc
xor
repnz
mov
in
jecxz
lret
and
adc
jecxz
or
lahf
xor
xchg
cltd
add
aaa
push
lea
out
rol
fsubl
push
fcomip
sbb
pop
mov
cmp
push
aad
test
fistps
sahf
mov
jo
into
mov
les
insb
adc
sub
dec
das
fsub
mov
cmp
popa
sub
add
xor
sub
testb
xchg
or
insb
lock
sub
popf
int3
mov
js
or
cmpsb
insb
fisubrl
aad
xchg
rclb
mov
xchg
fmul
mov
mov
mov
mov
lcall
mov
sub
cmp
add
cli
sub
lret
inc
jne
jp
inc
xchg
fmull
and
jo
dec
xchg
adc
jg
int
popf
add
jo
nop
in
rcll
add
pop
aam
and
push
ficoml
leave
xchg
push
gs
fs
dec
leave
push
loop
push
sbb
sub
xorb
xchg
int3
repz
shlb
sbbb
cmp
mov
mov
jp
jl
pop
mov
push
or
orl
out
mov
js
fwait
xchg
xchg
sbb
std
or
jne
adc
fnstcw
sahf
adc
out
bound
dec
mov
mov
shrl
mov
insl
adc
inc
adcb
pop
shll
arpl
fcmove
loop
mov
inc
xchg
xor
pop
xchg
inc
pop
imul
cmp
fists
ret
pushf
ficompl
mov
jl
mov
pushf
fs
jecxz
int3
adc
jb
pop
jb
rol
sti
or
xor
add
push
imul
aaa
sbb
add
mov
ss
mov
cs
and
in
xchg
adc
into
fbstp
aam
repz
push
push
fstpl
iret
xchg
call
adc
les
xchg
inc
adc
pop
call
push
and
test
cmp
test
lret
xchg
rcll
outsl
xchg
mov
pusha
aad
xchg
fwait
jb
lods
inc
jmp
pop
je
gs
mov
push
orl
ffreep
adc
popa
sbb
in
add
jbe
outsb
sbb
std
xchg
xor
adc
mov
shlb
jecxz
adc
punpckhbw
jl
int3
jmp
adc
jecxz
rcrl
scas
daa
imul
fs
or
inc
lret
push
or
and
jne
loopne
test
out
mov
or
mov
add
cmp
test
xor
sbb
insl
and
xor
pop
int
cld
cmp
addr16
push
ret
jecxz
insb
imulb
cld
idivb
inc
jl
nop
mov
jmp
insl
repnz
or
adc
sbb
rolb
inc
or
ljmp
movsl
int
daa
leave
repnz
repz
iret
xor
aad
and
aas
mov
push
pop
and
bswap
mov
int3
hlt
xor
mov
faddl
movsl
mov
mov
ja
dec
and
jmp
daa
mov
mov
inc
adc
in
mov
push
sbb
and
jne
adc
das
push
push
add
imull
inc
sti
adc
rcll
stos
mov
aad
jecxz
into
mov
dec
jp
cmp
mov
adc
fnstenv
test
aaa
adc
mov
xchg
loopne
inc
loopne
jnp
dec
push
pop
shll
test
insl
mov
xchg
xor
adc
dec
in
imul
test
outsl
pop
xor
adc
push
sub
xlat
orb
in
aas
in
jnp
stc
repnz
or
sub
stos
cmp
inc
clc
ficoml
std
popf
jno
test
movsb
icebp
aam
frstor
inc
jl
roll
shrb
lds
pop
jno
stos
push
nop
dec
insl
outsl
dec
sti
ss
add
aaa
sarl
out
int3
or
cmp
or
lods
sti
jno
and
push
dec
cmpsl
int3
ja
or
sub
sub
jo
xchg
or
jge
sbb
add
or
stos
mov
jl
pop
nop
jne
mov
jns
pop
jge
adc
cmc
xchg
cltd
push
add
mov
xor
loope
xor
hlt
adc
movsl
sti
stos
in
and
sbb
mov
std
dec
subl
mov
clc
lds
es
mov
xor
pushf
clc
andb
push
sub
sti
pusha
sbb
sbb
mov
jge
jne
mov
scas
scas
jnp
mov
jg
mov
jg
inc
cmc
adc
pusha
push
dec
es
sbb
inc
test
out
xchg
stos
mov
aam
pop
lahf
pop
push
or
mov
mov
mov
sbb
pop
in
and
lods
testl
test
or
test
jb
divb
call
xchg
push
repz
in
and
lcall
xor
shll
outsl
push
xchg
insl
testl
cwtl
sbb
shll
xor
mov
cmp
rorb
iret
sub
fstl
sub
aam
mov
imul
lds
je
iret
add
pop
push
adc
cmpsb
movsl
pop
andb
movsb
push
adc
jmp
cmp
inc
xor
fprem
sub
pop
pop
push
and
lret
aas
sbb
jge
xchg
push
les
test
push
pusha
inc
pop
test
xor
fldl
mov
and
imul
loope
mov
xor
or
clc
push
cmp
inc
sbb
mov
jae
lret
dec
add
es
gs
cmp
inc
pop
stos
adc
inc
push
xor
and
outsb
aas
adc
mov
mov
dec
adc
int
and
outsb
mov
gs
lret
jns
sbbl
mov
aam
sub
fwait
fs
mov
pop
dec
mov
ja
adc
xchg
sub
lret
pop
scas
jns
inc
xor
mov
pushf
enter
mov
push
and
push
inc
adcl
cmp
aas
push
inc
mov
mov
stc
das
sbb
sub
or
aaa
mov
jle
and
shll
xchg
sbb
xchg
js
sbb
cmp
push
xchg
aad
pop
rorl
arpl
popa
inc
cmc
mov
cmpsl
aad
out
insb
scas
cmp
dec
jns
dec
out
sbb
mov
mov
jae
adc
add
call
xor
fsubl
jae
sub
push
out
rolb
mov
sub
jbe
or
push
mov
jo
out
xlat
push
enter
imul
lds
insb
jle
mov
mov
bound
movsl
jns
xor
sti
in
mov
or
xchg
jge
xchg
icebp
sbbb
push
out
jmp
aas
scas
jmp
lea
add
ficoml
imul
xlat
xbegin
cmp
addr16
shl
out
lret
sbb
movsb
push
xor
jg
in
imul
ss
dec
fidivrl
les
xlat
lock
rorl
cmp
jmp
jmp
xchg
xor
add
addr16
add
pusha
int
fwait
push
mov
test
icebp
sahf
mov
xor
mov
imul
sub
inc
aad
in
cmp
inc
push
pushf
das
jge
mov
in
xchg
inc
out
or
leave
push
jno
pop
or
sub
ljmp
xchg
sarl
xor
sbb
in
gs
insl
cmpsb
movsb
xor
ds
jecxz
xchg
pop
push
push
cmc
inc
lret
mov
push
or
aaa
pop
or
jno
add
jnp
je
call
mov
ficomps
scas
insl
mov
in
sbb
cmp
push
mov
outsl
hlt
ds
addr16
ljmp
jecxz
rclb
call
in
mov
mov
add
xchg
push
cltd
sti
adc
cli
insb
vpslld
xchg
sbbb
pushf
sub
push
jb
sti
sbb
data16
cmp
xchg
cmpsl
aad
repz
das
xor
inc
lret
cltd
sub
lcall
les
mov
cmp
sbb
lods
mov
inc
sti
fisubs
push
dec
nop
push
loop
sub
pusha
ds
mov
mov
outsl
mov
cmp
dec
out
int
and
dec
test
cmc
mov
in
jnp
lods
push
test
cmp
out
sbb
iret
dec
scas
inc
stos
pop
mov
sub
mov
fs
push
sub
mov
repz
jle
lds
inc
test
pop
sub
test
push
cwtl
cmp
push
loopne
inc
arpl
icebp
jl
scas
mov
icebp
cld
mov
xchg
lahf
jge
mov
subb
push
mov
xor
mov
adc
int3
addr16
adc
xchg
cmpsb
push
loope
xchg
jno
adc
negl
insb
shrb
je
dec
rcr
jmp
inc
or
mov
cli
mov
movsb
popa
pop
or
xchg
and
cmpsl
sbb
fcoml
jmp
ficoml
pop
mov
add
xchg
xor
cmpsb
daa
dec
jno
daa
pop
inc
les
in
scas
dec
lods
arpl
out
mov
pop
add
sbb
ss
insb
pop
mov
ret
loope
jg
shrl
xchg
icebp
scas
xor
inc
and
fwait
xchg
cld
scas
movsl
pop
test
mov
fs
cmp
pusha
mov
jge
jnp
in
jge
push
pop
leave
cwtl
or
lods
out
dec
xchg
loop
xchg
jle
orl
sahf
addl
pop
sbb
sarb
in
fmull
sbb
mov
xchg
pop
mov
sub
outsl
fs
xor
outsl
cld
fcmovnu
push
jb
scas
cwtl
fisubrs
push
sbbb
lahf
fsts
pop
mov
mov
mov
idivb
outsb
test
lahf
negl
adc
movsl
popa
mov
mov
jns
mov
mov
sub
stc
imul
in
xor
adc
lcall
outsb
loop
xor
rorl
xchg
aas
mov
mov
xchg
lret
lods
daa
int
shl
xchg
rcrl
mov
loopne
lds
jne
stos
mov
cmpsb
addl
and
int3
aas
mov
add
mov
fs
fadds
fcompl
cmpsl
bound
test
test
in
fwait
cld
sbb
lods
xchg
mov
pop
subl
push
rorb
call
xor
push
adc
add
jmp
and
insl
xchg
fistpl
sub
dec
jno
dec
pop
jbe
push
popa
out
in
in
inc
xor
adc
fs
pop
jbe
cmpsb
jae
lea
fwait
or
sbb
lock
sub
aad
stc
out
push
daa
mov
and
fistps
cmp
jmp
pop
jmp
and
xchg
loop
rorl
dec
add
cltd
push
or
lea
test
pusha
test
les
mov
leave
jmp
jo
loop
pop
sbb
cmp
jno
insl
andb
mov
mov
insb
test
mov
call
jae
pop
popl
in
js
int
subb
daa
das
push
andl
leave
shr
fwait
push
push
cmp
aam
sbb
js
mov
rcrl
scas
inc
cmp
fnsave
int
cli
and
add
test
shll
js
add
popf
enter
in
cltd
icebp
pop
repz
jnp
inc
stos
insb
loope
movl
lahf
stos
pop
and
aad
cmp
jle
add
cmpsl
loopne
mov
imul
andl
inc
add
add
inc
mov
icebp
cli
pop
mov
aam
dec
outsl
popf
repnz
or
xor
mov
stos
outsb
std
mov
cmc
iret
mov
rol
fldl
es
rep
jmp
xlat
rorb
cmp
and
out
mov
repnz
inc
int3
xchg
ss
or
mov
daa
push
icebp
sti
aam
and
lea
loop
xor
in
imul
jb
pushf
call
pusha
and
jno
ljmp
or
pop
cld
int3
inc
std
fidivl
push
cltd
movb
addr16
adc
ds
sahf
dec
xchg
mov
dec
sub
add
xor
push
idivb
into
or
push
adc
ss
loope
mov
xchg
arpl
push
and
inc
mov
jmp
or
cmp
and
int
inc
cmpsb
inc
je
outsl
lods
xor
lea
cmp
xorb
or
sarl
loopne
push
stc
pop
mov
nop
hlt
jbe
cmp
cs
adc
out
ljmp
jns
cld
cmp
repz
mov
aaa
xor
mov
sbb
vmread
mov
and
push
or
mov
insb
cmpl
in
scas
fwait
sub
xchg
data16
cmpsl
rolb
xor
pop
add
dec
add
lea
or
adc
mov
add
inc
les
out
data16
insb
jne
andb
and
mov
xchg
mov
popa
adc
cmpsl
cltd
divl
xchg
pop
je
negl
dec
inc
mov
mov
cmp
jns
add
lds
ja
pop
jge
bound
cmp
sbb
sbb
imul
xlat
fimuls
cltd
testl
mov
outsl
mov
ja
push
jae
adc
loopne
int3
scas
cs
fimull
out
xchg
push
push
loope
inc
or
add
mov
out
xor
mov
jg
push
pusha
test
mov
push
lcall
repnz
std
inc
aad
mov
inc
pop
rol
loope
push
sahf
pop
xor
in
roll
or
ja
sub
mov
ret
sub
pop
cli
pop
cs
mov
mov
pop
cmpsl
and
xor
out
cmp
jno
test
sbb
or
dec
les
dec
test
scas
outsl
in
dec
scas
pusha
out
clc
xor
adc
out
lods
mov
pop
inc
jmp
push
and
sahf
loopne
adc
mov
sbb
cs
outsb
out
inc
push
add
push
jnp
xchg
add
sub
ds
sbb
out
lcall
or
xchg
std
push
cmpl
scas
lock
dec
test
in
cmpsl
in
mov
arpl
adc
mov
fiadds
mov
mov
call
pop
cltd
sbb
je
dec
xchg
xchg
cltd
shrl
jno
popf
mov
push
dec
sub
inc
cmp
imul
clc
cmp
paddusb
cmp
pop
sub
xchg
mov
imul
hlt
inc
fcmovu
gs
ljmp
xchg
mov
cmp
xlat
pushf
into
xchg
mov
loope
aad
mov
test
push
add
ljmp
dec
call
addb
inc
ror
cwtl
cs
xchg
movsl
push
cltd
xor
das
pop
in
add
xchg
and
or
and
jb
sub
cmpsl
enter
call
stc
and
leave
pop
pop
or
iret
outsl
aam
pop
rcl
xchg
mov
push
sub
sub
pop
pushf
cmpsb
ret
loope
sub
mov
int3
mov
repnz
lods
mov
fdivp
adcb
pop
fwait
inc
mov
scas
cld
xchg
sub
xor
xchg
clc
and
dec
pop
das
dec
sub
mov
sbb
sbb
mov
push
test
cmp
sbb
inc
mov
scas
xchg
ss
mov
int
sub
scas
pop
ja
call
xor
push
and
xchg
fwait
pop
dec
addr16
cmp
lea
insb
sub
lret
cs
js
jnp
in
mov
mov
jge
cltd
lahf
imul
push
mov
pusha
insl
lds
push
arpl
jbe
cmp
jb
int3
popf
or
sbb
stc
cwtl
xor
add
clc
bnd
cmp
incl
loopne
daa
mov
popf
cmp
xlat
or
and
mov
xchg
jne
mov
or
in
cmpsb
cmp
jmp
stos
js
xor
cli
arpl
xor
subb
lods
call
mov
data16
lahf
mov
in
lret
pop
mov
xchg
push
xchg
lret
sbb
inc
sub
mov
or
xor
sbb
popa
dec
and
push
or
inc
loop
sbb
or
movsl
mov
cmp
mov
cmp
sbb
mov
push
mov
ret
or
ret
data16
int
inc
lods
push
jns
out
sbb
sub
push
mov
pop
hlt
sbb
xor
or
mov
mov
adc
mov
push
fwait
jno
jnp
insl
aas
test
xchg
jmp
out
rcl
pop
add
mov
int3
pusha
data16
or
stos
and
addr16
ja
insl
jb
in
dec
ret
push
dec
jae
mov
lds
sub
sbb
pop
ds
lret
pusha
mov
xadd
out
sbb
inc
mov
ret
lods
jno
in
scas
jle
mov
daa
mov
lods
negl
cwtl
sub
jae
mov
scas
mov
cwtl
add
std
jbe
in
jb
adc
xchg
xor
push
cmp
cmp
xchg
sbb
into
enter
pop
dec
pop
xlat
and
das
mov
les
or
lea
sahf
mov
push
add
in
add
in
jl
int
fdivr
inc
scas
dec
shl
bound
scas
add
or
xchg
outsl
cwtl
mov
jl
mov
ja
dec
arpl
std
shll
rcrb
xchg
adc
out
push
lods
dec
pop
int3
test
xchg
mov
push
aaa
enterw
movl
pop
data16
jp
mov
clc
dec
xor
adc
cmp
rcrl
lock
xchg
add
popf
jnp
nop
and
popa
cmp
inc
dec
push
pop
imul
mov
je
pop
rcll
adc
les
jae
test
add
into
lods
in
nop
cmp
mov
pop
mov
stc
gs
xchg
sbb
mov
sub
outsl
mov
adc
fs
loopne
stc
pusha
sbb
je
xchg
mov
cmpsl
jo
addr16
les
mov
xchg
cmp
std
push
lahf
daa
xor
mov
xchg
add
jno
sti
repnz
and
stos
testl
mov
mov
loope
push
lret
mov
ret
push
stc
push
or
movsb
jo
xchg
push
push
cmc
push
xchg
icebp
mov
dec
xchg
adc
sub
inc
test
cli
mov
test
xchg
repz
or
dec
lds
test
xor
mov
sub
and
fwait
or
cmp
adc
inc
adc
xor
push
fcompl
jbe
mov
icebp
sbb
pop
pop
pusha
dec
xchg
test
jae
inc
cmp
out
xor
test
xchg
rcr
repnz
sbb
add
lock
xor
fs
imul
es
sub
and
xchg
sbb
cmp
hlt
and
jbe
rol
loope
sbb
cmp
out
lea
pop
pop
rcll
pusha
clc
or
inc
arpl
stos
scas
scas
cmpsl
js
jae
lock
dec
add
out
add
movsl
outsl
jle
gs
jg
repnz
int3
lods
cs
ja
jg
add
fldcw
popa
xchg
lcall
aam
mov
rol
jbe
stos
data16
jecxz
xor
daa
dec
lock
xchg
mov
jle
pop
decl
mov
cmp
add
mov
cmp
mov
xchg
cmc
jmp
fmul
pandn
push
aaa
sub
rcrl
mov
add
push
sub
nop
mov
test
dec
fists
pop
std
out
inc
pop
mov
add
xor
push
fldl
idivb
xchg
mov
pop
hlt
jno
stos
sbb
imul
or
mulb
sub
jge
mov
push
or
jg
jb
push
mov
mov
fidivl
lahf
mov
inc
shlb
in
mov
dec
rolb
test
out
ficompl
loop
loopne
mov
ss
sub
jecxz
pop
and
rcll
cmp
jae
push
lds
shrl
aam
sub
movsb
cld
hlt
xchg
jp
pop
fdivl
and
or
lret
pop
jge
mov
xchg
mov
fwait
bound
je
arpl
aam
pop
std
jnp
lret
adc
dec
and
inc
ficoms
mov
cmpsl
mov
shl
add
addr16
lret
cmc
shrl
rcr
loop
stc
icebp
fldl
ljmp
add
andl
mov
js
scas
int3
pop
jl
rcrl
repnz
scas
mov
pop
nop
xchg
fistl
pop
in
jne
ffreep
or
push
popf
mov
push
in
mov
sub
pop
inc
ss
sbb
push
imulb
roll
pusha
icebp
rorb
or
ds
mov
aaa
xor
dec
pop
iret
mov
call
lods
sub
jae
mov
fcmovb
pop
pop
outsb
push
int
push
mov
cmp
mov
std
xorb
sarl
iret
sbb
mov
fistps
push
js
stc
cmc
lcall
pop
inc
mov
and
xor
lea
or
and
or
jo
subb
mov
mov
mov
jmp
into
pop
fdivl
sahf
sub
cmc
and
sbb
xor
test
dec
xor
fucomi
sbb
icebp
add
dec
mov
mov
lds
sbb
fcomp
xor
push
loop
and
lds
push
shll
pop
ret
mov
adc
pop
in
in
gs
add
insl
sbb
icebp
loope
add
or
nop
jne
inc
sbb
cli
mov
out
fucom
cltd
nop
mov
lods
into
in
sbb
fwait
aad
hlt
or
mov
pop
fcmovnbe
or
mov
and
add
inc
ljmp
xor
push
inc
test
or
addb
call
gs
jmp
shr
adc
popf
int
aaa
jecxz
jb
push
sbb
xor
pop
xchg
dec
imul
push
add
mov
pushf
push
cwtl
sub
pop
movsb
subb
xor
cmp
int
sti
test
cmp
testb
lods
ds
xchg
mov
sbb
pop
pop
pop
xor
pushf
push
cltd
imulb
xchg
push
cli
testb
mov
rorl
add
xor
ret
shll
pop
xor
push
jae
les
leave
add
adc
es
xor
pop
inc
jbe
cltd
inc
sub
xor
daa
cmp
pop
jmp
stc
rcrl
js
fwait
and
pop
popa
add
jg
cmp
lcall
xor
push
movsb
add
inc
mov
call
or
hlt
xchg
cmp
and
dec
mulb
xor
add
or
ljmp
int3
arpl
push
mov
xchg
jb
jnp
push
push
rolb
cmp
stc
sub
mov
jecxz
mov
sub
in
rcll
loope
cld
repz
int3
test
jb
xlat
mov
pop
in
loope
sub
push
pop
adc
push
or
call
dec
mov
jge
add
mov
call
push
dec
out
imul
pop
mov
fdivs
mov
push
cmpsb
sbb
test
or
cmp
jno
cltd
add
in
jae
call
mov
xchg
push
add
mov
pop
pop
test
push
push
aad
out
movsb
jns
loopne,pn
cs
pushf
pusha
clc
and
sbb
clc
flds
ret
pop
stos
negl
jbe
lret
xorb
mov
mov
pop
addr16
cmpsb
js
and
sub
std
loope
xorb
in
pop
sbb
sub
inc
mov
or
cmp
adc
pop
fs
xchg
sbb
out
int3
dec
and
jo
pop
dec
push
inc
jno
shll
out
inc
mov
sbb
out
sub
lea
inc
sub
mov
daa
dec
insb
ret
cmp
ret
cmp
out
enter
or
mov
inc
movsb
jnp
mov
jle
loop
xchg
repz
cmp
es
xor
call
mov
and
or
add
ljmp
mov
xchg
inc
shr
sbb
jbe
xchg
bnd
push
mov
lods
fmuls
pop
xor
les
aas
xor
pop
inc
push
cwtl
inc
bound
xchg
dec
orl
roll
push
and
and
repnz
push
cmc
stc
repz
fisubs
mov
ret
or
or
sbbb
cmp
cltd
arpl
fldl2t
mov
filds
sahf
sarb
imul
or
push
stos
shrb
cmc
repz
sbb
jecxz
mov
push
or
mov
inc
incb
fisttpll
add
push
and
repnz
dec
cmp
icebp
mov
push
cmp
jne
cmp
ss
sub
stos
xchg
lods
dec
push
ret
js
into
imul
add
repnz
xchg
jo
add
cmpsb
insb
xabort
int3
pusha
mov
jle
cmp
rolb
aas
les
lcall
adc
xchg
mov
lods
inc
sbb
push
mov
in
inc
lret
fdivrp
xchg
ja
inc
ret
lcall
in
mov
and
add
ror
cmp
cmp
pusha
xchg
mov
sbb
mov
ficoml
sub
dec
cwtl
xchg
mov
cmpsb
cmp
clc
inc
loop
cmp
popa
cmpsl
frstor
lcall
insl
adc
js
jo
push
pushf
out
dec
adc
popa
ret
fistpll
jecxz
jg
mov
stc
movsl
loopne
psrlq
xchg
aaa
scas
cmp
call
enter
lret
jb
inc
add
mov
out
stos
jnp
push
mov
jp
xor
mov
shrl
gs
adc
inc
call
inc
pop
dec
xor
dec
nop
out
lret
pushf
xor
jg
xor
cmp
mov
psllw
cmp
das
add
hlt
out
pop
push
pusha
mov
or
jecxz
xchg
out
dec
or
movsb
mov
aas
fs
stos
sbb
pushf
mov
push
mov
daa
jmp
push
popf
inc
out
mov
or
mov
stc
fimuls
jne
mov
in
sbb
out
js
mov
pop
popa
mov
mov
insb
aaa
fcompl
movsb
aad
cld
or
pavgb
lahf
jne,pt
or
sbb
sbb
or
lahf
mov
mov
dec
mov
push
out
sbb
xorb
cmp
cmp
fisubs
mov
cwtl
push
jne
cmp
push
shr
push
mov
and
mov
mov
leave
add
out
push
stc
pop
out
imul
sarb
pop
fsubl
cmp
out
stc
sbb
jmp
outsl
in
loope
insb
jle
lcall
negl
lock
pop
xor
test
xor
stc
mov
mov
sbb
push
inc
push
in
or
iret
sbb
nop
shlb
flds
adc
push
lret
fimull
fsubrs
cli
gs
dec
push
sbb
scas
mov
arpl
mov
sub
xor
sbb
dec
adc
cmp
pushl
repz
mov
bound
mov
mov
loopne
sbb
mov
pop
cs
loopne
adc
repnz
mov
mov
sbb
jno
lahf
and
mov
jecxz
mov
outsl
push
ficoml
dec
testl
jle
xor
call
jbe
cmp
push
xchg
cmp
pop
mov
ja
stos
push
xor
mov
jl
arpl
push
push
movb
cmp
idivl
sub
xchg
lds
fsubp
jnp
xor
xchg
push
dec
aaa
sbb
out
loope
shlb
dec
fildl
hlt
ljmp
jecxz
mov
aas
jge
inc
fisttpll
dec
jle
movsl
ljmp
je
push
std
mov
inc
sbb
loope
jl
push
xor
mov
or
pop
push
jp
fs
aam
in
fmull
adc
lods
ss
in
jne
push
adc
ja
cmp
lret
and
sbb
cmp
enter
cmpsb
orb
mov
and
scas
mov
and
xor
arpl
push
add
shlb
or
mov
xor
xorl
add
jne
dec
sub
fwait
cmp
pop
lret
jmp
mov
jle
js
test
push
lock
jp
mov
aas
sbb
jmp
sub
dec
sub
mov
jno
sub
aad
and
pop
mov
sub
incl
pop
push
and
and
push
add
pop
lods
mov
add
aad
mov
pop
adc
inc
and
daa
cmp
jo
loope
movsl
lret
aas
mov
pop
sti
push
inc
das
push
lret
nop
add
pop
jecxz
mov
and
xor
outsl
das
and
xor
xor
xlat
loopne
pop
in
or
ret
shll
xor
enter
add
mov
lret
pop
cwtl
add
sub
cmp
xchg
iret
pushf
rcrl
jp
fucomi
pop
push
xor
shrl
data16
test
push
cmpsb
aas
rorl
mov
in
mov
hlt
addr16
popf
mov
fistpll
and
je
xchg
out
ljmp
sbb
jns
stos
insb
aaa
lret
and
mov
imul
adc
mov
mov
dec
nop
add
push
cli
inc
dec
clc
aam
in
test
lret
fistps
fbld
ljmp
fnstenv
cltd
adc
push
mov
es
jle
push
pop
or
orl
outsb
xor
inc
mov
inc
add
xchg
dec
mov
ds
insb
dec
les
and
xchg
add
ds
outsl
idivb
lock
ljmp
cmp
stc
inc
cltd
push
mov
filds
pop
icebp
jge
and
dec
in
xchg
cmpsb
arpl
icebp
fwait
cmp
jmp
inc
das
data16
scas
sbbb
push
jbe
mov
cmc
jmp
jne
pushf
adc
movsb
sub
xchg
jns
dec
jg
lahf
jle
loop
xor
mov
mov
adc
pop
mov
mov
adc
or
ljmp
mov
push
sub
mov
xchg
popf
xchg
fwait
push
push
sbb
push
push
shrb
xor
scas
push
push
push
dec
out
stos
cs
cltd
and
mov
xchg
out
fcmovnu
xchg
jecxz
rcrl
mov
mov
add
mov
stos
cmp
or
cwtl
js
and
dec
pop
pop
das
stos
imul
add
cmp
aaa
jns
xchg
cmp
xorb
cmp
dec
cmp
call
roll
std
mov
pushf
xchg
dec
out
in
je
out
stos
jb
sub
movsl
xchg
pusha
jle
mov
pop
notl
loop
and
adcl
inc
test
xor
add
cwtl
add
mov
jae
rep
or
stos
jle
leave
stc
xor
nop
je
cmpsb
xor
les
or
into
test
out
or
iret
test
sub
push
ret
fisubs
addb
or
mov
pusha
mov
popf
push
push
add
add
mov
js
xchg
adc
jnp
lods
sbb
sbb
das
lds
push
repnz
mov
loop
and
out
mov
enter
or
jg
dec
sbb
int
mov
jnp
lret
dec
out
mov
dec
adc
cmovns
jle
push
nop
and
pop
pop
xchg
leave
add
push
add
iret
pop
test
push
mov
dec
adc
aaa
pop
mov
loope
mov
and
pop
adc
ss
jmp
xchg
xchg
pop
cmpb
lretw
push
lods
testl
pop
jbe
mull
loop
push
call
int3
xor
cmpsl
fcmovu
inc
dec
mov
pushfw
bound
sbb
stos
push
inc
jb
int3
popa
push
stos
dec
dec
cmp
xor
jb
push
push
out
xor
mov
rcll
pop
and
cli
sbb
xchg
enter
mov
sbb
sbb
stos
adc
repnz
repz
shrb
pop
ss
push
mov
cmp
sub
sub
ds
mov
add
lods
xchg
and
cmp
movsl
cmpsl
pop
jno
hlt
ret
out
inc
jmp
sbb
pop
cmp
movsb
jg
pushf
xchg
lock
xor
pop
int3
pop
pop
pushf
or
out
adc
sbb
shll
push
xor
shll
pusha
inc
pop
repz
jg
ja
sbb
aas
pop
xchg
sub
into
xor
dec
cmp
pop
xor
push
add
and
jbe
cmp
pushf
mov
jmp
stos
sbb
std
cmp
lcall
mov
frstor
scas
sbb
xchg
pop
stos
pop
aaa
dec
mov
mov
jbe
sub
xchg
mov
xor
out
jl
rol
cwtl
clc
leave
idivl
xor
xlat
mov
or
jl
xchg
lods
sbb
push
arpl
mov
cltd
push
imul
dec
cmpsb
out
int
fstl
cmc
insl
imul
hlt
dec
push
scas
fistpl
sub
ljmp
dec
cmp
icebp
add
sbb
adc
xor
sbb
mov
pop
pop
loop
xchg
sbb
xor
in
filds
xchg
push
pushw
mov
scas
jge
xorl
cltd
add
loopne
enter
mov
xchg
rcr
inc
add
int3
loope
ds
cld
aad
mov
add
dec
aam
dec
mov
push
faddl
scas
call
sbb
xor
adc
sub
ret
jecxz
mov
in
scas
in
push
out
icebp
stc
mov
in
mov
movsl
mov
inc
xchg
or
fcom
xor
pop
movsb
push
or
leave
fwait
mov
add
sub
mov
jae
add
mov
mov
repnz
fbstp
push
lret
jecxz
lret
cs
lcall
insb
dec
aad
mov
andb
out
sbb
shl
or
loopne
rorl
fdiv
cmpsb
arpl
push
lods
sbb
push
aam
mov
or
in
adc
out
mov
dec
pop
cmpsl
int
mov
pop
loope
ss
pop
inc
mov
or
mov
das
dec
fisubs
add
out
pop
dec
das
add
xor
jno
mov
hlt
push
sahf
fdivrp
push
in
cmp
adc
lods
cmc
ds
sbb
lods
ds
stos
in
mov
sbb
pop
mov
mov
push
movsl
fidivs
cwtl
frstor
add
pop
cmp
dec
mov
or
arpl
adc
or
pop
lds
pop
push
cmp
mov
xor
or
mov
daa
call
sub
sub
mov
out
push
sbb
cwtl
outsl
sar
dec
sarl
pushf
ds
sub
mov
adc
add
bound
adc
or
jl
mov
inc
subb
sub
xor
hlt
and
aad
imul
push
and
je
and
lea
emms
das
fisttpll
or
or
xor
mov
fstpl
mov
jg
int
std
fwait
sub
cmpsb
pop
mov
mov
sbb
test
hlt
sub
jno
jl
dec
and
add
das
sub
lahf
and
dec
mov
mov
and
lret
call
add
adc
push
ret
aad
in
mov
mov
lea
cmpsb
or
je,pt
adc
or
dec
xor
icebp
push
dec
mov
inc
lea
ljmp
adc
sarl
addr16
ss
notl
stc
and
and
push
cmp
dec
out
fidivrs
and
sub
outsb
stos
addr16
shll
or
and
pop
test
or
out
jmp
push
ja
xor
or
addb
and
mov
pop
sub
jae
rcrl
mov
add
popa
stos
and
cmpsl
dec
xchg
mov
orb
test
jge
neg
xor
insb
mov
adc
push
mov
mov
hlt
pop
out
adc
and
dec
add
inc
sub
dec
adc
fmull
xor
mov
fucomp
xchg
push
push
mov
ja
pop
mov
or
mov
out
dec
ljmp
push
mov
add
enter
mov
int
loope
jbe
sub
dec
ret
xchg
jnp
sbb
cmc
mov
icebp
cmp
lock
sahf
imul
mov
dec
jns
movsl
test
dec
or
insl
rorb
dec
into
fldl
jo
and
leave
les
jmp
dec
lds
xor
sbb
das
push
aad
dec
adc
das
test
lret
out
jl
mov
adc
add
cmc
pop
mov
je
and
int3
shrl
fimull
add
jb
and
add
test
nop
in
int
fiadds
cmpsl
mov
mov
shr
push
gs
test
pop
int3
out
dec
in
mov
pop
sbbb
push
push
inc
pop
push
fisubrs
nop
stos
adc
lock
and
cmp
mov
pop
mov
xchg
push
outsl
mov
fwait
cvtpi2ps
mov
lods
stos
insb
arpl
adc
adc
or
dec
mov
lods
push
dec
cmp
in
push
loopne
sub
pop
lret
ja
adc
cmc
nop
adc
cli
sub
and
or
push
shlb
ja
sub
jo
inc
shrb
dec
xor
leave
xor
jge
pop
ret
lods
mov
pop
sub
cmp
jge
pop
iret
pop
pop
data16
test
jae
sbb
pushf
fisubs
je
or
push
cld
xor
mov
popf
int3
loope
and
sbb
pusha
out
test
pop
addr16
jns
enter
popf
push
call
pushf
sub
or
jbe
rcl
movsl
out
imulb
cmpsl
fsts
les
in
out
imul
and
pusha
les
test
test
negb
stos
push
stc
jmp
xchg
lret
std
sar
xor
dec
adc
les
bound
sub
inc
aad
clc
mov
fistps
jae
inc
bound
je
mov
add
pop
test
push
in
jne
call
mov
pop
into
movsb
mov
inc
jno
imulb
nop
xchg
in
loopne
shrb
dec
inc
inc
in
push
test
add
and
repz
inc
mov
inc
ja
dec
in
xor
mov
push
int3
test
loop
shr
je
aas
mov
mov
cmc
xchg
das
adc
aas
in
shll
cmpsl
inc
popw
fs
xor
outsl
lret
int3
or
in
dec
iret
jp
mov
mov
mov
roll
pop
jno
xor
arpl
jge
fldcw
xor
in
loop
sti
push
jno
xchg
jecxz
nop
fwait
movsb
cmp
inc
ret
push
lock
xchg
xchg
pop
icebp
je
jmp
sbbb
xor
mov
fidivl
hlt
mov
aas
scas
and
fnstsw
push
ja
out
mov
mov
lret
mov
mov
push
push
scas
nop
jae
jne
leave
fistpll
jl
pop
jge
ljmp
mov
adc
lea
subb
sbb
movsb
test
cmp
mov
dec
cmp
and
cmp
fstp
cli
or
aaa
in
pushf
cwtl
xlat
cmp
ja
cmp
jns
outsb
push
mov
mov
call
add
lods
mov
jne
pop
mov
clc
push
inc
sbb
xor
sub
fadds
scas
imull
clc
pop
add
jmp
ds
repnz
in
xor
lods
imul
das
xchg
pop
out
dec
xchg
push
mov
ret
stos
lock
int3
dec
dec
incb
adc
aaa
xor
cmp
rcrb
clc
mov
mov
imul
push
lret
or
add
dec
adc
imul
push
push
repnz
lock
dec
rclb
out
jae
and
leave
xor
pushf
mov
cmp
jns
enter
out
pushf
popf
or
push
xchg
or
sbb
xchg
popa
xchg
push
in
flds
fistps
in
mov
mov
out
mov
or
add
jecxz
daa
sbb
outsl
out
mov
mov
outsl
fld
fmull
xor
xchg
dec
xchg
les
data16
cs
mov
jns
sbb
mov
ja
dec
lahf
outsl
movsb
pop
xor
sbb
push
adcb
xor
jp
popf
xchg
add
sbb
mov
pop
es
or
add
cli
ss
cmp
out
fsts
and
mov
mov
mov
icebp
std
ret
add
mov
jg
pop
and
mov
or
fsub
fcoms
pop
fcomps
add
lea
and
and
inc
aaa
std
push
addr16
hlt
ficomps
push
adc
fstpt
adc
aaa
adc
dec
lret
xchg
inc
jmp
jae
in
mov
add
adc
inc
inc
push
jnp
icebp
sarb
shlb
hlt
outsb
pop
orl
int3
fs
outsb
pusha
enter
push
add
lret
gs
mov
push
mov
out
mov
xorl
arpl
cltd
pop
push
pop
pop
add
arpl
sub
mov
loop
mov
inc
lock
leave
addr16
cmp
aas
mov
xlat
in
pop
xchg
notl
mov
pop
and
mov
icebp
mov
daa
lock
xchg
les
sub
sbb
push
lds
inc
vpmullw
mov
mov
stos
imul
cmpsl
lds
int
sbbb
sti
and
popa
add
and
ja
or
or
mov
xchg
int
stc
adc
and
in
cmc
push
ds
mov
cmp
dec
sub
push
cmp
add
pusha
popa
xchg
mov
out
push
sbb
test
rolb
ret
jb
std
jno
sahf
add
ds
adc
aad
sahf
pop
arpl
xor
jg
fwait
jecxz
mov
into
xchg
push
rolb
adcl
mov
gs
cmp
xor
push
sub
pop
int
push
jns
mov
mov
inc
aas
ja
cli
or
sti
ret
mov
or
in
jecxz
add
fistpl
das
add
cs
mov
mov
js
cmp
mov
in
clc
inc
xorb
pop
cmp
outsl
push
sub
mov
xchg
cs
xor
lahf
dec
sub
or
sar
mov
sar
fiadds
xchg
or
rolb
mov
int
jb
sbb
ret
push
mov
les
push
mov
jmp
into
jb
add
xlat
fs
mov
fsts
mov
mov
je
sub
xorl
mov
pop
sbb
mov
lods
outsb
xchg
popa
mov
lcall
sub
sub
jle
mov
sbb
out
loope
popf
fnstsw
push
gs
mov
push
add
insl
dec
and
fisubs
mov
inc
mov
mov
mov
scas
or
adc
add
movsl
and
jb
les
gs
fsubl
movsb
in
dec
cltd
mov
repz
pop
sbb
xor
mov
and
je
outsb
adc
pop
inc
inc
or
or
in
mov
outsl
in
lock
inc
loopne
arpl
insb
push
hlt
leave
fistpll
add
xchg
jp
dec
dec
or
push
es
sub
mov
sahf
jnp
into
cltd
push
mov
xchg
mov
push
jb
movl
in
aaa
fwait
pop
je
pop
adc
or
ja
mov
jg
fidivl
loope
lds
jecxz
jg
push
inc
movsl
cmpsl
and
push
dec
insl
push
dec
push
jmp
ja
cmpb
push
int
ss
scas
sti
adc
dec
gs
gs
testb
lock
out
inc
in
scas
add
add
mov
lahf
xchg
sbb
sbb
xchg
inc
add
jl
and
jmp
cmpsl
iret
adc
and
imul
add
fisubl
mov
mov
mov
adc
aam
add
mov
mov
add
sub
pop
js
jge
ljmp
outsb
mov
jne
scas
fs
ret
adc
mov
cmp
mov
jne
outsb
test
mov
rclb
ljmp
hlt
movsb
push
xchg
xor
or
mov
push
or
jl
push
aaa
loop
xorb
cwtl
sbbb
ror
icebp
mov
cmp
pop
arpl
pop
cmc
stos
divb
cmpsl
jecxz
test
jne
orb
xchg
mov
adc
out
and
ret
mov
shrl
cltd
lods
sbb
ror
or
fsubrl
and
rorb
int3
mov
fstps
xchg
int3
and
and
lcall
cmp
mov
sub
xchg
das
fs
fs
push
insl
js
pusha
xchg
icebp
push
sbb
and
sbb
fs
ret
lea
lahf
mov
sbb
xor
movsl
fcoml
cmpsl
xchg
or
pop
mov
cmp
and
in
fwait
icebp
cmpsb
scas
mov
add
ret
xor
popf
rol
cmp
mov
xor
arpl
push
adc
test
stc
fxch
stos
mov
cmp
sub
shl
fcoms
lcall
ja
std
mov
fxch
jae
mov
cmp
call
sub
pop
xor
cmp
and
and
push
jnp
push
sti
xor
mov
cmp
or
or
incl
inc
lods
jg
ficoml
scas
dec
adc
movsb
pushf
jle
rorl
shl
push
fistpll
aad
dec
dec
xchg
js
mov
mov
inc
cltd
sysexit
ss
fwait
out
repnz
lret
arpl
and
or
or
ljmp
inc
call
outsb
outsb
decb
xchg
jbe
sbb
dec
or
insb
outsl
or
jne
adc
nop
rcr
or
das
xchg
xlat
sbb
fdivs
pop
xchg
cmp
in
xchg
jge
add
mov
sub
dec
test
or
xchg
nop
cmpsl
fisubs
mov
adc
adc
adc
aam
sub
push
jp
movsb
mov
out
lea
lahf
push
mov
bound
and
xor
cmp
or
pop
pusha
push
xor
jb
add
mov
imul
inc
jno
xor
pop
pop
mov
cmp
xchg
out
fs
xchg
loopne
xchg
ljmp
test
ret
pushf
repz
in
xchg
ficoml
test
fwait
ss
xor
bound
push
push
xchg
pop
std
push
dec
sub
adc
mov
or
std
mov
dec
mov
push
mov
ja
adc
rcll
mov
in
hlt
mov
mov
adc
fisubrs
loopne
cmc
shll
incl
jbe
mov
ss
mov
imull
hlt
and
test
in
leave
in
pop
sub
adc
sbbb
stos
or
jecxz
aad
stos
jbe
mov
adc
mov
mov
jbe
mov
jne
test
mov
rcrb
scas
loop
clc
sub
ja
loopne
dec
mov
jmp
neg
push
dec
add
testb
cmp
sbb
out
out
decb
mov
sub
fidivl
jg
fnstcw
lock
pop
lret
sbb
es
cmp
test
ret
cmp
xor
sub
xchg
cs
add
and
jne
pop
inc
xchg
mov
lcall
jmp
int3
pop
cmp
push
mov
jecxz
aaa
inc
sbb
lcall
and
jmp
jle
jne
scas
std
shlb
add
xchg
mov
mov
add
adc
insb
loope
pop
mov
push
shrl
sti
movl
fists
out
icebp
mov
mov
ret
xchg
xor
movsb
repnz
cmc
mov
je
xchg
insb
rorl
cmp
test
movsb
cmp
and
pusha
push
pop
jns
hlt
jnp
sti
jmp
scas
addr16
adc
test
lock
dec
ds
xor
fisubl
lret
sub
repnz
lcall
outsl
movsl
mov
push
xchg
adc
cld
adc
insb
out
bound
xchg
js
xor
jbe
imul
xchg
orl
das
icebp
jmp
mov
jmp
mov
or
mov
add
jno
inc
test
dec
popa
or
aas
xor
jl
shlb
jno
jl
mov
mov
cmp
imul
jl
push
out
jmp
push
xor
nop
jb
cmp
push
and
idivb
jae
jg
pusha
cld
fidivrl
cld
mov
mov
arpl
int
jbe
jmp
rcrb
jl
mov
aas
fists
or
inc
testb
pop
ret
jae
icebp
pop
mov
out
lret
sbb
adc
mul
sbb
mov
pop
fstps
xchg
js
dec
in
add
aad
lret
addr16
push
nop
push
dec
or
idiv
loop
leave
push
add
and
push
popa
adc
lds
mov
push
jnp
mov
frstor
mov
cmp
add
mov
pop
xorl
xlat
in
and
or
pop
test
lret
lods
inc
xor
xchg
filds
rcll
pop
int
in
fwait
xchg
sub
push
fwait
sub
sub
shlb
mov
test
mov
test
into
imul
jmp
out
push
pop
cmp
aad
mov
cmpsl
xchg
js
cmp
jmp
dec
sub
xor
sub
and
call
sbb
mov
cmp
aad
incl
out
add
into
push
mov
mov
mov
xchg
aam
xchg
cld
js
and
mov
rorb
and
insl
or
mov
add
int3
add
aas
inc
push
int3
sub
push
neg
jge
push
mov
iret
xlat
xchg
pop
jne
xchg
jp
dec
stc
inc
mov
fdivl
ror
iret
xchg
sub
adc
repz
adc
test
push
test
xor
loope
cmp
mov
add
notl
pop
fcmovu
xchg
scas
cmp
scas
nop
xchg
inc
sahf
mov
negb
adc
pop
jno
and
adc
leave
lock
inc
push
ret
or
pop
pop
sar
ja
add
adc
cwtl
cmp
nop
pop
cmp
dec
xchg
dec
pushl
sbbl
xorb
sbb
aaa
mov
adc
jbe
aaa
jbe
push
push
mov
cmp
jge
pop
je
push
inc
xor
ds
fucom
jg
mov
mov
pop
mov
xchg
jl
and
adc
out
inc
ret
inc
pusha
test
dec
xor
insl
adc
add
ja
ljmp
xchg
repnz
outsb
andb
adc
popf
sub
loope
ss
lods
adc
ds
mov
dec
inc
push
sub
mov
stc
dec
cmp
rorl
jbe
call
aad
or
mov
adcb
je
cwtl
loope
scas
addr16
sbb
popfw
in
push
js
dec
daa
dec
mov
push
adcl
sarl
sbb
xchg
fucomp
dec
xchg
call
cwtl
mov
ja
bound
push
outsl
or
cwtl
mov
fidivl
into
aam
in
mov
jecxz
jg
and
sbb
inc
test
out
add
jne
aad
out
dec
scas
aad
push
insl
push
mov
aaa
jae
gs
lret
test
in
xor
je
addr16
jno
mov
out
loopne
divl
xor
pop
cwtl
popa
jns
test
mov
rcl
push
add
xor
cwtl
add
clc
adc
aaa
sahf
icebp
sbb
jp
out
into
xor
or
ds
jecxz
dec
filds
pop
ret
hlt
inc
incb
dec
mov
sub
mov
cmp
jge
pop
jle
popa
mov
ror
dec
mov
jp
test
sbb
and
sub
popf
leave
pop
mov
add
cmp
inc
mov
sbb
mov
or
imul
mov
sbb
dec
sbb
js
inc
sub
push
mov
xchg
je
mov
adc
shrl
and
sub
and
ror
mul
lahf
add
jb
sub
jb
dec
insb
mov
into
push
pop
bound
bound
shll
test
ljmp
out
call
clc
aad
inc
or
test
popf
push
mov
xchg
cli
rol
shrl
fistpll
sbb
sbb
in
jnp
jno
pop
ret
sub
push
xor
in
dec
lahf
sti
xlat
in
stc
cltd
in
inc
leave
dec
inc
in
js
subl
mov
mov
push
push
outsl
enter
push
xor
mov
fildl
in
neg
aad
cmp
out
jb
pusha
jg
push
ljmp
int
adc
addr16
ds
fdivrp
sub
inc
dec
push
mov
imul
xchg
ss
out
mov
push
ret
mov
add
stos
inc
sbb
les
jp
inc
fdivrs
clc
data16
mov
arpl
mov
inc
push
jb
lods
arpl
xchg
or
test
loopne
sbb
outsb
lret
xchg
callw
jge
out
addr16
sarb
jae
jg
add
pusha
sub
mov
ds
sbb
outsb
int
call
rorb
sub
ffree
jb
xchg
mov
adc
mov
cmpsl
dec
cmp
scas
icebp
inc
mov
pop
ret
or
ret
add
xor
dec
mov
fwait
jl
push
adc
roll
cwtl
and
ret
test
test
or
arpl
gs
lods
or
xchg
jge
and
imul
dec
or
arpl
insl
mov
iret
scas
std
mov
rclb
add
std
mov
mov
in
scas
sbb
test
out
pop
fwait
icebp
or
push
cmp
iret
xchg
and
ficompl
mov
fwait
popf
mov
mov
xlat
pusha
xchg
sbb
das
dec
cmc
dec
and
fs
lret
lods
imul
mov
sbb
fiadds
or
call
mov
push
repz
cld
mov
cs
jo
inc
out
test
enter
and
sbb
out
sbb
scas
leave
mov
ret
fmul
xor
push
scas
loope
lahf
inc
xchg
dec
mov
fldcw
xor
adc
or
sub
mov
jbe
xchg
ss
fdivrs
sbb
outsl
in
jecxz
int
xor
mov
popa
lea
and
mov
dec
mov
lcall
clc
dec
imul
lods
notb
int3
insb
cmp
or
pop
insb
mov
xchg
mov
jnp
enter
pop
dec
imul
sub
int
cld
es
rclb
lods
cmp
jne
test
ljmp
je
jo
inc
cmpsb
out
jbe
push
mov
imul
outsl
cmp
test
inc
cmc
mov
push
icebp
mul
push
popl
pop
sahf
ret
dec
jo
push
jne
mov
mov
sbb
pop
sbb
dec
add
in
hlt
pop
or
pop
pop
lods
popf
push
aam
pop
ds
pop
out
pop
pop
aad
ss
push
lret
push
dec
call
mov
push
pop
scas
mov
gs
in
pop
xor
xchg
repz
mov
les
call
int3
ljmp
ja
outsl
clc
mov
add
fsts
mov
imul
dec
xchg
lods
rcrb
out
mov
inc
ret
xor
dec
pop
jmp
fsubrl
push
int3
xor
inc
cmpsb
jb
fwait
mov
mov
andb
sarb
pop
mov
jb
mov
sbb
jb
pop
mov
imul
push
test
xor
dec
fmuls
adc
pop
inc
mov
ja
pop
jb
gs
enter
aad
in
push
mov
cmp
pusha
sti
dec
jl
pop
sbb
enter
mov
mov
mov
jle
xor
lahf
notb
fiaddl
push
lock
mov
fidivl
and
cli
test
stos
mov
int3
add
test
outsl
pop
and
enter
stos
sub
or
and
mov
imul
lea
arpl
mov
rcl
pop
insb
xchg
and
stos
mov
inc
sbb
jnp
aad
psrlq
sti
sub
outsb
pop
add
jno
xchg
addr16
cmpsb
sub
sub
mov
xchg
pushf
or
arpl
dec
mov
lret
mov
add
pop
loop
fildl
int3
push
stc
lcall
pop
andl
negb
jae
pop
fsts
mov
xchg
lds
icebp
sub
or
dec
or
popa
stos
cmp
dec
mov
lret
loope
arpl
aaa
cmp
xor
add
xchg
mov
push
test
dec
in
loope
adc
pop
and
sahf
push
jbe
pop
dec
inc
sub
adc
push
mov
inc
loopne
push
jg
fsub
xchg
jno
sbb
stos
ds
add
inc
cmp
dec
or
mov
out
repnz
ss
sub
sbb
leave
cmovae
fisttpl
dec
test
inc
inc
dec
and
push
cs
or
mov
mov
mov
rorb
aas
ja
in
lcall
fucompp
fisubrs
jb
mov
push
or
mov
and
jp
nop
in
repz
push
insl
mov
mulb
rep
addr16
and
ficomps
test
lcall
mov
pusha
or
std
ret
pop
pop
inc
stos
aaa
lea
mov
push
adc
lret
in
aas
ljmp
inc
cmp
les
in
add
mov
dec
jb
jns
movsb
in
icebp
mov
cwtl
das
and
xlat
sub
jne
dec
push
cwtl
pusha
pusha
hlt
test
fmull
mulb
jge
ljmp
and
xor
xchg
sub
inc
add
ds
fdivp
popa
mov
negb
jge
cmp
ret
cld
jmp
rolb
mov
xchg
sub
sub
adc
pop
in
adc
rcrb
and
inc
jno
popa
or
mov
dec
addr16
mov
aas
sbb
xchg
rorl
xchg
icebp
lds
scas
push
push
test
lret
mov
mov
xor
enter
sub
rorb
sbb
mov
add
add
and
ficoml
xor
aaa
testb
out
mov
mov
sbb
lea
fldcw
insl
jb
mov
dec
and
fcomps
or
xchg
jo
pop
push
dec
mov
jb
xchg
and
ret
fisubl
movsb
int3
mov
push
mov
sbb
ljmp
dec
and
mov
add
xchg
stc
movsb
scas
pop
sbb
movsb
icebp
jmp
out
cli
and
mov
add
cmp
sbb
push
out
push
leave
test
repnz
or
xor
ficoms
shlb
sub
adc
cmp
mov
shlb
mov
sbb
pop
clc
test
or
loopne
out
and
and
imul
jb
mov
rcrw
in
cli
mov
sub
sbb
aas
je
cmp
or
int
leave
mov
add
inc
stos
into
push
jecxz
imul
xorl
push
and
xchg
add
mov
mov
inc
int
ljmp
sub
add
pop
and
inc
fidivrl
enter
mov
add
ds
in
stos
ret
jbe
test
cli
add
in
add
push
sbb
ljmp
ds
dec
lock
ljmp
scas
insl
jecxz
add
lods
dec
inc
push
or
pop
mov
or
add
test
lods
xchg
fs
stos
mov
xchg
pusha
sbb
or
add
jbe
cmp
mov
lods
or
pop
pop
scas
mov
mov
push
mov
xor
sbb
outsb
inc
or
cmc
pop
imul
adc
mov
or
dec
jbe
xchg
mov
adc
xor
mov
insb
cli
lea
stc
pop
loope
imulb
add
sarl
fnstsw
scas
pop
fdivrl
sub
lcall
pop
out
pop
dec
add
fistps
inc
ret
inc
adc
push
addr16
pop
int3
inc
xchg
xor
adc
ss
inc
pop
popa
or
sbb
mov
fs
sbb
and
jmp
adc
xorl
outsl
rclb
addr16
sub
inc
ljmp
and
sbb
imul
cmp
lcall
test
mov
loop
mov
int
mov
mov
inc
in
xchg
lea
pusha
pop
push
fwait
je
bound
nop
fsubl
out
fisubrl
inc
dec
int
jl
adc
dec
lods
repnz
mov
cmc
push
push
add
jmp
push
push
sub
jno
inc
cmp
xor
cli
add
push
inc
incl
arpl
dec
insb
repnz
xchg
icebp
mov
rcl
dec
notb
lock
lret
mov
rcrl
mov
lea
inc
testl
sub
xor
inc
daa
add
fbstp
inc
mov
inc
adc
push
jle
sbb
mov
or
xchg
pop
iret
adc
pop
add
adc
insb
adc
pop
stos
or
sub
repz
sub
jnp
xor
dec
inc
addl
arpl
adc
lcall
and
sti
je
inc
push
dec
xchg
into
jne
pusha
aad
sahf
and
pop
push
jle
adcl
sbb
push
cmc
sbb
stos
cltd
addl
stos
out
dec
lods
or
cmp
add
or
cld
outsb
cmpsl
push
loopne
arpl
in
jns
sub
xchg
xchg
push
sub
aad
movsl
test
in
aaa
jnp
xor
popf
inc
inc
sub
fidivrl
cmp
pop
xchg
rolb
jg
pop
jge
pop
ds
xchg
iret
and
dec
sbb
xchg
xchg
lret
mov
enter
xor
jns
pop
popa
mov
cmp
lcall
jb
cmp
and
mov
inc
jle
push
cmp
rcr
sbb
imul
push
xorl
popf
outsb
jmp
out
fdivrl
sbb
push
fcoml
mov
lret
outsl
jo
dec
sbbl
add
lods
xchg
sub
test
je
fidivrl
cwtl
pop
pushl
adc
and
sub
aas
mov
cmpsb
test
cmp
inc
sbb
and
push
push
mov
add
pop
inc
inc
cmc
mov
mov
repz
cld
das
fnstsw
dec
mov
das
cmp
mov
out
mov
mov
inc
jo
cmp
jbe
fcmovnbe
loop
add
push
sbb
call
sbb
pushf
or
mov
pop
mov
push
divb
sbb
das
lret
out
xchg
daa
dec
lahf
pusha
aad
cmp
sbb
mov
dec
arpl
sbb
mov
cmpsb
fwait
shll
xor
popf
fstps
jb
notb
imul
xchg
pushf
cld
mov
adc
clc
pushf
cmp
push
pop
ljmp
xor
js
dec
mov
xchg
jb
sub
icebp
movsl
imul
ds
insb
xlat
es
mov
mov
popf
dec
ret
push
sbb
sbb
xor
and
pop
jp
cli
inc
cmp
jnp
incb
fldcw
pop
jmp
inc
mov
repz
lds
mov
std
xchg
ljmp
mov
xlat
or
rcrl
out
loop
or
sarl
inc
rcll
or
push
in
mov
roll
push
mov
fnstenv
cmp
mov
dec
stc
dec
fiaddl
mov
jle
jg
jne
mov
or
mov
sbb
inc
idiv
xor
pop
add
cmp
push
sbb
and
cmp
bound
mov
dec
or
mov
fiadds
jo
sbb
inc
test
out
ret
sub
js
mov
js
and
mov
xchg
bound
push
jp
pusha
lahf
enter
sbbl
scas
pusha
xlat
out
in
jns
loop
or
repnz
int
insb
subl
popf
rcr
pushf
mov
mov
or
mov
sbb
loope
jl
xor
push
scas
mov
popf
jbe
test
add
fbstp
inc
scas
jb
or
test
test
out
aad
and
mov
mov
cmp
je
and
loope
jne
ss
iret
in
js
ds
arpl
inc
mov
mov
hlt
and
mov
cmpsl
cmp
pop
dec
xlat
xlat
mov
dec
push
call
call
lock
fwait
cmp
cwtl
js
out
add
nop
and
out
dec
or
xchg
jae
out
es
add
xor
out
jecxz
sti
xor
cmpsl
fistl
mov
add
or
pop
cmc
lods
sub
and
xor
iret
mov
ret
nop
stc
dec
sbb
mov
cmp
sub
xchg
push
scas
cs
sub
pop
add
stc
gs
sarb
hlt
mov
mov
push
cwtl
sub
int3
xchg
mov
popf
sub
sbb
inc
enter
leave
testb
je
and
call
rcrl
jnp
jmp
jg
inc
adc
mov
pop
jne
add
das
pusha
loopne
lods
out
xchg
outsb
mov
adcl
rcll
add
repnz
xor
add
out
push
mov
push
popf
or
es
mov
daa
xor
rep
lea
in
popf
pop
jg
jne
sub
adc
out
std
in
mov
je
rorb
inc
test
lcall
out
or
test
cltd
lods
xchg
sahf
adc
aad
das
pop
push
add
mov
cmpb
push
js
mov
aas
mov
inc
mov
push
mov
scas
push
xor
sbb
sbbl
sub
mov
in
and
xchg
sub
outsb
sbb
cmp
mov
xor
adc
add
in
popa
dec
mov
ret
icebp
xlat
mov
loope
jl
mov
popf
push
outsl
aaa
lret
pop
ds
lods
pop
fisubrs
inc
sub
or
out
imul
fnstcw
xor
movsb
icebp
dec
cmp
cmpl
push
add
xor
xor
adc
adc
cmp
adcl
outsb
rclb
lret
stc
cmp
fcomp
aaa
push
lods
mov
sbb
xchg
ret
sub
fisubrs
stc
lret
dec
adc
inc
jno
aaa
cmc
adc
mov
add
loop
movsb
xchg
jae
and
jnp
cltd
pop
jge
pop
mov
inc
sbbl
popf
inc
js
arpl
dec
adc
dec
ja
push
cmp
add
push
shrb
insb
mov
pop
add
xor
jl
scas
cmp
dec
in
xorl
popa
js
arpl
dec
pushf
add
add
mov
rorb
dec
adc
push
mov
jg
push
xlat
xchg
shll
jle
jbe
mov
cmpsl
xor
push
mov
lock
dec
xor
lcall
mov
xchg
mov
sti
stos
add
dec
and
call
mov
std
sub
xchg
xchg
mov
sub
jle
cmp
xor
jno
sub
mov
mov
rcrl
aas
xchg
jns
xor
mov
cmp
mov
les
jecxz
jno
jmp
sbb
iret
sbb
ljmp
jno
test
push
lds
aaa
dec
push
push
out
sub
lods
jns
imulb
pop
xor
or
or
dec
hlt
xchg
stos
ljmp
mov
aaa
pop
rcrb
mov
dec
pusha
cmp
adc
fists
in
jp
test
xchg
pop
cltd
ret
lds
stos
or
inc
pushw
push
add
mov
pop
fsts
cmp
test
out
imul
gs
or
cmpsl
inc
pop
notl
mov
cmc
out
fadds
add
aaa
pusha
cmpsl
pop
iret
in
ljmp
not
lret
icebp
hlt
pop
sub
jl
imul
adc
imul
jne
in
cld
sti
das
in
add
lahf
push
hlt
or
and
sub
insl
int3
aad
lods
cli
push
pop
in
cmpsb
mov
fstl
jo
sti
cmp
in
ja
add
fwait
ss
jp
test
cmpsl
cmp
mov
repz
pop
jle
xorl
cwtl
daa
mov
mov
mov
adc
or
addr16
ds
arpl
cs
lret
divl
jo
sub
fcoms
mov
loop
call
xchg
fnstsw
test
je
insb
jp
les
loopne
mov
cld
inc
sti
frstor
popaw
dec
subb
cmpsl
fcomps
decb
rcrb
in
mov
loop
jecxz
es
xchg
addl
xchg
pop
mov
push
cmp
ljmp
rorb
in
cmpb
fwait
jnp
rcll
add
hlt
sbb
ljmp
lahf
add
lods
push
outsb
mov
out
dec
loopne
pop
xchg
push
cmpsb
lods
fcmove
adc
inc
ret
dec
popa
mul
inc
xor
xchg
sbb
loop
loope
pop
or
xor
sarl
inc
pop
or
xor
add
test
int
sub
fidivrl
cld
xor
daa
addr16
add
mov
sbb
mov
mov
dec
lods
xor
cmc
into
xchg
sbb
icebp
sbb
jg
mov
dec
je
cmpsb
pop
push
add
arpl
xor
in
stc
lods
sti
push
call
faddl
mov
pop
sti
sti
jns
int3
jb
xchg
pop
sarl
out
jnp
in
or
js
lret
arpl
jae
xor
jne
inc
cmp
add
ds
insb
negl
push
mov
leave
out
adc
mov
mov
lds
loope
popa
adc
add
xor
xor
in
imul
lock
and
fcmovne
add
mov
sahf
into
and
push
or
mov
pusha
cwtl
jae
mov
xor
cld
mov
cli
imul
test
or
jo
rorb
and
je
add
hlt
fcomi
or
mov
test
jno
or
xchg
movsb
sti
shrb
xchg
xchg
adc
dec
mov
lcall
out
xor
aaa
jns
jae
cmc
pop
out
push
push
cld
pop
xor
inc
std
dec
clc
std
xchg
stc
add
imul
or
push
inc
mov
clc
rcll
mov
jle
popa
lds
iret
sub
sbb
sbb
iret
sti
or
in
mov
bound
mov
mov
xchg
loop
pushf
sub
daa
stos
arpl
xchg
xor
ljmp
inc
cmpsb
add
mov
out
call
add
lods
cmpsl
push
fildll
mov
xchg
test
fwait
xor
iret
mov
repnz
pop
mov
jmp
in
ljmp
mov
arpl
popa
sub
xor
and
inc
and
pop
idivb
lret
fbld
mov
jae
cmp
adc
scas
loopne
in
push
inc
movsl
stos
ficompl
push
mov
sub
imul
mov
sub
data16
dec
rcrl
sbb
ljmp
jne
out
into
hlt
inc
jbe
add
fs
mov
lds
cmp
pop
enter
or
sbb
mov
sub
cltd
addr16
rcll
jae
mov
push
jae
test
fucomip
mov
nop
daa
fildll
mov
insb
test
jbe
test
pop
lahf
sbb
push
fbld
sub
arpl
mov
pop
int
rolb
cmp
xchg
arpl
dec
cmpsb
movsb
mov
mov
jle
lock
pop
sub
push
pop
xor
mov
loope
add
lea
mov
mov
frstor
add
lods
push
call
dec
loop
adc
jle
inc
lock
imul
adc
and
inc
add
mov
movsb
mov
ficoml
jge
pushf
aad
stos
mov
pop
orl
dec
jbe
addr16
outsb
or
mov
push
cs
xchg
cli
es
inc
dec
cwtl
loop
out
pop
and
sub
jb
or
hlt
outsb
jne
jno
inc
into
outsb
cmpsl
mov
mov
cmp
in
push
adc
dec
push
xchg
icebp
mov
arpl
rcll
mov
mov
mov
pop
adc
loop
lods
dec
sbb
rcl
fsubl
xor
je
stos
sbb
pop
bound
shll
xchg
mov
push
mov
inc
popa
dec
mov
and
jge
xorb
jae
imul
xchg
mov
fisttpll
outsb
out
push
jp
sahf
cmc
nop
je
ja
adc
push
scas
push
jp
jnp
pop
test
and
mov
into
mov
iret
cli
adc
popa
adc
jmp
popa
mov
pop
push
dec
adc
out
aam
jae
fs
clc
stc
push
lea
dec
lock
aad
es
cmpsb
mov
ja
cmp
xchg
jne
scas
stos
fmul
xor
jb
dec
push
cmp
xchg
insl
addl
sub
pop
dec
add
ret
mov
dec
cwtl
in
and
pop
mov
cmpsb
jecxz
cs
test
jle
lds
push
addps
push
dec
pop
push
pop
lret
pop
dec
dec
out
adc
jp
in
pop
and
daa
test
subl
xlat
jle
jo
xchg
lret
xor
adc
imul
mov
mov
pop
sub
push
jl
stos
mov
int
and
jne
sbb
inc
jecxz
dec
faddl
and
xchg
mov
idivl
jnp
xchg
lods
mov
push
fadd
repnz
fistps
stos
lahf
mov
out
lret
push
hlt
ret
in
cmp
jge
jne
mov
addr16
jo
mov
and
cmc
cmp
or
cli
hlt
mov
fisubrs
sub
adc
pusha
and
std
push
dec
jle
mov
aad
mov
pop
rol
jae
push
shll
push
jne
lds
cmp
hlt
in
mov
adc
cs
outsb
mov
mov
sbb
xchg
sti
push
xchg
xor
loope
cmpsl
imul
test
sbb
sbb
ljmp
fwait
pop
add
jg
lods
push
lret
adc
push
sub
ret
and
push
aaa
mov
out
shlb
sbb
iret
sbb
mov
int
jecxz
repz
add
adc
test
fmuls
and
mov
dec
ss
pop
push
push
or
aaa
lret
sbb
test
mov
imul
hlt
xlat
fnstcw
imul
jge
lea
mov
adc
loop
ds
mov
cmp
fnstcw
fwait
aad
push
pop
sub
ficomps
outsb
sub
push
arpl
stos
lahf
lahf
daa
sbb
or
xchg
lret
and
sub
div
inc
sub
sbb
xor
ret
lods
aas
mov
and
stc
pop
xchg
mov
sub
mov
cmp
mov
add
cmp
sub
push
test
test
mov
add
out
jecxz
std
cwtl
movsb
add
fsts
jle
mov
fs
jns
fisttpll
add
pusha
push
imulb
pusha
popa
leave
xor
iret
outsb
js
fldln2
push
jns
in
jp
cmp
sbbl
dec
fcoml
lahf
lret
icebp
test
adc
sbb
adc
xor
xlat
xor
push
jb
fldt
jnp
dec
out
jb
pop
out
xlat
fisttps
xchg
out
or
leave
iret
sub
jg
add
mov
sub
mov
inc
jae
bound
dec
fld1
add
or
jae
and
das
data16
jbe
test
in
xchg
dec
dec
cld
push
xchg
pop
or
mov
test
mov
xchg
fdivrs
cmp
out
cltd
lret
sub
scas
data16
int3
jmp
mov
push
lods
pop
push
in
and
shl
addr16
sti
xor
cld
pop
lahf
or
repnz
out
pop
cmp
bound
in
cs
xchg
stos
adc
mov
test
mov
push
subb
jge
xor
dec
imul
jno,pn
fidivrl
movsb
test
xchg
add
std
repnz
jns
sarl
es
cld
cwtl
push
push
jge
out
push
xor
sbb
jmp
das
in
ljmp
pop
xchg
dec
inc
leave
sbb
lock
mov
pop
xor
or
sbb
dec
sbb
sbb
jb
pusha
xor
mov
and
filds
mov
jecxz
pop
mov
mov
adc
imul
shrb
nop
iret
orl
cmp
dec
inc
imul
test
inc
jmp
int
adc
sbb
mov
push
sahf
mov
push
mov
out
ret
in
roll
sub
hlt
fwait
loopne
jnp
cltd
insb
inc
pop
inc
fisttpl
in
adc
loopne
mov
fnsave
fmulp
sbbl
subb
nop
repz
mov
adc
xlat
jno
pop
mov
xchg
jo
mov
test
dec
push
into
and
lock
in
push
adc
ja
mov
inc
lret
push
jns
popa
jbe
cli
stc
jecxz
pop
in
push
insl
inc
sub
and
int3
ss
ja
add
sbb
jge
stos
mov
adc
aam
js
jnp
pop
sahf
dec
mov
or
mov
movsl
ret
inc
jle
fistpl
leave
out
fwait
xchg
pop
cmc
leave
insl
test
out
sbb
dec
mov
insb
push
sub
in
into
adc
push
cmp
into
rcrl
lods
and
sbb
pop
sbb
xchg
and
fldt
xor
add
fisubl
cltd
and
sbb
sub
in
jle
mov
mov
adc
iret
imulb
xchg
idivl
mov
test
shlb
lods
push
loopne
pop
test
pop
xchg
out
and
or
icebp
xchg
xor
jo
divb
leave
lods
insb
stos
sti
mov
aam
mov
xchg
ror
rorl
inc
cwtl
and
and
lock
inc
test
arpl
mov
cmp
je
jno
test
in
adc
inc
fs
jbe
sbb
sub
or
loop
sub
outsl
cmp
xchg
dec
sub
add
adc
sub
addr16
cltd
jno
test
daa
imul
stos
cs
outsl
mov
jmp
lcall
outsb
and
iret
sbb
movsl
jge
inc
push
push
pop
lock
movsl
call
adc
shrb
jle
loop
repz
push
pop
jmp
push
xchg
cld
pop
in
cmp
subb
inc
popaw
push
outsb
xchg
aas
fsubrs
insb
imul
add
add
dec
aad
stc
jbe
repz
test
jae
stos
rcrl
cmc
lret
orb
sbb
leave
sahf
pop
in
arpl
mov
lcall
sbb
xor
lock
xchg
test
mov
xchg
or
dec
ret
imul
add
xor
inc
cs
jo
fs
pop
in
pop
repz
pusha
xchg
mov
addl
sbb
pop
fs
lods
inc
sub
inc
adc
push
pop
inc
mov
xor
add
jl
js
fmul
xchg
push
test
icebp
push
fimuls
lcall
jnp
cmp
jno
aad
dec
in
adc
add
test
popa
ja
notl
xchg
pop
imul
lret
sub
repz
dec
mov
xchg
mov
lahf
and
inc
push
mov
mov
and
mov
or
loope
push
fldcw
aaa
mov
add
aaa
lret
int
pop
sub
pop
shll
adc
pushf
pop
fs
mov
loope
xor
lcall
mov
add
int
lods
adc
and
sbb
dec
sub
dec
and
push
mov
dec
xchg
sub
outsl
aaa
mov
add
enter
mov
imul
fisubrs
inc
push
jb
mov
leavew
stos
in
jb
mov
inc
je
ss
xor
pop
repnz
jecxz
push
insl
cmpl
in
movsb
lock
pop
into
sbb
push
sbb
xor
insb
xor
mov
inc
mov
push
enter
pusha
mov
xchg
repz
mov
dec
aad
mov
cmp
mov
mov
cld
iret
fisttpll
lods
gs
insb
outsl
push
js
jo
loopne
in
mov
lods
sbb
dec
inc
dec
dec
test
test
ret
fnstsw
jge
pusha
and
sub
mov
push
jmp
push
and
mov
push
clc
dec
insb
xchg
push
ficoms
dec
dec
ret
and
mov
ret
cmpsl
pop
mov
jecxz,pt
cmp
xchg
push
add
bound
push
mov
rorl
aas
fistl
movsl
les
fdivl
in
incb
out
mov
mov
mov
fcomp
jg
lret
mov
cmpsb
mov
cltd
test
cmpsb
push
cmp
or
shr
dec
push
lds
xlat
push
in
cmp
ret
sub
ds
in
cwtl
insl
test
inc
sbb
cmp
push
mov
adc
pop
jb
fstpt
dec
out
stc
out
cmp
ficompl
pop
iret
xor
sbb
xor
xor
ficompl
pop
xor
mov
sti
mov
push
jmp
pop
or
nop
push
jae
lret
lods
lret
sub
mov
sbb
ss
adc
int
xlat
ret
mov
jmp
outsl
cmp
mov
test
in
fs
push
sub
lret
negl
loop
rol
cltd
lods
mov
hlt
dec
test
jns
xlat
sbb
lret
dec
addr16
ficoms
cmp
xor
push
mov
scas
fucomp
test
incb
mov
aad
add
xlat
push
push
fcmovbe
mov
leave
in
loop
xchg
push
push
and
mov
or
dec
ss
icebp
icebp
mov
out
lahf
and
adc
fwait
xchg
inc
adc
mov
lcall
pop
mov
sbb
jbe
adc
incb
int
pop
cltd
inc
jbe
or
bnd
or
hlt
ljmp
orb
add
mov
and
pop
in
les
in
jp
enter
stc
jae
sbb
repz
shl
iret
lock
add
imul
ret
xchg
pop
aam
mov
jecxz
jno
shl
pop
addr16
pop
in
test
popf
xchg
loopne
jb
stos
ds
popf
dec
jbe
lret
fsubrl
pop
test
pop
and
in
ret
inc
int3
idivb
repnz
mov
adc
mov
repnz
and
xchg
cmpb
test
cwtl
adc
pop
mov
jl
jno
lahf
or
insl
fsubl
xor
push
mov
test
add
dec
not
popa
sub
jae
pusha
stos
push
sub
iret
inc
ds
ljmp
push
cmpsl
aad
rolb
std
test
sbb
dec
dec
mov
pushf
fbstp
adc
sbb
xor
jle
shrb
jno
sub
xchg
pusha
push
hlt
xor
inc
popa
decb
adc
add
push
push
ljmp
jmp
rcrl
orb
mov
int3
cmp
jb
test
fs
mov
cmc
arpl
xor
scas
pop
hlt
lcall
nop
sarl
fdivrs
fisttps
scas
in
sub
and
adc
cmpl
mov
scas
fnstenv
and
mov
cmp
in
scas
pop
push
sub
in
stc
clc
add
inc
jae
inc
push
fucomp
inc
push
jecxz
movsb
pusha
inc
lods
int
push
enter
into
or
dec
xchg
lods
scas
add
sub
mov
push
dec
clc
jne
xchg
mov
sbb
add
sbb
lods
mov
imul
cmpsb
adc
movsb
dec
adc
dec
cltd
enter
into
hlt
cmp
mov
bound
or
out
pop
sbb
pop
jb
fistl
sbbb
imul
clc
or
mov
sub
or
stc
mov
aas
push
xor
mov
lods
mov
jnp
xchg
add
test
jno
ljmp
cltd
cmp
icebp
fsubs
cmp
mov
fcomi
inc
lds
aaa
loopne
lcall
adc
inc
push
je
xor
jns
fwait
mov
lea
mov
push
dec
dec
mov
xchg
pushf
in
jle
dec
cmp
fwait
outsl
and
sub
adc
mov
mov
and
je
cltd
shll
cmp
push
xchg
imul
out
imulb
addr16
pop
stos
inc
dec
cmp
cmpsl
int3
sbb
inc
inc
pop
sbb
jo
lret
mov
jae,pt
psubb
sub
adc
out
cmpsb
jl
or
push
addl
out
loopne
xchg
pop
je
dec
jge
xchg
sub
mov
pop
test
pop
cmp
or
in
adc
ss
add
and
nop
ror
push
mov
imul
imul
gs
cli
out
cmp
in
dec
or
in
inc
insb
cmp
xchg
fwait
inc
insb
pop
mov
jecxz
insl
stos
add
jle
mov
mov
add
jo
push
insb
push
jo
and
out
cmc
aas
xchg
cmc
add
sub
ret
pop
pop
fldt
cmpsl
int
pop
sahf
rcrb
jns
rcll
sbb
test
fidivs
push
ljmp
xchg
loopne
std
inc
push
jae
or
int
aad
stc
cmp
fs
or
pop
fbstp
xor
mov
js
in
xor
imul
sub
push
out
loope
sbb
adc
stc
subb
ficoml
shl
lcall
lock
jl
ret
outsl
test
fisubl
cltd
inc
mov
adcb
dec
or
lods
jp
lods
mov
sbb
repnz
add
jo
movsl
insl
jo
shll
ljmp
mov
stos
cwtl
dec
jae
xchg
cmp
jo
lea
ss
pop
jl
push
ss
insl
or
pop
js
xor
fsubs
mov
xor
aad
dec
addr16
mov
orb
pop
cmp
outsl
cltd
jl
add
xor
imul
push
cltd
pop
or
ret
xor
cltd
mov
insl
pop
fs
stos
jl
sbb
arpl
in
cmp
mov
insl
xlat
imul
fldlg2
sbb
push
jmp
sahf
add
cmp
loop
xor
adc
faddl
mov
xor
outsl
sbb
dec
outsb
aam
cmp
aas
daa
js
in
inc
outsb
ljmp
stos
jne
es
mov
cmp
enter
mov
data16
adc
out
in
shll
pop
sti
mov
cmp
sahf
and
faddl
mov
and
lods
jnp
mov
push
stc
push
test
ja
xlat
pop
jle
stos
shrb
mov
sbb
mov
pusha
jge
call
ret
or
ret
gs
in
loope
imul
mov
scas
push
ds
mov
clc
dec
mov
scas
mov
pop
jp
nop
inc
jmp
sbb
adc
lret
and
lods
movsl
sbb
in
lds
mov
pop
out
mov
pushf
pop
das
movsb
push
lods
mov
inc
aas
dec
mov
addr16
inc
test
jno
decb
rolb
int3
incb
das
fwait
mov
lret
shrb
outsb
imul
xor
lds
in
imul
pop
pop
pop
jno
ljmp
in
fwait
cmp
out
cmc
test
hlt
ret
int
xchg
bound
test
les
xlat
pop
stos
test
or
lock
out
sub
hlt
lea
sbb
lock
lods
and
ret
mov
push
mov
outsl
cmp
add
xor
lea
mov
fcomip
or
in
jb
sti
lret
sub
dec
pop
das
ljmp
scas
mov
mov
or
xchg
stc
shlb
push
xchg
mov
mov
shr
stos
jge
sub
cmp
in
xchg
imul
and
loope
push
dec
dec
cmpsb
ja
sti
out
mov
mov
and
xlat
push
pop
out
dec
inc
gs
push
mov
in
cs
jnp
adc
xorb
dec
pop
and
aaa
pop
insl
scas
outsb
sbb
imul
sbb
sub
cmc
je
push
jo
shrl
outsb
daa
mov
out
mov
jbe
xchg
jmp
cmp
push
imul
shll
mov
jne
jo
loopew
jns
or
dec
pop
test
divl
stc
push
mov
push
sarb
push
dec
aam
xor
int3
mov
pop
xlat
push
lahf
cld
pop
movl
mov
inc
dec
jno
vshufps
popa
fdivl
mov
mov
pop
daa
cmp
sub
sbb
inc
adc
push
cmpsl
out
fcmovu
jl
push
push
push
sbb
or
into
aaa
push
or
call
cmp
repnz
or
add
or
andl
inc
stos
dec
xor
popf
sub
push
data16
in
xchg
aaa
aam
lret
lock
stos
mov
jns
and
and
mov
sub
ret
lcall
cli
ljmp
add
push
xor
add
pop
mov
insl
lcall
ja
inc
add
fwait
stos
aaa
insl
mov
dec
push
int3
and
repnz
pop
sbb
push
jne
or
adc
cmp
pop
mov
cmp
adcb
aam
sub
cli
fisttpl
ljmp
mov
mov
mov
dec
cmpsl
and
les
or
mov
sub
ja
pop
jl
sub
shrl
mov
mull
cld
movsb
inc
daa
adc
call
popf
jg
mov
pop
inc
add
loopne
arpl
dec
movsl
sbb
fcom
xchg
stos
out
idivl
mov
pop
pop
push
mov
call
mov
mov
arpl
jl
sbbb
xlat
dec
pop
mov
lods
dec
sub
xchg
xlat
fistpl
in
xchg
add
push
dec
xlat
cmp
push
mov
lods
out
push
adc
scas
xchg
sbb
sub
cwtl
mul
mov
aad
xor
mov
stos
fisubl
jns
or
outsl
out
in
xorl
xchg
js
pop
les
xlat
xor
je
sbb
adc
outsl
repnz
je
add
int
mov
mov
add
lock
xor
rorl
lea
idivb
push
jmp
mov
stos
fisttps
in
cmp
sub
shl
adc
dec
mulb
xor
in
mov
icebp
imul
cmp
mov
sbb
mov
shrb
out
pop
xchg
fidivl
test
inc
in
push
or
call
add
out
cli
clc
or
nop
pusha
or
jl
pop
jnp
xchg
lret
mov
mov
scas
scas
pop
mov
cmp
xchg
adc
leave
sub
sub
mov
inc
inc
cmp
std
ljmp
push
fwait
in
and
add
sti
insl
xorl
xchg
push
pusha
or
pop
pop
stos
in
fsub
fcomi
scas
iret
mov
cltd
dec
jmp
sbb
and
cwtl
pop
fnstenv
lds
cmpb
test
or
or
stos
in
jmp
lahf
sbb
mov
xor
or
mov
scas
int
daa
mov
fsub
out
popl
movsl
inc
inc
mov
jae
jle
loope
clc
rcrl
push
push
pop
pop
dec
aad
jnp
jmp
jg
jb
in
pop
or
outsl
cli
sub
out
push
or
test
or
scas
fucomi
xchg
in
loop
clc
mov
add
xor
xor
sub
stos
into
and
leave
out
or
nop
or
mov
leave
arpl
mov
pop
sub
cmp
ss
pop
fistpll
cmp
mov
xor
add
pusha
icebp
dec
mov
mov
mov
cmc
ds
dec
inc
lea
sbb
cltd
shl
dec
or
test
in
movsb
or
pushf
sbb
divb
out
mov
cmp
aas
loope
jne
outsb
lea
sub
jnp
movsb
mov
add
jo
jae
das
push
inc
jl
jb
lds
js
dec
test
mov
cmpb
inc
xchg
mov
shlb
je
lods
fidivrl
out
push
mov
mov
movsb
pop
iret
sar
mov
into
lahf
movsl
mov
popa
imul
or
inc
fcmovbe
sbb
xor
shr
in
iret
jmp
enter
outsb
divb
fsubs
sub
mov
adc
jnp
imul
adc
mov
pop
shrl
sub
ss
cmp
ja
dec
cmp
lret
insb
sbb
xchg
pusha
fldenv
leave
loopne
dec
fnsave
xchg
data16
push
sarl
sub
sub
xchg
loopne
mov
sti
pop
je
jne
push
fnstsw
clc
adcl
push
ljmp
xchg
or
ss
rclb
sbb
adc
sbb
js
aas
adc
outsl
movsb
les
xor
and
scas
mov
and
loope
inc
mov
iret
dec
enter
bound
test
mov
sub
enter
sbb
dec
iret
mov
push
icebp
pop
fiaddl
out
xchg
mov
jg
sub
daa
jge
cmp
push
inc
inc
xor
push
push
pop
in
pop
mov
dec
push
mov
das
jb
xor
lahf
add
sub
in
into
fadds
addr16
or
xchg
rorb
outsl
cmp
or
push
dec
shlb
loop
xor
shlb
outsb
sub
fimuls
lea
jo
js
mov
mov
mov
ficomps
jl
lcall
push
cmc
and
jne
scas
nop
pusha
popa
dec
rorb
and
fstl
push
daa
push
mov
jp
or
cmp
sbb
out
sbb
pop
leave
cmc
mov
mov
std
fdivrp
push
mov
lods
into
add
xor
mov
sbb
addb
ljmpw
js
sub
xchg
adc
push
sahf
je
push
mov
mov
jno
imul
jo
xor
in
cmp
movsb
mov
dec
jmp
dec
lods
cmp
aas
and
test
mov
pop
rcl
pop
pusha
push
jl
das
leave
insl
cli
cld
aas
or
shr
xor
mov
sub
jb
scas
or
pop
fstpt
js
add
jae
or
stos
inc
leave
nop
push
and
xor
out
fs
jo
js
cs
es
jae
mov
mov
cmc
fsubp
inc
das
mov
jge
mov
dec
inc
icebp
lret
xor
mov
int
and
and
out
cmp
push
jmp
jg
sbbl
xchg
les
lds
pop
cwtl
mov
jecxz
pop
call
out
mov
ret
jo
mov
mov
dec
pop
jg
dec
ljmp
pop
fstp
cmc
pop
lahf
sbb
movsb
sub
aam
shll
add
lret
flds
outsl
mov
orl
into
int
push
cmp
mov
dec
test
or
or
and
in
jo
hlt
jg
test
ror
mov
popl
push
jbe
jns
loopne
sbb
pushf
mov
fwait
pop
dec
push
movsb
or
sbb
pop
adc
xor
leave
movsb
aaa
fiadds
cmp
data16
movsb
fwait
lahf
aam
sbb
pop
jmp
jb
call
cmp
inc
arpl
mov
lahf
scas
hlt
js
xchg
sbb
pop
xchg
xchg
jbe
jae
pop
test
pop
xchg
ret
ret
xchg
lahf
push
pop
xchg
dec
ss
jno
arpl
mov
and
leave
fisttps
jnp
and
jp
clc
addr16
orl
add
lods
shlb
mov
ret
dec
inc
mov
test
into
jno
xor
sti
and
nop
jae
xor
push
stos
popa
jecxz
stc
lret
mov
inc
inc
inc
push
cld
push
imulb
and
sbb
adc
mov
hlt
lret
pop
add
fisubl
insl
xor
aas
or
and
xchg
bnd
xor
xor
stc
push
loop
cmpsl
pop
inc
and
or
mov
xchg
mov
out
sbb
rcrl
inc
outsb
mov
mov
mov
and
rcrb
in
pop
add
out
pop
and
dec
mov
xchg
inc
lret
int3
push
ret
push
mov
mov
jbe
icebp
in
lret
loope
cmovg
jb
lock
inc
mov
dec
jnp
sub
jbe
mov
out
jns
lds
mov
mov
lea
inc
sub
test
push
lea
or
jb
xchg
inc
lods
mov
sar
adc
inc
lcall
inc
movsb
in
scas
aam
mov
je
stos
dec
mov
sub
out
hlt
into
call
mov
lods
scas
out
imul
xchg
notb
pop
mov
insb
test
pop
jb,pt
mov
adc
rcll
shrl
and
inc
sarl
jne
mov
rclb
add
lret
scas
test
xchg
push
mov
test
fsts
rcll
adc
cmc
ljmp
inc
ljmp
jne
stos
push
xchg
sti
xchg
cmp
jg
mov
mov
mov
lods
data16
int
mov
mov
scas
std
or
add
hlt
jne
adc
inc
repnz
pop
ljmp
pop
push
lret
aas
rcr
inc
mov
imul
jecxz
jecxz
call
popf
mov
sub
or
xchg
loopne
popa
lea
and
aam
dec
dec
xlat
dec
js
insb
jge
leave
sbb
sbb
sub
out
aam
sahf
repz
xlat
loopne
je
std
push
push
and
push
rcrb
push
or
popf
nop
mov
sbb
sbb
jl
aad
push
stos
fists
xchg
jae
imul
ret
int
lock
dec
ja
cmp
xchg
sub
pop
and
jb
dec
je
outsb
xor
jb
fisubrl
jnp
pop
iret
addr16
pushf
jae
iret
aaa
and
mov
fdivrl
jge
imul
outsl
or
xor
sub
jno
and
mov
movsl
mov
push
lock
push
xchg
mov
inc
imul
adc
nop
repnz
aas
sub
mov
nop
jle
in
mov
add
repz
xor
mov
dec
pop
mov
mov
data16
dec
ljmp
xchg
xchg
aas
in
jne
dec
mov
mov
in
cld
dec
add
je
cltd
xchg
and
test
push
dec
subps
ja
ja
xchg
imul
cmp
mov
pop
mov
in
cmp
arpl
pop
comiss
push
sbb
pusha
inc
and
bound
fistps
adc
orl
les
push
in
dec
lods
movsl
jno
mov
jg
dec
aad
dec
shr
jno
mov
mov
lea
and
in
stc
xor
xchg
jnp
or
dec
dec
bound
xor
lahf
push
insb
in
mov
cltd
push
or
pop
lods
mov
and
sub
insl
je
lods
jg
sarl
fwait
sahf
push
jle
rcrb
scas
xor
ret
push
sahf
adc
adc
mov
out
lret
sub
insb
fnsave
bound
adc
aad
add
lods
not
push
int
and
adc
lea
ljmp
rorb
sub
push
xor
xchg
and
popa
jl
push
jnp
pop
xor
push
lahf
push
push
sub
xchg
repnz
stc
addl
je
insb
mov
and
xor
inc
lret
outsl
dec
inc
ljmp
sbb
xlat
sahf
daa
or
sbb
int
push
jo
mov
ret
add
add
test
dec
ja
in
pop
shlb
fbstp
and
xor
lea
nop
into
mov
or
mov
jbe
cmpsb
sti
jns
jae
fwait
mov
fidivrl
xchg
mov
and
jmp
daa
data16
repz
shrl
addr16
sarl
sahf
add
lret
mov
push
mov
subl
and
mov
mov
mov
jmp
jo
xor
xor
push
aas
incl
in
push
or
and
push
pop
inc
xor
inc
or
mov
lea
rolb
pop
or
mov
call
pop
mov
sub
lahf
imul
fs
push
repnz
aad
sub
imul
xchg
rolb
test
out
arpl
enter
xchg
or
dec
cmp
out
push
push
mov
mov
clc
aaa
mov
push
mov
stc
jl
sbb
inc
mov
jns
cli
ja
sbb
repz
movsb
test
rcll
push
pop
adc
arpl
lea
test
push
dec
push
mov
in
mov
fmuls
adc
das
mov
int3
or
and
outsl
dec
jl
mov
test
add
and
dec
fwait
jno
cmpsl
sahf
cmp
out
push
cmp
mov
sub
push
ss
inc
inc
and
xor
push
pop
cmpl
rclb
mov
mov
imul
xor
inc
pop
dec
or
loope
insl
pop
cmpl
mov
into
push
sub
sub
div
xchg
xchg
or
iret
loop
or
dec
out
imul
or
pop
mov
test
xor
inc
ds
pop
cmp
jnp
jb
push
inc
movl
mov
loop
scas
das
sub
push
fstpl
mov
adc
aaa
jmp
adc
aam
xchg
ja
xchg
xor
stos
jg
dec
fsqrt
pop
pushl
lret
xchg
jae
scas
inc
pop
jnp
ret
scas
cmp
ja
lods
mov
mov
cltd
pop
out
mov
mov
inc
popa
inc
dec
xchg
xchg
dec
cmp
cld
mov
int3
sbb
mov
and
jns
mov
ret
movsl
andl
push
push
cwtl
add
pusha
ljmp
loopne
imul
sbb
enter
adc
ds
pusha
lcall
and
cmp
rorl
add
jns
jge
mov
push
inc
pop
sbb
jns
cmp
sbb
aas
cmp
or
icebp
inc
movsl
mov
clc
xor
or
pop
out
mov
lcall
pop
fdivrl
mov
jne
xchg
mov
adc
popa
cmp
mov
add
adc
dec
and
lahf
out
sahf
aas
push
lret
icebp
packsswb
sbb
cmc
cmp
adc
push
push
pop
std
adc
aam
insl
insl
ljmp
in
out
push
and
lret
mov
lods
clc
test
xchg
sbbb
ds
cmp
lea
mov
cmp
idivb
fistl
prefetch
push
cld
and
jne
pop
inc
int3
sub
mov
dec
xchg
mov
sub
jl
pop
adcl
fdivl
pop
xlat
xchg
mov
jmp
movsb
xchg
ds
insl
insb
mov
orb
fwait
xchg
cmc
mov
out
mov
loopne
rorb
pop
adc
dec
and
push
pushf
dec
out
cmp
ljmp
cmp
idivb
push
sub
dec
dec
leave
enter
movntps
pop
nop
popf
mov
sbb
jge
mov
sub
loop
sbb
sar
in
pop
lods
mov
inc
or
adc
lret
cld
mov
dec
mov
xchg
pop
xor
inc
add
gs
popa
mov
fldcw
les
xor
dec
std
out
std
loope
ret
movsl
int3
cli
rorl
sub
sbb
and
test
add
jbe
add
adc
fidivrs
fadds
outsl
lock
movsl
cld
test
sbb
jmp
gs
or
shll
popf
sub
cmp
push
lods
insb
ret
out
lods
inc
lret
das
cmp
pop
xchg
push
in
rorb
inc
clc
jge
lret
dec
adc
mov
pop
stos
movsb
das
cld
arpl
loope
es
jbe
mov
mov
dec
cmp
mov
es
pop
imul
cmp
sti
lret
xlat
or
sbb
cmc
pop
xchg
jae
mov
xchg
inc
add
repnz
popa
sub
add
fsubrl
iret
shll
mov
sbb
or
insl
push
mov
mov
fldcw
xchg
mov
xor
fisubs
cld
jb
fcomp
xchg
push
insl
inc
movsb
sub
in
ficompl
sub
xchg
inc
fdiv
loope
aaa
fstp
cmp
add
cmp
jmp
jae
stos
ds
xchg
movsb
and
aas
dec
mov
add
fists
xchg
cmp
stos
lea
inc
jb
add
dec
cltd
out
and
je
jge
out
lock
fildl
inc
fsubrs
inc
xchg
pause
push
mov
rol
mov
and
ret
enter
lahf
jge
inc
lods
sahf
pushf
jns
xor
mov
xchg
popf
sbb
mov
int
ss
jge
aad
inc
add
jp
es
pusha
jp
fcmovnb
out
fwait
jecxz
gs
dec
or
enter
sbb
sub
into
test
pop
fdiv
jge
push
out
scas
loope
insb
mov
fs
aaa
lods
in
jbe
mov
mov
out
inc
dec
mov
stos
std
jb
cmpsb
test
add
mov
mov
jl
into
cltd
ljmp
jnp
mov
add
pop
test
pop
push
dec
sub
jmp
or
out
mov
or
adc
push
xlat
jne
lds
add
mov
jbe
mov
jmp
fdivrs
in
xchg
pop
add
and
xchg
in
icebp
leave
adc
inc
dec
mull
lds
sbb
xor
out
mov
push
fcompl
cmp
insl
jb
cmp
and
sub
icebp
sub
cmp
fcompl
fs
test
sub
jle
lods
cmpsl
cmp
sub
arpl
stos
inc
stos
mov
mov
loopne
jne
lods
push
imul
shl
clc
jmp
adc
mov
mov
rorb
stc
jo
dec
and
in
mov
negb
mov
gs
pop
xchg
out
push
ret
cmpsl
jge
mov
sbb
jmp
je
mov
stc
sbbb
mov
fisttpll
ljmp
push
dec
mov
jmp
sahf
adc
sbb
add
jne
xchg
popf
add
call
cmp
xchg
fstpl
dec
shll
inc
cmp
out
fs
test
mov
push
fcmove
aas
je
stos
or
cwtl
xor
lods
mov
les
mov
xor
pusha
iret
in
xchg
dec
mov
fists
pop
adc
mov
rorb
ret
fdiv
cli
lcall
rcrb
jle
rol
push
ja
lret
enter
js
in
adc
dec
xor
inc
add
into
xchg
dec
je
loope
cmp
mov
cmpb
mov
mov
fadd
daa
test
sub
dec
pop
ja
mov
mov
adc
test
pop
adc
xlat
outsl
sbb
or
pop
repz
pop
notb
dec
fwait
add
fidivs
push
mov
aas
push
push
mov
push
ds
adc
dec
adc
xorb
dec
inc
fstps
loopne
xchg
dec
iret
push
xchg
xor
and
dec
out
adc
imul
aam
nop
jg
shr
loop
daa
xchg
subl
add
aad
cmc
mov
mov
push
mov
and
cmpsl
into
andl
add
into
sub
jl
repnz
fwait
inc
or
inc
lea
mov
adc
and
std
dec
jne
iret
sti
dec
clc
adc
ds
jl
scas
xchg
fmul
inc
push
ljmp
std
scas
pop
xor
sbb
or
sbb
cmp
ret
int
jg
cmpsb
jno
mov
sbb
repnz
arpl
adc
jae
mov
adc
div
adc
divb
mov
es
lahf
cmp
xor
push
ljmp
adc
adc
lods
je
pushf
jl
jbe
sbb
jb,pt
lahf
mov
gs
in
popf
aam
repnz
ret
jmp
lret
push
xchg
mov
jnp
xlat
jnp
push
mov
pop
mov
and
mov
jns
jo
nop
test
cmp
ret
mov
jg
out
ffree
inc
mov
call
or
sahf
or
stos
stos
bound
pop
push
dec
mov
imul
sbb
mov
shl
push
xor
pop
and
pop
aam
add
aad
push
into
stc
sbb
andb
call
mov
call
push
pop
mov
xchg
sub
jmp
mov
add
adc
xor
xchg
in
int3
lods
xchg
dec
cwtl
loop
push
outsb
mov
ljmp
lods
jbe
dec
jne
inc
xchg
xor
shlb
negl
js
cmp
mov
jg
or
sub
inc
je
adc
xchg
imul
divl
cli
inc
lods
xor
and
cmp
sbb
arpl
or
and
outsl
xchg
or
leave
mov
pushf
insl
pushf
out
lret
sub
lcall
hlt
mov
push
adc
loope
icebp
ss
xchg
enter
dec
daa
out
dec
imul
cmp
in
jge
cmp
lret
imul
xlat
jg
pop
pop
xlat
mov
push
mov
int3
adc
xor
fsubrp
mov
sbb
sub
or
addr16
sbb
inc
in
dec
mov
shrb
mov
sub
lahf
negb
neg
out
pop
mov
jmp
js
pop
sbb
and
push
jns
push
jno
pop
push
in
mov
jnp
jmp
popa
xor
xchg
imul
mov
xchg
or
mov
cld
add
sub
out
std
scas
and
pop
imul
or
in
xor
test
push
or
lock
lds
mov
push
or
push
stos
lcall
cmp
les
jnp
mov
jp
ja
call
adc
xor
mov
sub
push
in
enter
icebp
or
das
ffreep
push
inc
jae
xor
inc
sub
mov
mov
cmpsl
dec
in
inc
lods
cld
stos
add
push
mov
jl
xchg
aam
add
sbb
fildll
and
jne
xlat
xchg
push
lcall
or
addl
mov
js
lcall
repnz
ds
lret
int3
sbb
loope
and
push
sub
cmp
mov
leave
xchg
out
and
out
fstpt
ljmp
jecxz
adc
inc
or
and
stos
inc
pop
fbstp
and
cmp
mov
into
daa
pop
jae
pop
mov
cmp
rcll
cmp
adc
xchg
mov
add
jb
cmp
xchg
xchg
jne
and
sub
and
jg
ljmp
lods
or
dec
mov
out
push
lret
mov
add
mov
fisttpl
pushw
xchg
aaa
rorl
jmp
stos
mov
ljmp
mov
in
ret
loop
mov
sbb
addr16
movsb
scas
or
out
hlt
pop
inc
sti
movsl
test
mov
xchg
fs
fdivr
subl
aaa
mov
sbb
popa
data16
mov
pusha
push
mov
outsb
inc
inc
dec
cwtl
mov
dec
mov
jbe
popf
cmp
xlat
mov
xorb
add
int3
sbb
les
in
xchg
mov
sbb
inc
push
ds
lea
nop
mov
xchg
fdivs
ja
xchg
fistpll
rol
loope
prefetcht1
loop
jg
jns
push
mov
test
push
movsl
mov
dec
or
jge
icebp
xor
call
inc
add
shr
popw
push
rorl
fs
mov
sysenter
lds
xor
mov
mov
shrl
out
cmp
fs
insl
out
mov
ss
jp
testl
adc
jl
cmp
arpl
loope
dec
mov
insb
testl
mov
ds
mov
mov
mov
sub
pop
and
arpl
lret
mov
cmp
test
out
mov
outsl
sub
xchg
sub
popa
sbb
jl
cwtl
aaa
jg
inc
shl
out
hlt
push
inc
aaa
mov
shlb
mov
add
sbb
ret
cmp
xor
mov
stos
inc
js
add
and
repz
dec
jbe
scas
mov
dec
push
xchg
popf
out
es
push
lods
fwait
inc
lret
fnsave
test
push
das
ret
in
push
push
hlt
dec
sar
and
adc
pop
xor
jae
fisttpl
adcl
test
or
jmp
jle
imul
pop
xor
into
inc
pop
jne
sbb
pop
sbb
movsb
popa
daa
aas
jae
inc
or
dec
ds
lcall
mov
xor
rorl
inc
pop
aad
jmp
or
mov
lahf
in
jge
cmc
jns
jp
fxch
mov
stc
push
int3
push
pop
pop
jge
mov
xchg
insb
mov
out
clc
mov
clc
cmp
or
leave
stos
xchg
test
lcall
xor
outsb
es
sub
pop
mov
das
push
rcrl
mov
jle
in
sbb
inc
idiv
fiaddl
jecxz
cmp
sub
adc
mov
sbb
jo
fsts
cmpb
pop
arpl
inc
or
in
fadds
dec
insl
shr
sar
or
cmp
xor
dec
jp
ds
in
repnz
je
rcrl
dec
es
loopne
pop
lret
in
cmp
dec
arpl
or
or
mov
pop
xchg
sub
cmp
outsb
xlat
cld
sub
pop
pop
mov
jl
inc
leave
mov
cmp
pop
pusha
adc
lds
call
repz
cmp
cmp
xor
or
pusha
jle
aad
and
push
enter
mov
sti
pop
mov
cmp
cmc
loope
mov
or
mov
mov
inc
xorl
adc
andb
sbb
test
sahf
xchg
scas
jmp
scas
out
hlt
cld
sahf
movsb
cli
jns
cmp
subl
cld
lret
jnp
subl
adc
js
mov
jo
jb
daa
xchg
jg
mov
int3
inc
xchg
xor
std
aam
and
xchg
add
popa
nop
bound
arpl
into
cmp
dec
mov
xlat
xchg
ret
ficompl
mov
jge
mov
add
and
lcall
shll
dec
inc
jle
js
ds
add
push
movsb
shll
call
jbe
jl
pop
dec
push
pushf
pop
xchg
shll
mov
int
cmp
inc
arpl
mov
cmp
add
mov
int3
add
sahf
scas
jl
jle
dec
inc
rorl
leave
insb
xchg
clc
arpl
push
lret
stos
cmp
arpl
imul
in
mov
fisttpl
add
xchg
mov
xor
insb
fsubrl
rcrb
push
jne
cmpsl
cmp
outsl
xor
jle
stos
fimull
gs
sub
aaa
ljmp
push
clc
gs
lret
fidivs
call
test
out
hlt
pop
iret
lods
lods
xor
jbe
imul
repnz
mov
mov
push
push
mov
ljmp
fidivl
mov
rol
scas
mov
jno
imul
cs
clc
push
clc
cli
and
push
ja
xor
loopne
jmp
jae
push
jl
jge
xor
cmp
cmp
adc
xchg
jns
jbe
sbb
mov
mov
cmc
arpl
outsb
push
and
pop
add
push
and
fwait
les
jbe
lret
mov
xchg
stos
scas
sbb
outsb
loope
scas
push
outsl
pusha
mov
mov
scas
and
das
rorb
mov
jb
aad
out
mov
enter
or
outsb
xchg
fwait
ret
shlb
daa
fldcw
push
push
hlt
cltd
inc
enter
fwait
pop
inc
cltd
loopne
stos
fxch
rol
in
pop
mov
cmp
nop
sti
lahf
ja
xor
out
arpl
hlt
lahf
in
lea
mov
loop
aad
xlat
in
loope
and
add
js
fwait
mov
or
outsl
fnstcw
movsl
dec
push
or
sbb
in
sbb
push
cmc
inc
int3
mov
adc
faddl
rcrb
inc
pop
jnp
in
lcall
xchg
xor
hlt
pop
cli
push
and
xor
in
es
loop
mov
xchg
mov
xchg
adc
cmp
inc
bound
mov
adc
rol
mov
mov
fs
faddl
or
jae
sbb
adc
jmp
ljmp
cmp
stc
call
ret
xchg
shr
xchg
leave
jg
and
rclb
test
push
and
push
lods
xchg
stos
dec
xor
out
or
fdivs
dec
arpl
jp
cld
sbb
aam
ds
adc
xchg
mov
into
mov
clc
push
pop
push
jge
cmp
add
scas
cmc
fisubrl
pop
rcrl
pop
xchg
jge
jae
add
sbb
mov
stc
mov
mov
mov
clc
or
push
sbb
lock
push
sbbl
jge
mov
into
pop
not
out
inc
mov
sbb
xchg
aas
popa
cmp
je
icebp
sbb
fmuls
pushf
inc
jge
xor
push
pop
cmpsl
rcll
jae
xor
out
les
jp
or
loopne
ror
adc
mov
jl
pop
jo
pop
jle
inc
jmp
pop
push
jo
and
jb
fwait
jg
imul
cmp
loope
dec
loop
testb
inc
ret
ljmp
mov
dec
mov
inc
sub
lret
insl
iret
jp
fs
mov
fstpt
sbb
xchg
aad
sbb
pusha
pop
xor
xor
rorb
jb
inc
push
add
pop
sub
inc
or
dec
das
into
mov
mov
add
mov
dec
jne
xchg
dec
enter
scas
fsts
pop
mov
outsb
mov
stos
push
add
cmpsl
ftst
cmp
adc
ljmp
pop
in
ljmp
test
xchg
insl
add
mov
dec
repnz
mov
in
out
add
in
pop
xlat
jno
mov
faddp
sub
cmp
mov
push
push
inc
or
jae
insl
in
ret
dec
and
movsb
add
rorl
out
adc
mov
mov
and
bound
push
mov
lahf
mov
inc
out
and
pop
pop
lock
fst
movl
mov
mov
cld
xchg
movsl
mov
add
xor
pop
outsb
and
insb
mov
clc
mov
add
data16
iret
lock
nop
jge
push
jl
adc
jle
in
jle
shlb
icebp
fsubrl
loope
rorb
and
and
sbb
decb
insb
rcrb
aam
inc
adc
mov
sti
hlt
das
xor
lea
push
xchg
and
mov
mov
pushf
mov
xchg
fdivr
out
and
and
ds
out
mov
xchg
iret
sbbb
pop
enter
lahf
add
fimuls
cmpsl
mov
lret
jle
inc
sub
mull
add
cmc
repnz
xor
test
lods
outsl
outsl
repnz
xchg
pop
inc
jle
xchg
mov
insl
sbb
sbb
sub
jle
sbb
push
daa
fsubl
xor
ljmp
dec
cltd
add
test
and
mov
lods
call
mov
fwait
mov
xlat
cmpsl
mov
sbb
pop
ret
sub
testb
div
adc
cmc
pop
out
mov
je
pop
jmp
xchg
mov
enter
adc
das
xchg
xor
inc
mov
sub
cmp
lods
cmp
jg
popf
insl
in
fwait
cs
jo
push
rorb
xchg
incl
cld
xor
repnz
push
mov
jp
icebp
icebp
cltd
sub
jb
test
ss
xor
jne
pop
adc
or
lret
mov
inc
cld
add
test
clc
mov
hlt
es
ficoms
dec
push
cmp
incl
les
inc
or
xchg
sbb
imul
stc
sahf
inc
mov
push
mov
call
sahf
and
call
or
dec
jge
mov
sub
mov
jnp
xor
lods
adc
scas
xor
cmp
sbb
fsubs
dec
jge
and
xchg
out
fadds
jne
and
dec
pop
scas
inc
in
add
cmc
inc
pop
mov
loope
xchg
hlt
mov
clc
std
mov
fwait
or
fidivl
icebp
inc
pop
movsl
das
xchg
fwait
and
or
pop
outsl
rolb
out
or
xchg
mov
icebp
mov
mov
lods
or
outsl
sbb
outsb
inc
push
in
fs
subb
mov
cli
daa
cs
inc
ret
push
xchg
inc
jbe
js
fistpll
andb
jbe
push
jno
inc
and
jecxz
sbb
xlat
cmp
pop
sbb
icebp
jmp
arpl
lcall
push
mov
dec
fidivl
xchg
sbb
inc
mov
dec
push
mull
cld
mov
mov
js
data16
and
je
dec
movsl
or
jle
hlt
rcrb
xor
add
inc
xchg
mov
mov
aaa
add
lret
jne
loopne
push
jge
push
add
negl
ljmp
out
ds
stc
bound
mov
push
andl
in
iret
aaa
mov
add
sbb
pop
xor
jns
scas
or
sahf
lds
or
enter
inc
sti
jge
xlat
dec
dec
outsb
adc
shll
in
xor
iret
sahf
lods
xchg
mov
xchg
cmpsl
mov
js
lods
test
filds
je
push
sub
jb
push
pop
adc
pop
mov
ljmp
fists
sub
push
stos
jle
push
cs
adc
icebp
lods
jnp
orb
or
mov
cli
and
sub
int
nop
clc
lret
cmp
pop
add
mov
push
loopne
ss
mov
or
fwait
sarb
cli
fsubr
pop
xor
insb
jno
shrb
adc
cmp
adc
or
cmp
lcall
fnstsw
sub
fistl
cld
pop
daa
es
jmp
addb
aaa
cmp
out
hlt
pop
pop
inc
jbe
in
push
arpl
xchg
xor
mov
and
imul
sub
scas
outsl
mov
jmp
sarl
fcompl
sbb
scas
xor
sub
int3
jle
shrl
jle
movsb
ljmp
pusha
daa
add
pop
jo
xor
jne
cmp
cmpsb
iret
mov
daa
out
insb
sub
xchg
push
in
xor
sbb
inc
lcall
push
loop
sbb
push
call
ret
push
dec
shl
imul
and
aaa
popa
lcall
push
adc
lods
inc
dec
dec
dec
push
cli
test
or
mov
leave
inc
data16
dec
mov
lods
add
leave
push
or
push
inc
mov
add
aas
insb
or
cmovne
sti
not
inc
mov
popf
sbb
sbbb
and
pushf
mov
pop
outsb
je
icebp
sbbl
in
mov
fisttpl
push
cmp
enter
shrb
xchg
sbb
cmpsb
push
loop
cmp
jns
imull
add
fmull
cmp
cld
push
pop
in
in
lcall
ficompl
ja
nop
push
outsb
and
dec
adc
or
and
stos
dec
hlt
mov
sub
or
in
xchg
daa
dec
sbb
mov
cmp
push
adc
jp
pop
add
pushf
shll
pop
xchg
jmp
data16
les
mov
insl
push
ljmp
jp
and
add
adc
xor
stos
dec
stos
inc
popf
lahf
imul
dec
movsl
mov
xchg
cmp
pusha
mov
push
aam
mov
dec
add
sahf
mov
sbb
push
mov
dec
xchg
lahf
push
push
dec
lahf
pop
push
icebp
lret
or
jb
cmc
in
sbb
enter
push
xchg
test
jnp
push
adc
push
mov
sub
adc
outsl
aad
repnz
popa
cmpb
rcrl
add
or
movb
adcb
aas
mov
fstpl
lret
or
adc
add
loopne
jo
xchg
adc
push
cmp
mov
push
ljmp
loop
in
cmpsl
out
cmp
daa
jecxz
ss
jnp
push
inc
movl
es
xchg
fisubrs
push
push
imul
cmp
dec
test
cmp
inc
vcvtps2dq
dec
lock
jmp
xchg
sub
pop
pop
sub
cmp
jno
loop
sbb
movsb
jb
rolb
dec
push
in
pop
movsl
adcl
iret
push
popa
xchg
mov
inc
jno
repnz
leave
sub
push
pop
dec
fdivr
daa
and
iret
push
sub
xor
andl
xchg
loopne
ret
ljmp
out
in
xchg
xor
mov
and
mov
jl
ja
shrl
push
mov
dec
dec
lret
push
sbb
aaa
js
push
repz
enter
dec
pop
jg
sbb
cmp
fwait
mov
jae
cli
push
lds
jg
xchg
loopne
adc
pop
int3
addr16
cli
pop
out
and
stos
adc
dec
mov
imul
jp
pusha
mov
pop
inc
fbld
add
gs
sbb
inc
sub
xor
imulb
dec
jnp
dec
bound
xor
shl
into
adc
adc
mov
or
xchg
add
and
outsb
sub
sbb
cmp
xchg
imul
and
push
jp
ja
dec
test
mov
cmp
imul
pop
mov
mov
mov
in
das
arpl
out
inc
rcr
dec
fst
inc
mov
and
sbb
je
push
inc
pop
negb
movsb
push
mov
imul
cwtl
fwait
dec
adc
pop
pop
sbb
gs
orl
inc
push
xor
stc
lods
push
adc
test
jae
fwait
dec
mov
sub
xchg
sbb
push
cmp
sub
in
push
fcmovbe
cli
stos
ds
das
ds
push
cmp
jae
cmp
das
sbb
xchg
sub
hlt
sub
or
mov
xor
mov
mov
scas
movsb
pop
sbb
dec
in
xor
inc
adc
lret
jle
add
lock
push
addr16
je
xor
std
or
push
fisttpll
out
push
mov
jecxz
mov
nop
pushf
out
test
jno
xchg
xor
pop
cmpsl
sub
mov
inc
add
pusha
test
mov
das
test
adc
mov
push
sbbl
mov
jl
jnp
rolb
add
ljmp
dec
repnz
jl
cmp
xor
sbb
dec
adc
xchg
push
sbb
push
cmp
lret
jp
pop
nop
jg
xor
push
sahf
cwtl
dec
sub
xchg
imul
push
add
mov
cmp
xor
xchg
mov
mov
mov
ljmp
inc
int3
and
dec
insb
add
inc
loopne
outsb
repz
cmp
hlt
dec
pop
adc
pop
dec
lahf
cli
test
shl
mov
test
mov
and
cli
cmpsb
notl
add
das
push
push
cli
enter
and
mov
stos
enter
push
into
fwait
adc
fists
jo
dec
xor
loope
push
lahf
add
or
add
jge
mov
xlat
rcrl
cmp
mov
cmc
xor
push
hlt
xchg
movsb
jle
inc
fidivl
sub
jo
rclb
int3
gs
ljmp
pop
sub
lcall
cmp
std
mov
jl
pop
out
push
mov
inc
stos
xchg
dec
call
stos
jnp
in
imul
pop
pop
pop
add
mov
xchg
sbb
cmp
data16
fidivs
xchg
pop
adc
ja
inc
sub
pusha
dec
push
subl
pop
ss
fdivs
sbb
or
jbe
xor
out
or
jnp
add
mov
inc
ret
lock
sbb
mov
sbb
ret
int
cmova
sbb
sbb
shlb
cmc
add
ss
loope
or
cmp
adc
lea
add
jbe
xchg
xlat
push
or
loop
xor
push
mov
mov
pavgb
jecxz
repz
push
pop
xchg
sub
jmp
popa
fnstcw
adc
pop
test
test
ds
pushf
push
or
ret
jmp
xchg
push
mov
divb
test
jecxz
sbb
pop
mov
dec
jns
cmc
sbb
repnz
movsl
mov
and
cmp
xchg
pop
sbb
pop
not
pop
add
or
jbe
fcmovne
xchg
lods
pop
push
push
addb
add
push
nop
fcoms
sub
push
shrl
icebp
pop
pop
cld
decb
mov
sti
adc
xchg
test
inc
dec
int
loopne
dec
shlb
pop
xchg
mov
xchg
or
pop
test
aam
or
out
mov
loope
rcl
stos
imul
jl
adc
inc
push
pop
or
cmpsl
pop
mov
inc
jns
jne
jns
inc
mov
push
rclb
or
inc
pop
inc
scas
xchg
sbb
mov
or
sbb
pusha
xchg
and
into
sahf
fsubl
adc
mov
mov
xor
mov
lret
shrb
sbbl
xor
push
cltd
xchg
popf
push
fldl
lods
push
inc
aas
pop
lcallw
adc
sub
ja
xchg
mov
inc
clc
mov
jb
ret
pop
mov
mov
aam
sbb
aad
into
mov
faddl
mov
andl
mov
mov
clc
pushf
test
ret
sahf
dec
xchg
jp
lea
call
bound
inc
and
jp
popa
jae
call
dec
jmp
push
push
or
mov
outsl
mov
outsl
xor
jecxz
dec
out
push
mov
lock
shrl
jle
sahf
call
push
lea
dec
aaa
out
pushf
sbb
shll
movsb
fimull
push
jnp
mov
scas
vpextrw
pop
push
and
popa
fimuls
xchg
push
stos
jae
ljmp
push
in
roll
mov
xchg
int3
pop
and
stc
stos
inc
pusha
repz
lahf
mov
mov
sub
outsb
stc
sub
cs
fwait
mov
inc
inc
imul
inc
mov
aaa
nop
cmp
pop
pusha
dec
mov
sbb
push
mov
fisttpl
cmp
fidivrl
xor
into
adc
push
push
or
xchg
add
xchg
into
test
mov
int
xchg
mov
sbb
mov
mov
adc
enter
sarb
int
jecxz
pause
and
mov
push
aam
adc
inc
popa
es
sub
push
test
sbb
cld
loop
pop
mov
mov
hlt
mov
lods
mov
pop
cmp
outsb
pop
cwtl
push
dec
adc
mov
xor
push
mov
mov
sti
in
scas
cmpsl
add
leave
cmp
cld
aas
cld
insb
rcr
cmpb
push
sbb
or
jns
insb
ret
lcall
mov
adc
mov
dec
rcr
lret
enter
fdivrs
xchg
scas
xchg
aas
outsl
into
bound
das
roll
add
inc
inc
sbb
in
shl
sahf
loop
jmp
jno
jae
or
jg
insb
int3
cs
lods
vshufps
sub
add
out
es
stc
pop
dec
or
mov
aad
xchg
ljmp
dec
into
or
in
lods
cmpsb
fistps
out
inc
ror
ljmp
push
clc
cwtl
jmp
adc
dec
xchg
insl
shll
cmpsb
popf
inc
push
or
sbbb
mov
pop
addr16
test
lds
push
mov
mov
sub
sub
mov
inc
shl
ror
cwtl
adc
daa
adc
push
pop
jp
shl
pop
sbb
sbb
mov
rcrb
sahf
dec
es
fs
or
dec
loop
cli
xchg
out
jnp
inc
jl
loopne
mov
mov
sub
mov
lods
xor
fnclex
dec
fimull
fiadds
rcr
cmp
out
mov
data16
scas
fidivrl
dec
stc
push
fisubrs
add
jbe
pop
daa
push
ljmp
pushf
pop
cmp
bound
mov
mov
cltd
rcrl
roll
add
es
lock
push
repz
int
ja
shld
repnz
or
cmpsb
je
stos
scas
dec
push
inc
sbb
fs
mov
jmp
fsubrl
insb
pop
hlt
sub
mov
out
pop
lret
push
repz
lea
mov
mov
mov
xchg
and
pop
push
mov
and
mov
jnp
xlat
jmp
xor
flds
fcmovnbe
into
pop
pusha
push
test
out
mov
inc
pusha
pop
fldt
addl
test
fisubrs
and
cli
je
xor
lahf
fisttpl
decl
movsb
repz
bound
pop
and
lahf
dec
push
scas
or
mov
repz
rorl
xchg
inc
mov
xor
sub
or
inc
arpl
mov
imul
dec
rorl
ljmp
imul
enter
or
xorb
push
das
jnp
pop
ficoms
mov
cli
push
sbb
clc
popa
add
add
cmp
clc
dec
repnz
mov
cmp
sbb
mov
nop
push
push
addr16
add
xchg
adc
or
hlt
sbb
and
clc
clc
cmp
icebp
push
mov
aam
fdivrs
and
inc
sub
fsubrs
xchg
mov
mov
lds
movsl
jge
cmp
lcall
cld
push
cmpsl
jo
in
push
ret
mov
add
ds
cltd
leave
push
adc
cmp
cmc
outsb
xchg
sub
rcpps
mov
xlat
stos
out
dec
mov
jge
xor
lock
stos
xchg
fbstp
pop
push
jnp
mov
fwait
mov
pop
jae
lock
xchg
dec
ss
cmp
push
loop
and
test
mov
jne
clc
or
ljmp
stos
mov
and
scas
movsl
lea
dec
jb
xor
cld
jp
outsl
jo
jnp
lods
popa
jmp
repz
push
mov
mov
jns
adc
jbe
xor
filds
xchg
dec
in
mov
jl,pn
fnstcw
push
mov
leave
ds
cmpsb
das
pop
jl
stos
negb
loop
orb
inc
or
loop
int3
jg
push
out
les
int
add
popf
sbb
js
int
enter
pop
test
sub
jl
sbb
call
mov
inc
test
popa
xor
add
out
stos
xchg
arpl
sub
ret
lds
or
fcmovbe
inc
dec
aas
test
ret
nop
mov
add
sbb
test
fistpl
out
jne
push
inc
int
jb
sub
loopne
inc
cmp
iret
andl
es
repnz
cmpsl
ds
insl
dec
insl
mov
sti
mov
sub
jp
repz
jmp
rorb
jge
jg
sbb
cwtl
ret
pop
or
mov
cmp
adc
xor
mov
xchg
movsl
sub
pop
fiaddl
imul
sub
shrl
subl
cmp
push
push
pop
pop
lods
mov
mov
cmp
and
loop
shrl
push
adc
pop
aam
xchg
cmp
popf
jl
adc
xchg
or
mov
xor
and
mov
push
sub
shrl
rcll
enter
mov
into
dec
mov
sub
cmp
sbb
lret
fsubrl
cltd
jmp
mov
xor
lcall
in
shlb
mov
dec
mov
repnz
jnp
mov
lea
mov
sub
fs
cmpsb
push
in
cs
push
sbb
or
mov
cmpsb
loopne
imul
jb
xor
in
ja
shrb
or
insb
xor
jbe
cmp
xchg
lahf
and
and
idiv
add
xchg
xor
ljmp
in
imul
aaa
fucom
cmove
pop
dec
dec
push
dec
inc
dec
dec
cmp
xchg
scas
jge
jne
ret
mov
mov
dec
mov
inc
mov
mov
push
pop
push
jo
stc
rclb
push
pop
xchg
cwtl
jne
push
mov
add
mov
mov
inc
mov
mov
mov
dec
enter
dec
xor
cs
movsb
sahf
repz
cwtl
and
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
inc
mov
mov
mov
.byte
xor
.byte
