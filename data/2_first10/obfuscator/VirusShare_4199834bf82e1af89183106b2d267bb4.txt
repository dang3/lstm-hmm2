mov
cmpsb
jmp
outsb
icebp
aad
push
pop
xchg
loope
inc
fcoml
bound
test
sbb
fbstp
fucomip
ljmp
adc
outsl
push
mov
and
xchg
stc
dec
push
sub
jbe
xchg
adc
jecxz
in
rorb
ds
and
addl
cmpsl
cs
test
fwait
push
sbb
addl
lock
mov
stc
insl
mov
andb
cli
add
jl
pop
popa
das
inc
mov
lea
fwait
gs
and
scas
mov
jg
test
mov
inc
test
fdivs
enter
test
mov
sub
mov
mov
pop
push
adc
push
inc
sbb
imul
sbb
ss
mov
fsubp
jbe
insl
inc
jb
in
mov
fs
jae
not
pushf
mov
mov
inc
pushf
pusha
push
mov
lea
jb
pusha
lea
call
pusha
jmp
lea
jne
stc
mov
call
lea
call
call
adc
lea
jp
pushf
push
movw
lea
jae
push
call
pushf
jmp
jmp
out
cmpsb
xor
xchg
arpl
out
push
cmpsl
in
cmp
jp
roll
pop
arpl
or
lock
pop
in
in
mov
dec
jns
addr16
repnz
sbb
fadds
iret
sbb
aam
andb
mov
je
sbb
fiadds
lret
mov
add
jp
xor
add
and
fucomip
pushl
dec
push
xchg
rcrb
mov
sbb
mov
jg
data16
andl
mov
and
fcompl
hlt
inc
pop
pop
jo
xchg
inc
aas
mov
jno
ljmp
jecxz
je
sub
adc
sub
pop
cmp
inc
push
jno
inc
add
jecxz
repnz
xor
daa
les
lock
insb
push
data16
jae
les
push
mov
and
lods
dec
in
idivb
imul
lds
push
adc
dec
sti
sub
imull
scas
mov
inc
push
xchg
test
outsb
jns
in
ret
rcrb
add
cmp
inc
rcll
xchg
lods
dec
lcall
cmp
aam
lods
dec
cwtl
lahf
cmp
fcmovne
pop
arpl
movsl
xor
movsl
sarl
mov
lods
enter
cmpsb
je
lods
stos
mov
cld
pop
popf
or
mov
enter
scas
xchg
cmp
sub
fs
and
stos
repz
call
push
mov
sbb
pop
imul
sub
ds
in
fnstcw
jo
int3
push
arpl
jmp
scas
sbb
pop
pop
or
inc
movsb
xor
jne
in
or
rolb
push
xchg
dec
xlat
mov
xchg
dec
lret
sbb
call
test
and
test
je
jne
mov
mov
in
call
pop
std
imul
sub
cltd
inc
jnp
rcl
cmpsl
pop
bound
fisttps
ljmp
mov
jnp
mov
xchg
jge
ja
sub
rcll
mov
pop
and
jbe
jmp
and
push
push
jno
lock
mov
mov
cs
js
mov
push
lds
cmp
mov
jecxz
js
out
dec
bnd
mov
sub
fwait
cmpsb
mov
sub
dec
pop
mov
popf
int
xchg
cmpsl
xchg
ror
ret
call
pop
cmp
stos
mov
cmp
mov
stc
pop
xchg
lea
or
sub
mov
dec
adcb
lds
insl
ret
das
or
leave
xchg
add
and
lds
and
pushl
les
dec
fldcw
arpl
scas
mov
and
rolb
jge
ja
mov
cs
mov
lret
cmp
sbb
cmpl
ss
mov
xchg
fmuls
add
add
mov
repz
adcb
dec
mov
dec
imul
dec
jp
scas
sbb
xor
loope
mov
daa
gs
sbb
and
ficompl
mov
stos
mull
dec
mov
adc
mov
into
ror
add
cwtl
mov
xor
mov
pop
jnp
and
cmp
xchg
inc
leave
daa
and
stc
fldcw
sbb
push
cmp
push
pop
cli
mov
shll
nop
aam
das
mov
dec
test
jp
into
incl
bound
shlb
inc
and
pushf
pushf
mov
movb
call
iret
xor
nop
call
fldpi
adc
or
fld
jb
jge
xchg
out
mov
rol
scas
or
std
inc
dec
xchg
jno
rolb
adc
insl
popf
shll
shll
pop
lcall
ds
into
pop
mov
lock
jo
mov
add
xchg
lcall
in
out
cmp
stc
mov
push
cltd
ja
xor
je
imul
pushf
and
adc
and
add
sbb
bswap
lea
pushf
call
push
call
add
add
mov
jg
repz
add
andb
and
push
dec
cmp
cwtl
ret
dec
ret
push
ljmp
lret
and
icebp
call
or
or
shl
es
enter
jmp
dec
sub
outsb
add
ss
cmp
xor
frstor
aaa
lahf
push
cmpb
dec
outsl
shrb
jmp
out
push
push
in
pop
or
mov
daa
mov
and
add
xchg
fldt
sbb
aas
jns
xor
outsl
cltd
push
adc
xor
sub
sbb
add
mov
hlt
repz
mov
outsl
mov
ja
pop
jl
push
mov
lock
sub
fs
cwtl
mov
inc
sbb
das
iret
ljmp
push
cmp
aaa
mov
adc
lea
pushf
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jmp
mov
mov
mov
lret
clc
or
ret
in
js
jae
repz
jo
cmp
push
mov
jnp
push
sub
push
and
lods
push
push
les
inc
jle
mov
xchg
and
nop
incl
cmpsb
cmp
outsl
movsl
jb
jl
out
cmp
xorl
xchg
mov
imul
pop
pop
out
mov
mov
push
mov
mov
test
sub
fmulp
xchg
sbb
cmp
movsl
aas
push
call
or
push
loop
js
pop
daa
adc
xor
das
xchg
addr16
mov
inc
cltd
sbb
fistl
cmp
popa
dec
inc
out
add
and
jmp
cmp
xor
int
repnz
mov
sbb
xor
add
fimuls
test
stc
and
bound
pop
scas
xchg
arpl
cli
lods
je
jno
mov
in
adc
mov
out
and
sbb
sbb
iret
cmp
mov
inc
xchg
lods
movsb
mov
je
in
shlb
xchg
xor
imul
aaa
negl
push
xchg
xchg
add
push
in
xchg
xor
pop
icebp
or
or
insl
gs
sbb
lahf
xor
push
xor
push
sub
scas
dec
ja
shl
testl
outsl
fcoms
or
rcrb
orb
push
clc
ss
insb
roll
sbb
push
idiv
add
iret
out
sbb
shl
adc
in
push
push
cmpb
dec
xor
lret
lahf
mov
or
aaa
mov
outsb
call
shrb
cli
loop
xor
dec
xor
push
into
je
cmpb
pop
scas
pop
adc
pop
psraw
push
jnp
out
sahf
xor
pop
icebp
dec
call
pop
rcll
xlat
mov
cmp
movsl
jo
lock
cmc
inc
xor
sub
je
or
mov
out
push
call
stos
test
rclb
mov
jge
lret
mulb
and
jl
xchg
out
mov
es
cli
lea
mov
es
shll
mov
cmp
cmp
lods
adc
fs
adc
push
fdivrl
cmp
out
lock
and
adc
jns
sbb
aaa
push
int3
pop
and
jae
and
lods
sbb
fmul
imul
enter
and
or
data16
sub
js
fwait
call
roll
xor
push
les
shll
push
mov
inc
jle
adc
pcmpgtw
pop
jae
andb
movsb
add
ljmp
push
insb
jns
idivb
jb
sub
and
pop
pop
adc
lods
rolb
imulb
push
loop
sub
adc
ljmp
orb
in
cmp
inc
test
sbb
jecxz
lret
jmp
pop
stos
int
push
clc
dec
add
and
add
dec
std
jge
mov
push
jmp
mov
pop
lahf
mov
aaa
bound
cmp
pop
adc
or
je
jo
sbb
in
call
push
push
mov
mov
bswap
pop
pusha
pushl
ret
xor
bt
jmp
or
sbb
inc
mov
mov
inc
sub
dec
pop
push
xchg
inc
xor
dec
enter
cs
jns
fcmovnu
cld
cltd
imul
sub
sbb
aaa
scas
jmp
fistpll
cld
out
mov
je
mov
test
jbe
iret
push
dec
cwtl
test
and
hlt
mov
pop
nop
xorl
pop
das
add
enter
and
mov
aam
sbb
mov
pushf
xor
fidivs
inc
lods
pop
out
mov
sbb
jp
adc
outsl
dec
mov
stos
int3
stc
xor
xor
mov
lods
jge
stc
or
and
and
pop
dec
mov
jp
adc
add
jmp
push
dec
mov
arpl
movl
insb
mov
mov
pop
sbb
in
fwait
xor
adc
and
xor
pusha
mov
mov
add
push
loope
rcrb
mov
cmpsl
xchg
pop
test
sbb
movsl
ds
mov
xorl
rep
mov
mov
aaa
std
sub
les
cmp
adc
repnz
fisubl
repnz
or
push
popf
insb
bound
inc
adc
mov
push
aas
or
ficomps
in
push
mov
jo
inc
es
jbe
mov
les
lret
ret
loop
sahf
daa
fdivs
adc
out
insb
mov
xor
je
or
jmp
ljmp
iret
rol
inc
xchg
mov
test
sub
mov
gs
xchg
cmp
cmpb
jne
sarl
push
out
pop
lret
inc
push
das
adc
jle
push
aas
sub
xchg
xchg
in
and
js
idivb
and
outsl
pop
rol
ss
aam
and
ss
iret
fdivrl
cmp
or
add
push
push
inc
lods
ffree
scas
lahf
or
or
sbbl
mov
pop
cld
inc
das
sbb
js
mov
inc
add
ficoms
cli
sbbb
inc
and
js
dec
test
dec
outsb
inc
test
cmp
shlb
stc
dec
sub
cmpxchg
xor
fdivrs
sbb
nop
mov
loop
pop
test
sahf
ljmp
push
cmp
inc
rolb
es
cmp
cmpsb
repz
mov
pop
xchg
ret
test
and
jno
add
lret
les
arpl
js
cmp
rcrl
jle
mov
divb
mov
inc
push
shrb
mov
pop
inc
fimull
es
inc
push
cmp
addb
push
inc
fs
cmp
gs
mov
fdivl
cmp
lahf
fldcw
shll
mov
push
cmp
into
or
inc
rolb
insb
mov
fdivrl
out
stos
mov
push
in
inc
inc
enter
cli
loop
hlt
dec
fsubrs
and
inc
stc
movsb
je
inc
or
test
sahf
loopne
sub
leave
sbb
es
inc
repnz
fs
aam
std
test
lds
lret
push
mov
ss
iret
lahf
fwait
sbb
fcomps
fisttpll
sbb
lahf
stos
js
loop
xorl
fsubl
and
add
push
mov
cwtl
ret
or
rclb
mov
jno
cli
stc
dec
push
stc
stos
lahf
cltd
add
pop
out
loop
inc
jne
les
jo
rcrb
mov
mov
cld
xchg
aas
sub
es
daa
or
pop
jecxz
jns
dec
dec
pop
and
adc
push
xor
jbe
push
dec
fcmove
psubusw
ret
cmp
std
pop
imul
inc
inc
and
push
push
popa
stos
sbb
enter
mov
rcrl
aam
out
fisubl
ss
push
mov
ja
arpl
pinsrw
mov
dec
inc
inc
mov
enter
push
ficompl
mov
sbb
mulb
lahf
xchg
dec
imul
pop
popa
inc
inc
in
push
push
sti
ret
sarl
add
sub
push
js
int3
testb
dec
push
lock
dec
adcb
cmpsb
js
sbb
loop
std
mov
jmp
sbb
in
js
ds
push
push
sbb
lds
sbb
push
inc
dec
xor
and
int
in
dec
movsb
or
lret
fs
imul
ds
push
mov
stos
sbb
add
cmp
adc
gs
dec
ficompl
rcrl
mov
cmc
sbb
decl
mov
fidivrs
or
push
loop
jnp
push
pop
ficoml
sahf
mov
repz
in
imulb
add
mov
push
sbb
aas
cmp
mov
ds
roll
mov
add
scas
mov
test
dec
jl
add
lret
hlt
std
fsubs
and
xchg
sbb
outsb
int3
roll
cli
enter
jecxz
test
dec
push
sahf
pop
dec
sbb
lods
cmp
xor
repnz
pusha
ja
ficomps
mov
mov
fadds
mov
std
or
outsb
loop
in
cs
jne
iret
stos
inc
dec
add
cld
movb
mov
test
pop
lds
js
inc
mov
mov
mov
jmp
jne
sbb
jno
lock
out
add
nop
mov
gs
mov
add
jno
push
mov
les
aad
jp
popf
or
and
ljmp
add
sbb
loopne
repz
je
lock
cli
add
fsubs
ficoms
inc
js
lahf
pusha
sbb
push
push
divb
imull
xor
loopne
fistpll
out
fsts
xchg
push
cmp
sub
xchg
stos
stc
out
lcall
jle
or
inc
aas
and
fsts
sub
mov
cmp
packuswb
out
enter
mov
push
pusha
jl
imul
mov
jb
sub
stc
out
adc
scas
push
xor
jno
adc
out
je
stos
push
jmp
mov
gs
xchg
cmp
or
clc
lds
pop
xor
or
mov
adc
cmpl
push
pop
and
fcomip
mov
and
sahf
sub
loopne
or
fdivp
cmp
dec
mov
xor
iret
sub
jmp
mov
popf
lret
sti
rolb
enter
iret
ja
stos
inc
mov
lret
insb
jge
data16
ss
fmull
add
or
ds
pop
add
adc
js
fstpt
adc
adc
sbb
out
push
cli
lds
lahf
inc
push
repnz
or
out
fidivs
jle
js
incl
sahf
ljmp
adc
inc
jp
pop
ds
mov
lock
pop
cltd
dec
pop
enter
adc
dec
mov
push
clc
fwait
loop
cld
add
aad
and
sti
sub
cmc
not
mov
cmp
repnz
in
add
fidivs
xchg
hlt
adc
or
cmp
or
insb
imul
repz
js
test
cmp
mulb
rorb
jle
mov
jmp
test
pop
cs
push
or
shrl
or
pop
ljmp
dec
xchg
push
mov
cmp
aad
inc
lds
mov
pop
add
lahf
js
pushf
lahf
push
sbb
in
pop
xchg
push
inc
cmp
rolb
or
imull
jns
out
dec
lahf
push
push
xor
push
pop
add
ds
and
jmp
lds
repz
adc
sbb
sbb
loopne
in
or
sbbb
sarl
cmp
lret
lahf
insl
out
je
sub
into
dec
sub
clc
lret
mov
inc
test
or
aam
popa
into
push
push
or
ret
lret
scas
sub
cmp
jnp
mov
rorl
mov
push
jmp
mov
xchg
ret
jno
jb
clc
lods
ret
add
inc
push
jbe
xor
aaa
xchg
jecxz
cld
loop
jg
push
test
xlat
or
dec
leave
shlb
mov
push
fcom
xchg
mov
and
fstps
xor
push
es
push
jne
cmp
gs
sbb
ja
out
sub
into
test
ss
sbb
push
xchg
mov
pop
jne
hlt
adc
jno
mov
mov
cmp
sarb
fistpl
arpl
mov
xlat
insl
add
sub
outsl
sub
loop
inc
push
dec
scas
push
andl
push
rorl
mov
push
mov
jbe
movsb
out
lahf
add
add
mov
jg
mov
outsl
not
push
data16
outsb
mov
inc
push
mov
dec
mov
sahf
ja
cmp
fmuls
lds
adc
xor
addr16
and
mov
dec
push
notl
ret
mov
lods
inc
adc
bound
cwtl
mov
aaa
cmp
stc
ljmp
shrb
popa
loop
adc
push
gs
mov
aas
ss
jl
sbb
cmp
sbb
dec
idivl
dec
ret
fwait
xchg
loop
das
cmp
lahf
shl
daa
neg
add
push
sti
jne
sbb
or
ja
mov
out
dec
add
push
ds
dec
adc
pop
jbe
pushl
inc
ficompl
into
test
cmp
not
int3
inc
or
or
aas
into
lds
sbb
outsb
fcoml
cmpl
or
or
xchg
arpl
aam
dec
xchg
and
lods
rclw
shrl
cmc
aaa
push
inc
jne
cmp
fldcw
ret
lahf
sbb
fisubrl
leave
fs
iret
orb
scas
stos
jle
push
pop
shlb
std
lahf
adc
mov
cmp
dec
repnz
lods
ret
lahf
out
roll
mov
fstpl
jp
out
shll
inc
popa
mov
cwtl
mov
pushf
ret
ret
cmp
inc
cmp
ror
add
or
mov
inc
loop
cld
xchg
mov
rolb
xchg
das
adc
push
adc
inc
sbb
insl
mov
int
fcomps
jbe
mov
cli
sbb
ud0
out
testl
mov
arpl
push
mov
repz
adc
rcl
ret
xchg
in
out
fdivrs
or
sub
gs
jbe
adc
xchg
pop
or
repz
push
fldenv
lahf
fcomip
jbe
decb
mov
jmp
jge
dec
ret
cmp
pop
lret
jg
leave
sahf
aaa
clc
push
lahf
aam
xor
vmovddup
mov
dec
mov
test
aas
ja
inc
push
xchg
ret
lea
cmp
pushf
sahf
inc
pop
fldcw
xor
and
lods
imul
pop
int3
out
add
fcmovnbe
cli
lds
xchg
pop
inc
xchg
sbb
cmp
data16
or
sbb
inc
stos
push
push
cmpsb
sub
js
fldt
xchg
clc
add
push
sub
cltd
push
hlt
je
sti
rclb
hlt
dec
jmp
popf
gs
aas
lahf
and
inc
dec
or
shrl
nop
js
das
fstps
or
lahf
pop
push
add
fimull
push
mov
sub
cmp
inc
out
xchg
loop
mov
sbb
jl
pop
popa
xchg
outsb
rcrb
mov
cmp
sahf
push
inc
rcl
cmp
add
dec
imul
loope
mov
adc
shrb
inc
insb
int3
pop
inc
lret
js
xchg
adc
cmp
push
roll
pop
add
ret
pop
sub
inc
jbe
sarb
inc
repnz
inc
repnz
lds
push
sub
mov
test
out
add
push
ljmp
loop
popf
fmull
lds
loopne
jns
jle
ja
cltd
xchg
dec
push
fidivs
mov
bnd
push
ds
pop
mov
in
xchg
js
out
cmp
push
xchg
jae
daa
divb
out
xchg
cmp
sarl
sbb
das
pop
jge
mov
pop
stos
lahf
fsts
pop
bound
out
and
push
incl
test
mov
cld
or
or
js
in
inc
in
int
mov
and
fildl
int
mov
jne
daa
add
in
or
push
cmp
cs
sbb
inc
pop
lods
mov
mov
cmp
clc
lret
and
out
daa
enter
adc
cmp
testb
xchg
mov
daa
arpl
adc
cmpsb
in
sahf
fsubl
test
outsl
fcmovnbe
enter
fwait
lret
mov
into
mov
das
jle
or
xor
movsl
in
andb
push
add
rorb
inc
aas
jg
inc
push
lret
jbe
push
jle
inc
add
xlat
mov
inc
sub
jecxz
pop
insb
mov
cmpb
repz
jbe
cmc
cmp
push
fists
fisubrl
mov
popa
insb
fsub
loop
out
xor
fcoms
cli
sub
ljmp
lods
mov
cmc
rcrl
sti
jle
jo
dec
repz
outsb
xchg
mov
enter
or
cmc
in
les
dec
push
xchg
pop
dec
lcall
jp
mov
pop
repz
out
shll
sbb
fists
push
inc
mov
imull
cmc
sbb
test
add
dec
xchg
push
dec
mov
sbb
lret
pop
es
mov
adc
xchg
dec
xchg
out
jnp
cmpsb
add
sbb
mov
mov
fs
int3
lahf
cmp
inc
mov
fdivs
lds
push
adc
adc
adc
data16
lea
das
or
mov
inc
lahf
or
fsubl
add
sbb
push
arpl
mov
xor
sub
clc
sahf
in
xchg
mov
mov
fptan
lods
loopne
nop
ficompl
repz
inc
in
nop
mov
mov
adc
mov
in
bound
sub
cmc
je
xor
call
ljmp
mov
enter
xor
pop
adc
hlt
push
sbb
repnz
nop
dec
mov
cmc
jge
mov
mov
outsl
andb
in
xor
sbbl
sar
into
mov
xchg
push
inc
dec
mov
push
mov
pushl
jp
mov
mov
xor
inc
lods
pop
mov
adc
dec
scas
mov
jp
mov
pop
mov
cmp
mov
mov
rcrl
mov
jp
test
movsb
insb
jbe
aas
jl
cmp
aas
in
jp
je
dec
mov
jecxz
push
clc
push
outsb
popa
idivb
decb
pop
push
push
cmp
push
or
or
lock
das
gs
fildl
pop
test
pop
inc
or
jne
cmpsb
std
xor
cmp
popf
mov
cmpsl
rcrl
enter
outsl
ljmp
xor
add
ds
sahf
pop
pop
xlat
ss
jbe
in
std
test
push
jbe
push
lds
adc
loope
push
fsubrs
adc
mov
mov
pop
push
dec
sbb
xor
add
js
lret
in
fnstsw
and
xchg
cmp
and
jne
jle
cmp
push
inc
rorb
push
and
mov
das
cmp
aaa
add
jbe
outsb
push
mov
jl
rol
or
pop
cmp
rolb
mov
sbbl
sub
mov
ret
outsl
jnp
push
lret
out
and
dec
enter
fsts
into
rcl
scas
push
adc
jno
in
enter
jae
push
lret
in
stos
pusha
fsubrl
inc
or
int
jge
ljmp
mov
push
mov
mov
out
push
lock
enter
in
or
xor
inc
add
movsl
data16
jae
push
mov
dec
dec
cmp
or
mov
mov
sub
mov
mov
movsl
inc
cmp
xchg
data16
retw
add
add
repnz
lahf
insb
or
jl
fisttps
xchg
les
lahf
fucomp
and
push
enter
int3
jno
and
pop
xchg
clc
pop
cmp
es
fcomi
adc
ds
xor
xchg
adc
test
loope
sti
loop
inc
mov
lahf
ss
and
data16
add
testb
imulb
loop
es
out
mov
scas
gs
loop
pop
and
add
or
sbb
mov
dec
cmp
dec
dec
jl
in
ds
push
xchg
fs
push
push
lret
cmp
scas
lahf
fcoml
rcrl
ret
pop
xor
xchg
xabort
testl
xor
jbe
push
testl
mov
push
lcall
out
movsl
adc
sbb
data16
xor
cmpsl
mov
sbb
cmp
sarb
add
add
mov
pop
cmp
stos
fcmovnu
sbb
cwtl
lds
js
push
jo
add
pop
dec
pop
pop
into
cmp
push
jnp
fsubl
scas
mov
or
adc
insb
xorb
cmp
into
jo
push
scas
inc
andl
inc
testb
int3
aas
mov
xchg
faddl
aam
add
xchg
aas
mov
push
xchg
sahf
out
movhps
inc
mov
jecxz
inc
mov
add
cmc
mov
and
scas
repnz
mov
test
inc
xor
and
rorl
sbb
int3
and
adcl
or
xor
ja
and
shlb
imul
cmpsb
mov
add
mov
mov
popa
inc
mov
loop
cmp
push
jle
fs
push
into
sahf
loopne
push
mov
xchg
arpl
inc
cmp
sbb
out
cwtl
push
test
pop
mov
and
repz
bound
adc
cs
adc
les
add
push
inc
mov
cmpsl
sti
lahf
mov
adc
mov
adc
scas
mov
stos
mov
adc
fistps
inc
repnz
out
sarb
sbb
push
loopne
in
cwtl
test
jo
out
sti
mov
cld
in
adc
stc
fnstsw
pop
sub
mov
jp
xchg
clc
pop
jmp
add
les
add
sbb
add
outsb
mov
push
loopne
inc
frstor
jl
xor
adc
fimuls
jne
jmp
push
jo
mov
mov
subl
rcll
repz
or
cmp
clc
repz
push
cmp
pop
ja
sub
lret
push
pop
pop
push
les
dec
mov
cmp
cmp
ret
sub
mov
loope
inc
repz
insl
aam
clc
andb
add
add
or
test
sbb
scas
sbb
fidivrs
stos
test
in
cld
jae
mov
inc
sbb
or
inc
xchg
aas
rcrb
mov
xchg
add
pop
mov
lahf
in
hlt
idivl
adc
jo
cld
push
mov
xchg
dec
mov
lret
mov
cmp
fnsave
fsubs
test
inc
out
sub
ds
fisttpll
arpl
pop
mov
adc
xchg
aam
inc
adc
cwtl
notl
adc
sbb
das
jp
push
xchg
add
mov
das
jecxz
js
addr16
cmpsl
dec
mov
push
lods
icebp
fiaddl
aaa
jecxz
sbb
inc
push
lret
aas
xor
test
or
push
enter
scas
movsl
int3
cmp
lahf
mov
in
mov
repz
shll
adc
incl
repz
mov
ss
in
cld
dec
add
in
sbb
xor
fs
ss
pop
fimuls
push
test
gs
rcrb
sub
mov
fisubs
in
dec
sbb
sub
rcrl
inc
jmp
stc
pop
jle
cmp
cmp
test
lret
push
or
bound
mov
mov
xor
jg
aas
jecxz
mov
loop
jno
inc
fsubrp
je
jne
cmp
add
adc
frstor
pop
jl
cmpsl
dec
push
jg
pop
push
mov
cs
stos
lcall
aas
outsb
int
ja
ds
push
jmp
push
push
xchg
out
mov
mov
mov
mov
add
sbb
in
add
pop
xor
xchg
rolb
push
insb
les
xor
cmpsl
sarl
mov
sbb
and
sbb
hlt
std
pop
test
jno
dec
cmc
dec
pop
and
pop
push
addr16
out
arpl
xor
into
jno
dec
inc
inc
mov
mov
divb
pushl
cmp
sahf
dec
fimuls
shll
mov
cmpsb
ja
imul
out
out
ljmp
inc
or
push
pop
pop
sahf
int3
cs
mov
adc
stc
insl
frstor
or
dec
inc
das
jecxz
out
fs
sahf
cmp
xlat
push
popf
in
mov
mov
sbb
aas
loop
or
push
outsb
leave
bnd
ss
add
sub
push
jno
sysexit
cmp
enter
cmp
pop
out
or
ss
out
dec
sahf
ret
dec
addr16
adc
xchg
dec
test
inc
js
mov
jle
pop
cltd
js
pop
xchg
rcl
out
push
popf
cmp
push
stos
fdivl
cmc
jbe
xorb
sub
les
cmp
shlb
pop
mov
out
jno
mov
in
inc
push
out
push
outsl
testb
clc
les
and
leave
rorb
scas
rcr
xchg
pop
push
ds
ss
pop
inc
mov
cmp
mov
mov
add
popa
push
sub
mov
inc
sbb
xchg
loope
inc
jle
pop
cmp
or
nop
cli
in
mov
cmc
mov
scas
les
cltd
icebp
aad
mov
push
ret
mov
add
mov
sahf
mov
fadd
push
push
hlt
es
into
outsb
mov
jl
cs
lock
into
lret
test
xchg
ss
aam
fimuls
fdivrl
pop
inc
mov
adc
ret
fdivrl
data16
ret
xchg
add
xlat
negl
or
into
sub
fbld
mov
push
fwait
xchg
mov
mov
fcmovnbe
test
roll
sub
mov
pop
lret
gs
leave
cwtl
xchg
shlb
arpl
push
adc
sahf
adc
ss
inc
sub
jns
mov
mov
add
fxch
and
and
test
daa
push
inc
into
ds
inc
adc
mov
add
dec
xchg
mov
in
jno
ss
xor
jle
mov
cli
inc
add
aad
mov
leave
dec
add
jo
pusha
repnz
lds
sbb
je
jp
mov
or
sub
clc
idivb
inc
fmulp
mov
data16
xchg
cmpsb
mov
fsubl
mov
sahf
jmp
lret
std
mov
push
aam
shrb
rcrb
add
lret
push
fmuls
mov
mov
cmp
adc
cmpsb
mov
jle
nop
ss
add
xchg
pop
mov
cs
xor
fwait
pushf
and
sbb
inc
lds
xlat
or
into
push
xchg
and
mov
aaa
adc
fisubs
aas
inc
and
cmp
inc
scas
cli
mov
add
jbe
inc
cli
call
mov
sbb
mov
rolb
mov
adc
aaa
insb
cltd
mov
dec
pop
sbb
mov
test
add
jp
and
leave
divl
loope
sbb
jbe
adc
movsb
nop
xchg
insb
rolb
sub
mov
iret
cli
fstpt
add
or
mov
add
into
mov
sub
filds
loope
fadds
add
jecxz
adc
rclb
arpl
and
cmpsb
iret
negb
jae
fadd
loop
cmp
adcl
cld
mov
ss
cli
fwait
in
lds
jbe
fidivrl
out
cld
cmp
iret
mov
test
out
push
inc
in
popl
sbb
movl
push
or
xor
add
or
cli
int3
mov
cltd
mov
xchg
icebp
or
lcall
add
ss
xchg
sbb
cmpsb
mov
lret
push
call
shl
sarl
sbb
mov
mov
cmp
cmp
bswap
jp
loopne,pn
icebp
sbb
jno
js
jbe
mov
sti
jle
lods
je
add
add
ror
fldt
mov
loop
lea
mov
mov
sbb
out
sbb
loopne
mov
mov
popf
inc
jno
lsl
ss
ret
jmp
notb
dec
lret
pushf
mov
ret
repz
movsl
clc
mov
sti
mov
sub
mov
mov
inc
pop
mov
icebp
cs
std
xlat
adc
add
ljmp
int
out
fiadds
mov
es
or
not
mov
fadd
rcll
xchg
inc
jecxz
dec
pusha
scas
ss
mov
aaa
fcmovnb
push
imulb
cmp
or
mov
mov
mov
add
outsb
fcoms
sbb
pop
out
mov
mov
popf
mov
je
adc
adc
cmp
aaa
into
loopne
mov
jo
cli
psubusb
mov
sbb
mov
lret
sbb
and
jne
cmp
mov
add
push
nop
xor
ret
pop
ret
sbb
and
mov
sbb
jno
enter
shl
xchg
lods
mov
pusha
loop
push
inc
notl
cmp
xchg
dec
and
xlat
mov
add
repz
and
fsubrs
mov
lock
mov
mov
add
fmul
dec
lea
dec
call
kmovb
xchg
mov
inc
dec
adc
fnsave
sti
jle
xor
dec
int3
mov
jmp
lock
shr
out
cs
mov
or
jge
mov
pop
sbb
dec
adc
jo
mov
mov
mov
sbb
adc
inc
xchg
dec
out
sbb
or
lods
pop
shl
data16
pop
or
cld
xlat
jbe
mov
fdivs
mov
divb
scas
and
leave
arpl
lcall
adc
in
push
lea
rcrl
lock
test
pop
inc
pop
inc
lods
mov
add
pop
and
inc
in
xor
or
jb
out
cmp
iret
dec
enter
mov
les
mov
mov
hlt
mov
mov
jnp
idiv
add
fdivrs
scas
mov
idivl
add
push
cwtl
jp
xchg
lock
jmp
push
orb
es
rclb
mov
lods
ja
adc
loop
sar
lds
mov
mov
push
cmc
inc
add
and
mov
mov
ds
test
mov
imul
dec
idiv
sti
mov
mov
sbb
jg
push
inc
cs
sbb
cmp
mov
out
cmc
xchg
or
cld
ds
mov
mov
call
jle
push
aaa
xor
jb
out
nop
cli
fcmovnb
xor
fiaddl
aaa
lret
fs
int
dec
cmp
cli
shrb
mov
push
fwait
mov
das
rcrl
sbb
push
cmp
int3
lock
cwtl
mov
mov
mov
jge
push
or
loope
lret
jb
and
orl
xchg
jl
sub
pop
ds
adc
sbb
ds
dec
aad
ja
pop
mov
loop
pop
scas
push
mov
movsb
adc
mov
into
pop
out
imul
sbb
nop
and
jae
jp
ss
add
adc
leave
adc
fistpll
add
dec
adc
mov
mov
pop
int3
movsb
lahf
xchg
sbb
xorb
loop
lret
loop
cmp
fldcw
stos
xchg
xor
into
loop
and
mov
or
push
push
add
mov
inc
clc
cli
sub
mov
loop
insl
ss
push
push
movsb
das
jp
adc
sub
cmp
popf
ljmp
xorb
jmp
adc
js
cmp
push
inc
dec
cmpsl
pop
inc
cli
mov
mov
mov
add
fsub
sarl
xchg
movsl
sub
jnp
popf
cmp
push
fcompl
loop
hlt
hlt
mov
xor
mov
sar
jle
out
jns
add
dec
pusha
call
or
mov
out
mov
out
ds
or
mov
mov
sub
push
add
mov
pop
cmp
out
pop
cmp
jo
cmpsb
sar
sarb
into
sti
pop
mov
mov
sub
ds
or
int
ret
xchg
ror
pop
ds
xor
lcall
sbbb
in
and
dec
adc
out
ss
sub
std
not
out
push
leave
pop
sbb
cs
mov
dec
scas
lods
mov
jmp
pop
ds
out
dec
dec
iret
xchg
push
sub
outsb
data16
fildl
mov
loop
xchg
and
test
xchg
nop
xor
sbb
ja
mov
sbb
inc
add
fadds
mov
jne
lret
xchg
cmpsl
dec
push
sbb
mov
pop
std
add
es
sti
ds
sbb
cmp
mov
loope
mov
sbb
cli
test
dec
fimull
push
retw
lret
xor
and
inc
lret
ja
orb
cs
mov
int3
mov
shl
hlt
fnstenv
jns
add
out
mov
adc
insl
ds
stos
jo
mov
cld
add
mov
fisubl
mov
sbb
fdivs
sub
movb
into
cmp
lret
jmp
sub
cmp
mov
das
mov
mov
xor
inc
hlt
pop
cmp
mov
shl
out
mov
pop
stos
mov
xchg
add
adc
mov
aaa
adc
mov
iret
shl
in
cmp
inc
xchg
movsb
js
fsubs
push
mov
mov
mov
pop
or
sbb
fldl
shrb
ss
cmc
jno
xchg
test
jbe
dec
test
jae
push
jp
add
mov
movsl
jmp
into
test
fs
ret
cvtpi2ps
out
and
mov
faddl
es
xor
xor
not
cmp
divl
mov
pop
dec
pop
mov
shlb
fucom
adc
fnop
mov
pushf
xchg
ss
stc
mov
mov
repnz
mov
std
jnp
cmp
into
mov
jmp
lds
ss
stc
inc
sub
rcrl
mov
in
cmp
aaa
push
dec
nop
cli
xchg
mov
mov
mov
cmp
jbe
xchg
inc
sub
jns
rorl
lods
cmpsb
into
fadds
push
xchg
out
rcr
push
call
loop
popa
mov
pusha
and
movsl
xlat
sbb
fisubrs
adc
adc
mov
ficoml
mov
mov
incl
or
dec
dec
jo
mov
or
cmp
ret
pop
in
cs
aam
ret
inc
add
and
in
repz
int
sub
stos
cs
sarl
insl
sub
popa
out
mov
out
push
and
push
jge
in
mov
gs
adc
pop
and
push
loope
or
pop
fstpl
fmuls
mov
xchg
cmpsb
not
pop
test
or
int3
mov
lret
iret
rsm
adc
mov
into
idivb
jnp
lds
adc
adc
mov
ds
mov
dec
xor
mov
ds
cmp
ds
push
mov
jl
sarb
fwait
lods
aaa
push
xor
mov
pop
ss
adc
lock
jbe
mov
ds
pop
add
into
ja
lahf
clc
mov
and
mov
sar
loope
out
dec
mov
adcb
test
aaa
mov
ds
xchg
aam
repz
dec
nop
cmp
cs
cmpb
gs
lret
shll
loopne
xchg
jmp
cs
nop
adcl
adc
inc
pop
stc
push
mov
sub
mov
popf
mov
xor
mov
dec
cmp
cmc
pop
incl
pop
mov
and
inc
push
shll
jle
inc
inc
daa
mov
sbb
out
clc
xchg
notl
out
loopne
out
sbb
mov
rolb
sbb
ss
lret
mov
subl
mov
mov
mov
mov
push
scas
add
pop
dec
mov
pusha
push
push
into
stos
jmp
out
loop
jp
xchg
loop
sub
int
and
mov
loopne
arpl
or
xchg
or
inc
fwait
mov
pop
lds
jbe
in
adc
in
call
icebp
incb
cli
mov
mov
lret
mov
ds
popa
mov
lret
jno
aas
mov
ds
out
jecxz
push
sub
fistpll
xlat
rcrl
ds
push
shl
inc
mov
out
mov
jae
pop
push
orl
out
neg
mov
jp
addb
out
in
xlat
mov
dec
mov
cmp
mov
in
aas
cmp
mov
inc
leave
pushf
mov
push
paddusw
repnz
lock
jae
mov
mov
adc
push
xchg
fdiv
dec
mov
int3
decb
lcall
ss
and
mov
xor
mov
xchg
loopne
outsl
lret
and
sbb
sub
adc
cld
mov
imul
scas
out
sub
sub
mov
mov
pop
push
dec
and
adc
loop
mov
jb
into
mov
xorl
in
shll
jl
ljmp
ret
ds
pop
mov
xchg
push
mov
mov
lods
mov
jmp
mov
dec
pop
or
push
loopne
xchg
add
jnp
mov
pop
mov
inc
mov
pop
dec
mov
ss
mov
add
lods
bnd
fldcw
ss
push
clc
das
push
xor
loopne
lret
fcmovne
leave
cmp
idivb
dec
adc
xchg
aam
adc
cmp
cmp
mov
mov
call
loopne
icebp
dec
cwtl
pusha
mov
mov
mov
aaa
and
pop
jg
loop
cli
inc
mov
jbe
cmp
mov
mov
gs
ret
aas
lds
jo
lret
lock
fsubs
push
or
mov
sahf
inc
add
loopne
mov
cmc
dec
dec
xor
dec
mov
mov
cmp
divb
mov
cwtl
aam
rcl
push
fwait
int3
add
push
cmpsb
jp
mov
repnz
loop
popa
ror
jle
dec
cmp
adc
mov
jbe
mov
mov
jno
out
testl
fincstp
push
sub
pop
pop
mov
ss
adc
xchg
inc
scas
cli
mov
jmp
mov
rcrb
repz
pop
sub
sub
stos
sbb
add
cmpsb
mov
inc
mov
sub
fidivrl
mov
push
aaa
aaa
mov
ss
xchg
into
daa
jg
jmp
in
add
and
push
lods
into
mov
data16
sahf
imul
cli
out
mov
fsubrs
cltd
leave
ds
incb
fdivrs
mov
loopne
cmpsb
adc
push
lret
xchg
mov
js
or
test
jbe
hlt
cs
push
fnstsw
into
cli
ret
inc
adc
outsl
jbe
adc
fiaddl
inc
dec
mov
nop
cmp
cmpsb
sti
dec
cmpsb
sahf
ret
or
shll
fcom
mov
dec
adc
mov
pushf
sub
adc
pop
sarl
push
xchg
mov
outsl
rcll
mov
xlat
sbb
or
jp
iret
mov
leave
test
inc
popa
not
or
pop
xchg
dec
fadd
aad
out
dec
sti
call
sub
fsubrs
mov
aaa
fidivrl
mov
imul
mov
cmp
lods
lods
add
xlat
xorl
cmpsb
fsts
xchg
call
mov
pusha
jle
mov
shrl
ret
xlat
sahf
popa
pop
in
jle
js
push
mov
cmp
jle
xor
adc
imul
lcall
lea
sub
mov
pop
je
les
push
idivl
pusha
lahf
scas
movb
in
lret
out
push
out
dec
popf
mov
mov
pushf
cld
xor
mov
pop
lret
in
int3
cmpsb
test
por
dec
add
mov
mov
arpl
fdivs
mov
and
jp
in
fidivl
adc
jecxz
pop
leave
das
mov
mov
sbb
mov
mov
mov
enter
ljmp
push
dec
iret
cli
fnstsw
ja
sub
iret
sti
add
pop
gs
data16
push
mov
inc
fidivs
sarb
es
cmp
mov
fdivs
or
mov
arpl
jns
out
ss
cld
jle
fistpll
loopne
xchg
and
cmp
mov
pusha
mov
sti
jae
jge
xacquire
or
subl
shll
sbb
mov
inc
popa
push
into
xor
mov
xchg
ds
sbb
jge
stos
fidivrl
push
outsb
lods
xchg
mov
adc
subb
into
jle
mov
mov
adc
or
bound
fidivrl
dec
cmp
adc
inc
cli
fsubs
nop
mov
in
xor
or
shll
add
jg
mov
leave
ficoms
arpl
dec
inc
pop
mov
aad
mov
xor
fiaddl
xor
cmp
adc
testb
pop
loopne
sbb
rol
icebp
pop
dec
repnz
data16
mov
xchg
es
jle
jle
addr16
shrb
es
cmp
mov
into
filds
cmpsb
es
mov
lcall
lret
mov
mov
call
inc
add
pop
jbe
push
cmpsb
push
add
clc
mov
shlb
test
jmp
push
mov
das
xorb
adc
sub
mov
cli
cmc
out
mov
push
cmpsb
cli
fwait
out
jmp
mov
les
mov
add
mov
cs
leave
lret
and
stc
inc
ret
out
aaa
sub
jp
call
mov
push
pop
pop
sbb
dec
xchg
add
fidivs
push
dec
xchg
out
sub
dec
js
out
lret
cmpsb
idivb
test
push
sbbb
outsl
jp
mov
pop
push
ficompl
cmp
sub
push
push
mov
and
inc
sub
cmpsb
dec
mov
dec
jle
xchg
mull
movsb
xchg
in
es
add
loop
push
adc
push
cli
js
daa
loopne
ja
or
mov
jle
fcmovbe
fcomi
mov
or
adc
push
adc
xchg
cmc
sar
addb
cli
cmpsb
lcall
pop
fldl
dec
mov
mov
xchg
mov
int
out
out
lds
pop
inc
jbe
ds
incl
or
sub
lds
and
cli
in
ret
sbb
mov
ss
inc
enter
mov
data16
stos
ds
int
lock
data16
mov
scas
cmp
out
push
add
cld
sti
js
out
dec
push
inc
shlb
mov
and
sahf
lock
into
out
repnz
fdivrs
outsb
out
into
sarb
jbe
jbe
mov
mov
shll
pushf
mov
enter
in
aad
jle
ljmp
mov
sub
shlb
loop
cmpb
jecxz
pushf
sub
jne
mov
push
enter
cltd
data16
or
add
add
addr16
fmull
test
ret
xor
xchg
inc
inc
scas
cli
aam
mov
jge
xor
mul
enter
icebp
push
lcall
out
into
mov
xlat
in
pushf
adc
mov
in
push
sbb
lahf
mov
adc
pop
jp
gs
push
ss
ret
test
popa
mov
mov
inc
dec
sbb
jle
ret
ss
or
mov
mov
scas
inc
add
bound
mov
cmp
data16
ds
mov
mov
or
pop
ljmp
inc
jbe
jp
stc
jmp
xchg
into
fwait
in
mov
hlt
adc
or
ret
push
jg
iret
push
es
out
mov
push
loopne
mov
cwtl
xchg
pusha
insb
dec
xlat
lods
mov
cmp
inc
push
add
stos
loope,pt
mov
mov
mov
sahf
outsl
into
ret
inc
mov
xor
adc
cmp
scas
xchg
nop
dec
push
mov
lret
fsubrl
movsl
mov
call
add
mov
mov
adc
leave
mov
out
loop
addb
pop
lods
lea
cmp
call
push
and
mov
jnp
inc
in
out
mov
adc
sub
mov
add
loop
idivb
mov
aaa
fsubrl
pop
jo
dec
shrb
pop
cltd
jbe
imul
lods
mov
push
xor
inc
adc
pop
jg
xchg
push
mov
mov
fs
test
fildl
jp
nop
in
mov
mov
pusha
enter
cmc
xor
push
fmuls
insl
sub
enter
aad
stos
xchg
lret
pop
pop
mov
out
sub
repnz
sbb
pop
call
dec
push
ljmp
jbe
or
or
in
mov
lcall
dec
test
dec
fists
mov
sub
mov
push
mov
mov
mov
icebp
test
lds
push
enter
jge
ja
cmp
cld
hlt
fcoml
xorb
outsl
mov
jb
push
push
sti
ja
cmp
push
rcl
aam
adc
xor
divb
mov
cld
push
aad
movl
sub
mov
mov
cmpsb
cmc
xchg
iret
add
cs
lret
in
loop
std
mov
cli
xlat
xor
fmull
pop
ss
and
sahf
aaa
leave
adc
cli
mov
dec
lds
push
cmp
or
int3
sti
iret
and
dec
pop
into
mov
into
mov
enter
mov
mov
mov
repnz
mov
jp
adc
cmp
inc
dec
pop
movsl
add
out
fdivs
mov
pop
fwait
stc
loop
add
nop
idivl
jmp
sub
rcrb
stos
stos
test
gs
jp
xor
fsts
fisubs
mov
scas
shlb
jg
and
push
stos
scas
adc
jo
into
add
lock
pop
data16
adc
dec
rol
mov
or
into
movsb
mov
fwait
cmpsb
dec
jae
push
int3
sbb
mov
mov
sbb
mov
pop
jp
cmp
loope
mov
or
bound
iret
inc
mov
fistps
fidivrl
je
ret
xchg
out
sbb
dec
dec
mov
mov
ds
loop
jmp
push
mov
and
sarb
inc
inc
mov
xchg
cli
rcll
jno
scas
loop
fucom
mov
mov
shl
mov
ret
adc
sbb
push
xor
fcompl
mov
ljmp
push
mov
add
xor
andb
mov
mov
test
fistps
cmpsb
idiv
ror
movsl
arpl
dec
rol
push
fnstsw
pusha
mov
dec
fwait
jns
jbe
dec
cmpsb
and
fsubl
ss
mov
adc
add
jp
aaa
jo,pt
mov
into
mov
xor
or
mov
jbe
popf
roll
sub
adc
leave
mov
mov
mov
push
out
out
jbe
push
filds
xlat
xor
stos
add
mov
jmp
in
inc
lcall
jle
xchg
mov
mov
pop
add
pop
loope
cmp
fcmove
shl
jbe
inc
push
mov
mov
cmp
ds
xchg
scas
push
cli
cwtl
mov
sbb
cmpsb
add
ja
push
adc
inc
into
les
nop
adc
mov
mov
jle
push
pop
jo
mov
xlat
aad
and
aam
stc
mov
jb
fdiv
loope
popa
loop
inc
xchg
mov
ror
jne
clc
cmp
ljmp
lret
mov
lock
xchg
mov
adc
xchg
test
fists
mov
inc
jle
push
je
rclb
push
not
xchg
xor
pop
push
or
sarl
enter
pop
divb
pop
lods
call
xlat
enter
popa
lods
or
push
mov
jg
cld
mov
pop
out
fsubrl
cmp
fisttpll
pop
sub
sbb
push
pusha
cli
insb
into
leave
fimull
push
mov
rcrb
pop
xor
mov
push
mov
sbb
out
div
adc
lods
jecxz
lret
ds
mov
mov
add
andl
pushf
enter
jmp
inc
xor
lahf
add
pop
cwtl
mov
sub
mov
add
popf
testl
lds
add
or
adc
xchg
sbb
jne
leave
push
xor
jp
xchg
adc
std
xor
movsl
push
pop
dec
outsl
sbb
out
push
test
aad
leave
mov
xchg
inc
cwtl
popf
push
into
sar
adc
cli
and
dec
sbb
inc
mov
int
adc
pushw
scas
mov
and
cmp
jne
adc
push
into
inc
cli
imul
nop
mov
imul
divl
mov
movl
stc
ds
or
pop
pop
pop
and
mov
addr16
sub
icebp
cltd
bound
or
or
push
loop
add
jnp
pop
mov
out
and
and
fmuls
iret
mov
clc
addb
fcoml
js
xchg
out
xlat
fbstp
lods
in
rcrb
push
mov
sbb
jmp
cmpsl
sub
sub
mov
mov
cmp
js
ret
pop
cli
es
push
mov
mov
loop
ret
pop
xor
out
sbbl
test
enter
push
sub
lahf
lret
jbe
in
mov
lret
pushf
lret
xchg
and
int
rorl
pop
pop
cmpsb
or
dec
mov
clc
in
cmpsb
test
push
rol
push
sarl
or
pop
mov
imul
pop
cs
sub
jg
adc
sub
aaa
fiadds
mov
test
jp
dec
mov
cli
aaa
aad
xlat
sub
ss
stos
fbld
and
adc
adc
les
pushf
mov
sbb
cs
ds
lret
mov
inc
jmp
in
leave
cmc
out
mov
sub
mov
inc
push
les
sub
mov
mov
mov
ja
cmp
and
test
repnz
push
ljmp
xchg
adc
mov
pop
aad
leave
mov
inc
cli
dec
sub
test
push
mov
cmc
jb
fcomp
mov
lea
or
jb
int
repnz
negl
lret
pop
push
les
push
fiaddl
out
lock
sbb
push
mov
fs
adc
lods
xor
mov
popa
aas
sar
ficompl
rcll
loope
dec
dec
pop
dec
sbb
pop
or
jo
xchg
mov
mov
sahf
push
mov
mov
cli
sbb
mov
sahf
add
fsubrl
xlat
xchg
arpl
push
insb
cli
mov
lret
pop
lret
mov
into
xor
fadds
shrb
movsl
xor
mov
jb
jbe
popa
dec
lea
enter
dec
dec
mov
or
jnp
mov
sbb
or
cld
movb
sahf
jbe
jmp
pop
sarl
xor
mov
shlb
test
mov
leave
mov
scas
push
fmuls
sub
lret
cltd
inc
mov
leave
sbb
xchg
lcall
fmull
enter
lahf
inc
dec
inc
adc
mov
cmpsb
cli
loope
mov
pop
mov
xchg
in
in
data16
or
call
lret
pusha
cmp
fstl
ds
daa
cmp
idivb
sub
fadds
mov
or
scas
xor
cmp
fcmovnbe
pop
fs
mov
mov
ret
arpl
mov
adc
push
cmp
cmp
dec
xlat
xlat
lahf
cmp
dec
jb
fadds
mov
out
mov
xlat
dec
loop
sub
push
jns
pusha
mov
int3
mov
mov
or
outsb
lcall
into
mov
mov
push
push
jp
scas
mov
and
add
scas
repz
jl
roll
in
xchg
cli
nop
push
adc
inc
inc
add
cmp
add
in
call
icebp
jns
testb
add
mov
cli
jg
xchg
lret
push
cmpb
add
js
dec
and
repnz
add
lods
mov
aaa
add
rcr
out
jb
add
data16
cmp
jbe
mov
in
dec
sub
adc
insb
mov
test
ljmp
cmp
xor
loopne
movsl
ja
subl
add
das
fidivrs
add
mov
popf
outsb
dec
cli
push
sub
jb
ja
pop
stc
fwait
enter
lods
callw
std
xlat
mov
adc
jbe
das
je
stos
mov
aad
jno
in
out
aaa
inc
jo
nop
mov
cmc
movsl
sub
fsubr
sub
push
test
clc
xor
and
cmp
aas
cmp
jo
repnz
lcall
lret
enter
mov
add
or
mov
cmp
mov
pop
mov
jle
adc
or
iret
enter
mov
mov
fsubrs
add
je
das
and
mov
xchg
in
insb
adc
mov
xchg
push
leave
lock
mov
mov
movsb
push
ljmp
mov
rolb
test
call
mov
jmp
pop
and
mov
cmp
mov
xor
xorb
sub
mov
pop
pusha
cli
fcmovne
rorl
push
push
jb
cmp
out
fwait
sub
js
push
xchg
mov
jo
clc
xchg
inc
add
int3
jne
fcmove
scas
sub
or
push
cli
mov
rcll
scas
xchg
mov
lds
repz
scas
mov
mov
sub
mov
ret
out
cmp
faddp
jo
mov
addr16
and
leave
out
push
jg
aad
xchg
fistpll
mov
in
lret
dec
mov
cmp
push
adc
fidivrl
in
pop
ljmp
or
sbb
adcb
sub
adc
mov
aaa
xchg
mov
mov
loop
jmp
rcll
inc
mov
dec
fidivrs
fs
inc
jbe
ret
mov
mov
cmp
neg
add
cmpsb
insb
mov
pop
test
mov
aaa
adc
imul
sub
loope
sbb
in
fwait
lock
pop
dec
pop
sti
aad
std
imul
cmpsb
mov
cli
icebp
inc
cmpsl
lret
push
shrb
mov
ds
scas
mov
int
inc
inc
data16
push
pop
pop
xlat
and
mov
mov
and
cli
inc
mov
or
add
sub
out
cmpsb
pop
arpl
sahf
mov
shrl
out
das
cmp
test
lods
xchg
push
mov
ljmp
idivw
and
dec
sub
dec
lcall
dec
jno
mov
add
xchg
dec
ds
mov
jbe
mov
adc
push
pop
xor
pop
mov
dec
cmp
mov
pop
int3
mov
pop
cmpsb
pop
add
push
nop
push
std
or
sub
pusha
adc
out
int
in
xchg
xchg
mov
pop
sub
inc
add
inc
mov
repnz
test
sub
sub
loop
stos
roll
mov
inc
lahf
ja
fcmovb
leave
aad
frstor
sub
mov
ljmp
lcall
call
aam
push
insb
repnz
push
mov
cmc
ret
clc
subb
add
cmp
ljmp
add
pop
jb
ret
push
add
int3
dec
int3
push
ret
ficoml
aam
xor
lahf
fsubrs
out
or
mov
xor
push
mov
cld
insb
push
aad
xchg
fimull
fcoml
sub
nop
jo
jle
mov
mov
and
mov
xlat
lds
daa
jae
inc
mov
into
inc
mov
sbb
mov
mov
or
and
inc
aam
xchg
loopne
mov
ror
mov
and
imul
xchg
decb
sub
dec
mov
ljmp
pop
xchg
inc
push
add
cli
in
mov
sub
daa
rclb
inc
xor
jecxz
sub
jg
js
repnz
xlat
movsbl
lock
mov
fcoml
add
scas
add
inc
mov
dec
scas
jbe
mov
sbb
push
xchg
mov
loopne
xchg
mov
or
sub
jns
lds
sti
adc
rol
test
and
xchg
cwtl
int
xor
add
dec
idiv
adc
add
mov
in
mov
fsts
aam
xchg
shr
xor
lret
xchg
xchg
mov
cmp
mov
push
add
leave
jb
fcoms
or
lds
js
and
add
fimull
clc
xor
xor
in
mov
and
ss
xor
inc
mov
or
mov
cmp
add
sarl
sub
push
bound
push
mov
pushf
xor
cmpsb
imul
std
leave
int
mov
mov
lea
pusha
int
daa
fstps
mov
lock
test
mov
fnsave
xlat
scas
ds
rcll
in
sub
cmp
mov
ja
or
inc
jo
cmp
push
sbb
iret
pushf
inc
jo
enter
sub
shrb
addr16
test
mov
pop
fmuls
into
push
mov
fidivl
cmova
ss
es
mov
sub
cli
fidivrl
data16
dec
stos
add
es
mov
mov
adc
inc
inc
lret
movsb
shl
inc
mov
xor
fnsave
cs
cmp
fstl
enter
add
adc
mov
and
cld
cmpsb
mov
adc
dec
xchg
shlb
push
lds
xlat
add
ret
out
divb
mov
inc
xchg
push
add
sub
inc
mov
mov
adc
pop
add
push
cli
jb
les
jle
and
not
leave
stc
sub
shlb
fsubrl
add
into
add
or
mov
test
scas
push
mov
adc
fwait
mov
adc
xor
cmpsb
scas
jle
sub
enter
int
push
enter
imul
add
int3
ds
test
andb
xchg
mov
ret
iret
lods
pop
cmp
scas
inc
add
pop
sbb
ret
fldenv
mov
jg
in
mov
cld
aaa
repz
imul
loop
push
jbe,pn
lea
mov
cmp
dec
mov
xor
jnp
xlat
sahf
adc
pop
jns
fcom
iret
mov
loop
idivl
loopne
jbe
shl
mov
add
mov
pop
rolb
fdivs
sahf
addb
adc
mov
pop
or
pop
adc
leave
jge
int3
jmp
cmp
in
sbb
mov
pop
aaa
testl
inc
mov
adc
inc
jle
add
js
mov
pop
add
js
js
jecxz
jo
fcompl
mov
jo
loop
iret
mov
loop
pop
cli
insb
add
out
fidivrs
insl
sti
popa
out
mov
mov
jle
aam
ds
cmpsl
mov
cmpsb
or
add
add
scas
jl
or
lods
push
mov
inc
add
add
sub
sbb
ficoml
rorb
scas
xchg
cmp
aad
xchg
aaa
push
rolb
inc
and
push
sti
dec
rcl
pop
pop
ret
sub
outsb
test
in
add
cmp
cli
or
mov
stos
push
hlt
sbbl
mov
in
std
ds
or
lret
mov
jecxz
outsl
and
push
movsl
jbe
imul
mov
int
loop
ss
jle
adc
lock
adc
movl
in
data16
sarb
ja
dec
mov
lcall
retw
cs
xlat
aas
sbb
jbe
push
nop
push
fwait
cli
jecxz
ret
mov
scas
add
mov
bound
jp
ret
mov
pop
inc
pop
ds
enter
pop
and
pop
or
loopne
pushf
mov
and
fdivrp
jbe
stc
ss
movsl
mov
add
nop
cmpsl
mov
inc
test
cmpsl
data16
mov
add
sbbb
insb
xchg
leave
arpl
notb
data16
jbe
jne
sub
cwtl
mov
push
inc
rol
ret
out
mov
scas
cmp
and
popa
cmpsb
in
outsl
sbb
pop
push
hlt
in
jle
and
ljmp
and
xchg
jge
aaa
jns
cmp
out
repz
add
in
mov
push
cmp
mov
inc
imul
rorb
xchg
jne
out
mov
pop
or
stc
and
es
or
and
add
lods
shlb
nop
out
outsl
icebp
cs
xor
mov
fucom
mov
xlat
mov
dec
inc
mov
stos
mov
movsb
add
lds
enter
xchg
ret
mul
leave
sahf
cmp
in
subl
mov
add
sarl
cmp
mov
cwtl
xlat
mov
xlat
dec
add
fildll
shl
stc
pushf
mov
or
insl
push
mov
rolb
jle
push
ds
scas
mov
leave
aaa
ffreep
and
mov
jg
jle
pop
add
mov
pop
ds
int
mov
jecxz
inc
mov
sti
mov
jmp
inc
out
cmp
add
loop
sbb
das
mov
or
dec
xchg
gs
lock
outsl
in
sub
icebp
fwait
cld
mov
jae
add
mov
std
cmpl
lret
xor
mov
mov
es
inc
add
loope
mov
lods
lret
cmpsb
ret
or
in
loop
mov
mov
sti
daa
pop
sub
loopne
mov
incb
in
in
mov
lcall
fdivl
cli
mov
nop
mov
cld
xor
lret
fidivs
pop
repnz
push
aaa
iret
jmp
aaa
jle
mov
fwait
ja
xchg
mov
movb
or
imul
mov
fdivs
jl
push
mov
ficoml
xor
mov
mov
hlt
mov
inc
mov
or
shlb
std
ss
inc
mov
lret
popa
pop
dec
lds
cli
cltd
sub
push
add
xor
pop
cwtl
in
loop
inc
jnp
xchg
cli
out
pushl
push
mov
mov
insb
cmpsb
ds
mov
pop
jns
lcall
jp
aas
fnstsw
loopne
mov
fs
rorl
lcall
adc
inc
jmp
sub
xor
mov
test
inc
inc
dec
add
xchg
fdivs
mov
std
daa
scas
ss
pop
sarl
inc
push
rcrb
movsl
stc
jae
and
std
xchg
and
repnz
fcomps
mov
ret
arpl
adc
mov
call
mov
cs
bound
scas
std
shll
mulb
scas
adc
cmpsb
cmpsl
mov
inc
movsb
sub
push
add
adc
addl
lcall
mov
sbb
in
xchg
sub
fsubs
hlt
mov
xorb
lret
sub
jbe
ds
xor
cmpsb
leave
clc
fsts
sahf
or
add
mov
jno
adc
dec
out
lret
int
shl
mov
sub
fmul
sarl
into
idiv
inc
mov
dec
insb
rep
fimuls
aaa
mov
xlat
cli
sub
adc
outsb
mov
jecxz
aad
cwtl
mov
cltd
cmp
xor
xchg
int
sbb
mov
mov
xchg
mov
mov
ja
or
int
cmp
add
idivl
std
add
mov
add
iret
jno
add
jo
adc
call
ss
jg
cmp
adc
imul
fists
test
ret
in
hlt
jmp
fidivl
iret
call
sub
iret
lods
pop
mov
inc
mov
adc
xor
call
pop
mov
inc
fcompl
mov
fisttpll
lds
jl
add
fsubs
std
sbb
loop
mov
into
mov
mov
je
pop
xor
jl
jp
popf
jb
push
add
insl
sbb
mov
mov
mov
fidivrl
pop
sub
sub
fdivr
xor
mov
xor
push
je
jge
das
aam
lcall
cs
cli
jbe
mov
xchg
cli
pop
xlat
mov
neg
jb
rcrl
push
les
clc
mov
into
jg
fnsave
pop
not
jne
sti
ret
and
jmp
xchg
js
pop
ret
out
lret
test
dec
sbb
aad
iret
mov
cld
adcl
mov
div
stos
fisttpll
cltd
cmp
incb
int
vsubsd
pop
push
lea
mov
test
add
cli
xor
cli
mov
mov
adc
dec
xchg
mov
jg
icebp
test
loopne
ss
sbb
sbb
cmc
xchg
xor
and
mov
mov
stc
vpmaxub
add
jnp
shrb
fsubr
mov
mov
or
adc
sub
sub
mov
pop
mov
jle
mov
pop
pop
decb
iret
pop
fucom
mov
jb
enter
cmpsb
jge
loop
mov
repz
in
mov
xchg
xor
mov
mov
int3
cmp
mov
test
fsub
adc
inc
dec
outsb
and
adc
fiadds
gs
push
xlat
mov
gs
inc
xchg
movsb
inc
cmp
into
outsb
sbb
sub
jle
cmpsb
aaa
lret
int
xor
push
adc
pushf
movsb
movsb
int
adc
dec
in
ret
ss
pop
cwtl
aas
cld
sahf
das
psubsb
sub
xchg
add
test
movsb
ret
mov
xor
gs
ds
or
cwtl
mov
sub
push
leave
or
xor
push
loopne
add
push
jne
in
dec
mov
popf
mov
stos
cmpsl
push
push
jns
lock
sub
mov
cwtl
ljmp
adc
enter
or
mov
lret
or
pop
xchg
neg
cmp
pop
xchg
loopne
out
fcomp
cmpsb
adc
inc
and
mov
iret
addb
les
push
mov
pop
cmpsb
pop
xor
sti
pusha
lret
ds
lock
ss
or
andl
xor
movsb
jge
enter
mov
cmp
lds
xchg
dec
mov
jne
adc
das
into
in
movsl
sbb
mov
leave
ja
jo
sub
jecxz
dec
cmp
pusha
mov
or
jecxz
scas
push
fmul
mov
lcall
mov
fsubrs
sbb
mov
movsl
rolb
and
jne
push
in
push
sub
push
adc
push
or
inc
sbb
mov
mov
inc
mov
pop
dec
out
iret
mov
dec
cmp
mov
and
leave
inc
outsb
jbe
ret
cmp
hlt
inc
fdivrl
and
and
mov
dec
push
xor
fdivl
dec
push
adc
dec
push
cli
mov
lret
in
inc
mov
adc
and
ret
push
jmp
xchg
lds
lock
mov
or
lcall
lds
daa
pop
cmc
and
imul
cmp
shl
or
es
xlat
ret
fprem
out
ds
sahf
int3
stc
sbb
inc
and
enter
or
mov
int3
push
incb
push
sbb
psubusb
cld
mov
pushf
out
ret
loope
shrl
dec
scas
cmp
mov
repnz
les
pop
rcl
or
cli
aam
les
aad
lcall
push
bound
push
out
neg
xchg
fadd
dec
inc
push
cs
mov
nop
lahf
cs
mov
pop
mov
sarb
sbb
sbb
adc
push
fcomps
leave
ficompl
into
cs
idivb
fsubr
mov
repz
in
xchg
pop
add
jne
ljmp
push
cli
std
rorb
out
hlt
push
xor
mov
or
js
nop
xchg
icebp
sub
jl
mov
mov
cli
push
leave
mov
push
addb
adc
sbb
loop
cli
pop
sarl
cmp
xor
mov
inc
pop
enter
push
ficoml
scas
mov
adc
jb
jmp
jbe
imul
cmp
mov
inc
hlt
xchg
adc
ja
pxor
xchg
rorb
add
adc
mov
test
mull
out
dec
repnz
icebp
push
jge
mov
aam
inc
jp
pop
ljmp
mov
mov
out
repz
lock
mov
push
js
lret
rclb
xor
inc
lds
sub
aaa
mov
cmp
fildl
ret
mov
cs
lds
pop
or
or
xchg
add
fcomi
cmp
adc
ret
push
in
xchg
jp
sar
shll
xlat
sub
dec
mov
dec
push
dec
lock
inc
scas
add
mov
add
fs
jae
fidivrs
pop
sub
clc
shrb
adc
fmuls
mov
loop
fmuls
subl
or
ds
cmp
ja
stc
rcr
push
out
pop
adc
sub
sub
or
fmull
xchg
mov
aad
aam
ss
push
dec
mov
call
cmp
mov
rol
pushf
jmp
pop
aaa
xlat
xchg
loopne
int
inc
dec
xor
pop
push
cmc
mov
fs
cli
out
das
cmp
repnz
jle
cli
jecxz
jnp
jne
inc
or
push
in
mov
jg
cli
push
fwait
subb
mov
int
cltd
xchg
jb
ss
or
fcoms
push
mov
cmp
test
cli
mov
shll
push
xor
mov
ljmp
or
aam
xchg
jae
sbbb
dec
enter
jb
jbe
inc
cmpsb
dec
cs
cs
mul
xlat
adc
mov
push
in
out
aam
daa
ret
pop
cmp
loop
in
mov
leave
fistpll
test
jmp
adc
inc
inc
rolb
shlb
int3
xorb
mov
or
mov
fs
sub
leave
jb
addr16
ds
call
fidivrl
popf
push
jb
loop
fstl
stos
int
loope
mov
test
fildl
xchg
fcmovnu
mov
sub
xor
aad
mov
inc
ds
imul
add
in
ds
clc
arpl
adcb
xchg
notb
dec
out
pop
fisubl
dec
push
jbe
dec
ja
xchg
push
or
xchg
scas
and
mov
rorl
xor
insb
sbb
aaa
test
adc
inc
out
fadds
cmc
sarl
mov
iret
or
and
icebp
pop
xchg
addb
fiaddl
mov
add
mov
clc
sahf
cli
mov
push
and
lds
outsb
lret
or
in
aad
call
dec
cmp
xor
out
mov
cli
je
sarl
mov
aaa
call
sbb
bound
fdivl
into
cli
cmp
mov
mov
pop
ret
xchg
push
push
push
or
mov
mov
frstor
jo
call
jle
jno
mov
cmpsl
out
imul
jbe
out
add
mov
in
mov
adc
int3
fcomps
xchg
jbe
loop
pop
mov
addl
ret
insb
int3
and
push
cmpsb
es
into
out
sahf
out
clc
idivb
movsb
xchg
mov
adc
enter
into
movsb
aaa
or
push
inc
cli
xor
icebp
jge
mov
sbb
push
lea
mov
out
fisubl
idivb
push
mov
data16
lahf
movsb
push
add
test
mov
cmp
sub
mov
mov
push
fldt
divb
filds
pusha
jb
ret
add
lret
xor
fidivrl
push
add
mov
push
fldl
lret
insl
aad
mov
ret
inc
pop
inc
adc
mov
int3
or
mov
pop
leave
inc
negb
popa
imul
add
imul
push
jp
stos
mov
add
and
push
inc
inc
ss
inc
cmpl
mov
test
cmp
stc
dec
es
xor
inc
js
jmp
push
out
pop
std
or
push
lock
divb
or
mov
call
rcll
mov
es
js
loopne
mov
hlt
cltd
fiaddl
mov
repz
xchg
xor
lds
in
push
lcall
int
push
mov
push
or
sbb
dec
jmp
mov
fildll
pusha
sti
or
ds
cmp
xchg
push
push
into
cmpsb
inc
movsb
add
push
mov
aaa
ret
sub
int
cli
pusha
cli
pop
lds
or
lret
xchg
cmp
mov
inc
mov
in
cmpb
sbb
int
adc
xchg
mov
dec
arpl
loop
in
jle
cmp
dec
inc
xchg
add
data16
ljmp
sbb
mov
cmp
lret
not
push
mov
push
dec
leave
loope
lret
pusha
sti
imul
das
ja
mov
leave
cmpsb
mov
and
outsb
cwtl
xlat
sarl
aas
jp
das
cmp
fldt
mov
ficompl
int3
roll
sbb
jle
out
mov
gs
repnz
into
pop
nop
sub
sbb
mov
iret
or
adc
push
aaa
xlat
xor
mov
push
push
fsubr
mov
xor
int
mov
jecxz
push
mov
mov
xchg
mov
loop
mov
idivb
sbb
cmpsl
add
fidivs
fsubr
jge
push
loop
fdivs
pop
sub
and
xchg
lock
in
fwait
scas
mov
fiadds
fiaddl
xchg
or
int
sub
fstps
or
sbb
ss
mov
and
xchg
jle
loope
enter
mov
adc
stc
cmp
clc
cli
adc
loop
in
scas
pop
xor
fbld
jbe
sbb
jae
cmpsb
nop
xchg
ss
lret
mov
mov
shll
in
loop
je
fcoml
mov
cs
push
rorb
dec
cwtl
enter
sahf
pop
fsubrs
push
into
pusha
jle
jle
in
cmpsb
rcl
mov
xchg
jge
add
clc
inc
inc
lds
pushf
xchg
xor
aaa
mov
hlt
js
add
int3
scas
ficoms
sbb
mov
inc
sbb
mov
sub
shl
pop
mov
fstl
call
push
hlt
std
iret
popa
cmp
loop
into
dec
inc
out
fiadds
push
mov
mov
mov
jb,pn
and
mov
xchg
mov
into
or
pop
sbb
repnz
or
std
sub
xchg
inc
movsl
addb
insb
pushfw
push
out
cmp
mov
lret
jne
call
inc
aas
mov
mov
cmp
imul
out
inc
add
fistl
cmpsb
adc
fidivrs
pushf
and
fcompl
mov
fwait
sti
js
push
mov
lock
outsl
je
push
jbe
mov
lods
jecxz
xor
hlt
ret
ljmp
jp
add
cmpsb
nop
cmp
scas
jo
stos
push
pop
xchg
cs
rcll
cmp
xlat
or
mov
call
loopne
jle
pop
rcrl
fst
outsb
mov
add
xor
fcomps
cli
push
shrl
and
in
adc
or
enter
sub
inc
and
xor
inc
int
cli
out
ja
pusha
xchg
iret
mov
shlb
push
cli
cld
dec
std
xchg
mov
cmp
pop
jmp
icebp
cmp
int3
sub
into
sub
xchg
dec
dec
sbb
sub
adc
lods
ds
lcall
lea
and
pop
nop
jmp
roll
adc
sar
mov
jbe
xor
jbe
and
pop
mov
jbe
jp
mov
mov
xor
cmpsb
daa
pusha
pop
mov
fiadds
jae
jp
push
ss
jle
fs
dec
std
jg
mov
fnsave
out
push
setb
nop
jle
insb
jbe
pop
and
sub
and
xchg
mov
fidivl
call
jne
mov
inc
std
mov
sarb
fsub
add
loop
test
sarb
push
xchg
add
imulb
push
imul
out
add
pop
sahf
out
iret
or
xchg
scas
adc
es
cmp
inc
adc
cltd
cli
mov
js
xchg
dec
inc
out
sahf
fnsave
xchg
test
loopne
mov
nop
and
imul
jae
cmpsl
scas
pop
sub
test
mov
ror
insb
inc
lcall
test
inc
mov
sbb
cli
push
pop
mov
rclb
adc
js
dec
mov
fisubrl
leave
cmp
pop
push
push
call
sarl
cmpsl
loop
lds
push
and
cmp
rcr
mov
xchg
ds
or
mov
js
setg
and
xchg
pop
dec
aam
out
pop
mov
mov
add
insb
imul
or
leave
pusha
pop
fidivs
mov
testb
in
es
xchg
jmp
xor
mov
adc
sbb
scas
mov
xchg
ret
lea
pop
divb
jp
mov
daa
ss
jecxz
adc
lret
decb
dec
scas
mov
and
outsl
cmp
idivb
cli
idivb
ja
ds
faddp
cmp
jo
xor
into
mov
gs
pushf
stos
mov
ja
cmp
fimuls
iretw
outsl
pop
inc
mov
cmp
dec
testb
mov
mov
sub
inc
lock
mov
xchg
mov
add
scas
add
sub
cmp
mov
data16
push
mov
jnp
push
ss
loop
movl
inc
jmp
mov
jle
or
push
add
mov
scas
fdivrs
rcrb
add
mov
add
mov
movsb
fidivs
push
pop
fsts
push
lahf
fwait
stos
push
add
jb
push
lds
dec
adc
mov
repnz
cmpsb
jo
mov
enterw
pusha
out
mov
mov
mov
or
daa
popf
push
loop
adc
ret
pop
pop
dec
xchg
call
pop
iret
aaa
call
repnz
sahf
xor
adc
cltd
adc
in
cmp
lret
or
dec
scas
fadds
sub
dec
mov
lcall
adc
xchg
call
sub
iret
ja
xchg
in
inc
mov
mov
jecxz
xchg
jns
add
cmp
xchg
sub
orb
xor
inc
cmp
xchg
xor
pop
jbe
mov
adc
mov
xchg
dec
loop
cmp
ficomps
lret
mov
mov
fcoms
enter
and
ret
std
repz
sbb
icebp
fists
xor
and
sub
dec
ret
sarl
cli
push
hlt
ss
mov
into
sbb
jp
inc
dec
ljmp
lret
inc
inc
fcomps
jl
jne
cmpsb
decl
outsb
and
out
mov
cmc
loope
inc
mov
call
lock
push
ds
mov
aaa
rorl
imul
lds
sbb
aaa
fucomip
pop
mov
jecxz
mov
cmp
loopne
loope
sbb
aaa
xlat
pop
xor
adc
xchg
xchg
cmp
cmp
js
and
fisubrl
add
fiadds
fiadds
outsb
out
inc
jbe
sub
rcr
xor
mov
push
push
jmp
arpl
sub
sub
cli
fnstsw
lods
lcall
add
mov
or
mov
insb
mov
sbb
mov
movsl
jle
pushf
aaa
rorb
cmp
push
add
mov
gs
pop
xchg
inc
decb
jmp
cmp
mov
mov
test
mov
out
adc
hlt
lods
idivl
jge
or
lret
es
or
jb
out
das
lods
lcall
jne
je
addr16
lock
fmulp
enter
cmp
lret
mov
ljmp
mov
push
mov
mov
jle
clc
add
loop
xor
ror
out
into
push
sub
repnz
adc
mov
ret
and
imul
ds
jns
mov
test
cmpsb
cmpsl
test
or
inc
dec
jbe
lock
fidivrl
cli
xchg
mov
test
pusha
xorb
shlb
gs
fistl
clc
stos
js
nop
cli
jnp
movsb
pop
loopne
mov
sti
xor
push
fildll
rclb
data16
ds
cmp
xchg
shlb
leave
mov
xor
xchg
mov
aaa
jno
pusha
xor
addr16
xchg
insb
and
cmp
scas
mov
mov
push
xor
lret
call
in
xor
js
cmpsb
xchg
or
movsl
scas
inc
adc
ret
daa
mov
int
adc
insl
sahf
xor
mov
jbe
ret
loop
xor
fmul
mov
and
or
ss
jnp
lret
push
mov
xorps
imul
or
fimuls
ljmp
leave
mov
out
xlat
ret
mov
mov
dec
sbb
loop
inc
lock
xor
push
scas
fdivs
mov
jmp
and
iret
int
stc
jb
call
sahf
jnp
popa
mov
cmpsl
mov
mov
ss
out
pop
lods
scas
add
addr16
mov
pop
mov
push
pop
and
insl
mov
in
int3
aaa
adc
or
mov
pop
inc
push
mov
out
mov
mov
shlb
mov
aaa
mov
out
add
inc
fcomip
jmp
lret
inc
out
ja
rorb
out
or
mov
inc
into
cmpsb
mov
and
push
xlat
cmpsb
jne
mov
xchg
jp
imul
adc
mov
repnz
sarb
mov
mov
rcrl
int
mov
mov
leave
adc
add
ljmp
xchg
dec
inc
clc
ds
into
mov
ficoml
mov
movsb
js
popa
in
or
stc
enter
repz
xchg
push
fiadds
pop
popf
push
lcall
movsl
push
sbb
cmpsl
mov
inc
loop
cmp
es
insb
add
scas
fidivs
sarl
mov
int3
scas
cmpsb
jbe
push
mov
nop
adc
add
in
loop
into
pop
add
sub
mov
ds
leave
repz
mov
out
pop
ss
stos
xchg
mov
xor
pop
imul
cmpsl
mov
int3
es
cli
jge
roll
mov
out
mov
es
add
add
sub
sub
fists
lea
rsm
aas
push
into
data16
mov
mov
leave
mov
lcall
mov
mov
jns
jp
push
out
sbb
push
js
pop
mov
dec
in
les
sub
jne
repnz
sub
mov
inc
gs
mov
outsb
loop
jnp
sahf
cmp
pop
and
or
cli
xorb
mov
movl
ret
lcall
sbb
ret
pop
dec
out
sub
xchg
mov
xchg
pop
mov
push
popl
pop
mov
lea
lret
loope
xorl
notb
and
loop
xor
mov
lret
push
lock
mov
shr
out
xlat
ljmp
pushf
mov
mov
mov
and
rcll
ja
je
adc
inc
rcr
in
dec
aam
rsqrtps
cmpsb
sub
imulb
adc
notl
xchg
lcall
xchg
sub
jae
cmpsb
jo
bound
cmpsl
push
test
aam
add
faddl
mov
je
inc
lods
sti
mov
scas
loop
aam
ficomps
in
sbb
mov
out
push
call
clc
adc
add
mov
mov
das
fst
push
icebp
inc
inc
xchg
mov
dec
or
aaa
cli
loope
push
jmp
sbb
sub
in
data16
ret
iret
notl
das
inc
outsb
jmp
add
pop
mov
xlat
cmp
loop
ss
cs
out
dec
xor
dec
add
adc
test
leave
mov
ljmp
sbb
ret
insl
add
rorb
add
loop
inc
xlat
mov
dec
sbb
mov
movsb
inc
add
imul
out
cmp
mov
ds
insb
sarb
push
in
mov
out
push
dec
sahf
fxam
out
fcomps
enter
movsb
out
cmc
mov
push
sahf
mov
outsb
aas
cmpsb
push
or
xchg
mov
ds
rep
mov
xor
dec
or
pop
mov
ljmp
ror
jnp
cs
fdivs
pushf
int3
sub
call
int3
nop
insb
stos
ficoml
int
sti
adc
out
loopne
mov
nop
into
mov
int
add
lock
push
scas
loop
jne
leave
int3
jmp
xchg
jle
add
push
sub
inc
add
mov
add
shrb
push
scas
icebp
xchg
jae
bound
leave
pop
mov
push
mov
ds
xor
ds
shlb
sbb
pop
shll
mov
inc
pop
mov
aaa
xchg
fiaddl
dec
mov
jle
pop
ss
inc
adc
dec
jl
mov
mov
stc
das
dec
fmuls
sub
push
sub
scas
mov
or
inc
rolb
aas
cs
shrb
or
mov
add
aas
cmp
daa
cli
cmpsl
dec
mov
xlat
in
adc
jns
ficoms
push
xchg
or
xor
ljmp
mov
or
out
lock
aaa
mov
xor
xlat
pop
inc
mov
mov
xor
push
shufps
add
loopne
iret
in
sub
pusha
add
cli
inc
sarl
js
fstpl
addr16
int3
adc
jb
cld
shlb
mov
fnstenv
dec
and
clc
sarb
sti
or
inc
xlat
notb
clc
loope
mov
mov
mov
mov
and
sti
leave
jbe
inc
inc
cmc
notb
xor
xor
in
mov
adc
ljmp
mov
sbb
ret
in
mov
mov
scas
jo
sub
mov
fcmove
jle
sbb
add
incb
sub
fsubl
int
sub
jg
mov
and
inc
sbb
iret
stc
push
das
mov
xchg
ret
cmp
clc
jp
xor
je
dec
loop
icebp
push
lds
movl
cmp
fcmove
ss
orb
mov
xchg
xchg
outsl
in
jecxz
ss
movsl
adc
pop
mov
or
call
or
leave
xchg
xchg
es
loope
int
out
imul
cmpsb
xchg
les
jno
aad
mov
enter
test
test
jbe
mov
lea
mov
mov
imul
pusha
std
push
push
inc
in
call
insl
mul
and
pushf
and
mov
inc
cmp
cld
mov
pop
out
mov
push
scas
rcr
cli
dec
daa
out
or
jbe
repz
sarl
jmp
loope
adc
int3
push
xlat
xor
pop
scas
loop
push
push
mov
icebp
mov
cmp
sub
inc
jb
adc
in
mov
cmp
mov
aaa
xor
ds
xor
hlt
mov
mov
lret
mov
dec
mov
sbb
sbb
mov
push
mov
xchg
dec
jbe
jmp
push
pusha
or
push
adc
in
pushl
dec
ljmp
cmp
cmpsb
sub
in
fsubp
sub
pop
add
lock
sti
ds
enter
jne
es
outsb
inc
mov
xor
mov
mov
fsubrs
and
push
fstl
add
jb
xbegin
icebp
faddl
movsl
xorb
rorl
idivb
in
fdivr
jmp
fcomps
push
cwtl
mov
mov
push
sbb
ds
sub
xchg
mov
dec
xchg
lret
insl
sbb
lret
pop
jge
scas
loopne
and
dec
push
fadds
rol
lods
das
cmpsb
into
scas
dec
push
out
inc
xor
inc
pop
mov
cmp
push
adc
mov
mov
sbb
mov
xor
std
leave
cmp
es
aas
inc
push
push
icebp
push
int
call
lret
lahf
leave
jbe
lock
jo
cli
mov
mov
sub
sbb
push
cs
xor
push
data16
aas
idivb
dec
push
xlat
rorb
xchg
out
jae
repnz
cmc
push
dec
cmc
js
xchg
ret
pop
xchg
data16
mov
pop
int3
jb
push
fisubrs
imul
adc
imulb
pop
sarb
aas
push
add
mov
fadd
adc
clc
stos
mulb
mov
call
push
push
ret
pop
lret
out
in
fstpl
enter
adc
addr16
mov
ljmpw
inc
push
loopne
lret
cltd
push
or
mov
sbb
andb
jnp
out
inc
call
jecxz
push
adc
xor
leave
call
dec
xchg
mov
loop
pop
out
xchg
and
lods
ljmp
fimuls
adc
push
int
arpl
aas
ds
dec
das
stos
add
add
cli
pop
aad
and
xorl
sbb
pop
cmp
mov
fiaddl
cmp
push
mov
push
xchg
sahf
jp
in
pushl
aas
enter
sahf
ret
out
add
clc
cli
filds
out
inc
in
mov
push
imul
fisubl
inc
scas
mov
fcmovu
aam
negl
cmp
pop
cli
fsubs
cmpsl
xor
adc
outsb
pop
cmpsb
sbb
push
push
popa
icebp
test
mul
pusha
sub
lcall
sbb
mov
cmp
ja
add
fwait
xchg
adc
mov
int3
sbb
sbb
xor
out
cmpsb
sar
jae
pop
call
xor
cwtl
popa
out
addl
sub
jecxz
enter
stc
jle
inc
jge
mov
pushf
les
cwtl
int3
cmp
mov
cmc
mov
movb
pop
inc
fldl
cltd
inc
mov
lcall
xor
es
in
inc
push
mov
or
xor
mov
adc
push
lret
fadds
mov
popa
in
cmpsb
xchg
mov
fdivl
jbe
cltd
push
inc
fisttpl
adc
movsl
jge
or
ret
aas
mov
mov
fisttps
cltd
fadds
out
push
imul
lret
popf
or
add
pop
xchg
mov
mov
arpl
decb
loopne
mov
gs
cmpsb
dec
pop
inc
pop
pop
mov
xchg
stos
mov
mov
pop
lods
inc
pop
sti
xor
iret
pop
inc
sbb
xor
into
iret
sub
cmpsb
mov
and
or
in
into
mov
mov
sbb
repnz
xlat
inc
cmp
cmpsl
inc
adc
inc
push
into
dec
data16
sahf
into
push
aam
fisubl
push
push
and
sar
fs
rcl
scas
mov
loope
inc
addb
rcll
rcr
xlat
fs
inc
scas
imul
lds
adc
int3
dec
dec
inc
mov
mov
fdivrs
scas
out
clc
push
xchg
mov
add
fs
add
addr16
mov
pop
inc
stc
outsl
jp
rorl
and
mov
mov
ds
xor
add
fs
out
test
fildll
frstor
pop
lret
scas
mov
mov
pop
xlat
fcomps
mov
pop
pusha
mov
loop
negb
mov
xchg
inc
sbb
leave
sub
aas
adc
rcl
repnz
and
push
stos
inc
xchg
pop
ret
jecxz
inc
shl
ss
loope
scas
in
or
test
pop
xchg
cmpsb
mov
sub
or
mov
iret
push
mov
es
out
scas
xchg
cli
jg
xor
ss
loopne
out
dec
sbb
fidivl
pop
pop
and
scas
int3
jae
dec
sub
mov
loopne
into
int
movsb
pop
push
out
inc
ds
int3
ret
lock
inc
push
das
outsb
inc
cli
inc
mov
push
shrl
testl
sub
xchg
adc
iret
push
sub
jbe
in
xchg
in
sub
es
lret
fnsave
fnstcw
jmp
stos
adc
ds
mov
adc
fmull
add
call
push
mov
cmpsb
lock
adc
push
lcall
ret
and
mov
or
lcall
mov
ficoms
or
pop
mov
mov
pop
sbb
mov
sbb
dec
mov
stos
dec
sahf
leave
or
xor
push
into
cmp
scas
adc
cmp
sbbl
mov
adc
cli
dec
cmpsb
shl
fidivrl
inc
mov
and
out
mov
xor
cmp
idivb
lcall
aaa
stos
sub
shlb
lret
int3
enter
movsl
mov
sub
xor
lds
jl
aam
dec
nop
dec
xchg
add
mov
out
mov
push
les
mov
fcmovb
adc
into
push
xchg
xchg
leave
xlat
sbb
dec
cwtl
xor
push
cmp
stos
sarb
ret
iret
cli
mov
inc
mov
js
icebp
xchg
cld
ss
mov
mov
icebp
push
rcll
sbb
push
jo
cmpsl
dec
sbb
out
test
data16
mov
mov
lret
or
insl
and
sahf
adc
fldl
loop
push
push
les
and
inc
lods
bound
out
or
cmpsb
dec
push
lcall
mov
pushf
in
incb
and
iret
bsr
sahf
imul
push
push
std
and
jp
mov
adc
jmp
mov
mov
jle
xchg
insl
adc
push
sbb
int3
cmp
aas
in
inc
in
mov
push
testl
jo
jnp
jno
cli
push
mov
in
out
mov
dec
jle
fsubrs
shll
mov
jge
lcall
inc
xor
jbe
dec
aas
inc
mov
mov
add
shll
sbb
jbe
idiv
push
insb
jp
js
jnp
push
arpl
mov
dec
fcompl
mov
push
jge
mov
push
into
out
push
mov
hlt
iret
adc
mov
rorb
pushf
cli
sbb
jo
mov
into
push
loopne
fmul
jl
movsl
popf
pop
push
ficompl
ds
repnz
leave
push
or
add
inc
jno
loop
dec
mov
mov
fisttpl
xchg
push
push
fistps
adc
push
ret
xchg
add
in
and
xchg
dec
jecxz
cld
out
xchg
incb
das
notb
not
mov
xlat
arpl
add
loope
js
xchg
jb
xchg
dec
cmp
cmp
or
or
clc
into
add
fsubs
dec
mov
adc
mov
pop
icebp
cmp
neg
inc
frstor
sub
or
push
pop
iret
lods
jb
cs
frstor
mov
mov
xor
xlat
sti
vmovdqu
xchg
cmp
rcl
leave
mov
incl
fldenv
jbe
mov
les
test
mov
jle
roll
xor
repnz
xchg
js
clc
inc
cli
push
mov
lods
adc
mov
add
cmp
lcall
and
jbe
daa
sbb
pop
mov
sub
mov
cmp
rorb
lcall
lret
sbb
xchg
push
sbb
ret
push
out
jecxz,pt
mov
mov
add
js
jecxz
add
inc
divl
push
xor
movsl
stos
xchg
or
add
xchg
arpl
in
dec
pop
dec
test
mov
mov
pop
addr16
mov
es
lcall
jle
mov
xchg
mov
stc
jle
fwait
jo
loop
lcall
es
ret
fstpl
lret
mov
aad
and
icebp
xchg
sub
ret
jge
jecxz
fcoml
push
shll
mov
push
lret
cwtl
in
pop
mov
test
dec
and
lds
push
dec
pusha
mov
push
push
and
ss
add
inc
inc
loopne
adc
fstl
ljmp
inc
popa
inc
push
add
push
xchg
frstor
xchg
stos
in
rclb
jb
clc
cld
mov
xor
cli
inc
in
push
jl
xchg
xchg
push
pminub
mov
sbb
out
scas
fldt
subl
stos
loope
mov
out
xchg
out
mov
int3
pushf
js
cmc
cmp
cmpb
insb
cmp
mov
jne
outsb
sar
outsb
fdivl
into
rol
mov
push
mov
lcall
hlt
lret
xor
sbb
je
rcr
inc
stos
mov
mov
fiaddl
add
popa
cli
repnz
es
mov
lods
pop
lcall
fiadds
pop
cmp
mov
loopne
sbb
push
sbb
jbe
inc
jmp
adc
dec
call
mov
mov
add
inc
adc
cmp
mov
pop
mov
push
ja
dec
adc
xlat
lea
sbb
pop
xchg
jnp
iret
loop
lods
add
aaa
int3
sub
js
push
int3
xchg
push
inc
push
ret
repnz
add
jp,pn
fidivl
into
and
ret
pop
outsb
sub
into
fwait
cwtl
ds
fs
jo
lock
js
loopne
out
mov
loope
inc
mov
movsb
das
pusha
out
je
xorb
push
jbe
pop
rcrb
fcmovnu
loop
jp
xor
dec
push
inc
xor
xchg
or
jo
ret
inc
sub
mov
ret
jge
into
cmp
adc
dec
into
ret
enter
scas
push
ror
pop
push
test
clc
push
aas
cltd
mov
outsl
and
cmpl
and
push
jle
jbe
pushf
ds
push
adc
dec
movsb
push
int
add
bound
mov
add
xchg
mull
mov
adc
pop
push
push
or
fdivs
aad
and
inc
pusha
and
into
push
dec
pop
enter
mov
jb
dec
inc
jmp
loop
leave
xor
jge
pop
mov
int3
mov
push
and
in
fstpl
lods
test
jg
lret
mov
or
out
outsb
pop
int
daa
stc
pusha
sbb
mov
pop
mov
clc
jno
xor
fdivrs
mov
cmp
lock
mov
push
xor
and
rorb
add
stos
mov
inc
stos
pushf
inc
push
into
mov
lcall
not
in
mov
fwait
jbe
aaa
jmp
xor
fcmovne
xchg
inc
mov
ret
enter
mull
lret
push
into
test
repnz
sbb
pop
rcrb
push
outsb
pop
mov
inc
stc
int
sub
mov
dec
push
xchg
cmp
loop
js
mov
mov
sub
ljmp
push
push
push
pop
pop
cmpb
in
mov
or
push
in
jmp
lods
ljmp
push
adc
cmp
mov
dec
ficomps
mov
ret
fs
jbe
loopne
lret
mov
and
fildll
enter
dec
into
popf
les
mov
sbb
mov
pop
xchg
pop
sub
shll
add
push
inc
rol
aam
shrl
push
faddl
fadds
insl
cmp
add
test
outsl
cld
dec
push
mov
divb
inc
adc
aaa
in
xchg
mov
loope
stos
push
or
int
fildll
cli
inc
iret
xor
into
cmp
repz
movsb
inc
push
loope
inc
shrl
cli
cli
push
fidivrl
cmpsb
mov
xchg
sbb
lcall
fisubl
xor
shrb
pushl
mov
movb
data16
pop
jo
call
rcll
add
push
pop
dec
mov
test
ds
push
scas
shrl
aas
cs
stos
sub
test
and
push
push
imul
pop
js
ljmp
cmp
divl
mov
into
enter
mov
inc
add
adc
ret
push
inc
bound
mov
idiv
mov
fmuls
sahf
mov
mov
bound
or
jle
xlat
ret
lret
sbbl
leave
mov
xchg
push
xor
ds
into
movsb
popa
cmp
loopne
outsl
adc
mov
sets
mov
xor
adc
or
mov
xchg
adc
aad
arpl
pop
call
add
adc
cwtl
mov
jg
cs
rcr
xchg
cmpsb
push
xor
or
add
cs
pop
lcall
adc
cmp
mov
leave
aaa
dec
adc
sub
push
repnz
mov
pop
bound
es
mov
mov
out
fs
fnstenv
outsb
fwait
xor
int3
test
out
int
cmpsb
jle
ds
and
cs
ds
std
int
mov
mov
fsubs
lods
pmulhw
movsb
out
divb
out
push
cld
mov
mov
inc
mov
in
jp
mov
pushf
mov
xchg
lret
push
lcall
icebp
or
jmp
mov
cli
add
mov
inc
sahf
sbb
cltd
pop
xor
push
roll
inc
scas
ficomps
cmp
adc
fdivr
add
sbb
sub
sub
int
push
mov
les
fdivs
sub
jno
stc
es
jmp
testb
push
dec
dec
mov
mov
imul
dec
pushw
ds
xor
loope
sbb
cmpsb
cli
cmp
in
pop
out
mov
add
sahf
mov
into
inc
icebp
fwait
icebp
cmpsb
into
std
addr16
mov
pop
mov
pop
stos
hlt
mov
stc
pop
mov
test
jmp
bnd
lahf
mov
in
push
lods
ss
shlb
sahf
xchg
sbb
arpl
xchg
push
loop
sub
nop
dec
push
push
sarb
testl
push
mov
test
sub
ret
ret
leave
hlt
fsts
or
and
lcall
pop
loop
fsubs
dec
scas
cs
and
pop
enter
lods
xchg
cmpsl
ljmp
or
in
mov
lods
and
cmc
bound
adc
sbb
mov
into
ja
loop
mov
or
inc
and
xchg
scas
add
inc
xor
dec
shlb
or
mov
iret
cmpsl
mov
ds
fisubs
cmpsb
push
rep
mov
dec
repnz
adc
testl
fisubrs
jbe
int
mov
push
cwtl
push
push
fistpl
clc
adc
mov
mov
mov
leave
and
inc
loopne
mov
jecxz
sbb
test
iret
mov
mov
fdivs
push
rolb
pusha
mov
sub
pop
add
repz
jno
mov
sub
les
jle
xchg
mov
xor
fadd
mov
pop
adc
std
ret
lock
shl
dec
ret
cmp
dec
cmpsb
divb
in
mov
aas
xchg
pushf
or
sub
inc
lea
into
dec
inc
stos
enter
movl
lahf
jbe
push
ds
mov
cmp
adc
dec
fimuls
pop
xchg
inc
mov
inc
or
shlb
call
loop
inc
mov
mov
test
loop
rolb
sub
popl
ss
cmpsl
lret
data16
and
pop
out
cltd
jp
push
push
inc
insl
fisubl
sbb
push
dec
push
fwait
jge
inc
test
imul
leave
lds
ja
push
lods
and
mov
shll
push
ljmp
rol
dec
and
cmp
scas
lret
ja
xor
jbe
xor
test
fdivrs
mov
fdivrp
or
push
dec
loopne
aad
adc
or
pusha
rcr
scas
cmp
into
aas
pop
jne
xchg
inc
mov
push
ja
lock
and
mov
lret
bnd
or
dec
add
dec
inc
icebp
jge
outsb
cltd
ja
push
lods
shr
leave
fisttpl
pop
stos
inc
sub
cltd
pop
adc
push
in
iret
adc
push
push
add
mov
jl
mov
outsb
into
fistl
mov
mov
mov
cmpsl
push
xlat
add
sbb
add
mov
outsb
push
out
loope
xchg
mov
mov
inc
mov
outsl
push
add
push
cmpsb
std
sub
mov
inc
mov
xchg
or
mov
mov
fmuls
dec
jle
mov
inc
mov
ds
imul
ss
add
int
in
xorb
push
sbb
jo
lret
testl
inc
imul
sbb
push
imul
push
xor
xchg
ds
out
jbe
pop
fadds
xorb
leave
ja
shl
ret
pop
mov
mov
lret
jbe
pop
insb
repz
sbb
cmpb
shlb
addr16
mov
ret
mov
sti
xchg
iret
paddd
int
mov
lret
dec
adc
sbb
pop
push
jns
jno
ljmp
add
xor
in
inc
adc
mov
clc
add
jbe
roll
and
out
enter
sbb
data16
stos
adc
xchg
add
push
sahf
cmp
push
test
push
mov
loopne
lds
scas
sbb
adc
mov
lret
dec
mov
mov
xchg
inc
test
out
in
dec
jb
rol
repnz
add
xor
cltd
sub
mov
ret
mov
int
xchg
add
es
sbb
xchg
dec
mov
jo
clc
cld
push
stos
adc
mov
pop
sub
push
fildll
cmp
movl
xor
mov
das
cs
push
mov
inc
xor
pop
outsl
add
mov
flds
xor
jecxz
push
out
iret
dec
addr16
xor
xchg
test
jmp
mov
in
xor
dec
shl
out
xchg
js
imul
hlt
out
idivb
adc
push
inc
or
mov
push
cmp
test
add
jns
daa
outsb
jp
cld
int
sbb
mov
pop
mov
ret
arpl
fisttpl
mov
sub
ss
dec
xlat
loopne
mov
testb
ds
sbb
test
inc
out
inc
movsl
push
add
lds
pop
jmp
push
int3
loope
int
xchg
adc
adc
iret
insl
clc
pop
adc
out
lret
jg
aam
stc
sbb
stos
fmuls
lcall
inc
rolb
xchg
cmpsb
pop
repz
mov
push
push
lea
jge
clc
cmc
test
out
roll
out
xchg
lret
fisubrl
add
int
imul
or
stos
push
push
hlt
dec
movsb
mov
cmp
mov
cld
mov
mov
jns
sbb
call
outsb
adc
sar
mov
inc
loopne
inc
jle
cmp
xor
mov
ss
mov
push
jle
fstpt
mov
enter
out
mov
mov
jb
ret
and
cmpsb
cmp
jl
fsubrs
cmp
or
sbb
dec
into
call
push
add
cli
jmp
mov
jecxz
push
mov
arpl
fsubrs
sub
into
test
pop
push
and
xchg
je
mov
inc
fcomps
ds
hlt
ret
fbld
dec
mov
scas
jp
or
xor
jb
cs
int3
dec
xchg
mov
loopne
jns
xor
fidivrl
sbb
mov
mov
fsub
mov
jno
enter
int
fisttpll
or
sbb
jl
scas
mov
mov
add
ds
int3
repnz
push
incl
mov
add
sahf
pop
sahf
outsb
fadd
jae
fcmove
mov
cmovb
shll
imul
push
xchg
test
gs
lahf
ds
push
jle
jne
int
loopne
cs
rorb
lret
sub
pushf
les
jnp
ret
test
aam
or
loopne
mov
daa
icebp
mov
cmp
mov
mull
cld
mov
out
mov
push
or
aad
idivl
mov
add
fmuls
cmovg
div
rclb
cmp
ss
inc
enter
ret
jbe
lds
jle
rol
fbstp
shll
imul
mov
outsb
push
lret
sbb
outsl
dec
xor
lcall
fwait
ret
xchg
andb
dec
or
cmp
push
push
cmp
mov
lock
ficompl
jns
pop
test
sahf
andl
cmp
and
push
test
scas
fs
pop
add
fwait
std
lds
lock
repnz
ds
decb
cs
lock
iret
mov
out
and
mov
cld
mov
push
sbb
jecxz
xchg
xor
std
shlb
dec
jbe
aam
mov
loop
mov
sbb
imul
pop
mov
lcall
cmp
and
idivb
adc
mov
jne
xchg
mov
sbb
add
out
mov
add
mov
xchg
shr
movhps
jp
or
mov
cmpsb
and
pop
lret
shrb
cmp
xor
iret
xor
inc
add
cmpsb
out
cld
cmpsb
mov
lods
adc
sub
jbe
push
xchg
cltd
mov
cmp
cmp
idivb
push
cmpsl
data16
jecxz
ret
cmp
sahf
mov
cmovbe
cmp
int3
mov
aam
cld
jmp
cmpb
sub
xchg
push
pop
jecxz
jg
push
leave
cmc
fistps
mov
pusha
push
mov
jle
call
and
and
xor
clc
mov
dec
lret
sahf
adcl
into
mov
test
jg
movsb
mov
daa
pop
or
jg
inc
xor
lds
popa
add
mov
mov
pushf
cmp
inc
lret
test
adcl
imul
mov
xchg
notb
iret
add
sub
sub
loopne
out
push
adc
out
int3
push
enter
xchg
jo
fdivrs
push
cli
ja
mov
cld
pop
sti
sahf
and
shlb
enter
test
push
inc
outsb
add
mov
mov
and
rorb
das
mov
ss
sub
adc
and
pop
push
mov
push
test
push
xor
test
fstpt
cs
push
jo
stos
add
jo
div
mov
or
mov
push
cmp
xchg
inc
frstor
dec
add
inc
out
lock
lods
iret
int3
jb
fisubl
loopne
add
divb
cmp
out
daa
pop
cli
xor
jbe
ret
fs
imul
adc
pop
push
shr
sub
fiadds
push
inc
cli
fbstp
ret
mov
cmpsb
inc
adc
cltd
xor
sti
or
xor
jo
inc
inc
push
mov
adc
mov
mov
shll
pop
add
adc
test
sahf
mov
and
pushf
inc
in
dec
jbe
mov
outsl
arpl
loopne
lcall
pop
es
cmpsl
cld
push
aam
adc
dec
mov
fsubl
outsb
ds
hlt
int3
fildll
or
loop
idivb
pop
mov
cltd
xchg
lcall
lods
sub
neg
lret
cmp
outsl
jbe
icebp
ret
int
mov
rcll
js
mov
cmc
xchg
movl
xor
add
rclb
pop
sbb
mov
mov
mov
cli
push
mov
aam
ficompl
data16
xor
jmp
mov
leave
test
or
pop
mov
fmul
push
mov
cmpsb
ret
into
sub
icebp
push
jp
inc
sub
xor
push
mov
sub
lcall
testb
push
xor
movb
cwtl
xchg
adc
xor
out
and
sbb
iret
jmp
les
xchg
mov
ds
mov
jbe
or
aaa
int3
ljmp
aad
mov
fsubl
test
xchg
mov
int3
ds
jb
sub
popa
mov
mov
mov
rorb
dec
xchg
mov
adc
add
pop
pop
shrb
sbb
aam
inc
bound
sarl
stos
ss
clc
cltd
sahf
jae
mov
sbb
enter
mov
mov
pop
std
push
das
cmpsb
mov
push
lds
movsb
jmp
inc
xor
pop
ja
and
frstor
int
and
out
cld
int
int3
cmp
lcall
cli
scas
in
outsl
inc
pop
xor
mov
testl
mov
addr16
sbb
mov
xor
cmpsb
mov
cmp
inc
test
ret
iret
fnstsw
cs
int3
roll
cli
pop
mov
adc
inc
push
shr
pop
enter
jl
push
loope
push
into
adc
sbb
test
cmp
inc
mov
sub
aas
or
popf
ret
das
cs
sub
fucom
pop
jge
sar
fyl2x
aas
sbb
test
fnstsw
shll
pop
and
push
fsubs
xor
mov
add
xchg
cli
xor
out
shl
inc
xchg
mov
aas
xor
sbb
aam
mov
xor
sub
mov
jns
int
aam
xor
mov
adc
sub
testb
and
adc
dec
xor
mov
loopne
cli
mov
dec
sub
bnd
pusha
clc
mov
insb
dec
idivb
push
mov
pushf
es
aas
jne
ss
enter
mov
shlb
lahf
aaa
sbb
fnsave
mov
pop
adc
movb
clc
lock
pop
adc
rcl
mulb
stc
stos
ret
cld
into
dec
push
dec
lcall
mov
out
loopne
jecxz
out
rorl
dec
or
ret
int
xor
das
aaa
jl
adc
shl
lret
and
mov
lds
push
out
js
xchg
jb
fadds
out
or
inc
lea
negb
maskmovq
xorl
loope
jb
lret
inc
lds
pusha
pop
aas
mov
popa
addb
or
in
ucomiss
fisttpl
cmpsl
fsub
aad
lret
push
aas
push
and
xchg
mov
sub
fcoms
jge
cmp
pop
and
into
mov
dec
mov
call
insb
lods
insl
sbb
fwait
mov
lds
loopne
add
notb
or
repz
aaa
aaa
rorl
scas
nop
xchg
idivl
push
mov
jmp
sbb
add
fisubs
sahf
add
adcb
pop
inc
pop
jecxz
mov
ficoml
lret
lret
shll
mov
ret
xorb
jae
lret
sar
cmp
out
add
je
in
push
mov
loope
fadd
mov
dec
insl
xchg
repnz
ds
loop
movsl
mov
je
out
pushf
imul
rclb
mov
sar
scas
xchg
scas
sub
into
adc
mov
jo
int
lret
mov
xor
fs
inc
adc
inc
xchg
jle
push
fidivrs
idivl
orb
ds
rorl
mov
fldenv
mov
mov
or
leave
pop
inc
lahf
jb
fsubrs
xlat
adc
jnp
xchg
and
mov
add
push
out
insb
push
sahf
sbbb
cld
or
adc
fsubs
mov
clc
pop
mov
and
cmp
sahf
aaa
lret
inc
mov
into
adcb
fs
xchg
push
dec
in
out
jbe
or
cs
fldl
xchg
out
sbbb
iret
xor
pop
dec
add
mov
test
in
xor
jecxz
int
roll
lret
iretw
jmp
das
call
sub
push
pop
ds
push
inc
leave
cmpsb
mov
pop
xchg
cmpsl
loop
mov
inc
mov
adc
mov
adc
shrb
leave
push
mov
mov
es
push
cwtl
ds
imul
or
push
aaa
movsl
stos
or
adc
mov
lret
xchg
push
rol
jle
les
aam
push
lods
mov
push
xor
mov
sub
xchg
dec
pop
sbb
jbe
push
and
outsb
sbb
out
fcomp
mov
aaa
cltd
imul
jle
int
xchg
sahf
into
add
test
cmpsb
jae
mov
mov
inc
inc
cli
aad
roll
jo
aaa
mov
and
sti
rorl
pop
xchg
mov
mov
push
out
mov
and
xchg
imul
stos
cmp
push
mov
mov
out
push
sbb
int3
mov
fdivs
dec
xchg
movsb
out
adc
out
cli
mov
stos
push
sbb
mov
imul
sbb
pop
jno
mov
cli
push
jle
pop
pop
jb
adc
repnz
or
mov
enter
dec
stos
scas
adc
xchg
mov
stos
test
aad
dec
cmp
or
jo
out
mov
jmp
push
filds
enter
or
xchg
mov
jae
ljmp
outsb
fiaddl
in
shlb
js
lock
sub
test
push
jl
mov
cmp
mul
mov
mov
cld
stos
scas
leave
je
into
rclb
mov
pushf
mov
lret
mov
mov
aam
push
push
rcrb
xchg
adc
xor
push
movsb
jl
enter
stc
xor
mov
jo
cli
addr16
dec
or
fbld
in
enter
sahf
jbe
pusha
add
pop
sbb
sub
add
mov
addr16
cmp
mov
jp
unpcklps
sti
xor
adcl
pop
push
cli
jbe
mov
pop
jne
xchg
mov
mov
cmp
test
lret
adc
ret
mov
xor
cli
fst
mov
or
cmpsb
cwtl
aad
inc
int3
dec
fs
mov
sbbl
ror
rorb
push
xchg
mov
aad
aaa
inc
pop
cld
push
pop
bound
sarl
cmp
in
add
inc
ss
mov
andb
mov
push
or
mov
push
arpl
mov
movl
loopne
sarb
js
adc
mov
rorb
loop
rorl
xchg
cwtl
mov
push
mov
jmp
mov
in
inc
pop
xchg
popf
and
adc
mov
xchg
insl
fidivl
xor
hlt
leave
mov
cs
cmp
fdivp
test
mov
xor
stos
out
sbb
ja
addb
xchg
test
repnz
ds
rcll
ljmp
xchg
xor
and
push
mov
fidivl
loop
jle
enter
shr
jecxz
or
sbb
mov
xchg
mov
ds
lods
push
jb
movups
sahf
into
jbe
bound
xchg
jo
pop
xlat
cmp
cmp
int
or
cmp
mov
cmc
sbb
out
jecxz
pop
and
pop
sbb
pop
outsb
dec
jnp
ljmp
pop
push
repnz
test
pop
rol
and
lods
bound
rclb
sbb
faddl
adcl
adc
dec
stos
mov
mov
mov
fdivs
mov
mov
cli
mov
in
pop
mov
mov
jbe
das
and
lret
adc
inc
mov
scas
push
jp
icebp
jnp
cwtl
mov
cmp
shll
icebp
daa
mov
add
mov
dec
jmp
stc
adc
cld
push
fldenv
pop
or
or
xorb
fldcw
arpl
cmp
adc
cmp
lds
and
and
fists
lock
rolb
std
mov
notl
mov
ret
sub
push
mov
hlt
inc
jp
mov
sub
cmpsb
int
adc
jle
cmp
icebp
stos
jb
and
mov
in
mov
mov
xor
outsb
insl
sub
ret
fdivs
mov
enter
jg
xchg
and
pop
mov
in
dec
notl
jp
outsl
orb
ret
lds
sbb
xor
mov
mov
rcrb
add
int3
fldl
xchg
pop
sarl
and
fimuls
fwait
add
cli
fisubrs
fucom
nop
test
or
into
inc
and
add
mov
xlat
inc
in
rcrb
and
sbb
call
out
jb
cmpsb
incl
outsb
dec
cmp
and
cltd
enter
xchg
mov
leave
movb
aaa
push
icebp
into
lods
xchg
dec
out
xchg
mov
jmp
push
cmp
fdivr
ret
iret
mov
in
pop
mov
push
sbb
or
fcomps
ud2
fmuls
dec
lret
aad
loopne
sub
cld
mov
mov
lcall
dec
lea
pop
test
shr
jle
add
mov
ret
lret
mov
push
dec
in
leave
mov
jbe
pop
pop
jo
push
add
adc
cmc
fcmovnbe
and
call
int
jle
xor
add
sub
lret
push
xor
mov
aad
cmpsl
inc
jecxz
lret
and
sbb
pop
xchg
faddl
inc
out
vpcmpgtb
cmpl
add
enter
push
fcmovu
bound
jge
js
pop
adc
incb
in
mov
shl
jecxz
out
cmc
mov
xchg
call
sti
push
add
loop
cmpsb
xor
inc
in
xor
fadds
in
sbb
into
adc
lret
inc
data16
jo
mov
aad
scas
or
jecxz
add
push
notl
ds
leave
pop
das
jb
shrb
mov
sub
cmp
mov
aaa
pop
loopne
mov
mov
dec
stos
cmp
cmpsb
lock
ds
mov
repz
mov
cmpsb
or
addr16
outsb
loop
repnz
icebp
push
jbe
mov
mov
or
cmp
popf
adc
xor
test
cli
imul
add
dec
lret
js
push
les
test
scas
outsb
add
jp
pop
sbb
push
loop
into
xchg
xchg
in
add
cltd
es
loop
shlb
loopne
jb
jnp
pop
loope
loopne
mov
jb
push
sbb
sub
push
jp
fsubs
into
mov
loop
cmp
dec
jne
push
scas
cmpsl
push
lock
push
xor
xchg
outsb
jb
mov
shll
add
ror
jbe
dec
jo
jb
mov
call
icebp
aad
je
xchg
jecxz
lcall
jl
mov
xchg
fildll
inc
movsb
mov
jns
and
pusha
adc
ret
lret
add
or
lcall
test
in
cltd
sub
mov
mov
frstor
jae
inc
dec
or
push
push
xchg
rorb
ret
push
ficomps
mov
cmp
mov
sarl
inc
push
fistl
out
push
fstpl
loopne
mov
or
stos
dec
out
add
fsts
xorb
push
or
in
or
cmpsb
sub
imul
jecxz
jecxz
out
roll
inc
in
scas
sbb
mov
fistpl
divl
test
jo
sahf
sti
movsl
out
ret
mov
into
popa
jle
mov
cmpsb
pop
adc
scas
mov
xchg
testb
cmp
or
sub
push
fildll
negb
jl
sarl
jle
notb
ds
in
push
push
xchg
jmp
xor
adc
jle
in
and
inc
shlb
jbe
fxch
push
jno
fnstsw
test
push
pop
adc
out
lahf
xchg
sbb
or
mov
sub
mul
xor
xchg
dec
pop
sub
enter
icebp
mov
mov
scas
inc
mov
sub
into
imulb
jne
and
fcoms
out
xlat
ficoml
aas
out
or
and
pop
cld
mov
les
mov
push
std
out
fwait
lods
mov
sahf
mov
jne
jp
push
xchg
enter
pop
shl
jo
repnz
sub
mov
imul
repz
cmpsb
loopne
pop
into
cltd
loope
ss
inc
push
sbb
addr16
dec
neg
lret
test
ret
jecxz
fwait
push
scas
cli
lahf
mov
cltd
out
mov
inc
xor
clc
sbb
ja
lock
xlat
xchg
stos
leave
add
subb
icebp
es
cmp
sarb
enter
in
adc
jbe
push
mov
or
inc
loop
inc
decb
rcll
stc
mov
mov
out
movl
insl
stos
jg
sbb
divb
add
imul
push
sbb
shll
cwtl
pop
adc
xchg
in
into
push
mov
sbb
mov
mov
mov
inc
js
scas
mov
into
mov
mov
sbb
xchg
lcall
call
push
mov
sbb
mov
in
imul
mov
add
xchg
adc
fildl
testb
and
fs
mov
or
pop
sub
sahf
ret
popa
adc
fxch
sarl
mov
push
adc
mov
adc
sbbl
xchg
ds
adc
movsb
xorb
jbe
push
shrl
mov
clc
in
inc
aas
push
mov
cld
ds
les
fcomps
enter
adc
lcall
imul
iret
cltd
adc
or
sbb
and
mov
adc
mov
cmpsb
mov
and
xlat
dec
xchg
shl
push
cmp
pop
iret
test
in
in
xchg
mov
sbb
xor
mov
inc
dec
ret
cmp
fildll
dec
mov
inc
nop
push
iret
int
insb
fsubl
ljmp
test
daa
adc
add
cli
scas
and
adc
ja
pusha
dec
xor
data16
lods
ds
mov
adc
mov
dec
mov
add
mov
scas
push
cli
loopne
mov
es
int
pop
push
jp
sahf
fcomps
mov
int
cmp
xchg
sbb
sub
mov
mov
in
out
roll
mov
xchg
pusha
aaa
lock
mov
loope
fiadds
mov
divl
mov
inc
xlat
inc
sbb
cld
cmpsl
cwtl
mov
adc
movsb
adc
bound
adc
ja
add
inc
andb
push
mov
repnz
add
loop
jbe
pop
clc
push
adc
out
mov
dec
jle
imul
push
mov
sbb
loopne
mov
push
js
or
mov
sub
xchg
jecxz
call
cli
sti
clc
push
cmpsl
sub
mov
sub
fsub
inc
mov
xchg
jb
loop
mov
cli
repz
lock
mov
icebp
mov
daa
mov
xor
dec
outsb
jecxz
or
rclb
roll
inc
dec
add
mov
push
add
xor
pop
out
adc
pop
mov
loopne
xchg
cwtl
mov
negb
add
mov
push
cmp
cli
mov
adc
mov
xor
shl
mov
add
mov
adc
iret
push
js
xchg
mov
rcll
pop
xchg
shlb
ficompl
aas
dec
add
data16
shlb
js
lods
cld
sarb
rcr
push
push
fisubl
shrb
scas
xor
andb
cli
ret
aad
mov
les
sarb
push
and
inc
add
aas
fmuls
push
inc
rclb
or
push
push
rol
xchg
mov
dec
ficomps
adc
xchg
jp
xor
or
repz
gs
mov
fisttps
jl
mov
enter
aas
aad
pop
mov
cmpb
push
lods
into
enter
out
lock
push
rcr
decl
or
add
jo
add
dec
push
enter
loope
cs
sbb
mov
push
mov
adc
mov
stos
mov
pop
mov
mov
push
inc
adc
xchg
idivl
scas
hlt
test
out
loope
and
add
cld
xchg
push
push
lret
or
xor
outsb
loop
cmp
test
int3
lahf
xchg
loopne
arpl
sarl
xchg
loop
testl
les
xchg
mov
push
leave
xchg
out
ja,pt
into
fadds
sub
ret
jp
push
cmp
push
lcall
jns
int
icebp
cmpb
in
push
int3
popa
filds
daa
mov
push
xor
aaa
mov
incb
pop
aaa
aad
push
jge
push
jo
dec
in
xchg
cli
in
mov
sbb
idivb
mov
stos
into
cmpl
add
xchg
pop
mov
rolb
mov
pop
cmc
roll
shll
mov
clc
aad
repnz
hlt
out
jmp
inc
int
cmpsb
adc
out
push
rol
not
dec
lret
adc
out
shlb
add
lahf
mov
cs
adc
sub
and
dec
test
mov
xor
cmpsl
jb
mov
xor
mov
and
stc
xchg
fcoms
mov
gs
mov
rolb
bound
loop
jle
ljmp
fsubs
mov
sbb
xchg
cs
ss
aad
cwtl
dec
dec
js
mov
mov
ss
jb
aaa
enter
cmpsb
cmc
xor
aas
ds
rclb
fucom
xchg
mov
icebp
dec
sahf
push
out
adc
push
ret
mov
movsl
ds
cmp
fidivrl
inc
push
fldt
loop
mov
outsb
cli
fsubs
lock
rclb
cld
and
xor
pushf
dec
jl
es
fdivs
or
add
dec
fidivrl
xchg
into
jbe
xor
arpl
fisttpl
test
outsb
mov
mov
push
adc
xor
inc
sub
adc
or
adc
scas
cmpsl
adc
fsubrs
mov
xchg
cmpsb
or
js
fsub
pop
mov
jbe
sub
pop
jecxz
lahf
mov
orb
lahf
mov
sub
mov
mov
pusha
js
lret
into
sti
lock
ljmp
sti
lahf
cmpsl
add
jle
mov
in
dec
int3
stos
mov
xchg
mov
and
mov
imul
lret
imul
fdivr
int
push
lcall
jne
les
lahf
decl
mov
hlt
fisttpl
mov
nop
js
test
cmp
xchg
mov
mov
rcrb
sub
mov
sub
inc
mov
add
nop
out
cmp
push
fidivl
inc
mov
pop
in
and
mov
ja
pop
add
mov
mov
xchg
aad
or
mov
rcr
stc
mov
inc
jbe
adc
push
xor
and
iret
xor
add
sahf
scas
cld
fwait
xor
cmpsl
outsb
xchg
mov
cli
idivl
jo
mov
xor
jmp
mov
rorb
sub
fldt
push
lcall
mov
cs
mov
ljmp
push
sub
into
shll
adc
repz
or
xor
mov
lret
not
cmp
into
call
out
dec
jecxz
mov
xchg
cli
mov
mov
mov
cld
push
add
inc
adc
dec
sbb
data16
pop
in
xchg
add
inc
or
or
pop
lcall
fdivl
ljmp
popl
cs
dec
mov
stos
enter
fsubrl
enter
sahf
cmpsb
fcomps
shrl
sbb
sub
jmp
xchg
inc
xchg
inc
jb
add
inc
bound
fisubrl
or
rcl
and
sar
cld
push
mov
vunpckhpd
mov
xchg
xor
incb
mov
sbb
inc
imul
mov
gs
iret
mov
clc
xor
into
push
stos
add
mov
ret
pop
int3
add
mov
aaa
es
cmp
sahf
xorb
shll
fdivrs
fsubrp
adc
jl
int3
repnz
or
sbb
out
push
dec
add
xchg
mov
rolb
int3
mov
pusha
xchg
push
out
cs
push
pushf
sub
leave
cmp
add
cli
ss
add
sarb
mov
or
in
outsb
jle
mov
mov
mov
das
mov
and
repnz
mov
sti
imul
sahf
cli
inc
and
cmp
stc
enter
int
jns
cmp
ror
dec
jno
mov
loop
or
xchg
adc
lds
add
mov
ss
mov
pushf
lods
lcall
stos
lret
add
pusha
ds
scas
mov
pop
es
test
lcall
lods
fdivs
mov
ret
mov
mov
sbb
enter
lcall
push
outsb
scas
jbe
shlb
jbe
push
mov
sbb
mov
push
icebp
sub
push
in
clc
adc
adc
into
xor
mov
idivb
aaa
ss
xor
out
or
int
aas
jne
fidivl
lret
movsb
icebp
sub
mov
lahf
xchg
stos
div
sarb
cmpsl
xor
fisubs
adc
iret
jno
inc
leave
sub
jbe
mov
pushf
das
sbb
cs
idivb
data16
movsl
outsl
jp
xor
mov
adc
aas
ljmp
pop
and
jb
xchg
clc
or
inc
mov
cld
and
push
cltd
xchg
and
mov
dec
cmp
mov
ljmp
outsl
pop
negl
xchg
mov
lret
cmp
js
fadd
daa
ror
loop
cs
int
data16
fistpl
sub
push
aas
mov
out
add
rorb
aad
dec
in
and
pop
sub
inc
es
out
push
mov
cs
pop
fs
mov
push
add
pop
sbb
dec
xchg
adc
ds
sti
mov
out
movswl
ret
fidivrl
pop
cmp
mov
sub
ret
call
xchg
lret
mov
push
fadds
scas
sti
in
mov
inc
inc
sub
out
fisubl
out
sub
insl
xchg
mov
sub
pop
and
mov
mov
cs
sub
mov
repnz
ds
xor
shlb
mov
mov
ret
push
mov
add
daa
or
cs
adcb
xchg
cs
sahf
pop
into
mov
hlt
rcr
mov
jl
data16
jmp
jb
add
fwait
xor
out
add
cs
enter
insb
hlt
xchg
mov
loop
push
lock
mov
sbb
ret
and
jg
adc
mov
push
movsl
cmp
dec
sbb
xchg
or
outsl
sbb
mov
cmpsl
push
cmp
mov
sarb
cli
test
jp
out
call
pop
out
xchg
dec
ja
icebp
or
movb
fmuls
iret
daa
pushf
xchg
sbb
sbb
repnz
pop
sub
xchg
sbb
fcmovb
int3
cmp
into
push
lret
sbb
sub
movsb
cs
flds
dec
xchg
lds
xchg
inc
call
in
sbb
stc
cs
pop
mov
inc
cmpsb
cli
imul
popf
cmpsb
xorb
xor
jle
test
fdivr
jl
ret
pop
mov
ret
sarb
adc
lret
jb
aad
cli
xor
jbe
add
cmp
mov
xor
mov
adc
add
sti
cmp
xor
and
fdivrs
mov
fimull
fwait
outsb
sahf
cmp
loope
cwtl
aas
lahf
out
jae
xchg
aas
mov
adc
mov
sbb
es
adc
push
ds
mov
movsl
jo
jbe
lock
jbe
cli
xorb
aad
or
pusha
outsl
and
and
out
aam
push
mov
sbb
out
jno
mov
mov
push
fmul
adcl
test
es
sbb
cmp
div
xlat
stos
and
push
jbe
mov
dec
jb
fiadds
popf
loope
neg
dec
orb
dec
or
mov
xchg
out
xchg
test
mov
jb
xor
mov
loope
aaa
jo
lock
mov
add
adc
lret
jge
mov
clc
out
jp
mov
sbb
imul
xchg
mov
out
mov
inc
cmp
push
into
mov
pop
and
cli
test
xor
pop
add
mov
dec
jno
lcall
jb
mov
jns
dec
add
xchg
add
decb
inc
out
shrl
rcll
xchg
inc
cmp
sub
and
movsb
test
mov
mov
out
ds
sbb
mov
cs
lds
inc
pop
test
dec
std
sub
fadds
pop
sbb
push
cmp
cs
cmp
add
imul
int3
and
mov
mov
rcl
leave
push
mov
ss
filds
push
lods
iret
ret
inc
lds
mov
fdivp
or
adc
jb
xchg
loop
cmp
ror
mov
shl
jl
mov
pop
cs
jbe
jge
adc
mov
rcl
sarb
and
out
iret
sub
out
xor
out
into
hlt
adc
fs
mov
scas
rorb
push
mov
pusha
aas
dec
xchg
mov
dec
shlb
leave
push
dec
sti
je
outsb
rcrl
xchg
push
mov
jle
aad
jle
sbb
scas
mov
adc
out
ds
sbb
xchg
xor
or
inc
jle
cmpl
shrl
sbb
lock
ret
leave
adc
js
cld
loope
stos
arpl
loopne
push
dec
cmp
movl
lods
sahf
pop
lods
inc
scas
enter
jmp
test
xlat
sub
jb
aad
jecxz
es
mov
mov
sub
mov
leave
push
outsl
mov
sub
in
clc
out
or
sub
xor
call
enter
push
adc
adc
iret
sub
xor
jb
cmp
xchg
test
mov
fidivrl
aaa
sbb
mov
call
or
lahf
mov
sbb
pop
loopne
xor
add
out
mov
jmp
das
outsb
aaa
mov
cs
fsubrs
bnd
mov
add
fidivs
push
fiadds
pusha
sub
jbe
mov
out
fcmovnb
aas
popa
adc
mov
adc
fimuls
cmp
cltd
xchg
pop
mov
int
pop
aas
mov
jmp
dec
xor
lds
out
cmp
xchg
popl
mov
mov
xor
fsubs
fcmovnu
adc
mov
out
pop
adc
pop
arpl
jns
cmpsl
repz
jge
shlb
imul
dec
xor
loopne
xchg
push
shl
sub
sbb
jo
adc
outsb
es
into
loopne
adc
adc
mov
test
insl
cmp
pop
aaa
ret
lret
cmp
aam
hlt
add
test
ss
loope
sahf
mov
adc
sub
and
leave
mov
inc
jo
mov
in
jecxz
xchg
mov
in
adc
sarl
push
mov
ficoms
into
idivl
adc
pop
inc
stos
sbb
out
xor
mov
dec
into
in
pop
xchg
mov
js
fldt
into
sub
mov
and
mov
mov
adc
xchg
rol
mov
ds
dec
into
imul
into
add
sub
aaa
mov
imul
add
fidivl
mul
mov
scas
mov
pop
xlat
sbb
pusha
pop
pop
mov
ret
jno
lret
add
mov
incb
lret
jecxz
mov
or
daa
in
jb
mov
icebp
insb
dec
push
scas
mov
mov
xchg
inc
add
mov
push
ja
in
cmpsl
into
aaa
pop
mov
mov
stos
and
sarb
data16
cld
push
jbe
data16
mov
jbe
sbb
stos
mov
sbb
xchg
std
test
rcrl
stc
scas
and
popa
sub
out
out
sbb
aad
mov
mov
fdivs
mov
xchg
sbb
push
sahf
mov
push
lret
fcoms
adc
adc
fsts
rcrb
fadds
lock
pop
sbb
cmp
sahf
xor
lcall
fmull
stos
iret
fldt
jge
xchg
add
or
jbe
fbstp
inc
sbb
mov
es
call
aad
dec
movsb
ljmp
xor
lret
jl
jae
cs
lea
mov
pushf
loopne
out
mov
xchg
jb
push
lahf
adc
fwait
adc
scas
cli
test
dec
xchg
adc
jb
jbe
es
lahf
add
push
loop
mov
push
xchg
push
and
hlt
push
add
cmpsb
push
fmuls
push
rcll
push
fcmovnb
adc
dec
xchg
mov
cli
das
lcall
idivb
sbb
inc
test
add
repz
sbb
out
call
inc
daa
xlat
out
sub
ficompl
adc
ja
mov
out
and
adc
or
es
cltd
xchg
add
sbb
add
call
xor
insb
jecxz
jo
pop
fdivs
mov
clc
ffree
mov
xor
iret
add
xor
pop
lods
adc
jmp
jecxz
pop
push
into
incb
jne
ret
push
ret
sub
dec
ds
xchg
pop
mov
rolb
or
out
mov
rolb
add
inc
mov
sub
or
jp
cmpsb
xor
ds
mov
bound
out
jle
mov
hlt
movsb
movb
gs
or
rorb
adc
mov
sub
int3
les
mov
mov
loopne
mov
call
arpl
sub
mov
aam
mov
adc
mov
pop
adc
iret
cmc
push
es
out
and
cmpsb
fcmovnbe
out
inc
aam
call
xlat
roll
xchg
xchg
fcmovu
lret
mov
mov
cli
fildl
xchg
jl
mov
rep
inc
push
or
rorb
imul
out
sbb
inc
jb
test
inc
cwtl
mov
mov
ret
sti
out
xchg
leave
icebp
fisttps
in
cli
andb
xchg
fsubs
outsb
sub
push
shlb
test
pop
aad
push
push
pop
fisttps
rorl
jne
lcall
call
leave
xorl
enter
jb
test
xchg
sub
orl
push
mov
adc
aad
mov
xchg
mov
add
lret
inc
cmp
fsubrs
sub
repz
neg
or
lret
push
jb
gs
mov
inc
sbb
cmp
xor
movsl
jp
arpl
mov
test
aam
and
pushw
push
ds
stc
mov
jl
dec
push
jbe
loop
lret
sub
loopne
mov
lcall
cmp
xlat
or
and
loop
repnz
sti
setp
ja
cli
mov
mov
adc
xchg
push
dec
jmp
fdivrs
pusha
adc
addr16
and
mov
add
lcall
push
jle
xchg
test
push
mov
mov
sub
fwait
xchg
mov
add
add
sarb
lods
inc
mov
cmpsb
rcrl
mov
cli
js
call
inc
jmp
addb
mov
cmpsb
adc
pop
ss
inc
scas
mov
adc
mov
ja
adc
mov
cmc
iret
inc
data16
adc
dec
push
mov
shlb
inc
push
arpl
xor
mov
push
xchg
lcall
data16
ljmp
arpl
stc
into
insb
iret
pop
enterw
mov
lcall
and
cmp
or
mov
in
mov
mov
mov
aas
cmp
jl
daa
jb
dec
mov
insb
sub
and
mov
decb
mov
inc
sub
stos
clc
add
xor
pop
cmp
and
ret
dec
or
pop
shll
into
inc
rorb
fiadds
negb
adc
hlt
add
push
repnz
sbb
vsqrtps
cmp
aam
pop
fidivrs
push
sub
out
adc
jne
mov
mov
es
lds
push
shll
cmp
bound
mov
pop
mov
add
icebp
sti
sbb
cs
outsb
out
js
scas
faddl
push
sbb
xorl
ss
xchg
cld
inc
inc
mov
mov
jno
cmp
push
data16
jo
and
jp
xor
add
mov
pushf
std
enter
movsb
mov
mov
xor
fcom
mov
cltd
jbe
sub
mov
test
cld
stos
xor
into
push
xchg
pop
push
dec
mov
inc
test
nop
xchg
dec
loop
ja
mov
int
stc
adc
xchg
popa
idiv
add
pushf
mov
je
push
push
add
mov
aaa
rolb
xor
xchg
sbbl
jmp
sbb
inc
xchg
sbb
outsb
push
sub
fstl
loop
push
and
push
mov
push
lds
cmc
ficoml
push
int3
xchg
daa
lcall
mov
or
adc
lcall
mov
shl
dec
add
rcrl
lea
into
out
sub
jp
inc
adc
lds
and
test
xchg
or
ds
adc
inc
mov
jmp
pop
nop
ficoms
jo
cmp
adcb
dec
iret
add
stc
out
inc
out
mov
test
jmp
mov
dec
call
add
and
mov
add
jbe
dec
into
out
add
xor
or
dec
scas
icebp
jo
and
mov
aad
mov
dec
mov
enter
xchg
lcall
ds
repnz
in
andl
xchg
mov
loopne
ret
mov
push
stos
mov
clc
stos
mov
push
and
aam
mov
xchg
fcoms
int3
dec
pusha
fs
in
xchg
leave
xor
sahf
mov
subb
mov
jne
push
mov
fnstsw
lcall
xor
push
lds
mov
ret
inc
push
in
repnz
inc
add
bound
enter
xchg
ds
mov
inc
jno
xchg
dec
mov
mov
cs
negl
imul
test
int3
mov
fiadds
sahf
shl
negb
mov
fiaddl
jle
adc
pop
inc
es
mov
add
cmp
test
push
int3
xchg
adc
ja
cmc
testl
mov
sarb
cmp
ret
and
jmp
mov
int3
insb
lret
jp
fdivs
and
rcl
lret
pop
sbb
ss
jbe
jmp
adc
fdivrs
dec
scas
clc
dec
mov
sub
lret
shrb
iret
dec
xor
out
mov
pop
nop
add
sub
mov
jg
push
mov
or
xchg
mov
adc
mov
push
add
aas
fidivs
push
push
ds
push
neg
dec
push
daa
adc
std
fcmovu
mov
out
mov
add
add
mov
std
inc
sbb
fs
ss
ds
xor
jecxz
loopne
outsl
and
imulb
pop
shlb
inc
ret
mov
test
inc
inc
pop
jecxz
pop
or
repz
lds
cli
inc
cmc
shrl
xchg
lcall
mov
int
push
mov
leave
push
cmp
adc
add
rcr
pushf
pop
mov
rolb
pop
movsl
fimuls
rorl
ja
sarl
shl
out
cld
pop
shll
cwtl
rolb
popa
mov
jno
jo,pn
mov
inc
stc
dec
pushf
lods
xor
inc
push
bound
push
lahf
rcr
jle
outsl
sub
mov
cmp
mov
jno
pop
mov
and
outsb
xor
ret
push
mov
mov
mov
adc
repnz
cmp
xchg
out
mov
inc
jle
fsubrs
adc
mov
loope
out
sarl
fstl
idivl
lret
div
data16
lds
mov
outsb
ljmp
push
mov
sbb
mov
inc
rcr
sub
adc
in
dec
adcl
rorb
jbe
sbb
repnz
mov
in
loop
ja
mov
ds
xchg
lcall
cmp
cmp
out
adc
pop
cli
jbe
mov
inc
jns
jmp
out
mov
or
mov
mov
mov
fcomp
mov
loop
lea
ret
and
cmpsb
dec
outsl
push
mov
fmul
fnsave
into
xchg
subl
stc
mul
mov
in
notb
ja
sti
mov
stc
outsb
cmp
or
loopne
cs
aam
lds
xchg
mov
test
enter
popa
out
icebp
pop
ds
sub
or
cmpb
cli
inc
aam
inc
scas
arpl
les
rorb
mov
adc
mov
movl
cli
clc
dec
jl
push
push
sti
or
fmuls
icebp
mov
mov
pop
xchg
jo
ss
add
into
les
aad
test
or
ja
adc
cmpsb
rolb
add
jp
xchg
cli
inc
lds
add
jns
xor
push
ror
or
xchg
cli
and
mov
push
inc
cli
cld
jbe
lock
dec
mov
loop
filds
cmp
cmp
cltd
sub
pusha
sub
xchg
loopne
neg
sbb
in
push
mov
leave
jbe
out
decl
push
lret
clc
out
test
in
ret
mov
icebp
scas
jmp
mov
int
ret
pop
enter
mov
loop
push
cmpsb
cmpb
push
cltd
out
mov
nop
push
and
ffreep
mov
cli
mov
data16
xorb
xor
lea
inc
inc
test
call
js
dec
in
loope
add
cmp
cltd
jo
dec
pop
ficoml
mov
gs
xchg
mov
or
leave
adc
arpl
repz
js
mov
out
bound
clc
jno
jb
push
movsl
sbb
jp
inc
lret
and
mov
rol
jl
mov
movsb
push
lods
sbb
mov
mov
push
ret
int
rcr
sahf
mov
aad
lcall
and
fcoms
into
cmpsl
inc
addr16
cs
ds
xor
cmp
cli
pop
int
jp
mov
mov
out
push
insl
enter
xchg
inc
adc
mov
loop
sbb
fsubrs
sbb
rorl
iret
push
js
fsubrs
jp
mov
dec
ret
xor
out
adc
adc
sub
push
int3
jmp
xchg
pushf
and
enter
int3
xchg
mov
cli
dec
loopne
xor
pop
bound
add
pop
push
jbe
mov
and
mov
mov
ffreep
jne
ds
xor
xor
sbb
daa
inc
mov
mov
xchg
push
add
adc
mov
adc
ja
push
ss
aad
jle
xor
jle
dec
imulb
and
pop
inc
ret
pop
repz
adc
sub
cmp
shrb
ljmp
jns
inc
and
jo
xchg
push
and
insb
fnstenv
iret
ror
sub
nop
leave
insl
jb
pop
inc
ds
int
or
int
mov
xchg
fimull
xor
inc
mov
jb
mov
jg
sbbl
cli
enter
lahf
in
cltd
mov
mov
pop
mov
jbe
push
push
aad
mov
aaa
int
dec
jbe
loopne
ljmp
imul
inc
pop
divl
sti
lret
jne
fisttpll
clc
les
cmp
ss
add
lcall
adc
mov
mov
xlat
repnz
mov
cmp
out
ret
pop
out
iret
sar
push
inc
incl
cmp
arpl
divb
add
rcll
mov
pop
sub
les
out
cltd
jo
add
xchg
ja
jbe
andb
mov
xchg
dec
xchg
int3
add
movsb
test
out
shll
iret
shrb
xchg
add
fwait
scas
leave
pushf
mov
movsb
adc
cs
mov
mov
cs
jns
fcmovnu
xchg
cmp
mov
repnz
inc
inc
push
int3
push
pop
bound
xor
push
mov
add
stos
mulb
dec
test
lea
stos
pop
push
test
xchg
add
mov
mov
or
mov
jne
arpl
aaa
loop
scas
sub
lcall
add
aam
add
es
repnz
push
aas
aaa
mov
cmpsb
and
ss
sti
scas
xchg
call
inc
ret
inc
outsb
aas
icebp
data16
aad
bound
out
add
adc
fists
inc
mov
movsb
push
dec
ds
lds
push
inc
call
push
inc
jb
pop
add
addb
mov
in
jne
jle
enter
mov
push
ffree
pop
cmp
addr16
xchg
in
lcall
and
inc
push
es
shll
stc
mov
iret
in
sub
sub
lret
pushf
iret
sub
pop
mov
fistl
mov
call
fmul
jge
push
sahf
xchg
mov
aas
les
es
jle
in
inc
mov
mov
in
insb
mov
inc
call
adc
adc
or
sub
push
je
fiaddl
rcrl
int3
dec
sbb
mov
mov
rclb
dec
sar
xor
sahf
or
sub
cmp
add
jmp
add
decb
out
mov
mov
xor
dec
fldcw
mov
mov
push
fs
movd
ja
cmc
xchg
sub
jmp
js
mov
mov
inc
out
shrb
aaa
jecxz
add
fisubs
mov
xchg
loopne
in
loope
pop
mov
fildll
insl
rolb
xor
in
rclb
xchg
loopne
mov
mov
inc
xlat
sub
loope
mov
nop
iret
pop
loopne
repnz
dec
adc
rorl
clc
mov
xor
popf
js
ret
jbe
into
push
test
cwtl
idivl
mov
xchg
push
das
add
imul
imul
fs
adc
push
cld
push
les
push
aaa
lea
mov
push
or
loop
mov
mov
into
jbe
into
arpl
fstpt
jmp
inc
sub
cmp
je
mov
xchg
add
nop
dec
shrl
jbe
dec
inc
jp
add
test
imul
and
xchg
shr
sub
push
cmpsb
mov
icebp
mov
jle
or
jle
in
mov
jge
mov
push
lods
push
loop
cmpb
lretw
bound
pop
cmpsb
call
mov
gs
ret
jnp
sbb
adc
es
xchg
pop
loop
push
int
or
jne
test
ret
jbe
out
lock
and
pop
mov
and
jne
loop
mov
add
inc
xor
sbb
lods
ret
sbb
shrb
jecxz
daa
lods
xchg
mov
aas
push
hlt
mov
jp
mov
in
sbb
push
rorb
or
loopne
into
mull
inc
aaa
mov
mov
sbb
ds
lock
cmp
cmp
mov
fdivs
push
rol
pusha
ss
xchg
cmpsb
add
shlb
das
cli
inc
xlat
mov
push
jb
fwait
push
push
jge
mov
xor
call
ss
mov
add
jb
out
cmpsb
lret
fimuls
cmp
mov
fidivs
outsb
sahf
push
dec
xor
fdivs
pop
rol
mov
xchg
jecxz
pop
add
aas
xchg
xor
pop
lods
or
xor
ja
aam
sbb
lcall
xchg
aaa
sub
rolb
iret
jb
mov
add
mov
rolb
lods
movl
loope
push
mov
add
mov
in
sub
sub
mov
mov
sbbb
mov
cli
test
sar
rcrl
add
ret
or
or
push
push
jle
sti
push
cmp
mov
pop
cmp
ja
fmull
and
test
pusha
int
int3
cmp
call
cmp
sti
mov
mov
xlat
dec
inc
mov
push
sub
jbe
leave
fcoml
or
cs
sbb
lret
ss
adc
inc
repnz
inc
push
mov
bound
pop
mov
dec
xchg
mov
scas
lcall
lock
imul
js
xor
insl
sub
lock
mov
adc
sub
pop
mov
jbe
mov
sbb
cmpsb
in
dec
out
jecxz
enter
incl
cmpsb
mov
repnz
icebp
scas
xchg
xor
out
push
ss
jae
adc
ljmp
out
shlb
test
push
pushf
mov
scas
aas
lcall
jge
in
pop
mov
scas
or
mov
shll
xchg
cmpsl
fisttps
sahf
pusha
idivb
mov
ss
test
push
adcb
sbb
stos
cli
jns
insl
daa
xchg
rorb
daa
adc
daa
xorb
xchg
cli
fcoms
ljmp
push
sarb
outsb
fcmovu
push
mov
out
popf
sub
adc
enter
and
lahf
pop
mov
movsl
cwtl
cmpb
ror
jns
jbe
adc
dec
mov
imul
dec
scas
es
push
inc
jmp
inc
jmp
pop
mov
cs
xchg
pop
xor
pop
loop
enter
push
push
test
dec
fmul
testb
inc
xor
add
mov
inc
jo
btc
gs
xchg
fdivp
adc
fdivs
loopne
faddl
cmp
jp
inc
daa
push
cmpl
cli
les
sti
pop
mov
insb
shll
add
ret
pushf
push
inc
outsb
das
sub
lret
xor
mov
mov
scas
je
push
adc
adcb
aad
rdpmc
hlt
fldl
xchg
lcall
fldl
ret
in
shrl
mov
mov
inc
mov
mov
pop
pusha
cli
add
mov
cli
mov
sarl
out
and
push
cmp
out
fstl
xor
cld
mov
push
xchg
mov
mov
lea
add
cmp
fistpl
cmc
cmp
jo
leave
xchg
sub
jecxz
cmpsl
repnz
lret
jmp
dec
sbb
rcrb
in
cmp
add
fiadds
xchg
adc
add
sbb
dec
mov
jmp
xor
icebp
cltd
mov
cmpsb
pusha
scas
mov
mov
ret
inc
scas
xchg
ss
mov
test
movl
adc
fcmovnb
adc
pusha
ret
es
inc
mov
ret
lods
jbe
push
and
jp
enter
jb
cmp
mov
fisubs
cmpsb
dec
mov
fwait
out
sahf
sub
sbb
mov
subl
popf
sbb
mov
rcrb
fsub
jae
lcall
rcrl
fsubrs
out
sub
push
idivb
mov
cmp
int3
loopne
dec
movsb
int
stc
sbb
pop
jmp
mov
mov
cmp
cmp
nop
inc
and
push
in
subb
hlt
mov
mov
stos
les
fisubrs
inc
jae
sbb
mov
fdivp
in
into
sahf
repz
sbb
push
aas
idiv
adc
scas
add
inc
mov
loop
std
mul
xor
rcr
inc
inc
mov
loopne
cmp
movsb
imul
in
dec
adc
out
push
enter
adc
rclb
sbb
sarb
cs
out
push
idivl
loopne
out
jle
xor
mov
sub
jp
popa
jne
inc
dec
and
inc
sub
shll
sbb
fdivrs
mov
adc
scas
xor
adc
sub
mov
pop
mov
lock
pop
ret
mov
sbb
movsb
repz
lods
xchg
pop
into
leave
es
cmp
test
cmpsb
xor
push
xchg
cmpsl
stc
pop
mov
into
outsl
loop
lds
cli
shl
mov
es
mov
xchg
mov
imull
push
pop
in
stos
roll
and
fsubrl
in
into
ss
jae
mov
popa
mov
iret
ja
adc
shlb
icebp
fadds
lret
cs
xchg
dec
mov
enter
jb
or
lcall
outsb
sbb
loopne
sub
mov
mov
xchg
sbb
sub
subl
cmpsb
cmpb
stos
mov
mov
pushf
xchg
mov
mov
outsb
lea
cmp
addl
pop
fadd
add
lds
cmp
bound
cld
sarl
cmp
int
mov
sbb
subb
int3
jecxz
ret
inc
sbb
lret
cli
lcall
xchg
shlw
dec
sbb
andb
mov
inc
and
xor
lret
pop
mov
mov
sbb
push
int3
or
rcl
aaa
xchg
add
movsb
hlt
xchg
out
pop
push
in
loop
mov
sbb
int
test
out
fcoms
out
mov
ss
cmpsb
ss
jno
xchg
adc
push
push
mov
pop
sbb
cmpsl
push
sbb
ds
lock
xor
hlt
mov
incb
pop
push
add
ds
mov
lret
cli
jae
movsb
cmp
jne
pop
into
cmc
cs
mov
lcall
decw
dec
outsb
into
adc
lds
push
out
orb
sti
cld
fidivl
ret
es
fcmovnu
loop
aas
dec
int3
sub
mov
into
dec
stc
mov
jge
stos
or
jbe
or
pop
movsl
xchg
pop
ret
leave
jmp
ljmp
dec
js
fcom
jae
inc
mov
push
xchg
pushw
out
mov
mov
or
movntps
repnz
inc
jle
shrb
mov
pop
adc
cwtl
out
mov
ljmp
shlb
aas
mov
pushl
testb
and
ds
imull
inc
jae
fidivs
adc
sub
fidivrs
jb
or
mov
xchg
mov
cli
sub
sarl
adc
sub
in
lds
lds
fiadds
call
popl
aas
in
xchg
add
pop
adc
sub
lahf
mov
inc
xchg
xlat
in
cmpsb
pop
mulb
lds
loopne
fmuls
mov
imul
adc
adc
sbb
imull
aam
aas
pop
pand
pusha
sub
iret
popa
shll
test
out
mov
lret
shrl
sbb
es
jns
and
div
xor
scas
mov
pop
add
jbe
inc
xor
test
mov
cmp
xor
xor
mov
mov
mov
in
adc
dec
jns
mov
rcrl
sbb
inc
ss
mov
push
cltd
and
add
orb
lock
mov
sub
inc
cli
lds
into
push
jno
js
movsl
mov
mov
into
xor
int3
jno
mov
out
push
lret
std
inc
mov
int
das
mov
push
ljmp
lret
into
mov
ds
jecxz
aad
add
js
mov
mov
mov
jle
and
or
rorl
loop
inc
out
pop
mov
fs
leave
push
mov
cmpsl
cmc
jbe
aad
mov
cwtl
lods
or
mov
jns
sub
adc
popf
popa
push
fcom
cmc
mov
xchg
leave
inc
enter
add
mov
mov
orb
xlat
testl
push
daa
repz
or
pop
shl
mov
arpl
or
ror
or
push
filds
mov
ffree
iret
cmp
adc
mov
daa
sbb
rcll
cld
clc
std
xor
xchg
mov
cmc
or
push
xchg
mov
adc
loopne
mov
sahf
adc
aam
rolb
mov
xchg
lret
ds
call
push
push
bound
adc
and
fsubl
mov
std
mov
xor
or
cmp
inc
iret
scas
lds
sbb
cmp
or
mov
ja
add
jmp
mov
add
mov
adc
jl
cmp
mov
jg
sbb
sub
fsts
inc
cwtl
loop
xlat
pop
add
cmp
aas
in
stos
sbb
mov
dec
adc
imul
push
jae
pop
push
mov
out
ss
int
cmp
sub
aad
inc
jbe
shlb
sar
subb
sbb
incb
rcl
sub
jb
enter
nop
sti
clc
and
mov
add
sbb
pop
cld
and
outsl
inc
insb
dec
dec
int
frstors
mul
xchg
mov
push
int3
ss
cltd
bnd
add
xchg
inc
outsb
movsl
xchg
mov
sub
jecxz
pop
and
dec
adc
mov
adc
lret
mov
ja
mov
and
jl
dec
xor
dec
sub
gs
dec
cmp
scas
lret
ret
iret
rol
push
cmpsl
enter
imul
cli
cli
inc
mov
cmpsb
bound
sbb
addr16
pop
popa
subl
cmpsl
cli
mov
data16
cli
sub
mov
and
push
mov
add
out
mov
adc
mov
xor
loope
leave
gs
dec
dec
lcall
inc
inc
mov
test
sahf
sahf
pop
dec
test
dec
mov
fistl
mov
xchg
or
fimuls
xchg
clc
dec
xabort
cmp
lahf
inc
or
inc
movl
xchg
adc
decb
push
in
stc
or
mov
out
sbb
pop
fdivrs
xor
mov
sub
test
vhaddpd
sbb
fists
cli
popa
or
cwtl
sub
xor
aam
stos
fsubl
mov
inc
aaa
mov
cmc
cmp
das
cmpsb
xlat
sarl
bound
xchg
pop
inc
cmp
cmpsb
push
add
lods
pop
push
inc
mov
pop
es
cld
ret
inc
loop
flds
cmp
inc
cli
inc
fcmovb
ja
icebp
aas
xchg
cld
add
fiaddl
out
inc
jp
aas
es
cmc
cmp
xchg
lret
movl
mov
jns,pt
inc
adc
test
jge
push
std
add
fs
in
sub
mov
insb
cmp
loope
jp
jo
sub
outsb
mov
cmpsb
jb
aam
mov
mov
mov
scas
xchg
out
adc
cmp
mov
roll
inc
add
fdivp
mov
mov
ret
insb
call
rsqrtps
inc
jno
aas
fimuls
inc
mov
clc
lahf
sub
cmp
xor
mov
test
jno
lods
out
fdivrs
mov
jo
sar
int
sub
push
addr16
push
das
adcl
mov
jp
sub
aad
inc
push
je
jo
mov
in
xchg
add
mov
fdivr
lret
add
dec
pop
mov
and
sahf
and
mov
cli
fstl
rolb
sahf
mov
dec
sbb
mov
stos
mov
sbb
xchg
xor
adc
scas
and
mov
mov
pop
sti
sahf
dec
pop
and
pop
cwtl
xor
mov
in
inc
jg
dec
xor
dec
fwait
repnz
push
add
mov
xchg
jle
lods
faddp
sub
daa
mov
jmp
cmc
xchg
loop
sbb
fnstcw
ror
ret
cli
dec
sub
pop
loop
cmp
pop
lock
repz
inc
ficoml
cmp
enter
movsb
out
lock
fwait
sbb
mov
cmp
fucomi
aad
push
push
lock
int
mov
leave
mov
je
mov
loope
pusha
pop
ret
jnp
hlt
sbb
into
nop
jl
frstor
mov
int
lods
lds
loopne
push
repnz
fimuls
sbb
xchg
ficoml
aad
pop
jmp
pop
pop
fisubrl
inc
mov
fmull
or
push
test
sub
cmp
out
mov
sub
les
lret
mov
enter
xor
cli
lcall
mov
test
pop
push
aaa
xor
enter
push
cmp
sarb
cli
mov
xchg
in
sub
and
cmpsl
jb
xchg
inc
clc
jb
mov
aaa
repz
xchg
ret
iret
ret
cmpl
stc
aas
or
inc
clc
xchg
inc
and
cwtl
adc
arpl
dec
jl
mov
lock
sub
pop
xor
mov
aas
mov
sub
sub
nop
in
pop
mov
lcall
inc
imul
shll
xor
ds
cmp
mov
not
fsubr
dec
mov
out
add
mov
mov
push
push
mov
daa
ds
adc
pushf
ss
aam
inc
int
out
sub
pop
inc
xchg
push
notb
inc
inc
sti
pop
sub
push
nop
jle
enter
sub
lds
pop
notl
push
dec
rcrb
mov
adc
fisttpll
ss
in
mov
cli
push
les
lock
push
stc
push
lahf
adc
pop
bound
xor
out
call
cmpsb
and
mov
push
jne
mov
inc
fucomip
jns
cli
and
ficoml
and
inc
subl
fistpl
pop
outsb
lcall
fadd
mov
mov
lock
adc
pop
iret
test
iret
xchg
enter
int
cs
int
xor
xchg
cmp
inc
and
sub
fidivl
inc
into
add
int
inc
sbb
and
lret
aaa
pop
outsb
mov
mov
dec
sahf
fcoms
dec
pop
cli
mov
mov
fsubs
jns
inc
adc
loopne
shlb
lret
push
mov
ficoms
jmp
sub
mov
push
stc
jecxz
or
mov
movb
push
lret
jp
test
push
pop
repnz
jb
lock
in
inc
or
inc
shlb
sbb
jecxz
adc
iret
ljmp
mov
cmp
cmpsb
std
sahf
lret
pop
fneni(8087
jl
movsb
mov
imul
xor
out
jnp
outsb
mov
lds
outsb
mov
mov
pop
and
leave
sbbb
cmp
rorl
pop
fidivrl
cmc
call
fdivl
outsb
push
iret
ja
into
jne
cmpsb
add
cltd
pop
adc
call
mov
pusha
lahf
xchg
cmp
scas
mov
ficompl
xor
dec
je
outsb
pusha
xor
mov
loopne
mov
sub
cmp
or
mov
aad
mov
push
cs
jle
int
mov
aaa
jecxz
lcall
cmc
mov
movsb
test
jmp
js
lods
push
mov
test
int3
add
mov
ljmp
out
and
pop
hlt
add
leave
nop
or
cmpsb
xchg
cmpsb
sbb
out
in
pushf
xchg
vunpckhps
jp
mov
sbb
cmp
cli
sbb
leave
test
std
mov
fmuls
adc
lock
frstor
div
iret
cmp
push
jbe
dec
outsb
cld
cmpsb
adc
out
aam
xor
mov
add
or
jbe
divb
jne
dec
dec
mov
andl
sub
jne
lcall
or
repnz
fsubrp
lods
cmpsb
sti
pop
cmpsb
lods
mov
lcall
push
mov
lcall
cmp
and
mov
aad
push
mov
adc
inc
and
inc
mov
bswap
mov
fmul
inc
mov
dec
ret
adc
ret
xchg
aam
cmp
dec
cs
and
cmpsb
xor
jno
inc
ss
dec
push
add
mov
lahf
push
iret
loope
rclb
cmpsb
mov
out
shrl
addb
out
int3
sbb
fildl
push
or
sub
adc
bound
fldt
lret
fcmovne
sub
iret
mov
xor
push
sbb
sub
and
adc
sbb
pop
inc
jbe
jo
push
movsb
ljmp
mov
cmpsb
popa
mov
dec
lret
cmp
adc
hlt
sbb
fcmovb
adc
mov
sbb
out
int3
add
std
inc
mov
jmp
loop
scas
mov
lret
sub
and
or
dec
jo
rcll
cmpsb
ss
pop
pop
xchg
push
int3
jb
push
ss
and
out
inc
xor
mov
ja
orb
mov
repz
mov
mov
loop
pop
sub
add
pop
push
xor
sub
rolb
iret
in
push
xor
pop
mov
aas
adc
inc
mov
rcr
shll
cli
sti
push
int3
bound
mov
in
lds
mov
neg
dec
jb
mov
xor
shlb
mov
cmc
outsb
jle
ja
nop
push
mov
add
add
push
jg
adc
pop
pop
into
and
and
shrl
fcmovnb
int
inc
cli
rcr
les
dec
jno
mov
popa
push
loop
or
fwait
scas
lods
xchg
push
iret
out
add
dec
mov
testb
into
sti
and
sbb
in
mov
push
icebp
mov
pop
mov
sub
mov
and
inc
cli
push
loopne
push
sahf
cs
mov
repz
lahf
sub
repnz
jae
outsb
fst
sbb
cwtl
adc
stos
mov
mov
ljmp
outsl
sbb
loope
xchg
mov
loopne
fisubrl
lock
push
inc
mov
mov
cmp
jbe
lock
mov
mov
pop
or
out
inc
scas
aaa
enter
cmpsl
mov
push
mov
adc
push
addr16
and
fdivr
lcall
inc
das
inc
mov
mov
add
dec
dec
outsb
jb
xor
sbb
cmpsb
rcl
iret
mov
cmc
sub
fidivl
mov
xor
pop
cmp
xchg
test
idiv
inc
mov
cmp
inc
gs
lret
in
mov
push
clc
jg
push
fdivrs
dec
notb
xchg
and
add
pop
xchg
or
js
push
mov
dec
scas
push
push
jl
testb
pop
add
jecxz
or
mov
adc
sub
rolb
fisubl
xchg
mov
imul
jecxz
cli
ds
arpl
enter
idiv
jle
sub
adc
mov
jl
mov
jo
mov
and
push
push
inc
call
into
outsl
xchg
unpcklps
js
adc
push
mov
fisubrl
ja
jo
sbb
fnstenv
jno
ljmp
xor
data16
pushf
xchg
cld
mov
push
sbb
leave
pcmpgtd
fsubs
mov
outsl
jo
jle
jb
or
inc
ret
mov
js
xchg
xor
fidivrs
sub
mov
cmc
pop
jnp
loop
mov
mov
or
mov
ds
xor
lds
fisubl
mov
into
mov
stos
push
data16
sub
jp
jle
jecxz
dec
push
aad
mov
push
cs
mov
int3
push
or
fistpl
jbe
cmpsb
int3
xor
xchg
jbe
ficoms
call
sti
adc
sbb
dec
mov
iret
lcall
insl
sbb
mov
dec
sub
scas
daa
loope
sar
loopne
loope
int3
repnz
mov
xchg
mov
scas
roll
in
xchg
loop
push
divb
repz
cli
xchg
lret
mov
push
enter
imul
scas
fidivs
ss
test
jb
out
push
addr16
arpl
mov
fisubs
mov
fstpt
xlat
lahf
mov
cld
sahf
mov
int3
xchg
xlat
loopne,pt
leave
xchg
or
cmpsb
es
divl
mov
cmpsb
mov
jae
pop
mov
loope
jle
mov
out
insl
aas
push
mov
mov
iret
das
cmpsb
fs
adc
and
insb
mov
mov
push
xlat
jo
leave
add
aam
aad
add
cltd
push
add
adc
jo
mov
jp
xor
sbb
xchg
imul
sbb
sti
mov
xchg
out
ds
push
cwtl
cmp
fdecstp
fadds
xchg
int3
adc
mov
add
sub
clc
idivb
mov
into
lds
push
imul
loop
or
rcll
fistpl
mov
sub
mov
outsb
xchg
fcom
in
mov
pushf
or
lret
std
pop
loopne
mov
dec
mov
sub
cmpsb
rolb
cmpsb
lahf
pop
inc
dec
fsubrp
push
pop
inc
cli
mov
ficoml
dec
mov
fsubs
mov
ret
mov
nop
test
cmpsb
lea
hlt
mov
pop
mov
push
pop
imul
mov
sub
xor
pop
cli
hlt
cmp
shlb
lods
cmp
sbb
push
mov
imul
jb
cmp
sub
aaa
sub
clc
jbe
in
lods
cs
lcall
adc
ds
pop
int
dec
sub
repnz
and
cli
pop
dec
and
notb
pop
push
outsb
nop
jge
enter
cmp
icebp
mov
xor
orl
mov
in
sub
sbb
pop
arpl
int3
xor
pop
and
push
dec
mov
xlat
mov
pop
jbe
jo
and
mov
pop
js
add
mov
xor
fnclex
and
cli
xlat
mov
frstors
inc
int3
push
mov
mov
in
jle
enter
sub
mov
xchg
into
push
iret
dec
mov
sahf
dec
pusha
int3
scas
cli
aas
call
fistl
pushf
cmpsb
mov
test
mov
sbb
sub
idivb
cmpsb
xchg
js,pn
mov
or
mov
scas
pushl
mov
popf
jp
pop
andb
out
ret
gs
ljmp
dec
jbe
sti
insl
sbb
sub
into
inc
pop
lcall
push
ret
push
mov
lret
or
jo
aaa
add
add
mov
jno
cmp
and
mov
and
inc
sub
mov
pop
out
add
cltd
mov
shll
inc
mov
out
push
mov
pop
aas
sbb
fimull
fsubs
mov
pcmpeqd
mov
enter
out
pop
enter
pop
mov
stos
lds
push
push
add
lea
cld
mov
jl
mov
loopne
leave
aad
jnp
jb
xor
xlat
and
nop
pop
in
ss
mov
xchg
in
add
inc
xchg
enter
shlb
or
jno
add
jmp
out
rcll
ss
push
adc
mov
and
sub
clc
dec
ret
stos
inc
jbe
dec
test
jae
lcall
ds
fiadds
js
and
ss
xorw
clc
dec
xchg
push
pand
lcall
popa
pop
push
push
sbb
mov
xor
aam
push
mov
xchg
movsl
mul
out
outsl
push
jo
push
xlat
pusha
pop
cmp
int
push
xchg
add
cs
adc
mov
out
ret
call
sub
dec
adc
jb
out
test
mov
mov
inc
cmpb
mov
mov
lret
movsb
jno
out
jmp
into
sub
dec
repz
and
mov
cwtl
mov
fcmovnu
push
fs
add
or
xchg
fsub
inc
xchg
test
add
scas
mov
in
xlat
sti
add
mov
jp
mov
scas
mov
ja
and
int
jp
icebp
dec
cmp
ss
out
call
jecxz
mov
in
mov
jo
push
push
xchg
cmpsb
mov
int3
xchg
das
mov
sub
sbb
and
loop
out
or
mov
xchg
xchg
mov
icebp
or
mov
fstl
add
cmpsb
lret
and
movsb
adc
cld
pop
imul
inc
rorb
dec
jge
add
cli
or
les
mov
lahf
sub
sub
stos
mov
inc
adc
cmc
push
mov
adc
mov
mov
es
jmp
insb
jp
xor
imul
jbe
sarl
mov
push
clc
cli
lds
dec
pop
lahf
inc
mov
push
leave
cmpsb
out
gs
addb
fistl
or
and
jbe
xchg
adc
hlt
or
push
jbe
hlt
mov
sub
mov
popf
repnz
loope
dec
or
aaa
in
pop
ficoms
lods
iret
mov
aad
lret
and
dec
sbb
mov
mov
cmp
pop
dec
fildl
into
aaa
movl
ret
inc
bound
mov
inc
pop
push
jmp
push
adc
inc
dec
sti
int3
fisubrs
jb
jbe
popa
adc
jle
aad
lds
or
test
push
out
pop
ds
and
dec
movsl
ds
pop
enter
mov
out
es
out
ja
mov
mov
sbb
insl
fcmovnbe
xchg
ljmp
sti
adc
and
or
inc
lods
mov
push
int3
popa
ljmp
fistps
adc
in
or
fldt
mov
aaa
loope
addr16
or
mov
aas
or
fcmovnu
push
jbe
insl
add
push
ds
iret
std
add
out
sbb
mov
sub
std
daa
sbb
test
jecxz
add
inc
mov
mov
sti
shll
xchg
ljmp
and
xor
or
testb
lds
jecxz
jne
push
jno
ss
and
outsl
jnp
cmpsb
jle
sub
fsubr
mov
sub
inc
notl
ljmp
in
mov
push
fdivrl
es
jae
dec
out
jp
xchg
add
mov
sub
sbb
fdivl
or
xchg
fcmove
int
pop
iret
sub
xchg
jle
adc
adc
pop
inc
pop
outsl
inc
sti
repz
mov
les
mov
jbe
adc
push
stc
push
pushf
xor
aam
or
sarb
insl
jns
leave
adc
in
dec
ss
shrl
push
xchg
xor
in
mov
icebp
mov
int3
andb
fdivrs
push
pop
adc
push
mov
and
je
mov
jge
cmp
aad
in
cltd
jmp
call
sub
xchg
mov
and
es
dec
cld
cmp
mov
push
rorb
lcall
mov
pop
outsl
sarb
jbe
rcl
mov
adc
scas
pop
in
scas
push
jb
idivb
dec
sahf
adc
lret
incb
not
hlt
daa
sub
rol
sub
fldl
mov
loop
js
rcl
ret
jno
imul
in
push
daa
and
push
lret
out
and
call
xlat
icebp
lock
loop
aad
xlat
leave
or
stos
decl
jp
insl
lods
orb
jle
loope
push
adc
shlb
enter
mov
jg
movsl
je
push
push
pop
dec
mov
cli
pop
stc
sub
ficoms
insl
push
dec
frstor
stos
negl
jecxz
loop
das
jecxz
jg
stos
into
xchg
aaa
int3
lods
sub
into
arpl
jnp
sbb
mov
or
pop
dec
xchg
bound
faddl
iret
sub
aam
add
fcmovbe
cld
loopne
xchg
mov
mov
cmpsb
mov
in
arpl
bound
popa
mov
sbb
ret
mov
inc
idiv
pushf
cs
loop
rcr
testb
mov
push
loope
jp
roll
test
call
pop
push
sub
adc
fisttpll
adc
sbb
mov
scas
xor
and
mov
call
cmpsb
pop
mov
xor
mov
and
adc
lea
rcrl
testl
test
mov
dec
and
lret
mov
sahf
cld
pop
push
jecxz
push
movsb
mov
movl
xlat
pusha
js
scas
dec
lds
es
pop
add
pop
mov
add
mov
adc
bound
and
xchg
jmp
jbe
lret
add
out
or
xor
js
sbb
sahf
aaa
fimuls
pop
pop
ds
pusha
cmp
mov
and
ret
sahf
sahf
add
fsubp
adc
mov
mov
add
fidivs
xlat
push
pop
adc
test
xor
mov
push
sbb
leave
adc
xchg
push
call
fxch
pop
fistpl
cmp
push
adc
mov
in
sub
loop
mov
mov
sbb
aam
inc
inc
jae
fcoms
mov
jne
add
lock
into
xlat
or
stos
mov
push
test
out
jo
int3
inc
push
aad
out
mov
int3
mov
and
push
mov
mov
lret
sub
aad
movl
out
or
shl
aam
je
int
fimuls
imul
into
test
xchg
push
dec
jecxz
adc
idivb
jp
inc
adc
mov
ficompl
aaa
hlt
call
jae
dec
jbe
mov
sub
dec
sbb
rcrb
jb
popa
mov
mov
xor
sbb
xor
and
cmpsb
jo
jnp
jl
movsl
fsubrs
push
int
jno
int3
cmpsb
xlat
and
dec
mov
test
xor
inc
fucom
xor
push
outsb
hlt
jp
fsubrs
mov
loop
sahf
fsubrs
mov
mov
dec
fdivs
aaa
mov
mov
mov
lret
repnz
fisubl
cmpsb
ss
loopne
mov
mov
push
mov
add
jle
cli
mov
mov
out
or
nop
xchg
movsl
xor
mov
jbe
pop
xchg
pop
push
cltd
mov
push
rorb
incb
int3
jb
mov
imul
jmp
xor
dec
mov
out
mov
cld
outsb
jp
ret
pop
sub
inc
je
sub
stos
and
in
pop
mov
pop
push
mov
fdivrl
shl
adc
lds
shrb
dec
jbe
je
jne
data16
xchg
and
ficompl
mov
fincstp
inc
inc
stos
test
mov
mov
mov
mov
cmp
pop
std
push
jp
add
loopne
loopne
es
pushf
in
repz
cld
xlat
testb
pop
xchg
mov
jp
shll
outsb
fdivs
xchg
jo
mov
cmpsb
ja
mov
cmp
and
mov
push
mov
das
shl
sti
in
xchg
std
scas
mov
enter
out
js
in
cwtl
stos
mov
test
fsts
sbb
test
ds
pop
scas
hlt
cltd
lcall
lcall
xchg
stos
outsl
dec
cwtl
xor
mov
in
not
out
loop
dec
xor
shll
cmp
mov
shlb
pop
imul
in
xor
push
divb
inc
jb
dec
push
lds
lods
add
mov
fdivs
std
xor
nop
and
shll
jge
mov
in
insl
sbb
xor
sub
push
xchg
inc
into
out
cmp
inc
idivb
loope
jbe
mov
mov
jbe
push
lret
sub
sbb
and
movsl
xchg
adc
add
mov
fnstenv
in
cs
push
ret
rol
out
push
pop
jb
sbb
mov
push
mov
lcall
addb
pop
shrl
inc
jecxz
xchg
pop
mov
push
pusha
jo
mov
jno
cli
and
lds
mov
int
xchg
inc
mov
pusha
adc
ret
clc
jno
iret
pop
jecxz
out
mov
cs
xchg
inc
push
out
cmp
sbb
shll
movsl
xchg
icebp
jp
cmc
mov
je
arpl
out
xchg
push
dec
jbe
xor
sbb
mov
xor
inc
cmpsb
or
enter
into
clc
stos
adc
pushf
push
out
bound
aaa
mov
pop
adc
test
mov
fdiv
mov
or
push
fiadds
mov
das
scas
aaa
lsl
mov
ljmp
cmp
mul
add
adc
sbb
into
sub
in
das
fnsave
jbe
add
aaa
lcall
mov
cli
int
mov
mov
mov
ret
xor
jl
push
mov
xchg
rol
mov
fwait
xor
out
idivb
sbb
pop
notb
int
das
add
cltd
aam
fwait
std
dec
lock
js
adc
ret
jo,pt
xlat
enter
rcrl
insl
das
add
inc
loopne
xchg
jle
or
mov
popa
cmp
pop
data16
lret
mov
int3
and
mov
fs
dec
add
dec
push
jno
in
or
mov
inc
fcmovb
les
mov
push
andb
cmp
push
sub
js
or
ret
pusha
out
roll
int
sbb
sub
adc
cli
fisttps
mov
cmp
add
push
subb
jo
int
fmul
das
in
add
pop
cltd
add
iret
lods
pop
push
je
sub
lret
test
out
push
push
and
aad
sbb
mov
pop
cwtl
lock
into
in
int
jne
packuswb
incl
out
adc
push
test
xchg
mov
cli
out
aad
pop
aam
push
mov
cld
fldt
xor
xorl
rcr
adc
mov
jne
adc
fdivs
and
out
jns
enter
pop
xchg
mov
ds
leave
rcrl
cmp
in
xor
jb
add
les
adcl
inc
pusha
les
ss
lret
cmp
mov
jmp
sbb
cmpsb
add
shl
lods
push
mov
loope
ljmp
push
pop
frstpm(287
adc
bound
and
and
fidivl
inc
push
enter
cmp
mov
sbb
xchg
cld
mov
fidivrs
mov
mov
inc
lea
pop
inc
mov
mov
stos
adc
xor
lods
aad
ds
rcll
jo
push
mov
loope
jne
mov
xor
mov
outsb
loop
mov
out
and
aas
cmp
cmpsb
sub
mov
data16
cmp
jle
loopne
fsubs
or
cmp
nop
add
sbb
imul
out
inc
sbb
and
pop
popa
inc
or
sub
pushf
sbb
cli
mov
jmp
jbe
subb
sbb
out
pop
cmpsb
int3
ficoms
iret
shr
in
leave
pusha
jp
sahf
divb
hlt
sti
push
loop
cmpsl
push
fdivrs
call
pop
cmp
neg
mov
xchg
xor
push
push
ret
mov
sbb
loopne
mov
test
int3
fnstcw
sub
inc
stos
adc
cmp
js
sub
add
sbb
data16
out
add
xchg
out
xchg
xor
jge
mov
mov
jp
mov
div
gs
aas
mov
pop
in
mov
es
jae
jbe
mov
cmpsb
int3
jge
mov
ret
mov
inc
sub
rorb
mov
push
sbb
shll
test
mov
mov
cmp
sub
adc
sub
pmaxsw
pop
bound
mov
loop
or
push
test
iret
movsb
lahf
xchg
push
fucomp
stos
inc
rorb
int3
push
sub
xchg
es
mov
push
push
mov
cs
out
shl
lods
or
mov
mov
popa
mull
repnz
mov
incb
lea
por
rcrl
sahf
adc
or
loop
cs
jns
sti
nop
fldl
or
push
mov
pop
mov
sub
imul
rcll
das
gs
pusha
cmp
insl
icebp
or
rolb
clc
xlat
xchg
inc
jb
xor
frstor
ss
xor
pop
mov
pushf
jbe
or
xchg
mov
and
fld
mov
xchg
jle
sub
fcmovb
push
fiaddl
ds
lret
aam
mov
add
push
orb
sub
into
test
aam
ret
xchg
cmovbe
divb
push
push
mov
mov
ficomps
xor
push
fcoms
mov
pushf
sbb
lock
mov
dec
mov
ja
rcrl
inc
add
mov
mov
xor
cmc
ret
and
sub
loop
adc
loop
and
dec
je
add
sbb
mov
sbb
rcl
loop
enter
out
dec
or
mov
mov
cmp
clc
dec
je
jp
aaa
rolb
xchg
push
andb
sub
mov
ficoml
push
sub
push
out
mov
push
ror
scas
jecxz
and
out
lcall
jne
xchg
push
xlat
cmp
cmp
jbe
pop
and
jmp
jl
call
outsl
outsb
pop
mov
push
aaa
push
shlb
sbbb
or
and
push
pop
jne,pt
shll
pop
dec
call
shrl
mov
cmp
jg
fdivs
cmp
jecxz
aad
iretw
jmp
and
mov
lods
jle
push
iret
lret
outsl
enter
data16
cmp
lods
ret
clc
mov
adc
push
idivb
cmp
into
push
aam
mov
mov
iret
xchg
pop
sbbl
push
rolb
fisttpl
cmpsb
add
shlb
or
cmp
shlb
xchg
lahf
subb
push
mov
lcall
sub
xchg
roll
shlb
aaa
leave
mov
js
jle
ret
pop
je
mov
cmc
fsubrs
dec
mov
outsb
out
sub
mov
enter
call
jl
mov
scas
xlat
sbb
xor
mov
popa
mov
cli
test
sbb
mov
cmp
xor
ficoml
mov
call
sar
sbb
dec
push
mov
rolb
repz
add
test
ret
dec
cmpsb
mov
mov
stc
sti
fimull
push
cmp
push
mov
rolb
add
inc
push
mov
icebp
cmpsl
push
jmp
or
js
jo
int
ret
stos
sbb
fs
xchg
push
xchg
push
pcmpeqd
add
pop
rorl
adc
xor
fisubrl
shll
lock
xchg
ret
or
shl
push
mov
or
mov
cmc
mov
cs
mov
or
sbb
scas
outsb
jl
fsubrs
adc
ror
xchg
xchg
lahf
insl
lock
popf
cmc
js
xlat
xor
sub
pop
xor
mov
ficoml
pop
sub
ds
pop
enter
mov
and
lcall
inc
jecxz
loop
adc
mov
data16
cli
or
xor
mov
leave
out
jne
adc
js
and
add
pop
fsts
jmp
mov
xchg
push
test
adc
push
ret
cmp
mov
idiv
add
dec
pusha
mov
mov
aaa
xor
pop
dec
jo
mov
cmp
dec
push
adc
pop
clc
enter
push
sti
mov
iret
lock
cmpsb
mov
ret
aad
xor
sbb
or
xor
lock
flds
cwtl
lcall
out
jl
loopne
repnz
lret
mov
ret
scas
jle
mov
xor
sbb
rclb
lds
cmpsb
pop
aad
repnz
xchg
es
mov
lahf
mov
enter
add
data16
inc
cli
std
mov
sar
jge
mov
lods
test
pop
mov
lock
jbe
mov
in
je
lods
fs
scas
mov
in
decb
push
fs
xor
lock
mov
inc
mov
sub
lods
test
cld
int3
push
mov
outsl
fidivs
sar
mov
adc
mov
iret
call
in
pop
add
ss
and
jp
jb
aam
fnstcw
nop
jo
lret
fldl
lret
ds
aad
rcrl
jmp
insb
dec
jb
xor
rcl
jne
jle
mov
adc
sub
mov
mov
add
pop
add
mov
rcl
xchg
mov
inc
adc
push
cs
ret
jnp
addr16
or
ret
test
push
nop
jecxz
pop
je
lcall
not
pusha
aaa
fcoml
sahf
jecxz
loopne
push
push
adc
lret
fldl
filds
mov
mov
stos
mov
fisttpll
mov
mov
mov
jle
and
xchg
fldenv
adc
push
icebp
fimull
lret
aaa
mov
icebp
mov
outsb
in
stos
repz
push
push
mov
stos
mov
into
xchg
mov
xchg
jb
mov
test
jmp
push
aad
and
mov
xchg
leavew
sbb
xchg
cmpps
rolb
cmp
cmpsb
int
sbb
mov
sub
lea
mov
xchg
mov
loop
ret
push
add
jo
stos
pop
fwait
pusha
andb
adc
loopne
push
sar
lahf
xlat
mov
test
sub
push
inc
out
push
push
ret
cmp
orb
shlb
fsub
cli
adc
ret
out
cltd
mov
mov
int3
out
into
rol
jnp
mov
faddp
insl
cwtl
scas
cs
mov
mov
sub
cmp
bound
neg
aaa
sub
mov
aaa
push
scas
mov
cmpsl
leave
clc
das
iret
fs
pop
imul
es
mov
mov
out
clc
sbb
inc
mov
jo
mov
pop
add
sbb
and
leave
jecxz
loop
test
add
ficoms
adc
sarb
add
jbe
pop
or
pop
inc
cmp
add
jge
cmpsl
dec
scas
jmp
mov
aas
inc
push
mov
xchg
pushf
jmp
xchg
shlb
push
mov
hlt
xchg
cld
push
pop
stc
mov
repnz
sbb
out
or
add
shll
ficoml
int
mov
pop
or
jae
cmp
inc
pop
pusha
daa
push
sbb
shll
sub
pushl
decb
mov
cmp
shrb
shll
xor
xor
arpl
lret
fiadds
fmull
mov
test
mov
or
inc
cli
xchg
gs
cld
mov
lock
mov
push
cmpsb
loopne
mul
jne
mov
mov
lret
mov
dec
mov
dec
sarl
inc
sub
add
xchg
adc
and
ljmp
not
inc
cmpsb
lock
enter
mov
leave
mov
test
imul
rclb
loop
jb
clc
push
mov
movsb
clc
movsl
or
int3
iret
ret
push
push
dec
cli
ds
pop
and
push
jl
ret
mov
into
sub
or
xchg
out
fstpt
pusha
dec
popf
xchg
outsb
leave
out
mov
je
xor
mov
fisubl
push
dec
test
leave
mov
repz
in
bound
mov
es
imul
inc
and
dec
pushf
in
into
mov
out
pop
in
mov
mov
les
enter
cli
and
cmc
loope
adc
fstpl
out
mov
clc
mov
sub
cwtl
decb
leave
push
ret
mov
mov
shrl
push
insb
shr
ljmp
out
mov
add
sbb
mov
jle
cmc
jl
fcoms
ret
into
push
xor
mov
jb
lret
mov
cmp
mov
xlat
icebp
dec
js
hlt
test
jnp
lods
shlb
ret
hlt
movsb
mov
mov
dec
adc
cli
shlb
sub
ss
scas
nop
push
inc
and
mov
mov
cmp
into
jecxz
and
lcall
jb
and
enter
mov
lret
int
jb
jo
xchg
sbb
fiaddl
sub
inc
push
pop
popl
test
add
add
cli
jle
mov
fisubs
mov
stc
pop
jmp
int
push
in
mov
movsb
test
mov
mov
pop
mov
mov
pop
dec
or
mov
mov
adc
sub
pop
or
pop
mov
loope
inc
out
sub
aam
inc
iret
lds
fsubrs
xchg
lret
je
lret
cmpsb
mov
ds
xchg
int3
iret
cmp
xchg
sbb
ds
push
mov
or
add
cltd
outsb
mov
aad
mov
rcrb
lock
sbb
int3
fdivs
mov
into
inc
call
cmp
push
sti
cli
aad
mov
push
ja
fucom
lcall
xlat
in
pop
sbb
cltd
lcall
mov
ret
aad
fisubrl
sub
int3
cwtl
inc
inc
cmc
mov
xor
jle
and
imul
xor
gs
enter
mov
repnz
loop
fisttpll
xchg
pop
cli
test
mov
imul
test
mov
cmp
cmp
les
push
inc
divb
imul
cmpsb
xchg
mov
mov
mov
pop
popa
jp
aas
xchg
mov
stos
jle
jbe
rolb
sbb
add
popa
dec
add
fdivl
ja
mov
adc
dec
xchg
push
xor
mov
mov
ror
mov
push
mov
add
movb
adc
xor
xor
pop
push
ficoml
adc
cmp
sub
pop
xor
push
inc
repnz
mov
mov
es
out
mov
and
in
adc
jmp
sub
fists
sub
add
inc
mov
xchg
mov
add
shrl
inc
scas
ds
out
mov
cmpsl
out
jo
repz
rorb
xchg
pop
es
pushf
mov
cld
dec
ret
and
ss
xorb
aaa
pop
sub
mov
repnz
stos
js
ljmp
inc
xor
xchg
rcr
push
or
mov
loop
adc
mov
push
xchg
inc
sbb
aad
ret
movsb
popf
loop
int3
es
adc
mov
sbb
aam
into
or
aaa
aam
xor
int
cmp
mov
mov
stos
mov
xchg
aaa
std
push
sub
jb
ds
ret
jge
push
mov
fldl
leave
sti
rcll
xchg
jecxz
xchg
sahf
jo
icebp
les
mov
inc
mov
adc
inc
cli
dec
out
mov
int3
mov
xchg
pmaxsw
bound
lea
adc
ds
add
and
xlat
lcall
push
mov
dec
mov
and
imul
jecxz
adc
idivb
or
jo,pn
sub
xor
cmpsb
fwait
clc
mov
cmp
bnd
fisubl
pop
notb
cmp
test
jno
mov
mov
or
push
fldt
les
jb
aaa
aas
adc
mov
and
lock
out
mov
push
les
test
adc
push
enter
call
push
mov
cmpsb
clc
out
jbe
pop
iret
std
add
lret
std
fwait
test
ss
jbe
addr16
jmp
add
sbb
sub
dec
cli
mov
kmovw
lcall
jbe
mov
sub
stos
mov
inc
lock
std
cmp
mov
mov
and
stc
cmpsl
push
insl
clc
loop
bound
pusha
sub
jg
or
rcr
add
jl
mov
test
xchg
push
pop
jecxz
out
fcoms
leave
mov
jle
mov
mov
in
popf
or
daa
inc
jecxz
leave
pop
into
ss
lods
add
sbb
sub
sar
negb
xchg
xchg
and
jne
ss
cwtl
jnp
fstpt
jb
mov
jnp
flds
mov
or
lret
add
aaa
sarb
leave
mov
xorb
or
enter
xchg
cltd
push
adc
dec
inc
sahf
xchg
aam
dec
push
clc
push
lea
push
iret
mov
aam
mov
xchg
xlat
inc
xchg
jle
push
repz
test
jns
aaa
mov
and
out
idivl
jae
leave
push
in
jmp
pop
adc
nop
out
ror
mov
add
arpl
mov
aad
mov
mov
pop
xchg
sbb
xchg
jbe
xchg
ret
add
int3
cmp
repz
loop
in
enter
jno
cs
jae
stos
lcall
iret
test
shrb
gs
mov
mulb
inc
out
dec
dec
mov
cwtl
scas
or
cmpsb
and
push
and
adc
ret
into
mov
lret
dec
and
dec
ja
sub
ret
dec
mov
xor
lahf
xchg
loop
loopne
mov
jge
pusha
dec
or
shll
loop
inc
dec
cmp
ret
aam
pop
out
ds
int3
ss
xor
out
fbstp
sbb
je
dec
push
iret
loop
sub
mov
out
lods
and
les
pusha
hlt
adc
jle
fcomps
rcrb
or
insb
data16
shlb
clc
mov
fidivrl
nop
adc
pop
sub
cmp
lahf
loop
push
into
jle
mov
rcrb
adc
cmpb
mov
inc
jo
out
jae
pop
test
int3
dec
cmpsb
lret
int
mov
adc
popa
ljmp
xlat
imul
scas
and
inc
add
cli
roll
out
fstpl
push
xchg
add
mov
jb
sub
mov
rclb
addr16
xchg
add
push
out
mov
into
add
enter
push
inc
aas
lret
mov
or
xor
sahf
mov
inc
pop
xchg
xchg
cs
in
repnz
loope
decl
mov
es
sahf
push
ja
pop
leave
das
loope
push
js
dec
adc
mov
roll
testl
sbb
mov
clc
xchg
pop
fwait
mov
aas
mov
dec
negl
mov
sub
push
aaa
rorb
xor
jo
ret
fsubr
mov
not
xor
cmpsb
mov
aas
mov
mov
inc
shll
jle
mov
hlt
add
das
push
sarl
pushf
push
aad
dec
xchg
mov
adc
mov
push
int
jmp
out
ret
aas
dec
mov
cli
sahf
mov
test
lret
jmp
inc
mov
pushf
fidivrl
jo
cmp
adc
mov
cmp
clc
into
or
ss
mov
xchg
lock
movsb
cmp
fldt
jne
xor
or
jmp
sti
loop
mov
test
scas
loope
in
xchg
mov
aas
in
test
imul
mov
or
or
loop
nop
mov
cmp
fdiv
sar
jmp
sub
mov
pop
dec
cmp
cwtl
pop
sub
and
out
enter
orb
mov
cmp
and
xor
xchg
cs
mov
xchg
add
push
lret
push
mov
push
jae
cltd
dec
into
jg
lods
jle
test
stos
sbb
xor
fld
mov
idivl
data16
loopne
cmp
pusha
mov
fidivs
push
fisubrs
fsubrl
aad
into
xor
es
xchg
mov
fwait
stos
add
cltd
mov
mov
push
jns
shll
push
mov
push
jbe
ds
out
jge
xchg
mov
push
adc
cs
leave
movb
mov
add
inc
into
or
int
pop
loop
ds
fadd
push
inc
and
push
push
push
cmpsb
repnz
cmpsb
fisubrl
ss
adc
or
movsl
jle
loopne
dec
jae
mov
mov
in
inc
mov
or
xchg
dec
mov
bound
jecxz
add
or
rclb
mov
xchg
punpckhbw
adc
jb
add
adcl
mov
enter
decl
xchg
repnz
fdivs
inc
lret
adc
in
dec
push
mov
dec
mov
hlt
cmp
xor
enter
hlt
in
push
inc
mov
dec
push
push
cli
mov
mov
adc
lret
lcall
loopne
mov
shl
ds
push
jne
arpl
scas
push
icebp
pop
inc
ds
mov
out
jo
push
xchg
ds
pop
lret
xchg
lret
enter
ja
mov
sub
in
push
cmpsb
mov
aas
sahf
xchg
adc
dec
jmp
mov
pop
sarb
inc
cs
test
or
add
cmpsb
mov
scas
movl
sbb
push
adc
push
jb
fisttps
loope
push
stos
inc
mov
add
jp
int3
sarl
mov
and
sbb
leave
fs
add
adcl
popa
pop
push
fistl
adc
int3
lods
idivl
lods
and
sahf
mov
mov
popf
dec
call
rorl
call
xlat
pop
xor
movsb
ds
push
sbb
jbe
ret
inc
add
pop
xchg
adc
dec
dec
in
adc
and
lods
pop
dec
mov
out
xchg
repz
inc
dec
ret
cld
int3
jmp
mov
and
fucomi
shll
daa
push
and
sarb
sub
sar
dec
lret
sub
aad
sub
mov
iret
mov
xchg
sbb
int
pushf
jns
lcall
iret
out
add
pop
int
jnp
mov
movsb
sub
xchg
jbe
repz
xor
fiadds
lcall
fnstsw
fidivs
addl
daa
jae
dec
push
cmpsb
adc
loop
lahf
ret
mov
add
jno
fisttpl
lods
into
ljmp
mov
leave
neg
insb
add
out
daa
faddl
xchg
xchg
and
inc
xchg
fisubs
cli
pop
push
aad
hlt
fcoms
add
leave
shrb
shlb
pop
std
or
stos
into
sarb
jb
mov
adc
pop
adc
movsb
push
int3
mov
nop
pop
jbe
jo
cmpsb
fs
mov
mov
inc
adc
jb
or
mov
sub
push
jo
sub
jp
int3
lds
shr
test
ss
enter
mov
cmpsb
adc
fucomip
ja
xlat
push
xchg
orps
xchg
out
mov
not
mov
addr16
add
movsl
jmp
ja
jo
mov
push
fimull
pop
mov
aaa
outsb
aam
repnz
imull
scas
mov
leave
loop
das
fidivrl
jecxz
in
jno
data16
sbb
sub
int3
mov
and
push
cli
fcmovbe
mov
xchg
mov
mov
pop
jns
push
in
mov
add
mov
mov
jl
shr
call
ljmp
xchg
pop
mov
mov
ss
hlt
push
add
xchg
jle
cmpsb
lahf
sarl
mov
stos
mov
add
mov
push
mov
int3
fisttpll
mov
or
loopne
lret
jno
jle
sub
dec
daa
loop
mov
sbb
add
mov
faddl
adc
out
add
ss
leave
insl
out
push
and
cltd
cmp
out
mov
pop
xchg
notl
inc
adc
push
cmpsb
nop
pop
ds
pop
notl
jmp
js
movlhps
std
mov
gs
sbb
imul
out
xchg
xor
push
enter
or
cwtl
xchg
movsl
dec
lret
movlps
pop
pop
mov
mov
repnz
int3
out
repz
mov
lds
lds
xchg
add
fwait
dec
inc
fdivs
adc
aaa
ret
dec
jge
add
push
mov
imul
cmp
bound
enter
js
cmp
fidivs
ret
xor
scas
loopne
mov
push
shll
ds
and
mov
pop
ljmp
aaa
add
mov
mov
insb
lahf
pop
sahf
jnp
lcall
push
jp
sub
push
mov
push
xor
mov
ficoms
and
std
int3
data16
imul
push
outsb
cmp
adc
and
ds
inc
and
push
adc
or
outsb
fmul
sub
mov
subb
mov
enter
movsb
cltd
push
popa
cmpsb
adc
inc
mov
add
xor
dec
jl
ret
xor
ds
fsubrl
lods
loope
jbe
jg
cmpsl
xor
xor
fcmovu
fs
jne
jp
add
or
lcall
aad
adcl
cmpsl
mov
sub
daa
fimull
cmpsl
push
in
dec
jnp
loopne
push
jo
std
shrb
lret
dec
adc
jo
mov
xchg
shlb
fdivrs
or
mov
loope
mov
sarb
pop
in
push
outsl
mov
in
mov
jle
mov
aas
inc
and
les
jg
into
push
pusha
js
dec
push
js
stos
sub
push
add
lock
insl
mov
les
push
mov
out
insl
js
add
xor
add
inc
push
test
add
jb
jbe
mov
movsl
inc
imulb
shll
mov
adc
es
push
dec
fwait
loope
jbe
aaa
shll
mov
jns
test
mov
lds
sbb
push
mov
pusha
mov
cmpsb
mov
outsb
adc
pusha
fildl
movsl
imul
pushaw
lret
mov
sub
repz
pop
imull
jmp
int3
int
test
repnz
shlb
xchg
inc
mov
add
fsubr
xchg
push
and
lret
mov
sbb
push
enter
test
test
mov
mov
mov
cmp
xchg
scas
xorb
ljmp
out
stc
mov
sahf
popf
es
jo
xchg
push
and
into
pop
cmp
test
cmp
stos
cmpsb
cmc
mov
movb
and
or
movl
cmp
addr16
pop
fistpll
and
mov
push
repz
mov
pop
in
inc
sbb
push
fistl
in
xor
adc
negb
out
fwait
mov
into
and
sahf
sub
fmuls
dec
iret
add
popa
ds
lret
mull
subb
mov
movsl
out
scas
fstl
aad
add
mov
outsb
xor
jmp
fsubrs
ja
loop
lret
out
pop
dec
out
pop
fdivs
lea
push
cs
sti
daa
loopne
mov
inc
pop
fstl
pop
jp
sarb
mov
dec
adc
cmp
xchg
mov
in
cwtl
push
repz
lret
cmp
imul
out
int3
movsb
jecxz
mov
mov
shlb
mov
mov
idivb
pop
es
mov
xor
mov
cmp
loopne
adc
dec
sahf
arpl
xchg
cmp
or
repz
fidivl
lds
cmp
push
jle
sbb
mov
scas
xchg
ss
arpl
addb
cld
mov
nop
ljmp
outsl
mov
inc
jbe
xor
pusha
jbe,pt
mov
lock
aad
dec
mov
cmpb
mov
testl
inc
sahf
dec
scas
aaa
adc
ror
xchg
lcall
in
ret
and
int
mov
jecxz
mov
add
mov
repz
fs
mov
test
jmp
stos
loope
daa
xor
sbb
loop
sbb
xchg
or
adc
mov
into
insb
mov
popf
sarl
add
push
xlat
hlt
or
nop
inc
mov
ds
repnz
stos
bsr
mov
xlat
fld
loope
push
jp
shr
jbe
fucomi
dec
or
adc
stc
ret
lods
mov
xchg
sahf
jge
cli
xchg
mov
mov
int
fwait
inc
push
adc
out
je
ret
mov
cmpsl
and
fisttpl
pop
mov
sbb
push
out
in
std
or
fidivs
daa
mov
lret
js
addb
sbbb
out
xchg
fdivrs
cmp
fiaddl
mov
in
js
popa
xlat
sbb
imul
mov
fstl
cld
outsb
mov
idivb
add
rcll
adc
adc
imul
enter
jle
mov
sub
push
cmp
cmp
xor
clc
push
lret
add
mov
inc
or
aaa
stos
leave
daa
scas
in
loop
int
lock
roll
sbb
push
fildll
ds
cwtl
adc
imul
daa
push
adc
dec
data16
cli
test
into
xchg
mov
rcll
lcall
sub
popa
out
mov
cmp
mov
cmpl
fcomi
or
out
push
jecxz
pop
xchg
adc
ja
mov
dec
enter
mov
ret
iret
push
pushf
mov
insl
xchg
into
jmp
pop
ljmp
mull
adc
rcl
push
adc
pop
shlb
push
and
fmul
sub
jecxz
sbb
shl
cmp
insl
idivl
pushf
ja
mov
adc
dec
xchg
loopne
stos
aad
cmp
in
mov
mov
jo
add
or
inc
fimuls
push
adc
es
xchg
cmp
mov
in
bound
mov
out
fxch
inc
into
push
mov
adc
out
loope
out
mov
adc
loopne
mov
mov
ja
pusha
mulb
out
and
xchg
mov
loop
sbb
fnsave
push
add
mov
sub
leave
loope
xchg
xchg
or
inc
or
lret
add
jbe
sbb
lret
int3
add
sub
aad
xor
rclb
xorb
or
dec
repz
sub
sbb
sub
mov
mov
lds
mov
mov
cmp
inc
shrb
hlt
cmp
movl
xor
ja
pop
negb
notb
push
sarb
sbb
sbb
shlb
mov
call
or
adc
add
mov
sbb
loopne
mov
add
xchg
mov
lret
loopne
push
pop
ja
xchg
les
fsts
pop
lock
dec
les
out
aam
xchg
pop
mov
push
in
jmp
xor
aas
idivb
add
jns
mov
xchg
std
test
sar
xor
sarl
push
mov
rclb
fdivl
add
mov
sbb
pop
adc
aas
movl
in
enter
jne
push
ss
sbb
scas
rcll
pop
add
mov
lods
repnz
fists
stc
and
adc
jae
jbe
push
mov
cld
mov
enter
in
sub
jl
enter
xlat
mov
in
jecxz
in
push
sub
cmp
jge
jnp
aaa
ret
mov
cli
push
int3
dec
sarb
mov
sub
fcmove
or
mov
mov
push
scas
xlat
imul
pusha
outsb
jbe
aad
adc
xorb
xchg
repnz
mov
in
cltd
mov
jno
xor
push
inc
ljmp
roll
xchg
inc
addr16
jnp
ret
cs
mov
jg
lock
jp
fdivs
mov
fisubl
mov
jbe
sarl
push
pop
pushf
push
mov
cli
aaa
jo
and
into
mov
fsubrs
mov
cltd
ss
mov
or
jae
testl
mov
shr
jecxz
jno
stos
mov
push
negl
movsl
add
icebp
imul
adc
xchg
es
enter
pushf
ja
lock
jmp
out
push
mov
into
and
mov
dec
std
push
rol
and
mov
push
or
push
dec
ror
adc
testb
add
shlb
inc
xor
call
cmp
push
in
pop
in
lds
int3
or
or
sub
xor
fwait
and
inc
lret
mov
movl
loopne
out
cmp
call
fisttpll
lret
mov
push
mov
mov
mov
mov
call
mov
loop
push
xchg
push
shufps
pop
ficoml
push
inc
cs
fmuls
mov
xor
mov
rol
xor
pushf
push
mov
jle
inc
mov
in
mov
push
int
sbb
js
out
xor
cmpsb
adc
sub
push
lret
jl
nop
push
jp
addb
jle
xchg
push
pop
out
test
ror
scas
iret
push
sub
xchg
jg
and
sbb
xchg
dec
jo
jbe
and
ds
inc
enter
pushl
pop
sub
arpl
and
movsb
inc
cli
adc
scas
ret
out
ja
cmp
jmp
js
xor
mov
push
mov
mov
mov
out
iret
xor
push
xlat
shll
adc
int
xchg
ds
sti
in
cmp
cld
mov
lcall
pop
sbb
fsubs
cmc
in
out
mov
dec
sbb
push
dec
push
cmp
mov
fwait
mov
daa
mov
mov
xor
inc
idivb
mov
push
ret
and
add
mov
mov
int
cmp
mov
sbb
lds
mov
xchg
jecxz
scas
xchg
lahf
add
fnsave
ret
mov
lcall
cmp
repnz
in
sub
adc
fcomps
mov
lock
push
stos
inc
popa
mov
mov
cmp
hlt
mov
jae
xchg
pop
adc
outsb
push
jbe
or
mov
add
mov
pop
idiv
add
jno
jp
push
pop
mov
ja
sarb
ds
ret
loopne
bound
js
add
scas
add
rcll
fdivrs
adc
int3
inc
add
pop
jbe
ljmp
cltd
xchg
mov
mov
fs
es
outsb
ret
jl
adc
scas
push
mov
mulb
mov
cmp
and
jb
jb
shl
sti
adc
std
mov
leave
push
jp
mov
icebp
add
xor
les
inc
in
shrb
xchg
jge
addr16
mov
lds
mov
mov
mov
mov
cmp
cmp
scas
rcrb
out
roll
cli
sbb
stos
testl
clc
andb
pop
pcmpeqd
mov
xchg
sar
dec
and
lcall
lcall
dec
movsl
enter
icebp
lcall
fisubrs
imul
sahf
jb
out
xchg
cmp
xlat
ss
mov
pop
add
and
sbb
lock
jmp
repnz
mov
mov
cmp
iret
lret
loope
xchg
in
dec
push
lcall
inc
mov
mov
mov
fsub
test
xchg
xor
ror
iret
mov
or
pop
test
gs
dec
int
rclb
repnz
sbb
mov
mov
and
out
xchg
ret
pop
cld
push
sbb
xchg
popa
jecxz
or
mov
mov
xor
pop
add
test
jl
jmp
mov
nop
cmp
push
cmpl
mov
loope
loop
cwtl
push
inc
inc
jae
mov
adc
lret
stc
in
les
cmpsb
adc
ret
mov
sti
leave
in
inc
scas
bnd
sub
stos
mov
ret
ret
aam
lods
aas
mov
loopne
stos
dec
int3
mov
or
push
mov
xor
or
rol
mov
push
mov
in
in
rol
adc
dec
fistps
enter
mov
loope
aam
loop
clc
lcall
in
cmc
sbb
mov
cwtl
mov
iret
xor
jb
adc
lods
fmuls
mov
repz
sbb
mov
push
mov
rcll
cmpsl
fsubrs
fidivl
lret
ret
arpl
scas
mov
daa
dec
sbb
jl
mov
adc
out
test
add
icebp
mov
mov
push
mov
mov
shll
mov
mov
xchg
cmp
sarl
adc
mov
enterw
lret
jmp
cli
jl
mov
cmpsb
out
adc
nop
jb
mov
mov
aaa
aad
pushf
push
jecxz
mov
pushf
shl
cli
xchg
cmpl
outsb
adc
ret
loopne
ds
mov
cmp
loope
add
dec
ljmp
cmp
imul
sarl
mov
imul
pop
mov
cwtl
add
jbe
or
add
testl
xor
add
aas
in
mov
leave
lahf
xor
mov
push
ror
mov
xchg
es
mov
imul
test
mov
fwait
jae
sub
push
jecxz
push
testl
add
mov
add
imulb
cs
shl
or
mov
push
inc
adc
cwtl
adc
ror
fnstcw
add
mov
mov
push
shlb
jno
jecxz
lock
out
into
adc
mov
jnp
add
jge
xchg
loopne
mov
neg
das
outsl
test
into
out
loopne
rcrl
mov
inc
cli
dec
fstpl
xor
push
ret
dec
adc
dec
xchg
lcall
cli
cmp
imul
loop
decb
xor
iret
ret
xor
pushaw
add
xchg
inc
movsb
mov
or
push
xchg
push
scas
icebp
imul
daa
testl
les
in
mov
das
jle
fsubs
cli
xlat
inc
or
cli
lock
loop
lret
sub
pop
fsubs
mov
popa
cmpsl
add
push
mov
add
mov
jns
push
icebp
aas
fisttpl
lock
scas
push
mov
test
bound
into
data16
fs
add
dec
add
inc
sbb
jbe
lods
push
push
mov
inc
jecxz,pn
xchg
ss
mov
sbb
aaa
ret
ret
jnp
ljmp
pusha
inc
aas
or
jns
xchg
or
aam
push
out
pop
sbb
sbb
ficompl
into
mov
int3
inc
and
adc
gs
fists
jecxz
push
cmp
push
scas
into
jg
mov
pop
or
out
sbb
fnstsw
in
scas
loopne
sbb
xor
inc
outsb
out
int3
inc
pop
mov
fsubp
repnz
call
adc
xor
pop
loop
add
jle
insb
pop
cs
and
sub
leave
aas
mov
hlt
xchg
out
add
and
in
ja
and
jecxz
jg
adc
int3
cli
lahf
or
mov
sbb
push
js
cli
sub
shrl
push
scas
dec
inc
out
lods
mov
repnz
in
fs
iret
and
fnsave
loopne
popf
lea
dec
mov
or
mov
fsubs
daa
or
push
out
ds
leave
pop
out
xchg
gs
xor
mov
mov
dec
ficoml
xchg
into
add
jo
dec
leave
shll
cli
cld
mov
neg
mov
ds
push
mov
call
test
inc
icebp
jbe
cli
lret
push
cmpsb
adc
repnz
cmp
shlb
fcomp
mov
lcall
sbb
imul
shl
cmp
in
repnz
call
int
push
push
loop
pop
jne
sbb
mov
mov
mov
stos
inc
popf
add
ss
dec
pushf
lcall
aad
leave
enter
push
in
push
fdivl
push
push
adc
outsb
mov
shlb
mov
in
mov
into
or
sub
mov
test
mov
in
dec
mov
cmc
not
loop
or
in
out
adc
push
cmp
xchg
nop
or
ret
jb
mov
jo
fisubs
mov
xchg
fnsave
push
sub
push
cli
xor
pop
mov
or
add
in
mov
pop
into
mov
add
pop
mov
cmp
jp
mov
pop
adc
sti
xor
shl
in
sbb
loop
xchg
lcall
das
test
into
mov
leave
push
push
ret
push
scas
lock
insl
das
push
aaa
pop
pop
pop
push
test
inc
pusha
mov
fcoml
ret
stos
roll
ffree
scas
cmpsb
loopne
int
shll
bound
xor
add
mov
movl
push
scas
push
pop
push
mov
mov
mov
xchg
mov
ret
in
cmp
sar
lret
inc
rcl
not
mov
rcrb
iret
idivb
ljmp
pop
das
add
fadd
push
add
add
xlat
out
or
icebp
mov
test
leave
data16
dec
dec
outsl
push
scas
mov
in
dec
mov
js
dec
subb
fcomp
mov
or
pop
jl
pushf
mov
dec
inc
fidivrs
int
cmp
pop
push
int
sysexit
gs
inc
sbb
push
ret
inc
cmp
xchg
rorl
push
mov
leave
punpcklwd
sub
cmp
mov
sbb
fdivrs
fsubp
movsl
ljmp
cs
sarb
pusha
hlt
shrl
movl
xchg
push
pusha
out
jp
push
jmp
outsb
es
dec
cmp
cltd
cmp
pushf
jmp
mov
pop
jge
jp
sbb
cmp
sbb
loope
in
fldl
and
xlat
out
lret
enter
xor
push
xlat
mov
push
out
xchg
loopne
outsl
rep
fcoml
enter
stos
fisubs
dec
insl
or
or
jbe
sbb
xor
dec
mov
aas
sbb
add
out
inc
lret
into
idivl
ds
pop
cli
enter
mov
xor
mov
sbb
ja
data16
inc
cmpsb
xorb
mov
mov
push
mov
shlb
adc
sub
mov
and
adc
xchg
sub
sti
mov
out
cmp
into
hlt
inc
xor
shlb
fidivrl
xor
mov
dec
daa
bound
jbe
cmp
clc
dec
mov
mov
sub
jle
pop
ss
sahf
xor
ljmp
sub
mov
jns
lds
jb
stc
cmp
notb
lds
test
jbe
mov
cmpsl
add
or
inc
xor
cmpsb
inc
xlat
dec
into
mov
enter
jmp
scas
mov
mov
pop
scas
mov
stc
pop
aad
dec
or
adc
cmp
fnclex
outsb
cmp
jl
mov
xlat
data16
xchg
sti
std
gs
xlat
adc
sti
jbe
lret
lcall
insb
adc
pusha
add
cmp
ret
cmpsb
and
adc
or
movsl
gs
js
arpl
in
enter
mov
fcmovbe
enter
xor
clc
mov
mov
jb
pop
jnp
inc
pop
mov
jo
fs
fidivrl
or
mov
loop
fwait
inc
lea
mov
cmp
pop
mov
add
mov
out
inc
nop
or
movsl
jg
and
hlt
adc
mov
out
lret
mov
sbb
sahf
cwtl
mov
bound
loop
jno
mov
aad
adc
ss
push
test
sub
or
ss
outsb
popl
call
sbb
inc
out
sarb
sbb
pop
out
cmpsl
push
xor
sub
pusha
lods
mov
add
cltd
movsb
or
mov
ret
cmpsl
fdivp
ss
imul
jno
int
js
jge,pn
out
xor
mov
lret
outsb
shl
aam
inc
mov
mov
sarb
push
cmp
jmp
add
mov
sub
inc
mov
in
fstps
sbb
push
push
ds
popa
into
push
lret
dec
shlb
out
mov
xor
aaa
lds
fiadds
lock
add
aad
mov
pop
xor
fstpt
sub
loop
dec
pop
pusha
sub
push
inc
sbb
jp
xor
ljmp
xchg
out
cli
imul
pop
mov
inc
jae
js
xchg
or
imul
in
out
mov
mov
add
icebp
mov
and
testb
inc
sbb
mov
mov
or
rorb
cmpsb
mov
fcmove
fsubp
insl
xchg
ss
pop
dec
lods
cs
aad
sbb
cmpsb
mov
je
call
sti
jb
ss
sbb
lret
cmpsb
cli
aam
ror
adc
pop
testl
cld
and
push
sub
jne
ds
cmp
push
hlt
cmp
jnp
adc
push
mov
jne
imulb
mov
cmp
enter
sub
js
out
fldl
stos
sahf
rcll
out
sub
in
sbb
testb
sbb
inc
jmp
adc
add
cmp
add
jo
cli
es
cmpb
das
outsb
call
add
movb
sarb
mov
push
pop
punpckhdq
outsb
loopne
ss
lret
in
add
ja
nop
mov
fnstsw
xlat
jl
fimull
imulb
ror
sbb
pop
adc
lock
dec
xchg
scas
inc
adc
into
mov
loop
xchg
ja
shll
iret
jecxz
stc
cmpsb
stos
mov
imul
push
mov
scas
loop
add
ljmp
and
lods
cld
call
cmp
xor
push
inc
ss
pop
or
and
dec
stos
mov
test
mov
shrb
enter
jne
sbbb
sub
adc
xchg
pop
push
mov
js
sub
out
xor
cmpsl
cmpsb
ss
mov
mov
rcr
stos
adcb
outsl
dec
sbbb
push
inc
sbb
cmp
or
les
jge
push
aaa
shll
fistpl
icebp
push
pop
jo
mov
imul
sub
incb
inc
clc
adc
push
outsl
nop
adc
push
adcl
jns
stos
popf
cld
int3
mov
into
ds
loop
mov
dec
mov
jns
sahf
or
mov
shll
pushf
out
loope
imul
div
cmp
in
jmp
testb
sbb
rcll
je
mov
sub
xchg
cli
cmp
push
cs
jne
cmpsb
notb
into
dec
and
xchg
sbb
lds
loope
jae
shl
push
and
rolb
or
sahf
cmp
les
hlt
jno
lcall
cmp
leave
push
sub
add
insb
mov
mov
cld
jo
push
in
loopne
dec
push
out
fadds
or
xor
dec
lret
or
cs
cmc
out
addr16
inc
outsb
add
out
sbb
lock
inc
cmpsb
add
add
push
add
in
jg
sarl
sbb
and
jbe
jmp
je
pushl
sub
sub
or
inc
mov
xor
les
js
xor
sbb
xchg
notb
outsl
sub
xchg
pop
or
insb
jo
mov
push
cmp
and
fcmovbe
shlb
mov
mov
jo
mov
shlb
out
jae
insl
push
jbe
in
pop
ja
push
into
inc
ds
sbb
adc
imul
mov
pop
ja
andb
push
cwtl
mov
push
adc
out
inc
scas
cli
mov
dec
stos
adc
mov
lods
leave
adc
pop
xchg
lea
sarb
les
jg
loopne
dec
adc
cltd
ds
ss
xor
cmp
inc
cmpsl
sahf
xor
mov
pop
lock
inc
std
out
xchg
mov
add
repnz
in
les
push
mov
sub
sbb
lds
and
mov
in
xchg
into
fiaddl
jecxz
scas
xor
loop
testb
jns
call
lock
stos
xlat
add
xchg
mov
xor
int3
dec
dec
mov
fidivrs
push
dec
rolb
or
aas
rolb
ss
xor
cs
sub
aas
sti
je
add
and
data16
shll
jle
ja
and
enter
push
out
and
out
fisubrs
push
cli
lea
jg
js
aam
mov
iret
fcmove
mov
push
fstpt
jo
movb
mov
push
pop
div
into
mov
sahf
movsl
mov
cmp
stos
cli
mov
icebp
outsl
cs
lea
sbb
ret
sub
arpl
adc
sbb
xor
push
out
ss
or
fimull
lcall
lret
ljmp
out
sbb
adc
cmpsb
loopne
ds
cld
mov
mov
mov
add
imul
sti
ds
enter
jno
jbe
cmp
dec
aam
inc
push
fsub
pop
mov
popa
push
roll
dec
daa
mov
pop
imul
ret
repz
mov
inc
addb
lcall
out
test
mov
sub
or
cmp
enter
shll
sti
ljmp
fs
dec
and
lret
outsb
xchg
jbe
stos
inc
stos
jae
xor
sahf
mov
test
out
adc
std
leave
int3
jnp
mov
jbe
movsb
subb
ja
xchg
cmp
cs
xchg
lea
dec
clc
inc
xchg
push
nop
idivb
push
movsl
cmpl
ja
pop
pop
and
outsb
cli
ss
aam
out
aaa
iret
mov
lock
and
add
out
mov
cld
enter
inc
roll
test
fldcw
repnz
enter
jo
pop
leave
mov
sbb
cmp
xchg
cmp
inc
pop
mov
fimull
repnz
fcompl
out
and
cmp
movsb
ss
adc
adc
data16
lret
xor
push
mov
xchg
lahf
notl
mov
push
xchg
cmpsb
jmp
mov
pusha
mov
xor
dec
scas
jle
insl
rcr
pop
xchg
inc
and
faddl
mov
sub
enter
and
daa
adc
scas
loop
repz
jle
push
pusha
push
and
or
inc
inc
addr16
rorl
test
loope
je
fdivp
jbe
dec
imulb
cmpsb
stos
inc
mov
movsl
xor
ret
mov
sub
xchg
xchg
shlb
sarl
push
data16
gs
xor
mov
fs
andl
cli
pop
cmp
or
int
inc
mov
sbb
xchg
stos
push
mov
push
add
cmpsl
inc
ss
jae
mov
jmp
mov
push
jbe
jl
cmp
mov
cs
rcr
insl
cs
out
mov
negb
in
add
dec
mov
xchg
jbe
adc
add
jecxz
movsb
mov
cltd
jbe
mov
leave
cmp
into
stos
pushf
out
mov
dec
fs
cli
loop
out
xchg
ss
xor
les
jl
and
or
cmpsb
xor
sbb
and
pop
adc
shlb
xor
xchg
ret
mov
dec
sbbl
or
mov
clc
out
and
je
jge
mov
aad
pop
loope
mov
in
ret
in
jo
jbe
xor
ret
test
sbb
pop
adc
sbb
and
jmp
in
iret
mov
mulb
mov
sub
xchg
mov
jns
pop
sub
xor
out
je
mov
ss
adc
pop
add
cmp
or
push
ja
lahf
fsubrl
inc
out
mov
xchg
daa
iret
jmp
int3
mov
sbb
rcrb
fldcw
sarl
adc
push
es
cmp
ret
jp
inc
xor
out
rcrb
mov
mov
sar
sbb
scas
mov
mov
lret
xor
repnz
loop
dec
adc
loop
sahf
outsl
or
jbe
sub
sub
dec
lock
lds
outsl
and
inc
mov
mov
fnstsw
push
pop
ret
fs
xchg
sbb
imul
mov
xchg
ds
cmp
lds
jb
outsl
int3
mov
mov
mov
mov
pop
mov
inc
ja
jecxz
mov
stos
add
inc
movsl
jnp
ds
mov
fwait
fnstcw
xchg
inc
mov
cli
lahf
push
mov
ljmp
es
xchg
iret
xor
fisttps
add
xor
fldt
lea
adc
jo
out
in
mov
dec
adc
mov
fcomi
in
sub
or
imul
dec
ret
fbld
mov
faddl
jmp
daa
jl
cmp
shl
shlb
mov
mov
mov
mov
hlt
dec
out
sbb
xor
and
cld
inc
mov
jns
cmp
dec
mov
inc
and
cmpsb
jo
call
mov
or
scas
fwait
sub
push
mov
jo
jbe
mov
adc
mov
sub
push
jg
mov
mov
or
cmpsb
adc
ds
ror
push
mov
lcall
mov
lret
xor
mov
mov
or
loope
cs
and
cld
xor
adc
cs
mov
xor
mov
fcomps
jbe
daa
lods
inc
sbb
pop
xor
mov
xchg
jp
add
sub
in
lea
shlb
popl
loope
mov
imul
aaa
shlb
dec
and
push
leave
adc
jae
push
pushf
notb
mov
mov
ss
fmuls
jb
out
cli
or
out
mov
scas
pop
movl
jno
dec
fsubl
cmc
iret
xor
pop
dec
jo
or
enter
pop
jb
arpl
mov
daa
sub
pushf
push
cmpb
mov
in
negb
fiadds
jb
xchg
or
mov
xchg
jl
shl
push
pop
xor
jle
mov
pusha
shr
cwtl
fiaddl
lock
ds
scas
lds
and
imulb
xchg
pop
sub
sti
adc
push
in
jp
into
adc
subb
enter
out
xlat
adc
data16
scas
cmp
and
or
cmpb
shll
lret
cmpl
pushf
int
mov
jmp
es
jb
iret
xor
push
inc
jnp
push
add
jecxz
mov
pop
outsb
ss
adc
or
jne
imulb
pop
sbb
lock
jb
pop
mov
iret
pop
jne
push
enter
add
mov
pop
xor
jb
dec
jne
repnz
cs
adc
movsb
call
bnd
xlat
mov
inc
add
pusha
push
mov
fs
mov
in
xchg
loop
pop
dec
into
popa
inc
mov
rclb
loopne
test
mov
adc
lret
int3
push
xor
or
repz
or
aad
lock
sahf
jp
fisttpl
orb
ss
sbb
dec
push
dec
fwait
imul
xor
movsb
adc
pop
imul
mov
and
bound
fs
es
mov
xchg
outsl
cmp
push
mov
pop
out
pop
pushf
xor
mov
fbstp
and
sbbb
adc
push
push
jo
mov
ds
leave
pop
or
js
mov
adc
fiadds
mov
mov
xchg
push
ds
testb
ret
stos
jnp
xchg
fisubl
into
mov
mov
bnd
enter
ja
inc
inc
and
and
fstl
xchg
test
jb
cmp
adc
sbbl
xchg
inc
fs
ljmp
dec
jb
out
out
fimuls
mov
negl
movsl
fnstsw
adc
fst
jp
adc
sub
fiadds
lods
sbb
mov
out
out
inc
pop
push
mov
bound
out
int3
enter
push
fldl
xchg
je
hlt
cs
xchg
rcl
xlat
push
xchg
aas
cmpsb
lcall
arpl
lea
dec
xchg
outsb
int
mov
dec
enter
jl
pop
mov
xor
push
pusha
loope
rorb
test
xchg
popf
rorb
push
popf
leave
pop
xchg
imul
arpl
add
xchg
mov
scas
and
mov
jecxz
inc
lods
lret
out
push
insb
sbb
mov
in
popa
cmp
mov
imul
cmp
adc
neg
sbb
pop
pop
sub
fcmove
push
out
push
or
push
std
loop
xlat
div
pop
cmc
and
cltd
inc
mov
mov
push
xchg
inc
rcr
sbb
mov
sti
les
jo
ss
and
xor
cli
std
or
mov
iret
pop
jns
enter
movsb
and
push
adc
jp
aad
mov
push
lret
repz
xchg
mov
dec
sub
mov
inc
jle
roll
inc
dec
jecxz
dec
xor
push
inc
repnz
in
mov
add
cmpsb
mov
and
mov
adc
lea
pop
xlat
enter
add
gs
ret
int
jnp
aaa
bound
ss
dec
loop
notb
push
cld
inc
mov
jno
add
div
lcall
out
cltd
out
xlat
mov
sahf
inc
out
das
in
jge
xor
jp
mov
in
xor
mov
sub
cmp
mulb
stc
add
push
in
leave
xchg
sbb
mov
xorl
inc
pop
push
lahf
add
lods
js
adc
mov
outsb
in
adc
enter
decb
push
or
iret
and
out
mov
jns
fisubl
add
mov
mov
xor
inc
int3
loopne
push
cs
leave
lea
xor
add
mov
out
mov
sarb
xor
or
xchg
or
cwtl
and
bound
mov
mov
or
lahf
lcall
xor
adc
stc
push
shr
mov
dec
das
cmpsb
cld
sahf
cmp
xchg
inc
shlb
int3
sbb
cli
je
jp
iret
xchg
or
pop
ljmp
stos
int3
sub
dec
outsl
add
fbld
ffree
pop
dec
int
mov
adc
sbb
test
cmp
aam
repz
ficoms
idivb
loope
ss
sub
adc
inc
mov
fwait
pushf
sbb
into
mov
aad
ja
pop
dec
scas
mov
mov
xchg
mov
inc
xor
add
jns
inc
lods
inc
fadds
cs
stos
je
sahf
add
adc
into
aaa
mov
loope
mov
cs
sbb
push
mov
cwtl
rorb
cwtl
mov
mov
pop
decb
sarb
add
sub
fdiv
lret
out
push
unpckhps
pop
push
mov
xorb
in
push
fisubl
cltd
stos
stos
stc
out
cmpsl
add
sahf
rcrb
leave
popa
lods
pop
xchg
sub
or
xchg
lea
ret
jae
punpcklbw
push
cltd
iret
in
xchg
adc
cmpsl
lret
jb
push
xor
xor
icebp
cltd
jp
mov
push
ds
sarb
xchg
bound
enter
loope
push
mov
cltd
fidivl
sub
lds
mov
scas
rolb
cwtl
ja
pop
mov
out
rcrb
test
cs
inc
jmp
shrb
mov
xchg
pop
outsb
push
jp
cld
pusha
mov
inc
fisttpl
and
into
mov
pop
pop
int3
mov
fadds
test
ficompl
inc
notb
mov
jecxz
dec
sub
leave
movsl
mov
xor
mov
bound
pop
call
sti
adc
ss
aaa
movsb
int3
sbb
mov
iret
ds
loope
push
add
mov
xchg
push
xchg
loope
jle
hlt
add
leave
push
shlb
or
out
loop
push
lcall
push
sub
push
pushw
test
cmp
repz
mov
jle
mov
sub
xor
sbb
nop
stos
jp
sbb
or
cli
mov
stos
ror
and
pop
cmp
mov
iret
loope
fs
mov
lea
jge
scas
dec
jp
or
inc
jle
fimuls
mov
adc
jg
or
rcll
bound
xor
cs
aam
mov
dec
xchg
pop
mov
movsb
inc
cs
and
scas
xchg
ja
das
sarb
pop
pop
cmpsb
push
ja
loop
adc
test
subb
inc
ljmp
lret
lcall
mov
test
andl
repz
clc
std
xor
mov
movsl
mov
sub
mov
and
mov
adc
rorb
or
dec
xor
aas
movsl
inc
bound
mov
int
mov
test
es
mov
mov
cli
mov
and
mov
test
add
adc
sbb
mov
fsubrl
sub
ss
sar
lea
xchg
scas
dec
ss
mov
fisubrl
mov
loop
push
push
out
adc
push
push
jbe
outsb
ds
ret
xlat
dec
push
out
pop
mov
jecxz
adc
pusha
adc
jp
cld
pop
mov
je
ds
ret
cmpb
scas
mov
xor
push
mov
dec
mov
jno
lret
data16
sbb
jno
mov
pop
xor
pop
mov
or
neg
mov
dec
cmp
add
xlat
imul
xor
ss
loop
lahf
adc
aad
mov
cmpsl
aaa
mov
xor
mov
test
dec
lods
shll
add
inc
out
addb
dec
mov
cmpsl
dec
rcrb
jnp
mov
jle
inc
outsb
sbbl
or
cmp
xlat
pusha
int3
adc
pop
push
mov
mov
sbb
dec
mov
xchg
in
add
add
dec
ds
push
mov
lret
xor
push
mov
je
dec
enter
hlt
scas
cmpsl
out
fcomps
fnstsw
xchg
cmpsb
data16
pop
add
mov
lret
mov
jbe
decl
data16
jp
shll
in
outsl
repnz
scas
add
sub
ret
jl
cmp
daa
insb
jb
orl
stos
test
shl
in
cltd
add
stc
sub
loop
adc
pop
sbb
into
xchg
xchg
popa
sub
enter
mov
mov
push
mov
dec
inc
add
mov
pop
lock
imul
xor
mov
nop
insb
ret
hlt
in
jo
mov
jbe
js
cmc
fwait
mov
data16
sbb
jo
cmpsb
ret
enter
dec
mov
call
mov
dec
movsl
leave
mov
jle
pusha
data16
sbb
outsb
jb
movhps
ds
mov
cmpsl
sub
pop
outsl
mov
adc
loop
and
ret
idivl
mov
imul
out
shll
std
fidivrs
repnz
sub
lahf
out
add
dec
inc
cmp
into
cli
push
or
fstpt
movsl
mov
into
movb
push
jge
shll
mov
loope,pt
enter
mov
ret
bound
push
cs
aaa
fstl
imul
mov
jp
push
ja
add
loopne
test
int
push
ds
fstl
push
fstpl
add
xor
scas
sbb
pusha
adc
rcll
sub
js
adc
es
mov
sbb
push
push
add
jno
or
test
in
xor
mov
push
sbb
mov
lret
mov
push
pop
mov
mov
push
js
dec
aam
push
stc
add
js
mov
scas
negb
fiaddl
iret
movsl
sbb
cs
imul
sbb
aaa
jle
mov
stc
andl
aas
jecxz
xchg
adc
sub
daa
lods
iret
mov
push
jo
stc
fidivrs
mov
or
cwtl
sub
dec
les
xor
mov
mov
call
inc
mov
dec
je
in
mov
sahf
mov
push
test
into
sahf
xchg
ss
data16
push
dec
cs
add
mov
out
mov
push
mov
repz
jbe
bound
push
add
ret
inc
stos
in
add
pop
push
add
cmpsb
pusha
cmp
and
les
hlt
adcl
aaa
sub
ja
jp
pop
bound
push
or
push
imulb
pop
mov
scas
jae
push
adc
fsubr
dec
ficomps
jbe
test
repz
mov
xchg
cld
xor
dec
divb
adc
ds
ret
or
push
mov
add
fcmovbe
jbe
cmp
adc
icebp
and
lcall
dec
lds
loopne
idivb
xor
fcoms
or
les
fsub
mov
lahf
lds
adc
cld
test
xor
fsubs
mov
ret
pop
jg
fisttpl
jnp
mov
call
adc
lcall
loop
push
mov
std
movb
push
fcomi
fsub
push
jnp
imul
jne
into
rcr
dec
mov
shr
adc
movsb
imul
sub
js
and
les
or
repnz
sarl
sub
push
pushw
icebp
cltd
sahf
xor
dec
push
pusha
inc
inc
jle
js
cmp
arpl
xchg
aas
xchg
mov
dec
enter
outsb
push
fcmovnb
lock
cmp
adc
cli
ret
fidivrl
cmpsl
js
clc
lds
cmp
test
loope
mov
sub
mov
adc
mov
in
ljmp
out
mov
fidivl
jp
pop
jo
out
testl
lcall
mov
push
adc
dec
icebp
push
dec
gs
and
xor
pop
mov
hlt
mov
enter
cmp
lods
inc
push
mov
cmpsl
mov
cltd
ds
pop
and
aas
and
mov
cli
xchg
add
jbe
mov
dec
es
jb
aaa
aam
sbb
sti
and
lret
repz
dec
das
mov
ficomps
mov
xchg
xchg
push
add
xchg
dec
hlt
push
adc
scas
shl
mov
mov
cmp
mov
and
loope
enter
mov
pusha
adc
push
pop
jecxz
loope
add
test
scas
mov
ja
mov
and
ds
int3
cmpsb
inc
cli
out
adc
mov
mov
mov
int
mov
inc
in
pavgb
jle
repnz
inc
gs
push
decb
imul
fs
sti
leave
idivb
push
mov
out
inc
add
push
ja
fs
cmp
int3
mov
xchg
mov
lret
out
push
idiv
jae
mov
add
sahf
xchg
bound
mov
cli
sub
dec
inc
push
scas
mov
dec
cld
rorb
add
adc
xchg
stos
das
mov
out
lret
pop
xchg
testb
adc
enter
push
mov
out
daa
enter
mov
stc
pop
les
add
sub
sbb
pop
je
pop
xchg
push
mov
aas
aad
gs
xchg
rcl
mov
sbb
iret
xchg
cli
into
mov
movsb
shll
xchg
inc
pop
hlt
popa
add
mov
lret
cltd
mov
out
sar
add
ljmp
mov
add
into
mov
xor
into
dec
mov
das
mov
ror
jb
rorb
mov
pop
rorl
leave
jne
inc
mov
test
hlt
je
mov
adc
push
and
cld
jecxz
daa
push
shrb
add
add
mov
loope
stos
stos
push
mov
pop
stc
mov
dec
xlat
adc
push
jo
cmp
add
sbb
mov
pop
or
inc
and
jp
mov
test
mov
outsb
xor
fstl
out
js
pushf
jle
enter
mov
scas
fcomps
jge
out
mov
cs
push
mov
das
inc
aaa
mov
mov
pushf
bound
scas
mov
xor
in
cmp
imul
mov
ljmp
mov
int
movl
lcall
mov
jle
mov
leave
loopne
jge
imull
test
push
cmp
jne
mov
jns
cmp
push
mov
aam
lock
leave
push
xor
jno
jb
ja
bnd
ss
pop
inc
aas
jno
jne
mov
les
dec
mov
stos
ret
loopne
popf
mov
sub
call
shlb
sahf
mov
aad
mov
mov
out
or
or
xchg
aaa
das
mov
adc
fcmove
mov
sti
or
push
in
jmp
enter
clc
dec
adc
aaa
into
popa
loopne
popf
and
dec
testl
fidivrl
mov
shll
es
clc
scas
xchg
push
dec
popa
push
jo
filds
ret
call
and
xor
cmp
pop
aaa
repz
into
fsubrl
testl
lds
xor
int
lret
iret
inc
mov
data16
jp
loope
xchg
xchg
xor
movb
stos
fbstp
mov
pop
ds
lret
repz
and
imul
jle
test
test
push
pop
mov
je
mov
ret
int3
push
icebp
inc
mov
jbe
mov
lret
fsubs
mov
push
ja
shl
shrl
int
mov
outsb
dec
jbe
xor
adc
mov
lock
xor
dec
cld
mov
dec
inc
adc
lods
xchg
pop
adc
dec
and
mov
jle
je
scas
cmpsb
adc
cld
add
or
inc
divl
cmpsl
jns
xor
jecxz
loopne
inc
push
adc
nop
push
mov
and
dec
cmp
sarl
mov
aad
add
push
fdivr
mov
popa
or
test
cmp
leave
cmc
and
loopne
cmp
fs
pop
xlat
notl
xor
xchg
ror
testb
sub
cli
xor
and
sub
ja
orl
sidtl
roll
popf
lods
out
push
fsubrl
data16
or
adc
dec
stos
mov
mov
lods
inc
inc
jno
int3
sarl
popf
push
lcall
nop
dec
sub
enter
sub
lods
ljmp
enter
leave
sbbb
test
sub
sub
in
fs
xchg
pop
push
leave
mov
addb
adc
cmp
les
mov
xor
in
popf
ficoml
sub
or
push
cli
idivl
shll
xor
mov
mul
out
jmp
cmp
or
nop
mov
mov
cmp
mov
mov
add
lds
add
es
adc
mov
and
mov
nop
ret
out
ss
int3
in
jo
cli
pop
rol
and
add
andb
stos
add
fcoms
or
mov
cs
lahf
leave
mov
outsl
adcb
xchg
repz
sar
adc
mov
cmp
mov
add
shl
push
adc
data16
cld
scas
mov
xor
scas
sbb
orb
ljmp
fistpl
imul
mov
data16
mov
cmp
pop
in
adc
in
jne
xorb
pusha
out
ds
mov
adc
mov
xchg
cli
push
lcall
pop
nop
stos
mov
add
ficompl
in
xchg
out
sbb
gs
aas
jbe
and
dec
cmp
push
rol
or
jle
or
test
mov
rcr
fidivrs
xor
mov
mov
cs
dec
into
or
int3
mov
out
xlat
pop
mov
mov
push
jb
gs
xlat
mov
out
push
iret
popf
inc
lds
jbe
jle
or
cmpsl
hlt
or
push
sbb
inc
lods
loope
inc
ss
pop
xor
mov
mov
add
ret
ds
inc
mov
je
loop
xor
ja
xchg
ss
into
jnp
daa
shrb
sbb
scas
mov
or
insl
cwtl
mov
test
mov
jbe
adc
push
add
pop
mov
divl
sbb
sub
aaa
faddl
jp
mov
into
adc
mov
shlb
or
cmpsb
mov
mov
cmp
imul
pop
into
cs
ja
mov
mov
sbb
jp
jne
outsb
cmp
cmp
sub
adcb
jecxz
loope
into
mov
add
sbb
scas
mov
xlat
sub
fdivr
ror
xchg
sub
and
push
jns
pop
or
sub
mov
pop
xor
and
jmp
or
jbe
add
int
jo
xchg
add
int3
push
icebp
mov
ret
out
in
pushf
mov
dec
sti
loop
data16
lcall
fwait
adcb
ds
push
adc
dec
inc
das
imul
hlt
test
mov
ucomiss
cli
les
hlt
add
je
fidivs
repnz
mov
adc
push
outsb
mov
mov
pop
lea
inc
repnz
adc
push
dec
fidivl
mov
test
mov
ss
js
mov
imul
cmpsl
mov
mov
ds
xlat
pop
mov
mov
push
push
sub
aam
mov
int3
sarl
outsb
mov
shrb
popa
mov
in
jle
xor
and
addr16
negl
ds
ror
iret
adc
aaa
mov
out
ffree
fwait
jne
and
push
aam
idivb
inc
add
addr16
fstps
add
cmpsb
ret
adc
in
sarb
cli
push
stos
pushf
loop
ret
pop
dec
movb
lods
cli
pop
mov
inc
in
xor
push
scas
inc
add
pop
push
mov
xor
out
leave
inc
mov
pop
out
mov
ret
jae
sti
mov
mov
aad
mov
daa
jae
inc
ss
sub
and
insl
mov
js
mov
call
mov
add
mov
xor
loop
outsb
push
mov
mov
xchg
cli
fnsave
jle
push
inc
fcmove
mov
cwtl
mov
sbb
cli
subl
mov
mov
mov
test
add
sahf
xchg
shl
clc
cs
mov
and
pop
sub
push
cs
mov
sarb
aaa
xchg
xchg
push
jae
xorb
fiadds
loop
mov
into
dec
iret
inc
int
pop
rol
sbb
out
push
cli
mov
jno
adc
lret
mul
scas
shlb
cmp
sbb
inc
pop
enter
movsl
test
mov
mov
mov
lret
rcll
lret
xchg
enter
js
adc
pop
push
adc
int3
adc
mov
scas
data16
sub
sub
add
out
ljmp
lcall
cs
cwtl
mov
fisubs
int3
cmp
test
shrb
dec
into
aaa
inc
or
adc
inc
dec
mov
in
js
not
xor
jle
cli
cltd
push
mov
repnz
jae
outsb
ss
pop
shlb
stos
in
cmp
js
inc
out
mov
ret
cli
pop
mov
enter
movb
ret
cmpl
ds
fadd
pop
pop
jg
push
icebp
jp
mov
xchg
pop
cli
lret
mov
xor
push
movsb
add
mov
jnp
jo
insl
adc
js
ret
sub
dec
lret
jecxz
jnp
xchg
fldt
and
add
test
push
mov
inc
cmpsb
mov
pop
or
dec
scas
push
add
cmp
dec
pop
xor
fcoms
mov
es
or
mov
mull
inc
sub
lds
loop
out
je
and
mov
movsl
xchg
lret
mov
xchg
enter
mov
pop
sub
cs
ss
mov
cmpsb
lock
aas
ljmp
mov
jbe
pop
jmp
shlb
repnz
stc
icebp
and
inc
in
push
push
mov
jl
dec
dec
fimull
es
dec
xchg
loop
divb
jnp
pop
cmp
test
push
gs
mov
xchg
mov
push
mov
clc
movsl
xchg
nop
sub
mov
pusha
push
mov
fst
sub
mov
loop
dec
dec
rolb
jbe
lods
push
mov
fisubrl
mov
ret
mov
in
xchg
sbb
movsb
xorb
fdivs
dec
mov
mov
loope
jl
adc
push
mov
fcomps
mov
fdivs
push
negb
fists
mov
shl
push
xor
loop
in
cmp
inc
sub
push
push
stos
ds
fldt
or
ss
nop
daa
adc
jecxz
lcall
fcmove
das
sbb
into
fmull
fdivl
adc
or
call
into
xor
xchg
jnp
lretw
pop
lret
mov
mov
adc
shl
repnz
out
cld
hlt
pushf
int
mov
call
repz
fucom
in
out
mov
jle
xchg
xor
mov
cmp
test
mov
inc
ss
mov
adc
cld
cmpsb
mov
scas
mov
cld
sub
lahf
mov
mov
outsb
jbe
stc
scas
pop
in
mov
std
or
cli
lret
mov
jge
adc
add
les
cli
pusha
out
mov
dec
cli
add
push
mov
dec
push
cmpsb
xchg
iret
stc
pop
mov
mov
ret
mov
stos
out
iret
mov
fisttpl
or
lret
push
and
pushw
shr
xchg
lods
call
mov
int
daa
ficoml
les
mov
inc
cmp
jo
ret
jl
mov
imul
out
cmp
sbb
mov
push
jbe
push
idivl
in
into
inc
jp
mov
sub
cli
xor
repz
lds
fbstp
cmp
fstpl
sahf
or
outsb
jbe
test
inc
push
test
fistpll
xor
sub
ds
mov
out
xchg
fidivrs
das
mov
sar
sub
xchg
xor
call
jecxz
cmp
hlt
inc
add
nop
ret
mov
stos
mov
ret
push
cmpsb
sar
cmp
mov
adc
adc
shrl
sub
mov
data16
ds
rol
lret
lock
push
fiaddl
cmp
ja
sbb
fdivl
es
xchg
mov
popa
sub
and
fmulp
inc
in
movl
out
jbe
jae
xchg
cmp
popa
jp
pop
mov
cmpsb
mov
icebp
add
in
in
loop
cmp
push
cld
mov
imulb
add
jecxz
jle
and
test
shll
mov
filds
les
mov
push
mov
test
sti
xchg
fstps
mov
fisttpll
data16
xchg
jp
out
insl
dec
fcmovnb
adc
or
cmpsb
in
leave
mov
jle
pop
es
movsb
hlt
pop
mov
loopne
push
pushw
push
mov
inc
xchg
pop
or
inc
cmp
mov
inc
jecxz
add
mov
into
loope
les
cltd
enter
dec
push
adc
test
into
adc
and
xorb
mov
add
push
lods
stos
push
cmc
inc
out
leave
fbld
rcl
or
dec
push
ss
in
pop
mov
xchg
lea
icebp
dec
pop
pop
mov
jecxz
push
sub
hlt
mov
or
push
cmp
fdivrs
or
add
mov
dec
enter
scas
divb
xor
push
push
xchg
popa
fidivs
aad
movb
nop
and
mov
mov
xchg
cltd
cmp
mov
arpl
dec
push
xchg
xor
mov
cmpsb
es
mov
xor
sar
mov
in
aaa
add
cmp
inc
sti
mov
sub
je
push
xor
ret
rcrb
iret
cmp
mov
notl
in
cmpsb
test
test
push
lahf
cmpsb
push
addr16
mov
hlt
sub
xchg
loope
dec
dec
jmp
addr16
insb
mov
xchg
xchg
sub
sub
out
lds
jo
idivb
xor
add
mov
xchg
mov
mov
idivb
or
pushf
cli
mov
shll
enter
bound
fcoms
cmp
out
push
lahf
xchg
cmp
stc
insl
inc
and
call
cli
outsl
cmp
pop
or
cmpsl
jp
mov
pop
adc
xor
mov
mov
cmp
cs
nop
cmp
mov
cli
mov
loop
shr
mov
jle
ja
test
dec
xor
stc
lds
lea
push
mov
stc
je
jbe
stos
push
imul
into
sbb
popa
cmpsb
add
sbbb
push
sub
outsb
xchg
shll
cli
clc
push
mov
jmp
fsubs
mov
idiv
jg
mov
xchg
in
mov
cmp
mov
outsl
sahf
mov
js
mov
push
jno
lods
mov
fadd
mov
int3
jno
sbb
rcrb
fcom
dec
mov
mov
mulb
xor
adc
mov
mulb
out
pop
lods
cmp
inc
dec
jae
jg
xor
out
fistl
push
aad
pop
cmp
sub
ret
mov
mov
or
rclb
js
pop
shrb
fimull
xchg
outsb
leave
and
rcrb
hlt
xchg
je
and
sbb
repz
dec
mov
out
enter
adc
enter
je
fdivrs
mov
xor
stos
cld
xchg
insl
sub
dec
adc
int
inc
sahf
pop
adc
xchg
ss
adc
adc
popa
push
fisttpll
fstpt
sub
mov
outsb
mov
dec
xchg
lahf
movsl
in
mov
and
mov
icebp
int
iret
fldenv
lret
mov
sti
out
pushf
mov
loop
popa
rolb
mov
adc
inc
inc
stc
xor
mov
sbb
mov
dec
stos
fisubl
pushf
add
cli
add
fs
sti
mov
mov
out
and
cwtl
leave
xchg
mov
sbb
ror
add
push
inc
mov
xor
mov
mov
out
dec
test
pop
push
lock
jmp
xor
ret
sbb
sbb
iret
punpckldq
loopne
xlat
fs
adc
rcrb
dec
jle
mov
adc
add
cmpsb
mov
xor
bound
out
jp
push
pusha
inc
mov
cmp
dec
pop
jge
mov
fidivs
pop
adc
scas
aam
xchg
leave
mov
pop
test
repnz
or
lret
push
pushf
jp
je
rol
dec
scas
add
scas
stos
xchg
adc
cli
pop
inc
sub
push
jns
in
jbe
mov
mov
idivb
pop
testb
mov
push
fcomps
cli
inc
mov
adc
rorl
sahf
add
movsl
ds
mov
push
jge
roll
aas
sbbb
mov
out
pop
add
push
fimuls
sub
addr16
cli
loop
dec
jbe
cmp
mov
add
cmpsb
dec
xor
inc
mov
sub
add
lock
cld
mov
sbb
int3
push
push
cmpsb
cmc
mov
inc
in
cmp
cmpsl
divb
data16
pusha
mov
jb
aas
loope
es
fsubl
mov
jge
xor
push
sarl
mov
dec
add
ds
clc
adcl
cmpl
cmpb
mov
lds
lret
rolb
fdivrs
cmp
lret
movsb
mov
mov
push
jns
into
dec
insl
negb
test
mov
mov
or
out
pop
dec
xchg
into
out
push
mov
sub
ret
sbbl
fisubl
mov
mov
addr16
loope
lret
xor
push
es
mul
mov
sbb
cli
loope
push
aad
pushf
jb
adc
loop
add
imul
leave
and
adc
dec
xor
mov
dec
cld
push
mov
mov
aaa
jb
sub
add
mov
rcrb
icebp
cmpsl
mov
notb
fistpl
sub
pop
pop
clc
lock
adc
inc
xor
cmp
mov
repnz
cld
ss
ret
sub
pop
pop
in
ss
xchg
sbb
movsl
pop
mov
scas
fmul
mov
dec
add
push
jbe
out
mov
pop
mov
call
sti
mov
ss
sarl
push
xlat
jo
and
or
lret
data16
xchg
mov
sbbb
std
aad
loop
ja
pop
clc
xor
xor
pop
dec
out
iret
movsb
sbb
lret
out
lods
icebp
js
add
movl
pop
aas
push
fidivl
xor
lret
mov
nop
mov
jno
dec
js
je
or
cld
loopne
cmpsl
scas
cs
push
sbb
in
or
rcl
ret
dec
sub
cmp
cs
push
out
mov
les
loope
ja,pn
repz
adc
mov
jne
mov
adc
in
andb
mov
push
cmp
arpl
aas
shl
aaa
ss
repnz
mov
adc
mov
add
xchg
ss
out
pop
pop
fwait
out
mov
sahf
jl
mov
dec
mov
mov
out
insl
jl
mov
lret
mov
ja
sub
xchg
xor
xor
mov
xchg
fbld
call
xchg
hlt
loop
inc
push
pop
add
add
sub
push
mov
fucomi
or
icebp
add
ret
jle
adc
ljmp
dec
sub
ret
pusha
ret
lcall
jbe
aaa
gs
in
xchg
inc
push
and
enter
outsb
loop
jle
fiaddl
mov
ss
cmp
cmp
xchg
mul
in
test
icebp
je
shlb
and
add
add
xor
mov
bound
push
push
out
fldcw
or
aas
ljmp
mov
xchg
mov
cmp
push
lods
dec
subb
int3
mov
mov
out
jbe
pop
add
rcr
in
xor
test
xchg
repnz
cli
pop
testb
cmp
fcomip
or
int3
jae
out
addr16
mov
aaa
cmp
push
mov
pop
aaa
sbb
jo
testl
sbb
mov
pushl
ss
cmp
mov
les
mov
mov
jbe
cmp
add
lcall
rclb
and
sub
push
mov
inc
mov
cmc
int
xor
incb
scas
ror
fmuls
cmc
scas
fstl
in
add
andb
cmp
adc
push
mov
cltd
sbbl
mov
cld
js
je
mov
jge
mov
push
mov
stc
inc
mov
xchg
lds
and
pop
popf
repz
mov
sarl
ljmp
cli
imul
sbb
stc
adc
shlb
aaa
add
jl
mov
addr16
daa
shl
ret
repnz
sbbb
inc
sub
imul
pusha
icebp
rcrb
dec
jl
jmp
test
mov
das
aad
addr16
andb
enter
xchg
sub
sub
jbe
inc
adc
push
out
notb
icebp
adc
push
sub
and
leave
adc
cli
fidivrs
pop
xchg
ljmp
cmp
cli
push
pop
xor
repz
push
imul
sub
sub
inc
scas
mov
add
jo
mov
mov
scas
push
cli
and
fisttpl
into
cmp
rcl
daa
xor
aas
popf
inc
enter
push
gs
mov
cmp
rclb
repz
add
mov
and
inc
push
pop
mov
mov
sub
pop
cmp
mov
mov
jmp
inc
loope
shll
cmp
notb
pop
dec
xor
out
mov
es
add
xchg
clc
sub
stos
pushf
push
repnz
cmpsb
lock
add
mov
sahf
adc
mov
repnz
enter
mov
cmp
nop
mov
into
pop
push
je
and
xchg
dec
out
cmp
push
mov
mov
in
into
or
dec
dec
xorl
cmpsb
jbe
in
hlt
jb
ja
pop
sbb
xor
inc
enter
add
gs
xchg
lods
clc
loop
xchg
cld
mov
mov
xor
shrb
outsb
gs
div
ret
arpl
dec
push
jp
add
xchg
stc
xor
ds
mov
pop
loope
out
fldt
inc
push
call
ror
or
ds
rolb
mov
ds
mov
xor
bnd
adc
mov
cmp
gs
scas
sar
lds
inc
ss
mov
aad
mov
mov
dec
inc
and
push
testb
fdivrl
rcrl
mov
add
stos
jo
out
xor
and
fstl
es
pop
jno
inc
loopne
inc
hlt
sub
push
mov
mov
or
mov
sub
cmp
cmp
imul
xor
push
or
xchg
push
fdivl
stos
subb
push
fsubp
push
mov
ret
test
orb
ljmp
adc
rclb
sub
dec
adc
mov
push
and
sbb
test
sti
mov
mov
inc
push
cli
mov
int
mov
int3
xor
push
js
fnsave
jo
pop
mov
int
mov
int3
cli
call
xor
shl
popf
inc
pop
mov
cs
loop
or
mov
or
adc
push
sbb
loope
sarb
fnstenv
out
dec
sbb
leave
movsb
ficoml
fldl
dec
mov
out
test
inc
xchg
clc
sub
leave
mov
stos
movsl
out
shll
jbe
pop
add
je
test
clc
enter
movd
sub
add
js
mov
pop
mov
lods
pop
jecxz
roll
pop
mov
jl
outsl
int
lock
push
loopne
push
cmp
sbb
outsb
pop
jl
xor
xchg
sbb
dec
xor
add
rcr
cmp
in
lahf
ja
mov
add
xchg
mov
push
mov
sahf
mov
js
adc
cli
jbe
adc
repnz
imul
cli
pop
ljmp
xchg
ds
sbb
pop
mov
jg
stos
xchg
push
aaa
rolb
mov
adc
add
adcl
cmp
or
fimuls
roll
adc
inc
lock
mov
or
lcall
ss
add
shlb
jae
jo
add
jp
les
inc
call
int3
clts
sahf
subb
pop
icebp
mov
xchg
dec
jo
out
ror
inc
mov
nop
cmp
or
sub
in
iret
or
les
add
cmpsb
sub
xchg
mov
iret
adcl
es
inc
andb
mov
sbb
xchg
adc
jb
push
dec
jecxz
stos
inc
and
cs
sarl
mov
test
mov
roll
rcrb
dec
ret
push
mov
fcoms
mov
adc
es
xchg
pop
dec
fcomps
sahf
inc
shr
jp
daa
xchg
decb
fstl
gs
push
cmpsb
rcrb
mov
loope
cld
fadd
mov
xor
adc
leave
cmpsl
test
sub
inc
add
ss
rcrl
sarl
xchg
into
add
ljmp
xor
mov
inc
add
movsl
jle
iret
mov
mov
adc
nop
cli
mov
mov
cmpsb
mov
ficompl
mov
cmp
and
mov
pusha
xchg
xor
in
sarb
adc
pop
aas
mov
jbe
mov
jg
inc
xor
push
cmpsl
pop
cmp
pop
jno
repnz
mov
lret
movsb
jle
imul
mov
cmp
lea
mov
out
stos
test
inc
cmp
sub
mov
jbe
movl
clc
jbe
rclb
idivb
in
leave
outsb
es
mov
das
mov
xchg
xor
inc
mov
dec
mov
cmp
push
push
or
mov
or
lock
pop
push
shr
stos
fiaddl
push
ss
sbb
cmp
add
sbb
pop
cwtl
and
fisttps
pop
and
and
aas
jae
loop
shll
or
and
not
lcall
push
int
jne
int3
sahf
jl
jne
dec
cmp
adc
and
out
leave
or
push
fcoms
jae
rorl
leave
inc
out
jge
fidivrs
mov
adc
popa
cmpsb
lock
dec
ljmp
sahf
add
leave
pop
or
lock
mov
mov
push
lret
mov
call
aad
sub
rclb
sahf
cmp
push
std
push
mov
mov
bound
sbb
shrb
in
jae
in
cs
fbstp
xlat
icebp
cmp
lods
cmp
push
lcall
sub
bound
mov
aam
inc
mov
mov
mov
xchg
scas
shlb
dec
and
push
repz
dec
sub
mov
and
shll
push
test
mov
scas
or
lcall
mov
gs
in
mov
jp
mov
xor
cli
pop
mov
int
adc
int3
and
outsb
fcoms
lds
mov
ret
repz
push
scas
mov
inc
aad
jne
fbld
jno
sbb
mov
sub
shl
movsl
xchg
mov
jmp
mov
pop
pusha
sbb
lret
fidivrs
out
iret
xchg
and
arpl
stos
add
jno
push
loope
idiv
jae
mov
xchg
add
jle
into
es
cwtl
int
lret
shll
fsubs
fbstp
push
icebp
mov
cli
inc
fnstcw
xor
inc
data16
out
cwtl
imul
js
mov
in
mov
out
loop
sbbl
fcoms
int
fnstcw
or
push
add
es
test
xor
ja
cmpsl
in
scas
xor
add
mov
mov
bts
add
cwtl
in
mov
mov
fdivl
fidivs
push
cmpsb
pop
hlt
por
ds
xor
mov
or
lret
lock
push
jne
dec
fldcw
xchg
add
push
fimull
sahf
add
mov
xchg
fadds
mov
xchg
mov
xchg
enter
gs
sbb
add
cmpsb
jmp
fs
mov
das
push
mov
xchg
cmp
pop
inc
shlb
or
mov
lret
in
aad
mov
add
and
mov
jo
rcr
gs
sub
movb
mov
shll
scas
pusha
adc
fistpl
mov
shl
pop
dec
mov
loope
ss
fdivp
insl
cwtl
lret
aam
hlt
xor
add
loop
cli
mov
adcl
fldt
mov
loopne
cmp
mov
jo
loope
jle
out
leave
xchg
sub
cmp
xor
add
mov
shll
sbb
dec
cmp
push
xorl
es
fdivl
fwait
xchg
mov
sahf
iret
out
xor
enter
mov
pop
fistpl
mov
cli
sub
mov
das
je
xchg
vrsqrtss
jmp
add
fdivp
rcl
jp
cli
pop
mov
iret
xor
push
mov
scas
cli
out
mov
stos
fsubrp
jp
mov
mov
test
jg
loope
ljmp
cld
lods
sbb
mov
mov
das
fidivs
int
test
iret
mov
stos
fwait
mov
fldz
rclb
pop
xchg
cli
in
cmpsb
movsl
js
and
ljmp
cli
aas
sarl
mov
or
jg,pt
sbb
mov
xorb
jle
lock
js
dec
in
mov
jle
hlt
aaa
mov
ss
jb
rol
jl
cmp
rorb
or
push
popf
jl
divb
movd
or
xchg
add
scas
sar
inc
stc
jle
cmpsl
adc
in
mov
add
aaa
dec
enter
int3
stc
mov
in
or
push
mov
xchg
es
adc
jne
sub
iret
xor
cli
js
mov
mov
mov
into
dec
not
orb
push
cmpsb
push
ss
xor
movsl
fidivrs
add
adc
cmp
adc
jmp
jle
jmp
out
mov
aaa
imull
popf
cmp
cmp
pop
inc
xchg
mov
ror
rcll
sub
push
lock
adc
jo
into
cmpsb
mov
adc
jb
stos
ss
mov
faddl
push
xchg
jge,pn
mov
leave
xchg
pop
bound
xchg
jo
hlt
or
and
cli
push
aad
nop
push
push
not
add
int
inc
cmpsl
ja
or
repnz
jns
test
daa
add
cld
cmpsb
inc
push
cltd
loope
push
mov
lahf
idiv
fsubs
lret
xchg
add
mov
xchg
jge
cld
pop
dec
mov
mov
sub
jb
push
mov
xor
jmp
adc
faddp
jne
idivb
cmpsb
fldt
cld
es
int
fmul
adc
dec
je
leave
mov
fnstsw
cmp
cmp
sub
adcl
enter
jno
push
nop
inc
orb
dec
pushf
repnz
xor
enter
mov
into
in
scas
cmp
push
push
cmpsb
sub
int
int
jge
ds
mov
xchg
mov
leave
push
nop
je
jp
cmp
test
mov
js
push
sub
out
jp
or
fsubrs
mov
and
inc
leave
hlt
push
into
mov
ss
mov
lods
xchg
lea
movsb
movsl
push
aad
movl
add
aaa
inc
xchg
addr16
mov
or
dec
mov
inc
lret
mov
xor
mov
inc
mov
out
enter
sub
ret
popa
fisubs
imul
js
loop
ss
into
pop
pop
push
cmp
jge
pop
sub
and
xchg
in
push
mov
pop
lahf
mov
mov
mov
adc
xor
dec
jne
dec
stos
out
dec
in
cs
jp
mov
stc
jp
in
loop
mov
test
mov
jl
adc
dec
mov
in
fwait
daa
sub
lcall
cmp
xchg
mov
fldt
mov
shlb
pusha
and
test
add
std
or
push
popa
int3
or
into
rorb
fld
enter
scas
jp
or
mov
inc
push
sub
data16
jnp
mov
push
adcb
cmp
clc
xor
mov
gs
inc
push
loope
add
cltd
in
mov
pop
out
push
ret
or
lock
fldt
adc
push
in
adc
xor
cltd
pop
out
or
mov
sub
out
neg
enter
push
scas
jmp
insl
leave
inc
xor
rcr
dec
daa
dec
mov
mov
pop
popf
dec
out
rcll
sbbb
bound
pop
or
dec
cmp
scas
mov
jecxz
cmp
inc
fsubrp
fsubrl
nop
fidivrl
jg
ret
iret
sbb
xchg
out
mov
loop
push
mov
jo
sbbl
shrb
int
ja
dec
mov
arpl
xchg
push
push
mov
fistps
mov
dec
xchg
cli
push
shrb
call
sub
loop
lret
mov
movl
push
pop
dec
xor
add
push
cmpsb
scas
or
push
mov
jmp
cmpsb
aam
leave
mov
mov
mov
push
cmpsb
mov
cmp
xchg
lcall
rcrb
jo
mov
stos
sahf
mov
push
fldcw
xor
push
jp
shlb
add
push
mov
add
jbe
rcr
mov
xchg
movsl
rcrl
fcmovnbe
ja
xor
mov
repz
mov
push
int
out
pop
xor
lret
iret
leave
sti
cli
jbe
mov
jecxz,pt
push
ss
lods
cmp
mov
and
mov
leavew
vpsllw
in
cmp
jae
mov
and
cli
mov
dec
into
push
sbb
dec
sbb
clc
or
popl
ss
std
lret
into
movsb
or
push
fstpl
xchg
cli
ret
dec
cmp
cmpsl
jp
ret
sahf
push
std
mov
mov
adc
adc
in
mov
pop
push
adc
xchg
cli
js
dec
sbb
scas
dec
jne
xor
mov
stc
jo
xor
xchg
lahf
icebp
mov
jle
ficomps
sub
aas
mov
push
lea
ja
jle
ret
xor
push
into
je
pop
in
fwait
data16
cmpsb
xor
out
js
in
fldenv
sbb
and
mov
push
mov
lcall
jle
or
mov
outsb
aam
imul
lock
in
shll
xor
mov
mov
aaa
lret
add
lcall
repnz
loopne
pop
or
mov
mov
dec
movsl
cmp
sub
push
mov
mov
aaa
das
xlat
lock
hlt
mov
adc
decb
lahf
adc
fidivl
ret
lret
outsb
aad
pop
ljmp
mov
hlt
ljmp
mov
xchg
out
sub
xchg
leave
pop
mov
mov
in
cmp
pop
adc
stos
adcb
pop
push
mov
mov
ds
adc
add
data16
xor
enter
ss
push
lea
popa
enter
push
int3
js
fidivrl
sti
imul
lahf
ds
jmp
pop
fcoms
sbb
pop
push
xor
out
add
sahf
adc
cli
fcmovnbe
rcrl
shrl
inc
clc
scas
cmpsl
out
xlat
cmp
mov
cmp
mov
cmpsl
jp
ds
ds
fisttpll
mov
mov
scas
mov
int
push
sub
mov
jne
sub
enter
sbb
pop
inc
fsts
xchg
adc
das
stc
cmp
test
or
rcrb
mov
ds
mov
lds
fs
adc
das
or
and
inc
pop
inc
andl
pop
push
shl
add
adc
and
cmc
push
xor
mov
inc
sub
pop
out
je
fistps
lock
jmp
mov
lods
fcomps
mov
mov
sub
outsl
test
xchg
jle
ret
mov
xchg
rcrb
imul
pushf
cs
enter
int
out
rcr
mov
mov
testl
jnp
ret
in
inc
mov
flds
leave
add
inc
jbe
sbb
xchg
icebp
mov
insl
scas
ss
shlb
fisubl
mov
into
dec
mov
ret
sbb
cmp
or
xchg
cli
stc
and
aas
mov
and
xchg
pop
cltd
xchg
cwtl
xor
outsb
jle
sbb
xchg
sub
fnstcw
fsubl
mov
stos
sahf
jbe
xchg
in
leave
pop
mov
add
js
dec
js
xor
jecxz
push
ret
jge
outsb
addr16
sbb
imul
ss
xor
add
mov
dec
xchg
push
xchg
ja,pt
rorl
iret
mov
icebp
push
or
mov
in
fmull
and
js
loop
lea
dec
xor
stc
cmc
dec
mov
in
mov
mov
fs
lsl
pop
inc
jle
adcb
sarb
xchg
mov
pminub
in
pop
push
xchg
fwait
imul
mov
mov
shll
lret
push
scas
pop
roll
decb
dec
lock
xor
stc
enter
ljmp
mov
movsl
popa
cwtl
mov
push
or
sti
cwtl
mov
out
ret
cmp
mov
pusha
inc
out
int
fucom
xlat
pop
or
iret
or
out
lret
jmp
push
jmp
xchg
mov
and
push
scas
ror
dec
mov
in
outsb
push
mov
lcall
outsb
das
inc
scas
sbb
jmp
mov
adc
pop
or
mov
or
cmpsb
mov
sub
adc
mov
sub
push
xchg
loop
testb
ds
push
add
pop
lock
cld
add
fmul
add
mov
mov
es
jo
cmp
push
mov
mov
aas
pop
sub
push
ficoml
jne
pop
mov
sahf
adc
dec
ds
loope
mov
fmuls
adc
mov
sbb
mov
icebp
int3
xor
ljmp
xchg
mov
cmp
data16
outsl
mov
cmp
inc
inc
pop
fcom
mov
in
ja
cltd
sarb
call
dec
es
cli
aad
ficompl
lods
cltd
iret
mov
xchg
ds
ret
shl
jbe
add
xor
and
adc
jbe
add
xor
decb
push
js
adc
pop
mov
mov
mov
leave
xor
pop
fucomi
xchg
inc
dec
das
int3
adc
aaa
sub
inc
fnstenv
mov
mov
cs
mov
ja
shrl
les
and
nop
dec
fmulp
pop
dec
cmpsl
out
mov
jbe,pt
mov
mov
mov
mov
push
movsl
or
and
sahf
es
je
push
loop
cmpsl
stos
mov
mov
cmpsb
bound
dec
jo
or
and
mov
push
lds
add
lretw
filds
mov
sub
fdivrl
add
cwtl
cmpsb
adc
mov
aam
mov
test
pop
xchg
je
popf
filds
ljmp
leave
dec
std
jno
mov
or
out
mov
mov
push
and
out
fs
mov
orb
mov
sub
cmpb
mov
jecxz
out
inc
in
sbbb
adc
cmp
inc
mov
dec
sbb
cli
inc
adc
shrl
cltd
cmp
or
push
xlat
adc
push
mov
mov
adc
and
sahf
bound
jo
mov
mov
cltd
cmc
xchg
sahf
xchg
dec
cmpsl
sub
cmpsl
and
sub
mov
inc
lcall
js
and
push
cmc
lock
push
xor
mov
movsb
inc
andb
inc
push
sub
xor
testb
out
out
cwtl
enter
fs
dec
adc
repnz
or
stos
inc
rcrl
stc
fdivr
loope
rorl
fsubr
lds
dec
call
or
mov
lahf
mov
add
int3
pop
rcr
movsl
es
mov
cmpsb
xor
rcll
pop
push
shlb
imul
fidivl
jns
loopne
inc
decl
loop
or
cmpsl
adc
xchg
add
jp
push
jb
xor
add
mov
scas
mov
and
push
in
daa
mov
std
testb
fcoms
leave
or
jns
out
inc
inc
into
mov
outsl
adc
inc
aaa
fsubl
mov
jbe
out
adcl
mov
ret
movsl
ja
cmpsb
shrb
push
sbb
sub
or
rcll
in
rclb
scas
jbe
cmpsb
sbb
es
sahf
xchg
lock
jge
int3
sub
std
int3
cmpsb
movsl
out
sarb
rclb
push
fsubs
dec
push
fwait
cli
inc
in
pop
test
and
pop
lret
cmp
js
call
dec
bound
stos
jbe
test
push
add
lds
mov
inc
into
or
ljmp
add
popf
mov
arpl
mov
adc
addb
mov
ds
fmulp
add
mov
shlb
out
cmpsb
jbe
dec
orb
inc
js
nop
xlat
leave
call
cmpsb
add
insb
jle
daa
inc
ss
aad
xchg
ja
xchg
in
push
push
enter
jecxz
mov
mov
push
xor
in
lret
insl
mov
mov
xchg
mov
lahf
mov
rcrb
push
or
rcrl
shll
mov
out
push
ret
xchg
mov
popa
int3
rcll
cmpl
mov
inc
lock
jnp
in
fcmovu
push
and
pop
mov
jmp
jle
inc
cli
fcmovnb
js
lcall
pop
ffree
xsave
cs
mov
mov
arpl
rorb
cli
repz
lret
in
test
out
and
mov
mov
dec
xchg
repz
dec
loope
rol
andl
mov
outsl
pushf
mov
jbe
mov
popa
les
out
cmpsl
xchg
dec
xor
test
gs
imulb
shr
sarl
sbb
add
loop
stos
insl
cmp
stos
fbstp
and
adc
add
jg
enter
sahf
out
sahf
fadds
rclb
mov
lretw
lds
jp
ds
mov
pop
dec
jnp
cmp
sub
lret
cmc
jmp
mov
bound
incb
fmul
rcl
sub
pusha
stos
in
xchg
mov
add
push
xchg
inc
outsb
cmp
mov
ficoms
arpl
mov
movsb
mov
fwait
lcall
shr
std
mov
ds
popa
push
mov
iret
stc
add
jns
rcrl
add
dec
dec
jne
cmpsb
inc
mov
jmp
test
int
cmpsb
enter
fdivs
mov
mov
mov
popa
mov
lcall
pop
mov
mov
push
loope
out
mov
stos
scas
cmpsb
popf
mov
pop
cmp
pop
mul
cmp
dec
and
nop
cmp
ret
mov
mov
bound
and
push
int
mov
mov
jo
fwait
jb
movsb
jle
push
sub
cmpsb
sbb
out
int
or
mov
enter
add
stos
movl
lock
xchg
out
dec
mov
adcb
xrelease
mov
jbe
mov
xchg
hlt
cmp
pop
pop
sbb
mov
shlb
shlb
jb
pop
cmp
push
int3
inc
lret
sbb
jg
and
pop
xchg
into
push
pop
pop
mov
cmpsb
rorl
add
xchg
cmpb
push
dec
cmp
test
test
push
or
add
mov
mov
sbbl
scas
push
pop
inc
mov
shrl
daa
push
les
nop
inc
hlt
into
push
mov
add
ds
and
dec
mov
mov
sub
mov
out
mov
mov
mov
jo
stos
lret
pop
fiadds
ret
adc
and
push
daa
shlb
push
jns
xchg
bound
xor
loopne
es
jne
or
iret
xor
or
call
loopne
pop
lods
ja
hlt
mov
mov
into
and
out
lds
dec
imul
repnz
jmp
lods
shrb
or
loop
dec
mov
inc
insl
cmp
ja
and
mov
dec
ja
sbb
fidivl
jle
out
sbb
dec
jnp
xchg
dec
push
mov
mov
into
cmc
cli
leave
mov
adc
es
shl
dec
xchg
mov
dec
mov
add
mov
and
pop
push
lahf
jae
pop
fs
pop
push
pusha
mov
ljmp
sub
fiaddl
gs
jne
ret
pop
fbld
mov
jb
icebp
adc
mov
push
cmp
test
mov
cmp
mov
jnp
aad
mov
cli
or
rcll
mov
stos
cld
push
mov
and
sub
xlat
imull
xchg
lock
push
jmp
lret
push
jmp
sub
adc
movsb
mov
push
test
sarl
mov
jns
mov
mov
cmpb
decb
sbb
in
fisubl
in
lret
mov
cmp
test
cwtl
faddl
sti
ss
and
fsubrs
sub
jb,pn
mov
xor
ss
pusha
int
outsb
out
jp
ljmp
or
mov
aaa
dec
jnp
mov
mov
push
xchg
movsb
loopne
adc
inc
enter
hlt
fcoms
and
add
add
adc
sbb
jbe
sbb
mov
push
inc
and
dec
mov
divb
sti
xor
fdivp
or
xchg
sahf
jle
jg
and
cwtl
mov
sub
repnz
mov
lret
xor
leave
xchg
add
mov
mov
sbb
jecxz
jmp
fstl
mov
mov
push
mov
lret
loope
ret
jb
movl
cmp
lret
dec
pop
pop
inc
sti
adc
ss
cmp
pusha
sbbb
rorb
sahf
cmpb
sahf
cwtl
sbb
mov
repz
fs
adc
movsb
dec
push
xchg
pmaxub
int
jle
adc
fcomps
imul
ss
insb
lahf
jp
push
daa
or
cmpsb
arpl
sahf
cmp
call
mov
inc
jbe
xlat
mov
dec
int3
ret
jno
push
jo
jne
ret
movsl
cmpsb
lock
mov
fsubr
push
push
cli
jbe
shl
adcl
and
xor
das
test
ljmp
pusha
cli
mov
mov
scas
xchg
das
es
xor
and
lret
movb
ret
bound
inc
mov
lods
cmp
in
push
push
lds
or
push
sub
xor
inc
lret
mov
scas
or
into
insl
repnz
mov
mov
js
add
insl
cli
xchg
xor
jnp
out
outsb
lcall
aaa
pop
ljmp
roll
cli
imul
push
es
sub
in
xor
fadds
mov
lock
fsubrs
dec
dec
cmpsl
ljmp
adc
movsb
jo
push
mov
hlt
sub
out
lds
mov
push
mov
xchg
sub
divb
dec
pop
mov
gs
fdivs
xor
sub
pop
inc
inc
pop
lds
sti
idivl
and
mov
imul
int
aam
or
push
mov
mov
inc
clc
int
mov
aad
rcl
push
push
add
mulb
aam
cmp
fsub
outsl
mov
inc
jb
fildl
mov
dec
fisttpl
jno
inc
dec
ja
or
push
xchg
divl
inc
and
mov
add
or
das
shrl
into
sub
rcll
scas
sub
sub
imul
in
ss
push
cs
mov
xchg
out
cld
push
sub
bound
ret
sub
mov
mov
pop
sub
push
mov
lret
imul
add
cmp
mov
out
ds
inc
mov
or
push
int3
test
lgs
push
repnz
shl
xlat
lret
mov
sub
scas
ss
mov
sbb
leave
lock
out
mov
stos
mov
mov
or
and
mov
movsl
popf
dec
fidivl
jnp
lret
fdivrs
lret
cmc
cltd
fucomi
clc
out
or
push
inc
fadds
enter
mov
fisubs
and
fstpt
lret
aam
cltd
jle
cli
push
loopne
mov
stos
scas
mov
lock
out
shll
or
fs
scas
xchg
mov
lea
jb
lea
leave
mov
mov
sbb
movsb
push
cs
dec
push
sbb
movsl
pop
sub
mull
adc
ds
mov
mov
jo
test
fisttps
sbb
push
fadds
and
fcoms
aad
lret
imul
inc
adc
fiaddl
mov
jne
fisttpl
push
xchg
sbb
sub
mov
les
mov
and
scas
fstpl
push
adc
mov
cmpsb
cld
mov
jp
bndldx
push
jp
sbb
enter
and
in
in
inc
stc
out
sahf
cmp
jnp
cmp
cmp
sbb
cmc
cmp
sub
lds
mov
inc
out
stc
ret
xchg
mov
mov
push
mov
mov
bound
ret
pop
loope
dec
lahf
out
sbb
push
rcll
pop
rcl
jne
mov
mov
cmpsl
push
aaa
add
or
fildll
and
sub
xlat
jne
loop
dec
xchg
add
fs
cmpsb
xor
adc
stc
jbe
sub
pushf
pop
cli
mov
out
in
scas
push
js
adc
enter
xlat
sub
mov
lods
mov
jecxz
mov
cli
add
cmp
mov
cli
imul
mov
mov
push
mov
ja
rcr
xor
std
mov
cmpsb
xor
add
mov
std
divb
lods
dec
mov
in
sbb
into
and
sub
je
lret
pop
gs
jno
xchg
and
dec
cmpsb
mov
pop
ds
fiaddl
jmp
push
loop
cmpsl
xor
fdivs
mov
xor
repnz
rorl
out
add
jb
lret
lret
aaa
adc
push
je
imul
mov
jecxz
pop
cmpsl
fs
shlb
enter
aas
jb
jp
fcoms
dec
js
add
xor
cmp
xchg
ret
cltd
frstor
pminub
out
mov
sub
scas
push
inc
jecxz
testl
ljmp
jmp
mov
cmp
mov
push
mov
pop
mov
cwtl
mov
inc
mov
aad
lds
push
pusha
in
adc
jp
mov
aas
psllq
and
enter
mov
mov
jge
outsb
mov
and
enter
xchg
loope
xchg
mov
add
clc
inc
add
mov
mov
and
test
fcmovbe
sub
adc
es
xchg
fcoms
adc
in
movb
mov
fiadds
jns
xor
mov
push
data16
or
mov
cmp
push
cmpsl
add
dec
movsb
add
ret
push
mov
loop
mov
and
incb
movsb
sub
mov
arpl
mov
jl
into
pop
xchg
and
insl
mov
mov
sbb
push
or
sbb
neg
mov
mov
mov
aad
lods
int3
out
sbb
fldt
int3
jbe
fldenv
push
neg
lea
mov
lret
xor
xor
shl
dec
loop
xor
jbe
adc
movsl
dec
gs
imul
mov
enter
add
mov
js
fmuls
mov
mov
cmp
mov
sbb
mov
push
mov
cmpsl
outsl
mov
lods
xchg
loop
cwtl
mov
push
popf
lods
dec
mov
andb
mov
sbb
mov
mov
dec
xchg
outsb
icebp
inc
mov
notb
clc
adc
fidivs
fcmovbe
int3
sub
ret
into
lret
outsl
jle
aam
repnz
pushf
or
sbb
cmp
imulb
pop
aam
push
cmp
push
out
leave
dec
xchg
mov
dec
in
sub
mov
sarb
pop
dec
mov
pop
or
roll
mov
push
pop
dec
stos
adc
xor
jg
std
in
fldt
fimull
ret
test
xchg
sbb
dec
cmp
sbb
xor
mov
mov
lods
shl
clc
dec
mov
jbe
pusha
jbe
ss
lret
inc
cmp
orb
jle
mov
int
sahf
push
adc
aad
sbb
and
call
enter
mov
mov
pop
sbb
push
add
mov
rcl
out
mov
clc
imul
fdivs
cli
arpl
mov
lds
enter
bound
fsubrs
je
mov
push
push
mov
pop
lret
push
adc
fstl
hlt
aad
movl
mov
inc
adcb
out
mov
pop
mov
cli
mov
adc
imul
loope
xchg
push
loope
push
cld
adcl
adc
jbe
cli
mov
add
xchg
ror
ds
fiadds
ficompl
add
out
push
into
shl
mov
mov
test
stc
lds
outsb
ret
leave
rorb
fs
out
fneni(8087
hlt
call
fsubrs
test
popf
inc
dec
mov
xchg
jg
mov
xchg
add
add
adc
ret
insb
push
mov
out
inc
or
inc
cmpsl
or
lret
fisttpll
mov
out
mov
add
jbe
and
in
push
lahf
push
into
idivl
sarl
jae
adc
inc
mov
sub
clc
adc
sahf
push
jbe
outsl
in
or
ljmp
iret
add
fdivrs
mov
sbb
jb
xchg
mov
push
mov
and
add
dec
xchg
cmp
lret
add
frstor
mov
xchg
cmpb
pop
dec
inc
fcmovb
rcrl
aad
cmp
mov
fsubs
adcl
lock
jmp
out
sar
or
inc
in
sub
mov
xchg
lcall
xchg
cmp
adc
dec
aas
inc
sub
je
lcall
call
jl
imul
movsl
inc
xchg
imul
xor
test
push
data16
dec
ficoms
out
lods
sbb
mov
or
push
cmp
outsb
ficomps
ror
sbb
dec
addr16
xorb
fdiv
mov
sbb
or
ljmp
repz
cmp
xor
mov
inc
scas
or
cli
mov
mov
cltd
xchg
xor
pop
xor
cbtw
mov
xchg
ror
mov
sbb
cmp
pop
into
ss
into
xorb
not
xor
fsubrl
lods
loopne
rclb
rclb
das
pop
bound
inc
or
cmpsl
dec
ss
xor
in
insl
cld
lret
inc
cli
lods
sub
jbe
mov
mov
jle
mov
cmp
pop
push
shlb
mulb
jns
sbb
mov
mov
and
dec
fnstsw
sbb
sub
push
fadds
rcr
aaa
jmp
mov
inc
mov
ds
aaa
clc
scas
call
dec
ss
aas
roll
ss
fstpl
mov
jne
jbe
out
cli
and
insb
jb
mov
jg
aam
and
dec
mov
pop
dec
mov
jle
pop
adc
mov
push
faddp
shl
xor
push
xor
pop
dec
xor
clc
nop
push
rolb
xlat
push
scas
repz
leave
sahf
push
push
scas
add
pop
lret
push
push
cmpsb
and
lret
adc
inc
sarb
inc
clc
mov
notl
es
mov
in
mov
dec
loopne
sbb
repz
fidivrl
mov
add
test
dec
inc
jne
mov
es
mov
push
cmp
lock
aad
pusha
jp
jle
mov
dec
fidivl
dec
out
mov
jbe
xchg
mov
or
add
das
and
jl
mov
mov
jbe
addb
jp
mov
cs
adc
outsb
mov
ds
pop
in
xor
xchg
out
lret
test
outsb
dec
fsubrs
movsl
or
ja
iret
mov
stc
loopne
xchg
and
push
fcompl
xor
rol
xchg
out
or
add
clc
jmp
das
dec
stos
into
test
dec
inc
jecxz
mov
and
mov
push
push
iret
daa
mov
in
int
jle
xor
mov
nop
xor
adc
loop
push
cmp
jne
stos
or
icebp
sar
aaa
cs
adc
hlt
outsb
fisubrl
into
cli
shlb
lds
adc
mov
or
xor
push
adc
out
ljmp
adc
das
out
out
bound
lock
fsubs
dec
mov
jp
fldt
xchg
sbb
adc
mov
jmp
adcl
sbb
mov
push
fnstcw
jno
xor
fwait
pop
into
mov
into
mov
test
xor
push
mov
out
xchg
loopne
adc
lcall
movsb
iret
cmp
mov
push
xor
and
mov
out
ret
xchg
je
movsb
xchg
insl
sbb
jo
in
mov
push
mov
icebp
clc
push
sbb
ret
or
int3
js
es
jbe
add
push
mov
iret
cmpsl
dec
xor
andl
test
mov
pop
add
andb
data16
mov
movsl
ja
loopne
call
addr16
enter
xchg
add
dec
loop
shl
int3
lcall
outsb
mov
lahf
je
xor
movsl
mov
lret
int3
mov
xchg
jno
sahf
aam
mov
pop
jp
sbb
arpl
dec
mov
addr16
repz
adc
cs
adc
xor
mov
cli
sbb
pop
xchg
mul
jp,pt
ret
add
adc
push
push
push
mov
fcoms
mov
pop
out
lock
push
in
add
icebp
pop
daa
push
movsb
xor
paddusw
mov
push
imul
pop
loop
cs
in
scas
mov
jno
mov
int3
roll
push
dec
fsubrp
or
sahf
aaa
ljmp
fisttpl
cmp
cli
mov
dec
into
jbe
ds
sub
mov
sbb
xchg
push
mov
pop
adc
out
ds
ss
in
jne
movsl
push
cmpsl
aaa
setnp
lahf
andl
inc
adc
sub
jno
push
neg
ret
orl
sbb
inc
and
icebp
cld
js
jne
pop
mov
inc
decl
pop
xor
jo
mov
sub
adc
sbb
push
mov
mov
add
push
xchg
in
outsb
in
scas
xor
xchg
sub
int
adc
in
cwtl
out
rcl
push
in
dec
fcmovne
dec
fistl
xor
in
aaa
subl
sahf
mov
mov
push
xchg
lods
lret
xor
inc
stos
xor
add
bound
or
push
pop
inc
adc
cmp
pushf
mov
xchg
into
adc
dec
mov
ss
pop
sub
adc
shrb
jno
ficoms
popl
push
jmp
xchg
lds
int3
sub
call
dec
rorb
das
xchg
mov
or
cmp
out
sub
rolb
push
fcmovb
sahf
xor
sbb
cs
divb
lds
and
testb
inc
hlt
mov
aad
enter
in
jbe
imul
mov
insl
mov
out
fisttpll
pop
or
cmp
sbb
mov
int
xor
push
or
stc
in
aad
xor
jecxz
dec
mul
and
fisttpl
stos
inc
or
sahf
lds
or
dec
pop
mov
push
fmull
fimull
push
mov
add
push
ret
loopne
cmc
aaa
inc
lret
inc
pop
mov
std
jge
adc
dec
pop
pop
aaa
in
icebp
xchg
notb
fidivl
out
adc
push
shlb
fstpt
xchg
ss
stos
sub
andb
add
xor
cmp
inc
and
in
negb
inc
mov
push
scas
cli
push
cld
shl
add
adc
leave
cmc
xchg
es
scas
sar
in
fidivrl
and
mov
sub
int
movsl
out
out
jecxz
shl
mov
jbe
int
mov
pop
test
ret
ss
and
cmpsb
ds
add
outsb
push
stos
mov
cmpsb
push
inc
add
dec
push
ret
push
iret
fmul
pop
insb
sahf
xchg
shlb
into
and
cs
call
sub
lret
inc
xchg
and
aam
adc
ficomps
aad
jae
in
xor
mov
mov
adc
add
pop
xchg
es
add
enter
stos
mov
or
nop
lea
sarb
shlb
loop
fimuls
leave
mov
loopne
stc
in
jg
sahf
call
adc
es
jbe
jo
dec
add
cmp
mov
in
sbb
das
inc
negb
outsl
inc
loop
insl
mov
mov
rcrb
mov
dec
xchg
cmp
jb
leave
enter
dec
shrb
mov
mov
or
call
pop
cmp
mov
ret
fidivs
push
mov
dec
fistpll
ljmp
fdivs
mov
aaa
cld
mov
jle
mov
repnz
mov
ss
rclb
fcompl
sbb
mov
jno
mov
add
mov
mov
std
std
clc
dec
mov
push
mov
insl
popf
mov
ljmp
push
jle,pt
cs
in
mov
xor
pop
pop
xor
inc
loop
hlt
add
jo
ss
jbe
push
jge
scas
cli
jl
mov
sarl
hlt
rcrl
cmp
mov
or
pop
stos
aas
mov
adc
jnp
mov
add
jns
sbb
dec
lods
data16
rcl
adc
or
outsb
mov
jp
in
adc
jmp
and
bound
aam
cmp
js
xor
fbld
fwait
push
adc
cli
and
mov
jb
inc
shlb
ds
push
mov
loopne,pt
shl
std
and
sbb
arpl
in
stos
ds
fcmovbe
cld
cmp
push
or
push
cmp
adc
xor
pop
jle
adc
pop
mov
xchg
cmpsl
mov
ret
push
out
aad
or
lock
pop
push
mov
mov
adc
cmpsl
sub
fs
hlt
xor
push
lds
cwtl
push
or
hlt
into
pop
inc
mov
in
lods
into
stos
testb
push
push
pop
mov
loop
mov
push
lret
lcall
sbb
mov
push
out
dec
faddl
push
adc
or
dec
ss
push
sbb
lcall
lods
mov
cld
mov
test
mov
pop
cmpsb
xor
xchg
xchg
cmp
cs
aaa
pop
mov
xchg
jbe
in
out
shll
pusha
std
leave
mov
cmp
out
imul
movsl
adc
push
ret
fistps
mov
dec
cmpsb
stos
cli
mov
cmp
bnd
sarl
je
and
mov
loop
inc
cli
jb
data16
sbb
mov
inc
pusha
divl
xor
daa
das
push
adc
bnd
or
lret
or
es
insb
or
sbb
out
xor
hlt
pop
sbb
mov
mov
xchg
pop
loopne
mov
xchg
adc
ret
and
push
push
fcmovnb
add
lcall
mov
nop
test
dec
fnsave
rorb
cli
out
xchg
add
imul
inc
mov
jne
scas
add
mov
outsb
vandnps
mul
push
out
cmc
xchg
js
lea
decl
mov
mul
ret
jl
adc
mov
xchg
fcom
sahf
sub
imul
pop
or
inc
mov
push
into
cli
ja
mov
int3
dec
mov
sbb
int
add
jp
mov
negl
mov
xor
pmulhw
xchg
push
repnz
enter
mov
or
decb
and
in
sbb
push
mov
inc
fnstenv
lret
or
loopnew
pusha
adc
adc
test
push
add
jb
inc
aas
pop
stos
cmp
push
cmp
test
mov
out
jb
lahf
mov
fidivrs
enter
lcall
pop
outsl
push
mov
icebp
xchg
divl
sub
jl
pop
stos
xchg
mov
vaddsubpd
sbb
in
lcall
xchg
mov
call
outsl
cmp
pop
sub
push
push
xor
fadd
pop
pop
push
aam
sbb
mov
adc
xchg
dec
stos
adc
xchg
leave
fdivs
mov
jns
outsl
mov
or
mov
jecxz
ja
and
inc
mov
imul
data16
out
popf
ret
sbb
mov
ds
push
int3
or
mov
hlt
add
pop
aad
test
aas
sti
xor
xor
fistpll
xchg
dec
push
jne
push
xor
sub
out
lret
out
pop
js
ret
mov
cmp
idiv
imul
adc
jl
push
in
push
jg,pt
shll
push
jmp
xchg
rcll
mov
adc
mov
mov
xor
cmp
mov
loope
adc
mov
mov
les
js
and
rcl
popl
jecxz
dec
in
xor
sub
xor
int
mov
fcmovb
jae
xor
and
addb
roll
fbstp
mov
jl
rorb
dec
call
push
mov
imul
fsubrl
xor
and
dec
cmp
outsb
aam
jnp
mov
stc
iret
mov
cltd
aaa
adc
mov
ror
inc
scas
and
mov
dec
fistpl
mov
repnz
and
or
xor
ss
divb
mov
or
xchg
fnsave
xor
ss
call
adc
ss
pop
data16
ljmp
in
adc
mov
in
enter
mov
mov
mov
jp
scas
dec
mov
or
into
mov
pop
cmp
adc
sub
mov
int
idivl
xchg
and
push
mov
ss
shrl
jp
add
orb
adc
test
subb
jecxz
scas
int3
cmc
into
inc
push
xchg
jbe
sarl
cld
xchg
jmp
xor
scas
out
movl
and
es
push
test
cmp
loop
and
add
or
mov
sbb
lret
mov
nop
pop
aaa
xlat
es
aaa
loope
stos
or
dec
pop
mov
add
addb
fimuls
loop
cli
shlb
out
call
mov
mov
xor
sbb
cli
mov
imul
neg
dec
sar
dec
idivl
rolb
push
adc
cltd
test
int
pop
lret
mov
inc
fcomp
out
scas
mov
bound
lcall
or
mov
cmpsb
bnd
adc
and
or
pop
in
das
loop
loop
das
lret
mov
fisttpll
sbb
iret
or
push
pusha
out
push
js
into
mov
stos
leave
fnsave
pop
cmp
xor
xor
repnz
xor
int
pop
out
call
push
pop
mov
in
jb
push
pop
push
clc
sub
push
cwtl
insl
fwait
scas
lcall
mov
push
pop
lcall
jecxz
fisubrs
jecxz
or
ljmp
adc
stos
mov
fadds
or
push
push
cmp
cmpsb
mov
inc
daa
dec
scas
not
fadds
mov
loope
int3
dec
inc
lahf
inc
and
push
or
pop
iret
scas
xchg
loope
xchg
int
mov
fdivrl
push
cli
mov
or
in
cli
ror
mov
mov
lds
fdivrs
mov
gs
stos
fcmovbe
mov
jp
rolb
idivb
adc
inc
dec
rol
mov
fsubrl
not
push
inc
sbb
ficoml
fisubs
or
and
loope
ret
lods
into
out
xor
out
imul
adc
mov
ja
testl
int3
mov
mov
xor
loop
jbe
add
or
push
mov
mov
dec
iret
cmp
dec
add
mov
fmul
inc
scas
icebp
cmp
dec
add
pop
lcall
mov
jbe
xor
int3
mov
dec
aaa
out
test
pop
hlt
js
push
push
add
cmp
out
xchg
dec
push
xchg
scas
push
cli
int
les
arpl
mov
mov
mov
mov
xlat
jnp
mov
or
jns
push
cli
jmp
popl
xchg
add
outsb
inc
aaa
ret
mov
ljmp
fcoms
mov
jge
cmp
cmp
pop
xor
iret
loop
ja
and
std
call
lret
and
or
clc
inc
lahf
push
cmp
shlb
cmpsl
mov
cli
leave
fadd
mov
imul
mov
sbb
sbb
ret
ss
int3
incb
call
fisttps
fwait
xchg
mov
je
jb
pop
jnp
lahf
shr
insl
cmp
cs
sub
push
iret
lods
xchg
int
jg
jo
mov
jp
insb
daa
mov
mov
fwait
push
push
ds
mov
mov
lret
int
outsl
mov
out
jmp
mov
mov
in
inc
in
push
dec
sbb
cs
ficoml
adcb
dec
int3
xor
jp
rcrb
cli
adc
mov
into
lods
mov
xchg
movsl
mov
inc
and
xchg
shl
cs
dec
or
lods
lcall
and
shlb
xchg
mov
xor
fdiv
mov
and
jbe
mov
sbb
adc
in
lock
hlt
adc
jle
add
xchg
leave
inc
dec
push
lret
add
mov
inc
out
lea
addr16
pop
lcall
sti
cmp
sub
or
push
push
repnz
and
aas
es
xchg
jg
shll
hlt
inc
inc
or
jb
ss
mov
jecxz
jle
in
clc
seto
cmc
loop
push
call
cmc
faddp
shr
mov
dec
imulb
loopne
ds
jb
pop
mov
sbbb
mov
xor
inc
or
cwtl
xchg
ja
nop
mul
cmp
mov
mov
int3
cmp
cmpsb
xchg
inc
aaa
roll
fadds
mov
int3
cmp
ret
xchg
inc
out
out
cmp
sbb
xchg
mov
mov
arpl
mov
or
mov
aam
mov
adc
and
adc
fldl
fstpl
rclb
imul
test
cmc
xchg
mov
fldt
mov
out
out
xchg
mov
mov
vmovdqa
jp
mov
add
mov
notl
cmp
push
jp
mov
mov
enter
mov
mov
fidivl
mov
gs
repz
mov
adc
pop
mov
insl
fwait
cli
int3
movsb
mov
push
cli
push
mov
js
icebp
pop
adc
and
add
pop
add
pop
dec
testb
andl
nop
and
testl
add
imul
inc
iret
ljmp
mov
fstpt
inc
jp
xchg
sbb
adc
leave
xor
lahf
pop
mov
push
popf
push
cmp
or
clc
cmpsb
lret
inc
mov
jmp
dec
das
pop
push
mov
jge
lcall
pushf
outsb
sub
pusha
inc
shl
ficoms
push
fisubrs
and
fsubl
lcall
test
sub
in
dec
add
adc
fdivs
loope
jne
adc
add
clc
cmp
fdivrs
ret
pop
jbe
dec
dec
jnp
pop
inc
into
xor
sbb
add
mov
testl
cmp
add
lret
inc
ret
aam
sbb
scas
imul
inc
daa
mov
pop
ss
mov
push
mov
xor
lods
add
add
mov
adcl
sub
loope
mov
mov
hlt
xchg
lahf
aad
or
fildll
push
and
cmp
es
rorl
sahf
iret
pop
ret
aaa
push
jg
mov
lcall
ljmp
mul
add
push
lcall
mov
ss
js
insl
fldt
push
gs
push
cmpsb
add
add
cmpsb
js
inc
and
jns
pop
out
xlat
cmc
cmp
movsb
cltd
das
inc
imul
stc
add
mov
movsl
fimuls
jae
jle
iret
inc
sub
es
fcoms
dec
push
or
loopne
push
dec
sbb
adc
out
push
mov
pop
roll
dec
sar
mov
push
fimull
push
jbe
pusha
mov
leave
sbbb
xorb
or
jecxz
movsb
into
push
mov
loopne
das
mov
mov
mov
sub
sahf
mov
jbe
insb
add
cwtl
in
shl
sub
pop
mov
out
lcall
mov
cltd
pop
mov
into
lret
movl
mov
cmp
rcll
ror
or
or
mov
push
outsb
pop
andl
push
jg
pushw
addr16
call
pop
mov
aam
xor
ret
sbb
loope
pop
aam
dec
push
loop
lds
push
int
mov
loop
fmuls
sbb
xchg
inc
xchg
fsubrs
dec
pop
push
fcoms
mov
popa
enter
push
shll
pop
es
lcall
xchg
cmp
xchg
repnz
dec
mov
nop
cmp
dec
iret
cmc
push
xchg
xchg
loop
data16
pop
ficoml
lods
stos
lret
fmuls
ret
pop
pusha
cmp
mov
mov
adc
cmpb
dec
stos
int3
add
movsb
out
sti
dec
test
or
cmp
shl
rorb
sub
cmpsl
push
cmp
or
inc
int3
je
scas
cmp
fnstcw
loopne
jle
data16
adc
imul
add
pop
cmp
mov
mov
fisttpll
hlt
fiaddl
scas
aad
mov
push
and
cmp
lcall
popf
sahf
mov
ss
mov
shll
pop
andl
mov
test
leave
movsl
pop
xchg
jmp
mov
inc
dec
cs
dec
inc
hlt
xlat
and
sahf
or
push
dec
mul
stos
xchg
sub
sbb
int3
or
jle
mov
popf
cli
aaa
mov
xor
cmp
jbe
out
in
repnz
mov
xchg
mov
sbb
mov
loopne
inc
test
pop
xchg
push
cli
cmpsl
in
mov
mov
cld
divl
repnz
push
pushf
xchg
mov
fxch
into
xor
lahf
loopne
push
cmp
cld
sub
mov
pop
arpl
lcall
stos
sbb
fcmove
mov
fcomp
mov
sub
mov
cmp
decl
iret
lret
or
bound
mov
imul
adc
sahf
mov
sti
lock
pop
mov
das
rclb
sahf
ss
cmp
add
mov
daa
xlat
push
or
imul
cmpsb
pop
jne
test
or
push
mov
add
pop
mov
cmp
jbe
inc
pop
push
repz
idivb
pop
cmpsb
and
or
into
insl
nop
bswap
andb
shll
and
sub
or
out
mov
fdivr
xchg
inc
sbb
or
push
pop
adc
test
clc
mov
in
cld
cmpb
fstl
add
mov
push
lods
in
rolb
scas
negl
push
in
mov
gs
ficoms
aam
jns
jecxz
adc
dec
lods
sbb
push
roll
test
xchg
rcll
loopne
ds
icebp
mov
outsb
push
scas
sahf
dec
scas
loop
les
xor
and
mov
sarb
ds
aaa
js
sbb
fisttpl
data16
ret
cwtl
adc
pusha
add
sbb
cmpsb
orb
outsb
aaa
int
inc
cmpsl
xor
mov
sub
loope
decb
in
loop
jg,pn
movsl
adc
inc
jbe
mov
and
aas
push
jl
mov
cmp
gs
fadds
mov
push
mov
aas
scas
mov
das
mov
aas
rclb
fst
movsl
xor
mov
add
lret
xchg
add
jbe
lods
ja
jp
mov
loope
push
fcomps
les
pop
js
or
mov
inc
aam
not
adc
test
adc
add
pop
js
xchg
lret
ss
cs
in
mov
push
in
dec
call
sub
cmp
scas
xor
jp
jp
int3
stc
fnstenv
out
sub
out
or
ret
cmp
xchg
dec
push
pop
nop
mov
iret
pop
ss
je
lret
mov
mov
divl
iret
lea
pop
fnsave
cli
mov
xchg
jb
lcall
mov
lret
xor
shlb
add
mov
int3
insl
sbb
hlt
out
jmp
ficompl
sub
js
repz
lcall
xor
stos
dec
sbb
add
pushf
mov
push
inc
or
cmp
and
rcll
rcll
shlb
sbb
into
insl
divb
dec
imull
fmull
or
adc
jae
in
stos
xor
jg
das
mov
sar
inc
aam
js
je
pop
sbb
icebp
cmp
loop
mov
fstp
jne
pushf
dec
mov
adc
lcall
dec
sbb
fcom
fcompl
decl
fisubrl
bnd
cmp
jbe
jge
lcall
pushl
jno
xchg
push
in
icebp
mov
divb
jae
push
enter
sbb
hlt
xor
cli
jbe
pop
xor
jp
call
mul
add
pop
aas
push
lea
ret
aad
push
sbb
lds
arpl
in
shrb
dec
cmpsb
add
mov
mov
leave
ss
insb
jo
loope
ret
in
leave
push
cmpsb
mov
lcall
pop
arpl
mov
imul
rol
jbe
aam
mov
lcall
test
or
clc
push
out
test
cltd
movsl
out
adc
lock
adc
gs
cmpsb
rolb
jmp
jle
mov
insl
sbb
xor
ret
jns
pop
fbld
inc
aas
int3
inc
notl
fwait
xchg
shl
addr16
inc
add
pop
lods
push
lcall
not
push
sub
jo
mov
cmpsw
les
pop
jle
cwtl
popf
xchg
mov
dec
rorb
ljmp
mov
add
test
stc
sbb
adc
push
mov
and
mov
test
addr16
sub
cmp
aaa
test
pop
mov
dec
pop
mov
add
or
mov
ss
dec
les
add
mov
xchg
outsl
cmp
xor
fistpl
and
cld
iret
cli
js
xor
mov
mov
in
mov
add
aaa
rol
and
ret
movsl
pushl
add
movd
into
leave
cmpsb
cmp
cli
push
jbe
sbb
lret
scas
sub
xchg
and
into
inc
lea
ret
push
xchg
lret
arpl
mov
push
leave
js
lret
in
icebp
sub
push
repnz
lock
mov
data16
xchg
stos
adc
push
int3
test
ficoml
pop
ret
push
mov
and
and
inc
mov
xchg
xor
mov
xchg
inc
push
std
in
mov
jae
shr
mov
jmp
and
mov
cwtl
and
cs
add
insl
out
rclb
cmc
imul
jmp
movsb
push
mov
cli
sbb
mov
mov
or
cmp
xchg
and
mov
sub
and
mov
mov
push
test
in
pop
cmpsb
adc
data16
mov
dec
push
lods
ret
mov
je
pop
sbb
cli
int
cmpsb
outsb
mov
xchg
mov
outsb
into
jbe
into
dec
icebp
fwait
adc
les
fbld
lret
subb
mov
data16
leave
int
out
daa
inc
mov
xor
push
push
repnz
ret
push
xor
mov
mov
sub
lds
add
jo
mov
lds
test
je
mov
lds
ja
add
out
outsl
aas
ret
mov
mov
push
push
fidivrs
dec
sub
add
dec
jbe
mov
pop
xchg
mov
sbb
jbe
sbb
push
and
xor
adc
mov
jmp
mov
test
sahf
jp
movsb
jns
dec
mov
and
xor
xor
rorl
scas
fidivl
repz
mov
cli
outsl
mov
or
mov
js
fst
rcl
jns
mov
stos
inc
push
fdivr
lds
rcrb
repnz
jmp
repnz
out
adc
xor
add
pop
sbb
push
adc
stos
push
push
mov
repnz
mov
sub
add
mov
dec
xor
jle
mov
scas
fcmovnbe
adc
xchg
int
fidivrs
mov
inc
mov
movb
sbb
mov
rcrb
into
ds
xor
scas
dec
aaa
lds
pushl
stos
cmp
jno
cmpsb
sbb
pop
pop
lods
cmp
xor
popa
lock
mov
fidivl
not
test
dec
adc
ljmp
lretw
scas
pop
out
xchg
cmpsb
shlb
repz
mov
xchg
cmovo
stos
mov
jne
leave
pusha
ds
push
adc
push
jg
xchg
mov
ds
rcl
inc
aas
fwait
mov
sbb
cs
fcomip
add
mov
mov
add
or
cmpsb
mov
rcrl
movsl
sbb
mov
mov
dec
pop
fcoms
lcall
or
into
sbb
lahf
cmp
pushf
sub
clc
cmpsb
mov
sub
ja
int3
fxch
inc
fs
adc
aaa
cwtl
leave
out
sbb
pusha
out
js
push
movsl
cwtl
sbb
leave
cld
hlt
imul
call
xchg
sarl
xchg
stos
jp
mov
mov
fnstsw
sub
enter
pop
xchg
fadd
jecxz
mov
clc
loopne
inc
cmpsb
sarl
iret
inc
pop
lahf
out
mov
inc
aad
sub
ss
add
rclb
mov
dec
ret
test
std
mov
je
mov
jbe
pop
ret
imul
shrb
adc
mov
fildll
or
xchg
mov
test
jp
pop
push
aaa
int
xchg
mov
sahf
mov
push
lret
ljmp
mov
push
push
push
adc
scas
loopne
mov
pusha
dec
es
pop
cmpsb
ror
sbbl
cmpsl
jb
lret
test
leave
popf
pusha
int3
mov
scas
xchg
jle
cmp
notb
xor
xchg
imul
push
mov
push
adc
cli
mov
lea
int
jae
cmp
pop
dec
inc
sub
das
pop
cltd
adc
mov
test
jle
insl
ja
imulb
add
push
andl
int
jno
mov
in
xchg
dec
or
inc
lcall
addr16
sahf
inc
out
xchg
xor
bound
add
pop
ds
sbb
xchg
and
xor
int3
add
inc
ss
popf
mov
loope
lea
and
add
into
mov
lret
into
shl
shl
mov
xor
mov
add
xchg
dec
mov
insl
ret
lods
adc
inc
mov
cwtl
rcrl
jbe
mov
mov
rolb
ljmp
push
test
mov
andb
pop
iret
shrl
fbld
fsubrs
add
shll
aaa
rorl
jle
or
adc
mov
jo
cs
mov
pop
xor
mov
jb
sarb
or
sub
xchg
notb
inc
imul
ret
dec
cmp
jbe
push
lcall
add
pop
mov
inc
lret
jecxz
fsubrs
scas
data16
and
xchg
push
pop
mov
sbb
push
idiv
or
fstl
out
enter
sbb
sub
loop
pop
int3
clc
lcall
call
in
ja
sbb
push
cmp
dec
sub
testb
into
out
add
aaa
pop
scas
or
adcb
mov
push
cmpsb
pop
mov
inc
jle
call
cmpsb
jge
nop
je
movsb
out
jbe
mov
dec
push
divb
lds
aaa
sti
cmp
data16
xlat
jg
mov
out
clc
pop
xor
fstpl
out
xlat
enter
xchg
imul
scas
sub
cmp
iret
sarl
pop
into
xlat
mov
xor
lcall
mov
push
iret
das
jo
add
mov
iret
cmp
lock
stos
int
adc
inc
sti
mov
add
cltd
ds
std
cmp
mov
xchg
enter
test
mov
rolb
dec
mov
lret
lds
out
xchg
into
pusha
pop
fists
jo
aaa
mov
loopne
repnz
and
cmpsl
loop
or
dec
mov
pop
adc
push
shlb
add
mov
jno
xchg
pushf
sarb
cmp
xchg
loopne
push
inc
test
mov
in
cli
in
mov
aad
jbe
mov
repz
gs
sti
faddl
jmp
jb
aaa
inc
pop
jmp
push
repnz
mov
jb
push
xor
mov
jl
cmc
push
jmp
sub
mov
push
sub
daa
push
mov
add
mov
idivb
pop
mov
dec
fiadds
scas
jo
pop
fnstenv
ja
inc
arpl
mov
ret
addr16
and
das
les
push
mov
push
sub
enter
and
mov
xor
push
mov
or
mov
sbb
mov
dec
mov
popf
aad
and
mov
xlat
inc
out
les
rclb
push
daa
push
call
sbb
push
repnz
mov
add
int
out
imul
fidivrs
or
mov
inc
inc
mov
xchg
jbe
pop
mov
int3
lea
repnz
jb
xor
dec
xor
xchg
lods
das
dec
push
cmp
adc
pusha
cmpsb
dec
std
inc
mov
nop
add
dec
es
leave
test
sbb
into
in
out
inc
dec
test
mov
into
pop
fildll
dec
sarb
mov
lods
pop
ficoml
cmp
out
int
cltd
mov
mov
mov
into
jne
fdivs
and
mov
lods
in
ss
loop
adc
idivb
fidivl
xchg
out
jo
jae
sahf
popf
jno
jp
mov
movsb
sub
mov
xchg
push
lcall
cmp
mov
add
jmp
xor
or
mov
dec
mov
into
jb
and
cmp
sbb
sbb
iret
xor
dec
fildl
pop
add
mov
mov
jmp
sub
fcomps
push
sub
mov
lcall
sbb
fsubr
xor
and
mov
and
mov
adc
out
iret
daa
call
into
dec
cli
jecxz
cmp
cmpsl
mov
outsb
pop
jns
dec
push
decb
pop
pop
notb
mov
adc
inc
sub
mov
cli
ret
lds
movhps
andb
jnp
xchg
jne
cmpsb
stc
cld
int
jae
mov
aad
aaa
xor
lret
icebp
out
movl
push
dec
cli
or
xchg
cmp
pop
idivb
jne
push
pslld
jg
add
loopne
lret
call
neg
pop
push
ds
cmpsb
or
out
shrb
xchg
ja
push
cmpsb
cwtl
fists
and
insb
sub
jb
int3
mov
mov
call
sbb
fistl
cwtl
add
lret
dec
or
popf
mov
fadd
aam
jecxz
mov
adc
sbb
push
fdiv
mov
push
mov
adc
add
rcl
and
mov
jne
insl
cmp
fisttpl
xor
cli
cmpsb
ret
rcll
xchg
mov
add
inc
les
fnop
test
not
xor
jae
cmp
rorl
sub
movl
and
je
mov
mov
pop
cmpsb
cmp
cmp
mov
mov
inc
jne
sbb
inc
cmp
fldl
ljmp
lods
push
xor
fdiv
cld
out
ret
insb
int
pusha
fisubl
test
sub
cmp
mov
inc
fsts
pop
sub
out
pushf
cmpsb
lret
lods
inc
fsubs
aaa
inc
sbb
add
retw
xchg
nop
sub
push
xchg
mov
popa
js
loopne
pop
mov
fsubrl
cmp
dec
mov
add
ret
iret
mov
adc
cld
mov
pop
ja
xchg
fadd
rcrl
mov
jge
xchg
sti
sbb
sbb
incb
jle
mov
dec
mov
adc
mov
mov
cmp
cli
or
push
cmp
outsl
cli
mov
xor
pop
pusha
or
lds
mov
lret
mov
mov
cmpsb
pop
push
pop
js
pminub
shrl
mull
xor
movsb
je
movsl
xor
xor
xchg
sbbl
cwtl
push
out
sti
dec
movl
and
dec
mov
addr16
imul
fcmovb
sarl
xor
xchg
scas
pop
inc
jae
ljmp
adc
xchg
outsb
stos
dec
push
popf
sbb
std
pop
clc
imul
lret
sbb
rclb
jmp
leave
inc
jecxz
decl
incb
mov
jl
or
clc
loopne
mov
mov
xchg
inc
sbb
sbb
divb
cld
sbb
push
jmp
les
and
pop
lea
jp
int3
divb
inc
pop
mov
xor
fcom
jecxz
sbb
mov
or
int
notb
in
out
cmp
enter
sahf
incb
xchg
mov
dec
pusha
or
les
lret
pop
aaa
aas
imul
ficompl
in
aaa
mov
sbb
int
xor
inc
push
loopne
repz
cmc
ret
movsl
cwtl
xorb
pop
outsl
pop
add
mov
stc
pop
arpl
xchg
add
xor
xchg
push
ret
insb
fs
xor
jnp
cmc
push
jb
jge
ficoms
adc
or
lock
ror
xor
roll
mov
mov
fucom
das
xchg
inc
fldl
sbb
sahf
fldz
inc
pop
fsts
enter
mov
scas
ds
mov
out
add
inc
sub
lret
adc
push
fimuls
dec
nop
adcb
pop
and
mov
pop
jg
pop
mov
adc
pop
xchg
jp
ds
cltd
inc
das
loop
mov
and
pop
pushf
or
lahf
scas
repnz
xchg
movsb
mov
inc
push
pop
mov
scas
stos
cli
in
fucom
push
mov
xor
jp
xchg
lret
orl
into
jnp
pushf
rorb
mov
mov
mov
je
je
jbe
pop
mov
sub
inc
mov
call
xor
mov
inc
inc
add
mov
int3
sub
cld
ret
mov
inc
jae
xor
mov
inc
lods
shrb
jmp
dec
mov
push
inc
ret
sub
xchg
mov
shl
fistl
adc
sbb
xchg
mov
mov
sub
push
das
xchg
loop
enter
xlat
xchg
testb
jmp
mov
aaa
mov
fdivrs
pop
jne
mov
lahf
or
int3
sahf
push
cli
pop
pop
aad
mov
xor
bound
fucomi
std
scas
cmc
cmpsl
test
mov
fimull
mov
adc
loope
enter
jbe
mov
arpl
xchg
xchg
xor
push
sahf
or
add
and
jmp
cmp
sbb
mov
lret
lcall
sbb
jbe
push
mov
xchg
lds
pop
and
add
rcrb
in
add
fcomps
mov
adc
ds
sub
iret
sub
movb
lahf
mov
repnz
jecxz
mov
sbb
scas
daa
mov
jne
out
adcb
ds
xchg
pusha
sbb
mov
fwait
sbb
loopne
aaa
fcmovnb
pushf
cs
and
iret
lock
or
rcr
aas
cli
cmpsb
popa
sub
lret
pop
mov
out
add
ljmp
outsb
and
fistl
inc
pop
mov
pop
and
push
lret
xor
push
in
mov
stos
push
adcb
mov
clc
pop
or
mov
pop
daa
push
ds
hlt
int
ja
mov
ss
push
fisubrs
ss
xor
jle
pop
aaa
vmulss
les
iret
and
adcb
mov
test
jp
lods
sbb
inc
push
not
inc
push
mov
loopne
cmp
and
dec
mov
inc
xchg
cld
mov
adc
stos
sub
xchg
nop
jne
ljmp
xchg
mov
js
shlb
test
leave
das
cltd
jmp
adc
cmpl
data16
call
mov
or
test
enter
js
outsl
in
mov
xchg
cmp
filds
xor
xor
mov
pop
lds
dec
jl
mov
push
movsb
js
rcrl
or
mov
or
xlat
rcrl
cmp
lret
ficoml
adc
pop
xor
sub
aaa
adc
mov
gs
dec
pushf
in
push
ss
add
or
cmp
jo
xorb
lods
cli
push
sub
add
xchg
fisubs
ficoms
iret
add
gs
out
fmull
xchg
std
push
cli
mov
lds
data16
fs
push
sub
sub
scas
lret
in
stc
ljmp
shrb
sbb
push
dec
push
mov
cmpsl
in
sub
jbe
mov
movl
mov
push
xor
enter
gs
mov
adc
cltd
fidivrl
insl
xor
int3
cld
add
cmp
inc
mov
divb
arpl
insl
pop
sarl
jl
mov
subl
xchg
ror
xor
out
sarl
mov
and
cmp
xchg
push
fwait
sub
outsb
out
add
shlb
in
pop
add
mov
cmpsl
sarb
mov
cs
aas
inc
mov
sub
sarl
xor
cmp
push
daa
mov
and
insb
mov
ja
xor
shl
loopne
imul
in
push
pop
pushf
sbb
cs
xlat
sub
xor
and
mov
jl
inc
dec
int3
add
inc
jo
les
adc
push
stos
dec
enter
pop
mov
jge
es
cli
inc
stc
mov
xchg
cmpsb
pusha
mov
call
fisubrl
xchg
fdivr
mov
jmp
fwait
cwtl
jp
cmp
xor
pop
inc
pop
push
nop
lret
push
fcompl
mov
or
mov
sahf
sub
dec
mov
xchg
hlt
adc
lcall
sub
xchg
adc
ret
iret
mov
sbb
add
jle
mov
in
das
add
mov
ss
aaa
sbb
add
mov
outsb
gs
popf
jle
jp
jecxz
dec
fmull
jp
pushl
xchg
mov
jbe
dec
in
rdpmc
adc
scas
ret
cmpl
jbe
pushf
xor
and
xchg
popf
add
xlat
sbb
mov
add
mov
dec
pop
add
push
fsubs
cmpsw
mov
lods
lea
cmc
inc
bound
xchg
sbb
mov
push
xor
xchg
cs
mov
ds
cmpsb
jns
sbb
loopne
div
xchg
fsubs
scas
es
pop
fisubl
in
imul
xor
xchg
scas
xchg
push
jmp
fcmovnb
xor
and
mov
pop
ljmp
mov
sbb
mov
push
jo
cmpb
mov
in
jg
mov
or
xchg
push
leave
mov
mov
shrl
idiv
pop
gs
ds
ret
mov
adc
sub
mov
loope
test
add
dec
inc
xor
es
pusha
adc
mov
bound
dec
add
mov
ja
xor
add
scas
mov
dec
and
add
cltd
into
add
mov
aas
repnz
fmull
sub
and
aam
sbb
adc
mov
dec
mov
cs
mov
fidivl
inc
sahf
add
xchg
cwtl
add
aam
outsb
ljmp
mov
fsub
pop
inc
jbe
push
adc
sbb
or
adc
jp
jae
mov
xchg
shll
loop
cli
cli
sbb
mov
jge
pop
mov
push
ljmp
dec
mov
push
lea
mov
sub
adc
or
push
sarl
mov
leave
inc
sub
je
stos
pop
mov
aad
mov
mov
add
pop
mov
fs
sbb
jmp
hlt
leave
jl
mov
push
jmp
jl
mov
pop
jecxz
out
mov
fidivs
ret
sahf
fsubrl
dec
cmp
pop
add
jg
mov
jo
mov
jae
outsb
jp
mov
xor
push
aas
rcll
pop
pushf
sub
push
jnp
outsb
add
xor
dec
in
pop
es
push
pop
adc
lret
mov
xor
divb
int3
fnstsw
scas
repnz
push
imul
push
dec
or
and
inc
pop
test
loopne
mov
aam
or
mov
test
sbb
repnz
pop
divb
push
xor
cltd
mov
inc
ficoms
lcall
roll
xor
xlat
mov
adc
ret
dec
ja
pop
hlt
inc
xchg
test
mov
pop
mov
popa
loope
jp
es
out
inc
cmp
xchg
mov
lock
jp
jle
mov
mov
jo
jle
mov
mov
and
shlb
pop
pop
mov
lds
inc
fcomps
aas
lret
lcall
into
mov
adc
sbb
jb
sub
mov
sub
ja
mov
aad
ds
hlt
fdivrs
jecxz
test
add
fs
dec
jecxz
sub
cs
jl
outsl
subl
das
test
mov
test
inc
inc
mov
lock
mov
adc
cmpsl
lret
inc
hlt
dec
pop
fimull
ds
fsin
mov
ja
iret
stos
aad
or
mov
xchg
hlt
mov
xchg
js
sbb
mov
xor
hlt
sub
add
es
imul
jmp
pop
leave
mov
push
jb
out
xchg
fcmovb
iret
dec
out
rorb
insl
or
xchg
pop
mov
inc
push
lock
rcrl
adc
int
pop
push
adc
pop
and
int
pusha
ds
sub
jo
cmpb
dec
xlat
push
cmp
flds
rorb
rclb
stc
int
stos
dec
loope
adc
ds
xchg
ret
aad
into
pop
ds
stos
xchg
push
lock
shll
stos
into
into
leave
pushf
enter
pushw
sbb
dec
push
testb
shl
stos
stos
xlat
leave
dec
or
lods
sub
ds
xchg
add
dec
xchg
mov
and
inc
push
mov
lret
cli
int3
mov
pushf
and
xchg
enter
bound
lods
dec
push
andb
ds
push
arpl
sub
push
mov
mov
iret
sbb
mov
cltd
loope
dec
mov
inc
cmc
xor
mov
push
mov
push
aaa
mov
loope
mov
pop
jne
shlb
mov
int3
leave
clc
js
mov
push
or
dec
bound
movsl
cmp
imul
fadds
mov
xor
mov
xchg
lds
pop
pcmpeqd
and
adc
addr16
mov
cld
add
aas
and
sarb
or
in
out
ljmp
push
push
scas
fnsave
out
mov
lcall
inc
aaa
push
das
cmp
mov
lcall
lret
adc
shrb
dec
mov
imul
outsl
adc
test
fst
push
sub
mov
cmp
daa
jo
mov
and
xchg
lock
out
or
data16
inc
adc
ljmp
push
cmp
sub
lret
js
mov
mov
mov
out
scas
pop
mov
adc
rolb
push
into
push
sahf
adc
cltd
cmpsb
sarb
aam
leave
cmp
testb
xchg
pop
mov
mov
cmp
jg
sub
scas
shlb
mov
push
jbe
loope
mov
ret
leave
adc
mov
inc
lahf
mov
lret
ficoms
out
and
pusha
cli
jle
int3
or
movsl
int
mov
and
add
mov
mov
ja
adc
mov
mov
int3
jno
repz
imul
mov
dec
or
xchg
int3
cmpl
movsb
xor
mull
rorl
incb
aaa
jp
je
sub
push
xlat
add
xor
loopne
mov
mov
mov
pop
add
adc
enter
jmp
out
dec
sbb
add
push
jne
or
scas
and
xchg
mov
and
into
push
xchg
jbe
lret
push
jmp
mulb
cmp
adc
mov
inc
test
loopne
mov
sahf
xor
shrb
loop
out
rcll
hlt
cmp
inc
cli
lea
adc
cs
ds
movsb
iret
jne
sub
jns
sbb
fisttpll
pop
into
pop
add
sahf
sub
rcll
rolb
ljmp
mov
hlt
dec
fidivrs
out
daa
mov
ja
pusha
mov
out
pop
in
mov
jno
cmpsb
int
mov
mov
mov
lret
lcall
fidivrl
or
iret
mov
cmp
xor
push
sbb
pusha
cwtl
xchg
mov
pop
xor
into
lods
neg
sahf
mov
dec
sub
xchg
inc
scas
and
loope
outsl
nop
mov
mov
idivb
ficoms
mov
sti
push
xor
int
xchg
out
rcl
mov
pusha
xlat
cmp
sarb
in
aaa
ds
pop
clc
push
push
divb
icebp
mov
pop
into
pop
ja
adc
leave
out
mov
les
sahf
bound
jbe
shrb
lock
ret
mov
iret
fwait
push
dec
dec
mov
out
out
nop
add
sub
push
xchg
adc
repz
mov
pop
nop
mov
gs
cli
sarl
adc
inc
xor
sub
adc
stos
mov
or
decl
fsub
fdivrl
bound
push
xchg
cmp
out
or
bnd
xchg
ret
inc
inc
add
adcl
mov
hlt
aad
cli
pop
push
shlb
mov
pop
aad
sbb
cmp
int
clc
mov
aas
inc
loope
pop
mov
adc
enter
inc
add
dec
jmp
inc
jb
lods
cmp
test
jp
add
sti
cmp
mov
sub
cli
es
leave
mov
enter
aas
push
xlat
mov
cltd
mov
mov
divb
mov
sub
mov
popf
pushf
jae
es
xor
out
mov
mov
push
cmp
mov
pushf
mov
stos
fimuls
pop
adc
loopne
fidivrl
mov
lret
cld
daa
mov
vmovaps
cli
bound
mov
fsubl
mov
mov
mov
loope
ja
jmp
enter
jno
cwtl
cli
mov
mov
inc
ss
call
adc
mov
rclb
or
fisubrl
jnp
mov
cs
into
xchg
mov
iret
and
mov
shrl
xchg
xor
lods
ljmp
add
mov
aas
jp
lcall
cmp
mov
mov
mov
stos
cmp
test
xor
inc
add
scas
mov
andb
or
cli
cmc
cmpsl
and
cs
or
repnz
ds
mov
lock
mov
stos
mov
fdivs
inc
mov
sbb
jbe
xchg
dec
xor
pusha
sti
mov
pop
adc
mov
pop
dec
sbb
cli
adc
ud0
mov
sahf
inc
aam
adc
mov
out
call
in
stos
and
mov
cmp
mov
mov
mov
jl
imul
pop
imul
shrl
cltd
cs
popa
xchg
mov
mov
cld
je
push
jae
push
mulb
shlb
gs
aad
add
jo
sub
andb
mov
mov
add
mov
add
imul
push
push
enter
dec
outsb
int3
mov
dec
pop
test
scas
lret
push
stc
xchg
fbld
xchg
adc
lret
mov
pop
push
rorb
lock
shrb
call
movsl
inc
enter
out
je
jecxz
lahf
ffree
or
jbe
mulb
push
add
dec
add
sub
scas
lcall
rol
ret
adc
and
jecxz
daa
sub
repnz
inc
pop
mov
push
jnp
rep
stc
cmp
mov
lcall
sti
adc
push
xor
add
je
push
cs
pop
int3
xchg
popa
ds
idivb
or
inc
mov
sub
mov
dec
push
xchg
mov
xlat
adc
jg
insl
mov
jb
inc
fists
ret
ljmp
push
jp
mov
shl
les
js
xchg
mov
push
pop
jae
xchg
ss
fldt
ja
jp
fistpll
cmpsl
add
mov
and
cmp
sbb
mov
out
sub
sbb
enter
aaa
sub
mov
pushf
sub
adc
testb
ffreep
jmp
and
mov
and
inc
jnp
clc
sbbb
push
jle
mov
icebp
insl
and
mov
sbb
jg
jo
mov
enter
sub
xlat
mov
fistpl
add
jae
repnz
cli
push
push
push
les
cs
sahf
mov
jl
lods
into
inc
divb
mov
js
lcall
cmp
aas
lret
es
rcll
mov
repnz
cli
mov
cli
int3
aam
jp
mov
scas
xor
stc
inc
ret
mov
sysret
dec
sbb
xor
sub
movsb
adc
or
lock
mov
imul
mov
fisubrl
mov
or
mov
mov
push
lcall
es
repnz
fld
shrl
rcr
sbb
mov
bound
lret
dec
cmp
movl
jbe
xor
subb
mov
or
lcall
ret
xor
xchg
nop
scas
pop
adc
lods
xchg
jmp
lea
movsb
out
shll
push
in
in
pop
mov
inc
jo,pn
and
add
fs
xchg
out
movsb
ds
hlt
mov
sub
test
leave
sarl
cli
push
insl
rcrl
fldcw
lret
ja
mov
xor
icebp
mov
popf
testb
movsb
ds
das
lret
sbb
xor
mov
pop
scas
shll
enter
fcmovnu
es
push
mov
mov
mov
mov
dec
inc
push
push
cmp
or
push
into
pop
sarl
aad
ljmp
xchg
imul
pusha
dec
clc
or
xchg
cli
sbbl
fcmovbe
mov
lret
push
sysexit
ja
testb
ds
rclb
xchg
mov
mov
push
push
mov
jb
test
pushf
push
pop
jle
enter
and
leave
into
xchg
dec
repz
hlt
xor
adc
mov
and
ret
jne
mov
mov
and
mov
mov
xor
ljmp
jns
and
in
arpl
mov
cmp
repnz
mov
pop
mov
inc
cmpb
jae
dec
shr
mov
cli
mov
test
pop
sbb
jo
cs
inc
dec
lds
and
icebp
inc
aaa
sub
pop
adc
xor
sahf
lret
mov
stc
mov
fbstp
xchg
js
sbb
stc
or
mov
pop
dec
push
cwtl
out
loop
add
jb
idivl
lret
enter
bound
ret
es
xor
inc
mov
dec
rol
push
aas
fstpl
call
rclb
fwait
clc
sbb
lret
push
mov
and
xlat
mov
pop
add
inc
xchg
mull
ja
jecxz
pop
push
cs
and
mov
fdivrl
fdivs
inc
mov
push
and
mov
inc
and
and
push
ds
aad
xlat
nop
std
je
mov
push
inc
pop
adcl
adc
mov
mov
js
in
pop
fidivs
ret
adc
lock
daa
mov
into
and
mov
or
pop
adc
pop
xchg
or
lods
sbb
cld
jae
xchg
pop
or
std
xor
add
dec
xchg
jge
ficoml
adc
inc
sub
int
jle
mov
fwait
enter
jecxz
cmp
in
cli
jbe
sarb
lock
or
scas
adc
data16
mov
das
movw
pop
lcall
cmpsb
xlat
insl
dec
ss
fistl
out
jmp
enter
in
in
sbb
mov
notb
mov
mov
mov
into
push
xchg
mov
sti
das
xor
pop
inc
cli
sub
push
jae
or
idivb
mov
cmpb
lret
adc
adc
adc
mov
ret
ss
or
dec
xor
push
dec
mov
pmaxub
out
push
sti
scas
inc
cli
mov
hlt
sub
out
cli
mov
push
mov
mov
lods
das
mov
dec
mov
adc
lcall
or
rol
pop
push
mov
loop
iret
icebp
mov
xor
enter
popa
rolb
in
add
xor
mov
add
inc
push
cmc
push
out
cmp
fs
jbe
push
xchg
push
jnp
inc
jne
pop
lret
leave
cmpsl
shll
movsl
and
fdivs
or
ja
cltd
loope
pop
or
mov
push
es
ss
js
dec
add
ja
sarb
add
jno
enter
hlt
cli
fiadds
dec
enter
or
out
fisubs
or
lret
mov
ret
push
pusha
cs
iret
lea
test
push
int3
jmp
push
xor
cmp
mov
xor
or
fiaddl
inc
jbe
mov
pop
lea
adc
mov
into
mov
iret
fdivs
mov
add
hlt
shrb
shl
imul
loop
adc
shr
add
sub
pop
in
add
or
inc
jb
mov
fidivrl
xchg
nop
fadd
fnstsw
adc
out
cmpsb
cli
push
fstpt
and
inc
es
xchg
cli
push
mov
cmpsb
push
ds
and
jmp
movsbl
lret
push
push
add
ret
scas
pop
cltd
sub
rol
gs
cli
pop
fidivrl
in
mov
xchg
rol
in
js
inc
inc
add
xchg
dec
call
mov
xchg
pop
es
sbb
cwtl
cmp
shl
hlt
push
data16
sarl
xchg
jp
lock
not
xchg
jns
dec
clc
cmp
cs
xchg
mov
sub
loopne
xor
xor
fiaddl
ja
or
fstpt
out
mov
sub
cmp
mov
rcrl
add
mov
jb
adc
sub
dec
inc
adc
mov
sahf
rolb
lea
sti
adc
outsb
xor
gs
xchg
out
xchg
mov
xor
pop
imul
adc
xchg
adc
adc
jo
mov
nop
xchg
dec
add
mov
mov
into
lock
into
rorb
mov
xor
ret
jle
in
and
out
loopne
mov
fidivl
xchg
out
sbb
lea
int3
ret
into
dec
push
into
idivl
jae
stos
fcoms
cmp
pop
daa
push
add
les
clc
mov
jp
imul
lods
movsl
mov
mov
stos
inc
xchg
mov
cmp
aam
hlt
mov
and
testb
adc
clc
popf
or
shll
sti
movsl
dec
xchg
push
stos
jp
lahf
fnsave
neg
xchg
mov
je
enter
mov
mov
shrl
mov
int
popf
out
cmp
addr16
std
or
mov
in
gs
imul
out
cmpsb
add
push
cli
add
lret
cmpsl
insl
bound
movsb
cmp
lods
inc
movl
lfs
icebp
mov
jo
and
call
bound
push
ret
fstpt
inc
out
mov
mov
lret
enter
popa
push
out
xor
mov
aad
adc
out
xor
lods
xor
shr
ljmp
js
ss
loopne
xchg
es
xchg
iret
sahf
mov
insb
xchg
cmp
sub
clc
lds
cmp
idivb
outsb
xchg
fcom
dec
mov
fistpll
or
cltd
adc
js
adc
fidivrs
mov
mov
pop
cmpsb
imul
cmp
mov
xchg
mov
fsubrs
cs
push
push
and
ds
mov
out
movsb
testb
cmpb
sar
push
and
and
hlt
test
and
inc
je
mov
add
fiaddl
rcr
insb
popf
xor
sbb
and
xchg
out
xlat
mov
sub
test
push
xchg
mov
mov
xchg
xor
icebp
sub
xchg
cvtps2pd
dec
outsb
fdivs
insb
mov
popa
mov
add
jp
sub
cmc
aaa
sbb
jns
adc
sub
lret
mov
cltd
ret
dec
xor
mov
pushf
sub
sub
mov
call
je
mov
push
std
or
inc
add
pop
push
jb
nop
cli
adc
clc
out
sbb
ror
dec
adc
and
sahf
ljmp
lods
aam
and
and
adc
shl
aaa
and
jo
out
ljmp
nop
or
cli
pop
pusha
add
push
pop
pop
rclb
jae
into
ss
cltd
int
and
pop
fidivl
scas
dec
jo
jp
rclb
push
sub
fadds
push
add
sbb
mov
loop
sarl
mov
popf
xorb
mov
stos
cs
mov
ds
adc
out
outsl
add
lds
int
roll
push
stos
push
mov
pop
pop
stc
fdivr
loope
mov
icebp
aaa
inc
pop
mov
and
pusha
out
sarb
jecxz
cld
xchg
adc
ds
fildll
out
aaa
rclb
mov
mov
scas
scas
popf
flds
pop
push
or
push
into
cli
jp
mov
popf
cmp
shrl
inc
jmp
cmpsl
ret
lds
add
jge
out
cmp
iret
stos
jl
ds
cli
xor
rclb
pop
sub
push
cmp
loop
movl
leave
xchg
inc
push
enter
andl
adc
mov
lock
sarb
push
es
inc
mov
or
inc
or
xor
xchg
ffree
sbb
icebp
mov
movsb
fdivrs
fcoms
xchg
mov
add
jne
outsb
call
adcb
lret
add
cmp
ret
repnz
mov
mov
int3
mov
pop
push
mov
loop
dec
sbb
and
repnz
leave
cmp
outsb
push
int
xchg
call
mov
jg
bswap
aaa
jmp
sub
mov
or
mov
adc
lods
fldl
xchg
sbb
mov
xchg
ja
add
add
out
add
hlt
push
enter
int
cltd
scas
mov
inc
es
xchg
dec
mov
shrb
xchg
mov
lds
xor
push
pop
cli
cmp
push
rorb
dec
adc
outsb
and
lcall
int3
mov
pop
fisubs
fwait
ja
xlat
adc
je
movsb
pop
mov
iret
push
mov
test
lock
ds
enter
pop
fiaddl
or
mov
leave
jmp
or
jle
shl
pusha
decb
cwtl
push
fistpl
ficoml
adc
xchg
adc
push
mov
fcmovb
xchg
add
mov
mov
mov
fwait
mov
clc
xchg
cs
mov
mov
out
xchg
int3
ljmp
stc
fists
push
gs
add
enter
divl
loop
addb
in
mov
sar
jle
insb
mov
xlat
scas
mov
xor
lock
adc
loope
xchg
mov
out
sbb
scas
xchg
bound
jo
data16
mov
inc
mov
faddp
mov
les
mov
icebp
adc
pop
push
jbe
xchg
popl
dec
outsb
in
fimuls
imul
adc
pusha
jp
sub
cmp
popa
adc
xchg
frstor
sahf
and
ret
add
mov
cltd
add
test
fdivs
stos
mov
cmp
cmpsl
ficomps
xchg
aaa
xorb
fnstsw
mov
dec
scas
jb
push
push
xchg
imul
adc
leave
jb
xchg
into
dec
daa
add
into
mov
mulb
push
ss
jae
sbb
or
mov
pop
mov
aas
fcompl
jb
add
cwtl
add
push
fadds
fidivrs
call
rcll
fwait
sbb
hlt
mov
pop
jge
into
data16
clc
jbe
ret
or
push
pop
xor
jle
in
mov
mov
cli
cli
add
jns
in
xchg
add
in
idivl
cs
stc
enter
pop
mov
push
shll
ret
mov
push
add
push
sub
xlat
inc
push
pop
sub
ja
push
mov
pop
mov
push
sbb
add
push
in
push
and
push
test
mov
or
cmpsl
xchg
stos
sarl
enter
xchg
inc
pop
or
mov
mov
mov
mov
addr16
push
add
push
cmpsl
outsb
mull
into
mov
xor
jne
ja
mov
cli
lods
int
test
imul
cmp
cmc
out
fcomip
jno
sbb
push
mov
and
lret
adc
cmpsl
or
icebp
out
fdivrl
out
mov
mov
mulb
dec
cli
insl
mov
rcrb
sbb
push
push
add
push
cmp
test
inc
outsl
dec
jne
ds
jns
sbb
ficomps
jecxz
jbe
testb
push
xchg
ret
fisubrl
rorb
add
pop
xchg
in
ss
sub
or
or
mov
jne
js
or
or
dec
loope
jbe
inc
sbb
adc
mov
inc
jmp
inc
pop
xchg
lods
dec
push
out
push
xor
xor
mov
stos
xor
lahf
xchg
sub
mov
out
lret
mov
mov
xor
fistpl
sub
out
dec
repnz
add
xor
lcall
pop
xchg
push
aas
fmull
decb
ss
mov
xlat
dec
sbb
jae
ret
adc
jb
jbe
sbb
push
data16
fcoms
xor
mov
cmp
and
scas
in
jmp
dec
push
aaa
scas
pusha
gs
punpckhdq
jo
cmp
cli
outsb
sarb
js
scas
into
cmp
call
fcmovne
leave
fidivrl
je
dec
scas
xor
fcoml
out
xlat
jo
sub
pop
mov
jo
sahf
int3
mov
jecxz
mov
ljmp
mov
lea
out
jp
inc
setbe
xor
mov
push
fsub
movsb
xchg
outsb
mov
xchg
cli
in
shl
add
repnz
ret
sar
hlt
mov
cmp
test
leave
fnstsw
loope
pop
fiaddl
test
sub
int3
pop
sub
cmp
mov
imul
adc
push
lock
sub
push
es
pop
pop
mov
jp
adc
mov
fimuls
sbb
sub
add
add
data16
pusha
cli
outsl
int3
mov
popf
mov
dec
xor
test
cmp
xchg
inc
xchg
push
mov
cltd
pop
pop
addl
inc
jecxz
and
cli
pop
loopne
add
mov
fadds
lods
cmp
testb
sub
mov
enter
mov
fisubrs
popa
out
or
stos
inc
out
stc
cmpsb
imul
pop
lock
ss
outsl
insl
cmp
mov
mov
cmc
mov
and
loope
out
mov
pop
lcall
roll
loop
cli
inc
rclb
dec
sbb
cmp
orb
fcomp
mov
push
ja
and
leave
fistl
or
mov
mov
mov
sub
push
fldl
dec
loop
dec
ja
push
add
sarl
cmpsb
nop
cmp
adc
out
fcomps
sbb
shll
mov
inc
pop
nop
aaa
xchg
rclb
mov
out
jmp
mov
xor
cmp
aaa
mov
xchg
xor
sbbb
xchg
add
push
sti
stos
xor
and
cli
add
aad
popf
sbb
push
les
pop
or
aas
mov
push
stos
popa
jae
mov
out
loopne
mov
and
ljmp
lock
inc
xchg
not
hlt
cld
push
dec
add
mov
inc
mov
push
dec
lret
sahf
push
iret
mov
aas
mov
sbb
xchg
pushf
mov
shr
rcrl
mov
dec
in
xor
jo
jmp
cmp
xor
lods
shll
daa
enter
xor
int
addr16
pop
jecxz
add
push
mov
loop
push
push
mov
push
lea
inc
fstpl
push
sbb
or
lcall
loopne
dec
inc
adc
mov
mov
pop
jle
hlt
cltd
adc
shrl
xchg
xor
mov
jbe
bnd
push
mov
fidivs
add
sarb
push
hlt
pop
cmp
js
fistpl
es
mov
mov
mov
out
fcoml
rcr
lea
inc
dec
cmpsb
adc
aaa
pop
cs
mov
mov
lret
cli
je
sbb
outsb
ror
xchg
mov
push
loopne
mov
add
jae
or
scas
stos
jne
adcb
xchg
mov
out
cwtl
or
testb
shrl
jbe
pop
sbb
lds
aas
les
ret
mov
pushf
in
inc
mov
adc
into
lock
shll
add
mov
stos
or
add
fidivs
lret
fcmovne
imul
add
push
push
push
lock
xchg
loopne
ds
lds
stc
clc
add
mov
je
mov
mov
enter
xchg
loop
loopne
out
xor
sub
jl
movups
add
mov
xlat
gs
rorb
sahf
or
sub
sbbb
dec
dec
loope
js
out
ds
mov
cli
jne
ret
pop
scas
lds
mov
out
inc
pop
mov
out
pop
xchg
cmpsb
rcr
sub
mov
jne
push
sarl
xor
divb
movsl
inc
loope
inc
data16
push
insl
mov
xchg
push
xchg
test
add
sub
outsb
sbb
adc
cmpsl
sbb
les
xchg
mov
jns
and
fwait
mov
lds
sti
imul
dec
cmpsb
call
rcl
jnp
jb
fadds
rsm
leave
adc
fcomps
idivb
push
jb
loopne
jo
xchg
inc
sbb
out
psubd
dec
scas
les
fidivrl
fidivl
xchg
cmp
mov
fcom
mov
mov
fldt
rcr
shr
mov
cmp
pusha
sub
adc
call
dec
push
mov
xchg
mov
imul
cli
nop
das
test
jno
cli
push
xchg
push
cld
outsb
mov
push
cmp
shll
repz
push
xchg
sub
outsl
adc
sub
enter
mov
mov
xchg
mov
aas
or
out
xchg
pop
cwtl
xor
loopnew
mov
mov
ljmp
sbb
mov
rorl
int3
lret
cmp
push
sub
push
sub
lock
xchg
scas
push
cmp
xor
mov
inc
inc
fdivs
mov
js
mov
jecxz
mov
mov
mov
push
inc
fsts
inc
add
sub
xchg
push
mov
dec
inc
loop
andl
jnp
jle,pt
mov
mov
es
sti
scas
inc
add
push
divb
sar
add
mov
jo
daa
xor
push
or
adc
pop
or
int
mov
push
inc
repz
mov
sub
frstor
insl
and
mov
loope
inc
mov
inc
idivb
pop
jbe
and
ret
cs
clc
ret
aas
sub
popf
cld
push
pop
jle
leave
inc
mov
jae
ret
jbe
mov
or
push
push
cmpsb
test
pop
test
inc
push
nop
roll
in
push
hlt
into
dec
int3
into
mov
mov
xor
lret
inc
mov
mov
shl
inc
sti
mov
aaa
rorb
les
jbe
scas
xchg
enter
cmpsb
jb
ds
cmpsl
sbb
push
orl
jnp
mov
adc
in
andl
fisttpl
xor
sbb
mov
ss
lods
xor
repnz
jbe
js
gs
push
xchg
add
jns
sbbl
adc
js
jg
jns
lret
sub
mov
data16
test
out
lret
mov
out
adc
mov
or
jns
adc
rcr
popf
jp
test
pop
repz
cmpb
and
push
mov
lcall
int
xchg
xor
aaa
and
ficomps
fists
adc
push
mov
xchg
jmp
xor
mov
sbb
xchg
add
jg
test
mov
jne
cmpsb
inc
iret
aas
push
xor
pop
mov
add
outsb
or
test
test
or
add
inc
scas
hlt
push
mov
int3
jmp
pop
not
mov
add
scas
fdivs
mov
aaa
push
fsubs
cmp
pop
out
ss
add
mov
jg
std
dec
sahf
mov
aaa
xchg
nop
pop
xor
push
xor
fsub
cmpb
mov
cmp
imul
sbb
inc
dec
loop
push
iret
es
xor
cwtd
sub
jp
scas
pop
fdivrs
hlt
xchg
sub
sub
ds
popa
adc
inc
inc
cmp
hlt
hlt
dec
in
mov
and
xchg
ja
or
add
fnstcw
clc
ljmp
cli
aaa
lods
jbe
jp
cmp
rol
shll
rcrb
jecxz
into
inc
cld
push
mov
cmpsl
cmpsb
fstpt
lret
push
xchg
sarb
push
enter
jle
mov
cmpsb
ljmp
mov
out
sbb
movsb
cmp
mov
in
cmpsl
mov
fnsave
stos
xor
gs
push
idivl
out
fidivs
sti
push
fadds
mov
call
jmp
int
cmpsl
int
adc
mov
cltd
hlt
dec
loop
jo
mov
sbb
push
loopne
mov
mov
mov
int
adc
cmp
push
add
pop
lret
pop
xor
xchg
mov
pop
push
ror
mov
cmpsb
push
cmp
dec
movsl
addr16
push
cmp
pop
rolb
loope
neg
pusha
addr16
lods
mov
fsubrp
ret
inc
xor
mov
push
xchg
add
push
cmpsb
jbe
jle
enter
mov
call
clc
ds
int
icebp
stos
jno
out
inc
pop
mov
sarl
jle
stos
mov
testl
mov
inc
incb
repz
cmp
sub
cmc
mov
cmp
sub
or
mov
loop
test
bound
pop
sub
fisubrs
dec
into
jbe
push
int
adc
popf
mov
sbb
bnd
mov
pop
push
pop
out
shrb
daa
movsb
mov
inc
pop
mov
mov
scas
pop
mov
pusha
mov
ss
adc
jp
mov
dec
aas
popa
out
dec
fcmovne
jmp
ss
jge
testl
iret
int3
aad
lock
pop
dec
lock
cmp
les
xor
sbb
shl
mulb
xor
loop
mov
fcmove
fs
fcmovnbe
xor
cli
and
rcl
jns
pop
jb
addb
or
jp
add
fnstsw
shr
aas
ror
push
cmpsl
push
dec
ret
int3
dec
xchg
add
cltd
mov
jb
sbb
js
rolb
or
inc
ljmp
mov
pop
jb
fadds
adc
push
iret
imul
je
or
test
inc
aaa
inc
sbbb
and
sahf
aam
jp
push
sbb
fnsave
fldt
xor
mov
mov
or
aam
adc
pop
hlt
cmp
adc
inc
dec
mov
daa
jecxz,pn
fmuls
and
incl
and
xor
cltd
lret
sarb
mov
ss
and
pop
out
or
xchg
adc
add
ds
inc
out
mov
mov
sub
push
lock
inc
out
cli
pop
loopne
stos
xchg
ret
idivb
xor
shrb
stos
mov
test
sahf
cmpsb
rcr
in
ja
adc
imul
data16
loopne
lds
adc
inc
dec
lock
add
mov
add
mov
fyl2x
push
push
pop
inc
mov
jbe
push
push
movsl
js
xor
fldcw
imul
fcoml
jl
mov
bound
sarl
push
jae
mov
sti
cmpb
out
popf
xchg
jle
xchg
cmpsb
dec
jp
xor
xor
mov
sub
add
and
push
roll
cli
loope
icebp
or
jecxz
js
dec
fdivrs
cs
push
xchg
rclb
push
push
into
cmpxchg
cmpsb
push
sti
xor
scas
stos
xlat
mov
jnp,pt
xchg
out
loop
jge
jnp
mov
call
int3
sub
mov
add
out
mov
shlb
clc
mov
stos
xchg
outsb
sub
in
fidivrs
gs
sbb
mov
jb
mov
mov
in
inc
push
push
add
idivb
out
pop
rcll
xor
or
mov
daa
inc
das
xchg
mov
adc
jbe
lret
shr
data16
mov
cmpsl
gs
mov
xor
dec
add
cmpsb
pusha
test
mov
pop
push
sub
jae
mov
loopne
pop
pop
sbb
mov
aas
mov
mov
test
subb
sbb
or
ret
xchg
lret
cmp
in
test
jmp
dec
cmpsl
jle
add
inc
lret
fcmovne
rcrl
shll
pop
push
pop
out
mov
sub
nop
jl
mov
out
hlt
addb
lret
inc
or
insl
aam
cmp
mov
mov
push
mov
cmp
into
mov
lods
lcall
lcall
mov
mov
inc
cld
insl
psubb
dec
adc
push
mov
mov
inc
add
push
cli
sbb
sti
or
pusha
call
add
xor
bound
cmp
enter
out
mov
sbb
arpl
or
mov
jne
lahf
loopnew
into
add
int3
sub
lock
sahf
adc
dec
pop
lret
rcll
ss
mov
lea
add
lret
push
mov
pop
adc
jp
push
add
loop
lock
or
pop
mov
mov
dec
mov
push
cmp
test
push
push
sub
fcmovnb
int3
scas
pusha
iret
stos
repnz
dec
enter
xchg
adc
inc
outsb
test
in
or
push
dec
lea
loopne
fiaddl
xchg
xor
fidivrs
imul
repz
mov
test
push
enter
scas
cmp
int
je
cwtl
es
loopne
xor
das
iret
int
movsl
sbb
inc
add
mov
or
lock
push
jo
mov
vpshaq
test
dec
or
cmpb
les
mov
and
pop
mov
add
clts
shl
mov
sbb
insl
sub
pop
outsb
adc
in
jb
or
fisubs
pop
clc
and
mov
or
mov
pusha
sub
fstps
int3
mov
push
mov
adc
clc
cs
scas
xchg
ss
xor
fimull
add
push
push
jle
loop,pt
int
adc
cmpsb
mov
mov
aad
xchg
jo
jecxz
xchg
fnstsw
dec
xchg
in
cs
adc
cli
pop
mov
jecxz
jo
cmpsb
movsb
jb
adc
mov
outsl
pushf
pop
nop
fsub
mov
mov
cs
je
out
lret
inc
adc
xchg
and
mov
call
ljmp
testb
xchg
inc
test
cltd
scas
sbb
add
xchg
cwtl
jl
lret
shlb
or
pop
stos
xor
cltd
inc
mov
pop
jo
loop
and
outsb
xor
mov
push
xor
shl
cmp
out
mov
movsb
push
jb
jae
xchg
jg
int
xchg
mov
aaa
aam
out
dec
and
push
in
mov
jns,pn
cmp
push
add
dec
in
andb
out
pop
mov
imul
in
jmp
pop
scas
mov
jmp
jg
cwtl
mov
mov
add
jp
cli
bound
inc
mov
fdivrs
mov
out
iret
mov
imul
mov
es
addr16
mov
sti
repz
or
cs
xchg
add
pop
out
inc
pop
imul
inc
cmpsb
mov
push
dec
push
mov
mov
mov
fbstp
int
sti
insl
sbb
jne
push
enter
xchg
mov
int3
cmp
mov
push
imul
lock
leave
xchg
fistpl
rolb
xchg
lahf
xor
loop
add
jns
adc
jo
sub
mov
int3
mov
xor
mov
push
adc
jo
mov
fmul
lcall
movsl
cmp
testb
ljmp
stc
ret
push
std
mov
repnz
incb
shrb
inc
je
lcall
lcall
jl
pop
rcr
cmpl
out
in
arpl
cli
cli
loope
ljmp
pop
out
fsubs
mov
lods
test
push
int3
andb
dec
and
jbe
ds
aam
int3
push
pop
mov
push
and
adc
mov
xor
push
add
adcl
pop
test
lea
inc
dec
fsubs
xchg
repz
fcoml
add
fcmovnbe
sub
ret
mov
dec
cmpsb
push
xor
mov
add
or
mov
mov
outsb
repnz
int3
mov
sub
push
push
xlat
xchg
ds
or
push
lods
les
push
aam
repz
cli
mov
mov
add
sbb
test
es
js
xor
mov
adc
or
mov
incb
add
xchg
push
jg
in
movsl
sahf
sub
push
mov
outsb
in
xchg
mov
inc
sub
enter
scas
dec
ja
inc
pop
push
cmpb
dec
mov
mov
js
data16
mov
push
adc
xlat
lret
pop
sti
adc
and
sbb
add
fcmovne
gs
dec
pop
add
bound
jo
mov
xlat
es
mov
sbb
xchg
xchg
mov
aaa
ljmp
lret
mov
dec
sahf
xchg
loopne
xor
out
fildl
test
lret
inc
cmc
fs
xor
dec
adcl
outsb
jge
jmp
loop
jle,pt
scas
mov
mov
ret
dec
repnz
repnz
ds
sub
jl
fistl
lock
cli
rclb
sbb
in
or
lret
add
rcr
es
stos
jecxz
inc
xchg
push
cmpsl
enter
push
mov
dec
xchg
aad
xor
pop
ss
adc
mov
fs
mov
add
push
int
pop
jne
push
sti
into
sar
cmpsl
testb
and
adc
push
add
into
inc
mov
mov
idiv
sarl
cmp
invd
fidivl
push
mov
mov
out
and
dec
xchg
dec
xchg
hlt
imul
mov
int
arpl
scas
xchg
fisubrs
dec
sub
neg
cmp
call
fimuls
pop
scas
mov
and
xchg
fdivs
cld
mov
xchg
mov
lcall
addr16
arpl
cli
or
popa
jecxz
into
xchg
adc
aaa
pop
cltd
aad
les
pop
adc
scas
inc
add
xor
xchg
bound
pop
xchg
fbstp
adc
jo
mov
xor
xor
loope
add
mov
pop
fnstenv
cmp
sub
cmc
inc
lret
xor
jle
cld
pop
iret
sbb
in
mov
ret
sahf
jbe
push
cwtl
pop
mov
jnp
clc
xchg
xchg
pop
jle
inc
aaa
pusha
shll
mov
paddsb
mov
fwait
mov
push
mov
xrelease
incb
xchg
cs
enter
pop
ljmp
xor
fisubl
jb
sub
cmp
mov
pushf
mov
mov
sub
inc
fdivs
mov
jmp
into
xlat
dec
out
sub
and
int3
mov
out
out
repz
clc
jo
dec
mov
dec
inc
into
dec
out
clc
in
das
push
push
xchg
iret
aam
xlat
xchg
scas
rcll
fidivl
inc
dec
loope
xor
jne
ljmp
push
enter
xor
sbb
jae
dec
das
and
enter
int
outsb
mov
loop
movb
mov
andb
rol
and
xchg
adc
pop
lcall
mov
int3
or
popa
push
inc
jo
xchg
xchg
repnz
fcmovnbe
xor
sahf
rclb
push
int
out
and
mov
adc
fldt
xchg
dec
push
outsb
rorl
stos
lahf
cmp
lahf
dec
mov
pusha
ljmp
push
nop
mov
out
mov
stos
into
mov
dec
inc
pushf
scas
aad
xchg
cmp
sbb
loop
inc
aas
fstpt
cmp
mov
and
xchg
aas
insb
pushw
in
lods
mov
mov
ljmp
mov
shll
cmp
cmp
orb
into
pop
subb
shlb
enter
mov
movsb
and
sub
mov
lods
adc
leave
pop
push
mov
adc
cltd
mov
push
subb
loope
pusha
idivl
into
sbb
fs
leave
scas
mov
jbe
rclb
ret
shl
pusha
cli
ja
mov
cli
test
adc
lret
mov
cmpb
aaa
cli
lock
push
push
repnz
ljmp
ss
imul
into
mov
leave
push
icebp
js
sbbb
fdivrp
add
insb
mov
adc
sub
add
ret
push
adc
rolb
fisubl
sbb
in
mov
movsb
rcrb
and
idivb
dec
data16
mov
rcr
ljmp
mov
cmpsb
inc
ss
rorl
lret
rorb
movsl
aad
lds
int
mov
and
pop
jmp
fwait
push
cld
or
push
cs
add
rol
nop
add
dec
ja
adc
in
adc
sub
cmpb
movsb
int
xchg
hlt
sub
stc
or
fcmove
jp
or
jbe
push
mov
sti
popa
js
jp
xchg
int3
fcomps
jge
xlat
clc
inc
adcl
out
xor
movsl
push
mov
mov
shrl
aam
cmp
xchg
pop
ret
adc
dec
ficomps
mov
nop
jbe
ss
shll
flds
mov
ret
ret
jo
push
movsb
or
pop
xchg
jmp
mov
in
push
and
mov
xchg
das
cmc
sti
mov
mov
repnz
mov
mov
cmpsl
adc
cmpsb
mov
pop
ret
mov
pop
adc
mov
inc
imulb
jbe
adc
xlat
loop
rorl
movsl
leave
push
jbe
inc
cmpb
cltd
shlb
fnsave
dec
dec
ljmp
and
pop
add
jbe,pn
push
and
and
or
fisubrl
push
dec
incl
std
sbb
or
jl
and
add
into
call
scas
in
jb
cmp
mov
add
xchg
cltd
fxch
cmpsb
and
lret
ja
in
mov
jmp
adc
aad
mov
je
js
mov
push
mov
sub
rcll
xchg
inc
sahf
outsl
xchg
int
push
jne
pop
add
ret
stos
aam
pop
in
dec
in
adc
in
mov
aas
jge
pop
into
push
dec
cli
jp
shr
inc
aad
ss
into
push
mov
fisubrs
lcall
or
jbe
call
pop
mov
sub
mov
es
ja
inc
cmc
sub
mov
adc
cli
sbb
sahf
xor
adc
add
negb
xchg
scas
mov
ja
and
push
int3
cmp
hlt
jecxz
pop
or
jnp
dec
and
cmc
mov
inc
dec
push
sub
jecxz
mov
and
pop
fucomp
push
push
and
add
popf
jp
and
je
mov
test
cwtl
jne
mov
xchg
pop
sbb
cmpsb
sbb
fistl
pop
add
into
sub
rorl
out
cli
fdivs
mov
jp
call
fcmovnb
and
pop
push
jle
dec
jo
stos
add
push
add
mov
std
pop
mov
rolb
call
ja
mov
je
fisubs
cltd
ljmp
incb
add
dec
test
dec
mov
mov
movsl
fnstcw
movsb
or
xchg
jno
sarl
fistpll
sub
jl
mov
mov
push
adc
xor
aad
sbb
ljmp
lcall
mov
incb
test
mov
fisubl
or
mov
fbstp
adc
stos
mov
shlb
loope
inc
into
loopne
in
ja
mov
push
loop
add
push
fmuls
push
bound
sbb
cmpsb
leave
dec
fwait
stos
mov
cmp
pop
jge
mov
mov
fdivrp
into
ficompl
cmp
xchg
movb
push
fstp
xlat
add
mov
dec
push
jbe
xchg
jl
mov
scas
add
pop
mov
xor
pop
adc
push
scas
insb
push
cs
pop
iret
arpl
mov
dec
cmp
ret
popa
lods
inc
push
mov
add
and
inc
cwtl
add
out
mov
test
mov
divl
enter
cltd
repnz
jle
subb
mov
xchg
mov
cmp
push
inc
xchg
mov
ds
dec
ret
pusha
call
mov
sub
outsb
ss
inc
xchg
push
dec
push
incl
mov
movl
xor
jne
dec
test
or
inc
xchg
mov
cmpxchg
jmp
fistpll
outsl
loop
mov
inc
loope
push
ss
mov
arpl
pop
into
lea
mov
adc
fidivrs
pop
loopne
faddl
loop
lds
movsl
inc
xchg
cld
fsubp
pop
hlt
les
and
pop
inc
jne
dec
gs
ret
mull
out
test
jb
jae
fistl
mov
int3
sti
iret
sub
xor
jbe
jo
iret
mov
sti
aaa
push
lret
jo
add
mov
sbb
ficoms
pop
sahf
loope
ret
mov
jbe
inc
mov
je
add
xchg
shrl
mov
xchg
mov
pusha
mov
ret
and
mov
divl
cmove
out
leave
testb
mov
mov
sbb
adc
in
test
fdivl
cmp
mov
pop
addb
lret
rorl
cli
adc
popa
inc
mov
idiv
fs
mov
pop
mov
cmp
mov
xchg
imul
outsl
mov
aas
shll
adc
test
sahf
mov
sbb
daa
xchg
in
sarb
test
lods
test
xchg
push
cli
xchg
xor
mov
lcall
arpl
sti
je
and
int
stos
xor
xchg
lock
or
in
addr16
daa
pop
xor
sarb
inc
cli
mov
les
call
inc
mov
mov
cmc
into
jge
rcrb
xchg
icebp
xchg
push
icebp
cmp
int3
call
faddp
push
sbb
fadds
out
out
loopne
add
ds
repz
movsb
fisttpl
into
sbb
cmpsb
adc
push
fdiv
sub
movl
jp
mov
clc
cmpsb
add
popf
mov
cmpsl
xchg
mov
mov
mov
fcmovu
ljmp
enter
mov
ljmp
sahf
ret
mov
lea
sahf
xor
test
mov
mov
int3
icebp
test
inc
dec
cmp
xlat
or
pop
mov
jbe
sub
xchg
ss
icebp
arpl
dec
outsl
push
mov
and
and
and
lret
lock
adc
jle
sahf
jmp
imul
faddl
pushf
mov
fwait
mov
subl
jecxz
popl
adc
rcr
scas
into
lods
xchg
push
jp
les
hlt
push
divb
insl
pop
ja
mov
jecxz
adc
idiv
xor
cmp
icebp
shl
aas
iret
lds
sbb
xchg
es
add
cmpsb
arpl
out
scas
xor
cmpsl
data16
push
mov
pushf
jb
jg
cmp
jo
fldl
xchg
mov
inc
aam
enter
addr16
rcrl
scas
out
and
stos
leave
lret
dec
lea
add
imull
test
clc
cmpb
lret
shr
mov
mov
pop
sub
das
add
mov
fnstcw
mov
popa
jle
mov
push
in
mov
into
ljmp
pop
fdivs
mov
push
rcrb
jge
jg
ljmp
ds
push
clc
cmp
lret
sahf
shll
mov
fsubl
cli
mov
mov
in
popa
inc
dec
fcmovbe
mov
dec
fisubrl
shl
dec
push
adc
mov
mull
aam
push
enter
pop
mov
and
loopne
data16
fstl
sti
sbb
inc
adc
aad
lock
mov
sarb
aas
or
fdivr
adc
ss
mov
test
lret
or
push
leave
adc
data16
lret
fst
out
or
xchg
dec
cmp
adc
xor
fadds
adc
push
xchg
sub
int3
shlb
ret
or
mov
cmc
mov
loop
dec
push
mov
inc
xlat
jb
inc
xor
mov
mov
test
dec
data16
push
lret
jo
ljmp
ret
faddl
movsl
divb
outsl
rorb
jbe
es
cmp
jbe
add
ror
or
loop
adc
bound
int3
loope
jb
ljmp
stc
and
mov
sub
call
jbe
or
add
fs
inc
int
mov
mov
icebp
or
fadd
fcoml
add
push
lcall
mov
ljmp
mov
cmp
add
cli
jp
shrb
jb
push
std
xchg
cmp
push
js
jo
xor
iret
mov
movsl
xchg
sbb
mov
rolb
pop
lds
stos
outsb
lret
pop
jmp
movsl
or
lret
out
mov
push
adc
mov
mov
ljmp
and
dec
fistpl
xor
sahf
nop
outsb
mov
sub
fwait
lret
push
lcall
adc
test
mov
fidivl
sub
mov
pop
dec
lock
popf
sbb
or
pop
cli
mov
push
dec
push
rcr
loopne
mov
daa
sbb
into
push
mov
mov
adc
push
sub
neg
ja
movsl
cmpsl
icebp
js
pop
fwait
jb
xlat
jecxz
repnz
cmp
mov
cltd
mov
cmp
mov
mov
stos
out
xor
out
shlb
bound
pop
pop
xchg
fisubrl
add
dec
push
stos
das
adc
enter
mov
xchg
add
push
pop
xchg
jecxz
inc
xor
leave
or
xor
adc
pop
cs
inc
cmc
ss
xor
dec
sbb
push
sahf
rcll
pop
mov
push
xor
into
mov
aaa
shrl
xchg
mov
in
jecxz
fmull
xchg
rolb
aaa
aam
pop
cmp
cli
shll
xchg
fbstp
cmp
mov
icebp
mov
pop
dec
mov
mov
int3
lea
mov
out
fsubrs
push
loop
scas
and
sub
mov
in
test
js
jb
enter
aam
out
es
adc
xor
adc
movsl
lcall
rorb
mov
jg
adc
jne,pn
lret
cmpsb
mov
mov
inc
push
ficoml
std
sarb
sarb
mov
sub
jg
fwait
cli
leave
push
je
mov
xor
xchg
push
xor
inc
ljmp
cmc
xchg
jge
jmp
inc
xor
mov
push
mov
rcrl
xor
xorb
inc
fisubs
rcll
iret
sub
ficoml
idivb
pusha
jp
pop
push
mov
rorl
xchg
cli
mov
ret
mov
cmpl
or
cmpsb
xchg
dec
ds
fldt
jo
pop
aad
sbb
js
rcr
lock
pop
mov
or
filds
pop
adc
mov
pop
sub
xor
fcoms
std
mov
jns
inc
cmpsb
cmpsl
adc
cli
xor
lds
cli
in
cmp
sahf
mov
add
mov
insl
sbb
sub
in
int3
clc
adc
add
mov
stos
lret
sub
fstl
lea
cmp
popa
pusha
repz
mov
jb
pop
mov
adc
mov
fsts
xchg
xor
and
int3
mov
pusha
xchg
push
lods
idiv
xchg
inc
inc
jmp
leave
mov
fdiv
sbb
clc
push
jae
lret
dec
repnz
daa
loop
xlat
aaa
in
add
loop
dec
iret
xchg
mov
pop
mov
adc
lret
jne
add
mov
mov
push
loop
ds
lds
lret
adc
nop
call
loopne
bound
cli
pushl
add
push
sbb
pop
pop
jbe
adc
inc
adc
pop
lret
cmpsb
add
mov
sub
rolb
xchg
push
aam
mov
mov
aaa
inc
push
dec
int
mov
push
rorb
cmp
into
xor
icebp
push
push
inc
out
mov
mov
dec
es
mov
in
mov
push
mov
push
stc
sub
or
mov
int
push
pop
xchg
fnstsw
fsqrt
std
pop
dec
pop
jne
loop
pop
mov
lret
and
or
sub
and
mov
xchg
icebp
out
in
ja
jne
mov
scas
enter
mov
scas
inc
out
push
add
mov
es
rorb
pushf
scas
mov
jg
or
std
les
push
jae
add
dec
mov
fwait
dec
add
xchg
test
mov
inc
mov
or
fildl
cli
mov
lret
adc
test
movsb
into
int
sub
add
repz
iret
je
dec
or
imulb
pushf
aad
sbb
sti
mov
mov
in
es
push
dec
push
pop
mov
adc
lea
jbe
cmp
dec
leave
rclb
sbb
aad
push
lods
leave
mov
call
dec
add
stos
dec
pop
mov
lahf
ret
mov
inc
inc
or
inc
cli
xchg
lds
sub
idiv
test
cmp
xchg
or
cs
push
xorb
sahf
mov
call
arpl
mov
stos
jl
rolb
mov
pop
fcomp
pop
popf
clc
push
fxch
adc
das
inc
ss
xchg
lods
es
ljmp
loopne
dec
cmpsb
aaa
and
xchg
mov
outsl
es
ret
xchg
cli
fcoms
outsb
jae
inc
dec
inc
mov
dec
mov
stos
sub
jb
adc
pop
leave
insl
dec
repnz
out
leave
mov
out
and
lock
int
pusha
jmp
or
push
xchg
ret
cli
insb
inc
mov
ss
adcb
in
dec
jge
loopne
add
arpl
in
test
mov
push
push
adc
mov
cmp
and
hlt
int3
pop
xchg
xchg
jle
leave
mov
cli
bound
jbe
jns
lcall
ss
nop
fwait
add
dec
int
or
mov
mov
ljmp
mov
gs
pushf
push
mov
aam
xor
xchg
mov
movsb
sub
cli
in
sub
sbb
aas
leave
in
popa
out
mov
cmp
std
loopne
push
das
fsubr
inc
not
lcall
jns
pushf
cmpsb
or
xlat
lret
pop
mov
idiv
add
stos
ss
ficompl
push
mov
sbb
mov
mov
fcoms
scas
test
mov
scas
or
out
bound
xchg
mov
lea
shlb
jo
jbe
inc
test
in
mov
movsb
addr16
outsb
loop
push
out
mov
nop
mov
aad
inc
fadd
add
pop
stos
cmp
mov
mov
push
mov
in
cltd
movsl
cmp
in
inc
enter
pop
roll
pop
xor
jmp
out
test
push
js
or
mov
idivl
xlat
insl
mov
dec
fwait
js
push
fs
aad
jo
pop
xlat
ja
xor
into
dec
mov
pop
pop
pop
inc
ljmp
push
popf
mov
sub
mov
mov
dec
xchg
int
cmp
cwtl
cmpsb
add
jmp
mov
test
in
fmuls
adc
scas
ret
aad
roll
add
jp
cwtl
scas
jp
or
lret
ss
sbb
push
test
ret
or
ss
jecxz
arpl
add
lret
pop
dec
fstl
and
xchg
xor
push
cmc
mov
add
or
mov
xchg
xchg
shl
into
add
enter
mov
ror
jb
jecxz
mov
push
mov
inc
push
cmp
adcl
and
ljmp
lods
aad
fcomi
scas
and
dec
push
cmp
fidivrs
mov
dec
imul
leave
sub
rcrb
addr16
loopne
or
pusha
push
andb
push
xor
xchg
enter
in
jmp
sub
xchg
test
mov
lods
xor
dec
dec
loop
adc
shr
and
popa
sub
mov
inc
xchg
mov
sub
and
push
mov
pop
cmpsl
loop
jge
adc
jb
push
leave
cmp
adc
es
adc
mov
push
in
fbstp
push
ljmp
inc
sub
insb
inc
push
iret
pushf
mov
adc
scas
push
adc
testb
ret
sub
or
and
jle
xchg
into
jp
adc
data16
mov
mov
addr16
jo
mov
loopne
add
jmp
or
xchg
lea
rorb
cli
sbb
ret
and
loopne
stc
mov
imul
mov
mull
test
lcall
pminub
enter
mov
clc
bound
push
scas
clc
les
or
jne
fisubs
inc
inc
lds
cs
push
inc
push
pop
mov
into
sbb
mov
mov
daa
std
cld
push
dec
sahf
ja
push
xor
enter
popf
popf
or
test
xchg
cmp
xchg
outsl
int3
dec
pusha
rol
shl
into
or
adc
mov
ja
push
and
sti
or
outsl
pop
sbb
jp
shlb
mov
xor
mov
ja
lahf
les
aaa
rorl
xor
cmp
popa
lret
push
sarb
jne
hlt
mov
filds
cmp
enter
call
lret
in
mov
and
and
pop
push
cmpb
mov
mov
fadds
mov
dec
and
cmpsl
enter
cmpsl
push
repz
cltd
testl
loop
orb
cmp
mov
or
icebp
push
mov
dec
out
out
and
cltd
push
sub
mov
aas
cs
inc
rorl
xchg
nop
sahf
in
cmpsb
ja
mov
test
adc
scas
jb
pusha
out
or
mov
mov
push
push
cwtl
xlat
jns
adc
in
or
sub
out
jecxz
jge
sahf
lret
pop
ja
mov
or
cli
divl
cmp
and
xor
lret
mov
pusha
ljmp
pop
inc
pop
xchg
aad
adc
mov
xor
fdiv
out
aam
nop
cmp
into
fadds
mov
lea
xchg
push
push
lds
adc
dec
cld
movsl
out
ret
mov
adc
cmp
daa
repnz
mov
lcall
in
dec
icebp
rolb
mov
cmp
xchg
push
ljmp
sub
in
and
out
js
mov
negl
and
xor
or
fdivrs
xor
pop
mov
fwait
inc
mov
ret
pop
mov
ret
std
pushl
lea
enter
mov
fstpt
frstor
inc
inc
dec
adc
and
loopne
mov
mov
xor
mov
lret
push
xchg
fistpll
rcl
ret
aas
push
sub
adc
cltd
mov
xchg
push
jmp
loopne
pop
or
ja
rcl
out
inc
fstl
iret
pop
scas
pop
xchg
lret
push
popf
inc
pop
jecxz
push
mov
lea
enter
out
mov
or
xchg
cmp
test
xor
add
scas
mov
xchg
push
pop
xor
stos
mov
push
adc
sti
fldenv
icebp
mov
cmp
fs
adc
add
cltd
pop
test
and
fidivl
adc
mov
pop
mov
mov
out
xlat
inc
cli
sub
dec
int
push
adc
mov
mov
mov
cmp
dec
sbbl
shll
xchg
add
pop
into
jbe
add
push
loopne
jge
fbld
in
in
inc
jp
push
ror
aam
add
sub
inc
push
mov
adc
sbb
enter
sbb
pusha
jno
fisubl
pop
lahf
xor
cli
jp
mov
ss
dec
jo
mov
push
clts
roll
sbb
pop
cmp
adc
rorl
ljmp
sub
jecxz
push
mov
pop
bound
loope
or
push
cli
push
ret
add
std
mov
es
jns
sti
jno
je
xor
repnz
adc
out
leave
cmp
mov
mov
out
cmp
mov
and
shlb
ja
xchg
negb
jle
jbe
rcrb
ds
int
lock
js
and
mov
lcall
stos
jp
sahf
xchg
xor
jecxz
mov
jbe
repnz
xchg
pop
cli
lret
les
xchg
inc
loop
ret
cli
fistps
mov
sbb
rcrb
cmpsb
mov
sar
loopne
sub
xor
int
inc
jno
and
lret
repnz
mov
ret
insb
fucomp
int
jne
and
lock
into
inc
scas
rcrl
pop
cli
or
push
mov
fimuls
dec
pop
pop
movsl
loope
mov
fs
or
and
stos
inc
sbb
mov
sbb
insb
mov
push
push
cmpsb
push
cmpsb
jne
xor
mov
stos
mov
inc
dec
scas
outsb
push
sub
ds
int3
negl
neg
out
push
mov
ficoms
hlt
ds
rol
sub
fldl
push
sbb
into
or
movsb
mov
rcll
stc
pop
lock
mov
into
cli
pushf
cmpl
aam
scas
pusha
dec
add
outsb
adc
sub
into
xor
dec
mov
pop
pop
divb
pop
aad
add
xchg
out
xor
in
xor
cmpsb
ja
sub
dec
or
mov
pusha
mov
cmp
and
mov
push
or
stc
mov
and
out
mov
or
rolb
dec
data16
jbe
and
pop
fsub
movsl
mov
inc
and
jecxz
pop
hlt
ja
and
add
mov
clc
xor
jns
fadds
mov
imul
je
cmp
int
dec
mov
mov
and
pushf
and
cmp
or
sbb
jge
ja
iret
in
inc
negb
push
lahf
idivb
sbb
inc
mov
testl
sub
pop
inc
stc
adc
scas
sub
pop
xchg
bound
in
inc
icebp
mov
popf
pop
push
mov
xor
dec
mov
loop
ss
xchg
lds
ss
inc
add
push
ret
shrl
mov
mov
push
ljmp
or
push
sbb
in
add
push
lock
rolb
mov
mov
mov
aad
xchg
mov
mov
dec
add
fsubr
mov
pop
aad
mov
sub
rolb
jecxz
cmp
xchg
xlat
bswap
rcl
cmpsb
stos
xor
fwait
call
rcll
jns
aas
xor
in
lock
pop
loop
mov
inc
dec
mov
sub
sbb
cmp
xchg
insb
inc
lea
dec
mov
ret
cmp
fsubrp
and
dec
lret
inc
dec
leave
fildll
xchg
ljmp
repz
pop
out
subb
mov
fisubl
test
mov
cmp
fbstp
dec
pmaxsw
mov
push
jbe
cli
enter
or
cmp
adc
inc
stos
jecxz
cltd
mov
stos
cmp
add
scas
xchg
pop
iret
out
sbb
iret
mov
int3
push
aaa
cmpsb
push
call
into
and
test
add
stc
xor
and
and
in
add
sbb
mov
into
hlt
test
outsb
adc
nop
in
add
or
loopne
outsb
xchg
lcall
inc
jecxz
es
ret
enter
fsubl
in
push
jbe
jp
imul
mov
mov
adc
adc
mov
cwtl
loopne
xchg
mov
push
shll
ss
addl
ljmp
insl
xchg
push
mov
shll
add
js
aad
lds
jp
pop
out
ds
push
leave
jo
in
mov
sahf
inc
push
bound
lcall
pop
lahf
stc
ja
xchg
loop
mov
lea
lret
dec
dec
pop
test
fadd
add
stc
test
and
adc
push
push
ja
adc
mov
push
cs
cmpsb
call
mov
inc
cmp
jecxz
loop
mov
jg
loopne
cmpsl
jne
orl
pop
mov
ljmp
push
fidivrl
test
jmp
add
shr
shlb
cmpsb
inc
inc
add
jbe
gs
jle
mov
push
js
and
fimuls
ret
int
int3
das
pop
fisubl
dec
ret
jp
mov
decb
rclb
aad
outsb
repz
ds
push
add
sub
into
mov
lods
lret
fwait
pop
loopne
sbbb
nop
ss
jp
mov
cmp
xchg
xor
mov
enter
adc
divb
pop
pop
add
fdivr
mov
andb
fnclex
fsubp
xchg
or
cmpsb
in
and
lcall
xchg
or
lea
mov
or
loope
cmpsb
rclb
outsb
dec
cld
stos
inc
fcoms
xchg
mov
jbe
out
rolb
fs
push
mov
mov
data16
jbe
jbe
sahf
jecxz
cmpsl
and
rorb
or
in
scas
mov
jmp
ljmp
sub
push
fbstp
inc
test
leave
lcall
mov
dec
jp
adc
mov
cmp
lcall
xchg
jo
pop
jbe
repz
out
ret
ror
jle
aam
mov
jne
mov
mov
sarb
cmpsb
lock
inc
cmpsb
popa
stos
add
fisubrs
sub
xor
mov
adc
or
adc
xor
scas
ret
aad
mov
sub
shl
inc
mov
dec
and
push
jecxz
dec
scas
mov
jmp
xchg
das
sub
pop
test
mov
push
aaa
cmpsb
inc
stc
sub
push
imull
mov
scas
es
sub
pusha
cltd
xchg
lea
int
into
shl
xor
inc
or
push
pop
jle
cmpsb
std
mov
or
sub
leave
mov
sub
into
dec
icebp
mov
jmp
dec
mov
pop
add
bound
and
ss
popa
popl
fwait
xor
adc
push
cltd
sub
call
xchg
mov
pop
sti
jb
popf
lock
pop
xchg
push
add
out
aam
lods
xlat
int
jnp
arpl
stc
les
push
icebp
std
xchg
cmpsb
push
loope
inc
mov
mov
test
nop
pop
jmp
jo
lea
adc
iret
mov
pushf
bound
xor
add
xor
cli
mov
bound
out
or
push
or
lahf
mov
pop
mov
xor
or
inc
into
pusha
iret
xlat
push
mov
pop
jle
les
add
jg
mov
iret
adc
aam
shl
orl
lods
fbstp
adc
xchg
ds
xor
fidivl
cs
inc
cli
mov
lret
mov
outsl
mov
scas
add
dec
adc
xor
mov
fdivr
xchg
add
lock
fidivl
hlt
int
pushf
mov
aas
mov
jecxz
nop
dec
jmp
jne
lahf
sbb
gs
pop
pop
mov
cltd
stos
das
xchg
mov
pop
mov
jmp
sbb
mov
push
dec
mov
lods
push
out
cmpsb
cli
or
cs
leave
pushf
or
out
in
dec
int
xor
test
subb
int3
cmpsb
pusha
aaa
imul
jne
push
mov
ret
leave
jbe
cli
icebp
cmpsl
loop
ljmp
mov
push
mov
loop
pop
lcall
or
shlb
dec
cmp
mov
in
ret
insb
adc
cmp
mov
cmpsb
dec
sti
xchg
cmpsl
jb
data16
bound
test
fcomps
pop
ljmp
hlt
fnsave
cli
dec
mov
pop
out
xchg
push
xor
inc
mov
xchg
push
loope
js
add
es
cmpsb
add
lret
fsubrs
repnz
pusha
test
ret
dec
movsl
insb
jecxz
lcall
cmp
jo
push
mov
out
push
ss
rol
inc
cld
add
mov
addr16
int
ret
xor
xlat
rorb
inc
dec
test
call
jmp
mov
clc
in
lcall
pop
call
xor
jge
bswap
aaa
sbb
mov
mov
mov
add
fidivrl
scas
and
fistps
lods
insb
adc
ljmp
cmp
or
cli
roll
loopne
fsubrp
push
lock
ret
xchg
xchg
pusha
mov
mov
pop
bound
mov
add
inc
push
or
test
iret
and
jle
lods
sbb
inc
dec
adc
into
jae
sbb
lock
dec
jp
shlb
fnstsw
and
mov
imul
leave
mov
jae
jb
int3
mov
mov
jmp
ror
cmp
mov
jns
adc
add
rolb
cmc
mov
dec
pop
or
and
scas
bound
sbb
ss
mov
imul
lret
pop
iret
sub
ret
sub
hlt
leave
jb
xchg
sbb
dec
add
shlb
je
popa
add
xor
call
mov
mov
xlat
stos
cld
stc
cli
or
cmpsl
inc
into
pushf
outsl
mov
into
pop
hlt
mov
lods
pop
cmpsb
iret
mov
imul
cld
ret
xorl
mov
imul
repz
mov
xor
mov
shrl
subl
pop
mov
sti
imul
sub
push
jg
mov
fldt
sbb
ja
add
bound
xchg
incl
gs
mov
dec
movsb
scas
push
mov
mov
mov
imul
xchg
ss
dec
lods
es
xchg
pop
adc
mov
push
jb
or
andl
pop
adc
andb
sar
lret
mov
cmp
jl
mov
add
cmp
cmc
ljmp
cmp
call
ficoml
into
sbb
aam
dec
call
push
ret
and
sub
inc
sub
push
jle
pop
jae
arpl
dec
add
lock
into
pusha
sbb
rclb
pushw
clc
lds
ret
test
leave
jp
fidivrs
mov
xor
test
lds
mov
pushf
rclb
cmp
pop
iret
cmp
and
je
dec
insb
mov
mov
push
push
mov
ret
mov
je
xor
sbb
xlat
aam
outsb
dec
imulb
lods
sub
sarl
sbb
arpl
aam
sub
mov
cli
mov
pop
mov
js
add
test
mov
sbb
out
outsb
dec
mov
cmpsl
jb
and
sub
test
je
jmp
push
xchg
mov
jno
ret
xor
imul
mov
rcll
jne
test
push
sahf
jnp
jbe
icebp
xchg
bound
pop
cmpsl
lods
mov
dec
fwait
jge
adc
int3
inc
shlb
fucomip
out
mov
xor
jecxz
fimull
cmc
cld
push
mov
inc
pop
scas
out
mov
adc
loope
es
loop
fisttps
mov
pop
push
push
add
leave
sbb
daa
mov
loopne
fucom
iret
enter
cmp
rcl
dec
jecxz
testb
or
push
dec
dec
or
mov
int
lret
pushf
mov
hlt
movsb
std
ss
fldz
mov
lods
xchg
or
and
mov
out
aam
dec
lods
mov
add
ljmp
adc
pop
ds
mov
iret
dec
inc
cmpsl
cmp
loop
dec
dec
out
ss
xor
lret
loopne
xchg
ds
callw
adcb
xchg
pop
scas
mov
mov
mov
inc
mov
pop
sub
test
fdecstp
ja
mov
aas
xlat
aaa
push
xor
test
je
cmp
lret
cmpsb
nop
jmp
sbb
jmp
pop
outsb
jne
xchg
cmc
cmpb
inc
xchg
out
pop
repz
dec
fs
sub
lods
cli
scas
xchg
mov
mov
add
and
out
ficomps
stos
jo
sti
test
shr
xchg
repnz
daa
gs
popa
jmp
mov
cwtl
mov
lret
ds
fxch
arpl
adc
imul
mov
push
and
mov
mov
addr16
mov
jbe
add
rol
test
mov
jno
jbe
add
pop
rcll
dec
inc
mov
shrl
shll
ds
jbe
cmp
arpl
jl
xchg
mov
loop
pop
js
mov
push
or
add
jge
mov
sahf
mov
in
mov
ljmp
mov
jns
mov
lahf
sub
push
pmaddwd
mov
sti
cmp
mov
mov
enter
dec
outsl
add
push
xchg
outsl
aaa
mov
das
cwtl
insl
push
das
popa
dec
mov
std
xor
pusha
add
lods
pushf
pop
roll
fimull
mov
lds
mov
cmpsb
sub
mov
imul
inc
dec
test
adc
mov
cmpsl
jbe
leave
jo
cli
mov
pop
loope
out
xor
add
mov
add
ret
mov
lcall
xor
stos
cs
aad
out
rcll
push
jns
mov
mov
je
sahf
test
mov
mov
pop
pop
outsb
nop
xor
dec
repz
or
xchg
std
imul
sarb
mov
jecxz
xor
lds
push
mov
dec
sub
movsb
adc
add
sbb
fldcw
cmp
cmp
mull
mov
add
sti
pushf
cmp
pop
sub
mov
cmp
lods
push
mov
mov
pop
imul
in
jl
loop
mov
mov
mov
xor
sbb
add
mov
mov
mov
rcr
mov
sub
js
cmc
adc
mov
push
adc
lcall
and
sbb
mov
mov
shll
dec
xchg
mov
add
scas
testl
or
addr16
lods
jmp
jecxz
inc
mov
xchg
pop
adcb
mov
mov
dec
mov
scas
scas
fs
mov
mov
sbb
push
sub
fwait
push
mov
lds
xor
add
xchg
inc
mov
pushf
mov
sahf
cmp
bound
cmp
es
mov
ret
cli
les
sbb
js
mov
xchg
test
jne
or
sti
push
and
lret
mov
adc
cmc
orb
mov
push
jbe
cmp
fwait
cld
insb
lret
mov
loope
mov
stos
push
pop
pop
jg
mov
lods
mov
cmc
inc
jne
mov
jbe
loope
cmp
ss
and
jp
pop
cmp
movsb
mov
mov
mov
mov
or
ljmp
es
iret
or
inc
lret
int
iret
out
inc
and
mov
in
gs
mov
mov
jmp
cmpsl
push
les
sti
mov
add
xor
mov
daa
bound
mov
fucom
jl
jle
adc
sahf
push
jge
ss
jmp
mov
or
ret
or
adc
notb
inc
aas
mov
fmuls
hlt
mov
cld
xchg
icebp
mov
mov
mov
and
and
jge
mov
in
int
cmp
cs
or
jbe
scas
loop
mulb
jne
mov
iret
jg
dec
cmp
jno
lcall
adc
xchg
and
inc
jmp
loope
es
mov
fstl
add
mov
xchg
mov
in
xor
mov
or
dec
mov
push
mov
push
test
sub
xchg
cmp
sub
mov
int3
inc
shll
pop
mov
outsl
addb
lods
lds
aas
enter
push
repz
mov
in
xchg
je
leave
js
mov
sbb
inc
aad
dec
dec
aad
cwtl
xchg
ss
mov
aaa
into
xchg
mov
rcrl
repnz
and
sub
popf
rolb
mov
mov
arpl
inc
lods
mov
lret
xchg
mov
inc
in
sub
adc
xchg
outsb
xlat
ficompl
mov
mov
into
jle
xorb
push
xchg
inc
pop
lea
pop
repz
out
stos
mov
sarl
jb
pop
ret
test
leave
inc
sub
data16
jmp
add
inc
bound
sbb
mov
sti
popf
mov
lds
jns
sbb
dec
bnd
enter
xor
inc
es
scas
jl
in
push
insl
cltd
push
sahf
mov
call
jns
jmp
lds
imulb
add
mov
mov
dec
xchg
mov
xor
add
imul
mov
mov
pushf
insl
adc
orl
lods
inc
mov
mov
ficoml
add
fwait
pop
mov
pop
sbb
in
imul
push
or
addl
inc
sub
cmpsl
dec
mov
jo
xor
pop
mov
in
sub
ja
in
xor
pop
mov
jns,pn
cwtl
inc
mov
mov
add
aad
loopne
push
mov
out
fstpt
push
shll
div
push
mov
sub
jns
mov
xor
ret
sbb
rcll
pop
sub
mov
lods
sar
dec
sbb
nop
push
lds
stc
sbb
cmp
je
insb
jbe
mov
in
filds
fs
push
cmp
jb
sbb
add
out
jp
or
lods
fsubr
notl
mov
call
aam
jbe
aad
jb
mov
test
and
std
ret
lcall
jmp
testb
mov
outsl
jae
add
cmp
xchg
inc
lcall
sbb
sbb
or
mov
nop
shll
xor
add
lock
xchg
sub
mov
xor
aad
mov
and
in
inc
fdivrl
mov
sub
mov
jbe
addr16
mov
std
mov
xor
leave
mov
fwait
pop
imul
xor
mov
lds
pusha
cmovge
mov
ds
pushl
jnp
jmp
xchg
cmp
cli
iret
decl
enter
js
ja
test
lods
sahf
sar
mov
or
adc
and
addr16
inc
cmpsb
push
mov
arpl
mov
mov
ds
mov
mov
mov
jne
jg
out
test
adc
inc
ss
dec
jbe
les
cmp
test
mov
mov
popf
sahf
rolb
add
lahf
into
ret
dec
xor
cmpsl
mov
sub
mov
or
pop
aaa
cld
out
testl
mov
test
out
es
jmp
mov
xchg
cmp
mov
daa
cmp
push
mov
loopne
inc
jle
xchg
adc
xlat
push
es
jp
mov
mov
add
pop
or
sbb
js
mov
mov
cmp
out
repz
aaa
mov
jge
sub
dec
xchg
cmp
jl
int
es
cs
aas
adc
out
mov
mov
out
cmpsl
mov
iret
mov
leave
cmp
mov
mov
xchg
les
pop
lret
outsb
jbe
and
fs
mov
movsb
xchg
mov
aad
pop
lret
mov
sahf
dec
xor
out
fidivs
loop
dec
adc
pop
push
mov
fsubrs
mov
and
xchg
mov
fimuls
dec
cmp
inc
push
push
mov
aad
jo
shll
out
out
mov
lods
dec
mov
mov
dec
or
and
aad
test
jbe
sbb
dec
mov
add
das
cwtl
sub
xchg
mov
out
test
sti
insl
mov
lret
repnz
in
notb
mov
data16
mov
xchg
mov
jno
daa
sbb
inc
mov
lret
cmp
sbb
rcll
or
cmp
pop
shll
xchg
mov
mov
ja
mov
push
sahf
push
mov
aas
lea
inc
mov
roll
shll
lret
test
jp
mov
or
add
es
mov
insl
inc
cmp
sub
sub
mov
movsl
mov
xlat
roll
fcmovnb
adc
das
jge
mov
insl
sahf
scas
and
jns
into
jl
daa
add
sub
loop
mov
leave
pop
in
sub
ss
mov
lods
sub
test
ret
sar
inc
std
notb
scas
mov
inc
mov
movb
sbb
int3
mov
sub
shl
lret
and
scas
stc
push
lods
mov
mov
jg
ficompl
push
shll
in
cwtl
dec
cmpsb
loopne
int
rorb
addl
shll
jo
and
push
es
mov
and
xorl
lock
adc
aad
fstl
jnp
lock
push
movsb
xchg
bound
stos
scas
inc
lcall
dec
jno
mov
mov
xchg
xchg
mov
mov
arpl
mov
sbb
mov
xor
mov
int3
jl
cmp
test
pop
mov
popa
fwait
lock
loop
out
lret
xchg
cmp
xchg
jle
push
pop
stos
dec
mov
jbe
cmp
test
xchg
ljmp
mov
xor
inc
mov
jae
mov
out
enter
mov
jno
push
in
das
imul
imul
test
or
sub
mov
mov
push
insb
lods
dec
mov
dec
out
push
pop
lcall
mov
lds
outsl
mov
subb
loop
inc
add
add
pusha
jb
jecxz
addr16
pop
cli
xor
ljmp
add
jbe
pushf
lds
dec
cmp
dec
jb
push
mov
jno
popf
mov
xchg
sub
ret
push
xlat
jl
fwait
pusha
shlb
adc
out
pop
and
push
sub
ss
out
xor
inc
int3
lods
mov
mov
cli
fidivl
pushf
pmaxsw
pop
ss
loope,pt
jae
mov
stos
cwtl
xchg
or
mov
fs
out
and
mov
shrb
mov
inc
cmp
insb
or
sahf
ret
push
icebp
cld
jb
mov
sbb
daa
push
stos
mov
mov
jg
mov
mov
jne
sub
stc
sub
sti
xchg
aaa
add
fcoms
push
xorb
mov
bound
mov
lret
into
mov
popa
push
xor
lods
movsl
mov
mov
mov
or
fdivs
lret
xchg
jmp
jg
add
std
push
inc
xor
out
mov
or
fstsw
mov
les
or
or
mov
mov
and
push
xchg
pop
mov
sahf
mov
pop
inc
fs
hlt
or
lcall
jbe
movsb
mov
aas
fmul
int
mov
push
adc
mov
aaa
jmp
xor
in
inc
fwait
cmp
mov
into
xchg
mov
les
or
stos
loope
shrb
mov
push
fadds
mov
pop
push
mov
repz
sub
and
mov
xchg
fldcw
adc
addr16
aas
andb
out
xor
xor
mov
and
icebp
shll
lods
pushf
iret
ja
cmp
imul
es
mov
outsl
in
mov
and
cmp
mov
jae
scas
mov
mov
outsb
cmp
mov
fs
fldl
jge
mov
mov
bnd
add
out
fbstp
popf
mov
sbbb
pop
mov
inc
fwait
icebp
sarb
lret
test
sub
adc
xchg
movsb
cmp
sbb
mov
mov
pop
mov
mov
out
push
xchg
lret
mov
adc
andb
sar
leave
sub
dec
sahf
iret
xchg
test
jp
xchg
mov
jge
clc
push
imul
inc
sbb
call
pusha
in
fldt
xor
fwait
push
mov
ljmp
mov
jbe
sahf
mov
pop
mov
sbb
and
out
pop
jp
cmc
incl
and
js
dec
in
inc
mulb
movsl
mov
sbb
outsl
pop
cmp
mov
cltd
fnstenv
sarb
mov
add
nop
mov
dec
xorb
int
pop
mov
neg
fisubrl
fdivs
fwait
pop
inc
mov
adc
ja
xor
sub
mov
add
mov
test
cmpsl
mov
fcmovnb
inc
pop
fimuls
inc
and
jns
jb
lds
not
mov
mov
fbstp
cmp
aad
fdivp
push
jmp
xchg
sahf
loop
jno
mov
fimull
pop
pop
xorl
dec
mov
mov
scas
cli
push
xchg
jb
rcll
imul
mov
push
mov
jp
addb
pop
add
movsb
cmp
add
adc
fidivrs
testb
sub
pop
push
push
mov
cmp
je
pop
sub
pop
in
ds
nop
call
adc
jne
mov
data16
aam
adc
push
sbb
and
mov
xchg
jmp
sub
push
movsl
mov
insb
mov
icebp
pusha
sbb
xchg
clc
inc
mov
add
mov
mov
push
test
mov
xlat
pop
scas
mov
jns
addr16
imul
sbb
mov
or
mov
int3
es
pushf
fadd
mov
xchg
mov
jl
push
mov
lahf
xchg
imul
dec
mov
cmpsl
dec
mov
jb
sub
xor
xor
and
sub
mov
cmc
mov
jns
outsb
sub
movsb
push
pop
imul
int3
outsl
sbb
push
das
fcmove
cli
in
lods
push
js
mov
jns
rol
pop
movb
inc
pop
jbe
dec
and
in
and
fcomps
jmp
in
push
enter
mov
rcrl
out
add
and
jne
sbbb
cmc
fiaddl
stos
sub
jne
outsb
inc
jbe
cmc
inc
movsl
adc
fsts
pop
pop
dec
adcb
aam
mov
mov
in
jo
adc
cmp
sub
paddusw
xor
bound
fmuls
icebp
adc
inc
es
mov
inc
call
mov
jnp
jne
pop
daa
out
jp
lock
mov
jle
das
and
mov
divb
stc
cwtl
shll
mov
xor
pop
repnz
push
les
ljmp
aas
xchg
mov
or
imul
nop
mov
loop
idivl
dec
and
mov
and
xchg
ja
aas
jle
jmp
mov
mov
inc
out
inc
or
fiadds
lret
cld
or
insb
xor
xorb
dec
pop
or
cmp
mov
inc
push
fidivs
mov
insl
mov
mov
pop
and
adc
aas
stc
sbbl
xor
add
mov
adc
push
pushf
subb
inc
xchg
jl
ja
dec
mov
orb
lods
aas
pusha
mov
mov
movsl
repz
repz
ss
das
leave
gs
sbb
jb
add
and
mov
mov
rolb
shll
add
out
mov
add
popf
jbe
cmpl
jge
jp
aas
adc
mov
xchg
pop
mov
jp
enter
adc
mov
lea
sbb
shll
mov
mov
fwait
mov
lea
inc
rcrb
mov
test
ljmp
dec
clc
sub
xchg
repz
mov
in
cmp
shll
sub
mov
mov
jge
mov
aad
movsb
sub
test
jl
mov
cltd
xchg
push
shll
pushl
in
sub
ljmp
sar
mov
mov
sahf
nop
outsl
mov
mov
pop
aaa
push
dec
daa
mov
in
cmp
adc
mov
xchg
mov
cld
jg
mov
adc
and
sub
mov
push
outsl
shlb
fs
and
cld
out
pop
pushf
ret
mov
mov
mov
dec
xor
jo
sbb
pop
fisttpll
mov
sbb
and
sbb
jns
ss
mov
mov
or
outsb
test
mov
cmp
fcmovne
arpl
je
mov
push
jno
inc
scas
bound
jb
mov
dec
out
mov
sti
es
cltd
aad
mov
imul
jo
mov
lds
cltd
dec
dec
lahf
mov
push
movsb
popf
pop
add
jns
xchg
adc
sahf
pop
xchg
jge
sbb
test
aaa
mov
add
mov
repnz
cmp
pop
mov
fyl2x
test
mov
push
mov
jle
mov
aam
xor
cmp
fmull
sbb
cmp
sub
and
and
mov
add
dec
mov
shll
sbb
mov
stos
data16
out
sub
add
add
pop
push
lds
xor
mov
sti
sub
mov
push
pushf
pop
rolb
jne
jmp
mov
xchg
dec
mov
mov
or
mov
or
ret
cmp
ds
cld
lock
mov
fs
mov
adcl
test
adc
pushf
movsl
lret
js
mov
dec
test
dec
xor
mov
shll
fs
movsb
loop
and
aas
rolb
stos
out
push
nop
leave
add
push
std
lret
bound
mov
mov
sbb
mov
dec
lods
test
push
mov
jne
mov
jbe
mov
sti
inc
xchg
lods
lock
andb
nop
mov
fildll
in
das
mov
adc
hlt
movzbl
shrb
sub
in
mov
or
jbe
add
sbb
mov
gs
pop
fisubl
inc
xchg
shr
mov
push
lret
pop
lcall
mov
or
lock
pop
aaa
jle
push
mov
mov
pusha
iret
mov
stc
daa
insb
sbb
mov
or
mov
lds
pop
push
adc
hlt
mov
inc
mov
mov
xchg
jge
iret
and
xorps
rorl
jecxz
mov
sbb
les
mov
and
imul
ja
lret
inc
arpl
vpunpckhdq
sbb
mov
and
popa
decl
mov
or
mov
mov
mov
xor
lods
mov
flds
jl
std
aas
sub
jo
sub
add
xor
ss
push
mov
inc
xor
bound
inc
mov
xor
ja
cld
push
subb
mov
lods
push
push
mov
pop
mov
repz
in
mov
mov
adc
cld
lock
and
popf
dec
mov
out
outsl
test
push
mov
inc
rcll
mov
repnz
dec
mov
mov
aam
cs
fs
js,pt
mov
arpl
pop
sbbl
imul
lret
pop
pop
mov
jne
outsb
adc
mov
repnz
jb
sub
testb
inc
aam
push
jecxz
loopne
mov
xchg
out
xorb
mov
mov
or
sahf
jp
sbb
vpmadcswd
pop
movsb
add
inc
into
jbe
mov
test
mov
mov
push
fcoms
cmp
and
test
les
pop
xchg
loop
mov
call
dec
cltd
mov
or
lock
push
pushl
aaa
cwtl
popf
cmc
mov
jns
not
jbe
sti
mov
and
xchg
mov
lea
popf
push
jp
mov
inc
and
insl
mov
repnz
dec
push
bound
mov
pop
shrl
mov
fidivrl
decl
add
add
mov
in
push
frstor
imul
push
roll
shl
cmpsl
mov
and
jo
and
enter
aas
fldenv
aam
nop
jbe
sub
mov
gs
mov
in
and
push
mov
fcmovnbe
pop
loop
in
shr
jno
mov
bound
mov
mov
pop
ja
dec
cs
mov
scas
jo
fists
or
mov
imul
fdivr
xlat
dec
testb
popa
pop
mov
lds
in
mov
dec
out
xor
push
xlat
xchg
cltd
shlb
ret
and
pop
lret
and
sbb
outsl
ljmp
movsl
xchg
call
mov
xchg
scas
mov
stos
icebp
mov
aam
sub
ljmp
mov
add
add
pop
out
rorb
loopne
jge
mov
icebp
xor
xchg
dec
repnz
ss
mov
sbb
repnz
sub
push
jg
adc
mov
gs
adcl
ljmp
testb
lcall
xchg
cmp
mov
out
lahf
sbbb
lds
test
jg
mov
gs
xor
inc
leave
xor
popf
mov
xlat
outsl
jbe
mov
decl
lahf
cmp
push
stos
adc
sub
int
xor
cli
sti
xchg
out
mov
dec
jg
nop
loope
cmp
in
or
inc
mov
icebp
xchg
and
shrb
xchg
nop
jl
adc
test
fdivl
enter
mov
imull
imul
pushf
ret
jecxz
add
sbb
icebp
cmp
xchg
sbb
adc
sar
popf
mov
out
rorl
mov
ja
pop
sub
cmp
jle
pop
test
jbe
shll
lcall
and
add
jmp
mov
lock
cmp
xor
mov
mov
ret
test
insl
mov
pop
jecxz
out
stc
xchg
dec
stos
or
loop
pop
sbb
mov
mov
mov
hlt
rcrl
outsl
xchg
clc
mov
ss
and
repz
mov
fdivr
mov
push
pop
dec
mov
dec
test
cs
lahf
xor
adc
cs
lds
fwait
jmp
mov
xchg
mov
push
cmp
enter
push
mov
push
sbb
pop
mov
xor
fucom
pusha
in
les
mov
call
cmpsl
aad
mov
pushf
xchg
roll
sbb
xor
push
shll
push
mov
push
cltd
aad
ljmp
dec
stos
cli
mov
and
into
push
loop
lds
inc
insl
push
adc
mov
cwtl
subb
or
mov
mov
inc
repz
in
out
insb
leave
add
adc
scas
loopne
dec
rcrb
cmp
mov
or
mov
adc
imulb
out
mov
popa
mov
jae
popf
mov
jbe
mov
lds
pop
mov
lret
adc
pop
jle
mov
aaa
adc
jne
scas
loop
jns
mov
push
and
fisubl
cli
cmpsl
pop
mov
xchg
filds
add
push
mov
sarl
add
dec
mov
and
data16
mov
dec
inc
addb
mov
cmp
stos
mov
adc
add
add
scas
adcl
jge
add
sahf
lcall
jo
cld
cmp
cltd
mov
add
sub
das
jmp
aad
add
ss
mov
mov
out
xor
xchg
cld
dec
in
add
test
inc
lret
and
push
int3
out
mov
dec
xchg
iret
lods
xchg
rorl
sub
lret
outsl
cs
bound
adc
mov
imul
xchg
inc
lahf
mov
push
add
test
and
jo
jecxz
mov
fcmovne
push
mov
daa
stc
imul
repz
jns
mov
mov
shrl
pushf
cmp
cli
dec
push
mov
push
add
divb
out
adc
mov
mov
xor
sbb
stos
pop
adcl
daa
ret
fwait
imul
jecxz
stc
dec
sub
je
fwait
vrsqrtps
out
sub
arpl
push
in
mov
stos
ss
xchg
pop
fldcw
sub
pop
push
repnz
mov
mov
jg
rcl
mov
xchg
or
fsubr
in
in
mov
mov
ficoms
rcrl
jecxz
inc
testl
xor
sbb
mov
fidivs
cmpsl
xchg
ss
lcall
xchg
ficomps
mov
jmp
fisubl
aad
mov
in
fldl
shrb
inc
mov
or
out
push
mov
and
jns
mov
or
pusha
popf
cmp
jp
jg
or
dec
xor
push
or
inc
mov
jo
jl
jne
xor
or
and
fs
xchg
jmp
mov
fstpl
outsb
fidivrl
xchg
mov
mov
inc
sar
push
add
fcmovnb
xchg
js
mov
mov
pop
shlb
mov
pop
xor
mov
fld1
sbb
pop
mov
mov
das
xchg
insb
std
add
push
ret
push
inc
sbb
cld
jle
mov
divl
loopne
in
jg
jo
test
mov
dec
dec
jbe
xchg
inc
jnp
mov
js
jl
pop
adc
mov
inc
mov
sahf
sub
lds
ja
into
push
xor
sub
mov
or
cltd
mov
shll
mov
lods
es
sbb
push
mov
in
les
mov
lahf
xor
fldt
insb
mov
push
lock
movb
packuswb
mov
stc
insl
push
or
xlat
loop
or
mov
adc
pop
addr16
pop
push
xchg
hlt
cltd
lcall
loop
aas
rcll
or
ror
lea
inc
ret
adc
mov
mov
mov
fs
leave
xchg
jle
jge
mov
ret
xchg
roll
and
movntq
out
loope
mov
xchg
arpl
lods
pop
mov
mov
ss
pop
mov
jno
scas
pop
fldt
mov
pop
ror
push
xchg
inc
sarl
pop
cli
ja
sub
lcall
or
cmpsl
stos
sub
cmp
rol
ss
pop
adc
mov
xchg
test
and
mov
orl
in
sub
enter
sbb
xor
cwtl
pop
mov
xor
mov
fadds
mov
pushf
repnz
out
mov
es
mov
sub
outsb
lret
cli
arpl
xchg
dec
mov
cmpsl
mov
inc
mov
in
and
jne
adc
adc
adc
divl
and
mov
sbb
mov
in
lret
mov
adc
in
or
repnz
jl
mov
negb
fs
dec
cltd
pop
sbb
jp
sti
inc
divb
mov
add
test
dec
aaa
xorb
shll
cwtl
movsl
movl
ret
mov
add
sbb
ljmp
sub
cltd
ret
lds
push
mov
mov
or
orb
jmp
shll
adc
jae
cmp
aaa
sbb
mov
mov
mov
push
dec
lret
icebp
shl
lods
fnstenv
add
mov
in
adc
icebp
add
jo
mov
cmpsb
cmpsl
dec
dec
imul
adc
es
mov
mov
cmpsl
push
shrb
mov
mov
ficoml
decb
push
add
sub
ds
or
push
mov
fnstenv
mov
outsb
mov
and
jmp
push
movsl
xor
fidivl
jno,pt
mov
bound
sarb
mov
cltd
es
ljmp
push
jno
imul
rcrl
jge
jbe
rol
imul
sbb
xchg
dec
je
bound
popa
inc
in
out
mov
cmp
pusha
xchg
mov
jne
cmp
adc
out
add
mov
jo
and
jbe
mov
ljmp
push
mov
rolb
mov
mov
aas
jge
imul
aam
les
xchg
push
xlat
and
xor
mov
fwait
mov
jno
push
push
and
mov
lret
dec
jns
sbbb
jae
xchg
sbb
popf
pusha
movsl
lret
data16
mov
ss
sub
xor
lods
bound
mov
mov
jecxz
int
pushf
call
rorb
lahf
mov
dec
dec
add
bound
push
fisubs
mov
lea
mov
cmp
and
xlat
mov
out
sti
pusha
rcll
or
outsb
adc
clc
insb
jo
jnp
pop
sub
adc
test
adc
loop
dec
lcall
or
mov
pushf
mov
mov
jge
inc
mov
fsts
std
andb
ret
insl
arpl
sbb
lret
sub
es
ja
test
push
cmp
mov
mov
jnp
mov
pop
push
mov
adc
pop
out
push
call
aaa
mov
in
insb
mov
mov
xor
cmp
pop
or
negb
test
out
mov
and
gs
inc
enter
aas
jmp
pop
fcmovbe
les
add
and
daa
mov
xchg
push
lock
xchg
add
mov
cmpsl
pop
jle
push
jg
outsb
iret
mov
pop
jmp
jnp
mov
pop
mull
gs
or
xor
sbb
pop
mov
mov
mov
push
jae
loop
push
sub
and
es
xlat
mov
test
adc
in
pop
mov
jmp
mov
jle
iret
add
mov
bound
stc
mov
lret
mov
clc
inc
jle
ds
push
test
data16
push
mov
clc
cmpl
andl
adc
mov
loop
fldcw
sahf
push
fidivrs
je
jnp
hlt
and
adcb
cmp
out
loop
push
test
mov
out
cmc
mov
pop
ja
jecxz
adcb
lods
lret
mov
testb
push
in
insb
dec
mov
leave
mov
mov
xor
xchg
cwtl
lcall
out
or
push
stos
test
addl
test
adc
mov
insl
jbe
popf
mov
imul
hlt
sbb
sub
jecxz
mov
fs
es
aad
enter
adc
mov
xchg
das
sbb
decl
pushf
cmpsb
add
sub
lock
inc
fchs
jnp
sti
lea
xor
inc
shll
pop
fbstp
mov
push
push
push
cmp
xor
add
pop
push
mov
mov
aad
in
cmp
std
mov
dec
popa
push
fstps
gs
jge
inc
repnz
sahf
nop
aaa
lret
and
jl
jbe
cltd
sarl
pusha
mov
sub
into
mov
cmc
data16
mulb
mov
mov
jno
mov
mov
aaa
mov
mov
inc
mov
ds
dec
cmpsb
mov
nop
cmpsb
cwtl
cmp
insb
mov
xor
outsl
pushf
sti
xchg
pop
cmc
pop
fcmovnu
in
mov
cmpsb
add
jno
sub
jbe
gs
or
mov
inc
sub
mov
sbb
or
adc
stos
in
push
mov
dec
mov
aad
and
push
mov
or
je
dec
movq
lods
cmp
leave
jecxz
loope
test
mov
dec
jbe
push
scas
and
xchg
ret
xchg
jbe
rorb
inc
int3
cmp
xchg
and
jl
lcall
mov
dec
push
lods
lea
xor
mov
mov
xchg
push
lahf
rorb
mov
sub
mov
filds
pop
inc
lret
cmp
mov
dec
pop
jne
fucomp
add
lods
arpl
and
sub
cmpsl
mov
repnz
aam
jne
mov
push
mov
mov
cmp
fwait
add
pop
cli
xor
push
jbe
enter
lcall
icebp
sbb
inc
ss
test
movsb
mov
sub
lods
inc
rcrl
xchg
adc
test
sahf
xor
test
ret
jecxz
jbe
pushf
imul
cmp
dec
adc
addr16
dec
xlat
xchg
xchg
out
sub
dec
fwait
mov
xor
mov
xor
sub
shlb
ficomps
push
ret
mov
cs
xor
cmp
outsb
push
jl
push
pop
enter
mov
sub
cmp
cmovns
mov
das
outsb
test
int
out
in
or
shll
adc
mov
das
out
inc
pop
or
pop
std
add
sbb
test
aam
out
mov
test
stc
sbb
out
loop
jbe
mov
into
and
test
mov
jne
cmc
divl
jnp
fstps
ret
popa
adc
pop
outsb
adcb
mov
jg
outsl
shrb
dec
popf
into
loopne
mov
movsl
sub
jmp
int
pop
and
clc
pop
adc
xchg
mov
mov
es
sbb
ficoms
andb
cmp
xor
sbb
pushf
fnstenv
fsubs
pop
insb
leave
movsl
stc
arpl
sbb
or
push
mov
mov
and
lcall
add
ds
fldpi
repz
or
sub
push
iret
dec
jmp
mov
aaa
xchg
movsb
cmp
in
popf
xchg
pop
stc
fldenv
xchg
loope
sub
mov
les
and
fimuls
lea
mov
fnstcw
jl
sub
inc
aas
dec
jg
push
mov
gs
fwait
add
cmp
lret
ss
push
push
mov
inc
cs
pushf
ja
and
js
cli
cmp
stos
cmp
leave
mov
in
scas
push
jmp
mov
roll
sub
cli
mov
mov
push
frstor
mov
in
stos
outsl
test
das
push
mov
rcl
movsb
bnd
les
mov
pop
dec
popf
mov
sti
mov
arpl
pop
mov
mov
cmpsl
dec
stos
lret
jp
fsubl
mov
roll
adc
lock
dec
mov
mov
mov
xor
pop
dec
mov
ret
mov
aas
mov
cmpsl
loopne
adc
mov
inc
pop
mov
les
cmp
and
les
mov
lock
pop
xorl
mov
push
pop
in
pop
xchg
mov
push
test
mov
divb
jge
xor
rolb
pop
xor
jl
mov
mov
sbb
decl
push
subb
mov
ret
cmc
add
push
fiaddl
fists
xchg
mov
and
cltd
aaa
dec
nop
movsb
sub
popf
enter
ja
push
sti
or
mov
bound
pop
sub
rorb
cmp
dec
les
in
divb
mov
imul
shlb
mov
adc
add
or
in
test
mov
fdivrl
or
mov
inc
pop
mov
adc
mov
sbb
lea
push
je
daa
jg
xlat
enter
les
jbe
sub
push
dec
scas
pop
lods
mov
mov
jo
push
imul
sarb
push
xorb
add
mov
movsb
mov
popa
and
push
mov
popl
jl
call
cld
into
mov
pop
dec
mov
or
cmp
mov
aas
pop
test
sbb
dec
das
push
mov
or
call
mov
shll
mov
popf
sub
mov
xor
cmp
jge
xor
mov
push
int3
and
jae
and
insb
push
mov
js
pop
sub
lcall
icebp
sbb
lret
movsl
mov
jb
xchg
test
sbb
add
aas
adc
or
inc
fsubl
out
pop
mov
sbb
mov
ss
mov
cmp
add
dec
loopne
jl
lahf
pop
xor
in
xor
cltd
fwait
xchg
shll
pop
xor
dec
mov
xlat
lret
div
pusha
cmpsl
mov
sub
mov
les
add
sbb
daa
dec
mov
sub
lea
test
push
rol
test
pushf
inc
xor
lahf
xor
imul
cmp
nop
dec
scas
dec
sar
andb
push
leave
pop
mov
cld
xchg
pop
shrl
jg
jb
test
mov
bound
push
imul
cmp
xchg
cmpb
scas
jle
push
jbe
rcrb
ss
fwait
dec
jb
adc
or
dec
pop
mov
mov
xor
jl
in
mov
or
fwait
jmp
mov
scas
les
mov
rol
xor
mov
lock
inc
cld
mov
fadd
xor
mov
pop
jbe
or
repnz
pop
or
jge
pop
mov
jg
lcall
fldt
xchg
pop
jae
xchg
enter
data16
jl
in
test
and
lock
mov
xchg
int
adc
mov
adc
cmp
sbb
scas
mov
jmp
ss
cmp
xchg
cmpsb
clc
and
in
mov
sbb
call
add
push
aad
les
inc
into
push
fimuls
hlt
sub
mov
je
jbe
ret
cmp
nop
push
sbb
out
ss
pop
cmp
int
mov
sar
rorl
fwait
inc
mov
and
pop
xchg
and
mov
lods
mov
mov
mov
push
mov
leave
aas
xchg
cmp
mov
clc
scas
mov
sti
pop
cwtl
sarb
stos
xor
hlt
mov
test
inc
scas
add
mov
movl
int
popf
mov
adc
pop
jno
arpl
xor
mov
inc
add
pop
sub
mov
xchg
sbb
rol
xchg
loope
xor
xchg
cmp
xchg
mov
lds
rcll
mov
test
ss
out
test
fucompp
popf
dec
and
aaa
addr16
inc
fmull
clc
inc
out
xchg
add
mov
cmpsl
jns
push
cmp
pop
mov
mov
adc
or
out
adc
aas
repz
lds
xor
xor
addr16
in
incl
mov
mov
mov
sti
jle
mov
mov
aad
xchg
mov
dec
cld
aaa
mov
xchg
fsubrs
leave
or
in
out
mov
lods
mov
mov
jmp
negb
xchg
and
in
nop
push
cmpsb
mov
stos
mov
inc
sub
aaa
cmpl
fsubrl
jo
in
pop
xlat
call
and
insl
mov
fdivl
push
mov
mov
iret
jl
cmp
mov
mov
lods
and
jle
adc
fbstp
mov
jno
jns
bound
cld
cmpsl
inc
mov
dec
imul
mov
xchg
xorl
or
xor
cmpl
mov
test
mov
xor
push
lods
mov
dec
dec
inc
movsb
mov
dec
xor
call
pop
outsl
xchg
xchg
mov
in
cltd
add
sub
enter
dec
scas
mov
mov
fimull
imul
jbe
mov
aad
add
mov
inc
push
push
push
mov
enter
sti
cmpsl
cli
inc
ss
add
popf
sub
xchg
gs
xchg
pop
mov
daa
lcall
lods
pop
sbb
and
movsl
xor
inc
out
ret
jmp
faddl
loope
inc
jns
ficoml
mov
xor
mov
je
sbb
push
jecxz
and
cmpb
in
outsb
dec
mov
leave
cmp
adc
mov
movsw
push
scas
loopne
fwait
int3
cwtl
sub
jns
loope
push
pop
mov
and
mov
stos
out
mov
or
mov
sub
les
mov
sub
out
cli
xor
sub
mov
and
sub
imul
icebp
movb
pop
fs
mov
repz
test
add
sti
and
into
push
inc
jo
mov
cld
mov
push
popa
cmp
es
mov
neg
cmp
mov
jbe
jb
jnp
mov
cmpsl
mov
subb
push
scas
mov
pop
add
test
push
dec
pop
xor
les
out
cmpb
sub
inc
mov
lds
sub
ss
jmp
cmp
testb
popa
mov
xor
fs
lock
push
fst
lcall
mov
mov
sbbl
sub
adc
push
jbe
mov
pop
jp
hlt
and
pop
daa
mov
out
lea
xchg
pop
int
and
cli
mov
cs
ljmp
jmp
xchg
les
add
leave
add
mov
xchg
pop
push
and
and
bound
pop
imul
push
mov
cmp
mov
add
mov
fstps
mov
xchg
subl
mov
shll
js
ret
push
test
aam
xchg
je
jl
mov
add
push
hlt
repnz
cmp
cmpsb
sub
repz
movsb
lods
aad
mov
adc
shll
pusha
mov
push
sbb
jno
out
pop
mov
test
ss
shll
push
adc
popf
jbe
test
ds
jnp
arpl
jbe
sbb
int
mov
lds
jno
adc
sub
mov
xor
outsb
mov
divl
icebp
loopne
pushf
mov
lcall
mov
inc
mov
mov
aam
stos
push
js
dec
out
in
imul
movsl
mov
in
test
sub
cmpsl
lahf
clc
scas
sbb
add
lock
dec
mov
lcall
mov
fimull
push
mov
push
pushf
out
jge
cmp
nop
inc
leave
ljmp
xor
push
sub
fdivrp
clc
cmp
les
idivb
dec
mov
add
out
cmpsb
xchg
out
mov
add
jo
pop
js
outsl
xor
mov
dec
mov
lret
mov
popf
lods
in
jg
add
push
out
outsl
shll
fsubp
lcall
imul
adc
subl
sub
mov
jae
rcrl
jle
stc
mov
xor
stos
add
fdivl
mov
jns
repnz
cmp
das
jmp
mov
mov
jno
ret
mov
mov
es
xor
ss
test
sbb
dec
test
je
rcrb
fstl
divb
jle
cmp
push
mov
mov
xchg
sbb
dec
nop
mov
push
popa
add
cmp
bound
clc
into
pop
inc
mov
loopne
xor
cmp
mov
push
pop
mov
mov
outsb
mov
push
cwtl
cmpsl
les
pop
push
stc
mov
aam
push
mov
xchg
or
xchg
sbb
jg,pt
add
and
sub
inc
jae
lcall
dec
outsl
dec
mov
cmp
mov
das
mov
popf
arpl
movsl
mov
orb
dec
lock
shl
push
add
xchg
mov
or
sbb
or
jecxz
sbb
fadds
inc
inc
mov
jb
cmp
xor
clc
pop
mov
lahf
dec
xchg
orl
xchg
cwtl
push
dec
inc
pop
fwait
push
test
xor
fildll
xor
cmpsb
in
and
in
les
pusha
lea
outsb
add
aaa
push
mov
lods
jo
xchg
sub
cmp
lcall
lret
sahf
pop
xchg
mov
mov
dec
mov
lret
xor
inc
or
dec
nop
scas
inc
rcrl
std
jle
mov
ret
mov
mov
sti
sbb
push
mov
mov
std
fsubrl
add
pop
mov
test
jnp
sbb
mov
jg
mov
adcb
mov
and
test
test
push
in
push
adc
sub
popa
insl
or
pop
test
sahf
pop
negb
shlb
pop
gs
push
insb
pushf
mov
pop
jmp
and
repnz
ss
sbb
xor
hlt
cmpsb
daa
rcrb
lret
xor
repz
jle
mov
mov
pop
cmc
cmp
jae
mov
pop
stos
adc
or
lods
mov
insb
sbb
hlt
push
dec
mov
loop
repnz
xchg
push
shlb
adc
outsb
mov
jo,pn
pusha
adc
push
lcall
mov
fsub
pop
cmp
add
mov
lret
xor
or
mov
adc
dec
pop
ret
push
cmp
pushf
mov
fidivrs
aas
xorl
xchg
push
ss
mov
push
pop
inc
mov
cmpsb
loopne
push
mov
dec
adc
stos
stc
fiadds
out
dec
adc
mov
or
mov
stos
mov
sub
and
mov
sub
mov
and
js
mov
stos
les
test
push
mov
shll
sub
clc
jge
out
test
mov
popf
mov
cli
ds
sbb
add
divb
dec
lret
xchg
pop
dec
xor
jb
cmp
sub
sbb
lock
mov
inc
ljmp
test
xchg
inc
sahf
mov
lea
sbb
ret
dec
push
rcrl
aaa
inc
outsb
inc
clc
vhaddpd
add
mov
inc
mov
xor
std
mov
mov
push
test
ja
adc
mov
mov
sahf
jl
stos
les
mov
xchg
push
cmpsb
ljmp
std
lds
outsl
lods
sub
int
loop
mov
xchg
mull
sti
mov
rclb
add
gs
jge
jle
inc
jns
repnz
outsb
sub
mov
add
mov
test
or
dec
outsl
js
xchg
cmp
in
sbb
lds
xchg
jp
inc
icebp
scas
jne
sbbl
mov
mov
aad
push
hlt
xor
imul
jns
or
outsb
call
lahf
mov
mov
rcll
push
fildl
fldcw
stc
jno
push
or
aam
aaa
sub
jbe
xorl
subl
or
dec
daa
sub
ret
and
mov
jno
out
dec
lds
mov
pusha
jb
xlat
insl
push
mov
mov
in
icebp
push
out
rclb
nop
xchg
ss
mov
rclb
jge
out
pop
mov
testb
mov
icebp
pop
mov
aaa
ljmp
repnz
call
test
mov
jo
push
mov
pop
outsl
push
icebp
sti
movsb
mov
aad
sub
pop
pop
mov
pop
push
std
cli
jae
popf
imulb
mov
add
test
lcall
movsl
les
xor
aam
and
xor
add
and
dec
jb
xchg
xchg
loopnew
inc
in
xor
repnz
mov
jmp
jo
ja
shr
cmp
mov
mov
inc
cmp
and
stos
xchg
movsl
dec
xchg
mov
in
xor
icebp
xor
mov
xor
mov
adc
mov
push
sub
cmp
sti
mov
mov
shr
mov
mov
mov
mov
push
js
filds
test
mov
sti
jbe
or
push
mov
scas
mov
and
jb
mov
fcmovnbe
aam
arpl
sub
idivb
scas
push
cmp
cwtl
jo
dec
xchg
cld
nop
or
sbb
daa
dec
stos
mov
idivb
enter
mov
mov
pop
insl
jnp
mov
stos
xchg
dec
jp
adc
call
mov
stos
push
shlb
in
daa
scas
ror
int3
mov
mov
or
mov
clc
cs
pop
push
loop
mov
aam
stos
fdivs
cmp
xchg
add
cli
lds
add
movsl
mov
clc
test
daa
jbe
loop
lock
sbb
mov
mov
js
add
lahf
rorb
mov
mov
cmp
mov
lods
stos
cli
pop
mov
je
hlt
mov
push
icebp
mov
lds
xchg
xor
movsb
lods
mov
pop
push
fisubrs
stos
dec
fbstp
mov
mov
jmp
stos
in
aaa
mov
adc
cmp
pop
shll
dec
xlat
push
mov
jnp
test
test
loope
mov
xchg
gs
sbb
mov
aas
mov
stc
movsb
dec
mov
sub
mov
fnstcw
imul
pop
push
xor
pop
pop
adc
jle
repz
push
cld
jb
fisubl
inc
mulb
mov
adc
mov
mov
jne
xchg
push
mov
mov
js
mov
push
add
scas
loope
ljmp
xchg
pop
lret
out
xor
mov
sub
hlt
and
out
arpl
mov
sbb
popf
mov
jecxz
ds
dec
mov
sbb
lea
lret
adc
dec
shrl
adc
xchg
mov
sti
sbb
mov
mov
push
fwait
negb
loopne
lea
pop
pop
psrlq
dec
jno
mov
inc
scas
test
mov
andl
das
add
mov
mov
mov
and
cmp
mov
add
andnps
ss
push
cmpsb
sahf
mov
xchg
inc
and
adc
dec
jno
sbb
add
out
mov
iret
jecxz
or
imulb
adc
xchg
mov
cmpsl
add
cs
xchg
inc
jo
mov
clc
dec
sub
jnp
mov
in
fsubrs
lahf
inc
or
xchg
mov
adc
sbb
in
sub
add
imul
mov
orl
lea
jnp
mov
sahf
pop
aam
or
cs
sahf
and
mov
mov
addr16
mov
mov
sbb
popa
mov
cmpsl
aad
imul
xor
fisttpl
xchg
test
cli
push
sbb
inc
mov
xor
dec
es
push
mov
dec
aad
xchg
clc
in
mov
jl
aam
jno
bound
dec
scas
mov
lock
xchg
push
pushw
cmp
push
pop
mov
sbb
out
divb
insb
mov
inc
repnz
ror
sbb
ds
ss
add
inc
xor
pop
shlb
nop
mov
call
dec
popa
and
mov
sub
in
ret
lock
idivl
add
mov
sub
mov
movsl
mov
insb
pop
xorb
lcall
mov
outsb
movsl
lock
data16
xor
sub
xchg
adc
cmp
jecxz
mov
test
jne
xor
push
mov
jecxz
mov
pushf
cli
movsl
imul
dec
or
cs
mov
adc
xchg
les
mov
push
adcb
lods
xchg
scas
xor
and
popf
and
dec
mov
xlat
daa
mov
pusha
jae
movsl
or
divb
lea
and
rcll
cli
mov
mov
mov
pop
or
add
adc
push
pushf
push
jno
stc
adc
rolb
push
mov
nop
adc
adc
jl
mov
cmp
xlat
ret
xchg
insl
rcll
popf
mov
in
dec
rorl
test
xchg
push
in
inc
jbe
push
jnp
cmp
mov
pop
xchg
adc
scas
subb
mov
mov
push
iret
shrb
in
out
loopne
xchg
mov
xor
pop
mov
or
loopne
fsubr
mov
out
mov
neg
enter
gs
inc
int3
xor
sbb
xor
xor
dec
jbe
lock
pop
and
aam
adc
sbb
mov
inc
out
pop
sti
mov
stc
mov
iret
cmp
pop
pop
inc
pop
mov
fnstenv
or
cltd
push
mov
mov
jge
mov
add
hlt
mov
mov
sbb
and
inc
ret
out
mov
adc
mov
frstor
sub
imul
mov
add
jnp
mov
repnz
xchg
aam
lret
mov
adc
and
insl
gs
fmuls
xchg
adc
xor
push
mov
cmp
jb
test
push
adcl
dec
dec
mov
cs
aas
mov
andl
xor
ss
jbe
pop
mov
inc
push
cli
mov
rorl
xchg
add
vxorps
jge
cmpb
std
ss
xchg
fxch
repz
popf
outsl
in
mov
mov
mov
cwtl
or
inc
jecxz
je
aad
mov
push
mov
mov
repnz
and
out
inc
ss
dec
pushf
popf
mov
mov
ds
adc
arpl
mov
sbb
sbb
mov
lret
addr16
ss
push
cmp
xchg
dec
dec
sbb
outsb
js
ss
cmpsb
mov
push
mov
mov
cmp
adc
imul
adc
lcall
mov
jle
enter
out
lds
inc
xorl
lcall
xor
dec
push
mov
or
jge
mov
push
jbe
mov
mov
adc
lcall
sub
sbb
and
loop
and
xor
leave
sbb
mov
lahf
fcoml
sub
je
push
mov
lret
cwtl
aaa
cmp
arpl
xchg
insl
xchg
ljmp
lods
scas
rorl
fisubl
insl
mov
outsl
out
mov
xchg
es
in
inc
enter
lock
inc
mov
inc
xorl
mov
or
push
shll
fdivrp
ljmp
fdivrl
cmc
or
add
outsb
aaa
mov
xor
ret
repz
push
xchg
adc
fistl
dec
mov
je
in
push
test
out
mov
pop
sarl
push
dec
xchg
lods
cmp
xchg
pop
cmp
loope
imul
cltd
mov
in
lahf
mov
sahf
push
sbb
mov
and
roll
iret
jbe
adc
sbb
std
jnp
lods
es
mov
pushf
add
mov
adc
mov
lods
ljmp
cmp
pop
and
jns
mov
outsl
mov
les
mov
and
ret
mov
testl
dec
aad
adc
jae
pushf
dec
dec
fs
aam
lahf
enter
dec
mov
mov
je
inc
sbb
push
mov
mov
or
lock
sub
mov
inc
add
xor
inc
xor
arpl
outsl
mov
xor
mov
mov
cmpsb
mov
in
cmp
adc
dec
xlat
mov
popf
lahf
xor
leave
mov
xor
sbb
repz
fwait
shll
cmp
pusha
jbe
xlat
subl
jne
xor
aaa
jbe
rorb
mov
adc
xchg
cli
pop
pop
mov
setae
imul
out
push
out
pushl
jecxz
je
mov
and
lds
cld
nop
out
mov
std
sti
loopne
push
xor
sbb
xchg
inc
mov
sbb
cmpsl
mov
jg
fwait
mov
dec
jne
push
cmpsb
jbe
mov
xchg
xchg
ds
sbb
adc
mov
mov
mov
in
movsl
sub
es
push
push
pop
sub
jge
xchg
or
inc
shl
out
inc
mov
fcomps
pop
gs
shlb
xor
mov
das
cmp
test
jecxz
xor
mov
daa
and
ret
xlat
les
jle
fists
jb
ss
stc
mov
ljmp
or
or
mov
addr16
pop
xchg
hlt
xchg
jle
cmc
shrl
fwait
push
lret
inc
mov
and
mov
push
mov
inc
mov
mov
sub
push
sbb
js
xor
xchg
stos
pop
sub
aad
or
mov
loope
mov
mov
xchg
jg
cmpsb
rcl
popa
push
push
add
imul
cmp
jp
aaa
ret
mov
mov
mov
aas
push
outsb
adc
addr16
xor
cmp
fbstp
movsl
rol
cmp
push
ja
xchg
stos
cmpb
idivb
mov
mov
repz
pop
mov
leave
lret
sbb
int3
jge
dec
mov
cwtl
lahf
mov
test
mov
in
mov
mov
in
or
insl
pop
mov
bnd
and
inc
mov
mov
xor
ds
imul
sub
negb
mov
lds
cmp
sub
scas
pop
adc
xchg
call
mov
add
mov
in
aam
mov
jnp
lea
sbb
shl
sbb
dec
aad
xor
jnp
cmp
arpl
sbb
clc
cli
aam
or
pop
int3
sbb
in
xor
mov
push
xchg
test
mov
jle
adc
rol
jge
mov
out
inc
icebp
mov
cli
lds
mov
ss
call
mov
mov
push
divb
and
push
jbe
mov
lret
cmp
aaa
aam
lcall
test
or
xchg
mov
or
mov
mov
fisubrl
std
int3
pop
and
inc
in
pop
jge
lds
cmc
imul
mov
sub
dec
mov
cmpsl
popf
jo
aaa
mov
pop
rcrb
in
mov
and
cmp
inc
jbe
inc
jns
mov
mov
test
inc
mov
or
aad
sbb
push
das
add
fistpl
repz
inc
pop
mov
icebp
popa
add
mov
clc
or
dec
movsb
jecxz
scas
mov
inc
jp
and
das
jbe
lds
sub
cmp
xlat
test
sbb
mov
lret
cmpsb
push
mov
jne
dec
lods
xchg
push
mov
cmc
es
mov
xchg
cltd
ss
sub
mov
sub
mov
stos
add
ljmp
pop
fdivrp
mov
push
mov
push
lcall
mov
cmpsb
mov
outsl
dec
mov
dec
lret
xor
add
outsl
mov
mov
cs
xchg
jae
xor
mov
loop
jmp
icebp
mov
mov
sub
jb
jmp
ret
data16
xchg
scas
std
xor
add
ss
inc
movsb
sbb
mov
adc
xor
xor
mov
jecxz
ja
test
cmp
sti
dec
mov
ds
lahf
sub
mov
out
add
out
push
mov
rcrl
mov
out
xor
lret
idivl
xlat
push
outsl
repnz
mov
jae
or
mov
dec
ficoms
sub
xor
sub
call
rcrb
lret
js
add
jne
xchg
lahf
or
xlat
pop
outsb
and
fdivr
jns
mov
sahf
inc
nop
jp
stos
std
sahf
clc
icebp
pushf
push
mov
add
movsl
push
mov
pop
aam
mov
stos
sbbl
mov
sahf
gs
push
mov
pushl
enter
fs
aaa
in
cmp
cmpb
mov
jns
dec
sub
mov
into
std
push
or
xchg
push
rorl
enter
xchg
push
jmp
out
stc
pop
push
mov
fisubrl
and
les
lods
daa
xor
ja
pop
fs
fnstenv
jg
jle
mov
aaa
mov
add
cwtl
jbe
mov
mov
invd
cmpsb
hlt
adc
mov
dec
jge
xor
outsb
inc
mov
mov
stc
xchg
cmpsb
push
rcrb
mov
push
cwtl
ror
les
push
mov
adc
data16
add
jmp
int3
pop
divb
cmp
imul
jle
leave
xchg
or
mov
push
negb
adc
es
iret
jecxz
test
push
mov
push
mov
pop
adc
popf
xor
mov
ss
shll
adc
sti
aad
pop
rorl
imul
xchg
mov
ja
cmp
xorb
lods
xor
pop
cmc
repz
mov
mov
leave
sbb
mov
subl
shll
and
in
pop
mov
loopne
movsl
test
cwtl
fdivl
sbb
shll
lret
fstps
ds
pop
jmp
int
inc
xchg
mov
xchg
scas
ret
pop
and
repnz
adc
push
insb
pop
sbb
stos
mov
mov
or
cmpb
lds
fdiv
mov
mov
cmc
out
or
mov
dec
je
cmp
addr16
mov
in
adc
add
aaa
fidivl
das
ror
ss
push
mov
push
xor
adc
enter
and
jge
push
stos
mov
push
ljmp
cltd
dec
dec
xchg
mov
sub
jg
dec
mov
shrl
enter
pop
and
stos
mov
sti
test
xchg
ret
xchg
shr
cmp
mov
je
imul
cli
insl
inc
xor
mov
outsl
es
aad
lock
stos
fidivrl
int3
jmp
push
mov
xchg
pop
mov
outsb
in
lds
cmpsb
fidivl
jmp
mov
shll
adcl
in
cmpsl
out
jo
jb
pop
pop
roll
mov
add
and
ret
leave
lcall
or
movsb
mov
in
mov
fcoml
call
mov
gs
mov
cmp
pop
xchg
and
jecxz
mov
xchg
insl
fwait
mov
or
icebp
call
push
cmp
stc
dec
push
stos
mov
mov
scas
add
inc
dec
rep
stos
cmc
inc
shlb
lods
mov
cmp
mov
xchg
pop
shl
repz
cmp
cmpsl
sbb
enter
push
cmp
or
movsl
ljmp
movsb
inc
call
and
mov
mov
adc
mov
push
jle
inc
ret
mov
divl
sbb
es
mov
sub
jmp
push
mov
insb
and
inc
add
repz
loop
mov
movsl
mov
adc
and
add
mov
inc
adc
lods
jl
mov
dec
sbb
mov
sub
jecxz
loopne
pushf
les
ret
insl
pop
mov
lahf
pop
rorl
mov
out
adcb
je
fwait
xor
mov
pop
adc
dec
push
and
mov
lds
stos
pushf
push
andb
sub
xchg
cld
inc
push
pop
xor
mov
dec
and
lmsw
iret
adc
xchg
mov
and
and
lcall
add
inc
mov
sub
mov
negl
add
or
ja
cld
pushf
dec
sbb
cwtl
jne
stos
into
pusha
push
jg
mov
and
ljmp
or
pusha
mov
jmp
lock
fcmovb
push
mov
push
scas
subb
sub
rolb
lock
and
lods
into
mov
xchg
jnp
sub
mov
nop
mov
out
jge
jbe
orl
jbe
aam
push
test
outsl
or
bsr
daa
ror
es
mov
insl
fst
insb
mov
shll
test
stc
outsb
xor
dec
insl
mov
inc
lock
dec
aad
mov
sbb
pop
movsb
add
int
idivl
inc
js
mov
lds
mov
cs
dec
xchg
repz
es
mov
mov
xlat
sub
sub
inc
frstor
lret
xchg
mov
loope
inc
movsl
mov
mov
adc
pop
jne
xor
push
mov
jmp
test
add
mov
cmc
fwait
cmp
ficoms
sub
negl
xor
jae
dec
mov
in
fldenv
push
jecxz
push
insl
xchg
lds
outsb
ja
das
sub
sbbb
imul
repz
and
mov
push
jbe
scas
mov
lds
and
out
and
test
xchg
ss
xchg
jp
iret
push
loop
out
mov
mov
sbb
ds
cli
jbe
sbb
jnp
jle
pop
mov
sub
mov
adc
xchg
push
mov
dec
or
lds
jmp
test
push
idiv
sbb
xchg
bound
out
inc
sub
mov
dec
aaa
xchg
sbb
adc
scas
add
pop
push
adc
inc
adc
jo
in
mov
das
mov
fsubrl
mov
imul
adc
mov
pusha
divb
jl
jbe
cltd
pop
outsb
imul
ret
or
cmc
std
sbb
sbb
mov
adc
outsb
push
xchg
add
pop
mov
aaa
ss
inc
cmp
loop
mov
mov
adc
ja
movsb
lods
ss
mov
jo
pop
fcmovb
jp
les
jns
pop
repnz
mov
cmpsb
xor
xlat
mov
inc
pusha
clc
cs
cmp
cmpsl
mov
movsl
ja
pop
shl
test
mov
jmp
and
cmp
mov
mov
or
jecxz
stc
sti
aad
xchg
dec
push
mov
and
sub
je
mov
cli
jno
out
bound
popf
scas
outsb
mov
dec
and
clc
push
xor
std
xchg
xor
mov
or
es
imul
mov
mov
mov
or
test
test
movsb
cwtl
jg
dec
popa
mov
mov
xchg
xchg
mov
mov
mov
mov
fisubrs
ss
lods
ljmp
stos
call
rol
xor
mov
aam
mov
sahf
rclb
mov
rcrb
mov
or
and
insl
and
loopne
inc
cmp
pop
jo
pop
adc
das
cltd
mov
aas
movsl
xorb
inc
sub
mov
jg
jb
in
insb
adc
push
inc
lock
sbb
mov
enter
jnp
cmp
mov
jbe
push
sbb
mov
inc
out
popf
xchg
inc
jmp
fwait
mov
leave
fiaddl
outsb
sub
mov
mov
cld
pusha
aas
xchg
jp
xchg
mov
repnz
arpl
push
jle
lds
data16
sub
mov
enter
cs
test
idiv
dec
push
mov
and
insb
lcallw
scas
and
xlat
shlb
mov
mov
jnp
nop
loopne
in
gs
js
ds
mov
jae
pop
cld
lahf
lds
sbb
jge
stos
push
mov
incb
inc
jae
jne
les
fidivrl
pop
ds
jge
je
adc
xchg
add
shlb
enter
xchg
inc
push
jae
cmp
dec
shll
sub
fs
or
or
out
addr16
mov
adc
jne
cwtl
ljmp
jmp
negl
add
xor
cltd
or
daa
test
cmp
fst
lcall
mov
pop
mov
push
stc
push
enter
jae
pop
je
push
or
lock
push
adc
lods
mov
sbb
inc
mov
fdivl
rcrb
inc
cmpsl
scas
shrb
mov
test
orl
mov
sbb
es
cmp
and
mov
aam
xchg
mov
les
fwait
pop
loope
mov
test
int3
xorl
mov
pusha
mov
subl
mov
pop
mov
fwait
push
dec
xchg
aas
jnp
or
push
adc
outsb
addr16
xor
je
xor
rol
stc
clc
mov
jno
in
ja
mov
data16
mov
std
lods
mov
xor
repz
adc
or
inc
sbb
or
pusha
sub
and
lcall
cmp
sub
mov
mov
cmc
out
and
mov
mov
add
aaa
sub
loop
loope
mov
xchg
adc
dec
mov
sahf
mov
mov
enter
adc
sub
add
ret
or
push
mov
test
loopne
shrb
out
sbbl
dec
dec
cli
sti
mov
outsb
mov
int3
bound
clc
xor
aam
mov
mov
mov
ja
mov
out
repnz
xchg
dec
mov
ret
adc
mov
aaa
xchg
xor
mov
es
jl
bound
cltd
addr16
ljmp
cmp
fisubrl
xor
push
ds
iret
sub
xchg
xor
sub
mov
xchg
inc
mov
shl
dec
rcr
mov
mov
in
lods
mov
sub
outsl
ret
pop
pop
in
mov
mov
imul
inc
mov
int
xorl
push
xor
jo
cmpsb
leave
stos
pop
iret
mov
mov
sti
adc
fmul
lret
mov
xor
mov
adc
xchg
dec
mov
js
rclb
inc
fldt
aaa
mov
je
in
jno
cmpsb
andb
adc
push
mov
xchg
mov
xchg
sub
sar
imul
into
dec
rcl
jecxz
pop
mov
lds
push
mov
cmp
shlb
mov
adcb
xchg
adc
ja
ret
or
gs
popf
and
add
inc
daa
adc
or
movsb
div
in
mov
call
aas
insl
ss
sbb
mov
aam
push
mov
fsubl
xchg
ret
test
or
mov
fisttpll
xchg
inc
dec
jae
call
jno
dec
mov
int3
pop
lcall
mov
push
movsl
pop
aaa
xor
pop
aam
push
push
or
mov
and
aam
addr16
sbb
mov
push
mov
push
xchg
push
pushf
mov
xchg
adc
cmc
cmpl
ss
or
adc
out
push
mov
inc
add
mov
outsb
xor
mov
xor
lcall
outsb
or
sahf
in
push
mov
addr16
int3
fsubrl
in
cli
mov
rorl
mov
dec
ret
js
add
arpl
test
mov
cmc
fs
mov
and
data16
xchg
mov
inc
insl
pop
jbe
xchg
std
movsl
jle
pop
mov
push
sbb
or
fisubl
cld
mov
call
push
cmpsb
test
es
jne
imul
jnp
stc
pop
aaa
xchg
and
adc
xorl
push
js
mov
cs
xor
lea
sarb
mov
out
push
test
fsubs
ja
andl
mov
addr16
xor
in
movsl
adc
cli
inc
daa
mov
jb
ds
shlb
test
pop
mov
or
les
xchg
pop
imul
mov
test
push
xchg
data16
lds
movsb
hlt
int
pop
inc
icebp
sahf
or
call
and
xorl
mov
psubsw
mov
mov
or
sahf
fwait
cs
xchg
push
lret
and
cmp
loope
iret
mov
xchg
addr16
jnp
and
jle
mov
idivb
adcl
pop
mov
push
adc
aas
mov
mov
push
imul
xchg
add
shl
cld
aad
inc
pop
idiv
ja
pop
mov
lods
jo
mov
les
xchg
in
dec
jmp
push
xor
out
jmp
dec
and
cmc
add
test
sub
fdivp
and
mov
mov
into
in
scas
mov
xchg
xor
cmp
mov
inc
mov
imul
les
adc
push
cmpsb
in
sbb
pop
shll
push
popa
mov
push
and
mov
sub
out
mov
cmp
arpl
jp
xlat
mov
test
rorb
add
enter
mov
fisttps
mov
divb
cmp
sbb
dec
sahf
jge
incb
fnstenv
int
jl
rol
cltd
jbe
sub
or
js
cmp
jbe
cmp
addr16
sti
cmp
mov
or
ja
inc
dec
aaa
xor
or
dec
mov
cmc
push
mov
pushf
and
or
pop
jo
jnp
in
out
cmpsb
jmp
xchg
inc
xchg
jae
movsb
ficomps
cmpsl
imul
jo
mov
into
fmulp
shll
and
mov
aam
dec
js
jns
mov
pushf
mov
cwtl
cmc
xor
mov
aad
pop
das
push
fwait
nop
stc
mov
imul
test
jno
jnp
bound
mov
lret
cmc
dec
mov
dec
mov
sub
loop
push
inc
or
out
add
mov
pop
testb
xor
fs
mov
cmp
scas
movsb
push
mov
popa
jp
xchg
cmp
dec
push
push
sar
and
sbbb
dec
add
loopne
sti
cmp
in
pop
sbb
ljmp
out
sub
xchg
jo
add
roll
sti
lcall
ret
dec
divl
jmp
dec
sub
push
sbb
sub
in
and
iret
dec
sub
fldt
pop
and
add
xor
popa
mov
adc
mov
push
imul
stos
jb
cmp
mov
sbb
mov
jbe
push
pushf
or
divl
dec
into
cmpsb
add
dec
call
jle
and
and
fwait
mov
pop
xor
mov
adc
pusha
cltd
mov
or
test
cmp
ljmp
push
lahf
addr16
sub
mov
inc
cli
xchg
pushf
xchg
mov
data16
test
xchg
mov
ss
or
cmp
aad
arpl
jbe
push
sub
rorb
call
ret
ret
orb
repz
movsl
dec
push
sbb
mov
xchg
stos
scas
push
jg
mov
les
or
je
jnp
xchg
ret
push
jns
neg
cmpb
pop
jecxz
mov
dec
sbb
sbb
push
mov
pusha
rcrl
xor
inc
jno
and
sti
dec
out
aad
jmp
fdivrs
clc
jnp
push
cmp
lds
cltd
mov
push
imul
sbb
jg
xor
push
addr16
lock
mov
dec
dec
cltd
jle
push
or
pop
or
mov
or
jns
mov
or
movsb
push
mov
adc
jmp
mov
lock
icebp
sub
in
mov
and
sarb
cs
push
rolb
divb
xchg
xor
mov
mov
je
xchg
jp
fiadds
insb
outsl
int3
mov
pushf
mov
loope
add
das
adc
das
push
shl
mov
mov
push
dec
mov
cmp
jle
inc
mov
mov
sub
imul
pop
push
ss
test
xchg
cmp
int3
gs
movl
es
cmpb
lods
das
sbb
jecxz
mov
in
nop
scas
gs
push
ror
test
and
mov
cwtl
jle
inc
and
out
popl
sub
repnz
test
sub
sarl
shlb
scas
push
mov
sbb
out
mov
or
rol
pop
add
stos
enter
mov
xchg
mov
aaa
mov
fistpl
mov
or
sti
mov
push
cmp
xchg
loopne
fists
lea
mull
pusha
xchg
mov
lcall
inc
clc
pop
int3
aaa
add
inc
mov
sbb
rcl
int
jbe
mov
sub
jo
mov
adc
call
aad
inc
hlt
mov
dec
jl
mov
cltd
test
sub
push
lret
pop
mov
add
cmc
ficompl
jg
imul
sti
les
xor
add
push
inc
adc
mov
xchg
dec
inc
dec
xorb
inc
add
adc
outsl
xor
adcb
inc
adc
cmpsb
mov
fisubrl
pop
ja
or
push
or
jbe
lcall
inc
mov
jo
push
lcall
int3
sbb
xor
iret
fwait
cmc
jns
mov
pop
mov
outsl
mov
rorl
push
xchg
mov
dec
fstpt
mov
insb
push
out
and
pop
loop
xchg
mov
dec
fbstp
xchg
or
or
rcrl
sarl
jge
rorb
das
jle
lds
and
adc
or
movsb
ss
popa
imul
testb
lods
in
cmc
cmp
mov
js
add
pop
gs
inc
adc
sub
mov
and
test
hlt
adc
data16
mov
sahf
insb
dec
push
cmp
mov
ret
xor
lea
jbe
sub
xor
mov
jae
sbb
insb
xor
mov
dec
jl
lcall
ss
sbb
les
lret
data16
cld
sub
bound
inc
mov
mov
pop
addr16
nop
outsb
xor
jo
sbb
mov
mov
xchg
adc
es
cltd
adc
adc
jbe
xchg
popf
out
in
mov
addr16
fiadds
dec
xor
sbb
sub
jns
dec
and
xor
pusha
cwtl
mov
push
or
mov
out
repz
push
int3
bound
lea
mov
fstpl
js
loop
xchg
cmpsl
mov
rol
ljmp
fs
lret
loop
inc
xor
xor
ss
in
stc
lret
std
pusha
sub
push
adc
mov
loopne
cld
xchg
movsb
mov
or
ror
jg
and
xchg
cmp
mov
jbe
adc
mov
inc
movsl
xchg
mov
xchg
pop
mov
out
cmp
in
pop
sahf
xor
xor
stc
or
mov
ja
jo
lcall
mov
fmul
fdecstp
mov
es
cwtl
mov
xor
stos
sti
xor
rcll
sbb
lock
or
sarl
cmp
mov
nop
aaa
jmp
pop
xor
jns
pop
pop
jbe
or
test
mov
rcl
hlt
cmp
mov
xor
scas
loop
movl
pop
mov
decl
adcl
add
push
decl
add
lods
ss
lret
imul
out
pop
leave
jl
daa
out
xor
out
and
jg
loope
stc
sub
mov
jne
push
xchg
xor
xor
or
mov
fnstenv
imulb
lods
xchg
push
aas
loopne
jae
mov
mov
ss
je
cmp
fcmovnb
push
mov
mov
rcll
sub
xor
jae
fsubs
subb
push
lods
out
sbb
dec
repz
in
shr
mov
leave
movsb
adc
lods
sbb
pop
cwtl
adc
inc
pusha
mov
addr16
les
add
mov
test
fsin
roll
mov
bnd
je
add
mov
sahf
push
mov
popf
lods
arpl
sub
xlat
pop
sbb
test
into
inc
lret
outsl
pop
mov
xorl
mov
aam
xchg
mov
adc
mov
aas
mov
sub
mov
jg
jmp
mov
inc
push
push
lock
loopne
xor
out
add
loope
inc
mov
roll
mov
test
jp
jmp
addl
sarl
mov
inc
jle
aas
mov
or
js
add
les
pop
cmp
push
cmp
push
sahf
iret
jp
das
inc
pop
cs
jl
fidivs
sbb
mov
sahf
das
jge
addr16
mov
testb
les
adc
imul
mov
dec
inc
in
pop
out
rolb
or
dec
insl
inc
jae
add
mov
lods
sbbl
pop
fnstcw
cld
outsl
jbe
cs
data16
mov
in
inc
mov
dec
imul
mov
mov
push
mov
jo
push
pushl
and
push
xor
jns
mov
mov
aad
popf
mov
stc
popa
call
push
rcll
adc
fidivs
or
int
push
jecxz
pop
mov
lret
push
mov
lock
add
xchg
xor
lcall
ss
dec
data16
arpl
jb
push
adc
mov
push
movsb
xor
push
sbb
xchg
add
xchg
mov
outsb
inc
data16
fucomip
mov
push
add
add
dec
or
ss
sub
call
mov
ds
mov
or
mov
aam
xor
ret
clc
pop
mull
jb
in
mov
sub
nop
mov
sub
insb
jbe
xchg
pop
hlt
lcall
out
sbb
or
data16
cmc
outsb
cmpsl
mov
outsb
adc
mov
mov
jl
xor
xor
mov
mov
imul
pushf
adc
jae
dec
roll
mov
mov
stc
icebp
push
pop
mov
fwait
in
daa
xor
mov
xor
xlat
sbb
ss
pushf
pusha
or
lock
dec
mov
push
sbb
mov
sub
stos
add
unpcklps
mov
mov
mov
in
add
or
sub
and
cmpsb
rcr
mov
and
nop
lods
mov
inc
std
je
dec
push
lea
jne
mov
int
icebp
sbb
pop
stos
inc
imul
test
mov
leave
xorl
mov
xchg
push
scas
push
sbbb
mov
mov
test
in
fdivrp
push
into
pop
mov
mov
out
clc
sub
mov
rorb
mov
mov
mov
inc
insl
cld
fsubs
in
mov
adc
adc
dec
xchg
shll
mov
push
or
cmp
inc
mov
add
or
leave
xchg
jle
ret
jp
cs
adc
or
jle
push
mov
or
rcll
movsl
fnsave
pop
movl
out
loop
daa
xchg
add
aaa
mov
enter
ds
mov
mov
cmp
mov
jmp
push
push
mov
add
add
inc
mov
aam
call
and
or
loope
mov
xchg
push
insb
repz
cmp
aas
mov
fimuls
or
ja
xchg
fmuls
popf
push
push
ss
add
nop
test
ss
push
test
mov
xchg
push
adc
ja
mov
sbb
sub
les
inc
lods
repz
arpl
push
cwtl
bnd
je
aaa
sbb
xchg
fisubrs
movsb
mov
fwait
sahf
out
les
sbb
jbe
mov
out
fildl
mov
es
popf
stos
lds
xor
inc
mov
sbb
xlat
mov
cwtl
push
mov
pop
out
sarb
adc
and
jmp
mov
dec
mov
cltd
and
push
push
push
loopne
xor
out
insl
mov
and
dec
push
mov
test
jp
lock
inc
clc
jg
add
mov
adc
call
andl
push
jp
adc
scas
dec
mov
sahf
dec
mov
inc
ret
in
sub
cld
cltd
mov
jmp
add
pop
sub
xor
jo
ss
rorb
mov
in
cmpsb
addb
xorb
inc
sti
je
insl
mov
mov
xorl
es
jp
popf
outsl
mov
arpl
in
add
mov
repnz
clc
mov
iret
test
mov
mov
in
cmpsl
lock
dec
jo
lcallw
stos
ret
les
xchg
inc
mov
aad
adc
mov
pushf
out
pop
sbb
mov
jnp
aad
in
mov
push
insb
int
fisttpl
stos
je
aaa
sbb
stos
bound
adc
lock
dec
pop
mov
cmpsl
xchg
push
push
mov
imul
push
ja
dec
popf
fbstp
mov
movsb
ret
call
lock
aaa
dec
popf
cmpsl
loop
xchg
mov
les
test
test
xchg
scas
rclb
mov
xor
adc
cld
mov
cmp
shrl
mov
push
xchg
enter
test
mov
jne
mov
mov
mov
aam
out
cwtl
push
lcall
jp
mov
fcoms
sub
push
dec
or
test
pop
std
dec
sbb
mov
das
sub
pop
sbb
xchg
mov
sbb
outsb
mov
mov
inc
lods
bound
jb
sbb
adc
push
adc
add
mov
icebp
lods
fstpl
xor
xchg
dec
popa
aam
neg
or
xrelease
pusha
mov
sti
xor
mov
loop
scas
jle
aad
or
mov
mov
inc
fdivs
sub
mov
cmovnp
push
jge
fidivl
or
arpl
push
stc
mov
jmp
inc
in
sbb
std
repz
aas
push
or
ret
jbe
les
sbb
mov
imul
test
jecxz
push
jne
pop
mov
adc
sbb
arpl
test
mov
mov
test
shl
int3
in
mov
sbb
cmc
fsubr
notl
push
mov
rclb
add
repz
gs
aad
es
mov
and
mov
ja
add
cmp
inc
mov
ds
into
jle
push
mov
mov
xchg
dec
movsb
stc
es
mov
pop
inc
cmpl
push
add
sub
xchg
in
hlt
leave
divl
daa
loop
divb
jmp
stc
int
icebp
dec
cs
sub
xlat
jmp
mov
cmp
cmp
pop
je
xchg
inc
fs
adc
aas
xor
xchg
aaa
jecxz
pop
jg
add
in
orl
mov
inc
cmp
les
mov
push
data16
aas
into
loop
push
xor
adc
pop
mov
pop
mov
xchg
shll
or
ja
popa
xchg
xorb
mov
push
into
in
pop
mov
lods
popa
sbb
xchg
scas
mov
mov
cwtl
aaa
mov
rcl
out
out
stos
push
sub
in
in
mov
repnz
cmpsb
out
popa
mov
mov
stos
cmp
ds
or
jecxz
js
mov
xchg
mov
pop
enter
adc
xchg
shlb
es
mov
icebp
ljmp
insl
fistpll
xorl
mov
pushf
out
test
pop
rcl
rol
mov
test
jp
mov
push
clc
xchg
add
das
add
xor
add
in
push
jle
lcall
cltd
jne
rcr
mov
mov
insl
sahf
lds
inc
sub
lret
mov
push
repz
dec
adc
mov
jbe
sub
inc
sub
idivb
cmp
stos
xchg
sbb
add
mov
lahf
aaa
mov
inc
inc
out
mov
adc
stos
dec
ja
inc
lahf
mov
pop
cmp
mov
fiaddl
push
dec
xchg
pop
mov
sub
and
pop
sub
out
andl
dec
xor
xlat
mov
mov
mov
jle
int
pop
repz
sbb
daa
jmp
mov
ret
sbb
mov
lds
fstp
push
and
lcall
mov
hlt
pop
daa
xor
mov
dec
pushf
sub
mov
xchg
mov
ja
sbb
xchg
mov
xchg
push
mov
aam
cmpb
inc
and
lret
sbb
mov
in
mov
ss
adc
outsl
push
xchg
mov
cmp
add
ror
add
sti
cmp
mov
inc
pop
push
lock
ljmp
inc
cs
mov
fucomp
mov
and
movsl
aam
pushf
cltd
push
mov
scas
ret
cmp
roll
pop
fnstenv
push
mov
and
sti
sbb
mov
dec
imul
pop
mov
sbb
leave
xor
shll
mov
aas
inc
sbb
jbe
out
fdivs
xor
jns
mov
fsubr
add
sbb
test
cli
mov
jae
loopne
xor
push
xchg
mov
loop
mov
outsb
lds
sbbl
shlb
and
xlat
or
mov
js
outsb
push
push
stos
fcmove
sub
cwtl
mov
sarl
lds
push
add
out
scas
push
or
fs
dec
mov
and
fcmovne
shlb
mov
mov
std
mov
dec
mov
ret
rcr
dec
mov
sbb
mov
stos
fstpt
iret
test
out
add
ljmp
jnp
inc
lds
dec
scas
adc
sbb
and
call
pop
pop
into
aad
mov
xor
jo
or
mov
mov
mov
cmp
fadds
adc
mov
add
jbe
mov
movsb
or
sbb
mov
daa
mov
popa
lock
cmc
aas
push
bnd
aad
aam
mov
call
mov
les
or
mov
mov
or
inc
rcl
dec
pop
aad
fcmove
hlt
in
loope
movsb
inc
jle
loop
mov
mov
xor
xchg
and
mov
ret
mov
xchg
repnz
xchg
mov
mov
iret
jo
imul
inc
jbe
hlt
xchg
dec
test
and
mul
loope
jbe
xchg
mov
lods
adc
mov
cmpl
adcl
repnz
fstps
push
push
inc
mov
inc
xchg
stos
mov
stos
push
add
into
sub
hlt
ss
in
sahf
ret
pop
dec
push
rcr
mov
and
inc
push
or
jg
mov
in
pushf
push
mov
xchg
sub
inc
scas
mov
lret
and
out
lcall
sbb
mov
test
rcll
repnz
adc
xor
test
sbb
rcrb
xchg
mov
add
popa
mov
pusha
and
pop
fsubl
mov
enter
adc
xchg
pop
inc
int3
sbb
mov
mov
xchg
adc
mov
push
cwtl
fs
loopne
stos
or
push
test
test
sar
dec
testl
sbbl
cld
clc
dec
push
mov
inc
setne
in
shrl
mov
movsl
out
sub
inc
adc
jge
mov
inc
nop
insl
mov
cwtd
sarl
xchg
adc
inc
add
mov
dec
not
jne
sti
loopne
xchg
adc
mov
mov
js
aaa
and
inc
mov
out
insl
cmp
dec
mov
pop
mov
lods
fimuls
xor
xor
fcmovbe
ds
in
in
out
jle
cmpsb
mov
ljmp
mov
lock
sahf
out
cli
jo
jg
mov
leave
sub
je
and
mov
mov
mov
lds
mov
jb
dec
aad
mov
ret
add
fistpl
dec
jmp
mov
xor
xlat
xor
pop
ds
dec
ss
inc
scas
shll
mov
or
lds
imul
pop
lea
mov
movsl
lds
ljmp
movsb
pop
imul
mov
push
adc
stos
sbb
cmp
pop
jg
movb
fstl
push
pop
jbe
mov
mov
add
mov
push
adc
les
mov
cmp
aas
sbb
jbe
ret
mov
jmp
mov
mov
push
shll
jae
mov
or
dec
mov
pushf
cwtl
xchg
mov
sbb
test
pop
mov
cld
cmpsb
jg
mov
mov
inc
mov
cwtl
jb
adc
mov
xchg
das
xchg
mov
jecxz
adc
fwait
cmc
cmpsb
mov
mov
cmc
dec
lds
into
lahf
push
xchg
sub
xchg
sbb
xchg
mov
sub
mov
xor
inc
jae
in
mov
xlat
and
clc
pusha
fs
imul
mov
call
push
sub
aam
mov
ud1
push
mov
test
mov
xor
pop
sbb
mov
and
mov
fbld
dec
inc
ja
mov
stos
std
scas
or
mov
inc
mov
mov
mov
sbb
dec
stos
bound
mov
test
in
jne
and
dec
sbb
shlb
test
loop
mov
addb
ja
out
icebp
mov
rcr
mov
pop
into
nop
aaa
stos
xor
jl
or
pop
test
lods
shrl
mov
in
out
push
sbb
testb
pusha
stc
icebp
sub
cwtl
les
aas
imul
daa
mov
push
lock
mov
xchg
fs
jle
cmp
mov
pop
pushf
xor
out
or
vmaxpd
fcompl
xor
inc
push
sub
lock
aam
hlt
pextrw
xor
loope
loop
jne
fwait
xchg
dec
mov
mov
int
test
outsl
shll
lea
dec
mov
mov
cmpsl
fstps
inc
inc
aad
jno
xchg
cmpsb
push
lret
vsqrtsd
loope
jge
nop
les
out
pop
push
mov
push
push
mov
fs
pop
shll
sub
ret
insl
rol
dec
push
mov
xchg
aaa
push
xor
dec
mov
dec
cmp
in
xchg
jno
and
ja
mov
cmp
ljmp
adc
es
std
mov
fistps
leave
loopne
movzbl
fadds
inc
scas
jne
je
cwtl
pop
jg
and
out
cmp
fcomip
shlb
ret
and
repnz
in
repz
adc
rcl
imul
adc
mov
xor
enter
pop
stos
mov
sub
dec
sbb
icebp
mov
loopne
test
hlt
ss
mov
mov
sub
or
mov
scas
xor
adc
push
in
out
xchg
pushf
out
mov
and
mov
int
sar
in
aam
cwtl
xor
mov
mov
inc
ljmp
sub
add
and
mov
xor
inc
jle
and
xchg
fistpll
cmp
mov
mull
xchg
sub
mov
or
jp
sub
xor
mov
repnz
and
fidivs
inc
sbb
ss
aam
stc
sub
mov
inc
push
lods
call
insb
dec
in
jge
mov
or
mov
aas
add
push
sbbb
ret
mov
and
das
loope
mov
or
push
leave
mov
js
and
mov
xchg
cmpsb
cmpsl
jne
xchg
mov
cmp
cld
rclb
loopne
and
fcompl
jns
mov
rorb
mov
lcall
push
mov
mov
xlat
or
xor
mov
mov
cmp
pop
push
cmc
daa
ss
sub
dec
sbb
mov
or
loopne
int3
ficompl
jl
and
mov
repz
inc
and
mov
lds
cs
dec
jb
call
mov
adc
xchg
adc
sub
mov
shlb
jns
cmp
pop
cli
push
popf
add
mov
js
je
inc
in
mov
test
jl
mov
lea
flds
and
push
push
cmp
outsb
testl
xor
shlb
pop
clc
insb
mov
lret
push
dec
pop
popa
nop
lcall
pushf
sbb
js
mov
inc
lahf
mov
sub
popa
xor
scas
mov
inc
cli
sbb
cmp
mov
addr16
xchg
mov
mov
xchg
mov
pop
pushfw
push
out
cltd
cmp
cld
pop
dec
nop
sbb
dec
ficoml
xchg
xor
mov
mov
scas
adc
xor
stc
pop
mov
leave
cmp
mov
push
xchg
mov
int3
xor
stc
mov
cli
xlat
mov
mov
js
push
sub
pop
sub
scas
fs
lcall
mov
mov
jo
push
mov
jns
xlat
ret
stos
scas
pop
mov
mov
jle
pop
fiadds
jg
mov
mov
fmull
dec
jne
sbb
mov
decl
jnp
ret
xchg
adc
js
sub
cmpsb
mov
xchg
ror
mov
in
fisubrl
sub
adcl
sub
mov
xor
pop
pusha
fcoml
pop
pushf
ds
lods
inc
dec
gs
xchg
test
es
rcl
les
or
xor
out
sub
cmp
clc
lock
jbe
mov
cmp
lea
lcall
jbe
xor
sub
mov
sub
outsb
or
repnz
mov
and
xor
xor
push
mov
xor
cmp
and
mov
stos
jae
adc
inc
pop
xor
mov
and
pop
push
outsl
jbe
faddp
nop
test
mov
xchg
incb
mov
out
mov
loope
mov
pusha
test
test
jl
mov
gs
fidivs
fs
mov
fnstcw
push
and
lock
jbe
mov
jo
or
mov
data16
imul
jmp
inc
leave
aas
lds
lret
loopne
subb
push
lods
mov
lret
pop
stos
loop
int3
int
mov
leave
das
jmp
or
arpl
push
scas
sub
push
cmpsl
inc
xor
call
jb
insb
stos
cmpsb
imul
shll
sahf
shl
cltd
jnp
adc
mov
leave
popf
mov
cld
ds
fbstp
sbb
adc
cmpsb
xor
add
movsl
lods
data16
dec
sub
xchg
repz
fidivrl
mov
mov
cmp
mov
xchg
and
lea
es
pop
arpl
mov
test
xor
mul
clc
lret
adc
fiadds
gs
mov
mov
in
jp
mov
push
fildll
aam
push
imul
in
data16
das
cmp
sahf
ss
and
jbe
jl
cmp
cs
fildll
adc
aad
mov
push
sub
jbe
outsb
cmc
xchg
mov
xor
mov
out
lahf
test
and
mov
mov
cld
inc
mov
sub
insl
mov
test
lahf
mov
pop
and
mov
cmpsb
push
adc
push
mov
jne
ret
xorb
xor
mov
in
lods
aam
mov
mov
clc
mov
pop
mov
dec
inc
scas
or
mov
mov
xor
mov
xchg
ljmp
push
fmuls
je
mov
enter
add
mov
fadds
int
test
scas
inc
divb
repz
outsb
in
mov
push
cmp
jns
or
mov
inc
xchg
pop
iret
dec
mov
dec
jnp
pop
push
sub
icebp
add
ss
leave
push
xchg
fistpll
cmp
pop
jne
mov
cwtl
pop
inc
cmp
pop
mov
shr
dec
jg
fwait
mov
sti
aaa
or
hlt
push
mov
inc
aam
pusha
dec
push
mov
sti
js
aas
mov
fistps
movsb
ss
sub
push
aaa
inc
jae
mov
enter
xor
cltd
lcall
sbbb
mov
mul
data16
clc
inc
mov
add
test
les
jg
push
mov
out
adc
daa
inc
test
jecxz
add
cmp
sbb
mov
add
xchg
push
push
stos
ss
or
mov
xor
cmp
xchg
fs
mov
push
repnz
pusha
dec
jbe
mov
outsb
es
lods
int3
hlt
xor
push
cli
loop
scas
cmpsb
push
aad
push
loopne
test
std
xor
push
mov
and
imul
inc
and
fistl
aad
hlt
cmp
ret
adc
movsb
cmp
addr16
push
jg
mov
fisubrl
out
xchg
mov
sbb
xor
fwait
mov
cmp
jge
sbb
in
sbb
rorl
cltd
sahf
repz
push
sub
xor
adc
xchg
out
or
xchg
pop
jmp
sub
ret
aas
pusha
jp
outsl
mov
mov
dec
sub
mov
and
gs
jbe
daa
cmp
inc
aad
ffree
imul
mov
dec
pop
mov
enter
mov
fcomps
leave
fnstsw
push
jg
movsb
ficompl
cmp
push
cmp
dec
repnz
ja
aas
mov
pop
lret
jns
sub
sub
jbe
es
mov
daa
jmp
inc
pushf
sbb
cmp
xchg
imul
pop
int
mov
push
add
loope
xlat
daa
mov
mov
sub
idivb
mov
stos
mov
loop
xor
mov
or
sti
add
stos
add
int
cli
mov
stos
mov
fs
xor
cmp
inc
test
mov
insb
movsl
outsb
inc
mov
jge
ja
cmpsl
dec
sbbb
loopne
mov
aad
repz
cmp
gs
xchg
mov
jle
pop
sbb
lock
cwtl
adcl
mov
in
inc
add
dec
adc
jo
std
and
jge
mov
enter
cmpsb
imul
or
scas
fwait
sbb
xchg
aaa
lret
xchg
pop
xchg
sbb
adc
xchg
sub
xor
or
stc
mov
aas
int
mov
xor
mov
fstpl
cmp
lea
dec
mov
xchg
mov
add
test
jp
dec
sbb
fidivrs
add
mov
ljmp
mov
lds
mov
mov
jmp
and
mov
idivl
scas
rcl
mov
lds
and
mov
cltd
out
mov
sub
mov
ljmp
and
pop
in
mov
fwait
idivb
mov
mov
mov
adc
test
xchg
mov
in
leave
add
pop
jb
sub
mov
inc
mov
mov
into
mov
xchg
cmc
lods
inc
sub
in
xor
sahf
outsl
mov
pop
pop
or
in
pop
mov
in
imul
sub
in
shll
mov
mov
jo
jmp
es
test
xchg
mov
fsubl
jns
pop
mov
mov
int
lahf
stos
mov
mov
or
aad
test
insl
xchg
fldt
leave
mov
jno
std
aam
mov
pop
subl
dec
mov
mov
scas
cmpb
mov
shlb
es
imul
mov
aam
mov
mov
scas
dec
push
aaa
iret
add
add
movsb
andb
mov
dec
js
xchg
cmp
xchg
xchg
ss
cmp
pop
lock
add
mov
std
pop
xchg
int3
mov
ljmp
mov
call
cli
dec
es
mov
adc
mov
push
addl
insl
add
push
popa
sub
push
repnz
mov
ret
mov
dec
movsl
out
lods
lcall
cmp
aad
std
and
inc
dec
data16
jle
sub
xchg
test
inc
mov
xchg
divb
mov
push
jbe
sbb
mov
je
mov
pushf
and
lock
xorl
lahf
mov
xorb
jbe
lock
mov
push
xchg
fwait
invd
push
xor
fdivl
call
adc
nop
outsb
pusha
mov
or
dec
push
add
mov
int3
mov
sbb
xchg
xor
mov
ss
out
scas
test
xor
and
fs
mov
and
lret
test
loopne
mov
inc
jl
cmp
fiadds
mov
outsb
push
fistps
outsl
addr16
jns
mov
cld
mov
idivb
cmp
mov
ds
cld
mov
jne
pop
outsl
jbe
lea
dec
xchg
frstpm(287
lcall
les
pop
mov
insb
lock
mov
aam
pop
pop
push
into
mov
shll
mov
aaa
fnsave
push
pop
jbe
rcll
shrb
aas
imul
inc
les
aam
jae
mov
xchg
std
daa
pmaxub
lock
cs
mov
jmp
ss
out
dec
or
scas
push
pop
sbb
mov
push
out
mov
push
pop
icebp
mov
hlt
js
dec
xchg
std
mov
jmp
mov
and
lahf
int
sbb
je
test
sbb
mov
movsb
mov
mov
dec
call
mov
inc
repnz
lret
movsb
and
mov
mov
divb
xor
jge
cs
cld
fidivrs
mov
les
fstps
mov
dec
and
jp
sahf
mov
ss
shl
cmp
in
mov
loopne
lahf
ljmp
adcb
aad
daa
jp
testl
out
test
ss
int
stc
sbb
mov
scas
lcall
jae
cmpsb
es
fs
stos
cmc
xor
mov
or
inc
rcll
les
out
daa
dec
mov
imul
or
add
out
insb
sbb
imul
push
mov
mov
pop
adc
xchg
mov
sbb
adc
mov
ss
mov
pop
mov
mov
hlt
dec
mov
loopne
add
aad
out
iret
jbe
rcrl
mov
mov
mov
mov
mov
and
inc
jnp
push
mov
sub
inc
and
mov
sub
adc
cmp
jl
inc
cmp
xchg
cltd
mov
lods
or
mov
test
idivb
cld
pop
and
jl
xchg
xchg
push
test
repnz
jg
mov
shrb
inc
pop
dec
mov
es
lods
xor
mov
mov
mov
mov
call
inc
gs
xchg
mov
sbb
ja
mov
xor
mov
orl
cli
xchg
les
and
mov
xorl
and
out
xor
mov
cmpsb
mov
cmc
sbb
xchg
test
dec
mov
push
out
mov
arpl
je
or
jp
aam
pushf
bound
lcall
xor
mov
inc
mov
mov
imul
out
test
lds
and
lret
dec
inc
icebp
mov
movsb
in
push
popa
loope
xor
xchg
xchg
mov
and
insl
sti
scas
pop
imul
addl
loop
cmp
in
xor
imul
iret
call
cltd
mov
nop
aam
xor
cmp
jo
cmp
test
leave
mov
mov
inc
shll
mov
cmp
jae
outsb
xchg
push
insb
dec
push
clc
xor
cmp
pop
mov
jle
sbb
mov
push
out
sub
jp
lock
inc
mov
jb
mov
fbld
fs
jge
inc
jecxz
xchg
cltd
cmp
icebp
inc
aam
mov
mov
cmp
bound
out
xor
mov
inc
xor
mov
push
je
xor
rorb
in
sbb
mov
mov
mov
clc
es
setne
ljmp
pop
pop
mov
fldcw
fs
fidivs
sub
mov
cwtl
inc
sub
mov
nop
xchg
pop
in
and
sub
cld
mov
test
stos
push
inc
mov
jg
adc
jecxz
mov
lret
mov
lock
xchg
jle
hlt
adc
scas
pop
nop
mov
dec
xor
shlb
adc
jl
pushf
mov
mov
jbe
jp
add
call
add
mov
fsubs
les
fwait
xchg
jmp
dec
xor
add
int
test
insb
daa
mov
jo
pop
ffree
rcrb
mov
test
mov
stc
cltd
iret
or
mov
pop
adc
out
sub
mov
mov
pop
clc
xor
mov
icebp
lods
adc
xchg
movsl
adc
and
cmp
mov
cs
shlb
push
push
sbb
jp
ljmp
orl
adc
mov
xchg
add
fidivl
pop
jp
loope
mov
out
xchg
adc
mov
push
push
popf
aaa
mov
fisubrs
add
mov
flds
mov
mov
icebp
aad
jmp
push
fdivrs
inc
mov
jae
xchg
ror
mov
lret
inc
mov
ja
mov
dec
addb
mov
sub
ret
in
jmp
test
mov
int3
sbb
sahf
jbe
aam
jg
test
mov
mov
sti
sub
test
enter
jg
pusha
repnz
out
mov
outsl
mov
mov
movsb
mov
insb
add
stos
arpl
daa
pop
aad
jmp
mov
in
pop
scas
pop
loopne
cmp
and
mov
addr16
and
jmp
mov
push
or
xchg
out
mov
mov
sarl
outsl
mov
test
std
push
mov
mov
out
add
in
mov
push
mov
mov
nop
xor
sub
mov
adc
sub
jge
lods
mov
sahf
cmpsl
insl
in
inc
xchg
push
daa
jl
inc
outsb
ss
or
jle
clc
push
mov
dec
sub
xchg
cmc
xor
pop
negb
fdivrp
add
mov
or
xchg
xor
movsl
pop
mov
push
les
lds
test
adc
lods
fwait
fs
mov
inc
xor
outsl
lahf
sub
popa
out
sbb
jns
mov
int
movb
std
cmp
adc
out
cmpsl
rcll
dec
pop
mov
pusha
cmp
sbb
mov
push
daa
jns
push
mov
bnd
dec
je
xchg
mov
aad
int
inc
push
test
jl
in
je
xor
bound
mov
and
push
or
mov
xchg
push
add
imul
loopne
ret
sbb
pop
mov
adc
and
fisttpll
fistl
popa
pushf
jbe
es
xchg
sub
mov
mov
pushf
cmp
out
loopne
sub
mov
cmp
xor
mov
mov
sub
add
hlt
pop
mov
mov
cmp
and
pop
mov
xlat
fld
add
mov
mov
sub
mov
pusha
push
jae
leave
clc
insb
mov
inc
jns
lcall
addr16
repz
mov
andl
imull
fbld
add
sub
inc
jb
call
jmp
xor
icebp
xchg
sbb
mov
mov
pop
rcrl
mov
dec
mov
push
mov
dec
imul
mov
xor
mov
add
dec
mov
and
xchg
cmp
pusha
mov
xchg
jne
sub
ror
cmp
movsl
mov
leave
setle
arpl
lea
adc
les
and
pop
and
fiadds
mov
ja
nop
inc
sub
push
cmpsl
ffree
xor
cmp
xchg
subl
xchg
das
mov
fbstp
scas
xorl
jb
xchg
and
push
adc
lcall
movsl
shlb
push
mov
outsb
or
pop
test
int3
lods
or
add
out
add
mov
mov
loop
gs
pop
es
xor
mov
jg
fiadds
mov
mov
rcll
daa
mov
mov
popa
jne
pushf
repz
pop
cmp
jno
pop
sub
stc
push
mov
mov
iret
inc
int3
pop
or
cmp
sti
ss
fmull
fnstenv
incl
adc
mov
mov
sub
loopne
cmpsb
xchg
mov
pusha
test
mov
cmp
jl
pop
mov
dec
ss
mov
iret
mov
jae
xor
inc
inc
mov
inc
xchg
xchg
inc
test
cmpsb
mulb
jp
in
loope
sbb
mov
shlb
loopne
ret
rcrl
mov
fisubs
cmc
mov
add
xor
mov
sbb
sub
push
mov
jmp
cmp
jp
mov
sar
mov
inc
jne
out
ja
pop
xor
adc
movsl
cmp
jl
push
mov
imul
fidivs
sbb
or
inc
cwtl
cmp
sbb
out
push
out
ret
into
nop
mov
shr
sti
repnz
xchg
mov
out
ds
add
das
popf
mov
adc
mov
mov
sbb
xchg
cld
mov
mov
outsl
push
enter
xor
mov
sub
sbb
push
call
aam
cmpsb
push
push
mov
push
and
inc
loopne
mov
ss
inc
dec
cmpsl
shll
push
in
icebp
test
jp
stc
push
cmc
out
mov
mov
add
xor
rorl
jecxz
cmp
and
loop
push
xorb
adc
sahf
mov
pop
and
inc
mov
clc
xchg
jl
lret
lds
repz
dec
popf
out
sub
in
cmc
adc
and
xchg
or
test
jnp
add
ljmp
sbb
insl
mov
lds
xchg
pushf
mov
mov
lods
add
fcmovbe
fildll
xchg
pop
mov
in
push
lret
cmpsb
aam
dec
loope
xchg
push
outsl
inc
out
and
subl
inc
mov
jo
rol
pop
ret
imul
lcall
fstp
in
loopne
jns
in
stos
mov
nop
push
mov
aad
in
in
push
inc
mov
aad
outsl
mov
or
out
xchg
push
mov
pop
enter
cltd
lret
mov
dec
push
add
xor
out
xchg
or
sbb
add
les
dec
push
mov
mov
jbe
aam
mov
push
lcall
mov
xchg
xorl
mov
imul
popa
fucomi
add
sarl
mov
lods
shll
inc
enter
out
mov
or
mov
aam
adc
push
mov
test
ret
cmp
mov
sbb
test
push
and
mov
fbstp
aad
xchg
ret
mov
lcall
mov
sbb
ss
or
dec
sub
inc
out
stos
inc
and
adc
addr16
sbb
xor
and
fnstsw
jecxz
fwait
inc
pushf
lods
add
fnstcw
test
push
out
mov
dec
stc
jbe
xchg
rorl
mov
push
lret
mov
mov
xor
or
pushf
and
popf
cmp
scas
inc
adc
sub
js
or
bound
out
push
jns
xor
add
sub
push
or
movzbl
adc
test
lahf
pop
pop
or
movsb
sub
fwait
mov
test
or
stos
push
std
jmp
and
mov
mov
ret
scas
shr
movb
mov
sub
and
repz
mov
pop
xchg
jbe
sbbb
xchg
les
adc
pop
les
test
jbe
jns
imul
lea
into
mov
add
xabort
sub
add
nop
pop
pop
sahf
mov
out
mov
lret
or
jecxz
xchg
clc
lea
or
and
xor
xchg
sbb
lock
sti
shll
into
mov
imul
stc
lods
pop
mov
or
push
aam
or
pop
xchg
mov
jge
xchg
xorb
hlt
loope
mov
icebp
or
loop
sarl
and
jbe
jne
cmc
fwait
cs
mov
mov
sbb
mov
aam
mov
push
out
mov
xchg
ror
jns
ss
sarl
cltd
imul
pop
aaa
mov
stos
mov
mov
addr16
pop
mov
mov
mov
push
rolb
mov
push
and
lods
or
ss
mov
cmp
or
sbb
shrl
fcmove
inc
mov
and
mov
jmp
pop
mov
mov
repz
in
jno
mov
fstpl
inc
push
inc
scas
mov
iret
mov
and
out
inc
and
test
repnz
sub
out
or
mov
imul
pushf
push
mov
mov
lret
lods
pop
mov
mov
stos
adc
xchg
cwtl
xchg
out
sbb
sub
ss
shll
mov
xchg
mov
mov
cmp
mov
mov
out
xor
rorl
loope
push
test
mov
push
ss
clc
sub
cmp
hlt
out
mov
in
push
jbe
mov
mov
and
sub
push
jp,pn
stos
outsl
sahf
popf
mov
insb
inc
popa
xorb
inc
lcall
out
pop
outsl
mov
movsl
jbe
cmc
scas
push
mov
notb
mov
sbb
add
jnp
ret
loope
inc
xchg
leave
insl
mov
out
dec
dec
add
mov
cltd
xor
lods
and
clc
mov
pop
imul
or
push
xor
in
or
xlat
imul
push
adc
fdiv
xorl
jg
mov
outsl
cli
pop
ret
insb
xchg
inc
les
cmp
push
push
mov
fistpll
cmpsb
mov
or
andl
jb
and
dec
mov
bound
push
or
xchg
ja
jae
outsb
add
inc
cmpsb
xor
push
inc
cmp
js
dec
les
inc
lds
jl
fildl
adc
movsb
mov
or
adc
bound
shlb
ljmp
push
add
sbb
pop
fmulp
jmp
xor
mov
sbb
mov
cli
push
js
lods
dec
mov
aam
popa
stc
push
out
cmp
mov
or
rolb
arpl
in
sub
fimuls
sbb
dec
loope
mov
subb
sub
sbb
iret
data16
add
fiadds
cmpsl
out
loopne
sti
jb
ds
jp
aad
and
out
and
jge
outsb
mov
jecxz
sti
mov
cmp
push
pop
mov
inc
dec
int3
sub
xchg
add
xor
push
data16
fwait
sbb
xor
lods
mov
and
jg
lds
mov
or
outsb
ss
cwtl
push
mov
ret
xorl
cli
mov
mov
loop
mov
mov
test
cmp
jp
mov
or
aaa
fs
aas
mov
and
cmc
mov
inc
fadds
stos
fbstp
mov
mov
cld
leave
into
push
sbb
xor
dec
jg
pop
cmc
adc
lods
mov
jne
push
jbe
stc
rcr
jnp
xor
adc
stos
dec
xorb
pop
nop
shlb
and
jp
insl
sub
sub
inc
mov
aad
adc
mov
lea
imul
out
gs
es
cmpsb
jae
mov
mov
je
xor
imul
mov
cmpsl
loopne
ret
jle
xchg
xchg
push
mov
xor
and
or
mov
pop
testb
lret
jo
push
cltd
stos
pop
mov
mov
hlt
add
push
icebp
mov
mov
xchg
ljmp
jo
mov
cs
mov
mov
xorl
xchg
mov
dec
sti
cmp
jns
shrl
xchg
mov
rcrb
mov
rolb
xchg
mov
hlt
lods
pop
mov
sahf
push
mov
sub
mov
rcrl
mov
cmp
jb
xchg
stos
test
fcoms
aas
std
mov
lret
push
cli
ss
push
xchg
cmp
pop
into
push
mov
push
rolb
mov
ja
test
mov
lods
and
mov
repz
mov
mov
leave
scas
xchg
stc
sbb
jbe
dec
cwtl
mov
and
out
or
sub
mov
sti
push
ror
fdiv
mov
or
out
out
mov
xor
cmc
sub
lahf
arpl
jb
hlt
mov
mov
jg
pop
xchg
pop
ja
xchg
cld
mov
imul
mov
lcall
mov
dec
xchg
push
push
jne
loopne
inc
aas
xor
mov
mov
mov
outsb
mov
cmp
adc
push
cmpsb
mov
clc
cmp
cmp
mov
lock
test
add
loop
mov
test
mov
jge
push
xchg
inc
enter
dec
faddp
mov
loope
ja
pushl
clc
dec
mov
divb
sbb
mov
enter
outsl
shll
cmpsb
cltd
inc
mov
int
insl
xor
dec
lds
jne
mov
fxch
lods
add
out
add
inc
xchg
pop
out
or
mov
mov
scas
imul
mov
inc
lods
test
inc
jecxz
or
push
jne
jno
mov
adc
shll
popf
and
adc
add
sbb
mov
sub
jbe
jp
aam
fistl
bound
jno
nop
insb
xor
jmp
cs
div
mov
mov
shll
ljmp
into
mov
shll
cmp
sbb
xchg
dec
ret
std
push
mov
sahf
stc
mov
push
jle
movsb
dec
arpl
sub
mov
push
jnp
popf
clc
leave
adc
mov
adc
cmp
push
adc
das
cmp
mov
lcall
lods
in
mov
call
adc
xchg
fstps
aam
movsb
aad
push
outsb
add
push
mull
push
out
adc
push
mov
or
les
xor
mov
push
jnp
mov
stc
sbb
in
pop
shlw
jl
push
dec
mov
popa
jb
outsb
add
lods
out
xor
sbb
jecxz
aas
xchg
pushf
das
mov
ds
jnp
dec
sbb
int
dec
push
fsts
xchg
adc
jmp
add
icebp
add
lcall
mov
jb
xlat
fadd
dec
pusha
mov
mov
or
or
shll
push
mov
int3
xchg
sub
mov
stos
gs
jg
enter
ret
test
lds
pop
or
inc
aad
and
shlb
aas
and
nop
pop
leave
xchg
std
jmp
dec
xchg
ret
jl
mov
add
rcr
stos
jle
mov
jg
dec
test
fbstp
mov
xchg
and
or
stos
ret
cmpb
cmpsl
mov
mov
rclb
in
mov
das
mov
push
adc
mov
xchg
orb
aam
push
pop
sub
sbb
aas
mov
aad
cmp
mov
pusha
sbb
lahf
pop
call
out
xor
daa
inc
cli
movsb
lock
pop
outsl
ffree
pop
addr16
hlt
mov
mov
mov
stc
lret
sub
or
sbb
out
or
push
mov
cmpsb
enter
mov
lds
daa
add
push
nop
out
mov
movsl
or
mov
repz
jle
push
mov
sti
jmp
mov
lods
pushf
iret
pop
jnp
cmp
int
pop
xchg
push
lret
les
mov
out
loope
inc
outsb
mov
shl
jbe
in
add
shlb
ficoms
xor
aad
movsb
fxam
in
cmpsl
push
xor
sub
xchg
es
mov
and
popa
jnp
adc
mov
inc
ss
icebp
ja
dec
xor
lods
sbb
sub
mov
idiv
scas
leave
pop
jb
push
sbb
xchg
gs
sub
cmc
mov
mov
pop
stos
inc
cmpsl
inc
test
cmp
test
out
jo
mov
push
add
ds
fwait
mov
sbb
cmc
mov
mov
xor
cmpsb
dec
mov
mov
adc
into
stos
mov
sbb
pop
gs
push
aam
mov
js
mov
addr16
cmpsb
loopne
nop
mov
loop
shr
testb
rcrl
mov
mov
test
sub
mov
mov
add
add
inc
ret
mov
mov
xor
mov
cmp
adc
test
xchg
sahf
inc
jb
das
lcall
cltd
dec
mov
sub
push
mov
xor
sub
mov
test
or
sti
lahf
ljmp
xchg
icebp
cli
sbb
push
enter
jb
incl
inc
fsubrl
mov
jnp
mov
bound
push
mov
xchg
data16
repnz
or
mov
aas
in
cli
cmpsb
mov
aam
inc
nop
std
adc
mov
aad
mov
jo
mov
cmp
mov
int
test
fdivl
xchg
pop
jns
push
mov
imul
aad
mov
addr16
adc
lds
je
mov
jno
push
adc
pop
or
cs
mov
in
addr16
scas
adc
mov
mov
ret
shrl
cmp
int
cli
push
mov
jne
fcmovnb
std
mov
mov
dec
stos
insb
test
and
add
mov
xchg
inc
xchg
xchg
lea
idivl
rol
mov
add
push
cmp
into
pusha
mov
in
pop
ljmp
xor
es
jl
mov
jmp
ss
in
popf
mov
ret
testl
and
aas
out
mov
jae
ja
insb
cwtl
mov
cmp
sti
and
das
or
sbb
sarb
sbb
outsb
sub
mov
and
in
adc
xchg
add
addl
mov
and
jecxz
mov
cmp
sub
dec
call
push
xor
mov
stos
sbb
pushf
fsubl
fwait
cmp
iret
mov
or
sbb
repz
mov
outsl
addb
sub
enter
dec
xor
sub
jns
mov
negl
test
mov
mov
dec
arpl
mov
cmp
or
mov
inc
add
push
loop
enter
mov
mov
out
mov
push
push
test
loopne
push
ds
sbb
mov
inc
jg
adc
mov
jne
orl
jnp
pusha
cmpsb
xchg
lods
dec
enter
jns
addb
mov
xor
icebp
in
shlb
cmp
mov
leave
sbb
jae
inc
pop
mov
sarl
mov
xor
jmp
loopne
mov
xorb
add
aam
jg
mov
dec
lock
mov
pushf
ffree
or
in
mov
aaa
cmpsb
in
mov
pop
jp
or
pusha
cmp
or
and
ljmp
push
and
icebp
pop
int
loop
das
sub
dec
and
mov
cs
mov
adc
or
mov
mov
pop
jmp
xchg
mov
es
xchg
push
inc
cmp
push
mov
xchg
dec
dec
push
and
rcrl
loope
das
setb
mov
cmp
dec
push
popf
or
ficoms
pusha
add
sbbl
fxtract
stos
sbb
push
loop
aas
jmp
sub
cltd
xor
ss
cmp
int3
andb
lds
shll
into
scas
mov
orl
ret
fsubrl
xor
lret
mov
stos
in
cmp
lock
cmpsl
mov
add
scas
in
lret
mov
mov
fidivrs
stos
push
inc
sbb
stos
mov
repnz
mov
out
repz
xor
lahf
xchg
ds
stos
icebp
data16
arpl
sbbb
jbe
sahf
xor
lret
push
pop
adcb
notb
imul
mov
and
push
mov
push
jle
adc
sub
enter
mov
std
roll
mov
cmp
xor
fstl
clc
arpl
xchg
mov
inc
ss
ljmp
jge
mov
push
aaa
cmp
mov
push
xor
filds
mov
xchg
jns
jl
ret
cltd
push
sti
mov
outsl
mov
ljmp
sahf
loopne
cmc
mov
mov
jecxz
adc
movsb
addr16
and
push
add
cmc
clc
aaa
or
dec
jecxz
mov
dec
adcb
mov
into
sub
sbb
scas
add
mov
repnz
sub
cmpsb
inc
mov
fistpl
mov
or
inc
sub
pop
xchg
ja
incb
imul
stc
adc
jbe
and
mov
mov
adc
push
mov
fistpl
sub
xor
and
xorb
push
cmc
mov
xor
sub
out
or
mov
imul
rorl
jp
mov
pop
incb
in
xor
addl
imul
jnp
cmp
xchg
xchg
xlat
shlb
repz
cmp
dec
cltd
popf
add
jno
mov
aam
mov
sbb
call
mov
addr16
mov
aam
add
mov
mov
cltd
jne
iret
pushf
add
add
jle
mov
rclb
pop
sbb
xchg
mov
into
inc
in
lcall
shrb
mov
movsl
dec
mov
data16
mov
sub
jb
add
jg
pop
inc
loope
rcll
or
xor
pop
jo
mov
mov
jae
pushf
mov
in
inc
dec
mov
dec
lahf
mov
cmpsl
popf
dec
inc
sarl
stos
jmp
lss
mov
clc
mov
and
or
or
loop
xor
dec
cwtl
mov
push
adc
mov
loop
cli
cmp
jle
js
rcr
xor
or
and
fdivl
xor
mov
call
mov
inc
fldl
mov
std
out
sub
int3
pushf
xor
cld
shlb
sbb
adc
jg,pt
imul
mov
dec
jnp
aad
xchg
mov
xchg
mov
xor
rcrb
in
xchg
aam
out
into
ficomps
push
xor
or
ss
cmp
push
shr
incl
xlat
jne
sub
addr16
mov
out
mov
rclb
sbb
mov
jmp
andb
inc
or
push
mov
pop
mov
or
inc
xor
push
sbb
or
popa
shll
ja
das
out
pop
mov
insl
fmuls
movb
mov
das
inc
bound
movsb
jne
test
sub
rclb
cmpsb
leave
mov
sub
mov
mov
hlt
int
cmp
push
mov
js
mov
sahf
push
lret
xchg
pop
test
imul
insb
repnz
xchg
mov
mov
mov
mov
mov
addl
inc
mov
cmpsb
pop
mov
push
out
aas
bound
push
push
mov
pop
add
dec
push
cmpsb
divb
mov
or
test
mov
hlt
rolb
mov
push
test
in
test
test
leave
idiv
loope
repz
les
scas
fwait
lcall
and
movsl
xlat
lock
cmp
js
repnz
hlt
out
lock
mov
ret
sahf
stos
ds
fisttpl
cmp
bound
mov
out
sbb
pop
jns
mov
das
repnz
adc
add
mov
stc
mov
test
mov
adc
test
push
xchg
lea
push
pusha
scas
js
shrb
std
test
sub
cmpsl
push
sarb
aas
mov
cli
and
clc
jbe
mov
add
js
lock
loop
add
push
mov
cmp
mov
adc
cmpsb
test
sub
jle
std
xchg
int3
jl
bound
xchg
mov
and
pushf
sub
clc
mov
xchg
pop
add
push
es
aad
adc
add
pop
add
mov
push
mov
insl
jo
int
cmp
xchg
sub
imul
mov
pop
mov
xchg
jp
cmpsb
fwait
stos
loop
ja
sbb
xorl
mov
xchg
jo
dec
sbbb
outsb
sar
addl
lock
jns
mov
xlat
mov
mov
inc
ljmp
dec
dec
jo
cmpsb
lret
lods
mov
daa
mov
cmpw
cmp
mov
dec
nop
jl
scas
pop
mov
add
ds
outsl
imul
mov
in
dec
push
mov
mov
push
movzbl
mov
cmp
lock
popa
push
adc
in
clc
mov
mov
dec
adc
pop
enter
aaa
mov
jno
je
sbb
or
inc
mov
call
repnz
jmp
in
mov
sub
cmp
xchg
adc
das
movsb
arpl
push
lret
mov
jmp
gs
mov
mov
or
das
ja
pop
push
sbb
sub
data16
sarb
scas
ss
jb
ljmp
xor
push
dec
inc
mov
jecxz
les
je
sbb
lahf
mov
xchg
dec
sbb
mov
xchg
outsb
sub
push
rclb
lcall
les
and
xchg
mov
pusha
push
dec
inc
or
outsb
mov
into
push
cmp
sbb
push
sub
push
clc
cli
roll
adc
push
repz
js
addr16
mov
or
xchg
sbb
xchg
cmp
inc
xor
mov
nop
jbe
mov
data16
push
push
and
cld
mov
jle
sbb
notl
jge
pop
pusha
dec
test
subb
jbe
cmpsb
cmpsl
jnp
scas
and
adc
bound
mov
xchg
pushf
rorb
in
push
insl
adc
cltd
mov
int3
xor
fucom
sub
icebp
ja
aaa
adc
pop
into
xchg
mov
inc
mov
popf
fsubrs
sbb
mov
ljmp
mov
out
dec
inc
in
add
push
xor
push
push
fcomi
mov
xchg
fnstsw
mov
or
pop
cmp
js
mov
xchg
in
pop
rcrb
inc
push
xchg
cmpsb
cltd
sub
or
nop
xor
or
in
xchg
inc
mov
lret
cmc
pop
int
mov
fsubrl
clc
xchg
repnz
and
sub
and
popl
aam
movsb
rolb
mov
lret
fcoml
add
xchg
ret
mov
ljmp
mov
es
fiadds
mov
cmc
je
jbe
pop
fsts
jge
lods
xchg
rclb
fcmovnb
xor
ss
idivl
repnz
dec
push
cld
pop
shll
mov
jnp
mov
xor
inc
lods
pop
fdivs
mov
push
subl
leave
inc
test
sbb
mov
int
push
lods
inc
cwtl
scas
mov
out
and
add
test
inc
sbb
rorl
push
mov
xorb
bound
sbb
mov
push
sbb
out
mov
lret
data16
jo
mov
pop
adc
xchg
lahf
loopne
sbb
jae
mov
aas
imul
push
lods
fstl
push
out
cmpsl
mov
jo
shrb
stos
dec
mov
pop
fwait
test
dec
mov
sub
xor
jecxz
mov
push
call
rorb
inc
divb
mov
mov
inc
loopne
rcll
mov
or
mov
sahf
add
mov
fs
movsl
jl
jbe
mov
jne
sbb
add
xor
inc
out
cmc
lret
mov
sbb
sar
xor
xchg
mov
inc
pop
mov
mov
aaa
and
insl
das
stos
ret
aam
pop
mov
push
mov
jo
test
imul
mov
xor
add
add
cmpsb
test
imul
nop
mov
cmp
xor
push
xlat
sti
cmpsl
negb
scas
mov
mov
out
mov
cmp
fdivr
arpl
mov
aas
or
mov
dec
add
xor
mov
data16
movsb
out
loopne
fldt
xor
mov
hlt
mov
pop
push
jg
mov
dec
pop
je
iret
mov
test
add
out
xchg
lahf
mov
mov
sbb
mov
dec
jg
xor
movsb
jbe
ja
pop
mov
rcll
cwtl
jae
xchg
xorl
mov
sahf
lods
cltd
cmp
lds
cld
ljmp
fisttpll
cmp
ja
mov
outsb
shlb
jbe
or
push
sub
mov
std
mov
add
jbe
mov
jg
xchg
push
test
icebp
push
jae
adc
insb
popa
mov
arpl
das
cs
sbb
or
sub
xor
inc
mov
adc
cs
xor
inc
out
mov
mov
sub
mov
or
dec
fisttpll
xchg
mov
mov
popf
cs
lea
mov
fwait
dec
mov
es
sbb
mov
xchg
or
mov
enter
aas
lcall
mov
arpl
popa
mov
xchg
and
fimuls
lea
cmovge
sarl
inc
jbe
adc
mov
enter
dec
push
idivb
ss
jecxz
jge
inc
mov
fdivl
push
ret
mov
sbb
pop
cld
fmuls
sbb
mov
stos
mov
jg
mov
aam
insl
cmp
jne
xchg
fnstenv
addl
mov
stc
xchg
xchg
loope
adc
mov
inc
addb
mov
mov
aas
inc
mov
psadbw
push
mov
pop
xor
mov
daa
or
jo
pop
movsb
and
out
cld
ja
fdivr
andb
mov
shlb
popf
scas
jmp
xor
lock
inc
sbb
daa
sahf
gs
fnstsw
jns
mov
mov
shlb
das
or
push
nop
or
icebp
inc
out
mov
imul
insb
mov
xor
pop
mov
and
sub
int
sbb
xchg
pop
jns
mov
out
aas
inc
notb
scas
adc
lea
mov
rcrb
sbb
mov
clc
cltd
inc
out
push
mov
xlat
sbb
lret
and
js
push
mov
xchg
insl
xor
ljmp
movsl
mov
mov
andl
leave
pushf
fldenv
mov
mov
pop
call
aam
push
loope
push
dec
ss
jbe
cmp
stc
mov
lahf
sbb
roll
pushf
pushf
loop
out
jmp
dec
das
addl
fisubrs
mov
xchg
repz
mov
in
add
dec
leave
xchg
mov
aam
pop
inc
push
scas
or
cmp
jge
sbb
pop
mov
xchg
add
push
adc
sub
fdivl
pushf
mov
imul
sbb
int
mov
scas
cmpsb
aad
shll
jns
ss
adc
xchg
cmp
bndstx
mov
mov
jle
dec
dec
mov
ret
push
shl
mov
fiadds
mov
loop
xorl
jae
inc
sub
jp
mov
push
jo
pushf
loope
add
mov
jno
mov
adc
mov
sbb
lods
cld
dec
push
mov
lret
aaa
pop
pop
adc
movsb
pop
add
repz
ss
lret
jne
jl
aam
cltd
test
xor
out
push
daa
sub
int
mov
sti
mov
call
push
mov
add
je
aaa
into
cltd
mov
inc
cmp
das
insl
out
or
xchg
mov
insb
lock
aas
outsb
stc
mov
popf
outsl
mov
cmp
pop
movb
mov
imul
jmp
pop
lcall
mov
mov
pop
mov
pop
stc
and
repz
faddl
into
inc
out
fbstp
sub
aad
push
mov
or
cmpsb
je
inc
ret
leave
jno
mov
ss
imul
mov
rorb
mov
mov
mov
gs
fxch
xchg
mov
cmp
dec
lret
cmp
adc
jns
mov
adc
shll
dec
int
adc
addl
nop
popa
jbe
in
in
pop
mov
or
cmpsb
pop
sub
out
xorl
add
mov
les
mov
jo
cmp
jno
inc
push
pop
rclb
pop
ja
mov
xchg
je
add
ds
inc
push
mov
mov
add
in
dec
mov
and
repz
in
mov
xlat
movsl
in
mov
inc
data16
jg
pop
lds
mov
jne
bound
in
mov
mov
add
pop
jle
dec
mov
and
sbb
xlat
mov
jecxz
out
rclb
punpckhwd
mov
xchg
push
fmull
outsb
imul
mov
lods
mov
ss
push
inc
and
cwtl
gs
add
xlat
dec
mov
lea
addr16
enter
and
push
mov
add
lock
pop
jae
je
pushf
sub
test
mov
mov
clc
lock
inc
cmc
and
adc
mov
cltd
jle
or
nop
fsub
cmp
xchg
mov
cld
out
cltd
sbb
pop
stos
cmc
mov
scas
dec
cmp
mov
rcl
jne
xchg
inc
sub
je
jnp
xchg
cmp
pop
inc
xor
mov
mov
in
into
out
sub
cmp
pushw
jbe
aad
cmpsb
or
cmovo
fcoms
add
sub
decl
inc
repz
add
repnz
push
daa
jne
test
fnstsw
int3
mov
inc
xor
xchg
ja
or
mov
jmp
pushf
push
aam
ja
iret
inc
test
aaa
aam
nop
hlt
stc
ret
xor
shll
fwait
xchg
je
mov
and
adc
outsb
es
adc
mov
jmp
mov
jb
popf
mov
inc
rolb
push
inc
and
ds
mov
mov
ret
mov
push
imul
ss
cmpl
int3
call
fnstenv
xchg
mov
out
aas
jge
scas
xor
sbbb
stos
imul
xchg
mov
sbb
jno
cmc
xchg
int
mov
ja
subl
dec
mov
mov
sbb
mov
sbb
leave
mov
lret
rcrl
out
cmp
cwtl
aam
sub
out
pop
inc
stos
cli
mov
shll
mov
clc
jp
cmp
sub
push
mov
add
mov
jp
test
mov
pop
enter
adc
xchg
aad
mov
divl
les
mov
ja
loopne
scas
xchg
lea
mov
mov
dec
ss
fcmovb
jp
add
rorl
scas
mov
and
mov
or
pop
mov
out
mov
or
jecxz
fwait
call
and
mov
fs
xchg
es
fidivrl
jl
cmpb
movsl
ret
sub
test
xchg
sub
jbe
mov
or
sub
push
adc
sti
inc
movsb
push
jbe
loop
xchg
fdivl
iret
mov
icebp
xorl
xor
ret
movsl
insl
lods
in
push
dec
loop
inc
mov
sub
push
idivb
mov
mov
jbe
push
mov
je
in
out
cmpsb
mov
cmp
imul
out
inc
mov
xchg
mov
mov
shrb
jo
ljmp
jb
mov
and
xchg
cmc
faddl
lds
fcomp
cmp
mov
mov
mov
mov
push
sbb
sti
fstpt
addr16
jno
inc
or
insl
xchg
popf
pop
xchg
sbb
out
jb
sub
scas
or
pusha
xchg
mov
xchg
imul
or
aam
and
push
ds
mov
or
pop
mov
popa
aaa
stos
lods
adc
mov
mov
pop
cmp
pop
cmp
dec
cmpsb
cmp
push
xor
push
mov
ljmp
mov
call
iret
xchg
inc
xor
mov
mov
adc
inc
push
mov
shll
mov
pop
add
jb
sub
push
sti
xchg
mov
mov
out
in
leave
or
jle
lods
pop
cmc
lds
imul
mov
jne
data16
pop
sub
pop
dec
push
mov
les
mov
mov
clc
xor
sbb
push
mov
jecxz
mov
lds
push
ret
lahf
lds
xor
ss
lret
or
dec
fwait
pop
mov
and
xor
inc
and
mov
cmp
cmp
sbb
int3
sbb
jl
inc
adc
fs
xchg
loopne
iret
mov
jmp
or
mov
jo
mov
mov
xchg
sarb
pop
leave
inc
mov
pop
xchg
std
jecxz
call
ret
out
daa
cld
fiadds
sbb
jns
stos
inc
out
fdivl
test
mov
bound
test
pop
adc
sbb
pop
and
xor
sbb
in
lea
into
lret
jp
jge
sub
aam
test
pop
outsl
dec
cmp
fsubs
pop
iret
mov
es
inc
ret
jmp
mov
mov
add
push
mov
cmp
lock
or
fnstsw
mov
loop
cli
popf
dec
pop
mov
jne
and
mov
sub
and
data16
jnp
xrelease
mov
hlt
stc
ds
icebp
and
cld
adc
das
and
int
insl
mov
mov
adc
nop
imul
mov
cbtw
iret
test
fucom
or
or
mov
jmp
pop
and
cmc
lahf
mov
das
inc
jecxz
ret
dec
mov
pop
out
shll
or
ss
ja
mov
sbbl
pushf
fnstcw
repz
ds
xchg
mov
insl
xor
lds
add
adc
mov
jbe
mov
lods
pop
sbb
xchg
gs
int3
movsb
in
mov
jle
leave
xor
sbb
ja
mov
ss
adc
sbb
test
jnp
repz
ss
mov
push
popf
push
sub
ds
dec
repnz
mov
sbb
pop
xor
mov
mov
or
enter
adc
call
mov
mov
mov
orb
mov
push
outsl
mov
out
pop
sbb
leave
je
stc
mov
test
mov
pushf
in
sbb
mov
jg
dec
inc
in
bound
jae
outsb
cltd
aas
mov
push
mov
in
mov
adc
pop
lcall
jne
test
jl
pop
push
jns
pushl
mov
out
mov
mov
cmpsl
push
divb
leave
pop
jno
mov
xchg
xchg
add
inc
fnstenv
mov
idiv
inc
push
bound
cmc
insb
push
mov
daa
rcll
rorl
mov
mov
mov
and
out
mov
in
pusha
mov
cmpsb
pop
xchg
packssdw
jo
adcl
dec
or
pop
mov
lcall
or
arpl
in
or
mov
xlat
mov
adc
fwait
aad
outsl
in
mov
sbb
je
mov
arpl
rorl
pop
xchg
mov
scas
mov
mov
jp
inc
push
sbb
xchg
out
cmp
imul
orb
sub
lds
xlat
js
push
jnp
jbe
push
jle
movsb
rcll
les
mov
adc
int
repz
ss
cmp
mov
mov
add
insb
push
xorb
add
sbb
inc
mov
cli
dec
stos
call
mov
pop
jl
push
add
mov
aam
daa
xchg
push
mov
jecxz
shrl
outsb
div
sbb
sti
jle
mov
push
mov
pop
jae
mov
shrb
dec
dec
pop
mov
pop
lcall
mov
dec
movsl
stos
out
repz
sub
add
mov
mov
xchg
jge
xchg
mov
shlb
sbb
test
mov
jecxz
or
pushf
imulb
cmp
stos
imul
shlb
push
adcb
cmp
arpl
adc
and
mov
push
xlat
jge
pusha
and
sbb
outsb
jne
mov
add
ret
loope
mov
repnz
js
pop
pop
test
mov
or
xchg
mov
pop
xor
in
jae
inc
nop
push
dec
inc
fstpl
std
hlt
popf
push
xor
mov
loope
push
sbb
mov
and
aaa
mov
movsb
xchg
xor
pushf
jns
gs
or
and
mov
cwtl
clc
mov
add
rcrb
xchg
repz
dec
lods
mov
test
push
mov
or
outsb
pop
cli
mov
clc
repz
out
push
gs
fidivs
in
notl
mov
aam
movsb
add
pop
mov
xor
jo
enter
das
fnstsw
push
cmp
xor
in
cmp
xor
or
mov
mov
add
inc
mov
icebp
mov
mov
mov
mov
and
sti
arpl
lods
ds
cs
push
adc
or
pop
mov
insb
mov
iret
loopne
mov
lock
rol
inc
data16
dec
mov
clc
lea
mov
xchg
shrl
pop
sub
push
iret
mov
mov
repnz
and
repz
addb
mov
push
loop
aas
mov
mov
push
mov
loopne
or
push
jg
inc
push
mov
ror
sbb
mov
push
xorb
scas
out
mov
out
pop
dec
in
mov
push
cld
leave
cmp
mov
scas
cs
sub
mov
insb
adc
stos
mov
or
shl
fnstenv
roll
mov
sbb
js
and
push
arpl
mov
mov
lret
jl
dec
xchg
mov
enter
adc
xchg
or
jge
adc
les
or
or
jae
lea
xchg
cld
fs
icebp
pop
dec
mov
mov
mov
mov
mov
or
aad
mov
inc
mov
test
dec
mov
mov
cmp
mov
cmp
out
adc
addb
xchg
clc
jl
dec
out
repz
lds
xor
repz
mov
inc
cmc
xor
xchg
ja
adc
cmp
sub
mov
xchg
inc
adc
mov
loop
shll
push
movsb
lods
jl
sub
fiaddl
mov
outsl
mov
lea
in
dec
in
fadd
mov
bound
js
pop
in
mov
lds
xorb
push
cld
jb
jo
addb
mov
push
mov
fmull
xor
xchg
test
fildll
mov
aad
add
push
fcoms
je
shr
mov
or
jmp
mov
mov
lret
pop
cmpsb
nop
adcl
out
or
or
inc
lds
pop
cmp
mov
repz
xchg
je
push
push
mov
fimull
mov
movsb
mov
les
mov
push
inc
dec
sbb
rcl
xchg
loopne
popa
lcall
add
jae
mov
adcl
pop
push
mov
mov
fs
addb
mov
cwtl
aaa
outsb
ljmp
aam
or
dec
out
push
mov
sbb
inc
negl
icebp
mov
out
ds
sub
push
jno
repnz
mov
dec
test
adc
ds
or
repz
movsl
mov
bound
movsl
mov
add
push
out
pop
inc
jnp
sbb
lock
xor
pop
mov
sub
inc
xlat
test
outsb
or
pushf
lret
mov
mov
xchg
aaa
mov
mov
push
insb
fwait
mov
xor
ds
xlat
les
mov
cmp
jne
mov
jecxz
push
ljmp
gs
negb
mov
jl
bnd
cmp
fs
mov
push
lea
xchg
or
xor
shlb
jo
mov
inc
out
mov
nop
cmc
scas
std
loope
icebp
int
mov
inc
ret
mov
hlt
cld
mov
or
sbb
jns
stos
mov
loopew
scas
rcll
xchg
jne
or
mov
xchg
lret
and
mov
xorb
mov
shr
push
and
xchg
sub
dec
push
push
sub
sahf
shl
or
mov
ja
dec
or
lock
jbe
jmp
dec
les
mov
testb
inc
xor
cli
adc
repz
lods
or
mov
lcall
out
mov
pop
movsl
jl
or
mov
pop
sbb
movsl
or
mov
inc
shl
loopne
jns
lcall
movsb
and
push
jae
pushf
les
adc
std
jb
lds
vxorpd
cmpsl
mov
mov
add
xchg
pop
lret
aas
cmc
in
and
push
pop
loope
or
rclb
popf
daa
clc
push
subb
mov
insl
push
pop
mov
fstps
push
push
mov
add
sub
or
push
clc
ss
xchg
push
mov
test
inc
in
add
stos
andb
jg
fidivl
jnp
xchg
mov
in
setg
leave
sar
das
pop
mov
sub
scas
in
sti
cwtl
mov
clc
shlb
nop
pop
stos
dec
pop
data16
mov
movsb
repnz
pop
xor
ror
inc
mov
add
popf
cwtl
add
mov
jnp
arpl
or
std
cmpsl
lret
add
pop
inc
decb
and
into
adc
cmpsb
scas
stc
sbb
out
cmp
repz
push
push
pop
int
xor
outsb
das
mov
fucomi
into
jo
shll
jg
test
int3
jp
into
dec
popl
clc
mov
mov
nop
inc
mov
lock
mov
mov
mov
mov
or
mov
mov
out
jl
cmpsb
sbb
mov
cmp
xor
jecxz
jmp
mulb
xlat
notl
je
les
add
sub
mov
add
mov
in
popf
js
leave
pop
mov
cmp
cmpsl
mov
fcmove
das
xlat
outsl
xor
mov
pop
adc
in
pop
mov
cmpsb
mov
push
mov
add
stos
inc
push
sub
mov
scas
jno
insl
fsubr
pop
mov
or
arpl
lahf
and
mov
sbb
or
mov
and
cld
mov
inc
popf
push
push
mov
clc
pushf
fcmovnbe
mov
mov
jno
pop
sbb
scas
movzbl
lds
ret
mov
dec
or
mov
cmp
in
shlb
pop
imul
mov
mov
mov
cmc
push
mov
push
xor
mov
leave
add
nop
adc
enter
mov
and
cmp
mov
mov
mov
pop
fs
dec
ljmp
shrb
lods
inc
mov
out
pop
mov
std
loopne
fists
sub
mov
div
jecxz
add
mov
cmp
cmp
push
idivb
mov
insb
mov
pop
dec
notl
xchg
dec
int
sbb
mov
movsl
push
hlt
xchg
xchg
sub
in
stos
add
sub
mov
ljmp
sbb
jne
xor
fildll
loop
inc
add
jecxz
jbe
pushf
mov
mov
pop
dec
mov
mov
lahf
rolb
adc
mov
mov
divl
stc
enter
ret
test
xchg
pusha
pop
jg
testl
push
es
sub
popa
cmpsl
jo
jmp
xchg
call
xor
jno
push
outsl
or
or
ja
ss
dec
shlb
ds
nop
mov
movsb
mov
push
mov
insl
mov
sbb
int3
xchg
sbb
scas
jg
and
inc
push
mov
cmc
insl
jbe
add
jnp
cld
mov
insb
fisubl
dec
push
mov
adc
jbe
in
lret
into
mov
xorl
and
sub
loope
push
or
mov
mov
cmc
cmp
xlat
out
fsubr
fdivl
mov
sbb
imul
les
sbb
dec
cmp
rcl
les
pop
or
mov
jae
scas
mov
pop
mov
cli
dec
stc
sarb
or
push
push
sbb
fisttps
out
cmp
mov
pop
push
and
hlt
bound
xchg
scas
loop
mov
xor
les
int
sub
cs
aaa
adc
xor
push
jmp
imul
xor
dec
adc
cmp
call
xor
lret
pop
sarl
cld
pop
xchg
les
flds
mov
xchg
and
mov
mov
fsubrp
dec
das
xorl
insb
rcr
pushf
lret
outsb
mov
sub
xchg
dec
xor
push
or
push
push
into
daa
int3
shll
jns
std
ja
cmp
and
mov
push
cmp
mov
sbb
pop
leave
jp
inc
mov
sbb
cmp
scas
pushf
xchg
daa
cwtl
mov
ljmp
mov
push
jmp
jb
hlt
sub
mov
cld
repnz
out
pushf
jbe
xor
arpl
ds
popl
sbb
mov
mov
lret
inc
pop
cmp
sub
adc
xchg
inc
push
xorb
scas
mov
push
ss
loopne
mov
nop
lea
push
out
or
cs
inc
mov
cmpsb
test
mov
gs
jnp
inc
clc
sti
xor
mov
inc
jne
call
push
in
subb
push
mov
push
push
ljmp
mov
mov
out
add
cmp
jb
cltd
iret
int3
push
mov
sahf
push
jmp
ja
sub
dec
ds
test
idivb
jbe
adc
fisubs
mov
push
mov
adc
insl
mov
lahf
pop
dec
pop
mov
mov
movb
das
mov
jnp
sbb
adc
ljmp
outsb
in
loop
cmpsb
cmc
sbb
ss
cmpsl
inc
mov
cmp
jo
and
mov
ljmp
sub
mov
paddusb
and
pop
mov
call
mov
mov
data16
cmp
out
ss
aam
mov
clc
pop
jno
iret
adc
sbb
daa
pop
fmull
sub
dec
dec
lahf
mov
xchg
arpl
mov
imul
nop
dec
js
cmp
and
lds
mov
dec
sub
dec
mov
dec
hlt
sbb
aas
mov
lcall
mov
punpckhwd
add
popl
or
out
cmp
mov
fstpl
and
ljmp
sbbb
mov
in
movsb
testb
loopne
popa
aam
stos
ss
inc
mov
int3
ret
movsb
testl
stc
mov
inc
push
out
xchg
jae
mov
or
push
dec
inc
mov
push
lcall
test
push
shld
dec
push
mov
cli
fdivrs
add
mov
mov
jb
mov
cmpsl
adc
xor
mov
sbb
cmp
mov
inc
pushf
shll
push
xchg
pop
sti
lahf
xor
fstp
cmp
mov
je
fwait
js
pop
mov
sbb
xorl
and
mov
ret
mov
jp
xor
mov
es
dec
lret
adc
sub
xchg
sub
cmp
add
cmpsl
or
cld
sub
jbe
iret
push
lods
sbb
mov
mov
pop
xchg
stos
std
fbstp
mov
movsb
jmp
repnz
ljmp
stos
insb
mov
adc
test
loopne
mov
push
jbe
push
xorb
push
xor
xor
lea
cmp
cmpsl
or
xor
and
mov
cmp
jg
pop
fwait
xor
inc
cmp
mov
pop
xchg
es
mov
in
dec
bnd
jge
or
push
outsl
xlat
xor
sub
mov
test
shl
cmp
mov
mov
or
bound
mov
testb
movsb
pop
xchg
push
iret
xchg
adc
out
cld
ss
pop
pop
add
pop
imul
outsb
fidivs
into
and
mov
mov
cs
lods
sti
adc
mov
lods
lods
dec
imul
test
es
mov
ss
int
mov
and
jns
loope
out
mov
outsl
jno
pop
dec
push
mov
push
call
mov
ret
push
cmpl
out
xchg
mov
jnp
inc
push
pop
rclb
sbb
push
xor
xor
sti
push
jno
mov
rcrl
inc
mov
and
pop
pop
adc
les
ss
xchg
or
mov
scas
test
mov
mov
pop
out
ret
stos
fnsave
sahf
test
mov
jl
sub
jle
cmpsl
mov
mov
jmp
ds
jo
lret
xchg
mov
jno
dec
cltd
pop
xor
push
xchg
fadd
lds
mov
adc
mov
mov
popa
loopne
pusha
dec
lea
inc
adc
shll
add
pop
popa
cld
jp
push
imul
add
push
lahf
cli
mov
jle
mov
inc
lods
mov
movl
mov
cwtl
xchg
dec
in
inc
xor
imul
sub
fsubrs
sub
mov
dec
notb
in
push
adc
arpl
push
mov
add
mov
inc
inc
ljmp
dec
lds
andb
mov
lods
inc
jle
sbb
xchg
xchg
fiaddl
mov
aaa
or
inc
push
les
scas
pop
testl
xchg
add
cmpsl
xchg
subb
rcl
lods
sbb
out
mov
pop
dec
jmp
mov
les
sub
dec
mov
mov
mov
iret
aad
fucomi
push
and
daa
xchg
mov
jl
je
js
mov
adc
xor
cmpsb
mov
mov
xor
xchg
mov
jle
push
mov
shrb
xlat
sbb
jp
ror
dec
and
jbe
lds
sbb
scas
lea
das
ja
adc
mov
jbe
pusha
rol
mov
cmc
cmp
mov
outsl
mov
sbb
mov
push
ljmp
das
out
call
add
mov
mov
inc
mov
fwait
push
jae
sub
fidivl
repnz
xchg
push
mov
mov
or
jae
xor
pushf
dec
xchg
mov
lods
lcall
or
sbb
xchg
jge
es
xchg
mov
stos
daa
sub
add
test
enter
jb
mov
inc
mov
orb
sbb
mov
in
cs
push
and
cmp
cld
xor
lahf
sub
out
dec
mov
jbe
int3
dec
push
stos
pop
mov
fwait
jg
push
xor
dec
mov
test
xchg
cmp
xlat
mov
xchg
adc
xor
or
outsb
popa
xchg
cmc
push
je
mov
int3
out
pop
sub
popf
add
and
fstpt
and
jbe
fmuls
repnz
mov
xchg
ss
rclb
in
loopne
es
cmp
std
int3
pop
mov
ret
jmp
in
sahf
mov
divw
push
jg
sub
icebp
test
mov
jne
cmpsl
scas
jbe
in
adc
xchg
mov
aas
and
pop
mov
lea
mov
mov
shl
mov
in
dec
ret
into
jno
mov
xor
dec
sub
adc
ret
pusha
mov
out
std
inc
jae
add
les
icebp
jne
and
por
pop
mov
sbb
pop
stos
and
mov
cmp
lock
mov
fwait
jle
sbb
loop
push
pop
mov
stc
lock
or
sbb
pop
pop
mov
xlat
or
mov
mov
pop
popa
dec
fwait
hlt
test
mov
icebp
in
lods
mov
addr16
pop
pop
and
test
gs
jae
mov
icebp
add
movsb
cmp
loop
bound
lret
adc
cmp
sti
pop
loope
fidivrl
xchg
sbb
popa
push
mull
int
cltd
cmpsb
repnz
cmpsb
push
fld
mov
push
sahf
dec
les
xor
ss
push
into
cmp
jno
data16
and
inc
dec
mov
push
addb
mov
mov
lahf
repz
hlt
in
fadds
das
mov
xchg
adc
mov
or
cwtl
inc
imul
xor
test
xchg
shr
roll
adc
pop
out
push
movsb
or
mov
movsl
mov
arpl
xchg
sbb
add
mov
insb
pop
sub
dec
enter
das
mov
pop
in
xchg
ja
mov
sbb
dec
mov
push
mov
mov
outsb
jle
cmpsl
insb
pusha
lea
jg
rcl
xchg
adc
dec
test
out
js
jmp
mov
inc
shll
lds
sbb
in
mov
mov
push
in
mov
cwtl
add
adc
test
sahf
cmp
jl
data16
sub
or
sub
out
shlb
repz
ljmp
pop
pop
mov
aam
mov
push
aaa
out
aad
inc
fnsave
adc
dec
into
mov
ss
mov
mov
xor
sub
les
dec
mov
lret
push
out
cs
jnp
imul
hlt
inc
push
aam
xorl
out
push
lahf
lds
and
vandps
pop
divb
pop
fcoml
mov
lds
pop
cmp
filds
test
mov
pop
cmpl
loop
in
add
mov
out
jno
lods
icebp
add
pop
or
mov
dec
jb
scas
insl
xor
das
xchg
mov
hlt
or
sbb
mov
test
dec
push
dec
jge
inc
mov
lds
jp
push
mov
jl
dec
mov
inc
movsb
mov
testl
lock
mov
pop
es
sbb
mov
jns
mov
popf
pop
pop
xchg
sahf
fbstp
mov
call
mov
xchg
ficoml
mov
out
pusha
jns
out
cmp
test
mov
xchg
push
add
ja
inc
push
pop
mov
sbb
xchg
cmc
insb
jns
hlt
mov
in
lret
lcall
ljmp
add
int
mov
mov
testl
aaa
scas
jae
insl
mov
jge
xor
adc
jmp
out
jecxz
cmp
jnp
dec
repz
mov
pop
addr16
and
out
xchg
test
lds
inc
push
fstpl
xor
pushl
nop
repnz
mov
xlat
lock
dec
pusha
jp
cs
aaa
icebp
xchg
outsb
pushf
push
mov
mov
mov
sub
dec
hlt
cli
test
sub
and
popa
add
cltd
mov
or
push
jle
fs
add
and
cmp
inc
inc
sub
mov
std
fstl
push
lcall
mov
lock
sbb
ljmp
mov
push
lds
xchg
lea
jbe
enter
mov
ds
adc
pop
in
rcl
lods
in
pop
mov
sbb
sub
inc
xor
icebp
leave
js
stos
push
ljmp
mov
mov
lods
xchg
mov
push
gs
les
mov
inc
inc
add
mov
mov
daa
push
mov
arpl
mov
addr16
push
push
cli
mov
fcom
lods
stc
jg
pop
mov
mov
je
and
repz
lods
xor
mov
or
sbb
push
lret
inc
jl
pushf
pop
jae
loop
cltd
xchg
xchg
adc
mov
cli
int
cmp
mov
mov
mov
jne
jmp
or
mov
sarl
andb
xchg
mov
ret
jo
loope
mov
mov
lds
pop
stc
mov
push
push
dec
test
mov
ficomps
mov
or
jno
fstps
mov
jecxz
or
xor
ss
repz
out
shll
pop
mov
ja
mov
mov
lods
xchg
xor
repz
in
sbb
inc
leave
or
in
sbb
sub
and
out
inc
mov
test
cmpsb
cld
shrl
mov
mov
ficoms
int3
add
fidivrl
jle
dec
arpl
sbb
scas
mov
les
loop
pop
or
insl
push
out
mov
ss
xchg
xchg
adc
mov
mov
mov
mov
jnp
mov
loopne
sub
rorl
ja
shrl
ss
or
mov
and
and
xor
mov
add
push
mov
iret
mov
push
in
cld
lds
and
mov
nop
mov
mov
pusha
sti
adc
push
xor
pushf
bound
inc
add
movsl
cltd
cld
idivb
test
jmp
popf
sub
or
mov
cmp
add
xchg
and
push
mov
inc
out
loopne
out
test
dec
mov
cmp
lods
lret
jns
push
jg
cmp
divl
dec
in
pop
lock
cmp
lock
sub
xchg
imul
fildl
mov
xchg
aad
inc
loop
push
jo
dec
cmpsb
pop
mov
mov
decb
mov
add
lcall
in
cltd
or
mov
mov
aad
sub
push
mov
cmpsb
fucomi
rcrb
push
stos
jno
jae
in
mov
ja
and
std
pop
dec
push
inc
aam
test
mov
xchg
fmul
daa
or
add
pop
cmp
mov
pop
pop
mov
lds
mov
dec
mov
mov
mov
shlb
xchg
outsl
int
faddl
mov
imul
pop
mov
sbb
sbb
les
call
shrb
aad
mov
lahf
jl
jne
mov
aam
ret
ror
sub
int
ss
mov
xchg
mov
lods
mov
stos
sub
sbb
les
sarb
jns
stos
das
mov
adc
sbb
mov
movsl
mov
push
mov
jb
sub
lea
pushl
ss
and
enter
out
arpl
mov
jnp,pn
fsubp
mov
pop
pushf
pop
push
mov
cmp
adc
dec
insb
cmp
lcall
push
ss
xchg
movsb
pushf
adc
loopne
lds
fwait
std
xor
xchg
xor
push
out
or
ss
lret
xlat
pop
mov
mov
or
mov
mov
bound
imul
sub
mov
fisttpll
cmp
mov
js
adc
test
mov
je
cmc
or
sbb
jmp
pushf
cltd
mov
shl
pop
and
fisubrl
std
pop
fwait
leave
push
adc
mov
lret
cld
repz
sbbb
lahf
lret
mov
inc
jg
inc
mov
jne
js
jbe
mov
daa
jnp
stos
xor
mov
mov
mov
out
ror
das
enter
jns
movsb
push
bound
aad
dec
sub
cmpb
pop
cmp
pop
out
imul
fsubrs
lret
push
gs
adc
xlat
jnp
jmp
push
movsb
das
les
push
xor
sub
in
push
add
nop
pop
jle
dec
sbb
sahf
sub
stc
push
loope
je
jg
test
xchg
rcll
int3
pusha
mov
cmpsl
mov
inc
pop
outsl
add
out
and
dec
icebp
dec
aad
loop
es
test
jbe
pusha
int
sub
mov
adc
sbb
mov
cmp
addr16
iret
sub
bound
inc
mov
popf
in
xchg
mov
fldcw
mov
jmp
xchg
jo
dec
pop
icebp
push
sahf
sub
sbb
and
dec
xorl
mov
fldcw
mov
push
aas
jg
out
push
mov
sub
mov
inc
mov
push
pop
icebp
lret
shr
mov
add
mov
vpmadcswd
push
mov
push
xchg
in
pop
ficoms
out
sbb
mov
scas
js
mov
mov
mov
add
mov
and
stos
xor
test
ficoms
mov
out
cmp
mov
mov
jne
xchg
movsl
aaa
ds
adc
xchg
sbb
or
sbb
cmpsl
dec
enter
jno
xor
add
mov
push
out
xchg
sahf
pop
mov
xchg
dec
or
fcmovb
in
push
sub
mov
repz
mov
xabort
dec
pop
mov
jp
or
sar
inc
sbb
lcall
mov
mov
mov
dec
push
adc
adcb
das
mov
inc
loop
adc
into
outsb
xchg
lgs
sahf
shlb
loope
je
sub
cltd
or
mov
cmp
pusha
dec
mov
add
stos
imulb
mov
push
fsts
pop
xchg
add
adc
aaa
sbb
imul
movsl
mov
xchg
popa
clc
mov
mov
mov
push
and
mov
mov
test
sbb
outsl
mov
stos
pop
icebp
cmp
shll
add
push
mov
pop
push
mov
mov
push
cmpsl
mov
movsb
jo
sub
cmp
xchg
fdivs
fcompl
aad
mov
imul
hlt
mov
sbb
push
cmpsb
add
mov
pause
jbe
jg
sbb
lds
ss
mov
dec
inc
push
add
xchg
jmp
fbstp
cmp
mov
lods
outsb
sarb
mov
js
push
dec
inc
cs
data16
mov
and
adc
out
mov
rcr
les
pop
adc
lock
rcrb
sub
ljmp
adc
mov
out
xorl
cld
xchg
psrad
sub
mov
ret
cwtl
test
repz
outsb
mov
fdivrs
push
rcr
add
pop
or
pop
dec
adcb
lcall
filds
mov
ret
mov
mov
mov
push
imul
jo
outsl
out
inc
adc
aaa
mov
mov
mov
sbb
mov
jns
jge
fnsave
test
adc
mov
xchg
ret
or
sub
xchg
xchg
loopne
test
mov
xor
pop
mov
xor
pusha
inc
mov
mov
adc
aam
jmp
xor
sub
shlb
inc
aad
js
jge
test
aad
dec
mov
addr16
aam
mov
mov
cmp
mov
daa
gs
std
adc
mulb
cld
testb
xchg
fstps
stos
cwtl
mov
mov
test
notb
mov
mov
jb
jnp
mov
mov
mov
mov
jmp
mov
mov
ror
mov
add
sub
gs
or
adc
out
and
fdivrs
fldt
imul
lds
adc
mov
add
lret
push
push
mov
insl
jle
mov
lret
pop
fisubrs
ss
or
movsl
pop
shrb
or
out
push
jmp
cli
mov
lcall
xor
cmc
mov
out
adc
loop
mov
inc
in
inc
and
xlat
jmp
movsb
orl
mov
or
mov
xchg
jle
cmp
stos
enter
pop
xchg
inc
loopne
jmp
mov
add
cmpsl
leave
sbb
pop
mov
pop
push
mov
out
mov
fwait
popa
or
dec
imul
mov
arpl
shrb
sub
idivb
icebp
push
xor
mov
jle
mov
std
push
xchg
rcrl
sub
mov
ja
push
sbbb
mov
addr16
in
repz
add
mov
cmp
push
sbb
arpl
das
mov
adc
and
out
sbb
stc
mov
cli
test
stos
pusha
rorl
leave
repnz
dec
out
mov
inc
mov
sbb
xchg
mov
stos
cmpsb
ljmp
sbb
mov
loope
ja
lret
enter
xor
adc
xor
sbb
cmpsb
xchg
mov
test
add
mov
fucomip
xor
sarl
pop
mov
adc
out
pop
enter
inc
loop
mov
mov
clc
pop
xchg
add
ja
mov
inc
mov
cli
aam
in
or
push
mov
add
jnp
popf
mov
lcall
dec
inc
shll
mov
cltd
data16
sub
mov
call
sub
movsb
jmp
cmc
lahf
fsubrl
int
in
imul
inc
mov
mov
add
mov
in
mov
add
stos
xchg
mov
pop
dec
jg
mov
mov
xchg
lods
push
inc
out
mov
or
mov
dec
pop
test
add
lret
mov
leave
cmpsb
fildll
int
xchg
sbb
mov
cli
xchg
or
inc
dec
add
mov
pop
ss
inc
rcrb
and
fsubl
mov
push
inc
fucomip
cmp
mov
aad
mov
jne
mov
je
mov
arpl
aaa
sbb
mov
repnz
dec
fldt
mov
dec
test
mov
rcll
les
vpshld
dec
cld
sarl
mov
das
xor
mov
mov
xchg
sahf
loop
adc
out
lret
mov
pusha
rorb
mov
in
pop
or
jmp
ret
in
mov
call
data16
gs
jae
mov
mov
das
mov
ret
mov
idivl
sub
xchg
sub
jg
push
mov
mov
insb
inc
dec
push
dec
shl
mov
lcall
adc
movsl
mov
push
pop
pop
sub
dec
mov
cmp
out
jmp
dec
mov
addr16
int3
xor
sbb
mov
dec
divb
xor
sub
mov
dec
add
lahf
or
cmc
mov
push
inc
mov
push
daa
lret
mov
xor
inc
mov
add
hlt
outsb
push
mov
xor
int
push
sub
bound
leave
mov
imul
out
add
or
aaa
and
mov
sarb
xchg
inc
dec
jmp
fistpl
push
or
and
hlt
sbb
jp
jg
out
repnz
test
call
jne
outsb
pop
inc
jbe
sub
cmp
adc
and
andb
mov
mov
test
shlb
into
sbb
pop
inc
jnp
mov
jne
sub
mov
dec
fstps
es
out
mov
dec
push
cmp
inc
xor
mov
imul
das
loope
les
mov
add
add
adc
in
mov
clc
int
roll
mov
in
adc
stc
aad
stos
ss
xchg
mov
data16
orl
mov
data16
fstl
push
hlt
mov
les
test
mov
pop
sbb
mov
movsb
cmpsb
cmc
cs
cmp
mov
xlat
and
mov
mov
cmp
adc
or
xor
mov
xchg
insb
mov
xchg
aas
dec
pop
std
mov
push
addr16
sarb
fmulp
lds
jns
lcall
inc
push
in
or
insl
dec
mov
cld
xor
mov
aad
cmp
xchg
push
mov
push
dec
roll
mov
sub
mov
ja
sbbl
lods
adc
mov
repnz
mov
in
in
mov
stc
xor
sbb
xchg
scas
out
mov
jp
adc
inc
mov
lahf
data16
lcall
repnz
sbb
mov
xor
popf
xchg
mov
mov
sub
test
lret
jbe
add
mov
adc
xchg
jecxz
mov
mov
lods
scas
mov
mov
push
mov
shl
dec
ss
and
mov
imul
shll
cs
test
jp
ss
insl
cs
aam
and
mov
loope
loope
jmp
ja
pop
push
xchg
lcall
adc
push
jge
mov
out
enter
cmp
divl
cltd
sub
fldt
sub
cmc
daa
sub
mov
cwtl
negb
mov
pop
adc
mov
xchg
mov
xor
add
pop
loop
dec
mov
roll
pushf
sub
mov
or
mov
add
das
and
cwtl
cmp
and
pop
pop
repnz
mov
cmp
mov
xorw
mov
outsb
imul
out
add
mov
out
push
fcoml
add
addr16
mov
and
inc
fs
imul
sti
push
sub
mov
fildl
cmp
je
inc
mov
dec
push
fwait
xchg
data16
lahf
mov
icebp
ret
inc
push
scas
pop
inc
inc
xchg
add
movzbl
cld
orl
icebp
push
mov
out
mov
ss
cs
mov
movsb
mov
addr16
adc
mov
add
test
or
add
dec
cmp
imul
xchg
mov
call
xor
es
inc
jle
mov
jb
mov
push
pop
dec
mov
sub
adc
pop
add
jae
adc
dec
hlt
int
jp
shrb
std
mov
lcall
gs
ss
jmp
data16
subb
ret
mov
ss
repz
jb
sbb
shl
sbb
sub
sbb
mov
push
cmp
mov
xor
dec
int
sbbb
iret
sbb
pop
mov
mov
loopne
mov
out
dec
xor
in
mov
movsl
xor
mov
mov
jge
mov
mov
int3
mov
lea
xchg
mov
jle
aam
pop
psraw
push
cmpsl
test
jl
add
mov
insl
mov
imul
lds
hlt
std
fldenv
push
xchg
les
sbb
mov
mov
jg
cmp
aam
jne
push
loope
mov
clc
jecxz
lret
inc
mov
test
dec
outsb
pushf
xorb
aas
aad
mov
jns
in
add
aaa
daa
mov
test
or
mov
push
or
mov
pop
shlb
loope
andl
imul
call
cmp
mov
add
dec
lret
xor
shlb
sub
stos
and
mov
mov
jle
fs
mov
pop
in
jge
mov
loopne
mov
pop
mov
push
sub
mov
js
insl
pop
test
adcb
loop
fcoml
mov
push
int
push
lahf
cs
mov
cmp
sbb
inc
iret
idivb
mov
xchg
sahf
arpl
ja
inc
cmpsb
and
into
dec
loope
mov
jge
pop
push
notl
mov
mov
inc
mov
icebp
andl
and
pop
push
mov
add
mov
adcb
es
out
cmc
cmp
ljmp
mov
out
dec
ja
lds
cmp
xchg
lods
shlb
aaa
mov
into
push
mov
xchg
leave
dec
xchg
mov
popf
xchg
cmp
mov
out
cmp
stos
lock
mov
cmpsl
jge
shrl
mov
repnz
mov
mov
mov
xchg
popf
nop
add
aas
arpl
adc
jmp
mov
lret
jns
push
lods
add
mov
mov
adc
jle
mov
sbb
test
mov
xchg
js
push
mov
mov
loope
mov
push
out
cmpsb
fxch
shll
xchg
inc
dec
test
jp
mov
cld
push
sub
mov
sub
add
mov
das
mov
rorl
repnz
mov
into
adc
ffree
bound
les
sbbb
mov
cltd
cmp
ds
mov
inc
sub
mov
cmc
idivb
mov
sti
lsl
adc
jo
pushf
xchg
loope
cmp
add
mov
sub
inc
mov
mov
xchg
dec
jne
mov
dec
mov
rorb
fisubl
imul
stos
mov
loope
mov
bound
imul
inc
rcl
icebp
xor
push
add
cmpsl
popf
mov
jo
dec
pop
mov
adc
and
pop
fidivs
jns
push
mov
stos
ss
or
cmp
mov
xchg
xor
je
jge
mov
das
mov
xor
mov
fisttps
scas
xchg
les
adc
pop
nop
mov
lea
cmp
mov
mov
jle
or
dec
mov
sub
xor
add
lods
in
popa
jl
mov
test
andb
shl
mov
jmp
jmp
add
mov
cmp
mov
add
ljmp
stos
mov
jo
and
movsb
mov
xchg
int3
mov
adc
lea
fidivs
add
sbb
push
add
stos
jae
mov
sub
je
outsl
mov
jne
movsl
imul
jns
sbb
push
pusha
lea
int3
mov
xor
add
pop
push
inc
bound
and
addr16
divl
mov
inc
sbb
mov
dec
sub
jmp
inc
aaa
cwtl
dec
cwtl
add
inc
dec
mov
mov
pop
push
dec
data16
fwait
test
adc
dec
xor
mov
aas
and
inc
or
arpl
mov
ss
ret
mov
push
push
pop
lret
jns
sub
lods
cli
fbstp
mov
test
mov
cwtl
loopne
bound
dec
mov
stos
push
and
push
mov
xchg
xlat
fildl
scas
mov
inc
loop
std
pop
add
xor
ret
push
dec
inc
mov
sbb
xchg
ja
jns
inc
cmc
jg
sub
dec
shll
push
mov
flds
push
sub
sub
jns
into
xor
xor
rclb
in
and
shrl
shll
sub
int
mov
arpl
stos
mov
inc
cmc
inc
fdivs
mov
es
lods
pop
jmp
mov
or
add
sbb
xor
ficomps
mov
xchg
lahf
mov
xchg
jle
xchg
mov
bound
stc
dec
mov
cmpsb
or
mov
xor
ja
pop
push
dec
daa
xor
adc
pop
pop
mov
out
jp
shll
mov
data16
movsb
inc
xchg
mov
cmc
pop
and
int
outsb
xchg
xor
popf
call
mov
mov
iret
push
aad
cmp
sbb
test
lret
mov
pop
push
mov
je
pop
xchg
sbb
shrb
push
int
dec
mov
faddp
cmp
mov
mov
loop
sub
mov
pop
mov
into
push
hlt
xor
mov
out
or
xor
movsl
push
pop
inc
or
and
lods
xchg
and
mov
cmc
or
ss
out
push
aas
mov
xchg
ljmp
scas
push
testl
mov
shlb
xorl
mov
mov
lcall
aam
pop
sbb
lret
xorb
mov
out
xchg
lock
outsl
xorl
mov
mov
pop
mov
xor
mov
sub
mov
jge
sbb
xchg
mov
test
push
mov
add
loopne
jnp
aam
or
jbe
xorl
dec
pop
ss
mov
out
push
xor
addb
sbbl
push
mov
push
out
stos
mov
push
mov
lcall
lods
mov
mov
add
push
jl
mov
cltd
inc
pushf
imul
std
aad
lcall
add
sub
ss
jl
jmp
sti
xchg
mov
in
adc
push
mov
adc
adc
jns
test
sahf
dec
insl
mov
xor
mov
mov
imul
scas
adc
jbe
fldcw
jecxz
mov
cmp
cltd
andb
and
or
mov
adc
mov
mov
jo
mov
jecxz
scas
movsl
ss
das
and
mov
fsubrl
mov
adc
test
mov
shlb
loopne
push
aad
mov
pop
push
pusha
inc
mov
das
je
test
mov
bound
mov
adc
dec
inc
dec
subb
fwait
out
xchg
xor
mov
pop
int
cmp
shrl
mov
dec
mov
faddl
in
cmc
dec
popa
mov
outsl
imul
xchg
mov
adc
cmpsl
fimuls
push
mov
or
add
mov
ficompl
mov
aas
ljmp
in
call
inc
out
popa
cwtl
mov
inc
or
aam
push
xchg
enter
sub
idivl
adc
hlt
mov
icebp
mov
shll
cwtl
jne
or
lds
das
mov
sub
add
xor
data16
leave
mov
sub
ds
cld
cmp
adc
jb
sbb
addr16
in
dec
sbb
mov
xor
jmp
mov
xchg
dec
arpl
lahf
in
mov
or
loopne
xchg
aas
mov
loope
out
js
mov
jecxz
shlb
andb
mov
jge
jp
scas
pusha
adc
mov
mov
adc
test
sbb
cmp
lds
xor
fsqrt
ljmp
pop
js
andb
mov
xchg
mov
fs
fimull
sarb
ljmp
std
xlat
sub
push
mov
mov
cld
add
push
stos
les
shr
imull
dec
xorb
jl
jnp
dec
fcoml
test
pop
and
dec
mov
mov
rol
mov
xchg
in
xorl
mov
jg
cmp
ret
or
rep
movsb
out
mov
icebp
fadds
sahf
stos
gs
shrl
or
rol
xchg
iret
testb
mov
xor
or
lock
xor
mov
pop
ljmp
xlat
or
sub
mov
inc
or
fcoms
mov
or
scas
add
and
popf
ficompl
loop
push
arpl
and
int
mulb
mov
fcoml
scas
js
mov
or
jmp
dec
mov
test
push
or
inc
jnp
push
xchg
dec
addr16
add
xor
mov
arpl
push
xchg
ja
hlt
pop
add
pusha
push
adcb
fidivrs
dec
rolb
mov
repz
aad
push
mov
mov
push
xchg
popa
pop
mov
or
cmp
mov
loopne
rcl
mov
mov
cmp
and
mov
push
lcall
repz
sub
jno
mov
out
sbb
imulb
lret
cmpsb
pop
mov
inc
inc
pop
out
mov
sub
test
and
repnz
cmpsb
mov
ss
insl
aad
mov
mov
xchg
sbb
test
lods
xchg
sbb
mov
mov
leave
sub
imul
adc
mov
scas
sub
icebp
std
mov
mov
les
push
push
add
int3
je
lea
xor
rcrl
mov
push
test
jp
jns
idivb
clc
cmpsb
rorl
inc
sub
jae
mov
scas
cmp
push
xchg
icebp
es
stc
mov
xorw
sahf
cmp
pop
xorl
sub
call
dec
sub
lds
mov
sti
sbb
rol
aas
adcl
cmpsl
aaa
adc
das
mov
subb
mov
jmp
imul
mov
mov
outsl
ss
push
push
in
inc
and
imul
outsl
inc
xchg
repnz
test
test
cmpsl
dec
addr16
jo
push
fs
scas
std
popa
xor
icebp
fsubrl
push
mov
pop
xor
ffreep
dec
loope
mov
ret
ret
je
push
sti
sub
imulb
leave
mov
mov
mov
pop
stos
mov
add
xorb
push
xchg
ret
push
or
out
imul
mov
jp
fsubrs
aad
lret
mov
sbb
stos
aas
and
mov
test
pop
movsb
lret
fsubl
arpl
xchg
aad
and
mov
scas
sbb
mov
std
add
das
les
ljmp
mov
call
mov
and
mov
aam
scas
adc
lods
loope
ret
xchg
not
iret
add
sub
jp
in
jae
popa
call
insb
dec
xor
or
insl
dec
mov
out
bound
xchg
loop
mov
push
data16
mov
stc
lods
mov
filds
sti
mov
inc
cld
pushf
jb
out
mov
mov
roll
ss
xchg
sbb
push
mov
insb
into
or
fs
fists
in
pop
daa
dec
mov
popa
xchg
pop
insl
fcoml
add
jno
mov
pop
xor
xchg
adc
xlat
mov
push
pusha
test
xchg
or
outsb
cmp
rcrl
incl
dec
sub
xchg
repz
cmc
mov
call
js
mov
pop
test
mov
mov
fs
repz
shl
mov
inc
movsb
xor
nop
cmpsb
mov
cmp
push
imull
addr16
and
mov
shrl
cs
mov
test
mov
jbe
mov
es
xchg
and
adc
in
or
mov
mov
fildl
sbb
adc
dec
ss
jns
imul
stos
cmc
or
sbb
pop
jle
insb
sub
mov
repnz
mov
cmp
out
les
adc
cmp
in
test
inc
add
scas
stos
or
push
hlt
mov
pop
insl
stos
jecxz
push
sub
or
pusha
pop
inc
inc
lds
push
xchg
rcl
dec
mov
sub
mov
hlt
shlb
pop
loop
rcr
call
and
es
mov
push
cs
cmp
pushf
and
out
jmp
jns
dec
mov
push
cmp
mov
xchg
xchg
andb
loope
push
mov
cld
pop
pop
push
adcl
xchg
mov
fiadds
adc
dec
mov
mov
ret
aas
dec
divl
xorl
cmp
mov
push
sub
mov
inc
mov
and
nop
adcb
xchg
sbb
mov
lock
enter
mov
scas
ret
cwtl
mov
xchg
and
mov
cmpsb
stos
mov
lret
push
loope
sarl
fistpl
or
xor
ds
fdivs
mov
into
xchg
sbb
fbld
mov
xchg
cmpsb
pop
pop
loopne
mov
enter
adc
xchg
dec
mov
mov
push
add
fsts
call
mov
mov
lea
mov
mov
sbb
inc
movsl
jp
pop
mov
mov
movzbl
inc
add
adc
mov
xor
cmp
push
int3
xchg
leave
clc
mov
adc
mov
fiaddl
cltd
out
xchg
push
sub
gs
insb
incl
mov
out
je
push
cmc
mov
lret
add
sti
movsb
mov
or
outsb
inc
mov
ret
aaa
cmpsl
mov
insl
pop
ja
dec
cmpsb
mov
inc
mov
mov
stos
cwtl
mov
mov
xchg
outsl
adc
test
mov
sbb
es
or
imul
dec
mov
mov
ds
cmpsl
and
cmpsb
adc
mov
pop
lods
mov
mov
and
shrl
sbb
mov
mov
mov
fistpll
cmc
gs
sarl
sub
fpatan
fistpl
mov
inc
jno
ret
inc
rorl
pop
js
ljmp
pop
and
xchg
jmp
mov
cmc
imul
mov
add
pminub
clc
lds
or
inc
jne
out
jbe
movsb
sub
dec
and
dec
pop
mov
mov
or
push
mov
loop
push
mov
jne
pop
or
adc
ljmp
std
movsb
imul
fs
mov
jecxz
mov
aam
add
sbb
cwtl
idivl
insl
lods
pop
mov
push
adc
lea
jae
cvtps2pd
dec
pop
mov
mov
add
sahf
pop
sbbl
mov
push
data16
xor
sub
push
jb
xchg
shlb
dec
push
mov
sbb
or
mov
jecxz
xchg
outsl
pushf
out
dec
jecxz
cmp
mov
stc
lret
sub
dec
sbb
inc
xchg
jge
repz
fwait
mov
jp
and
or
lods
rorl
mov
xlat
test
pop
pusha
mov
lcall
mov
ljmp
mov
scas
fldcw
into
xchg
cli
mov
pop
cld
bsr
jp
lock
xorb
add
jno
jp
and
mov
shlb
sti
lahf
or
std
aad
out
push
mov
test
ret
mov
int3
xchg
sbb
lret
sub
inc
jg
sar
test
xor
out
jbe
cmc
mov
jnp
in
xchg
jl
dec
adc
aas
aaa
xorb
mov
shrb
in
pushl
std
into
add
dec
xor
push
cwtl
sub
ret
or
mov
add
mov
insb
jb
fsubrs
adc
mov
xchg
aam
pop
dec
mov
mov
sub
daa
mov
xchg
sbb
cmp
push
fnsave
lods
mov
jle
mov
mov
pop
lock
fisttpl
or
jg
cmp
mov
mov
ja
in
aam
pop
mov
fistpl
insb
loop
xor
xchg
int
mov
pop
fbstp
jp
mov
sbb
adc
fistl
imul
lahf
sub
iret
stos
out
cmp
cmp
xchg
xchg
push
nop
and
pop
mov
loope
pop
mov
pop
mov
ficoml
jbe
mov
fidivs
cmp
dec
mov
adc
cmp
out
push
xor
mov
mov
cmp
in
nop
push
iret
xchg
ss
xchg
int3
aaa
ja
dec
mov
or
mov
into
adc
cmpsb
mov
and
jnp
in
mov
jb
leave
test
repnz
jns
mov
xchg
and
or
adc
ss
aad
xor
push
repnz
pop
xchg
in
rcll
cmp
mov
arpl
out
ss
out
sbb
sbb
and
pop
pusha
das
mov
loop
enter
adc
xchg
ljmp
divb
movsl
mov
not
and
jmp
mov
cwtl
into
or
out
sub
daa
test
mov
xor
mov
clc
int3
ret
jmp
ds
fsubrp
or
in
mov
push
call
bound
lahf
jge
data16
mov
das
dec
test
mov
push
sbb
add
xchg
pop
jle
and
mov
pop
ja
mul
stos
xchg
mov
sub
adc
fbstp
incl
lods
mov
inc
mov
push
push
cmpsl
ret
push
pop
dec
pop
mov
lods
jecxz
adc
fimull
pop
adc
test
in
add
sahf
mov
mov
out
push
inc
dec
pusha
inc
adc
inc
pop
cmpsl
stc
or
pop
pop
lods
testl
and
fdivl
mov
icebp
xor
mov
outsl
mov
pop
pop
jo
mov
jp
xor
mov
sbb
in
jno
jmp
clc
bound
fldcw
mov
aam
sub
adc
les
leave
jl
cmp
pop
js
mov
jne,pn
icebp
jo
vpunpckhwd
faddl
outsb
mov
add
in
popa
cmp
adc
push
iret
xchg
push
lds
fs
outsb
jno
add
lcall
push
xor
sub
xchg
int
rorb
lods
sbb
aam
mov
xchg
push
dec
ret
cwtl
ret
negb
mov
stc
xorl
lock
cld
mov
mov
cmp
loop
stos
ds
sarl
cli
mov
mov
cmp
in
sbb
mov
fisubl
jb
jbe
addr16
aaa
les
or
adc
jecxz
lea
mov
inc
or
orb
dec
mov
or
dec
mov
sbb
repnz
mov
test
xorb
sbb
pusha
and
mov
jbe
or
shrl
stos
jg
test
mov
mov
or
daa
movzwl
mov
shll
popf
mov
or
or
lds
adc
dec
sarb
xchg
mov
inc
push
das
jnp
or
mov
std
push
scas
mov
in
jae
cwtl
ret
out
inc
mov
or
inc
sbb
loopne
stos
movsl
hlt
sarb
mov
or
or
es
jnp
outsb
jb
imul
xchg
andb
dec
dec
shlb
in
mov
push
jno
mov
fnstenv
sub
pop
icebp
or
xchg
mov
sub
in
fadd
inc
mov
hlt
cmp
scas
mov
sbb
ftst
pushf
les
aam
enter
or
fildl
or
push
adc
jle
and
mov
jae
fidivrs
or
xor
rorl
and
jg
push
pop
cmpsl
xor
and
shl
call
pop
pop
and
lds
adc
push
popf
out
cs
aas
adc
bound
push
in
shr
lcall
iret
loop
add
cli
mov
clc
inc
cwtl
enter
add
fcmove
dec
and
jne
mov
xor
xchg
enter
or
jns
push
cltd
cmp
fisubrs
mov
xchg
fldenv
leave
sbb
aas
aaa
and
mov
gs
dec
xor
fsubrl
inc
cmp
inc
shll
mov
inc
jge
xorb
sub
lods
lea
mov
scas
repz
in
jbe
mov
sbb
xchg
data16
mov
add
and
cmc
int
cmp
mov
push
data16
cmp
mov
mov
out
cmp
mov
mov
in
jbe,pt
loopne
lock
mov
pushf
mov
sub
mov
movsb
enter
adc
xchg
test
pop
sbb
xchg
mov
scas
mov
iret
add
push
dec
mov
test
or
jp
rorl
mov
mov
jp
adc
movzwl
clc
fildll
mov
inc
mov
pop
or
cmp
cmp
mov
xchg
mov
shll
adc
scas
sahf
stos
lds
jb
mov
pop
jbe
and
mov
dec
jmp
jbe
sub
jno
ss
add
testb
daa
mov
mov
aaa
adc
pop
call
cmc
add
pop
sbb
sti
insl
popf
cmp
dec
sbb
mov
lcall
mov
fcmovb
cmp
pop
idiv
mov
mov
pop
and
imul
aad
das
test
adc
mov
nop
aam
add
sub
and
in
fdivl
dec
out
jbe
mov
sub
mov
xchg
mov
int3
sarl
mov
loope
jno
out
das
int
sbb
dec
mov
dec
cmp
fimuls
inc
mov
push
or
js
imul
jge
es
mov
enter
push
push
jl
dec
jge
push
mov
repz
fwait
mov
sahf
and
xor
mov
cmp
jmp
fcompl
cmp
xor
mov
add
jae
mov
testb
rolb
test
es
mov
inc
xorb
ret
mov
negl
xchg
mov
mov
stos
and
lock
aaa
insb
pop
mov
lods
sbb
jbe
or
cmp
movsl
mov
xchg
jbe
cwtl
mov
xor
or
mov
lea
jb
inc
adc
movl
sbb
mov
shrl
mov
cmc
test
lea
lahf
leave
sbb
mov
mov
imul
jo
xor
push
or
xor
mov
sbb
xlat
gs
mov
or
ljmp
repz
dec
push
cmp
movntps
js
sub
daa
jmp
mov
fs
and
mov
shlb
mov
mov
std
sarl
cmc
mov
cld
push
inc
xchg
sbb
jbe
stos
lock
or
xor
test
mov
insb
xor
jnp
rorb
adc
mov
lea
mov
test
jge
pusha
into
jp
cld
mov
outsb
xchg
sub
fistps
mov
out
ret
imul
jb
out
inc
fcoms
fwait
mov
shl
int
or
mov
xchg
lds
add
add
mov
mov
xchg
fnsave
pop
ss
mov
or
negb
dec
dec
or
shlb
push
jecxz
mov
sbb
mov
hlt
sub
pushf
icebp
jb
mov
mov
and
pop
fstps
mov
dec
push
cmp
sbb
mov
iret
sbb
adc
push
inc
mull
mov
lret
and
mov
loope
push
mov
mov
pop
mov
push
dec
xchg
sarb
fisubs
pop
mov
unpcklps
mov
push
sahf
jl
scas
mov
or
adc
xor
ss
shl
xchg
vandps
xor
aam
push
xchg
roll
lods
dec
cltd
inc
mov
mov
sub
leave
and
mov
divb
adc
and
out
adcl
mov
mov
xor
vpcmpeqb
mov
inc
out
fsub
mov
lret
popf
mov
int3
arpl
aaa
call
mov
hlt
pop
lds
stc
enter
add
xor
xchg
and
aad
rclb
loope
rorl
mov
mov
popa
xchg
lea
jecxz
or
shll
sub
test
sbb
mov
popl
xchg
clc
repnz
mov
cltd
insl
xchg
xchg
mov
aad
in
sahf
fcomip
mov
mov
test
push
lret
dec
adc
sbb
mov
push
inc
or
cltd
xchg
loopne
mov
xchg
xchg
add
insb
gs
mov
insl
jb
cmc
xchg
xchg
add
sti
cmp
or
xchg
inc
cli
jg
xorl
rolb
mov
filds
xlat
cmp
je
lods
imul
pusha
repnz
xor
mov
in
push
push
mov
mov
adc
push
movsb
push
inc
das
mov
addl
push
mov
idivb
stos
jo
lahf
sub
pop
xor
jge
pop
out
stos
fdivrl
and
data16
fbld
ret
adc
mov
push
je
mov
jno
lods
pop
mov
mov
sub
dec
jl
jmp
setae
stc
mov
jp
push
imul
jecxz
dec
mov
js
pop
push
clc
rol
lea
dec
les
sub
popa
push
sarl
adc
xchg
push
sarb
fs
inc
add
mov
xor
mov
ljmp
push
int3
call
mov
push
movzwl
in
mov
aam
mov
jbe
jmp
jae,pn
xor
fstl
push
pushw
sbb
jo
insb
les
hlt
dec
dec
lcall
out
sbb
imul
mov
sub
imul
dec
jb
pop
mov
pop
xor
sbb
into
mov
mov
sub
cmp
pop
xchg
out
dec
xchg
sahf
fstl
push
int
xchg
lds
test
xor
adcl
xlat
mov
push
gs
mov
shr
and
dec
repz
or
sub
add
orb
mov
or
test
lds
or
aaa
sbbl
repnz
fwait
rclb
mov
outsb
shll
jecxz
inc
ret
in
pop
add
scas
sbb
fdivs
jg
cmp
pop
jecxz
data16
jbe
sub
lret
mov
jbe
bound
xchg
in
cmpb
int3
mov
dec
mov
dec
les
mov
xor
sbb
testl
pop
stos
jb
out
xchg
mov
mov
mov
jo
mov
leave
mov
mov
scas
xchg
les
cli
mov
clc
pop
fbstp
xor
shll
xchg
pop
div
sarl
mov
sbb
cmp
pop
jns
outsb
stc
movsb
dec
add
insl
mov
fcoml
imul
mov
out
dec
mov
xor
and
mov
adc
call
int
repnz
xchg
rorl
jb
ss
enter
dec
dec
dec
mov
push
into
test
lds
jnp
xchg
push
mov
loope
adc
xchg
inc
lret
pop
mov
js
lcall
mov
fisubs
imul
lods
fnstcw
stc
push
aas
and
or
xor
ss
xchg
inc
cmp
mov
adc
scas
jl
push
and
mov
scas
data16
mov
mov
add
pushf
in
cld
pop
mov
mov
rcr
sbb
sahf
stos
out
cwtl
sub
or
mov
das
sbb
lods
mov
xor
in
mov
pop
mov
out
mov
loop
popf
out
xor
jns
arpl
mov
sbb
jle
mov
lret
test
mov
fisttps
adc
mov
xchg
inc
sbb
and
in
insb
stos
mov
mov
js
test
or
mov
lea
nop
leave
push
rcr
mov
mov
jp
sbb
adc
cmp
out
pop
dec
ss
xchg
push
inc
outsl
adc
mov
inc
jl
pop
mov
push
jmp
mov
mov
int3
daa
adc
adc
sahf
mov
jo
xor
fidivl
sub
mov
out
jmp
push
pop
mov
into
add
sub
sti
mov
lock
xor
les
outsb
push
loop
add
test
or
mov
mov
daa
jns
lods
mov
mov
in
rcr
lock
pop
scas
divb
push
cmpsb
adc
sub
inc
cmc
stos
outsl
subl
jle
or
jo
test
test
sbb
xchg
and
pop
outsb
mov
jns
popa
mov
push
sub
mov
aad
jbe
push
add
mov
fstpt
mov
fnsave
xchg
jno
sub
push
mov
sbb
icebp
dec
mov
xor
in
test
loop
ss
mov
cmp
in
jbe
jmp
xchg
mov
lds
les
or
sbb
pop
aad
adc
mov
xchg
push
xchg
stos
inc
dec
cmp
filds
inc
add
mov
sub
inc
jecxz
ljmp
push
sbb
mov
je
std
daa
es
push
or
mov
mov
shll
leave
or
mov
jg
imul
jae
mov
xchg
insb
popf
iret
ss
cwtl
imul
ret
das
jp
enter
int3
sti
movsl
jns
aam
mov
lds
fdivl
sub
inc
imul
jb
dec
mov
addr16
sbb
pop
sub
jo
idivl
jecxz
lahf
int3
mov
sti
aam
cmp
nop
mov
xchg
lods
mov
xchg
dec
addr16
xor
push
mov
fwait
aam
push
push
movsl
ds
fdivl
jo
add
clc
pusha
scas
mov
lds
push
outsl
insl
mov
int3
into
repnz
sub
push
mov
cli
sub
adc
cltd
mov
dec
test
shr
add
fs
add
loope
in
mov
xchg
xlat
inc
push
mov
mov
imul
pop
mov
ret
and
dec
cld
adc
mov
sbb
mov
mov
jg
test
mov
jne
xchg
sub
mov
add
xchg
push
inc
test
mov
push
rolb
mov
cmp
in
sti
adc
aas
xor
jle
cmp
mov
imul
jns
bound
rolb
mov
out
add
and
pop
ja
daa
push
ds
add
add
test
adc
aad
xor
jbe
es
xor
test
int3
pop
adc
inc
popa
mov
and
push
repnz
pop
hlt
outsl
ret
push
mov
loop
inc
xchg
and
jl
cs
fabs
mov
cltd
dec
cmp
push
bound
outsb
pop
mov
xchg
cmp
lods
js
inc
mov
and
lret
scas
mov
andb
mov
std
mov
stos
xchg
leave
inc
push
pop
or
mov
mov
mov
sbb
mov
dec
xor
out
stos
push
lds
loopne
pushf
push
subl
xor
xor
stos
inc
or
add
pop
inc
mov
out
mov
cmp
ja
sub
inc
adc
mov
mov
repz
loop
in
aas
mov
adc
cmp
scas
push
xor
cwtl
mov
jmp
in
aam
mov
in
mov
mov
mov
mov
mov
mov
add
je,pt
pop
mov
adc
xchg
sbb
xchg
mov
lret
jmp
mov
lods
and
push
mov
adc
xchg
push
or
fidivs
rcll
mov
mov
jmp
mov
jle
sub
out
mov
pop
roll
xorb
mov
idivb
lahf
add
clc
sbb
add
inc
dec
out
dec
mov
out
in
mov
cmpsb
mov
xchg
mov
push
movl
mov
out
nop
dec
mov
inc
xlat
sub
or
sub
ficoms
sub
mov
dec
cmc
aad
push
push
inc
aaa
pop
adc
negb
into
adc
add
mov
xor
lret
inc
insl
fidivrl
je
mov
popa
jge
out
mov
clc
mov
int3
jno
jnp
cmpsl
test
cmp
shll
orl
dec
fldl
lods
fidivl
push
into
in
icebp
cltd
cmpsb
cmpsl
push
out
cld
jo
popf
pop
push
pop
test
jp
adc
repnz
and
jns
dec
cmpsb
mov
xchg
sbb
mov
les
push
popf
push
push
fildl
jp
add
mov
jno
mov
bound
pop
xor
mov
nop
inc
scas
insb
mov
mov
or
mov
imul
and
pop
mov
mov
dec
sub
loope
push
mov
adc
popa
repz
mov
xchg
in
movsb
rcr
mov
xor
jne
pop
pop
pop
jns
les
xor
inc
pop
push
cmp
idivl
or
lret
mov
add
les
dec
push
mov
mov
ljmp
mov
mov
mull
jl
mov
xchg
out
sub
push
mov
pop
iret
push
insb
loopne
mov
dec
out
cmp
xor
cli
sbb
mov
sub
data16
mov
xchg
stos
lock
fimull
lds
xor
xchg
mov
sahf
push
lea
cmp
les
lahf
scas
stc
imul
jecxz
fistl
loope
scas
xor
push
mov
jae
insl
and
xlat
repz
pusha
aaa
insb
or
outsb
fwait
adc
push
xchg
lret
mov
int3
xchg
in
sub
push
mov
cli
aaa
mov
mov
js
adc
test
and
decl
test
int3
shr
xchg
xor
fsubr
lret
nop
dec
and
cltd
ds
fprem1
rol
mov
jnp
cld
pop
ficomps
sbb
shl
sarb
xchg
mov
mov
hlt
jbe
mov
jnp
mov
xchg
cmc
push
adc
sub
mov
fimuls
shrb
in
mov
add
stos
push
dec
xor
adc
xchg
xor
mov
pop
rorb
out
pushl
mov
gs
fldenv
sbb
or
lret
pop
add
inc
jecxz
xchg
inc
jae
aaa
lcall
jle
in
jecxz
mov
sub
mov
or
inc
les
sub
or
sub
jmp
xchg
pop
push
mov
hlt
xchg
adc
sbb
fnsave
insb
les
hlt
int
negb
mov
or
addr16
mov
jae
jmp
lcall
adc
adc
ds
into
mov
cmpsb
pop
and
and
das
xchg
je
add
push
inc
jmp
push
gs
pop
mov
ficomps
shlb
fstps
push
mov
and
adc
cld
push
xor
mov
icebp
cmp
shll
inc
sub
ja
xchg
ljmp
mov
pop
repz
jne
mov
loope
xchg
jbe
ret
mov
cs
push
mov
add
out
mov
stos
xchg
pop
mov
xor
mov
mov
out
lcall
popf
xchg
dec
outsl
jo
push
mov
dec
cmp
add
inc
lret
aad
stos
cli
mov
enter
adc
xchg
icebp
xchg
lods
sbb
jmp
add
scas
ret
push
enter
push
cli
loopne
out
repz
mov
sub
dec
jb
shrb
jp
jbe
jbe
push
inc
clc
mov
push
scas
add
mov
loopne
mov
movl
arpl
jbe
idiv
adc
and
or
xchg
stos
mov
inc
ds
mov
mov
cltd
mov
add
call
push
ss
and
mov
pop
xchg
imulb
stc
sti
mov
xor
xchg
mov
pop
cli
add
aaa
mov
stc
xor
daa
in
mov
jmp
dec
or
shlb
lods
xor
loopne
fiaddl
leave
lds
pop
xchg
lahf
pop
aad
jle
mov
push
jmp
enter
mov
or
mov
jl
mov
sti
cmpsl
sub
inc
jo
shrb
pop
out
xor
push
lods
cmc
inc
and
faddl
in
jns
cwtl
mov
mov
jne
fisttps
fs
aad
sub
push
cmp
and
inc
or
je
pop
hlt
jmp
leave
dec
repnz
sub
repz
scas
mov
andl
mov
out
imul
pop
pop
mov
pop
outsl
cmp
push
xor
sti
push
mov
cltd
push
and
jecxz
popf
adc
inc
xchg
xchg
mov
pusha
cmp
mov
dec
mov
cmp
mov
shll
jo
iret
dec
jae
pop
leave
fdivrs
out
fisubrs
mov
cmc
mov
push
xor
in
lahf
aaa
scas
negl
add
push
sub
lds
aad
insb
outsb
int3
jl
mov
mov
xchg
cmp
das
sbb
bnd
jmp
sub
sti
add
xchg
ljmp
movsl
mov
cwtl
xor
bound
mov
mov
add
push
cmp
js
dec
mov
mov
out
xchg
aaa
insb
dec
mov
mov
cmp
xor
mov
mov
mov
xor
pusha
stos
test
outsb
ss
cmpsb
push
push
mov
push
dec
subl
cli
inc
and
pop
xchg
aas
js
mov
mov
xchg
mov
xchg
es
pop
mov
mov
data16
xor
iret
mov
outsb
push
push
movl
xchg
cld
sbb
in
sbb
mov
or
ret
mov
add
into
pushl
mov
cmp
or
cmp
jo
cmpb
pop
mov
scas
scas
shlb
daa
test
push
dec
mov
or
pusha
sub
jl
cltd
or
add
pop
dec
fsts
out
xchg
mov
mov
gs
hlt
jbe
pop
jmp
dec
adc
outsb
xchg
push
add
mov
cwtl
daa
mov
push
in
frstor
or
mov
pop
add
jae
into
mov
or
push
test
mov
xchg
rorl
icebp
mov
mov
mov
xchg
push
roll
int
push
jbe
inc
mov
popa
adc
bound
mov
mov
jmp
movsl
mov
iret
cmc
jno
cmp
lds
jae
xchg
cmp
out
pop
loope
cmc
icebp
std
xchg
mov
xor
mov
sbb
sarl
fistpl
mov
fldcw
jbe
iret
movsl
std
aas
mov
dec
fsubrl
test
xor
ss
mov
nop
push
jbe
mov
dec
dec
mov
and
ficompl
xorb
fcom
mov
push
in
push
in
adc
fdivs
sbb
mov
scas
ret
sub
cwtl
jecxz
mov
and
sub
dec
pop
jne
test
xchg
roll
and
out
int3
ljmp
xchg
ds
adc
lods
mov
sbb
divb
mov
lret
repz
mov
divl
adc
rorl
mov
jecxz
mov
stos
push
mov
add
xchg
les
shr
push
data16
push
add
std
dec
xor
jle
pop
gs
rorl
ds
mov
mov
rcr
add
icebp
idivb
mov
nop
mov
mov
lahf
and
mov
cmpsl
adc
mov
jecxz
mov
dec
stc
inc
movsl
cmp
push
insb
cltd
into
jns
sub
dec
mov
sbb
testb
mov
or
mov
mov
mov
inc
mov
jne
insl
pop
mov
cld
xchg
mov
fists
mov
mov
mov
cmpsb
ds
outsl
xor
mov
pop
push
sbb
jecxz
pop
adc
dec
mov
clc
mov
xor
cmpsl
add
jo
negb
cmpsb
inc
cmp
decb
fdivr
and
scas
les
mov
sbb
pushl
mov
shll
shl
test
fisttpl
mov
mov
add
mov
daa
mov
mov
js
lcall
cli
mov
or
and
mov
cmp
jno
dec
nop
push
divb
lds
push
jmp
loopne
cltd
movsb
loop
mov
popa
shlb
test
mov
mov
shl
lea
into
shlb
push
gs
cmp
test
jb
lds
idivb
inc
ss
call
rcr
rorb
xlat
test
leave
push
arpl
ret
lea
testl
test
orl
mov
mov
loopne
in
pop
rcll
mov
lahf
nop
popa
std
adcl
xor
pop
push
pop
sub
xor
add
testl
xor
addr16
mov
xor
push
cmp
nop
push
adc
test
je
fdivl
dec
xchg
or
sbbl
mov
push
lods
push
pop
fs
fwait
mov
jmp
and
sub
das
loope
xlat
mov
xchg
fsubl
mull
mov
leave
pop
outsb
adc
xor
in
ss
pop
es
sub
mov
cli
dec
notb
xor
jmp
add
jo
or
int3
xchg
mov
and
or
sbb
test
xchg
std
dec
cmpsb
call
vmulsd
lcall
mov
clc
imul
or
test
xor
jne
icebp
cmp
xchg
lock
cwtl
inc
rclb
es
andb
mov
pushl
sbb
cmp
add
xor
push
inc
sub
xchg
inc
pop
or
mov
or
insl
add
fdivs
cs
mov
pop
les
mov
xchg
xor
out
mov
hlt
or
push
dec
leave
mov
dec
mov
jbe
or
cli
mov
or
jle
data16
and
pop
mov
int3
sub
icebp
fnstsw
ficoms
and
fcomps
int
jg
fldcw
cmp
adc
inc
mov
mov
out
jmp
mov
sub
mov
add
xchg
ljmp
lret
xchg
aaa
xlat
xchg
pop
adc
insl
repnz
mov
sub
mov
mov
fnstcw
xchg
push
sbb
sub
add
xchg
push
mov
push
fnsave
cld
mov
cmp
into
mov
sarl
xor
sub
dec
push
jo
daa
lods
mov
repnz
repz
or
sub
lods
addr16
sbb
ss
scas
jp
repz
and
and
loopne
test
mov
shl
das
repnz
mov
mov
cmp
mov
arpl
out
jmp
mov
pop
cmpsb
mov
mov
sub
pop
cwtl
xorb
adc
daa
fistpll
mov
sbbb
mov
xchg
lods
mov
mov
xlat
push
cltd
lea
das
aad
sarl
mov
dec
clc
aas
or
jp
and
push
mov
pop
roll
mov
add
in
lea
mov
scas
rcrb
adc
or
js
inc
lds
cld
jl
inc
add
sub
int
sub
mov
mov
pushf
insb
cwtl
sti
mov
cmpsb
or
out
mov
aaa
mov
ds
pop
ffree
dec
jle
push
mov
test
lods
mov
and
out
mov
and
pop
popf
in
out
cmpsb
les
push
imul
test
inc
mov
jb
jmp
mov
es
movsl
and
cltd
and
cmpsb
xor
inc
mov
jns
add
push
fildll
jbe
lea
mov
xor
xor
push
adc
je
into
mov
jno
xlat
xor
cwtl
mov
pop
jp
jbe
adc
inc
aas
mov
sbb
and
les
or
imul
inc
and
mov
lds
or
xchg
ficoms
inc
dec
insl
mov
rcrl
mov
cmp
jns
outsb
dec
stos
mov
ja
inc
sysenter
sarb
dec
clc
pop
or
hlt
mov
add
test
mov
pop
enter
push
out
push
xchg
das
mov
mov
mov
mull
ljmp
push
or
dec
mov
test
aam
into
lcall
mov
sbb
arpl
out
data16
sub
es
add
fdivl
daa
movsl
mov
jb
dec
jmp
xor
sub
aam
andb
hlt
sahf
mov
cmp
mov
imul
ret
lahf
xchg
call
mov
cmc
push
dec
xchg
dec
fwait
idiv
mov
xor
mov
xor
lcall
stos
mov
daa
ss
xor
ds
fidivl
sub
jbe
pop
pop
in
paddw
dec
test
dec
xchg
outsb
or
xor
and
xchg
sub
icebp
rcrl
lahf
push
dec
sub
loopne
and
and
cli
mov
lods
es
pop
mov
jbe
lods
add
loope
call
adc
stos
xorb
stc
mov
mov
rolb
fs
in
mov
into
fsubl
jnp
pop
push
aam
sub
jbe
or
cmp
insb
imul
and
mov
mov
orb
or
cmp
xchg
les
mov
add
scas
imul
mov
sub
rolb
lahf
mov
mov
pop
or
or
pop
icebp
add
add
popf
stc
mov
dec
pop
fdivs
jge
mov
shl
xchg
test
sub
mov
jmp
int
sub
fidivl
mov
pop
or
mov
adc
jg
movsl
inc
mov
add
lret
cwtl
and
ja
mov
xchg
xchg
jne
mov
pop
imul
mov
mov
or
mov
cmpl
mov
sub
addr16
aas
js
mov
push
leave
mov
fsubs
cmp
mov
mov
shll
cmp
ja
fcmovbe
out
mov
call
rorl
mov
mov
add
cld
mov
sbb
aas
scas
xor
jo
and
jecxz
fwait
and
add
xchg
rcrl
lret
cltd
out
fwait
pop
hlt
mov
mov
popf
test
int3
ds
mov
jp
scas
adc
sbb
mov
in
mov
mov
fisttps
popf
xor
mov
add
movsb
scas
sbb
mov
and
mov
mov
jmp
dec
pop
inc
push
mov
loopne
mov
or
mov
rcrl
enter
lods
ss
jp
repz
mov
xchg
add
fs
add
inc
mov
dec
mov
in
lock
adc
mov
movsb
pop
gs
adc
mov
sahf
pop
cmp
fdivrp
jl
scas
lds
in
pop
push
sub
imul
ss
mov
dec
xor
mov
arpl
pop
xchg
adc
add
pop
mov
inc
add
sti
insl
pushf
mov
dec
cmp
stc
mov
in
cmc
and
mov
fisubl
fs
mov
repz
icebp
xor
lods
in
or
fs
mov
sbb
sbb
movsl
jo
xchg
sahf
pop
movsb
jg
out
push
ss
or
insl
jns
and
dec
pop
cmpsb
fildll
icebp
aad
fcmovnb
or
ss
mov
je
jbe
mov
arpl
pop
pop
xchg
cmpsb
mov
dec
divb
mov
scas
or
cld
imul
insl
mov
loopne
mov
lds
sti
push
mov
mov
shll
mov
lret
in
lds
rcrb
mov
mov
sbb
inc
lea
mov
pop
mov
xor
ljmp
mov
call
sbb
mov
mov
mov
sarl
divl
sub
push
enter
mov
in
xchg
popf
dec
and
and
das
or
push
lret
aam
xchg
data16
push
jle
mov
sub
inc
xchg
ss
mov
bound
xor
add
ret
mov
jecxz
pop
ficompl
cli
or
dec
lds
data16
cmp
inc
dec
ss
push
xchg
xchg
pop
les
push
nop
in
jp
std
jbe
xor
xchg
mov
xor
shlb
add
ja
lret
clc
mov
or
xchg
mov
push
xor
int3
popf
aaa
mov
sub
pushf
cmpsb
lods
mov
js
xchg
push
test
in
shlb
mov
and
mov
rclb
mov
nop
movsb
push
leave
std
dec
ret
cmpl
cmc
pushf
mov
and
push
aad
std
pop
idivb
pop
add
jne
inc
pcmpeqd
cmpsb
xor
mov
mov
fidivrs
mov
mov
mov
les
into
xchg
movsl
jge
sar
push
sub
inc
inc
or
aas
aam
pop
in
mov
out
fildl
mov
cmp
jbe
sarb
adc
les
mov
outsb
jp
js
xor
mov
jl
xchg
lret
cld
stc
outsb
mov
mov
mov
das
push
fcomps
clc
mov
or
scas
push
mov
push
mov
filds
hlt
cmc
push
out
icebp
cmp
loop
popf
xor
and
push
pop
inc
cs
dec
add
pop
stos
jns
mov
cmp
sub
mov
mov
cmp
xchg
int3
jns
mov
dec
xchg
sbb
mov
lcall
and
lods
pop
mov
push
inc
push
xor
and
fiadds
push
fistpll
cwtl
mov
push
inc
sub
dec
push
pop
and
out
push
cmp
mov
mov
mov
pop
mov
push
push
xorb
movsl
pushf
pop
mov
in
inc
bound
push
sbb
sbb
scas
call
pushf
jno
and
out
mov
aaa
mov
cs
lods
ror
pop
sub
mov
ja
jae
xchg
mov
mov
jo
and
ds
mov
mov
sbb
xor
lret
mov
pop
xchg
shl
adc
pop
jl
sbb
das
mov
mov
and
int
mov
add
mov
mov
add
movsl
outsl
fcmovnbe
jns
dec
mov
les
test
mov
sbb
pop
add
clc
dec
xor
xchg
outsl
aas
mov
out
in
push
push
rcll
xchg
xchg
sub
cmpl
adcb
adc
loope
sti
xor
pop
dec
ljmp
mov
fcomi
lock
jmp
mov
sti
ljmp
xchg
lock
mov
aaa
lea
mov
or
fmulp
dec
hlt
popf
mov
mov
dec
and
mov
xchg
cmp
ss
xchg
mov
ret
fmull
lahf
imul
sub
sbb
and
mov
mov
scas
add
bound
or
scas
or
fmull
mov
lds
cmc
mov
mov
jle
aad
movsb
xor
fistpll
jno
inc
lret
xor
mov
ss
stos
dec
xor
xchg
cld
lret
push
pop
or
mov
xchg
imul
mov
pop
dec
xor
mov
out
xchg
push
sub
xor
mov
test
adc
xchg
xor
cmp
pop
ror
add
sti
mov
lds
lahf
fisttpll
sarb
call
mov
fcoml
mov
sbb
dec
ret
leave
divl
shlb
xor
push
andl
mov
shr
insb
das
xor
lods
adc
lret
mov
sbb
data16
mov
xchg
dec
sub
mov
mov
push
ficoms
xor
scas
lods
clc
mov
mov
or
lcall
mov
mov
lahf
andl
or
push
sub
rcrl
jo
xor
ficomps
push
mov
mov
mov
stos
pusha
jbe
and
scas
mov
ret
push
pop
vsqrtss
pusha
idivb
sub
mov
insl
xor
jecxz
lret
mov
mov
mov
mov
lcall
ds
fs
push
and
xchg
inc
cmc
cmp
push
xchg
shll
lret
sbb
push
inc
fstps
mov
es
in
sbb
dec
xor
lds
test
es
mov
xorl
and
sbb
and
pop
mov
pop
aas
addr16
dec
pushf
jne
jno
into
push
mov
pop
sub
mov
or
aad
ja
mov
out
xchg
mov
fsubr
sbb
cmp
loop
add
inc
cltd
les
cmp
ss
xor
xchg
daa
mov
ja
lock
xor
mov
gs
jle
scas
aas
xchg
mov
push
xchg
imul
or
out
pop
fists
les
mov
pop
out
in
mov
cld
push
ljmp
jp
mov
cmp
mov
cs
int
adc
mov
push
sub
mov
sub
clc
jg
mov
sahf
inc
mov
cmp
jmp
cmp
pop
mov
mov
xlat
xchg
sahf
ffreep
pop
mov
in
mul
mov
mov
fdivrp
subl
pusha
mov
cmpsl
sub
fs
data16
push
xor
dec
sbb
cmp
das
leave
mov
sub
xorb
ja
pusha
xor
dec
test
push
vmovhpd
repz
sbb
shll
mov
sbb
shrb
cwtl
das
cmpsl
and
out
in
ret
stos
imul
cli
sarl
int3
in
out
sti
mov
mov
or
dec
ds
sub
arpl
sbb
dec
inc
scas
mov
rorl
pop
xor
enter
adc
xchg
clc
imul
mov
js
mov
dec
scas
mov
push
sbb
icebp
add
negb
dec
inc
mov
test
jae
xchg
pop
push
clc
mov
mov
inc
insb
mov
scas
cwtl
test
mov
aad
or
mov
mov
or
adc
sahf
std
cmpb
jl
fimull
mov
out
movsb
mov
and
divb
cmc
hlt
mov
mov
adc
adc
cmp
fisttpl
aaa
and
xor
inc
out
in
insl
push
mov
inc
dec
scas
cli
shll
lods
orl
mov
in
shlb
mov
xor
in
ss
cmpsb
dec
xlat
imul
xchg
mov
sub
xchg
cmpsl
pop
mov
push
pop
mov
cmc
pusha
test
xchg
repnz
mov
or
daa
pop
mov
out
jmp
lods
mov
cmpl
aas
mov
mov
je
mov
cltd
jno
and
loopne
mov
outsl
mov
je
lahf
push
scas
into
add
or
mov
pop
adc
testb
mov
mov
pop
call
pop
mov
gs
popa
xchg
xor
int
cltd
lcall
js
mov
lret
pop
cmp
addb
icebp
in
pop
ss
scas
lret
ljmp
mov
cmp
fistl
mov
repz
push
aam
jbe
rcll
and
imul
jp
lds
ret
lea
movsb
sbb
imul
insb
jb
xor
mov
xchg
lcall
xorb
xchg
or
data16
iret
sub
add
mov
adc
xchg
lret
sahf
mov
addr16
jp
jl
mov
sbb
aam
mov
jecxz
cmp
mov
or
dec
mov
mov
lahf
js
mov
mov
push
mov
fwait
mov
sti
cmp
pushf
and
fucomi
xlat
movsl
jae
pusha
jmp
in
xchg
outsb
std
sub
add
and
mov
sub
xchg
mov
nop
mov
adc
repz
mov
push
pusha
or
mov
cmp
test
loope
mov
mov
std
dec
lock
mov
cmc
mov
cld
sub
sbb
xchg
cmpsl
jbe
pop
mov
mov
mov
jne
mov
pop
jae
aaa
adc
xchg
adc
mov
cmpsl
mov
adc
ljmp
loopne
dec
in
xor
cli
into
mov
popa
adc
dec
mov
repnz
or
add
xchg
out
dec
xchg
ss
mov
adc
es
lahf
jge
les
add
xor
dec
push
lock
mov
notl
mov
fwait
pop
xchg
jmp
xor
or
add
pop
int3
les
or
dec
ja
cli
adc
mov
pop
in
int3
or
fs
mov
icebp
cltd
sbb
loop
mov
xchg
mov
lods
mov
cmpsb
pop
leave
int
xchg
dec
mov
insb
in
jle
stos
movsl
mov
mov
push
shr
jb
cmpl
sub
out
jge
cmpsb
scas
lret
mov
fidivrs
scas
mov
mov
xchg
jbe
movb
xor
xchg
mov
mov
sbb
subl
fwait
into
fnstenv
add
lahf
push
xor
jle
push
cmp
sarb
cli
shll
divl
pop
ja
pop
mov
cmpb
lods
add
mov
pop
in
mov
pop
or
cmp
push
push
scas
push
ror
cwtl
mov
adc
add
mov
xor
cld
test
lods
sbb
test
test
aas
mov
fs
popf
xorl
arpl
fldl
sbb
sarb
mov
mov
clc
stos
pop
je
outsb
enter
push
adc
mov
imul
mov
or
mov
rcll
nop
fidivrl
loopne
or
sbb
mov
dec
add
out
imul
mov
int
clc
popf
out
add
inc
inc
das
and
in
xchg
movsb
mov
push
fisubs
sbb
xor
or
or
mov
stos
dec
lahf
lds
inc
pop
pushl
pop
clc
xor
mov
sti
mov
xchg
mov
movb
inc
fnstenv
lock
dec
push
in
and
scas
jns
les
out
inc
fimull
jne
outsl
movsb
sti
jns
jno
insl
in
inc
outsb
mov
ljmp
inc
or
daa
jbe
mov
lods
jae
leave
ss
test
pop
mov
lock
and
push
fdivl
jecxz
mov
push
pop
int3
mov
push
imul
outsb
adc
cmc
mov
inc
je
daa
mov
bound
dec
pop
push
mov
mov
mov
mov
scas
or
sub
or
and
cmpb
popa
ffree
dec
mov
ret
lds
add
mov
dec
fwait
dec
inc
sti
in
movsb
mov
ret
les
push
adc
cltd
add
mov
xor
cmp
cmc
mov
ss
push
push
cmp
sbb
sti
ljmp
jp
call
mov
fs
negb
ljmp
dec
cld
and
les
sub
dec
push
xor
mov
jae
stos
or
mov
lcall
xor
xchg
sbb
pop
movsl
mov
jmp
dec
sub
adc
repnz
lret
ss
jecxz
icebp
jb
xchg
les
mov
divb
scas
adc
sbb
mov
mov
cld
pusha
pushf
adc
in
orl
mov
testl
jne
lret
push
xchg
fwait
adc
mov
xor
decb
xor
mov
scas
xlat
testb
or
sarl
and
cmp
int3
out
imul
cli
test
mov
js
mov
mov
mov
jmp
or
xchg
adc
and
jbe
xchg
mov
inc
movzbl
push
std
leave
mov
mov
fisubl
jo
sub
pop
sbb
or
in
test
leave
mov
jne
fidivrl
jbe
push
inc
jnp
aas
mov
adc
xor
cmp
xchg
dec
shlb
pop
inc
into
lods
popf
mov
stos
sub
add
add
les
out
push
fcoms
mov
addr16
xchg
stos
pushl
adc
fists
xor
push
or
pushf
dec
les
jle
aam
mov
adc
sub
stos
dec
mov
nop
je
pop
mov
aam
push
sbb
aas
loope
hlt
inc
sub
mov
add
icebp
dec
sbb
loop
cmp
sub
sbb
ror
or
bound
sar
je
ss
jmp
mov
mov
lret
mov
inc
lods
in
adc
jbe
in
je
add
jbe
jne
pop
xchg
and
or
lds
dec
sbb
fdivp
dec
adcl
jle
mov
lds
fsubrl
sbb
xor
subl
pop
push
jae
shll
xor
ja
jl
mov
lods
ret
mov
mov
outsl
xchg
in
push
test
ror
cmp
scas
or
push
scas
xchg
and
out
nop
cmp
test
pop
cld
rcrl
inc
aam
fucomip
add
clc
ss
mov
jb
mov
addb
ds
sbb
arpl
mov
push
and
sarb
jecxz
jb
imul
stos
enter
adc
cs
loope
push
cld
mov
pop
mov
jmp
mov
inc
mov
fsub
push
fsubp
ret
mov
sarl
mov
xor
in
test
jp
xchg
clc
mov
or
add
and
or
adc
in
mov
add
mov
mov
int3
lds
cmpb
dec
cltd
sub
sub
cmp
mov
int
mov
sub
fwait
mov
mov
mov
sbb
mov
test
ja
int3
push
in
insl
rcl
mov
lahf
mov
mov
mov
pop
repnz
mov
shl
fldt
lret
dec
das
pop
mov
mov
jns
into
cmpsb
inc
mov
fisubrs
int
inc
lock
roll
fidivl
sbb
mov
jmp
jae
fs
push
test
jns
mov
adc
jne
push
fisttps
mov
aad
test
mov
jne
das
fstpt
xorb
pop
jno
daa
bound
push
mov
mov
jbe
dec
dec
repnz
notl
or
sbb
imul
push
loop
ficompl
lret
repnz
fucom
dec
push
mov
mov
cmpsl
movsb
lahf
ss
popa
insb
pop
pop
mov
notl
and
shlb
add
pop
xor
mov
scas
mov
ljmp
inc
xchg
call
mov
pop
fstpt
adc
ds
aam
out
xchg
push
jge
sbb
ret
dec
negl
mov
andb
push
mov
mov
xchg
in
xchg
insb
clc
mov
and
pop
gs
das
jmp
jo
movsl
push
lret
jle
jl
mov
sub
rcr
dec
jmp
and
jb
divl
js
loop
mov
sbb
lret
xlat
jecxz
movsb
inc
pushf
xchg
add
cmp
dec
mov
xchg
jbe
push
cli
xchg
adc
pushf
mov
lock
xor
inc
mov
xor
dec
and
sarl
pusha
iret
push
dec
or
jae
or
int
xlat
int3
test
cs
cli
fadds
stos
js
adc
not
enter
jae
mov
sub
dec
test
rolb
roll
mov
nop
jo
mov
jnp
mov
or
inc
scas
push
cld
das
mov
mov
mov
jg
inc
xor
jne
adc
jbe
mov
test
adc
mov
cmpsb
add
cmp
stos
dec
in
mov
pop
push
into
subl
fwait
shlb
sub
lock
lcall
fsubs
aam
es
jmp
sbb
les
dec
arpl
xor
mov
call
ffree
mov
inc
repnz
pop
xchg
testb
mov
cmp
les
adc
mov
idivl
push
cmp
adc
ret
mov
dec
hlt
mov
imul
icebp
mul
out
mov
sbb
xchg
clc
pop
or
mov
fsubrs
adc
cs
loop
mov
cmpsb
jns
in
jmp
mov
shll
push
neg
roll
icebp
cmpsb
fdivs
lret
sbb
loope
int
xchg
int3
pop
mov
fstl
mulb
mov
jo
push
cmpl
mov
aam
mov
push
or
aas
lret
add
mov
test
sahf
push
cmp
pop
mov
push
push
cmpsb
imul
inc
orl
mov
adc
xchg
pusha
out
xchg
divl
pop
in
lcall
mov
scas
mov
ret
negl
sub
mov
out
incl
stc
test
pop
les
repnz
jae
sti
xor
adc
inc
lock
push
mov
mov
lret
ds
movsb
jb
dec
enter
adc
xchg
leave
cmpsl
mov
sbb
push
sub
mov
jecxz
mov
pop
movsb
cmpsb
loopne
hlt
bound
add
out
xchg
xchg
jnp
sarl
aas
inc
test
jp
out
mov
mov
or
std
aas
inc
rorl
fidivl
notl
sub
adc
add
jge
cmpsb
sahf
outsb
mov
xchg
jl
cmpb
sub
jne
decl
decb
hlt
mov
inc
inc
lock
push
pop
pop
sub
cwtl
in
xchg
add
add
outsb
mov
push
xchg
adc
dec
loopne
mov
mov
mov
cmp
data16
add
pop
insl
add
stc
in
pop
jb
mov
nop
mov
rcrl
mov
mov
fdivrl
mov
pop
lahf
push
mov
out
inc
and
mov
fcompl
and
add
mov
adc
pop
aad
movsl
push
push
cmpsb
mov
cwtl
icebp
je
or
fisubl
pop
mov
pop
add
xlat
mov
fidivl
popf
in
mov
push
xchg
or
test
dec
mov
fcmovu
dec
and
fdivr
cmp
mov
xchg
data16
sarl
mov
mov
lods
not
adc
xchg
insb
rcl
aam
cmpsb
cmp
lods
mov
add
sarl
sub
mov
cltd
mov
repz
pop
jle
sub
out
mov
call
lods
cli
mov
pushf
scas
mov
push
pushf
mov
sub
push
outsl
jmp
adc
cmp
xchg
dec
scas
mov
loope
loopne
inc
das
mov
xor
jge
lcall
inc
sub
sub
inc
jbe
push
jb
mov
fsubs
jge
xor
js
mov
or
sbb
adc
scas
sub
sub
and
ja
sbb
mov
pop
xchg
das
xchg
push
mov
mov
clc
xor
fs
cmp
lcall
rcl
push
js
inc
enter
mov
pushl
aad
insb
shll
mov
lcall
mov
movsb
test
dec
cs
imul
cmp
test
mov
out
shr
les
mov
das
movsl
std
xchg
inc
push
jbe
int
sub
mov
sbb
mov
js
les
subl
cmp
jbe
mov
mov
xchg
mov
push
adc
pop
pop
mov
mov
sub
mov
mov
and
rcrb
cli
sub
jbe
or
mov
shl
fdivs
push
sbb
inc
mov
jmp
hlt
jge
inc
lds
add
or
daa
rol
mov
lock
fstpl
jecxz
loop
mov
ret
stc
leave
lahf
loopne
mov
push
je
mov
jp
adcb
out
mov
sbb
pop
add
hlt
mov
cmpsb
insl
sahf
loop
or
out
pminsw
and
and
repz
adc
sbb
pop
dec
xchg
push
cmp
dec
jmp
mov
into
lods
push
dec
adc
sub
inc
xorb
cmp
mov
and
stos
and
mov
cld
dec
xchg
ja
pop
pop
mov
mov
push
mov
pop
loope
mov
addr16
and
cmpsb
mov
fnstenv
mov
inc
lds
lock
cmpl
mov
dec
stos
add
sahf
rol
mov
mov
insb
pop
insl
ja
mov
leave
adcb
push
pop
mov
repz
ss
mov
lcall
into
mov
cwtl
sub
and
out
orl
adc
mov
sar
xchg
repnz
push
mov
test
inc
popf
jle
adc
inc
pop
aam
arpl
mov
sbb
rolb
mov
stos
lret
mov
xchg
mov
xchg
stos
xchg
mov
and
jbe
jne
push
mov
rcl
adc
push
mov
mov
out
lea
xchg
int3
adc
mov
adcb
jp
leave
sahf
fidivl
lock
jle
stos
mov
fsub
je
es
push
mov
mov
xchg
dec
adc
insl
pushf
xchg
cld
xchg
inc
ffree
and
jl
mov
cltd
inc
imul
xchg
add
mov
inc
cmc
or
das
sti
lea
xchg
adc
jp
xor
xchg
aaa
sbbb
mov
mov
jnp
push
call
cmp
mov
je
mov
fcompl
mov
outsl
leave
or
shl
aaa
lock
stc
sti
imul
imul
mov
xorl
cmpsl
mov
xor
cli
pop
mov
lea
loope
aas
and
xor
adc
jns
popa
mov
mov
incb
aaa
or
int
cmpsb
mov
push
stos
mov
mov
jge
inc
cmp
bound
dec
mov
dec
jo
adc
mov
cs
sahf
bound
lahf
cmp
dec
or
mov
push
outsl
xchg
mov
sbb
lds
sbb
rclb
mov
in
xchg
mov
sub
xor
pop
jecxz
cmp
aam
cmp
daa
or
mov
inc
inc
mov
pop
mov
in
idivb
aam
cmp
ret
or
add
mov
cmp
jae
lds
dec
std
xor
mov
imul
int3
sbb
jl
jns
fwait
inc
data16
mov
imul
mov
jb
cmp
lds
loope
push
dec
data16
inc
mov
mov
mov
ds
push
xor
dec
fdivrp
sbb
dec
js
out
dec
scas
mov
pop
fwait
daa
popa
outsb
mov
xchg
ja
dec
push
clc
and
xchg
scas
pusha
mov
lcall
jmp
sbb
int3
das
dec
std
sub
mov
xor
movsl
outsb
adc
divb
imul
movb
or
pop
mov
repz
and
call
or
inc
adc
sub
nop
mov
std
inc
jp
mov
cmpsl
xor
cld
xor
into
stc
push
stos
mov
cmp
inc
pop
jne
xchg
shll
mov
cli
jnp
and
xchg
push
mov
rclb
push
add
mov
and
shrb
cwtl
mov
enter
jb
sub
scas
or
loope
pop
mov
vpxor
lret
gs
lahf
subb
inc
pop
les
sub
cmp
xor
cmpsl
das
add
jns
xchg
sahf
pop
mov
jle
jecxz
mov
pop
popf
rcrl
stc
pop
cmc
mov
or
mov
mov
or
push
jbe
ds
ljmpw
mov
hlt
lock
icebp
cmc
push
mov
dec
xchg
es
aad
mov
and
cs
sbb
lret
std
sub
add
les
iret
in
or
add
mov
inc
lret
xchg
sbb
mov
or
gs
jbe
xchg
and
repnz
push
arpl
mov
fisubs
faddl
fcompp
mov
lahf
push
push
data16
outsb
xchg
mov
push
and
mov
ss
repnz
pop
mov
lods
shll
inc
inc
mov
or
dec
lods
call
mov
popf
mov
repz
jg
and
inc
sbb
stos
inc
shll
mov
mov
out
sbb
mov
cmpb
push
pusha
into
push
out
loopne
jp
shl
jno
mov
fidivrl
cmp
decl
xchg
mov
pop
movsb
pop
push
cmp
xor
ja
jmp
call
dec
shll
mov
int3
ljmp
outsl
xchg
lea
pop
pop
xchg
shl
mov
mov
adc
xchg
jp
stos
call
push
clc
jmp
inc
pop
xchg
inc
mov
mov
mov
pop
in
xchg
xchg
mov
mov
shrb
or
inc
rcrb
inc
inc
lahf
or
mov
mov
fnstenv
gs
hlt
call
ja
divl
movsb
in
xor
pop
les
sti
adc
xchg
jg
dec
lds
pop
sbb
add
or
loope
movsl
aas
push
insl
mov
inc
scas
dec
push
jnp
mov
mov
cmp
mov
inc
fstp
je
imul
mov
insb
in
jge
cmpsb
push
inc
das
imul
mov
inc
cltd
popf
pop
and
lret
cmpsl
xchg
mov
dec
jo
sub
pop
popf
mov
faddl
rcll
jns
pop
int
mov
mov
fildll
cmpsl
and
xchg
mov
jae
xchg
mov
fisttpl
mov
in
push
imull
mov
mov
scas
das
mov
scas
cmc
mov
pop
lahf
mov
popa
mov
shrl
shrb
dec
jg
cmpl
cli
add
ss
rolb
dec
ficompl
or
cmp
dec
mov
cmc
jbe
shr
cmp
xchg
jb
mov
jle
scas
cmp
es
pop
stc
push
xor
call
mov
bound
dec
add
cld
jecxz
cs
push
push
mov
or
divl
xorb
push
in
push
jae
xchg
dec
insb
shr
dec
enter
mov
hlt
xchg
push
mov
and
mov
lea
mov
lock
pop
inc
pop
mov
jb
sbb
addr16
jmp
cmpb
jae
inc
pushf
pop
out
mov
dec
test
xor
sahf
mov
mov
int
mov
fwait
cs
popa
xor
mov
xor
call
inc
mov
sbb
inc
pusha
sub
mov
cld
push
inc
lahf
sub
push
pop
sub
mov
sbb
sub
jb
testb
and
fs
push
repz
mov
inc
and
inc
imul
lds
int3
pop
ret
clc
mov
cld
cmp
fnstsw
iret
jns
mov
pop
test
mov
fcoml
jnp
mov
push
adc
mov
andb
clc
mov
mov
in
out
bound
iret
xor
mov
loop
inc
mov
fsts
fcomps
jecxz
gs
test
call
push
add
mov
repnz
jle
and
push
popf
pop
ja
fsts
jno
or
xor
pop
and
stc
out
nop
dec
or
xchg
push
or
lcall
push
xchg
mov
jne
xchg
inc
leave
pop
adc
test
icebp
add
iret
jb
sub
mov
sahf
and
xlat
insl
int
daa
cmp
cs
fwait
xchg
adc
sub
lods
mov
mov
sbb
sbb
or
lret
add
cmc
mov
popa
cmp
xor
dec
sysret
and
std
mov
push
cmp
mov
fsubp
shlb
lret
inc
les
cmp
mov
xor
imul
cmp
je
push
push
jbe
and
lret
stos
push
mov
bound
sti
mov
or
ret
bound
arpl
lahf
sbb
jnp
cwtl
mov
pop
rcll
stos
adc
stos
test
loopne
xlat
mov
aas
repnz
mov
push
push
jp
mov
scas
fwait
popf
jl
push
les
cmp
jmp
out
das
sbb
mov
sbb
pcmpgtd
mov
inc
xchg
test
dec
or
adc
lcall
lods
mov
outsl
mov
xor
mov
mov
loop
push
lea
mov
jns
xlat
or
dec
mov
mov
and
pop
fcmovnb
idiv
movsb
addr16
inc
mov
mov
jp
in
movsl
in
mov
adc
sub
pop
push
iret
add
test
mov
fbstp
mov
add
mov
mov
lea
mov
mov
or
out
push
out
outsb
mov
dec
and
notb
fwait
adcl
adc
pop
rcrl
mov
scas
jmp
inc
cwtl
negb
mov
into
and
mov
arpl
lods
adc
dec
mov
jmp
push
outsl
aaa
mov
lea
sbb
in
mov
jp
mov
test
in
pop
mov
jl
adc
mov
fstpt
imul
lds
pop
push
xlat
xor
mov
add
mov
mov
scas
xchg
in
mov
and
pop
xorb
loope
jns
fistl
xchg
jno
bound
fwait
andb
pop
dec
lahf
jl
push
push
mov
dec
out
aas
imull
xchg
xor
or
jp
data16
sub
cwtl
jge
dec
jbe
push
out
mov
pop
adc
push
and
mov
add
sub
out
xchg
shl
mov
jmp
pop
push
les
sbb
mov
cltd
ljmp
ret
call
adc
insb
jno
jge
aas
mov
aam
push
fsts
ss
mov
je
or
xchg
fdivr
mov
push
mov
dec
mov
add
adc
pushf
mov
addl
push
inc
movsl
int3
jnp
fisubl
pop
shrl
mov
add
jmp
push
sub
lret
mov
outsb
xor
rol
aam
mov
sbb
pop
sub
mov
mov
or
dec
je
cmp
dec
push
ljmp
push
push
daa
inc
mov
int
sub
cmpsl
lea
gs
mov
xchg
das
jl
pusha
fwait
mov
rorl
mov
lods
gs
sbb
jge
cli
push
cmp
fs
push
test
mov
cld
pop
push
or
cltd
mov
and
divb
inc
ret
nop
cmp
faddl
push
popf
mov
push
ret
pop
test
cld
cmp
adc
fsubrs
sbb
popa
daa
mov
cld
xlat
loopne
jnp
jge
cltd
pop
leave
mov
and
push
xlat
mov
jp
stc
rclb
mov
mov
aaa
mov
push
xor
loope
pop
inc
sub
out
xchg
pop
sti
fdiv
test
mov
arpl
mov
push
les
xchg
add
mov
fdivs
mov
ss
fwait
cmp
jle
mov
mov
mov
outsb
xor
xchg
or
mov
mov
jle
das
stc
test
pop
pop
test
ss
movzbl
mov
jne
cwtl
fdivr
mov
push
imul
push
js
cs
scas
push
adc
mov
jmp
mov
push
sbb
hlt
inc
mov
jnp
adc
mov
dec
mov
mov
loope
mov
cld
xchg
js
sub
xchg
mov
mov
add
sahf
mov
pop
in
sbbl
js
aaa
in
dec
inc
mov
loopne
or
clc
mov
cmpsl
lret
push
push
xor
or
mov
loopne
cmp
inc
mov
push
cmp
sub
mov
dec
and
mov
flds
in
cmpsb
and
leave
ret
jne
sbb
iret
lock
mov
mov
push
cmp
ljmp
mov
cmc
sarl
popa
out
mov
jne
movl
js
xor
adc
outsl
sbb
aas
jp
jbe
insl
lret
pop
pop
pop
mov
xor
xor
cmp
mov
mov
movsb
mov
push
mov
push
mov
jl
mov
std
add
jge
test
sar
mov
test
jp
and
jg
mov
clc
bswap
adc
inc
imul
xor
imul
mov
in
xlat
xchg
outsb
dec
scas
mov
xchg
push
nop
jge
and
mov
pop
sub
adc
jl
mov
or
sub
mov
jg
cmpsl
cli
sub
and
call
mov
push
sti
and
adc
mov
bound
dec
mov
js
inc
or
inc
mov
test
dec
int3
daa
mov
jmp
push
and
and
mov
out
jbe
pop
mov
aam
cmpsb
or
fwait
imul
loope
rcl
and
inc
sbb
lock
or
cli
and
idivb
add
pop
mov
jle
sbb
jnp
pop
mov
sub
jl
cmp
je
inc
mov
push
int
push
mov
pusha
adcb
dec
sub
dec
mov
out
mov
imul
in
lret
xor
xchg
jle
imulb
imul
mov
cmpsb
movsb
and
jo
popa
pop
mov
dec
mov
sar
fs
mov
cmp
pop
cltd
xchg
add
frstor
es
mov
ljmp
mov
call
scas
jns
nop
stos
jno
fdivrs
je
mov
push
push
out
push
testl
mov
sub
push
pop
lods
aam
lcall
ds
ljmp
iret
cmp
push
sbb
mov
movsl
stos
jo
inc
lods
mov
sub
lret
mov
adc
push
dec
addr16
loope
xchg
mov
inc
inc
mov
pushf
and
fidivrl
sbb
mov
push
push
xchg
stos
or
jae
enter
mov
mov
xor
fcmovu
and
sbb
inc
es
pusha
mov
dec
jge
popf
stos
outsb
mov
mov
push
xchg
lahf
out
mov
je
sub
cli
daa
mov
mov
test
scas
adc
xlat
inc
inc
or
and
pop
and
xchg
xor
cltd
movl
out
jle
std
ret
dec
xchg
push
sbb
loope
cld
ds
sbb
sti
test
les
int
mov
lea
jne
jbe
and
test
xchg
mov
xchg
sub
push
sbbb
lcall
rolb
rcrl
mov
xor
xchg
insb
sub
js
add
mov
push
pop
iret
cld
mov
out
dec
jne
fadds
ret
jg
es
adc
push
les
mov
xor
dec
mov
lock
push
sbb
sbb
es
mov
movsb
add
xchg
and
pop
sub
mov
push
shrl
rcrl
mov
hlt
pop
std
cmc
icebp
bound
loop
add
mov
imul
and
dec
sub
or
adc
cld
mov
jmp
sub
mov
cmp
out
jge
in
push
sbb
pusha
pop
xchg
mov
fs
push
repz
mov
adcl
xchg
jg
fcompl
mov
pop
adc
push
push
in
aas
negb
mov
xor
and
addr16
push
inc
in
shll
sbb
sub
shrl
cmp
shl
sub
mov
in
jmp
insb
cmc
inc
sbb
pusha
aaa
scas
push
aam
cwtl
out
and
out
pop
mov
mov
sub
shll
es
out
sbb
mov
xor
cs
mov
mov
sbb
mov
xor
mov
add
pop
xor
fistpl
rcll
mov
sahf
sbb
inc
and
mov
popa
std
mov
xor
repz
loopne
enter
cmp
dec
out
mov
and
or
in
jp
ds
xchg
shlb
add
inc
inc
not
mov
fnsetpm(287
mov
push
scas
push
out
add
mov
fnstsw
push
test
inc
mov
jb
jl
stos
xor
sub
mov
mov
les
mov
aam
sti
test
mov
xchg
mov
pop
sub
xor
dec
lret
inc
jle
inc
insl
mov
imul
mov
mov
lods
cltd
and
test
jnp
movsl
sbb
sub
cmpsb
loopnew
and
jae
clc
inc
inc
int3
mov
xorl
push
les
pop
or
jo
bound
mov
xchg
mov
int
jb
out
into
cmp
fsubr
push
pushf
jns
mov
mov
aaa
push
mov
adc
mov
inc
sahf
aad
jecxz
lock
pop
mov
mov
shlb
xchg
aam
bound
testb
ja
jmp
dec
insb
jmp
mov
xchg
into
dec
nop
or
mov
imul
mov
cmpsb
push
lds
fildl
pop
arpl
test
outsl
push
xchg
clc
dec
shlb
ret
pop
xor
fiadds
mov
cmc
cmp
mov
push
pop
es
out
ljmp
pop
xchg
call
mov
mov
mov
aam
cmp
mov
pop
or
mov
divl
pop
cmp
sub
push
testb
jnp
mov
mov
lcall
adc
sbb
add
movsl
mov
data16
mov
test
mov
mov
fnstenv
imulb
data16
cli
adc
mov
jecxz
inc
pop
pushf
shrl
sub
mov
popf
or
xchg
lret
mov
sahf
dec
ret
jge
mov
adc
xor
and
mov
mov
xorl
mov
mov
mov
xor
shrb
sub
jg
shrb
pop
mov
stos
or
mov
inc
out
or
xor
mov
loop
cwtl
sub
inc
push
popa
inc
nop
mov
mov
mov
ret
sub
out
mov
mov
pop
dec
push
test
mov
and
enter
mov
inc
jnp
outsb
stos
xchg
fbstp
push
mull
sarb
in
sub
in
outsl
xchg
xor
or
repnz
xor
add
out
les
mov
daa
es
hlt
dec
cwtl
aaa
xor
inc
add
out
xor
mov
mov
add
lock
pop
sub
fstpl
cmovl
mov
test
mov
adc
sbb
mov
and
push
repnz
pop
mov
pop
xchg
mov
stc
icebp
adc
das
mov
ds
jo
mov
mov
loop
aaa
or
jle
aas
mov
stos
mov
shlb
mov
push
inc
stc
inc
inc
push
pop
mov
enter
fcoms
mov
loope
arpl
into
pop
scas
loopne
cmp
push
das
and
outsl
mov
push
enter
loopne
xchg
add
cmp
fldcw
ret
adc
or
and
ljmp
pop
data16
adc
in
lcall
in
dec
ds
pop
mov
sti
pop
mov
pushf
iret
mov
shr
sub
out
popa
shll
fsubrs
cwtl
push
mov
and
int3
mov
icebp
stos
push
mov
ja
and
fwait
repnz
jmp
mov
fldenv
inc
mov
jle
rcrb
sbb
fwait
jl
mov
ljmp
mov
mov
je
enter
push
adc
imul
loope
and
dec
add
call
mov
ss
inc
shll
repz
cmc
rorl
ss
add
jp
lods
mov
in
jbe
clc
xor
mov
sub
mov
push
addr16
lret
cltd
add
sbb
jnp
adc
ret
add
movsl
inc
loopne
xorl
sub
push
mov
sub
and
cmc
es
mov
cmpsb
mov
bound
push
mov
shll
lods
pop
inc
jno
push
or
loope
inc
mov
cmpsl
mov
jecxz
lods
fadd
xchg
mov
aam
mov
outsl
pop
imul
push
in
mov
int
imul
add
jp
lahf
movsb
lds
cmpsl
out
pop
into
jo
mov
test
cltd
pushf
das
es
xorb
imul
rorl
or
xchg
aad
call
mov
test
or
pop
movsl
bound
mov
mov
sub
and
insl
sbb
es
mov
cmp
lcall
lds
mov
in
jnp
test
jmp
cmc
mov
adc
flds
rorb
push
cmp
pop
std
xor
mov
mov
pop
pop
mov
adc
ljmp
sahf
pop
call
shr
mov
fs
mov
push
sbb
jns
lds
add
sub
jne
push
roll
test
insb
int
mov
cmp
das
ljmp
add
imul
mov
xchg
ja
mov
and
addr16
lock
xor
or
mov
jecxz
sub
pushf
insb
xor
mov
aad
repz
daa
mov
rorl
add
jmp
cmp
fwait
dec
ds
mov
mov
inc
and
je
das
pusha
hlt
ret
mov
or
adc
mov
int3
jle
add
cli
xorl
movsb
add
imul
incl
lea
or
loop
jl
shrl
shrb
out
mov
inc
sahf
sub
sar
shll
ret
xor
dec
sbb
sti
add
jg
sbb
mov
mov
jne
pop
or
mov
mov
fcoml
mov
shrl
xchg
mov
aas
lea
enter
shll
dec
out
sub
dec
mov
loopne
pop
jbe
mov
cwtl
aad
pop
jns
cmpl
mov
sahf
pop
dec
les
mov
push
cmpsb
xor
scas
daa
fidivl
lahf
fisttpll
lds
mov
sub
mov
and
lret
ss
test
jge
adc
mov
pop
sub
es
icebp
shlb
cmp
and
mov
mov
adc
mov
out
into
inc
adc
push
xor
mov
iret
mull
pusha
inc
movsl
jo
xchg
pop
gs
sbb
stc
loope
mov
adcl
mov
sub
fsubl
fisubs
pop
pop
mov
fnstcw
xchg
mov
or
mov
enter
mov
pop
or
hlt
mov
pushf
inc
out
mov
clc
ja
mov
add
push
mov
ss
pop
or
jbe
cld
outsl
daa
mov
mov
or
sbb
jo
lds
mov
mov
daa
cmp
filds
xchg
data16
aaa
push
sub
mov
sub
pusha
sub
popf
js
xchg
jge
cli
mov
arpl
out
mov
lret
push
pop
mov
pop
pushf
enter
adc
xchg
push
repz
repnz
and
mov
or
xchg
mov
aad
dec
dec
adc
mov
cs
jno
jae
sub
mov
test
mov
jo
and
idiv
mov
jl
add
mov
insb
rorl
mov
jbe
mov
mov
and
jae
out
adc
adcb
mov
mov
inc
inc
jae
jl
cltd
mov
faddl
repz
lds
mov
mov
ret
adc
enter
dec
mov
cmpsb
or
ss
inc
fiaddl
mov
std
jo
mov
or
movsl
lods
pop
jl
mov
icebp
shll
fisubrl
jbe
outsl
adc
pop
mov
or
cmpsb
mov
int
imul
jge
mov
push
jbe
mov
sbb
xchg
jo
arpl
sbb
fldenv
pushf
repz
out
sub
jns
xor
mov
jae
pop
filds
pop
call
das
and
xchg
xor
add
fdivl
bound
movsl
sti
mov
mulb
mov
or
sbb
dec
cmp
out
mov
xchg
dec
bound
imul
ss
mov
ret
movsb
dec
lea
in
fsts
dec
lods
stos
xchg
mov
aam
pop
or
and
pop
inc
test
inc
mov
enter
cmp
mov
jbe
cmp
hlt
icebp
push
cmc
sub
mov
fs
not
push
lock
inc
jo
sub
push
mov
mov
or
insb
adc
add
lcall
sahf
push
data16
jge
mov
dec
push
push
sub
sub
push
leave
add
sub
mov
jb
jo
sbb
xor
adc
mov
divb
outsl
cmpb
out
dec
mov
push
out
sub
or
sahf
push
aam
imul
pop
lods
mov
outsb
int3
frstor
rorl
jbe
mov
cmp
addr16
mov
outsb
dec
mov
push
push
into
mov
int3
shll
cmp
out
arpl
inc
xchg
sarb
rcll
sbb
outsb
cmp
cmp
pushf
and
lcall
and
inc
shll
mov
jl
ret
sti
loop
cld
mov
sahf
adc
sub
stos
subl
sarb
inc
jne
jns
jbe
fs
pop
and
adc
jmp
divl
in
stos
sub
mov
inc
sub
inc
lret
adc
std
out
outsl
dec
cmp
mov
add
lret
adc
daa
movsb
cli
testb
xor
xchg
add
mov
out
mov
roll
jle
rcrb
pop
scas
dec
mov
stc
mov
lahf
or
jl
mov
push
mov
fwait
outsb
pop
xor
movsl
push
jp
icebp
mov
fdivl
xchg
test
xor
int
in
mov
adc
stc
lret
mov
fisttpll
mov
iret
sbb
cmp
xchg
ss
and
lds
jecxz
mov
jbe
fdivl
sar
aam
fsts
xchg
inc
adc
mov
mov
jecxz
call
dec
in
push
xor
mov
mov
aad
push
mov
lds
popf
push
jnp,pn
insl
rorl
fwait
mov
ja
in
fadds
lods
jns
bound
repz
gs
leave
mov
ljmp
mov
sbbb
lods
outsb
dec
mov
dec
inc
stos
imulb
test
add
add
jp
xchg
mov
mov
cmp
pop
jo
jno
imul
dec
mov
push
push
mov
sub
push
sarb
pop
mov
xchg
mov
jnp
jmp
mov
xor
enter
mov
loopne
dec
stc
repnz
lcall
jae
xor
mov
out
push
je
add
inc
aad
sub
in
ret
mov
push
out
jle
in
cmp
mov
cmp
mov
sahf
inc
sarl
dec
sub
cltd
scas
or
addr16
incl
xchg
sub
fs
push
negb
ds
adc
push
out
push
js
mov
hlt
or
mov
push
adc
sub
mov
sbb
lods
aad
xlat
mov
jb
sub
sbbb
pop
add
push
mov
dec
imul
mov
jp
int3
mov
mov
out
xchg
ds
insb
ss
sub
andl
mov
mov
clc
iret
sti
mov
inc
push
push
push
call
mov
pop
je
mov
and
repz
pop
ss
mov
dec
mov
inc
and
mov
cli
je
repz
fnstcw
iret
push
lock
mov
adc
jb
lds
insb
in
dec
dec
mov
push
mov
rcl
rclb
testb
jle
rol
outsl
aas
sbb
test
sahf
add
jmp
xorb
mov
call
sub
adc
rorb
push
and
xchg
dec
idivb
bound
mov
sbb
jae
jo
cmp
dec
dec
lds
in
lcall
rcrl
mov
add
ret
mov
shrl
fidivl
add
inc
fsubrl
jb
mov
addr16
mov
lods
rcrb
mov
mov
mov
enter
adc
dec
ss
mov
fstl
outsl
pop
es
pop
in
mov
xor
cmc
repnz
inc
mov
and
xlat
mov
fimull
or
outsb
xchg
push
sub
test
sub
repnz
ja
mov
and
push
test
adc
movb
test
les
jb
scas
gs
rolb
addb
mov
mov
inc
add
add
stc
ret
mov
stos
sar
dec
movsb
xor
adc
int3
mov
jg
ret
sub
ss
fdivrs
jbe
cmp
mov
or
adc
push
mov
insl
out
rclb
in
les
inc
into
xchg
mov
mov
sub
jo
or
mov
imul
es
data16
fsubrl
scas
xor
or
pusha
add
sahf
push
lea
lcall
jle
inc
mov
xor
jge
mov
ret
pop
or
cmp
jae
xchg
pusha
mov
ljmp
ss
pop
cmp
mov
icebp
push
push
jp
scas
addr16
pop
and
or
dec
lret
cmc
mov
scas
push
xor
push
mov
push
ss
gs
cmp
arpl
lods
lret
lods
cmp
movsl
cmc
add
xchg
iret
xchg
pop
push
dec
gs
mov
ret
repz
mov
mov
jg
sahf
aas
cli
xor
in
lds
push
xor
xchg
sub
push
push
roll
and
cmp
jmp
ja
jae
cmp
out
push
jle
repz
sbb
jbe
jae
ljmp
cwtl
adc
daa
and
out
outsb
ret
stos
mov
or
test
jno
jge
lea
mov
push
mov
mov
mov
arpl
jae
mov
test
lret
les
enter
adc
xchg
cmp
cltd
scas
pop
jbe
mov
lea
jbe
sub
rol
xchg
scas
mov
outsl
movsb
mov
rorl
xchg
test
repnz
outsb
mov
data16
mov
mov
mov
es
xchg
xchg
mov
push
lcall
and
adc
pop
mov
cltd
inc
xchg
add
jl
lret
repz
sub
mov
mov
sub
sub
sti
lds
adc
xlat
les
cmpsl
adc
jp
repz
dec
insl
dec
cs
push
fwait
dec
ss
lods
movsl
cmpsb
mov
mov
faddp
fiaddl
test
mov
and
pop
cwtl
mov
push
imul
mov
daa
mov
divl
jo
xor
dec
pop
xchg
jbe
mov
push
std
fdiv
jbe
jns
xchg
les
fucomip
jmp
jg
aad
es
sbbl
stos
je
mov
xor
cltd
pop
roll
ret
mov
shrb
scas
notb
cmpsl
fidivrs
or
repnz
adc
mov
lds
add
xor
dec
mov
cmp
movsb
adc
aad
jbe
cmp
xchg
rcrl
mov
add
push
cmp
in
insl
stos
pop
bound
push
mov
fidivs
cli
gs
inc
lods
mov
aam
jge
push
push
fnstenv
pop
idiv
lds
add
je
sub
lds
mov
mov
cltd
dec
jne
out
lcall
mov
shll
data16
sub
daa
adc
test
jae
mov
bound
leave
adc
xor
loopne
aam
neg
js
cwtl
mov
jecxz
das
xchg
pushf
mov
mov
cmp
out
inc
dec
mov
xchg
dec
adc
cmp
or
mov
xor
xor
je
fisttps
xchg
leave
pusha
dec
mov
jmp
outsb
sarl
int3
inc
mov
subl
std
mov
xchg
pop
js
ljmp
push
push
pop
or
negb
and
lock
add
pause
outsb
ss
std
ds
mov
jg
xor
mov
mov
inc
stc
xchg
stos
pop
fwait
jl
jg
pop
xchg
test
sbb
mov
sarb
sub
and
mov
imul
pop
aas
test
sub
mov
dec
and
shrb
mov
sub
lret
into
rcll
mov
and
dec
mov
imul
int3
out
fnstsw
xchg
gs
iret
icebp
xorl
inc
mov
movsb
aaa
into
xor
mov
arpl
int
push
fstl
jnp
mov
pop
ds
pop
mov
cmp
pop
or
divl
or
adcb
rcl
imul
or
add
loop
pop
sub
and
and
shrb
xor
push
repnz
mov
jae
jnp
xor
cmp
pushf
movsb
jle
mov
push
inc
ret
mov
xor
test
and
addr16
mov
mov
cmp
push
sti
cmp
aam
std
aaa
fidivrs
jle
orl
loope
push
pushfw
lret
mov
jno
inc
push
xor
ss
cmp
mov
mov
shrl
inc
addb
dec
ja
repnz
sahf
mov
scas
loop
mov
push
push
in
cmp
mov
popf
cmp
sbb
ljmp
and
out
movsl
mov
test
or
outsl
cwtl
aaa
sbb
loopne
or
mov
mov
stc
pop
cmpsb
jne
pop
mov
adc
sub
mov
notb
adc
leave
mov
pushf
in
pop
or
mov
jbe
and
xchg
xlat
mov
cmp
arpl
mov
mov
jle
sbb
and
testb
pop
cmp
out
fildll
mov
call
sub
mov
into
iret
sbb
mov
decb
addl
adc
mov
push
mov
mov
inc
aam
push
inc
dec
vmptrst
lock
enter
std
and
mov
cmp
sbb
mov
daa
inc
cltd
int
xlat
sub
das
test
mov
notb
add
adc
dec
outsb
out
xchg
je
ss
aaa
iret
test
mov
cmp
test
pop
pop
mov
fidivs
lods
call
mov
push
mov
cmp
imul
mov
andb
fisubrs
scas
fstpt
mov
push
loopne
dec
mov
xor
sub
pop
xchg
mov
out
mov
insb
and
mov
mov
xchg
scas
daa
mov
mov
adc
mov
xchg
push
aad
out
push
mov
push
ret
mov
je
cltd
mov
jno
add
mov
das
ficoms
ljmp
xchg
dec
cmpsl
sbb
scas
mov
cld
dec
xchg
xchg
cmp
jns
out
imul
mov
dec
aaa
cwtl
into
cld
push
and
xchg
dec
dec
jbe
into
movsb
jne
xorb
push
mov
rcl
in
daa
cmp
jnp
iret
add
and
cmp
cmpsb
pop
jno
add
mov
call
imul
xchg
and
inc
mov
sub
loop
ret
neg
notl
mov
aam
push
int3
ss
mov
mov
mov
jnp
les
dec
mov
shll
cmp
mov
in
push
data16
mov
push
sbb
test
addr16
mov
adc
sbb
mov
stos
mov
mov
cmp
dec
dec
add
cmp
jecxz
rcll
movsl
call
mov
xor
fs
xor
mov
and
stos
xlat
rclb
mov
out
or
mov
jnp
outsb
int3
or
mov
cmp
or
movzbl
dec
jp
or
int3
test
jmp
jb
or
xorb
and
fwait
jbe
inc
and
mov
std
mov
mov
ret
mov
out
cld
push
or
sbb
bound
jg
xchg
mov
test
mov
cmp
pusha
pop
scas
jnp
fldcw
mov
mov
dec
cmpb
iret
rol
aaa
pop
mov
jno
mov
fisubs
sub
negl
or
adc
out
mov
jmp
fdiv
sub
gs
std
pushf
mov
cltd
mov
pop
rcrb
adc
clc
daa
mov
push
jae
add
xchg
mov
inc
fwait
mov
pop
cmp
or
push
sbb
or
lea
mov
adc
pop
dec
jbe
shl
sub
icebp
jl
jle
test
xchg
cmc
add
jge
sbb
mov
lret
pop
cltd
adc
fidivl
cli
jmp
mov
rcl
push
scas
cmp
mov
mov
jle
nop
mov
cmpsl
pop
fabs
test
and
ss
push
scas
mov
ljmp
jmp
icebp
adc
sbb
adc
push
xor
lcall
mov
addr16
inc
mov
push
mov
adcb
int3
mov
lcall
mov
leave
adc
cmpsl
lcall
cmp
ss
push
shlb
into
stos
dec
jno
mov
jnp
rorl
mov
jecxz
xor
or
add
popf
je
inc
adc
xchg
add
mov
lret
fcmovnb
pop
ljmp
enter
inc
adc
jb
lea
sbb
mov
adc
mov
push
pop
jp
jnp
int
out
mov
rcl
psubq
dec
jmp
shrb
jp
les
clc
xchg
cwtl
pop
mov
cltd
ret
stos
mov
in
adc
xchg
push
lock
jecxz
iret
imul
adc
cli
jge
jb
mov
inc
jecxz
mov
ror
ss
fdivrl
or
jmp
aaa
pop
cmc
inc
testb
mov
cmp
rorl
and
mov
add
call
shlb
and
insl
test
dec
jmp
fwait
xchg
add
pop
fidivrl
push
sahf
pop
outsl
out
mov
pop
pop
mov
lcall
imul
mov
or
mov
push
cmpsl
and
jo
mov
jg
xchg
popl
scas
mov
ret
pop
inc
fdivr
mov
jns,pt
or
push
or
and
cmc
push
mov
int3
xchg
gs
mov
std
jno
xchg
pop
bound
add
push
dec
out
dec
lcall
loop
mov
cmp
pushf
imul
lock
mov
mov
das
cmp
push
mov
bound
sub
fdivs
add
sti
mov
dec
xchg
out
rorb
mov
push
xchg
add
bnd
pop
andb
clc
mov
call
or
xchg
push
shll
mov
jmp
mov
cmpps
sbb
sub
add
add
mov
movsl
push
js
das
jae
mov
adc
adc
jmp
das
jge
inc
sbb
mov
inc
loope
pop
out
sub
adc
xchg
jb
xor
xorl
hlt
mov
inc
mov
xchg
mov
cmp
cmp
loop
lods
xchg
mov
ret
xor
jbe
jnp
xchg
test
sbb
inc
ja
fwait
insl
mov
sub
mov
xchg
mov
add
out
mov
ret
mov
push
outsb
aaa
inc
mov
mov
int
mov
mov
adc
push
mov
test
push
aam
jle
or
ret
mull
pusha
mov
jl
or
inc
dec
pop
mov
jp
sti
nop
aam
insl
mov
cmp
mov
mov
xchg
pop
push
cld
push
outsb
mov
ss
jg
jbe
repnz
mov
pop
xchg
push
pushf
push
mov
dec
xchg
mov
push
adc
stos
mov
jp
shrb
popa
in
cmpsb
mov
and
inc
inc
adc
outsl
mov
sub
call
test
pushf
dec
jne
dec
sarl
fsubrl
push
mov
les
cmp
xor
mov
sub
or
push
psrlq
push
mov
pop
sbb
rorb
fisttps
ss
pop
push
rorl
mov
add
push
pop
dec
add
hlt
dec
test
pop
icebp
sub
cwtl
loop
adc
cmp
mov
mov
push
xchg
dec
cs
vmread
int3
ds
fucompp
sbb
pop
mov
or
cmp
push
loopne
inc
orb
ljmp
adc
or
mov
cwtl
mov
xchg
rcl
fnsave
push
popa
stc
mov
xor
mov
xorl
outsl
pusha
fistpl
pop
mov
dec
push
sahf
ljmp
shll
out
leave
loopne
or
push
jnp
mov
adc
mov
in
mov
repz
pop
inc
in
mov
cmp
jno
pop
lcall
and
out
push
mov
stos
adc
movsl
test
adc
mov
inc
xor
out
jecxz
loopne
pop
sbb
popf
mov
mov
outsb
push
sbb
cld
sti
cmpb
and
xchg
enter
mov
or
jno
jnp
divb
aaa
call
adcl
jo
stc
aam
and
out
push
adc
ss
jae
lea
int
test
sbb
pop
data16
push
lret
cmpsb
mov
inc
inc
mov
mov
mov
in
mov
jecxz
repz
lds
mov
hlt
es
xor
cs
lret
jge
inc
mov
sahf
mov
mov
aam
adc
mov
push
inc
inc
lcall
loop
mov
mov
mov
sti
pop
add
adc
mov
xchg
xor
mov
mov
std
pop
inc
and
out
xor
sub
mov
push
mov
push
scas
jno,pt
loop
push
data16
mov
and
in
cli
out
pop
in
sbb
mov
mov
adc
cmpsl
clc
fs
jo
xor
stos
xor
and
mov
test
jge
inc
jns
lds
sbb
aam
xchg
mov
hlt
push
inc
aad
mov
idivl
mov
jno
divb
loop
sbb
popf
xor
cld
fldcw
fbstp
sarb
arpl
sti
xorl
mov
mov
mov
fcoms
aaa
hlt
movsb
cmp
popa
mov
push
adc
mov
stos
sarb
pop
cmpb
jno
dec
add
jl
pop
mov
dec
mov
xlat
mov
jbe
ss
push
mov
fsubl
aam
icebp
and
ret
iret
test
test
sub
push
xor
mov
mov
pop
pop
ret
dec
bound
arpl
das
xor
dec
ja
mov
mov
sbb
imul
pop
mov
shrb
mov
inc
cmc
add
repz
jae
xor
mov
loopne
lds
mov
pushf
cmp
divb
movsl
lahf
icebp
mov
dec
mov
cltd
xchg
mov
fistpl
push
je
mov
xor
mov
mov
and
shrl
dec
pusha
cmpsb
or
sti
outsb
mov
pop
push
leave
inc
mov
mov
jp
sub
mov
mov
rcpps
sahf
test
scas
jne
or
xor
out
push
imul
sar
cmpsb
nop
xchg
cli
aad
mov
mov
mov
cld
push
inc
cmp
jae
pop
sbb
pop
xor
mov
or
jne
jp
mov
xchg
push
adc
popf
rorb
adc
and
adcb
dec
sbb
sbb
gs
into
add
pop
pushf
sub
mov
pop
or
ficomps
mov
out
add
mov
gs
mov
outsl
jmp
mov
push
mov
inc
daa
in
gs
jp
xchg
aad
jle
mov
mov
pop
ds
xor
arpl
or
and
mov
push
negb
push
cmp
lods
loop
cmc
pop
xchg
and
test
inc
jbe
loope,pn
push
rcll
or
inc
jmp
andl
in
aad
lret
fbstp
sbb
leave
mov
mov
insl
and
mov
pop
cmp
xor
scas
cwtl
addl
fsts
stos
dec
hlt
aas
mov
and
jnp
xor
ss
pop
mov
lea
sub
push
mov
inc
jo
insb
ja
mov
add
xor
shll
pusha
mov
adc
add
leave
mov
mov
scas
pminub
mov
pop
mov
inc
mov
dec
ret
xor
test
xchg
sub
cmp
out
pop
pushl
popf
jb
je
push
mov
dec
arpl
or
jg
cld
xchg
mov
std
mov
stc
pop
in
inc
mov
int
xor
mov
mov
sbb
mov
and
int3
push
mov
loopne
sbb
mov
nop
jle
shll
jno
pop
test
jp
out
icebp
outsb
imul
push
das
jle
lds
loop
js
aaa
in
aas
scas
mov
inc
xor
adcl
inc
sub
icebp
sahf
lods
jmp
aad
jl
jnp
cltd
cli
xor
stos
sub
cwtl
push
sub
jg
pop
mulb
pop
lret
gs
xchg
mov
push
dec
add
xchg
pop
ss
push
enter
xor
mov
jmp
imul
fisubrl
es
outsl
pop
mov
pop
in
xchg
in
scas
xchg
cmpsb
aas
cmc
jae
cs
xchg
xchg
subl
iret
mov
test
inc
nop
pop
xchg
mov
out
inc
and
sbbl
mov
sub
mov
mov
aad
in
xchg
push
out
jmp
jne
je
inc
les
mov
inc
bound
das
mov
sahf
dec
mov
xor
xchg
out
inc
ljmp
fisttpll
jbe
ss
fdivl
fsub
lds
movsb
xchg
mov
dec
cmp
adc
pusha
adc
mov
xchg
mov
push
ljmp
jmp
xchg
imul
mov
push
push
sub
xchg
mov
cmpsb
mov
mov
add
push
setbe
mov
sub
negl
dec
scas
repz
mov
sub
out
xor
pop
aas
insb
mov
mov
push
out
dec
dec
je
jmp
and
test
or
data16
sub
mov
xchg
inc
fs
mov
jb
push
and
xchg
jns
repnz
mov
pusha
push
icebp
jmp
mov
pop
cmp
sub
dec
mov
mov
lahf
call
pop
adc
ret
adc
lds
jnp
xchg
xor
scas
aam
sarb
xchg
mov
mov
pusha
sbb
inc
outsb
mov
sbb
push
lock
jns
mov
mov
cmpl
js
or
test
push
lea
ss
mov
fs
icebp
andb
mov
sbb
pushf
in
inc
sub
stc
nop
cmp
pop
std
push
cwtl
xor
shrl
ret
mov
and
or
xor
stos
inc
insb
dec
jg
iret
and
jne
in
mov
jbe
mov
xchg
mov
push
adc
sub
mov
sahf
push
mov
cmp
imul
les
or
sub
daa
enter
mov
pop
mov
and
mov
dec
arpl
scas
and
gs
loopne
es
mul
jmp
bndldx
add
pusha
mov
cmp
daa
mov
cltd
rcr
fstl
mov
dec
out
pop
rol
adc
jbe
mov
mov
pop
inc
stos
orb
imul
mov
pop
pop
dec
push
hlt
xchg
dec
sar
mov
mov
or
cmp
es
cmc
test
testb
cs
sbb
mov
jmp
mov
js
mov
cmp
mov
inc
ds
shrb
mov
mov
jbe
mov
xchg
es
pop
fisubrs
mov
mov
mov
push
sub
mov
mov
lret
dec
push
push
lahf
aas
mov
shll
mov
ss
fnstsw
es
push
push
add
shll
mov
fnstenv
xor
in
lods
repz
push
adc
jp
in
inc
pop
in
leave
push
adc
mov
cmp
scas
sbb
dec
cmp
movsb
jbe
stos
mov
and
cmp
pushf
out
repnz
mov
in
out
pop
shlb
popf
jno
cmpb
mov
sbb
inc
add
mov
push
add
lret
xor
pop
in
fists
push
mov
xchg
inc
adc
jg
mov
stos
mov
mov
loope
inc
and
mov
jns
and
jae
lods
out
lret
lcall
dec
xor
mov
or
cmc
ds
das
pop
clc
int
rolb
insl
mov
mov
mov
sub
mov
cli
into
push
icebp
rorb
xor
imul
xor
inc
sbb
rcrl
jmp
xchg
out
sub
enter
mov
adc
lcall
jbe
add
sub
lods
inc
or
insl
add
test
mov
fcompl
movsl
test
rorl
scas
dec
outsl
adc
arpl
in
das
inc
mov
lcall
test
mov
jnp
pop
cwtl
icebp
mov
mov
popf
jns
xor
pop
xchg
mov
mov
mov
jge
sub
jns
mov
mov
pop
ds
ffreep
dec
cs
repnz
aad
and
push
mov
mov
fndisi(8087
jge
je
or
iret
sti
mov
sbb
mov
dec
mov
adc
gs
or
loope
imul
adc
mov
mov
outsb
xor
jnp
add
push
popa
insl
mov
adc
or
shlb
cmp
pop
addr16
mov
add
cmp
lret
mov
sub
ljmp
ret
jge
and
mov
ds
mov
aam
add
mov
out
div
add
add
arpl
jae
movsl
sub
sub
dec
add
repnz
cmp
movsl
popa
mov
sbb
sub
test
or
inc
shll
es
aam
wrmsr
aaa
call
cmpb
and
pushf
inc
mov
adc
xchg
movsl
jb
sub
fistpll
das
add
inc
push
adc
push
cmp
dec
mov
xor
push
lds
mulb
hlt
mov
aaa
pusha
mov
add
outsb
call
mov
in
push
les
out
xor
xadd
aam
leave
gs
dec
sub
dec
dec
out
or
cmp
out
dec
lods
in
rolb
insb
sbb
in
jnp
std
mov
out
sub
sar
pop
dec
sbb
mov
bnd
in
mov
mov
mov
cwtl
jbe
fdivl
jnp
aaa
sbb
hlt
mov
mov
push
test
pop
ds
jecxz
ror
js
mov
fs
sub
or
mov
cmp
cmp
mov
adc
inc
xor
gs
jmp
dec
shr
mov
mov
das
inc
cwtl
add
mov
shll
fs
jmp
xchg
mov
scas
lock
icebp
lods
fstl
popf
inc
cmpsb
mov
pop
inc
push
dec
stc
fwait
mov
add
xchg
mov
pop
cmp
mov
inc
push
or
fldcw
fs
insb
hlt
mov
xchg
xor
sbb
and
sbb
int
pop
cs
mov
push
adc
xchg
mov
mov
imul
xor
das
xchg
iret
mov
sbb
sti
movl
lret
push
nop
movsl
shll
fnstenv
inc
icebp
sbb
pop
xor
mov
mov
jns
je
movsl
jecxz
mov
test
mov
fnstenv
xor
aas
rorl
es
gs
cli
loopne
mov
push
push
inc
inc
inc
mov
mov
cmp
mov
lods
mov
adc
repz
mov
leave
ret
inc
sub
adc
jge
fdivl
and
out
mov
stos
addr16
cld
test
mov
repnz
sbb
test
mov
in
loop
jo
mov
cld
fiaddl
arpl
test
mov
lret
mov
mov
sbb
jno
jg
xchg
xchg
xorb
inc
mov
mov
jle
loopne
test
out
push
sbbl
ljmp
jp
pop
push
fdivr
loope
clc
loopne
sarl
mov
inc
shrb
popf
mov
inc
adc
or
mov
push
push
pop
je
out
sub
inc
xchg
test
aam
addr16
mov
push
mov
jl
mull
sbb
sub
subb
sub
fstpt
xchg
fisubl
xor
adc
in
xchg
scas
mov
push
outsl
aaa
jbe
call
insl
mov
mov
dec
aad
push
mov
popa
movsb
lods
sahf
push
mov
mov
pop
les
pop
or
push
cmpsb
cmc
mov
mov
inc
and
lds
mov
pop
cmpsl
jge
icebp
jo
gs
mov
xor
fwait
sub
mov
jnp
faddl
mov
jns
bound
fistpll
insl
divb
aad
pop
fcoms
and
jmp
mov
jno
xchg
mov
data16
ret
int
dec
loop
aam
scas
hlt
mov
xchg
push
push
or
dec
pop
xchg
imul
jbe
dec
dec
jl
mov
lea
push
mov
movsb
les
popa
testb
adc
pusha
dec
rclb
das
cmp
loop
mov
add
lahf
aad
pop
mov
push
pop
mov
call
test
es
rol
mov
jne
mov
insl
mov
ret
test
int3
mov
pop
mov
pusha
fildll
push
fs
jae
daa
mov
insb
sub
dec
dec
dec
lcall
das
pop
je
sbb
mov
leave
movsl
inc
or
data16
shrl
mov
jns
ss
inc
pop
mov
adc
sbb
stos
mov
jl
mov
mov
inc
and
arpl
lahf
mov
push
push
dec
add
xchg
mov
icebp
loop
lods
jns
fwait
inc
movzbl
jno
dec
xor
or
xlat
inc
mov
mov
or
shlb
inc
push
idivb
iret
push
fdivrp
aas
dec
mov
psubb
lds
movb
or
pop
jbe
and
mov
shl
int
inc
adc
jae
cmp
xchg
push
subb
cld
pop
jle
mov
mov
int
mov
mov
dec
pop
fdivl
xor
jnp
rorl
aas
xchg
jbe
xchg
pop
andb
rcrb
shl
fbstp
into
xor
mov
fwait
daa
dec
mov
cmp
pop
enter
daa
insb
xor
gs
and
les
mov
xor
sbb
imul
mov
cld
daa
imul
lds
fstl
mov
shlb
lahf
mov
xchg
or
es
xor
lcall
sub
mov
jl
pop
imul
ret
psllw
mov
pushf
xchg
gs
push
mov
jg
mov
xchg
mov
fidivs
jmp
mov
out
push
cmp
xor
rolb
aas
jbe
push
inc
add
sahf
test
mov
xchg
jae
loope
pushf
inc
icebp
xchg
jl
lret
push
fstl
mov
lods
mov
and
out
adcl
adc
les
mov
test
and
dec
adc
push
inc
push
scas
roll
xor
out
rcrl
mov
adcb
lods
jno
mov
mov
inc
repz
jge
or
lret
leave
ja
mov
sbb
adc
cwtl
sbb
pop
and
out
xchg
xchg
stos
cs
roll
test
jbe
sarl
repnz
sub
out
push
dec
mov
out
aaa
popf
outsl
push
sarb
lock
arpl
mov
jnp
lret
push
pop
mov
bound
in
or
nop
iret
es
jns
push
sbb
cmpb
xor
push
jbe
push
into
inc
mov
loopne
dec
xchg
out
inc
test
rcl
add
dec
mov
cltd
or
inc
bndldx
mov
test
add
mov
cld
adc
in
seto
mov
xchg
xchg
pop
movl
divl
out
inc
out
mov
jl
jecxz
cltd
daa
fidivs
mov
shrl
pusha
jmp
cli
divb
xchg
sub
adc
ja
xchg
lock
pop
add
aaa
pop
push
sbb
out
cmp
jbe
dec
nop
mov
xchg
lods
jp
jle
ljmp
ss
lcall
in
jne
cmpsb
mov
push
push
imul
cwtl
inc
mov
cmc
cmp
les
jo
push
in
pop
data16
xchg
movsb
out
and
xor
mov
lock
jb
mov
dec
out
mov
fwait
aad
mov
ss
mov
out
mov
inc
mov
mov
jo
xor
mov
mov
cmc
jg
dec
and
sbb
xchg
jnp
push
mov
rcll
mov
adc
daa
sbb
xorl
mov
pop
push
inc
je
dec
inc
mov
in
mov
lcall
addb
pop
mov
cmp
pop
mov
xor
and
sbb
jae
lret
fucomi
ljmp
and
js
xchg
xchg
fdivl
cmpb
mov
sub
ljmp
int3
test
mov
aad
jp
mov
mov
insb
imul
inc
lcall
push
inc
sbb
xor
frstor
xor
mov
adc
sbb
mov
jb
data16
stos
mov
jne
inc
ljmp
mov
adc
dec
repz
cmp
ret
add
mov
aad
mov
mov
inc
insb
aas
fwait
nop
inc
sbb
xor
mov
mov
lret
fcmovbe
pop
pop
gs
jb
lods
or
outsb
pop
mov
push
xchg
jno
int3
pushf
mov
mov
cli
dec
mov
cmc
comiss
fdivrl
mov
aam
mov
insl
xor
or
jo
shlb
sub
mul
popf
mov
loopne
sub
mov
cmp
cli
fwait
push
fadd
repz
lcall
mov
stos
es
jg
mov
mov
jne
mov
cli
jbe
mov
jnp
mov
test
mov
mov
mov
jmp
mov
jmp
sbb
mov
out
lods
and
mov
pop
mov
pushf
push
or
push
pop
addr16
fidivs
sub
mov
inc
gs
dec
imul
xor
mov
fnstenv
cmc
in
loopne
add
shlb
lock
dec
pop
fisttpll
mov
sub
dec
test
mov
mov
jg
mov
sub
in
stos
clc
pusha
lds
xchg
leave
xchg
push
xor
pop
jb
cmpsb
loope
std
icebp
xchg
mov
mov
pop
ret
aas
xchg
jg
cmp
and
jnp
int
test
adc
shl
jmp
lods
inc
sbb
mov
xchg
adc
xchg
lcall
int
and
and
xchg
daa
mov
jecxz
sarb
ja
int3
ficomps
push
adc
mov
hlt
mov
push
push
fs
mov
and
cmp
ss
jne
jmp
xchg
inc
jnp
sbb
jbe
push
jnp
addb
lods
xor
sub
repz
add
or
mov
cmp
mov
call
and
out
pop
decl
test
fisubrs
repnz
or
out
test
mov
int
popf
mov
dec
out
mov
mov
pop
lret
xchg
leavew
mov
mov
mov
dec
dec
mov
mov
sbb
push
fbstp
sbbl
and
lea
cmp
jl
stos
mov
stc
sbb
dec
jge
xor
test
dec
sbb
cmp
push
push
scas
add
inc
mov
mov
in
cmp
mov
cmpsl
jmp
out
adc
sbb
arpl
inc
dec
out
jl
mov
dec
js
lret
pushl
push
pushf
sub
sub
xchg
pop
xchg
std
lahf
jge
xor
inc
int
aaa
lcall
inc
loop
or
je
dec
dec
mov
out
test
jno
mov
xor
ficompl
repnz
mov
mulb
imul
dec
inc
out
les
shll
scas
cmpsl
sub
push
mov
lret
xchg
inc
pop
mov
mov
and
or
les
lret
mov
enter
adc
inc
lds
ja
pop
imul
mov
pushf
insl
daa
push
mov
mov
jbe
inc
mov
dec
pusha
cmp
stc
mov
mov
into
fbstp
or
loop
dec
mov
sub
lds
pop
fists
mov
shll
in
jae
std
mov
or
mov
mov
les
cli
mov
cmp
or
sbb
adc
mov
mov
and
xor
iret
push
cltd
mov
ret
push
push
lret
xchg
mov
xor
cmp
cmpb
jle
push
fimull
mov
mov
insb
scas
mov
dec
in
jmp
mov
das
rclb
vunpckhpd
data16
mov
sub
roll
pushl
popf
jb
mov
mov
js
lds
out
sub
pop
xor
jg
cmp
dec
adc
stc
rorb
add
icebp
movsl
push
loop
mov
fwait
xchg
push
call
push
xor
add
aas
xlat
jno
sub
or
outsb
cltd
mov
jp
pop
cwtl
and
fbld
or
cli
push
mov
pcmpgtd
js
push
mov
sbbb
mov
mov
lret
ret
daa
fldt
mov
inc
test
nop
push
mov
sub
and
push
cmp
jo
mov
cld
gs
mov
cli
pop
stos
outsl
jge
jg
stos
es
test
testb
aas
ss
sarl
call
mov
add
ss
ja
mov
and
into
test
pop
mov
dec
rorl
loope
jbe
ficomps
out
xchg
mov
popf
jbe
push
je
mov
pop
enter
loope
mov
fsubrs
push
mov
in
cmpsb
daa
pop
sbb
mov
jle
adc
pop
int
shl
dec
mov
or
mov
cltd
or
push
data16
mov
gs
pop
jns
and
mov
stc
loopne
inc
xchg
loop
jb
jle
jge
nop
cmpsb
mov
orb
adc
das
sbb
jmp
mov
push
fcmovne
push
hlt
sbb
mov
mov
mov
sbb
lret
sub
push
mov
xor
and
rol
mov
pop
cmp
push
and
push
stos
mov
cmpl
scas
scas
loop
mov
push
jnp
aas
sub
add
imul
test
mov
push
mov
xor
mov
add
pop
lods
out
or
push
repz
push
rol
adc
loope
pop
scas
mov
ds
sub
mov
xor
mov
sbb
mov
adc
pop
lret
add
popf
insl
test
cmp
rcr
arpl
outsl
dec
rcrb
mov
mov
hlt
cmc
inc
pop
mov
pop
enter
adc
xchg
scas
fnsave
push
mov
jbe
mov
cmp
into
push
cld
inc
les
lahf
out
testl
shll
adc
inc
and
or
pop
jns
mov
sbb
add
mov
fsubrl
in
aad
push
mov
mov
xchg
xlat
xor
adc
pusha
ss
or
sahf
adc
in
inc
adc
les
jbe
inc
cli
mov
mov
pop
iret
jmp
loopne
sub
lcall
hlt
sti
test
and
aad
mov
dec
mov
mov
aaa
xchg
aad
rcrl
dec
push
xchg
push
mov
xchg
mov
lods
add
mov
pop
xchg
outsl
lock
pop
pop
icebp
ret
out
in
lret
test
imul
or
xorl
mov
shll
out
lea
mov
push
lods
and
mov
outsb
mov
xchg
lea
dec
xor
out
std
test
jno
sbb
cmp
mov
scas
movsl
insl
xor
mov
shlb
or
jo
imul
mov
and
mov
sub
cli
pop
sahf
dec
iret
shll
popa
sub
cmp
mov
xor
shrb
xor
push
xchg
add
pop
mov
mov
cltd
adc
dec
out
mov
call
shlb
and
adc
sub
data16
xchg
pop
cli
mov
out
ret
push
divl
test
add
dec
cmp
jae
add
insb
mov
ss
cmp
rcrb
das
jle
dec
sbb
fldl
jecxz
aad
fildl
cmp
mov
xchg
adc
stos
and
pop
push
lds
ss
cmp
in
inc
mov
mov
pushf
mov
jle
cmp
xor
dec
mov
test
lahf
mov
jnp
add
push
mov
lea
xor
fidivrl
cmp
mov
mov
push
pusha
mov
test
or
aam
incb
int3
and
pop
insl
scas
mov
push
jbe
mov
int
adc
xor
or
mov
and
repz
push
nop
mov
sub
push
aad
adc
stc
push
int3
push
sbb
mov
and
loop
mov
data16
fsubrs
js
es
adc
lds
aad
push
adc
shlb
dec
fxch
hlt
fs
mov
add
mov
or
imul
jge
gs
mov
scas
adc
repnz
mov
les
cmp
mov
out
jp
lock
jns
fisttpll
mov
mov
mov
xlat
pop
xchg
mov
sub
divl
push
pop
call
test
js
inc
fists
std
hlt
inc
pop
xchg
pop
sbb
loop
frstor
lods
and
mov
inc
pop
mov
fldl
in
jmp
mov
mov
iret
mov
cmp
sbb
lock
jae
shll
cmc
mul
cmp
test
pop
negb
push
mov
jne
jns
xchg
imul
and
icebp
rorl
aas
mov
or
push
mov
and
lahf
jp
cmp
das
pop
sub
mov
lcall
mov
jnp
subb
pop
lods
mov
or
mov
fcomi
mov
mov
in
xchg
cli
cmp
mov
push
insb
mov
push
scas
cwtl
shll
les
imul
stos
andl
imul
cmp
xchg
out
cmp
popf
mov
arpl
mov
mov
sbb
mov
adc
mov
inc
stos
enter
mov
in
pop
cmpsl
mov
cmpb
xorb
aas
mov
sub
jbe
loopne
iret
sub
mov
xchg
rcl
inc
in
mov
mov
test
gs
addr16
mov
test
add
inc
ds
in
imul
fnstenv
rol
xchg
popf
adc
stos
sbb
je
mov
sub
mov
pop
mov
cltd
push
out
pop
sub
rorb
sub
cmpb
testb
sti
mov
lcall
xor
jmp
or
xchg
mov
inc
enter
mov
rorl
shrl
lods
inc
jbe
mov
insl
repz
cmpsl
lea
les
push
in
cld
imul
call
mov
mov
mov
pop
jne
fldenv
in
imul
incb
ss
inc
fcoml
push
mov
mov
push
int3
pop
fists
mov
dec
mov
mov
xchg
aas
jno
lret
int
bound
ds
pop
mov
dec
xchg
push
mov
scas
loopne
push
xchg
lock
or
mov
imul
es
sarb
lds
pop
push
aad
mov
dec
push
mov
dec
sbb
out
mov
lods
jecxz
mov
and
fnstsw
cmpsb
lea
mov
pop
clc
cmpsb
int
xchg
cmpsb
and
call
add
es
sub
insl
jno
aam
pop
adc
test
repz
and
mov
movsl
mov
sub
push
mov
xor
insb
xor
add
dec
mov
lcall
mov
jo
movsl
mov
mov
xchg
sub
lods
add
mov
lcall
das
repnz
mov
fidivs
sbb
mov
lret
pushf
shlb
add
lds
dec
mov
xchg
jl
add
push
sbb
push
xor
or
sahf
push
pusha
lret
mov
lods
dec
mov
pop
outsb
movq
push
fidivl
push
sub
cmp
cli
imul
paddq
shlb
repz
lods
sub
or
inc
mov
lock
hlt
mov
mov
sahf
xor
mov
insb
push
add
xor
sub
push
dec
mov
mulb
repz
fsub
xchg
cltd
mov
jne
inc
or
movsb
shlb
mov
jnp
aaa
in
xchg
leave
mov
data16
xor
rol
sbb
into
pop
seta
sub
ret
jg
es
pop
hlt
pop
in
add
xchg
inc
gs
andl
mov
sahf
adc
cli
mov
push
cmp
jl
lds
push
leave
fisttpll
andb
arpl
sub
stc
data16
sbb
pop
adc
pop
push
push
movsb
in
adc
pop
xchg
in
icebp
mov
dec
dec
mov
and
lods
add
jle
sub
mov
xchg
cmp
into
lds
cmp
mov
xchg
sub
mov
and
sub
adc
inc
xchg
sub
in
push
stc
mov
in
mov
or
mov
mov
add
cmpsb
dec
aas
pop
mov
daa
push
push
mov
xor
mov
mov
mov
rcrb
add
push
ja
cltd
mov
push
int
lods
insl
mov
xor
icebp
xor
mov
leave
mov
jne
divl
and
cwtl
fs
xlat
and
mov
lret
nop
inc
test
jns
shll
or
data16
push
out
xor
repz
popf
mov
mov
jecxz
fidivs
sbb
mov
mov
stos
mov
cmpb
cmp
ss
xchg
in
ficompl
test
push
add
out
add
test
sub
mov
xor
lock
inc
ss
lods
cmpsl
mov
addr16
test
jo
xor
out
mov
in
aaa
add
sbb
inc
mov
shll
xchg
ja
fidivs
xor
sahf
or
lcall
cli
cltd
arpl
daa
sub
stos
mov
call
fbld
sub
sub
fdivs
sbb
xchg
lods
mov
adc
push
iret
xchg
lods
sahf
jns
mov
cmp
push
inc
mov
mov
insl
jge
out
dec
mov
mulb
jp
jbe
lret
mov
icebp
into
fidivrl
add
sarl
jmp
dec
loope
cmpsb
mov
mov
aas
xorl
mov
or
mov
nop
pop
mov
mov
sbbb
push
subl
loopne
sbb
dec
into
fisttps
jb
aad
mov
push
sub
mov
or
cmpsb
data16
inc
ret
jge
sbb
shlb
out
mov
scas
sbb
add
or
lock
imul
cli
loope
pop
insl
add
mov
test
scas
push
mov
xchg
inc
dec
pop
mov
loope
popa
pop
ja
adc
mov
xchg
xchg
ds
mov
mov
pop
dec
mov
jmp
mov
mov
jle
pop
addr16
fidivs
test
int
lahf
jae
ss
adc
int3
mov
push
add
cmpsb
ret
inc
idivl
dec
add
mov
lret
cmp
jae
mov
jmp
dec
ficompl
mov
mov
sub
mov
scas
jmp
movsl
fwait
out
push
data16
sub
mov
sub
insl
ds
mov
push
add
adc
rcrl
mov
push
jecxz
and
fld
cmp
adc
dec
out
pop
inc
repz
test
pop
and
push
mov
cmpsb
fwait
lods
sarb
xor
mov
and
test
pusha
ds
enter
loopne
dec
mov
push
push
add
ror
mov
or
dec
cmp
jbe
jl
ud2
lds
mov
lahf
adc
pop
mov
mov
sub
dec
jo
and
mov
and
inc
mov
cmp
dec
pop
das
test
ret
ss
outsb
inc
das
sbb
mov
cmpsl
stos
push
jl
jg
mov
and
mov
mov
add
aad
int3
xchg
insb
mov
ss
sub
and
mov
test
fdivp
aad
dec
pushf
fisubrs
test
pop
jg
fbstp
fdivs
mov
dec
es
out
jmp
xor
les
ret
xor
mulb
pushf
sti
mov
mov
jle
adc
stos
pop
push
sub
fiaddl
sub
pop
pop
decl
mov
ret
mov
lret
mov
mov
inc
mov
push
or
loop
sarb
xchg
fisubl
sti
mov
aad
cmp
pop
mov
sub
fdivs
jmp
mov
stc
mov
sarb
insl
xchg
mov
mov
or
lret
add
pop
push
loope
les
xchg
shll
sub
fcoml
mov
inc
mov
out
xorl
fnstenv
mov
jg
push
out
mov
add
aad
cs
mov
mov
shll
cld
pop
inc
enter
mov
movsl
adcb
les
mov
pop
out
cwtl
mov
and
sbb
imul
mov
sbb
orb
scas
sub
mov
negl
lds
stos
adc
push
mov
pop
xchg
dec
shll
fsubrs
mov
sub
popf
push
sbb
arpl
dec
mov
xchg
pop
lea
lret
jns
movsl
pop
daa
enter
xor
xor
xchg
addb
sbb
mov
fidivs
sub
inc
dec
xchg
loopne
mov
and
negb
rcll
mov
nop
aam
jnp
jbe
es
clc
push
inc
popa
out
add
hlt
mov
mov
insb
cmp
push
sahf
pop
scas
xor
mov
fistps
scas
test
cmp
jl
dec
sbb
sub
fildl
decl
sub
popf
push
call
add
sbb
inc
out
dec
jle
dec
mov
ljmp
cmc
mull
mov
loope
and
lahf
lods
test
xchg
mov
mov
outsl
adc
jl
mov
mov
pop
push
dec
imul
scas
mov
jb
xor
mov
push
xchg
xchg
shll
stos
jge
sti
mov
ds
fcmovnbe
mov
mov
push
mov
rorb
roll
inc
fstpt
sbb
jbe
call
out
sti
mov
pop
mov
inc
mov
ds
fidivrs
inc
repz
cmpsb
dec
xchg
mov
mov
ja
and
pop
stc
aaa
mov
dec
movsb
dec
sbb
popa
idivb
sbb
xchg
sbb
cmp
pop
inc
mov
add
outsl
adc
and
mov
push
mov
ljmp
arpl
call
lds
cmpsl
mov
aam
inc
mov
push
xchg
add
sub
dec
add
mov
mov
dec
insb
mov
sub
outsb
lcall
icebp
sbb
fwait
lods
movsl
jp
pop
dec
mov
lret
sub
imul
inc
fdivrl
mov
fdivs
inc
jle,pt
ljmp
adc
cwtl
mov
lock
fdivs
push
cmp
jne
aad
xchg
mov
addr16
dec
push
push
lds
inc
push
and
mov
mov
jle
int3
or
jo
sub
xor
mov
or
sub
jp
cli
mov
jnp
cmovb
or
aam
in
aaa
loopne
fs
xchg
mull
rcl
xlat
jp
hlt
arpl
mov
mov
cmp
in
pop
push
inc
mov
and
cld
jno
popf
mov
cli
fisubl
jg
insb
jne
test
mov
jbe
daa
into
jnp
mov
xchg
lahf
nop
sbb
inc
jns
sbb
pop
shrb
cld
xchg
push
sbb
scas
enter
test
mov
movsb
pop
jno
push
dec
gs
and
in
es
inc
test
fsubrs
cwtl
cld
daa
jae
aad
xor
xorb
jp
icebp
xor
fldenv
add
test
daa
dec
pop
sub
push
mov
divb
test
lods
jmp
stos
sub
push
es
mov
pop
int
outsb
rolb
hlt
rolb
mov
cmp
xlat
jmp
mov
xor
jns
cmp
daa
imul
dec
mov
rcrb
les
xchg
subb
mov
mov
add
and
adcl
mov
push
mov
fisubrl
and
add
imul
mov
out
cmp
fnsave
rcrl
mov
sub
and
add
adc
mov
out
out
aaa
pop
popa
mov
push
jl
sbb
jle
pop
cwtl
mov
jns
push
dec
jle
mov
std
rcll
mov
mov
popf
out
mov
mov
jbe
adc
cwtl
inc
arpl
mov
outsb
lret
mov
and
jecxz
fidivrs
push
xchg
sbb
sub
mov
inc
jg
push
pop
adc
mov
aam
ljmp
push
xor
mov
sarl
mov
pushf
jp
cmp
jl
clc
gs
sub
add
iret
mov
or
popa
fisubl
push
inc
scas
scas
out
mov
mov
adc
fidivrl
sahf
add
roll
push
mov
out
push
cltd
xorl
mov
test
cmc
push
mov
mov
mov
out
xchg
or
mov
into
xor
pop
sbb
insl
sti
mov
push
pop
mov
data16
lock
dec
outsl
int3
inc
push
pop
ud1
and
andb
mov
stos
sbb
inc
push
xchg
orl
pop
and
jo
mov
mov
xor
fwait
mov
mov
dec
lea
mov
inc
fistpll
imul
push
jmp
fistpl
mov
inc
je
jp
jno
cmc
subl
pusha
jle
cmpsl
mov
inc
dec
fwait
pop
sub
xchg
mov
fmuls
shrl
cmp
scas
addr16
lret
dec
xor
lds
out
push
mov
mov
inc
push
std
jb
push
outsb
lea
sarb
aad
mov
pop
aas
scas
mov
and
and
and
je
push
mov
call
fstpl
das
xchg
jle
dec
jge
and
cmp
ljmp
mov
sub
aaa
inc
in
mov
add
xorl
hlt
sbb
ss
mov
sarb
icebp
loope
aam
inc
movsl
pop
data16
test
mov
mov
sbb
jb
mov
lea
ja
mov
mov
push
ss
jecxz
mov
pushf
pop
add
cmp
add
lahf
xchg
inc
xchg
out
dec
mov
xchg
fnstcw
pop
push
jmp
mov
or
xor
cltd
sub
in
mov
and
cmp
mov
dec
bnd
or
in
cli
data16
movlps
mov
out
jne
test
mov
cmp
outsl
mov
adc
and
in
mov
rcrb
xorl
std
mov
mov
push
mov
and
lods
cld
je
sbb
cmp
stos
mov
jne
jg
pop
jbe
rorb
mov
movsb
adc
jnp
mull
mov
fwait
adc
mov
adc
cmc
fadd
mov
dec
in
fucomi
mov
mov
cmpsb
and
pushf
movsl
subl
mov
or
pop
xchg
inc
mov
out
sub
pop
fcomp
xchg
gs
mov
and
bnd
mov
leave
push
add
pop
in
xor
cltd
dec
lock
fnsave
jne
test
xor
out
scas
pop
cmp
out
or
cmc
fistpl
rclb
jae
mov
adc
scas
out
and
iret
enter
or
loop
dec
mov
xchg
or
cmp
fs
js
adc
les
mov
ja
jmp
mov
addr16
icebp
cmp
xchg
inc
push
nop
call
in
dec
xor
mov
add
in
mov
jp
adc
cmp
mov
jge
lea
mov
sub
cltd
fistl
mov
mov
addr16
push
or
aas
cmpsb
push
mov
into
outsl
jbe
sahf
mov
mov
dec
lods
stos
int3
sub
mov
pop
mov
lahf
imul
sbb
dec
push
sbb
leave
repnz
xchg
lret
mov
lahf
mov
scas
roll
mov
dec
and
stos
mov
nop
sahf
pop
popf
push
aam
scas
arpl
shr
xor
negl
ss
mov
lret
test
enter
mov
xchg
mov
aaa
sbb
ja
pop
mov
je
mov
push
outsl
outsb
pavgb
mov
xchg
lea
jmp
shl
fiaddl
stos
mov
xor
push
pushf
pop
mov
xchg
inc
outsl
xchg
in
mov
js
addr16
inc
stos
jmp
inc
mov
les
leave
mov
hlt
mov
jecxz
xchg
jge
pop
enter
jb
inc
mov
dec
mov
cmc
pop
cmp
sub
dec
mov
jae
cmpsb
cmc
mov
adc
sti
daa
inc
nop
icebp
adc
cmp
xchg
cmp
mov
inc
jmpw
mov
lods
imul
outsl
xchg
mov
lods
dec
nop
mov
fcmovu
fcomi
cmc
xorl
push
cmp
cmpsb
int
jbe
jno
inc
addl
sub
cmpsl
xor
cmpsb
cmp
pop
mov
mov
jae
push
and
or
fcompl
xor
jns
sbb
mov
aas
fbstp
push
mov
add
mov
mov
std
movsl
pop
mov
xchg
inc
loope
mov
adc
mov
aam
fidivrl
pop
sub
pusha
mov
mov
cmp
aam
add
fisubs
aam
add
dec
xor
lock
aam
adc
xlat
add
xchg
ss
shr
es
cmp
pop
mov
sub
test
mov
jecxz
xor
or
push
aaa
cmp
call
jl
je
mov
or
mov
push
mov
adc
adc
inc
mov
popa
sub
cmp
pushf
test
inc
popf
insb
sbb
mov
xor
xchg
mov
adc
sbb
fdivs
data16
cmp
sub
cmpsb
inc
inc
mov
cld
mov
addr16
xor
call
and
jecxz
xchg
mov
pushf
fimuls
cmp
push
mov
mov
sbb
xchg
clc
push
pushw
test
aam
xor
sahf
cmpsl
xor
mov
sti
jle
pusha
xchg
push
jo
lds
lods
outsb
ss
outsl
push
jbe
les
sub
xchg
sbbl
pop
test
mov
fadds
and
mov
mov
std
xor
mov
push
cmp
ret
imul
cld
aam
xor
xor
or
jne
xchg
test
and
xchg
test
adc
push
push
mov
xchg
push
lret
roll
shll
jno
rorb
pop
fmul
or
xor
jno
mov
mov
pop
jns
and
fucomp
mov
mov
fsubrs
loopne
enter
jnp
sbb
aad
pop
lock
shl
add
into
jbe
out
test
and
push
jle
xchg
mov
fisttpll
xor
aas
ja
fcomip
pop
mov
mov
sbb
mov
or
fsts
mov
pop
dec
imul
hlt
repnz
loop
dec
rclb
push
sti
divb
cs
mulb
mov
lods
mov
int
leave
mov
cli
jb
iret
sahf
popf
or
stos
or
xchg
jge
mov
outsl
int
scas
mov
loope
test
xchg
aam
mov
inc
lds
jbe
lock
mov
clc
sarl
and
stc
mov
sbb
pop
mov
in
lahf
aas
repz
mov
adc
shl
es
insb
mov
push
pop
push
cltd
sar
aam
inc
lea
jmp
mov
mov
les
repz
and
loop
ret
out
sub
xchg
scas
mov
lds
mov
mulb
mov
loopne
stos
sbb
mov
mov
scas
adcb
mov
out
xchg
xorl
ds
jo
mulb
and
lods
mov
xchg
xor
and
test
mov
scas
xchg
push
sub
xor
lcall
adc
mov
xchg
and
mov
ss
out
sbb
xchg
xchg
push
test
jp
xchg
ss
inc
xor
mov
xchg
pusha
add
aam
pop
push
jbe
or
jle
mov
rclb
cwtl
mov
mov
orl
jge
out
pop
mov
inc
mov
shlb
cltd
lcall
dec
pushl
lret
out
push
xor
sti
scas
jecxz
les
iret
xchg
xlat
push
js
mov
adc
cld
inc
xchg
jns
adc
push
add
ja
bound
cmp
outsl
out
sbb
xor
inc
sub
cmpsb
sub
fsqrt
inc
sbb
jo
mov
mov
cs
je
pop
xchg
dec
pushf
and
jbe
fsubl
imul
add
mov
mov
aad
adc
push
cwtl
mov
dec
adc
ss
bound
sub
adc
mov
pop
xor
fwait
xor
xchg
mov
and
imul
int3
add
and
mov
out
dec
push
dec
push
movsb
mov
ja
popa
ret
xchg
cmpsl
adc
stos
jae
xchg
sub
pop
xor
pop
jno
mov
add
inc
xor
xchg
mov
mov
sbb
jg
mov
js
inc
mov
aam
mov
popa
ret
not
lds
jo
leave
jne
push
mov
mov
jae
lret
adcl
dec
push
pop
or
das
mov
loop
das
pop
out
mov
pop
iret
jle
dec
cmp
cwtl
roll
mov
lret
bound
adc
sbb
mov
push
jge
pushf
mov
jl
sub
sbb
mov
dec
xor
leave
xchg
pop
jo
ss
rcrl
mov
lods
daa
cwtl
xor
and
adc
leave
pusha
or
or
ss
mov
popf
xchg
icebp
cltd
int3
mov
cmp
cli
mov
cmpb
mov
mov
xchg
push
repz
or
fdivr
jge
sub
mov
shl
fdivl
call
enter
lods
mov
push
mov
add
cld
jp
sbb
daa
int3
mov
stos
jl
cmp
test
out
cwtl
mov
and
jnp
fisubrl
sub
mov
sti
cmp
adc
cltd
cs
mov
lock
rolb
dec
popa
into
lcall
sub
adc
mov
stos
mov
fdivs
das
adc
mov
mov
imul
or
add
xor
mov
aam
xchg
fnsave
imul
mov
pop
jne
or
push
or
or
adc
inc
roll
mov
out
in
pop
stos
mov
hlt
adc
push
rorl
pop
mov
xchg
aaa
fs
and
daa
movsl
mov
ds
movsl
mov
pop
orl
add
aad
cmp
push
xchg
sbb
adc
and
mov
jg
sbb
fwait
das
push
mov
lock
mov
or
mov
call
pop
jg
les
dec
inc
aas
push
sbb
mov
imul
ss
mov
mov
cmp
sub
lock
mulb
mov
sbb
cmp
mov
inc
repz
jae
int
fdivrl
jmp
xchg
inc
scas
mov
inc
sti
cmc
and
out
shrb
test
mov
repnz
mov
fidivl
data16
out
ds
arpl
lds
scas
mov
xorl
sar
adc
xchg
in
add
sbb
mov
push
mov
mov
mov
popf
mov
std
lea
cld
push
out
push
or
mov
test
cmpsl
mov
dec
popl
dec
sbb
sahf
mov
dec
add
pusha
mov
sbb
mov
pop
loopne
dec
mov
inc
xchg
push
mov
mov
outsb
loope
sahf
jno
pop
into
inc
test
mov
jnp
scas
cmp
sub
mov
xchg
jbe
sbb
mov
repz
fs
pop
push
clc
xor
dec
xchg
mov
js
add
test
nop
inc
jp
xchg
mov
cmp
movsb
mov
mov
cmp
xor
mov
test
jne
sbb
dec
mov
loope
fmull
sub
jo
imul
pop
mov
gs
imul
int3
mov
jns
mov
orb
test
mov
dec
jno
push
xor
sbb
pop
hlt
inc
in
aaa
sbb
mov
mov
pop
add
in
ficompl
sbb
mov
cmp
bound
dec
lds
divl
es
sarb
mov
mov
in
adc
mov
shlb
scas
out
popa
pop
sub
mov
xor
or
nop
xchg
ljmp
mov
call
mov
iret
rclb
mov
xchg
dec
dec
roll
inc
dec
ss
mov
not
outsb
push
adc
push
rcrl
mov
mov
push
mov
mov
fldcw
lds
ret
hlt
negb
jg
clc
sbb
lea
movsl
jbe
andl
adc
push
jle
jmp
cwtl
inc
mov
addr16
insl
lret
ret
imul
dec
mov
jecxz
dec
mov
leave
cmp
cmpsl
rcrb
inc
lods
or
push
mov
js
fwait
iret
lret
sahf
movsl
mov
xor
cs
xlat
sub
mov
or
jno
mov
push
les
es
ja
shl
sub
sar
lods
xlat
mov
mov
pop
inc
js
jmp
test
into
lods
cmp
mov
jne
cmp
shlb
mov
les
shlb
popa
std
divb
jae
cmp
pop
inc
sbb
cli
std
stos
mov
pusha
jg
repnz
jne
test
jbe
cmc
push
int3
jnp
mov
xchg
mov
dec
test
das
sub
xorb
xchg
mov
sub
into
xorl
fisubrs
scas
repz
mov
jne
ss
out
mov
jns
fcoms
push
pop
mov
xor
sub
mov
das
std
lock
repnz
xchg
mov
cmp
fwait
mov
enter
fidivrl
stos
mov
mov
in
mov
jge
pop
les
fidivl
or
add
lock
mov
sarl
ss
mov
dec
lret
jbe
cmp
scas
scas
js
mov
loopne,pn
sub
out
data16
mov
pop
jmp
mov
or
repz
mov
cmp
mov
xchg
mov
and
je
shl
stos
and
pop
bnd
push
mov
out
mov
ficoms
push
cmpl
xlat
jbe
pop
cmp
ds
loope
dec
push
xor
repnz
fnstenv
push
movsb
and
xchg
inc
pop
gs
ja
stc
adc
rolb
push
mov
es
push
lea
add
cmp
icebp
scas
mov
xor
shlb
call
cmp
popf
rcl
mov
repnz
sbb
and
popf
gs
lock
stc
sbb
dec
mov
adc
outsb
mov
pop
push
adc
xchg
xchg
insl
sbb
data16
mov
jg
mov
shrb
push
pop
rolb
lods
aaa
push
and
cmp
cld
xor
pop
loope
cmp
test
icebp
mov
mov
cmp
sbb
push
add
cmp
mov
sbb
mov
cmc
sahf
aad
sub
mov
adc
and
jge
in
out
sahf
inc
enter
test
mov
cltd
mov
nop
das
sbb
lahf
cmp
sub
cmc
xchg
ja
push
sarl
push
cltd
mov
inc
aaa
xchg
mov
adc
add
lcall
insl
jbe
jbe
jne
dec
ficoms
dec
lret
lods
sbb
mov
add
jns
outsl
test
dec
pop
pop
mov
movsl
in
ret
fdivp
lods
fnsave
loope
orl
rcll
jo
sub
pop
test
fbstp
and
xchg
fsubl
push
test
fists
pop
mov
dec
imul
call
loop
xor
xchg
add
fldenv
or
pop
mov
jg
jae
push
dec
xchg
mov
std
scas
jge
mov
add
imul
sbb
ss
cmp
cmpsl
mov
mov
stc
cmpsb
shlb
add
popa
mov
add
fldl
jne
push
idivb
pop
sub
mov
lcall
xor
ljmp
push
sub
xor
rcrb
stos
mov
mov
in
aam
jbe
push
jb
cmp
add
dec
and
inc
test
push
lds
aam
jbe
daa
insb
or
mov
dec
mov
mov
dec
das
ss
sbb
adc
xchg
outsb
mov
mov
lds
pop
xchg
push
jge
dec
addr16
push
sbb
inc
xor
mov
sbb
mov
pushf
addr16
dec
adc
stos
dec
mov
popa
lahf
ss
sub
mov
arpl
push
xor
mov
repnz
mov
iret
and
mov
xlat
inc
pop
xor
mov
sub
or
les
pushf
int3
lea
inc
cli
mov
push
add
test
test
cmp
and
dec
sti
dec
inc
mov
push
push
xlat
std
lods
ret
push
stos
mov
ret
mov
orb
mov
push
mov
fisubrl
test
xchg
xchg
cmp
sub
jbe
adc
pop
xchg
mov
jge
adc
inc
xorb
pop
sarb
es
cmp
mov
xor
push
rcrl
inc
ss
push
arpl
mov
out
fsubs
stos
outsb
dec
mov
mov
jmp
mov
insl
mov
add
mov
daa
cmpsb
test
fnstsw
popa
mov
mov
mov
mov
stc
dec
mov
mov
pop
roll
or
or
fcmovnbe
sbb
mov
loope
pop
enter
insb
aas
test
xchg
mov
push
mov
int
mov
mov
sbb
jp
outsb
test
xchg
ljmp
sbb
iret
inc
cwtl
pushf
cmp
adc
xchg
stos
imul
xlat
push
xchg
loope
jl
mov
sbb
hlt
push
fmulp
mov
dec
imul
lds
jnp
push
adc
inc
push
xor
ja
mov
cmp
rcrl
mov
stc
xor
push
or
add
mov
xor
mov
sbb
leave
fsub
jmp
scas
adc
inc
cwtl
imul
jae
inc
inc
mov
data16
test
inc
repnz
arpl
jl
mov
mov
pop
jmp
fs
cmp
rorb
arpl
test
push
mov
lret
push
pop
outsl
sbb
fistl
mov
jbe
pop
mov
add
mov
imul
mov
and
push
lret
daa
out
loopne
stos
and
lea
xorb
dec
sbb
mov
test
mov
jo
scas
clc
les
add
inc
push
sub
mov
dec
mov
push
dec
out
mov
push
mov
aas
jo
mov
inc
jp
sahf
mov
or
inc
push
imul
mov
int3
pop
sahf
sub
push
mov
mov
xor
sar
dec
bound
les
add
daa
aaa
push
sub
movsb
mov
push
dec
cltd
lret
pop
mov
lods
pop
mov
mov
dec
push
mov
pop
push
outsl
pop
fwait
mov
pop
out
xchg
fstl
mov
cmpsb
cmp
imul
xchg
das
cmpl
scas
pushf
mov
leave
pop
stc
pop
test
adc
mov
cmpl
dec
mov
test
dec
icebp
mov
push
aam
aad
aas
loop
push
imul
loop
in
cmp
mov
add
pop
xor
into
mov
pop
mov
scas
mov
and
insb
or
hlt
mov
and
testb
iret
mov
mov
addl
dec
dec
in
sub
popa
mov
xor
stos
inc
lods
xchg
mov
lods
dec
sbbl
jge
mov
ja
cmp
repz
jo
popa
ljmp
push
or
mov
sub
sar
add
mov
out
mov
mov
loope
push
mov
mov
negl
fwait
sub
push
sub
mov
insb
dec
cmc
pop
dec
mov
mov
das
in
adc
cld
std
movsl
mov
mov
mov
add
sbb
movsb
pushf
jb
test
mov
xor
mov
gs
add
sarb
mov
jl
das
lahf
push
mov
dec
out
rcll
push
lock
fstl
xor
adc
insb
and
push
adc
arpl
shrl
mov
push
adc
push
std
shlb
push
cli
ret
jle
jl
dec
xchg
outsl
test
bound
loopne
adcb
fs
mov
test
mov
leave
mov
ljmp
std
sub
jnp
sub
pop
ret
subl
sbb
pop
mov
fldcw
mov
lods
jbe
loop
jnp
push
mov
xchg
loope
dec
adc
pop
mov
shlb
inc
mov
aas
xor
shll
jge
hlt
cmpsl
or
gs
out
mov
and
es
js
xor
les
xor
xor
jge
sbb
arpl
and
jle
pop
shll
ss
dec
stc
fdivrp
dec
mov
divl
enter
or
aad
xor
mov
jl
mov
push
div
mov
jbe
loop
mov
les
and
loope
int
mov
cs
roll
lds
push
mov
iret
jp
jns
repnz
mov
inc
jo
adc
lret
mov
pop
and
jl
loope
push
enter
gs
mov
mov
dec
mov
in
sub
add
sbb
js
enter
jo
aas
iret
out
push
xor
xchg
icebp
dec
mov
mov
loop
sarl
popa
xchg
mov
xorb
sub
mov
adc
push
out
mov
pusha
leave
sub
negb
dec
stos
cmpsb
scas
enter
cwtl
cld
in
and
jge
in
stos
andb
mov
xchg
shl
mov
push
xor
mov
mov
sbbb
icebp
adc
aaa
jne
mov
jae
mov
lret
mov
data16
mov
sarb
sub
xchg
mov
push
push
mov
dec
lret
data16
mov
loopne
push
in
test
shll
ficomps
push
enter
mov
clc
xlat
jle
mov
call
jmp
mov
mov
je
mov
jecxz
mov
jg
mov
xchg
mov
adc
lret
jmp
das
sahf
loop
std
mov
mov
dec
mov
subl
decl
loopne
cmc
shlb
mov
sti
lret
ret
mov
and
lea
insl
mov
pop
xchg
jbe
dec
push
mov
lret
sbb
and
mov
or
outsl
push
mov
push
adc
push
lods
imul
mov
fcomps
lds
push
mov
sbb
add
pop
mov
sub
lods
mov
loop
movsl
aam
mov
xchg
filds
mov
stos
out
aad
push
and
fildl
faddp
je
xlat
int
repnz
and
les
pop
mov
mov
mov
adc
les
mov
das
push
push
repnz
stos
or
mov
mov
mov
dec
movsb
imul
jg
test
push
cs
test
sbb
pop
and
xchg
mov
and
les
sbb
ss
and
call
xchg
jo
cmp
dec
ret
aam
cli
push
mov
je
ret
test
cmp
sub
push
jecxz
repz
jl
push
insb
jge
dec
mov
xchg
negb
mov
inc
xlat
imul
sub
adc
call
jp
jb
outsl
mov
icebp
mov
or
sarl
push
jbe
adc
xor
mov
das
stos
dec
inc
stc
lahf
mov
rol
mov
xchg
adc
in
mov
xor
aam
xor
shl
pop
xlat
outsb
dec
push
pusha
mov
xchg
adc
and
mov
push
cmp
add
test
ljmp
pusha
jbe
test
aam
jno
jns
ds
outsb
and
mov
inc
popa
sub
mov
out
push
mov
pop
icebp
cld
xchg
sbb
subl
enter
cmp
test
jnp
aam
fs
js
adc
push
or
dec
popa
vandnpd
jo
xor
rolb
inc
mov
sub
add
jb
scas
cmpsb
fmuls
pop
gs
mov
cli
jbe
mov
cltd
idivb
add
xchg
xor
shrb
lock
xchg
rolb
push
mov
xchg
mov
outsb
jge
stc
insl
xchg
mov
pop
inc
cwtl
pop
mov
mov
push
mov
push
out
pop
aaa
mov
hlt
mov
jno
xor
or
popf
and
faddl
xor
xchg
pop
hlt
adc
fistl
mov
mov
lods
mov
mov
enter
pop
sbb
pop
add
xchg
mov
cmp
andl
negb
mov
negl
mov
imul
ficomps
insb
outsb
inc
rcrl
mov
xchg
repz
inc
shrl
mov
xor
lods
fwait
mov
cmp
fisubl
sarl
and
mov
subb
push
pop
rorb
lock
xor
dec
sbb
fidivl
movsl
scas
jg
mov
cwtl
cltd
fsubs
out
mov
stos
dec
push
jbe
mov
les
rcrl
xor
ret
popf
les
push
ds
adc
mov
scas
mov
mov
lret
nopl
mov
enter
adc
xchg
pop
cmp
push
call
dec
sbb
mov
cmp
push
stc
cmp
nop
aas
mov
and
loop
mov
inc
mov
dec
xor
mov
dec
jbe
aaa
inc
lock
add
push
mov
sbb
in
mov
mov
imulb
sbb
adc
fwait
addr16
push
and
inc
out
and
cltd
ljmp
dec
incl
mov
sub
and
outsl
std
mov
notb
sti
push
icebp
mov
adc
and
push
jno
sbb
aaa
add
cmpsl
stos
inc
push
mov
insl
xor
mov
pslld
int3
lods
loope
mov
dec
fidivl
lcall
pop
adc
das
in
shlb
sbb
adc
sbbl
aas
cmp
jo
das
pop
loope
sub
mov
jg
and
push
fdivl
xor
or
mov
test
cmp
mov
lret
out
push
lahf
andb
je
out
jno
divl
inc
pop
lahf
das
mov
pop
dec
xchg
addb
cs
cmp
jbe
sahf
or
repnz
lcall
sti
mov
dec
dec
jnp
mov
vandps
push
arpl
mov
dec
fsubr
and
outsb
outsl
push
adc
out
mov
xchg
cwtl
mov
push
into
mov
cmp
pushf
or
mov
lcall
mov
lods
repnz
addr16
pop
mov
mov
loop
jbe
sbb
push
aam
mov
mov
or
ret
sahf
test
and
sub
xor
ret
sarb
dec
mov
adc
das
xor
imul
jb
mov
es
sub
jecxz
ss
push
adc
mov
stos
add
in
xor
loop
xchg
mov
into
mov
jecxz
jne
pushf
lock
mov
cmp
movsl
adc
into
mov
lahf
pop
xchg
mov
xchg
mov
fcoml
fidivl
int
pop
and
push
and
cmp
dec
pusha
dec
push
mov
or
pop
pmuludq
ss
push
mov
fnstenv
push
les
js
or
inc
pop
cmp
stos
fs
jmp
shlb
flds
into
std
sub
push
sbb
xlat
mov
repz
sub
aas
mov
add
ds
dec
jbe
sarb
daa
les
stos
xor
test
rolb
stos
mov
push
into
insl
cwtl
divb
sub
sti
mov
or
lock
fimuls
sti
es
mov
mov
les
add
push
nop
leave
xor
mov
daa
sub
or
mov
xor
fldl
push
push
fwait
mov
mov
cmp
or
and
mov
popa
xchg
xor
in
mov
testb
les
scas
loop
jbe
mov
and
je
inc
cs
mov
xor
icebp
cmpsl
or
mov
call
sbb
sahf
sub
in
mov
scas
mov
pop
xor
dec
mov
inc
push
notl
mov
int3
dec
data16
jae
mov
xchg
fdivl
mov
mov
das
int3
mov
xchg
mov
xchg
jl
push
xor
sbb
outsb
ja
mov
in
xchg
stc
mov
mov
ja
xchg
in
je
arpl
leave
mul
dec
sbb
push
xorl
and
es
mov
ds
adc
test
mov
nop
repnz
inc
mov
add
xchg
popf
popa
and
mov
cmp
add
push
mov
lret
or
cmc
enter
adc
xchg
repz
push
mov
insb
jecxz
mov
out
je
mov
adc
lods
mov
add
xor
out
jnp
out
hlt
sub
jne
cli
scas
call
mov
clc
ss
addr16
inc
cmpsl
stos
mov
mov
popf
mov
push
mov
mov
adc
sub
jge
ds
sahf
fcoms
mov
jl
pop
push
cltd
stc
shl
or
stc
or
jnp
push
sub
push
xor
mov
fsubr
mov
mov
xchg
sbbb
add
mov
cmp
inc
cmp
mov
lret
adc
and
push
rorb
test
out
outsl
test
or
cwtl
cmpsb
dec
mov
js
pop
insl
jae,pt
addl
xor
push
stos
jno
bound
push
pop
push
adc
lcall
xchg
ffreep
mov
dec
lret
push
xor
jo
lret
mov
push
cmp
inc
fistl
sbb
mov
push
dec
xchg
mov
pop
mov
push
mov
dec
xchg
ret
out
lods
outsb
popf
xchg
xchg
lock
jae
mov
inc
mov
sbbl
and
pop
mov
pop
rorl
mov
and
movsb
xor
mov
pop
mov
adc
xchg
rcl
or
sti
pop
pop
icebp
mov
add
addb
pop
popf
pop
fucomp
int3
mov
or
add
push
pusha
mov
mov
xchg
mov
push
mov
bound
ret
test
pop
add
imul
push
pop
pop
cmc
jae
lret
insb
adc
into
mov
lcall
mov
sbb
movsl
push
in
iret
orw
add
dec
insb
inc
ret
jno
xchg
sub
xor
mov
int3
ds
mov
mov
jmp
in
and
dec
pop
push
fs
sarl
mov
fwait
xacquire
cltd
xor
mov
and
enter
mov
not
outsb
cwtl
sti
je
xchg
int3
inc
push
data16
in
movzbl
dec
pop
js
adc
push
jmp
cltd
cmpsl
jle
jbe
cwtl
fs
loopne
and
sub
shrb
divl
in
nop
sbb
sbb
xlat
push
xchg
imul
mov
push
sbb
ja,pt
ss
test
loope
pop
jne
out
cli
jbe
jl
cmp
xchg
lret
icebp
adc
mov
adcb
mov
shlb
dec
in
rcr
mov
jns
aam
xchg
sub
inc
call
adc
xor
out
mov
push
push
fdivs
inc
gs
or
xchg
jmp
inc
push
mov
pop
push
adc
mov
adc
loopne
add
xchg
jge
sbbl
mov
mov
mov
xchg
stc
mov
or
mov
pop
lods
ljmp
insl
scas
aad
mov
xor
sub
sub
cs
mov
jns
push
int
icebp
add
fsts
mov
xchg
mov
jbe
mov
iret
pop
mov
cmp
lea
fldl
lret
xor
and
mov
xorb
sbb
ret
stos
in
dec
mov
ficoms
push
xor
jmp
mov
movsl
mov
xchg
mov
push
ror
xor
ss
or
sbb
rorl
roll
xchg
mov
notb
stc
mov
fisubrs
lods
mov
ss
repz
movsb
mov
pop
leave
sbb
outsl
mov
lock
in
mov
loope
rcll
out
cmp
test
cmc
sbb
ss
or
mov
fsubs
mov
pop
and
pop
lods
cltd
aas
mov
sub
mov
lret
pusha
mov
dec
fs
dec
jns
adc
mov
sbb
mov
cmpsb
mov
sahf
fidivl
mov
daa
fistps
loopne
sub
lea
push
in
sbb
xchg
jp
sub
sahf
iret
xor
les
into
fildl
subb
cltd
in
mov
jo
push
dec
push
mov
fwait
push
pusha
adc
mov
jge
fmull
sahf
push
out
sub
pop
push
jl
pop
lock
sub
xor
mov
jp
push
daa
shrl
mov
push
fdivp
lods
push
divb
pop
dec
cmp
mov
pop
adcb
adc
inc
inc
sub
mov
insl
mov
fisttpll
imul
lods
addr16
mov
xor
xchg
cmp
adc
cmp
add
mov
jle
cmpsb
movsl
inc
mov
mov
push
pop
cmp
lds
pop
mov
cmpsl
in
ds
jo
and
addb
decb
imul
fdivl
mov
mov
mov
data16
fildll
cmp
lahf
or
push
mov
pop
leave
pop
je
jecxz
fs
std
cmp
pop
int
mov
mov
rolb
ret
lock
or
adc
imul
xchg
into
dec
mov
xor
push
mov
push
sbb
cli
dec
push
mov
movsb
xchg
outsb
add
mov
in
out
shl
sub
mov
sti
stos
cmp
mov
push
add
dec
jnp
mov
mov
lods
push
leave
ljmp
push
dec
call
je
rcll
mov
movsl
les
jg
pop
push
inc
ret
xchg
mov
clc
sub
add
aas
rolb
mov
sti
push
adc
ret
jae
mov
adc
loopne
aas
mov
or
leave
add
shll
inc
in
mov
fdivl
sub
test
xchg
and
addr16
clc
out
xor
cmc
sbb
sub
push
cmp
sahf
in
div
mov
cmp
mov
flds
mov
xor
xchg
xchg
lock
jbe
add
stc
or
xor
xchg
mov
mov
adc
or
mov
clc
add
push
pop
xor
scas
rcr
int3
or
test
mov
mov
js
push
stc
test
scas
pop
or
fsub
and
es
mov
mov
nop
rclb
mov
jge
push
adc
call
dec
cld
test
loop
mov
sarb
jae
fisubrl
jl
jns
xchg
out
cwtl
jnp
mov
mov
adc
push
lahf
xlat
sahf
push
mov
shlb
daa
in
xchg
outsl
mov
into
jecxz
add
jnp
daa
sub
mov
lds
jp
pop
js
mov
out
xchg
cmpsl
push
fadds
mov
gs
jo
es
jge
shr
or
imul
xor
inc
mov
and
test
fnsave
dec
movsb
and
pop
testl
icebp
or
out
mov
or
xor
push
sbb
push
adc
and
jnp
icebp
xlat
stc
xor
mov
or
mov
pop
dec
repnz
cs
fs
adc
push
scas
mov
inc
mov
mov
iret
push
pop
lock
arpl
stos
xchg
mov
lret
jbe
push
cli
pop
ss
xchg
sub
add
pop
cld
or
push
pop
aaa
insl
mov
call
mov
test
mov
mov
lret
push
xor
push
mov
cmpsl
mov
les
adc
cmp
cli
out
jne
sbb
loope
dec
divb
jb
addb
fcomps
cmp
lds
out
leave
addr16
imul
dec
bnd
mov
or
mov
test
mov
sbb
push
outsb
xacquire
adc
pop
cltd
inc
xchg
repz
cmpsl
out
into
arpl
stos
jecxz
sbb
xor
mov
lret
mov
inc
push
cmp
inc
adc
xchg
sub
cmpsl
sbb
aam
lds
sbb
push
ds
loopne
mov
dec
loope
adc
icebp
cs
jb
ljmp
fidivrl
and
adc
and
push
mov
mov
xchg
xchg
mov
lahf
dec
cmpsl
push
mull
and
adc
movsw
mov
out
fistpl
inc
push
xchg
adc
cltd
pop
mov
stos
sub
ds
imul
adc
mulb
adc
inc
xchg
loopne
xchg
add
cld
mov
aam
jbe
inc
pop
mov
insl
lds
push
dec
flds
or
lods
mov
push
les
mov
repnz
int
call
xchg
cmpsb
add
and
mov
ja
inc
xor
mov
aam
jle
cmc
mov
cmp
inc
hlt
mov
and
pushf
sbb
mov
loope
and
fbstp
jge
aad
sub
fistpl
mov
je
iret
das
jno
movsl
mov
bound
aaa
mov
mov
adc
jmp
fistpll
xchg
pushw
bound
cmp
push
imul
jecxz
dec
icebp
or
xor
sbb
movsb
push
mov
mov
push
pop
mull
inc
popa
cmp
mov
xchg
ds
shlb
mov
mov
pop
or
nop
cld
gs
sbb
pop
mov
mov
mov
mov
out
mov
dec
es
mov
push
cs
insb
push
mov
cli
ret
mov
incl
cld
sbb
sub
iret
add
add
arpl
dec
mov
out
inc
fdiv
das
cmpb
movsl
shrd
mov
push
sub
mov
inc
mov
push
mov
sbb
jne
mov
sbb
and
test
inc
pushf
jns
mov
cmp
fnsave
and
or
and
divl
mov
fwait
add
movsb
xor
shll
and
xlat
mov
fnstenv
mov
cmpl
mov
int3
fucomp
cmc
inc
add
ss
cwtl
pop
mov
setg
js
lds
addr16
pop
or
test
mov
shlb
popf
sbb
nop
mov
movsl
adc
cmpsl
popa
jae
mov
mov
repnz
mov
and
sbb
aam
push
jg
mov
leave
jne
addr16
jge
sub
mov
adc
dec
xor
repnz
xchg
hlt
mov
rcrb
in
push
test
cmp
and
sub
pop
cli
or
add
mov
mov
sbb
daa
xlat
mov
mov
aam
mov
add
jle
daa
mov
sbb
add
mov
add
mov
pop
jp
fyl2xp1
mov
xor
pop
mov
xchg
sub
fcmovbe
jb
shll
test
xor
out
xlat
hlt
sub
add
shlb
lea
mov
xor
push
jge,pn
mov
adc
lock
mov
cld
or
iret
flds
cmp
mov
inc
dec
sbb
xchg
push
out
sbb
and
xchg
sbb
xchg
xlat
mov
pop
push
jns
push
mov
sarl
dec
xchg
push
add
or
mov
cli
push
cmp
pop
push
xor
sbb
push
sarl
inc
inc
int3
aad
mov
ficompl
xorb
add
lods
push
push
rep
mov
fwait
in
cmp
push
arpl
scas
pop
enter
fstpt
and
out
cs
stos
stc
out
test
std
cmp
mov
loope
xchg
mov
in
mov
add
mov
mov
push
sbb
inc
ss
xchg
mov
ret
loop
enter
cltd
adc
les
outsl
in
mov
mov
divl
xor
pop
and
loopne
jmp
mov
lds
dec
lods
fmuls
test
ljmp
mov
ss
add
inc
cmp
stc
mov
sub
sbbb
push
ss
dec
mov
cwtl
adc
adc
jge
mov
lret
add
scas
das
jl
mov
test
es
sub
push
inc
jmp
into
cmp
mov
dec
cmc
jmp
div
shlb
mov
adc
out
add
ud1
jmp
mov
adc
insl
xor
adc
dec
sti
cmp
ja
in
add
aad
fimull
movsl
outsl
test
imul
cmpsb
pop
inc
inc
imul
jge
xorl
data16
jo
jns
pop
jle
cltd
inc
sbb
mov
cmp
adc
insl
mov
rcr
les
inc
cmp
mov
xor
mov
mov
adc
add
sti
sub
mov
push
mov
inc
scas
sbb
adc
imul
loop
push
dec
sub
aam
mov
jnp
in
mov
iret
sub
ljmp
sub
fcoms
lods
mov
mov
jle
insb
shr
mov
push
cmp
mov
nop
xor
mov
sub
or
lods
mov
mov
call
mov
adc
mov
jmp
out
test
mov
ret
mov
inc
add
add
sub
mov
shrl
mov
fdivp
inc
dec
fstpl
mov
das
aaa
std
inc
sbb
out
mov
xchg
ja
sub
jne
mov
jns
adc
les
stos
fimuls
xor
test
cmp
and
mov
jecxz
fcompl
cld
xlat
lds
cmp
push
dec
ds
sub
xchg
xor
outsb
fwait
pop
inc
xor
out
and
sub
adc
mov
xchg
shlb
imul
adc
jp
or
in
sub
dec
inc
sbb
shrl
in
insb
and
cli
xor
scas
pop
mov
push
mov
jo
push
data16
clc
mov
jae
hlt
and
nop
ss
lret
pop
mov
fcmovnb
jno
sbb
xchg
mov
aas
sbb
mov
js
sbb
lods
pop
jne
sub
pushf
jnp
nop
gs
mov
jp
adc
mov
adc
in
adc
fnsave
leave
jbe
sub
mov
imul
out
add
push
fwait
addl
or
mov
les
push
or
or
bound
xor
aam
mov
fnstsw
mov
add
mov
fdivr
cmp
enter
cwtl
dec
pop
xchg
loop
or
lods
es
pop
jp
pop
mov
or
shl
mov
shl
loop
mov
adc
and
push
xchg
int
rcrl
adc
outsl
rorb
jbe
mov
mov
clc
sarb
fs
cmpsl
mov
lret
in
gs
mov
js
loope
lea
lds
stos
or
push
mov
jmp
and
mov
add
mov
roll
cltd
insl
subl
mov
xor
xor
mov
cmp
cmp
gs
mov
shrl
subb
lcall
je
repz
mov
in
add
leave
add
xchg
jnp
scas
imul
mov
and
rolb
stos
sub
stc
test
mov
pop
jmp
shlb
mov
cmp
mov
fisttps
cmpsb
mov
lret
jbe
xor
xor
lock
adc
pop
xchg
mov
int
adcb
pop
mov
push
insb
arpl
loopne
push
les
lea
push
out
addr16
push
shll
jo
push
test
jp
fimuls
clc
dec
bnd
and
les
sbb
mov
mov
mov
xchg
xor
mov
xor
adc
rol
out
les
jl
divl
loopne
pushl
add
out
mov
fstpt
sti
hlt
ret
fcmovb
adc
mov
xchg
ds
add
rolb
xchg
inc
add
out
fldt
mov
pushf
std
mov
js
popa
fcmovbe
xchg
adc
ds
repz
idivb
int3
imul
mov
inc
stc
jp
add
sub
andb
negb
pop
jge
push
fisubs
stc
outsb
fadd
mov
lods
ss
scas
mov
lcall
repz
push
ss
fldt
insb
je
loope
leave
jno
jbe
bound
mov
pop
adc
mov
dec
xlat
mov
in
cmp
in
imul
ja
dec
mov
inc
adc
mov
out
popf
push
stos
jmp
dec
mov
inc
mov
popa
mov
jo
adc
push
xchg
aad
rcl
add
mov
dec
hlt
push
pop
push
cmp
xchg
lcall
fwait
nop
mov
call
rclb
repnz
jbe
dec
aam
mov
jge
outsl
or
mov
cltd
mov
loop
add
xchg
inc
cmp
insb
mov
mov
jg
push
add
bound
sbb
test
sub
movb
adc
jb
ds
addr16
fistl
fidivrs
push
mov
xchg
pushf
jg
cltd
cmp
fucomi
xchg
xor
mov
lahf
sub
dec
mov
shll
mov
push
repz
out
mov
xor
pop
adc
push
cmpsb
lods
xlat
mov
mov
mov
outsb
test
mov
sub
mov
sub
cltd
mov
prefetch
or
inc
mov
test
jae
movb
sahf
dec
fs
and
cmc
lods
shlb
dec
mov
nop
jmp
jbe
push
mov
pop
xchg
ret
fsubs
dec
in
mov
push
lock
pop
or
and
mov
jbe
dec
cli
jnp
into
aam
xchg
push
mov
adc
mov
xorb
sahf
imul
incl
in
iret
cmp
xchg
xor
scas
sub
movsl
enter
mov
xchg
mov
mov
mov
es
pop
jmp
sub
pop
je
add
rolb
sahf
lock
sarl
das
idivb
out
js
in
adc
and
and
jns
pusha
shlb
sbb
mov
xor
lock
push
es
jmp
enter
mov
fisubs
inc
test
inc
repz
mov
mov
inc
mov
mov
mov
mov
sti
push
sarl
ja
xor
mov
aaa
xlat
xchg
jecxz
jo
out
dec
stos
loope
adc
aas
xchg
sub
shrb
mov
inc
stos
aad
mov
cmp
mov
mov
and
push
cmp
aas
mov
mov
mov
cmp
cmp
test
iret
jbe
insl
pop
inc
mov
push
xchg
xorb
add
and
mov
ret
aas
sbb
push
jmp
mov
scas
adc
mov
push
out
jno
stos
repz
xor
mov
jge
bnd
push
xor
xchg
popf
pop
arpl
cwtl
icebp
imul
out
mov
outsl
push
mov
daa
mov
add
xchg
movsb
cmp
xchg
cli
insb
lret
rcl
dec
mov
adc
mov
pop
push
bound
lea
mov
cmp
xor
sbb
jp
std
inc
jg
pop
add
inc
out
push
insl
sub
mov
jp
mov
divl
adc
test
jge
jle
sahf
aas
pushf
pop
lods
mov
jg
cltd
inc
mov
dec
sub
andl
mov
outsl
sub
das
cmc
sub
jne
div
loopne
sti
jnp
jecxz
adc
lea
insl
fiadds
imul
inc
clc
adc
testb
fstpt
lods
jae
push
mov
mov
sbb
pop
rcrl
pop
mov
stos
pop
xchg
sub
mov
xchg
mov
mov
aaa
jo
dec
icebp
mov
mov
daa
ss
aaa
popf
sub
faddl
mov
jns
push
sahf
repnz
push
inc
aad
sbb
aaa
pushf
add
dec
stc
jno
cmp
pop
sub
inc
enter
dec
scas
nop
mov
insl
xchg
pusha
fldcw
test
jb
imul
pop
mov
xchg
pop
idivb
lds
andb
dec
xchg
movsb
and
jmp
mov
test
add
lods
xchg
sub
cmp
pop
jle
mov
lds
cmp
mov
outsb
pop
call
xor
mov
dec
out
pop
mov
out
loopne
mov
ss
aam
mov
inc
push
sbb
xor
push
pop
lret
sub
xchg
push
inc
xor
push
push
insb
fs
dec
jnp
jl
lcall
push
les
jg
lods
testb
sub
pop
sbb
xor
out
shlb
addr16
iret
xor
inc
or
mov
cmp
lret
push
cmc
cli
sub
and
dec
jle
test
push
enter
fwait
adc
aad
xchg
xor
and
mov
movq
pusha
sti
stos
push
mov
outsb
in
repz
dec
mov
int3
adc
insl
notl
cmove
testb
mov
sbb
mov
cs
out
and
mov
rorb
scas
inc
mov
pushf
adc
push
mov
mov
jno
jne
cld
fwait
mov
sbb
repnz
mov
push
or
cmp
jbe
cmp
jnp
jo
xchg
stc
push
dec
mov
add
repnz
mov
shlb
dec
in
mov
stos
or
pop
mov
jbe
outsl
imul
movsb
jno
out
jae
cmpl
push
and
es
sub
notb
into
pop
or
ljmp
aas
daa
xor
sti
mov
fnstsw
jle
mov
imul
stc
push
orb
shrl
pop
jns
xchg
or
rcll
mov
test
lods
negl
push
mov
mov
loop
mov
mov
xor
js
mov
out
loopne
jp,pn
jle
adc
mov
sar
jmp
xchg
and
iret
xor
xchg
cld
inc
push
push
scas
mov
sub
and
mov
jle
add
xorl
pop
cltd
out
jle
push
mov
in
call
les
cmp
or
lock
bound
cmp
aas
xchg
sbb
xor
push
jb
cmp
addb
sub
cld
xchg
inc
lea
mov
lahf
call
in
lods
pop
imul
in
push
sub
push
mov
cmpsl
mov
enter
inc
jns
sbb
xor
stos
mov
cmpsb
xchg
stc
shll
mov
repnz
sbb
out
call
jbe
pop
mov
sbb
arpl
inc
das
test
ror
cmp
insl
push
enter
adc
xchg
push
mov
cmc
mov
jo
mov
shll
push
lcall
pop
fisttpll
popf
mov
dec
mulb
test
jp
inc
pop
pop
mov
mov
outsl
push
xchg
add
inc
leave
lret
clc
repz
push
mov
mov
cmc
adc
dec
mov
mov
mov
inc
repnz
jo
jnp
cltd
push
sub
incl
out
sub
enter
adc
mov
add
ss
lret
xor
xchg
pushf
push
loope
test
mov
movsb
inc
jmp
ss
jp
jg
dec
sub
sbb
lods
mov
mov
push
mov
mov
into
sub
cmp
in
sahf
int3
cmpsb
insb
sarl
mov
aad
mov
xorb
jo
mov
push
pop
jnp
stc
xor
sarb
cmp
imul
into
pop
mov
movsl
add
insl
fstpt
jl
daa
push
or
mov
lock
in
out
mov
inc
jecxz
mov
dec
or
push
cs
xchg
sub
imul
pop
or
mov
xor
cwtl
mov
testb
movsl
clc
dec
int
mov
add
shll
scas
aas
inc
aaa
std
adc
mov
and
jle
stc
jbe
lods
sub
mov
pop
negl
dec
mov
mov
sbb
mov
insl
mov
clc
pop
mov
aam
popa
adcb
fldcw
imul
inc
hlt
add
mov
in
sub
mov
mov
push
insb
cmpsl
lar
lcall
pop
and
mov
jl
sub
inc
lds
adc
das
addr16
icebp
xor
fldt
mov
jecxz
add
pushf
test
sub
dec
lahf
xor
ret
sbb
imul
add
in
arpl
in
fwait
sbb
xor
dec
lds
mov
jns
sub
mov
es
in
jge
icebp
ss
hlt
inc
push
jno
jl
in
mov
xor
sub
psrld
js,pn
xchg
ja
fwait
dec
mov
aaa
add
mov
jl
insl
and
test
adc
out
ss
nop
dec
hlt
push
std
mov
js
lock
cmpsb
sub
inc
lods
sbb
jge
mov
add
xchg
jg
jl
mov
sarl
jne
mov
xor
xchg
xchg
pushf
mov
leave
adc
ja
popf
mov
fdivs
in
fxtract
in
dec
jmp
into
mov
cmpsl
subb
mov
ljmp
sub
jecxz
cmp
mov
adc
sbb
lods
add
mov
xor
pop
dec
xchg
mov
daa
or
mov
cs
jbe
fnstsw
pop
jle
add
push
dec
pop
xchg
inc
mov
in
cmpsb
or
ja
cmp
mov
mov
xchg
sub
dec
les
xlat
mov
add
mov
arpl
mov
and
or
xor
sti
mov
fwait
inc
sbb
push
lahf
pop
mov
iret
imul
es
hlt
xchg
mov
in
and
mov
inc
loope
jle
xchg
xorl
inc
push
fdivl
add
cli
adc
cmpsb
push
out
fcos
mov
test
mov
dec
jecxz
xor
test
fisubrs
movsl
mov
fst
pusha
dec
cmc
inc
xlat
out
ja
test
mov
inc
jle
lods
sbb
lods
rorb
or
je
dec
mov
xchg
das
pop
xor
jmp
cwtl
daa
mov
and
shll
leave
js
mov
cltd
stc
repnz
lds
jmp
sub
mov
arpl
adc
mov
add
mov
enter
xchg
sbb
jno
ss
cmp
jmp
mov
push
mov
shrl
out
sbb
insb
push
push
in
test
mov
sub
pop
xchg
data16
clc
sub
add
inc
movsb
negb
mov
repnz
mov
mov
mov
fisttpl
adc
mov
or
test
bound
sahf
xor
mov
daa
jl
jmp
cltd
lds
out
mov
mov
cmc
addr16
imulb
mov
xor
and
add
xchg
cld
or
ficomps
sbbl
mov
repz
stc
dec
mov
mov
sub
mov
push
xor
in
pop
mov
mov
sub
imul
inc
mov
adc
inc
mov
pop
mov
cmpsl
mull
mov
pop
jp
and
sub
scas
push
mov
push
add
call
mov
ret
aaa
or
ja
push
fildl
dec
mov
pusha
out
cwtl
xchg
mov
push
push
mov
dec
dec
adc
push
out
xchg
mov
or
imul
push
dec
push
dec
add
mov
mov
imull
mov
les
pop
js
pop
les
or
ss
cmp
divb
add
inc
xchg
add
movsl
mov
ljmp
mov
call
cs
jbe
mov
xor
ja
lock
inc
ret
ret
jp
mov
mov
and
adc
mov
lahf
xchg
insb
ljmp
cmpsl
mov
shll
mov
jno
mov
data16
jne
sub
popf
add
sti
mov
inc
int3
outsl
inc
jb
es
outsb
xor
sbb
mov
or
mov
jo
stos
dec
push
fdivrp
lahf
inc
and
and
sub
push
pop
rcrb
and
mov
in
mov
and
divl
aas
or
outsb
xor
jp
ror
fwait
push
aam
or
insb
jne
mov
hlt
mov
or
test
mov
adc
mov
fs
pop
and
ret
shlb
mov
add
dec
std
and
cmc
ret
or
mov
das
sbb
fildl
stos
dec
mov
and
testl
mov
ss
inc
jbe
pop
outsb
mov
int3
ffreep
xchg
aas
jno
repz
lret
std
mov
rcr
push
xchg
or
mov
inc
sub
mov
gs
mov
sbb
mov
or
cmp
out
fdivs
pop
aam
adcb
adc
xchg
adc
add
je
xor
cmp
daa
jecxz
int3
lock
mov
cmp
push
sub
pop
or
stc
je
cld
sub
mov
push
pop
outsb
jp
or
loope
rcl
push
sub
sub
icebp
divb
mov
xchg
mov
push
dec
int
mov
ret
movsb
adc
push
lahf
mov
pop
jmp
mov
mov
mov
std
inc
es
roll
lret
mov
xchg
loope
incb
cmpsl
mov
inc
nop
pop
push
mov
mov
or
inc
add
scas
mov
inc
inc
outsb
in
push
mov
in
aas
jne
push
push
mov
jmp
fs
into
mov
jecxz
rorl
cld
test
mov
lods
scas
add
mov
mov
leave
inc
push
pop
add
out
mov
jae
fisubl
push
out
imul
mov
inc
js
add
ret
repnz
rclb
imul
in
popf
pop
aad
sarb
mov
add
ss
dec
data16
mov
sarb
fwait
pop
or
push
sbb
adc
xchg
lret
xchg
pop
sbb
rcll
mov
scas
mov
sti
mov
mov
enter
loopne
paddusb
out
push
dec
mov
sub
mov
dec
jl
subb
ss
fimuls
mov
cli
outsb
add
mov
leave
adc
xchg
pusha
leave
push
mov
stc
cmp
cld
push
mov
adc
jge
mov
and
mov
jl
iret
outsb
cltd
jno
mov
sub
mov
mov
sub
jae
push
addr16
adc
inc
fnstenv
outsb
jbe
jmp
add
mov
mov
orb
repnz
xor
push
test
mov
sub
cmp
cmp
fiaddl
aad
or
and
mov
jb
add
imul
and
cmpl
sarl
mov
cli
and
cmp
mov
sub
and
lret
xchg
mov
mov
push
lods
fucomip
xchg
mov
cld
rcl
loop
int3
mov
fisttpl
ja
push
jno
scas
andb
pop
sarl
mov
mov
sub
lods
scas
inc
ljmp
or
mov
mov
sbb
insl
jae
mov
push
dec
das
push
push
scas
inc
dec
mov
dec
sbb
aad
mov
adc
in
xor
mov
imul
and
push
xchg
filds
jo
mov
mov
xchg
sahf
out
dec
sub
sub
ret
mov
sbb
test
sahf
fsubp
into
and
loop
je
sub
push
test
push
les
test
inc
ss
dec
das
push
sbb
inc
das
inc
mov
push
mov
je
add
jns
fsts
ss
inc
insb
xchg
sbb
jl
dec
test
scas
hlt
out
push
stos
push
adc
mov
inc
pop
lret
mov
push
cltd
jbe
sbb
movsb
insb
sahf
mov
mov
roll
sub
push
add
or
pop
mov
aas
in
lret
test
mov
jae
jnp
jle
pushf
push
mov
es
or
xor
push
cmpps
loop
jge
aad
xor
sub
fldcw
aaa
lds
xorl
push
cli
fnstenv
adc
push
mov
js
into
mov
add
cld
add
mov
shl
and
cmp
cli
mov
lds
int
test
icebp
or
std
xor
ret
sarl
add
mov
pusha
pop
hlt
push
jmp
mov
dec
rcrb
popa
sahf
aas
lock
loop
iret
movsl
and
push
add
inc
jb
lock
out
js
mov
ret
jns
insl
ds
or
mov
mov
add
loope
lahf
daa
add
ds
ds
cmp
add
lahf
out
fisttps
mov
imul
adc
mov
sub
rclb
dec
imul
jge
cmp
or
cmp
fnsave
push
cmp
sub
push
rolb
aas
fisubrs
fidivl
das
inc
lahf
jmp
adc
or
cmp
dec
mov
popf
imul
pop
sahf
mov
movsl
test
lds
movsl
push
xchg
mov
jl
ds
inc
fsubrp
mov
add
in
js
pushf
xchg
into
addr16
sti
mov
xchg
pop
enter
scas
leave
out
testl
inc
aas
fwait
ror
fcompl
ljmp
addps
data16
cmpb
mov
pop
dec
or
sbb
sar
js
ficompl
pusha
arpl
ret
jb
out
call
or
aas
jg
out
sub
xchg
mov
into
out
mov
mov
mov
scas
mov
and
out
push
push
lahf
pop
mov
test
mov
mov
loop
push
xchg
std
mov
inc
int3
addr16
jmp
mov
loopne
push
sub
dec
rolb
xor
mov
js
xchg
jle
out
inc
cmp
insb
cwtl
push
ret
dec
call
into
or
push
cmpsl
ljmp
js
test
stc
sub
dec
sub
and
xchg
xor
push
xchg
xchg
push
outsb
test
push
or
push
sub
lds
sbb
cmp
enter
jne
add
lahf
dec
push
cmp
lds
cmp
jle
mov
ret
das
sub
fimull
push
add
lock
push
shrl
pop
dec
fsubl
aaa
mov
pop
addl
jg
outsl
jne
aaa
sarl
pop
sbb
shrl
adcb
mov
mov
cld
aad
xchg
and
cmovae
imul
in
repz
stc
push
sahf
sbbl
push
sbb
out
mov
push
xor
cmp
ljmp
and
and
loop
push
out
inc
loop
dec
dec
fmulp
loope
push
mov
out
sub
and
mov
call
pop
js
popf
std
movsb
mov
xchg
mov
push
mov
xor
pop
push
pop
cs
jne
xor
sbb
push
or
ret
stos
push
xchg
xor
data16
jns
adc
neg
js
inc
clc
cli
or
dec
outsb
mov
dec
dec
and
mov
ficoms
inc
dec
cmp
add
sarb
mov
push
movq
aas
lahf
inc
jle
pop
cmp
xor
outsl
lcall
cli
dec
push
xor
sub
sub
push
aad
cmc
enter
add
sbb
inc
sub
outsb
sub
loope
push
aaa
out
or
inc
push
push
adc
ss
test
pushl
scas
ljmp
push
lds
outsb
movhps
pop
fwait
or
out
test
push
cmc
mov
loopne
mov
mul
lods
inc
loop
fmull
push
jae
or
mov
movl
cltd
lea
inc
sarb
ret
cmp
test
sahf
faddl
sarb
xor
jl
dec
cmpsl
or
push
adc
inc
mov
mov
add
repnz
int
mov
decb
add
inc
mov
add
sahf
and
enter
sbb
loopne
ds
les
and
and
call
lock
mov
fadd
cmp
inc
sub
fdivp
int
mov
enter
add
xchg
ds
mov
mov
outsb
mov
mov
sti
sahf
cmp
jle
xorl
dec
sub
shl
jmp
xor
movl
xor
and
outsb
xchg
cli
lock
adc
add
ds
push
std
cs
ja
push
sbbl
push
fimuls
out
es
mov
leave
cmp
je
arpl
mov
xchg
mov
add
out
enter
lods
mov
sahf
insl
iret
sub
inc
inc
es
loop
in
insl
cmp
out
inc
cmp
je
add
mov
lret
in
repz
mov
pop
clc
jno
in
pushf
mov
js
mov
test
mov
push
imul
jl
ljmp
test
orb
sarb
and
and
lcall
push
sarl
push
lahf
fsubl
xchg
jbe
ficoml
aam
sahf
imul
sub
aad
push
cmp
and
dec
sahf
push
mov
lcall
outsl
addr16
cmp
lahf
sbb
aam
push
gs
push
push
pop
dec
mov
sti
in
aam
push
push
lds
cld
mov
mov
test
out
push
nop
push
loop
addr16
jb
into
adc
js
jle
jmp
push
cmp
inc
in
popf
ds
mov
pop
add
pop
ret
cmp
inc
ss
jnp
lahf
cltd
or
mov
mov
in
mov
dec
inc
mov
pop
push
mov
sbbb
in
div
lds
mov
aaa
dec
jg
inc
sahf
dec
dec
call
mov
and
js
inc
jbe
mov
lcall
idiv
aas
push
sahf
add
enter
cmp
dec
sbb
sbb
sarl
dec
ja
sub
enter
sti
lahf
mov
pushf
xor
push
sub
push
dec
popa
inc
ja
js
out
test
aad
out
leave
jno
in
mov
negl
in
inc
shll
pop
mov
fimuls
dec
or
rorb
pop
mov
dec
lahf
mov
loopne
mov
es
mov
add
cmp
fisubrs
out
mov
pop
sahf
daa
js
adc
or
push
jnp
push
mov
cs
inc
or
mov
adc
repnz
and
fsubrs
jo
pop
cmp
in
push
popa
mov
push
mov
push
push
dec
cmp
mov
sbb
ret
mov
jp
pop
mov
mov
mov
idivb
sub
data16
fcmovb
pushf
pop
mov
xor
xchg
cmp
jp
ret
add
sbb
ds
xchg
icebp
lcall
xor
repz
sbb
sahf
clc
mov
aam
xchg
mov
fnstcw
mov
push
in
hlt
test
sahf
jno
mov
aaa
aas
repz
add
and
xchg
push
inc
popa
fcmovnb
mov
sbb
ljmp
mov
or
lahf
imul
sbb
ljmp
xchg
mov
dec
loope
mov
inc
arpl
jae
sub
adc
not
mov
mov
fistl
push
jno
jae
clc
dec
mov
inc
imul
fstpt
dec
scas
movb
xchg
fistpll
sbb
sub
push
or
cmc
dec
fidivrl
lret
cmp
js
imull
mov
or
xchg
fcmovnb
jl
mov
jecxz
add
insb
hlt
insb
jg
outsl
das
mov
mov
cwtl
inc
push
push
shlb
cltd
cmp
push
cmp
mov
mov
arpl
ret
adc
pop
mov
cmp
mov
add
mov
ret
push
je
push
call
add
cmp
loopne
dec
fcmovnu
push
roll
mov
movlhps
lahf
inc
add
add
sti
js
lods
xchg
inc
mov
mov
push
aas
mov
push
or
inc
std
dec
mov
push
jg
ret
inc
cmp
sahf
into
xchg
or
or
scas
or
addr16
lret
and
xor
inc
psrad
js
mov
rcrb
jecxz
dec
pop
lcall
sarb
daa
fstpl
mov
push
mov
jbe
lods
stos
imul
or
out
cmpsl
cmpsb
loope
data16
lahf
out
and
fwait
lea
arpl
int
jae
fdivrs
out
sarb
fisubl
push
ss
mov
push
lret
dec
dec
lds
mov
fldcw
sub
clc
and
cmp
mov
in
inc
fmull
mov
mov
mov
addr16
xor
and
test
add
sahf
mov
ljmp
adc
jge
xchg
mov
mov
mov
inc
imul
aaa
pop
lock
popf
aam
add
cmp
sbb
cld
pop
das
loop
in
xlat
and
jecxz
insb
mov
lret
jp
int
cmpsb
stc
push
into
dec
mov
cmp
mov
pop
repz
mov
loop
pop
inc
adc
cld
sub
push
pop
idivl
insl
mov
lret
sar
stos
mov
xor
inc
fimull
cwtl
into
mov
int3
xchg
mov
dec
leave
xchg
bound
inc
orps
mov
xchg
nop
out
out
mov
push
add
and
repz
nop
push
and
mov
sub
negl
cld
push
adc
sbb
fnstsw
xchg
xchg
out
cmp
cmp
cmp
pop
add
dec
mov
push
outsb
cmp
paddsw
out
cmpsl
ds
ss
enter
push
lds
ja
push
or
push
add
lds
inc
cli
or
stc
pop
dec
jnp
xchg
aaa
mov
push
pop
aas
iret
mov
lret
cmp
rcll
test
bnd
pop
nop
in
fsts
out
sahf
pop
push
int3
mov
xchg
xorb
mov
mov
sahf
lcall
adc
rorb
jno
add
arpl
in
stos
jmp
mov
push
add
sub
push
mov
sahf
out
jg
rclb
lods
js
adc
pop
insb
bswap
push
rcrb
inc
leave
or
shl
mov
pop
repnz
xchg
sbb
cmp
sbb
in
mov
rclb
hlt
push
in
rol
fsubrs
mov
in
movsl
out
fsubs
push
lret
push
bound
mov
and
or
ss
jnp
imul
insl
hlt
rorl
lods
pop
push
int
inc
adcl
dec
pop
push
fisttps
bound
xchg
mov
dec
and
mov
inc
dec
enter
std
out
in
or
vmptrld
adcb
dec
stos
negl
outsb
loop
add
daa
lods
sbb
add
cmp
fwait
stos
inc
je
negb
adc
ds
adc
gs
xlat
push
sub
jecxz
mov
push
mov
mov
add
push
inc
jl
lret
fildl
ja
push
push
jp
shlb
jne
add
fcmove
mov
jb
pop
sahf
pop
movsb
push
scas
ss
jp
add
sub
jbe
mov
xor
jne
cwtl
add
lahf
in
jae
add
and
xchg
ret
lcall
cmp
incb
inc
lretw
dec
inc
popf
into
add
rolb
pop
cld
mov
bound
and
jno
leave
in
jecxz
shl
xor
scas
int
cmp
incl
sub
shrl
mov
jle
and
sti
mov
call
out
xor
cmc
lahf
pop
rcr
hlt
orb
cmp
mov
or
fstp
xor
stc
mov
pop
out
lcall
dec
jge
add
sahf
pop
or
mov
in
push
in
xchg
cmp
das
mov
push
sbb
or
lock
dec
lret
fcmovnbe
push
int3
sub
loop
call
inc
push
int
adcl
inc
cltd
testl
lahf
sbb
ret
jbe
lds
leave
jno
cli
ret
pop
or
cmp
add
cli
fcmove
inc
jb
ret
lahf
mov
lret
and
mov
fiadds
int3
sahf
and
jg
mov
add
or
imul
cmpsl
jnp
dec
popf
out
push
cmc
into
outsl
jp
adc
fisttpll
push
fstpl
mov
ss
inc
repz
sbb
ficompl
out
repnz
hlt
cld
aaa
insb
loope
xchg
das
aas
mov
pop
std
leave
and
xchg
shrb
pop
test
xchg
jecxz
out
inc
inc
mov
pusha
jg
and
push
add
inc
jne,pt
add
mov
shl
fsubs
mov
stc
mov
inc
pop
scas
les
sbb
adc
fistps
sbb
push
call
or
sbb
add
rcl
lods
xchg
push
imul
and
ja
adc
sbb
mov
dec
xchg
dec
sbb
mov
dec
in
ss
mov
int
fisttpll
loop
sbb
jns
test
cmp
arpl
jns
mov
or
push
mov
jo
ljmp
cmp
mov
mov
inc
push
cmp
std
fimull
push
leave
xor
dec
inc
sub
sbb
cmp
arpl
int
jno
jb
lea
mov
cmc
dec
mov
sahf
shrl
add
push
dec
jb
or
fildl
mov
xor
rcll
sbb
loop
dec
sbb
push
sahf
cmpb
sub
lret
jo
mov
daa
and
dec
stc
int
xlat
fistpl
ret
leave
sahf
loopne
push
cmp
std
in
lds
mov
sub
daa
sahf
movb
jg
jb
imul
scas
fcmovnbe
fwait
lret
js
iret
push
xchg
pop
xchg
pop
dec
jae
lods
inc
sar
fs
jbe
fcomps
daa
test
xchg
add
xchg
push
push
ljmp
sub
enter
xor
iret
rclb
imul
out
and
adc
cmp
test
dec
out
repnz
push
sarb
mov
mov
fcmovb
loop
sbb
sbb
mov
les
lret
loop
or
push
dec
add
jne
xor
pop
mov
gs
mov
inc
dec
fdivp
hlt
scas
inc
pop
int
or
mov
dec
pusha
pop
jae
sub
mov
icebp
cmpsb
mov
aas
repz
cli
fidivs
ljmp
adc
or
mov
cmpsb
fbstp
popa
imul
or
adc
inc
mov
outsb
cld
and
mov
sti
nop
rcrl
add
sbb
pop
enter
sahf
fs
mov
mov
push
pop
popf
adc
and
jns
push
add
and
data16
loope
xor
inc
call
mov
sbb
mov
in
and
inc
dec
jp
inc
pop
or
test
insb
out
adc
fs
lock
aad
lahf
in
push
pop
dec
cmp
mov
push
mov
fidivs
adc
gs
mov
outsb
dec
leave
push
ja
rcr
mov
lcall
cmpsb
mov
xchg
repz
cmp
lahf
mov
dec
xchg
cli
and
push
scas
or
mov
cmp
lcall
inc
adc
sarl
fdivl
aam
test
add
lds
jo
xchg
outsb
jl
push
js
out
rcrb
insb
scas
jne
inc
loop
lret
popf
jge
mov
repnz
rcrb
je
or
adc
adc
shll
mov
out
cmp
jno
xlat
imul
mov
mov
cmp
mov
push
inc
repz
or
nop
jb
outsb
inc
test
mov
xchg
adc
cmp
divb
ret
lret
mov
mov
mov
jb
pushf
add
in
pop
lahf
loop
fdivrl
ljmp
sub
ss
pop
mov
les
test
add
push
jb
aaa
push
jmp
dec
shlb
sbb
push
jle
out
data16
out
cmp
xchg
int3
shll
rolb
and
cmp
test
push
adc
sub
xlat
sarb
shr
out
ffreep
mov
movsl
lock
ret
inc
ss
xor
mov
push
enter
lahf
xchg
test
xchg
mov
xor
pusha
clc
xor
sti
testb
xor
jbe
test
inc
mov
aas
arpl
xor
data16
ret
xchg
mov
jae
mov
mov
dec
or
shr
jae
mov
mov
cli
insl
dec
cmp
call
push
outsb
sbb
insb
icebp
sahf
adc
and
push
cmp
mov
call
ss
mov
lahf
ret
mov
out
jg
push
pop
xchg
jecxz
lcall
or
dec
aaa
ds
lahf
xor
jg
test
ror
pusha
and
push
sbb
mul
pop
aad
dec
inc
ss
dec
pop
loopne
jo
ds
jne
mov
sahf
nop
mov
xchg
aam
mov
aaa
mov
pop
jp
shrl
repz
jp
outsl
enter
push
hlt
mov
aas
mov
adcb
mov
cmp
mov
das
dec
push
jle
sub
inc
mov
push
lahf
shlb
nop
ja
imul
cmp
dec
mov
es
add
push
add
bound
mov
jbe
ret
mov
icebp
inc
arpl
cmc
int3
jns
fiadds
loope
orb
cmp
call
jmp
pop
lret
ljmp
sbb
cs
lahf
jae
and
pop
int
mov
jo
out
add
outsl
sbb
idivb
cmp
mov
inc
ret
leave
sub
cmp
mov
fcmovnu
inc
hlt
inc
vpminsw
mulb
mov
loopne
aas
outsb
mov
or
mov
in
into
pop
xchg
jmp
or
cld
sarl
mov
lock
mov
int
orb
pop
lahf
adc
ds
aad
xor
das
mov
mov
mov
es
push
push
push
xor
mov
mov
mov
mov
lahf
add
or
insb
mov
cmp
jle
int3
insl
enter
je
movq
cltd
mov
fcoms
pop
call
test
jle
sahf
push
cs
clc
bound
subb
fidivrs
or
pop
jb
insb
test
mov
mov
inc
test
or
test
xor
sbb
lock
cmpsb
inc
out
shl
ret
jmp
out
mov
test
or
fisttpl
lcall
iret
dec
adc
pop
sahf
dec
mov
bound
pushl
in
sbb
mov
sbb
fs
mov
scas
or
xor
jnp
in
in
sahf
movsl
push
mov
testb
lods
fdivr
lret
lcall
in
mov
mov
sbb
xor
dec
adcb
add
dec
rcrb
jecxz
mov
xlat
lahf
mov
jae,pt
sarb
mov
sbb
daa
fadds
test
jno
mov
dec
les
mov
push
popa
lods
xchg
js
pop
fwait
push
pop
insl
roll
inc
add
lahf
adc
mov
pop
outsl
jbe
and
hlt
out
or
lret
lahf
movsb
pop
xchg
jle
sahf
add
fnstenv
adc
xlat
cmpb
imul
jne
ret
mov
sbb
jge
inc
mov
dec
dec
pop
adc
cmp
jo
inc
fwait
sbb
jbe
cmp
into
or
mov
xor
mov
xchg
lods
cmp
scas
movsb
test
ret
imul
mov
push
or
mov
ds
push
arpl
and
inc
mov
daa
out
xor
cwtl
call
inc
enter
mov
iret
sbb
pusha
mov
mov
cli
push
decb
aas
iret
lds
jo
push
ss
sahf
cmp
pop
dec
sbb
outsl
ljmp
in
pop
mov
or
mov
rclb
insl
cmp
mov
aad
push
inc
jno
pushf
das
dec
rorb
adc
stc
icebp
testb
mov
inc
lahf
push
dec
fwait
mov
add
in
outsb
xor
rcrl
jecxz
push
inc
pop
aaa
add
and
and
mov
data16
push
adc
imull
std
and
inc
mov
decb
sarb
jb
popa
call
pop
mov
push
lahf
mov
cld
arpl
ljmp
dec
fisubs
mov
sub
mov
push
cld
xor
repnz
adc
lds
mov
cld
inc
jl
adc
dec
push
mov
jbe
xor
ja
cltd
pop
cmp
loop
push
jns
pushf
pop
test
shll
sahf
pop
cwtl
aas
in
pop
enter
lahf
pusha
out
push
mov
cmp
mov
adc
insb
adc
clc
notb
lret
mov
and
mov
inc
int3
stos
add
flds
rcll
popa
scas
hlt
add
jns
jge
push
pop
add
xor
sbb
lret
lods
xchg
call
jge
dec
decb
pop
addr16
push
mov
fiadds
pop
dec
lahf
ds
clc
scas
ljmp
or
mov
rcr
popf
lahf
xorl
clc
push
pop
jmp
mov
in
call
nop
shlb
in
jecxz
testl
pusha
fsub
loop
aas
push
jl
movsb
btl
push
gs
sahf
mov
aaa
rcrb
ficoml
inc
test
dec
dec
lods
add
jne
jbe
push
cmp
outsb
mov
adc
test
in
jmp
fisubl
dec
hlt
add
pop
push
xor
push
loope
lods
mov
loopne
ret
out
cmp
insl
mov
arpl
lret
xchg
sahf
inc
scas
mov
mov
or
out
popa
or
xchg
jmp
mov
sub
pop
push
add
lahf
or
loopne
mov
mov
mov
aas
push
add
addr16
and
notb
aas
insb
fistl
push
cmp
shl
clc
xchg
jno
or
mov
dec
fwait
xchg
jle
test
pop
cwtl
add
movsl
mov
push
add
icebp
loopne
push
pop
out
mov
sub
movsb
xchg
mov
push
inc
mov
mov
jl
push
mov
or
push
int3
mov
sub
and
andl
mov
imul
or
dec
int3
sahf
fcmovne
cmp
dec
add
ss
xor
cmp
clc
pop
push
and
pop
mov
repnz
ss
or
pop
ljmp
ljmp
cmp
push
pop
sahf
fisubs
ds
push
and
dec
jg
cwtl
lea
rcrl
sub
inc
add
pop
cli
push
enter
inc
mov
sub
push
outsb
cld
mov
adc
icebp
mov
xor
ret
shll
mov
pop
xchg
rcrb
jno
mov
adc
rcrl
or
out
jge
cltd
mov
test
xchg
in
jl
push
and
cmp
push
xor
cmp
xor
or
sub
or
push
enter
mov
cld
and
jb
mov
add
adc
int3
outsl
dec
es
xchg
jb
push
xchg
xor
jae
orl
stos
mov
int3
cs
ret
lret
or
lahf
xchg
mov
jno
stos
xchg
icebp
mov
loopne
cmp
fninit
or
sbb
repz
fnstsw
jne
adc
or
pop
xchg
mov
jecxz
out
cli
mov
add
dec
cmp
out
lret
or
mov
and
rol
das
scas
cmp
scas
rorb
test
mov
inc
push
inc
mov
xchg
into
add
lahf
jecxz
mov
mov
into
pop
inc
lret
jnp
insb
cltd
pusha
or
adc
pop
push
pop
lock
mov
mov
adc
lahf
loop
jp
and
sahf
sbb
mov
fcmove
addr16
mov
xchg
inc
dec
xchg
ss
aad
xor
push
in
add
pop
in
xor
xor
in
call
out
stos
xchg
inc
popf
imul
push
mov
and
in
pushf
shlb
mov
xchg
repnz
and
or
dec
add
dec
add
jl
lock
gs
or
cmp
and
push
fsubrl
repnz
xchg
lahf
sbb
rcr
scas
clc
aaa
push
cmc
cmp
pop
pop
subl
mov
aad
test
sub
fcomps
mov
or
mov
shlb
add
mov
add
inc
push
roll
jg
int
mov
das
adc
bound
xchg
int3
sahf
stos
ja
or
inc
mov
enter
dec
inc
mov
pop
mov
inc
imul
mov
lahf
mov
das
outsl
lahf
add
and
movsb
jne
lds
sahf
or
xlat
fdivrl
lods
lods
jbe
push
js
or
mov
fstpl
nop
add
fsubrs
cli
fsubrs
or
adc
cmp
or
jae
xchg
stc
xor
jge
sahf
outsl
repnz
jle
lahf
js
lods
xor
push
dec
inc
data16
push
push
shll
gs
fistps
pop
fwait
mov
hlt
imul
js
jg
and
clc
pop
imulb
aam
into
inc
add
stos
cmp
dec
mov
push
js
rolb
roll
fsub
fnstenv
mov
dec
dec
sub
push
mov
push
pop
insb
neg
stos
or
push
dec
jne
inc
push
push
aas
push
cmpsl
js
fistps
pop
test
cmp
cmp
dec
mov
insb
push
cli
cmp
into
lahf
jb
in
xchg
mov
xchg
lret
jecxz
push
sbb
and
test
rcll
imul
addl
fldcw
mov
mov
sub
scas
mov
stos
lds
jecxz
sbb
inc
cmpsb
xchg
push
adc
push
in
adc
rcll
or
inc
cld
mov
push
mov
dec
pop
jp
jbe
add
jbe
push
testl
pop
and
xchg
testb
repz
or
dec
adc
or
in
sti
inc
add
sub
enter
mov
dec
add
insl
push
int3
ds
mov
out
mov
xchg
ss
ret
leave
xchg
loop
cmp
sahf
rorb
pop
data16
xchg
lea
aad
out
add
outsb
pop
jl
add
dec
dec
push
shrb
pushf
js
lahf
clc
push
loop
test
hlt
sbb
je
fmul
decl
pop
out
xlat
mov
push
mov
pop
scas
loop
arpl
stc
push
sbbl
cmp
push
pop
sbb
dec
sbb
cld
mov
dec
or
addr16
cli
cmp
rcl
mov
jb
out
pop
loop
push
out
arpl
add
mov
outsl
sub
jmp
inc
mov
sub
mov
dec
mov
push
mov
or
sahf
xchg
mov
push
lea
int
clc
popa
icebp
pop
sbb
loop
rorb
mov
push
pop
add
loop
add
pop
sub
pop
jno
fisttps
jge
dec
push
add
lahf
je
jecxz
iret
adc
iret
mov
mov
jae
jmp
es
ljmp
mov
push
ret
mov
ds
mov
xchg
or
rorl
aas
pop
push
scas
ss
lahf
test
push
cmp
jl
jp
aas
cmpsb
ds
fistpll
push
pop
in
mov
adc
push
cmp
icebp
sbb
pop
jmp
jl
or
insl
dec
adc
sahf
add
ss
push
inc
lahf
xchg
mov
mov
pop
stc
push
inc
insl
ss
mov
data16
lahf
cmpsl
ljmp
or
rolb
sub
inc
shll
ret
sbb
or
xchg
inc
sub
out
mov
lahf
lret
push
mov
incb
jo
cmp
push
pop
sbb
mov
roll
mov
mov
xchg
out
stos
lahf
ljmp
jo
arpl
xor
lods
mov
sbb
jo
cld
pop
fldl
sub
insl
loop
xor
push
mov
aad
sub
mov
sub
imul
push
mov
cli
add
dec
sub
xchg
loopne
insl
adc
loope
jge
push
mov
fldt
fiaddl
jmp
pusha
mov
cmpsl
jecxz
adc
adc
and
enter
jno
dec
std
sbb
shl
repnz
shrb
xor
int3
inc
js
or
sbb
cli
pop
sbb
sti
addr16
pop
xor
cltd
xor
enter
lahf
push
shrl
jbe
pop
mov
jb
cmp
clc
fldl2t
mov
sub
cmovae
fwait
jl
and
jp
mov
pushf
inc
aas
push
mov
mov
orl
cmp
add
inc
inc
insb
leave
jne
cmc
lahf
mov
aad
mov
pop
mov
xor
dec
sahf
pop
fdivrl
pop
enter
sarb
mov
lahf
jae
xchg
stc
xchg
or
leave
cmpsl
test
mov
aas
mov
clc
into
sahf
fnsave
jbe
enter
roll
mov
js
fmuls
mov
jmp
push
sahf
sbb
pushf
std
and
lcall
xchg
into
ds
push
les
pop
push
inc
sbb
fstpl
je
loope
iret
add
cs
fsubrp
mov
inc
jl
xchg
mov
fisttpl
ja
sahf
imul
dec
ffreep
sbb
scas
aad
mov
pop
outsl
cmp
fs
add
xorb
mov
pop
mov
mov
or
or
dec
fcoml
mov
cli
or
imul
insb
enter
inc
mov
out
sub
sahf
dec
out
cmp
ja
jo
mov
std
outsb
scas
shrl
int3
aam
push
pop
dec
scas
or
push
sbb
or
or
fwait
pop
scas
outsb
mov
cmp
int3
ljmp
push
sahf
call
dec
shll
mov
or
aas
rol
jp
jecxz
das
cmp
add
jmp
pusha
out
mov
lahf
xchg
xor
fistpl
clc
addb
dec
das
mov
aaa
sub
arpl
rcll
jg
inc
icebp
cmp
out
mov
push
clc
mov
adc
stos
ret
mov
int3
mov
sahf
daa
xchg
rcll
push
cmp
inc
inc
dec
rcl
mov
scas
inc
add
jbe
inc
rclb
sbbl
inc
jbe
loopne
push
jg,pt
rol
and
inc
push
outsb
or
repnz
mov
rclb
push
decl
std
ret
lock
push
lahf
dec
stc
and
sub
mov
jecxz
jbe
mov
jge
mov
sub
call
lods
ljmp
pop
pop
add
push
dec
mov
push
movsb
in
fisubrs
mov
sbb
lahf
jecxz
cmp
adc
cmp
adc
pop
mov
adc
jp
mov
push
stos
ss
out
test
jecxz
sbb
addb
shlb
jle
inc
dec
lcall
in
lock
mov
loope
xbegin
inc
repnz
test
les
scas
pop
adc
add
pop
pusha
fsub
push
add
dec
sahf
add
dec
addr16
out
repz
arpl
int
rcrl
loope
in
mov
sahf
icebp
lods
mov
and
outsl
mov
and
shll
xor
ja
ftst
sar
push
or
mov
mov
cli
sarb
mov
adc
sbb
inc
mov
cld
dec
arpl
sub
in
popf
in
or
inc
bound
sahf
jbe,pn
pop
mov
pusha
xchg
push
cli
loop
lcall
mov
mov
testb
cmpsb
dec
push
fimull
fdecstp
inc
and
mov
jp
xchg
sbbb
or
or
int3
mov
shrb
shlb
inc
test
inc
xchg
inc
inc
jb
fnstsw
ljmp
jnp
daa
jnp
pushf
or
mov
arpl
push
leave
inc
xchg
mov
arpl
in
mov
mov
sbb
jno
xlat
dec
or
lret
mov
popa
or
dec
daa
imul
jmp
cwtl
sub
mov
and
mov
pop
add
mov
pop
xor
pop
fldt
push
dec
pop
in
or
inc
sub
cmp
sub
repnz
push
sub
push
jbe
mov
fwait
push
pop
in
mov
cmc
dec
fimull
lahf
inc
ret
adc
and
ficoms
scas
jg
into
scas
jnp
scas
or
shr
pop
cwtl
lahf
cmc
movsl
into
sahf
shl
in
mov
push
adc
jge
jecxz
or
dec
rcl
clc
mov
pop
das
jno
inc
or
call
xor
jno
xor
fsub
mov
xchg
fldt
ret
mov
jecxz
movhps
insl
pop
fcmovnbe
dec
test
cwtl
mov
push
lds
jno
cwtl
shlb
cmp
ds
or
push
dec
or
les
sahf
jecxz
enter
dec
lcall
mov
ss
mov
leave
dec
mov
and
fisubs
fdivr
mov
data16
dec
cmpb
xchg
xchg
push
add
jmp
int
jbe
pop
dec
rcr
xor
or
pushf
mov
or
sbb
sub
mov
dec
pop
in
rorl
push
sub
inc
ss
mov
inc
xchg
test
mov
jne
insb
test
add
ds
dec
sub
jne
loopne
xchg
inc
pop
test
sub
dec
mov
ljmp
ja
cmpl
push
and
pop
dec
adc
js
mov
sbb
xchg
sub
adc
mov
les
leave
mov
push
lret
jo
inc
inc
add
ret
jno
cmpsb
and
xlat
or
adc
imul
jo
hlt
sahf
fdivr
push
gs
mov
mov
mov
mov
inc
push
dec
xchg
les
cmp
out
or
jg
das
push
dec
mov
add
or
sub
mov
jne
fdivr
push
test
fisttpll
pop
mov
fcoml
mov
lahf
out
pusha
fisubl
ret
enter
mov
test
cmp
leave
mov
add
and
int3
mov
push
pop
notb
sbb
dec
lods
out
pop
lar
inc
call
notl
xchg
or
sub
add
pop
negb
popf
sarb
mov
lea
lahf
movsl
lahf
ret
es
mov
arpl
stos
push
jge
mov
ficomps
mov
xchg
enter
bound
or
xlat
test
pop
dec
pop
jb
mov
inc
nop
jne
out
scas
jne
sbb
mov
dec
in
cmp
push
pushf
and
inc
push
leave
or
push
pop
xchg
sbb
clc
sbb
push
aaa
adc
push
loope
sbbb
add
mov
sahf
adc
jns
js
aas
movsl
xor
jp
test
nop
or
xchg
mov
aas
testl
cmpsl
dec
dec
popf
addb
dec
test
or
outsl
push
addr16
sbb
or
mov
addr16
inc
mov
jmp
and
in
outsb
daa
dec
jae
aas
test
push
lahf
sub
cmp
sti
test
mov
aas
pop
lahf
jecxz
pop
sub
push
js
fdivl
dec
push
mov
jae
add
out
iret
dec
cmpsl
mov
rol
ja
movq
mov
push
cwtl
cmp
adcb
cltd
stc
enter
xchg
pop
fimuls
rorl
outsb
call
mov
pand
cmp
jnp
es
and
loop
into
iret
dec
push
xchg
jg
jo
mov
and
jecxz
push
cmpl
jg
or
lahf
and
inc
mov
add
fdivr
lods
into
rorl
out
jnp
and
fidivrs
scas
and
aad
adc
add
add
lds
add
sahf
add
and
test
sti
xor
fwait
jns
inc
insb
or
rol
movsl
dec
inc
mov
cmp
push
inc
mov
lock
pusha
mov
xchg
and
dec
adc
xchg
sahf
mov
adc
add
out
frstor
or
aaa
inc
sbb
divl
fsubr
xor
or
dec
push
fisubrl
push
push
repz
dec
fistpll
shr
fwait
push
mov
lret
cmp
lahf
dec
dec
pop
mov
xchg
pop
cmc
lods
sub
lds
sahf
push
enter
mov
or
xchg
push
inc
test
pop
sarb
mov
negb
push
and
xchg
lahf
call
clc
fisttps
notl
pop
pop
sti
rorl
xor
push
sbb
lahf
or
pop
int3
xchg
push
inc
mov
out
and
cmp
jo
xor
jb
in
cmp
ja
rclb
ja
lcall
cmp
add
lret
lds
mov
inc
lods
push
mov
clc
push
sahf
lret
inc
inc
jns
pop
fidivl
lcall
lahf
adc
mov
lcall
clc
add
pop
mov
mov
or
add
stos
pushf
fidivl
loop
dec
mov
cmp
cmp
sbb
outsb
fdivrs
lahf
adc
jp
fnstsw
xor
ss
movsb
push
mov
push
mov
iret
mov
push
nop
ror
out
push
js
mov
adc
cmp
fst
into
cmp
inc
xor
push
rolb
inc
xchg
xor
jbe
lahf
adc
jle
mov
dec
fadds
and
fimull
adc
jae
daa
pop
test
inc
outsb
cwtl
in
fadds
scas
jae
loope
add
adc
push
push
pop
inc
pop
and
cmp
in
jle
rorb
add
lds
pop
push
enter
sub
xor
roll
xchg
xor
push
inc
jbe
fdivr
test
enter
push
test
pop
adc
pop
mov
adc
leave
jne
sti
push
dec
sti
mov
inc
out
daa
hlt
faddl
testb
cmpb
xlat
test
lcall
mov
es
cmpsl
inc
lahf
cld
cmpl
pusha
lock
test
ss
into
mov
cmpsb
adc
dec
inc
loopne
mov
xchg
push
mov
gs
fcmovnu
cld
icebp
or
les
pop
addr16
mov
outsl
aam
dec
fimull
dec
xor
pop
sahf
jge
dec
jecxz
inc
je
jno
mov
cmp
or
lret
dec
arpl
popf
out
push
test
mov
or
leave
dec
sub
or
lods
inc
pop
insl
inc
sub
or
add
orl
jno
cmp
sbb
xor
push
int3
sahf
xor
jns
inc
pop
pop
cltd
dec
fstl
pop
popf
mov
pop
cs
imul
dec
repz
ljmp
in
or
xlat
movsb
pop
fwait
testb
lahf
sub
cmpsl
inc
push
mov
inc
fldcw
dec
add
pop
popf
mov
sbb
enter
sub
out
int3
lahf
shll
mov
lahf
mov
ret
mov
push
mov
jg
fst
mov
stos
cmpsb
nop
call
stos
imul
fiadds
jbe
outsb
fs
notb
xchg
or
out
inc
pop
push
push
aaa
inc
push
sahf
movsl
xor
scas
nop
mov
insl
inc
out
xchg
push
push
cmc
cs
orb
xchg
into
jno
fnstenv
cmp
enter
mov
xor
and
add
push
cmp
cmp
sbb
jne
stos
mov
in
pop
cmp
insb
out
stos
gs
and
cmovae
imul
pop
mov
ret
outsb
ss
mov
repz
or
xchg
mov
test
dec
leave
das
adc
dec
inc
jno
gs
xchg
aam
emms
or
outsl
in
sti
pop
gs
imul
push
cs
jecxz
jecxz
imul
xlat
adc
rcrb
jp
cld
jg
imul
inc
dec
mov
mov
jle
cmp
adc
add
cld
test
xchg
sahf
xchg
cmp
or
fwait
inc
mov
or
lods
mov
aad
or
jmp
lods
xchg
dec
jnp
imulb
sbb
notl
ljmp
xor
inc
xchg
or
addr16
out
lds
aad
pop
jle
in
fimull
bound
push
adc
stc
aas
dec
sahf
mov
dec
and
leave
fldl
mov
outsl
add
jns
leave
rcl
insb
les
loop
cltd
mov
mov
ljmp
into
scas
and
mov
mulb
xchg
scas
push
out
push
push
push
in
call
or
clc
in
pop
dec
arpl
pop
xor
or
xor
sub
in
cltd
xor
inc
and
outsb
pushf
icebp
or
fs
cld
mov
lret
mov
mov
test
dec
loopne,pt
ficoms
mov
xchg
push
mov
jle
sahf
dec
mov
inc
testb
mov
fiaddl
outsl
lds
test
jp
int
ds
fmulp
lahf
ja
adcl
xchg
sarb
cmp
add
push
mull
sub
dec
and
xchg
leave
outsb
mov
sbb
sti
xor
xchg
outsb
mov
dec
sbb
inc
sub
sub
in
jp
push
test
mov
lds
sti
das
pusha
inc
push
adc
lcall
sbb
ljmp
bound
stos
into
pop
fimull
jae
mov
xor
lret
dec
lea
movsb
dec
sub
jne
adc
add
or
pop
inc
rolb
xorl
test
int
dec
cmpl
shr
mov
mov
sahf
cmp
lret
lea
xor
inc
push
cmp
adc
insb
outsb
pusha
repnz
adc
sti
jbe
lods
mov
or
xchg
lods
int3
leave
jbe
cmc
sbb
push
movb
pop
add
popf
je
pusha
or
xor
nop
test
pop
mov
xor
pushf
in
xor
mov
sbbb
sbb
dec
rclb
add
cld
outsb
sahf
jecxz
test
and
les
add
popf
js
sahf
test
mov
add
push
add
mov
gs
jl
frstor
mov
enter
add
pop
cmpsb
cmp
in
pop
xlat
movsb
mov
ljmp
sbb
or
pop
mov
sub
inc
add
or
xchg
lcall
push
in
pop
xchg
sub
jp
push
push
rcr
and
call
int
sub
xchg
push
and
dec
jp
mov
mulb
cmp
int3
push
push
lcall
decl
lock
push
fnstcw
cmp
dec
lods
iret
shll
pop
pop
sbb
aam
cmp
sbb
sbb
mov
es
js
call
repz
mov
mov
dec
mov
mov
hlt
jno
or
mov
ja
mov
cmp
pop
loopne
xor
cmp
jp
shr
sub
aas
shll
cmc
jmp
mov
mov
mov
and
and
leave
push
outsb
pop
xchg
dec
lahf
add
mov
cmp
sub
aad
add
ret
dec
push
pop
test
fildll
or
in
xchg
push
jecxz
test
mov
dec
loop
jecxz
jp
cwtl
xchg
cmp
outsl
andb
movsl
xor
or
andb
or
adc
jmp
mov
sub
lahf
jmp
xchg
enter
xor
pop
pextrw
arpl
cmc
add
or
arpl
setg
push
loop
movsl
push
and
insl
add
adc
pop
in
jecxz
loopne
cmp
mov
repz
mov
push
gs
cmc
lahf
add
cmp
mov
push
mov
push
orl
mov
add
icebp
shlb
and
outsb
push
mov
adc
adc
jbe
push
adcl
popa
call
cs
cwtl
dec
add
int
or
add
and
or
jge
incl
leave
js
lahf
push
ljmp
dec
outsb
std
sub
or
sub
pop
gs
int3
sbb
andb
aas
call
or
dec
dec
lcall
push
dec
sbb
jae
addr16
insb
jg
movsb
xor
test
arpl
jp
and
jnp
mov
icebp
ret
insl
mov
loop
mov
xchg
inc
push
dec
lahf
ret
mov
cld
cmp
ret
nop
mov
xchg
push
ja
fsubrs
sahf
lahf
cmp
bound
add
frstor
jae
add
shr
push
lods
xor
loopne
xchg
mov
shl
adc
or
scas
bound
mov
jb
shll
cmp
inc
lret
stos
pop
scas
sahf
seta
push
push
sarl
aam
pushf
pop
aas
cmpb
ss
jae
jbe
lret
mov
iret
push
stos
dec
sahf
cmp
ja
outsb
xchg
mov
pop
inc
aas
lods
mov
jg
jmp
jo
lds
insb
cmpsb
push
or
lahf
incb
push
lock
mov
mov
xor
adc
clc
cld
stos
idivb
sub
lret
push
mov
pop
jecxz
jns
fstpt
ret
fsts
enter
int3
outsb
push
data16
repnz
xor
pop
mov
loop
jle
lcall
mov
and
jne
push
out
sahf
adc
jp
out
xchg
aam
test
cmp
adc
jg
inc
or
cmpl
inc
adc
js
sub
lret
cli
mov
je
mov
dec
divl
bound
cmp
mov
int3
or
mov
rolw
sti
into
xchg
cwtl
icebp
cmp
xor
insl
fldl
pop
mov
lahf
loop
pop
push
jl
xor
or
inc
inc
js
xor
stc
add
mov
clc
ss
shll
sbb
sub
lahf
aam
adc
test
sub
lds
jl
xor
imul
adcb
push
call
or
lret
jne
lods
fistl
adc
inc
push
xlat
sti
pop
cld
fisttps
cmc
or
outsl
jb
js
mov
pop
push
sbb
push
xor
mov
fs
test
sahf
aas
pop
scas
lcall
or
out
adc
mov
adc
movsl
dec
shll
mov
repnz
ret
testb
sahf
std
nop
adc
das
fdivs
fwait
mov
inc
xchg
mov
cmpsl
aaa
cli
sub
add
ret
and
sub
dec
pushf
or
mov
mov
xchg
fsubp
add
add
push
cmpsl
jae
xor
mov
stos
jnp
mov
cmp
dec
fdivs
gs
push
outsl
leave
add
jne
divb
mov
ds
cmp
inc
js
jp
rorb
popa
mov
test
bound
xchg
push
xlat
hlt
inc
loopne
in
mov
adc
adcb
push
xchg
mov
push
scas
inc
and
jl
idivl
push
adc
cmp
das
mov
lret
or
or
fisttps
loop
int
push
daa
mov
inc
outsb
adc
popf
out
cmp
hlt
sbb
test
insl
cli
clc
aaa
mov
mov
pop
cld
lock
or
mov
dec
outsb
daa
ror
inc
jp
push
outsb
pusha
test
jne
leave
lret
arpl
lret
push
pop
inc
push
jecxz
ror
loop
adc
mov
sub
adc
pop
pop
mov
push
mov
mov
sbb
repnz
sahf
filds
ds
aaa
jmp
cli
add
push
push
sbb
mov
jbe
out
and
push
push
mov
sahf
xchg
and
mov
inc
cli
aas
cmp
mov
sbb
dec
cmp
lahf
mov
int3
xor
ret
mov
mov
iret
inc
test
add
aad
and
mulb
int
sbb
xchg
test
pop
aad
fsubrs
xchg
aas
xor
xchg
xchg
int
mov
push
push
pop
ret
sarb
dec
iret
aaa
mov
mov
sbb
sub
sbb
rcll
pop
xchg
mov
test
xor
inc
sub
lock
outsb
sub
stos
addl
pop
xchg
bound
loopne
mov
mov
fs
sbb
popf
leave
jne
push
int3
adcb
pop
popl
rclb
repz
xor
fstp
pop
lock
sahf
add
mov
cmp
pop
inc
mov
xchg
leave
mov
mov
pop
sahf
fcoml
pop
lahf
fdivl
push
mov
stos
std
adc
push
out
sbb
pop
sbb
inc
cmp
and
mov
sub
dec
inc
xor
mov
sahf
hlt
mov
xchg
je
sar
lahf
loope
pushf
mov
cltd
nop
scas
mov
faddl
xchg
movsl
mov
bound
push
dec
pcmpgtb
ljmp
ficomps
xchg
int3
adc
daa
or
mov
pop
mov
mov
shll
mov
loope
or
cmpb
aaa
mov
push
sbb
in
sub
mov
and
push
push
outsb
push
sahf
ljmp
sti
test
mov
adc
imulb
iret
sbb
push
push
clc
lahf
lcall
inc
test
xor
call
cmpsl
xchg
shll
sahf
add
push
mov
cmc
test
and
add
sarb
addr16
fidivrl
mov
icebp
mov
dec
imul
xchg
lahf
lods
fistps
pop
and
jbe
inc
fwait
and
mov
popl
sbb
mov
inc
mov
mov
mov
sti
and
jno
pop
gs
adc
add
in
lahf
cmp
sbb
bound
sahf
notl
mov
xchg
cltd
call
xchg
mov
mov
add
and
xor
idivb
aas
ret
rcll
jne
jbe
or
lcall
sahf
data16
mov
xchg
lahf
mov
shll
push
or
sub
das
mov
aas
lcall
mov
and
xor
popa
adc
in
mov
push
mov
clc
mov
dec
mov
lds
in
loop
jmp
fbstp
sub
or
mov
push
mov
mov
loope
jne
nop
movsb
pop
nop
sbb
or
cmp
mov
popa
scas
adc
sti
mov
rorl
cld
jnp
mov
lcall
xchg
push
das
or
jg
or
pop
jb
outsl
jecxz
ljmp
sbb
inc
movb
pop
mov
mov
sahf
subps
xor
int3
test
push
dec
iret
xor
fisttps
lods
out
xchg
xchg
inc
lods
aas
inc
out
cs
imul
test
call
mov
into
mov
sahf
pop
mov
imul
arpl
lret
add
xor
js
lahf
sub
adc
mov
out
mov
cltd
add
xor
lcall
push
mov
sbb
adc
test
loopne
icebp
dec
pop
mov
or
sahf
idivl
fistpll
jle
cmp
adc
or
sbb
mov
lea
or
dec
pusha
fisttpl
adc
mov
cmp
mov
push
cld
xor
pop
jbe
fcmovu
lret
nop
test
loop
divb
ficoml
movsb
pop
mov
fidivl
sahf
adc
aaa
or
cmpsl
fisubrl
jmp
mov
stos
mov
enter
int3
scas
data16
mov
sahf
jnp
push
cmp
dec
ret
pop
shl
lahf
jmp
or
inc
cli
daa
xor
push
pop
std
jno
pusha
movsb
leave
pop
xchg
decl
inc
arpl
outsb
mov
adc
dec
jl
jbe
pop
xor
add
mov
aam
movmskps
cld
push
inc
jle
add
insl
mov
push
jecxz
mov
dec
push
cmp
dec
leave
xor
es
movsl
in
push
mov
sbb
cmp
or
outsb
sbb
pop
negb
in
scas
not
mov
rcll
inc
lock
test
enter
testb
add
shll
or
inc
or
les
cmc
add
dec
add
xchg
fnstenv
mov
push
outsb
test
push
xchg
cmp
sbb
jecxz
mull
jns
fs
test
sbb
aas
jecxz
into
repnz
lahf
jecxz
xor
in
fwait
lds
pop
push
push
mov
push
mov
leave
add
leave
jecxz
push
enter
mov
fisttpll
fucomi
scas
xchg
sbb
and
or
test
fwait
and
pop
xor
pop
push
pop
adc
dec
imulb
mov
add
mov
xchg
dec
inc
in
outsb
jle
test
pop
pop
pop
xor
idivb
dec
xchg
mov
imul
test
scas
orb
lock
nop
jp
xor
push
fildll
jns
das
adc
push
in
imul
test
mov
push
out
pushf
fldt
andl
sti
lret
cmp
lods
and
enter
inc
push
jae
add
mov
pop
adc
mov
int3
sbb
jns
and
adc
aaa
testb
sahf
push
mov
cmpsl
scas
popa
rclb
scas
out
cmp
and
mov
jecxz
flds
mov
into
lret
clc
inc
inc
das
inc
daa
vmulpd
jmp
movsl
enter
flds
mov
test
sbb
cmp
ret
sahf
sub
ds
and
mov
add
xlat
mov
cmp
xorb
and
fistl
xchg
jne
imul
sbb
and
inc
test
mov
mov
inc
fcoms
push
push
lcall
xchg
xchg
cmp
sahf
icebp
bound
xchg
jae
hlt
push
push
mov
out
ss
lahf
adc
pushl
imul
mov
out
and
dec
lds
aas
push
int3
cmp
and
dec
jbe
push
cmpsb
daa
enter
out
push
jbe
push
push
cmp
cmpsb
mov
cmp
push
push
lods
ret
cmp
lahf
lods
cmpsl
orps
ljmp
dec
outsb
pop
and
mov
xchg
dec
arpl
into
mov
sbb
pop
lret
mov
xor
movsb
loop
sahf
sbb
dec
inc
pop
pop
dec
pop
sub
lds
fmul
jl
mov
or
xor
lret
pop
add
out
mov
mov
lods
rorl
or
jmp
daa
loop
push
mov
cmpsb
push
mov
inc
jb
mov
push
and
dec
push
push
inc
out
or
lods
in
adc
mov
jne
or
push
mov
pop
add
jecxz
jnp
adc
cmp
inc
fwait
adc
and
mov
cmpb
fstl
icebp
inc
mov
push
xor
movsl
lahf
jecxz
stos
cli
movsl
push
pop
add
cwtl
insl
and
push
jg
dec
test
enter
mov
xor
adc
mov
inc
loop
inc
subl
stos
dec
mov
lret
fs
mov
jne
mov
subl
aam
lds
scas
lcall
out
popa
out
or
jno
mov
stos
mov
xlat
xchg
mov
mov
sbb
and
jae
test
mov
insl
inc
jmp
dec
jns
fistl
ja
push
and
lds
add
or
jp
cmp
shll
std
mov
mov
pop
mov
mov
push
push
sub
js
movsb
cmp
mov
ds
cltd
cmp
into
sub
ds
aaa
dec
lret
sub
xor
aaa
negb
xchg
adc
jb
loope
jbe
dec
sbb
push
or
test
dec
jne
mov
cmp
out
stos
mov
inc
inc
cmpsl
or
sbb
xorb
inc
imul
shl
rcrb
call
popf
sahf
dec
add
or
aas
lods
mov
lret
out
jo
cmpsb
push
xor
mov
les
gs
mov
xchg
insb
mov
mov
sub
inc
cmp
outsl
repnz
xchg
ret
fwait
pop
lcall
pop
push
lds
adc
lds
sahf
sti
nop
sub
incb
in
test
mov
cmp
ficoms
push
xor
xlat
push
imul
pop
cmp
aas
lds
and
sbb
cs
addr16
xor
rolb
lcall
scas
cmp
enter
stc
mov
test
cmp
cmp
or
insb
mov
insl
sub
pop
add
pop
lea
xchg
dec
rorl
xor
in
jae
mov
sub
mov
or
dec
cwtl
mov
sbb
dec
cwtl
or
sbbb
lods
aad
inc
push
fiaddl
dec
add
sub
nop
pop
les
sahf
dec
pop
mov
inc
ret
int
jle
jg
cmp
dec
fcmovbe
mov
leave
inc
add
mov
mov
testb
inc
fs
mov
daa
fstps
frstor
in
pop
ficompl
repz
in
pop
jmp
andb
jg
mov
das
sbb
pop
lahf
fidivs
jne
push
enter
fsubrs
data16
int
mov
jb
ds
fsubr
inc
inc
jbe
xchg
aas
imulb
aaa
jne
fs
cmp
scas
gs
out
pop
cld
fidivl
push
ret
xor
xchg
push
popf
mov
aaa
rclb
pop
push
mov
aaa
sub
addr16
cmp
loopne
pop
dec
int3
aam
scas
int
push
mov
jmp
push
lahf
shl
xor
pop
enter
jecxz
pop
fistps
push
jp
movsl
and
out
xorb
js
push
lods
mov
lret
call
enter
outsb
fldz
push
add
mov
inc
mov
gs
test
push
cmp
stos
and
je
lock
shlb
xchg
insl
mov
sbb
xchg
cmp
fists
fistps
mov
fcmovnbe
xor
dec
jbe
scas
int3
int3
dec
dec
dec
push
incl
cmpsb
lahf
mov
push
pop
movsl
outsb
gs
mov
insl
cwtl
imul
or
cwtl
add
ja
out
push
enter
aaa
mov
lret
xor
das
adc
cmpsl
iret
pop
mov
iret
jbe
sahf
dec
ret
jae
fs
jg
movsb
fbstp
adc
jle
scas
jo
inc
js
leave
repnz
mov
orb
lahf
jl
inc
aas
in
movsb
lret
cvtps2pi
adc
std
push
lahf
in
loope
or
pop
xchg
push
add
push
lcall
cmp
mov
push
mov
mov
or
pop
aas
cmc
decl
imul
pop
cld
mov
lahf
mov
jmp
adc
mov
mov
cld
sbb
push
sbb
cmp
movsb
lea
xchg
inc
or
aad
cmovle
xlat
pop
fldt
xlat
mov
fwait
ret
dec
mov
ror
sub
jmp
dec
adc
loopne
jnp
mov
push
int
mov
inc
xchg
sahf
lahf
ss
cmp
leave
mov
or
and
fisttpll
or
jno
mov
pop
jns
sahf
pop
imul
ds
jo
adc
lds
ja
dec
out
cmpsb
in
jp
and
push
repz
roll
xlat
xor
jle
fcmovne
outsb
into
dec
scas
les
rolb
pop
xor
lret
lahf
ret
das
or
dec
pop
negl
xor
jecxz
xor
sahf
mov
jno
xlat
pop
mov
adc
or
adc
sahf
mov
lret
mov
push
sarb
call
aas
push
cli
dec
aas
jne
sarb
daa
add
ds
cmp
popf
cmp
cmp
mov
add
ret
or
dec
adc
adc
push
sbb
jecxz
sti
mov
aas
outsl
scas
xchg
cli
rolb
pop
iret
and
cmpl
lahf
jecxz
dec
out
fdiv
add
inc
inc
sbb
test
and
jle
arpl
pop
xchg
out
inc
std
xor
adc
xchg
insb
sbb
cld
mov
jbe
notb
cltd
add
ljmp
ret
je
jno
scas
outsb
lock
or
ljmp
xchg
jl
adc
loopne
aad
cs
push
scas
or
loopne
fbstp
mov
pop
fistpl
jns
and
inc
sub
sarl
and
out
or
negb
outsl
cmp
mov
ja
into
xchg
push
mov
add
add
push
pop
inc
insb
cmp
pop
cmc
ljmp
xchg
cli
lahf
push
push
jae
mov
mov
loopne
out
jnp
pop
ret
lahf
out
arpl
icebp
bound
cmp
add
loope
jo
xchg
ljmp
ss
sahf
fcompl
adc
pushl
std
xor
mov
pop
mov
xorb
pusha
aaa
or
xlat
add
jae
call
pop
icebp
imul
into
pop
mov
pushf
idiv
inc
adc
cld
add
enter
out
xchg
int
xlat
mov
push
jae
mov
std
je
int3
aas
add
pushf
push
mov
outsb
ret
bnd
push
push
xor
xchg
cmc
mov
or
out
sahf
int
push
push
incl
dec
lcall
lock
aad
dec
push
xchg
push
repnz
ljmp
mov
mov
or
add
test
cwtl
shlb
loop
ret
mov
push
scas
mov
mov
cmpsl
adc
sbb
and
ljmp
add
ret
inc
repz
leave
hlt
sahf
divb
mov
xchg
ucomiss
lahf
pushf
xchg
insl
cmp
add
inc
cli
sahf
xor
or
mov
dec
push
in
xchg
outsl
jle
cmp
outsb
pop
cmc
loop
negl
push
dec
sub
ficompl
xor
movb
nop
mov
push
int3
sub
mov
mov
dec
nop
outsl
aam
int
jg
push
loop
leave
push
test
xor
into
mov
mov
pop
lds
movsl
lahf
inc
hlt
xchg
inc
hlt
dec
sbb
das
jbe
dec
stc
ret
adc
add
mov
mov
je
sbb
pusha
mov
xor
adc
ds
fstpl
iret
loope
jb
les
idiv
rcr
lods
sahf
incl
mov
xor
xchg
cli
outsl
dec
mov
aas
inc
test
jne
xchg
sbb
inc
cmp
mov
lods
sub
jnp
push
and
and
sub
pop
repnz
icebp
fs
loope
insl
sub
inc
pop
or
or
mov
fwait
sbb
imul
lds
mov
add
mov
push
xchg
pop
addl
rclb
or
jg
mov
xchg
or
xor
jg
mov
mov
outsb
mov
dec
mov
fstpl
adc
mov
gs
mov
mov
xchg
xor
mov
int
mov
lret
in
movsb
pop
adc
or
mov
add
ret
push
insl
popf
mov
jl
dec
pushf
and
sahf
test
and
sbb
jg
jmp
fildll
mov
fxam
add
jne
push
mov
lods
test
xchg
mov
adc
adc
scas
add
and
cmp
push
dec
movb
sahf
xchg
jbe
lahf
sub
iret
mov
ja
aas
add
loope
cmp
scas
call
mov
enter
inc
dec
xchg
adc
inc
and
pop
dec
mov
pop
stc
xchg
fbstp
add
scas
aas
into
ss
cld
popa
jb
jbe
or
mov
mov
repnz
pop
hlt
hlt
sarl
sti
rorb
pop
jbe
inc
dec
stos
rcll
mov
sti
lods
jge
mov
fmuls
ja
push
and
adc
mov
xchg
cli
xchg
ds
cli
je
adc
jno
inc
cmpsl
push
lahf
xlat
mov
xchg
lret
imul
leave
stos
sbb
cmp
cmc
ljmp
inc
aaa
lods
je
mov
cld
jne
adc
in
pop
jmp
test
xorb
leave
sub
ret
lret
sbb
xor
dec
mov
inc
sbb
pop
cmc
in
xor
outsl
cmp
cli
inc
jecxz
xor
sub
sub
out
push
pusha
or
out
lahf
mov
fists
loopne
insl
or
rolb
cmp
lcall
dec
mov
enter
mov
mov
in
loope
ficompl
add
push
sub
ret
inc
lahf
fcmovnbe
mov
push
lods
ret
pop
outsb
sub
push
fimull
cmp
push
fs
mov
scas
cmp
pop
cmp
inc
cmp
jecxz
pop
xchg
insb
mov
in
sub
cmc
sahf
xchg
pop
scas
sbb
push
std
xlat
stos
pop
and
adc
adc
dec
les
adc
mov
push
repnz
movb
adc
notb
add
lock
or
into
jecxz
dec
addr16
and
out
addl
and
or
cmp
push
push
das
aas
aas
cmp
ljmp
push
and
mov
lods
out
fsubrl
xchg
mov
cmpsl
adc
imul
clc
pushl
mov
sbb
push
int
lret
pop
dec
test
pop
mov
or
sub
xchg
sti
xchg
fs
es
lcall
inc
ret
cltd
push
mov
test
inc
or
dec
out
dec
adc
jmp
scas
add
stc
jne
rorb
sbb
lods
mov
leave
mov
addb
or
inc
sbbl
add
popf
je
ja
mov
dec
fisttpll
fbld
pushf
leave
or
lods
lds
je
fcomi
rolb
mov
int3
ljmp
mov
push
loopne
dec
outsl
jp
push
lahf
jp
mov
inc
mov
repnz
inc
and
sbb
push
jo
jae
xor
lods
mov
int3
movsb
arpl
pop
dec
mov
fildl
lcall
js
pop
pushl
sbb
add
inc
add
xor
push
mov
or
test
dec
fdivp
lahf
orb
aaa
add
ror
lahf
pusha
outsb
cli
adc
mov
js
add
je
aas
push
jne
stc
adc
mov
adc
inc
jne
out
sbb
orb
and
mov
rol
int
or
hlt
and
icebp
movsb
movsb
popf
fdivr
xchg
addl
dec
push
test
sub
mov
data16
cltd
dec
jbe
loop
outsb
lock
das
pop
push
mov
int3
jne
shll
loopne
test
pop
mov
push
inc
jbe
ret
test
mov
cmpw
mov
les
jp
mov
mov
enter
or
mov
iret
push
rorb
int
leave
shll
add
push
lds
rclb
sub
push
ljmp
cmp
jae
sarl
adc
inc
out
mov
mov
mov
push
and
or
int3
sahf
scas
lcall
sub
pop
push
xchg
jecxz
jno
iret
jge
add
cmc
les
jno
or
push
pop
call
imul
iret
loop
lret
gs
call
aaa
into
dec
fstl
adcl
mov
jae
mov
in
fcompl
lahf
ja
push
arpl
jns
inc
in
xchg
lahf
sub
mov
dec
fiadds
xchg
mov
stos
rol
fistl
cmpsb
mov
cwtl
or
jmp
push
std
imul
fcompl
sbb
jno
add
jae
daa
notl
pop
dec
cmp
icebp
adc
push
fdiv
mov
push
cmpsb
test
js
dec
dec
push
or
sahf
ss
stos
into
divl
xchg
xor
popa
or
and
sahf
out
jnp
gs
adc
xchg
lcall
cmc
stos
cs
push
xchg
xchg
je
in
std
dec
subb
shl
sub
and
scas
and
pop
jmp
sbb
cld
mov
add
push
sub
fucom
lahf
nop
adc
shrl
je
lods
cmc
dec
jp
test
inc
mov
ror
je
out
or
out
cld
je
add
into
dec
mov
sbb
movsb
mov
push
fs
inc
push
cmp
add
push
dec
or
inc
out
in
lcall
and
xchg
mov
inc
cmp
repz
xor
lea
bound
sahf
repnz
int
mov
mov
mov
or
pop
push
ret
jb
gs
sub
stc
xor
mov
inc
jne
xor
and
add
xchg
popa
je
xor
cmpsl
jb
idivl
cmpl
les
aas
iret
jle
jb
ljmp
sub
or
mov
into
movsb
ds
and
or
or
insb
repnz
dec
adc
mov
test
mov
mov
gs
aaa
test
jl
sahf
mov
xor
jb
inc
add
loop
fbstp
ljmp
cwtl
pop
lods
into
mov
mov
sub
scas
data16
lds
popa
dec
jl
mov
or
enter
ljmp
loope
mov
clc
aas
movsb
sbb
je
pop
jg
rolb
movsl
inc
or
pushl
cmp
arpl
push
cmp
mov
sarl
dec
cmp
jge
sbb
mov
jg
setle
pop
insb
fdivr
pop
nop
leave
mov
sub
inc
sbb
push
ror
push
jl
cld
loope
push
mov
mov
push
nop
push
cmpsb
push
xchg
imul
add
mov
fcomps
ficoms
fdivrl
ss
sahf
xchg
push
test
lahf
xlat
or
jl
stc
jecxz
xchg
dec
ljmp
aaa
fisubrs
cmp
push
xchg
cmp
leave
stos
add
popf
jl
jb
data16
jp
test
push
popf
jnp
inc
sub
out
sahf
pop
dec
dec
arpl
lcall
adc
cltd
dec
rorb
xchg
decl
jp
dec
and
xchg
xchg
push
pop
mov
nop
aas
decl
sub
xchg
stos
mov
ds
sti
or
add
fidivl
cmc
cld
aas
int3
cli
or
imul
mov
enter
push
sub
adc
in
adc
push
mov
nop
dec
in
in
fsubl
jo
xchg
mov
cli
in
push
stc
cmp
mov
xor
mov
mov
fdivl
mov
or
sbb
jle
or
cmp
sbb
idiv
mov
add
cli
jg
dec
subb
inc
push
xor
xchg
popa
negl
xor
arpl
and
ss
movsl
enter
les
or
sbb
movsb
in
xor
jecxz
push
push
movzwl
pop
int3
xchg
jne
shll
xchg
mov
xor
or
scas
cmp
push
aaa
lahf
lahf
sbb
add
adc
adc
sahf
add
jp
jns
jle
int
stos
add
aas
adc
dec
inc
ja
jb
jns
add
lahf
cs
lret
jb
dec
cmpsb
mov
mov
cmp
or
shl
add
push
mov
scas
jo
mov
pop
adc
jp
add
cwtl
fimull
ret
mov
mov
andl
or
lods
cwtl
js
rclb
mov
push
push
shrb
int3
inc
push
dec
mov
and
xchg
pop
mov
les
cs
movsl
mov
push
add
or
fcom
repnz
jno
pop
ss
jg
sbb
push
in
dec
fildl
enter
hlt
rcr
cmp
mov
xorb
mov
dec
inc
fsubp
or
imul
loop
jae
daa
rcrb
mov
daa
jecxz
mov
movsl
clc
and
xor
leave
jno
stos
push
add
jne
mov
adc
sahf
pop
pop
lret
sahf
cmc
sub
xchg
inc
es
adc
ljmp
dec
inc
adc
add
mov
stos
pushl
mov
sbb
pop
lods
lahf
das
xchg
imul
pop
pushl
mov
aas
mov
jae
test
out
pop
in
xor
addr16
das
dec
xlat
xor
aad
push
sub
push
notl
sub
xlat
repnz
repz
xchg
leave
mov
into
pop
cmp
pop
shrl
cmpsb
mov
hlt
push
inc
gs
push
dec
push
sub
inc
lods
lea
add
fimuls
push
in
sarb
inc
lret
loop
inc
jp
cmp
arpl
dec
jne
fcmovnb
cmp
fnsave
in
int3
outsb
loop
lahf
jae
push
mov
jo
mov
inc
add
ret
cmp
xor
out
sub
sarb
and
aas
mov
mov
jbe
push
sub
dec
mov
push
ror
mov
pusha
iret
sahf
lcall
lret
xor
lds
icebp
cli
pop
pop
notl
stos
adc
push
adc
testl
insb
repnz
mov
aas
mov
dec
sbb
out
incl
gs
and
sarl
mov
and
sahf
test
push
les
push
shlb
push
clc
cwtl
mov
adc
stos
add
xor
dec
test
jo
loop
cmpsl
xchg
cmp
push
inc
sub
in
subl
out
roll
ljmp
add
cmp
add
push
pop
dec
mov
and
imul
in
jle
push
enter
leave
push
cwtl
je
in
lcall
stos
hlt
lods
jle
ret
sbb
lret
insb
dec
shll
int
ja
aam
sbbl
in
pushf
lret
stc
int
push
bound
ljmp
push
sbb
movsb
stos
rolb
cmp
hlt
mov
adc
or
pop
push
pop
adc
incl
jp
mov
or
leave
sbb
mov
inc
ds
aaa
stos
push
subl
mov
push
jecxz
pushl
lahf
test
sbb
adc
in
mov
and
ja
ds
mov
mov
mov
dec
xchg
push
dec
or
mov
dec
cmp
dec
pushf
addr16
and
lods
mov
lahf
repz
pop
fucomi
imul
mov
fcmovnb
sub
mov
lret
lahf
int3
xchg
scas
or
sbb
dec
and
inc
pop
jecxz
inc
lahf
movsb
clc
call
jnp
fstl
cwtl
idivb
push
push
scas
dec
cmp
loopne
inc
push
out
stos
push
jbe
jecxz
jnp
aad
sbb
push
lret
cmp
add
loopne
inc
cmp
repz
xchg
mov
dec
and
pop
test
dec
mov
out
pop
sbb
popa
cmp
icebp
cli
adc
mov
jmp
sahf
fisttpll
adc
mov
sbb
ds
ret
mov
dec
jecxz
jo
mov
lods
rcl
pop
test
insl
cs
push
xor
push
pop
inc
xchg
xchg
aad
cli
push
mov
push
cmpsl
cli
aas
lahf
mov
imul
dec
jnp
and
insb
loopne
je,pt
inc
push
add
pop
ret
dec
or
std
mov
mov
pop
cmpsl
dec
fdivr
jle
push
fistps
mov
cmp
and
or
jg
adc
daa
xchg
cmpsb
sub
pop
leave
imul
push
mov
xor
push
adc
fimull
clc
lods
mov
adc
mov
das
loopne
pop
out
adc
adc
inc
out
jo
and
sbb
bound
mov
nop
gs
cld
cmp
aas
and
xchg
testb
push
lea
loop
out
clc
mov
dec
mov
sub
dec
push
arpl
cmp
mov
lahf
inc
daa
ljmp
mov
pushf
cmp
xchg
add
push
imul
cltd
rol
mov
xchg
xor
pop
outsl
xor
imul
xchg
neg
jno
insb
addr16
jg
xor
icebp
pop
fdivs
sbb
mov
add
loope
lds
movsb
int3
out
jno
and
sahf
ficoml
test
lock
loop
fldt
sub
mov
push
cld
adc
cmp
shrl
fidivs
or
jg
xchg
repnz
jge
bound
mov
je
inc
and
jg
aaa
mov
inc
cmp
bnd
and
test
in
pop
fisubrs
adc
std
xchg
mov
jbe
mov
js
sahf
ret
mov
pusha
ljmp
cli
loop
loopne
test
push
jae
and
push
outsl
imul
xor
lds
sahf
fsub
jne
ss
mov
push
dec
into
mov
xor
mov
outsb
push
sahf
adc
daa
lds
cltd
in
mov
add
add
mov
es
inc
sahf
push
pop
mov
rolb
decl
cmc
insb
pop
push
es
ds
ficoml
mov
cmp
outsl
arpl
rep
sbb
clc
cmpb
sub
lock
cmpsb
inc
pop
adc
add
push
jb
test
int3
insb
imul
clc
mov
lcall
insl
imul
cmpsl
into
pop
inc
dec
ss
and
mov
xor
inc
sub
mov
imul
sahf
addl
stc
test
lea
ds
ja
push
outsb
lods
inc
stos
and
mov
les
or
ljmp
pop
ss
push
push
lahf
xchg
or
pop
inc
dec
in
pop
mov
icebp
mov
leave
xlat
sahf
sbb
rorl
out
jge
sahf
inc
and
mov
ss
sbb
orl
movsb
mov
xor
pop
outsl
das
cltd
outsb
xor
dec
jp
inc
push
jae
push
cmp
lea
in
popa
mov
addr16
cmc
orl
pop
dec
lcall
jns
in
repnz
jecxz
mov
hlt
call
xor
cwtl
jo
sbb
pop
int3
mov
push
pop
pop
jge
int
pop
adc
rcrb
jl
fiadds
or
mov
adc
jae
cmc
jg
pop
daa
fs
inc
mov
sahf
xchg
and
shlb
std
sbb
rol
idivl
sti
in
ds
ret
pop
mov
lahf
sahf
testl
mov
xor
push
movsb
cwtl
jmp
scas
jl
jo
out
dec
stc
fstpt
sub
sti
mov
pop
mov
daa
mov
inc
and
sub
or
mov
hlt
and
fistpl
ret
sub
movsb
call
xlat
repz
pop
pop
setge
lahf
add
xchg
clc
xor
mov
stos
xchg
push
enter
mov
int
repz
sbb
sbb
dec
pop
mov
sarb
adc
fwait
or
decl
repnz
ja
jno
cltd
stc
inc
ret
and
xchg
sub
add
out
shlb
mov
push
int
nop
repnz
mov
mov
testb
rorl
dec
inc
mov
scas
xor
push
mov
sbb
in
mov
xchg
sbb
mov
aas
leave
shrl
push
mov
popf
repnz
or
and
push
or
push
push
pop
adc
mov
lods
movsl
ljmp
push
lds
test
push
push
test
clc
xchg
and
or
jae
sbb
dec
adc
sub
jl
mov
jg
ja
mov
cs
cmp
pop
ljmp
and
or
push
push
inc
rolb
test
adc
xchg
stc
adc
negb
lret
cwtl
jnp
fdivrs
cwtl
sahf
in
lcall
insb
std
aad
enter
imulb
mov
adc
loopne
pop
ret
cmp
lds
sahf
outsl
jne
dec
int3
icebp
mov
sbb
lret
jecxz
mov
iret
ret
mov
sbb
lahf
stos
push
xchg
lcall
stc
sbb
jp
mov
std
cmp
lret
arpl
inc
inc
or
jb
cmp
mov
cmp
lahf
and
sbb
inc
arpl
es
out
pop
jo
lds
shll
mov
hlt
lcall
sub
adcl
out
lods
mov
addr16
sahf
in
jp
movsl
fwait
pop
and
inc
or
mov
jo
xor
stos
jb
imulb
mov
or
mov
test
push
fistpl
scas
lcall
push
sbb
ficoml
fdiv
push
fcoml
adc
insb
adc
add
mov
mov
xchg
lea
ja
test
shll
sbb
mov
mov
dec
or
jecxz
insb
add
push
mov
ret
jne
arpl
scas
mov
sahf
push
outsb
adc
push
int3
out
mov
bound
add
mov
mov
add
fcomps
sub
dec
push
icebp
xchg
mov
lods
cmp
mov
and
mov
cmc
sahf
fisttpll
jp
stos
inc
icebp
clc
mov
pop
iret
xchg
into
lret
push
mov
dec
adc
adc
xor
pushf
pusha
addr16
push
mov
aas
lods
dec
or
enter
pop
loopne
sti
es
cmp
loope
sub
push
adc
or
push
push
jl
shlb
cwtl
xor
out
shlb
mov
cmpsb
aad
mov
cmp
dec
js
data16
cld
test
mov
pop
xlat
push
jne
dec
enter
mov
mov
mov
xor
fistps
divb
adc
mov
lret
jle
sbb
in
cmp
xchg
mov
mov
aam
fs
push
stos
xchg
inc
inc
mov
ficomps
mov
mov
add
ss
dec
sbb
push
sti
js
out
push
adc
jne
in
inc
mov
stc
popf
jle
add
xor
dec
mov
mov
mov
ja
xchg
xchg
mov
dec
fmull
mov
pop
out
pop
mov
cld
xlat
leave
mov
popa
mov
mov
out
enter
mov
les
lds
push
shrl
lods
testb
testb
ss
int
pop
mov
xchg
mov
push
add
fidivrl
mov
cmpsb
jns
xchg
cwtl
mov
lret
mov
cmp
pop
mov
sarl
lods
fsubs
test
lret
popf
call
jbe
inc
js
divb
std
mov
fisttpll
lock
hlt
js
ss
mov
mov
popf
scas
sbb
and
pop
xchg
mov
fisubl
xorb
push
in
xlat
add
out
les
repnz
shrb
ss
cmp
pop
adc
mov
aas
jp
sub
add
xlat
popl
ds
repz
js
xor
jbe
jge
test
loope
addr16
mov
in
int
ss
jnp
mov
out
fwait
idivl
sub
xchg
push
test
add
mov
mov
dec
mov
cmp
inc
xchg
mov
data16
push
cmp
scas
in
enter
int3
mov
ret
mov
sub
mov
sub
inc
addb
xchg
rolb
neg
inc
mov
adc
iret
les
or
sbb
xchg
push
xchg
sahf
push
mov
sub
dec
daa
mov
mov
mov
insb
sub
or
inc
jle
push
data16
xlat
xchg
divl
inc
lea
push
push
mov
push
sub
jns
aad
fstpl
aaa
jmp
leave
mov
push
xchg
push
and
fwait
xchg
mov
ds
cmp
les
push
not
in
mov
sbb
imul
cmp
cmpb
cmp
sub
int3
mov
jle
mov
push
push
js
mov
mov
and
and
add
mov
add
aas
push
xchg
outsb
add
cli
jno
imul
dec
pushf
notb
dec
push
aaa
xchg
adc
or
leave
pushf
mov
sub
sub
mov
mov
mov
leave
xchg
add
nop
arpl
and
mov
sub
mov
push
fists
pop
jg
pop
fwait
mov
fdivrl
pop
push
iret
mov
cwtl
mov
lcall
daa
int
aam
mov
and
mov
push
cltd
dec
mov
push
mov
call
push
js
out
sub
mov
pop
dec
dec
ds
loope
mov
push
jbe
jo
add
jb
sub
xor
fcomip
mov
test
cmpsl
lret
and
sarb
xchg
ss
mov
lahf
aaa
imul
cmp
sbb
ljmp
adc
or
mov
cmc
stos
lods
mov
sahf
inc
mov
lock
inc
sub
sub
mov
out
and
add
jge
cmc
jle
inc
mov
sahf
dec
fiadds
mov
cmp
in
leave
mov
das
or
fcmovb
or
dec
mov
or
mov
out
xor
cmpsb
iret
jge
jge
int
pop
mov
push
or
rolb
jle
enter
dec
cmpsl
mov
aam
fldenv
sub
jmp
enter
loop
pop
in
js
lea
dec
gs
das
repz
jbe
sub
test
shlb
rclb
mov
inc
inc
xor
mov
imul
mov
dec
sahf
bound
jp
adc
jae
push
dec
outsb
mov
icebp
mov
xor
lret
fnsave
fcoms
inc
jge
std
mov
sarl
sbb
sbb
mov
mov
scas
popf
shll
inc
test
inc
dec
pop
xchg
enter
sbb
sub
cmpsb
pushf
mov
push
orl
lock
pop
add
clc
mov
mov
cmp
mov
in
mov
mov
sub
movsb
faddp
or
mov
add
inc
push
pop
mov
rcll
xor
adc
mov
sti
mov
or
lcall
cmp
loope
fidivrl
jns
enter
mov
vandnpd
negb
mov
arpl
fcos
xchg
sbb
push
sub
mov
and
dec
add
aas
ds
lret
xor
and
call
xor
push
cs
and
subl
push
sar
lret
int
enter
add
movsb
mov
push
ja
testl
inc
pop
mov
inc
ja
xchg
scas
lcall
dec
adc
or
les
fcmove
cwtl
es
and
or
cmp
test
dec
jp
add
test
out
mov
mov
arpl
repz
jge
mov
mov
dec
sti
ds
jae
inc
adc
sub
movsb
loopne
mov
addl
ljmp
mov
jecxz
fldenv
mov
in
adc
push
jg
sub
movsl
mov
das
push
mov
sub
ficompl
mov
mov
in
cmp
jnp
inc
ffreep
fsubrp
inc
push
mov
sub
adc
repz
negl
adc
xor
ss
add
mov
ss
outsb
mov
mov
inc
stc
movsl
mov
add
or
mov
ficoml
in
jge
inc
jne
sub
xor
repnz
repz
loop
add
mov
data16
sete
cwtl
pop
mov
nop
scas
xchg
lea
mov
scas
fldenv
fsubr
cmpsl
mov
mov
or
cmp
mov
cmp
jl
lcall
xchg
push
mov
in
jno
scas
fld
add
add
dec
fldl
jbe
mov
scas
cmp
in
jle
mov
lea
sarl
mov
jbe
and
loope
pop
mov
xlat
lahf
or
sub
mov
and
lods
fs
test
cmp
clc
mov
aam
mov
cmp
push
dec
jbe
xchg
insb
add
in
inc
data16
mov
das
jecxz
xchg
cmp
cs
cmpsb
push
rcl
das
mov
ss
je
aaa
mov
adc
jge
vmovdqu
pop
push
gs
dec
dec
inc
outsb
lcall
push
cmc
inc
cmp
mov
test
gs
mov
dec
jg
add
dec
fsub
xchg
aas
mov
scas
lahf
scas
push
fwait
into
sbb
xor
jle
enter
popf
enter
jmp
mov
xchg
dec
adc
mov
mov
icebp
push
fdivs
cltd
jge
scas
and
add
pop
add
dec
push
enter
push
jb
stc
mov
pusha
jbe
mov
jle
adc
stc
ret
or
in
enter
mov
push
fidivrl
movsb
cmp
jae
push
iret
loop
or
sub
lret
movsb
stos
call
fidivl
mov
fcmovnbe
inc
mov
outsl
sub
mov
fstps
mov
xchg
aam
add
jmp
and
aaa
dec
jno
lret
mov
sbb
repnz
or
push
inc
dec
ficomps
scas
xchg
lock
adc
mov
shrl
cmpsb
mov
pop
sbb
jmp
mov
jns
cli
mov
push
imul
lea
inc
daa
or
ficompl
mov
push
push
push
pop
movsl
mov
fstl
in
test
popf
stc
mov
cmp
dec
sbb
outsl
cld
xchg
push
or
lret
cmc
xchg
mov
ljmp
sahf
fs
stc
mov
ss
rcrl
enter
mov
in
or
sbb
ss
push
mov
rcrb
arpl
xchg
fiaddl
in
mov
mov
mov
mov
lock
in
int3
mov
fldenv
cmpsb
and
adc
mov
jbe
enter
test
mov
mov
and
dec
aam
dec
mov
sub
mov
sub
cmpsb
fsubrs
mov
insb
cmc
addr16
pop
test
fimull
mov
popf
xor
push
pop
mov
xchg
xchg
mov
inc
imul
in
insl
mov
stos
clc
pop
mov
inc
mov
jbe
sti
mov
and
or
loopne
inc
aad
push
xor
movsl
mov
adcb
leave
xchg
jmp
mov
cmp
adc
faddl
cmp
mov
imulb
ja
sub
or
inc
mov
ret
inc
pop
mov
and
testb
test
cli
mov
add
dec
loop
jae
out
inc
insb
mov
adc
mov
imul
mov
pop
loope
in
test
mov
mov
mov
sti
add
add
pop
adc
sub
push
adc
insb
fidivl
js
mov
sar
data16
fcompl
add
stc
mov
int
aam
push
sub
loop
mov
mov
enter
ja
mov
mov
out
cmp
push
push
dec
into
mov
xchg
fisttpll
and
lock
sub
das
test
mov
dec
subb
adc
xor
daa
aaa
lods
enter
test
inc
in
pop
pop
mov
movsb
imul
cmp
push
adc
sbb
out
scas
fcoml
xchg
into
push
jns
stos
add
jnp
mov
inc
mov
xor
cmp
lods
push
je
std
xchg
add
dec
and
mov
in
xchg
movsb
mov
dec
mov
sub
mov
enter
cmp
jecxz
xlat
mov
lahf
or
sub
ficompl
movsb
pop
mov
dec
mov
int3
push
repnz
or
and
aad
push
bound
push
mov
push
cmpsb
outsb
shl
push
shl
push
add
push
push
or
push
push
adc
push
sbb
push
sub
push
dec
push
jp
mov
sar
jmp
cli
cmp
and
cs
xor
ds
inc
cwtl
adc
cmp
sbb
popf
jge
popf
scas
xchg
mov
xchg
aaa
xchg
cmp
popa
cmpsl
push
jge
mov
mov
adc
and
aas
fldl
shl
cli
jg
xchg
sub
pusha
scas
jge
xchg
sub
sub
cs
xor
dec
xor
jo
shl
aad
loope
hlt
push
std
aam
push
or
pop
push
sub
push
push
push
push
mov
sbb
xor
imul
sbb
sub
sahf
xchg
jl
andb
push
lds
mov
cmp
mov
testl
xor
sub
sub
sub
cs
inc
xor
xor
xor
xor
xor
xor
rcr
in
std
aaa
mov
pop
out
and
xchg
push
sub
cs
push
icebp
mov
repnz
mov
xchg
mov
hlt
sub
sub
sub
cs
xor
xor
xor
xor
xor
xor
xor
xor
rol
cmc
push
aad
in
icebp
aam
push
sbb
cmp
pop
fisttps
and
adc
and
rclb
out
push
inc
enter
dec
adc
pop
cmc
pop
les
addb
lcall
dec
add
jmp
lcall
orl
lcall
out
lcall
sub
repz
std
sbbb
mov
les
out
add
inc
addl
call
lods
or
imul
cmp
xlat
bound
clc
popl
xchg
adc
scas
jnp
lods
mov
out
jmp
xacquire
imul
cvttps2pi
cs
xor
jp
lcall
mov
sub
pop
pop
jo
xchg
jbe
hlt
into
lcall
lahf
sub
xchg
scas
int3
cmc
sub
sub
sub
fbstp
out
in
mov
ljmp
mov
cmp
mov
enter
imull
jns
mov
cltd
sbb
test
jnp
subb
out
lcall
push
stos
pusha
scas
insl
pop
test
loop
stc
sub
add
dec
les
mov
mov
cmc
sbb
outsb
les
sub
dec
ds
pop
lock
mov
icebp
repnz
add
inc
mov
clc
dec
cmp
pop
jb
pop
js
test
ljmp
loop
mov
call
mov
lock
icebp
push
repnz
repz
fsubr
push
add
inc
sbb
push
fs
jo
jne
jp
sbbl
pop
xchg
ss
bound
pusha
icebp
icebp
repnz
add
pop
icebp
repnz
hlt
pop
cmc
and
cmp
dec
cmc
push
jle
mov
int3
rcl
push
out
or
aad
push
pop
push
jle
xchg
outsb
shr
jne
sub
cs
bound
rclb
in
sbb
sub
lds
add
push
test
bound
jp
addb
test
jns
in
ret
pop
shrb
jns
mov
cltd
repnz
jg
or
and
cmp
push
scas
pop
scas
bound
pop
jb
jp
orb
xchg
mov
push
mov
mov
rcl
push
fcmovbe
loop
ljmp
lds
test
test
test
test
test
test
dec
test
pop
test
push
loopne
popf
andb
popf
mov
xchg
mov
xchg
ficoml
idiv
mov
mov
mov
mov
mov
mov
mov
push
push
outsb
xor
xor
xor
xor
xor
xor
sbb
into
pop
shrb
jns
mov
cltd
loop
out
ljmp
test
sub
ss
push
test
pop
cmp
subb
scas
xchg
scas
xchg
ljmp
fstp
std
ficomps
ljmp
popf
push
popf
es
cs
xor
ds
inc
popf
inc
popf
dec
popf
dec
popf
pop
fwait
jle
sub
test
sahf
test
mov
ljmp
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
cld
xor
xor
xor
xor
xor
xor
xor
xor
xchg
pop
mov
xchg
mov
negb
jge
fwait
add
test
dec
test
push
test
bound
jp
lcall
test
mov
pop
ret
jns
mov
cltd
test
or
push
jg
sub
push
scas
pop
scas
pop
scas
bound
sahf
out
outsb
mov
push
stos
xor
xor
xchg
cmc
sub
cs
bswap
and
cli
jle
push
push
or
push
adc
push
sbb
push
and
push
push
dec
pop
add
subl
popf
jle
xchg
popf
mov
leave
les
ret
mov
lock
repnz
hlt
shl
cmc
out
cmc
push
cmc
push
cmc
sbb
push
cmp
fwait
mov
test
jbe
jp
jle
subb
test
or
out
dec
sarb
fidivrl
mov
popf
mov
ljmp
or
cs
andl
mov
test
push
pop
dec
loop
fsubp
repnz
ljmp
inc
xor
scas
ss
inc
inc
pop
jb
popf
push
popf
push
popf
pop
popf
pop
popf
jb
xchg
popf
lcall
popf
stos
popf
scas
popf
mov
mov
std
out
sbb
sbb
test
push
test
es
push
test
jl
scas
data16
outsb
mov
mov
mov
mov
mov
out
ljmp
add
push
adc
cmp
andl
sbbb
dec
xchg
stos
jg
mov
loop
out
push
out
mov
mov
mov
test
mov
mov
mov
mov
mov
mov
out
in
icebp
xlat
repnz
hlt
lock
stc
clc
icebp
xor
int3
cmpl
arpl
lea
cmc
test
xchg
push
bswap
bound
shrl
ja
xchg
out
fnsave
ljmp
jmp
out
jno
jl
movsb
icebp
mov
repz
push
sti
aam
push
add
pop
push
or
push
adc
push
sbb
push
and
cmp
das
out
mov
stos
hlt
xlat
push
and
out
out
testl
test
call
das
into
mov
out
call
push
sub
cltd
rcr
in
cmc
push
dec
gs
sub
out
aad
inc
mov
cmp
xor
sti
out
hlt
dec
lock
push
rcll
pop
aam
push
arpl
addr16
imul
jae
ja
jnp
jg
orl
dec
xorb
dec
jge
stc
lret
pop
dec
sub
imul
fstps
lock
les
inc
sbb
xchg
aas
ret
out
negl
ss
mov
mov
sub
mov
js
cltd
shrl
std
inc
and
and
inc
addb
popf
repnz
sbb
xor
mov
push
out
dec
aam
dec
movsl
cmp
xchg
jmp
mov
xchg
sahf
dec
in
out
add
inc
adc
push
test
mov
pop
fcmovb
popa
cmpsb
adcb
mov
rcll
push
sub
cmp
mov
fs
aas
js
nop
mov
jmp
in
and
add
call
in
inc
dec
cmp
mov
out
out
push
lcall
lods
push
lock
adc
sub
pop
sub
mov
mov
mov
dec
outsb
inc
sub
or
stos
outsb
cmp
rcrl
repz
mov
repnz
pop
fcoml
jp
clc
cmp
or
and
xor
cmp
mov
cmp
andb
cmpsl
scas
decb
push
add
mov
aaa
jle
mov
sub
fmull
in
add
aaa
cmc
inc
fldl
or
addr16
test
or
dec
push
sub
imul
psrlw
cmp
mov
call
std
popf
pop
shr
jg
xchg
push
out
shr
sbb
rcrl
imul
pop
out
cld
lcall
push
dec
js
test
push
mov
fstp
std
negl
cmp
inc
popf
pop
popf
addr16
jnp
lods
mov
pop
push
xchg
sub
cmp
inc
scas
pop
scas
popa
fidivs
cmc
mov
insl
bnd
mov
leave
out
jns
imul
lcall
call
xchg
push
sbb
cmp
dec
jb
pop
cmc
gs
push
mov
ja
mov
jns
xchg
fldl
std
and
xchg
mov
data16
outsb
les
mov
xchg
lret
mov
sahf
push
ror
cmpsb
call
in
mov
ffree
mov
push
fmulp
fidivrs
loopne
es
out
mov
out
call
push
xchg
in
push
push
out
leave
push
cmp
es
mov
xor
add
fprem
pop
test
daa
cli
aad
dec
jle
cld
mov
cmpsb
lcall
mov
lahf
fsubrp
add
mov
push
jg
jp
xor
add
ss
daa
or
dec
dec
push
ds
data16
push
adc
jle
xchg
sahf
adc
push
dec
add
jg
jp
xor
add
fstps
imulb
push
dec
push
cmp
sub
dec
test
ja
subl
mov
or
push
sbb
fmul
push
add
mov
scas
sbb
adc
xor
push
push
data16
add
lds
test
sub
jae
pushf
int3
shl
filds
orl
repz
push
xchg
loop
fisttpl
adc
mov
fstpt
or
mov
sbb
mov
xchg
cmp
out
out
lock
fcmovnbe
cmp
jnp
push
test
mov
mov
mov
mov
mov
mov
push
pusha
xor
xor
xor
xor
xor
lcall
cmc
imul
cmp
mov
mov
mov
mov
mov
mov
out
out
lock
lret
jmp
popf
lcall
mov
mov
push
mov
xor
and
inc
test
js
call
jmp
sub
add
vmovsldup
sbbl
pushf
cs
mov
push
aad
dec
inc
js
dec
pminub
jb
jbe
mov
mov
push
mov
dec
in
jle
and
dec
push
dec
push
push
push
push
dec
pop
add
jg
pop
call
mov
out
mov
into
sbb
ja
adc
cwtl
sbb
mov
sub
dec
xor
jbe
jp
jle
xorb
aad
push
xchg
push
mov
shr
fcmovu
fdivrp
loop
fstpt
repnz
mulb
mov
jo
adc
mov
jg
outsl
mov
scas
sahf
call
push
sbb
xchg
bound
fs
xchg
xchg
and
mov
call
add
dec
jg
dec
dec
push
jmp
push
xchg
push
mov
mov
jae
adc
scas
cmpsl
scas
f2xm1
unpckhps
repz
xor
icebp
dec
add
inc
jnp
sbb
repnz
rorl
xchg
adc
dec
scas
pop
scas
imul
repz
dec
inc
je
cwtl
mov
in
pop
add
jns
cmpb
jb
lea
push
adc
les
insl
inc
xchg
jg
ja
pop
mov
loopne
cmpsl
in
jnp
es
in
mov
out
xchg
notl
add
imul
scas
pop
scas
sbb
daa
scas
sub
mov
xor
push
inc
xchg
shr
push
dec
pusha
js
fcomps
lods
or
xchg
push
push
popf
push
xchg
xor
xor
xor
xor
xor
sarb
rol
push
leave
aam
push
rcl
aad
fsts
push
loope
in
jmp
dec
xor
rcrl
cmpsb
rorl
dec
fstps
in
jmp
cmc
lcall
add
cmc
adc
xchg
out
adc
xchg
fidivrs
aaa
enter
cmp
inc
pop
jg
idivl
je
cmp
es
add
aas
dec
pop
pusha
push
pop
push
jge
lcall
or
test
inc
cmp
xchg
lods
mov
inc
mov
push
cwtl
mov
int3
jmp
dec
sub
insl
jno,pn
jne
jns
jge
xorl
cltd
test
movsl
test
mov
mov
mov
push
loop
in
xchg
push
xchg
rcrl
push
movsl
aad
push
lods
push
mov
mov
mov
std
lds
sarl
popf
fstps
dec
xchg
mov
mov
xchg
rcrb
cwtl
fcmovnbe
stc
int3
dec
dec
dec
pop
push
imul
aad
push
push
push
je
js
jl
inc
test
nop
test
loop
scas
call
icebp
sub
push
repz
sbb
push
xchg
mov
cs
add
ss
cmp
cmp
inc
test
movsb
xchg
mov
xchg
pop
lods
daa
out
repz
neg
lds
mov
xor
mov
adc
in
and
outsb
bound
outsb
insb
repnz
push
jp
jle
adcb
mov
dec
xlat
push
mov
lcall
lock
cwtl
clc
adc
aad
push
add
or
dec
adc
sbb
and
sub
inc
mov
loop
pushaw
cmp
in
jo
and
cld
lock
cmp
or
pop
test
or
add
leave
mov
push
js
xchg
xchg
mov
repnz
push
clc
aad
push
mov
push
lods
push
mov
mov
mov
cmp
int3
pop
sti
push
xchg
jge
fsubrs
sub
sub
push
pop
das
sbb
jle
mov
das
xor
repnz
sub
pushl
xchg
or
scas
ds
inc
scas
inc
scas
dec
repnz
push
cmp
pop
test
push
cli
jae
ret
jns
insb
push
roll
fs
loop
fmull
cltd
imul
push
push
hlt
stos
stos
jecxz
jmp
call
clc
imul
push
fsubp
fnsave
jl
orb
cmpsl
nop
scas
xchg
lock
jg
mov
xor
xor
add
mov
mov
out
pop
out
push
pushl
xchg
sub
xchg
ret
loop
fcomi
pop
lret
pushf
sbb
movb
scas
aas
scas
inc
scas
inc
sub
cmp
popf
pop
popf
jno
mov
mov
fistl
in
repnz
fcmovne
xchg
test
mov
mov
mov
cs
sub
add
call
pop
sbb
push
adc
shll
rolb
or
and
lret
jbe
dec
sub
je,pn
jns
pusha
cmpsb
clc
mov
xchg
xchg
repnz
cmp
aas
enter
cmpsb
cmp
cmpsb
xchg
stos
stos
scas
mov
or
hlt
clc
div
adc
js
jge
vpsrlw
icebp
enter
adc
sub
jo
fisubrl
mov
data16
xchg
sub
popf
sahf
fwait
cmpsb
pop
clc
push
dec
cli
and
push
xchg
dec
mov
mov
scas
push
loopne
mov
or
insb
into
int3
in
add
mov
test
inc
sub
mov
jb
fdiv
roll
fidivrl
sub
ss
test
push
sbb
mov
pop
lock
sbb
inc
add
inc
popf
jbe
lock
sub
lock
aaa
loopne
test
inc
xor
ror
repz
push
rcl
xlat
push
fcmovnbe
fisttps
loop
outsb
mov
mov
mov
cmpsb
call
rcrl
cltd
or
cmp
data16
sahf
cli
push
mov
mov
push
cmp
bound
fldt
add
pop
hlt
fcmovnu
and
sub
push
lods
xor
add
jmp
repnz
div
push
fnstsw
dec
ror
jbe
mov
shlb
xor
xchg
ljmp
out
popf
rcr
add
xor
add
outsb
pop
push
mov
pop
fimuls
add
cmpsb
fimuls
push
loopne
cmp
mov
push
in
lods
out
mov
scas
outsb
cmp
cmpsb
lret
dec
cmp
cmpsb
loop
push
sbb
data16
push
cmp
mov
out
cwtl
rcrb
mov
dec
sahf
adc
fsubs
push
jle
push
dec
loopne
lcall
mov
lods
adc
pushf
test
sub
aad
push
es
xor
scas
add
js
xchg
fwait
test
dec
fistps
es
xor
adc
lds
jg
mov
add
js
ds
sub
int
jns
push
test
sub
aad
push
insb
push
mov
cmpb
add
adc
sbb
fidivl
mov
mov
inc
cmc
data16
push
outsb
testl
sahf
loop
pop
dec
stos
data16
mov
jbe
mov
push
inc
mov
hlt
data16
pop
push
jp
cmp
push
test
mov
adc
test
jb
jbe
jp
xchg
stos
cmc
scas
cmc
mov
out
repnz
pop
xchg
lret
cmpsl
rcrb
mov
loop
in
fisttpl
pop
jl
sbb
inc
mov
mov
push
cmp
lcall
xchg
mov
and
jge
repz
fisubs
repnz
ljmp
loop
fisttpl
dec
sbb
jbe
jle,pn
xorb
test
mov
out
ljmp
push
dec
sub
or
xor
add
xchg
test
inc
mov
mov
push
movsb
xor
xor
xor
add
js
sub
or
xor
fsub
loopne
in
pop
ja
lock
mull
or
and
push
cmc
cmp
push
shrl
lahf
and
repnz
adc
jle
sbb
aad
dec
add
test
jle
xor
xor
adc
xor
daa
mov
shrb
add
test
mov
data16
in
add
jmp
sub
cs
xor
arpl
xor
xor
adc
pop
cmpsl
pushf
loopne
ret
adc
cmp
or
sub
es
cmp
cmpl
icebp
cs
xchg
mov
mov
jo
xor
outsl
clc
rcl
leave
cmc
pop
cli
hlt
ds
inc
jecxz
cmp
mov
pop
fwait
hlt
popf
xchg
fwait
cmpsb
cmpsl
sbb
movsl
hlt
gs
sub
xchg
sbb
mov
jo
adc
push
test
scas
cmp
push
adc
jmp
fidivrs
fiadds
test
jb
fisubrl
cwtl
shl
push
dec
pop
pop
lret
mov
rep
ficoml
hlt
inc
aam
inc
shrb
icebp
pop
pusha
pmaddwd
cs
lcall
ljmp
jp
cli
sbb
rorb
test
fdivrl
xchg
fisubrs
fldt
notl
xor
jp
cwtl
mov
jae
push
sub
lret
jmp
neg
sbb
pop
and
ds
sti
or
ficomps
lock
sbb
push
in
dec
add
repnz
pop
scas
xor
add
fdivr
inc
sbb
add
out
loopne
hlt
xchg
adc
pop
xchg
or
push
mov
cmpsl
dec
push
lret
bnd
mov
mov
xchg
mov
dec
pop
jp
notb
js
xor
fisubrl
int
jns
imul
or
sbbl
pop
mov
jmp
in
adc
mov
shr
push
inc
rcll
movsl
enter
xorb
xor
push
lret
sub
int
lock
jbe
repnz
jg
es
movsb
dec
test
jo
adc
lock
icebp
inc
fiaddl
and
sbb
loopne
les
jg,pt
scas
into
mov
enter
sbb
js
lahf
mov
int3
sub
mov
sbb
jmp
aas
scas
dec
jo
in
popf
lock
jo
arpl
jnp
scas
imul
add
sub
cmp
push
lcall
cmp
lds
arpl
or
jbe
jle
bswap
test
dec
idivl
mov
push
jle
jmp
jbe
push
ljmp
cli
cli
add
cmp
xorb
fdivp
lcall
ja
inc
loope
xchg
dec
xor
arpl
mov
push
out
adcl
shl
rcll
in
je
dec
enter
jbe
mov
push
jecxz
cmp
cmpsb
orb
repz
pop
lcall
repnz
dec
lret
les
adc
movsl
xchg
out
dec
xor
out
stos
fildl
xor
pop
les
or
orl
sub
fs
pop
fistl
sbb
repnz
inc
fistpl
scas
pusha
jle,pn
push
mov
shl
jle
hlt
sub
sbb
in
outsl
js
sub
push
jns
xchg
aaa
outsb
lret
cmp
mov
stc
ljmp
jb
rcll
xorl
ljmp
shll
fnsave
jmp
push
cmc
push
stc
dec
std
data16
mov
in
sbb
lock
icebp
or
lret
notl
out
adc
mov
mov
xchg
mov
mov
clc
ficompl
mov
hlt
ljmp
in
xor
xor
xor
adc
mov
imul
sbb
sub
xor
add
fsubs
jb
enter
push
cltd
pop
push
cmp
inc
icebp
push
repnz
repz
mov
xor
push
adc
cli
loopne
fdivrs
popf
dec
popf
dec
fwait
push
outsb
shl
cmc
pop
jecxz
ja
test
mov
lret
dec
add
das
stos
cmp
mov
xor
rol
out
dec
in
data16
cmpsb
sbb
push
outsl
popf
jge
int3
lock
xchg
dec
xchg
js
mov
dec
stos
adc
jns
xchg
lcall
push
xor
inc
int
cmpsb
jle
mov
div
repnz
dec
push
ret
lds
xchg
sbb
ret
cmp
mov
add
cld
and
mov
cltd
repnz
dec
gs
in
call
and
outsb
dec
jle
inc
jmp
dec
js
and
leave
lock
je
mov
mov
popa
cld
data16
sbb
dec
loop
mov
dec
hlt
rcrl
enter
cmp
call
push
adc
sbb
ss
imul
dec
addr16
xor
jg
rcrb
jmp
jecxz
cmp
mov
dec
gs
andl
push
and
pop
push
scas
fcmovne
cmp
jno
or
dec
test
pop
cmp
rcrb
push
shrl
movsb
aam
dec
je
mov
lahf
cmp
loopne
hlt
mov
cwtl
test
movsb
test
fdivl
adc
mov
cwtl
inc
xchg
mov
stc
mov
add
mov
push
inc
sbbb
shl
cmp
cld
lock
shl
dec
adc
lds
out
cmc
les
jmp
xchg
mov
repnz
mov
add
inc
repnz
mov
in
cltd
cmp
negl
lret
out
lcall
in
sarl
enter
add
sub
xchg
jp
mov
lock
jl
or
push
dec
jae
enter
sbb
fwait
in
mov
pop
ret
jg
or
jmp
push
pop
aam
push
sbb
pop
dec
cmp
stos
scas
mov
mov
sub
cmp
xor
lahf
mov
pop
nop
xor
int
add
push
adc
imul
mov
xchg
add
or
adc
testl
sub
add
imull
sub
mov
push
mov
icebp
or
sub
mov
jl
pop
cmc
mov
rcl
dec
cmpsl
outsb
movsb
loopne
cmpsb
sarb
ror
push
iret
in
enter
jecxz
cmp
in
ljmp
xor
cmp
adcl
clc
lret
bound
jne
rol
testl
mov
sar
div
push
loopne
adc
andl
cmp
cli
adc
mulb
bnd
xchg
imulb
cmp
into
mov
sti
out
in
jne
push
mov
test
push
jl
cs
mov
push
jb
pop
mov
adc
in
xchg
xchg
adc
mov
cs
add
ds
dec
mov
fcoml
xchg
dec
cmp
or
cli
dec
mov
outsb
push
xor
mov
aas
cmpsb
push
xor
loopne
xor
pop
stos
stc
cmp
dec
jb
xchg
xor
add
bound
pop
dec
inc
shl
out
out
movsb
cmc
adc
test
cmpsb
insb
gs
shll
rcrl
push
lahf
xor
outsb
push
mov
rcl
icebp
jmp
push
bound
repnz
in
sbb
stos
add
xchg
shl
add
int
aas
cs
sub
mov
jmp
xor
adc
ss
inc
fildl
cmpsb
jecxz
sub
dec
movsb
data16
into
sub
xor
add
cmp
xor
jmp
xchg
push
cmp
outsb
jg,pt
mov
out
dec
out
cmpsl
lret
cli
add
fisttpl
xchg
lret
push
sahf
in
pop
call
pop
xchg
inc
fiaddl
es
enter
fidivl
fsubl
in
sub
inc
xor
xor
xor
xor
adc
push
das
adc
add
sub
imul
jg
testl
repz
jge
add
lret
jns
addl
dec
fisubl
xor
adc
lds
sub
pop
int3
ror
dec
sarb
scas
sbb
lcall
aas
repnz
jecxz
jge
jg
mov
adc
not
inc
in
inc
adc
mov
sti
cmp
pop
outsb
push
mov
in
sbb
sbb
jg
es
push
fnstsw
xor
dec
sbb
mov
adc
pop
aas
cmp
add
push
int
push
sbb
lods
sbb
out
mov
push
int
push
and
add
mov
pop
and
ja
push
stos
jge
mov
pop
ret
adc
mov
push
sbb
adc
cwtl
jl
jecxz
jp
enter
sahf
mov
mov
or
push
leave
out
dec
sbb
outsb
jbe
push
pop
repnz
jecxz
inc
aaa
fs
hlt
cmp
cmp
in
cmc
sub
pcmpgtb
rep
es
push
mov
sub
rolb
push
cmp
pop
mov
les
in
inc
add
push
jno
aam
icebp
decl
fisttpll
push
cmp
stos
dec
in
dec
pop
lahf
jns
xchg
pop
inc
push
icebp
sub
add
inc
add
js
loope
or
sub
inc
test
test
mov
inc
cwtl
mulb
fstl
mov
out
mov
adc
loopne
inc
cmp
push
enter
sbb
nop
jns
mov
les
hlt
xor
sub
lods
cmc
mov
add
adc
add
dec
lock
mov
inc
sub
add
mov
dec
enter
pop
xor
push
push
aam
dec
icebp
push
out
push
mov
add
adc
dec
jb
rcl
maskmovq
inc
in
mulb
outsb
test
mov
movb
sti
mov
repz
and
xor
mov
dec
mov
sub
call
sbb
outsb
movsb
aaa
cmp
jmp
and
pop
js
pop
repnz
push
mov
sub
mov
int3
rcll
sbb
ljmp
mov
jecxz,pt
adc
setle
pop
xor
mov
or
sub
dec
cmp
dec
es
or
mov
call
repz
sbb
fdivs
scas
cmp
scas
popa
push
dec
add
inc
lcall
cld
push
fsubrs
fwait
push
leave
xchg
adcl
add
mov
sub
and
inc
cmp
repnz
scas
clc
call
icebp
js
nop
hlt
lods
lcall
mov
cmp
out
out
dec
mov
mov
stc
jle
dec
insb
lahf
cmp
loopne
push
sbb
cmp
mov
out
dec
icebp
arpl
int
sbb
sahf
sbb
cmp
notb
ds
add
mov
dec
pop
mov
imulb
mov
movsb
add
jmp
push
mov
inc
cmpsb
shrb
jge
fcmovbe
shll
mov
mov
mov
std
sub
xlat
icebp
mov
adc
xor
out
hlt
push
ss
mov
ret
inc
out
call
sub
add
ds
dec
inc
repnz
les
jmp
ljmp
mov
jns
test
loop
or
shll
repz
loop
lock
mov
cs
push
data16
push
push
jbe
testb
mov
lcall
or
push
bound
push
sub
xor
out
in
adc
and
not
iret
lock
lods
repz
clc
sbb
mov
sbb
jns
mov
sub
push
enter
mov
sbb
cmpsb
add
jecxz
push
dec
pop
pusha
adc
mov
push
mov
and
jbe
in
fimuls
mov
pop
mov
imul
mov
rcll
xor
inc
xchg
or
mov
orb
mov
int3
ss
xor
and
inc
cmp
bnd
mov
sub
cwtl
fcmove
mov
adc
push
lcall
andl
stos
pushfw
mov
pop
inc
add
idivl
sub
outsl
cmc
jnp
test
rclb
mov
int3
pop
ficompl
cmc
mul
std
cmp
dec
cmp
test
lods
mov
inc
incl
repnz
pop
xchg
add
je
cmp
nop
popf
xchg
lcall
xchg
mov
jno
push
imul
fstl
jb
cmpsb
lods
stc
push
hlt
aad
push
and
sub
inc
test
pusha
aad
dec
test
xchg
test
lods
fnstsw
addr16
jl
scas
cmc
push
in
int
incl
cmp
mov
aad
dec
popa
jns
jae
sbbb
subb
enter
loop
lahf
cmpsb
icebp
sub
mov
inc
cmp
or
pop
scas
pop
and
subb
es
mov
xor
mov
sub
leave
lds
aad
jecxz
ja
ljmp
add
and
xor
xor
shll
pop
add
lds
jge
mov
xor
adc
dec
test
test
xchg
push
into
mov
xchg
xchg
mov
lcall
jp
cmp
jl
dec
cmp
bound
test
fisubrs
roll
enter
mov
imulb
in
call
jp
pop
cmpsb
mov
push
testb
cmc
push
fisttpll
lret
mov
enter
leave
out
lock
adc
xor
mov
mov
test
mov
es
leave
cs
pusha
fnsave
test
lds
aad
dec
mov
adc
aaa
mov
pop
mov
lahf
dec
ret
icebp
sahf
pop
mov
es
dec
mov
dec
xchg
out
pushf
cs
pop
xchg
lock
rolb
scas
jp
jge
adcl
mov
dec
mov
jbe
dec
nop
in
mov
jns
xchg
addb
lds
rorl
repz
xchg
and
idiv
add
fs
fsubrl
jecxz
sti
push
add
or
fisubrl
dec
adc
fdivs
dec
adc
stos
js
mov
rclb
push
push
xchg
dec
adc
cmc
xor
cmp
scas
jg
pop
cmc
cltd
mov
out
nop
adc
and
jnp
scas
mov
and
sub
insb
scas
in
nop
fstpl
or
push
xor
add
xchg
test
adc
dec
push
cs
enter
into
pop
mov
push
push
fst
jmp
fmull
dec
xchg
push
loopne
dec
mov
cmp
mov
xor
mov
mov
mov
leave
lret
shlb
decl
sub
loopne
fwait
push
mov
std
les
sarb
sahf
out
cmc
div
sti
cmc
or
adc
dec
ds
loopne
lcall
cmc
inc
jb
into
xchg
or
mov
jle
mov
mov
mov
pop
pushf
fmull
sub
dec
fstl
xchg
xchg
push
or
shr
dec
cmp
sub
dec
push
jo
cmpsb
add
enterw
loop
fmull
push
mov
movsb
mov
jbe
ljmp
inc
outsb
pop
aas
test
test
ljmp
inc
xor
arpl
ret
lds
mov
xchg
add
cmpsb
push
jmp
lcallw
mov
sub
sub
cs
add
loop
es
sub
xor
movsb
push
mov
icebp
inc
fstl
add
or
mov
out
cmpsb
outsb
call
incl
sti
pop
popa
in
adc
in
test
xchg
and
lret
cmp
lods
int3
mov
push
negl
into
cmpsl
shlb
inc
mov
cli
popf
inc
jp
mov
inc
inc
divl
fistl
add
js
in
jb
or
fs
push
jns
jbe
xchg
test
cs
adc
dec
push
nop
cmc
gs
jno
xchg
jl
mov
loop
sbb
cmp
pop
cmp
mov
dec
lcall
push
bound
inc
cmc
les
cs
out
push
xchg
int3
aad
call
das
cmp
xor
pop
cmpsb
sub
insl
divl
cs
xor
test
sbb
cmp
mov
adc
mov
enter
lret
sti
fisubrl
movsl
fistpl
xchg
jnp
popa
in
adc
mov
test
cmpl
xchg
aam
fdivs
xor
adc
mov
dec
dec
sbb
aam
push
and
lods
dec
jnp
arpl
ret
into
leave
mov
ja
stc
xchg
std
lahf
adc
shr
idiv
pop
scas
pop
xor
bound
cmpl
or
clc
cmp
insl
fstl
add
mov
push
pushw
ja
jl
xchg
sbb
add
inc
out
std
pop
mov
mov
fcmovu
sti
sti
pop
mov
add
outsb
pusha
fildl
push
je
dec
enter
dec
jae
test
jg
xchg
add
fidivs
xor
ss
ds
xor
dec
mov
pusha
xorb
xor
push
cmp
js
sbb
stos
push
lret
cs
pop
or
xchg
mov
out
cmp
imulb
imul
dec
inc
xchg
scas
enter
cmc
push
fstpl
cli
stos
xchg
out
mov
test
add
cmc
jmp
sbb
adc
mov
adc
mov
js
mov
inc
push
mov
pusha
adc
push
hlt
mov
jmp
decb
cmp
call
ja
xchg
in
int3
arpl
fildl
push
inc
movlps
cmp
popl
mov
push
aam
loopne
repnz
fldl
add
cmpsb
xchg
fucomp
hlt
xchg
jae
sub
fs
jg
repnz
enter
cmpsb
repnz
pushf
int3
or
inc
push
or
and
push
fwait
pop
sub
dec
and
sti
cli
xchg
adc
xchg
out
mov
dec
in
int3
dec
cmpsb
outsb
pop
dec
enter
inc
lcall
cmp
scas
xor
sub
sub
mov
push
clc
push
add
add
mov
lods
xor
xor
add
mov
push
cmp
jns
mov
cwtl
and
popf
inc
lcall
sub
repz
jg
push
repnz
fnsave
xor
adc
inc
mov
push
mov
adc
pop
test
pusha
loopne
sbb
subl
aad
dec
lret
data16
insl
cmp
mov
cmpsl
outsb
fsub
lcall
adc
aas
push
dec
adc
std
pop
shlb
popl
inc
push
jbe
into
adc
out
lcall
pushf
enter
movsb
mov
fsubr
mov
mov
mov
stos
adc
enter
push
mov
repnz
repz
or
scas
jns
gs
neg
push
iret
test
mov
or
rcll
cs
ljmp
push
iret
in
pop
dec
mov
aam
dec
cmpl
adc
mov
bnd
mov
lcall
mov
push
xor
pop
push
inc
data16
rorb
orl
outsb
fdiv
in
loop
loop
cmp
stos
lea
stos
inc
in
pusha
mov
adc
push
data16
out
inc
fdivrl
mov
fwait
icebp
fistps
lock
out
je
adc
lods
mov
jb
outsb
into
add
stos
lock
mov
fldl
sub
cmp
out
mov
add
mov
push
ret
adc
stos
bound
outsb
cwtl
mov
mov
inc
pop
dec
lret
mov
inc
repz
cmpsb
add
lds
or
mov
add
xor
bound
test
dec
shll
fidivs
jp
xor
push
lahf
add
adc
push
fldl
rcrb
es
shl
mov
ret
pop
test
jp
test
incl
lods
rol
daa
cld
jecxz
cli
bound
stos
add
push
pop
mov
push
insb
ss
jb
pop
pop
push
push
pop
subb
adc
xchg
ret
icebp
lret
jg
xor
or
push
mov
add
repnz
xchg
sysexit
lds
adc
pop
scas
jne
jge
adc
dec
divb
repz
add
js
jecxz
data16
inc
dec
mov
dec
mov
lcall
xor
add
jae
fcompl
lock
in
add
mov
jno
jne
clc
xchg
test
js
push
lods
mov
add
int3
enter
mov
sti
mov
dec
cmpsb
in
fsub
call
addr16
lods
fimuls
pop
sub
mov
out
mov
testb
mov
dec
imul
or
and
das
mov
mov
mov
mov
insb
aad
dec
sarb
test
mov
mov
cmc
pop
jecxz
mov
lcall
lock
clc
test
lds
add
cmpsb
aad
dec
pop
cmpsb
dec
popa
mov
mov
dec
ja
test
les
jecxz
mov
push
shll
mull
in
ja
jg
movsl
aas
cmpsb
nop
sub
sub
sub
pop
jg
push
pop
cld
dec
adc
mov
add
test
cwtl
cmp
dec
data16
sbb
inc
sbb
and
cmp
fwait
push
lret
hlt
enter
repnz
adc
popf
pop
popf
ja
jg
lcall
loopne
push
imull
mov
loop
mov
push
rcrb
sbb
cs
xor
adc
aam
fmul
add
add
push
outsb
inc
aas
xchg
xor
fistl
cmp
loop
pushf
add
cmp
sub
adc
dec
cmpsb
mov
pop
out
scas
mov
cmp
shll
xor
inc
sbb
inc
es
xor
ljmp
lds
jmp
xchg
cli
inc
mov
sahf
push
cli
xchg
pop
mov
adc
enter
hlt
jo
scas
add
sbb
adc
push
push
cmp
add
repnz
xchg
call
nop
push
or
add
cmp
in
sub
and
out
fnsave
cmp
or
dec
stos
cwtl
sbb
push
popa
test
jmp
je
outsb
cmp
mov
cli
pushl
cmpsb
push
ss
sub
or
data16
ud1
pusha
dec
out
push
hlt
outsb
lret
lret
adc
inc
jg
aas
iret
ja
xor
sarl
push
adcb
out
dec
aas
pop
sub
int3
jp
push
loop
loop
push
dec
pop
cmp
lds
pushf
les
jae
jl
movsb
fsubp
xchg
sub
push
leave
push
lcall
mov
adc
xlat
lock
dec
je
jg
lret
fisubl
pushf
sahf
bound
sar
push
or
jnp
fisubl
adc
xchg
xchg
mov
enter
lds
mov
mov
and
fcoml
cli
xorb
xor
mov
std
ljmp
stc
ja
dec
xchg
andb
cmp
loop
aad
pop
js
or
decl
dec
inc
aam
and
push
enter
loopne
and
jp
bound
push
mov
movsb
xor
adc
ljmp
nopl
test
mov
xchg
xchg
loope
divl
adc
repz
loop
or
and
movsb
add
cs
rcl
pop
insl
pop
fimuls
sarb
test
inc
cmpsb
sub
push
xchg
imul
jb
leave
addr16
cmp
add
repz
fcomi
sbb
lock
jb
aad
push
fs
imul
mov
mov
mov
out
shl
es
cmp
sub
cmpb
fisttpll
dec
add
inc
imul
lock
mov
add
call
push
dec
xchg
xor
inc
int3
push
push
clc
xor
rorb
push
push
mov
sbb
push
mov
or
cmp
sub
cmp
cmp
sbb
xor
dec
push
dec
sub
cmp
or
inc
bound
in
xor
push
sbb
scas
lods
fiaddl
mov
push
lock
les
repnz
sub
dec
cwtl
push
cmp
mov
sti
push
enter
frstor
fsts
push
imul
xchg
ss
mov
dec
mov
pop
mov
addl
dec
into
mov
xchg
cmp
or
ljmp
es
and
loop
je
jl
xor
mov
and
int3
sub
sub
sub
adc
cmp
loop
xchg
fistpl
sub
adc
dec
fsubrs
cmp
je
into
mov
jle
xor
add
and
lock
jb
aad
dec
inc
xchg
mov
mov
dec
cmp
pusha
pop
mov
aaa
jmp
jg
and
dec
neg
insb
push
mov
das
cmp
stos
add
in
aad
fstps
imul
ror
pop
insb
xchg
xchg
pop
in
hlt
mov
mov
mov
mov
sbb
jbe
adc
cwtl
ja
sarb
out
aas
push
adc
fdivs
pop
push
lret
cmp
stos
mov
adc
jle
sahf
xchg
jbe
ljmp
pusha
mov
leave
xor
push
cmpsb
mov
pop
repnz
jecxz
ja
cmp
fidivl
cmp
sub
sub
enter
fldl
gs
pop
xchg
outsb
mov
lea
mov
sub
jne
insb
xchg
loope
stos
sub
into
scas
out
icebp
sub
push
adc
mov
lea
xchg
rcr
pop
dec
sub
fwait
sbb
in
fiadds
mov
lahf
std
or
mov
jmp
ror
mov
int3
lret
bound
popa
xchg
shlb
hlt
insb
add
mov
mov
add
mov
jl
aaa
xchg
and
sahf
cmp
dec
jmp
cmp
inc
pop
ret
lods
mov
scas
fs
in
sub
pop
xchg
push
pminub
pushf
sub
shl
cmp
mov
dec
out
enter
pop
into
or
or
inc
sub
das
pop
scas
push
cs
sar
xchg
lods
add
jo
add
xchg
jb
fsubr
testb
push
mov
add
cs
pop
pop
and
cli
dec
push
scas
jb
out
jge
mov
pop
jecxz
imul
ss
insb
xchg
mov
lock
idivl
fisubrl
cmpsl
cmpsb
mov
mov
rcrl
lds
mov
icebp
icebp
adc
sbb
pop
inc
loope
inc
jl
out
lret
ljmp
push
push
fcoml
dec
jo
ficoms
dec
rcrl
idivl
fiaddl
int3
bound
mov
loopne
cmc
push
xchg
outsb
insl
xor
popf
cmp
idivb
pop
into
sbb
lcall
nop
aam
or
sub
std
pop
xchg
or
stos
hlt
lea
cmp
in
dec
mov
std
or
sub
enter
push
adc
leave
jbe
call
in
bound
cmc
xor
fistl
lock
pop
dec
aad
dec
mov
pop
cli
mov
dec
push
add
mov
es
xchg
xor
add
push
dec
adc
push
dec
dec
push
mov
movsl
and
dec
out
test
push
std
push
arpl
mov
outsb
add
mov
ss
mov
mov
les
sbb
pop
pop
loop
jecxz
cmp
insl
bound
test
sbb
scas
cmpsb
inc
insb
jg
pop
xchg
scas
cli
push
cmp
ljmp
outsb
adc
cmp
mov
ja
push
xor
fsubrl
subb
pop
cwtl
loop
push
decl
add
test
jnp
jne
fdivrp
mov
scas
push
fcmovnb
mov
int
cmpsb
in
cmpsb
outsl
jne
xor
jnp
jg
subl
in
push
fisubl
fmulp
test
lea
sbb
xchg
setns
add
cmp
cld
sbb
les
aas
add
sub
test
xchg
sub
sub
fadds
add
jle
adc
fisubs
pusha
dec
aas
push
daa
xor
xchg
sbb
dec
mov
fisubl
xchg
and
or
ja
fdiv
push
inc
lock
mov
mov
insb
add
or
push
fstl
adc
adc
lds
sub
xor
cmp
inc
test
adc
push
push
scas
push
scas
pop
scas
pop
and
jbe
mov
je
js
sub
xor
pushf
in
ja
test
mov
mov
rclb
push
aam
stos
mov
mov
bound
cmpsb
mov
push
test
xchg
scas
xor
js
pop
pop
push
jnp
xchg
scas
cltd
loope
test
cmp
mov
lcall
cmp
fiaddl
or
scas
push
jo
sahf
test
cmpsb
into
mov
clc
push
pop
push
fiaddl
pop
aad
push
xchg
dec
out
sbb
jle
mov
mov
dec
mov
in
mov
scas
xchg
call
or
clc
xor
cmc
call
hlt
sub
aam
jne
xchg
orb
ja
adc
sbb
inc
jbe
mov
shl
repnz
shl
aam
fdiv
fdiv
loopne
in
call
imul
xor
xor
adc
push
mov
sbb
cmp
and
mov
popf
xor
cmp
inc
stos
sbb
dec
dec
dec
sahf
and
push
cmc
pop
fstpl
fs
push
mov
ret
cmp
mov
xchg
testl
push
pop
add
fimull
loope
push
loopne
mov
xchg
mov
enter
pop
scas
sub
push
jp
nop
fldt
aam
mov
cmp
dec
rcrb
inc
or
xchg
pop
mov
jecxz
jo
bound
dec
int
sub
or
cmp
cmp
cmc
jle
mov
adc
fistpl
shrl
in
icebp
jns
hlt
test
or
add
ds
push
insl
ds
stos
notb
adc
inc
xchg
in
stos
mov
pushl
adc
leave
sub
mov
cwtl
mov
push
lock
add
aad
sub
sub
add
cmp
add
cmp
outsb
sub
cmpsb
mov
lcall
push
bswap
sub
les
and
cwtl
ss
data16
sub
sub
adc
mov
out
push
in
add
loopne
call
sbb
dec
push
jmp
pop
mov
sahf
cmp
fsubrl
adc
pop
push
lods
mov
icebp
fptan
stc
mov
mov
sbb
outsb
push
mov
cwtl
xor
xor
add
mov
add
cmp
pop
sti
push
daa
cmpsb
adc
jae
jle
mov
fwait
out
out
in
fdivrs
and
sub
dec
jns
arpl
loope
out
test
lds
sub
pop
inc
push
cmp
xchg
stos
out
aad
dec
lods
jno
push
mov
test
add
or
sbb
xchg
mov
pop
push
clc
xor
mov
call
cwtl
cmp
sahf
xor
pcmpgtw
fnsave
sub
xchg
movsl
sarl
push
int3
repnz
lock
push
pop
stos
xchg
in
stos
test
mov
mov
xor
add
xor
mov
in
cmp
orl
mov
ja
ljmp
or
fsubl
outsb
dec
cmp
adc
scas
cmpsb
adc
inc
mov
pop
test
and
lock
test
out
xor
pop
fucomp
inc
mov
jle
push
subb
sub
cs
add
and
popf
cmpsl
test
push
je
insl
divl
mov
add
sub
adc
pusha
adc
ja
int
shl
dec
mov
inc
cmp
mov
push
push
push
adc
jns
arpl
incl
xchg
imul
jno
into
icebp
fcoms
or
mov
add
adc
fsub
inc
out
push
jo
mov
xchg
dec
mov
push
loop
out
dec
out
cmp
cld
sbb
cmp
jns
sahf
ret
aaa
dec
popf
push
cmp
andl
hlt
xlat
add
inc
filds
test
std
lcall
scas
inc
sbb
into
loop,pn
stc
push
lret
mov
jbe
ds
adc
out
or
cld
sbbb
fucomip
scas
in
notl
xchg
sub
cmpsb
gs
push
popf
dec
lods
clc
lock
xlat
xchg
mov
insb
dec
outsb
leave
lcall
xchg
rcl
rep
cmp
cmc
add
testb
pop
xchg
or
addr16
pusha
mov
leave
jmp
pop
mov
xor
fdivs
sbbl
cmc
cmpsl
jecxz
div
jne
test
lds
cmp
mov
fisttpll
pop
inc
popf
icebp
lds
add
inc
popa
xor
inc
insl
imul
pushf
lahf
sub
mov
ds
int3
mov
adc
les
cld
test
mov
out
xchg
clc
jo
pop
mov
out
icebp
cltd
lock
jmp
jp
pop
lds
movsb
iret
mov
mov
sbb
sbb
sub
leave
or
sbb
xor
pusha
sarl
sti
jne
repnz
sbb
xor
cmp
dec
cmp
dec
xor
repnz
mov
mov
xor
sub
adc
js
pop
xchg
insb
mov
and
mov
push
mov
fnstsw
jne
add
mov
aam
fsubrp
add
cmp
fistpl
mov
ficoms
orb
sub
adc
sahf
jbe
dec
repnz
in
sub
and
cmp
ss
out
call
ljmp
adc
lret
out
jmp
push
ja
push
popf
cld
imul
daa
shl
pop
ss
in
shr
in
xlat
les
cltd
out
cmpsb
add
add
movsl
out
call
es
xlat
sar
xchg
mov
out
ss
jno
sub
shll
mov
cs
push
push
cmp
gs
add
idivb
out
cmp
out
jb,pn
call
cmp
pop
add
outsb
cmp
shrl
in
roll
dec
aam
cmp
jmp
je
bound
les
lods
sbb
dec
lock
call
stos
dec
out
push
call
sahf
outsb
cmp
cmp
cmp
mov
aad
dec
loop
mov
lock
fcomip
adc
pushl
xor
xor
out
data16
push
testl
ljmp
inc
xchg
scas
sbb
mov
out
adc
sub
nop
add
pop
sbb
ljmp
mov
push
cmc
xor
fistpl
leave
cmp
cld
jne
cmp
fisubs
jecxz
cmp
out
movsb
xlat
std
out
push
add
cmp
sbb
mov
ret
inc
lcall
pop
aad
int3
andb
test
lods
movsb
imul
sbb
xchg
adc
cli
pop
mov
aas
mov
xchg
pop
sbb
jbe
mov
lods
adc
mov
in
cmpsb
push
sub
int
add
add
jl
decb
test
or
rcl
push
loope
in
cmp
test
push
enter
je
jg
ja
lcall
rol
jg
in
nop
mov
pop
ja
sbb
movsl
cmp
push
loope
xor
jb
ljmp
cmpsb
cwtl
or
in
pop
and
in
enter
and
in
sub
adc
mov
add
pop
int3
mov
cli
or
xchg
das
scas
cmc
cmpsb
scas
fcompl
inc
sub
add
jle
into
inc
cs
not
pop
hlt
cmp
mov
inc
les
inc
jmp
repnz
xchg
leave
sub
inc
out
ds
mov
mov
mov
dec
sbb
cmp
inc
scas
push
sub
fisubrs
adcb
xor
jb
loope
pop
std
xor
je
cwtl
or
enter
repnz
mov
push
and
aam
cmp
adc
pop
mov
dec
push
js
pop
mov
sbb
dec
mov
jecxz
mov
in
dec
jp
sarl
cli
notb
rorb
lock
xor
fs
pop
lcall
dec
rorl
or
pop
js
cmc
jbe
jl
loop
test
pop
je
mov
in
mov
loope
mov
jmp
out
imulb
sub
xchg
mov
xchg
adc
pop
insb
icebp
out
fisttpl
das
adc
in
dec
jg
xchg
loope
ret
stc
push
out
out
lods
pop
das
repnz
data16
mov
test
pop
jb
enter
out
cmc
cmp
ljmp
add
sbb
xor
lcall
jle
jl
jo
int3
mov
fdivs
add
or
divl
adc
sbb
xor
stos
pop
mov
dec
pop
push
lahf
scas
cmpsl
scas
ret
lock
cmp
mov
aas
inc
es
mov
movsb
scas
test
push
fs
jne
clc
jg
xchg
mov
mov
cmpb
into
loop
xchg
dec
mov
pop
dec
or
lds
push
aas
outsl
push
add
rclb
es
adc
dec
mov
andb
enter
push
push
or
ds
lcall
push
mov
repz
cwtl
pop
movsb
add
mov
dec
adc
pop
add
cs
adc
push
cmc
or
or
and
sbb
and
inc
mov
push
enter
cmp
test
insb
test
je,pn
js
rolb
dec
mov
cmc
xchg
cmc
cwtl
adc
call
ss
sar
mov
mov
add
pop
push
clc
xor
add
dec
adcl
loope
inc
pop
lock
pushf
push
ret
in
leave
push
jl
fildl
jecxz
sbb
mov
pop
sbb
dec
not
jno
jns
fwait
test
mov
insl
cmp
or
mov
fs
scas
je
adc
mov
mov
pop
fldt
js
inc
outsl
adc
aad
dec
or
xchg
xor
xor
add
arpl
fcompl
mov
sbb
aaa
dec
aam
jge
adc
andl
mov
out
lahf
pop
and
rclb
test
orl
jnp,pt
jg
lock
in
shlb
cmp
in
clc
xchg
mov
jae
ja
jnp
fwait
cmp
cmpsl
repnz
mov
mov
sub
and
mov
jb
push
lahf
mov
dec
mov
std
jmp
pop
jne
adc
inc
sub
xor
int3
dec
scas
mov
outsl
push
jnp
xchg
fnstsw
sbb
push
xorb
adc
inc
sbb
cmp
pop
push
in
pop
xchg
mov
loopne
dec
sti
ds
push
inc
dec
insb
js
lea
mov
inc
testl
xchg
pop
mov
add
cmp
jmp
int3
push
js
mov
cmp
out
cmp
pop
jno
or
dec
sbb
xchg
sub
pusha
sbbb
test
cmp
call
and
dec
aas
es
into
sbb
ret
fnstsw
mov
xchg
dec
xchg
add
jmp
lret
jl
and
incb
fidivs
out
ljmp
and
pop
xor
js
inc
adc
js
shlb
cmpsb
sahf
mov
adc
mov
scas
adc
cmp
push
js
nop
mov
jg
xchg
loop
rep
fstl
and
xor
jge
rcr
scas
dec
pop
fstpl
cmp
mov
in
xchg
fdivl
scas
cmp
push
stos
mov
out
insl
mov
adc
and
scas
cmp
sub
std
add
ja
icebp
lock
ret
adc
cmpsb
add
pop
cmp
mov
ds
xor
jle
loopne
sbb
jbe
sub
add
push
loop
rorb
insb
push
xchg
cmp
xchg
cli
movsb
roll
add
cmp
mov
sub
xchg
adc
jg
xchg
rolb
cmpsb
fcomps
jle
jecxz
in
das
xor
mov
xchg
xor
adc
jecxz,pt
inc
mov
xchg
adc
lds
es
lock
fidivrl
les
jmp
push
mov
inc
xchg
pop
in
divl
cmc
mov
adc
bound
mov
xchg
push
out
scas
sahf
and
xchg
dec
fisttps
add
jecxz
or
std
push
popf
arpl
xchg
push
aas
aaa
sbb
repz
es
sbb
ret
int3
xchg
out
cmp
jne
lcall
jb
addl
pop
dec
mov
mov
jmp
divl
and
jecxz
rcll
cmp
cs
mov
std
jb
fcmove
cld
bound
loop
ficompl
pop
mov
clc
fucomi
mov
movb
push
popa
out
lock
hlt
add
out
ja
push
mov
test
les
xor
in
out
and
stc
push
and
test
shlb
in
sahf
add
push
cmp
lcall
cs
lcall
cmc
mov
jecxz
adc
pusha
mov
cmc
xchg
cmc
mov
push
mov
loop
mov
jle
roll
out
int3
mov
or
rorb
adc
sub
cmp
adc
rclb
shll
or
dec
jbe
cmp
popa
mov
inc
iret
fisttpll
negl
cs
xor
xor
adc
jb
inc
jp
mov
mov
sbb
xchg
insb
mov
std
dec
pop
or
ss
hlt
mov
cmpsb
fiadds
mov
movsl
in
pop
out
lcall
jbe
dec
aaa
add
andl
mov
sub
data16
std
cmc
cmp
and
cmp
jns
ss
outsb
test
sub
lock
test
testl
js
xchg
mov
lahf
in
and
cwtl
mov
imul
leave
dec
push
adc
add
enter
push
pop
sbb
lret
icebp
mov
cs
xor
data16
fsubrp
jmp
mov
sbb
shrb
push
adc
cmpsb
dec
data16
stos
jecxz
sub
mov
jo
jle
xchg
add
or
sbb
cmp
cwtl
push
cmpsb
shl
lret
cmp
sbb
js
or
lock
sbb
ds
dec
pop
add
arpl
sbb
cmpsb
lahf
out
adc
mov
adc
cmp
outsb
xchg
mov
leave
fdivl
dec
xor
pop
or
dec
es
js
pop
ss
popf
xchg
fwait
bound
pop
jl
push
sub
imull
push
xchg
loop
pop
cmc
dec
pop
push
inc
cmpsb
xchg
aad
and
cli
add
adc
shlb
cmp
and
pop
mov
les
add
xchg
adc
stos
jecxz
cmp
sbb
fildl
mov
aam
cmp
jb
fcompl
bound
push
aas
push
dec
dec
push
mov
imul
xor
xor
rclb
push
scas
push
xor
punpckldq
jbe
mov
and
jb
test
mov
sti
push
dec
cli
jb
ja
test
pushf
fistl
rol
dec
rcll
stos
push
int3
daa
cmp
or
xchg
dec
fisubl
adc
xor
in
daa
out
rorl
shll
pop
jb
jne
lea
sbb
mull
xchg
test
test
cbtw
lcall
cmp
mov
roll
mov
push
das
mov
mov
inc
jecxz
push
mov
cmpsb
pushf
imul
shll
cmp
dec
and
dec
mov
inc
jmp
dec
sub
mov
mov
mov
xor
sti
out
sbb
push
iret
lock
jl
push
es
adc
xchg
fcmovne
xchg
inc
push
cmc
mov
int3
andb
sti
je
and
inc
mov
sub
rcrl
leave
xor
inc
in
out
dec
mov
adc
mov
enter
ret
iret
adc
orb
adc
push
mov
aas
cmp
push
xchg
scas
iret
xor
xchg
xor
xchg
fistpll
mov
stos
jns
enter
jo
sub
lret
loop
jecxz
mov
decl
fucomi
sbb
loop
jp
lcall
fdiv
mov
adc
xor
int3
or
cmp
insb
shlb
mov
cmpsb
dec
or
cmpsb
add
cmpsb
lcall
jb
sub
xor
pop
push
mov
cmpsb
hlt
leave
shl
push
xchg
outsb
dec
cmpsb
mov
mov
inc
pop
dec
jge
popf
pop
lcall
push
adcl
pop
mov
outsl
pop
data16
mov
mov
leave
cmp
push
ljmp
enter
xor
jl
push
sub
add
imul
int3
xor
cmp
in
push
xchg
push
cmpsb
test
pop
in
arpl
rclb
daa
iret
xchg
stc
loopne
pushf
or
push
xchg
inc
jne
xchg
pop
lock
imul
xchg
insb
cmp
test
mov
scas
sub
add
sub
dec
jne
fstpt
mov
lcall
aad
in
lret
jnp
gs
mov
push
adcl
mov
cmc
adc
sub
inc
fldt
mov
icebp
push
repnz
mov
dec
or
mov
or
mov
ficompl
mov
or
sahf
xchg
mov
cmpsl
pop
mov
call
mov
add
or
xor
mov
fdivl
dec
mov
js
adc
jbe
xor
stos
test
lcall
xor
adc
jb
mov
sub
xchg
push
add
shll
mov
xchg
je
je
out
repnz
hlt
xchg
or
incb
dec
mov
into
pop
push
sub
insl
cmpsb
in
jne
loopne
popf
mov
mov
repz
cli
or
addl
mov
in
cmc
shr
test
cmp
pop
xor
repnz
cli
xchg
leave
es
mov
stos
ds
jb
sub
cmpsb
cmp
add
xchg
add
push
aad
push
pop
push
popa
dec
gs
lock
insb
aad
push
test
add
jb
add
pop
dec
lods
jns
mov
mov
cwtl
jae
sub
adc
adc
xor
popf
xor
push
data16
mov
xor
ds
gs
push
and
orl
mov
mov
or
arpl
clc
xchg
push
js
icebp
pushl
jmp
cs
jns
sbb
xchg
mov
enter
jae
aam
mov
xor
xchg
xor
out
mov
mov
jns
stos
xchg
ljmp
cmp
add
ja
inc
sbb
push
stc
dec
mov
jmp
jl
mov
leave
ret
out
ja
push
cs
rcll
mov
xor
push
mov
out
cmpsb
mov
out
dec
mov
ret
dec
mov
sbb
call
xchg
outsb
sbb
mov
aad
push
mov
mov
mov
ljmp
dec
in
es
fimuls
lock
in
mov
jp
mov
mov
outsl
fidivs
xchg
sbb
ret
mov
adc
rcrb
cmp
xor
lcall
xor
lret
inc
fistpl
mov
stos
sbb
lcall
orb
pushf
test
sbb
add
mov
dec
dec
repnz
dec
insl
cwtl
mov
dec
mov
sub
xchg
aad
dec
sub
jp
inc
loopne
or
lock
cmpsl
dec
pusha
enter
in
sub
leave
sub
dec
xor
xor
cli
cs
mov
clc
sub
cmpb
and
add
jmp
and
push
or
dec
mov
test
dec
cwtl
jbe
and
in
jl
stos
mov
push
insb
cwtl
stos
lods
adc
mov
xor
int
data16
cs
ret
rcrb
in
nop
fstl
sti
cmpb
outsb
sahf
push
push
xor
hlt
lods
inc
adc
ljmp
mov
jae
jp
jno
mov
mov
mov
or
ja
mov
jns
or
insl
xor
inc
add
cmp
or
fidivrs
jae
fs
lock
sbb
cmp
pop
pop
les
imul
mov
cmp
nop
movsb
adc
enter
or
and
inc
push
mov
add
mov
xor
cmpsb
lock
imul
hlt
and
aam
leave
outsl
addr16
mov
ds
jmp
rorb
mov
pop
mov
cli
sti
outsb
lock
cmp
inc
mov
pop
add
cmp
test
cltd
or
adc
test
cwtl
cmp
fcoms
jo
xchg
add
loop
fisttpl
out
jne
xorb
mov
sub
adc
repz
cmp
hlt
cmp
adc
push
rclb
mov
pop
scas
inc
inc
mov
adc
push
jecxz
scas
add
arpl
scas
mov
mov
lret
lock
mov
mov
pop
testb
icebp
sub
repnz
cmp
lahf
loopne
ss
push
outsb
and
mov
fisubs
or
lret
pop
or
rorb
pop
jmp
mov
push
inc
and
mov
mov
and
repnz
rep
jecxz
stos
pop
enter
cmp
out
js
bound
mov
and
mov
shl
dec
negb
push
jne
mov
sbb
jb
mov
mov
mov
imul
in
call
movsb
fcmovnb
scas
loop
call
dec
enter
dec
je
mov
ret
int3
xchg
fimuls
jne
push
cmp
xchg
mov
xor
or
push
cmpsb
adc
call
inc
adc
mov
cmp
in
mov
imul
int
cmpsb
push
lds
adc
jg
jae
xchg
mov
stc
insb
dec
mov
jbe
jo
stos
in
xchg
es
in
out
lcall
mov
mov
or
hlt
cs
add
call
decl
test
xor
and
aad
mov
leave
jmp
sbb
dec
leave
sub
inc
push
hlt
aad
dec
pusha
jns
je
jnp
call
ljmp
push
shr
push
add
fs
mov
mov
xor
adc
push
push
pop
fsubl
add
xchg
pop
sbb
add
ficoml
mov
pop
inc
mov
push
mov
gs
pop
jb
ss
out
popa
jb
ja
lcall
adc
sub
push
stos
hlt
rcll
outsb
shll
loopne
cmp
cs
aaa
cmp
cmpsl
pop
clc
ljmp
fbld
jg
adc
enter
dec
mov
jge
sub
push
icebp
xchg
repnz
dec
cmp
pop
adc
mov
xor
ds
dec
cli
lret
add
xor
popf
add
sub
mov
shrl
mov
leave
mov
rcl
xchg
cmp
xor
dec
ja
mov
loope
adc
push
jl
dec
cmp
imul
fstl
int
movsl
fptan
sahf
cwtl
mov
mov
cmpsb
jo
into
add
sahf
hlt
out
fcomip
pop
in
mov
mov
mov
je
rclb
in
es
mov
int3
iret
adc
push
lds
dec
or
dec
xchg
data16
push
mov
push
mov
out
push
ss
pop
jl
sub
jecxz
hlt
imul
sub
pop
gs
xchg
xor
adc
mov
mov
add
ljmp
add
aaa
xchg
pusha
mov
fiaddl
cld
mov
fnsave
cmpsb
test
jne
addb
loopne
in
neg
pop
mull
sbb
jbe
mov
add
repnz
fldt
push
xchg
in
pop
scas
sbb
jle
je
ja
mov
and
enter
xchg
outsb
data16
cmp
leave
das
add
lock
pop
cmp
mov
xor
lods
inc
jo
or
js
mov
shll
int
mov
lods
pop
xchg
xorb
or
adc
mov
movsl
mov
stos
lods
xor
pop
sbb
pop
fisttpl
jge
cltd
sub
push
out
lcall
push
outsb
or
xor
cs
out
mov
ss
int
loopne
mov
inc
insl
imulb
data16
insl
mov
mov
cmp
or
xchg
xor
outsb
xor
ss
sub
andl
and
adc
xchg
out
adc
lcall
mov
pop
jge
pop
xchg
aam
xchg
cmpsb
jecxz
ja
jne
mov
xchg
cli
push
int3
jecxz
xlat
ja
push
jle
mov
jne
sbb
out
inc
or
xchg
arpl
frstor
in
lock
add
dec
test
sub
xor
sub
push
cli
xlat
jo
and
cli
xor
call
add
jns
mov
add
push
jo
dec
adc
aad
ret
mov
xor
hlt
fdivs
imul
jb
lock
dec
mov
push
mov
insb
adc
mov
add
enter
ss
xchg
lea
cli
sub
rol
xor
divl
mov
out
fcmovne
bound
xor
int
or
ss
repnz
movb
mov
jmp
xor
cmpsb
call
and
sbb
dec
push
pop
push
jp
mov
push
or
lretw
dec
fdivr
mov
nop
xor
adc
mov
cmc
nop
cmc
xchg
frstor
bound
adc
test
cmc
scas
jecxz
dec
cmp
push
nop
adc
mov
add
lds
adcl
fidivrs
adc
addb
push
push
xor
adc
jle
jne,pn
bound
pop
shl
mov
cwtl
lret
push
mov
test
mov
cwtl
cmc
pushf
cmc
scas
ficoml
add
xor
cmpb
fdivrs
pop
push
mov
xchg
in
add
xchg
int3
fs
push
sahf
test
hlt
sar
div
jp
push
mov
ljmp
jbe
xor
sub
adc
test
adc
mov
inc
aas
repnz
hlt
adc
push
lcall
mov
add
mull
fisubrs
cmc
mov
ret
mov
dec
push
pop
dec
arpl
dec
mov
push
adc
push
add
insb
adc
lds
jg
xchg
cmc
cli
xor
fistpl
aas
inc
sub
mov
push
xchg
mov
mov
aas
push
fcomip
mov
loop
mov
mov
mov
shl
mov
mov
adc
pop
test
outsl
pusha
mov
xchg
cmp
adc
cli
push
xor
xchg
adc
bndldx
dec
scas
push
fdivrp
jecxz
mov
mov
mov
imul
inc
fdivp
frstor
pop
jg
xchg
sub
sbb
fdivrs
push
imul
ds
les
in
hlt
aad
int
pop
cli
mov
scas
sub
sub
adc
mov
hlt
leave
fidivs
int3
dec
imul
neg
sahf
fdivp
jecxz
sub
fisttpl
mov
add
add
mov
jne
mov
dec
clc
hlt
mov
scas
mov
lock
sbb
push
mov
add
push
xchg
dec
or
imull
xchg
out
notb
fstpt
mov
pop
pop
xchg
ljmp
les
les
sub
es
enter
imul
in
pop
mov
dec
cmp
cmpsb
cwtl
pop
jne
mov
sahf
ja
int3
push
cmp
jo
push
jae
rcl
cmpsb
adc
outsb
testl
push
push
dec
dec
arpl
jle
nop
mov
lock
sti
fsubl
mov
or
jle,pt
xchg
mov
in
mov
push
dec
adc
je
ljmp
fidivl
xor
or
mov
aam
aam
push
xchg
aad
cmp
jmp
xchg
movsb
adc
nop
hlt
lret
enter
mov
sub
daa
les
test
iret
ss
enter
loop
rcll
jo
out
loop
in
push
cmp
sahf
movsb
mov
adc
enter
add
xchg
jae
jbe
es
mul
sbb
pop
jbe
or
adc
adc
pop
xchg
adc
dec
aam
test
andb
cmp
dec
adc
call
lret
cmp
add
sbb
ret
jne
ss
mov
push
mull
pop
fwait
test
inc
cmpsb
push
bound
clc
pop
adc
int3
add
rol
or
stos
add
sbb
or
fldl
mov
dec
ficompl
xor
data16
push
jmp
int
push
add
and
push
push
add
xchg
push
adc
es
loop
mov
loope
sub
sub
cpuid
adc
push
ja
cmpl
lock
dec
das
pop
xchg
mov
int
scas
add
add
cli
mov
or
pop
and
xor
push
xor
fstpt
cmp
sbb
jp
or
fs
pop
mov
testb
int3
xchg
push
test
test
jns
psubq
xor
nop
ficoml
push
insl
enter
adc
lock
icebp
add
push
in
pop
xchg
xor
xchg
mov
mov
in
call
inc
jbe
out
xchg
cmpsb
fucompp
sub
jmp
add
jge
pop
cmp
in
lods
cwtl
ret
lods
je
push
out
mov
push
fdiv
lahf
push
mov
and
gs
add
mov
sub
push
jl
in
pushf
fstpt
adcb
add
rcrb
or
mov
inc
in
movsl
adc
shrb
cmp
sub
scas
pop
add
jle
ret
xchg
mov
test
out
sub
mov
xor
loope
mov
add
orl
leave
cmp
xchg
sbb
or
xor
jge
aam
fcomps
out
fmulp
add
aas
mov
mov
xor
leave
mov
dec
shl
add
adc
lea
stos
idivb
inc
data16
loop
jmp
ljmp
cmp
movsb
jae
add
adc
pop
adc
icebp
and
divl
mov
xor
int
cmc
or
loop
jns
mov
push
mov
mov
cmp
fistpll
pop
cs
xor
adc
cli
mov
jmp
in
or
add
xchg
add
push
stos
js
js
das
es
dec
ss
xchg
int3
push
aam
aam
dec
imul
lcall
mov
mov
daa
jbe
xchg
repnz
lahf
xor
cmpb
mov
inc
popf
push
lcall
lcall
xchg
sub
xor
call
ljmp
sti
push
push
mov
xor
dec
adc
dec
mov
pop
mov
inc
and
les
or
adc
mov
add
mov
mov
cmp
sub
lcall
cli
adc
mov
xchg
xor
repnz
mov
jb
and
xchg
xchg
jb
out
sbb
sarb
pop
repnz
sbb
push
das
inc
leave
inc
cmp
bound
out
adc
xchg
cmp
xor
pop
and
cmpb
mov
push
pop
outsb
enter
and
cwtl
push
nop
mov
bound
mov
adc
push
outsb
add
jae
inc
adcb
sbb
fnclex
inc
push
mov
sahf
pop
lods
cmp
mov
dec
clc
xor
out
dec
dec
cmp
jg
fsubs
enter
fisttps
cmp
push
cwtl
or
bound
cmp
bound
les
in
enter
lock
mov
out
sbb
sub
push
add
movsl
adc
hlt
fisttpl
xor
sti
pop
push
out
mov
dec
je
cmp
jmp
pop
loop
loopne
jb
jg
mov
sti
test
push
cmpsb
loop
dec
jp
pop
dec
jl
adc
push
mov
cmp
mov
fsts
jl
xchg
add
cmc
sub
adc
inc
or
negb
xchg
sbb
jae
out
inc
rolb
data16
xchg
cmpsb
cmp
dec
jecxz
pop
in
and
cmc
fisttpl
jp
add
pop
in
jae
sub
mov
shr
fwait
pop
xchg
adc
push
inc
cmc
test
pop
jmp
scas
or
dec
cmp
pop
inc
cmpsb
movsb
jno
cmp
pusha
mov
pop
loopne
stos
push
dec
int3
fs
outsb
lcall
cmp
jne
and
stos
mov
push
fnstsw
jg
xor
dec
push
xor
lods
xor
movsl
leave
cmp
dec
add
jg
xchg
fs
mov
inc
leave
or
jmp
inc
mov
cmpsb
mov
jnp
cmp
dec
push
pop
arpl
push
adcb
xchg
push
and
ss
out
mov
aas
sub
int
jo
or
sub
in
mov
cmp
inc
imul
popa
dec
xor
mov
int
pop
loop,pn
xor
dec
adc
xchg
outsl
xor
fistl
dec
or
add
lock
fs
stos
mov
jbe
sti
jmp
xor
dec
movsl
xchg
pusha
pop
lcall
mov
jmp
enter
rorl
push
add
jbe
out
aam
dec
leave
sti
add
push
jbe
orb
fisubrl
inc
cmp
aam
push
scas
int
popa
ftst
imull
mov
lret
sub
arpl
dec
xchg
push
out
cmpsb
push
sub
inc
mov
sbb
mov
dec
ja
jle
popf
aaa
rclb
sbb
push
inc
xchg
mov
mov
pushf
in
shlb
jmp
sub
sbb
push
cmp
shll
cld
cs
xor
dec
ds
orl
nop
cmpsb
test
pop
and
xchg
and
jbe
jl
xchg
xor
loopne
bound
lods
js
loope
mov
adc
lock
mov
push
lods
sbb
push
mov
enter
fidivrl
dec
test
aad
push
and
js
sub
sub
add
xchg
push
mov
fidivrs
mov
sub
xchg
stos
xor
movb
pushf
lock
or
inc
push
out
dec
cmp
fsts
adc
cltd
xchg
addb
adc
dec
cli
jo
xchg
push
jns
jge
xorl
cs
push
scas
mov
xchg
push
or
adc
loopne
sarb
push
mov
mov
jnp
mov
dec
rorb
and
dec
push
dec
fiaddl
mov
push
xorl
and
sub
lods
int
call
adc
xor
cld
add
adc
jge
mov
arpl
repz
mov
push
in
sub
jg
dec
xchg
jl
push
sub
add
mov
dec
je
sarb
or
add
aas
test
mov
jg
dec
xchg
jne
fwait
cmpsb
lret
idivl
push
push
jmp
fisttpll
jp
int
push
inc
dec
mov
fisttpl
mov
cs
or
repnz
in
pop
jle
loop
fisttpl
sbb
cmpsl
cmpsl
cs
jecxz
push
xchg
add
cmp
scas
adc
rcll
jno
inc
cmpsl
lcall
dec
add
aaa
loopne
icebp
sbb
cmp
mov
pop
test
and
inc
sub
jl
test
test
cmpsb
ret
mov
sbb
jmp
ja
shl
jle
mov
outsb
mov
cs
or
xor
add
pushf
and
inc
cmpsl
push
and
pusha
data16
jp
js
mov
cmp
mov
rclb
aam
in
sub
notb
enter
stos
dec
push
sub
xor
ds
test
mov
adc
ror
lcall
xchg
adc
enter
out
test
into
fucomi
or
and
adc
cmc
cmp
pop
mov
xlat
jg
xchg
jg
add
push
cmp
insl
cmpsb
sbb
pop
cmp
jg
and
mov
aad
push
repz
adc
cld
shl
cmp
fsubp
pop
xchg
sahf
xchg
call
int
popf
mov
adc
es
movsb
sahf
mov
push
leave
shlb
mov
mov
mov
test
ja
jecxz
sbb
sarb
leave
pop
sbb
and
mov
push
ret
cmp
cli
cmp
neg
lahf
push
out
rcr
in
mov
mov
sub
les
mov
inc
enter
pop
xchg
scas
movsl
loopne
bnd
pop
push
mov
in
dec
ja
fwait
sub
test
push
cmp
jno
loopne
push
aam
xchg
hlt
xchg
call
cld
sbb
imulb
jo
fsubrs
fsts
loopne
add
fistl
outsb
mov
les
fnsave
pop
cmp
dec
sub
outsb
xor
pop
push
sar
enter
fucom
ja
cmc
xchg
pop
sbb
push
fcompl
xchg
ljmp
push
scas
mov
dec
dec
mov
and
mov
ljmp
mov
xor
js
inc
xchg
sahf
leave
test
push
dec
adc
adc
sub
aad
dec
repnz
add
cmpsb
imul
js
and
imul
sbb
dec
fisubrl
jle
shlb
ljmp
jns
mov
cwtl
cmp
pop
popf
imul
mov
fstl
mov
mov
leave
in
in
hlt
add
add
dec
jae
testl
xchg
mov
cld
rol
dec
leave
cmpsb
test
push
aad
enter
stos
mov
mov
dec
cmp
dec
pushf
xchg
js
push
and
cld
jns
or
push
xor
jl
ret
out
push
leave
hlt
add
dec
aad
les
inc
jmp
fdivrs
mov
cmp
cli
and
hlt
cmp
xchg
ljmp
hlt
adc
dec
mov
je
adc
xor
andb
out
mov
dec
jmp
cmp
sub
jnp
out
mov
mov
xor
and
sbb
push
test
mov
mov
mov
sbb
cmpsl
movsb
xor
leave
mov
mov
dec
adc
arpl
mov
int
jns
jp
mov
enter
int3
xchg
cmp
pop
xchg
arpl
scas
add
xor
aam
dec
and
push
and
jae
fimull
mov
and
int3
and
lock
add
sbb
jno
mov
sub
pop
aaa
mov
in
xor
addr16
ror
outsb
push
fnstsw
xlat
out
xchg
cmc
lahf
add
rorl
es
add
test
adc
aad
push
movsb
dec
loope
idivb
jle
fisubl
adc
shrb
dec
fisubrl
jne
push
jecxz
mov
sub
add
xor
xchg
ds
in
loop
notl
cli
sub
mov
mov
sar
test
data16
insl
ja
add
xor
xor
xor
adc
leave
inc
std
ja
xor
mov
mov
mov
jecxz
cmp
mov
push
orl
add
xchg
cmc
cmpsb
ljmp
inc
js
nop
add
add
filds
or
das
incl
hlt
std
xchg
fwait
mov
lock
aam
dec
mov
sar
pop
decb
sbb
scas
sahf
hlt
xor
aad
cmc
pop
cmp
cbtw
sub
jp
ljmp
icebp
or
pop
scas
xlat
mov
div
sbb
outsl
ljmp
jmp
ffree
and
sahf
mov
incl
mov
cs
mov
cmp
fnstsw
xchg
or
mov
adc
lret
mov
scas
xor
dec
inc
cmc
jg
hlt
mov
adc
jg
mov
sti
fs
in
cmp
mov
in
hlt
cmp
incb
repnz
enter
xor
lret
pop
push
ret
fiaddl
mov
es
dec
leave
cmpsb
pop
inc
in
fcmovbe
or
adc
nop
and
call
pop
imul
repz
pop
sub
add
test
dec
pop
mov
push
cmp
out
mov
add
xchg
leave
sub
push
mov
loop
test
cmp
out
repz
out
fucomi
add
dec
xchg
fisttpll
pop
and
xchg
fpatan
loope
aam
testb
lds
sbb
test
test
into
adc
xchg
jns
ficoml
and
aam
movsb
adc
add
ja
popf
and
sub
call
mov
cs
dec
call
ljmp
fistps
push
pop
das
add
insl
jg
adc
leave
xchg
xchg
or
add
fs
push
stos
aad
dec
fbstp
es
pop
pop
push
xchg
pop
sub
mov
pusha
repnz
xchg
sahf
push
scas
pop
scas
jne
js
xchg
xor
les
in
inc
repz
testl
in
rcl
shlb
push
cwtl
mov
sub
adc
scas
pop
inc
and
idiv
sub
xor
lock
mov
ljmp
mov
out
lcall
rorl
mov
loopne
jmp
insl
cmp
add
call
scas
add
scas
insb
sub
adc
mov
int3
sub
mov
fst
std
fcompl
jecxz
ds
dec
idivl
inc
cs
dec
fdivrl
loop
dec
adc
inc
js
lahf
jbe,pt
lds
es
add
out
fdivl
fcoms
leave
addb
mov
push
mov
mov
leave
xor
leave
mov
mov
roll
cmp
push
mov
ljmp
xchg
enter
fcompl
cmc
lock
pop
loopne
mov
js
cmp
mov
push
jbe
pusha
scas
pop
icebp
adc
pop
dec
pop
cli
xchg
gs
jmp
out
and
push
add
or
pop
add
mov
fdivl
or
jl
push
test
test
xor
xor
add
lock
lds
xchg
dec
repnz
add
mov
in
insb
jg
loop
es
or
or
outsb
push
add
cmp
iret
lock
pop
or
pusha
aas
sbb
shlb
lods
leave
push
pop
pop
lock
sahf
adc
or
dec
adcb
sbb
mov
pop
jge
or
aad
dec
mov
mov
dec
loop
pop
mov
xor
xchg
movsb
jmp
add
xchg
pop
mov
inc
mov
leave
iret
xchg
push
out
cmp
fdivrl
mov
add
rcr
cs
xchg
push
or
adc
js
mov
aad
into
shll
int3
stos
cmp
sbb
dec
stc
stos
stos
aam
int3
xor
into
dec
test
xor
test
mov
dec
or
mov
xchg
and
loop
fstpt
mov
lcall
mov
dec
adc
pop
mov
fdivr
or
cmp
or
push
lods
cmc
pusha
loop
loop
int
fsubs
jns
sub
cmc
xchg
adc
fadd
xchg
fdivr
in
xchg
adc
push
cmc
dec
cmc
imul
xchg
push
push
shll
in
jns
add
pop
push
inc
lock
push
sbbl
adc
sub
out
add
pop
mov
iret
out
jmp
adc
lahf
fdivrs
jns
ret
dec
rcrl
mov
pushf
push
push
or
dec
cwtl
add
test
add
cmp
ljmp
ret
push
enter
sbb
add
lret
fstl
add
rcll
dec
sbb
mov
test
push
hlt
xor
xor
adc
fidivs
fldl
bound
stos
pop
jp
jb
frstor
mov
xchg
mov
rolb
int
mov
inc
pushf
mov
adc
push
int3
pusha
je
aad
cmp
test
into
out
in
ret
add
xchg
ljmp
fdiv
and
arpl
xchg
xchg
push
ds
fstpt
or
mov
loop
daa
ja
pop
hlt
jbe
shr
dec
cmp
cmp
pusha
fstpt
sti
movsb
pop
dec
fstpt
sar
fcmovb
into
popa
cmp
jno
outsb
subl
arpl
fisubrs
rolb
xchg
lretw
imul
repnz
ficoml
or
imul
mov
inc
ds
inc
xor
mov
sub
scas
jecxz
mov
sub
insb
xchg
cli
xchg
mov
pop
cs
les
adc
rclb
mov
leave
mov
push
into
xchg
std
loopne
lret
fadds
decl
pop
and
scas
mov
ds
dec
adc
ja
and
pop
push
mov
aad
stos
mov
dec
scas
pop
scas
gs
cltd
scas
mov
test
enter
loopne
loopne
or
fistpl
cmp
sub
inc
inc
je
enter
jecxz
divl
jg
mov
scas
stos
out
ret
cmp
hlt
jne
mov
mov
sub
dec
mov
mov
dec
shrb
add
mov
imull
xor
adc
push
push
sbb
push
aas
push
out
jae
cli
mov
in
inc
jb
add
in
bound
pop
gs
add
outsb
cmp
adc
mov
call
mov
cli
lcall
leave
fstpt
loope
xchg
adc
dec
cmp
push
cs
sub
push
cmp
imul
scas
dec
inc
lahf
subl
adc
sub
inc
mov
jns
push
test
lea
pop
mov
xorb
sahf
in
mov
adc
sbb
inc
xor
stos
insb
xchg
add
notl
in
enter
inc
icebp
mov
or
into
sbb
ja
cmp
push
inc
xor
je
dec
mov
adc
mov
jecxz
or
xor
ds
hlt
fsubrl
push
adcl
jb
cmc
mov
mov
clc
dec
or
sbb
cli
sub
xchg
cmp
cmpsl
hlt
int3
push
cmpsb
repnz
mov
mov
dec
mov
mov
js
shll
mov
cmp
ljmp
xchg
add
js
inc
sbb
adc
pop
adc
scas
movsb
repnz
out
shl
xlat
icebp
fdivp
in
jmp
pop
call
mov
adc
je
aad
push
imul
mov
adcb
push
adc
in
cld
scas
add
or
adc
and
fidivl
push
push
pop
dec
mov
cmpsb
ss
dec
push
int3
mov
sub
cltd
in
test
adc
adc
jne
jp
scas
dec
mov
mov
sub
or
adc
loopne
ja
xor
xchg
push
notb
push
add
dec
pop
lods
pop
adc
stos
ficoms
sub
vrsqrtps
xor
xorb
stos
xor
shl
jg
dec
outsb
add
cmpsb
mov
clc
xor
cld
push
add
orb
stos
ljmp
sarb
loop
cli
jae
or
lods
es
and
xor
rolb
int3
cmc
push
fistpl
pop
movsb
jb
rcr
or
jge
lcall
jle
shlb
into
cli
add
fdiv
lcall
orb
xor
ljmp
and
mov
mov
adc
roll
clc
cld
mov
xchg
movl
fstpt
mov
ret
ss
xchg
inc
stos
lahf
push
lret
cmp
lahf
loopne
repnz
in
xchg
cvtpi2ps
cmp
pop
imul
push
ds
xorb
cmpsb
push
mov
mov
mov
xchg
shl
xor
dec
or
mov
xor
ds
xchg
inc
cld
bound
pop
jb
sub
pop
xor
adc
inc
mov
sarb
loop
push
add
adc
sub
xor
insl
incl
xor
and
push
jbe
andb
jne
cwtl
stos
pushw
mov
xchg
sahf
fisubl
leave
cli
mov
push
adc
lret
sbb
loopne
pop
push
pusha
jle
xchg
add
test
fldt
sti
into
cmpsb
lret
sbb
idivb
push
adc
xchg
push
enter
pop
test
add
mov
xor
and
mov
hlt
push
jb
in
ds
enter
or
fs
mov
lea
hlt
or
mov
push
mov
lret
mov
mov
or
sahf
les
or
xchg
iret
push
push
loop
ss
out
push
ljmp
insb
dec
jecxz
or
add
test
scas
mov
push
loop
mov
jb
insl
ja
cmp
fwait
es
jmp
inc
fstpt
xchg
icebp
add
aaa
xchg
dec
mov
cli
dec
dec
mov
test
and
test
outsb
enter
add
ds
jecxz
cmp
jg
xchg
out
add
push
jb
out
jno
sbb
aam
xchg
xchg
mov
fdivrs
add
pop
out
cmp
repz
roll
cmpsl
lcall
mov
inc
mov
adc
scas
shrb
push
negb
mov
inc
data16
ljmp
stos
hlt
inc
cmc
andl
xchg
cmpb
sub
push
pop
test
ljmp
jnp
add
inc
inc
jne
dec
push
ret
jb
fldl
xchg
mov
xchg
jae
scas
daa
ss
out
fdiv
test
icebp
mov
add
dec
cmc
imul
push
lahf
jo
push
pop
repnz
xchg
xchg
cmp
push
call
cmp
jns
in
lcall
divl
repnz
jecxz
div
mov
icebp
cmpsl
dec
sbb
inc
sbb
int3
mov
jb
or
js
fimull
ja
sub
mov
dec
int3
sbb
xor
je
pusha
jg
ljmp
bound
out
test
or
mov
jbe
repnz
cs
icebp
add
repz
add
xchg
inc
nop
xchg
dec
pop
jbe
cmp
int3
mov
mov
cld
fildl
ja
adcb
lock
imul
jge
inc
or
sbb
or
mov
adc
and
insb
enter
add
cmp
sub
fmull
push
fisubl
notl
and
insb
int
jb
stos
fiaddl
jb
clc
jns
insb
pop
fisubl
mov
pop
cli
mov
repz
fiaddl
out
mov
mov
mov
sbb
mov
stc
clc
cmp
out
mov
xchg
jg
test
mov
jge
xor
dec
inc
cli
cmpsb
cli
push
dec
cmp
and
int
cli
dec
add
jns
jp
add
adc
mov
subb
jo
sub
or
pusha
xchg
in
ljmp
je
rclb
pusha
lret
enter
push
out
lea
int
sahf
mov
mov
push
push
jne
jp
jg
xchg
fidivs
in
data16
mov
sub
adc
jl
mov
mov
clc
mov
sub
sbb
inc
inc
shll
mov
xor
jno
jecxz
ss
adc
jae
js
mov
int
scas
movsb
frstor
mov
and
cli
aas
pop
and
testb
cltd
or
adc
js
push
sub
mov
cwtl
xchg
mov
mov
cmc
push
pop
sbb
cmp
out
mov
ds
push
nop
sub
adc
add
dec
push
roll
bound
pop
cwtl
pop
dec
pop
push
cmp
xlat
es
data16
add
es
lock
insb
icebp
out
or
les
in
loop
hlt
sahf
fst
das
mov
mov
sub
jb
mov
sub
mov
mov
enter
fnsave
sub
aad
mov
mov
leave
and
push
mov
sbb
movsl
rcll
scas
mov
lcall
sub
enter
xchg
add
xchg
push
mov
stos
push
nop
int3
cmp
cmp
icebp
in
cmpsb
lods
and
cmp
dec
jo
jns
test
mov
aas
imulb
mov
out
ljmp
divb
add
adc
pop
mov
shll
lret
sbb
mov
fcmovnbe
xchg
mov
add
dec
out
pop
enter
xchg
shlb
shr
jmp
fildl
bound
enter
pop
xchg
push
int3
push
mov
xor
xchg
adc
pop
cmc
rorl
push
shrb
popa
or
inc
es
rcr
les
ljmp
fucomp
hlt
adc
call
pusha
js
scas
jbe
in
or
imull
div
mov
js
push
ret
hlt
pop
jae
dec
mov
ljmp
out
inc
es
lods
std
ljmp
mov
add
lock
mov
cmp
mov
mov
rcl
test
push
clc
push
shl
bsr
push
neg
lea
add
push
btc
push
test
mov
or
pusha
mov
test
mov
ror
or
sar
sub
lea
pusha
lods
mov
stc
sub
shl
adc
not
inc
neg
not
lea
jae
setle
pusha
inc
pushl
stos
push
mov
lea
push
lea
jne
pushf
lea
call
call
in
gs
add
add
in
and
xor
ret
aad
cmp
push
iret
loopne
xor
cltd
and
stos
xchg
mov
mov
dec
ja
pop
mov
jecxz
ja
mov
enter
insb
ficoml
xor
insb
lods
jnp
icebp
sarb
xor
push
or
pop
push
and
cmp
or
aas
ljmp
popa
dec
cwtl
sub
add
or
dec
cmp
xlat
imul
jne
aas
pop
inc
jns
push
rorb
pop
ret
out
loopne
push
sti
pusha
inc
popa
sbb
dec
adc
xor
sub
xor
ret
mov
loop
lods
dec
fwait
cmp
in
and
cmp
leave
mov
jecxz
lret
mov
push
xchg
lods
cmp
jae
out
lods
adc
aas
andb
sub
lock
cld
gs
and
cltd
push
fcoml
mov
jl
add
lea
je
pushf
mov
lea
add
bswap
dec
neg
mov
pushf
pushf
pushf
pushf
add
call
pushf
pusha
movsbw
mov
call
mov
bswap
mov
pushf
movw
push
movb
lea
jmp
mov
add
dec
cmp
mov
pop
cmc
jb
and
mov
mov
loopne
in
mov
and
rorl
stos
inc
imul
sar
xchg
aas
mov
push
ds
ss
xorl
mov
xlat
sbb
imul
jb
scas
jmp
jp
cmp
mov
imul
fsub
popa
and
popf
loop
aaa
mov
rorb
andl
je
repz
jns
scas
repnz
clc
out
test
scas
rol
pushf
cmc
pushf
bt
neg
call
jmp
add
jo
scas
xchg
lods
pop
clc
adc
cmp
xchg
mov
in
adc
pop
loopne
push
flds
push
bound
ret
mov
pop
rep
arpl
pusha
lods
fidivrl
in
xchg
mov
mov
mov
push
addr16
add
daa
es
sbb
xchg
jo
mov
shlb
xchg
mov
lea
push
xor
arpl
scas
and
insl
gs
call
and
xchg
addr16
adc
xor
and
int3
sbb
out
pop
inc
pop
xor
sbb
jnp
push
and
fwait
inc
pop
inc
lea
int
je
aam
shll
icebp
add
mov
dec
add
xchg
dec
xchg
out
pushf
lea
xchg
pop
loop
adc
sub
mov
adc
or
sbb
jne
nop
test
mov
stos
sbb
bound
xor
jo
out
loopne
jae
xor
fs
jne
movzbw
movb
call
push
xchg
ds
add
xchg
jle
mov
aam
mov
add
xchg
cmp
jbe
mov
push
cmp
fdivrp
pop
pop
cmp
lcall
out
out
cmpsl
or
mov
or
cmp
add
enter
dec
popf
mov
andb
jle
inc
push
cwtl
test
adc
add
and
push
jg
xor
divb
sbb
jmp
hlt
daa
enter
aad
and
cmpb
pusha
test
cmpb
call
mov
add
xor
mov
out
jg
jns
or
and
jae
adc
xchg
adc
sub
mov
fwait
pop
push
inc
adc
pop
lods
mov
mov
jno
xchg
cmp
push
mov
jns
lahf
repz
sbb
push
xor
sar
call
das
addr16
aam
push
int
std
adc
dec
repnz
adc
adc
js
adcl
es
loop
fbstp
dec
fisubl
in
xchg
test
subl
sub
cmpsb
dec
gs
add
decl
insb
inc
jmp
je
scas
fnsave
aas
stos
out
jmp
sbb
mov
sbb
or
dec
sbb
stc
push
je
pop
lret
push
hlt
xchg
xchg
in
push
or
push
sbb
push
pusha
scas
push
add
fwait
mov
mov
sbb
repz
ja
imul
sbb
pop
push
das
sub
sub
flds
dec
jecxz
lea
ret
push
dec
push
popf
add
daa
dec
loopne
test
insl
xchg
inc
jo
mov
fucomi
sub
sub
inc
inc
inc
in
add
fwait
jmp
adc
clc
sub
addr16
in
xlat
fdivl
mov
dec
mov
jno
pop
test
out
call
fistps
jns
xor
adc
dec
or
jp
cmp
jb
jmp
cmp
mov
and
popa
shlb
adc
icebp
sub
mov
rorl
or
ss
mov
out
pop
repnz
push
add
and
jle
pop
and
push
or
inc
jb
jp
mov
inc
pavgw
add
jmp
dec
jl
das
inc
mov
cld
ljmp
dec
xor
decb
test
sub
cmpsb
jge
out
jle
out
pop
xor
or
mov
xchg
lds
jo
jl
or
push
in
mov
repz
or
test
or
andb
or
popa
in
sbb
sbb
rcl
lea
push
enter
std
fmull
mov
and
jo
pop
push
jne
fisubrl
add
ss
add
out
cmp
pop
call
xchg
push
dec
dec
push
sbb
push
pushf
mov
sub
call
sbb
push
push
mov
aaa
sarl
jno
out
mov
faddl
mov
popf
lea
ja
setp
jmp
cmpsb
imul
xor
add
mov
push
notl
rolb
push
fidivrs
dec
cs
data16
mov
cwtl
clc
xor
inc
mov
cmp
imulb
mov
orb
pop
xor
jb
fbld
jg
loopne
into
push
movsl
or
lods
dec
addl
xchg
push
rcl
push
lcall
repz
hlt
in
xchg
cmp
das
test
aad
call
sti
inc
icebp
mov
ret
pop
mov
fsubrl
push
clc
out
push
sub
imul
int
sbb
sub
into
std
and
gs
int3
jb
push
std
lret
pop
lea
rcr
stos
ret
or
xchg
jno
xor
int
mov
rclb
aaa
push
test
inc
das
inc
inc
mov
add
mov
mov
sub
mov
cmp
cli
pop
fisubs
xor
sbb
jecxz
je
pop
mov
das
sub
xchg
push
icebp
aam
xlat
add
imul
pop
test
mov
fiaddl
sub
mov
dec
jmp
aaa
testb
sbb
pop
cmp
out
int
mov
jae
je
mov
xchg
repz
mov
mov
mov
outsb
es
outsb
sub
mov
pop
push
aaa
cltd
call
inc
sbb
mov
test
xor
and
cmc
inc
ja
mov
out
sti
hlt
push
cmp
call
jmp
cmpsb
loop
loop
add
add
scas
inc
cmpsb
test
loopne
or
enter
mov
into
mov
not
mov
add
jnp
or
push
sti
movsb
xchg
add
mov
and
testb
mov
lods
push
add
dec
cltd
add
mov
push
mov
sub
shrl
cltd
les
adc
xchg
insb
cmpsb
pop
loope
add
shll
adc
in
repnz
sub
rcl
sub
data16
sarl
hlt
cmp
push
stos
rolb
push
cld
loope
xchg
jbe
aam
jp
mov
stos
mov
lods
sbb
or
pop
and
rorl
out
sub
lret
xor
push
aas
mov
dec
test
pop
sub
lcall
pushf
pop
enter
push
loope
mov
sarb
pop
outsb
ficoms
xlat
cltd
mov
aaa
jne
mov
insl
call
pusha
lea
je
stc
add
pushf
pushl
pusha
pushf
lea
jmp
scas
push
mov
cmpsb
dec
xor
mov
inc
and
sub
lods
push
enter
in
xor
fs
lcall
mov
xchg
cmpsl
insb
mov
shrl
jb
ss
test
pop
fnstcw
jmp
pop
jp
lret
es
ds
mov
icebp
jae
aam
jle
mov
loope
mov
outsb
clc
insl
adc
dec
dec
or
mov
insl
int3
pop
sbb
lea
sub
xchg
xor
xor
xor
sarl
hlt
je
pushf
push
xor
pxor
fmulp
outsl
ret
mov
sbb
rclb
mov
adc
cmp
xor
and
cmp
cmp
hlt
out
loopne
add
cmp
notl
mov
test
jnp
mov
xor
xor
subl
mov
rcrb
rolb
mov
and
jmp
and
inc
gs
cmp
lds
jno
cmp
mov
mov
dec
mov
jp
or
push
pop
mov
mov
and
pop
mov
movl
imulb
outsl
pop
jns
cmpsl
inc
adc
popf
sub
in
out
gs
mov
lea
je
pusha
lea
xchg
pusha
movsbl
movzwl
lea
lea
call
push
adc
xor
int
cwtl
call
les
jl
fsubrl
pop
int3
mov
jmp
xchg
enter
cli
mov
stc
pop
filds
inc
sbb
dec
js
jl
dec
test
aas
cwtl
out
cmpl
aas
push
pop
mov
adc
mov
movsb
pop
adc
mov
outsl
add
xorl
push
cmp
imul
stos
xchg
cmp
int3
add
fs
jmp
pusha
pusha
pushf
lea
jne
jmp
pusha
lods
test
movb
test
stc
xor
jmp
push
jmp
pushf
add
pushf
bt
call
sbb
pop
fidivs
add
gs
mov
lods
popf
js
outsl
or
sub
sub
mov
jl
rclb
aam
mov
addr16
mov
adc
inc
sub
ljmp
outsl
lahf
out
mov
push
cs
add
push
inc
mov
js
sbb
jnp
jmp
fsubrl
leave
and
in
jl
add
cli
xlat
cmc
fists
pop
les
sti
and
xchg
lods
mov
mov
leave
pop
fcomi
inc
insl
std
sarl
mov
call
xchg
or
pusha
lea
call
pusha
lea
jmp
mov
dec
jmp
pusha
pusha
movl
pushf
lea
jb
push
pushf
movl
push
lea
jmp
mov
jmp
cmp
jmp
call
loope
pop
fnsave
add
movsl
mov
sarb
rcl
aas
stc
repz
adc
add
fwait
and
fdivrl
mov
adc
pusha
pop
xchg
rcll
jge
xchg
xor
nop
call
lea
add
push
or
cmp
out
popa
rorl
sbb
cmpsl
lcall
arpl
out
stc
sbb
in
imul
addr16
push
push
push
inc
adc
fstpl
and
pop
xor
mov
jae
add
out
add
push
sbb
enter
mov
fnsave
add
inc
in
enter
add
loope
xchg
mov
or
shlb
cmpsb
shll
pop
and
or
add
sbb
addr16
dec
jb
sti
repz
leave
push
cltd
sub
mov
pop
std
mov
jo
jae
out
adc
insl
andl
jmp
in
outsl
ja
sti
sbb
push
jmp
xor
xchg
jnp
test
sbb
ds
dec
dec
sbb
push
imul
mov
cmp
ret
cmp
insb
dec
in
jl
addr16
test
mov
adc
cmpsb
ffree
popa
and
mov
ja
ds
mov
adc
mov
sub
fs
sbb
xchg
aas
add
scas
jmp
adc
scas
pop
mov
fnstcw
rolb
iret
inc
xor
mov
out
outsb
outsl
xlat
sbb
aas
stos
pop
out
adc
fwait
cmp
push
pushf
adc
popa
push
jmp
xlat
test
sub
es
sbb
push
pushf
pushf
mov
or
icebp
loopne
icebp
pop
mov
outsl
xor
shll
jae
in
sahf
lahf
int
mov
push
rol
mov
sub
sub
mov
jnp
adc
mov
jns
add
xor
jg
cmp
ss
enter
scas
pop
and
xchg
jl
testl
mov
lods
popa
or
push
sub
das
push
arpl
fidivrl
cmpl
pop
or
popf
xor
in
stc
es
adc
ss
push
nop
lret
cli
mov
adc
pushf
push
adc
xor
or
mov
cltd
pop
fcmove
sarl
mov
popa
jne
add
mov
and
lods
sbb
cmp
mov
shr
adc
ljmp
bt
test
jmp
movb
lea
jne
jg
pushf
mov
lea
call
push
push
pusha
lea
jmp
fcmove
pusha
fidivl
add
testb
xchg
mov
xor
lea
shlb
sbb
fs
fucomip
repz
cld
cmc
add
and
or
iret
jmp
adc
lret
dec
clc
inc
lock
pushf
adc
xchg
movsb
push
push
adcl
roll
jae
add
repnz
call
mov
add
sbb
enter
shrl
dec
pushf
movl
pushf
lea
jmp
call
imul
add
lret
das
xlat
mov
test
add
cmp
lret
jecxz,pn
adc
cmc
sub
mov
pushf
push
jp
xchg
cmp
jg
add
outsb
push
xchg
lcall
arpl
jb
aas
mov
inc
mov
dec
xchg
lahf
in
adc
imul
rorb
or
js
jns
out
adc
ret
sbb
js
pop
jle
stc
movsb
lods
dec
pop
push
sub
mov
aaa
inc
mov
jo
push
fmul
pop
mov
cmp
test
xor
mov
xor
arpl
cwtl
and
and
push
or
int
xor
xchg
in
cmpsl
adc
add
addb
mov
outsl
lds
xor
rorl
jns
scas
mov
sub
push
inc
sub
stos
push
popf
lods
sbb
push
xor
xor
mov
loop
xor
xchg
jmp
inc
xor
popa
cmp
jp
xor
adc
sahf
sub
sub
xor
mov
lock
jmp
adc
cli
in
mov
cmp
mov
sub
popl
xor
inc
pop
cmovp
sub
add
pop
stos
push
arpl
sbb
push
adc
sbb
pushf
aam
pushf
lods
std
mov
xchg
imul
and
test
jge
lret
dec
rorb
sbb
daa
outsb
repz
jb
sti
das
cmp
shrb
ret
push
mov
insl
mov
ds
sub
sbb
ja
js
xor
mov
lea
adc
das
jp
test
xor
sarb
shll
movsl
mov
and
adc
imul
ja
jns,pn
ja
cld
push
cmpsl
xchg
push
add
out
test
arpl
jle
push
js
icebp
je
cmp
jle
mov
pusha
pushf
pusha
pushf
lea
jmp
push
inc
inc
xlat
xor
dec
cmp
lods
sbb
ret
ljmp
pop
pop
xchg
adc
jl
adc
sahf
xor
in
insl
xor
xchg
imulb
fistl
mov
lahf
sub
jle
leave
jle
inc
jge
pusha
pop
jmp
decl
jb
js
cmc
mov
inc
mov
mov
add
or
mov
jb
les
divps
cltd
pop
addl
xor
inc
stc
dec
das
jecxz
shlb
andb
inc
push
push
icebp
sbb
iret
dec
mov
js
inc
inc
mov
mov
sahf
das
xchg
jo
call
push
adc
pusha
cmp
pop
movsb
or
loop
dec
mov
jno
data16
fcmovb
mov
mov
fs
imul
mov
setle
fs
mov
lret
jl
enter
in
push
inc
mov
fcompl
pop
add
and
jno
cmp
es
scas
mov
imul
test
lods
mov
sbb
lahf
not
lahf
push
lea
movb
pushf
pusha
movl
push
pushf
push
mov
pushf
push
pushl
ret
cmp
clc
call
mov
pusha
pushf
mov
push
mov
push
call
inc
mov
shr
jmp
adc
add
mov
add
add
add
mov
add
add
mov
add
add
inc
jge
add
add
add
daa
add
add
add
sub
add
add
add
add
add
ss
add
add
imul
sub
add
sub
jg
daa
add
stos
sub
add
add
add
add
add
leave
mov
and
xor
pop
add
pop
sub
lock
jo
cmp
jl
pop
push
inc
loop
cmp
jo
lret
aas
pop
mov
addr16
and
push
imul
shl
scas
cmp
inc
fidivl
cmp
sbb
jg
lret
insb
aas
inc
dec
pusha
test
fs
push
mov
push
sbb
adc
fisttpl
ret
cmpsl
jne
lock
and
adc
adc
push
pusha
ds
or
add
sub
cwtl
mov
outsb
push
ja
or
add
or
push
cmp
mov
cmpsl
push
cmp
js
das
sarb
arpl
jg
cs
ret
fisttpll
xchg
mov
outsl
sbb
push
in
jecxz
cwtl
inc
mov
cmp
xor
out
or
jmp
xor
nopl
clc
sub
mov
add
pop
pop
xchg
add
and
pop
jne
xchg
cmpb
sub
fiaddl
add
add
stos
dec
fldz
data16
inc
popa
test
aad
push
fsubl
pop
cmp
shl
aam
shll
scas
lahf
int
pop
popl
jle
push
and
out
mov
in
cmp
cmp
mov
cmp
out
cwtl
scas
jb
adc
mov
outsl
rcrl
dec
xor
add
lds
icebp
nop
cmpsb
test
ds
call
and
push
pop
pop
fildll
lea
jbe
shl
movsbw
clc
mov
shld
bsf
sar
add
xchg
or
bsr
shld
mov
btc
shl
inc
movsbw
add
stc
rcr
movl
stc
movsbw
not
or
mov
pusha
cmp
push
lea
jbe
shrd
sub
movzbl
clc
mov
bt
movzbw
mov
movsbw
bswap
sar
add
mov
shr
or
push
add
rol
mov
shr
movzbw
call
cmp
out
shll
add
int
add
cmp
dec
out
cltd
push
inc
pop
pushf
push
clc
pop
cmpl
inc
inc
pop
sub
or
mov
inc
pop
mov
hlt
lcall
fcompl
mov
fbld
dec
ljmp
into
cwtl
test
bound
cmpsl
rcrl
add
jg
lds
jnp
shlb
add
mov
pop
daa
into
lods
cwtl
mov
fcmove
lcall
jecxz
and
inc
mov
imul
adc
jo
lahf
inc
pop
push
mulb
push
subb
mov
pop
notl
push
cmp
movsl
repnz
sub
sbb
in
int3
and
int3
mov
sub
imul
adc
xor
shlb
inc
cmpsb
int
inc
jecxz
and
push
dec
scas
ds
fiaddl
push
or
dec
test
fidivl
es
cmp
movsl
aam
leave
and
ret
fldcw
rorl
mov
push
dec
inc
push
movsb
ffreep
sub
pop
fsubr
popa
xorl
cmp
xor
loopne
xor
xor
sub
nop
mov
push
clc
push
cmp
nop
push
inc
das
sub
ss
fs
ror
call
cmpsl
jne
shll
add
xor
icebp
int
mov
stc
xchg
outsb
jle
sbb
out
std
pop
mov
xor
dec
mov
sub
sbb
push
fsubr
mov
les
push
repz
cmp
lcall
jo
mov
mov
pop
dec
and
inc
dec
jne
adc
sbb
sahf
rcrl
dec
jmp
xchg
push
leave
shlw
add
arpl
sub
sbb
mov
mov
call
push
pop
mov
push
popa
icebp
xchg
or
and
push
test
mov
test
repz
cli
insb
aas
inc
mov
aas
pop
imul
test
fcmovnb
jmp
ja
fildll
sbb
dec
cmp
push
jmp
adcb
lcall
js
inc
xchg
gs
daa
out
andl
imul
int
jge
xor
shld
pushf
mov
clc
pusha
bt
bt
cmpb
pusha
jmp
add
shlb
add
test
xchg
out
fisubl
pop
push
je
or
out
daa
jp
pop
into
aad
mov
xor
or
addr16
data16
adc
test
mov
insl
int
in
and
aam
sbb
fimuls
dec
xchg
shll
jbe
inc
cmp
mov
int3
in
in
pop
fs
mov
or
or
mov
movsb
xchg
adc
aas
pop
sub
add
andl
sub
push
add
repz
pop
pushf
lods
dec
cmpsb
insl
outsl
push
jecxz
out
je
push
xchg
lcall
aaa
lea
ja
pushf
clc
add
cmc
test
cmc
cmp
or
pushf
pushf
pushf
lea
je
call
inc
xchg
mov
jl
stc
pop
fs
cld
rcrl
dec
in
repz
sbb
mov
sbb
mov
ljmp
leave
scas
add
add
out
xor
enter
les
mov
xchg
adc
test
lock
ss
es
stc
roll
push
pop
in
mov
in
sub
xor
stos
push
inc
xor
test
aam
pop
inc
cmp
adc
push
cwtl
push
xor
test
test
outsb
fisubs
out
jmp
stc
sar
add
cltd
sub
movsl
dec
xor
inc
dec
add
push
cmp
shlb
sbb
and
pop
xchg
stos
sub
mov
dec
aad
sub
je
cli
lods
or
pop
fimuls
jb
xchg
mov
lea
push
mov
iret
scas
daa
xchg
or
lods
sbb
ret
scas
xchg
or
ds
inc
push
mov
aam
xchg
and
mov
mov
pop
rcll
cmpsb
inc
mov
mov
sub
xor
outsb
shll
sub
mov
call
mov
add
mov
icebp
push
sub
sti
or
add
dec
inc
sbbl
cwtl
icebp
jae
sahf
das
adc
aam
int3
nop
mov
lret
into
repnz
cld
and
cmpsb
sub
jecxz
int3
rorb
xchg
inc
sub
bound
fcmovnbe
ljmp
in
mov
fs
jne
call
pushf
pushl
lea
jbe
btc
shr
sub
rcl
btr
and
mov
neg
shrd
shl
mov
shr
add
lea
rol
btr
shr
add
mov
rcl
cmc
pushf
add
movzbw
bswap
jmp
cmp
out
xlat
lea
dec
jbe
decl
int
add
or
scas
leave
ret
lea
mov
cli
popf
add
cmp
aam
inc
add
cmp
and
aaa
fmull
and
pop
dec
movsl
repz
rcll
adc
xchg
dec
notl
out
notb
xchg
cmp
jecxz
aas
ret
and
pop
dec
ds
mov
int
add
sahf
scas
popf
sub
call
sbb
add
icebp
aad
add
in
in
out
loop
cmc
daa
lea
xchg
fistpl
sub
mov
cmpsl
insb
lret
xchg
xor
andb
sti
jmp
push
or
std
jo
sbb
sarl
mov
lea
xchg
push
sbb
sbb
lock
cmpsb
cli
push
adc
mov
pop
xor
mov
and
lcall
add
add
add
add
push
movl
push
push
call
lea
jne
push
jmp
pusha
push
cmp
call
lea
je
cmc
cmp
call
inc
adc
xor
imul
mov
and
aas
mov
xchg
add
cmp
sub
popa
mull
mov
pop
fistpll
imul
push
mov
addr16
outsl
int
ja
mov
dec
loopne
sub
push
inc
hlt
mov
movsb
mov
loopne
lods
adc
nop
call
stos
sahf
mov
push
push
push
mov
daa
mov
clc
add
jae
and
inc
movsl
xor
lds
mov
or
dec
enter
test
cmp
aam
mov
leave
pushl
pushf
lea
jmp
mov
xchg
xor
push
and
in
mov
mov
les
mov
pushf
mov
add
mul
push
hlt
fildl
fcompl
in
insl
pop
mov
sbbb
outsb
aad
and
andl
cmp
loopne
in
lcall
and
adc
dec
pop
in
mov
xor
and
sbb
pusha
or
nop
inc
insb
dec
arpl
pop
cmc
push
xchg
fstl
add
lret
xor
mov
push
cmc
add
shl
movsl
sub
out
movsb
inc
push
mov
pop
push
hlt
dec
or
divb
adc
xor
add
dec
lcall
xor
bswap
push
push
test
bound
or
mov
lods
mov
mov
data16
test
sahf
push
cltd
fbstp
inc
jae
mov
fisttpll
mov
out
sub
jo
test
dec
push
push
jecxz
loop
mov
fucomi
jge
add
or
and
test
rcr
shrd
mov
pusha
clc
call
dec
bsf
stc
setne
mov
pusha
and
cmp
add
lea
call
mov
not
not
movb
pushf
lods
cmp
clc
pushf
xor
jmp
call
repnz
lret
lret
shl
cmp
push
pop
sub
push
adcb
outsl
int3
cmp
push
push
pop
lds
cmp
sbb
lret
rcl
jecxz
jge
cwtl
test
ret
aam
test
push
jae
movsb
adc
mov
push
pop
xor
sub
xor
inc
adc
cmp
adc
outsl
inc
addr16
jge
adc
notl
jb
in
fstps
outsl
jmp
xor
fwait
mov
cmc
dec
dec
dec
leave
xor
inc
out
nop
out
sub
icebp
xor
mov
add
stos
scas
lret
popf
cli
pop
roll
ficompl
push
cmp
cmc
es
adc
jo
nop
mov
mov
jp
in
and
fdivrp
lret
jns
setns
xor
adc
or
mov
ret
addl
outsb
mov
adc
xlat
jnp
pop
loope
shll
sub
cmovle
add
fisttpl
ficompl
lea
inc
jne
inc
sub
push
shr
aas
bsr
mov
stc
add
clc
mov
cmc
test
pusha
lea
je
pushf
push
sub
mov
cmp
pushf
call
jmp
mov
movzbw
mov
pushf
pushl
ret
rep
mov
not
call
movzwl
lea
mov
bt
add
clc
movb
pushf
mov
stc
test
push
pushf
lea
je
cmp
test
add
push
call
std
outsb
enter
xor
jae
scas
lds
subl
aas
and
or
daa
in
rcrb
sub
mov
popa
pushf
popf
push
push
cli
add
ljmp
push
xor
ret
scas
cmp
cmp
and
cld
xchg
js
sbbb
fwait
mov
test
test
and
int
sbb
pop
sarb
into
mov
inc
and
sbb
xor
loop
xchg
stc
outsb
pop
in
inc
cmp
in
xchg
or
sbb
enter
popf
in
inc
jbe
and
cmpsb
xchg
mov
sub
pop
les
sbb
cmp
and
xor
dec
cwtl
add
cmp
imul
jne
sahf
and
mov
cmp
adc
adc
outsb
test
jo
outsb
cmp
loope
rcr
stos
and
xchg
mov
movsl
lcall
pop
dec
push
daa
inc
sub
add
xor
add
cli
ja
std
adc
test
dec
lea
mov
cld
push
cli
jecxz
adc
aaa
add
xor
cmpsl
cwtl
mov
mov
addb
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lods
push
rol
add
push
lcall
addr16
mov
shl
push
lahf
or
jg
dec
aas
lret
dec
imul
fs
hlt
mull
pop
sbb
test
add
cmp
fimull
xchg
jle
sbb
mov
jb
ds
dec
sbb
popa
mov
int3
cmp
jg
inc
mov
push
pop
mov
fmul
jb
push
sub
xchg
dec
pusha
and
xor
cmp
adc
jp
lcall
inc
ret
mov
mov
mov
ret
jge
out
addr16
or
sti
or
or
pop
cwtl
pusha
rcl
les
mov
jg
sbb
test
push
ds
pop
mov
cmp
das
jae
lcall
shlb
cmpsb
mov
int3
and
outsl
sub
rcll
shll
xor
mov
call
mov
xor
fstps
cltd
and
inc
std
stos
out
and
cmpl
loop
cli
mov
rep
out
add
push
or
push
popa
das
mov
or
repnz
adc
fbld
mov
cltd
test
cmp
mov
inc
fisubl
out
cmp
jg
outsl
pop
dec
inc
shlb
enter
lods
sbb
xor
fdivrl
jg
and
or
dec
push
mov
ds
lcall
jnp
xorb
test
add
ret
lock
xchg
mov
lcall
and
in
xor
cmc
fs
lods
jns
loope
and
mov
jne
mov
mov
pop
popf
pop
add
cmp
inc
lock
add
movsl
popa
dec
sbb
or
xchg
xchg
lds
add
aam
mov
cltd
sub
mov
in
xchg
nop
incb
dec
stos
lahf
jge
jno
mov
or
sbb
scas
jb
sbb
mov
and
or
xor
out
dec
dec
sbb
push
das
lret
cs
xor
jo
addr16
jae
jno
shr
mov
add
push
movb
pushl
pushl
ret
mov
cmp
pushf
lea
jbe
cmc
ror
or
sub
mov
mov
shld
mov
bsr
add
shr
pusha
pusha
shr
bts
cmp
mov
ror
movsbl
add
call
seto
movzbl
movsbl
mov
push
push
lea
jmp
cmp
movb
pushf
pusha
jmp
or
add
mov
lds
pop
jle
xor
add
push
mov
jge
fdiv
cmp
xchg
push
leave
lahf
in
xor
and
fs
daa
xor
into
iret
cmp
data16
sbb
ret
int3
inc
sbb
fstp
insl
jnp
ror
and
push
mov
push
rol
cmc
inc
sbb
scas
and
push
lret
dec
call
cld
cwtl
ljmp
lahf
and
gs
push
jnp
decl
jo
mov
or
scas
loopne
add
mov
lahf
adc
and
je
jb
arpl
arpl
xor
dec
jno
imul
out
push
mov
out
mov
xchg
inc
ljmp
sbb
cld
or
iret
in
add
add
clc
mov
aas
mov
push
std
cltd
inc
jge
insb
mov
sbb
mov
xor
adcl
or
loopne
dec
cmp
pop
xchg
imul
xor
fnsave
or
sub
pop
es
xor
jne
cmc
enter
mulb
in
popf
addr16
rcll
jne
data16
and
imul
push
inc
push
mov
xorl
and
inc
add
stc
subb
sbb
ja
bswap
pop
shrl
and
pop
ds
adc
int
movsb
mov
inc
lcall
cmp
xor
in
dec
insb
fisubrl
imul
cwtl
pushf
mov
mov
and
pop
and
mov
mov
cld
pop
and
sub
popa
inc
jmp
sahf
stc
push
pop
mov
mov
mov
mov
stc
pop
and
mov
mov
mov
sbb
or
mov
into
mov
pop
cmp
sub
mov
dec
push
stc
orl
dec
mov
mov
push
sbb
pop
dec
jbe
mov
jbe
addr16
jb
jae
cmpsb
sahf
std
sarb
stos
iret
rorl
pop
mov
or
mov
mov
sub
mov
cmp
test
mov
sti
dec
into
xchg
mov
mov
stc
mov
mov
sbb
xor
xchg
pop
loope
xlat
pop
idivl
and
dec
ffree
sar
divl
sub
sbb
jbe
or
in
mov
mov
cli
pop
sub
pop
ret
sub
push
dec
aad
adc
mov
lds
scas
lahf
arpl
push
out
movb
stos
cmp
mov
mov
aam
call
pop
ljmp
sub
pop
fcmovbe
ss
inc
cmp
or
sbb
dec
jbe
ret
ret
push
testb
or
int
or
rcrl
lret
fprem
push
repnz
shlb
lods
daa
std
pop
inc
inc
pop
mov
in
cmp
mov
das
or
and
cli
mov
les
out
aaa
push
pop
mov
fisttps
mov
cmpsb
int
cs
or
fsub
jmp
mov
sbb
dec
out
xchg
test
out
xor
out
bound
mov
sbb
xlat
mov
or
ss
imul
mov
or
lret
outsb
jl
adc
push
data16
and
push
push
mov
pop
pop
xchg
mov
sbb
hlt
loop
mov
out
jne
mov
mov
imul
push
pop
push
lret
les
lret
add
mov
sar
or
lods
fdivs
lds
adc
out
jns
mov
fs
jno
or
xor
hlt
repnz
pop
xor
dec
cli
and
and
xor
pop
loop
and
sbb
sti
aad
scas
xor
out
ljmp
pop
scas
daa
popf
cmpsl
and
pop
jge
ret
and
or
mov
sub
sub
mov
and
mov
jns
cmp
lock
rcl
mov
and
insb
fsts
sbb
test
push
mov
ret
ret
push
into
sub
push
xchg
fidivrs
mov
pushf
in
out
mov
popf
xor
lock
and
mov
mov
push
rorb
repz
in
bsf
out
out
rclb
and
mov
out
ja
in
dec
xchg
lahf
rol
mov
subb
xchg
pushf
and
mov
ja
mov
cli
push
loop
cmp
cld
mov
mov
fdivrl
sub
out
xor
push
mov
cmp
ja,pn
mov
mov
rorl
fsubp
sub
xchg
aas
sbb
flds
mov
les
mov
iret
aam
xlat
orb
rolb
add
cmpb
inc
push
xchg
popa
mov
mov
testl
sbb
cmp
push
lds
lods
aad
mov
cmp
mov
filds
aas
aam
or
inc
lret
lds
sbb
cmpsb
rol
push
mov
imulb
enter
xlat
sti
cld
ror
inc
ret
stc
or
mov
jl
sahf
inc
jmp
rol
sbb
leave
scas
jbe
sbbl
fdivrl
jbe
rcr
ret
jge
sbb
pop
mov
lea
test
incl
jp
xchg
rcl
cmpl
inc
js
mov
mov
mov
jmp
les
inc
repz
fistpll
cmpsl
cli
sbb
pop
pop
aam
mov
add
jge
cmp
cmp
and
mov
fs
sub
ss
or
inc
fldt
ss
cmp
aaa
pushf
dec
sub
fcompl
or
mov
xchg
sub
dec
mov
and
inc
mov
int3
data16
jge
clc
out
out
into
jl
pop
sbb
outsb
jns
adc
adc
sbb
std
xchg
test
mov
stc
sub
lret
call
mov
sub
in
pushf
ss
sbb
cmp
test
lock
xchg
jg
lcall
inc
xchg
push
ret
xchg
push
mov
out
rcrb
loop
inc
sub
mov
mov
scas
test
leave
mov
leave
rorl
inc
movsl
push
xchg
dec
push
sub
dec
ficompl
inc
push
pop
xchg
inc
test
scas
and
sbb
mov
push
xchg
pop
rcll
push
orl
movsb
push
adcb
cmp
lret
inc
mov
inc
shlb
fistpl
sub
mov
mov
cli
or
inc
mov
sub
scas
mov
icebp
add
rol
nop
icebp
jns
pusha
mov
iret
fmuls
push
or
call
cmp
cld
es
pop
fdivrp
mov
mov
aam
rep
ret
mov
xor
dec
imul
les
sub
jns
loop
ljmp
inc
cld
pushf
mov
sub
stc
and
sbb
cmp
movsl
aad
sub
pop
sahf
call
mov
inc
sub
mov
movl
cmc
inc
push
jle
sub
repz
inc
ret
inc
pop
lds
cmp
jno
jbe
bound
jnp
add
add
aad
inc
fiaddl
mov
push
lret
push
xchg
test
pop
fstps
dec
add
mov
bound
mov
insl
add
lret
sub
cmc
aas
in
mov
dec
rol
lret
dec
out
repz
out
sub
cmp
inc
and
test
add
sub
cmp
enter
aad
sub
out
push
bswap
inc
xor
pushf
ds
aas
test
sub
xchg
jmp
cmp
jl
ljmp
cmp
cmp
addl
enter
or
into
or
lea
int
cli
or
pop
mov
in
dec
sbb
mov
and
mov
fst
xor
fistpll
inc
mov
push
mov
scas
or
test
out
test
faddl
fmulp
rolb
fcompl
aas
test
mov
adc
pusha
aam
mov
test
xchg
iret
fistpl
or
enter
lcall
inc
add
out
popa
into
mov
xchg
cld
mov
inc
imull
movb
push
ja
mov
mov
lods
filds
push
es
es
incl
sti
xchg
push
lods
sarb
ds
lods
add
cmp
ret
ret
dec
mov
out
xchg
fsub
sbb
xchg
rol
jl
mov
xchg
sub
fstl
mov
inc
pop
push
and
add
xchg
inc
fistps
lret
xchg
ja
mov
pop
test
mov
add
cltd
push
jle
mov
xor
leave
mov
bswap
cmp
or
mov
jb
pop
or
mov
ja
jmp
lds
push
xor
xchg
dec
cmpsb
fisttpll
fistpll
dec
movsl
aad
int3
inc
mov
dec
ja
aaa
shl
cmp
shrb
enter
leave
pop
cld
sub
loop
push
and
inc
imulb
push
lret
dec
loop
cld
loop
int3
lret
pop
loop
or
cli
out
and
dec
and
fisubl
cmpsb
add
test
dec
sub
dec
jmp
mov
inc
push
lahf
cmp
inc
mov
pop
or
nop
jnp
stos
adc
bndstx
xchg
popa
pop
shlb
clc
cs
stos
pop
xlat
fsubs
stos
lock
popf
cmp
cwtl
cmpsb
mov
push
jo
gs
lods
cli
jmp
add
int
cmp
adc
cltd
sahf
divb
mov
sub
stc
inc
jge
adcb
scas
add
mov
int3
cmpb
cli
pushaw
dec
div
cmpsb
mov
xorl
sahf
lods
cli
lods
jno
out
add
filds
sahf
xchg
iret
loop
aaa
add
adc
inc
mov
decb
sti
mov
cmp
mov
sahf
or
ss
stc
mov
into
mov
rcrl
cs
dec
outsb
stos
push
cmpsl
mov
scas
fldenv
ja
or
lods
clc
mov
jp
push
sbb
int3
rorb
adc
xchg
xorl
imul
jne
pusha
jns
sti
mov
dec
mov
mov
or
filds
jle
mov
iret
sbb
cwtl
xor
int
repnz
scas
push
push
or
inc
aas
sub
rorb
sbb
or
add
mov
sahf
cltd
adcb
bound
subl
push
inc
and
sub
add
and
loopne
jp
pop
jo
mov
sub
inc
push
pusha
lods
jle
sbb
dec
ja
filds
lahf
sub
repnz
in
pop
pop
cmc
cli
test
ret
shl
into
fidivl
jno
imul
adc
mov
bound
jle
mov
mov
add
int
ljmp
jge
movsb
stos
mov
adc
cli
in
jp
dec
rolb
cli
std
enter
lret
std
sub
xchg
scas
jle
pop
and
stos
cld
sub
std
mov
push
in
mov
pop
mov
popl
mov
cmp
neg
xchg
push
rcrl
inc
fsubl
clc
adc
les
jp
test
jne
mov
bound
xor
pop
mov
stos
in
dec
jle
iret
mov
out
filds
mov
cmp
inc
cmp
out
or
lods
xlat
inc
mov
data16
ret
inc
leave
icebp
xor
mov
jnp
jnp
mov
cltd
out
mov
mov
test
pop
xchg
mov
fcmovnu
test
ljmp
scas
inc
cmc
sbb
test
push
inc
mov
fistl
or
pop
mov
mov
push
lods
sbb
mov
mov
add
lods
mov
movsb
xchg
lret
jns
mov
xchg
cs
repz
xchg
mov
mov
mov
ficompl
inc
lret
ds
icebp
int
sub
push
mov
cwtl
jbe
jns
sarl
maskmovq
mov
cmp
les
icebp
clc
sbb
cmc
sarb
sub
lods
cmpsb
push
xchg
cmp
aaa
mov
mov
iret
pop
mov
or
inc
insl
outsb
data16
adc
cwtl
jmp
sub
ficomps
mov
les
clc
out
mov
movsl
pop
xchg
mov
cli
rcl
repz
dec
xchg
mov
mov
les
and
mov
cwtl
int3
cmc
lds
lret
cli
aad
into
iret
lret
xor
call
nop
push
pop
test
dec
mov
sahf
mov
mov
xor
fsubrp
aad
sbb
lcall
jb
adc
mov
into
sub
out
jmp
dec
and
lret
cmp
lcall
cs
sti
shrb
cmpsb
mov
aaa
dec
stos
lcall
imulb
mov
jbe
repnz
push
insb
dec
roll
or
or
sahf
cmpsb
in
xor
or
cmpsb
ljmp
dec
orps
leave
xchg
sahf
pop
xor
jo
out
mov
cmp
push
fnstsw
pop
fiaddl
leave
movb
mov
mov
sub
xor
inc
pop
fadd
dec
adc
cmp
into
fcmovbe
aas
sti
cmpsb
jno
mov
push
add
dec
add
cli
ficomps
scas
ret
cli
movsb
jbe
aad
push
sbb
or
sub
shlb
adc
into
popf
int
xchg
mov
sbb
rcl
jnp
dec
inc
push
loope
cli
cmp
fists
into
aaa
out
mov
cmc
fchs
rol
je
lret
mov
or
je
nop
push
call
nop
psubb
sarb
sub
jmp
in
dec
add
inc
mov
shll
fdivr
adc
enter
iret
lea
lret
jns
pop
fcom
mov
imul
xchg
jmp
mov
dec
ret
leave
jae
call
dec
sahf
xor
and
mov
js
mov
movsb
add
lcall
aaa
jbe
mov
sub
scas
loope
cli
lods
stos
mov
lds
stc
mov
mov
sub
vunpckhps
scas
cmp
mov
add
jbe
ds
cmp
stos
shlb
cmpsl
loopne
inc
ret
lret
inc
aaa
shl
mov
call
mov
out
mov
stos
cmp
xchg
xor
cmpsb
cmp
sub
aam
mov
outsl
fdivrs
add
in
and
inc
in
scas
push
pop
fisubs
repnz
sub
sarb
outsl
or
xor
ds
mov
movsb
mov
ds
inc
mov
lods
or
add
outsb
ffree
and
jge
sub
rcrb
inc
cmp
add
and
sahf
xchg
mov
fcmovu
mov
sbb
cmp
scas
jmp
jl
icebp
inc
incb
cmp
add
pop
mov
jl
jl
or
jp
fadd
or
mov
inc
dec
mov
adc
mov
sbb
sti
addr16
ja
sbb
push
aam
aas
dec
dec
jne
leave
sbb
scas
inc
sub
inc
mov
push
mov
lds
shl
adc
clc
mov
xchg
clc
or
fdivr
sub
dec
sub
aas
push
jl
dec
add
inc
or
ret
lds
imul
repz
dec
dec
dec
clc
lods
or
fcomps
cmp
inc
fsubp
outsl
fisubs
cmp
cmp
lret
add
jo
or
and
pop
imul
push
sbb
inc
inc
fisubl
jo
sahf
lds
cmp
cmp
cmp
cmc
movb
sub
outsb
push
clc
sub
js
fisubrs
push
jl
cld
stc
lods
mov
stc
lock
push
testb
scas
into
mov
dec
mov
jnp
shrl
mov
sub
loop
jmp
aas
mov
subl
outsb
inc
mov
idiv
mov
lret
mov
dec
loop
cmp
cld
pop
popa
and
sbb
negb
add
lcall
scas
aas
add
enter
andb
addr16
fabs
adc
and
pop
xor
or
cmp
jnp
xor
sub
jnp
ffreep
into
mov
fptan
xabort
and
add
fidivl
xchg
adc
imul
pop
inc
sub
mov
lods
fbld
sub
test
xchg
pop
mov
push
mov
mov
cli
icebp
add
mov
bound
out
mull
sub
dec
imul
and
fs
and
std
sub
sbb
sub
jne
sbb
inc
mov
jecxz
sub
dec
add
call
lock
rorb
stc
ljmp
lea
scas
push
xchg
inc
sub
outsl
outsl
sbb
add
test
mov
cmc
push
sbb
sti
push
push
pop
fsubrp
add
sti
add
adc
fsubrp
leave
lods
jo
mov
repz
cmpsb
mov
mov
lock
mov
mov
sarl
mov
sub
sarb
js
js
in
sub
sbb
jno
push
inc
cmp
push
mov
cmc
stc
lcall
adc
andl
mov
mov
or
mov
ja
mov
sub
inc
jb
jle
mov
cwtl
ds
fwait
ja
ret
sbb
jo
sbb
mov
jmp
mov
ja
mov
movsl
std
add
add
js
sub
pop
outsl
iret
mov
loop
inc
push
ja
add
lea
jmp
sbb
movsl
mov
jo
push
add
xor
jge
jne
mov
je
jmp
js
rorb
shrl
mov
clc
push
inc
mov
dec
lock
jno
push
lret
mov
enter
adc
fwait
mov
mov
mov
sub
add
mov
ss
inc
repnz
inc
ret
add
cmp
mov
mov
outsl
fnstenv
inc
mov
adc
cmp
xchg
icebp
xchg
ss
in
lcall
repz
test
sub
push
mov
jmp
cli
ret
inc
push
jnp
sbb
pushf
inc
xor
iret
add
movb
aas
add
adc
cmpsb
cmp
rol
out
mov
test
or
outsb
cltd
iret
shlb
out
rcr
out
xor
or
ljmp
lahf
sarl
jg
call
push
aas
jle
clc
ljmp
mov
fnstenv
call
mov
jecxz
mov
xchg
ret
inc
xlat
push
sahf
sub
sub
outsb
xchg
divl
roll
ljmp
dec
sahf
or
test
aam
mov
out
test
jle
cli
out
mov
popf
push
cld
dec
mov
mov
mov
out
xlat
xchg
ss
cmc
mov
mov
rcrb
cmp
mov
dec
dec
out
inc
mov
lds
mov
sub
jns
dec
cli
arpl
aas
adc
idivl
xchg
xor
pop
fnstenv
dec
sub
movups
push
sub
dec
dec
arpl
imulb
testl
xor
jl
xor
ret
sarb
mov
js
rcr
xchg
and
ja
mov
mov
pop
mov
mov
mov
sahf
ds
inc
or
rorl
inc
mov
stc
push
mov
xchg
out
scas
lock
xor
xor
loop
js
mov
jmp
les
cmp
jp
mov
call
leave
aas
fcmovne
out
repz
decb
inc
inc
cli
adc
out
pop
lods
fidivrs
cwtl
ret
adc
ret
xor
jns
in
mov
mov
sub
pop
inc
pop
in
cmp
xchg
scas
fisttps
punpckhbw
inc
sbb
ds
insl
outsb
mov
mov
icebp
ds
add
fcmovnb
lret
sub
hlt
ret
ret
jle
mov
jo
dec
mov
fisubl
xchg
push
xor
js
sub
mov
sub
mov
mov
ret
pop
mov
mov
dec
rep
adc
pop
lret
and
mov
idiv
push
pushf
rcl
hlt
add
lcall
cli
aad
mov
insb
cmpsb
in
lret
adc
call
in
iret
mov
sub
push
scas
mov
into
stc
cld
shrb
xchg
fabs
lcall
ficompl
push
scas
xor
ja
mov
lods
sub
aam
mov
and
or
mov
cli
scas
mov
adc
inc
cmpsl
lods
add
fdivr
cmp
pop
xchg
xor
push
push
cmp
sahf
or
shll
imul
sbb
dec
mov
cmp
cmp
mov
aas
pop
shrl
repnz
sub
loop
aaa
sub
fidivrl
jmp
cwtl
jecxz
mov
repnz
push
fdivrl
mov
mov
inc
sub
loope
jbe
mov
add
sbb
and
ret
mov
paddd
rep
sbb
mov
lahf
add
lcall
mov
sbb
in
lea
sub
jno
std
mov
mov
enter
mov
jns
cmp
stc
js
jmp
jle
mov
mov
js
fistps
sbb
lea
scas
nop
iret
jbe
push
stos
adc
push
mov
inc
inc
push
inc
cmpb
sahf
xchg
adc
test
add
dec
cmpsb
and
mov
jae
cmpsb
pop
cmp
outsb
dec
inc
jecxz
and
lret
or
jle,pt
mov
and
mov
fadd
adc
add
dec
call
cmp
lcall
dec
es
push
imull
int3
inc
push
inc
out
out
into
ret
sbb
cmp
jecxz
mov
push
mov
loope
pop
daa
addl
ss
rolb
fstpl
jp
mov
jbe
ffreep
imul
ds
ficoml
sbb
ret
xor
adc
cmp
push
dec
xchg
scas
lods
mov
cmp
lahf
pop
repnz
aas
ss
aaa
xor
inc
pop
mov
and
add
push
mov
sahf
sbb
push
cli
sbb
sub
push
pop
lret
adcb
aas
cwtl
xlat
pop
inc
dec
add
stc
and
adc
pop
sti
pop
bound
jb
clc
rol
push
fwait
mulb
sbb
xchg
bswap
mov
mov
inc
cmp
jecxz
sarb
loopne
lret
dec
mov
sub
pushf
xor
int
sahf
cmp
push
into
stos
jmp
xchg
out
sub
push
test
add
pop
js
xchg
repz
mov
orb
jns
in
dec
push
sbb
pop
outsb
pop
lret
mov
adc
jp
jp
das
movl
lret
sar
fcmove
pushf
cmpl
mov
jns
sahf
setae
add
and
mov
out
cli
mov
loop
inc
loope
lret
aaa
lahf
xor
cmp
mov
mov
stc
cmp
int
rolb
cmp
mov
sarb
aam
shrl
rolb
sbb
into
xor
std
pop
add
sbb
addr16
in
sub
std
lret
sub
pop
push
je
mov
rcl
shrb
pusha
dec
gs
enter
push
clc
cwtl
sub
outsb
cmp
push
pop
fucomip
call
lock
jg
sahf
cmpsl
mov
push
mov
mov
mov
xlat
int
std
xlat
mov
js
es
les
faddl
not
out
sub
xor
xor
dec
and
in
cmp
jge
xchg
cwtl
mov
in
adc
inc
sub
or
test
xor
jle
mov
iret
mov
arpl
jmp
pop
mov
ret
movsl
test
movsb
push
mov
movsb
lds
mov
add
xlat
adc
cmp
daa
xchg
lods
adcl
mov
inc
mov
out
inc
add
fstpt
lds
in
cli
pop
popf
add
dec
out
jns
push
sub
icebp
add
adc
icebp
fdivrl
add
shlb
shrb
enter
push
xor
xor
mov
cltd
dec
mov
cmp
repz
sti
dec
inc
in
mov
mov
lret
out
mov
add
enter
sub
xchg
stos
push
cmp
mov
push
add
mov
inc
lret
add
xchg
test
mov
int3
enter
inc
inc
fadd
sti
sarb
mov
mov
jae
mov
mov
cmpsl
xor
scas
pop
add
mov
push
enter
cmp
xor
incl
into
stos
mov
es
pop
rcrb
clc
aas
out
xchg
das
jle
fadds
mov
adc
cmp
mov
sub
pop
adc
cmp
aaa
push
push
addr16
sbbb
es
mov
xbegin
push
test
loop
or
mov
filds
mov
clc
repnz
lock
xor
ss
mov
mov
fldcw
repnz
aad
xchg
iret
sarl
sbb
cld
push
cmp
cmovno
clc
sahf
das
mov
and
sub
adc
mov
xchg
or
outsl
sub
sahf
mov
outsb
pop
xor
sbb
iret
shlb
repnz
insb
dec
roll
aam
xchg
stc
cmc
adc
aam
dec
push
rcrb
test
mov
test
jp
or
push
lea
dec
mov
xchg
lret
iret
sub
mov
lea
data16
push
cmp
and
xchg
jne
cmpb
ss
sub
jecxz
sbb
loope
adc
mov
cmp
or
lret
out
leave
ficomps
fdivr
stc
cmpsb
jle
mov
mov
out
mov
scas
mov
les
mov
fcmovb
pushf
ret
sub
mov
lods
mov
call
fbstp
sar
mov
stc
outsl
push
jne
pop
cmp
into
sub
mov
sub
inc
mov
mov
shlb
ja
mov
into
es
movntq
out
lods
aas
call
sub
out
sahf
cmp
bound
cmp
test
sbb
imulb
je
dec
pop
jmp
xchg
adc
cs
lods
mov
jbe
xorb
mov
and
leave
test
femms
ret
mov
pop
enter
pop
or
movl
xchg
jne
xchg
data16
push
sbb
push
sub
insl
pop
mov
test
inc
mul
mov
cmp
fildl
lret
mov
lods
sti
xchg
shll
ljmp
rclb
les
shlb
int3
mov
scas
clc
mov
out
dec
pop
jg
inc
in
dec
imul
fimull
mov
clc
divb
idivb
into
mov
xchg
pop
fcomps
adc
rcr
xor
push
inc
test
repz
lret
inc
repz
int
js
pop
aad
jge
xchg
bound
int
mov
clc
lret
int3
icebp
lds
into
mov
sub
jmp
ds
cltd
sbb
pushl
cld
jb
clc
scas
xlat
ljmp
scas
mov
popa
ret
mov
into
jae
movsb
pop
push
mov
fs
mov
jle
lret
mov
js
jns
out
fisubrl
dec
dec
int3
push
jb
cld
iret
mov
push
scas
mov
mov
push
pop
mov
popf
cmp
divb
stos
pushf
xlat
imul
push
out
adc
mov
ljmp
addr16
je
sub
and
xchg
pop
negb
fadds
mov
bound
cs
mov
xor
mov
cli
mov
bound
cs
cmp
mov
or
pop
testb
mov
addb
cmp
rcll
pop
andps
cmp
iret
cmp
or
mov
push
push
cmp
out
cmc
aaa
adc
shrl
lea
xchg
add
mov
push
sbb
dec
fdivs
sti
scas
xor
push
imul
pop
arpl
xor
test
insb
mov
lret
int3
popa
imul
vpshufd
pusha
int
xor
insb
enter
fnstsw
xchg
xor
cltd
mov
or
mov
push
mov
mov
inc
in
mov
mov
sub
xor
cmp
aad
std
rolb
fstpl
xchg
xchg
pusha
scas
mov
jp
xchg
push
data16
mov
sti
mov
add
dec
test
xchg
mov
hlt
outsb
out
cld
jge
les
cltd
pop
xchg
ret
aaa
cmp
sub
incb
lcall
outsb
push
adc
jnp
ss
push
dec
adc
mov
jbe
pop
inc
in
pop
mov
lock
aas
mov
xchg
sbb
pop
xor
xchg
ss
dec
inc
mov
fldt
cmpsb
jnp
jmp
xorb
or
push
fistl
cmp
lds
rolb
dec
stos
movsl
icebp
enter
ret
mov
bound
imul
insl
add
scas
sub
mov
and
push
into
clc
test
and
int
lret
mov
add
jmp
add
push
aas
jge
stos
xchg
inc
in
push
sub
mov
inc
push
ljmp
xchg
inc
adc
out
or
push
fildll
mov
and
mov
mov
in
cmc
mov
pop
sahf
movsb
or
testl
push
es
push
pop
inc
or
add
pop
shrl
and
and
adc
notl
stc
mov
mov
or
rolb
int3
inc
adc
dec
xor
inc
neg
enter
mov
aaa
jp
mov
lahf
add
xchg
add
mov
dec
int3
aad
cmp
cmpsb
clc
ret
or
scas
jmp
icebp
jl,pt
pop
lret
out
enter
lret
jecxz
xorl
mov
inc
leave
ljmp
lret
lret
mov
notb
mov
out
pop
inc
xchg
adc
adc
inc
pop
sbb
in
pop
xchg
jbe
mov
cmp
mov
jp
cmpsb
sahf
add
iret
mov
cmp
sbb
adc
lea
iret
xor
fwait
sub
scas
ret
push
pop
adc
orb
out
pop
ja
mov
xchg
mov
jg
dec
loop
cmpsb
aad
cs
in
xchg
mov
mov
shll
jb
cmp
shrb
ja
mov
aas
ljmp
icebp
inc
cltd
test
in
adc
cltd
imull
dec
mov
inc
sbb
lahf
mov
scas
pop
das
lret
sub
mov
lds
mov
xchg
aaa
dec
fs
imul
lahf
xchg
fisttps
dec
lret
stos
aas
adc
stc
jns
aas
ja
cli
shlb
inc
and
mov
push
and
add
cmp
mulb
jae
out
fcom
inc
mov
mov
add
cmp
cld
or
push
xchg
sub
jae
adc
jge
scas
sahf
idiv
ffreep
or
hlt
adc
lcall
add
out
push
pop
sub
je
cs
mov
ret
cmp
clc
fcoms
fisttpl
ret
mov
sarb
jno
loopne
pop
adc
int3
aas
ja
mov
les
pushl
jg
test
jecxz
adc
icebp
or
cmp
cmp
adc
pop
cmp
gs
psubd
jns
mov
fistpll
sub
and
addb
jge
pop
jmp
jnp
popa
inc
lock
orl
out
inc
mov
push
mov
or
jp,pn
outsb
ficompl
xchg
pop
inc
mov
mov
int
aaa
mov
jbe
fadds
jle
push
xchg
mov
xchg
sub
fstl
cmpsb
scas
mov
fiadds
pop
dec
arpl
addb
lret
sub
pop
jl
inc
add
out
push
ret
les
cmpsl
das
notl
outsb
imul
out
call
ret
movsb
push
cld
add
push
fiadds
add
cld
mov
ret
test
sahf
adc
mov
sahf
pop
push
inc
mov
xchg
jbe
xor
out
inc
add
sbb
out
aas
iret
mov
mov
cld
dec
inc
lahf
ret
rclb
mov
jp
cmp
loop
test
aaa
clts
adc
push
sahf
mov
push
jbe
inc
mov
scas
loopne
cmp
dec
jl
fsubr
mov
xlat
std
call
mov
jo
mov
out
popa
fcomi
enter
mov
adc
dec
xor
repnz
adc
push
lcall
sub
and
pop
pop
mov
mov
les
call
jg
sbb
push
sbb
lock
mov
xchg
or
pop
fisttpl
inc
xchg
add
xlat
mov
xchg
mov
dec
mov
and
jp
push
in
iret
inc
divl
sbb
shlb
mov
jbe
cmp
mov
ljmp
pop
sub
xchg
test
jmp
push
enter
cwtl
cmp
movsl
cld
aam
jge
cltd
insb
sub
shrb
enter
stc
divl
out
xchg
int3
sti
inc
push
scas
add
mov
lret
and
pop
mov
lds
cmpsl
jne
scas
stos
jbe
lret
push
push
sub
push
add
aaa
out
test
in
sahf
jl
mov
enter
stc
sub
mov
or
popa
inc
aas
js
out
ret
sarl
aaa
popa
aam
icebp
lret
adc
fwait
pop
mov
jg
repz
cmpsb
jecxz
mov
inc
and
rorl
aas
ds
mov
xchg
inc
xchg
sti
into
and
push
ficomps
jb
cmp
push
mov
adc
les
and
or
sarb
sbb
outsl
mov
aad
pushf
loopne
ds
ffree
aas
or
test
adc
or
pop
and
mov
sub
ret
mov
sub
and
int
addr16
jle
inc
mov
mov
mov
add
lea
add
mov
mov
add
sbb
adc
sahf
mov
xor
xchg
les
add
lahf
xchg
lret
divl
rcrb
fwait
out
movlps
clc
jle
push
pop
lret
dec
inc
or
dec
and
cmp
stos
fmuls
cli
xlat
jle
sbb
inc
aas
inc
clc
fildll
cmp
add
xorl
adc
inc
xchg
scas
cmp
ret
ret
dec
mov
jmp
roll
cmp
loope
mov
sub
sahf
inc
cmp
xchg
push
lret
lcall
mov
subb
xlat
fiadds
mov
clc
clc
lods
add
mov
adc
out
leave
mov
sbb
push
mov
or
jecxz
shl
add
mov
ja
jge
outsb
and
fiadds
rol
dec
jbe
ret
fdivrl
aam
push
in
push
or
pop
cmovo
aas
xor
mov
inc
xchg
or
stos
lods
lds
fcomps
sarb
cmp
jns
mov
mov
mov
mov
cmp
add
bound
xchg
inc
push
mov
sti
mov
insl
cltd
repz
mov
sahf
aad
sub
push
out
or
dec
ret
out
jecxz
dec
loopne
cmp
mov
pop
mov
sbb
fcoml
loopne
jg
lea
test
xor
xor
xor
xor
xor
add
xchg
or
cmp
inc
rorl
sahf
mov
stos
adc
aas
xchg
mov
inc
push
sahf
add
jnp
daa
leave
fistpll
cmp
loop
adc
mov
icebp
das
and
into
sub
fsubp
push
mov
sbb
iret
xchg
ss
and
mov
repnz
xchg
rep
das
mov
pop
lret
jecxz
cmp
out
fiaddl
mov
pop
rolb
inc
and
xchg
push
xchg
loopne
xchg
fcom
push
inc
rcr
rolb
jecxz
jle
repnz
cmp
mov
stos
out
mov
sub
outsb
jle
push
xchg
loop
cmpsl
rorl
mov
fidivrs
les
sarb
sub
push
mov
xor
lret
mov
repz
cmp
filds
sbb
es
clc
sbb
int3
mov
jle
ljmp
sbb
xor
and
sti
sarb
and
ja
jge
mov
jbe
lret
xchg
ficomps
xchg
xor
mov
aad
dec
out
sahf
outsl
dec
sub
jl
out
int
into
xorps
fstl
add
push
xchg
out
xchg
pop
lcall
nop
sahf
imul
pop
mov
adc
fisubrs
mov
jle
ret
inc
cmpsb
enter
mov
jmp
xchg
cmp
shlb
js
dec
jbe
ds
imul
mov
push
mov
imul
int
or
loope
mov
sarb
mov
shl
jle
sti
adc
mov
sub
in
outsl
sarl
or
jg
aas
pop
cmp
scas
cmpsl
cmp
cmp
jbe
lret
mov
outsb
scas
xor
cmpsl
shll
rep
aam
push
jns
ja
or
mov
cmp
into
sarl
test
jle
inc
adc
out
fcmovb
sub
add
push
push
sub
add
xor
add
aas
mov
adc
imul
sbb
pop
mov
cwtl
adc
xor
scas
out
sub
push
mov
gs
cmp
pop
mov
shrb
mov
jecxz
sub
adc
iret
cmp
xchg
xchg
je
rorl
sbb
push
and
sub
aas
mov
ret
lods
ja
test
mov
int
mov
in
call
icebp
fisubrl
fsubs
fnsave
mov
test
daa
inc
add
add
loopne
and
cli
or
pop
fcomps
inc
mov
sbb
jle
sub
mov
dec
rolb
fs
sahf
push
cmpsb
in
out
jg
xchg
outsl
mov
xlat
mov
adc
pop
dec
bound
cmp
xchg
fadd
dec
ror
sbb
push
fwait
loopne
jg
xchg
xchg
add
cmp
mov
mov
cmp
into
mov
jmp
cmp
or
enter
cwtl
cmp
rorl
add
xor
and
cmp
mov
sahf
dec
lea
cmp
or
mov
hlt
mov
movb
sub
rolb
clc
insl
mov
popf
add
inc
leave
or
jge
mov
mov
mov
pcmpgtd
fidivrl
sti
divl
add
js
into
mov
in
mov
cmp
adc
cli
sarb
xor
push
divb
push
cmp
mov
out
loope
sbb
hlt
cli
mov
mov
testb
lcall
gs
insb
mov
mov
insl
adc
add
dec
repnz
adc
inc
cmp
mov
stos
shlb
or
mov
sbb
and
jg
adc
aaa
leave
test
and
xor
or
xor
mov
add
test
mov
jne
dec
jge
sbbl
xchg
test
mov
jl
iret
jmp
xor
mov
and
or
adc
pop
addb
push
or
or
sub
adc
push
shlb
out
jae
cmp
aas
xchg
fisttps
xorb
or
sbb
pop
adc
pop
ret
cmp
ljmp
mov
lret
mov
repnz
sar
cmp
inc
or
dec
test
xchg
idivl
dec
adc
ficoml
mov
daa
jp
or
into
inc
fistl
mov
enter
xor
ds
add
ret
addr16
mov
add
pop
jp
in
xor
popa
mov
xor
jbe
mov
fsubr
test
sahf
loop
mov
loopne
fisubrs
push
jns
lret
in
clc
ret
mov
lahf
jo
in
ficomps
add
out
xor
sub
mov
xlat
aad
jne
dec
nop
inc
push
mov
loope
cltd
mov
cld
pushf
mov
mov
inc
add
lahf
and
int3
mov
push
xorb
add
das
cmp
sbbb
pop
cmpsl
hlt
or
imul
outsb
out
xchg
dec
lret
leave
ret
icebp
xlat
push
add
out
mov
ljmp
mov
mov
dec
sub
mov
pop
repnz
sub
add
mov
push
js
test
pop
mov
inc
mov
sahf
jle
nop
in
sub
ret
mov
cmc
movups
push
push
inc
fimull
xchg
lahf
fisubl
inc
jg
scas
ljmp
mov
outsb
or
push
mov
rcll
cmp
rclb
jle
addb
jmp
and
cs
xchg
cmp
das
cmpsl
inc
sub
sub
in
adc
mov
mov
pop
dec
cmpsb
icebp
clc
lahf
mov
cltd
scas
mov
sahf
out
lock
pop
addr16
cmp
fisttpl
out
fnsave
or
mov
or
adc
or
mov
ret
push
enter
cmp
test
mov
pushf
adc
xchg
fistpl
fbld
iret
or
adc
add
mov
out
nop
xor
fisttps
push
pop
xor
inc
insl
xchg
mov
pushf
pop
leave
xorl
loop
sahf
ficomps
sbb
mov
xor
loopne
enter
pop
xor
fbld
jl
mov
inc
add
fdivrp
rcr
or
fidivl
enter
inc
cmp
inc
add
sbb
dec
mov
lea
lea
mov
mov
sahf
pop
daa
sbb
cmpsb
inc
sub
sarb
popa
fwait
clc
mov
sahf
lahf
push
mov
test
jge
scas
rolb
inc
sub
xor
retw
repnz
mov
cmp
rorl
xchg
fisttps
cmp
movsb
sbb
test
jns
ret
icebp
ret
mov
mov
test
fsqrt
fcompl
push
sub
int
loope
repz
or
aad
ljmp
push
sub
clc
stc
xlat
push
in
cwtl
rcr
out
dec
cmp
int3
ja,pt
fldl
inc
ljmp
push
adc
mov
sub
pop
sub
jecxz
push
call
cmpsl
adc
sub
enter
fdivr
es
ss
cs
andl
push
mov
jnp
or
jae
incb
mov
xchg
sub
sbb
call
out
cmpsl
sub
sahf
or
xlat
sbb
scas
les
loop
jle
sahf
and
popa
mov
mov
nop
adc
ds
loop
jmp
in
xor
cmp
xchg
loope
and
xor
nop
adc
lahf
imul
sti
mov
push
outsl
addr16
leave
lcall
or
movb
pushf
mov
add
scas
jp
sti
jge
ret
mov
pushf
movsb
xor
dec
out
movb
enter
lcall
or
or
xlat
and
lahf
mov
xor
into
sub
mov
xor
out
pop
dec
mov
lods
clc
dec
mov
scas
hlt
das
das
inc
push
inc
jo
push
dec
push
cmp
arpl
mov
mov
mov
adc
pop
cmpsb
daa
mov
fdivrs
jmp
test
int3
adc
mov
add
xor
sahf
cltd
out
lahf
cmp
clc
pop
mov
cmpsb
es
jmp
jnp
xor
sub
stos
lea
fcomps
mov
mov
push
out
ds
int
fisubs
fstpt
test
lods
dec
jne
xchg
out
lret
inc
mov
out
loop
in
es
jecxz
mov
or
inc
cld
xchg
rorb
not
xlat
ljmp
icebp
mov
jne
sbb
int3
pop
mov
into
mov
loope
xor
ror
sahf
imul
imul
mov
push
mov
scas
xlat
inc
int
mov
enter
insb
stos
adc
dec
pop
or
add
ret
add
aad
mov
int3
xor
cmpsb
sbb
rol
aas
addl
add
add
mov
mov
fs
add
push
dec
test
mov
push
push
sub
adcl
icebp
cmpsb
inc
push
and
jg
xchg
shrl
dec
add
into
push
sbb
imul
std
xlat
fsubs
or
mov
pop
inc
fisubrl
shlw
sarl
test
insb
mov
sarl
shlb
cmp
loop
mov
inc
sahf
outsb
lock
shll
xchg
pop
jmp
scas
lds
mov
lahf
sahf
xchg
dec
mov
shrl
add
fadd
mov
scas
mov
in
shlb
repz
inc
enter
xchg
lock
mov
inc
adc
xor
pop
lahf
sbb
frstor
push
adc
mov
je
idivl
jns
mov
repz
popa
ja
scas
cmc
mov
movsb
pop
enter
hlt
incb
inc
adc
sub
adc
cmp
lahf
dec
and
scas
mov
xor
test
lahf
inc
jne
hlt
sbb
ret
roll
outsb
data16
jne
mov
jnp
jmp
std
lret
cli
sbb
testl
stc
mov
jle
stc
shrb
repnz
cmpsl
mov
dec
inc
push
add
push
cli
sarb
into
shrb
fsub
xchg
lahf
mov
inc
divl
adc
mov
mov
testb
notl
adc
mov
cli
push
loop
pop
shl
repz
inc
cmp
or
push
out
dec
rol
testl
js
ja
xor
push
inc
cmpsl
cmp
inc
mov
js
clc
and
pop
mov
fcoms
scas
in
pop
scas
jbe
mov
add
pop
cmc
push
loopne
icebp
jg
mov
shl
xor
call
ret
adc
xchg
leave
cmp
sub
mov
lret
pop
mov
mov
add
lcall
inc
lds
stc
xlat
or
pop
ds
cmp
dec
leave
sahf
mov
popl
int3
sub
stos
scas
repnz
sahf
or
lret
push
cltd
fiaddl
rcr
dec
mov
shrb
in
cld
movsb
js
rolb
jecxz
sub
jge
mov
icebp
out
sub
fwait
loopne
ficomps
punpcklbw
sbb
test
xchg
mov
pop
mov
push
jns
addb
sub
enter
fstpt
push
mov
jg
cmpsl
cmp
inc
inc
cmp
jne
stos
mov
dec
sbb
fdivs
or
add
pop
jmp
xchg
pusha
jg
mov
sahf
fwait
lods
rsqrtps
adc
or
adc
popf
xchg
ja
movl
out
orb
js
aas
ds
fisubs
insl
lcall
es
jle
ret
and
ficomps
ss
mov
ja
jl
insl
sbb
shl
sub
mov
les
imul
aad
add
mov
repnz
dec
ror
fsub
ljmp
sahf
or
into
je
sti
int3
shrb
lret
mov
sub
imul
enter
mov
movsl
cs
les
xor
push
mov
std
mov
pop
fistl
dec
cmp
stos
sub
mov
inc
jge
dec
pop
lret
pop
fs
inc
mov
nop
pusha
loopne
aas
test
sti
jmp
das
inc
clc
xchg
int
subl
mov
stc
mov
lahf
push
addr16
mov
popa
stc
sub
push
and
aas
sti
mov
insb
lret
sti
mov
xor
rolb
outsb
mov
push
push
pop
stc
dec
addr16
inc
sub
int
stos
fsubrs
mov
stc
sarb
popa
push
popa
lock
leave
sbb
rorb
aas
mov
adc
push
adc
test
das
inc
popf
mov
add
dec
push
lahf
jecxz
scas
inc
inc
sahf
push
push
lret
adc
add
pop
adc
out
cmp
xor
cmpb
repnz
repnz
fcmovnb
sub
push
mov
cld
daa
mov
jl
addb
jo
sahf
fadd
mov
lea
insl
lods
fldcw
lcall
test
push
fdivrl
fisubl
mov
mov
jmp
adc
jecxz
mov
outsb
cmp
dec
mov
cmpsb
loope
ss
repnz
xchg
popf
or
addr16
mov
arpl
lds
lret
and
xor
pop
inc
loopne
or
stc
lret
add
cld
rcll
push
adc
enter
sahf
mov
dec
int3
jle
or
adc
fists
jge
movsb
loop
sbb
icebp
test
loope
or
les
insl
mov
xor
testl
xor
lds
fs
sbb
jg
inc
inc
sarl
pop
jns
outsl
xchg
pop
add
gs
movsl
pop
push
mov
lret
aas
into
xor
jmp
mov
scas
in
frstor
push
outsl
mov
or
push
les
dec
sbb
mov
or
mov
dec
jg
into
pop
stc
jp
pop
bswap
dec
movb
les
fimuls
aas
subl
out
pop
mov
push
out
in
bnd
and
addr16
bound
mov
dec
lahf
and
rclb
sahf
fbstp
dec
and
add
loope
loop
inc
pop
stc
mov
in
jp
mov
or
adc
dec
xor
popf
mov
adc
adc
hlt
fst
idivb
icebp
sub
sbb
mov
ret
jns
adc
dec
scas
mov
sub
add
xchg
loopne
sahf
jb
cmc
push
cmp
cmp
mov
mov
ds
test
adc
in
ret
into
pop
mov
pop
cmp
ret
imul
xchg
ror
ds
in
push
push
arpl
mov
add
mov
add
lret
pop
lret
inc
sahf
lea
lahf
and
or
ss
scas
sub
cs
lret
inc
or
mov
ss
inc
fdivs
sahf
cmc
leave
pop
mov
sub
or
mov
daa
inc
stc
mov
adc
push
sahf
sub
sbb
out
mov
jl
and
repz
pop
rol
inc
pop
out
mov
testb
ljmp
push
filds
sub
clc
fistl
or
xor
shr
lret
jns
inc
xchg
pop
add
mov
orb
fildll
jo
dec
jecxz
pusha
pop
lret
push
cltd
jns
sbb
sub
and
call
inc
mov
stos
sub
mov
pop
sub
add
and
sbb
dec
fwait
cltd
enter
fnstcw
jl
movsb
sbb
test
iret
add
testb
adc
push
mov
ljmp
pushf
call
and
dec
jnp
sahf
mov
inc
rcrl
mov
std
push
clc
mov
sahf
xchg
pop
sbb
inc
xchg
mov
js
dec
sbb
loop
fadds
mov
mov
aas
mov
or
add
sahf
sbb
icebp
and
mov
mov
pop
jae
fistl
xchg
in
xor
movsb
xlat
mov
jno
or
or
jno
dec
insb
mov
mov
ss
in
das
mov
or
rcrb
push
add
divl
loope
push
xchg
sahf
mov
cmp
pop
lret
jno
ja
das
shrb
into
out
xchg
xor
call
in
xor
push
jle
and
jl
jo
xor
push
sti
out
fimull
aad
mov
sub
or
push
into
mov
lcall
cld
daa
out
js
lret
cli
cmc
dec
fadd
inc
push
mov
icebp
lods
pop
sub
repz
lahf
xlat
xchg
icebp
jnp
sub
push
xor
sbb
inc
cmp
adc
fdivrp
jecxz
lret
mov
sbb
mov
adc
sahf
mov
addr16
push
xlat
adc
scas
jmp
out
mov
rcrb
roll
pop
out
sub
fs
sbb
lds
jp
mov
shlb
add
jp
mov
mov
mov
aas
sti
mov
call
mov
daa
adc
inc
cmp
test
fsts
and
cmc
fidivrl
push
sub
sub
mov
push
insl
pop
stc
das
add
lds
sub
fdivrl
rorb
cld
into
mov
enterw
icebp
sbbl
jns
lcall
sub
xchg
cs
pop
and
cmpsb
xor
dec
shlb
or
add
xor
xor
adc
mov
add
cmp
ret
pop
sbb
insl
pop
ja
xor
sarb
mov
sub
xchg
in
enter
lock
cmp
clc
pop
mov
dec
adc
cmp
pop
or
inc
into
or
out
jns
mov
sbbl
subl
jl
push
shll
mov
sub
out
mov
adc
sub
inc
adc
icebp
adc
mov
mov
rolb
out
mov
shlb
adc
cwtl
lret
or
mov
fcomp
inc
faddl
jle
out
add
sub
mov
and
lret
jge
inc
clc
dec
sub
cmp
mov
inc
or
fstpt
pushaw
cmp
clc
cmpsb
xor
xchg
lahf
fldenv
fadd
mov
push
mov
scas
push
outsb
push
jge
stos
data16
ret
mov
push
lds
mov
mov
sub
or
lret
xchg
sub
mov
cmp
outsl
repz
sti
xorb
mov
mov
and
inc
add
out
incl
mov
aas
lret
ret
leave
ret
testb
mov
cmp
imul
mov
stc
aad
mov
pop
push
add
fdivr
adc
js
pop
xchg
sub
arpl
rclb
cmp
lcall
or
lret
add
les
jno
adc
inc
pop
pusha
fistl
xlat
ljmp
xchg
xchg
insl
sbbb
fiadds
sub
int3
lcall
testb
adc
repz
leave
push
sub
cmp
incl
cmovns
mov
ja
ret
inc
xchg
mov
mov
xchg
cmp
push
cld
jecxz
sub
mov
into
rorl
lods
xchg
fildll
loopne
push
outsb
add
fisubrs
stos
pop
jg
jns
mov
dec
out
or
popa
mov
jae
push
lcall
mov
xchg
push
mov
imul
xlat
sbbb
cmp
dec
loop
insl
adc
mov
jl
add
mov
jp
sub
xor
cmp
je
dec
xchg
faddl
mov
outsl
xor
jne
jnp
sub
mov
jno
enter
sbb
pop
ror
lds
dec
arpl
dec
or
sbb
pop
mov
mov
js
jecxz
mov
and
or
fdivp
shlb
ljmp
fbstp
lcall
fisubrl
cmpsl
int3
xchg
nop
xchg
xchg
push
mov
arpl
mov
aam
lods
pop
daa
movb
mulb
outsb
ljmp
xchg
ja
cmp
dec
sub
cwtl
xlat
daa
xchg
push
jmp
jg
ret
adc
pusha
push
push
pop
loopne
mov
inc
xchg
mov
dec
fmul
push
push
aaa
mov
loop
mov
push
push
loop
and
aaa
sub
adc
out
adc
xchg
outsb
push
jne
dec
nop
scas
bound
addb
jecxz
loope,pn
scas
scas
pop
adc
mov
icebp
pop
mov
ja
jo
cmc
ficompl
popa
mov
in
jae
mov
jns
cmc
mov
fidivrl
je
mov
fsubrs
js
mov
neg
ja
sahf
mov
xchg
mov
test
daa
fwait
or
test
outsb
mov
mov
bound
mov
out
enter
jbe
shlb
jb
inc
mov
pop
das
enter
outsl
xor
int3
stc
sbb
repnz
sub
sbb
and
push
or
xor
mov
xor
sbb
add
notl
rcr
or
rcl
push
ss
js
dec
ret
les
and
imul
cmp
stos
sub
sub
mov
jne
push
cli
std
dec
sub
sub
pop
mov
adc
mov
ljmp
int3
clc
jno
pop
fistps
add
clc
into
fisubrs
jmp
div
mov
imul
cmc
dec
call
out
and
add
inc
sbb
out
push
mov
push
imul
outsl
and
pop
inc
in
inc
mov
push
lret
push
loop
stos
int3
movsb
aas
sbb
les
shrb
lret
iret
xor
divb
ljmp
add
push
ror
js,pt
cld
pop
jg
ffreep
mov
pop
stc
call
idivb
dec
in
xchg
sti
fists
pop
xor
and
mov
out
ds
stos
movl
pop
pop
fists
xchg
inc
inc
pinsrw
js
mov
mov
inc
mov
xchg
or
les
xchg
loopne
int
lret
rorl
sbb
pop
out
rolb
movsb
mov
mov
out
fidivrl
push
adc
leave
xchg
imul
cmp
dec
jecxz
jmp
movsb
mov
fcmovnu
push
xchg
rorb
ss
add
test
aaa
dec
negb
pop
out
pusha
into
clc
jp
push
push
mov
es
cmp
cmp
mov
ds
jle
xor
xchg
mov
push
mov
scas
leave
int
cs
fdivp
lods
neg
ret
es
mov
cmp
cmp
mov
or
inc
fucomip
ds
or
loop
and
inc
lahf
ljmp
aas
out
mov
pop
push
fbstp
ret
mov
push
aam
add
xchg
or
test
mov
cs
not
sahf
xlat
iret
into
inc
movsb
mov
jne
push
rcrb
dec
add
push
adc
mov
lds
sbb
loope
push
xchg
les
sub
popf
push
mov
ret
rol
lret
in
out
fmuls
push
movsb
mov
dec
mov
and
push
inc
ljmp
pusha
jl
orb
ds
pop
adc
pextrw
pop
pop
fidivrl
int3
cmpsl
pop
out
or
lret
lcall
sub
arpl
in
iret
stos
sbb
into
aaa
mov
fdivr
and
or
iret
mov
ffree
cmp
inc
xchg
iret
cmp
in
in
ss
insl
xlat
jle
inc
lock
xchg
push
push
dec
inc
dec
push
shl
outsb
sbb
fsubs
mov
jle
dec
push
mov
lret
push
push
push
stc
icebp
iret
shll
fdivrp
ss
dec
data16
xor
or
add
pop
sahf
lock
cmp
adc
mov
ret
ds
adc
push
inc
or
in
push
out
adc
or
js
shll
inc
cmp
lods
out
push
in
ds
xchg
int3
jmp
push
jp
cld
rcrl
scas
lret
and
out
es
pop
fisubs
push
popa
stc
into
mov
aaa
addr16
or
int3
cmp
inc
mov
xchg
in
divb
pop
into
int3
xchg
jne
out
mov
mov
mov
sub
scas
iret
xlat
out
decb
jle
rorb
inc
inc
iret
fidivs
add
outsb
cmp
aad
subb
or
data16
push
ret
or
dec
in
dec
cmp
out
clc
fsubl
xor
fcomp
call
fsubrs
push
inc
dec
dec
push
aas
xor
clc
mov
jg
insb
ss
aas
dec
cli
rorb
or
sti
shll
xchg
lret
dec
push
pop
fadd
ret
out
lret
lock
mov
pop
sbb
fisubs
jg
mov
sbb
aaa
cltd
mull
scas
and
or
pop
jbe
mov
test
mov
xlat
mov
insl
fisubs
cmc
scas
js
or
scas
jo
dec
inc
fs
push
shlb
or
pop
std
inc
ds
pop
xlat
lret
lret
inc
addl
xor
aas
cmpsl
push
push
out
outsb
rcrb
mov
mov
leave
imul
sub
lret
leave
clc
push
iret
mov
jbe
xlat
adc
inc
pop
cld
dec
js
mov
or
mov
cmp
std
sub
cs
jae
push
mov
lret
lods
fidivs
incb
xchg
call
sbb
das
dec
ds
aaa
push
nop
dec
rol
fmull
cli
push
call
pop
adc
adc
stos
lock
push
push
and
bound
outsl
rcl
jae
decb
push
cmpb
dec
sbb
push
es
inc
repnz
jp
ja
out
lcall
add
in
pop
into
push
jle
xchg
ds
add
into
aam
cmp
into
cs
int
jmp
cmp
or
ljmp
into
inc
imulb
aad
js
les
scas
dec
adc
cmp
fildll
sbb
sbb
ljmp
popa
xor
insb
mov
mov
rorb
mov
add
or
push
cmpsb
rolb
js
mov
jp
push
sbbb
out
inc
mov
pop
xchg
add
js
inc
sbb
les
shr
mov
inc
jg
lds
mul
jnp
enter
push
pop
out
xchg
xor
ss
fdivrp
icebp
pop
push
lods
leave
xor
lock
dec
cmp
dec
cmp
stos
inc
xchg
jle
cmpsb
mov
pop
fidivrl
stos
and
xchg
push
rolb
std
cmp
cwtl
int3
sbb
fildll
mov
loop
sbb
mov
dec
xlat
adc
icebp
pop
cmp
inc
dec
cmp
into
dec
cli
enter
inc
mov
add
lret
pop
dec
mov
pop
leave
sbb
add
dec
adc
aad
aaa
mov
inc
testl
pushw
push
rolb
jecxz,pn
js
inc
add
je
js
pop
dec
inc
dec
add
iret
insl
pop
inc
dec
mov
mov
push
or
outsb
lret
inc
xor
les
push
insb
pop
out
add
loop
idiv
mov
and
les
lret
mov
vcvtpd2dq
mov
cmc
ret
add
sub
xchg
sbb
xchg
lods
enter
and
or
pop
inc
mov
pop
jecxz
ficomps
or
pop
cmpsb
dec
mov
data16
fwait
stos
leave
cld
add
jmp
fadd
in
call
fstpt
gs
mov
jnp
idivb
repnz
in
sbb
inc
mov
cmpsb
push
int
cltd
pop
adc
mov
fdivrs
aas
ror
fcmovu
add
adc
mov
xchg
mov
cmp
pop
fimull
inc
push
sub
scas
jle
push
jecxz
cmp
jb
roll
fisttpll
movsl
mov
or
clc
lds
mov
mov
mov
inc
mov
jmp
mov
cmp
add
fdivrs
idivl
js
andb
push
mov
mov
and
repnz
cmp
int
ror
and
leave
jns
or
xchg
xlat
mov
enter
cwtl
add
loope
insl
out
stc
rcr
scas
inc
incl
mov
dec
insb
ss
cmc
cmp
mov
mov
push
mov
inc
sbb
mov
add
rol
shrl
lds
or
or
adc
pop
imul
sub
jg
ss
pushl
adc
enter
push
lds
sub
pop
jg
mul
mov
subb
pop
movsb
ret
sbb
outsb
out
cmp
or
lret
cmp
fistpll
cmpsb
inc
sti
push
stc
jnp
mov
cmp
xor
inc
sti
ret
ficompl
cmp
lea
iret
push
enter
push
add
adc
ljmp
int
xchg
inc
sahf
sub
sub
or
stc
int
mov
inc
notb
int3
lock
int
xchg
inc
daa
sarl
and
inc
arpl
ds
jo
insb
push
cmp
ljmp
out
cmp
enter
mov
cmp
rol
fs
jmp
enter
pop
jo
sahf
xor
lret
nop
es
das
clc
sub
imulb
pusha
mov
in
sti
sbb
xor
mov
add
fiadds
fisubrs
xchg
scas
xor
jne
pop
inc
jno
out
popa
cmp
les
data16
adc
mov
push
add
xchg
cmc
js
enter
sti
leave
push
mov
movntq
stc
sub
fs
dec
fbld
sub
pop
cmpsb
outsb
repnz
dec
adc
les
pop
into
mov
sbb
fiadds
mov
js
mov
out
test
stos
fldcw
scas
jle
lcall
mov
mov
xchg
inc
std
xchg
fstps
lcall
sahf
inc
std
lahf
fldenv
lcall
xchg
lcall
mov
fsts
lcall
jbe
std
ja
js
jns
jp
jnp
jl
jge
jle
std
jg
addb
sbbb
shlb
std
fldcw
imul
out
insl
shrb
std
outsl
fnstenv
jno
jb
jae
je
jne
push
inc
std
push
fstps
pop
jle
lcall
pop
out
pop
shlb
std
popa
fldenv
arpl
aas
push
aas
cmpsb
mov
pop
fistl
out
push
xlat
rorb
or
mov
rorl
out
inc
movl
aas
movsb
and
xor
sbb
in
dec
mov
sti
cs
sbb
mov
out
inc
lods
jae
push
xlat
push
cmp
rclb
and
or
jp
nop
push
sti
incb
or
gs
sahf
xor
fstps
ret
add
popa
jmp
ja
cli
inc
adc
inc
fcmovb
ret
sar
and
jae
sub
stc
push
jae
jo
lods
mov
ret
pop
stos
gs
sbb
ds
inc
test
mov
aaa
outsb
bound
jle
popf
mov
sti
cli
pop
sub
fisubrs
adc
and
stos
xlat
mov
or
and
sbb
adc
inc
mov
mov
loope
outsb
adc
pop
mov
xlat
imul
push
mov
in
push
sub
mov
cwtl
outsb
repz
inc
push
movsl
pop
sbb
insl
or
push
jbe
push
sbb
mov
and
pop
aaa
and
inc
aad
notb
testl
inc
or
lock
xchg
fcoms
cmp
add
adcb
sti
subb
mov
bound
scas
xor
fiadds
adc
fiadds
cmp
sti
xchg
or
orb
lret
push
sti
xor
sub
or
aas
and
lcall
negb
push
das
loop
sbb
xor
repnz
movsb
int
sti
xchg
fcompl
add
aaa
push
inc
dec
adc
jle
sub
inc
lcall
cmpsb
or
loopne
mov
add
push
notb
sub
jle
sub
pop
js
cld
pop
and
bound
lods
stc
bound
aaa
sbb
inc
jae
inc
mov
stc
dec
lahf
bound
out
cmp
std
sbb
cmpl
push
jb
push
enter
sbb
sbb
mov
in
ljmp
push
mov
or
and
push
dec
cmp
std
out
pop
outsl
dec
adc
cld
fidivrl
mov
idiv
push
cmpsl
leave
daa
or
push
cmp
sbb
sub
mov
lahf
insl
notl
into
popa
cld
adc
add
fcmovne
mov
push
cmp
xlat
rcll
pop
add
gs
inc
fimull
push
push
jp
or
xor
mov
add
or
repz
jp
loop
xchg
ds
lret
xchg
xchg
jae
out
cli
enter
cmp
mov
or
sub
inc
cmc
or
xchg
or
es
push
or
or
push
xor
xor
jbe
js
mov
test
sbb
movsb
inc
or
dec
scas
mov
mov
fstl
jns
dec
nop
repnz
lret
xor
in
insl
and
push
idivb
aas
lret
mov
or
xor
dec
shrb
out
dec
lea
mov
je
mov
out
dec
jmp
dec
sbb
lret
ficoms
es
cmpb
or
jbe
lea
xchg
divl
jnp
movsb
push
dec
add
adc
cmc
fwait
xor
push
stos
ja
push
ss
mov
cmpsl
sbb
mov
jns
idivb
add
mov
cmp
pop
in
cwtl
mov
fistpll
ret
mov
jbe
ds
mov
js
adc
mov
or
xor
out
xor
dec
out
mov
cmp
add
insb
shl
mov
fistpll
or
das
dec
cmpsl
mov
push
sub
mov
filds
loopne
push
mov
loope
loopne,pn
sub
cmp
dec
js
ja
iret
or
cmp
movb
xor
xchg
adc
push
pop
cmp
ja
xor
loop
ds
mov
rcl
loopne
leave
scas
mov
fcomps
enter
mov
push
push
sbb
adc
jne
pop
icebp
insb
mov
mov
pop
addr16
movsb
push
movsl
mov
iret
jg
xlat
lahf
xchg
lock
ljmp
push
out
mov
loop
cmp
xor
mov
mov
mov
mov
jmp
jbe
mov
fadds
mov
sbb
aas
sahf
adc
adc
or
ljmp
loopne
ss
icebp
add
sub
sahf
add
subb
data16
cmp
push
sbb
xor
mov
pavgw
mov
out
jo
xchg
xor
and
aad
add
pop
push
out
scas
jg
cmp
pop
sub
dec
mov
mov
jnp
push
stos
lods
int
mov
sahf
sbb
xor
mov
in
adc
das
cmpsl
pop
int3
xlat
cmp
xchg
inc
jge
daa
cmpsb
xor
sub
stc
icebp
test
aad
sub
jl
xor
cltd
cmp
mov
leave
scas
mov
divl
inc
sbb
adc
xchg
icebp
lods
sahf
xor
mov
or
inc
push
pop
aad
aad
dec
js
mov
aas
sti
leave
xchg
sub
mov
jns
pop
and
ret
mov
mov
sub
push
ljmp
xor
sarb
stc
imul
lret
les
and
in
into
inc
dec
sub
fisubrl
push
xchg
sub
imulb
push
insl
lcall
add
stos
in
lea
lahf
aas
cmp
pop
xchg
aas
pop
jmp
jne
adc
dec
inc
daa
xchg
leave
mov
jl
ret
std
mov
add
icebp
dec
test
in
dec
jp
cli
pop
dec
jae
in
into
andb
mov
pop
scas
mov
sbb
pop
std
imul
dec
push
jbe
sahf
mov
xchg
sub
inc
add
subb
mov
inc
dec
push
jle
cmp
enter
mov
xlat
push
jle
ja
jne
lahf
shrb
mov
shlb
and
and
iret
mov
fisttps
aaa
jmp
add
and
in
shl
ret
lret
scas
push
sti
ret
clc
or
cld
add
mov
loop
ja
cmc
hlt
fdivrs
jns
mov
in
je
sub
testl
jno
or
in
inc
cmp
out
mov
sub
int3
or
mov
cmpsl
subb
xchg
out
mov
push
mov
and
pushf
cmp
or
and
push
fisubl
pop
sub
pop
out
call
lods
jg
cwtl
ss
mov
es
pop
mov
xchg
lods
rcr
cmp
test
ficomps
adc
sahf
mov
jl
mov
add
mull
mov
sub
cmp
ret
xchg
psrad
aas
mov
aaa
sbb
bound
fidivrl
xchg
or
std
xor
and
add
scas
stos
cmp
xchg
scas
inc
shlb
cmpsl
stc
lea
xchg
xchg
push
sub
xchg
andb
adc
out
xchg
jns
js
ja
jbe
mov
mov
push
dec
movsl
jle
movb
loop
mov
jo
clc
adc
push
jbe
mov
jbe
push
clc
loop
pop
pusha
sahf
sahf
ds
loopne
inc
adc
stos
mov
inc
ss
xor
jecxz
dec
enter
sahf
xor
mov
push
mov
jg
cmp
sbb
jno
lds
pop
bound
and
adc
adc
or
aas
mov
mov
jne
inc
fcom
sahf
jp
lcall
pop
mov
cli
push
adc
mov
outsb
dec
pop
out
mov
bound
lret
mov
push
fcmovnbe
imull
lret
push
sar
lret
cli
repnz
mov
mov
idiv
mov
xchg
cmp
or
ljmp
mov
ss
aas
or
add
cwtl
mov
sub
lret
add
movsl
int
or
xchg
push
or
scas
pop
dec
mov
mov
mov
outsl
pop
mov
movsl
int3
jl
sahf
sub
movsl
xchg
into
mov
mov
ret
lret
or
xchg
mov
into
push
aas
xchg
add
dec
mov
outsb
dec
mov
inc
jnp
ds
outsb
lret
por
mov
or
and
fnstcw
ret
fnstcw
test
mov
mov
mov
loop
sahf
mull
lahf
jl
sub
in
mov
cmp
fisubs
fsubrs
push
dec
jl
cmc
mov
lret
mul
sahf
pop
pop
lret
or
cmp
cmp
sub
aaa
cwtl
cmpsb
testl
mov
mov
inc
cmp
dec
inc
push
imul
cmc
jge
adc
out
and
cmpsl
out
adc
jg
mov
and
push
jge
clc
xchg
imul
test
rolb
pop
sub
ret
or
mov
sub
insl
sbb
cmpsb
sub
scas
mov
sub
mov
test
inc
imul
jp
cmp
and
mov
mov
mov
cmp
dec
ret
mov
ljmp
clc
pop
cmp
jo
inc
sub
inc
ret
ljmp
scas
inc
adc
jge
ret
sub
js
popf
jae
lret
stc
shll
ds
pop
jno
out
adc
xor
lods
xlat
jae
ficoms
mov
or
iret
inc
sub
cmp
mov
fldenv
xchg
pop
mov
rcr
out
lret
mov
pop
mov
outsb
pop
cmp
jo
ss
mov
push
fdivrl
sbb
outsb
jb
jns
sub
and
les
push
fstpt
mov
lcall
inc
stc
xchg
sahf
sarb
jl
call
frstor
fsts
into
sub
inc
leave
or
lret
inc
add
cs
mov
or
and
jmp
lret
adc
into
stc
mov
enter
lret
add
ret
dec
addr16
push
rorl
and
add
cmp
inc
pop
outsl
mov
int
mov
ficoms
bound
sbb
rcll
enter
loopne
fisttpl
cmpb
ret
jp
popf
mov
jge
jne
push
dec
push
push
adc
sub
xchg
sbb
inc
xchg
faddp
adc
push
repnz
test
loop
cmp
and
pop
adc
mov
out
dec
scas
mov
push
shll
js
hlt
jp
sbb
inc
jnp
jbe
dec
or
stos
lea
mov
inc
or
xor
jbe
push
cmp
inc
pop
pop
and
add
pop
jle
mov
loopne
push
clc
adc
enter
mov
cmp
and
push
pop
out
or
pop
andl
xor
xor
in
ffreep
or
cmp
inc
pop
xor
cmp
daa
mov
test
dec
ret
mov
push
cmp
fimull
dec
jmp
add
outsb
ds
in
into
mov
lret
scas
fnsave
je
gs
and
sahf
pushf
or
mov
rorb
incl
ret
dec
jmp
rcl
sub
dec
jmp
inc
jg
xlat
sbb
hlt
sub
int3
mov
sub
rcr
adc
adc
or
mov
aas
adc
push
aaa
fisttpl
sbb
arpl
movsb
mov
movsb
test
jmp
mov
insl
sub
xchg
aad
adc
mov
mov
dec
test
das
mov
add
data16
adc
push
test
clc
add
lret
clc
ffreep
loope
xlat
das
push
or
dec
add
xchg
inc
push
movsl
and
ds
cs
and
test
mov
fbstp
les
out
mov
fdivrl
js
pause
cmp
sbb
fwait
mov
mov
sub
mov
xor
jg
mov
cltd
mov
fs
push
call
std
stos
scas
xlat
mov
rorl
addl
fistpll
dec
inc
mov
mov
inc
mov
leave
pop
lret
sbb
sbb
xchg
cmpsl
push
sub
ds
fiaddl
enter
in
subl
mov
fbstp
dec
mov
test
outsb
adc
outsl
rcll
adc
add
pop
xchg
gs
lock
sbbl
cmpsb
add
es
incl
dec
inc
push
sub
lock
sub
add
pushf
sbb
clc
pop
xor
incb
cli
mov
jg
mov
repz
ret
loop
fmulp
cli
ror
cmp
xchg
lea
xor
mov
inc
mov
addl
mov
fcmovbe
mov
cld
mov
fwait
sub
dec
ss
mov
xchg
sub
mov
out
dec
das
lods
lock
loope
jns
dec
mulb
jg
je
xchg
sub
pop
xchg
loope
cmp
cmpsl
sub
aad
inc
adc
dec
mov
cmp
pop
mov
adc
stos
add
or
mov
dec
push
jmp
cmp
dec
mov
push
adc
cmp
aas
into
popa
lahf
add
in
pushf
sarb
std
imul
sub
cld
push
push
js
sbb
adcb
clc
aam
sub
adcb
aad
mov
mov
inc
xor
sub
dec
jp
ret
sbb
in
mov
stos
int3
adc
mov
shll
jno
inc
lods
mov
out
inc
ret
cwtl
es
out
push
sub
rcl
icebp
add
daa
out
jp
mov
pushf
outsb
enter
js
jl
jge
test
orb
add
scas
ret
mov
and
lock
test
add
pusha
mov
or
scas
loope
pushf
lahf
add
iret
shl
test
lods
negl
mov
inc
sahf
ds
popf
mov
jecxz
bound
dec
faddl
into
bound
inc
push
ret
repnz
dec
adc
loop
xchg
fldt
mov
inc
mov
int
je
add
dec
rcl
mov
out
pop
cmp
data16
fbld
add
loope
out
rorb
lret
sahf
adc
push
lahf
std
mov
inc
repnz
scas
loopne
out
repz
out
sub
xchg
loop
in
pop
mov
mov
mov
lahf
nop
xlat
cmp
xor
mov
mov
ss
xor
sub
roll
add
jg
insl
repnz
adc
sub
inc
ljmp
mov
popa
inc
adc
cmpb
mov
inc
xor
and
enter
dec
loopne
leave
sahf
pop
push
inc
sub
mov
xchg
mov
fcoml
or
lahf
cli
fisubs
or
call
ret
ret
imul
cmp
in
cmp
inc
aad
pop
cld
and
dec
cvtdq2ps
or
leave
je
sti
jns
lds
aaa
sbb
out
mov
mov
lock
mov
test
mov
xlat
test
jle
shl
data16
or
lds
mov
xlat
add
xchg
mov
jae
xor
dec
mov
dec
mov
add
out
push
mov
push
inc
movsb
fistps
fwait
scas
cmp
sti
jg
push
stos
lahf
out
movsl
fisubrl
pop
cltd
mov
push
imul
sti
sub
cld
test
jle
aad
push
xor
dec
push
mul
out
js
hlt
imul
movsl
mov
mov
fcoms
cmp
lds
or
push
daa
dec
aas
test
cld
test
pop
xchg
add
jns
shlb
cltd
leave
ret
repnz
push
mov
add
pop
addb
xchg
fnstenv
push
or
cmc
jns
and
xor
mov
mov
jecxz
iret
mulb
stos
scas
add
add
sahf
iret
dec
test
aas
pop
lea
cmp
dec
adc
pop
sub
and
nop
mov
sbb
inc
xor
loop
lea
fwait
sub
mov
fidivrl
stos
xor
fistps
push
mov
fdivr
mov
imul
add
sahf
leave
pop
push
xor
ret
loopne
leave
xlat
in
out
mov
sarb
stc
xor
hlt
and
fs
fisubl
stos
aas
incb
push
fisubl
adc
imul
xchg
das
sub
in
rolb
lods
nop
stos
mov
ds
pusha
dec
push
aas
cltd
cmp
lods
insb
ss
add
leave
stc
push
les
mov
add
mov
scas
push
adc
add
or
push
lds
mov
clc
mov
dec
inc
push
ret
test
test
sarb
jmp
int
pop
idivb
add
xor
sti
pop
sub
inc
or
fldl
xor
mov
clc
ret
mov
push
adc
into
jecxz
sarl
sbb
push
mov
mov
pop
mov
outsb
and
adc
mov
aad
sub
icebp
cmp
xor
imul
dec
adc
dec
rol
mov
mov
ja
push
mov
cmpsl
push
insl
sbb
dec
das
mov
addr16
cmp
bound
loop
les
mov
sub
jecxz
pusha
test
cmpsl
jp
add
ret
mov
into
dec
in
ret
ss
add
incb
das
jmp
sarb
hlt
clc
jge
sub
cwtl
cwtl
scas
aaa
mov
stc
sbb
ret
cli
scas
cli
ficoms
std
push
mov
aam
dec
inc
popa
cmp
incl
in
dec
das
push
push
push
jge
data16
inc
push
adc
add
cli
adc
mov
hlt
mov
sub
push
sti
dec
lods
fsubs
push
sub
int3
aas
jle
mov
lods
test
sahf
fimull
mov
sub
es
mov
pop
aas
rorb
push
xlat
mov
xor
ret
scas
pop
adc
into
dec
lods
jns
dec
stos
test
mov
lds
dec
ds
mov
inc
push
push
xor
push
dec
outsl
ficoml
cmp
repnz
sub
pop
sub
pop
fisubl
inc
rol
sahf
ret
out
mov
cmp
stc
cwtl
jp
cmp
dec
scas
enter
imulb
mov
int
addr16
jecxz
shlb
mov
fistpll
fbstp
in
leave
xchg
mov
jmp
jmp
sbb
dec
mov
dec
les
sbb
pop
sahf
out
outsb
lahf
cmp
lods
gs
inc
mov
sbb
aaa
mov
idivb
lods
cld
mov
hlt
js
mov
sbb
stc
mov
xchg
in
jecxz
in
pop
jbe
add
icebp
ja
clc
mov
mov
sahf
mov
jp
mov
cmp
mov
push
xchg
lock
sbb
imull
mov
into
mov
xchg
sub
jo
mov
loopne
sbb
or
imul
lds
out
lret
mov
inc
dec
mov
mov
lahf
ljmp
ret
sarb
enter
xor
jl
les
add
leave
mov
sub
push
jge
out
sbb
ret
push
xlat
out
push
cmpsl
mov
adc
mov
or
movsb
fsubr
sbb
fisttpll
outsb
divb
xchg
ljmp
ds
push
pusha
roll
add
cmp
in
push
inc
mov
loopne
jecxz
xor
insb
mov
mov
rcr
out
cmp
lcall
loopne
enter
aad
push
fldcw
adc
add
cs
outsl
ret
add
fistpll
sub
ja
fcmovb
mov
ljmp
repz
jne
pop
fnstcw
xlat
sbb
cli
mov
leave
mov
mov
rcrb
aad
icebp
push
xchg
ds
std
sahf
psubusw
jecxz
sbb
push
iret
das
xchg
dec
sub
xchg
mov
shrl
fisttpl
lds
movsb
sahf
cmp
cs
ss
dec
lea
jecxz
mov
cmc
adc
mov
insb
inc
mov
mov
aad
ret
sub
repnz
sub
cld
or
mov
inc
nop
jle
sub
in
xchg
xor
inc
mov
mov
aas
mov
xchg
xchg
pop
mov
lret
mov
jge
ds
jns
inc
lret
xor
or
cmp
mov
loop
xchg
shrb
nop
add
or
push
mov
les
testl
mov
stos
sbb
mov
testb
push
sub
lds
sti
mov
mov
ret
aaa
and
push
lret
stc
out
cmp
aam
scas
push
inc
mov
jmp
in
sub
inc
adc
daa
push
aad
sbb
mov
or
mov
push
outsb
pop
clc
loop
out
lret
ds
nop
iret
ffreep
or
add
lahf
jle
out
dec
cwtl
iret
xchg
sti
mov
loopne
lret
mov
mov
inc
jmp
int3
mov
adc
fucomip
aas
mov
adc
lcall
mov
sub
jge
mov
sbb
mov
leave
inc
aad
clc
lock
xchg
ljmp
mov
inc
push
mov
int3
xchg
sahf
cwtl
out
rolb
xchg
mov
insb
xchg
lods
cmp
pop
mov
call
sbbl
test
adc
int3
test
jbe
cmp
jle
ror
inc
sub
dec
notl
insl
popl
scas
cmpsb
lcall
js
push
ret
sahf
mov
and
lret
push
xor
call
fistpll
sbb
sub
lret
xchg
dec
dec
inc
and
ljmp
and
or
inc
int
fildl
jo
inc
lods
or
outsl
inc
mov
cmpsl
int
jno
and
mov
and
mov
js
xor
xor
test
jnp
mov
mov
int
and
adc
int3
push
jmp
popf
cs
mov
and
popa
mov
cld
mov
sbb
incb
xor
jb,pt
mov
adc
idiv
sub
incl
push
sbb
cmpsl
and
cmc
inc
xchg
das
push
sarb
ja
mov
push
mulb
imulb
jp
aaa
movsb
inc
mov
inc
pop
fistps
mov
pminsw
dec
inc
scas
fcoml
fimull
dec
lcall
xchg
mov
scas
xor
adc
pop
dec
rcrb
add
mov
mov
mov
mov
pop
lret
mov
es
incl
xor
mov
lahf
mov
mov
stc
xor
dec
cmpsb
mov
bound
pusha
dec
adc
sbb
loopne
lock
in
and
sbb
in
mov
or
dec
cltd
mov
rcll
jns
cmpsb
mov
dec
add
sahf
mov
add
popa
test
cmp
js
xor
inc
ljmp
mov
icebp
jl
sub
lret
xorb
shl
iret
ret
mov
pop
testb
sub
js
pop
dec
incb
push
inc
mov
imul
push
sbb
push
cld
aad
outsb
push
adc
ljmp
sbb
xchg
outsb
lret
jnp
jae
sahf
add
push
rolb
adc
int3
push
aad
xlat
repz
lret
mov
xchg
out
xchg
ror
add
scas
cmpsb
or
aaa
enter
dec
cmp
dec
mov
popa
icebp
mov
mov
dec
dec
leave
pop
stc
inc
dec
and
mov
sub
cmp
push
out
imul
fnsave
sub
out
mov
addr16
insl
inc
sub
pop
mov
ss
movsb
cmpl
push
cmp
imul
bound
cmp
jbe
add
pop
mov
mov
aad
sub
xlat
push
dec
jne
cli
ss
mov
pop
incb
iret
lret
movsb
mov
int3
test
cmp
mov
sub
cltd
mov
cmc
pushf
cmp
sahf
push
pop
lret
cmc
jle
gs
stos
lcall
jne
notb
add
aaa
cmp
dec
or
mov
xor
repnz
movsb
icebp
jp
dec
rol
jo
and
ds
inc
fdivrs
mov
jne
leave
dec
cli
mov
jno
mov
imul
dec
insb
cwtl
lods
lret
loope
outsl
in
into
sahf
sub
add
out
push
jmp
or
sub
dec
rol
inc
lret
rorl
das
loopne
sahf
cmp
sub
les
mov
jns
mov
sbb
in
cmp
mov
xor
mov
dec
and
fmull
cmpsb
fs
insb
call
or
push
dec
jp
fistps
in
add
lret
pop
lods
clc
jmp
sahf
std
dec
mov
inc
cmc
cmp
jo
dec
fwait
sbb
outsb
dec
pop
sbb
sahf
jne
sahf
subb
je
xlat
mov
adc
cmp
jo
push
sub
mov
movl
dec
jnp
inc
cmc
xchg
sub
push
cmp
mov
mov
jo
std
push
mov
in
push
aam
decb
lods
sbb
in
dec
inc
mov
int3
inc
pop
mov
cwtl
cs
into
add
insl
push
fmuls
add
fcom
es
jl
cmp
jbe
cmp
mov
int
pop
dec
mov
xor
add
cwtl
mov
add
mov
repz
and
mov
movsl
fcomp
mov
std
xchg
dec
sbb
jb
mov
add
pop
or
ficoml
mov
mov
push
loop
sub
mov
or
add
sub
cwtl
jbe
imul
xchg
jo
xchg
lds
out
fdivrl
sbb
js
ficompl
mov
mov
xlat
push
sarl
mov
cmp
jmp
iret
cmp
jbe
bswap
cmp
mov
push
js
addl
jmp
xchg
in
or
sahf
pop
xchg
call
sbb
hlt
mov
call
outsl
mov
js
cmp
mov
in
jae
push
flds
into
fcomps
inc
enter
fcmovbe
fcoml
stos
sahf
push
inc
test
cs
aam
mov
mov
adc
jle
jge
sbb
jbe
into
mov
cmpsb
pushl
push
pop
js
mov
sahf
popa
sarb
adc
xlat
lods
scas
aad
pop
sbb
and
pushf
jns
and
fdiv
push
movsb
and
inc
call
sahf
mov
jae
cli
dec
call
addr16
cli
sub
pop
out
push
lret
mov
cmp
add
into
cli
mov
pop
scas
inc
enter
ret
add
fstpl
mov
sahf
scas
cli
fsubs
ss
xor
xchg
sub
sbb
adc
rcrb
les
in
mov
fmull
insb
out
sub
shufps
aas
outsl
inc
cmp
pushf
dec
lret
xor
dec
mov
and
inc
lret
jo
ds
iret
sbb
mov
mov
ljmp
sub
pop
or
mov
cmpb
sub
cs
stos
push
nop
mov
out
test
shrl
pop
and
movb
call
ficoml
jmp
inc
addr16
fmul
and
mov
out
mov
test
pushf
mov
cmp
mul
mov
cmp
mov
push
movl
push
out
mov
lcall
hlt
fcmovne
ja
xchg
jnp
mov
push
leave
cmc
movb
mov
mov
and
aas
adc
xlat
mov
jp
jmp
pop
add
jmp
cltd
xlat
lret
lret
mov
lret
ds
aam
mov
frstor
stos
rcr
daa
add
adc
lret
cmpsl
jne
push
cld
xchg
clc
lods
push
fabs
mov
test
movl
dec
sbb
dec
cmp
cmpb
inc
inc
sbb
lds
js
addb
outsb
out
cmp
push
xchg
in
repz
fldenv
clc
dec
push
xlat
iret
jmp
mov
sarb
sub
call
aam
push
fdivrl
sahf
fucomi
aad
and
dec
lcall
neg
xchg
pop
int
mov
in
push
mov
pmovmskb
int3
or
jle
lahf
cmp
scas
das
add
mov
mov
arpl
fs
cmp
add
push
popf
jb
and
iret
int3
rol
mov
mov
lret
daa
adcl
mov
pop
or
sarl
ret
inc
mov
inc
dec
cmpsl
arpl
jl
xchg
sahf
or
mov
pop
jp
aad
xchg
fsubs
icebp
bound
mov
mov
or
lods
fadds
insl
dec
je
sahf
push
insl
sbb
jbe
shr
lods
mov
js
testb
aad
mov
lods
js
sbb
add
fsts
enter
imul
into
sub
into
xor
jp
add
cltd
mov
aas
into
imul
pop
xchg
add
sbb
and
stos
loope
arpl
inc
pop
dec
rcll
pop
push
jg
mov
sbb
fsubs
xchg
jmp
imul
sub
xchg
xor
sahf
pop
stc
inc
push
daa
test
and
jne
dec
dec
jno
dec
lods
mov
push
lret
jle
mov
inc
les
xchg
add
sarb
sbb
sub
cli
adc
je
fdiv
leave
mov
cli
mov
fisubrl
lods
scas
loope
nop
add
push
imul
jne
sbb
loopne
hlt
mov
xchg
sub
mov
inc
xchg
int
aad
aad
mov
mov
rclb
int3
or
xchg
cs
iret
scas
xor
lahf
jns
lods
and
and
bound
loopne
and
xchg
ret
inc
leave
inc
sbb
rcr
cmc
mov
inc
hlt
pop
xor
jmp
call
lcall
arpl
jne
and
jle
je
jnp
cmp
cmp
fists
test
cs
adc
shll
fwait
jns
mov
mov
int
mov
adc
scas
insl
add
fcomip
xor
xchg
das
jne
enter
mov
xor
cmpsl
jno
jle
out
dec
jmp
mov
or
scas
and
mov
out
cmp
mov
xor
leave
repnz
push
dec
mov
cmpsl
jmp
ficoms
push
push
jb
fwait
hlt
xchg
dec
mov
cld
jp
sbb
push
pop
mov
sahf
ret
cmpl
es
clc
pop
fildll
fdivrl
ffree
mov
loopne
movsl
inc
jmp
in
inc
pop
inc
xchg
jne
imul
jns
add
mov
cmc
outsb
xchg
mov
shll
in
stos
jp
sbb
cli
or
or
mov
out
mov
xlat
push
call
fnstenv
push
mov
fwait
xlat
mov
mov
lret
aaa
xchg
loop
sub
or
push
adc
xor
lcall
cli
movsb
sahf
loope
out
sar
movsb
sub
inc
popf
cwtl
mov
jmp
aaa
icebp
shlb
xor
sahf
lock
inc
mov
mull
ficompl
nopl
mov
clc
sarb
jle
jmp
xchg
sbb
stos
or
sub
add
clc
je
push
iret
pop
dec
out
rcl
mov
repz
pop
clc
sahf
enter
xor
push
push
xchg
add
js
or
repnz
addl
xlat
ljmp
lock
mov
ffreep
int
enter
xchg
mov
inc
jle
cmp
call
xlat
into
movl
xchg
ds
mov
popf
add
cmpsb
dec
push
icebp
lret
add
fdivr
mov
pop
jg
aas
mov
jns
test
dec
jge
push
or
cltd
fldcw
sbb
xorl
test
test
addr16
enter
mov
xor
fiaddl
ds
test
ret
dec
pop
hlt
mov
out
je
dec
bound
inc
enter
sbb
filds
in
mov
rorb
cmp
sub
stc
rcl
sub
into
cmp
jns
mov
cltd
fdivrl
rolb
or
enter
rcl
clc
scas
push
shrl
cwtl
scas
cwtl
ficompl
scas
adc
mov
cmp
mov
mov
cmpsb
push
lods
or
iret
cmc
push
lahf
jmp
add
ds
test
push
popf
push
jl
push
shr
aas
adc
push
testl
inc
call
iret
xchg
test
jle
pop
dec
mov
jmp
clc
jno
cltd
gs
repz
insl
mov
lcall
adc
lds
fdivrs
push
push
sub
jl
mov
push
sbb
jmp
fnstsw
lock
mov
and
xor
iret
ret
or
ret
pop
ljmp
inc
call
ficoms
xchg
xor
push
ret
xchg
xchg
cmpl
fmuls
into
xor
aaa
xchg
cli
insl
out
nop
and
push
leave
jp
fmulp
push
sahf
loop
pop
aaa
dec
mov
inc
push
int
mov
mov
rol
mov
sahf
repnz
je
pop
test
clc
add
cwtl
sti
lret
pop
push
cs
pop
fdivs
cmc
jle
insb
loop
cli
ret
jne
push
aas
loopne
int
sub
outsb
cli
scas
xlat
and
push
loope
fidivrl
jo
push
pop
jp
mov
scas
push
cmp
dec
mov
sub
fiadds
mov
mov
js
out
xor
inc
adc
pop
stc
adc
xlat
in
mov
sahf
and
bound
cmp
mov
or
shll
fnstcw
mov
xchg
stc
cli
decb
xchg
add
jnp
cli
inc
sbb
cmpsb
clc
jp
out
or
cmpsb
divl
jne
cmp
mov
sub
fs
xlat
inc
bound
adc
outsl
dec
mov
dec
adc
add
cmp
jbe
sahf
pop
add
mov
int
pop
mov
sahf
xlat
cltd
mov
sbb
mov
hlt
mov
sahf
pop
dec
sub
jns
in
cs
in
jae
cmpsb
inc
jmp
mov
aad
repnz
dec
jo
cmpl
je
sbb
pop
and
pop
setg
stc
add
cli
cmpsb
mov
pop
ss
jns
insl
dec
push
stos
cmp
mov
insl
sbb
xor
pop
cmpsb
sub
out
cmpsb
pop
cmpsb
sub
pop
pop
mov
outsl
pop
rcr
rol
inc
mov
gs
sbb
push
repnz
mov
mov
jno
ret
pop
push
push
xchg
inc
push
pop
fidivl
sti
outsb
pop
leave
jge
ds
add
mov
sbb
aad
loop
push
cld
mov
lods
xor
cmp
insl
jnp
arpl
dec
outsl
lods
xchg
xor
jge
inc
xor
lods
adc
divl
jge
aaa
mov
scas
out
lret
lds
add
mov
xor
ret
scas
out
push
mov
sbb
xchg
std
aam
mov
std
xchg
rcl
mov
or
ds
dec
xchg
lods
divb
lahf
mov
adc
or
inc
stc
insl
ja
inc
mov
jge
rcrl
cmpsb
pop
lods
sbb
mov
push
push
mov
jnp
jo
add
cmp
aas
sub
enter
pop
jmp
lcall
mov
outsb
cli
push
idivb
jns
mov
pop
inc
out
lds
ds
clc
mov
sub
mov
mov
rcr
mov
fbstp
ss
movsl
clc
xor
test
lcall
js
xor
push
sub
iret
fwait
jb
into
mov
cli
push
sbb
mov
mov
pop
jecxz
jae
push
cmp
jp
xchg
jmp
jae
and
cmp
mov
aaa
jae
sarl
sbbb
push
mov
sahf
fiaddl
fcomps
shlb
test
sbb
jmp
scas
loopne
pop
mov
jmp
mov
xchg
es
clc
test
shlb
jno
lret
jne
mov
aas
nop
data16
fcoms
xlat
xchg
stc
push
xchg
sub
adc
aam
or
jns
and
sbb
js
push
jecxz
out
mov
idivb
inc
xlat
imul
dec
stos
inc
xor
aas
imul
loope
mov
iret
push
mov
outsb
inc
jb
mov
fdivrs
mov
addb
arpl
add
add
movsl
out
dec
leave
mov
push
mov
pop
call
arpl
sahf
sbb
sub
inc
repz
cmp
jne
notb
push
jecxz
dec
hlt
dec
iret
sar
xor
loope
ljmp
test
lods
stos
xchg
push
pop
cmpsb
fcmovnbe
push
sub
mov
jbe
cmpsl
aad
in
nop
div
sub
dec
sub
jecxz
clc
inc
repz
sbb
inc
out
dec
xchg
push
push
and
ret
ror
rcrb
jo
imul
dec
xor
mov
sbb
mov
mov
xor
jge
and
mov
pop
loopne
xor
into
mov
xchg
sub
sti
lods
add
je
insb
mov
push
push
xor
cmpsl
xchg
mov
std
jp
das
xlat
repz
jg
xchg
cmp
ds
and
inc
or
push
dec
jb
nop
and
in
je
adc
clc
pop
mov
int
dec
jae
inc
adcl
add
cli
scas
scas
pop
cmpb
out
add
in
fbld
inc
enter
inc
mov
insb
xchg
sub
jle
adc
ss
cmpsb
jae
sbb
scas
ficoms
or
push
fnstsw
xor
cs
jg
cmpsb
cmpsb
outsl
mov
mov
xor
loop
and
sub
ret
sub
sarl
ljmp
and
rcl
pop
divb
inc
push
pop
pop
ss
aaa
test
push
xchg
xchg
movb
mov
mov
jns
xlat
enter
inc
mov
dec
xchg
mov
in
and
jns
bnd
es
js
mov
aas
xchg
mov
repnz
add
mov
push
push
gs
ret
pop
xchg
enter
jbe
test
mov
jns
jl
shrl
mov
xor
lcall
cli
sub
cmp
add
cmp
cmpsb
jle
mov
sbb
xchg
sahf
fistl
xlat
mov
inc
adcl
stos
sub
xchg
lahf
or
jno
dec
stc
xchg
inc
add
push
mov
nop
stos
jo
inc
enter
sbb
cmp
adc
out
add
bswap
cld
or
or
repnz
mov
leave
std
adc
hlt
jmp
ficoms
int3
mov
shrl
mov
mov
mov
mov
test
aaa
int3
mov
and
pop
sub
mov
pop
jle
adc
movb
pop
adc
bound
dec
test
pop
mov
cmp
cmp
fdivrs
sub
pop
es
into
and
jle
stc
sub
int
xchg
mov
imul
jp
add
sahf
jle
insb
sbb
fisubrl
inc
add
dec
clc
in
aaa
out
sahf
push
sub
push
push
jge
je
jbe
jp
shr
xor
jle
cmpb
imul
ret
mov
cmp
imul
mov
push
ljmp
loopne
fsubr
inc
fldt
cli
xchg
or
dec
xlat
dec
inc
dec
inc
adc
push
inc
push
ds
sbb
dec
iret
mov
sub
enter
inc
adc
xchg
add
cmp
mov
in
dec
adc
in
pop
bnd
aam
inc
sbb
test
mov
xchg
les
and
mov
mov
xchg
js
dec
mov
pop
add
shrb
sbb
call
loop
fmul
pop
out
adc
movsl
mov
add
fdiv
dec
leave
mov
inc
repz
mov
xor
into
adc
sahf
ret
clc
fwait
jp
xchg
or
setl
xchg
enter
jg
xor
icebp
jne
xlat
subl
and
push
cli
inc
xorl
loop
jp
inc
decb
or
xor
mov
shl
fdivl
mov
push
or
mov
ds
xchg
shrl
ret
cld
push
jge
aas
mov
cli
sub
movsl
push
sar
pop
fst
dec
jl
loopne
mov
dec
xchg
xchg
push
mov
jle
movsl
pop
mov
adc
cmp
cli
mov
sub
mov
mov
push
add
jecxz
leave
out
inc
add
aas
loop
jae
mov
ja
dec
or
xor
xchg
push
leave
mov
fimuls
mov
sbb
fcmovnb
fistpl
adc
pop
xchg
lret
mov
pop
xchg
shll
in
outsl
xlat
mov
push
out
dec
sti
idivl
xor
mov
lret
or
sahf
or
mov
sbb
cmp
mov
test
js
pop
jge
repnz
sub
add
xor
clc
mov
dec
mov
push
cmpsb
lcall
cmpsb
in
js
jmp
cmp
push
scas
in
mov
sbb
xchg
xor
mov
xchg
mov
mov
sbb
cmpl
sahf
mov
jle
sub
pop
std
rcr
jg
push
fidivrs
sar
or
adc
mov
pop
repz
ret
sbb
repnz
adc
xor
xor
dec
pop
mov
add
mov
cmp
out
jg
bnd
sub
test
xchg
mulb
cmp
jg
mull
mov
loop
mov
adc
fs
dec
fisubrl
vrcpss
movsb
mov
add
jecxz
xchg
jg
aam
mov
shll
movsb
push
andl
inc
inc
add
jns
gs
xor
lcall
sub
dec
movsl
out
movsb
icebp
add
lock
stos
sbb
mov
outsl
mov
fisubrl
inc
mov
sahf
fldt
repz
sub
push
xlat
adc
ds
push
icebp
adc
stos
xor
xor
pop
fadd
or
sbb
xchg
dec
push
jo
mov
repz
hlt
repnz
cmp
mov
sar
jns
add
mov
repnz
divl
fmul
icebp
mov
lret
fld
add
push
xor
adc
sarl
inc
adc
xchg
loope
aaa
lds
clc
xchg
js
ret
pop
lds
xchg
cli
loop
cmp
lret
leave
push
sbb
rclb
pop
jns
xor
cmp
aam
arpl
neg
into
inc
out
cmp
call
mov
fisubrl
aam
jl
pop
lea
cld
in
fcomp
cld
aam
or
sbb
and
and
fucomip
idivl
xor
fnsave
loopne
add
push
adc
lds
enter
in
sbb
mov
sub
hlt
fcoms
mov
mov
fadds
jle
cmp
push
and
sbb
push
clc
ret
rcl
sub
push
incl
xlat
fisttpl
stos
adc
pop
sti
inc
out
es
dec
sub
jnp
adc
pop
popf
inc
ret
adc
out
pop
xchg
or
sub
lret
jge
mov
sbbl
dec
add
lods
jmp
arpl
das
ds
into
mov
inc
sti
adcl
pop
enter
ret
leave
ss
stc
add
fs
mov
dec
mov
xor
jo
mov
lds
aaa
insl
sbb
in
xor
lock
xor
sub
push
jne
adc
inc
out
mov
sub
sub
enter
cmp
mov
ds
jno
sbb
mov
and
fs
mov
leave
scas
fsubp
fst
loop
sub
mov
test
xor
mov
sub
or
dec
pcmpeqb
pop
fidivrl
cmovs
mov
pop
int3
dec
jb
enter
into
ret
sub
movsb
cmpsl
loopne
push
into
ljmp
sub
jb
out
push
mov
mov
ror
mov
dec
adc
fisubrl
or
ja
mov
callw
jne
lods
dec
jp
adc
cmp
adc
mov
ds
adc
fimull
popa
jmp
subl
lods
ret
shl
sarb
push
or
clc
je
mov
aad
cld
jae
push
mov
fucomi
inc
inc
mov
aas
call
sbb
adc
cmp
lds
sahf
shl
je
cltd
ficoms
sub
mov
aaa
test
out
xchg
push
jbe
lds
or
adc
xorl
sub
ds
ficoml
test
adc
dec
add
leave
pop
sbb
fnstenv
pop
push
fwait
ljmp
mov
dec
or
dec
cmp
pusha
lahf
enter
fisubl
jo
sbbb
outsb
and
pop
stos
or
push
jo
rcr
cltd
pushf
and
push
xchg
dec
push
pop
ret
out
fcmovbe
inc
stc
jne
aas
daa
mov
fbstp
rol
movsb
lret
leave
shl
jo
xchg
inc
lds
inc
lcall
fcmovu
fadd
in
cld
rcl
pop
lret
in
xchg
fdivrs
hlt
dec
xchg
addr16
and
outsb
clc
lret
push
ds
into
jecxz
mov
mov
mov
sub
xlat
outsb
into
sbb
fcomp
in
fcomps
pop
and
pop
xchg
push
jmp
pop
sbb
into
gs
fadds
les
push
inc
fstpt
out
fwait
cmp
jle
adc
cmpsl
cmc
xchg
mov
push
add
push
lds
cmc
fxch
hlt
cmp
jp
stc
push
fnstcw
inc
jbe
and
stos
jo
cmp
sbb
xchg
inc
push
aad
inc
lods
ret
mov
aas
stos
outsb
adc
cld
xlat
loope
and
inc
inc
jle
nop
scas
ret
lcall
movsb
mov
jl,pt
mov
daa
scas
imul
pop
lods
mov
mov
fwait
and
add
push
and
nop
test
fdivrs
cli
es
add
ficoml
popf
mov
or
insb
sti
cld
test
dec
jge
shl
test
cmp
mov
test
mov
mov
mov
mov
push
cmp
loope
adc
sbb
int
lret
cmpsl
test
out
sbb
in
aaa
jecxz
shrl
fstpt
sbb
dec
hlt
adc
adc
cmp
pop
sub
inc
xorl
pop
negl
mov
repz
push
mov
mov
sub
data16
popf
adc
in
movsl
sub
lds
test
mov
mov
sahf
or
add
lcall
xchg
pop
inc
rolb
adc
cltd
adc
dec
stos
cmp
mov
gs
pop
les
push
imull
repz
das
into
sbb
lcall
pop
fisubl
add
adc
test
cmp
inc
jbe
lcall
pop
enter
mov
mov
mov
call
adc
out
cmp
xor
xor
and
mov
mov
sub
lret
fwait
arpl
jle
mov
dec
rclb
in
fwait
xchg
mov
push
sub
dec
mov
dec
idiv
jmp
sub
cmp
scas
negl
lret
cmp
faddl
jge
or
add
aam
mov
testb
xor
sahf
ljmp
jmp
je
cmp
jb
dec
xor
mov
js
sub
add
les
mov
push
add
scas
orb
cli
pushf
shll
xchg
clc
xchg
cld
or
gs
aas
incl
out
sub
push
lret
sub
or
sahf
jnp
xlat
push
mov
push
adc
in
pop
gs
cmpsb
test
adc
inc
repz
pusha
adc
fiadds
mov
or
and
cmp
into
dec
fadds
lahf
xor
cld
lret
scas
sub
nop
mov
aas
adc
inc
js
movsl
add
or
int
sbb
xlat
repnz
adc
cmpsb
into
inc
or
cmp
scas
lahf
cmp
mov
lret
pop
aad
mov
mov
and
pop
cmpsl
mov
ds
je
ror
scas
aam
daa
sarl
cmp
incl
lahf
repnz
push
jb
data16
cmp
fdivrl
out
call
insb
cmp
pop
mov
push
pop
call
dec
mov
jne
add
and
sub
dec
or
mov
mov
into
xor
mov
adc
ret
cmp
sti
les
sahf
clc
clc
xor
adc
jo
cmp
fisttpl
cmpsl
popf
in
pop
add
hlt
mov
std
cmp
lds
cwtl
mov
jecxz
in
repz
xor
rcrl
dec
xor
jge,pn
dec
cmp
jae
outsb
sbb
inc
fidivrl
inc
das
movsb
add
test
icebp
mov
or
dec
and
push
nop
push
push
add
enter
or
add
xchg
cmp
jno
out
cli
jge
mov
sbb
xor
push
lret
mov
test
clc
mov
jecxz
adc
dec
cmp
mov
flds
inc
adc
test
mov
filds
pop
ret
dec
cmp
mov
sub
dec
or
pop
pop
mov
stos
push
sarb
ret
cld
hlt
push
mov
cmp
add
daa
xchg
sahf
mov
lret
into
jnp
das
fimull
jno
int3
jmp
outsb
pop
cmp
or
jl
sub
sahf
inc
and
xor
out
decb
je
and
xchg
add
cmp
push
rorl
or
aas
add
cltd
neg
or
js
sub
or
gs
sbb
push
sbb
out
pop
mov
lods
icebp
ficoml
push
fcoms
add
add
mov
mov
lds
jns
movsb
js
jbe
add
jg
jo
out
push
mov
mov
dec
push
adc
pop
xor
cld
jmp
mov
sti
repnz
cmp
aas
xor
mov
icebp
jns
lds
xchg
shlb
and
stc
push
cli
adc
xor
stc
sub
mov
movsb
scas
or
cmp
repnz
insb
fistl
add
jle
scas
inc
std
fcomp
xchg
or
test
sti
mov
xchg
mov
std
fwait
sub
mov
jns
fcoml
pop
lret
leave
adc
mov
lret
mov
fildll
rolb
pop
and
and
iret
mov
or
sub
mov
jle
scas
and
mov
aam
mov
push
fidivs
int3
dec
sbb
push
sbb
xor
mov
sti
lcall
mov
dec
sahf
gs
scas
xchg
jmp
fsubr
aaa
lcall
jmp
inc
dec
pop
ret
call
sbb
pusha
dec
rorl
add
sbb
test
test
cmp
or
dec
pop
aaa
pop
fiadds
in
stos
push
jmp
stos
in
lret
push
cmp
lods
fimuls
clc
repnz
xchg
les
jge
push
stc
std
or
pop
or
push
fnstenv
bnd
movsl
cs
push
jle
pmaxsw
sub
pop
push
inc
stc
cmp
clc
push
lret
xchg
enter
add
mov
mov
out
sti
and
nop
scas
cs
jae
and
popa
sahf
add
cli
xchg
loop
pop
mov
mov
xlat
jle
mov
mov
outsb
mov
aaa
pop
in
xlat
push
imulb
ja
inc
ret
ds
adc
ss
mov
pop
cs
into
es
jb
xlat
push
call
ljmp
push
leave
mov
jb
testb
out
aas
inc
pop
out
lret
stos
mov
iret
inc
sub
mov
jp
push
sub
fcoms
out
int
into
sbb
add
mov
lcall
call
sub
xchg
mov
scas
iret
mov
iret
push
inc
cmpsb
scas
sub
mov
dec
into
or
out
xchg
jb
push
cli
xchg
cs
out
mov
pop
into
cli
mov
pop
out
xchg
cli
xorb
jle
pop
push
cli
jp
pop
jbe
fs
jb
pop
ret
scas
pop
push
pop
cli
data16
or
pop
ds
sub
ficoml
cmp
ret
pop
call
call
call
call
jmp
mov
push
cmpsb
stc
mov
into
pop
mov
cmp
mov
arpl
jg
jl
jo
stos
and
stos
fldcw
dec
xorb
pushf
js
jle
add
cmpb
je
fstpt
push
push
lret
pusha
xlat
into
push
ds
cli
dec
fcomp
movl
xlat
loop
cs
outsl
push
push
iret
sahf
add
xlat
lock
daa
fstpt
ficomps
lods
xchg
js
and
fcmovb
stos
fadds
out
call
lret
cli
outsl
mov
adc
fcomp
nop
clc
pop
sub
int3
ret
sti
dec
sbb
lods
mov
mov
cwtl
into
inc
andb
push
in
jbe
fmul
cs
adc
ja
jle
jb
js
xor
mov
adc
mov
mov
into
push
dec
ror
fidivs
sahf
add
fcomp
dec
test
ret
and
add
xorb
jno
sub
cmp
int3
lret
pop
int3
je
mov
cmp
fcmovnb
add
xchg
or
nop
int
add
rclb
cmp
ds
mov
stc
mov
repz
or
xchg
add
inc
pop
pusha
dec
push
push
jp
or
sub
mov
jecxz
push
mov
lret
mov
xor
mov
xlat
ja
sbb
roll
jle
sbb
int
ret
stc
xchg
loop
dec
lcall
aaa
sub
inc
orl
clc
push
shll
inc
sbb
mov
mov
or
aam
repnz
mov
mov
cmp
and
adc
mov
fistpl
bound
loope
xchg
sub
cli
roll
sub
add
out
lret
es
xchg
sarb
rcll
rorb
jge
cld
into
mov
fwait
jp
or
out
in
cmp
push
or
test
mov
fnstcw
add
sub
push
adc
add
xlat
jmp
fiaddl
nop
xchg
adcl
push
inc
dec
jno
lds
cmp
jnp
out
or
dec
pop
mov
das
mov
lret
push
xor
sbb
mov
data16
leave
pop
mov
xchg
mov
aas
pushf
or
sarb
divb
inc
jmp
add
clc
adc
inc
lret
cmp
push
xlat
xchg
daa
jle
daa
lcall
mov
sar
stos
xlat
in
ficomps
loop
mov
jle
daa
ret
clc
mov
ljmp
xlat
rol
ja
repnz
fcomp
popa
ret
mov
es
xlat
cli
inc
xchg
ds
xor
mov
add
pop
rcll
mov
cli
mov
cmp
repz
or
ds
fucomp
push
iret
ret
inc
fadd
iret
adc
xor
clc
push
mov
ds
sbb
ret
mov
sub
das
mov
stc
push
jbe
sbb
dec
mov
or
xchg
and
sbb
sbb
push
fdivrs
mov
into
repnz
mov
inc
push
and
es
ljmp
test
ds
cmpsl
cli
test
das
push
clc
mov
out
clc
push
sub
in
push
rol
mov
out
movsb
push
xchg
mov
outsb
mov
inc
leave
in
incb
out
xor
scas
push
in
roll
into
adc
add
xchg
mov
jmp
adc
push
testb
xor
outsb
sahf
out
adc
ljmp
fdivrs
jb
out
ret
stos
ds
ljmp
inc
data16
enter
xlat
into
cli
lret
push
lret
iret
inc
xchg
scas
mov
push
inc
testb
subl
mov
cmpb
fwait
dec
push
int3
sti
pop
adc
add
lea
outsb
adc
jle
sub
mov
rorb
mov
cwtl
ret
inc
lcall
xor
or
sbb
sbb
sbb
negb
std
mov
xor
jg
sbbb
dec
loop
bound
mov
rclb
insb
xor
and
sbb
xor
cwtl
lret
push
mov
stc
xchg
sbb
cmp
xor
rclb
mov
sbb
xchg
cmc
dec
xchg
xorb
mov
pop
push
mov
sbb
xchg
daa
sbb
bound
mov
repnz
lds
mov
cli
and
mov
mov
mov
or
imul
mov
lcall
clc
fmuls
sub
scas
addr16
push
popf
xchg
pop
sbb
xor
outsl
add
stos
or
lret
dec
pop
ljmp
bound
push
pop
dec
clc
scas
test
es
aam
fs
jl
or
dec
mov
adc
pop
pop
mov
lret
mov
fxch
mov
jg,pn
add
imul
push
fiadds
ss
push
shl
pop
dec
fbstp
mulb
loop
push
push
fidivrs
mov
pop
adc
stos
cmpsb
jp
std
xlat
fcomip
les
lods
xchg
inc
mov
mov
mov
mov
sbb
or
fisubrs
sarb
adc
jecxz
mov
sbbl
and
vpsrad
cmp
fsubrl
mov
and
ljmp
hlt
je
arpl
lds
nop
jp
sub
clc
sbb
dec
addb
jne
lahf
adc
scas
or
fimull
clc
out
in
fsubrl
out
fsubl
mov
popf
mov
push
fsubl
rol
fcoms
mov
cwtl
js
mov
xlat
lcall
stos
cli
sbbl
push
fisubrs
xlat
je
jp
cmp
test
cmp
dec
mov
fiaddl
fadd
dec
xchg
sbb
ljmp
mov
pop
sub
sub
mov
cmp
out
mull
or
xor
add
adc
jp
arpl
push
and
add
ss
call
mov
cmp
repz
cli
ret
push
arpl
test
xchg
pop
mov
add
adc
sahf
pop
mov
push
mov
dec
or
aaa
mov
xor
mov
cmpsb
int3
inc
sub
xchg
call
sarl
push
and
jp
add
pop
dec
lret
outsb
or
sub
in
jle
imul
outsl
outsb
xchg
lret
sub
mov
xor
sahf
fcomp
xchg
inc
fcmovu
push
mov
les
enter
loopne
cmovg
sbb
ljmp
mov
cmpb
repz
les
in
mov
call
cmp
movsl
inc
xchg
shlb
ja
pop
out
xchg
mov
push
dec
enter
jae
mov
mov
fidivrl
fxsave
aad
stos
sbb
fxch
mov
xchg
fisttpl
push
jl
sbb
mov
lcall
dec
mov
in
cmp
or
sahf
fisttpl
fsubrs
xchg
push
mov
or
leave
inc
mov
or
cmp
int3
lds
sub
xorb
fdiv
dec
lcall
leave
pop
dec
scas
inc
mov
add
nop
dec
std
xlat
aam
lret
hlt
add
jmp
jge
sub
loope
mov
inc
std
mov
out
add
ljmp
inc
arpl
repnz
sti
sub
fsub
push
mov
pop
std
lea
mov
push
sub
sar
inc
pop
mov
negb
sarl
js
pushf
lret
or
mov
mov
jle
loopne
adc
shrb
cmp
clc
lcall
fisubrl
imul
mov
jnp
leave
pop
mov
pusha
mov
inc
mov
sub
mov
push
mov
adc
fs
sub
xchg
ja
or
sahf
pop
cld
inc
jecxz
in
shrb
or
lods
jl
int
push
ljmp
aaa
add
jae
adc
mov
pop
je
sbb
cmpps
sub
leave
jne
mov
sub
pushf
push
mov
push
popa
fsts
nop
mov
add
pop
xchg
xor
mov
push
sti
sub
dec
mov
inc
mov
int
arpl
or
xchg
sub
inc
mov
mov
int3
cmp
lahf
mov
fiaddl
xchg
rcrb
sub
ljmp
sahf
addl
jmp
scas
sbb
mov
ret
sarl
es
jle
hlt
cld
xchg
cmpsl
fsubr
and
aad
or
ss
pslld
fadds
mov
dec
mov
push
pusha
popf
fwait
scas
roll
lcall
ljmp
and
inc
pop
xor
icebp
mov
lret
fcomps
mov
rcl
icebp
sbbb
push
enter
dec
adc
mov
leave
outsl
aas
icebp
and
pop
icebp
sar
ds
mov
es
movsl
cmp
add
pop
mov
mov
and
or
test
fmul
pop
int3
fmulp
enter
xor
dec
fs
add
imul
push
repz
cld
divl
nop
lds
ret
sbb
rcll
pop
adc
ljmp
lret
pop
jmp
jl
inc
cmp
test
mov
or
mov
and
or
mov
out
loopne
cmp
mov
lret
dec
enter
xor
inc
in
jle
add
iret
lret
subb
mov
int3
jle
add
adc
js
fiadds
inc
sbb
repz
outsl
jmp
jle
mov
repnz
dec
pop
addr16
or
pop
lods
in
xlat
int3
icebp
cli
rcrb
mov
stc
rcr
add
fucomi
cmc
int3
lret
arpl
adc
fcompl
arpl
pop
es
mov
sbb
out
sahf
call
clc
jb
lock
clc
or
lods
enter
push
test
int3
jne
dec
std
cmp
loope
mov
test
xor
inc
push
arpl
ret
inc
xor
add
fmull
sti
inc
fcom
les
mov
mov
mov
test
xchg
subb
sbb
xlat
shll
notb
xchg
mov
and
push
mov
cmp
mov
aas
fdivrs
aas
mov
aam
out
decb
inc
mov
sahf
or
mov
cli
sub
push
enter
or
fdivp
lods
mov
shlb
jmp
sahf
sub
cmpsl
cmp
ss
add
pop
cli
lods
or
dec
iret
decl
stc
push
lahf
test
jno
aas
loop
int
shl
cmp
adc
inc
mov
into
cmp
scas
xchg
out
mov
fcmovnb
xchg
stc
repnz
pop
xchg
cmp
out
ljmp
das
divl
lret
or
push
lret
ds
inc
js
mov
xor
fldt
lcall
out
clc
mov
or
aas
inc
mov
inc
mov
in
jnp
adc
add
rol
cmp
sbb
aad
ret
cmpsb
jne
daa
push
mov
pop
push
jne
rcrb
inc
add
jg
fldenv
js
sub
adc
mov
mov
sub
mov
movl
nop
scas
xchg
cli
cmp
ds
rcrl
movsl
cmp
ret
enter
shll
jl
cmp
push
js
mov
in
scas
sbb
cmp
inc
cmp
jb
int3
movb
inc
enter
stos
cltd
pop
stos
aaa
fisttpl
push
sahf
jo
test
push
or
lods
aas
mov
push
xchg
adc
loop
sbb
push
lods
inc
push
insl
out
pushf
push
adc
jg
das
cmp
mov
fdivrl
pop
je
and
movb
mov
or
movsb
xor
ror
ffree
aas
ret
lret
cmp
mov
negl
call
pop
inc
icebp
roll
sti
fcomps
cli
sub
aas
pop
enter
cli
ret
push
inc
xor
inc
add
idivb
fimull
and
lahf
cmp
push
dec
insb
add
add
rorb
jae
mov
xor
xor
xchg
mov
inc
test
dec
ss
cmp
ja
aad
icebp
js
data16
imul
sub
lahf
ds
inc
sbb
dec
out
mov
mov
pop
adc
inc
loope
mov
add
jne
xlat
sahf
fistpll
inc
insl
pop
push
dec
lds
inc
cld
insb
fnstcw
inc
insl
sub
cmp
jbe
jl
lahf
fcmovnb
adc
push
ret
cmp
adc
repz
mov
cli
leave
loopne,pt
mov
fidivrl
pop
pop
ljmp
addb
push
cltd
shrb
popf
mov
and
ret
iret
jbe
jne
dec
pop
dec
ficoml
cmp
not
pop
or
mov
fdivrs
aas
movsl
enter
call
aaa
mov
or
push
inc
sub
xchg
cld
js
inc
adc
movb
dec
pop
inc
fmul
mov
fcmovbe
rcr
xchg
aaa
sbb
clc
jp
ficoms
inc
pop
test
in
std
cld
fildll
mov
mov
dec
dec
stc
je
cmp
das
add
insl
cmp
and
fld
mov
push
mov
add
in
inc
ficompl
fldl
fcmove
stos
shlb
xlat
js
rcrl
icebp
nop
pop
mov
fisttps
fcmovb
dec
dec
sahf
pop
movsb
imul
and
lods
add
ffree
not
cld
xor
xchg
mov
sub
sbb
fbld
xor
pop
mov
inc
adc
les
mov
jo
ljmp
lret
cli
pop
add
leave
jns
movsl
stos
inc
loop
imull
fdivl
rcrl
fcomps
jecxz
jns
push
xchg
mov
jp
sbb
popa
into
mov
adc
inc
mov
fs
rcr
popa
das
fadd
cld
icebp
xlat
sahf
pop
or
test
push
cwtl
ss
add
mov
mov
idivb
jecxz
mov
xchg
ficompl
lahf
dec
js
sub
dec
call
enter
push
mov
mov
xlat
xchg
cmp
jns
push
and
leave
cld
scas
jp
fucomp
mov
loope
enter
stos
xor
xlat
icebp
inc
js
cmp
mov
mov
pop
mov
sbb
dec
xor
fldcw
enter
fsubr
fnstenv
pop
xchg
rolb
mov
fdivrl
mov
xor
cmp
adc
jmp
iret
mov
mov
imul
decb
stc
pushf
xlat
pop
jne
push
sahf
cli
or
call
mov
loopne
cmp
sub
test
add
mov
stos
cli
mov
ss
cmp
sbb
pop
xchg
push
sahf
mov
adc
in
lds
into
fcmovb
dec
jne
hlt
xchg
loopne
dec
shlb
loopne
fmul
xchg
out
sahf
dec
sahf
push
in
in
jb
cmp
lret
stos
dec
cmpsb
adc
push
rcl
push
cli
lret
lahf
ret
jge
incl
icebp
test
outsl
pop
into
in
sbb
dec
cltd
clc
jo
xchg
imul
ffree
xchg
and
int
out
test
mov
mov
es
lock
outsl
ret
mov
jb
mov
fisubrs
sub
jae
xchg
out
sahf
imul
pop
loop
jmp
jp
mov
add
xchg
arpl
xchg
ja
test
jecxz
mov
jmp
adc
iret
and
or
aas
jbe
mov
fildl
sahf
in
add
xor
jbe
jnp
pop
jns
loopne
fsubr
ficoms
dec
test
sti
and
jle
out
inc
fidivrs
push
mov
lret
mov
std
mov
shrb
xchg
inc
fildll
push
rcr
mov
adc
aas
cmp
dec
fisubrl
cmpb
ffree
xor
xchg
iret
or
jle
iret
cmpsb
fistpll
hlt
popa
xor
push
xchg
sbb
pop
lcall
and
adc
fistps
push
push
ret
dec
into
clc
lahf
mov
fmulp
movsb
adc
fbld
pop
ror
mov
jb
sahf
mov
leave
cwtl
pop
mov
cmpl
jg
dec
clc
lahf
and
fwait
adc
inc
leave
jle
cwtl
push
mov
ret
ljmp
cld
aam
sahf
data16
fwait
shrl
lret
mov
jp
fwait
mov
sahf
fnstenv
xchg
pop
jb
inc
xchg
fstp
pandn
cli
fmuls
cli
es
pop
enter
jp
add
ret
sbb
fistps
mov
mov
or
inc
clc
sbb
in
mov
shll
popl
mov
and
jp
enter
adc
into
jle
sahf
mov
pop
jecxz
push
imul
inc
inc
jecxz
dec
jb
leave
or
xchg
inc
enter
movb
aas
mov
jmp
jp
or
sub
jp
outsb
jle
sti
push
sub
pop
dec
aaa
fstpl
lret
addr16
sahf
ja
cmp
lods
jg
lock
jp
hlt
fnstenv
loopne
ljmp
lret
shl
push
pop
lods
scas
mov
add
mov
std
loopne
mov
adc
jno
shll
rcrb
mov
dec
push
jno
aaa
loopne
int
test
enter
adc
sbb
ja
lret
out
mov
push
popa
cltd
pop
dec
cltd
jbe
movsl
xchg
sahf
xlat
in
repnz
dec
fsubrs
fisttpl
mov
clc
loope
out
fwait
inc
pop
lods
aad
test
lea
scas
into
std
call
test
stos
fcomps
ds
jnp
mov
dec
push
mov
dec
xchg
lcall
mov
mov
stc
fmuls
cli
and
ret
jecxz
dec
ffreep
movsb
push
mov
inc
mov
jl
lock
mov
sarl
mov
arpl
es
pushf
pop
roll
stc
cmc
cmpsb
hlt
adc
negl
cli
xor
adc
pop
loop
repz
int
lahf
cltd
ds
aad
cmp
enter
or
ret
push
mov
aam
or
movsb
aad
lret
ljmp
or
mov
add
imul
mov
into
dec
imul
iret
in
xor
pextrw
cmp
add
adc
fists
mov
inc
mov
mov
test
in
ficompl
fistpll
movl
sub
xor
push
js
loope
popf
lret
mov
test
xor
xchg
pop
into
clc
xchg
pop
jns
mov
hlt
or
push
dec
mov
mov
xchg
inc
mov
loope
ss
hlt
fistps
ret
repz
cli
ret
js
imull
mov
imul
hlt
jecxz
adc
stc
xor
int
dec
cmc
stos
mov
subl
in
fst
mov
push
dec
outsl
mov
out
xchg
fistl
sub
jne,pn
mov
mov
cmp
cmc
cmpsl
stc
jnp
in
add
loope
dec
rcr
xchg
shr
cmpsl
sub
sbb
fadds
or
mov
lahf
sbb
gs
ror
insb
lret
addl
lcall
push
add
repnz
enter
cwtl
rolb
fldt
jecxz
ret
addb
cli
mov
dec
int3
xchg
bound
cmp
fdivrs
aas
add
or
push
xor
fucomp
fsubr
sbb
int3
pop
movb
fistpll
mov
mov
mov
jg
call
push
stos
ficompl
fistl
xor
je
xchg
sub
rcrl
cli
pop
inc
cmp
in
dec
add
xor
imul
enter
dec
es
mov
push
cld
lds
dec
mov
cli
add
lds
in
cmp
insb
jle
cli
insl
xor
pop
sub
xor
and
sti
shrb
ret
fdivrp
sub
mov
aas
jnp
loopne
enter
cmp
or
xlat
cmp
dec
pop
loop
sub
or
ds
lea
jmp
mov
mov
in
scas
add
call
aaa
mov
inc
pop
inc
je
xchg
dec
es
enter
fadd
mov
xchg
ret
loope
out
xor
xchg
sub
dec
push
test
dec
jo
leave
cmp
sbb
adc
fisttps
inc
je
mov
repnz
and
insl
jp
jo
je
insl
lret
pop
xchg
fsubr
ficompl
fisttpl
insb
xchg
or
ds
or
pop
shlb
inc
lret
testb
mov
imul
xor
mov
insl
cli
jl
stc
jmp
mov
push
mov
inc
rep
dec
fnstcw
mov
sub
cltd
cmp
xchg
scas
push
push
out
jnp
inc
or
outsb
and
outsb
stos
push
xchg
mov
aaa
stc
int3
jle
lcall
cmp
loope
push
lret
cmp
int
cvtdq2ps
add
cli
or
test
lcall
pop
dec
lods
enter
rorl
imul
cli
jle
mov
sub
repnz
adc
imulb
cmp
fistpl
leave
xchg
lds
sub
lock
lods
mov
xlat
sub
cmc
ds
cmpsb
push
jp
add
lret
lea
inc
mov
xor
aas
xchg
stos
repnz
roll
cmc
pop
lret
and
dec
pop
cmpsl
sbb
les
pushf
mov
ret
mov
and
push
mov
or
ljmp
pop
push
leave
js
pushf
jp
jae
mov
dec
idiv
sbb
xchg
inc
fnstcw
in
js
xchg
lret
clc
inc
in
out
cmp
dec
leave
xchg
inc
lock
jns
mov
mov
push
sbb
mov
inc
xlat
push
lcall
sub
or
faddp
jle
iret
xchg
fildll
inc
mov
jge
push
mov
ds
das
dec
kandb
les
out
pop
inc
test
in
sarb
mov
ds
mov
xchg
cmp
jbe
cs
lds
ret
into
dec
cmp
ss
adc
jl
ror
icebp
mov
fiadds
test
ficoml
pop
fidivrl
and
push
mov
mov
dec
hlt
btr
add
rclb
adc
xlat
pop
lahf
and
xlat
das
das
sbb
add
push
es
mov
dec
fistps
pushf
pop
pushf
repnz
xor
sbb
dec
outsl
dec
clc
xchg
icebp
repnz
jge
es
sub
lcall
ss
add
pop
xor
cmp
cmc
push
stc
jp
icebp
mov
cs
aam
icebp
lds
xchg
and
push
mov
les
lods
jle
fsubs
adc
push
cli
je
inc
mov
push
pop
xchg
stc
loop
or
std
repnz
in
xchg
xor
mov
xchg
and
xchg
jae
mov
sbb
ret
jl
mov
hlt
out
enter
cli
mov
push
iret
lods
add
idivb
mov
xchg
loope
cli
mov
and
inc
fcomi
adc
cmp
sub
sbbl
ds
mov
movb
loopne
jp
add
pop
cmp
push
rorl
xor
inc
lcall
int3
roll
in
clc
jp
mov
pop
pop
lock
or
jge
mov
jmp
pop
pop
mov
out
adc
jae
pop
clc
push
pop
xor
push
cmc
ss
negb
sbb
iret
xchg
sbb
fiaddl
fimuls
xchg
push
mov
xor
lcall
pushf
ror
arpl
mov
fs
into
repz
fimull
mov
jg
sti
je
pop
pcmpeqw
jp
rcl
pop
lret
adc
sbb
sub
aas
mov
aad
movsl
xchg
dec
xlat
bound
sbbb
xchg
jle
daa
add
rolb
and
sub
in
lahf
adc
xor
adc
jbe
aad
out
push
pop
cmp
adc
icebp
sarl
sub
mov
fisttpll
dec
outsb
or
popf
xchg
push
mov
push
shrb
add
sar
notl
loop
mov
cmpsb
mov
xchg
mov
fldcw
scas
les
sahf
out
jne
aad
popl
sbb
sarb
cmpsb
stc
lds
aaa
stos
mov
mov
dec
jge
adc
sub
cmp
xchg
mov
into
fwait
sahf
movsl
jecxz
xor
mov
test
fwait
lcall
clc
lcall
xchg
insb
mov
scas
into
pop
push
adc
jg
dec
shlb
dec
enter
mov
inc
arpl
mov
stc
cmp
int
fadd
mov
jg
and
mov
and
imul
mov
popa
repnz
daa
or
cmp
dec
cmpl
mov
inc
stos
es
stc
push
inc
mov
sahf
js
and
xor
sub
fidivrs
lcall
mov
stc
inc
sub
mov
rorl
rcrb
stos
add
lcall
subb
outsb
int
les
cmc
loop
dec
inc
mov
in
mov
inc
mov
xchg
fisubrl
out
inc
or
sub
push
cld
cli
pop
dec
jle
cmc
pop
mov
mov
xlat
fdivrs
mov
lahf
stc
mov
mov
jp
cli
xchg
cmpsb
in
out
aad
fadds
rorl
dec
sub
sahf
pushf
or
mov
scas
lds
shlb
mov
push
enter
stos
xchg
xorb
imul
ja
mov
lea
xlat
clc
pop
pop
sub
mov
mov
push
jne
jle
cmp
ret
cwtl
ficompl
and
xchg
dec
pop
jp
test
cmp
lcall
xchg
jecxz
lret
sahf
xchg
divb
aas
sbb
push
add
sahf
stos
or
rcr
fmul
ret
stc
pop
insb
stc
nop
xor
scas
ret
mov
jne
rcrl
cltd
or
sbb
cwtl
aam
push
xor
sahf
es
inc
push
icebp
add
mov
inc
sbb
movsb
insb
jae
cs
loopne
mov
dec
jg
or
aad
or
jp
cli
test
repnz
adc
xorb
inc
js
fists
mov
jmp
dec
aas
push
mov
fidivrl
add
xlat
mov
inc
icebp
fmuls
sti
sub
fcomps
loop
pop
xlat
dec
cmc
cli
fs
shll
lock
repnz
sub
enter
cmc
sub
sahf
jnp
fnstsw
dec
and
xchg
cwtl
push
add
fld
xlat
add
decb
dec
and
mov
add
pop
bound
clc
fadd
enter
xchg
jecxz
fdivr
out
scas
or
pop
into
push
sahf
inc
popa
in
dec
sti
xchg
call
pop
jl
fistpl
icebp
fdivrs
stc
jne
push
into
jne
ds
shrl
call
or
dec
mov
mov
sahf
in
or
pop
mull
dec
sahf
rcl
cs
add
sbb
inc
pop
int
add
fcmovnu
ret
leave
sbbb
xchg
adc
lret
inc
jp
pop
jb
mov
cmp
shll
hlt
rcrb
mov
push
rcr
pop
rclb
jmp
stos
cmp
mov
insl
repnz
rcr
cmpsl
jp
jmp
dec
cld
addr16
jg
jo
mov
or
aad
mov
loopne
pop
leave
mov
ljmp
lcall
popa
daa
fs
pop
aam
fldcw
js
or
mov
imul
push
xchg
or
shrl
fwait
mov
and
or
test
sbb
adc
test
cmpsb
push
push
dec
insb
mov
xchg
inc
loopne
xor
cmpsl
mov
out
mov
daa
ror
add
add
lcall
iret
cvtdq2ps
mov
mov
testb
aas
push
enter
cli
sbb
mov
pop
lret
ret
fists
int3
xlat
ljmp
xchg
in
adc
mov
xor
fcmovb
bnd
push
inc
mov
jnp
mov
lds
pop
xchg
pop
pop
test
xlat
outsb
cwtl
aad
xchg
push
rcr
xlat
add
push
aad
clc
stos
cmp
xor
cmc
rcr
adc
and
imul
fldl
les
pop
xchg
ret
add
pop
sub
add
lret
mov
arpl
les
enter
mov
les
adc
out
in
push
popf
enter
or
rorl
and
push
pop
ds
adc
add
mov
cmp
pop
cli
jl
inc
out
lods
enter
mov
fiaddl
and
add
push
mov
xor
add
pop
jbe
out
enter
sbb
in
pop
ret
jge
cli
jb
xchg
jmp
aaa
ret
jge
imulb
inc
sbb
jmp
adc
daa
enter
fisttpll
test
out
ret
or
test
frstor
jno
bound
aas
je
jnp
pop
jp
add
inc
enter
sub
test
lret
push
leave
lsl
push
add
loope
fcoml
leave
add
call
enter
add
daa
in
ret
test
out
dec
enter
cli
mov
shlb
cmp
fisttpll
sbb
inc
or
stos
or
aas
bound
cmp
outsb
push
mov
jle
cli
and
xchg
sbb
lcall
mov
mov
pop
inc
movsb
xchg
ret
ss
pusha
repz
xchg
lods
mov
in
call
push
add
adc
jns
fldl
rcll
fwait
sbb
aad
cmp
out
fisttpll
jae
mov
call
sub
jo
ljmp
cmc
mov
les
push
mov
sbb
icebp
loopne
mov
cli
out
rcl
or
inc
sub
insl
icebp
mov
aad
sbb
xor
ret
and
cmc
jb
inc
mov
add
shll
xor
das
mov
pop
pop
mull
dec
andb
ljmp
inc
xor
inc
incb
int
lds
test
shl
inc
clc
xlat
xlat
and
mov
xabort
mov
out
xchg
rol
or
cmp
insb
cmp
mov
sahf
pop
cmp
sub
mov
ret
and
jns
mov
sbb
mov
xor
inc
sub
sub
sbb
testb
push
inc
inc
loopne
mov
xchg
ds
adc
imulb
clc
cmp
push
jle
jp
and
add
pop
loop
clc
mov
ds
outsb
sub
push
outsl
test
xchg
jb
inc
sbb
push
mov
sahf
fisubl
jb
clc
add
or
inc
loop
mov
clc
mov
stc
jb
loopne
ss
push
sub
xlat
cld
ljmp
push
in
rorb
cmpl
cmp
rclb
cli
push
inc
js
jno
sbb
pop
rcll
rcrb
lock
pop
loop
callw
das
push
and
xor
clc
ret
pop
jg
into
mov
jle
das
mov
jae
ss
dec
xor
and
inc
push
stc
and
cs
or
imul
mov
stos
into
data16
stc
pop
shlb
or
jp
divb
add
sarb
stos
nop
fimuls
mov
ret
clc
fdivr
pop
lods
mov
iret
icebp
mov
sahf
mov
cmpsb
imul
lahf
test
cmp
arpl
jo
cmp
outsl
dec
fdivrp
daa
jbe
pop
test
lret
ss
iret
xlat
mov
loop
sti
mov
shll
inc
mov
insl
mov
cmc
ss
int
xor
add
xlat
ret
push
and
out
sub
rolb
cmp
fisubrs
xchg
push
sbb
mov
leave
mov
out
push
xor
add
test
push
int
stos
mov
jne
inc
enter
shl
jnp
sub
cli
int
jb
adc
dec
das
dec
cli
mov
sub
scas
cmovns
mov
sbb
cwtl
aas
cwtl
sahf
pop
inc
aas
xor
out
aaa
sti
and
sub
loopne
mov
add
and
lret
cmp
lret
pop
adc
insl
push
cld
or
mov
sbb
sub
lret
stc
jne
jbe
sbb
mov
das
js
ljmp
ljmp
cltd
lcall
lock
ljmp
rol
in
sbb
sbb
pop
test
out
push
sahf
pop
push
insb
xchg
inc
loop
pop
push
clc
das
test
jg
sbb
rcr
add
mov
in
cmpb
or
roll
inc
mov
popf
dec
popf
dec
scas
push
fisubrl
sbb
jg
add
clc
push
dec
scas
mov
push
dec
jg
mov
cmpsl
push
out
jo
inc
and
cmp
mov
xlat
add
push
int3
mov
xchg
mov
add
push
movsb
dec
stos
xor
adc
mul
sbb
fdivrs
loope
cli
loop
push
in
push
dec
ficomps
push
and
add
out
jp
lret
or
cld
enter
lods
fdivrl
ds
cmp
push
inc
pop
leave
inc
idivb
cli
dec
or
cmpsl
enter
sahf
sbb
loop
cmpsl
cmpsb
add
inc
adc
stos
das
call
icebp
sbb
or
sbb
sub
daa
mov
lret
ret
cwtl
xchg
adc
inc
dec
jbe
mov
mov
mov
pop
cld
data16
adc
into
push
dec
rcrl
repnz
iret
adc
jle
sarb
add
mov
aam
mov
dec
imul
pop
out
mov
adc
add
lret
aad
movsl
fisubl
outsb
mov
popa
ss
sub
mov
mov
xor
fildl
pop
das
and
xor
fistpl
icebp
xor
cmp
mov
or
scas
dec
cli
cli
jmp
jae
ss
sahf
loop
inc
jae
jbe
inc
leave
cmpsb
inc
sti
iret
imulb
lea
inc
mov
aaa
js
bound
mov
mov
jnp
subb
jns
fmulp
mov
ret
push
cmp
jns
fwait
jno
or
or
sahf
iret
mov
mov
dec
arpl
shlb
push
in
mov
mov
inc
inc
jg
ret
fdivs
add
dec
ficoml
xor
mov
cmp
jb
pop
inc
sahf
test
mov
mov
cmp
fisubs
cwtl
aas
inc
inc
or
mov
push
mov
clc
aad
ror
ljmp
insb
mov
push
mov
jle
xor
xchg
xlat
ret
std
cmp
push
jmp
dec
shll
dec
mov
sub
or
pop
xchg
mov
lock
mov
jp
adc
push
push
repz
addr16
mov
push
adc
mov
pop
out
or
xlat
inc
fidivrl
outsb
or
cmpsb
cmp
movsl
in
mov
daa
push
rcll
clc
leave
mov
lcall
into
add
js
notl
mov
push
aad
mov
xor
cld
jmp
outsb
movsl
xchg
stc
icebp
push
roll
jmp
xchg
push
cltd
mov
jle
pop
lods
mov
sbbl
jle
sarl
aaa
into
fwait
mov
mov
imul
adc
cld
mov
stos
mov
push
test
mov
sahf
cmpsb
gs
scas
jbe
sub
inc
inc
pop
sub
adc
push
clc
add
mov
mov
push
sar
mov
outsl
adc
mov
imul
lret
dec
pop
adc
mov
mov
scas
shlb
pop
add
addb
inc
sub
dec
rorb
std
dec
jle
lcall
push
inc
std
push
fsts
jle
lcall
cmp
fnstcw
cmp
sub
inc
rolb
std
inc
flds
jle
aas
xchg
push
lods
jae
imul
test
sbb
out
out
pop
aad
not
adc
lret
jecxz
jae
pop
popa
pop
add
and
mov
sbb
add
pusha
cli
add
shlb
sarl
sub
inc
push
idivl
push
fsubs
leave
aas
ret
repnz
setbe
sbb
jecxz
rclb
int3
xlat
movsl
cltd
clc
aaa
mov
ret
data16
test
jle
sub
jns
jo
and
test
adc
insl
push
enter
inc
loopne
inc
dec
mov
pop
mov
push
pop
cmc
pusha
dec
or
mov
mov
mov
cli
adc
pop
shrb
sti
cmp
sbb
ss
push
cs
aam
cmpsb
loopne
xor
ja
idivb
lret
icebp
jmp
adc
mov
xor
ds
je
lds
mov
push
mull
jo
gs
mov
jmp
and
sub
shrb
mov
ror
inc
es
or
mov
dec
roll
popa
sti
gs
cmpsl
pop
mov
dec
js
movsl
mov
movsb
popf
enter
pop
mov
mov
sbb
or
cli
mov
inc
das
sub
lds
xor
mov
je
xor
outsb
adc
mov
call
xchg
cmp
mov
add
mov
out
scas
xor
pop
adc
ss
icebp
imul
in
popa
in
push
movsb
dec
mov
daa
or
xchg
add
sub
cmc
cld
call
mov
ret
mov
mov
ret
mov
mov
push
js
aaa
xchg
mov
mov
push
pop
outsb
into
mov
shrl
rol
sar
jb
ret
sbb
push
mov
out
xorl
mov
push
mov
ss
xchg
repz
in
cwtl
bnd
leave
inc
pushf
inc
into
cmp
ljmp
sahf
cmp
sub
push
push
push
sbb
aaa
and
stos
mov
repnz
gs
dec
pop
fisubrs
in
or
mov
push
jle
imul
sub
inc
mov
xor
sub
sub
inc
sub
jo
pusha
inc
inc
push
ss
sub
pop
jno
mov
aad
mov
je
movsb
iret
ss
ret
das
dec
aas
les
add
movsl
hlt
cmp
adc
movsl
aam
or
repz
addb
mov
lds
mov
out
int3
pop
aaa
mov
pushf
into
cmpsb
ds
mov
les
imul
jp
sbb
negl
mov
sub
mov
enter
fcomps
mov
fsubl
out
in
mov
loope
arpl
xor
fld
cmp
cmpsw
fwait
jmp
data16
push
pop
mov
jns
mov
mov
fldt
cmpsl
movsl
shll
dec
movb
pop
push
add
mov
cmpsl
add
out
sti
jg
mov
test
mov
inc
xchg
sahf
jle
or
add
mov
mov
pop
gs
lea
sub
addr16
mov
loop
lods
push
ficomps
in
mov
add
lret
sbb
pusha
mov
call
pop
mov
sbb
scas
dec
sub
mov
fdivrp
in
inc
push
jo
xor
mov
ja
push
clc
stos
lea
push
sub
push
adc
lds
sub
jp
sbb
mov
icebp
loopne
jg
push
mov
adc
ret
push
xchg
stos
mov
test
sub
lods
xchg
loopne
xchg
rorb
pop
sbbl
repnz
idivb
fld
cmp
jno
dec
mov
nop
cmp
arpl
divl
jbe
ljmp
mov
jns
int
or
shll
or
mov
test
dec
add
jle
movsb
ds
pusha
pop
ja
or
push
addr16
fisttpl
dec
sub
mov
lods
sar
stos
ret
loopne
or
fidivs
and
add
mov
xlat
out
adc
js
mov
mov
push
jp
mov
pushf
testb
aas
sarl
addr16
fnsave
mov
sahf
sub
inc
cmpsb
lods
jnp
pop
push
pop
not
adc
mov
dec
mov
out
int3
pop
pop
pop
push
stos
cmpsb
mov
sub
push
jle
daa
sti
mov
sahf
in
test
stc
sbb
xor
outsb
pusha
cwtl
mov
push
push
ret
int3
or
rorb
insb
push
ss
mov
xchg
mov
lcall
sahf
cmc
or
or
enter
cmpsl
ret
dec
jp
xchg
sti
add
cmpsl
shlb
inc
outsl
xor
mov
das
xorl
loope
sub
repz
push
cli
jmp
jmp
sahf
and
cmp
iret
into
loop
dec
mov
aam
lods
jmp
or
imul
in
es
cmp
aaa
cwtl
std
mov
insl
sub
sub
fdiv
in
cltd
add
push
sub
aam
push
mov
mov
stos
mov
sbb
stos
mov
shll
push
mov
out
lret
add
cmp
dec
shld
cwtl
or
sbbb
xchg
pop
or
jbe
movsb
idivb
lahf
cmpsl
repnz
fldenv
add
ret
shlb
adc
movsl
repz
jbe
adc
cmp
lcall
in
out
lock
adc
scas
sub
mov
stc
repz
add
ljmp
int3
mov
loopne
mov
leave
js
enter
adc
mov
mov
push
andl
xlat
pop
dec
lea
lds
jmp
mov
aas
add
and
lahf
cmp
aaa
rcll
adc
sbb
dec
mov
xchg
lock
sarl
cmp
cli
inc
dec
mov
mov
or
adc
lds
push
dec
lds
ret
into
iret
mulb
jecxz
mov
aas
cmp
jge
mov
pop
out
lahf
xchg
das
arpl
pop
sbb
lret
cli
jle
lds
pop
push
mov
push
int3
sbb
loope
repnz
or
rcrl
dec
dec
loopne
xor
bound
mov
lcall
lret
inc
pop
mov
mov
mov
dec
cs
fsubp
and
lahf
pop
clc
mov
and
ds
inc
push
xor
int
xorl
pop
lds
je
mov
xchg
jl
movsb
sub
fisttpl
mov
cli
in
mov
into
sub
xchg
adc
ror
leave
sub
pop
add
jp
mov
in
jne
scas
mov
mov
push
std
cld
pushf
leave
lods
mov
scas
repz
fmulp
adc
adc
enter
and
pop
fwait
rorl
int3
xor
adc
add
mov
aad
push
jae
xchg
pop
xchg
movsl
mov
jb
loope
cwtl
outsl
pop
pushf
imul
inc
fistpl
xchg
pushf
in
out
jb
mov
leave
pop
sbb
out
out
es
cld
outsb
push
jmp
sbb
add
das
les
stc
xchg
sbb
sub
scas
inc
inc
mov
inc
fbstp
adc
fdivrs
out
mov
cli
or
mov
push
nop
loop
out
sbb
cmp
or
mov
add
imul
lret
mov
add
add
jg
adc
es
popa
outsb
mov
mov
ds
insl
inc
mov
jmp
adc
iret
lock
xlat
scas
mov
mov
in
or
aad
and
push
ret
sub
vandps
cmp
sbb
sbb
and
adc
xor
or
mulb
mov
jne
repnz
sbb
lods
ret
sbb
fwait
stc
and
mov
pop
inc
jg
rolb
rcl
pusha
dec
sub
mov
das
sub
lock
and
outsb
or
mov
sub
xchg
mov
popf
sti
sub
stos
ret
mov
sub
push
pop
cmp
push
repz
sub
cli
mov
push
adc
daa
clc
adc
mov
std
push
pop
mov
sub
or
fs
ret
insl
xchg
andb
adc
mov
or
push
push
inc
push
scas
daa
in
lret
push
fld
sub
push
sub
loop
sti
cmp
mov
stos
mov
add
or
rcrl
dec
cmpsb
push
cld
inc
fwait
roll
and
mov
testb
fldt
pushf
jae
inc
sub
pop
sub
inc
orb
stc
andb
rolb
push
stos
xlat
fisubrl
dec
cmp
mov
cmp
jle
sub
and
sbb
adc
push
movsb
loope
lea
scas
or
ret
adc
test
cwtl
lods
xchg
incl
xchg
add
notb
push
jle
dec
jne
lret
dec
cs
sbb
loop
out
mov
and
sub
ficompl
bound
outsl
rorl
push
lods
cli
push
ret
out
pop
bound
std
bound
dec
iret
jl
mov
push
mov
push
inc
mov
mov
in
mov
dec
sbb
lret
cmp
inc
pop
stc
push
rcrb
leave
sub
cmp
outsb
add
mov
or
les
pop
sar
sbbb
mov
leave
cmpsl
xlat
das
les
push
aad
jecxz
ret
mov
mov
ljmp
cli
cmp
push
js
jno
loop
in
int3
xchg
mov
nop
sbb
pop
nop
fistps
movsl
jle
lret
sahf
push
aas
mov
rclb
mov
or
sbb
xchg
sbb
sub
push
pop
dec
shlb
nop
jmp
xor
push
sarb
xchg
es
dec
mov
into
mov
rcrb
sub
pop
stos
dec
sahf
mov
pop
mov
adc
cli
pop
gs
addr16
das
es
mov
pusha
mov
add
stc
fisubs
push
mov
sbb
dec
ficoms
mov
mov
lret
or
addb
mov
add
lret
inc
sarl
and
fidivl
fiadds
xor
xchg
enter
xor
repnz
imul
fimull
out
cmp
ret
cmp
out
cmp
inc
test
push
dec
pop
out
out
push
and
lcall
jb
iret
cmp
outsl
jns
pop
sarb
ss
outsl
push
mov
push
xchg
sti
mov
loop
mov
xor
int
xor
loop
adc
sbb
xchg
jno
jle
mov
incb
xor
es
inc
mov
es
inc
mov
sbb
mov
adcb
fidivrl
xor
jbe
mov
fildl
idivb
pushl
mov
test
push
push
test
mov
insb
cmp
xor
jp
lods
cli
lcall
ja
ret
js
hlt
xor
push
ljmp
scas
divb
into
add
addr16
jp
shrb
push
lds
repz
mov
test
in
cld
jle
into
rcr
rcrb
and
pop
pop
sbb
rol
push
mov
mov
cli
scas
and
xor
aas
fimull
pop
inc
imul
inc
cli
xor
cs
cmpb
lret
iret
adc
mov
inc
js
add
lods
ss
ret
sbb
mov
mov
mov
fadds
cli
push
sbb
xchg
enter
dec
movsb
jge
stos
aaa
xchg
lret
in
xor
jb
orl
mov
lods
cli
jbe
cmp
scas
jp
cwtl
jnp
xchg
mov
lret
aad
fbld
pop
or
inc
leave
sbb
xor
lret
sbb
cmpb
xorl
fiaddl
mov
pop
fdivrs
dec
push
xchg
pop
cmp
xor
and
pop
mov
or
ret
repnz
add
and
or
mov
inc
mov
das
sarb
inc
dec
mov
jae
add
mov
mov
pop
lcall
pop
cltd
xchg
sub
rorb
pushf
mov
lahf
push
cmp
push
adc
mov
xchg
ds
or
and
fiaddl
push
pop
imul
cmp
psubq
and
mov
sbb
xor
insb
pushw
add
ss
inc
and
iret
mov
inc
xlat
cmpsb
mov
cmp
cld
pop
repnz
imul
gs
xchg
data16
mov
mov
mov
iret
imul
mov
fdiv
xor
and
mov
mov
mov
scas
jge
popf
lods
popf
stos
popf
stos
lods
test
cmpsl
mov
mov
xorb
sahf
inc
cmp
and
ret
sarb
jle
xchg
fdivs
sbb
jle
rolb
mov
leave
ret
mov
inc
mov
cmp
add
xchg
lret
fbstp
mov
push
bound
dec
cmc
xchg
call
add
ss
xchg
fsubrs
lcall
or
testl
or
ss
cmp
inc
cvtpi2ps
xor
add
adc
pop
shlb
pop
inc
sbb
dec
mov
mov
shll
ret
mov
push
lret
cmp
push
mov
cmp
push
pop
lcall
dec
push
add
es
ret
das
mov
lret
push
adc
sbb
add
xchg
mov
addl
jo
jmp
sbb
inc
ficomps
xchg
push
cmp
out
add
cmpsb
pop
mov
sub
aad
idiv
mov
mov
sub
and
ds
add
in
mov
rorb
sub
idivb
in
push
mov
mov
inc
insl
shl
es
out
push
mov
in
mov
jne
add
leave
leave
cmp
mov
mov
leave
mov
mov
add
push
mov
adc
jo
cmp
das
enter
je
cld
shrb
lret
fmuls
mov
inc
xlat
jmp
sar
ret
es
ja
jl
nop
jb
and
mov
stos
das
pop
hlt
outsb
xlat
pop
jae
ss
ds
or
mov
jo
imul
xor
cli
xchg
add
std
lds
sub
imul
je
in
hlt
je
aas
mov
or
mov
adc
out
sub
dec
xor
cltd
mov
or
das
push
mov
xlat
sti
clc
mov
sahf
push
or
std
fcomp
je
lcall
cwtl
call
inc
iret
lods
mov
sub
inc
jmp
sbb
jmp
and
mov
stos
mov
std
jbe
push
mov
stc
testb
incb
jno
sarl
adc
shll
lods
push
jp
add
jno
jb
sahf
inc
div
aaa
xchg
mov
pop
mov
xorb
ljmp
lahf
pop
stos
ret
or
push
dec
sahf
clc
sub
push
sub
inc
add
pushl
cmp
cmpb
dec
jae
cmp
pop
fadd
loope
stos
movsl
inc
cmp
xlat
in
loope
push
pop
and
pop
sbb
mov
dec
sub
cwtl
mov
jae
xor
lcall
ss
mov
push
fwait
mov
mov
adc
fisttpl
xor
loopne
cmp
mov
lret
mov
cmp
add
fstl
jmp
shlb
cli
cmp
jmp
adc
or
mov
aad
aaa
or
cmp
push
or
repz
icebp
mov
into
push
jg
out
outsl
aas
xchg
int3
rcrb
mov
out
lds
sbbb
jns
lahf
dec
mov
aaa
imul
xor
pop
jo
nop
pusha
mov
jne
pop
insl
shl
mov
jge
mov
cmp
mov
clc
repz
lods
mull
and
test
leave
cld
mov
orb
jo
or
rol
sahf
pop
and
enter
je
inc
cmpb
aam
js
int3
inc
push
ficompl
sub
in
jp
or
add
mov
push
dec
fimull
mov
jmp
sahf
jecxz
ds
leave
fstpt
sti
fimull
enter
xchg
jp
clc
mov
std
push
rclb
sbb
mov
fimuls
mov
cs
enter
cmpsl
les
mov
imul
enter
leave
inc
cmp
inc
aad
pop
hlt
js
inc
jl
dec
sub
std
mov
push
out
fistl
adc
scas
inc
leave
scas
add
mov
ljmp
jp
loope
mov
fildll
cmp
push
adc
sbb
jne
mov
imul
idiv
stos
call
xor
dec
or
iret
loope
push
push
ret
icebp
adc
jp
jle,pt
add
retw
mov
adc
fsubrl
icebp
shrb
xor
jecxz
mov
rcrl
push
sub
lcall
jo
inc
cmp
in
push
negl
decb
cmp
mov
fwait
shlb
jle
and
add
mov
sar
popf
push
outsb
mov
cmp
inc
aad
xchg
rol
ret
in
iret
scas
xor
cmp
cmp
scas
incb
testb
cmp
sub
idiv
jmp
ret
cmp
xor
dec
stc
sub
cs
xlat
push
imul
pushl
pop
fmull
int3
add
lea
mov
add
mov
push
jp
rolb
pop
xchg
inc
inc
pop
jo
loopne
aam
lahf
lods
inc
mov
rcrl
ds
js
rcr
mov
scas
ja
ret
sub
or
push
jns
xchg
xor
push
les
xor
lret
lret
call
inc
into
jo
inc
xor
mov
add
xor
cmp
pusha
cltd
cmp
in
sar
dec
or
jecxz
daa
xchg
pop
imul
pop
pop
pop
lea
xor
sub
inc
int3
inc
loope
addr16
mov
lods
ljmp
fildll
jmp
mov
mov
mov
mov
cli
outsl
dec
jo
popf
mov
mov
fnstsw
mov
add
push
add
movsb
jmp
inc
cld
inc
notb
inc
stc
mov
inc
or
sub
add
in
outsl
imulb
or
xlat
out
jbe
jge
ljmp
outsb
repnz
or
mov
fistps
and
jnp
mov
mov
testb
test
mov
jecxz
rcrb
sub
mov
jle
or
test
ret
dec
fisubs
mov
cmc
icebp
add
dec
sub
xchg
mov
shrl
cmc
sub
dec
jp
dec
fisubs
clc
mov
cwtl
insl
dec
popa
scas
into
es
cld
mov
cmp
pop
jnp
mov
add
ret
xlat
add
sub
mov
lea
ds
dec
shl
pop
mov
dec
cmp
cmp
scas
insb
mov
mov
gs
mov
xor
pop
test
cmp
lods
jle
psraw
push
cmp
mov
mov
adcb
movb
mov
ljmp
clc
jae
fdivr
mov
mov
in
push
test
sub
or
cmpsb
ds
div
and
out
xchg
mov
int3
gs
adc
cltd
inc
mov
sti
sbb
jae
addr16
mov
fisubs
xlat
mov
dec
mov
sub
mov
shlb
push
add
pop
lods
nop
xor
pop
sub
imul
mov
mov
jb
scas
mov
lods
xor
fildl
rol
or
ret
mov
push
sbb
shlb
xchg
jbe
leave
addr16
jp
shlb
adc
les
or
mov
shl
pushf
jecxz
movsl
adc
or
jle
sub
and
mov
push
pop
lret
test
enter
jle
ret
cs
pop
ficoms
cmp
lods
out
aad
loope
lret
push
ficoml
cld
jp
in
aas
mov
mov
jo
mov
mov
dec
clc
push
sub
pop
out
frstor
xor
sub
adc
jg
mov
inc
and
sbb
lret
hlt
push
sub
in
popf
fiaddl
add
or
xor
jns
lea
cmp
dec
fiadds
int3
cld
ljmp
imul
add
ficompl
fcmovne
dec
jnp
pop
inc
adc
adc
gs
xlat
mov
ret
jecxz
movsb
imul
and
inc
mov
psubusw
movl
call
outsb
jg
sbb
clc
lret
adc
fbstp
ret
in
out
sahf
call
ss
jle
dec
dec
cltd
mov
mov
xlat
data16
icebp
call
xorb
sub
push
out
push
adc
call
ret
outsb
mov
mov
shlb
jmp
cmp
ret
mov
add
sbb
ffree
and
jle
mov
or
fs
clc
fidivl
mov
xchg
test
loop
dec
xlat
xchg
inc
loop
push
push
call
sbb
outsl
mov
push
mov
and
dec
and
bound
mov
push
rcrb
mov
lret
and
imul
push
fistps
int
push
jmp
dec
and
cmpsl
jge
fwait
lods
jmp
fiaddl
pop
ret
inc
mov
mov
dec
bswap
inc
hlt
cmovge
push
mov
sub
bound
mov
sahf
arpl
dec
mov
and
sbb
add
repnz
xlat
cmp
insl
mov
push
or
cld
outsb
jg
mov
dec
int3
loopne
lock
pop
fcomp
sub
test
fsubrl
mov
add
xor
loope
mov
adc
les
dec
sub
pop
pop
icebp
sti
mov
test
nop
mov
push
push
aas
sub
popa
add
inc
fisubrs
into
gs
lahf
fmull
fisttpl
adc
inc
ficoml
popa
xorb
test
aad
sbb
loope,pn
push
fdivrl
gs
inc
in
pop
sub
jle
popf
pop
push
xchg
aas
mov
dec
or
roll
or
push
movsl
ss
mov
cmc
xor
cmp
xchg
ja
scas
mov
mov
nop
cwtl
mov
mov
ret
sbb
dec
mov
mov
push
mov
test
xor
push
inc
push
xor
mov
shll
inc
cwtl
or
aas
mov
ljmp
dec
push
push
mov
xor
push
xchg
into
nop
int
dec
sub
loop
icebp
mov
xlat
push
outsl
cmp
fadds
mov
inc
fadd
push
movl
outsb
inc
push
pop
push
aaa
jae
mov
out
mov
je
push
shll
push
sub
repz
std
sub
jg
xorb
dec
out
cmpsb
xor
shlb
mov
loope
jle
sarb
dec
sahf
push
push
push
int
int
out
add
les
testb
xchg
mov
jbe
out
cmp
mov
sub
dec
mov
sbb
jbe
loope
cld
inc
lcall
adc
pop
mov
or
add
sbb
push
sub
ja
sahf
push
pop
arpl
daa
xor
andnps
mov
jmp
mov
lcall
jecxz
ret
sub
cld
push
ss
mov
loopne
inc
and
lcall
mov
mov
sub
mov
sub
aam
arpl
jno
push
daa
push
mov
sbb
cmpsb
shl
push
int3
or
fs
lea
addl
inc
inc
int
push
lcall
aam
push
xlat
les
mov
xchg
lds
fcmovbe
pop
ja
adc
mov
pop
sbb
push
cmpsb
ret
cs
adc
divl
sub
mov
out
mov
add
xchg
mov
add
sub
mov
inc
push
sbb
inc
jns
aas
cs
aam
push
sar
fnstenv
aad
scas
mov
movsb
dec
lahf
stc
aam
test
leave
movsl
sub
scas
stc
mov
mov
mov
lcall
mov
fsubl
jb
testb
jle
mov
or
mov
sbb
ljmp
das
mov
push
hlt
mov
jge
enter
pop
popa
jns
imul
inc
sarl
clc
mov
leave
movups
mov
push
mov
and
xor
add
lahf
cld
lods
pop
addl
cmc
data16
jo
lret
aad
sub
lds
sub
xchg
aam
dec
mov
jns
push
xor
enter
mov
sub
mov
mov
mov
pop
jno
int3
loopne
push
cmp
xchg
inc
jecxz
dec
neg
lahf
jmp
push
pop
add
push
rclb
loop
xor
mov
ljmp
cld
mov
imul
adc
es
push
jle
cmp
pop
scas
mov
lea
push
sub
xchg
inc
ds
in
cmp
pusha
sbb
jg
imul
and
mov
cmp
loopne
inc
push
push
cmpsl
or
jecxz
pop
test
push
clc
push
clc
ret
call
mov
sbb
pop
fwait
mov
sti
fistps
add
jb
aas
int3
mov
push
in
xor
pop
jno
ret
pop
stos
push
adc
rolb
sbb
outsl
dec
jnp
pop
loop
mov
pop
jno
aad
pop
xchg
in
pop
cmp
jno
or
adc
sub
xor
add
leave
mov
pop
sub
mov
mov
add
lds
jecxz
sahf
or
cmp
xor
sub
cmp
mov
rclb
dec
jns
adc
pop
mov
jne
inc
push
dec
imul
xor
push
mov
inc
fsubrs
test
pop
mov
dec
push
sub
xchg
insb
inc
dec
xor
xchg
repz
mov
xchg
fdivrs
nop
jno
adc
gs
jmp
popa
sub
popf
mov
inc
mov
mov
and
pop
and
adc
jle
ja
cmpsb
fadd
in
out
adc
pop
mov
ja
fidivl
cmp
das
in
pop
adc
sub
aam
int3
scas
pop
xor
aad
mov
mul
shr
or
loope
das
out
jle
adc
iret
repnz
add
sub
jmp
pop
jne
loop
xchg
jle
pop
mov
xchg
jne
into
incl
add
push
lods
leave
lret
lahf
jne
sahf
push
inc
fcmovb
test
dec
loopne
mov
cli
cmpsb
test
xchg
iret
scas
ds
mov
pop
stc
ret
mov
je
or
mov
cld
les
lods
cmpsl
add
xchg
testb
loope
test
xlat
loope
test
add
mov
testl
inc
stc
mov
or
pop
mov
imul
sub
mov
scas
sahf
or
sahf
icebp
mov
fcmovne
ljmp
cmpsl
sbb
inc
testb
mov
push
push
add
mov
sahf
cmp
movsl
push
xchg
push
outsb
jecxz
iret
cmpsl
sbb
or
xor
int3
inc
shll
mov
adc
outsl
add
pop
stc
es
pop
dec
das
jb
xor
icebp
repz
out
sub
cmc
ds
jecxz
icebp
cmc
mov
push
pop
or
mov
mov
adc
es
clc
notl
in
fs
cltd
in
xor
fwait
xchg
scas
mov
std
pop
mov
ret
xor
xorl
inc
push
xchg
mov
cmp
pop
pusha
xchg
sbb
jb
pushf
mov
mov
inc
mov
sahf
jl
xchg
jb
cs
aam
dec
and
stos
decl
push
pop
int3
pop
mov
test
aaa
stos
rcr
jl
addl
ds
jl
pop
pop
pop
cmpsb
sahf
pop
pop
clc
mov
loop
scas
sbb
test
or
push
cmp
pop
arpl
pop
jg
call
mov
jge
or
repnz
sbb
scas
jae
jb
cli
cmp
mov
dec
cmpsb
movsl
inc
xor
pusha
add
call
adc
adc
add
scas
repz
inc
inc
fldt
insb
mov
ret
pushf
jno
xchg
jo
xchg
and
js
xchg
ficoml
jg
rolb
scas
repnz
enter
in
or
adc
push
ds
stos
popa
arpl
pop
push
stos
xchg
mov
ja
iret
cmp
shrl
cli
lods
cmp
pushl
pop
int3
loope
inc
pusha
mov
stos
and
xchg
test
jne
icebp
dec
push
negb
pop
mov
or
js
popa
int3
add
sahf
loop
ja
into
stos
cmp
mov
push
mov
loopne
pop
push
ret
inc
scas
aaa
xchg
and
leave
popa
fiadds
rcll
or
movsb
lock
rolb
cwtl
inc
sbb
stos
inc
or
adc
xchg
in
add
lods
fisttpll
iret
pushf
outsb
xor
pusha
sbb
ljmp
and
clc
stc
clc
jle
lds
stos
imul
sub
and
mov
jne
clc
ljmp
cmpb
mov
or
icebp
leave
sahf
sub
cmp
loop
popa
fs
inc
push
into
mov
add
insl
lret
and
add
enter
mov
sahf
pop
enter
push
int3
dec
sbb
and
sbbb
out
lahf
dec
jae
add
add
jmp
cs
scas
enter
push
enter
ss
mov
test
das
pop
push
push
popa
sbb
inc
das
adc
cmp
xlat
mov
arpl
mov
pop
mov
insl
repz
inc
mov
push
icebp
test
xor
clc
xchg
hlt
pushl
add
dec
dec
cltd
data16
cmp
pop
cmp
aam
dec
lret
mov
sahf
and
subl
sbb
dec
test
mov
inc
imul
cmpl
jno
rep
cmpsl
mov
loope
jo
pop
int3
cmpb
leave
jns
aam
pop
fists
fistpll
gs
or
in
scas
cmp
clc
pop
fucomip
fninit
xor
dec
push
push
mov
jo
addr16
sarb
hlt
gs
xlat
or
xchg
push
or
mov
dec
gs
cmc
in
sub
loop
xchg
cmpsl
ret
push
fcoml
stos
pop
cmp
push
mov
pop
sahf
negb
adc
sub
icebp
out
push
inc
je
into
add
mov
mov
dec
mov
add
mov
push
fsubl
inc
stc
and
scas
push
mov
ds
dec
dec
test
inc
xchg
imul
cmp
out
cmp
add
xchg
dec
and
sub
jmp
or
stos
sub
rcr
cmp
mov
jge
loope
push
jae
cld
pop
add
ss
ss
ret
sub
jns
js
das
pop
repz
test
push
push
pop
push
popf
lds
pushf
adc
mov
fmuls
shrb
lods
shll
popf
xchg
shlb
mov
ja
pop
and
or
inc
scas
mov
mov
fcmovbe
and
push
gs
mov
sbb
inc
imul
dec
in
xlat
jb
call
outsl
mov
and
sbb
call
sbb
cmpsl
dec
xor
jb
ljmp
pop
fcomps
jge
fisttpl
and
or
cli
pop
jp
stos
cli
test
pop
push
dec
orl
lds
mov
stc
mov
jo
pop
mov
cmp
xor
add
sbb
mov
or
cmp
push
lret
sub
ret
int3
loopne
push
std
loop
dec
mov
pop
add
pop
mov
das
out
aad
jns
jle
and
js
repz
stc
ret
xchg
scas
cltd
lock
add
cld
idivl
ds
mov
sar
dec
mov
mov
aaa
ljmp
test
dec
sahf
dec
into
ja
push
xor
nop
mov
shlb
or
sbb
outsl
idivb
sub
dec
popa
jg
add
push
and
insb
xchg
pop
ss
out
jmp
in
loopne
in
inc
insb
rorb
fcmovnb
fcom
or
lods
pop
mov
in
clc
mov
push
mov
xor
mov
push
cltd
push
sbb
jbe
dec
sbb
hlt
ret
loopne
clc
leave
mov
xchg
stc
loop
or
sarb
call
sarb
not
jmp
cmp
or
mov
movsb
push
call
mov
push
insl
int3
out
rolb
or
inc
mov
icebp
jge
bound
mov
ret
cli
add
das
xor
and
adc
and
cmp
out
fadds
add
rcr
adc
cli
jmp
idivb
fildl
rorb
lds
push
in
pop
adc
or
xorl
stc
pushf
sar
aas
ret
icebp
sub
adc
mov
loop
leave
lret
pushl
xchg
or
ret
sti
cmp
mov
inc
sub
jmp
leave
sub
add
xlat
lods
pop
fs
xor
xchg
cli
dec
test
rol
jmp
adc
cmpsl
cmp
jl
out
shlb
mov
jo
repz
bound
inc
out
lods
pop
sub
push
adc
orb
jl
ja
mov
mov
ret
dec
push
mov
leave
outsb
inc
icebp
or
xchg
push
mov
pushf
ds
lahf
fildll
pushf
or
mov
dec
out
mov
bound
rolb
popa
push
mulb
mov
jns
xor
imul
add
pop
adc
or
pushf
imul
out
mov
push
inc
enter
inc
or
aas
call
push
mov
das
cmp
sbbb
jmp
popf
jb
adc
fisttpl
mov
push
push
push
add
push
push
add
movsl
insl
push
xchg
jp
mov
inc
mov
aas
xor
xchg
mov
enter
mov
sub
xchg
imul
xor
add
mov
xor
xor
push
ret
sub
mov
arpl
lahf
mov
add
xor
shrb
mov
xor
stos
mov
sub
cwtl
mov
into
pop
adc
adc
mov
sub
jne
or
fs
dec
xor
and
fdiv
mov
cmpsl
pop
jecxz
hlt
fimuls
ret
lret
daa
inc
ljmp
mov
out
test
ficoms
mov
xor
sub
jb
dec
jp
push
imul
cmp
mov
sbb
push
repnz
inc
xlat
cmp
mov
loope
fcomps
mov
call
scas
mov
push
adc
iret
sbb
and
push
add
and
dec
or
call
sub
inc
mov
pop
pop
mov
loope
out
sbb
jb
sbb
push
mov
cmp
inc
jecxz
aaa
mov
outsb
inc
ret
rcr
xor
int
ret
jb
and
aad
les
nop
lea
inc
xchg
ja
sub
jp
popf
or
sbb
cmp
data16
sub
aaa
mov
fwait
dec
or
ret
fistpl
adc
imul
into
pusha
fwait
adc
push
add
lods
push
push
cmp
adc
or
inc
sub
sbb
aas
adc
mov
add
push
ret
decl
xor
push
or
inc
into
xchg
aam
add
stos
rol
mov
in
pushf
enter
aas
shl
mov
insl
filds
dec
jne
addr16
es
dec
andl
fstps
imul
mov
push
mov
adc
out
inc
movb
into
inc
xlat
sbb
cvtdq2ps
ds
cs
cmp
sub
cmp
ret
fmuls
fistpl
mov
or
popa
test
cmpsb
out
sub
fnstsw
and
pop
ljmp
dec
xor
das
loopne
cmp
mov
icebp
push
std
cmp
or
sbb
mov
or
xorl
jns
jns
fucomip
adc
and
xor
sbb
in
inc
inc
jae
fldenv
sahf
aas
scas
daa
das
lock
dec
inc
adc
clc
subb
sbb
sahf
aaa
aas
scas
and
pop
sub
rcrl
scas
inc
cmpsl
test
push
cmp
inc
or
or
aas
cmpsl
and
and
adc
add
xchg
sub
mov
mov
push
popa
cltd
add
xchg
add
add
inc
lods
dec
adc
sbb
jae
outsl
pop
inc
aad
mov
jno
sbb
adcl
fs
and
cmp
lahf
jle
lret
cltd
ss
xchg
xor
sahf
aaa
lcall
push
pop
sub
add
mov
sub
or
jp
ror
out
jbe
outsl
dec
push
es
insb
jg
jle
lods
sti
inc
and
arpl
mov
inc
add
cmc
loopne
xor
xchg
fmull
lcall
fmuls
pop
int3
sub
mov
pop
jecxz
sbb
adc
flds
and
in
loope
stos
rcl
push
xchg
ficoml
sub
sarb
pushf
xor
cmpb
sti
xchg
jo
das
pop
mov
mov
and
cmp
jo
fwait
notb
jecxz
cmp
add
ja
mov
int3
pop
xlat
xchg
cmp
or
cmp
push
cmpsb
pop
adc
xor
cmp
pop
jg
clc
lds
mov
ss
test
mov
add
mov
lods
daa
es
mov
ret
movsb
jl
xchg
ss
mov
mov
sbb
mov
shll
adc
cmpsl
dec
mov
sahf
repz
lods
shlb
xchg
add
mov
popf
dec
mov
mov
in
dec
cwtl
jl
lret
aam
mov
mov
or
repz
mov
lcall
mov
jp
ja
and
icebp
xlat
xor
fdivrs
enter
imul
xchg
jp
gs
adc
pop
test
or
cmp
jnp
fists
ret
sbb
sbb
cmp
arpl
fs
stc
leave
mov
lock
pushf
xchg
aaa
js
mov
sub
cwtl
and
push
test
out
mov
and
add
enter
lret
mov
sub
mov
mov
jp
test
dec
call
cmp
stos
sub
and
add
lods
loop
cmpsl
pop
mov
icebp
out
insb
jp
ljmp
xor
icebp
xor
push
mov
jecxz
cmpsl
or
lret
lcall
enter
fistps
ljmp
pop
ss
push
mov
fwait
dec
sarl
divb
adc
clc
cmp
mov
mov
jp
clc
jns
pop
ss
repz
test
mov
les
bound
push
vpmacsdql
pop
rorb
xor
push
gs
xorb
loop
sbb
stos
jns
mov
out
test
cmp
cmp
cmp
xchg
lret
mov
mov
push
fisubrl
test
stc
ffreep
jmp
push
lret
out
cs
xor
lret
add
stos
add
ljmp
add
xchg
shl
xlat
cmpsb
xor
pop
cmp
lret
push
sub
add
jb
bound
inc
mov
add
and
dec
std
shrb
cmp
adc
mov
pop
repz
ficoms
ds
aaa
and
jnp
jge
hlt
adc
das
push
xor
push
jl
and
fadd
or
lock
add
lods
lret
dec
ficompl
adc
lods
clc
sahf
ficompl
inc
pushf
repnz
pop
aas
add
sti
add
inc
repnz
subl
lahf
pop
lret
mov
pop
jns
cmp
fcoml
jns
pop
sub
jnp
leave
cmpl
test
shll
inc
std
insb
lret
test
ror
mov
cmpsb
loope
gs
pop
sbb
adc
dec
dec
les
jo
push
fnstcw
js
pop
shll
sub
and
inc
cmp
sbb
jbe
push
rcr
int
pop
sub
pop
adc
lods
shrb
int3
mov
dec
mov
into
je
stc
popf
mov
loopne
cltd
mov
stos
cmp
stos
inc
push
cmpsl
jo
jecxz
and
and
mov
lods
pop
jp
mov
mov
loope
stos
rcrl
mov
lods
dec
rorb
in
nop
leave
jo
stos
dec
sbbb
xchg
and
lods
mov
inc
in
adc
jle
jecxz
mov
or
xor
jp
inc
fdiv
shrb
and
push
xor
sub
mov
les
push
cmp
sbb
fdivr
inc
lret
xor
fdivrs
xchg
jns
out
inc
sbb
outsb
stc
mov
std
inc
xor
fidivrs
sti
dec
andl
adc
sbb
or
xchg
jns
sahf
iret
mov
push
frstor
xchg
or
inc
jecxz
mov
mov
data16
jg
and
cli
loope
shll
lods
xor
sahf
cmp
mov
add
mov
jl
lds
shrb
pop
pop
lret
in
mov
lods
not
mov
lret
sahf
lahf
enter
popf
out
sbb
mov
mov
inc
inc
and
test
dec
loopne
rcl
arpl
icebp
mov
es
mov
jg
jb
xchg
das
cmp
fsubp
mov
xlat
sahf
aas
enter
dec
lret
lahf
divl
push
mov
shlb
outsb
or
inc
or
rcrl
inc
or
mov
pop
hlt
rcll
push
jecxz
xorb
sbb
data16
scas
stos
mov
push
pop
cmp
mov
fdivrs
cltd
push
inc
adc
cli
or
jbe
cmpsb
icebp
jle
mov
inc
sub
jae
lods
push
ds
inc
rol
test
cmp
add
out
jb
fbld
ljmp
jbe
pop
fildll
and
shlb
push
and
rcl
xchg
push
inc
xlat
mov
inc
icebp
pop
int3
xlat
sub
bound
xchg
data16
jbe
div
sub
pop
pop
bound
jle
adc
xorl
clc
xor
out
insl
xchg
cmc
dec
pop
dec
fidivrl
cmp
push
arpl
and
lret
sbb
mov
dec
cmpsl
xchg
test
cmp
scas
pop
popf
sbb
jge
jecxz
mov
mov
xor
jp
ja
rorl
or
sub
jp
cmp
cmpsb
es
mov
lret
movb
sahf
xchg
xchg
sbb
mov
pop
mov
pusha
fwait
inc
or
rcl
clc
pop
repnz
jo
cld
dec
int3
gs
leave
inc
jmp
cmp
shrb
add
cmpsl
mov
enter
sarb
add
or
cs
pusha
sub
lods
ds
orl
mov
add
pushf
or
scas
mov
add
rorl
hlt
sub
dec
xchg
add
stc
sub
xchg
sub
cmp
mov
xchg
ds
xor
adc
clc
sub
ffree
fisubl
dec
adc
insl
cmp
sbb
dec
adc
mov
pop
daa
adc
dec
js
xchg
add
jp
xor
mov
loope
adc
ss
dec
pusha
leave
lods
jp
out
imul
inc
adc
and
inc
fstpt
mov
mov
xor
lret
fcomip
shll
adc
xorl
loop
or
cld
dec
dec
adc
loop
xlat
sub
or
mov
cmp
jle
div
movb
in
imul
stc
repnz
xor
and
xchg
lcall
dec
ljmp
in
test
inc
sbbb
out
icebp
or
ret
mov
sahf
imul
sbb
leave
in
inc
mov
mov
xchg
shll
lock
sub
mov
jp
xchg
cmp
sti
test
xchg
inc
jb
jmp
mov
jmp
xchg
movsb
xorl
addr16
or
aas
popa
lods
sbb
push
shr
dec
xor
xor
int3
std
xor
arpl
or
dec
adc
test
adc
jne
mov
sub
pop
test
inc
jns
jmp
xorb
fcmovne
fs
in
add
cmp
dec
das
fiadds
jmp
lods
xor
sbbb
clc
cmp
xor
stos
inc
sahf
movsb
mov
stos
sbb
mov
fcmovnb
cmp
add
loope
insl
test
loopne
fldt
fstps
cmpsl
pop
add
out
out
idivb
sahf
push
daa
adc
xchg
ja
cld
mov
or
adc
and
mov
mov
ljmp
mov
add
xor
shrb
fcomi
jecxz
movb
ss
addr16
faddp
ljmp
mov
lea
jne
pop
scas
aas
movsb
jae
push
out
loope
pushf
js
sub
rorl
test
shrb
cltd
int3
xlat
mov
sbb
enter
repnz
sub
xchg
insl
add
out
adc
or
cmpl
fldenv
push
testb
test
push
adc
rcll
cs
cwtl
push
mov
pop
sub
sbb
jl
mov
add
adc
decl
cmpsl
in
mov
sbb
repz
ret
in
mov
xor
dec
imulb
into
sbb
sub
popa
cs
sti
aad
push
sbb
push
inc
cmpsb
xor
lods
adc
out
test
cmp
lcall
in
or
push
inc
jo
out
clc
loope
mov
mov
jne
xchg
cld
shlb
out
lods
fcomps
cld
inc
addb
int
or
enter
imul
daa
cmp
push
sub
jmp
jmp
clc
mov
lea
js
pop
xchg
mov
mov
imul
pushf
sbb
push
ljmp
xor
fidivl
icebp
sub
push
cwtl
xchg
daa
jbe
test
mov
cld
call
push
adc
pushf
add
mov
jmp
dec
filds
out
iret
adc
mov
ja
cmp
or
push
mov
sbb
inc
iret
cmp
xor
jns
repnz
mov
std
rcrb
insb
andps
int3
mov
lods
xchg
loopne
sarb
js
pop
dec
pop
pop
ss
mov
sub
pop
xor
aas
data16
mov
sahf
xchg
ja
adc
or
push
repz
js
icebp
sbb
mov
lret
push
stos
mov
mov
loopne
stos
mov
push
lret
mov
mov
int3
or
cmp
mov
push
data16
movsb
pop
es
dec
push
aas
push
or
sub
rcrl
es
popa
jmp
ret
sub
mov
daa
xchg
aas
clc
adc
mov
lret
mov
jle
out
fistpll
mov
fs
fiadds
cmp
mov
push
mov
scas
clc
dec
cmp
sbb
adc
loop
fstps
sbb
pop
fs
xchg
add
xchg
sbb
loope
adc
push
inc
push
loop
sbb
test
pop
rolb
scas
and
lahf
mov
push
fsubl
sbb
ret
movsb
add
icebp
mov
test
daa
push
repnz
jge
push
cmp
sub
dec
lcall
ja
test
stc
and
mov
sarb
xchg
cmp
enter
into
in
lret
call
cwtl
stos
es
xlat
pop
mov
dec
sub
pushf
push
lcall
call
repz
cmp
fiadds
add
mov
js
leave
shll
aaa
rcr
push
xchg
pop
mov
inc
popl
and
xor
jecxz
lods
cmp
sub
cli
mov
mov
rol
jecxz
repnz
xchg
in
out
push
mov
sti
enter
or
popa
into
mov
pop
into
mov
paddw
ffreep
mov
les
mov
lcall
into
mov
or
loop,pt
ss
lret
push
shlb
flds
sub
mov
aam
cmp
mov
sbb
and
loop
pop
ljmp
pop
call
cmp
rcl
mov
mov
outsb
pop
xchg
push
fcomps
lahf
popa
mov
add
fimull
ret
push
daa
dec
or
mov
loopne
stos
inc
jns
sub
jbe
pushf
sub
jns
inc
sti
lcall
adc
and
mov
mov
mov
mov
sbb
mov
mov
add
pop
in
jns
out
add
nop
scas
clc
mov
cmp
cli
nop
leave
jecxz
hlt
or
xchg
dec
std
dec
imul
fbld
mov
daa
leave
lret
frstor
push
or
decb
push
lcall
cmc
mov
mov
jmp
aas
fisubs
loopne
cmc
mov
sahf
jmp
mov
ds
in
lret
stc
xchg
incl
or
leave
stos
rcr
mov
pushf
and
dec
mov
fnstsw
mov
enter
xchg
mov
sbb
mov
mov
pop
ret
fstl
pop
sbb
ret
add
xchg
jmp
out
stc
lret
fnstcw
js
mov
mov
notl
sbb
add
out
xor
mov
lret
cli
pop
lret
out
enter
jo
cld
jle,pt
cli
push
aas
push
cli
into
xchg
ret
jns
idivl
jne
lret
fadd
mov
jp
inc
xchg
add
mov
add
and
adc
push
sub
shrb
cmpsl
stos
negl
inc
mov
mov
jo
mov
mov
aaa
mov
outsb
imull
add
mov
test
push
xor
lds
inc
mov
ljmp
in
sar
lea
xlat
inc
or
jg
leave
push
cli
jno
mov
push
mov
lods
xchg
or
adc
sbb
sub
int
loop
movsb
fsts
cli
testb
cmpl
cli
test
negl
jmp
outsl
mov
mov
enter
push
pop
enter
add
outsl
and
cmp
repnz
sub
jecxz
mov
sub
push
cmp
lds
dec
test
mov
shll
stos
add
test
mov
leave
mov
ds
fisubl
adc
jnp
lds
lods
pop
loop
sarb
mov
cwtl
adc
in
dec
xor
js
scas
sub
jp
sbb
mov
or
int
and
mov
jnp
xlat
mov
pop
mov
loopne
inc
jp
sub
dec
ss
cmp
xchg
leave
push
sahf
je
iret
fdivrp
lcall
pop
xor
jp
call
sti
xchg
mov
cmpb
push
xchg
scas
inc
ds
clc
je
sub
mov
and
push
and
mov
clc
jmp
mov
js
xchg
lret
daa
xor
or
dec
dec
inc
or
pushf
lock
popf
dec
int
test
sbb
bound
add
ds
jbe
mov
sub
jecxz
mov
in
sahf
adc
lds
jne
push
cmp
dec
sbb
push
mov
aas
insl
cmp
cmc
push
fiaddl
dec
adc
lret
cmp
adc
nop
ljmp
xchg
cmpsb
subl
enter
mov
out
bound
in
xor
int3
call
jae
std
sbb
pushf
and
test
mov
cmp
js
sbb
fldcw
test
subb
mov
aad
mov
push
xchg
mov
xchg
movsb
call
cmc
mov
fcmove
xlat
out
lahf
mov
jnp
outsb
ljmp
enter
mov
sbb
mov
es
sub
add
nop
cmp
bound
hlt
popa
jmp
movsl
jle
add
dec
mov
jge
mov
xchg
addb
adc
add
sub
outsl
imul
xchg
into
push
or
and
sarl
fidivrl
cwtd
aam
out
push
insl
pop
clc
adc
gs
fmuls
pusha
enter
add
int
stos
dec
cmp
repnz
jo
loopne
adcl
je
mov
cmp
nop
and
xor
repnz
ffreep
jge
mov
xchg
xor
and
sbb
std
xchg
sub
bound
daa
or
mov
rcll
mov
outsb
cwtl
xchg
pop
insb
add
pop
push
aad
loope
cmp
inc
pop
sbb
gs
xor
outsb
pop
cmpb
push
inc
pushf
leave
scas
js
les
loope
pop
hlt
mov
xchg
xchg
mov
cmp
rcr
jno
push
xchg
sub
push
mov
adc
popf
mov
idiv
into
mov
xor
scas
enter
mov
lcall
dec
mov
leave
fwait
aaa
add
add
sbb
add
pop
adc
or
inc
cld
mulb
xor
mov
movsb
outsb
dec
sbb
mov
sbb
sbb
fidivrl
xor
aas
pop
into
rcrl
js
insl
pop
add
inc
lret
cwtl
stos
sbb
dec
lods
adc
inc
fs
pand
lods
dec
mov
push
aad
fdivrl
xchg
stc
loopne
repz
mov
into
cmp
loope
xchg
jle,pt
daa
jp
cmp
ret
arpl
lods
pusha
mov
xor
fisubs
mov
ficompl
mov
mov
xor
mov
lods
xor
sbb
loopne
mov
lahf
pop
sti
adc
add
pop
pusha
jg
aas
daa
jp
mov
setg
dec
clc
xor
ret
shrb
add
js
ds
adc
or
mov
or
push
lods
in
in
dec
std
fldl
pop
aam
inc
lods
fisttps
push
inc
sbb
mov
cmpsb
pushf
cmp
adc
ret
xchg
ljmp
fiaddl
fcomps
add
je
cmp
lods
mov
sti
fdivr
cmp
xor
push
adcb
leave
lcall
ret
xchg
mov
cmpsl
js
pop
mov
fldt
sub
xchg
mov
xchg
jle
iret
stc
mov
mov
and
lods
lahf
or
mov
neg
scas
insl
mov
loopne
mov
mov
jg
add
loop
xor
mov
push
mov
fmuls
icebp
lahf
xchg
leave
ret
sub
out
sub
jle
dec
mov
popa
out
dec
popf
jb
push
push
fildll
mov
or
ljmp
sbb
clc
cwtl
pop
ss
aas
cmp
dec
xchg
imul
inc
push
xor
gs
jns
icebp
enter
insl
sub
movsl
adc
sti
lock
fsubl
add
in
cmp
push
lret
rorb
addr16
std
fwait
push
ret
pop
ror
fmuls
add
rcl
dec
sub
incl
loopne
out
xlat
adc
fs
push
ret
lods
aas
test
insl
or
pop
enter
xchg
imul
push
fs
pop
aas
xchg
adc
mov
fsubp
jp
inc
bound
mov
js
mov
jecxz
mov
dec
jbe
cld
mov
xor
aas
addb
insb
in
xchg
fstpl
cmpsl
push
sub
xchg
cmp
adc
mov
adc
add
test
lahf
adc
pop
dec
adcl
lret
inc
dec
cmpsb
push
push
daa
mov
push
lea
in
mov
pop
aam
aaa
push
cmp
test
movsl
ficoml
dec
xor
xor
rcrl
aad
data16
mov
fs
xchg
lds
jns
xchg
test
fcompl
and
pop
pusha
pop
jne
lock
mov
xor
imul
jb
pop
dec
call
fcomip
sti
dec
jns
sub
adc
dec
add
stc
adc
jo
or
push
adc
push
sbb
and
dec
or
pop
shlb
jns
out
pop
stos
mov
movsb
fwait
adc
stos
lock
mov
shr
popa
cmp
int
or
adc
out
mov
mov
leave
lret
cmpsb
fdivrp
inc
inc
test
or
jge
aas
jl
sti
add
and
std
mov
mov
and
fcoms
or
jle
push
xchg
mov
mov
ffree
mov
enterw
dec
sub
dec
fmul
sub
fildll
pop
inc
aaa
xor
mov
out
out
lcall
mov
or
add
adc
sbb
mov
fisttps
mov
sbb
sbb
adc
add
mov
sbb
adc
out
mov
lods
or
and
mov
adc
mov
adc
sbb
cmpb
xchg
push
insl
cmpsb
lock
out
pop
mov
inc
mov
cltd
cmp
lds
insb
pop
ljmp
arpl
shl
sbb
jmp
push
lea
repz
lds
xor
fdivs
loope
mov
enterw
push
movsl
pop
outsb
inc
add
lret
ss
in
lds
inc
dec
dec
mov
test
xchg
cwtl
cmp
iret
mov
rol
iret
mov
idiv
add
cli
xor
sahf
push
or
jno
mov
lahf
xchg
enter
add
sbb
outsl
cmp
rcl
pop
adc
xlat
push
mov
outsb
iret
jmp
dec
in
fisubl
xlat
or
cmc
and
or
mov
mov
pop
xlat
std
sbb
out
sub
loope
roll
inc
rcll
sbb
shll
insl
lods
es
movsl
imul
adc
sub
fwait
movsl
repnz
mov
adc
mov
enter
and
pop
call
push
divps
mov
movsb
lret
pop
loopne
data16
stc
fimuls
xchg
divl
lret
in
int
and
sub
add
mov
sti
imul
mov
ficoms
cmpsb
cmp
pop
sbb
fildll
je
mul
cwtl
pushf
cmp
cmpsl
popa
xchg
jnp
adc
dec
xor
add
xchg
mov
dec
sti
sbb
cmp
cli
jno
aas
adc
or
stc
adc
sub
jg
xchg
push
addr16
ret
sub
lcall
ds
cmpsl
js
pop
nop
andnps
sbb
jp
cs
ret
or
out
mov
imul
repz
ret
scas
xor
pushf
hlt
std
add
mov
dec
int3
mov
cmp
test
outsl
fistl
or
daa
int
jle
into
cmpsb
lds
mov
pushf
xchg
ljmp
xor
sbb
rcrb
mov
pop
mov
sahf
jnp
lock
sti
lods
push
mov
cld
loope
out
in
sbb
in
mov
std
js
push
jmp
or
fidivs
mov
loop
sbb
stc
or
adc
xchg
xor
xor
lret
rclb
stos
test
rclb
mov
push
cmpsb
pop
pop
jp
push
fsubrs
iret
rcrl
outsl
in
sbb
das
sub
push
js
jge
mov
mov
fstpt
sti
push
mov
lock
je
mov
dec
mov
inc
inc
mov
cltd
add
arpl
dec
sbb
sbb
cmpsb
xlat
sbb
push
outsb
aad
stc
adc
addl
outsb
sti
bound
in
ljmp
mov
ss
cmp
push
push
cld
je
cmp
inc
in
jge
ret
push
xchg
add
or
push
rcll
ja
incl
mov
mov
mov
outsb
xlat
dec
adc
fcomp
adc
ljmp
adc
add
mov
rolb
pop
inc
in
jecxz
xor
cli
xlat
out
lods
repnz
xchg
ja
xor
sbb
xchg
loop
push
mov
mov
fwait
es
xor
into
pusha
call
xor
sbb
loop
mov
aas
mov
mov
call
lds
mov
out
and
lahf
in
dec
out
dec
mov
xchg
push
je
test
addr16
roll
xlat
jne
mov
pop
push
flds
xchg
out
int3
pop
into
mov
out
fwait
outsl
jnp
jmp
fisttps
inc
xlat
jbe,pt
mov
shlb
pop
fiadds
jle
js
adc
cmp
jp
stos
movsl
pop
ss
mov
mov
lods
lods
orb
int
push
lret
cmp
pop
push
js
fsubrs
leave
testb
cli
sbb
mov
psubsb
jecxz
mul
lods
popf
in
dec
das
adc
cwtl
mov
popf
jecxz,pt
add
add
jne
cmc
sub
sbb
mov
xchg
jo
adc
jge
add
scas
sbb
dec
jl
in
andl
repnz
xor
adc
fadd
leave
sahf
xchg
jnp
out
int3
add
mov
dec
pop
test
jb
cmp
mov
ss
ret
xor
push
sahf
sub
adc
jecxz
jns
sub
leave
movsb
xor
push
loop
inc
sti
call
push
int
jmp
push
insw
outsl
mov
call
bound
pusha
jle
and
adc
xor
inc
and
cmpb
dec
sbbb
js
in
push
push
lcall
or
bound
call
mov
cli
ret
or
mov
jno
or
xlat
add
jae
mov
in
jecxz
fldt
in
lcall
test
lret
add
mov
adc
ficompl
xchg
xor
sbb
sub
mov
pop
outsb
lret
repz
shrl
inc
ljmp
push
and
dec
ret
sti
xor
out
cmp
cmp
fidivrs
fstps
jae
add
xor
or
xlat
enter
or
inc
sahf
neg
scas
lret
cs
sub
mov
gs
lds
shlb
cmp
adc
fcomp
xchg
or
dec
subb
ja
adc
stos
je
or
bswap
push
mov
pop
inc
push
mov
or
mov
cmp
sub
mov
mov
xchg
xchg
insb
mov
lea
iret
push
inc
dec
notl
sub
push
les
xor
mov
xor
repz
ss
and
aad
loope
sub
enter
pop
rorb
lahf
cmp
loop
cmp
clc
test
xchg
mov
clc
sbb
sub
mov
jo
inc
enter
fmuls
imul
mov
in
pop
push
stos
jne
mov
enter
pop
daa
xor
mov
dec
rcll
inc
cwtl
jbe
mov
add
ret
js
daa
cs
and
lahf
and
cmp
stos
jmp
sbb
and
add
pop
test
es
enter
testb
fs
jg
jecxz
mulb
cli
add
out
push
in
sahf
pop
jne
push
in
add
mov
add
lock
jnp
les
jns
out
les
arpl
lret
outsl
push
and
push
sahf
out
or
mov
adc
push
imull
ljmp
jb
adc
push
inc
xchg
xchg
pop
xchg
fadd
push
push
pushf
in
mov
or
cmp
mov
cmpl
hlt
dec
das
mov
sahf
xlat
add
add
xor
xchg
push
adc
pop
mov
lret
shrl
cmpb
pop
adc
rol
je
and
cmp
mov
lods
lea
cwtl
stos
sub
jo
cmp
xchg
or
movsl
loop
push
stc
add
inc
mov
mov
sbb
and
clc
mov
push
xchg
jne
push
testb
mov
jecxz
mov
jo
lret
sub
lret
xchg
scas
stc
add
xlat
mov
mov
xor
add
dec
mov
push
adc
xchg
and
iret
aas
inc
das
cmpsb
fcmovnbe
stos
aam
sarb
sarl
enter
jnp
mov
push
fdivl
cmpb
lret
repz
add
daa
pop
push
mov
sbb
sahf
pop
adc
xchg
adc
imul
mov
add
rolb
push
lret
rcl
popf
lahf
fimull
out
push
cli
push
mov
out
mov
jge
sub
sub
xor
mov
fs
mov
sbbb
mov
lds
mov
daa
lahf
lock
ljmp
push
sahf
mov
fidivrs
mov
pusha
addr16
xchg
shr
repz
add
daa
fisttpll
add
mov
mov
xor
mov
dec
popf
sub
dec
and
mov
push
mov
xor
xor
loopne
and
jnp
mov
dec
call
sub
jne
into
cld
mov
push
xchg
ret
pop
dec
sti
sub
push
int3
adc
mov
add
repnz
repz
pop
pop
xor
aad
cs
push
ds
pop
out
shrb
adc
sub
fcomps
sbb
sbb
push
jae
js
not
cli
lock
stos
pop
fiadds
ret
inc
test
jg
nop
stos
adc
xor
sbb
dec
jne
or
rol
and
stc
lods
mov
jl
stc
les
ret
mov
scas
mov
pushl
sbb
repnz
push
outsb
mov
jmp
lea
or
jp,pt
xor
sarb
lds
arpl
loope
ds
lds
dec
cmpsb
cmp
push
js
jg
pop
mov
mov
adc
pop
fisttps
rcl
test
mov
and
inc
jb
decl
fidivs
fistl
sub
mov
adc
mov
mov
pop
fs
ret
cld
lret
push
jns
cmc
stc
cmpsb
pop
sahf
testb
cltd
mov
sti
sub
mov
mov
push
aad
addr16
mov
push
sub
fadd
xor
sahf
and
jbe
and
xor
shll
push
push
adc
loopne
shlb
pop
push
test
mov
cli
pop
xlat
clc
mov
in
or
inc
test
lret
popf
dec
xor
in
leave
inc
fisttpl
xchg
mov
cwtl
mov
aaa
add
pop
sub
jmp
out
jns
lcall
ror
dec
sahf
dec
stos
arpl
sbb
sarb
movb
push
xor
popa
dec
add
dec
movsb
sub
jbe
xchg
rol
or
outsl
shrb
xchg
call
pop
push
xchg
imulb
out
xor
cmc
mov
jp
push
sub
daa
pop
mov
sbb
mov
mov
sti
dec
ret
in
mov
push
jg
cmp
imul
loope
ja
popa
sub
in
clc
ficoml
mov
sub
sbb
int
cmp
es
cld
sarb
lret
push
icebp
xchg
rorl
dec
das
mov
mov
mov
adc
mov
cltd
mov
cmp
add
les
mov
jl
fistps
test
test
sahf
mov
jmp
daa
adc
into
lret
and
mov
adc
cwtl
or
jg
mov
fnstcw
loop
incb
jae
inc
insb
sub
dec
pop
mov
or
add
sbb
clc
xor
xor
ret
mov
fistpl
xchg
addb
dec
ret
ret
clc
cmp
ficoms
ret
jo
mov
lock
mov
dec
mov
xchg
fnstcw
adc
sub
fisttpll
ss
or
mov
push
ret
call
iret
inc
clc
dec
mov
fimull
test
cwtl
jne
clc
mov
fsubp
into
push
clc
mov
jne
pop
adc
loop
lea
adc
add
cli
and
hlt
xor
icebp
adc
dec
mov
aas
sub
imul
sub
push
mov
paddb
loopne
lcall
les
jne
rcll
test
movsl
test
imulb
scas
jle
movsl
push
sbb
xor
dec
std
es
fdivr
fsubrp
mov
in
xchg
push
mov
dec
dec
push
jb
add
stos
bound
and
mov
daa
fidivrs
decl
out
sub
mov
mov
jle
cmp
pop
inc
xchg
mov
orb
lret
lds
dec
jns
lds
mov
add
lcall
add
sbb
enter
out
mov
gs
or
lcall
add
mov
pop
cmc
out
sbb
psrld
xor
or
xor
or
in
or
iret
mov
jl
mov
lods
icebp
xor
addl
xchg
dec
sub
nop
add
add
or
in
les
push
ret
dec
dec
pop
xor
mov
movsl
iret
lds
ljmp
leave
std
add
mov
test
dec
inc
jecxz
xor
push
fimuls
dec
out
add
jae
shlb
hlt
enter
lahf
sarl
xor
adc
ljmp
jnp
gs
mov
or
inc
fisubs
cmp
mov
sub
sub
or
fst
mulb
lods
or
ficompl
sahf
push
push
push
adc
jle
enter
sub
mov
dec
shlb
icebp
pop
push
pop
shrl
or
pop
dec
jecxz
inc
dec
ret
add
mov
dec
not
jo
mov
cld
mov
dec
repz
mov
in
lock
sahf
aas
mov
mov
sub
xchg
add
mov
jle
dec
mov
jno
stc
mov
in
bound
jecxz
pop
sub
jecxz
cld
sti
mov
adc
shl
pop
mov
xchg
dec
jecxz
cmpsb
shr
in
adc
aas
sub
test
xor
push
and
dec
inc
cbtw
pop
mov
mov
ds
repnz
into
lds
cld
sub
repnz
sahf
pop
jle
cmp
outsb
mov
rolb
dec
sbb
sub
push
into
shll
imul
add
sub
popf
inc
std
fcomps
jp
sbb
movsl
xchg
sub
jno
inc
addl
ss
out
mov
popa
mov
mov
dec
or
clc
add
inc
inc
cli
aaa
not
mov
mov
add
jle
lcall
stc
testb
ret
cli
sub
push
add
sbb
fisttps
jecxz
enter
xchg
popf
mov
aas
jno
mull
cltd
ret
add
inc
dec
add
sbb
repnz
in
xor
inc
sub
jne
mov
and
rclb
inc
clc
icebp
fldl
fildl
fxch
inc
add
and
mov
mov
jnp
lods
mov
jb
faddp
aas
pop
stos
or
sbb
in
std
in
dec
push
icebp
dec
cmp
mov
cmpsl
fistl
cmpsb
mov
rclb
or
inc
arpl
lret
enter
stc
lock
cmp
jns
clc
or
out
xlat
lods
int
lds
mov
aas
out
faddl
cmpsl
xor
int
xor
inc
in
mov
clc
aad
fadd
lahf
or
cmc
aas
mov
xor
jns
pop
in
ds
loope
jno
inc
cli
out
xlat
mov
hlt
push
test
imul
inc
cmp
sub
mov
xchg
cld
mov
cli
fiadds
xchg
mov
lds
dec
popa
jo
jle
mov
inc
outsl
sahf
hlt
adc
push
in
cmp
data16
mov
fcomip
jne
loope
push
sahf
pop
bound
int3
ror
icebp
or
sub
fimuls
cmpsl
or
sbb
js
sahf
push
hlt
dec
pushf
add
mov
sbb
push
daa
iret
cmp
xabort
test
xor
mov
xchg
into
lcall
fistps
call
out
stos
es
nop
lds
enter
jo
jp
fs
ljmp
aas
mov
lea
push
sub
add
nop
stos
cltd
sbb
cmp
out
lods
outsl
mov
subl
jne
sti
mov
adc
jns
push
mov
fimuls
mov
xlat
xchg
into
inc
rolb
or
mov
pop
mov
mov
inc
adc
fistpl
fcomi
cmp
xor
inc
pop
lret
jle
pop
inc
fabs
test
add
and
inc
or
je
mov
lahf
idivb
xlat
rcrl
leave
pop
icebp
cmpsb
movsb
scas
sahf
jbe
jg
shrb
jb
xchg
cli
lcall
mov
jb
mov
lahf
and
fcoms
lahf
in
repnz
xor
inc
inc
xchg
cwtl
adc
popl
in
or
imul
add
cmp
cld
push
push
and
out
lods
inc
add
cmc
sub
int
mov
push
and
or
into
mov
call
or
in
aaa
je
pop
cli
icebp
jl
jne
shlb
jno
push
psrld
inc
in
lods
mov
mov
in
fiaddl
mov
enter
orl
mov
in
out
push
andb
jge
pushf
sub
orb
inc
idivl
push
dec
pop
jae
sarl
pop
jne
aas
inc
cmp
aaa
lds
and
icebp
test
sti
mov
sbb
mov
inc
or
outsb
scas
lock
xchg
jo
push
dec
inc
cld
mov
aaa
jl
lds
jl
jo
xor
pop
pop
cmc
xor
ss
jns
jbe
loope
repz
ja
xor
in
lcall
and
add
dec
add
push
or
mov
mov
lea
sbb
add
push
add
xchg
push
leave
imul
sahf
test
notb
rcl
cli
xor
adc
xchg
call
fld
in
sbbl
or
mov
imul
lret
dec
jno
movsb
imul
outsl
ja
sbb
lret
pop
ljmp
daa
leave
lea
push
push
mov
popf
cmp
sub
out
sti
in
xlat
mov
sahf
push
and
or
pop
aaa
or
mov
mov
cwtl
fidivrl
xchg
clc
int3
clc
jb
xor
sahf
cmpsl
xor
pop
and
mov
xlat
push
insb
inc
enter
lahf
popa
movsb
mov
lcall
inc
push
xlat
outsb
push
jp
inc
inc
mov
repnz
add
scas
push
pop
lret
jp
push
sub
sbbb
inc
jle
sbb
hlt
in
push
loopne
dec
dec
ja
in
lret
xchg
inc
lea
js
jbe
mov
mov
fwait
mov
add
test
ja
jns
shlb
inc
inc
push
lret
mov
and
in
ret
out
lret
push
cli
ljmp
ret
add
pop
mov
and
jle
mov
jp
test
xlat
push
mov
pop
sbb
inc
xchg
jns
arpl
insb
mov
pusha
out
jmp
mov
mov
xchg
sahf
lret
call
repz
hlt
xlat
clc
jp
out
in
out
add
lods
mov
rcrl
jecxz
jecxz
push
inc
stc
clc
mov
or
jne
popf
jecxz
imul
push
mov
ret
push
mov
in
or
in
pop
ss
dec
mov
repz
mov
add
pop
fsubrs
and
lcall
sub
and
xor
mov
xor
rol
or
fs
mov
leave
jmp
mov
pop
lret
mov
hlt
mov
ds
push
test
out
lret
test
jo
sbb
sbbb
mov
mov
dec
xor
jg
ds
emms
mov
mov
in
scas
mov
cmp
cmp
sbb
lret
loopne
or
mov
xor
roll
rolb
icebp
push
fidivrs
mov
mov
adc
sub
in
aas
cmc
enter
decb
cli
inc
dec
aas
xor
mov
ret
jns
mov
dec
jp
rolb
pop
out
add
mov
jmp
mov
scas
lret
mov
jg
pop
je
sub
or
sarb
jae
inc
outsl
je
aad
jo
jmp
xchg
lock
shrb
lods
int
lcall
dec
xchg
mov
clc
movsl
inc
cli
in
adc
xchg
addr16
lret
and
add
and
sbb
iret
add
push
into
sub
sbb
ffreep
movsl
inc
jb
jno
dec
lret
cmp
lds
test
cmpsb
lcall
xchg
sub
jle
inc
cmp
or
sub
into
clc
mov
dec
fs
rcrl
adc
mov
fnstsw
mov
aad
neg
outsl
mov
jbe
xor
mov
lds
cmpsl
and
cmpsl
outsl
loop
or
mov
in
and
mov
push
jns
dec
ljmp
fbld
mov
lds
lods
jbe
arpl
and
into
mov
inc
inc
aas
loop
loope
xchg
jnp
jne
adc
cs
in
std
roll
call
dec
fnstcw
add
push
add
mov
and
mov
mov
mov
cmp
pusha
push
insl
mov
and
in
rclb
inc
or
shlb
and
cmp
cld
mov
xor
fisttpl
into
cltd
fcmovnu
test
out
or
xor
push
pop
and
sbb
orb
jp
sahf
insb
jo
aaa
popa
xchg
add
adc
jns
sub
mov
popa
xchg
js
cld
lahf
dec
sbb
mov
iret
mov
adc
call
jmp
xor
dec
mov
psubb
inc
mov
sub
not
fstpl
mov
les
rcl
xor
in
outsl
clc
cld
and
loope
push
mov
pop
fsubrs
push
inc
add
xchg
mov
xchg
sub
repnz
sub
sub
lds
xchg
inc
pusha
cld
insb
rcl
std
aad
cmp
icebp
jp
cmp
dec
scas
call
bound
xchg
ffree
xor
cld
js
mov
pop
movsb
js
sar
fldt
movsl
xlat
mov
shl
out
cmp
sbb
mov
xorb
cmp
in
push
aas
out
jmp
sbb
pop
push
je
imul
xchg
xchg
cwtl
and
ret
xchg
mov
rorl
js
icebp
mov
cwtl
add
xlat
dec
xor
and
icebp
dec
and
adc
push
xor
pop
jae
lret
cmp
js,pt
mov
sbb
aam
push
xlat
stos
add
xchg
das
add
push
fdivs
leave
stc
jo
mov
cmp
jnp
xorl
jge
pop
lea
ds
jbe
mov
fs
adc
outsl
ds
out
xchg
jmp
xor
pop
adc
jl
cli
repnz
dec
or
dec
xor
loope
pop
pop
xor
notb
sbb
sub
lahf
out
lcall
push
mov
jb
dec
push
repnz
jecxz
jo
loop
jnp
dec
pusha
cmp
loopne
sbb
fcomps
or
int3
fisubrl
jmp
leave
xchg
gs
push
call
out
mov
adc
ljmp
scas
push
sbb
mov
xchg
push
sahf
adc
xchg
lcall
lret
add
mov
cmpsl
aad
negl
xchg
jecxz
dec
sarb
lds
mov
and
loopne
loop
push
jp
jg
decb
sahf
imul
push
scas
xchg
inc
cld
mov
mov
fdivl
imul
push
sbb
sub
or
neg
popf
fdivr
shrl
repnz
test
cmp
ds
and
js
in
loopne
xchg
nop
add
in
mov
add
clc
mov
mov
dec
lret
out
xor
add
or
pop
sahf
add
or
loop
push
cmp
nop
xlat
enter
add
cmp
mov
dec
jmp
sbbb
repnz
inc
cmc
mov
fimull
fistpl
js
fnstenv
or
lcall
push
pop
push
mov
int3
sbb
mov
jle
fildll
fadd
fldl
fcompl
std
ljmp
sub
mov
icebp
outsl
xchg
cltd
sahf
fsubrp
add
push
dec
adc
movsb
add
shl
mov
loop
dec
jb
pop
push
int3
outsl
push
add
jae
loopne
lods
ja
mov
enter
adc
jecxz
cmpsl
adc
sbb
cmp
loopne
inc
pop
inc
mov
or
outsl
out
fidivl
jp
stc
out
cmpsb
cs
xchg
sbb
cmp
or
jmp
cmpb
cs
sbb
pop
jno
insb
mov
xchg
push
mov
adc
mov
in
cmpsl
shr
push
notb
cmp
mov
push
jne
ss
cmpsb
add
dec
xor
and
jp
nop
add
or
lods
add
orb
cmp
pusha
inc
vcvtpd2ps
pop
xchg
mov
loopne
cli
xlat
out
cli
jmp
mov
std
xor
mov
cmp
push
cmp
mov
leave
cmpsb
rcr
pop
lcall
jnp
aam
dec
or
stos
test
popa
mov
cmc
js
shll
xchg
repz
fisttpl
aas
xchg
pushf
enter
mov
or
mov
push
dec
frstor
outsl
jbe
mov
test
adc
fcmovu
pop
call
push
cli
out
stos
int
jge
jno
cwtl
pminub
in
sbb
jp
bnd
lret
scas
pop
jae
cmp
out
repz
rolb
inc
cmp
mov
stc
clc
jp
xchg
gs
push
jp
fs
push
or
inc
clc
test
ds
xchg
push
repnz
jle
enter
cli
in
arpl
dec
or
pusha
jl
mov
insl
fnstcw
leave
int3
lods
inc
rcl
repz
adc
lods
mov
scas
inc
xlat
dec
loop
jns
add
and
push
out
jne
in
mov
push
xlat
fstl
movsl
jns
mov
stos
out
loop
mov
arpl
inc
gs
test
xchg
jae
inc
rorl
mov
int
fadd
or
sub
xchg
jg
mov
iret
mov
add
jb
inc
leave
mov
cli
cwtl
fnsave
push
mov
flds
jmp
push
cmpsl
repz
test
popf
out
ss
fidivrl
pushf
mov
lds
adc
xchg
in
cld
daa
cld
cld
repnz
clc
lods
fsts
jle
push
mov
call
push
leave
push
repnz
ja
sub
jecxz
in
adc
sahf
cmp
loope
mov
pop
cmpsl
xchg
push
in
mov
ror
sahf
mov
movsb
icebp
push
jne
sarl
sub
mov
adc
loopne
cwtl
sahf
pop
fistpll
xor
and
mov
jnp
shll
jle
or
pop
mov
shrb
leave
cld
bnd
neg
mov
in
lcall
fcompl
ficomps
insb
mov
jns
outsb
fiaddl
cmp
ss
mov
xor
or
int3
fsubrp
outsl
xchg
adc
shll
sahf
pop
dec
adc
orl
jnp
push
std
cld
and
mov
push
xor
pop
loopne
push
mov
inc
ss
out
mov
fistpll
or
call
mov
dec
pop
fdivrp
sbb
and
in
les
int
push
inc
inc
cld
js
outsl
push
bound
sahf
mov
test
mov
shl
add
mov
lret
out
popf
int
push
stos
jge
mov
mov
jg
and
or
imul
jnp
sbb
sahf
cmp
pop
sbb
fnsave
movb
inc
xlat
fdivrl
fldcw
jmp
mov
ret
mov
lret
jmp
lods
sarl
adc
add
ret
aam
or
aad
mov
ret
mov
pop
ljmp
adc
in
mov
mov
cmp
pop
lret
sub
fstpt
xlat
outsl
loopne,pt
cmp
ja
xchg
mov
dec
rol
push
cmp
mov
inc
rcrb
mov
loopne
sahf
cwtl
or
sub
rclb
fsubs
iret
push
dec
or
xor
stos
push
dec
mov
jo
sarb
xlat
loope
mov
mov
rol
daa
pushf
jne
iret
je
in
dec
or
aas
fsubrl
xor
dec
pop
jecxz
inc
loope
sti
divb
jne
mov
dec
test
scas
cld
add
mov
push
jns
cmpsb
loope
mov
std
mov
push
mov
aaa
mov
mov
sub
cmp
fmulp
sub
and
sahf
fisubrl
cmc
sbb
fs
mov
pop
int3
xor
clc
mov
or
xor
pushf
sub
cmpsb
pop
mov
jmp
sub
push
cmp
stos
mov
faddp
sbb
push
outsl
imul
lret
cli
xchg
or
lret
jp
jp
mov
mov
pop
dec
mov
mov
mov
add
in
sahf
lahf
rorb
jecxz
lret
xlat
sahf
mov
pop
rcrb
jecxz
das
add
or
sub
loope
in
outsl
cmpb
lds
ret
movsb
mov
pop
or
xchg
ret
lahf
js
mov
cmp
jo
je
das
jecxz
mov
or
jb
cli
mov
shrb
sub
mov
jg
ret
mov
pop
fimull
ret
repz
mov
lock
inc
cmp
sub
xchg
cmpsl
mov
out
mov
int3
out
and
or
lret
lret
or
fimull
cmp
jmp
leave
idiv
and
and
pop
das
icebp
repnz
mov
mul
inc
push
sahf
push
mull
pop
lret
mov
mov
jnp
mov
xlat
sub
mov
ret
loope
xlat
mov
xchg
sar
data16
jns
or
in
add
mov
in
rolb
cs
clc
pop
mov
cmp
out
jae
fistps
push
mov
cmp
mov
dec
push
ret
push
popf
push
aam
leave
jns
sbb
or
ud0
mov
stos
xor
stos
es
and
sub
cs
mov
mov
sbb
adc
cmp
or
es
notl
addr16
mov
divb
mov
call
cmp
jge
into
mov
mov
xor
pop
into
stos
insl
xchg
les
cwtl
cmc
lret
xchg
push
push
into
outsl
jno
iret
iret
mov
lcall
or
adc
icebp
push
xor
pop
sub
mov
push
push
dec
cmpsl
cmpsb
int3
out
cmp
lret
jg
dec
mov
ret
stc
bound
add
sub
push
lret
pusha
cld
lret
sti
ds
lcall
dec
mov
adc
sbb
sub
fldenv
subl
jle
lcall
xor
fnstenv
xor
sub
out
sbb
sbb
fstps
sbb
sub
out
and
and
fldenv
and
sub
icebp
mov
or
or
or
std
or
jle
lcall
adc
std
adc
jle
lcall
cld
inc
std
std
fsin
inc
jle
lcall
add
std
add
jle
lcall
in
inc
std
in
fldz
inc
out
jle
lcall
hlt
inc
std
cmc
inc
xlat
jle
lcall
faddl
inc
fistpll
lcall
in
std
in
movb
enter
leave
or
mov
lcall
lret
int3
outsb
fcmovb
gs
jle
int3
loope
and
popa
int3
ficoms
add
pop
mov
xchg
enter
sbb
das
pusha
fisubs
push
add
aad
call
scas
or
mov
cmp
insl
das
pop
es
cs
dec
int3
mov
ss
adc
lahf
xor
shrb
mov
and
enter
push
shll
mov
mov
jo
inc
ss
mov
lds
movsb
ret
dec
pop
fdivrp
imul
xchg
push
xchg
mov
cmp
inc
fdivs
xchg
sbb
mov
sub
jno
and
mov
shlb
aam
cli
mov
cmp
or
jns
sbb
into
aas
sub
dec
pop
movsb
xorl
rcl
loope
hlt
add
aaa
in
shlb
mov
sub
xor
mov
rdmsr
mov
out
add
enter
add
rolb
pop
or
sub
out
add
adc
jne
dec
mov
cmp
jge
iret
loopne
add
mov
jae
nop
pop
loopne
push
aaa
jg
lret
out
scas
push
js
aaa
test
aas
cmp
cmp
mov
mov
dec
mov
cmp
mov
lock
lea
aam
sbb
rorb
mov
es
mov
mov
icebp
mov
xchg
mov
cmp
mov
xlat
fstps
cs
lret
mov
pusha
cwtl
shrl
jo
out
clc
jp
rcl
jo
xor
pop
mov
or
ds
lahf
imul
je
btc
pop
cmc
mov
out
jne
stc
shlb
xor
repz
fs
adc
ds
clc
mov
inc
into
adc
jecxz
das
notb
pop
aad
mov
jge
cmp
push
or
cmpsb
scas
pop
mov
icebp
bound
jl
add
xchg
xchg
mov
mov
mov
or
icebp
popa
push
xor
insb
pop
ret
dec
data16
repz
add
and
jg
popa
adc
mov
mov
pop
mov
adc
and
ret
aam
fistps
push
sbb
sahf
dec
adc
sub
cmp
push
cld
out
enter
jle
mov
ds
dec
jle
xlat
ljmp
xlat
add
cwtl
icebp
lock
cltd
pushf
int3
push
cli
fnstenv
and
and
dec
jg
out
lret
and
push
xchg
sbb
popa
pushf
push
sar
sub
movsb
sbb
icebp
adc
into
aad
jno
addl
into
rorb
shrb
push
sub
jecxz
push
xor
shlb
jmp
sbb
lahf
and
mov
int3
jne
adc
sub
or
push
mov
roll
xlat
mov
ret
push
and
sbb
or
push
inc
pop
es
or
das
and
jmp
sbb
in
push
loopne
sub
sbb
enter
push
xchg
int3
jo
iret
sbb
sub
clc
in
rorl
sub
dec
mov
and
pop
mov
and
into
mov
push
and
mov
ret
ljmp
std
sti
jae
mov
rcl
or
mull
pop
rclb
cs
mov
lahf
or
sub
add
xchg
jb
or
xchg
add
scas
or
into
das
mov
ret
jmp
dec
sbb
shll
outsl
clc
ret
cld
shll
int
ret
sarl
or
dec
sarl
cltd
push
dec
xchg
mov
cwtl
ljmp
sub
mov
out
enter
shr
ret
enter
or
push
rcl
pushf
inc
call
sbb
sbb
pop
vmovaps
lock
fadd
pop
out
mov
hlt
cld
mov
or
test
mov
enter
cld
and
mov
loop
push
mov
mov
sti
test
add
scas
inc
fnsave
call
aad
repz
xchg
gs
shr
bound
das
mov
mov
cli
mov
std
movsb
mov
or
push
std
push
cmp
or
ret
add
or
sarb
int3
pop
iret
out
mov
xchg
idiv
lock
mov
punpckhdq
jg
mov
add
adc
cmpsb
lahf
adc
push
test
pop
add
inc
jge
adc
mov
xorb
fadd
add
sub
pop
aas
inc
jns
sti
mov
addr16
cld
sbb
jns
mov
mov
sbb
mov
test
test
divb
or
jle
dec
shl
push
jp
adc
mov
iret
mov
pop
push
mov
cmp
sbb
rclb
xchg
js
sbb
bound
or
mov
mov
scas
in
push
pop
mov
fimuls
out
push
mov
jl
sub
mov
std
testl
inc
add
mov
push
fistpll
mov
cmp
sbb
les
lret
imul
jp
sbb
cmp
cltd
or
out
clc
push
or
dec
push
fwait
out
jp,pn
cld
clc
jl
and
movsl
ds
or
pop
incl
sub
test
ret
out
dec
loop
mov
pop
pushf
lret
cmp
and
pop
mov
sahf
jle
mov
pusha
inc
or
orb
mov
scas
hlt
cwtl
xchg
fidivl
push
mov
add
sbb
pop
fistps
pop
mov
enter
and
push
icebp
fldl
stos
inc
icebp
shlb
in
loop
fstpt
inc
lret
mov
and
stc
cs
incb
sub
mov
sbb
inc
bound
sbb
pop
addr16
nop
js
mov
sub
jae
call
daa
pop
test
sub
es
lret
pop
jg
in
int3
jno
or
pusha
fldl
xchg
insl
jns
dec
data16
ret
xlat
push
pop
test
imul
xor
test
sarb
popf
xchg
stos
mov
nop
pop
into
cmc
pop
enter
fmull
jbe
push
push
mov
imul
xchg
ret
ret
out
pop
mov
aam
das
and
cmp
pminub
add
sbb
outsb
add
lahf
inc
add
mov
out
jp
mov
testl
mov
stc
outsb
loope
push
mov
fists
mov
mov
xchg
and
out
adc
inc
lret
or
subb
or
jecxz
jmp
or
jecxz
sti
pop
and
call
sbb
push
iret
mov
loop
push
jp
inc
dec
push
mov
jbe
adc
call
negb
push
cmpsl
fsubrl
sub
into
aas
cs
into
mov
movsl
push
lret
jb
push
lcall
sub
xchg
lds
add
sbb
int3
sbb
int3
int
adc
sbb
push
jg
mov
mov
jecxz
mov
cli
mov
mov
and
sbb
lods
cli
dec
fidivrl
lcall
pop
out
mov
sbb
adc
lret
push
inc
pop
push
std
idiv
aas
jae
dec
jbe
push
loop
cmpsb
scas
test
hlt
cmp
mov
decb
dec
rcrl
sbb
dec
xlat
push
cli
push
dec
sbb
out
fistpll
mov
dec
out
xchg
dec
jo
call
sbb
push
or
data16
mov
int3
mov
lahf
mov
dec
imull
loope
xchg
pop
jmp
mov
sub
jb
pop
aam
sbb
and
pop
aas
repnz
jb
stc
imul
les
cmp
outsb
fistps
outsl
mov
push
mov
jge
dec
jle
pop
add
cmpl
je
test
jl
fiadds
aas
jbe
fdivp
xchg
ds
add
dec
add
inc
cmp
jb
rorb
sbb
and
and
cmpsb
arpl
inc
lcall
cltd
push
lcall
fiadds
repnz
xlat
jb
mov
jmp
mov
cmp
mov
mov
mov
cmpsb
fstpt
lock
inc
xchg
icebp
mov
pop
pop
push
mul
jns
inc
and
and
not
sub
cli
add
lods
out
mov
push
add
and
dec
add
push
mov
rclb
in
movb
and
out
aas
xchg
js
inc
sbb
mov
in
lods
sub
pop
dec
mov
ret
aas
add
mov
loope
cmpsl
orl
cmp
sahf
mov
out
loopne
add
dec
mov
cmp
cli
sbb
loopne
fadd
gs
adc
outsb
call
movsl
cli
push
lgs
cmpsb
xlat
mov
ret
xor
ret
adc
mov
add
mov
sbb
es
or
adc
leave
out
sahf
jne
add
fiadds
aam
not
iret
ficoms
push
xchg
push
pusha
mov
jne
sbb
add
jmp
lcall
sbb
into
fstl
add
insb
dec
xlat
sarb
push
mov
mov
and
cli
or
cltd
sar
cmp
jecxz
pop
pop
and
iret
rcll
lcall
cmpsb
and
cmpl
jae
adc
fidivs
lds
dec
inc
sub
add
icebp
je
lods
icebp
cltd
mov
pop
dec
inc
test
loope
add
outsl
mov
fstl
sbb
jecxz
pop
or
pop
or
mov
adc
stos
subl
cmp
clc
es
xor
pop
decl
cmp
xor
add
scas
xchg
mov
leave
jge
repnz
mov
cmp
dec
popa
dec
dec
in
or
fs
mov
clc
add
hlt
sub
jp
xor
loopne
and
mov
xor
mov
int
push
sahf
cmp
xor
jne
clc
into
sahf
mov
lcall
lret
jle
sub
jmp
lret
xor
mov
lret
rorl
rcr
xor
fnstcw
dec
mov
dec
push
push
stos
add
push
adc
add
jecxz
push
mov
xchg
xchg
adc
in
lds
dec
shll
dec
jge
mov
mov
mov
dec
dec
rcr
das
stos
pushf
ljmp
dec
int3
mov
int
fcom
sub
lods
or
cmp
scas
add
cmp
jo
sub
and
es
and
sub
xchg
cmp
sub
inc
and
sub
mov
inc
add
movsb
das
lret
push
xchg
push
mov
or
sbb
or
dec
pop
pop
add
test
sub
mov
cli
ja
pop
and
add
cmc
movaps
inc
xchg
sub
inc
mov
push
sub
pop
in
shl
sub
xchg
mov
ljmpw
je
lret
das
stos
push
filds
ja
and
call
add
and
fcmovu
add
xchg
dec
fwait
outsb
in
xchg
ljmp
pop
stc
lock
out
es
adc
push
adc
ror
test
jmp
push
sub
and
dec
jbe
sub
xchg
jge
inc
mov
rclb
mov
dec
push
lock
xlat
ret
pop
dec
push
into
push
loop
adc
xlat
lret
fiadds
xchg
or
test
xor
fcomps
das
xchg
add
std
lret
shl
and
rorl
xor
cmp
rorb
mov
sbb
clc
and
les
mov
cmp
aas
dec
mov
jnp
sub
cs
add
dec
arpl
rorb
fwait
scas
call
fidivrl
cli
lret
xchg
adc
out
sahf
jle
sub
ret
add
adc
lds
xor
into
loope
pop
cmp
xor
mov
cmp
cmpsb
cli
fbld
int
outsl
push
xor
or
inc
std
into
add
inc
mov
lret
orl
dec
push
out
movb
testl
xchg
or
repnz
xchg
cld
testl
inc
mov
ss
add
out
add
stc
add
cld
popf
add
push
outsl
cmp
add
sti
js
ljmp
clc
add
cld
cs
out
cs
inc
ret
add
mov
test
xchg
xor
hlt
rorb
add
xchg
arpl
pop
sbb
stc
pop
into
clc
clc
idiv
xlat
repnz
cmp
test
xchg
push
test
in
dec
and
xor
testl
add
inc
add
enter
cli
scas
push
cmc
sbb
mov
sub
adc
and
ljmp
add
std
lret
cmp
and
or
sbb
fldcw
lock
fldcw
xor
shlb
mov
lret
rol
fxch
cmc
jp
inc
add
jo
cli
int
stc
les
repnz
or
shrb
std
mov
mov
rcr
stc
lds
mov
push
fisubrs
shll
sub
jl
push
mov
stos
push
ret
mov
aas
jmp
insb
adc
push
pusha
cs
fldenv
jge
jo
mov
lcall
leave
adc
adcl
dec
aam
dec
cmp
pop
fistps
or
cli
sarl
mov
ds
movsl
pop
adc
and
and
add
jecxz
mov
sub
lret
ss
mov
cmp
out
push
sti
pop
add
push
sbb
int3
call
dec
into
pusha
fildl
lods
jp
inc
mov
fsub
cmp
les
sub
sub
xchg
rol
pop
addr16
jg
fstpl
loopne
and
shl
sbb
sar
push
adc
xor
mov
in
test
es
ds
fidivrl
aas
mov
jbe
insb
mov
jno
xadd
xorl
jge
xor
dec
mov
nop
cmpsl
cmp
or
push
into
sub
fwait
arpl
xor
mov
xlat
rcl
cmc
lock
leave
outsb
jb
inc
out
negl
sub
lods
loope
ss
call
mov
adc
enter
dec
mov
add
ja
cmp
pop
push
test
into
fnsave
adc
mov
and
mov
jp
into
ret
addb
sub
es
inc
jmp
mov
dec
dec
mov
ds
iret
mov
aad
inc
aam
mov
fcompl
test
mov
jb
add
js
in
xor
jae
test
gs
mov
movsl
mov
lds
push
or
sahf
movsl
out
sarb
add
fisubrs
stc
roll
or
aas
adc
lock
xchg
mov
mov
cli
xlat
mov
mov
shll
push
and
aaa
cmp
stc
push
scas
cmc
xor
repnz
stos
adc
test
mov
daa
or
jl
jmp
add
andb
mov
mov
mov
into
mov
mov
mov
hlt
mov
sbb
cmp
loope
mov
push
movsl
aas
movsb
xor
inc
fistpl
fisubrs
mov
push
mov
pop
fiadds
andb
imul
pop
xchg
pop
lods
xchg
pusha
shlb
and
push
dec
mov
repz
loop
xchg
mov
xor
fadd
sti
lahf
pop
pop
stos
out
insl
dec
divb
scas
notb
aaa
dec
ss
cwtl
fimull
jge
pop
lock
lret
js
lds
in
xchg
mov
out
arpl
cmp
mov
out
fidivl
xchg
push
jnp
ficomps
mov
adc
cli
pushf
lods
mov
xlat
mov
out
nop
fisttpll
loope
or
xchg
inc
sub
push
rcrl
loop
jl
cmc
cwtl
jp
lahf
mov
adc
leave
fdivs
and
loope
in
outsl
push
cmc
ds
ret
xchg
hlt
cld
dec
xlat
les
stos
mov
loopne
sbb
jle
sbb
sarb
les
mov
jp
test
outsl
push
xor
loope
cmpsb
sahf
das
lahf
dec
ret
icebp
movsl
cmpps
lahf
lock
cmpsb
sbb
neg
mov
jmp
into
push
std
adc
aaa
into
sbb
daa
std
cmpsb
sub
cmpsl
xor
adc
mov
or
fs
jmp
xlat
xor
add
out
inc
fimuls
sub
cwtl
stos
pop
adc
push
jecxz
fimuls
jbe
stos
mov
xlat
cmpsb
sbb
loope
nop
and
shlb
ret
dec
negl
or
pop
dec
mov
push
cmpsb
pop
insb
cmp
inc
inc
ljmp
bound
pop
fidivs
sti
mov
mov
lock
out
inc
fwait
cmp
cli
cmpsb
loop
stc
mov
arpl
stos
push
jle
cmpsb
mov
xor
into
and
dec
sbbb
ds
pop
jb
xchg
pop
add
sbb
and
dec
pop
or
lock
or
cmp
cmc
les
add
push
out
fsubrs
sahf
fld
or
in
in
mov
in
or
mov
mov
movsl
imul
fs
xchg
repnz
mov
mov
xor
jp
fwait
hlt
fistps
inc
push
imul
cmp
sub
sbb
add
pop
add
cmp
aas
mov
push
fs
pop
idivb
test
fldenv
icebp
fisubrs
shl
cmpl
add
xchg
push
test
jg
aam
dec
lahf
mov
das
xor
js
into
or
mov
push
mov
aas
add
loopne
sahf
dec
dec
out
pop
pushf
hlt
push
clc
cmpsb
xchg
pop
mov
js
ret
jl
cli
xchg
or
sub
cmpsb
and
out
cmp
dec
xchg
jae
lahf
into
int
sbb
sub
call
loope
push
mov
lret
dec
mov
push
mov
dec
in
jno
adc
pop
xchg
xchg
add
mov
cmpsb
sub
das
sti
mov
leave
mov
mov
dec
jb
into
cmpsl
int
jb
cmp
dec
sbb
pusha
test
jae
jb
lret
and
pushf
xchg
loop
push
mov
sbbb
adc
mov
int3
mov
mov
hlt
sub
cwtl
mov
outsb
sbbb
push
lret
out
imul
leave
add
xlat
sar
and
mov
jge
sarl
ljmp
icebp
hlt
or
jbe
neg
daa
mov
lret
cmp
pop
fwait
push
lock
push
mov
push
dec
das
dec
out
add
cwtl
mov
pop
adc
pop
sahf
aas
cwtl
sbb
scas
add
notb
dec
ljmp
dec
or
inc
jnp
xchg
sub
aam
icebp
xchg
sti
xchg
arpl
ds
pop
xor
jns
dec
mov
jns
jg
clc
insl
xchg
daa
and
lret
xchg
sbb
cmp
push
xor
call
mov
lds
mov
fdiv
cltd
lcall
jne
cmp
and
int3
into
and
mov
xchg
pop
pop
pop
imul
aas
xchg
cmp
pop
mov
mov
bound
shlb
pushf
repz
nop
fstps
aas
or
gs
int
mov
jb
inc
xchg
sub
aas
cmp
pop
jmp
xchg
mov
insb
fisubrl
jae
aam
add
mov
add
into
mov
test
mov
and
int3
cmc
xor
sahf
and
pop
lahf
arpl
popf
cli
cmp
fists
stc
lock
xchg
pop
ror
vmwrite
repnz
mov
jg
shlb
loope
push
divb
add
scas
std
lret
jno
push
cld
mov
pop
or
bswap
lcall
int3
mov
ljmp
dec
idivb
xchg
testb
pop
ds
stos
dec
cltd
aas
xorb
push
lods
push
pop
loope
psubd
mov
ret
xchg
fwait
cs
fildl
cmpsb
adc
fstpt
insb
sahf
adc
push
inc
fcoms
sbb
or
add
lods
stos
fldl
jae
loopne
jg
scas
or
mov
ret
inc
int
mov
fucomip
les
out
jno
push
mov
into
pop
outsl
cmp
push
push
int
outsl
push
add
lahf
xor
fimull
cmp
mov
push
or
lret
aaa
mov
in
adc
sub
clc
sub
fists
movsl
test
imul
add
pop
fld
loop
jle
test
and
mov
add
lret
jno
add
ret
test
inc
jle
jl
cmc
or
add
sti
mov
ja
jbe
pop
or
repz
repnz
jbe
cmp
cwtl
xor
gs
ljmp
or
pop
dec
fwait
ret
cld
out
sbb
push
cs
ret
ret
stc
push
pop
ret
int3
les
inc
dec
rcl
sub
xor
stc
and
mov
sti
xor
lret
jo,pt
std
call
fbld
ret
xacquire
xor
inc
in
fistl
shl
ret
cmc
loope
cmpsl
sbb
pop
cld
es
pop
out
pop
xor
iret
pop
mov
enter
xchg
jl
dec
adc
xchg
fstl
adc
mov
xchg
or
mov
sub
and
pop
cmp
jl
data16
jmp
adcb
inc
jnp
sahf
lret
pop
mov
pop
add
push
lahf
xchg
test
in
mov
rol
ds
jnp
mov
xor
int3
mov
lea
out
lret
xor
mov
add
aaa
lcall
pop
lock
inc
stos
lcall
mov
in
hlt
jns
add
cli
orl
ret
mov
fstpl
push
jnp
mov
daa
leave
add
mov
ljmp
inc
repnz
jo
or
imul
mov
push
mov
push
mov
jnp
aas
adc
imul
pop
in
sti
mov
xor
add
les
mov
clc
cmc
and
mov
dec
xor
mov
xchg
stc
mov
test
int
push
push
mov
add
xchg
and
iret
out
xor
lds
int3
sti
and
hlt
ljmp
mov
loop
adc
inc
cmc
and
mov
repz
out
into
loopne
loop
jg
xchg
ss
mov
add
fwait
dec
xor
or
mov
jl
mov
shlb
ds
and
lock
or
sbb
gs
movsl
cmpsb
sub
sub
dec
and
addr16
mov
bound
mov
mov
jbe
add
lods
xor
lahf
cmc
mov
bnd
add
push
fiadds
ret
mov
clc
cmpsb
shll
pop
sti
into
in
cmp
add
pop
lret
test
sbb
cmp
sti
fistl
stos
mov
ret
repz
shrb
dec
cmp
mov
enter
xlat
scas
lcall
cli
mov
push
jnp
call
cmp
leave
dec
push
mov
mov
jbe
cli
mov
cmp
insl
into
sbb
call
idiv
movsl
lcall
pop
pushf
xchg
push
ljmp
test
push
fisttpll
adc
cmp
mov
outsb
sub
jl
xor
cli
xchg
push
es
loop
leave
mov
imul
ja
imul
inc
es
es
js
xchg
mov
das
nop
push
pop
data16
cmp
clc
daa
cmp
push
or
sub
in
lret
sahf
fistpl
in
stc
push
or
loopne
cld
in
negb
rclb
lret
aas
mov
push
mov
pop
sbb
pop
mov
jg
push
mov
pop
mov
push
adc
imul
test
fs
idivb
fcomip
mov
mov
or
sarb
stos
in
push
in
cmpsb
mov
rcr
test
sbb
sub
arpl
jmp
xchg
sahf
or
add
das
mul
pop
mov
into
ficompl
les
ds
dec
mov
inc
dec
dec
lods
jmp
xchg
hlt
adc
arpl
mov
inc
add
loopne
mov
or
pop
loope
sub
gs
or
sbb
mov
lods
or
scas
lea
push
hlt
ret
icebp
mov
mov
dec
xchg
mov
jmp
mov
lods
xchg
lahf
in
mov
dec
cmp
fwait
fwait
testb
xchg
adc
adc
fcmovnb
mov
icebp
call
sub
aaa
dec
lret
sbb
cmp
or
or
cltd
stc
loop
sahf
push
outsl
dec
adc
ja
sub
shll
push
inc
sahf
loope
sarb
fmulp
loop
in
push
and
leave
cltd
xor
std
inc
adc
pop
filds
dec
add
fcmovnbe
add
fisttps
or
cmp
in
push
xlat
movb
sahf
leave
dec
pop
push
hlt
dec
mov
adc
pop
sub
pop
enter
cs
cmp
add
push
mov
pushf
call
ljmp
adc
ret
fidivrs
cmp
push
mov
js
loopne
popl
and
adc
cmp
cld
mov
fildl
cmp
aas
sub
movd
scas
fldt
stc
jle
pop
xchg
lcall
mov
rol
and
sbb
loope
out
pop
or
adc
ficoms
cmpsb
cwtl
mov
stos
ljmp
or
ds
test
lds
mov
adc
jb
repnz
imul
mov
loope
pop
push
iret
repnz
repz
fbld
cmc
addr16
push
pop
ds
mov
xchg
adc
hlt
mov
testl
inc
xor
int
push
shl
adcl
test
mov
sahf
adc
repz
shl
outsl
cmp
xor
cmpsl
push
sub
pop
dec
fildll
jb
cs
in
xor
mov
vmovq
into
aas
ljmp
mov
out
rcr
jge,pt
cltd
loopne
test
xchg
rolb
lcall
sbb
jge
mov
mov
movb
mov
outsl
divb
mov
mov
mov
fldcw
imul
mov
mov
inc
lret
cmp
push
dec
xlat
mov
aaa
jae
mov
mov
scas
mov
cmp
sti
lds
xor
stc
idivb
pop
aam
mov
iret
pop
out
cli
mov
xchg
sbb
mov
imul
mov
mov
mov
xchg
mov
fisubs
xor
leave
lahf
repz
and
sub
pop
mov
in
movsb
mov
jmp
xor
inc
out
mov
scas
call
out
pop
stc
popl
cmp
iret
out
mov
push
repz
clc
mov
xchg
mov
dec
ja
and
jae
dec
mov
lods
pusha
fadds
xor
out
sbb
or
imul
bound
out
fidivrs
jp
sbb
fdivrl
ret
data16
jle
add
inc
js
fs
jg
sahf
pop
outsb
jns
sbb
xor
fisubs
xor
sub
int3
sahf
movsb
mov
sub
fldt
or
call
sub
add
mov
pop
dec
daa
xor
pop
cltd
fcomps
je
fcomp
inc
std
mov
jl
xor
inc
push
pop
cli
xlat
adc
sbb
adc
bnd
into
xchg
add
or
imul
sub
and
mov
cmp
clc
into
cmpsb
fildll
insl
lods
imul
xor
dec
xor
cmp
jbe
or
push
mov
imul
and
jae
pushf
sub
leave
clc
xor
stos
sbb
xchg
shlb
dec
cmp
pusha
push
sub
movsl
push
iret
test
jno
cmp
dec
push
les
push
arpl
jge
jne
popa
inc
lret
insl
adc
and
pop
cmp
insl
adc
mov
cmpl
mov
lods
sti
and
sbb
mov
cmpsb
mov
add
cmp
cmpsb
insl
cmp
mov
in
mov
or
dec
xor
arpl
mov
rclb
mov
stos
cmp
sub
in
add
cmpsb
insl
push
iret
out
clc
and
jmp
add
jl
icebp
test
mov
mov
daa
or
cmp
stos
xor
sbb
adc
adc
inc
lret
popa
push
cmp
mov
cmp
mov
cwtl
mov
dec
xor
adc
sti
fnsave
fdivrs
sub
sub
loop
push
ss
pop
fdivp
scas
ret
pop
ret
mov
leave
in
sbb
fsub
and
imul
in
mov
les
sbbb
mov
pop
ret
xchg
sbb
gs
mov
mov
lcall
inc
push
fisttps
inc
xor
mov
dec
test
loop
int
mov
fcoml
jge
je
jl
mov
cli
js
sti
clc
mov
xor
xor
or
aam
lret
ds
int
ss
push
sub
mov
push
push
icebp
cld
add
or
cli
and
mov
and
andl
sahf
fldcw
sbb
mov
sti
xor
pop
and
push
pop
mov
mov
xchg
mov
insb
pop
fmulp
sar
incb
aad
mov
jecxz
out
inc
mov
das
mov
inc
jb
cli
jle
ja
mov
aad
inc
sbb
jg
push
incl
fwait
mov
pushw
and
data16
outsb
jo
adc
jns
mov
push
cmc
pop
addr16
movb
dec
push
pushf
mov
push
scas
mov
or
pusha
adc
mov
outsl
aas
or
lock
cmpb
stos
mov
sbb
adc
shll
xor
or
sahf
loope
cmp
push
pop
out
mov
fstps
mov
mov
push
cmp
fisttpl
xchg
mov
mov
icebp
dec
xor
fisubl
test
adc
push
and
sti
mov
mov
xor
cmc
push
dec
divb
add
shr
mov
fnsave
add
push
in
jl
jo
rcr
sahf
aaa
cmp
jge
xchg
pop
in
aas
in
call
enter
iret
vcmpss
ss
notl
sbb
stc
test
lods
lret
push
add
aas
sub
and
rol
mov
cs
enter
fs
jno
lods
jmp
hlt
icebp
ret
fisubrl
mov
xchg
xlat
add
les
loopne
push
xchg
pushf
int
mov
aas
add
push
nop
or
outsl
and
xor
scas
add
fmuls
and
insb
lods
out
xchg
sub
xor
int3
ret
mov
mov
mov
movsl
mov
or
js
pushl
add
mov
addl
push
inc
add
je
cmp
iret
scas
mov
pop
addr16
cmp
pop
adc
sahf
jecxz
mov
adc
iret
cmp
out
jb
xchg
fsubrl
aas
movsb
cmpsl
push
test
add
imul
cmp
inc
rcrb
jb
test
push
add
push
or
jp
fmuls
or
scas
and
mov
ds
jg
out
mov
clc
mov
ds
xlat
aad
sub
jb
aas
cmovle
adc
cmp
xchg
cmp
mov
xchg
jle
sahf
adc
dec
and
aam
sahf
sbb
movsl
jmp
outsl
nop
push
clc
clc
imul
push
xor
jb
rcrl
xchg
dec
xchg
dec
pop
shl
arpl
and
adc
adc
inc
sahf
incl
cmp
push
cmpsb
mov
je
ficomps
inc
incb
test
mov
ret
nop
into
in
mov
mov
jl
ss
mov
lds
inc
fwait
inc
mov
ja
arpl
or
jl
outsb
int3
sub
bound
out
mov
or
mov
out
dec
add
lods
mov
mov
xor
jb
inc
inc
repnz
sahf
ficomps
push
xchg
mov
mov
shll
mov
jmp
cli
mov
mov
jno
push
dec
sahf
mov
pusha
xlat
flds
jbe
stos
outsb
xchg
test
cmp
mov
sub
enter
mov
xchg
adc
in
lods
fwait
sti
in
ffree
lods
push
adcb
xchg
fdivs
mov
repnz
into
mov
mov
hlt
cmp
fmulp
shr
in
or
dec
adc
out
shlb
adc
bound
mov
fmuls
mov
mov
jg
addr16
adc
pop
cmpsl
scas
or
pop
sub
dec
aas
lock
cmp
shrb
int3
movsl
es
sub
ljmp
fadds
mov
insl
test
int
add
lcall
mov
stos
mov
cltd
stos
push
jl
or
lahf
enter
outsb
cltd
xchg
or
mov
push
mov
rcll
mov
les
xchg
mov
cmp
js
je
fcom
jl
ljmp
sub
cmp
inc
sbb
fs
fisubl
xchg
mov
adc
xlat
daa
out
pop
ss
loope
pop
inc
cmp
into
dec
jnp
add
sbb
jge
adc
add
jo
adc
xchg
enter
adc
bound
jns
inc
je
mov
out
loop
push
cmp
xor
mov
add
stos
je
loop
into
ja
push
xlat
push
ds
enter
jns
push
add
jno
and
and
adc
mov
inc
in
cmp
data16
xchg
push
div
fildl
sub
fidivrs
dec
mov
or
cmp
sub
adc
mov
xchg
call
pop
std
dec
loop
push
xchg
cli
sub
jo
popf
ljmp
xchg
cmp
aam
incb
jo
jp
pop
out
ret
jle
mov
stos
jo
inc
es
cmp
cmp
cmpsb
clc
jp
xor
fiaddl
sahf
add
arpl
js
xorb
jno
xlat
jne
inc
sbb
dec
loop
sub
sbb
pop
sbb
and
mov
ss
js
and
shll
jge
mov
mov
nop
aam
add
fisttpl
data16
sub
mov
pop
aas
inc
popa
cmpsb
cmpsl
xchg
xor
das
pop
xor
lods
incb
shll
xchg
jno
iret
mov
cmp
test
mov
clc
sub
jb
or
je
data16
dec
int3
int
test
mov
gs
dec
jg
ds
js
add
int3
inc
mov
cmp
mov
sbb
jmp
sub
xchg
push
cmpb
in
sbb
or
sub
mov
jge
out
inc
push
inc
xlat
call
inc
ja
mov
int3
lcall
int
jl
push
hlt
or
and
sbb
mov
pop
jb
mov
dec
clc
outsl
mov
cld
mov
push
adc
dec
xchg
mov
cmp
inc
out
les
cmp
mov
push
push
jb
pminsw
xor
cmpb
lods
cmp
adc
mov
dec
loopne
insw
xchg
sahf
out
lds
sub
dec
xor
push
stos
inc
das
xor
xchg
ret
icebp
fcmovu
call
sub
shrb
mov
dec
dec
ffree
ss
adc
call
mov
daa
xchg
je
repz
ret
adc
cmp
in
dec
repnz
pop
aad
sahf
mov
loop
cli
aas
xor
mov
cmp
int3
jno
push
imul
push
add
or
stos
xchg
cmp
jno
pop
ret
insl
lret
mov
std
gs
xchg
push
insb
or
outsl
test
cmc
ret
hlt
or
in
jge
nop
call
pop
inc
imul
not
lea
push
outsb
out
sbb
inc
hlt
xchg
imul
stos
push
add
gs
in
stos
adc
and
pop
ljmp
mov
fcomp
into
pop
dec
or
iret
mov
adc
lret
incl
movsl
inc
pop
test
scas
lret
loopne
add
clc
sub
std
ret
pop
sub
lret
lcall
and
pop
int3
pop
fnsave
in
cs
aas
push
loope
push
fs
enter
push
pop
into
shr
dec
and
sbb
dec
ja
sbb
repnz
insb
adc
fisubrs
mov
fmul
mov
jo
fcomps
push
xlat
scas
shrl
add
mov
scas
mov
or
sbb
cwtl
rcrb
jl
pushl
fadd
gs
je
pop
jno
shlb
clc
pop
cmp
cmp
loopne
imul
lahf
sbb
mov
scas
in
jg
and
lcall
aas
and
mov
xor
mov
adc
pusha
sahf
jl
pop
ret
mov
lds
push
pop
lea
dec
lahf
mov
pop
js
xchg
into
lea
pop
push
push
xor
xchg
mov
mov
xor
dec
sti
ss
out
insb
mov
and
adc
ficoms
rorl
inc
outsb
cmp
xchg
mov
and
dec
scas
cmp
test
imul
adc
and
xor
insb
xchg
in
into
xlat
ror
hlt
sub
jge
pop
pop
mov
and
ficoml
je
lret
cmp
dec
inc
shl
gs
mov
in
ret
jb
fdivl
and
ljmp
repz
das
xchg
or
bound
mov
dec
push
cwtl
testl
push
mov
add
data16
imul
jb
js
imul
sti
out
hlt
std
imul
hlt
mov
cmp
fsubrs
scas
ja
movb
inc
mov
adc
mov
pop
ljmp
shl
mov
xor
shrl
xor
call
or
inc
std
ret
push
loope
fldt
aas
or
or
dec
and
adc
xchg
ds
stos
cmp
add
xchg
push
stos
mov
icebp
lret
fcmovb
test
and
and
cmp
lods
dec
repz
xchg
jp
push
adc
mov
or
mov
clc
repz
das
aas
adc
push
cwtl
es
loopne
lcall
push
movsb
mov
sar
into
ds
lahf
mul
packssdw
mov
into
into
scas
outsb
movsl
loop
push
push
addr16
mov
jbe
ljmp
push
scas
push
negl
dec
dec
cwtl
mov
leave
pop
je
mov
inc
mov
loop
insb
sbb
imul
mov
outsb
sbb
test
arpl
jnp
push
jl
imul
pop
lahf
adc
out
ficompl
mov
cs
or
rclb
adc
mov
cmp
push
sahf
add
sub
data16
and
pushf
and
cmp
and
or
xlat
dec
lds
stos
ficomps
mov
push
std
in
lcall
sub
cli
mov
xlat
mov
rol
iret
call
pop
es
mov
cmp
pop
push
adc
cli
mov
movsb
or
enter
fldt
lds
sbb
shlb
faddp
lock
adc
ja
xchg
sarb
dec
fwait
ds
and
orb
inc
in
std
jg
lret
sahf
fisttpll
dec
cmp
shl
adc
fdivrp
add
sub
cmpsb
jecxz
pop
mov
nop
xlat
in
fisttpl
push
cmpsl
fiadds
mov
out
es
add
imul
or
std
cmp
adc
in
mov
sysret
in
sub
cmpsb
jns
mov
loop
mov
fsubrp
subl
push
movl
dec
mov
cmp
adc
scas
lock
movl
inc
and
inc
stc
adc
jo
shrl
mov
push
push
fidivrs
or
ds
push
mov
mov
aas
push
jl
fidivs
pop
cld
ffreep
scas
clc
rcr
sti
ds
stc
mov
dec
gs
clc
cs
push
or
adc
xor
push
out
mov
or
mov
insl
inc
jl
mov
dec
sub
aad
aad
cmp
fmul
mov
inc
mov
in
pop
mov
lret
pop
jnp
push
adc
test
adc
xchg
cltd
cmp
popa
cli
or
cmp
xor
dec
fimull
mov
lret
jmp
cld
jno
ljmp
scas
xor
push
jmp
test
mov
push
or
cwtl
dec
addr16
cli
lds
fstps
js
das
or
mov
cmp
cld
push
xlat
sbb
lret
cli
jns
cli
ja
dec
or
push
cld
cld
xlat
sbb
loopne
ficoms
testl
ja
xchg
push
mov
and
dec
jbe
push
jp
pop
mov
js,pt
mov
adc
sub
adc
mov
mov
xchg
fisubl
sbb
ret
and
fidivs
lret
mov
clc
int3
fcomps
outsb
inc
pop
clc
sbb
ljmp
cmp
aas
cld
adc
jle
iret
loope
arpl
xchg
add
xchg
or
stc
imul
mov
cmp
xor
rcrb
inc
imull
inc
push
mov
sub
ljmp
stc
bnd
and
test
jnp
pop
jb
push
pop
xlat
rcl
test
xchg
das
cmp
add
ss
xchg
cmp
jecxz
inc
popa
popf
push
pop
mov
pop
adc
pop
leave
ret
stos
sbb
enter
leave
ja
loope
pop
shlb
mov
cmp
mov
popa
fistl
mov
fimuls
mov
mov
mov
fidivrl
repnz
xor
pushf
mov
or
lds
jle
lahf
mov
and
add
cwtl
xchg
cmp
mov
inc
or
sbb
push
push
dec
xlat
ss
xor
cld
sub
pop
push
jle
pop
dec
orb
adc
push
cmpl
js
sti
inc
repnz
sub
inc
inc
xchg
jecxz
js
push
sti
loope
fdivrl
or
aas
xor
cmpsb
xor
repz
outsb
loope
data16
jg
jb
push
mov
and
std
push
or
inc
push
dec
jecxz
int
gs
lea
add
or
aaa
mov
xchg
outsl
sahf
in
add
mov
sub
push
enter
stos
sbb
mov
int3
inc
dec
jae
repnz
mov
imul
movsb
lods
pop
push
mov
add
xor
mov
cmp
jg
push
push
sbb
jne
sahf
mov
js
mov
xchg
pop
cmp
pushf
cmp
mul
xor
mov
mov
mov
test
pop
je
or
cmp
and
sahf
cmp
mov
push
inc
dec
dec
ret
inc
xlat
xor
or
xor
cmp
scas
adc
xor
movsl
cwtl
out
dec
je
mov
andb
push
lcall
or
xchg
outsb
mov
leave
jmp
inc
xchg
jo
xchg
std
or
cmpsl
push
jl
cmp
adcl
adc
dec
jbe
aas
movsb
adc
ss
sub
imul
popf
inc
inc
mov
sets
push
mov
nop
mov
push
pop
les
add
sbb
sbb
mov
mov
jl
mov
xchg
adcb
arpl
sub
mov
mov
or
xchg
loope
mov
int
shlb
sbb
pop
dec
bound
push
dec
mov
sbb
adc
repz
push
testl
sahf
jno
inc
mov
mov
mov
push
dec
fucomi
xchg
or
push
sbb
fbstp
jbe
daa
xlat
inc
cmp
lret
icebp
movb
and
clc
repnz
fwait
mov
sar
ret
std
xor
stc
lcall
adcl
jmp
lods
std
cmpsb
xorb
push
cmpsb
test
cmp
nop
mov
test
imulb
loope
cmp
nop
or
ds
push
jo
adc
fxch
ss
sub
dec
xchg
lods
dec
pop
ja
jnp
leave
mov
push
sub
mov
mov
mov
sbb
fistps
bswap
fisttpl
aas
cmpsl
mov
mov
enter
jge
inc
sub
fmul
not
test
rcrb
lea
xchg
lret
inc
aas
adc
lcall
pop
fistpll
jle
call
aas
sahf
push
iret
fcmovne
mov
loop
mov
add
adc
jl
int
clc
loop
xor
scas
inc
sbb
loope
adc
jmp
xor
stos
mov
test
shrl
fimuls
or
lcall
push
adc
push
repz
js
add
push
mov
test
int
push
sub
stos
inc
sub
movl
sub
dec
std
pusha
mov
lcall
sti
ret
dec
insl
adc
fidivrs
jg
in
add
jb
dec
scas
sbb
xchg
leave
popf
inc
adc
in
ds
inc
mov
lods
clc
ret
or
push
mov
gs
and
inc
lret
stc
aas
or
inc
lret
subb
push
lret
jle
inc
icebp
in
popa
mov
cmc
cltd
iret
jle
cltd
mov
jp
inc
xlat
sbb
nop
pop
nop
pop
dec
pop
mov
cli
pop
dec
add
scas
jle
testb
nop
rolb
add
int3
addl
ret
lds
add
xchg
mov
mov
addb
adc
fucomp
ret
xorl
jmp
dec
hlt
aam
cwtl
sbb
jne
sbb
andl
mov
sub
inc
pop
mov
adc
clc
sbb
add
or
jg
js
js
ret
and
aad
lods
jle
test
shrl
mov
mov
pop
mov
mov
inc
inc
push
mov
dec
mov
aam
shrb
jecxz
inc
and
adc
jae
jle
mov
jle
dec
sbb
sarb
push
pop
hlt
loop
ffree
mov
orl
mov
mov
dec
cltd
ds
push
adc
push
in
push
jp
pop
fs
mov
add
xchg
add
sub
iret
lods
enter
push
pop
jl
push
stc
sub
test
loopne
pop
adc
cmpsb
sahf
add
inc
pusha
sub
push
fiadds
inc
clts
xor
xor
movsb
jmp
cmp
pop
mov
fldl
xchg
lock
pop
adc
js
stos
mov
push
pop
xchg
cmc
into
or
mov
es
dec
sub
jbe
fs
aad
add
xchg
xchg
jne
mov
lahf
das
push
add
aaa
cmp
push
outsl
inc
cs
mov
cmpsb
cld
je
cmp
sub
adc
jno
stos
hlt
cwtl
lods
fnstsw
lods
out
or
cld
ss
pop
xorl
adc
pop
ret
or
rorl
xchg
into
push
in
and
push
test
mov
or
inc
test
inc
js
pop
into
sahf
xlat
jnp
cmp
sahf
and
push
push
cli
push
incb
into
sub
pop
cmp
xchg
leave
test
jle
fidivrs
mov
lret
xor
mov
and
mov
push
es
or
xchg
mov
aas
sar
mov
stos
add
fadd
pop
int
inc
or
pop
push
fmul
into
inc
in
push
call
mov
ds
jp
ret
test
xor
int3
jae
andl
fcoml
xor
sub
push
rcr
sub
leave
sahf
or
in
xchg
popa
sbb
sbb
movb
int
add
mov
push
mov
push
sub
or
dec
into
icebp
mov
stc
idivl
ds
xchg
lods
pop
mov
pop
adc
mov
jno
add
inc
popa
dec
sub
cmp
fdivl
mov
inc
dec
stc
outsl
push
push
xchg
push
adc
xlat
inc
and
sti
inc
jne
push
dec
pop
ror
cmp
leave
push
or
lcall
jmp
pop
mov
jle
pop
xor
loop
jg
mov
mov
xchg
aaa
sub
icebp
cmp
cmp
movb
dec
es
cli
xchg
mov
mov
sarl
icebp
sub
fnstsw
xchg
fists
pop
sbb
out
lret
sub
mov
fstpt
rcrb
sub
mov
ds
mov
mov
mov
inc
sbbb
les
xchg
mov
cmp
imul
fsubs
jg
gs
sbbl
fldcw
lcall
ss
rcll
jbe
sbb
fdivrp
enter
notl
ret
cmp
add
into
cmpsb
lahf
add
enter
incb
outsb
loop
mov
in
mov
jp
cmp
sarb
loopne
sbb
fidivl
fdivrl
push
inc
jg
pop
and
fdivs
sbb
js
aas
push
fdivl
or
add
inc
loopne
subb
fcmovb
call
push
xchg
ds
sbb
enter
mov
and
push
into
aas
push
faddp
cmp
ljmp
lahf
mov
sbb
sti
into
jmp
mov
mov
lahf
or
pop
inc
addr16
cmp
pushf
jp
rorb
pop
imul
inc
lret
push
lret
push
dec
mov
xchg
jb
push
cmp
mov
ret
push
jp
xchg
pop
pop
outsl
inc
loope
mov
push
outsb
dec
divl
sub
arpl
jecxz
adc
and
adc
insb
push
jp
ficompl
sub
or
jno
stc
jp
pushf
int3
lea
imul
or
xor
lret
bound
mov
sub
sbb
pusha
cmp
pop
cmp
cli
xor
out
cli
add
arpl
rcll
sti
push
jb
xchg
xchg
sahf
pusha
cmp
rol
jp
das
mov
sub
clc
xor
les
orb
call
mov
jmp
testb
outsb
jecxz
adc
std
imul
imulb
push
lcall
add
mov
cmp
int3
mov
pxor
into
scas
daa
pop
into
fstps
in
or
push
inc
push
addr16
mov
loop
lretw
jle
sti
iret
sti
leave
mov
dec
mov
mov
sub
dec
mov
pop
sti
pop
jp
jmp
movsb
pop
cmp
js
xchg
cli
mov
ds
or
std
scas
cmpsb
loopne
pop
rorb
divl
sbbl
jo
sub
and
push
inc
ja
sbb
push
rcrb
inc
pop
push
fcmovbe
jae
jl
ss
ret
or
dec
jp
or
shrb
ja
xchg
cmp
push
rcr
aad
jae
aas
push
xor
xchg
cmp
int
xchg
int
cmpb
cmpl
daa
dec
add
xlat
repz
js
aaa
into
lahf
cs
mov
cmpb
pusha
pop
cmp
push
sar
sar
idiv
data16
dec
jg
fildll
incb
jp
add
shll
push
faddl
mov
leave
lods
cmp
cld
adc
sbb
mov
mov
sbb
inc
outsb
in
enter
add
jae
and
push
repz
jle
sub
mov
inc
lods
in
decb
mov
mov
push
popa
and
fimuls
stos
adc
add
push
pushf
xor
mov
sahf
inc
out
movsl
mov
or
cmpsb
adc
dec
dec
adc
mov
je
enter
mov
rcrb
aad
shlb
clc
pminsw
sti
lahf
lods
jmp
jge
xorl
push
cmp
pop
pop
mov
mov
mov
or
adc
jae
loopne
add
fldl
jg
adc
mov
dec
sub
aad
jb
cmpsb
lea
stos
lret
stos
imul
enter
bound
lret
inc
enter
sub
jge
add
and
outsl
push
cmp
jge
dec
mov
repz
jle
push
mov
sbb
sarb
cmp
push
and
add
lea
xchg
add
bound
cmp
std
movsl
or
ss
clc
ss
inc
insl
inc
mov
stos
hlt
ss
cmpsl
in
pop
xchg
mov
xor
mov
dec
lods
mov
adc
hlt
inc
movsb
loop
sub
mov
mov
push
lcall
imul
sub
push
push
je
es
cmpsb
fsubrl
shrb
inc
test
dec
mov
fcompl
mov
inc
pop
add
lret
ds
jb
pusha
ljmp
imul
or
dec
cmp
fisubrs
test
jecxz
daa
aas
mov
cmpsl
dec
sub
mov
and
mov
mov
addl
xlat
bound
mov
outsl
add
sub
mov
push
push
mov
icebp
jmp
inc
jne
enter
cmp
push
mov
add
loop
jno
insb
push
mov
mov
dec
lcall
or
sahf
les
dec
aas
lds
adc
popf
pop
leave
dec
sar
in
jb
call
imul
inc
mov
or
jbe
out
cmc
dec
or
jl
out
fisttpll
inc
adc
inc
jmp
popa
sbb
push
inc
jnp
test
icebp
fnstsw
rol
lea
lret
mov
mov
dec
mov
push
dec
test
mov
cld
fs
out
xchg
jae
aam
jge
lcall
adc
outsb
or
lcall
arpl
fsubs
fstpt
jnp
fwait
xlat
lds
cmp
jns
insl
stos
les
lds
lods
mov
vpunpckhqdq
out
add
gs
jecxz
xor
adc
iret
out
cmp
outsl
sbb
push
sbb
lods
jnp
aam
push
mov
loopne
shll
push
and
insb
inc
lock
fnstcw
mov
xor
add
xchg
dec
jne
dec
sub
jae
mov
lods
fs
test
add
dec
insl
test
out
jo
inc
cld
adc
out
mov
xor
std
sarl
ret
pop
call
mov
cld
rcr
xchg
or
add
add
cmp
jl
xchg
outsl
mov
lcall
js
clc
ss
fimull
xchg
iret
push
test
inc
decb
lret
xchg
sti
std
aas
jbe
std
adc
lods
cli
enter
fs
loope
mov
aas
xchg
add
dec
mov
cmpsb
cmpsl
sub
mov
pop
pusha
into
and
adc
test
sbb
stos
rcl
or
leave
shll
arpl
fstpt
cmc
outsb
into
lds
adc
addr16
hlt
jmp
icebp
arpl
mov
or
aas
sti
mov
lods
add
dec
cli
pop
xorl
ret
fimuls
inc
mov
mov
adcl
fmulp
icebp
ljmp
stos
jnp
bound
add
xor
mov
pop
or
idivb
mov
imull
mov
or
inc
les
out
xor
mov
test
mov
xor
das
pop
push
push
vpminsb
mov
pop
fs
or
xor
aaa
sbb
int
push
int3
clc
sub
or
inc
mov
xor
pushl
std
pop
or
cli
jne
mov
jmp
js
imul
jl
gs
xor
adc
mov
lock
hlt
je
jo
sbb
mov
mov
out
mov
adc
mov
inc
jnp
sbbl
xor
xor
outsl
add
scas
dec
adc
push
cmpsb
mov
aam
jge
dec
scas
add
or
cmp
lods
movsl
mov
and
add
inc
mov
ljmp
inc
xchg
and
mov
sbb
cmp
push
dec
imul
cmpsb
lahf
pop
fidivrs
popa
pop
pop
sbbl
fcompl
int3
jno
push
into
and
dec
adc
aad
divb
jge
jbe,pt
dec
sub
push
ret
xchg
out
outsl
adc
cmp
popa
sub
repnz
push
sub
sahf
jns
or
inc
jae
outsb
aas
push
loop
jecxz
mov
sahf
add
mov
mov
dec
lahf
jmp
iret
pop
xor
clc
push
sahf
jne
jl
imul
mov
test
jno
jle
dec
adc
xchg
add
and
or
sbb
mov
movsb
mov
lret
or
imul
mov
xchg
daa
mov
inc
jb
nop
fisubs
das
fiaddl
dec
jecxz
cmc
jge
sbb
jle
stos
cwtl
das
lea
mov
stos
sub
pop
icebp
clc
pusha
xor
mov
nop
jp
jae
push
pop
icebp
mov
into
sub
sqrtps
sub
dec
push
sub
lret
jae
cs
push
jge
xchg
push
test
adc
loop
call
fildll
fsubr
jnp
test
xchg
xchg
into
movsb
out
mov
mov
or
movsl
into
mov
push
jl
call
add
push
adc
xor
push
sahf
cli
inc
lret
dec
cmp
lret
inc
mov
push
mov
pop
fildl
hlt
or
xorl
insb
xor
push
inc
popa
dec
and
imul
shrl
fmul
jb,pt
mull
lret
sub
call
mov
icebp
jnp
jg
out
mov
adc
jns
mov
mov
test
sbb
mov
jl
out
xor
bound
mov
mov
or
sub
mov
scas
scas
or
push
or
fdivl
jbe
mov
int
test
lods
sbb
xlat
test
int
pop
mov
cld
aad
xchg
test
mov
pop
lock
dec
mov
dec
lcall
in
jecxz
loope
lret
mov
inc
and
push
enter
in
movsb
imul
adc
dec
jle
add
add
repnz
pop
cmp
call
imul
inc
cmpsl
pop
nop
gs
xlat
pop
cmp
jne
or
mov
int
xchg
cmpsb
inc
xor
into
sbb
out
xchg
test
lret
cmp
jmp
dec
scas
call
mov
adc
cltd
sbb
popf
ds
cmpsl
cli
push
dec
rorb
fwait
shll
jp
insb
leave
xlat
pop
xchg
jne
push
stos
sahf
sbb
gs
inc
push
rorb
in
cmp
cltd
jne
insb
pop
clc
outsb
icebp
inc
mov
call
in
xchg
dec
mov
add
push
sub
cli
fldt
or
in
out
cmpsl
in
xchg
jo
mov
jo
out
xchg
push
scas
add
xchg
test
jge
mov
sub
fs
mov
mov
cmp
jnp
mov
clc
add
jbe
cmp
cld
outsl
mov
add
push
subl
rclb
adc
call
mov
cli
ret
les
xor
add
sahf
pop
push
add
sub
jmp
mov
cmp
mov
cmp
add
mov
sub
xchg
in
or
ret
cmp
push
sbb
jge
clc
or
fwait
mov
push
rcr
fsubl
dec
mov
jno
jle
out
in
aam
stc
lret
mov
iret
adc
nop
loope
bound
jmp
adc
or
pop
lcall
mov
ret
ja
adc
cmp
sub
or
and
mov
clc
xchg
mov
lcall
mov
xchg
sub
fcomps
gs
ljmp
movsb
imull
inc
cmp
out
cmp
imulb
jmp
inc
xchg
stc
fsubrp
dec
into
dec
fucom
cmpsb
jecxz
sbbb
mov
rolb
mov
sahf
mov
stos
jo
jb
stos
loop
jp,pt
push
pop
mov
adc
pop
sub
adc
pop
shr
jl
dec
pop
dec
dec
and
jns
mov
imul
inc
adc
insb
orl
add
movl
cmpsl
cs
sub
lcall
imul
xchg
arpl
out
insl
and
iret
sti
push
mov
xor
mov
dec
mov
cltd
imul
bound
jb
dec
adc
daa
test
xchg
xor
sbb
xor
mov
sti
sbb
lods
pop
sbb
daa
repz
push
add
imul
cmpsb
inc
push
and
fidivrl
add
dec
mov
sub
fistpl
lret
xlat
or
jp
inc
and
movsb
loopne
jne
xor
mov
cmp
dec
add
outsb
cmp
xlat
inc
cmp
or
mov
ss
push
inc
xchg
decb
mov
and
ljmp
sub
stos
or
scas
or
adcb
mov
inc
xlat
push
inc
fcmovu
push
rorb
or
fdivl
shlb
dec
mov
cmpsl
cli
jnp
mov
mulb
push
pop
sub
data16
mov
xchg
pop
std
add
loope
mov
sub
inc
adc
fnstsw
ffreep
cltd
clc
xchg
sub
xlat
in
jo
push
jecxz
mov
and
mov
sbb
repnz
dec
sbb
add
pusha
clc
ret
sbb
fcmovnu
xchg
jg
xchg
dec
xor
ja
pop
cld
sti
or
lret
out
sbb
icebp
jmp
or
mov
mov
dec
int
mov
mov
rclb
jmp
mov
cmp
fcomip
sub
sbb
xorb
icebp
push
cmp
cli
cmp
loope
orb
mov
adc
lock
fidivrs
xor
lret
mov
out
test
loopne
mov
pop
jge
add
cltd
movsb
mov
cmp
loopne
ja
icebp
xchg
mov
stos
cli
fchs
mov
mov
dec
test
loope
pop
or
pop
mov
or
mov
mov
andl
lods
push
push
lahf
out
inc
std
into
dec
repz
cmpsl
mulb
adc
sbb
loope
bound
cmpb
mov
push
into
sub
jecxz
jns
test
popf
push
cmp
dec
xor
mov
aad
iret
cmp
mov
mov
inc
mov
shr
or
push
shlb
lock
scas
cmpsb
sub
out
dec
ret
inc
les
xchg
std
and
xchg
scas
test
jb
stc
jl
sarl
sub
mov
add
xor
test
fisttpll
stc
mov
aas
cmpsb
inc
cmp
lret
cmp
pushl
xor
xor
pop
test
lret
xor
inc
jmp
sbbl
dec
dec
sbb
jg
push
inc
out
pop
adc
dec
orl
mov
xchg
ljmp
into
mov
cmp
sbb
mov
pusha
inc
mov
or
data16
cmpsb
bound
idiv
jns
sub
sub
mov
shlb
lahf
fstpt
push
inc
mov
sbb
pop
mov
inc
pop
lret
xchg
es
mov
icebp
or
insl
jge
jno
xor
pop
dec
shlb
popa
mov
inc
aaa
fwait
mov
mov
sbb
fidivrs
xlat
repnz
ss
xchg
lret
xorl
add
push
scas
dec
divl
push
adc
or
pop
xchg
cs
or
bound
mov
out
movsl
imul
shlb
and
scas
cmp
popf
xchg
mov
adc
inc
sbb
pop
push
or
aam
int3
xchg
js
mov
fmuls
fwait
es
int
pop
jmp
lahf
sbb
loope
cmpsl
xchg
cld
add
cmpsb
sub
mov
mov
push
aaa
mov
cmp
ret
ljmp
fmuls
neg
cmp
or
movsl
leave
and
int3
add
fdivrp
lock
out
jecxz
fmuls
or
mov
mov
movsl
pop
xcrypt-cbc
cmpsl
push
cmp
add
stos
push
pop
lea
sbb
adc
data16
jp
mov
sub
xchg
push
ja
mov
cli
mov
and
mov
je
gs
pop
xchg
les
push
cmpsb
mov
neg
push
and
dec
dec
icebp
roll
pushf
scas
int
hlt
mov
and
cmc
inc
sti
adc
call
push
add
mov
out
ret
call
es
pop
iret
push
daa
add
mov
enter
fdivp
inc
add
mov
ljmp
dec
or
mov
test
jle
push
scas
jno
loop
and
xchg
cvtps2pd
sbb
ret
loopne
adc
xlat
jp
arpl
out
mov
xor
inc
mov
out
out
sub
fdivrs
cmp
lret
in
and
sti
loope
mov
adc
cmpl
xor
mov
fwait
mov
pop
ja
test
mov
shrb
sbb
add
in
pop
fcmovnbe
outsb
into
fstpl
sub
fstpl
mov
pop
fdivr
dec
ret
cmp
pop
xchg
enter
sub
add
dec
aam
adc
cmp
aas
cld
sbb
leave
mov
fdiv
cli
cmp
les
fidivrs
movb
aam
ret
mov
lds
out
faddp
cli
push
pop
movsb
ss
lods
sti
idivb
push
addr16
lret
es
ds
mov
lret
mov
sti
pop
in
mov
pop
jl
leave
les
mov
push
and
mov
imul
shlb
mov
ja
adc
repnz
pop
inc
icebp
aas
decb
int3
jo
subl
mov
sub
fimuls
test
in
jg
jb
imul
push
test
pop
xchg
jne
xchg
jae
insl
sti
mov
adc
push
negl
mov
mov
fdivrp
mov
fmulp
pop
pop
ret
xor
rcll
push
test
push
int3
lahf
out
adc
icebp
les
shrb
mov
imul
stos
lods
add
fdivs
add
loopne
and
fadd
sarb
or
sbb
sahf
ja
sub
sub
hlt
xorl
mov
jo
sub
int
bound
push
mov
jg
test
sub
mov
xchg
mov
push
sub
mov
push
mov
sahf
fistpl
push
faddp
xchg
lea
cmp
sub
shrl
xchg
adc
sahf
pop
scas
xor
push
ljmp
std
xlat
inc
dec
call
ja
mov
dec
dec
sub
ficoml
insb
xchg
ljmp
dec
scas
xchg
int3
inc
and
hlt
xor
dec
jne
or
dec
mov
cli
add
push
add
andl
xchg
insl
pop
lret
add
hlt
in
pop
pop
lret
js
sahf
cmc
call
lahf
cmc
dec
insl
sbb
andb
dec
out
sahf
jb
sbb
adc
mov
mov
fidivrs
std
mov
mov
sub
inc
xor
cld
jge
add
pop
jmp
mov
jg
inc
lret
pop
pop
cli
cmp
aaa
push
les
test
stc
xor
xchg
ljmp
sti
pop
in
mov
daa
and
sub
mov
mov
xlat
paddusw
fisttpll
mov
andb
lock
mov
pop
imul
xchg
lret
push
fs
je
les
fsubrl
out
das
rol
loope
jmp
lods
bound
sub
push
jns
es
mov
xor
push
pop
popf
mov
scas
aas
mov
push
mov
stc
sbb
mov
cmp
sub
mov
sub
sbb
stc
imul
mov
mov
data16
add
shrl
sarb
test
mov
int3
and
movsl
sub
mov
mov
mov
pop
xchg
cwtl
jecxz
dec
int3
adc
xchg
cltd
pop
add
add
fistpl
xchg
xchg
out
or
push
add
xchg
fisttpl
jecxz
repnz
enter
stos
mov
cli
mov
loop
adc
imul
sbb
test
js
jns
test
xchg
scas
xor
mov
mov
push
push
pop
pop
arpl
xor
add
sub
adc
inc
lret
cli
shl
loop
daa
mov
push
xor
xor
xchg
jno
lea
cli
mov
sti
icebp
lock
xchg
mov
pop
cli
xor
inc
push
fisttpl
ljmp
pop
pop
cmp
mov
inc
xor
popa
mov
sub
mov
jo
adc
in
sub
jle
mov
adc
pop
mov
jnp
jo
popa
or
sahf
jbe
out
or
lret
inc
mov
ljmp
jns
out
push
cmp
lock
js
int3
pop
adc
pop
sbb
pop
mov
ror
mov
jp
rcrb
idivb
inc
ss
ja
sahf
cld
xor
ljmp
sti
stc
sub
movsb
aas
mov
cli
push
repnz
aaa
ret
push
lret
push
add
test
mov
pop
lret
jp
and
aam
sti
sub
jb
aas
fistl
gs
mov
ja
sub
jne
mov
xchg
mov
mov
mov
sahf
mov
push
incb
xor
pop
jle
or
pop
push
and
repnz
mov
sti
adc
pop
sbb
and
sub
jno
or
add
mov
xor
or
xchg
cmpsb
and
mov
xor
mov
sbb
rolb
or
cmp
test
inc
sbb
push
or
nop
mov
es
push
mov
pop
sub
xchg
sub
mov
cwtl
fnstsw
push
movsl
subb
xor
pop
out
scas
push
cli
xchg
ss
jnp
push
ret
and
or
ljmp
xchg
mov
xchg
mov
nop
or
icebp
push
mov
bnd
int3
mov
push
daa
dec
aas
xlat
or
ret
dec
or
cmc
call
xor
pop
xor
dec
lods
in
mov
push
out
or
pop
jns
in
scas
stc
sahf
sbb
movsb
xchg
jp
stos
call
jecxz
sub
dec
dec
notb
pop
ljmp
or
test
push
iret
lret
leave
dec
aas
ljmp
ret
dec
mov
mov
mov
inc
mov
cmp
arpl
ss
mov
sbb
cmp
cwtl
inc
lds
mov
mov
icebp
add
mov
push
gs
mov
cmp
mov
ds
popf
xchg
sub
clc
cmpsb
and
leave
in
and
movsb
push
fldt
test
xchg
inc
and
scas
jo
mov
jae
mov
xlat
xchg
jp
lods
mov
pop
stos
mov
in
cld
daa
pop
push
xor
rolb
js
or
enter
lea
int3
repz
jno
adc
leave
sbb
xor
jne
dec
xchg
hlt
shrd
and
lret
xchg
daa
incb
lds
sub
pop
jmp
sahf
lret
stos
je
dec
rcll
mov
andb
push
inc
test
jmp
mov
fmuls
mov
cli
inc
sub
in
jge
push
popa
mov
push
push
lret
outsb
movsb
sub
inc
popf
inc
lret
push
cmp
adc
cmp
fdivrs
and
sbb
or
mov
pop
and
div
pusha
in
andb
or
das
and
sbb
jne
lods
xlat
inc
xchg
sbb
jle
es
or
sub
lock
leave
or
je
push
add
inc
inc
cmp
mov
hlt
lcall
push
fwait
dec
aas
xchg
and
push
sub
iret
and
inc
ljmp
push
push
and
mov
add
inc
out
imul
and
das
mov
xlat
es
lret
and
xlat
jne
cmpl
in
sub
push
ficoms
xchg
sbb
pop
fisttpll
fcoml
into
ss
sub
sub
and
movsl
les
xor
bound
sub
into
cmp
jnp
cmc
jp
fimuls
xlat
push
data16
fsubrs
rol
test
arpl
and
sub
lea
xchg
inc
dec
sub
cs
aam
xchg
aas
mov
ficoms
dec
dec
inc
cs
shrb
es
and
insb
and
xchg
and
adc
hlt
clc
mov
out
es
push
inc
jp
fdivs
rol
out
rol
add
and
daa
jno
es
sub
or
inc
mov
push
mov
ret
cli
mov
lock
data16
rorb
cmp
adc
aas
mov
pop
ret
out
pop
add
inc
cld
fldenv
push
outsb
jp
sbb
jle
or
inc
cld
mov
mov
xchg
ds
jp
sbb
inc
cld
stos
fldcw
pop
lret
ds
out
into
into
inc
cld
rcr
fidivrl
fidivrs
sbb
out
into
out
inc
cld
repnz
cli
ds
jp
sbb
out
into
push
inc
stc
adc
idivb
sbb
lret
pop
aas
fcoml
jle
outsb
and
movsb
cmc
scas
jg
fisubrs
aam
mov
lcall
fisubl
idivl
sahf
inc
frstor
mov
cli
out
add
dec
lret
push
call
mov
xlat
and
xor
clc
xor
jle
cli
jb
out
adc
xlat
push
js
mov
jle,pt
stos
sub
movl
rcrb
loop
movsl
cli
dec
mov
std
not
xchg
xchg
push
sbb
ds
cli
sub
lcall
cmp
dec
xlat
dec
mov
fsubs
cmp
stos
fnstcw
adc
sub
mov
mov
cli
xorl
jp
fdivrs
cmp
ret
ds
cli
lcall
test
clc
into
fldenv
inc
jae
sar
cmp
popa
mov
fidivrl
std
pop
xlat
cmp
lcall
sbb
clc
out
mov
ds
fsubrs
cmp
mov
idiv
sub
inc
fsubrs
or
ds
and
mov
jb
ss
ja
or
std
push
xlat
gs
push
jb,pt
push
fcoms
test
adc
aad
fcomps
scas
xlat
mov
xor
mov
sub
mov
sub
and
movsb
dec
cmp
aad
and
sbb
fistl
mov
pop
std
lods
arpl
pop
xchg
ret
jbe
orl
sbb
lds
pop
sub
lret
cmp
fnsave
in
pusha
aas
sub
cmpsl
je
popa
sub
jle
das
sti
stos
sbb
lcall
fs
mov
xchg
sbb
xor
inc
aam
pop
fcom
das
or
cmpsl
sub
push
rcrb
sbb
pop
push
adc
lretw
or
mov
and
pop
push
ret
mov
mov
loop
cmp
cmp
rol
pusha
adc
pop
out
or
sub
orl
push
sti
pop
movsb
mov
das
add
or
adc
jg
aam
push
inc
pop
and
mov
das
or
test
pop
push
ror
stc
movsl
clc
mov
sub
lret
or
movsl
aas
add
jb
es
leave
sbb
pop
sbb
push
jae
xchg
pop
lods
ljmp
sub
into
sahf
out
sbb
imul
jle
or
and
in
push
std
aad
pop
add
sbb
test
cmp
push
push
add
xlat
outsb
mov
int
mov
fidivl
sahf
and
ror
shrb
lcall
into
pop
push
xor
sahf
cmp
xlat
push
add
fstpl
in
test
js
adc
frstor
stc
mov
xchg
sbb
inc
testb
push
cltd
iret
add
cmp
outsb
and
ss
inc
fdivrs
mov
mov
inc
ds
les
cmp
testl
add
rcrl
cld
sub
call
adc
pop
js
imul
mov
push
lahf
xlat
fisttpl
lahf
sbb
fadds
movl
mov
lea
fsubr
aaa
pop
push
push
ss
inc
jp
sub
pusha
push
mov
outsl
lcall
mov
sar
ss
dec
sti
shll
aad
nop
lahf
xlat
cli
pop
into
fiadds
mov
mov
iret
aam
push
xor
mov
scas
mov
out
cli
cmp
add
push
sbb
mov
mov
ror
xchg
sbb
push
nop
mov
adc
shrb
call
push
ljmp
or
dec
loopne
push
sahf
fdivrl
cltd
dec
in
dec
mov
mov
inc
xchg
or
jmp
pusha
push
mov
sub
push
fidivs
out
xchg
cltd
inc
daa
cmpsl
into
loop
into
movsb
ss
mov
mov
push
cmpsb
repnz
lret
push
filds
ds
mov
inc
repnz
mov
dec
pop
mov
shrb
xchg
cmpsb
fadd
or
add
es
push
cs
jbe
cli
loope
int
pop
stc
ds
mov
in
inc
rcrl
cmp
mov
mov
cmp
ss
lahf
cmpsl
aad
enter
push
dec
sti
mov
call
adc
cmpsb
call
mov
je
test
scas
mov
out
fucomi
sbb
scas
ss
cli
mov
xchg
mov
es
ret
adc
mov
pushf
cld
clc
sub
lds
pop
sbb
inc
inc
xor
bound
push
xchg
rol
inc
adc
lock
jg
rcr
loope
add
cld
mov
out
repnz
fucomi
inc
xlat
push
mov
pop
enter
pop
xor
enter
xchg
cmp
mov
out
loope
ret
adc
inc
sub
jmp
repnz
mov
ljmp
xchg
movb
push
mov
rsm
in
ds
cmp
sbb
inc
cmpsb
add
mov
inc
aaa
fildl
out
call
out
mov
int
fcmove
flds
cmc
push
mov
loope
xlat
int3
sbb
push
push
dec
decl
iret
mov
push
push
or
or
mov
cmp
pop
add
mov
adc
or
xchg
mov
and
loope
shlb
cmp
adc
or
roll
rcrl
add
jle
lret
aam
mov
cmpxchg8b
pusha
cwtl
aad
and
fsubl
pop
call
xor
pop
push
leave
or
mov
sahf
stc
inc
mov
mov
pop
xchg
fnclex
xlat
int3
mov
mov
push
inc
fadds
fdivrs
mov
xchg
insl
lret
jno
outsl
mov
clc
dec
xchg
nop
sub
aaa
loop
and
xor
sbb
xchg
fmuls
mov
fisttpl
pop
sub
xchg
into
xchg
sbb
fidivrs
sti
jo
fadd
leave
add
out
pop
mov
sahf
sbb
add
adc
adc
popf
fnstsw
aad
daa
stos
mov
push
mov
fidivrs
ficoml
push
loop
repz
mov
pop
sti
das
in
out
jle,pn
xchg
fmul
lahf
adc
push
call
add
sahf
or
mov
lahf
js
or
fcmovnu
mov
or
or
jle
pop
pop
xor
mov
sub
jecxz
sbb
push
fcoms
in
fcmovne
inc
xchg
scas
jo
or
jg
inc
rolb
movb
fidivrl
sbb
sbb
dec
pop
mov
cmpsb
mov
out
push
stos
dec
fdivr
scas
mov
es
dec
ficoml
cmp
xchg
jmp
push
negb
sti
mov
xchg
cmp
sub
cmpsl
ss
pop
adc
or
aam
jmp
xlat
loopne
xchg
add
or
test
mov
out
scas
in
adc
add
jb
jle
fstps
sub
jle
jo
test
mov
push
fcmovb
cmpsb
xchg
mul
ficompl
lock
add
in
es
dec
icebp
fcompl
push
lcall
fnstcw
cmp
add
or
jp
test
and
add
das
cmp
add
in
mov
cs
ret
dec
leave
clc
mov
cmpsl
inc
loop
push
inc
mov
test
sti
lods
out
es
dec
inc
sbb
test
xchg
fcoml
les
inc
ret
aam
cld
iret
les
jge
xchg
jp
stos
lods
jle
add
iret
out
mov
pop
push
cmc
loop
push
push
cmpb
cmc
stc
shll
cmpsl
mov
mov
jo
out
mov
mov
pop
pushl
ds
mov
cs
loop
lahf
cwtl
int3
fsin
jae
inc
fs
notb
jl
jle
push
sbb
enter
mov
jnp
push
dec
jb
mov
out
lock
push
sbb
inc
idivb
inc
and
inc
jb
stos
repnz
push
lods
adc
fmuls
pop
mov
ljmp
inc
mov
inc
xchg
inc
mov
mov
filds
and
fsubrp
aas
cmp
push
add
lea
inc
push
repz
cmp
and
movb
fxch
nop
xor
lret
andl
or
fcmove
shl
repnz
clc
iret
jp
push
mov
push
std
pop
dec
ja
ret
rcll
aad
cld
roll
bound
lock
mov
xchg
sub
jg
ds
negl
in
leave
ret
imull
push
jmp
cld
pop
fstps
leave
dec
push
repz
mov
lea
dec
mov
fmul
push
cmp
inc
dec
mov
sbb
sbb
lock
loopne
test
cli
loop
jle
xor
mov
in
push
push
xor
out
out
pop
push
in
inc
call
jge
lcall
into
data16
push
inc
mov
outsb
std
inc
lods
lock
push
out
mov
push
and
ror
out
mov
fcomp
iret
add
xlat
ret
in
inc
jbe
mov
xchg
out
cmpsb
divb
imul
mov
fimuls
inc
cmpsl
rolb
stc
pop
lods
or
mov
dec
in
push
xor
stc
sbb
cmpsl
push
mov
aaa
mov
sbb
mov
mov
data16
jae
cmp
outsb
popa
mov
mov
decb
inc
data16
rcrl
fstpt
cmp
inc
mov
lahf
mov
out
bound
jae
mov
jp
dec
cmpb
push
sti
jb
andb
cmp
sbb
jle
cmp
pop
or
inc
inc
jecxz
jmp
leave
les
jp
mov
stc
sarb
dec
pop
pop
mov
cmp
dec
divb
cwtl
inc
sar
sbb
lods
das
cmp
pop
sbb
cli
dec
mov
in
mov
in
dec
and
es
jle
dec
inc
lods
mov
mov
xor
mov
pop
dec
fmuls
cli
dec
inc
cmp
fistl
fs
inc
jle
es
outsb
dec
scas
cmp
notw
lock
and
sbb
add
repz
aad
cltd
or
shll
shlb
sbb
aam
add
lret
sbb
push
mov
fadds
sar
pop
jbe
xor
pop
ret
sub
popa
stos
pop
imul
jmp
sbb
inc
cs
enter
adc
fimull
mov
jg
hlt
push
add
push
mov
pop
add
and
dec
les
add
xchg
inc
dec
fdivl
sti
add
cmp
sub
aaa
mov
fists
inc
loopne
xlat
loope
fidivrs
or
mov
cmpsl
loop
ret
sub
sub
imul
or
sahf
xor
dec
fnsave
add
enter
sbbb
je
xor
or
mov
in
call
fmul
add
aam
mov
in
ljmp
in
in
adc
out
jo
out
adc
lock
lret
sbb
fimuls
adc
jp
add
das
jb
dec
fimull
fimull
push
sub
dec
pop
aaa
dec
int
scas
cmc
ja
ret
es
xchg
xlat
testb
int
stc
in
cli
adc
xlat
cld
sub
std
ja
jbe
mov
or
testl
repnz
mov
sbb
lods
jne
mov
scas
outsl
in
rclb
lret
push
mov
xor
lret
data16
pop
push
stc
aam
or
adc
icebp
lret
pop
mov
es
mov
ret
rolb
jle
or
and
sbb
add
or
push
clc
aas
les
xchg
xchg
rclb
sub
ss
push
or
xor
rcr
add
mov
xchg
sub
xlat
lds
mov
enter
adc
lret
and
int3
imul
int
inc
into
jno
iret
scas
rol
pop
ror
jp
loope
rorl
inc
aam
aad
scas
shrb
shl
xor
es
xchg
or
lcall
adc
and
fsts
ficompl
shrl
sbb
in
fisttps
adc
loopne
sti
loope,pt
adc
sbb
std
cmpsb
or
popf
sahf
in
aad
inc
jecxz
xlat
in
insb
add
in
xor
sub
push
cmc
mov
or
and
sti
mov
faddl
fdivrl
and
jns
insl
pusha
adc
fcmovne
pusha
mov
mov
loop
cmpsb
push
cli
movsl
xor
movb
loop
daa
dec
ss
mov
jb
mov
mov
push
into
dec
dec
sbb
mov
call
jle
push
jle
sbb
cmpsb
add
out
in
mov
clts
dec
mov
add
mov
pop
mov
sbb
fildll
mov
or
sub
enter
cmp
and
and
outsb
lret
stos
cmpsb
cli
int3
pop
iret
lret
dec
mov
out
cli
inc
push
out
or
sti
inc
mov
adc
loopne
cmp
push
mov
inc
jp
mov
loopne
bound
jg
insb
shlb
mov
rcrl
mov
mov
sbb
mov
movd
int3
cmp
push
iret
test
mov
scas
fdivrs
mov
cld
push
mov
sbb
inc
push
aam
mov
mov
xchg
mov
xor
mov
inc
pop
notb
mov
iret
cli
adc
into
mov
mov
cmpsb
or
xor
lds
sbb
mov
loopne
in
mov
repnz
sub
andl
jle
fwait
pop
inc
sub
cmpsl
idivl
pop
aas
inc
sbb
sub
or
jnp
leave
arpl
jne
shr
out
mov
imul
dec
adc
into
stos
ja
and
or
sub
rorl
rcrl
cli
aam
loope
ds
int3
cmpb
xlat
lret
sbb
and
ds
mov
jle
or
clc
fcompl
shrb
jle
or
loop
xlat
jecxz
clc
in
in
shrl
jp
in
jmp
xlat
jmp
cld
in
jnp
rcrl
rol
or
push
sbb
and
fwait
in
cmp
lcall
and
aad
das
mov
cli
mov
mov
inc
jmp
mov
push
stc
aad
push
iret
cmp
mov
fstps
xor
es
mov
mov
jae
mov
dec
push
movsb
mov
adc
test
lret
push
imul
inc
jbe
inc
mov
sbb
dec
popf
and
push
mov
fcmovbe
cli
lret
cs
fsubrs
xchg
mov
fcmovbe
push
pop
fadds
dec
call
fnstcw
inc
in
add
loopne
lds
push
enter
je
movb
jg
fistps
cltd
daa
sub
add
or
leave
push
pop
sub
cmp
stc
dec
inc
and
cli
lock
inc
int3
mov
imul
cli
into
xor
shrb
cmp
rol
push
inc
aam
fst
fwait
pop
xchg
shrl
cli
fdiv
inc
fsincos
daa
fcmovb
add
sub
inc
fstpt
scas
xor
faddl
scas
or
fisubs
or
loopne
loope
xchg
rcrl
lcall
out
xlat
out
clc
call
xchg
lret
and
fnsave
fisttpll
sub
shrb
pop
xchg
cmp
mov
popa
mov
cmp
and
repz
and
fisubrs
sbb
iret
and
xchg
push
inc
es
dec
nop
cmp
adc
inc
cmpsb
add
bound
push
repnz
pop
cmp
adc
adc
push
addb
and
lret
pop
jg
hlt
in
leave
stos
fistps
xchg
stc
fisubrs
rorl
sti
mov
iret
xor
jecxz
aaa
adc
pop
or
pop
mov
lods
and
repnz
popl
aad
adc
and
add
lock
mov
iret
mov
call
mov
test
lds
aad
xlat
mov
xlat
mov
les
hlt
push
mov
frstpm(287
jg
scas
lds
frstor
popa
sbb
mov
test
hlt
repnz
xchg
mov
loope
jg
or
adc
in
clc
in
out
das
out
inc
cwtl
call
inc
sahf
ljmp
int
in
loope
out
adc
pop
jb
out
outsb
push
or
ds
shrb
add
mov
mov
ds
sbb
pop
out
add
mov
inc
mov
testb
jp
out
fs
repnz
mov
in
fildll
das
sbb
mov
out
cmpb
into
xor
loop
ds
adc
arpl
mov
mov
add
ret
pop
lret
push
movsb
fldt
mov
mov
es
outsb
push
cmpb
cld
push
in
jo
pop
ja
add
fistps
ret
add
lret
int
mov
xchg
sub
pop
hlt
cmc
leave
cmp
stos
inc
xor
out
loope
jo
jmp
imul
mov
cld
mov
lahf
mov
jno
mov
sub
inc
leave
int3
gs
mulb
or
popa
mov
cmp
fidivl
xchg
call
lret
push
gs
std
stc
rolb
xchg
sarb
out
push
scas
cmc
push
shlb
or
bound
sbb
iret
fiadds
pop
enter
sti
add
and
mov
jmp
clc
push
jb
adc
push
popa
cltd
popf
cwtl
push
cld
or
add
push
dec
ret
or
jge
leave
inc
jno
insb
lds
mov
cld
lahf
mov
stc
cmp
loope
lea
int
ret
loopne
jg
xchg
jg
jne
jl
cmpb
mov
cmp
test
jns
insb
xchg
xor
inc
xlat
mov
jne
xchg
hlt
and
sarl
mov
push
mov
aad
xor
mov
iret
sti
jne
mov
sti
push
std
adc
into
push
sbb
push
cwtl
ds
push
stos
jo
sub
push
pop
daa
mov
sti
sub
dec
dec
aad
push
call
push
ret
push
adc
shll
jo
ljmp
cmc
stos
in
dec
push
mov
mov
loopne
and
jo
lret
mov
repnz
cmp
enter
stc
add
add
jo
ficompl
into
std
mov
lds
push
rolb
fwait
sub
mov
insl
xor
cmp
xor
push
or
dec
loopne
mov
dec
fbld
mov
adcb
jae
ret
dec
cmpsl
jo
jmp
dec
popf
adc
js
div
xchg
push
sub
inc
sub
pushf
xor
xchg
pop
mov
mulb
sahf
fsts
movsl
sti
insb
dec
fadds
or
cmp
ret
push
inc
sbb
xor
or
push
sub
fstps
ret
repz
push
pop
push
xchg
in
mov
es
vandps
out
test
add
adc
inc
or
mov
jle
sbb
fadds
test
dec
jo
fdivrl
rcrl
jmp
ss
push
ret
aad
mov
mov
push
sbbb
dec
or
mov
aas
outsl
adc
ret
or
sbb
pusha
cwtl
lock
pop
mov
mov
fidivl
insb
mov
push
mov
add
ret
je
icebp
fimull
clc
addr16
rcl
inc
cli
and
mov
jnp
insb
add
jp
ss
imul
mov
aad
cmpsl
bound
adc
in
and
cmc
pop
shlb
arpl
push
sarl
idivl
fistps
inc
jl
iret
mov
cltd
xlat
les
sahf
or
inc
sti
sqrtps
pushf
mov
das
shrl
cmp
in
js
int
xchg
push
imul
add
xchg
adc
xchg
sub
out
stc
insl
scas
cmp
popa
ret
xchg
ret
jp
mov
mov
fwait
loope
mov
rcr
xor
jle
push
dec
inc
into
push
xor
add
sbb
fmuls
lea
fldl
or
sub
mov
inc
add
jecxz
pop
xor
es
inc
js
sub
xlat
fdivrs
popa
mov
cli
addr16
xlat
jo
dec
ficoml
jmp
cmpsl
lea
inc
leave
ret
sub
dec
push
or
int3
fisubrl
cmc
pop
push
push
cmp
cwtl
inc
out
mov
int3
inc
xlat
xor
or
dec
pop
int3
sub
stc
roll
jl
cmpsl
aam
xor
mov
ljmp
movsb
cmp
clc
les
test
cmp
popa
lret
adc
addr16
jo
call
mov
out
sbb
pop
shl
outsb
push
fdivrp
inc
aam
lcall
mov
jge
outsb
inc
jp
sahf
imul
or
mov
xor
loopne
mov
ss
push
cmpsl
nop
add
rcrb
pop
lds
testl
xor
scas
push
fcmove
jns
cmp
insb
ss
rcl
push
les
inc
stc
push
fnstsw
xor
insl
cmp
lds
cmp
lods
inc
xor
fbstp
imul
mov
add
ficompl
sahf
push
adc
or
jnp
lods
loopne
mull
mov
xchg
movb
icebp
dec
xor
fmull
sbb
loope
add
int3
add
mov
icebp
mov
stos
add
mov
stc
sub
repnz
adc
xchg
test
cld
or
stos
outsl
pop
mov
ror
adc
lahf
fnstcw
rol
pop
out
mov
mov
js
push
cmp
or
xchg
out
dec
or
rclb
mov
or
dec
mov
or
out
icebp
test
xor
cs
inc
clc
add
mov
aam
dec
push
outsl
mov
mov
pop
loop
push
stos
push
dec
lcall
pop
lret
push
std
into
outsb
andb
fcmovnbe
out
mov
movsb
daa
mov
or
sbb
jp
cmp
out
jmp
xor
add
and
stc
lock
push
mov
cmpb
and
cmc
mov
lock
cmp
test
out
and
orb
fisubs
ret
mov
or
xchg
dec
jp
xchg
dec
pop
xor
in
cld
pop
mov
xchg
imull
xchg
push
push
movsb
repnz
fmuls
cli
push
lock
sbb
enter
sub
out
lcall
insl
inc
pop
mov
or
and
sub
sbb
mov
lret
loopne
xchg
jl
sub
adc
xchg
loopne
mov
dec
call
push
inc
shlb
mov
push
mov
or
in
cmp
hlt
pop
idiv
fldl
ss
sar
nopl
sbb
xor
sarl
ss
out
adc
dec
lock
lret
xorl
jae
mulb
je
adc
inc
mov
jo
iret
std
add
lods
shl
mov
testb
push
int3
jecxz
xchg
out
rcrl
add
lcall
stc
or
xor
mov
jl
fmul
mov
xor
fdivrs
push
ss
jns
pop
cmp
push
xchg
orb
xchg
out
repz
dec
inc
enter
out
pushl
clc
and
xchg
and
shrb
inc
aas
jp
mov
xor
jecxz
jp
or
add
outsl
xor
ds
inc
mov
divb
call
mov
cmpsl
movsb
mov
inc
rol
add
or
cwtl
push
fmulp
lahf
push
cli
cwtl
lock
aaa
or
or
ds
cli
int
fcoms
push
or
push
inc
lret
int3
ds
mov
inc
mov
mov
or
inc
dec
stc
cmp
out
dec
hlt
inc
push
or
jg
cld
xor
imul
imull
inc
jnp
adc
pusha
ret
cmp
data16
push
loopne
mov
fidivrl
push
push
movsl
outsl
sbb
push
xlat
lret
sarl
mov
fcomp
xchg
loop
adc
ljmp
mov
add
insl
pop
xchg
dec
xchg
mov
lret
mov
mov
lahf
push
push
cmpl
dec
imul
cwtl
pop
clc
lret
jno
call
ud0
inc
push
cmp
sbb
cmp
faddl
and
add
mov
fmuls
popf
inc
rcrb
or
subb
mov
inc
push
in
test
mov
push
sbb
or
push
jno
ror
stc
jle
mov
ror
das
andb
notl
cmpsl
iret
inc
popl
fcmovb
enter
cld
push
insb
inc
clc
or
push
inc
clc
mov
sarb
in
mov
std
and
pop
inc
cmpsl
mov
mov
push
adcb
dec
push
jnp
or
negl
arpl
mov
cmp
cli
shl
dec
imull
lret
mov
mov
dec
sub
sub
inc
cmpsl
mov
lret
push
rcl
sarl
mov
jmp
mov
loopne
mov
sbb
fisubl
fs
std
adc
cmp
sar
in
enter
lods
dec
fdivs
outsl
ror
push
outsb
pop
or
notb
bnd
push
jns
adcb
jge
jmp
push
lahf
pop
inc
mov
inc
rcrl
or
pop
ds
cli
rolb
mov
mov
or
cmp
lret
sbbb
pop
lcall
mov
aas
adc
mov
call
arpl
icebp
mov
jbe
lock
jae
fistpll
pop
mov
loope,pn
test
inc
jmp
mov
pop
enter
loope
dec
mov
shll
mov
jo
rcr
addr16
lock
sub
inc
cli
aam
or
mov
in
loope
movups
and
jmp
sarl
psllw
fnstcw
stc
sub
xor
insl
int3
xlat
adc
pop
orb
cld
stc
cmp
imul
mov
cs
test
xlat
inc
loope
adc
fwait
mov
jl
sti
xchg
cmpsl
cmpsb
inc
xchg
inc
sub
sbb
sub
icebp
push
add
add
cmp
mov
and
icebp
xor
aas
adc
xor
dec
add
inc
nop
fistpll
call
les
mov
mov
mov
inc
push
sub
pop
jge
test
mov
mov
pop
pop
inc
test
jno
fstl
std
pop
inc
cmp
mov
xor
cmp
scas
mov
dec
sahf
mov
sbb
std
sbb
test
mov
inc
add
pop
int
shlb
push
pop
pop
cld
mov
dec
insb
jmp
out
mov
ret
loopne
js
cmp
sti
cld
or
cs
adc
ss
sbb
adc
dec
aas
aas
fs
pop
icebp
sub
adc
out
sub
aaa
sbb
daa
mov
xor
imul
add
bound
sub
adc
std
stos
jmp
clc
loop
mov
mov
fsts
sbb
dec
lods
and
stos
xchg
iret
cmp
cmp
pop
sub
xchg
in
iret
mov
js
lods
stc
fistl
out
dec
pop
xor
adc
inc
clc
mov
ljmp
pop
in
jecxz
or
jno
jne
arpl
fldpi
enter
cmpb
adc
lret
sahf
fidivs
sti
out
mov
loop
xor
add
xchg
xlat
mov
in
xor
icebp
cmp
scas
jne
js
xchg
fldenv
add
fdivrp
push
xlat
ret
sbb
inc
les
out
mov
ds
dec
jmp
fidivl
cmp
dec
fisubs
mov
jo
or
jns
leave
push
cmpsb
jge
out
icebp
adc
pop
push
lret
fmul
popa
mov
or
inc
inc
xchg
xor
loopne
jmp
or
cs
cld
cs
in
aam
cli
out
jo
sbb
rcll
out
sbb
pop
mov
enter
mov
jno
inc
mov
lds
pop
sahf
in
or
faddl
inc
icebp
lods
xor
mov
cld
mov
xchg
mov
mov
mov
dec
mov
mov
push
in
enter
test
ja
sbb
jno
add
inc
sbb
mov
dec
push
ret
mov
scas
sahf
dec
sarb
outsb
pop
dec
pop
add
inc
xor
or
in
add
adc
jecxz
into
mov
sahf
sub
xchg
inc
fwait
mov
js
dec
aam
hlt
add
inc
dec
xchg
cmpsl
mov
xor
sti
scas
addr16
mov
cld
data16
ret
ljmp
enter
test
pop
adc
negb
and
lret
or
je
idivb
clc
je
shrl
add
subl
mov
enter
pop
mov
jl
je
sub
clc
or
fisubrs
sbb
in
shlb
test
out
cmp
data16
xchg
aam
jnp
inc
mov
sub
mov
out
xchg
clc
push
add
scas
inc
mov
push
mov
pop
cli
sarl
sahf
add
or
or
stos
push
or
push
cmp
sub
fimull
xor
jo
and
fnstsw
inc
cmp
sub
pop
jge
jp
imul
std
repnz
mov
and
mov
mov
sub
stc
pop
cmp
call
scas
mov
rcrl
mov
mov
adc
test
rcrl
mov
inc
scas
clc
adc
scas
push
insb
lcall
mov
jo
xchg
pop
loope
jae
or
mov
sbb
icebp
xchg
test
scas
dec
xor
mov
dec
jno
pop
cli
sub
and
push
cli
or
movsb
in
out
rorl
into
sahf
mov
les
lret
sbb
add
repz
sbb
call
pop
cmp
cmp
jno
shll
inc
fidivs
mov
xchg
push
sarl
mov
mov
jge
sbb
les
repz
mov
xlat
inc
jo
add
and
adcl
mov
xchg
inc
sarb
xor
cmp
cmpsl
int3
inc
xor
out
roll
inc
pop
iret
mov
cmp
or
jle
mov
js
loope
fsubr
inc
sub
cmpsb
mov
cmp
aas
inc
pusha
int3
inc
or
dec
cld
xlat
fwait
mov
dec
xor
stos
push
hlt
call
sbb
adc
clc
jbe
adc
iret
rclb
pop
inc
push
add
sti
mov
push
jo
sahf
add
or
inc
and
clc
jecxz
push
nop
jle
pop
sbb
or
inc
aam
push
out
sub
adc
scas
pop
ret
lock
pop
mov
sbb
lds
xor
sbb
xchg
ret
in
inc
fcmovnu
xor
push
xchg
rolb
push
cwtl
popa
pop
iret
imul
push
cmpsl
ja
push
loopne
sar
push
out
ljmp
xchg
ds
test
mov
add
data16
ljmp
ror
pop
clc
push
lret
dec
ds
jecxz
ljmp
and
add
subl
cli
push
ficoms
in
nop
push
sarl
sti
sub
mov
repz
sub
sahf
mov
icebp
mov
in
sbb
iret
js
mov
popf
int3
add
push
or
lret
cmp
inc
add
js
stos
push
mov
cmpsb
jg
adc
gs
and
xor
sub
xchg
ds
cmp
or
fnstenv
mov
mov
cmp
mov
xchg
xor
dec
dec
or
dec
out
jns
pop
mov
into
add
jp
cmpps
pop
lods
out
push
jl
cmp
cmp
out
stc
xchg
and
imul
in
or
icebp
mov
mov
leave
jns
addb
push
out
sbb
mov
xor
or
mov
pushf
aad
imul
xor
aas
test
repnz
lea
push
cmpsl
loope
sub
inc
out
inc
jo
and
ret
cmp
cmp
ljmp
cltd
add
fnsave
nop
mov
sub
hlt
jae
sbb
into
hlt
rolb
popl
outsl
or
mov
into
sarl
aas
je
icebp
add
or
ljmp
jecxz
aas
cmp
add
or
or
popa
popf
into
es
sub
fildl
sub
fmuls
cmpsb
mov
insl
jbe
mov
push
jg
aad
ret
cmpsb
sbb
js
mov
stos
loope
fistpll
xor
push
sbb
jp
test
mov
loop
bound
insb
lret
push
sub
into
mov
jg
movsl
out
cs
inc
sub
test
cmp
push
decl
fidivs
xor
sub
mov
movsl
aas
stos
scas
inc
je
sub
sbb
arpl
push
les
sbb
mov
sub
mov
cmp
sahf
rcll
jmp
test
mov
ret
mov
pushf
fcmovnu
cmp
inc
int
outsl
jmp
dec
aam
enter
bound
or
js
xchg
mov
test
push
out
pop
sti
cli
sub
int
push
pop
mov
add
pop
or
aaa
std
push
ret
enter
pop
or
mov
loopne
call
aam
xchg
push
aam
push
out
call
mov
cmp
xchg
addb
jl
add
inc
mov
inc
push
pusha
pop
cmpsb
stos
mov
rclb
stc
lahf
sbb
aaa
out
pop
shl
push
mov
or
push
fidivrl
outsb
dec
push
stos
pop
leave
ja
mov
cli
movsb
test
fsubs
das
jl
pop
mov
out
rcrl
add
mov
les
sahf
movsl
mov
iret
stc
mov
cli
outsl
repnz
imul
jmp
movb
fdivs
cmp
lret
loopne
into
sub
fisubl
mov
jp
pop
int3
repz
and
int
cmp
cltd
int
dec
scas
icebp
mov
out
aad
mov
addl
in
cmp
movsb
xor
add
mov
cmp
pop
xchg
outsb
unpckhps
and
sahf
ja
push
xchg
jp
pop
adc
mov
fsubp
setle
dec
mov
cmpsb
mov
pop
cmp
mov
mov
pop
pop
icebp
jp
jnp
ret
fadd
push
push
movsb
test
mov
mov
jp
add
std
rcr
lret
aas
push
mov
clc
mov
push
sub
pop
sbb
call
xor
dec
dec
inc
adc
into
rorb
loopne
or
mov
dec
cli
aaa
mov
aas
jmp
pop
cmp
mov
jge
lret
mov
rcrb
push
add
jecxz
add
cmpsl
cli
lock
jbe
ds
push
pop
and
add
inc
xor
fadds
add
mov
sbb
push
mov
outsl
dec
subps
cmp
xchg
or
mov
clc
or
cwtl
add
mov
sub
push
loope
sbbb
lret
lcall
inc
in
jle
ljmp
adc
roll
sub
inc
std
mov
cmp
repnz
fldenv
xchg
and
aam
inc
push
add
loopne
mov
jecxz
test
aas
insb
adc
mov
mov
jp
lods
clc
mov
insb
cltd
jae
imul
pop
cmpsb
ljmp
int
mov
int3
rorb
out
mov
xchg
lds
add
xor
rcr
iret
cs
loopne
enter
ljmp
lock
mov
or
jp,pn
or
sbb
and
loopne
jp
test
fmuls
lods
mov
loop
pop
add
cli
adc
imul
push
adc
and
mov
push
daa
out
fidivrs
pop
lahf
andb
push
stc
mov
std
and
adc
lock
rcr
fildll
xor
into
sbb
mov
adc
or
xlat
add
dec
lcall
leave
push
sbb
ljmp
imul
and
icebp
jp
cmovl
fadd
cmp
mov
push
lock
idivl
add
int3
sahf
roll
or
adc
cmpsl
out
cmpb
adc
jno
dec
shrl
and
aad
int
push
mov
cli
rcr
inc
mov
dec
push
stc
and
jnp
insb
stc
sbb
loop
roll
jbe
fidivl
cmpsb
mov
dec
mov
fadd
xchg
xchg
aas
js
mov
sahf
or
call
aam
push
add
inc
xlat
inc
popf
dec
loop
ret
dec
inc
sub
add
inc
xchg
out
jne
movl
cmp
loope
sti
fcmovnbe
shrb
lock
push
xchg
push
xchg
pop
cltd
jge
loope
test
sti
std
sti
dec
ja
pusha
cmpsl
cmp
jb
testb
call
addr16
sahf
jp
loop
orb
idivb
in
insb
sub
sti
xor
or
jle
stc
dec
or
xchg
adc
adc
mov
cmp
xor
or
mov
fstps
inc
aam
mov
add
push
in
out
clc
lcall
cmp
sahf
xchg
loope
cli
xchg
movsb
es
jg
scas
or
mov
pop
inc
lahf
pop
cmp
pop
cmp
dec
and
test
repz
mov
or
rolb
pop
mov
adc
lea
out
or
bound
or
adcb
mov
inc
or
inc
xchg
ja
aad
sti
int3
push
mov
lds
scas
test
enter
lea
lock
pop
sbb
cmpsl
ret
bound
mov
clc
out
scas
sti
test
ljmp
dec
jnp
mov
pop
adc
push
rcrl
xor
mov
fstpl
into
out
pop
loop
mov
sti
or
inc
scas
lcall
inc
lret
xchg
es
daa
ljmp
loop
and
fimull
rolb
push
pop
in
sti
cmp
sub
add
mov
pop
adc
push
push
sbb
mov
xorl
xchg
xchg
mov
inc
mov
pop
cmp
cltd
pushw
add
cli
sahf
scas
dec
xor
mov
rcrb
sarb
js
mov
push
jmp
hlt
call
jge
sub
xchg
push
stos
mov
aas
sahf
test
test
cmp
test
stos
mov
rcl
fidivs
mov
push
or
shll
mov
stos
fistl
xchg
jb
movsl
inc
cmp
cmp
clc
loope
addr16
rorl
dec
lret
or
outsb
add
mov
cld
mov
pop
push
rolb
push
add
sub
or
or
add
out
add
ljmp
push
das
mov
fdivrp
jns
and
pop
mov
jb
sub
icebp
pop
sbb
mull
pop
repnz
sub
inc
inc
out
loopne
pop
sub
dec
cli
cmp
pusha
pop
aas
cmp
push
into
std
push
and
jnp
lret
pop
js
pop
push
or
mov
fcom
pop
outsl
dec
add
push
pop
es
push
xorl
aas
and
icebp
add
and
jle
clc
sub
and
divl
sub
inc
dec
add
pushf
or
cli
fs
notb
add
test
push
popf
add
and
push
stc
pop
sbb
xchg
dec
inc
clc
leave
xchg
or
movsb
ljmp
ret
adc
nop
or
rcrb
sub
push
repnz
pop
push
inc
jo
insl
sub
xchg
out
nop
inc
int
mulb
aaa
cli
pop
sub
add
mov
inc
or
sbb
ret
push
out
mov
mov
push
dec
stc
jae
push
bound
loop
or
mov
pop
stos
gs
mov
out
std
and
mov
cmp
xchg
stc
sub
ljmp
clc
dec
mov
pop
sub
mov
fs
data16
dec
aaa
arpl
jmp
fdivs
lcall
cld
outsl
cld
pop
mov
test
push
pusha
ret
sar
pop
sub
lds
and
pushf
sbb
icebp
lea
negb
sbb
fidivrl
add
sub
ja
das
or
sub
sub
mov
lock
inc
popa
es
adc
mov
aad
enter
loop
rolb
xor
lock
addr16
add
mov
inc
into
xor
sbb
and
push
push
xor
mov
cmpsb
sgdtl
and
loop
rorb
loop
ljmp
cmpsb
in
mov
ds
pinsrw
xchg
pop
lret
lret
in
pop
sub
nop
xor
cwtl
pop
enter
aad
ffreep
sarb
das
leave
sub
xchg
ljmp
xor
jb
pop
into
fbld
jl
or
mov
fdivs
call
xorb
enter
cmp
pop
mov
cli
lds
arpl
stc
das
mov
mov
je
cmp
dec
lods
push
lcall
repz
cmp
rcl
adc
mov
sahf
subb
loopne
testb
inc
inc
ret
jns
into
pop
inc
cmpsl
out
subb
sar
push
mov
loope
int
loope
pop
stc
daa
xchg
mov
push
popa
ficomps
jle
int3
xchg
sub
add
cli
stos
loope
sub
shrb
scas
xchg
xchg
mov
pop
out
cmpsl
or
pop
repz
imul
lods
push
xchg
add
arpl
cmp
in
shlb
push
sbb
dec
push
sti
outsb
sahf
aam
in
cmp
push
dec
or
pop
rcl
dec
mov
das
add
push
int3
popa
inc
adcb
push
les
int3
lock
iret
stc
cli
xchg
imul
and
or
sub
xor
and
or
dec
test
in
sub
pop
insb
mov
jg
subb
js
sub
das
lods
xchg
xor
xlat
dec
jle
nop
rolb
ljmp
pop
mov
lds
ds
and
dec
or
int
pop
rcrb
inc
mov
add
aam
bound
inc
inc
push
rorb
lds
or
cltd
scas
dec
inc
jle
ret
mov
sahf
or
js
es
dec
mov
push
xchg
add
mov
push
sahf
int3
dec
testb
dec
cmp
outsl
inc
cmp
movb
xchg
scas
es
fcoml
daa
and
scas
pop
dec
xchg
iret
mov
loope
cmp
into
ds
dec
push
in
inc
xor
fimull
push
mov
lods
xchg
dec
es
dec
mov
mov
ret
inc
mov
mov
pop
in
sti
cs
fsub
pop
pop
pusha
mov
clc
adc
mov
pop
push
fnstcw
push
stc
mov
pusha
pop
nop
add
leave
lret
jp
loope
lret
adc
mov
enter
les
mov
cwtl
and
pop
xor
int
cld
clc
jae
pop
enter
xchg
pop
cmpsb
xchg
pushf
dec
dec
scas
inc
scas
iret
aad
arpl
repnz
rclb
out
mul
addr16
mov
adc
pop
dec
repnz
push
inc
or
inc
sub
aaa
fsubs
or
add
pop
sbb
clc
aad
cmp
fmul
cli
ftst
fimull
fmull
cmpsl
ffreep
cwtl
loopne
sbb
repnz
clc
or
out
dec
jo
and
insb
lock
in
cmp
sub
dec
cs
ss
mov
movzbl
or
push
out
push
mov
fidivs
sahf
cmpsb
mov
out
add
mov
xchg
dec
fsubl
dec
iret
push
mov
mov
mov
lahf
mov
loop
add
jmp
and
in
xor
dec
leave
out
sti
mov
mov
inc
mov
std
jbe
aaa
mov
xor
ljmp
lret
das
out
out
or
mov
sub
mov
cmpsl
lds
stc
pop
cmp
icebp
cmp
stc
in
outsb
pop
es
into
repz
sbb
push
sbb
mov
xor
negb
add
fsubp
push
outsb
mov
xor
pop
or
mov
mov
sub
sahf
das
cs
xchg
jp,pt
test
and
xor
nop
sbb
dec
sti
inc
fcom
fistpll
sub
testb
pop
out
mov
pop
jnp
lahf
mov
fwait
paddd
cmp
loope
sub
mov
pop
stc
push
out
jle,pt
push
dec
bound
sub
jne
add
into
lock
sahf
iret
inc
sbb
jecxz
mov
loop
lea
or
mov
ds
aad
xlat
adc
xlat
outsb
fsubrs
push
cs
cld
sub
and
es
add
pop
mov
cmp
mov
dec
add
stos
adcb
stos
cmpsl
adc
fs
sbb
fimuls
mov
loopne
loope
pop
loop
cli
jecxz
inc
std
cwtl
in
sti
pmulhw
cwtl
out
rsqrtps
xchg
pop
cs
outsb
inc
jne
pop
arpl
cmp
sub
jp
hlt
jle
or
ficoms
or
stos
mov
stc
imul
push
xor
dec
inc
inc
outsb
sub
in
push
dec
jecxz
xlat
push
mov
cmp
sub
jp
in
lock
pop
repnz
repz
hlt
or
add
testb
mull
adc
cli
sub
sti
scas
cld
cmp
or
negl
mov
lds
jno
add
out
inc
jecxz
cmp
fidivrs
cld
iret
pop
into
mov
fldenv
fidivrs
js
rorl
adc
dec
or
sahf
lret
fwait
xlat
mov
loope
jmp
das
shrb
les
or
xlat
sub
outsb
enter
lods
inc
leave
or
add
dec
insb
add
lea
xchg
xlat
sti
pop
push
mov
dec
loope
sbb
xchg
pop
lret
lret
shrl
cli
int
aas
into
sub
mov
rcl
cli
or
loope
mov
xchg
mov
adc
pop
gs
cwtl
rcl
cmp
cli
bound
mov
pop
jg
cmpsl
inc
or
aad
cmp
int
fabs
jle
or
fmull
in
fisubrs
in
loopne
rolb
cmpsb
ljmp
sbb
icebp
mov
or
push
clc
cld
adc
adc
iret
call
mov
iret
pop
iret
jb
mov
data16
stos
pusha
cmpsl
sarb
xor
mov
mov
stc
je
sub
add
inc
bound
dec
enter
sub
sbb
pop
fiaddl
sti
mov
loopne
lea
push
flds
inc
js
inc
push
sti
cli
das
jmp
ss
mov
pop
sti
or
cli
mov
incl
daa
bnd
cld
adc
dec
sub
lahf
adc
pop
pusha
test
lahf
loope
or
std
adc
adc
mov
scas
sarl
xchg
rcrb
inc
popa
jp
popf
out
jne
pop
ljmp
jecxz
mov
or
fs
loopne
xlat
adc
fstps
incl
sub
ficompl
add
cmp
or
or
and
fstpt
fcomp
push
or
sub
xor
fdivl
cmp
and
gs
jp
loope
in
out
xlat
out
call
ljmp
lock
adc
out
jo
out
sub
lock
cmp
repnz
cli
hlt
loope
cmc
adc
mulb
testl
sti
int
cld
loope
std
adc
push
outsl
xchg
push
inc
adc
lods
mov
push
mov
shlb
scas
push
mov
sahf
mov
sbb
mov
stos
ret
loope
or
lcall
ret
or
inc
ljmp
daa
pop
int
add
push
cmp
fiaddl
call
cmp
data16
or
sub
dec
sub
add
lret
loope
jg
lock
jbe
mov
lds
or
cmp
xor
jne
add
call
neg
jno
mov
xor
es
inc
ret
inc
pop
jle
arpl
mov
int3
enter
dec
sub
repnz
mulb
cmp
adc
jge
rol
cmp
mov
leave
push
sbb
mov
inc
mov
mov
inc
ret
mov
cmpl
cmp
clc
inc
sahf
inc
adc
cmp
scas
insb
popa
in
ret
pop
loop
stc
gs
push
daa
loopne
loop
fiaddl
xchg
lcall
cmpsl
pop
push
pop
scas
jl
ret
arpl
or
aas
call
enter
and
mov
arpl
lds
dec
jbe
icebp
ljmp
hlt
addl
shrb
sbb
scas
xor
pop
mov
sub
cmp
cld
lret
mov
cmpsb
mov
xor
inc
sub
cmpl
mov
xor
push
mov
cmpsl
insl
ret
or
add
jmp
call
lret
sar
push
xchg
in
jmp
mov
and
push
ret
cmp
fadds
loope
cmc
pop
lods
cli
les
call
mov
xchg
xchg
nop
inc
out
add
add
add
mov
sbb
test
xchg
pop
mov
xchg
dec
ss
xchg
cli
jp
dec
loop
stos
mov
shrb
mov
or
adc
cld
in
leave
scas
dec
push
inc
adc
mov
gs
shll
lret
jb
subb
and
sbb
xchg
iret
jne
bound
sarl
xor
clc
mov
lret
xlat
add
inc
sti
imul
lcall
into
sub
fldenv
mov
mov
aas
test
mov
or
mov
cmp
jl
aaa
pop
push
mov
icebp
ljmp
jo
es
pop
lret
dec
jecxz
iret
data16
insl
xor
adc
cmp
es
xor
or
sti
mov
xchg
in
mul
daa
ss
dec
and
adc
fmuls
adc
testb
ss
mov
mov
mov
aad
inc
xor
leave
ss
call
sbb
lds
enter
sarl
push
adc
or
xchg
add
outsb
add
sub
sbb
loope
dec
into
dec
inc
xchg
inc
sbb
cmp
scas
sar
push
or
icebp
stos
sbb
dec
lea
pop
in
dec
push
mov
sub
adc
pushw
pop
push
adc
ds
mov
jb
cwtl
jnp,pn
fisttpl
cwtl
out
iret
inc
out
xchg
fld
rcrl
icebp
jp
mov
add
mov
daa
sbb
in
mov
sarb
add
int3
cmp
add
dec
or
stos
adc
leave
push
ret
mov
sub
mov
sub
movl
and
jle
mov
repnz
xor
xchg
push
sarl
mov
leave
test
test
int
bound
mov
mov
mov
pop
js
ss
mov
pop
jecxz
fsubrs
adc
cmp
mov
inc
mov
xor
loop
cld
sbb
daa
mov
fdecstp
outsb
loopne
lds
out
cld
push
adc
lret
ret
roll
mov
sub
lret
jle
cli
sti
subb
loop
cmp
pop
outsb
push
inc
sbb
dec
mov
out
je
ret
push
stc
sub
cli
sub
add
outsl
dec
cmp
loope
lcall
cmp
and
jns
add
fisubrs
mov
push
stc
pop
ljmp
jmp
popa
sub
cmc
cli
add
sbb
movsl
jno
and
mov
push
pop
aam
push
sub
mov
cmp
jg
into
repnz
push
mov
popf
push
ljmp
stc
ret
and
or
pop
or
and
xchg
test
adc
mov
xor
loop
pop
icebp
stos
add
sbb
pop
fcom
dec
xchg
dec
scas
pop
jb
push
sub
mov
stos
cmp
bound
stc
sbb
popa
mov
ds
ret
rcrb
icebp
lods
out
aas
rcrb
lea
out
ret
repnz
testb
add
out
fmull
outsl
push
push
jo
mov
push
rcll
and
stc
pop
fadd
mov
cmc
push
ret
lods
mov
xchg
aas
or
push
pop
fstpt
ret
mov
or
xor
in
mov
fsubr
cli
sbb
nop
cli
pop
mov
push
shlb
fldenv
pop
subl
dec
pop
pop
adc
jmp
out
aad
and
fidivrl
add
rorb
mov
shrl
mov
stos
fisubs
push
xor
inc
jg
int3
addb
or
mov
mov
dec
stc
xor
dec
out
jge
dec
xchg
xchg
jge
pop
or
xchg
call
push
sbb
ljmp
cmpl
lds
test
sbbl
xchg
cltd
mov
lds
pop
repnz
sbb
add
add
icebp
aam
sub
mov
loope
cmc
cmpsb
xchg
mov
in
cmp
cli
loop
cmp
jle
ret
sbb
popf
fistpll
sahf
shlb
daa
pop
inc
push
push
adc
jbe
lret
mov
shrl
arpl
fadd
faddp
inc
scas
inc
into
sti
xor
pop
fsubl
mov
lcall
xlat
in
pop
js
lea
or
sbb
test
fiadds
test
cmp
lret
dec
mov
insb
test
lret
lret
push
out
add
nop
mov
cmp
es
push
dec
push
xor
or
fdivrs
mov
fmuls
jo
adc
xchg
pop
pushf
xlat
stos
nop
xor
repnz
pop
rcl
ss
inc
inc
add
xchg
dec
xchg
sub
mov
int3
nop
je
mov
jnp
or
ret
mov
push
fisttps
cmp
mov
cmp
mov
iret
test
fstps
enter
or
cli
in
fildll
push
lcall
jb
pop
imul
sarl
mov
hlt
pop
out
or
xchg
pop
xchg
ds
cli
sbb
aam
dec
cmpsl
loop
sub
jne
inc
add
ficomps
pop
shl
aas
dec
adc
repnz
hlt
enter
je
lret
out
loope
data16
push
sbb
pop
stos
cmp
push
or
fistps
sub
pop
insb
or
lds
orl
test
adc
mov
xor
adc
mov
mov
insl
jl
push
push
sub
ds
adc
lcall
sub
pop
inc
idivb
mov
fcomps
cmp
sbb
ret
mov
mov
mov
sub
enter
sbb
aaa
out
or
push
mov
imulb
mov
call
repnz
dec
mov
out
rcr
enter
mov
xlat
add
jle
sti
mov
jecxz
icebp
pushf
pop
in
cltd
pusha
sbb
mov
sbb
lahf
mov
mov
fsubrs
or
pop
sub
adc
and
mov
test
push
inc
mov
mov
xor
push
bound
cmp
pop
gs
and
cmp
inc
mov
mov
inc
dec
shl
lock
pop
in
dec
dec
mov
sarb
das
xorb
lods
in
mov
pop
adc
into
je
fcmovnu
add
movsl
jg
xor
cmp
mov
pop
jl
mov
xchg
fldt
rolb
or
adc
inc
cmp
nop
inc
stos
dec
fcomps
mov
inc
idiv
dec
stc
push
loope
movl
jae
mov
sbb
cmp
mov
jno
inc
movsl
mov
mov
leave
cwtl
dec
mov
fs
psubq
or
sub
mov
aad
inc
push
das
fidivrl
push
push
adc
sub
jge
movsl
dec
sarl
lret
insb
push
sub
mov
adc
fcomp
rcrl
dec
jne
jp
cli
sub
xchg
lahf
pusha
xchg
xchg
jg
and
cmp
sub
pop
dec
rorl
sahf
mov
and
shl
loopne
sub
sub
push
mov
in
add
lret
insb
xchg
das
mov
sbb
mov
inc
inc
mov
repnz
or
jne
lods
leave
sub
add
lahf
pop
rcl
sahf
mov
dec
or
stc
xchg
dec
lds
sbbb
popa
arpl
lahf
cmp
lds
rorl
std
mov
iret
add
or
or
sbb
sbb
orl
test
sahf
mov
jns
arpl
ss
ljmp
xchg
cmp
adcb
icebp
loopne
ret
gs
mov
imul
ficompl
or
cmpb
stos
pusha
pop
cwtl
pop
enter
mov
fucomip
lods
out
sub
fsubr
enter
sbb
sbb
pop
mov
mov
scas
fdivr
push
mov
jp
mov
xchg
or
dec
divl
gs
cli
jnp
ds
call
pop
cmpsl
rcr
push
pop
push
mov
sbb
outsl
sti
xlat
mov
sub
fcompl
and
rcrb
mov
loop
sub
ds
mov
add
xchg
push
repz
in
dec
dec
out
fisttpl
popa
push
add
rclb
mov
outsb
pop
cmpsb
popa
inc
mov
dec
iret
or
cmp
fs
int3
xlat
adc
sbb
pop
dec
aaa
sbb
inc
cli
ljmp
mov
jne
js
add
push
mov
cli
retw
xor
out
and
mov
inc
mov
xchg
fcompl
adc
jbe
mov
mov
mov
lock
dec
jb
mov
lahf
es
push
push
xchg
mov
fs
pop
mov
test
xchg
push
add
ds
dec
cs
or
mov
mov
aas
lret
xchg
sbb
stos
cli
cwtl
outsb
dec
lret
pop
push
inc
sahf
cmpsl
mull
or
cmpsb
mov
into
idivb
mov
push
out
aam
dec
std
jne
testb
sarl
aad
jle
outsb
mov
sahf
sti
movsb
mov
jmp
int3
adc
rorb
xchg
fidivl
adc
jmp
lret
push
sbb
in
fs
inc
stos
fmulp
cmc
aad
sahf
iret
xchg
inc
addr16
ja
jns
push
xor
sbb
lock
sbb
or
cmpl
cltd
mov
mov
repz
mov
lahf
cmp
arpl
call
pushf
adc
ret
out
dec
sub
loope
xchg
mov
lcall
inc
or
out
loope
repnz
mov
or
push
push
ret
mov
sti
cltd
ffree
shlb
lahf
je
push
testl
rcrl
decb
mov
leave
mov
push
cwtl
and
or
sbb
neg
rcll
mov
ja
fcomi
scas
cmp
mov
dec
cmp
sub
fsubrl
data16
cmp
fadds
jle
adc
adc
sub
icebp
jbe
mov
idivl
shl
clc
cmp
fs
call
or
ljmp
jae
cltd
subb
cli
mov
xchg
dec
sbb
jno
js
movsl
cmp
sbb
outsl
sub
cmpsl
hlt
test
cld
push
cmpsb
test
jb
stc
into
sahf
stos
movb
jle
lods
fstl
cld
out
pop
cmp
scas
movsl
sti
jne
into
sub
mov
ds
jnp
push
xor
jge
push
mov
xor
stc
fidivrs
into
sahf
movsb
mov
cmpsl
ret
movb
pop
fnstcw
xor
push
mov
jp
or
add
in
jne
into
jp
call
jle
mov
out
cli
pop
mov
cmpb
ret
out
fistpll
push
dec
ret
xor
jno
inc
pop
xchg
add
mov
ret
sub
dec
leave
or
bound
dec
shlb
in
sbb
push
xor
loopne
ret
enter
sbb
mov
mov
insl
sub
add
xchg
dec
std
mov
imul
push
bound
mov
xchg
and
push
mov
sti
mov
hlt
popa
aas
sbb
push
imul
mov
push
es
push
mov
in
decl
lods
inc
js
xor
or
sub
mov
xchg
testb
int
cltd
mov
emms
and
ror
mov
push
push
mov
movsl
jp
lahf
inc
jnp
imul
jp
jne
pop
iret
mov
ss
pop
mov
add
xor
lret
jg
mov
clc
adcl
sub
pop
push
mov
movsl
xchg
sbb
inc
cmpsl
dec
out
stc
sahf
xor
jb
sbb
movsb
pop
idivb
cmp
xor
test
sub
add
aas
divb
add
divb
mov
std
outsb
push
cmp
dec
gs
jo
adcb
mov
mov
mov
scas
adc
stos
cmpl
lret
out
jo
imul
pop
or
negl
jle
jp
sahf
ret
add
or
jmp
pop
leave
hlt
test
test
pop
sub
clc
jnp
outsb
in
pop
fisubs
mov
insl
fisubl
data16
jne
add
jmp
xchg
mov
jmp
dec
out
sahf
xchg
and
lcall
out
xchg
dec
jl
dec
shll
int3
pop
stos
mov
shlb
rorl
imul
pop
lds
loopne
cli
inc
dec
inc
mov
in
push
outsb
cli
jb
jbe
jp
jle
scas
aaa
cmpb
mov
xchg
mov
outsl
mov
repz
fiaddl
push
cs
imul
inc
out
repnz
mov
in
leave
lret
mov
mov
movb
xor
ja
arpl
pop
gs
cmp
faddl
ret
fldt
pop
mov
mov
jnp
and
add
sub
sti
mov
mov
push
or
scas
sub
inc
ss
sbb
ficomps
mull
and
jno
out
jle
or
loope
xlat
xlat
testb
adc
pop
inc
and
push
jle,pn
dec
dec
leave
push
sbb
pop
mov
cmp
sbb
mov
stc
mov
icebp
jecxz
dec
mov
aad
sbb
mov
clc
test
fldcw
imul
mov
pusha
push
aad
fs
jns
aas
inc
ret
jge
mov
aas
repz
lret
and
xchg
push
or
add
ja
or
mov
or
mov
lcall
fadd
xchg
in
or
xchg
call
mov
je
push
leave
jge
cmp
repnz
push
pop
sti
scas
sub
push
es
fldt
movups
push
je
cmp
test
push
scas
add
ret
mov
sbb
jg
push
in
push
xchg
roll
leave
iret
movsl
cmp
push
or
push
loopne
icebp
aad
aas
adc
jp
rcrb
jbe
cmp
aas
mov
ss
pop
cmp
cmp
mov
mov
lds
mov
mov
pop
dec
mov
sahf
aam
movb
pop
add
repz
adc
bound
daa
aaa
sub
inc
ds
push
or
or
dec
push
pop
jp
adc
jo
fcom
loope
bound
loopne
iret
pop
clc
bound
cmp
dec
in
lods
push
add
mov
insl
jmp
dec
pop
add
xchg
ja
mov
out
fcomps
idiv
sub
loopne,pt
adc
bound
lods
and
xor
cmp
or
xor
add
inc
lret
push
mov
mov
jbe
into
dec
lret
or
pop
call
add
std
lods
loopne
loop
pop
push
jp
loope
add
daa
divb
xor
popa
dec
in
mov
enter
dec
cmp
ret
je
xchg
mov
imul
jl
push
sahf
rcr
cmpsl
movsl
sbb
adc
jnp
es
inc
xchg
dec
mov
outsb
jo
jb
pusha
cmpsl
icebp
fidivrl
popf
call
enter
and
outsb
fcoms
and
sbb
jmp
lcall
dec
hlt
ficompl
clc
shr
or
add
in
jo
jb
fisttpl
add
fisubrl
int
cmpsb
cmp
jg
dec
lret
repz
jmp
push
mov
or
lods
mov
mov
jp
cmc
push
mov
mov
xchg
or
push
jp
std
ljmp
bound
xchg
adc
push
push
lods
rcr
mov
mov
mov
ret
scas
fptan
idiv
movsb
or
leave
mov
je
dec
into
retw
and
adc
jp
loopne
movl
mov
rolb
lods
ret
fbld
loop
xchg
insl
dec
aam
loope
adc
pop
pushf
adc
aas
cmp
shlb
lret
push
push
shll
push
push
iret
hlt
and
mov
das
pminub
inc
mov
mov
sbb
aas
and
mov
jl
mov
fisubrs
int3
iret
addr16
mov
ret
adc
push
add
data16
jp
aad
mov
push
inc
xlat
jo
mov
aad
inc
inc
or
pop
scas
dec
sub
les
mov
mov
sbb
ret
mov
addr16
mov
dec
repz
insl
add
sahf
add
int3
cmp
mov
cs
in
repnz
sahf
jnp
test
clc
inc
iret
mov
push
jecxz
lret
xor
mov
adc
mov
cmpsl
dec
fwait
icebp
xlat
call
and
mov
cmp
sbb
lods
inc
rorl
negb
enter
pusha
pop
div
dec
mov
jecxz
fldl
fisubrs
scas
push
pop
dec
xchg
les
outsl
pop
xchg
push
xor
lret
xchg
ss
jmp
jbe
jecxz
jle
lret
push
ljmp
xchg
sti
mov
add
into
pop
pushf
sahf
pop
push
test
mov
inc
fwait
mov
aad
lea
dec
movsb
dec
insb
lds
jg
scas
movsb
adc
mov
lret
test
push
ret
xchg
sahf
pop
in
jns
out
mov
pop
sub
xor
mov
push
orl
and
leave
push
outsb
jnp
je
ret
jno
sbb
cmp
shrb
push
aaa
adcl
mov
xor
lock
xor
xor
clc
rol
into
jo
pop
sahf
movsb
sbb
sub
xor
test
dec
or
fsin
sbb
ja
mov
sub
push
or
scas
ja
adc
fidivs
imul
fwait
push
push
mov
push
adc
in
inc
and
in
out
cmp
pop
enter
ljmp
lods
xor
xor
push
or
xlat
mov
cmpsl
mov
rol
inc
sbb
lds
adc
pop
push
pop
jne
add
push
mov
pusha
pop
dec
cwtl
stc
lahf
jne
and
mov
add
mov
insb
pop
lahf
lahf
push
pushf
fnstcw
and
idivb
iret
mov
cmpsb
es
jb
fsubl
inc
les
push
push
or
int
jae
insb
cmp
jp
dec
outsl
icebp
aaa
xor
inc
sarb
xor
pop
lea
movsb
xor
sti
addb
sar
stc
inc
add
push
adc
jp
int3
and
adc
mov
das
out
popa
jbe
xor
pop
int3
inc
arpl
popa
xlat
rorb
cwtl
scas
sub
dec
stos
es
xchg
aas
push
clc
mov
inc
jns
ret
mov
adc
or
dec
lret
mov
mov
ds
ficoms
cwtl
sarl
fbld
leave
fmuls
inc
enter
inc
or
xchg
add
jb
pop
jge
in
pop
dec
nop
movsb
cli
push
and
int3
jns
mov
mov
mov
fimuls
clc
addr16
fisttpl
push
sub
xor
leave
loopne
pop
and
ret
out
jge
or
shlb
rcl
add
leave
xchg
ds
lret
aas
inc
clc
mov
je
outsb
shl
sub
stos
and
cmp
jne
jbe
es
adc
pop
sbb
mov
sbb
mov
push
int3
jp
mov
dec
test
les
mov
push
into
ficoms
jg
clc
ret
stc
dec
cmovs
push
sub
repz
ds
cli
mov
data16
pop
in
pop
movb
sbb
inc
ds
push
xlat
rol
notb
cmp
aad
ds
sbb
in
pop
mov
xchg
sahf
add
push
dec
or
int
ss
pop
ret
mov
add
mov
sahf
inc
jne
jg
sub
inc
cmp
sbb
arpl
addr16
ja
jns
push
fcom
shlb
or
ret
jecxz
outsb
adc
ds
mov
leave
inc
push
push
cmpb
cmp
clc
jns
movsb
pushl
mov
leave
sahf
repz
xchg
inc
jns
pop
mov
pop
xchg
inc
lods
jb
push
cmp
inc
cmp
jns
enter
jns
iret
xchg
lret
jbe
jno
lahf
sbb
ret
sub
jg
popa
movsb
push
jle
ret
pushl
mov
aaa
clc
rcl
arpl
in
aad
imul
mov
and
add
sbb
pop
sub
sub
fcompl
mov
ret
int
loope
gs
lret
lea
sahf
fbstp
push
xchg
cmp
loopne
mov
sahf
pop
inc
pusha
dec
imul
mov
sti
and
scas
out
jmp
ljmp
out
mov
mov
push
andb
addr16
imul
gs
test
jecxz
xchg
and
and
sbb
cld
int
pop
popa
jns
mov
or
das
sahf
sub
push
mov
mov
or
ja
ds
sub
lea
sub
fsubrs
stos
iret
pop
ret
dec
stos
into
jle
je
sub
sahf
fistps
pop
ret
loop
sub
and
dec
std
sub
inc
or
fadds
and
adc
or
stc
jl
bound
sub
sbb
repz
dec
test
insl
mov
stos
addr16
pop
shrl
mov
dec
fisubs
fdivr
inc
mov
cmp
es
and
cli
push
add
jne
push
addl
lcall
pop
jge
mov
mov
pop
inc
push
sbb
mov
mov
loopne
ficomps
jmp
into
mov
rol
movsb
imul
lret
cmpsb
xchg
test
dec
cltd
cmp
ret
mov
xchg
lods
adc
jp
jo
mov
push
sub
ret
xchg
outsl
mov
jns
mov
dec
sub
loop
add
out
movsb
in
add
scas
sahf
cltd
add
push
fldt
and
outsb
scas
pushf
leave
int
xchg
jp
movl
xchg
mov
cs
sub
inc
adc
cmp
insl
shlb
push
int3
and
loope
ret
pop
fistpl
gs
sub
xor
dec
rcrb
jns
adc
orb
mov
test
xor
or
ds
fisubrs
outsb
je
ret
gs
fcomps
cs
popa
cmp
push
insb
decb
xorb
mov
dec
dec
je
fisubl
popa
jns
jp
adc
jecxz
lds
xor
gs
dec
data16
mov
out
jg
inc
fidivrs
or
mov
jg
xchg
aaa
xor
pop
pop
pop
xor
adc
fistl
rol
iret
lods
mov
fbstp
sarb
outsl
xor
mov
jno
xchg
ljmp
fmull
push
adcl
lods
xchg
int3
jp
push
mov
in
insb
fisubrl
mov
mov
insb
inc
outsl
cwtl
loop
ljmp
sbb
maxps
out
pop
js
fadds
push
push
cmp
rclb
vpcmpgtd
and
adc
test
rcr
idiv
xlat
loop
lcall
cmp
repz
jle
fcmovu
imul
ret
pop
pop
lret
mov
add
hlt
clc
ret
lahf
lret
xor
outsb
sub
sub
ret
add
leave
mov
jl
stos
mov
xorl
icebp
jmp
and
mov
push
mov
jge
mov
sub
add
addr16
add
call
fptan
cmpb
movb
lret
movsl
jp
movsl
push
stos
cmp
negb
jp
adc
xchg
ss
jge
dec
call
add
sbb
movb
mov
push
jbe
mov
push
mov
mov
pop
dec
add
enter
push
mov
data16
sub
lock
bound
xchg
cmp
push
in
jbe
stc
das
pop
mov
aad
lea
ror
push
dec
aam
fidivs
lret
lods
mov
fstpt
ljmp
rcll
test
and
and
pop
ja
cmpsb
in
or
call
push
mov
mov
xlat
lret
jle
cli
into
fdivr
iret
insl
lret
aas
jmp
subl
lret
lret
push
push
xlat
push
ljmp
sub
scas
rol
xor
cmp
inc
jno
or
jmp
adc
cmp
enter
xchg
sti
ss
xchg
cmpsl
cld
pop
xlat
mov
cli
sahf
call
xlat
lcall
fcmovu
mov
jmp
out
jmp
jae
push
fistl
sar
xor
repnz
fmulp
xchg
das
or
out
and
sar
icebp
into
push
cmc
add
mov
and
out
push
or
pop
or
pushl
dec
push
enter
lret
imulb
es
daa
add
xchg
int
xorb
mov
sub
cmp
xchg
fdiv
es
mov
cli
mov
xchg
mov
movsl
pop
jno
outsb
pop
adc
mov
fldl
test
inc
call
aam
xor
add
and
add
mov
and
cmp
xchg
and
ret
and
mov
sbb
mov
fisubs
pop
out
iret
lahf
push
add
repz
push
inc
loopne
sbb
aaa
mov
dec
sbb
pop
sub
jp
sub
loopne
sub
sbb
adc
push
mov
or
andb
rcll
dec
ficompl
fsubs
or
insb
and
int3
jno
or
aas
and
into
sbb
les
mov
add
adc
iret
lret
arpl
xchg
adc
pop
mov
sub
call
dec
pop
and
sub
rorb
ret
ret
and
test
adc
fucomi
cmp
repz
sub
push
push
dec
cmpsl
int
pusha
arpl
arpl
out
and
outsl
sbb
mov
lahf
rcl
scas
sbb
clc
cli
or
push
xor
sub
sbb
int
sahf
lds
cmpsb
dec
fmulp
loop
fildl
testb
fidivrs
mov
stc
sub
shlb
ds
mov
je
jne
jmp
lds
and
incl
cmp
mov
negb
mov
inc
inc
inc
rol
es
stc
inc
sub
aaa
sub
cmp
cmp
mov
rolb
jg
xor
or
push
subb
cli
je
add
inc
ss
insl
ret
ret
add
in
and
mulb
push
cmp
adc
dec
outsb
mov
mov
push
rcll
in
into
sub
inc
je
int3
outsb
sbb
xor
mov
jle
paddusb
stos
je
cli
mov
scas
or
popa
or
stos
and
xchg
pop
add
xchg
adc
xchg
push
mov
test
dec
mov
sbb
cmp
add
cmp
pop
xchg
fcoml
jecxz
inc
leave
dec
sub
cld
sub
push
mov
mov
adc
inc
cs
ret
repnz
fldt
push
adc
sub
mov
test
sub
lret
ret
jae
mov
imul
jle
sbb
sub
pop
dec
jl
xor
pop
push
popa
xor
jbe
jbe
mov
mov
inc
aam
cmc
ret
xor
lock
push
sahf
push
outsb
lods
rcrl
cli
out
cmp
mov
sarl
cli
lret
mov
ret
sbb
rclb
fiaddl
mov
mov
loop
sub
xlat
mov
lret
sti
mov
shl
sub
pop
mov
mov
in
cmp
lds
jle
inc
mov
fdivrs
aas
jns
hlt
mov
mov
in
cld
les
mov
mov
test
cmpsb
mov
add
mov
mov
cwtl
ret
aas
enter
inc
inc
enter
lret
int3
enter
dec
inc
rcr
sar
rcl
mov
aad
xlat
fcomp
fcmovu
out
nop
nop
mov
xor
jmp
cld
fimull
fadds
push
bound
jae
test
xchg
cmpsb
ds
enter
ljmp
cs
aas
inc
push
fsubs
jb
aas
xchg
enter
add
fcmove
call
popa
sub
inc
xor
ficompl
xor
mov
adc
ss
sar
rcr
arpl
rcrb
mov
mov
ds
out
mov
xlat
rol
ds
jp
fcom
pop
into
ret
aam
dec
mov
cli
cmp
fidivrl
xlat
faddp
sbb
cli
loop
pop
out
mov
xlat
enter
in
leave
fsubr
aam
lret
repnz
lret
ds
mov
sbb
fdivr
mov
fsts
cli
jg
iret
movl
mov
xlat
rol
push
ds
jp
fcoms
cmp
sarl
cli
push
mov
fcoms
pop
enter
mov
sbb
cli
add
cmp
sbb
fadd
sbb
xlat
fld
sbb
fcmovb
sbb
push
scas
pop
sahf
xor
xor
and
clc
js
lods
pop
not
pop
mov
jp
loope
fimull
rcrl
sti
iret
inc
rclb
ret
aam
sahf
lret
lret
cld
cmp
mov
push
adc
std
stc
mov
mov
nop
lret
cmpsb
out
or
in
sahf
jp
pop
jle
leave
adc
cs
pop
scas
push
cmp
mov
jae
mov
jle
icebp
arpl
jb
xchg
testb
add
mov
clc
jb
and
cmp
adc
mov
mov
lcall
aad
inc
jbe
mov
inc
in
andb
clc
xchg
out
and
fildl
fldcw
test
mov
andl
add
and
sbb
xor
stos
inc
inc
scas
lods
cmp
ds
mov
cli
not
sub
sahf
cs
xor
add
push
cmp
out
rcrb
mov
pop
xlat
mov
push
mov
fiaddl
sub
shrl
sahf
int
and
aas
ret
sub
pop
js
xchg
movb
xchg
xchg
movsl
sbb
enter
dec
pusha
lods
sub
jo
sub
addb
daa
mov
clc
movsb
pop
pop
and
mov
mov
rol
mov
leave
out
cli
jle
xchg
mov
mov
fdivr
sub
int3
sub
testl
add
fs
xchg
and
mov
outsb
and
mov
pop
and
inc
mov
xchg
jecxz
and
daa
push
mov
ds
push
enter
movsl
mul
mov
fcomip
xor
mov
or
xchg
sahf
mov
dec
jo
xchg
lods
stos
dec
out
inc
lea
and
shlb
and
or
sub
xor
adc
lret
das
mov
xchg
cmpsl
lret
in
lcall
sub
mov
imul
sbb
xor
fldenv
mov
fdivrs
xchg
mov
adc
pop
pop
mov
mov
rcr
pop
into
mov
pusha
ret
ret
mov
and
jne
testl
inc
ret
ljmp
leave
xchg
dec
xchg
xor
xchg
stc
mov
sti
gs
or
cs
cmp
push
stos
cld
addb
cmp
push
test
popa
andb
cmp
outsb
inc
mov
fdivrs
mov
mov
lcall
leave
inc
lds
and
iret
mov
test
mov
bound
iret
jae
mov
imulb
mov
cmc
xlat
out
mov
stos
xchg
jmp
lret
dec
inc
into
inc
mulb
mov
or
leave
mov
mov
iret
out
jl
lcall
add
std
scas
sbb
cmpsl
jns
ror
adc
int
xchg
leave
lret
ss
and
push
clc
mov
mov
xor
into
sub
sub
shll
or
sbb
xor
or
mov
lret
icebp
js
push
cli
lea
and
mov
sub
and
das
sub
repnz
out
cltd
mov
dec
mov
or
callw
fsubp
dec
loope
rorb
mov
push
mov
push
push
or
xlat
mov
in
nop
and
cltd
mov
shl
push
aam
testl
sti
mov
lea
lahf
fcmovnb
xor
fstpl
cmp
shlb
lock
add
sti
ljmp
ss
fadd
out
sub
int3
dec
add
outsb
imul
sbb
lcall
jbe
shlb
dec
cs
fmuls
aaa
mov
les
out
call
push
mov
lds
insl
cmpsl
and
and
out
scas
aad
xchg
dec
insl
rolb
lret
repz
pop
pusha
not
or
sbb
inc
add
push
fcoms
sbb
dec
into
aad
inc
add
sahf
aaa
sub
stc
sub
scas
hlt
aas
adc
out
xchg
xchg
push
sti
mov
aam
push
sub
cmp
lea
repz
mov
lret
gs
jle
cmpsb
jle
dec
jo
mov
xchg
enter
xchg
cmp
xchg
jb
inc
mov
jecxz
int
ret
rcll
into
roll
lret
iret
mov
xchg
scas
lahf
mov
add
adc
lods
push
cmp
ljmp
orps
in
sub
inc
daa
pop
cmpsl
sub
ds
repnz
adc
ret
cmp
jp,pt
aaa
mov
jbe
inc
mov
scas
jp
sub
fisttpll
cli
mov
jle
inc
fwait
dec
scas
mov
fdivrs
push
cli
xchg
movsb
jp
lock
test
mov
lret
pop
cmpb
dec
arpl
pop
out
and
in
outsl
inc
mov
jle
mov
adc
stos
loope
loop
mov
sub
out
shrl
in
xor
sbb
std
fldl2e
and
shll
cld
fwait
jmp
push
aaa
or
out
mov
or
loop
mov
loope
shlb
inc
ficoml
popf
mov
jl
bound
repz
scas
add
cmc
cltd
scas
and
xchg
shlb
and
div
ret
aas
dec
inc
pop
sub
inc
push
cmc
pop
push
cmp
ret
sub
push
in
roll
rclb
ret
push
test
ss
jg
mov
repz
pop
ljmp
push
stc
and
or
and
ljmp
es
sarl
mov
sbb
and
push
sti
mov
adc
jp,pn
movb
cs
push
div
xchg
imul
ret
rolb
inc
inc
mov
fsubl
jmp
lea
jnp
addb
in
mov
mov
orl
movl
mov
or
dec
inc
addl
pop
mov
int3
pop
stc
mov
test
and
ret
push
popf
sti
push
mov
nop
pushf
push
sbb
add
es
loope
sbb
imul
adc
xor
call
stos
test
test
sub
sub
inc
ss
inc
mov
and
sbb
notb
cli
xor
aas
les
cmp
cli
sti
mov
out
jmp
in
out
out
out
clc
stc
cli
mov
cld
std
incl
add
mov
add
push
pop
or
or
movups
movsb
mov
jge
mov
sub
cwtl
dec
fisttpl
sahf
adc
mov
int3
lea
stos
jl
dec
outsb
lock
jge
pop
loop
cmpsb
dec
xchg
push
xlat
orb
xchg
mov
adc
or
mov
cwtl
enter
sub
imul
lods
mov
and
sbb
mov
fdiv
stc
mov
jp
aaa
jp
cmovns
cli
repz
and
lea
dec
ja
xchg
je
xchg
ficompl
call
mov
or
fiadds
push
mov
add
mov
gs
lcall
dec
dec
mov
pop
movsb
or
push
mov
or
adc
jg
push
cmp
mov
lds
inc
lahf
mov
jbe
into
mov
icebp
mov
xor
mov
loop
add
lret
dec
lahf
mov
rol
push
repz
pop
ret
into
mov
rcll
mov
dec
pop
adc
jne,pt
rcrb
leave
clc
xlat
pop
cli
xchg
dec
dec
into
fistpll
test
ds
inc
ret
push
push
push
push
fbld
mov
js
sahf
pop
sbb
fisttpll
pop
test
cmc
lret
fdivl
push
mov
fs
add
jo
inc
cmc
sahf
inc
sbb
mov
xchg
mov
popf
hlt
mov
jp
sbb
inc
and
mov
dec
sbb
mov
sbb
movsl
insb
lahf
rcrl
fwait
pop
xor
mov
push
mov
movsb
jo
inc
rcr
sbb
lock
popa
sub
lret
mov
jl
mov
lcall
mov
mov
mov
mov
mov
xchg
cmpl
xchg
add
ror
stos
test
adc
popa
pusha
daa
ds
aad
mov
test
add
in
jmp
push
xor
imul
mov
mov
sahf
jno
or
sbb
jge
mov
dec
ret
scas
fcoms
in
scas
arpl
sbb
add
mov
jnp
sahf
aam
iret
neg
mov
mov
ret
mov
push
dec
jecxz
xchg
aad
inc
jne
cwtl
mov
aas
dec
lods
dec
pusha
stos
xor
add
scas
inc
mov
cmovne
mov
push
mov
jns
enter
rcrb
mov
mov
mov
mov
ds
add
sahf
lock
leave
adc
imul
testb
adc
or
cmc
cli
enter
cmpsl
popf
cmp
addr16
dec
jns
popa
filds
pop
mov
mov
xchg
lods
test
jecxz
cmc
cmpsb
mov
lock
mov
fcmovbe
xchg
int
call
mov
mov
roll
cmc
icebp
dec
xor
sahf
int3
xorb
mov
adc
shlb
mov
movsb
fisttpl
add
pop
cmp
jecxz,pt
push
cmpsb
clc
inc
mov
mov
mov
movl
dec
cmp
loop
mov
cmp
imul
mov
mov
fcomi
inc
clc
cltd
lea
cmp
mov
push
push
pop
movsl
mov
shrb
mov
into
sbb
shrb
lret
fxch
jne
aam
lcall
add
pop
lods
inc
adc
pandn
xchg
stc
mov
adc
sub
daa
and
dec
mov
lods
into
shl
cmp
or
gs
js
xchg
cmp
sbb
mov
dec
or
mov
data16
fs
fmuls
ja
negb
clc
out
sub
out
dec
push
out
cmp
inc
sbb
sar
out
mov
icebp
clc
or
inc
out
inc
stc
aam
mov
jle
scas
sub
xchg
sbb
ss
and
mov
addl
mov
or
icebp
or
jmp
cltd
fsubl
negb
cmp
loope
ljmp
jmp
jg
push
lret
mov
shr
mov
hlt
push
or
insb
lret
mov
dec
mov
ss
movb
in
rorb
arpl
cs
add
dec
leave
cli
jo
ss
or
test
stos
mov
push
adc
xor
jge
cmp
inc
ficomps
cli
out
js
aas
or
out
ret
aas
cmp
nop
adc
int
repnz
fadds
push
xor
pop
mov
cli
daa
scas
rolb
and
push
ds
enter
add
ret
inc
mov
mov
es
shll
inc
mov
lock
gs
data16
push
jge
neg
sbb
sti
cs
cwtl
shl
sub
ret
jge
mov
push
insl
lcall
repz
sub
jbe
push
ljmp
pop
lock
jbe
fucomi
xor
in
adc
cmpsl
adc
xchg
adc
hlt
and
into
jns
add
popf
iret
cmp
jle
pop
aad
mov
dec
lods
cmp
std
adc
cli
cmp
cmp
or
add
cltd
mov
sbb
fadds
jmp
sub
pop
or
repnz
cmp
pushf
lret
lods
out
das
cmp
push
add
clc
scas
jnp
hlt
jbe
cmp
or
rorb
imul
ret
insl
mov
add
mov
push
stc
enter
jp
cmp
xor
push
repnz
push
fwait
stc
mov
fisubl
cmp
or
outsl
mov
mov
sub
jb
sub
sbb
aad
pop
scas
mov
jge
orb
mov
cmpsl
add
cmp
mov
rorl
int3
aas
stos
mov
out
int
cwtl
sub
xchg
stc
out
out
push
mov
sub
mov
add
repz
jecxz
or
popl
int
js
hlt
or
into
jae
mov
fisubrs
out
jle
idivb
or
rcr
or
fimull
nop
dec
aad
cmp
jmp
xchg
dec
int3
movsb
insb
js
cmp
ror
and
addb
jp
leave
dec
cmp
popa
sbb
ljmp
cmp
dec
daa
into
int
cmpsb
aaa
test
inc
ljmp
inc
add
lods
mov
or
es
mov
push
push
pushl
pop
iret
mov
shrb
mov
sub
mov
push
outsb
aas
mov
addl
mov
add
mov
daa
xor
adc
cmp
es
xor
jp
push
notl
add
sub
fs
das
shrb
aas
rorb
shll
jge
jecxz
das
and
push
push
outsb
repnz
ljmp
inc
push
test
js
mov
scas
lds
loope
cmpsl
sub
stos
xor
push
sarb
fxch
mov
sub
lret
and
push
mov
mov
push
icebp
xchg
xchg
pop
jns
mov
ror
into
mov
flds
idivl
leave
mov
jb
sahf
ja
int
inc
ror
mov
dec
push
cmp
cmp
addr16
je
mov
or
popa
call
arpl
sbb
pop
clc
cmp
mov
divl
addb
cs
decl
hlt
jnp
scas
lds
push
in
lret
cmp
jns
sarb
addb
sbb
pop
mov
mov
cmp
push
xor
cmp
jg
jmp
imul
pop
inc
inc
jge
lcall
shlb
mov
hlt
mov
mov
in
in
popa
je
and
mov
fidivl
xchg
push
pop
jbe
xor
cld
jmp
fidivl
shrb
mov
cmc
sub
push
lcall
dec
mov
loopne
ret
pop
ds
add
sub
sbb
cwtl
ss
ljmp
ficompl
fninit
cli
fiadds
call
rclb
mov
lds
lea
xor
push
jle
and
jecxz
xor
sub
das
lret
sbbl
xchg
xchg
and
sub
add
push
cli
clc
mov
add
add
jecxz
out
sbb
cli
mov
mov
call
mov
or
push
fldcw
sbb
mov
insb
sarb
sarl
ficompl
adc
add
mov
sbb
test
ret
imul
sub
pop
daa
lea
fldl
cmp
dec
mov
out
es
mov
push
xor
push
jle
divb
inc
sbb
ss
ficomps
ret
adc
lret
and
jge
sub
cli
out
pop
jle
out
push
jle
sub
dec
mov
sub
mov
dec
gs
jno
mov
mov
fimuls
fmull
or
inc
daa
bound
ds
and
mov
inc
movl
ret
push
cld
pop
or
cmpsb
cmpsl
xabort
push
js
enter
or
pop
ljmp
fldcw
cmp
call
pushf
or
fisttpll
js
imul
mov
out
call
mov
sub
sbb
outsb
dec
jmp
shrl
out
mov
sti
pop
cmp
testl
pop
imul
mov
xchg
mov
xchg
cmp
rorl
lds
pop
cmp
std
cmp
jg
adc
cld
das
in
push
lods
mov
fildll
mov
add
jp
or
fimull
mov
out
sbb
pop
cmpsb
lret
lcall
inc
les
sysret
or
test
inc
out
aam
inc
sub
pop
pop
xchg
jmp
push
xchg
loope
sahf
jae
push
fnstcw
cs
jl
testb
push
mov
mov
enter
mov
ds
test
cmp
aas
iret
xchg
popf
shl
clc
cmpsb
ret
inc
lcall
out
xor
or
sub
insb
ss
repz
add
mov
lahf
push
push
inc
push
jbe
std
add
push
lahf
mov
mov
xor
test
inc
loop
inc
popa
mov
mov
loop
add
sbb
xor
jg
ror
push
jo
imul
xchg
mov
ljmp
fisttpl
ljmp
jp
shlb
ljmp
lret
out
mov
mov
jbe
out
fmul
lds
jbe
ljmp
fidivl
mov
addr16
hlt
cmc
xlat
enter
bswap
cld
rcrl
int3
dec
ss
jle
xchg
add
cmp
daa
imul
xchg
faddl
or
outsl
test
call
adcl
cmp
insb
movb
inc
mov
stos
push
fnstsw
movsb
push
sar
out
or
xor
mov
sbb
inc
mov
dec
sub
mov
idivb
add
mov
pop
and
lods
xor
pop
sub
add
push
add
jle
clc
dec
or
fldt
dec
xchg
or
jmp
daa
stos
loope
fwait
in
sub
filds
loop
scas
cmp
xchg
test
inc
and
sahf
lcall
jp
cmpsb
scas
es
mov
decl
std
pop
mov
cmpsb
call
lea
or
xor
loope
cmpsb
icebp
js
xor
aam
in
dec
pop
mov
hlt
out
xchg
cmpsb
jne
sbb
out
ret
stos
push
stos
repz
push
xor
sbb
mov
cltd
sbb
cmp
fdivl
scas
pop
mov
hlt
fucomi
out
sub
outsb
sahf
into
fs
fldpi
jmp
push
enter
mov
pop
mov
inc
cwtl
sub
or
inc
hlt
cmpb
xchg
and
call
fildl
mov
movsb
cwtl
rcrl
sub
inc
jg
add
lret
ret
scas
iret
and
sahf
pop
lahf
dec
hlt
scas
leave
adc
dec
aam
adc
popa
in
cmpsl
stc
aas
sub
sbb
aam
push
xchg
ficomps
clc
sbb
mov
jle
mov
inc
into
add
dec
mov
add
and
sub
adc
and
test
mov
sbb
cmp
into
jbe
fists
cmc
push
cltd
ret
adc
push
mov
loop
ljmp
xchg
in
test
arpl
xorb
cmpl
shlb
sub
js
sub
data16
loope
pop
jmp
pop
sub
pushf
or
mov
ja
sub
mov
iret
sub
out
xlat
mov
inc
cs
push
xlat
dec
scas
xchg
stos
inc
inc
and
insl
push
push
incl
dec
add
sahf
sbb
in
bound
and
lds
inc
or
jns
sahf
mov
push
sbb
xor
imul
leave
xchg
mov
leave
xchg
adcl
mov
pop
andl
repz
cmpsl
mov
psraw
push
push
sahf
jbe
lret
pop
rcrl
mov
xchg
and
pop
push
popa
lods
icebp
jo
sahf
repz
repnz
cli
cli
add
inc
inc
xchg
mov
pop
fs
mov
scas
mov
inc
dec
jo
stos
cmp
jne
cld
arpl
out
shlb
sahf
fsubrl
das
daa
xchg
daa
jle
sbb
jae
in
out
test
add
fadd
filds
or
movl
cmp
cwtl
ret
xor
sub
xlat
les
fldpi
add
xlat
jae
cwtl
outsl
ret
int3
xlat
fwait
in
mov
add
call
sub
add
cmp
mov
cmpl
xor
adc
gs
into
loop
std
lods
push
mov
inc
mov
cmp
popf
and
cmpsb
push
enter
mov
inc
push
adc
adc
pop
xchg
fcoms
xlat
mov
xor
or
adc
cwtl
push
push
lea
fdivrs
repz
ret
mov
stos
jecxz
repnz
fmul
clc
iret
dec
nop
sub
and
or
add
push
xchg
fcmovnu
jge
in
xor
lock
xor
push
xor
dec
mov
out
idivl
fstps
cmpsb
cmp
dec
dec
xchg
cmp
aas
or
mov
or
xchg
jecxz
mov
jbe
push
ret
jns
mov
mov
cmpsb
xchg
lcall
negb
shll
mov
rcl
push
jo
mov
mov
add
cmpb
cmp
pop
daa
mov
push
push
add
pop
add
xchg
outsl
xor
adcl
and
xor
jle
aam
aaa
adc
push
dec
fstl
idivb
repnz
or
mov
jecxz
sub
mov
fbstp
or
addr16
cmc
fmul
dec
fsubs
std
sahf
aas
addl
paddb
dec
pop
out
or
mov
sbb
insl
push
xchg
xor
dec
sub
adc
mov
push
popf
in
xor
test
adc
mov
stc
and
shrb
dec
cmp
mov
iret
in
out
xchg
sub
repnz
cmp
cld
lret
cmp
ret
movsb
out
dec
sub
lods
ret
imul
jge
shll
cmpsb
leave
fsubl
out
jo
inc
sahf
xchg
clc
mov
pop
mov
ja
mov
enter
enter
fstps
fisubs
divb
sub
inc
daa
lcall
rcl
mov
in
push
add
lea
cs
sub
add
nop
arpl
jp
cmp
orb
rorb
sbb
sbb
mov
outsb
repz
sahf
fcmovbe
fucomi
dec
lods
mov
jb
cmp
out
mov
dec
fwait
cmp
xchg
rorb
ljmp
pop
and
ret
adc
hlt
dec
and
int3
ds
push
mov
mov
cmp
or
xchg
push
dec
jl
pop
jmp
popf
test
lahf
loope
pop
add
aas
sbb
push
sub
fsubrs
mov
push
imul
xchg
sahf
add
stc
out
xchg
js
insl
scas
inc
in
mov
sarb
rclb
outsl
jle
sub
sub
fadd
and
push
xor
cmp
or
out
fidivrl
ss
mov
or
sahf
adc
icebp
mov
sub
xor
mov
push
cmc
lock
sbb
mov
add
mov
xchg
out
sub
ds
rcl
adc
stc
inc
movb
int3
add
cld
inc
push
loope
negl
ficoml
ret
sub
ss
loopne
das
mov
inc
cs
sub
sub
mov
inc
push
and
dec
or
and
jne
xchg
xchg
fbld
aad
fstpt
loope
test
jae
push
cmp
lret
out
inc
lret
stos
pop
xor
push
int
dec
push
cmc
insb
out
cmp
jb
popa
mov
mov
mov
stc
xchg
rcrl
xchg
or
fisubrs
mov
xchg
xor
jmp
sub
test
stos
ret
mov
ja
icebp
push
push
std
xchg
sbb
ret
jmp
mov
pop
cld
and
cli
mov
call
cmp
jg
ds
mov
fidivrs
stc
dec
sub
sahf
jmp
and
mov
data16
sahf
icebp
in
xor
ret
sahf
ja
mov
sub
scas
xor
push
or
fwait
int
pusha
jmp
popa
jecxz
pop
dec
sub
fstpl
add
scas
or
adc
jb
xchg
push
ret
mov
stos
pop
xchg
arpl
ret
jecxz
push
sbb
adc
sahf
lock
fsubrl
add
jb
pop
jecxz
ljmp
jl
cld
fistpl
fbstp
lods
pop
inc
fadd
arpl
jl
rcll
popf
xchg
ds
cmp
xor
clc
pop
js
imul
xchg
nop
enter
cmpl
add
push
imul
sahf
inc
adc
inc
movsl
mov
out
push
icebp
push
mov
mov
sahf
mov
clc
pop
sub
cld
subb
leave
stc
or
loopne
repz
adc
ror
or
fcmovb
arpl
aas
adc
stos
push
cmp
ret
rclb
or
pusha
seta
aaa
inc
dec
aam
fwait
or
xor
dec
pop
or
pop
pop
or
xor
jp
mov
jle
aaa
lahf
scas
inc
divw
icebp
jo
pop
sbb
cmp
cmp
lcall
sub
jno
fidivs
cmp
push
jmp
mov
sarl
scas
dec
fcomps
push
sub
add
cli
dec
gs
gs
divb
inc
into
out
inc
sahf
add
ss
cmp
push
rol
jmp
mov
out
out
push
push
cmc
cs
dec
out
into
mov
call
mov
adc
inc
clc
sahf
aam
mov
adc
lcall
test
sub
adc
pushl
pop
sarb
add
dec
ds
sub
stc
xchg
ljmp
jno
jo
into
cli
lcall
and
and
test
mov
mov
sbb
push
or
icebp
or
in
inc
mov
mov
sbb
addr16
pop
mov
shll
cltd
mov
fbld
cs
mov
jg
lea
in
dec
inc
jae
add
and
test
adc
sbbb
roll
push
movsb
xchg
lret
mov
mulb
xor
push
lret
lea
ret
aas
push
sbb
xchg
ljmp
data16
mov
jae
inc
ds
lock
xchg
mov
push
dec
frndint
add
or
jbe
pop
mov
scas
inc
jle
mov
pop
lret
jmp
adc
push
sbb
sarb
cmp
xchg
push
fsubs
dec
cli
in
mov
add
imul
xchg
mov
enter
pop
or
shl
test
test
xchg
js
and
lods
pop
addr16
jle
lock
repz
aad
rcrb
pop
ret
icebp
stc
push
jp
imull
pop
cmp
data16
fstpl
sbb
nop
push
push
je
dec
cmp
cmp
rcl
shll
out
rolb
pop
inc
rclb
lret
inc
sub
or
sbb
loope
loop
stc
mov
and
jo
xor
roll
std
or
and
sub
insb
pop
leave
xor
jns
lret
not
cmc
xlat
inc
and
test
testb
dec
ss
push
inc
inc
scas
int
mov
adc
iret
cli
or
out
mov
insb
dec
cmp
cld
add
ror
inc
dec
cmpsb
in
shl
cmp
aam
imul
jno
push
dec
jno
popf
sbb
jno
sub
dec
jecxz
notl
out
pop
add
js
lea
sub
das
aad
scas
jle
mov
out
repnz
inc
divb
pop
or
sbb
ds
sub
sub
inc
mov
hlt
cmc
inc
jae
je
or
lret
sbb
lret
jae
out
gs
iret
and
ds
inc
mov
mov
adc
lahf
arpl
movsb
aaa
mov
mov
sbb
adc
ljmp
stos
jae
xor
mov
xor
dec
int
mov
sub
mov
stc
xor
mov
lea
sub
jl
aas
enter
sub
sarb
jl
jp
fistps
jl
push
js
mov
dec
mov
popa
outsb
leave
mov
ret
or
mov
mov
jns
inc
jo
fsubs
sahf
ljmp
xor
xor
push
fistpll
js
outsl
insl
cld
adc
in
jp
adc
pop
xchg
fisttpl
cwtl
fldl
lods
pop
icebp
lret
mov
lcall
add
les
out
cmpxchg
add
mov
sti
sahf
daa
push
pop
out
cmp
pop
push
mov
xchg
lds
sbb
fdivr
inc
imul
mov
enter
fisttpll
or
testl
sub
cld
sub
jne
sub
jle
in
lret
mov
jmp
fs
leave
sahf
and
pop
or
jmp
mov
shrb
add
bound
mov
mov
cmp
lcall
shrb
ret
mov
cwtl
dec
arpl
add
fucomp
sti
mov
xchg
inc
sub
fildl
clc
shrl
sahf
push
jmp
test
mov
sahf
mov
jp
in
or
aam
jne
bound
int
ret
inc
es
jo
adc
test
or
rolb
push
jbe
aaa
iret
repz
mov
cmp
mov
insb
dec
shl
lods
scas
cwtl
cmp
cli
jg
movsl
call
add
rorl
push
push
pop
shl
sbb
sub
idivl
sbb
lds
mov
mov
push
scas
pop
or
loopne
mov
andb
ss
movsl
jno
out
fstpl
pop
cli
call
rcl
cmp
out
adc
inc
or
jle
xor
jl
push
lcall
jae
mov
fcmovnu
test
push
rcr
push
aas
es
jl
mov
stos
sbb
and
imul
fimuls
or
mov
xor
add
fcomps
into
or
sti
xlat
dec
sub
in
int3
lahf
adc
fcmove
in
inc
lea
fs
and
cld
scas
add
mov
dec
nop
arpl
jmp
lock
sbb
sub
pop
jp
dec
mov
cli
mov
loop
cmp
mov
and
mov
iret
xchg
ret
mov
xchg
push
ljmp
jbe
mov
mov
sbbl
jne
sahf
aam
fadds
cli
repnz
jns
pop
mov
sub
sub
rol
and
test
and
outsb
data16
fidivrs
fldenv
into
adc
sti
repnz
mov
cs
icebp
mov
faddp
jns
xor
cmp
lret
daa
xchg
lret
xor
clc
mov
lods
adc
mov
mov
adc
cmp
call
idivl
fnstenv
dec
sbb
fldcw
hlt
roll
pop
sub
or
into
mov
add
adc
or
cld
inc
adc
addr16
add
adc
fwait
cli
jb
das
push
aas
dec
mov
test
cli
pop
pop
add
dec
inc
jg
mov
cmpsl
cld
pushf
push
lods
mov
mov
clc
push
loope
stos
ds
mov
jbe
jl
aas
mov
jmp
inc
loope
xor
lock
imul
repnz
in
inc
cmp
mov
enter
out
aam
imul
adc
pop
add
xor
cmp
lret
jne
inc
pop
cmp
jle
scas
jb
cmp
scas
jp
adc
dec
jl
push
movsb
cmpl
jno
adc
inc
adc
xchg
in
enter
mov
std
cmpsl
pop
shll
pop
lds
pop
or
inc
subl
shll
pop
stc
js
js
pop
push
rcr
push
sub
in
clc
aad
mov
shlb
sti
stc
fiaddl
das
mov
and
lret
into
in
sub
mov
outsb
daa
sbb
pop
or
out
dec
xor
xor
xchg
xor
loop
inc
fld
inc
shrl
fldt
xor
enter
ja
std
sub
divps
mov
xlat
bnd
repnz
icebp
test
add
repz
xchg
push
enter
popf
andl
jbe
mov
outsb
cmp
stc
repnz
pop
xor
popf
ret
fsubrl
lds
pop
cmp
xchg
add
sahf
enter
xor
dec
dec
data16
and
iret
fsqrt
mov
stc
test
imull
mov
dec
mov
stos
icebp
lock
pop
xchg
jmp
in
std
rorb
or
cmp
add
shll
sub
mov
dec
mov
or
pop
lcall
cmpsb
ljmp
mov
ret
test
adc
cld
stc
imulb
cmp
mov
cmpsb
cmp
or
gs
les
push
jp
inc
bound
mov
add
jle
les
les
adc
out
lds
sbb
js
mov
ror
icebp
mov
lret
shrb
loope
mov
push
stos
mov
scas
call
sub
aas
push
icebp
fstps
sub
sub
dec
mov
mov
imul
mov
or
adc
xor
mov
inc
subb
pop
ds
mov
jg
repnz
cmp
xchg
jmp
pop
mov
outsb
sbb
int3
je
pop
ljmp
int3
mov
loop
call
jge
cli
pop
push
dec
mov
clc
fists
pop
mov
pop
mov
repnz
adc
jb
pop
cli
mull
inc
outsl
push
ljmp
pop
sbb
fisttpl
mov
inc
sub
or
outsb
fisubrs
incb
cli
in
or
mov
sub
push
leave
rcr
js
ljmp
push
sahf
xor
das
cs
sbb
mov
mov
sub
xor
ret
into
iret
mov
dec
lret
jns
lea
sarl
fists
or
sbbb
jecxz
in
loopne
mov
cmp
cmp
stos
jmp
pop
mov
mov
cmp
sbb
xchg
int
mov
loop
fucom
push
add
sarb
adc
stos
rol
lcall
jo
push
mov
inc
das
mov
je
mov
fs
jbe
loope
testl
mov
sbb
sbb
rorb
inc
lret
add
xchg
sbb
pop
jecxz
jecxz
int
shlb
imulb
push
lret
rcl
xchg
cmpsb
push
dec
dec
or
dec
xchg
sbb
shl
mov
psubsw
adc
setp
add
subb
dec
lds
movsl
mov
push
sarl
das
xchg
jp
add
mov
and
xchg
aas
lea
and
sbb
gs
pop
pop
sub
and
push
pop
cmp
outsb
push
ret
and
popf
inc
mov
icebp
roll
cmpsb
sub
out
mov
aas
or
jge
das
enter
mov
bound
les
pop
mov
pop
loop
in
sahf
push
dec
add
jg
and
fistps
lods
cli
fcmove
rcl
ret
push
inc
add
std
dec
cmp
incl
cmp
sub
test
sub
xor
flds
or
pop
js
outsl
lret
fistpl
sar
mov
dec
mov
mov
mov
movsl
call
adc
cli
pop
test
push
jmp
mov
bound
cmp
stc
fidivl
popf
data16
sahf
add
and
cmp
lcall
mov
inc
cltd
cmp
jnp
sub
out
mov
dec
out
xchg
mov
adc
rcll
aaa
div
lahf
int
inc
adc
mov
enter
enter
add
aas
sarb
loop
add
loope
loop
insl
daa
cwtl
pop
sbb
fwait
and
sbb
mov
sbb
adc
cli
mov
add
scas
jge
dec
out
jne
test
inc
call
mov
or
jmp
out
arpl
mov
outsb
pop
subl
or
movsb
sub
mov
mov
push
sbb
call
rcrb
mov
mov
push
mov
xor
xor
jo
xor
out
lret
dec
or
jg
xchg
xchg
xlat
mov
testb
aas
mov
aas
or
mov
jbe
dec
ljmp
mov
cwtl
mov
mov
mov
lock
and
les
ret
inc
mov
andnps
js
sbbb
or
add
in
out
or
aaa
jp
pop
in
lret
rcrl
hlt
sub
cwtl
mov
dec
sbb
dec
xchg
mov
mov
xchg
jns
jae
xchg
push
or
ds
push
sub
push
sti
icebp
lcall
push
movsl
jl
mov
sar
imulb
stc
mov
fld1
mov
and
adc
mov
rorb
cmp
pop
pop
xchg
or
or
ret
ljmp
aam
repnz
shl
test
push
aaa
mov
cmp
sub
aad
rcll
repnz
outsl
mov
cmp
inc
cmp
push
ret
lods
lar
or
leave
out
pop
loope
inc
lret
or
or
addl
ljmp
xchg
loop
in
mov
lcall
scas
loop
iret
mov
dec
lods
idivl
cwtl
push
loope
ljmp
xchg
or
cmp
int3
lahf
arpl
daa
out
and
add
add
jl
dec
sub
rorl
adc
add
out
and
mov
mull
ds
lret
xchg
clc
icebp
xchg
or
jp
mov
push
push
cmp
mov
mov
pop
xchg
add
sahf
jmp
fcomps
and
xorb
pop
xchg
dec
outsb
dec
push
lods
icebp
sbb
mov
jno
push
xor
lret
mov
mov
jecxz
sahf
les
iret
pop
push
push
movsb
ds
push
aaa
addr16
mov
pop
mov
call
loope
ja
call
cld
ret
movsb
stos
loopne
adc
scas
cmp
cmp
pop
xchg
mov
fnsave
mov
mov
ja
or
push
lods
sti
mov
mov
daa
push
mov
xor
pop
mov
mov
dec
scas
movsl
lods
mov
xor
xor
mov
mov
pop
jno
ljmp
aaa
into
adc
inc
call
and
call
dec
incl
ljmp
out
dec
dec
cmc
cmp
lret
sar
rorl
mov
pop
cwtl
fadd
xchg
orb
in
push
dec
out
mov
clc
lret
sbbl
mov
and
outsl
or
jge
push
sub
cmpsb
out
mov
cmp
adc
inc
and
loop
sahf
jns
fisubl
int
mov
or
sahf
mov
movsl
cmp
imul
in
inc
jg
lret
mov
aas
ret
das
jge
repz
add
sbb
mov
mov
mov
jg
mov
and
pop
mov
inc
lahf
arpl
enter
dec
sub
jle
adc
jns
hlt
lret
jnp
pop
and
dec
pusha
ret
pop
shl
mov
mov
sub
fs
mov
and
mov
movsb
pop
sbb
adc
stos
adc
in
dec
jg
mov
stos
mov
int3
imul
pop
je
clc
mov
call
aas
fnstsw
jmp
loop
insb
test
ja
xlat
dec
jl
andb
cld
ret
sahf
dec
push
jnp
mov
int
xchg
int3
leave
jne
mov
mov
mov
inc
lock
testb
cmp
fnsetpm(287
dec
push
js
scas
rorl
sahf
and
mov
adc
cmp
pop
xor
adc
loope
stos
inc
sahf
adc
ss
sarl
loop
rcrl
push
shl
ljmp
jb
lret
cmp
cmp
iret
jmp
icebp
in
or
bnd
repnz
ficoml
imul
into
movzwl
dec
test
lret
data16
sahf
pop
iret
pop
jnp
fidivrs
insl
fstpt
scas
cmp
cmp
push
mov
fs
rcl
and
clc
jno
repz
dec
add
std
fidivl
push
loopne
ret
xor
pop
jne
jns
and
iret
inc
out
lret
scas
mov
push
icebp
sub
fildll
rcl
cmp
orl
mov
out
dec
push
or
lods
decb
adc
mov
push
imul
and
int
mov
shlb
cld
rol
scas
pop
mov
dec
shrl
mov
test
jae
jno
cmp
add
sub
sbb
in
pop
or
xchg
ds
pop
jg
dec
lods
xor
clc
push
icebp
aaa
bound
repnz
mov
sahf
pop
add
gs
lock
mov
add
aas
enter
lcall
cli
repnz
jp
ret
cli
add
movb
cmpsb
cmpsl
stos
test
or
repz
lcall
aaa
mov
jp
cmc
mov
icebp
lahf
sahf
push
jecxz
jl
sub
loopne
mov
lahf
pop
idivl
push
mov
inc
dec
fst
stc
out
sahf
mov
insl
or
mov
xor
add
test
and
cld
adc
adcb
and
adc
cwtl
fcomps
lods
cld
mov
mov
stc
jmp
sub
clc
test
xchg
lcall
push
testl
shlb
out
cld
mov
push
add
loop
jp
scas
mov
dec
call
sub
inc
or
jecxz
out
mov
icebp
mov
lahf
fistpll
dec
dec
inc
lret
mov
jne
int
adc
cwtl
aaa
mov
insb
xor
or
idiv
int
in
aas
stos
mov
cmp
mov
stc
push
dec
sub
pop
mov
fcmovbe
pop
cli
mov
repz
rorl
cmc
mov
push
add
fcoms
sbb
mov
push
stc
int3
cmp
mov
pop
ret
ret
es
arpl
fwait
dec
sahf
loopne
add
rcl
fsubrl
ret
rorl
lea
out
mov
mov
or
fists
sbb
cmpsb
aad
add
xlat
cs
sub
clc
in
cmc
sbb
into
mov
rcl
ror
push
into
xchg
in
cs
jg
push
add
loope
jecxz
std
push
pop
out
push
movl
rorl
mov
push
pop
sub
mov
loope
in
movsb
not
jecxz
or
cmpsb
sar
xlat
aas
mov
mov
cltd
adc
cld
mov
aam
test
arpl
clc
lcall
push
clc
ficoml
enter
loop
out
pop
rcr
add
mov
fcomps
ja
int
mov
clc
out
pop
test
cmc
or
pusha
jecxz
xchg
fiaddl
rcr
sub
adc
xlat
ljmp
add
subl
fdivs
add
dec
xlat
stc
nop
mov
pop
incl
hlt
in
push
arpl
cmp
icebp
sbb
sub
aas
in
mov
mov
push
mov
lock
adc
psllw
dec
int3
shl
int3
xchg
xlat
leave
leave
cmpsb
addb
cmpsb
mov
cmp
pop
ds
repnz
push
into
insl
scas
fidivrs
dec
adc
mov
clc
andl
jae
push
cld
mov
jge
cld
push
dec
pop
jo
shrl
sub
rcr
repnz
and
out
jl
pop
movsb
aam
push
fwait
lahf
rcrb
loopne
fisubs
xlat
mov
sahf
aaa
and
adc
aad
je
cmp
sub
mov
xchg
sbb
or
cs
or
push
out
inc
push
inc
mov
pop
inc
ss
push
imul
dec
mov
sub
out
pop
decl
das
in
pop
push
cmp
ret
adc
inc
xchg
mov
call
adc
xor
leave
js
test
scas
or
jle
mov
sub
lret
mov
mov
out
stc
ljmp
inc
popf
mov
mov
push
bound
je
sar
dec
lret
cmp
or
stc
push
sbb
cmpsb
sti
push
pop
lret
mov
rcl
sahf
and
and
leave
pop
ror
or
or
adc
lret
ficoms
fs
test
adc
fistl
adc
stos
sub
mov
mov
fnstcw
sahf
pop
or
ds
cli
dec
or
lret
dec
pop
adc
dec
insl
out
mov
adc
lcall
das
sub
sahf
mov
lods
pushf
mov
xor
das
fdivrs
stos
enter
lret
aam
cmp
add
lret
testb
sbb
mov
rorb
xlat
rol
jle
pop
or
lods
jo
int
push
mov
pusha
enter
in
repnz
jne
dec
jb
mov
and
lret
std
lahf
push
ror
ss
fsubl
and
js
mulps
sbb
mov
ljmp
loop
xor
repz
and
loope
mov
mov
jl
dec
adc
shrl
pop
std
mov
dec
cmp
clc
xor
mov
xchg
pusha
cmp
adc
push
inc
dec
jp
fimuls
mov
mov
mov
out
in
xlat
and
icebp
scas
push
inc
jmp
sub
push
lret
gs
mov
jl
dec
pop
mov
repnz
movsw
or
add
xor
fadds
fsubrl
jns
push
cmp
jnp
ficomps
xor
jp
hlt
pop
mov
stos
mov
popa
cld
cli
jecxz
inc
sub
mov
sub
push
sti
mov
adc
mov
mov
push
pop
or
loope
lahf
push
push
in
bound
inc
daa
out
sbb
enter
mov
mov
ror
in
xor
mov
mov
sub
mov
sub
mov
mov
dec
xlat
stos
push
sub
and
dec
negl
aas
adc
xchg
fcoms
xchg
add
mov
cmp
movl
jle
xchg
insl
xchg
ret
std
cli
loop
cmp
repz
xchg
lret
enter
inc
push
rcll
mov
jle
lods
test
enter
clc
test
aam
jno
cli
sbb
fnstenv
sti
stos
dec
mov
inc
xchg
push
sarb
sti
mov
jbe
out
mov
fiaddl
add
jmp
mov
fs
les
icebp
jne
pavgw
xchg
icebp
lods
inc
mov
mov
cmc
scas
sbb
fwait
cli
inc
push
inc
mov
jbe
div
lods
push
jmp
adc
and
pxor
jp
mov
addb
mov
xchg
popa
stos
xor
in
xchg
mov
jno
clc
mov
idiv
xor
in
and
ficoms
xor
pop
sbb
xor
xor
cli
xchg
mov
sbb
push
sub
inc
ds
xchg
mov
sbbb
jns
push
mov
idiv
stos
pop
jp
jl
sti
inc
sarb
push
xor
xchg
enter
push
and
jb
outsb
stc
cmp
int
sti
cs
push
or
rorb
out
xor
xchg
cmp
xor
jmp
pop
into
sbb
pop
incb
pop
arpl
out
scas
mov
lock
add
sahf
gs
fiadds
out
add
mov
add
push
sbb
lcall
inc
imul
shrl
push
je
sbb
out
or
jae
mov
mov
xor
fcmovb
fiadds
cwtl
dec
insb
cli
xor
adc
sub
sti
shrl
or
rolb
mov
in
clc
mov
shlb
add
scas
pop
testl
fisttpl
mov
xchg
hlt
xor
scas
inc
addr16
rcrl
xor
inc
or
mov
adc
outsb
push
cwtl
mov
test
add
fisubrs
movb
lods
es
in
dec
mov
fld
fnsave
or
and
pop
mov
inc
ror
fadd
pop
shl
and
sti
add
sbb
enter
inc
es
jnp
mov
adc
pop
push
shl
sbb
lea
shll
inc
adc
lock
push
pop
clc
repnz
adc
xchg
jmp
mov
inc
rol
xor
ret
int3
loop
test
push
imul
xlat
sbb
into
mov
iret
inc
fiadds
out
mov
push
mov
push
mov
xor
shl
or
jle
cmc
cmpsl
rorl
sub
adc
mov
pop
and
dec
mov
mov
lahf
cwtl
sbb
cli
jnp
shl
sbb
mov
repz
bound
lds
imul
or
push
mov
pop
repnz
fiadds
add
xchg
cmp
cli
addl
xlat
or
lret
pop
fistpl
mov
mov
testl
or
loope
mov
and
js
lods
cld
test
fcmovb
lds
inc
add
pushl
push
cmp
inc
scas
cmp
lret
icebp
jp
fdivrp
jb
mov
mov
out
sub
push
or
or
jle
pop
add
imul
orb
mov
add
sbb
cli
cs
pop
inc
mov
xchg
gs
pop
mov
shll
add
not
cmp
mov
lret
mov
push
fcomps
or
push
lret
into
sub
stos
cmp
sub
sbb
mov
jb,pt
into
test
scas
js
outsb
std
lods
mov
mov
xchg
dec
mov
sbbb
ficomps
pop
push
xchg
mov
push
xor
mov
mov
in
testl
sahf
mov
add
sbb
xchg
fimull
dec
leave
xchg
fdivrp
push
fistpll
pop
adc
push
sub
mov
or
leave
sub
mov
xchg
mov
sti
xor
pop
xchg
mov
dec
out
mov
pop
notb
sub
cmp
inc
fimuls
les
pop
xlat
mov
addr16
neg
sbb
jecxz
call
xor
add
pop
sbb
jmp
nop
cmpsb
and
xchg
inc
movl
lods
loope
sarl
das
sbb
sahf
add
sub
cmc
fcmovne
mov
pop
pusha
xchg
mov
or
and
add
clc
pop
lods
push
test
aas
cmpsb
or
clc
and
pop
stos
and
mov
ret
fs
pop
stos
xor
push
and
mov
sahf
push
filds
sub
pop
sub
repz
sub
or
aas
mov
xor
ds
adc
clc
or
sbb
mov
jg
push
add
jecxz
stos
dec
mov
adc
mov
ja
mov
pop
mov
pop
jl
rclb
mov
lret
xchg
and
loop
mov
jp
mov
bound
adc
jo
inc
sub
cli
push
push
es
or
jg
fwait
xchg
xlat
cs
shrl
add
and
mov
add
aas
inc
mov
mov
cmp
xor
and
loopne
out
cli
mov
jle,pt
in
push
sub
lret
sub
push
add
ds
imul
sub
ret
lahf
enter
out
xchg
or
psubd
xor
adc
xor
in
mov
repnz
xchg
or
orb
scas
cmp
xor
cmp
cmp
adc
add
pop
mov
mov
push
mov
mov
es
std
jo
mov
add
mov
test
test
test
test
test
test
test
test
test
test
xorl
xchg
lahf
lahf
cmpsl
sahf
scas
popf
scas
pushf
scas
fwait
scas
lcall
scas
xchg
scas
xchg
scas
xchg
scas
xchg
scas
xchg
scas
xchg
scas
nop
scas
scas
mov
mov
mov
test
subl
loopne
in
jg
jle
jge
jnp
int3
jl
add
jle
cs
xchg
out
into
jg
push
mov
ljmp
pop
inc
mov
mov
xchg
add
sub
xlat
pop
ror
pop
mov
call
fisubrl
addb
lret
loop
out
mov
out
pop
das
jp
sbb
dec
push
jmp
testl
ret
cmpb
mov
mov
ds
mov
mov
mulb
pop
mov
inc
pop
jmp
out
lcall
scas
jae
adcb
loopne
cmp
bound
mov
pop
push
fildll
sub
inc
inc
jbe
adc
fcoms
int3
data16
mov
pop
mov
xor
sbb
dec
cmp
push
lods
mov
js
push
in
insl
xchg
cli
jle
cli
out
fwait
je
out
not
aas
sbb
adc
add
stos
je
js
xchg
std
call
popa
nop
ret
xchg
clc
and
or
mov
mov
imulb
mov
sti
xor
cli
push
subl
mov
mov
push
push
das
test
mov
push
sub
shlb
sub
dec
cli
or
jmp
mov
mov
inc
loope
test
addr16
push
push
repnz
test
sbb
idiv
fidivrl
add
loop
data16
aad
mov
lea
fstl
mov
mov
sbb
sahf
in
mov
sub
push
xor
dec
mov
and
shr
stc
inc
repz
mov
push
es
xchg
std
inc
mov
push
lds
add
iret
dec
stc
push
xchg
sbb
das
or
mov
sbb
ljmp
icebp
repnz
jl
pop
mov
clc
jle
pop
fstps
daa
inc
stc
inc
pop
out
mov
cmp
das
sub
fimuls
sti
sbb
mov
call
or
pop
test
mov
and
inc
inc
cmpsb
inc
rorb
sub
mov
push
les
push
ret
push
push
repnz
call
dec
cli
fisubrs
mov
ss
sbb
fldl
mov
out
sbb
pop
dec
lds
pop
clc
and
or
mov
in
dec
or
addb
pop
adc
mov
inc
out
xchg
sbb
ds
mov
das
mov
cmp
repz
push
pusha
push
mov
add
sbb
pop
inc
cli
lea
mov
adc
xchg
mov
jecxz
inc
shr
push
ja
or
movsb
push
or
add
aas
fidivl
mov
fistpll
mov
mov
out
fsubs
ds
jo
xchg
cmp
mov
stos
cli
push
sub
jecxz
repz
stos
push
mov
push
sbb
jns
sbb
iret
pop
cli
or
movsb
cmp
jae
je
icebp
gs
push
lcall
cmpsl
shlb
test
pop
jnp
dec
pop
lcall
popa
pop
sub
pop
lds
inc
xchg
ss
es
es
loope
loop
ja
cld
ja
sbb
icebp
mov
mov
enter
pusha
mov
cmp
cmp
mov
rcll
mov
fnsave
mov
data16
sub
rol
push
aam
icebp
cmc
vshufpd
cmc
iret
cmc
fdiv
shl
sarl
in
jbe
mov
mov
cmpsb
loop
add
out
cmpsb
out
push
std
enter
mov
sub
xor
jns
js
ja
jbe
jne
je
jae
fidivs
test
outsl
subl
leave
insb
test
imul
mov
rol
mov
inc
xchg
cmpsb
lret
out
adc
movw
mov
sbb
push
outsb
je
int
inc
push
test
inc
jo
mov
mov
not
xor
out
mov
mov
sarb
sbb
push
cli
jb
mov
mov
out
rcr
add
push
push
aas
es
cld
into
aam
jle
jb
xor
mov
repnz
pop
out
outsl
sbb
mov
ds
iret
cmp
inc
inc
mov
mov
jb
mov
mov
fcomp
test
stos
lret
lret
in
ret
pop
ljmp
jmp
and
lret
and
push
mov
test
add
mov
and
out
pop
push
in
jp
or
ret
jb
inc
into
jmp
idivl
fdivrl
daa
outsb
fwait
or
ret
mov
loop
fmull
out
sbb
fcmovnb
or
sbb
pop
repnz
and
cld
mov
dec
mov
movb
pop
xchg
xchg
sti
shlb
adc
dec
mov
sti
push
mov
std
mov
pop
sbb
sahf
mov
addr16
and
movb
es
gs
cmp
sti
pop
ljmp
into
add
and
fucomi
les
xchg
sbb
out
arpl
pop
or
push
ljmp
stos
out
sbb
xlat
push
mov
pop
popa
enter
and
push
or
ss
pop
xchg
cli
mov
iret
mov
ret
ficomps
ss
sahf
cmpb
and
stc
cmpsl
cld
lock
dec
clc
sbb
push
mov
leave
ds
mov
inc
and
mov
sbb
dec
movsl
push
sbb
mov
dec
lahf
mov
test
mov
xor
pop
mov
push
mov
xchg
adc
iret
mov
or
mov
dec
aaa
mov
aam
data16
sbb
ss
orb
cmp
mov
lcall
jmp
lock
and
stc
aad
lahf
sar
insb
inc
jecxz
pop
aas
fcmovne
bound
jl
jbe
clc
and
push
jecxz
hlt
and
mov
push
mov
clc
das
jbe
cmp
dec
cwtl
adc
pusha
sbb
dec
and
ficoms
out
or
ds
pop
sbb
lret
stc
stc
mov
mov
fldl
jne
sub
adc
add
mov
sub
sbb
andb
loope
fwait
outsl
xchg
mov
mov
or
sub
pop
and
sub
ljmp
pop
jmp
es
div
in
es
add
je
push
inc
mov
push
shl
cli
subb
mov
mov
lcall
cmp
ret
movb
pop
pop
xchg
rcr
out
cli
out
lahf
repnz
jge
xchg
sbb
mov
jb
fdivrs
dec
or
mov
xchg
inc
mov
fidivl
jle
mov
cwtl
cli
movsl
mov
dec
hlt
mov
pushf
fdivrs
ljmp
loopne
stos
jmp
push
push
cmp
sub
ret
ss
inc
stc
inc
push
inc
cmp
or
ds
or
out
xchg
adc
pop
xlat
sub
shlb
pop
ljmp
mov
and
xor
and
sahf
pop
negl
cmovle
pop
stos
loop
jg
out
cmpsb
cltd
xchg
jecxz
mov
lds
imul
mov
mov
mov
inc
adc
outsl
mov
iret
push
lret
cld
arpl
ret
cmpsl
incl
mov
mov
ds
repz
cmpsb
rcl
rorl
aas
test
sbb
mov
sub
ds
leave
sbb
pop
fbld
ret
cmp
push
lds
std
mov
pusha
mov
lret
int
sub
or
adc
sub
dec
mov
sti
fnstcw
mov
inc
dec
mov
sub
pop
movsl
pop
dec
lcall
sub
test
sbb
sub
xor
adc
push
ret
adc
xchg
and
pop
cmp
ljmp
repz
ljmp
sbb
fistps
jno
sub
jp
and
rolb
cmp
xor
adc
mov
adc
push
dec
sub
orb
mov
lret
cli
pop
ret
inc
inc
inc
shrl
jae
shll
mov
lcall
push
pop
insb
fldt
jge
dec
sub
cs
sub
aam
rol
push
clc
enter
popa
test
aas
sub
inc
add
test
inc
lret
es
cmp
push
or
clc
sti
inc
dec
cmp
es
push
add
lret
std
and
jle,pt
pop
and
rolb
fildl
lret
or
and
sub
incl
mov
ds
mov
sti
ror
mov
mull
jl
sub
lret
pusha
push
cmpsl
inc
and
scas
mull
jl
mov
and
outsl
jb
pop
sahf
mov
aad
pop
fld
mov
xchg
lods
andl
or
jge
scas
xor
out
mov
call
xchg
ficoml
adcb
aas
jp
push
inc
or
ds
lods
jle,pt
enter
mov
or
fdivrs
mov
jle
lret
cld
out
jmp
clc
loopne
fldl
cmp
movups
mov
test
mov
movb
mov
fidivrs
mov
sahf
lcall
push
xor
jecxz
add
popf
rcrb
dec
lds
rcll
inc
adc
stos
outsl
mov
daa
xlat
adc
xchg
jg
adc
fwait
cli
ret
pop
push
sub
in
scas
push
aas
scas
xor
mov
test
decb
fldcw
adc
mov
je
nop
les
inc
or
lcall
cld
pop
or
jo
shrl
ljmp
arpl
int3
adc
inc
push
cmpsb
outsb
fistpl
data16
cmp
add
int
scas
pop
xor
imul
in
mov
mov
ret
aam
add
jae
mov
adc
out
addl
scas
addb
sub
dec
in
das
add
shlb
addr16
inc
cmp
loope
xlat
cmc
pop
lret
rep
stc
mov
sub
lock
into
jecxz
repz
pop
sarb
sbb
and
mov
call
les
shlb
mov
fdivp
cmpsl
outsl
cwtl
cltd
mov
inc
fstpt
xor
push
add
ret
aaa
mov
aaa
into
mov
aaa
fidivrs
aaa
out
out
ljmp
sbb
pop
push
dec
rorb
mov
jb
fldt
loop
jp
jp
jnp
scas
ror
mov
icebp
cmp
jae
cmpsb
xchg
imul
jno
or
push
nop
sahf
out
jno
mov
jb
add
push
cmp
clc
xor
repz
mov
sbb
ret
leave
xchg
fdivrs
xchg
push
iret
adc
lahf
add
mov
cmp
sub
dec
stos
lret
arpl
out
cmpsb
lds
xor
lds
lret
push
sbb
push
push
adc
in
xor
int
cld
jl
and
test
pop
leave
sbb
fwait
mov
dec
out
mov
add
idivl
xor
push
push
inc
xor
jg
lret
stc
clc
loop
lods
mov
mov
mov
aam
lods
mov
xor
dec
sub
fistps
pushf
xor
mov
imul
incb
imul
fldt
movsl
mov
mov
ds
sbb
ja
push
loopne
xchg
addr16
xor
xlat
ret
xorb
xchg
loope
mov
pusha
sti
push
sahf
int
xor
sub
mov
ret
aad
scas
shlb
xorl
xor
imull
jg
testw
add
xor
out
sub
add
std
adc
or
sahf
fisttps
cld
xchg
aaa
fcmove
mov
test
test
push
dec
fidivrl
popa
sub
or
je
call
shl
fldenv
jo
enter
rol
ja
push
cmpb
dec
clc
cwtl
push
lock
xor
mov
dec
add
xchg
jl
idiv
int3
mov
sub
jo
sti
cli
test
xor
jno
ret
orl
mov
cld
out
aad
fnsave
dec
mov
test
xor
pop
cmp
and
jge
and
fsubrs
cmc
repz
push
aas
xchg
test
sub
and
xchg
lock
sub
add
mov
addb
daa
xchg
xchg
inc
in
sbb
dec
inc
fwait
mov
imul
jecxz
and
dec
jmp
jns
mov
neg
repz
jge
loope
mov
js
mov
xor
xchg
and
mov
sahf
adc
loope
mov
sbb
lret
mov
js
xor
sarl
cmp
add
adc
pop
lds
push
pop
xchg
jl
stc
add
dec
fs
push
sub
imulb
xchg
xchg
sti
jl
imul
and
sub
sbb
popa
inc
push
adc
jne
push
mov
in
mov
cmp
xor
mov
dec
xchg
rcrb
ret
cmpsb
es
sbb
aas
sub
sub
mov
jl
lret
stos
call
dec
test
jg
add
mov
daa
push
mov
inc
mov
daa
shrb
cmp
mov
inc
or
fldl
mov
mov
mov
fdiv
in
cmp
lods
xchg
pop
xor
sbb
je
dec
inc
test
dec
std
aam
adc
cld
in
mov
test
sub
loope
sti
adc
or
daa
pop
lds
sub
dec
lret
mov
dec
fstpt
test
arpl
sbb
inc
loop
push
mov
xor
mov
jne
ret
scas
adc
or
in
push
mov
mov
scas
test
jp
dec
and
jnp
mov
ljmp
fisttps
aaa
mov
push
and
xchg
aas
sahf
adc
js
iret
mov
pusha
xchg
fnstcw
lods
lock
rorb
movsl
inc
push
sti
fisttpl
lret
cmp
lcall
sub
icebp
jmp
dec
mov
adc
add
mov
lods
outsl
dec
add
cmp
inc
dec
out
mov
fidivl
xor
dec
rcl
push
call
fdivrs
sbbb
mov
push
fsubrl
int3
sahf
jno
xor
popf
ss
nop
cmp
and
cltd
pop
iret
push
lret
cmp
mov
add
data16
mov
es
jno
dec
jns
dec
cli
fistl
jmp
add
fdivrs
mov
jl
lret
push
mov
dec
xchg
or
push
mov
shrb
pop
jg
adc
sahf
test
insl
pop
into
mov
fiaddl
fwait
lea
nop
mov
sub
push
cld
sub
lahf
cmpl
jg
out
mov
imulb
aad
leave
repz
sbb
fcoml
xchg
xchg
leave
sub
adc
subb
add
stos
pop
inc
iret
pushf
adc
jmp
ret
cmpsb
repz
ja
pop
scas
mov
imul
or
adc
fsubrs
hlt
popa
mov
fcoml
dec
pusha
push
mov
xchg
imul
or
sar
test
xor
push
clc
push
js
cmp
or
lret
adc
mov
xlat
sarl
cmpsb
mov
mov
and
push
mov
pop
in
jecxz
shrl
ret
mov
clc
int
adc
enter
int3
push
jbe
aas
mov
mov
ret
jmp
mov
mov
hlt
add
inc
or
sbb
testb
addr16
mov
lcall
sbb
fisttpl
rclb
and
add
fcomps
div
xor
imul
xchg
sbb
mull
clc
dec
inc
adc
int
adc
cmp
mov
push
fwait
sysexit
cmp
sahf
lock
loope
cmpsl
xlat
scas
cmp
cmp
les
cli
inc
dec
aas
mov
roll
ds
mov
or
add
sbb
sbb
movsb
addb
push
sub
fndisi(8087
mov
ja
xor
push
cs
add
pop
mov
push
or
mov
ficomps
adc
fdivrl
jle
xlat
sub
or
aaa
mov
imul
and
rcrl
dec
test
inc
ds
fidivrs
add
leave
ljmp
mov
add
and
cltd
sbbb
sub
mov
or
add
iret
leave
lret
jns
ffree
lret
xlat
out
in
xchg
mov
ficoml
sub
inc
cmp
mov
in
test
vunpckhps
aad
mov
sbb
aaa
cwtl
sar
and
inc
mov
sub
cld
pop
pop
aad
ss
or
in
ja
cmp
cs
sahf
mov
fcomps
inc
mov
leave
pop
fadds
fsubrs
lds
mov
stos
pop
cmpl
lret
jle
sbb
ficomps
jl
shrb
testb
negb
adc
dec
push
mov
or
ret
push
sub
mov
add
pusha
mov
dec
in
jg
push
fcoml
rcl
and
movsb
pop
fstp
pop
adc
sub
fstpl
cmp
aad
mov
sbb
cmp
dec
sub
jle
fwait
ljmp
xlat
cs
push
scas
lds
jmp
jmp
sbb
test
mov
xchg
inc
mov
into
lret
out
pop
xor
mov
xor
jle
es
aas
repz
clc
xchg
jb
clc
call
cli
imul
imul
scas
mov
xor
int
aas
repnz
ficomps
push
ss
scas
xchg
adc
int3
push
mov
mov
add
mov
jg
test
lret
in
pop
lds
call
cmp
cs
jg
ljmp
jae
cmp
loop
icebp
mov
mov
mov
pop
mov
movsb
je
cmp
lock
pop
mov
outsb
cld
cli
pop
fs
fdivl
mov
js
nop
clc
inc
or
call
lret
push
scas
inc
and
loop
jne
jp
cmp
fcoms
dec
sub
out
lods
adc
pop
cmp
inc
cmp
lret
inc
or
aad
test
mov
shl
add
ds
cwtl
sub
pop
std
push
add
out
inc
sub
icebp
divb
xlat
js
jo
iret
push
in
addb
out
fstp
push
fadd
dec
stos
mov
mov
loope
in
inc
jg
int3
adc
ficoml
faddl
or
sbb
ret
andl
mov
mov
mov
push
inc
or
fsubs
or
lret
mov
cld
xor
adc
pop
sub
or
dec
jnp
popa
pop
gs
adc
lahf
fstpt
jae
xlat
mov
sahf
call
aaa
shrl
mov
sbb
cmpb
sub
push
sbb
or
cwtl
les
mov
mov
dec
aas
push
fimuls
clc
sub
xadd
push
jae
shlb
mov
push
cs
movsb
ds
lods
fs
lods
enter
mov
lea
cmpsb
ja
add
aas
inc
pop
cli
rcrl
xchg
sbb
arpl
mov
pop
mov
ds
push
inc
lret
push
test
movsb
mov
cs
stos
jge
stos
xchg
out
sub
loopne
scas
dec
jo
pop
xchg
outsb
jmp
cmc
into
aas
call
mov
mov
cmp
lret
push
add
mov
sbb
jge
dec
xor
dec
leave
aaa
mov
xor
lret
lods
call
or
es
ds
dec
xchg
es
or
fwait
push
mov
movsb
xchg
es
lock
sahf
cmp
in
push
mov
ret
jmp
cwtl
xor
adc
lds
dec
push
cmp
inc
shlb
stc
sub
jnp
jnp
jmp
dec
mov
dec
rcll
lahf
arpl
movsl
mov
jb
dec
arpl
jno
pop
fcmove
dec
xlat
loopne
idivl
js
rcrl
sbb
stos
sbb
rorb
cmpl
lahf
adc
testl
xchg
pop
jl
fsts
add
mov
mov
pop
filds
movsl
sarl
outsb
outsb
clc
xlat
sbb
flds
outsl
loop
sbb
pushf
mov
fmulp
mov
imul
or
scas
pop
lret
ret
scas
mov
ds
add
in
inc
das
xchg
fcmovnb
lcall
cli
mov
fwait
adc
and
fbld
movsl
inc
adc
jo
mov
mov
adc
xor
stos
mov
lea
push
jne
adc
pop
adc
add
adc
sahf
push
cmp
push
jae
daa
data16
push
aas
mov
sbb
cmp
push
mov
les
repnz
aad
or
repnz
enter
and
insl
mov
jge
pop
mov
inc
add
dec
inc
in
mov
lods
jns
push
inc
cli
sub
pop
xor
scas
and
stos
jge
mov
add
lret
shr
jb
cmp
cmp
clc
hlt
out
sub
fstpt
inc
aas
shll
add
sub
pop
pushf
jo
xor
mov
add
push
addl
fnsave
add
je
dec
fildll
jb
mov
mov
daa
imul
stos
cmp
lock
nop
lds
pop
mov
rorb
loopne
adc
pop
add
mov
sub
inc
pusha
pop
fxch
lret
roll
out
insb
mov
jl
and
adc
ds
jp
jns
imul
clc
cltd
push
mov
xor
int3
adc
ret
enter
ja
scas
outsb
es
mov
out
adc
inc
push
push
ret
cmp
idivb
adc
testb
jle
insl
lcall
sub
adc
sti
mov
mov
or
cmp
imul
lods
sti
xchg
rcl
clc
stc
mov
ret
adc
mov
movsb
dec
push
push
mov
push
shl
push
ret
bound
cmc
add
aas
into
xor
push
pop
not
sahf
adc
mov
mov
std
dec
mov
xor
xchg
das
div
push
mov
loope
data16
sub
add
push
lret
arpl
dec
xchg
jle
cli
mov
fcomp
jecxz
fs
lea
bnd
push
mov
ja
sub
inc
sbb
or
fildl
dec
stos
jbe
adc
mov
cmp
test
dec
scas
loop
into
jno
pop
xor
jns
pop
sub
aam
rol
lret
movsl
mov
cld
xor
sub
pop
ja
lods
sub
out
cld
pop
aad
imul
shll
or
jae
mov
cmp
xor
jne
lcall
xchg
jne
mov
cmpsl
fisttpll
jno
andb
adc
and
lods
rclb
enter
idivb
xor
cmp
xor
std
add
add
mov
xlat
mov
mov
pop
sti
or
push
call
push
push
out
sti
xor
mov
pop
aaa
xor
inc
je
out
pop
es
pop
lcall
xchg
pop
pop
mov
inc
push
add
aaa
fldt
fimuls
fbstp
loop
test
xor
dec
fidivs
out
iret
adc
add
and
mov
sbb
or
cmp
sahf
dec
cmpxchg
out
dec
or
xlat
fcmovu
adc
rclb
xchg
pop
xchg
add
int3
inc
imul
sti
call
fwait
jg
shll
lock
and
std
inc
jno
test
out
add
xor
xchg
popa
sbb
pop
add
sbb
dec
ret
inc
loope
aam
inc
xor
imul
stos
ljmp
sub
mov
or
mov
mov
dec
popa
cmpl
scas
ficomps
jne
jl
decb
lds
mov
sahf
cli
jp
pop
stos
lock
mov
std
mov
lret
or
gs
jl
repz
mov
push
mov
fildll
out
aam
aad
or
xchg
jmp
sub
rcl
ds
std
sar
lock
out
in
lea
mov
out
mov
lock
xlat
jg
stos
pminsw
scas
jp
mov
adc
pop
sbb
int
lret
stos
jl,pt
xchg
adc
sub
pop
out
push
jp
dec
cli
or
pop
jne
cmp
push
mov
pusha
mov
mov
stc
pop
mov
rcr
mov
inc
sub
rol
into
fidivs
ror
cli
or
cs
inc
mov
and
decb
inc
adc
cmp
int
mov
add
stos
mov
ficoml
sbb
imulb
mov
into
pusha
mov
jg
sahf
inc
sahf
xor
fbld
adc
sahf
sub
push
int3
add
cld
lret
and
mov
psubusw
iret
mov
push
xchg
fcomps
cmp
jp
add
in
mov
std
sbb
psrlw
stos
loope
cs
stc
fptan
sbb
cs
mov
insl
outsb
cmp
arpl
fistl
mov
jae
dec
jne
push
dec
adc
jge
popl
inc
xor
add
sub
inc
mov
xchg
sub
neg
adc
movb
fdivs
mov
pop
cmpsb
je
xor
ljmp
adc
jle
mov
pop
and
cmpsl
in
scas
in
push
andl
fisubrl
xchg
and
cmpsl
push
mov
sbb
cld
adc
shlb
adc
ds
sub
push
push
xchg
push
ss
sub
out
sub
push
cmp
aas
icebp
mov
int3
cmp
ds
push
rol
js
sub
inc
int3
push
dec
dec
les
pop
dec
divb
jl
movsl
lcall
sub
out
dec
or
sbb
lret
daa
pop
mov
aaa
sbb
push
push
test
mov
loopne
enter
popa
inc
sub
ss
pusha
stc
mov
and
xchg
sbb
enter
iret
cmpsl
dec
jo
push
mov
add
xchg
mov
push
loopne
jns
push
fists
xor
sub
les
roll
mov
add
cmp
jnp
push
push
test
out
mov
out
mov
outsb
mov
xor
mov
xchg
std
inc
insb
add
mov
decl
jp
pop
sub
mov
jg
lods
xor
clc
push
and
sti
mov
xchg
cli
mov
fnstcw
aad
jmp
mov
xchg
pop
int3
dec
or
nop
mov
pop
fsqrt
sbb
jg
xor
ret
iret
in
xor
mov
or
push
fcomi
cmp
shlb
ja
lock
xor
jle
jmp
cmp
fdivrl
jns
incb
dec
push
in
call
pop
jae
insl
fdivrl
dec
push
aas
call
repnz
hlt
loop
dec
dec
jbe
xchg
js
in
mov
sub
out
out
jb
loop
loop
iret
jns
aam
js
std
xor
lock
mov
testb
pop
cmpsl
sub
jp
mov
jb
inc
iret
dec
ret
shl
addr16
lahf
cmp
leave
out
or
cmc
sub
insl
sbb
inc
add
push
jne
loop
inc
das
aas
cmc
cmp
cmp
mov
hlt
ret
stos
or
adc
pop
or
sub
add
adc
mov
jmp
push
and
iret
pop
cmp
jnp
std
sar
int3
aam
mov
test
int3
pop
push
adc
add
jle
cmpsb
in
je
loope
push
movsl
xchg
sub
stos
sub
add
in
leave
cld
fidivl
lds
mov
pop
lock
decb
mov
scas
aad
lahf
popf
stc
cmp
cmp
and
jb
dec
lret
sarl
leave
leave
loope
mov
mov
test
jns
mov
or
repz
mov
sbb
or
out
mov
mov
inc
pop
fdiv
ds
or
loope
nop
or
data16
push
pop
jecxz
dec
scas
push
test
inc
pop
mov
xchg
inc
push
sbb
adc
faddl
add
popa
jns
add
ss
ficoml
mov
ja
cmp
lods
das
push
push
ljmp
in
xchg
cmp
ljmp
mov
adc
fisttps
ljmp
inc
dec
je
ret
arpl
xlat
sub
pop
int
pop
mov
dec
adc
mov
cmp
mov
mov
mov
sub
or
loop
dec
mov
aaa
decb
pop
jge
pushf
mov
arpl
lcall
pop
cmp
adc
lock
out
loope
pop
push
push
mov
jp
cwtl
pop
mov
xchg
xchg
adc
mov
xchg
add
jecxz
call
gs
test
mov
mov
jns
loope
aas
out
mov
push
or
push
push
sti
push
ret
cmpl
mov
mov
add
mov
mov
and
sbb
lods
mov
jae
pop
push
mov
pushf
outsb
push
movl
push
cmp
xor
and
rol
out
add
pushf
enter
enter
pusha
sbb
fcmovnb
call
push
xchg
das
mov
mov
loope
sarb
cs
rorb
leave
mov
cli
repz
fcmovb
push
push
mov
push
fimull
orb
fidivl
jecxz
lcall
lret
cli
mov
dec
push
pop
adc
jp
fbstp
cwtl
cmpsb
dec
mov
sbb
pop
dec
xchg
sub
loope
fdivrs
jl
imul
or
stos
push
addb
stos
xchg
test
movsb
inc
lahf
mov
lock
fbld
mov
out
int3
idiv
pusha
mov
dec
das
or
mov
jne
pop
adc
loopne,pt
add
int3
sahf
push
int3
cmp
mov
inc
mov
mov
fscale
mov
ds
push
sub
mov
lahf
sahf
enter
jle
cmp
mov
and
inc
mov
sub
fimuls
or
mov
lea
repnz
pusha
test
loope
cmpsl
aam
fsubl
ret
pop
lret
fucomi
jae
outsb
fistl
fstl
movsl
push
pop
and
loop
sub
sub
leave
jbe
dec
sbb
sub
adc
fwait
xor
es
int3
xlat
popa
fmuls
push
cli
xchg
mov
sahf
sbb
mov
and
inc
in
les
sbb
cmpsb
aas
ret
stos
icebp
icebp
repnz
lds
cmp
push
aas
push
inc
insb
insl
add
shr
out
pop
sahf
pop
inc
enter
push
int3
ret
push
sub
mov
add
call
aas
jecxz
sub
mov
pusha
pop
push
cmp
push
sti
iret
shr
insl
adc
inc
loope
add
iret
push
mov
adc
pop
idivb
dec
mov
js
jmp
cli
push
add
sbbl
cwtl
xchg
cli
add
mov
push
xchg
inc
push
clc
mov
xor
in
fidivs
pop
fdivrs
mov
ror
or
fs
mov
iret
mov
das
call
ss
mov
push
jbe
sub
aam
enter
mov
imul
add
pop
xor
jle
mov
bound
cmp
fcmovbe
mov
push
mov
cmp
leave
sarb
jne
xor
push
mov
mov
out
fstpt
rcll
rol
std
push
cmp
icebp
push
sub
jmp
xchg
sahf
xchg
jg
inc
lret
pop
rolb
adc
fisttps
push
xor
incl
and
and
pop
and
jle
rcrb
jle
xor
pop
icebp
cli
inc
inc
pusha
xlat
rcrl
mov
push
pop
mov
sahf
lea
sbb
add
stos
in
into
iret
dec
mov
xor
jmp
xchg
xchg
xchg
out
cmp
xor
dec
mov
sbb
mov
stc
jecxz
cli
insl
in
cmc
les
xchg
stos
adc
mov
lock
movl
ds
and
xchg
pop
sbb
mov
loope
mov
in
push
pop
ret
rcrb
inc
ret
and
std
push
leave
mov
sub
ret
sbb
inc
pushf
push
iret
jne
pop
jae
cmc
dec
in
jle
inc
push
lret
sahf
ss
imul
outsb
and
in
push
sbb
mov
sti
mov
lahf
push
test
pusha
loop
xchg
jmp
mov
mov
jnp
scas
jle
xchg
int3
pop
imull
inc
add
jae
push
pop
mov
mov
cli
lods
pusha
add
mov
or
in
arpl
jg
and
push
jle
mov
ds
mov
push
mov
lret
rcll
mov
push
dec
out
mov
jge
mov
rcrb
pop
addr16
iret
lret
push
dec
add
dec
xlat
aas
popa
fldcw
sbbb
mov
int3
xchg
ss
sub
sbb
int
mov
ljmp
push
dec
cvtpi2ps
rorl
rcrl
xor
bound
push
sahf
pop
pop
push
sub
or
lret
sarl
mov
cmp
ds
xor
xlat
incb
idivl
or
inc
icebp
cmp
rclb
enter
fld
adc
rcr
call
arpl
movsb
out
js
add
data16
mov
adc
xchg
leave
lcall
sbb
push
inc
fisubl
repz
insb
mov
jge
sbb
ret
lds
scas
repnz
xchg
xor
sahf
add
sub
loop
aad
jg
mov
and
and
pusha
loop
cli
test
pop
jle
addr16
sub
cmpb
insl
daa
adc
sbb
aas
or
cli
mov
sub
orl
out
add
addr16
jmp
jecxz
lret
fcmovnbe
lcall
cmpsb
or
cmp
dec
mov
js
aaa
aaa
jg
rcr
adc
pusha
inc
add
adc
dec
js
sbb
jecxz
in
push
dec
fiaddl
arpl
adc
into
jl
ds
ds
push
push
jb
imul
push
mov
add
incb
mov
sub
sub
fstpl
imul
filds
add
jecxz
push
mov
jnp
push
cli
outsl
lds
add
scas
jbe
pop
movsl
cmp
or
mov
shr
xchg
push
jmp
scas
dec
push
sub
jbe
mov
sahf
jmp
loope
adc
pop
pop
xor
add
add
cs
jb
pop
mov
push
pop
inc
sbb
sahf
jns
jb
cmp
inc
popa
jb
inc
cli
cmp
sub
dec
mull
push
cmpsb
rorl
sahf
lret
cwtl
stos
daa
lods
push
inc
push
dec
cmp
fldl
xchg
add
out
sub
push
movsb
or
shlb
lds
out
mov
ja
loopne
mov
lods
xchg
popf
inc
jp
mov
in
shl
mov
add
aas
xchg
and
jg
sbb
hlt
scas
xor
jmp
mov
or
ror
aam
enter
jns
or
sarl
cmp
sarl
push
jg
cld
dec
mov
push
jno
push
jo
stc
out
enter
jb
fstpl
es
mov
adc
sarb
int3
lret
out
ss
lds
mov
mov
incl
xor
add
movsb
fdivs
push
cmp
push
adc
inc
sbb
xor
data16
out
xlat
add
repz
or
lds
mov
movsl
jle
sub
add
clc
jl
das
adc
insl
xor
and
test
mov
insb
push
pop
cltd
jmp
inc
inc
add
xor
ljmp
push
adc
notb
rcrl
dec
testb
jnp
or
fwait
cli
enter
adcb
sahf
aam
ljmp
pop
jns
ljmp
shll
mov
xchg
je
fsubrs
loopne
mov
clc
dec
mov
iret
sub
ja
std
or
inc
sahf
mov
xchg
adc
loop
and
call
jmp
leave
mov
ror
xchg
cltd
mov
insl
rcrb
mov
pop
and
imull
test
xlat
adc
adc
icebp
mov
stos
lock
jl
addr16
cwtl
xlat
iret
shlb
add
loop
cli
pop
lcall
xor
repnz
nop
ljmp
xchg
loop
jnp
or
xlat
mov
subb
mov
into
add
mov
inc
ret
mov
sar
addr16
sub
mov
mov
push
out
sub
ja
negb
dec
sbb
icebp
fstpl
aas
xor
add
xchg
stc
sahf
xchg
xchg
hlt
xchg
rol
push
aas
and
jp
mov
pop
push
inc
sub
cwtl
mulb
sahf
getsec
repz
cli
rcrl
hlt
je
stos
cs
add
in
add
mov
dec
movsb
add
into
add
inc
inc
xchg
or
inc
js
fnstcw
andl
push
in
adc
daa
clc
inc
ss
enter
dec
mov
dec
mov
mov
testl
into
mov
in
mov
fisubrl
in
or
mov
mov
in
jo
mov
sarb
add
ret
mov
cmp
adc
xor
sub
ficoml
mov
pop
cmp
lods
xchg
jne
add
cmc
fldt
cli
mov
xor
sub
mov
cli
vrsqrtss
int3
shlb
cmp
xchg
cmp
pop
fsubrs
lods
mov
lds
adc
test
xchg
inc
addr16
mov
xchg
mov
scas
xor
mov
xchg
js
mov
xchg
mov
js
aad
lahf
loop
rol
xor
aas
pop
mov
mov
adc
pop
or
xor
mov
repnz
in
jns
jne
lahf
les
cmp
inc
mov
call
lret
add
ja
mov
sub
sahf
jnp
leave
stos
stos
movsl
dec
clc
insb
dec
outsl
cmp
or
jp
lock
cmpsb
push
call
mov
les
xchg
loope
add
xor
lcall
jb
mov
loope
jge
or
pop
rcrb
fistpll
into
call
aad
out
testl
enter
fsubs
lock
push
insb
cmp
stos
out
pop
jg
out
cmp
jae
jp
inc
xchg
inc
orb
addr16
std
jp
negb
xor
sub
out
imul
lret
rol
outsb
call
out
mov
mov
push
adc
ss
sub
js
mov
popa
cmp
mov
sbb
ret
push
aam
pop
aas
idivb
mov
int
xchg
fmul
inc
mov
ret
xlat
pop
iret
insl
add
lcall
imul
sub
sbb
cmpl
push
addr16
int
cmp
adc
mov
xlat
ljmp
dec
add
and
ljmp
jge
mov
mov
push
mov
mov
pop
iret
stc
xor
aaa
jl
insb
mov
jns
cmpsb
fdivrl
orb
rorl
out
clc
push
dec
inc
xorb
les
inc
or
shr
cmp
cltd
mov
rorl
cmpb
pop
push
mov
lds
cmp
fisubl
add
xor
cmp
int3
push
mov
adc
cmp
jne
sub
inc
ret
testl
cmp
cs
inc
ds
adc
lock
push
leave
int3
or
sub
adc
data16
and
add
fsubrs
rorb
ds
inc
call
fsubl
imul
jne
xor
push
je
pop
enter
gs
mov
or
push
or
xchg
fisttpl
lahf
enter
lret
shrl
xor
mov
mov
mov
sub
mov
sub
mov
outsl
pop
sbb
mov
pop
lcall
sub
in
shrb
aad
test
inc
xlat
push
pop
sarb
adc
notb
pushf
jmp
aas
das
mov
sub
notb
inc
shr
inc
mov
or
jl
or
pop
mov
jg
mov
lahf
mov
jmp
jp
aas
iret
insl
sub
jmp
xor
pop
scas
sbb
fstpl
cmpsl
sub
dec
subl
enter
shll
push
pop
fiadds
dec
mov
fildll
lcall
sbbb
repz
jne
adc
sbb
inc
mov
aaa
jb
aaa
mov
mov
mov
fadd
mov
adc
rcr
xor
inc
push
sub
sub
mov
popf
cli
vshufps
lods
pop
mov
and
mov
lcall
ret
pop
jmp
mov
and
cmp
enter
int3
mov
dec
std
sbb
repnz
loop
notb
sbb
ret
in
mov
xor
mov
in
dec
xor
sarl
out
jp
jne
cmc
or
jne
mov
sbb
pop
inc
loopne
sbb
repnz
in
aas
sbb
inc
or
lret
jne
test
jg
push
repnz
das
ss
inc
mov
in
int3
adc
sub
jmp
inc
mov
sub
sarb
sbb
push
mov
clc
jp
cli
ret
jle
aam
faddp
dec
push
mov
ds
iret
push
jmp
sahf
jb
add
ljmp
das
inc
mov
push
xor
dec
adc
shlb
inc
xor
lds
es
repz
loop
out
xchg
mov
mov
sahf
jnp
decb
je
pusha
sbb
dec
in
fsubr
fistps
lds
mov
ret
mov
rcl
lods
ss
push
ss
jecxz
fldcw
add
scas
jp
mov
cltd
in
sbb
lea
or
inc
mov
cmp
adc
idivl
in
xlat
cmp
or
cmp
adc
popa
mov
lahf
pop
sbb
sub
pop
push
arpl
xchg
jmp
jbe
fdivr
or
lret
pop
cmp
dec
and
or
lret
mov
fimuls
xchg
add
test
cmp
cmp
sar
movb
gs
test
mov
and
in
jns
lock
cwtl
and
dec
out
dec
cs
fcom
loopne
cmc
jecxz
sub
adcb
ret
lret
sahf
int
mov
fidivrs
pop
pop
dec
bound
add
or
fnstcw
sub
sbb
mov
jne
mov
push
and
xor
les
ss
test
jmp
pop
dec
ja
icebp
clc
mov
mov
adc
stos
or
mov
clc
mov
lcall
mov
cs
adcl
jg
push
cmp
mov
enter
stos
lods
pop
or
fmuls
and
mov
mov
sti
mov
jge
mov
decb
js
loopne
sbb
cmp
dec
addb
add
adc
add
mov
dec
movsl
cmp
dec
sti
add
fistl
xchg
in
dec
pop
test
and
push
loope
pop
dec
cli
leave
sub
lcall
cmpsb
ss
mov
ds
pop
adc
mov
jb
dec
sahf
nop
jmp
or
clc
or
push
lret
jo
cmp
xor
in
addr16
into
push
outsb
ss
enter
mov
jle
lods
stos
sbb
fcomps
jle
push
shl
jg
mov
ret
pop
fcmovu
cmp
hlt
sbb
js
adc
pop
fmuls
int
push
lret
rorl
test
fcomp
rcrb
pop
xlat
xor
cmp
xor
cmp
and
movsl
inc
ds
mov
repnz
push
insl
sti
xor
sub
mov
jle
das
add
mov
cmp
test
mov
subl
mov
push
jg
inc
push
or
or
jecxz
mov
add
cmp
dec
lea
out
mov
or
fs
jg
addr16
push
adc
daa
inc
cld
movb
sahf
pop
out
push
and
sahf
iret
xor
inc
inc
ss
xchg
jle
xchg
mov
dec
mov
cmpsb
icebp
or
incl
lret
aas
sti
mov
popa
cmp
adc
add
push
mov
psubw
xlat
les
stos
mov
enter
push
les
repnz
addr16
ret
shl
dec
das
es
xor
xchg
lret
leave
loope
dec
dec
and
clc
add
mov
loop
rcl
into
cmp
rolb
add
adc
ret
jp,pt
jbe
setae
mov
or
out
cld
lods
std
push
pop
dec
sbb
aaa
xor
sbb
in
inc
mov
dec
clc
mov
sub
sub
pop
pop
mov
push
cltd
sbb
mov
mov
fcmovnb
jne
mov
fcomp
ror
push
adc
mov
pop
mov
cmpsb
cmpsl
add
aaa
aas
xchg
int3
cmc
aad
pop
mov
xchg
xchg
ljmp
xchg
nop
clc
insl
mov
push
push
add
inc
rcr
adc
dec
outsb
aas
shrl
mov
push
fcomip
ds
lods
xor
xlat
xchg
pop
inc
lea
mov
rcr
mov
dec
or
cld
lahf
jnp
sub
sti
je
jb
test
lcall
sbb
test
adc
rcrb
stc
mov
iret
push
sub
leave
ret
push
ds
fdivrl
sbb
sbb
xchg
cmc
ret
jb
sti
mov
pop
movsb
push
test
sub
mov
enter
pop
mov
int3
loop
push
jle
psadbw
jle
lcall
scas
loop
sub
xor
andb
dec
loopne
or
cmp
pop
and
dec
jge
sbb
dec
add
dec
jp
jne
mov
test
fcomps
and
adc
aas
loop
stos
mov
aad
ja
add
sbb
add
dec
xlat
xchg
xor
scas
sti
fsubrl
das
mov
jle
and
loop
out
nop
cmp
mov
sub
lea
pop
bnd
jmp
iret
or
and
mov
adc
cmp
popf
sbb
sarb
lret
cli
adc
sahf
mov
or
mov
add
xor
cmp
cmpsb
rclb
pop
fst
loop
cmp
adc
mov
jb
pop
pop
adc
stc
into
lock
dec
jmp
out
jo
mov
push
ret
sbbl
ds
les
sbb
cmp
mov
sbb
dec
jne
dec
js
inc
xchg
jl
adc
int3
shrl
and
imul
adc
jg
xchg
dec
outsb
data16
rolb
cltd
lds
movsb
sub
push
adc
jns
out
aas
aam
enter
fadd
xlat
xor
jne
fidivrl
aad
mov
mov
loope
in
lea
mov
into
sub
ret
cs
fcmovb
jg
lret
int3
add
mov
divl
mov
pop
fsub
and
ret
test
test
sahf
insl
lds
pop
sub
scas
and
notb
or
or
rcl
push
mov
int3
and
sahf
add
out
gs
scas
testb
icebp
push
mov
clc
mov
pop
fadd
subl
aam
push
mov
jne
leave
adc
iret
push
push
int3
cltd
push
cli
or
cld
push
jne
jge
sahf
dec
or
jg
popf
push
test
add
cli
cwtl
mov
sbb
sub
call
mov
imul
je
push
ffreep
test
push
mov
dec
jno
call
dec
nop
push
repz
fdivrp
shrb
into
jne
push
cmp
inc
xor
and
adc
pop
xor
xor
pop
fisttpl
rolb
shlb
push
jo
sti
and
push
sbb
or
into
sub
or
or
or
dec
xor
or
ret
dec
pop
clc
leave
loopne
xchg
sarb
xor
leave
sub
repnz
pop
lret
movsb
cmp
iret
out
or
mov
lods
pop
leave
call
rcll
dec
aam
and
fxch
and
mov
xor
add
dec
xlat
mov
cltd
xchg
lret
loopne
loope
les
inc
ffree
mov
cmp
insl
insb
jle
inc
das
xlat
jge
inc
add
ret
shl
push
outsb
dec
test
mulb
daa
scas
arpl
testb
cld
mov
push
sub
mov
clc
arpl
xchg
pop
add
mov
xor
dec
pop
test
add
stos
popa
mov
es
mov
and
scas
add
jno
mov
jns
into
jbe
or
sahf
add
and
inc
push
mov
in
sahf
push
xor
int
add
fstpt
in
movsb
jmp
and
mov
mov
adc
cli
sub
sub
inc
fnsave
cli
cmp
lds
add
adc
mov
push
sub
js
nop
iret
shll
enter
mov
dec
jmp
cmp
dec
repz
inc
cmp
push
or
fnsave
and
mov
test
push
fxch
lret
cmpsl
flds
cmp
mov
inc
xor
mov
and
gs
scas
out
mov
cmp
push
outsl
out
adc
leave
sub
movsb
xchg
mov
and
xor
hlt
lahf
push
mov
mov
mov
sub
int3
add
sti
jb
not
adc
outsl
jecxz
movsl
lcall
pop
xor
add
sub
push
push
adc
inc
add
mov
shlb
xchg
lock
push
jl
xchg
xchg
or
shll
hlt
jae
push
mov
stos
xchg
inc
mov
loopne
arpl
and
adc
mov
sbb
xchg
mov
mov
push
sub
into
xchg
cld
lock
repnz
cmpl
pop
shrl
js
fnsave
lahf
aaa
dec
icebp
cmpsb
mov
das
sub
iret
cmp
icebp
sbb
sbb
loope
jecxz
sub
cmpsb
xchg
ret
xchg
adc
adc
loop
rcr
test
mov
inc
pop
rcl
xor
ljmp
insl
lods
push
sti
repnz
jecxz
or
ret
ret
jge
les
popf
sbb
lea
out
xchg
leave
mov
into
dec
mov
cmp
sub
jnp
bound
push
stos
push
call
les
and
jb
andl
jp
sub
push
xchg
or
lret
push
xor
pop
pop
in
shr
rorb
push
xchg
push
clc
mov
loop
cmp
lcall
fisubrs
insb
daa
loop
int
call
je,pt
jge
std
int
imulb
pop
mov
add
jle,pt
jecxz
mov
test
pop
ds
fwait
lea
adcl
add
imul
push
jp
bnd
divl
cli
xor
xchg
sub
fdivrl
inc
jge
xchg
mov
push
add
sbb
and
imul
es
loop
xor
sub
rol
mov
xchg
mov
adc
mov
sbb
xor
iret
rorb
out
popf
stos
addr16
pop
ret
xor
lret
dec
inc
idivb
sti
ljmp
lock
jmp
or
fdivs
add
out
dec
ds
arpl
sub
inc
jbe
mov
sub
xchg
adc
lcall
mov
gs
pop
fsts
jb,pt
dec
mov
push
movsb
fcomps
out
push
cmp
repz
fiadds
push
in
dec
in
push
dec
or
add
mul
mov
rcrl
xchg
call
xchg
jbe
sub
sahf
push
ljmp
cli
cli
xlat
jno
xor
mov
pop
fdivs
mov
jno
clc
dec
push
hlt
cmc
pop
jp,pn
xchg
mov
in
lock
cmp
or
outsl
lods
jle
mov
aaa
add
xchg
loope
xor
push
loop
fwait
iret
test
dec
push
inc
or
loopne
inc
xchg
fiaddl
stos
aas
inc
and
sub
ret
ds
inc
lret
mov
cmp
inc
mov
sub
fldenv
arpl
push
ret
sarl
inc
cmpsb
inc
push
pop
test
or
xchg
sbb
xor
ja
int3
cmpsb
test
cmp
and
xor
ret
js
sahf
inc
jne
scas
ficomps
jmp
int
clc
and
add
mov
pop
pop
xchg
inc
jno
or
push
mov
push
xor
fsubl
shrl
fbstp
es
pop
cli
inc
mov
and
movsb
mov
outsb
add
push
scas
pop
icebp
ret
inc
addr16
sahf
enter
sarl
daa
cmp
aad
std
inc
cs
adc
push
ds
rcr
dec
leave
mov
dec
xor
fidivrl
sti
push
loop
cli
push
xor
or
add
stc
mov
pop
iret
sub
cmpsb
loopne
pop
cmp
movsb
lds
ljmp
loopne
stos
ss
xor
sbb
mov
or
mov
adcl
rcl
and
push
push
pop
jl
push
ret
jns
jae
hlt
and
andl
loope
lcall
scas
xor
xchg
xor
mov
xlat
pop
xlat
loope
mov
pop
cmp
mov
push
in
add
mov
aad
xor
push
pop
adc
mov
movsl
in
mov
in
cltd
mov
stos
or
xchg
aaa
fstpt
sub
mov
iret
fisttpll
and
ss
jecxz
out
adc
push
out
sahf
dec
ljmp
mov
out
out
fisttpl
inc
inc
fdivrl
mov
xor
icebp
push
xor
mov
push
ljmp
mov
out
sarb
push
mov
pop
mov
sahf
in
xor
jnp
aas
mov
pop
clc
add
stos
dec
xchg
push
jo
or
jl
xor
push
into
mov
and
shr
fyl2x
ret
lret
push
adc
push
mov
inc
int
jnp
popf
cld
jecxz
daa
sub
sti
mov
fstl
jp
jno
jbe
ds
sub
mov
ret
or
ret
mov
test
clc
orb
sbb
jg
adc
push
lret
or
mov
outsl
cmp
cmp
pop
pop
pop
ret
das
into
dec
inc
mov
dec
pop
dec
mov
pop
loop
in
jl
sti
cmpsb
mov
pop
sti
mov
sub
ret
jne
test
cmp
dec
sbb
loope
sbb
dec
lret
lds
sub
pop
inc
push
cli
xor
push
push
xor
insl
adc
sub
jg
mov
push
das
call
or
int3
data16
mov
fdivl
orb
cmp
mov
push
notb
lret
and
lret
mov
fstps
and
add
call
xor
daa
call
popf
push
mov
outsl
pushf
fisubrl
pop
mov
ror
ficoml
or
loope
fildl
lock
fcmovb
xchg
call
cmp
xor
fiadds
push
dec
push
ret
mov
xor
jecxz
loop
inc
je
lods
push
xchg
shl
cmp
mov
adc
iret
enter
in
arpl
cld
fists
cmp
icebp
cmp
xchg
mov
adcb
add
dec
les
imul
imul
mov
inc
cltd
inc
icebp
lret
sub
jg
icebp
mov
jp
mov
jle
gs
fiaddl
inc
push
jge
xchg
mov
xlat
fdivrs
loope
xchg
or
push
mov
out
ret
jo
imul
adc
cmp
lahf
or
rolb
fnstcw
add
lea
sbb
mov
cld
push
ret
or
mov
cmp
fiadds
mov
int3
test
mov
ss
mov
sub
leave
test
cmp
shll
movsb
xchg
ret
in
cs
xchg
add
fwait
pop
mov
dec
mov
sub
inc
dec
sub
xor
call
cmpsb
mov
xchg
lds
mov
and
mov
cmp
sbb
adc
sbb
mov
lsl
pop
add
push
jle
dec
adc
out
cmp
jg
cmpsl
sti
and
cmp
add
mov
mov
lahf
fdivrs
xchg
sbb
jecxz
lret
inc
int
cs
push
or
into
lods
xchg
movl
ret
adc
ret
push
adc
add
das
add
jb
mov
insl
cmp
push
xchg
into
dec
or
inc
gs
mov
cs
ss
jp
mov
nop
lret
sarl
mov
scas
adc
sbb
mov
andb
cmc
aad
jmp
call
xor
movsb
xor
int3
outsl
mov
jne
and
push
lods
sti
sbb
cmc
and
xchg
lret
jecxz
ds
rcrl
xchg
iret
pop
clc
add
stos
lea
cmpsb
jecxz
xchg
pop
outsb
mov
cmp
mov
stc
mov
xlat
or
jg
subl
scas
cmp
mov
mov
imul
aam
pop
fsts
in
sti
sar
lds
cltd
cmp
pop
sub
mov
xchg
daa
push
call
pop
sub
sbb
xchg
push
push
or
popf
movb
loop
std
sbb
dec
lret
out
jmp
inc
push
adc
js
clc
cltd
dec
arpl
xchg
inc
mov
aam
pop
xor
jge
dec
and
inc
test
test
je
test
rcrb
mov
adc
push
inc
sarl
jmp
mov
inc
jb
push
push
jle
outsl
jae
sub
push
js
sub
ds
xorl
jge
cld
sub
pop
lcall
mov
mov
in
cmp
pop
rolb
movsl
cld
int3
mulb
sti
sbb
cld
test
inc
stos
ss
es
clc
ds
xor
sbb
jae
into
repz
or
adc
pop
fwait
insl
xchg
sahf
mov
xor
xchg
jmp
movsb
fmuls
pop
sbb
push
icebp
clc
lahf
sub
dec
cmp
xchg
cmp
movsb
ds
or
rorl
cmp
lea
aad
and
sbb
subl
hlt
xor
xchg
mov
lcall
xchg
adc
fwait
pop
lret
imul
add
movsb
or
test
sub
mov
xor
adc
arpl
or
in
xchg
cmpsl
enter
stos
shll
lret
out
out
js
ss
add
sbb
hlt
adc
jno
in
xor
or
adc
lahf
call
mov
sub
incl
nop
loope,pt
imul
xor
adc
insl
mov
daa
sbb
mov
cli
cmpsl
inc
lret
pop
jmp
pop
inc
fists
enter
mov
test
sti
xor
push
push
inc
jmp
jp
mov
dec
in
aaa
imul
sbb
inc
sub
stos
imul
cli
jo
push
xchg
mov
push
cmp
jne
mov
rolb
xchg
xlat
fisttpl
jle
cli
jge
mov
fsubrs
aas
sub
repz
into
aaa
cmp
push
push
icebp
or
lods
pop
dec
out
bound
psrad
notl
mov
rcr
push
repz
mov
jo
xor
pusha
add
jo
inc
enter
fxtract
xlat
jp
scas
cwtl
enter
fidivs
inc
pop
cmc
and
push
xchg
cmc
in
cmpsl
inc
rcl
xlat
adc
pop
int3
xlat
pusha
adc
pop
lock
movsb
mov
lcall
leave
and
mov
or
dec
jnp
mov
arpl
mov
ret
ljmp
mov
test
sbb
fidivl
sbb
jp
dec
lea
or
xor
stc
ljmp
cmp
or
insl
push
pop
or
fcmovbe
jecxz
and
aas
mov
loop
push
xor
cli
popa
cmp
mov
and
icebp
lods
xor
sarl
test
addr16
sub
rcrb
div
ds
in
jg
mov
rolb
stos
cli
mov
push
and
xlat
xchg
cli
icebp
jle
xor
fstps
hlt
fsubs
mov
xor
lahf
lods
jge
cmp
mov
insl
repnz
sub
mov
xor
and
mov
adc
or
orl
adc
stc
fiaddl
or
aas
rcll
mov
lret
filds
pop
and
outsb
sbb
rclb
fstpt
je
neg
out
jne
jle
mov
int3
adc
shll
stc
aaa
lds
xchg
pop
test
pop
clc
dec
adc
lds
mov
enter
inc
lods
sub
mov
jp
dec
mov
fimuls
mov
mov
lahf
mov
sahf
icebp
add
outsb
cld
fmul
mov
cli
inc
or
mov
cld
push
mov
sub
aaa
add
iret
mov
int3
pusha
mov
mov
adcl
mov
or
int3
popa
fmuls
or
jno
mov
mov
into
outsb
jnp
call
sbb
shlb
mov
push
aaa
out
sarl
cli
xor
not
ficomps
cmp
dec
stos
loopne
outsl
out
enter
push
dec
dec
xchg
inc
ret
mov
mov
sbbl
aam
jg
jno
pushf
sar
or
std
sbb
mov
dec
and
divb
sti
rclb
movsb
rcrb
cs
xor
mov
mov
imulb
and
mov
push
xor
xchg
inc
dec
repnz
aas
sti
inc
cs
repnz
mov
jl
incb
roll
pop
jae
arpl
fdiv
cmp
inc
and
jno
mov
aad
sti
push
mov
sub
cmp
pop
cmp
jmp
ja
ret
jo
sub
out
rorl
std
mov
loop
loope
ret
xchg
jge
mov
jb
ret
jae
aaa
sbb
jp
mov
data16
adc
stos
ds
cli
je
mov
mov
imul
xchg
inc
xlat
stc
lret
fdivrs
and
aas
fsubr
dec
push
sbb
inc
cld
dec
pop
aas
lret
out
cmc
call
cmp
and
out
mov
pop
mov
mov
flds
cmp
sahf
cs
sbb
mov
fists
jmp
ret
fmul
cli
into
shlb
icebp
and
mov
insb
cmp
mov
popa
adc
stos
movsb
inc
leave
cmp
in
iret
popf
pop
ret
cld
lret
not
xchg
fildll
pop
inc
push
loope
xchg
in
imul
in
inc
pop
adc
jnp
mov
add
clc
adc
pushf
int3
xor
icebp
rclb
sub
dec
pop
pop
loope
inc
mov
inc
or
int3
lret
sarl
pop
es
into
dec
xchg
je
jne
xchg
in
rcl
push
lock
mov
xchg
movsl
aad
std
pop
int3
pop
cmp
adc
jle
jp
hlt
xlat
mov
je
cli
mov
movsl
in
iret
movsb
xchg
adc
mov
mov
cmpsb
mov
orb
add
pop
xor
pusha
out
insl
xor
sbb
inc
push
push
outsb
push
arpl
lds
jnp
rcrb
mov
mov
cmp
popa
mov
ret
cmp
das
and
dec
insl
mov
scas
sahf
push
jg
xor
push
std
lahf
adc
ss
pop
cmp
add
jo
nop
das
cmpsb
jl
sbb
adc
sbb
enter
mov
cmp
pusha
pop
cmpsb
cld
pop
pop
loope,pt
imul
lds
ss
jg
mov
dec
inc
or
xlat
cmp
cli
pop
xlat
test
cmpb
js
inc
mov
stc
lret
fsubr
jae
adc
and
mov
xorb
push
or
mov
fisttpll
cmp
jns
jecxz
sub
lret
mov
mov
std
add
pop
sub
fdivrp
loopne
mov
or
sub
or
and
lods
pop
das
jne
and
call
js
adc
mov
adc
sti
jl
add
xlat
dec
out
mov
lret
out
rcll
aam
and
mov
xor
and
adc
xor
cld
or
clc
loop
xchg
mov
mov
mov
dec
rolb
lcall
mov
add
or
lock
ds
push
xchg
test
dec
clc
fdivs
outsb
je
enter
cmp
dec
mov
js
incl
xchg
imulb
je
aaa
sbb
or
xchg
mov
ss
aaa
xlat
and
inc
sbb
push
mov
mov
dec
movsb
jle
roll
cmp
lds
adc
xor
scas
loopne
sub
rcrl
testb
sub
test
fidivrl
and
js
shrl
iret
mov
nop
xchg
mov
add
pop
lds
nop
shll
xchg
mov
nop
or
bound
stos
adc
jge
std
cmpl
ljmp
repz
adc
shlb
push
push
xchg
in
nop
pop
jle
sarb
leave
dec
arpl
int3
sub
fs
mov
out
jp
cs
xor
dec
decb
mov
cmp
icebp
dec
in
cmp
adc
clc
add
add
or
loope
inc
lea
dec
dec
mov
sub
lret
outsl
mov
fnsave
jl
sbb
dec
push
fsubl
out
stos
cmp
movsl
adc
test
xor
inc
rorb
dec
cmp
jno
lcall
les
or
repnz
out
int
rcll
cs
jne
inc
jle
data16
inc
mov
mov
lret
mov
pop
stos
sub
leave
loope
cli
dec
inc
jns
stc
data16
out
imul
xchg
addb
jmp
inc
sbbb
lods
adc
sti
decb
int3
out
pop
adc
sbb
inc
in
mov
cmp
sub
mov
aaa
in
leave
stos
ds
outsb
clc
fbstp
mov
in
xor
dec
into
lcall
mov
sub
adc
mov
adc
dec
test
movsl
sbb
mov
pop
push
outsb
cmp
or
mov
xor
mov
mov
int
add
pop
pop
ss
mov
stos
and
or
dec
mov
cltd
adc
cwtl
jne
sub
outsb
in
addb
in
bound
push
aam
sar
sahf
adc
in
aas
and
lret
divl
jp
pop
sti
daa
cltd
inc
sahf
mov
xor
imul
sarb
mov
mov
fnsave
scas
jg
loope
lahf
cmovns
test
dec
mov
aas
cmp
lret
adc
fcmove
or
data16
sarb
jle
rclb
lret
lods
into
rclb
into
mov
mov
mov
in
mov
mov
rcrb
ret
jl
cmp
adcb
sub
int3
outsb
pop
test
add
xlat
aas
inc
addps
into
flds
rcr
xchg
leave
aas
std
ret
or
repz
adc
adc
fadds
aad
xchg
or
enter
icebp
push
out
dec
rcll
mov
loop
xchg
add
lret
ljmp
jle
adc
pop
adc
cli
jg
rcr
sub
jle
pop
cmp
cmp
js
aas
cld
or
jp
fs
mov
icebp
les
lds
in
cmp
jmp
mov
enter
add
repz
outsb
pop
lret
xlat
mov
mov
out
mov
std
data16
jmp
fcoml
sarl
add
lea
sarl
and
push
clc
repz
mov
mov
add
sar
jp
push
xor
sbb
ljmp
mov
in
sti
xlat
mov
mov
xlat
or
mov
inc
adc
adc
push
mov
sti
xchg
cmc
inc
shlb
pop
sti
add
js
ja
lahf
je
icebp
fcmovb
fsubs
cmp
sarb
push
push
pop
clc
sbb
scas
add
lahf
sub
fs
or
add
fstps
jl
pop
ja
test
lock
pop
lcall
leave
sahf
out
add
in
mov
xor
dec
fdivs
ret
push
mov
imul
hlt
clc
jge
sub
lahf
loopne
sub
mov
cmp
sbb
inc
xor
mov
add
stc
mov
ljmp
and
daa
imul
xchg
les
fs
daa
filds
inc
jecxz
shll
clc
cmp
xor
adc
adc
int3
sti
push
daa
sahf
out
dec
jne
mov
inc
pop
repnz
mov
loop
cmc
pop
in
push
mov
icebp
mov
sarb
push
pop
add
out
push
sub
and
adc
mov
mov
aas
cmp
int
sti
mov
pop
std
sub
leave
clc
mov
sti
out
jbe
jmp
jge
mov
push
push
enter
stos
stos
xchg
jg
xchg
or
jne
stos
rorb
mov
dec
add
jmp
js
std
lods
mov
int3
in
and
inc
mov
push
addr16
ljmp
fsubrl
inc
seto
movsb
inc
fnstenv
rclb
mov
or
cmp
je
or
rorl
jg
xor
jle
aaa
pop
jmp
cs
pop
out
push
sub
jmp
clc
int3
sahf
jbe
pop
inc
or
outsl
and
fcoml
sub
mov
push
pop
pop
fldt
shl
sbb
lcall
shll
fidivs
adc
and
or
nop
jne
icebp
cmp
jle
aam
adc
loopne
insl
mov
aas
cmc
fwait
lret
mov
xchg
jge
test
ret
cli
sarb
mov
add
push
aaa
jge
jb
push
cmpb
and
push
jb
into
sahf
orl
cmp
arpl
fnstsw
stos
ret
jbe
loopne
imul
cwtl
div
loop
icebp
repz
mov
xchg
or
or
pop
cmp
or
rorl
popf
fistpll
cwtl
pop
xor
or
mov
sub
cld
mov
js
ja
adc
fwait
dec
adc
add
xchg
int3
loop
data16
pop
or
insb
mov
mov
inc
insb
fidivrs
mov
or
repnz
leave
sahf
inc
adc
lahf
jg
and
leave
sahf
cmc
xor
pop
inc
outsl
out
jne
pushf
xchg
adc
jae
lret
notl
fadds
ret
cli
into
pop
add
ret
cmp
out
testl
fisttpl
dec
dec
pop
and
cmp
or
cmp
and
adc
dec
adc
sub
das
fmuls
dec
push
fldt
imull
inc
aas
sti
jl
jae
clc
sahf
sbb
stc
mov
cmp
cmpsb
enter
ds
fmul
xor
add
xchg
cmpsl
pop
push
mov
mov
push
sbbb
add
aam
mov
hlt
push
add
and
or
cmp
dec
adc
cmpsl
ljmp
pop
mov
sub
inc
mov
mov
ss
popa
dec
lock
movsl
fimuls
insl
mov
jns
inc
pop
fstpl
mov
pop
and
lcall
test
es
outsb
lods
add
jecxz
scas
push
mov
fisttpll
imulb
or
jns
shrl
mov
repz
dec
mov
sub
es
flds
aam
mov
lds
mov
adc
push
shlb
mov
jae
sbb
jo
imul
addr16
inc
or
fcomps
jae
and
inc
jp
or
jl
jb
fcoml
lock
outsb
or
inc
orl
pop
pop
cmp
mov
mov
adc
push
mov
mov
pusha
int3
or
pushf
mov
jp
dec
sub
sub
push
jo
mov
cmpsb
jae
jne
fldcw
daa
and
mulb
cli
add
cmp
aam
arpl
sub
sbb
pop
outsb
lret
fwait
add
idiv
sbb
jne
dec
clc
pop
cli
pop
jp
sub
fiadds
jnp
dec
xchg
jp
shrl
fidivs
scas
cmp
aad
mov
jbe
sarb
cli
daa
xorl
jns
mov
dec
cmpsb
adc
pop
lret
push
faddl
test
out
jg
push
mov
sub
aad
xchg
ret
and
das
lds
jb
add
inc
sub
adc
jae
mov
mov
mov
mov
test
mov
subb
test
fistl
add
cs
test
je
lds
pushf
xor
in
ds
xchg
inc
out
sub
jno
mov
mov
xlat
sbb
or
shlb
stos
push
fdivr
pop
sarl
mov
cli
iret
cmp
xor
frstor
clc
gs
or
cmp
sbb
jp
mov
mov
shll
ret
scas
add
jecxz
popf
dec
lret
sarb
ret
or
ret
or
mov
mov
sub
mov
pop
inc
cwtl
insl
das
mov
pushf
push
mov
jp
or
jg
xor
push
xchg
sbb
mov
adcl
ljmp
enter
inc
lds
fs
mov
scas
pushf
mov
or
xlat
mov
testb
stc
jno
mov
movsb
inc
inc
sbb
ss
out
xorl
jbe
sub
dec
jmp
cmp
sub
mov
cmpsb
lahf
pushf
pusha
push
xlat
lds
insl
aad
out
mov
mov
fs
dec
cwtl
stos
sbb
pop
test
sti
sar
sbb
outsl
mov
mov
mov
push
fmuls
into
mov
mov
jmp
jle
push
mov
cmp
jmp
dec
pop
pop
iret
mov
fcmovnb
loope
rol
std
jnp
sub
fs
jp
jmp
les
push
xor
clc
rorb
ret
xor
xchg
daa
das
clc
mov
add
fcmovu
xchg
pop
mov
mov
adc
clc
dec
sbbb
jb
popa
cmc
ljmp
ret
mov
pop
dec
sbb
pop
sahf
xchg
and
xchg
daa
xlat
cltd
clc
test
or
inc
test
and
gs
loope
pop
stos
sti
push
stc
mov
fucomi
push
mov
adc
fcomps
fiaddl
mov
call
cmp
ds
mov
ret
frstpm(287
sahf
and
sahf
test
movl
ljmp
sahf
push
adc
dec
mov
inc
ficoml
lretw
std
stos
mov
or
addb
xlat
sub
dec
cli
pop
sbb
fsts
adc
xchg
push
jne
stos
pusha
or
sub
in
mov
xchg
cmc
jae
inc
mov
lods
stc
or
inc
xchg
hlt
ret
mov
js
pop
jae
dec
aam
rcll
xchg
add
cmp
mov
in
or
testb
imul
pop
ds
dec
add
enter
stos
xor
ljmp
daa
stc
inc
jp
test
mov
movsb
jmp
cmp
and
jecxz
bound
sbb
lahf
and
dec
scas
dec
adc
dec
add
scas
xchg
insl
cmp
fstp
pop
daa
pop
aam
inc
loope
inc
push
nop
pop
and
iret
mov
xor
jae
lahf
or
ret
fcmovnu
loop
leave
add
roll
jnp
sub
gs
mov
adc
sti
jno
dec
push
xchg
outsb
and
pop
inc
lret
inc
out
add
dec
or
cli
std
and
mov
gs
loopne
dec
jns
dec
pop
dec
and
pushf
lods
fstpl
jg
xor
mov
popa
rorl
mov
xchg
push
add
dec
adc
mov
rol
cmp
mov
sahf
add
mov
and
hlt
cs
add
pop
push
mov
dec
test
ret
movsl
jecxz
mov
push
dec
mov
adc
lahf
mov
mov
sbb
mov
mov
loopne
ljmp
loop
or
call
mov
rcrb
in
jae
dec
mov
fwait
mov
mov
js
sub
sarl
scas
es
mov
jb
loope
sbb
shl
adc
xchg
sbb
fbld
sub
dec
mov
inc
cli
scas
sub
sbb
lds
clc
dec
je
cli
hlt
into
xlat
and
jecxz
xor
dec
cli
sti
push
sti
push
int3
fdivs
xor
mov
ss
or
mov
pop
cmp
stos
xor
sub
sbb
lret
sub
or
jno
push
sub
add
sub
outsb
inc
sub
lret
or
mov
lret
push
shrl
push
scas
nop
or
pop
iret
xchg
jmp
dec
pop
add
cmp
pusha
mov
pop
repz
clc
xchg
lock
popf
mul
inc
gs
mov
rol
in
inc
jno
sub
inc
loop
sbb
adc
mov
cld
pop
push
shr
test
sbb
enter
mov
je
loop
lret
leave
sub
or
cmp
and
xchg
mov
out
repnz
gs
adc
and
stos
ds
out
stos
sbb
ljmp
mov
fwait
mov
loope
mov
daa
in
jl
incb
aad
dec
jno
jmp
fstps
mov
push
lcall
adc
sub
nop
mov
jmp
lret
pusha
adcb
xchg
push
adc
jp
mov
push
pop
cmp
subb
js
cli
pop
movsb
mov
loopne
scas
xlat
jl
xchg
lret
fdivrs
call
cmpb
fwait
clc
leave
or
xchg
pop
mov
mov
sbbl
inc
add
test
mov
aas
mov
lahf
push
adc
pushl
imul
sub
adc
xor
pusha
adc
scas
loopne
push
aam
adc
mov
cmp
fbstp
push
and
or
jnp
decb
lret
fmulp
inc
xchg
jle
and
mov
xor
outsb
mov
xchg
add
mov
xor
shlb
jle
cmp
arpl
inc
jge
adc
lcall
jae
xlat
sub
inc
enter
lods
stos
mull
add
stos
push
cli
mov
cmp
nop
mov
dec
icebp
mov
mov
xchg
loopne
cwtl
hlt
cmp
mov
push
adc
xchg
rorl
das
xchg
cmp
sahf
ret
adc
lret
push
inc
popa
sub
or
mov
scas
pop
cmp
xor
in
add
ret
roll
arpl
and
shll
enter
mov
inc
enter
idivb
add
test
add
sbb
rcrl
mov
in
mov
pop
xlat
sbbl
add
int3
and
inc
mov
sub
sbb
jecxz
test
push
inc
insl
lret
pushw
repnz
mov
cld
pop
pop
stc
jp
repnz
push
push
or
insb
ljmp
adcl
dec
mov
je
cs
mov
jmp
cmpb
icebp
shll
pop
das
mov
xchg
pop
mov
cmp
bound
stc
push
ja
sub
pop
sahf
ljmp
add
or
int3
pop
mov
incb
jp
cmp
fcmovu
in
das
ds
add
rcrb
ljmp
test
pop
sbb
jle
sarb
cmc
push
inc
mov
jne
mov
aaa
pop
imul
cmp
stos
push
or
jae
sub
ret
imul
dec
sub
cli
push
pusha
ds
adc
insb
mov
adc
test
jecxz
lock
lds
sahf
dec
repnz
loop
inc
inc
mov
xor
mov
mov
iret
inc
or
outsb
jo
jmp
xor
loopne
enter
scas
call
inc
mov
xlat
push
rcr
loopne
xchg
push
cmpsl
fimull
outsl
loop
sarl
into
and
dec
loopne
inc
shrb
dec
loopne
rcr
int3
jnp
repnz
cmp
jecxz
lret
mov
fistpll
jbe
je
or
stos
incb
pop
lret
int3
idivl
jle
data16
sbb
call
std
mov
jne
outsb
cmp
dec
sbb
push
jl
jbe
jle
adc
rolb
adc
cmp
movsb
sub
jmp
and
aas
add
mov
fxtract
lods
adcb
ljmp
mov
jbe
lock
mov
xlat
or
cmp
and
int3
inc
sbb
movlps
jno
mov
and
mov
push
sub
fldt
sub
jmp
sub
push
mov
lock
or
mov
icebp
push
cli
daa
js
push
sbb
adc
clc
push
ret
addr16
or
jno
cmp
pop
pop
add
add
test
add
dec
stc
fwait
pop
pop
sub
vmovaps
sarb
out
les
push
out
or
cmp
cmp
xor
mov
adc
ljmp
sti
mov
cli
cld
lds
adc
mov
ret
mov
pusha
cmp
mov
movsl
fstl
popl
jmp
mov
js
mov
jmp
mov
call
jp
jb
sahf
mov
stos
int
dec
add
out
aad
or
adc
rcl
sub
iret
mov
jae
push
mov
mov
mov
stos
pop
xor
dec
mov
sbb
std
ret
jmp
decb
insl
cwtl
enter
movsl
unpcklps
jb
popf
lock
in
jle
ds
mov
and
ret
mov
jno
outsb
clc
loop
or
add
ds
fmull
hlt
imul
repz
mov
div
dec
sahf
jp
mov
sbb
mov
xlat
int
lcall
mov
mov
jbe
and
aam
in
xchg
mov
lahf
xor
mov
pop
xchg
xchg
xor
mov
add
mov
mov
movsl
inc
or
clc
jg
sahf
and
pop
shl
out
call
loop
mov
lret
loope
or
push
adcb
hlt
sbb
or
pop
xchg
push
adc
lds
or
inc
subl
pop
loope
movmskps
cmpsl
push
test
or
arpl
mov
adc
mov
mov
fmulp
mov
adc
dec
adc
mov
cmp
out
lods
push
inc
pushf
mov
xor
sbb
or
jp
sbb
jo
in
xlat
push
pop
ror
cld
fsubrs
movups
xor
and
inc
shll
mov
fcomps
add
shll
add
mov
enter
fstp
lret
jno
ret
sti
fcmove
ret
push
pop
push
pop
inc
ljmp
clc
cmpsb
xor
in
inc
xchg
cmp
out
jle
enter
cmp
jbe
cli
sub
nop
shl
icebp
imul
fucom
insb
sarb
sbbb
dec
mov
jne
push
xchg
sbb
inc
stc
mov
mov
sub
xor
js
aaa
rcrl
dec
adc
adc
fsubrl
cmp
lea
cmp
add
pop
inc
jp
test
int
bound
aas
xor
mov
xor
jecxz
gs
loope
in
pop
xchg
mov
mov
into
fisttpl
ficoms
aas
mov
insl
movl
push
bnd
cld
add
cmp
rcrb
jg
fidivrs
lret
or
mov
push
mov
imul
push
lock
cld
insl
add
imul
or
mov
dec
add
pushf
jmp
mov
int3
leave
sub
je
jmp
aam
push
int3
rclb
aad
xor
out
xchg
lret
sub
push
sarb
and
ret
mov
mov
dec
adc
adc
js
push
sub
imul
in
nop
ficoms
or
out
mov
jmp
mov
dec
and
mov
sbbl
aas
loope
pop
aam
iret
cli
lret
mov
sub
lret
test
sbb
pop
or
dec
cmc
sub
push
pop
out
ds
ss
rcl
add
add
cmp
push
jb
dec
ljmp
sub
adc
mov
mov
pop
repnz
fildl
sbb
add
inc
dec
pop
jmp
ljmp
pop
cmp
sub
fs
ror
mov
pop
cmpsl
rorl
es
adc
movsl
insb
loopne
or
jo
dec
inc
aas
icebp
mov
ffreep
in
ljmp
add
stos
and
cmp
push
imul
jnp
pop
fdivs
lahf
lods
jb
sbb
xor
pop
stos
pop
push
imul
fcompl
lock
jmp
mov
testb
insb
stos
dec
cmp
push
push
test
in
jno
xchg
icebp
test
add
xor
andb
xlat
clc
mov
arpl
aas
cmp
cmp
stc
cld
xlat
cmp
out
pop
xchg
loopne
ds
adc
stos
fildll
push
sbb
adc
pop
jecxz
movsl
jecxz
mov
sbb
shl
mov
mov
sti
adc
pop
cmp
insb
inc
and
mov
fucom
mov
mov
movsl
int
lds
add
notb
sub
loopne
out
fsubrl
loopne
push
movsb
cmp
movsb
inc
idiv
adc
testb
insl
cmp
sub
test
jne
xorb
gs
test
daa
jecxz
or
adc
mov
leave
inc
subb
mov
push
cli
mov
daa
xor
out
or
mov
xor
cmpsl
shll
cmpsl
xor
cld
xor
in
sub
cwtl
mov
repnz
inc
mov
icebp
cmpsb
jmp
xor
inc
or
pop
das
xchg
dec
add
loopne
fcmovnu
orb
xchg
leave
and
jg
fistps
push
data16
lret
jecxz
mov
add
mov
mov
subb
movsb
lea
cmp
sub
pop
sahf
fiadds
jnp
cs
enter
add
xor
cmp
aam
call
dec
shl
pop
cmp
idivl
andl
push
mov
test
mov
fdivs
insl
add
or
inc
jp
push
push
negl
xchg
scas
mov
ljmp
mov
and
mov
xchg
adc
and
loop
je
ljmp
sbb
mov
mov
xor
testl
mov
cld
jmp
fldt
sub
fcompl
adc
mulb
or
lods
lret
mov
movsl
test
nop
mov
js
jg
sar
test
mov
sbb
loope
push
mov
outsl
adc
mov
inc
jecxz
test
icebp
xchg
fidivs
mov
adc
cwtl
in
int3
jg
sbb
adc
adc
dec
push
or
addr16
scas
cmp
mov
mov
mov
mov
mov
imul
fidivs
ret
ret
sahf
dec
or
xor
push
jno
lods
inc
mov
fidivrl
sub
dec
push
mov
sbb
pop
mov
outsb
out
stos
xor
or
pusha
and
push
jo
cmc
xor
cltd
adc
jbe
pop
ret
mov
std
add
xor
push
jae
jp
lret
cmp
adc
subl
mov
aas
stos
je
inc
into
sar
lock
aas
xlat
in
mov
adc
xor
bound
cmp
add
stc
mov
or
add
stos
jg
dec
pop
aas
mov
mov
jns
mov
inc
jo
pop
mov
jnp
jecxz
pop
inc
pop
int
or
pop
notb
jmp
sbb
mov
or
pop
cmp
int3
pusha
out
outsl
sbb
or
sub
dec
sub
add
cmp
aas
push
mov
out
adc
lock
lret
sub
ds
sti
loopne
fst
ficoml
int
adc
push
outsb
cli
aam
dec
or
scas
mov
add
pop
adc
mov
lcall
sbb
fiaddl
jbe
fcmovu
hlt
or
call
mov
xchg
dec
imul
xchg
push
mov
sahf
add
ds
in
sahf
jbe
and
jle
sub
jp
mov
movsb
aas
pop
inc
jp
add
mov
mov
and
loope
cmpl
dec
cmp
loopne
add
xor
stc
stos
fstp
sbb
sbb
scas
out
jp
loop
lock
daa
jmp
ds
insb
gs
mov
cmp
fisubl
ret
into
cmp
hlt
negl
idivl
fstp
aam
hlt
jae
gs
mov
int3
or
mov
mov
fildl
loop
add
add
pop
leave
inc
mov
fs
mov
pop
mov
sub
mov
or
lret
fsubl
scas
lret
ds
bound
stos
andb
int3
jne
xchg
pop
mov
movsl
mov
cli
inc
stos
or
pop
js
es
fdiv
mov
sahf
adc
lock
push
cld
stos
in
out
add
loope
movb
adc
and
scas
lods
and
iret
sub
sub
mov
inc
push
cmpsl
into
mov
fwait
mov
cwtl
shrl
adc
push
dec
int3
add
xchg
push
jg
enter
into
pop
cmp
fbstp
jmp
xchg
sub
insl
inc
rol
pop
in
shrl
mov
xor
movl
icebp
push
adc
mov
mov
mov
dec
fldl
pop
popf
or
imulb
int3
add
adc
es
mov
xchg
dec
ret
sub
ud1
mov
jg
fwait
mov
push
fsubrl
pop
jbe
mov
mov
cmp
stos
stos
sbbl
or
test
sub
lea
mov
pop
inc
lds
cmpl
addr16
sahf
inc
cmp
in
adc
inc
leave
stc
dec
imull
sub
add
pushf
inc
sub
js
outsl
adc
mov
dec
mov
enter
je
xchg
inc
dec
stos
dec
mov
std
iret
cs
test
leave
pop
stos
movsb
pop
out
ss
mov
dec
mov
adc
rolb
or
sar
sub
mov
test
mov
jle
or
mov
ret
imul
mov
out
icebp
dec
into
call
jmp
movsl
cmp
jmp
sti
sbbl
sub
inc
ljmp
cltd
cmp
ss
mov
push
sub
inc
xor
or
cmp
mov
sub
lods
lcall
out
push
inc
sub
lock
aam
outsb
stos
iret
in
add
sbb
pop
imul
or
scas
mov
fdivrs
inc
sub
fcmovu
ret
pusha
loope
icebp
cltd
sub
clc
pop
fbld
sbbl
loop
fists
clc
cmpsb
fld
jb
mov
mov
sbb
rolb
inc
xchg
mov
cli
sbb
jle
popa
sub
ret
es
push
push
push
adc
or
lods
inc
mov
insl
push
push
scas
in
cmp
fcmovne
or
add
cmc
jbe
pop
jo
mov
pop
test
int3
lock
push
mov
jae
and
rep
push
xchg
jmp
mov
mov
aaa
xchg
inc
stc
fsubr
cltd
xchg
shlb
clc
jb
fucom
icebp
mov
mov
rorl
ret
mov
mov
mov
push
xor
outsb
pop
pop
or
cmp
xchg
std
push
xlat
xchg
xlat
push
js
push
decb
push
mov
ficoml
mov
shlb
enter
mov
dec
outsl
jmp
ret
mov
repnz
and
lret
xchg
xor
rorb
mov
mov
cmpsb
in
or
outsb
jle
add
mov
and
pop
sub
add
movsb
aas
cmp
sbb
pop
mov
lret
dec
cmp
insb
pushf
or
movb
popa
mov
notb
popa
pop
mov
mov
aas
outsl
repnz
mov
sub
mov
call
cmp
aaa
fmull
jle
scas
xlat
ret
push
aam
mov
mov
lds
pop
into
clc
and
enter
mov
mov
std
mov
jns
add
mov
jo
and
inc
xchg
push
addr16
test
dec
sbb
js
adc
push
add
jnp
gs
sbb
in
lds
jne
clc
mov
rolb
fsubp
and
mov
cli
rorl
sbb
push
dec
stc
xlat
stos
les
pop
dec
xor
into
lcall
sbb
jne
push
pop
sahf
pusha
lods
fdivrp
test
pop
xchg
cmp
mov
cwtl
int
imul
sti
xchg
mov
rolb
sarl
inc
or
into
daa
sbb
cmp
out
lds
stc
js
mov
xor
adc
ret
or
je
add
int
adc
mov
sub
pop
sub
xchg
loope
subb
mov
addl
mov
sbb
mov
sub
cwtl
add
inc
sbb
ds
in
pop
xchg
lret
adc
int
mov
leave
or
out
js
add
lcall
sbb
xor
mov
mov
idiv
inc
ret
in
and
testb
ss
arpl
in
cmp
mov
scas
adc
loop
mov
rcl
testb
mov
mov
adc
mov
out
lock
add
out
test
loop
dec
cmp
lret
clc
in
inc
or
cvtdq2ps
lock
ds
jecxz
mov
insl
lock
dec
dec
add
ds
js
cmpsl
mov
dec
inc
dec
pop
cs
push
arpl
adc
jbe
cmp
pop
xor
ror
dec
mov
or
cli
lods
dec
mov
sub
cmp
int3
stc
dec
sarb
ljmp
test
mov
hlt
xchg
mov
add
ljmp
ret
push
test
mov
lcall
std
cmp
test
mov
jp
movsl
aaa
push
fldt
push
test
sub
stc
insb
jle
adc
mov
enter
and
and
lcall
dec
adc
mov
lret
mov
xor
xor
setnp
mov
arpl
sub
mov
mov
in
add
cli
aam
jbe
cmp
mov
xchg
jmp
xorb
lret
dec
sub
jbe
int3
mov
mov
pop
ret
adc
jno
inc
aas
cmp
mov
pop
sarb
sbb
ss
jbe
add
lods
aaa
inc
andb
inc
xlat
mov
mov
lds
ds
push
add
lret
push
cli
dec
sarl
call
aaa
jg
mov
lret
fldenv
mov
cld
cmp
lret
decl
and
enter
push
xchg
ficoml
dec
sbb
push
bound
mov
orl
push
push
cli
mov
js
mov
add
mov
push
stos
mov
and
push
das
jle
add
sti
roll
jno
inc
lods
jnp
fs
push
pusha
push
mov
jae
sub
sahf
push
sbb
jmp
sub
enter
inc
enter
mov
into
stos
out
inc
lds
mov
inc
out
std
push
cmp
es
pop
gs
rcll
mov
ret
clc
push
mov
pop
insb
sbb
mov
addr16
out
xor
jge
in
xor
icebp
sub
or
dec
je
orb
pushf
mov
pusha
out
sbb
mov
mov
leave
fnstsw
mov
out
out
inc
push
mov
fdivs
adc
arpl
pop
jno
ret
xchg
push
sbb
enter
lahf
add
and
mov
lods
repz
xchg
sub
pop
xlat
xor
ficoms
mull
jo
int
sub
adc
cli
cmovbe
ds
xchg
inc
faddp
ret
push
jp
ror
push
aas
mov
loopne
fld
dec
std
jge
mov
add
inc
mov
out
mov
xchg
cmp
insl
sbb
jg
movsb
adc
pop
lods
pop
inc
into
jle
jo
mulb
jecxz
sbb
adc
dec
push
ret
enter
adc
clc
cmp
adc
inc
shl
loopne
mov
adc
jle
adc
and
bound
lret
pop
mov
or
mov
sbb
call
iret
rcll
pop
ds
ds
jo
add
adc
adc
cmpsl
lcall
jecxz
sub
pop
adc
stc
aas
mov
or
lret
in
loop
rcr
mov
ljmp
fld
scas
loop
rcll
add
mov
dec
push
jae
cmc
or
add
loopne
outsl
orb
mov
xor
imul
fldl
adc
jg
inc
sbb
pop
pop
xchg
and
lcall
add
bound
cli
jl
hlt
rorl
jo
mov
xor
sahf
fst
mov
jmp
cmc
push
dec
sahf
call
aas
cmp
popa
push
outsb
push
dec
mov
imul
jo
xlat
repz
mov
mov
mov
add
fucom
cmp
push
fildl
fisubrl
mov
ss
sahf
cmpsl
pop
loop
mov
mov
notl
fld
mov
xor
cli
mov
daa
jbe
inc
xchg
jb
jne
xchg
inc
iret
xchg
pop
call
ss
pushf
mov
shl
fistps
fdivs
dec
mov
repz
ds
inc
pop
fisttpll
aaa
add
jns
xchg
add
pop
sbb
push
jb
sti
mov
arpl
pop
xor
lea
jbe
push
pop
cwtl
mov
ret
add
add
repnz
push
cld
clc
cmp
xchg
push
push
int
clc
loop
sahf
or
hlt
movsl
outsl
lahf
xchg
lods
jmp
jno
mov
mov
stos
cmp
sti
sbb
lret
xor
cmp
aaa
ret
int3
loope
cli
cmp
dec
shll
arpl
loop
sbb
mov
fildl
fucomp
ja
loopne
pop
dec
xchg
out
out
mov
inc
add
loopne
add
clc
mov
mov
mov
test
stc
jle
mov
icebp
aaa
xor
fcmove
fcomp
fadd
mov
fcmovbe
sub
sub
aaa
ror
ret
out
es
dec
xchg
subl
lret
or
leave
repz
or
aas
dec
or
sahf
mov
xchg
sbb
sbb
push
xchg
js
jmp
notl
xor
fidivl
fldcw
pop
mov
xchg
xchg
insb
les
xlat
mov
dec
xchg
aas
adc
mov
jmp
push
inc
enter
cli
mov
xor
sahf
clc
mov
push
pop
pusha
aaa
jnp
mov
js
xor
jno
or
mov
xor
fbld
pop
cltd
dec
in
fidivrl
hlt
jge
fsqrt
aad
mov
sbb
lret
fmul
movsl
cmp
stc
xlat
stos
inc
adcl
test
lahf
mov
lcall
jg
call
cmp
mov
leave
icebp
mov
sbb
lds
xchg
popf
das
cwtl
repz
xchg
xchg
es
outsb
js
push
int3
push
ret
pop
dec
adc
push
sub
into
stos
icebp
inc
jae
xchg
ror
in
mov
sbb
rcrl
mov
push
clc
data16
mov
cmp
pop
cmp
nop
lret
popf
lea
iret
xor
and
cmp
mov
dec
pushf
movsl
sti
daa
sahf
add
pop
add
adc
jb
mov
xor
xchg
jp
add
adc
out
xchg
add
jecxz
loopne
sub
pop
and
clc
adc
sahf
adc
ja
int3
cli
pop
in
inc
leave
mov
sbb
retw
cmp
cmp
mov
mov
add
add
add
inc
rolb
or
adc
pop
movl
push
sub
fimull
jecxz
mov
fstl
jno
sbb
inc
in
int3
or
incl
outsb
push
in
das
jp
shrb
inc
ret
clc
dec
je
iret
lret
daa
push
fisttpl
fldt
mov
lcall
push
jno
lret
jg
ss
loope
shlb
mov
popa
sbb
clc
mov
loope
or
daa
and
fstp
lea
dec
icebp
into
nop
add
cmpsb
adc
lods
arpl
mov
lds
mov
stc
repz
or
sahf
mov
call
mov
mov
xor
sbb
jb
dec
and
push
or
jecxz
ss
mov
dec
add
pop
or
in
dec
mov
fnsave
dec
imul
adc
xor
or
loopne
dec
cmp
or
sbb
inc
sahf
jne
mov
out
shl
sub
jnp
adc
js
add
dec
xor
and
and
cs
add
stc
jno
xchg
inc
rorb
lret
mov
sbb
mov
adc
xchg
mul
fimull
hlt
fsubl
clc
enter
popa
xorl
stos
shl
and
fmuls
movups
icebp
mov
pushf
std
add
xlat
inc
add
xchg
mov
iret
out
inc
sbb
mov
add
fiadds
mull
call
add
xor
imul
adc
adc
bound
nop
mov
pop
cmpsb
cmp
rol
push
mov
mov
mov
ja
mov
ret
in
test
or
mov
inc
sbb
xor
sbb
pop
out
mov
xor
js
stos
in
mov
pop
insl
stos
ss
or
aad
mov
pop
lret
aam
popf
add
mov
pop
mov
cmove
push
mov
mov
fstpt
sahf
in
xlat
mov
sbb
gs
stos
mov
jo
inc
out
aas
push
movsb
int3
or
fwait
cmp
aas
fisubrl
sbb
shrb
or
js
mov
fcmovbe
jmp
pop
pop
idivb
scas
clc
aas
sub
jmp
mov
mov
ret
adc
je
sbb
mov
adc
mov
les
or
lahf
push
sub
shrl
dec
popa
mov
scas
xchg
add
ss
loopne
xor
or
jns
mov
loop
cmp
mov
cld
cmp
div
enter
cli
jnp
jns
jns
xchg
fsts
addb
fidivl
add
adc
and
lock
int3
sub
mov
sub
cmp
mov
inc
mov
das
inc
jmp
addr16
and
loop
lds
out
jge
jle
xor
add
xor
pop
mov
leave
pop
cmp
mov
dec
gs
divb
mov
inc
push
pop
in
sub
lods
es
pop
sub
sub
xor
sub
or
lahf
mov
fisttpll
xchg
mov
icebp
sarb
lock
lret
mov
test
aaa
clc
mov
mov
push
gs
mov
into
xor
sub
push
sahf
lock
call
sahf
loopne
out
loope
sbb
add
xorb
pop
out
movb
scas
call
mov
les
xor
dec
enter
push
cmp
sbb
xor
lods
repz
cmp
jle
in
push
enter
mov
enter
add
mov
mov
push
jae
lods
pop
fldt
int3
mov
jb
jecxz
fistpll
xchg
pop
int
and
shl
xchg
mov
mov
adc
xchg
jle
scas
dec
xchg
ret
sub
stc
xor
sub
add
sti
mov
icebp
aas
push
out
lcall
shr
push
imul
sahf
addr16
adc
push
out
outsb
lds
mov
add
dec
arpl
insl
mov
scas
test
mov
xchg
mov
mov
ret
cmpsl
bound
and
mov
cs
mov
and
cmp
pop
lea
jge
movsb
push
jecxz
xor
mov
add
cmp
cmpsb
or
push
or
lret
cmp
mov
ds
rcrl
popa
in
outsb
nop
loop
xor
pop
jl
loope
sub
mov
pop
jmp
cmpb
ljmp
or
sahf
sub
xor
push
xlat
es
int
jno
cli
xchg
addr16
mov
mov
flds
xor
mov
into
sbb
mov
leave
mov
dec
adc
sbb
mov
int
add
sub
fdivr
push
pop
mov
mov
push
mov
adc
roll
insl
aas
es
mov
clc
iret
cmpsb
xchg
jecxz
xchg
daa
dec
add
mov
daa
shll
jmp
ss
lds
inc
sti
adc
lret
push
xor
iret
int
mov
fistpll
and
pop
or
push
lcall
scas
pop
xor
push
into
fs
sbbl
xchg
mov
mov
ljmp
mov
or
jge
mov
add
lret
fdivrs
ret
stos
mov
lods
pop
mov
mov
rorb
out
cli
shll
sbb
repz
les
inc
pop
dec
and
cmp
inc
vmovd
fisubrl
lret
mov
cmp
lahf
mov
dec
int3
xchg
addr16
or
rol
divb
mov
xchg
cwtl
mov
leave
out
outsb
xor
xchg
fdivr
scas
and
sub
xchg
pop
imul
lahf
sub
repnz
mov
loopne
and
lds
out
out
inc
mov
sahf
mov
cld
ljmp
cld
ds
iret
out
ret
dec
xor
adcb
mov
sbb
sbb
movsl
xchg
and
hlt
clc
cmp
test
pop
cmpl
pop
divl
mov
pop
lods
cs
xor
sahf
dec
or
xchg
cmc
mov
mov
pop
icebp
stc
mov
add
test
ret
cmp
mov
int3
stos
sahf
clc
fistl
xor
popl
jmp
stos
ds
add
out
inc
es
cld
sarb
mov
dec
cwtl
negl
nop
adc
sarb
lea
pop
aas
pop
mov
js
pop
jmp
inc
mov
adc
or
dec
mov
fbld
xor
or
stos
sbbb
int
into
aad
xor
mov
rcr
jl
call
adc
stos
sahf
mov
fistps
adc
or
or
mov
xchg
jne
dec
rol
cmp
mov
add
jg
sbb
es
addr16
shr
jns
sahf
loope
xchg
sub
dec
jns
int3
jmp
movsb
mov
jno
mov
call
aad
neg
xor
xor
xchg
rclb
push
rclb
or
sub
stos
sbb
vmwrite
fmulp
and
inc
push
adcl
sbb
imul
hlt
add
pop
mov
dec
bound
rcr
add
xchg
leave
add
ds
scas
jmp
in
test
subb
sub
xchg
xor
mov
mov
adc
lret
cmp
cs
movaps
jmp
aas
stc
push
mov
loope
loope
add
decb
flds
inc
pop
addb
push
mov
jb
mov
mov
pop
jae
jp
or
cwtl
adcb
or
ror
movsl
pop
jb
xor
mov
fwait
add
or
test
stos
test
ret
stc
cmp
xchg
cmp
or
rclb
scas
in
xchg
xchg
jle
int3
lret
push
fidivl
idivb
sub
xchg
cmc
push
lcall
xchg
ds
into
dec
add
jne
adc
push
mov
jle
jb
mov
xor
xchg
jmp
les
jnp
push
xchg
push
cmp
add
push
and
sbb
je
mov
mov
jo
or
push
psubusb
cmc
xor
sub
cli
lcall
jmp
into
xchg
ret
fistpl
push
mov
pop
lods
imul
into
decl
icebp
push
fildll
xchg
int
push
push
adc
shll
pop
lds
mov
shlb
sub
fxch
icebp
sbb
test
dec
add
xor
push
mov
push
sub
mov
cmp
rcll
sub
iret
in
adc
push
aam
sbb
cli
stos
or
cmpsb
xor
stos
sbb
lret
jp
push
out
sahf
adc
aas
ds
movsb
lods
int
pusha
dec
fsubp
cmp
dec
out
insl
inc
stos
test
xchg
inc
pushf
mov
mov
ficoml
rcl
sbb
mov
imul
icebp
jge
pop
mov
inc
adc
loope
xor
test
sbb
ss
fwait
xor
xor
mov
icebp
mov
fmuls
add
add
into
lods
and
js
xor
pop
pop
xchg
mov
fimuls
sti
inc
icebp
mov
or
cmp
data16
mov
mov
dec
mov
or
sbb
push
cmp
inc
or
mov
mov
adc
or
and
fadd
loop
cmp
fidivrl
jne
jecxz
movsb
mov
mov
subl
ss
adc
fimull
stos
adc
push
notl
mov
aaa
lcall
loope
repnz
xor
xchg
mull
mov
xor
mov
and
add
jg
movaps
fidivl
loope
mov
mov
imul
and
sub
jns
inc
xchg
fucomip
adc
enter
pop
iret
lret
fistpl
lods
mov
lcall
nop
mov
movsl
sbb
sbb
jne
cmc
out
dec
or
jp
ljmp
add
lea
movsl
mov
jle
shl
sub
fisttpl
shl
ss
inc
xor
or
lret
pop
and
dec
adc
clc
xchg
stos
divb
icebp
jecxz
dec
push
pop
mov
call
mov
xchg
cld
stos
xor
mov
pop
mov
mov
add
mov
fsts
out
loopne
enter
xchg
mov
mov
lods
or
mov
lret
lcall
aaa
xor
ret
adc
dec
nop
cmpsb
fisubs
mov
popw
into
lcall
sub
ljmp
mov
push
jbe
jp
in
mov
adc
dec
push
data16
mov
or
mov
je
cli
jmp
iret
clc
xchg
adc
xchg
mov
sbb
cwtl
lcall
pop
sbb
jle
in
imul
mov
xlat
imulb
popf
mov
lds
push
imul
cmp
add
xchg
mov
sub
fdivs
nop
cli
out
mov
fidivrs
pop
clc
push
ret
rcrb
or
dec
or
cmp
mov
ss
mov
mov
data16
inc
in
adc
movsb
outsl
stc
mov
ret
or
cmp
je
cli
lcall
mov
clc
stc
lods
add
push
movsl
xchg
cmpsl
pop
call
loopne
pop
mov
shrl
push
push
push
outsb
sub
fnstsw
xor
push
lret
inc
les
aas
cmpsb
push
sub
push
icebp
rcrl
ret
dec
sar
xchg
xor
mov
xchg
repz
add
cwtl
jae
aas
rcr
pop
cld
lea
imulb
mov
sbb
sbb
stc
into
push
shll
int3
test
xchg
mov
mov
and
push
sub
lret
stc
cmpsl
and
mov
lock
mov
fsub
push
xchg
addr16
and
test
fdivr
sbb
jp
stos
mov
push
add
push
mov
sub
cs
leave
jge
jl
or
scas
mov
mov
mov
clc
rorl
test
clc
sub
sti
sub
sub
sub
inc
popa
push
jge
adc
add
movsb
or
push
lcall
leave
adc
iret
repnz
mov
adc
incl
mov
mov
push
xor
in
ret
add
repz
mov
leave
and
mov
lds
test
das
xlat
les
push
cmp
cmp
flds
xor
cmp
mov
mov
ret
hlt
fcmovu
rolb
xchg
and
xchg
fistpll
jp
xlat
outsl
sarl
sub
inc
jno
xchg
adc
sti
shll
cmp
add
push
mov
fimull
repnz
es
mov
daa
sub
out
add
or
ret
mov
add
add
mul
clc
cs
loop
lahf
xchg
cld
fadds
add
pop
into
pop
jbe
cmp
pushf
jbe
add
adc
fsubs
idivb
stc
mov
into
not
dec
sahf
js
sub
mov
dec
icebp
inc
sbb
dec
mov
push
stc
mov
dec
leave
enter
ficomps
add
sarb
lret
add
imull
push
and
stos
sbbl
adc
ds
mov
adc
inc
fbld
sbb
jecxz
popf
mov
ficompl
jp
mov
adc
movsl
cltd
in
inc
inc
jne
mov
test
inc
into
mov
mov
outsl
pusha
int3
xor
movsl
ds
scas
xchg
imul
cmp
repnz
daa
add
icebp
call
push
clc
lahf
hlt
lds
loopne
jg
rorl
xchg
popf
arpl
cmp
loop
pop
cmp
test
popf
loope
aad
les
mov
cmpsb
sbb
sbb
cmp
repnz
lcall
leave
gs
add
movsb
fistl
jo
leave
mov
dec
inc
bound
mov
xor
cmp
add
ss
mov
inc
stos
imul
testl
aam
xchg
inc
fcomi
cwtl
cmc
pop
sub
imul
adc
scas
lahf
jns
pop
dec
sub
or
clc
lahf
bound
ret
pop
ret
clc
mov
adc
cli
and
sbb
sahf
add
add
jo
adc
insb
in
rcr
mov
rcl
cmp
pushl
dec
insl
mov
lea
cmp
mul
imul
xor
stos
fnsave
jo
daa
pop
or
mov
mov
adc
mov
jmp
fs
outsb
int
mov
xchg
and
jp
jb
test
lret
pop
cmpsb
mov
adc
imul
or
into
movsbl
dec
lret
ret
sbb
into
out
aas
icebp
adc
adc
sti
add
adcb
mov
icebp
stc
out
mov
daa
ljmp
js
lock
sub
shr
jg
mov
mov
fcoml
icebp
mov
mov
ret
ret
fsubrs
fcomps
pop
add
popf
arpl
sbb
repz
jp
daa
cli
aad
int3
mov
mov
in
mov
cmpsb
push
scas
sub
fldln2
mov
add
pop
loope
xchg
and
cwtl
mov
rorb
mov
mov
jl
ja
cmp
pushf
loopne
add
pusha
ret
scas
lock
leave
fstl
sahf
jmp
loopne
aas
loope,pn
jnp
popa
dec
sahf
jae
lcall
les
adc
loopne
inc
pop
mov
adc
cmp
push
mov
push
inc
enter
aas
add
lahf
daa
push
push
mov
shll
sub
xor
stc
sub
mov
inc
mov
shlb
or
pop
mov
cmp
popf
cmp
or
push
mov
mov
push
push
sub
and
sub
xlat
xor
into
adc
aad
fmuls
cld
mov
push
dec
test
test
or
mov
pushf
in
popw
ret
adc
lods
jns
sbb
and
jmp
bnd
mov
js
pop
mov
pop
sahf
cmpsl
cmpsb
jo
sti
cmp
mov
xchg
xor
jle
sub
cld
jg
push
lcall
lret
sbb
or
out
cmp
mov
mov
leave
inc
or
sub
mov
push
mov
sub
adc
push
mov
ret
rcr
mov
sahf
add
fnsave
les
adc
xlat
shl
cmpsl
call
into
adc
aam
xchg
daa
inc
fstpt
mov
push
xor
sub
in
mov
cltd
enter
push
mov
ljmp
xchg
mov
sahf
jg
mov
nop
jne
in
leave
xor
mov
mov
loop
sbbb
adc
std
xchg
jbe
lcall
lahf
sub
fmul
pop
popa
je,pt
add
popf
pop
cmp
xchg
jmp
mov
fstl
movsb
hlt
fistpll
xor
pop
scas
dec
add
sub
xchg
push
or
or
mov
leave
jle
or
adc
movsb
lods
sub
add
jb
mov
xchg
add
adc
push
ds
rcrl
jp
dec
je
les
ss
push
cli
ret
lret
ficomps
mov
xor
xlat
or
sahf
push
fwait
test
xor
cmp
es
xor
add
jl
xchg
loop
pop
lea
cmp
rorl
stos
adc
outsl
cli
pop
aaa
xor
jmp
and
sub
adc
ficomps
adc
cmp
and
imul
add
mov
mov
cmpsb
bound
adc
add
sahf
call
mov
daa
mov
out
mov
pusha
inc
xchg
dec
fmuls
or
loope
lahf
fsubrl
push
test
push
xchg
mov
stos
fucomp
push
int
js
push
jle
sahf
and
sub
add
ja
xlat
sarl
mov
cmp
dec
pop
inc
add
fsubrl
inc
rcrb
jae
jp
jo
je
in
jp
psubsw
xchg
lcall
sub
mov
and
mov
repz
cwtl
pop
ss
daa
fldl
lret
addr16
mov
push
scas
push
addr16
mov
jmp
fnclex
ja
stos
adc
leave
aas
stc
out
mov
stos
incl
aad
push
inc
leave
fists
cmp
or
iret
sti
xor
jb
test
lea
cmp
or
and
loop
test
sbb
dec
cmpsb
aas
sub
adc
enter
or
jbe
les
clc
cld
push
call
jge
pop
aas
out
stos
and
ret
cli
mov
push
sbb
adc
enter
lret
scas
lds
arpl
popf
lahf
sahf
or
mov
jne
xchg
mov
dec
js
orb
and
fwait
jo
xchg
cmc
lret
cmp
lds
push
inc
or
or
cmpl
mov
cmp
push
xor
sbb
sub
cmp
sbb
mov
mov
idivb
mov
fdivs
jg
mov
mov
negl
movl
mov
pop
or
or
pop
mov
push
outsl
xchg
fbstp
sahf
sbb
adc
xor
sub
jle
orb
sar
xchg
clc
xchg
fdivp
enter
inc
or
add
mov
jo
xor
and
testb
mov
dec
lods
nop
xchg
or
fdivr
ret
stc
fisubrs
int3
cmp
sub
mov
cmc
xor
sub
shlb
xlat
sub
adc
bound
push
es
test
and
popa
mov
push
mov
mov
mov
lock
sub
scas
or
fistpl
int3
inc
clc
xchg
add
mov
push
lcall
fstl
iret
fwait
fwait
arpl
mov
sti
lcall
xor
mov
sahf
xor
sub
iret
cmpsb
into
xchg
push
out
lret
out
jmp
insb
into
xchg
stos
xor
jno
and
inc
in
dec
adc
inc
int
add
subl
stc
pop
sbb
inc
cmp
fisubrs
or
jg
jg
lods
and
sub
ds
jle
and
cmp
adc
test
lret
sbbb
and
inc
cmpsl
adc
dec
es
adc
fsubs
lods
mov
and
std
mov
pop
into
xchg
imulb
fisubrl
push
mov
js
pop
mov
into
data16
leave
fucom
inc
add
xchg
push
sbb
int
test
jle
xchg
cltd
mov
push
adc
or
xor
add
repz
call
les
sti
mov
sbb
aaa
push
scas
jl
mov
sbb
in
sti
adc
std
fs
inc
sbb
out
mov
cld
cmp
out
or
fisubrs
std
in
sbb
jns
jns
movsb
push
dec
xchg
fistpl
mov
fidivrl
mov
mov
mov
outsb
dec
iret
cltd
push
and
mov
mov
cld
negb
sub
inc
xlat
mov
push
mov
sbb
ss
sub
pop
jae
ret
mov
xchg
scas
jl
scas
mov
mov
xor
sarl
mov
xchg
shrl
lahf
call
shrl
addr16
mov
lahf
push
aad
mov
les
sub
jecxz
fs
inc
enter
push
insl
mov
xor
mov
cmp
inc
lahf
mov
icebp
mov
icebp
mov
fnsave
ja
or
xchg
jnp
call
mov
xchg
lds
cs
mov
cmp
or
in
pushf
ror
push
stc
mov
lahf
es
cmp
jle
insl
aaa
or
mov
dec
dec
push
cwtl
push
in
div
aas
jg
lret
sbb
push
adc
movsl
cwtl
ss
imul
xor
mov
add
jo
mov
fwait
xor
lret
adc
sub
pop
mov
int3
add
xor
popa
sti
xchg
rol
jno
into
lock
mov
std
ljmp
ss
inc
sti
out
push
jns
into
dec
dec
or
insl
loopne
fbld
ss
xor
xor
sub
mov
out
std
dec
scas
and
rcrb
mov
cmp
mov
or
mov
jp
fsub
sbb
add
jne
aas
pop
ljmp
iret
mov
out
xor
scas
lods
push
out
divb
mov
sub
enter
test
hlt
jns
enter
ffree
xor
mov
idivl
test
mov
mov
mov
ret
or
add
and
sbb
loop
je
ds
mov
sub
dec
mov
cli
imulb
pop
cmp
mov
test
mov
cmpb
adc
nop
jp
adc
jae
xor
sahf
dec
int3
cld
frstor
mov
sbb
fcomp
pop
cmc
jg
fs
out
clc
insb
aam
xchg
cltd
sti
aas
rcrb
push
ds
pop
shrl
xor
sarl
jmp
ret
stos
sbb
mov
scas
mov
cmp
sub
add
jae
nop
int
in
and
out
adc
sarb
adc
mov
fdivp
jge
push
rcl
jg
jbe
bound
into
iret
shll
push
popf
in
lcall
mov
icebp
ret
clc
or
mov
push
cmp
aad
jle
loope
mov
ljmp
push
test
xor
adc
stos
cmpsl
and
scas
lock
push
xchg
rcrb
mov
push
dec
or
xor
push
test
xchg
pop
dec
scas
ret
sahf
out
and
and
mov
jg
mov
xor
and
push
addb
loopne
xchg
inc
fdivs
jmp
inc
movsl
call
sub
stos
cmovnp
ljmp
mov
aas
sbbb
mov
outsb
arpl
pop
xchg
sti
jb
test
imull
pusha
mov
pop
movsb
je
int3
scas
imul
enter
sahf
fstps
inc
jne
inc
fsubs
mov
sbb
and
out
int3
xor
loop
stc
fiadds
movb
xlat
cli
repnz
jmp
cld
in
fiaddl
or
pop
jle
lret
mov
mov
inc
sub
mov
xor
inc
xchg
lea
and
lret
mov
inc
xorl
mov
outsl
mov
addr16
mov
adc
or
lret
fcmovnbe
mov
das
and
cwtl
cld
ret
pop
rdmsr
mov
push
xlat
daa
xorl
loop
cmp
ret
fld1
fcoml
popa
sti
mov
loop
pop
in
aas
sbb
pop
cli
cmp
jnp
movsl
pop
js
jge,pt
push
mov
lods
mov
jae
or
nop
popf
cmpsl
and
push
shrb
rclb
lods
adc
fidivrs
pop
les
sbb
sti
xchg
push
mov
lahf
cmpsb
enter
fbstp
ret
lret
add
cmpsb
xchg
stc
fists
test
push
stc
fdivr
cmpsb
push
rcrb
or
stc
in
add
jne
fcmove
rcl
pop
mov
mov
adc
inc
adc
cmpsb
sub
stos
gs
pop
or
or
mov
lods
and
cmp
pop
mov
mov
pop
sarl
mov
pop
and
ret
gs
movsb
xor
sbb
leave
ljmp
aam
aas
je
shrb
int
fs
xlat
sahf
mov
pop
imul
test
push
into
inc
bswap
mov
jae
and
push
ds
xchg
fistps
mov
sbb
add
out
push
stos
neg
pop
mov
out
jecxz
sarb
adc
xor
dec
push
clc
hlt
push
fcomps
dec
lret
clc
inc
xlat
pop
ficompl
repnz
cli
or
mov
mov
clc
in
xlat
push
ss
xlat
outsb
mov
jb,pt
push
lods
cli
scas
jbe
mov
jp
andb
xor
pop
in
pop
test
cmp
fisubl
or
sti
or
call
add
add
add
push
out
pop
and
mov
std
sbb
adc
push
std
or
pop
xor
fcmovbe
sub
sub
pop
les
cmp
jae
xchg
add
lret
es
mov
xlat
or
scas
cld
dec
movsl
imull
pop
sub
dec
sbb
sbb
sub
ret
and
mov
out
cmp
rorl
hlt
cmp
popf
sub
sar
aas
test
mov
scas
adc
push
les
dec
imul
lahf
push
rcll
pop
leave
or
bound
jl
xor
or
hlt
dec
movsb
ret
loop
int3
data16
and
shl
mov
clc
mov
dec
daa
int3
sarl
mov
bound
jb
xchg
mov
repz
pop
js
ffreep
xor
outsl
push
inc
std
lret
test
pop
in
xor
and
pop
ret
roll
fabs
pop
lods
xor
adc
sbb
push
repz
rcll
cmp
out
cmpsb
out
pushf
mov
cmp
add
stos
pusha
sahf
and
mov
jmp
negl
jle
adc
fistl
rcrb
iret
sbb
inc
cmpsl
sbb
cmp
cmp
push
setbe
lcall
mov
fcmove
out
test
jl
cwtl
xchg
ror
mov
cmp
pop
push
xlat
push
cmp
shll
in
mov
adc
cmp
jmp
jne
xchg
xchg
xchg
mov
movsb
xor
dec
aas
or
cmpsb
fwait
mov
push
pop
in
sahf
lock
outsl
shrb
dec
jo
roll
cmp
lret
test
ret
mov
xchg
cli
stos
pop
push
xchg
push
imul
cmp
jp
sahf
outsl
test
mov
add
sahf
jb
and
push
pop
fcmovne
in
push
movsb
jle
enter
hlt
js
sub
into
rolb
lret
mull
fdivl
sbb
xchg
les
cs
in
lret
lea
clc
mov
inc
adc
clc
inc
ja
mov
mov
enter
add
test
aam
sub
mov
add
clc
mov
into
ret
lret
bnd
fnsave
adc
mov
loop
aas
stos
xor
stos
test
mov
fdivr
lret
adc
sub
lods
jbe
adc
test
mov
sarb
pop
jnp
sahf
cmp
push
inc
popf
xor
shl
dec
xor
xlat
aad
and
sbb
or
sti
add
lds
ret
xchg
jo
sbb
sub
cmc
or
lahf
push
loopne
enter
out
add
mov
loope
xchg
and
add
jno
imul
mov
hlt
fdiv
cmp
pop
leave
bound
popa
xchg
xor
insl
jne
std
fsubrs
mov
add
mov
das
mov
mov
fimull
dec
and
cmp
pop
aas
inc
enter
fdivs
pop
dec
mov
rol
leave
les
cltd
mov
les
or
rcr
push
xlat
in
cli
mov
lahf
in
cmc
xor
fcmovu
xchg
rcrb
into
mov
lahf
es
out
es
add
or
add
js
and
cmp
push
inc
inc
test
dec
ljmp
clc
ljmp
push
cmp
ret
in
fdivrs
inc
jge
mov
in
xlat
xchg
add
jge
or
test
pop
or
out
outsb
clc
inc
mov
sub
adc
push
jb
inc
outsl
int3
xchg
add
into
loope
mov
inc
adc
xlat
out
mov
add
cmp
push
or
scas
jp
aaa
mov
insb
scas
jp
rorl
outsb
mov
cmp
jp
aaa
mov
sub
test
mov
and
movb
repnz
and
ret
or
es
lods
icebp
mov
cmp
xlat
fmulp
ds
pop
rorb
xor
mov
fistl
lret
pop
sub
mov
xor
in
mov
in
mov
inc
rcrl
sbb
cmp
mov
clc
movb
mov
mov
cmp
or
ljmp
andl
and
cmp
call
cmp
mov
mov
mov
dec
mov
movsb
mov
cmp
sub
and
pusha
adcl
fabs
js
outsb
loopne,pt
dec
fs
mov
fildll
add
out
outsl
and
insb
fcmovb
add
or
or
scas
mov
mov
sbbb
jae
mov
and
imull
outsl
addr16
lods
add
mov
adc
jb
inc
daa
divb
pop
jge
sub
pop
test
mov
lcall
or
xor
out
lahf
int
ret
xrelease
ljmp
sbb
sub
test
mov
push
jo
add
mov
sbb
push
sub
cmpsb
and
rol
cmp
cli
icebp
dec
mov
clc
xor
fnsave
dec
mov
test
or
cmp
in
jbe
inc
in
xchg
mov
dec
mov
pop
ret
outsb
mov
mov
rclb
imul
inc
sub
jp
movsb
dec
add
pop
stc
sti
jecxz
jg
orb
push
stos
dec
cmc
fcmovb
loop
pop
lods
aas
mov
mov
sbb
xchg
mov
cmc
pop
mov
or
loopne
das
pop
push
mov
pop
mov
push
or
or
pop
cs
fisttpl
mov
cli
or
mov
and
lock
ror
out
mov
adc
push
icebp
mov
inc
out
xchg
mov
mov
ljmp
negb
out
hlt
mov
std
push
lods
cmpsb
sbb
dec
pushf
imul
push
sub
lret
mov
xchg
push
jp
sub
pop
cmp
mov
cmp
mov
aas
sub
xor
outsb
push
loope
es
ret
stc
repnz
xor
inc
mov
xchg
loop
adc
cmp
dec
repnz
jmp
fyl2xp1
movsb
aas
movl
dec
or
shlb
xorl
clc
jbe
ret
mov
fiaddl
gs
push
fxtract
jecxz
jbe
xchg
inc
cmp
aas
lds
idivl
cmp
xchg
js
pop
imul
pop
daa
sub
movsl
cmp
sar
je
pop
repz
add
push
leave
bound
inc
popa
jp
out
jae
xchg
je
imul
ficoml
test
repz
rcll
cmpsb
mov
dec
insl
test
xor
sub
testl
addr16
mov
push
cmpsl
sbb
std
push
jmp
inc
fs
add
imul
dec
jb
nop
sub
stos
sahf
movsb
push
xor
dec
pop
push
fmull
sub
pop
loopne
ret
xor
cs
mov
mov
xchg
cli
xor
in
daa
aas
jb
jmp
sbb
cli
int
and
cli
call
jp
sbb
les
xor
cwtl
push
shlb
js
inc
add
xlat
in
mov
cmp
test
push
and
bswap
push
gs
mov
mov
enter
pop
cli
add
xchg
dec
fists
sahf
and
inc
int
mov
cli
repz
inc
aaa
incl
iret
add
add
sbb
orl
bound
int
lret
sahf
in
das
sbb
push
cmp
or
out
lret
sarl
push
test
fcmovne
xor
xchg
push
into
lahf
sbb
xor
or
fsub
loope
daa
fdivs
repnz
or
cmp
in
rcr
or
das
outsb
dec
test
iret
aaa
fdivr
or
inc
jo
cmp
mov
sbbb
lods
data16
aas
adc
mov
sub
mov
cmp
js
mov
lret
push
cs
insl
icebp
dec
add
pop
ljmp
lret
jmp
inc
push
or
inc
mov
mov
cwtl
pop
xor
mov
ror
add
jg
aaa
add
mov
xchg
lcall
xor
xchg
lock
dec
scas
test
ret
add
push
idivb
mov
push
pop
or
test
into
push
nop
adc
cmp
rcrl
int
push
mov
insl
fisttpl
lock
and
mov
and
or
frstor
int
dec
arpl
stos
pusha
xlat
movl
int
dec
loopne
repz
dec
out
push
test
pop
ljmp
jp
call
or
idivb
jmp
inc
stc
mov
xor
dec
pop
test
andb
xchg
xor
and
and
test
mov
into
testl
or
ds
push
cmpsb
loopne
clc
in
jmp
cli
outsl
xlat
add
lods
pop
mov
mov
mov
mov
cmp
and
dec
cmpsl
gs
xor
dec
pop
cmpsb
cmp
lock
sbb
mov
mov
imull
lcall
dec
insb
mul
sub
scas
ret
xor
les
ds
lds
popa
mov
mov
test
imul
ds
movsb
lds
ss
mov
pop
fwait
inc
sub
cwtl
lods
loop
push
dec
lods
aad
int3
push
mov
fdivr
xchg
psubsb
bnd
movb
fildll
pop
sub
jnp
mov
cmp
push
sub
insb
pcmpgtd
inc
push
gs
scas
js
cmp
add
push
xchg
lret
jnp,pn
lods
out
fwait
stos
shl
jge
inc
lods
xlat
or
ss
ret
test
nop
xlat
dec
jb
out
popa
aam
mov
fistpl
add
ss
dec
dec
popa
fucomp
push
dec
xchg
icebp
fisttpll
loop
ljmp
dec
cli
clc
add
test
xlat
ja
mov
or
imulb
les
push
js
gs
or
stc
andl
lods
out
fimull
adc
mov
movsl
jecxz
nopl
add
mov
and
lods
pop
mov
les
test
mov
mov
inc
mov
out
std
xor
cmp
or
adc
mov
lods
push
test
lock
test
int3
dec
jle
mov
fsubl
dec
bound
mov
sub
rorb
and
adc
mov
add
push
decl
push
and
dec
or
das
or
xor
add
cmc
movsl
out
sar
xor
pop
ficomps
in
mov
fs
add
push
sbb
sbb
mov
dec
fsubl
inc
scas
mov
ljmp
idivb
pop
xchg
xor
jb
clc
sub
xor
jne
adc
ja
and
xchg
or
push
lret
xchg
leave
icebp
outsb
imul
adc
jo
dec
rcll
cmp
or
dec
les
sub
sbb
in
imul
scas
xchg
leave
icebp
jg
mov
lahf
imul
imul
dec
cmc
pop
roll
mov
dec
pop
xor
cs
in
pop
into
clc
bound
sbb
pop
stc
xlat
stos
movb
push
jge
lcall
cs
jge
dec
dec
mov
mov
or
and
xchg
shll
cmp
cmc
dec
xor
aam
sub
push
stos
jnp
int3
loope
in
shrb
ror
mov
inc
mov
je
cmp
pop
xor
push
add
icebp
jae
pop
and
nop
addr16
or
hlt
and
sti
ds
mov
pop
sub
pop
es
sbb
fnsave
and
pop
inc
sub
jecxz
inc
sbb
in
adc
aam
inc
adc
cmp
iret
mov
cmp
adc
jle
mov
cmc
dec
jo
jbe
sahf
mov
jb
add
cmc
push
mov
push
incl
xchg
push
jae
addr16
cmpsb
in
cld
fst
fs
stos
push
inc
add
pop
into
loope
cmp
mov
test
xchg
and
jp
cld
xchg
mov
je
push
imul
xchg
in
push
push
xchg
mov
sahf
cmp
lcall
loop,pt
ljmp
add
test
cmp
lds
popa
shlb
inc
fcmovnbe
mov
pop
repz
and
dec
lds
mov
loope
cmp
out
push
fcomp
push
cld
and
data16
test
mov
lcall
lret
std
call
mov
arpl
push
adc
xchg
pop
bound
leave
sub
gs
cwtl
ret
push
movsb
fs
lock
js
xlat
push
nop
or
aad
jae
mov
mov
mov
ss
mov
lea
clc
push
nop
fdivrs
mov
push
mov
dec
cmp
cmpsb
bnd
cld
push
loopne
add
mov
xor
mov
int3
pop
fdivp
cmp
push
push
or
shll
xchg
jecxz
fcmovb
pusha
enter
push
in
movsl
imul
mov
sub
xor
add
add
cld
movsb
xor
mov
movsb
pop
leave
sub
cmp
mov
aas
xor
gs
cmp
mov
movsl
cmp
mov
add
pop
push
out
mov
arpl
push
hlt
mov
sub
cmp
icebp
push
int
jmp
and
movsl
sub
cmc
jle
mov
enter
cmp
movb
rcl
fidivl
cltd
sbb
sahf
mov
adc
add
mov
mov
ss
sub
jne
fwait
sub
clc
jne
xchg
shl
mov
or
mov
pop
mov
cmp
jle
jle
icebp
outsb
and
sub
sbbl
aaa
into
add
mov
xor
shll
aam
rclb
xlat
or
pop
addb
xor
add
cmp
aas
sub
lods
mov
cmp
fs
clc
jge
icebp
or
aam
out
mov
into
jle
mov
cmpsl
shlb
inc
repz
gs
jle
daa
jnp
jb
dec
insl
in
push
into
push
jmp
fnstenv
pop
out
mov
sbb
and
pop
and
mov
aaa
fbstp
loope
mov
insl
ss
push
scas
add
test
jns
dec
stos
xor
aas
pop
mov
cld
mov
or
testl
pop
pushf
adc
sar
xchg
add
loop
add
xchg
adc
loop
pop
or
enter
sti
xchg
cmp
mov
fstl
sub
bound
scas
mov
ljmp
sbb
push
sbb
sub
dec
imull
dec
mov
mov
lock
push
clc
jp
mov
inc
sahf
je
mov
loope,pn
pop
ret
dec
or
pop
mov
sarl
jbe
push
xchg
xchg
jb
mov
xchg
inc
pop
in
shrl
xor
out
pop
cmpsb
addr16
cmp
mov
scas
sub
jmp
jecxz
cli
sbb
fldenv
lret
pop
ss
xchg
and
pop
jb
loope
pop
cld
scas
idiv
out
xor
mov
fildll
xchg
pop
push
jp
add
sahf
imul
fcmovb
adc
push
insl
fsubrs
loop
mov
sbb
jle
aaa
das
dec
ss
push
cs
mov
ss
popa
ret
jb
iret
cmpb
mov
ret
cli
gs
outsb
mov
sbb
jg
add
imulb
ja
ret
or
push
subl
popf
xor
stos
fcomps
mov
or
jp
pop
out
xchg
lret
test
cmp
push
push
sbb
les
mov
orl
inc
xor
mov
dec
jg
pop
ret
in
leave
mov
lret
test
pop
xchg
pop
pop
mov
mov
test
or
add
test
hlt
cld
js
popa
sti
iret
push
pop
mov
inc
mov
hlt
xchg
xor
stos
scas
ret
mov
cli
mov
mov
mov
inc
fcoms
cli
sti
pop
pop
adc
mov
push
sti
repz
lds
xchg
push
ret
cmc
push
mov
or
leave
dec
sahf
push
cmpsl
or
xlat
xchg
data16
shlb
push
adc
mov
lds
inc
jno
mov
data16
js,pn
push
sti
mov
push
mov
xor
roll
adc
loopne
mov
pop
cmc
xor
push
or
inc
xor
mov
xor
int
sbb
testb
test
std
inc
into
jl
push
sahf
add
ljmp
int3
inc
xor
test
xorb
imul
loop
loop
xchg
repnz
loopne
out
lcall
mov
test
mov
rolb
jl
cwtl
imul
dec
mov
stos
and
lret
lods
loop
sub
gs
test
aas
lods
sbb
fcomps
dec
pop
jne
divb
mov
adc
xor
push
lret
inc
seta
cli
jae
lods
sbb
push
push
xor
lss
mov
out
push
cmp
cmp
add
pop
mov
and
cmp
push
in
jp
pop
jle
es
pop
and
inc
gs
loop
in
orb
cli
mov
push
pusha
loop
repz
fcoms
xor
testb
flds
mov
jb
outsb
xchg
dec
xor
xor
mov
data16
daa
test
lret
push
enter
shrb
shll
jecxz
dec
mov
out
and
mov
popa
movsb
lcall
xchg
cmp
push
mov
repnz
push
cwtl
sub
dec
mov
gs
sarb
ficoms
mov
loopne
pop
xor
shr
and
mov
push
lcall
fisttpl
clc
pop
addr16
mov
xor
jnp
sbb
push
xchg
mov
mov
clc
inc
idiv
notb
icebp
dec
stos
dec
push
outsb
pop
insb
push
mov
adc
xor
fs
inc
data16
dec
push
ret
cmp
leave
roll
mov
pop
pusha
popf
testb
pushf
sahf
aam
sbb
mov
adc
in
clc
call
mov
dec
push
inc
cli
or
fsubs
rolb
jae
xchg
lret
push
mov
clc
sarb
adc
je
adc
mov
sub
or
cmp
outsl
adc
gs
and
mov
add
sbbb
mov
lods
push
jp
clc
or
movb
jo
mov
mov
pop
lock
push
push
ficoms
ficoms
adc
aaa
mov
fsub
add
mov
cmpsb
push
mov
mov
int
xchg
sahf
stos
mov
jns
mov
ss
test
lret
cmp
lret
sti
push
nop
pop
hlt
das
stos
loope
loop
jno
hlt
jp
dec
cmp
cs
lcall
in
sub
add
fucomp
adc
adc
pop
js
adc
adc
ss
mov
and
mov
dec
inc
rcll
push
push
cmp
add
dec
aad
push
cmp
test
movb
jne
push
or
mov
mov
repnz
jb
jle
bound
sbb
movb
cli
and
dec
xchg
jmp
fistpll
sbb
or
inc
adc
pop
les
inc
cli
scas
mov
sub
mov
ljmp
mov
or
shll
push
mov
andl
stos
fidivs
or
mov
dec
mov
cmp
cli
cmpsl
cmp
xchg
in
hlt
and
pop
pop
mov
rorl
daa
bound
push
push
out
sahf
lret
pop
add
adc
cs
push
insb
cmp
xor
insl
xchg
andb
lock
pop
or
out
jne
and
xchg
enter
pop
inc
mov
out
adc
jns
nop
in
add
cmp
dec
or
adc
mov
sub
pop
hlt
adc
imul
cs
mov
out
sub
fisttpl
aaa
dec
ret
and
pop
jno
jne
adc
mov
mov
scas
mov
jle
lea
les
push
cmpsl
adc
or
mov
sbb
xchg
dec
rcl
push
push
jae
jae
sub
ret
and
movsb
lahf
pop
mov
cmp
ficoms
mov
cmp
sti
pop
cmp
jnp
mov
pop
cwtl
inc
add
inc
out
loop
push
sahf
xorb
dec
mov
iret
cli
imul
ljmp
ror
sahf
loopne
loop
adc
add
icebp
stc
sub
in
std
popf
ljmp
aas
fnstenv
repnz
pop
cmpsb
xor
cwtl
dec
inc
inc
push
ds
daa
pop
hlt
inc
outsb
dec
cmp
and
clc
adc
ds
cmpsl
and
jno
cmp
or
lock
sti
xchg
mov
loope
inc
insl
ds
test
mov
jae
adc
dec
leave
ds
stos
fdivrl
repz
inc
testb
mov
mov
and
rorb
test
dec
mov
or
mov
repnz
push
in
or
inc
lahf
dec
push
mov
mov
outsb
inc
ds
push
cmp
add
arpl
fwait
pop
or
pop
jle
lret
add
cli
xor
fbstp
aam
or
mov
add
test
and
lahf
in
rcl
stos
lods
mov
pop
pop
adc
or
xchg
lret
sti
xchg
inc
mov
cmp
in
or
mov
loop
es
scas
push
xchg
sub
bound
lea
adc
ljmp
dec
sub
lret
inc
rolb
movsb
pop
into
into
sbb
rcrl
fdivrs
leave
lahf
or
mov
pxor
sub
mov
imul
and
xchg
dec
cmpsl
cwtl
push
bound
xlat
mov
repnz
lcall
jmp
xor
stos
push
push
repz
sbb
or
cld
xchg
icebp
and
leave
and
frstor
push
mov
idiv
pop
mov
lahf
ret
add
jo
ss
push
xchg
iret
cmp
mov
ret
bound
or
pop
or
lcall
shrl
shlb
mov
or
dec
ret
cmpb
mov
cli
gs
pop
dec
in
dec
call
sub
sub
push
cmp
idivl
fnstsw
stc
loop
sahf
sbb
mov
push
mov
decl
add
cli
aaa
movsb
outsl
push
fldcw
ds
fwait
aaa
sbb
add
lea
clc
rcl
negl
inc
mov
and
add
mov
mov
ljmp
mov
dec
out
not
aad
sar
push
sub
and
aas
call
test
mov
neg
sarb
sub
mov
mov
mov
imul
or
or
scas
in
mov
jmp
stos
dec
lods
sbb
pop
cs
sbb
in
inc
cmp
faddp
es
mov
scas
jp
cmc
cmp
and
pop
push
jmp
mov
movsb
fcomps
push
lea
test
mov
enter
stos
into
repnz
xchg
jne
dec
fistl
jp
mov
xlat
sahf
adc
sub
pusha
ficoms
adc
mov
mov
push
cmp
imul
rcr
inc
cs
mov
in
ficomps
add
inc
cli
sbb
out
pop
xor
xchg
lds
sti
addb
add
jns
in
xor
adc
scas
mov
cmp
mov
xchg
scas
mov
xlat
btc
ss
cmc
mov
sbb
xor
mov
test
lret
test
and
insb
pop
dec
test
ret
xlat
inc
mov
cmp
sbb
inc
cmp
imul
mov
ret
ljmp
popf
add
mov
cmp
jbe
pop
sar
aam
mov
popf
add
cmp
lret
mov
mov
mov
ljmp
mov
xchg
pop
push
in
repz
pop
in
mov
mov
push
or
outsl
int3
das
mov
mov
pop
ud1
adc
nopl
out
cli
stc
push
pop
xchg
mov
ror
das
inc
ja
or
mov
lcall
push
pop
jle
pop
std
rcrl
das
sub
ret
dec
and
rorb
mov
mov
or
push
cli
jo
mov
mov
incl
in
mov
ficompl
fisubl
and
rcll
scas
sub
pop
cmp
das
adc
incl
in
sub
stc
mov
std
repz
xchg
mov
cmp
dec
leave
enter
push
jnp
pop
pop
insb
scas
jo
dec
inc
adc
add
mov
mov
mov
lret
push
pop
sub
ror
jge
jno
ror
sub
cmpsb
xlat
or
jno
push
and
xchg
jl
jmp
mov
ja
clc
pop
push
pop
leave
cmp
aam
out
push
cld
cmp
std
mov
pop
icebp
movsl
push
cmp
inc
ljmp
clc
sbb
cld
push
rol
pop
pop
sahf
dec
xchg
adc
adc
pop
inc
and
mov
push
mull
ds
jb
cmp
sub
or
lcall
fcoml
push
sbb
dec
sbb
cli
les
mov
mov
lahf
das
stos
das
loop
xor
repnz
mov
and
mov
and
sub
cli
push
adc
or
cmp
or
jecxz
ljmp
hlt
jno
push
mov
jb
mov
cmp
pusha
sbb
mov
jmp
faddp
imull
rorb
adc
lcall
ds
clc
adc
mov
xor
cld
cmpsb
test
mov
sbb
lods
shrd
mov
enter
test
ds
into
cs
shl
loop
push
mov
rsm
inc
bound
aad
inc
sbb
sbb
ret
or
and
xor
out
xchg
mov
ds
inc
ret
inc
mov
mov
idivl
out
cmp
push
cli
bound
repnz
in
cmp
mov
dec
imul
leave
aad
test
es
xor
es
rcr
mov
mov
rol
fidivrl
test
xchg
xchg
xchg
repnz
mov
mov
scas
les
shrl
fildll
scas
cli
mov
mov
hlt
jo
or
add
pusha
test
mov
pop
test
pop
jg
or
leave
lcall
mov
call
jmp
decb
and
fistpll
ss
in
aaa
or
fcom
in
mov
movd
mov
ds
icebp
cmp
pop
daa
add
push
repz
cmc
mov
push
pop
ret
ret
iret
lcall
sarl
notb
mov
mov
and
in
ret
pop
jp
call
and
stos
xlat
ljmp
out
pop
lds
mov
mul
push
mul
cmpb
pop
mov
aaa
sahf
dec
mov
sarl
inc
jbe
ret
leave
fsub
stc
bound
test
inc
mov
mov
or
mov
sbb
cmc
std
mov
enter
push
cwtl
js
xchg
xlat
push
mov
xor
outsb
ret
enter
push
dec
mov
adc
jns
mov
sti
andl
cli
mov
adc
popf
cmp
add
popf
enter
fists
pop
pop
stos
std
push
push
adc
fbld
leave
mov
sbb
push
push
dec
sbb
mov
ffree
mov
jb
add
shlb
mov
fildl
or
xchg
sub
push
jne
movsl
xchg
jle
lds
push
inc
jle
dec
int3
mov
pop
dec
sub
daa
push
push
outsl
fisubl
daa
fmul
outsb
mov
pop
push
fcmovne
adc
push
mov
and
mov
loop
outsb
in
adc
pusha
cli
filds
mov
push
notb
lea
inc
fidivrl
enter
push
hlt
fwait
pop
inc
daa
jp
push
out
mov
rcr
push
mov
push
push
inc
mov
into
loope
loopne
rcr
dec
pusha
push
repnz
mov
pop
push
add
es
fistl
es
out
pop
bnd
mov
mov
mov
add
out
inc
fdivrp
dec
or
mov
ds
xchg
mov
and
pop
inc
mov
pop
std
push
mov
xlat
adc
jno
push
call
fcomps
jp
pop
aad
faddl
mov
push
add
sub
repnz
mov
out
loope
adc
mul
fisubl
adc
xchg
aas
inc
loop
or
fstpt
stos
xchg
and
fldcw
fistpl
mov
fmull
xchg
ds
ffree
int
out
sbb
jno
add
fdivrp
mov
mov
jle
adc
ss
dec
fsqrt
adc
cmc
push
mov
xchg
sbb
cmp
push
fmuls
inc
inc
pop
pusha
repnz
loope
add
scas
out
hlt
clc
sbb
ss
loop
ss
pop
stos
jb
inc
pop
es
mov
out
or
dec
loop
xchg
or
mov
cmpsl
in
mov
pop
ds
sbb
pop
sbb
push
add
addb
decl
fimuls
add
push
add
sub
mov
pop
test
stos
sub
jb
sub
sbb
push
into
sbb
push
sub
mov
scas
int3
jno
jl
xorb
sti
xor
ret
mov
orb
in
xlat
dec
mov
fldenv
ljmp
call
and
or
cmp
mov
loop
or
ror
orl
js
xor
in
fidivrs
add
and
stos
inc
push
lret
stc
iret
add
clc
outsb
mov
test
sub
xchg
iret
jnp
sbb
xchg
dec
int3
push
ljmp
xchg
sarl
je
dec
cs
int
iret
jns,pn
push
int3
and
xor
pop
inc
push
testb
xchg
rorb
pop
mov
mov
xchg
and
adc
and
or
and
shll
cmp
test
mov
hlt
inc
jb
mov
pushf
xchg
and
aas
dec
push
cmp
sub
sbb
sbb
cld
mov
es
loope
xchg
outsb
jnp
and
push
fcomp
mov
pop
ss
loop
rcrl
not
sbb
out
fadds
push
std
xchg
add
and
ds
mov
mov
loope
iret
ficoms
or
ret
mov
rorl
mov
lock
pop
mov
sub
add
fs
cs
or
sbb
xchg
mov
std
std
ret
jne
pop
inc
outsb
int3
mov
lahf
dec
inc
fdivrp
push
cld
dec
into
ficoml
adc
mov
pop
cmpsl
pushl
ret
in
rcr
lods
clc
js
into
mov
add
mov
sti
mov
repnz
ds
cli
ds
fcmovnbe
aas
pop
and
add
addb
push
inc
and
pushf
sub
inc
add
pop
fisttpll
xchg
popl
jb
add
es
xor
push
push
fdivs
pop
dec
xor
and
out
xor
pusha
fildl
xor
add
inc
add
pop
rolb
dec
push
scas
stc
pop
push
xor
or
sub
push
cvtdq2ps
mov
and
sbb
adc
inc
inc
inc
cmp
mov
adc
rcrl
push
xor
add
fsubs
or
dec
sbb
mov
or
inc
push
aam
inc
sub
adc
ficompl
push
clc
sub
inc
test
or
sbb
sti
fidivs
call
fiadds
testb
xchg
mov
adc
shl
dec
clc
mov
out
dec
push
outsb
adc
ret
sti
and
fstps
out
dec
jb
lahf
jle
inc
inc
adc
sub
fadds
fnstcw
adc
testb
or
add
mov
push
and
fldl
inc
loope
push
lahf
aad
pop
fld
sti
or
js
test
push
pop
mov
out
es
hlt
ja
sbb
mov
and
xchg
fsubs
fdivrs
lret
mov
add
orl
push
lahf
cmp
std
sbbb
in
push
test
xchg
fucomip
xchg
stc
mov
xchg
pop
cld
mov
or
sbb
shl
data16
push
out
rol
cmp
jb
rorb
out
mov
mov
cli
dec
or
dec
lds
sahf
ds
mov
paddsb
test
scas
inc
xchg
xchg
push
xchg
jno
gs
jnp
or
mov
push
jmp
push
push
and
or
loope
jae
jb
jecxz
cld
mov
out
sti
mov
mov
ds
lds
pop
lock
into
or
ffree
mov
add
outsb
jnp
mov
adc
ret
inc
loop
add
jmp
push
mov
mov
mov
scas
push
clc
and
mov
cld
xchg
lret
cli
or
filds
mov
dec
push
out
mov
mov
pop
mov
or
fistpll
repz
rorb
push
loop
hlt
xchg
add
rorl
adc
push
sbb
mov
popf
dec
popa
mov
and
cld
lods
fmuls
dec
add
fistps
push
in
xor
or
aad
out
mov
aam
das
mov
or
sub
dec
std
mov
clc
and
cli
fdivrp
mov
push
dec
or
or
xchg
pop
les
lret
mov
cmp
out
shll
lcall
jns
sahf
stos
pop
adc
ror
add
mov
repz
mov
gs
sub
loop
xlat
pop
mov
pop
push
push
fldenv
popa
cmp
daa
inc
adc
add
mov
test
ss
pop
cmp
es
mov
hlt
test
adc
push
fmull
rol
sahf
mov
gs
mov
insb
ja
sarb
clc
sub
loope
pop
dec
sti
or
fisttpl
mov
cmp
inc
ja
in
mov
fsubrs
ret
and
dec
mov
sub
or
popa
fisttpl
ja
ret
sahf
sub
jbe
rep
clc
shl
mov
xlat
rol
add
jp
mov
or
in
cmp
mov
fxch
dec
leave
fsubs
push
push
out
ljmp
add
xchg
or
push
xor
das
stos
and
xorb
pop
lock
pop
pop
cli
rorl
cmc
mov
push
jl
xchg
mov
clc
adc
cmp
sahf
lahf
push
addb
jno
or
sti
adc
gs
mov
sahf
clc
pusha
cmp
aam
mov
push
push
push
adc
xor
scas
inc
cmp
xor
incl
xchg
loopne
adc
push
fmuls
in
pop
pop
into
mov
cmp
jmp
repnz
or
push
and
pop
add
pop
int3
push
out
not
fmull
pop
cli
pop
push
cmc
mov
fimull
inc
pop
mov
fimuls
test
aas
sarl
mov
cmp
mov
add
xlat
fidivs
loop
sbb
lcall
fcmovb
dec
pop
stc
push
shrb
push
mov
sub
out
mov
push
jns
inc
icebp
pop
lret
ja
ret
ret
lea
add
jl
jl
mov
xor
sub
test
fcmovnbe
jnp
mov
mov
ss
xchg
fsubl
outsl
jl
enter
mov
jmp
push
popa
sub
imull
jp
push
orl
mov
mov
pop
jle
test
js
jnp
fcoml
outsl
stc
push
cmp
ffreep
fisttps
mov
dec
jne
mov
je
and
icebp
js
nop
inc
fisubl
jp
cmp
fsubr
inc
out
xchg
jmp
push
push
sub
or
add
frstor
and
push
cmpsb
popa
rcr
out
jae
sbb
jl
mov
mov
lret
mov
cli
mov
mov
negb
mov
aad
addr16
loope
repz
cmp
mov
or
inc
adc
sub
sub
jb
lret
ss
vprotd
aaa
enter
mov
mov
mov
add
jo
or
xchg
decl
and
clc
push
stc
lods
mov
das
mov
divb
push
dec
adc
fcmovnu
xchg
lods
int3
ffree
inc
sub
pop
lea
xchg
shll
aas
loop
fmuls
pop
ficompl
fistl
int
cmp
xchg
push
jl
mov
xor
mov
adc
pop
mov
outsb
cmpsb
sti
stos
jecxz
loope
push
dec
jo
movsl
out
cld
adc
cmovge
rclb
das
mov
xchg
stos
lret
sub
ds
cmpsb
leave
dec
and
ret
in
fstpt
mov
push
les
add
pop
test
jl
lods
cmpsl
sar
mov
jge
into
leave
idivb
ds
into
mov
loop
test
roll
rorb
jecxz
mov
mov
pop
imul
loope
mov
cli
or
sub
jae
lret
aas
iret
ret
mov
testb
and
lret
adc
es
shl
fbstp
sbb
mov
mov
arpl
in
out
movsl
mov
testb
mov
push
fisttpll
xor
rolb
mulb
mov
ds
pop
rcr
stc
pop
lret
f2xm1
xchg
ret
scas
mov
mov
icebp
xchg
xor
clc
mov
push
ret
mov
push
stos
mov
jns
push
ret
sub
stos
sarb
cli
movb
add
js
xor
fisttpl
sbb
arpl
dec
mov
out
and
mov
loope
cwtl
sahf
adc
lahf
lcall
inc
add
add
aaa
jae
mov
mov
cmp
int
stos
mov
mov
add
cmp
inc
adc
je
pop
push
push
jl
sub
shlb
fnstsw
add
add
mov
inc
enter
jno
sbb
scas
xor
mov
jmp
out
clc
pop
fisttpll
out
or
or
mov
fbld
lock
pop
mov
jno
jge
sub
or
push
stos
lods
xchg
mov
std
fcmovnu
daa
mov
jns
movhps
dec
mov
pop
push
mull
insb
xlat
lret
pop
cmp
dec
lret
bound
and
pop
leave
or
sbb
lret
aaa
xor
cmp
jns
sarl
inc
inc
aas
outsb
cmp
sahf
rclb
cwtl
js
adc
or
sbb
push
sub
icebp
stc
mov
push
lret
adc
sti
mov
sbb
or
sub
cmp
mov
or
testb
or
or
and
xchg
incb
add
lods
jg
gs
ret
jl
adc
and
icebp
push
cs
inc
pop
sti
mov
adc
sahf
dec
pop
pop
aam
mov
in
sbb
jns
jle
testb
stos
int
popa
aad
add
shr
mull
mov
fdivrl
ret
ljmp
mov
inc
push
fcomps
fistpll
mov
sub
cld
stc
cmpsb
loope
jl
in
sub
inc
adc
les
cs
mov
fsubp
mov
loop
push
ret
mov
mov
mov
fsubrl
fadds
bound
xchg
sub
inc
xchg
mov
inc
pusha
dec
push
cmp
sub
fsubr
std
lahf
push
test
inc
sbb
cmpsb
xor
lahf
sub
int3
mov
gs
xchg
add
clc
jo
ljmp
neg
out
cwtl
outsb
pop
sbb
mov
xchg
fdivs
sbb
inc
enter
pop
mov
xchg
jns
push
sarb
jnp
pop
jae
mov
popa
ljmp
add
xlat
pop
rorl
mov
xlat
cmp
int3
aaa
cs
mov
shlb
and
mov
mov
or
adc
xbegin
loop
cmp
loope
push
cli
shlb
cmp
inc
ret
inc
push
lret
xchg
lret
arpl
mov
inc
fisubrl
jmp
test
insl
int
mov
into
repz
aam
jae
dec
sarl
inc
cmpsl
jns
shlb
or
aaa
icebp
push
fisubrs
leave
mov
sarb
mov
push
shlb
ds
sarb
shlb
xor
push
and
out
jbe
lahf
pop
xchg
xor
xor
cwtl
mov
xor
mov
or
cmc
ret
add
loope
pop
or
dec
and
mulb
cmp
loope
sarl
adc
cmp
mov
xlat
mov
mov
outsb
xor
cmpsl
cmp
fidivs
into
sub
icebp
inc
mov
iret
mov
aam
out
sub
xor
jle
repnz
clc
imulb
lret
mov
ljmp
sbb
mov
out
shl
add
cmpsb
cmpb
inc
cmp
ds
xlat
call
aas
jl
jp
ja
aam
sahf
mov
cwtl
push
repnz
sbb
sub
xchg
sub
add
mov
jns
es
cmc
into
inc
call
mov
fcoml
popf
insb
out
cmp
fimull
out
fbld
pop
shlb
ds
loop
out
int3
stos
shll
cmp
pushf
sbb
int3
stos
rcl
or
clc
movl
xlat
aam
stc
push
test
push
or
adc
inc
dec
aam
mov
sbb
loop
dec
mov
data16
fcoml
or
sahf
add
mov
xor
repnz
sarb
cmp
scas
xor
sti
xchg
dec
cbtw
int
outsb
xchg
pushf
test
lret
cmp
xor
push
jle
dec
neg
movsb
clc
fadd
mov
or
popa
mov
dec
lds
add
js
xchg
lods
negl
jns
xchg
out
sub
jo
dec
push
mov
inc
and
mov
in
enter
pusha
mov
mov
enter
pop
into
test
clc
mov
and
in
adc
cmp
xor
sarl
enter
push
mov
lock
push
and
or
jl
push
imul
pop
fdivrs
cmpsb
sahf
out
mov
pop
imull
push
xchg
cmpsb
mov
mov
dec
and
cwtl
cmp
fidivl
xchg
mov
sub
sub
scas
mov
mov
sbb
adc
or
fisttpll
fists
clc
mov
xchg
pop
adc
enter
dec
movsb
push
movsb
lock
sub
mov
scas
mov
test
push
or
fldt
or
pop
scas
jg
xor
xor
icebp
dec
ljmp
das
test
push
sbb
jo
xlat
lock
and
pusha
mov
mov
xchg
enter
mov
data16
sbb
mov
addb
out
out
push
addr16
pusha
mov
loopne
cmp
les
test
clc
lahf
sbb
mov
fstl
or
adc
mov
sbb
xor
or
nop
or
lock
jle
sub
jecxz
mov
xchg
cli
sub
out
pushl
lock
clc
mov
addr16
repnz
pusha
imul
inc
outsb
push
lcall
fstl
clc
lods
push
addl
ss
mov
pop
daa
stc
push
aas
fmul
mov
sahf
pop
dec
pop
ficompl
xchg
sahf
loop
adc
jnp
out
out
or
and
lret
add
add
cmp
jmp
das
sub
popa
icebp
mov
movsb
das
gs
lods
clc
pusha
cmp
mov
lea
ret
andb
adc
mov
mov
fsubl
adc
mov
mov
lds
xchg
lock
mul
sahf
fsubrs
into
mov
nop
rcr
or
inc
xchg
mov
push
rcr
ret
or
or
jo
push
fsubrp
cmp
xor
das
fstl
mov
mov
ds
xor
rcll
loope
jle
ret
lret
cld
loop
negl
ss
cmp
adc
or
cli
enter
enter
faddp
aas
sub
imul
out
jns
fstl
hlt
pop
dec
out
icebp
mov
add
bound
lret
and
mov
incb
hlt
nop
test
popa
pop
xlat
pop
and
or
adc
and
jnp
mov
call
movsb
inc
cwtl
xchg
lods
fisubrs
or
call
into
shll
dec
or
fisttpll
add
rolb
mov
push
cmp
test
sub
add
cmp
in
or
data16
inc
adc
movsb
jmp
or
addr16
mov
movsl
push
xor
enter
mov
xor
dec
movsb
aam
sahf
data16
enter
popf
lret
push
add
out
push
sub
lds
push
mov
mov
es
xor
ds
das
sti
ret
xor
rcrl
fcmovb
or
lahf
enter
fisttpl
sub
fsubl
push
push
or
icebp
js
xor
push
jp
into
push
or
divb
ds
imul
nop
push
mov
movsl
cs
test
mov
repnz
pop
xchg
mov
test
xorl
stc
xlat
jg
lahf
stos
das
lock
or
jge
mov
adc
js
loop
sbb
xchg
fs
mov
frstor
sahf
dec
mov
sub
dec
movl
fnstsw
push
aas
mov
add
xlat
adc
xchg
jecxz
arpl
aad
xchg
pop
notl
xor
cmpsb
add
mov
dec
icebp
mov
jl
pop
lret
je
cmp
aaa
ss
mov
cmpsl
push
mov
push
sub
add
cmpsb
mov
sbb
pop
pop
inc
cmp
gs
pop
ds
push
ss
adc
inc
enter
subb
dec
popf
mov
ret
shll
aaa
mov
leave
adc
movsb
int
outsb
xor
inc
lcall
das
into
ds
cmovnp
push
xor
and
jo
jno
pop
in
jp
or
lock
push
sbb
cmp
scas
pop
inc
das
fildll
enter
je
pop
mov
ss
push
lret
push
mov
cmpsl
in
push
jecxz
xor
aas
cmp
gs
ffree
push
push
push
dec
test
or
lea
mov
add
add
scas
cmpsb
xchg
or
sub
std
cmp
add
mov
xor
cli
and
out
movups
cmp
call
sbb
push
add
add
jl
cmp
xlat
out
sub
or
dec
cmp
push
sahf
cmpsb
sahf
or
pop
ds
cmp
jecxz
clc
daa
sbb
sub
shrl
enter
fadds
xchg
lret
xor
out
idivb
jle
xchg
arpl
dec
leave
aad
or
push
xchg
cmp
fcmovbe
lret
cld
out
test
pop
xor
mov
sti
push
add
das
enter
pop
shl
pushf
add
fistpll
mov
mov
imul
movsl
in
ljmp
pop
ss
jecxz
mov
mov
in
ds
dec
enter
dec
jp
nop
adc
cmp
xor
int
cmp
xlat
sub
mov
enter
xchg
pop
mov
mov
movsl
xchg
or
or
outsb
xor
cmovne
cltd
add
mov
jnp
xor
pop
sarl
cmpsb
stos
push
pop
dec
faddl
sahf
mov
out
sbb
int
out
ljmp
lods
lret
in
push
fimull
push
daa
cmp
mov
ds
lods
add
les
xor
mov
out
ds
add
jmp
imul
or
cld
xchg
mov
stos
inc
push
fisttpll
jle
xor
and
lods
mov
push
and
push
dec
andl
push
test
mov
stos
rcr
jmp
icebp
ja
into
nop
popf
xlat
mov
aad
int3
or
dec
out
pop
faddl
imul
jb
jae
cwtl
ret
shrb
mov
jbe
adc
inc
xor
fcomps
neg
jg
inc
ficoml
push
or
adc
inc
inc
sub
mov
xchg
cmp
hlt
push
ret
mov
neg
inc
or
aas
test
mov
sbb
adc
lret
pop
insl
jecxz
popa
lcall
fisttpl
mov
adc
dec
test
stc
xor
fwait
mov
or
inc
cmpsl
mov
xor
enter
movsb
cmp
fwait
stc
mov
cwtl
sahf
cli
add
sbb
enter
loop
shr
das
call
push
cmp
pop
out
jg
xlat
ljmp
cmp
mov
pop
mov
xchg
mov
mov
sti
int
ret
cmp
cmp
cli
inc
je
stc
pop
cmp
mov
dec
dec
lret
cmpb
adc
jno
negl
jg
int
mov
xorl
push
outsb
cs
out
hlt
add
sub
stos
jne
rorl
push
out
insb
push
add
jne
bound
and
mov
pop
cmp
outsb
dec
jnp
adc
lods
cmp
clc
sbb
sub
pop
sbb
test
push
pop
movsb
hlt
push
lret
fisubl
push
ret
sbb
sub
scas
xor
inc
lret
pop
jle
push
pop
sbb
aam
sub
movsb
aas
cmp
gs
pop
clc
stos
stc
mov
outsb
jno
sub
ror
mov
je,pn
sub
pop
jnp
or
shll
sbb
sbb
enter
stc
fsub
mov
in
or
cld
pop
clc
ret
cmc
jl
fnstcw
sbb
inc
cmp
xor
mov
sbb
pop
ds
aaa
adc
int
push
adc
cmpsl
lret
ds
cmp
xchg
shl
nop
sbb
into
mov
movsb
fildll
xor
dec
iret
push
ret
sbb
outsb
mov
enter
repz
jnp
in
push
or
out
clc
jmp
mov
aas
dec
enter
adc
popf
jne
or
lods
dec
sub
mov
fadd
in
stc
popf
fxch
sbb
jne
aad
loope
inc
fs
jg
mov
jmp
mov
mov
fdivrl
mov
sti
jbe
adc
cmpsl
mov
jo
mov
add
icebp
rcl
out
push
cli
ds
push
add
cld
push
adc
shlb
cld
cmc
dec
lcall
xorb
pop
ds
cmp
mov
inc
jp
sub
enter
xor
jle
cmpsl
jbe
out
pop
add
sahf
std
or
sub
push
sub
inc
scas
jle
mulb
sahf
mov
push
hlt
jne
dec
lahf
insb
pop
aam
xor
add
mov
bound
and
jecxz
add
or
sar
or
push
lret
shlb
outsl
pop
sar
lds
fwait
adc
or
cmp
ljmp
adc
std
pop
mov
mov
mov
arpl
loope
ss
cmp
push
adc
sbb
loope
mov
add
popa
std
rcl
call
lret
outsb
xlat
aas
lds
cwtl
into
fildl
ja
xor
in
jne
pusha
mov
lret
inc
xlat
enter
loop
sbb
lret
inc
cli
or
shrl
stos
xchg
dec
push
stos
popa
cmp
pusha
inc
mov
mov
push
mov
or
mov
ficompl
shr
fninit
jo
lret
call
icebp
mov
and
mov
and
out
xchg
push
es
and
push
ja
ljmp
aam
enter
cmp
dec
mov
sti
adc
shl
jno
xchg
mov
imul
jecxz
loopne
ret
mov
aam
adc
cli
dec
stos
aam
jae
into
cld
mov
or
iret
push
cmp
pop
enter
xor
pop
adc
out
cmp
pop
stos
adc
mov
xchg
dec
xchg
lock
pop
les
xchg
lcall
aam
xchg
jae
sbb
mov
movb
ret
jne
lret
mov
cmp
sbb
cli
movsl
xor
call
lret
mov
push
and
cmp
pop
int3
dec
jbe
jg
in
andb
inc
jl
and
cmp
ret
xor
push
lret
mov
lods
and
fistpl
and
xor
fiaddl
ljmp
icebp
xchg
mov
int
jae
mov
mov
sub
mov
mov
sti
mov
fnsave
adc
mov
xchg
push
sub
lret
cmp
imull
and
inc
jg
and
and
xor
push
lds
fwait
xchg
xorl
lock
mov
movsl
pushf
mov
dec
fsubl
leave
dec
lods
out
fistps
in
mov
fnstsw
mov
in
jae
jmp
pop
fnstsw
xlat
push
cli
push
shlb
aad
inc
icebp
sub
fldcw
jbe
add
roll
xorb
lock
out
movl
or
popf
adc
mov
sub
sarl
dec
mov
cmpsb
outsl
outsb
insl
idiv
shl
pop
loopne
mov
push
mov
cltd
loope
in
ljmp
adc
mov
lods
cmp
gs
aam
ss
jle
mov
mov
in
lock
iret
pop
pop
mov
and
mov
or
mov
sti
fucomp
mov
cli
sub
es
mov
mov
cli
sub
cmpsb
cmp
repz
xor
inc
push
leave
rolb
ret
addr16
inc
call
loope
cmpsb
inc
mov
into
mov
in
sti
adc
or
xchg
inc
iret
mull
sahf
insb
pmaxsw
lahf
rclb
das
lret
sti
xlat
or
mov
or
xor
out
adc
mov
mov
push
stos
dec
adc
fwait
or
mov
into
xchg
inc
fistpll
enter
dec
sti
popf
sub
pushf
test
push
int3
sti
and
out
pop
icebp
in
sub
jp
mov
test
jb
scas
into
cmpsl
addr16
lahf
std
dec
fs
test
mov
clc
sahf
cmpsl
dec
dec
leave
into
cmpl
mov
jno,pn
push
into
mov
mov
outsb
cmp
enter
loop
adc
js
dec
mov
dec
inc
enter
jmp
les
mov
orb
mov
enter
mov
adc
mov
arpl
icebp
pop
js
loop
jp
dec
cmp
pop
out
fcom
rol
cmp
outsb
mov
icebp
jb
sarb
ja
sbb
sbb
sub
adc
lahf
daa
mov
int
cmp
and
iret
cmp
mov
inc
daa
add
rorl
sbb
sub
ror
sahf
jb
loopne
lods
loopne
ret
add
fisubrl
pop
push
ret
out
lret
ficompl
arpl
mov
dec
and
lahf
mov
shrl
and
shll
lds
cs
mov
test
pushf
mov
jmp
enter
adc
call
ficoms
sub
push
mov
inc
xchg
enter
jno
jae
cmp
imul
inc
scas
js
lahf
sbb
dec
push
add
or
data16
mulb
cmc
lahf
or
xlat
jle
pop
mov
xlat
iret
out
inc
mov
sbb
mov
add
mov
sbb
cltd
pop
or
push
xchg
enter
mov
clc
loop
es
cmpsl
push
es
loop
enter
lahf
pop
inc
and
out
adc
rorb
popf
inc
dec
sbb
mov
push
scas
fisubrl
add
clc
sbb
sbb
aad
cld
insb
xor
mov
stos
sbb
push
into
cmp
stos
sahf
push
sbb
dec
cwtl
inc
jl,pt
jp
sbb
stc
pop
lret
movb
movl
sahf
push
push
repnz
test
dec
adc
sbb
adc
xlat
daa
inc
xor
movl
adc
jecxz
lcall
fisubrl
ret
lret
hlt
mov
push
std
inc
inc
lret
or
addr16
rcr
jecxz
sahf
adc
add
test
lock
int
mov
mov
mov
inc
rorb
lock
sbb
sbb
push
add
fld
push
add
xchg
push
dec
mov
sbb
jle
sub
mov
xchg
loop
imul
shll
mov
cmpsb
xor
cmp
sbb
pushf
into
mov
xchg
and
mov
push
sbb
jg
sub
mov
sti
dec
call
jmp
add
mov
mov
sub
loope
addr16
mov
xchg
push
mov
jp
fistpll
mov
ret
jle
clc
sahf
xlat
xor
testl
leave
ficompl
mov
int3
mov
sub
xchg
ss
cli
mov
int3
in
push
push
cmp
out
push
enter
jmp
loope
es
sti
jmp
xor
das
jae
sbb
scas
es
mov
sub
dec
repz
cli
or
dec
je
xchg
lods
das
lret
sahf
pop
adcl
mov
call
mov
cmp
mov
cli
out
add
ret
loope
sub
mov
inc
push
dec
xor
mov
dec
xchg
call
mov
sahf
cmc
or
xor
pop
jne
in
andb
inc
pop
lock
mov
sar
dec
clc
jp
adc
mov
add
ret
sti
pop
scas
jmp
push
in
xchg
push
roll
pop
cltd
add
jne
sub
nop
sub
sahf
xchg
cmp
xor
cmpsl
jg
movsb
rcrb
mov
cmpsl
fldenv
call
ficoms
insl
or
mov
test
mov
add
loope
and
scas
sbb
mov
in
cmpsb
andb
push
lods
sub
das
sbbb
xlat
or
jmp
and
pop
lret
mov
lcall
push
push
repz
cltd
rclb
adc
sar
inc
pop
mov
call
push
pop
in
out
sub
arpl
inc
jecxz
mov
lret
jecxz
lcall
sub
into
sti
mov
dec
mov
out
adc
jb
or
pop
inc
inc
cmp
sub
xor
xor
ret
adc
test
jne
inc
inc
leave
and
add
jl
sub
adc
shlb
pop
push
sbb
mov
movsb
adc
adc
mov
cld
mov
cmp
mov
aaa
or
andb
stc
inc
pop
or
lret
sub
sahf
and
movaps
loopne
stos
mov
les
mov
dec
or
jno
fdivs
fldl
out
stos
lods
sbb
cmp
push
ds
pop
ss
bound
mov
sbb
scas
sub
mov
inc
out
jge
into
into
mov
pop
les
mov
hlt
mov
rcll
fsubr
mov
lods
sub
sub
sarb
aaa
lds
sbb
mov
ds
adc
mov
loop
mov
xor
jmp
outsb
into
cld
pop
adc
out
in
loop
inc
lea
sbb
xlat
jb
push
pop
pop
mov
xor
fdivrp
clc
rol
push
and
call
out
mov
or
sbb
scas
in
mov
mov
hlt
inc
mov
lret
jns
iret
cmp
dec
daa
mov
sti
dec
in
and
inc
cltd
jae
adc
jmp
push
shlb
enter
inc
mov
int3
jo
adc
jg
xor
enter
push
cmp
aam
mov
into
movsb
mov
enter
xorl
cmp
stos
je
xchg
int
sub
aaa
scas
js
mov
cmpsb
and
idivb
jne
inc
inc
les
inc
jge
jg
in
sbb
lds
lahf
mov
rorl
xor
ljmp
ret
push
mov
enter
inc
orb
data16
jecxz
mov
fcmovb
sub
cmp
scas
cmp
daa
fldcw
ret
jne
sahf
add
data16
push
jge
add
rcl
imul
in
push
clc
lock
xor
jl
into
dec
clc
push
and
cmp
ds
inc
pushf
push
fmul
and
mov
inc
jge
pop
out
push
xor
jge,pt
loop
ljmp
int
xor
loopne
inc
pop
ds
lret
and
rorb
cli
add
repz
daa
mov
add
aam
lock
ds
pop
pop
ret
and
or
pop
lds
and
jg
aaa
fistl
fsubl
test
or
lock
insl
je
pop
mov
xor
mov
push
dec
add
gs
sub
jno
jecxz
shrb
add
inc
aad
in
or
pop
push
xchg
outsl
test
push
sub
ds
mov
dec
aam
jb
pop
mov
iret
loope
pop
mov
fldcw
cmp
rcl
lea
fistps
lret
push
and
jl
jmp
xor
in
insl
jnp
pop
pop
xlat
ror
mov
arpl
fmull
std
mov
xor
add
icebp
cli
call
xlat
jle
das
mov
arpl
lret
cmp
pop
fisttpl
ret
and
cmp
data16
or
mov
ret
mov
stos
push
sub
in
std
xchg
sub
add
int3
popa
icebp
cs
sti
push
test
rcrb
enter
mov
stc
xlat
push
pop
or
jnp
rcl
or
sub
repnz
sub
ljmp
pop
xchg
cmpb
cmc
dec
sbb
movsl
imul
dec
sub
xor
xlat
ret
fsub
aam
adc
mov
ds
daa
mov
cmp
push
leave
mov
jne
jmp
dec
mov
xlat
xor
mov
sbb
jno
rcrl
mov
int3
sbb
ljmp
ja
jbe
and
fdivrp
mov
sbb
fsubrl
cmpsb
mov
mov
cmp
es
mov
enter
pop
adc
inc
stc
jmp
fidivs
xchg
push
xchg
rcll
dec
clc
mov
loope
push
insb
xlat
pop
fidivrs
into
cmpsb
ss
pop
sbb
out
adc
cmp
adc
call
cmc
fists
bound
rcrl
fcmove
loopne
aaa
sbb
mov
push
out
inc
cmp
inc
jg
cmp
fs
mov
jle
mov
fdivr
enter
mov
xchg
mov
push
fidivl
dec
push
cli
mov
and
mov
sbb
jb
mov
into
jne,pn
repz
cmp
cli
cmp
mov
push
punpckhwd
icebp
test
mull
push
mov
pop
stos
aaa
scas
int
push
cmpsb
push
or
ds
xor
jbe
ljmp
pop
dec
mov
jg
sarb
rolb
inc
repz
imul
lahf
cli
mov
lods
sub
jae
add
arpl
ror
mov
aad
push
inc
shlb
loopne
outsl
into
scas
out
out
inc
xor
or
add
add
shll
cmpsl
push
sarb
movsb
sarl
addr16
sbb
push
pop
jae
loope
mov
cmp
out
push
cli
shlb
pop
sar
lds
xor
jmp
mov
pop
xchg
ds
push
pop
sti
pop
jne
xor
jnp
std
in
pop
mov
mov
sub
sub
cmpsb
push
leave
iret
cmp
out
inc
sahf
jecxz
call
aad
sub
pop
jp
sub
pop
or
loopne
sarb
lret
inc
mov
dec
out
ficoms
fistpll
adc
icebp
loope
mov
cmp
mov
int3
imul
cmp
inc
mov
cwtl
and
ds
out
lock
mov
sti
mov
div
sti
popf
outsl
ss
out
push
lock
dec
ljmp
inc
sarb
fcomip
mov
in
enter
ret
js
mov
inc
cli
cs
adc
mov
push
pushf
inc
pop
push
mov
out
popf
mov
mov
pop
xor
cli
sarb
mov
push
cltd
mov
rorb
ja
loop
add
pop
adc
inc
faddp
in
mov
or
sub
es
dec
std
mov
loop
jo
xlat
andb
loopne
adc
mov
fsubrl
push
icebp
stc
es
jg
test
xchg
inc
xor
lret
es
iret
sub
or
in
mov
cli
inc
nop
mov
or
sahf
cmpsb
or
aaa
rcrl
and
out
adc
xor
lock
adc
pop
sub
mov
nop
dec
dec
into
and
sbb
push
shlb
popa
push
mov
mov
enter
or
xor
aaa
fucomip
mov
fidivrl
lret
xchg
push
sahf
jb
or
and
ljmp
movsb
sbb
sub
ret
rolb
dec
inc
add
xchg
js
int3
fisttpl
cmpsl
mov
xlat
push
lds
add
out
push
push
in
pop
lock
mov
cmp
cmc
pusha
inc
sub
sub
aad
jae
inc
cli
push
in
notb
xchg
fdivrs
lahf
hlt
mov
jl
cs
dec
sub
cmpsl
scas
mul
and
or
and
cvtps2pd
addr16
enter
and
add
mov
in
adc
or
aam
ljmp
and
loope
outsb
call
mov
psubd
mov
pop
adc
mov
rolb
lock
insb
lock
mov
lock
sti
in
into
in
cmp
sub
push
push
xor
lock
mov
push
jle
cli
stc
push
pop
push
pop
push
sti
xchg
fisttps
shll
cmp
pop
jle
cli
add
mov
and
int3
xlat
cli
lret
aad
idivb
int
rcrb
fcmovne
cmp
adc
in
ret
cmp
mov
jo,pt
jl
or
jecxz
lret
fildll
jp
fdivrs
out
or
add
dec
insl
es
repnz
icebp
jne
fwait
add
ss
mov
cmp
or
int
jecxz
out
sbbb
mov
jmp
jae
adc
add
aaa
fneni(8087
add
repz
sub
out
sbb
cli
incl
fidivrl
jg
mov
sub
cmp
mov
and
or
dec
ds
jle
mov
cltd
sarb
xor
movsl
call
nop
hlt
mov
bound
out
dec
fcmovnu
or
rorb
or
popa
fstps
mov
pop
cmc
cli
stc
ljmp
sub
mov
daa
stc
inc
lahf
je
popf
and
fwait
cmp
out
cli
mov
dec
ret
enter
divb
aas
sar
lahf
cmp
cmp
push
sub
add
pop
fsubr
cmp
mov
adc
loop
pop
adc
aas
or
ret
inc
cmp
sbb
aam
and
aad
push
or
clc
sub
cmp
add
mov
int3
mov
test
aaa
aam
icebp
xchg
shl
pusha
sub
jno
mov
or
mov
mov
xchg
xlat
out
sahf
cmpsl
aaa
ljmp
cmp
das
mov
xlat
sbb
cmp
sub
inc
mov
and
dec
jle
mov
fldcw
fldl
xor
rol
imull
out
rclb
mov
fsubp
daa
mov
dec
cmp
stos
xchg
push
call
mov
mov
or
push
push
xchg
xor
jle
into
js
sub
xchg
lcall
inc
xor
mov
push
mov
std
callw
cmp
loope
mov
cmp
fidivl
add
sub
and
and
jle
cld
inc
inc
sub
icebp
add
daa
negb
neg
loope
lods
pop
jge
mov
xchg
mov
ror
xchg
inc
aad
dec
sbb
mov
rorl
mov
into
into
cmp
fldl
ficoms
mov
js
mov
fistpll
and
test
sub
mov
negb
fisubrs
pusha
mov
mov
or
sub
das
sarb
out
imul
mov
stos
mov
xor
push
xor
add
add
cmp
pop
jecxz
xor
and
and
lcall
sub
jp
es
aas
jno
shrl
add
and
ror
push
lea
fistps
sbb
mov
cltd
out
mov
nop
mov
adc
aad
ret
push
jg
outsb
js
sahf
cli
adc
or
mov
jb
sahf
leave
mov
and
push
inc
int
adc
jb
inc
or
push
dec
rorl
cli
nop
fcmovne
lods
jnp
repz
cmp
sub
jmp
in
imul
mov
iret
sbb
int
sbb
mov
cwtl
test
add
jg
and
sub
idivb
pop
mov
mov
mov
js
iret
lods
sub
dec
mov
cvtdq2ps
jnp
cmp
jp
or
pop
scas
sbb
ja
xor
xchg
lock
xchg
jecxz
insl
push
add
add
mov
jge
jp
mov
mov
dec
fldt
test
jno
in
push
pop
daa
cli
lods
add
dec
and
lret
dec
clc
mov
and
pop
in
loop
cld
test
ss
fildl
dec
xchg
inc
sbb
add
lcall
mov
cmpsb
into
imulb
mov
mov
xor
add
mov
mov
repnz
jae
mov
outsl
fsts
test
sbb
lods
mov
dec
int
inc
mov
and
rorl
mov
mov
xchg
pop
negl
pop
sbb
jmp
xor
mov
mov
mov
push
cmpxchg
xchg
dec
jge
int3
es
jne
xchg
push
shl
sbb
dec
cmp
mov
xchg
into
adc
and
mov
daa
lcall
frstor
jge
adc
push
or
leave
or
push
or
xor
mov
pop
je
sbb
mov
ljmp
jp
add
xchg
sub
pop
jecxz
inc
xorb
test
fcmovne
xchg
loope
divb
jb
adc
js
jle
leave
imul
mov
test
xlat
hlt
mov
or
outsl
sub
mov
jno
jle
neg
cld
ret
add
add
dec
inc
push
test
aaa
add
mov
sbb
mov
sbb
cld
sub
xchg
inc
jnp
cs
ja
add
xor
std
icebp
xchg
test
xchg
leave
add
loop
lret
dec
sbb
jno
xchg
cmp
inc
sub
movl
icebp
mov
aas
pusha
pminub
shll
xchg
call
or
and
lock
cmpsl
mov
xchg
push
ss
jp
dec
adc
dec
sahf
mov
mov
mov
nop
xor
xlat
dec
and
mov
inc
ds
lret
out
cmp
sarb
repnz
add
or
sbb
push
sub
roll
mov
pop
dec
aam
dec
sub
mov
sub
sub
pusha
sub
leave
icebp
xor
and
mov
add
insl
sub
dec
sbb
fldt
push
and
push
jae
loopne
sahf
movl
xchg
jge
jb
jp
shr
loopne
out
and
add
mov
loope
or
leave
and
xchg
fisttps
xor
sbb
mov
add
cmc
das
scas
or
add
icebp
sarl
stos
sahf
adc
mov
loope
pop
aaa
cs
mov
in
arpl
outsl
inc
aad
dec
xlat
pop
lahf
sub
push
iret
fmull
fcompl
xchg
push
aam
or
fdivrl
es
pop
or
xlat
and
aas
mov
mov
in
mov
lcall
or
shlb
xlat
add
inc
iret
sub
mov
jno
pop
imul
es
icebp
push
pop
fidivl
xlat
and
jge
rcrb
dec
out
adc
sub
sbb
push
test
add
mov
sahf
mov
ret
sub
lret
je
sub
mov
mov
inc
cmp
pusha
jp
xchg
leave
imul
adc
ja
cld
fcompl
lret
pop
imulb
push
or
rcrb
push
lret
push
aam
xchg
loopne
dec
jp
enter
adc
imul
fldl
and
out
ret
cmc
pop
shrb
icebp
cmp
mov
iret
or
sbb
stc
movsb
sub
call
adc
inc
roll
xchg
pop
shl
popf
test
in
or
leave
je
andb
sti
jnp
sub
xorl
xchg
cmp
ss
cli
pop
or
cmp
dec
jae
mov
jp
movsl
fwait
out
leave
adc
sbb
push
sbb
adc
popf
push
lret
leave
or
xlat
mov
ja
mov
lret
or
fwait
or
cld
int
enter
imul
mov
pop
ret
je
cli
das
mov
data16
cli
cmp
outsl
inc
push
cltd
dec
icebp
repz
gs
and
test
fs
outsl
sub
dec
call
cs
ss
sbb
std
outsb
mov
loope
add
mov
mov
out
enter
jno
jle
dec
push
add
push
xchg
loopne
fsubrs
cwtl
sub
sbb
and
mov
dec
mov
mov
jl
push
pop
popf
into
pop
aad
or
cmp
dec
push
dec
ret
add
mov
lahf
testl
sbb
mov
and
mov
adc
cmp
jae
push
jae
pop
scas
inc
jne
int
mov
sub
jne
scas
mov
mov
rolb
sti
cltd
out
hlt
fcom
out
aam
scas
lods
sbb
add
mov
dec
and
daa
fsub
cs
nop
push
dec
inc
loop
in
sbb
mov
ds
mov
or
loopne
int
outsb
push
pop
jne
and
mov
imul
les
mov
ret
mov
roll
jno
out
pushf
jl
xchg
add
mov
fsubs
mov
mov
ljmp
ds
add
mov
add
pop
call
push
jmp
push
mov
int3
int3
add
dec
ljmp
xor
mov
out
stos
sbb
push
or
mov
gs
jns
mov
je
inc
mov
enter
sbb
mov
xchg
iret
in
fstpt
xchg
jb
adc
add
jae
inc
inc
jmp
push
xchg
or
pop
xor
icebp
pop
jns
jne
pop
popf
leave
mov
sbb
mov
xor
sti
mov
jl
adc
mov
icebp
pop
inc
fst
cld
lret
jge
fcomps
rorb
or
lds
enter
jle
jns
js
sbb
dec
or
jbe
mov
out
lods
mov
mov
lds
ds
call
stc
or
aas
mov
mov
into
cmp
sar
dec
je
loop
lods
pop
clc
sbb
rcll
or
push
cmp
add
fcom
mov
rcr
lcall
adc
int
pop
movsb
jg
cli
xchg
dec
push
pushf
mov
loop
adc
or
aaa
loope
mov
in
cmp
mov
sub
into
dec
adc
mov
pop
gs
adc
sbbb
mov
rol
inc
ljmp
inc
dec
lods
push
push
outsb
in
mov
lods
ss
es
add
clc
leave
fsubrs
and
mov
loop
int3
jbe
add
mov
push
out
xchg
mov
sub
mov
clc
cmpsb
fists
ret
jle
test
jle
jnp
incb
inc
mov
sub
and
mov
fcoms
mov
or
inc
adc
inc
jl
cmpsl
mov
iret
movsb
cmp
mov
arpl
adc
mov
in
push
add
and
mov
mov
ret
ficoml
push
iret
pop
or
mov
pop
enter
fiaddl
cmp
xchg
je
shrb
fcmovnu
xchg
sub
xchg
fisttpll
adc
pop
int
roll
scas
sbb
cmp
pusha
inc
std
fcomi
mov
jp
adc
mov
cmp
jecxz
lods
jb
adc
xchg
aas
push
push
cli
add
jl
sbb
dec
xchg
lret
dec
adc
jns
repz
cmp
inc
test
sarb
jl
inc
lret
xor
jle
jl
push
loop
sbb
cli
pop
rorb
or
dec
push
ret
adc
dec
cmp
divl
mov
or
imul
sub
jle
push
push
loope
enter
jecxz
adc
mov
add
fdivrl
mov
pushf
or
shlb
xlat
stc
nop
fsubr
push
aam
cmp
mov
lods
mov
xor
mov
stos
jo
lahf
sub
insb
xchg
enter
pop
jge
pop
in
xor
aas
or
mov
dec
aam
ja
leave
stos
mov
adc
iret
push
sahf
es
jl
xor
jo
lret
jnp
mov
inc
push
push
pop
pusha
xlat
scas
insl
in
sar
push
aaa
jmp
sub
jl
or
mov
repnz
outsl
lods
pop
mov
jo
dec
sub
sahf
std
inc
repz
arpl
push
mov
push
sahf
mov
mov
pop
outsb
jp
xadd
or
je
sbb
xlat
mov
mov
xchg
sub
cli
mov
idiv
fisttpl
push
repz
lock
int3
lds
xchg
dec
js
pop
iret
mov
mov
or
xor
or
or
mov
fwait
sub
mov
add
push
jb
pop
stos
pop
lods
fcoms
ret
jb
cltd
and
aam
push
or
inc
stc
xor
mov
mov
adc
js
cmp
frstor
cmpsl
in
mov
lahf
mov
jno
push
sub
pop
push
pop
mov
lret
pushf
push
repz
jecxz
inc
movb
sbb
mov
or
push
add
add
or
sub
mov
jmp
jecxz
sarl
leave
mov
ss
add
mov
push
ds
mov
sbbl
xlat
rcrb
jmp
mov
rol
mov
mov
cmp
fisubl
inc
loope
scas
test
inc
sbb
out
std
mov
push
leave
jl
mov
mov
enter
sbb
sahf
test
or
sahf
mov
add
sub
bound
cmc
mov
push
stc
rorl
fidivl
mov
jns
enter
or
js
inc
scas
ja
jbe
faddl
scas
pop
mov
mov
test
add
insl
push
xchg
js
shll
lret
iret
mov
fidivrs
mov
pop
lods
push
mov
ret
cmp
push
leave
js
test
or
int3
adc
shl
adc
mov
pop
cmpsl
and
call
cmp
aas
es
rcrb
ds
dec
jmp
fisubs
xchg
jae
dec
andb
sub
ficompl
lret
rol
loopne
dec
enter
cs
ret
or
dec
das
movsb
cmpsb
push
inc
fsqrt
mov
aam
jb
add
movsb
xchg
add
icebp
adc
mov
fldl
push
or
jmp
aaa
sti
imul
mov
ret
pavgb
cmp
sbb
and
movb
adc
flds
dec
xchg
lahf
push
loopne
adc
decb
cmp
test
xor
add
cmp
outsb
shlb
lcall
lds
xlat
lret
mov
es
sub
cld
scas
fdivrs
repnz
scas
sahf
xlat
popf
lret
faddl
dec
mov
lcall
mov
xchg
dec
iret
repnz
inc
hlt
or
cmp
mov
movb
mov
cmp
push
lods
and
ror
in
gs
ficoms
adc
mov
rorl
js
adc
call
lcall
jmp
mov
fidivs
cmpsl
push
js
mov
ljmp
sbb
lods
clc
fdivr
pop
mov
sub
fisttps
outsl
lret
sub
clc
jle
cmp
add
das
into
shrl
iret
fimull
rol
rcrl
jb
loop
jge,pt
cld
add
cmc
pusha
fcmovb
adc
xchg
aam
xor
clc
aam
into
daa
pop
jmp
leave
inc
add
cmp
xor
mov
in
dec
mov
lods
xchg
mov
xor
push
jns
mov
mov
popf
xchg
sbb
mov
sti
mov
xchg
xor
lods
cmpsl
sbb
xchg
sbb
mov
xchg
add
scas
int3
loope
into
jo
in
dec
push
insb
add
decb
testb
cmc
mov
sub
sbb
and
rol
into
xchg
loope
xor
adc
xchg
bound
jns
enter
dec
adc
int3
int3
frstor
mov
int
jge
xchg
orb
gs
mov
xor
xchg
sub
cmp
mov
jecxz
cmpsb
cs
jle
adc
scas
daa
js
mov
push
loop
jge
fldcw
ss
sahf
dec
lea
lds
aaa
adc
and
loopne
fdivp
stc
add
xor
insl
pusha
pop
mov
dec
test
pcmpgtb
dec
add
iret
xor
insl
adc
arpl
in
xor
leave
push
sub
mov
jo
xlat
add
jns
test
inc
lds
ja
jecxz
add
cld
jnp
frstor
out
ljmp
adc
jg
addr16
jp
jmp
rcrb
mov
add
sub
xchg
cld
std
fstp
jmp
in
repnz
jmp
sbb
lods
lret
dec
fcmovnu
rorl
xchg
leave
pop
gs
sbb
jne
stos
mov
lods
sub
jb
mov
out
idivl
stos
mov
dec
int3
lret
and
and
stos
push
sbb
ret
lods
stos
pushl
lret
cmpsl
sub
loope
cli
enter
dec
push
in
loope
incb
mov
clc
cmpsb
lds
add
mov
and
cld
in
inc
iret
xlat
dec
xlat
ljmp
push
icebp
dec
xor
push
ret
lret
icebp
cmpsb
rolb
testl
mov
jno
ds
testb
ret
cmp
mov
lds
lcall
cli
fldenv
sub
imul
fstpl
xlat
das
mov
es
mov
xchg
inc
rol
cld
push
in
lret
mov
or
add
jmp
out
js
outsb
dec
stc
into
cmpsl
sub
lds
into
push
daa
mov
hlt
paddb
xchg
mov
mov
repnz
cld
adc
xlat
pop
adc
xchg
int
and
or
or
dec
pop
in
cmpsb
mov
sub
cld
mov
add
cmc
jl
and
aad
push
jge
jle
in
mov
cli
jl
rclb
sub
mov
and
pop
dec
aaa
roll
push
fnstenv
icebp
leave
and
inc
pop
repnz
mov
sub
push
popf
pop
loopne
fdivr
std
iret
dec
loopne
pop
ja
ffree
js
push
mov
and
fildll
fistpl
ljmp
adc
mov
fnsetpm(287
lock
js
sti
in
mulb
mov
inc
mov
clc
xchg
lahf
jle
insb
push
out
out
mov
out
test
lea
add
or
int
fcomps
jne
xlat
mov
dec
push
mov
and
sub
push
or
pop
xor
fstpl
inc
mov
lret
mov
call
ds
mov
fbld
jle
aas
mov
ss
mov
inc
cmp
cmp
popa
call
les
mov
jo
stos
mov
ds
clc
icebp
mov
adc
sbb
inc
rorb
push
subb
sub
cwtl
dec
jp
mov
ficomps
dec
in
mov
push
rorl
mov
cmp
lcall
jb
mov
add
jle
ret
push
sub
inc
xlat
pop
mov
hlt
clc
fstl
cmp
in
or
stc
mov
movsb
jp
std
inc
ret
sahf
loopne
mov
int
add
mov
popa
dec
stc
mov
dec
mov
scas
sub
mov
nop
dec
pusha
push
sbb
dec
test
jge
dec
mov
adc
xchg
pop
stos
in
lret
fisubrl
movl
into
in
mov
mov
mov
outsb
fisttpll
fcompl
repz
ret
xchg
mov
fstpl
and
stos
sbb
mov
test
mov
add
mov
sbb
sbb
es
lods
cmpsl
push
into
fsubp
es
add
push
lods
out
cmp
fsubrs
fistpl
cwtl
rol
orb
ret
jne
and
xor
das
popa
ljmp
mov
fs
loop
movsb
sub
pop
or
inc
mov
fmuls
mov
xor
fcomps
jecxz
call
add
jns
sahf
sti
outsb
mov
sub
lcall
sbb
ret
add
hlt
pop
mov
add
cwtl
or
rcll
dec
inc
fstps
mov
enter
flds
xor
test
imul
add
mov
repnz
dec
cli
adc
dec
or
or
sbb
push
pusha
sarb
pop
loope
xchg
addr16
adc
lock
dec
or
movsl
jb
dec
inc
clc
add
sahf
stc
add
sbb
sub
sub
outsl
scas
orl
xor
loope
push
pop
clc
repnz
sbb
cmpl
inc
jmp
xor
adc
or
daa
int3
daa
add
pop
and
adc
shrb
xchg
and
sahf
push
pop
pop
out
jl
xchg
dec
push
out
sbbl
lods
lock
stos
jecxz
mov
dec
sti
and
fisttpl
movsb
hlt
imul
inc
jl
in
les
leave
add
add
adc
add
das
and
jno
outsl
cmc
pop
dec
mov
nop
dec
cld
test
push
out
rolb
hlt
jge
fstl
lret
jmp
sbb
adc
aad
outsb
inc
lret
scas
and
mov
mov
cmpl
ja
arpl
mov
into
inc
and
imul
lcall
jmp
cmpsl
mov
mov
icebp
mov
or
pop
add
les
xor
out
or
xor
ret
fcomps
divb
lds
es
add
xor
mov
sbb
jne
sbb
lods
in
lods
push
pop
popf
sbb
jp
add
cmp
iret
cli
pop
lret
cmp
fcoms
push
and
adc
dec
add
aad
test
sahf
sbb
xchg
mov
inc
jle
inc
incl
jecxz
ss
sahf
dec
lods
push
lret
xor
lods
scas
cmp
gs
psubb
xor
mov
pop
ret
dec
or
std
jae
xor
sahf
pop
mov
fiaddl
jl
loopne
mov
inc
sub
dec
hlt
xchg
icebp
jb
inc
idivb
sbb
xchg
in
pop
std
fldl
test
mov
mov
cmp
add
fs
jp
mov
mov
jnp
mov
xchg
xor
icebp
add
das
test
jne
sub
adc
fwait
xchg
and
pop
adc
xlat
sbb
push
enter
fucom
xor
stos
sarb
mov
push
mov
sbb
push
or
xor
or
hlt
push
jmp
in
xchg
in
adc
rcr
inc
fadd
sbb
fdivr
call
dec
test
mov
cli
cmpsb
stos
cmp
dec
adc
stos
mov
mov
cmp
addb
mov
sbb
push
xchg
decl
push
push
dec
ljmp
rcll
insl
or
in
push
fdivrp
aas
subb
das
add
sub
adc
mov
add
inc
cmp
aad
ljmp
inc
jno
lock
mov
ret
cmp
call
test
or
jb
cmp
das
addl
xor
or
jno
pushf
sub
or
mov
dec
ret
bnd
and
jo
stc
pop
mov
push
and
jnp
movsl
mov
test
cmp
jb
xchg
jb
jmp
movsb
mov
lahf
es
cmpsb
lock
scas
cmp
lret
adc
outsb
andb
shl
mov
mov
stc
loop
imulb
add
incb
jecxz
adc
lret
test
insl
int3
pmulhuw
inc
out
mov
dec
cmp
xor
jle
fbld
dec
pop
mov
add
inc
mulb
mov
ret
push
cmp
mov
fmul
mov
lock
push
and
rorl
mov
call
jp
mov
icebp
cmpsl
or
aas
pop
mov
call
sub
or
mov
xchg
xchg
adc
sarl
nop
mov
cld
in
xor
loop
sbb
push
add
push
iret
push
or
push
sbb
cli
xlat
push
pop
out
in
fiadds
ror
aaa
xchg
cmp
in
inc
jp
aas
push
icebp
pusha
cmp
jb
jns
sub
lret
mov
leave
push
mov
pop
in
repz
cwtl
clc
stc
cmc
push
and
push
and
scas
push
or
int
mov
leave
jcxz
ret
dec
jl
push
jb
mov
jne
cli
mov
subl
adc
das
stc
xchg
aas
test
mov
fdivrp
lahf
cs
sub
gs
jle
sbb
push
push
mov
popa
test
dec
mov
xchg
and
inc
adc
enter
ljmp
shlb
addb
iret
inc
mov
pop
sahf
test
std
jo
stc
nop
xchg
sbb
stos
sub
clc
mov
cs
rcrl
xorps
mov
sub
push
mov
out
lret
mov
enter
push
fs
int3
bound
dec
mov
or
mov
pop
fcompl
dec
mov
or
mov
scas
clc
mov
sub
cmp
movsl
jle
or
push
shl
xchg
popf
lock
cmpsb
testb
jb
sbb
dec
jmp
jmp
xchg
cmp
mov
in
negb
mov
push
cwtl
xor
sub
cmp
and
call
and
sub
jne
cmp
das
loopne
pop
pop
sar
inc
popa
sbb
dec
jecxz
jg
adc
pop
sbb
jmp
jg
repnz
aad
in
nop
stc
push
cmp
out
fsub
pop
sbb
dec
sub
iret
adc
pop
enter
add
movsb
cmp
xor
nop
dec
cmp
sub
int3
sahf
ret
jecxz
gs
lock
cmp
mov
xor
or
and
dec
insl
cwtl
mov
popf
pop
insl
sub
or
test
pop
and
jg
jae,pn
pop
bound
xlat
cmp
add
jae
jb
jl
cltd
mov
cli
pop
bound
sahf
cli
xchg
idivb
lods
push
out
sarl
jo
cmc
jle
sbb
inc
mov
icebp
push
pop
enter
push
or
outsl
enter
lcall
dec
mov
loop
fildl
into
inc
ret
cmp
mov
mov
out
or
and
push
jecxz
stos
pop
push
pop
mov
jnp
pop
out
lret
adc
adc
lods
cmp
lds
dec
neg
jns
loop
clc
mov
pop
testl
mov
xor
loope
les
das
mov
call
repnz
xchg
repz
call
lret
xor
repz
or
xor
push
lret
out
popa
inc
inc
das
repz
rcl
adc
loop
push
lret
leave
aaa
add
rclb
lea
dec
cmp
mov
leave
jno
ret
jmp
xlat
or
ret
lcall
ret
mov
pop
adc
sbb
das
jp
mov
sahf
push
out
push
xor
movsl
jbe
aad
aam
mov
xlat
cmp
pusha
cmp
or
shl
mov
test
jle
sbb
xor
out
mov
sub
xchg
mov
fdiv
cli
lea
stc
dec
test
jecxz
jnp
push
mov
sub
push
inc
scas
out
pop
ret
shll
pop
in
mov
shll
int3
scas
mov
mulb
mov
lret
test
cmp
aam
add
fistps
jb
ss
push
xor
sbb
mov
or
pop
or
pop
data16
out
lcall
ds
shlb
push
sub
adc
mov
aas
rclb
xchg
and
out
push
clc
in
pushf
sbb
cld
clc
sub
dec
xlat
dec
pop
sub
sub
cmp
xchg
lds
movsl
push
repz
inc
out
sub
test
out
addr16
sub
call
iret
in
pushf
mov
aam
repnz
jl
ss
insl
jnp
fdivl
out
push
loop
cmp
push
jno
xchg
jns
adc
aad
into
movsl
xor
mov
jae
jmp
or
inc
mov
adc
cmp
es
ret
jl
add
leave
sub
mov
push
jmp
pop
add
mov
jl
enter
xchg
outsb
aam
inc
icebp
jo
addb
mov
sub
xlat
testl
sub
xor
sahf
xor
mov
es
dec
fwait
das
mov
aaa
jp
mov
adc
leave
or
ds
adc
ljmp
mov
xchg
clc
ljmp
push
or
stos
in
int
sarb
inc
in
aam
int
sbb
outsb
test
xor
fsubs
sub
push
iret
cmp
hlt
aas
cmp
aas
jl
pop
insl
ret
hlt
rol
shlb
imul
add
pop
sbb
loopne
mov
push
pop
lods
mov
lea
mov
xor
and
lock
add
dec
outsl
call
xchg
or
clc
inc
adc
adc
repnz
int3
push
data16
pop
sbb
pop
jl
ss
movd
cmp
data16
stos
and
fcmovnbe
or
push
ljmp
sahf
fstpl
cli
aam
sbb
lcall
xor
popa
add
xchg
aad
lds
sbb
add
xchg
sub
sub
fcmovne
in
cs
stos
xor
cmpsb
dec
mov
subl
hlt
xchg
mov
out
icebp
imul
repz
lock
scas
ds
movsl
daa
push
cli
ret
sub
xchg
adc
push
pop
jle
jmp
and
jno
mov
mov
stos
xchg
enter
push
mov
aas
ja
inc
xchg
stc
dec
mov
xor
aas
xor
insl
ja
sbb
pop
push
mov
pop
mov
add
or
lods
add
aam
movsb
clc
dec
inc
xor
out
enter
xchg
enter
rol
shrb
xlat
jp
jp
call
iret
out
jbe
or
mov
mov
pop
adc
adc
mov
jmp
add
xor
lds
imul
sbb
call
out
dec
call
jns
inc
repnz
rcrb
inc
pop
into
stos
jg
je
lcall
add
and
ret
dec
pop
into
int3
lods
scas
mov
cmp
pusha
ffreep
mov
sahf
or
add
ljmp
add
sub
lds
pop
lret
fmull
jmp
cmpsl
loope
fdivl
fiaddl
push
test
mov
sarl
jo
mov
push
dec
sbb
lret
les
adc
in
loope
lds
pop
sahf
push
sbb
stos
es
and
cmp
ss
fadd
xchg
cmp
xchg
sub
ret
jbe
jg
inc
mov
add
push
and
dec
jne
lcall
mov
dec
lahf
cld
mov
fstps
ljmp
out
dec
cmc
rorl
cwtl
cmpsb
fnstsw
popa
adc
cmp
insb
loope
repnz
shrb
mov
xchg
pop
xchg
test
loope
stos
test
incb
loopne
into
mov
sub
jo
pop
flds
jbe
call
scas
inc
lret
mov
and
lods
sti
cmp
cmpsb
mov
xchg
dec
iret
sbb
adc
pop
fdivrs
fbld
cmpsb
mov
mov
fbstp
das
mov
xor
or
rcl
es
xlat
cmc
lcall
jmp
jno
and
mov
loope
inc
shrb
mov
hlt
jg
or
daa
jle
add
rorb
sub
dec
sbb
fnstcw
sbb
xchg
xchg
inc
lahf
sbb
cmp
sbb
fistpll
mov
jmp
rclb
jnp
aad
or
ret
push
jmp
jae
pop
scas
shlb
push
xchg
inc
fistl
fadds
int3
cmp
cs
lretw
or
das
imul
in
sahf
jo
icebp
ret
fildll
in
xchg
sub
push
rorl
push
mov
sahf
lret
mov
dec
jne
sub
jecxz
loopne
or
adc
pop
push
xlat
mov
push
stc
adc
insl
call
add
jp
push
sti
pop
icebp
push
cs
lods
mov
icebp
mov
xchg
xchg
in
and
xor
or
in
rolb
dec
add
add
pop
dec
and
adc
mov
daa
xchg
mov
clc
imul
ljmp
dec
pop
rcr
add
lret
ss
call
dec
xor
cmpb
aas
add
iret
lods
int3
jb
fsub
sbb
inc
mov
data16
in
add
ficompl
mov
pop
mov
mov
push
aam
and
jmp
xor
ficomps
push
sub
ss
pop
loopne
ret
ret
fdivrs
inc
mov
in
or
inc
adc
push
sahf
jae
mov
mov
int
imul
dec
push
movsl
not
mov
sbb
fwait
mov
inc
cs
adc
adc
inc
mov
lea
jbe
loop
cmp
cli
pop
loop
jno
push
stos
jg
and
out
xchg
cli
sub
inc
jnp
cmpsb
sarl
adc
repnz
push
add
and
imul
add
xchg
cmp
aad
mov
pop
dec
or
push
push
ja
pop
xchg
mov
icebp
jp
fiaddl
mov
jg
sahf
mov
fs
leave
mov
pushf
roll
outsb
rcll
sbb
sbb
rol
mov
push
jns
pop
xchg
dec
mov
mov
mov
scas
push
cmpsb
pop
loope
enter
xchg
xor
out
aaa
pop
fs
iret
mov
dec
add
pop
addr16
cmpsb
fldl
sahf
test
movd
inc
loopne
int
cmp
xlat
cld
mov
ret
ret
cmp
stos
int3
rorl
jle
xor
pushf
fisubs
xlat
push
ret
or
insl
rorb
jo
clc
loope
in
stos
ds
lock
push
inc
mov
and
rol
rcrl
ret
ret
enter
xchg
outsb
mov
das
push
mov
int
sahf
hlt
aas
pop
cwtl
sub
lret
fsubrp
mov
enter
dec
aas
clc
sbb
subb
push
lods
lret
sahf
push
xchg
pop
dec
outsb
in
in
mov
icebp
or
enter
arpl
shlb
adc
jno
ds
leave
call
adc
cld
add
mov
cmp
out
sahf
mov
int
daa
pusha
xor
mov
in
rcr
push
xchg
scas
sbb
rep
stos
sbb
dec
jb
lods
in
cmc
push
cmp
sahf
push
dec
ds
cmp
jnp
ret
push
push
fisttpl
enter
jmp
ljmp
sbb
mov
loopne
roll
test
mov
andb
icebp
enter
dec
repnz
xor
pop
shrb
push
jge
adc
ret
les
stos
mov
popa
sub
push
shlb
ret
jp
mov
jb
mov
lret
into
push
js
push
and
pop
test
cs
leave
jne
mov
sbb
mov
mov
je
clc
cmp
movsb
sarb
mov
leave
cmp
xor
rol
push
mov
negl
in
movsl
inc
loope
jl
inc
sahf
mov
and
add
dec
les
adc
popf
mov
xchg
inc
mov
pop
cld
jle
int
fisubrl
bound
inc
int
psrlq
mov
pop
pop
std
fmull
cltd
push
lret
mov
out
movsl
pop
les
idiv
add
stc
add
fld
test
cmp
sub
mov
dec
mov
rclb
fists
dec
std
ret
cmc
jp
xlat
xchg
jmp
sbb
dec
push
pop
enter
mov
mov
cmp
inc
cmp
add
jbe
cmp
es
jle
jmp
aaa
aam
push
ss
std
out
int3
pop
stos
jecxz
mov
out
inc
lret
jae
mov
addr16
enter
enter
cmp
aad
mov
dec
lea
idiv
adc
mov
mov
cwtl
shlb
test
push
fcomps
repz
mov
arpl
xchg
lods
push
stc
es
push
js
cmp
xor
cld
jg
rolb
ds
pop
ds
neg
outsb
cli
xchg
add
mov
cmp
leave
jne
add
mov
lret
lock
jmp
ret
sahf
lcall
decl
sahf
cwtl
mov
mov
push
scas
leave
pop
jge
inc
xchg
addb
std
push
fbstp
xlat
xor
movb
fcompl
std
lret
decb
js
mov
mov
movl
ret
jecxz
in
inc
cli
loope
decl
aaa
fsubrs
or
out
cmp
test
sti
movsb
inc
aam
les
mov
ret
cltd
fbld
in
sbb
or
or
int3
sahf
out
cwtl
inc
fdivrs
mov
outsl
arpl
push
cli
sub
je
cld
sub
or
adc
mov
lods
repnz
inc
test
lret
psubusw
mov
inc
mov
and
insl
lods
jbe
or
aad
popf
out
adcl
pop
test
mov
pop
add
out
pop
mov
mov
stc
sar
ret
mov
cmp
mov
pop
xor
mov
ds
arpl
mov
aas
into
cmp
jne
xor
mov
mov
js
or
cltd
adc
es
pop
shll
push
ljmp
scas
bound
sahf
xlat
pop
mull
mov
push
mov
ret
out
int3
cmp
loope
mov
and
loopne
inc
mov
push
in
mov
ds
mov
pop
or
outsb
idivb
leave
shlb
mov
push
xlat
inc
enter
mov
mov
cmpsl
icebp
leave
jno
addr16
sbb
add
cmpl
push
cmp
out
mov
popf
nop
int
icebp
andl
ret
popf
add
pop
in
cmpsb
data16
mov
sub
sbb
call
or
pop
test
repnz
ficoms
clc
faddp
ffreep
orb
mov
mov
push
mov
mov
xchg
pushl
or
or
mov
mov
dec
or
int3
push
rcrb
or
fildl
fsubrp
clc
loop
xor
int3
push
cs
pop
cld
adc
es
adc
push
pushf
ret
jle
outsl
insl
sub
jl
jmp
adc
iret
mov
cld
or
fadds
out
mov
sbb
xchg
popf
es
dec
mov
lahf
mov
xchg
cmpsb
cmp
aas
je
iret
pop
xor
and
in
fdivrp
loopne
into
sub
leave
xor
scas
xlat
jmp
sahf
mov
sbb
fstpt
inc
lahf
cmp
mov
outsb
aaa
sub
push
loop
mov
cli
aaa
fcmovnbe
in
cwtl
aas
lea
mov
sti
pop
sbb
xchg
lahf
cmp
lahf
gs
ret
pop
ret
mov
lods
dec
leave
fdivrs
inc
inc
dec
sbb
inc
cmpsb
xlat
mov
out
sbb
jecxz
in
icebp
negl
cmpsl
ljmp
xchg
xor
ljmp
mov
lahf
xor
pop
int3
mov
xchg
mov
popa
fcomp
lds
xor
cli
lret
cmp
sub
loopne
cmp
dec
mov
lret
cmpsl
add
jo
adc
sub
shll
fcomp
and
jmp
xor
xchg
scas
mov
xlat
cld
ret
xchg
fs
or
into
or
mov
stos
insl
cmpsl
mov
loop
int3
xchg
mov
ret
pusha
frstor
loopne
mov
inc
fisubl
mov
and
fnstsw
and
stos
mov
mov
test
das
js
xorb
std
lret
sahf
icebp
fidivl
inc
std
mov
dec
mov
jb
int3
xchg
push
adc
adc
cmp
cmp
or
mov
xor
mov
xchg
fbstp
sub
mov
cs
lret
add
push
jmp
pop
shlb
mov
shr
enter
mov
mov
sbb
shr
pop
mov
lahf
sbb
shl
int
movsb
xor
sbb
xor
dec
mov
sub
sbb
mul
xchg
fstp
repnz
mov
push
jnp
xchg
sahf
sbb
enter
lahf
mov
dec
mov
fcmovnbe
fmull
mov
out
push
push
cwtl
fbstp
outsb
mov
outsb
mov
push
mov
add
xchg
cli
loopne
fidivrs
push
or
xor
divl
daa
add
bound
call
or
sbb
out
iret
adc
dec
and
push
xlat
flds
inc
jge
lret
xlat
les
cmp
out
leave
or
test
sbb
mov
dec
mov
nop
mov
testb
cmp
or
jno
xor
or
mov
stos
incb
cli
cmp
sub
fcom
fadd
sub
add
lock
ljmp
into
sahf
sahf
int3
pop
adc
xchg
sbb
call
iret
cmc
jp
iret
sarb
rorl
add
dec
in
inc
pop
add
fidivrl
fimull
mov
imul
fistl
lock
lret
or
lcall
add
push
jae
popa
sub
mov
inc
fs
bound
add
mov
test
dec
pop
xlat
add
dec
pop
push
push
mov
arpl
aad
pushf
mov
sub
data16
repz
add
loopne
mov
cld
inc
loopne
leave
pop
adc
mov
jno
sahf
mov
arpl
std
pusha
xchg
iret
lods
mov
test
jl
div
aaa
mov
lret
mov
dec
xor
push
das
lock
adc
mov
out
push
xor
ffree
jmp
dec
xor
jnp
mov
sahf
cmc
addr16
loope
mov
or
sbb
shll
sbb
inc
int3
out
call
pop
inc
inc
ljmp
cmp
fwait
sub
mov
xchg
push
inc
adc
enter
mov
adc
cmp
lahf
mov
subb
lds
mov
les
outsl
rclb
mov
out
pop
out
movsl
movsb
fimull
out
into
cmp
mov
jge
ror
fbld
push
int
mov
push
adc
int
fisubrs
jns
fisubrl
mov
mov
mov
rcrb
pop
or
scas
pop
xchg
dec
xor
repnz
inc
jmp
mov
subl
test
xchg
into
mov
dec
or
jle
ret
mov
stos
mov
jns
dec
push
xchg
aas
or
imul
adc
mov
lods
fdivrl
xor
dec
xor
cld
dec
sub
repz
popa
inc
sbb
cmp
sub
adc
fucomi
jmp
aad
dec
push
mov
imul
loope
xor
rcr
inc
ret
xchg
inc
adc
mov
sbb
mov
push
push
gs
movsl
cmpsb
dec
xlat
add
mov
repz
js
imulb
pop
cwtl
into
cmp
clc
mov
add
xchg
dec
sub
and
push
enter
pusha
pop
mov
cmp
mov
xor
fcmovne
lods
xchg
daa
or
mov
mov
mov
or
cld
mov
cltd
and
pop
lret
cmp
cli
push
movb
add
je
test
ss
movsb
jno
sbb
sbb
or
add
pop
inc
jg
mov
mov
repnz
lock
rolb
inc
lret
idivb
xchg
sbb
loope
pushf
outsl
imul
out
flds
mov
pop
clc
inc
addr16
jae
adc
nop
mov
adc
mov
fcmovbe
fcomps
mov
sub
xchg
add
mov
or
mov
cmpsl
cmp
adc
testb
ffreep
fcoms
sub
lods
in
xor
daa
fldl
mul
mov
out
ljmp
add
into
popa
or
lret
out
js
jl
pop
add
xor
lret
jle
adc
dec
push
jb
dec
enter
or
sub
out
test
ss
sbb
sbb
and
call
add
xor
bound
jg
cld
lock
xlat
adc
cmp
adc
mov
pop
scas
icebp
lea
xor
dec
mov
or
mov
out
mov
mov
lods
mov
lahf
mov
push
mov
mov
push
scas
in
mov
in
dec
mov
adc
stos
adc
sbb
sbb
fyl2x
or
aam
orl
aas
xchg
mov
adc
pop
repz
sbb
and
imul
imul
mov
jne
test
xchg
lock
mov
adc
pop
mov
mov
jl
xchg
or
aaa
or
repz
sub
xor
sahf
push
push
pop
out
dec
mov
cmp
add
sbb
jae
mov
pop
test
clc
and
mov
sub
fucomp
data16
jns
data16
mov
jne
repnz
pop
lret
lretw
decb
mov
add
lds
xor
ss
outsb
lock
add
cli
popa
mov
add
std
jecxz
push
sahf
xchg
pop
mov
lds
daa
mov
cmp
sti
daa
cmpsb
loope
and
or
push
mov
lahf
enter
sub
aaa
cs
mov
lds
int3
and
mov
mov
dec
pop
imulb
xor
cmp
jl
pushf
mov
xor
mov
mov
push
mov
inc
scas
push
jge
xchg
outsl
loop
adc
in
add
pop
stc
mov
lret
mov
repz
cld
mov
out
or
aas
test
into
mov
push
lods
sbb
lcall
jp
mov
mov
ret
or
and
add
xor
data16
andl
enter
inc
or
test
repz
aaa
mov
inc
dec
daa
cmpsb
hlt
push
dec
je
popa
xlat
jecxz
pusha
out
dec
xor
aas
mov
xchg
fimull
fdivrs
lret
sub
inc
adc
adc
lcall
aad
and
lret
stos
icebp
jl
sub
mov
call
fcompl
dec
jge
push
rcll
pop
sub
roll
shll
xchg
mov
enter
cwtl
clc
cmp
inc
test
imul
push
int3
lahf
in
js
pop
jne
sahf
out
into
mov
pop
shll
dec
xor
bound
sarb
neg
dec
sub
arpl
fnstenv
cmp
push
mov
fwait
sub
adc
lret
fidivl
mov
cmp
sarb
push
mov
xchg
sahf
into
adc
push
or
out
dec
pop
movsl
push
aad
inc
add
xor
and
or
push
fistl
decl
adc
in
popf
cmp
leave
dec
jne
mov
and
es
push
dec
mov
xlat
ja
pop
mov
mov
mov
dec
ja
xchg
test
movsb
inc
ficoml
jg
in
call
adc
outsb
stc
ret
jo
mov
jno
test
sbb
inc
dec
fisubl
fsubr
push
mov
iret
les
cmpb
fsubrs
jl
sbb
loop
push
sahf
stos
scas
xor
mov
cmp
dec
addr16
mov
scas
push
dec
cld
pop
ficomps
clc
mov
stc
lods
pop
lods
mov
clc
aam
sbb
mov
ret
mov
lret
xchg
dec
rorl
adc
adc
xchg
jle
pop
enter
add
pop
pop
jne
das
adc
jge
and
jae
dec
loop
jecxz
push
cld
sahf
fidivl
int3
lret
sbb
ret
jge
outsb
fidivs
sub
pop
mov
mov
and
jp
push
add
mov
scas
push
outsl
lea
jp
add
loope
adc
test
push
mov
cmpsb
leave
popl
mov
add
in
lock
clc
aas
out
xlat
xchg
and
lods
in
rolb
hlt
insl
js
insl
fucomip
inc
cli
push
bound
mov
rol
aam
fadds
push
add
ficoml
mov
push
iret
add
in
test
mov
inc
rolb
mov
add
cltd
mov
dec
pop
inc
cmp
push
shrb
mov
inc
jns
sahf
clc
fs
sub
daa
mov
cmp
flds
dec
inc
sbb
cmp
ret
pop
jecxz
loop
push
jp
in
in
psrad
xorb
sbb
or
test
aas
fwait
add
mov
or
ret
cli
js
mov
push
addl
out
mov
jecxz
mov
outsl
sub
sub
inc
adc
add
mov
mov
aad
jo
pop
push
inc
mov
lret
js
ja
jne
pop
push
xor
ja
pusha
int3
pop
cli
cld
xchg
notl
scas
icebp
sub
cmp
push
ret
mov
push
mov
inc
sbb
fistl
add
iret
cmp
es
dec
ljmp
sbb
cwtl
test
iret
out
rolb
or
shrl
mov
test
jnp
push
aad
loope
mov
stos
sbb
xchg
pop
mov
in
loope
sbb
sbb
add
decl
negl
dec
in
xorl
clc
fldenv
mov
test
adc
jp
sub
cmp
fisttps
sbb
test
jecxz
push
mov
outsb
std
mov
pop
rcrb
adc
shlb
addb
xor
mov
xlat
les
stos
inc
notb
subb
sbb
mov
lcall
aad
mov
imul
fwait
les
and
fistl
mov
mov
mov
lret
inc
lret
adc
jnp
inc
mov
adc
inc
dec
inc
lret
idivl
aas
sub
std
jle
scas
rcr
push
ds
clc
ss
add
dec
mov
mov
pop
pop
notb
push
dec
lock
pop
sub
scas
js
cmp
mov
mov
push
add
pop
pop
cmp
mov
rcll
inc
leave
cmc
mov
cmp
imul
add
dec
into
stos
mov
add
xor
xor
loop
int
push
jle
lds
stos
push
movsb
cmpsb
cmp
or
sbb
insl
dec
ljmp
movsb
scas
mov
out
fdivl
mov
adc
pop
scas
and
sub
fildl
pusha
jg
in
pop
aam
out
sbb
mov
xchg
jbe
lahf
cmp
push
and
inc
jl
pop
aaa
aaa
jae
je
jne
mov
mov
test
inc
popf
jmp
add
imul
sub
cs
sbb
ficompl
orb
test
stos
sbb
popf
mov
movsb
subb
xchg
mov
ljmp
add
fcomp
jne
inc
sar
pop
dec
dec
jbe
add
xchg
xor
xchg
mov
add
fistpl
decl
xor
es
into
cmpsl
scas
test
faddl
clc
outsb
jp
lods
inc
enter
pop
aam
leave
loope
cs
icebp
add
jae
in
mov
ds
mov
mov
inc
leave
mov
fdivrs
xor
repnz
fsubr
leave
dec
andl
and
enter
cmp
lods
lcall
enter
jle
enter
push
movsl
scas
cmp
mov
push
ljmp
daa
test
lcall
data16
scas
cmp
jl
sbb
movsb
pop
inc
in
adc
mov
ret
mov
adc
xchg
dec
fcmovb
mov
cmpsb
or
cmp
mov
cwtl
adc
inc
xor
push
das
cmp
in
ret
clc
push
outsl
mov
test
lods
xchg
ja
lock
sub
xchg
shl
mov
mov
aaa
cmp
dec
roll
mov
xor
icebp
andl
int
fisttpl
mov
mov
jg
pop
or
fisttpl
adc
mov
sub
jg
xor
push
cmp
push
jnp
mov
clc
mov
sbb
jmp
mov
stos
cmp
mov
push
add
push
out
xchg
dec
les
int3
xchg
cmp
jge
ljmp
fmull
sbb
jp,pt
out
inc
jecxz
push
cltd
push
ret
pop
jne
js
sub
adc
repnz
sarl
clc
rcrl
mov
loop
xor
inc
sbb
int
mov
mov
dec
enter
or
sbb
leave
fadd
fcmove
outsb
iret
xor
out
push
mulb
ss
imul
mov
ss
pop
inc
jae
pusha
int3
daa
lcall
push
or
adc
into
lock
cmp
rcl
inc
cli
shlb
fidivrs
imull
fnsave
sub
mov
mov
jbe
push
mov
jns
mov
adc
jle
fidivrs
leave
add
rcrl
ds
aas
leave
cmp
sahf
in
inc
lahf
push
stos
pop
pop
and
enter
fcmovu
cmp
mov
cmp
mov
pop
push
and
jle
cli
sub
int3
mov
mov
cmp
gs
cld
shlb
movups
lcall
popa
dec
dec
jmp
sub
xchg
mov
lret
or
add
lret
popa
sbb
mov
test
mov
wbinvd
sub
dec
stos
leave
cmp
push
mov
mov
and
sbb
mov
arpl
pop
aas
xchg
aaa
jge
test
loopne
loop
and
les
adc
xchg
inc
mov
dec
cmpsl
lock
shll
cli
dec
pop
mov
pop
and
jmp
sahf
js
mov
test
cmpsb
loopne
cmp
cmpsl
mov
sub
fildl
mov
into
cmpsb
sahf
xchg
mov
pop
cld
jb
hlt
add
mov
aad
cwtl
xchg
cmp
mov
xchg
ljmp
inc
stos
loope
xchg
outsl
mov
cli
push
dec
lods
enter
push
test
shlb
loop
mov
xor
jge
dec
push
fcoms
lcall
sbb
clc
push
shlb
es
xor
inc
cmpsb
sahf
mov
imul
adc
add
sahf
das
add
cltd
lahf
inc
lcall
mov
xchg
jns
pop
fisubrl
xchg
int
push
loop,pt
pop
in
int
movb
xchg
popa
sub
sub
sahf
cmpsb
bound
int3
fdivr
mov
icebp
out
ja
test
sbbb
push
xor
lods
dec
cmp
leave
push
scas
xor
adc
cmp
mov
mov
cmp
sub
imulb
test
lret
mov
xchg
mov
inc
cmp
push
cmp
xor
lods
ret
ss
iret
sub
jns
push
sti
fidivrl
adc
xlat
sbb
jno
ja
mov
out
ret
jp
sub
cmp
or
sub
pop
lret
dec
gs
loopne
je
jmp
lcall
jl
push
push
adc
push
mov
dec
lret
dec
ret
out
rorl
aad
xchg
cmpb
lods
pop
imul
clc
push
lret
lds
data16
test
cli
ret
outsb
aaa
jle
ss
rcrb
jns
loopne
cmp
adc
clc
ljmp
sub
push
mov
in
pop
sub
rcrb
sarb
add
ret
pop
xchg
sbb
call
lds
dec
and
cmc
cmp
sbb
and
data16
pusha
fdivrs
lahf
cs
dec
pushw
cmp
cs
cmpsl
lcall
dec
es
xchg
test
xlat
sahf
lock
push
pop
sti
rcrl
jo
add
sub
jbe
repnz
jge
scas
dec
dec
push
pusha
clc
jo
jo
or
mov
sti
pop
xor
arpl
jle
iret
into
sti
jecxz
rcrb
cmp
jmp
mov
or
loopne
mov
mov
ds
push
fldl
mov
lret
int3
ffreep
out
sahf
add
divl
jo
pop
adc
sti
sub
sbb
mov
mov
bnd
in
pop
fcomps
push
fstpl
jge
lods
mov
leave
jg
lret
cmc
cmp
mov
push
or
mov
sti
mov
or
sbb
xor
sbb
clc
and
push
adc
xchg
imul
dec
ss
addr16
mov
mov
jge
cmpsl
mov
mov
cltd
fcom
push
clc
test
mov
out
and
cmp
sbb
mov
ds
adc
adc
notl
mov
and
sub
pushf
jg
scas
out
and
lahf
adc
repnz
mov
pop
adc
mov
int
adcb
xor
jp
sbbb
js
scas
jg
aam
call
jp
stc
mov
push
fnstenv
icebp
clc
push
xlat
inc
subl
aas
pushf
cmp
test
test
insl
addr16
jae
pop
gs
mov
inc
arpl
dec
pusha
sbb
cmp
dec
jbe
mov
sahf
popf
insb
pop
mov
aad
or
cmpsb
iret
push
ljmp
push
scas
out
test
mov
stos
xlat
lret
mov
pop
mov
sbb
add
ret
or
jae
cli
push
decb
mov
xlat
mov
scas
pop
or
shl
fistpll
mov
cmc
in
cli
dec
ficompl
orb
jne
iret
sahf
push
sbb
loope
cltd
and
icebp
mov
lret
cmp
mov
dec
rorb
pop
xchg
int
call
xlat
pop
scas
int
je
pop
shrl
ljmp
test
int
int
inc
cwtl
adc
es
jae
arpl
test
int
inc
cli
cld
fcompp
cwtl
cli
lcall
push
xchg
or
insl
pop
adc
pop
dec
nop
mov
sub
sub
or
xorl
fsts
sbb
jge
sub
test
cwtl
fsubs
aas
clc
mov
popa
jns
mov
outsb
int
pop
scas
adc
sub
mov
in
cld
fld
dec
mov
pop
jecxz
mov
cmpsb
leave
xchg
pop
in
mov
inc
iret
xchg
setge
mov
pop
mov
mov
fcomi
mov
sahf
enter
scas
jmp
es
dec
sbb
addr16
sub
mov
in
adc
dec
mov
out
pop
ret
lret
push
sarb
inc
sbb
push
aad
or
and
fimuls
cmp
adc
adc
in
cmp
loopne
mov
cld
dec
ljmp
add
push
ret
xchg
icebp
add
push
adc
lds
add
mov
sub
std
mov
mov
jle
mov
scas
popa
sub
dec
dec
jae
mov
notb
dec
or
or
or
int
std
xlat
sub
adc
cmp
into
lods
ds
adc
outsb
test
decl
arpl
mov
xchg
or
ret
loope
rcl
cli
lret
and
loop
cltd
mov
cli
fstpt
pop
cld
scas
cmp
xor
xchg
fsubp
adc
clc
scas
pop
jecxz
out
hlt
pop
lret
int3
xlat
pop
jmp
mov
insl
add
xchg
and
ret
jae
sub
xlat
ret
neg
ds
xor
ss
imul
add
fcomps
fcmovb
or
enter
push
sbb
cli
shlb
mov
lret
into
xchg
loope
sbbl
dec
mov
sahf
pop
js
mov
and
adc
jnp
fisubs
pop
insl
pop
stos
pop
or
mov
int
push
jmp
lcall
jp
sbb
lret
cmp
add
jle
cld
add
shrb
pop
call
dec
je
and
dec
pop
push
xor
cmpsl
pop
adc
jo
xchg
ds
fcmovnb
mov
dec
jne
lods
adc
out
mov
add
lock
xor
idivl
scas
xchg
sbb
sahf
pop
lea
xor
outsb
pushl
ret
imull
mov
mov
iret
fadds
and
fsubs
faddl
mov
jbe
cmp
jo
bound
jne
mov
mov
leave
inc
fidivrl
nop
pop
jbe
ret
lret
mov
mov
jns
leave
mov
xchg
dec
sahf
fstl
sub
pop
mov
das
fldl
pop
cmp
movb
data16
mov
scas
lahf
and
enter
in
fsub
xlat
imul
cs
xlat
icebp
pop
add
mov
repnz
mov
jmp
call
fwait
shll
cwtl
outsb
testb
stos
and
and
mov
js
jl
clc
gs
xchg
push
jecxz
jo
lret
mov
jle
lcall
inc
fadd
jecxz
aas
xchg
dec
sahf
idivb
sbb
sub
and
inc
push
lock
and
cmp
pop
inc
adc
push
insl
sbbb
sbb
into
add
or
call
jge
lock
test
sbb
pop
dec
jmp
pop
sub
jne
mov
mov
xchg
add
mov
fidivrs
sub
pop
and
out
mov
mov
cmpsb
mov
fisttpl
mov
pop
imul
ljmp
push
mov
loop
sub
test
xchg
fwait
xchg
pushf
mov
pop
pusha
sbb
or
jle
mov
lea
jnp
ljmp
mov
sti
fisubl
ja
xchg
rorl
inc
mov
aas
sub
in
cmpsb
das
sahf
or
and
mov
ret
jmp
mov
orb
cmpsl
mov
adc
mov
jge
push
scas
xchg
mov
pop
sub
push
push
jecxz
jge
pop
rolb
aas
dec
mov
push
cmpsl
inc
inc
xor
pushf
iret
inc
std
adc
mov
push
mov
sub
pop
notb
cmp
pop
pop
add
loope
mov
ljmp
pop
cld
mov
pusha
mov
pushl
adc
mov
xchg
clc
mov
xchg
lret
mov
lods
xor
out
into
jecxz
adc
mov
pop
ror
adc
xchg
sbb
popf
movsb
clc
int
rolb
les
jecxz
mov
push
mov
mov
dec
xchg
dec
mov
pop
dec
ja
lahf
rclb
mov
ljmp
adc
dec
add
lret
sbb
shrl
out
clc
pop
xor
push
loope
add
incb
mov
ficomps
push
mov
fstpl
cltd
push
jle
lods
stos
pop
lcall
scas
lds
cmp
pop
fisubl
test
jg
xchg
mov
loop
jns
ss
cli
lock
sahf
dec
fdivrs
mov
xlat
mov
mov
lret
cmp
push
out
cmp
xchg
mov
xchg
mov
inc
ret
imulb
xchg
stos
divl
in
mov
pop
push
mov
lods
inc
xchg
xchg
clc
and
xchg
je
aas
leave
inc
xor
pop
xor
jge
clc
jp
pop
imul
adc
loope
movsl
in
push
cld
movsb
push
dec
add
lahf
in
out
cmp
sub
push
hlt
loopne
outsl
push
fdivs
and
in
pushw
inc
xchg
popa
test
sub
cmp
in
aas
lahf
cld
jecxz
xchg
push
call
outsl
std
insl
mov
shl
and
imul
and
adc
jno
xor
jo
pop
les
lcall
or
cmpsb
hlt
xchg
jno
test
cmp
mov
jns
test
pusha
xlat
pop
jo
lea
mov
push
push
cld
cli
push
xchg
cmp
mov
xchg
daa
out
scas
and
adc
popa
push
mov
xchg
js
test
dec
out
inc
xor
mov
xchg
jecxz
sti
ja
aad
dec
pushf
mov
repnz
cmp
or
dec
jb
popa
cmp
cmp
mov
dec
push
jmp
idivb
push
jo
insb
push
mov
mov
lods
sar
fs
cmc
bound
mov
adc
add
in
fisubl
xlat
icebp
enter
inc
mov
into
and
fistpll
out
ja
js,pn
push
jb
or
mov
enter
insb
sahf
mov
xlat
into
or
stos
inc
mov
arpl
cmp
shlb
cmp
xlat
ljmp
jle
cli
push
or
and
in
xchg
stc
mov
sahf
cmp
jmp
gs
sbb
ret
pop
mov
mov
pusha
xor
negl
cwtl
or
sub
push
gs
sub
roll
sub
dec
jmp
mov
out
or
in
jnp
sbb
iret
lock
bound
or
jg
sbb
out
cs
mov
stc
es
mov
dec
movsl
dec
mov
cwtl
lret
sahf
jl
into
or
or
pop
rolb
in
dec
jmp
sbb
adc
test
xchg
xchg
data16
imul
mov
xchg
push
push
xor
xlat
jo
mov
xlat
ret
adc
lret
arpl
inc
push
jecxz
popf
ret
jp
daa
cltd
sbb
mov
ss
mov
gs
inc
lds
inc
and
sarb
mov
mov
bound
xchg
stc
sub
pop
enter
bnd
pop
xchg
mull
push
arpl
jbe
fidivrs
jnp
jbe
jle
xchg
cmp
mov
aam
xchg
xchg
cmp
xor
out
cmp
or
jno
sbb
vmulps
add
cmp
ss
pop
inc
aaa
mov
sub
cmc
mov
inc
dec
mov
xchg
dec
dec
jp
leave
out
jae
add
vphaddwd
mov
clc
mov
fnsave
mov
dec
mov
dec
mov
loope
fldz
or
fidivs
mov
sub
repz
out
cmpsb
sti
int3
pop
push
or
pop
cmpsb
sbb
ret
shl
loopne
cmp
add
stos
inc
enter
stc
cli
hlt
movb
jbe
mull
push
mov
mov
jbe
mov
popa
add
lret
mov
mov
ret
imul
in
aam
mov
movb
ret
lret
ret
mov
mov
xchg
stc
icebp
mov
cmp
insb
icebp
pop
clc
mov
jbe
ret
enter
push
dec
lret
bnd
mov
fisubrs
xchg
out
pop
repz
ljmp
xchg
fistpll
insl
jb
lret
mov
insb
mov
shrl
or
and
popf
pop
lock
mov
sub
call
clc
dec
xchg
fcomp
or
adc
add
xchg
leave
icebp
scas
xor
loopne
cmpsl
sahf
cmpsb
sarl
sub
push
sub
enter
iret
push
push
decb
into
popa
cli
dec
xchg
fs
dec
jmp
ds
ds
fldenv
xor
push
jno
mov
mov
sub
and
daa
fnstsw
loop
fisttpll
test
add
and
fimuls
push
sbb
divb
int3
mov
jle
arpl
or
dec
idiv
jl
div
cltd
gs
aaa
mov
in
loopne
pop
shl
ret
out
les
jge
add
aam
int3
pop
in
sub
jle
insb
aad
mov
push
mov
sub
icebp
xor
inc
sahf
repnz
psubusb
pop
xor
repz
mov
cld
mov
inc
jo
stos
push
push
aaa
mov
fadd
out
fstpt
and
mov
dec
sub
shll
call
mov
insl
jae
arpl
mov
mov
push
int3
fbld
aam
faddp
xorl
jbe
add
mov
or
dec
jecxz
jecxz
push
fildl
adc
inc
lret
daa
inc
pop
loop
into
push
mov
out
repnz
pop
mov
scas
push
jecxz
push
repz
inc
stc
shlb
sahf
adc
int3
fsubrl
ret
rcrb
stc
frstor
leave
add
test
popf
insl
push
mov
xor
mov
jnp
test
ficomps
mov
lahf
test
std
mov
ljmp
out
movsb
mov
decb
fstpl
lret
fidivrs
es
xchg
inc
int
out
push
popf
fcomi
mov
push
addr16
xchg
cmp
hlt
add
pop
mov
fdivp
ret
sahf
mov
mov
imul
jl
mov
mov
arpl
es
xor
xlat
ss
sub
mov
fcmovbe
mov
fsubs
sub
addr16
xchg
nop
scas
loopne
movsl
arpl
int3
and
aaa
pop
in
mov
mov
outsl
dec
and
push
sub
imul
rorb
xlat
les
outsb
mov
jl
imul
mov
aas
mov
inc
into
in
push
dec
out
push
jp
aas
xchg
dec
dec
lret
notb
sub
push
adc
cmp
imul
enter
jmp
mov
hlt
lea
fiaddl
adc
lret
mov
aaa
mov
add
inc
sub
mov
jp
add
fstpl
adc
inc
rorb
leave
lret
rcrl
and
clc
push
or
mov
dec
aam
cmp
enter
out
push
decl
push
test
out
in
pop
test
sub
mov
ret
dec
idivb
lahf
dec
mov
push
fpatan
ds
jecxz
adc
xlat
cmc
lcall
out
mov
jl
ret
mov
ret
sahf
addb
inc
lret
nop
jb
push
sub
ss
pop
ja
jns
inc
jns
push
mov
scas
xor
and
pop
dec
mov
xchg
data16
into
test
mov
loop
push
scas
lock
call
cli
enter
ss
inc
daa
push
test
jp
addb
mov
mov
dec
ffreep
mov
sub
pop
mov
push
cmp
push
mov
xchg
sar
subl
xlat
add
imul
push
mov
sub
mov
cmpsl
movsl
rol
cmp
out
jo
push
outsb
add
rclb
lret
lahf
mov
pop
mov
dec
dec
xorb
adc
push
mov
dec
lret
jle
lret
vmptrld
cmp
mov
inc
int3
jnp
mov
fstpt
push
cmpsl
or
push
xor
cmp
fcomps
cli
push
pop
aas
gs
notb
pop
cmpl
gs
adc
and
jbe
fldcw
sbb
out
push
dec
repz
inc
out
outsl
rclb
es
faddp
lret
sbb
xor
mov
xchg
or
out
rol
fcom
cmp
imul
fs
or
addr16
push
mov
fstp
inc
add
mov
aas
fidivl
jnp
test
gs
xlat
mov
stc
mov
ficoml
cmpsb
outsl
js
jo
rcrb
cmp
icebp
dec
mov
or
pop
sbb
sub
lcall
flds
jno
into
cs
es
sbb
xlat
loop
idiv
clc
sbb
push
pop
notl
cmp
push
jbe
pop
pop
dec
into
stos
scas
dec
mov
xchg
outsl
mov
rolb
push
add
mov
jle
add
mov
sub
call
fsubr
cmpb
bound
cmp
rorl
mov
mov
leave
xchg
sub
mov
mov
push
idiv
mov
mov
xor
adc
jo
adc
jle
shll
xor
jns
inc
rorl
sbb
jmp
mov
xlat
pop
shrb
sbb
jbe
jns
sub
mov
sahf
fistpl
sahf
outsl
mov
aad
aas
movsl
dec
fistpl
into
push
bnd
xor
sarl
sbb
test
lret
or
add
or
cmp
pop
popl
in
ds
push
push
cmpsb
mov
inc
mov
in
into
aas
or
xor
add
jae
adc
scas
xlat
xchg
mov
adc
push
iret
jae
dec
mov
cmp
mov
push
outsb
xchg
jae
mov
and
push
pop
repz
outsb
dec
jo
mov
xor
push
cmpl
roll
int
jbe
inc
cld
lret
and
dec
pop
jmp
add
lcall
dec
pusha
add
mov
cmp
cwtl
idivl
lds
inc
push
xor
cmc
mov
mov
dec
pop
repz
mov
sbb
or
lret
xor
sbb
sti
inc
add
xchg
aad
ds
andb
xchg
and
push
cmp
fcmovnu
mov
inc
pop
pop
mov
jo
or
inc
sahf
mov
mull
arpl
je
and
mov
cmp
fadd
xchg
adc
ds
pop
or
cwtl
sti
mov
jne
or
cmp
mov
sti
in
xor
out
jns
in
loop
or
or
inc
pop
adc
aad
mov
std
rol
dec
cmp
fnstsw
or
scas
push
xchg
xor
fdivs
stos
push
mov
fwait
iret
lock
ret
out
jp
fs
push
scas
jp
cmp
jmp
and
push
mov
dec
orb
or
lds
add
jp
sub
shrb
lret
jp
fidivrs
mov
mov
xchg
and
fmul
dec
push
adc
into
and
stos
lahf
idivl
cmp
ss
xor
xor
xor
stos
push
jge
xchg
and
mov
cli
mov
lods
into
loop
push
aas
mov
ror
mov
mov
div
or
inc
sbb
popf
inc
cmp
inc
fcomp
inc
mov
sarb
xchg
sahf
sub
popf
mov
xlat
stos
aas
enter
jge
inc
lods
je
pop
dec
inc
mov
ds
add
mov
lcall
out
mov
in
cmp
pushf
lret
dec
rclb
js
repz
insb
pushf
xchg
js
pop
inc
inc
mov
test
into
push
popa
lahf
add
xchg
arpl
dec
popf
sar
insb
dec
cmp
mov
cmp
mov
sbb
into
out
add
out
aam
lcall
jle
cli
mov
daa
ds
jno
insl
lret
pop
mov
js
enter
ss
test
jecxz
inc
jp
jg
dec
out
repz
cmp
or
fists
push
adc
or
fsub
mov
cwtl
leave
jp
mov
cmp
pop
mov
aas
and
jge
mov
sub
push
mov
dec
and
dec
xchg
xor
xchg
push
into
sti
and
adc
into
sbb
and
jb
mov
mov
jno
mov
andb
or
mov
lret
clc
mov
ds
mulb
inc
jle
ficoml
push
loopne
ljmp
stos
mov
push
mov
or
shl
jmp
in
cmpsl
lods
pop
cmp
xlat
mov
testl
arpl
pop
jb
fmull
addl
test
test
pop
inc
inc
push
mov
xor
push
cmp
out
loope
add
mov
inc
push
pop
fwait
aam
xlat
fidivrs
mov
scas
cmp
pop
push
stos
mov
insb
jp
jnp
cmp
jbe
adc
outsl
push
jnp
sahf
lret
fdivrs
ror
cmp
push
jge
sbb
leave
or
xor
jge
cmp
lahf
into
ss
jne
jno
imul
mov
into
push
int3
jp
xchg
add
jnp
mov
and
and
xchg
adc
ret
sahf
clc
mov
ljmp
ja
mov
inc
sarl
push
arpl
push
ret
cmp
jmp
jle
adc
xchg
or
fsubr
fbld
xor
mov
xchg
cmp
mov
cli
add
sti
mov
movsb
cmpsb
pop
add
or
mov
std
xlat
push
or
arpl
lret
mov
or
js
jge
arpl
testl
jmp
dec
cmp
sbb
dec
es
jnp
ret
imul
repnz
ds
lcall
pop
add
out
adc
loop
cmp
mov
cmp
cmp
cmp
xor
sub
jge
adc
loop
fadds
xchg
call
inc
lods
dec
aas
dec
or
push
jge
jne
jo
sti
aaa
and
xor
int3
cld
lods
jecxz
in
out
or
cmpl
les
pop
jno
test
iret
push
rorb
and
mov
cmp
jmp
shll
stos
mov
mov
pop
xor
fidivrl
lods
xchg
repz
adc
adc
xchg
divl
mov
cmc
mov
mov
aas
ficomps
mov
inc
lret
mov
dec
push
inc
mov
leave
xchg
lret
fisttpl
and
test
ret
fbld
jmp
aas
push
add
or
ret
add
int3
int3
cmp
cmp
stos
and
fimull
pop
mov
sub
or
bound
mov
ljmp
sbb
cmpsb
aas
nop
mov
hlt
push
stc
in
or
mov
sbb
pop
and
dec
icebp
sbb
jp
mov
sahf
cmpsb
notb
bound
int
mov
pop
add
mov
add
pop
stos
add
cs
pop
sarb
es
iret
ret
int3
adc
pop
lahf
js
in
pop
out
mov
testl
push
mov
mov
pop
jb
cmpsl
mov
mov
or
push
clc
shll
aaa
scas
jne
push
cmp
dec
shl
fistl
test
fcomps
pop
dec
jbe
imul
cmp
fidivl
lcall
ficompl
mov
repnz
clc
ret
and
jecxz
cli
push
push
or
enter
sahf
push
fildl
xchg
popf
xor
outsb
gs
fiadds
aas
inc
lock
sbb
sub
sbbl
stc
pop
aas
push
jle
or
in
outsl
mov
xorb
xchg
jnp
mov
in
pop
mov
out
mov
cwtl
or
xor
sbb
pop
out
mov
ds
js
cmp
cmpsb
xor
call
add
sub
movl
int3
xlat
pop
xchg
cmp
fidivl
jo
mov
cmpsl
dec
push
xlat
ljmp
push
sbb
out
int
outsb
out
pusha
out
fmulp
push
loop
lret
xlat
jg
loop
cli
daa
push
out
stc
push
ds
cli
ljmp
out
sub
stos
sti
fistpl
xchg
sub
into
adc
push
incl
mov
out
inc
jno
shl
rolb
lret
sbb
xchg
loopne
stc
loop
rolb
push
push
test
jns
and
jle
out
lds
xor
mov
fldt
pusha
popf
jl
and
mov
or
std
into
insl
daa
fs
ret
push
push
enter
push
jno
push
push
movsb
push
mov
dec
add
cmp
mov
xchg
adcb
push
stos
inc
sbb
fcmovb
sub
das
outsb
and
push
cld
xor
xchg
dec
iret
xor
rolb
mov
fcom
imul
lahf
sbb
inc
jle
and
sub
adc
add
int
pop
mov
lcall
dec
cwtl
mov
insl
ja
adcl
jg
mov
adc
push
test
lret
lret
out
mov
andb
or
nop
mov
cli
pop
sub
ss
sbb
inc
orb
jnp
push
ljmp
fisubs
loope
hlt
pop
in
inc
add
clc
ljmp
aam
xchg
loopne
mov
add
rclb
pop
cmpsb
rcll
lahf
inc
pop
cld
je
dec
ret
outsl
js
push
cld
jb
jno
aam
aas
aam
add
fucomip
ret
inc
idivb
inc
in
js
mov
fnstcw
stc
jecxz
stos
xchg
cmpsl
push
pop
stc
loope
jge
cli
aam
fucomip
stos
daa
add
repnz
out
fadd
cld
pop
cmp
movl
jae,pt
jb
fnstcw
mov
aam
xchg
xchg
add
mov
ret
out
imul
inc
push
imul
loopne
push
inc
movb
iret
push
das
movsl
add
ljmp
out
shrb
inc
movl
das
pop
aam
push
fldl
sub
fdivrs
testb
jmp
call
clc
inc
imul
cli
mov
aas
inc
enter
cli
xor
fcomps
cli
and
fimull
add
mov
mov
xlat
stc
mov
or
pop
fistpll
in
leave
pop
call
fiaddl
stos
sbb
test
aas
nop
enter
xor
fmuls
pop
gs
jb
clc
mov
stos
xlat
mov
enter
mov
movsl
ja
pop
mov
in
sub
mov
out
data16
cmp
mov
loope
pushf
lret
inc
adc
or
add
outsb
shrl
jb
adc
fnstcw
out
flds
test
fidivrl
aas
sub
mov
jle
into
adc
call
or
sahf
xchg
xchg
sbb
inc
jl
mov
fisttpl
lea
ror
mov
js
cwtl
cld
int3
mov
into
mov
cltd
aas
sub
xchg
sahf
mov
mov
dec
lahf
in
xor
xchg
mov
stos
scas
sarl
or
daa
cmpsl
mov
mov
or
push
paddd
addr16
lret
mov
or
lret
popa
cwtl
and
cmp
scas
xor
sbb
mov
fsubs
and
xlat
inc
call
ds
cli
rorb
retw
ffree
std
les
loopne
xchg
jp
out
lods
mov
pop
ds
mov
push
mov
insb
or
mov
mov
cmp
loope
push
cmp
lea
adc
test
jecxz
xor
cmp
std
cmpsl
pop
int3
adc
imul
cld
or
aas
or
in
or
repnz
sahf
lcall
mov
xor
loopne
adc
repz
in
out
jg
adc
adc
stc
cmc
les
bound
out
mov
lcall
add
das
push
mov
pop
xor
sub
mov
test
es
shll
aad
inc
adc
sbb
loop
mov
and
and
mov
dec
scas
lret
ljmp
into
lret
fdivrs
ret
arpl
outsb
and
fidivrl
es
fs
xor
rdtsc
dec
repz
out
xor
xchg
pop
cmp
xor
xchg
out
mov
xchg
dec
mov
ficompl
cmp
into
in
push
ss
fidivrl
adc
fldl
idiv
dec
mov
loopne
mov
jo
insb
xor
pop
stos
js
popa
lods
cvtdq2ps
ja
fmuls
lret
aad
mov
pop
xchg
bound
div
and
lret
das
repnz
mov
addr16
pop
jb
adc
shlb
in
loopne
pop
mov
inc
push
push
test
jno
push
mov
and
lds
or
mov
and
xlat
inc
cmp
arpl
es
xchg
jle
push
int
jle
mov
idiv
shrl
call
enter
jecxz
mov
push
mov
xchg
jecxz
bound
pop
hlt
cmp
sahf
inc
pcmpgtd
int
test
fcomps
xchg
mov
and
stc
pop
cmp
mov
stc
addl
jns
rclb
pop
mov
jecxz
push
vpminub
minps
mov
or
jne
orb
push
sbb
jl
mov
fsubl
mov
in
leave
aaa
mov
ds
cmpsb
jmp
jo
lea
ja
lea
inc
push
sbb
movsb
jae
push
int
aam
and
add
push
mov
cmc
cmp
gs
jecxz
mov
lds
cld
rcl
inc
cmp
out
stc
jnp
inc
cld
ret
sti
jle
push
push
mov
or
add
inc
rol
repz
pop
push
test
cltd
mov
mov
jp
cmp
mov
add
and
lods
jp
test
cmpsl
cmp
cmpsb
adc
fidivrl
mov
xlat
xchg
pop
shlb
mov
hlt
addl
add
or
ret
lahf
clc
aad
addl
jge
mov
mov
out
aam
inc
jmp
lret
inc
fistps
fmuls
sbb
sub
adc
sahf
loopne
mov
es
fmuls
enter
push
push
out
lret
sahf
mov
adc
fcomi
mov
frstor
dec
dec
sahf
cld
inc
mov
push
and
jge
push
jne
cmpsb
pop
jmp
push
rcr
into
cli
and
clc
pop
cwtl
aaa
out
es
fdivrl
push
push
xlat
lret
xor
fiaddl
xlat
leave
jg
mov
fbstp
fbstp
sub
dec
fdivrs
push
ja
mov
fldl
fldl
fsubrp
cli
inc
cmp
dec
push
push
shll
inc
daa
mov
ds
push
mov
and
jb
sahf
cld
ror
je
cmp
into
push
lods
mov
fidivrl
add
test
push
cmp
inc
repnz
int
and
test
xchg
pop
jg
jbe
pusha
mov
in
sti
out
adc
int3
cmpsl
sbb
jecxz
out
repz
sub
xor
push
test
sbb
inc
or
fprem1
sbb
xchg
pushf
xchg
std
push
fildl
lcall
outsl
pop
push
sub
dec
mov
adc
adc
pop
movsl
sub
in
or
adc
fdivp
call
fbstp
dec
push
sahf
lds
jecxz
or
mov
das
dec
stos
int3
mov
mov
inc
arpl
cmp
sbb
or
pop
mov
pop
cmc
ja
mov
lock
sub
pop
lret
cmp
add
add
add
daa
cmp
or
dec
cld
icebp
jno
push
ja
pop
aas
xchg
xor
fwait
enter
in
jb
pushf
xor
cld
cwtl
cmpsl
sahf
pop
and
jp
jmp
mov
addr16
ljmp
dec
in
aas
ficoms
mov
inc
mov
fs
inc
adc
fadds
insl
push
mov
push
data16
adc
movd
push
jmp
jg
add
inc
and
sti
je
xchg
stos
incb
and
add
inc
xlat
xchg
nop
adc
out
add
jecxz
mov
jbe
mov
cli
mov
cli
push
push
add
sub
xchg
mov
das
jge
outsl
xchg
lcall
int3
jae
add
inc
stc
out
aad
outsl
pop
into
sub
shll
xchg
pop
inc
ds
xchg
movsb
sti
into
aad
or
leave
mov
sbb
insl
aas
fs
rclb
insb
jecxz
mov
ret
ds
jmp
mov
repz
fdivs
sub
out
add
mov
loop
mov
jne
pop
mov
xor
xlat
cld
ret
sbb
push
mov
push
rol
lahf
mov
push
jne
inc
fs
pop
fistpll
shrl
sbb
and
lods
repz
adc
out
stos
stos
mov
sub
push
lret
xor
cmp
ja
pop
jae
xchg
sti
mov
lahf
cmp
scas
dec
add
inc
sar
xchg
mov
sahf
or
sbb
psubsw
adc
mov
lcall
or
jmp
clc
aad
bound
ror
repz
es
sti
aas
movsb
lret
sbb
xlat
push
push
divl
mov
push
lock
aas
loope
std
insl
into
fistps
scas
pop
adc
pop
insl
sbb
dec
iret
push
sub
stos
in
sub
xor
mov
rcr
xor
je
in
daa
xchg
and
sahf
insl
push
adc
jecxz
test
xchg
add
jno
adc
pop
or
fisubrl
arpl
mov
cmp
shl
scas
in
sub
push
ret
out
sub
dec
gs
jne
cmp
sub
bound
cmp
jbe
ss
scas
mov
push
inc
or
test
cs
sub
and
lcall
stos
mov
iret
xor
and
call
enter
mov
fsubl
outsl
add
ret
lds
es
lds
pop
jae
and
mov
lods
dec
xchg
dec
mov
pop
outsl
pop
pop
in
sahf
cmpl
mov
rcll
and
int3
orb
enter
sub
cmp
loopne
or
cli
les
out
xchg
mov
jnp
popf
repnz
imulb
sub
xor
and
add
adc
insl
lret
pop
inc
rolb
in
into
fstpt
adc
sub
test
scas
sti
push
cmpsb
outsl
fsts
fstl
adc
rorl
sbb
cmpsb
sahf
adc
sbb
jb
mov
out
adc
insl
mov
fnstsw
addb
mov
pop
add
push
mov
add
scas
jge
or
or
inc
sub
je
sbb
ljmp
mov
pop
mov
jmp
jae
into
push
ds
cmp
das
dec
or
cld
enter
mov
mov
sbb
xchg
ret
mov
mov
sub
lcall
sbb
repnz
aad
cmp
loope
push
leave
adc
cmc
cmp
aas
mov
aaa
jp
sbb
cmpsb
lods
push
mov
cltd
mov
and
sub
aaa
jae
les
pop
pop
scas
adc
cmpsb
jne
and
push
xchg
adc
cmp
in
iret
js
es
lds
test
iret
mov
inc
mov
sub
scas
cmp
rorl
jnp
aaa
cwtl
movsl
dec
mov
sub
cld
jl
or
into
mov
mov
ror
jp
sub
je
comiss
aas
std
mov
lret
sahf
cli
das
outsl
cmp
lods
mov
dec
shlb
lock
add
and
fisubs
out
xchg
testb
ret
in
mov
call
fisubrs
mov
or
pop
insb
push
out
pop
icebp
xchg
je
push
sahf
ds
inc
adc
stos
fsub
aam
mov
dec
js
mov
cs
push
or
mov
mov
scas
cmp
push
mov
lcall
push
loopne
lock
adc
cmpsb
cmp
inc
rolb
xor
aaa
cs
xchg
out
sahf
ljmp
add
xlat
outsb
divb
jo
inc
xlat
fisubrs
out
sti
or
sub
adc
scas
sti
stos
in
mov
mov
mov
jl
movsb
push
mov
sub
cmp
mov
pop
imul
cmp
int3
push
ret
or
jle
mov
js
sub
enter
sub
adc
leave
enter
movsl
inc
mov
jp
mov
aad
stos
out
dec
push
testl
lds
adc
clc
test
xor
cld
cmp
incl
insl
lds
imul
sub
clc
xchg
out
sahf
pop
inc
adc
push
fwait
push
inc
pop
lods
aad
or
enter
enter
xor
fwait
pop
ds
notb
icebp
loop
dec
imul
adc
rclb
int
inc
sbb
insl
cs
scas
jle
test
gs
insb
adc
jne
cmpsb
or
mov
rolb
enter
inc
push
daa
out
add
data16
add
lods
xchg
fcoml
push
jnp
push
fincstp
fstps
adc
mov
push
bound
repz
or
test
data16
enter
pop
sbb
pushw
test
xchg
cmp
ret
and
mov
dec
xchg
es
mov
xchg
inc
dec
pop
outsl
cltd
add
mov
jle
mov
clc
sahf
out
ss
rcrb
in
cli
adc
dec
das
push
insb
sub
mov
ljmp
fists
sbb
jmp
xor
dec
loop
rolb
or
stos
jg
stos
out
jmp
mov
rorl
push
push
or
inc
aas
in
dec
dec
mov
into
mov
sahf
cli
lcall
pop
stos
mov
add
cli
add
jne
ficompl
mov
sub
push
mul
pop
out
sub
lock
jne
sti
mov
scas
jle
mov
pop
dec
add
mov
rcrl
or
movsb
add
scas
jecxz
adc
jge
into
flds
jns
mov
mov
cmp
inc
sub
mov
xor
lea
movsl
cmpsl
fstpl
sub
rcrl
outsb
cld
jmp
dec
aam
add
mov
cltd
in
pop
in
adc
xlat
mov
scas
pop
mov
scas
push
lock
jge
pop
int
pop
movsl
xchg
sub
mov
pop
mov
rcll
dec
orl
inc
cmp
bound
jnp
inc
mov
fidivrs
movl
xchg
pop
inc
dec
adc
icebp
cmpsl
stos
sub
add
fmull
mov
cmpsb
hlt
je
add
adc
push
cli
addb
sub
mov
stc
add
push
mov
pushf
sarb
xchg
testl
push
test
clc
xor
cmp
test
xchg
add
and
std
cmpsl
repnz
mull
outsb
xor
jns
leave
mov
mov
mov
int
mov
lret
or
cmpsl
mov
cmpsl
inc
mov
paddq
push
fisttpll
mov
mov
lcall
push
inc
pop
cmpsl
add
sbb
gs
inc
jae
dec
clc
pop
and
push
imul
cmp
mov
adc
adc
lods
adc
push
xor
xorb
in
cld
icebp
insl
jp
mov
pop
and
daa
dec
arpl
bound
sbb
rorl
fisubrs
stc
mov
sbb
aam
outsl
push
das
push
dec
pop
jg
or
jl
mov
add
enter
shrb
int3
mov
outsb
adc
mov
push
dec
clc
stos
dec
inc
mov
sub
arpl
fwait
pop
inc
xchg
test
fists
inc
int3
fdivrs
mov
lahf
sub
clc
sbb
sbb
lds
arpl
scas
mov
xchg
call
push
es
xor
movsb
or
sub
cmp
mov
mov
inc
ss
cmp
or
sti
mov
outsl
mov
shrl
add
insl
lock
shrb
jnp
inc
xchg
add
and
cs
ja
mov
stc
in
mov
sub
sbb
mul
sahf
jge
pop
pop
inc
aaa
lods
fdivrl
lods
in
ret
lret
cmp
mov
mov
cmp
pop
leave
mov
mov
mov
leave
sbb
mov
add
aam
leave
add
add
testb
rcrb
xlat
out
inc
mov
lret
jmp
push
mov
test
int3
test
nop
adc
lds
orb
cmp
pop
jae
sbb
mov
cmp
cli
pop
push
jle
and
push
das
adc
mov
or
adc
xor
dec
sub
jbe
lret
call
enter
cs
scas
rcr
xchg
dec
jne
and
data16
mov
or
xor
int3
add
sub
cli
jo
hlt
stos
mulb
inc
mov
rol
icebp
pop
stc
lahf
dec
or
push
pop
pusha
shlb
sub
push
add
inc
jle
push
ds
adc
pop
or
inc
jp
test
decb
cmovae
cmc
jle
mov
ret
add
dec
xchg
or
push
sbb
ljmp
cmp
cld
outsb
mov
xlat
aad
js
lods
aad
stos
xchg
adc
pusha
cmpsb
test
pop
fnstsw
bound
ljmp
push
fisubs
mov
fisubrs
add
je
adc
and
push
and
sub
mov
pop
push
clc
sahf
rcll
ja
iret
jmp
cmp
jge
in
mov
mov
push
adc
aaa
loope
lcall
jo
add
cmp
xor
jmp
clc
mov
jecxz
xor
adc
mov
xchg
dec
xor
insl
es
cltd
lods
inc
sbb
scas
outsb
inc
inc
fisubrs
fxch
in
jmp
and
add
jl
inc
push
fwait
cwtl
ret
scas
add
sahf
jecxz
adc
stos
dec
arpl
lret
out
pop
cmp
or
sub
ds
xlat
dec
inc
adc
push
dec
rcr
pop
xchg
cwtl
push
xchg
mov
jg
mov
sbb
stos
repnz
push
cmp
dec
push
or
cmp
repnz
or
lea
dec
call
or
pop
push
xchg
dec
clc
xor
pop
int3
lds
mov
outsb
repz
stos
or
mov
and
cs
cmp
int
ficoms
out
and
cmp
pop
pop
mov
mov
mov
xor
xchg
push
xchg
xor
and
insl
leave
addl
js
pop
iret
pop
jmp
pushf
es
sarb
outsl
cmc
imull
stos
sbb
adc
add
inc
les
mov
add
xchg
mov
mov
inc
hlt
cltd
jle
add
jge
pop
mov
mov
adc
mov
mov
repz
adc
out
cmpsl
ficomps
xchg
lock
movb
jle
push
clc
sub
or
lcall
stc
xabort
fstpt
jp
jo
stos
push
adc
mov
push
push
decl
add
xchg
pop
xchg
push
scas
and
pusha
mov
into
clc
ds
jo
ret
int3
or
in
lret
ret
mov
sahf
inc
test
dec
adc
stos
sbb
add
dec
mov
cmp
pop
dec
andl
scas
xlat
and
add
int
adc
lds
lret
xor
je
jae
call
shrb
cmp
mov
pop
mov
cmpsb
xor
inc
stos
inc
mov
pusha
or
ja
ret
jecxz
ss
dec
pop
dec
mov
inc
int3
mov
cmp
stc
sbb
mov
icebp
mov
ret
xchg
mov
fidivrs
xchg
mov
scas
sahf
stc
in
cmp
mov
rolb
push
dec
aas
and
cmp
sti
out
jp
pop
xchg
sahf
mov
dec
jnp
int3
jmp
mov
pop
clc
dec
sbb
loope
incb
pop
jno
sahf
cmp
in
pushl
sub
inc
in
inc
pop
jb
dec
leave
lods
add
enter
outsl
and
sbb
andl
push
pop
xchg
int3
xchg
jle
int3
mov
repz
and
xchg
fcmovne
xor
sbb
shrb
push
mov
pushf
inc
mov
cmp
cli
cld
into
sbb
mov
mov
repnz
or
adc
sub
fisubrl
push
jns
fwait
dec
imul
and
or
aam
push
pusha
adc
dec
dec
jo
push
cmpsb
pop
add
outsb
stos
fildl
int3
mov
cmp
ret
inc
push
ja
pop
mov
outsb
push
mov
sbb
push
push
out
cmp
ret
movl
leave
inc
jg
cmpsb
leave
or
mov
fstpt
jge
loope
je
mov
xor
sahf
sub
mov
push
inc
pop
out
push
pushf
out
adc
movsb
inc
push
add
dec
lret
or
xchg
inc
push
jmp
xchg
stos
popa
dec
cmp
mov
es
stos
xor
aas
xor
scas
bound
add
inc
cmp
mov
sub
mov
std
std
push
fidivrs
icebp
idivl
loopne
xchg
add
sbb
cli
les
sbb
and
mov
addr16
add
lret
fcomps
or
aas
ret
leave
mov
das
fwait
lds
addr16
sahf
adc
imulb
xor
data16
loop
lea
inc
mov
adc
dec
dec
mov
mov
xchg
mov
ret
in
ds
inc
aas
dec
imul
outsl
fdiv
mov
movsb
in
int
fsubs
pop
imul
mov
cmp
ss
fcoml
addr16
inc
clc
out
mov
shl
clc
xor
fdivr
clc
and
sbb
inc
add
adc
mov
ja
mov
sub
into
aas
fwait
daa
imul
out
ficoml
repz
pop
mov
or
mov
mov
add
cmp
cwtl
std
jecxz
imul
pop
das
push
ljmp
xorb
in
cltd
sub
popa
out
ss
mov
out
setbe
bnd
mov
cmp
lret
pop
dec
lret
mov
test
stos
jle
mov
aad
mov
dec
push
xlat
jp
sbb
sub
clc
xor
dec
andb
cmp
dec
or
push
inc
dec
xor
pop
jle
dec
sbb
push
sbb
or
pop
ds
adc
cwtl
sub
pop
and
pop
hlt
ret
loopne
mov
jmp
mov
sahf
or
aad
std
aaa
cmpsb
sahf
scas
ret
ljmp
pop
push
ret
dec
push
sbb
cli
shlb
mov
inc
mov
dec
dec
ret
cs
cli
push
test
outsl
mov
mov
out
enter
movsl
test
xchg
push
xlat
adc
pop
test
xlat
mov
sub
call
les
xchg
dec
pusha
sbb
mov
xor
pop
mov
lcall
sbb
sti
in
dec
stos
in
les
and
sub
in
add
sub
outsl
testb
mov
push
bswap
enter
fdiv
push
or
sbb
push
stos
mov
and
mov
xor
inc
xor
xlat
mov
repz
pop
push
mov
sub
or
and
cmp
adc
aaa
xor
cmpxchg
push
js
mov
or
les
inc
lret
sub
mov
imul
inc
mov
ret
iret
cs
jbe
sbb
xlat
push
fldt
sar
mov
out
ret
out
jp
mov
pop
inc
ffreep
ljmp
leave
mov
push
test
jbe
mov
mov
insl
das
ret
mov
mov
add
inc
addr16
sahf
ret
push
idivl
xorl
test
add
insl
push
xchg
add
xchg
test
jnp
hlt
fisubl
jp
into
ljmp
sub
push
cmc
pop
dec
push
pop
cmp
icebp
loopne
and
jb
loop
adc
xor
add
jo
mov
icebp
imul
or
or
cli
add
pop
lahf
loop
pusha
push
mov
xlat
icebp
cli
lods
or
cli
add
out
pop
mov
mov
jbe
data16
pop
sar
jg
or
jnp
scas
and
or
mov
ret
in
out
mov
mov
mov
sub
xor
pop
pop
cmc
in
cmp
mov
adc
cmp
int3
lret
inc
ljmp
push
leave
mov
xchg
mov
mov
add
adc
fildl
fidivs
xchg
imul
inc
ret
mov
cmp
dec
lds
cld
repz
jl
or
lret
mov
xchg
sahf
mov
adc
andl
cld
mov
jb
test
and
cwtl
push
adc
pop
cmp
pop
rol
add
cmp
sub
mov
fisubl
inc
mov
scas
jp
mov
or
stos
mov
sub
out
jne
fcomi
out
adc
add
imul
or
pop
sahf
jmp
sub
aaa
cli
idivb
push
cmp
aas
adc
lret
out
negl
jle
jecxz
imul
fs
test
aaa
mov
sahf
aad
sahf
push
pop
repnz
enter
ljmp
scas
or
push
nop
cwtl
adc
lahf
jmp
lds
pop
imul
jle
rclb
rcrl
xchg
out
jb
xor
jg
sub
xor
scas
mov
lods
clc
in
xor
sbb
mov
jmp
push
stos
pop
mov
aas
adc
xlat
loope
jae
jne
mov
cmp
add
cmpsl
inc
push
loope
mov
and
jns
sub
dec
cmc
jns
stc
cmp
subl
pop
scas
mov
sbb
lea
aad
cli
add
sbb
ljmp
ret
push
xchg
sub
add
dec
std
xchg
dec
cmp
movl
xchg
adc
movsb
mov
sub
pop
mov
dec
decb
push
mov
or
jecxz
mov
idivb
sub
stos
icebp
xor
xchg
aam
imul
jae
loopne
xor
mov
or
aas
ret
adcl
gs
repz
shll
ja
lcall
subl
rorb
xchg
push
out
sub
or
shll
iret
push
outsb
inc
bnd
ds
out
fcomp
sub
dec
into
pop
or
into
push
inc
cmp
ficoml
es
out
jle
les
add
adc
jne
fisttpll
push
out
jle
test
outsl
mov
cwtl
push
fwait
pop
sub
fisubl
ret
xchg
xchg
or
loopne
jp
sbb
imull
fs
pop
aaa
add
push
jmp
push
cwtl
cli
daa
add
ds
lds
cmp
xchg
mov
fs
bnd
outsb
xchg
xchg
int
adc
dec
cs
ficoml
lds
cmp
shll
repz
aam
sbb
out
fsubrs
inc
add
aas
sahf
xchg
pop
fnstenv
mov
dec
push
sub
mov
sbb
dec
mov
mov
imul
inc
repnz
mov
cmp
repnz
mov
leave
mov
enter
or
cli
loop
stc
mov
pushl
pop
push
lret
out
push
fcmove
sub
aas
sarb
mov
fbstp
jns
sbb
fildll
aas
rol
and
add
xlat
dec
enter
dec
movsl
jp
sbb
ficoms
cwtl
iret
xchg
outsb
lcall
into
sahf
leave
add
xlat
cmpsb
daa
mov
clc
mov
mov
and
xor
sti
and
adc
mov
pop
rorb
cli
call
or
adc
mov
in
pop
cmpsb
aas
mov
clc
insb
or
adc
outsb
mov
and
out
stc
enter
mov
pushf
dec
mov
fmuls
inc
add
insl
rcrb
sub
cmc
mov
sub
pusha
pop
roll
loope
cwtl
ja
aam
cmp
sarb
or
adc
cs
lds
enter
jb
in
add
testb
fwait
and
shl
les
pushf
ljmp
lock
mov
cmp
push
sbb
dec
ljmp
sub
push
test
aas
and
jmp
int3
lret
lret
aaa
ret
icebp
add
imul
scas
sub
push
cltd
cmp
adc
divb
imul
ss
mov
cmpsb
jmp
push
mov
clc
push
dec
xor
int3
cmpsl
ret
loope
mov
pop
repnz
jb
add
std
int
mov
jl
std
push
sbb
xor
jae
inc
sub
lret
or
lahf
pop
inc
or
fidivl
jnp
ljmp
xchg
add
jns
inc
sbb
ljmp
jnp
push
fldl2t
in
xchg
and
insl
mov
inc
in
popf
mov
inc
std
js
sti
rcrl
mov
cmp
or
call
jge
sti
mov
inc
xchg
jp
inc
mov
push
rcr
cmp
jecxz
fldenv
mov
jp
pop
mov
lods
stc
cmp
add
movsb
stc
ds
mov
add
outsb
xchg
repnz
clc
fdivrs
mov
and
loopne
pop
inc
cld
jle
xor
ret
mov
xor
cmp
aam
into
mov
movsb
and
arpl
add
repnz
sbb
inc
loop
fstp
mov
in
incl
inc
sbb
add
xor
pusha
add
and
mov
xchg
leave
ljmp
xchg
sub
fadd
or
xlat
jns
ljmp
call
pop
hlt
mov
lods
add
and
xlat
adc
sahf
cmc
mov
or
add
ret
les
add
adc
cs
or
jge
sahf
sbb
inc
xchg
xchg
dec
or
fidivrs
movsb
mov
out
test
inc
xchg
mov
sub
pushf
outsb
add
sti
mov
in
cmpsb
cmp
jb
loop
js
mov
lret
xor
into
mov
loope
iret
ret
fdiv
inc
sub
outsb
mov
into
mov
loop
xlat
jp
out
fdivr
insl
hlt
ljmp
fidivs
pop
mov
inc
adc
pushf
mov
cmpsl
mov
lahf
das
out
outsl
into
pop
int
mov
test
cs
cli
ja
mov
jmp
sbb
outsb
call
stc
pop
and
and
fstpt
das
pop
jnp
ror
pop
sbb
pop
cs
mov
pop
sub
enter
jns
int
jb
fbstp
inc
sbb
sbb
js
lods
int
ret
fisubrs
andb
dec
xchg
ret
out
xchg
loop
jns
ds
out
cmpsb
cmpsl
and
aam
dec
mov
xchg
add
mov
lods
cli
xchg
cmp
jg
xchg
pop
loope
sahf
sub
mov
and
aas
fcoml
mov
cmp
jg
ss
neg
addr16
sahf
loop
xlat
bound
fiaddl
inc
lcall
cmp
mov
subl
pop
fidivl
out
jb
call
or
sarb
jge
loop
lahf
or
jle
push
testb
cwtl
cmp
nop
lods
sbb
pushf
pop
mov
movsb
cmp
scas
sti
pop
xchg
xor
push
ja
test
clc
xor
mov
push
sbb
cmp
imulb
lcallw
lds
iret
pop
ds
cmp
pop
out
test
xchg
dec
xchg
mov
aad
ja
or
gs
sub
fimuls
or
pop
push
adc
ss
jmp
sub
push
sub
mov
int
jno
scas
jmp
dec
adc
fsubl
add
outsb
mov
testb
lcall
js
daa
xor
jb
rorl
and
les
sbb
sbb
sub
pop
sbb
loop
xor
fsubp
jns
aad
xor
jne
cmp
jge
pop
pop
adc
rorb
in
incl
xor
xor
fs
scas
scas
clc
int
rorb
or
fwait
mov
or
ss
cmc
add
xchg
mov
test
std
shl
jnp
pop
inc
loopne
inc
push
cmpsl
adc
out
or
lret
outsb
movsl
xor
pop
cmp
repz
testl
dec
jb
fstps
out
hlt
sbbb
icebp
jg
test
out
aas
inc
xor
xor
dec
int
mov
dec
loop
mov
cmpsb
aas
sub
mov
or
adc
inc
fidivrs
cmp
aam
and
out
mov
lret
or
clc
loope
roll
mov
xor
fwait
aas
mov
ds
cli
xorb
jo
jle
cmp
bound
add
outsl
fbstp
pop
add
fistps
sbb
movsb
in
jge
lock
mov
add
jge
addr16
das
stc
lock
push
stc
pop
inc
dec
fisttpl
ret
rorb
add
push
and
push
jns
mov
xchg
icebp
inc
xlat
pop
out
inc
out
jo
cmp
mov
pop
cmp
jge
out
ds
mov
mov
jle
sub
lock
xlat
data16
xchg
xor
sub
cltd
cmp
es
dec
inc
jp
icebp
outsl
arpl
mov
cwtl
xchg
in
rol
xchg
ds
sti
or
mov
mov
out
push
xor
adc
add
std
ds
sahf
pushf
mov
loopne
mov
xlat
jle
pop
sbb
mov
lret
sahf
stc
call
in
pop
int3
cltd
pop
xchg
fs
data16
jbe
or
pop
sub
jp
add
adc
mov
mov
aas
cmp
and
les
sub
xlat
dec
lods
ret
pop
enter
cld
fs
adcb
pop
adc
mov
push
mov
mov
bound
stos
mov
out
lret
lret
gs
fcmovbe
push
jmp
ret
xchg
or
ss
xchg
mov
fstpl
sbb
daa
cmpsb
cmp
fsubrs
mov
mov
and
jb
cld
jmp
add
inc
or
push
dec
pop
push
inc
add
dec
fbld
adc
adc
sub
int
stc
ret
lods
mov
inc
add
add
lods
in
jae
sub
pop
add
mov
imul
repz
mov
mov
inc
add
or
fmuls
aas
and
out
hlt
cwtl
movb
xlat
cmpsb
mov
sahf
in
inc
mov
mov
and
mov
jmp
lret
hlt
mov
iret
lret
and
ret
in
aam
xlat
dec
sbb
push
xor
lcall
jae
adc
cmpsl
push
fldl
imul
lahf
sbb
rcrb
adcl
mov
shll
or
xchg
sbb
mov
lret
fcomps
repnz
cmpsb
mov
jbe
aam
divb
dec
mov
pushw
movsb
mov
mov
rcl
test
lods
ds
call
mov
ret
mov
mov
popf
push
rol
or
stos
inc
in
mov
rorb
mov
cmpsb
inc
inc
leave
popa
clc
fsubrl
xrelease
cmc
test
clc
leave
xlat
jp
negl
jmp
out
mov
xchg
call
mov
cltd
cmp
mov
cmpsb
scas
mov
mov
clc
add
hlt
lds
mov
loope
mov
xor
mov
hlt
dec
cli
xchg
inc
sub
test
mov
cmp
push
pop
dec
jno
or
sahf
mov
pusha
aam
loopne
sub
lods
and
mov
fwait
adcl
jns
pop
jge
fwait
jns
sahf
adc
mov
icebp
pop
clc
out
inc
mov
subl
iret
add
mov
pop
dec
sub
mov
jle
cli
push
repz
xchg
rorl
add
mov
mov
add
addr16
insl
jne
sub
imul
or
loop
gs
jl
mov
mov
and
lret
aas
cld
jmp
int3
mov
test
les
in
xor
int3
lret
fsubrl
clc
shl
aam
push
mov
push
or
push
popf
aas
or
push
mov
test
test
imul
jge
mov
pop
sub
fstps
jp
jmp
mov
sbb
xlat
mov
movsl
inc
xchg
push
add
xchg
dec
lds
mov
cmp
cmp
rcr
rcl
sarl
into
add
ljmp
pop
fcomps
pusha
mov
sbb
add
gs
sbb
jb
jp
fdivrp
std
shlb
sub
pushf
iret
movsl
fsubrl
into
fsubrs
nop
out
inc
sub
mov
inc
mov
sub
fdecstp
jmp
or
les
clc
loop
lret
cmp
aad
repz
mov
mov
push
lock
popf
sahf
mov
lret
mov
add
fwait
mov
mov
aad
mov
sub
ja
loope
sbb
das
push
stos
push
push
scas
sbb
negl
push
in
dec
mov
mov
dec
lods
scas
push
fisttpl
ja
xchg
nop
and
mov
inc
in
cltd
jle
or
mov
in
inc
loop
mov
jbe
mov
sbb
mov
or
pop
and
pop
cwtl
dec
ss
xor
mov
pop
mov
aas
rcrb
dec
and
mov
scas
sub
iret
lahf
ficoms
in
jne
cmpsb
cmp
mov
mov
push
out
cli
lock
das
pop
and
mov
or
and
aaa
loope
in
out
dec
in
imul
les
sub
sbb
in
es
sub
repnz
jp
stos
daa
sbb
pop
lock
orl
fistl
xlat
and
mov
mov
mov
add
fs
mov
mov
jmp
inc
mov
arpl
jmp
sbb
hlt
leave
into
loope
add
loope
fcmovne
ja
push
std
ret
adc
cmpl
or
arpl
aas
repnz
std
add
imulb
pop
and
fidivrl
dec
inc
push
jg
lods
lahf
mov
mov
icebp
pop
xor
cmp
and
pop
mov
and
fbstp
sbb
cmp
not
ret
pop
mov
xchg
or
inc
aad
stc
or
xchg
iret
jg
inc
cwtl
pop
xchg
lods
pop
xor
xchg
mov
jbe
xor
pop
lds
xlat
jb
test
xor
dec
xorl
add
scas
das
lds
in
stc
sahf
aaa
fidivs
ret
sarl
or
int
sub
movsl
ljmp
js
sub
insl
xchg
sbb
jbe
cmpsb
icebp
or
xor
outsb
and
test
mov
cmpsb
or
cmp
adc
in
imul
jle
sahf
cli
xchg
sbb
clc
jbe
inc
stc
jle
xchg
daa
jmp
or
mov
mov
loope
xor
or
cwtl
adc
scas
loope
insb
not
stos
inc
push
jnp
add
cmp
or
add
gs
push
sahf
xchg
cmp
ss
sahf
add
or
in
sbb
push
pop
pop
shll
imul
pop
push
fisubrl
push
fisubs
inc
js
out
mov
mov
addb
mov
push
lock
test
inc
xchg
or
clc
xchg
sbb
xchg
mov
jne
cmp
jmp
cmc
repnz
jmp
shrl
xchg
rclb
into
fst
xchg
inc
icebp
mov
iret
inc
sub
repnz
xchg
push
ljmp
icebp
mov
aad
jp
jns
rol
mov
xlat
lea
jb
stos
sar
mov
loopne
mov
mov
add
jmp
fcompl
mov
dec
repnz
loopne
mov
ret
jle
inc
jnp
mov
clc
mov
leave
xor
sub
xlat
push
ror
dec
sub
enter
notl
add
cwtl
mov
test
xchg
pusha
loope
cmp
out
sub
mov
pop
sbb
jmp
and
xor
sarl
add
add
imul
imul
xchg
int3
cmp
push
push
sahf
lret
adc
push
xor
scas
repz
leave
jb
bnd
inc
das
push
int3
xchg
mov
in
mov
enter
cli
fmull
add
sahf
test
add
insb
jge
xchg
add
mov
test
sbb
je
inc
sub
pop
mov
scas
outsb
pop
inc
mov
xor
inc
and
lods
out
adc
pop
xlat
je
mov
mov
and
push
movsl
and
jnp
std
push
sti
mov
push
inc
cmpsl
sbb
mov
adc
gs
or
add
insb
outsb
xchg
xchg
mov
fdivrl
loope
aam
fsubs
enter
iret
jecxz
sub
scas
stos
mov
or
pop
adcl
or
mov
out
stos
jmp
iret
dec
push
cmp
push
test
add
data16
add
mov
cwtl
outsb
sbb
out
adc
into
xchg
ss
imul
call
pop
aas
jecxz
into
xor
adc
cmpsb
jl
xor
dec
mov
jp
fnstenv
int
cs
pop
fisttpll
pop
or
les
mov
mov
cwtl
orl
aad
std
pop
or
ret
jo
inc
or
nop
push
adc
mov
jo
sub
ret
xchg
sub
ffreep
mov
loop
roll
jl
cmpsl
sahf
jbe
cmp
loope
inc
pop
mov
xchg
jnp
sbb
xchg
leave
add
adc
cli
add
cmp
mov
fisubs
lahf
popa
jbe
inc
test
mov
xchg
or
enter
mov
adc
mov
stc
insl
icebp
js
dec
daa
or
int3
stc
xor
xchg
mov
mov
mov
xchg
enter
add
sbb
add
dec
dec
repnz
enter
mov
lds
add
enter
fsubr
inc
ret
pop
pop
fsubs
cwtl
loope
push
aaa
jb
in
jl
fcom
add
lret
mov
xchg
mov
dec
and
rolb
push
lret
hlt
pop
xor
fstpl
mov
and
push
mov
fidivl
rcl
or
ret
ljmp
leave
aaa
lahf
push
mov
xor
fcomps
adc
inc
jno
stos
sbb
lcall
xor
repz
bnd
icebp
mov
cmp
ds
jmp
cmpsb
pop
mov
stos
mov
jg
outsb
ljmp
arpl
pop
mov
or
sbb
arpl
xchg
jp
sub
lea
sub
scas
sbb
xlat
dec
mov
fwait
mov
xchg
pop
xchg
push
dec
push
fucomip
cmp
enter
cmp
in
pop
cli
push
stc
or
cmpsl
add
cmpsl
in
stos
mov
and
js
negl
sbb
lock
mov
add
mov
scas
sbb
xchg
sub
jne
stc
add
xchg
fcmovnbe
add
popf
pop
mov
cld
cmp
clc
fwait
aad
out
jmp
mov
loop
fiadds
leave
cmpsb
xor
xchg
mov
daa
xor
pushf
pop
or
dec
es
ja
or
inc
rol
imul
movsb
leave
out
repnz
add
mov
test
aas
mov
dec
jne
loopw
fisubrs
scas
mov
cli
out
pop
fldl
mov
int3
mov
push
shrl
dec
enter
mov
jbe
aad
push
fidivl
jo
out
ljmp
mov
mov
inc
cmpsl
mov
or
mov
sub
mov
inc
fcmovu
out
sbb
mov
stos
adc
out
ds
stc
lret
outsb
cmp
xor
stc
fnstsw
out
xlat
jno
roll
sbb
ret
shlb
sarl
inc
sahf
xchg
xchg
jp,pn
mov
sti
cld
or
xchg
or
or
fiadds
cli
add
lret
jp
add
mov
xor
adc
fcmovu
rol
or
std
decb
cli
push
cli
add
push
mov
xor
add
push
nop
repnz
add
mov
xor
std
mov
outsb
jmp
push
xlat
jb
test
xlat
dec
out
xor
pop
push
ret
fxch
jecxz
mov
lock
mov
rcl
sbb
lcall
pop
test
sbb
mov
lahf
out
sarb
lods
icebp
fidivs
repz
rol
lret
or
int
push
sahf
fdivp
inc
lea
fadds
inc
js
stc
les
out
lds
ret
enter
or
fs
lods
sub
repz
adc
sahf
scas
fldenv
cltd
cmp
cmp
rcrb
and
cmp
pop
jo
repnz
test
lods
not
sysenter
or
ficomps
fmull
xor
pop
or
lret
les
in
sub
cmpl
dec
aam
imulb
sub
pop
inc
sub
fmul
outsl
jbe
jns
ret
dec
push
ffreep
repz
push
xchg
mov
add
int
cmc
and
mov
icebp
out
dec
int3
mov
xchg
dec
pop
mov
jbe
sbb
jns
aas
clc
pop
nop
jge
ss
call
xor
shlb
mov
or
mov
mov
jle
pop
xchg
ret
movb
loop
loop
push
test
jl
iret
push
mov
rcl
mov
mov
stc
ss
pop
movsl
aas
sub
mov
into
sahf
test
fmuls
inc
dec
and
cmp
pop
lret
addb
out
mov
inc
ljmp
lds
dec
jbe
negl
inc
push
add
sahf
sbb
dec
std
ret
mov
lret
or
push
adc
stc
stc
mov
call
notb
sub
mov
push
stos
mov
clc
sub
test
cmp
xlat
into
inc
or
rolb
pop
fcmovu
push
mov
bound
cld
ljmp
jno
jmp
xor
cmp
ja
mov
push
out
int3
push
dec
or
int3
mov
mov
clc
rclb
ret
sbb
inc
fnsave
cmp
fsubs
repz
ljmp
icebp
rolb
and
push
js
fadd
in
outsl
movb
shll
clc
scas
inc
pop
add
or
sbb
mov
loop
mov
adc
pop
sub
sbb
jo
movsl
stc
dec
repnz
or
pop
mov
sbb
or
les
mov
and
sbb
mov
sti
add
xchg
sti
jne
mov
sahf
adc
adc
adc
or
enter
and
cmc
jno
mov
sub
mov
jle
cld
inc
lods
jbe
jp
in
rolb
out
and
hlt
fcmovnb
pop
xor
adc
pop
dec
lret
cvtpi2ps
cmpsl
je
out
adcl
roll
jg
jb
and
stos
ljmp
sti
mov
or
lcall
add
fmull
mov
xor
mov
sarb
lahf
mov
pop
icebp
clc
sub
push
in
aas
into
jg
mov
roll
cmpsl
mov
fs
and
mov
mov
ror
mov
lea
mov
push
sbb
pop
or
jne
mov
loop
pop
or
jb
cmpsb
cmp
stos
pushf
inc
das
clc
notl
loop
mov
daa
loope
enter
aaa
fmuls
xor
ja
push
and
jp
adc
sub
imul
ret
or
cli
scas
jmp
mov
pop
ret
adc
sti
adc
fidivl
sub
cmp
mov
xor
pop
push
ds
cli
mov
js
mov
inc
fadd
les
and
sub
cmp
movsl
aam
outsb
add
adc
dec
ficoml
fisubrl
fcoms
or
or
or
andb
mov
lods
testb
lret
loop
into
outsb
and
sahf
cmp
int3
cwtl
shr
mov
jo
jae
adc
pop
xor
aad
lret
cmp
sub
or
jo
inc
rorl
inc
leave
les
out
jne
shrl
mov
sahf
pop
sbb
test
adc
cmp
push
push
sbb
push
or
jle
sub
and
sbb
mov
adc
cli
mov
push
icebp
add
sub
mov
imul
or
cmp
cmovbe
xchg
movsl
add
sti
lcall
xor
mov
xor
add
mov
out
repz
jle
mov
xor
ljmp
fnstsw
ds
inc
sti
enter
cmp
pop
fadd
cmp
mov
push
icebp
mov
scas
jno
aas
rcrl
sub
fadds
out
fsubrs
adc
clc
fdivl
adc
ret
mov
sahf
xlat
scas
mov
cmpsl
lock
jg
lods
and
aas
pop
mov
cli
aas
sub
popa
pop
xchg
stos
iret
sbb
int
cmpsb
int3
outsb
push
negb
daa
adc
ds
xlat
push
adc
jo
lret
dec
enter
leave
fsubrp
cmp
xlat
adc
in
dec
pusha
sbbb
data16
cltd
mov
les
repz
nop
es
es
ljmp
cmp
das
push
fistpll
sub
sahf
sti
les
mov
sub
repnz
cmpsl
mov
mov
xlat
xor
rcrb
insl
lods
and
pop
mov
mov
shrb
xchg
ds
clc
mov
xor
sti
push
int
or
cs
call
pop
sub
mov
movsb
sub
ds
or
xchg
fimull
enter
pop
mov
push
not
xor
icebp
enter
pop
xchg
test
sahf
pop
pop
jge
pop
pop
scas
pop
movsl
enter
xchg
mov
mov
dec
and
stos
mov
xor
rcrl
mov
push
std
or
stos
cmp
ret
out
ss
cmp
jg
mov
icebp
xlat
push
mov
inc
pop
or
mov
shlb
test
add
insl
sub
jp
dec
sub
xchg
mov
outsl
out
outsb
push
or
pandn
fistpll
sar
orl
pop
lret
int3
orl
fmuls
aam
or
push
mov
adc
fnstsw
lret
fcomp
sbb
adc
push
fcomi
loope
outsl
dec
jne
inc
fimuls
fucomip
adc
into
cmp
lret
cmp
or
shrl
dec
lods
xchg
or
mov
mov
and
cli
repnz
or
int3
xchg
jmp
shrb
adc
mov
mov
add
aas
jno
in
ret
fisubrl
aaa
fidivrs
mov
ljmp
out
out
or
loop
sahf
stos
xor
sarb
ds
or
pop
inc
and
imul
out
repnz
pushf
out
adc
stos
pop
push
cli
mov
pop
fcomps
mov
xchg
loopne
mov
adc
jmp
jns
fwait
into
pop
movsb
add
sbb
loop
cwtl
int
mov
push
lret
mov
push
in
loopne
sbb
mov
mov
push
cmp
out
xchg
mov
sbb
add
sahf
xor
push
hlt
pop
clc
cmp
mov
loop
pop
xlat
int3
sti
sbb
cmpsb
mov
incl
icebp
add
lahf
xlat
scas
cli
lret
shrb
jae
dec
mov
push
lods
movsb
lock
repnz
out
cmc
shll
scas
leave
mov
arpl
jne,pn
enter
mov
and
pop
scas
adc
pop
sbb
in
sahf
inc
js
int3
xchg
push
mov
fwait
xor
xchg
pop
or
adc
adc
jns
cmpsb
xlat
xor
push
fistl
dec
cltd
in
inc
jb
hlt
sub
out
outsl
mov
push
test
dec
jb
adc
and
imul
cmp
movsl
aaa
push
incb
lods
cld
add
shlb
call
repnz
jecxz
sub
ds
mov
scas
pop
test
pushf
add
out
arpl
add
xor
and
cmp
jmp
cmp
dec
xchg
in
xor
adc
add
mov
arpl
push
add
push
push
aas
and
iret
fwait
or
mov
inc
pop
ljmp
adc
pusha
shr
aas
sarl
or
xchg
fidivl
sub
jmp
xchg
xor
xor
cli
out
mov
lods
dec
mov
pop
js
shrb
mov
sub
popf
lods
ss
scas
pop
or
fadds
sub
xor
not
mov
inc
add
or
in
std
repz
mov
adc
int
mov
subl
cld
pop
cld
jmp
sahf
adc
pop
pop
ret
mov
jle
pop
xor
pop
or
or
repz
sbb
lret
cmp
out
push
cmc
jp
enter
pop
dec
xchg
inc
je
gs
cmp
cmp
cli
bound
cmp
mov
xor
mov
mov
loop
mov
sti
enter
inc
shlb
in
jecxz
jl
mov
int3
into
push
xor
xor
fisttpl
mov
inc
ljmp
pop
stc
out
and
int3
scas
push
xchg
pop
call
or
cmp
in
int3
fs
idivb
outsl
loop
xor
dec
inc
mov
mov
mov
data16
ja
mov
popf
ficoms
leave
or
xlat
sub
push
add
ja
out
push
icebp
pop
subb
adc
cwtl
and
mov
enter
cmp
inc
pushf
add
mov
and
sahf
lock
stc
paddd
sbb
mov
aam
jmp
mov
sub
into
fs
inc
test
cmp
mov
ds
xor
in
dec
cli
sbb
xchg
hlt
pop
fmulp
add
fsub
or
xor
cmp
jb
pusha
lret
push
pop
sub
out
sti
sti
les
inc
sbb
int
cmp
adc
outsl
sub
ret
test
mov
int
ret
jno
icebp
call
xor
jecxz
icebp
sti
mov
aam
lea
fidivrl
push
dec
mov
pop
outsb
xchg
stc
mov
lret
sbb
mov
addb
cwtl
in
mov
dec
scas
push
jmp
xor
or
mov
pop
push
iret
hlt
out
sahf
push
mov
ret
stc
sarl
cmp
fimuls
cltd
fimull
jne
iret
scas
loop
out
inc
sbb
add
pushl
out
lea
scas
stos
mov
mov
cli
lock
cli
sbb
inc
xchg
vshufps
cmp
add
cmp
cmp
xchg
cmc
or
out
xchg
cld
test
enter
mov
xor
cmpsl
xor
fdivl
les
cmp
cmp
cmc
and
sti
mov
out
fstps
ds
sub
xchg
mov
cmp
sahf
sbb
dec
scas
pusha
pop
inc
out
or
mov
cld
push
xchg
stos
neg
lahf
sbb
cli
sbb
cmp
loop
cmpb
xchg
lcall
xor
jl
xchg
ljmp
into
mov
rol
outsl
xorl
jecxz
xchg
mov
pop
xor
shlb
sbb
rol
pop
stos
xlat
add
sbb
pop
adc
lcall
mov
mov
adc
fcmovu
mov
push
stc
or
imul
xchg
or
add
in
push
mov
repz
shrl
mov
sbb
ret
mov
mov
mov
sahf
jl
sbb
xchg
pop
or
jmp
outsb
aad
adc
out
adc
lds
clc
pop
xchg
adc
sbb
add
sub
sbb
mov
adc
rcrb
popf
jl
es
sbb
jecxz
scas
iret
hlt
sbb
adc
add
hlt
sub
add
mov
add
aas
out
movb
stc
arpl
push
mov
push
sahf
cmpl
scas
mov
xor
out
jmp
mov
jecxz
jp
loop
mov
xlat
xor
jmp
nop
es
sbb
sub
sbb
jmp
cmp
pop
sub
je
mov
jmp
sbb
inc
stos
xchg
xor
or
sub
mov
clc
aaa
icebp
nop
cmc
fldt
ret
loope
xchg
jle
ss
popa
enter
fistl
mov
cmp
ret
icebp
mov
cmpsb
lret
out
shlb
enter
mov
lcall
ss
repz
adc
aaa
mov
sub
xlat
pop
into
ds
sbb
rcr
pop
pusha
fwait
jnp
data16
lods
dec
scas
xchg
adc
dec
cmc
lret
fstpt
movsl
xlat
add
in
scas
loopne
nop
or
jb,pt
int
mov
int3
sti
xor
xchg
sbb
into
add
insl
and
fs
push
and
and
xor
inc
mov
sahf
xchg
jg
loope
decb
les
mov
add
push
int3
adcb
bound
push
pop
data16
cmp
mov
js
lret
stos
jecxz
pusha
jnp
mov
adc
loopne
xchg
xchg
sbb
mov
jne
rcll
xchg
and
sub
pop
jnp
lret
les
jg,pt
enter
rclb
fmul
push
ficomps
sbb
pop
sarb
sahf
inc
fdivr
and
out
mov
fnstcw
js
loope
xchg
sahf
xlat
pop
jle
mov
adcl
ss
nop
cld
mov
loop
xchg
scas
push
ljmp
lret
add
movsl
fnstcw
mov
mov
shlb
cli
mov
xlat
fmulp
cmp
sub
cmp
into
pop
loope
xor
fisubrs
rcl
xor
push
lcall
dec
fwait
outsl
lds
aaa
jns
sbb
cli
int3
insl
clc
fneni(8087
or
push
cltd
sti
inc
loopne
clc
into
ficoml
repnz
cld
jle
mov
mov
and
xor
jge
incl
mov
push
mov
in
jbe
add
in
inc
pop
sbb
jne
push
inc
out
mov
stos
and
cmp
cmp
ret
inc
fcmovb
cmp
addl
clc
imul
in
rcr
inc
dec
repz
out
clc
and
inc
pop
and
or
fiaddl
or
mov
repz
cmpsb
leave
into
loope
mov
aad
mov
push
imul
fisttpll
mov
stos
scas
push
sbb
push
push
mov
ficoms
mov
xor
sbb
mov
lods
rorl
insl
inc
pop
inc
and
adc
ss
xlat
cmovs
cli
ljmp
and
repnz
aas
ljmp
clc
sub
inc
push
outsl
mov
push
scas
sbbb
add
dec
out
cmpsl
fimull
loop
mov
and
sub
out
sub
sbbl
cmp
push
ret
inc
sbb
and
mov
lret
dec
push
cmp
addb
xchg
add
mov
fs
push
xchg
fidivrs
iret
sbb
clc
push
adc
adc
cs
pop
inc
or
mov
dec
mov
adc
adc
jb
test
adc
cs
fs
outsl
xchg
xor
inc
sbb
or
mov
mov
out
add
dec
inc
scas
enter
mov
sub
inc
inc
jb
rcrb
mov
mov
rorb
icebp
andb
xor
insb
int
out
aas
dec
std
jge
mov
jo
pop
ss
cs
ret
push
and
jecxz
les
push
push
aas
ret
mov
mov
data16
cwtl
enter
adc
cmp
inc
std
xlat
adc
inc
inc
pushf
jmp
aam
cld
push
mov
jne
sarl
movsl
inc
adc
test
jecxz
std
cmpsb
adc
movsl
loop
sahf
int3
dec
aad
and
cmp
test
mov
faddp
aas
sub
sbb
fstpt
or
ljmp
in
xor
push
sub
pushf
mov
lcall
sub
sbb
xchg
jmp
jno
popf
adc
clc
mov
int3
lods
or
fcom
dec
lea
shlb
in
enter
push
push
adc
sbb
aas
mov
into
js
loop
testl
push
inc
in
hlt
or
clc
sbb
shr
push
sbb
mov
imul
jo
pop
push
insb
push
push
jecxz
lods
add
ss
cmp
dec
hlt
and
incb
jl
fdivrp
lret
sub
mov
into
xor
int
push
cmp
cli
repnz
lea
cmp
fldenv
jp
pop
cmp
lods
adc
adc
fstpt
fnsave
mov
scas
push
pop
stc
pop
es
inc
mov
repnz
mov
jnp
outsl
xor
sbb
mov
xlat
rcrb
pushf
mov
lret
cmpl
sub
xchg
dec
ret
pop
push
cmc
mov
arpl
daa
shll
imul
cmp
lret
aam
jbe
lds
das
or
jecxz
std
mov
fidivs
orb
les
jae
adc
xlat
push
ret
or
or
cli
stos
push
cmp
or
sub
ror
fdivrp
cmpsb
sti
xchg
mov
ret
std
faddl
ret
push
sub
enter
mov
mov
aam
inc
out
jl
iret
cmp
xchg
mov
jmp
rclb
es
scas
popa
jg
loope
test
dec
dec
lahf
sub
in
imul
mov
adc
sbb
jo
scas
enter
fmul
leave
ds
out
pop
sub
dec
scas
xchg
std
mov
adc
repnz
sub
cs
jecxz,pn
out
ss
roll
adc
mov
or
cwtl
dec
shl
inc
mov
enter
addr16
xchg
movb
cmpsl
inc
push
aas
rcl
lret
lods
push
pop
and
and
fsubrs
pop
aam
lea
mov
enter
pop
push
aas
jo
fwait
neg
mov
xlat
popa
sarb
xchg
in
call
jg
ret
je
fcmovb
pushf
or
dec
loop
outsb
pop
dec
mov
sub
sub
xlat
je
jge
sbb
lret
imul
in
scas
lods
ret
push
bsf
push
inc
sbb
js
xchg
lret
mov
cli
lret
cmp
ss
outsb
mov
scas
cmp
sahf
push
push
filds
push
push
out
adc
loop
dec
pop
cmc
lahf
je
shll
iret
jp
scas
mov
pusha
fldt
icebp
std
dec
scas
xchg
cmp
lcall
js
push
xor
or
test
fwait
cmpsl
loopne
cld
ret
dec
mov
stos
jecxz
mov
dec
mov
inc
xor
adc
aas
push
into
push
into
jne
xor
pop
incb
add
jns
sub
std
int
mov
lret
xchg
ljmp
movsb
mov
cmp
mov
out
mov
test
lahf
jbe
mov
aas
sti
mov
rcl
mov
cs
pop
data16
mov
mov
mov
adc
jb
mov
jge
call
push
in
push
jmp
adc
out
fcoms
sub
lret
insl
inc
cs
lret
mov
xlat
insl
xchg
cli
ret
cld
sub
xor
pop
ficoml
stc
push
unpcklps
push
aam
sbb
lret
aas
cld
aaa
dec
push
ds
dec
lret
dec
ror
test
out
xor
pop
repz
mov
pop
jecxz
nopl
lock
push
mov
cmp
lcall
sbb
adc
je
insl
cmp
leave
mov
arpl
jmp
sahf
loopne
scas
pop
xor
or
jo
xchg
iret
aad
pop
mov
inc
dec
ficomps
in
aas
cld
daa
cmpsb
sti
loopne
mov
mov
mov
xor
aas
aas
adc
xchg
mov
cmp
int3
sub
inc
mov
mov
add
inc
ss
shlb
push
ljmp
mov
iret
aad
mov
cli
ficomps
lahf
sbb
ljmp
int3
or
loopne
xor
add
lods
inc
or
mov
xor
loope
shlb
adc
cmp
jnp
pop
iret
into
incb
test
hlt
ja
loope
lock
cld
gs
cmp
push
cmpsb
or
fsubr
arpl
lea
cli
int
jp
sti
jo
cmp
cmpsl
adc
pop
mov
ljmp
push
out
movntps
nop
fld
ret
out
lret
aam
push
inc
testb
int
add
into
loop
and
ljmp
jp
add
je
negl
repz
ficompl
add
ds
movsl
sub
hlt
xlat
daa
movsl
push
pusha
add
mov
orl
ljmp
rcrb
js
fcmovb
cmpsb
cmp
fnsave
sahf
mov
cmp
add
scas
xor
loope
rcl
shl
inc
push
dec
lods
nop
or
mov
shrb
outsb
jbe
add
repnz
addr16
mov
ljmp
lods
mov
mov
or
int3
test
sub
fs
jo
add
push
sub
push
fdivs
jl
adc
imul
loope
pop
subb
cwtl
enter
fsts
or
mov
scas
push
mov
mov
and
sub
cmp
cmp
ljmp
xchg
stc
ljmp
xor
mov
push
jg
nop
xor
push
xlat
jnp
cli
mov
xchg
xor
mov
push
jmp
dec
jne
fisubrs
jle
sub
dec
js
sub
scas
loop
cmp
icebp
inc
add
addr16
call
repnz
clc
sarb
sbb
mov
bound
out
or
xlat
ret
hlt
dec
adc
loope
mov
dec
jns
lcall
rorl
jns
flds
iret
movsb
inc
jp
mov
pop
jmp
lahf
jg
push
out
outsl
stc
jb
stc
iret
sahf
xchg
add
pushf
mov
ds
or
xlat
test
mov
scas
mov
incb
dec
call
pop
dec
cmpsb
fsub
dec
aaa
stc
xor
xlat
outsb
repnz
das
cmc
testb
stc
ret
xchg
xchg
and
push
bound
sub
call
jns
xor
cmp
call
adc
add
shrl
scas
mov
mov
jae
or
xlat
push
jbe
lret
ljmp
lret
cmp
jo
inc
ds
in
push
push
mov
repz
ret
insb
lret
jp
push
jmp
mov
mov
das
mov
stos
lahf
mov
rorb
sarb
mov
mov
outsl
ja
mov
dec
pop
push
fldl
add
push
stc
arpl
mov
rcr
mov
push
cs
das
and
lock
xor
xor
xchg
cmp
stos
scas
lcall
mov
aaa
dec
cmp
inc
inc
mov
leave
adc
add
sub
in
and
push
add
fidivl
ljmp
push
ljmp
cltd
imulb
outsb
fcmovne
adc
mov
cmp
repnz
pop
lret
roll
add
ficompl
lea
mov
aad
ret
repz
push
jns
addr16
cmpb
push
jp
inc
shll
lahf
int
mov
dec
mov
cld
ret
daa
insb
inc
rcr
fisttpll
adc
push
fdivp
xor
cmc
cmp
jle
pop
push
push
sbb
test
add
push
mov
jne
enter
inc
pop
and
and
pop
xchg
or
push
mov
dec
lcall
fwait
jg
in
mov
jno
push
or
gs
mov
rolb
movsb
mov
sahf
mov
inc
rorb
pop
fldcw
mov
xor
insl
pop
jbe
pop
lock
imull
mov
ss
pop
pop
cmp
or
adc
add
push
ljmp
std
clc
lahf
cmc
cmp
xor
ds
jne
test
xchg
or
ss
clc
sbb
sti
push
mov
ss
data16
cwtl
push
mov
fmuls
push
fldl
dec
mulb
mov
sbb
or
cmp
icebp
cmp
add
arpl
inc
sub
xor
push
add
xlat
clc
or
clc
xor
lret
and
jb
sbb
mov
push
lcall
jne
div
ds
insl
adc
out
adc
lret
or
jno
fcmovnbe
out
inc
cmpsb
or
addb
fisubs
sub
aas
and
rcr
aaa
fistpll
outsb
ljmp
scas
clc
pmaxsw
mov
repnz
add
ret
fstps
es
push
or
fcmovnu
iret
shrb
int
outsb
cmp
jl
lods
sahf
add
ror
jns
jp
rcll
sti
rolb
out
loop,pt
jge
mov
or
ljmp
ljmp
je
sub
mov
pop
add
push
fstps
sub
xchg
ficomps
hlt
mov
pop
in
jl
mov
push
imul
mov
sahf
xchg
inc
pop
orb
leave
pop
cli
push
cmpsb
push
jno
andnps
mov
lods
das
ss
shlb
xor
add
adc
or
mov
stos
sub
pop
lods
sub
sub
addb
lds
xlat
mov
cmpsb
loopne
push
cmc
adc
dec
mov
js
xlat
sbb
push
ljmp
cmc
stos
fidivs
mov
add
gs
jl
sbb
leave
stos
mov
fcoms
sti
cmpsb
cmp
outsb
lcall
int3
fidivs
mov
adc
mov
push
enter
js
sub
lock
push
jbe
test
mov
imulb
hlt
jmp
div
ja
sub
test
inc
rclb
sbb
fnsave
mov
dec
jnp
jb
add
das
test
pop
dec
sub
rcrb
and
xchg
sbb
sub
cmp
inc
xchg
mov
aas
mov
jl
bound
mov
adc
leave
rcl
jae
sbb
out
push
mov
lahf
fcmovnbe
mov
push
mov
cmp
arpl
fdivp
pop
and
addr16
sbb
mov
xor
xchg
and
fisubrs
mov
xchg
aas
push
repz
inc
cmp
mov
mov
in
lock
ficomps
loopne
add
push
jg
xchg
enter
push
add
xchg
xor
jo
sbbb
sub
add
mov
jg
mov
loope
into
mov
stc
xor
push
ss
int
gs
push
fdivr
lret
adc
cmp
adc
jno
cmpsl
adc
jge
out
mov
aad
dec
repnz
xchg
cmp
jo
in
pop
aas
aad
lret
leave
jg
mov
shlb
mov
outsb
out
adc
jle
inc
pop
enter
or
xchg
or
xlat
fisubs
cmp
or
testb
or
aaa
add
mov
dec
or
rol
mov
lock
int3
inc
enter
scas
or
sti
out
mov
mov
jg
adc
addr16
mov
cli
loopne
mov
stc
mov
loope
mov
or
jecxz
jg
xchg
sub
stos
add
iret
idiv
fstpt
repz
ja
pop
cli
jp
push
push
push
int3
push
xlat
xchg
sbbl
adc
xor
lcall
pop
aas
cmp
xchg
sub
or
mov
dec
mov
cmp
mov
pusha
inc
xor
idivl
mov
pop
enter
ljmp
scas
inc
fildl
dec
cwtl
jp
sbb
lret
enter
lea
xor
xor
ret
es
lret
lods
ss
jl
fwait
in
cli
mov
ds
mov
mov
idivb
mov
xchg
cmp
fbstp
or
test
inc
mov
loop
or
and
jg
mov
leave
push
pop
inc
lret
push
nop
repnz
xchg
aas
inc
dec
push
test
pop
ret
mov
sti
aad
int3
in
stos
inc
std
shr
sti
cmc
mov
sti
xchg
xchg
movsl
lahf
shl
mov
cli
push
leave
xchg
lret
xor
push
shl
mov
sahf
jbe
shl
and
ljmp
fdivrs
aas
adcb
fsubrl
scas
aaa
mov
push
mov
lods
mov
jle
arpl
push
or
xchg
rol
insl
loope
or
mov
mov
imul
lret
jle
inc
in
in
fadd
dec
mov
push
orl
jo
lock
mov
scas
pop
test
call
sahf
inc
aad
pop
sbb
daa
into
and
lret
pop
jge
sbb
popf
mov
and
repnz
int3
push
call
mov
jg
inc
push
lahf
aam
lods
and
fadd
mov
lcall
das
or
xor
daa
jnp
rcrl
sbb
fidivs
xchg
fs
enter
xor
loope
sub
pop
mov
xchg
rol
lods
sbb
test
adc
adc
jg
les
cs
jmp
push
xlat
jmp
mov
fsubp
or
nop
push
aas
or
mov
jo
test
int
sahf
in
test
enter
das
leave
lss
loop
push
and
mov
test
cmp
xor
xor
test
rorl
xchg
jnp
fcompl
mov
push
je
in
outsl
xchg
add
ror
jo
roll
sahf
mov
mov
or
mov
ja
or
dec
mov
test
into
cwtl
js
das
es
lret
push
cld
rol
adc
mov
sbb
cmp
insl
jp
and
push
idiv
pop
and
sbb
subw
outsb
xchg
adc
fwait
mov
scas
or
pop
js
xor
repz
adc
aam
jmp
xor
pop
stos
in
dec
mov
hlt
into
fstpt
xchg
push
mov
addb
out
cltd
add
cmp
loopne
clc
mov
sub
ljmp
add
aad
sub
jo
mov
insl
xchg
cmp
or
sbb
mov
xchg
cmp
shrb
js
mov
cmpsb
test
pop
cmpsb
mov
pop
add
and
lret
jae
fmul
not
lds
push
cmp
inc
mov
fldt
enter
fs
lds
sbb
mov
loope
mov
ljmp
fwait
lret
mov
pop
ja
sub
xlat
jb
leave
inc
sti
repnz
rcrb
mov
jae
xlat
cli
or
hlt
insl
pop
xchg
aaa
add
loope
sahf
rcrb
lret
dec
inc
int
cmp
pop
not
add
test
sbb
mov
mulb
jbe
repz
mov
lret
in
cmp
mov
aad
mov
push
fistpll
imul
enter
pop
cli
mov
push
imul
add
push
add
fsubrs
out
addr16
hlt
divl
mov
mov
jo
sbb
lret
and
inc
std
insb
clc
loop
pop
lret
dec
xchg
in
mov
repz
div
ss
fiaddl
cmc
stc
push
rcrl
aas
mov
dec
adc
pushf
fmulp
stc
pop
xor
sbbl
cli
ss
pop
fcmovnu
and
call
cli
or
fnsave
lret
outsb
mov
lcall
pop
cwtl
cmp
mov
scas
js
sti
xchg
nop
fsubrs
adc
push
or
cmp
cwtl
mov
sub
jo
adc
jbe
add
lds
js
mov
movsb
mov
push
dec
dec
in
aas
clc
ljmp
adc
ret
daa
sbb
enter
movsb
push
js
icebp
mov
sarb
das
xlat
dec
pop
adc
aas
pop
fwait
fwait
jl
leave
mov
lret
sbb
xor
pop
pop
mov
ficoml
cltd
xchg
xchg
dec
jle
test
enter
out
adc
jge
in
dec
pop
jb
out
xorl
cmp
add
in
rdpmc
inc
lahf
imul
push
dec
leave
sub
dec
cmp
adc
mov
scas
mov
lcall
sub
icebp
lods
cmp
jle
jle
aaa
inc
outsl
adc
leave
cli
mov
jl
bswap
inc
shlb
popa
sub
test
push
cmp
jo
and
sub
push
and
or
cld
add
fsubl
inc
cmp
movb
inc
fdivs
aaa
pop
idivl
lret
outsb
or
sub
sbb
out
xor
add
cld
add
addl
ror
fisubrl
add
test
movsl
and
cwtl
lds
sahf
subl
jp
inc
cmpsb
push
cmpb
lret
inc
stos
sub
stc
mov
mov
adc
inc
into
aas
xor
pop
rcrl
cmp
add
jle
dec
sbb
fidivrs
fadds
mov
inc
cmp
xorb
lcall
ljmp
pop
pop
call
std
ds
pop
cmp
jae
movb
push
add
dec
sub
testl
ljmp
cwtl
push
ds
adc
ficoms
jae
cmp
cmp
int3
rcr
or
scas
mov
lahf
cli
rol
mov
in
shll
mov
add
call
cmpsb
sbb
jl
cmp
or
mov
pop
in
loop
sub
je
lods
xchg
js
xor
in
mov
jecxz
fwait
jle
push
xor
loop
jle
les
dec
xchg
pop
mov
mov
call
inc
push
inc
dec
fcomp
popa
jecxz
dec
cs
or
call
and
mov
jo
leave
roll
add
mov
iret
pusha
add
repz
sub
jecxz
leave
mov
inc
cmp
inc
mov
fs
jecxz
or
dec
in
jbe
sub
adc
sbb
lcall
lods
jg
test
repz
fisttpll
xor
jo
loope
push
sub
mov
and
std
cwtl
mov
xor
mov
push
push
shl
add
mov
into
jo
adc
adc
lock
aas
push
cmpb
lahf
push
int3
mov
push
mov
sub
sub
xor
inc
out
dec
mov
lahf
push
cmp
cmp
cmp
mov
out
jle
mov
mov
sub
into
mov
sub
dec
mov
or
test
jecxz
push
sbb
sbb
lret
adcb
rcrl
and
daa
xor
sub
inc
jp
out
clc
push
data16
adc
mov
push
inc
imul
stos
xor
pop
cmpsl
sbbl
in
repz
inc
scas
lods
insl
scas
jmp
popa
mov
fs
shrb
sub
fcmovb
cwtl
sub
sub
rcl
push
sbb
ds
inc
outsl
sbb
repnz
mov
lret
dec
sahf
je
out
or
sub
and
fiaddl
pop
and
imull
and
fistpll
lock
jle
ret
stc
and
bound
jl
adc
lods
inc
ror
fcompl
cmp
jmp
push
cld
repz
aas
cwtl
loope
ret
lock
sub
pop
pop
imull
mov
ret
imul
sub
or
ja
into
mov
inc
fdivrp
iret
fsub
add
stc
sub
inc
gs
mov
ret
loopne
shlb
loopne
ja
xchg
lret
out
mov
dec
rcrl
mov
xchg
out
lahf
mov
scas
inc
scas
dec
jne
sbb
fistpll
daa
ds
mov
fs
cwtl
xor
rcrl
out
aad
dec
dec
clc
idivl
or
iret
test
xchg
sbb
xor
nop
jmp
repnz
dec
xor
sub
jecxz
pop
ret
stos
icebp
xor
lds
or
lea
adc
mov
cmp
mov
in
pop
add
jb
cs
gs
mov
xchg
pusha
lea
push
push
mov
mov
jl
je
add
mov
push
inc
cmpb
push
stc
xor
les
or
sbb
bound
dec
sti
mov
jne
mov
iret
shr
lret
inc
push
mov
aaa
push
push
jnp
mov
outsb
movb
scas
rorb
mov
icebp
dec
sahf
mov
xor
int
push
pop
fwait
xlat
insl
scas
int3
cs
ja
push
mov
sbb
pop
add
push
jle
rorb
adc
jnp
sti
in
cli
mov
mov
fmuls
fsubs
into
cmp
jp
mov
dec
gs
cltd
push
mov
cltd
fnsetpm(287
xor
inc
fsubrs
ss
stc
pop
fcoms
mov
cmp
out
xchg
andl
push
mov
aas
lods
mov
iret
mov
stos
mov
push
mov
mov
je
pop
mov
pop
stc
push
jle
xor
sbb
outsb
pop
iret
mov
add
mov
iret
pop
add
add
leave
sti
loopne
push
dec
or
sbb
fdiv
cmp
sti
clc
mov
pusha
lahf
gs
mov
sub
scas
leave
cmpsb
pusha
inc
dec
adc
inc
std
sti
dec
ret
fildl
cmc
inc
and
imul
bound
fcmovbe
jo
sbb
mov
cmpsb
jp
sub
cwtl
rcl
les
rolb
jp
hlt
adc
jno
mov
sahf
xor
imul
dec
or
orb
hlt
gs
sbb
mov
test
sbb
imul
or
lds
sub
jle
pusha
pop
in
inc
cld
ljmp
fimull
mov
lcall
mov
stos
cmp
xor
sub
mov
sbb
fnstcw
js
jno
out
je
js
in
lret
xlat
or
sbb
in
jmp
out
idivl
cmp
or
inc
dec
jle
sbb
or
testl
mov
cmp
xor
mov
cmp
jns
lock
or
mov
lcall
pop
sub
aas
xor
int
mov
cltd
cmp
fwait
stc
mov
xchg
mov
cmp
aad
mov
fcompl
pop
popa
sub
pushf
std
mov
push
inc
sbb
adc
mov
dec
hlt
fists
add
adc
inc
fldpi
sub
inc
sbb
sbb
faddl
mov
aad
push
lret
mov
mov
icebp
bound
dec
fidivrl
cltd
or
jns
cmp
addl
lret
stos
mov
sbb
fimuls
dec
std
cli
jns
sbb
ss
cli
mov
xor
sub
cmp
push
cmp
push
cli
lahf
mov
or
jnp,pt
fcoms
cmp
push
fsubrs
push
pop
pusha
sahf
inc
imul
pop
inc
leave
sub
int3
dec
out
or
aas
fiaddl
ret
or
dec
mov
jne
stc
repnz
imul
sub
mov
sbb
es
movsl
sbb
adc
ss
fidivs
pop
mov
stos
adc
ficomps
sbb
dec
inc
push
icebp
clc
enter
fs
push
mov
sub
ficomps
dec
jp
mov
int
fimull
in
js
fs
mov
sahf
movsb
jbe
lock
add
cmp
mov
enter
jle
push
sbb
adc
scas
add
decb
mov
jnp
aaa
mov
aas
push
sahf
fsubl
add
ror
lret
inc
cmp
dec
mov
push
jbe
pop
in
mov
and
pushf
dec
fstps
inc
jle
cmp
or
shll
push
aas
push
and
lret
cld
pop
int3
das
pop
sub
xor
int3
jl
popf
cmpsl
aam
ret
sub
xor
dec
mov
aas
lds
jmp
inc
and
mov
cs
rcrb
inc
dec
mov
add
test
subl
lret
lahf
cmp
aaa
xorl
ja
mov
pop
leave
jle
cli
add
mov
sub
test
cmp
insl
add
cmpsb
and
in
outsb
daa
dec
call
out
or
sub
sbb
jno
sahf
mov
mull
push
push
test
outsl
mov
js
lods
imul
les
adc
xchg
adc
pop
jge
inc
icebp
sbb
xlat
popa
clc
pusha
fs
fidivl
and
or
inc
cmp
sbb
sub
fildl
and
out
jmp
inc
incb
cmpsl
stc
dec
sub
mov
pop
adc
xor
aad
jl
dec
loopne
test
fldcw
std
mov
mov
xchg
lahf
mov
ss
shrb
fisubrl
repnz
mov
push
xchg
repnz
lock
add
xchg
mov
cli
clc
sub
push
cli
or
inc
cli
mov
mov
mov
cmc
lret
ds
clc
pusha
je
roll
jp
ret
lcall
push
in
aas
daa
inc
outsl
pop
jo
adcl
dec
sti
enter
jb
jnp
jo
fdivrs
fmulp
mov
std
loopne
test
call
xor
leave
ja
sub
add
add
enter
fstpl
decb
cmp
xor
aam
fsts
cwtl
jle
ficompl
fnstcw
cld
add
cli
cmc
adc
neg
jae
clc
mov
aad
cmp
xchg
sub
out
clc
ds
shrb
rorb
cli
pop
push
arpl
mov
jl
and
pusha
xlat
xchg
std
jo
jge
add
leave
sub
mov
mov
testl
ds
xor
enter
insb
pop
test
and
add
sti
in
loop
jb
or
fdivs
pop
mov
adc
repnz
mov
cld
sahf
and
imul
xor
push
shl
aad
sub
mov
jmp
mov
sbb
inc
cs
or
fdivrp
sub
cmc
cmc
test
into
inc
stc
sbb
test
or
mov
mov
cmp
pop
mov
xchg
mov
inc
jle
cli
xor
sub
pusha
gs
mov
fcoml
clc
dec
pop
cmp
add
in
ds
push
pop
inc
add
cmpsb
or
cmp
mov
pop
test
out
xor
ds
inc
sbb
pop
inc
jo
mov
cmp
outsl
pushl
push
ja
outsl
xchg
push
mov
inc
dec
xchg
aas
adc
dec
ret
imul
cli
movsb
scas
inc
inc
rcl
lcall
inc
xchg
adc
pop
xor
cli
mov
inc
pop
ret
dec
or
mov
fcoms
ljmp
mov
add
mov
mov
xchg
push
fnstcw
js
mov
pop
cld
ds
scas
add
bound
push
cli
es
int3
aaa
inc
faddp
out
inc
inc
in
cwtl
or
sti
stos
clc
fisubs
adc
lahf
sarl
insl
ss
inc
push
pop
sub
repnz
in
inc
dec
adc
clc
jecxz
maskmovq
notl
add
push
inc
xlat
xchg
pop
push
add
lcall
xlat
xor
add
jecxz
mov
push
sti
sub
adc
test
bound
and
add
inc
in
shl
xlat
rolb
jb
inc
adc
or
stos
cmp
add
add
cli
sti
inc
push
ss
jp
pop
and
jp
decl
lahf
std
gs
mov
sbb
cmp
mulb
push
scas
xor
jbe
or
sbb
pop
xchg
sbb
in
mov
fcomp
jno
jb
jle
jnp
out
push
int
clc
out
adc
ljmp
clc
add
ds
lahf
jae
or
repz
sbbl
adc
jge
sti
int3
ds
inc
xor
push
out
fcompl
bound
ljmp
aam
idiv
vcvtps2pd
pop
push
mov
std
aaa
pop
sbb
sarl
js
mov
clc
add
dec
add
pop
fcmovu
lock
shlb
push
dec
movsl
sahf
xor
pop
in
pop
lret
arpl
pop
sbb
inc
push
pop
adc
pop
fxch
jp
outsb
xlat
cmp
mov
cmp
push
cwtl
push
out
mov
fsubp
and
xchg
xchg
push
mov
sub
xchg
enter
push
inc
add
bound
out
sub
jecxz
pop
jae
aad
pop
fstpt
xlat
cwtl
push
mov
out
jo
data16
cwtl
sahf
stos
pop
add
jnp
cmp
cmpsl
cmp
inc
jns
or
sbb
adc
inc
unpcklps
mov
xchg
push
pop
mov
cmp
pop
push
clc
add
jne
ljmp
push
dec
into
loop
push
std
push
add
add
pop
inc
fcomip
sbb
cmp
pop
fmuls
dec
dec
cwtl
lcall
mov
cmp
in
std
mov
push
aaa
sbb
xchg
shlb
arpl
inc
sbb
movsl
pop
xchg
add
push
mov
cli
clc
stc
add
push
push
xchg
cmc
loop
cld
add
bsr
std
add
mov
cwtl
fimuls
push
push
shufps
out
or
xlat
add
repz
pop
pop
cmpsl
add
imul
xchg
or
sub
and
in
sub
pop
sbb
adc
mov
dec
popa
mov
aad
push
incl
or
in
dec
push
nop
push
push
add
into
inc
mov
add
or
lock
out
cmpsb
xor
adc
add
adc
out
int3
mov
neg
jb
sub
sahf
or
cli
shlb
int3
push
xlat
stc
push
test
mov
sub
cs
and
pop
sub
in
sub
push
and
in
decl
cmpsl
add
out
or
loop
pusha
inc
loope
inc
add
dec
cmp
mov
push
mov
imulb
sub
xchg
or
sbb
fidivrl
xlat
cs
clc
add
and
push
mov
pop
mov
aaa
jnp
add
fucom
lods
and
ret
movb
idiv
repz
push
cmc
ret
ja
push
sahf
inc
mov
mov
shl
mov
iret
mov
cltd
adc
add
int3
das
negl
lret
sar
and
fsub
fadds
or
add
jecxz
test
jne
pop
negl
mov
mov
or
out
jp
push
cli
sti
stos
mov
in
mov
sbb
push
pop
test
pop
loopne
cld
lock
sub
push
test
lahf
inc
mov
jecxz
loop
fwait
add
push
adc
popf
or
fs
popf
mov
jbe
in
sub
sbb
mov
negl
mov
jmp
pop
iret
or
dec
dec
pop
and
sub
filds
loopne
or
iret
ss
xchg
mov
in
cmp
fcmovu
lret
jge
sahf
pop
xor
nop
xor
sub
iret
adc
sti
push
pop
sub
jp
dec
or
jmp
add
sub
adc
jecxz
scas
scas
cmp
or
popa
stc
mov
pop
pop
mov
sbb
shrl
rorb
lret
shrb
xor
test
dec
mov
sub
xchg
stos
mov
push
sub
cmpsb
cmc
mov
int
andl
inc
pusha
jle
mov
int3
push
in
outsl
pop
out
sahf
lock
dec
add
shlb
enter
mov
mov
push
aas
sbb
mov
add
flds
lcall
sahf
mov
pop
push
dec
iret
sub
shrl
sbb
xlat
dec
test
rorb
outsl
es
pop
pop
mov
xor
xchg
cld
pop
sub
jo
out
loopne
push
jle
adc
or
inc
in
jge
leave
loopne
sbb
add
outsb
xor
int
xlat
mov
or
imull
jmp
xlat
aad
mov
cmpl
stos
cmp
lahf
jge
inc
push
sahf
mov
out
fadd
pop
mov
pop
add
add
push
loopne
scas
cmp
cmp
cli
scas
fnstcw
sti
ret
dec
cmp
out
mov
out
shl
jo
pop
shrl
adc
jl
gs
cmp
mov
std
hlt
ds
decl
mov
pusha
mov
popf
pop
push
test
jle
enter
dec
sbb
jle
cli
pop
and
push
add
xor
adc
pop
sbb
or
sti
push
xchg
mov
into
dec
aam
idivl
and
mov
adc
jl
icebp
movl
jne
mov
or
xor
stos
mov
ret
daa
sub
mov
xchg
arpl
loope
pop
inc
xchg
inc
daa
sbb
add
clc
push
adc
jo
push
in
loopne
daa
lock
mov
sbb
imul
lret
cmp
jne
inc
enter
sbb
xlat
ja
fsts
stos
mov
in
sti
pop
cli
xor
ljmp
jnp
xchg
sub
pop
stc
sahf
in
ds
mov
push
and
out
lcall
leave
nop
and
push
xlat
fwait
pop
adc
and
push
nopl
sti
sbb
clc
push
xlat
cld
pop
mov
fcoms
es
mov
cmp
fiadds
or
mov
or
cli
add
not
stc
ljmp
inc
xor
nop
int3
adc
setg
mov
mov
fcom
pop
ljmp
cmp
mov
dec
or
repz
scas
mov
pop
sbb
popf
push
lret
cmp
mov
pop
xchg
sbb
xor
clc
test
ja
call
loop
cmp
pop
mov
outsb
cmp
cli
fwait
mov
fcomp
repnz
pop
jns
out
aas
lods
mov
jb
adc
add
sub
push
cli
inc
mov
adc
insb
xor
add
push
sub
sub
addr16
adc
clc
clc
in
test
arpl
ret
loopne
dec
loopne
frstor
push
or
pop
pop
leave
sbb
scas
stos
jo
or
dec
adc
cmp
imul
scas
dec
mov
mov
mov
mov
pop
xor
mov
inc
mov
cwtl
jmp
xchg
pop
lds
cld
adc
dec
mov
lods
jecxz
lock
mov
xchg
xchg
mov
sarb
out
daa
mov
jecxz
cmp
fs
mov
nop
lods
jge
mov
pop
loopne
and
hlt
mov
sarl
lahf
cmp
cmp
cmp
mov
pop
and
and
js,pn
repnz
lret
or
adc
rorl
add
rcrl
push
bound
sahf
shll
clc
sub
movsb
mov
clc
ss
data16
and
cmp
outsb
ds
xchg
insl
jle
and
pop
sub
sti
and
dec
pop
and
pop
out
test
and
push
inc
sbb
add
icebp
mov
cld
es
jbe
and
sub
and
clc
xor
push
es
sbb
push
int3
fdivrp
and
sub
pop
xchg
sbb
ljmp
sub
push
rcr
pop
inc
hlt
inc
pop
sbb
cmp
sub
lods
mov
pop
popf
lret
rcrb
ds
sbb
jbe
adc
cli
sbb
push
pop
cmc
aam
dec
sbb
push
lea
pusha
xchg
ret
in
in
dec
jg
das
ds
push
mov
adc
cmp
insl
sahf
or
leave
aad
frstor
push
or
shrb
mov
and
sub
cmp
cmp
icebp
in
push
or
inc
mov
push
cmp
inc
sub
cmp
mov
mov
jp
and
jo
ret
sbb
hlt
or
negl
pop
inc
jo
xchg
cmp
push
int3
cltd
aas
incl
xor
jo
xchg
mov
or
clc
mov
jb
push
movsb
das
xchg
jp
les
dec
lret
scas
repz
jne
sbb
cmp
mov
shl
subb
outsl
adc
mov
jmp
add
or
lahf
fld1
cli
mov
scas
popf
mov
mov
lret
jnp
mov
mov
lret
fdivrl
jnp
fwait
inc
repnz
jb
dec
inc
call
idiv
push
psllq
test
pop
test
fnstcw
inc
push
ds
call
jnp
cmpb
inc
inc
jle
lcall
add
xchg
lret
int3
jecxz
mov
xlat
inc
sarb
clc
pushf
push
ret
pop
leave
clc
dec
fmuls
dec
aad
shr
mov
call
xchg
push
fisubrs
aam
clc
push
inc
mov
mov
xor
mov
test
cwtl
jg
inc
jnp
test
into
jbe
clc
lahf
sub
adc
sub
loop
cwtl
int3
std
xchg
lret
and
xchg
cltd
dec
lret
jp
sub
jmp
pop
out
faddp
xchg
push
push
add
movsl
into
cltd
xchg
into
out
push
out
mov
popf
inc
pop
je
push
movb
mov
push
mov
inc
add
and
clc
or
jecxz
aaa
enter
jo
adc
add
push
jg
mov
cli
rcr
leave
std
pop
lret
or
mov
add
test
xchg
sbb
movsl
fcomps
scas
in
mov
leave
sahf
xor
jb
test
cmp
lahf
loop
jb
inc
aas
jmp
ret
fldcw
dec
mov
mov
test
sub
cltd
mov
leave
in
test
test
adc
mov
pop
fisubs
sbb
movsl
add
inc
dec
push
lret
dec
mov
ds
lahf
dec
mov
lret
fisubrs
sbb
test
into
jne
jle
inc
sub
out
push
and
jb
cwtl
ss
int3
stos
int
inc
mov
jl
cmp
ret
jno
fisttpll
movsb
mov
dec
push
jbe
lret
ficoml
jp
xchg
loop
pop
aam
push
jle
adc
pop
jle
das
add
jle
das
pop
mov
add
enter
pop
add
popa
mulb
test
divl
adc
ds
inc
in
scas
pop
sub
xchg
hlt
or
cmp
push
scas
loopne
cmp
popa
pop
xor
cmp
cmc
in
jp
stc
insb
cmp
popf
sbbb
ds
adc
mov
dec
std
ficomps
mov
iret
testb
mov
dec
push
pop
inc
dec
cli
mov
pop
cmp
cld
push
fucom
fisubrs
sti
iret
inc
push
in
cmp
in
sahf
add
test
cmp
push
lret
loop
aad
into
jge
or
stos
add
mov
jecxz
jnp
cli
cmpsl
mov
lods
ja
or
xor
scas
icebp
enter
clc
inc
fbstp
cmp
shl
or
fdivrs
fstpt
aas
cmp
mov
fdivrl
not
fmuls
adc
outsb
jno
std
mov
js
loope
xor
mov
xchg
sbb
popl
outsb
sbb
cli
inc
jo
cltd
inc
negl
jb
add
xchg
in
and
sahf
mov
dec
inc
call
xchg
jne
cwtl
je
or
mov
ljmp
mov
sub
push
mov
sbb
or
xor
jnp
xchg
add
pop
ret
or
fsubl
jnp
jne
add
sub
jno
outsb
jmp
xlat
lret
pmaxsw
or
or
decb
enter
in
andb
clc
shlb
or
add
sahf
cmc
dec
xchg
decl
mov
lret
mov
scas
fstpt
xor
ret
sub
cmp
repz
mov
mov
or
dec
and
sbb
or
pop
pushf
ds
push
add
in
js
inc
loop
in
fnstsw
sahf
adc
outsb
orl
jl
xor
pop
xor
mov
ret
stos
jmp
adc
stos
fadds
sbb
iret
fsubp
add
mov
fcomi
ret
les
dec
std
lret
aad
sti
pop
and
in
mov
adc
fstl
test
loope
mov
jmp
xor
movsb
mov
pop
dec
sarl
adc
stc
repnz
out
sub
push
int3
clc
mov
inc
sbb
clc
fstl
xor
add
xor
add
stos
and
dec
mov
pop
mov
movsb
test
repnz
dec
stc
jne
jne
iret
mov
cld
cltd
xlat
xor
dec
sarb
incb
lock
ret
pusha
repnz
aam
fldenv
mov
cli
cmp
jb
dec
sub
mov
or
add
or
mov
jne
sbb
imull
add
pop
iret
push
xorb
cmpsl
jnp
lods
je
push
add
cwtl
loopne
mov
lds
add
addr16
loopne
mov
fimuls
jmp
rcrb
daa
xlat
xorb
push
pushf
pop
nop
mov
mov
loope
aaa
cmp
sbb
es
fisubs
aas
push
lcall
sub
lods
loope
or
rcl
fistpl
lret
int3
fisubrl
cli
lret
mov
push
lret
bound
push
dec
cli
scas
pop
or
mov
iret
dec
fimuls
addb
jmp
pop
popa
cmp
inc
cs
ds
push
push
call
xchg
imul
adc
icebp
mov
lds
dec
or
mov
ret
or
lds
pusha
xor
fdiv
ret
loopne
cmc
xor
xchg
shlb
pop
mov
out
jbe
fiaddl
in
jnp
scas
adc
or
xchg
cld
adc
ljmp
add
lret
jmp
aam
or
xor
mov
or
adc
pop
outsl
fmul
add
rcll
jg
fwait
jp
es
lods
loopne
pop
cs
mov
pop
leave
lret
inc
cmp
lret
mov
hlt
jl
call
add
sti
mov
aam
xlat
dec
xor
push
mov
sarb
xlat
xor
in
in
icebp
push
pop
outsl
sarl
outsl
pop
sbb
enter
xchg
mov
mov
fldenv
mov
out
push
mov
mov
and
jge
test
daa
pop
cltd
aam
jp
outsb
in
jge
cmp
sub
adc
push
stc
push
shrb
fcmovne
push
hlt
pushl
or
adc
or
cmp
adc
idivb
dec
adc
pop
or
adc
mov
xchg
outsl
add
js
lret
insl
scas
sub
push
fidivl
pushf
cmp
and
jno
pop
xor
pop
adc
lock
mov
out
xchg
loope
in
repnz
fsubrs
fistpl
add
movsl
mov
inc
insb
mov
add
ljmp
inc
stc
xor
sub
ret
cli
mov
dec
xchg
testb
mov
pop
hlt
xchg
rclb
jbe
enter
push
out
add
ret
sub
jmp
push
sub
cmp
mov
rolb
movsb
mov
push
xchg
sti
mov
pusha
mov
scas
adc
loop
dec
lret
push
and
push
shr
hlt
pop
mov
add
fistps
aas
fnstcw
mov
or
in
push
fidivrl
dec
pop
jecxz
leave
out
test
adc
fists
into
enter
mov
dec
mov
je
mov
lods
lds
jns
xor
mov
in
sti
push
cmp
rcl
mov
adc
mov
pushf
and
lahf
push
aad
pop
leave
das
ss
loope
dec
cmp
ss
out
cmp
es
sti
jp
into
adc
and
fldcw
aas
dec
inc
inc
dec
lcall
fadd
aaa
stc
push
cmp
push
imul
mov
gs
cmc
mov
push
aaa
mov
pop
ret
push
pop
xchg
idivl
jmp
add
mov
push
lahf
cmp
loop
fsub
xor
pop
je
fsub
xor
adc
int
insl
pop
cmp
mov
sar
enter
cmc
enter
insb
add
cmp
ljmp
or
loopne
jo
out
mov
xor
mov
mov
jl
mov
dec
xor
fidivl
mov
sub
sub
sub
inc
mov
rorl
inc
pop
xlat
mov
cli
aaa
lds
scas
std
pop
ficoml
add
xchg
test
adc
imul
aam
or
dec
fmul
jecxz
xchg
push
jge
mov
mov
lret
fdivp
out
add
add
mov
fcmovnu
test
fnstcw
cs
xor
jecxz
jmp
in
in
mov
rol
add
sbb
fs
int
fsubrs
clc
cmp
sar
lock
cmp
loopne
rorb
in
cli
mov
pop
call
sbb
pushf
sbb
mov
loop
mov
cmp
or
lret
pop
ljmp
mov
add
inc
xchg
repnz
add
jecxz
arpl
inc
repnz
pop
or
je
lret
aas
clc
adc
ds
sbb
popa
inc
jns
fmull
adc
ret
xchg
cwtl
dec
call
mov
pop
addb
rorl
xor
rol
pushw
mov
pop
std
rcrl
mov
adc
pop
push
ret
sarb
aas
int3
inc
clc
repnz
inc
sbb
les
push
js
cld
cmpsb
sar
ds
mov
inc
ja
lahf
sahf
shl
sub
jle
pop
jno
jecxz
lahf
jg
repz
jecxz
push
aad
and
mov
out
pop
icebp
and
adc
fcom
push
push
js
inc
sarb
dec
push
les
mov
xor
xor
mov
rcr
out
mov
clc
int3
cld
shrl
ds
ret
ret
lds
addr16
jne
mov
nop
pop
push
mov
lock
sub
scas
out
xchg
sti
xchg
xor
mov
lret
mov
push
jne
sbb
icebp
sub
insl
sbb
mov
push
cmp
mov
lcall
adc
fdivrs
dec
jecxz
push
sub
push
fsubs
add
sub
fstpt
fcomps
cmp
jl
sbb
mov
cwtl
call
int
sbb
sub
call
sbbb
lds
jmp
js
arpl
movsl
mov
out
stc
lods
clc
add
sub
push
pop
fstpt
cli
cmp
push
jb
mov
int
xor
js
push
adc
popf
sti
add
adc
sbb
lds
imull
stc
loopne
notl
jp
fs
sub
sub
push
jmp
orl
jnp
pop
cmp
out
leave
inc
mov
or
cmp
mov
pushf
imul
push
insb
stc
ret
in
jl
adc
int
js
xchg
loopne
imul
loope
out
dec
mov
shrb
int
jno,pn
push
and
mov
sbb
fnstcw
jle
ljmp
mov
shrl
jl
jp
dec
xor
enter
cmp
jnp
mov
jnp
stos
fcompl
mov
xchg
xlat
repnz
inc
sbb
jae
dec
pusha
or
fs
inc
jmp
out
pop
enter
sub
push
sub
fcmovu
or
scas
loop
cmp
testb
sub
mov
mov
dec
sub
mov
cmp
mov
xor
fstps
repnz
mov
ja
iret
lret
push
cmp
push
jmp
mov
or
enter
pop
test
jne
sahf
divb
or
mov
pushf
shrl
mov
mov
dec
in
insl
or
int3
and
mov
mov
jbe
fdivrs
mov
cmpsl
add
xlat
insb
lock
sub
mov
sarl
imul
call
out
into
pop
mov
or
inc
in
mov
xor
mov
out
adc
fidivl
mov
mov
pop
stc
aaa
xchg
dec
mov
dec
enter
pusha
cli
and
fisubs
fidivl
xor
addr16
das
lret
jnp
dec
int3
add
mov
movsb
lret
push
mov
jae
push
fists
jb
mov
mov
jbe
pop
cmpsl
add
or
out
and
mov
jge
mov
icebp
sub
or
xor
cmp
xchg
or
mov
or
xor
jl
imul
mov
mov
push
std
pusha
icebp
loop
mov
and
push
enter
mov
mov
outsl
sbb
scas
outsb
in
shlb
mov
add
cmp
pop
inc
mov
jl
cmp
dec
xor
push
rcl
push
push
mov
xor
add
mov
ss
imul
std
cmpb
jge
test
fwait
sbb
mov
ret
xchg
movsb
int3
inc
pop
adc
iret
mov
aam
hlt
mov
into
js
fimull
sahf
mov
xor
cld
xor
lar
orl
and
lahf
xor
out
xor
cmpsl
fdivrs
xchg
pushl
inc
fimull
adc
popl
sub
lcall
pop
sar
ja
inc
xchg
test
mov
xlat
lea
pop
push
xlat
mov
ja
cmpsb
mov
sti
jo
sub
pop
scas
in
in
adc
dec
das
and
push
call
ds
push
sbb
fcmovnb
mov
xlat
fistpl
cld
jecxz
mov
sbb
jbe
add
sbb
cmp
imull
mov
mov
icebp
js
inc
dec
push
call
mov
xchg
xor
xor
or
add
into
sub
test
or
aaa
inc
fs
dec
icebp
mov
inc
push
mov
adc
bnd
xor
and
aam
xor
xlat
outsb
aaa
inc
lcall
cs
outsl
aaa
cmp
lcall
hlt
jle
and
sub
cld
adc
xor
sti
sub
call
pop
iret
leave
dec
mov
sub
add
push
cld
cs
das
mov
dec
outsb
push
lcall
push
and
daa
dec
je
jge
sbb
cmp
daa
mov
call
and
mov
fs
ljmp
sti
loop
jecxz
mov
adc
int3
jne
out
test
cwtl
mov
jmp
test
mov
lods
imul
push
imul
aas
repnz
arpl
test
pop
adc
sub
xchg
je
cmp
ss
mov
pop
pop
jmp
notl
or
int
or
adc
sub
cmpsb
jecxz
fiadds
outsb
inc
or
and
std
xchg
fisttpl
clc
fs
dec
cwtl
cmp
imul
js
cmp
jnp
jp
scas
pop
into
icebp
pop
pop
fildll
fstpl
jne
lods
dec
jle
clc
xchg
dec
push
push
and
stc
pop
fadd
loopne
xor
add
xchg
xchg
rcr
inc
and
mov
mov
scas
sbb
fcomps
rol
sub
push
push
push
test
push
cmp
cs
sbb
mov
jge
aaa
adc
fsubrs
orb
adc
loop
sub
hlt
leave
xor
pop
icebp
mov
push
and
pop
push
dec
or
inc
lret
clc
adc
mov
sub
sbb
jns
fdivrl
pop
cmp
jae
mov
lock
lods
dec
pusha
clc
in
data16
push
push
nop
stos
add
push
fldt
out
mov
in
fiaddl
fwait
push
fistl
cmp
hlt
xor
outsl
push
cwtl
pop
or
hlt
nop
loop
les
dec
jg
lahf
push
imul
arpl
xchg
sbb
out
sahf
leave
mov
and
mov
sub
add
call
out
stos
xchg
fcom
add
mov
jmp
stos
xor
adc
or
mov
ficoms
xchg
or
mov
adcb
sbb
nop
sbb
mov
push
lahf
test
repz
ss
clc
push
sub
jge
lock
lahf
in
test
pop
pop
jle
ret
push
sub
pop
outsl
mov
mov
addr16
push
adc
nop
cmp
fsubs
xchg
inc
push
inc
lret
jbe
push
pop
push
mov
xchg
test
inc
in
mov
sbb
mov
cmp
xchg
enter
daa
vshufps
stc
cld
xchg
outsl
sub
and
jecxz
fmul
add
jmp
xor
cli
std
cmp
fld
push
inc
pop
cmp
and
jb
cmp
inc
aam
jp
mov
lret
out
std
mov
dec
add
addr16
cltd
ds
sub
push
sti
aam
std
pop
dec
nop
loopne
leave
push
mov
sub
xor
inc
sub
out
shrb
imul
dec
fsubs
mov
out
loopne
sub
rorl
jo
lret
repnz
stos
lret
imul
roll
lret
push
mov
fimuls
lahf
and
fdivp
mov
jae
xchg
dec
ljmp
jecxz
xor
inc
test
call
jnp
lahf
stos
ret
or
lret
shl
pop
push
push
xlat
cmp
cmpsb
dec
ljmp
push
pop
fidivs
pop
ss
stc
rolb
lods
inc
dec
ret
cmpsb
dec
sbbl
outsl
fbstp
and
data16
lds
sbb
scas
jnp
or
lahf
cmc
pop
lcall
cmp
out
cmp
lcall
xor
test
ds
mov
shrb
loope
fiaddl
fnstcw
xchg
enter
or
mov
rcrb
push
lcall
es
inc
xor
xlat
push
pop
dec
pop
xor
xor
and
cmp
inc
popa
mov
dec
ss
mov
xchg
ret
fldl
outsb
sbb
add
enter
dec
ss
cmc
xor
and
cmp
pop
repnz
dec
pop
sub
xchg
aaa
pop
jo
push
lods
mov
or
sbb
sbb
lods
sarb
hlt
jge
mov
leave
sahf
sub
outsb
mov
push
push
mov
jg
lret
lds
mov
out
cmpsb
shlb
mov
cmp
pusha
fstpt
adc
push
cmp
lret
call
out
fnstsw
sarb
in
aaa
scas
outsb
loop
xor
frstor
mov
inc
ss
inc
push
in
mov
fwait
sbb
leave
dec
mov
jo
push
push
or
scas
lods
or
sbb
xchg
adc
dec
daa
mov
aas
mov
sbbb
or
sarl
clc
fmulp
or
iret
jae
ror
cli
aaa
out
add
dec
mov
daa
cwtl
rol
lea
cmpsl
stc
add
pop
push
cmp
in
cmp
sbb
mov
lds
imul
xchg
movsw
pop
inc
or
arpl
jne
shl
and
jne
push
xor
sub
std
cmp
call
imul
xchg
adc
cmp
int3
js
scas
sub
jne
out
or
and
pop
push
cli
sti
enter
rcrb
inc
push
test
dec
xor
push
pop
pop
adc
mulb
mov
mov
mov
stos
dec
xor
inc
ljmp
cs
jno,pt
sub
aam
inc
mov
pop
test
add
ficomps
gs
ficoms
jne
jb
push
mov
dec
int3
ds
mov
stos
aas
and
inc
xor
cmp
sahf
mov
fsubl
addb
dec
cmc
pop
rol
and
jg
roll
fcmovu
dec
or
pop
sbb
jecxz
mov
add
icebp
test
sbb
jmp
sub
pop
xlat
out
adc
pop
orb
lahf
cmove
pop
mov
inc
jl
push
and
clc
cmpsl
ds
add
lcall
jge
mov
mov
mov
adcl
push
idivb
cmp
xor
std
aas
pop
popf
std
adc
les
cmpsl
int
mov
xlat
jle
test
mov
loopne
dec
mov
and
sbb
cmp
inc
sbb
adcl
xlat
aad
mov
xlat
ss
aas
mov
add
data16
int3
cli
insb
pop
mov
ret
push
xor
push
ficomps
sarb
sti
sub
jne
mov
cmp
ljmp
imul
jae
hlt
jo
cld
aas
daa
icebp
jne
call
jecxz
fdivs
aad
lret
push
mov
add
fdivs
lods
jp
out
rolb
ss
cmp
mov
add
mov
jl
inc
xor
ficoml
cmc
clc
add
sub
aaa
loopne
sub
bound
xor
push
mov
fdivrs
and
fildll
orl
out
cmpsl
cmpsb
jecxz
mov
sbb
cmp
pop
or
xor
je
jae
fdivp
es
xor
mov
jne
in
or
lds
add
xchg
jl
lods
and
fs
sbb
push
jno
leave
xor
sbb
sarb
or
stos
mov
mov
ret
mov
lret
out
fimull
scas
xor
jne
xchg
mov
clc
jns
pop
pop
add
mov
mov
push
dec
int
fistpll
adc
movsl
pop
cli
push
nop
or
xchg
xor
push
lods
adc
pop
int
call
int3
mov
call
les
dec
jmp
sbb
fs
fisubl
push
das
dec
add
je
int3
mov
xchg
mov
insl
mov
cmp
out
or
pop
ret
mov
icebp
inc
mov
jae
mov
jp
xor
mov
cwtl
xor
js
mov
jle
loop
outsb
fildll
jo
sbb
outsb
lea
sub
sahf
sub
nop
mov
ret
pop
aas
inc
mov
out
into
cmpsb
or
stos
subb
ds
addr16
fs
aaa
push
fistl
cmpsl
fisttpll
in
ljmp
mov
pop
adc
adc
mov
add
in
mov
adc
mov
mov
lods
inc
or
fidivs
xor
iret
idivl
or
sub
gs
push
repnz
cli
daa
rorb
cmp
cli
xor
outsl
pop
mov
mov
push
xor
mov
mov
in
imul
out
cmp
push
pop
jns
jl
dec
mov
lret
mov
js
testb
shll
add
rcrb
dec
adc
xchg
fcmovu
pop
sub
mov
in
rorb
ficoml
sub
and
test
push
das
repnz
jecxz
stos
rorb
mov
or
sub
out
aas
dec
cmp
test
adc
sbb
outsb
int
dec
cmp
jge
out
dec
jmp
mov
dec
push
test
dec
shl
xor
mov
pop
sub
cmp
push
jmp
cwtl
fisttps
cli
cmp
mov
push
daa
lret
xchg
mov
fidivs
inc
xchg
sub
pop
inc
pop
adc
or
add
sbb
inc
pop
mov
pop
scas
aam
scas
mov
sbb
imul
dec
fsubp
clc
movsb
jg
push
ficoml
lret
mov
inc
mov
mov
out
aad
clc
mov
and
idivl
inc
mov
ljmp
jns
or
lahf
aas
mov
movsb
out
push
push
cli
or
divb
jb
cmp
sbb
xchg
jg
in
fnstcw
test
inc
idivl
fsubs
mov
dec
or
into
mov
mov
jno
stc
push
fadd
rcr
mov
fcoml
adc
cld
cmp
jecxz
mov
push
pusha
sub
mov
jb
out
cmp
imul
ret
cmpl
and
sbb
pop
sub
or
jo
aas
cmp
imul
pusha
test
lods
test
mov
icebp
movsb
enter
sarl
cmp
mov
fcmovnb
add
push
inc
xor
push
decl
cwtl
scas
sahf
jnp
xor
push
mov
push
add
jmp
sbb
cmp
jecxz
xchg
or
jg
ret
push
mov
aad
iret
cmp
mov
push
xchg
xchg
rol
pop
fimull
mov
imul
mov
lods
cwtl
inc
adc
xchg
inc
aad
test
mov
sahf
loope
push
sub
test
mov
int3
cmp
dec
es
add
into
push
mov
jmp
fldcw
mov
or
rolb
cmp
cmpsl
or
fwait
test
or
mulb
aad
push
xchg
mov
notb
mov
mov
jne
es
sahf
xchg
add
xor
add
sarl
xor
cmp
or
push
sub
call
rcrb
cli
mov
pop
mov
sahf
dec
push
shl
cmp
shlb
fnstsw
imul
xor
movsl
xor
dec
sub
mov
das
out
mov
in
sbb
mov
movb
cwtl
dec
xor
dec
ficompl
sbb
mov
xor
pop
jmp
or
mov
int3
icebp
push
or
mov
stos
les
push
sub
bound
xchg
push
sbb
dec
aad
addr16
loopne
inc
push
adc
fimuls
fbstp
outsb
fisubrl
stos
das
sbb
cmp
ljmp
xchg
mov
and
outsl
fldl
sahf
mov
jbe
cld
addb
ret
out
mov
sbbb
test
lret
or
subl
adc
push
mov
and
daa
mov
push
sbb
push
cmp
or
pushf
gs
mov
adc
push
cmpsl
sahf
add
mov
orl
dec
mov
mov
leave
mov
dec
or
movsl
leave
jmp
mov
or
jle
inc
inc
lahf
lods
enter
mov
mov
mov
int
fdivr
loope
add
clc
mov
insl
mov
lds
add
push
xor
notb
cmp
jnp
add
gs
fstpt
xor
dec
inc
mov
testl
xchg
les
int3
fists
dec
test
add
mov
mov
rcr
inc
dec
jmp
xchg
inc
cs
xchg
insb
push
adc
jae
sti
out
mov
push
notb
scas
lods
insb
and
mov
mov
mov
xchg
outsb
imul
loop
sbb
lods
popw
jae
jl
movsb
mov
data16
sub
in
clc
and
adc
hlt
xor
sub
push
pop
sbb
fstps
roll
mov
std
repnz
aas
test
sbb
lds
js
imulb
jae
inc
fwait
icebp
mov
mov
add
enter
addr16
push
push
sub
sbb
pop
and
out
mov
mov
cmp
fimull
lods
mov
mov
mov
leave
leave
ret
xlat
push
iret
sbb
mov
sbb
les
pop
test
in
jle
jne
ret
add
aad
sti
cmp
add
lahf
ret
add
lods
and
lds
mov
pop
lds
fdivrs
out
jbe
pushf
ljmp
mov
aam
push
popa
mov
lret
pop
loope
fists
jle
imul
ret
xor
std
fnstsw
pop
in
ror
push
loopne
subb
adc
repz
dec
add
rolb
ljmp
push
enter
test
call
pushw
out
jle
jge
addr16
call
jp
cmp
imull
inc
icebp
lcall
enter
decb
lcall
lahf
fcoms
addr16
mov
xchg
shll
out
outsb
cld
into
rcr
mov
lods
js
enter
fisubrl
shrb
jnp
js
pop
js
jg
dec
iret
outsl
dec
mov
lret
stos
fidivl
pop
ret
xor
jle
fimuls
pop
push
js
xlat
or
pop
pop
loop
mov
pop
cli
rolb
mov
js
dec
test
mov
inc
decb
dec
pop
aad
inc
int3
std
fxch
dec
mov
test
mov
sbb
loope
mov
mov
hlt
inc
adc
dec
or
lods
and
pop
jbe
ds
fisubl
fbstp
rcr
leave
rcll
mov
sti
cs
mov
sahf
enter
cmpsl
sub
adc
jmp
fidivl
cmp
scas
je
lret
fidivl
push
pop
pop
mov
lcall
add
jne
stos
enter
mov
xor
scas
mov
jno
dec
push
fiaddl
mov
inc
rcrl
test
mov
in
cmp
lcall
dec
mov
xor
iret
jecxz
mov
jbe
hlt
jae
xor
out
enter
movb
repnz
outsl
adc
pop
pusha
dec
mov
pop
inc
push
lock
jl
push
mov
jb
or
cmp
push
mov
cmp
ret
mov
mov
xor
jecxz
cmp
int3
icebp
std
mov
or
ret
dec
loop
ret
pop
cs
mov
xchg
mov
push
xor
data16
repnz
cld
pop
xor
pop
lock
bound
cmpb
sub
pusha
dec
or
cld
scas
sahf
testb
mov
or
test
bound
mov
test
mov
jle
adc
popa
aas
ret
lret
sub
push
mov
call
dec
popf
dec
scas
push
dec
xor
scas
decl
push
test
test
mov
xor
popa
enter
xor
inc
test
jae
jnp
xchg
rclb
ror
pop
loop
jo
rolb
and
out
cwtl
xchg
mov
mov
jb
icebp
mov
in
jae
icebp
sbb
dec
leave
jp
xor
pop
adc
xor
dec
sub
and
repz
and
mov
inc
or
push
sbb
mov
iret
jp
ret
popa
adc
sahf
incl
pop
in
or
dec
mov
add
mov
or
sub
pop
mov
in
xchg
and
out
mov
enter
shlb
xchg
cld
sbb
es
push
imul
std
pop
sub
fmuls
fldcw
clc
test
or
ljmp
bound
push
adc
rolb
xor
adc
jp
cmp
cli
fisttpll
inc
add
daa
cmc
add
out
ds
mov
out
clc
movsl
jl
into
lds
or
cmp
mov
and
jle
pushf
and
mov
cmp
and
fcompl
cmp
jmp
dec
or
loope
pushf
test
adc
xchg
xor
and
add
incl
inc
rcl
in
pop
clc
and
pop
dec
xlat
mov
outsl
and
mov
fwait
jge
dec
loop
sbb
cld
xor
bound
sar
mov
adc
pop
icebp
fld
pop
mov
arpl
jns
adc
ja
hlt
mov
pop
addr16
pop
sbbb
test
jle
rolb
or
mov
sub
call
add
test
cmp
fdivp
mov
les
shlb
shlb
sti
scas
push
pop
xor
add
inc
lret
divb
cli
stc
and
imul
cmpsl
and
sarl
adc
and
mov
pop
xchg
pushf
int3
dec
mov
inc
cs
jp
and
push
scas
loop
jle
mov
aad
xchg
mov
jge
test
enter
add
ret
int3
ret
mov
and
or
aam
pop
pop
stos
fucomip
xor
fisttpl
cli
jg
mov
nop
std
mov
daa
xchg
test
sub
jecxz
enter
pop
sub
xchg
loope
mov
scas
repnz
test
cmp
push
mov
cmp
aad
movsl
or
daa
or
add
sbb
add
or
scas
into
push
loop
cmp
adc
jae
pop
jge
movups
stos
sbb
les
jb
aad
lock
enter
cmpl
jbe
mov
icebp
xor
jb
ficoms
xchg
dec
sub
xor
lahf
mov
std
sub
outsb
mulb
std
dec
pop
ret
lods
cmpsl
add
mov
cli
jg
and
cmp
push
dec
pop
sahf
shrl
jnp
enter
rolb
lret
sbb
imul
in
sahf
xchg
imul
cmpsl
les
iret
sub
ret
sub
mov
lret
adc
mov
fwait
cs
jne
xchg
sub
ret
stos
addb
sbb
lods
mov
or
lret
mov
decl
pop
dec
mov
ds
daa
movsl
insl
aaa
shlb
cmpsb
cli
or
jo
or
jno
call
add
in
inc
add
idivl
int3
or
mov
gs
push
sub
shlb
inc
sahf
inc
pop
cld
aad
lea
clc
leave
and
sub
out
dec
mov
ljmp
mov
pop
cmp
lods
mov
jo
xor
cmp
jnp
shrb
dec
fs
stc
mov
arpl
cmp
lcall
jp
out
pop
mov
dec
fs
xor
or
dec
shrb
mov
sti
mov
cs
nop
mov
ljmp
xchg
or
sbb
pusha
mov
add
mov
add
dec
adc
sbb
sbb
lret
xchg
cmc
cli
mov
fidivrl
enter
aad
ljmp
and
add
pusha
lds
paddusb
enter
fucomi
xorb
and
fucomip
rcrl
mov
and
and
xchg
popa
imul
mov
jo
mov
add
xor
call
loop
scas
aad
mov
into
push
xabort
push
cmpsl
mov
sbb
push
lods
clc
cmp
icebp
imul
pop
jle
cmp
jle
mov
in
or
adc
mov
mov
rol
jle
arpl
jle
lcall
icebp
jecxz
in
and
out
lock
in
pusha
mov
test
inc
cmp
dec
fsubrs
and
fimuls
popf
sbb
shrb
test
lods
cmp
pop
clc
fidivs
fs
out
cli
cwtl
or
push
ffreep
sub
mov
xor
pop
jb
gs
mov
xor
sti
inc
stc
repnz
inc
jp
fisttps
in
lret
add
push
ljmp
and
fildll
test
rcl
mov
mov
in
clc
ret
cmp
push
fs
cs
cmp
sub
adc
sti
stos
cli
jp,pt
jecxz
sub
fdivr
out
pop
dec
jp
xor
fld
inc
mov
aam
jp
je
jne
cmc
aad
iret
or
lret
or
call
outsl
adc
decl
imul
aas
inc
sbb
mov
add
or
adc
pop
fnstcw
pop
test
dec
sub
jb
adc
outsb
mov
sub
jp
loop
cmp
mov
push
inc
popf
lea
xor
push
bound
aam
xlat
mov
xlat
adc
in
bound
arpl
incb
loop
roll
es
sbb
xlat
outsb
roll
adc
stos
xchg
sti
mov
rcll
movl
addr16
sbb
shlb
mov
fistl
stos
mov
in
sub
jg
sbb
enter
cmc
jg
mov
mov
aas
or
adc
shrl
js
pop
mov
xchg
mov
push
xchg
pop
fldl
bound
notl
xlat
repz
fucomip
jp
xlat
xor
mov
roll
das
cwtl
sahf
adc
in
sti
adc
mov
inc
or
add
mov
mov
mov
in
enter
adc
mov
dec
fs
sarb
sub
add
sub
loop
pop
xor
mov
lret
fsubrl
int
shrb
mov
jo
lds
stos
iret
mov
mov
stc
lds
add
push
cmpsb
add
xor
ljmp
mov
inc
adc
and
cwtl
inc
add
stc
cmp
gs
xor
nop
adc
xchg
lret
push
mov
lret
sub
lods
push
or
std
icebp
sbb
ret
fildll
int3
lret
mov
cmc
jo
add
aas
out
push
or
push
lret
std
lcall
dec
clc
pop
jl
push
sub
push
cmp
xlat
pop
add
inc
dec
cwtl
ficoms
pop
adc
jecxz
incb
clc
leave
dec
outsl
scas
iret
push
sahf
mov
jb
mov
clc
scas
lcall
cs
mov
jg
filds
in
jns
out
push
int
sahf
in
ja
sub
cld
lret
mov
mov
testb
jmp
clc
xchg
cmpsb
ret
iret
mov
lods
in
mov
sbb
sahf
mov
lds
sbbb
js
or
or
out
inc
sbb
or
sub
ds
repz
outsb
cmpsl
dec
cli
repz
jecxz
rolb
bound
sahf
pusha
vmptrld
ds
divl
push
add
xchg
add
or
adc
fnstcw
dec
pop
jo
and
add
adc
or
aaa
adc
cld
outsb
inc
test
mov
scas
fs
jbe
cmp
push
negb
jbe
cli
cli
fistpl
scas
sub
and
dec
mov
jbe
mov
outsb
ret
into
call
enter
xlat
fistpl
jbe
pop
das
pushf
repz
or
push
ret
loope
fiaddl
movsl
scas
clc
or
loop
scas
testb
loope
inc
jne
clc
and
sti
std
mov
mov
pcmpeqw
mov
imul
out
loopne
leave
add
mov
xchg
ret
cmp
scas
fdivs
hlt
jge
jb
repnz
icebp
mov
fisubrs
jns
inc
es
dec
xor
orl
pop
xchg
mov
es
outsl
loopne
shlb
mov
xchg
sahf
enter
sbb
push
push
or
fsubs
add
sub
lock
and
add
or
loopne
ret
imul
jns
sub
out
push
push
adc
adc
xor
inc
adc
nop
jl
lretw
enter
mov
test
and
cmp
adc
inc
test
fisttpl
xlat
std
lds
mov
inc
mov
push
repz
dec
popf
fldt
sbb
mov
sbb
add
jo
rcll
sahf
out
dec
clc
or
movups
repz
lods
fiaddl
cmp
mov
repnz
into
sub
lea
ljmp
out
out
lea
xor
stc
cmp
adc
mov
incl
add
hlt
pop
mov
cli
xlat
mov
in
or
mov
cmp
mov
lcall
jae
mov
cli
int
cli
clc
leave
jae
nop
push
mov
mov
mov
stos
call
mov
xlat
test
shll
dec
outsb
subb
cld
insb
jmp
enter
testl
mov
cmp
sbb
int3
jg
jp
adc
loopne
inc
fistpl
push
stos
push
adc
push
sub
sbb
dec
mov
call
push
jp
ja
add
push
xor
lds
test
mov
stc
push
cmp
ds
int3
or
xchg
iret
out
add
in
int
xor
add
movsb
push
inc
test
into
push
into
ja
push
stc
mov
loop
pop
inc
adc
add
push
mov
inc
fdivr
push
cmp
cmc
int3
aas
faddl
jecxz
clc
xchg
ljmp
xchg
cmp
scas
jb
insl
sbb
xor
cmp
adc
and
pop
aad
arpl
mov
mov
and
addr16
push
pop
bound
and
pushl
repz
fisttpl
inc
add
negb
pusha
jmp
int3
stc
or
cmp
ror
adc
ja
lcall
pop
fldl
daa
outsb
vmovupd
mov
fcoms
into
dec
pop
stc
cmp
mov
jnp
fstl
adc
lahf
push
dec
lods
pusha
xlat
rcr
aam
sub
adc
dec
pushf
mov
push
ss
jmp
cmpsb
sub
mov
out
rol
fidivrl
aas
mov
lret
xchg
lret
xlat
inc
shl
adc
cmc
cmp
push
test
dec
lock
mov
scas
push
scas
hlt
ljmp
inc
push
mov
repnz
mov
or
idivb
out
movsl
aas
mov
mov
add
cmpsl
popf
adc
lret
cli
lcall
or
negl
adc
sahf
pop
or
add
mov
cmpsl
xor
inc
stos
and
push
pop
imulb
aas
pop
lret
hlt
sbb
outsl
in
add
cltd
stc
xorb
ja
cwtl
nop
cltd
hlt
xchg
icebp
ljmp
outsb
mov
int3
call
sbb
fsub
cwtl
clc
ret
sbb
pop
bswap
xchg
push
mov
push
jle
stos
fucom
daa
ja
mov
jno
lret
pusha
or
pop
jae
lcall
mulb
adc
dec
xchg
push
leave
push
add
xor
push
fimuls
out
ss
leave
push
outsl
sub
xchg
pop
mov
aas
adc
xor
ja
inc
data16
sahf
mov
mov
adc
lods
lahf
xor
aas
sub
jl
jbe
mov
repnz
lock
xchg
sub
mov
sti
cwtl
fwait
iret
mov
mov
mov
or
sbb
insl
pop
push
lret
push
jg
xchg
pop
cmc
xchg
mov
or
cwtl
adc
sahf
cmpsb
lret
cs
shrb
jb
ret
mov
mov
jl
mov
ret
mov
scas
in
cltd
push
cmp
mov
int
mov
cli
lret
jp
xor
cmp
fisttpll
mov
cmp
xor
xchg
push
cmp
out
clc
shlb
pop
ret
push
out
mov
fnstcw
aaa
cs
sbb
clc
fs
sub
sahf
sub
frstor
lea
sbb
and
adc
inc
jo
inc
add
fwait
negl
mov
or
jno
stos
mov
js
lock
push
add
mov
dec
xorb
dec
add
fcoms
fcmovnb
cmp
xlat
jmp
jnp
ds
fistpll
and
xlat
lahf
movsb
in
popf
adc
jne
push
xor
mov
xorl
cmpsb
pop
call
icebp
inc
adc
jb,pn
stos
js
mov
pusha
aas
adc
and
cmp
xchg
sahf
ja
mov
into
ret
pop
sub
dec
popf
pop
ds
push
ds
push
sbb
jae
in
jge
shlb
int
jl
mov
add
mull
repnz
fsubrl
pop
into
xchg
sahf
jp
fldcw
stos
rclb
pop
xchg
pusha
lcall
clc
pusha
xchg
sbb
call
imul
push
add
test
mov
lea
mov
push
lods
enter
add
rol
xor
or
fiaddl
add
lea
stos
jmp
xchg
cltd
push
fcmove
dec
sti
add
add
ja
loop
repz
test
pop
push
loopne
scas
mov
leave
xor
adcl
enter
push
scas
rclb
jl
and
xchg
fstl
cmc
aas
pop
andl
push
adc
add
rolb
xchg
mov
lret
sbb
into
sub
mov
pusha
mov
out
sbb
outsb
inc
adc
jns
jns
in
pop
sbb
jmp
test
cmp
loop
xchg
dec
bnd
fadd
add
ja
sub
jmp
int
adc
sbb
xchg
mov
mov
jns
int3
or
not
mov
adc
add
pop
popa
xlat
add
jmp
jg
add
sbb
inc
lret
xor
jp
call
gs
dec
sub
push
inc
lret
mov
lret
fisttpll
lahf
outsl
lret
mov
fcomps
mov
sub
mov
dec
scas
aaa
mov
push
fistl
je
cmp
jb
and
inc
add
push
cmpsl
xor
out
into
js
test
mov
jb
mov
add
sub
pop
and
hlt
add
clc
adc
sub
jb
and
shll
lsl
sbb
data16
fistpll
dec
xchg
andl
jb
lcall
cmovns
jle
inc
dec
sahf
or
aas
push
testl
cmpsb
or
mov
sbb
repz
dec
into
jno
sarb
mov
mov
arpl
mov
sbb
stos
pop
dec
dec
jns
mov
ficoms
sbb
clc
adc
pop
cld
jle
jb
add
add
or
insb
pop
sbb
pop
jmp
cli
jbe
insb
fistpll
nop
sub
jbe
sbb
push
jnp
jp
in
and
jmp
imul
loop
push
inc
bound
sti
enter
or
test
data16
adc
imul
in
loopne
pop
loope
sbb
int
xor
in
mov
jle
push
push
xor
shr
mov
sbb
lret
sub
out
dec
sbb
xchg
jg
jle,pt
adc
roll
jp
mov
xchg
aad
stos
mov
sbb
int3
cmp
dec
jp
xchg
cli
fsubs
rcrb
push
clc
mov
lea
std
rolb
iret
sahf
sbb
imul
jmp
call
push
xor
and
les
jb
sub
mov
xchg
xor
popf
out
push
push
icebp
xchg
adc
xchg
cmpsl
sbb
jecxz
lods
cmp
inc
into
lcall
inc
lcall
imul
lcall
pop
jl
mov
addr16
icebp
xor
or
loopne
mov
xchg
mov
mov
insb
dec
jmp
jbe
jno
daa
into
imul
and
mov
icebp
stc
ds
mov
incb
mov
shll
mov
sub
add
adc
enter
xchg
loope
pushf
mov
aam
ret
stos
fiaddl
pop
fstpt
ret
cmp
push
lret
inc
mov
add
sub
push
mov
iret
dec
lea
lods
mov
xchg
out
mov
std
or
stos
dec
enter
sbb
or
arpl
push
mov
pop
outsl
push
push
dec
int3
push
loope
mov
call
push
mov
int
enter
xlat
push
jnp
lcallw
mov
scas
test
popa
loop
dec
push
adc
inc
addb
push
dec
sti
scas
movsl
dec
xchg
mov
inc
fldl
es
ret
dec
mov
stos
add
lret
fadds
fsubrs
mov
mov
cmp
cmpsb
xor
xchg
cmp
lods
mov
fistpll
je
pop
mov
ljmp
xchg
bound
mov
jmp
cwtl
imull
stc
clc
xor
in
mov
notb
inc
lret
into
dec
cmp
negb
or
push
in
sti
lahf
mov
ds
loope
add
jb
inc
pop
sar
add
mov
xor
insl
pop
xchg
mov
push
stc
sbbl
stc
orl
inc
sub
xchg
inc
out
fwait
sbb
cli
ljmp
inc
mov
loope
cli
and
test
push
or
inc
clc
dec
or
adcb
mov
lcall
frstor
pop
bound
dec
or
mov
xchg
fdivrp
rcl
ljmp
out
jne
cli
aad
add
lahf
in
xor
shl
adc
inc
mov
push
lcall
and
jecxz
jmp
int
push
bound
into
xchg
stc
push
fbstp
orb
test
test
add
lcall
inc
inc
popa
pop
rolb
dec
out
pop
aas
outsb
add
mov
ljmp
jns
mov
adc
xor
cmpsb
push
cld
cmp
mov
adc
cmpsb
aas
or
clc
add
rorb
pop
cmp
adc
xlat
into
xlat
or
ss
int
movsl
test
lahf
jmp
pop
fs
sbb
and
call
dec
stos
mov
xchg
sub
mov
fidivrl
rcl
push
rol
pop
into
imul
or
jmp
into
je
xchg
andl
pop
and
rclb
loope
iret
or
cs
xlat
mov
sbb
clc
dec
adc
cli
xor
add
shl
cltd
scas
add
push
sub
mov
das
inc
or
loop
roll
push
adc
and
lods
add
xchg
das
es
inc
inc
mov
sub
out
mov
sbbb
jbe
xchg
cwtl
stos
loop
sbb
iret
cwtl
mov
shlb
mov
cli
retw
push
stos
push
into
xchg
movsl
cli
sarb
andb
je
into
jb
xlat
cmc
sti
and
mov
cmpsb
fcomps
inc
addr16
cmpsb
test
xlat
and
es
pusha
xchg
xchg
ret
leave
out
lretw
mov
sbb
push
pop
mov
sbb
sub
cli
testb
leave
mov
cmp
and
ret
xor
std
jecxz
xchg
jb
push
fldcw
jp
push
xchg
ds
cmp
sar
data16
sar
test
dec
stc
cli
xor
adc
fisubs
xchg
mov
or
loope
in
js
in
sbb
iret
cld
mov
cs
lods
xlat
out
ret
mov
add
cs
stc
hlt
lcallw
push
ret
push
js
pop
stc
in
out
iret
sti
mov
mov
sbb
fidivl
mov
int
push
mov
jno
xchg
mov
leave
fwait
and
das
stc
dec
sbb
or
mov
jge,pt
rol
xchg
enter
cs
adc
scas
adc
inc
adc
lock
xor
push
clc
jle
pop
push
add
divl
adc
add
inc
iret
out
cmpsl
rolb
lret
ss
jno
jle
pop
pop
test
ficompl
les
xchg
jp
cmpb
mov
into
add
mov
push
clc
sub
das
sbb
mov
jmp
add
das
mov
sbb
or
lds
cs
repnz
sub
sub
mov
clc
jne
or
cltd
and
sti
and
stos
repnz
dec
add
loop
xchg
or
mov
fs
inc
cmpsb
xor
jle
cmp
mov
cmp
enter
daa
push
rolb
mov
sbb
jmp
jp
pop
mov
ds
cmp
jge,pt
adc
mov
dec
push
loope
add
jg
adc
loope
sbb
push
in
push
scas
ret
lret
lds
sbb
sub
sub
push
mov
dec
aas
cmp
rcrb
xchg
cmpsl
cmp
xlat
push
push
out
scas
or
inc
scas
ret
inc
push
xlat
lcall
sahf
bound
in
add
in
mov
push
jmp
int
nop
shl
dec
sbb
xor
inc
push
fcoml
sub
stos
mov
fimull
mov
stc
ret
in
stos
and
mulb
aas
mov
out
bound
or
movb
xchg
xchg
xchg
scas
lds
mov
cs
push
mov
flds
lcall
and
push
sti
mov
nop
cmpb
ljmp
push
mov
ficoml
xchg
jb
inc
and
iret
or
sahf
lock
lret
mov
cmp
bound
es
aad
or
shlb
cmpsb
cmp
pop
inc
sub
clc
mov
loope
lret
push
jp
xchg
cmpsl
ds
sbb
jne
mov
in
dec
enter
into
jle
pop
loopne
outsb
xlat
push
dec
mov
push
adc
aam
jp
sbb
mov
data16
inc
stc
inc
jb
loopne
adc
push
mov
sbb
cmpsl
out
icebp
aam
push
sbb
push
imul
popf
cmp
and
jo
jle
push
mov
sbb
pop
in
mov
call
outsb
mov
pop
out
repnz
cmpsb
sbb
repnz
push
xlat
push
mov
lret
xchg
inc
jns
fidivrl
mov
mov
jle
add
xor
jp
mov
cmp
or
loope
lds
dec
jbe
shl
inc
lret
ss
push
lcall
pop
sbbb
out
ret
mov
lcall
inc
push
inc
mov
mov
or
hlt
popf
mov
xlat
dec
in
outsb
gs
sub
fwait
mov
inc
mov
add
jle
out
push
mov
cmc
adc
cwtl
push
movsl
fwait
and
push
popa
pop
lahf
adc
push
loope
lret
jns
and
negb
scas
pop
xchg
xchg
iret
jle
xchg
adc
xabort
xchg
mov
jns
xchg
fwait
xor
mov
and
stos
adc
pop
jge
adc
clc
movl
not
loope
sbb
and
shl
cmp
iret
rorl
sub
or
fistpll
mov
test
sti
xor
mov
fisubrs
add
mov
ret
sbb
pop
xorb
mov
cld
mov
negw
stos
dec
mov
push
sbb
fcoms
push
or
xchg
pop
mov
idiv
cli
loop
hlt
push
push
lcall
adc
lds
mov
xchg
xlat
push
lret
mov
xchg
mov
addb
movb
lret
mov
pop
das
movsb
push
jp
andb
ret
sbb
or
fcoms
push
lret
cmp
sub
mov
sbb
push
xchg
push
pushl
dec
into
push
fmulp
fdivrl
xchg
cmc
push
fcmovnu
push
dec
xchg
sahf
and
dec
jp
ficoml
cwtl
js
cld
mov
jle
jp
mov
cwtl
dec
js
sahf
jecxz
lret
jb
lds
in
imul
or
pop
dec
mov
jp
or
std
inc
jb
pop
lret
pop
out
jb
or
lcall
in
xchg
in
push
jge
sbbb
frstor
push
sti
mov
popf
and
repnz
jle
dec
push
jo
clc
call
outsb
cli
push
xchg
data16
stc
push
cli
cwtl
lock
sahf
push
sti
mov
hlt
xchg
jmp
out
mov
clc
ljmp
pop
pop
mov
lcall
dec
cmp
pop
mov
fdivp
add
dec
mov
into
sarl
fs
pop
inc
mov
cmpsb
fiaddl
aam
inc
sbb
jbe
cli
sti
jae
cmpsb
divb
ret
ret
sub
sub
sbb
mov
scas
sti
dec
push
adc
rorl
mov
scas
xor
cmpl
repz
adc
pusha
sbb
popa
push
stos
in
sbb
dec
int
pop
clc
inc
mov
sbb
sub
adc
jne
xchg
test
cmp
es
enter
sbb
jmp
xchg
inc
xchg
ljmp
daa
in
aam
cmpsl
add
push
push
mov
cmp
pop
mov
lods
cmp
scas
sarb
cld
push
mov
jl
ss
cld
jge
cmp
jl,pt
cld
mov
inc
leave
imul
sub
mov
pop
in
loop
or
outsb
mov
stc
les
aas
add
and
jecxz
mov
dec
push
or
add
jb
int3
push
call
incl
arpl
mov
in
push
jmp
jmp
mov
dec
in
mov
sarl
adc
push
cld
adc
jp
stos
nop
cld
or
ret
sahf
rclb
dec
jmp
cmp
mov
nop
adc
test
mov
shl
cmp
mov
add
jmp
fnstsw
scas
adc
ret
sbb
add
inc
lods
lock
inc
mov
aad
jl
lock
cmp
cmpl
inc
dec
dec
out
mov
loope
adc
lods
insl
repnz
popl
in
idivb
mov
mov
and
mov
ljmp
mov
je
sti
jle
leave
stos
rcrl
imul
push
stos
and
add
jp,pn
ret
subb
mov
jo
jecxz
sbb
xchg
mov
enter
shlb
lret
jecxz
nop
fimull
xor
sub
shrl
sbb
push
jo
push
sti
pop
or
es
lods
addr16
sbb
add
sbb
roll
xchg
or
pop
fisttpl
sub
jl
rcrb
mov
mov
jo
lock
mov
lds
inc
push
inc
lret
mov
in
mov
gs
loope
sub
scas
out
push
aaa
pusha
inc
cmp
push
mov
scas
jno
dec
hlt
xor
adc
lock
push
aam
sub
orl
in
ret
mov
jo
lcall
pop
pop
int3
out
stos
enter
jecxz
ret
lods
repnz
mov
sbb
enter
das
js
pop
dec
mov
and
dec
lret
inc
cwtl
sbb
lret
jbe
aaa
hlt
call
notb
xor
inc
fcoml
or
mov
aas
data16
aas
mov
pop
outsl
daa
icebp
iret
repnz
shl
ret
sahf
in
repz
int
sbb
orl
loope
sbb
ss
cmp
leave
ror
stc
adc
pop
push
lods
push
aaa
stos
enter
loope
mov
fidivrs
mov
push
data16
sahf
push
in
adc
inc
mov
cmp
inc
pop
add
push
fsubs
leave
out
in
dec
data16
cmp
lock
rep
hlt
je
pushf
jo
lods
les
jecxz
add
pop
jle
fildll
cmp
sti
inc
movsb
or
mov
cmp
andl
pusha
call
inc
add
xor
sbb
stc
push
js
out
repnz
pop
dec
in
fdivs
scas
scas
clc
jmp
jbe
pusha
lods
imulb
mov
push
xchg
mov
sahf
je
scas
dec
mov
inc
rorb
xorl
mov
fprem
or
aaa
sub
jle
or
adc
push
cmp
cmp
cmp
jp
loopne
inc
cmp
out
jle
xchg
ucomiss
enter
cltd
leave
loop
mov
push
dec
cmp
xchg
pop
cmp
rorb
cld
fistpll
or
imul
pop
xchg
jg
cmp
fidivl
clc
loope
xlat
imul
clc
leave
cmpsb
mov
mov
rclb
cmpsl
add
jle
aam
and
fnstsw
xorl
das
int
mov
inc
mov
out
shlb
or
inc
fidivrl
rcrb
lret
mov
xor
aas
rorb
fs
data16
cmpsb
pop
xchg
xlat
mov
jmp
sahf
xor
fmuls
jp
xlat
mov
in
pop
cltd
sub
lds
jbe
mov
lods
notl
mov
enter
loop
out
sbb
mov
stos
cli
hlt
pusha
std
pop
or
cmp
cmp
pop
js
pop
lret
jmp
jo
push
pop
test
in
ljmp
cli
cmc
in
mov
cmp
mov
mov
into
mov
out
and
xchg
fisubrs
dec
lods
adc
mov
out
cmp
inc
ret
push
fnsave
fs
inc
ret
clc
lret
sbb
pop
or
cmc
mov
movl
mov
xchg
sbb
dec
mov
xor
call
ljmp
xchg
gs
and
lret
test
push
pop
dec
adc
cmpsb
rorl
mov
test
sub
mov
mov
lds
mov
cmp
mov
pushf
cmc
inc
lret
aas
jle
addr16
fnsave
mov
lret
mov
aas
adc
mov
mov
xlat
mov
call
das
add
shrl
outsl
pushf
dec
arpl
scas
stos
iret
leave
or
push
into
lea
jo
sub
or
lea
aas
mov
or
xor
mov
sbb
pop
cwtl
repnz
push
fdivs
dec
shr
les
inc
mov
or
xchg
test
xlat
cmpsb
mov
jle
dec
cmp
xlat
iret
push
add
inc
inc
xchg
int3
mov
inc
jbe
stos
mov
pop
sub
mov
cmp
js
lret
cmp
jmp
pop
xchg
addb
jmp
loope
and
xlat
fdiv
rolb
xlat
push
mov
ret
cld
fimuls
or
test
cmp
data16
push
aaa
cs
dec
pop
ret
enter
xor
or
fwait
int
jno
ds
xorb
or
ret
pop
dec
push
leave
sub
aad
sahf
cmpb
pop
pop
sahf
stos
test
call
pop
aas
cld
push
aam
mov
lahf
insl
mov
or
inc
std
es
cwtl
scas
mov
aaa
sub
and
mov
jne
jb
idivl
jl
sti
lds
fmulp
cli
mov
test
push
adc
sbb
jp
ffree
or
sbb
iret
add
loop
pushf
add
lahf
addr16
xor
cmp
sarb
mov
jae
movsb
rcrb
icebp
cmp
jmp
push
mov
ret
sar
ds
out
cmp
je
pop
lds
mul
xor
cwtl
icebp
icebp
pop
inc
in
mov
xor
or
into
flds
or
inc
rorl
lods
inc
mov
cmpsl
lret
fs
mov
push
orb
in
fninit
lea
ret
call
shll
cwtl
jle
cmovns
pop
sbb
lret
and
pop
mov
arpl
fmul
inc
lods
fmul
mov
ret
hlt
rolb
lods
mov
mov
adc
fsubs
lock
pop
iret
ja
and
sub
xlat
pop
lods
xchg
or
aad
lcall
pusha
push
xorl
stos
enter
adc
mov
push
stc
jnp
jne
jl
add
or
mov
scas
and
jo
cmp
sub
and
jp
jns
sahf
iret
fstps
es
mov
lret
psubusb
fstpl
mov
push
filds
lea
nop
or
or
add
add
sub
sub
in
rcr
ret
mov
or
sub
sub
es
adc
movsl
pop
lods
clc
cli
movsl
rcrb
add
push
jle
inc
mov
mov
stos
fisttps
addr16
mov
dec
in
mov
fcmovnb
push
jge
cmc
xlat
mov
mov
xchg
loopne
jae
enter
dec
mov
add
int
dec
mov
clc
mov
scas
mov
pop
adc
mov
push
subb
add
and
pop
test
inc
dec
out
popa
nop
push
mov
cmp
pusha
into
sbb
test
out
jl
outsb
sub
sbb
enter
cwtl
fwait
dec
jmp
mov
aaa
mov
fcomip
pop
jns
jo
dec
mov
mov
sbb
stos
cmp
ljmp
out
xor
ret
and
xchg
aam
stc
xorb
pop
jecxz
xor
adc
ret
adc
sub
idivb
movsb
rorb
xchg
add
imul
xchg
fcomps
shll
into
js
mov
and
aam
mov
push
test
jp
and
aad
repnz
faddl
cwtl
xor
mov
lock
push
adc
bnd
mov
rcr
jl
test
fsubr
mov
inc
add
or
gs
shl
xlat
push
daa
dec
add
xor
and
and
icebp
cli
cmpsb
mov
mov
inc
test
pop
out
sbb
test
mov
ret
or
stc
jmp
mov
cli
mov
sub
mov
repnz
pop
pop
test
xor
in
inc
adc
lcall
loop
test
in
cli
mov
sahf
xor
ret
shlb
leave
jb
out
jbe
jle
dec
es
cltd
xchg
dec
sbb
hlt
in
call
mov
dec
mov
and
lds
cmc
in
xlat
je
mov
clc
inc
aam
xor
jp
lds
lret
cs
pop
ret
bound
pop
insl
jae
enter
sbb
xchg
add
ds
cmp
shrl
stos
test
pop
add
jle
jp
clc
loopne
cmp
or
mov
push
ljmp
stos
jp
lds
push
or
mov
jecxz
jbe
cli
mov
mov
cmp
pop
pop
mov
loope
test
out
adc
shll
adc
sub
mov
cltd
mov
pushf
lea
stos
in
push
mov
xchg
sbb
icebp
xor
ljmp
aam
or
imul
decb
mov
fdivrs
mov
frstor
outsb
dec
loope
lods
ficoml
xchg
incl
add
jle
push
xor
xor
or
fisttpll
jle
pop
lods
mov
jb
nop
jl
popf
stos
lret
jle
cwtl
or
adc
out
sahf
or
jmp
rorb
fnstcw
cmp
cmp
cmp
fcmovnb
fildll
rcll
push
sti
lahf
faddl
out
push
push
sarl
jg
xor
addr16
mov
or
ss
outsb
rorb
cmpsl
xor
pop
push
clc
fimuls
iret
xor
cs
lds
in
sbb
fcom
iret
std
lret
fmul
in
repnz
fdiv
jle
clc
xchg
mov
inc
inc
or
mov
repnz
or
enter
out
sub
outsb
inc
lret
xor
pop
inc
mull
sub
adc
jmp
jne
fsubr
fstpl
lret
scas
adc
fdivrs
mov
and
dec
xor
dec
enter
pop
scas
mov
insl
fsubr
clc
or
mov
popf
not
dec
push
ds
fcoml
movsb
cwtl
inc
jbe
lods
cmp
ds
jle
mov
cmp
add
mov
sub
push
sbb
sub
dec
or
xor
out
adc
add
pop
add
push
cld
testb
mov
cmpsl
jmp
dec
mov
lcall
scas
fstpl
roll
andb
insb
sbb
lods
inc
mov
adc
xchg
lods
aas
scas
je
lcall
enter
xlat
or
cmp
cli
imul
aas
shl
out
mov
test
outsb
jae
inc
push
cmpsl
lock
add
jae
fisttpll
cli
lods
pop
push
lcall
rolb
outsl
iret
out
add
xchg
xchg
cmp
loopne
jae
mov
into
cmp
es
mov
mov
xor
sbb
sub
cmp
inc
dec
push
or
sahf
sub
scas
xchg
rorl
fisubl
jns
pop
xor
cmp
imul
pop
xor
xor
jle
imul
lock
cmp
pop
sub
dec
and
or
pop
sbb
inc
outsb
ja
sahf
dec
movsb
mov
jmp
popf
in
sbb
inc
mov
jp
push
dec
mov
xlat
mov
clc
es
jg
movsb
enter
jns
fisubs
cmp
aam
inc
pop
add
iret
pop
or
inc
sub
cli
mov
shll
pop
push
sbb
iret
cli
test
mov
enter
and
adc
movsl
and
and
mov
dec
inc
sub
pop
fisttps
lcall
pop
cli
mov
rolb
cli
push
and
fmul
dec
xchg
sub
cmp
scas
mov
or
mov
xchg
mov
push
cmp
leave
aam
cmp
cmp
scas
mov
fwait
popa
mov
rol
aas
sti
dec
loop
dec
scas
out
mov
and
cli
loopne
daa
out
mov
or
movb
test
fnstenv
inc
xchg
js
jo
out
add
xchg
out
jg
sub
fbstp
roll
js
jo
dec
push
ret
jnp
jo
add
ja
call
dec
idivb
add
scas
mov
cmp
add
mov
lods
repz
lret
push
mov
mov
fadd
mov
xchg
fadd
mov
int3
filds
daa
ja
aam
rcl
push
mov
xchg
adc
push
sahf
xchg
adc
xchg
fimull
repz
inc
and
int3
in
mov
js
mov
imul
sahf
je
fadd
pop
jecxz
mov
pop
add
jbe
mov
add
push
movb
inc
cmp
divb
ret
cltd
lcall
adc
out
daa
add
and
add
adc
add
je
mov
loop
sub
mov
cmpsb
fistpll
sbb
outsb
call
pop
cmpsl
loop
cmp
push
mov
add
pop
adc
or
aam
push
add
bound
out
cmp
dec
cs
mov
lahf
xchg
jl
and
dec
fimuls
sub
sub
hlt
adc
dec
or
aas
mov
shrl
mov
fsubrs
idivb
cmp
pop
sbb
ret
push
inc
or
cmp
into
sub
call
cmp
dec
xor
fiadds
sahf
test
jne
inc
xor
inc
cmp
data16
jno
scas
sahf
rolb
js
and
inc
pop
outsl
mov
xchg
loopne
mov
pop
xor
fsubs
lods
cli
and
mov
add
cmp
cmp
enter
push
enter
in
add
and
xacquire
push
test
punpckldq
sahf
or
or
bound
mov
data16
or
ret
mov
pop
in
sarb
jp
push
pop
inc
sbb
push
sbb
push
jmp
in
mov
inc
out
out
outsb
jle
pop
cmp
adc
pop
out
outsb
in
push
mov
aam
cmp
fiaddl
sahf
pop
iret
and
sti
aas
loop
inc
daa
fsubp
pushf
add
xchg
mov
into
add
sbb
les
add
inc
jg
test
in
ficoml
cwtl
add
scas
aas
inc
lock
incl
push
je
mov
fnstenv
inc
mov
jecxz
jmp
lcall
loope
push
dec
movb
xlat
scas
xor
pop
out
add
sahf
pop
dec
mov
xchg
xor
xchg
mov
out
jg
cwtl
cmpsl
mov
mov
adc
sub
js
mov
xor
xor
mov
clc
mov
loope
push
cli
push
hlt
enter
or
lods
mov
scas
sbb
fcom
fld
mov
mov
ds
pop
jecxz
sbb
or
inc
repnz
mov
sti
push
aad
fcmovb
inc
cmp
jne
cmp
mov
push
pop
inc
clc
out
stc
pop
or
test
bound
pop
daa
bound
ss
fs
lret
loope
roll
cmp
fwait
pop
add
mov
stos
cmpsb
jge
popl
ret
dec
nop
ret
dec
mov
cmpsb
and
clc
sbb
sbb
pop
xchg
movsl
cmp
cmp
cmpsl
mov
adc
xchg
std
and
or
fdivrs
bound
add
and
sub
fcmovb
cmp
push
and
shrb
fstl
pop
pop
fistpl
ljmp
lret
and
xchg
or
pop
sbb
sbb
das
and
dec
iret
sbb
cmp
loopne
sbb
rolb
aam
lret
imul
sarb
and
add
xchg
adc
push
mull
pop
int
and
fs
or
push
and
in
sub
enter
mov
jle
push
sbb
call
and
mov
dec
fidivl
jl
pop
sarb
push
inc
icebp
std
je
add
push
cwtl
xlat
mov
xchg
std
lock
sub
xlat
xchg
ret
cltd
xlat
es
std
mov
std
mov
aam
orl
xor
jge
je
ds
mov
testb
dec
or
mov
push
sub
flds
cmp
and
xchg
xchg
fcom
data16
cli
push
pop
scas
cmp
mov
jne
inc
push
fadd
mov
inc
cli
std
mov
aam
insb
fcomps
into
inc
add
cmp
mov
or
xchg
add
fisubrl
jp
fsubr
dec
ljmp
int3
push
loope
test
mov
xor
xchg
nop
mov
lret
pop
ret
mov
pop
iret
out
xlat
cli
clc
lcall
loope
cmpsb
xor
mov
enter
cmpsb
mov
sbb
lods
ret
cs
xchg
xor
push
aad
mov
pop
jo
sbb
xchg
leave
lods
popfw
ds
mov
lret
lret
lods
xchg
cmp
or
int3
in
lsl
cmp
leave
mov
pop
adc
mov
mov
xchg
adc
out
out
pop
popf
lret
or
push
leave
add
mov
and
xor
xlat
ds
and
mov
in
stc
out
pop
shrb
lret
int
ljmp
xlat
cmp
cs
cwtl
std
mov
in
jge
mov
cmp
sub
sub
dec
test
cmpsl
cmc
cli
int
jle
xor
mov
ss
repnz
fldenv
and
mov
mov
cli
or
add
mov
or
es
test
dec
fnstsw
sbb
insb
in
sbb
xchg
jp
lcall
mov
stos
call
push
jp
cltd
sub
ds
sbb
xlat
ja
mov
jb
inc
mov
jb
fmuls
mov
xor
jle
mov
jecxz
xchg
sbb
dec
mov
jb
leave
push
inc
mov
dec
xchg
sbb
ljmp
jecxz
inc
push
push
inc
enter
dec
imul
xchg
sarl
insb
jmp
add
xor
jbe
rcrl
jp
cmp
mov
lahf
enter
mov
out
add
mov
mov
sahf
push
pop
sarl
out
movb
mov
insb
aas
out
pop
in
out
jp
adc
xchg
loop
loop
mov
inc
rorb
cmp
cmc
mov
cmp
movsl
arpl
push
jno
stos
mov
cmc
cmpl
fbld
mov
inc
jl
fldt
stos
fsub
sbb
push
int3
std
xchg
and
loopne
push
dec
aaa
int3
or
xchg
pop
std
repnz
clc
pop
push
mov
jle
test
jmp
sahf
mov
pop
adc
and
enter
cwtl
xor
dec
rorb
push
lahf
hlt
cmp
int3
sub
jg
mov
xor
pop
mov
in
dec
pop
adc
sub
mov
push
push
idivb
mov
mov
enter
mov
sbb
cmp
dec
cmpl
ds
frstor
pop
repnz
ja
out
or
loop,pt
cli
push
xlat
mov
dec
shl
and
inc
mov
sbb
mov
mov
pop
add
mov
pushf
mov
push
stos
dec
test
mov
sub
sub
cmc
clc
add
cmc
repz
jg
scas
lods
dec
mov
dec
xor
pop
call
into
pusha
fsubrs
jle
aad
push
lahf
xchg
out
adcl
push
push
adc
dec
test
sub
mov
lret
mov
cmp
adc
int
aas
xor
xchg
cwtl
into
fisubs
cs
repnz
call
or
lods
iret
popf
inc
data16
jecxz
jl
push
adc
adc
cmp
lds
add
jg
pop
cmp
ret
andb
cmpb
adc
cmp
enter
int
dec
lret
inc
clc
add
idiv
dec
cld
jbe
dec
rcll
ficoms
push
out
dec
mull
sbb
subl
scas
sbb
subl
lcall
mov
stc
fadds
stc
insl
jle
inc
shrl
ret
inc
sti
add
mov
sbb
add
sbb
sub
pcmpgtb
in
or
jae
or
or
into
clc
not
stc
add
in
add
ret
add
or
aad
es
jne
roll
xchg
ljmp
cmc
ljmp
inc
out
or
cmp
sub
jmp
ljmp
repnz
inc
pop
add
jo
xor
mov
pop
jo
in
inc
xchg
mov
mov
add
int3
std
jnp
stc
cmp
sub
int3
repnz
lahf
mov
add
fldt
mov
lret
enter
inc
popa
stc
add
mov
enter
ret
jp
aaa
add
lea
adc
adc
cmp
outsl
jb
inc
cld
or
pop
mov
add
dec
int3
push
sub
mov
xchg
fimuls
imul
loop
xor
mov
idivl
in
or
mov
jle
imul
xlat
ds
xlat
cmc
sbb
out
lock
sub
sub
cmp
sbb
dec
rorb
jl
mov
mov
sub
int3
sub
mov
inc
out
outsl
je
lds
ret
repnz
mov
add
adc
pop
jae
add
mov
xor
sub
mov
dec
fcomp
xchg
sbb
bound
jp
sbb
push
rorl
fiaddl
cmpsb
dec
dec
push
or
scas
fcoms
xchg
push
sti
push
or
aad
mov
fdivrl
jns
testb
sti
imul
jle
sbb
fmuls
daa
push
cmpsb
xchg
int
vmovaps
mov
mov
ds
add
push
jp
mov
add
pop
fadds
mov
dec
into
lea
jb
idivb
sbb
push
pop
lods
movb
inc
das
xor
jmp
and
push
pushf
cmp
jp
out
dec
in
sarb
lods
jnp
xlat
ror
sahf
xchg
adc
mov
inc
sbb
dec
mov
imulb
sub
popf
xchg
stos
sub
mov
int3
add
pusha
imul
rorb
xor
cmp
rcrl
mov
dec
add
or
pushf
in
stos
jmp
hlt
jp
mov
push
shrb
ja
jge
cmp
mull
clc
xchg
push
jle
mov
push
pop
into
aad
sbb
arpl
or
ds
lcall
mov
mov
jns
jge
jl
mov
shrl
cmp
rcrb
jne
fnstenv
push
jno
jnp
leave
in
daa
adc
xor
int
filds
aas
pop
data16
and
push
gs
inc
lcall
popf
jg
mov
mov
lret
push
cmp
paddsw
or
shlb
lcall
popf
pop
add
jecxz
mov
dec
mov
mov
sti
push
fsubs
pushf
jle
pop
paddsw
fnstcw
ss
push
jp
and
fdivrl
sahf
loope
mov
rcll
jb
addr16
cmp
inc
aas
mov
dec
loopne
and
or
jno
sahf
int3
add
mov
push
mov
sbb
jne
and
rcrb
xor
pushf
daa
add
sarb
std
sub
aaa
mov
cmc
xor
xchg
fnstcw
mov
jbe
push
dec
ljmp
test
push
adc
clc
dec
jg
mov
pushf
int
push
jnp
mov
inc
adc
rcrb
mov
xchg
movzwl
flds
xlat
ret
in
sti
inc
sub
push
inc
xchg
xlat
push
dec
or
ds
pop
mov
push
push
dec
mov
sahf
out
lods
cltd
loope
cltd
cmp
scas
lods
ljmp
repnz
out
test
mov
or
jp
sahf
cwtl
stos
mov
add
pop
mov
inc
pushf
jae
xor
cmp
xor
xor
and
data16
lods
cmp
fwait
scas
clc
popa
test
pop
jno
inc
into
clc
test
cld
adcl
pop
jo
add
in
cmp
push
push
out
push
adc
adc
rolb
rcrb
aaa
inc
add
scas
cmpsl
cli
repz
movsb
shll
orl
xlat
fwait
scas
sbb
aam
cs
cmp
aas
xor
jg
stos
jae
xor
repz
in
ds
stos
lcall
lcall
or
mov
adc
sub
test
add
cmpsl
or
mov
pop
adc
pushf
in
in
ds
inc
inc
ds
xlat
inc
push
dec
ret
inc
cmp
cmp
adc
sbb
test
xchg
adc
adcl
pushf
mov
mov
xorb
stc
enter
adc
cli
in
fcomps
xlat
ds
and
sbb
mov
shll
xlat
mov
iret
adc
cmp
or
mov
mov
aas
add
cmp
push
fcmovnb
fstl
ja
mov
mov
outsb
repz
outsl
faddl
int
imul
mov
enter
hlt
jle
and
movups
bound
cmpl
mov
jno
xchg
cmp
call
push
sahf
or
mov
push
mov
mov
dec
push
insb
cmpl
inc
xchg
adc
adc
imul
xor
jg
cmpb
stos
jb
inc
out
add
fdivs
and
mov
mov
or
push
sbb
dec
cld
push
scas
lds
stc
xorb
test
sahf
pop
mov
cmp
movsl
clc
into
jecxz
mov
fwait
loop
cmp
int
pop
addl
lret
sub
inc
xor
into
lcall
dec
add
std
inc
adc
test
dec
add
sti
cli
into
out
add
jecxz
into
data16
sub
loop
cmp
loope
xchg
and
insb
add
mov
xor
sbb
ljmp
sarl
mov
gs
jecxz
sbb
call
cmp
addr16
or
scas
mov
xlat
fiaddl
push
mov
outsl
jecxz
repz
xchg
bound
loope
xlat
xchg
mov
sahf
mov
mov
shll
movsl
ljmp
xchg
push
lods
int
cs
loopne
popa
pop
repnz
movsb
mov
cmp
inc
fidivrl
dec
pusha
fsubs
loopne
lahf
stos
ss
mov
lret
loopne
pop
in
mov
inc
fstpt
push
pop
fs
dec
xorb
daa
cmp
stos
jb
xchg
hlt
inc
dec
mov
lea
jae
xor
inc
sahf
dec
cmpsb
cli
aas
fildl
sub
inc
cld
ljmp
dec
ds
cmc
into
andb
shrl
out
loope
lods
inc
mov
mov
jne
in
dec
jl
sub
nop
mov
dec
insl
aam
xchg
pop
fbld
mov
pop
ffree
jbe
arpl
sahf
scas
negl
or
dec
pop
add
jns
scas
lds
insl
ret
jp
mov
jecxz
js
push
mov
sub
pop
xor
std
lret
inc
movsb
mov
mov
mov
push
mov
aam
sar
jo
enter
jg
lods
test
xchg
test
jnp
imulb
jno
loopne
xchg
imul
xor
push
cmp
loopne
inc
inc
leave
sahf
jne
jo
dec
cmc
test
arpl
stos
or
xchg
pop
lcall
pop
ss
pushl
inc
daa
gs
or
sahf
loop
ljmp
fwait
outsl
fimuls
xchg
fadd
incl
insb
pop
ret
push
clc
push
mov
lret
sub
out
dec
enter
shrb
ret
enter
in
or
lahf
mov
shl
fldl
sub
lahf
popf
cmp
ret
fnstsw
mov
mov
scas
push
cmp
fimull
dec
imul
into
mov
aad
stos
mov
adc
cs
in
xlat
fnstsw
adc
rcrb
mull
hlt
add
adc
pop
insl
inc
idiv
test
jge
hlt
mov
repnz
test
mov
mov
nop
mov
or
add
pop
sarb
lds
mov
jg
inc
mov
stos
or
outsb
fistpl
adc
test
or
lods
inc
xchg
int
adcl
adc
js
push
push
push
imull
xchg
cli
xchg
mov
daa
mov
cmp
jg
inc
cmp
sahf
mov
xlat
insl
dec
and
out
clc
shr
mov
std
sbb
adc
fdivrs
leave
mov
aas
scas
aas
adc
outsb
pop
in
xchg
xor
jl
ss
lods
aam
in
pop
jne
iret
jecxz
wrmsr
dec
scas
int
dec
scas
sahf
sbb
fcmovnb
xchg
mov
cmp
icebp
shlb
data16
add
jp
mov
js
sbb
frstor
add
push
mov
stc
mov
fdivrs
inc
icebp
inc
mov
fwait
jns
push
aam
pop
int
iret
or
fidivrs
js
ja
int3
flds
movl
sahf
nop
jnp
add
das
xor
ffree
xchg
jg
ja
inc
jmp
or
jne
mov
mov
add
clc
cs
fcmovu
mov
or
mov
mov
ja
jp
in
and
in
jle
sti
or
adc
sbb
fdiv
iret
inc
jl
cwtl
or
push
jne
std
push
out
movsb
cld
ficomps
rcr
jbe
leave
jne
add
jp
mov
add
fcomip
dec
add
mov
lea
mov
xchg
inc
shll
lahf
or
das
pop
dec
pop
lock
fcmovu
aam
dec
icebp
xor
test
xor
in
jo
push
dec
ljmp
cltd
cmp
lret
insb
pop
lret
mov
mov
addr16
loope
sahf
js
xchg
aam
mov
pop
nop
imul
adc
sahf
and
stc
bound
out
jle
clc
sub
dec
dec
mov
and
xchg
jns
mov
jl
in
mov
mov
and
jo
mov
stos
jb
mov
mov
mov
dec
push
fcom
mov
cwtl
lret
mov
repz
cld
movsl
cmp
lods
pusha
mov
sub
xchg
and
gs
pushf
jae
xor
xor
mov
and
mov
mov
adc
mov
cmp
jo
fnstsw
cmp
inc
int
inc
xlat
xor
or
cmp
jle
cmp
dec
add
test
jmp
mov
popf
jne
jp
movsb
fdivrs
or
iret
shrb
mov
mov
cmp
scas
out
fucomi
ss
in
js
jbe
mov
in
xacquire
rcl
pop
mov
mov
and
negb
shl
pop
test
jne
mov
inc
loope
push
jno
and
xor
xlat
jmp
ret
frstor
dec
mov
push
xchg
mov
cmp
sbb
cli
mov
lcall
mov
jp
mov
cs
dec
int3
push
cmp
mov
jle
jbe
mov
jle
cli
scas
lea
leave
jae
jbe
sbb
xchg
stc
jp
push
fwait
arpl
mov
das
inc
dec
dec
mov
pop
sbb
out
leave
push
pop
dec
adc
imul
pusha
shll
mov
cmpsl
mov
jle
jle
test
dec
pop
sbb
mov
loopne
add
or
into
out
mov
insl
lret
pop
mov
add
push
mov
jne
daa
loopne
push
data16
enter
gs
pop
call
dec
sahf
pushf
loopne
call
dec
adc
mov
lcall
or
call
aas
cltd
rclb
loopne
fldt
xchg
inc
sub
inc
mov
aas
add
pop
xor
xchg
cli
mov
xchg
enter
or
or
rolb
leave
jae
jp
shl
lea
mov
mov
mov
jno
xor
push
sbb
sti
popa
mov
jno
cwtl
out
mov
orl
jns
sahf
arpl
fdivs
cltd
dec
dec
hlt
fmuls
imul
push
xlat
push
jns
shl
mov
movl
or
mov
lahf
adc
dec
sbb
xchg
jbe
adc
mov
adc
mov
adc
add
jae
outsl
ljmp
insl
sbb
jae
negb
jne
adc
cmpsl
aad
sbbl
and
out
jp
jb
adc
cmpsl
xchg
sbb
cld
pop
pop
cmp
adc
cs
cmp
cs
or
subb
out
shrb
pop
mov
jno
mov
into
jecxz
cmp
sub
mov
xor
inc
jns
fwait
jle
inc
push
pop
dec
stos
sbb
dec
sub
js
xchg
aam
aam
push
sahf
hlt
cmpsl
ja
mov
pop
fidivrs
or
mov
dec
xchg
cmp
or
out
neg
add
inc
lock
clc
stc
push
leave
jb
xor
and
mov
and
cltd
stos
movsl
cwtl
test
in
stc
gs
and
and
cmp
mov
inc
iret
loopne
sbb
push
fnstenv
inc
push
and
lretw
clc
or
mov
push
lret
test
lret
loop
sti
mov
movb
mov
push
mov
pop
sar
dec
fsts
push
sarl
pop
pusha
push
cmpsb
or
or
xor
sti
lret
cwtl
data16
and
add
shlb
cwtl
fmulp
fcoms
cmp
mov
add
dec
inc
gs
and
gs
fsubrs
or
stos
das
xchg
dec
lahf
std
dec
cwtl
mov
jb
arpl
mov
inc
aaa
xor
xlat
xor
push
xchg
sbb
and
dec
mov
iret
inc
rorb
outsb
pop
sub
pop
jg
imul
js
mov
inc
sub
sbb
sub
sahf
ret
cltd
popf
and
cli
and
cwtl
mov
in
inc
daa
mov
sbb
imul
out
lret
mov
ds
sub
dec
push
fs
clc
mov
sti
es
lods
dec
call
push
leave
out
mov
pop
push
cmp
pop
and
xchg
and
xchg
add
mov
in
mov
es
subb
mov
jp
mov
sbbb
or
dec
es
mov
push
arpl
add
pop
adc
sbb
leave
filds
dec
push
add
xor
pop
hlt
or
xchg
cmpsl
es
or
jb
cmpsl
push
es
jge
dec
push
adc
es
out
hlt
push
and
xchg
push
and
sbb
cs
xchg
pop
call
fwait
cmpsb
cwtl
es
inc
sub
test
xchg
dec
rcl
dec
fstpt
flds
dec
repz
inc
inc
cli
ja
cmpsl
mov
inc
sub
test
and
push
outsb
insb
and
jnp
xlat
vphadduwq
mov
cmp
xchg
cmp
cwtl
dec
roll
addr16
mov
addr16
scas
test
imul
sahf
mov
push
std
pop
cmp
and
movsl
pop
cli
xlat
jle
mov
mov
sbb
jnp
and
xor
out
cmpsl
hlt
insl
mov
stc
push
loopne
enter
jne
fwait
loop
in
pop
pop
lods
hlt
insb
cltd
mov
lahf
jns
enter
mov
xchg
scas
sarb
cmp
cld
or
aam
lcall
ds
js
mov
dec
or
outsb
pop
fildll
scas
aad
imulb
sub
mov
mov
jno
pushf
mov
mov
inc
push
fs
arpl
mov
jo
or
push
mull
ror
inc
sub
sti
popa
pop
xlat
sbb
add
mov
imulb
push
pop
mov
pop
ja
lret
mov
arpl
sub
jnp
xchg
repnz
mov
in
orl
into
icebp
ljmp
inc
jo
xchg
mov
xchg
cld
add
clc
out
jne
sub
xchg
call
push
push
xadd
add
pop
lods
mov
or
push
inc
out
das
push
call
mov
iret
cld
aam
fcmovnu
mov
loopne
mov
sub
or
mov
sub
push
jbe
pop
mov
insl
out
jno
adc
movsb
in
popa
xor
cwtl
test
inc
lahf
add
sub
sbb
mov
enter
sahf
push
ret
inc
fdivrs
pop
push
cli
inc
or
outsb
fnstcw
fsubs
aam
or
loopne
js
jbe
sub
das
cmp
jmp
into
dec
arpl
push
cs
negb
bound
arpl
fstpt
int3
fdivrs
mov
out
xchg
add
int3
je
mov
mov
andb
pop
ja
std
les
inc
or
out
cmpsb
sbb
test
pop
or
sub
add
add
mov
add
cmpsb
sahf
and
daa
xchg
xor
data16
leave
movsl
fdivs
outsb
test
mov
out
jb
xchg
inc
ror
aas
pop
sub
jns
or
stos
pop
adc
test
push
pop
jle
das
adc
xorb
js
lods
out
adc
xor
xchg
pop
dec
sarb
jae
fisubl
stc
jl
and
int
push
push
cmp
mov
fs
inc
push
loope
test
iret
mov
mov
enter
lock
dec
and
test
cmp
or
jle
or
xor
sub
lcall
popa
xchg
adc
dec
ljmp
dec
adc
push
imul
fucompp
movsb
hlt
rol
mov
mov
shrb
rep
fcoms
jbe
mov
enter
sti
cmp
or
cli
cwtl
jb
or
popa
xchg
pop
movsb
xchg
xchg
test
inc
mov
dec
mov
into
aam
ret
sbb
hlt
test
inc
jno
cmc
pop
imull
iret
imulb
inc
cmc
mov
mov
in
lea
inc
push
imul
adc
push
mov
jle
scas
test
mov
sahf
inc
cmp
mov
imul
enter
mov
xchg
imul
sarb
sbb
insl
das
call
sahf
jbe
dec
add
push
inc
lcall
lcall
test
cmp
cmpsb
into
sahf
mov
push
jl
sub
aad
sbb
dec
pop
xchg
pushf
popa
or
mov
jg
mov
mov
cli
scas
mov
jge
xchg
lcall
loopne
aam
fst
and
mov
jp
insb
movq2dq
ds
iret
jmp
push
loopne
jb,pt
data16
popa
cmc
inc
std
push
sub
inc
stos
jp
imul
xchg
jns
mov
fnstsw
mov
and
out
lds
xadd
call
push
mov
mov
in
ret
xchg
mov
aas
mov
outsb
jnp
pusha
in
cmpsb
dec
ss
push
inc
call
leave
fucomp
jb
pop
mov
nop
mov
mov
clc
adcl
lds
ljmp
jnp
and
xchg
mov
scas
psllw
jl
xchg
arpl
lret
xor
or
xchg
lret
pop
mov
sub
push
cmp
outsb
mov
stc
add
scas
or
loope
ffree
popa
inc
and
add
loop
mov
sbb
push
hlt
and
in
outsl
fldt
jge
and
outsb
adc
sub
cmp
enter
jp
jne
mov
add
add
cmpsl
xor
add
je
cmpsl
outsb
ret
in
dec
push
push
mov
andb
cmp
mov
scas
pop
adc
cmp
lahf
mov
andl
adc
fdivs
fiaddl
aas
push
icebp
in
mov
sarb
pop
aam
jle
cmp
shll
jg
pop
mov
xchg
or
shrl
mov
adc
jle
inc
gs
ja
mov
repnz
pop
mov
jnp
enter
out
jmp
adc
add
ljmp
cmp
int3
shlb
fstl
iret
or
jecxz
loop
pop
sbb
jno
sub
pop
sub
ds
loop
and
and
push
sahf
stc
mov
out
dec
xor
xorb
mov
pop
cmp
filds
cmpsb
sub
xchg
cmp
inc
jno
int
movsl
push
dec
push
in
hlt
cmp
mov
cli
jle
stc
mov
mov
xchg
pmaxub
mov
lret
fcomi
pop
push
cmpb
mov
inc
dec
mov
push
cltd
test
mov
in
cli
xor
leave
mov
fcmovnb
fidivrl
xchg
jb
out
jns
push
iret
out
loop
sub
jo
dec
lods
xor
std
int
fmul
loope
shrl
jb
pop
mov
jge
sbb
loop
mov
imul
cli
outsb
cltd
pop
push
popa
dec
xor
push
lods
cmpsl
adc
xchg
push
pop
jle
scas
sahf
int
add
sbb
push
pop
xchg
jmp
xor
in
arpl
xor
sbb
leave
cmc
add
enter
stc
sti
jp
jl
mov
dec
ljmp
stos
jle
std
mov
ds
sub
ficoms
adc
jecxz
ficomps
fs
and
jbe
pop
and
and
sbb
out
cmpsb
push
stos
dec
lahf
adc
push
or
sub
mov
xchg
dec
xchg
into
sbb
outsl
cmp
xor
in
adc
and
std
sbb
push
sahf
negb
mov
mov
dec
sbb
sub
pop
test
push
add
ja
xchg
jne
jecxz
leave
cli
inc
scas
add
jp
push
xlat
jae
lds
je
sbb
mov
pusha
xchg
mov
movb
scas
into
sti
aad
pop
fcoml
adc
imul
jnp
mov
mov
jo
add
and
or
out
mov
mov
mov
icebp
jl
mov
mov
adc
roll
push
xlat
mov
adc
or
rcl
lret
xchg
sbb
mov
cmp
pop
dec
fsubrs
pop
sbb
stos
dec
fisubrs
enter
mov
iret
mov
adc
pop
out
push
fyl2xp1
push
int3
adc
repz
cld
icebp
movsl
out
outsb
repnz
jp
std
cmpsl
test
outsb
fisubl
jbe
fmull
jne
js
test
ret
imul
and
sub
das
push
pop
stos
pushf
cli
sarb
in
ficoml
scas
cld
push
stc
push
mov
and
out
lods
mov
pushf
lret
fistpll
repnz
pop
push
stos
cmpl
mov
cli
pop
sbb
mov
outsb
jl
adc
test
fcos
pop
sbb
clc
adc
inc
xchg
lret
cwtl
jo
nop
pop
mov
or
cmp
and
jbe
lods
adcb
divb
into
adc
shl
or
movsb
sbb
enter
sbb
js
lods
sarb
or
outsb
insl
sbb
data16
adc
xchg
stos
mov
jb
cmpsl
add
shrl
mov
lret
rorl
or
sbb
scas
jae
push
mov
and
cmpsl
mov
lret
and
pop
push
xor
inc
cmp
pop
mov
xlat
subb
data16
jne
push
jp
or
ljmp
fisubl
dec
sarb
mov
out
ficomps
adc
xchg
push
scas
pop
shll
lret
mov
jae
sbb
push
outsl
ljmp
popa
jmp
outsb
adc
mov
jne
xchg
imull
arpl
xchg
xchg
loope
jg
push
outsb
push
sub
lahf
outsb
sub
mov
xchg
clc
jle
movsl
ljmp
popf
jbe
xlat
ds
std
mov
fstps
mov
shrl
inc
cmp
sub
ret
sahf
push
jle
xor
lock
leave
data16
xor
pop
jp
or
cmpsb
aas
dec
ret
jb
pusha
fistl
push
dec
mov
adc
or
es
and
daa
push
mov
sub
jecxz
mov
cmp
rcr
lods
cmpsl
test
pop
movsl
add
addr16
fcoml
mov
inc
mov
movsb
pop
jge
js
loop
ret
in
add
mov
mov
push
repnz
jne
data16
hlt
push
dec
fldenv
add
jno
loop
out
xor
dec
or
xor
xor
je
pop
mov
enter
jae
fistl
int
jb
jno
mov
lds
aam
mov
hlt
gs
push
data16
jl
fnstsw
jae
dec
push
int
cmp
mov
and
xor
cli
xchg
jae
xor
lock
xchg
add
cmp
adc
int3
inc
push
sbb
cmp
mulb
sbb
cmp
dec
jo
aad
into
adc
xlat
into
push
xor
notl
fcompl
mov
dec
rclb
loope,pn
testl
push
mov
dec
jl
or
cltd
and
dec
clc
cmpl
add
scas
dec
nop
xor
sbb
mov
insl
icebp
lods
xor
lahf
stos
arpl
lods
mov
xchg
and
ret
les
mov
or
lret
ret
mov
dec
mov
loope
iret
mov
mov
fimull
rcr
rcr
cmp
add
or
pop
xor
cmp
lahf
icebp
or
fiadds
ljmp
loopne
jno
push
inc
mov
jno
add
loope
iret
and
call
sbb
push
lods
add
inc
jo
mov
jnp
mov
cltd
pop
xlat
in
push
outsl
clc
jg
fnstsw
mov
bound
bound
add
lds
jmp
fwait
loop
cmp
mov
lea
dec
and
inc
lds
adc
add
add
mov
pusha
imul
les
or
xor
add
movsl
scas
cmp
shlb
movsb
enter
lcall
jl
mov
sub
data16
jns
pushf
cmpl
adc
ljmp
xchg
test
sbb
aad
push
mov
mov
clc
inc
jp
cmp
inc
push
xchg
icebp
dec
mov
mov
push
js
scas
cmp
mov
push
cmp
leave
std
jmp
les
inc
dec
scas
dec
enter
xor
jle
arpl
sub
xchg
push
clc
dec
lds
fs
imul
cltd
jb
call
or
cld
je
arpl
mov
cli
int3
icebp
mov
gs
idivb
aas
or
dec
adc
push
inc
jae
sbbb
jo
mov
lret
cmp
add
cwtl
xchg
mov
pop
aam
jne
mov
leave
cmp
push
outsb
and
push
cli
mov
daa
inc
outsb
jno
mov
mov
or
or
pusha
ljmp
cltd
sbb
jl
push
xchg
loope
sub
daa
inc
push
push
outsb
inc
gs
or
dec
dec
je
sti
adc
inc
xor
dec
fcmovu
sub
clc
pop
cmp
fcomps
xchg
mov
lods
adc
push
sbb
mov
pop
shll
clc
mov
xor
inc
dec
push
push
out
sahf
aad
xchg
mov
sub
stc
or
sbb
lcall
sub
cmp
fidivrs
call
fdivrl
dec
xor
rcrl
ret
sub
js
mov
rolb
pop
adc
fcmovbe
jecxz
jno
adc
mov
call
adc
adc
or
jle
fidivrs
icebp
addl
test
mov
pop
lods
cmc
in
add
mov
stc
ljmp
add
dec
adc
mov
leave
adc
mov
xor
and
sbb
and
or
cli
outsb
dec
ljmp
xor
gs
jl
js
mov
pop
cmp
idivl
or
or
sahf
xchg
stos
push
stc
test
into
sub
push
sti
fs
push
sub
push
inc
icebp
insl
icebp
mov
ret
and
mov
cmc
push
mov
jle
pop
add
int
push
fnsave
leave
push
jae
inc
rorb
out
cs
insb
push
mov
xorb
push
fdivr
mov
mov
or
mov
jl
jle
adc
mov
jae
jp
mov
mov
iret
dec
push
lods
flds
sbb
mov
test
mov
ljmp
xchg
stc
cld
or
into
pop
cmpb
lret
sbbb
jle
test
js,pn
sub
sub
inc
adc
out
mov
add
fcmovbe
popf
mov
sbb
scas
ss
cmp
or
push
adc
mov
cmp
jle
and
jb
leave
iret
loope
push
mov
pop
xchg
hlt
jge
push
or
inc
imul
aam
in
push
not
out
mov
mov
mov
shrb
inc
and
popa
vhsubps
leave
leave
jle
into
imul
push
push
in
or
repnz
mov
mov
mov
rolb
xchg
cmp
mov
shl
mul
ds
jge
jp
inc
cld
loop
dec
mov
dec
cmp
mov
xor
xchg
sbb
lods
mov
ja
xchg
cmp
data16
sarb
pop
jb
lcall
shrb
push
add
out
cmc
sahf
subb
sbb
mov
stos
call
mov
out
loope
push
fwait
add
mov
inc
imul
clc
mov
add
data16
jae
int3
clc
mov
jmp
jb
es
jg
sti
push
sahf
arpl
jmp
sub
jae
fisttpll
push
js
mov
nop
sbb
out
pop
adc
ds
stos
stos
pop
iret
cld
mov
mov
loopne
dec
cmpsb
js
mov
cmp
pushf
xor
mov
adc
inc
mov
call
inc
jmp
sbb
or
sti
loope
mov
cli
dec
or
xor
jmp
aas
jg
xchg
cmc
loop
loope
jg
aad
xor
mov
add
cmpsl
dec
lea
ds
mov
rcll
int3
outsb
in
push
sbb
repnz
lret
or
scas
jle
movb
idiv
stos
mov
cld
jmp
rolb
outsb
or
pop
mov
subb
adc
bound
sti
sub
inc
leave
cmp
cmp
sbb
andb
cmp
outsl
popf
adc
outsb
fwait
inc
outsb
rol
pop
lods
jecxz
and
fdivrp
inc
cmpb
jecxz
scas
out
sahf
add
ret
ljmp
fcoml
inc
cmp
jbe
hlt
lret
arpl
cmp
xchg
loop
add
cwtl
xor
aas
mov
imul
mov
in
adc
push
lea
adc
lea
comiss
js
jmp
xor
icebp
das
sarl
mov
stc
mov
out
data16
fcompp
rcl
loop
mov
pop
enter
ret
std
popa
out
xor
push
mov
sub
xchg
inc
lcall
in
enter
xchg
cmpsl
pusha
xor
pop
inc
cmp
jp
and
sub
das
lcall
pop
cmp
mov
into
leave
rcrb
js
push
cmp
jp
add
push
jno
ret
fildl
add
jno
mov
loope
cmp
mov
inc
cwtl
popf
lds
jnp
adc
lret
into
fsubs
lds
cltd
jle
push
iret
iret
out
add
xlat
jne
repz
leave
dec
out
pop
int
mov
nop
loopne
or
inc
in
mov
adc
pop
sub
enter
js
sub
scas
je
push
add
dec
js
xor
jns
sti
xchg
ds
jne
add
sub
sub
mov
pop
sub
xor
jmp
mov
stos
mov
hlt
sbb
or
ljmp
pinsrw
sub
ja
jbe
sti
dec
pushf
inc
stos
sub
or
inc
outsb
push
pop
insb
das
lret
fcoms
jge
add
adc
cld
loopnew
or
push
xchg
jl
sbb
mov
out
add
mov
imul
jo
xchg
imul
mov
loopne
and
call
or
repnz
xlat
dec
push
mov
insl
test
pop
mov
push
jb
sti
pusha
sbb
es
pushl
aas
xchg
lods
sbb
or
add
jp
mov
out
push
or
push
testl
hlt
mov
push
or
or
ret
dec
bound
mov
movd
ljmp
bound
imul
and
fildll
dec
dec
cwtl
dec
mov
jg
pop
mov
inc
lret
sbb
sub
push
jle
testb
loope
pop
adc
fwait
sahf
or
push
loope
and
mov
sahf
rcll
add
scas
pop
add
dec
pop
push
add
dec
pop
mov
push
sarb
mov
dec
push
mov
push
adc
out
jl
sahf
xor
pop
iret
fsubrp
add
test
inc
xchg
pusha
les
mov
or
and
rorl
sub
outsb
imul
jno
push
ss
mov
fadd
xor
pop
inc
or
inc
std
mov
fsubrl
xlat
das
out
add
in
int
sbb
pop
lods
cmp
mov
pop
xlat
lret
add
out
mov
out
mov
cmp
ss
sahf
pop
cmp
jb
in
xor
repnz
fisttpl
jno
daa
mov
cmp
mov
or
lods
push
mov
pop
inc
mov
scas
cwtl
jp
bound
mov
pop
dec
enter
icebp
cltd
sub
int3
or
cmp
sahf
arpl
cmp
cmp
cmp
xlat
int
lahf
loope
fisubs
imul
jae
sbb
pop
aad
lahf
mov
imul
pop
fdivrl
ss
jne
push
int
mov
aam
shlb
mov
sub
pop
lahf
cmpsl
cmp
fcmovnb
fadd
mov
int
inc
loopne
lock
cli
data16
imul
aam
ficomps
sub
mov
pop
dec
fcmovb
sub
aam
into
cmp
enter
adc
int
lea
sub
adc
add
rcrl
or
inc
cli
pop
shlb
xor
inc
dec
pop
cmp
adc
add
mov
xor
shrb
add
fildl
xchg
adc
test
cs
push
adc
pop
mov
std
int3
add
mov
lahf
jae
fmull
push
push
dec
ret
fsubp
mov
scas
outsb
push
cwtl
cli
sub
outsb
cmp
pushf
sahf
ljmp
test
outsl
mov
jg
lods
xchg
xchg
pop
xchg
dec
lds
xchg
fdivr
sub
enter
fdiv
add
jo
cmp
sahf
sbb
jg
cmp
add
sahf
jb
xchg
lahf
jb
xor
pop
push
loope
xor
ret
lahf
cmp
xchg
sbb
push
sarb
ja
add
scas
cltd
cmp
fisubs
inc
in
xor
lock
in
jae
pop
dec
lcall
mov
cmp
push
std
stos
xlat
dec
cli
aam
mov
in
movsb
sub
mov
push
mov
in
mov
xor
js
pop
mov
stc
jge
mov
cmp
cwtl
xor
mov
add
and
ret
lea
fwait
enter
pop
or
icebp
mov
cmp
mov
or
mov
ret
call
xchg
add
scas
lods
fwait
lret
push
push
aam
adc
mov
dec
roll
lods
out
xor
mov
outsb
bound
sahf
mov
int
inc
jmp
pop
mov
fnsave
fdivr
jle
arpl
mov
aas
dec
ffreep
cmp
mov
jns
cmp
pop
pop
lret
sub
sti
jbe
push
push
pop
fisubrl
push
hlt
mov
dec
jp
cli
xlat
out
gs
loopne
fistl
cltd
popf
sahf
push
pop
cmp
pop
push
ror
ss
sub
xlat
ss
out
xor
sub
repnz
repnz
adc
lods
cld
test
push
dec
push
sahf
lret
scas
enter
push
jg
sar
ret
pop
and
into
fcoml
in
xchg
or
add
shll
cmp
pop
leave
xor
popa
or
xchg
inc
push
enter
and
cltd
push
and
dec
mov
bound
shl
testb
lock
jg
pop
fwait
add
out
add
push
bound
in
dec
inc
fistpll
cld
push
mov
inc
fcoms
leave
iret
xchg
or
in
jno
lret
add
into
pop
lret
scas
push
inc
ret
xchg
inc
fwait
mov
inc
cmp
je
pop
cld
sti
xor
inc
xor
loopne
jmp
jp
push
and
mov
int3
mov
pop
dec
rsm
cwtl
sub
adc
push
pop
das
insl
andl
insl
sbb
je
cld
rcrb
sbb
cli
xchg
dec
and
lret
jecxz
sbb
fcmovnbe
and
fs
xchg
icebp
addr16
sahf
incb
dec
rol
imul
push
outsb
loope
mov
fdiv
jbe
aam
fldl
mov
push
shrb
inc
repnz
xchg
and
push
and
movsb
fiadds
inc
xchg
testb
mov
mov
inc
outsb
sbb
mov
scas
incb
mov
lds
notl
mov
cmp
push
rcrl
or
bound
adc
inc
add
and
sahf
add
cmp
dec
dec
inc
xlat
pop
cmp
js
imulb
xor
mov
pop
shl
xlat
rclb
dec
sub
repz
vpsubd
fcomip
mov
addl
jle
fidivrl
mov
add
mov
pop
mov
push
fwait
enter
ljmp
movsl
aas
imull
sbb
ds
dec
mov
clc
dec
sbbb
daa
in
stc
jle
sbb
xchg
stc
and
dec
shlb
pop
repz
mov
jle
mov
out
sub
clc
inc
enter
xchg
adc
lcall
fwait
xchg
js
sub
sti
push
cmp
xchg
inc
in
int3
cli
in
scas
inc
sbb
orb
ficoms
loopne
aam
fdivs
xchg
sub
bound
clc
jg
pop
sub
outsb
inc
push
lret
push
sub
push
jp
xor
xlat
push
js
daa
iret
push
into
call
push
ljmp
in
sti
into
dec
xchg
aas
mov
std
xchg
mov
inc
cld
xchg
xchg
es
out
cwtl
jl
push
mov
and
and
adc
ret
insb
jb
inc
sahf
test
repnz
add
out
lcall
int3
or
std
and
or
int
shll
fadd
addr16
xor
leave
in
jle
xchg
clc
inc
ret
fistl
rcr
adc
ret
shlb
fists
sub
int3
jmp
in
mov
shr
jg
int3
sahf
xchg
outsl
jl
xor
es
ja
addr16
jle
sbb
shrb
add
xor
scas
bnd
cmp
mov
pop
cmp
lret
cld
fists
cmp
xchg
lods
push
lret
pop
loop
loope
mov
add
adc
or
clc
mov
enter
loope
into
icebp
lret
js
ror
imul
hlt
lret
pop
inc
mov
dec
xchg
out
mov
mov
into
aas
fsub
fwait
mov
mov
dec
add
mov
out
arpl
ret
fadd
ds
sbb
repz
cld
xor
mov
mov
mov
lock
or
divl
lahf
fmuls
in
ss
jp
or
mov
ljmp
aam
shl
inc
xor
xchg
pushf
mov
in
lret
or
loop
loope
mov
mov
loop
dec
mov
xchg
fcoms
loop
and
xor
fs
loop
repz
ljmp
jmp
notl
push
repz
out
xor
mov
negb
mov
mov
and
dec
in
adc
adc
dec
loopne
ljmp
jle
lahf
add
adc
dec
dec
int3
jp
test
lret
cmp
mov
xor
xlat
jo
mov
lcall
mov
mov
mov
movsb
sbb
dec
mov
movsb
rolb
aas
mov
out
insl
pop
sub
xor
repnz
lcall
mov
fstps
mov
loope
loop
push
adc
test
inc
inc
lcall
cs
outsb
xlat
xor
push
push
add
loop
push
jle
in
pop
cmp
into
cmp
add
jecxz
mov
aas
les
int3
cmc
jg
jae
or
sub
mov
xchg
inc
pop
add
insb
ljmp
imul
andl
fdivrl
int
mov
sub
mov
mov
sti
iret
aaa
xor
pop
inc
scas
push
push
clc
mov
lret
fistps
mov
addb
rorl
sahf
inc
pop
push
aas
push
enter
inc
pop
shr
push
xchg
movb
fnsave
iret
bound
loope
mov
dec
ficoms
clc
inc
push
pop
mov
into
mov
pop
dec
mov
int3
fmul
dec
push
pop
cmp
and
lret
bound
sarl
jnp
adcb
out
aas
repnz
sar
aas
out
aad
into
or
mov
mov
sti
gs
jmp
xlat
neg
movsb
mov
cmp
and
out
jae
inc
pop
repnz
shr
test
xchg
cmpsb
sub
cwtl
add
jp
xorb
or
movsl
xor
mov
push
fcomps
mov
xor
lods
xchg
dec
lods
sar
sbb
push
ror
dec
lea
je
pusha
sti
lock
js
sarb
jae
inc
push
sub
loope
pop
push
push
lret
adc
aas
out
ret
icebp
cmp
xor
lods
sti
adc
rorl
fidivrl
jns
jmp
mov
inc
jo
adc
push
nop
mov
fidivrs
xchg
int
aam
mov
cmp
test
cmpsl
add
fidivs
push
shll
mov
ror
mov
loopne
inc
addb
xor
fisttps
add
scas
cmp
cmp
inc
xlat
mov
sbb
std
sarl
adc
fsubr
clc
out
mov
cmpl
push
fucomp
xor
inc
mov
outsl
aaa
lods
movsb
movl
jp
mov
sub
mov
dec
sahf
lods
pop
push
dec
into
inc
mov
in
fsts
aam
adc
jecxz
pop
add
ss
dec
cld
mov
mov
push
push
in
in
adc
push
xchg
cwtl
xchg
pop
jne
push
push
push
or
scas
sub
ret
lods
mov
inc
fimull
pop
mov
je
lock
in
mov
add
leave
idiv
pusha
jecxz
pop
xlat
iret
jp
push
and
dec
mov
mov
or
add
loope
cmpsb
push
out
pop
add
dec
add
mov
mov
ds
xchg
cmp
in
enter
cld
xchg
jle
adc
out
inc
fisubrs
lret
fidivs
xchg
stc
fisubrs
jmp
mov
or
xchg
nop
mov
fidivrl
icebp
mov
andb
sahf
xchg
push
sbb
cs
sub
test
fcmovu
lcall
enter
out
cmp
mov
xor
in
xchg
pusha
mov
mov
movsl
data16
push
js
stos
cld
fstps
repnz
sbb
aas
xchg
ss
in
loop
pushf
fisubrs
xchg
movsb
and
out
or
fdivr
push
jne
sbb
xchg
dec
fwait
leave
pop
lret
and
fnstcw
lahf
leave
mov
xchg
pushf
js
aad
dec
mov
int3
add
fwait
adc
lods
jnp
clc
sub
mov
add
sbb
jecxz
into
xchg
mov
dec
int3
dec
ljmp
jle
or
mov
sti
fists
gs
mov
cmp
adc
add
cmp
leave
in
aas
mull
loopne
xchg
sahf
cmc
nop
sub
pop
add
mov
sbb
out
xchg
or
push
inc
int3
mov
cmp
mov
sub
loopne
cmp
std
push
xor
sbb
dec
add
ret
push
sbb
enter
mov
shrb
sbb
cmp
inc
mov
jecxz
icebp
rcr
xor
lcall
jecxz
mov
popl
lret
cmp
mov
std
mov
adc
cld
xor
xor
jge
adc
loope
inc
sbb
cmp
enter
pop
dec
aam
out
xor
dec
out
cmp
stos
xchg
xor
mov
sti
sbb
xlat
lea
enter
fsubr
out
dec
mov
ljmp
add
mov
ret
jnp
testb
mov
jecxz
mov
push
loop
xchg
stc
jnp
xor
hlt
push
sub
ret
lret
aas
lret
inc
leave
cs
or
fisubl
outsb
outsb
jg
xor
or
sbb
out
in
pop
icebp
xchg
sbb
loope
lret
loop
mov
sub
mov
ficoml
inc
js
fs
loope
cmp
testb
lods
mov
ss
sarb
in
es
cmp
jp
ds
mov
jmp
sub
rorl
mov
mov
push
jp
add
inc
hlt
leave
or
rclb
mov
ds
repnz
pop
clc
inc
inc
outsb
push
sbb
xor
jg
mov
imul
pop
add
jp
dec
dec
mov
sbb
pop
sub
sbb
mov
out
jo
xchg
push
into
repnz
and
or
fcoms
dec
out
or
enter
sub
es
push
add
roll
aaa
and
out
jmp
in
sbb
or
jge
fcmovb
int3
loope
jmp
mov
popa
mov
mov
lcall
shl
pop
ffreep
pop
adc
xchg
and
dec
fisttpl
and
xor
fisubrs
dec
mov
add
sbb
subb
nop
cld
push
dec
lods
jnp
enter
or
and
inc
ret
fidivs
mov
xor
adc
jae
cltd
xchg
inc
and
jg
sarl
mov
push
ds
cmp
jo
shlb
lods
mov
scas
jecxz
rcl
dec
or
and
lds
sub
ljmp
std
or
jmp
jo
jbe
inc
push
adc
jb
lods
mov
lret
iret
dec
add
js
cld
jle
dec
pop
sub
cmp
jo
fwait
call
fisttpl
lods
unpcklps
shrl
xor
imul
fadds
das
sahf
add
cwtl
inc
testb
mov
sbb
shrb
cmpsb
sbb
ljmp
mov
cmp
pusha
lret
adc
sti
dec
movsl
imul
les
inc
loopne,pt
mov
adc
jae
les
jo
push
out
inc
mov
mov
cwtl
cmp
dec
call
mov
insl
mov
cltd
mov
or
add
and
jle
adc
inc
and
and
mov
cld
sahf
dec
fildll
ss
or
cwtl
icebp
bound
xchg
or
dec
xchg
mov
jo
inc
cmp
dec
mov
ds
and
enter
xor
jg
jno
jae
xchg
rolb
fldt
in
cmp
scas
push
dec
cmpsb
ss
cmp
sbb
fxch
negl
test
add
xor
int3
fsubr
jle
xchg
cli
ljmp
int
setbe
addl
inc
stc
pop
mov
add
or
outsb
fnsave
add
ds
add
pop
lret
mov
int
pusha
mov
fisttpl
and
lahf
std
into
addr16
mov
fldl
in
call
ret
sahf
lret
or
lods
aad
push
test
xlat
inc
or
pusha
add
xchg
dec
mov
enter
xor
jno
dec
loop
cmp
cmp
sti
hlt
jge
cmp
ror
push
enter
dec
rorb
cmp
xchg
dec
outsb
fcomps
cli
arpl
int3
ret
mov
mov
cltd
sub
lods
sub
or
push
push
mov
movsb
push
mov
xor
inc
push
popa
sbb
dec
roll
outsl
fistl
addr16
pop
mov
sahf
testb
fadds
les
or
adc
cmp
jle
pop
jne
sub
lret
jae
mov
inc
cmp
loopne
jo
inc
xchg
repz
jge
enter
sub
mov
jnp
cmp
add
iret
push
mov
sub
jns
mov
push
cmp
sbb
movsl
pop
pop
pop
add
xchg
sub
lods
popa
lret
mov
stos
mov
sti
out
call
leave
cmp
mov
mov
rolb
mov
add
int
mov
in
xor
dec
out
test
sbb
mov
sub
mov
sub
xlat
loope
das
fstp
cmp
lock
fld1
sub
imul
xor
add
es
adc
xor
add
xlat
js
lret
dec
mov
stos
test
cmp
cmpsl
mov
adc
inc
xchg
jmpw
cmc
xor
cmp
call
mov
push
xlat
mov
push
sub
adc
mov
xchg
mov
xlat
pop
adc
ljmp
scas
out
mov
or
cld
shrb
jg
push
ss
dec
cmp
cmp
cmp
adc
icebp
push
sub
or
mov
cld
xchg
loopne
mov
add
and
cld
jl
mov
mov
sbb
mov
mov
mov
mov
aas
jns
jo
adc
push
adc
decl
sti
mov
sahf
ja
leave
cmp
loopne
or
out
xor
sub
lahf
and
lds
jl
in
fdivr
cli
jns
jmp
outsl
mov
clc
iret
cmpsl
fistpl
or
aas
push
mov
rorb
pop
int
inc
ret
inc
add
or
sub
push
sub
cmpsb
sahf
and
frstor
mov
push
sahf
cmp
or
pop
cmc
pop
loop
sub
pop
icebp
push
push
jmp
mov
xchg
hlt
jle
popa
cli
jmp
pop
sti
loop
fsubp
sub
adc
sbb
dec
xchg
jo
xchg
or
fnstenv
fstl
adc
mov
aam
decl
add
xor
rcl
prefetch
repnz
orl
cmp
xor
jo
jecxz
lret
mov
rorl
sti
out
cltd
loop
testl
sbb
fdivs
pop
mov
mov
lret
and
push
xchg
bound
and
std
xchg
iret
cmpsb
mov
xor
cltd
adc
ds
pusha
out
add
out
cmp
mov
enter
out
mov
mov
xorl
sub
mov
jo
jl
insb
clc
mov
lahf
add
dec
push
loope
xor
add
shrl
neg
jno
bound
adc
dec
pop
fstpt
push
mov
pop
mov
sbb
imul
cld
xlat
jmp
lahf
leave
sbbb
mov
inc
mov
in
pop
fmul
lret
inc
les
ljmp
jg
lods
cmp
jbe
mov
mov
out
and
enter
stos
popf
add
jp
and
loope
jne
ret
push
aas
mulb
jbe
push
mov
sub
and
arpl
dec
mov
into
add
jge
and
arpl
inc
loope
vmovq
mov
mov
or
xchg
mov
xor
inc
ret
das
clc
mov
sbbb
mov
or
jnp
stc
mov
mov
fiaddl
ret
enter
mov
mov
inc
pop
loop
push
or
cmp
movsb
xlat
xor
pop
mov
sti
jbe
pop
aad
repnz
arpl
rolb
jbe
mov
inc
and
cli
mov
out
inc
or
ljmp
and
mov
aad
ret
inc
push
sbbl
enter
scas
fwait
push
testl
mov
dec
mov
xor
adc
testb
mov
movb
mov
add
or
loop
mov
testb
js
xchg
jno
mov
dec
xlat
into
ret
or
mov
jmp
mov
cmp
mov
cmpsb
call
pop
shrb
aad
adc
xor
fimuls
movsl
cmpsb
movsb
std
push
dec
xchg
fisttps
scas
dec
mov
sti
in
mov
mov
or
imul
ret
out
ljmp
pop
rol
repz
cltd
xor
orb
inc
std
loope
jns
fisubs
mov
adc
add
imulb
les
cli
ret
ljmp
ret
in
out
or
xor
psrad
ja
loope
addr16
adc
xchg
mov
cwtl
in
adc
xchg
into
cmp
fdivl
mov
lea
adc
jg
push
push
push
adc
mov
mov
shlb
jp
hlt
or
sarl
sub
rorb
inc
mov
jo
fidivl
jne
mull
cmc
shl
jge
mov
insb
xchg
cmp
test
hlt
mov
dec
push
xchg
std
jmp
jge
fcomps
mov
mov
cmpsb
or
cmc
movsb
mov
xchg
xchg
add
cli
lods
inc
call
out
dec
aas
cmp
adc
add
pop
movsl
ljmp
jge
lods
jl
mulb
and
jmp
fcmovnb
fmul
mov
out
shll
cmpsb
add
insb
sub
ret
jmp
mov
pop
cmpsb
aam
and
das
dec
xor
cld
dec
inc
pop
xchg
push
nop
cmp
jnp
out
rcrl
or
dec
mov
jecxz
mov
jno
dec
adc
out
aad
xchg
cmpsl
inc
out
add
jb
aas
lds
negb
mov
mov
xor
dec
jl
iret
lcall
out
or
pop
nop
je
lret
or
ljmp
subb
push
jno
divb
jnp
test
in
ret
xor
pop
sbb
adc
pop
das
mov
sub
lret
mov
sahf
dec
mov
gs
testl
aad
xor
lds
inc
or
pop
scas
rclb
mov
pop
repnz
sahf
and
jle
je
int
cmp
enter
stos
sbb
pslld
xchg
aaa
stc
mov
xlat
push
icebp
decl
cmpsb
sbb
call
mov
xchg
ds
fistpll
inc
inc
pop
push
jecxz
inc
mov
mov
or
lcall
cmp
adc
out
push
mov
rol
cmc
mov
cwtl
mov
jb
clc
call
daa
hlt
jmp
movsl
call
sbb
cmp
shlb
inc
adc
push
dec
es
lret
les
jns
adc
cmp
out
inc
pop
cmp
fcoms
pop
rol
aad
nop
dec
mov
mov
push
sub
xchg
out
outsl
scas
lret
std
lock
pop
out
cmp
or
mov
stc
mov
or
cmp
and
add
add
mov
cmp
fidivl
loop
movsl
pushaw
rorb
dec
fsub
imul
and
mov
add
push
pop
ss
fildl
idivl
ret
jo
divl
mov
scas
int
fs
orl
dec
hlt
enter
mov
mov
cmpsl
cwtl
lock
cmp
es
push
enter
arpl
cmpsl
and
test
add
cs
cmc
arpl
mov
add
inc
xchg
sbb
and
xchg
test
and
cli
sbb
lds
xchg
inc
pop
dec
test
cmp
push
out
cmc
shr
int3
outsl
mov
adc
das
call
fcmovbe
stc
inc
cmp
sub
pusha
pop
push
mov
subb
aas
cmp
and
je
repnz
loopne
xlat
mov
push
dec
jo
jb
lcall
outsl
mov
sub
dec
cli
ret
insl
fisttpll
jbe
scas
mov
fnstenv
jo
xchg
ret
lcall
lret
push
pop
dec
mov
fcmovnb
pop
jne
push
inc
jb
pop
cmp
cmp
jg
fstpt
sti
iret
xlat
xchg
in
mov
xchg
fistpl
jne
jmp
cmp
sub
pop
fst
call
pop
mov
add
lahf
pop
mov
jmp
sarb
pushf
mov
test
in
addr16
rep
inc
lret
in
lret
cmp
outsl
push
add
cmp
pop
ret
cmp
sbb
inc
adc
ret
test
rol
sahf
mov
scas
psubd
loop
aas
or
xor
jnp
and
and
and
mov
mov
je
nop
stos
sub
jmp
pop
imul
into
or
nop
int
dec
frstor
inc
ficoml
jle
insl
sbb
sti
jp
or
pop
loop
jmp
cmp
stos
stc
adc
lahf
or
outsb
inc
call
imul
mov
or
enter
mov
pop
in
enter
jp
pop
pop
push
fst
cs
mov
dec
or
mov
mov
call
dec
popa
sbb
inc
ljmp
aam
cmp
or
sbb
add
adc
rcr
stos
out
push
cli
fidivl
out
sar
mov
dec
out
into
cmp
mov
or
inc
and
pavgb
cmp
jae
rol
mov
mov
xor
cmp
inc
cmp
sbb
fsubs
cmp
mov
sbb
xor
cmp
icebp
mov
xor
or
loope
pushf
sbb
mov
into
mov
pop
rcl
or
out
inc
mov
dec
mov
mov
cwtl
and
or
xor
clc
imul
sbb
hlt
xlat
lea
sbb
push
cmc
xor
pop
sub
int3
push
jp
ret
int
and
mov
cltd
pop
loope
leave
lret
sbb
es
sahf
cmc
clc
dec
lds
lret
outsl
mov
jbe
xor
inc
iret
jae
arpl
decb
sbb
cmp
jno
dec
pop
icebp
jg
sarl
loope
lret
in
xchg
dec
mov
repz
es
into
lahf
push
adc
xchg
movsl
ljmp
lods
sbb
lret
mov
sti
nop
push
int3
int3
cld
clc
loop
and
mov
insl
out
out
xchg
out
ret
out
fisubrl
cld
sbb
jge
test
dec
mov
dec
lea
cmpsl
int
in
push
test
dec
lea
mov
push
repz
push
inc
xlat
adcl
cmc
ror
daa
cli
mov
addr16
jecxz
cld
push
sti
scas
int
or
jle
cmp
cmp
enter
mov
int3
flds
ds
dec
ret
data16
cwtl
mov
cld
popa
add
enter
dec
inc
mov
jnp
xchg
jmp
daa
push
clc
ss
outsb
dec
icebp
add
ret
and
decb
jle
ss
xchg
inc
scas
pop
push
xlat
rol
mov
bound
pop
sbb
nop
jbe
mov
loopne
and
mov
cmp
mov
jle
addr16
movsl
dec
mov
xor
adc
or
rolb
pop
add
mov
andl
int3
fidivl
sub
stos
sbb
jecxz
push
xlat
loope
sbb
xor
rcrb
sbb
ss
jbe
jns
call
mov
in
jle
push
sbb
mov
aas
mov
cld
jne
mov
fcmovnbe
je
dec
ds
iret
aas
mov
fdivrs
and
push
aas
icebp
ret
mov
loopne
rorb
cmp
std
xor
mov
leave
inc
fisubrs
inc
dec
pop
pop
xlat
add
push
mov
xlat
adc
dec
mov
enter
cmp
aam
call
mov
inc
sahf
ds
lods
ljmp
inc
std
arpl
lret
movb
fcomps
out
xor
lcall
push
cmp
adc
sub
ss
lods
shlb
jno
mov
or
gs
je
and
mov
inc
shlb
sbb
inc
fnstsw
mov
add
icebp
and
rolb
test
sbb
mov
sti
mov
mov
mov
sarl
jge
gs
loope
rorl
js
aad
scas
movsl
or
aad
pushf
pop
int
mov
lods
pop
inc
mov
or
adc
and
inc
jmp
rol
adc
xchg
adc
call
xor
rcrb
add
cmp
out
rcrb
lret
mov
scas
ret
lret
mov
in
push
loop
add
test
push
mov
cs
or
xchg
inc
sub
pop
and
int3
jge
mov
lods
mov
push
pop
mov
mov
filds
dec
xchg
outsl
mov
call
cmpsl
mov
xchg
push
loopne
dec
or
jo
lods
jbe
stc
push
shlb
mov
sbb
lcall
jle
sub
test
les
shlb
inc
lea
into
xor
lods
scas
jecxz
mov
aam
push
gs
jge
xlat
and
dec
data16
les
pop
ljmp
mov
mov
push
inc
stos
add
push
xchg
mov
clc
mov
repnz
sahf
cmp
mov
int
mov
xchg
inc
push
add
add
fstps
sahf
dec
inc
out
aam
scas
push
xlat
mov
aas
ret
mov
inc
mov
mov
jno
repnz
push
jle
sahf
in
jle
adc
in
mov
lret
clc
xor
dec
loopne
mov
ss
pop
cmp
inc
imul
pop
push
arpl
xor
cmp
xor
or
push
mov
mov
stos
mov
mov
enter
test
pop
push
xor
ds
pop
xor
xor
das
repnz
call
mov
mov
push
addr16
mov
lock
jno
test
and
leave
xchg
lds
pop
loopne
movsb
jecxz
adc
sbb
and
fisubrl
outsl
arpl
data16
movsl
pop
or
sbb
jl
enter
lret
cmp
dec
cs
adc
push
pop
aas
adc
dec
mov
xor
out
mov
adc
mov
add
lods
call
add
test
inc
sbb
adc
inc
hlt
mov
cltd
mov
repnz
push
mov
ret
ficompl
ljmp
sub
xchg
push
fcoml
cwtl
sbb
or
insb
xor
adc
orb
fisttpll
mov
out
fmull
cmpsb
inc
sahf
daa
adc
cld
mov
fcomp
xchg
cmp
jg
mov
insl
jecxz
fiadds
mov
mov
jno
lea
ds
fisttpll
shll
fcos
and
mov
add
outsb
cmp
mov
out
lret
sub
sarb
mov
je
ds
loope
sub
mov
cmp
fs
mov
scas
jb
test
into
xor
fsts
repnz
pop
add
pop
sarb
mov
pop
iret
add
movsb
cld
call
fldcw
outsb
add
inc
ret
push
lret
pop
xor
cmc
scas
xor
pop
shl
ja
sub
push
clc
mov
sub
cwtl
test
ret
xor
std
mov
imul
jecxz
mulb
and
push
mov
inc
push
ds
fs
fildl
add
inc
push
lret
daa
push
lds
and
sub
lret
dec
mov
and
or
ds
lret
cmp
in
adc
xchg
popa
mov
cltd
sarl
sbb
sub
sub
push
fwait
jb
sbb
and
dec
scas
mov
hlt
mov
arpl
jne,pn
fidivrl
sbb
add
clc
mov
pop
aad
fsubrs
push
inc
flds
call
fistps
pop
fadds
mov
mul
jmp
repnz
in
or
pop
lcall
fildll
lds
pop
jbe
test
dec
popa
ds
jno
and
fwait
ds
int
lret
mov
or
cmpsb
jb
fcoms
sub
add
xlat
mov
in
movsl
imul
adc
fsubrl
mov
push
jnp
mov
push
fnstenv
adc
mov
test
ja
add
faddp
inc
jecxz
addr16
sti
imul
cmp
push
ss
in
or
testb
enter
mov
inc
pop
outsl
lds
dec
dec
imul
xlat
mov
nopl
fdivr
sahf
in
sub
push
push
push
sbb
lods
fadds
sbb
cmpl
cmpsb
dec
movsb
popf
cmp
dec
test
loope
hlt
sub
fdivrs
inc
fnstsw
divl
jno
push
inc
sub
daa
xchg
push
fistpll
mov
and
inc
sbb
dec
in
sub
ret
xchg
daa
push
cmc
jecxz
add
cmp
loop
mov
mov
fidivs
dec
jno
adc
enter
inc
jecxz
shlb
stos
pop
add
lahf
wbinvd
jecxz
shll
into
imul
mov
ret
shr
lahf
push
lock
xor
lret
scas
fstpt
sbbl
add
lahf
xor
stos
mov
ror
inc
cld
dec
dec
xlat
cmp
push
lret
orps
enter
sbb
nop
push
xchg
shlb
push
add
pop
into
jmp
je
mov
add
fsubrp
mov
xor
insl
or
mov
dec
pop
inc
xor
xor
push
outsb
sbb
pop
call
jg
or
hlt
roll
out
xchg
loope
xor
push
adc
push
mov
jge
xchg
iret
sarb
sbb
cs
xchg
push
and
loope
push
xchg
jp
adc
jo
xor
neg
cmp
in
or
in
inc
push
mov
shlb
adc
movl
cs
adc
les
inc
mov
mov
rol
movb
popf
adc
lret
int3
mov
outsb
addr16
jnp
shll
mov
xlat
cld
sar
or
leave
jo
cmp
mov
rcr
loop
or
adc
shll
das
add
xchg
sub
sar
loop
ret
btc
adc
mov
aam
in
adc
outsl
lahf
das
mov
mov
arpl
lds
xchg
das
pop
ds
popl
inc
inc
lds
aas
mov
loop
ret
mov
mov
stc
cwtl
test
jecxz
mov
lock
std
push
pop
mov
xlat
xor
mov
in
mov
add
jg
lret
or
lret
lock
pop
push
jle
mov
add
ss
test
leave
cmp
cmpsb
loope
loop
mov
out
mov
xor
repz
cli
movl
rcr
or
or
cmp
jp
imul
int3
aas
int
inc
inc
int3
push
or
imul
inc
fimull
xchg
sbb
mov
cmp
mov
adc
push
mov
mov
stos
fildll
adc
stos
notb
mov
fadds
or
sbbb
jecxz
sbb
pop
ja
fisubrs
sub
or
sbb
sub
jae
shl
call
mov
mov
sub
les
mov
push
int
scas
cmp
cmp
jp,pt
sbb
mov
icebp
cmpsb
xor
scas
mov
adc
cmp
call
xor
sarb
int3
std
cmp
js
lds
lahf
pusha
push
cmp
std
in
mov
cld
bswap
rorl
sbb
dec
fmuls
sbb
mov
lret
ja
inc
ljmp
or
cmpsb
clc
push
add
movsb
inc
int
sub
movsb
cmpsl
loope
or
xchg
cmp
aaa
cmp
or
lahf
rcrb
jmp
aas
filds
dec
mov
mov
jl
xchg
int
jle
pushf
push
or
xchg
or
aas
sub
fcom
mov
stos
mov
mov
push
or
pusha
add
jns
cmp
dec
or
cmc
aas
in
push
rcrb
pop
mov
test
and
jbe
sub
ret
sti
jle
fdivrp
jb
mov
outsb
pop
xchg
lcall
dec
jle
dec
loope
sub
xchg
fnstenv
dec
mov
cmc
sub
pusha
pushf
roll
nop
aaa
enter
aas
in
cmc
lods
es
divb
inc
push
jp
std
and
push
mov
add
call
movsl
sar
loope
pop
adc
mov
add
pop
dec
js
rol
shl
scas
pop
fsubr
inc
or
dec
inc
dec
sahf
cmpsb
dec
imul
test
sub
sarb
mov
xlat
pop
xor
fs
jno
daa
das
movsb
mov
imulb
push
ds
imul
mov
adc
adc
sub
fildl
mov
push
in
push
aad
push
aaa
cmp
pop
inc
sbb
pop
inc
dec
sbb
pop
icebp
inc
xchg
mov
pop
xchg
hlt
xor
add
mov
shll
dec
test
pop
push
cmp
sti
cld
hlt
call
and
and
mov
out
pop
call
mov
outsb
or
xchg
int
mov
xchg
rcr
cmpb
lahf
cmp
sahf
add
add
fisttpl
out
cs
push
jmp
out
sbb
jb
jne
call
pop
jae
or
jp
add
and
dec
mov
ret
push
ret
lods
pop
fldenv
cmp
mov
pusha
jbe
jle
sub
cld
sub
inc
stc
sub
dec
pop
addb
push
jl
nop
push
pop
fisttps
sar
jb
jl
inc
call
bound
adc
inc
push
call
aaa
outsb
mov
pmaxsw
lds
jp
iret
mov
and
or
cmp
flds
xchg
rcr
or
pop
stc
fimull
mov
mov
fstl
add
dec
pop
aas
mov
xchg
mov
jg
mov
nop
adc
jp
lret
adc
fsubs
mov
dec
mov
ret
icebp
pusha
fidivrl
mov
pop
bound
call
push
mov
inc
fistps
inc
push
inc
jne
loopne
lds
imull
add
ficoml
ret
hlt
sub
dec
sub
adc
lcall
or
ficomps
xlat
das
fnsave
add
xor
cmp
loopne
call
das
cmp
and
cmp
dec
jae
mov
cmpsb
adc
ljmp
xorl
dec
sbb
mov
jmp
xchg
mov
lret
in
jmp
mov
sbb
std
lds
jmp
sarl
pop
adc
test
test
loopne
or
sbb
lret
leave
in
scas
mov
dec
xor
bnd
adc
int
iret
mov
push
dec
enter
test
inc
lods
movsb
loop
sahf
in
cld
pusha
jns
les
sahf
stos
cwtl
fidivrs
repnz
adc
arpl
cltd
fdivrl
adc
jne
and
mov
push
shlb
or
js
into
int3
frstor
adc
xchg
cmpb
or
jne
or
xor
push
hlt
cld
cmp
push
mov
insb
pop
pop
jbe
ret
mov
adc
fcmovbe
lret
movsb
cltd
pusha
mov
xchg
jl
int
lods
jno
cmp
dec
mov
sub
jb
stos
dec
or
sbb
or
adcl
pop
cltd
mov
loop
icebp
scas
mov
dec
inc
mov
jecxz
dec
xchg
ret
sbb
mov
mov
cmp
into
sbb
sub
sub
jnp
loop
rcrl
sbb
outsb
lds
clc
leave
dec
mov
push
je
loope
mov
mov
mov
std
movsl
mov
outsl
push
in
scas
icebp
out
push
loope
xchg
push
shll
imul
adc
lcall
and
dec
daa
repz
pop
sahf
dec
js
sub
aas
jecxz
cmpsl
push
cltd
fmuls
xor
adc
mov
shlb
lret
push
push
push
jae
xor
push
leave
je
push
out
pop
les
cltd
push
jle
ds
in
dec
rcl
jo
sbb
pop
or
repz
out
lret
push
inc
out
out
push
loope
outsb
push
adc
sub
out
iret
lds
dec
jno
call
sbb
je
out
out
sbb
fwait
adc
clc
popa
out
sub
cmp
dec
mov
hlt
lahf
loopne
int
jne
or
lret
dec
addr16
icebp
test
mov
mov
leave
add
mov
and
pop
cmp
mov
inc
adc
ss
push
stc
sahf
and
iret
mov
xchg
sbb
sub
mov
mov
aad
je
pop
mov
push
add
pop
or
push
sub
es
sti
aas
cmpsb
xor
in
fimull
inc
insb
xor
mov
call
divb
push
mov
test
push
push
into
pop
cmp
enter
movsb
pop
sti
ret
int3
cmp
jmp
cltd
lret
jmp
movsb
add
mov
mov
pop
mov
sahf
push
pop
dec
xlat
inc
fsubrl
pop
ficompl
add
repnz
sub
push
gs
stc
scas
icebp
cmp
icebp
dec
aam
dec
ds
enter
data16
div
dec
ficoml
out
shl
pushf
xchg
in
test
xlat
ret
add
add
inc
adc
pop
pop
cmp
mov
mov
pop
push
cmp
faddl
jl
xor
sarl
popf
jmp
pop
lret
out
inc
push
loop
mov
loope
sar
add
out
js
pop
gs
inc
jle
in
xchg
out
sbb
hlt
in
fcmovb
lock
repz
negb
stos
cmc
dec
cld
xlat
mov
lea
add
cmpsl
aam
rolb
loope
mov
mov
jno
negl
aad
cmpsb
aam
fmul
adc
mov
jge
and
sbb
test
push
mov
sub
lcall
push
jle
mov
fisubl
pop
bound
fcmovnb
stos
xlat
hlt
ds
cmp
add
mov
dec
jno
dec
sarb
ss
sahf
adc
jo
fnstcw
and
subl
sbb
pop
outsl
xchg
mov
arpl
or
jmp
leave
aaa
jp
push
in
scas
rorl
fsubrs
mov
idiv
shll
or
lods
aaa
xchg
fistl
stc
push
popa
dec
fiadds
fcoml
daa
push
rcrb
shrl
fwait
test
push
outsl
xor
dec
push
or
jb
push
xchg
jg
cmpsb
xor
mov
xchg
sub
addr16
fldt
dec
sub
pop
adc
mov
jmp
out
popf
mov
mov
aaa
lods
sti
mov
in
adc
cmp
push
popf
sbb
cmp
imul
xchg
insb
mov
xor
adc
xchg
or
jo
stos
mov
sub
cli
cs
repz
jge
je
arpl
and
stos
sahf
mov
scas
ds
out
mov
mov
jecxz
idivb
scas
iret
mov
dec
cmpsl
ljmp
xorl
aad
int3
data16
sbb
add
adc
arpl
ds
fiaddl
xor
jb
jp
and
add
jbe
jne
stos
push
push
out
push
xor
mov
hlt
sub
sbb
lods
and
pop
call
or
dec
push
and
faddl
out
jno
adc
repnz
adc
lods
add
test
gs
push
inc
add
testl
test
loope
out
sbb
loopne
test
mov
push
js
icebp
lods
lret
stos
xor
add
mov
xchg
or
mov
stos
stos
mov
xchg
and
repz
dec
cmp
in
inc
call
lock
pop
sbb
pop
fcomps
mov
mov
lcall
mov
pop
stos
mov
cmp
insw
rcrl
clc
rcll
cmp
jmp
mov
cmpsl
lahf
clc
or
ljmp
pop
jbe
inc
inc
jae
xor
xor
mov
cmp
fidivrs
dec
dec
lret
mov
inc
push
mov
outsl
aas
add
sbb
or
push
adc
outsb
mov
cli
cmp
repz
aas
push
int
stos
data16
inc
push
out
lahf
push
adc
rcrb
lds
lahf
inc
mov
xor
lret
inc
mov
sub
out
mov
mov
imul
ret
fidivrs
jp
xlat
mov
lret
cltd
pop
shrl
mov
pop
lds
cmp
or
mov
fwait
js
in
ret
mov
ss
inc
movl
xor
lcall
int3
andb
xchg
xor
fimull
cmp
lcall
push
adc
iret
mov
cmp
jno
test
insl
ficoml
jne
fsubp
xchg
dec
pop
mov
stc
decl
inc
aaa
xor
mov
repnz
ficomps
mov
enter
xor
mov
das
das
sbb
and
or
testl
cmp
cmp
xlat
fisttps
xchg
fs
jge
cmpsb
inc
movups
or
adc
fnstsw
xlat
call
out
lret
mov
aaa
arpl
xlat
int3
dec
and
addr16
ret
ljmp
movsl
in
cmp
insl
test
sub
push
jle,pn
push
dec
inc
cmpsb
cmc
std
pop
shlb
inc
fildll
je
sub
ja
push
ljmp
in
fdivrl
and
movsb
andb
mov
cmp
jo
xor
lea
jbe
aam
das
dec
and
loop
loope
faddp
std
outsl
scas
inc
jo
lret
cmp
cmp
sbb
mov
sahf
inc
shr
sarb
push
stc
sub
sub
and
into
movb
pop
and
sub
sub
sbb
pop
xchg
sti
pop
pushf
or
std
xor
scas
orl
push
cmp
pop
je
push
cld
jnp
mov
xor
mov
std
pop
imul
repz
mov
into
rolb
and
ret
aam
out
lret
cwtl
popa
dec
in
mov
loope
sti
sub
frstor
sbb
loop
mov
stc
loope
xor
ljmp
lcall
dec
lods
mov
mov
test
dec
fsubp
nop
or
or
sbb
je
sbb
loope
fxch
and
mov
cs
push
dec
in
sub
stos
adc
lcall
aam
lea
push
mov
ss
imul
jno
lods
and
inc
es
sub
and
pop
inc
sub
jne
stos
adc
dec
movsb
jae
cmp
repnz
xor
mov
xlat
push
call
rcl
incl
xor
repnz
clc
lcall
dec
xchg
in
sub
ljmp
mov
pop
icebp
and
repz
aam
cmp
xor
imul
out
sub
shlb
sub
decl
lock
xor
cmpsl
roll
lret
imul
fistpll
pop
inc
fdivl
sub
adc
stos
and
dec
ljmp
es
sbb
cltd
cli
not
cmp
dec
out
loope
sub
out
adc
test
sti
mov
and
cmc
cmp
in
ds
xchg
push
scas
js
out
add
push
mov
sbb
adc
lcall
pop
pop
pop
dec
xor
fdiv
cwtl
pop
lret
enter
inc
xchg
pop
xchg
out
pushf
out
sarl
adc
pop
inc
and
fmuls
enter
jge
mov
or
jp
incl
fisttps
rcl
jo
pop
enter
out
addr16
xchg
stos
imul
sahf
cmpb
xchg
cmp
xchg
mov
in
mov
jne
cmp
stc
test
mov
loopne
lea
mov
fistps
add
add
or
or
xchg
aad
orl
sbb
mov
mov
mov
xlat
push
clc
mov
shlb
dec
xchg
js
int3
cmp
add
fs
cmp
idivb
fcoms
inc
mov
pushw
cmp
cld
jmp
mov
pusha
push
push
iret
lcall
adc
test
xlat
into
adcb
int3
sahf
flds
add
push
cmp
pop
dec
add
jle
pop
xchg
lcall
and
subl
rolb
lods
loope
mov
dec
xchg
inc
or
sbb
std
testb
or
cmpsl
not
ficomps
das
xlat
pop
mov
mov
inc
idivb
cmpsl
adc
movsb
cs
sahf
popf
mov
mov
mov
aaa
mov
aaa
jp
hlt
fidivs
push
mov
jno
cmpsb
jp
adc
dec
or
pushl
mov
mov
inc
sub
xor
jecxz
scas
pop
mov
loop
enter
scas
fcoms
add
mov
stos
push
stos
loope
mov
dec
imul
andb
imul
scas
xor
loope
dec
rclb
pop
dec
xor
lret
std
fxch
loopne
loope
rcrl
lret
les
dec
adc
nop
lret
push
ror
stos
loop
imul
jg
xchg
movsb
jecxz
adc
sub
xor
cltd
jcxz
pop
lods
xchg
jecxz
xchg
lock
or
push
lods
test
dec
lock
enter
sbb
pop
sub
push
xchg
mov
mov
movsb
test
iret
push
pop
dec
mov
rcr
inc
inc
mov
xchg
scas
pop
sti
xor
int3
sahf
mov
arpl
jge
stos
enter
pop
push
stc
cmp
adc
cmp
ds
pusha
mov
xchg
inc
jp
repnz
mov
pop
loope
lret
cmp
clc
or
loope
stc
call
mov
xor
hlt
adc
mov
cmp
clc
dec
ret
hlt
push
fcmovnbe
mov
add
fistps
mov
sbb
or
shlb
mov
pop
sahf
dec
mov
in
inc
or
pop
push
add
lods
and
movl
arpl
pop
adc
stos
inc
xor
jmp
fisubl
scas
push
lret
lahf
fcmovne
sub
ficompl
enter
lret
call
sbb
lods
or
add
outsl
sahf
fcomps
or
mov
mov
cmp
cmp
shrb
cmp
and
dec
cmp
sti
sbb
adc
rcr
mov
dec
xchg
lret
dec
mov
push
int
mov
loopne
sbb
xchg
dec
dec
xchg
cwtl
mov
cmp
ds
mov
mov
sub
dec
or
leave
add
mov
cmc
cwtl
xchg
test
gs
mov
hlt
mov
xor
lock
jo
lds
pop
cld
adc
jbe
bswap
sub
out
lods
idiv
mov
test
xlat
sbb
lret
stos
lds
or
or
popf
icebp
arpl
and
faddp
shlb
sahf
add
aas
and
inc
shlb
not
lret
dec
pop
adc
sbb
adc
outsb
or
sub
out
es
ffreep
arpl
xlat
aad
dec
dec
in
add
aad
movsl
pop
inc
aad
dec
cmpsl
subl
inc
jecxz
call
push
or
pushf
fdiv
fldcw
mov
cld
mov
sub
addr16
lret
lahf
and
add
mov
cmp
pop
aaa
adc
mov
ror
pushf
fcoms
pop
pusha
pop
enter
xchg
cli
adc
cmc
xor
std
popf
or
stc
push
mov
notb
fisubrl
daa
sbb
jo
push
in
mov
decl
cmp
out
mov
icebp
add
andb
and
xor
into
or
cmpb
pop
imul
cs
cld
mov
sub
sub
sbb
stos
add
ret
or
es
rcrl
and
mov
sbb
leave
adc
loopne
data16
mov
and
or
mov
xchg
sti
je
ret
sub
mov
cmpsb
aas
xor
ss
sub
lret
mov
sbb
pop
in
fisubl
and
test
inc
and
lret
sar
mov
or
movsb
adc
adc
jmp
imul
into
sbb
sub
mov
xchg
aam
scas
mov
mov
dec
mov
and
arpl
fwait
mov
icebp
or
cmp
das
sub
insb
je
sar
pop
cmp
ds
fadd
adc
into
pop
sub
mov
mov
or
jle
ficoms
sub
outsl
out
les
cli
and
or
mov
and
mov
daa
jg
ret
das
mov
push
into
xchg
pop
xchg
mov
mov
fs
mov
cmpb
mov
cli
and
cld
xor
pop
push
out
movl
inc
loope
mov
xlat
pusha
incb
adc
push
sub
loope
cli
adc
add
sub
add
cli
adc
inc
fs
add
pop
es
popf
mov
or
fistpll
out
xchg
mov
mov
sarb
mov
pop
sbb
xchg
push
jae
lret
dec
rolb
cli
mov
inc
xchg
adc
mov
ret
jl
cli
pop
xchg
xchg
aaa
xchg
inc
mov
mov
jo
push
out
mov
movsb
jmp
or
into
call
int
das
arpl
test
lcall
cli
jp
adc
sbb
adc
ret
mov
xchg
scas
dec
adc
inc
push
adc
adc
xor
outsb
jmp
jp
outsb
test
int3
push
fwait
cmp
mov
lock
adc
push
inc
adc
adc
aas
push
pop
ljmp
out
mov
mov
cmp
push
fidivrl
mov
popa
addr16
ljmp
iret
mov
sbb
xlat
ret
xor
stc
call
add
inc
bound
mov
pop
mov
inc
aas
push
or
jmp
into
fmulp
shlb
pop
lret
pop
mov
and
fwait
iret
mov
jp
mov
mov
pop
mov
pop
orb
cli
inc
mov
or
mov
inc
lock
ret
add
stc
arpl
pop
adc
ret
sub
std
add
nop
mov
lret
pop
out
repz
adc
ljmp
cmp
xchg
mov
imul
out
mov
sahf
inc
add
sub
arpl
enter
ljmp
add
sbb
inc
push
sub
cmp
push
js
sub
idiv
ds
lcall
sarl
push
or
sbb
sub
fcmovnu
inc
lahf
aad
ret
xchg
or
mov
ficoml
dec
pop
sbb
es
fistl
lock
sbb
shl
in
incl
fimuls
int3
xchg
jmp
iret
or
sbb
lret
loope
int
scas
daa
and
fwait
lret
sub
dec
jno
xorb
sub
test
xor
pop
inc
inc
jp
mov
jp
xor
inc
inc
sub
jle
scas
mov
shlb
popf
fisubrs
inc
inc
test
hlt
std
jle
sahf
scas
and
out
push
hlt
std
sub
scas
push
std
and
imulb
lcall
test
hlt
and
hlt
stos
aad
pop
lcall
cmpsl
out
lcall
xor
into
daa
aam
inc
inc
or
jle
scas
mov
fldcw
std
out
add
lcall
sub
xor
xor
inc
jle
cmpsb
hlt
fxch
sub
xor
inc
jae
jle
scas
adc
mov
std
jle
scas
adc
fnstenv
lcall
test
hlt
fld
sub
loop
incb
push
test
hlt
std
bound
cmpsb
jp
sub
inc
adc
jle
scas
mov
fnstenv
std
bnd
mov
xor
inc
outsb
test
hlt
std
stos
jp
das
and
subb
rcr
or
sbb
sub
outsl
mov
testl
xchg
sbb
rep
xlat
aam
jle
cli
lret
ret
xchg
in
sbb
out
jecxz
aad
not
or
sub
or
push
je
cmp
sub
dec
cmp
sub
sahf
sub
clc
int
mov
sbb
nop
cld
dec
sbb
or
sbb
enter
push
pop
ret
in
mov
lret
roll
mov
lret
inc
sti
add
mov
sub
sbb
cli
fdivrp
stc
movsl
ds
sbb
pop
sbb
inc
sbb
fcmovu
movsb
xlat
arpl
insl
pusha
add
sub
fnstsw
pop
int
sar
es
movsb
xchg
sti
and
pop
mov
int3
xchg
push
enter
sbb
and
mov
mov
ficompl
sbb
cli
add
push
and
int3
push
mov
pop
fs
push
cmp
sbb
cli
std
daa
push
and
or
int
push
jecxz
mov
adc
push
xorb
pop
out
mov
cmp
in
in
loope
and
mov
xor
loop
out
xor
push
or
rorb
dec
repz
lret
pop
rorb
lret
repz
or
out
pop
pop
idivb
cmp
cmp
out
or
dec
cwtl
dec
clc
rcrl
pop
ljmp
pop
scas
sar
pop
sub
lock
popa
faddp
mov
adc
sbbb
stos
dec
pop
sbb
xlat
jle
mov
cli
push
mov
fildll
hlt
bound
push
and
sbb
pop
mov
and
sub
cmp
add
sti
xchg
fbstp
addb
cmc
sub
arpl
sub
repnz
loope
rcr
idiv
sti
addb
filds
sub
idivl
or
and
add
jecxz
mov
push
lret
jo
sbbb
jp
or
orb
ljmp
testl
add
pop
jb
jno
lcall
aam
std
push
dec
inc
pop
cld
testb
aas
xlat
shl
push
fcmove
mov
cmp
fs
dec
enter
mov
sbb
bound
sbb
xchg
fldt
sub
sti
pop
cli
aam
push
or
fildll
jp
rcr
fimull
insb
dec
inc
scas
mov
fiaddl
jmp
ficompl
cwtl
sub
faddp
sarb
cwtl
inc
sbb
int
out
push
sub
dec
mov
pop
rcr
dec
ds
fcmovne
xchg
push
fidivrs
xor
push
sbb
fcmove
or
shll
dec
sti
xor
fisubrl
mov
inc
out
pop
clc
add
ljmp
sbb
push
push
in
idiv
subb
subl
add
std
leave
notb
lret
sti
aam
nop
jle
sti
push
cmp
push
incl
icebp
imul
insl
or
das
adc
cld
idiv
add
xchg
rorl
testl
sub
sahf
add
out
push
fs
inc
movsb
in
or
ljmp
mov
lds
xor
add
cld
call
or
or
iret
cmp
aam
mov
mov
aad
inc
insb
negb
cwtl
test
xchg
pop
xchg
mov
aad
das
rcrb
add
and
xor
add
pop
out
xorl
jge
into
fsubrs
xor
repz
cmp
push
sub
jp
cmp
add
int
xchg
clc
fcomps
out
testl
or
jnp
sub
das
aam
push
pop
das
sbb
cmp
enter
cmp
ret
idiv
xor
xor
rolb
add
cmp
ljmp
subl
xor
fs
xchg
mov
dec
das
incl
mov
popf
stos
movl
inc
pop
mov
adc
xor
cmp
push
das
jmp
stos
mov
mov
pop
adc
leave
inc
jno
mov
ds
mov
pop
or
xor
cmc
push
lods
lret
mov
push
or
push
xchg
into
push
into
test
movsb
mov
or
dec
jno
arpl
mov
lds
push
clc
cmp
xor
ljmp
xchg
mov
into
fwait
adc
pop
xchg
inc
gs
sub
lock
arpl
cli
sar
stc
mov
xor
nop
lea
stc
xorb
scas
mov
pop
cmpsb
push
jle
icebp
lahf
jmp
jnp
jecxz
subl
ds
xchg
js
xor
mov
in
cmp
xor
xor
jp
out
test
xor
adcl
lods
jge
xor
imulb
xor
and
add
cli
fld
sti
inc
jle
pop
in
xbegin
sub
jmp
hlt
in
xor
cmp
call
push
mov
mov
idivl
and
aas
mov
adc
shr
inc
pop
mov
into
pop
fiaddl
scas
cmp
sar
mov
cmp
lcall
sub
xlat
adc
cli
inc
xchg
push
fwait
jnp
andb
cmpsb
mov
cwtl
daa
outsl
ds
int
adc
enter
stc
dec
jp
mov
pop
leave
lcall
sub
jp
jbe
xlat
push
mov
lret
ds
fisubl
lds
sbb
add
es
sbb
cld
xchg
push
mov
cmp
add
jg
mov
cli
mov
mov
aaa
pop
mov
pop
pop
jns
outsl
lcall
dec
add
inc
divl
cmp
sahf
mov
movsb
xor
lods
cmp
xor
hlt
xchg
cli
ret
scas
inc
sub
fdivrs
and
mov
mov
dec
inc
pop
dec
inc
xor
jle
rorl
mov
imul
add
sbb
test
or
sbb
mov
lret
clc
jne
xchg
loop
fsubl
decb
int
cmp
dec
repnz
stc
add
add
push
or
in
out
push
in
push
out
cmovb
addr16
mov
hlt
in
xchg
lods
push
int
push
pop
or
ret
les
rolb
mov
sub
repz
mov
call
fstl
fdivr
shlb
adc
ret
aad
pop
std
inc
cmp
mul
mov
mov
cmp
into
test
scas
add
push
lret
push
cmp
filds
jp
pop
in
and
xchg
sbb
mov
into
scas
mov
mov
inc
subb
push
inc
negb
sbb
ficomps
cmp
push
ds
push
fdivrp
cmp
or
out
sbb
cmp
loop
rcrb
out
faddp
cmp
out
mov
fdivr
lret
xlat
add
xchg
call
xlat
push
add
jle
pop
addr16
pop
jle
pop
dec
ret
cmp
lret
xlat
xor
or
xlat
fdivrp
out
call
xlat
cmp
rcll
xor
shl
rcrb
dec
clc
test
das
cmp
xchg
xlat
dec
add
dec
fistps
bnd
pop
inc
cli
pop
dec
cli
inc
or
ror
mov
aad
scas
jae
repnz
in
xor
rcrl
xor
xchg
sub
mov
push
mov
jmp
dec
pop
fdivrl
cmp
xchg
mov
mov
mov
push
data16
outsl
push
repnz
movhps
ljmp
push
fnstsw
clc
mov
outsl
sbb
mov
leave
mov
jb
std
adc
ret
int3
push
lret
jmp
dec
stos
xor
imul
cmp
xor
xlat
cmp
jmp
sarb
add
imul
dec
pop
pop
ds
loop
shll
adc
outsl
dec
cmpsb
xchg
mov
fnstenv
sti
into
je
mov
inc
add
push
mov
and
clc
xchg
js
cmp
xchg
sub
rol
cmp
fs
jecxz
ss
jo
cmc
sahf
cmp
cmpsl
jl
sbb
inc
dec
incb
sbb
pop
sarl
in
cmp
pop
sub
lret
fimuls
data16
mov
rol
insl
inc
jb
jg
push
sti
mov
push
mov
movsl
pop
pop
pop
mov
test
mov
or
pop
inc
mov
aad
int3
add
cmp
scas
xor
jo
cmp
jne
mov
repz
lds
adc
mov
stc
icebp
fadd
ror
mov
les
outsl
sbb
mov
inc
or
add
jae
mov
adc
stos
xor
jg
leave
in
jnp
mov
in
add
dec
ss
jbe
mov
xchg
outsb
mov
pop
cmp
mov
dec
xor
jmp
mov
push
out
cmp
xchg
sub
lret
test
fs
stos
sahf
lods
scas
add
leave
cmp
fiaddl
lock
mov
adc
lods
or
into
jne
arpl
xchg
sub
cmp
inc
aam
idivb
clc
xor
ds
sub
add
imul
leave
mov
sub
in
imul
in
push
movb
and
sbb
pop
iret
stos
inc
shlb
add
insb
lret
lret
imul
jns
arpl
cmp
rcl
add
jbe
jbe
push
inc
dec
dec
dec
clc
inc
adc
lods
jne
dec
shl
pop
je
inc
mov
add
xlat
lds
push
adc
cmp
dec
mov
jb
sti
mov
jo
fs
repz
out
fwait
cld
gs
inc
push
cwtl
jge
cli
add
pop
cwtl
push
fisubrl
out
xchg
shl
sar
mov
mov
jb
or
clc
cmp
mov
ds
mov
pop
in
shrb
dec
sub
rol
push
mov
xchg
xor
lods
push
sub
sub
out
ret
aas
push
sbb
ret
test
xchg
fldenv
stc
lcall
dec
cmpsl
dec
inc
outsl
stos
fadds
xor
add
adc
push
dec
fidivrl
jge
push
mov
cmp
adc
xchg
mov
rcrl
mov
cmpsl
xchg
adc
lock
push
sub
fs
jge
and
mov
out
and
mov
mov
cli
add
fxch
sub
leave
xor
sub
imul
sub
jl
mov
call
repnz
pop
cmc
aas
mov
inc
std
mov
cli
mov
sbb
adc
fidivrl
outsl
xchg
fdivp
frstpm(287
mov
lds
mov
pop
cmp
je
and
jge
ds
inc
cltd
mov
add
or
xchg
mov
es
into
and
xchg
es
push
sahf
jo
and
daa
dec
and
fstl
stos
pop
imul
aam
cld
fsubrp
push
fstpl
and
push
rcll
fbld
icebp
or
xchg
mov
mov
rorl
enter
mov
test
inc
push
xor
fcmovnu
dec
scas
xlat
xor
push
xchg
cmp
ja
std
into
ljmp
rcrl
cmp
cmc
loopne
adc
pop
xor
sahf
leave
outsb
mov
popf
cli
iret
loop
outsl
adc
xor
pop
dec
aad
jns
dec
sbb
cmp
lods
arpl
and
lret
iret
in
stos
xor
loope
inc
or
mov
push
mov
and
stc
xor
mov
into
stos
lods
movsb
ds
movsb
mov
flds
mov
inc
int3
xchg
pop
in
rolb
ljmp
sbb
add
leave
pop
adc
inc
xchg
mov
stc
cmp
repnz
mov
sahf
fldcw
cmpb
inc
xchg
push
je
fidivl
ds
subl
test
mov
cmp
adcb
inc
ror
hlt
xchg
insb
sarb
test
daa
mov
mov
xchg
cld
fmuls
adc
mov
sbb
loop
mov
add
int
int3
cmp
faddp
in
inc
push
sar
xchg
ret
xor
cmp
inc
push
popf
cs
into
aas
ss
fsts
dec
sarb
pop
inc
dec
int
cld
fsub
stc
pop
ds
out
jbe
into
shll
mov
mov
jne
outsb
cld
sti
lods
xor
data16
out
cmpsb
sub
pavgb
repnz
mov
sub
aam
stos
mov
repnz
repz
add
addr16
inc
mov
jns
ds
jb
or
or
xor
cmp
or
xchg
sub
cwtl
ds
lret
adc
scas
fcmovnb
fwait
dec
fxch
arpl
sahf
jecxz
mov
fwait
or
rcr
sbb
cwtl
rcrl
das
sub
das
add
sub
mov
sub
and
ljmp
or
stc
aas
call
adc
test
add
test
mov
sub
dec
cmp
loop
in
xlat
xor
dec
pop
lret
mov
int3
imul
mov
hlt
inc
sub
ffreep
cli
cmp
add
int3
pop
pop
out
push
push
pop
int
add
inc
cbtw
jmp
sar
rcr
mov
lcall
addr16
mov
cmp
jbe
loop
std
pop
fsub
stc
idivb
dec
lahf
dec
cmp
push
sarl
std
pop
push
cmp
test
cwtl
es
loope
rcl
cmpsb
and
inc
pop
loope
cmpsl
pop
repnz
das
shrl
or
sbb
aad
pop
movl
push
lcall
mov
mov
and
dec
add
dec
push
cmp
sbb
gs
sub
jnp
rcl
lret
test
hlt
pushf
push
mov
jl
push
cmpsb
mov
repnz
pop
mov
into
dec
int
pop
inc
cli
mov
jle
inc
negb
or
std
insl
fadd
stc
and
push
lcall
mov
cmp
xchg
jnp
sahf
or
sahf
dec
loope
sub
ds
insb
mov
push
push
push
pop
sub
push
es
xor
sbb
out
mov
push
scas
andb
mov
cmp
xchg
addr16
aad
push
movsb
orl
test
push
aam
int
pop
push
push
mov
int
fwait
jle
inc
cwtl
test
enter
insl
fmul
stc
es
mov
int
inc
cli
loop
cmp
inc
cbtw
adc
movsb
in
or
cmp
push
pop
in
jp
int3
cs
pop
xchg
push
in
and
cwtl
mov
loope
jo
mov
in
cli
mov
push
sbb
int
push
sub
fiaddl
out
cmp
jne
adc
xchg
dec
shlb
sub
imull
fwait
lea
pop
insb
sbb
pop
loopne
or
les
push
pop
push
rolb
in
mov
out
jecxz
in
xlat
daa
push
add
rcrl
inc
xor
ds
push
inc
dec
rclb
pop
inc
outsl
fadd
stc
jbe
sbb
mov
vshufps
ds
imul
fbstp
fildl
cmp
or
add
mov
cmp
push
hlt
or
cli
mov
aad
push
hlt
cmpsb
aaa
cli
enter
repnz
fnstcw
xor
mov
cwtl
xchg
mov
or
mov
add
lret
jbe
ds
and
out
sub
or
rcrl
aam
add
lret
cmpsb
push
cmp
jne
mov
scas
jp
jns
and
ret
jl
or
xchg
add
xchg
cmp
cmp
jp
loope
or
inc
sbbb
movsl
sub
imul
mov
insb
dec
fidivs
cmp
repnz
test
xlat
xchg
sbb
sbb
push
xchg
add
repnz
cmp
pop
fs
push
pop
pop
xor
mov
push
cli
rorl
ljmp
mov
test
jp
loope
adc
or
pop
rclb
sahf
shlb
xchg
xor
lcall
add
into
push
int3
xlat
push
add
push
or
jno
insl
and
aam
rcl
adc
or
mov
fiadds
push
push
dec
insb
mov
repnz
and
ret
jg
push
outsb
mov
imul
setle
lret
jg
clc
and
push
mov
filds
jb
lret
dec
daa
ret
rcr
stc
iret
or
push
xchg
ds
cmp
sahf
push
push
sbb
int
out
movsl
lcall
dec
loop
fcmovnu
rol
push
int3
or
lret
mov
add
mov
jmp
jo
cmp
and
rcrl
aam
and
outsl
es
jo
adc
rorl
lahf
icebp
dec
add
fistps
pop
daa
jge
imul
or
les
flds
shlb
movsb
sub
jp
fs
xchg
or
xlat
call
mov
push
rep
addr16
jbe
sbb
in
inc
and
aam
mov
sbbb
xchg
dec
popa
movl
stc
and
test
add
mov
sbb
pop
inc
jp
push
divb
fimull
sub
or
push
pop
popa
jne
scas
xor
lret
outsl
scas
lcall
jmp
lcall
cmp
jo
jne
outsb
and
ljmp
scas
outsl
dec
mov
pop
mov
mov
xchg
loop
hlt
stos
jnp
stos
or
scas
and
fsubp
outsb
xchg
in
loope
inc
out
ss
xchg
ret
jnp
hlt
mov
cmp
add
sub
adc
lods
add
mov
aad
push
subb
or
lahf
inc
aas
sub
je
testb
pop
ljmp
clc
adc
mov
mov
shll
out
inc
push
xor
dec
in
stos
in
outsl
fsubp
shll
bound
add
or
into
movsl
lea
hlt
idiv
in
push
aas
int
stc
mov
adc
pushf
movsb
jb
fistps
push
int
test
rol
mov
adc
add
or
jne
pop
cmc
pop
scas
imull
int
imul
sub
lods
das
cwtl
je
rolb
pusha
and
or
shrb
scas
cmp
scas
mov
int3
fisubl
aam
cs
mov
mov
push
sarb
movsb
lcall
lock
inc
pop
fidivrl
es
inc
mov
sti
stos
repz
mov
ret
ret
lret
stos
jp
cmp
push
sub
scas
test
dec
add
inc
rol
je
stos
mov
lea
xor
lods
add
inc
clc
fnstsw
cmp
sbb
arpl
jp
xlat
dec
sub
mov
inc
jb
cmpsl
lods
push
adc
push
push
sbb
rcr
cmp
aam
leave
int
sub
cli
mov
cmpsb
cmpps
loope
push
adc
cmpsl
sbb
ja
push
and
add
jae
dec
movsl
dec
mov
pop
xor
pop
cmp
add
into
add
ljmp
ret
out
jo
cld
jae
dec
sbb
xor
xlat
jmp
lock
ror
sub
mulb
cmp
sahf
xlat
je
or
ret
out
mov
mov
loop
xor
lds
aad
dec
cmp
dec
fsub
adc
js
mov
inc
inc
mov
and
cmp
leave
mov
orb
cmp
lods
and
sahf
lcall
xchg
lea
lea
push
and
jae
and
xchg
jne
neg
and
sahf
mov
mov
outsl
cmc
aam
cmovno
ja
add
add
dec
cmp
fimull
aas
pop
fs
push
dec
scas
call
jbe
cmc
cwtl
mov
xorb
xchg
adc
loop
cmp
andnps
ljmp
arpl
leave
movsl
inc
ficoms
shrb
add
scas
call
movsl
lock
adc
jnp
jp
mov
sbb
sarb
sahf
mov
push
jbe
aad
imul
lret
jb
or
out
ror
add
cmpsb
mov
addr16
mov
leave
into
or
jge
push
push
mov
sbb
xor
inc
adc
mov
das
scas
lret
shlb
or
inc
inc
pop
sbb
mov
push
fistl
lea
mov
dec
add
mov
lret
ljmp
out
sbb
shll
sahf
dec
push
pop
out
sub
pop
fmuls
out
ficomps
mov
cmp
test
leave
call
fidivrl
dec
inc
cmp
repz
or
sarl
mov
push
mov
mov
out
mov
fs
jge
fidivrs
cli
lcall
sub
add
dec
dec
mov
pop
ret
mov
sbb
push
cmp
or
int
out
add
aaa
ret
adc
cltd
mov
mov
jp
sub
fdivr
dec
lcall
cld
dec
adc
cmp
std
test
divb
lret
scas
pop
or
xor
dec
and
push
jo
outsb
cmp
sahf
xchg
xchg
lods
jbe
inc
sub
pop
shlb
push
fiaddl
adc
cmp
pop
mov
rorb
add
or
or
fisubl
mov
add
cmp
scas
pop
test
push
addr16
cmp
addr16
loope
inc
inc
push
or
in
push
dec
mov
shlb
scas
popa
push
cmp
push
push
mov
lretw
mov
shll
cmpsl
lret
xorl
dec
mov
xlat
daa
shrb
or
subl
and
call
inc
subl
andb
loopne
ja
pop
lret
xor
int
mov
xchg
out
xchg
dec
mov
popf
aam
fnstsw
repz
dec
adc
cmp
push
push
mov
xchg
outsb
jle
push
cmpsb
sahf
outsl
cmp
rcrl
push
inc
sub
xchg
mov
pop
push
add
cmpsl
mov
and
mov
sub
pop
int3
cmpsb
pusha
int
mov
mov
nop
inc
or
mov
pop
push
mov
stos
dec
cli
jmp
scas
cmp
mov
or
scas
sahf
or
xor
mov
fdivrl
xchg
loop
sub
cld
div
mov
mov
mov
cmpsb
bound
fistpl
repz
cli
dec
xchg
jl
ss
pop
imul
xor
call
mov
arpl
mov
std
test
aas
icebp
mov
jle
cli
testb
into
adc
ja
mov
mov
xor
add
call
jnp
aad
pop
mov
lcall
jbe
lds
xor
xchg
insl
out
mov
adc
mov
mov
fdivr
mov
stos
in
dec
insb
push
in
into
pop
add
add
fs
lds
dec
into
pop
sub
push
je
jl
cmp
mov
adc
cmp
popf
xor
fadd
jecxz
xor
push
scas
push
add
adc
jl
sahf
es
sbb
call
imul
jnp
repz
push
mov
mov
xor
data16
cmp
ret
imul
loope
pop
cli
movsl
dec
into
push
xor
js
fisubrs
xlat
fstl
enter
les
push
sar
cli
ret
fdivrs
ret
fildll
mov
ret
loope
ds
mov
fidivl
sti
push
mov
lds
ret
mov
cli
fdivrs
cmp
mov
xlat
add
mov
ds
mov
xor
mov
mov
cltd
cli
leave
fcomps
mov
dec
xchg
test
cmp
xchg
push
sti
fiadds
add
mov
xor
and
add
jp
stos
fsubl
sub
stos
cmpsl
dec
mov
pop
sar
ret
in
lahf
xchg
push
imul
xchg
ror
adc
cli
pop
icebp
add
cmp
or
aas
jns
jmp
jle
clc
aas
fwait
and
ror
cmp
xchg
mov
mov
pop
addr16
cmpsl
fwait
bound
sahf
jge
pop
jnp
mov
outsl
cmp
into
sarb
mov
outsl
hlt
lods
xor
ds
aaa
mov
scas
fmul
shrb
out
test
jo
cmp
push
inc
xchg
hlt
adc
jl
dec
movsl
push
stos
pushl
mov
or
adc
add
or
cwtl
rcl
pop
and
pop
mov
lret
add
xor
push
lret
aam
or
add
dec
jle
daa
ret
adc
pop
jae
sahf
jle
sub
ret
or
push
pop
jl
aam
cmp
loope
and
fsqrt
leave
add
lds
sbbb
mov
or
into
add
pop
shlb
mov
or
pop
mov
jb
imul
xlat
lea
nop
in
in
pop
push
pop
mov
push
repnz
xchg
movsb
stos
ja
sahf
xlat
pop
in
call
pop
push
lret
jo
dec
sahf
lock
pop
sub
push
jnp
mov
insl
push
pop
mov
mov
mov
mov
fcoms
jne
adc
mov
jmp
inc
cmp
or
mov
shlb
lret
inc
cmp
and
mov
jns
add
xchg
push
push
xlat
lcall
or
sarl
lcall
jae
fldcw
mov
or
sbb
sbbl
dec
aas
xchg
call
or
rol
std
cmp
pop
or
fstps
mov
imul
dec
adc
mov
cmpsb
setle
enter
fcomi
jl
inc
ss
add
sub
outsl
sub
pop
pop
inc
sub
ret
inc
sahf
gs
je
repz
pop
mov
pop
mov
push
loopne
fsubrp
adc
imul
aaa
dec
cs
mov
inc
repnz
jecxz
jns
insb
loop
cmpsl
xchg
inc
int3
add
dec
ja
and
das
sbb
mov
dec
add
mov
sbb
addb
out
dec
xchg
xchg
hlt
pop
mov
arpl
push
jle
adc
sarb
loopne
push
adc
mov
sarb
cmpl
mov
xor
xchg
xchg
lock
lods
ret
jp
incl
lock
inc
stc
xor
movsb
js
mov
rol
sub
push
jno
push
lock
negb
mov
mov
inc
lahf
pmaxub
add
iret
sti
mov
incb
fbld
aam
fldenv
clc
gs
enter
aaa
jp
and
jmp
pop
dec
pushf
insl
inc
out
mov
test
imulb
cmp
lea
sbb
and
iret
sahf
mov
mov
push
fxch
shl
std
dec
sbb
cmp
cltd
in
or
and
lret
ret
clc
repnz
fwait
inc
add
inc
sahf
xchg
sbb
arpl
gs
add
cld
cs
clc
ljmp
in
cwtl
jo
push
addr16
lret
and
cli
pop
mov
call
mov
repnz
xor
lret
push
cli
add
adc
sub
push
cwtl
jge
mov
clc
pop
cld
xor
rcrl
int
push
or
inc
loope
repz
mov
push
mov
cmp
xchg
xlat
in
and
add
je
push
mov
dec
mov
in
or
push
in
and
mov
into
adc
cli
jno,pt
add
cmp
dec
lret
jg
mov
add
notb
and
lea
outsl
push
inc
into
fidivl
and
mov
push
cli
cli
pop
sti
fwait
mov
loopne
push
fsts
push
xchg
ret
push
iretw
inc
in
jbe,pt
aam
cmp
or
xchg
push
or
push
leave
lcall
cmp
stos
jecxz
ret
fmul
fsubrl
ret
mov
push
call
into
loop
push
or
xlat
ljmp
cli
loop
ljmp
mov
lods
in
icebp
sub
in
adc
fdivr
cli
in
or
pop
negb
lds
and
cmp
mov
inc
push
enter
es
call
sub
clc
and
push
sbb
cli
data16
iret
sub
xlat
cs
mov
in
xor
cmpsb
out
ret
xlat
mov
cmp
ficoml
scas
xchg
xlat
pushf
inc
dec
adc
call
js
clc
push
data16
xor
clc
fcmovu
jp
mov
mov
mov
clc
fldenv
inc
mov
adc
xor
sbb
jne
stc
movsb
adc
in
in
xchg
movsb
addr16
mov
pop
les
pop
mov
or
out
or
add
jae
lods
dec
adc
retw
sahf
pop
cmp
sbb
push
cmp
cmp
inc
popf
fbstp
insb
or
andl
ror
outsl
stos
outsl
mov
loopne
sub
lret
stc
push
sub
add
add
sbb
sbb
xor
push
pop
sbb
xor
cmpsl
add
sbb
in
jp
repz
and
aaa
fiadds
loopne
mov
mov
andl
sti
adc
bound
jne
sti
and
mov
jbe
out
adc
cmpl
jb
cmp
xor
into
ror
dec
popa
out
lret
fimuls
and
into
clc
loop
into
pop
jno
add
in
int
hlt
lret
mov
addr16
xchg
test
scas
loop
xor
or
or
or
sub
jae
push
or
xor
xor
in
lret
dec
std
mov
data16
cmpsb
or
stc
roll
or
jb
imul
jp
fildl
cmpsl
mov
jge
fidivrl
adc
std
push
push
scas
cmp
mov
mov
in
int3
sbb
cmpsb
mov
leave
lds
cs
mov
les
mov
iret
fcoms
jle
push
sbb
xor
cli
daa
push
shll
mov
jno
in
dec
clc
mov
int3
mov
addb
or
mov
lret
repnz
popf
sub
mov
adc
xlat
or
call
ljmp
out
sbb
adc
ret
xchg
fidivrl
int
sbb
cwtl
push
jb
stc
and
int
es
gs
jb
loope
sub
inc
cmp
dec
das
loopne
sbb
fxch
inc
push
pop
dec
xchg
ret
and
aaa
fisubl
dec
adc
add
cwtl
repnz
cli
ret
dec
adc
adc
sub
jbe
imull
inc
cltd
ret
addr16
ss
jno
mov
cltd
mov
sub
mov
mov
cs
jl
mov
dec
in
cmpsb
lock
dec
roll
enter
xor
sub
or
xchg
push
test
xor
push
mov
add
adc
or
nop
fcomps
adc
or
xchg
push
dec
fidivl
pop
cli
aas
fiaddl
hlt
sub
cmp
arpl
pop
es
mov
add
sar
and
or
xor
pop
clc
dec
sbbb
fucomp
lahf
sub
js
mov
mov
out
lds
mov
dec
cmp
push
xchg
add
sub
push
jp
adc
add
add
jo
shl
idiv
not
cs
lret
iret
aas
add
cmp
pusha
fnstsw
inc
lds
xor
sbb
fcomps
fistpl
sub
jg
lcall
outsl
mov
and
add
testb
mov
jle
inc
mov
sbb
inc
and
mov
idivb
jb
enter
cmp
data16
scas
mov
lret
shll
push
sbb
mov
xchg
mov
pop
adc
add
enter
push
imulb
cwtl
pop
ds
js
lret
mov
mov
sbb
dec
hlt
outsb
pop
xchg
push
popa
shl
add
lret
xchg
outsb
pop
idivl
ljmp
jp
fsubs
mov
ret
inc
ret
aam
mov
std
xlat
lret
sbb
repnz
fimull
popa
inc
stos
fstps
inc
lcall
lock
push
filds
dec
out
outsb
cmp
sub
mov
pop
loop
pop
sbb
loope
daa
mov
scas
and
stos
sbb
in
loopne
mov
adc
push
or
lcall
push
xor
sbb
mov
xor
int3
dec
out
rcrb
into
sub
adc
and
fdivl
and
lea
or
cmpsl
mov
pop
jo
jbe
stc
or
mov
divl
into
push
mov
std
push
call
mov
bound
dec
sahf
pop
das
pop
mov
cmp
outsl
negl
cmp
std
dec
scas
test
les
mov
popa
pop
lea
loop
xor
repz
jle
jge
ret
ss
sahf
sbb
scas
aas
je
scas
adc
nop
pop
cmpsb
in
jl
sub
lcall
fiaddl
scas
aad
xchg
sub
cmp
cmp
jae
stos
mov
les
mov
jp
xor
out
push
mov
mov
push
mov
mov
ret
add
cmp
gs
fsubrl
lret
mov
mov
push
lods
and
or
push
sahf
fldcw
daa
mov
dec
cli
rcll
mov
jns
xchg
sti
xchg
xchg
adc
ret
jge
mov
xchg
scas
andb
ret
xchg
pop
imul
fstpl
mov
ret
lcall
pop
std
sbb
or
test
dec
mov
orb
scas
mov
mov
or
clc
lret
push
pop
ss
jg
pop
mov
cmp
jb
sub
into
add
mov
cmp
inc
mov
inc
or
jge
shrb
sub
xor
ds
and
aam
mov
push
mulb
pop
das
sbb
ljmp
cmpsb
iret
aas
repnz
cmp
jnp
cmp
pusha
fiadds
jbe
ret
insl
daa
test
inc
mov
scas
cmp
jg
xlat
test
scas
int3
fwait
hlt
push
pop
pop
jmp
adc
mov
cmc
mov
or
pop
loop
leave
ds
loop
andb
pop
sub
dec
ds
cmpsl
stos
mov
inc
add
mov
mov
dec
sub
cld
fwait
aad
es
mov
aad
mov
or
cmpsb
mov
fnstcw
adc
pop
pop
inc
or
push
inc
mov
cli
sbb
ror
and
sub
bound
adc
push
xlat
xor
imull
push
sub
lret
mov
sub
nop
sub
mov
mov
pop
int3
enter
lret
inc
mov
cli
mov
loopne
arpl
jno
or
sub
bound
fiadds
clc
sub
bound
mov
fisubs
dec
jb
sbb
cmp
shl
call
add
in
rcl
rcrl
mov
sar
ja
mov
and
or
or
xlat
aam
sti
inc
fadds
xlat
incb
mov
out
in
sarl
fmull
mov
add
stos
xchg
bound
mov
inc
lods
jne
xchg
jmp
sub
inc
fistpll
and
ja
add
ret
fcmovnb
jge
sub
or
or
add
out
loopne
mov
mov
stc
outsb
outsl
or
in
stos
push
inc
fidivrl
xor
push
sarb
iret
dec
es
sbb
rcrl
sub
ljmp
cmp
fmulp
dec
stc
mov
subb
nop
std
clc
adc
inc
push
adc
rcrb
repz
adc
mov
faddl
je
mov
jge
mov
mov
sar
incb
sub
enter
inc
data16
fisubl
repz
es
outsl
inc
in
int
ds
in
and
add
aas
dec
xchg
sub
pusha
dec
mov
icebp
push
mov
adc
les
cmp
inc
xchg
ret
roll
or
add
cmc
jl
dec
push
xchg
out
dec
or
pop
lret
sub
movsl
js
ljmp
dec
mov
loope
sbb
mov
push
call
sub
iret
enter
cmp
pop
mov
push
mov
ljmp
sub
inc
mov
sub
aad
xchg
loop
sbb
push
ret
mov
loope
push
fldt
cmpsb
jecxz
leave
push
mov
inc
imul
cmp
repnz
jb
mov
add
sar
shlb
jge
sti
ret
mov
inc
loop
push
xor
filds
jge
adc
rcll
mov
cmp
push
aad
jecxz
or
mov
mov
into
adc
js
mov
xchg
and
or
pusha
and
mov
aas
shlb
inc
int3
push
mov
or
into
pminsw
repnz
mov
enter
dec
inc
roll
adc
insl
dec
sbb
push
daa
mov
push
fdivrl
or
daa
jg
mov
fcmovnbe
lock
xor
out
lahf
pop
jl
push
call
lds
or
in
inc
into
mov
jne
pop
push
loopne
testb
sub
inc
xchg
fsub
divb
inc
pop
cmp
inc
or
nop
mov
cmpsb
dec
stos
iret
xchg
jne
mov
mov
int
mov
mov
mov
scas
cwtl
cld
adc
call
out
cltd
mov
mov
xchg
out
lahf
mov
mov
stc
mov
mov
ljmp
push
iret
push
dec
loopne
push
mov
dec
dec
xor
mov
pop
xchg
movsb
aas
popa
into
mov
mov
dec
ljmp
sbb
push
fidivrs
or
daa
cmpsl
mov
mov
or
xlat
in
mov
rcrb
jg
push
push
fistpll
xchg
mov
ds
fistpll
inc
data16
out
mov
jle
mov
lret
mov
sti
lcall
loopne
leave
mov
cmpsb
fmuls
mov
ret
pop
or
xchg
outsb
into
pop
push
mov
dec
into
pop
ss
mov
push
ret
inc
mull
push
push
mov
test
mov
gs
stos
jb
mov
mov
and
adc
cmpsb
notl
cltd
mov
sahf
sbb
inc
mov
pusha
fmuls
shrb
out
xchg
add
sbb
mov
aas
jne,pt
fistpl
inc
sti
inc
mov
mov
aas
jno
pop
mov
jbe
push
stc
repz
out
inc
and
leave
aas
fs
inc
enter
mov
xchg
std
jns
push
fsubrp
loope
or
mov
jno
inc
mov
fmull
negb
cld
xchg
loope
inc
rcll
dec
int3
sahf
cltd
and
sti
mov
int
rcl
ljmp
inc
pop
xor
cmp
or
inc
inc
or
mov
iret
pop
mov
add
mov
cmpsb
testl
testb
inc
pop
xor
cmp
cs
sub
outsb
test
js
adc
mov
pop
dec
addr16
mov
pop
adcl
mov
pop
pop
sub
add
out
aam
ret
push
aas
fisubs
mov
aad
icebp
sbb
stc
push
fiadds
pushf
mov
movsb
and
mov
add
fxch
dec
xlat
mov
data16
imul
int3
inc
add
sbb
dec
mov
addr16
loopne
fxch
dec
fnstcw
inc
aam
fxch
dec
ficompl
push
or
sbb
sub
cmp
mov
lds
dec
lds
cs
pop
push
aas
xor
sti
mov
push
push
ffree
ja
xchg
jo
or
jg
ret
fisttpl
hlt
in
flds
js
push
mov
fildll
jle
cmpsb
jo
and
iret
sub
lret
loope
or
aas
aad
ja
mov
testb
pop
loop,pn
or
fisubrl
fstpl
jecxz
add
inc
sub
sti
add
in
rcll
or
inc
into
inc
pop
xor
addr16
frstor
jb
stos
call
adc
lcall
xor
push
cmp
fdivrp
lahf
adc
out
out
push
insb
or
push
out
fstps
lds
sub
shr
sti
pop
and
jmp
pop
xchg
insl
adc
ljmp
jbe
adc
sub
jmp
dec
pop
enter
cs
add
jns
add
inc
cli
inc
sbb
inc
pop
xor
xchg
aam
pop
xor
cld
stos
sub
push
mov
out
and
cmpsl
cli
xchg
out
ret
sarl
and
bound
es
test
cltd
add
and
cs
test
dec
lods
adc
test
call
adc
clc
fldt
inc
jb
jle
jo,pt
test
mov
aaa
add
jns
inc
sub
arpl
inc
hlt
add
mov
xor
xchg
rorb
fldlg2
sahf
fsubs
lods
ljmp
dec
mov
adc
idivb
sub
jle
data16
cmp
in
xchg
jp
scas
stc
sub
add
jbe
inc
test
rorb
pop
fsubp
ret
ja
std
mov
stc
ljmp
adc
cld
add
or
xor
mov
scas
std
ja
mov
or
out
jl
sub
imul
xchg
inc
pop
xor
xchg
leave
inc
in
inc
outsl
lods
mov
ljmp
and
dec
adc
daa
es
mov
mov
insl
mov
movsl
scas
in
test
or
inc
or
loope
mov
mov
mov
inc
pop
mov
dec
outsl
arpl
aas
push
push
das
and
testl
rorb
xchg
bound
sti
into
mov
es
es
and
repz
fsubrs
pop
arpl
add
sbb
ficoms
fstps
fnclex
testl
test
mov
rol
sarl
adc
inc
inc
popl
ror
fisttps
aas
fidivl
loope
popf
cmp
lods
pop
sbb
sahf
fsubrl
mov
pop
rcll
lods
movsb
push
je
inc
outsl
and
clc
xchg
cmp
sbb
adc
mov
cmp
icebp
outsb
sbb
in
mov
cmp
jne
fidivrs
outsb
or
orb
adc
iret
lret
pop
adc
test
xor
sahf
mov
jno
int3
dec
fcomi
dec
sbb
fstpt
jnp
rcrl
add
inc
sub
hlt
jle
movsb
push
xor
or
push
enter
lods
cmp
ret
mov
ds
inc
pop
ljmp
inc
push
jp
sbb
fnstcw
and
mov
mov
out
mov
shl
cmp
or
or
pop
test
lahf
icebp
push
cmp
push
pop
push
or
jb
cmp
das
or
xor
jle
sbb
shlb
or
scas
mov
push
fwait
adc
or
add
mov
ja,pn
sub
in
mov
icebp
mov
sarb
ror
pop
pop
and
lret
js
pop
and
jle
or
lret
mov
sub
sub
sub
in
sub
imul
addr16
sbb
lret
call
mov
xchg
jl
sbb
shld
jns
mov
and
clc
outsl
hlt
dec
pop
or
ds
fisttpl
cmp
test
ret
ret
aaa
or
les
sbb
sub
subl
cmpsl
mov
xor
and
adc
push
dec
fimuls
mov
outsb
sbb
mov
addr16
outsb
inc
mov
jp
mov
mov
filds
mov
stos
sbb
mov
sbb
iret
out
cmp
adc
push
fcmovne
or
enter
popf
jo
dec
sbb
out
mov
dec
or
add
dec
mov
lods
flds
mov
fidivrs
test
or
pop
fmuls
dec
rcll
lret
mov
mov
sub
mov
cmp
stos
cs
sbbb
sbb
mov
sbb
push
std
cli
jp
push
mov
or
sbb
pop
loop
repnz
push
ds
scas
push
inc
pop
push
test
ja
add
jg
xor
jno
insb
jl
lds
push
ret
jb
incb
sahf
jecxz
inc
xchg
int
addr16
cmp
scas
push
or
in
paddw
or
or
xchg
sub
dec
ds
xor
std
inc
fisttpll
sub
xchg
int3
aad
rol
scas
push
xchg
push
ret
mov
jb
sbb
loop
hlt
ss
cmpsl
pop
ret
clc
mov
stos
ret
vpunpcklqdq
mov
stc
mov
cmp
fwait
mov
movsb
pop
hlt
inc
mov
jmp
popa
lret
dec
rcr
scas
sti
ljmp
push
push
int
cmpsl
sbb
mov
adc
imul
lods
lea
jp
cmpsb
mov
rorl
movsl
aam
ret
lcall
stc
or
and
dec
xor
push
xchg
lcall
addr16
dec
adc
sub
test
lret
jmp
pop
inc
out
add
mov
or
mov
dec
icebp
or
pusha
mov
jbe
sub
sub
imul
inc
adc
sti
or
jo
or
sbb
or
sbb
or
sub
aaa
xchg
ds
sub
xor
mov
ret
in
xor
xor
clc
xchg
fyl2x
hlt
stc
divb
negl
movsb
pushf
mov
dec
fidivrs
push
and
mov
lahf
mov
clc
add
jp
sbb
cmpsb
out
lods
pop
adc
xchg
in
mov
lock
mov
cli
pop
xor
out
in
daa
cmp
push
mov
dec
pusha
outsb
imul
int3
fidivrs
push
scas
leave
mov
sar
fcompl
fsubrl
dec
push
clc
dec
mov
cmp
push
adc
jbe
xor
mov
stos
shll
adc
jmp
ljmp
mov
cs
cmp
pop
in
popa
pop
or
test
jbe
add
cmp
jmp
xchg
cmp
cmp
xor
bound
mov
cltd
sahf
cmp
clc
ljmp
pop
popf
aas
xor
cli
lret
jecxz
add
mov
rcrb
shr
xor
sub
mov
clc
int
sub
xor
mov
pop
clc
or
lea
inc
nop
add
mov
cmp
cmpsl
ds
cmp
mov
inc
mov
xchg
add
mov
push
mov
movsl
sbb
dec
adc
subl
ds
and
fcomps
insl
mov
rcrl
push
rol
push
lret
ds
addr16
or
mov
adc
bound
pop
mov
repz
adc
aas
fsubrl
fidivrl
mov
sbb
pop
out
incl
cmpsb
or
jp
icebp
mov
mov
push
lods
daa
cmp
cs
cld
out
cmp
jo
xchg
sahf
loop
adc
test
jo
cli
testb
push
dec
clc
or
or
int3
stc
lock
push
inc
mov
out
jae
in
mov
push
cmp
ret
loop
adc
inc
jo
pushl
xlat
leave
mov
mov
inc
add
xlat
lock
leave
jb
fnstsw
js
adc
sub
ret
out
shlb
mov
popf
dec
pop
xor
pop
mov
dec
leave
stos
lret
dec
pop
jne
out
or
sub
les
loop
adc
pop
pop
xchg
xor
dec
sbbl
scas
xabort
lds
xorb
insl
add
jae
adcb
stos
ret
movl
adc
adc
fnsave
inc
pop
sbb
rcrb
add
add
mov
and
scas
aaa
cmpsb
nop
sbb
aaa
inc
mov
stc
mov
scas
jo
inc
leave
or
out
mov
fcomp
jno
mov
ss
gs
push
gs
fnstcw
mov
lret
cmp
fsubrs
inc
mov
out
and
push
or
es
cwtl
lods
aaa
fisubrl
fsubs
cmp
mov
mov
xor
mov
ss
xlat
cmp
ljmp
icebp
pop
fadds
or
das
cmp
inc
fstps
inc
sbb
sub
dec
mov
xlat
push
dec
jle
cli
push
fcomps
aad
lods
push
ret
cmp
pop
hlt
dec
ror
add
and
jbe
mov
add
push
fs
gs
lea
mulb
push
push
movsl
mov
into
es
and
sub
in
mov
gs
cld
pop
sub
rol
add
cs
push
sarb
incb
or
sbb
je
add
push
in
jle
or
icebp
in
std
or
aaa
std
cmc
std
stc
cmc
es
mov
iret
mov
jle
test
enter
mov
cmc
sti
and
imul
sahf
xtest
cmp
rcr
xor
jle
xchg
test
xor
jle
ja
shll
or
mov
ljmp
mov
push
cwtl
rcll
jb
jecxz
lret
lds
mov
mov
cmp
or
lcall
dec
ljmp
add
clc
add
cmp
push
or
jg
fnstsw
ljmp
ja
mov
lret
cmp
int
sub
push
xchg
mov
sub
hlt
les
xchg
lds
in
dec
and
pop
mov
into
mov
xchg
scas
inc
negl
or
mov
loopne
adc
mov
movb
jo
mov
add
sahf
adc
popa
jg
and
mov
mov
aam
adc
push
jmp
bound
insl
jg
lds
mov
mov
push
or
icebp
push
loop
pop
dec
pop
leave
jo
cmp
mov
push
xchg
es
popf
mov
adc
jo
lods
iret
clc
sarl
push
movsb
leave
test
data16
js
int
mov
sbb
and
mov
stos
jp
mov
out
mov
cwtl
jg
lret
mov
fisubs
ds
divb
dec
cwtl
repnz
mov
ss
inc
cs
test
sub
cmc
adc
stc
push
xlat
adc
cli
fsubrp
add
mov
lcall
ds
inc
stc
das
pop
push
mov
xlat
mov
jae
sbb
mov
push
sbb
aam
lods
mov
push
imulb
jbe
clc
jb
jno
les
pop
adc
push
and
inc
shlb
insb
lahf
rcl
jp
adc
in
mov
and
cmp
sub
int3
clc
push
mov
fsubrp
cmp
aaa
jle
mov
not
pushf
adcl
or
sbb
jns
pushf
mov
xlat
fidivrs
lret
mov
repnz
data16
incb
lahf
cltd
pop
out
dec
mov
out
js
scas
pop
movsl
mov
xor
clc
out
mov
ficoms
cmp
inc
inc
jp
inc
fdivrp
cmp
push
clc
out
mov
rclb
pop
push
inc
ffree
lods
daa
cmp
aaa
out
pop
loope
and
fildll
mov
push
ret
fwait
mov
out
cmp
test
pop
movl
mov
add
lret
mov
push
aaa
es
je
enter
idivl
mov
fsubrp
ds
cmc
mov
and
fidivrs
mov
pop
or
xlat
ljmp
stc
out
ds
out
xchg
jle
negb
clc
mov
xor
cmp
push
scas
add
aaa
sbb
jp
movb
mov
fcomp
stos
rcrb
rcrb
cwtl
loopne
out
subb
pop
dec
popa
sti
sub
out
lret
mov
and
xlat
add
out
xor
xlat
fidivrs
out
pop
shrl
aad
stos
movsl
xchg
cli
cld
loop
cmp
pop
loope
xlat
repnz
out
mov
push
mov
out
lods
scas
dec
and
stc
mov
ficoms
mov
lret
scas
aam
ja
cmp
lods
rcrb
scas
ds
imul
test
jae
movsl
shll
mov
pop
es
mov
lret
add
jo
mov
pop
mov
mov
insb
cmp
mov
stos
dec
jge
rcr
sti
sbb
adcl
les
dec
ret
or
adc
mov
lret
xor
data16
mulb
ss
add
out
cmp
xchg
cmc
adc
mov
icebp
hlt
mov
jbe
ja
rcll
loope
icebp
xchg
sub
mov
mov
adc
loopne
imul
iret
cli
rorl
icebp
sarl
jns
mul
stc
cmc
lret
hlt
bound
or
and
hlt
insl
xchg
adc
fisubrs
jp
outsl
bound
dec
rorl
scas
out
shrl
shll
push
cmp
mov
and
ss
sahf
add
es
mov
dec
mov
mov
fwait
scas
push
clc
xor
or
mov
mov
mov
mov
adc
mov
xchg
xor
push
loopne
icebp
repnz
inc
fwait
jno
mov
insb
int3
dec
pusha
jecxz
lock
sub
mov
or
sahf
xor
sub
roll
cmpsb
dec
in
push
mov
inc
mov
enter
mov
inc
pop
xchg
hlt
add
mov
ror
sarl
in
jo
jge
mov
mov
insl
loop
out
mov
xlat
cmp
jnp
gs
arpl
jmp
mov
ret
pop
jle
pop
xchg
push
paddq
cmp
mov
shll
adc
cld
fwait
aaa
add
lret
stc
jbe
jo
icebp
pop
sahf
mov
outsl
adc
push
movl
mov
pop
push
fisttpll
jl
pop
xor
xor
add
hlt
subl
xlat
leave
mov
pop
add
sbb
cmpsl
mov
ret
push
fidivl
pop
push
mov
jge
int
mov
jle
adc
or
in
sahf
dec
pop
fstps
push
data16
pop
add
pop
daa
push
subb
mov
dec
enter
stc
mov
in
mov
stc
jae
mov
pop
cld
fs
mov
pop
fyl2x
leave
aaa
mov
adc
mov
cmpsb
inc
stos
jle
sbb
mov
ret
or
mov
outsb
adc
fstps
cmp
out
push
ss
mov
cmp
fistps
fcompl
ss
es
adc
dec
or
stos
jno
push
mov
sarb
fdivs
xchg
int3
les
int
xchg
mov
lret
aaa
push
mov
xchg
inc
xchg
push
loope
hlt
pusha
das
and
jle
fisttpll
rorb
daa
mov
ds
cli
mov
in
stos
mov
inc
in
inc
imul
ss
ljmp
sahf
addr16
and
loop
or
jne
cmp
inc
sbb
pop
mov
mov
ds
and
frstor
test
add
mov
or
mov
sbb
lret
add
push
sbb
sbb
inc
inc
test
add
xchg
decl
in
cld
sub
shr
cli
out
out
mov
jge
in
int
cmc
and
xor
clc
jmp
lahf
lea
jns
scas
out
inc
call
jp,pn
adc
or
cli
insb
es
hlt
lods
stc
test
out
push
insl
sub
mov
jl
clc
call
mov
in
push
xchg
pop
dec
out
inc
sub
in
sub
mov
into
dec
out
pop
jo
or
testb
jbe
dec
xor
bound
fnsave
js
or
mov
sub
inc
xchg
cmpb
mov
mov
xrelease
loop
cltd
jo
scas
sub
sahf
leave
cmc
lds
jl
ret
mov
test
outsl
adc
push
stos
mov
std
mov
xchg
inc
mov
les
test
mov
mov
js
mov
mov
mov
mov
movsb
mov
movsl
movl
test
imul
jecxz
inc
mov
push
sbb
sbb
aas
mov
daa
cmp
xchg
cmp
xlat
adc
jle,pt
cld
cs
jle
ds
add
mov
jo,pn
ds
jle
into
add
sbb
dec
aas
sub
in
sbb
sub
scas
aam
or
pop
jp
xchg
cltd
or
dec
movsl
mov
push
addb
xor
clc
aas
mov
into
add
adc
repz
mov
jp
sahf
leave
or
adc
add
insl
sub
xlat
jle
mov
add
push
repz
fcmovbe
and
out
mov
pop
mov
cmp
cmp
jae
lods
notl
loope
rorl
jge
out
cmp
cmp
scas
in
sbb
enter
sti
popf
insl
sbb
jge
es
ret
lret
mov
les
movl
not
add
and
pop
data16
jbe
xchg
inc
pop
dec
mov
and
sbb
mov
fs
pop
call
inc
inc
cs
jo
inc
push
fistpl
lods
sbb
aaa
push
gs
std
repz
jl
mov
mov
mov
adc
cwtl
xchg
das
sub
mov
or
testl
cli
fiaddl
pop
ret
inc
mov
mov
cmp
xor
bound
cmp
cmp
fdivrp
loop
mov
jae
aam
mov
inc
sahf
stos
xlat
pop
inc
shrd
dec
negl
pop
pop
scas
movsl
sti
and
xchg
mov
ds
into
cs
shl
loop
push
mov
xchg
movb
fadd
jl
movsb
mov
cmpsl
mov
inc
fildl
fldenv
xchg
mov
insl
add
addr16
ds
jle
mov
out
pop
leave
mov
loopne
movb
ret
inc
mov
jp
push
add
fimuls
xchg
incl
fcoms
jge
mov
out
or
mov
xchg
mov
pop
lds
mov
mov
out
add
lock
and
fsts
cs
int
mov
out
lds
mov
cmpl
out
fwait
aam
ljmp
fimuls
sbb
jmp
jmp
pop
sub
pop
jns
xchg
mov
loop
iret
inc
stc
sbb
ds
aad
adc
inc
call
cli
mov
add
xchg
in
push
int3
outsl
sti
fs
add
aaa
je
cmpsb
test
fisubrs
dec
int
xchg
dec
sahf
sti
inc
rol
dec
push
repz
or
cli
xlat
lret
push
sub
and
stos
cli
pop
clc
inc
dec
fisubl
sahf
adc
insl
mov
js
ret
fidivrs
sahf
int3
sbb
mov
adc
jae
shrl
call
dec
clc
stc
jmp
rolb
inc
mov
fcoms
aas
sbb
ret
xchg
mov
or
inc
sbbl
fmuls
dec
cmp
aas
nop
scas
ss
lret
dec
xor
sub
or
std
sub
enter
or
ds
in
mov
push
sub
and
dec
rol
inc
ds
dec
push
in
lcall
cmp
out
mov
enter
mov
aam
test
roll
mov
out
hlt
pop
imul
push
mov
push
cltd
inc
ficomps
xchg
shr
fimull
add
jg
mov
ror
adc
outsb
pop
fistpll
mov
or
scas
int
dec
loope
test
jp
fdivrp
mov
dec
mov
or
xchg
les
dec
xchg
pop
in
rol
sahf
push
dec
mov
stos
ds
cmpsb
dec
pop
lret
in
test
clc
mov
mov
add
dec
cmp
mov
imull
push
loopne
sub
ficompl
fsubs
xchg
mov
or
roll
jg
jo
inc
sahf
push
call
shll
mov
add
fisttpl
mov
pop
out
mov
xchg
int3
stc
int3
xlat
xchg
cmp
and
out
jp
jo
jle
mov
negl
jmp
iret
push
dec
mov
mov
mov
jg
imul
pop
pop
imul
push
xchg
ds
lret
xorb
icebp
inc
test
sarb
cmp
jecxz
testl
dec
out
aas
jno
repnz
ds
sub
outsb
push
shll
sbb
scas
or
out
mov
enter
loop
mov
scas
clc
mov
dec
mov
mov
mov
or
cmpb
out
leave
cmp
insl
dec
pop
lret
sahf
mov
stos
jo
fiaddl
jno
inc
jo
jle
insl
xor
cmpsb
popa
flds
sub
jne
arpl
arpl
stos
adc
outsl
movl
adc
repz
fnsave
idivb
ds
out
fcoms
repnz
das
clc
aas
cs
fdivr
out
mov
fsubs
inc
out
iret
fmul
sbb
je
gs
mov
test
adc
adc
mov
push
pop
leave
dec
dec
inc
mov
dec
pop
inc
pop
inc
sub
ficoml
pushl
xor
mov
sbb
sbb
loope
test
inc
cli
mov
outsl
fnsave
mov
mov
cwtl
push
pushf
mov
jle
or
cmpb
dec
mov
sarb
int3
dec
cmp
mov
arpl
dec
push
sub
outsb
fimull
xchg
xchg
ja
loopne
mov
adc
int3
lds
mov
ret
clc
lret
jnp
mov
fdivs
push
pop
pop
dec
enter
jns
dec
push
outsb
or
fdivr
push
test
ret
jo
stos
mov
shll
xchg
cli
mov
and
ljmp
fnstcw
fcomip
sub
flds
rep
inc
jp
ds
adc
arpl
popa
or
dec
incb
dec
pop
cmp
outsb
lahf
add
jmp
sub
inc
mov
lret
sarb
add
mov
inc
jo
push
hlt
cld
bound
xor
mov
push
dec
or
dec
lret
and
xchg
jo
and
hlt
in
or
or
repnz
add
stc
cwtl
scas
mov
cwtl
mov
cmc
jle
jbe
hlt
lea
aad
cli
add
leave
inc
dec
sarl
push
fistps
mov
sbb
iret
mov
cmp
pop
xor
ds
xchg
or
clc
int3
pop
xlat
sahf
jno
inc
int
dec
fsubrs
fcomps
mov
movsb
jb
push
pop
cmp
cmp
adc
inc
sub
ja
enter
movb
mov
jo
add
insb
aas
dec
sbb
mov
loope
imul
inc
add
jbe
testl
cli
aas
mov
add
jnp
je
jmp
ficoml
dec
xchg
cmc
sahf
or
ja
dec
inc
push
cmp
aam
xchg
inc
push
cmp
insl
jle
ss
sub
xor
xor
fistps
xor
xlat
lcallw
hlt
xlat
cmp
cmpsb
insb
and
push
clc
insl
xor
fdivrs
push
lret
repz
xor
jp
loop
pop
and
xlat
insb
xor
jns
cs
aaa
jle
jp
in
mov
dec
or
xlat
sti
inc
lret
or
sahf
adc
ds
repz
adc
push
test
ret
cli
hlt
insl
js
cmp
idivb
xchg
not
jle
repnz
sahf
jb
in
rol
xlat
sbb
call
js
xor
cmp
push
sub
out
xchg
pop
inc
ficomps
stos
push
push
sbb
out
ljmp
out
mov
jns
mov
xchg
inc
ds
jb
rorb
add
sarb
mov
push
xchg
inc
fidivrl
pop
push
mov
sarl
out
sbb
ds
stc
mov
sub
cmp
xlat
in
stos
mov
mov
push
sbb
inc
sbb
loopne
cld
mov
jb
add
ror
sub
lcall
xchg
clc
sahf
inc
lock
sub
sahf
sahf
cmp
lods
lock
jle
cli
cmp
outsb
lcall
leave
mov
xchg
xlat
lret
scas
mov
jae
sub
jae
xchg
push
in
mov
jbe
pop
mov
jbe
jp
repz
stc
leave
xlat
jle
cmpb
xor
outsb
lcall
lods
iret
data16
xlat
out
lcallw
push
out
cli
outsb
call
sub
mov
pop
into
pop
clc
push
cmp
push
cmc
pop
push
bound
xlat
jo
repz
ds
dec
ds
inc
clc
sahf
or
inc
sub
sahf
dec
cmp
jns
cli
dec
call
movsb
out
rol
cmp
jge
mov
dec
or
xchg
inc
xchg
ds
addb
inc
jle,pt
clc
xchg
cs
xchg
daa
pusha
mov
stc
or
cmp
es
es
inc
jbe
mov
sub
outsb
xor
xlat
xor
push
xchg
cltd
inc
in
push
jge
mov
or
push
in
xrelease
sbb
jle
clc
stos
sub
gs
xor
fisttps
sahf
js
inc
movl
int3
xlat
lods
in
or
sti
cmp
cltd
inc
push
jle
jge
mov
lret
inc
jp
jecxz
iret
test
cmp
xor
fimuls
ficoms
sbb
push
mov
xchg
gs
cmp
jmp
dec
jp
in
mov
xor
aas
cmpsl
loop
mov
out
sub
rorl
dec
sub
cmpsb
pop
hlt
jns
lret
call
push
cmp
mov
arpl
mov
jle
es
ds
mov
mov
cmp
pop
in
cmp
mov
repnz
ljmp
mov
push
push
ljmp
fnstsw
shrb
xlat
push
arpl
js
dec
lcall
lcall
sbb
mov
fwait
cmp
mov
in
mov
std
outsb
jmp
fdivr
rcll
into
jb
mov
mov
jp
clc
cmpb
sub
movb
mull
lret
xor
cmp
lret
adc
int
jbe
outsb
cmp
popf
xor
mov
mov
dec
imul
or
push
mov
dec
pop
mov
cmp
and
or
ds
fwait
push
add
sub
push
push
mov
out
popa
data16
inc
call
mov
add
loope
pop
dec
bound
roll
cmp
xchg
lcall
sub
mov
add
clc
mov
outsb
xchg
movb
stc
mov
mov
hlt
stc
push
push
cmp
hlt
mov
ror
sahf
push
hlt
xlat
push
lcall
out
xlat
cmp
jns
js,pt
cmp
ds
inc
push
ret
out
stc
inc
xlat
dec
mov
jp
pop
jle
xor
sub
ljmp
ss
out
ss
cmp
loop
jge
mov
and
pop
leave
mov
xchg
icebp
je
xlat
push
daa
cmpsb
sbb
sub
sbb
fnstenv
ds
lods
iret
push
xlat
add
lcall
cli
push
call
sub
int3
call
leave
mov
nop
cmp
scas
push
cmp
jle
sbb
xlat
mov
pop
cmp
repnz
add
jp
call
addr16
in
idivb
cli
xlat
sbb
xlat
call
push
pop
inc
ficoms
inc
test
ret
xlat
test
repz
jbe
ds
jp
in
mov
lret
cmp
lret
int3
xlat
stos
jecxz
sarb
cli
ss
outsb
clc
dec
fidivrl
movl
lods
mov
inc
jp
loop
cmp
ret
mov
mov
add
adc
stos
clc
jp
fldcw
mov
iret
mov
cld
shrb
dec
and
jle
and
ds
lcall
jbe
xlat
sahf
int
std
in
pop
insb
dec
inc
xor
dec
loop
mov
shll
xor
data16
es
cwtl
mov
or
sub
popa
and
das
jle
jp
in
mov
jbe
repz
jbe
jle
xlat
fs
jle
cmp
in
outsb
lcall
leave
mov
xorl
inc
bnd
sbb
jge
mov
cmp
pop
xlat
divb
push
jp
call
addr16
pop
cmp
xlat
or
xlat
flds
inc
test
pop
inc
inc
xchg
popf
xor
loop
cmp
dec
xlat
dec
mov
cmp
mov
fisttps
xchg
sbb
add
mov
sbb
xor
fistpll
cmp
fcoms
rcll
mov
cmp
sahf
and
sub
iret
sub
cs
stos
pop
repz
js
ds
jp
in
mov
dec
adc
xlat
cmp
adc
cmp
fidivrs
loopne
sub
into
mov
mov
xlat
lret
lcall
or
push
xlat
jae
xchg
push
bnd
in
mov
out
out
pop
clc
xor
out
cmpsl
test
leave
inc
idivb
clc
push
push
leave
xchg
xlat
dec
clc
pop
pop
sub
sbb
shll
jecxz
fisubrs
fst
out
ljmp
lods
push
fcom
out
push
cmp
jno
cli
into
addb
xlat
fs
js
xor
int3
stc
fcom
inc
fidivrl
arpl
call
lods
iret
mov
mov
ds
ret
icebp
or
out
scas
ret
mov
push
cmp
cmpsb
scas
mov
hlt
sbb
sahf
jg
push
mov
push
push
sub
cmp
xchg
ds
push
call
ljmp
lcall
cmp
mov
mov
mov
pop
push
mov
inc
test
mov
mov
fnstsw
scas
push
mov
add
add
xbegin
fwait
inc
gs
sti
inc
mov
stc
fmuls
fsqrt
cmp
mov
dec
mov
movsl
fstl
scas
cmp
sub
pop
push
leave
stos
call
movsb
iret
jb
cmp
jno
cwtl
jbe
fadd
movsb
leave
inc
jp
fldl
out
loope
ds
push
sub
loop
bound
add
ljmp
fdiv
rol
pop
cmp
jbe
dec
outsb
imul
cmp
jle
repz
push
aad
xlat
repz
mov
clc
xchg
cmp
pop
xlat
mov
pop
pop
jnp
into
clc
xchg
xlat
inc
mov
jle
cli
mov
repz
and
int
jb
ss
outsl
push
leave
mov
mov
xor
xlat
cmp
stc
fld
cmp
ds
test
repz
inc
fmull
pop
cli
push
jmp
mov
sbb
xlat
adc
call
fdivrs
aaa
rcrl
nop
and
inc
js
fsubrs
inc
sahf
in
jnp
fdivrs
xchg
pusha
test
xlat
sub
jle
cli
mov
cs
out
sub
mov
dec
or
insl
sub
xlat
inc
or
add
sahf
add
fsubl
inc
rcrb
roll
inc
push
out
sub
aas
push
daa
out
enter
aaa
xlat
cmpsl
cmpl
adc
or
stos
dec
repnz
sti
mov
mov
ds
xlat
cltd
cli
mov
xchg
or
ljmp
pop
jecxz
inc
sti
loopne
xor
neg
cli
stc
fisubrl
xchg
sbb
addb
fsub
cmp
add
jecxz
push
dec
mov
fidivrl
xlat
xor
loop
jnp
push
adc
ret
enter
xchg
fildl
int3
hlt
rorl
sub
pop
fsubrs
ds
lret
into
loopne
lret
xor
mov
rclb
mov
cli
outsb
add
dec
pmulhuw
pop
out
out
lcall
es
cmp
mov
aad
mov
xchg
lret
push
xchg
sub
jb
scas
stos
mov
in
fimuls
adc
jb
xchg
fisttps
sub
cmp
lcall
loopne
popf
cmpsb
outsl
dec
or
push
loopne
loop
stos
fmuls
dec
inc
sti
xchg
dec
scas
stc
fsubs
fsqrt
es
or
mov
outsb
add
lret
lods
sbb
inc
pop
adc
dec
mov
jp
loope
cld
mov
out
mov
push
or
and
mov
push
out
and
lds
or
xlat
push
dec
cmc
clc
cmp
xchg
lods
or
outsb
dec
sub
cli
outsb
inc
repz
jp
in
jp
jle
mov
mov
and
xchg
push
mov
loopne
xchg
or
lock
sbb
pop
fldl
mov
cmp
jnp
cmp
data16
dec
push
sub
or
pushf
sbb
call
clc
dec
xor
clc
dec
imul
push
fdivrs
stc
push
xlat
push
lret
push
rdtsc
pop
js
les
sub
or
addr16
stc
inc
ds
rcr
pop
dec
adc
push
pop
push
cmp
fisubl
call
sarl
lods
or
xor
stc
jg
xor
loop
or
rcl
ds
pop
inc
fs
psrad
inc
xlat
fisubs
lret
adc
mov
lods
iret
push
xlat
adc
add
push
scas
pop
orl
leave
or
push
cmp
xlat
dec
xor
jle
jp
adc
pop
sub
push
ret
ficoms
movb
addr16
es
fsubrs
fsqrt
es
or
jecxz
mov
mov
cmp
out
fildll
add
mov
inc
les
xorl
push
test
clc
out
jge
fdivr
add
jae
lds
cltd
pop
int
sub
lret
int
ds
sbb
fidivrs
movsb
dec
es
adc
fdivrs
xchg
out
jno
adc
and
dec
pop
in
gs
out
sub
inc
xchg
aas
xor
pop
push
adc
mov
pop
scas
int3
mov
pop
clc
jle
pop
xor
ljmp
cmp
push
fdivr
out
in
sub
stc
sahf
lds
sub
popf
shll
cmp
dec
mov
enter
add
mov
scas
rol
iret
jle
push
and
repz
mov
xchg
call
adc
pushf
xor
clc
into
test
rolb
stc
jae
ret
xchg
mov
xlat
mov
jg
dec
xor
inc
fcmovnb
fidivrl
punpckhbw
int3
fimuls
scas
pushl
lret
xor
es
sub
xorl
dec
jbe
xor
aam
cs
lret
mov
ret
cmp
rclb
in
lea
lods
into
sub
inc
cmp
pop
xlat
cmpsb
lods
rol
int
cmpsb
lods
fldcw
fnsave
addr16
jns
fisubrs
leave
push
xchg
in
and
xlat
sbb
lret
pop
and
pop
int
mov
jo
adc
sti
in
ljmp
pop
stos
inc
int
outsl
pop
call
inc
aaa
xor
dec
or
xchg
mov
lret
or
jle
jle
cld
adc
xchg
call
int3
mov
mov
inc
leave
xchg
bnd
xchg
jle
add
fnstcw
insl
sahf
cli
jbe
enter
jp
fsubrs
xor
inc
stos
in
pop
shr
or
inc
push
push
inc
pop
xchg
and
mov
fsts
lret
retw
or
xlat
xorb
outsb
cmp
out
dec
xchg
xchg
call
fadd
jb
dec
ja
cmc
mov
fstps
sub
xlat
pop
jp
repz
dec
inc
outsb
xchg
sub
cmp
int3
or
adc
inc
push
xchg
test
jbe
push
mov
cmp
push
jp
xlat
fcoms
fnstcw
cli
out
inc
repnz
ljmp
xorl
jle
pusha
sbb
movl
cmpsb
lret
cmp
lods
add
int3
ds
sub
sub
fbld
inc
or
fistps
sub
dec
push
jo
paddb
ds
push
push
testb
scas
inc
testl
jae
inc
mov
in
sbb
xlat
sbb
rorl
repz
and
xor
push
scas
inc
inc
es
mov
pop
sub
or
or
cmp
loopne,pn
stc
lods
fnstenv
cmp
jne
dec
push
xor
xor
lret
lahf
mov
ds
je
mov
cs
pop
ljmp
mov
fcomp
leave
jno
mov
sub
frstor
xchg
sahf
fstpt
call
loope
cs
ffree
enter
mov
enter
add
push
inc
leave
xchg
out
leave
stc
je
push
clc
xor
call
xchg
aam
or
jno
add
jbe
pop
int3
push
fiadds
pushl
push
in
mov
call
ljmp
out
daa
xor
push
ficompl
dec
into
dec
dec
cmpsl
xchg
pop
mov
push
ret
ds
cli
faddp
pop
aas
cmp
cwtl
loop
cmp
lods
ret
ds
sar
out
lcall
into
repnz
into
cmp
sarb
loop
xor
inc
xor
cmp
mov
pop
add
sub
xlat
ret
ds
xlat
mov
jle
pinsrw
cmp
stos
fnstsw
xchg
add
enter
dec
add
mov
or
enter
xchg
xor
stc
sub
mov
data16
mov
stc
mov
gs
lret
cli
xchg
push
sbb
inc
les
add
cwtl
inc
dec
stc
push
cmp
ret
fsubrs
stos
imul
push
xchg
or
lds
cmp
jle
fsubl
jp
xchg
out
mov
mov
dec
pop
xor
lret
fcom
dec
pop
adc
aad
movsl
stos
pop
sarl
mov
xlat
dec
cmpsb
adc
lret
fimull
pop
or
or
lret
iret
xor
xchg
ffree
add
clc
mov
cmp
sub
jle
lret
lods
inc
out
inc
imul
sub
roll
mov
cmp
sahf
fisttpl
minps
lods
xchg
dec
pop
inc
int3
fdivs
insb
jp
sub
insb
add
leave
mov
enter
mov
xchg
es
repz
mov
or
ret
addb
push
push
xchg
adc
or
add
cmp
dec
jp
dec
test
shlb
mov
fsubp
cmp
mov
ficomps
arpl
ficoms
cmp
aam
gs
push
xlat
xchg
ret
mov
push
call
dec
in
jg
cmp
push
mov
lods
fwait
sub
rclb
ja
mov
dec
mov
and
mov
push
rcrl
push
repz
mov
mov
mov
lock
insb
ja
sti
mov
xor
and
fsubrs
into
xchg
mov
pop
mov
mov
xchg
mov
dec
mov
pop
leave
cmp
imul
movsb
in
repnz
jp
pop
mov
jns
mov
repnz
xchg
push
sti
call
ds
je
push
subb
jp
ret
flds
pop
jecxz
clc
inc
xchg
test
lds
pop
test
push
mov
sbb
fimull
ds
in
or
mov
cmp
lret
imul
rorb
add
jp
push
mov
sbb
or
mov
idivb
enter
ds
inc
inc
pop
jle
add
aas
shll
pop
inc
loopne
sti
andb
jo
cmp
dec
out
scas
enter
loopne
data16
cs
add
roll
imul
or
jle
or
fdivs
lods
fisttpl
rol
clc
cmp
lds
pop
pusha
inc
fld
inc
inc
xor
stos
mov
dec
inc
iret
outsb
mov
adc
mov
imul
in
fwait
mov
mov
rorl
xchg
ds
sub
mov
mov
mov
and
fiaddl
mov
lea
pop
ljmp
mov
xlat
jmp
push
push
dec
push
icebp
jle
sbb
xlat
pushf
mov
repz
xchg
roll
jo
rcl
xchg
dec
lcall
push
ret
ds
roll
inc
sbb
and
mov
mov
in
sbb
cli
cs
sarb
aas
sub
ret
shl
ret
inc
clc
jle
cli
leave
call
ret
xlat
scas
mov
iret
adc
mov
xor
js
shll
in
mov
inc
adc
pop
shl
and
fcoms
inc
pop
rcrl
push
cmp
data16
daa
dec
push
xchg
xchg
inc
jbe
or
jp
and
xchg
icebp
dec
mov
jle
sbb
loop
cmp
stos
xlat
mov
shll
fsubs
lret
lret
xchg
roll
and
cltd
sti
fisubs
outsl
in
jle
out
cmp
dec
loope
roll
jle
cli
xor
add
stc
dec
xlat
push
sbb
cvtps2pi
and
sbb
pop
shrl
dec
xlat
add
rcrl
inc
fadd
out
jp
stc
mov
call
cmp
mov
orb
xchg
mov
addr16
sarl
lret
dec
ret
inc
pusha
jle
cli
xor
fmulp
stc
inc
int3
ljmp
repnz
movb
imul
roll
adc
or
es
xchg
fadd
or
inc
xor
rol
inc
out
aam
push
cmp
movsl
mov
pop
insl
push
sbb
mov
push
jl
jbe
mov
loope
roll
jle
cli
push
call
or
cmpsb
in
cmp
dec
stos
in
jle
sbb
mov
data16
mov
or
sarl
lret
or
or
fsubp
and
roll
jp
in
movb
or
stc
rcl
or
mov
mov
sti
xchg
shll
in
fwait
fwait
inc
inc
jae
insb
rorl
add
push
pop
and
inc
lcall
addb
shll
stos
mov
xor
cmc
jge
sbbb
insl
jnp
xchg
js
in
push
fwait
jp
aam
mov
je
fidivrl
lcall
pop
jo
test
rcrb
mov
pop
and
jmp
out
das
jns
sub
fs
das
mov
call
add
out
jmp
rcrb
sbb
xchg
out
ret
inc
push
or
repnz
and
rcll
sbb
pop
in
stos
xchg
jl
jmp
shlb
out
out
pushf
jmp
clc
sub
cmpsl
lods
xchg
in
jge
jmp
cli
mov
mov
adc
mov
push
jmp
cld
in
sbb
pop
call
mov
pop
adc
push
jns
inc
jmp
mov
mov
sbb
bound
mov
fidivs
push
rol
testb
lds
jno
adc
test
push
lret
xchg
mov
subl
jne
or
jg
inc
adc
stc
int3
out
lea
loope
adc
jle
jae
into
les
adc
mov
or
dec
xchg
outsl
lock
dec
jo
jns
cld
mov
mov
js
adc
ss
data16
int3
stos
mov
push
popf
pop
xor
mov
in
sub
jl
stos
cmp
mov
xor
push
das
or
sti
cmpsb
imul
pop
mov
inc
pop
outsl
add
lea
pop
test
ljmp
dec
mov
adc
out
or
mov
cli
or
sub
sarb
push
pop
adc
arpl
int3
xchg
mov
mov
dec
test
push
int
mov
ror
mov
andl
pop
ret
vmovsldup
cmc
fmull
lahf
loope
xchg
sarb
jo
fildll
repnz
cmp
decb
xchg
repnz
std
popa
repz
js
aaa
mov
or
mov
fstps
inc
mov
xlat
dec
cmpsl
cwtl
sub
imul
add
fwait
jmp
dec
sbb
adc
pop
push
adc
inc
inc
jb
test
push
rcrb
inc
sti
shll
mov
lahf
mov
fiaddl
mov
add
stos
xchg
jnp
shrb
push
and
adc
js
pop
lret
ror
sahf
out
pop
jno
sub
scas
fdivp
les
inc
loopne
or
xchg
fdivrl
pop
add
cltd
mov
mov
or
pushf
sarb
inc
sbb
hlt
push
cmp
ds
push
sbb
fsub
fcomps
push
fildl
jle
adc
sub
sti
ds
stos
lds
cmp
pop
fstpl
lret
pusha
fimuls
pop
aad
mov
dec
ss
fadds
push
mov
cs
cwtl
mov
cmpsl
mov
xor
cmpsl
aam
out
jno
fcom
jg
lcall
clc
cmpsb
mov
xchg
sbb
sbb
cs
xor
sti
shll
push
xor
push
push
sub
rcrl
stos
mov
lcall
lret
mov
icebp
xlat
es
mov
pop
sub
xchg
mov
xchg
loope
add
imul
mov
mov
inc
out
cmp
dec
sub
dec
or
fistl
rcr
int3
pop
push
mov
popf
cmp
lahf
hlt
movsb
fnstcw
jbe
mov
ss
jmp
dec
mov
fldt
inc
inc
scas
add
jo
hlt
mov
jecxz
outsb
divl
mov
mov
adc
inc
out
ds
daa
push
insb
cld
sub
lahf
outsl
mov
test
not
outsb
jno
xlat
lahf
jp
xlat
stc
jmp
xor
cmc
iret
mov
xchg
clc
cli
sub
mov
jg
dec
loope
ds
in
push
push
dec
daa
push
cwtl
mov
ret
push
loop
into
out
jmp
push
outsb
pop
dec
bound
sub
push
jbe
aas
jnp
cmp
call
push
lods
inc
fisttpll
pop
mull
mov
mov
mov
push
stos
mov
lds
add
out
add
xor
push
xor
lea
jp
fcomp
dec
faddl
aam
fsubrs
insl
xchg
sar
pop
or
fimuls
cmp
push
es
push
pop
aad
data16
dec
loope
pop
adc
cmp
push
inc
add
cmp
ljmp
adc
fwait
cld
xchg
in
inc
incb
adc
sub
add
cmp
sub
sarl
push
aaa
mov
xor
mov
pop
jp
cli
xor
outsb
push
dec
adc
shlb
insl
and
push
pop
cmp
cmpb
pop
dec
dec
mov
subb
dec
xchg
mov
jmp
popf
adc
dec
or
test
xor
adc
sub
cmp
adc
pop
mov
add
clc
xchg
or
test
inc
and
repz
xlat
or
popa
pop
loopne
push
sbb
inc
fs
mov
repz
xchg
insl
lcall
add
xor
mov
cmp
jg
push
iret
mov
test
mov
sbb
mov
outsl
xchg
jp
jo
inc
stos
mov
and
test
xchg
shrl
daa
fld
push
push
adc
dec
lahf
cli
ja
and
pop
and
loopne
pop
test
fists
repz
jp
loop
clc
lods
xlat
add
lahf
sub
ss
xor
mov
lds
cmpl
push
mov
mov
add
mov
cmp
or
sbb
add
sub
movl
loope
popa
pop
mov
cmp
out
lock
popa
or
sub
xchg
clc
xor
sbb
inc
jo
js
adc
fisttpll
and
lcall
mov
out
dec
stos
add
ljmp
cld
stos
movb
enter
dec
mov
xlat
faddp
aad
cltd
ds
push
lcall
or
sbb
mov
pop
cmp
mov
pop
mov
es
mov
imul
push
bound
shlb
xor
adc
add
je
jne
and
lods
lahf
sub
and
movsl
out
fsubp
mov
cmp
pop
add
out
loopne
lcall
sbb
sbb
mov
nop
iret
or
or
jb
mov
test
imul
outsb
jp
les
popa
xorl
fwait
jb
repnz
outsl
mov
outsb
insb
ret
hlt
test
mov
xchg
xorb
mov
jno
jne
mov
push
lock
sbb
ret
scas
jle
mov
loop
andb
in
push
test
cltd
jp
sahf
add
jo
shrl
push
mov
cmp
mov
xlat
jmp
in
out
xchg
test
sbb
aaa
les
hlt
call
sub
orl
adcl
xchg
cli
mov
inc
sub
loope
fdivrs
call
push
cld
mov
ret
fiaddl
inc
jg
push
mov
mov
movsb
scas
mov
enter
dec
push
sbb
in
dec
movsl
xor
inc
sti
mov
rcrb
and
fiaddl
sbb
mov
clc
sbb
sti
dec
and
jo
sbb
mov
decl
sar
jl
sti
lods
mov
lods
mov
testl
and
mov
in
sbb
fists
call
jmp
jg
out
dec
gs
dec
jle
push
into
xor
xchg
ret
rcl
sub
popf
or
mov
or
cld
mov
xor
pop
adc
sar
xchg
fists
mov
sbb
sti
dec
ret
ds
popa
mov
mov
jle
test
out
sbb
add
pop
mov
inc
jle
dec
stc
inc
cwtl
inc
shl
mov
clc
or
mov
add
xchg
sbb
pop
sub
add
les
jle
subb
fmul
sti
lds
int
sbb
jo
or
dec
xchg
daa
lds
into
xchg
stc
sbb
jle
mov
iret
hlt
pop
cmp
lods
mov
jp
mov
shll
ret
stc
add
sti
or
sbb
sahf
push
hlt
iret
icebp
call
cld
jb
sub
mov
and
inc
pop
je
inc
jb
stos
push
sar
shlb
mov
in
aas
mov
push
cltd
lds
imul
imul
faddl
js
lret
rclb
fdivrs
fidivl
adc
stos
out
cmp
dec
sti
lahf
and
sarl
push
es
lea
mov
sbb
pop
mov
cmp
push
fisubs
outsb
bound
cmp
out
sbb
inc
dec
jae
mov
pusha
ror
xor
lret
lods
jge
jp
test
popf
repnz
inc
cltd
fstps
jp
pop
adc
pop
lahf
out
xor
xchg
rorb
pop
mov
pushf
push
add
mov
pop
test
or
push
xlat
shlb
int
jbe
ret
jp,pt
mov
test
sbb
movl
mov
xchg
xchg
fdivrs
xchg
mov
xlat
imul
stos
fcoms
mov
sahf
xchg
fisubrs
mov
sub
movb
mov
fcomps
mov
mov
testb
cmp
mov
ds
fistpll
int
movb
fmulp
test
bnd
cli
rcr
or
lcall
cmp
fcmovu
xor
ds
inc
sub
loop
pop
inc
clc
cmp
jle
cli
ljmp
pop
in
movb
repnz
mov
ds
cli
stos
sub
mov
mov
enter
in
negb
bound
mov
push
lret
movsl
sbb
test
pushf
pushl
fcmovnu
mov
adc
jmp
dec
je
cmc
loope
std
or
ret
pop
add
cs
lret
mov
push
jecxz,pn
or
or
jmp
mov
cmp
fisubl
pop
scas
sbb
bound
inc
or
and
cld
out
or
sti
or
stc
bound
or
or
lods
and
or
or
rcr
sub
in
testl
lcall
sub
sub
pop
and
cwtl
rdpmc
dec
xor
gs
ret
adc
xchg
add
cmpsb
mov
in
in
lcall
outsb
scas
jle
add
shlb
lret
fidivs
add
in
in
cmp
int3
push
cltd
js
sub
fsubrs
outsb
mov
cmp
pmaxub
add
or
into
lcall
xor
push
inc
call
loope
in
dec
push
int3
sar
sub
xor
mov
pop
dec
jmp
or
cmp
pop
push
cmp
into
gs
ficompl
out
or
scas
add
into
adc
cmp
cmp
lods
fwait
inc
int3
ds
aas
sahf
pop
or
outsb
push
add
push
pop
cmp
fwait
dec
adc
xlat
outsb
push
int3
push
lret
sahf
sbb
and
mov
scas
das
ret
mov
fisubs
xchg
fsubrs
jp
xor
scas
hlt
ret
mov
mov
shrl
icebp
aas
into
les
xor
jle
fmul
and
dec
cmp
cltd
jo
push
loope
pushf
ss
xchg
in
mov
int
cltd
pop
test
fwait
ret
hlt
stos
mov
fldenv
dec
into
jmp
pop
stos
xor
lret
mov
pop
jecxz
add
in
cmpsl
repnz
mov
push
xchg
inc
cmp
fcomp
sub
sti
lods
mov
sahf
stos
dec
xor
xchg
pop
xchg
xchg
gs
push
mov
sub
sar
int3
outsb
pop
es
pop
xchg
or
es
xor
add
std
add
cltd
lret
mov
out
and
xchg
mov
inc
fsubrl
pop
adc
xlat
pop
lcall
js
mov
jnp
fisttps
stc
cmp
dec
sbb
sub
add
out
cmpsl
fisttpll
cmp
push
sbb
imul
xor
mov
das
ljmp
mov
push
inc
in
jbe
lret
enter
mov
andb
jne
insb
xchg
outsb
xor
test
data16
daa
inc
sbb
push
and
add
out
sbb
and
sub
fs
fcomps
es
lcall
mov
pop
test
sub
cld
leave
lret
sub
sti
in
das
mov
jb
sbb
leave
mov
nop
sub
stc
jb
sub
sbb
or
enter
and
pop
push
sub
mulb
jbe
add
or
or
pop
jl
js
dec
or
faddp
sub
push
mov
adc
and
cmp
out
sbb
or
shrb
iret
adc
mov
repz
xchg
sbb
cs
mov
push
and
out
and
sbb
mov
or
inc
shll
dec
movsb
jecxz
sti
adc
jns
cmpsl
test
iret
pop
and
or
movsl
cmp
in
sbb
or
es
mov
test
fwait
push
mov
pop
or
jp
cltd
mov
mov
jno
dec
stc
mov
push
ja
jo
jae
mov
fcom
jp
dec
dec
arpl
andb
or
push
or
and
sub
loopne
je
arpl
mov
adcb
inc
lret
inc
roll
push
test
add
jb
int3
adc
xor
push
fisubs
add
outsl
mov
popa
cmp
dec
lea
stos
sub
call
cmp
fsts
stos
xlat
xchg
xlat
cmp
pushl
or
xchg
jns,pt
addr16
cwtl
mov
enter
jno
sbb
mov
mov
lcall
aaa
sahf
loopne
es
mov
add
clc
sub
sub
cli
xchg
jle
invd
xchg
fst
jo
cli
mov
mov
cmp
mov
je
dec
mov
lods
pushf
push
jne
leave
ficoms
push
jecxz
movsl
idivl
jo
dec
sahf
add
pusha
leave
xchg
leave
mov
add
lret
xor
movsl
and
jmp
mov
mov
jne
repnz
sub
adc
and
in
xlat
fmul
xchg
jno
lcall
sbb
fs
movsb
test
add
dec
jg
sub
inc
inc
cmpsb
dec
pop
rcll
sahf
orb
mov
sub
ljmp
and
cmp
mov
lods
out
inc
imul
icebp
aam
cltd
ret
sub
ret
loopne
cwtl
movb
nop
imul
mov
mov
mov
cmp
jbe
outsb
cmp
ret
stc
sbb
fadds
xchg
insl
jae
mov
test
imulb
lret
movsl
xor
mov
fimuls
mov
jle
or
dec
xchg
inc
leave
cli
push
sahf
add
bound
push
mov
pop
roll
adc
dec
jnp
lret
loopne
mov
data16
stc
lock
jb
jbe
pop
std
jae
fldcw
add
mov
inc
std
mov
mov
sbb
ret
ret
clc
xor
sub
pushf
out
jne
arpl
xchg
negb
cs
cmp
lea
jbe
das
mov
adc
xor
push
pop
lret
iret
sbb
pop
andb
push
cmpb
inc
ljmp
arpl
das
jle
mov
out
ficoml
repnz
dec
fwait
out
scas
and
dec
xchg
jg
loop
mov
push
leave
sahf
js
mov
dec
adc
ss
or
mov
mov
fsubl
vpunpckhqdq
lret
into
sub
mov
ja
mov
test
xor
xchg
jg
ret
es
and
xor
sahf
scas
div
mov
ljmp
lret
je
rcrl
ret
dec
adc
xor
mov
push
ljmp
aaa
pop
ds
inc
push
mov
out
sti
xchg
ficomps
cmpsl
add
xchg
xchg
jbe
push
push
xor
lods
divb
fs
ja
pusha
or
rcrl
push
cmp
add
clc
inc
add
nop
inc
push
and
push
lods
jl
addr16
sbb
cmp
jl
xchg
mov
pop
clc
subl
push
xchg
adc
mov
mov
mov
xor
into
vpand
int3
icebp
aaa
popf
jge
mov
mov
mov
mov
mov
jns
iret
icebp
xor
test
push
sbbb
mov
ds
nop
fisubrs
jo
xorb
push
lea
hlt
bound
or
pop
inc
xchg
adc
and
test
testb
imulb
repnz
mov
push
ljmp
test
rol
js
mov
daa
stos
rcll
inc
stc
cmc
inc
dec
leave
sbb
daa
xlat
fnstenv
add
inc
mov
sub
xor
cli
setns
mov
push
inc
rcrb
and
bound
or
pop
cli
shll
lret
lds
mov
lock
cwtl
les
fnsave
sar
mov
ret
lcall
pop
hlt
sub
push
pop
stc
leave
push
mov
mov
pop
rcrl
adcb
xchg
push
jecxz
rcr
lahf
mov
insl
push
or
sarl
adcb
in
aad
sets
inc
daa
cwtl
inc
int
sahf
insl
aas
pop
lds
mov
pop
dec
js
aas
dec
idiv
add
shl
mov
pop
rcll
fistl
faddp
fimull
sub
jge
jnp
loop
gs
jp
out
inc
cmp
inc
or
icebp
cmp
fstl
mov
pop
mov
mov
mov
xlat
pop
das
dec
xlat
cmp
add
jp
or
mov
aad
jmp
ds
push
mov
mov
xlat
into
jp
in
sti
jp
in
sbb
xchg
mov
outsb
stos
or
add
in
jle
daa
test
adc
xor
jb
das
mov
xor
mov
lds
cmpsl
daa
cmp
ljmp
pop
nop
fisubrl
jle
or
imul
mov
lret
push
mov
cmp
jle
fcmovnu
ret
pop
add
xlat
pop
test
jle
stc
cmp
add
movsb
add
jge
daa
and
or
neg
add
enter
sbb
aad
mov
seta
fadds
pop
les
pop
sub
fcomps
or
les
cmp
lret
mov
mov
negb
jne
mov
lret
push
mov
mov
mov
mov
cmp
je
mov
fstpt
or
push
rorb
dec
jb
int3
adc
pop
xor
jo
cmp
jae
xchg
scas
rcrb
movb
mov
xchg
xchg
dec
rol
xchg
scas
imul
daa
sbb
inc
adc
pop
xchg
jge,pt
mov
lods
cmp
jp
es
test
loopne
dec
out
jle
xchg
int3
repnz
mov
sbb
dec
jp
sti
out
ret
mov
mov
pop
xchg
std
add
sbb
data16
test
rcll
xchg
mov
int
cmp
dec
jp
adc
cmc
adcb
mov
push
jp
xchg
inc
sbb
and
in
ret
lods
mov
or
imul
sahf
cmpb
ficomps
outsb
dec
ds
push
lret
pop
mov
lea
pop
in
jl
in
sti
jp
imul
addb
mov
cmp
xor
xchg
rol
outsb
lret
cmp
xchg
js
in
out
jecxz
mov
imul
in
push
push
hlt
inc
mov
imul
fiadds
dec
test
xor
movsb
iret
adc
mov
movsb
clc
mov
mov
adc
rcrl
adc
into
mov
sarl
lret
mov
into
jle
clc
xor
push
sbb
rcll
rorb
enter
pop
enter
loop
sahf
loope
dec
adc
rcrl
xchg
sbb
fucomip
pop
jo
pop
gs
or
fs
les
leave
xchg
enter
data16
mov
dec
sbb
push
push
fsubs
dec
pop
or
test
in
push
mov
sbb
pop
adc
outsb
sahf
pop
pop
aam
cs
xlat
lret
das
add
rcl
ds
jecxz
stos
lcall
fsubrs
push
jb
test
lret
xorl
mov
out
cwtl
and
out
ds
aas
cmpsb
pop
lret
mov
mov
enter
cmp
stc
fcoml
out
stc
cmp
loop
cmp
lea
and
scas
clc
mov
les
enter
andl
inc
sahf
fsubrp
cli
shrl
test
sub
cld
pop
loop
cli
arpl
clc
pop
fsubrs
xlat
pusha
ds
pop
sbb
jle
pusha
data16
lds
mov
dec
hlt
movsb
decl
cmp
cmpb
pop
mov
xlat
xchg
pop
mov
xor
ret
fsubr
mov
mov
stc
fsubs
dec
aam
pop
pop
loop
pop
scas
fisubrl
test
dec
cli
xor
cwtl
cmpsl
stc
xchg
sti
gs
add
push
aas
ror
insl
xor
cmp
mov
fildll
xor
out
sbb
pop
in
pop
lret
ret
mov
xchg
ljmp
sub
es
test
xlat
xchg
aas
fwait
mov
test
jle
mov
sar
stc
xlat
mov
into
jg
xchg
je
inc
rcrb
rcrb
cli
xorl
pop
rorb
jo
xor
cli
lret
push
jg
pusha
into
jbe
pop
ds
pop
ret
aas
fmul
out
test
stc
fs
shll
mov
enter
or
sbb
enter
test
lret
movsb
pop
cli
jle
jns
mov
sub
xlat
xor
mov
pop
and
jp
mov
xorl
cmc
pop
imull
out
jle
mov
loop
dec
test
lret
jg
inc
mov
mov
xor
jecxz
pop
inc
out
sbb
pop
fadd
pop
sti
test
rorb
leave
xchg
out
clc
stc
sub
outsb
clc
pop
sub
xchg
out
xchg
clc
pop
jle
sbb
into
cmp
idiv
out
jge
jb
clc
jbe
or
push
xchg
test
cmpl
pop
push
inc
pop
or
cli
cmpsb
push
pop
repz
repnz
jp
pusha
add
out
arpl
int3
inc
fdivr
clc
inc
enter
jle
jp
inc
test
mov
sub
xlat
xchg
repz
fisubrl
out
pop
cmp
inc
sub
jns
je
loop
cmp
mov
cwtl
ret
test
ret
xlat
cmpb
fcmove
test
jnp
push
jge
je
inc
mov
inc
fs
dec
pop
out
push
fstpl
rclb
test
fsubrp
mov
mov
insl
pop
push
mov
push
sub
clc
dec
insl
sub
mov
fdivs
jp
repnz
clc
cmc
xlat
inc
ds
sbb
cmp
push
arpl
es
addr16
pop
push
push
mov
cmp
add
add
xchg
pop
push
hlt
fprem
mov
out
popa
aas
faddl
push
dec
mov
mov
lahf
stos
inc
add
jle
notl
or
sbb
aad
sbb
andl
xor
xchg
lcall
dec
dec
shl
xor
sahf
xor
xchg
ds
dec
jnp
outsb
into
push
das
and
clc
leave
filds
aas
xchg
lret
mov
sbb
or
pop
lods
call
jmp
mov
xchg
xor
stc
lods
in
leave
push
mov
rcrb
cmpsb
push
add
pop
push
xchg
cmp
sbb
cmpsl
xor
daa
outsb
xor
arpl
cmpsl
movsb
push
fs
add
rcrb
mov
test
sarl
add
xchg
outsl
cmp
mov
orb
push
xor
cmp
and
jb
and
push
fiadds
sbb
xchg
add
or
in
and
fdivs
pop
cmp
fstps
jle
inc
clc
je
daa
mov
jne
fdivr
leave
push
jmp
scas
push
add
add
sub
push
and
fadds
mov
scas
std
js
xchg
js
loopne
and
cs
jo
dec
movw
push
punpckhdq
out
jne
push
aaa
pop
clc
loope
out
pop
mov
mov
clc
jno
popl
je
cmpsl
push
sarb
push
fs
and
xor
sub
cmpsl
shlb
push
push
xlat
jl
bnd
lea
outsl
ja
sbb
cmc
in
ds
dec
and
inc
mov
fcom
icebp
push
sbb
or
aam
adc
lcall
mov
clc
jno
loop
xor
jae
test
inc
mov
mov
cmp
mov
xchg
and
jl
or
jge
out
shll
inc
divb
dec
clc
subl
mov
cmc
cs
jbe
out
xor
les
es
iret
lret
cmp
lahf
aam
pop
lret
into
ss
ret
daa
divl
push
fidivl
sub
ret
sahf
xlat
call
js
sub
ds
jmp
out
xchg
sti
push
jp
out
imul
cmp
nop
xorb
mov
lret
int
sahf
arpl
dec
pop
fnstcw
jo
push
dec
add
mov
sarl
fnstenv
pusha
pop
ja
int3
mov
ss
ret
pusha
and
into
ds
cli
mov
cld
std
incl
add
mov
add
push
pop
or
or
movups
scas
xchg
jnp
loop
lock
jge
fs
cwtl
dec
pop
push
add
shlb
dec
jbe
scas
jnp
sahf
dec
fildl
mov
out
js
xchg
jnp
xchg
jno
cli
jp
cmpsl
icebp
sbbb
add
int
adc
inc
fimuls
ficoms
jmp
jl
or
xlat
xchg
hlt
jecxz
lds
cmp
sub
push
sbb
jne
cmp
scas
mov
jo
pop
jb
js
jmp
add
xchg
mov
pop
out
jp
xor
popf
mov
dec
sbb
lea
js,pt
push
lea
mov
and
mov
sub
adc
lods
mov
js
sahf
fwait
add
call
neg
and
push
fadds
rcrb
movsb
xor
pop
test
mov
jmp
push
out
sbb
shrl
inc
stos
xor
xlat
cli
loopne
insl
xor
dec
enter
mov
push
add
cmp
or
lock
fcmovnbe
sahf
sar
xchg
jle
sarl
add
push
mov
sub
loop
flds
dec
fs
or
add
cmp
xor
pusha
addb
lods
imul
mov
jo
fistps
mov
sub
fcom
pop
aas
inc
mov
mov
outsb
in
outsl
mov
test
adc
lcall
inc
sub
in
or
inc
fsub
mov
ret
movsb
in
inc
int
push
les
es
fisttpll
inc
push
xchg
xchg
repnz
outsb
push
lea
fistl
orb
mov
jbe
mov
adc
cli
xchg
movb
jnp
fdivrs
mov
jns
or
and
pop
fsubp
int3
jo
movsb
dec
lret
cmpsb
outsl
mov
data16
jle
out
or
mov
pop
ljmp
ret
add
sub
cmpsl
jp
lret
repz
fidivl
pop
adc
mov
inc
leave
cld
jnp
jp
mov
out
pop
popa
les
loopw
lret
cmp
in
ds
xchg
lcall
or
mov
movb
cmc
cmp
cs
or
push
or
scas
mov
cwtl
mov
aad
pop
lock
ud0
jecxz
pop
and
xlat
pusha
pop
dec
shrl
cmp
mov
pop
sti
shll
xor
pop
jb
es
insl
iret
lret
aam
cmp
sarb
xchg
xlat
or
repz
das
push
xchg
ds
imul
mov
aad
push
lods
mov
or
xor
out
mul
xchg
mov
insl
and
aas
push
test
jp
lret
imul
inc
arpl
in
push
add
inc
push
lcall
enter
cli
jno
int3
clc
push
aas
shll
mov
iret
out
push
mov
xor
pop
cmpsl
add
ljmp
cwtl
adc
jmp
jmp
or
daa
mov
sbb
sub
jp
lds
jns
aas
push
bnd
push
pop
pop
push
adc
fcmove
loop
jp,pt
jb
xchg
jmp
mov
loop
out
mov
movsl
enter
jmp
movsb
and
cmp
jno
mov
cltd
sub
dec
xor
hlt
jne
push
out
int
cli
xor
mov
adc
mov
cmp
scas
jmp
fwait
arpl
scas
fcompl
mov
xchg
mov
xchg
adc
fwait
jne
dec
cld
pushf
fcoms
shl
sub
aad
int3
call
push
xchg
or
mov
and
cltd
or
lret
testl
cli
leave
cmp
adc
hlt
pushl
loopne
shr
mov
mov
mov
xchg
inc
arpl
mov
clc
cwtl
inc
leave
push
mov
sahf
cmp
pop
push
out
pop
ret
loopne
movl
shlb
pop
add
add
cmc
sbb
push
in
adc
add
pop
mov
sub
sub
sub
pop
inc
or
ret
mov
js
cmp
jbe
add
sahf
sahf
std
xchg
and
es
scas
pop
les
ret
sahf
call
loop
or
add
out
test
sub
inc
mov
insl
xchg
sub
xchg
insb
jecxz
mov
les
inc
jl
mov
mov
adc
xor
push
xor
scas
aas
and
dec
xchg
jecxz
mov
ret
out
mov
enter
int
add
mov
add
cmovp
or
mov
mov
or
loope
decl
out
pop
inc
sbb
mov
cmp
sti
cmp
shl
shrb
test
pop
mov
les
shl
data16
clc
xchg
cmp
lret
jmp
ljmp
dec
ficomps
or
fstps
push
outsb
mov
ret
sbb
data16
and
mov
loop
mov
xor
jae
pop
mov
mov
jl
mov
cmp
adc
vpaddusw
dec
adc
push
cli
pop
pop
mov
adc
xlat
push
js
pop
lret
in
push
arpl
push
movups
inc
cli
ds
jg
leave
fstl
jno
or
sbb
pop
lea
ljmp
jmp
loopne
lock
push
add
xor
sub
cmp
cli
push
gs
jae
sbb
jo
aas
inc
sahf
in
aad
jo
clc
xlat
xlat
in
xlat
or
leave
fiadds
ds
clc
lods
fcmovb
incb
lahf
or
mov
dec
ret
lock
xchg
pop
adc
insb
jl
gs
jnp
xorb
sbb
fdivrs
popf
fdivr
or
push
stc
cli
shl
add
lahf
fnstcw
push
shll
xlat
or
rolb
mov
lods
outsb
push
ret
jg
mov
add
jne
imul
cmp
inc
add
inc
rep
dec
pop
mov
aad
push
xchg
jbe
gs
int
aas
sub
add
fs
icebp
push
xor
cmp
out
aas
out
or
fsubs
sub
mov
div
xchg
and
outsl
inc
ss
mov
lds
sbb
aad
mov
push
pop
inc
xchg
lods
push
lods
pusha
fdivrs
cmp
cltd
daa
dec
mov
cmp
rcr
idiv
mov
jp
ss
pop
stos
dec
jmp
pop
mov
cmp
xor
arpl
jne
push
jmp
cli
mov
cmpsb
je
xchg
int3
jbe
mov
icebp
ss
xor
xchg
arpl
sub
movb
dec
lret
ret
pusha
cmpsl
ds
dec
outsb
cli
pop
mov
fs
jnp
js
mov
xlat
fs
clc
ss
xlat
dec
bound
inc
scas
daa
or
popa
stos
out
fldenv
aad
and
push
lcall
lock
mov
inc
fldcw
cld
arpl
sbb
insl
mov
iret
int3
xchg
mov
test
pop
aas
jp
push
popl
aam
jle
push
add
pusha
js
cmp
jne
jge
std
outsl
cmp
mov
inc
cld
cmpsb
enter
jge
movsb
outsb
xor
std
fs
es
mov
test
rol
inc
push
pop
pop
cmp
cmp
xchg
arpl
fadds
or
cs
out
mov
push
or
outsb
cmp
aam
jp
std
pop
jne
jge
popa
leave
andb
push
vdivpd
jge
leave
call
les
popa
jmp
jns
ret
mov
dec
cmp
sti
dec
loope
fptan
subl
push
jge
sbb
add
and
data16
cld
in
std
shll
mov
mov
out
stos
outsl
dec
jb
and
jp
xor
jbe
push
outsb
adc
mov
jae
xchg
call
shlb
push
pop
inc
jnp
push
mov
mov
or
mov
xlat
mov
jns
xchg
fnstenv
mov
je
mov
jbe
cmpsb
and
sbb
sub
fldenv
jbe
inc
call
out
cmp
mov
sub
jecxz
sarl
aad
std
ja
or
and
stos
cmpsl
sub
inc
ljmp
add
iret
or
lds
ret
and
jns
ficompl
jno
repnz
or
or
and
push
and
or
sbb
fimuls
cmp
cli
popa
into
ss
jle
adc
xor
test
mov
mov
xchg
add
cmc
pop
push
rcr
arpl
insb
mov
or
cld
pop
popf
sbb
out
pop
rcrl
xchg
ljmp
cli
fwait
ret
xchg
dec
in
enter
push
dec
outsb
test
sub
int3
mov
fldt
mov
repz
clc
shlb
lret
stos
mov
sahf
jle
fidivs
fcompl
cmp
mov
pop
fcoms
nop
mov
jb
jae
test
pop
into
push
sahf
inc
pop
sbb
cmpsb
or
lock
dec
std
jnp
stos
iret
lea
jo
dec
dec
push
and
and
xchg
cld
je
dec
jecxz
jl
xchg
push
stc
aas
insl
nop
fcmove
cmp
add
jge
sub
hlt
enter
iret
cld
ss
mov
push
mov
mov
xlat
or
jecxz
in
sub
xchg
push
lcall
cli
xchg
sub
shrl
pop
cmp
xchg
xlat
enter
xchg
stos
mov
mov
ds
sbb
and
sub
xchg
inc
cwtl
ds
mov
jmp
ja
int3
jge
mov
outsb
sbb
leave
sahf
aas
xor
push
ds
push
or
les
xor
icebp
add
xor
ret
lret
pop
sahf
push
out
push
sbb
movsb
lods
mov
mov
sub
rcrb
cmp
shrb
adc
mov
ds
out
mov
dec
and
mov
sti
neg
outsb
jb
test
lret
ret
icebp
nop
test
xor
out
sahf
inc
add
cs
imul
lcall
sbb
or
lcall
jne
lcall
les
fstpl
adc
pop
push
xchg
imul
jg
fdivs
jp
jne
lcall
mov
jg
push
outsb
test
into
fnstcw
outsb
inc
push
inc
jb
sahf
mov
jmp
in
pop
ljmp
inc
leave
push
icebp
inc
adc
dec
sbb
add
push
inc
sbb
sbb
loope
cmp
pop
push
adc
scas
mov
cmp
test
push
or
push
sahf
jnp
push
out
pop
mov
dec
cmp
call
add
mov
sbb
incb
ds
mov
mov
cmpsb
test
push
inc
cmp
and
inc
cli
dec
fnstsw
aam
ds
dec
cmp
mov
xlat
fsqrt
cmp
push
jo
ss
mov
fmuls
xor
pop
pop
clc
fnstcw
xor
pop
fsubrs
iret
cs
ds
cli
pop
call
xlat
sub
bound
in
es
in
clc
xlat
data16
and
les
and
clc
push
clc
push
xlat
push
mov
fdivrs
sbb
jb,pt
pop
call
xlat
push
jbe
xor
in
clc
adc
jp
stc
xlat
push
leave
push
out
cmp
or
lret
fadds
cmp
lret
jle
cli
xchg
test
cld
int3
jle
cli
mov
xchg
mov
ds
arpl
cli
into
rcl
cli
xchg
ds
jae
divb
repnz
fmuls
clc
iret
dec
ljmp
push
and
repnz
fdivs
std
negb
push
pop
arpl
push
negb
ficoms
xlat
mov
jmp
loop
fnstenv
sarl
cli
out
xchg
rcll
cmp
icebp
mov
pop
imul
add
fiadds
out
or
fisubs
loop
mov
cmp
mov
loopne
sbb
pop
xor
into
jmp
clc
ljmp
lret
hlt
outsb
jle
inc
rcr
inc
into
ds
push
lcall
sbb
fcomps
cmp
xlat
jle
cli
mov
pop
fidivrs
add
sti
ljmp
dec
fcompl
int3
popa
aas
aam
sahf
mov
fldt
ror
push
inc
sti
mov
cmp
scas
add
iret
push
add
movb
divb
or
sarl
fmuls
xor
push
cmp
push
stos
cld
dec
push
aad
lret
jns
jbe
mov
inc
adc
es
cmp
mov
and
sbb
lods
cmpsl
dec
inc
fwait
jno
ficoms
or
ficoml
sbb
stc
fwait
mov
jl
cli
add
pop
mov
scas
leave
or
add
push
xlat
fistps
sub
or
in
cmp
rcrb
add
jg
ret
ret
outsb
cmpsb
jp
inc
lret
push
outsb
or
mov
cmp
repz
int3
mov
push
or
sub
out
jo
cmp
out
rol
cmp
mov
sahf
sbb
inc
cmp
cmpsb
scas
sub
lcall
sbb
pop
fcoms
rolb
outsb
cli
call
xchg
jecxz
push
mov
cmp
enter
mov
fmuls
mov
scas
mov
fimuls
pop
lret
negb
std
cli
lret
xor
cli
popa
cwtl
xchg
iret
xchg
fidivrs
out
into
push
cmp
fisubrl
mov
popf
in
inc
aas
mov
jl
pop
lods
adc
cwtl
push
or
mov
std
jnp
mov
mov
add
cli
xlat
in
outsb
daa
sub
xlat
jp
xchg
std
add
lcall
stc
in
jle
cli
push
in
outsb
push
mov
cmp
data16
pop
jae
cmp
stc
pop
xor
clc
fwait
push
pop
mov
mov
rorl
ljmp
push
lret
ds
clc
dec
enter
add
lret
dec
mov
lret
push
ds
jo
neg
aad
mov
cmp
push
push
jb
je
jmp
add
xor
sbb
bound
lahf
orb
ljmp
pop
cmp
fidivrl
repz
xor
or
repz
test
sub
and
push
and
jne
flds
dec
rol
dec
ds
es
cmp
and
push
dec
repz
clc
push
mov
dec
xor
roll
sub
cwtl
pop
xor
mov
movsl
call
dec
xor
fdivs
stos
ds
sub
mov
dec
jge,pt
dec
dec
pop
jge
inc
les
inc
push
stos
xchg
out
push
sarl
push
loop
jle
dec
cmp
outsb
jp
insl
adc
loope
or
shrb
clc
xor
dec
adc
roll
bound
pop
mov
push
mov
xchg
sahf
fistpll
dec
push
and
xlat
es
or
xor
dec
lahf
pop
incb
fstps
dec
aaa
out
cmp
push
loopne
sub
loopne
cmp
mov
or
cmp
inc
mov
popf
pop
fiadds
sbb
adc
mov
stos
sbb
fcomps
sub
or
pop
jmp
or
inc
fisttps
xlat
sbb
push
pop
adc
stos
mov
cmp
jmp
cmp
loope
sbb
dec
push
out
dec
sahf
or
enter
sahf
mov
ljmp
push
inc
pushf
pop
add
insb
int3
cli
cmc
cli
mov
cwtl
stc
mov
pop
fdivr
iret
incb
xlat
pop
cli
cli
cmp
sub
sub
out
or
inc
loope
popa
jo
out
loop
dec
insb
sar
push
add
lea
ds
cmp
cmp
cmp
and
ljmp
lret
int3
test
insl
mov
fmul
or
sbb
inc
icebp
push
or
pop
jl
mov
pop
push
and
lret
movsb
iret
cmp
cld
add
lcall
cli
out
adc
adc
fdivrs
insb
inc
jb
push
cmp
mov
cltd
mov
xchg
ja
adcb
push
hlt
xchg
inc
xchg
xchg
mull
adc
jge
hlt
js
int
popa
es
xor
clc
push
dec
cmp
and
sti
inc
mov
lret
or
xlat
cs
loopne
xor
clc
xlat
lret
ds
sbb
xlat
mov
mov
fmuls
sar
sahf
mov
mov
lcall
dec
inc
mov
dec
push
shrl
dec
addb
roll
dec
sbb
inc
scas
and
inc
dec
pop
mov
cmp
mov
daa
das
lods
cltd
cmp
add
mov
mov
out
jp
lea
lret
stos
sti
xchg
or
mov
mov
jns
int3
mov
xchg
rcrl
jo
fcom
daa
mov
popa
pop
shrl
xchg
nop
adc
mov
add
push
dec
into
inc
mov
mov
jno
es
xchg
insl
pop
gs
repnz
int3
push
das
scas
add
adc
adc
into
jnp
cmc
sub
ljmp
pop
mov
and
imul
adc
arpl
std
stos
in
mov
scas
int
ret
lock
sbb
or
insl
mov
outsb
idiv
mov
faddl
ljmp
push
xlat
leave
sahf
jae
cwtl
xlat
stos
inc
scas
aas
inc
mov
daa
inc
or
mov
xor
inc
cmp
jl
add
out
data16
mov
mov
repnz
sti
aam
pusha
frstor
jo
lret
vmovq
jge
movsl
inc
fsubp
std
xchg
add
sahf
sbb
icebp
scas
sarl
sub
jae
mov
mov
outsl
pusha
jo
arpl
cmpsb
push
push
sbb
dec
push
pop
fsubl
ret
enter
js
mov
daa
xlat
dec
rol
cmp
fisttpll
cmp
les
clc
mov
xor
mov
xlat
ds
popl
jl
jmp
pop
cld
inc
jb
pop
das
cmpb
ss
mov
mov
pop
lods
fsts
mov
inc
add
out
hlt
push
xlat
shrb
inc
aas
in
repnz
add
fimuls
nop
xchg
mov
lahf
cs
inc
jl
cmp
inc
or
ret
jmp
inc
xor
dec
mov
push
adc
cmp
ds
jno
dec
mov
imul
test
mov
fisubs
fistpl
and
pop
hlt
clc
out
sarl
fs
lods
les
sbb
aam
adc
dec
fwait
sbb
rolb
push
xchg
fs
push
mov
inc
pop
sbb
sbb
aas
inc
xor
pushl
outsb
adc
mov
pop
inc
adc
js
fisubl
outsb
add
adc
push
sbb
sub
fs
rolb
mov
arpl
out
dec
xchg
js
sarb
das
scas
jno
lods
jae
xchg
roll
shll
xlat
jg
inc
out
dec
divb
out
push
cmp
hlt
js
and
mov
push
mov
lret
mov
xlat
in
and
cmp
into
outsb
mov
fsubr
cld
and
add
repnz
dec
ljmp
ljmp
push
adc
gs
ljmp
aaa
clc
icebp
inc
loopne
arpl
iret
xor
inc
add
xchg
enter
call
cwtl
mov
les
bound
sub
push
fsubl
jb
idivl
mov
sbb
mov
xchg
mov
adc
sbb
sub
dec
ret
fdiv
push
mov
and
cmp
push
repz
push
outsb
sbb
ss
push
sti
sub
aaa
sub
mov
popf
sub
loop
xchg
mov
ret
decb
dec
jp
jp
inc
rolb
es
and
shll
add
decb
icebp
mov
inc
or
into
push
pop
cmp
mov
adc
mov
mov
mov
inc
fsubrp
xchg
iret
inc
jbe
aam
xlat
add
mov
lret
sbb
jnp
inc
call
pop
and
loopne
cmp
testl
scas
or
adc
fsubrl
sbb
pusha
iret
push
pop
sub
ret
stos
xor
scas
and
mov
mov
mov
xor
aam
sub
inc
ss
movd
out
imul
leave
orps
stos
call
xor
rcr
sti
lcall
cld
sarl
jmp
mov
insl
lret
xlat
adc
sbb
ljmp
xchg
aas
push
inc
sub
inc
in
stos
movsl
jp
xchg
stc
xor
dec
add
xchg
cld
dec
or
loope
ja
mov
fsubrs
pop
xchg
fdivs
adc
cmpsl
and
pop
fists
jbe
xchg
scas
lret
xchg
mov
sub
in
xchg
fnstenv
xlat
pop
es
fdivrl
sub
fdivrl
inc
inc
out
cmp
inc
jp
loop
pop
push
jb
pop
cmp
inc
int3
dec
loopne
push
test
out
outsb
filds
scas
xlat
rolb
pop
and
fadds
dec
push
push
xchg
clc
cmp
cmp
pushf
jg
decl
outsl
leave
dec
clc
dec
fidivrl
fcom
jle,pn
dec
mov
gs
xor
mov
jns
mov
aas
ret
sbb
push
repnz
into
adc
daa
subb
imul
js
mov
pop
jle
pop
mov
mov
xchg
test
inc
shrb
sub
sahf
imul
int3
mov
jbe
scas
or
jecxz
add
mov
out
out
addr16
mov
int3
inc
test
xor
dec
xchg
ds
in
enter
test
mov
dec
movsl
mov
inc
xlat
repnz
sahf
xor
test
add
or
sbb
jp
xchg
xor
cmpsl
pop
cmp
jp
cmp
out
cli
xchg
test
fldenv
cmp
dec
cmp
ds
lods
xor
fldenv
xlat
std
xchg
js
xchg
fsubrl
push
loope
xor
jno
adc
fistl
pop
inc
mov
dec
scas
sbb
inc
insb
and
xor
aas
cmp
xor
clc
xlat
cmp
mov
out
xchg
cmp
sarb
add
adc
inc
add
lods
push
xor
push
add
movb
lcall
mov
fisubs
or
mov
cmpsl
mov
imul
ficoml
mov
jp
loope
jg
push
sub
inc
fldl
mov
push
lret
sbbb
mov
inc
cmp
cmp
and
js
push
out
ss
cs
fnstsw
xlat
imul
rorb
inc
arpl
cld
mov
fisttpll
adc
aas
dec
cmp
inc
lret
scas
pop
adc
js
pop
out
xchg
xchg
and
jnp
cli
int
shlb
inc
or
dec
ret
roll
out
enter
shrb
inc
jo
das
shr
mov
add
xlat
mov
xlat
add
push
ss
rcr
fnsave
dec
sub
cmp
stos
sbb
xchg
mov
sahf
xchg
cmp
push
in
fstl
jmp
aam
stos
cmp
in
out
xor
cmpsl
mov
jecxz
movsb
scas
adc
push
jo
orb
sti
jecxz
shr
xor
mov
mov
filds
mov
ret
out
inc
xchg
jo
cmc
inc
int3
rolb
inc
push
pop
fbld
out
dec
mov
call
push
pop
lcall
jmp
jo
inc
inc
add
jns
push
sarb
inc
inc
cmpsl
dec
clc
push
mov
mov
pop
call
aaa
mov
pop
adc
outsb
jp
add
add
cmp
jne
outsb
jecxz
mov
xor
push
shrl
das
mov
and
cmp
add
inc
cltd
addr16
push
lock
sub
sub
loopne
loopne
insl
add
sahf
adc
pop
fwait
lcall
loope
xchg
je
jl
mov
cmp
loope
aas
enter
stos
les
mov
dec
test
out
inc
test
aas
movsl
addl
sbb
lret
fadds
jmp
jne
push
jecxz
clc
repz
test
push
ss
std
mov
mov
gs
pop
xor
clc
test
fdivrs
bound
ss
push
dec
cwtl
or
mov
mov
jg
mov
mov
or
out
enter
outsb
or
arpl
stos
dec
fbld
mov
inc
ds
shll
mov
dec
xor
lahf
xor
clc
sub
mov
mov
adc
out
sti
fs
call
cltd
cmpsl
jmp
xor
cmpsb
sub
scas
cmp
cs
xor
jne
sti
fwait
lea
lods
sub
or
push
addr16
xchg
lea
stos
enter
mov
test
mov
pop
jbe
mov
jae
ret
jno
mov
jl
dec
ret
jle
in
mov
lcall
sarb
stos
cwtl
jae
popa
jl
xorl
fcomp
adc
insb
loop
fisubs
jbe
mov
mov
idivb
fbstp
sub
jns
and
test
xchg
jo
mov
sbb
mov
test
ljmp
dec
cmpb
mov
xor
or
cmp
fsubl
aas
out
pop
sbb
sbb
inc
xchg
incb
push
sbb
mov
dec
mov
cmp
test
xchg
xlat
cmp
mov
fsubrl
into
imul
jg
jl
rcrl
sbb
mov
push
mov
js
push
inc
lcall
sti
xchg
lds
daa
xchg
sub
aad
ja
cmpsl
test
test
into
lret
inc
cwtl
inc
xor
mov
sub
inc
mov
adc
mov
adc
mov
hlt
fisubs
mov
cmpsl
movsl
rolb
ficomps
mov
or
xor
push
or
aas
adc
push
or
jns
push
icebp
jne
lock
test
adc
inc
adc
jp
cli
rcr
pop
add
fdivr
idivl
adc
clc
js
add
lret
mov
cmp
fnsave
dec
std
fnstsw
push
xor
or
pop
adc
cmpsb
mov
inc
repnz
cld
cmpsl
pop
xor
jg
cmp
loop
cli
psubusw
or
out
loop
xor
mov
faddl
test
lret
xlat
mov
scas
xchg
cmpl
test
rol
mov
pop
pop
xor
addr16
adc
and
iret
mull
adc
imul
or
mov
fwait
mov
adc
adc
cli
call
dec
fcompl
inc
js
test
fcomi
fldenv
cwtl
xchg
or
fldcw
out
stos
gs
cld
cs
jp
jp,pn
cmp
rorb
dec
xchg
cmp
add
add
inc
xlat
jne
xchg
sub
aad
xchg
fisubl
fstpt
pop
ret
pop
cmpsl
sub
inc
pop
adc
lock
xor
jns
xlat
dec
or
jne
fdivrs
call
into
imul
pop
ret
aas
sbb
out
fwait
mov
adc
adc
lret
xlat
hlt
loopne
xlat
dec
cs
fucomp
or
imul
je
aam
pop
fldenv
std
or
cmp
add
add
sub
jns
js
and
fisttpl
dec
dec
push
mov
or
sysret
ficomps
jae
cmpsb
inc
fadds
lods
fsubrs
not
or
mov
movsl
stos
movsb
sub
inc
inc
pop
movsb
xor
fcoms
fcoms
fisubs
mov
or
push
ret
psubq
adc
lret
xlat
pavgb
xlat
arpl
leave
dec
in
fisttpll
or
pop
push
fbstp
aam
xor
cmpsl
cltd
xlat
aad
int3
or
enter
push
xor
sub
ss
sarl
sub
testb
mov
jp
or
sub
jge
jno
cmpsb
pusha
inc
ds
xlat
scas
cli
or
adc
or
ljmp
inc
std
sub
mov
cs
scas
adc
addb
cli
or
add
aam
fldcw
pop
or
pop
add
push
or
fwait
mov
cs
faddl
inc
sub
bnd
aad
dec
arpl
sarb
popa
cmp
outsl
push
dec
cmpsl
jle
jp
insl
lea
pop
cmp
fcmovu
xor
fistpl
mov
fcoml
lcall
jbe
inc
movsl
fstps
dec
into
lods
mov
int
mov
aaa
mov
mov
iret
sub
insb
sub
loope
adc
fsubs
jae
pop
jmp
xchg
dec
int3
sti
sub
sbb
stc
pop
xor
mov
in
dec
out
addl
cli
lock
rolb
aas
jo
dec
mov
pop
mov
jbe
sbb
aad
adc
fisttps
out
lahf
sbb
pop
inc
dec
cmpsl
pop
sub
testb
jno
scas
inc
mov
fistpl
outsb
cmp
lcall
and
or
push
clc
cld
fadds
push
int3
mov
lcall
sahf
push
and
pushf
sub
and
add
add
lcall
jno
inc
adc
fwait
push
inc
adc
cld
and
ss
jp
sub
bound
insl
ljmp
cli
and
bnd
sbbb
adc
pushf
hlt
cld
daa
cmp
jb
inc
aas
and
jb
pop
stc
jb
out
adc
sbb
stc
sbb
movsb
jmp
mov
push
mov
scas
ja
out
inc
jo
jns
pop
and
fwait
sub
lds
jns
cltd
repnz
mov
jne
loop
or
sahf
lcall
mov
sar
sub
pusha
out
xor
scas
cmp
jg
mov
loop
or
dec
add
add
cmp
out
insl
popf
lret
test
int3
inc
enter
lret
sub
push
stos
sahf
cmp
dec
mov
and
insl
pushf
imul
jl
lret
loope
add
sti
lret
insl
and
lret
jl
lret
pop
and
lret
jl
lret
sub
leave
lret
jl
lret
cli
movsb
and
adc
pushf
enter
jno
scas
xchg
adc
insb
xchg
jmp
lret
jge
adc
insb
fs
lret
dec
outsl
adc
insb
xor
gs
sbb
lret
jmp
lret
out
adc
insb
into
jmp
lret
mov
adc
pop
pushf
jmp
lret
sbbl
add
lcall
fsubs
cmp
in
xlat
stos
jecxz
scas
cli
mov
iret
mov
cmp
xlat
mov
pop
sar
cmpsl
fcomp
popf
mov
xlat
out
mov
ljmp
mov
xlat
test
ds
cli
push
or
outsb
mov
mov
in
and
ret
lahf
loopne
clc
lahf
scas
pop
inc
sbb
mov
into
cmp
sub
lds
xlat
mov
jl
not
and
jb
es
movl
loop
clc
mov
out
cli
bound
push
xlat
add
dec
faddp
in
data16
push
stos
cli
xchg
stc
ret
dec
negb
es
lods
jmp
xlat
push
std
cli
ret
cmp
inc
mov
cs
es
callw
mov
ficoms
sbb
pop
pop
jp
jle
ret
push
sbb
mov
daa
mov
mov
insb
fcomps
xlat
fiaddl
std
cmpsb
ds
sbb
xlat
mov
sbb
push
daa
inc
ljmp
lds
or
add
out
in
or
and
pop
adc
notl
out
daa
sbb
xlat
loop
daa
jp
push
loopne
dec
cli
pop
scas
mov
fsubrl
bound
decb
dec
xchg
pop
push
push
cmp
pushf
inc
push
movb
xorb
add
fucomip
mov
shll
dec
inc
xor
jno
adc
popf
mov
sbb
cmpsb
cmp
xchg
xor
mov
pop
mov
fimuls
jmp
push
xchg
or
fisubl
dec
pop
fsubrp
pop
or
stc
shll
xchg
pop
mov
movl
rol
cld
pushf
je
pop
bound
stos
in
pop
sbb
lret
mov
push
cmp
cmpsl
shr
or
rorb
xlat
nop
mov
sti
addl
inc
insb
dec
fldl
int3
shl
ret
shlb
in
cmp
movb
repnz
pushl
pushf
lea
jne
adc
shld
cmp
mov
test
sub
movzbw
mov
bt
pushf
call
jmp
sbb
add
push
shll
cwtl
das
daa
pop
pop
std
push
emms
jb
pop
ljmp
mov
fistps
jmp
loope
push
ljmp
test
rorb
and
adc
sbb
jb
sarl
add
movsl
into
or
pop
jno
mov
xchg
cmp
xchg
pop
imul
adc
or
dec
mov
and
adcb
stos
subl
pop
and
cmp
xlat
jp
arpl
pop
and
mov
jmp
leave
xchg
in
mov
inc
int
mov
inc
rcl
xchg
sub
xchg
into
adc
hlt
mov
fistl
mov
sbb
les
leave
js
jmp
insb
aaa
sti
dec
adc
or
cwtl
xchg
xchg
push
mov
cmpsb
jp
cwtl
rclb
nop
movsb
les
cmp
imul
dec
dec
fidivl
sub
xchg
icebp
pop
sub
inc
and
pop
add
inc
add
push
lock
std
std
addr16
insl
into
mov
ret
jns
and
and
or
adc
aaa
ss
test
fmull
and
inc
pop
and
aam
pop
lds
out
and
cmpsl
test
in
cltd
inc
xor
roll
roll
in
xchg
push
xchg
ss
mov
clc
lahf
adc
enter
rolb
adc
nop
sub
lret
stc
xorb
push
pop
and
adc
movsb
imul
popa
ret
push
mov
aam
in
xchg
ret
fbstp
popa
add
inc
dec
xchg
fistl
es
push
mov
push
mov
mov
push
sbb
dec
in
imul
fcomip
mov
adc
dec
in
mov
popf
jnp
push
insl
push
mov
insl
call
jo
inc
lea
jne
bswap
mov
bt
stc
cmp
add
jmp
lea
ja
or
pushf
sub
or
lea
add
shl
mov
bt
shr
shl
xor
mov
test
repnz
push
lea
jne
not
lea
push
movb
cwtl
mov
cwtl
bswap
setb
lea
jmp
pushl
popl
movb
cmp
movb
push
call
add
add
add
add
add
add
add
add
add
add
clc
es
clc
es
clc
add
add
add
add
clc
add
ss
lahf
sbb
dec
jb
mov
int3
xor
lea
call
jne
add
xchg
aad
dec
push
popa
stc
xchg
jb
aam
pop
mov
test
sub
ret
jmp
sbb
jne
adc
les
int3
sbb
xchg
sbb
dec
insl
cmp
mov
data16
push
or
push
outsl
shll
pop
lods
cld
xorl
xor
cs
pop
adc
fstl
push
sub
insb
mov
call
cmp
mov
inc
lea
pusha
pop
adc
mov
sub
mov
popf
jae
lret
jmp
xchg
idiv
iret
push
das
and
add
fwait
push
scas
add
loope
fistl
imul
adc
fucomip
ret
aad
jle
icebp
or
out
pusha
mov
add
and
rol
cmc
sub
xchg
ss
in
aaa
test
push
lods
xchg
push
inc
jbe
lds
pop
or
xchg
pushf
cmp
inc
mov
jbe
and
add
pushf
pop
mov
cs
jmp
pop
push
fstl
dec
dec
pop
push
or
outsb
sub
rcrb
enter
mov
sub
ret
jnp
stos
mov
imul
test
sub
andl
dec
mov
ss
sbb
stc
sbbl
mov
iret
enter
es
mov
clc
sbbb
js
cmp
xor
push
push
inc
loope
jb
xchg
out
mov
sbb
dec
ret
movsl
fcomps
xchg
fisttpl
outsl
fwait
aad
push
jl
gs
jb
icebp
cmpl
mov
addr16
adc
decb
stc
push
lds
lea
push
or
in
jmp
xchg
and
dec
stc
sub
inc
jo
mov
test
lods
mov
jns
int3
mov
jno
test
dec
lods
popa
push
imul
rolb
jb
scas
mov
movsl
stos
ret
mov
ds
hlt
and
xchg
cli
push
call
leave
movsl
or
xchg
dec
add
stos
popf
ret
decb
fists
out
mov
add
es
pop
cmp
shrb
popf
jne
test
jge
cmp
mov
ret
adc
inc
fs
xchg
mov
or
mov
test
imull
jne
jg
nop
fmull
inc
shlb
mov
dec
cmc
outsb
xor
or
out
jmp
adcb
or
cmp
leave
sbb
out
ficomps
xor
rcrl
cmpsl
insb
xchg
adc
inc
and
mov
inc
or
imul
in
mov
push
mov
xor
scas
sub
popf
lods
cmp
es
lret
or
jne
lret
lahf
icebp
mov
rorl
pop
test
sbb
cmpsb
lea
shlb
sahf
je
mov
inc
sub
rcr
mov
jo
stc
sub
xchg
adc
stc
push
dec
scas
insb
push
mov
add
xor
or
xor
adc
fcom
cmp
mov
rol
pop
and
hlt
ds
inc
jle
sub
xchg
ret
xchg
inc
test
jmp
or
repnz
test
jnp
int
xchg
es
jne
outsb
and
fs
push
pop
into
or
sub
mov
adcl
jo
clc
xchg
nop
push
xchg
popa
jg
mov
push
mov
les
adc
mov
in
mov
pop
mov
push
push
stos
push
add
mov
pushf
test
xchg
in
xchg
mov
test
fcmove
es
mov
fdivr
mov
xor
nop
push
mov
sub
mov
inc
test
lods
xchg
mov
push
dec
stos
and
adc
or
push
loop
or
mov
insb
xor
fs
lock
add
xchg
cmp
mov
fistpl
pop
mov
test
fcompl
icebp
pusha
mov
mulb
mov
and
mov
outsl
inc
pusha
lret
popa
js
cmpsb
inc
out
jl
fldcw
dec
sbb
out
cmp
mov
push
mov
jo
or
test
jg
sbb
pushf
xor
push
fistpl
cltd
fcompl
mov
xchg
pop
sbb
roll
clc
cmp
inc
inc
adc
add
fwait
fwait
out
es
cmp
or
jge
adc
mov
mov
aad
rclb
lods
inc
out
xchg
pop
jae
cmp
sub
inc
lcall
stc
es
mov
xor
and
push
fistpll
aam
xlat
loope
pop
jno
xor
xor
je
pop
fwait
push
scas
inc
test
xchg
int
jnp
pushf
jne
ficoml
push
jmp
push
mov
pop
roll
xchg
je
pushf
ret
int
xor
mov
leave
lods
je
jl
movb
jno
mov
xor
cltd
das
sub
cld
repnz
xchg
into
mov
nop
fs
push
xchg
lods
cwtl
fsubl
mov
insb
and
cwtl
rorl
fistpl
mov
pop
in
mov
jbe
popf
sbb
push
pushf
lcall
ljmp
icebp
call
into
leave
mov
sbb
jno
sbb
ljmp
mov
scas
fwait
push
jne
mov
sub
cmp
fldl
cmp
aad
jno
jo
adc
cs
out
cmpsl
not
notb
add
ljmp
cmp
and
mov
jb
lock
sbb
add
gs
add
ror
jo
mov
std
sbb
cmpb
jmp
in
popf
inc
mov
inc
cltd
ljmp
sbb
or
mov
cmp
int
out
cmp
orl
std
mov
and
stos
out
mov
ljmp
add
add
bnd
jle
imul
divl
lret
mull
neg
clc
sub
inc
cmp
dec
pop
pop
inc
fidivrs
add
xchg
cmpsb
not
call
jnp
sub
lahf
imull
fcoms
shrb
jb
imul
arpl
repz
sbb
iret
adc
xchg
pxor
es
sbb
aad
movsb
mov
adc
imul
into
ja
jae
ss
insl
push
lcall
sub
add
rcll
adc
dec
sbbl
dec
fisttpl
scas
mov
mov
jmp
mov
clc
imul
pop
add
pushl
pushf
pop
stc
or
push
push
in
pop
sbb
ljmp
pop
push
mov
xor
imul
push
and
fnstenv
sbb
push
mov
pop
pop
arpl
dec
xchg
mov
out
adc
add
sti
ficompl
insl
ret
mov
push
inc
push
xchg
jp
rcr
xchg
mov
movsb
adcl
jle
lods
jnp
xor
jp
popf
and
pop
aaa
nop
gs
test
and
ljmp
data16
into
lret
roll
lahf
dec
pushf
test
mov
mov
pop
stc
xor
xor
inc
and
mov
sub
jae
orb
lods
cs
mov
push
push
mov
dec
adc
adc
push
lock
incl
pusha
ret
cmpsb
or
adc
and
setg
xchg
jno
and
je
ret
roll
icebp
cmp
addr16
js
test
insl
lret
inc
mov
clc
xchg
cwtl
icebp
sbb
cwtl
dec
mov
adcb
mov
pop
mov
push
iret
push
push
xor
cmp
lcall
cwtl
pop
addb
mov
or
cmp
sbb
test
loopne
xor
xchg
mov
ljmp
int3
and
les
test
mov
je
xor
or
sbb
loopne
movsb
mov
jle
inc
or
fisubrl
xchg
cmp
sbb
add
les
mov
ret
arpl
mov
repz
scas
and
lret
mov
push
inc
call
xchg
arpl
xor
icebp
fsubr
fnsave
mov
mov
mov
push
push
pop
dec
test
lock
inc
dec
dec
outsb
sbb
stos
mov
sarl
iret
or
jp
fnstcw
xchg
add
fs
jbe
push
sahf
pusha
jns
push
mov
pop
sub
jno
dec
testb
or
xor
sbb
adc
and
add
faddp
movsb
xor
mov
imul
mov
inc
popf
in
das
int
add
push
aas
push
pushf
pop
loopne
aam
fwait
mov
sbb
ror
adc
stos
inc
mov
nop
or
jns
mov
clc
xor
jns
loop
out
bnd
lods
inc
xor
mov
mov
gs
mov
aad
rol
sbb
mov
mov
pop
int3
arpl
mov
xor
inc
shlb
insl
mov
jmp
mov
xlat
fstpt
out
aas
lahf
lcall
sub
mov
or
xchg
push
xchg
out
xor
dec
xor
xchg
dec
dec
mov
out
push
push
jp
sbb
stos
xchg
and
je
inc
jl
ficoml
jmp
dec
push
pop
sbb
cmp
lret
inc
sbb
push
add
dec
daa
push
push
mov
stos
push
aaa
jle
and
popa
fists
sub
cmp
notl
nop
out
jge
jp
ds
add
inc
jmp
clc
add
cltd
or
in
adc
dec
stc
jmp
adc
lds
jp
les
jg
dec
mov
xor
adc
mov
test
lods
or
pop
pop
dec
in
sub
mov
repz
mov
cmpsb
add
inc
sbb
hlt
outsb
push
xchg
sbb
mov
and
test
xchg
scas
into
sbb
mov
inc
std
jo
sbb
ret
cmp
bound
and
popf
push
cmp
mov
and
lcall
or
dec
loopne
xchg
mov
and
cmp
loope
loop
mov
rclb
idivl
pop
and
xchg
adc
sub
inc
mov
ljmp
mov
data16
scas
inc
lods
fdivl
aas
sub
jmp
push
push
push
pusha
mov
lea
jmp
mov
jmp
push
mov
pushl
pusha
lea
jmp
lea
jae
bt
stc
xor
jmp
movl
movl
call
cmp
bt
clc
repnz
lea
jmp
jmp
jmp
call
clc
add
pushf
pushf
cmp
cmp
mov
clc
pushf
test
pushf
movb
pushf
pushl
lea
je
test
pusha
clc
add
pushf
stc
cmp
pushf
lea
jb
cmc
pusha
test
cmp
cmp
push
pushf
lea
jno
push
lea
jae
xchg
mov
cmp
setno
sar
test
mov
seto
rol
btr
shl
mov
call
not
movzbl
movzbl
call
jae
not
xchg
mov
inc
pusha
push
rcr
mov
xor
bt
movzbl
mov
cmc
cmp
xor
mov
movb
bt
cmp
repnz
jmp
cmp
xor
movl
mov
call
jne
adc
add
rol
mov
test
push
add
call
pushl
lea
jne
or
bswap
sbb
mov
pusha
lea
jnp
bt
add
stc
pushf
movzwl
not
pop
stc
rol
mov
jmp
push
cmpb
call
pushf
dec
pushl
cmc
push
ror
stc
sub
bt
rol
call
roll
arpl
cmpb
addr16
jno
test
mov
mov
push
fimull
stos
fcomps
fnstenv
or
pop
hlt
cmpsb
push
add
sub
lock
jecxz
jle
xor
fimuls
out
pop
cltd
add
inc
cmp
rcrl
nop
mov
sub
fldenv
jecxz
sub
mov
stos
sti
xchg
lcall
ret
rcr
jns
push
lods
fistpll
repz
daa
sti
sbb
pusha
fwait
mov
cs
int
mov
add
js
repz
es
xchg
mov
addb
adc
ucomiss
fnstcw
leave
xor
jo
outsl
fadd
cmp
mov
subb
imul
jmp
xchg
sbb
xor
sbb
sbb
inc
addps
add
iret
push
add
ret
or
adc
pop
push
lds
or
mov
push
pop
xorb
jecxz
rorb
rorl
cmc
mov
stc
popa
pop
pop
pop
inc
repz
subl
stc
in
mov
push
nop
dec
jb
pop
ret
aaa
xchg
mov
das
sub
nop
outsb
jo
push
aad
in
insb
in
dec
in
cmp
bswap
ja
jl
stos
pusha
imul
push
xchg
push
out
pop
push
adc
push
inc
jb
into
hlt
fmuls
lcall
addr16
loope
push
cmc
loopne
push
and
leave
cmp
sbbb
dec
ficoms
jae
add
push
pushf
jae
sub
sarb
fildll
pusha
cs
fstpt
js
cmp
pop
dec
ja
into
add
adc
outsl
out
adc
pop
cmc
ss
add
jl
xor
pop
loopne
xchg
nop
stos
pusha
xor
adc
xchg
cmpsb
add
lds
fs
sub
mov
popa
push
lea
jg
out
ret
dec
dec
cmp
pop
fstps
fildl
add
and
or
dec
call
stos
cmp
dec
lret
ds
les
cmp
push
jge
sahf
adc
cmp
mov
push
scas
fdivrl
jno
push
popf
and
push
jbe
cmp
aas
mov
rolb
sbb
popa
nop
ret
mov
sbb
cmp
inc
lea
jle
adc
cli
pop
mov
fdivl
in
popa
nop
inc
rcrb
lds
pop
mov
in
jo
adc
clc
mov
mov
xor
shrb
pop
lods
lea
and
fisttps
and
outsb
cmp
jmp
sbb
psllw
testb
cwtl
push
push
bound
dec
mov
pop
dec
clc
out
int3
rcr
mov
add
xchg
cwtl
mov
es
mov
jmp
mov
add
adc
les
shl
jmp
cmpsl
mov
xchg
pop
movsb
mov
ja
shll
fldt
or
out
pushf
xor
add
cs
negb
xor
cmc
movsl
xor
lods
jmp
xchg
insl
out
test
icebp
jecxz
test
xchg
test
add
js
mov
icebp
movsb
nop
ss
xorl
add
mov
nop
pop
pop
push
ror
sahf
scas
add
int3
fs
inc
rol
adc
gs
or
push
icebp
mov
sbb
hlt
addb
dec
mov
inc
mov
mov
xlat
cmp
out
and
jl
cld
movsb
test
fistpll
cmpsl
xchg
jmp
clc
insb
inc
into
xlat
add
sub
mov
jbe
vunpcklps
pop
fadds
enter
repz
and
pop
std
push
and
sbb
mov
inc
jae
ret
pop
jns
jns
popf
or
jo
mov
jg
lret
testl
shl
xor
jg
inc
in
aam
adc
js
or
aad
xchg
pop
pop
cmp
jp
nop
dec
mov
cmc
dec
ror
call
out
test
out
imul
and
inc
fistps
inc
cli
xor
push
mov
pop
inc
std
add
cmpsl
lea
mov
add
push
mov
add
and
inc
push
outsl
in
mov
pop
les
int
xor
push
bound
ljmp
adc
add
inc
call
jp
es
sahf
push
mov
mov
movsl
paddusw
jl
je
lea
jbe
push
push
and
int
imul
sbb
repnz
fmull
movb
ss
dec
lret
ficomps
stos
push
xlat
nop
mov
pop
dec
mov
imul
les
push
aad
test
sub
clc
sub
dec
fimull
les
jo
sub
mov
dec
out
add
fwait
aaa
lea
jge
cmp
mov
stos
jnp
sub
mov
aaa
lods
int3
cli
int
or
imul
into
fnstcw
lods
aas
jbe
mov
adc
nop
lret
jmp
inc
ret
jo
push
mov
popa
sbb
adc
mov
cli
push
mov
mov
cmpsl
mov
data16
jno
xchg
add
pop
sub
pop
test
cs
xor
rorb
mov
popf
imul
lahf
shl
movsb
les
or
xchg
loop
lods
adc
fmuls
adc
mov
or
xor
mov
mov
push
mov
inc
btc
inc
xor
in
jg
add
add
lcall
sub
mov
xor
nop
sub
pop
int
lahf
movsl
push
test
jle
mov
mov
inc
dec
and
or
lea
inc
je
daa
and
repz
loope
cmp
inc
aam
mov
xor
outsb
mov
jae
push
lods
or
mov
cmp
popa
lret
test
gs
dec
das
xorl
ss
pop
ljmp
ret
xchg
jg
icebp
add
xchg
cmc
arpl
mov
cmpsb
push
mov
cmp
jle
sub
das
mov
loopne
cmc
fisubrs
add
loopne
inc
push
outsl
into
bound
sbb
pushf
sbbl
push
xor
jo
mov
leave
gs
dec
and
out
and
mov
addl
stos
in
scas
mov
lea
inc
cmp
lret
inc
mov
das
jp
push
out
in
roll
mov
in
and
cmp
test
lret
and
sbb
cli
popa
fadds
jle
test
sahf
movb
or
jbe
iret
ja
repnz
or
cmp
jae
leave
cmpsl
lea
outsb
and
std
lcall
stos
mov
dec
enter
and
push
lods
xchg
mov
or
jecxz
shll
cli
lds
mov
xor
cli
mov
sarb
or
in
sbb
out
xorl
xchg
mov
add
stc
pop
push
dec
mov
in
into
push
leave
rcr
sbb
rcrb
cmpsl
daa
fiaddl
mov
pop
out
or
js
cmp
lret
es
fbstp
or
mov
mov
pop
faddp
aas
mov
movsl
dec
mov
fildll
adcb
outsb
das
into
dec
sbb
jno
or
shrb
xchg
aad
das
cmp
jo
mov
adc
xor
shlb
lods
or
pusha
cs
sbb
add
rorl
adc
das
fs
and
shrl
mov
out
or
lea
and
xchg
fs
cmp
mov
in
nop
push
mov
mov
and
jle
pusha
ret
imul
stc
movsb
lods
lahf
xor
inc
lret
mov
inc
cltd
int3
mov
push
inc
jle
inc
push
and
pusha
repz
int3
leave
sbb
xchg
xchg
popf
ret
sbb
add
xor
jecxz
mov
cld
or
pop
and
xor
add
or
jbe
mov
int3
xchg
addr16
jns
and
xor
dec
jle
or
sub
ret
push
arpl
inc
lods
cmp
xorl
loop
mov
jno
and
mov
pop
into
cmp
imul
test
mov
jbe
mov
mov
dec
jg
pusha
lds
imul
sahf
cmp
hlt
mov
cmp
cltd
je
lcall
mov
or
inc
les
icebp
jae
sub
hlt
cmpsb
jb
fsubrl
inc
push
pop
pop
inc
out
hlt
daa
insl
xchg
inc
test
repz
push
mov
stos
cmpsb
add
loope
sbb
pop
mov
sbb
aam
xchg
xor
mov
push
mov
les
stc
dec
cmp
pop
and
pop
sub
dec
shl
jb
scas
mov
mov
outsl
repz
cmc
inc
xchg
dec
add
jb
into
out
xor
pop
getsec
mov
xor
test
cmpl
or
out
sbb
std
lods
rorb
subb
popf
pop
push
cltd
stos
and
ja
andb
lods
add
fisttps
cwtl
mov
lret
sbb
divl
pop
in
aaa
xlat
jns
jnp
fmull
nop
lods
cs
adc
dec
clc
mov
movzwl
stos
decb
pop
and
adc
xchg
mov
in
sbb
dec
mov
xor
out
mov
adc
or
cld
or
cmp
data16
adc
push
mov
stos
test
jo
ret
xor
pop
add
scas
mov
stos
or
inc
lret
xchg
adc
aad
or
dec
xchg
lcall
cmpsb
sub
ljmp
add
dec
push
leave
dec
jnp
icebp
jo
add
jno
outsl
jnp
repnz
pop
mov
mov
dec
test
push
xchg
xchg
dec
and
xor
fcomip
jp
scas
cmp
sbb
sub
jne
scas
push
lea
ret
enter
and
mov
mov
mov
xor
or
pop
adc
xchg
xor
sub
inc
dec
mov
cmp
popa
das
leave
mov
push
in
add
pop
jmp
pop
movsl
ja
adc
mov
cmpl
movsl
mov
fwait
push
push
cmpsb
cmc
pop
test
push
sbb
mov
mov
data16
cwtl
or
and
stos
and
es
popa
xchg
inc
daa
add
sbb
bound
mov
icebp
adc
jo
dec
pop
in
adc
inc
daa
adc
adc
or
movsb
add
fdiv
dec
push
call
sub
fstl
pop
mov
or
mov
test
test
or
and
cmp
orb
int
pop
xor
mov
lods
dec
cmp
cmp
ficompl
fcomps
push
jge
push
notl
stos
jbe
push
fsubs
cmp
or
pop
jmp
arpl
and
inc
sahf
clc
js
add
xchg
inc
in
outsb
sbb
outsl
lcall
clc
lods
popf
andl
xchg
xor
dec
sbb
test
lret
pop
mov
sub
inc
adc
pushf
mov
add
popf
xchg
adcl
and
cli
movsb
enter
jns
xchg
xchg
and
pop
jb
test
xchg
sarb
ficoms
shll
in
clc
adc
adc
sarb
cs
dec
movsl
std
pop
cmc
outsl
pushf
cmp
mov
aam
fisubs
add
loop
loopne
pusha
stos
pop
repnz
sub
fwait
pop
cmpsb
push
and
push
imul
sbb
nop
clc
dec
mov
mov
aam
xor
jae
roll
or
icebp
fwait
push
inc
jbe
out
cmp
mov
or
in
adc
jne
lods
pop
rol
pop
sub
subb
jecxz
pop
mov
xchg
lahf
mov
and
sbb
jl
out
insl
or
fistl
mov
dec
mov
lds
xor
ficompl
jnp
or
pop
ljmp
insl
pushf
push
mov
mov
inc
xor
cmpsl
ds
pop
xor
loop
cmp
xlat
mov
mov
add
inc
pop
xchg
jge
lcall
dec
aas
sbb
loop
adc
add
mov
dec
outsl
or
test
rorl
test
dec
stos
xchg
pusha
mov
pop
aas
and
jecxz
sbb
cltd
sub
js
fsubs
dec
jns
adc
inc
hlt
pop
movsb
xchg
pop
cmp
insb
sbb
mov
adc
fiaddl
fisttps
outsl
add
push
and
and
test
xchg
addl
and
xchg
inc
into
jbe
scas
mov
mov
jb
cltd
pop
lods
ret
adc
repz
inc
aam
js
jecxz
jmp
and
or
test
adc
scas
mov
sbb
or
add
mov
lret
nop/reserved
movsl
xchg
cmp
mov
lds
imul
sub
sbb
mov
pop
stc
sub
mov
mov
sbb
mov
cs
xchg
mov
mov
divb
lods
lahf
fstpl
rcl
out
in
cmpsl
xor
mov
dec
js
xor
jns
lock
push
popf
xchg
lret
push
aam
scas
push
fmull
push
sahf
jmp
add
and
daa
lcall
out
push
mov
fnstsw
fdivr
adc
out
in
cmp
xchg
push
mov
adc
icebp
or
adc
xchg
xor
add
and
test
pop
mov
cmp
inc
rcl
mov
test
or
add
sbb
xchg
sti
pop
adc
adc
mov
movsl
cmpl
dec
mov
fsubr
dec
xchg
outsb
into
aaa
rorl
out
cli
pop
cli
pop
jg
pop
ret
out
sub
and
icebp
push
jp
inc
adc
xchg
rorb
loopne
fdivrs
sbb
rolb
mov
movsl
shl
imul
sahf
pop
cli
pop
clc
ret
cmpl
mov
outsb
inc
sbb
dec
xor
testb
and
pushf
pop
fisubrs
data16
dec
lret
aad
movsl
jne
mov
pop
cmp
jmp
stc
popf
mov
sahf
dec
insb
adc
cmp
add
ljmp
fwait
outsb
les
dec
jmp
and
or
sub
fidivrs
xlat
sbb
rol
cmc
mov
mov
lds
repnz
cwtl
mov
jnp
leave
adc
jmp
aaa
dec
mov
pop
cld
jnp
inc
int3
insb
jae
and
cli
xor
sub
pop
mov
icebp
mov
mov
jecxz
mov
fwait
test
dec
jle
pop
repnz
sub
push
push
stos
sub
js
mov
gs
pop
fistpl
mov
outsl
jae
fwait
cmp
sbb
sarl
dec
sbb
cli
fstps
fwait
js
in
xchg
mov
push
push
cmc
cmpsl
cli
scas
ljmp
xchg
or
test
inc
loop
inc
aam
sbb
cs
cli
pop
stos
dec
push
push
into
or
ja
int
xor
xchg
mov
inc
pop
orb
jae
int3
divl
out
mov
add
and
xchg
insb
pop
scas
jg
js
xchg
push
lds
cmpsl
pusha
cmpl
mov
xor
js
push
mov
dec
outsb
and
cld
add
push
movsb
fmuls
loop
int3
jl
inc
loopne
xchg
test
mov
negl
sarb
mov
outsb
pushf
cwtl
aad
mov
daa
imul
js
or
stos
adc
mov
mov
or
mov
mov
sbb
outsb
push
insl
shll
mov
je
pop
or
in
imul
sub
stc
call
add
push
and
bound
adc
mov
in
out
or
mov
cmp
shlb
xchg
aaa
js
jge
sahf
add
push
add
pop
movsb
xlat
rcrl
pushf
dec
or
lock
fstpt
std
neg
jno
mov
cmp
fs
popa
ret
cmp
add
in
lahf
jae
push
dec
sti
inc
jno
mov
mov
mov
dec
dec
xchg
add
pop
sar
push
cmc
setl
cmpsb
je
inc
and
xlat
std
imul
inc
sarb
cltd
jbe
pushf
inc
jmp
add
sbb
clc
outsb
pusha
mov
dec
xchg
mov
fisttpll
fdivrl
in
out
data16
daa
ljmp
mov
push
dec
fiaddl
inc
push
call
adc
int
cs
adc
test
int3
xor
lret
mov
ljmp
inc
rorl
lea
mov
in
lea
add
pmaxsw
or
sysret
inc
cmp
fnsave
pop
or
pop
mov
mov
insl
dec
mov
lea
adc
add
pop
rolb
adc
xchg
hlt
sub
gs
dec
jle
and
sti
xor
sub
lahf
xchg
dec
enter
mov
jbe
add
pop
xchg
mov
adc
pop
aas
mov
add
or
dec
dec
push
ja
fldenv
lods
insb
sub
mov
inc
mov
dec
mov
or
fsubrs
sbb
bound
pop
mov
jecxz
lret
lock
pop
repz
lret
adc
mov
test
mov
push
jbe
aad
pop
shl
js
or
add
and
mov
pop
pop
outsl
int3
inc
inc
data16
movsb
xor
gs
xchg
mov
jbe
ss
push
xchg
pop
push
loop
lret
fwait
and
push
xchg
loop
daa
fadds
ds
iret
or
stos
fcoms
xchg
pushf
lret
push
jnp
test
stos
dec
aaa
jmp
cmc
pop
push
sbb
fcoms
call
pop
sbb
xchg
and
push
dec
shll
test
out
mov
sbb
and
cmp
or
rorb
mov
dec
lea
arpl
rcll
icebp
das
cld
mov
inc
rorb
fwait
int
ds
add
test
jecxz
sbb
loope
jecxz
cmp
shr
jb
or
pop
pop
adc
cmpb
pop
enter
cs
dec
out
add
bound
mov
dec
cmp
adc
int3
push
jmp
lock
loop
andl
push
cmp
sbb
adc
jb
orl
into
out
insb
sub
mov
mov
push
ffreep
xchg
int3
pop
pop
mov
sub
ljmp
pop
fsts
sbb
stc
pop
mov
lret
into
xchg
dec
jbe
dec
mov
outsb
adcl
pop
repz
daa
jne
mov
cld
fisubrl
mov
call
stos
int3
dec
leave
jg
lretw
cmp
jp
sbbl
lret
cld
into
bound
xchg
xchg
jmp
gs
mov
xor
out
and
in
call
shrb
xor
scas
add
inc
cmpsl
or
mov
loope
cmp
icebp
imul
jno
and
add
mov
push
adcb
fistpl
xchg
imull
add
sbb
lret
and
cmpsl
ret
cmp
cmpsl
aam
das
rcl
xor
sub
mov
ss
aad
hlt
push
xchg
jb
sub
pop
jbe
das
push
mov
pop
cmpsb
or
inc
dec
mov
enter
and
jmp
xchg
arpl
pop
lcall
pop
mov
lahf
inc
push
das
push
imul
cli
push
icebp
cmc
out
dec
call
icebp
cmc
xchg
xor
lods
pop
xchg
ret
je
lods
cld
ss
push
repnz
lock
cli
jmp
rorb
xor
xor
lods
aaa
pushf
js
int
jno
stos
ss
mov
aaa
ret
sbb
pop
out
je
dec
call
dec
add
sbb
cmp
arpl
jl
push
mov
pop
out
pop
push
jne
popf
inc
mov
inc
jg
cmp
test
lock
mov
pop
lahf
adc
fdivrs
mov
js
aam
sbb
pop
std
dec
pop
pop
xchg
mov
mov
pop
mov
or
xchg
sub
adc
pop
pushf
cmpsl
lea
gs
cmovnp
pop
movsl
daa
pusha
mov
xchg
stos
sub
decb
mov
adc
pop
clc
and
sub
sbb
aas
xchg
pop
dec
sar
fstl
cmpsb
ficoml
mov
into
xchg
aad
xchg
je
enter
cli
rclb
sub
or
adc
mov
cmp
ljmp
push
les
mov
test
imul
inc
cld
lret
dec
sub
ljmp
push
aaa
xchg
test
mov
xchg
je
mov
ja
inc
xchg
faddl
push
jge
mov
mov
and
sub
ret
jl
cmp
sbb
cld
add
rcll
enter
mov
push
js
pop
mov
mov
lret
sub
ss
mov
cmp
scas
outsb
clc
mov
or
ljmp
jg
lret
xor
in
mov
loope
aam
sahf
cmp
xchg
test
jo
adc
jcxz
bound
jp
addb
dec
loope
lea
cli
pusha
into
push
mov
cmp
or
int3
repz
daa
hlt
daa
adc
jmp
mov
scas
xchg
rep
subl
mov
subb
adc
out
xor
outsl
insl
arpl
xor
fs
insb
add
add
pushf
jmp
test
cmp
call
call
in
sub
sub
mov
and
xchg
push
xor
enter
addr16
sbb
in
xchg
xor
rclb
fistpll
dec
test
adc
jg
out
pop
push
ret
testb
xchg
sub
fwait
imul
or
stos
mov
pushf
jmp
out
sub
roll
test
or
call
add
xchg
mov
or
ja
pushw
int3
sub
pop
jl
in
push
test
cmpb
mov
ficomps
dec
js
mov
popf
mov
popa
sbb
and
jge
adc
rorb
repz
pop
pop
xchg
dec
mov
inc
inc
stos
adc
popf
cmp
mov
sub
sub
cmpsb
inc
mov
mov
cmp
mov
jne
push
mov
inc
insl
scas
in
sub
sub
subb
insl
xorb
jl
jl
cmp
sub
call
popl
lret
mov
pop
fiadds
lods
push
sub
and
lahf
pop
xchg
es
mov
loopne
pop
mov
adc
adc
adc
aas
mov
das
or
je
jno
pop
test
popf
gs
inc
test
negl
push
cmpsl
push
jle
mul
faddl
mov
cwtl
pusha
push
sub
stc
push
add
pusha
movzwl
add
clc
xor
dec
clc
mov
jmp
cmp
clc
call
lea
call
movl
lea
jae
jmp
movb
pushf
pushf
lea
ja
pushf
lea
mov
bswap
mov
xchg
mov
mov
call
push
mov
sub
xchg
scas
cwtl
mov
push
out
push
iret
stos
lcall
sbb
sub
jle
jno
inc
sub
std
or
cmp
inc
lea
adc
adc
je
lods
xlat
adc
mov
pop
shrl
xlat
push
fsubrs
test
xchg
mov
pop
aas
mov
in
ss
or
add
loop
sub
push
xchg
xlat
enter
repnz
mov
mov
add
or
mov
testl
mov
xor
mov
jge
addr16
mul
repnz
repz
xor
pop
mov
in
jle
js
data16
jns
inc
jnp
outsb
xchg
nop
cmp
fs
or
std
das
jbe
hlt
cwtl
mov
and
into
fwait
dec
pop
sub
cmp
and
je
cs
mov
and
cwtl
test
ss
jo
mov
and
data16
lods
sbb
pop
cmp
push
xchg
push
lcall
mov
imul
lds
jnp
adc
pusha
or
adc
dec
ja
push
push
rcl
push
dec
negl
cmp
adc
cli
cmp
lods
push
inc
xchg
jo
xchg
sub
and
pushf
cmpsl
pop
iret
addr16
sub
push
jecxz
ljmp
dec
xor
fimull
inc
cmp
xor
jne
jo
push
push
aaa
pop
push
lret
push
jns
fdivr
push
cwtl
pop
hlt
sub
push
jge
outsb
mov
call
cltd
imul
call
mov
sbb
mov
pop
out
mov
mov
mov
mov
lods
andl
push
xchg
loop
sahf
and
ja
lahf
cmpsb
repnz
push
inc
jmp
xchg
xor
aad
xor
xchg
out
pop
incb
ja
cwtl
cmpsl
mov
mov
jl
sub
sbb
sbb
sub
mov
sub
dec
xor
xchg
dec
cld
aad
addb
xchg
icebp
mov
push
aaa
adc
pop
sbb
cmc
add
int
dec
mov
xor
out
xchg
in
dec
std
lock
cld
mov
test
mov
call
fistl
loope
or
lahf
xor
cld
in
push
std
mov
popf
mov
jbe
jnp
icebp
cmp
das
jmp
xchg
dec
incl
mov
ss
xchg
addr16
mov
out
es
dec
outsl
or
push
mov
cmp
xchg
add
out
nop
fdivrl
test
cltd
int
fisttpl
pop
add
popa
in
cmp
decb
stc
test
cmc
mov
stc
jmp
add
bound
add
mov
inc
daa
and
mov
aas
leave
xchg
js
cli
xchg
push
xor
ret
jno
sbb
stc
scas
and
and
clc
loope
test
push
fadd
mov
shll
pop
jle
es
movb
daa
cld
fs
repz
add
shlb
stos
inc
mov
jbe
adc
sarl
test
sbb
int3
stos
fistpl
into
xchg
aas
dec
xchg
mov
adc
pop
fisttps
cld
and
lret
jae
clc
bound
xchg
xor
fdivrp
jb
scas
ret
mov
or
push
and
gs
add
xchg
push
cmpsb
mov
rclb
jle
inc
not
arpl
sub
and
les
popa
sub
gs
adc
push
vrcpss
dec
push
rcrl
or
sbb
scas
pop
in
mov
pop
jbe
sti
aas
lods
cmp
xor
hlt
cli
xor
nop
fstl
popf
xchg
pop
lock
or
mov
push
dec
scas
les
ret
push
jp
mov
mov
loop
jl
sub
add
add
dec
and
sub
pop
rol
lret
push
jae
out
jg
add
negb
sub
fisttpl
fcmovnu
popa
sub
lea
mov
sti
mov
fs
out
xchg
or
pop
test
cld
mov
je
pushf
jg
negb
insb
dec
jnp
test
sbb
fildl
mov
fwait
jmp
jbe
out
std
inc
hlt
rol
popa
int
sahf
mov
pusha
push
popf
jbe
in
daa
in
xor
std
pop
push
sub
lret
pop
pop
inc
jge
es
ss
scas
jae
imul
jae
test
inc
roll
adc
lods
test
push
gs
inc
jge
test
push
lods
stc
btc
clc
mov
test
bt
stc
test
and
stc
cmc
pushf
stc
add
movb
pushf
lea
jmp
pushf
lea
jb
call
mov
movb
mov
movl
call
out
push
pusha
sub
dec
cmpsl
sbb
inc
arpl
jle
cmc
lods
loope
or
mov
sbb
pop
into
mov
call
push
sbb
ljmp
bound
test
cmpsl
insb
push
lods
ss
adc
test
cs
mov
push
mov
or
xchg
shlb
lock
outsl
dec
je
sahf
int
mov
xchg
fwait
pop
mov
and
adc
fmuls
or
data16
leave
fcomp
jle
add
imul
lret
imul
fidivrs
imul
insl
jns
and
repz
mov
call
lea
jb
pushf
cmc
bt
cmpb
call
mov
movl
movl
pushl
movb
lea
jmp
test
add
addr16
js
mov
jb
ss
mov
ss
mov
push
lea
js
xchg
jmp
shr
sbb
mov
mov
mov
fiadds
xchg
dec
adc
sahf
cmp
test
inc
data16
outsl
in
sbb
es
xchg
xchg
add
lcall
sub
push
insb
je
iret
dec
int3
mov
mov
xor
fisttpl
bound
fdivrs
jl
in
sbb
pusha
pushl
pusha
jmp
stc
xor
stc
call
pushf
jmp
imul
stos
stc
cltd
das
inc
test
or
sahf
stos
add
pop
pop
sub
addr16
and
sub
js,pn
adc
fsubr
loop
inc
scas
dec
xor
daa
push
rol
and
cli
mov
aam
test
aaa
jbe
push
movsl
jae
mov
mov
fnsave
adc
fsubrl
clc
jo
icebp
mov
cs
repnz
pusha
pusha
jmp
movb
mov
pusha
pushl
ret
push
pushf
ror
jmp
cmc
pusha
mov
mov
pushf
test
movw
neg
pushf
bt
jmp
sub
xor
adc
fs
sbb
pmaxsw
lock
mov
repnz
pop
pusha
inc
cmc
shrl
xchg
sbb
mov
or
ret
mov
jo
lret
pushf
test
xchg
mov
jne
xchg
ja
cli
push
xor
imull
dec
fldcw
sahf
xlat
mov
pop
jo
add
or
out
pop
popf
in
outsb
xchg
stos
xor
cmp
std
inc
sub
lahf
insb
stc
adc
cmp
daa
inc
jmp
sbb
mov
push
jnp
push
pop
sub
testb
je
cmp
std
sarl
adc
pop
iret
mov
pop
push
or
dec
lods
out
test
and
xor
fsubrs
cwtl
add
jno
xchg
jnp
call
adc
repnz
loope
or
ss
mov
or
lds
cmpsb
dec
insl
lret
cld
push
in
inc
movsl
nop
mov
sub
add
xchg
jle
flds
push
inc
inc
inc
jmp
dec
mov
xor
pop
pop
pop
sub
out
test
xor
call
adc
pop
flds
lock
stos
mov
dec
in
push
sub
ss
sarb
sub
jp
scas
lds
push
imul
shlb
add
push
mov
xchg
popa
push
psubsb
lret
faddl
repz
and
leave
mov
shrl
mov
and
mov
mov
pop
mov
sub
lock
aam
inc
sub
sub
jecxz
add
mov
mov
jae
xor
xchg
test
int
cmp
sbb
mov
mov
xchg
jbe
sbb
cmpsb
stc
sub
sub
lea
inc
adc
outsl
divl
xor
pusha
inc
ret
je
push
push
rcr
jl
xchg
adc
ds
test
adc
and
js
testb
cmp
pop
test
dec
bound
addl
pushf
mov
movb
lea
jmp
call
call
add
call
xchg
pop
adc
add
inc
out
popf
mov
mov
fmull
out
pop
xchg
out
jecxz
ds
sub
pop
lea
push
scas
fcmovnb
jb
mov
mov
xor
dec
xor
cmp
imul
pop
pop
hlt
sub
inc
out
fldenv
dec
inc
jmp
and
fs
pop
fidivrs
ss
stos
cmc
shlb
jle
lcall
xor
outsb
in
nop
pop
dec
mov
ret
jge
cmp
lret
xchg
pushf
cmp
mov
sbbl
and
test
rcl
cmp
inc
add
cmp
fldt
sbb
sub
stos
push
mov
add
jl
mov
bound
xchg
pushf
jo
and
jle
mov
or
xor
inc
icebp
inc
es
sub
adc
push
ja,pt
and
movsl
adc
nop
sub
or
mov
push
inc
sub
sub
out
mov
fstp
pop
sub
jbe
sub
mov
xchg
ss
adc
and
pop
rclb
push
mov
ret
fstpt
std
pop
ja
xor
and
mov
and
jne
bswap
mov
mov
clc
or
push
call
setb
cwtl
mov
mov
pushf
push
lea
jmp
lea
je
cmp
pusha
pushf
cmp
lea
pusha
jmp
pushf
lea
ja
call
sub
dec
pop
sub
ud1
fsubrp
inc
xor
jae
out
jnp
ds
cli
jne
jp
xchg
sub
inc
mov
outsl
mov
push
push
movsb
stos
pop
jne
mov
jb
lock
push
or
add
adc
repz
add
push
sarl
stos
xor
mov
out
cmp
imul
fs
inc
add
movsb
lahf
pop
sub
mov
sub
xor
xchg
imul
pop
scas
jbe
mov
mov
decb
cmp
mov
lods
call
mov
push
dec
test
inc
iret
outsl
daa
add
jg
in
call
dec
mov
aad
test
ret
adc
xlat
jae
fs
or
and
lea
ja
push
pusha
pushf
lea
jb
pusha
cmp
cmpb
mov
pusha
lea
jne
shld
stc
mov
test
call
jecxz
add
add
out
push
nop
call
xchg
adc
jg
xor
sub
test
xchg
sub
mov
std
fisubrl
mov
mov
mov
push
sbb
xor
sbb
push
lret
fldcw
push
lea
pop
insb
adc
popa
sub
sub
out
rcrb
adc
movsb
xchg
clc
pushf
add
xchg
das
ja
add
adc
cmp
fs
call
jmp
lea
ja
jmp
push
stos
movw
lea
jmp
call
add
movsl
sahf
sub
ret
decb
adc
sbbb
adc
imul
and
ljmp
push
mov
and
das
pop
mov
pop
in
pop
shl
adc
scas
add
ret
cmp
cmpsl
xchg
loop
pop
xor
cs
pusha
stos
lahf
inc
jno
outsb
decl
mov
mov
fs
dec
add
add
add
shlb
mov
fmuls
out
pop
addl
pushf
cmp
pop
popf
idiv
repz
cltd
in
xchg
jo
movsl
push
sub
hlt
lcall
jp
or
bnd
mov
fildl
and
imul
faddl
sub
mov
jo
xlat
fbld
sbb
pop
sbb
or
popf
ja
xchg
les
inc
xlat
lods
mov
mov
xchg
repnz
or
fwait
addr16
stos
fldcw
jge
loopne
push
faddl
aad
mov
les
sub
cs
sub
aam
int3
loopne
hlt
mov
repz
xchg
mov
popa
mov
xchg
aas
or
test
and
jp
jne
scas
inc
cmp
lock
dec
call
in
std
pop
sub
mov
pop
pop
mov
fsub
shll
xchg
in
adc
adc
mov
fisttps
fnstenv
fcmovnbe
jne
inc
lea
sub
xchg
jns
stos
inc
pop
out
cmp
push
mov
lods
ljmp
imul
movsl
xor
cmp
repnz
lahf
mov
push
pop
pop
mov
lock
adc
add
xchg
xchg
out
stos
push
pop
lret
movsb
outsl
and
cmp
ret
fwait
or
out
aad
and
add
xor
inc
inc
test
popa
push
fdivrl
inc
dec
mov
jmp
in
icebp
aam
mov
jge
jne
adc
test
mov
arpl
add
aaa
dec
ljmp
xor
cmp
loopne
stos
lahf
shrb
repnz
push
scas
subb
or
movsl
xchg
push
sub
fidivl
mov
pushf
pushf
movl
call
rol
jmp
pusha
pushf
movl
push
lea
je
pushf
movl
pushf
pushf
pushf
pushf
lea
jmp
movsbw
lea
push
call
dec
stc
bt
ror
bt
sub
stc
clc
jmp
call
jb
popa
push
sub
ja
scas
andl
mov
sahf
lcall
sbb
mov
mov
adc
sbb
push
lret
mov
sbb
adc
fwait
adc
in
inc
mov
repz
push
iret
mov
mov
add
scas
cwtl
les
dec
sub
fwait
cwtl
fstl
xchg
lcall
lahf
cld
cmp
xchg
fmull
out
lds
cmp
xor
icebp
push
stc
mov
clc
test
mov
mov
mov
ret
jmp
jne
call
pushf
lea
jne
not
mov
cmp
add
call
mov
push
pushl
ret
pop
cltd
pushf
push
sub
ss
jne
out
out
mov
pushf
or
cld
data16
add
popa
leave
cmpsl
movsb
mov
jg
sbb
lods
mov
in
decb
dec
bound
and
fstpl
lret
lods
inc
cmc
xchg
pop
dec
outsb
inc
inc
jecxz
pop
bound
jmp
inc
jp
dec
iret
xor
fisubrs
iret
xchg
stos
push
mov
idivb
iret
iret
sbb
sbb
insl
push
or
pop
pop
mov
mov
bswap
pop
call
arpl
in
sub
sbb
sbb
mov
xor
and
ret
cmp
push
push
inc
lea
cmp
vcvtss2si
ret
shll
and
add
fsubr
inc
negb
scas
ljmp
dec
push
std
fadd
ja
fdivrs
cli
dec
bound
and
xchg
add
push
sub
stos
push
loopne
adc
std
mov
lock
cwtl
cmp
xchg
and
lods
push
and
ljmp
lea
pop
outsb
mov
xchg
mov
jns
cmc
add
xchg
inc
dec
jp
xchg
jl
arpl
in
mov
in
mov
and
add
outsb
push
sub
mov
es
xchg
mov
xchg
mov
pop
hlt
pop
jb
mov
and
mov
ja
mov
fnsetpm(287
sub
in
xor
sub
pusha
add
xchg
sbb
and
push
ret
ja
mov
dec
xchg
ret
lods
shll
mov
jle
cmpsb
mov
jo
push
lods
push
int3
loope
mov
stos
xchg
and
pop
xor
cmp
cli
ret
je
std
jmp
adc
outsb
pop
clc
lds
push
or
sahf
sar
aad
pop
inc
je
aaa
push
push
xchg
and
jbe
jbe
rorl
pop
mov
dec
sub
scas
arpl
or
lret
lret
cmc
in
add
mov
loop
push
mov
ret
rol
dec
push
xchg
bound
add
mov
inc
roll
sub
imul
out
pop
iret
mov
push
negb
push
xor
xchg
xchg
cmc
icebp
mov
and
outsl
xchg
inc
lods
add
notl
mov
fwait
cltd
dec
cmp
in
xor
arpl
sub
test
das
lea
or
push
add
adc
add
das
mov
xorb
push
mov
cmp
jecxz
repnz
cmp
lds
in
adc
dec
mov
into
call
aad
dec
pop
or
xchg
push
jnp
mov
mov
push
xor
fsubrs
xchg
rcrl
xchg
cmp
add
mov
push
call
sbb
xor
fwait
cwtl
mov
add
xor
stos
adc
test
imul
cmp
sarl
sub
stos
mov
stc
add
in
or
movsb
and
int3
in
mov
mov
mov
mulb
and
mov
mov
out
daa
imul
mov
not
mov
pushf
push
call
sbb
cmp
mov
in
xchg
and
shl
xor
lcall
lahf
xchg
arpl
jp
dec
or
jnp
mov
adc
pop
enter
cltd
pop
push
mov
and
out
add
mov
xchg
cmp
mul
xor
mov
outsl
lock
pop
jns
mov
jp
pop
or
test
push
lahf
mov
insb
into
sbb
jne
insl
cmc
jmp
enter
shl
fsubrl
mov
jae
cmp
cmc
mov
push
aas
ror
pushf
sub
mov
rol
pushf
test
neg
stc
pushf
call
push
pushf
lea
jmp
lahf
inc
cli
dec
sub
or
fabs
shlb
lods
xorb
es
sub
jg
xor
out
daa
sbb
cwtl
xor
xchg
movsl
xchg
or
out
and
outsb
lahf
jmp
addr16
mov
or
arpl
fimuls
rorl
mov
inc
movsb
leave
xchg
cmp
pop
mov
es
jo
add
adc
ljmp
adc
pop
hlt
dec
or
in
mulb
xchg
and
out
inc
xor
push
fs
popl
pusha
pushf
pushf
pushl
ret
pushf
movl
pushl
mov
lea
je
xadd
bts
mov
and
call
mov
imul
pop
dec
lock
fwait
mov
cmp
jbe
iret
mov
xor
pushf
fs
stos
dec
mov
jno
sub
xor
addb
lds
push
ss
cmp
imul
daa
bound
sbb
aaa
add
mov
sub
cmp
add
inc
mov
setb
pusha
push
lods
cmc
jmp
repnz
pushf
pushl
lea
jmp
lret
inc
jmp
or
shrb
pop
sub
cwtl
inc
insb
stc
pop
lss
adcl
pop
outsl
jno
out
push
xchg
push
in
inc
lock
push
adc
dec
add
jmp
xchg
out
xchg
insb
loope
cmp
fwait
je
dec
repz
mov
mov
push
and
sarl
xchg
jbe
mov
mov
repz
das
xchg
stc
call
fcmovnb
push
sub
pushf
cli
dec
push
lods
add
xchg
and
xchg
hlt
mov
sbb
sbb
ja
pop
insl
lahf
jne
pushf
dec
std
inc
mov
pop
xchg
xchg
loope
fistpl
outsl
sbb
or
cmpb
cmp
jo
aaa
daa
jbe
insb
nop
cld
popa
imul
push
adc
and
xchg
mov
dec
mov
cmp
popa
mov
loop
xor
mov
lods
push
xchg
xchg
sbb
aas
push
xchg
imul
sub
or
pop
mov
cmpb
fistpll
frstor
or
cli
imul
loope
insl
ljmp
ror
loop
subb
xorl
pop
cmp
sbbl
and
cmpsl
lock
cmp
out
jg
jmp
push
fxch
sbbl
stos
add
aaa
sbb
mov
das
pop
test
cli
js
enter
testb
ret
xor
ljmp
aam
mov
jge
dec
mov
leave
ret
enter
je
jmp
jmp
sub
sbbl
outsl
add
mov
mov
test
insb
lea
lret
in
sahf
filds
and
shll
fwait
sub
adc
cmc
mov
sbb
out
outsl
mov
or
sub
imul
cmp
xor
jle
mov
testl
push
xor
cmc
call
pushl
mov
pushl
jmp
pushl
popl
pushf
pushl
ret
das
sub
add
js
outsl
into
and
mov
sub
mov
enter
scas
push
add
jnp
leave
js
mov
and
je
pusha
in
inc
rcl
cltd
xor
shll
ljmp
arpl
cmp
mov
jbe
push
test
mov
int3
outsb
out
mov
dec
sbb
aad
xchg
mov
in
sti
adc
push
jbe
sbb
mov
out
xchg
jle
cs
or
add
xchg
lods
mov
jge
sbb
in
pop
cwtl
into
and
in
mov
cmp
and
ret
xor
push
movw
lea
je
lea
mov
not
jmp
sub
jmp
flds
dec
sub
dec
cmp
lcall
mov
inc
cwtl
xchg
xchg
jl
sbb
mov
add
shrl
mov
sub
orb
popf
out
push
dec
loopne
jl
push
adc
jp
pop
inc
mov
popw
sti
xor
xor
pop
jae
sbb
aad
xchg
xor
shr
clc
fcoml
sbb
sub
test
stos
repnz
cmp
mov
lea
cwtl
lahf
lea
not
mov
pusha
pushl
lea
ja
pusha
jmp
jmp
sub
pushf
pushl
popl
movl
cmp
pusha
jmp
movw
clc
cmp
sub
bt
rol
stc
jmp
mov
pushl
popl
lahf
push
mov
pop
lahf
pusha
movl
call
pop
mov
dec
sub
daa
add
mov
lods
dec
decl
mov
dec
leave
iret
sbb
lret
negb
push
jmp
in
mov
sarb
lods
lock
insl
push
mov
jl
sbbl
stos
pop
dec
fcmovbe
in
insb
or
cmp
mov
repz
push
dec
pop
jmp
popf
in
push
clc
ffreep
pop
adc
adc
lahf
or
shlb
cmp
cmp
mov
clc
fmull
jmp
mov
bswap
test
setno
bt
mov
test
cmp
jmp
sbb
jnp
sub
pcmpgtb
sbb
dec
sbb
iret
mov
push
rcrl
inc
aaa
pop
jo
stos
pop
jns
hlt
arpl
movsb
pop
out
shll
sbb
or
mov
cmp
fsubl
or
inc
push
cmc
cmp
jno
push
cmc
test
and
adc
jno
and
scas
push
xchg
js
mov
xor
jl
push
sub
stc
fiadds
stos
jmp
add
mov
stos
push
pushf
jp
xchg
mov
cmp
or
mov
pop
icebp
mov
or
jnp
rclb
push
sub
xchg
xchg
inc
popa
addr16
test
pop
rcrl
sbb
adc
or
mov
lret
out
sti
pop
mov
orb
fnstcw
scas
cmp
jl
cmp
push
mov
push
pop
cmp
cmp
jge
xor
lea
jne
call
pushf
pushf
lea
jne
call
xor
inc
sub
mov
clc
dec
out
xchg
addr16
sub
jne
test
mov
push
mov
sahf
inc
or
inc
mov
ret
jnp
pop
lret
jp
pop
mov
negl
sub
rorl
in
bound
sbb
sub
jb
or
inc
xchg
ja
es
xchg
xor
xor
mov
sbb
inc
cmp
sti
jmp
cmp
gs
clc
adc
add
add
bt
add
pushf
pushf
lea
jmp
push
movl
jmp
jmp
pusha
push
jmp
jmp
pushf
lea
jae
clc
sub
clc
test
or
jmp
call
push
pusha
lea
jne
test
ror
mov
pushf
jmp
pusha
cmp
pushl
pushf
lea
ja
mov
inc
not
seta
mov
push
inc
lea
call
pusha
test
pushf
call
fisttpll
inc
sub
add
leave
loopne
jbe
stos
dec
mov
mov
adc
cmp
mov
or
movl
jge
icebp
inc
or
mov
test
push
add
push
inc
cmp
popf
push
mov
adc
imul
test
xchg
sarb
or
mulb
and
sub
sbb
hlt
xchg
clc
pusha
lea
call
bt
cmp
sub
pushf
pushf
lea
jl
pushf
lea
jne
call
jmp
adc
inc
sub
andb
cli
andl
aad
jb
dec
cmp
jne
repz
push
adc
ss
mov
dec
mov
cmp
jmp
das
je
sbb
out
xchg
cmp
cmp
mov
outsb
mov
jne
mov
jge
pusha
or
pusha
pop
push
add
cmp
cmp
add
fsubrp
test
xchg
mov
scas
sbb
cmpsb
movsl
sub
dec
lds
mov
push
ljmp
pop
and
fmuls
idivl
ret
push
daa
push
cmp
cltd
mov
fidivrs
jg
adc
mov
push
scas
or
loop
pop
mov
xchg
mov
in
add
enter
inc
call
or
inc
fs
out
and
cmc
outsl
pusha
xor
fcmovb
addb
rcll
and
jmp
mov
outsl
inc
sub
cli
shll
addb
data16
pop
lock
ret
pop
icebp
out
loop
cwtl
popf
xchg
into
fsubrs
sahf
mov
pop
mov
xorl
push
jns
xchg
clc
mov
iret
add
xor
dec
cmp
sub
mov
test
icebp
ret
xlat
scas
in
imul
jp
adc
jl
and
xchg
xchg
adcb
mov
mov
or
push
mov
pop
loope
in
adc
dec
sub
imul
jecxz
in
xchg
xor
jge
aad
xor
cmovle
sbb
in
mov
push
pop
insl
mulb
lock
iret
fistps
xor
cwtl
pop
and
mov
arpl
sbb
insb
sub
out
sub
mov
setl
rcrl
add
popf
stc
add
js
jae
lret
and
es
sbbb
push
mov
pop
xchg
lods
int
add
mov
xor
xchg
das
das
cmp
add
jne
pusha
es
or
shrl
sub
push
in
incb
sbb
aam
jl
mov
xor
dec
nop
push
out
adc
cmp
dec
push
xchg
jns
mov
shlb
into
sub
pop
add
push
ss
out
sbb
mov
mov
add
inc
lret
pop
daa
dec
clc
inc
cld
out
jecxz
dec
xchg
sbb
sbb
mov
outsl
add
lock
xchg
dec
dec
adc
fdivrp
add
jmp
in
gs
add
pop
mov
cmpb
xchg
out
dec
inc
lds
cmp
ss
xchg
sub
jp
jbe
movsl
push
ljmp
mov
push
das
adc
mov
mov
mov
mov
mov
mov
frstor
out
rorb
adc
popa
xor
lret
push
pop
popa
pop
std
pop
mulb
push
imul
in
fidivs
enter
decl
add
mov
dec
clc
or
mov
push
pushl
add
push
push
jmp
mov
inc
call
not
bt
cmc
pushl
cmc
neg
jmp
ror
cmc
call
call
jmp
add
add
and
and
pop
dec
add
add
add
add
cmpsl
cmp
add
add
push
roll
add
dec
popa
iret
sub
push
inc
mov
sub
arpl
cmpsb
push
cmc
sbb
fidivrs
xchg
hlt
xorb
cmpsb
incl
and
pop
cmpsb
adc
sub
jmp
lea
je
pusha
mov
movb
mov
movb
movl
cwtl
lea
movw
pushf
movl
pusha
pushl
popl
pushf
pushl
ret
in
pop
inc
sub
outsl
cltd
repnz
aam
add
test
fwait
or
jge
mov
mov
out
fcom
bound
push
mov
ret
sbb
int3
stos
lret
outsb
int3
push
lret
xor
fs
pop
movsb
icebp
jge
xchg
mov
mov
mov
jmp
sbb
adc
dec
inc
xchg
aas
sbb
pop
mov
adc
cmp
aaa
aad
inc
test
sub
push
and
testl
push
push
jmp
pop
repnz
sub
xor
inc
sub
hlt
cmp
mov
jns
mov
outsl
cld
dec
out
ret
adc
test
ret
pop
daa
iret
gs
jo
dec
dec
enter
pop
or
clc
fwait
xchg
addb
mov
icebp
mov
jae
es
in
sahf
jp
repnz
mov
out
js
ss
sahf
cld
aas
jl
lods
or
sub
adc
sub
clc
dec
inc
insl
leave
out
jle
pop
jl
jecxz
adc
and
in
out
dec
push
lods
jne
push
cmp
arpl
or
or
cmp
jb
sub
cmp
mov
lret
cmp
xchg
enter
pop
into
xor
push
xchg
and
add
aaa
je
mov
enter
addl
std
inc
sub
or
inc
mov
push
arpl
mov
cmp
jae
push
or
mov
xchg
xchg
adc
sti
pop
repz
leave
divl
lea
cmp
ljmp
xchg
adc
pop
outsl
test
mov
cmp
mov
test
cld
mov
adc
ja
xor
ljmp
jmp
cmpsb
or
jmp
pop
out
arpl
mov
test
mov
add
insl
add
test
sarl
push
xor
lret
imul
aas
sub
inc
mov
xchg
popa
mov
or
sbb
inc
shlb
sub
mov
push
mov
test
movsb
nop
pop
jmp
jmp
mov
pop
or
popf
cmp
sbb
mov
addb
lock
adc
xor
push
mov
out
fnstcw
mov
pushf
cmpsl
ss
jge
lea
fwait
mov
pushf
pusha
pushf
movb
lea
jmp
movsbw
pushl
movl
movzbl
call
pushf
movl
jmp
pushf
lea
jae
pusha
movb
lea
jne
jmp
mov
pusha
pushf
pushl
ret
ja
sub
fidivl
lret
pusha
adc
rcrl
mov
push
xor
mov
rolb
sub
out
stos
sbb
ja
in
je
test
mov
insl
arpl
loop
stc
sahf
push
iret
sub
cmc
enter
adc
stc
sub
xchg
jb
xchg
imul
push
xchg
mov
jo
repnz
cmp
mov
xcrypt-ofb
cmpsl
sub
imul
test
insl
push
add
mov
mov
pusha
add
movsbw
mov
pushf
pushf
cmp
add
test
mov
rcl
btr
bsf
mov
test
movb
push
bt
cmp
lea
jb
call
push
mov
cltd
lret
popa
dec
movsl
mov
xchg
sub
inc
cmp
pop
dec
cs
pushl
roll
ss
or
fdivr
jmp
xchg
sar
cmp
mov
sbb
xor
cmp
stos
popf
andl
not
pop
aad
sbb
xor
cli
cmpsl
push
mov
sub
repnz
adc
cs
test
fisubs
ja
push
cmp
add
sub
jns
add
gs
xor
fs
insb
add
cmp
push
mov
add
mov
std
pop
fxch
popa
testb
cmc
sbb
icebp
push
and
or
scas
pop
sub
add
inc
ds
push
jo
mov
add
dec
not
pop
inc
out
xlat
iret
or
or
int
cmp
or
xchg
shrl
pushf
cmpsl
pop
add
int3
mov
cmp
inc
mov
cmpsl
adc
insb
xor
test
lea
add
mov
int3
or
js
jne
inc
push
or
push
lock
leave
pushf
call
outsl
cmp
jg
test
lret
stc
lahf
sub
out
into
das
popf
divl
in
add
dec
xor
pop
inc
scas
add
das
cwtl
xor
pop
xchg
sub
mov
mov
aam
or
jg
push
or
smsw
push
mov
mov
dec
cltd
cmc
lods
icebp
xchg
xor
mov
cmp
sub
stc
int3
in
mov
xor
push
pop
push
outsl
cld
cmp
add
pop
loope
gs
jbe
data16
sahf
int3
sub
pop
jbe
xchg
adc
lret
inc
mov
add
push
inc
adc
cmp
mov
aas
inc
test
dec
mov
nop
push
dec
pop
popf
mov
pop
push
lret
inc
dec
ljmp
xor
testb
jo
or
test
mov
jecxz
xchg
js
sahf
and
xchg
fidivs
inc
gs
outsl
fs
gs
imul
add
and
lea
jae
pusha
btr
xadd
sbb
mov
or
pushf
ror
movzbw
mov
rol
stc
bts
mov
clc
sub
test
stc
pushf
repnz
movb
pushf
lea
jmp
add
jno
lret
jmp
push
push
pusha
dec
cmpsl
adcl
pop
std
fadds
cs
aad
sub
lret
cmp
fnsave
sbb
push
leave
dec
mov
ret
rorl
or
or
push
or
mov
dec
push
pusha
jbe
cmp
fnsave
cmp
mov
mov
sbb
inc
mov
imul
adc
lcall
xchg
int
enter
push
std
ret
jnp
insl
dec
and
shlb
test
pop
mov
pop
pop
mov
dec
aaa
in
repz
jae
jl
pop
sbb
jp
in
inc
outsb
inc
sahf
push
xor
lods
mov
cmp
repnz
xchg
aad
cmp
add
gs
imul
int3
or
loope
pop
insl
mov
dec
pop
push
lds
pop
or
dec
mov
and
ljmp
stos
xchg
in
test
xorl
fs
bound
sbb
fdiv
shr
or
sbb
lock
or
push
js
xchg
pusha
pop
xchg
jb
pushf
mov
mov
adc
push
out
testb
sub
adc
or
sahf
not
push
push
stc
aad
and
mov
into
cld
mov
pop
mov
adc
dec
js
pop
add
pop
fs
mull
call
jl
adc
jbe
mov
pushf
mov
lcall
or
sbb
xor
icebp
lret
or
mov
int3
dec
aam
mov
xchg
pop
inc
jmp
cmp
callw
sub
sar
mov
roll
sbb
or
iret
das
enter
pop
scas
fnstenv
mov
push
out
std
in
loopne
mov
pusha
adc
je
aad
cmc
add
fs
stos
push
imulb
mov
cmc
out
loopne
xor
mov
xchg
ljmp
andl
insl
jmp
stos
mov
push
cld
daa
pushf
in
mov
cmp
fldl2t
push
adc
xlat
dec
cltd
pop
or
push
mov
hlt
aas
mov
sahf
insb
mov
lahf
call
cs
add
in
icebp
add
fsubrp
sbb
or
sub
cmpsb
and
jge
jg
scas
xchg
cmpsb
add
and
xchg
insb
jns
loop
dec
push
mov
mov
lret
mov
jmp
sbb
dec
in
sub
clc
adc
inc
nop
mov
xor
mov
mov
rclb
shrb
fcmovu
repz
fdivs
fidivrs
ret
ficomps
xchg
cmc
daa
jle
inc
out
mov
in
jae
or
sub
shll
out
subl
cmp
shll
cmp
cmp
mov
xlat
mov
mov
mov
sbb
inc
adc
mov
shlb
clc
mov
ja
mov
mov
das
lods
mov
sub
sbb
cli
mov
jg
or
jp
orb
out
fidivrl
pusha
push
out
and
in
jp
xor
in
mov
ds
xchg
lods
xor
js
mov
aaa
sub
vmwrite
lea
inc
push
sub
std
out
mov
mov
dec
mov
lock
call
jno
or
cltd
ja
jl
imul
je
cld
lea
lods
push
daa
add
lods
rcrb
mov
inc
mov
mov
push
loop
sub
xor
repz
or
mov
mov
sbb
leave
and
jne
cmp
lock
ss
push
or
lods
mov
mov
les
xor
outsl
dec
lahf
xchg
imul
stc
or
inc
xchg
iret
cs
shll
test
iret
cmp
push
inc
in
es
jno
in
dec
jge
mov
movsb
jmp
je
pusha
jmp
lea
push
jmp
sbb
sub
insl
fdivrs
or
bound
xchg
jbe
movsb
lahf
sbb
cld
mov
leave
fwait
dec
scas
dec
xor
in
sub
cmp
sbb
add
pop
shll
ret
icebp
out
les
or
ret
rcrb
jno
mov
adc
inc
jge
xor
jle
adc
xor
xor
xorb
cwtl
sub
movsb
sub
lock
outsl
push
fs
push
mov
outsl
hlt
xor
lret
xor
xor
mov
add
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
cmp
pushl
lea
jb
cmp
bt
stc
bt
cmp
jmp
jmp
lea
ja
pushf
lea
jb
pusha
jmp
pushf
lea
jne
pushf
call
sahf
xor
add
pop
and
and
sbb
sub
xor
lret
jg
adc
aas
pop
mov
xchg
mov
imul
js
data16
test
mov
sub
mov
mov
fwait
cmp
and
jnp
andl
mov
ja
std
push
hlt
in
push
dec
inc
es
movl
push
pusha
push
movl
pushf
movw
pushf
lea
jmp
cmp
call
into
inc
stc
xor
add
repz
xchg
cwtl
imul
decb
and
inc
in
cmc
pop
mov
pop
inc
mov
sbb
mov
adc
cmp
rclb
out
mov
add
cmp
daa
lret
popa
lret
xor
sub
push
test
hlt
sbb
test
cmpsb
out
jnp
sahf
leave
aas
jl
push
sub
xor
cmp
cwtl
into
push
sub
inc
dec
jbe
cmp
jno
sub
repnz
jb
stc
push
jae
call
fcos
icebp
mov
adc
js
sub
jmp
ret
fbld
jo
je
out
notb
sbb
enter
call
popf
push
lret
jge
in
into
fnstenv
addr16
xchg
addl
xor
subl
sbb
jno
jge
test
fsubs
inc
sarb
lea
push
or
sub
sbb
lret
mov
out
cld
cmp
negb
inc
lods
lock
movsl
adc
or
int3
shl
sbb
mov
sarl
fstl
bound
sbb
xchg
sbb
shlb
fwait
inc
inc
cwtl
dec
shl
mov
push
dec
mov
sti
jl
cmp
jnp
and
mov
mov
sub
xchg
arpl
cmpsb
fsubrp
lahf
mov
icebp
ja
or
jae
vphsubdq
xor
dec
adc
xor
sub
or
or
aam
push
data16
cmp
push
sbb
mov
cmpsl
fadds
outsl
cmp
jb
cmp
cmp
shl
shrb
inc
vcvtpd2ps
in
mov
mov
adc
add
subl
jno
push
mov
sub
sub
sub
les
mov
std
xor
je
rorl
pop
sub
mov
inc
xor
jl
push
mov
lea
push
lock
or
mov
add
xchg
mov
and
mov
hlt
sbb
mov
cmp
aaa
packuswb
mov
push
xchg
dec
mov
dec
enter
add
jne,pn
hlt
lods
mov
pop
adc
sti
in
xor
out
jecxz
aam
mov
lods
mov
xchg
call
cld
pushf
lea
jne
test
bswap
not
mov
not
sub
xor
neg
shr
bsr
mov
cmp
pusha
call
push
push
xor
add
or
cltd
scas
fwait
jo
pushf
sub
add
add
pop
mov
cs
shrb
and
mov
test
jg
inc
pop
ds
xchg
xor
stos
jae
int
mov
test
add
pusha
sub
sbb
sbb
addb
inc
fbstp
and
popa
icebp
add
mov
jp
push
jb
jp
imul
sbb
lods
outsb
gs
jle
loop
pusha
aam
iret
push
cmp
loopne
push
aas
scas
stos
xor
add
test
inc
mov
mov
rcll
and
fcmovb
inc
mov
bsr
mov
pushf
push
mov
add
cld
cmp
jae
sti
popl
aam
dec
sub
ja
jmp
cmp
add
and
mov
fdivrs
out
insl
fnstsw
hlt
xor
std
xor
imul
mov
scas
push
pushf
jmp
js
cmc
add
jmp
rcl
sub
movzbw
lea
lea
call
cmp
jmp
jmp
out
pop
xchg
xor
add
btc
and
sbb
adc
sti
or
frstor
sahf
dec
imul
fdivl
nop
mov
repnz
xchg
scas
inc
dec
add
bound
adc
pushf
test
mov
xor
and
test
dec
lahf
fucomp
aaa
sbb
add
iret
sbb
xorl
jg
ret
mov
scas
cli
scas
xor
push
pop
cwtl
testl
idiv
sbb
adc
xchg
aad
aas
jl
das
sub
aas
inc
jle
in
aaa
sbb
pop
sbb
mov
xchg
add
push
fcoms
dec
ret
cmp
and
push
adc
pop
out
jge
data16
add
insl
pop
xor
loopne
pop
mov
xor
movsl
add
aam
fs
clc
xlat
gs
ret
cli
imul
icebp
inc
adc
fisttpll
inc
icebp
loopne
test
jl
sub
scas
mov
inc
ds
fdivrs
arpl
mov
cld
mov
cmp
mov
leave
dec
insl
xchg
std
cmp
sbb
icebp
test
push
nop
and
das
sub
cmc
pushf
stos
inc
jb
daa
adc
dec
ss
pop
clc
into
lds
inc
adcb
dec
sbb
popf
mov
inc
loopne
fldcw
and
scas
out
xchg
inc
and
stc
fucom
lret
mov
push
andl
push
repnz
fidivl
pop
test
xchg
arpl
xchg
cld
pop
add
fisubrl
aad
mov
movb
js
adc
ret
and
mov
rclb
std
nop
movb
mov
pop
das
xor
movsl
xchg
fs
mov
pushf
lea
jne
lea
movb
sets
movsbw
push
mov
jmp
mov
add
fisubrs
and
dec
mov
dec
out
xchg
xlat
pusha
pop
mov
ret
lret
not
xor
pop
fildll
add
cmpsl
mov
insl
pushf
mov
cltd
push
stc
xor
push
xchg
xor
jbe
lcall
lods
cmpb
cmp
sub
test
adc
cmpsb
sbb
sbb
loop
data16
int3
out
push
cli
int
fdivl
loopne
stos
stos
nop
idivl
xor
cld
ljmp
adc
cmp
addr16
fidivs
in
enter
add
nop
aas
sti
shl
xchg
add
pop
rclb
mov
inc
add
pop
and
rorb
adc
lea
mov
mov
mov
inc
xlat
repnz
repnz
sub
xchg
mov
mov
dec
lds
cld
dec
iret
sarb
jmp
fcomps
dec
add
leave
in
pop
cmc
cltd
pop
shlb
movsl
int3
jmp
clc
dec
mov
adc
pusha
pushf
pusha
lea
push
pop
push
mov
pushf
movb
lea
ja
push
pusha
movb
jmp
movl
aaa
int3
jg
jmp
xor
mov
xchg
push
push
or
jg
inc
mov
shl
or
pop
outsb
mov
pop
push
dec
and
addb
dec
lret
gs
push
ljmp
test
push
cmp
shlb
sub
data16
scas
test
jle
movsb
les
adc
insl
shrl
ljmp
add
push
test
and
icebp
or
decb
mov
jns
cmp
aam
in
arpl
add
jne
pop
test
cmpsb
add
xchg
sub
sub
xchg
push
sub
cmc
adc
jecxz
inc
ja
inc
and
cmp
lahf
jg
je
mov
fs
es
loop
mov
sbb
into
mov
mov
shrl
jle
mov
jbe
mov
cmp
sarl
daa
out
mov
ss
test
cltd
adcb
pushf
pop
jae
not
mov
dec
jbe
cmp
xchg
enter
xchg
push
test
sub
add
sbb
push
aam
jns
popf
dec
mov
mov
cmp
mov
fmuls
cltd
outsl
or
les
xchg
or
sti
test
push
xchg
inc
cmp
xchg
jb
jl
pushf
cmp
in
and
xlat
push
pop
mov
js
cmp
outsl
das
hlt
pop
pusha
cli
aaa
xlat
loop
das
sbb
inc
push
jb
lret
xor
add
aaa
addr16
cmp
std
stos
jbe
push
mov
add
sub
outsl
mov
movsl
sub
arpl
mov
imul
cmc
xchg
mov
dec
jle
out
cs
pop
out
sub
sbb
adc
push
iret
int3
lret
imul
inc
popa
pushf
or
xchg
mov
jl
mov
jb
out
sbb
xchg
nop
or
sbb
cmp
inc
mov
fs
cmp
or
push
ljmp
test
inc
ss
ss
or
mov
add
cmp
scas
test
call
data16
jbe
stos
mov
push
lds
cli
push
xor
add
ret
push
adc
out
lcall
add
sub
fbstp
push
xor
pushf
jg
shlb
ss
outsb
dec
jns
xor
imul
out
lods
lods
insb
add
adc
in
mov
je
iret
stos
sub
lods
cmp
and
imul
sub
fisubrs
fsubl
movsl
cwtl
psrlw
add
sub
iret
out
jb
mov
dec
jae
repz
mov
add
lahf
call
sub
andb
lcall
adc
sub
sub
repnz
jge
insb
int
pop
clc
cmp
mov
leave
jg
pushf
hlt
dec
xchg
fs
icebp
inc
jns
xchg
out
andl
decl
mov
cmpsl
mov
cmp
scas
dec
ret
inc
adc
cwtl
inc
cmp
int
lds
cmp
push
pusha
mov
lea
jmp
mov
pusha
pushf
push
pushf
pushl
ret
xor
loope
sub
xchg
mov
add
pop
cmpsl
sbb
ljmp
daa
fstpl
adc
and
inc
jle
mov
cmp
outsl
cli
filds
aas
scas
inc
lret
mov
adc
adc
sub
xchg
xor
mov
xor
es
mov
push
pushf
xchg
cmpsb
negl
cmpsb
stos
cmp
xchg
xor
add
push
scas
popf
iret
mov
push
pop
repnz
dec
cmpsb
sbb
outsb
test
sub
pop
ret
lds
push
jae
xchg
mov
pop
pop
pop
sub
add
sahf
stos
push
loope
jae
das
andb
jl
pop
add
sbb
fadd
repz
jp
mov
xor
imul
sbb
test
aad
test
lock
dec
into
es
or
add
int3
mov
ss
fmull
fstpt
sbb
dec
and
call
in
mov
fs
inc
adc
in
jle
testb
gs
inc
cmp
or
mov
mov
pushf
mov
movl
pushl
ret
dec
lea
adc
sub
movsb
inc
js
jl
lods
fnstenv
loopne
in
sub
fs
out
add
mov
push
ret
and
stos
or
outsl
sar
push
jno
mov
xor
xchg
mov
or
enter
imul
add
sbb
insl
cmp
es
dec
sub
mov
inc
rcll
mov
dec
adc
dec
cmp
xor
sub
push
iret
sbb
cmc
cmpsl
inc
jne
cld
mov
push
mov
jecxz
dec
and
jbe
andl
aad
movsl
or
fnsave
in
add
fldl
test
pushf
inc
ds
leave
stos
mov
lahf
mov
pushf
adc
fisttpl
cmp
aas
lods
sahf
or
mov
scas
push
movb
push
mov
paddusw
mov
add
lea
ja
pusha
lea
jb
bt
bt
call
setno
call
jp
ja
sub
and
negb
loop
mov
mov
add
mov
scas
push
sub
and
jb
loop
sbb
lahf
dec
adc
imul
adc
jnp
mov
mov
outsl
adc
mov
loopne
loopne
addr16
mov
sub
insl
push
iret
int3
mov
dec
fsub
jp
adc
fdivr
sahf
bound
add
mov
xchg
in
mov
jmp
mov
sbb
or
loopne
dec
pop
fwait
mov
cmp
stos
inc
aad
sub
and
scas
inc
sub
adc
loopne
loop
dec
shlb
das
mov
jmp
jmp
inc
fs
fwait
push
or
enter
mov
xor
cmpb
xor
subl
xchg
in
dec
mov
divps
scas
cld
out
shl
loopne
test
cmp
xor
js
test
scas
dec
in
cmp
fs
add
notl
arpl
mov
jbe
pop
ljmp
add
cld
sarl
add
inc
lods
mov
xchg
mov
cld
mov
stos
std
cmp
push
and
roll
jae
addl
mov
and
mov
sahf
loop
jmp
and
std
dec
ljmp
push
xchg
mov
jge
dec
test
xchg
push
shll
ret
mov
lods
mov
in
cmpsl
popf
sbb
loope
lcall
mov
lock
scas
idivl
or
cmp
loop
jae
sub
cmpsl
mov
mov
sbb
push
scas
jl
xchg
mov
pop
and
sbb
jo
cmp
mov
pop
jbe
popf
jb
jns
cmc
fidivrl
sbb
sbb
popa
test
pushf
xchg
adc
jle
or
sahf
xor
mov
and
add
xor
or
dec
in
push
aam
cmpsb
hlt
ficoml
push
bound
and
mov
inc
inc
stc
jg
arpl
mov
ss
sbb
in
sub
lahf
mov
std
push
jne
dec
imulb
mov
add
test
mov
mov
xchg
test
xor
testl
cmovs
inc
xor
push
in
test
enter
jo
push
xchg
test
enter
push
les
pop
mov
neg
cmp
sbb
rcll
mov
in
call
inc
mov
push
orb
sub
shlb
pop
out
pop
ja
or
mov
iret
push
mov
jle
push
in
loopne
fsubrs
pushl
adc
push
cwtl
std
movsl
inc
int
adc
pusha
mov
add
mov
sub
push
jl
stc
fwait
dec
sbb
out
data16
lret
sbb
lds
or
xchg
mov
mov
push
out
pop
xchg
cmc
call
mov
fistpl
repnz
ficomps
out
aaa
sbb
mov
js
fmulp
jl
or
cld
aas
pusha
clc
sub
movw
pushf
stc
clc
rol
cmp
pushf
test
neg
cmc
jmp
inc
push
and
add
jl
sub
outsl
adc
mov
push
ret
scas
fcoms
cmpb
and
pop
xchg
mov
xchg
loope
test
sbb
and
or
sbb
cmpsb
adc
lods
fistl
aas
daa
mov
enter
nop
and
lock
test
loope
lcall
mov
repnz
sahf
insl
add
lret
gs
lcall
lahf
daa
xor
pop
sahf
fnstenv
pusha
xchg
lea
seta
jmp
pushf
jmp
clc
in
inc
and
add
out
cmp
cvtps2pi
in
lret
adc
adc
popa
sbb
cmp
add
je
ss
sbb
clc
dec
jecxz
shll
pop
mov
sbb
or
test
cmpsl
pop
andb
out
test
or
lods
add
or
lret
dec
sub
xchg
lret
cld
sahf
push
out
xchg
jne
push
data16
dec
mov
dec
mov
mov
cmp
lods
in
inc
fs
imul
xor
lcall
ljmp
jb
and
test
call
js
jns
sub
cmp
sbb
cmp
xchg
mov
scas
cld
mov
push
push
subb
push
jle
and
es
adc
jae
xchg
ret
xchg
lcall
aaa
icebp
cs
inc
out
dec
es
in
movsb
mov
and
hlt
test
aas
leave
inc
out
inc
lea
lods
pop
in
iret
rcrb
fidivrl
mov
or
out
aas
fidivrs
mov
cwtl
adc
xchg
inc
loopne
or
mov
int3
jg
aad
fistpll
xchg
subl
test
insb
dec
xchg
mov
xchg
fsubr
int
xchg
mov
mov
rorb
adc
mov
push
aas
sub
ror
loope
rcl
nop
pop
inc
iret
and
rcrb
and
xchg
cli
jecxz
imul
sbb
leave
cmp
mov
inc
sub
cli
mov
lret
int3
insl
mov
inc
xchg
push
inc
mov
lcall
jl
push
and
jo
imul
outsl
xor
jae
in
cltd
incl
insb
jle
dec
int
cld
hlt
dec
cli
and
mov
inc
cwtl
movsl
cmp
dec
cmp
outsl
xchg
imul
xchg
inc
iret
scas
and
sub
inc
aad
adc
mov
mov
push
jp
push
icebp
inc
popa
subb
testb
lods
daa
pop
sub
xor
xchg
sub
fildll
dec
fbstp
mov
mov
pop
mov
mov
mov
pop
aad
sub
sar
out
xor
mov
xlat
and
mov
ficoml
mov
push
jmp
sub
dec
ss
cmpsl
cmp
sbb
cltd
lds
movsb
icebp
jl
add
jecxz
icebp
iret
std
or
scas
jmp
lods
dec
sub
jnp
mov
addb
fistpll
insb
push
roll
jb
push
jmp
xchg
repnz
sbb
and
inc
in
cs
xchg
inc
aas
pop
sub
daa
dec
mov
es
jno
insl
sbb
out
call
iret
out
xchg
imul
mov
mov
sarb
sub
fldcw
sub
test
jo
or
inc
fs
push
scas
xchg
mov
cs
xchg
jnp
sub
xor
mov
mov
push
mov
mov
pop
xor
loope
lock
xchg
xor
xor
pop
out
mov
sub
push
cmpsl
lea
data16
lea
jae
stc
test
pusha
cmp
sub
pushf
call
int3
lcall
lods
pop
sub
ret
ss
call
rcrl
popa
mov
inc
mov
and
data16
mov
pop
dec
push
test
out
jbe
adc
rorb
push
jb
jecxz
js
pop
and
or
jl
lea
std
rcl
sbb
sub
lods
dec
adc
sbb
dec
lods
or
fidivl
icebp
inc
test
ret
negb
test
movsl
sub
insl
jg
cmp
dec
shrl
add
arpl
mov
outsl
pop
notb
test
sub
mov
lret
out
mov
and
fistps
adc
pop
mov
cmpl
imul
inc
lahf
hlt
call
mov
sub
test
and
pushf
sbb
test
mov
nop
ja
sbb
in
clc
movsb
out
mov
sti
dec
int3
divb
add
lea
addr16
jl
cmp
mov
sub
inc
lods
sbb
mov
cmp
ljmp
outsl
aaa
dec
pop
idivl
dec
xlat
cmc
push
xor
insl
mov
jbe
mov
bound
sub
cmp
test
xor
jnp
ja
in
adc
cmp
and
cmp
sub
aas
lea
and
or
pop
jecxz
add
dec
ret
loope
xor
sbb
cli
push
jmp
xor
sarl
stos
xchg
push
mov
jno
cmp
scas
mov
ret
nop
insb
inc
mov
orb
movl
push
ja
shl
pop
les
push
mov
mov
and
or
stos
insl
and
pop
add
mov
add
push
fwait
push
outsb
in
mov
mov
push
jns
mov
dec
in
sub
cmp
bound
or
add
ljmp
jecxz
das
mov
mov
jnp
gs
popa
adc
fmulp
andl
fmul
push
stc
aad
je
popl
add
cmc
rcrb
jl
pop
shl
add
imul
hlt
pop
decl
lret
dec
adc
lret
out
aaa
lock
dec
ja
inc
es
xchg
cwtl
pop
adc
leave
mov
mov
repnz
lahf
arpl
shl
clc
jns
xchg
cmp
push
mov
lea
jb
clc
cmc
clc
stc
cmp
push
jmp
add
mov
repnz
daa
dec
popa
xorl
aam
inc
fidivrs
mov
sahf
and
bound
mov
inc
lcall
dec
shll
xchg
lds
pop
cmp
imul
out
jle
and
scas
pop
mov
test
pop
jnp
mov
loop
out
xor
lahf
bound
into
fwait
int
rclb
insb
or
jl
ja
inc
inc
out
fidivs
clc
mov
fsts
iret
mov
lea
ja
mov
cmc
sub
dec
cmc
bt
add
ror
rcr
mov
sar
dec
mov
jmp
mov
sbb
or
add
dec
call
sub
or
hlt
inc
pop
jnp
inc
mov
mov
sub
stc
push
dec
add
mov
loopne
inc
add
cmovns
mov
pop
test
mov
jecxz
inc
sub
lea
cmc
loope
add
andb
jno
jne
jae
pop
out
js
mov
dec
outsl
mov
sub
enter
addr16
xlat
jns
ja
sbb
add
sahf
test
sub
sbb
add
pop
sub
mov
dec
mov
loopne
popf
lret
push
jmp
push
fsts
add
add
insb
nop
pop
pop
xchg
aad
and
out
dec
gs
dec
jns
repnz
shlb
push
sub
mov
in
lcall
out
push
insl
mov
clc
mov
mov
mov
pop
jle
call
orl
cld
cmp
subl
sub
mov
popa
inc
mov
mov
jecxz
push
jns
sarl
mov
adcb
rclb
fcom
ror
adc
lods
sub
js
jbe
jg
push
add
xchg
sar
dec
push
xchg
out
push
mov
enter
js
movsb
dec
or
or
ss
es
pusha
out
add
lret
xchg
popf
das
sub
lods
cmp
movhps
ss
repz
mov
mov
fdivl
loop
sbb
or
shrb
out
push
pushf
mov
pusha
pushf
pusha
pushl
ret
lcall
shl
dec
cmp
mov
sahf
stos
sbb
shl
adc
dec
out
ljmp
inc
sarl
push
cmpl
xor
loopne
jge
pop
mov
fisubrs
cmp
je
push
mov
dec
push
int
adc
dec
inc
and
pop
fs
xor
sahf
sbb
daa
outsb
mov
sbb
push
xchg
cmpb
lods
ret
jg
jb
imul
int3
and
arpl
mov
call
jo
rcrl
sub
cwtl
mov
sub
ffree
xor
xchg
cli
sbb
insl
ljmp
cmp
xor
arpl
jno
jae
inc
sub
repnz
punpckhbw
jae
xchg
jecxz
into
lock
adc
xor
cmp
aad
xorb
push
sub
fs
jb
pusha
clc
cmp
jmp
loopne
lds
sub
push
arpl
push
mov
mov
jg
sahf
insb
mov
xchg
adc
dec
xchg
cmp
inc
mov
das
mov
adc
xor
and
inc
aas
aam
jl
je
test
push
or
mov
push
imul
mov
dec
fmul
xor
lcall
cld
xchg
cmp
pop
xor
pop
jbe
arpl
mov
xchg
out
scas
push
and
mov
xor
inc
dec
stos
aad
sub
add
adcb
shrl
cld
popl
pushf
lea
mov
call
call
pushf
cmp
mov
push
jmp
add
inc
gs
push
popa
bound
jmp
lea
jne
movzbl
lahf
movb
bswap
movzbl
push
call
lea
call
jmp
jmp
cs
sub
xor
daa
int3
arpl
call
mov
xchg
cli
fldl
mov
and
sbbb
sarb
sub
rclb
je
imul
mov
iret
jno
out
pop
pusha
mov
iret
ljmp
xlat
mov
dec
aad
jp
and
leave
or
xchg
cmpsb
pop
sub
push
or
adc
iret
hlt
aad
nop
mov
mov
mov
push
in
lcall
cld
sbb
sub
xchg
mov
hlt
inc
movsl
pusha
test
jns
push
add
sbb
fs
es
pop
lahf
mov
cmp
adc
into
mov
sbb
mov
ret
js,pn
ret
rorb
nop
in
mov
fnstsw
fisubl
fisubrs
insb
cmp
cld
shll
cmp
shlb
scas
lret
rcrl
mov
iret
bound
fidivrl
inc
mov
xchg
pop
imul
loope
in
lods
mov
loopne
es
test
sbb
je
jnp
arpl
out
xor
sub
inc
jmp
int
out
ds
movsb
inc
or
fsubrs
mov
or
js
mov
push
sub
scas
popf
mov
jmp
push
xor
push
xchg
inc
and
inc
sub
stos
dec
pop
push
mov
inc
add
xchg
out
inc
pop
mov
sbb
movsb
push
add
data16
jno
lcall
sub
call
mov
icebp
mov
sbbb
push
jl
aas
cmp
xchg
inc
es
test
cwtl
push
add
adc
incb
lods
sub
shll
mov
jno
out
outsb
inc
add
rcrb
and
in
or
mov
and
adc
pop
cmpsb
imul
fs
call
call
sbb
add
cwtl
cmp
inc
xor
mov
xor
in
in
fisubs
or
and
sarl
ret
lahf
add
daa
sbbb
or
sbbl
test
pop
test
aam
and
ljmp
fs
inc
mov
ret
dec
sub
mov
addr16
sub
jb
stc
and
stos
imul
jle
out
lret
fidivl
rcll
adc
dec
mov
dec
hlt
xchg
out
into
repz
test
cmp
sbb
rorl
cmp
repnz
xor
pop
jg
inc
xchg
cld
mov
xor
jmp
and
stc
and
vcomiss
fwait
mov
repnz
inc
mov
push
push
lret
lock
push
inc
lret
fdivrs
data16
pop
push
sbb
jg
aaa
lea
inc
dec
push
pop
mov
mov
mov
push
pop
enter
loopne
adc
in
mov
cmpsw
sti
hlt
pop
cwtl
test
sbbl
out
cld
dec
mov
testl
or
out
into
push
sbb
les
pop
sub
movsb
out
mov
in
rorb
mov
sbb
mov
xor
sbb
mov
mov
rol
push
push
testb
test
sub
sti
mov
jns
add
cmp
mov
push
idiv
lds
mov
mov
shll
sbb
dec
pop
shlb
mov
fiadds
testb
mov
cmp
in
shll
or
mov
sarl
sbb
mov
mov
add
dec
lods
mov
cmp
aaa
scas
xchg
aad
xor
pop
push
inc
mov
fisubrs
ret
mov
out
sbb
aam
mov
mov
lret
mov
fwait
jbe
int3
jle
lret
push
aad
leave
xlat
mov
enter
loop
into
aas
mov
iret
stc
lds
push
mov
jge
lds
mov
xor
mov
rcr
mov
jmp
adc
shl
mov
imul
int3
mov
xlat
sar
int
pushf
out
out
cmp
pop
lcall
ret
sbb
dec
ret
je
mov
ja
fidivrs
aad
mov
jl
inc
cmp
push
xlat
icebp
sbb
inc
repnz
aas
sti
cmpsb
mov
scas
fdivrl
aaa
xchg
sbb
mov
pop
ret
roll
cld
adcl
mov
insl
inc
fcmovnb
mov
repz
cmp
sub
ss
xchg
xchg
mov
xor
addr16
sahf
mov
les
jbe
lahf
mov
ss
sub
call
ja
jl
aas
mov
loop
fstpt
cs
adc
mov
pusha
iret
in
aam
repnz
mov
jne
outsl
push
jne
incb
ljmp
in
fwait
push
movsl
mov
mov
sub
loop
xchg
mov
mov
repz
fidivl
cmpb
jp
pop
loop
sub
in
jb
fidivrs
mov
inc
add
jle
bound
jle
ds
mov
ret
ret
dec
mov
xchg
ret
ret
add
mov
dec
push
fistpll
ret
mov
es
out
leave
xlat
mov
cmc
stos
mov
xchg
xchg
enter
adc
add
pop
ss
out
leave
fidivrl
mov
rcr
ss
mov
mov
sahf
push
adc
fnstsw
lcall
sub
popf
int
xlat
rcrb
ljmp
arpl
dec
mov
out
mov
pop
jb
inc
int3
inc
cs
push
xchg
ret
lret
fst
sahf
aaa
enter
mov
sbb
add
mov
ret
out
es
ret
jecxz
cmpsb
push
and
sbb
pop
mov
les
pop
iret
jb
ja
aaa
adc
bound
xor
aaa
xor
dec
cmp
lock
cs
out
cmp
mov
inc
xor
fcmove
div
jle
in
sub
lcall
out
mov
cld
dec
ds
push
add
sarb
jbe
cmp
cmp
cld
out
inc
cmp
aad
xchg
add
pop
ficomps
push
add
addr16
fstp
dec
xchg
jle
out
out
jp
push
scas
xchg
push
outsb
push
loope
pop
add
pop
pushf
add
push
loop
imul
sarb
sbb
sub
adc
testl
mov
fdivrs
decb
ds
or
jmp
ds
ss
xchg
neg
repnz
lret
mov
inc
call
es
cmc
fyl2xp1
pop
adc
push
mov
clc
cmp
pop
mov
ss
jle
and
aam
push
mov
je
cli
sbb
and
and
or
or
xchg
testl
cld
in
into
cli
push
mov
fmulp
scas
xchg
fdivrs
scas
fadd
out
cmp
in
dec
add
out
dec
mov
jmp
daa
push
ret
rcl
mov
jle
cmp
sub
mov
insb
incb
fcmovbe
add
push
sub
aam
push
mov
mov
or
movsb
cmp
xchg
rcl
mov
jl
jnp
stos
mov
pop
bound
sarb
mov
jmp
xor
stos
xor
mov
mov
mov
jge
nop
push
cld
lcall
ret
cmp
dec
and
insl
xlat
xchg
mov
cmp
mov
mov
adc
dec
ja
jp
sub
lea
cmc
mov
mov
mull
fisttpll
data16
ficoms
lcall
scas
in
call
or
fstpt
sti
enter
std
mov
mov
cld
in
data16
ror
inc
cli
mov
lods
dec
xchg
mov
notl
aaa
lret
aad
clc
in
outsb
scas
stc
into
mov
lcall
mov
std
das
add
mov
mov
jbe
repnz
mov
sar
sub
nop
aaa
and
enter
adc
push
lds
pop
push
dec
pop
ret
sub
daa
mov
jnp
iret
test
and
mov
mov
mov
mov
fmulp
lds
mov
add
notl
cli
sub
mov
dec
dec
test
pop
dec
cld
or
fcmovnb
jl
dec
mov
cmpsl
lahf
sbb
idivl
jnp
xchg
idivb
jge
clc
pop
xchg
sbb
js
jnp
mov
mov
mov
cli
mov
dec
ljmp
adc
mov
jbe
std
test
stos
and
push
xchg
cli
xor
mov
shrb
mov
pop
divb
mov
sarl
rcl
cmpsb
mov
fstl
push
mov
mov
sti
adc
cmc
filds
jecxz
xor
xor
xor
mov
cli
or
clc
repnz
sti
out
mov
jns
sahf
sbb
and
mov
add
outsb
and
fcom
pop
ds
sbb
ficomps
ret
jl
test
movsb
rcr
sarb
jae
push
pop
out
inc
pop
mov
testb
into
mov
and
fisttpll
insb
or
pop
sti
aas
les
mov
dec
clc
lret
sbb
inc
jne
stc
and
ret
sbb
add
in
ret
cmpsl
sti
scas
jae
mov
test
push
out
jle
jle
jecxz
pusha
mov
test
inc
mov
add
ficompl
sbb
daa
push
loop
mov
dec
mov
inc
rclb
roll
cmc
xchg
adc
fistps
negb
lds
ljmp
push
jle
lock
pusha
not
ret
or
mov
std
jmp
jg
loopne
add
mov
mov
inc
mov
aaa
sub
mov
movsl
mov
sahf
nop
sub
mov
into
jg
jnp
int3
test
hlt
clc
lret
cmp
mov
rcll
mov
sub
test
enter
lcall
in
sub
inc
into
mov
out
xchg
fldl2e
or
push
jmp
sub
test
ljmp
add
shr
sub
cmp
repz
ret
testb
out
movl
jmp
std
stc
jno
pop
shll
push
or
out
mov
push
push
jg
mov
ret
adc
xor
ds
mov
inc
sub
loopne
outsb
cwtl
out
rcl
inc
mov
inc
mov
imul
mov
pushf
pop
dec
stc
jecxz
shll
mov
adc
ds
fs
out
scas
sti
jge
inc
mov
inc
dec
inc
add
or
mov
dec
push
ret
mov
jo
xchg
shlb
lret
jae
mov
mov
push
rclb
mov
pop
pop
jmp
lods
push
call
in
hlt
into
mov
push
testl
jecxz
pop
mov
mov
cmp
pop
mov
dec
mov
mov
ret
js
jle
lret
ror
jb
sahf
adc
pop
dec
ret
mov
out
sub
sbb
mov
push
xor
pusha
cmp
or
mov
sbb
mov
shlb
push
inc
jae
ss
pop
scas
ljmp
testb
imul
popf
cmp
xlat
les
cwtl
mov
pop
stos
jge,pt
jne
fidivs
mov
lcall
mov
mov
sarb
xchg
dec
stos
daa
and
sub
aas
outsl
add
cmp
cli
adc
ret
push
jbe
pop
enter
icebp
lock
out
cltd
ljmp
shlb
adcl
mov
add
fdiv
push
mov
and
fwait
clc
scas
gs
sysexit
or
mov
dec
cmpb
dec
mov
mov
cmp
mov
loop
fcoml
rol
stos
dec
ss
cmp
aas
pop
pop
inc
mov
cwtl
mov
mov
mov
cli
scas
mov
pop
xchg
or
cmpsb
stos
mov
cmc
ret
ja
pop
xor
inc
add
jo
aam
stc
jb
mov
pushf
jle
inc
int3
mov
bound
cmc
adc
mov
fidivrs
dec
mov
sbb
fsubrl
lcall
mov
inc
aaa
out
fidivrl
adc
cli
dec
lret
pop
sub
aam
mulb
dec
xchg
cwtl
repz
aas
sub
test
in
fsubrl
push
mov
shr
mov
stos
push
cld
cli
mov
sbb
add
jecxz
push
adc
jle
icebp
mov
cmp
xor
or
adc
movb
mov
fdivr
cmp
leave
mov
mov
mov
decb
imul
cmp
sub
xchg
stc
std
lret
jg
mov
ja
mov
mov
cmp
mov
or
push
das
push
bnd
jb
xchg
popf
mov
pop
xor
and
sub
scas
mov
out
dec
xchg
rorb
in
dec
cwtl
outsb
dec
lods
inc
shl
jp
les
popf
les
inc
fisubl
test
test
test
popa
in
jecxz
repnz
mov
imul
add
mov
xchg
add
aaa
cmc
cmp
dec
mov
xchg
cmpsb
jae
sbb
das
mov
pop
add
xchg
mov
add
inc
push
outsb
ret
rcl
pop
pop
idivb
push
mov
xor
mov
loopne
pop
mov
mov
aam
and
jbe
pop
xchg
mov
mov
rcl
sub
mov
pop
cli
mov
xchg
js
fsubp
mov
adc
rcrl
dec
sbb
and
inc
test
negb
inc
xor
adc
pop
pop
mov
push
sahf
pop
ja
ds
push
inc
js
shlb
daa
inc
jbe
cmp
push
repnz
push
rcrb
inc
mov
lret
push
pop
adcb
pushf
cmpsl
mov
dec
sbb
int
cmp
cld
xchg
test
jmp
mov
das
ret
sahf
or
cmp
ret
jae
flds
out
sub
rcrl
mov
aaa
cli
push
xor
mov
xchg
pop
insl
add
stc
push
lds
das
mov
xchg
mov
or
jo
xchg
mov
aas
mov
mov
mov
fistpll
in
fdivs
push
inc
and
mov
scas
sahf
lahf
fldcw
pop
mov
loope
nop
loop
add
fisttpl
push
dec
jns
mov
jbe
mov
sbb
xchg
add
int
pop
add
xchg
int3
aaa
xchg
mov
dec
es
je
inc
ret
and
inc
imul
fisubl
stc
mov
sti
into
scas
loope
jp
xchg
and
cmp
mov
cmp
ret
cmp
loope
clc
hlt
xchg
xor
pop
jg
mov
inc
push
ds
fdivrl
cwtl
bound
push
pop
fdivrs
pushfw
or
fisubs
adc
hlt
and
fisubrs
mov
out
mov
sub
int3
sub
fadds
sub
das
outsl
das
fwait
das
dec
mov
scas
push
push
mov
jno
insb
adc
adc
mov
add
ss
into
test
pop
out
rcr
mov
pop
test
cmp
aas
in
xchg
jae
sbb
sbb
cwtl
popa
mov
xor
mov
loop
les
mov
add
cmc
mov
pop
mov
js
stos
dec
xchg
cwtl
cltd
mov
add
loope
push
jbe
adc
jns
mov
pop
idivb
shr
dec
sbb
hlt
or
mov
push
jbe
xchg
loope
push
clc
inc
aaa
jecxz
or
sti
jp
iret
mov
and
mov
mov
mov
clc
fwait
rclb
mov
xchg
xchg
adcb
arpl
leave
aam
add
jp
dec
push
ja
mov
into
inc
mov
outsb
cmp
lods
jmp
int3
sbb
mov
into
leave
and
cltd
xchg
mov
lcall
push
mov
shr
rcl
insl
pop
inc
ror
scas
rcl
xlat
ss
rcr
test
ljmp
test
leave
push
sahf
out
xor
and
dec
loopne
inc
sahf
push
js
ss
ret
pop
rcll
xchg
ljmp
out
sahf
inc
dec
cs
sahf
adc
mov
add
xchg
dec
mov
into
shlb
jl
enter
add
orb
dec
cmp
xor
inc
xchg
push
sub
out
xlat
aad
pop
mov
sbb
cmp
ds
stos
cmp
scas
outsb
ret
enter
fstpt
fucomp
jl
fld
xchg
adc
mov
cmp
iret
dec
mov
dec
int
mov
jg
ret
jnp
sbb
jecxz
mov
loop
mov
dec
pop
pop
xorl
pop
sbb
mov
ds
shrb
mov
idivl
stc
mov
in
loop
pmulhuw
ss
ds
sub
faddp
testb
adc
test
xor
pop
popa
ficompl
les
inc
xlat
rorb
mov
loop
sub
es
and
mov
lret
and
or
ja
push
xlat
and
sbb
cli
mov
call
push
cmp
mov
mov
ret
sbb
and
push
cmpsb
or
pop
int
mov
sarb
rcrl
inc
shl
lods
ret
pop
lret
mov
mov
int3
into
dec
mov
ret
cli
arpl
out
add
rcr
insb
loop
sbb
cmc
addl
sub
inc
pop
dec
adc
pushf
scas
lret
repz
pop
lret
dec
shll
pushf
out
mov
enter
sub
add
mov
ljmp
les
ds
iret
loop
idivb
and
insl
test
xchg
push
orl
enter
fldcw
add
add
mov
jl
mov
lahf
mov
jmp
mov
add
std
cmp
add
pop
pop
aam
mov
push
or
lahf
cmp
lcall
mov
lods
mov
xchg
ror
mov
sahf
xchg
cmp
mov
xchg
mov
xchg
mov
jns
ret
push
mov
int
movsl
push
xlat
mov
std
dec
call
ljmp
shrb
andl
push
pop
les
pop
mov
mov
rolb
cmpb
js
test
divl
aas
pop
mov
mov
cmpsb
mov
xchg
mov
push
xchg
enter
cmp
mov
xchg
mov
loopne
inc
adc
xchg
outsb
cmpsl
sahf
mov
mov
jb
push
mov
jecxz
dec
pusha
push
movsb
lret
sbb
push
jmp
jnp
inc
cwtl
mov
cwtl
rcr
jmp
jp
bound
movl
xlat
les
repnz
ret
add
xlat
mov
aad
mov
ss
decl
xor
sbb
cwtl
into
xlat
mov
in
jp
aad
hlt
sbb
xor
es
mov
movsb
jmp
hlt
mov
mov
mov
mov
inc
jmp
mov
mov
bound
pop
jp
adc
mov
mov
xor
sbb
pop
roll
fcom
out
push
cmc
in
hlt
mov
hlt
sub
test
lock
cmp
cwtl
mov
fidivs
pop
ret
sub
les
inc
hlt
repnz
cmp
cmp
ds
into
inc
or
or
mov
stos
les
mov
pop
ss
jmp
rorb
jno
mov
xchg
xchg
cmpsb
mov
das
ret
fnstcw
mov
les
cmp
lds
xchg
loopne
ret
cli
rol
or
popf
cli
mov
data16
shll
fisttpll
lahf
cli
movb
lret
add
mov
loopne
in
lret
add
pop
lret
inc
cmp
inc
loop
in
cmp
mov
stc
mov
mov
stc
in
mov
mov
das
mov
jo
enter
or
subb
leave
pushf
cwtl
fisubs
iret
stos
cmpsl
push
lret
je
push
iret
adc
iret
ret
leave
pop
cwtl
add
push
movsl
shlb
ljmp
mov
jmp
lret
ficomps
push
cli
add
aaa
into
mov
enter
xor
cli
leave
jle
mov
lret
cmp
int3
cmp
or
iret
stc
lret
hlt
jmp
hlt
repz
stc
fdivp
pop
fcom
stc
loopne
xor
hlt
inc
fdivrs
mov
mov
scas
aaa
aas
jmp
rcr
or
stc
int
cmp
hlt
push
fsubr
stc
iret
hlt
fdivr
stc
sarb
roll
sarb
or
inc
roll
aam
je
stc
cwtl
enter
mov
jecxz
cwtl
fmuls
loop
inc
xlat
enter
cmp
js
mov
add
push
mov
insl
hlt
mov
out
lret
mov
nop
sub
adc
test
xchg
out
sbb
cli
mov
xor
in
mov
into
rclb
mov
mov
inc
ljmp
inc
mov
mov
stc
ret
xchg
inc
mov
leave
les
push
add
hlt
sbbl
inc
mov
enter
sbb
add
shrb
and
xchg
das
stc
lods
nop
sub
inc
clc
mov
mov
mov
mov
call
sbb
int
int3
test
pop
cld
mov
push
inc
sbb
cmp
cmp
shrl
xor
sub
push
arpl
cmp
xchg
sbb
shll
fdivr
pop
fdivrs
fadd
xor
pop
cmc
fsubrs
fmuls
fsubrs
fucomp
into
mov
lods
fiadds
lcall
inc
push
mov
fsub
mov
cmp
sahf
enter
test
or
cmp
rcll
bound
or
gs
dec
bsr
pop
stc
in
mov
or
fsubr
xor
sarb
mov
mov
push
ret
add
ror
lcall
rcrb
mov
sbb
idivl
and
dec
mov
xchg
xorb
imul
fildl
rorb
mov
sbb
movb
mov
mov
pop
pop
mov
adc
sbb
sbb
push
lret
sub
mov
stc
mov
fdivrl
push
sbb
in
inc
mov
enter
pop
sub
mov
mov
push
stc
sub
xchg
into
std
mov
or
sub
addr16
call
xchg
fnstcw
fcmovb
es
push
mov
call
daa
or
cli
mov
xchg
inc
or
pop
jnp
jp
mov
out
mov
mov
mov
es
ret
mov
cmp
loop
iret
loopne
ljmp
iret
mov
mov
out
sahf
mov
push
mov
xor
or
xor
lret
and
mov
das
lods
mov
and
std
bound
stc
fdivrp
rcr
or
mov
dec
lock
pop
fmuls
rcr
dec
icebp
dec
fdivrl
jns
cltd
test
mov
jno
inc
cwtl
test
mov
scas
dec
mov
mov
test
and
ret
hlt
mov
mov
pop
cmp
mov
pop
ret
cmp
das
xchg
push
iret
bswap
mov
daa
pop
enter
fimuls
cmpsl
push
scas
push
imul
in
idiv
inc
cmp
sbb
out
les
pop
sub
mov
cmp
arpl
mov
xabort
sbb
negb
push
jl
popf
es
add
addr16
ja
mov
test
testb
imul
clc
lods
sub
cmp
imul
push
jns
test
ljmp
sbb
pop
cli
cmp
and
pop
add
xchg
mov
mov
bound
mov
in
sub
mov
sbb
or
cld
adc
mov
iret
dec
out
cmp
popf
push
lea
jp
fwait
mov
cmp
pop
idivb
fnstenv
popl
mov
aas
pop
dec
rcrb
outsl
stos
adc
and
shlb
loopne
mov
xchg
xorl
push
push
inc
icebp
jno
popa
mov
and
adc
mov
repnz
ret
mov
adc
loopne
shll
inc
call
xor
and
mov
add
hlt
push
push
pop
aam
les
je
xchg
xchg
mov
test
jne
gs
cs
mov
inc
pop
aaa
andb
mov
xchg
ja
cmpsl
and
cmpsb
lret
cltd
mov
es
dec
dec
mov
nop
imul
les
inc
enter
call
or
imul
cmp
mov
fwait
loop
ret
jnp
ljmp
mov
sbb
or
insl
mov
cmp
xor
mov
jge
lea
inc
mov
sub
lret
cld
mov
or
and
scas
in
jle
push
aas
inc
outsl
popa
pop
mov
push
sbb
mov
jbe
xchg
mov
out
pop
fidivs
xorl
mov
push
call
mov
fnstenv
add
clc
fcoms
rcl
jb
pop
mov
sub
repnz
cli
rcl
jno
sarb
andl
push
movsb
lds
out
mov
in
out
mov
adc
outsb
dec
outsb
into
dec
jb
or
out
clc
inc
pop
pusha
pop
sub
cli
or
pushf
add
enter
push
movsb
mov
out
insl
xor
out
mov
lds
inc
mov
cmp
mov
std
cld
mov
mov
or
aas
or
roll
popf
push
and
mov
testb
adc
inc
sbb
aad
add
mov
ss
or
popf
iret
mov
push
adc
or
rcrl
mov
mov
lahf
and
jmp
outsl
adc
movsb
jne
mov
jg
lods
mov
mov
jbe
ds
mov
mov
jl
ljmp
lahf
cmp
or
mov
les
adc
fsubrl
inc
jnp
jle
stc
nop
mov
jo
cmp
addl
jle
or
les
das
aam
ror
repz
cld
aam
push
aaa
mov
loopne
mov
shlb
xor
lret
sti
hlt
mov
xchg
out
enter
inc
js
mov
mov
xlat
add
mov
mov
add
mov
sub
mov
mov
fdivrl
mov
ret
xchg
mov
sarb
cld
movsb
jne
mov
jno
dec
xor
int
xlat
ret
into
addr16
jl
or
add
repnz
ret
hlt
pop
ljmp
clc
loope
call
add
add
jbe
sub
mov
and
pop
ja
xchg
and
pop
or
jge
and
and
lahf
add
sub
pop
and
xor
je
stos
sbb
mov
shll
cld
mov
dec
lret
cwtl
shll
cmp
stos
test
dec
enter
fwait
mov
cmp
shrl
repz
dec
mov
ffreep
shlb
ret
jnp
sbb
mov
test
dec
ljmp
ljmp
mov
lds
push
fs
cld
mov
mov
fisttps
out
aam
fldt
repnz
cmpsb
fcmovb
rol
sbb
outsb
shlb
pop
push
mov
aas
xor
push
push
hlt
lret
lods
icebp
scas
inc
add
aam
cmpsb
inc
nop
jp
lods
pop
outsl
in
test
les
push
push
ret
dec
aam
mov
aad
mov
lret
sahf
std
push
mov
xlat
leave
mov
loopne
movsb
ss
lret
mov
fcmovu
pusha
jl
and
mov
mov
test
inc
enter
std
xchg
sub
in
sub
push
xchg
fcmovb
std
call
xchg
dec
and
sti
xchg
mov
fmull
push
jecxz
jl
or
mov
in
mov
incl
xchg
stos
adc
push
push
andb
fldl
push
xchg
sbb
ret
rclb
pushf
sub
enter
sub
inc
sbb
mov
ss
loope
aas
out
adc
mov
pushf
inc
jbe
test
mov
out
ret
adc
xor
mov
xor
or
les
mov
sbb
shll
jl
pop
shlb
shll
mov
rcrl
or
mov
push
inc
cmc
iret
cmp
out
sarb
cld
lods
loope
jg
pop
and
mov
mov
pop
test
out
out
mov
mov
enter
add
lret
addb
enter
int3
fiaddl
out
adc
into
mov
shrl
sarb
sbb
fsts
mov
sbb
inc
pop
loop
add
sbb
inc
mov
fs
or
and
add
rcrb
dec
ss
xchg
xchg
or
in
mov
cmpb
daa
or
mov
in
insb
cli
cltd
lret
inc
lret
lahf
adc
inc
sub
mov
repnz
pop
cmpsb
pop
out
mov
mov
outsl
pushw
push
adc
xchg
loop
push
shll
aaa
mov
loop
fistl
ret
ret
sub
inc
cld
outsl
dec
adc
cmp
aas
out
std
ss
cmp
les
aaa
shlb
mov
jle
into
sarb
lret
ror
into
push
mov
jl
loope
lock
rcl
data16
lret
sub
mov
push
or
sahf
arpl
dec
and
mov
fcompl
mov
mov
lret
adc
jae
pop
or
mov
ficoml
popa
mov
clc
mov
jle
aam
shl
cld
or
xchg
inc
jl
pop
out
sbb
int3
fdivrs
lods
fwait
xor
inc
int3
repnz
lret
mov
mov
mov
dec
aad
je
insb
fnsave
inc
test
mov
push
out
lcall
xchg
xor
lcall
mov
cmc
fisubrs
sahf
pushf
mov
jmp
out
cli
rorb
aam
movsb
orb
sub
scas
mov
mov
xor
pop
jns
push
add
mov
nop
es
clc
adc
mov
shr
shlb
xlat
hlt
loope
lret
xlat
fists
xor
rorb
lock
mov
ret
jno
xchg
lret
ds
test
pop
sbb
in
push
test
repnz
rcrb
jns
jnp
xchg
iret
jmp
fs
jb
push
ljmp
ret
scas
jge
mov
cmpsb
mov
leave
lock
lcall
iret
hlt
loop
mov
xchg
ret
sbb
or
add
icebp
shrb
repnz
je
push
stc
iret
aaa
pop
mov
ret
call
ret
sti
mov
shlb
push
mov
into
pop
pop
lret
mov
fmul
cs
ret
mov
sbb
and
ret
in
dec
cmp
into
xor
cmp
pop
lds
ffree
mov
inc
dec
ficoms
or
mov
sarl
shll
shlb
ret
stos
mov
mov
lock
out
fdivr
jns
fbstp
fmul
adc
jns
rcrb
push
mov
scas
es
rcll
shrb
dec
shl
ret
stc
addr16
cwtl
roll
out
jbe
ret
cmp
fadd
cmpsl
pop
ret
out
cmp
movsb
aas
ret
mov
sub
repnz
push
fwait
loope
jl
mov
int3
out
test
sbb
js
stos
or
mov
lock
lret
sar
cmp
mov
add
or
std
aaa
js
mov
into
pop
cld
aad
jnp
rorb
mov
nop
and
mov
clc
xchg
mov
xor
movl
dec
lods
inc
ret
les
into
push
xor
push
mov
lcall
add
inc
pop
repnz
mov
daa
int
mov
xlat
mov
mov
mov
mov
std
mov
mov
pop
dec
mov
subb
out
pop
or
fidivrs
in
out
hlt
loop
into
idivl
out
enter
in
sti
rcl
in
stc
shl
ljmp
lock
xor
fistl
adc
jae
ficomps
mov
aam
mov
mov
sub
mov
aas
lret
sub
mov
jbe
lret
or
adc
notb
rcll
dec
mov
mov
push
mov
xor
cld
ret
mov
rol
mov
movsb
sarb
xor
hlt
jno
mov
fisubrl
xor
outsl
ss
inc
pusha
pop
mov
cmp
test
sub
sahf
test
pop
sub
clc
fnstenv
inc
icebp
push
mov
inc
xor
mov
aad
jns
push
jbe
adc
outsb
ja
sub
cmp
testb
push
test
sbb
jge
mov
sarl
xchg
mov
outsb
int3
jae
in
push
enter
lock
jmp
jbe
jg
sub
inc
xor
xchg
fistl
mov
lds
or
mov
lea
cld
cmp
aad
mov
jl
mov
sub
inc
jle
jp
les
inc
sub
mov
ret
mov
ret
sti
cmp
lret
pop
sub
cli
pop
insl
pop
cli
cmp
popa
mov
pop
sub
sbb
fcmovnb
repnz
repnz
or
arpl
cwtl
stc
cmc
sti
pop
and
mov
sub
mov
out
ficomps
pop
and
aaa
sbb
shl
clc
and
call
outsb
lret
and
add
xor
pop
and
inc
mov
cli
add
rcll
mov
xchg
push
dec
cmc
stos
jae
fistpl
ljmp
shll
sarl
hlt
mov
sub
mov
clc
mov
int
int3
movsb
fdivrp
mov
lock
pop
bound
inc
mov
push
mov
xchg
jl
xchg
out
xchg
fwait
mov
xor
sbb
adc
sbb
xlat
mov
ds
xor
fwait
sub
sbb
mov
mov
lcall
push
xor
jmp
popa
fadds
pop
call
mov
mov
stc
mov
lret
mov
mov
mov
shl
outsb
cmp
mov
out
jl
icebp
pop
fs
lcall
enter
stos
lret
loope
je
mov
jg
jbe
mov
aas
add
xchg
mov
sub
or
adc
mov
mov
and
pop
adc
cld
xchg
cmp
mov
push
sarb
cwtl
lret
repz
jge
mov
xchg
and
dec
sahf
lock
lret
lahf
call
or
lcall
sahf
pushf
push
fistpll
fisubl
adc
ss
int3
repz
and
icebp
lds
ss
je
mov
sub
mov
enter
push
mov
cmp
cld
cwtl
fcoml
out
or
dec
scas
mov
sub
sub
into
adc
les
sub
fdivrs
iret
xor
dec
jl
xor
sti
int
rcrl
in
jae
push
les
loop
mov
dec
mov
lods
pop
ljmp
mov
jbe
aam
pop
push
cmp
adc
push
lret
or
sbb
fidivrs
push
inc
inc
push
or
inc
cmc
add
add
ret
incb
push
add
add
or
mov
mov
fs
mov
push
das
mov
test
xor
mov
repnz
dec
movsb
and
jle
pop
sbb
xor
mov
mov
lock
mov
in
mov
or
mov
mov
mov
or
mov
clc
mov
lds
movsl
loopne
and
in
popf
xchg
dec
xchg
out
pop
mov
insl
rep
gs
jp
push
sub
mov
mov
into
xchg
sub
jg
inc
lret
rclb
dec
jge
fs
enter
lods
rcr
xlat
rcrb
fsubrl
popf
add
out
pop
test
enter
dec
into
dec
sarb
outsb
shlb
inc
lock
sbb
or
cwtl
loope
into
ffree
dec
loop
jle
pop
aas
std
or
push
mov
les
mov
sahf
or
adc
xchg
lret
cmpsb
inc
lret
cmp
xor
or
cmp
cmp
mov
sub
call
push
inc
jge
adc
mov
sbb
rolb
push
sar
adc
cwtl
or
fcmovb
scas
cld
push
push
mov
xor
ret
xchg
aas
rcrb
jmp
adc
mov
jmp
fcmove
arpl
lods
loope
add
mov
adc
inc
mov
repnz
cli
sub
loop
mov
lds
leave
push
fidivs
pop
subb
js
int
fcom
push
cmp
inc
ret
test
cs
dec
sub
pop
or
push
mov
jl
test
mov
mov
sub
lret
cmc
insl
cmp
loop
lds
leave
push
jle
push
icebp
test
xchg
mov
clc
ljmp
inc
or
or
fidivrs
mov
mov
mov
mov
lods
or
inc
test
mov
sbbb
sahf
ds
lods
adc
sub
inc
cld
xchg
test
ret
out
pop
bswap
shrl
jge
out
mov
gs
mov
enter
jecxz
fcmovu
jecxz
fisubrl
lahf
and
and
movb
push
lds
stos
mov
int
sar
xor
mov
push
rcr
aam
ror
mov
cld
xchg
fdivrs
cmp
xor
ret
out
pop
mov
lods
test
and
lock
push
and
xlat
or
bnd
cmp
repnz
mov
mov
add
les
xor
into
inc
cmpsb
rol
icebp
ja
icebp
pop
scas
lods
dec
or
insl
cmp
cmp
jecxz
and
mov
fmulp
ss
ret
enter
mov
testb
fmulp
lods
lret
jae
insb
jp
pushl
add
xchg
repz
mov
inc
rcrb
jge
iret
pop
jae
outsb
int
sbb
push
lcall
xor
fidivrl
sahf
xchg
mov
mov
jge
fists
xlat
roll
in
mov
cmp
shll
add
andl
sar
fiadds
inc
jmp
ret
js
mov
imul
jge
add
mov
shll
jmp
ljmp
stc
mov
clc
ds
out
lds
loop
inc
vpunpcklqdq
icebp
xchg
mov
fldcw
test
push
ret
out
mov
leave
xchg
push
ret
les
xchg
fsub
mov
jne
xchg
cmp
xlat
mov
pop
jbe
cmp
movsl
inc
int3
push
dec
mov
sahf
mov
mov
cli
int3
out
mov
cmp
out
sarb
test
mov
out
jbe
int
in
dec
rcrb
js
movsb
lret
cmp
testb
dec
pop
add
ljmp
ficomps
into
test
and
stc
test
dec
cmp
mov
fisubrs
test
mov
es
dec
std
mov
ret
dec
fmuls
push
loop
jmp
push
xchg
loop
sar
push
ret
cmpsb
mov
mov
insl
std
int
sub
lret
out
and
sbb
data16
adc
dec
push
lcall
ss
int
dec
ficoml
fists
mov
movsb
jge
into
out
in
sbb
fistpl
mull
or
adc
pop
out
adc
aad
fcmovbe
sar
push
sti
cltd
push
xchg
mov
or
push
cmc
es
inc
mov
add
sahf
aam
in
xor
mov
cld
call
add
sbb
adc
inc
ja
enter
mov
cli
in
cmp
lret
scas
jmp
enter
jmp
rol
dec
xor
inc
add
aad
xchg
xchg
out
jecxz
popa
rolb
shrb
jp,pn
xchg
mov
lret
dec
sti
into
inc
mov
add
push
push
dec
mov
es
mov
bound
mov
loope
les
sti
addb
sbb
mov
mov
movsb
dec
es
xchg
sti
enter
adc
push
ret
cli
iret
dec
add
mov
enter
shrl
pop
aaa
push
je
mov
jmp
pop
test
into
pop
push
scas
test
mov
ds
js
push
dec
cmc
aaa
jmp
adc
lods
sub
jb
push
mov
jecxz
push
xlat
mov
test
sbb
es
js
jl
fmul
xchg
xchg
out
shlb
cld
out
lret
mov
repnz
fcmovbe
pop
int
mov
dec
movsl
std
clc
clc
enter
cwtl
dec
inc
pop
nop
rorb
les
add
add
mov
mov
mov
clc
iret
stos
mov
out
movb
cltd
nop
push
out
int
loope
add
ljmp
cmp
xchg
adc
jae
and
sbb
mov
in
mov
jbe
int3
xlat
mov
jecxz
lods
jno
adc
xorl
mov
mov
mov
clc
pop
fisttps
sub
loopne
mov
std
mov
fisubs
cmp
jae
mov
sbb
pop
fsts
jbe
mov
xchg
or
fbstp
sbb
mov
dec
sbb
pop
call
leave
in
adc
sbb
and
test
lock
mov
jmp
push
les
adc
inc
lret
inc
mov
jne
out
add
or
clc
push
mov
enter
inc
xlat
push
or
push
mov
xchg
mov
cmp
int3
leave
xchg
dec
push
and
mov
jle
sub
push
cmp
imul
or
cmp
or
xor
inc
out
mov
mov
cmc
int
cmc
pop
xor
packsswb
out
inc
nop
dec
ret
inc
ret
std
mov
lods
scas
je
mov
mov
inc
dec
ljmp
fcmovnb
and
into
shrb
mov
scas
insb
call
inc
in
xchg
dec
ret
fdivl
cltd
mov
ffree
lock
and
mov
outsb
xchg
sbb
mov
ljmp
test
ret
pusha
xor
mov
insl
mov
xchg
pop
sub
es
mov
insl
sti
ss
cli
into
dec
fimull
rcrb
xchg
jb
data16
xor
iret
lret
lcall
arpl
stos
inc
rorb
push
pop
push
ss
cmp
ja
sbb
pop
inc
loop
sub
sti
mov
push
jno
addb
or
add
dec
dec
sti
scas
in
ja
cltd
hlt
jge
adc
aad
jmp
popl
lret
enter
icebp
adc
mov
inc
inc
fucomi
lcall
insl
mov
mov
subl
inc
pop
test
mov
fdivl
daa
adc
jle
movsl
mov
pop
lret
mov
mov
cmp
and
xlat
daa
aam
stc
mov
mov
adc
add
cmp
mov
push
mov
pop
jo
push
out
add
pushf
rorl
js
fadd
movsl
push
loop
addb
sbb
push
into
in
cli
dec
movsl
in
loopne
or
xchg
xchg
cmc
mov
push
add
mov
mov
repz
xchg
mov
test
mov
test
hlt
adc
adc
dec
arpl
hlt
mulb
pop
push
sahf
xchg
add
mov
dec
addr16
mov
test
fnstcw
lods
mov
scas
aad
movsb
pop
aam
in
sahf
test
int3
pushf
test
mov
mov
lret
mov
fmul
enter
adc
xchg
faddl
mov
sarb
js
mov
and
stc
ss
ds
enter
test
daa
inc
add
lods
xchg
enter
fstpt
out
mov
inc
jb
shl
loopne
mov
pop
mov
sahf
dec
fisttpl
mov
lret
bound
jl
xchg
out
leave
xchg
mov
gs
incl
mov
test
push
mov
inc
mov
mov
inc
xchg
aas
out
cmp
insb
int
divb
bnd
js
or
jl
mov
inc
les
fsubrs
iret
sub
les
mov
push
lret
inc
mov
test
inc
in
mov
movl
mov
les
mov
fisubs
push
adc
inc
mov
xchg
scas
inc
ja
cmp
xor
or
adc
mov
push
popf
and
adc
daa
xchg
xor
pushf
testl
popa
mov
sbb
sahf
xor
mov
shl
inc
in
lret
jl
into
mov
mov
les
outsb
orb
xchg
jmp
loope
or
js
out
lods
inc
cmpsb
cmp
and
xchg
dec
ret
mov
ss
out
sub
notl
rcrl
pop
or
mov
jecxz
and
dec
fwait
jns
mov
dec
mov
stos
lods
cmp
fs
lcall
cmp
mov
inc
lahf
fneni(8087
icebp
adc
ret
sub
xor
cli
lret
cmp
mov
mov
lods
mov
cmc
add
movsl
fisubrs
loope
adc
int3
pop
pop
sbb
shrb
mov
sbb
push
push
sar
and
leave
mov
push
inc
lahf
loop
fwait
xchg
ds
jl
cmc
add
push
lret
int3
mov
or
xlat
inc
ds
shrb
stos
and
stos
cmp
mov
dec
add
fldl
fbstp
mov
inc
loop
loopne
outsl
loop
mov
imul
ljmp
ljmp
xor
xor
push
js
mov
out
mov
loopne
xor
xchg
adc
stos
cltd
push
stc
rorb
inc
lret
pop
mov
push
adc
mov
jae
std
ss
mov
mov
mov
leave
pop
pop
insl
dec
inc
mov
int3
lods
xchg
dec
movsb
xlat
push
jle
arpl
mov
fst
mov
fidivrl
xchg
cmp
mov
cmp
testl
mov
sbb
mov
xorl
rsm
xor
rclb
adc
lret
mov
mov
fildll
sbb
outsl
mov
test
hlt
push
pushf
imul
nop
sbb
mov
jl
ss
sbb
cmp
push
or
pop
mov
dec
aaa
push
sub
ss
adc
ret
repnz
into
xor
fsts
sub
jmp
arpl
fistpl
push
mov
xor
dec
push
push
push
loope
push
push
jns
scas
xor
and
and
or
and
scas
dec
mov
sbbb
sti
mov
nop
mov
cmp
dec
mov
stos
insb
loope
sbb
fs
mov
in
pusha
lds
pop
inc
pop
sbb
shrb
pop
das
jb
mov
sti
and
ss
inc
out
mov
mov
xor
jg
pop
lock
fisubs
loop
or
mov
dec
dec
pop
outsl
pushf
mov
insl
outsl
daa
xchg
mov
push
popa
push
pop
mov
push
scas
ja
add
add
mov
dec
xor
rclb
int3
mov
loopne
xor
jne
mov
sbb
xor
and
movsl
mov
pushf
jo
nop
out
add
outsl
fidivl
out
rorl
out
sbb
xlat
sub
lcall
lock
jo
mov
pop
clc
mov
das
cld
add
lock
inc
in
out
sub
mov
adc
add
adc
add
add
iret
test
add
bound
jecxz
shrb
fnstsw
je
cmp
sub
sub
cmpl
push
mov
arpl
mov
dec
lret
imul
mov
adc
and
push
dec
push
mov
iret
into
mov
add
clc
iret
mov
mov
add
push
mov
pusha
les
mov
leave
cmp
cmp
lret
les
and
dec
pop
sub
xchg
mov
rcr
add
leave
mov
dec
adc
jae
mov
mov
pop
cwtl
cmc
mov
mov
add
je
or
adc
scas
push
leave
popa
hlt
fwait
push
shl
loopne
add
aaa
int3
movb
fidivrl
mov
loopne
cli
sarl
push
call
pop
mov
mov
and
add
or
clc
mov
mov
dec
mov
idivb
sub
mov
mov
xlat
mov
mov
mov
mov
mov
dec
mov
pop
mov
lret
push
mov
mov
push
mov
mov
mov
sbb
out
sbb
mov
dec
lods
push
mov
sarl
xorl
out
in
ss
push
fadd
adc
test
xchg
fistl
ljmp
pop
fs
xchg
push
mov
test
jg
test
mov
mov
sub
fdivrs
lahf
nopl
dec
mov
push
mov
mov
lret
sub
leave
ljmp
mov
je
insb
scas
nopl
push
inc
ret
dec
arpl
mov
cmp
dec
push
mov
mov
jge
mov
jl
repz
sub
push
or
call
sahf
lock
dec
out
inc
dec
rolb
push
dec
out
sub
fdivrs
mov
xor
xor
out
dec
add
or
cmpsb
fstpt
pushl
shrl
inc
sub
push
rcl
mov
mov
ja
icebp
mov
pop
jmp
loopne
pop
in
les
ret
push
fnstcw
xor
lret
mov
stos
or
push
into
or
mov
fdivrs
ret
out
push
out
iret
in
ljmp
rclb
dec
mov
ffreep
enter
dec
add
or
push
push
mov
cli
jmp
es
rcrb
mov
jmp
fcmovnb
mov
adc
loope
sbb
and
dec
mov
mov
mov
fidivrl
or
cmpsl
shr
leave
leave
cmp
out
mov
fcoml
mov
or
mov
out
icebp
sarb
dec
js
into
aad
into
shrl
enter
cli
clc
mov
jle
and
xchg
cmp
in
pop
pop
out
sub
add
jmp
mov
mov
sbb
clc
sbb
js
add
adc
push
push
mov
cmp
mov
rorl
xor
inc
inc
in
sarb
cmp
push
mov
dec
mov
sub
pusha
or
mov
enter
out
mov
ds
lret
aas
into
enter
int
cmp
xor
fwait
js
movsb
shll
js
pop
lds
cmc
xchg
pop
cwtl
cmc
ss
mov
mov
dec
fst
dec
insl
mov
fst
mov
pop
ffreep
rcrb
mov
mov
in
mov
sub
subb
shrb
inc
pushf
push
divps
cs
repnz
push
dec
pusha
xchg
cmpsb
mov
xor
in
shl
sbb
mov
xlat
mov
jbe,pt
dec
ss
loopne
xor
or
xchg
das
or
dec
repz
out
mov
pusha
lcall
push
cwtl
or
dec
xchg
mov
add
mov
arpl
in
out
mov
mulb
jecxz
xchg
icebp
lret
mov
in
push
push
outsl
inc
stos
movsb
xor
repz
addr16
push
inc
scas
and
les
shrl
into
into
rolb
lcall
cmpsb
sbb
mov
outsb
pslld
jmp
fidivrs
adc
ljmp
adc
xor
insb
mov
push
lds
cmp
dec
mov
sub
mov
ficomps
mov
or
iret
pusha
mov
or
ljmp
leave
pop
mov
or
es
push
call
enter
push
lret
mov
aaa
loop
or
shll
xlat
enter
sbb
in
mov
shr
les
ret
cld
iret
mov
and
ljmp
enter
rcr
mov
inc
push
dec
pop
fdivs
out
or
xor
dec
leave
push
pop
imul
and
movsb
xchg
fcmovu
loopne
cli
std
mov
stc
add
mov
cwtl
mulb
rclb
frstor
jae
das
add
aaa
ljmp
call
jg
mov
idivb
fisttpll
sbb
into
pop
and
sbb
mov
dec
add
out
or
enter
mov
rolb
fidivs
daa
repnz
mov
scas
aas
out
jmp
mov
push
pop
xchg
rcrb
jge
jns
or
ds
sahf
push
xchg
in
jns
inc
push
sub
shl
xor
push
addr16
ret
ss
rolb
scas
out
aam
sub
jl
pop
add
popa
popa
jle
cwtl
jmp
lret
loope
test
and
sahf
test
pop
ficompl
idivl
xor
ja
mov
out
ret
sahf
bound
pop
enter
add
and
jge
stc
dec
mov
mov
icebp
and
push
inc
test
fwait
mov
cmp
sub
push
call
xor
aaa
pop
mov
pop
pop
xlat
sub
insl
adc
jns
cmp
jp
fnsave
adc
mov
cmp
mov
cmp
lret
pop
jbe
jns
pop
push
fimuls
in
daa
push
fs
scas
sub
xchg
test
or
mov
ret
mov
aas
rcr
mov
sub
dec
ljmp
fmul
mov
aaa
xor
test
push
outsb
icebp
cmpsb
sub
shll
push
sahf
or
out
mov
mov
push
daa
sarl
cmpsb
jmp
cli
sub
cmc
add
mov
pop
mov
pop
and
cmc
mov
xchg
mov
mov
out
into
inc
push
lcall
inc
jbe
push
aaa
push
mov
fldenv
fs
cmp
or
shl
xor
enter
aaa
cmp
mov
fxch
cmc
mov
xor
push
enter
int3
adc
cld
mov
mov
ret
jp
sbb
mov
push
int
jbe
mul
lock
mov
lods
sub
iret
xor
sbb
push
popf
iret
mov
jae
into
mov
ljmp
push
xchg
jne
das
jbe
mov
lahf
mov
lock
test
aad
insl
not
push
addr16
test
sub
pop
jmp
adc
movsb
dec
mov
cmp
in
cmp
mov
cli
mov
xchg
rcr
pop
xchg
xor
push
mov
lds
mov
repz
testb
scas
mov
mov
aaa
xchg
cld
test
xchg
jecxz
lret
xchg
mov
pusha
mov
or
pop
sbb
out
add
movsb
cwtl
push
pop
faddp
fcmovnu
rcl
out
mov
mov
fld
mov
into
lods
xlat
or
xlat
outsb
pop
fisubrs
out
cwtl
jp
out
cmp
mov
xlat
stos
idivb
and
dec
xlat
test
cwtl
push
hlt
cmp
rcl
std
push
xchg
xlat
cmp
ss
inc
push
std
push
xlat
rolb
loope
xchg
mov
lret
imulb
je
std
ss
hlt
jbe
ds
xlat
mov
lcall
sbb
mov
push
lcall
mov
andb
data16
mov
faddp
stos
lret
notb
mov
mov
pusha
test
mov
mov
leave
mov
sar
iret
mov
mov
fistps
push
scas
arpl
stos
xchg
mov
cmp
xor
push
cmpsb
push
aad
xchg
fnstenv
jp
mov
mov
iret
mov
jns
mov
popa
mov
ss
mov
rcrb
ret
push
mov
es
xor
push
mov
sti
scas
pop
idivb
ljmp
nop
push
mov
mov
std
repnz
clc
xchg
mov
scas
aad
mov
adc
into
pop
mul
cli
jle
adc
push
aad
aas
out
jmp
mov
mov
xchg
add
sbb
jb
in
xor
sub
xor
xor
and
popl
sbb
jo
add
mov
cmpsb
jno
es
out
mov
out
add
mov
cmc
inc
adc
stos
and
fstpt
inc
xor
lret
and
cmc
or
xchg
out
out
in
ficoms
or
mov
lret
xchg
movsb
lret
mov
mov
mov
clc
push
out
fildll
xor
fucomip
or
rcll
xchg
sbb
cld
mov
loopne
movb
mov
fiadds
idivb
negb
out
mulb
clc
mov
out
sarb
jp
cmp
adc
pop
cmc
inc
mov
imul
or
mov
cmp
lods
fistpll
mov
xchg
iret
jmp
call
jnp
mov
mov
mov
into
pop
push
sub
ret
into
push
movsb
mov
mov
aaa
pop
cmp
notb
push
mul
not
out
jmp
xchg
pop
icebp
in
push
jns
aaa
cmp
mov
mov
jbe
test
idivb
inc
sbb
cmp
xchg
xor
fidivrl
enter
das
push
cmp
gs
push
pop
jbe
mov
jmp
dec
jmp
ds
cmc
out
cmp
dec
mov
lret
into
out
test
leave
lret
inc
out
lret
mov
or
fstps
cmp
ret
lret
inc
repnz
out
add
fisubrs
pop
fstp
sbb
fmul
out
ffree
fisttps
iret
push
pop
or
or
inc
repnz
xchg
push
push
add
mov
fstl
xlat
lret
aas
filds
lock
out
leave
loop,pt
push
cmp
cmp
out
sti
iret
mov
push
xchg
out
negb
stc
or
fiadds
movsb
jp
stc
daa
out
inc
rol
fidivrl
out
test
stc
inc
in
lret
fcmovu
in
jecxz
fimuls
loopne
dec
cmc
fistpll
into
popf
cmp
pushf
lock
pop
repz
scas
mov
ret
insl
das
add
fistps
enter
jl
pop
fbstp
sub
lock
filds
cld
dec
pop
ss
mov
fiaddl
or
cli
lock
filds
clc
fisttps
push
or
mov
cmp
dec
xchg
or
mov
mov
out
inc
lret
or
lret
pop
or
pop
fisubrs
mov
or
aaa
sarb
scas
out
pop
and
and
mov
leave
or
add
and
pop
outsb
ds
clc
ds
cmc
adc
ds
pop
movsl
lcall
repz
cli
mov
sbb
add
test
lret
rolb
adc
push
adc
test
mov
and
cmc
test
cli
sbb
dec
pop
lret
sbb
jecxz
iret
lret
sbb
dec
loop
cmp
clts
xlat
rol
sbb
sbb
jp
test
loope
and
dec
aam
lret
dec
sub
stc
fistps
cmc
sbb
lret
sbb
mov
cli
cld
lret
dec
sub
popl
mov
stos
in
lret
pop
sub
daa
loopne
cltd
loope
jnp
loope
out
ds
push
je
ljmp
shrb
pusha
pop
add
fistpll
cmc
cmp
pop
sbb
mov
pop
rcl
pop
sbb
in
out
stos
sbb
pop
sbb
inc
ficoml
lret
pop
cld
loopne
ret
push
or
stos
call
sbb
ret
push
mov
out
sbb
call
sbb
out
pop
cld
or
push
fcmove
and
fbld
push
addr16
dec
scas
pop
pusha
loope
pop
sbb
inc
addr16
pusha
repnz
cmc
sti
ss
xlat
inc
clc
ljmp
cmp
pop
push
fmulp
pusha
cmp
cmp
cmp
inc
ficomps
push
pop
movsl
lret
insb
rcr
fldenv
mov
addr16
fdivrl
mov
stc
sbb
dec
mov
adc
out
xchg
call
loop
loopne
lret
stos
mov
xor
add
ret
into
fucomp
dec
inc
fimuls
lret
mov
lret
push
lret
lret
lret
fmul
cltd
push
xor
lret
call
xor
cmpsb
fiadds
aaa
and
add
inc
inc
lret
popf
fbld
dec
mov
sub
dec
rcl
enter
pushf
dec
mov
jecxz
mov
test
xchg
shrb
pop
push
lret
add
lock
sub
mov
sti
outsb
inc
stc
jne
fisttps
test
inc
adc
lock
mov
xchg
xchg
shr
mov
ss
pop
loope
orb
lret
push
mov
call
in
pop
pop
push
add
sbb
rorb
rorb
or
dec
enter
pop
outsb
add
push
dec
sub
fsubrs
lret
mov
sbb
das
dec
jmp
or
ljmp
inc
fimull
cmpsl
and
jne
stos
scas
ljmp
inc
push
sbb
lret
shlb
ds
inc
popf
mov
cmc
bound
pop
cmp
pusha
cltd
xor
mov
mov
adcb
daa
mov
lds
cmp
xor
cmp
adc
sub
and
inc
jbe
movsl
fnstenv
ret
test
mov
adc
fdivrp
iretw
test
push
arpl
xchg
pop
rcll
es
mov
push
fisubrs
cmp
rol
fidivs
cmpsb
data16
lds
cmpsb
mov
push
mov
push
idiv
jbe
rcll
cmp
xor
lods
mov
cmpsb
mov
dec
les
dec
push
or
or
ffreep
int
push
lret
push
push
jbe
and
fdivs
outsb
hlt
or
jne
xor
inc
fbld
or
test
fnstcw
add
dec
loope
outsb
es
iret
fwait
mov
mov
sub
daa
movsl
ficoms
mov
loopne
cmpsb
mov
in
in
and
mov
movb
mov
cmp
lea
push
mov
les
out
mov
cltd
cs
ds
movsb
enter
ss
mov
xchg
cmpsb
mov
aas
pop
mov
fnstcw
aad
dec
adc
mov
lods
out
pop
mov
movb
ds
ret
enter
push
pop
mov
notb
je
inc
mov
fidivrl
pop
mov
test
das
cs
cmp
cs
stos
add
xor
scas
ret
popf
mov
jle
inc
mov
jp
out
mov
rcl
idivb
push
enter
popa
in
adc
adc
test
lcall
push
sub
adc
je
mov
daa
insl
idivl
je
test
inc
xor
adc
mov
je,pt
test
inc
xor
adc
sti
test
inc
xor
adc
jnp
in
xor
jne
jg
mov
ss
add
jp
fsubrs
test
xor
adc
jne
lods
ficoml
adc
cmpsl
int
je
test
inc
xor
cmpsl
int
je
test
inc
xor
adc
je
test
inc
xor
adc
mov
jle
sti
test
inc
xor
adc
sti
test
inc
xor
cmpsb
add
adc
sahf
je
test
inc
xor
adc
je
test
inc
xor
adc
je
test
inc
xor
adc
out
idivl
in
xor
adc
jb
test
inc
xor
adc
jne
test
inc
xor
adc
jae
mov
inc
xor
adc
fcmovbe
movsb
and
mov
xchg
adc
idivl
je
test
cmpsl
xor
divb
cwtl
in
xor
adc
in
cs
lcall
jnp
in
cs
lcall
sti
movsb
in
cs
lcall
sti
lods
in
xor
jnp
cmpsb
mov
ret
pop
add
loopne
inc
mov
pop
sarb
or
insl
mov
dec
sbb
stc
out
xor
shll
mov
fisubrs
ret
lock
sub
xor
push
lds
push
roll
test
cs
mov
fcomps
sbb
clc
out
jne
add
push
cmp
or
xchg
inc
fidivrs
aad
insl
hlt
push
mov
cs
and
xchg
xchg
ss
push
dec
in
xchg
sbb
and
mov
mov
push
roll
lds
aas
jne
jmp
and
add
push
hlt
inc
mov
cmpsb
cltd
inc
push
shrb
fdecstp
test
dec
push
mov
sbb
gs
or
lds
xchg
scas
aaa
mov
xor
xor
mov
xor
mov
adc
mov
cltd
in
fmulp
iret
jg
dec
and
pop
push
movsb
test
ss
mov
clc
push
push
push
add
mov
repnz
jno
sbb
pop
jle
fnstenv
xchg
arpl
pop
xorl
inc
es
mov
xchg
jle
sbb
movsb
in
mov
icebp
ds
mov
cmc
lret
lds
mov
movsb
sahf
or
sbb
jecxz
push
out
lcall
push
fcoms
mov
xchg
push
fisubrs
dec
mov
sub
cs
gs
fidivrs
mov
lock
fdivrl
ds
lret
mov
add
jo
mov
mov
inc
and
mov
xchg
aad
es
les
lods
cltd
cld
inc
aad
aad
jge
scas
cmc
xchg
int
pop
lds
mov
hlt
fistpll
testb
mov
cli
inc
cmp
or
pusha
repnz
add
add
or
and
sub
rcrb
ds
fdivrs
out
adc
movb
add
or
or
sbb
and
mov
aas
sti
out
or
xlat
les
ret
push
loopne
push
sub
ss
adc
fistpl
pop
cs
sbb
push
paddb
fstl
sub
mov
and
ja
and
sbb
fcompl
cmp
jmp
jecxz
and
ret
repnz
xchg
or
out
sub
add
sbb
fucomip
sub
sbb
xlat
es
or
sub
in
cli
out
or
fmuls
push
mull
add
pop
test
cli
adc
sbb
pop
cs
in
out
ljmp
push
cmp
cs
push
or
or
rcll
mov
sub
sbb
sub
sub
dec
mov
add
sbb
fwait
jmp
loop
in
rolb
sbb
out
adc
sub
lret
test
add
mov
bound
insb
fwait
sbb
mov
je
inc
sti
sub
fcompl
dec
sub
xchg
push
push
addb
add
stc
psubq
dec
fisubrl
jecxz
lret
mov
add
dec
shrb
add
rolb
sbb
inc
jg
sub
sbb
add
dec
cwtl
pop
loop
pop
out
sub
aam
sbb
sbb
jb
dec
cmp
pop
pop
popa
mov
mov
mov
push
mov
sbb
daa
loope
dec
stc
pop
andl
push
maskmovq
testl
pop
rclb
dec
and
cmp
adc
xor
enter
out
lret
cmp
fcmovb
es
xor
adc
and
out
cs
fidivrs
xor
pusha
hlt
dec
and
fisubrl
xchg
in
add
sub
mov
sbb
ds
rclb
cld
pop
ficompl
js
mov
mov
pop
clc
or
and
sub
pop
enter
stos
testb
out
mov
jle
dec
ds
push
lret
sbb
fisubl
push
sahf
cs
inc
int3
or
mov
xor
sbb
rcll
in
bound
js
cmp
arpl
and
push
sbb
add
push
sbb
dec
enter
mov
add
lods
xchg
aas
sub
les
cld
fldt
loop
subb
mov
shl
jmp
push
call
mov
lret
mov
push
dec
sub
negl
out
rcr
pop
sahf
int3
sti
fsubr
into
ds
cli
and
push
pop
sti
push
pop
sbb
inc
js
into
or
push
or
es
sbb
mov
ljmp
sbb
sub
call
cmp
sub
dec
enter
fbld
lcall
sbb
add
mov
je
sub
push
es
or
aas
mov
fiadds
lahf
dec
push
stc
mov
dec
cmpb
popa
sub
stc
loop
and
shlb
lock
in
das
jae
cmpsl
daa
cli
jecxz
aas
mov
sarl
or
sub
shlb
mov
inc
jp
sub
neg
std
mov
push
mov
jmp
xchg
sahf
fcompl
sub
ljmp
xchg
nop
inc
jnp
call
dec
clc
and
sbb
daa
fcompl
cwtl
and
mov
mov
rclb
pop
xorl
data16
sub
imull
xor
mov
bound
jne
jbe
sub
push
add
dec
mov
add
ja
imul
mov
daa
enter
sbb
sbb
leave
mov
enter
dec
fimull
sbb
rcrb
xor
xor
cmp
dec
or
pop
fimull
fldenv
std
cli
fistl
pop
hlt
lods
out
ret
pop
mov
or
sub
or
pop
pop
or
ficompl
out
inc
sub
cwtl
and
pusha
scas
std
adc
push
roll
test
jl
dec
sbb
loope
xchg
incb
pop
sub
jle
jp
lods
stc
sbb
ljmp
cld
xlat
dec
mov
sbb
xchg
cli
xchg
ja
add
movsl
mov
pop
mov
out
sub
shll
pushf
push
dec
cli
gs
push
dec
mov
andb
push
nop
dec
in
cmovs
jp
add
imul
jl
call
cs
or
or
jecxz
mov
mov
mov
orl
subb
bswap
adc
fsubrs
je
adc
sub
pushl
sub
jg
lret
ja
push
sbb
out
inc
lock
pop
fsubrp
mov
ffreep
fdivrs
sti
sbb
js
mov
jl
stc
movsb
push
mov
inc
push
jo
sub
and
add
arpl
enter
stc
add
cmpb
sub
mov
rcll
cmpsb
mov
insb
data16
add
or
xor
cltd
ljmp
fisubrl
das
sub
out
enter
inc
loop
lret
or
xchg
cmp
leave
rolb
add
lock
shl
push
sti
scas
xlat
sbb
pop
sbb
pop
jo
lret
pop
add
sub
add
push
rolb
adc
loope
nop
and
aas
and
ret
inc
fs
pop
std
push
call
ds
mov
xor
fs
adc
pusha
and
sbb
cmpsb
mov
xchg
pop
clc
imul
cmp
repnz
fmul
lcall
or
fwait
sub
jo
cmp
sbb
or
es
mov
movb
into
pop
pushf
or
mov
ja
add
add
sbb
outsl
add
ja
pop
lret
pop
adc
adc
add
cmp
dec
add
das
push
mov
lods
daa
pop
or
jg
or
imul
int
fucom
lcall
jp
xor
ficoml
push
push
fcmove
add
outsl
pop
clts
movaps
jg
icebp
mov
add
pop
nop
dec
add
sbb
in
loop
lock
mov
fs
test
iret
adc
ds
and
test
test
inc
mov
push
or
in
lret
into
adc
loopne
fucom
sub
xchg
lret
or
sub
dec
scas
jp
test
xor
enter
loopne
mov
dec
sbb
loop
cwtl
inc
jbe
loop
adc
inc
movsb
push
fidivs
xor
or
cli
jb
fcmovb
xor
jp
aad
notl
sbb
hlt
out
inc
mov
pop
in
lods
push
sub
xchg
inc
mulb
filds
flds
add
add
dec
test
xor
sbb
pop
xchg
loope
cmpsb
adc
sbb
and
in
pop
add
ljmp
sub
imul
dec
push
sbbb
aas
rcrb
repz
push
lock
int3
loopne
xchg
inc
sub
mov
or
push
cmp
into
or
adc
sub
cld
cld
sahf
xchg
push
fistpll
mov
mov
mov
lret
push
subb
fwait
mov
fcompl
sti
cmp
adc
lock
fcompl
movsb
dec
and
xchg
notl
lret
or
adc
mov
loopne
add
rolb
adc
add
adc
cld
out
push
dec
enter
add
bound
ljmp
bound
es
divb
popa
into
ljmp
rcrb
inc
mov
xor
sbb
ficompl
jbe
mov
mov
loope
pop
push
enter
add
inc
notb
subl
ror
xor
sti
dec
fisubs
pop
or
sbb
push
sbb
or
out
push
dec
loop
sbb
call
jmp
inc
mov
repz
ficomps
sub
sbb
add
pop
mov
push
cmp
loopne
add
test
clc
inc
fsubrl
add
stos
imul
clc
lea
insb
into
inc
push
pushf
xor
pop
enter
repnz
lret
mov
int3
mov
fidivs
dec
pop
cli
sbb
jg
jno
jp
and
adc
push
pop
movsl
leave
sub
or
jle
mov
dec
jne
dec
sub
mov
jae
aam
pop
xor
mov
cmp
sbb
jae
dec
lods
out
fcmovnbe
lret
xlat
xchg
cmpsl
and
sbb
and
aam
iret
xor
loope
ljmp
lcall
push
pusha
xchg
add
sbbb
adc
xor
aam
repz
pusha
pop
cltd
push
xchg
push
inc
xor
sahf
adc
inc
enter
mul
daa
loop
in
lret
bswap
xor
lahf
sbb
repz
add
pop
push
mov
in
jnp
in
dec
rep
ljmp
fldcw
sahf
adc
hlt
std
aad
cld
and
push
xor
xor
fimull
inc
loope
out
sub
iret
fwait
dec
jg
jo
int
enter
lahf
mov
and
das
fldl
dec
shl
xchg
rcrb
mov
jne
dec
les
pop
jne
pop
dec
in
int3
ret
insl
sbb
jecxz
cmc
sbb
fs
add
jg
fistpl
icebp
out
adc
push
add
rcr
xchg
sti
dec
add
push
jmp
push
movsb
pop
rorb
ret
dec
cld
jg
aam
out
cld
outsl
pop
pop
pusha
rep
lock
sub
and
fidivrl
enter
data16
into
adc
lret
cmp
adc
mulb
dec
mov
sub
xlat
cwtl
sbbb
stos
inc
jb
sbb
push
cli
mov
or
test
aad
popa
fcmovnbe
lret
sbb
add
out
sbb
stos
out
cmp
neg
ret
and
ret
in
xor
or
in
dec
or
in
clc
in
sub
leave
scas
int3
xchg
adc
and
das
pop
xchg
movhps
sbbb
dec
pop
mov
shrb
add
scas
add
mov
and
inc
dec
out
xor
sbb
mov
mov
cltd
cmp
mov
daa
sbb
fistpll
add
adc
xchg
dec
xor
lock
fsubl
cmc
mov
lods
inc
frstor
xchg
into
sbb
sub
out
loopne
or
inc
mov
test
les
sbb
and
imul
hlt
stc
and
out
mov
es
std
mov
sub
and
sbb
mov
repz
stos
sbb
es
pop
aaa
pop
jmp
std
mov
movsb
sbb
in
push
leave
xchg
pop
shrb
or
fidivrs
mov
and
xor
fmuls
or
or
iret
mov
push
imul
call
mov
sub
pop
sbb
dec
or
sub
cmc
sub
ljmp
push
xor
xor
jb
loopne
jmp
xor
lods
jge
adc
lret
das
int3
xchg
pop
fs
xor
loopne
add
jne
aas
imul
sbb
addr16
loopne
and
enter
and
inc
enter
jecxz
sbb
or
in
enter
and
testl
fdiv
dec
nop
outsb
inc
xchg
mov
mov
add
mov
jno
and
sbb
mov
sbb
cmp
lret
pop
add
sub
xor
push
xchg
jns
cli
imul
lcall
xchg
sbb
sbb
push
and
sub
negb
add
lea
jns
decb
rcrl
sti
adc
jmp
ds
or
fdivl
pop
insl
dec
adc
leave
fadd
sar
testl
ret
pop
inc
call
cmp
das
sub
push
imul
add
push
cli
push
push
data16
or
xchg
data16
cmp
push
push
lahf
inc
mov
push
sti
sbb
or
incl
cld
mov
sbb
or
inc
rolb
or
ljmp
push
jne
notl
ret
pop
cmp
fidivrl
add
and
pop
cld
pusha
dec
dec
movsb
andl
ret
cmc
xorl
pop
sar
es
or
add
dec
or
test
add
or
pop
or
fsubrl
ffreep
das
pop
and
movsb
cmp
out
aaa
mov
xchg
add
and
insb
and
rcr
or
sbb
adc
lods
sub
repnz
cmp
and
cld
jmp
add
aas
or
jno
orl
and
push
cltd
cwtl
lcall
mov
mov
mov
inc
mov
cmp
es
aaa
mov
xor
mov
adc
addr16
mov
fcmovb
dec
cmp
mov
ds
mov
sub
cmpsl
push
pop
inc
out
xchg
mov
cld
testl
stc
push
or
repnz
aam
lock
ret
sbb
rcrl
idivl
add
push
insl
mov
adc
ljmp
je
das
mov
sarl
jnp
shrb
sbb
mov
out
cltd
test
pop
fucomi
test
jo
push
adc
sub
mov
xor
out
add
les
leave
aam
mov
mov
or
cmpsb
rclb
into
push
adc
pop
pop
sbb
fimuls
xlat
aaa
dec
adc
push
sbb
fsubrp
push
in
out
std
cmc
mov
and
dec
sahf
pop
cmp
pop
sub
mov
push
and
xchg
popa
daa
outsb
leave
push
mov
int
push
stc
movsl
les
mov
mov
testb
xchg
jmp
clc
fiadds
jnp
cmp
mov
cmp
jbe
aas
xchg
ds
ds
out
inc
mov
push
test
mov
dec
xchg
pop
dec
into
xchg
jb
out
icebp
les
push
hlt
aaa
xchg
pop
divb
push
call
jo
or
jno
js
jae
adc
ds
shr
inc
sbb
cltd
sbb
push
jbe
outsb
pusha
dec
mov
ja
add
push
sti
xchg
sub
inc
out
es
pop
xchg
test
push
adc
mov
xchg
pusha
jl
nop
imul
sahf
pop
jns
pushf
arpl
mov
fsubl
xor
pop
les
push
jle
jbe
xor
pop
jle
pop
cmp
nop
fs
call
xchg
imul
jle
cmp
jge
xor
mov
push
push
mov
fwait
jo
jns
adc
mov
rolb
add
out
pop
fidivrs
dec
xchg
xchg
lods
lahf
jge
cmpsb
jbe
mov
mov
push
push
mov
inc
ja
mov
jae
cmp
mov
xchg
into
pop
cs
ljmp
adc
xchg
in
inc
xchg
std
xchg
mov
cmp
inc
testb
dec
lods
mov
fidivrs
lahf
rcr
shrb
jecxz
dec
out
jns
int3
pop
stos
aaa
iret
insb
mov
pop
inc
into
loopne
push
in
pop
outsl
mov
lcall
xchg
into
addps
sbb
push
aas
les
push
mov
pop
push
ficomps
push
ss
std
pop
out
pusha
jbe
imul
lock
ss
les
popa
xchg
mov
bound
out
pop
fidivs
pop
inc
sbb
daa
sbb
out
jg
inc
sbb
mov
add
inc
ficoms
jns
add
mov
or
into
mov
sbbl
sub
cmp
pop
pop
mov
outsl
pop
pop
ja
stos
ss
xchg
push
into
push
inc
inc
push
sahf
inc
xchg
mov
dec
aaa
push
jo
jbe
es
leave
imul
sbb
jns
jl
push
pushf
pop
cmp
ret
mov
nop
push
shrb
ret
sbb
xchg
inc
shr
mov
dec
fwait
push
mov
lods
add
test
mov
imulb
mov
mov
lea
sahf
imul
cltd
pusha
outsb
ds
xchg
cmp
into
stos
lcall
sahf
jae
pop
movsl
mov
cmpsl
jno
aaa
insb
mov
jb
retw
mov
lret
enter
or
sarl
aas
jl
push
andb
dec
mov
fisubrl
into
pop
xchg
out
mov
cmp
out
pushf
imul
mov
fistl
stos
cmpsl
lods
xchg
mov
mov
push
mov
lcall
into
sahf
fsubl
pop
test
stos
pop
mov
mov
pop
int
aad
xlat
rcr
fcmovnu
aam
mov
cli
adc
mov
in
fsts
mov
jmp
stos
test
pop
std
insb
aad
mulb
ret
mov
mov
jge
pop
incb
aad
lock
jl
jae
mov
jg
mov
aad
adc
les
xchg
push
push
pop
pop
xchg
insl
cld
lods
cmpsb
mov
push
imull
xchg
dec
xchg
stc
notb
jne
sbb
test
pop
jns
cmp
aaa
shrl
cmp
dec
pop
out
cld
bound
shlb
xlat
add
mov
cmp
ret
sub
inc
push
cmp
mov
inc
js
neg
push
mov
mov
aas
cmp
mov
mov
dec
sub
inc
dec
jbe
push
mov
addr16
neg
in
sbb
jne
pop
aas
ds
lahf
aaa
cld
stc
mov
in
push
pop
faddl
pop
mov
cmp
cmp
xor
mov
dec
dec
dec
shlb
add
and
pop
pop
push
inc
aas
aas
sub
cmp
inc
dec
daa
mov
loopne
sbb
ds
jmp
mov
cwtl
xor
inc
sarb
jecxz
fsubrl
mov
sub
cmp
call
in
ss
pop
cs
mov
cwtl
xor
sub
enter
and
jo
cmc
scas
stc
jle
inc
cmc
lods
les
sub
inc
jmp
mov
scas
mov
mov
xchg
cmp
out
mov
mov
and
and
push
cmp
repnz
mov
push
dec
cmp
dec
xor
mov
in
add
mov
cmp
push
pop
mov
cmp
mov
push
lds
out
push
mov
cmp
jnp
jnp
jp
out
or
neg
out
add
adc
sbb
jle
mov
das
shlb
fiaddl
add
pop
jno
data16
sti
repz
js
and
push
idivb
not
stos
mov
out
or
fucom
aad
pop
jle
mov
cli
call
out
lret
int3
clc
push
or
aad
stc
adc
jne
mov
push
or
xchg
repnz
cs
std
cwtl
adc
in
rol
mov
test
repz
int
fadds
imul
sbb
fcmovnu
push
fdivrs
out
aad
pop
mov
clc
mov
cmpsb
mov
lea
mov
jmp
cmpsb
mov
mov
or
loop
repnz
cmp
stos
jnp
push
adc
pop
popf
mov
fsubs
mov
or
shll
sbb
aam
dec
insl
das
mov
je
fdivrs
mov
fiaddl
bound
sub
push
inc
sbb
sub
shr
leave
clc
adc
data16
ja
iret
mov
sbb
shlb
ss
jge
les
cmpb
cmpl
inc
ffree
test
cmp
inc
jecxz
mov
inc
in
mov
cmp
inc
xchg
nop
arpl
add
sub
loop
addb
jbe
inc
jns
rorb
sub
outsb
cmp
push
pusha
and
mov
xchg
pop
cmpsb
lods
sahf
xor
cmpsl
nop
push
mov
mov
outsb
xor
aad
pop
idivb
push
lock
inc
in
test
rclb
inc
insl
xor
sub
fisubrs
mov
aad
ds
jp
inc
ja
pop
cmp
outsb
inc
and
ja
mov
xchg
jp
mov
mov
dec
mov
xchg
aad
fwait
daa
mov
xchg
xchg
lcall
stc
jle
mov
fdivs
int
scas
in
je
stos
fmuls
dec
out
xor
jne
xor
pop
sub
cmpsb
push
sbb
xor
fmull
idivb
mov
outsl
mull
xchg
inc
mov
lods
push
mov
sub
cmpsb
sub
sub
mov
js
lahf
push
push
pop
scas
mov
jbe
hlt
jb
sbb
mov
sar
or
dec
mul
jo
dec
xchg
fisubrs
aad
push
das
mov
push
ljmp
inc
push
lret
cmp
into
xchg
dec
psrlq
dec
pop
fdivrl
pop
mov
lock
push
pop
push
cmpsl
mov
es
and
sahf
popf
and
push
fisubl
dec
lock
ljmp
es
xchg
ja
adc
dec
push
lea
mov
push
out
arpl
ss
or
dec
or
shll
push
and
cmp
jbe
cmp
scas
imul
or
dec
push
rclb
mov
jbe
outsb
mov
push
data16
sub
outsb
mov
mov
push
or
lods
xchg
sbb
jle
fidivrl
imul
shll
jo
outsb
sar
dec
sub
mov
out
test
push
dec
dec
out
push
push
and
lret
mov
pop
or
out
insb
inc
out
ja
push
jl
imul
mov
loope
lds
dec
dec
hlt
pop
inc
ljmp
test
divl
push
leave
aas
pushf
jp
scas
cltd
jp
lret
jb
xchg
jle
sbb
xchg
push
dec
xchg
mov
lods
insl
or
imul
stos
jp
loop
push
idivl
frstor
loop
jnp
andb
push
loop
sub
lds
cmc
aas
outsl
aas
jecxz
mov
pop
sarb
push
ret
mov
mov
mov
pop
mov
jle
cmp
cmpsl
mov
mov
xchg
sbb
push
fwait
cmp
mov
pop
sbb
lods
xchg
sbb
and
adc
mov
scas
jo
mov
in
adc
stos
jmp
aaa
sub
jl
jb
sahf
xchg
bnd
rolb
mov
add
mul
push
and
out
pop
jl
pop
push
ret
bound
push
push
imul
pushf
aad
pop
mov
add
mov
addr16
or
jno
divb
hlt
jnp
shlb
xchg
popf
pusha
adc
movsb
imull
nop
mov
xor
mov
out
es
mov
jb
xchg
int3
pop
or
xor
push
sub
mov
incb
lret
scas
fs
test
and
fistps
out
es
mov
xchg
test
lds
mov
xchg
call
scas
sbb
add
push
cli
jbe
fs
adc
outsb
call
inc
jbe
inc
mov
and
inc
sahf
cltd
outsb
and
jb
aad
ja
mov
es
cmp
xchg
jmp
xchg
cmpsb
adcl
adc
push
add
lret
aam
dec
jbe
dec
jg
push
bound
fisubrl
test
into
pop
inc
or
shlb
xor
dec
ret
loop
xchg
imul
out
dec
scas
faddp
dec
outsb
or
jp
notb
negb
sbb
push
gs
adc
sbb
sbb
sbb
and
dec
hlt
jp
xor
lcall
cmpsl
mov
movsb
addb
jle
shll
adc
pop
pop
pop
mov
out
mov
xorb
movsl
xchg
jb
dec
jo
js
andl
loop
jp
lea
cmpsb
mov
fisttpl
cmpsb
aam
test
loop
jle
call
inc
mov
aad
dec
cmpsb
mov
clc
pop
enter
mov
add
pop
insb
rorb
inc
pcmpeqd
adc
adc
jl
pop
xorb
dec
jp
xchg
je
hlt
mov
pop
jp
dec
cmpsb
xchg
cmp
mov
pop
mov
mov
jnp
popa
in
jbe
cmpb
mov
sbb
mov
push
mov
ja
mov
cmp
gs
pop
mov
add
lret
pop
repz
in
jbe
loop
cwtl
mov
dec
xchg
pop
mov
bound
out
addr16
sbb
mov
jne
data16
ds
and
and
cmp
jbe
cmp
jp
jnp
aaa
ds
jo
cmpsb
lcall
xchg
add
shlb
pop
out
aas
mov
lock
xchg
xchg
dec
jnp
and
cmp
sbb
push
push
outsl
push
push
aad
jl
pop
jmp
pop
mov
faddp
sbb
mov
ds
outsb
jl
shrb
into
sub
jmp
mov
inc
inc
cmpsl
ret
notb
maxps
cli
xchg
pop
adcb
push
adc
js
lahf
dec
push
sbb
inc
cmp
fisubl
cli
mov
stos
xchg
push
xchg
dec
xchg
pop
loopne
subb
xchg
inc
loopne
jbe
cli
ljmp
mov
xor
jb
mov
push
lahf
jbe
fimuls
rolw
jno
rcrb
push
pop
mov
loope
inc
mov
mov
and
sahf
mov
dec
dec
inc
into
and
aad
lea
es
inc
xor
cmp
push
mov
jp
sbb
or
jle
jb
pop
xchg
inc
dec
inc
push
addl
popa
sub
data16
adc
enter
dec
mov
jb
push
sbb
adc
jbe
mov
jbe
stos
mov
mov
out
clc
cmp
mov
xchg
xor
xchg
xor
or
jbe
in
jge
out
sbb
iret
jae
cli
outsb
insb
push
rolb
dec
rol
inc
out
sub
shlb
aam
mov
push
divl
mov
loop
lcall
push
push
call
int
imul
je
xchg
jb
sbb
and
bound
in
jns
mov
sarb
inc
add
cmpsb
js
ss
sub
cmp
pop
filds
mov
ljmp
push
out
jbe
js
sub
jne
mov
jns
ss
movsl
mov
nop
mov
xchg
loop
mov
fnstcw
shl
jne
cli
insl
gs
mov
subl
pushf
cmpsb
mov
lret
es
cmp
sbb
rcrb
jl
sub
in
dec
out
out
popa
inc
mov
mov
mov
mov
jmp
loop
jle
inc
and
jno
push
xchg
pop
add
pop
into
lret
mov
pop
stc
dec
sahf
push
jno
pushf
jmp
sti
mov
aaa
bound
push
mov
add
mov
loopne
jp
out
cmp
jmp
mov
insb
aas
fs
adc
scas
mov
mov
jp
pop
push
bound
ret
sub
shl
xor
hlt
inc
inc
add
push
lods
inc
ljmp
lcall
rcrl
pop
xchg
sbb
push
cmp
xchg
dec
adc
scas
test
addr16
jle
xorb
or
vpcmpeqd
mov
cwtl
gs
jbe
imul
lods
push
push
insb
insb
add
daa
cmp
sbb
xchg
inc
adc
dec
out
push
mov
xchg
std
jp
je
les
data16
mov
loopne
inc
push
jbe
mov
push
gs
push
ss
xor
outsb
dec
jnp
cvtps2pd
adc
adc
dec
inc
or
addb
pop
mov
cli
inc
or
int
jnp
pop
aaa
mov
out
out
push
out
pcmpeqd
xchg
dec
in
aaa
mov
cmc
int
repz
mov
push
push
xchg
mov
push
enter
or
out
xchg
fstpt
sarl
int3
jo
lret
pop
sahf
stc
outsb
clc
jp
cmp
inc
add
jp
mov
out
out
cs
pop
and
inc
inc
xor
push
pop
push
xchg
out
sub
out
insb
jecxz
cmc
dec
xchg
outsl
dec
and
int3
jb
jle
fs
xor
js
cmpsb
xchg
gs
test
popa
icebp
mov
imul
adc
mov
fidivs
sahf
ds
pushf
xchg
ss
inc
mov
adc
mov
add
push
cli
cmpb
push
jbe
mov
lret
jp
push
dec
add
ds
cmpsl
scas
mov
outsl
negb
mov
push
enter
inc
add
add
push
add
inc
sbb
xchg
enter
cmp
lret
adc
insl
xor
es
ja
inc
hlt
push
jbe
xchg
push
mov
outsb
push
mov
mov
push
mov
jo
bound
movsl
mov
lahf
mov
xchg
push
xchg
xchg
jp
sbb
mov
test
mov
sub
mov
out
push
dec
div
stc
add
inc
lahf
fidivrl
dec
xlat
push
mov
pop
sbb
push
scas
decl
lret
decl
addr16
movsb
arpl
mov
sti
cwtl
pushl
push
cmp
xchg
pop
repnz
xchg
jmp
lcall
mov
jbe
test
cmpsl
scas
outsb
movsl
inc
push
mov
outsb
ret
mov
adc
test
out
or
mov
mov
jp
jnp
push
jp
inc
jg
jbe
cmp
neg
cmpsl
dec
and
dec
inc
cmp
push
inc
jp
in
iret
pop
push
sbb
fnsave
pop
idivb
lea
mulb
dec
cmc
or
add
pop
ss
pop
cs
into
nop
push
call
jbe
imulb
xchg
popa
mov
jp
shlb
pop
jp
push
ds
dec
pushf
mov
cmp
xchg
sub
jbe
cmp
call
ret
into
or
pusha
fsubp
inc
iret
cld
dec
add
inc
testl
jbe
ss
mov
arpl
rcrl
hlt
push
pop
jbe
popf
pop
sub
lahf
pop
cli
xor
out
push
out
jbe
aas
mov
mov
push
outsb
ds
sbb
jbe
mov
dec
popf
iret
cmp
inc
sub
std
xor
ss
mov
mov
into
xchg
jg
push
fdivs
cmp
cmp
into
in
mov
sub
mov
add
sub
mov
inc
jbe
lahf
pop
std
mov
inc
loop
pop
outsb
mov
pop
mov
movsl
mov
repnz
inc
ficoms
jl
cwtl
scas
mov
outsb
xchg
pop
jp
lahf
jp
inc
pushf
ret
cmp
cmpsb
das
xchg
test
mov
or
movsb
add
sahf
int3
sub
rcl
out
fsubrs
mull
sub
and
xor
jecxz
pop
sub
pop
push
and
push
data16
rorb
mov
mov
pop
mov
cmpsb
mov
push
xchg
pop
std
jg
dec
cmpsb
jg
js
xchg
nop
jge
add
jbe
lcall
test
lret
jo
lret
push
inc
push
addb
jbe
mov
adc
jb
pop
imulb
jl
loope
mov
inc
lods
pop
mov
scas
fdivrl
ss
stos
inc
in
xor
call
pop
scas
push
xor
push
scas
xor
add
enter
or
mov
repz
movsb
add
cmpsb
sub
add
lret
mov
enter
pop
push
aaa
dec
lahf
jge
testl
mov
imull
jp
fisttpl
outsl
jo
or
push
mov
sub
dec
ss
out
sti
mov
stos
mov
testb
cmp
in
cmp
cli
xor
daa
notl
into
cs
and
lds
and
cmp
add
ss
inc
push
js
xor
into
xchg
pop
dec
mov
dec
in
or
jbe
cmpsl
pushw
test
push
outsb
idivl
jbe
repnz
dec
cmp
lret
and
leave
xchg
ss
lret
cmpsl
jb
lods
mov
stos
dec
sahf
add
sar
push
cli
jp
cmpsl
mov
mov
mov
jb
jbe
sahf
jbe
mov
in
adc
xchg
push
adc
adc
push
out
cmp
add
stos
sub
xlat
es
aaa
mov
sbb
inc
scas
inc
or
jb
cmp
xorb
xor
mov
lea
jns
xor
push
or
push
mov
mov
imul
jb
or
xchg
test
subb
xchg
ljmp
jne
gs
dec
sbb
lret
jae
cmp
xor
enter
mov
out
xchg
mov
sbb
hlt
inc
mov
inc
loop
jbe
das
mov
sub
sub
negl
xlat
jbe
jle
mov
mov
leave
shlb
mov
cmp
insb
jl
or
sar
jbe
out
ss
out
mov
jp
jns
inc
xor
pop
jp,pn
xor
jp
aam
xchg
pop
or
mov
inc
arpl
mov
xchg
push
dec
es
xor
dec
mov
sub
mov
ja
out
leave
jo
stos
pop
lret
push
int
shl
shlb
mov
and
repnz
ficomps
fbstp
inc
push
sbb
cmp
inc
add
cmp
push
push
push
adc
jp
mov
mov
repz
scas
outsb
push
or
push
lcall
add
push
xchg
pop
push
dec
sub
xor
imul
jmp
mov
loop
sbb
dec
dec
insb
scas
jmp
push
into
inc
gs
push
addb
pop
sahf
mov
dec
cltd
mov
aas
pop
pop
jp
cmpl
jmp
fildl
mov
scas
call
cmp
sub
ss
leave
aaa
imull
enter
xor
dec
adc
push
dec
jp
gs
cs
lock
mov
sub
lcall
shlb
and
pop
sbb
cmpsb
popf
xchg
incb
adc
scas
retw
mov
iret
bound
pop
xchg
mov
push
mov
dec
jp
aas
inc
enter
test
add
fucomi
xchg
jp
inc
jns
sbb
push
jae
cmp
sahf
cmpb
out
cmp
ss
js
dec
ror
mulb
push
loopne
push
jbe
mov
adc
mov
cmp
xchg
push
push
std
stos
js
add
adc
stc
addr16
cmpsb
mov
jbe
jne
cmp
xchg
pop
jp
pushf
dec
push
out
je
pushl
mov
jbe
fistl
push
dec
es
cli
inc
cmp
nop
jbe
ss
mov
inc
xchg
and
jb
dec
cmp
pop
inc
and
sbb
mov
xchg
cwtl
outsl
adc
inc
xchg
add
mov
push
adc
dec
ja
mov
mov
sub
fsubl
push
and
push
mov
push
inc
mov
xor
icebp
mov
pushf
xchg
jb
popa
jle
scas
sub
mov
lods
lds
mov
fsubrs
pop
mov
fsubrs
negb
pop
mov
ficompl
loopne
push
push
pop
outsb
jo
data16
pop
dec
repnz
mov
dec
loop
mov
in
test
xchg
cmpb
or
jb
xor
mov
inc
leave
jle
push
data16
push
cmp
jp
xor
or
xchg
lea
dec
hlt
scas
mov
fiadds
lcall
imul
inc
push
subb
mov
mov
pop
sbb
mull
or
mov
add
push
jg
int3
mov
int3
lret
mov
jbe
adcl
cmpl
out
mov
mov
and
fs
data16
adc
ds
add
xchg
sub
loopne
sahf
lds
jle
shlb
insl
flds
cld
xchg
xchg
lods
loopne
orb
jle
loop
orb
aaa
mov
cmpsb
xchg
push
push
add
dec
loop
jl
lret
cmp
loop
cmp
mov
out
iret
pop
mov
divb
push
xlat
data16
daa
divl
cmp
adc
out
push
jp
mov
push
xor
loop
sbb
mov
cmpsl
mov
lret
outsb
ds
fistpll
movsl
enter
xchg
out
cmpsb
push
jbe
clc
mov
test
das
push
call
mov
ljmp
cmp
clc
mov
addb
cmpl
cltd
divb
mov
and
mov
and
inc
sbb
adc
ds
push
or
xchg
mov
xor
andb
pop
imul
and
js
sub
jb
out
push
xchg
into
mov
data16
cld
mov
jb
bound
xchg
imul
push
add
and
cs
aaa
jle
roll
sub
insl
imul
rcll
push
dec
arpl
faddl
mov
inc
negb
push
and
inc
cmp
add
jle
or
adc
pop
out
mov
fiadds
ss
mov
pop
cmpb
jbe
mov
lcallw
js
dec
push
sarb
int3
jl
push
inc
ljmp
addb
jg
sub
or
jo
dec
scas
outsl
outsb
lret
insl
or
or
es
testb
fstpt
into
jle
sbb
gs
ficoml
inc
mov
cmpsb
mov
and
mov
divb
ror
aad
lcall
sub
cmp
xor
lock
sub
mov
aam
scas
ss
js
or
scas
int3
or
dec
aam
jl
push
push
mov
dec
lret
lret
pop
mov
cmpsl
fstl
mov
push
aam
pop
push
in
jns
out
sti
xor
outsb
lret
add
jbe
addb
int3
inc
fldt
sub
andb
adc
loope
cmpsl
addr16
pusha
scas
dec
inc
mulb
xchg
fs
mov
push
cmp
mov
ds
push
mov
inc
test
push
pop
sahf
push
jg
mov
pop
sarb
xchg
lret
fdivrl
rcr
inc
ftst
inc
jle
test
sbbb
mov
das
lret
ja
bound
loopne
imul
ret
clc
mov
lret
dec
loop
dec
mov
mov
dec
shll
push
orl
test
sub
lock
xchg
xlat
lcall
fcom
inc
es
cmp
push
cwtl
push
cmc
mov
das
push
dec
push
lcall
jg
daa
xchg
sub
jno
sub
xchg
adc
push
out
ljmp
push
mov
adc
lcall
fiadds
adc
pop
mov
lret
fwait
popa
xchg
je
push
pop
mov
js
mov
xchg
xlat
mov
enter
fidivs
div
scas
cmp
aad
cmp
lds
jbe
mov
mov
js
xchg
pop
pop
sarb
pop
or
scas
dec
mov
add
clc
mov
sub
dec
push
inc
xor
es
jo
cmp
xor
movsl
fwait
mov
xchg
popa
stc
sti
mov
mov
lahf
and
mov
lock
mov
or
leave
into
pop
sub
das
mov
mov
mov
sbb
or
pop
xor
push
ret
loopne
push
mov
fidivrs
rolb
sbb
outsb
popa
sub
xor
icebp
and
push
push
int3
mov
adc
es
xor
insl
xorb
sbb
adc
fwait
mov
push
leave
leave
pop
jmp
mov
ret
rorl
push
mov
aas
pop
xchg
lea
xorl
into
jnp
mov
ficomps
inc
rolb
nop
shrl
add
ret
push
xlat
or
clc
xor
xchg
push
pop
mov
mov
inc
icebp
enter
sti
rol
lret
call
xchg
jno
std
fistpll
or
aad
sti
loopne
js
pusha
pusha
push
sub
out
out
aas
outsb
lret
aas
inc
xor
mov
xchg
mov
xchg
call
jp
mov
and
xor
movsl
mov
and
inc
stc
in
mov
mov
cwtl
dec
mov
mov
or
jb
into
lret
mov
mov
dec
test
mov
arpl
hlt
sbb
inc
cmp
or
aam
aam
sti
pop
and
ret
xabort
and
push
mov
inc
sub
mov
sbb
std
out
into
sarb
mov
jae
rol
sahf
les
adc
stos
je
sub
bound
les
iret
jb
adc
insb
xor
rcll
popa
adc
and
mov
mov
enter
fld1
mov
push
push
push
or
sbb
js
call
movsb
jle
push
mov
out
mov
sti
cmp
mov
xchg
test
in
pop
vmwrite
push
rorl
stos
sbb
inc
ret
jecxz
sarl
and
pop
push
jnp
ret
jg
or
jmp
sbb
push
or
mov
inc
mov
mov
xor
or
sbb
mov
inc
mov
sub
push
idiv
mov
les
push
mov
and
pop
insl
pushf
mov
jo
sub
les
inc
aad
sub
insl
sub
clc
add
popa
into
sub
fists
out
fcmovb
lret
cmp
in
xorb
sub
add
imull
sub
pop
orl
shrl
jmp
lret
xchg
shll
lret
mov
sub
sbb
jae
int3
or
aam
cli
mov
ja
push
cli
lods
inc
mov
repz
into
rorb
sbb
pop
ficoms
push
cmp
pop
push
repz
orl
arpl
lret
or
xlat
add
or
in
sbb
call
in
clc
stc
cld
addr16
mov
lahf
add
cmp
sbb
or
idiv
sarb
pusha
xchg
enter
lret
sub
enter
adc
sti
pop
clc
push
stc
cmp
mov
push
jnp
pop
std
inc
insb
cs
add
jle
loop
int3
push
aam
scas
xor
aas
mov
into
xlat
rcll
push
add
pop
int3
and
inc
into
int
ljmp
and
or
cmp
sbb
cmp
movsl
cld
iret
out
mov
mov
push
push
popa
nop
popa
mov
inc
cwtl
dec
repz
inc
fiadds
into
loope
jmp
push
lret
sarb
sarb
rcrl
shrb
mov
fs
rcl
xor
ret
push
push
pop
outsl
movsb
pop
jmp
jae
fldt
fiaddl
int
pop
out
push
cmp
sar
pop
add
sub
or
add
cli
fcoms
add
mov
andb
mull
sar
cmpsb
repz
std
jne
sti
js
clc
add
int
sbb
or
rorl
icebp
mov
push
xorb
ror
pop
pusha
ret
or
jae
sub
xchg
sti
xor
lahf
lods
dec
int
add
sbb
sub
inc
mov
pop
lcall
jg
js
ds
out
pop
lds
push
adc
push
call
pop
and
std
sbb
enter
push
clc
in
xor
testb
stc
pop
aad
dec
cmp
inc
rcrb
ljmp
lods
dec
jb
jb
push
aad
clc
rolb
arpl
lret
sbb
and
roll
sbb
aad
fdivrs
pop
hlt
daa
sbb
sbb
div
incb
sub
mov
inc
push
and
sbb
sbb
lock
stc
sar
lock
int
mov
sarl
sub
add
cmp
or
fmulp
leave
cmp
add
lret
lret
push
scas
or
add
jmp
testl
mov
add
push
or
sub
add
lds
inc
pusha
lret
xchg
ret
jecxz
lret
or
add
cmp
clc
decb
adc
push
repnz
into
iret
mov
std
jmp
sbb
adc
fmul
data16
mov
mov
push
xchg
mov
inc
dec
inc
xlat
out
lahf
aad
rol
daa
push
add
int
and
cmpsl
fimull
mov
hlt
push
into
out
shrb
sti
lret
enter
mov
stc
inc
xor
mov
test
add
sti
cmp
in
cmp
cli
leave
test
std
inc
in
int
lret
push
clc
clc
or
push
into
test
out
dec
loopne
adc
or
xchg
push
lcall
cmp
fdivrp
xor
or
mov
mov
inc
jo
xlat
inc
or
xor
jmp
out
ljmp
lods
repz
imul
sbb
dec
outsb
mov
mov
out
pop
and
cs
mov
sbb
insb
icebp
shlb
loop
les
cmpsb
or
mov
xor
mov
mov
xchg
fwait
sbb
pop
jge
inc
mov
xchg
test
mov
cmovb
xor
xchg
mov
sub
cmc
stos
lahf
dec
mov
ss
dec
cmpsb
push
mov
xor
mov
pop
jne
test
sbb
adc
mov
push
mov
jne
adcl
xlat
mov
daa
cs
int3
repz
pusha
adc
mov
into
push
add
es
cmp
in
mov
sub
int3
testl
in
loopne
xor
pop
sahf
lret
mov
pop
int3
xchg
push
imul
notl
mov
lretw
js
cmp
aaa
fnstcw
xchg
std
out
cmpsb
shl
push
mov
loop
jbe
mov
shll
fwait
loop
les
test
divb
mov
inc
mov
es
les
arpl
mov
push
cmpsl
mov
cli
xchg
xor
rcll
pop
stos
mov
sub
ret
cmpsl
sub
nop
and
cmp
mov
mov
ret
xchg
cltd
les
adc
shll
lds
sub
fs
dec
cmc
xor
ss
cmp
pushf
adc
hlt
out
or
rcrb
push
add
es
mov
out
mov
mov
arpl
sbb
sub
andl
adc
negb
mov
rclb
mov
cmpsl
mov
fwait
xor
push
subl
push
cmc
mov
mov
mov
lret
xchg
mov
aam
mov
xchg
imul
fcompl
cmc
andl
dec
mov
mov
pop
and
push
sub
xchg
adc
mov
inc
push
psubb
jo
repnz
movsl
shlb
cs
adc
mov
dec
iret
fcoml
loop
mov
push
pushw
mov
xchg
mov
fisttpll
fwait
ss
shl
mov
inc
mov
pop
dec
inc
xchg
mov
out
push
lods
outsb
adc
sbb
cmp
mov
notl
sbb
lods
les
subb
dec
inc
inc
mov
jge
fstl
lock
insl
and
icebp
pop
push
mov
dec
sar
jl
mov
jbe
mov
mov
mov
lock
sub
mov
les
dec
ljmp
daa
inc
mov
outsl
and
mov
mov
mov
add
adc
sbb
pop
push
call
mov
mov
cmova
mov
notb
sub
mov
xor
push
jo
add
test
es
cmp
push
dec
leave
jg
inc
mov
loope
mov
int
ss
rep
divl
lahf
js
jno
adc
les
adcl
xchg
and
adc
add
push
add
mov
xchg
mov
outsl
and
mov
xchg
out
mov
out
add
add
inc
jle
sub
mov
cld
ss
rcll
cmpsl
mov
js
leave
imul
sbb
mov
stos
fcoms
mov
push
call
test
xchg
faddp
jp
aam
leave
enter
std
mov
fstpl
cli
lret
ss
repz
rcll
daa
mov
xor
adc
sub
xchg
push
lret
mov
mov
push
jbe
mov
pop
mov
xorb
mov
mov
dec
xorb
cmc
xchg
icebp
les
push
mov
or
ljmp
hlt
testb
mov
mov
mov
pop
out
test
push
popa
add
mov
ljmp
adc
lcall
cli
popa
hlt
jbe
inc
stos
les
mov
fdiv
mov
pop
ret
movsb
in
and
ss
jp
orb
or
mov
mov
pop
mov
sbb
fs
rolb
imul
in
rcll
stos
xor
mov
xor
xchg
mov
pusha
adc
sub
jns
push
test
test
addb
or
mov
push
and
aad
btr
into
dec
inc
out
pusha
jne
push
mov
repz
cmc
jp
jbe
sbb
mov
pusha
mov
dec
lcall
fwait
loope
enter
outsl
or
jmp
mull
dec
jns
or
mov
push
push
pusha
pop
cmp
sub
dec
or
mov
and
mov
cmp
or
add
ss
cmp
jl
and
stc
push
in
cmp
sarb
and
dec
jne
fs
mov
scas
sub
xor
jae
inc
aaa
jns
cmp
arpl
jae
xor
test
cmp
lret
pushf
mov
jbe
and
daa
or
out
adc
mov
push
mov
inc
cmp
popa
mov
xchg
jmp
ss
sub
sub
jo
xchg
arpl
rolb
insl
lds
push
mov
aam
fistpll
mov
adc
or
pop
test
sbb
mov
daa
ret
aam
imul
xchg
mov
pop
mov
sti
inc
pusha
je
shlb
jl
movswl
adc
push
lock
stos
ds
push
faddl
sbb
loopne
vmovhpd
insb
mov
lods
sbb
xchg
push
sub
cmp
insb
mov
popf
lds
out
mov
dec
js
mov
arpl
pop
stc
mov
bndstx
adc
test
jns
cmp
push
mov
and
bound
xor
les
lret
pop
push
sub
mov
xchg
sbb
jp
xchg
rcrl
repz
test
vmovddup
fmull
xor
test
ljmp
mov
rcr
mov
mov
out
pop
push
xor
add
ljmp
rorl
mov
push
inc
les
dec
push
inc
js
and
out
cmp
movsb
push
mov
adc
lret
arpl
add
sub
dec
outsb
es
sbb
arpl
gs
and
js
xchg
sbb
das
sbb
out
outsb
dec
mov
repz
push
cmp
mov
nop
ss
fs
mov
sub
ss
mov
jecxz
mov
les
or
mulb
leave
rol
into
data16
arpl
xor
movsl
mov
mov
push
inc
fmull
sub
mov
fsubs
shlb
sub
mov
shrl
mov
jne
bnd
rolb
mov
cmp
jb
adc
push
mov
or
mov
ss
sahf
shlb
es
adc
mov
xor
push
dec
fnstcw
xchg
mov
xor
mov
mov
call
pop
or
loop
pusha
inc
mov
xchg
cli
jae
negl
outsb
mul
int
std
dec
loop
inc
pop
mov
pushf
out
lods
xor
jbe
iret
or
popf
xchg
test
mov
or
insl
push
jecxz
daa
mov
int3
push
pusha
jl
out
mov
outsl
lret
out
data16
xchg
loop
or
xchg
repz
mov
sbb
ss
addr16
lahf
or
adc
jge
arpl
and
insl
dec
rcrl
mov
mov
and
push
sbb
mov
mov
sub
mov
and
jge,pn
aas
mov
push
testb
orl
loopne
loop
fiaddl
lods
jp
iret
int3
shl
mov
ss
outsl
ss
xchg
mov
mov
mov
push
sub
mov
daa
sbb
ds
mov
cmp
out
mov
sbb
lahf
mov
jbe
popf
leave
cmp
cmp
pushf
data16
xchg
mov
dec
mov
fwait
mov
adc
pop
int3
daa
inc
mov
push
cmp
cwtl
lret
mov
outsl
std
fmull
jns
adc
bnd
pop
xorb
test
outsl
test
nop
shll
test
aam
mov
xchg
ss
enter
outsl
adc
stos
mov
and
push
rcrl
jbe
mov
call
mov
mov
xor
inc
mov
scas
xchg
out
repnz
mov
mov
cld
neg
mov
daa
imul
lcall
ljmp
cmp
mov
cwtl
in
les
sub
stc
and
and
xor
or
ss
clc
dec
mov
sub
int
or
mov
dec
xor
lret
push
pop
mov
fs
in
mov
jae
push
mov
xchg
dec
xchg
pop
pop
adc
mov
repnz
xchg
ss
mov
loopne
sub
xchg
out
inc
or
aad
aaa
jns
ljmp
adc
pop
loop
test
outsb
cmp
and
aaa
mov
sbb
xchg
push
pop
fcoml
mov
mov
cmp
andb
xchg
add
xor
loop
fs
adc
inc
push
and
mov
mov
lock
mov
call
and
or
clc
mov
pop
xlat
xor
mov
sub
cmp
inc
push
mov
cmp
and
xchg
add
jmp
mov
loope
and
cltd
inc
push
mov
jmp
out
cmp
insl
cli
popf
jo
mov
fdiv
mov
cmp
cmpsl
add
dec
mov
iret
jns
cmp
cli
mov
mov
adc
dec
incl
lods
sbb
push
push
cltd
cmpl
lcall
cli
jns
push
adc
push
pop
fcomps
dec
fildll
addl
xchg
xor
into
mov
insb
mov
imul
push
movsb
mov
add
outsl
cmpsb
flds
mov
jg
icebp
cmp
push
add
mov
sbb
mov
aad
je
dec
mov
mov
add
pop
mov
adc
ljmp
mov
gs
jnp
hlt
xchg
insl
sub
popa
add
hlt
mov
or
push
dec
or
or
mov
mov
mov
mov
out
push
shlb
aad
shl
jnp
test
lahf
repnz
mov
xchg
mov
fsub
shlb
mov
les
xor
mov
repnz
mov
addr16
and
out
mov
and
sti
es
mov
mov
xchg
in
nop
mov
jmp
sbb
mov
ljmp
jl
xor
mov
test
jno
pop
nop
or
popa
xor
pop
mov
cmp
in
mov
push
int
mov
and
jge
outsl
xchg
mov
lods
jne
lods
add
inc
fstpt
xorb
out
jp
inc
add
xchg
lods
pushf
mov
cmpsl
cmp
jge
fsubs
lret
fcomip
sbb
mov
pop
xchg
pop
js
mov
out
sub
hlt
push
stos
adc
in
xor
aaa
insl
cmpsb
mov
sbb
jecxz
mov
dec
jns
aad
mov
mov
adc
loope
mov
add
adc
push
jo
add
bound
add
rorb
arpl
movsb
in
fs
mov
jnp
xlat
xor
aam
mov
jno
adc
push
add
pop
arpl
lock
in
imul
xchg
lods
repz
dec
mov
enter
fisubs
lds
mov
fcoml
popf
mov
sbb
aaa
adc
inc
mov
and
fs
cmp
sub
arpl
jecxz
or
dec
imul
repz
adc
int
dec
iret
mov
addb
scas
ret
jb
cli
jnp
mov
aam
bswap
loop
mov
adc
adc
mov
fstpl
jno
xlat
mov
insl
cld
and
push
adc
or
stc
loop
stos
xor
mov
int
fmull
adc
pop
cwtl
scas
mov
ljmp
rorl
mov
xchg
aaa
sbb
or
test
ret
and
mov
scas
outsb
xchg
not
jmp
sbb
ror
shl
mov
ss
in
mov
fmulp
push
aaa
jnp
cld
xchg
in
arpl
scas
sahf
add
mov
out
cmpsb
mov
mov
cs
into
rcl
add
inc
insl
push
jbe
fidivl
lds
mov
or
ds
mov
les
mov
sahf
sub
xor
pop
xchg
jg
sbb
nop
dec
cmp
xor
lods
add
or
fbld
dec
jle
testl
mov
jo
ss
bound
mov
aam
mov
inc
mov
mov
mov
idivl
xchg
cmpl
pop
fdivrs
mov
push
insl
jno
out
lcall
mov
jne
stc
pop
shr
es
add
fs
enter
jb
push
mov
push
aam
lods
and
xorb
and
repnz
mov
rolb
test
into
lods
mov
lds
das
jmp
imul
sub
iret
ret
ja
mov
mov
push
movsl
dec
les
loopne
adc
pop
mov
mov
mov
lret
push
sub
xor
sti
inc
lret
aas
pusha
add
xorl
pop
insb
call
pop
mov
mov
hlt
mov
pushf
mov
sti
mov
aad
sub
adc
mov
pop
mov
xchg
push
sub
jno
fnstenv
int
mov
mov
inc
push
dec
xor
es
shll
iret
sub
and
lods
adc
pushf
xchg
mov
xchg
in
movsb
cmp
jle
mov
pop
aas
xor
jbe
test
mov
pop
icebp
cmc
adc
inc
jbe
inc
xchg
adc
imul
cmc
adc
add
mov
jno
mov
repz
push
stos
adc
negl
xchg
or
nop
mov
mov
jae
lods
add
or
push
xchg
mov
in
mov
cltd
movsl
mov
dec
outsb
sub
mov
dec
xchg
out
je
nop
mov
out
mov
leave
test
icebp
mov
ljmp
mov
mov
lods
push
mov
dec
testb
call
dec
cmovbe
and
mov
pop
in
push
les
mov
jmp
xchg
mov
and
xchg
out
jle
dec
aad
ljmp
dec
and
pop
es
les
lea
div
adc
shll
clc
daa
and
mov
int3
or
popf
mov
jne
insl
aam
imul
sbb
add
pop
pop
pop
hlt
in
ss
push
ret
dec
mov
or
in
mov
daa
adc
scas
repz
xchg
popa
mov
or
mov
push
loop
mov
pop
ljmp
xchg
insl
pop
mov
xor
popa
xor
sbb
fs
xchg
mov
aas
adc
add
push
stos
mov
aam
cs
inc
dec
mov
jb
ss
andl
cmp
aas
jp
or
and
lcall
popa
lock
sarl
sub
xchg
cmc
push
aaa
lea
enter
test
add
mov
lods
shll
pextrw
mov
iret
xchg
test
leavew
mov
mov
push
gs
jae
push
jle
mov
repz
les
je,pt
jp
mov
mov
and
dec
mov
push
fs
cmp
outsb
jg
scas
jmp
enter
inc
push
out
iret
ror
sub
nop
fs
and
mov
sbb
mov
jge
jbe
call
and
and
add
je
xor
cltd
pushf
subl
stos
scas
dec
pop
repz
lds
aad
aaa
or
insb
mov
push
int
scas
std
mov
nop
rcrw
dec
fwait
outsb
pop
sub
das
lods
mov
inc
add
je
xor
hlt
test
rcrb
mov
lds
cltd
pop
mov
xlat
or
xchg
in
cmpsb
ds
je
pushl
add
cs
pop
lahf
cmc
xchg
mov
jl
mov
mov
cmp
das
int3
mov
lds
fbld
aad
sahf
sub
sub
xchg
leave
adc
inc
imul
add
mov
stc
orl
mov
rcl
int
adc
or
test
out
mov
mov
mov
cmp
clc
es
adc
xchg
mov
ret
nop
dec
add
mov
ljmp
cmc
shl
xor
negb
jnp
fnstcw
dec
mov
lret
push
mov
in
pop
sub
or
rcr
test
sbb
jle
dec
mov
ret
lds
add
mov
test
mov
push
mov
mov
pop
inc
test
mov
shl
jp
pop
in
jbe
aad
ljmp
jbe
xor
les
cwtl
in
sti
mov
mov
sub
mov
mov
ss
movsb
stos
jns
daa
scas
mov
cmp
les
xor
mov
repz
mov
sbb
mov
mov
dec
lret
aam
mov
dec
cmc
enter
mov
xchg
xor
sbb
movsb
dec
mov
jle
sbb
pushl
movb
mov
sbb
cmp
adc
mov
pop
cmpsl
or
push
stos
mov
add
dec
mov
mov
xchg
and
orb
ds
mov
lret
push
sbb
fstps
mov
dec
scas
test
int
movsb
xorb
bnd
mov
ficomps
xchg
mov
sbb
ljmp
xlat
xor
outsb
mov
idivl
cmpsb
fwait
enter
xchg
mov
pop
push
or
out
inc
dec
mov
mov
dec
xchg
push
mov
movsb
mov
xorb
ret
lods
fcoml
cmp
mov
xchg
orl
pop
divb
add
adc
into
mov
daa
cmp
das
sahf
mov
orb
fsubrs
push
mov
mov
test
pop
mov
fisttpl
repnz
xchg
scas
jns
mov
fstl
push
add
inc
mov
mov
jae
pop
mov
enter
lcall
orb
add
jae
mov
lods
lcall
insb
jne
xchg
and
cmp
push
fwait
mov
mulb
xcrypt-cfb
cmpsl
and
inc
fldenv
enter
mov
mov
push
ds
jle
pop
shll
sti
es
dec
xchg
cmpsb
mov
inc
lea
inc
cmp
jl,pt
add
icebp
or
repnz
mov
xor
pop
ret
addr16
into
push
mov
and
shrl
or
sti
mov
ja
push
mov
adc
dec
or
fwait
push
popaw
mov
loopne
repnz
mov
sahf
dec
je
xchg
mov
inc
and
in
cmc
pushf
xchg
rol
adc
lds
clc
mov
xorb
sub
jb
cltd
in
jl
mov
inc
cmc
jbe
fwait
pop
adc
push
mov
aad
add
loope
xor
mov
xor
jne
jo
mov
add
mov
mov
mov
insl
cmp
mov
jp
cmp
mov
or
iret
mov
xor
push
mov
lret
jb
sbb
jbe
mov
mov
mov
push
xchg
in
sub
dec
fdivl
std
adc
jmp
setnp
pop
mov
mov
cmpsl
mov
cmp
push
int
mov
in
xor
mov
aad
scas
cli
idivb
aad
insl
jbe
loope
sbb
incb
stos
mov
addr16
sarl
mov
mov
jbe
pop
lods
mov
mov
es
or
xchg
fimull
mov
les
mov
stos
call
xor
mov
cmovge
xchg
out
in
test
pop
lcall
xchg
cltd
xor
jbe
mov
jmp
mov
hlt
jnp
fdivl
ss
jecxz
mov
pop
add
push
xor
fs
nop
xchg
mov
popa
mov
add
ret
aad
mov
jbe
mov
dec
push
lds
mov
inc
ret
push
adc
hlt
sahf
test
frstor
cwtl
xchg
int
xor
hlt
add
push
popa
inc
stc
es
push
rcrl
cmc
test
cmpb
sub
cs
leave
xor
jbe
mov
test
jns
gs
xchg
mov
arpl
lock
jmp
mov
mov
adc
in
mov
cmpsl
jmp
adc
add
mov
cwtl
stos
mov
inc
push
fdivl
inc
lret
adc
push
and
sbbl
cltd
cmp
aaa
cltd
sub
adc
ljmp
aaa
gs
in
out
push
in
or
mov
out
hlt
cmp
xchg
test
xchg
xchg
xor
pop
mov
mov
cmpsb
sub
ret
out
test
lock
icebp
sub
les
cmpsb
sub
dec
movsl
push
xchg
pop
jae
das
mov
pop
cwtl
mov
mov
shll
lcall
movsb
xchg
cs
adcl
hlt
jne
shll
fisubrl
or
fwait
movsl
xor
hlt
dec
cmpb
popf
and
test
push
jno
xor
xchg
sbb
cmpsl
ljmp
sub
cs
xor
shl
test
push
xchg
rorl
push
dec
cmc
sarb
std
aam
push
icebp
aad
inc
xlat
push
popf
push
lret
cmp
jbe
pushf
pop
icebp
jnp
adc
aam
imul
xor
mov
orl
xor
hlt
insl
test
push
mov
jle
ds
insl
and
mov
pop
mov
inc
ljmp
xchg
sbb
mov
mov
jmp
cmpsb
push
cmp
pushf
mov
cmp
pop
lods
pop
cmpsb
call
cmc
sbb
jne
ss
sbb
cmpl
cld
leave
shl
mov
pop
mov
enter
aad
lret
lds
int3
cmp
iret
xchg
pusha
shll
xor
mov
aad
sarl
mov
sbb
subl
imul
mov
cmp
mov
out
mov
test
xchg
mov
lcall
jne
push
pop
lea
pop
bound
popa
cli
sub
mov
mov
stos
orb
jl
cmp
jbe
outsb
out
mov
mov
push
vcvtpd2ps
push
sub
aaa
add
mov
aad
push
insl
mov
xchg
jno
add
xor
mov
or
icebp
aas
mov
mov
cmp
in
in
les
or
outsb
inc
fsqrt
mov
test
push
popaw
lods
add
pop
add
sti
lahf
or
mov
enter
xchg
mov
in
pop
movsl
add
pop
sub
cmc
loopne
test
xchg
fldt
sbb
sub
and
mov
or
scas
lahf
lock
cmp
in
xor
mov
ss
shl
mov
aam
in
mov
mov
jbe
jne
cs
mov
cmpb
sbb
push
pop
xlat
sub
clc
nop
adc
and
cmp
mov
or
and
sub
sub
mov
pop
pushf
mov
insb
fdivrp
push
cmpb
mov
jle
cltd
pop
inc
dec
mov
daa
sub
and
xor
fs
mov
icebp
add
and
fcoml
insb
mov
je
add
out
sub
mov
std
movsl
popf
les
out
shlb
xchg
push
mov
add
repz
adc
cmp
fucomp
pop
mov
icebp
push
aad
in
into
pop
push
ds
jne
shlb
cmp
fbstp
lods
jnp
cltd
push
mov
shlb
jmp
std
dec
jb
aas
and
fnstcw
cmp
mov
out
sti
pop
fidivs
pop
pushf
in
xor
out
hlt
jbe
mov
mov
cmpsb
fadds
jns
inc
mov
ss
lock
cmc
sub
aad
jl
mov
jns
mov
mov
push
xor
ja
imul
ja
inc
inc
xchg
and
push
push
push
mov
sar
or
dec
fwait
aam
pop
push
or
mov
xor
lds
das
add
notl
scas
jbe
xlat
sarb
cmp
lret
aaa
sar
dec
popf
filds
mov
out
add
xor
push
cmpsb
movb
mov
imul
mov
out
cmp
xor
std
data16
lds
inc
scas
mov
sub
negb
add
std
mov
jecxz
mov
xor
add
xorl
call
pop
mov
lods
mov
les
repz
lods
and
jle
stos
sub
mov
xchg
mov
das
mov
stos
pop
imul
ficomps
ljmp
mov
outsb
pop
test
jge
cmp
fldcw
push
mov
jnp
movsb
xlat
sti
hlt
into
pop
mov
pop
vmwrite
mov
mov
loopne
pop
fcomps
enter
imul
pop
gs
or
sub
inc
mov
pop
mov
dec
push
xlat
lret
mov
adc
mov
or
add
and
fisubrs
lds
lahf
js
xchg
movsb
inc
loop
sti
dec
mov
and
negb
jg
ret
dec
xor
inc
shlb
into
mov
sub
mulps
xchg
out
mov
mov
in
aam
xor
push
cmpsb
loop
insl
ss
jo
lahf
out
inc
mov
mov
cmp
xlat
mov
sub
imul
in
into
repz
mov
pop
mov
gs
fs
add
data16
hlt
test
mov
dec
xor
cmpsb
sahf
lds
jl
push
jecxz
dec
mov
fidivs
aad
and
sub
arpl
xchg
divl
cmp
mov
lret
xor
movsl
ficoml
stos
lods
repz
sahf
mov
test
xchg
cli
sbb
mov
stos
push
mov
lcall
xchg
ljmp
sub
mov
arpl
xchg
leave
es
sub
rorl
adcb
fwait
adc
aas
popf
mov
sub
jns
push
leave
imulb
aad
push
mov
pop
xchg
fs
push
mov
mov
ss
lret
jle
inc
xor
adc
pop
loope
out
notb
xor
sbb
std
fnstsw
mov
mov
test
mov
xchg
fistps
adc
mov
into
xchg
lahf
lret
mov
xchg
sarb
lock
rorb
mov
fmul
lcall
das
add
dec
mov
pushf
push
and
hlt
mov
iret
cmpsl
jmp
push
mov
scas
ss
test
test
test
es
test
mov
ds
aaa
test
std
mov
mov
jae
mov
pop
lds
mov
xor
cwtl
std
rcrb
fsubl
inc
jle
xchg
xorl
mov
adc
testb
and
pop
scas
shll
mov
mov
cmp
rcr
pop
dec
out
sbb
rol
xchg
divl
aaa
jnp
mov
in
mov
fsubl
ss
dec
test
mov
jbe
or
sub
jle
data16
jecxz
mov
addr16
cltd
hlt
lcall
in
rcl
repz
mov
mov
mov
jl
das
ds
movsb
push
mov
rorl
int
rolb
ja
in
xchg
dec
pop
inc
sbb
jnp
push
lock
inc
push
mov
or
fisttpl
mov
aad
scas
shlb
adc
pop
or
std
sahf
mov
sub
mov
inc
ret
cli
xlat
mov
enter
bound
fiaddl
jl
mov
mov
xchg
stc
jp
xor
pushf
sbb
inc
mov
adcl
loop
data16
ret
aam
mov
in
jle
mov
pop
outsl
mov
xchg
pushf
cli
mov
and
jne
test
mov
mov
neg
addr16
clc
repnz
and
sbb
stos
mov
xorl
xor
push
stc
xor
jmp
mov
test
call
shll
jmp
jecxz
push
popf
xchg
mov
and
pop
mov
xor
adc
mov
aam
jne
xchg
mov
mov
test
or
jmp
negb
ss
mov
mov
push
or
clc
mov
xchg
cmp
mov
stos
push
xor
xchg
aam
jbe
jbe
sbb
xchg
ss
hlt
sbb
push
xchg
shr
loope
roll
pop
jbe
pop
sub
shlb
or
mov
cld
stos
cmp
shll
fldl
aaa
dec
add
mov
aaa
mov
ss
xlat
mov
notl
jbe
nop
mov
js
mov
dec
mov
jns
mov
mov
call
ficoml
cltd
mov
daa
xor
inc
inc
cmp
add
js
mov
mov
adc
cwtl
dec
aaa
mov
fistl
in
out
xchg
les
xchg
fmulp
xchg
out
leave
scas
aad
inc
idiv
cmp
add
mov
cmc
subb
cmp
rclb
int3
fstps
sahf
push
mov
mov
out
lea
repnz
mov
gs
mov
cs
sbb
fxtract
fcmovbe
sub
ret
add
mov
push
cld
les
mov
mov
xor
out
je
inc
aas
cmp
push
out
loop
jp
addr16
mov
enter
xorb
mov
cmpsb
lret
outsl
mov
sub
out
jbe
mov
shlb
xchg
test
aam
mov
cmp
fsqrt
ss
hlt
push
or
out
mov
iret
mov
nop
shlb
mov
int
and
adc
es
pop
rcl
sub
jbe
pusha
inc
and
icebp
push
cwtl
push
cmp
jmp
dec
push
cmpb
add
out
fucomi
clc
xchg
pop
mov
cmp
mov
cmp
out
movsl
mov
push
jbe
xchg
fisttpll
int
shlb
enterw
jbe
cmpsl
adc
sbb
mov
xor
push
out
mov
push
mov
stos
mov
nop
int
scas
mov
aaa
mov
push
push
xchg
aam
push
insb
push
mov
and
mov
mov
adcl
xor
daa
shll
lahf
jecxz
scas
ja
lds
pop
lods
jbe
nop
in
adc
pop
mov
shll
mov
or
add
jecxz
dec
jae
adc
ret
subb
mov
sub
sub
mov
into
push
mov
or
or
dec
adc
cmp
nop
xor
jae
mov
test
pop
adc
ljmp
mov
ds
lds
test
out
push
outsl
shll
dec
mov
movsl
push
mov
mov
mov
inc
sbb
cli
mov
inc
mov
mov
or
jbe
sbb
das
push
ss
insb
xchg
aad
cmp
test
mov
negb
les
mov
testl
cmp
ss
aaa
pushf
in
cmpsb
mov
or
mov
repz
ds
arpl
push
xorl
outsl
inc
xlat
repnz
jp
js
mov
out
inc
notl
inc
mov
ss
sbb
int3
das
aam
test
mov
test
sbb
mov
jmp
idivb
mov
addr16
push
mov
shll
imul
xchg
push
mov
mov
scas
out
aam
mov
inc
xchg
and
in
push
out
fisubrs
nop
mov
add
sub
lahf
push
not
xchg
push
out
dec
das
pushf
inc
and
push
stos
out
adc
pop
aas
jnp
jbe
dec
mov
std
push
fst
js
jbe
repz
push
sub
rcll
lcall
roll
loope
push
mov
out
cmp
adc
rolb
leave
add
mov
mov
pusha
ss
loope
mov
dec
andb
arpl
mov
outsb
jge
xor
jle
ja
out
stos
divb
adc
rcrl
xor
mov
cld
in
push
aam
int
mov
jl
mov
arpl
and
ss
inc
jbe
shll
movsb
data16
adc
jle
aad
or
add
jo
mov
lods
mov
cli
jl
ret
xor
mov
pop
dec
mov
dec
xchg
xchg
cmp
xchg
and
jmp
push
lahf
enter
mov
repz
in
mov
inc
movsb
pop
jp
mov
mov
mov
pop
aam
mov
jbe
jl
xor
mov
mov
adc
mov
shrl
sbb
push
xchg
mov
scas
mov
aad
mov
xor
sub
mov
push
out
lds
repnz
pushf
mov
je
jge
cmp
xor
cli
xchg
jecxz
test
shrl
sti
movzbl
jmp
mov
mov
xchg
aad
scas
mov
or
jbe
loopne
mov
mov
xchg
xlat
ror
data16
push
pop
cltd
or
push
xor
lds
inc
inc
outsb
addr16
sbb
lods
cmpsl
push
push
add
ret
jl
stos
mov
mov
out
cmp
out
mov
push
cld
xor
mov
jb
jmp
sti
je
mov
cmp
hlt
add
loopne
xchg
je
add
add
outsl
xchg
mov
sbb
mov
xchg
mov
push
add
adc
es
mov
out
adc
je
testl
xchg
mov
xchg
sub
push
int3
mov
jae
test
idivl
pop
imul
mov
mov
das
loope
or
std
dec
sbb
scas
mov
inc
jb
mov
fdivp
xchg
mov
sub
stos
andb
dec
mov
mov
pop
xor
das
and
test
aad
in
cmp
cmpsb
mov
or
mov
push
aas
xorb
mov
mov
imul
push
iret
fidivl
mov
pop
and
mov
and
mov
jecxz
mov
imull
es
repnz
or
movsb
jns
mov
movsl
jg
cli
adc
hlt
add
ret
mov
mov
push
add
mov
rep
shrl
fdivs
and
mov
dec
or
ljmp
adc
mov
add
jmp
fwait
sti
insl
adc
stos
jbe
mov
shrl
xchg
pop
int
cmpsb
mov
in
insl
push
push
xchg
arpl
or
mov
mov
xor
sub
repnz
cmc
jp
lea
out
inc
inc
mov
add
aas
push
add
push
mov
mov
mov
add
push
fsubl
push
mov
rolb
movsb
mov
repnz
xchg
cli
mov
jne
ss
out
jbe
inc
add
lret
cmc
or
push
fdecstp
movsl
in
int3
cld
lds
xchg
shll
lahf
addr16
mov
outsb
rcrb
adc
ss
jb
out
mov
inc
dec
in
loop
push
inc
int3
notb
clc
stos
mov
adc
dec
mov
outsb
xchg
enter
jbe
mov
mov
jecxz
insb
cmp
jae
inc
repnz
fs
shl
mov
jbe
ss
scas
mov
xchg
rcrl
adc
mov
lret
sahf
enter
mov
push
mov
stos
push
call
hlt
mov
dec
lcall
scas
test
mov
mov
jg
sahf
xchg
push
stos
mov
movsb
scas
aam
cmpsb
int
enter
fisubl
mov
ret
mov
fadd
mov
mov
add
mov
mov
jno
and
mov
test
divb
mov
inc
stos
xchg
in
mov
shrl
xor
cmpsb
jo
mov
mov
push
mov
jbe
pop
cmpsb
pusha
xchg
rclb
ds
das
or
mov
push
push
inc
sbb
lods
jnp
mov
out
pop
mov
add
shrb
inc
ss
loop
ja
pop
xor
cld
rclb
mov
cmp
xchg
enter
mov
lock
mov
cmc
mov
test
fistl
sub
jb
push
xor
mov
or
jnp
add
cmp
aaa
shlb
loopne
mov
pop
and
cmp
and
push
fnsave
push
arpl
push
lds
pop
std
xchg
mov
or
pushf
xchg
fistpl
in
mov
push
dec
popf
and
jmp
add
popa
movsl
mov
call
xchg
lret
movsb
jns
int
jne
or
mov
in
mov
pusha
xchg
mov
sub
cmp
xchg
pop
cmc
or
fidivs
into
inc
mov
pop
and
xor
mov
enter
and
lcall
mov
rorb
mov
jbe
pusha
inc
cmpsb
lods
or
enter
adc
mov
fdivrl
fiadds
jbe
in
add
js
lret
push
cmp
and
dec
mov
mov
daa
out
pop
add
mov
mov
cmp
dec
hlt
ret
shlb
test
mov
mov
scas
int3
mov
movsb
mov
ss
xchg
mov
std
andl
js
xchg
mov
aad
pusha
test
push
ljmp
cmp
mov
mov
aad
shl
jge
pop
test
inc
rcrb
movsb
cmpsl
mov
shlb
iret
mov
mov
jge
sbb
jne
and
add
xchg
divb
lcall
mov
sub
cmp
dec
shll
test
lcall
pop
fwait
rol
les
xor
pop
mov
mov
shlb
push
cwtl
ljmp
cmp
mov
test
mov
and
cli
sahf
xor
or
and
cmp
inc
jo
arpl
mov
lock
stos
mov
jge
mov
or
sub
aaa
jb
stos
and
xchg
pop
mov
mov
inc
mov
xchg
mov
dec
adc
orb
cmpsb
mov
int
in
cmpsl
inc
sub
cs
cli
rcr
mov
cmp
add
dec
xor
pop
mov
rcl
mov
mov
mov
mov
push
popa
mov
adc
mov
shl
jecxz
and
cmp
xor
or
mov
push
icebp
icebp
dec
and
nop
out
xor
mov
xor
pop
adc
sub
call
insb
aad
and
roll
sub
cli
rcrb
jecxz
scas
clc
jg
in
or
mov
xor
ret
mov
out
xor
movsb
mov
mov
fldt
mov
adc
cmpsb
shrb
mov
orl
rcrl
push
into
imul
push
mov
xor
sti
shlb
jle
mov
orb
sbb
push
notb
imul
mov
mov
and
sub
into
xchg
lds
aam
stc
sub
movsl
das
xchg
mov
repnz
stos
cmpsb
cmp
hlt
adc
ficoms
cmp
push
scas
roll
sub
dec
adc
mov
inc
sbb
mov
adc
pop
lcall
sub
xor
mov
out
mov
mov
lds
cmc
pusha
or
mov
cwtl
int3
xor
sbb
xchg
mov
fistpl
hlt
adc
je
and
push
push
shrl
sbb
mov
call
jl
mov
cmp
cld
sbb
stc
add
pop
mov
mov
dec
push
adc
out
divb
xor
lds
xor
mov
push
push
and
mov
dec
movsb
ss
jp
in
adc
lods
shll
add
in
mov
push
repz
fdivr
mov
xor
mov
xchg
aam
mov
pop
mov
push
sub
lods
rcll
dec
pop
test
aam
jbe
fidivs
inc
orl
cmpsb
xchg
mov
push
and
ss
pop
lcall
adc
mov
sbb
es
shll
and
js
mov
xchg
push
cmc
imul
mov
adcb
mov
out
int3
cli
add
push
les
xor
jae
mov
das
bsr
jnp
mov
int
mov
dec
jb
fcomps
push
push
pop
mov
shll
and
in
cmp
data16
pop
inc
xchg
das
push
aaa
pop
cmc
ret
adc
mov
out
in
jne
js
lods
xor
mov
ret
movsb
push
xchg
and
mov
lods
push
ss
in
outsb
je
insw
nop
clc
idivb
xchg
xchg
jbe
pop
cmpsl
std
cwtl
lock
mov
fnsave
pushf
mov
jl
test
cmpsl
outsl
arpl
mov
scas
ss
jbe
cs
and
mov
dec
lods
pop
fsubl
mov
mov
test
out
mov
pop
movsb
mov
mov
data16
sub
mov
shl
int
aas
inc
mov
xchg
pop
mov
popf
xchg
mov
call
inc
mov
pop
mov
out
leave
xchg
xlat
mov
in
lds
push
jecxz
inc
int
into
roll
cmp
divl
pushf
xor
cmpb
in
frndint
imul
mov
jae
dec
out
mov
mov
sbb
mov
cs
push
fisubrs
rorl
xor
sub
aam
clc
jns
push
jle
push
ret
add
mov
idiv
ret
rcl
fwait
repz
mov
test
xchg
je
imul
popf
xor
inc
idivl
adc
cs
pop
xor
mov
daa
jno
into
mov
ficoms
test
cmp
inc
out
xlat
xor
mov
repz
mov
sub
rcrl
mov
jp
out
sub
mov
mov
lods
aam
ss
in
inc
ds
pushf
jecxz
and
push
sub
repnz
cmc
or
mov
dec
ret
das
add
rol
push
push
xchg
and
jmp
cli
iret
andb
xchg
mov
pop
xor
in
loope
in
ljmp
mov
pop
les
scas
into
mov
out
mov
mov
ret
pop
js
xchg
out
mov
pop
xchg
std
cmp
sub
mov
fsubs
sub
mov
je
bts
int
shrb
notl
push
pushf
sti
push
mov
imul
pop
popa
jae
pop
sub
mov
inc
sub
mov
pop
dec
xor
or
and
loopne
test
jge
mov
jb
xchg
or
add
imul
scas
inc
mov
jbe
and
jno
dec
mov
or
js
mov
inc
fsubrl
pop
bound
sbbb
xchg
mov
lret
push
sub
mov
les
add
push
jns
mov
stos
lret
xchg
adc
cltd
enter
movsl
filds
xor
ja
ss
frstor
adc
addr16
jbe
iret
daa
jl
out
idivl
insb
lcall
fistpll
stos
mov
xor
lret
aaa
mov
cmpsb
jg
clc
rcll
mov
dec
rcrb
push
mov
mov
jnp
ret
outsb
adc
adc
scas
sub
out
adc
cli
mov
clc
push
jecxz
mov
daa
inc
fmulp
or
mov
push
mov
pop
push
fildll
cmpsb
lret
stos
jns
in
out
outsb
cmp
out
xchg
fidivrl
lcall
mov
notb
sbb
mov
pop
xor
cmp
stos
mov
insl
cmp
push
dec
sub
clc
mov
inc
inc
out
shl
call
sbb
and
lret
roll
inc
push
fadds
xor
mov
aam
push
test
mov
xchg
pushf
in
mov
daa
xor
aaa
mov
pop
cs
test
fidivs
mov
bound
inc
push
cmp
dec
arpl
mov
shlb
outsl
fimull
xchg
mov
mov
data16
push
jo
mov
push
cwtl
fcompl
dec
xchg
int
mov
push
call
imul
inc
loop
aaa
aad
pop
push
out
add
mov
mov
jb
mov
jmp
push
mov
out
and
scas
movsb
mov
or
and
mov
rcr
fs
sahf
shl
jo
ss
mov
adc
mov
jb
push
stos
arpl
push
xchg
xchg
mov
jp
shrl
loope
mov
in
data16
arpl
xchg
fistpl
sbb
jge
push
mov
faddl
shrl
xchg
dec
mov
sbb
mov
pop
out
jp
dec
insb
test
mov
mov
add
daa
cld
mov
xchg
mov
mov
ficoms
sub
test
add
mov
xchg
push
imul
add
dec
clc
mov
mov
xchg
jb
cmc
mov
in
pop
jne
insb
sub
fldt
or
cmc
shlb
shll
jne
dec
ds
iret
sbb
adcl
cmpsl
mov
aas
add
mov
mov
jb
push
sbb
cmp
mov
ss
jbe
push
inc
inc
call
jg
cld
sti
shll
push
sbb
sbb
mov
fsub
push
lret
jns
sbb
mov
arpl
movl
call
shll
ss
cmp
push
mov
aad
dec
in
dec
mov
jge
mov
mov
mov
sahf
fistl
xchg
lock
push
fs
sub
mov
fistpll
lods
push
pop
aam
lret
sbb
jae
pop
adc
es
lock
stos
mov
aam
sbb
dec
sbb
jo
jp
push
xchg
jb
mov
insl
jl
out
mov
lods
movsb
mov
mov
push
and
in
mov
loopne
add
pop
orl
xbegin
ss
scas
shl
add
mov
push
lock
pop
test
sub
rcl
out
or
cwtl
xorl
xchg
or
ror
mov
adc
mov
mov
mov
daa
mov
addr16
cmp
dec
rol
lods
test
mov
lds
lcall
mov
add
mov
imul
fwait
loope
mov
mov
jmp
addr16
lods
mov
jbe
test
aam
adc
xlat
inc
addr16
fistpll
dec
cs
es
mov
sahf
add
dec
inc
mov
sbb
addb
or
insb
movsl
inc
cmpsb
hlt
jge
adc
mov
int
add
imul
icebp
popf
test
lds
xor
add
xchg
push
mov
cwtl
shl
ljmp
cmc
mov
pop
inc
jecxz
sahf
pushf
repz
jge
or
cmp
outsb
mov
dec
or
mov
fcomi
mov
jnp
cwtl
dec
test
mov
stos
cwtl
mov
pop
inc
add
push
ja
test
push
xchg
ss
sub
std
fs
insl
hlt
mov
xor
mov
add
pop
jle
adcb
sbb
jo
adc
inc
push
pop
jecxz
pop
mov
test
pop
mov
out
pop
inc
inc
mov
cmpsl
inc
jle
pop
in
jns
mov
ja
mov
addb
and
std
push
fnstcw
mov
xchg
sahf
xlat
mov
repz
lcall
into
sub
je
lret
adc
mov
mov
dec
mov
test
repnz
les
mov
test
xor
fistpll
mov
push
pop
jns
or
in
rcl
repz
jns
stos
jp
fidivrs
xchg
ljmp
mov
data16
out
xchg
lds
leave
out
iret
adc
enter
mov
inc
xorl
stos
inc
adc
cmc
jb
pop
int3
mov
jp
imul
add
decl
jge
or
data16
mov
cmp
in
subb
and
pop
push
add
mov
test
cld
leave
dec
mov
fstl
repz
jge
push
fnstsw
call
jg
mov
xchg
sub
shrb
adc
ss
xchg
add
add
xchg
cmc
pop
xchg
mov
ja
mov
mov
shlb
mov
push
pop
fbstp
std
outsl
repz
nop
sbb
xchg
mov
or
xor
xorb
and
mov
maskmovq
mov
sbb
pop
test
jbe
std
lds
scas
sub
mov
in
mov
pop
orb
add
xchg
jmp
add
sub
bound
mov
insb
jp
add
mov
cli
add
jmp
dec
das
sti
pop
push
mov
sbb
mov
and
in
data16
push
mov
nop
cmp
fs
mov
hlt
sbb
and
clc
and
jbe
jecxz
pop
pop
testb
push
testl
push
rcr
and
imulb
inc
shlb
shlb
mov
aam
and
cmp
sahf
jmp
jg
outsl
cmovbe
mov
out
int3
out
jp
xorb
sbb
mov
fdivl
mov
mov
jbe
pop
mov
jo
xor
out
flds
call
jp
mov
dec
pushf
and
adc
daa
mov
inc
int3
imul
mov
cmp
add
mov
cltd
loop
ret
jb
notl
test
mov
adc
sbb
pop
nop
fistl
adc
mov
fists
jbe
mov
not
test
pop
ss
dec
adc
sahf
cli
mov
lcall
fwait
mov
lret
mov
mov
mov
or
fbld
mov
test
and
sub
dec
push
xchg
clc
loop
les
icebp
out
popl
push
push
mov
aas
repnz
push
mov
rorb
shll
inc
mov
cmp
aaa
xor
mov
int
imul
inc
sahf
xor
mov
shl
dec
ds
aad
mov
mov
xchg
inc
sub
sbbl
mov
pop
enter
inc
out
lods
hlt
sbb
nop
push
les
sub
mov
mov
pop
and
jbe
pop
sub
lds
sub
mov
mov
sub
imul
outsb
and
sbb
xor
add
cmc
out
ss
lea
jns
arpl
pop
push
mov
nop
daa
pop
icebp
pop
insl
mov
out
mov
movsb
xor
loop
out
mov
iret
xchg
stos
jne
repnz
mov
outsb
sub
adc
mov
mov
nop
popf
mov
fnsave
repz
lods
mov
jg
outsb
xchg
jle
xchg
mov
push
cli
aas
pop
or
sub
push
lcall
stos
push
jbe
repz
and
xlat
mov
shrb
aaa
mov
rorl
insl
mov
cs
dec
stc
int3
pop
xor
cmp
add
mov
bound
cmp
or
cmpl
xchg
or
add
or
out
xchg
add
aad
movsb
mov
inc
sahf
xor
mov
xchg
mov
adc
sub
mov
cmp
cmpsb
push
mov
jp
cmpsb
sub
push
pop
mov
pop
xor
mov
repnz
fisubs
pop
push
mov
pop
fisttpl
add
pop
mov
cmp
pop
cmpsb
icebp
imul
pop
mov
in
jbe
neg
pop
cmpsl
mov
sub
pop
mov
mov
mov
outsb
mov
inc
out
lcall
sbb
into
lcall
sbb
cmpsb
push
repz
mov
mov
mov
sbb
push
inc
test
mov
jnp
repz
gs
movsl
adc
cld
sub
cli
xor
jbe
jp
aaa
sbb
bound
dec
ret
xchg
xor
jne
shll
xor
stc
mov
ret
fstps
fisubs
mov
stos
rol
cltd
inc
movsb
push
mov
or
xor
fisubrs
push
push
ljmp
adc
xchg
xchg
mov
inc
ljmp
dec
or
movzwl
mov
mov
xchg
popa
stc
pop
clc
add
sahf
insl
jne
sbb
mov
dec
out
xor
inc
je
jae
mov
mov
sbb
push
fisttpl
divl
lea
lods
mov
mov
and
fs
adc
mov
cltd
enter
pop
pop
inc
movsl
inc
mov
test
adc
jbe
loopne
loope
or
daa
mov
jae
mov
mov
gs
add
divb
les
mov
push
jmp
lret
cmp
clc
cltd
sbb
mov
push
test
push
push
pop
push
mov
imul
add
ror
fnclex
jbe
shlb
mov
ja
gs
rcll
mov
jno
mov
repz
adc
xorb
sub
imul
aam
mov
xor
mov
push
xchg
inc
mov
mov
jmp
mov
loope
adc
mov
inc
out
mov
xchg
xchg
sbb
das
mov
je
cli
cmp
outsb
sub
mov
and
lret
outsl
jne
in
inc
cmpsl
testl
arpl
xlat
cltd
mov
lock
je
mov
mov
xchg
shll
idivb
push
mov
fsub
es
mulb
fsts
ss
sbb
lds
rcrl
sub
jb
mov
xor
jbe
and
lods
dec
xchg
leave
push
iret
sub
xor
mov
in
sub
jno
mov
mov
push
xor
jb
jbe
inc
lock
gs
ss
bound
xchg
or
mov
mov
jnp
mov
mov
or
shll
out
mov
mov
xchg
bnd
shll
sbb
adc
jbe
scas
vcvttpd2dqx
out
mov
mov
divb
mov
ss
rcll
insl
daa
lds
xchg
sbb
es
fnstcw
adc
shlb
or
into
jle
jl
popl
jnp
sbb
hlt
mov
xor
jbe
mov
mov
imul
inc
dec
mov
jg
jbe
jo
sbb
mov
xchg
sub
loop
repnz
stc
lahf
or
out
sub
add
jbe
ss
rcrl
xchg
cld
nop
in
mov
push
xor
lods
lods
test
jae
xor
fwait
daa
lcall
sbb
cwtl
and
repz
shll
aam
out
mov
mov
outsb
rorl
xchg
xor
es
pop
in
sub
mov
gs
mov
outsb
and
mov
cmpsl
sbb
mov
xchg
rcll
mov
jae
mov
lods
cmc
mov
mov
aad
das
je
repz
lods
jno
mov
in
jle
cmpsl
mov
cs
pushf
pop
push
xor
sub
dec
xor
rolb
in
outsl
lret
dec
insl
daa
pop
out
cmpsb
xchg
mov
mov
inc
push
sub
jg
in
mov
push
sub
mov
xlat
ret
jne
fimull
shl
je
pop
lds
in
outsl
jmp
adc
popa
pop
test
push
mov
sub
fimuls
mov
movsl
mov
mov
cmp
xchg
divb
test
inc
mov
xchg
mov
dec
cmp
mov
movsl
cmc
leave
mov
xor
xor
adc
pop
mov
sub
xchg
les
mulb
out
imul
in
add
mov
dec
insl
rcll
movsl
cmpsl
cmpsb
mov
xchg
jno
ss
shrb
mov
push
pop
mov
xchg
or
mov
sbbl
jbe
push
adcl
push
mov
popa
rorb
lds
pop
push
xchg
dec
and
andb
add
shrl
mov
cmp
je
push
jns
mov
or
mov
test
xor
jecxz
fdivp
mov
xchg
scas
dec
in
dec
es
and
xchg
shlb
xor
mov
shlb
stos
xor
out
xchg
jg
outsb
frstor
pop
cs
cmp
jbe
inc
je
popa
cmp
xor
inc
lea
pop
into
mov
sbb
xchg
pusha
popa
mov
mov
jge
jle
and
xlat
test
xchg
jb
hlt
loope
push
add
or
xchg
inc
adc
pop
lahf
mov
mov
cmp
mov
scas
sbb
push
movsb
mov
adc
mov
mov
popa
xlat
xchg
adc
xchg
fdivr
inc
ret
mov
adc
arpl
pushf
pop
xor
mov
xor
ret
cltd
bswap
lods
repz
push
and
xrelease
mov
or
push
mov
arpl
pop
ficomps
inc
mov
in
in
push
pop
adc
mov
and
mov
xor
and
fsub
sbb
xor
xor
xchg
nop
insb
lock
mov
xchg
inc
out
jecxz
sub
mov
add
jnp
mov
pop
outsb
mov
push
xor
cmpsb
mov
and
mov
jge
adc
jl
xor
lds
xchg
cmpsb
repz
sub
xchg
mov
and
rclb
test
les
in
dec
jecxz
shll
pusha
cmp
insb
test
sub
in
ja
xchg
xor
fsubs
sahf
pushl
xor
pop
insb
leave
les
pop
adc
xchg
mov
lcall
mov
dec
shlb
inc
push
add
sub
dec
arpl
mov
daa
pop
test
pop
push
sub
push
in
mov
adc
test
mov
inc
cmpsb
push
dec
stos
mov
mov
dec
jno
lcall
push
out
stos
jl
sub
loop
adc
mov
mov
sbb
movsb
fnsave
arpl
xor
cld
cs
mov
adc
adc
aaa
pusha
ljmp
dec
mov
aaa
mov
mov
sub
in
pop
and
cmp
cmp
jmp
nop
outsb
loopne
add
xchg
sub
ret
cmpsb
jle
scas
xor
fs
clc
and
or
or
xchg
mov
mov
hlt
jbe
insb
div
add
sub
mov
mov
dec
ds
mov
adc
fwait
adc
push
lcall
shll
out
cmc
int3
in
sub
sub
outsb
call
test
test
popa
mov
or
cld
out
push
das
mov
jb
mov
mov
mov
and
lcall
jmp
and
sahf
mov
pop
subb
lock
adc
xchg
mov
mov
xor
adc
call
arpl
outsb
scas
mov
add
xor
or
repnz
jp
inc
data16
mov
aad
xor
mov
in
shlb
aaa
xor
es
nop
pop
bound
mov
ret
loopne
and
mov
jl
xchg
in
imul
in
inc
std
aam
aad
scas
and
mov
stc
cmc
mov
mov
push
fldenv
pop
js
movsl
mov
sub
int
imul
adc
shl
inc
jg
leave
inc
cmp
ljmp
or
fimuls
lods
push
out
jp
pop
mov
mov
sbb
lahf
xchg
cmpsb
add
out
jl
int
inc
push
mov
pushf
mov
loop
int3
dec
mov
outsb
mov
mov
pop
les
mov
std
dec
cmp
jecxz
cmp
and
mov
jo
icebp
xchg
mov
shll
cmpsb
add
dec
mov
addr16
insb
in
pop
and
mov
lret
and
mov
mov
ljmp
out
cs
mov
jge
dec
in
in
ljmp
xor
inc
les
mov
lds
rcrb
cmp
fnstenv
ds
mov
aas
in
or
push
clc
mov
xchg
xor
mov
out
jmp
fwait
mov
ss
aam
jmp
mov
cmp
stos
mov
jo
sahf
mov
sbb
jl
sub
inc
cltd
inc
lds
add
mov
call
daa
pop
jbe,pt
jnp
sbb
cs
outsb
imul
push
cmp
adc
jp
push
test
mov
pushf
xchg
mov
das
push
jle
ss
ja
ret
mov
mov
pop
mov
scas
mov
and
aad
xchg
cmpsb
movsb
mov
shll
in
push
adcl
leave
push
add
outsl
inc
aas
mov
gs
js
push
fstpl
cwtl
xor
clc
into
test
push
and
mov
mov
adc
mov
es
outsl
mov
cs
mov
int
mov
repnz
jo
mov
push
mov
stos
scas
xchg
out
test
in
mov
push
mov
push
mov
mov
pushf
es
les
mov
xor
fbstp
mov
xor
test
xchg
in
ljmp
pop
in
scas
rolb
aaa
stos
mov
div
mov
mov
loopne
or
or
hlt
es
std
cmp
sub
shll
cmp
ss
mov
push
test
mov
lods
and
jg
jp
out
adc
inc
cmpsb
add
mov
mov
or
pop
jl
push
mov
dec
push
das
mov
push
mov
test
mov
es
je
scas
sub
add
mov
aam
push
fistps
mov
xchg
cmp
xor
popf
das
shl
in
mov
jb
icebp
xor
push
das
jno
pop
xor
aas
mov
in
testb
or
popf
test
cs
or
dec
fisttpll
cmp
ficomps
mov
add
push
jbe
cmp
xchg
jno
out
fisttps
pop
ss
out
mov
sub
popf
jb
push
flds
xchg
movsb
and
es
int
xor
xor
push
jo
in
ret
and
mov
in
ja
fldenv
xchg
inc
inc
roll
pop
dec
mov
loope
das
out
mov
mov
mov
mulb
push
lahf
dec
shl
sbb
cmp
popf
add
mov
aam
mov
aam
stos
push
lret
fcompl
mov
pop
outsl
cwtl
sbb
xlat
jbe
stos
mov
insl
imul
mov
or
and
inc
mov
inc
getsec
jbe
push
and
sub
mov
add
outsl
mov
push
mov
lock
add
mov
in
shlb
pop
mov
loope
dec
xchg
push
les
lock
mov
fstl
xor
insb
inc
es
enter
les
cmpsb
dec
mov
shrl
sbb
push
jmp
out
and
mov
ljmp
outsb
adc
xchg
jg
jns
jbe
inc
mov
cltd
inc
aad
jle
jae
enter
not
add
shll
aad
and
adc
sbb
data16
fisttpl
and
adcb
loop
push
adcl
cmp
dec
clc
mov
mov
push
daa
rolb
mov
dec
pusha
call
aad
mov
mov
out
add
push
imul
jbe
cmc
jp
outsl
mov
scas
sti
mov
mov
mov
push
pop
pop
frstor
jg
push
lahf
pop
mov
cmp
xchg
or
adc
mov
and
mov
push
mov
mov
clc
jp
pop
pop
cmpsb
adc
fiaddl
stos
stc
xor
pop
push
jno
jne
dec
roll
ljmp
cmpsb
pop
sahf
mov
jne
imul
scas
mov
test
xor
mov
aam
xor
into
hlt
lret
dec
std
mov
in
xchg
cltd
ss
sbb
repz
mov
xor
hlt
mov
mov
inc
sub
sar
aaa
lret
cmp
imull
xchg
in
lds
adc
mov
jnp
or
xchg
les
cmp
aaa
jno
jns
popf
in
mov
push
scas
popf
test
sub
out
out
cmc
es
daa
mov
idiv
int
fs
int3
stos
loop
sbb
push
ss
xchg
rcrl
xchg
push
aad
es
bound
xchg
mov
ss
movsb
pop
push
repz
aaa
ss
cltd
lods
loope
les
les
int
add
xchg
or
xor
jae
mov
dec
popf
les
in
jns
jle
test
push
movsb
push
sarb
or
push
loop
loopne
std
cmp
fiadds
mov
lock
test
fsubr
ficoms
sahf
sbbl
adc
jnp
add
fnstcw
mov
or
lods
sub
fnstenv
mov
shrl
mov
lods
xor
mov
adc
dec
mov
mov
rolb
daa
mov
mov
pop
sub
mov
movsb
dec
dec
inc
adc
inc
sub
mov
ror
jge
dec
mov
outsl
push
enter
rolb
in
jmp
adc
jno
jmp
adc
das
mov
jbe
clc
and
imul
je
adcb
jle
fsubs
mov
scas
mov
fisttps
mov
xor
icebp
aaa
mov
loop
and
es
ja
push
lret
mov
mov
es
mov
mov
lock
pop
adc
mov
sub
lea
shll
or
add
inc
hlt
push
or
jle
into
pushf
outsb
lock
and
xchg
add
inc
add
cs
jae
mov
dec
mov
sahf
pushf
shll
pop
mov
ret
and
jmp
xor
out
cmpsl
aad
cmc
shlb
sti
fsubl
push
bound
vmwrite
inc
mov
inc
movl
in
jae
dec
mov
es
push
pop
loopne
jl
inc
test
and
xchg
adc
mov
mov
outsl
cltd
out
out
test
loope
mov
lretw
mov
addb
mov
mov
xchg
arpl
mov
and
icebp
or
and
aaa
lcall
xchg
push
mov
mov
std
and
mov
shlb
push
jle
add
sbb
mov
insl
in
clc
jns
xchg
add
add
adc
mov
pop
cmp
lret
loope
out
xor
decb
arpl
dec
lahf
jmp
adc
xchg
fcoml
roll
push
mov
enter
decl
or
out
cmovbe
aaa
clc
mov
in
test
xchg
mov
in
or
mov
jge
lds
movsb
mov
shlb
mov
adc
mov
adc
mull
and
enter
js
das
push
and
outsb
inc
jg
out
and
or
mov
hlt
push
mov
mov
imul
pop
xor
and
lods
insl
out
stos
fs
test
repz
imul
and
inc
xchg
cmpl
je
out
cmp
sbb
or
cwtl
mov
cltd
je
mov
aad
fs
sbb
aam
js,pt
ss
jge
mov
mov
mov
and
or
xchg
mov
movsb
or
sub
pop
insl
hlt
mov
les
pushf
jmp
inc
or
dec
sub
lock
insb
leave
and
xchg
in
jge
lret
jge
lcall
mov
xor
scas
and
divl
pop
jo
sub
cld
in
mov
cltd
cmp
lock
jmp
xchg
in
adc
cmp
shr
repnz
nop
push
mov
pusha
popf
mov
test
mov
imul
mov
add
jbe
inc
pop
mov
mov
mov
sahf
push
adc
xchg
aad
loopne
push
add
dec
dec
mov
mov
sbb
dec
pop
push
mov
les
or
mov
jns
mull
pmaxsw
mov
movsl
in
data16
loop
test
mov
sub
sahf
mov
loopne
mov
push
adc
mov
fdivl
mov
cmc
popf
adc
sbb
repz
push
adc
cmp
inc
add
cmpsb
int
outsb
mov
rol
daa
jmp
dec
aad
inc
add
loopne
mov
mov
cmp
mov
jl
loop
push
rcl
out
and
jp
jno
ss
inc
or
sub
es
xchg
shll
outsl
mov
mov
lds
mov
fnstsw
insb
xor
out
jbe
jnp
loop
popa
lods
fnsave
in
pop
shll
lea
sahf
mov
mov
lods
sbb
xor
cmp
addr16
sarl
cmp
jmp
dec
fcmove
enter
add
les
add
in
pop
test
jo
sub
jbe
test
dec
shlb
je
fwait
xchg
mov
data16
pop
inc
lret
les
inc
insl
push
sti
dec
scas
mov
cmp
mov
mov
insl
fucom
scas
cmp
mov
lea
mov
add
mov
cmp
mov
dec
sti
adc
jle
add
rcrb
xchg
jge
inc
out
enter
in
ja
fnstenv
ret
xor
imul
out
mov
add
xchg
jp
inc
mov
mov
or
pop
mov
xchg
pusha
cmovo
jae
mov
lds
jg
sahf
inc
int3
in
in
pop
aaa
jno
gs
outsl
mulb
xor
mov
stc
dec
xchg
push
push
shrb
xchg
in
rorb
outsl
mov
mov
loope
out
and
in
outsb
out
fildll
push
dec
test
repz
mov
lods
pusha
dec
push
push
mov
dec
adc
or
xlat
push
movsb
pop
pop
add
mov
cmpsb
test
lock
cmp
fwait
cs
icebp
stos
lods
jns
call
xor
add
scas
mov
mull
pop
mov
lock
das
dec
jbe
adc
add
imulb
push
sti
shrb
or
or
hlt
ss
and
sar
mov
leave
fistps
mov
add
jmp
mov
movsl
dec
out
rorb
xor
enter
jp
rorl
mov
outsb
rorb
and
dec
mov
shl
fists
addl
dec
jge
jg
insb
mov
fsts
lds
mov
testb
pushf
mov
ja
inc
jmp
cmp
ret
das
aaa
cld
and
stos
daa
mov
out
fmull
pop
rclb
mov
xchg
fstps
push
loop
cltd
mov
movsl
into
mov
mov
push
push
sar
push
out
dec
mov
orb
test
mov
mov
inc
push
testb
xor
ret
adc
push
cmp
mov
add
pop
cmp
flds
fdivrp
ljmp
orl
xchg
fistpll
mov
push
cld
mov
ljmp
stos
popa
mov
xchg
insb
or
dec
mov
out
lret
addr16
mov
mov
lcall
rcll
mov
mov
das
ret
dec
movsl
cwtl
xor
mov
sub
aas
pop
push
ss
ds
and
mov
mov
dec
sub
bound
add
stos
arpl
mov
icebp
sahf
mov
adc
iret
cwtl
jbe
loop
add
sub
mov
fldcw
in
push
ret
xor
mov
sbb
sub
imul
add
cmp
jp
pushf
and
add
les
cmp
movsb
or
fs
mov
sbb
call
xchg
adc
arpl
mov
push
mov
adc
push
sbb
lods
push
loop
icebp
test
push
push
inc
fwait
sti
sub
jb
adc
shrb
push
cmp
jbe
inc
sbb
stos
pop
std
fidivrl
mov
cmp
ss
stc
out
inc
pop
lds
jns
add
sbb
dec
mov
sub
loopne
push
push
mov
add
dec
xchg
cmp
mov
push
push
jno
ss
pop
imul
fists
ja
insl
scas
mov
dec
adc
xchg
add
in
add
add
xchg
dec
jge
dec
out
lret
lock
cld
ss
ss
insb
mov
es
std
cltd
pop
pop
mov
scas
out
cmp
pop
clc
dec
ss
and
test
mov
jl
mov
je
lea
pop
sbb
ret
mov
xchg
test
mov
dec
ffreep
jne
sbb
lret
adc
cmp
mov
mov
mov
or
pop
cli
sub
lds
or
fdivrl
xchg
push
xchg
popa
ss
jo
inc
mov
scas
adc
mov
scas
jge
xor
cmpsl
es
out
jl
mov
pop
bnd
inc
sbb
hlt
out
daa
stc
int3
mov
mov
push
inc
in
xor
outsb
mov
pop
movsb
mov
test
cmc
push
cmp
xchg
loop
cmp
adc
pop
leave
lods
popf
repnz
xlat
shlb
push
movsb
xchg
ret
and
shll
in
cmp
jl
fwait
mov
out
or
pop
jecxz
arpl
mov
clc
lods
dec
js
cmpb
aaa
pop
mov
fidivrl
movsl
jle
fmuls
jne
or
scas
push
stos
mov
out
scas
push
cmp
int
mov
push
lret
scas
mov
in
sbb
cmp
std
mov
push
adc
inc
mov
sbb
xlat
push
mov
loopne
pusha
in
fdivl
inc
fcomps
fcompl
mov
test
hlt
xchg
or
jns
mov
loop
data16
cli
pop
xor
shll
int
or
xchg
fwait
or
ret
push
mulb
pushf
mov
xor
les
ss
add
testl
addr16
xlat
pop
jp
mov
add
mov
add
test
sahf
in
divb
or
sti
loope
fistl
ja
shll
push
pop
in
int3
fisttpl
aad
sbb
jnp
jne
sbb
xor
addr16
xor
and
iret
sbb
xor
inc
ss
push
lret
jmp
mov
jb
jne
fildl
mov
sbb
aas
inc
lret
imul
pop
jbe
push
iret
push
xchg
mov
into
mov
in
in
xchg
sbb
ret
fst
je
push
adc
sti
inc
fwait
aam
imul
add
sarb
std
add
dec
lcall
inc
pop
pop
call
out
mov
jae
sbb
mov
or
pop
rcrb
dec
mov
daa
jg
xchg
aad
fistpl
inc
jo
mov
xchg
xchg
sub
jecxz
pop
jmp
xor
call
inc
fiaddl
test
mov
pop
sahf
cltd
outsl
pop
iret
add
adc
push
push
cmpl
sbb
inc
push
lea
sbb
mov
in
and
jecxz
out
repnz
inc
dec
xchg
in
gs
add
jecxz
sub
jge
add
movsb
mov
ss
daa
and
iret
mov
push
adc
sti
mov
lea
pop
xor
lods
shrb
clc
pop
and
dec
sahf
lret
add
xchg
mov
lahf
and
mov
int
mov
add
adc
aas
call
pop
or
adcl
mov
fsubl
aad
and
cmp
add
aam
jle
inc
add
xor
arpl
ss
adcl
mov
in
jbe
sbb
cmp
inc
pop
or
movl
out
daa
add
lret
add
shll
mov
ja
jbe
shll
clc
mov
test
xchg
insb
mov
cmp
jl
xor
icebp
aam
into
xchg
lea
sbb
add
enter
mov
sub
adc
or
cwtl
ret
int
sti
mov
push
sbb
push
and
loop
pop
jp
jbe
std
mov
nopl
cmc
ja
divb
popa
ret
gs
jno
xchg
mov
pop
ss
sbbl
add
mov
dec
mov
loope
push
mov
add
mov
mov
cmp
fcmovu
cmpsb
imul
cmp
xor
loopne
inc
out
push
lock
in
xchg
mov
repnz
aas
mov
add
call
sub
pop
daa
xlat
das
inc
sbb
pop
push
mov
push
or
mov
popf
sbb
mov
int3
sti
pop
cmp
je
jmp
jp
fldcw
fwait
mov
adc
or
sbb
xchg
sar
jbe
inc
xlat
sub
mov
lds
or
cmpl
pop
mov
push
mov
or
mov
mov
stos
imull
sub
gs
mov
mov
pop
loopne
sub
mov
or
aad
out
or
repnz
dec
lods
and
mov
jnp
insl
loope
pop
insb
push
nop
adc
pop
jge
cs
roll
cmp
hlt
rcll
pop
daa
test
dec
adc
jl
notb
mov
ss
out
sysexit
cs
pushf
fidivs
sbb
xchg
xchg
mov
xchg
not
push
pop
sahf
shlb
sub
cmp
inc
xchg
jecxz
and
cmpsl
mov
call
stc
mov
xlat
pop
sahf
inc
push
ja
bndstx
bnd
ficoms
inc
sbb
addr16
add
enter
xor
pop
cmp
cmp
pop
les
outsb
mov
les
xchg
repz
adc
mov
cmp
mov
cld
adc
mov
daa
xchg
pop
mov
dec
add
push
mov
dec
enter
push
inc
jecxz
int
xor
cmp
jae
lods
mov
jle
scas
pop
ret
fnstsw
cmpsb
in
movsb
das
shlb
pushf
mov
out
add
fwait
mov
aaa
sbb
push
or
mov
fcmovnbe
jbe
jbe
mov
mov
or
mov
sub
cli
pop
call
cwtl
cltd
mov
mov
jne
mov
lods
dec
out
mov
ss
fidivl
mov
pop
mov
cltd
xchg
xchg
lret
mov
popa
jecxz
cli
and
mov
push
mov
lea
mov
sub
nop
aam
mov
mov
jle
gs
mov
jbe
outsl
push
mov
cld
jne
arpl
mov
xchg
popl
sbb
mov
sub
jecxz
scas
mov
pop
dec
testl
jnp
jp
dec
inc
adc
cmp
enter
mov
aaa
cmp
mov
rcr
and
sub
hlt
lods
out
movsb
jbe
insb
testb
adc
and
push
rol
jnp
ret
push
test
fstpl
int3
mov
idivl
inc
mov
adc
mov
test
mov
mov
mov
pop
sub
arpl
or
sbb
mov
jno
cltd
aaa
fdivl
cmp
insb
push
xchg
adc
jns
xchg
loop
cmp
mov
pusha
lcall
sarb
sbb
and
push
nop
mov
push
ror
jnp
inc
call
add
into
cmpsb
arpl
pop
and
and
mov
jb
lods
add
mov
test
pop
std
daa
mov
mov
inc
lret
mov
mov
sahf
clc
or
lds
and
fiaddl
mov
dec
cmp
mov
testb
cs
nop
dec
movsl
fidivrl
or
and
dec
xor
inc
mov
jbe
fwait
add
lret
cmc
fstps
inc
out
gs
mov
idiv
add
cmc
outsb
mov
push
rcrb
nop
cs
mov
aam
test
mov
jmp
inc
jbe
insb
mov
jp
mov
aad
test
sub
mov
mov
hlt
fs
hlt
in
int
cmp
fistl
mov
pushf
scas
jbe
or
jmp
ja
out
rcl
mov
xchg
in
xor
xor
adc
add
mov
cmp
push
xchg
sbb
mov
mov
jl
or
mov
pop
data16
test
bnd
mov
inc
jmp
add
mov
push
fadd
cmpsl
add
das
test
pop
mov
adc
lret
mov
ss
inc
xchg
loop
aaa
lret
lret
mov
mov
sub
jbe
aam
jbe
mov
ret
mov
cmp
fnsave
clc
jg
mov
mov
dec
lret
mov
and
sbb
or
ds
push
inc
jp
loop
add
sti
ss
cli
call
addr16
test
dec
xchg
ret
shlb
loope
adc
adc
cmpsb
sub
mov
rclb
jae
loope
out
xchg
pop
mov
aad
mov
clc
addr16
mov
sub
cmc
cmp
mov
sbb
das
xchg
or
outsb
shl
lret
mov
dec
push
es
mov
ja
mov
jge
sub
lcall
xor
jecxz
out
cld
mov
test
ficoms
pusha
test
xlat
fimull
shl
cmpsl
inc
jbe
arpl
push
or
pop
popf
in
mov
out
imul
cld
pop
fdivrp
cwtl
std
add
nop
jbe
mov
xchg
push
jne
and
inc
sarl
push
ss
and
mov
jp
mov
es
xor
mov
fcomps
pop
inc
inc
cmpsb
nop
xor
mov
into
fbld
insb
arpl
mov
mov
and
inc
mov
cli
jno
or
ret
test
andb
and
xchg
cmp
cltd
pop
int3
jb
out
stc
jl
leave
pop
adc
sub
es
and
imul
pop
add
dec
or
add
je
xchg
inc
cltd
pop
pop
mov
add
test
in
insl
out
jo
test
inc
pop
jno
ss
mov
fucomp
push
pushf
mov
sbb
mov
imul
cld
mov
mov
adc
pop
ds
or
movsb
inc
or
mov
lods
jbe
out
push
loopne
aad
stos
and
add
iret
adc
mov
pop
es
sub
das
jb,pn
leave
inc
orl
inc
add
outsb
data16
icebp
cmp
fldz
mov
cmpl
sti
xchg
xchg
sub
xchg
push
or
movsb
idiv
leave
jl
shll
inc
sub
sbb
dec
add
decl
mov
dec
add
jmp
xor
rol
sub
xchg
inc
inc
cmpsl
mov
sub
out
jnp
pop
and
cwtl
dec
std
sarb
movsb
xchg
add
pushf
imul
jne
mov
pop
jecxz
push
mov
mov
dec
jg
cmp
outsb
sub
in
mov
xor
cltd
lea
mov
mov
or
loop
xchg
stc
lds
daa
ja
sub
mov
jge
push
fwait
aad
lock
lcall
daa
ja
xchg
shl
mov
mov
inc
out
lds
cmpsb
or
int
adc
push
fs
loope
and
push
pop
xchg
dec
loopne
fisubrl
sub
push
dec
mov
ljmp
mov
divl
mov
idiv
push
pushf
scas
xchg
adc
dec
pop
sbb
push
sub
ss
mov
insl
push
shr
in
xchg
mov
bound
nop
enter
outsb
test
mov
push
movsb
adc
imul
mov
in
jle
or
jg
andl
pushf
xorb
inc
mov
in
daa
and
bound
jb
xchg
fcomps
mov
enter
adc
mov
loope
cmpsl
shrb
sub
add
mov
sarb
stos
mov
gs
movsb
xor
push
mov
sub
lea
mov
daa
mov
jle
add
push
jge
mov
ljmp
std
jae
sub
paddusb
mov
testl
mov
mov
sarl
lods
fistpll
popa
divb
sub
loopne
hlt
mov
dec
std
iret
rclb
dec
sar
fstl
or
push
sub
inc
daa
xor
fmul
add
icebp
mov
xchg
pop
add
out
adc
or
rol
jo
mov
pop
pop
pusha
jnp
xchg
sbb
stc
pop
inc
mov
js
test
cmp
shll
out
lcall
cmp
jg
dec
mov
inc
js
mov
subl
outsb
push
stos
mov
iret
in
inc
enter
dec
pop
out
hlt
fistps
lds
lcall
cmc
arpl
ss
mov
iret
mov
cmc
lret
shl
inc
adc
hlt
inc
jno
out
mov
xchg
inc
and
push
mov
cmc
adc
push
mov
mov
adc
ds
mov
fsubl
mov
adc
or
cwtl
popa
ret
add
push
cs
xchg
and
or
ss
mov
int
mov
adc
xorl
mov
and
rcrl
inc
mov
adc
mov
sub
sbb
adc
push
andl
mov
mov
and
out
mov
aas
mov
insl
pop
adc
orb
int3
mov
push
pop
push
test
mov
cmp
adc
cmpsb
mov
outsb
xchg
xchg
cmp
sbb
lea
loopne
mov
mov
les
cmp
mov
sub
js
lds
outsb
jae
push
ss
pop
outsl
sbb
cmpsb
rcr
mov
je
sbb
ja
and
xchg
ss
mov
adc
dec
addr16
mov
jecxz
mov
mov
mov
sub
data16
jne
xchg
idivb
cmc
popf
xor
sub
jae
mov
mov
mov
aas
pushf
jecxz
or
daa
add
jg
loope
lea
in
sbb
adc
push
jbe
loop
bound
mov
std
cmp
mov
cmpsb
scas
xor
sbb
mov
mov
sahf
mov
in
out
and
cmp
ja
lahf
lret
test
add
jmp
insl
xor
sti
das
decl
xchg
fs
mov
inc
addr16
jne
ss
in
movsb
mov
les
add
adc
jbe
push
mov
dec
cli
sbb
je
add
xchg
mov
imul
int
daa
in
ss
in
scas
je
aam
rcll
ss
dec
adc
cltd
and
mov
test
insb
inc
push
mov
dec
js
bound
dec
mov
repnz
loop
les
aam
sbb
push
mov
xchg
xchg
mov
sub
rcrb
sbb
jp
jle
mov
mov
sub
inc
xorl
mov
insb
and
popf
mov
push
inc
sbb
mov
pushf
cmpsl
push
xchg
mov
mov
sbb
mov
std
jmp
dec
gs
enter
mov
pop
aas
or
or
lcall
push
popa
xchg
push
xor
mov
xchg
adc
push
sub
sarl
ljmp
repnz
mov
mov
sarb
sbb
aaa
pop
jnp
movsb
loop
fsubrs
push
cmp
xor
or
fcmovbe
xlat
cmp
add
xor
nop
mov
jnp
lret
outsl
xlat
aam
mov
xchg
xchg
mov
bound
dec
or
popa
mov
stc
js
rolb
xor
mov
cmp
inc
jmp
push
cltd
insb
mov
inc
dec
xchg
mov
or
and
add
addr16
or
sub
mov
mov
psrad
sarb
xchg
dec
inc
out
mov
adc
or
mov
mov
incl
xchg
mov
jb
pop
ja
add
xchg
push
xchg
loope
repz
into
mov
push
mov
fdivs
lret
fsubrl
jb
mov
xlat
adcl
and
or
ss
pusha
jmp
aad
xchg
xchg
mov
xchg
push
fisttpll
int3
or
mov
push
jmp
pop
mov
movsl
mov
aam
mov
xor
inc
cmpsl
fucomip
xorl
add
jmp
es
fsubrl
fsubr
or
xor
push
andb
imul
mov
xchg
xchg
loopne
ss
gs
rcll
sub
mov
mov
adc
mov
ss
mov
sarb
cmpsb
lds
in
lret
in
es
ficompl
jmp
sub
sub
xor
mov
xchg
mov
xchg
pop
push
xorb
outsb
mov
notb
adc
pop
dec
or
sarb
out
lods
aad
mov
push
cmp
mov
jmp
mov
movsb
mov
mov
nop
ljmp
cs
cmp
lock
jnp
mov
pop
pop
sahf
popa
cmp
adc
add
mov
stc
sub
stos
out
fisttpll
xchg
shlb
mov
cmp
cmpsl
in
sahf
call
enter
mov
hlt
mov
jg
scas
cltd
out
dec
pop
adc
adc
jge
out
mov
imul
lds
or
cmp
cmpsl
movsl
mov
pop
test
pop
lret
mov
jle
ss
mov
mov
push
mov
pop
pop
sahf
or
stos
xor
std
mov
fildll
sub
scas
adc
mov
popa
test
fnsave
shl
mov
ficoms
cwtl
or
pushf
and
xchg
dec
dec
inc
mov
add
jecxz
shrl
mov
add
shl
test
dec
daa
push
or
icebp
mov
mov
push
ret
xchg
ficoml
outsb
aad
adc
lds
push
ja
pushf
or
lcall
rcr
rclb
arpl
or
push
repnz
ret
sbbl
icebp
loop
fisttps
enter
fsubs
in
adc
push
pop
iret
scas
ss
pop
mov
and
aaa
dec
les
mov
aam
xchg
arpl
push
fsubl
xchg
dec
mov
xchg
xor
lods
jg
mov
mov
fwait
lcall
add
push
sahf
imulb
pop
push
lea
adc
std
mov
pop
mov
dec
dec
das
lahf
data16
lea
inc
lret
pusha
mov
pop
testl
in
cmpb
adc
push
push
mov
mov
xor
mov
pop
outsl
inc
push
fs
stc
mov
lcall
scas
js
aaa
ja
jno
loop
mov
sbb
push
icebp
xchg
test
sub
mov
push
sub
jbe
andl
ss
sub
fcmovnb
jbe
push
insl
andb
fcmovbe
jno
mov
cmp
das
repnz
sbb
xchg
lret
aaa
in
test
xchg
das
lds
rcrl
cmp
mov
movsb
jle
sahf
mov
js
dec
mov
dec
xchg
call
mov
arpl
sub
push
pop
mov
test
bound
mov
pusha
out
jno
inc
inc
icebp
mov
add
testb
sub
enter
inc
inc
adc
adc
outsb
sbb
pop
jge
addl
cmpsl
jno
jg
mov
xchg
add
push
into
xchg
imulb
mov
mov
sahf
pop
lea
jecxz
test
jb
mov
cmp
call
cmpsb
or
enter
mov
sarl
jbe
mov
movsl
scas
push
jbe
add
ljmp
mov
mov
pop
push
rcll
push
inc
pusha
imul
addb
int
mov
add
inc
mov
cmc
jle,pt
js
and
push
adc
mov
mov
push
scas
mov
inc
loopne
push
xchg
mov
or
sub
pop
mov
les
daa
out
cmp
mov
test
loopne
mov
xchg
inc
es
mov
stos
add
jae
adc
mov
mov
jnp
shlb
fimull
jae
mov
in
and
mov
and
sub
cmp
daa
mov
ret
pop
movsb
jp
pusha
mov
push
inc
cmp
sbb
fimuls
divl
xor
cltd
adc
mov
cmp
mov
and
mov
mov
xchg
mov
sub
and
push
jecxz
push
shl
dec
inc
lret
gs
leave
cmp
ss
mov
mov
mov
icebp
mov
lds
movsb
ss
das
mov
xor
mov
cli
lret
xchg
fisttpl
pop
shrb
and
jbe
test
cli
jne
sbb
cld
dec
push
shlb
push
mov
xor
mov
fidivl
mov
mov
push
jmp
mov
mov
inc
sbb
out
mov
jg
add
cmpsb
in
mov
adc
xor
or
repnz
pushl
in
cltd
mov
mov
fildll
mov
scas
bound
jae
add
inc
pop
pop
xor
dec
adc
jb
mov
stos
das
mov
xchg
and
shr
cmpsl
out
jo
mov
ljmp
mov
sub
xor
loop
testb
jae
cmp
sub
mov
std
pop
mov
sub
lods
jae
push
jecxz
pusha
filds
push
sahf
mov
pop
add
xor
int
sar
push
sbb
mov
mov
push
mov
mov
pop
or
push
xchg
aaa
pop
sub
mov
xchg
jp
jo
add
int3
fucomip
mov
mov
mov
xchg
pop
push
in
dec
cmp
xor
add
ss
pop
mov
clc
jae
into
adc
mov
add
xchg
mov
mov
lods
and
adc
jns
cmp
popf
inc
loope
lcall
or
aas
pop
in
ss
pop
loop
mov
mov
out
jp
jmp
sub
mov
sahf
mov
or
icebp
rcrb
fimull
cmp
mov
jp
int
arpl
or
dec
xchg
cmp
pop
popa
and
sarb
jne
pop
and
sarb
cs
test
pop
je
or
mov
pop
test
aam
ss
xchg
std
rcll
xor
and
lret
bound
cli
sbb
loope
icebp
fmull
loop
ror
xorb
inc
jbe
loopne
dec
leave
push
ja
sub
fs
add
mov
in
aad
sub
fiadds
or
loopne
lcall
jmp
lods
pop
xchg
lock
mov
cs
sahf
shll
loopne
mov
cld
jne
pop
rcr
dec
mov
enter
negb
movsl
pop
aad
and
call
arpl
jp
fcoml
push
mov
pushf
xchg
fs
xor
xchg
pop
mov
lcall
mov
inc
xchg
scas
or
mov
mov
daa
inc
mov
sub
mov
stos
jne
lret
insb
jae
mov
adc
mov
mov
and
sahf
jp
mov
fwait
sbb
mov
int
lods
hlt
cmc
xchg
das
xorb
mov
fidivs
divl
or
cmpsb
cmp
movb
out
sbb
repnz
adc
add
mov
mov
addr16
stos
pusha
mov
add
sbb
fidivl
fwait
jne
ss
jbe
ja
out
jbe
mov
ficompl
inc
js
idiv
dec
fidivs
pop
fsubrl
sub
mov
sbb
sub
shr
or
repnz
push
xor
mov
mov
nop
and
lds
nopl
pop
jge
lret
xor
int
cmpsl
fmul
mov
cmpsb
aas
fnsave
jnp
mov
out
outsb
xchg
mov
loop
out
jl
repz
sub
fstpt
mov
lds
mov
shlb
sarb
sub
xor
jns
mov
fwait
cmpsb
imul
cld
adc
test
jae
rol
aad
stc
cmpsb
es
jle
daa
mov
lods
adc
or
adc
fistpl
lret
xor
aad
mov
push
or
or
movsb
divl
dec
sbbl
insl
movsl
in
mov
pop
movsb
add
dec
js
push
jbe
enter
test
stos
push
mov
mov
jno
dec
outsb
push
mov
sarl
dec
loopne
scas
inc
push
mov
pop
flds
test
or
ljmp
xchg
into
stc
cmp
mov
sub
pop
or
pop
popf
repnz
add
mov
aam
movsl
xchg
ss
hlt
loope
cmc
out
arpl
ss
jbe
scas
or
arpl
sarb
test
push
sahf
sbb
push
ror
stos
mov
mov
pushf
ljmp
inc
xor
push
stos
pop
xchg
add
mov
nop
cmp
dec
movsb
out
outsl
or
rcrb
cmp
inc
lods
scas
mov
out
jo
mov
sbb
mov
mov
add
pushf
cmp
add
mov
xchg
stos
in
rol
scas
mov
cmpsb
and
std
inc
aam
mov
andb
sbb
mov
mov
add
dec
mov
fucomi
adc
in
sbb
fsubr
insl
or
repnz
es
pop
inc
pusha
rcrl
cmpsb
lret
in
cmpb
and
mov
sahf
mov
and
loopne
xorl
push
sahf
mov
jp
loopne
push
sbb
stos
nop
rolb
fld
xorl
xchg
dec
mov
fisttps
xchg
sar
cmpsl
std
inc
mov
mov
mov
jbe
aas
inc
shl
mov
sub
add
mov
mov
js
repnz
cmc
mov
pop
dec
mov
xor
mov
call
fs
jb
push
jecxz
lahf
adc
lock
sbb
sti
push
jne
sti
lods
int
leave
das
jbe
push
lahf
pmaxsw
pop
pop
mov
mov
lods
aad
mov
mov
inc
adc
fisubrs
fwait
mov
sub
addb
pop
lock
cld
nopl
sbb
roll
test
cmp
rorb
mov
es
sub
es
outsw
mov
sub
mov
js
sahf
ficoms
arpl
mov
mov
cli
jle
mov
push
sbb
out
loop
aam
push
xor
pop
cmc
lahf
scas
mov
mov
std
lret
mov
mov
mov
fisubrs
mov
mov
xchg
lods
xor
in
jge
mov
or
xchg
adc
fidivs
lods
jae
lds
mov
mov
addr16
cld
dec
mov
push
inc
iret
inc
xchg
jg
ss
pop
scas
jne
mov
dec
push
fwait
inc
add
aaa
adc
shll
dec
push
lcall
jbe
sub
js
les
lahf
sub
dec
movsb
jbe
fmull
repnz
push
fisttpll
add
push
mov
fistl
imul
push
xchg
jge
cmc
pop
les
sbb
mov
push
sarl
adc
ficoml
js
iret
cmp
ds
cmp
jb
in
aas
inc
sahf
clc
xor
push
push
mov
sahf
inc
lahf
fdivl
testb
lods
imul
mov
aam
cmc
out
pop
mov
insl
dec
mov
popf
push
sbb
adc
xchg
pushf
pop
sub
mov
lods
mov
iret
aam
add
mov
inc
shrb
fists
bound
aam
fldenv
call
jle
shlb
es
aad
lret
int3
mov
sub
flds
data16
mov
cmc
xlat
push
test
pop
inc
test
fs
add
fdivrp
xor
inc
insl
mov
mov
loop
sbb
or
divl
lret
dec
mov
adc
jne
in
cmpsl
jo
or
xchg
xor
mov
mov
in
stos
xorb
jge
lods
mov
aam
in
lahf
leave
adc
xchg
nop
cmc
sub
out
shll
mov
mov
arpl
sbb
cmc
in
mov
mov
movsb
aad
xorb
je
pop
mov
sbb
mov
repz
lds
pop
xchg
pop
mov
dec
jmp
mov
mov
out
jge
incb
je
mov
stos
sub
jae
pop
inc
cmpsl
ss
inc
sbb
ds
jae
sar
dec
jmp
mov
pop
clc
lods
and
inc
icebp
pop
lret
mov
pop
cmpsb
out
and
or
jmp
adc
or
mov
lahf
pusha
xlat
scas
mov
mov
int
jno
cmpsl
rorb
push
cmc
cltd
push
ja
push
pop
shlb
lret
not
mov
dec
cmpb
mov
mov
mov
imul
cmp
jae
loope
rcr
xor
pop
daa
ret
mov
mov
shl
xchg
xor
sub
mov
bound
pop
lahf
inc
adc
dec
add
mov
xor
stc
mov
mov
pop
lods
mov
scas
jle
daa
pop
dec
dec
xchg
add
mov
inc
imul
cmp
mov
push
ret
xor
aaa
std
inc
insl
inc
pop
or
mov
jns
sbb
cmp
lods
inc
aad
popa
lods
jb
mov
loop
sub
mov
mov
sbb
mov
inc
aam
jbe
lds
jl
cmp
movsb
jmp
push
lods
jnp
xor
ljmp
daa
roll
out
xchg
ljmp
xor
mov
sahf
jge
scas
sub
hlt
xor
in
cmc
addb
ja
pop
push
adc
inc
mov
mov
inc
sbb
mov
loope
inc
out
xor
mov
xchg
mov
ficomps
pop
nop
scas
fcompl
mov
mov
and
mov
out
outsb
movsl
add
cwtl
jae
test
fnstsw
movsb
out
sahf
jle
jo
scas
aaa
ss
maxps
jb
push
in
aad
dec
cltd
testb
rolb
fstpl
mov
in
lds
xchg
cmc
xor
sbb
jg
xchg
ds
jbe
mov
pop
xchg
inc
add
inc
rorb
add
test
or
cltd
popa
adc
aad
je
sbb
aam
cmpsb
sbb
push
mov
mov
jbe
pushl
mov
and
sbb
faddp
popf
repz
test
or
xlat
jg
mov
movsl
xchg
jmp
mov
mov
imul
out
pop
lcall
jb
pop
xchg
xor
add
pop
leave
dec
cltd
outsb
mov
fmull
sub
loop
imulb
pushf
cmp
daa
pop
mov
shll
dec
xor
push
push
push
xchg
sti
lock
jno
scas
and
mov
push
sub
mov
aaa
mov
inc
add
pop
into
push
push
adc
sti
ljmp
nop
mov
ss
sub
movsl
mov
add
and
ss
outsw
mov
add
fdivs
sub
xor
loop
loopne
xchg
push
cmp
testl
pop
sub
mov
sahf
sub
rcl
rcl
and
pop
inc
outsl
or
dec
cmp
xor
enter
popf
lods
shlb
mov
in
hlt
push
mov
mov
loope
das
out
sub
or
enter
mov
push
aas
out
imul
pusha
cwtl
popf
repnz
in
add
jg
lret
aam
mov
dec
fistps
imul
push
pop
jo
cmpsl
pop
scas
mov
mov
gs
mov
mov
ss
pushf
sub
fwait
clc
vpcmpeqw
mov
test
push
jmp
add
int
dec
adc
nop
push
mov
lock
cli
mov
inc
dec
pop
sub
mov
sarb
or
xchg
push
mov
mov
div
mov
add
adc
icebp
ss
shll
mov
lahf
bound
ss
setge
aad
mov
stc
je
xchg
jae
inc
add
inc
mov
iret
xchg
push
xchg
or
mov
dec
mov
mov
repnz
or
stos
sbb
jae
popa
mov
cmpsb
pusha
adcl
lahf
add
lods
push
hlt
gs
repnz
mov
sahf
xor
or
mov
or
jp
ss
jbe
add
mov
inc
push
cmp
add
shll
sub
std
fisttpl
shll
mov
push
cmpsb
or
jno
pop
lds
push
push
jg
mov
ss
pop
lods
sbb
xor
fstl
mov
mov
scas
xlat
lds
cmpsb
dec
and
xor
ss
ficoml
mov
aaa
inc
cli
mov
mov
gs
push
repz
jb
bound
mov
bnd
inc
jge
mov
jns
pop
mov
and
mov
xor
div
push
xor
adc
stos
pop
lcall
shll
ficomps
cmpsb
xchg
in
mov
aaa
idivb
mov
push
loope
push
shlb
pushw
lret
sarb
mov
leave
movsl
push
sahf
in
sub
les
mov
mov
cmc
jmp
sar
xchg
andb
mov
shl
mov
pop
lds
fsts
addr16
rcr
push
or
sbb
aaa
push
bound
jp
inc
or
mov
sbb
stc
mov
imul
mov
gs
push
je
enter
pop
aam
ficomps
add
cmc
scas
imulb
addb
stc
shrl
dec
mov
mov
xorb
icebp
push
mov
jno
cmc
aas
imulb
mov
rorb
xor
dec
mov
testb
dec
daa
mov
es
fists
in
fisubrs
mov
call
arpl
mov
rcl
adc
mov
lea
jbe
mov
inc
xor
nop
push
cmp
mov
jmp
out
dec
mov
imul
inc
mov
ja
bnd
xor
mov
adc
mov
clc
mov
lret
jns
jle
dec
into
mov
in
out
mov
es
cmpsl
mov
cmpsl
inc
out
popf
leave
jb
mov
mov
lret
aas
shlb
add
scas
mov
pop
jae
dec
xor
and
loopne
adc
jbe
push
mov
sbb
pop
jo
scas
out
xchg
pusha
insl
pusha
mov
fmuls
sub
mov
inc
xchg
jl
mov
xchg
mov
xor
add
ljmp
and
jnp
int3
inc
sbb
xor
xchg
rol
xchg
add
push
add
repnz
rorl
xchg
sbb
outsb
je
adc
mov
fistps
lds
rcl
ljmp
mov
nop
jbe
mov
stos
mov
fsubrl
test
mov
push
xchg
cmp
imul
out
inc
loopne
loop
adc
neg
or
xor
stos
sbb
hlt
jmp
jns
shll
xchg
push
shr
mov
cltd
jbe
xchg
jo
jbe
jae
lods
cli
xor
pushf
aam
movsb
mov
mov
rolb
xchg
outsl
out
xchg
test
out
xchg
jge
cld
aad
xchg
add
mov
cmpsl
jl
outsl
sub
les
mov
pop
add
cmp
mov
mov
repnz
lds
ljmp
jae
cld
lock
xchg
and
mov
fidivrl
mov
sub
mov
repnz
xor
mov
sbb
jnp
pop
stc
xorl
mov
mov
mov
mov
addr16
jecxz
lahf
fnstenv
mov
inc
jns
in
jnp
mov
pop
xchg
dec
cmp
mov
xchg
mov
mov
sub
mov
sti
divb
xchg
ss
mov
sub
add
xor
ss
pop
repnz
push
cmp
add
stos
aam
in
jnp
call
decb
lock
scas
and
mov
fadd
lret
jle
sub
mov
pusha
jb
insb
adcb
aaa
popf
xor
lods
pop
mov
xor
cmc
mov
mov
imul
sub
fbstp
add
mov
jno
fisubl
pop
lret
out
and
pop
dec
insl
mov
xor
stos
sbb
mov
add
push
mov
ljmp
xor
mov
lahf
mov
in
mov
mov
shlb
mov
sbb
mov
insb
pusha
mov
sahf
push
push
sub
lds
sti
insl
mov
mov
push
popf
adc
nop
fldt
scas
mov
xchg
rorb
push
push
add
das
or
insb
fwait
dec
mulb
add
int3
mov
xchg
mov
scas
add
nop
mov
mov
sti
std
mov
out
xor
mov
ficoml
shlb
out
stos
xchg
sahf
icebp
cwtl
cmp
pushf
sub
xchg
xor
mov
imul
jecxz
dec
pop
inc
jmp
push
stc
xchg
mov
jp
push
lahf
pop
es
lcall
mov
movsl
cli
mov
scas
mov
in
sbb
test
mov
adc
mov
call
sub
or
cltd
mov
pop
adc
mov
sub
shl
or
add
jns
mov
cmpsb
and
jmp
outsl
mov
sbb
ljmp
jmp
push
jbe
cmpsl
clc
ud1
sub
push
fwait
out
mov
pushf
leave
ss
sbb
mov
push
push
xor
je
ss
movsb
mov
jae
cmp
mov
mov
jno
or
hlt
sbb
mov
cmp
fcomp
subb
lods
mov
cmp
xchg
pop
cld
fadds
stos
or
mov
push
lret
sub
imulb
imul
mov
dec
pop
sarl
outsl
add
xchg
mov
mov
lahf
and
repz
push
mov
dec
fldl
sbb
int
or
stos
jmp
orb
mov
hlt
push
testb
and
mov
fists
jns
inc
adc
scas
pusha
push
xor
mov
popf
sahf
lret
pop
push
jecxz
shr
jl
mov
sub
pop
pop
aam
std
mov
in
loope
rcrl
out
add
sbb
arpl
mov
or
lret
jmp
call
mov
into
cmpb
test
mov
insl
aas
mov
jp
lds
jmp
dec
xchg
or
push
jp
push
and
cmpsb
or
fsubrl
mov
shrl
lcall
push
ss
sbb
xor
cmp
mov
lahf
les
add
ja
lods
stos
test
hlt
in
fmuls
in
daa
fs
ret
div
cmp
mov
jns
scas
sbb
les
ja
sbb
mov
add
sti
sbb
insl
loop
push
ss
mov
xor
jge
popf
xchg
cwtl
pop
and
jle
add
xchg
push
cmovne
sub
loope
es
mov
jae
cmc
fcoms
mov
imul
xor
mov
jl
insb
shll
mov
sti
stos
jmp
cmp
xchg
inc
les
xor
xor
mov
mov
mov
jo
mov
cmp
call
test
jmp
and
mov
stos
push
mov
inc
xor
les
dec
xchg
xchg
daa
jmp
add
scas
fwait
mov
push
jo
scas
mov
sbb
lock
xor
test
mov
cmp
jle
enter
rolb
cmpb
or
mov
mov
fwait
sub
mov
call
addb
fwait
loopne
bound
jae
fidivs
vcvtpd2psy
xor
aaa
dec
mov
or
pop
gs
shll
movsl
lock
dec
loop
adc
mov
mov
xchg
rcrl
shrb
jbe
int3
outsl
push
inc
mov
push
cmp
xchg
pop
adc
jmp
lahf
pop
xchg
inc
xchg
rolb
pop
idiv
stos
sub
fs
inc
push
mov
lods
scas
sub
shl
mov
fwait
pop
push
jecxz
adc
scas
test
lock
lahf
and
sub
push
mov
movsb
test
sbb
cs
lods
mov
outsb
imul
cmp
push
dec
das
jg
cmp
lret
in
jbe
jmp
lods
pushf
mov
add
xor
mov
sbb
jecxz
outsb
mov
repz
aas
jno
nop
xor
inc
push
xchg
cmp
imul
pop
arpl
adc
or
add
shl
rclb
xor
jnp
imul
pop
mov
or
fmuls
push
jp
outsb
les
loop
cmc
or
repnz
dec
mov
int3
xchg
or
cmp
push
jmp
mov
dec
mov
mov
test
push
push
ds
xor
in
add
xor
mov
mov
lods
mov
pop
push
int
mov
cmpsl
adc
dec
daa
inc
mov
sbb
cmp
aam
nop
bnd
push
mov
arpl
pop
lahf
xor
or
push
movsb
cmc
push
std
imul
imul
mov
popa
mov
movsb
push
sbb
outsb
mov
aad
hlt
popf
xor
pop
decw
lcall
or
dec
push
shl
add
dec
adc
div
mov
mov
in
popf
jge
pushf
mov
jbe
add
mov
sub
stc
sub
daa
ds
jno
or
jae
aas
movsb
cmp
mov
mov
push
jae
mov
dec
pop
pop
fdivrl
arpl
xor
xchg
push
mov
mov
mov
sti
sbb
dec
js
gs
shrb
bound
jp
jecxz
sti
ret
scas
lock
cmp
popa
data16
xchg
cmpsb
dec
rorl
pop
fnstenv
sti
push
dec
push
add
mov
insl
pop
fcomps
push
mov
and
pop
mov
testb
in
xchg
ret
sub
sarb
jb
adc
sbb
movsb
cmp
cmp
and
imul
faddl
fs
xchg
mov
inc
nop
cs
push
add
or
pop
mov
cmc
sub
pushf
or
pop
stos
lcall
mov
test
cmpxchg
out
in
pop
insb
dec
add
out
fldenv
pop
in
lds
jecxz
rorb
mov
pushf
ds
lret
sbb
cmp
xchg
pop
mov
in
and
out
iret
divb
jl
jmp
inc
jmp
loop
push
aam
or
mov
leave
jno
pop
push
pop
fdivl
int
loopne
mov
dec
gs
inc
cmp
cmp
fiadds
xchg
mov
mov
stc
popf
testb
lret
mov
subb
add
xchg
lock
xchg
xor
or
push
enter
das
outsb
xchg
mov
dec
inc
mov
mov
adc
inc
jnp
cmp
ficoms
nop
jb
mov
mul
jbe
imul
jp
adc
jge
and
movzbl
clc
call
mov
mov
dec
inc
xor
fwait
cmp
sub
repnz
ljmp
xchg
out
push
xor
repz
icebp
mov
jmp
adc
movsb
jnp
mov
mov
inc
jecxz
lcall
mov
and
in
in
push
gs
ret
mov
or
mov
out
test
pop
fcomps
or
ja
mov
mov
push
add
inc
mov
sub
inc
lret
sub
pop
dec
stc
mov
or
icebp
mov
jl
cmpsl
cmp
subl
mov
sarb
fildll
clc
sbb
aam
xor
movsb
mov
inc
xchg
jmp
mov
and
xchg
in
dec
mov
dec
nop
mov
inc
push
addr16
imull
hlt
pop
mov
ja
sub
mov
sbb
lcall
std
cmp
xor
daa
out
stc
in
mov
shlb
clc
jmp
mov
push
out
dec
jbe
sub
or
xchg
sub
mov
ss
icebp
fisubs
insb
ss
outsb
jbe
mov
mov
push
cmp
inc
xchg
cwtl
fadd
daa
jg
push
imul
lahf
lret
stc
or
mov
incl
test
repnz
mov
aas
cli
int
cmpsl
cmp
mov
push
xlat
mov
xadd
mov
fldt
fdiv
xchg
repnz
divb
imul
addr16
testl
adc
mov
fs
jne
jno
aaa
mov
aam
xchg
push
and
sub
fdivp
inc
insb
data16
imul
dec
mov
mov
sbb
sahf
add
jno
mov
mov
cmp
sub
xlat
mov
sbb
adc
mov
dec
and
mov
dec
cmpsl
aaa
cmp
or
lods
cli
mov
sbb
mov
gs
lea
sbb
in
mov
lock
push
jne
sbb
jnp
jbe
inc
xchg
rclb
jae
pushl
cmc
and
cmpsl
divb
stos
mov
mov
jmp
int3
sub
mov
add
js
pop
clc
pop
push
dec
adc
pop
repnz
div
inc
in
xor
shll
pop
push
daa
into
push
stc
into
cmp
lcall
mov
lcall
push
xor
sbb
xor
dec
cmp
cmp
mov
loope
scas
leave
push
pop
frstor
enter
dec
cmpsb
out
mov
pusha
lcall
and
ss
mov
out
mov
pop
cmp
test
sarb
sub
push
movb
out
mov
aaa
bound
mov
or
outsl
jmp
cmp
push
daa
jge
jl
jp
cli
fisttpl
mov
add
xchg
dec
mov
jno
xchg
pop
and
testb
cmpl
adc
mov
inc
les
sbbl
push
fstps
icebp
push
les
mov
not
dec
lret
ds
les
inc
jns
mov
mov
iret
adc
aas
cmp
mov
pop
pop
testb
mov
pop
mov
movl
ja
and
pop
mov
dec
mov
and
mov
sub
mov
daa
aam
lcall
fildll
jg
fdivs
and
loope
mov
add
push
mov
mov
push
test
ss
mov
loopne
mov
imul
mull
mov
jno
mov
mov
mov
add
mov
or
mov
pop
cmp
add
mov
fnstenv
mov
fs
aam
outsb
lods
mov
and
sbb
pop
shlb
lcall
hlt
in
adc
cs
aad
pop
roll
or
xchg
stc
xchg
mov
jne
mov
les
clc
movsb
loope
jnp
cmp
push
mov
adc
ret
aad
adc
fstl
push
stos
lea
mov
aam
jne
sbbb
jle
fcmovnb
mov
xchg
cmpsb
jae
add
outsb
adc
lods
mov
ret
dec
jo
mov
cmp
cwtl
jp
mov
outsl
hlt
outsb
mov
dec
mov
xchg
push
dec
je
outsl
into
pop
push
xchg
sarb
cltd
mov
in
andb
js
into
push
test
adc
jmp
sub
fisttpll
jbe
mov
xchg
outsb
mov
mov
xchg
aam
loope
jb
icebp
push
jb
lret
mov
sbb
jbe
or
fs
jns
and
mov
data16
mov
in
xlat
lds
jbe
movsb
lods
or
jp
xor
repnz
jbe
data16
in
sahf
push
aam
xor
dec
add
js
lds
lret
arpl
ds
into
mov
mov
fldcw
mov
push
cmpsb
shr
cwtl
fs
jge
jbe
jbe
in
mov
lret
fcmovnb
mov
mov
jmp
jns
lahf
mov
ficomps
lea
mov
push
mov
dec
mov
cmp
xchg
sub
xlat
dec
mov
cwtl
xchg
mov
jnp
insl
xchg
sti
test
or
sbb
fdivs
insb
mov
lea
or
cwtl
adcb
ja
data16
inc
iret
out
out
and
or
mov
xchg
es
mov
aad
outsl
add
lret
imul
hlt
out
test
repz
out
push
ss
jp
jae
or
roll
xchg
pop
mov
lods
xchg
divb
dec
js
mov
in
test
mov
mov
lods
push
retw
inc
mov
sub
sub
lret
push
mov
lcall
push
ficoms
inc
ret
xchg
sub
js
fwait
movsb
add
adcb
dec
movsl
adc
mov
test
and
test
push
fdiv
sub
dec
cmp
ss
sub
div
sub
aas
pop
int
cmc
dec
aas
repz
mov
add
mov
outsl
inc
cmp
shl
je
cltd
mov
hlt
jns
xchg
xor
movsl
into
push
lds
mov
mov
dec
sti
frndint
iret
in
fcmovne
xor
jle
repz
push
sub
inc
mov
imull
xor
leave
fidivl
jne
sbb
or
xchg
movsb
mov
cltd
push
add
adc
loopne
ja
xchg
popf
xchg
xor
jecxz
xor
mov
loope
mov
or
jo
jle
repnz
mov
dec
outsl
test
jp
es
aam
jbe
or
dec
cmpsl
lds
lahf
xchg
mov
and
ja
icebp
xchg
test
sub
out
repnz
in
aam
mov
adc
roll
sbb
and
scas
mov
xchg
bound
orl
push
add
ss
mov
imul
mov
jb
xor
xor
scas
xchg
mov
mov
jne
lods
movsb
fs
adcl
popf
mov
push
jo
mov
xchg
mov
xorb
les
inc
lods
and
push
adc
movsl
aam
xchg
mov
pop
in
stos
mov
mov
sub
movsb
inc
lahf
sahf
mov
add
cmpsl
int
jbe
xor
stc
inc
xchg
int3
iret
xchg
cmpsb
cld
cwtl
xchg
inc
movsl
mov
fs
sbb
cs
test
pop
cwtl
movsb
repnz
cltd
and
cmpsl
jne
aam
mov
xor
push
mov
test
std
mov
cwtl
pop
mov
xchg
mov
fcoml
sbb
sub
aaa
loopne
lcall
scas
cmp
dec
adcb
mov
lret
hlt
mull
mov
shlb
in
jl
pushf
jae
jecxz
dec
xchg
mov
loop
and
jecxz
cmp
loope
adc
xor
sub
jp
push
xlat
push
push
jbe
outsb
ror
add
insb
cmc
fiadds
addr16
sub
gs
lret
aas
clc
and
sbb
maskmovq
testl
pusha
mov
es
shl
sbb
sti
xchg
push
loop
lds
test
jmp
data16
out
cld
inc
ja
mov
xchg
rcrb
sub
fstps
cmp
inc
push
push
xchg
and
icebp
xchg
jecxz
outsb
leave
or
shrl
mov
addr16
movsl
mov
in
sub
mov
adc
testl
and
mov
gs
call
leave
lock
sbb
sbb
rorb
cli
mov
rclb
loop
push
rol
push
mov
jbe
pop
loope
sub
mov
lret
movsb
rolb
jne
xchg
inc
ljmp
int3
jae
sbb
arpl
mov
imul
rcrb
xchg
push
ljmp
push
movsb
mov
push
movsl
imul
adc
mov
shr
xchg
loope
xchg
testb
and
pop
sub
lret
es
cmpsb
mov
inc
aaa
jnp
adc
shr
add
and
std
cs
neg
lcall
sarb
negb
fnstcw
lods
xchg
inc
loope
mov
lods
popf
lret
rol
in
fwait
xchg
adc
arpl
pop
out
stos
mov
jmp
dec
cmpb
push
jp
call
mov
insb
fcmovne
int
out
jmp
xor
sbb
sub
mov
sbb
xor
push
mov
adc
test
data16
popf
and
inc
lods
xor
mov
out
lea
fs
aas
xchg
mov
push
out
lds
jbe
popa
movsb
rclb
pop
fiadds
das
imul
pop
sub
dec
or
lock
fnstcw
rcr
mov
aam
sub
add
mov
enter
lods
adc
aad
fwait
or
ficompl
aad
and
mov
sub
ds
rcrb
jnp
mov
xor
mov
in
push
mov
cmp
mov
cs
jle
sub
sbb
pop
adc
mov
jb
or
mov
hlt
mov
nop
les
test
mov
clc
arpl
xchg
shr
inc
pop
daa
outsb
mov
push
add
push
cli
and
inc
vmaxsd
imull
fidivrs
adc
pop
or
cwtl
or
dec
dec
sahf
shl
lret
aas
ljmp
sbb
jb
cmc
mov
cmp
or
fdivrp
aam
and
mov
sarb
fdivp
or
pushf
mov
ss
inc
xor
and
popa
into
add
das
xchg
add
scas
push
mov
testb
sub
cld
mov
popl
rol
in
push
testl
stc
xchg
shl
xor
ss
inc
popa
pop
xorb
cmc
push
push
mov
mov
inc
sahf
hlt
pop
pop
lret
lcall
ds
fisttps
push
cmp
dec
dec
out
pop
call
mov
pop
mov
clc
ret
inc
in
and
push
xor
daa
cmp
inc
and
mov
fadds
rcll
mov
out
js
push
sub
in
daa
enter
into
popf
xor
sub
mov
mov
ljmp
lahf
mov
dec
add
adc
dec
mov
push
shrb
pop
bnd
cmpsl
cmp
loopne
stos
or
bound
push
push
jbe
and
adc
mov
lds
js
cmp
push
inc
nop
fiaddl
or
aad
add
lret
sbb
pusha
test
mov
push
and
ss
mov
stos
aad
les
in
aam
sbb
ss
scas
add
push
mov
pusha
lret
and
outsb
loope
push
sahf
mov
cmp
push
movsl
and
mov
pop
inc
xor
enter
out
dec
mov
mov
insb
cmp
cld
sub
loopne
mov
rorl
test
jmp
lods
int
mov
lds
mov
data16
mov
cli
cmp
cmpsb
mov
ss
fdivp
mov
fwait
pop
mov
pop
lret
mov
negl
fcomi
fwait
cs
mov
xchg
mov
dec
mov
mov
je
adc
sti
fbstp
jbe
outsl
scas
xchg
and
mov
ds
push
dec
inc
bound
test
lds
inc
jp
sub
push
popfw
xor
mov
icebp
xchg
cmpsb
testl
mov
test
push
lahf
gs
shlb
push
lret
repnz
divl
mov
mov
jmp
aaa
outsl
mov
cmc
lods
xorb
inc
popa
orl
aam
add
pop
test
in
mov
insb
nop
xchg
cmp
jbe
fstp
rcll
scas
out
int
mov
daa
pusha
filds
imul
stos
mov
in
data16
add
jb
and
and
out
xchg
cmp
mov
xchg
lcall
inc
mov
cmp
addr16
cltd
inc
mov
leave
loop
inc
mov
outsl
scas
mov
or
movsl
fiaddl
mov
mov
push
inc
mov
ret
ss
sub
fistpll
jmp
add
je
scas
push
mov
std
out
call
mov
fmull
lock
cmp
mov
xchg
mov
mov
sub
mov
sub
subb
cmp
mov
in
pop
jbe
xchg
sbb
push
scas
scas
cmp
mov
std
push
mov
call
stos
mov
shlb
mov
pop
imul
dec
loope
add
cwtl
sub
subl
sbb
push
add
pop
mov
lock
sahf
and
jb
add
mov
jmp
cld
pop
push
push
or
cmovl
jbe
or
arpl
sub
ljmp
ss
bound
into
xor
xlat
and
sahf
ret
jb
mov
popf
rorb
stc
popf
pusha
cmpsb
aad
mov
xchg
ret
xor
xor
mov
call
ss
imul
pop
sbb
or
jge
in
mov
dec
mov
ss
sub
mov
fcompl
fwait
lods
mov
mov
add
jle
xchg
pushf
mov
sarb
xchg
sub
sub
loop
mov
loopne
mov
in
dec
fnstcw
clc
mov
pop
xchg
ja
fwait
jno
and
idivb
jbe
leave
movsb
or
or
dec
mov
sub
dec
fidivs
roll
mov
lds
loop
inc
test
xchg
fsubrs
dec
xchg
xchg
mov
adc
xor
test
inc
sti
jbe
xor
xchg
and
mov
xlat
test
mov
cwtl
fadd
stos
nop
repz
inc
pop
aaa
jo
repz
mov
push
or
inc
out
int
outsb
mov
mov
xchg
push
push
push
jo
mov
insb
cmpl
movsb
inc
mov
jecxz
cmpsb
adc
or
shrl
test
pop
inc
je
outsb
lahf
mov
scas
and
das
and
mov
test
dec
mov
repz
test
cli
push
mov
xor
dec
mov
push
inc
lock
sbb
pandn
clc
mov
or
sahf
ds
imul
shll
popa
adc
push
lcall
mov
jb
lock
xor
and
test
ss
adc
rcrl
sbb
ja
mov
fmuls
adc
add
xor
mov
insl
bound
arpl
mov
or
pop
mov
call
jbe
lods
cwtl
outsl
adc
mov
sub
stos
or
lret
pop
test
jns
xchg
enter
cmp
jmp
pop
out
or
mov
out
mov
and
sub
js
lret
lea
les
and
jbe
mov
pop
popa
push
gs
inc
lcall
js
test
xchg
add
push
mov
dec
das
icebp
sti
mov
pop
movsl
mov
ret
jg
inc
inc
cmpsl
or
sbb
dec
dec
popa
fmuls
adc
push
cltd
frstor
mov
fwait
push
mov
or
xchg
mov
push
lcall
dec
les
and
add
cmpsb
lds
ss
lret
add
pop
lods
jns
dec
loopne
cmpl
mov
les
push
cmpsb
data16
out
adcb
mov
iret
xor
std
jnp
add
rol
xchg
rclb
mov
push
pop
js
cmc
fisubs
ljmp
popf
aaa
add
cmp
fs
lds
enter
daa
nop
ja
jb
jmp
push
popa
repnz
inc
lock
xchg
ss
sbb
lret
mov
mov
push
popf
xchg
dec
mov
mov
jge
sbb
cwtl
adc
sbb
dec
loope
stos
adc
daa
sub
mov
fiadds
xor
mov
es
pop
inc
cltd
xor
mov
sub
pusha
adc
aam
inc
inc
inc
mov
out
cmp
xchg
xchg
cs
push
imul
xchg
push
aaa
in
jo
mov
cmpsb
add
jns
cmp
ret
ljmp
aam
push
mov
sub
mov
lods
popf
mov
les
dec
mov
sub
divl
lret
xchg
fsubp
lea
mov
mov
sti
pop
or
jbe
repnz
pop
nop
decb
adc
mov
jl
fisubl
into
mov
inc
jae
stos
mov
shlb
dec
cmp
xlat
sub
test
dec
fstpt
cmp
mov
sbb
push
cmp
xchg
cmp
inc
ss
aam
xchg
push
xchg
jbe
or
push
scas
enter
out
je
bound
fistpll
cli
mov
mov
ret
or
add
jno
les
add
das
aaa
aaa
sub
rol
test
nop
repnz
pop
jno
es
mov
mov
shl
pop
fistpll
fidivrs
cmp
pop
sbb
repnz
and
mov
and
out
jg
lods
xchg
mov
mov
lret
or
mov
rclb
das
sub
lret
add
sub
ret
push
mov
out
xchg
xor
push
ljmp
loopne
sub
bound
pop
mov
mov
fdivrs
mov
pop
es
sbb
and
mov
cld
stos
in
or
mov
pop
les
push
sub
ljmp
add
mov
ret
shlb
cmp
mov
sub
add
shrb
test
pop
in
add
lds
ljmp
repnz
enter
movl
mov
jl
mov
es
pop
mov
ret
icebp
lcall
ficomps
jae
jecxz
jns
jo
cmp
ret
pusha
add
mov
popa
repz
bound
rclb
xchg
xchg
pop
cs
xchg
shl
mov
clc
fldcw
mov
sub
lock
or
stos
stos
mov
lcall
fldenv
rcl
sti
fists
sub
cs
adc
lahf
stos
jge
clc
push
mov
sbb
setge
fnstsw
mov
mov
pop
js
into
sbb
sub
int3
cli
mov
dec
sbb
xor
and
out
or
push
mov
mov
xchg
dec
and
xor
inc
test
mov
mov
divl
mov
add
fdivrs
ljmp
xchg
sbbl
fwait
aam
or
add
xchg
mov
xchg
add
lahf
jo
std
clc
adc
loop
cli
mov
dec
movsb
hlt
sub
pushf
push
hlt
sbb
add
mov
pop
rorb
mov
push
mov
xor
xor
sub
aam
cmpsl
adc
or
or
cmpsl
or
push
sub
movsb
push
add
sbb
adc
pop
inc
fwait
mov
jnp
test
mov
jge
mov
popf
lea
fs
shll
dec
push
imul
out
cwtl
push
imul
faddp
aad
xchg
push
sbb
icebp
ljmp
and
mov
call
das
mov
dec
or
ljmp
add
add
mov
pop
mov
aam
into
mov
jb
dec
mov
xor
lods
cmp
mov
dec
dec
loop
les
cmpsl
fimuls
adc
ret
xor
iret
push
in
mov
mov
adc
mov
mov
mov
mov
mov
dec
mov
push
ljmp
pop
mov
and
jns
mov
insl
jbe
adc
mov
xor
push
mov
arpl
push
fists
mov
xor
sub
sub
jns
jne
cmp
push
push
jle
xchg
shr
arpl
jne
or
xor
aam
jne
aad
loopne
sub
daa
pop
lock
pop
mov
in
mov
aas
cmc
out
mov
adc
stos
sarl
clc
add
bts
mov
jmp
adc
mov
jmp
pusha
lea
jb
test
cmp
pushf
lea
ja
clc
clc
cmc
cmp
add
pusha
stc
or
jmp
insl
cmp
icebp
sub
mov
pusha
inc
sahf
nop
jbe
int
add
or
xor
sbb
or
push
js
xor
cli
pop
jb
cmc
lahf
jno
push
push
jmp
cmpsl
add
loopne
icebp
sub
push
xor
jmp
loopne
cmp
sbb
sub
jbe
popf
xor
insb
sti
adc
pop
adc
mov
mov
lods
lock
push
or
lahf
cmpsb
dec
pop
je
lds
add
xor
xor
nop
and
sub
mov
inc
and
cli
pushf
std
sub
out
sub
xchg
push
fwait
cmp
loopne
jae
sub
sbb
cmp
xchg
clc
add
cli
out
dec
loop
adc
push
xchg
stos
test
add
insb
into
addr16
fwait
dec
mov
dec
insl
mov
cmp
jno
add
movsl
xchg
out
stos
cmp
mov
in
sbb
push
pop
sub
ja
pop
lret
pop
hlt
shlb
jp
push
lods
jl
jle
shl
inc
in
das
xor
dec
mov
jb
jge
lods
sub
das
shr
sahf
xor
adc
ret
negb
dec
stc
hlt
xor
jle
daa
sti
std
push
dec
in
xor
call
lea
cmp
sub
jmp
rol
cmp
cmc
call
ja
push
lock
sarb
mov
add
fdivrl
loopne
ret
jmp
or
scas
mov
cmpsb
push
aam
ljmp
clc
inc
ficoml
call
jae
in
sub
ret
incl
ret
mov
pop
mov
sbb
mov
pop
and
aad
mov
dec
cmpsl
or
loop
add
inc
jmp
xor
and
icebp
add
in
pop
cmpsl
and
jle
andb
cmp
or
push
pushl
mov
jmp
jmp
movl
pusha
mov
movb
pushl
lea
jmp
lea
jne
rcl
mov
pushf
test
add
bt
movb
pusha
cmp
movzwl
pusha
bt
mov
test
add
pushf
pushl
jmp
cmc
test
bt
or
pusha
lea
je
sets
movzbw
mov
setg
movsbw
movsbw
mov
lea
call
mov
call
pusha
pusha
movl
mov
movl
push
lea
jmp
xchg
dec
dec
out
sub
or
repz
sub
cmp
adcl
insl
shlb
push
push
shll
inc
clc
push
cmp
aas
or
mov
in
int
ret
test
mov
scas
scas
xor
mov
xor
or
shl
sub
adc
fmull
jno
lds
iret
imul
xchg
cmpl
add
out
inc
mov
stos
push
jecxz
inc
out
sub
shlb
dec
out
add
fldt
mov
gs
mov
rclb
daa
cmp
cmpb
daa
inc
sti
dec
popl
cmc
test
notb
incb
in
jl
sahf
in
cmp
loope
sbb
mov
gs
or
xchg
popf
and
jg
inc
insl
sbb
xor
sub
pop
add
cmp
push
push
popf
aaa
inc
outsb
jno
dec
or
inc
shrb
mov
mov
data16
rclb
push
cld
rolb
add
js
sbb
push
in
fidivl
sub
jle
scas
pop
xor
lret
pushf
std
sti
ret
mov
push
popa
jbe
inc
push
or
fsubs
adc
dec
and
mov
lods
and
out
cld
outsl
push
mov
out
inc
cmpsl
jnp
movsb
push
inc
cmp
mov
test
add
jecxz
jne
sub
mov
inc
add
orl
faddl
lods
mov
fs
jae
call
pusha
movb
movb
lea
jae
push
not
mov
call
pushf
pusha
jmp
out
jne
in
sub
add
dec
jo
xor
sub
std
mov
inc
cld
sub
mov
jl
xor
or
add
andb
in
lret
out
xor
pop
add
xor
cmp
xor
mov
sbb
out
and
subb
mov
push
movsl
adc
lahf
push
lea
arpl
xor
xor
test
add
add
jmp
in
sub
je
gs
out
mov
das
mov
and
cmp
inc
fldt
js
push
mov
rorb
imull
add
sub
mov
push
stos
xchg
inc
xchg
loope
mov
in
jmp
add
pop
and
leave
dec
movsb
outsl
in
std
cmp
loopne
adc
test
lock
jne
jmp
add
clc
pop
jge
jno
loope
xor
mov
adc
clc
mov
push
or
loope
out
out
pop
mov
push
jmp
rcrl
loop
imul
jmp
ficoml
mov
iret
sub
cltd
in
sbb
rcrb
fdivrl
fisttpll
jmp
push
add
push
leave
sub
out
sub
mov
test
xchg
and
daa
mov
sti
fisubs
stc
xlat
inc
cmc
test
popf
loop
sbb
xor
sub
jbe
jle
fdivs
mov
cld
push
jp
cmp
nop
pop
dec
lret
decl
pop
pusha
xchg
movzwl
push
subl
rcl
push
jo
mov
adc
and
rep
mov
jno
enter
movsl
cli
loop
adc
inc
mov
xchg
sbb
push
dec
lret
lock
inc
inc
ljmp
mov
sbb
sub
shr
cmp
fmull
pop
lea
fdivrs
out
cld
sahf
sbb
sti
out
dec
xlat
lahf
jl
dec
adc
mov
xorl
sub
push
mov
into
jp
push
pop
jo
jp
cmp
leave
mov
or
add
fldenv
xchg
rcr
add
addr16
scas
dec
aaa
stc
das
shlb
fildl
cmpsb
ljmp
por
dec
jo
es
addr16
jnp
stos
push
pushf
lea
call
push
pushl
jmp
mov
lea
je
seto
bswap
mov
mov
bswap
call
call
adc
add
pmaddwd
insb
test
shlb
and
cmpsl
pop
push
cmc
mov
mov
mov
fstpt
cwtl
into
mov
shlb
mov
cmp
outsl
xchg
divl
push
cmp
mov
add
adc
pop
pop
es
and
mov
call
lahf
fldenv
sarl
dec
jb
cmp
and
outsb
sub
dec
imul
xor
loope
jecxz
dec
mov
in
inc
fwait
addl
into
and
jb
add
sub
test
xor
sti
jg
imul
fdivr
cmp
pop
bswap
setnp
call
mov
add
push
lods
cwtl
mov
mull
in
xchg
push
xor
cmp
es
jae
mov
test
jge
popa
jnp
sbb
in
fsts
dec
outsl
iret
scas
ret
popa
mov
sub
add
push
jl
loop
sbbl
xchg
mov
insb
push
sahf
cmp
xor
stos
test
loope
loope
movsl
out
jbe
and
in
cmpsb
std
out
jae
jecxz
into
das
addl
lods
cmp
push
jl
and
lods
cmc
inc
jg
ret
mov
pop
dec
or
mov
pop
fcmovu
das
out
mov
jecxz
cwtl
mov
ret
xor
push
repnz
rsm
dec
jmp
push
stos
testl
gs
mov
mov
loope
push
enter
add
test
pop
sub
aad
decb
jo
repz
xor
es
push
add
test
enter
push
mov
sub
fdivrl
cmc
mov
mov
clc
insb
adc
mov
sarb
hlt
jo
jno
ret
cmp
adcb
and
or
je
add
or
pushl
mov
sub
jg
push
insl
push
incb
jne
pop
addr16
fwait
sbb
fldlg2
ds
or
fs
pop
out
xchg
mov
out
mov
push
xchg
adc
lds
lret
sarl
jge
push
ljmp
dec
loop
add
push
das
cmp
arpl
mov
pusha
sbb
inc
icebp
mov
rorb
pop
cmp
mov
xor
out
aam
shlb
sub
pop
or
mov
xchg
push
cmpsl
mov
xlat
cmp
jle
push
fisubl
adc
cmp
sub
mov
mov
loop
mov
outsl
pop
and
xchg
mov
fcompp
repnz
push
and
xchg
pop
lea
fisubrl
rcr
xlat
mov
dec
dec
insl
jle
lahf
mov
lds
mov
xor
pop
or
cmpsb
pop
cwtl
hlt
xchg
popf
inc
shrl
jnp
push
and
cmc
or
mov
fwait
sbb
mov
cmp
and
fistpl
xchg
in
je
outsb
div
es
and
add
fsubrs
cmc
sbb
stos
mov
test
pop
in
fwait
je
and
mov
adc
sub
or
xchg
or
jns
push
sub
xchg
inc
movsl
arpl
lret
pop
pop
inc
mov
fidivrl
jb
sbb
shl
mov
lock
or
push
fs
fdivr
dec
div
cmpsl
fwait
lcall
scas
push
addb
sub
test
sbb
or
inc
sahf
data16
movsl
mov
sub
pop
mov
mul
sub
and
jnp
repnz
daa
adc
pushf
and
insb
mov
lods
lock
or
cwtl
das
mov
insb
fwait
push
xchg
adc
mov
sbb
pop
negl
add
sub
aas
stc
xchg
adc
enter
sar
stc
je
lods
shrb
mov
fadds
cwtl
pop
adc
sub
pop
shll
je
fwait
popa
cmp
lock
in
add
adc
dec
hlt
dec
pop
out
test
cmpsb
scas
lret
lcall
mov
popf
icebp
cmp
pop
mov
cmc
sub
adc
lcall
pushf
lea
mov
arpl
sbb
daa
jg
cmc
shr
ds
pushf
lock
ficoml
mov
loopne
cld
rcll
lea
div
inc
fs
hlt
push
popl
stos
pop
mov
sub
cli
stc
std
sub
add
jae
inc
stos
test
or
mov
and
jg
push
inc
pushf
mov
pushf
push
lea
jmp
and
in
add
cli
mov
out
xlat
stos
pop
xor
popf
ficoml
repnz
push
sbb
jecxz
mov
mov
ret
mov
movsl
ret
shll
push
push
push
pop
aam
pop
inc
mov
es
or
out
loopne
fistpll
mov
cmpsl
lcall
and
imul
nop
out
stc
or
pusha
inc
xchg
sub
les
pop
sbb
leave
mov
jno
xor
lea
pusha
inc
lea
push
call
mov
pusha
xchg
not
movl
lea
movzbw
lea
push
mov
pushf
push
movl
pushf
pushl
pushl
popl
push
mov
push
pushf
pushl
ret
jmp
in
jbe
jecxz
add
cmp
jo
clc
push
mov
mov
mov
xor
movsl
scas
fnsave
cmpsb
mov
mov
push
sbbb
mov
orb
pop
jg
xor
jbe
out
insb
pop
iret
and
sbb
push
jg
loope
adc
aas
dec
pushf
stc
jnp
sub
popf
fidivs
shrl
or
jle
cmp
cmp
xchg
add
sbb
pushf
mov
bts
adc
mov
push
sub
jge
sub
pusha
pusha
call
inc
sbb
adc
shrl
xor
sar
ss
das
mov
add
ljmp
push
and
dec
push
outsb
out
adc
sbb
sub
std
cmpsb
xor
push
cltd
das
adc
aam
rcrl
push
movsl
das
inc
mov
dec
test
lcall
xchg
or
stc
adc
jnp
xorb
sub
fnsave
sahf
inc
test
mov
lea
not
movzbl
mov
jmp
jmp
dec
loop
add
stos
pop
xor
bound
xor
jl
loopne,pn
mov
cmpl
sub
mov
dec
add
stos
or
xchg
test
pop
aad
pop
ret
mov
out
mov
fildl
mov
insb
cmp
xchg
adc
push
dec
adc
test
rorb
sbb
sub
jno
ret
sahf
out
fs
sbb
dec
test
cmp
sahf
dec
aad
stos
jo
test
inc
sbb
std
adc
mov
and
cwtl
xchg
lods
inc
cmc
add
pushf
pushf
pusha
lea
jbe
dec
push
jmp
jmp
out
jne
loope
add
sbb
test
out
daa
daa
pop
arpl
scas
inc
lock
inc
mov
dec
fwait
inc
fistpl
jnp
xchg
push
sbb
cwtl
clc
addb
sub
lds
push
aad
and
jecxz
andb
pop
or
jae
int
inc
in
clc
dec
mov
cli
fdivrl
hlt
in
cld
jb
cld
scas
enter
mov
lea
jae
shrd
mov
or
mov
or
shr
mov
test
test
xor
pusha
bt
repnz
jmp
lea
jae
call
push
iret
lret
add
and
shll
out
arpl
iret
and
popf
sbb
add
adcl
rorb
scas
inc
dec
xor
out
adc
inc
lea
jb
in
ljmp
out
mov
andl
addr16
and
pop
aam
frstor
xor
and
cmpsl
jbe
inc
idivb
add
cmp
xchg
sbb
push
sbb
pop
movsb
adc
cmpsl
jno
lods
sti
push
loopne
add
dec
cmp
int3
lods
xorb
jg
lcall
push
add
call
repz
xchg
pop
mov
or
push
push
sub
divb
clc
popa
nop
stos
movb
lods
ret
push
jno
out
popw
popf
movsb
int
ret
add
mov
popa
push
fistpl
lods
cld
pop
bnd
cli
add
mov
nop
popl
outsb
outsb
fistpl
bnd
xchg
insb
mov
mov
push
lea
es
push
push
or
sub
dec
jge
aas
shll
bound
sub
lahf
fwait
pusha
sti
int3
shll
mov
shrb
flds
ss
test
stos
jbe
cli
inc
xchg
adc
jbe
add
addr16
mov
fnsave
cmp
dec
stos
in
xlat
mov
lcall
fucomp
add
call
jp
dec
pusha
mov
jmp
or
outsl
out
or
sbb
scas
pop
rorl
and
ja
pushf
imul
stc
cmp
pushf
pushf
add
pushf
mov
lea
jmp
jnp
fildll
add
sub
outsb
fldt
sub
int
imul
add
scas
mov
pop
pop
sbbb
jl
cmp
repnz
mov
mov
push
and
pushf
sub
adc
pop
mov
fnstcw
sub
xchg
jae
jnp
pop
pop
pop
dec
ja
jae
lods
scas
push
jae
les
lods
popf
jmp
in
fistpl
jmp
lret
fisubrs
add
mov
pop
mov
icebp
push
mov
sbb
xchg
inc
xchg
movsl
cmp
fists
lock
adc
xchg
leave
cmp
add
imul
inc
nop
fstpt
pop
pop
sbb
stc
sub
cmp
into
pop
shlb
loope
or
data16
es
scas
or
adc
cmpsl
mov
scas
lahf
orb
rorl
push
shr
and
pushf
mov
rcr
lahf
adc
test
push
shl
cmp
setle
mov
clc
jmp
ds
adc
cmp
add
cmpsb
add
lcall
adc
movsl
shrl
fwait
pushl
inc
pop
sub
add
xchg
pop
jge
mov
js
push
leave
das
ret
test
inc
dec
std
adc
fnstenv
ljmp
popa
inc
sub
pop
jg
pusha
push
enter
lods
mov
lods
jne
push
adc
sub
roll
pop
push
loope
insl
xchg
lahf
fwait
jbe
pusha
inc
xor
pop
fadd
mov
adcb
xchg
push
push
pushf
push
movl
pushl
jmp
jmp
mov
mov
call
jmp
decb
cltd
add
and
fdiv
pop
sti
pop
xchg
adc
push
mov
pop
push
rolb
xor
mov
icebp
inc
pop
pop
insl
aad
in
sbbb
xchg
fidivs
test
mov
cmp
xorb
cmp
enter
dec
mov
xchg
xor
xchg
inc
jecxz
xor
push
lahf
inc
inc
cli
and
loop,pt
cmp
cmp
jne
outsb
clc
jge
aam
das
dec
arpl
pop
rorl
xor
sbb
fsubrl
add
cli
dec
imul
test
jl
xor
shr
out
les
or
in
adcb
dec
cmp
std
sub
xchg
cld
lea
lods
adc
int
jg
cmpsb
rorl
jnp
pop
mov
imul
sub
and
data16
xchg
lds
or
lea
ret
lods
aad
ljmp
pop
cli
mov
aas
mov
pop
jge
mov
ret
cli
incl
or
add
call
add
inc
js
je
jb
arpl
jae
rcrl
add
lock
and
cmp
fdivs
push
rcll
jmp
fimuls
jae
es
mov
imul
std
imul
mov
add
outsl
xchg
insl
inc
add
jae
arpl
jnp
pop
or
sbb
jb,pn
aam
clc
jne
inc
jp
add
cmp
test
movsl
fstps
cld
cli
cmpsb
xchg
xchg
bound
out
outsb
fsubs
mov
movsl
push
push
adc
cmp
imul
push
fldt
add
xchg
out
mov
xor
popa
aam
fstl
inc
popa
std
push
cmp
xchg
movsl
out
sub
mov
fsubr
arpl
inc
pushf
clc
lock
jne
mov
mov
decb
mov
push
int3
mov
loope
xchg
insl
jmp
outsl
xchg
push
mov
mov
mov
cmp
push
push
add
in
sub
push
mov
pop
aad
mov
xchg
jns
fs
jbe
push
lea
jae
cmc
rcl
push
mov
shld
shl
sub
test
mov
shrd
pusha
pushf
shrd
mov
clc
cmc
stc
cmp
sub
jmp
test
push
cmc
cmpb
movb
mov
lea
jne
shrd
shrd
mov
mov
pusha
clc
bt
test
add
test
stc
pusha
movzwl
or
movsbw
mov
cmp
add
cmp
pushl
call
pushl
popl
cmc
pushl
cmc
bt
cmp
pushf
pushf
mov
mov
lea
ja
mov
not
stc
bt
sub
cmp
bswap
add
push
sub
mov
test
mov
bt
clc
test
cmp
repnz
jmp
test
jbe
sub
and
or
into
mov
scas
lea
lea
mov
and
cmp
lock
pop
rep
mov
mov
pop
stos
inc
add
test
xchg
mov
xchg
icebp
xorb
notb
sub
inc
sub
wbinvd
cli
and
aad
mov
mov
movsl
rorb
cmpsb
sbb
mov
xchg
push
mov
jne
js
mov
dec
adc
into
mov
mov
mov
xchg
jl
xchg
in
in
mov
ret
lock
push
nop
add
sbb
sbb
mov
jbe
lods
jl
jb
bound
out
pop
pop
lret
lock
out
pop
dec
ret
adc
mov
les
push
lcall
or
jb
fimuls
cmp
mov
and
in
lahf
out
sbb
test
jbe
sahf
jae
imul
cmc
loop
fistpl
es
cmp
aaa
push
rorb
jg
xor
lret
ds
jno
insl
dec
mov
jmp
cmp
ret
jb
cli
adc
push
std
into
testl
push
rol
inc
pop
sub
sub
pop
mov
jae
negb
push
cmp
or
popf
push
jne
les
pop
sahf
call
and
call
pop
inc
std
fsubrs
add
popf
in
scas
adc
es
jg
and
pop
inc
push
out
adc
pop
and
pusha
xchg
cmp
inc
mov
cmp
mov
jg
push
or
jnp
hlt
and
gs
sub
jmp
mov
lods
xchg
leave
out
cs
mov
fbstp
notb
leave
cmp
mov
outsl
mov
notl
push
add
adc
sti
mov
mov
sub
inc
mov
cmpsb
mov
sub
dec
add
out
xor
nop
add
pusha
jg
sub
lds
loop
insb
mov
outsb
lcall
sub
cmp
andl
xchg
std
ret
stos
test
xchg
mov
lret
dec
ret
sbb
movsl
cltd
loop
push
push
sarl
jae
jo
testl
je
push
sbb
xor
rclb
jge
pop
ja
lea
pop
movsbw
mov
call
movl
push
pusha
lea
jmp
push
pushf
pusha
lea
jae
cmc
pushf
sub
pushf
call
add
jne
add
xor
mov
pusha
cmp
call
cmp
cmpsl
xlat
sub
jae
jp
in
lds
adc
inc
fcoml
mov
adc
cmp
dec
movsb
xchg
mov
mov
dec
or
xchg
mov
mov
adc
cmc
push
sbb
sbb
icebp
jno
mov
mov
add
push
dec
jo
movsl
pop
mov
loop
or
aaa
das
sub
mov
pop
in
pushl
add
cmpsb
cltd
in
out
jb
out
rorl
adc
pop
loopne
outsb
jge
loope
cmp
pop
nop
aam
xchg
jne
jns
lcall
mov
or
insl
lahf
mov
sub
fistl
addr16
loope
fisttpll
stc
push
test
fmull
jnp
test
shrb
and
pop
and
insb
jge
rol
sti
inc
push
bound
cmp
mov
jns
or
je,pt
rclb
push
xchg
int3
data16
jns
xor
call
and
notb
lock
jmp
scas
test
movsl
sub
xor
test
jmp
icebp
mov
in
mov
movsl
adc
andb
add
cmc
mov
xor
addb
jnp
test
data16
in
jnp
xchg
fdivs
mov
sahf
push
adc
xchg
inc
jmp
xor
add
mov
test
pop
mov
jmp
movsl
push
movl
hlt
pop
or
or
dec
repz
dec
icebp
std
sub
enter
ss
or
dec
repz
leave
jne
out
dec
pop
jle
shl
pusha
adc
ljmp
lret
push
outsl
jp
mov
fxch
cs
in
jp
mov
sbb
sub
addr16
sub
add
int
shlb
sub
arpl
movsb
sarb
dec
cmp
mov
loope
addr16
pushf
sub
stos
repz
js
xlat
cmp
rclb
push
mov
jne
hlt
js
popf
dec
sbb
sub
pop
xchg
sbb
and
or
sahf
int3
mov
xchg
cmpsb
in
pop
aad
lods
jbe
inc
xchg
jae
pop
cmp
add
xchg
repnz
sbb
pop
loop
outsl
mov
cmp
cwtl
mov
dec
pop
lock
arpl
cmc
dec
dec
mov
jne
popf
cld
rcrb
push
loope
test
sub
ljmp
pushf
mov
bswap
fists
rcll
decb
cwtl
mov
inc
in
or
jmp
rcrb
or
insb
div
cltd
test
mov
mov
imul
pop
jle
pusha
loop
mov
xchg
out
mov
adc
cli
push
dec
add
iret
js
xorl
sbb
and
sbb
out
std
nop
fstl
mov
mov
imul
imul
repnz
dec
lahf
mov
test
and
xor
out
out
into
sub
sub
mov
call
pop
lods
divb
aaa
fisttps
add
add
sbb
lret
and
xchg
inc
sbb
push
fwait
sti
clc
ja
xor
mov
and
inc
sub
scas
daa
andb
cmp
mov
shl
mov
push
mov
add
xchg
addr16
mov
cmp
fldenv
push
mov
fcompl
cwtl
mov
popa
add
pop
mov
or
cltd
and
add
lea
ja
rol
rol
sub
or
add
movsbw
rcr
mov
pushf
mov
test
cmc
test
repnz
call
pop
push
cli
shrl
add
xor
xor
call
sub
sbb
and
push
pushf
sub
lods
imul
sub
sub
mov
test
cmpsl
iret
loop
adc
mov
sbb
push
or
lret
adc
mov
pop
cltd
in
arpl
mov
and
and
ret
imul
mov
shll
lea
mov
outsb
or
out
jle
lret
pop
jo
jmp
movsl
fstps
je
scas
dec
shlb
call
rorb
sub
jecxz
ror
mov
pop
test
adc
pop
sti
daa
xor
cmp
xchg
adc
iret
fisttpll
pop
push
in
sbb
pop
cmp
mov
imul
jecxz
pop
out
add
loope
xchg
loopne
and
movsb
nop
and
andnps
sbb
sahf
pop
arpl
mov
push
ja
decl
rclb
push
mov
xlat
outsl
jle
sub
inc
inc
shrl
add
ret
sub
or
aad
adc
dec
mov
inc
mov
mov
outsl
enter
xor
outsb
mov
adc
xor
pop
push
popa
adcb
jne
movsl
cmc
xorl
dec
fisubl
cwtl
imul
sub
add
jnp
sub
and
xchg
or
out
cmp
fmuls
push
mov
cltd
in
sub
push
push
jecxz
pop
in
pop
aad
add
icebp
add
aad
mov
xor
test
cmp
or
nop
mov
sub
fbstp
fwait
popa
repz
adc
cmpsl
inc
mov
divb
mov
sbb
dec
and
fdivl
insl
adc
mov
pop
add
out
and
cs
fldcw
movsb
adc
sub
sub
jno
sbb
into
jb
nop
adc
push
cli
sbb
inc
sub
mov
jnp
cmp
loope
cs
jecxz
pop
rcr
les
sub
sub
mov
adc
xor
pop
dec
jnp
mov
ret
fsubl
cmpsb
lcall
or
bound
mov
int3
push
sub
cmpsl
into
sub
cld
adc
hlt
pop
and
and
repz
xor
pushf
insl
fdivl
imul
add
inc
call
inc
sbb
mov
adc
test
push
pavgb
ret
mov
mov
sub
leave
mov
mov
xchg
loopne
fcmove
sbb
enter
jp
sbb
add
adc
jge
adc
adc
push
imul
dec
inc
dec
xchg
xchg
ds
or
add
xchg
dec
mov
pushf
push
aam
push
push
out
or
aam
iret
xchg
sbbl
add
fxch
push
jmp
jmp
hlt
cmpsb
mov
addl
add
fwait
cmp
in
fnstcw
or
push
int
jae
pusha
pusha
pushf
lea
call
clc
jmp
out
call
outsb
xlat
test
subl
es
int
lret
loop
arpl
xchg
dec
fldt
pop
add
test
bound
xchg
pop
test
xor
mov
mov
jecxz
jb
push
xchg
imul
pop
adcl
xchg
mov
lahf
inc
mov
cmp
lret
xchg
call
aaa
xlat
sbb
jo
bound
std
int3
leave
in
lret
pushf
int3
and
jb
pop
lea
dec
or
loop
mov
adc
mov
ret
data16
cltd
adc
enter
into
sub
push
es
stc
or
movsl
aam
jle
sbb
in
dec
dec
das
aas
pop
loope
pop
and
shl
in
mov
in
fsts
aaa
enter
outsb
xchg
pushf
or
sub
jb
mov
cmc
adc
jecxz
cld
pop
cmp
fbld
sub
popf
in
or
cmp
rorb
nop
cmp
inc
stc
scas
repnz
lods
cmp
inc
ret
xor
push
push
es
pop
jecxz
or
stos
cmp
call
lock
mov
dec
jmp
mov
ljmp
lea
bound
sbbl
mov
jae
test
jnp
xchg
xchg
into
fistps
mov
test
es
mov
repnz
and
sbb
int3
mov
xor
and
into
ror
inc
test
std
mov
mov
mov
adc
insl
insb
popf
cmc
lcall
push
test
std
inc
mov
int
add
push
and
jne
repz
faddl
fisubs
mov
pop
sub
loope
xor
js
or
iret
and
cmpsl
mov
mov
dec
dec
lret
sarl
test
insl
cld
and
xor
ljmp
inc
int
or
mov
nop
loopne
mov
out
orb
inc
loopne
pop
jecxz
mov
pushf
lea
je
pushf
pusha
mov
cmp
pushf
call
mov
setnp
pusha
not
pusha
lods
cmp
xor
push
stc
ror
movw
dec
push
mov
pushl
stc
ror
jmp
flds
mov
cli
mov
lock
scas
fnstenv
push
sbb
xor
loopne
ja
ficomps
mov
aad
les
loop
push
mov
mov
retw
int
ret
mov
es
stc
mov
loope
adc
ficomps
push
in
xor
adc
test
cli
cmpsl
sbb
sub
icebp
inc
out
sub
jge
jnp
cld
add
jl
into
jb
and
inc
xor
jo
push
add
lods
mov
into
cmp
ret
xchg
insl
jno
fidivrs
inc
cmpsl
dec
fdivr
and
pop
sbb
andb
je
ret
jg
cli
xlat
addl
es
xor
jo
lret
into
test
xchg
call
pushf
push
lea
jmp
lea
movl
movsbw
lea
pushl
movl
pusha
pushl
popl
pushf
pushl
ret
enter
sub
mov
test
out
icebp
xlat
aam
add
ret
fwait
jne
std
shl
mov
lahf
sub
ss
pop
sbb
mov
outsl
jge
shrb
movsl
or
lret
movsl
mov
sbb
xor
cmp
int3
mov
aaa
push
xor
arpl
les
push
xor
jbe
fucom
repz
xchg
mov
loope
push
imul
fsubl
movsl
push
pop
lcall
imul
in
push
jle
loope
or
ret
clc
xchg
cmpsl
aam
push
scas
dec
jge
push
sbb
sub
cltd
test
cmp
cltd
push
pusha
ja
mov
pop
dec
fdivl
fisubrl
push
mov
pop
lahf
leave
in
test
xorb
pop
push
push
and
push
inc
mov
shll
mov
scas
mulb
xchg
sbb
xchg
int
pop
xorb
mov
xchg
test
out
inc
lahf
in
rorl
repnz
roll
repnz
pushf
pop
mov
cmpsb
mov
mov
mov
cld
adc
push
jno
cld
cmpsl
sbb
in
pop
inc
mov
sub
xchg
push
add
imul
ja
push
ficoms
xchg
sub
jecxz
pop
rcll
jle
cmp
push
pop
out
in
sub
popa
fwait
rcrl
nop
call
test
pop
mov
cmp
dec
sbb
fisttpll
jno
mov
sbb
mul
and
enter
add
xchg
add
lahf
movsbl
lea
call
cmp
test
jmp
and
leave
sub
std
add
popa
inc
addr16
jl
add
jns
cmpsl
mov
faddl
inc
arpl
in
repnz
jmp
lea
and
jb
pop
call
pusha
movl
mov
pushf
call
or
mov
test
sahf
xor
ret
push
add
js
notl
fcoms
hlt
roll
aas
mov
sbb
data16
in
pop
or
dec
in
fcmovnu
outsb
xchg
mov
addr16
mov
hlt
lret
movsl
ss
add
and
pop
ljmp
repz
les
and
sub
cmpsb
out
lret
cmc
ja
push
loopne
inc
jge
cwtl
int
clc
jns
int3
or
mov
les
jl
pushf
pusha
lea
jne
jae
movsbl
movzbl
lahf
mov
pusha
pushf
lea
jmp
iret
push
call
push
in
cmp
xor
cmpsb
leave
jb
add
add
mov
xor
mov
aaa
inc
mov
outsl
mov
and
mov
push
sub
jecxz
mov
pusha
xchg
imul
lods
sub
sahf
add
push
cmp
add
push
sub
insl
sbb
test
lock
dec
mov
cld
xor
mov
add
push
cmp
lock
sbb
add
mov
clc
mov
scas
repz
inc
sub
inc
test
push
add
hlt
add
add
and
out
jmp
in
cmp
cmp
dec
mull
aas
adcb
adc
sarl
push
jns
loop
mov
enter
and
sub
lcall
adc
mov
aad
movsl
add
push
jmp
ljmp
mov
pop
sar
sub
sub
and
sub
ss
push
out
lret
insl
in
sub
and
mov
rol
sub
inc
mov
stos
sbb
cmp
mov
das
and
int3
or
adc
fwait
dec
mov
xorl
ds
mov
lods
cmp
sbb
and
mov
jns
push
add
in
es
jnp
and
xlat
adcb
jb
addb
cwtl
cltd
add
outsb
mov
pop
push
cmp
in
pop
sti
pop
add
dec
aad
inc
je
xorb
addb
xchg
scas
mov
cmpsl
pop
mov
inc
rclb
jle
loopne
mov
inc
mov
sub
push
jae
outsl
hlt
test
pop
jns
insl
jl
push
movsl
lock
sgdtl
mov
push
loop
mov
or
sbb
int3
adc
jecxz
jmp
stos
jnp
loop
pop
pop
sbb
and
int3
mov
mov
pop
pop
in
gs
rorl
popf
mov
jl
in
pop
lods
negl
jl
cltd
rcrl
add
into
adc
mov
mov
getsec
dec
popa
inc
push
and
and
xchg
inc
lods
cld
inc
jp
cmp
negl
pop
femms
xchg
cltd
daa
js
inc
jns
jg
dec
xchg
enter
mov
push
adc
pop
repz
inc
std
mov
enter
dec
jecxz
lods
int
test
sub
aaa
fisubs
ja
das
sbb
push
je
lret
gs
and
jb
pushf
xchg
es
push
movsb
neg
jno
adc
lods
mov
mov
inc
repnz
rcll
loop
jnp
xchg
adc
stc
call
adc
int3
mov
addb
mov
jno
sub
int
pop
add
xor
cmpsb
stc
scas
out
adc
lock
popa
xchg
cmp
notb
mov
rcll
push
icebp
inc
dec
cmc
sbb
xor
jmp
rol
sub
nop
and
lods
xchg
add
jo
out
daa
testb
pop
stos
in
adc
sub
jno
int3
mov
aaa
pop
pop
fisubs
fwait
enter
mov
jbe
repnz
shlb
sarb
lahf
das
pop
xor
sbb
mov
outsb
mov
add
mov
aaa
push
repz
lret
mov
negb
jae
cmp
into
or
cmp
xlat
cmp
cltd
mov
stos
pop
sbb
mov
mov
mov
dec
nop
lcall
fs
add
inc
add
jp
hlt
subb
xor
push
pop
lcall
xorl
arpl
mov
push
pop
out
es
mov
adc
and
or
scas
sti
aas
pushf
xchg
mov
test
push
popa
fcoml
sub
push
fbstp
push
adc
cmp
faddl
or
cmpb
pop
mov
inc
inc
dec
inc
push
dec
fldl
jno
ret
sub
mov
push
mov
jb
xchg
pop
orps
jge
pop
push
jb
hlt
dec
push
loope,pn
js
or
std
inc
lret
call
insb
cmpsb
cmc
xchg
sbb
sbbb
xor
cmc
jae
mov
sub
inc
jbe
pop
inc
pop
cs
stos
mov
cmp
cmp
notl
and
and
das
sti
push
sub
pop
xor
test
in
mov
jb
and
dec
sti
or
xlat
test
sbb
inc
and
arpl
divb
lea
jmp
call
add
jmp
adc
lahf
ret
sub
pop
out
or
test
mov
jg
push
sarb
dec
aam
lods
sbb
mov
adc
pop
fistl
xor
das
xor
inc
repnz
popa
mov
jmp
loop
lods
lds
mov
jl
outsb
sbb
fwait
mov
sub
loope
je
and
aad
out
sarl
push
pop
js
add
dec
adc
jno
and
repnz
ljmp
or
das
mulb
sbb
into
stos
sbb
lods
pusha
add
jg
xor
stos
je
xchg
mov
jecxz
add
xor
icebp
add
xor
adc
int3
sub
pop
mov
mov
aad
adc
pop
sub
adc
clc
dec
scas
adc
push
lret
inc
inc
aad
into
xor
icebp
add
popl
jmp
jbe
push
mov
out
mov
xor
cs
rcr
cmp
shll
out
insb
andb
cltd
lds
inc
in
push
push
cmp
xchg
cmp
hlt
js
mov
nop
xlat
inc
mov
pop
mov
dec
ljmp
pushf
adc
jae
sub
hlt
rclb
sbb
dec
sub
dec
sub
push
arpl
ficoms
cwtl
loope
rclb
mov
clc
test
pusha
jmp
mov
add
jg
xor
fs
pop
mov
outsb
clc
jmp
orb
jp
lcall
push
jmp
sub
push
out
fildl
outsl
imul
inc
adc
repnz
dec
sbb
dec
xchg
jae
push
daa
add
mov
arpl
mov
stos
mov
jb
sbb
add
jnp
xchg
push
mov
or
cmp
les
bound
lea
rcr
aas
not
aam
mov
test
mov
cmp
call
das
cmpsl
or
sub
or
xchg
pusha
icebp
adc
or
shrb
adcl
sub
xlat
ja
jae
je
cmpsl
inc
sbb
xchg
stc
or
pusha
or
jae
push
or
or
dec
pusha
xchg
pushf
lea
mov
jecxz
xchg
loopne
xchg
push
mov
mov
in
mul
add
add
push
std
jle
out
mov
sub
out
mov
enter
test
dec
inc
scas
xor
jnp
adc
xor
mov
sbb
test
sbbl
xor
loopne
in
cld
xchg
xchg
addr16
das
ds
pushl
pop
dec
jp
or
or
and
das
sub
cs
xchg
xchg
add
mul
mov
xchg
cmpsl
cmc
stos
jno
lock
jmp
sahf
push
mov
sub
andl
jle
int
mov
ret
sub
mov
xor
jecxz
sti
pushf
cmp
inc
push
inc
stc
pop
mov
iret
cld
cmp
mov
xorl
lret
popf
lret
sbb
xor
test
gs
int
popa
nop
pop
mov
scas
xlat
inc
shlb
les
in
add
mov
push
ret
push
pop
sbb
not
pop
mov
movsb
jne
lock
lret
inc
cmp
add
push
xor
xchg
xor
imul
mov
add
sbb
xlat
movsl
dec
and
cli
pop
stos
jge
pop
mov
jecxz
push
dec
pop
iret
mov
scas
xlat
lea
fs
hlt
scas
push
lds
dec
repnz
loope
pop
bound
lahf
pop
scas
cmp
loop
push
shll
fs
jo
mov
jnp
aaa
movsb
add
popf
fwait
mov
or
test
mov
mov
rorb
insl
sbb
loop
in
popf
stos
call
lea
xchg
dec
lods
icebp
push
pop
loop
loope
cwtl
xor
mov
out
in
insb
dec
adc
test
adc
idivb
clc
inc
int3
pushf
inc
insl
bound
push
jae
ss
incb
out
sar
jno
xor
push
test
mov
jb
dec
lret
mov
fstps
shrb
jb
sub
rcl
push
out
loop
mov
mov
sbbb
xor
cmp
cmp
cld
scas
jno
cmp
pop
mov
outsl
jae
fildll
inc
sub
pop
popa
inc
push
xchg
dec
mov
lods
and
jb
dec
jp
cmp
and
mov
dec
xchg
xchg
adc
mov
pop
mov
fidivl
sub
dec
add
pmovmskb
mov
add
ljmp
pop
out
or
pusha
ret
push
sbbl
add
or
cmpsb
dec
gs
insb
inc
mov
das
dec
inc
push
dec
mov
mov
sbb
add
pop
sub
lahf
mov
push
adc
lods
dec
hlt
cmp
int3
mov
mov
or
stos
mov
jl
test
sarb
jns
mov
dec
mov
cmpsl
sbb
pop
int
shll
andl
adc
loop
and
mov
lret
or
jg
mov
cmp
cmpsl
nop
push
inc
dec
rsm
lret
aaa
jnp
mov
pop
ds
pop
mov
mov
call
out
out
mov
fidivrs
lret
lret
jle
into
sarb
sbb
and
mov
fisubs
clc
lret
paddd
out
inc
sbb
in
decb
jle
push
inc
push
mov
push
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
sbb
xor
scas
out
jle
mov
push
test
cmc
inc
push
mov
inc
lcall
testb
xor
aad
mov
jbe
jp
mov
cmpsb
aad
push
mov
es
cmc
jbe
ss
mov
cmp
shl
and
testb
sarl
fnstcw
es
lea
mov
nop
popl
rclb
fwait
jbe
sti
sub
jbe
or
and
pop
and
fwait
std
and
out
mull
ljmp
mov
cld
mov
mov
ja
mov
inc
cmp
jae
mov
dec
cwtl
loop
ficoml
pop
out
add
mov
aas
test
fidivrl
cmp
in
sub
and
xchg
lahf
mov
dec
daa
cli
cmc
cmpsb
push
rolb
fdivrl
sbb
ds
ljmp
cli
or
aas
sbb
and
sub
xor
fadds
dec
push
aas
pop
enter
jb
jp
cmp
xchg
aas
lcall
ds
lret
fidivrl
loop
ljmp
pop
mov
jmp
sbb
sbb
and
mov
adc
mov
push
fnstenv
into
inc
jp
daa
cmp
lcall
jle
xor
stos
inc
out
dec
inc
std
jb
mov
xchg
mov
mov
aas
push
clc
mov
push
ret
mov
cmp
outsb
mov
mov
push
mov
neg
or
sbb
aas
cmp
dec
ficompl
inc
jp
mov
lcall
mov
xchg
pop
call
mov
mov
sarl
lahf
inc
push
cmp
xor
insl
sub
clc
stc
jb
fdivrs
sti
stos
jecxz
xchg
ret
add
sub
rclb
and
rclb
pop
sbb
sti
cmp
cli
push
fildll
ss
jb
loopne
push
call
lret
ds
sbb
bound
cli
jb
mov
lret
pop
xchg
dec
leave
cmpsb
test
cmpsl
js
lret
mov
jmp
incb
xchg
ss
jns
pop
andb
mov
pop
ret
rolb
jbe
ret
mov
cmpsb
fadd
mov
aas
enter
incb
fcoms
jl
sub
sbb
xlat
ds
push
call
inc
inc
xchg
fadd
cli
stos
sarb
ret
ror
fidivrl
fmuls
cli
into
cs
int
inc
fidivrl
fsubs
sarl
mov
inc
aad
lret
scas
call
lret
inc
loop
mov
mov
mov
sahf
mov
xorb
ja
leave
into
fadd
add
out
aas
cli
enter
cmp
fdivrs
inc
ds
pop
enter
pop
inc
xchg
fsubs
stos
push
jo
fcmovu
cmp
inc
xchg
fmuls
cli
movsb
and
mov
loope,pt
pop
and
loopne
js
mov
jbe
repz
add
pop
ret
lds
mov
xchg
iret
mov
mov
inc
ret
or
rcrl
ret
fstpt
fnstenv
fidivl
mov
cmp
aas
mov
call
pushf
pop
mov
xor
cmp
ljmp
cli
pop
lret
call
sti
mov
sbb
ret
pop
ss
push
aaa
xorb
mov
rcl
mov
jmp
cmp
fdivrp
scas
xchg
cmp
sbb
daa
stos
aaa
rol
mov
lea
mov
add
cmpsb
scas
test
cs
pushf
jge
inc
cli
stos
inc
mov
mov
movsl
mov
mov
fidivrs
inc
sbb
mov
cmp
ficoml
testb
fadd
aaa
and
push
aaa
inc
cmp
out
mov
jp
xchg
nop
outsl
cmp
inc
mov
data16
scas
ficoml
cli
repnz
aas
push
enter
std
adcl
mov
sub
mov
mov
cli
mov
jbe
xchg
lret
jbe
pop
loopne
jbe
mov
aam
jbe
lret
push
outsb
pop
cmp
iret
outsb
cmpsb
ljmp
sub
push
jnp
inc
sti
cmp
or
fmuls
into
ds
lahf
dec
jle
mov
jb
in
ret
movsb
out
sahf
pusha
fsub
push
push
mov
xchg
pop
sbb
in
fadds
add
out
mov
fcoms
xor
inc
movsb
loopne
fadd
and
inc
or
nop
pop
ret
into
sti
cmc
ret
and
inc
adc
push
sub
fnstenv
mov
inc
out
dec
mov
cli
pop
sbb
xorl
js
repnz
push
cmp
out
jae
and
and
out
mov
fiadds
aas
inc
or
mov
push
push
sbb
inc
rorb
push
adc
lcall
aas
arpl
fidivrl
sbb
mov
stc
push
cmp
incb
notb
aaa
sahf
xchg
mov
push
and
ds
sbb
cmpsb
out
iret
pop
cmpsb
movb
push
push
mov
jbe
sti
mov
iret
jne
mov
aam
lret
stos
negb
mov
leave
jmp
cmp
push
call
jmp
inc
mov
lret
cmp
cli
xchg
fisubl
dec
ljmp
sahf
jl
jo
es
mov
mov
and
and
call
cmp
rol
movsb
cmp
push
rcll
xchg
push
pop
xchg
out
mov
clc
dec
mov
dec
mov
data16
data16
xlat
mov
xor
es
ds
ds
incb
mov
jl
sbb
cld
cmp
ss
and
dec
inc
xor
and
stos
mov
scas
sbb
pop
mov
lcall
repz
xchg
fcmovbe
in
sub
and
pop
mov
rolb
mov
sub
add
inc
jbe
call
mov
and
xor
inc
mov
out
mov
mov
ljmp
es
cmp
callw
mov
mov
fcomps
cmp
mov
dec
mov
addr16
mov
cld
daa
mov
mov
mov
xor
jp
mov
xchg
stos
inc
cmp
inc
repnz
cli
or
aas
sub
fimull
bound
fdivrs
mov
mov
incb
mov
pop
inc
dec
adc
xchg
rcr
mov
push
mov
testb
cmovne
xchg
sti
mov
das
xor
into
dec
mov
pop
out
and
dec
ret
cli
jle
lds
add
fisubl
mov
jb
mov
subb
stos
lods
ds
sar
stos
out
stos
int
inc
test
push
aas
cmpsl
enter
incb
movsl
fcomps
movsb
outsb
aas
mov
xchg
inc
mov
mov
mov
dec
int3
or
dec
pop
push
add
jecxz
shr
lret
mov
mov
fcmovnb
dec
push
ljmp
mov
mov
mov
or
andb
pop
dec
mov
lock
fisubrl
lret
test
mov
dec
inc
cmp
notb
outsb
mov
jge
dec
mov
cmp
ret
inc
aas
inc
enter
mov
mov
mov
mov
jno
idiv
cmp
cmp
cmp
adc
mov
scas
push
and
cld
mov
stos
outsl
jb
push
pop
push
sbb
jbe
xchg
jnp
mov
mov
mov
int3
xchg
inc
fsubp
out
insb
sahf
and
mov
fdivrs
aas
test
fiaddl
incb
cld
ds
std
pop
mov
pop
ret
rcrl
mov
mov
inc
inc
mov
sarb
inc
mov
sub
fcmovb
inc
inc
vshufps
enter
lret
dec
inc
int
into
outsb
iret
outsb
shrb
outsb
shrb
outsb
aam
aad
outsb
xlat
outsb
fsubrs
outsb
fisubrl
outsb
fsubrl
outsb
fisubrs
outsb
loopne
loope
loop
jecxz
in
in
sbbl
repz
cmc
mov
cmc
jle
mov
mov
std
mov
out
ret
mov
data16
jp
mov
sahf
cli
scas
mov
loop
neg
or
lods
ret
xor
testb
fadd
cli
into
aas
fmulp
out
out
divb
or
sahf
in
sbb
leave
mov
inc
ds
ror
aaa
iret
enter
xchg
dec
pop
out
inc
mov
sti
int3
cli
pop
bound
arpl
pusha
fisubl
fs
fsubs
addr16
push
jo
jno
jae
jne
ds
aaa
sbb
sbb
inc
and
and
and
aas
and
and
loopne
and
mov
or
xchg
add
pop
sbb
mov
es
mov
or
push
outsb
lcall
sbb
sbb
lds
cmp
add
inc
dec
adc
mov
mov
mov
sahf
jns
aad
push
ss
mov
mov
rorb
mov
sub
sub
cmpsb
sbb
mov
sbb
pop
lds
and
lret
cli
jbe
popa
stc
mov
lret
and
mov
cwtl
pop
mov
lret
out
and
ret
pop
push
or
inc
or
pop
sbb
sti
notb
add
loop
das
setbe
sbb
fadd
mov
dec
xchg
sub
mov
aas
pop
and
movsl
pop
sub
mov
mov
gs
xchg
loope
push
mov
in
lds
sbb
es
and
out
fnstenv
shl
popl
fcompl
sub
cs
shrb
pop
or
push
cmp
in
sub
pop
sub
lret
sbb
and
mov
lret
add
mov
push
sub
sbb
mov
ret
mov
sbb
and
mov
push
fiadds
sub
and
or
and
mov
mov
mov
add
fimull
pop
int3
ds
xor
mov
sbb
rcrb
sbb
cli
ret
cmp
inc
push
out
out
in
in
repz
inc
ljmp
pop
or
into
lea
jbe
sub
push
mov
xchg
mov
lret
mov
sarb
sahf
mov
iret
lahf
aas
push
rorb
cmp
jl
lahf
pushf
jnp
loope
idivb
lret
jbe
pushf
lahf
pop
popa
add
fldcw
sahf
jmp
mov
jmp
lds
mov
adc
pushf
rcrl
cmpsb
xor
xchg
aas
push
cmp
mov
or
cmp
inc
mov
ja
ja
or
sahf
ret
sti
inc
lods
loope
adc
push
rcl
sahf
repz
dec
push
in
in
ret
adc
jle
dec
aaa
push
jl
lahf
jp
shrb
movsb
mov
and
ret
fcmovbe
xchg
aad
lds
mov
fisubl
jns
mov
or
push
fcomi
cli
cmp
push
add
in
and
test
fidivl
sub
push
adc
ss
scas
lods
fildl
adc
push
jnp
mov
or
inc
xlat
ret
fisubrl
xchg
pop
add
ret
sahf
and
or
and
mov
not
inc
jmp
pushf
cli
lret
jnp
lret
lret
loop
dec
fmulp
clc
cmp
loop
xlat
divb
or
cmpsb
sahf
cmpsl
push
and
data16
das
adc
jge
js
xchg
sbbb
jl
outsl
sub
fsubrs
and
ror
lret
ret
add
ljmp
pop
insl
call
call
mov
adc
les
scas
cmp
mov
mov
vmwrite
dec
and
xchg
sub
cmp
shlb
or
dec
ja
pop
or
shrb
dec
fs
adc
outsb
mov
adc
lret
or
cmpsl
mov
cmp
fmull
sbb
mov
mov
aaa
mov
or
cmp
leave
dec
sub
test
push
cmp
fucompp
xchg
push
sarb
dec
std
sti
push
jle
mov
sahf
test
mov
aas
mov
icebp
into
sub
push
clc
xchg
mov
jl
iret
push
fwait
sti
jp
add
stc
rorb
arpl
lret
mov
lds
movsl
addr16
orl
jns
push
mov
das
mov
jp
pop
inc
mov
mov
cmpsb
push
mov
out
in
push
adc
cli
inc
leave
push
sub
pop
leave
dec
enter
xlat
aas
in
and
inc
mov
jno
out
ficomps
ret
cmp
ret
aas
mov
sbb
es
mov
or
inc
mov
mov
jno
scas
xchg
mov
mov
add
pop
push
push
ss
adc
adc
shlb
outsb
pop
rcrb
dec
sahf
cmpsl
popf
push
decl
add
and
lds
or
sti
mov
dec
out
mov
jne
sbb
mov
je
xor
mov
pop
enter
mov
mov
or
dec
les
mov
xor
imul
add
fldenv
sbb
xor
pop
ja
popa
iret
out
je
sbb
repnz
lret
pop
insb
inc
cmp
sahf
test
or
xor
adc
sti
add
lret
repnz
push
aas
fstl
fcomps
aas
cmp
jno
mov
ret
sahf
push
flds
cmp
mov
repnz
add
dec
call
jecxz
popa
imulb
xor
popa
fildll
and
sbbb
xlat
lret
sbb
sub
ficompl
pop
add
daa
je
pop
fildl
xchg
push
scas
push
out
adc
incb
leave
or
mov
imul
push
fbld
jb
jg
test
iret
jle
insb
orb
insb
pop
pushw
ret
mov
mov
fdivrs
cld
jbe
clc
mov
arpl
cwtl
xchg
flds
movb
inc
push
bound
dec
data16
jle
scas
jle
and
jg
lret
icebp
xlat
jle
or
sarb
stos
in
arpl
rcr
sub
idivb
cli
mov
xorb
cltd
or
inc
cmp
es
jl
neg
pop
scas
adc
inc
int3
pushl
sahf
sub
test
dec
or
je
pop
jae
inc
xchg
mov
clc
dec
cli
jb
or
cmpsl
ret
rcll
push
mov
xor
sbb
dec
cli
adc
or
sahf
jns
dec
out
repz
mov
out
sahf
movsl
aad
loope
add
mov
jle
js
mov
push
cmp
ficoml
aaa
scas
jle
jge
push
into
mov
sahf
push
xchg
xchg
aas
cmpsb
pop
inc
out
push
cmp
aas
or
pusha
sub
mov
out
cltd
mov
mov
movsb
mov
aad
pop
or
mov
jecxz
inc
or
push
sub
pop
add
sbb
or
lret
sarl
sahf
xor
xchg
sub
adc
adc
mov
sahf
jno
push
pop
in
ret
loopne
cmp
push
ss
cmp
mov
mov
pop
in
or
lds
sti
aad
xor
sbb
shr
and
in
jbe
int
dec
in
scas
sbb
shr
adc
mov
jg
or
js
aam
jge
call
insl
or
or
push
pop
or
out
or
repnz
adc
or
incb
aam
xor
add
mov
xchg
pop
fs
dec
out
pavgw
out
mov
lock
lret
pop
xor
hlt
sahf
faddl
or
jp
cmp
jns
push
ret
jg
into
adc
mov
aas
rolb
daa
lcall
test
jno
push
mov
jnp
lret
cmp
jl
jb
pop
lods
inc
fidivrs
aam
cwtl
mov
adc
iret
es
push
sbb
sub
adc
ljmp
sub
mov
iret
fs
in
inc
cmp
and
adc
fidivrs
js
les
mov
shrb
cmp
sbb
in
inc
jge
fmul
mov
aad
les
mul
adc
dec
clc
mov
inc
repnz
push
outsb
push
cmp
jl
ds
sub
mov
push
or
dec
or
ficomps
fistpll
std
shrb
ret
sub
mov
mov
sub
sar
fcmovb
cmp
inc
push
lret
adc
andb
or
push
rolb
jg
movsb
cmp
or
loopne
jnp
lods
sub
int3
mov
lret
mov
sub
xor
pusha
popa
ljmp
into
shll
or
aam
push
inc
rcrl
int3
adc
dec
mov
lret
or
pop
dec
jl
inc
lret
sarb
bound
mov
in
jmp
movsb
xchg
scas
rcrb
icebp
mov
mov
leave
nop
scas
stos
jg
and
inc
or
aas
leave
xor
aas
sub
push
repz
inc
cmp
inc
add
test
xchg
xchg
call
sub
clc
sbbl
pop
push
dec
push
stc
mov
mov
inc
std
or
lret
sub
into
sub
xor
and
out
jg
sbb
inc
jle
dec
stc
fistpll
lds
xlat
push
inc
sbb
cltd
mov
cmp
mov
adc
in
mov
lods
mov
jbe
in
ljmp
hlt
dec
xor
outsb
cli
ss
xchg
loop
lcall
fadds
or
pop
repz
icebp
jge
jl
xchg
jp
mov
lcall
inc
cmpsl
jbe
sahf
loop
iret
cmp
out
push
shl
ret
or
add
jecxz
add
mov
dec
sahf
cmpsb
cltd
imul
out
inc
adc
dec
dec
push
movsl
jg
xchg
stos
add
rcll
lret
inc
scas
in
ss
add
iret
sub
cli
jle
scas
jo
pop
cmp
jno
sub
sbb
std
mov
ror
lret
call
and
js
cmp
inc
rcrl
sbb
push
leave
mov
aad
adc
xchg
call
cwtl
dec
and
pop
ret
add
push
add
adc
or
mov
jle
in
fmuls
push
lcall
ret
mov
rolb
aaa
mov
sub
dec
push
fidivrs
sub
mov
int3
scas
fstl
sti
movb
sbb
rclb
fwait
inc
inc
cmp
fwait
push
sub
les
cmc
sbb
ljmp
icebp
jns
mov
cli
ret
jle
icebp
sub
adc
dec
adc
inc
mov
out
mov
ret
sbb
xchg
or
shrl
add
dec
jp
jmp
or
testb
and
cli
push
pop
clc
repnz
imul
clc
add
push
push
je
sbb
iret
adc
and
push
add
adc
stc
push
adc
jmp
jae
jecxz
lret
imul
xlat
inc
inc
inc
fdivl
decl
loopne
dec
into
sti
push
inc
push
push
mov
ret
int
mov
out
fcomps
or
data16
add
int
in
push
outsb
ret
stc
sar
int
in
into
jbe
enter
push
jle
push
rclb
outsl
dec
cmp
out
cmp
aad
mov
orb
xchg
sahf
sbb
mov
jmp
push
ljmp
stc
gs
ds
push
idivb
fidivrl
add
push
xlat
cs
adc
int3
xlat
pushf
mov
push
push
idivl
jge
jle
cmp
data16
std
ds
sbb
pop
outsb
inc
add
rolb
xor
aas
pop
add
xlat
push
sti
and
aad
cli
push
es
or
add
push
fdivrs
xlat
xchg
cli
in
inc
xchg
rol
or
sbb
cmpsb
int3
xlat
out
clc
cmpsl
mov
lcall
sbb
out
inc
imul
cmp
xchg
xchg
insl
mov
clc
ss
cmp
data16
or
pop
cmp
ss
adc
xchg
inc
and
push
pop
into
ret
clc
push
jle
push
scas
mov
clc
sub
clc
xchg
sbb
fdivs
xlat
xchg
sbb
jno
es
jle
jbe
pop
push
iret
dec
mov
sbb
xor
jbe
mov
adc
cs
fwait
nop
xlat
cmc
je
mov
sbb
out
xlat
into
sbb
ret
clc
fidivrl
and
cwtl
clc
mov
addr16
and
xlat
jns
data16
adc
pop
cmp
mov
push
sbb
lret
es
mov
es
sbb
movsb
sub
ss
pop
std
iret
push
mov
sub
jle
cli
dec
loop
clc
sub
mov
int3
xlat
push
sub
mov
cmp
es
add
jp
sub
into
mov
fiadds
clc
neg
xchg
push
cld
daa
out
data16
push
out
ret
and
mov
xor
pop
push
sbb
sub
fldcw
inc
sahf
repz
inc
pop
push
pushf
jnp
inc
out
sahf
xlat
or
xchg
mov
xlat
mov
js
aas
lret
cmp
mov
jp
scas
enter
mov
jle
sbb
fcoms
jmp
or
dec
cmp
and
xchg
sahf
pop
das
iret
jbe
xor
cmpsb
jle
and
push
lahf
lret
xor
mov
aas
jle
fcmovu
call
mov
stc
mov
xlat
sbb
mov
xchg
movsb
cmp
xchg
add
movsl
pop
imul
jecxz
adc
cli
mov
xchg
mov
cmp
repz
lds
ljmp
jl
roll
fidivrl
jo
movsb
dec
movsb
ss
test
movsb
scas
jecxz
lods
mov
fwait
mov
rcrl
cmp
jae
lret
lods
fidivrs
fisubs
inc
inc
pop
pop
shll
and
sahf
movb
loopne
add
std
fiaddl
out
adc
xchg
mov
fisubl
cmp
out
hlt
aad
add
or
push
lret
int3
mov
lds
sub
inc
cmp
mov
in
xchg
add
js
mov
out
pop
dec
xchg
movsl
mov
xlat
cmp
sahf
rolb
inc
sbb
jecxz
popa
call
nop
push
sahf
push
xor
pop
orps
xchg
loop
sahf
push
sbb
add
and
clc
sub
inc
int3
ror
scas
sbb
push
add
sub
sahf
out
xlat
jle
or
mov
sbb
cmpsb
rcr
call
inc
test
mov
int3
mov
dec
xchg
jmp
ret
push
mov
insl
test
out
mov
push
add
outsb
call
inc
cmp
test
mov
rol
mov
pop
push
xor
loopne
mov
cltd
inc
in
ds
mov
daa
out
dec
cwtl
into
ss
mov
push
int
clc
movsl
test
jbe
call
fidivrs
fisttps
xlat
scas
push
sub
mov
xchg
out
test
cs
clc
mov
test
dec
jle
es
and
ss
xchg
scas
cld
loope
push
cmpsb
jp
mov
in
icebp
cmp
dec
mov
sarb
mov
cs
mov
iret
inc
ret
mov
orl
nop
push
mov
jge,pt
sti
fmuls
dec
jmp
sub
out
mov
push
cmp
xor
push
xlat
mov
adc
enter
loop
inc
inc
pop
clc
cli
ljmp
mov
clc
div
push
clc
mov
iret
cs
and
fldl
sahf
iret
cmpb
mov
cmpsb
jp
adc
mov
mov
sahf
test
mov
xbegin
inc
pop
fcomps
xor
xlat
ss
sbb
decb
sub
push
pop
fistps
enter
cs
add
movb
adc
cld
scas
sahf
lret
mov
daa
scas
add
mov
add
mov
cmpl
xlat
jp
mov
cmp
mov
sub
jns
in
gs
sar
push
fisttps
inc
stc
xchg
xlat
sbb
lcall
cli
into
adc
sbb
sbb
jmp
icebp
aad
add
xor
fisubl
rcr
and
cmp
or
lods
ds
jb
pop
xor
sub
inc
push
cmp
mov
sbb
xchg
cs
sub
or
or
sub
xchg
stos
icebp
jge
fsubrl
arpl
xchg
adc
add
push
ss
out
mov
sti
add
dec
sub
stos
loop
lret
imul
push
cmp
sbb
jp
cmp
jbe
lds
jge
pusha
sub
call
and
cmp
dec
mov
jge
push
adc
xchg
xlat
push
jl
out
cli
jno
mov
ret
xchg
mov
mov
xlat
inc
inc
es
fsubrs
iret
mov
mov
push
jle
cli
add
ss
cmpsb
sub
push
mov
pusha
shrb
inc
adc
push
sbb
call
icebp
sti
into
mov
cmpsb
mov
cmp
pushf
xlat
push
xchg
jle
cli
xchg
push
jnp
fidivrs
stc
jo
cmp
gs
mov
ds
sbb
fadds
mov
xlat
cs
and
mov
cli
or
ret
stc
not
inc
in
jle
cli
loope
scas
mov
mov
xlat
rolb
push
xchg
ds
cli
stos
call
mov
xchg
mov
jle,pt
inc
fdivs
push
mov
xlat
pop
inc
into
ds
sbb
jle
cmp
push
cmp
xor
cs
es
cli
sbb
faddp
adc
js
add
cli
pop
roll
mov
xchg
jbe
enter
push
movb
inc
xchg
jmp
mov
mov
cmpb
jb
cld
pop
lret
xlat
jne
xlat
bound
jle
pop
jae
mov
push
ret
or
sbb
insl
and
sbb
in
lret
xor
or
ret
stc
push
add
jecxz
add
sub
xchg
cli
push
stc
pop
xlat
push
sar
loop
out
add
cli
into
imul
loopne
adc
push
ret
repnz
pop
sti
in
jb
inc
mov
push
inc
fiaddl
push
xor
ret
xchg
rorl
ret
fcompl
cli
xchg
cmpsb
dec
inc
iret
lret
sahf
ret
repz
xor
push
lret
add
imul
mov
mov
cmp
movsl
clc
xchg
and
push
jb
testl
in
dec
add
test
push
ret
arpl
lcall
xchg
xor
and
call
ret
shr
outsb
in
mov
in
sti
out
or
out
or
lock
leave
arpl
or
cmp
stos
inc
mov
pop
xchg
out
sti
and
add
mov
lret
push
fstpt
ret
add
sub
push
pop
mov
cmc
jge
fmuls
stos
push
or
pusha
adc
aas
lret
rorl
push
or
inc
cld
stos
jno
cltd
xor
divl
add
or
pop
adc
pop
xor
pop
call
fisttpll
cmpsb
or
sarb
pop
pop
or
rcr
or
std
rcr
rolb
or
xchg
sbb
jmp
mov
adc
xor
cmp
mov
out
pop
sub
and
mov
mov
pop
adc
fisubrl
int3
mov
pop
inc
fsubl
jmp
mov
ret
cld
sub
inc
out
add
push
leave
repnz
dec
sub
jb
and
insb
loope
cmp
aad
xchg
test
repz
shlb
stos
push
idivb
aam
mov
rcrb
cmp
jg
mov
add
fwait
lahf
ficoml
jle
jno
mov
std
jbe
push
jae
fidivrl
mov
push
pop
jge
push
xor
fbstp
cmp
cmp
aas
popa
fcompl
in
mov
outsl
sub
loop
sbb
sub
sbb
outsb
in
cmp
push
iret
jne
std
xlat
dec
icebp
xor
shlb
sysret
cmp
push
sahf
mov
xor
pop
pop
fisttps
sbb
mov
mov
call
push
cmp
push
or
sub
shl
nop
xor
addl
shl
xchg
or
in
cld
dec
push
sahf
inc
je
pop
push
xchg
pop
add
out
push
mov
jne
add
sbb
sub
test
mov
lock
push
cmp
push
fisubs
clc
shrb
cmp
and
mov
lahf
mov
mov
or
push
push
ds
cmp
test
sub
outsb
push
cwtl
cli
cs
inc
push
ja
repz
push
inc
aam
gs
dec
jb
addb
mov
popa
jne
or
lcall
jmp
ret
mov
shrb
mov
out
into
nop
es
lods
cld
repnz
inc
sub
add
test
push
sub
xchg
es
push
mov
fcomps
push
sbb
ret
mov
inc
lock
cwtl
fcmove
cli
xchg
jb
call
mov
pop
daa
repz
invd
fnstcw
push
icebp
ss
imul
or
sub
mov
icebp
mov
cld
or
movsb
and
ss
pushf
icebp
std
jb
mov
pop
aam
cli
push
out
mov
out
lods
jno
push
inc
dec
pop
mov
adc
xlat
xorl
xlat
inc
shlb
aaa
pop
iret
mov
aas
rol
push
cs
xor
cli
push
xor
out
or
stc
lods
mov
fwait
lock
sti
test
pop
loope
test
stos
inc
mull
call
sub
call
push
lret
fsts
pop
ds
jp
fisubrs
cmp
inc
ds
jp
sbb
fstpt
aas
pop
fadds
out
lret
loop
leave
loop
aad
fcmovb
enter
dec
inc
ret
das
mov
std
jmp
jg
mov
fmuls
mov
rorb
jecxz
push
hlt
loop
aas
ret
mov
mov
pop
sub
push
ds
or
push
negl
fisubrl
add
lods
nop
sub
or
jmp
sub
movsb
cmpsb
enter
xchg
fnstcw
mov
xchg
sahf
jbe
xor
xchg
inc
sub
sahf
adc
int3
enter
pop
adc
js
in
push
into
jecxz
dec
iret
test
or
data16
xlat
fisubrl
movsl
pop
sbb
mov
cmp
mov
adc
xor
adc
mov
lds
add
mov
scas
ret
adc
cld
cpuid
jecxz
push
leave
fidivrl
lds
pop
into
jne
pop
or
sub
push
ds
scas
fcomip
push
push
cwtl
lret
dec
push
adc
sbb
or
sub
stos
movl
leave
sbb
ja
out
add
adc
xchg
add
jns
xor
rol
cmp
mov
lcall
or
mov
mov
repnz
fstpt
fmuls
sub
pop
orb
cmp
sub
mov
xchg
inc
sub
aad
enter
call
push
add
sahf
popa
ja
into
cmp
mov
cmp
arpl
adc
lods
incb
sbb
mov
call
or
cmp
sahf
dec
push
lock
repz
xchg
aaa
push
or
inc
outsb
call
movsl
push
out
test
dec
mov
ds
ja
fidivrl
jb
mov
lods
fidivs
out
loop
insl
lds
subb
sub
adc
shl
mov
sub
jp
lods
in
mov
push
leave
mov
mov
push
mov
sahf
jnp
inc
sbb
in
loop
dec
popl
hlt
sbb
xchg
out
inc
add
out
pop
or
jle
clc
lahf
insb
fcmovb
decb
sbb
jbe
inc
rol
lods
jle
adc
dec
lods
cmp
lods
dec
cli
ret
xlat
and
adc
inc
loop
push
pusha
sarl
sub
or
xor
ljmp
leave
sahf
dec
jmp
lods
jnp
aad
xorb
clc
leave
loope
lret
push
dec
jne
into
arpl
sbb
mov
jns
sub
dec
fwait
push
push
jp
stos
sub
es
dec
leave
sub
imul
out
movsb
xor
aas
sub
mov
pushf
cli
out
add
xchg
into
inc
lods
push
ficoms
add
jecxz
xchg
imul
adc
jecxz
repnz
movsl
loop
mov
mov
add
adc
jnp
adc
testl
mov
out
lret
add
es
pop
push
sbb
xor
and
inc
mov
cltd
in
push
xor
lds
mov
inc
std
lret
lds
fwait
popf
ret
lret
sub
mov
jle
mov
push
push
push
stos
xchg
outsl
push
sub
mov
and
hlt
mov
jecxz
sbb
stos
pop
sbb
fdivs
daa
dec
jne
mov
mov
repz
orb
cmp
cmc
and
jg
scas
ljmp
movsb
and
pop
inc
push
lcall
sti
into
cs
scas
mov
sub
inc
in
dec
mov
inc
push
cs
lahf
jae
mov
sub
add
push
mov
rorb
and
fdivr
push
mov
push
sti
and
xlat
jae
aas
or
cltd
das
aad
pop
or
mov
pop
sarb
shlb
or
test
lock
loop
stos
into
ret
dec
fcoml
fstps
clc
jge
fcmove
ror
aam
mov
adc
add
and
mov
aad
mov
les
mov
inc
lret
mov
mov
mov
adc
mov
sti
ret
decl
enter
sahf
or
cli
in
ret
sbb
xchg
jnp
push
sti
int3
out
sub
idivb
js
jp
sbb
in
fdiv
fcomps
or
loop
fistpl
sbb
adc
add
shlb
hlt
and
xchg
cmpsl
rorb
jl
bound
mov
aas
jl
cmp
aam
cmp
xlat
push
add
fisubrs
adc
mov
in
or
fucomp
cmp
dec
cmp
add
fadd
or
mov
inc
into
mov
dec
or
call
shr
mov
add
fldcw
rcrb
frstor
daa
into
jg
lods
inc
jmp
dec
pop
mov
sbb
dec
call
cmovno
or
mov
inc
js
cmp
mov
in
fimull
std
pop
xor
ret
packssdw
cmp
out
das
test
pop
sub
in
out
pusha
mov
pop
subb
clc
cld
xor
stos
fdivs
add
mov
insl
cli
adc
cmp
dec
pop
sbb
aaa
nop
pop
inc
push
xchg
push
or
sub
mov
cmc
aas
stc
dec
jmp
lea
fsubrl
pop
pop
cmp
negb
xor
sbb
or
xor
lret
jl
repnz
lea
cli
cmpb
add
xchg
js
repz
out
imul
ljmp
lds
ja
lret
push
mov
mov
and
cmp
pop
ss
mov
add
pop
jge
out
jns
lods
dec
push
cmpsb
loopne
mov
xlat
stc
hlt
clc
xor
clc
add
or
and
push
mov
lahf
leave
mov
shll
ss
js
mov
sbb
idivb
imul
jmp
testb
scas
enter
or
ret
jmp
xor
outsb
push
ret
loope
addr16
cmpsb
mov
cmp
mov
mov
xor
lds
add
xchg
adc
jge
cli
sub
scas
dec
cmc
adc
jne,pt
ret
dec
or
mov
cmc
adc
mov
jnp
pop
ror
or
cld
mov
mov
cmp
sahf
inc
movsb
shl
fiaddl
push
dec
mov
add
aas
mov
cs
not
xchg
xchg
sub
loopne
or
sub
test
ret
push
out
adc
mov
icebp
jge
enter
push
sub
data16
mov
js
iret
mov
cmp
adc
imulb
mull
and
outsb
mov
sub
shl
addb
cmp
into
or
lret
sub
push
mov
roll
xchg
fadd
mov
aaa
rcl
mov
mov
js
test
in
ljmp
xor
xor
std
jg
jnp
les
mov
testb
or
mov
xchg
testl
mov
mov
mov
mov
mov
testb
push
fimull
ficomps
fbld
mov
jno
nop
sub
adc
sarl
fsubrs
mov
jb
cld
add
rcl
daa
cmp
repnz
addl
add
sbb
push
mov
xchg
sub
cmp
pop
stos
sahf
mov
es
mov
scas
shr
xchg
lret
lds
xor
or
out
sub
movsb
aas
push
mov
stc
sub
adc
inc
roll
pop
inc
testb
adc
push
test
inc
push
leave
or
dec
jb
enter
test
jle
lret
outsb
or
int3
xchg
adc
xchg
sub
lcall
test
into
jnp
sarl
inc
cmp
mov
rorb
int
mov
idivb
pop
pop
lret
inc
fisubrs
mov
inc
fisubrs
aas
loop
sub
mov
idivb
jp
test
pusha
cmp
or
or
sahf
fsubl
mov
pusha
lret
ja
adc
inc
xor
out
fidivrl
pop
and
cmpsl
mov
cmp
mov
push
aad
mov
stos
int3
lret
dec
in
add
adc
rcrb
mov
cmp
jns
divb
jp
adc
mov
sub
sub
fstpt
clc
fistpl
stc
mov
and
fisubs
sarb
sbb
xchg
daa
pusha
add
ficomps
mov
imul
notb
es
test
cmp
lahf
lcall
out
or
pop
push
xchg
fs
out
push
push
cld
popa
xor
add
cwtl
cli
repnz
push
push
cli
cmp
rol
xor
cmp
jbe
inc
stos
ret
js
mov
add
mov
add
mov
ret
sbbb
scas
movsl
lods
push
int3
inc
in
and
or
xor
fsubrp
dec
in
xchg
cmp
jae
scas
cli
or
adc
pop
push
push
mov
adc
dec
lahf
pop
adc
mov
and
inc
mov
xor
fidivl
or
loope
decb
adc
cmc
cmpsb
insb
stos
or
pop
sarb
nop
push
jecxz
sbb
jae
sub
jmp
push
cwtl
cmp
aam
js
mov
lahf
lret
ds
pop
cs
inc
inc
sahf
push
xlat
sbb
jnp
pop
push
popf
jne
pop
outsb
push
push
out
popf
sarl
and
aas
nop
les
pop
repnz
lret
pop
lret
js
xchg
iret
or
mov
pop
cmp
ret
add
pop
xor
dec
ss
data16
ljmp
out
icebp
adc
out
adc
add
ss
sbbb
ljmp
inc
sub
sub
pop
inc
pop
jnp
fists
fidivrs
inc
inc
cmp
sbb
dec
cmp
or
mov
fidivs
ljmp
rorb
jmp
jmp
dec
ja
ds
shlb
cmp
jle
sbb
je
sbb
bound
sub
mov
lahf
fs
fwait
lcall
inc
mov
mov
pop
jns
lret
mov
pop
repz
mov
jns
jbe
jae
push
cmp
xor
cltd
cld
rcrb
xchg
xor
popa
cwtl
ljmp
ret
das
insb
lock
add
add
sbbb
sub
mov
int3
shlb
or
mov
sub
ds
fdivl
cmp
dec
inc
jecxz
ljmp
inc
or
inc
push
je
dec
ljmp
inc
adc
imul
rcll
movsl
loop
add
addl
push
jnp
hlt
push
call
mov
js
push
dec
mov
pop
inc
aam
sbb
rol
testl
std
sub
fstps
sbb
jb
nop
fcmovbe
pusha
fs
inc
shl
push
daa
xchg
test
xchg
insb
or
xchg
jecxz
sbb
pop
adcb
lret
loope
js
inc
popf
gs
fists
push
dec
les
arpl
sbb
mov
jmp
pop
push
adc
scas
mov
add
movl
cld
into
mov
mov
fisubrl
in
sub
sti
icebp
cmp
into
or
pop
fimuls
insb
lret
or
fistpll
mov
or
pop
sti
mov
pop
int3
dec
in
movsb
jg
pop
or
or
pop
and
cmp
cwtl
xchg
mov
clc
cmp
mov
shl
adcl
cltd
js
xlat
adc
inc
bnd
xchg
sub
lret
pushf
xchg
push
scas
sahf
inc
in
push
pushf
js
nop
out
les
add
out
xchg
add
dec
popa
popa
sbb
mov
fidivl
adc
mov
cld
jnp
xor
ret
pop
mov
aas
cld
out
sbb
dec
jo
into
clc
roll
ficoml
sbb
sub
cmp
nop
scas
pop
jno
inc
or
cli
adc
int3
mov
mov
cmp
shl
into
rclb
cmp
repnz
cmpsb
aaa
mov
in
or
xor
sbbl
mov
pop
sbb
je
sub
add
arpl
mov
lahf
sbb
or
neg
enter
jbe
push
sub
scas
js
fisttpll
negl
cmp
sub
dec
sub
ds
xchg
imul
scas
pop
dec
adc
jo
loop
adc
ljmp
pop
mov
mov
test
pop
lahf
add
pop
push
xor
orl
dec
mov
fldl
sbb
iret
dec
or
mov
jnp
push
ljmp
lds
scas
jl
fcmove
sbb
vmovddup
addr16
ljmp
fstpl
pop
int3
sahf
lods
pop
pop
pop
add
jb
test
out
stos
sbb
aaa
mov
add
mov
or
or
push
mov
std
xor
sbb
and
inc
mov
jg
fisubrl
xchg
jae
jle
dec
mov
enter
ljmp
into
call
ljmp
xchg
add
cmp
loopne
add
cmp
fildll
pop
icebp
mov
sbb
stc
nop
mov
mov
stos
cmp
es
cmp
xchg
cli
sbb
sahf
das
push
lahf
xor
out
into
sub
push
iret
ja
pop
xlat
leave
push
rorl
leave
je
sbb
fcmovb
std
push
pop
push
cld
fnstsw
cmp
sub
ret
in
add
mov
lret
mulps
into
ss
nop
aas
lds
xchg
push
push
jo
fidivl
out
hlt
cld
ljmp
mov
add
sarl
jl
ret
inc
and
pop
sub
out
das
push
pop
rcl
inc
adc
cmp
mov
sbb
mov
fisubrs
in
mov
mov
popl
xorl
aad
sbb
lods
fsubr
xchg
or
adc
aam
xchg
xor
jbe
adc
inc
push
mov
inc
ficoml
pop
dec
fildl
jmp
ljmp
pop
pop
movl
enter
jle
xor
pushf
adc
loopne
pop
jecxz
ficompl
lods
icebp
leave
or
or
int3
mov
sahf
and
mov
cmp
dec
out
mov
or
addl
rorl
outsb
dec
test
daa
hlt
xchg
inc
xor
fldt
add
js
push
add
and
das
sbb
sub
or
enter
out
pop
ficoms
push
fcmovne
push
xor
fmul
sti
lret
mov
mov
jae
mov
mov
add
adc
xchg
out
lcall
xorb
push
movb
lret
mov
inc
adc
das
or
jb
clc
adc
sbb
dec
leave
mov
stc
jae
in
mov
mov
dec
cmp
push
push
sahf
pushf
cmpsl
cmp
out
mov
mov
jo
cmpsl
idiv
mov
mov
das
jg
cwtl
dec
cmp
push
adc
fldt
fwait
jg
and
cli
sbb
popf
imul
sahf
dec
stc
dec
leave
dec
mov
inc
jp
mov
pop
ja
fisttps
pusha
jns
into
add
loop
inc
jbe
fidivrs
mov
out
addr16
ljmp
loop
fisttpl
test
sti
fsubs
fcmovne
sub
cmpsl
outsb
dec
jbe
scas
cli
mov
jae
and
or
adc
cmp
mov
sti
adc
add
ljmp
jp
jno
push
ret
sub
sbb
mov
push
lret
into
fsubs
dec
mov
fiaddl
push
out
in
fcompl
pop
stc
mov
xchg
or
push
xorps
inc
sbb
xchg
and
push
movsl
or
dec
fwait
mov
imul
arpl
clc
cmp
jo
mov
cwtl
mov
lcall
push
outsb
divb
pop
dec
ds
mov
mov
cmp
cmpsb
pushf
iret
push
out
sahf
xchg
movsb
inc
icebp
in
dec
jle
sbb
data16
addr16
sarb
test
dec
pop
mov
stos
mov
adc
daa
ljmp
jns
ss
leave
cmpsl
enter
icebp
and
hlt
pushl
fldenv
xor
or
xchg
sahf
fxch
bound
adc
pop
jle
lret
mov
in
xor
into
push
jecxz
shl
jbe
or
xor
mov
loope
popa
dec
lahf
cmp
mov
call
jns
nop
sarb
or
pop
aaa
pushl
flds
sbb
adcb
mov
ror
push
mov
movb
xor
in
pusha
ljmp
push
shrl
or
and
push
mov
mov
mov
repz
mov
push
out
add
arpl
insl
lahf
xchg
mov
jae
jg
adc
imul
cmp
aas
adc
imul
sarl
sbb
popf
mov
mul
incb
xchg
mov
sub
sahf
out
es
cmp
inc
mov
mov
sbb
rorl
aas
pop
inc
mov
pop
ljmp
lret
jp
mov
add
addl
sti
icebp
cli
scas
ficomps
subl
fcmovbe
mov
adc
adc
bound
in
xlat
mov
mov
push
inc
cld
mov
inc
push
cmp
loop
push
fistpll
jb
jp
lahf
loop
stc
inc
jp
xchg
xlat
fidivrs
push
xchg
add
jo
xor
hlt
rolb
mov
fisubs
pop
incb
cmpsl
incb
jecxz
xor
mov
mov
jle
repnz
bound
adcl
je
sbb
push
add
sti
cli
push
out
pop
imul
mov
mov
cmp
fcompp
addr16
shr
mov
or
imul
loop
fisubl
jmp
adc
cmp
push
loope
cld
test
mov
dec
rorl
outsl
loopne
push
inc
fadds
mov
or
ljmp
rcr
cmp
in
inc
lret
inc
xlat
push
push
ror
add
push
mov
in
lds
inc
mov
sbb
mov
mov
in
cli
out
les
xchg
mov
into
popf
or
push
sub
or
push
cmp
cmpsl
lods
fcompl
sahf
movsb
addr16
bound
xchg
dec
clc
push
xor
mov
int
inc
ret
addr16
sbb
out
or
inc
inc
es
inc
jb
daa
int
in
xor
sbb
and
jmp
or
sub
outsb
insl
sbb
aam
mov
add
cmp
ja
jae
pushf
fisttpll
in
xchg
mov
mov
push
jge
cmpsl
jb
cli
rorb
cmp
sarl
xchg
mov
xor
add
bnd
jp
or
jle
or
mov
sbb
mov
inc
divl
mov
jnp
fcompl
dec
jns
dec
push
iret
mov
jge
bound
and
cmp
mov
add
xor
push
jge
mov
mov
adcl
outsb
out
std
pushf
cld
dec
xchg
dec
lcall
cmpsl
push
add
cmp
out
insl
inc
dec
out
inc
mov
pop
push
mov
mov
cmp
add
fistps
es
es
inc
daa
jp
aas
lea
movsl
xchg
mov
loope
adc
cmp
fs
lods
jg
xchg
mov
push
xor
shl
cld
mov
pop
stos
xchg
pop
ds
lcall
sahf
jecxz
shrb
aad
sbb
xor
or
or
stos
pop
mov
inc
rclb
arpl
ds
push
popa
cmp
rcl
enter
enter
push
push
test
outsl
roll
mov
test
mov
pop
movsl
imul
lock
push
rolb
xchg
and
out
dec
add
out
mov
ftst
or
cmp
mov
fidivrl
orl
or
mov
inc
pop
inc
inc
cmp
push
inc
dec
divb
scas
sbb
pop
aaa
add
mov
add
adc
lods
test
mov
cmp
lods
ficoml
xchg
xchg
pushf
out
outsb
add
daa
shlb
lret
dec
add
or
hlt
pop
in
cs
ljmp
test
lcall
xchg
arpl
mov
cs
pusha
loopne
call
sbb
in
jb
xor
sub
jl
mov
cmp
lcall
xchg
push
popf
cmp
pop
cmp
aaa
jbe
lahf
shrl
insb
adc
mov
push
dec
in
push
lahf
or
std
pop
les
push
dec
les
repnz
fiadds
push
iret
or
dec
in
stc
jnp
jbe
loope
sti
cmp
pop
add
pop
xchg
mov
imul
dec
ret
add
add
or
push
fldl
push
cmp
pop
lods
lret
jne
cmp
inc
fldenv
mov
aam
or
push
lcall
and
inc
into
mov
inc
rorb
mov
push
outsb
mov
dec
cmpsl
fnstcw
jg
sarb
push
outsl
fcmovu
mov
push
cmp
dec
pop
cmpsl
sub
inc
xlat
stos
jae
sbb
cmp
mov
xchg
xlat
cmp
push
pop
out
sarb
xor
jo
pop
data16
out
jae
mov
pop
adc
cltd
stc
xor
lret
js
xchg
mov
inc
add
ss
xor
movsb
stc
xchg
jno
loop
push
push
movsb
bound
aaa
shl
cld
cmp
xchg
loop
stc
aaa
jp
js
sbb
cmp
ja
lret
mov
hlt
mov
jb
pop
out
mov
sbb
out
adc
mov
fstps
dec
cmpsb
mov
xlat
dec
movsb
push
sub
xchg
scas
lahf
cmp
add
cmpsl
jbe
sbb
js
jo
insb
xchg
add
mov
pop
cmp
enter
ror
movsl
inc
xchg
cmp
pop
enter
rcl
inc
xchg
xchg
daa
or
jbe
in
mov
test
repz
cld
inc
cmp
stc
out
dec
xchg
lods
sub
mov
shr
sub
sbb
cmp
jne
dec
jo
stos
rcrb
mov
fwait
sub
xchg
pusha
icebp
cmp
jge
mov
or
nop
inc
lods
add
mov
jne
push
and
fisttpl
inc
int
test
ljmp
cmc
testl
mov
or
addb
mov
add
inc
mov
mov
or
divb
repz
xor
shrl
faddl
push
add
scas
jne
repz
cmc
pop
movsb
in
insb
enter
pop
jbe
adc
bound
or
jle
jge
mov
imul
pop
lahf
call
int
mov
into
enter
xchg
repnz
enter
xor
xlat
push
or
repz
pop
xor
es
je
sbb
fsubrl
xor
mov
inc
add
cmp
add
orl
mov
mov
adc
mov
testl
lcall
loope
lret
mov
mov
sahf
sbb
xchg
push
loopne
in
cli
or
ret
fs
and
out
loopne
jae
sub
lock
jecxz
xlat
mov
cmp
xlat
and
das
orl
add
cltd
adc
xchg
lret
ja
adc
fwait
mov
call
sahf
push
ret
into
movsl
sbb
mov
and
out
inc
xchg
gs
mov
xchg
xor
lret
jb
lods
and
inc
scas
dec
mov
adc
sub
jg
sub
cmpsl
es
push
push
cmp
jge
and
xor
cmp
fmuls
sub
mov
cmp
notb
outsb
pop
lahf
int3
mov
mov
cmp
xchg
iret
pop
into
js
sub
jbe
mov
mov
and
dec
aaa
push
lods
jne
cmp
cmp
sbb
faddl
lcall
mov
pop
or
xor
hlt
addr16
in
sbb
inc
incb
push
fimull
aaa
loope
clc
inc
nop
inc
push
xor
cli
fdivl
negb
loop
lcall
push
dec
out
jmp
fsubrl
call
jge
inc
fcoml
imul
or
icebp
or
lret
pop
pop
ret
sub
push
fwait
call
lahf
sbb
pop
mov
jno
sbb
lea
mov
aam
sub
js
jo
or
push
dec
xchg
xchg
lock
pop
mov
jecxz
jecxz
mov
orl
jmp
jg
rcll
mov
js
jo
mov
inc
mov
test
jecxz
popf
sahf
lret
outsb
lret
add
xchg
dec
xor
inc
inc
push
pop
add
pop
xchg
loopne
cltd
cmpsb
xlat
or
sbb
call
loop
aaa
or
stc
jmp
jmp
outsl
lods
rclb
lret
push
or
sahf
mov
jns
lret
xor
and
cmp
int
and
ljmp
sub
scas
mov
sahf
scas
mov
mov
ficomps
cli
sub
inc
insl
lods
test
pusha
daa
loop
outsl
fidivrs
cltd
sub
sub
ss
mov
rdtsc
decl
dec
test
or
jecxz
out
cmpsl
xor
ret
mov
cmp
lcall
ja
sarb
lret
jg
mov
adc
outsb
mov
mov
out
or
fsubr
js
popa
aaa
aas
mov
or
adc
mov
lret
inc
popa
jne
xlat
lret
rcl
fidivrs
fadd
mov
ljmp
mov
fs
test
cwtl
sbb
inc
xor
fdivrs
aas
or
fimull
pop
sub
xor
fisttpll
mov
adc
sbb
add
sub
fiaddl
hlt
shr
xor
cld
xor
mov
cmp
or
jg
sub
loope
out
shlb
cmp
ret
shl
lods
mov
daa
lret
lock
adc
sub
popf
es
insb
scas
in
cmp
aad
mov
fiaddl
inc
sub
sub
mov
scas
into
cwtl
mov
dec
jg
fldenv
sti
es
sub
inc
push
test
mov
add
sbb
sub
add
fstl
push
cmp
lret
mov
mov
pop
lret
inc
mov
in
clc
mov
nop
pop
out
sahf
cmpsl
cs
push
popf
cmpsb
test
pop
or
mov
fcoms
xchg
into
enter
pmaxsw
icebp
cmpsl
mov
in
adc
jmp
adc
dec
pop
shl
dec
jge
leave
inc
aas
cmc
sbb
or
decb
pop
aas
movsl
clc
or
enter
mov
push
adc
inc
inc
mov
jns
sahf
imul
dec
rol
ljmp
push
in
repz
rcrl
test
dec
int3
dec
test
mov
push
lret
lea
pop
call
aaa
into
loope
test
data16
xlat
mov
adc
xor
idiv
dec
addr16
inc
pop
sbb
xchg
jnp
sbb
dec
pusha
mov
pop
adc
ret
fidivl
pop
cmp
loope
cmp
stc
es
sub
xor
or
cmp
into
aas
add
sub
mov
mov
ret
lods
mov
fdivp
adc
stos
push
aaa
mov
loopne
sub
fldt
jmp
test
pop
movsb
imull
pop
dec
push
es
outsl
sub
adc
daa
xor
mov
mov
push
jno
dec
push
mov
stc
or
bound
lods
cmp
cld
mov
clc
fcmovnb
mov
xor
cltd
mov
hlt
es
xor
cmp
sbb
cmp
int3
inc
ds
mov
jns
fstps
negb
mov
cli
adc
dec
push
dec
in
fwait
mov
mov
adc
decb
imul
mov
je
imul
sub
and
gs
orl
je
lret
data16
neg
and
cmp
dec
mov
push
mov
push
sbb
push
daa
cmp
mov
cli
and
push
or
adc
scas
outsl
adc
cmp
xchg
out
jne
or
push
rcrl
mov
inc
or
push
jmp
sub
test
inc
loope
cli
mov
lods
mov
pop
fs
fsubr
cld
repnz
inc
push
dec
ja
lcall
into
test
pop
or
push
sbb
or
sbb
cwtl
cmp
sub
out
push
jle
push
fs
mov
sbb
sahf
sub
jae
shrl
sarb
in
inc
bound
jns
sub
cmp
adc
push
dec
xchg
fistps
in
mov
shlb
cmp
jbe
mov
ror
add
mov
jge
inc
out
sarb
stos
xchg
add
push
push
push
decb
fadds
mov
cli
mov
enter
mov
test
dec
or
dec
jle
sub
add
or
xchg
cmp
loope
cmc
dec
movsl
jle
inc
adc
adc
mov
rclb
negb
addl
loope
into
int
shl
xorl
in
pop
rorl
lcall
into
push
daa
push
dec
jl
mov
push
lods
xchg
shrl
orb
or
fdiv
jle
cwtl
jne
mov
push
xchg
push
ret
jns
adc
in
jecxz
mov
in
cmpsb
iret
cltd
int
xor
mov
cmp
mov
mov
xlat
add
dec
not
icebp
subb
loope
jae
pop
shl
sti
xor
xchg
mov
push
jmp
icebp
loop
ret
mov
mov
jnp
adc
es
dec
and
divb
ss
sbb
sub
push
xor
mov
icebp
add
add
lock
or
call
dec
jle
dec
xlat
in
scas
lods
fstps
adc
fisubrl
lcall
mov
pop
sbb
ss
sarl
adc
mov
fists
scas
and
std
pop
loope
push
pop
push
inc
stc
cli
pop
cli
cmp
sbb
sarl
dec
or
pop
fsubl
push
jecxz
add
addr16
mov
push
jp
sub
pop
pop
bnd
fidivrs
mov
jl
loopne
incl
sti
sub
or
test
lods
push
sti
sahf
aam
mov
xor
add
aas
negl
imul
cmpsl
cmp
and
enter
pop
das
adc
or
jbe
cmpsw
cmpsb
mov
inc
lahf
xor
add
sub
cmp
sub
scas
lcall
and
hlt
xor
adc
cmp
fildl
sub
sbb
repz
xchg
mov
pop
mov
push
lods
push
cli
xlat
jmp
cmpl
pop
out
sub
push
push
jns
add
stc
fstpl
out
ja
xlat
out
ret
scas
lds
icebp
mov
push
in
rolb
mov
or
mov
sahf
xchg
daa
xchg
imul
shl
icebp
xchg
test
cli
pop
adc
repnz
in
sbb
imul
and
shlb
sbb
dec
fimuls
in
pslld
cmp
pop
mov
and
dec
sbb
or
mov
out
sbb
imul
or
pop
push
stc
fstl
inc
push
stos
push
push
out
xchg
jbe
and
sbb
dec
cmp
xchg
loop
push
jl
gs
and
inc
mov
pop
lods
cltd
ljmp
jae
cltd
int3
sahf
jo
pusha
sbb
and
in
push
das
insl
push
add
sub
sbb
adc
andb
inc
ret
sbb
es
outsb
or
movl
fmuls
jmp
mov
xor
cmp
or
pcmpeqd
jb
sbb
out
rcll
test
lods
jp
jmp
cld
fcoml
into
xchg
add
lds
sbb
xchg
stc
pop
pop
cld
in
out
ljmp
daa
mov
cmp
dec
add
bnd
popf
jne
ds
jns
int3
mov
pushf
xchg
rorl
xchg
inc
add
xlat
mov
dec
or
scas
mov
jbe
sti
fdivrl
out
cmp
fidivrs
jnp
fmul
push
or
and
sbb
or
jg
stos
popa
dec
dec
lret
cwtl
jno
and
mov
jb
test
scas
xor
push
int3
and
inc
outsl
iret
sbb
mov
push
das
scas
cmp
jmp
cmpsl
icebp
mov
mov
divl
mov
gs
jmp
out
mov
mov
sub
lods
inc
push
pop
cmp
dec
movsb
ficomps
mov
add
int
fsubp
mov
lret
cmp
stos
jmp
adc
sbb
leave
add
or
and
int3
test
std
sub
test
loope
xchg
movsl
scas
sbb
out
pop
or
push
sub
repnz
mov
loopne
clc
pushf
nop
or
ds
data16
shll
or
add
sti
sbb
ds
cwtl
out
adcb
mov
mov
popl
gs
mov
insl
cmpsb
add
add
sub
lcall
les
mov
lds
sbb
xor
or
push
or
pop
pop
scas
clc
nop
mov
lahf
sarl
mov
xlat
ret
jne
push
fstpt
cmpsb
or
mov
shlw
sbb
xchg
push
pop
mov
out
ret
and
pop
mov
fsts
dec
out
mov
mov
repnz
test
ss
adc
into
outsb
ja
or
fcomip
cmpsl
add
mov
xorl
cmp
mov
inc
sub
inc
sub
or
inc
std
cs
xchg
add
sbb
in
jmp
cmp
dec
cwtl
jne
outsb
or
push
gs
hlt
jb
push
mov
out
fcomps
loopne
xor
repnz
jae
inc
dec
aas
out
push
dec
icebp
adc
mov
xor
int3
or
movsl
in
jge
push
in
cld
and
or
idiv
roll
lret
inc
push
das
out
ret
push
popf
in
push
lret
aaa
cmp
push
and
push
xchg
mov
ss
lods
daa
mov
mov
mov
out
cmp
les
pop
xlat
or
or
sbb
adc
mov
sub
xor
enter
dec
into
mov
cmp
dec
sub
sbb
xchg
repz
fisubrs
stos
js
sub
xor
jbe
jae
mov
dec
mov
pop
sub
pushf
jecxz
ret
lds
cmpsb
outsb
and
mov
fcoms
xor
jmp
push
cmp
imul
fstps
lret
das
xchg
fstl
lock
not
popl
jnp
mov
sti
pop
in
test
cmp
movsb
inc
sbb
adc
sub
cli
icebp
test
fimull
daa
fmull
daa
ficoml
aas
push
addr16
sahf
ret
or
fdivs
xchg
ret
ret
inc
sti
sahf
xchg
sub
test
ror
mov
push
ja
mov
mov
mul
xorb
int
sahf
rolb
inc
fsubrl
lcall
mulb
lahf
inc
ret
lret
pop
dec
icebp
fsubs
out
xchg
xor
cmp
and
or
pop
es
xor
in
push
mov
sahf
mov
or
dec
xchg
subb
mov
notl
stos
pop
push
inc
push
lds
sub
or
sub
push
mov
in
mov
int
push
scas
fsubl
xlat
loop
out
xchg
push
cwtl
inc
push
xor
repnz
scas
and
dec
std
jmp
dec
mov
push
jbe
les
loopne
cli
mov
cmp
mov
sub
add
jae
push
std
push
cwtl
mov
movsb
sub
popa
pop
insb
lret
dec
pop
insl
notb
add
popa
fiaddl
popf
push
into
xlat
or
aas
fmuls
sti
xchg
cltd
cltd
cmp
sarl
out
scas
aas
popa
xchg
sub
daa
fidivrs
push
mov
fnstenv
std
mov
cmp
or
xor
or
popf
aad
adc
lahf
ret
xchg
sub
or
cmpsb
ds
faddl
or
xor
mov
mov
fisttpl
loop
cmp
gs
push
iret
rcr
mov
sub
std
fdivrs
sub
lock
sbb
test
fsubr
jbe
sarl
sub
dec
enter
xchg
pop
fnstenv
pop
test
sbb
dec
mov
xchg
lret
testb
ss
sbb
add
cmp
jns
imul
dec
cli
dec
push
sbb
add
cs
or
dec
xlat
push
cmp
inc
cli
inc
sahf
loop
sbb
data16
mov
outsb
lret
sbb
leave
jge
cli
push
dec
mov
movlps
jae
outsb
sbb
cli
cmp
aaa
bound
cmp
popa
lcall
ret
dec
mov
mov
rcr
mov
ljmp
or
or
add
cli
mov
rorb
mov
aad
sarb
dec
adc
inc
push
push
roll
push
jb
add
jae
arpl
lods
aas
rcr
push
cmpsl
dec
mov
dec
leave
fdivp
fldcw
test
inc
cld
pop
std
lcall
fdivrs
sahf
popf
sbb
pop
mov
into
stos
ds
jnp
sbb
push
iret
stos
push
rcll
or
outsb
scas
adc
fdivrl
mov
mov
dec
pop
divl
push
ss
inc
mov
fisttpl
and
mov
mov
fcompl
enter
or
adc
sahf
lret
sbb
xchg
push
inc
dec
cmp
or
jmp
movsl
bound
mov
adc
test
mov
mov
add
loop
sub
mov
call
or
mov
sbb
int3
shlb
mov
sti
movsb
or
stos
aas
addb
push
mov
pop
cmp
sbb
test
cmp
rcll
rolb
pop
dec
inc
clc
movb
push
decb
mov
dec
xor
clc
roll
je
les
dec
inc
int3
inc
sub
addr16
lea
mov
xchg
sbb
psllq
push
cltd
lret
jg
mov
loop
fwait
in
jg
mov
add
inc
xor
lods
inc
popa
sub
addr16
jne
in
sahf
mov
aas
jecxz
pop
lea
ljmp
or
mov
lds
outsb
daa
add
push
push
adcb
or
repnz
scas
loopne
and
xor
cli
loopne
enter
push
rcrb
call
inc
jg
or
dec
inc
setg
or
adc
fstp
imul
cwtl
xor
loopne
jno
repnz
ret
xchg
popf
xor
mov
and
in
cmp
or
mov
into
cmp
inc
cmp
mov
adc
dec
xchg
xchg
dec
mov
inc
dec
lds
cmp
mov
jo
xchg
fstp
out
mov
xchg
cli
sbb
inc
add
scas
faddl
mov
add
scas
in
lods
dec
fwait
pop
pop
mov
jns
cmp
popa
push
out
xlat
ljmp
ljmp
xchg
cmp
cmp
fldenv
adcl
mov
sub
sahf
pop
push
mov
fwait
icebp
jl
mov
inc
adc
mov
enter
nop
adc
ds
or
xchg
jbe
dec
xlat
push
scas
and
sub
inc
sbb
clc
push
addr16
cmp
lahf
cmp
push
sar
fistl
adc
cmc
or
bound
cmp
addr16
pop
ds
jle
push
push
dec
cmp
cmp
cli
ror
imul
cwtl
sub
lcall
cmp
sub
int3
lahf
loop
adc
lcall
ret
into
lret
or
sahf
pop
ljmp
jmp
orb
inc
pop
stc
or
faddl
cmp
int3
in
mov
and
out
js
int3
sahf
shr
cmpb
mov
out
mov
lahf
std
inc
push
dec
add
dec
push
jmp
jp
hlt
cmp
push
xchg
cmp
push
lahf
add
nop
cld
pushf
cmp
inc
loope
inc
inc
mov
sbb
inc
mov
data16
or
xchg
pusha
push
addr16
dec
lahf
and
and
xbegin
fistpll
sub
cmp
mov
push
clc
xor
roll
xchg
ret
aas
in
stos
popf
lcall
inc
fwait
mov
adc
add
fnstsw
dec
xor
push
add
jno
push
cmp
dec
mov
pop
sub
sahf
mov
enter
enter
test
mov
sbb
or
cwtl
insb
rclb
mov
ficompl
pop
fmulp
xlat
pop
out
fsubrp
mov
icebp
jmp
dec
js
scas
out
lahf
push
add
stos
test
into
out
mov
movsl
sub
jno
or
push
out
sbb
lock
mov
pop
fwait
lret
test
outsl
loope
clc
sub
push
daa
mov
pop
loop
pop
test
negb
mov
nop
push
add
dec
xchg
stos
sbb
sub
mov
push
les
or
cmpb
ret
jmp
dec
repz
sar
cmc
mov
mov
iret
mov
add
and
pop
out
mov
cwtl
sub
loope
push
adc
inc
mov
pop
pop
push
dec
mov
adc
mov
jb
imul
or
add
adc
fbld
xchg
adc
cmp
pop
xor
and
int3
arpl
mov
pusha
mov
and
and
push
sbb
imulb
call
jmp
xor
rcll
jmp
into
xchg
cmc
add
xchg
push
or
int3
lea
shl
mov
aam
test
lret
in
fiadds
inc
icebp
xchg
icebp
sub
jno
not
lock
aas
adc
pop
inc
pop
adc
and
and
out
cld
sub
fdivrl
jb
dec
xor
out
mov
rorb
stos
xchg
f2xm1
add
lret
and
mov
mov
mov
dec
loope
mov
mov
or
data16
pop
scas
sbb
cmovs
push
dec
dec
in
add
ljmp
cmp
test
xorb
inc
incl
mov
cld
mov
dec
cs
mov
addr16
push
inc
xchg
pop
lahf
shlb
daa
or
gs
inc
mov
xor
mov
cmpsb
aam
data16
mov
fcomi
lahf
test
mov
std
cld
notb
les
sub
or
fdivs
mov
test
addr16
mov
test
loop
jle
sarl
flds
and
xchg
nop
mov
pusha
aas
orb
fistpl
sahf
dec
out
lods
fildl
xlat
add
dec
xchg
pop
iret
cmp
arpl
inc
push
inc
rclb
mov
incl
jmp
ja
mov
enter
ja
icebp
js
loopne
sub
add
shr
inc
jecxz
mov
outsl
lea
and
pop
rcll
fdivs
pop
add
mov
add
mov
mov
out
pop
ds
pop
and
jge
xchg
testb
cmp
xor
mov
jge
push
cld
loopne
or
mov
jno
dec
push
cmp
jp
bnd
cld
mov
fdivrs
mov
mov
fcomps
out
sub
test
incb
sub
call
add
sahf
lret
push
cmp
fiaddl
ja
pop
mov
faddp
sub
shrb
rclb
and
mov
adc
xchg
push
je
sub
dec
or
adc
inc
inc
cmpsl
xchg
repnz
pop
popf
cmp
or
dec
cltd
mov
sbb
dec
and
lock
push
xchg
adc
lret
jno
or
sub
loop
dec
pop
sbb
scas
mov
out
stc
adc
movb
in
add
or
inc
or
push
pushf
arpl
push
adc
xchg
push
sub
int3
mov
sahf
aas
roll
fldt
push
sahf
dec
push
aas
ficoms
loop
lcall
xor
push
movsb
pop
inc
inc
pop
or
or
pop
ljmp
fsubrs
mov
rcl
dec
lahf
in
mov
dec
cmp
inc
adc
inc
sub
mov
inc
dec
popf
xlat
aam
xor
dec
in
lret
hlt
ds
cwtl
add
mov
mov
xchg
shrb
rcll
sub
insb
lods
sbb
mov
push
push
stos
xchg
sub
or
lcall
inc
stos
jmp
nop
or
xor
xchg
or
add
sbb
hlt
sti
add
push
es
repz
test
repz
out
imul
xor
repz
cmp
cli
adc
insb
clc
xlat
cmpsb
mov
sub
and
sti
call
inc
dec
rorb
pop
test
lds
sub
cmc
sbb
shlb
jg
rcll
dec
leave
out
jecxz
pop
dec
notb
inc
jno
fidivs
xchg
lock
insl
pushf
test
ljmp
add
xchg
daa
in
inc
add
push
adc
sti
mov
xchg
add
scas
in
cli
jmp
test
stos
mov
subb
ds
lret
inc
ret
pop
outsl
pop
in
push
sub
inc
cli
mov
repz
push
push
dec
mov
push
mov
cli
dec
or
push
mov
pop
decb
sbb
mov
fcmovnb
adc
inc
mov
mov
loop
pop
jnp
call
fisubrl
in
xchg
iret
std
aas
rcl
mov
mov
pop
mov
xor
data16
shr
fdiv
sbb
xor
out
enter
adc
pop
aad
inc
add
jl
jle
add
add
mov
jno
in
adc
sub
cmp
jmp
sti
shlb
adc
cmp
imulb
inc
inc
and
cmp
mov
push
and
mov
sbb
cmpsl
cld
mov
push
sti
mov
cmp
int
imul
mov
xchg
cmp
rol
inc
ret
repz
loop
jecxz
mov
sahf
outsb
xor
adc
mov
addr16
inc
insb
lea
push
adc
mov
into
ret
movsl
or
arpl
push
aas
or
insb
loopne
sub
gs
and
dec
mov
inc
dec
sub
fldcw
dec
inc
fwait
in
xchg
jle
sahf
lds
lcall
push
test
stos
mov
fistl
into
lcall
daa
inc
push
fldl
push
jecxz
call
and
vpsrld
fstpl
jecxz
adc
js
xchg
jecxz
mov
mov
xchg
repnz
daa
or
or
lret
fcoms
mov
mov
cmp
fmuls
xlat
cli
push
add
push
mov
in
dec
mov
xchg
leave
pop
mov
xor
dec
loop
add
and
cli
push
mov
inc
cmp
pop
jg
scas
push
sahf
xchg
ds
les
addl
lret
mov
icebp
subl
xchg
pop
ret
bound
cmp
stos
bound
iret
jge
cli
mov
into
mov
cld
dec
fbld
call
dec
lds
push
fstl
lret
and
hlt
enter
xchg
mov
cs
pop
call
leave
mov
aaa
cs
cmp
jmp
ja
sbb
xor
xchg
rcrl
divl
mov
es
clc
dec
inc
fsubr
xlat
outsb
mov
test
movsb
sbb
fstp
cmc
cmp
xchg
ljmp
neg
cmp
lahf
mov
mov
fdivr
jb
sub
push
hlt
lret
add
mov
jp
js
lahf
jp
dec
stc
mov
addr16
lahf
gs
jle
push
sbb
fmulp
inc
idivb
jp
dec
loopne
lret
mov
lahf
and
das
cmp
stos
xor
or
push
rclb
fmuls
mov
in
lahf
loop
stc
push
push
dec
iret
cmp
int
mov
adc
xor
push
cmp
inc
sbb
mov
jg
les
xlat
dec
not
ljmp
inc
xchg
pop
dec
sti
adc
call
jns
or
dec
lret
lahf
dec
stc
inc
testb
mov
sbb
fimuls
cmp
lods
xor
fsubp
adc
fsubp
cmc
test
pop
dec
sti
jnp
call
loop
sbb
push
mov
std
mov
push
lret
xlat
popf
sti
jb
push
dec
cli
and
int
lret
adc
out
mov
addr16
das
cmp
jecxz
fcmovb
out
ljmp
psubd
or
stc
loope
dec
movb
add
cmp
mov
inc
rolb
xchg
lret
into
mov
idivb
fistps
bound
dec
jae
bound
stos
adc
fadd
scas
outsb
sbb
into
lahf
jl
lret
inc
enter
rcrb
call
cli
push
pop
push
inc
sub
aas
into
aam
stc
repnz
ss
add
lock
mov
sarl
enter
and
mov
loopne
loopne
cs
rcr
in
fmull
cli
xchg
mov
push
test
call
mov
nop
inc
out
xchg
pop
lea
js
adc
arpl
cmp
push
xchg
jle
loop
mov
sti
lahf
sub
xlat
jne
or
cs
out
xlat
sub
and
ljmp
clc
and
cmpsl
scas
in
daa
cli
test
lods
dec
mov
scas
cmp
out
pop
cmpsl
dec
mov
sar
sbb
cmp
and
outsl
adc
inc
mov
imul
inc
sub
xor
sbb
cmp
and
dec
repnz
pushf
adc
adc
mov
repnz
add
in
jp
sahf
inc
xchg
lahf
scas
mov
inc
decb
cli
cmp
jmp
imul
sbb
fcmovbe
push
jno
ficomps
push
test
mov
call
cwtl
ljmp
fsubrl
add
mov
int3
std
mov
inc
ds
cli
or
ljmp
hlt
or
leave
push
mov
sub
ds
or
mov
f2xm1
cwtl
scas
test
jo
mov
popa
dec
mov
data16
mov
sub
repz
dec
data16
inc
adc
pop
lahf
mov
jo
icebp
cwtl
lahf
mov
pop
mov
jno
mov
inc
in
rolb
repnz
or
sub
sub
ret
fidivl
in
out
mov
aas
mov
test
cmp
leave
push
jno
sub
pop
cs
add
fistpll
sbb
jb
insb
pop
leave
push
jne
dec
and
inc
lea
add
test
jecxz
cwtl
push
lods
or
sbb
popa
inc
sub
ja
rolb
pushf
mov
cli
add
lret
dec
or
dec
lret
cli
adc
cwtl
dec
mov
mov
imulb
decb
pop
pop
sbb
push
sbb
mov
mov
insl
test
add
cltd
aaa
jp
popf
sbb
dec
adc
push
push
jp
mov
cwtl
add
out
pandn
cltd
push
pop
leave
ficompl
fisubrs
loope
push
testb
pop
sub
testb
push
stos
add
mov
jae
daa
pop
mov
cmpsl
xor
mov
push
jp
adc
test
inc
lcall
cli
cmc
lea
es
bound
cmp
push
mov
adc
cli
pop
inc
pop
mov
std
and
movb
xor
adc
inc
xlat
cmp
rcrb
mull
cld
jle
call
cmp
into
jg
lret
push
pop
sbb
sbb
test
cld
std
add
push
jp
pop
jbe
add
push
inc
add
mov
loope
int
imul
aad
dec
adc
sahf
mov
push
lret
push
inc
sahf
jno
dec
fisttpl
out
fnstsw
sbb
jp
inc
loope
inc
psubb
daa
dec
aaa
inc
sub
lahf
sbb
dec
mov
push
sub
push
xor
inc
xlat
rolb
pop
cwtl
sahf
inc
or
jp
mov
lods
dec
pusha
mov
stos
inc
push
loopne
idivb
jecxz
mov
dec
add
mov
pop
push
sbb
pop
mov
cmp
push
into
je
es
test
add
push
cmpsl
push
clc
dec
cmp
movl
inc
mov
data16
or
xlat
add
and
or
xchg
divl
push
jb
sbb
in
or
xlat
scas
test
mov
repnz
add
sub
call
or
mov
insb
sahf
bound
pop
cltd
fldcw
cli
data16
call
pop
stc
clc
rcrb
jns
xlat
pop
mov
test
and
jp
push
xchg
icebp
xchg
push
fistps
jnp
fwait
or
jle
and
mov
cmp
into
jne
xchg
push
lret
xchg
cwtl
pop
jmp
das
mov
inc
sahf
test
call
aas
mov
push
pop
and
lret
in
push
xchg
stc
dec
lahf
pop
in
cmp
mov
push
mov
jmp
and
xchg
gs
cmp
das
cltd
jo
sbb
cmp
ds
jp
stos
leave
xchg
loope
push
mov
lock
lret
bound
push
sbb
out
inc
xchg
and
lahf
xchg
movsb
jge
mov
sbb
and
ret
ss
push
stc
push
pop
sbb
xlat
cmp
sub
or
inc
and
mov
idivb
fistps
dec
shrb
mov
cli
and
dec
cmpsb
and
movsb
mov
xlat
sub
shl
cmp
sbb
cs
xlat
fidivrs
idivb
fistps
inc
out
call
and
loope
stc
lret
dec
ds
cli
or
or
mov
test
ss
mov
addr16
das
cmp
dec
adc
or
gs
scas
push
cmpsb
fcoms
out
jp
dec
jl
lret
lcall
fadds
fsubp
dec
stos
dec
ds
add
or
lret
loope
inc
into
pop
dec
sti
mov
dec
daa
fmulp
push
int3
xlat
pop
add
push
cmp
cld
cli
jmp
imul
jmp
cmc
clc
scas
sti
loope
sub
out
dec
clc
inc
and
loop
sti
bound
popa
mov
add
xlat
data16
cli
fdiv
out
into
jbe
loop
mov
dec
mov
pop
xchg
jbe,pt
ja
dec
jecxz
push
out
std
mov
jb
mov
xlat
lds
or
push
jns
cmp
mov
dec
movsb
pop
int
sbb
xorb
ds
inc
fidivrs
sahf
mov
pop
aas
mov
dec
stos
inc
imul
leave
mov
dec
mov
inc
jae
xchg
dec
pop
out
push
call
into
push
cmp
enter
aam
xor
push
cmp
push
push
lahf
sub
pop
pop
in
mov
jns
faddl
sbb
push
cmp
dec
out
out
iret
test
dec
notb
fbstp
cld
ljmp
scas
inc
xchg
jae
inc
mov
pop
loope
testb
stc
das
stos
call
fldenv
lahf
std
push
fwait
push
ficoms
mov
test
cmp
xlat
mov
dec
loopne,pt
inc
ficomps
inc
out
imul
jns
fstps
out
or
incb
test
stc
mov
divb
xor
clc
mov
mov
int3
es
cmp
imul
div
lahf
dec
sahf
push
das
xchg
movb
xlat
cmpb
bound
enter
cwtl
push
jno
cmp
das
cmp
loopne
inc
into
push
sub
or
jno
fmul
sar
jbe
lods
sbb
cli
jb
mov
sub
sbb
mov
stc
sbb
out
inc
push
jle
pop
jbe
push
cli
sbb
out
cld
jp
fiadds
or
jne
rclb
dec
fdivr
sbb
push
sbb
stc
mov
stos
ret
cwtl
sbb
int3
addr16
or
push
mov
mov
pushf
xchg
push
sbb
lcall
jle
sbb
fdivrp
cmp
jge
fidivrl
mov
sbb
mov
clc
xchg
xchg
imul
xchg
mov
xchg
lret
hlt
sti
mov
aam
xchg
loope
push
ljmp
adc
adc
clc
xor
cmpsl
sti
out
in
adc
push
sbb
in
orb
cmp
fsubp
push
xchg
ret
sbb
jg
jb
mov
sar
mov
ret
sahf
pop
inc
xchg
loopne
fisubrs
jae
pop
cmc
dec
xlat
ds
iret
cmc
pop
push
mov
sbb
xor
sub
xor
push
fbld
or
loopne
push
call
mov
icebp
sbb
out
sub
imul
loope
push
bnd
pusha
sbb
jp
mov
fstl
outsl
call
jge
push
add
cli
sbb
clc
jp
cld
call
fcoms
out
mov
and
push
loop
push
pop
inc
and
pushf
stos
sbb
and
test
iret
xchg
rcl
mov
stc
inc
out
mov
sbb
cmp
call
mov
dec
jo
mov
fidivrs
pusha
leave
add
xor
or
xchg
jne
jl
imul
sbb
lea
cltd
insl
outsl
mov
ss
jmp
cmp
mov
cmp
dec
and
cmpsb
ds
jp
fimuls
bound
push
sub
iret
mov
mov
ds
lcall
sub
mov
ss
sti
pop
and
jle
dec
adc
ds
cli
add
cs
cmc
sbb
ds
pop
mov
subb
sbb
frstor
jb
mov
fildll
call
fmul
push
mov
fidivrs
adc
fists
mov
mov
push
add
cmpsl
out
sbb
push
push
pop
ret
pop
pop
cmp
icebp
dec
mov
xchg
jns
test
jle
into
ljmp
push
mov
bnd
push
sbb
xor
jg
xchg
loop
mov
dec
dec
xor
fsubr
insl
mov
call
daa
push
or
loope
adc
imulb
sub
push
out
sub
fldenv
mov
and
bound
pop
mov
mov
add
or
out
xchg
mov
pop
push
pop
popa
push
add
sahf
mov
andb
xchg
add
daa
pop
out
cmc
cwtl
pop
push
and
xor
adc
xchg
add
add
fstpt
js
jae
dec
pop
ds
dec
les
sahf
adc
jo
push
aas
push
aaa
ja
leave
aaa
fmuls
iret
sahf
push
fucomp
jge
nop
adc
mov
lock
sbb
and
mov
lahf
psubw
dec
fnstenv
mov
ja
shlb
pop
mov
push
push
fimull
fadds
iret
sahf
and
rdmsr
mov
js
cs
inc
inc
lret
pop
sahf
inc
fisubs
ss
fldenv
pop
mov
test
xchg
scas
fdivrl
leave
unpcklps
mov
ljmp
imul
cli
push
fmuls
icebp
inc
fadd
in
mov
dec
mov
push
clc
lret
leave
cmp
mov
dec
push
adc
into
inc
xchg
mov
aas
add
or
push
setae
sbb
add
out
jge
mov
push
sub
mov
mov
hlt
out
adc
loopne
mov
mov
lahf
stos
xchg
loope
sub
into
cmp
fs
into
loope
mov
sbb
bound
pop
dec
in
or
jp
fnstsw
fwait
loop
pop
out
and
mov
inc
sbb
out
sbb
lret
fadd
aas
cmpsl
loop
pop
adc
or
insb
pusha
push
clc
repnz
neg
cmc
lret
enter
cmp
inc
leave
cmp
add
push
cmp
mov
ds
push
scas
adcb
in
push
or
xchg
pop
mov
mov
testb
xor
outsl
outsl
dec
push
mov
aas
mov
je
fwait
mov
or
jno
mov
sahf
leave
dec
adc
into
sub
pop
rcll
rol
sahf
xor
in
add
jnp
xchg
mov
cmp
push
push
inc
push
push
cmpsl
push
not
push
sub
dec
sbb
hlt
lds
xchg
xor
not
push
and
lret
and
rcll
add
scas
dec
dec
xor
loop
mov
xlat
push
inc
idivb
cli
loop
testl
ss
lret
mov
push
ret
or
jae
outsl
mov
push
cwtl
ljmp
aaa
js
cmp
adc
sbb
add
push
push
xor
sbb
xchg
dec
cli
into
icebp
popf
jb
into
repnz
xor
jmp
fstp
mov
ret
faddp
xor
outsl
mov
leave
ret
fdivs
lret
pop
ds
pushf
xlat
jmp
ffree
lods
mov
mov
jne
ret
imul
arpl
fisubs
testl
je
and
aaa
test
jbe
pop
sbb
push
stos
ds
fidivl
sbb
jne
cs
out
mov
sbb
sarb
push
movb
fdivrl
nop
adc
jge
mov
or
mov
mov
mov
roll
stos
movl
xchg
cli
fldl
test
push
and
xchg
xor
testl
inc
cmpsl
mov
mov
xor
ljmp
testb
mov
outsl
fists
ds
mov
mov
leave
lret
jno
fstl
cltd
gs
mov
push
xchg
sbb
test
jno
or
lds
out
pop
mov
imul
out
outsb
add
sahf
xchg
psraw
jecxz
sub
push
cli
jmp
xor
fldt
dec
or
imul
out
sahf
ds
dec
mov
cli
jmp
adc
cmpsl
cmpsb
movsb
mov
mov
pop
out
setl
or
mov
mov
cmp
into
jmp
shlb
ss
lds
add
mov
ja
sub
cli
pop
test
xchg
mov
sub
mov
movsb
ljmp
adc
sbb
xchg
mov
fimuls
fsubl
bound
pop
es
gs
imull
adc
add
inc
inc
jp
or
mov
popf
aad
sbb
jle
mov
adc
pop
xor
enter
jno
cmp
arpl
mov
xor
cmc
in
sub
scas
mull
cwtl
xchg
fwait
movsb
mov
lret
mov
movsb
flds
into
xchg
cmp
loop
ljmp
out
ret
test
sahf
jecxz
push
daa
mov
ds
sub
fadds
outsb
xchg
ret
inc
inc
dec
mov
pop
leave
sahf
pop
pop
add
jl
aaa
sahf
inc
clc
shrl
mov
fstpt
mov
aas
loope
fildl
mov
test
xlat
ret
cs
lods
scas
lock
cli
lods
dec
das
jp
lret
sub
pop
mov
or
push
adc
mov
mov
push
movsl
adc
daa
test
ret
out
dec
jp
inc
sahf
movsl
xor
dec
ret
sbb
pop
ljmp
stc
dec
cmp
les
cmp
scas
in
mov
jo
pop
subl
mov
push
push
add
insl
imul
jmp
jmp
rcrl
add
mov
dec
icebp
and
stos
mov
sub
fstl
pop
fidivs
inc
sub
lret
lret
lahf
dec
fadds
cmc
sub
push
loopne
xor
sti
dec
xchg
sbb
sub
addb
hlt
icebp
push
push
jbe
testb
or
and
lahf
xor
pop
xor
mov
sub
rolb
push
rcrl
pop
ret
pop
and
pop
sbb
dec
add
push
test
xorb
pop
std
cld
stc
cmp
sar
loop
sbb
dec
dec
lods
insl
adc
xchg
inc
jg
lock
lret
sbb
inc
mov
scas
or
mulb
dec
xor
insb
lret
inc
xchg
fidivs
movsl
lods
mov
dec
lea
cmp
icebp
xchg
pusha
mov
loop
or
xor
stc
sbb
mov
leave
inc
mov
mov
xor
add
jg
pop
pop
lods
clts
loop
lret
dec
and
pop
jb
push
cmpsl
int
cmpb
push
int
sti
or
cltd
push
inc
lods
push
ret
mov
shl
xchg
fmuls
jno
fnsave
shlb
mov
and
es
stc
mov
or
pop
mov
cld
push
sub
push
mov
adc
cmp
je
inc
or
bound
jge
or
mov
lcall
mov
fwait
xor
xchg
fdivrs
lret
inc
ret
int3
add
xchg
cmp
cmp
dec
in
cmp
ja
iret
inc
nop
inc
jns
shl
xlat
ss
or
jle
das
mov
ficoml
pop
negb
or
jge
lret
fsubp
sahf
sbb
mov
push
dec
popa
or
cmp
in
rclb
scas
lods
insl
or
aas
mov
cli
js
or
dec
sub
in
ror
dec
leave
fisttpll
xor
mov
and
jmp
cmpsl
inc
cs
jp
add
cli
dec
movsl
notb
enter
or
pop
dec
mov
pop
gs
sub
mov
test
stos
into
aas
push
mov
mov
cmp
aam
xor
sub
loope
and
sti
xchg
jo
iret
sahf
mov
cwtl
imulb
pusha
cmp
leave
push
stos
leave
fldl
bound
adc
lds
lret
mov
mov
mov
mov
and
pop
imul
shll
dec
xor
ss
bound
xchg
xlat
int
cmp
int
fsubrs
repnz
lahf
sub
push
mov
pop
dec
lret
fcmovnb
dec
fs
inc
lret
sbb
aas
push
push
xchg
mov
out
stos
stos
or
addb
ret
cwtl
jns
mov
mov
mov
dec
test
pop
adc
leave
add
dec
jmp
subb
loope
add
in
mov
adc
xchg
jle
or
lods
sti
or
scas
lret
inc
ret
fcmovb
aaa
and
add
cmp
cli
lret
cwtl
mov
add
and
dec
imul
and
ret
rolb
int3
xchg
sahf
cmpsb
adc
into
lods
fbstp
push
ret
mov
leave
pusha
dec
sub
xlat
push
int
test
shlb
sub
push
leave
sbb
sbbl
roll
add
xchg
mov
aas
lea
mov
out
xchg
into
adc
cli
mov
mov
pop
cltd
aas
mov
jmp
mov
mov
sbb
inc
jbe
sarb
sahf
int
test
test
ficomps
into
push
push
cli
loop
cmc
xchg
movsl
xor
inc
xor
ret
rcr
fdivl
out
pusha
xchg
inc
in
fs
add
roll
popa
aam
and
push
or
hlt
cltd
xchg
idivl
fisttps
push
ljmp
mov
push
push
inc
cwtl
ss
push
cmc
sub
lret
fwait
call
mov
iret
insl
mov
insl
add
jb
cli
adc
inc
lret
icebp
lret
jnp
movb
gs
push
or
sub
adc
pop
loope
insl
test
mov
lahf
mov
repz
pop
mov
mov
shll
dec
mov
or
movsl
cmp
ret
adc
pop
pop
imul
sbb
lahf
lcall
mov
fcoms
out
sbb
es
enter
test
cmp
mov
addr16
mov
lahf
movsb
call
mov
inc
xor
daa
movsb
decb
xlat
idivl
je
dec
or
or
aas
mov
cli
test
enter
and
adc
jmp
cmp
xorb
ret
pop
int3
xchg
pop
or
adc
xorl
fstps
add
and
outsb
addr16
push
lcall
lcall
aas
lret
lock
cwtl
or
or
jle
or
mov
loop
test
push
mov
pop
dec
fbld
mov
loop
sahf
lcall
rorb
lret
lcall
and
dec
ljmp
mov
or
loop
or
sub
mov
jge
mov
mov
pusha
loop
mov
lret
xlat
jb
les
jg
fidivrs
adc
sahf
sbb
repnz
out
mov
sub
mov
outsb
into
cmp
paddusw
bound
stos
enter
xchg
jecxz
add
inc
cmpsl
cli
cs
rcl
sahf
sbb
push
pushf
push
push
lret
or
cmp
add
les
not
movsl
adc
ja
pop
jb
inc
es
daa
mov
rcl
sbbl
rcl
cs
cmp
imul
cmp
xor
and
mov
in
mov
fmul
es
cmp
sbb
jecxz
xlat
mov
sbb
ss
mov
fisubs
xlat
ljmp
aad
cmp
rcl
inc
scas
ds
or
mov
adc
sub
inc
fldl
outsl
inc
pop
pop
mov
sub
std
sarb
cld
xor
je
mov
push
or
inc
mov
ljmp
cmp
dec
push
clc
adc
push
out
lea
xchg
jmp
movsb
stos
add
into
mov
mov
jle
leave
cmpl
pop
jns
xchg
fidivrs
sahf
xor
pop
mov
dec
lret
jecxz
dec
xchg
ret
ret
cwtl
into
roll
imul
stc
stc
stc
fbstp
rclb
mov
dec
and
sbb
lds
or
loopne
gs
jmp
xor
lea
lahf
aam
cli
fstpt
test
xlat
add
adc
jle
mov
lahf
push
jp
les
mov
loopnew
or
imulb
xor
in
sub
jecxz
inc
sahf
mov
pusha
push
xchg
in
add
cmpsb
cmp
ret
add
testl
jno
pop
ljmp
xor
inc
arpl
cmp
jns
mov
mov
sbb
pop
sti
sti
rolb
jecxz
into
test
iret
fimuls
cli
and
dec
xor
sub
sarb
adc
movsl
mov
aas
rcll
push
jmp
add
sub
fld
push
and
enter
loop
leave
pop
jno
cmp
mov
xor
jo
xchg
or
test
add
fadds
enter
mov
imul
cmp
shlb
aaa
int3
out
xor
shl
jmp
pop
or
sahf
or
inc
loopne
clc
dec
fscale
in
icebp
pop
lahf
push
nop
loope
std
mov
cmp
adc
loopne
adc
enter
sbb
adc
out
jg
negb
ja
dec
xchg
jge
ss
cmp
int
and
mov
dec
es
adc
push
sahf
scas
cmc
mov
jg
into
cmp
mov
or
stos
and
dec
push
mov
setle
bound
mov
andl
mov
rcl
ja
sahf
sub
faddp
into
jb
ret
adc
mov
or
dec
sarb
cmpsb
push
loopne
cmc
ljmp
ss
sub
icebp
push
xor
rcl
inc
inc
icebp
rorl
mov
notb
sahf
aad
fists
lret
mov
aas
xor
xor
mov
xchg
aam
mov
xor
ss
mov
xorl
mov
mov
mov
lret
mov
int
jno
push
pushf
xor
xchg
fistl
jns
or
mov
out
or
sub
jnp
jno
sub
inc
inc
std
fwait
mov
repnz
cld
in
sbb
cli
aaa
mov
sub
lret
cmc
fldl
ljmp
inc
sbb
sbb
addr16
jae
pop
jge
cmpsb
pop
or
test
xor
sahf
sub
push
sub
pop
pop
div
cmc
lahf
add
repnz
aas
fldt
outsb
xchg
or
jb
dec
clc
in
xchg
sti
add
clc
ret
lods
ss
test
sub
and
mov
adc
dec
push
std
sbb
mov
and
std
fdivrs
std
stos
ljmp
add
pop
pop
inc
out
and
ror
or
xor
mov
jbe
add
insl
mov
or
mov
sub
stc
daa
out
repz
ss
shl
inc
out
mov
icebp
or
add
pop
inc
ret
xor
push
mov
sahf
adc
mov
adc
push
cli
or
pop
inc
adc
or
mov
icebp
movsl
sub
lock
xor
mov
xlat
jge
sbb
cs
push
cmp
aaa
rol
mov
sub
adc
jnp
gs
xor
ss
xor
sub
inc
ud2
cmp
out
in
ja
mov
sub
inc
cmp
shl
mov
jp
mov
mov
sub
add
jle
push
out
adc
mov
lahf
dec
notl
mov
xchg
insb
stc
xchg
sbb
mov
mov
adc
hlt
fiaddl
lret
sahf
pop
xchg
cmpsb
cmp
lds
or
dec
mov
push
push
lock
fdivr
mulb
dec
lock
or
sti
rcll
data16
mov
clc
mov
aas
adc
mov
jle
sbb
mov
jne
rorb
or
push
jbe
out
ret
adc
das
mov
orl
imul
js
push
sub
dec
sahf
mov
lods
out
push
pop
cmp
roll
xor
sti
pop
cmpsl
clc
pop
dec
jp
out
loopne
jg
mov
or
lods
mov
in
sbb
data16
pop
and
xchg
add
es
xchg
dec
xchg
pop
movsb
jmp
cmpb
adc
es
repz
insb
adc
mov
leave
dec
xor
jae
cmp
stc
fwait
aad
and
subb
scas
xor
inc
rol
mov
aas
push
mov
xchg
add
daa
jno
jns
imul
test
dec
push
mov
scas
daa
lret
aam
jle
and
push
outsl
cld
decl
popf
loopne
out
or
inc
xorb
cs
inc
popa
jns
sub
adc
xchg
into
mov
jmp
inc
or
inc
fdivrl
pop
push
test
cmpsl
int3
xlat
jnp
inc
ret
dec
mov
or
enter
aam
arpl
xlat
pusha
mov
fsubs
inc
and
popa
cs
sub
into
sarb
repnz
inc
jns
in
or
sahf
int
repnz
scas
pop
inc
addr16
sarl
shrb
mov
fdivrl
in
jp
roll
arpl
dec
inc
push
xchg
sahf
push
xchg
lea
pop
sbbb
cmpsb
aad
push
mov
pop
xchg
xlat
jmp
movsl
mov
cwtl
mov
add
mov
mov
xor
outsb
inc
or
in
adcb
out
jl
jae
sbb
shrl
sub
cmp
jne
adc
les
out
or
sahf
inc
xchg
out
and
jne
mov
add
rorl
mov
push
sbb
add
sub
ret
packssdw
icebp
sub
inc
cmp
xor
loop
std
lret
push
inc
or
adc
add
sbb
insb
dec
push
mov
test
add
mov
cmc
aad
rol
int3
jge
or
or
lret
shlb
stc
add
pop
adc
xor
adc
cmc
xlat
mov
dec
mov
inc
push
adcb
jle
fstl
push
in
mov
mov
push
mov
frstor
shrb
adc
mov
fbld
adc
aam
adc
jg
mov
adc
push
ficoml
dec
or
sbb
add
es
adc
mov
lahf
out
pop
call
jg
or
push
mov
pop
jnp
cmpsb
movsb
pop
xchg
xor
ret
jbe
and
out
addb
jnp
and
or
test
or
jecxz
push
aaa
xor
stc
and
and
mov
int3
sub
movsb
pop
loop
movsb
cltd
rorb
adc
push
jnp
dec
or
adc
mov
sub
inc
adc
or
inc
sub
or
xchg
test
push
mov
mov
insl
xchg
cli
sti
sub
push
movsb
push
inc
xor
push
rolb
out
fnstenv
push
enter
lods
xchg
xchg
call
lods
fnstsw
sahf
shll
clc
inc
cmp
inc
mov
jns
push
mov
or
fdivp
inc
repz
dec
sti
inc
sarb
mov
enter
xor
lahf
push
lods
jns
shl
les
mov
data16
cmp
or
add
push
fldt
cmpsl
fsub
scas
push
xchg
push
jmp
mov
adc
mov
dec
lahf
notl
dec
cmp
popa
ror
out
in
fs
pop
xor
mov
jae
insb
aaa
cmp
push
xor
out
in
dec
and
stos
pushf
lods
negb
out
xchg
and
aad
xlat
jbe
mov
or
cmp
hlt
fidivl
into
push
scas
fsub
pop
dec
loopne
aaa
pop
or
mov
loop
sbb
cld
add
ret
es
or
pusha
mov
fcompl
mov
inc
sub
mov
mov
sub
sub
idivb
das
ret
rorl
xor
jge
jl
imul
mov
out
dec
frstor
sub
jg
cld
xor
push
bound
or
inc
cmpsb
inc
pop
sub
repz
movsb
fxch
incl
repz
xchg
loop
mov
push
dec
ds
out
pop
stos
rclb
lret
movsb
subb
sub
into
cmp
lea
jo
lret
jbe
dec
sarb
rcr
lret
mov
sahf
loop
cmp
sar
loop
cmp
xor
cmp
addr16
loope
fimuls
lret
lar
xlat
pop
sbb
loop
cmp
out
imul
cltd
pop
iret
cmp
sbb
pop
loop
sti
cli
ds
dec
sahf
mov
ficompl
inc
icebp
jmp
mov
cmp
mov
xchg
inc
shll
adc
inc
xor
insb
xchg
or
sti
fnsave
xchg
cli
mov
fstp
in
outsb
inc
aas
mov
shrd
add
movsl
add
ret
outsb
gs
push
ret
lds
loopne
adc
movsl
mov
add
add
xchg
out
lds
pop
fildl
outsb
sbb
inc
insl
add
adc
sbb
data16
lea
pop
adc
and
jmp
dec
rorl
pop
xor
pusha
cmc
add
clc
pop
push
xor
scas
jo
and
jp
jns
es
cmpb
mov
and
push
bswap
add
test
insl
dec
into
xchg
sbb
cmp
and
mov
ret
mov
mov
sar
push
and
scas
sub
leave
cmp
aam
push
lock
les
jne
mov
mov
sti
ror
ret
mov
cmpsb
fistl
jnp
mov
ds
sub
inc
lret
inc
xchg
ret
aas
jg
push
cli
inc
push
pop
mov
cmc
cmp
inc
mov
mov
mov
pop
mov
int
aas
shlb
push
nop
lcall
pop
push
icebp
jns
pop
push
sub
pop
int3
fmul
inc
lret
cli
stos
lods
repz
fidivrl
push
or
out
push
pop
into
or
xor
mov
sub
or
push
add
ret
lret
dec
pop
gs
add
add
cmp
cli
cld
sbb
lods
inc
push
push
pop
lret
and
jne
hlt
stos
push
stc
push
repnz
xchg
mov
cli
loop
or
cmp
inc
frstor
out
sub
int3
push
mov
inc
push
or
add
jecxz
negb
rolb
ja
push
inc
jo
pop
in
xchg
mov
xchg
dec
enter
xchg
mov
stos
mov
xor
out
popa
sbb
push
or
lret
out
jmp
fistpll
sar
stos
and
stos
xor
jecxz
dec
stos
push
push
rdpmc
mov
add
sahf
inc
jg
xchg
pop
fdivs
sub
or
jmp
xlat
int
int
sub
ffree
cmp
icebp
jnp
fnstcw
xor
mov
inc
sarl
jecxz
sti
mov
mov
push
mov
dec
loopne
xor
negl
xchg
movsb
out
loope
fisubrs
aad
sub
xchg
cmp
clc
inc
push
inc
push
into
icebp
xchg
loope
loope
mov
jmp
mov
pop
aad
flds
or
loopne
ret
daa
lcall
aas
fistl
js
into
dec
outsl
adc
jno,pt
pop
bound
enter
mov
mov
sub
xchg
iret
sahf
dec
loopne
arpl
push
mov
lret
mov
push
xchg
sarl
push
mov
mov
add
lods
call
in
cmp
adcb
add
mov
xchg
ret
sahf
mov
cmpb
mov
adc
jecxz
sub
dec
or
cmpsb
aaa
add
mov
loopne
or
push
adc
mov
xchg
bound
div
mov
sub
mov
xchg
push
or
push
and
cmp
cmove
dec
lahf
int3
cmpb
add
rorl
enter
outsb
rcr
adc
adc
mov
enter
in
rorl
or
data16
xorl
push
data16
push
push
adc
lret
sub
jo
xchg
push
bnd
popa
and
fimull
or
dec
jnp
adc
in
xchg
sub
divl
into
sahf
push
js
out
jae
push
mov
fsubs
aam
sbb
sbb
movsl
xchg
dec
cli
pushw
popa
gs
cmp
inc
in
ljmp
popf
out
stos
dec
fidivrs
mov
xabort
fsubp
mov
call
into
fdiv
xchg
cwtl
fldl
adc
sbb
je
fldl
icebp
adc
mov
inc
dec
loop
dec
or
rolb
add
lods
sbb
fcomip
ret
sbb
push
fnstenv
mov
test
shl
in
pmullw
leave
gs
push
enter
out
sahf
mov
xchg
in
es
mov
pcmpgtd
adc
push
leave
mov
and
ret
lret
mov
push
sub
ja
mov
push
loop
js
sub
cmp
lret
dec
fisttpl
mov
inc
or
xchg
mov
lock
jo
call
in
fdivrl
adc
ss
out
pop
or
lahf
inc
or
xor
incb
sarb
fsubl
sub
cltd
inc
lods
jecxz
jle
xchg
mov
sahf
jo
pop
fisttpl
or
enter
loope
loope
push
shl
sahf
lahf
sbb
stc
adc
fildll
out
repnz
push
hlt
or
inc
punpcklwd
push
dec
xor
lret
or
ljmp
mov
xchg
mov
shl
jle
bound
stc
mov
fimuls
shrl
fistpl
cmp
movsb
repz
test
mov
lret
pop
cmp
cmp
cmc
mov
call
push
arpl
out
mov
jmp
adc
pop
lret
cmp
repz
push
loope
aam
jbe
sahf
and
lcall
jge
andb
or
movl
orb
leave
lods
jns
add
jge
sarb
cltd
mov
or
fld
dec
jne
mov
mov
mov
stc
xor
add
or
mov
clc
mov
icebp
xchg
fcoms
fstps
push
popa
pop
leave
mov
fcomip
icebp
lret
faddp
fldl2e
icebp
jns
ffree
lret
bound
negb
test
dec
cmp
or
fld
sbb
sbb
pusha
fsubs
jns
ja
sbb
iret
fcmovnbe
lret
add
punpckhwd
and
fwait
int3
inc
push
ds
sbb
push
pop
es
add
ljmp
loopne
cmp
jp
pusha
lods
cmp
or
mov
lock
add
jp
adc
jecxz
push
dec
sub
jle
js
or
sbb
fiadds
idivl
lds
fsubl
adc
add
dec
cmp
mov
or
int3
mov
dec
arpl
push
push
jecxz
ficompl
sub
insl
pop
jg
sub
cmp
into
or
cs
jg
adc
dec
sbbl
sub
cmpsl
loope
ja
cmpb
mov
into
test
cld
out
lret
adc
test
imulb
popa
push
mov
icebp
xlat
pop
and
mov
dec
sbb
xor
rolb
in
mov
mov
mov
lcall
push
adc
sbb
push
out
test
sbb
adc
invd
cli
adc
sbb
fidivrs
lds
and
into
push
sub
mov
insb
rcr
aas
sbb
jecxz
inc
icebp
xchg
add
cmpsl
add
mov
push
test
sahf
and
xchg
out
subb
fiadds
ss
aam
insb
cmp
cmp
mov
adc
mov
ret
call
add
stos
cmpsb
int
push
lret
add
xchg
lahf
cmp
mov
pop
ret
jecxz
out
push
cld
inc
sub
out
adc
imul
lcall
jnp
jg
cmpsb
xlat
cld
mov
imull
ret
push
addr16
mov
std
or
mov
std
loopne
jmp
movsl
adc
fwait
lcall
test
cmp
mov
or
lds
fcmovu
bound
xchg
lods
add
sbb
add
sub
inc
xchg
ljmp
out
or
add
push
xchg
fstpl
data16
inc
xchg
xor
pop
push
mov
and
or
xor
fdivs
add
notb
xor
arpl
hlt
hlt
sbb
cmp
lret
mov
sbb
or
fiaddl
xchg
sahf
jns
push
and
fs
stc
or
dec
ror
or
push
xchg
pushf
sbb
xchg
test
aad
sub
fs
add
and
push
orb
sar
adc
testl
mov
or
push
add
push
push
or
push
mov
cmp
cmpsb
mov
push
js
jmp
or
or
push
lea
xchg
outsl
xor
int3
ret
jmp
ss
sbb
inc
into
pop
jp
and
cmp
mov
push
dec
xchg
mov
adc
jle
sub
pop
mov
fmul
cld
loop
fcoml
mov
or
imul
mov
fbld
in
mov
sub
arpl
fbld
cmp
mov
push
sbb
jg
pop
push
enter
push
out
inc
dec
je
outsb
sbb
or
or
pop
jae
and
ror
xchg
int
stc
rclb
daa
sub
fmull
ret
jle
or
mov
mov
push
inc
pop
dec
inc
dec
lcall
push
loop
or
repnz
ja
loop
pop
aas
sub
enter
loop
mov
incb
ljmp
pop
lods
xor
ret
xor
mov
fsubs
mov
adc
cmp
clc
imul
push
inc
xor
insl
rcrl
sub
or
scas
sub
mov
and
ss
sahf
nop
into
xchg
loopne
sub
or
adc
pop
cld
or
cmp
call
sbb
or
push
inc
rorb
xchg
in
in
sbb
lods
jecxz
into
std
imul
aad
outsl
xor
cmp
scas
int
ljmp
mov
pop
aas
into
adc
and
loope
mov
faddp
dec
mov
cmp
ret
dec
adc
xchg
fists
ds
mov
enter
dec
mov
mov
ds
sahf
inc
pop
mov
popf
lret
out
lock
call
add
xchg
out
push
insl
ja
iret
xor
adc
xchg
inc
xor
inc
lahf
lock
idivb
lock
shlb
xchg
xchg
aas
adc
lock
push
or
lock
mov
cmp
mov
adc
mov
bound
sti
in
and
sti
mov
cmp
push
mov
lahf
repz
stc
fdivrs
adc
mov
sbb
sub
dec
push
pop
sahf
sub
int3
push
xchg
pusha
inc
mov
cmp
fmulp
jp
adc
xchg
sbb
and
push
dec
jl
icebp
mov
andb
sub
fs
int3
jg
jg
test
ds
ds
rcrl
les
outsb
ja
mov
ficoms
lcall
cli
ljmp
repnz
adc
pop
mov
add
jnp
push
rcr
or
idiv
push
loop
adc
cli
push
repnz
fidivrs
aas
aaa
and
es
sar
sub
stos
jl
fildll
push
mov
push
int
enter
fdivrl
inc
out
int
mov
inc
ficoml
dec
in
xlat
inc
dec
fldcw
push
fnstcw
in
dec
or
lds
inc
cli
data16
fsubrs
adc
in
call
cmpsb
xchg
loop
cmp
jl
iret
push
clc
fxch
test
inc
mov
cmp
adc
ret
dec
sbb
push
pop
cld
fmul
rep
cli
es
sub
lcall
jb
push
pop
out
sbbl
pop
inc
mov
jmp
arpl
mov
mov
enter
pminsw
push
decb
outsb
push
jnp
es
cmp
push
xchg
jmp
vorpd
adc
pop
decb
cmp
dec
pusha
cs
mov
inc
loop
ja
inc
sbb
mov
adc
adc
push
adc
ds
adc
and
mov
pop
sbb
dec
xor
xlat
fs
jge
jle
pop
enter
data16
aaa
jle,pn
cmp
mov
pop
xor
dec
mov
jp
xchg
jmp
ss
out
les
cmpsb
jp
pop
sbb
out
out
inc
stc
ljmp
xlat
in
jge
jle
loopne
enter
popa
ss
stc
push
xchg
push
incb
inc
mov
inc
pop
inc
jp
out
loop
inc
cli
test
repz
fldcw
out
loop
cli
pop
push
rcrl
movsl
fdivs
fsts
out
scas
inc
repnz
inc
fs
lret
add
bound
cmp
xlat
xor
dec
rclb
adc
movsb
lret
ds
test
inc
test
mov
movsb
decl
cmp
aam
or
test
push
cmp
mov
cmp
stc
inc
jb
push
ret
out
out
push
negb
rcrb
pop
fptan
mov
adc
mov
add
sub
inc
jp
adc
test
js
ss
data16
mov
pop
out
fnstcw
rcll
push
pop
int3
xchg
cmp
push
pop
adc
test
ss
stc
scas
testb
ret
sbb
sub
cltd
add
jns
daa
insl
test
or
je
cmp
out
xor
push
addb
aam
inc
sti
cld
cmp
and
jp
shrl
push
pop
jp
daa
popw
sarb
push
shr
clc
jg
dec
push
mov
test
js
add
adc
jg
or
xor
jg
push
and
lret
push
xor
push
and
cs
push
cwtl
mov
adc
sbb
sbb
xchg
rcl
repnz
xor
movl
cmp
notb
push
push
into
adc
ss
inc
xchg
push
inc
sbb
push
sbb
in
jp
xchg
mov
in
sub
jge
hlt
mov
sbb
xor
or
inc
pop
and
fwait
loop
cwtl
xor
mov
fstps
lcall
or
out
sbb
and
out
sbbb
or
mov
out
xlat
mov
cmp
repnz
mov
pop
in
xchg
inc
jp
mov
jl
repnz
scas
shlb
mov
imul
xchg
aas
adc
jne
jae
cmp
cmp
jne
or
ret
xor
ds
ss
jle
addr16
aam
lods
xchg
stc
test
movsb
lret
mov
jns
mov
popf
sti
divl
lea
mov
mov
outsb
mov
sbb
ss
iret
mov
and
mov
or
in
sar
cli
push
ret
jmp
or
popf
sbb
jl
or
int
addl
stos
stos
or
inc
adc
cwtl
jle
btc
imul
sahf
push
icebp
xchg
mov
jo
out
repz
leave
sub
and
add
loop
mov
ret
fcomps
rcrb
sbb
sub
jne
out
mov
sahf
lcall
mov
push
pop
negb
cmpsl
sahf
inc
rcll
push
mov
loop
dec
clc
mov
dec
xchg
adc
inc
std
push
fsubr
aas
ret
mov
xor
in
int3
inc
cmpsb
addr16
or
dec
cmpsb
lahf
sub
int
ret
arpl
pop
mov
fnstenv
or
mov
loop
lret
dec
adc
xor
dec
or
cmpsb
rorl
push
sbbl
iret
mov
mov
outsb
push
or
in
fs
icebp
bound
sahf
ja
jns
dec
aaa
scas
not
sub
popf
mov
push
lea
push
add
push
insb
add
inc
sldt
mov
adc
rclb
or
cwtl
cmpl
xchg
mov
mov
mov
xor
mov
into
mov
adc
test
adc
add
mov
mov
mov
aas
rorb
loope
enter
adc
lods
xchg
cmp
cmp
or
fldl
sbb
mov
or
mov
iret
ds
or
sbb
loope
mov
icebp
stos
sub
outsb
xlat
pop
aad
xlat
repz
add
adc
jbe
or
pop
add
dec
mov
pusha
ret
cmp
aaa
iret
add
fcmovne
mov
or
loope
in
shl
mov
push
aas
inc
icebp
ja
fisubrl
lds
jmp
fisubs
mov
or
cs
ljmp
cmp
mov
cld
dec
add
pop
and
xor
aas
mov
mov
and
scas
arpl
mov
incl
xor
sbb
out
jl
push
mov
sub
pop
pop
cli
shrb
loope
ficoms
add
mov
adc
adc
aad
push
dec
or
mul
dec
add
jo
and
jb
push
mov
lret
add
enter
mov
push
stc
mov
jne
ds
jae
inc
jle
ret
xor
jno
mov
lods
enter
lea
int3
mov
sub
sub
dec
fidivl
xor
lods
sub
lds
mov
sub
xor
fdivrs
mov
loope
mov
sbb
mov
push
popa
push
das
inc
push
adc
jae
repnz
xor
mov
cmp
xchg
out
mov
sarb
mov
sub
arpl
ds
leave
pop
scas
mov
leave
or
cld
pop
repnz
sahf
inc
mov
aas
sub
jl
cltd
cmp
cmp
dec
iret
shlb
rorl
xor
pop
lods
iret
mov
int
lds
in
mov
jnp
jae
andps
inc
adc
hlt
add
ret
lahf
adc
inc
fidivrs
and
xor
orb
sub
icebp
jl
popa
out
jl
stos
mov
daa
dec
ljmp
inc
adc
pop
les
mov
fabs
jle
cmpsl
daa
cmp
lret
fildl
mov
jno
inc
adc
adc
inc
aad
rcl
inc
lock
or
ficoms
jge
mov
sub
inc
jns
scas
fdivrs
jl
adc
cli
xchg
dec
das
mov
ret
iret
sub
add
lret
sbb
mov
pushf
pop
push
or
mov
pop
repnz
inc
aas
mov
rol
cmp
adc
dec
arpl
lcall
cmpsl
xchg
daa
bswap
loopne
sbb
pushf
or
mov
mov
or
xor
movsb
lret
mov
fmull
in
loope
cld
cmp
out
or
pop
sbb
jp
ljmp
repz
jl
fcmovbe
jne
sbb
or
rolb
in
jg
mov
cmp
mov
sub
inc
jl
jge
fwait
sbb
pusha
nop
pop
cwtl
mov
data16
cli
aaa
push
das
lret
push
pop
jl
sub
xchg
or
pop
bound
mov
sti
lret
bound
xchg
es
mov
fildll
jno
sbb
aad
jbe
aas
lret
rclb
mov
xor
lret
ficompl
in
cltd
mov
inc
cld
ficoml
out
gs
adc
es
jge
pop
or
jno
faddp
adc
jmp
cltd
out
mov
dec
stos
insb
or
test
and
outsl
enter
cmpl
push
cmp
sahf
mov
stos
enter
out
jp,pn
jnp
aas
pop
ret
sbb
xor
or
cmc
mov
mov
and
push
jecxz
pop
bound
inc
or
sub
es
cmp
cwtl
hlt
mov
mov
fcoms
mov
jnp
adc
xchg
fdivrs
add
fwait
xchg
jp
mov
add
cmp
or
mov
pop
xchg
sub
jae
pop
jae
mov
js
inc
lcall
jbe
ds
mov
pop
or
decb
xor
jns
dec
subb
push
xchg
into
pop
xor
loop
jno
add
cmc
sub
dec
std
ret
mov
fcmovne
mov
rorl
mov
mov
shll
mov
mov
cwtl
pop
or
adc
mov
shlb
mov
pop
ss
xchg
ds
xchg
incb
inc
ljmp
inc
jns
or
pop
mov
cmp
mov
pop
int3
loope
ss
push
outsl
xlat
loop
fnstsw
sub
xor
out
pop
push
xlat
int
dec
cmp
aaa
shl
mov
out
xor
mov
aaa
inc
pop
push
mov
into
or
sarb
fs
aas
sub
xor
sahf
sub
and
sbb
jo
add
ja
pop
jle
aam
aad
rorl
hlt
mov
roll
subl
scas
inc
push
outsb
idivl
pushf
inc
xor
jae
push
add
das
push
jle
adc
pop
je
dec
mov
mov
dec
jbe
pop
cmp
cs
inc
adc
mov
ficomps
iret
lods
pop
and
cmp
mov
jg
std
inc
aas
or
test
mov
sahf
fsubrl
shrl
outsb
cli
xchg
aaa
sbb
cmp
dec
mov
add
divl
xchg
out
mov
sarb
mov
sahf
mov
mov
xor
inc
or
push
ret
fistpll
cmp
push
int3
lock
jl
mov
je
push
rolb
xchg
mov
rcrb
cmp
mov
addl
jbe
cmp
fistpll
lods
data16
sub
mov
jo
mov
shlb
cmp
push
rol
lods
sti
int
ret
inc
adc
loopne
push
xchg
jge
pop
adcb
int3
call
shll
mov
mov
inc
xor
or
jno
push
lcall
rolb
pop
ss
ja
mov
add
pusha
pop
test
imul
les
add
inc
ds
ja
mov
out
aam
in
das
mov
mov
mov
mov
xchg
scas
mov
cltd
xor
dec
js
fidivrs
sahf
fidivrs
les
enter
mov
pusha
xorl
mov
inc
or
dec
mov
dec
xchg
in
mov
and
and
mov
ret
rclb
fs
cmp
ror
sbb
cmp
sti
les
das
xchg
jbe
pop
xor
ds
je
xchg
xlat
in
dec
ret
mov
add
mov
xchg
fdivrs
imul
loope
dec
push
mov
in
push
movl
mov
cli
fnstsw
inc
loopne
lret
pop
push
pop
sub
les
inc
mov
mov
xchg
mov
test
push
cmp
jns
sahf
idiv
dec
jg
loopne
ss
es
dec
ljmp
insb
aam
popa
mov
pop
into
int3
mov
clc
enter
out
jne
xlat
sub
ja
btcl
push
js
push
or
xchg
lret
or
adc
jns
loop
pop
push
call
fisttpll
xor
mov
arpl
adc
jl
cmpb
pushf
inc
mov
pop
icebp
fucomi
xchg
sahf
pop
stc
icebp
clc
xchg
inc
out
scas
adc
js
add
das
lahf
je
ljmp
mov
les
jmp
shrb
or
xor
lea
aad
sub
aam
push
jle
ja
addl
mov
jmp
int3
jg
xchg
sub
mov
push
ret
mov
inc
rcrb
scas
mov
shlb
fcomps
lret
sahf
cmpl
mov
cmp
mov
cmp
mov
xor
jnp
mov
enter
cmp
ret
mov
xchg
or
retw
mov
aas
leave
sub
mov
ja
cmpb
jnp
push
popa
test
mov
sti
dec
xchg
dec
mov
sahf
ss
inc
xor
loopne
xchg
pop
xor
sbb
je
ja
xchg
int3
inc
decb
in
sbb
jp
pop
mov
cmp
js
shlb
cmp
fistps
mov
ret
lret
leave
adc
jge
in
mov
aaa
sarb
add
mov
jmp
movsb
fmulp
insb
sub
test
jnp
mov
in
pop
out
cmp
pushf
add
jb
jle
test
xor
or
shlb
sub
xchg
jge
in
faddp
cmp
mov
rcrb
ja,pt
popf
dec
mov
adc
mov
lods
divb
or
sbb
stos
fldenv
cld
lret
roll
out
out
cmp
push
jmp
mov
mov
out
faddl
mov
mov
js
mov
out
jae
adc
aam
loopne
sub
mov
mov
fnsave
lock
mov
adc
add
push
xchg
pop
xchg
sahf
push
pop
scas
add
jnp
sti
cmp
xor
inc
sub
adc
cmp
js
aam
les
addl
inc
fxch
mov
cmpsb
pop
test
inc
pop
adc
fs
mov
jno
xor
sub
jmp
incb
xchg
adc
lcall
stos
sarb
fildll
fadd
stos
mov
aam
loope
cmp
divl
popa
mov
aas
aad
mov
or
jl
mov
mov
adc
pop
mov
lds
add
jbe
sub
adc
adc
mov
pop
es
lods
lods
or
inc
sub
es
mov
lret
mov
pop
mov
adc
adc
cltd
out
jnp
ss
lods
fcomps
leave
mov
orl
dec
push
jp
push
lret
mov
out
sub
cmp
pop
or
adc
sbb
movl
pop
sub
cmp
aad
lret
xchg
dec
mov
call
cmp
fsubl
ljmp
push
or
sbb
enter
lcall
sahf
push
jns
out
icebp
out
sub
fildl
test
lock
hlt
es
or
adc
std
cs
mov
and
jbe
sbb
rol
push
sub
gs
mov
mov
mov
add
jmp
lret
sub
adc
les
and
dec
mov
and
das
lret
leave
mov
in
xor
jg
mov
test
mov
call
incl
sbb
or
jge
rclb
xlat
imul
addr16
sahf
shll
aam
aaa
and
cmp
lret
testl
int3
lahf
std
push
push
inc
or
mov
rclb
pushf
repnz
fisubrl
pop
fadds
aas
mov
jecxz
adc
pushf
pop
sbb
xor
and
outsb
rcrb
sbb
fucom
cmpsb
jp
push
pop
dec
mov
shrl
push
mov
pushf
mov
test
js
sahf
ljmp
repnz
cmp
xchg
repnz
fdivrp
mov
mov
popa
sbb
ret
fldt
sbb
sub
jg
cmpsb
mov
js
inc
push
movsl
lods
xlat
add
aad
insb
fcomp
adc
icebp
mov
inc
loope
stos
scas
dec
outsl
fiaddl
mov
enter
aaa
shlb
jp
cmp
fsub
fwait
push
popa
add
hlt
xchg
xor
xchg
fsts
push
inc
outsl
add
mov
fcmovne
or
scas
popa
push
mov
dec
mov
add
or
mov
imull
insb
xchg
lock
repz
xor
push
cli
and
ds
or
cs
mov
outsb
sub
or
lcall
sbb
pop
int3
out
incl
iret
lock
fnsave
fildl
das
div
stc
mov
outsl
jp
and
xor
sbb
push
sub
add
cmp
jecxz
pushf
jnp
shrl
xor
or
push
mov
add
inc
add
jp
jno
pushf
inc
xor
or
mov
jne
sbb
pop
cmpsb
jle
popf
cmc
sub
outsl
sahf
adc
or
push
pushf
mov
inc
ja
lahf
xor
sbb
or
scas
inc
and
enter
push
mov
mov
mov
or
ret
subb
sub
fs
test
jns
pop
add
lea
je
add
pop
sub
inc
adc
test
add
adc
mov
inc
cli
cmc
jecxz
pop
or
mov
jmp
movsb
jge
inc
testl
xor
or
push
mov
mov
dec
mov
sub
jnp
mov
mov
andb
or
sbb
sahf
adc
leave
jge
push
lods
jns
call
or
scas
push
add
decl
jno
ficoml
movsb
push
mov
or
insl
sub
enter
cli
clc
fistpll
and
jg
mov
cmp
adc
adc
and
push
fcmovu
fidivrs
sub
imull
rorl
mov
or
jecxz
in
mov
add
adc
mov
mov
cmp
mulb
dec
adc
movl
adc
pop
aad
std
mov
and
xor
add
out
imul
jnp
mov
xor
addb
mov
stc
shlb
movsl
clc
loop
mov
lock
dec
and
xor
addr16
scas
fstps
js
bound
roll
in
xchg
mov
je
add
imul
rolb
dec
das
roll
mov
or
or
or
icebp
test
ss
jg
push
iret
mov
loope
inc
lret
xor
sub
sub
mov
lahf
icebp
mov
adc
push
loop
mov
outsb
mov
leave
ds
mov
jnp
lahf
fstpl
hlt
outsb
or
push
adc
mov
add
dec
or
add
mov
ss
jns
add
shrl
dec
fimull
xor
roll
clc
mov
or
dec
cmp
iret
faddp
inc
mov
or
cwtl
fistps
lahf
cmp
push
orl
nop
xchg
dec
ret
inc
es
xor
fiaddl
insb
push
lret
or
ljmp
pop
xchg
xchg
or
mov
mov
xor
mov
push
ljmp
mov
mov
adc
mov
out
ss
and
push
xorl
cld
or
enter
notb
sbb
and
sub
and
cltd
shlb
test
or
or
mov
mov
mov
mov
push
mov
andl
dec
bound
fdivp
mov
cmc
sbb
sub
sub
ret
or
and
shll
pop
mov
adcb
dec
pop
jle
mov
pop
loop
testb
ja
mov
or
inc
jns
enter
sahf
aaa
cld
loop
fisubrs
enter
or
mov
lahf
sbb
add
lea
pop
dec
repnz
loopne
in
sbb
out
cli
jg
adc
push
out
xchg
jmp
lock
xorb
cmpsl
xor
int3
sbbb
mov
xchg
add
push
jecxz
push
es
lret
mov
adc
int
cmp
clc
aaa
or
inc
aas
hlt
sub
pop
or
sti
repnz
inc
mov
out
inc
jmp
xchg
jbe
mov
out
mov
fiadds
sbb
fisubl
out
clc
inc
repnz
inc
mov
loope
xor
sbb
sahf
mov
mov
idiv
jle
or
adc
bound
pop
rcrb
inc
ljmp
out
aaa
mov
jle
adc
mov
push
lods
movsb
mov
or
jle
sahf
fidivl
fwait
daa
incb
and
stos
movsl
andl
jecxz
or
dec
ja
mov
push
fldl
in
sar
mov
mov
dec
lcall
push
lock
enter
mov
cmpsb
mov
adcb
mov
mov
mov
and
mov
push
addr16
dec
mov
and
ja
rol
pushf
cli
mov
mov
lret
xchg
popf
xor
jnp
xor
loope
test
adc
dec
push
push
mov
pop
sbb
repnz
xor
and
out
mov
popf
gs
jbe
xor
mov
ja
mov
enter
dec
mov
scas
xchg
ret
dec
insb
mov
int3
js
xchg
stos
sub
mov
daa
test
lea
lods
cld
mov
or
lret
jl
adc
leave
je
popf
sti
pop
mulb
cli
subl
in
daa
ljmp
dec
jp
mov
cmpsb
jg
sub
lods
or
insb
pop
rcll
mov
rclb
lods
xchg
adc
je
icebp
movsb
adc
lret
rolb
inc
dec
mov
xor
sub
out
rcr
ret
movsb
dec
fstpt
mov
movsb
ljmp
sbb
lret
xchg
rorb
in
push
out
push
mov
loope
dec
fisubs
mov
inc
inc
inc
dec
mov
sub
rol
push
inc
jecxz
sub
icebp
insb
fldl
les
xor
jg
ret
loope
cs
repnz
jne
jne
fstp
push
jae
imul
dec
or
aad
cmp
repnz
inc
and
test
rclb
or
xchg
dec
adc
pop
fstpl
out
aad
mov
push
sarb
push
inc
xabort
or
mov
fnstsw
cmpsb
outsl
shlb
stc
jl
rorl
xor
shrl
arpl
dec
cmc
movsl
rcll
shrl
cmp
inc
pop
or
mov
mov
cmpsb
insl
sub
xlat
mov
daa
cld
jno
shlb
jns
rcrb
cld
push
out
push
dec
lods
mov
cmp
xor
cmp
int3
cs
repnz
dec
mov
adc
inc
cwtl
add
shrl
and
dec
sub
iret
lods
ja
mov
ss
mov
mov
ja
dec
js
inc
push
dec
ror
inc
std
fisubrl
out
not
inc
mov
movsb
cmpsb
repz
jp
sub
mov
push
mov
mov
mov
sbb
mov
xchg
adc
fmull
aas
aas
sub
ret
pop
repnz
xor
add
push
mov
dec
popa
cmpb
or
movsb
xor
pushw
fldt
or
sub
test
jle
insl
aas
xchg
mov
cmpsb
sbb
adc
pop
adc
mov
mov
mov
mov
shlb
leave
loopne
pop
ljmp
mov
sbbb
test
push
adc
jmp
cmpsl
push
fstps
lods
mov
or
sub
mov
pop
inc
hlt
vmwrite
sahf
sub
gs
xor
mov
ret
cltd
in
push
clc
imul
sbb
lret
jge
sbb
gs
push
enter
adc
mov
dec
mov
sahf
lahf
sub
jecxz
test
shll
push
and
lret
jmp
ljmp
cmp
les
out
push
fildl
adc
inc
mov
mov
sub
movzbl
ror
or
dec
cmp
dec
sahf
and
shlb
mov
aas
dec
and
sahf
fstpl
or
push
adc
pop
sub
mov
gs
cmpsl
and
add
repnz
ljmp
shll
add
popf
pop
lods
mov
add
pop
xchg
push
or
fadds
adc
xchg
mov
test
mov
jle
outsb
bound
sar
cmp
lahf
lret
fidivrl
dec
sbb
loop
or
pop
push
cmp
push
and
int
adc
das
dec
stos
shll
lock
subb
mov
mov
push
mov
xchg
sub
push
sub
jmp
dec
lods
lods
dec
inc
jge
icebp
fs
mov
into
lds
inc
scas
xor
mov
xchg
imul
xchg
push
mov
dec
mov
dec
or
js
push
jp
dec
aaa
decb
scas
dec
mov
cmp
mov
pop
add
lea
int
js
mov
sbb
xchg
fbstp
mov
insl
leave
sbb
mov
sbb
repz
mov
jmp
rcrl
sub
aas
push
xor
aas
clc
push
adc
in
mov
loopne
lea
repz
mov
xor
fcmove
leave
aas
push
iret
push
testb
mov
mov
jne
push
sub
out
nop
loope
clc
cwtl
mov
dec
sub
and
aaa
int3
add
mov
xor
adc
hlt
cwtl
dec
ljmp
mov
pop
int
inc
mov
or
push
or
add
aas
push
lock
jo
hlt
lds
loop
sarb
negb
fisttps
cmp
push
pop
mov
inc
jmp
idiv
idivl
mov
mov
mov
xchg
xor
lods
test
and
add
ljmp
andb
sub
fcoms
jbe
mov
push
lock
inc
or
mov
sahf
popf
sbb
bound
pop
xor
add
mov
or
mov
dec
mov
push
dec
inc
imul
pop
fisubs
mov
sarb
or
fiaddl
mov
in
out
sbb
fsts
dec
pop
jnp
lods
add
pop
jecxz
mov
mov
fisubl
dec
push
ret
mov
mov
mov
jo
scas
lret
sarb
pop
fdivrs
int3
lods
scas
cmc
inc
mov
jno
sbb
mov
cld
lods
jg
rorb
data16
and
sahf
pusha
dec
mov
icebp
xor
mov
push
cmpsl
push
into
xor
enter
sub
dec
pop
imulb
mov
jg
test
out
jl
push
ljmp
sub
std
movsl
rcl
sbb
iret
sahf
pushf
inc
cld
or
pop
pop
enter
lahf
and
popa
int
orl
add
mov
enter
loope
push
and
mov
lret
fstpl
xchg
mov
jae
inc
je
and
jle
js
lahf
lds
sbb
orb
std
aas
cs
lahf
cmpsb
cld
movsl
scas
iret
adc
aad
in
iret
inc
jecxz
mov
lcall
cs
or
pop
xchg
or
cwtl
inc
cmpsb
stos
pop
inc
dec
mov
mov
fucom
loop
notl
ret
lds
mov
and
adc
mov
adc
xchg
mov
fs
add
push
dec
stos
out
xchg
mov
mov
push
fmulp
jecxz
inc
xchg
js
adc
fstl
shr
add
ret
ret
inc
loop
icebp
xor
inc
popf
sub
inc
adc
pop
inc
pop
jne
cmp
dec
pop
xor
mov
jae
ljmp
xchg
add
pop
int3
fbld
mov
mov
xchg
dec
gs
cld
frstor
pop
push
jmp
pop
fdivrs
shr
loope
in
mov
insl
add
out
xor
push
jecxz
add
cli
inc
repnz
pop
mov
jo
dec
mov
aam
into
sub
inc
test
add
cmp
in
int3
pop
push
decb
dec
jl
and
or
ss
dec
sub
jne
dec
outsl
cmp
lret
xor
aaa
sbb
loop
xlat
movl
jecxz
xor
test
roll
int3
sahf
xchg
inc
pop
add
dec
pushf
or
dec
mov
dec
sahf
jl
jp
mov
push
pushf
std
test
sub
push
push
fidivrl
dec
jp
fidivs
inc
test
dec
dec
fadds
lret
push
inc
test
mov
xor
sbb
test
shl
cmp
icebp
scas
in
mov
cmp
inc
or
shl
inc
daa
sub
mov
mov
addl
sbb
xchg
cmp
dec
movb
mov
lods
push
sbb
lahf
popa
mov
andb
cmpsl
popf
cld
sbb
push
or
mov
call
xor
iret
test
xor
repz
jle
sbbl
mov
sbb
call
push
lret
cs
rorl
mov
push
aaa
lods
aas
sbb
mov
dec
xorb
dec
xchg
adc
js,pt
sbb
addb
test
aaa
loope
and
dec
call
dec
cli
into
test
jg
leave
mov
bsf
movsb
jnp
outsb
movsl
pop
fildll
and
das
mov
dec
mov
aam
dec
mov
fs
cmpsb
cmp
mov
sti
mov
nop
enter
inc
clc
and
fxch
cmc
or
cmpsb
fimuls
fdivs
pop
movl
mov
pandn
test
jle
lret
cmp
push
faddp
push
lods
and
out
cli
loop
insb
cli
pop
push
add
mov
std
test
ds
sub
and
and
outsb
adc
adc
adc
mov
dec
enter
sbb
xor
dec
mov
mov
aam
arpl
loopne
outsl
jmp
pop
adc
inc
out
inc
mov
and
or
sub
movsl
or
jecxz
push
adc
adc
dec
xor
xchg
pop
lcall
push
jp
or
sbb
push
sbb
fcomps
test
out
add
sbb
or
add
mov
xor
xor
dec
mov
mov
aaa
prefetcht1
mov
push
push
adc
push
cli
hlt
shlb
fdivrs
xchg
jo
pop
cmpsl
mov
rcrl
clc
outsl
jg
ret
dec
add
mov
jno
sub
insb
sub
mov
mov
inc
pop
sub
xor
xor
cmp
jo
dec
push
cmp
mov
lret
movsl
fimull
cwtl
leave
cmc
ret
push
aaa
sub
dec
jecxz
xor
shll
mov
push
pop
mov
push
xor
shl
dec
add
call
push
push
aaa
sbb
mov
int
sub
or
jle
sbb
in
mov
into
lods
cmp
int
ljmp
mov
adc
mov
jo
mov
lods
dec
dec
movsl
out
mov
push
inc
sbb
and
mov
pop
sbb
mov
push
repnz
aas
jne
add
add
ret
rorb
adc
jl
and
rclb
or
sub
sbb
mov
cli
add
sub
xor
add
jb
lea
arpl
adc
cmpsb
mov
mov
xchg
fdivs
add
jae
adc
loope
xor
out
scas
cli
aam
stc
push
cmpsb
cmpsl
push
push
pop
fsubr
inc
insb
lret
icebp
addl
aad
xchg
aam
shrl
push
sbb
xor
sbb
pop
cmpsb
and
adc
pusha
lret
pop
es
sbb
movsb
bnd
ljmp
in
mov
lret
cmc
xchg
xorl
jne
insb
inc
inc
add
fincstp
dec
icebp
push
push
pushl
mov
int
or
lds
stc
pop
add
xor
inc
xchg
lret
jg
xor
cmc
out
lcall
xor
cli
call
jmp
pop
pop
enter
jbe
sub
or
push
ds
addb
div
pop
cmp
jno
ljmp
mov
cmpb
push
aad
pop
push
jno
loop
bound
insl
out
lret
sub
or
push
mov
adc
arpl
mov
out
stos
push
sub
cltd
cmpsb
pop
out
or
push
test
sub
repnz
and
push
jle
jne
lahf
add
jge
dec
push
in
sub
repnz
rolb
or
negb
push
repnz
mov
jb
test
jg
sub
pop
dec
lcall
sbb
mov
icebp
jle
lds
xchg
pushf
pop
cmpsb
lcall
cld
shrb
dec
add
push
lahf
mov
mov
int3
ja
inc
loop
lcall
rep
xor
dec
movsl
push
scas
sti
enter
dec
mov
adc
or
icebp
cmp
fsub
fs
or
sbb
pop
sub
adc
jns
mov
fildll
das
adc
pop
dec
cmp
loop
clc
mov
cld
mov
aas
sub
push
or
add
mov
inc
fstp
stos
adc
mov
fwait
movsb
pop
enter
jle
push
inc
pop
ds
fildl
ljmp
adc
mov
inc
dec
xor
repnz
jp
stc
jne
jno
daa
jno
cmp
iret
xchg
mov
dec
iret
pop
sub
fstl
out
pop
call
mov
mov
mov
xchg
or
mul
insb
cmp
stos
inc
add
or
pandn
insb
fld
push
js
dec
cmpsb
jp
mov
jmp
fimull
cmp
mov
daa
adc
adc
ficoml
cmp
psubusb
fcoms
jnp
adc
adc
jl
mov
add
and
fstl
push
pop
add
pop
frstor
ret
nop
add
fcomip
lock
lea
in
loopne
mov
inc
out
bound
les
loopne
fisttpll
push
stc
ficompl
mov
imul
popf
mov
mov
or
iret
ret
sub
mov
ret
jb
mov
loopne
and
fwait
sub
push
shlb
sbb
clc
repnz
es
add
in
cmp
inc
xchg
mov
int
sbb
out
lcall
nop
lret
xchg
mov
mov
addr16
pop
leave
or
pop
movsl
fsts
or
adc
lcall
dec
mov
or
adc
adc
or
cmp
sub
xor
idivl
jb
sbb
loopne
push
sar
jno
aaa
adc
jg
lret
popf
outsl
inc
sub
xor
cli
inc
jp
das
add
mov
fcomps
unpcklps
mov
ds
push
sti
lret
clc
mov
jle
insl
inc
dec
xchg
cmp
ficomps
xor
mov
dec
testl
mov
sbb
sbb
popa
xchg
cbtw
sbb
jb
repnz
xchg
pop
xor
fs
into
cmp
stc
xlat
jb
roll
adc
lahf
sub
fists
icebp
js
gs
lods
ficoml
sarl
cwtl
push
mov
mov
loope
fiadds
lods
push
cmp
sbb
sbb
inc
cld
inc
div
jae
jecxz
pop
add
gs
xchg
add
test
ja
pop
lea
dec
mov
adc
ljmp
movsb
ljmp
jmp
lahf
jp
and
and
orb
cli
cmp
sti
cld
lcall
shr
imul
dec
xor
int3
pop
adc
movsb
pusha
fnstenv
es
int3
dec
imul
mov
xor
push
pop
int
push
cld
leave
fxch
cmc
jnp
scas
mov
cmp
pop
mov
out
dec
xchg
lret
notb
sar
mov
popf
roll
xchg
inc
cli
xchg
sahf
dec
ja
xchg
loope
inc
repz
inc
cmp
lods
movsb
into
mov
sub
aad
in
xchg
cmpsb
jp
mov
xor
dec
es
fs
push
daa
mov
push
jbe
lret
add
dec
in
mov
out
bound
or
dec
psubd
mov
mov
mov
jnp
sub
mov
cmpsb
push
out
or
lret
adc
xor
and
clc
ret
in
aas
out
lret
adcb
and
xor
jbe
ljmp
ljmp
inc
sarb
cmp
lock
mov
lods
in
inc
mov
mov
mov
dec
inc
pop
pop
sarb
jb
adc
push
sub
sub
sbb
adc
pop
lock
and
pop
adc
or
lds
mov
mov
push
rol
imul
out
dec
xchg
cli
sahf
pushf
xchg
push
lock
ja
push
daa
xchg
jo
jp
sub
mov
movsl
js
data16
xor
popa
push
fsubrs
add
jne
lock
mov
jmp
mov
les
call
mov
pop
and
stc
mov
loop
insb
movsl
jmp
sti
cmp
sahf
sbb
cmp
xor
inc
arpl
or
das
test
inc
pop
or
nop
movsb
das
xor
push
mov
out
mov
pop
ret
stos
push
test
sbb
add
loop
pop
mov
fs
testb
sbb
cmp
push
test
lahf
dec
pop
lds
movsb
popf
inc
testb
mov
xchg
lahf
jle
mov
xchg
xchg
mov
mov
call
sbb
jmp
push
dec
leave
xor
in
inc
lods
or
sti
adc
add
lods
lock
fistpll
pop
and
jg
mov
enter
movsb
push
aas
aas
ljmp
clc
and
ret
add
jne
or
inc
mov
sbb
cmp
dec
sub
das
add
scas
mov
mov
dec
scas
call
or
push
jnp
cmp
lret
lcall
jae
cwtl
lahf
sub
cmp
aam
fdivrs
ret
data16
lahf
xor
inc
cmpsl
pop
cmp
mov
out
inc
push
jb
int3
icebp
mov
mov
add
cs
sbb
aam
into
jge
adcl
pop
and
lret
inc
mov
popw
dec
cmovge
stc
fimuls
sub
mov
cmpsb
aaa
mov
aaa
mov
in
and
push
mov
mov
faddl
out
and
out
sahf
fwait
xchg
sbb
pop
les
add
sbb
mov
pop
cmpsb
pop
ljmp
fcompl
jae
mul
repz
fucomp
inc
aas
out
push
fs
push
rolb
mov
fcmovb
jecxz
mov
cli
cltd
shrb
or
out
or
jo
fs
or
xor
jg
jge
cli
repz
push
lds
inc
push
mov
jmp
jle
xor
mov
pop
xchg
in
lea
push
pop
xlat
inc
sub
inc
in
mov
adc
adc
je
dec
jg
mov
sbb
xor
testb
test
or
fcomps
add
lea
test
fldl
dec
call
fcoml
mov
xchg
nop
mov
sub
daa
imul
call
sbb
fcoml
jmp
mov
call
in
fnstcw
insb
inc
cli
xlat
out
push
andb
aam
ret
orb
clc
jle
pop
push
jle
or
inc
std
out
jb
pop
push
divl
bound
cmp
xchg
imul
adc
sbb
pusha
pop
add
cmp
sbb
xchg
xlat
int3
jecxz
adc
pop
push
sbb
mov
sahf
xor
mov
aas
out
or
push
aas
dec
loopne
sbb
test
dec
add
xor
dec
out
addl
mov
sbb
sub
xorl
jb
int3
sbb
sub
scas
xor
pop
sbb
iret
push
or
xchg
and
sbb
addr16
std
and
push
inc
jne
fbstp
and
pop
sbb
lret
addr16
mov
int
mov
test
mov
mov
out
int3
push
xlat
xchg
push
xchg
cmp
push
or
shrl
sub
icebp
test
inc
pushf
decl
jl
ljmp
jp
es
sahf
test
outsl
or
push
aas
test
imulb
xor
mov
fsubrs
xlat
std
decb
int3
insl
addr16
mov
pop
jae
and
mov
sub
and
das
jbe
or
and
mov
inc
push
mov
insl
mov
dec
mov
movsb
in
mov
dec
aaa
or
mov
scas
dec
cmpl
movb
aam
mov
addr16
outsb
in
addl
sub
add
push
and
addr16
and
and
jb
out
adc
es
out
test
pop
cwtl
subb
or
or
mov
fimuls
jb
cmp
subb
mov
insl
data16
in
sbb
lret
mov
jecxz
femms
jae
add
or
shll
lret
mov
jno
adc
mov
mov
mov
sub
pop
adc
jle
sahf
lock
adc
mov
dec
lcall
pop
rcrl
pop
pop
xlat
or
cmp
sub
popf
adc
inc
sub
xor
adc
je
push
xor
sahf
adc
push
mov
insl
gs
add
jmp
test
fildll
xor
std
jle
push
shl
cmp
dec
cli
ds
scas
cmp
sub
xor
ret
ds
fs
leave
inc
sbb
sarl
cmp
in
popa
addr16
aas
mov
jp
sub
fisubrs
pop
std
daa
movl
enter
aaa
loopne
sbb
or
mov
ffreep
sbb
fadds
das
lret
in
iret
sbb
dec
mov
add
lock
andb
rclb
add
into
aaa
jnp
mov
fwait
mov
jb
bound
sahf
adc
nop
pop
adc
fstl
ss
mov
fstpl
push
lret
lock
xchg
jl
push
sub
jbe
mov
ficoms
jecxz
dec
in
daa
adc
movsb
mov
cmpsb
cmpsl
das
inc
cli
cli
pop
inc
adc
daa
dec
sti
dec
adc
movsl
jmp
cmp
lods
rorl
and
mov
pop
xchg
inc
xchg
mov
pop
push
sbb
ret
je
push
add
cmp
sbb
cltd
pop
mov
orb
push
pop
fildl
pop
out
jns
mov
rcll
outsb
sti
sub
or
and
fsubrs
pushf
leave
sub
pop
ds
and
sbb
push
jecxz
fwait
insb
dec
jb
adc
sbbl
inc
inc
dec
mov
pop
xchg
and
stos
rorl
adc
and
pop
sub
dec
ja
test
cmp
into
mov
roll
mulb
push
jmp
pop
mov
inc
mov
lret
insb
sti
rclb
cmp
push
jo
in
cli
ljmp
ret
test
fidivl
inc
aas
or
leave
or
ljmp
ljmp
jae
lret
fnsetpm(287
sub
dec
aas
movsl
andl
mov
mov
out
cmpsb
mov
leave
sahf
ret
add
inc
xlat
ds
mov
pop
add
xlat
pop
push
inc
scas
jle
clc
aam
fidivrl
push
jle
push
fstps
cld
into
xchg
mov
xlat
ss
pop
fcomps
pop
in
add
or
movsl
addb
imul
mov
ret
pop
xor
inc
xchg
xor
ret
lret
daa
test
ficoms
pop
jnp
push
aaa
mov
sbb
lds
cmp
pop
sbb
pop
push
into
and
es
aas
sub
and
lods
fdivrs
push
mov
dec
adc
mov
notl
xchg
loope
enter
in
xchg
cmp
in
testl
pop
adc
or
jne
sarb
sub
xchg
stos
cmc
mov
mov
mov
add
adc
add
cmp
xchg
addr16
sbb
mov
xor
fwait
sahf
cmp
movsl
int3
popf
cmp
inc
xchg
cli
mov
xchg
dec
xor
jo
ficoml
fcoms
aas
adc
mov
mov
lods
sub
fnstsw
and
ds
push
jae
dec
in
sbb
cmp
fstpl
jnp
lret
loop
outsl
and
xor
out
jnp
addl
inc
movsb
add
xchg
jle
add
cmp
cmp
sbb
out
into
sar
mov
jbe
mov
pop
arpl
lcall
jnp
cwtl
push
call
cmp
dec
lods
push
jb
add
add
xchg
mov
arpl
in
insb
mov
mov
movsb
mov
mov
push
dec
mov
test
pop
push
xlat
ljmp
out
fdiv
enter
inc
in
xlat
push
clc
xchg
cld
dec
adc
in
and
sbb
out
movb
mov
aam
nop
add
mov
testb
mov
sbb
out
fsubrp
sbbl
sbb
cmp
add
aaa
push
pop
push
fsubrp
pop
ss
ret
sbb
cmp
sub
push
cs
and
push
sbb
and
popa
mov
add
fsubrp
dec
cmp
sbb
js
lds
dec
into
push
inc
add
ljmp
jne
cmp
push
cmp
and
scas
clc
pop
add
pop
inc
fucomp
test
int3
dec
pop
mov
push
push
jp
cmpsl
or
adc
mov
pop
or
push
enter
sahf
negb
fiadds
inc
ja
dec
xchg
loop
ja
fisttpll
rorb
in
ja
pop
gs
pslld
sahf
dec
xchg
cwtl
insb
out
sbb
or
sar
add
test
sub
push
sbb
arpl
jno
outsb
lahf
pusha
mov
fldt
repnz
idivb
sub
dec
xchg
add
mov
mov
clc
mov
pop
in
jecxz
dec
jmp
pushl
xor
adc
mov
sarl
xor
push
mov
jae
push
popf
jl
adc
popa
ljmp
adc
push
les
jb
mul
mov
mov
push
fiadds
stos
adc
dec
dec
addr16
jl
lcall
fldcw
mov
stos
push
das
or
aad
push
inc
xor
xchg
dec
ljmp
jno
adc
push
push
js
sahf
dec
jg
mov
gs
sahf
sub
dec
int3
pop
pop
or
sbb
jb
push
lret
or
dec
enter
add
mov
jl
jg
adc
andb
dec
mov
mov
es
adc
std
pop
add
sub
push
std
out
mov
or
cltd
jbe
lea
sbb
xlat
aaa
xor
cmp
scas
xchg
sbb
add
jle
mov
mov
mov
jae
loop
push
push
fcoms
inc
cmc
add
and
addr16
mov
rcrl
pop
mov
fcoml
mov
ficompl
add
sahf
push
add
or
incb
sahf
sti
cmp
pusha
xor
pop
dec
cmp
add
cmp
repnz
xor
mov
mov
jb
cltd
cld
pop
ljmp
fsubrp
movsl
mov
cli
leave
sahf
es
cmp
sub
lret
je
pop
fdivrs
dec
repnz
lcall
cmpsb
mov
aas
ficoms
dec
loop
out
push
leave
jmp
ficoms
daa
adc
aas
in
aas
ss
pop
test
icebp
fmuls
jae
push
mov
std
shlb
arpl
pop
or
lret
adcl
jp
loope
lret
push
and
dec
pop
iret
jg
je
add
jge
pop
icebp
shl
in
mov
out
aad
dec
cli
sub
mov
push
adc
aad
pop
sbb
push
jmp
popa
clc
rcrb
pop
dec
test
dec
inc
sbbl
call
fs
cwtl
adc
sahf
push
add
cmp
scas
jbe
or
push
pop
test
movsl
adc
loopne
pop
sti
aaa
xlat
xchg
xor
jecxz
pop
loopne
mov
dec
mov
sub
lea
sbb
sahf
push
add
jle
lods
and
or
dec
cli
dec
mov
adc
jp
es
jmp
add
stos
and
adc
pop
sarb
push
fisubs
mov
pop
shll
dec
call
sahf
lock
and
pushf
and
xchg
arpl
adc
rcll
push
inc
cmp
aaa
scas
adc
and
jge
lds
fbstp
inc
sub
xchg
dec
dec
xchg
adc
mov
stc
jb
les
fistps
enter
fisubrs
aas
mov
out
sub
xchg
inc
jnp
dec
inc
inc
fcmovne
aas
sar
clc
in
or
mov
or
push
out
aam
add
xchg
or
mov
ffreep
push
ret
push
ret
aad
and
push
into
fisttpll
or
mov
incl
lret
loope
push
sbbl
enter
jns
lret
sub
fadd
lods
push
sbb
stc
sti
cmp
jl
loope
pop
popa
scas
add
sub
mov
leave
dec
jno
mov
aas
repnz
add
rclb
xchg
add
pop
sbb
jl
cmpl
je
xchg
mov
sarl
popf
mov
es
idivb
mov
sub
stos
lea
sub
adc
mov
lahf
inc
inc
ja
cmc
push
or
mov
xchg
sbb
and
cmpsl
test
aas
jl
fisubrs
arpl
push
sub
into
movsl
inc
fisttps
stos
cli
sarb
ljmp
inc
cmp
rcl
out
add
mov
mov
mov
mov
fiadds
add
insl
and
cmp
mov
cmp
int
les
push
rcr
sub
xchg
jnp
mov
push
lret
movsl
enter
push
pop
lds
jnp
and
ds
xor
scas
xchg
fimuls
jp
enter
aad
jle
ja
fs
xlat
sub
addr16
dec
mov
rcr
xchg
pop
inc
stc
add
inc
or
mov
clc
mov
mov
daa
mov
or
inc
adc
ljmp
dec
pop
cmp
sbb
adc
jbe
dec
std
out
mov
outsb
add
test
mov
xchg
ljmp
rorl
xchg
ret
outsl
sbb
out
es
lcall
out
add
add
fdivr
shr
rcr
mov
mov
pop
in
cmp
mov
cmc
pop
xchg
pushf
fmull
sub
or
stc
or
dec
xchg
call
gs
sbb
shl
arpl
dec
mov
and
adc
xlat
scas
jmp
es
sahf
mov
daa
into
shl
push
iret
and
leave
jnp
test
mov
xchg
lea
adc
cli
nop
or
stos
insl
sub
lret
lret
inc
lret
push
ror
jb
les
repz
mov
push
int3
mov
adc
cmp
sahf
inc
jp
gs
outsl
cli
inc
xchg
mov
adc
imul
lock
rcrb
out
addr16
jecxz
cmc
movsb
dec
rclb
loope
sub
inc
or
or
sahf
jg
dec
dec
jne
lea
or
aas
or
or
xchg
pop
rcr
jp
gs
xchg
add
cmp
loope
aad
cmp
loopne
xchg
jecxz
mov
sti
pop
jecxz
pop
adc
inc
fcmovnbe
inc
cli
inc
iret
or
loopne
int3
cmpsl
sahf
pop
add
cmp
fnsave
lock
push
jae
in
lock
sti
rorb
lahf
push
fidivl
dec
jae
push
cmpsl
cmp
mov
mov
leave
pop
test
pop
int3
icebp
mov
test
iret
cmp
pop
xchg
neg
mov
adc
cmp
cld
inc
sub
and
cmp
sahf
dec
scas
hlt
xlat
mov
cmp
jecxz
int3
mov
pop
test
and
jle
lcall
fadd
dec
in
add
mov
push
adc
push
mov
lahf
push
leave
or
push
jge
push
out
pop
dec
icebp
xchg
or
adc
mov
xor
outsl
lods
pop
xchg
addl
clc
icebp
xchg
jmp
xor
out
push
pop
push
rcrb
adc
leave
sub
fldt
dec
lahf
mov
sbb
mov
pop
xor
mov
xchg
xlat
cmc
clc
pop
fld
push
pop
sbb
sub
out
in
and
xor
xchg
jmp
test
xor
or
mov
xor
lds
outsb
int
out
fwait
push
out
cmp
shl
popf
cs
add
fldl
enter
std
sti
imul
fstpt
inc
cli
and
add
push
jecxz
dec
movsl
pop
lock
push
loope
mov
xchg
push
adc
in
clc
mov
mov
jg
adc
mov
push
add
imul
jne
inc
stos
ja
adc
jg
sub
mov
stc
jbe
fisubs
or
sbb
out
cmp
dec
mov
aas
add
cmp
mov
mov
in
mov
mov
movsb
lret
stos
inc
lret
jo
pop
pop
add
cmpsb
test
iret
repnz
lcall
loope
mov
outsl
into
cmpsb
aas
les
mov
dec
sub
or
xchg
inc
imul
pop
mov
int
or
daa
fisttpl
adc
push
ja
jge
shl
lret
test
pop
ret
mov
pop
stos
clc
gs
jg
loopne
int3
sbb
cs
mov
lahf
fdivr
jne
dec
ret
xchg
sahf
maxps
add
or
inc
xor
mov
mov
add
dec
pop
add
xor
lods
add
pop
stc
repnz
cwtl
sahf
cmc
xadd
xor
imul
inc
or
jecxz
add
js
ljmp
leave
or
jae
fistpl
pop
rclb
dec
into
pop
pop
mov
jmp
add
rolb
or
adc
loop
rcl
icebp
cmpl
lea
dec
mov
cmp
or
ret
and
xor
push
dec
scas
out
sbb
jne
mov
sub
inc
xor
push
cmpsb
sahf
lcall
or
fnstcw
xor
out
pop
in
push
inc
jnp
arpl
je
mov
mov
jle
sub
jg
lret
xchg
push
cmp
adc
cmpsl
add
arpl
mov
lock
sahf
add
ss
inc
fcompl
adc
inc
jae
or
adc
jns
lret
jns
jo
push
inc
adc
mov
daa
pusha
jb
xor
inc
fiaddl
dec
ljmp
or
leave
and
jg
cmc
or
push
rolb
jge
scas
xchg
add
cli
fiadds
lret
das
lret
or
dec
jb
call
and
lret
mov
sbb
xorl
add
sti
fwait
and
jb
cwtl
out
sub
cmp
mov
fld
push
loop
cmp
int
repnz
push
inc
sub
loop
pop
mov
dec
sbb
cmp
lods
out
cwtl
mov
mov
imul
ljmp
hlt
mov
xchg
lret
test
xlat
fdivrp
lcall
push
xchg
stos
pop
ss
push
les
cmp
adc
fptan
shrb
ret
loop
adc
test
adc
mov
ljmp
addb
pop
fsts
add
icebp
xchg
cmp
test
adc
xchg
enter
ljmp
pushf
pop
cmp
stc
and
xchg
scas
out
add
mov
pop
pusha
inc
and
xor
je
in
fs
fstpt
ja
scas
adc
repz
sbb
movsl
inc
in
push
clc
sbb
push
inc
push
pop
int
cmp
jle
add
scas
out
sub
and
adc
outsb
jb
and
lods
incb
clc
push
fxch
lahf
add
inc
or
sahf
cmp
mov
sti
ss
jl
pop
aas
les
lret
push
cmc
sbb
fcmovb
push
aaa
scas
pop
dec
xchg
aas
mov
rorb
ljmp
fucomip
aas
sub
fsub
stc
xor
cmpsl
push
loope
add
notb
fwait
subb
fists
jb
bound
aas
or
push
cli
dec
mov
mov
enter
add
cltd
add
xor
push
in
ret
in
lock
lock
in
add
inc
push
mov
into
rcl
rclb
inc
add
inc
add
push
clc
mov
into
mov
pop
inc
fbld
int3
inc
add
roll
movsb
push
xchg
loope
sbb
jo
sbb
sub
repnz
add
dec
cwtl
leave
push
lret
dec
int3
sub
jae
nop
imul
jecxz
sbb
jnp
aam
insb
addb
jl
in
mov
jnp
pusha
test
push
xlat
js
incb
cwtl
sub
adc
sbb
xor
xlat
fiadds
cld
dec
cmc
xchg
jbe
sbb
clc
cmc
mov
pop
sub
sbb
fistpl
lds
popf
loop
ja
loop
test
xor
or
cli
mov
imul
or
into
movsl
sti
mov
and
xabort
xor
sahf
push
jle
xchg
orl
sbb
mov
es
add
dec
les
xor
jno
sti
dec
jecxz
lds
in
pop
add
xlat
pop
or
fistps
cli
out
iret
repnz
mov
loop
mov
push
cmpsl
push
aas
sub
xor
mov
sub
dec
sub
xchg
mov
fwait
neg
mov
test
jle
mov
out
outsb
jb
push
adc
addps
ja
pop
repnz
loop
cmp
loop
cmp
xor
test
lds
cmp
push
popa
mov
xchg
subb
ret
cli
mov
xor
insl
mov
xor
xchg
or
mov
inc
jle
mov
aam
xchg
mov
sub
and
xchg
sahf
push
cli
xor
neg
aas
imul
push
stos
mov
mov
movsb
cmp
lea
idivl
xor
test
sbb
and
lods
idivb
or
shlb
in
loop
jmp
xchg
sub
rorl
mov
xor
or
cld
xlat
fwait
shlb
inc
sub
lcall
add
or
andb
or
das
es
repnz
mov
jns
mov
adc
ret
icebp
loop
addl
cs
inc
mov
push
cmp
sahf
jns
cld
test
sub
aaa
js
mov
pop
jle
repz
inc
lcall
xor
or
pusha
adc
lret
or
nop
adc
mov
dec
xchg
pushf
dec
lahf
lea
mov
movl
shrl
lahf
shll
xor
inc
xchg
or
jecxz
mov
pushw
in
mov
xor
mov
fdivr
int
cmpsl
outsl
dec
add
out
or
or
or
inc
pop
mov
mov
cld
adc
fidivs
loop
rcll
iret
shlb
sbb
into
adc
inc
into
lret
mov
loopne
fadd
cld
add
sarb
inc
shl
xor
aas
aas
shlb
sub
dec
mov
dec
stos
shl
and
dec
leave
and
or
push
out
insb
cmp
inc
jmp
out
clc
out
outsb
pop
inc
jbe
and
fbstp
jecxz
and
cmp
xor
rorb
mov
sahf
out
pop
fnstsw
dec
push
aas
arpl
stos
cmpsb
mov
cwtl
sub
dec
popf
dec
fmulp
push
das
add
mov
or
movsb
cmpsb
mov
pop
mov
dec
dec
cmp
rolb
or
popf
push
mov
enter
xchg
jecxz
inc
xchg
sahf
jmp
push
enter
flds
pop
add
popf
inc
jg
lcall
adc
jbe
ret
mov
xorl
mov
jne
and
mov
imul
aam
stc
shlb
mov
cli
inc
add
push
mov
addb
and
push
out
mov
sbb
or
enter
add
pop
inc
cmp
into
enter
add
xor
insl
jo
out
jle
js
imulb
int
xlat
dec
mov
cmp
dec
imul
aam
shrd
mov
imul
sub
aam
pop
lods
add
pop
std
in
outsb
ds
push
add
or
jo
mov
mov
dec
popa
test
push
push
dec
pop
lea
or
or
lds
repnz
push
lret
push
mov
mov
je
pushl
fdivrs
or
or
lret
and
clc
adc
addr16
jecxz
fidivrs
jae
pop
dec
adc
add
mov
das
jbe
mov
push
ss
mov
daa
dec
cmp
arpl
inc
cvtpi2ps
shll
xchg
sbb
inc
push
pop
sti
shr
mov
inc
adc
pop
stc
mov
xor
and
xor
or
ret
xor
ret
mov
aas
mov
mov
pop
and
js
mov
jl
aas
sti
negl
fadds
testb
mov
jge
or
push
ja
into
sti
and
daa
and
xor
sub
mov
mov
cli
clc
bnd
fwait
add
aaa
push
push
or
pop
or
push
adc
arpl
xor
dec
jp
out
pop
or
mov
cmpsl
inc
jb
xchg
push
push
and
mov
movsb
dec
idivl
push
sub
inc
dec
push
jb
out
clc
lcall
lret
fidivrs
mov
imul
jg
mov
sub
fcoml
fwait
inc
adc
shr
push
mov
jmp
or
sbb
movsl
pop
mov
push
aas
jecxz
push
sub
fbld
inc
dec
scas
or
rorb
sub
dec
nop
pop
cmp
jge
dec
dec
sbb
clc
add
or
inc
lret
jbe
outsl
cmp
sub
out
xchg
mov
movsb
push
repz
jge
pop
cmc
leave
or
jle
movsb
lods
insl
mov
sub
adc
xor
sbbl
jne
lods
mov
mov
les
repnz
pushf
xchg
sub
mov
popl
pop
mov
pop
rcl
mov
fadd
or
pop
dec
js
pop
pop
fisubs
mov
pop
mov
insl
insb
or
std
add
jo
scas
stos
jb
jg
js
mov
ds
xor
icebp
and
push
int3
mov
mov
xchg
enter
movsb
jno
add
push
cmp
xor
mov
rcl
or
and
in
pop
or
ficomps
cltd
adc
xor
mov
adc
sub
sti
xlat
in
or
add
dec
jno
out
faddp
das
repnz
sahf
repz
push
xchg
outsl
inc
pop
pop
dec
sub
cmpsl
sbb
ss
filds
dec
bnd
xchg
int3
inc
lea
cmpsb
pop
jae
or
jae
lahf
cwtl
cwtl
daa
mov
into
enter
gs
ljmp
je
mov
and
ds
pushf
hlt
mov
adc
jg
mov
roll
add
mov
xlat
fiadds
mov
mov
sbb
and
sbb
or
push
mov
cmpsb
sbb
arpl
mov
adc
pusha
lods
push
dec
pop
or
xor
into
or
dec
out
sub
cmp
add
test
xchg
cli
data16
imul
test
ffree
mov
bound
dec
gs
dec
xchg
xchg
mov
xor
pop
stos
lods
loope
ja
arpl
out
sarb
pop
fsubrl
out
test
add
cmp
cld
gs
bnd
das
push
mov
cmp
push
js
in
roll
imul
xchg
in
loop
leave
scas
dec
loop
push
imul
jge
aad
ds
loop
je
das
inc
or
sub
xchg
int
test
rcrl
dec
leave
loop
cmp
mov
or
cmpl
in
push
dec
mov
xchg
xor
mov
cmp
ret
and
sub
cli
xchg
mov
mov
mov
in
cmp
xlat
dec
push
ss
aas
int
js
cltd
sub
call
xchg
mov
or
stos
adc
mov
aam
ficoms
pushf
or
mov
sahf
xor
inc
insb
ret
lcall
push
or
xlat
sbb
push
inc
dec
inc
cmp
push
clc
pop
inc
jp
or
verw
insl
mov
pop
stos
cmp
add
push
test
cmpsb
pop
sub
mov
cwtl
js
sub
es
jmp
out
push
mov
pusha
mov
push
sub
sbb
sub
gs
rclb
sahf
xchg
cmp
xchg
push
jns
jg
out
push
jo
in
mov
imul
jge
adc
lds
mov
push
enter
xor
aas
sbb
fucomp
pop
cld
xor
push
ss
std
mov
mov
outsb
xor
and
std
push
or
sub
cmp
pop
ljmp
xor
divb
or
andb
pop
addr16
add
xchg
and
adc
test
cmp
es
loopne
call
xchg
ja
in
sub
stos
add
cwtl
pusha
push
incb
shl
sbb
out
repz
daa
add
fidivl
add
ffree
aam
lea
sbb
cmp
pop
frstor
mov
adc
or
leave
or
xchg
rclb
loopne
push
push
xor
add
movsl
push
loopne
mov
pusha
hlt
sahf
fldcw
xlat
push
pop
shll
cmp
sahf
sub
into
jae
mov
sub
dec
sbb
mov
inc
dec
popa
ljmp
je
mov
pop
or
or
mov
sbb
dec
jecxz
push
sub
dec
or
fs
push
fldl
sbb
jmp
mov
pop
scas
pop
pop
mov
pop
sub
pop
mov
sbb
mov
sbb
or
ljmp
jae
dec
mov
repnz
je
jnp
push
mov
testb
cmp
pop
jb
pop
outsb
xchg
mov
xchg
mov
in
ss
aaa
jmp
pop
lahf
call
pop
leave
sub
adc
mov
aad
dec
cmp
ficoms
lods
into
arpl
sbb
push
and
pushl
and
or
push
dec
inc
inc
sahf
sub
jecxz
fdivl
aad
lods
xchg
xor
cmp
cmp
add
add
cmp
and
dec
fsin
push
jg
ljmp
pop
cmp
mov
jns
into
pop
mov
scas
aam
movsl
fidivs
or
cmp
mov
or
mov
push
jno
and
cli
push
sbb
xchg
loopne
fs
xor
dec
mov
int3
jle
mov
jg
lcall
mov
in
and
sbb
pushf
test
mov
or
push
or
jnp
sar
or
decl
sti
sub
jns
out
fidivrl
push
es
sbb
insb
sub
mov
jne,pn
hlt
cli
and
cli
into
jmp
or
pop
push
dec
jo
fimull
sahf
xchg
add
fmuls
lret
sbb
jle,pt
andb
add
jb
xchg
push
push
outsl
push
mov
rcrb
movsb
cmp
fwait
adc
jbe
sahf
push
mov
cmp
mov
enter
addr16
lret
mov
or
dec
mov
lret
pop
stos
aas
sti
lret
in
enter
jo
push
inc
xchg
hlt
out
adc
adc
mov
in
in
stos
jl
jg
sub
fiaddl
ljmp
sub
jbe
mov
add
not
sahf
lods
cmp
iret
or
inc
inc
adcb
scas
mov
rol
jmp
in
sub
loope
rclb
in
lahf
fstl
cli
testl
pop
xchg
sahf
pop
decl
sub
sbb
paddsb
dec
xor
imul
mov
lock
sub
cmp
dec
mov
ss
add
and
jecxz
mov
fsts
pop
fistl
pop
and
inc
push
xlat
aam
pop
nopl
pop
mov
pop
insl
xchg
fdivl
push
xor
andb
xchg
push
sahf
fistpll
xchg
xchg
adc
jge
fisttpll
pop
sbb
shll
or
stos
xchg
sub
test
setne
push
roll
jae
int
sub
fsubrs
jmp
fisubrl
jnp
jmp
pop
popf
inc
jle,pn
es
pusha
sbbb
mov
lock
add
push
in
xor
mov
xor
stos
call
lret
stos
scas
fidivl
rorb
ret
or
pop
or
inc
js
lahf
xor
sahf
in
and
xchg
fdivrl
loope
arpl
pop
add
xchg
in
add
dec
and
jns
sti
shll
cld
rorb
fdivrp
push
pushf
lret
sti
out
hlt
popa
test
test
add
sbb
icebp
mov
fisubs
lds
divl
cmp
sahf
xchg
jg
scas
sub
dec
jno
sarl
fucomi
jnp
out
fcmovnb
xlat
jl
inc
dec
into
inc
cmp
cmp
pop
pop
jge
dec
jle
incb
out
fldl
sub
fistpl
shll
jmp
jnp
inc
sub
ss
popa
fnsave
adc
mov
push
push
or
rcr
mov
mov
stc
inc
cmp
cmpsl
shl
and
aaa
es
add
inc
and
ds
sbb
lahf
aaa
repnz
ret
imul
push
shl
dec
jecxz
sub
repz
jecxz
dec
enter
add
insb
mov
sub
or
sbb
mov
lock
dec
rolb
aas
jg
sbb
movsb
mov
add
cmp
nop
mov
xchg
pushf
insb
inc
cmp
jl
pop
mov
aam
xchg
push
int
arpl
testl
adc
xchg
pandn
adc
arpl
int
cmpsl
iret
lock
cmp
mov
iret
out
fldcw
loopne
testl
adc
int
jns
jo
enter
inc
xor
xor
jge
adc
mov
divb
mov
lret
xor
and
sbb
leave
mov
outsl
test
or
fwait
ds
pop
adc
call
cmp
pusha
sbb
mov
pop
enter
mov
xor
xchg
ja
push
leave
sarb
mov
in
push
and
mov
pop
jmp
out
jb
adcb
stos
mov
sub
jae
xor
add
leave
adc
add
cmpsl
mov
jb
mov
rcrb
sub
sahf
mov
push
cmp
jb
xchg
jle
xorb
cmpsb
out
fldl
cmc
jl
scas
push
mov
add
mov
imul
push
pop
mov
push
mov
out
adc
xchg
clc
and
rcr
or
in
fcom
pusha
sub
sub
or
sbb
ret
lret
movsb
sub
xor
das
inc
or
mov
adc
cwtl
pminsw
les
insb
xchg
gs
jge
sbb
sub
in
xchg
repz
jns
mov
or
xchg
jbe
sbb
sub
scas
cmp
in
insl
add
rcrb
sub
xlat
cs
int
mov
insl
cmp
jmp
jmp
mov
add
xchg
cmp
pop
push
push
ljmp
lret
das
xor
xor
pushf
sub
pop
loopne
enter
push
std
dec
mov
stos
mov
sub
push
insb
ss
int
pop
adc
push
js
rcl
pushf
xor
stc
out
cltd
fnstenv
inc
fwait
jg
mov
popa
mov
mov
mov
fildl
mov
jae
push
imulb
or
mov
in
shl
test
test
scas
aaa
test
inc
mov
pop
mov
lds
mov
dec
push
mov
into
or
gs
push
in
adc
add
push
add
xchg
mov
or
add
pop
test
jae
incb
lcall
xchg
ret
pop
test
or
imul
test
jne
dec
rcll
fcoms
out
mov
sub
in
fcomi
sub
pusha
std
rol
add
outsl
adc
enter
imulb
adc
ret
icebp
fs
jb
aas
mov
cmp
mov
and
int3
mov
pusha
je
sub
xchg
sub
inc
or
jl
cmpsl
dec
sub
push
sti
mov
or
leave
jp
push
mov
movsb
in
xchg
push
xchg
adc
aas
je
loope
cli
loope
dec
xor
push
sbb
int3
or
push
iret
es
dec
and
sbb
mov
shrb
test
out
sahf
or
enter
dec
pop
mov
inc
fistpl
fs
scas
and
fsubr
cld
pop
inc
sbb
test
and
or
out
cmpb
push
mov
in
ljmp
sub
adc
mov
ljmp
lahf
pusha
cmpsb
sarl
loop
mov
scas
inc
xchg
pop
dec
inc
inc
sahf
cld
push
sbb
call
cmp
pop
ljmp
orb
mov
or
sub
add
test
lahf
hlt
out
lcall
ja
inc
addps
testl
sbb
inc
out
sbb
sub
dec
mov
push
and
mov
jb
ds
ja
lret
mov
jb
xor
in
jle
push
mov
pop
sbb
xor
xor
jae
fld
dec
ret
sahf
add
cmp
cltd
cld
sahf
icebp
xlat
aas
push
repnz
idivb
cld
mov
mov
in
mov
push
cs
cli
and
dec
dec
jns
adc
or
cmpsl
cmp
inc
add
in
dec
sbb
mov
ret
stc
xchg
add
aas
enter
push
pop
or
ret
pop
jl
stc
cmp
das
pop
inc
add
mov
clc
add
mov
push
push
cmpsl
lret
in
push
push
leave
or
or
mov
or
mov
or
mov
mov
add
test
sti
add
mov
push
outsl
repnz
sbb
mov
shrl
fisttpll
xlat
popa
test
sub
xor
cmp
xor
stc
das
fwait
inc
or
push
arpl
loopne
pop
xor
sub
xchg
sarb
sahf
sti
xchg
lret
push
mov
add
or
add
push
inc
lock
xor
pushf
or
pop
mov
popa
inc
or
cmc
xor
or
scas
mov
add
aad
pop
xor
sarb
rcrl
add
xchg
in
andb
and
push
adc
mov
hlt
xchg
jecxz
das
xchg
xor
xchg
js
in
pop
cmp
sub
fwait
shll
loop
pop
adc
fisubs
mov
nop
pop
pusha
xor
push
fidivl
ljmp
pop
leave
adc
mov
les
add
sarl
int
dec
popa
fcmovb
lods
fnstsw
icebp
jge
fsubrs
das
push
daa
mov
pop
adc
or
inc
filds
dec
cmpb
ret
leave
sub
js
out
or
mov
outsb
movb
fdivl
sub
stos
mov
add
loope
out
sarl
andl
scas
in
ljmp
dec
fwait
in
add
pop
mov
or
push
or
jne
mov
add
xor
mov
loop
out
fwait
stos
pop
xor
xchg
sub
sbb
xchg
aam
add
sbb
mov
and
xorb
out
dec
dec
ds
or
inc
mov
sub
pop
add
jno
add
inc
pop
sub
push
or
icebp
inc
sahf
or
enter
scas
dec
ja
flds
xor
lcall
decl
lcall
jbe
pop
or
mov
cli
adc
cmc
push
aad
lahf
hlt
pop
cmpsb
xor
or
mov
adc
jge
loopne
inc
addl
push
sahf
cmp
orl
adc
xchg
cmpsl
call
fisttpll
adc
jo
sahf
fidivl
sub
aad
push
std
fadd
test
or
aas
or
sub
mov
sti
dec
mov
int3
adc
xorb
test
jp
push
mov
loopne
push
push
clc
xor
sbb
sub
add
dec
cmpsl
std
push
mov
es
sti
mov
shll
std
xchg
fnstsw
jno
xchg
imul
pop
aaa
cmpb
xchg
cli
add
dec
inc
les
cmp
stos
mov
xlat
out
mov
push
gs
lds
adc
jge
xchg
std
or
popa
add
adc
cmp
rcl
jecxz
pop
xor
pusha
cwtl
sbb
shlb
xchg
mov
xor
fisubrl
data16
lret
ja
push
or
and
mov
std
js
out
fdiv
pop
cmp
sub
shrb
sbb
nop
adc
xchg
cwtl
clc
add
cld
or
clc
push
cmpsb
sahf
mov
push
mov
lret
das
adc
sbb
push
mov
adc
xor
mov
sub
pop
sbb
adc
dec
ss
or
mov
push
icebp
repnz
lods
repz
cmp
mov
mov
push
sub
or
cs
das
lcall
or
sbb
testb
sub
js
jle
shlb
sbb
les
enter
cmpsb
dec
mov
jns
xchg
pop
mov
and
push
test
lock
xchg
or
in
mov
sub
pop
xchg
fnstsw
mov
or
loope
sbb
scas
shlb
push
out
repnz
call
pop
testb
adc
pop
aad
loop
mov
scas
sbb
and
mov
and
xchg
add
dec
lods
mov
std
cmp
icebp
xchg
adc
repz
mov
adc
cli
mov
arpl
mov
imul
inc
repnz
sub
mov
adc
add
inc
out
add
jp
sub
mov
adc
mov
scas
push
pushf
jecxz
xor
xor
leave
pusha
in
xlat
fdivl
ss
rorb
pop
punpcklbw
movsb
movzbl
dec
pop
inc
repnz
pop
in
or
fwait
xchg
push
aas
cld
mov
lcall
into
imul
decb
clc
jns
std
stc
and
rol
adc
stc
sbb
or
inc
gs
fiadds
lret
test
fucomp
pop
filds
jno
scas
or
lods
ficomps
in
sahf
add
inc
je
mov
jb
inc
adc
sub
dec
sub
mov
adc
xchg
xchg
sahf
and
jg
add
fmull
sti
mov
sbb
ss
scas
xlat
fld
and
cmp
test
enter
xchg
sahf
mov
loop
repz
or
adc
call
dec
leave
cmc
xlat
das
and
std
jne
pop
jp
add
enter
out
jg
shr
and
ret
adc
bound
lret
sub
mov
sub
xor
aam
mov
addl
mov
rcrb
es
aas
xchg
adc
mov
test
lods
testb
mov
xor
pop
cmpsb
xor
pop
aas
lods
pop
repnz
ss
jge
or
inc
push
add
fcomp
xor
xor
testb
xor
pop
cmc
cmp
xchg
add
test
sbb
mov
jbe
dec
popf
mov
mov
jmp
aas
cmp
jae
dec
jg
ret
insb
idivb
pop
cmc
aam
mov
cmc
shll
fstpl
mov
or
cmc
or
xor
lods
xchg
repz
fiaddl
ss
mov
loope
push
fcomp
popf
out
inc
or
mov
dec
testl
int
or
mov
sahf
aaa
insb
mov
inc
and
sti
into
daa
xlat
icebp
mov
lods
fldt
xchg
jp
fcoml
adc
sbb
pusha
mulb
mov
sub
mov
dec
test
mov
push
jle
rcrl
push
mov
jae
stos
mov
imulb
jne
inc
repz
dec
mov
testb
jne
mull
icebp
pop
sub
xor
sbb
lret
je
pushf
xor
stc
sub
sti
xor
ret
cmp
sub
jle
or
pop
popa
xchg
fimull
in
enter
mov
out
or
std
add
add
cmp
push
mov
adc
call
push
fimull
push
xor
adcl
push
sub
cwtl
test
jns
dec
ficoms
mov
js
push
push
lcall
xor
adc
xor
ljmp
outsb
push
mov
repnz
out
sub
cli
clc
mov
sub
jl
js
mov
mov
pushl
in
into
sub
or
xor
jae
js
sbb
arpl
mov
stc
lcall
push
shll
das
cld
fstps
mov
add
dec
pushf
in
negl
sahf
leave
xchg
jecxz
xchg
inc
jns
push
sbb
pop
xchg
into
xchg
xchg
lds
jl
sti
or
mov
loopne
cmp
or
jp
or
das
or
xlat
lret
shll
mov
stos
int3
or
hlt
add
in
enter
rcr
outsb
mov
mov
xor
pop
mov
fsubrl
or
sahf
scas
sub
xor
imul
sbb
mov
aam
push
dec
fimull
cs
adc
ljmp
divb
out
or
out
lret
xlat
sub
mov
xchg
sub
push
adc
int3
xor
sub
scas
stc
rcr
in
leave
ret
lret
jle
in
into
call
cmp
sbb
mov
sbb
or
shr
cmp
mov
bound
in
mov
enter
cmp
movsb
push
sub
out
fnstsw
pop
inc
outsl
sub
pop
imul
mov
add
out
lret
in
clc
repnz
rclb
adc
scas
pop
mov
data16
xorl
jecxz
and
imul
mov
lods
lret
push
xlat
sbb
loope
cmp
sub
or
les
js
cmp
out
inc
jne
mov
dec
push
and
xchg
sbb
sti
shlb
jbe
pop
mov
clc
cwtl
push
es
lret
out
loop
push
xlat
out
inc
push
test
scas
mov
in
and
adc
jmp
imul
scas
cmc
fdivrl
hlt
dec
push
gs
mov
test
cmc
stc
stc
sub
mov
mov
fmuls
jne
mov
dec
push
xchg
or
add
dec
xor
lods
into
or
outsb
add
add
push
and
into
rcr
inc
pop
sahf
pop
inc
cli
ret
scas
pushl
inc
xor
jmp
dec
loopne
dec
add
sbb
mov
inc
sahf
cmp
push
push
clc
out
stc
adc
enter
incb
sbb
aas
out
fidivl
data16
aas
decb
or
aas
sub
sub
mov
out
pop
sti
rorl
fistpll
sbb
jno
or
add
pop
push
loope
cmp
rclb
and
mov
lods
mov
xorl
out
xchg
sarl
jns
loopne
sub
adc
add
orl
adc
jg
les
add
sbb
sub
and
jno
enter
ljmp
lea
cmp
or
xor
icebp
add
outsb
push
cmpl
cmpsb
ljmp
and
rorb
xor
leave
sub
cmp
mulb
repnz
imul
xor
lahf
in
mov
popf
test
mov
aaa
push
inc
cmp
ja
adc
and
push
loopne
inc
xchg
call
or
into
cmpsb
adc
adc
ss
cmpsl
arpl
rcl
lea
loope
jne
aaa
rorl
pop
dec
jno
mov
and
xchg
mov
push
fwait
shlb
leave
je
pop
jle
sahf
adc
enter
mov
ljmp
ret
add
lret
mov
adc
or
push
dec
fistps
mov
xchg
in
mov
or
push
mov
sub
inc
mov
inc
pusha
cltd
or
xchg
mov
imul
test
add
loope
stos
dec
mov
lcall
sub
xor
dec
lock
inc
sub
lahf
mov
bound
pop
pop
adc
shl
or
or
xor
inc
adc
outsl
jns
pop
cmp
jb
xor
dec
ficomps
sub
cmp
mov
sub
icebp
cmpsl
sub
imul
xorl
fcoml
lods
in
cmpsl
mov
loop
ficoms
adc
rcrb
clc
mov
out
jmp
mov
fldz
or
jp
and
scas
rcr
repnz
xlat
scas
sbb
and
scas
fiadds
pop
push
lods
adc
jge
jae
mov
inc
inc
add
comisd
les
mov
xorb
movb
mov
test
xchg
rcll
push
push
mov
xlat
mov
cmpsb
pusha
sbb
mov
cld
jb
mov
push
js
enter
lds
aam
mov
cli
mov
out
pusha
cmp
cwtl
loope
jbe
test
sbb
push
xchg
push
mov
add
or
fadds
sti
or
rolb
testl
jb
cmc
aas
andb
pop
xchg
or
or
add
stc
inc
pop
or
inc
pop
ljmp
fimull
or
insl
aam
jb
pop
dec
xlat
sar
in
divb
mov
jns
add
jge
fnsave
aas
in
loopne
out
ja
jns
or
mov
push
out
nop
adc
add
xchg
popf
outsb
arpl
pop
movsb
or
adc
xchg
stos
fiaddl
out
mov
xchg
xchg
out
cld
shrb
pop
ffree
mov
je
repnz
int
ja
pop
daa
push
cli
into
mov
popa
cwtl
cwtl
loope
int3
in
insb
push
cmp
mov
pop
push
add
inc
sahf
mov
incl
filds
div
jmp
mov
xchg
ficompl
fisttpl
mov
test
xor
aam
push
xchg
or
sti
inc
cmc
and
sub
test
inc
or
cmp
loop
and
mov
fimuls
or
xchg
add
xchg
js
test
jmp
cmp
stc
or
xchg
lock
xchg
xchg
push
mov
movsb
pop
cmp
sbb
jno
dec
js
insb
loope
xchg
fdivrl
clc
fcmovb
xor
pushf
pop
mov
lea
push
and
lret
mov
clc
pop
cli
add
ret
xchg
xchg
sbb
or
lea
movsl
jecxz
lret
push
sbb
cld
sub
jbe
add
mov
push
or
lcall
roll
fsubrs
mov
rclb
mov
sub
adc
subl
adc
jle
scas
fstpt
cmp
xorl
fdivs
mov
inc
xor
daa
xor
es
lea
and
mov
push
mov
fwait
lahf
sti
jp
or
movsl
scas
aad
cmc
add
ret
dec
int3
mov
or
sbb
mov
dec
insl
dec
xor
and
jne
adc
xlat
loope
les
push
mov
pop
pop
pusha
ljmp
je
push
loop
fistps
jnp
std
sub
and
call
fdivrs
addl
xchg
nop
or
cmp
fidivs
jbe
xor
pop
sub
or
loopne
mov
jne
mov
lret
sub
push
xor
fcmovb
je
cmp
adc
jnp
cld
sahf
das
cltd
cwtl
mov
inc
xchg
pop
ljmp
cmpl
inc
ds
daa
jmp
or
adc
xor
adc
sub
inc
stc
pop
adc
fsubrs
dec
mov
jmp
clc
push
inc
sub
fildll
or
scas
add
jne
bound
jmp
add
cli
fdivs
pop
cmc
in
push
loope
xchg
ficomps
and
and
rol
scas
xlat
jle
sbb
popf
add
jne
leave
or
cmp
data16
aam
add
pop
mov
das
sbb
ret
enter
xchg
aad
sbb
stc
mov
out
pop
stos
dec
fwait
or
push
fcmovb
or
mov
popa
dec
jo
inc
pop
sbb
imul
sti
rcrb
jl
push
je
je
shlb
mov
and
leave
jne
aam
push
sbb
js
movl
push
aam
sbb
ret
icebp
in
xchg
inc
cmp
sub
sub
mov
or
mov
adc
fdivs
adc
and
xor
or
adc
push
xor
xchg
lcall
fadds
loopne
mov
stos
icebp
mov
movsb
into
lret
sub
sub
or
pushf
cli
xor
iret
and
loope
xor
push
popa
popf
fsubs
lods
roll
fwait
lahf
lret
ret
ret
add
out
fnstsw
xor
je
clc
jns
sahf
jo
add
cltd
dec
cmp
and
mov
lret
popa
pushl
mov
xor
cltd
lcall
push
loopne
jp
jmp
in
aas
xlat
mov
lahf
xlat
ret
lret
out
or
cmp
mov
loopne
pop
push
pop
dec
fimuls
sub
or
repz
xchg
into
jae
out
int3
or
dec
nop
push
push
dec
xchg
xchg
pop
xchg
xchg
fistl
adc
xchg
lret
notl
clc
lret
insl
out
mov
clc
cld
jns
xchg
jb
fisubrs
out
mov
roll
fcmovb
inc
inc
pop
adc
iret
cmp
nopl
clc
sub
push
xor
fs
push
inc
mov
aaa
cmp
mov
jle
lret
dec
sub
shl
sub
cmp
aas
es
loope
lcall
cmpsb
push
jno
mov
movsl
pop
mov
popf
mov
sahf
dec
mov
xchg
push
and
cmp
push
andb
movl
xchg
test
adc
jo
iret
shr
add
xorl
sahf
inc
fwait
test
fcoms
enter
fcmovnbe
sbb
ret
add
sarb
push
mov
inc
and
inc
inc
xor
imul
pop
adc
cli
test
fmulp
jne
cmp
outsb
cmp
or
bound
fisubl
push
sub
cmc
xchg
pushf
fwait
cli
cmpl
cmp
or
mov
sahf
ret
or
in
lods
into
bound
sahf
xchg
into
jle
dec
mov
dec
shlb
je
mov
jmp
loop
dec
clc
iret
outsb
loop
pop
xor
decb
cmovb
insb
cmpsb
xchg
cmp
push
mov
loope
pop
ja
pop
in
mov
push
rorb
dec
jne
and
scas
inc
push
add
mov
mov
stos
pop
sahf
xor
jle
xor
idivl
mov
or
fiadds
sahf
pop
loope
lret
notl
lock
pop
push
xchg
stc
mov
rcrb
xlat
shll
ret
and
ret
xchg
imul
lcall
push
cwtl
and
pop
lret
call
int3
icebp
pop
in
jl
push
fstpt
and
or
out
in
fldt
rorl
inc
mov
or
shr
lods
push
fstpt
repnz
jae
ret
cmp
xchg
enter
dec
lock
mov
dec
es
sub
out
icebp
pushf
cmp
int
adc
call
lret
into
mov
jp
int3
fisubl
lds
out
rcr
ljmp
out
add
test
test
loop
add
xchg
filds
mov
xchg
cwtl
leave
outsl
adc
aas
pop
dec
xor
outsl
sbb
dec
dec
xor
pop
lret
push
dec
data16
inc
icebp
js
test
inc
push
mov
stos
int3
int
stc
sub
insb
repz
cmpl
aam
mov
jle
inc
mov
mov
nop
push
inc
cltd
cwtl
or
cmpsb
cmp
mov
push
push
fisubrs
pushl
je
jle
inc
inc
into
pop
in
stc
xchg
jnp
push
push
test
jno
movb
sarb
xor
stos
test
cwtl
sahf
and
in
add
lock
push
mov
adc
pop
fldenv
and
xchg
and
mov
shlb
or
movsl
dec
sub
std
push
dec
movsb
sbb
fadds
mov
xorb
int
repz
test
mov
inc
inc
inc
mov
and
adc
push
nop
jp
xlat
mov
shl
js
jbe
popa
add
scas
mov
aam
lcall
fldenv
jp
fstps
push
lods
shl
jl
xchg
mov
cmp
sarl
push
lcall
ror
shl
and
gs
popa
lea
cmp
sbb
shll
sarl
clc
cld
dec
out
icebp
popa
jge
outsl
lret
out
or
ja
inc
pop
push
inc
add
add
das
mov
sub
adc
in
test
mov
adc
jp
fadd
dec
mov
int
or
mov
xor
mov
pusha
loopne
jp
mov
xchg
mov
mov
les
pop
negl
sbb
test
mov
pop
and
push
or
movsb
xorb
pop
lods
ds
push
out
jns
mov
inc
repnz
mov
dec
cli
pusha
aas
loope
ljmp
lds
cwtl
mov
push
fs
push
sbb
pop
fmuls
ret
sahf
inc
ja
popa
ljmp
xchg
mov
push
call
jne
imul
insl
mov
cmpb
inc
push
arpl
cmp
call
ljmp
adc
adc
pop
les
cmpsb
sub
sub
push
fadd
lret
popf
jb
lret
cmp
imul
jne
xlat
sub
repnz
ljmp
push
in
or
add
sbb
fstpt
xor
movsb
divb
lret
pop
outsl
mov
add
fsubrs
pop
lret
divl
int
sub
mov
sarb
xchg
mov
dec
adc
cmp
mov
ret
pop
neg
push
push
mov
test
ljmp
push
aas
dec
add
ss
push
sahf
xchg
jl
inc
add
jle
pop
sub
call
mov
push
adc
cltd
test
out
call
inc
addr16
push
cmc
mov
mov
add
imul
lret
rclb
mov
lret
jo
lea
add
jle
mov
addb
lcall
cmpsl
enter
sahf
mov
popa
mov
xchg
xlat
std
mov
stc
mov
xchg
bswap
lret
xor
out
xchg
loop
mov
clc
jl
sarb
ficoml
ss
or
inc
cmp
bound
into
ds
flds
mov
xor
into
addb
mov
cmp
enter
or
aas
flds
dec
ds
clc
push
test
push
loope
fwait
cmpb
out
mov
fldenv
fnstcw
jp
fsubr
loope
dec
fs
arpl
mov
sahf
into
push
pop
sbb
xor
inc
pop
adc
sbb
pop
add
mov
stos
xchg
jns
leave
or
mov
push
mov
jne
jb
push
imul
icebp
sahf
sub
fidivs
jmp
out
stc
mov
xchg
stos
inc
clc
scas
mov
cmp
dec
scas
or
loopne
inc
mov
push
fmuls
and
adc
movsb
fstpt
jne
insb
pop
cs
aaa
add
clc
push
movsb
xchg
ss
in
or
jae
mov
scas
mov
int3
cld
or
das
fidivrl
jecxz
mov
pop
jne
jnp
inc
pop
out
icebp
mov
jae
aas
shlb
mov
fdivr
adc
mov
cli
fistpl
pop
sub
jl
xorl
addl
out
enter
add
iret
xor
inc
inc
xchg
cmpsl
pop
rcll
mov
cmpsb
sbb
lea
and
or
stc
shrl
outsb
stc
mov
into
pminsw
mov
inc
push
sbb
scas
dec
pushf
adc
mov
enter
adc
pusha
cmp
fmulp
inc
cld
mov
jb
xorb
fisttpll
xchg
push
fldl
dec
cmp
lret
jnp
mov
xchg
nop
and
pop
jp
in
mov
add
xchg
add
jecxz
inc
int3
pop
adc
cmpsb
jg
jnp
lahf
lret
orb
scas
xor
mov
sbbb
mov
mov
scas
sbb
cmp
pop
xchg
push
xchg
sbb
mov
jns
aam
cmp
sbb
push
sahf
dec
mov
ljmp
fyl2x
test
fistpll
mov
nop
mov
push
pop
pop
add
stos
mov
addb
cli
mov
das
cmp
dec
adc
stc
push
cld
pusha
enter
popa
hlt
xor
ja
push
jl
or
gs
sub
out
imul
xor
pop
push
sti
test
push
lret
rolb
mov
sti
mov
cltd
test
neg
push
stc
cltd
in
or
xor
jecxz
pcmpgtb
roll
mov
fsubs
mov
clc
mov
sub
jbe
popa
inc
add
or
sahf
jns
loopne
lret
gs
mov
fs
les
pop
cld
xchg
lea
fwait
sbb
loop
popf
mov
or
shr
mov
aaa
lcall
testb
and
mov
mov
in
lock
std
mov
inc
enter
cmp
fcomp
cli
mov
int3
mov
ljmp
push
or
sbb
les
sbb
pop
sahf
or
add
jle
dec
xlat
dec
mov
js
lahf
jge
dec
scas
repnz
cmp
xlat
or
mov
in
scas
inc
lock
add
inc
jo
jle
cli
cmp
test
sar
rcl
test
push
cmp
data16
jmp
pop
xchg
inc
pop
leave
lahf
movsl
imul
cwtl
sub
or
ss
scas
cmpsb
int
ljmp
into
or
gs
mov
scas
xor
mov
movl
repnz
enter
mov
inc
ljmp
inc
fcmovne
mov
push
lods
cmp
xchg
movsl
jnp
scas
in
xor
stc
in
jp
jb
mov
lahf
jbe
cmpsb
cli
xlat
sbb
jg
jbe
push
gs
scas
rcrb
mov
test
or
fs
scas
push
cli
dec
mov
es
cli
std
cs
mov
shlb
mov
jl
and
xchg
das
jb
sahf
sbb
shlb
fildll
cmp
mov
mov
pop
lret
jae
xor
push
jecxz
adc
and
in
call
adcl
clc
mov
dec
sbb
iret
lods
adc
sarl
stos
ja
mov
cmp
out
out
ret
adc
outsb
lret
lcall
mov
insb
dec
sti
xor
fdivrs
cli
cmp
jg
out
fbld
sahf
adc
insb
dec
cmp
push
dec
ds
mov
cmp
jmp
mov
mov
insl
inc
sbb
or
mov
xor
out
fisubrs
dec
mov
mov
or
faddl
xchg
in
js
test
addl
scas
cmpsb
shrl
sbb
idiv
fcomi
out
pop
adc
dec
sti
lret
xlat
je
or
pop
jle
test
adc
xor
ja
mov
lret
and
pop
in
inc
adc
push
sub
and
jge
mov
ret
inc
pop
scas
outsl
xchg
or
cmpsl
xchg
xchg
xchg
and
out
scas
inc
xchg
mov
sub
xlat
jns
cli
adc
cmp
push
mov
lods
scas
mov
xor
pushf
out
cli
jns
xchg
adc
mov
js
cld
cmp
ret
imul
sahf
test
mov
mov
cli
mov
inc
mov
jl
in
mov
and
fnsave
stos
dec
adc
cmpsl
mov
or
xchg
leave
int3
jns
cmpsl
ljmp
sbb
cmp
jno
shrl
jo
fildl
outsb
outsl
push
push
push
lods
data16
inc
std
jae
adc
jge
push
xor
mov
jno
xor
cld
sub
or
test
in
mov
shrl
lods
pusha
pop
sub
or
add
push
dec
roll
dec
dec
xchg
leave
mov
aam
fdivrs
mov
push
cmp
mov
pop
dec
mov
loop
fwait
test
pop
sub
lret
ret
or
inc
jecxz
pop
push
xor
loop
decb
in
gs
stc
xor
sbb
lret
cmp
xor
mov
push
jecxz
movd
aad
adc
shlb
in
jecxz
xor
add
sub
lock
dec
fsts
lods
jge
repz
pop
push
mov
ljmp
push
inc
inc
outsl
out
test
mov
movsl
test
dec
aas
jns
pop
sbb
shrb
pop
add
fs
das
mov
in
push
arpl
push
jl
sub
rclb
jle
lds
call
fdivl
sbb
xor
pushf
arpl
xchg
push
mov
and
xor
adc
imul
sub
je
pop
daa
dec
xchg
lods
aas
xchg
or
cmp
out
and
xchg
mov
fcomps
xchg
add
add
mov
mov
jbe
sti
inc
push
pop
incb
sbb
scas
pop
push
push
mulb
add
jns
outsl
lahf
push
push
js
fiadds
int3
sti
lds
push
jecxz
or
stc
add
fldl
stos
xor
jae
push
in
gs
sub
ljmp
movsl
imul
out
or
in
sub
add
cwtl
dec
fidivs
sub
mov
nopl
loop
out
jmp
dec
jl
dec
xor
adc
fdivrl
fcmovne
push
sub
lock
add
aaa
xchg
jns
rorb
jbe
xchg
sub
pop
test
adc
in
in
cs
pusha
xor
jg,pt
in
xor
adc
stos
mov
lods
sub
aad
stos
fstps
das
dec
pop
fcomps
push
sub
imul
xor
cmp
push
pop
push
cmp
mov
sbb
cli
sahf
stc
fistpll
ja
mov
ret
leave
fisttps
int
sub
je
es
repz
movsb
cvtps2pd
cli
outsl
mov
sub
mov
js
stos
mov
sub
inc
rcrb
in
push
xchg
lss
pop
and
repnz
sbbb
dec
sbb
or
bound
sahf
jge
mov
test
in
scas
mov
or
scas
sub
int3
rcll
push
fmuls
in
in
mov
movsl
and
mov
jno
pop
test
push
scas
jb
add
fdivs
out
xor
cmp
jl
jecxz
repnz
std
test
adc
pop
sub
bound
outsl
lea
sub
imul
mov
mov
test
mov
mulb
inc
jnp
jne
xchg
dec
and
int3
sbb
cmp
push
mov
pushf
sahf
jo
mov
adc
and
push
je
adc
adc
jmp
popa
and
pop
push
jae
inc
fistpl
cmc
or
push
or
je
out
xor
jbe
out
inc
ljmp
inc
lahf
icebp
scas
inc
mov
mov
clc
rcrl
pop
xchg
and
vmovq
jecxz
adc
out
movsl
popf
inc
jecxz
xor
xchg
mov
sahf
aas
jg
xor
xchg
fwait
inc
push
je
push
jp
mov
sti
pop
lahf
int3
mov
pop
sbb
outsb
push
inc
and
sub
mov
mov
ja
cmpsl
mov
mov
add
adc
rol
jmp
or
or
mov
xlat
ja
rolb
cmp
pop
cli
or
inc
decb
in
pcmpeqd
or
add
fisubrl
in
add
jne
adc
adc
add
pop
lret
pop
mov
jo
jns
icebp
cmc
in
leave
sub
insb
jmp
and
add
xor
push
cmp
cmpsl
aaa
shlb
xchg
cwtl
stc
add
xor
adc
xchg
xor
cmp
ds
inc
sti
jmp
rorb
mov
inc
mov
int
sub
das
mov
pushf
pop
mov
lcall
daa
jecxz
enter
mov
jmp
mov
cmpsl
in
mov
xchg
xlat
outsb
mov
stos
mov
into
cmp
add
or
mov
xchg
out
jle
mov
sbb
aas
loope
scas
je
leave
add
icebp
popa
mov
adc
push
push
into
mov
aas
arpl
clc
sbb
int
jo
hlt
sub
cmp
lods
pushf
mov
std
movsb
sarb
aas
sti
test
lret
mov
and
loope
int3
cli
clc
pop
cmp
jmp
movsb
dec
jg
scas
sbb
cmp
or
sahf
add
movsb
faddl
sub
inc
mov
sbb
push
addr16
sahf
loope
insl
mov
mov
jp
bound
inc
xchg
push
pop
sahf
cmpb
push
or
pop
sbb
mov
push
or
cld
and
outsb
xlat
xchg
bound
cmpb
mov
std
mov
mov
out
pop
pushf
cmp
rolb
repnz
xchg
sahf
and
push
inc
jo
loopne
scas
cmp
mov
pushf
out
mov
or
test
idivb
mov
mov
push
and
mov
mov
mov
sahf
jnp,pt
clc
xor
mov
cmp
popa
in
outsb
int3
mov
mov
or
sub
add
dec
cmp
test
or
shlb
pop
mov
xor
inc
adc
add
and
or
aaa
arpl
lods
mov
out
not
aas
fcmovbe
sub
or
mov
or
sub
or
mov
push
sub
icebp
xchg
scas
or
add
pop
add
jne
adc
sub
jb
mov
adc
adc
loop
inc
or
daa
dec
filds
push
push
scas
or
inc
fcompl
cmp
push
mov
or
inc
cmp
lods
pop
inc
es
cli
lcall
inc
cld
js
pop
loope
mov
les
loop
push
mov
enter
mov
std
pop
fidivrl
shlb
shlb
out
sbb
xlat
movsl
mov
mov
jmp
rol
leave
mov
insl
push
dec
push
cs
sarb
push
mov
repnz
inc
sub
daa
rclb
outsb
pop
or
sub
mov
lods
dec
mov
lret
xor
pushf
movb
sahf
test
mov
add
pop
push
cli
jle
call
addr16
cli
push
push
js
scas
xchg
gs
push
fsubl
inc
arpl
pop
shll
iret
repnz
out
addr16
or
popa
jae
push
dec
sbb
inc
dec
mov
pushf
mov
pushf
fwait
lds
mov
push
insl
out
shl
sub
sarl
push
push
fwait
stc
jbe
repnz
movsb
cmp
xchg
data16
jg
push
xchg
push
outsb
pop
push
dec
pop
cmp
ret
daa
ss
scas
push
imul
cmp
xchg
mov
sbb
cmp
mov
dec
js
sahf
add
inc
lcall
xchg
jmp
lds
stc
jnp
sbb
mov
push
jle
repnz
ret
jp
jne
dec
sar
cwtl
cmp
int
les
addr16
push
subl
pop
push
fwait
int
push
std
js
mov
inc
jo
mov
pop
jbe
push
es
leave
and
xlat
repnz
push
arpl
push
fnsave
adc
scas
fsubr
or
push
lcall
cmp
jb
ret
stos
bound
push
ret
ficomps
sub
notl
push
in
cmp
cmp
iret
shlb
sub
ds
mov
imul
mov
jbe
cmp
and
cmp
in
inc
add
cmc
mov
mov
mov
add
mov
sub
imul
sub
jp
lcall
xor
into
out
inc
cmp
adc
add
dec
dec
mov
pusha
test
mov
idivb
jnp
js
inc
iret
out
int
inc
repnz
and
push
loop
ds
negl
cmp
pop
mov
into
pop
xchg
ret
mov
jg
cltd
or
out
push
shl
imul
or
test
pop
jp
cltd
loope
rolb
pusha
insb
pop
insl
inc
into
pop
test
pop
pushf
and
rolb
fldenv
push
inc
movsb
lret
pop
pop
sbb
jmp
mov
rep
fdivs
add
sub
add
or
push
mov
pop
or
movsb
add
aas
push
clc
sub
aaa
pop
pushf
sbb
loop
stc
out
cmp
cld
xchg
fadds
xchg
push
push
sbb
gs
jae
test
cmp
jbe
xchg
dec
xchg
inc
push
or
lea
adc
jmp
fidivrs
lret
pop
or
mov
in
inc
pop
cmp
sub
dec
xchg
jecxz
pop
inc
dec
inc
test
pop
and
scas
jl
mov
inc
dec
faddl
aad
add
scas
cwtl
jle
add
imul
and
adc
fmulp
inc
or
and
xchg
sti
and
aas
mov
push
cwtl
or
gs
mov
icebp
fdivr
idivb
mov
fimuls
imul
cltd
outsl
es
pushf
testl
push
lahf
cmpsb
mov
sub
int3
xlat
arpl
mov
xchg
xchg
arpl
pop
mov
in
mov
fstpl
jmp
pop
stos
int3
mov
push
xor
repnz
add
adc
shll
or
mov
sub
jecxz
and
insb
aam
test
mov
ljmp
fidivrl
sbbb
or
adc
js
xchg
add
adc
hlt
ljmp
pop
hlt
jecxz
xor
hlt
leave
std
push
lods
pop
repz
cmp
cwtl
xchg
add
add
sahf
cli
push
or
or
aas
sub
mov
add
pop
pop
cmp
xchg
dec
dec
jo
mov
arpl
sub
cmp
lods
dec
aas
dec
gs
jecxz
xchg
inc
pop
ret
xlat
imul
push
pop
sarb
ds
push
gs
out
lahf
outsl
mov
rclb
xor
inc
dec
mov
and
sub
xor
inc
cmpsl
xor
adc
sbb
fdivrs
inc
sbb
sti
je
mov
push
add
pop
mov
fdivrs
dec
xor
icebp
lret
jo
xor
rcrl
lcall
jnp
lock
push
add
dec
push
fwait
arpl
sbb
gs
jnp
inc
push
pusha
fdivrs
jb
mov
jge
test
add
push
jmp
ss
rorl
mov
mov
push
aas
mov
push
push
aam
pop
cltd
sahf
jecxz
jmp
push
cs
add
push
push
mov
stos
sti
xor
cld
enter
ficoms
jno
lods
jle
es
int
aam
cmp
sahf
and
orl
or
jp
and
pop
adc
xor
and
sbb
call
push
std
dec
scas
sbb
pop
into
ljmp
sbb
jle
sbb
inc
pop
inc
int
fidivs
pop
adc
inc
das
out
adc
inc
clc
inc
fdivrs
inc
xlat
arpl
mov
stos
and
das
ds
or
inc
or
cmove
push
int
imul
in
or
inc
cmp
mov
dec
push
sbbb
jne
and
lds
jbe
mov
or
push
mov
push
cmp
or
cs
push
int3
pop
jbe
out
mov
stc
add
in
mov
mov
push
sbb
pop
push
sar
lds
test
push
dec
jb
orb
adc
cmp
push
push
sub
jno
sar
jecxz
sub
ds
or
std
mov
jb
into
ja
xor
ljmp
push
jecxz
outsl
daa
inc
into
out
sahf
jl
jle
cli
or
loop
cli
cwtl
lret
push
mov
cmp
mov
out
shrb
lods
sti
pinsrw
es
cmp
or
sahf
movb
popa
loop
out
mov
pop
jmp
xor
cmpl
sbb
dec
xchg
xchg
stos
loopne
out
inc
iret
adc
data16
dec
and
sub
nop
push
into
sbb
push
push
sbb
test
mov
test
js
aas
dec
cmp
and
loop
xchg
movsl
mov
mov
shlb
xchg
push
sahf
sti
dec
cmp
je
int3
push
fsubr
dec
push
or
outsb
adc
lea
mov
mov
gs
push
adc
fmull
inc
leave
int
xchg
mov
lock
repnz
pusha
inc
xor
hlt
aaa
popf
iret
and
adc
xchg
and
and
test
outsb
sahf
xchg
fisubrs
jmp
aam
lahf
mov
sub
cmpsb
lods
movsb
std
dec
add
subl
xor
sbb
lock
jbe
jne
sahf
pushf
aas
inc
in
xor
inc
mov
in
lahf
xor
jae
repz
inc
adc
push
lahf
or
sub
pop
sbb
aam
stc
into
clc
into
add
cmpsb
xchg
mov
aas
mov
push
cld
cmp
cmp
in
adc
repz
test
lret
inc
push
lods
andb
int3
in
push
imul
add
inc
pusha
xor
lods
push
test
or
push
add
mov
adc
xchg
scas
inc
fcomp
dec
or
mov
cli
aas
lds
dec
cmp
mov
dec
sti
das
pop
cmp
sbb
sbbl
mov
xchg
jle
lahf
sti
sub
loopne
stos
mov
sub
ret
jnp
sub
ret
ret
cld
ds
js
mulb
cmp
cli
lods
dec
es
fldt
lods
pop
dec
cwtl
enter
syscall
into
in
insb
ss
push
push
mov
std
test
std
pop
or
lahf
adc
jle
sbb
jae
adc
pop
clc
cli
test
out
mov
ljmp
fldln2
cmp
je
jae
add
insb
mov
xor
lahf
mov
bnd
lods
fsubs
addb
cmpsb
dec
in
cltd
mov
test
xchg
lea
mov
in
jmp
out
xchg
testb
je
lcall
cmp
xor
jbe
aas
xor
push
inc
cmp
pop
xor
mov
inc
inc
ret
sbb
xchg
mov
push
out
jnp
in
sarl
ljmp
test
sub
or
add
jo
out
add
or
in
data16
loopne
int
xor
add
mov
idiv
mov
xor
xor
lea
mov
jae
push
add
or
fs
mov
ret
nop
mov
push
fldt
pop
cmpsb
loop
mov
push
cmc
jg
xor
fidivs
add
jns
cmp
inc
cmpsl
jp
in
mov
and
mov
scas
push
lea
je
sub
add
push
cli
sub
inc
movsb
xor
jo
xor
rcrl
repnz
aaa
mov
push
ds
jo
cmpsb
mov
push
fiadds
fmull
cmp
mov
or
or
sahf
mov
imul
iret
repz
or
clc
push
shll
mov
aas
mov
push
push
sub
push
xlat
pop
js
mov
push
push
cwtl
dec
inc
sub
mov
sub
jno
xor
movsl
fidivrs
cmc
stos
pop
loopne
call
dec
std
cmp
in
sbbl
scas
xchg
push
mov
push
sahf
in
xchg
adc
movsl
fldl
cs
or
int
roll
outsl
lcall
or
cli
dec
dec
push
jb
test
fisttpll
enter
adc
js
or
cli
mov
popa
sub
push
mov
orb
xchg
in
cmp
dec
push
test
call
lahf
cld
addb
cmp
sub
pop
lcall
inc
dec
xor
xchg
cmpsb
sbb
lods
enter
xchg
rorb
jmp
mov
je
inc
test
inc
js
orb
and
xchg
jb
sbb
enter
sar
in
push
cmpb
adc
cmp
sarb
cmp
pop
nop
pop
jecxz
and
xchg
inc
int3
jecxz
cmpsl
and
gs
aad
cmc
mov
in
stc
jg
mov
inc
sti
lea
push
test
jp
inc
or
idivb
out
push
xor
pop
hlt
or
stos
xlat
out
js
mov
ds
pop
jmp
jbe
xor
roll
jp
std
bound
jno
cs
fstpl
jle
add
inc
fistps
fadd
push
negb
lcall
inc
call
inc
mov
dec
and
inc
dec
sub
psrld
dec
shl
inc
ds
jge
jbe
adc
xor
jb
push
ds
outsb
out
jge
incl
sarb
fdivrs
aas
xlat
cmp
add
adc
rorb
jmp
es
sbb
cltd
dec
xorb
pop
mov
ret
test
ret
adc
dec
adc
cmpsb
daa
mov
jo
pop
lret
inc
cld
mov
loop
jg,pt
add
dec
push
cmp
aas
add
and
fwait
es
je
cli
adc
inc
inc
out
adc
imul
popf
add
cmp
mov
fndisi(8087
adc
cmp
arpl
hlt
inc
repnz
rorb
pop
xor
enter
out
mov
sbb
dec
adcl
inc
pop
out
jo
inc
enter
sbbl
add
pop
cwtl
push
shll
pop
dec
mov
mov
mov
cmpl
lcall
add
jg
push
ds
sysret
dec
mov
out
std
adcl
cmp
stos
jp
jp
mov
jns
lods
xchg
cs
jnp
sbb
adc
test
sahf
xlat
mov
outsl
dec
add
movsl
cld
ds
cmpb
lret
push
lods
lcall
in
popf
jle
pop
sub
pop
dec
xchg
dec
mov
and
js
xorb
adc
aad
or
adc
push
mov
add
fdivs
rcrb
pop
add
test
and
rorb
sub
dec
mov
shl
dec
loope
lcall
cmp
mov
das
push
and
sbb
test
mov
mov
jecxz
insl
mov
sub
sbb
cltd
fidivs
jns
pop
push
cli
inc
push
stc
ds
lret
xlat
add
ds
pop
aaa
fisubrl
adc
mov
xlat
and
test
xlat
dec
jp
or
std
sbb
js
jmp
and
imul
jno
sbbl
pop
mov
jne
arpl
xchg
lahf
clc
int
push
mov
lahf
xorl
add
insl
data16
fistpl
push
push
sub
dec
int3
cwtl
addl
mov
mov
pushf
jg
call
es
test
adc
out
push
xchg
xchg
ja
push
stos
pusha
pop
xchg
inc
shrb
pop
ficoms
ss
jge
or
aas
cmp
sub
mov
aad
mov
adc
or
push
xor
inc
xlat
jp
xchg
jbe
push
xlat
sub
push
stc
js
adc
out
dec
movb
jle
sbb
int3
mov
jp
sbb
and
inc
dec
enter
xor
push
mov
ljmp
mov
and
inc
xchg
xor
repz
imulb
loop
pop
dec
add
mov
addr16
xor
aad
jbe
and
jbe
jnp
push
or
and
fldt
mov
adc
lock
ljmp
out
mov
sub
xor
popf
xchg
and
shl
sub
and
je
inc
sub
jae
outsb
mov
mov
mov
sub
or
popf
add
pushf
fiaddl
xor
mov
into
and
adc
sbbl
pop
sahf
jg
repz
fldt
mov
or
jecxz
jge
jno
or
inc
and
outsb
cs
xor
jg
jge
push
rolb
sub
add
lret
imul
adc
mov
cwtl
leave
mov
movl
push
inc
fildl
inc
test
out
fs
mov
ljmp
cmp
push
out
icebp
test
stos
mov
aam
inc
lahf
mov
aas
in
mov
test
xchg
xlat
ficomps
inc
idivl
jle
xor
xchg
push
pop
mov
sbbb
sbb
sahf
adc
ss
push
enter
ret
shll
mov
out
out
or
or
push
inc
dec
lock
aas
mov
mov
mov
push
lcall
cli
pushl
dec
xchg
mov
xchg
fdivp
inc
nop
out
pop
xor
shl
or
sub
mov
test
scas
rcr
cli
pop
pusha
sbb
adc
loopne
vshufps
cmp
jns
pop
inc
mov
jo
inc
in
pushf
shrb
adc
mov
lcall
sti
pop
pushf
adc
sbb
aas
pushf
test
fnsave
and
rorl
xlat
adc
aas
sbb
clc
mov
lret
jle
adc
or
xlat
or
mov
adc
repnz
sar
in
sub
xchg
inc
adc
ja
iret
js
or
stc
or
clc
inc
adc
mov
or
mov
mov
xchg
xchg
out
fdivs
sub
lcall
push
ret
sahf
add
jp
jae
sbb
sbb
mov
push
inc
add
fildl
adc
mov
inc
sbb
gs
into
mov
icebp
jae
dec
iret
out
push
frstor
mov
jne
or
inc
mov
fcoml
push
add
add
sbb
leave
into
or
pop
call
lea
insl
and
fldenv
imul
sub
jmp
outsl
push
ja
xor
das
cmp
inc
dec
rcrl
ds
bound
test
inc
pop
mov
clc
aas
jns
scas
push
xlat
or
in
adc
and
repz
cmp
sbb
out
lcall
cmp
les
aas
repnz
insl
lcall
movq
dec
mov
icebp
aas
xor
js
jne
js
cmovno
notl
push
clc
outsl
stos
cmp
dec
cld
mov
jno
push
test
jo
push
jb,pt
pop
mov
ds
stc
sub
mov
xchg
call
popa
pusha
add
mov
cmc
fisubl
int
xor
mov
sub
sti
pop
mov
sarb
mov
or
aad
xor
out
fisubs
cmp
pop
and
shlb
cmp
into
cmp
leave
ja
inc
or
aaa
xor
rcll
push
or
xchg
rcll
sti
test
sub
cmp
mov
mov
push
inc
ss
loop
clc
sub
adc
loope
into
pusha
arpl
lret
in
inc
push
sbb
mov
inc
nop
mov
jbe
jg
jo
enter
adc
testb
sbb
jg
mov
sbb
fs
push
aaa
mov
and
shrl
mov
ss
daa
jae
rolb
lcall
out
lret
adc
or
mov
sahf
in
jae
es
mov
adc
adc
jnp
add
push
out
in
xchg
test
adc
pop
jl
mov
or
sarb
hlt
repnz
add
xor
xor
lock
sahf
sub
in
in
sbb
mov
rcl
add
or
cmc
ss
or
inc
inc
dec
stos
xor
cltd
loopne
jno
push
mov
daa
push
shrl
enter
and
push
enter
xlat
sti
pushf
cld
jle
ret
adc
incb
push
adc
std
and
sub
cmp
imul
pop
push
xlat
mov
popa
shrl
xchg
negb
andb
jmp
add
and
lret
push
inc
mov
out
mov
xchg
dec
popa
fdivs
leave
or
dec
pop
xlat
jbe
add
adc
popf
insb
and
mov
xchg
mov
jb
dec
xor
sbb
mov
mov
mov
pinsrw
adcl
mov
pop
mov
or
push
ljmp
mov
or
in
ret
push
dec
dec
mov
fisubrl
jl
cld
outsl
invd
push
int3
imul
scas
ret
das
xor
mov
cmc
jg
sub
js
mov
pop
jmp
jecxz
mov
orl
rol
outsl
mov
sub
jb
xchg
pop
aaa
adc
xchg
xchg
mov
inc
cmp
imul
sub
cmp
lcall
dec
fisubrl
and
jl
pop
dec
out
pop
movsl
sub
push
jp
mov
sub
data16
add
cmp
leave
sti
imul
imul
jnp
sbb
mov
xor
jle
js
ss
push
pop
adc
mov
mov
push
das
ffreep
xchg
mov
jbe
test
xchg
xor
push
cli
bswap
stc
mov
dec
xor
loop
inc
out
mov
cmpsb
sahf
mov
jmp
arpl
mov
jmp
fwait
cltd
fimull
cmpsb
out
stos
lret
ljmp
scas
lret
cli
fisubrl
xor
outsb
push
push
jmp
enter
pop
push
cs
stc
mov
test
pop
daa
ds
fildll
dec
sub
adc
sbb
jge
inc
imul
xchg
push
pushl
call
pop
xchg
and
or
lds
jne
das
mov
cmp
movd
dec
adc
int3
filds
sbb
enter
jle
clc
or
nop
ret
scas
inc
lods
add
aas
add
movsl
out
adc
scas
inc
rol
mov
mov
icebp
imul
adc
adc
sbb
push
cmp
jmp
xchg
ljmp
das
push
jb
mov
dec
or
js
xor
cmp
in
mov
imul
sti
aas
mov
pusha
pop
jg
call
and
int
fwait
sub
sahf
int
mov
mov
insl
out
fbld
ja
pop
mov
test
mov
call
ds
fstpt
loope
mov
std
fs
mov
cli
scas
mov
mov
sub
sub
cmp
mov
xlat
lcall
xchg
test
in
and
es
fstpl
pop
adc
xchg
push
add
adc
sub
aaa
or
cwtl
or
and
test
mov
cmp
outsl
jle
lahf
leave
jae
mov
out
in
adc
fimull
je
adc
imul
out
roll
cmp
or
lcall
or
shrb
pushf
cmp
jnp
sub
iret
popa
cmp
loop
popa
fs
sub
xchg
push
mov
mov
ja
xchg
ret
sahf
lret
mov
pop
xchg
vpshaw
xchg
aam
mov
push
adc
push
jg
call
sahf
je
popa
inc
and
jge
push
aaa
push
in
jle
ljmp
into
adc
std
cld
sub
pop
inc
test
ficomps
inc
sbb
mov
push
out
or
xchg
pop
xchg
mov
cmp
sub
cmpb
pusha
cld
sbb
dec
inc
jmp
dec
repnz
aam
test
pop
popf
icebp
lahf
fsubrl
shll
fld
in
cmp
loope
mov
cwtl
inc
loope
or
cmpsb
sbb
sub
push
push
pop
mov
jg
mov
sbb
fmul
xchg
aam
push
out
imul
pop
pop
popa
not
ss
or
xchg
dec
jg
xchg
mov
or
adc
out
jnp
int3
fidivs
fdiv
pushf
std
decl
add
pop
mov
sub
test
shrb
loop
cli
shl
dec
lds
xlat
pop
xor
dec
push
fnstcw
and
insl
std
rcr
stos
rorb
jns
dec
enter
cmp
dec
les
repnz
mov
rcr
ret
dec
or
push
mov
insl
and
imul
or
cmp
lret
cmp
lods
xchg
adc
mov
mov
aas
mov
fistl
loope
loope
lahf
bswap
and
daa
arpl
dec
bnd
icebp
cmp
and
jl
dec
push
xor
negb
mov
es
mov
or
inc
jns
std
push
inc
idivb
gs
enter
popa
sub
stos
push
mov
popa
cwtl
pushf
jg
xchg
iret
outsl
ljmp
loopne
and
sbb
out
dec
dec
jnp
clc
sbb
or
dec
sub
rcrb
mov
push
or
jge
movl
cmpsb
js
fs
jecxz
mov
in
loop
mov
mov
dec
jne
xor
imul
push
and
fucom
mov
hlt
xchg
sbb
pop
inc
or
push
aam
xchg
js
xor
sub
push
push
mov
lods
sub
das
push
sbb
lahf
pop
push
iret
subb
or
imul
in
pop
sbb
mov
ja
mov
sti
test
adc
push
xor
add
or
aad
dec
jl
jg
pop
and
inc
in
or
es
and
jp
sub
fidivrl
and
stos
or
gs
push
in
das
sti
mov
add
arpl
shll
xchg
and
dec
scas
aas
jp
pushf
mov
cmp
xchg
lods
loope
xchg
inc
inc
ds
pop
outsb
cmp
aas
or
dec
int
and
ret
scas
pop
jne
lods
fiadds
jnp
mov
add
jge
ljmp
dec
sbb
in
mov
mov
mov
into
pop
or
inc
ficoms
mov
in
add
xchg
std
popa
xlat
iret
inc
lret
lret
leave
jne
testb
add
sahf
add
adc
xchg
pop
fdivr
mov
adc
ret
fcmovbe
or
int3
inc
clc
xlat
adc
jae
sti
ret
dec
daa
daa
push
sbb
inc
cmpsb
fwait
add
xlat
add
jmp
jle
sbb
xchg
in
cmc
scas
fdivrs
pusha
gs
sub
lret
and
mov
mov
jp
push
pushf
sub
into
int3
sub
mov
adc
pop
in
adcl
sbb
mov
into
bound
ret
shll
rcr
mov
data16
cli
cmpsl
sbb
test
mov
out
dec
dec
pop
leave
jl
shrl
addb
or
pushf
push
xor
loop
add
int
mov
xchg
fnsave
xlat
and
jb
pop
hlt
lret
sbbb
jge
cmp
fnstcw
mov
or
jno
stc
mov
test
movsb
mov
in
sub
or
imul
and
cld
or
pop
pop
movb
jbe
add
push
xor
in
push
rcrb
out
bound
or
sbb
mov
imul
jp
out
jbe
adc
and
lahf
ret
add
cwtl
or
add
sub
add
push
shlb
or
inc
dec
sub
cmp
or
fisubrs
loop
sub
popa
jo
lods
iret
mov
lret
sub
fwait
jmp
pop
mov
jp
or
ss
addl
out
dec
pop
stc
sbb
sbb
cmp
movsl
cmp
and
adc
sub
ds
ficoms
ljmp
jbe
mov
sti
sahf
iret
aaa
out
mov
fadd
subb
mov
lret
repnz
sbb
pop
xchg
mov
into
aaa
test
fbstp
fisubs
insb
repnz
sti
sub
push
dec
or
mov
mov
sub
test
mov
ljmp
push
jmp
shll
inc
inc
ss
lret
faddp
insl
mov
jle
xchg
mov
testl
sbb
push
sahf
dec
inc
lret
clc
push
add
dec
lret
adc
fwait
cmp
fs
std
inc
sahf
clc
cltd
cmc
sbb
mov
dec
dec
cli
outsb
sbb
out
pop
sbb
dec
stos
icebp
add
sbb
test
call
xchg
add
inc
xchg
enter
lds
add
lods
lret
loop
mov
insl
push
pop
daa
hlt
shr
cli
xor
leave
cmp
out
js
inc
jle
cmp
adc
mov
ficoms
std
push
mov
xchg
jecxz
dec
push
pop
mov
xlat
xor
sbb
push
sub
pushf
fwait
push
xchg
mov
rorb
fsubrs
mov
cwtl
fwait
mov
rcrl
adc
lahf
mov
fcomps
lock
rcl
mov
dec
fadd
sbb
ds
cmp
fidivs
sub
xchg
push
sub
int
push
add
pop
xor
es
repnz
fidivrl
fs
mov
dec
xchg
mov
lds
fs
xlat
pop
repz
pop
mov
xlat
in
sbb
gs
es
mov
es
sbb
jge
lret
shll
mulb
mov
sbb
je
mov
jp
inc
mov
jecxz
mov
mov
inc
stc
xchg
sbb
cld
ret
cmpsl
je
and
adc
jecxz
jle
cmpsl
into
xlat
jb
rdmsr
loope
loop
loop
das
add
ret
mov
loop
or
dec
xor
js
push
ret
xchg
sub
vmaxpd
lret
sets
mov
popa
mov
icebp
rcr
loope
or
cli
jne
out
and
call
pop
push
loopne
js
movsl
jnp
pop
fiaddl
xlat
iret
pop
or
cmp
xor
jns
xchg
sub
leave
stc
mov
repz
repnz
out
jnp
fidivs
into
dec
ds
cmp
sub
popf
push
into
shlb
repnz
inc
cli
out
repnz
cmp
fptan
call
pop
or
sti
out
in
dec
orb
lret
sar
imul
scas
arpl
sbb
mov
xchg
mov
mov
jle
test
sbb
push
add
push
rorb
dec
push
and
cmp
xor
mov
arpl
dec
inc
ret
xchg
sub
ljmp
xlat
rclb
or
sbb
cli
add
xor
xchg
sub
mov
xor
adc
lret
add
pop
out
fidivs
xlat
mov
ds
sbb
imul
std
pop
mov
orl
push
dec
dec
push
inc
mov
inc
jl
daa
dec
mov
jle
adc
jg
inc
ret
cmpsl
jg
in
stos
pushf
test
fiaddl
out
fwait
sub
movsl
adcl
inc
or
imul
rolb
mov
lret
int3
cmp
jecxz
mov
test
xchg
jp
or
orb
pushf
mov
lahf
sbb
mov
enter
fstps
dec
push
insb
inc
movb
in
mov
rorl
cwtl
filds
and
sbb
rclb
jbe
or
nop
sub
decl
stos
mov
mov
ret
bound
out
insl
mov
xchg
xor
insl
jge
icebp
pop
dec
lds
mov
xor
mov
nop
cmpsl
xchg
jge
rcrb
imulb
call
mov
jge
pusha
adc
outsb
fidivrl
adc
sub
iret
out
faddp
push
pop
sbb
mov
mov
cmp
cs
mov
dec
and
sub
add
test
in
sahf
ror
cmp
pop
jae
xor
sbb
aam
jb
dec
xor
push
movsl
js
insl
jl
jae
cltd
dec
es
loop
add
pop
ds
pusha
cmp
into
test
cmp
repz
cmp
sahf
icebp
push
and
das
lods
aaa
out
mov
adc
mov
xor
sub
push
shll
or
inc
jns
sahf
jge
inc
icebp
fimuls
mov
mov
mov
lds
or
mov
cmc
inc
outsb
dec
mov
popa
aas
call
xchg
fmul
dec
mov
fnsave
or
sahf
push
in
inc
mov
jg
push
xlat
fsub
mov
shll
push
dec
add
dec
das
mov
mov
sbb
add
xor
ljmp
fnstenv
add
test
je
jno
call
or
daa
orl
leave
adc
popl
pop
dec
ret
adc
push
or
lods
adc
or
push
adc
push
push
and
cltd
push
daa
mov
pop
xchg
rcr
jecxz
mov
sbb
mov
imull
or
pushf
mov
sbbb
jno
dec
pushl
cmp
pop
int
scas
push
xor
data16
imul
xchg
dec
inc
sub
out
bound
mov
dec
fucom
ds
inc
stc
dec
adc
stos
sub
pop
jmp
push
mov
jge
cld
daa
inc
icebp
xor
ret
movsb
jmp
lret
push
or
lret
dec
mov
rorb
stos
hlt
mov
cmp
aaa
mov
cmp
or
mov
ja
and
int3
sahf
pop
pop
jo
inc
jecxz
sub
xchg
mov
icebp
push
push
mov
mov
or
xor
imul
loope
lods
dec
cmp
or
xchg
sub
mov
sub
mov
xchg
mov
or
jp
or
mov
push
clc
lods
dec
lock
sti
shl
and
ljmp
pop
imul
jl
push
mov
or
rolb
or
insl
fmuls
rolb
inc
and
loopne
sbb
iret
mov
stc
mov
cmpsl
cmp
mov
push
das
jle
push
pop
pop
or
sahf
jne
packuswb
xchg
insb
sti
xor
jecxz
sbb
adc
call
and
ret
adc
movsl
loopne
mov
dec
and
jle
scas
xor
decl
sahf
mov
jmp
xor
sub
test
xchg
cmpsb
call
xlat
rep
push
pop
add
adc
or
sub
sahf
xor
inc
sti
mov
test
dec
xchg
inc
sbb
jne
fiadds
ret
cli
into
lds
inc
xchg
and
arpl
adc
or
std
enter
pop
pop
mov
mov
mov
xlat
sub
movsl
pop
js
and
sbbl
cwtl
adc
sti
cmpl
inc
sbb
dec
in
or
xchg
icebp
inc
sub
adc
cmp
rcrb
xchg
popf
clc
rorl
mov
orb
dec
adc
in
or
sbb
mov
shrb
aas
lahf
repz
add
xchg
sub
xor
pop
sub
add
fimull
adc
push
decl
test
lods
daa
push
icebp
sbb
jno
mov
das
lar
test
clc
out
outsb
inc
push
int3
jne
mov
dec
in
or
arpl
mov
jl
std
fimuls
add
decl
cmp
call
mov
xor
jns
adc
pop
lods
jecxz
or
out
inc
stc
ficompl
jle
or
push
loop
mov
push
inc
out
dec
jmp
fstl
fldenv
or
dec
stc
adc
cmp
and
inc
mov
jno
sahf
xchg
aaa
add
sub
aaa
cmp
inc
cli
xchg
push
push
cmp
stos
adc
inc
into
aas
jp
xlat
bound
or
fcmovnbe
fmuls
movl
inc
ret
adc
adc
mov
mov
mov
mov
mov
incb
mov
mov
inc
lret
and
jnp
rorl
std
mov
js
mov
sarb
mov
xlat
lcall
sbb
mov
sub
add
and
scas
cs
pop
or
les
mov
pushf
cmpsb
xchg
lea
jns
xchg
clc
cwtl
mov
push
sub
mov
lret
sub
dec
push
test
fwait
outsb
int3
lret
ss
pop
data16
cld
lods
xchg
lock
test
enter
lcall
xor
or
ret
push
pop
sub
or
inc
pop
lods
outsb
sub
les
mov
inc
stc
and
or
ror
inc
scas
cli
js
cmp
cmp
stc
jo
xchg
in
pop
sbb
loop
pop
gs
push
jnp
push
mov
mov
mov
rclb
out
fs
cmp
arpl
sahf
je
xor
mov
jp
add
out
or
lcall
lods
in
cs
inc
xor
jb,pn
fwait
movsb
push
push
hlt
clc
inc
adc
cmp
or
pop
xchg
cmpsb
arpl
lods
push
mov
xor
sbb
or
cmp
sub
js
ljmp
push
int
sub
stos
scas
or
lret
pop
cli
test
sbb
int
xor
push
cmpsb
add
or
or
push
pushf
jp
mov
pop
sar
xor
inc
add
cltd
in
ljmp
je
inc
js
inc
adc
jno
pusha
clc
adc
shrl
fldpi
je
jne
inc
or
mov
hlt
fildl
or
sub
sbb
cmc
pop
sti
movsb
shl
inc
adc
push
jl
stos
cltd
lret
mov
cli
mov
lock
mov
mov
xchg
fadds
inc
imulb
add
orl
push
test
mov
fstl
mov
addr16
add
mov
dec
or
xor
data16
inc
cli
lds
jmp
out
mov
mov
test
push
leave
stos
dec
and
popa
inc
sahf
jl
jns
or
je
sub
jmp
jmp
repz
test
ror
cli
shrb
sarb
add
mov
jbe
sub
sahf
xor
push
mov
mov
add
dec
or
push
add
add
ret
inc
mov
arpl
sbbb
or
out
sti
ret
dec
fidivl
sub
jle
sbb
adc
add
xor
ja
inc
push
insw
cmp
adc
mov
arpl
enter
adc
cmpb
sub
enter
enter
mov
and
fadd
stc
aas
xor
in
mov
dec
test
adc
inc
xor
das
sbb
mov
hlt
xor
or
lock
mov
std
test
andb
in
ret
cmp
push
out
mov
insb
pop
insb
or
ficoms
xchg
data16
testl
bound
jbe
int3
pop
jp
shll
cmp
movsb
sub
lea
add
lret
cmc
xchg
fstp
cmp
ds
or
ret
or
int3
xor
xchg
and
lock
inc
fucom
imul
stos
loop
ss
dec
sbb
aaa
into
or
push
sbb
ds
cli
out
aas
out
enter
iret
aas
repnz
pop
or
int3
or
dec
out
das
in
sbbb
scas
mov
xchg
mov
jns
mov
cltd
cmp
in
loop,pt
loop
shrl
add
dec
mov
or
les
push
and
mov
in
bound
imulb
pop
add
jg
jae
mov
cmp
cmp
sti
push
push
jecxz
xor
cmp
fs
sbb
clc
push
fistl
mov
mov
jmp
mov
jne
sahf
and
inc
scas
ret
xor
mov
jge
ss
mov
std
cli
ret
add
mov
shl
imul
in
jo
ljmp
mov
jne
push
fadds
jne
xlat
inc
mov
aas
dec
jno
js
mov
inc
jb
inc
add
test
nop
cs
imul
xor
cwtl
icebp
mov
mov
sub
pop
jae
loopne
xchg
sub
outsl
ljmp
out
adc
movl
mov
lret
sarl
or
jno
xchg
mov
mov
inc
jne
mov
and
push
xlat
mov
xchg
push
lret
dec
aam
adc
sub
xchg
adc
jns
cmpsl
or
xchg
push
mov
cmc
enter
mov
sbb
fcmove
clc
push
ss
fildl
sbb
xor
das
loopne
lea
jns
adc
lods
aas
call
out
xor
cmp
shl
sahf
cs
into
sahf
push
push
cmp
sub
stos
movsb
xor
iret
pop
mov
js
cld
mov
cltd
dec
pop
sub
sahf
or
aas
icebp
lods
mov
lcall
and
jmp
dec
jo
xchg
in
lds
mov
jle
call
xor
aas
out
insl
repnz
jge
mov
test
push
daa
xor
adc
jno
adc
sub
adc
sahf
scas
movsl
mov
negb
inc
adc
std
add
andb
push
inc
out
mov
imulb
jge
rcl
add
inc
jne
leave
xor
jne
xchg
ljmp
stos
cmp
movsl
scas
mov
mov
mov
cmpsb
aas
lret
mov
add
mov
inc
xor
aad
push
push
inc
pop
lret
aad
jnp
xchg
jns
icebp
jb
push
jecxz
cs
sbb
mov
sub
add
das
lcall
cmp
push
mov
mov
punpckldq
scas
xor
stc
out
ds
test
fists
loop
ficompl
push
or
js
ret
sahf
sbb
imul
cmp
mov
mov
fistps
adc
add
mov
sub
outsl
mov
and
test
fdivl
mov
jae
les
ja
repnz
push
push
jp
xor
adc
pop
or
fs
cltd
jne
mov
adc
xor
mov
cmp
inc
fstl
push
push
pop
ret
cmp
inc
mov
cwtl
cmp
retw
xchg
lock
jmp
inc
cmp
mov
dec
repz
popa
clc
addr16
shl
in
inc
lahf
push
and
leave
shl
inc
sub
test
mov
xchg
xor
dec
aam
or
inc
push
jne
data16
popa
cltd
jno
addl
inc
fs
push
lret
push
mov
stos
fdivp
cmp
cmc
cmp
mov
ljmp
xor
out
int3
call
xchg
mov
jmp
lods
mov
out
xor
cwtl
push
ss
pushw
outsb
cmpsb
mov
cmp
push
std
jge
push
push
mulb
enter
push
push
inc
cs
ss
push
jle
jg
and
jle
push
and
push
sbb
in
xor
fs
add
into
cmc
cmc
adc
xor
test
icebp
pusha
or
ja
fsubp
sub
adc
xor
add
hlt
loopne
sub
push
xchg
pushl
push
in
mov
loope
xchg
movsl
mov
dec
mov
arpl
add
cmpsl
push
cmc
fidivl
out
and
xlat
jns
mov
int
inc
add
pop
push
pop
sub
loop
out
fsubr
cmc
adc
repnz
cmc
mov
sub
inc
lea
lret
pushf
mov
sbb
sbb
lcall
xchg
sti
aad
xchg
dec
xlat
out
dec
jae
xor
pop
push
xchg
and
push
insb
cmpsb
inc
xor
out
add
shll
mov
add
mov
xor
in
sub
add
dec
repz
push
imul
clc
xor
daa
push
rolb
add
cmp
push
leave
in
lret
aad
loope
repnz
lcall
lds
push
mov
mov
int
mov
les
outsb
xor
mov
pop
das
out
clc
dec
out
xchg
or
sbb
push
icebp
sar
add
or
xchg
loop
test
je
clc
inc
lret
jecxz
cmp
jnp
nop
fdivl
mov
cmp
push
xlat
and
rolb
pandn
test
mov
pop
call
int
cli
inc
shll
xchg
int
stc
gs
or
aam
dec
int3
cmp
cld
cmpl
insb
insb
ficomps
out
dec
pop
lds
cmpsb
enter
clc
pop
sub
dec
cli
shll
leave
out
es
sub
jle
xor
mov
mov
xor
inc
lcall
push
mov
jg
daa
ret
jns
test
movl
lret
test
mov
lret
orb
xlat
leave
inc
mov
xor
mov
xchg
int
inc
mov
or
push
roll
dec
push
cmp
and
arpl
pop
std
decl
hlt
dec
cli
ret
sahf
inc
hlt
adcb
scas
cmp
add
xor
sub
sar
ret
add
int3
pop
push
or
mov
xlat
leave
ljmp
lcall
cld
cmp
push
mov
scas
adc
pusha
popf
add
stos
pop
js
and
sbb
inc
sarb
cmpl
add
addb
adc
imull
lds
sarl
push
cmp
fwait
cmc
paddsw
sbb
xor
xchg
or
adc
push
jns
or
sub
mov
xchg
add
jle
and
pop
call
xor
jmp
imul
inc
xchg
jge
outsb
faddp
adc
aad
lds
cmp
xor
or
pop
out
add
das
mov
adc
cwtl
jge
pop
aad
into
sub
pop
cmp
jge
incb
out
bound
ljmp
enter
cs
incl
or
ja
aas
adc
jnp
repnz
aaa
xor
and
xor
mov
jnp
sub
shrb
mov
xchg
pop
ljmp
decb
mov
mov
inc
push
mov
mov
movsb
mov
jb
xor
push
lock
repnz
dec
mov
clc
push
or
dec
xchg
jo
xchg
mov
and
bound
sbb
shrb
or
clc
inc
add
or
ljmp
pusha
loopne
insb
idivl
mov
div
not
stos
sti
adc
aaa
shr
inc
shlb
push
mov
out
mov
iret
adc
scas
fdivr
mov
popa
dec
pop
add
cmp
pop
lahf
mov
shr
fdivr
sti
popf
into
dec
shrb
inc
iret
fistpll
orl
rolb
sahf
mov
das
sbb
in
int
mov
lret
nop
push
xchg
cmp
mov
mov
in
xchg
movl
pop
sub
mov
mov
rcrb
xchg
mov
xchg
cld
int3
mov
fwait
add
fstpl
jne
js
add
aas
pminsw
stos
add
fistps
outsb
mov
mov
addr16
adc
inc
out
loopne
insl
and
int
cmpb
fstl
das
mov
cmp
mov
scas
outsl
dec
push
and
sub
mov
pusha
mov
cwtl
jmp
ret
adc
lret
push
inc
sub
into
push
or
adc
mov
push
and
fmul
addr16
ret
nop
repz
xchg
fnstcw
mov
fisttps
in
cmp
pop
cmp
cs
pop
mov
into
mov
add
xchg
sub
into
add
mov
stc
rcr
or
push
add
fstl
insl
rorl
leave
shrb
and
iret
icebp
call
aas
int3
xchg
int
repnz
out
mov
pop
adcl
mov
jns
dec
nop
icebp
xor
dec
cmc
push
test
gs
ss
xchg
add
imul
xchg
push
push
sbb
cs
incl
mov
filds
add
mov
pop
ficomps
push
inc
bswap
add
pop
mov
mov
cmpsl
or
rol
lods
icebp
leave
add
cmp
incb
xchg
les
and
les
lods
aaa
or
adc
xor
in
stos
mov
mov
icebp
outsl
outsb
mov
fistl
pop
mov
gs
or
fwait
mov
cmp
inc
or
xor
inc
ret
lret
mov
mov
addr16
enter
std
sub
cld
add
jmp
cmp
mov
das
lret
xchg
pop
xchg
jo
outsl
imul
stc
les
call
mov
aas
adc
mov
sbb
sti
lds
hlt
mov
insl
and
add
les
cmp
cmp
repz
sbbl
jno
fcompl
mov
ret
or
mov
sbb
sub
ss
ret
nop
lret
push
xchg
jo
mov
sub
lahf
testl
stc
or
std
cmc
xchg
xor
enter
outsl
xchg
mov
aaa
pop
js
enter
div
leave
inc
ret
dec
jnp
pop
cmpsb
fisubrl
shlb
sub
or
or
pop
call
jne
xacquire
sbb
inc
cmp
js
cli
sub
add
xor
popf
icebp
int
sbb
in
call
dec
loopne
mov
les
adc
mov
outsb
xlat
xchg
mov
sbb
mov
add
xchg
push
xchg
fildll
and
lea
outsb
jge
mov
bound
cwtl
ret
mov
mov
movsb
cltd
mov
dec
in
mov
dec
dec
aad
pushf
push
call
jg
pop
mov
adc
mov
xchg
sahf
cmpsl
xor
and
mov
ds
or
cmpsl
lret
popa
xlat
lret
movsb
cli
mov
lea
push
aas
push
ret
int
ja
sub
in
adc
fcmovnb
andl
rorb
pop
lods
jo
and
shr
shlb
es
outsb
inc
outsb
out
mov
dec
pop
test
lcall
stc
or
sub
and
cmp
int3
push
push
add
pop
jg
mov
std
in
out
cmp
xchg
shl
xlat
inc
jle
sub
cmp
shrb
sti
jecxz
je
mov
js
les
sahf
pop
mov
and
push
stc
ret
xchg
sti
lods
mov
sarb
aas
stc
mov
or
lcall
and
jecxz
icebp
mov
dec
xchg
outsl
repz
rol
mov
test
out
add
xor
mov
pusha
inc
cmp
sub
mov
lods
cmp
mov
repnz
dec
inc
mov
cld
cmp
sub
out
cmp
and
test
or
and
xchg
or
jb
cmpsl
int3
mov
sub
push
clc
jl
dec
es
shlb
xchg
mov
cwtl
ja
cmp
cmc
scas
lret
out
mov
cmp
mov
mov
push
adc
xchg
xchg
mov
insl
mov
cli
movsl
mov
out
xchg
cmp
pop
or
cli
into
fucomi
cs
mov
iret
lds
and
lret
sahf
loop
sbb
xchg
mov
mov
fwait
out
jns
aas
or
mov
mov
push
shrl
in
and
int
mov
xchg
out
cli
sahf
fldenv
xor
std
leave
stos
hlt
out
ss
mov
test
cmpsl
mov
cmovl
sbb
icebp
cli
shll
cmp
test
cwtl
inc
in
push
pop
scas
inc
into
mov
adc
mov
call
jo
dec
push
enter
bound
adc
mov
movsl
mov
scas
jg
jp
mulb
addl
pusha
add
int
ret
mov
pop
mov
pusha
repnz
stos
ds
lret
int
testb
dec
sarw
dec
mov
sub
dec
push
hlt
out
arpl
pop
ds
dec
shrl
popw
sahf
jecxz
fildll
push
out
arpl
or
xchg
lret
lea
or
jb
dec
push
out
clc
test
incb
enter
or
data16
sbb
fstl
sbb
pushf
adcl
ljmp
add
cmp
rcr
mov
or
ja
inc
mov
bound
sub
mov
sbb
mov
push
fsubrs
cmp
enter
jle
mov
pushf
cli
movsb
mov
rclb
clc
inc
or
sbb
sub
inc
enter
js
xchg
xchg
cli
movsb
mov
fidivrl
in
enter
sbb
xor
inc
cli
push
push
jmp
mov
cli
out
aas
or
push
fisubl
cmp
fsubs
js
aas
mov
int3
fcmovu
lock
add
adc
and
aas
push
enter
incb
in
mov
in
add
sbb
xor
cmp
push
inc
fdivrs
mov
pop
mov
push
mov
jbe
pusha
fadds
nop
jbe
scas
fdivrl
adc
mov
dec
sarb
repnz
out
bound
ficompl
ret
dec
xlat
mov
stos
mov
fdivp
add
scas
idivb
jbe
out
cld
or
jle
scas
out
mov
ret
test
arpl
sub
sub
and
call
in
movb
adc
xor
ret
lock
xchg
pop
xchg
sub
in
mov
clc
pop
sub
es
mov
add
cli
adc
sti
scas
rorl
nop
cmp
jecxz
and
push
or
fstps
mov
ficoms
pop
mov
fsubs
call
pop
pop
xchg
cmpsb
inc
add
lcall
dec
lods
mov
in
arpl
out
push
enter
loopne
mov
sub
lock
and
fwait
pop
dec
mov
stc
sub
sbb
test
or
dec
into
or
sbb
rorb
cli
mov
jmp
sbb
sub
xor
mov
pop
sub
xchg
sub
mov
lock
call
mov
lds
add
cmp
add
es
addr16
ret
loop
icebp
or
and
sahf
jb
sub
and
sbb
out
push
sar
sbb
or
lods
sub
xor
lock
into
pop
add
inc
cmpsl
mov
rcl
push
push
sub
clc
sahf
sbb
jb
dec
imul
cmp
das
sti
push
push
ret
pop
sti
sbb
idiv
and
inc
sub
rol
inc
fnstsw
cmp
cmp
jb
xlat
ret
frstor
aaa
stc
push
pop
and
sbb
cmp
ret
cs
pop
push
cmp
xor
add
sub
lret
ljmp
ljmp
cmp
pop
sub
cs
fcomip
scas
paddd
jp
hlt
in
test
sub
push
imul
sbbb
pop
mov
sub
std
addr16
sbb
clc
cli
icebp
mov
sbb
jle
testl
ljmp
scas
lahf
ret
js,pn
pop
icebp
adc
jbe
and
stc
aam
out
shr
pop
or
into
and
sub
xor
fcoms
jmp
mov
addb
jl
adc
mov
sbb
es
or
cli
add
idiv
mov
push
dec
xor
pop
mov
push
push
pop
loopne
loop
dec
mov
fwait
cld
or
repnz
mov
fbld
or
xlat
outsb
js
xor
fildl
ret
and
call
xlat
adc
add
fnstcw
push
cmp
pop
shrb
push
in
adc
into
cli
sbb
pop
sub
es
out
outsl
push
sbb
push
lock
add
adc
sub
push
inc
add
push
lock
into
mov
or
inc
test
leave
sbb
ror
push
lock
rclb
fwait
and
jle
xlat
shl
pop
mov
cmp
fmul
adc
sbb
es
cmc
or
ficoms
xor
loopne
push
cmc
mov
lcall
xor
adc
and
out
sbb
fisubrs
stos
sub
popf
pop
fists
ljmp
push
xchg
imul
ljmp
in
fistps
imul
ficompl
xchg
rorl
nop
pop
or
or
cld
loopne
jmp
bound
nop
dec
jp
add
repz
loopne
sub
or
sbb
inc
mov
out
xchg
jmp
jmp
ror
jle
ds
fcmovne
add
xor
sub
lahf
add
or
sub
ljmp
scas
fisttps
mov
inc
dec
xor
cli
pop
jb
cmp
fdivr
adc
cld
mov
lcall
loopne
lret
jecxz
bound
sub
mov
push
into
push
mov
sub
and
inc
jae
or
pop
insl
js
out
push
out
dec
jb
dec
or
sub
hlt
dec
adc
cmp
enter
sti
popf
push
out
sub
hlt
lahf
rorl
adc
xlat
divl
int
pop
hlt
dec
dec
mov
arpl
out
cmp
out
test
dec
lods
shl
and
sub
ret
rolb
mov
in
in
cmp
pop
les
js
adc
sub
sar
in
cmp
loop
jp
xchg
and
adc
push
loop
sbb
sbb
insl
push
loopne
das
sub
sbb
lock
rcrb
xor
push
divb
or
add
jmp
pop
sbb
mov
pop
jmp
add
mul
pushf
call
out
out
ret
in
test
stc
ret
jecxz
push
lret
mov
add
mov
cli
jae
and
push
loop
push
clc
jmp
or
dec
ljmp
cld
out
jmp
in
mov
out
jmp
mov
mov
inc
jmp
outsl
in
clc
lods
jne
sbb
rcll
pop
sar
jne
or
pop
sti
push
fwait
xlat
cwtl
dec
out
adc
ret
cs
or
lock
push
mov
loopne
xchg
enter
fsubrp
repnz
and
por
pop
mov
pop
call
sbb
fbld
sub
fmuls
xor
jle
das
scas
sbb
cmp
and
aam
push
push
iret
sbb
xchg
sbb
imul
push
pop
cli
insb
aaa
dec
sbb
enter
inc
lcall
call
xchg
add
adcb
sub
push
sub
mov
sub
into
xor
ds
add
and
mov
pop
clc
mov
cmp
pusha
and
std
sub
inc
push
sbb
sub
pop
js
inc
jmp
push
subl
add
cwtl
pop
aaa
add
sbb
or
sbb
fcomps
fiaddl
repz
lock
inc
mov
imull
mov
add
call
cld
and
sub
imul
aam
pop
sbb
or
cli
mov
std
inc
les
mov
sbb
adc
sub
lds
sub
and
sar
mov
lea
jmp
fbld
lds
sbb
lret
or
sbb
stc
xlat
rcrb
pop
sub
into
add
rcrb
arpl
fistl
or
or
sub
sbb
or
dec
rcl
rcrb
mov
lods
outsb
stos
push
pushf
adc
sahf
mov
mov
sub
ljmp
cmpsl
fnstenv
or
dec
sub
fstps
sbb
lret
sub
testl
mov
sti
sti
or
add
cmp
into
xchg
faddl
mov
jge
xchg
fistpl
push
add
cmp
test
push
repnz
pop
cli
nop
pop
sti
push
negl
fadds
and
into
or
push
mov
sub
sbb
aad
xor
icebp
sub
add
add
jne
mov
std
out
sti
or
clc
cmp
idiv
sub
hlt
clc
add
lods
hlt
gs
cmp
or
xchg
pop
or
adc
or
push
fdivrp
cmp
test
rcr
pop
pop
pushf
loopne
js
cmpsb
std
jle
xor
inc
icebp
jae
pop
data16
clc
std
or
pop
cmc
bound
push
or
lds
push
insb
pop
inc
jno
push
xchg
stc
xchg
dec
call
mov
adc
push
loope
stos
cmp
sbb
fists
or
ficompl
sub
pminsw
push
push
sti
and
or
push
cmp
fstps
or
maskmovq
imull
and
adc
out
sbb
mul
lods
clc
loopne
stos
pop
push
push
add
popf
pop
enter
std
pop
shl
fdivrp
adc
popf
pop
popf
cli
leave
cwtl
jae
testb
stc
or
repz
or
inc
or
dec
xor
cld
shrb
add
psllw
and
daa
sub
add
cld
sti
push
ds
or
mov
cmp
in
sbb
or
movsl
add
add
or
inc
dec
sbb
mov
add
and
mov
std
sub
pop
fisttps
sbb
cmpsb
sub
fwait
inc
jle
pop
aad
and
adcb
cwtl
clc
add
dec
popa
outsb
sarb
sbb
ss
lock
xor
jmp
std
adc
jae
bound
push
dec
mov
movsl
roll
sbb
sar
or
les
mov
pop
nop
call
sub
fdivr
push
jle
imul
inc
roll
arpl
rorb
or
out
jbe
or
rolb
xor
fmulp
sahf
or
sti
mov
rcrb
inc
aad
ficompl
cmp
add
imul
cli
std
mov
bswap
dec
cmp
push
add
imul
test
xchg
add
push
mov
push
pop
cmpsl
add
mov
lret
test
rcrb
mov
pop
xchg
dec
rorb
insb
lcall
jne
push
xchg
or
pop
inc
adc
pop
pop
js
inc
insb
stos
or
pop
test
xor
ficoms
aam
dec
mov
data16
decb
push
adc
add
push
dec
repnz
xchg
mov
addb
mov
sarb
ljmp
es
push
outsl
fstps
or
cmp
out
and
and
leave
and
addr16
jle
xor
repnz
or
or
aaa
pop
xchg
mov
mov
push
popa
sti
call
data16
pop
and
insl
mov
jb
stos
dec
add
repnz
jae
lods
movswl
sar
hlt
xor
or
xor
cmp
mov
fisubrl
add
or
fbld
dec
sbb
mov
out
cmp
jmp
jo
movsb
std
in
or
inc
lea
jle
add
push
pop
int
push
add
mov
xchg
gs
jbe
cld
lret
out
or
lcall
push
enter
add
pop
or
and
mov
js
fmulp
cld
rclb
push
and
or
push
inc
add
scas
inc
in
inc
or
sbb
fiadds
decl
adc
xor
sub
sbb
lcall
pop
jecxz
testb
daa
sbb
add
sub
adc
push
pop
rolb
or
add
movsb
das
clc
sub
sub
int3
dec
mov
icebp
cs
add
in
cmc
clc
scas
mov
popf
push
and
mov
push
movsb
jno
sahf
rolb
add
pop
adc
fcmovbe
lahf
mov
cld
andb
repnz
push
cmp
test
stos
add
inc
add
ja
fucomi
enter
fisubs
fcompl
and
dec
jle
cli
cmc
and
pusha
pop
pop
out
sbb
fiaddl
add
incl
outsl
sbb
mov
int3
repnz
add
or
dec
sub
ds
lahf
mov
cwtl
out
pop
ljmp
mov
aam
add
arpl
lea
loop
add
and
outsb
sub
pusha
imul
jg
sti
mov
icebp
or
and
mov
push
pop
xor
outsl
or
push
add
cli
in
lret
std
jno
pop
fwait
nopl
mov
iret
cwtl
mov
mov
leave
aaa
cmp
les
aaa
cmp
or
clc
loop
mov
fimuls
mov
inc
xor
adc
outsl
sbb
out
ds
lahf
push
sahf
pusha
push
adc
sbb
add
addr16
sub
test
mov
and
add
dec
cs
addb
adc
inc
in
ljmp
xor
orb
push
je
test
push
sub
ss
pop
push
push
ljmp
fucomip
xchg
ret
cmpl
inc
or
adc
ficoml
push
std
sbb
and
fdivr
add
xlat
lret
jp
add
aas
out
test
ret
mov
cmp
int
frstor
adc
scas
icebp
add
dec
out
or
dec
rorl
scas
sbb
push
arpl
sub
inc
sub
mov
inc
arpl
pop
push
cmp
nop
and
rolb
lds
push
out
lods
mov
fisubrs
xlat
sarb
data16
fucomip
mov
fs
cwtl
push
inc
xor
mov
push
out
cmovnp
cld
mov
cld
cmpsl
fstps
out
xor
adc
jecxz
pop
in
add
push
sarb
int
rclb
jecxz
push
scas
mov
loopne
or
clc
mov
jecxz
or
rcl
sarb
cli
stc
and
insl
loopne
ficomps
clts
es
ror
popa
loopne
fs
ds
xor
xor
ljmp
sbb
out
sbb
pop
mov
cmp
js
mov
push
lret
call
test
stc
das
testb
xchg
sub
in
jmp
das
loopne
push
xor
into
push
lret
push
mov
cwtl
or
addb
sub
push
sub
ljmp
adc
pop
or
jb
jae
pop
pop
std
push
add
jp
cld
mov
cltd
add
xor
ss
sub
punpckhdq
std
pop
sub
inc
lea
call
sub
cmp
or
xchg
ljmp
hlt
jmp
lcall
mul
sarl
dec
lcall
sar
push
loopne
outsl
dec
jg
jle
push
test
hlt
fbld
daa
stc
and
xchg
stc
dec
dec
cmpb
sahf
sub
jecxz
aad
insl
sar
mov
outsl
or
inc
adc
or
dec
mov
cld
hlt
or
cwtl
xchg
int3
test
aas
cltd
loopne
inc
push
push
jmp
jb
or
cmp
out
rorl
ficompl
jnp
mov
adcb
or
mov
adc
clc
out
pop
lcall
cs
in
push
popa
ficoms
insl
dec
dec
clc
aam
fisttps
push
mov
or
adc
jecxz
int3
das
sbb
clc
loopne
ljmp
inc
push
mov
stos
fnstenv
mov
ss
dec
mov
mov
and
lret
adc
xchg
cmp
xchg
add
jae
sar
hlt
loopew
cmp
xor
push
xor
pop
jb
dec
add
dec
bound
inc
xor
daa
jnp
cld
push
add
std
push
std
movb
xchg
push
inc
and
add
test
jb
cmp
push
into
insl
enter
add
aas
gs
sub
inc
push
gs
inc
shll
push
aam
scas
fadds
cmp
mov
in
ret
stc
adc
cli
dec
push
xchg
push
or
mov
dec
push
add
icebp
pop
mov
mov
or
xchg
sbb
inc
shrb
pushf
insb
mov
push
sub
loopne
jmp
pop
mov
pop
adc
or
sub
js
push
xor
cmp
and
psubusb
pop
nop
insl
push
mov
clc
sub
jecxz
sub
dec
test
pminub
pop
in
adc
lods
pusha
dec
repz
add
or
shlb
int
add
sub
cwtl
dec
into
jno
mov
sar
add
int3
stos
out
mov
imul
out
sub
pop
out
xchg
xchg
loop
test
idivb
mov
sub
jno
add
jnp
into
add
adc
cs
or
test
sbb
lea
addr16
nop
popf
mov
loop
add
cmp
ds
ds
mov
inc
or
jmp
xchg
rcr
movsl
push
pop
ficompl
insb
jmp
xor
popf
in
sbbl
loope
pop
inc
xchg
in
pop
pop
out
stos
outsb
lret
cmpsb
imul
jb
frstor
jno
sbbl
into
xchg
dec
lea
and
jb
in
mov
pop
fs
adc
out
rorb
pop
push
jae
mov
data16
mov
addr16
daa
inc
xor
push
pop
xor
out
adc
pop
and
mov
add
inc
pop
push
insb
fnstcw
jg
psubusw
dec
jb
mov
pop
sti
or
push
push
rcrb
scas
push
aam
jg
fs
or
pop
adc
testl
fimuls
insb
pop
dec
push
repnz
int3
pop
add
add
std
dec
xor
dec
adc
sbb
enter
fcmovu
pop
ror
outsb
xchg
push
lock
push
insb
dec
lds
add
hlt
mov
push
sub
fwait
pop
sub
std
pusha
or
aaa
sub
lcall
xchg
fcmovbe
push
or
mov
xchg
xor
daa
dec
or
mov
enter
xchg
and
pop
jb
inc
push
sub
popf
rorb
cli
pop
mov
pop
test
add
loope
std
push
lods
out
popf
add
sti
jecxz
sti
cltd
call
adc
stos
inc
es
cli
add
cs
sti
dec
xor
mov
jmp
sub
sub
test
dec
push
mov
or
inc
insb
and
add
jae
pop
pop
mov
cmp
mov
dec
add
lea
inc
mov
std
mov
add
adc
repz
icebp
repz
push
push
add
push
and
stos
adc
pop
jmp
cli
not
call
into
test
inc
mov
or
jns
inc
clc
and
stos
or
mov
loop
and
lcall
add
aas
shll
rorb
out
xor
push
dec
push
inc
add
frstor
push
xchg
fimull
shlb
or
fdivr
pushf
xor
push
pop
rcrb
decl
jp
scas
stc
xor
pop
fcmovbe
pusha
pop
popf
aad
push
dec
in
sub
faddl
sub
pop
into
xor
fwait
adc
mov
add
mov
pop
push
push
push
inc
sbb
nop
jns
cwtl
or
push
decl
sub
loop
dec
bound
clc
shrb
sahf
clc
ljmp
lock
add
adc
xor
testb
xlat
adc
sahf
ficoml
push
dec
fimull
aas
lret
adc
or
or
adc
mov
xchg
pop
lea
lods
mov
insl
cmpsb
ljmp
mov
or
ret
call
or
and
lods
out
pop
icebp
xor
sub
fmulp
inc
in
ret
cmp
fidivs
pop
or
lret
add
mov
jmp
cs
cli
pushw
push
xchg
xchg
xor
mov
or
incb
xor
and
push
pop
add
or
test
mov
xlat
xchg
add
lods
or
add
das
mov
sub
push
aas
add
cli
or
xlat
pop
js
daa
inc
adc
loop
sub
aaa
in
adc
pop
jnp
lcall
lret
cli
nop
jns
imul
fmuls
mov
jg
cs
nop
push
ficomps
icebp
mov
repnz
push
xchg
inc
pop
mov
int3
loop
aad
test
fbstp
and
out
pop
inc
pop
rcrb
lret
insl
aas
adc
xor
ljmp
adc
stc
dec
xchg
mov
and
pusha
jmp
xchg
es
sahf
hlt
lea
int
add
subb
push
push
dec
and
xchg
imul
inc
push
inc
cli
inc
or
xor
add
dec
dec
add
fimull
push
das
data16
sti
stos
sbb
dec
repnz
add
aad
inc
loop,pn
sbb
outsl
push
je,pn
pop
or
lahf
jl
inc
outsl
cmp
jne
pusha
in
fimull
or
pop
push
or
aaa
nop
lret
loop
cmpsl
inc
jmp
imul
add
xchg
sub
adc
ja
sub
and
add
dec
and
ja
mov
lret
stos
scas
mov
leave
lea
pop
shrb
cmp
mov
or
in
lea
push
xchg
dec
and
movl
addl
loopne
stc
es
xchg
jecxz
sti
push
out
inc
pop
mov
insb
aaa
push
insb
push
shrb
adc
or
jnp
incl
sahf
jle
pop
or
pop
sub
test
int3
or
sub
cmp
or
push
addr16
cmp
mov
jnp
enter
adc
and
or
xchg
or
pop
push
add
ds
je
xchg
sahf
or
xor
push
jno
fwait
outsb
xor
xor
aaa
sub
fstpl
sahf
inc
or
gs
mov
sar
shr
cmp
add
inc
push
pop
sub
je
les
xor
jle
push
jp
pop
push
push
out
into
cmp
in
sbbl
add
bound
sbb
ficomps
mov
sub
mov
incb
jp
cwtl
cmp
incl
mul
or
repnz
cmp
lcall
push
add
out
push
cld
rorb
pop
mov
pop
popf
sub
push
fisubrl
xchg
rcl
adc
and
pop
push
sbb
mov
xchg
in
xor
out
mov
rorl
cmp
pop
popf
loop
jp
add
xchg
jno
inc
mov
das
fisubrl
pop
push
or
dec
loope
dec
mov
and
adc
jp
dec
inc
xor
jecxz
loope
mov
xor
mov
push
cli
or
imul
rcrb
xlat
push
popa
push
jle
test
xchg
push
dec
arpl
inc
cmp
aam
arpl
push
loopne
push
mov
bound
fldl
sti
dec
pop
sbb
inc
jbe
or
int
inc
loopne
incb
pop
cmp
cld
inc
pop
dec
dec
out
fldl
rolb
pusha
insw
pop
jnp
lcall
cmp
jl
insl
jnp
arpl
into
gs
pop
sti
dec
push
pop
scas
arpl
xchg
int
std
sti
lods
xor
dec
dec
iret
mov
push
lret
add
lods
jns
fisttpl
cmpsl
adc
adc
fwait
pop
es
xor
and
cmp
jo
adc
lret
repz
dec
inc
sbb
into
dec
outsl
int
inc
dec
xor
and
imul
scas
dec
push
lcall
push
lret
das
fldt
add
push
data16
lret
mul
adcb
lret
push
in
in
cwtl
add
xchg
adc
nop
jg
and
jae,pn
mov
or
mov
xchg
mov
out
rorb
repnz
je
pop
adc
mov
or
or
xchg
mov
add
shlb
jb
jecxz
mov
sbb
jne
shlb
in
lret
fists
or
push
xor
into
xchg
loope
add
clc
inc
sub
loopne
inc
lret
test
mov
sub
cmc
add
xchg
push
dec
imul
stos
fimuls
lock
daa
dec
pushf
es
in
xchg
cmp
mov
push
es
fs
fimuls
enter
push
pop
aad
pop
mov
jnp
outsl
mov
aad
frstor
icebp
mov
js
es
rolb
sub
xor
xchg
and
cmp
xor
test
lcall
cli
mov
push
sar
ficompl
or
jle
add
fdivrs
cwtl
mov
imul
push
add
jbe
or
pusha
dec
out
mov
test
into
loopne
aad
test
es
cmp
mov
fiadds
adc
jne
push
in
push
lahf
xchg
enter
imul
jae
inc
ficompl
scas
cmp
pop
jg
mov
or
xor
scas
jae
pop
push
pop
rcr
jmp
scas
testb
in
xchg
xor
lcall
pop
lcall
incb
cld
ficoml
adc
fdivrl
and
cmc
hlt
push
add
sub
cmp
adcb
push
cmp
pop
xor
into
cmc
sub
imul
jl
out
shr
fldenv
out
sarl
xchg
cld
in
test
in
inc
ljmp
fsub
cmp
mov
pop
lret
inc
pop
shr
push
xor
daa
jecxz
add
mov
fs
jle
mov
lahf
xlat
testb
sub
add
fs
or
loop
inc
stc
xchg
fisttpll
ljmp
jecxz
dec
sub
or
ljmp
mov
std
inc
sahf
pop
scas
dec
sub
das
imul
sub
push
shrb
and
mov
enter
or
std
add
mov
add
imul
adc
mov
jge
int3
frstor
inc
sar
and
add
push
or
std
hlt
pop
add
cmp
xor
mov
push
jecxz
les
int3
aam
sbb
addr16
sub
jp
addl
cmp
or
push
mov
and
loope
loop
in
add
jae
data16
fisttpl
xchg
cmp
pop
dec
dec
and
xor
repnz
push
lahf
mov
hlt
sbb
arpl
sti
push
das
mov
cli
xchg
jae
pop
gs
bound
add
pop
xor
ss
or
sub
cltd
leave
or
jae
pop
aam
pop
rcrb
mov
call
xor
mov
jmp
xor
pop
pop
dec
mov
cmp
cli
adc
or
mov
ljmp
cwtl
testl
dec
cli
loope
cmc
incl
add
mov
stos
push
test
into
add
lods
mov
je
fiaddl
inc
ds
inc
mov
stos
or
mov
inc
rorb
mov
sar
out
add
dec
inc
mov
mov
loop
aad
sbb
add
jg
lock
jg
arpl
dec
mov
mov
nop
insl
xor
popf
out
pop
sbb
lock
push
out
insb
xlat
adc
sub
adc
add
sub
imul
push
inc
lcall
stos
jp
sub
sti
arpl
xor
sar
or
or
rcll
jne
cmp
adc
pop
rcrl
mov
push
or
cld
aas
insb
lods
adc
stos
dec
sbb
jp
adc
mov
or
mov
dec
jle
in
pop
out
pcmpeqd
adc
pop
cli
in
add
sub
shll
mov
xor
arpl
or
mov
pop
push
into
cwtl
xchg
mov
stos
sbb
rol
bound
push
out
rcr
pop
sahf
rorb
fisttpl
cltd
and
clc
inc
pop
hlt
nop
in
add
xor
jae
jmp
rcl
mov
pop
pop
push
shrb
sbb
push
push
test
cwtl
mov
movsl
sbb
dec
in
inc
dec
adc
sub
adc
xor
mov
sub
push
push
xlat
pushl
dec
add
sub
dec
das
jb
enter
insl
dec
ljmp
dec
or
push
xchg
cmp
aad
sahf
add
pop
addr16
popf
add
and
push
psubd
pop
dec
jg
js
repnz
inc
bound
clc
ficomps
clc
inc
pop
add
cmp
je
sbb
pop
inc
adc
les
pop
dec
mov
loopne
inc
add
inc
insl
push
mov
daa
lret
pop
sub
cmp
addl
fucomip
mov
xchg
cmp
scas
hlt
jmp
jb
arpl
into
adc
jp
sub
inc
clc
loop
inc
push
ret
mov
mov
fimuls
aam
mov
test
lcall
loop
pusha
loopne
adc
add
data16
incb
dec
or
jp
repz
jecxz
push
hlt
out
jb
cmc
hlt
jle
push
pop
mov
idivl
or
and
push
sub
xchg
call
add
mov
adc
cmpsb
aad
daa
jg
daa
dec
pop
or
shrl
sbb
addl
nop
and
push
pushf
fcomip
xor
fldl
and
arpl
imul
and
jo
or
ja
fwait
js
push
pop
jge
pop
clc
icebp
or
mov
cmpsl
or
icebp
xor
mov
insb
push
movsl
ret
push
jo
dec
das
or
jge
pop
ljmp
xor
in
cmpsb
add
pop
lock
popa
test
and
mov
pop
pop
add
or
pop
or
mov
lret
sub
pop
adc
lahf
int3
dec
sub
push
or
xchg
fnstsw
dec
fmuls
add
adc
adc
jae
mov
xchg
outsl
and
mov
dec
lahf
lret
cmp
push
dec
scas
mov
push
mov
lcall
loop
dec
pop
lret
outsb
and
push
repnz
scas
loop
dec
pop
and
jecxz
lcall
add
ds
test
or
imul
or
nop
mov
rclb
pop
add
je
push
lret
xor
mov
repz
cli
adc
jge
mov
fisubs
loope
sub
jle
pop
or
adc
push
fldt
mov
push
cmpb
lcall
xor
in
data16
dec
out
rcrb
jle
pop
jecxz
imul
pop
or
es
sarb
nop
fistpl
addl
xchg
add
cli
clc
inc
dec
push
decl
enter
ds
fldt
ss
pop
or
ds
add
insb
arpl
pop
aad
sti
xchg
jge
daa
xchg
pop
sbb
jae
pop
jne
sub
xchg
outsb
or
ljmp
dec
arpl
test
pop
push
sbb
sbb
mov
push
sub
inc
sub
data16
and
stos
pop
sub
adc
ljmp
push
push
stc
xor
repnz
mov
cmp
popa
loopne
adc
mov
mov
lds
scas
mov
and
daa
and
repz
and
xchg
cmpsb
sub
pushl
sbb
fisubrs
sub
fidivrl
push
xchg
outsb
add
xchg
mov
scas
mov
or
int
and
xor
shlb
xor
ficomps
cli
std
pop
jl
push
push
jo
add
and
inc
or
fistpl
aad
sbb
insb
cwtl
push
stos
cmc
sahf
loop
xchg
adc
imul
aas
loop
add
std
pushl
call
icebp
xchg
fiadds
lahf
mov
leave
xor
or
out
adc
arpl
movsb
or
dec
and
fidivl
sti
imull
pop
subb
mov
sahf
fwait
clc
or
cld
prefetch
pop
lret
fidivl
repz
aam
jae
xchg
push
ljmp
lods
jg
mov
pop
push
lret
test
jbe
sub
jae
lcall
into
mov
test
pop
mov
ljmp
shll
cli
push
inc
imul
and
mov
ljmp
icebp
xor
test
dec
dec
incl
pop
push
dec
push
cmp
clc
leave
in
xor
cmpsb
jo
scas
and
loope
add
and
and
pop
ljmp
pushl
add
stos
sbb
pop
mov
sub
cwtl
into
adc
pop
adc
popa
mov
jbe
jge
clc
lcall
push
test
lods
lret
xlat
push
pop
cmp
popa
xchg
add
inc
dec
in
add
mov
gs
dec
cmp
imul
icebp
rolb
dec
jge
inc
in
push
divb
loope
dec
sub
loope
and
mov
lcall
loop
jne
push
icebp
or
push
and
pop
pop
sub
shl
mov
cmc
push
cmp
insl
pop
mov
scas
mov
push
push
movsl
adc
sbb
or
mov
jnp
jle
cli
cli
mov
lcall
mov
fwait
enter
fimull
inc
sarb
pop
int
add
repnz
shrl
pop
xchg
cmp
minps
int3
sahf
mov
cld
dec
and
jae
rcll
mov
cmpsb
add
adc
sbb
jb
imul
inc
sbb
pop
mov
mov
inc
xor
aam
push
adc
lock
fimuls
movsl
ljmp
mov
mov
adc
sbb
pusha
nop
jbe
mov
or
pop
push
mov
jl
jg
push
xchg
push
decl
push
add
add
pop
sbbb
into
inc
jo
rorb
mov
gs
in
mov
mov
nop
mov
push
adc
insb
push
test
sub
outsb
sbb
pusha
inc
add
mov
or
or
or
arpl
inc
inc
negb
rorl
pop
inc
inc
jae
cmp
or
cmp
dec
rcl
cli
jmp
inc
rcl
in
jmp
dec
out
sub
lahf
or
xor
cmpsl
lock
jg
xor
xchg
arpl
into
xor
dec
shl
into
push
add
sub
mov
xor
jp
fidivl
jne
and
mov
mov
sbb
inc
mov
push
shlb
pop
sbb
mov
mov
mul
out
lahf
mov
sbb
dec
mov
das
and
out
cli
cld
movsb
out
ret
in
jo
mov
movsb
cmp
sbb
push
or
lahf
sub
and
lods
xor
ffreep
in
cwtl
into
push
mov
stc
sub
inc
out
stos
jecxz
pop
sub
fisttps
in
scas
jle
push
push
inc
cmp
lret
sub
inc
or
outsb
in
and
or
lcall
jnp
ljmp
mov
pop
dec
movsb
stos
loop
popa
pop
mov
rolb
push
aas
in
ljmp
and
rorb
rol
inc
lds
repz
lret
mov
out
out
ret
cmp
ret
jo
lahf
add
adc
movb
insb
aad
or
fmul
adc
repnz
mov
pop
push
loop
xor
movb
xlat
push
pop
xchg
dec
mov
pop
mov
dec
sub
and
or
rorb
lret
mov
xor
shlb
cwtl
fwait
repz
dec
add
nop
stos
in
cmp
lock
cmp
adc
and
clc
dec
int3
in
mov
into
push
cmp
cmpsl
push
mov
cmp
push
lret
xlat
lret
fildl
inc
mov
sbb
cltd
push
sbb
or
movb
xlat
jo
scas
xor
xor
cmp
fxch
sahf
add
call
sbb
jb
jbe
add
pushf
inc
mov
repnz
lret
pop
rol
xchg
adc
inc
fs
into
decb
jle
in
int3
je
ja
clc
add
sti
adc
lock
stos
in
xchg
mov
loop
xchg
es
jle
mov
outsb
inc
mov
dec
aas
mov
sbb
fdivr
cli
mov
lret
cli
mov
mov
ret
cli
jp
aas
push
int
inc
xor
mov
enter
leave
inc
rcr
lret
adc
lret
xchg
aas
int3
enter
push
into
fcoms
iret
sub
enter
out
fcomp
lret
scas
notb
fidivrl
xchg
enter
pop
popf
shl
dec
mov
xor
fcoms
stos
int
inc
mov
mov
mov
inc
fdivrs
and
rcr
inc
inc
out
ret
cli
into
les
stos
push
aaa
kmovw
out
jbe
push
aas
enter
leave
es
lret
cli
lret
repnz
int3
enter
inc
inc
into
cmpsb
or
sarb
jp
rcr
rolb
fcom
cli
xor
aas
sbb
aad
add
inc
loop
xlat
cli
mov
aaa
fxch
jp
pop
inc
fcmovnu
inc
cli
fsubl
aas
add
fdivrp
out
fbstp
aas
loopne
mov
mov
jecxz
jb
mov
ss
sti
mov
and
mov
neg
mov
fadd
cli
shrb
xchg
xlat
jb
jb
cs
cmp
inc
cmpsl
ret
xchg
es
shrl
push
inc
push
jb
cli
stc
cs
cmpsb
into
cmpsl
ret
xchg
mov
cmp
lcall
jns
jp
push
cmpsl
fsin
cs
push
push
push
repnz
xchg
aam
xlat
insl
push
aas
sar
ficoml
and
aam
xlat
jb
outsb
stc
cs
cmp
push
and
cld
cmpsb
cmpsl
ret
xchg
ficompl
in
inc
incb
out
leave
lds
dec
pop
int
inc
xor
mov
out
fidivrs
mov
push
inc
push
xchg
sbbb
cmp
cmp
in
outsb
cmp
mov
cs
out
cmp
fisubl
shll
add
sarl
xchg
aam
xlat
jne
inc
stc
cs
adc
shrl
push
inc
push
push
push
cmpsl
fstps
xlat
cmpsb
add
xacquire
outsb
xchg
aam
xlat
push
push
cmpsl
fldenv
cs
inc
fisubl
and
cld
cmpsb
cmpsl
ret
jb
es
mov
jle
xchg
aam
xlat
jb
dec
stc
and
inc
cmpsl
fldenv
and
cmp
repnz
es
mov
inc
out
leave
ljmp
push
jecxz
push
inc
in
xor
in
aas
out
repnz
inc
call
sahf
testb
aas
jle
jmp
pop
in
inc
inc
fsubr
cli
and
aas
push
enter
icebp
je
repnz
aaa
repz
incb
cli
negb
test
push
inc
stc
fadds
cli
cli
ljmp
cli
mov
mov
sti
jp
ficompl
add
fadds
cli
push
add
dec
add
fdivrp
add
ret
cmpsb
cli
push
xchg
aas
pop
int
inc
or
pop
cli
or
or
sub
or
adc
fdivr
cli
or
ret
cli
cmpsb
std
mov
adc
outsb
adc
dec
enter
adc
push
fcoms
pop
inc
mov
cld
cli
sbb
ficompl
inc
sbb
dec
cli
sbb
sbb
pop
incb
inc
and
out
cli
and
aas
and
mov
sti
fsubs
andb
dec
daa
inc
xor
sub
sbb
aas
push
enter
sub
fsubrs
scas
cli
cli
sub
xchg
das
inc
xor
dec
cli
xor
aas
xor
push
fidivl
incb
inc
xor
ljmp
mov
stc
mov
cmp
push
aas
dec
enter
cmp
sbb
cmp
out
aas
in
fadds
cmpsb
clc
cli
inc
xchg
inc
enter
incb
inc
fsubrs
cli
inc
push
aas
inc
enter
inc
dec
fdivrs
testl
push
dec
inc
dec
fmuls
sub
push
enter
push
inc
fcoms
mov
aaa
push
enter
inc
push
fmuls
push
cs
push
enter
repnz
pop
fcomp
cli
pop
mov
cmc
mov
pop
inc
fcomps
dec
pop
aas
sub
pusha
fimull
popa
inc
ljmp
mov
aaa
fs
incb
cli
addr16
aas
push
es
push
or
imul
insb
enter
mov
repz
jle
aas
enter
jb
fdivs
push
je
dec
jne
ljmp
scas
repnz
js
mov
jns
outsb
inc
jp
dec
cli
jnp
aas
jl
sbb
jge
add
fsubr
cli
jg
aas
add
icebp
mov
addb
cmp
test
dec
enter
incb
cli
cli
mov
loop
mov
fmuls
lock
mov
fimull
fadds
xor
nop
enter
testb
xchg
mov
out
mov
xchg
inc
jb
xchg
cli
push
cwtl
aas
ss
lcall
pushf
aas
ret
fsubs
xchg
fsubrs
mov
sub
mov
xor
fisubl
lcall
test
test
cli
sub
lods
inc
fsubrs
sahf
in
aaa
mov
sbb
bound
fadds
mov
aas
mov
push
fidivl
mov
ficoms
cmpsb
jmp
pop
inc
mov
outsb
fdivrs
ss
mov
cli
ljmp
scas
ljmp
cs
jg
cld
outsb
cli
lds
inc
cmp
inc
fadds
cli
enter
int
inc
lret
jmp
cli
int3
data16
int
push
fcmove
ds
iret
fsubs
cli
rolb
aas
ror
loop
rclb
imul
aam
mov
aad
push
inc
push
fcom
cli
fdivrs
push
enter
fiaddl
fcomp
scas
enter
fcomp
cmpsb
out
ficoms
pop
inc
loope
ds
loop
aas
jecxz
push
out
in
lret
stos
aam
cli
mov
aas
outsb
enter
ljmp
in
aas
add
in
in
fsubr
cli
lret
scas
in
lock
jle
repnz
repz
aas
hlt
enter
and
fadds
cli
imul
aas
clc
enter
mov
in
sti
cli
xchg
aas
enterw
incb
fdivr
cli
push
add
dec
add
ljmp
xchg
enter
jecxz
add
fsubs
pop
dec
aas
or
fimull
push
inc
or
add
or
aas
or
into
fimull
lcall
adc
data16
adc
fcoms
cli
sub
aas
push
enter
fcoms
cmpsb
loope
pop
decb
cli
sbb
sbb
cmp
sbb
aas
sbb
inc
inc
pop
mov
andb
enterw
and
fsubs
adc
aas
test
fcmovu
sub
fsubrs
sahf
sub
aas
sub
pop
inc
xor
inc
cli
xor
aas
xor
push
fidivl
incb
inc
xor
ljmp
scas
fidivrs
cmp
push
aas
dec
enter
cmp
fdivrs
idivb
fcmovb
aas
ds
movl
aas
inc
enter
ss
inc
fcoms
cli
inc
cli
aas
inc
enter
inc
inc
dec
cmpsb
dec
cli
mov
jb
dec
fimull
dec
inc
xor
dec
cli
adc
out
dec
fidivrl
fcmovnb
push
fdivs
push
push
aas
mov
pop
cli
push
mov
fcmovu
mov
sahf
mov
fcmovb
incb
rcr
cli
ret
ret
enter
adc
inc
cmp
fnstcw
enter
aas
inc
enter
dec
inc
add
int3
cli
out
aas
lret
fsubs
mov
fsubs
rorl
ror
sub
sar
adc
fdiv
cli
aad
aas
enter
add
xor
jp
push
fiaddl
fcomp
cli
and
aas
or
fstp
repnz
fiadds
fcomp
cli
ret
cmpsb
aaa
loope
mov
loop
sbb
jecxz
aas
in
dec
xor
fcoms
cli
out
aas
call
mov
aad
jmp
xchg
aas
push
in
fimull
out
inc
sub
out
cli
or
aas
out
enter
repnz
cli
repz
aam
hlt
enter
push
neg
push
cli
divl
aas
clc
enter
incb
fsubr
cli
sti
lret
stos
sarl
incb
fdivr
cli
dec
push
aas
cs
decb
inc
repnz
cli
fimull
aas
mov
sarb
or
push
aas
bswap
xor
adc
sbb
fadds
cli
adc
aas
adc
lret
cli
stos
sarl
pop
cli
push
aas
dec
enter
sbb
fcomps
cli
repnz
ror
sbb
ds
and
and
fisubl
push
inc
and
push
cli
and
aas
and
cli
scas
iret
mov
sub
subb
push
sub
dec
sub
fsubrs
out
das
inc
lret
cmpsb
into
cli
aaa
cmpb
enter
decb
cmp
sub
cmp
aas
cmp
out
fidivrl
ss
scas
int
aas
xchg
aas
inc
incl
pop
cli
inc
inc
aas
inc
enter
sbb
fadds
cli
inc
repnz
inc
enter
mov
int3
dec
fdiv
mov
dec
xlat
jb
dec
push
aas
dec
enter
push
inc
dec
fadds
cli
push
out
push
enter
cli
scas
lret
mov
push
cli
push
aas
dec
enter
push
inc
push
fcomps
ljmp
mov
xchg
cli
pop
jp
pop
enter
fadds
pop
es
pusha
enter
ljmp
js
fs
xchg
leave
mov
aas
pop
enter
push
cli
repnz
ror
imul
fsubrs
enter
aas
outsb
enter
decb
ja
sub
js
aas
jns
ljmp
stos
fdivrs
jge
jp
jle
pop
jg
inc
fadds
push
enter
incb
xor
aaa
test
mov
xchg
push
xchg
inc
cli
mov
aas
mov
push
fimull
fdivrs
lds
fidivrl
decb
cli
loop
ds
les
xchg
enter
jb
xchg
fcoms
xchg
xor
xchg
enter
cli
inc
cwtl
fsub
cli
cltd
lret
mov
mov
pushf
inc
fcomps
push
enter
mov
mov
mov
mov
fcomps
movsl
dec
aas
cmpsb
enter
push
inc
test
idiv
test
mov
rcr
cli
jle
aas
enter
scas
inc
xor
mov
adc
fcmovu
mov
mov
sar
jle
cmp
mov
inc
cli
mov
or
fsubr
cli
mov
stos
mov
mov
push
enter
inc
inc
sbb
cli
add
aas
fmulp
fcomp
lret
outsb
cli
pop
ds
or
push
or
dec
cli
or
aas
or
adc
or
fmul
cli
idivb
adc
jle
adc
fcoms
cli
inc
adc
sub
adc
inc
loop
sbb
mov
aaa
sbb
data16
decb
sbb
sub
sbb
dec
ss
pop
cli
lret
cmp
and
xchg
mov
cli
and
and
fisubl
testb
xlat
out
aaa
mov
cmp
sahf
mov
inc
cmp
pop
cli
cmp
aas
cmp
and
cmp
fsubr
cli
aas
lret
leave
scas
mov
inc
inc
xchg
fadds
jb
aas
push
enter
cli
mov
dec
push
cli
cli
mov
adc
fadd
mov
rorl
jle
mov
fsubrs
mov
fidivrl
fdivr
cli
rcr
ror
inc
ret
mov
ret
test
inc
inc
cmp
aas
push
enter
dec
inc
leave
sti
mov
lret
fadds
int
dec
fcmove
xor
fcoms
cli
idivb
xlat
enter
enter
fwait
mov
xchg
mov
fdiv
data16
mov
out
call
mov
fcom
mov
mov
mov
ret
fadd
cli
inc
les
es
adc
cli
repnz
leave
fsubrs
mov
fsubrs
int3
inc
aas
int
sub
into
decb
inc
fcomp
repnz
fimull
inc
ffree
lcall
aas
enter
in
es
cli
push
out
repnz
call
xchg
mov
ljmp
in
add
push
mov
out
aas
in
enter
lret
fidivl
aas
mov
incb
mov
add
mov
adc
cli
mov
sarb
enter
inc
inc
inc
ret
fdiv
sbb
xlat
repnz
rolb
cli
mov
mov
enter
aas
cs
outsb
sahf
incb
idiv
mov
mov
lods
dec
dec
jb
mov
inc
sub
mov
loop
rcr
inc
inc
sahf
lods
dec
add
jle
enter
cmp
sbb
enter
loop
sti
lods
fcmove
cli
cmpsb
stos
dec
cmpsb
cli
or
pop
enter
stc
testb
xchg
xchg
cmc
outsb
mov
fsubr
es
push
mov
push
xchg
hlt
aaa
xacquire
lds
inc
cmpsb
mov
inc
mov
mov
not
ss
sub
mov
sub
cmp
xchg
or
cld
xor
mov
sbb
sub
pop
and
push
adc
fistpll
sti
cmc
add
or
add
stc
adc
repnz
shll
fistpl
add
adc
fs
xchg
aaa
inc
or
sub
dec
and
jl
scas
xlat
iret
pop
xor
push
insl
mov
sbb
sub
jns
sbb
xchg
mov
pop
sub
sbb
stos
je
mov
lods
outsl
sub
add
fildl
push
add
add
into
and
ret
sub
rcr
stc
repz
rcrb
sbb
fsubrl
and
and
and
sub
jbe
loopne
stos
push
sub
lret
lcall
xor
adc
add
cli
loopne
ret
insl
mov
xchg
sub
das
fistps
hlt
out
sbb
cs
adc
push
adc
jp
inc
push
or
add
xchg
ljmp
in
mov
push
negl
or
mov
sbb
xorb
push
enter
fsts
pop
adc
mov
mov
mov
idiv
es
inc
fsubs
xchg
lods
mov
out
es
mov
inc
das
mov
push
idivb
aaa
push
es
shlb
roll
test
inc
mov
les
cmpxchg
ja
xor
sbb
mov
enter
xchg
into
xor
out
mov
shlb
montmul
cmpsb
inc
out
xchg
roll
add
jp
inc
mov
push
data16
xchg
es
mov
push
fisubl
inc
inc
fdivs
push
fsts
fucompp
out
neg
filds
frstor
push
iret
cmpsb
fimuls
pop
dec
out
std
out
jmp
or
call
scas
je
xchg
fdivr
sbb
sub
pusha
sub
and
and
and
sub
push
and
sub
dec
mov
inc
jg
sti
rolb
add
nop
cmpsb
cmp
inc
mov
mov
aam
inc
scas
add
filds
aam
or
dec
sbb
or
in
add
dec
rolb
add
test
dec
cli
subb
push
pop
fdivr
pop
or
push
std
incb
je
pop
add
pop
loope
pop
adc
jmp
mov
enter
add
rcrl
fistps
push
mov
das
in
sbb
or
sub
aam
pop
fcompl
shlb
and
xor
inc
push
pop
clc
cli
sbb
fcomps
outsb
fiaddl
pop
sahf
mov
std
mov
cld
sub
pop
add
pop
ds
pop
jl
adc
les
mov
frstor
movsl
inc
mov
push
add
jb
loopne
push
mov
add
pop
or
and
loop
subb
out
mov
pusha
cmpsb
jle
and
ficompl
clc
sbb
inc
push
fimuls
dec
sub
and
aam
sub
sahf
xor
dec
lods
clc
jg
sbb
push
lock
incb
lahf
shrb
and
fwait
xchg
push
pop
sbb
push
pusha
in
and
mov
out
add
mov
inc
roll
int
and
and
cmp
jle
adc
sbb
iret
push
scas
mov
in
sbb
jnp
cmp
xor
cmc
cmp
and
popa
xchg
add
clc
es
dec
jbe
add
movsb
sahf
inc
dec
cld
mov
cwtl
and
repz
clc
out
mov
out
dec
sbb
and
rcll
push
lret
rcr
arpl
decb
lea
repz
enter
mov
xchg
dec
pop
stos
fadds
push
popa
stc
mov
cli
sti
loop
sub
sahf
push
into
cli
loop
cld
jecxz
jmp
pop
scas
js
aaa
mov
xchg
pop
testb
jp
inc
jae
lcall
push
cli
pop
or
lahf
cld
in
lock
dec
add
adc
sub
jecxz
cmp
and
adc
in
clc
push
pop
mov
add
gs
or
adc
cli
nop
dec
sbb
and
xor
xlat
inc
pop
adc
das
outsb
sub
or
and
push
fsts
xchg
testb
das
add
xor
push
pop
pop
push
std
and
mov
sbb
addr16
sub
sbb
jecxz
clc
shlb
and
lcall
leave
out
imul
add
cmp
or
enter
cmc
popf
xchg
add
lods
sbb
push
aas
adc
push
adc
lods
pop
rcrb
sub
add
movsb
cli
adc
sub
lock
jae
pop
or
pop
outsl
nop
in
out
aam
inc
shl
dec
bound
xlat
psubb
or
pop
adc
scas
sahf
xor
inc
xor
jmp
xlat
pop
pop
xchg
pop
sbb
inc
ficomps
popa
stc
testb
push
divb
orb
jo
add
movsb
lock
xchg
outsl
aad
cmp
negb
pop
jbe
mov
testb
aaa
push
sbb
imul
dec
push
adc
xor
imul
or
pop
add
cmp
scas
dec
adc
push
gs
push
addr16
hlt
jmp
scas
jp
jp
inc
mov
mov
jne
data16
out
mov
pop
mov
push
out
mov
addl
push
test
mov
jecxz
into
data16
mov
testb
inc
add
jp
mov
pop
mov
mov
fdivs
cli
inc
xchg
jle
cmpsb
pop
out
mov
inc
fcomps
ficoml
lret
fdivs
mov
inc
cmp
push
cs
aaa
or
dec
lret
test
mov
push
stos
push
mov
xor
mov
aaa
cmp
mov
mov
jo
movsb
out
sti
lods
xor
and
out
int
mov
sub
aam
lods
bound
push
inc
pop
daa
mov
clc
pop
add
mov
dec
dec
aaa
movb
out
movsl
add
in
int
adc
fidivrl
enter
sub
sub
push
mov
add
sbb
mov
std
jmp
and
or
pop
sbb
es
xchg
lret
pop
ror
repnz
hlt
gs
lea
stos
call
xchg
aam
iret
jge
sbb
cli
das
andb
pop
cmp
arpl
clc
dec
inc
cmp
sub
ljmp
mov
ja
cmc
outsb
xchg
mov
push
sbb
mov
sahf
ret
pop
push
xor
pop
jle
cmp
push
sub
fbld
je
pop
dec
jecxz
and
or
xchg
pop
mov
ficoms
pop
je
xchg
cmp
sbb
sub
xor
test
hlt
fwait
out
pop
cltd
add
sbb
pushf
repz
mov
mov
or
jb
icebp
ja
js
nop
inc
repnz
mov
fdivrp
int3
sti
dec
push
xlat
gs
enter
pop
xor
mov
pop
fidivrs
lret
not
xchg
jle
cmp
push
and
outsb
pop
dec
cmp
push
lods
jle
adc
mov
mov
cmp
jmp
add
hlt
and
cmp
push
inc
add
dec
fimull
dec
inc
mov
lcall
add
cs
jl
pop
mov
add
fbld
push
or
call
pop
leave
xchg
pop
les
and
adc
testb
sbb
or
stc
sbb
cltd
fisubl
shrb
sbb
pusha
jns
adc
ds
push
dec
ficomps
mov
test
inc
out
cld
in
arpl
loope
je
negl
or
clc
push
int3
out
clc
adc
loopne
inc
or
fisttps
and
decb
es
dec
or
in
and
push
mov
out
daa
mov
enter
mov
aaa
pop
movzwl
lahf
and
enter
sbb
push
shrb
add
movsb
dec
inc
add
mov
mov
in
imul
ret
pop
stc
int3
or
pop
push
sbb
sbb
fdivs
or
jg
pop
ret
sub
adc
insb
fstp
mov
rcll
fstpt
into
leave
dec
aad
popf
mov
aas
add
dec
imull
in
push
enter
ljmp
lret
into
jle
int3
push
imulb
jnp
adc
lret
fmul
inc
pusha
adc
inc
mov
push
andb
cmp
lret
dec
or
or
insl
dec
pop
sub
jo
cli
js
mov
insl
fiaddl
sahf
cmp
or
pushf
add
adc
mov
adc
sbb
mov
sbb
shlb
or
faddl
aaa
dec
cmp
les
scas
adc
lea
push
fimuls
jp
bound
in
and
incb
rcr
add
ret
add
ret
mov
dec
rcrb
lock
idiv
or
push
lcall
shl
pop
push
mov
inc
and
loop
ljmp
and
std
ret
js
out
jns
adc
xchg
divl
pop
sar
sbb
ljmp
and
stc
add
and
mov
cmp
add
xor
xchg
mov
popa
push
dec
dec
mov
pop
mov
iret
ljmp
test
xchg
mov
mov
inc
xchg
xor
push
mov
cmpsl
addr16
mov
lock
sti
inc
aaa
cmpsb
lds
shlb
push
jo
call
lcall
jg
pop
sbb
mov
push
mov
cltd
roll
cmpsb
aam
xlat
aas
div
sti
dec
xchg
xlat
push
dec
out
mov
shr
mov
xlat
sbb
aaa
iretw
cs
push
mov
and
mov
inc
loop
incb
push
outsb
call
cltd
inc
mov
fsubr
cli
adc
aas
pop
enter
cli
loop
mov
inc
cli
jo
ds
in
fiaddl
es
inc
fsubrs
mov
popa
mov
cmp
fadds
xlat
aas
icebp
enter
decb
jle
scas
fbld
cld
push
and
pop
jmp
mov
ds
fs
ljmp
inc
mov
scas
in
enter
cli
testl
fisubl
addb
mov
mov
cmp
cmp
es
les
lds
shlb
xchg
hlt
cmp
jge
mov
int
stos
out
es
sarb
es
aam
es
jmp
ja
ja
ja
out
pop
mov
adc
sbb
cmp
outsb
in
in
mov
cmp
xchg
es
in
call
out
repnz
repnz
repz
hlt
pop
fcomi
loop
and
lcall
adc
mov
rcrl
pop
pusha
cwtl
cmp
fsts
enter
sub
arpl
lret
jg
movsb
cmp
dec
pushf
and
add
cwtl
or
jnp
xor
add
dec
stos
push
loop
or
jnp
icebp
jecxz
adc
lret
xor
mov
clc
jecxz
lret
or
mov
div
jecxz
adc
stos
sahf
sti
add
pop
sub
addr16
and
mov
push
ror
lret
sub
cwtl
addr16
adc
jle
test
or
shlb
jae
subl
dec
xor
repnz
lcall
jecxz
push
arpl
rol
add
xchg
cmp
pushf
jp
loop
sub
sbb
fiaddl
cmpsl
or
ljmp
sarl
outsb
ficoms
rcll
inc
ja,pn
sub
pop
pop
mov
sub
ret
shlb
jnp
test
aad
or
sbb
movsb
and
pop
addb
push
mul
mov
or
stc
pop
pop
out
or
mov
adc
adc
fstpl
push
cld
fisttpll
dec
and
cld
fisttpll
mov
aam
frstor
fwait
pop
arpl
call
add
stos
cwtl
in
xchg
adc
not
int
rolb
loope
clc
into
ds
jle
out
int3
cmp
and
push
or
or
and
sub
dec
mov
daa
mov
fdivr
inc
jne
int3
lods
push
cmpl
mov
adc
pop
mov
into
adc
sub
adc
int3
hlt
repz
mov
fcmovu
adc
sbb
xchg
sub
int
or
adc
outsb
imul
js
mov
mov
pop
pop
mov
bound
imul
cmc
shlb
dec
sbb
jbe
mov
jnp
loopne
pusha
push
fstpt
dec
mov
mov
cmp
dec
pmullw
adc
shll
push
jne
pop
sub
push
ret
dec
pop
push
jl
push
mov
push
mov
aam
add
lret
mov
sbb
enter
cmpsl
mov
rclb
popa
mov
mov
aas
mov
fsubs
and
rolb
pushf
and
mov
jmp
mov
icebp
jae
or
adc
cli
into
jne
les
add
cli
add
or
test
lsl
mov
mov
mov
pop
sbb
and
mov
inc
mov
xchg
int3
movl
mov
mov
repz
jae
mov
ja
jae
push
ss
jg
jbe
test
mov
popa
shlb
shrb
jo
jno
mov
jne
ret
mov
shrb
ret
sub
es
ret
fs
mov
push
imul
mov
jge
popf
jnp
cmpsb
mov
jg
pop
mov
add
push
ds
cwtl
pop
jns
lea
mov
jle
cmpsl
pop
sbb
push
in
js
pushf
mov
ficomps
adc
je
ret
aad
sub
or
cmp
gs
loop
cmp
mov
inc
shlb
scas
mov
mov
jns
or
cmpsb
dec
fcomps
lahf
call
push
fcom
xor
mov
dec
mov
idivb
idiv
push
inc
add
inc
jns
cli
or
ret
aad
stc
adc
sbb
and
cld
repz
xchg
mov
fadd
fldt
fadd
int
cli
leave
jg
les
mov
mov
shr
mov
mov
dec
into
imulb
adc
pop
popa
jo
mov
mov
add
jae
mov
pop
ret
adc
outsb
sbb
mov
stc
cli
add
mov
rcr
cli
add
rorl
hlt
aad
loopne
mov
inc
or
rcrb
xlat
cmp
push
sti
aaa
add
fwait
jbe
loope
hlt
add
enter
xlat
shll
jecxz
mov
iret
ret
add
push
scas
sahf
ret
push
aad
ljmp
fiaddl
fisttpl
push
cs
outsb
in
adc
sbb
jnp
mov
sub
sbb
sub
fcmovb
mov
dec
sti
mov
repnz
sbb
and
push
lret
add
jecxz
dec
fimull
subl
sbb
mov
pushf
fcomp
or
or
mov
fsubrs
addr16
mov
fnstcw
sbb
cli
lea
adc
xor
push
je
mov
in
cli
pop
push
aas
aaa
enter
popf
ds
fadd
aam
in
add
aas
inc
enter
cli
mov
mov
or
and
aas
pop
enter
cli
loopne
mov
imul
fbstp
out
or
inc
jp
mov
repnz
aas
enter
xchg
inc
scas
mov
fcomp
cli
notl
aas
aaa
enter
pop
xor
mov
mov
push
sub
jmp
pushl
xor
jg
sbb
fldt
sbb
inc
imul
lods
es
lds
aam
and
add
xchg
fstpt
or
shlb
pop
or
or
mov
loopne
mov
lret
pop
jns
mov
add
xchg
ret
stc
notl
dec
notb
pop
into
jle
loop
xchg
movb
sar
jp
sti
into
cld
out
imul
mov
xchg
adc
jp
imul
mov
cs
sbb
hlt
add
cli
fistpl
push
pop
mov
es
scas
jnp
bound
mov
inc
into
lret
test
adc
mov
into
fldl
or
ficoml
mov
push
stc
adc
into
mov
mov
push
aam
sbb
push
out
cs
clc
shlb
mov
or
sar
mov
add
or
push
lods
pop
mov
repnz
shlb
jle
cli
iret
push
repz
leave
inc
lock
out
and
adc
repz
roll
ljmp
pop
or
sub
sub
mov
push
sub
test
sarb
sahf
mov
iret
lahf
aas
push
rorb
cmp
jl
lahf
pushf
jnp
loope
cli
cmp
or
mov
lahf
popa
or
mov
push
or
push
lds
fnstcw
jp
popa
cmpsb
pop
mov
sub
pushf
sahf
inc
sti
je
test
sub
mov
ret
push
scas
xor
or
rorb
sahf
and
testl
repnz
sahf
repz
test
xchg
ret
adc
jle
dec
mov
inc
jp
lods
lret
jge
mov
sub
xchg
pusha
pop
jl
ret
lock
or
adc
jge
lahf
xor
aas
bound
jns
cs
inc
shrl
repz
push
in
and
inc
and
xor
fidivl
ficomps
xor
aaa
ret
cwtl
fildl
adc
push
push
mov
mov
into
xor
ljmp
fiaddl
sub
sahf
repz
push
xor
push
call
ret
jmp
jne
lret
jnp
lret
cwtl
cmp
fidivrs
cmp
lret
loop
div
push
mov
mov
jno
popf
movl
mov
lcall
adc
jge
loope
loop
inc
lret
jl
outsl
mov
jmp
fsubrs
dec
jmp
loopne
add
ljmp
sbb
cmp
sbb
cmp
pop
enter
clc
adc
add
jmp
jns
adc
or
sub
idivl
sarb
pop
inc
ja
filds
or
jo
fs
outsb
push
mov
minps
or
dec
cmpsl
lods
fs
sahf
call
or
mov
aaa
mov
ss
into
jge
xchg
fwait
mov
xor
jo
cmp
mov
lds
mov
mov
cmp
lea
push
gs
ficompl
outsb
jg
enter
jo
inc
dec
js
xchg
lret
adc
jge
adc
mov
lods
push
jno
gs
mov
or
clc
aaa
jp
dec
js
xchg
add
cmp
icebp
pop
fcomp
dec
add
mov
std
pop
fistl
push
jbe
push
mov
cs
push
loopne
adc
sahf
aad
cli
fadds
or
ret
jns
push
mov
pop
pop
inc
cmc
push
arpl
xchg
add
fs
sahf
in
jo
push
inc
fdivl
push
sbb
out
push
xchg
xor
loopne
cmpb
ret
inc
mov
out
mov
aam
xor
ljmp
inc
mov
pop
enter
insl
stc
hlt
pop
ret
je
sbb
data16
xor
mov
jo
lcall
out
or
mov
sub
aas
and
js
push
call
jge
repz
sahf
add
cmp
inc
nop
movb
cmc
pop
sahf
push
fildl
inc
int
mov
lret
inc
add
pop
jmp
testb
add
stos
adc
cmp
orb
xlat
xchg
lret
inc
mov
clc
in
imull
push
mov
dec
fiadds
push
pop
sub
or
mov
cmp
xchg
out
adc
add
enter
mov
sarb
out
ret
push
jle
pushl
in
cmpsb
push
mov
lahf
das
push
decl
mov
pop
push
enter
push
fld
ficomps
ret
inc
cmp
mov
iret
fisubs
out
sub
lret
out
adc
inc
lret
mov
push
mov
cmc
mov
fmull
pop
xchg
xchg
and
or
shr
outsb
pop
rcrb
ficoml
decl
pop
jmp
pop
add
jmp
dec
inc
lcall
mov
jle
dec
jg
call
inc
pop
jae
mov
jmp
lret
jbe
or
xchg
flds
xchg
fxch
xchg
mov
mov
and
bound
inc
xchg
inc
xchg
and
jle
sbb
and
fcomp
jle
sub
lret
inc
jle
sahf
adc
push
inc
and
sub
das
testb
mov
dec
xor
jne
or
mov
mov
fidivrs
shl
dec
cmp
push
jmp
mov
pop
xlat
out
test
xchg
pop
je
pop
movsb
faddl
mov
fdivs
mov
lret
notl
fwait
loopne
or
mov
sub
aam
jnp
cli
ficompl
inc
fs
or
sahf
cltd
mov
xchg
repz
add
sbb
sahf
aad
jle
js
mov
push
mov
ret
into
xchg
stc
mov
inc
dec
mov
xchg
or
or
nop
jge
push
mov
mov
cli
cmpsb
xchg
loopne
pusha
push
stc
cmpsl
fistpll
sbb
sub
mov
out
cmpsl
mov
mov
sub
pop
or
jno
dec
out
sub
lods
push
adc
fdivrl
adc
loop
loop
sarl
sahf
xor
xchg
sub
mov
lock
cmp
sahf
fdivrs
lcall
mov
xchg
push
data16
push
cmp
add
cli
mov
pop
fistpl
or
mov
xor
add
adc
cmp
rcrl
cmp
cmp
fldlg2
jbe
int
std
in
scas
sbb
shr
adc
das
rol
jmp
push
ds
in
jb
js
aad
mov
fistps
enter
lea
dec
cmpsb
cli
mov
dec
rcr
in
mov
icebp
jns
mov
aam
cmpsb
fistl
adc
sbb
negb
enter
iret
sbb
xchg
in
popf
cmp
insb
inc
std
mov
mov
cmp
or
xchg
int
leave
mov
outsb
out
out
idivb
sbb
jnp
sahf
adc
sub
mov
movsb
pop
or
fs
mov
ret
in
inc
cmp
outsb
pop
ret
into
mov
call
imull
in
xchg
sub
in
jge
mov
rcrb
add
mov
push
leave
jecxz
jnp
clc
xlat
scas
inc
inc
push
add
outsb
pop
sarl
sub
mov
mov
lret
add
cld
sarl
std
shrb
ret
lcall
ret
mov
sub
ficompl
inc
push
test
sub
rclb
data16
cmpsb
test
clc
rclb
inc
push
pop
adc
sbb
test
movaps
jge
push
rclb
lret
jmp
cmp
fmull
inc
popa
ljmp
roll
mov
add
pop
fimuls
daa
mov
xor
push
sti
in
sbb
cld
mov
add
mov
or
mov
xlat
fisubrl
fdecstp
lret
cmpsb
or
icebp
popa
out
aad
sbb
push
xchg
adcb
add
or
push
or
push
fs
or
fwait
das
pusha
mov
aas
fldt
jmp
inc
or
xchg
dec
test
lret
sahf
clc
pop
dec
cld
push
negl
sbbb
inc
mov
ret
jp
mov
dec
loope
sbbb
shll
in
mov
lods
mov
jbe
les
sub
or
add
cli
ja
cmp
sbb
dec
sbb
mov
pop
push
or
jge
cltd
jmp
cwtl
idivl
dec
into
jmp
cs
xchg
pop
int3
sahf
psrlw
rcl
call
push
mov
adc
jecxz
sub
mov
or
cmp
push
mov
cli
loop
movsb
push
push
jg
movsl
sbb
mov
jp
adc
lret
mov
popa
push
mov
les
loop
into
dec
test
xchg
xchg
mov
psadbw
js
xchg
aam
xor
mov
mov
push
mov
cltd
jg
les
xor
ret
jae
repz
in
mov
mov
cmp
inc
scas
sahf
pop
rcrb
or
leave
lret
addl
mov
inc
lret
into
fisttpll
aas
push
sub
mov
mov
mov
cmp
jge
cwtl
sub
cmpsl
outsb
and
adc
aas
mov
mov
xchg
mov
push
stc
sbb
adc
jae
mov
mov
push
fsubp
jle
ds
outsb
pop
jecxz
sti
adc
cld
adc
pop
ss
xor
sub
xor
xor
jo
inc
dec
lds
sbb
xor
mov
push
push
xchg
or
pop
leave
call
fsts
pop
xlat
cli
mov
fcmovnb
dec
cmpsl
push
cwtl
jno
loope
fisttpl
out
push
sbb
mul
ret
cmp
aas
mov
jns
cmp
jle
or
jnp
push
call
adc
jb
loopne
pop
sub
mov
out
jo
add
mov
add
or
decl
or
lds
aad
sub
imull
into
icebp
ljmp
jno
mov
mov
or
jle
jg
sub
adc
dec
adc
inc
mov
xorb
pop
and
mov
mov
fisttpll
in
mov
negb
or
aaa
pop
repnz
dec
loopne
push
cli
cli
sti
stc
sbb
add
stos
jle
push
push
clc
and
cli
push
out
es
dec
jae
inc
sub
or
mov
ror
loopne
dec
into
sti
push
inc
push
push
ret
sahf
jp
nop
mov
icebp
loop
lret
sbb
int
in
data16
dec
xchg
pop
repnz
cmp
outsb
xlat
jb
push
xchg
pop
in
push
xchg
jbe
mov
pop
sbb
outsb
push
add
inc
jo
aad
shll
mov
aaa
sub
scas
clc
loope
int3
fnstenv
push
sahf
pusha
aad
mov
rol
or
iret
mov
or
cmp
es
mov
jle
sbb
lret
cmpsb
jle
sbb
loop
xlat
notb
cli
fucomi
cs
cli
or
sarb
mov
add
cwtl
ss
xlat
mov
xlat
adc
xchg
lret
xlat
push
and
sbb
xlat
bound
cmp
data16
stc
inc
xlat
data16
dec
addr16
pop
rcl
inc
mov
pop
push
push
and
movb
sbb
out
clc
mov
and
stc
xlat
push
cmpsb
addr16
and
test
ds
daa
lret
xlat
push
fisubrs
int3
stc
push
jle
ljmp
inc
cmpsb
ds
jbe
into
mov
mov
ret
clc
sbb
iret
push
mov
sub
iret
ret
clc
cmp
sub
xlat
outsb
dec
insl
mov
clc
xchg
xlat
pop
jp
fidivs
fdivrs
xchg
push
ret
clc
jbe
push
xor
xor
clc
push
xlat
andb
pop
adc
xchg
jp
xor
idivb
pop
xlat
mov
cmp
mov
cmp
mov
shrb
mov
fs
xchg
jle
sbb
fsub
int3
xlat
es
pop
call
push
cmp
dec
sbb
add
xlat
jbe
cli
sbb
rol
ds
shll
and
xlat
push
aas
cli
fucomip
mov
inc
cmp
sarb
ds
shl
inc
fisubs
push
out
ret
jmp
mov
mov
sub
xchg
lock
fsqrt
es
loop
popf
iret
push
faddp
pop
push
push
jnp
push
sarb
outsb
sbb
cmp
cmpsb
fnstcw
out
pop
sbb
into
cli
mov
aas
lcall
stos
into
cmp
jle
add
xchg
outsb
fbld
rolb
lret
movsb
rol
pushf
outsb
cli
ficompl
inc
int3
stc
nop
xlat
xchg
idivb
cmpsb
pcmpeqb
mov
fcoms
xor
aas
pop
ret
cld
xor
xchg
mov
cmp
and
cli
pop
pop
xchg
outsb
js
scas
lret
aas
int
ficomps
mov
imul
cmp
ss
ljmp
jl
iret
inc
leave
inc
adc
xchg
dec
faddp
pop
xor
clc
cmc
repz
dec
cmp
cwtl
mov
rcrl
ds
sbbb
hlt
sarl
cld
ljmp
adc
sub
xlat
insb
jne
cmp
and
sahf
pop
cmp
ret
add
inc
stc
movb
xchg
mov
cli
fiaddl
pop
mov
cmp
out
push
inc
sub
jecxz
xadd
clc
mov
leave
mov
add
cmpl
xor
cmp
mov
pop
xor
cld
mov
push
sbb
add
pop
inc
cmp
sahf
cwtl
enter
pop
loop
mov
sahf
clc
sbb
loop
aad
jne
mov
int3
shlb
sti
idivl
fidivl
rcl
dec
cmc
stc
fisttps
push
or
enter
add
fstps
dec
xchg
push
sbb
cld
out
ret
mov
out
mov
rol
inc
stc
push
mov
lea
push
sbb
mov
jb
inc
xlat
jo
inc
jp
xchg
sbb
push
out
mov
xchg
mov
inc
cmp
mov
xchg
jb
sbb
lcall
cli
add
mov
mov
ljmp
inc
clc
into
push
xchg
cs
cmp
push
mov
push
mov
xlat
cmp
mov
in
xor
cmp
mov
idiv
mov
fs
or
sbb
mov
dec
inc
inc
ds
test
add
outsb
or
sbb
or
insl
inc
cmpsb
sarb
or
xchg
out
pop
mov
push
push
mov
mov
or
or
mov
jge
test
push
cmp
xchg
xlat
xchg
lcall
inc
movsl
shlb
inc
cmpsl
ret
mov
sbb
mov
clc
sbb
mov
out
fmul
jbe
clc
dec
jle
cli
rcr
negb
mov
push
sahf
stos
mov
mov
movsb
decb
mov
fbstp
pop
dec
mov
pop
sub
outsb
mov
xchg
pop
shlb
or
fcomps
out
or
cs
or
and
enter
enter
cwtl
out
loopne
cmp
push
mov
lret
lods
cmpb
sahf
mov
cmp
mov
pop
mov
clc
xor
testb
cmp
push
push
mov
cmp
inc
sub
fcomps
dec
mov
push
xor
pop
loop
mov
dec
inc
sahf
sub
loop
cmp
pop
ds
imul
xlat
pop
mov
int
hlt
jb
icebp
push
aam
mov
push
sub
sub
cmpsl
adc
dec
pop
imulb
dec
addr16
lds
jl
or
outsb
pop
mul
inc
inc
xchg
sbb
lret
sub
pop
inc
dec
lcall
mov
xor
stc
rcl
or
lods
int3
sti
rorb
push
sbb
jmp
out
popf
sub
sahf
ffree
in
dec
dec
adc
shrb
mov
dec
mov
push
frstor
pop
push
pop
mov
ret
cmp
repz
xchg
mov
test
inc
lds
sahf
roll
fmuls
decl
dec
xchg
jle
mov
out
divl
loop
mov
loop
push
or
sahf
push
pop
fisttps
jmp
jbe,pt
fstl
dec
or
lds
dec
mov
ljmp
adc
pextrw
es
push
mov
xchg
enter
clc
dec
movb
dec
mov
repnz
sub
aad
jmp
jmp
xchg
mov
xor
fldt
mov
les
mov
sub
xor
fsts
jge
add
in
push
or
in
fiadds
adc
dec
pushl
mov
adc
idivb
lds
adc
repz
sub
push
pop
mov
iret
mov
push
sti
mov
clts
dec
add
pop
mov
sahf
pop
call
ret
xor
sbb
fisttps
mov
mov
sbbb
xchg
push
pusha
ret
aas
add
jl
leave
lds
mov
gs
inc
mov
icebp
fstps
cmp
shrl
lret
xor
lcall
jne
dec
xor
loope
lcall
and
loope
push
test
cmp
xor
push
pop
or
push
mov
add
in
sub
and
add
sub
sahf
lcall
aaa
roll
roll
or
jmp
out
push
cmpsb
sub
sbb
mov
xlat
sahf
dec
test
lret
add
push
jle
cld
ss
icebp
test
pop
push
sbb
shlb
mov
cli
jns
pusha
clc
lret
pop
push
lret
xchg
cmp
ss
and
cmp
enter
jb
add
sahf
lea
mov
clc
movsb
ficomps
rorb
ret
pushf
in
lret
or
leave
insl
scas
pop
jmp
cmp
jbe
dec
ja
in
jg
add
xlat
into
mov
and
vcvtsi2ss
sbb
and
popl
dec
test
inc
loop
mov
dec
sub
xor
aas
sti
dec
xchg
xor
js
mov
cmp
shrl
int
in
ljmp
cwtl
jmp
xlat
div
push
push
repnz
shll
ljmp
mov
cwtl
cmp
xchg
mov
dec
fcmove
mov
adc
cmp
add
pop
js
dec
js
aas
das
lahf
jge
xor
aas
dec
push
push
push
out
pop
faddl
jae
xor
clc
ret
jb
stos
test
mov
into
icebp
subb
les
shlb
sbb
div
jo
aad
icebp
orl
fucomi
or
sub
xor
cmp
jne
sahf
aas
jle
dec
push
aaa
lods
clc
dec
jmp
sub
mov
insl
add
movsl
loop
shl
cld
mov
or
jb
adc
mov
jne
sbb
clc
mov
push
shr
sub
pop
push
aas
es
insl
leave
fmulp
inc
fiadds
adc
aaa
std
lret
sub
mov
add
shlb
and
es
or
unpcklps
mov
mov
out
lret
mov
pop
popa
inc
popf
add
fsubr
rorl
jl,pt
dec
mov
jbe
loopne
icebp
scas
jno
test
in
out
adc
jb
aas
lds
or
data16
mov
or
push
imul
pop
mov
mov
outsb
lret
sub
loop
repz
icebp
pop
xor
pop
lret
movsl
call
in
ret
dec
in
cmp
scas
lods
xchg
rcl
lods
fincstp
or
sahf
in
jmp
ljmp
xlat
push
fidivrs
mov
xchg
inc
test
jle
jnp
sbb
fadds
or
shrl
mov
cltd
inc
pop
or
fldl2t
cmp
leave
arpl
enter
inc
mov
cli
xor
mov
dec
cmp
lods
lret
pop
add
rcr
xchg
lcall
mov
stos
movsb
mov
das
push
sub
xchg
xlat
in
jb
and
cmp
adc
pop
jne
test
ds
jmp
xchg
leave
pusha
fcomps
push
adc
dec
hlt
cmp
inc
outsb
enter
mov
aam
jae
mov
mov
and
pop
inc
imull
lret
xor
shrb
jo
pop
push
movd
pop
test
ljmp
push
ss
loopne
ljmp
inc
pusha
push
jnp
mov
fistl
ja
mov
push
sub
xchg
inc
adc
std
xchg
mov
sbb
inc
andb
jle
daa
sub
test
add
or
or
dec
mov
jl
ljmp
adc
or
cmp
lds
push
aad
add
inc
cmp
add
xchg
sbb
movl
mov
xchg
lods
ss
nop
cmpsl
pop
rorl
pushf
iret
out
xchg
cmp
mov
fdivr
jnp
outsb
jo
inc
cli
gs
idivb
stc
dec
xlat
into
movb
cmp
jle
cs
push
mov
xlat
sbb
hlt
or
jl
mov
sbb
push
call
fdivrs
out
mov
in
rol
jno
mov
cmc
jns
dec
mov
fsubs
cmp
xlat
nop
ds
mov
cli
jp
pop
outsl
ret
stc
xlat
push
pop
jle
cli
dec
call
xchg
mov
mov
xlat
and
ds
sbb
fmuls
into
mov
mov
jmp
push
cli
loopne
cs
aad
push
cmp
lret
mov
mov
mov
leave
lcall
cmp
mov
out
jge
cli
jb
sub
fcomps
mov
xlat
inc
inc
cmp
fdivs
iret
scas
js
and
ret
cmp
clc
stc
inc
push
push
mov
jmp
int3
aas
insl
sbb
outsb
call
inc
fcom
xchg
mov
mov
iret
retw
jne
xchg
inc
push
adcl
rcrl
call
jle
adc
dec
jg
pop
push
xor
and
cmp
jecxz
stc
sub
iret
cli
push
mov
std
push
add
out
add
into
stos
mov
std
xchg
sub
xlat
jnp
sahf
mov
stos
aad
push
ret
out
cmpsl
iret
pop
pop
add
pop
fs
and
ret
aaa
mov
gs
lea
mov
mov
jp
sbb
je
jg
fsts
loop
push
mov
mov
pop
or
loop
repz
xor
adc
adc
and
in
lcall
testb
sahf
sbb
pop
lods
mov
imul
enter
outsl
out
mov
icebp
test
mov
sbb
jno
call
cs
adc
test
or
sbb
mov
cmp
cmc
out
xchg
mov
mov
imulb
into
xor
cmp
add
mov
dec
js
data16
push
inc
daa
push
stc
rol
sbb
cmp
popw
and
xlat
push
sub
cs
xor
out
pop
mov
lods
mov
mov
mov
dec
add
int3
cli
dec
add
loop
push
and
adc
int3
pop
xor
inc
cli
bound
cli
xchg
inc
cli
push
inc
cli
outsb
out
lret
cld
cmpsb
fdivs
push
fdivrs
ret
jle
push
movl
fldl2e
mov
inc
xchg
fstps
xchg
flds
sahf
lret
jle
inc
jb
cmpsb
dec
xchg
loop
stos
inc
lcall
mov
lret
jo,pt
or
int3
lock
cli
int3
cli
mov
adc
cmc
jp
inc
cli
lret
sti
into
ja
ret
push
ds
scas
enter
cmpsb
rol
loop
xchg
sbb
in
rcrl
ljmp
xchg
iret
repnz
movl
push
into
ds
clc
mov
fadds
jbe
test
aas
pop
dec
push
ds
cmpb
xchg
push
cmpsb
inc
sti
sbb
or
fadd
movsb
iret
es
sub
loop
inc
add
push
outsl
iret
mov
jbe
das
cmp
sub
inc
in
ss
add
int3
cli
ds
test
mov
inc
in
ds
inc
push
dec
cli
shr
push
ficoml
sbb
mov
out
enter
enter
enter
enter
enter
enter
enter
int
aam
sbb
sbb
fisubl
sbb
xchg
enter
enter
enter
enter
cli
push
aad
stos
fidivl
sbb
mov
pop
jg
dec
xchg
int3
mov
ds
inc
mov
cwtl
cld
ss
xlat
loop
inc
into
in
idivl
or
int3
fcom
or
xor
and
fidivrs
xchg
int3
loop
inc
into
out
inc
xlat
cmp
ljmp
loop
repnz
xchg
add
cli
aas
mov
push
clc
dec
cmp
into
or
lds
daa
lret
mov
outsl
xchg
sbb
inc
ret
ljmp
test
lret
push
lcall
divb
dec
jnp
or
js
jne
fldenv
push
int
mov
xor
out
adc
shl
pusha
fwait
into
adc
lds
lea
stos
pop
mov
lahf
ljmp
loope
mov
ljmp
fiadds
call
jb
mov
lret
enter
lea
jno
mov
fidivrl
add
sarl
dec
cmpsl
fucomi
jne
dec
sti
outsb
lret
jne,pt
sbb
stos
cwtl
test
push
sbb
lcall
inc
jns
xchg
testb
push
mov
shlb
pushf
cmp
enter
mov
add
cmp
add
pop
and
or
iret
push
insl
aaa
ss
repz
add
push
mov
pop
fisubrl
jp
push
sub
cwtl
shr
mov
aas
es
add
rcrb
jbe
inc
loopne
mov
xlat
push
inc
xchg
or
imul
sahf
repz
dec
test
call
daa
fcmove
stos
lods
mov
xchg
mov
lods
xchg
sub
add
cmp
pop
mov
jbe
mov
add
in
ja
add
push
in
pop
ror
add
mov
orl
clc
xchg
sahf
out
adc
push
jle
ljmp
dec
scas
loopne
lret
sbbl
xchg
or
nop
cmpsb
and
into
xor
push
fs
jl
ljmp
in
addr16
in
sti
out
or
out
or
lock
icebp
push
inc
out
sub
dec
pop
int3
test
arpl
insb
xchg
jo
fwait
push
pushf
cmp
add
mov
lret
jg
mov
ror
loop
rcrb
push
xchg
movsb
notl
or
add
xchg
fidivrl
fmuls
push
inc
aaa
imul
lret
mov
xor
out
roll
out
lret
shlb
idiv
rolb
or
mov
aas
mov
cli
pop
sbb
cli
rcl
cmp
sarb
dec
enter
sar
or
mov
ljmp
add
mov
jge
sbbl
and
in
fadds
out
and
out
pop
jno
pop
or
mov
adc
sti
out
int3
push
jle
mull
mov
sahf
ffree
add
or
cmp
into
mov
cmp
mov
sahf
lahf
add
dec
out
mov
lea
jb
jl
dec
mov
lret
adc
xor
add
pop
out
or
mov
and
clc
sbb
pop
cmp
stos
movsl
lcall
xchg
daa
dec
pop
lods
lcallw
ficomps
jge
adc
jo
fimull
xor
out
in
mov
fcomps
out
sahf
lret
movsl
jno
mov
inc
fdivrl
and
mov
data16
std
fidivrs
fs
add
cltd
mov
push
sahf
push
sti
mov
and
fucomip
push
sbb
xchg
mov
push
add
in
cmp
iret
dec
jno
mov
jnp
ret
int3
cli
leave
shll
lea
shl
lods
dec
jle
in
pushf
stc
inc
inc
gs
push
jp
movsb
sub
out
push
cs
jne
filds
mov
pop
rolb
neg
pushf
mov
xor
mov
sub
js
ds
and
sarb
fwait
ret
xchg
jle
or
jle
or
push
dec
cmp
test
sub
scas
mov
xor
push
ja
repz
nop
fcmovnbe
cltd
inc
add
add
imul
into
sbb
negb
sbb
lret
or
aad
or
add
into
popa
and
adc
std
push
repnz
sub
inc
scas
orb
mov
mov
jge
aam
xchg
pop
add
push
sbb
ret
mov
cwtl
fcmove
cli
xchg
arpl
adcb
pop
into
int3
mov
invd
mov
mov
imul
sbb
mov
sbb
mov
xor
mov
ret
into
aam
cmp
xlat
loopne
ucomiss
pop
aam
clc
xlat
push
mov
das
lods
bound
ret
mov
loopne
pop
js
leave
sbb
into
rclb
dec
pop
push
push
inc
ds
scas
inc
sarb
xor
fidivrs
stc
push
xor
mov
in
lret
jg
fildll
cli
test
lcall
fnstcw
repz
inc
add
rclb
cld
pop
fstps
inc
pop
imul
inc
dec
inc
push
fcmovnu
inc
mov
loop
out
int3
loop
leave
fidivrs
fiaddl
fcom
cli
into
lret
lret
push
xchg
insl
push
or
jbe
scas
in
movsb
imul
int3
adc
mov
mov
push
fwait
aad
ret
or
inc
inc
add
or
cmp
lahf
aam
mov
pop
fdivrs
lock
jbe
mov
xchg
sub
inc
xor
js
sahf
test
cmpsb
loope
sti
ficoms
inc
scas
fsubr
push
into
pop
shrl
sti
xlat
hlt
testb
sbb
push
fidivrl
dec
jb
stos
aad
push
ret
mov
movsl
fcomps
push
fdivl
push
adc
mov
frstor
hlt
add
cmp
lods
ret
scas
sahf
cmp
push
arpl
dec
or
into
mov
adc
aas
sbb
or
or
or
repz
xchg
push
add
mov
inc
adc
popf
or
in
adc
jne
ret
stos
js
and
les
cmp
out
lret
adc
jbe
fnstenv
mov
xor
rol
ret
mov
push
fidivl
out
or
or
xor
repnz
jns
fdivs
js
sub
lods
fnstenv
stc
push
adc
mov
xchg
sub
sbb
jmp
aad
outsb
pusha
mov
call
add
sahf
andl
ljmp
cmp
nop
pushf
stc
add
pop
mov
shl
push
mov
push
sahf
mov
pop
push
xchg
test
or
inc
js
pop
dec
dec
push
movsl
add
test
dec
mov
ds
fisubl
jb
mov
outsb
pushf
inc
xor
sti
mov
lds
sbb
jbe
sub
iret
lret
repz
subb
mov
mov
mov
mov
cli
mov
mov
pop
mov
sahf
fsubr
inc
mov
in
loop
pop
popl
lods
stc
mov
addr16
add
out
pop
or
jle
clc
lahf
pop
fcmovb
decb
sbb
fs
inc
rol
fwait
jle
adc
mov
mov
fwait
dec
cli
ret
xlat
popa
repnz
inc
lret
push
or
cmp
out
sub
mov
add
imul
dec
out
jmp
lods
mov
push
xlat
fmul
ds
leave
mov
arpl
sbb
jl
mov
jns
sub
sbbb
mov
and
es
push
leave
dec
sub
jecxz
imul
push
or
xorl
dec
sbb
sub
xor
mov
pop
out
mov
fistl
xchg
xor
jp
pop
mov
add
sbbl
out
iret
sub
pop
mov
xchg
push
pop
mov
das
mov
dec
push
lcall
jno
out
ja
xchg
jl
enter
das
jle
enter
and
aam
test
jl
adc
fwait
add
aaa
cltd
mov
dec
loopne
mov
mov
inc
std
lret
lds
fwait
popf
mov
imul
es
popf
fcoms
stos
xor
sub
mov
and
hlt
add
insb
sbb
inc
loope
dec
mov
lcall
inc
pop
divl
or
pop
mov
fistpl
cmp
in
cmp
pop
inc
pop
data16
test
setle
dec
sti
push
or
shrb
and
inc
push
mov
jae
mov
sub
add
push
mov
rolb
mov
ret
inc
adc
orb
xor
dec
fnstcw
rcrl
adc
shlb
sarb
shlb
or
cmc
push
inc
insb
mov
cmp
outsb
cmp
sub
or
adc
sahf
clc
jge
fcmove
ror
aam
mov
jbe
mov
js
shrb
dec
aad
aaa
mov
push
ficomps
movsbl
test
mov
mov
add
add
cmp
jp
cmpb
fadd
clc
sahf
sub
in
xor
sbb
or
and
hlt
int3
sub
test
xchg
cmp
stos
call
repnz
or
faddp
cmp
fstps
scas
aas
scas
xchg
loope
leave
hlt
pop
and
xlat
xchg
rorb
mov
sub
aas
jl
es
nop
xlat
ret
lds
xor
adc
and
sub
je
shll
mov
or
pop
and
rcll
sti
xchg
xor
dec
or
lret
aad
popl
lret
into
mov
test
adc
push
jp
jl
cmpsb
and
cld
test
mov
jmp
dec
gs
ljmp
dec
pop
call
inc
sbb
or
sarb
loope
leave
push
rcl
mov
dec
ds
ret
mov
lods
loopne
pop
sbb
pop
push
out
lds
add
inc
xchg
or
jge
out
test
sahf
ljmp
cld
fnstsw
or
fdivs
add
mov
add
cmpb
es
mov
inc
inc
push
push
or
mov
sub
clc
cmc
aas
stc
adc
std
es
sub
sub
mov
idivb
inc
ljmp
sarb
inc
or
stc
and
pop
bound
out
imul
int
xchg
lds
inc
lret
push
push
ret
loop
and
cmp
sahf
inc
xor
sbb
jge
out
mov
push
dec
sahf
add
push
push
adc
push
xlat
repz
xlat
add
nop
mov
and
loop
stc
dec
push
fcmove
insb
in
lahf
leave
mov
jne
mov
push
mov
dec
jl
dec
push
push
jg
or
testb
enter
testl
outsb
gs
ret
int3
loope
fimull
pusha
cmp
ret
icebp
cmp
adc
mov
xor
repz
xchg
adc
jge
test
push
push
push
pusha
mov
scas
cmc
and
xchg
mov
ret
cmc
ret
sub
loope
mov
or
xchg
cld
scas
push
fidivl
gs
icebp
in
mov
adcb
sbb
mov
mov
std
lret
mov
cs
aaa
xchg
js
mov
push
cmp
das
data16
xor
and
cmp
icebp
jge
sbb
pop
inc
cmp
lret
mov
mov
mov
jb
ret
imul
enter
mov
jecxz
fwait
xchg
popf
aas
cmp
lret
add
rolb
or
lret
sub
scas
jle
iret
shr
pop
cmc
aaa
popf
fisttpll
xchg
fsubs
mov
sarl
jb
popf
push
pop
add
sbb
xor
dec
xor
scas
aam
subb
repnz
mov
jp
and
inc
adc
or
cmp
hlt
daa
adc
mov
mov
inc
out
mov
pushf
repz
mov
jle
sub
ret
or
push
enter
ret
fsubp
mov
jno
hlt
sub
adc
fsubrs
fcoms
jp
and
rcr
daa
cmp
mov
add
and
js
push
mov
xchg
sub
cmp
out
cmp
loop
add
ds
paddusb
lret
xchg
jle
mov
or
or
out
push
stc
movsb
aas
adc
lret
in
not
mov
mov
inc
insl
xor
leave
or
loop
aas
jmp
imull
lret
fdivrp
dec
mov
sti
insl
mov
jns
adc
stos
xor
mov
outsb
adc
idivb
jg
sbb
cmp
int
fwait
xchg
imul
pop
lret
ds
pop
int3
stos
stc
out
ret
nop
ds
jp
adc
cli
loop
add
pop
test
cmp
pop
test
add
lret
outsb
mov
xchg
push
cld
mov
pusha
or
testb
xor
dec
or
imul
cmpb
aad
dec
mov
mov
pop
push
test
stc
push
testb
enter
fdivl
fisubrl
icebp
leave
jns
js
push
lret
test
fldenv
fsubp
test
jp
sub
cld
rorb
push
adc
add
pop
jne
adc
xchg
push
cmp
cmp
es
adc
jne
dec
xlat
cmc
lret
pop
test
out
or
pop
sbb
mov
repnz
push
fisubrs
dec
dec
jb
push
xor
clc
xchg
or
xlat
es
push
fisttps
add
sbb
mov
clc
cmc
push
popf
jno
xlat
in
and
push
popf
movsb
sub
in
xor
scas
mov
cmp
sahf
outsb
push
scas
add
pop
jae
adc
mov
xor
int
lret
rcrl
xlat
icebp
or
jmp
or
or
fidivs
andl
xlat
arpl
scas
out
rclb
repnz
or
scas
adc
imul
sub
cwtl
jl
aam
js
mov
stos
or
rorb
movsl
cmp
outsb
adc
repz
lret
lret
pop
mov
push
dec
cmp
movsl
jg
cs
dec
jp
mov
xlat
dec
clc
add
lea
loopne
sbb
add
ret
imul
jmp
enter
jl
loope
fucomp
test
pop
pop
mov
mov
test
out
adc
add
ss
sahf
push
outsb
sbb
in
pop
mov
sbb
aaa
stos
out
rcr
sub
sub
inc
jnp
or
pop
mov
sahf
mov
int
mov
in
xor
or
mov
jmp
rorb
jmp
jmp
out
data16
mov
or
jb
dec
leave
imul
dec
cltd
prefetchwt1
jns
out
cmpsl
or
addr16
ror
mov
add
jns
cmp
xchg
clc
ljmp
shlb
xchg
mov
js
sbb
loop
out
inc
xor
loop
das
dec
ss
mov
jg
ja
add
subb
cmp
pop
or
aaa
data16
jbe
in
or
mov
lahf
mov
mov
jo
or
fdivl
cmp
dec
inc
adc
enter
dec
mov
pusha
repz
xor
loopne
es
and
dec
xchg
ror
sbb
xor
shll
push
in
inc
pop
cwtl
cmp
xchg
pop
push
mov
pop
lahf
lret
mov
xor
sub
mov
bound
xchg
mov
push
xchg
inc
fisubs
push
out
stc
cmp
iret
and
fisubl
lahf
push
mov
xchg
iret
aam
adc
sti
insb
jb
xchg
ret
xlat
xorb
lcall
cwtl
pop
jo
scas
insl
test
pop
sahf
icebp
adc
les
pop
idivb
lcall
fimull
fwait
pop
mov
pop
test
scas
mov
mov
lds
fmuls
ljmp
out
fisubrl
mov
jecxz
jns
aas
into
dec
jnp
rcrb
incb
dec
fdivs
loopne
dec
cmp
pop
mov
fdivrp
stos
inc
cmpsb
jle
mov
dec
shll
push
fldt
imul
sbb
xchg
stos
push
push
or
insl
inc
dec
or
fildl
leave
rolb
sahf
popf
loop
stc
inc
xlat
repnz
xchg
fisubrs
xchg
lret
inc
pushf
js
jg
fxch
les
ja
xchg
fadds
add
adc
jnp
rcr
cmp
sub
pop
mov
iret
jnp
dec
hlt
ret
inc
into
xor
mov
ljmp
enter
xor
cmc
frstor
cli
add
nop
sbb
xchg
sub
aas
cli
lret
cmp
int3
adc
inc
mov
int3
push
inc
ror
mov
add
cmp
mov
cmpsb
in
mov
sbb
or
mov
stc
shl
jns
sti
addr16
test
pop
or
adc
dec
cmpsb
in
je
and
rcrl
and
pop
in
inc
add
leavew
or
not
enter
push
push
dec
pop
out
addr16
fisttpll
leave
cmp
pop
shrb
dec
add
fldt
mov
pop
aad
pop
clc
loope
or
shll
push
mov
imul
dec
mov
into
sub
sbb
addl
jle
fldl
sbb
iret
xchg
or
scas
mov
into
push
in
sbb
lds
scas
cltd
pop
mov
sbb
repnz
mov
in
push
mov
leave
and
divl
mov
dec
mov
ljmp
xor
ljmp
push
mov
add
adc
jg
or
push
and
sub
lahf
xor
mull
xlat
xorl
and
jg
movsb
mov
sub
push
ljmp
into
jmp
add
lock
call
add
add
xlat
cmp
scas
sub
mov
sbb
stc
sub
jne
mov
enter
std
cmp
addr16
lahf
jge
cli
xor
js
sub
xor
and
pop
leave
and
add
xchg
or
std
xor
xor
cli
fst
int
jle
sub
ret
in
add
mov
lret
mulps
into
ss
nop
aas
lds
xchg
push
es
fidivl
out
hlt
cld
ljmp
mov
add
sarl
jl
ret
add
sub
out
das
push
pop
rcl
inc
adc
cmp
mov
sbb
mov
fisubrs
in
mov
mov
popl
xorl
aad
sbb
lods
fsubr
xchg
or
loop
fistl
or
imul
mov
mov
sub
pop
dec
or
mov
jp
arpl
sbb
cmp
pop
sub
xor
in
adc
popa
xchg
dec
pop
or
sbb
outsb
icebp
or
xchg
or
out
sub
sahf
ret
adc
xchg
cmp
out
push
and
mov
adc
mov
add
dec
fisubrl
das
sahf
jecxz
mov
test
or
inc
out
jae
add
cmp
adc
cltd
hlt
idivl
push
or
sahf
enter
pop
out
ficoms
fnstsw
xor
gs
inc
lret
pop
loope
in
pop
dec
xchg
mov
clc
notl
push
rcll
scas
adc
stc
adc
or
push
mov
sarb
dec
ret
mov
fistl
idivb
fcmovu
sbb
cmp
popa
repnz
sbb
stos
cmp
xchg
xchg
sarb
mov
stc
add
adc
xchg
fwait
test
jle
sbb
in
scas
xchg
movsl
pop
imul
cmp
or
lahf
ds
jg
and
scas
and
or
cwtl
pop
dec
jle
or
add
enter
pop
dec
mov
add
pusha
add
in
loop
out
test
roll
jbe
sahf
addr16
xchg
bnd
enter
hlt
cmp
mov
dec
push
cmp
jecxz
out
xchg
ds
pop
add
jae
shlb
insb
or
iret
adc
push
fwait
imul
push
jmp
pop
fstps
pop
inc
jp
sbb
jl
daa
ds
into
ds
cmp
push
mov
add
les
xor
dec
into
mov
jne
jecxz
mov
add
out
movsb
outsl
and
enter
pop
fwait
pop
xchg
popf
rorb
xchg
stc
ljmp
fisubl
or
clc
stos
xchg
insl
cmp
lcall
cmp
fisubrs
or
sbb
out
fistl
cmp
ljmp
data16
push
in
cmp
swapgs
fdivrs
pusha
je
inc
testb
xor
jns
subl
cmp
or
mov
mov
cmpsb
jecxz
inc
dec
xchg
xor
enter
and
pop
mov
je
jp
mov
fists
dec
xor
into
repz
shlb
ds
pop
mov
sub
mov
xchg
cmp
imul
fimull
inc
jl
mov
push
and
ja
xor
in
sti
push
fidivrs
out
or
or
mov
mov
mov
in
jb
inc
dec
ss
je
dec
pop
mov
iret
pop
mov
cmp
js
lods
sarb
push
mov
data16
out
jb
add
subl
int3
int3
arpl
rcrb
shll
lds
push
add
inc
add
push
mov
decl
adc
mov
cmp
cld
ja
push
popf
cmpsl
cmp
in
decb
enter
int
sahf
int
arpl
mov
pop
ja
add
inc
ja
jp
lods
daa
aaa
cmp
inc
adc
ljmp
jp
mov
push
into
add
icebp
dec
test
xlat
out
ja
icebp
push
mov
cmp
push
jo
les
mov
fs
adc
sbb
cmp
mov
pop
cmp
cld
stc
jle
sbb
mov
and
pushl
cmp
sahf
hlt
stc
das
cmp
lea
clc
aaa
aam
faddp
rolb
addb
cmp
inc
cmp
rolb
mov
mov
cmp
into
sbb
xor
lods
ds
ss
test
push
lret
inc
fsubs
incl
addr16
inc
ja
pop
and
xchg
sbb
mov
jb
outsl
add
mov
sub
dec
dec
push
rcll
cmp
mov
sub
dec
je
inc
cmp
sarb
add
lods
sti
loope
xor
rorl
sub
jp
xor
cmp
or
inc
dec
dec
push
fldl
dec
sahf
or
xor
lcall
push
or
add
lds
lret
mov
pop
add
aas
incb
inc
stos
jb
cmp
in
pop
out
les
push
lock
into
test
sub
or
mov
mov
lods
shrb
loope
rol
jmp
push
xchg
add
hlt
cld
mov
or
jle
cmpsb
xchg
push
cmp
sbb
out
fadds
mov
cmp
sahf
cld
mov
xor
and
jns
cltd
cmpsb
lret
adc
inc
pushf
int3
mov
dec
stc
xor
jb
loope
add
pop
dec
test
pushf
cmp
jb
or
imul
ds
inc
lret
jge
jb
sbb
dec
loopne
add
mov
xchg
mov
xor
clc
push
fsubp
adc
push
fsubrs
pop
pop
push
ret
mov
inc
mov
push
ljmp
push
pop
inc
jns
xor
cmpsb
leave
insl
sub
ljmp
xor
jo
push
mov
push
jge
mov
mov
inc
sbb
xor
mov
dec
xchg
sub
loop
loope
xor
jle
sbb
subb
gs
mov
pop
push
mov
lods
loop
jp
add
fistps
es
add
xlat
stos
imul
dec
adc
xchg
mov
cmp
aad
sbb
pop
cmpsb
lods
sarb
xor
arpl
pop
pop
mov
loope
rolb
inc
sti
ret
and
js
imul
dec
insb
or
add
test
adc
mov
rol
dec
push
scas
sub
outsb
xor
scas
addr16
das
aam
jae
fisubrs
into
icebp
add
fimull
mov
outsl
and
mov
test
mov
pop
movsl
lea
aas
lahf
xchg
adc
shl
pop
xchg
gs
fsubp
pop
xchg
dec
out
mov
jno
sarl
mov
mov
cltd
xchg
pop
cmp
push
dec
jo
pusha
mov
sub
or
rorb
cmp
add
inc
add
outsb
divb
push
cs
out
scas
dec
mov
mov
dec
xor
xor
dec
std
lods
scas
shlb
mov
insl
dec
lods
xchg
data16
lods
ficoml
xchg
push
pushf
pop
aad
fisubrs
daa
push
rolb
lret
add
ss
int
cmp
and
loopne
fnstenv
cmp
jae
add
dec
sub
psadbw
popa
xor
arpl
cmp
mov
push
jae
push
cmp
shrb
leave
dec
inc
and
xchg
sub
imul
adc
loopne
enter
lcall
rol
sub
jp
imul
mov
sub
cmp
gs
and
push
or
dec
fwait
cmpsl
push
repz
jb
cmp
popf
pop
fcoml
pop
pop
add
ret
dec
adc
pop
fimuls
dec
cmp
pop
xchg
fistpll
and
repz
pop
in
xchg
xor
jb
cmpsl
sub
cli
scas
popf
js
or
xchg
push
fcomp
inc
xchg
lods
mov
mov
adc
call
insb
xor
int3
push
or
push
push
cmp
ret
jbe
into
aad
cld
les
outsb
cmp
in
dec
cs
imul
mov
or
xlat
xchg
std
jge
mov
pop
sub
push
pop
js
arpl
ds
cmp
mov
xchg
push
cltd
mov
sahf
pop
cld
push
mov
sub
xchg
stos
iret
scas
lret
add
stos
pusha
mov
cmp
xchg
pop
outsb
outsb
or
mov
movsl
jbe
movsl
dec
sarl
or
cs
cmp
mov
cmc
je
sub
mov
mov
sub
push
addr16
js
sub
mov
mov
rcrl
in
hlt
cmp
incl
out
mov
mov
test
sbb
dec
scas
clc
cld
data16
pop
scas
bound
daa
jp
jg
jg
jge
xor
repnz
cld
data16
sarw
lock
pop
js
shrb
mov
das
shlb
icebp
sbb
and
push
int3
jae
xchg
enter
mov
jb
roll
adc
mov
mov
test
repz
ljmp
out
movsb
negb
fs
mov
lahf
cmp
mov
or
mov
mov
loop
xchg
xor
sbb
sub
and
lods
cmp
add
outsb
into
add
inc
movl
loopne
adc
jne
scas
outsl
sub
and
test
mov
je
addb
pop
aad
rorl
cmc
inc
aad
mov
imul
or
xchg
repz
rcrl
in
lret
xchg
mov
call
adc
mov
add
adc
cmovns
or
inc
iret
jge
stos
push
xor
das
dec
icebp
mov
xchg
loop
rclb
cmp
xchg
sbb
in
fdiv
fistpl
sahf
sarl
bound
mov
sbb
or
into
mov
repnz
pop
and
inc
fsubp
pop
es
stc
cmp
mov
push
xchg
ja
pop
sahf
sub
in
adc
jl
adc
mov
fdivl
jl
outsl
popf
or
loope
sahf
and
inc
mov
lods
cltd
mov
fs
sub
inc
cli
or
mov
jb
fdivrs
sub
lock
jae
xlat
or
mov
cld
insl
mov
and
ljmp
ja
adc
xchg
fdivrp
mov
sahf
cmpsb
fnstcw
lods
int
es
xlat
movl
xor
sbb
popa
dec
lods
and
pop
popa
cli
lret
scas
or
dec
jge
decb
mov
es
push
fstl
push
cmp
dec
frstor
jmp
jmp
orb
mov
push
addr16
sahf
fistps
int3
divb
pop
pop
adc
cmp
lods
cmp
jbe
jbe
mov
mov
mov
fimull
out
scas
lods
xchg
and
sub
stos
dec
cmp
out
scas
les
add
pushf
jle
mov
or
mov
stc
push
push
jne
in
jmp
out
insl
add
inc
push
mov
cli
mov
inc
pop
inc
push
sbb
sbb
cli
fsubrl
mov
mov
ret
or
clc
jle
lock
cmc
or
xchg
fsub
in
out
data16
pop
mov
lret
cmpsb
pop
dec
inc
fcoml
imul
or
icebp
or
lret
pop
pop
ret
sub
push
fwait
call
lahf
sbb
pop
mov
mov
iret
les
aam
sub
js
pop
iret
or
push
dec
xchg
xchg
lock
pop
mov
jecxz
jecxz
mov
orl
jmp
jg
rol
sarb
test
pusha
mov
lods
mov
add
and
imul
test
xor
xchg
dec
xor
inc
inc
push
xchg
pop
push
xchg
loopne
cltd
cmpsb
xlat
or
sbb
call
loop
aaa
or
stc
jmp
jmp
outsl
lods
rolb
gs
loopne
sar
loop
int
outsb
repnz
cli
int
mov
aad
cmpsb
sti
mull
lret
cmp
inc
mov
add
scas
out
idiv
int
pushl
icebp
add
lods
xchg
xor
pop
fistpll
sub
iret
fwait
push
add
cmp
dec
xor
or
js
lods
roll
shll
ret
xor
sti
sub
lcall
ja
xor
push
mov
lea
mov
fistpll
out
or
faddl
js
fstl
adc
pop
out
xor
inc
adc
fimuls
cmp
sahf
sub
ret
mov
ljmp
xor
mov
jno
fcompl
fisttpll
mov
dec
push
movsl
or
fdivrs
aas
out
in
fisubs
hlt
test
push
dec
adc
jnp
mov
movsb
cmp
mov
cwtl
test
cmp
sub
fiaddl
popa
inc
mov
xor
mov
pushf
lock
mov
loope
inc
cld
lret
movsl
inc
cmova
rclb
lahf
push
lcall
add
xchg
add
es
insb
js
es
mov
sub
sub
sub
xor
int
scas
jle
into
cmp
and
fnstcw
dec
fldcw
sti
cmp
sub
sub
cltd
or
add
call
push
adc
pop
lret
mov
sti
sbb
push
lret
clc
mov
mov
mov
sahf
cmpsl
cmp
sarl
jbe
stos
insb
movb
ds
add
push
and
loope
mov
add
pop
mov
cli
clc
sahf
cmp
push
lret
mov
shlb
jle
lret
sbb
dec
cmp
arpl
mov
enter
mulb
cmp
sti
xor
xor
push
pushw
mov
cltd
mov
or
rcrl
or
pop
lret
mov
mov
dec
je
cwtl
or
xchg
mov
stc
adc
push
mov
pop
jae,pn
dec
fidivrs
stc
es
inc
sub
enter
aaa
cmp
aas
and
xor
in
arpl
mov
add
push
inc
inc
or
inc
push
ret
mov
idivb
or
dec
mulb
ret
jno
lret
mov
sub
repnz
push
daa
es
cld
push
mov
sbb
add
cmp
int
sub
xlat
mov
add
popf
xchg
enter
imul
hlt
push
mov
xor
mov
mov
inc
mov
int3
mov
aad
jns
mov
jnp
fstl
dec
cli
fcomps
sub
fisttpl
sbb
andl
aas
sub
out
jg
dec
sbb
jle
sub
mov
or
ja
mov
fldcw
dec
aas
mov
int3
mov
and
mov
in
xchg
xchg
jp
movsl
out
or
outsb
adc
adc
mov
nop
pop
aas
push
adc
in
or
insl
push
cmp
mov
xor
add
add
xor
sti
lret
inc
lods
divb
sahf
sbb
inc
sbb
movsl
fildl
pop
mov
xor
test
add
push
inc
adc
cli
cmp
outsl
test
or
outsb
push
fs
mov
int3
dec
inc
fstpl
push
mov
sbb
adc
xor
xor
mov
lods
jns
mov
mov
mov
test
movsl
cmp
repnz
mov
shlb
cmp
mov
cmp
mov
mov
lcall
mov
inc
out
sarb
push
stos
add
out
insb
jmp
inc
adc
push
mov
fiaddl
mul
sahf
scas
sbb
lods
jp
push
fidivrs
sbb
stc
ret
rorl
les
jo
and
mov
sahf
sbb
ds
movsb
push
cmp
cmc
addr16
movsl
shl
aas
test
repnz
dec
pop
stos
movsb
and
rclb
negb
sarb
sub
bound
int
repnz
xorl
in
or
shll
into
es
mov
cmp
lods
data16
dec
je
pop
jae
aad
test
dec
aas
jl
pop
cmc
sti
jle
jp
pop
mov
mov
enter
add
jecxz
push
adc
fwait
test
cmpsb
cltd
fmul
fisubl
std
aam
cmp
mov
fsubr
cli
repnz
sub
iret
loope
popa
push
push
xchg
sti
jecxz
mov
push
mov
shlb
sti
loop
ret
sub
ficoml
dec
add
mov
ss
sbb
xor
mov
icebp
cs
negb
add
das
clc
xlat
cmp
scas
push
jle
adc
mov
mov
pop
sbb
mov
push
sarl
adc
mov
fistpll
sbb
push
stc
cli
pop
cli
cmp
adc
addb
rcll
in
xlat
xor
sbb
imul
addb
sub
pop
push
and
adc
cwtl
mov
test
sti
lock
pop
xor
sub
sbb
sbb
mov
add
aas
push
int3
mov
jnp
sti
das
pop
test
mov
mov
pop
data16
int3
jbe
in
jl
jecxz
lahf
lcall
pop
sub
jge
sub
fmulp
inc
or
outsl
adc
loope
ret
cmp
jnp
fwait
out
leave
inc
mov
ret
xchg
push
fistl
mov
out
aas
sub
mov
rcrb
push
pop
sbb
out
ja
jecxz
jne
out
aas
loope
mov
add
mov
in
mov
cs
mov
repnz
fists
or
jecxz
adc
xchg
pop
sbb
ucomiss
adc
or
pop
mov
and
js
ds
sub
jle
sbb
or
dec
push
add
pxor
sub
jg
insl
mov
xor
sub
xor
lock
or
ljmp
inc
pop
push
sbb
out
pop
out
mov
jecxz
mov
ret
dec
push
scas
jne
push
cmpl
loope
mov
fcmovne
or
subb
mov
jbe
leave
pushf
push
and
pop
mov
mov
mov
push
arpl
pop
out
xor
sub
inc
or
sbb
incb
outsl
inc
push
iret
xlat
scas
dec
je
or
push
enter
iret
lods
dec
inc
push
adc
pop
ljmp
loopne
imul
adc
fucomi
xor
sub
into
ljmp
mov
pop
sbb
loop
stos
lret
jle
jp
adc
add
movsb
ljmp
lds
ret
push
jge
push
xchg
enter
loop
push
or
lret
mov
pop
fldcw
clc
ds
push
or
adc
movsl
fdivrl
out
js
fidivrs
sbb
leave
add
in
shll
xor
stos
mov
lcall
fisttpll
and
mov
fistps
sbb
sub
mov
push
into
inc
ret
lea
xor
mov
stc
shr
jmp
out
bound
pop
push
mov
aam
cmp
sub
ljmp
mov
mov
pop
enter
sbb
jae
push
inc
lret
cmp
stos
jmp
xor
adc
jb
xchg
inc
sahf
or
mov
dec
sbb
int3
dec
aas
add
mov
xor
test
lods
xor
pop
or
inc
lods
jmp
stos
pop
or
sub
sub
pop
mov
or
dec
in
dec
pushf
nop
or
movsl
xchg
sbbl
movsb
pandn
push
jp
cmc
mov
sbb
xchg
and
inc
xchg
sbb
pop
sti
das
mov
jbe
addl
lcall
dec
sub
cli
lcall
jb
idivb
mov
jle
sbb
adc
inc
push
or
cwtl
outsb
cs
les
lahf
popa
push
mov
stc
ret
xor
mov
imul
jae
lret
xor
dec
gs
xor
cs
inc
push
out
ret
and
sahf
aas
loop
mov
and
les
out
jp
jl
pop
jbe
or
dec
imul
cmp
mov
cld
out
or
fcomip
jb
icebp
not
cwtl
push
imul
mov
push
pop
pop
xchg
inc
ss
aaa
jp
add
int3
and
and
adc
mov
sub
push
lock
in
mov
jle
jae
fsubrs
dec
aas
jb
push
mov
lods
sbb
sbb
dec
jns
loopne
xor
mov
or
pop
fyl2x
leave
and
sbb
mov
xor
or
mov
in
scas
pop
lods
and
or
pop
mov
rorl
inc
idiv
jecxz
xor
xlat
jbe
das
out
ret
dec
lods
push
in
push
lret
aaa
xor
cmc
in
nop
xchg
pop
mov
sahf
jge
jle
mov
es
scas
push
jecxz
scas
int3
les
mov
ret
lret
sub
adc
aas
jmp
cmp
ss
ret
sahf
fcmovu
dec
cmp
bound
sub
icebp
int3
ja
sbb
mov
sub
lret
fisubs
pop
add
sub
test
pop
or
or
sub
inc
dec
jecxz
push
sahf
out
inc
mov
push
push
dec
mov
ret
int3
add
mov
scas
stos
cmp
inc
inc
pop
loope
inc
pop
pop
xchg
inc
or
hlt
add
loope
push
addb
xor
lahf
sar
es
inc
or
mov
call
or
inc
icebp
test
sbb
call
rclb
xchg
aas
push
push
mov
xchg
adc
mov
cmpsb
fsubrs
inc
push
xchg
test
dec
mov
mov
adc
jnp
jb
mov
fadds
cld
icebp
dec
cmpsb
push
dec
xchg
push
jmp
fadd
push
mov
add
loop
enter
ret
mov
mov
ret
lret
pop
dec
icebp
pusha
aas
out
mov
pmaddwd
out
out
shlb
popf
out
sahf
pop
stos
xchg
mov
or
push
dec
cmp
inc
inc
jo
inc
mov
ret
push
push
movsb
pop
pop
inc
dec
lds
mov
and
add
jae
inc
inc
ljmp
ds
and
mov
test
pop
mov
xchg
xchg
mov
popa
fmulp
xor
in
mov
ss
adc
cmp
stc
xor
aas
sbb
and
les
xchg
jmp
hlt
pop
jnp
cs
xor
jae
stos
cmc
adc
cwtl
cmc
inc
xor
cmp
or
pop
lods
cmp
bound
add
popa
fcmovb
xor
sub
popf
push
xlat
or
fimull
jo
lea
jns
das
push
out
push
jg
pop
push
sub
push
add
enter
push
mov
push
jb
std
mull
fildll
or
dec
xor
pop
pop
testb
cmp
cltd
cmp
ret
xchg
sub
or
ds
push
decl
lods
mov
lret
clc
mov
jle
xor
gs
sarl
or
inc
divb
aad
in
lock
sbb
cmp
mov
out
imul
enter
lahf
fcmovnu
mov
jl
pop
popa
cmpsl
out
sub
sbb
pop
dec
mov
or
testb
ss
sbb
add
movsb
cmp
adc
add
or
add
pop
mov
in
or
jg
push
inc
mov
cmp
cld
inc
fmuls
sahf
push
or
jae
xor
cwtl
add
outsb
ds
hlt
push
or
push
jge
sbb
push
cmp
sahf
decl
push
in
aaa
out
bound
popa
sub
les
pop
lcall
test
inc
fnstsw
add
scas
push
nop
sub
pop
mov
shl
dec
add
pop
add
pop
mov
rclb
jg
fcmovnbe
aam
iret
sub
mov
push
adc
rcr
mov
fildl
mov
xchg
inc
adc
jp
dec
push
adc
adc
cmp
fwait
xlat
cld
std
jp
mov
mov
mov
pop
jp
ret
inc
cli
sbbb
mov
xchg
stc
add
sub
fiaddl
inc
or
dec
fdivl
or
mov
adc
xor
inc
mov
fisttpl
subl
mov
pusha
push
mov
cmpsl
add
adc
fisttpl
adc
sub
adc
sahf
pusha
movsl
dec
add
jmp
adc
add
jle
sbb
call
mov
sub
jg
sub
inc
inc
add
dec
ljmp
mov
jns
mov
outsl
or
test
cli
or
idivl
jnp
pop
dec
inc
mov
loopne
stos
rorb
add
mov
out
mov
add
pop
dec
and
xlat
rcr
xchg
dec
add
mov
add
dec
std
int3
jnp
mov
punpckhbw
push
jle
and
cmp
inc
repz
jle
cld
lret
cltd
inc
lret
fdivrl
push
fimuls
mov
add
inc
xor
lods
inc
popa
sub
out
jne
in
outsb
lret
pop
lock
dec
pop
lea
ljmp
or
jl
mov
lds
jbe
add
push
push
xor
xchg
inc
cmp
mov
pusha
loopne
rorb
push
cmpsl
inc
pop
cli
sbb
enter
push
xlat
sahf
push
pop
adc
cmc
insb
jne
mov
pop
bound
sub
fistl
cli
or
jge
push
mov
or
xor
mov
dec
inc
xchg
frstor
xor
mov
sbb
mov
mov
out
fdivrp
test
cltd
mov
loop
jp
ds
mov
cmpsb
divl
loop
pop
fs
pop
out
ds
dec
cmp
fisttpll
push
dec
lds
cmp
mov
mov
fisttpll
idivb
mov
ds
rolb
cmpsb
scas
add
mov
add
add
jge
and
mov
cmp
outsl
sahf
add
push
xlat
es
push
mov
ret
clc
cmp
cmp
push
inc
movsl
pop
fs
mov
fmuls
pop
mov
jle
cli
bound
data16
flds
mov
sahf
xor
adc
outsb
sbb
dec
mov
cmpsb
cmp
xor
test
inc
cmp
xchg
jle
or
mov
movb
inc
lahf
iret
push
into
and
lret
fimuls
xlat
mov
push
ja
fs
ds
nop
clc
inc
inc
addb
fimull
js
dec
into
sub
rcrb
add
mov
pop
push
mov
add
xchg
cmp
mov
rcl
int3
nop
clc
adc
lret
cmp
lret
jp
xlat
stos
push
hlt
push
fiadds
dec
gs
pop
add
sbb
mov
inc
stc
loop
ror
in
nop
clc
cmp
or
and
push
out
js
int3
sahf
lock
mov
mov
push
sti
inc
iret
pop
fidivrl
sti
or
mov
jb
jge
or
xchg
lret
ja
lahf
loopne
nop
rcrb
or
mov
sbb
inc
mov
data16
or
cmpsb
mov
rorl
scas
or
push
sub
dec
dec
xbegin
fidivrs
test
cmp
bnd
and
ds
into
mov
xor
xor
lcall
cmp
cmp
aaa
out
sbb
fsubl
fnstsw
negl
stos
mov
jo
repz
mov
mov
loopne
or
leave
lahf
test
cmp
adc
sahf
mov
leave
add
enter
negl
mov
and
or
ja
add
test
into
clc
pop
and
fldl2t
mov
shr
dec
js
scas
out
push
js
call
test
into
test
mov
pop
cmpl
fldenv
fwait
pop
fwait
lret
test
outsl
loope
clc
or
fcoms
fimuls
test
jmp
notb
insl
mov
or
or
nop
aad
xor
cmpsb
out
jecxz
in
xor
xlat
bound
pop
mov
or
daa
mov
cmp
adc
cmpsl
icebp
add
daa
xor
dec
iret
push
gs
mov
and
pop
idivb
add
fcomps
xor
xchg
dec
ret
fsubs
jg
divb
push
mov
leave
loope
cmc
add
in
and
testb
incb
inc
and
fs
enter
xchg
cmp
fs
bound
nop
dec
js,pt
xchg
enter
ljmp
adc
les
js
loope
call
mov
sti
xchg
sub
scas
enter
aaa
mov
xor
outsl
icebp
sti
lds
in
adc
mov
aam
lea
sub
push
testl
cmp
int
sbb
add
out
in
xchg
or
push
sbb
icebp
xchg
sbb
ljmp
add
call
jb
cmp
xor
lea
sub
jb
mov
and
jge
imul
jg
mov
xor
push
enter
jo
enter
aam
or
mov
icebp
pusha
in
imul
lods
test
fdivr
nop
inc
out
test
test
add
adcb
into
mov
cmp
mov
lahf
cmc
jge
roll
cwtl
add
mov
in
pusha
add
jae
int3
data16
sbb
and
jmp
call
sarl
sbb
ja
daa
stos
mov
sahf
and
push
dec
or
test
push
sbb
lods
nop
roll
stos
test
loope
or
inc
shrb
push
cmp
ja
mov
stos
dec
xor
aas
sbb
cmp
sahf
xchg
or
enter
push
xchg
push
mov
insb
ljmp
std
mov
or
xchg
mov
mov
xchg
cmp
icebp
js
jecxz
sub
fsubl
ljmp
fwait
cmp
or
cltd
xlat
pop
fdivs
mov
sahf
loope
adc
push
sahf
xchg
into
pop
mov
mov
add
dec
add
mov
sahf
mov
pop
cmp
push
cmpsb
decl
push
data16
jno
fmul
dec
loop
cld
call
cmp
mov
add
mov
mov
clc
fnstcw
mov
aaa
xor
fstpt
and
gs
cmp
es
dec
add
sbb
pop
dec
adc
mov
stos
dec
xchg
jp
push
mov
out
sub
fcmovu
jp
ljmp
scas
fnstsw
xor
lods
hlt
nop
mov
mov
inc
cli
mov
das
or
test
mov
jne
or
das
push
jae
or
or
mov
xor
cmp
or
add
repnz
and
fwait
cmpsl
ljmp
sbb
or
xor
loop
out
fwait
leave
sahf
pop
stc
mov
push
xchg
cmp
lods
sub
roll
xchg
aas
jmp
mov
lret
jp
and
les
push
gs
push
jne
jecxz
sub
sahf
xor
push
dec
test
add
into
test
pop
inc
daa
cmp
jbe
lds
jns
xor
das
dec
das
or
sbb
push
nop
adc
mov
cltd
lret
iret
sub
cmc
push
iret
rcrb
sti
adcl
adc
mov
mov
inc
out
add
mov
cmc
cltd
inc
loop
add
test
clc
ds
std
sub
mov
shrl
push
fwait
mov
jae
es
mov
mov
mov
stc
stc
jo
inc
mov
cld
dec
fldenv
jle
pushf
js
sahf
dec
mov
dec
jl
imul
in
mov
push
lret
sahf
je
sti
dec
shl
adc
jnp
push
xchg
in
adc
or
mov
push
mov
jne
push
jecxz
cmpsb
push
add
sahf
cmc
and
dec
mov
and
dec
sbbb
aam
popa
cmp
mov
cmp
sahf
test
jecxz
xchg
xchg
aas
bound
movsb
ffree
jg
test
inc
pusha
iret
inc
lret
dec
sub
fstp
sbb
stos
js
mov
push
mov
dec
add
push
insl
mull
data16
insb
and
in
adc
sub
call
mov
push
mov
test
repz
xchg
mov
sub
shll
mov
orb
idivl
je
clc
mov
aas
icebp
mov
jno
mov
fmull
cmc
mov
jge
aad
sbb
jle
cmpsl
cmp
sub
ficomps
pop
xor
xor
fnstcw
arpl
inc
scas
add
dec
cmpsb
idiv
nop
cwtl
repz
pop
aam
mov
imul
mov
or
inc
pop
pop
inc
bswap
aas
sahf
daa
mov
add
ljmp
out
pop
mov
inc
sahf
sahf
jb
sub
mov
ret
sti
push
xchg
inc
jae
lahf
mov
xorl
ret
sahf
mov
mov
test
stos
outsl
scas
cwtl
xor
ds
push
mov
push
mov
lods
daa
es
pushf
in
lods
ret
add
sub
jno
lret
fs
rclb
aaa
sarl
lds
std
push
fidivrs
or
jb
sahf
add
xor
inc
nopl
pop
call
stc
mov
sbb
lods
hlt
sub
sbb
ret
ljmp
and
or
int
jbe
ds
ds
cmpsb
mov
mov
loopne
lret
or
sbb
scas
stos
aas
pop
pushf
xchg
iret
fidivs
sub
or
lahf
call
insb
and
push
adc
adc
pop
pusha
testl
enter
cld
xchg
mov
push
aad
int
bound
cmp
or
cmp
lahf
fdivl
mov
sub
xor
mov
sub
xor
inc
push
pop
pop
or
and
dec
add
testb
fstpl
pop
mov
rorb
sbb
fldl
clc
loopne
inc
lret
pop
dec
inc
es
sti
sbb
xchg
mov
lret
aas
lret
stc
lret
xor
xor
lret
sbb
fisubs
popa
push
adcl
out
or
xchg
push
bound
stos
lods
push
daa
lods
test
mov
push
or
cmp
inc
dec
xchg
ret
iret
mov
xor
pop
testb
dec
aas
mov
movsb
pop
inc
rcrl
adcb
add
inc
mov
pop
cmpsb
lock
cs
lret
repnz
jnp
ret
pop
shl
xchg
enter
jg
shrb
and
push
push
add
in
adc
in
xlat
jecxz
mov
cmp
in
and
lock
add
sarl
int
jae
cmp
or
adcl
push
sub
insl
xchg
inc
jecxz
fiaddl
mov
js
pop
decb
dec
push
xor
mov
out
into
add
fcomip
ret
lcall
notb
and
adcl
dec
les
cld
fisubs
mov
test
and
imul
out
cs
xlat
rol
lret
or
into
lahf
or
xor
xlat
into
pmaxub
lds
mov
cmp
pop
adc
push
xchg
inc
cwtl
xchg
and
xor
cmp
sbb
and
mov
dec
xchg
mov
dec
lahf
sbb
sbb
push
out
int
inc
push
xchg
adc
sarl
and
push
mov
repz
js
loopne
pop
jg
rcrl
sub
insl
leave
or
adcl
sbb
in
in
ds
and
sub
push
rclb
clc
lret
ds
out
push
or
sar
push
push
mov
shr
adc
inc
aad
push
sbb
push
cmp
jle
int
into
shll
inc
sar
insb
mov
inc
jmp
stc
push
xchg
jp
loope
sbb
push
test
in
push
push
xlat
sarb
adc
data16
popa
call
cmc
cmpsb
clc
test
loopne
push
sbb
ds
adc
sti
and
leave
addb
out
jp
sbb
data16
repz
js
lock
fdivrp
sbb
outsl
cli
cmp
jecxz
bound
out
fnstenv
std
es
bndstx
inc
sbb
pop
faddp
jae
negb
shl
fiadds
ss
mov
sbb
xor
cmp
sbb
lret
mov
loop
lods
scas
inc
push
push
pop
fld
test
inc
arpl
cwtl
push
jecxz
movsb
pop
xchg
cmp
cmp
push
pop
int
out
jae
push
lcall
test
push
add
sarl
push
push
inc
mov
repz
shlb
pop
mov
ljmp
js
rcrb
jle
dec
push
sbb
adc
xor
cmp
adcb
outsb
adc
out
jno
push
mov
xchg
addb
movsb
adc
stos
loop
lods
shrl
in
repnz
sbb
push
leave
fisubl
rorb
mov
icebp
jp
adc
ss
repz
shlb
scas
clc
adc
push
or
sbb
jmp
mov
faddl
adc
mov
lods
xlat
adc
adc
pop
cli
cmp
mov
xor
sbbb
cld
cmovne
imul
cmp
pmulhuw
int
dec
es
ror
cmp
es
inc
cwtl
add
ljmp
sbb
or
lods
ds
es
pop
xlat
rclb
in
cmp
and
xchg
repz
decb
pop
mov
xchg
xchg
pop
xor
sti
mov
vcvtuqq2ps
push
push
mov
xor
pop
mov
or
xor
lock
shlb
insl
xchg
or
pop
sub
scas
frstor
daa
jae
addr16
ds
jmp
icebp
iret
cmp
and
lret
addr16
mov
fabs
lea
fstpt
fdivrl
fisttpll
rcr
mov
loope
jle
jecxz
shll
dec
xchg
jle
and
test
les
sbb
cmc
fcmovb
push
repnz
fcomps
or
test
jl
leave
lahf
cmp
push
aam
leave
je
xchg
add
jns
xchg
cmpsl
push
jmp
pop
mov
lods
inc
aad
xchg
mov
xchg
in
mov
mov
jb
outsb
add
or
or
push
or
mov
jecxz
mov
cmp
add
cmpsb
dec
scas
lea
sub
mov
cmpsb
mov
cmp
mov
or
lods
cmc
orl
pop
jmp
int
sahf
mov
shl
jge
adc
out
lahf
or
cmp
nop
mov
ljmp
and
in
mov
mov
dec
rcr
xor
fisubrl
rcrb
int3
ds
xchg
call
xchg
enter
cmp
lahf
fists
lret
aad
adc
pop
sarl
dec
sbb
nop
inc
lret
clc
cmp
mov
pushf
jp
gs
sub
jle
out
in
sub
decb
int3
sahf
aas
mov
adc
dec
into
push
mov
cli
subb
mov
adc
test
inc
icebp
js
push
test
jecxz
mov
int3
xchg
mov
xlat
mov
jl
mov
xchg
mov
cld
jo
rolb
rol
mov
inc
rcl
ret
jb
ds
clc
xchg
nop
ficoml
les
xchg
enter
vorps
push
xchg
fxch
cli
xlat
es
enter
enter
mov
cmp
cltd
add
jbe
lcall
and
sahf
xorl
mov
negl
movsl
mov
sub
ret
mov
jnp
cld
fistl
outsl
out
sarl
fcomp
push
pop
xchg
jg
mov
aad
call
fsubr
cltd
loope
rcrl
data16
rorb
out
fimuls
enter
push
push
or
fistps
or
xchg
out
mov
and
cmp
cltd
leave
sbb
push
movsl
sbb
jns
mov
ja
ljmp
lahf
pop
out
sub
in
pop
sbb
shl
push
out
mov
mov
loopne
notb
jnp,pt
cmp
pusha
inc
ffree
testb
push
jl
add
lahf
dec
mov
ret
mov
mulb
xlat
cmp
mov
mov
xlat
pop
push
jp
mov
popa
icebp
cltd
mov
iret
aas
xor
lcall
xchg
test
xor
dec
mov
icebp
js
mov
cmp
push
inc
dec
mov
jns
adc
add
or
out
insb
stos
loopne
push
sub
or
sahf
lret
cmpl
insl
mov
adcl
imul
loop
and
js
mov
jle,pt
insl
jnp,pt
sti
push
mov
popa
inc
fld
lds
movsl
stos
and
sbb
das
lret
ds
mov
dec
jmp
lret
sahf
push
xchg
aam
or
push
in
aas
test
sub
adc
hlt
jo
adc
push
inc
mov
push
inc
mov
icebp
jns
rcrb
push
sti
xchg
jo
iret
sahf
xor
and
xor
jo
sub
push
pop
fldl
stos
sahf
fwait
and
push
ds
sti
mov
add
xchg
dec
divb
inc
jg
lret
jno
js
dec
aaa
xorb
ss
pop
bound
mov
int
jp
sub
pop
movsb
mov
mov
dec
jbe
push
cmc
mov
ret
push
inc
lret
pop
fdivrs
nop
push
push
push
ds
cmp
mov
movsb
jb
inc
and
cmp
leave
jns
xchg
jno
push
mov
mov
into
push
and
stc
lret
or
sti
into
jne
ss
subb
sahf
mov
xor
adc
ljmp
or
jp
mov
push
sarb
push
mov
jle
xchg
mov
rcr
clc
pop
shlb
loop,pt
int3
or
lcall
loope
pop
xlat
out
test
cmp
push
sub
stos
xchg
arpl
imul
jmp
jno
sub
xchg
xor
call
sub
push
cmpsl
cs
cwtl
fcomi
ljmp
mov
popf
inc
ds
cmp
or
mov
fdivl
test
ljmp
lret
push
repz
sti
pop
cmp
addr16
mov
jg
lods
les
fcos
and
sub
sbb
fidivrs
jecxz
xchg
insb
sahf
out
lret
andb
push
lahf
movsl
or
out
push
gs
adc
bound
aas
popw
lods
popa
push
push
ret
hlt
inc
out
nop
mov
dec
outsl
mov
fninit
dec
stos
jne
and
leave
or
pop
gs
xchg
sbb
push
in
arpl
dec
mov
jmp
out
add
xlat
add
lret
mov
call
jp
leave
mov
pushl
fidivrs
sahf
jl
push
movsl
dec
mulb
sbbb
jae
mov
cld
into
xor
loop
ret
movsb
out
ret
std
cmp
movsb
xchg
fistl
popa
xor
fxch
sahf
cmpsb
pop
or
add
mov
mov
outsl
jo
adc
mov
sbb
mull
pop
sub
insl
mov
jp
outsb
enter
or
ret
inc
push
repnz
shlb
adc
cmp
arpl
imull
ret
ret
sub
adc
fadds
aaa
out
dec
cmp
loopne
repnz
xor
pop
xchg
add
xor
lahf
xchg
push
loop
ljmp
adc
das
repz
call
pop
clc
adc
out
mov
add
mov
data16
test
rclb
sbb
mov
in
cmpb
loop
imull
arpl
js
jmp
aad
jno
bound
xchg
xchg
xchg
cmp
cltd
mov
popa
aam
outsb
sub
cmp
mov
xchg
mov
pause
aas
and
push
inc
pushl
je
or
cmpsl
mov
inc
orl
inc
lods
insl
sbb
int
popa
jmp
inc
test
add
mov
inc
lret
icebp
xor
push
and
push
pop
jnp
aaa
lds
or
fidivs
push
je
fs
jae
cltd
fstpl
in
mov
push
outsb
in
dec
je
loop
push
inc
movsl
clc
out
loope
fcmovbe
or
ficoml
ret
mov
cli
pop
mov
sbb
sbbb
lahf
xchg
sbb
negl
add
sahf
imul
mov
add
mov
in
add
mov
push
pop
sbb
jmp
ss
das
mov
popa
loopne
sbb
or
lret
fndisi(8087
inc
xchg
push
add
out
dec
sbb
filds
push
sahf
xor
jne
ja
jmp
repnz
sarb
jns
jbe
lret
mov
addb
adc
stos
mov
sti
dec
insb
aas
mov
cmc
ja,pt
psubq
dec
scas
dec
dec
outsl
sub
lret
adc
adc
rclb
inc
mov
push
mov
rcr
dec
inc
jg
mov
pushf
out
inc
push
stos
les
xchg
inc
cmp
stc
xchg
addl
imulb
adc
test
add
and
mov
or
out
pop
jl
mov
add
jp
xor
les
cmp
ficoms
or
loop
adc
aas
sti
insl
or
fnstcw
mov
inc
lret
jle
aaa
cli
fdivrl
dec
sbb
dec
repnz
xor
out
fistpl
or
adc
into
ds
mov
fcmovnbe
push
les
movsl
dec
mov
aam
call
cmp
lret
jae
loop
dec
pushf
int3
mov
lods
subl
popa
pop
lcall
adc
push
sbb
cltd
clc
mov
fimuls
rol
adc
xchg
js
sbb
clc
xchg
cmpsl
ljmp
in
mov
std
clc
mov
stc
clc
addr16
sarb
loopne
pop
shl
sub
shl
insl
clc
jp
into
out
xchg
test
xchg
pop
mov
jb
cmp
push
fs
ret
mov
cmp
rclb
mov
jg
std
push
xor
mov
mov
mov
andl
movsb
in
jp
mov
dec
repz
in
xchg
std
outsb
sub
in
sbb
arpl
mov
mov
fidivl
mov
sub
ss
jbe
stos
mov
mov
sub
js
jp
adc
and
cmc
stos
mov
cmp
jle
mov
dec
es
and
mov
adc
orl
cmpl
mov
lcall
clc
jbe
ret
xlat
ret
adc
addl
fcomps
je
ss
bound
repz
imul
xor
rolb
cmp
fdivrl
aas
add
sahf
adc
scas
adc
test
mov
addb
and
mov
xor
rolb
scas
or
in
ljmp
mov
mov
sti
fs
mov
int
movsb
xchg
xchg
sbb
jns
testb
or
out
or
xor
lahf
ss
cmpb
mov
repnz
sbb
pop
push
aaa
lahf
add
enter
mov
clc
cmp
xor
xor
addr16
mov
in
cmc
in
push
pop
or
mov
test
xor
mov
xor
dec
popf
stc
pop
fiaddl
dec
sbb
jge
lahf
mov
fdivrp
decl
dec
pop
add
pushf
cmp
outsb
pusha
neg
in
fcmovb
repnz
enter
rcr
in
leave
and
int3
or
xor
mov
pop
adc
inc
push
cli
sbb
shlb
sub
push
stos
sub
ljmp
dec
icebp
dec
pop
call
stc
lretw
and
mov
loope
mov
add
jge
leave
enter
jnp
mov
jns
jbe
into
pop
jp
icebp
movsl
sub
inc
dec
adc
jo
push
jnp
mov
jle
sub
shrb
enter
lret
adc
idivb
sbb
imul
and
es
dec
push
push
adc
lcall
sahf
mov
jg
sub
int
inc
ja
inc
lret
hlt
ds
outsl
cltd
insb
ja
push
in
mov
jle
sarb
mov
inc
inc
sub
xchg
repz
cmp
outsl
cmp
mov
adc
jmp
fs
add
xchg
pop
movsb
jmp
roll
out
shrb
mov
adc
sub
fidivl
add
sahf
sub
es
adc
mov
jecxz
mov
push
pop
push
sub
xor
prefetcht1
movsb
and
sahf
sbb
fisubl
push
stc
push
shrl
mov
enter
mov
aas
adc
or
pop
adc
icebp
rcrb
sbb
imul
sub
dec
fcoml
lahf
mov
orl
push
fnsave
push
jecxz
testb
rcrb
lcall
inc
xchg
add
out
sub
mov
jmp
jecxz
jns
adc
out
sbb
idivl
jo
jle
repnz
adc
push
lahf
sbb
lret
loopne
in
ret
sahf
mov
lds
mov
into
movb
lret
je
sub
ret
inc
int3
fbld
push
jnp
imul
enter
jle
and
cwtl
cmp
data16
sub
pop
pop
xor
inc
cld
cld
pusha
xor
aas
inc
ds
loope
incl
ret
mov
mov
into
js
mov
mov
ja
adc
push
pop
mov
jnp
roll
jmp
xchg
neg
xchg
inc
psubq
int
or
mov
out
and
adc
dec
add
adc
sbb
dec
fsubs
fistps
sub
inc
cmp
push
in
cli
std
mov
inc
or
mov
adc
and
ss
lock
ffreep
fsubrp
push
xor
mov
cmp
shrl
ret
mov
sahf
sub
xchg
push
cmc
jmp
ljmp
fmul
lods
incl
push
mov
frstor
xchg
adc
or
sbb
or
add
inc
inc
sub
mov
jl
es
inc
mov
mov
ret
or
or
mov
jbe
fnstenv
in
loope
sbb
cmp
push
adcl
or
jecxz
lds
in
lds
mov
xchg
movsb
adc
movsl
call
aaa
push
sub
test
or
loop
pusha
cwtl
shll
add
das
pop
scas
iret
or
xchg
jbe
sub
mov
xchg
inc
inc
int3
inc
push
or
inc
test
ja
in
or
xchg
jecxz
sub
xchg
bts
imulb
roll
in
mov
jmp
or
pop
cli
test
sarb
mov
popf
xchg
cli
stc
sub
push
push
icebp
inc
xor
inc
cmp
fxch
leave
xor
inc
ds
xchg
xchg
fidivl
sub
daa
ror
sahf
rcrl
jecxz
mov
xor
add
pop
mov
sub
repz
sti
adc
fidivrs
jnp
sarb
add
cmpl
pop
or
mov
shll
fcomp
or
cmp
sbb
jnp
idivl
in
mov
add
cmpsb
lods
ds
add
movsb
daa
pop
js
sti
xchg
mov
and
pop
jmp
lods
loopne
je
mov
stc
idivl
xor
mov
into
push
jge
inc
xchg
push
stos
jle
ret
or
add
into
and
xchg
out
cmpsb
rol
in
jo
cmp
lret
jae
xchg
roll
loop
sahf
cltd
mov
jle
adc
mov
sbb
idivb
pop
repz
roll
xor
push
out
and
pushf
popf
out
stos
call
arpl
pop
out
sub
add
sub
in
into
dec
sar
repz
add
not
ficomps
outsb
mov
sbb
popf
bound
dec
sub
push
lcall
andb
shr
pop
push
testb
jbe
sarb
lcall
shll
inc
cmpsb
push
fwait
cli
dec
loop
cmp
ficompl
cmp
jle
punpckhdq
ficomps
mov
inc
lret
lret
jge
push
cmp
jp
ficompl
sti
sbb
dec
push
jmp
sahf
aaa
out
cld
pop
sbb
jmp
ds
jns
jnp,pt
mov
or
ret
aaa
mov
lea
xor
out
xchg
and
push
cld
test
out
sarb
mov
btr
in
out
add
ret
jbe
je
push
ret
std
inc
dec
mov
test
push
xchg
jecxz
add
imul
xchg
lds
dec
fildl
pop
adc
jns
push
xchg
and
in
cltd
add
or
pop
adc
and
push
leave
xor
xchg
lret
jmp
pop
bound
pop
add
icebp
pop
dec
ror
fdivrs
push
je
inc
jp
sbb
mov
lret
dec
fucomip
sub
or
push
loop
in
push
and
pop
inc
int3
ret
jne
aaa
mov
ss
into
repnz
cmp
adc
cmp
mov
mov
mov
sbb
repnz
gs
add
push
sub
pop
mov
int
ds
pop
push
push
orps
out
cli
cmp
scas
fisubrs
call
stc
mov
ja
lock
aam
cmp
dec
mov
sub
push
pop
push
dec
push
xchg
sbb
iret
fsubrp
jg
mov
pop
jb
jecxz
enter
addl
xor
mov
daa
jl
or
dec
sbb
or
xor
lcall
dec
scas
mov
inc
push
data16
sbb
into
in
or
test
rcl
cmp
fdivrl
mov
sub
test
das
mov
cli
cld
ss
out
clc
mov
add
pop
loop
inc
ljmp
fpatan
mov
push
fcomip
push
pushf
lock
sub
push
xchg
xor
jb
aas
dec
push
pushf
or
or
or
mov
mov
adc
dec
mov
dec
xlat
jbe
and
adc
mov
mov
incb
int
and
enter
sbb
adc
negb
subb
cli
aas
loop
scas
inc
xchg
fcoms
push
into
in
sbb
inc
jge
xor
sub
jns
mov
ds
sahf
or
xor
add
mov
or
fistpll
jmp
int
repnz
sub
mov
inc
push
jp
jnp
js
xchg
add
dec
das
aas
jecxz
call
in
adc
repz
fdivl
negb
xchg
sub
cli
enter
stos
in
roll
xchg
fcomps
icebp
xchg
loope
loop
mov
jmp
or
mov
cld
add
clc
add
ret
cmp
add
adc
bound
and
loope
outsb
mov
decb
jb
lcall
iret
sahf
stos
loope
movsl
test
in
xor
jb
push
cmp
jno
movsb
push
inc
mov
mov
dec
stos
imul
cmp
xchg
or
ficoms
mov
xchg
ret
sahf
sbb
pop
movsl
jns
or
outsl
testb
lods
sbb
pop
sbb
push
mov
rol
loopne
mov
mov
push
and
not
std
lods
cmp
pop
mov
fsts
scas
pop
mov
shr
fidivl
inc
fidivs
or
ljmp
push
mov
mov
loopne
xchg
js
jl
cmpsl
lock
lcall
pop
xchg
dec
pop
mov
fisttps
dec
scas
jmp
mov
adc
shr
out
lea
jo
xchg
push
sarb
gs
mov
sahf
cltd
pop
scas
loope
aaa
jnp
shlb
xchg
fisubrs
dec
sub
sahf
dec
pop
int
jno
jne
enter
fdivr
aam
cli
ficomps
xor
xchg
sub
gs
cmp
inc
in
out
and
xchg
leave
in
dec
test
clc
mov
jp
fcomps
fisttps
inc
adc
or
fbstp
lods
fadds
dec
push
pop
xor
fstl
lods
rcrl
mov
fcmovbe
or
adc
addb
pusha
neg
lock
push
cmpsb
xor
pushl
mov
test
in
syscall
and
lret
jbe
or
fiaddl
test
sahf
xchg
xor
enter
pop
enter
daa
scas
mov
es
arpl
fldt
iret
cli
mov
enter
test
add
cld
cmp
pusha
push
dec
lret
enter
push
pop
mov
les
mov
jp
xchg
out
adc
xchg
mov
and
das
shlb
jl
out
addr16
inc
or
xor
incb
adc
mov
cmc
test
fldt
pushf
stc
mov
shrb
xchg
loop
mov
cmp
mov
pop
mov
push
negb
xor
sbb
sub
test
hlt
or
movsb
test
scas
ret
sub
loope
icebp
mov
push
ljmp
inc
mov
shl
loop
dec
cli
ficomps
fisubrs
xchg
leave
sub
fs
rcl
arpl
stc
or
je
test
xlat
mov
inc
lret
pop
js
cmp
stc
push
sub
dec
mov
jns
xor
out
mov
jmp
adc
pop
lret
cmp
repz
push
loope
aam
jbe
xor
push
or
hlt
or
xor
enter
movl
or
stos
mov
adc
fdivr
jge
rcrb
outsb
mov
push
adc
mov
clc
jle
inc
push
or
push
icebp
xchg
fnsave
insl
loop
mov
mov
push
icebp
sti
fdivrp
ret
dec
jp
call
xor
test
or
pop
xor
sahf
shl
fists
add
inc
xor
outsb
sbb
rol
js
out
call
xor
cmp
ret
xorb
sbb
inc
add
aas
sar
shl
lds
fwait
cmp
xor
pop
push
cli
div
inc
jl
mov
in
rorb
mov
fisubl
fidivs
cmpb
jecxz
lock
or
int3
xchg
jns
xchg
push
sub
cli
add
jns
outsl
int3
xchg
enter
arpl
xor
scas
repz
push
fs
adc
sbb
testl
inc
add
lods
addb
pusha
xlat
xor
shl
mov
incl
fdiv
aas
pusha
mov
or
fstpl
mov
sarl
push
sbb
into
nop
inc
lret
mov
fucomp
bound
sub
cltd
dec
jns
je
xor
push
jecxz
mov
or
jnp
lock
fmul
push
cld
out
adc
shrb
lds
inc
ret
call
jb
repz
dec
popf
xlat
je
test
into
das
repz
ret
rcl
sbbb
pop
sbb
icebp
ret
lret
int
outsb
jecxz
aad
xchg
std
outsb
jg
bswap
out
mov
test
fsub
mov
push
jnp
jp
out
out
dec
and
hlt
pop
jge
push
sbb
sbb
fisubl
std
imul
pushf
sahf
xchg
pop
pop
add
or
xor
sahf
fistpl
in
bound
insb
or
enter
and
movsb
pushf
add
dec
adc
jle
sbb
pop
imul
jno
pop
rcr
adc
sahf
pop
xchg
fdivrl
cmp
loope
cmpsb
adc
ret
jp
sbb
sar
sbb
jmp
sbb
or
cli
pop
adc
jnp
iret
adc
imul
lods
lods
mov
dec
in
aad
clc
lods
jmp
inc
jo
clc
stc
insb
mov
jmp
mov
fcmovb
mov
mov
leave
push
dec
sub
mov
cmp
mov
adc
jmp
xor
sarb
and
mov
mov
ret
mul
or
pushf
ret
ljmp
or
mov
outsb
adc
dec
js
je
push
popa
bound
decb
mov
jp
call
mov
xor
mov
fdivr
mov
push
and
mov
es
movsb
jecxz
icebp
outsb
pop
dec
jg
dec
int
or
in
js
or
out
add
cmpsb
mov
movsl
jno
outsl
xchg
inc
jmp
popa
dec
or
pop
sub
lret
out
es
scas
fisttpll
cmp
mov
aas
sahf
in
js
data16
or
mov
cmp
into
ffree
or
mov
or
negb
or
xor
rorl
jmp
dec
fidivs
mov
push
sbb
into
or
fisubl
push
and
sub
pop
inc
or
xor
mov
add
decl
sbb
cmp
mov
adc
pop
and
out
call
out
push
lea
in
inc
dec
negl
int3
ja
aas
rcll
cld
or
data16
or
ss
mov
push
fidivrs
adc
lret
fistpl
push
ds
jmp
in
dec
mov
mov
sub
xchg
jmp
fucomip
xlat
je
cmpsb
mov
cmp
dec
mov
int
aas
pop
rcr
pop
sub
sub
pop
sahf
mov
xchg
mov
jae
dec
jge
sahf
adc
sub
lret
fbld
cmp
xlat
mov
aaa
inc
les
jg
inc
test
mov
jbe
test
adc
push
test
and
or
es
xor
jmp
xchg
mov
into
xor
xchg
insl
rol
sub
jle
es
sub
dec
ret
repnz
or
dec
hlt
mov
mov
mov
cmpsl
inc
call
inc
loop
lahf
std
test
dec
inc
push
jp
add
xchg
pop
loop
js
sub
iret
arpl
inc
mov
pop
addr16
bound
nop
das
mov
sbb
xor
orl
adc
dec
adc
add
sbb
mov
loop
testb
mov
insl
inc
sahf
les
divb
mov
and
test
dec
xor
adc
push
xor
fidivl
cmpsl
pop
mov
popa
pop
jb
pop
or
je,pn
mov
cld
xchg
push
lds
and
mov
adc
xor
test
push
or
or
add
or
sub
cmpsl
faddl
cmp
ret
adc
adc
or
inc
pop
fidivrs
or
mov
dec
adc
outsb
mov
dec
add
inc
test
sub
into
inc
lock
lock
imul
xchg
add
or
push
push
add
iret
adc
out
sahf
mov
xor
lock
sub
sti
xor
cli
xchg
push
dec
xor
push
add
mov
addr16
mov
test
out
imul
sahf
in
dec
jnp
ljmp
pop
push
or
hlt
jbe
mov
fstpt
cmpsl
shll
in
cmp
pop
sub
adc
mov
push
andb
cmp
int
shl
adc
dec
aas
fdiv
scas
sbb
mull
mov
das
into
pop
mov
out
cli
pop
fs
mov
negl
mov
int
mov
cmp
push
je
mov
dec
xchg
mov
gs
fiadds
fsubp
scas
sbb
mov
ljmp
repnz
mov
xor
mov
jmp
movl
inc
test
xchg
adc
push
mov
mov
jle
aas
into
and
es
push
andl
cmp
mov
pop
mov
int3
ds
idivb
inc
outsb
xlat
mov
inc
flds
dec
cs
ret
push
into
push
aas
mov
aas
dec
and
ljmp
xchg
push
sbb
push
fcomp
push
outsb
enter
and
mov
push
aaa
repnz
ficoms
sbb
or
and
or
lods
xchg
rorl
ret
dec
inc
sbb
push
cld
jle
repz
xchg
jbe
out
sub
ja
push
jp
cmpl
mov
ret
jmp
lock
jo
test
jl
das
xchg
push
jg,pt
loope
jecxz
push
jnp
test
add
push
lods
mov
jmp
pop
xchg
dec
xor
fwait
leave
mov
dec
ljmp
dec
jo
ds
mov
inc
es
add
mov
mov
xchg
rol
and
mov
pop
jmp
cli
and
test
lahf
enter
push
sti
aaa
jle,pn
cmp
mov
pop
xor
dec
mov
jp
mov
jmp
ss
out
les
cmpsb
js
or
iret
loop
out
sbb
ljmp
cmp
shlb
clc
movl
ss
sub
cltd
repnz
daa
jge
out
movsb
cmp
aam
repnz
jne
ret
xor
loop
cli
lret
jb
stc
lds
cli
inc
xor
std
mov
pop
shl
pop
fdivl
jnp
jp
movb
into
push
decb
lea
inc
jp
xchg
out
fisubs
cmp
xchg
hlt
inc
std
fnstcw
int
data16
hlt
lds
loop
cmp
stc
xchg
push
aad
xlat
jp
push
cmp
movb
jmp
loope
jle
lcall
lret
push
mov
cmp
mov
or
movsl
mov
push
sub
adc
mov
ss
inc
pop
and
fldenvs
out
fnstcw
rcll
mov
int3
xlat
into
and
testb
and
cwtl
push
mov
xor
inc
xlat
xor
dec
mov
test
bound
stc
test
inc
jle
mov
cltd
mov
jle
or
mov
sar
cmp
jnp
jne
mov
addl
xor
call
cld
stc
cmp
test
incl
jno
fwait
roll
inc
std
mov
sub
and
push
sub
and
push
add
test
loope
inc
adc
xorl
jle
fs
xor
or
and
cs
push
cwtl
bound
adc
sbb
sub
repnz
xor
movl
pop
or
into
push
mov
cmp
adc
mov
xchg
inc
push
in
and
mov
mov
scas
mov
cmp
sarb
popf
mov
scas
jg
mov
fistpll
xor
sub
mov
adc
push
xor
cs
sbb
and
push
or
dec
mov
jp
and
dec
out
and
add
mov
xchg
mov
add
xlat
mov
fsubs
add
std
and
stc
jle
repnz
jne
mov
mov
hlt
imul
in
aas
xor
rorl
pop
sub
xchg
sarb
fimuls
inc
jle
outsb
addr16
dec
lods
xchg
lcall
pop
jbe
add
fucom
mov
cli
sti
mov
ja
testb
subb
add
mov
mov
or
xchg
outsl
or
dec
adc
push
jb
cs
jmp
fs
inc
in
int
sahf
inc
adcl
or
es
test
adc
push
jle
mov
jecxz
mov
mov
or
xchg
xchg
outsb
lcall
cmp
in
out
stos
jecxz
and
sub
dec
adc
fcom
enter
lds
insl
pop
es
outsl
fcomps
or
cmp
xor
out
movsb
mov
cmc
shlb
jnp
jmp
pop
lea
mov
loopne
or
cli
int
scas
push
out
fcmovb
in
pop
stos
mov
xor
loopne
negb
mov
fstps
mov
jbe
cmpsb
imul
mov
insl
cmp
inc
cli
ret
hlt
arpl
fcom
in
cmc
sarl
cltd
mov
insl
andb
lret
jo
arpl
ss
ud2
ret
ljmp
mov
push
and
xor
icebp
mov
sbbl
rcl
shrl
mov
push
mov
or
cbtw
jmp
cmpb
jns
push
data16
dec
lea
inc
sysret
dec
ffreep
pop
push
add
stc
addb
jle
ds
mov
fisttpl
mov
fnstenv
fsubrp
in
push
pop
push
in
and
mov
mov
push
out
mov
or
sti
add
lods
into
stos
test
in
mov
sbb
adc
cmp
mov
dec
loopne
sbb
dec
mov
aas
icebp
stos
sub
stos
xlat
or
inc
repz
in
jns
jp
out
jo
sbb
mov
sarb
add
add
enter
loop
iret
mov
or
cmp
push
mov
mov
icebp
ja
and
sub
cmp
mov
out
fidivrs
xchg
dec
int3
insl
cs
jecxz
enter
or
ss
fdivr
push
inc
insl
mov
dec
add
mov
stos
or
mov
lea
lahf
mov
dec
xchg
mov
pop
jp
sbb
sbb
movl
rolb
sbb
in
ljmp
jns
sahf
repnz
adc
inc
xor
or
and
sbb
sbb
push
fsubrl
inc
mov
mov
int3
pusha
int
outsl
sbb
mov
scas
push
adc
arpl
ret
xor
or
es
fistl
lods
js
cmc
sub
ja
and
cmp
xor
add
stc
lahf
lds
mov
movsb
insl
inc
icebp
mov
cmp
mov
sbb
mov
sub
sbbb
out
dec
pop
outsl
inc
mov
gs
std
stos
or
mov
xorl
ljmp
loop
sub
xchg
or
cmp
ss
or
pop
cld
ret
mov
jns
movsb
aas
sub
sub
cltd
ret
add
icebp
loop
cmpsb
lret
push
icebp
imul
or
lods
inc
stos
icebp
xchg
adc
cmp
mov
repnz
mov
push
mov
lcall
out
fidivrs
and
or
adc
jge
dec
icebp
jl
mov
pmaddwd
jle
icebp
test
leave
dec
add
inc
lahf
sub
out
outsl
mov
fabs
jle
cmpsl
daa
cmp
lret
fildl
mov
jno
inc
adc
adc
inc
aad
rcl
inc
lock
or
ficoms
jge
mov
sub
inc
jns
scas
fdivrs
jl
adc
adc
sbb
outsb
add
sub
or
cmp
jnp
sub
in
inc
cmc
ficomps
pop
ljmp
push
leave
adc
dec
mov
fstpt
loope
fisttpl
into
mov
or
cmp
mov
movl
dec
sub
cmp
loope
cld
cmpsb
mov
mov
sbb
push
inc
cmp
aaa
jne
mov
arpl
jne
mov
xchg
or
les
in
sbb
mov
pop
sub
lret
mov
ret
jge
test
jbe
nop
or
pop
insb
mull
cli
aaa
xchg
lret
add
sbb
mov
mov
int3
sahf
jmp
or
bound
mov
fadds
lret
es
out
fdivrl
sub
stos
dec
dec
mov
into
test
lret
adcl
mov
xor
fdivr
add
or
and
fidivl
push
push
push
mov
and
iret
aas
sub
inc
and
jmp
fstpl
mov
lods
or
aam
dec
cli
jae
scas
fidivl
orl
enter
lea
jmp
mov
mov
push
jle
cmpsb
pop
jp
leave
enter
pop
sbb
movsl
lods
out
or
or
pop
bound
xchg
pop
pop
mov
add
or
add
mov
inc
or
sub
jnp
cmp
jnp
mov
mov
fdivs
adc
xchg
inc
mov
add
jne,pt
pop
cmp
or
ret
cmp
mov
sbb
sub
mov
jecxz
jae
mov
xchg
add
in
push
cli
cmp
mov
imul
stc
dec
dec
mov
js
xor
ret
movsb
mov
and
mov
dec
std
iret
jmp
fistpll
rcrl
xchg
push
pop
mov
cmp
mov
mov
cwtl
add
push
sub
pop
jmp
push
or
xor
cld
jnp
mov
pop
ss
into
scas
cmpsb
pop
std
out
xor
orl
je
sub
movb
or
dec
mov
fimuls
adc
pop
mov
inc
int3
iret
es
mov
push
sub
and
mov
mov
int3
mov
dec
xchg
cmc
jmp
ret
ror
in
stos
js
out
and
fisubrl
movsl
inc
sti
inc
mov
fdivrs
xchg
fs
aas
sub
xor
cwtl
iret
jnp
int
adc
out
and
jg
mov
inc
es
loop
mov
jae
cmc
inc
hlt
adc
push
mov
sub
hlt
xor
aas
lods
mov
inc
pop
aas
cmp
sub
pop
mov
leave
or
lcall
sahf
fsubl
shrl
into
cld
insb
popa
add
mov
mov
cmp
test
sti
out
stos
mov
mov
mov
cmc
mov
mov
inc
dec
lcall
add
fbstp
xorb
cmp
mov
ret
fnstsw
pop
jle
rcll
xorb
xchg
mov
sarl
jmp
sbb
sarb
sub
xchg
cwtl
mov
mov
sub
xlat
push
xor
rcrb
cltd
fidivl
push
les
adc
dec
add
dec
and
mov
int3
call
jae
in
sbb
leave
int
jnp
jecxz
fadds
flds
pop
add
or
add
rcl
les
ja
mov
lods
cmpsl
xchg
mov
test
mov
in
out
adc
pop
je
fcompl
add
mov
movsl
mov
ss
repnz
das
mov
mov
mov
out
cmp
xor
add
js
push
sahf
les
out
mov
cwtl
lods
mov
addl
lret
ss
inc
or
adc
es
mov
les
jmp
pusha
rorb
mov
in
cmp
enter
outsb
mov
lods
dec
xchg
jbe
xor
rol
inc
mov
iret
ret
mov
xchg
cmp
ja
inc
cmp
loop
loope
jae
mul
mov
lret
jnp
es
nop
cld
xchg
fstpt
sub
add
loopne
jp
lret
pop
mov
das
rcrb
mov
mov
fisubs
fs
leave
lahf
xchg
enter
xor
fistpl
ljmp
insb
sarb
fisubrl
sbb
out
push
mov
movsb
mov
mov
dec
add
int
scas
mov
cmp
or
dec
outsb
cli
adc
xchg
inc
or
adc
jns
loop
pop
xchg
jbe
adc
mov
arpl
aas
loopne
add
adc
mov
je
scas
inc
pop
mov
and
sahf
inc
stc
jge
mov
adc
mov
xchg
imul
xor
mov
data16
mov
scas
sbb
icebp
scas
lcall
dec
or
fisttpl
scas
pusha
inc
insl
in
lods
fldenv
ret
lds
insl
out
es
sub
inc
and
pop
int3
mull
push
cmp
inc
les
imul
sub
neg
xor
loop
neg
leave
and
lds
ja
adc
out
push
decb
mov
fstl
lods
adc
enter
fisubl
mov
dec
cmp
mov
add
outsb
repz
xor
mov
add
mov
ret
sbb
pop
mov
mov
mov
dec
movsb
into
ret
test
sub
mov
ret
jmp
mov
mov
and
add
out
in
insl
mov
pop
lret
push
sub
test
fsub
mov
adc
cmp
addl
idivl
lcall
lret
xor
sub
xchg
jge
in
pop
ret
mov
fwait
cli
add
jp
mov
adc
sub
mov
xchg
push
ljmp
cltd
push
xor
cs
xchg
lret
sarl
or
ljmp
into
aad
sub
subb
fdivrl
out
inc
std
dec
and
mov
mov
test
fcoml
aam
push
iret
jle
jg
mov
hlt
mov
push
mov
int
lock
icebp
je
sub
adc
add
inc
rolb
add
ret
ret
sti
lds
fs
scas
xor
jnp
fnstsw
aad
test
jg
scas
xchg
decl
lret
xor
sbb
faddl
repz
inc
inc
lret
xlat
scas
mov
pushf
mov
sbb
pop
daa
dec
fsubs
lret
add
cld
std
sbb
sub
sbbb
mov
je
adcb
mov
sub
inc
es
cmc
inc
or
lods
stos
rcr
test
fdiv
hlt
std
or
loope
cmp
insb
inc
sbb
divl
jle
jle
adc
jb
dec
popw
in
push
fildl
mov
mov
adc
jp
adc
mov
pop
or
into
shrb
or
lret
jo
adc
and
subb
mov
lret
mov
mov
adc
mov
popf
es
ss
and
negb
dec
jns
mov
push
dec
cmp
lret
cmpsb
int
mov
xor
dec
shlb
adc
or
enter
sbb
and
hlt
xchg
dec
xchg
pop
mov
jle
add
test
repz
cmp
fadd
mov
lea
cmp
adc
xor
jns
icebp
out
sub
roll
test
lock
hlt
es
or
adc
cmp
mov
jecxz
mov
out
sbb
std
sar
push
loope
stc
scas
js
into
clc
dec
ja
xor
popa
flds
mov
into
sti
adc
sbb
adc
les
add
push
xchg
enter
or
lret
leave
not
ret
cmpl
ljmp
int
call
and
xchg
fsubrl
sbb
sbb
rcrb
imul
addr16
and
add
adc
mov
xlat
push
ds
push
xor
popf
xor
int3
jo
sbb
testl
and
fsub
pushf
test
stc
ficoml
ret
loope
in
inc
fcmovnbe
xchg
ret
mov
add
popf
test
add
mov
mov
call
xor
or
xchg
test
add
mov
loope
add
add
cmp
pop
pop
aaa
shlb
pop
dec
cmp
leave
aam
rclb
pop
ljmp
or
pop
pop
fistpll
xchg
ds
pop
push
sahf
jcxz
shlb
jmp
mov
js
jb
mov
mov
or
enter
add
nop
jae
push
lock
mov
outsl
push
fcmovne
and
cmpsb
mov
imul
sbb
mov
adc
pop
addl
cmp
out
ljmp
add
jg
mov
mov
fildl
lods
xchg
ret
sahf
out
lahf
xchg
outsb
ljmp
ror
pushf
stos
testb
ficompl
loop
jecxz
or
cmpsb
or
and
add
inc
fcoms
jne
dec
in
inc
inc
scas
call
or
mov
dec
sub
sub
jo
or
sbb
dec
sbb
and
pushf
mov
je
out
and
mov
or
mov
mov
and
popf
and
pop
or
test
clc
ret
dec
test
data16
hlt
movsl
loope
jmp
sti
movb
ss
cltd
xchg
scas
roll
inc
mov
sub
inc
adc
mov
aad
jo
test
ja
pop
push
push
sahf
iret
lcall
jecxz
mov
xor
or
lahf
xor
int
popa
xor
adc
shufps
pop
pop
sub
jnp
xor
and
sub
xor
loopne
in
hlt
pop
movsl
cmpsb
sahf
andb
adc
mov
or
mov
dec
xchg
iret
inc
fldcw
mov
movsb
mov
movsl
inc
mov
mov
inc
or
fistpll
mov
in
mov
rcrl
cmpsl
add
inc
dec
adc
add
mov
into
fcmovu
fidivrs
xor
outsl
mov
push
lods
inc
loop
pushf
pop
mov
mov
sub
ja
jp
push
mov
jecxz
mov
xchg
out
mov
ljmp
pop
push
in
mov
xor
test
pushf
mov
jmp
xor
sbb
mov
in
pop
jp
jnp
scas
xchg
pop
insl
or
xchg
inc
test
fimull
mov
daa
out
sub
mov
cmp
scas
mov
out
fsubp
dec
icebp
in
jnp
int3
pop
ret
sbb
mov
call
arpl
jo
add
icebp
nop
xor
testl
ret
and
imull
fisttps
inc
popa
sti
mov
int3
in
jge
cmp
loop
out
add
rorl
jns
test
and
push
cmp
sti
jmp
mov
es
popf
jae
mov
loop
ss
inc
fdivrp
cmc
call
push
and
mov
adcb
movd
and
repnz
sbb
loopne
repnz
cmp
push
lcall
mov
daa
mov
fwait
mov
js
outsl
aas
leave
pop
xchg
filds
sub
xchg
cmp
inc
jmp
int
lods
test
fadds
aas
hlt
sub
add
ficomps
sahf
das
pop
mov
xor
pop
outsb
lds
sti
out
mov
icebp
mov
pop
adc
cs
xchg
clc
idivb
cltd
and
into
push
and
testb
fidivl
cli
out
dec
ds
jbe
repz
xchg
clc
sub
jle
cli
lahf
pop
lret
mov
sahf
scas
jno
out
movsb
loopne
stc
inc
int3
daa
pop
push
int
test
dec
xchg
test
mov
lds
leave
inc
jg
xor
loopne
jp
sub
pop
jg
fwait
sahf
pop
add
std
fildl
mov
push
mov
xchg
xor
aas
add
xor
scas
jl
mov
movsl
mov
jae
daa
sbb
push
dec
and
cmp
in
push
pop
jge
dec
out
mov
es
lret
push
mov
fnstcw
pop
push
mov
mov
and
adc
cmpsb
add
imul
xor
xchg
dec
int3
xor
stc
mov
adc
lahf
shrl
pop
shl
daa
add
lret
cmp
mov
mov
icebp
dec
pop
or
outsb
sub
add
test
mov
fs
fidivrs
ljmp
in
fidivs
orb
popl
lock
movl
aad
mov
mov
into
out
jge
mov
pop
dec
fcoms
pop
addb
cwtl
daa
rclb
mov
pop
mov
sub
sbb
cmp
mov
into
es
adc
cmp
test
je
inc
push
mov
rolb
add
sub
mov
add
aad
fisttpll
or
jl
jne
lea
dec
icebp
jle
lods
xchg
ja
cmp
repnz
or
dec
inc
imul
and
test
out
repnz
adc
inc
repnz
divb
ss
pop
leave
mov
push
fsubp
mov
push
dec
jp
daa
xchg
inc
subb
loope
and
fdivrs
sub
test
cmp
mov
scas
jns
adc
insl
cmpsl
jmp
ret
movsb
movsl
pop
mov
shlb
nop
or
aaa
mov
pop
xor
outsl
aad
into
mov
or
ja
add
inc
mov
add
xchg
xchg
insb
cmpsb
out
pop
mov
loope
push
data16
fdivrl
int3
push
out
ret
jmp
jecxz
sub
jns
frstor
add
mov
mov
les
xor
jne
stc
test
sbb
imul
jecxz
aas
sbb
adc
fldt
ds
test
mul
sahf
lods
jp
sub
shlb
mov
sub
ss
inc
mov
rolb
in
or
xchg
andb
icebp
jl
push
inc
xor
cwtl
and
jp
jbe
cmc
pop
sahf
inc
xchg
push
inc
xchg
jge
lret
or
cli
aas
arpl
out
mov
jg
jns
pop
mov
or
mov
xlat
leave
inc
fwait
jmp
mov
mov
lret
or
lods
jns
xor
popf
cld
jl
sahf
push
dec
mov
mov
xchg
repnz
mov
int3
jge
sti
cs
sbb
xor
dec
mov
adc
daa
testb
scas
call
jl
push
dec
sub
lods
ja
mov
scas
xchg
lock
mov
mov
fcomip
and
mov
ficoml
push
cwtl
lret
lret
inc
test
fidivrl
jp
sub
mov
push
mov
push
sbb
fwait
sub
jo
or
aas
mov
leave
fdiv
sbb
adc
fstl
test
lahf
sub
fbld
and
bound
add
scas
test
mov
cmpsl
and
jecxz
or
pop
adc
pop
loopne
ja
pusha
or
fs
adc
mov
cmp
loop
pop
pop
idiv
or
add
pop
push
mov
inc
push
mov
nop
mov
fs
int3
leave
jne
mov
js
jbe
mov
inc
addr16
pop
mov
xlat
xchg
mov
dec
pop
je
pop
push
lods
push
pop
adc
lahf
jg
or
sti
or
out
inc
hlt
vmwrite
ds
mov
pop
test
loop
movsl
and
ficompl
inc
pop
mov
jmp
mov
jle
ret
sarb
mov
sub
xlat
movsl
shr
out
or
cltd
sbb
les
es
push
imul
fdivl
jae
push
fwait
adc
pop
adc
adc
pop
cli
ret
add
xchg
sarb
push
jp
sti
mov
dec
gs
dec
cld
sbb
ret
lods
mov
add
pop
push
cwtl
push
mov
or
ret
movsl
repnz
mov
or
movsb
mov
xchg
scas
and
push
dec
jnp
loop
push
push
xlat
rol
cmp
stos
cmpsl
ret
push
ljmp
sbb
sbb
lret
or
adc
shlb
lcall
inc
cmc
setle
inc
das
push
mov
jl
gs
imul
push
lods
push
rcr
sub
and
xchg
add
cli
incb
mov
jmp
lds
inc
scas
jo
dec
sbb
mov
xlat
xchg
inc
push
mov
sahf
cmc
push
fisttpl
mov
lods
jno
jno
push
js
push
jp
dec
xchg
decb
mov
mov
cmp
mov
cmp
lret
mov
int
outsb
dec
fnstsw
mov
mov
scas
jg
lret
adc
inc
insl
out
sti
mov
dec
dec
test
repz
adc
mov
add
push
and
sbb
mov
push
mov
add
pop
xchg
clc
push
dec
enter
vphadduwd
outsb
xchg
dec
add
iret
aad
and
push
out
push
test
ja
es
ss
pop
shll
out
push
stos
outsb
aad
lret
cmp
and
inc
int3
mov
jo
outsl
dec
mov
inc
dec
enter
cwtl
dec
mov
xchg
inc
and
pop
in
or
out
add
aas
push
pusha
js
and
movsl
or
mov
jp
sahf
xchg
or
sbb
out
cmp
ret
inc
mov
movl
adc
inc
ret
mov
loope
sbb
aaa
and
add
ljmp
bound
sbb
ret
sub
fdivs
xchg
and
lock
sub
mov
pop
movsb
lods
mov
jecxz
inc
inc
out
cmp
rcr
or
test
pop
into
mov
or
push
in
xchg
or
clc
push
push
jl
das
out
pop
fs
repnz
push
inc
jg
or
dec
push
mov
in
aas
out
cmp
jae
loope
jmp
bound
xor
mov
ret
sbb
jg
andl
mov
xor
fsts
ja
push
mov
dec
shrl
dec
pop
data16
int3
and
std
mov
mov
stos
push
adc
lods
push
movsb
cmpl
jne
scas
mov
push
sahf
lock
mov
shll
imul
scas
lret
cmpsl
test
jecxz
enter
sub
mov
out
dec
mov
pushf
add
das
imul
das
lods
inc
ljmp
xor
pop
mov
sub
popa
mov
sbb
inc
dec
inc
lahf
gs
mov
inc
sbbl
lcall
enter
loope
push
and
mov
lret
fcomps
xlat
jo
or
inc
inc
add
mov
xlat
jle
cmp
lahf
lds
jp
push
xchg
outsb
enter
int
mov
popf
cs
movsl
scas
adc
aad
ret
in
iret
jecxz
adc
fiaddl
adc
out
mov
outsl
into
or
lock
or
pusha
pop
stc
int3
inc
cmpsb
scas
mov
mov
jmp
in
icebp
shll
faddp
scas
push
mov
call
jmp
adc
inc
xchg
loope
add
cltd
xchg
loopne
mov
or
jl
out
mov
push
push
cmpsl
shl
int
inc
dec
into
cmp
int
dec
icebp
lods
cs
push
adc
ss
inc
loop
push
icebp
xor
popf
cmp
faddl
xchg
jnp
jecxz
lods
sbb
cld
cmp
js
aas
mov
add
or
cmp
mov
xchg
push
pop
mov
pop
cli
adc
test
xlat
out
or
fisttpl
cwtl
dec
loop
ljmp
out
and
dec
fimuls
xor
andl
out
pop
or
pop
mov
mov
addr16
into
sub
xor
push
into
xor
cld
in
int3
add
push
aaa
push
stos
sbb
pop
fsubl
fwait
loop
and
sub
jne
adc
clc
test
and
cmp
pop
fidivrs
sub
add
adc
ret
test
push
mov
dec
add
dec
ljmp
pop
dec
sahf
or
jmp
sahf
inc
push
xlat
mov
in
mov
push
add
aad
pop
ds
ljmp
inc
jecxz
mov
lods
je
imul
test
shl
cmp
scas
mov
lcall
inc
es
icebp
stos
sub
aad
enter
or
sti
cmpsl
sahf
in
sbb
imul
lret
jo
mov
xchg
sbb
inc
fldt
rcrb
push
gs
mov
sub
data16
out
sbb
in
sub
decb
cmp
xor
push
repz
jnp
cmpsl
push
sarb
cmpsl
sbb
mov
sub
test
push
lret
mov
sarl
xor
ds
into
lods
sbb
inc
push
add
ljmp
outsb
movb
sarb
out
xchg
fstl
divb
loope
and
mov
iret
xchg
shlb
cmp
jg
leave
mov
mov
subl
stos
out
adc
enter
and
es
dec
cld
pop
jbe
fstpl
test
and
insl
loopne
mov
nop
enter
inc
mov
inc
int3
or
cmpsl
dec
rdpmc
fsub
inc
xor
add
sub
inc
lahf
pusha
push
das
rolb
movsl
jnp
ret
push
push
out
rcr
loope
fscale
sbb
out
aas
or
fldt
adc
push
add
mov
sub
sbb
pop
xor
lock
pop
and
add
adc
ret
sub
push
dec
jecxz
insb
adc
ljmp
dec
cmp
outsl
cwtl
inc
insb
adc
inc
dec
repz
lahf
nop
je
shlb
inc
shll
cwtl
dec
cmpsb
inc
lods
stc
cltd
push
push
or
pop
adc
jmp
sub
or
pop
fistl
mov
pop
adc
sbb
fstpt
xchg
push
rcrb
and
data16
push
mov
pop
sub
xchg
dec
xor
xor
ds
aaa
bound
push
pop
cmp
dec
pop
adcl
adc
cs
fcmovbe
cs
cmp
addl
xchg
xchg
lret
aaa
sub
xor
sbb
adc
and
sbb
push
pop
sub
ja
fsubr
mov
sub
xor
push
pop
xor
xor
inc
or
xchg
sbb
loope
lret
call
ds
ds
jb
xor
ljmp
xor
loop
xchg
inc
pop
sar
cmp
mov
jg
bnd
jl
movsl
mov
or
sbb
addl
es
cld
mov
pop
pop
xchg
add
pop
mov
cmp
mov
into
in
lods
sub
dec
ljmp
push
mov
sahf
add
sbbb
xchg
push
testb
stc
inc
and
mov
scas
mov
inc
mov
sarl
xor
ret
leave
or
lods
mov
ficomps
ffree
int3
jnp
or
ljmp
jns
pusha
or
cmp
mov
out
not
cli
testl
out
sbb
push
xor
cwtl
fldl
out
sarl
inc
sub
lods
pop
xchg
jo
jae
lahf
lcall
mov
jmp
ficomps
mov
movsb
add
push
cmpsb
mov
push
push
fsubr
lcall
addl
std
loope
aam
rcll
add
sub
sbb
xchg
ss
adc
pusha
lret
pop
push
xchg
sbb
movsb
bnd
ljmp
icebp
lahf
sbb
lret
cmc
xchg
test
notb
out
inc
ret
inc
sub
push
dec
push
daa
stc
repz
xchg
mov
xchg
hlt
pusha
xchg
lea
fcmovnb
movsb
lea
dec
cltd
bound
fists
mov
out
jle
sarl
pop
xchg
aam
call
jmp
adc
enter
cmpsb
inc
sub
add
out
fadd
xor
dec
aad
mov
enter
lds
ret
cwtl
push
stos
or
call
xor
pop
push
movsb
loop
xchg
jno
xchg
xchg
or
push
pop
mov
mov
adc
cmp
out
or
mov
sub
inc
lret
cmp
mov
pop
test
fcompl
cmp
sahf
aam
sub
test
enter
xchg
lds
push
lods
dec
xchg
repnz
push
add
lret
dec
cmpsb
jae
mov
mov
mov
shll
jl
pushf
ljmp
int3
dec
cmp
sbb
out
mov
movsl
insb
imul
adc
icebp
jle
lds
xchg
pushf
pop
cmpsb
lcall
cld
push
sbb
les
push
mov
sahf
daa
dec
dec
movsl
sub
xor
push
movl
mov
pop
enter
shl
mov
sahf
popf
aas
lret
push
pusha
mov
stos
dec
adc
movl
out
nop
pop
gs
mov
pop
sahf
adc
push
pop
in
add
mov
fucomp
push
std
adc
pop
dec
int
ljmp
lods
inc
iret
mov
mov
lds
clc
inc
fidivrl
jg
stos
xor
into
daa
mov
pop
enter
std
les
sub
dec
mov
inc
clc
out
fcoms
lahf
and
inc
sysenter
mov
stc
jne
popa
leave
xchg
mov
pop
xor
jl
lret
mov
loop
mov
fiaddl
inc
in
sbb
fcompl
push
push
inc
push
iret
aaa
jl
mov
fisttpl
repnz
or
pop
sahf
inc
dec
stos
mov
leave
popl
and
test
out
or
out
pop
push
shl
cld
dec
mov
ficoml
jl
loope
xor
or
xchg
sub
dec
lret
and
dec
ds
jne
cmpsb
push
dec
dec
xor
cmp
push
push
mov
xor
iret
cmp
stos
sub
dec
fcomps
ret
xor
int3
add
fcomip
loope
jmp
gs
mov
jb
mov
cmp
bound
scas
scas
or
fldl
push
dec
bound
adc
jne
mov
or
iret
enter
xchg
and
out
ret
inc
jb
mov
pushf
dec
fcmovnu
or
or
repnz
inc
fsubs
sar
out
inc
or
sahf
cli
push
call
iret
stc
sub
loopne
lcall
mov
mov
mov
inc
divps
data16
fists
stos
loopne
ss
adc
lcall
push
in
xor
stc
gs
adc
call
ret
mov
int
xchg
push
mov
mov
loopne
loopne
push
rol
add
add
inc
scas
clc
sub
sarl
dec
fiaddl
lds
lret
inc
or
or
lahf
cmp
neg
inc
enter
sub
mov
mov
rorb
push
xchg
pop
stc
movsl
in
adc
fstps
enter
pop
lock
inc
enter
and
sarl
inc
js
jb
ficompl
lds
cbtw
sbb
jb
subb
cld
cmp
inc
out
hlt
cmp
jle
ljmp
xchg
jge
mov
inc
aaa
xor
enter
iret
mov
insl
imul
mov
push
stos
sbb
mov
iret
das
pop
cmp
mov
xchg
int3
cmp
add
outsl
not
repnz
inc
nop
add
pop
popa
sbb
or
pop
mov
dec
idiv
inc
bswap
data16
push
mov
ret
cmp
sub
jmp
jp
add
sahf
dec
adc
cmp
cld
inc
lcall
mov
push
xor
or
in
fwait
jae
ret
stos
js
fnstenv
es
int3
imul
push
clc
mov
mov
jge
cmp
or
fcoms
cld
lret
lods
sub
fstpt
aas
xor
out
and
mov
add
rorb
mov
add
xchg
inc
cli
xchg
sahf
das
push
dec
lock
ret
es
daa
ljmp
inc
cmp
lods
movsb
into
mov
sub
aad
in
mov
jp
mov
xor
fnsave
lret
add
imul
daa
mov
push
cmp
lret
push
enter
cmpsb
adc
mov
add
mov
loop
repnz
cmpl
jl
xor
jb
in
sub
lods
lret
or
or
lret
adc
adc
inc
es
ret
in
aas
out
lret
adcb
repnz
pop
xor
lock
fisubl
fcoms
loope
inc
sarb
add
lods
popf
add
fs
jle
out
xor
pop
fistpll
and
sub
cmp
push
xchg
not
hlt
xor
cmp
mov
mov
dec
jne
ljmp
push
push
cli
shr
add
lret
mov
arpl
mov
jb
mov
ret
bound
data16
push
sahf
dec
cmp
mov
sub
test
hlt
clc
mov
clc
data16
mov
dec
sbb
adc
mov
sbb
pop
pop
and
mov
cmpsb
shlb
js
lret
sahf
pop
cmp
repz
arpl
mov
push
pop
inc
lret
sub
outsb
out
pop
imul
pop
movsb
push
xor
lock
fcmove
sub
insl
in
jmp
add
inc
inc
enter
pop
mov
ret
imul
add
mov
cmp
loop
jp
ljmp
popf
mov
mov
mov
or
jle
outsl
mov
xchg
idivb
ret
sub
sarb
fmul
popf
fmul
add
sub
and
ficompl
jb
mov
fwait
and
mov
scas
or
inc
loopne
sahf
js
jg
mov
jp
or
out
push
into
in
clc
adc
cli
adc
mov
popf
stos
not
scas
mov
inc
and
into
pop
ret
into
loope
mov
fisttpl
inc
icebp
js
movb
mov
lahf
scas
adc
xchg
mov
mov
rdpmc
divl
push
cwtl
lahf
sub
aam
cli
mov
ret
pop
xchg
and
lahf
stc
scas
fsubs
fucomp
inc
das
bound
fdivp
mov
xor
leave
dec
push
cs
iret
out
aam
into
jge
push
lahf
fisubs
adc
ljmp
cmp
loop
loope
in
lea
stc
fimuls
sub
mov
cmpsb
aaa
mov
aaa
mov
in
and
push
mov
mov
push
and
outsb
xor
jl
pop
les
sbb
mov
js
sub
fistl
dec
mov
out
jl
lods
or
jo
sbb
inc
aas
out
push
lahf
cmpsl
pop
xorl
push
mov
mov
mov
rorb
fisttpl
or
cltd
or
into
aas
or
out
mov
pop
push
dec
sbb
ljmp
or
inc
adc
rol
pop
les
sbb
xor
rcl
stc
pop
jp
outsl
enter
pop
mov
inc
pop
mov
in
mov
pop
or
cli
cli
adc
mov
push
out
push
mov
movsb
jb
lret
int3
add
lea
outsl
mov
lret
add
adc
fmull
jmp
push
lret
push
pusha
enter
jbe
cmp
outsl
daa
mov
setb
aas
adc
mov
cli
add
sbb
add
ffreep
lahf
fstps
insb
sbb
out
adc
cmp
cmp
or
addl
push
sub
sarb
cld
sbb
out
jp
mov
adc
dec
pop
bound
sahf
fs
inc
addr16
movsb
mov
mov
flds
outsb
dec
mov
push
fs
mov
push
push
bndstx
cwtl
movl
loope
bound
dec
xchg
or
push
call
dec
push
sahf
xor
dec
out
addl
mov
sbb
sub
xorl
jb
int3
sbb
sub
scas
xor
arpl
xchg
bound
mov
push
scas
xor
insl
jb
ret
cmpsl
test
pop
ret
adc
jp
icebp
cs
dec
mov
ds
mov
dec
jae
and
add
ss
insb
enter
xor
xchg
nop
dec
pop
sub
xlat
shll
in
into
jmp
icebp
test
mov
lods
pop
jg
js
jl
mov
mov
mov
out
es
pop
adc
addl
cli
idivl
shl
xchg
das
and
ljmp
xlat
test
jns
imul
arpl
jecxz
sbb
jecxz
push
dec
scas
lahf
shl
mov
out
in
add
pop
mov
mov
mov
lahf
ljmp
cltd
pop
mov
sbb
jb
xchg
inc
incb
mov
arpl
imul
xor
lret
addl
sub
dec
push
cmp
and
push
ljmp
jnp
adc
mov
adc
outsb
push
fisttpll
cs
adc
or
lods
sbb
outsb
gs
add
or
mov
jle
lret
repz
or
aam
in
inc
or
lods
push
jnp
or
loop
dec
mov
loop
ljmp
fs
inc
cld
clc
pop
cmpsl
xchg
mov
repz
dec
mov
stc
outsb
fldl
movsb
dec
push
xchg
mov
int
jnp
jno
not
jle
mov
addr16
pop
rcrl
pop
pop
les
cmp
and
cmp
subb
dec
ds
sub
pusha
xor
xor
push
cmp
sahf
icebp
out
leave
mov
insl
fsubs
add
clc
lret
divb
or
ret
cli
jecxz
inc
cmp
inc
in
scas
roll
fimuls
inc
sbb
mov
fucomip
mov
jb
and
dec
pop
jno
jp
cmp
rolb
enter
jo
repnz
push
inc
lret
dec
sbb
or
aas
fistpll
fadd
das
and
sbb
pop
lret
mov
dec
pop
pushf
out
push
dec
inc
fcoms
jne
stc
and
fcmovne
aaa
jnp
mov
fwait
mov
jb
adc
adc
push
mov
xor
mov
stos
inc
cmpsb
dec
lret
push
xor
mov
sbb
aas
push
int3
push
xchg
divb
lds
pop
or
fimuls
popa
aad
pushf
mov
inc
inc
ds
hlt
inc
xor
pop
adc
mov
pop
push
jmp
ja
mov
push
fldt
imul
or
fwait
or
mov
fcmovu
pop
push
jns
lahf
lods
mov
icebp
into
adc
pop
mov
pusha
out
and
lods
jnp
mov
int
rorl
lret
cltd
and
rcll
insb
sbb
lret
out
adc
sbb
inc
cltd
dec
fidivs
cmp
pop
sub
mov
loope
adc
pop
sub
push
dec
data16
xor
cmp
test
in
inc
mov
push
fs
mov
adc
idivb
lret
insb
ss
mov
adcl
mov
inc
cmp
push
jno
and
or
add
pop
sub
jno
sbb
adc
mov
or
dec
lods
loopne
iret
mov
xor
jb
leave
sahf
jae
sub
mov
ss
add
and
scas
inc
clc
rol
adc
fdivrs
and
into
push
test
cld
rcl
js
clc
movl
outsb
dec
jle
xor
and
mov
cmp
lock
and
mov
out
sub
dec
ret
push
push
pop
daa
sbb
cmp
mov
ds
xor
fmulp
cmp
xchg
dec
mov
es
cli
aas
inc
sbb
mov
xor
sbb
pop
pop
testb
out
mov
xchg
neg
adc
mov
cmp
bound
add
add
negl
cli
pusha
ret
cmp
xchg
dec
jne
ror
sub
sub
sbb
in
scas
push
dec
clc
mov
movsl
addr16
mov
movsb
sbb
sahf
sub
movsl
jecxz
lods
sbb
mov
into
pop
jecxz
cmp
hlt
xor
mulb
jae
adc
mov
pop
aam
xchg
aam
lcall
fmuls
sti
dec
inc
andb
cmp
insl
and
std
arpl
pop
xchg
incl
pop
ret
sti
dec
cmpsl
addl
out
add
xchg
jle
add
cmp
cmp
sbb
out
into
sar
mov
jbe
mov
pop
arpl
iret
jnp
ja
push
sbb
cmpsl
dec
aad
scas
pusha
mov
fiaddl
outsb
scas
cli
add
mov
aas
mov
je
in
test
imul
dec
jle
mov
or
dec
pop
cmp
ljmp
into
repnz
cmp
push
cmp
pop
pop
sbb
mov
in
mov
out
mov
fidivs
pop
push
or
ficompl
dec
sbb
fidivs
pop
fld
mov
ds
pop
daa
dec
mov
inc
lret
or
inc
notb
sub
call
cmp
sbb
xor
ficoml
pop
mov
cli
and
inc
cli
jne
popa
mov
xor
repz
nop
sbb
std
pop
push
ds
xor
sbb
sbb
push
sbb
ficoms
testb
leave
sbb
lret
fstpl
mov
xor
hlt
or
adc
mov
pop
sub
cli
push
aas
and
and
fiadds
rclb
mov
jmp
ja
inc
or
enter
enter
shlb
lea
pslld
adc
xchg
daa
insb
into
ljmp
int
clc
add
sub
xchg
int
sub
add
dec
stos
int3
cwtl
jno
xchg
aam
outsb
lahf
pusha
sub
aas
sub
adc
leave
xchg
jo
aaa
sub
mov
adc
mov
sahf
mov
sti
add
call
cmp
push
dec
xchg
dec
adc
jp
inc
push
pop
sbb
in
adc
xor
jnp
pop
and
or
fbstp
in
mov
xchg
mov
shll
lret
fnsave
dec
push
pop
inc
lods
cmp
das
push
dec
jle
das
nop
lret
std
push
leavew
stos
mov
iret
movsl
sbb
int3
xor
push
bound
add
int3
sbb
cld
push
push
insb
enter
out
adc
out
push
pop
push
leave
xchg
mov
sbb
jge
inc
pop
dec
lret
pop
stos
dec
mov
inc
mov
mov
jl
jg
adc
andb
dec
mov
mov
es
adc
std
pop
add
sub
push
std
out
mov
or
cltd
jbe
lea
sbb
xlat
aaa
xor
cmp
scas
xchg
sbb
add
jle
mov
pop
adc
push
mov
jge
test
and
pop
mov
xor
adc
mov
add
mov
mov
fcoml
jg
negl
stos
sysenter
jl
add
or
incb
sahf
sti
or
mov
add
cltd
in
pop
dec
cmp
add
cmp
repnz
xor
mov
mov
jb
lcall
sti
repnz
out
xchg
daa
bound
loop
cmp
ficomps
add
fadd
dec
repnz
jle
icebp
mov
sbb
jno
repz
sbb
fnstsw
fsubrp
repnz
add
roll
aas
in
leave
ss
push
push
ds
mov
push
std
shlb
arpl
pop
or
lret
adcl
jp
loope
lret
push
and
add
iret
fmul
ljmp
jge
pop
icebp
shrb
lds
loopne
aad
dec
sub
push
inc
loope
aad
pop
sbb
push
jmp
popa
clc
rcrb
pop
dec
test
dec
inc
sbbl
clc
pop
and
mov
adc
cmp
fdivrp
pop
or
push
and
inc
out
pop
les
xchg
adc
inc
or
loopne
clc
cmp
ficomps
sub
push
fdivrs
mov
jg
aaa
inc
sahf
mov
mov
data16
dec
add
inc
pop
jle
sub
orb
in
es
pop
mov
sub
stos
shlb
out
rorb
decl
mov
test
add
cmp
xor
rcrb
mov
fdivrs
rcll
inc
mov
fcomps
mov
rol
inc
sbb
or
std
push
xchg
push
cmp
xchg
dec
add
sbbb
jl
pop
stos
out
into
aas
jb
les
les
mov
pop
cs
sbb
add
stos
mov
inc
xchg
xlat
inc
sub
inc
add
enter
or
enter
and
push
out
aam
cmc
push
pop
test
fisubl
mov
sar
push
add
ret
ret
mov
and
leave
push
dec
into
or
enter
add
mov
and
pop
xchg
jns
lret
and
mov
dec
lods
jmp
scas
jb
jl
sub
or
arpl
sub
insl
xor
dec
stos
sti
shl
mov
mov
adc
pusha
out
sbb
mov
loop
jl
int3
jg
test
jmp
stc
lds
popf
mov
es
mov
mov
mov
lea
jnp
popf
pop
adc
add
xchg
cmp
ret
mov
stos
jnp
xchg
dec
cmc
orl
mov
sahf
sahf
imul
dec
sbb
and
inc
cmpsl
scas
repnz
jl
cmpl
add
outsb
scas
cmp
sbb
push
xchg
iret
adc
pop
pop
cmp
repnz
mov
movsl
ljmp
das
out
mov
dec
ficomps
popf
cs
test
cmp
xor
cmp
inc
test
push
push
cmp
or
sahf
mov
fisubrl
fildl
xor
pop
push
jmp
push
vsqrtpd
lcall
ljmp
fimuls
jp
add
jno
jne
jle
ja
scas
xchg
push
sub
addr16
or
dec
pop
fdivrp
add
inc
or
fisttpll
loop
aaa
mov
lock
and
ljmp
stos
and
adc
jbe
dec
std
out
mov
test
mov
xchg
ljmp
rorl
xchg
ret
outsl
sbb
out
es
lcall
out
adc
arpl
rorb
fsubrp
or
aas
mov
and
mov
jo
jb
jle
cmc
mov
xchg
sub
mov
enter
jecxz
mov
mov
push
or
inc
fidivrs
lcall
mov
mov
int3
inc
or
shlb
scas
mov
loop
or
in
fxch
pop
test
leave
jnp
xor
cmp
rorb
jne
cmpsb
or
call
stc
not
sub
enter
jl
popa
mov
and
lret
shlb
fsubs
or
loop
mov
mov
adc
cmp
in
xor
int3
negb
and
pop
imul
push
xor
sub
or
add
dec
das
shl
mov
mov
rcrb
sbb
scas
adc
xor
loop
std
or
or
dec
xchg
push
lea
mov
mov
lods
pop
sar
inc
sbb
cltd
xchg
sub
mov
cmp
aaa
mov
enter
ret
pop
jecxz
aas
sti
adc
push
enter
pop
inc
ret
dec
loope
cmpsl
sahf
pop
add
fdivrs
fiadds
jno
lock
pop
push
adc
in
lock
sti
sarb
ds
push
dec
xor
outsb
add
stc
dec
cmp
cmp
mov
mov
int3
icebp
mov
aas
insb
xor
push
mov
out
adc
cmp
cld
inc
sub
and
cmp
sahf
fildll
aaa
fadd
inc
in
or
cmpsl
xor
mov
xor
test
ja
jle
mov
fldl2e
cli
push
or
in
or
cmc
cmp
clc
pop
notb
push
mov
mov
or
gs
inc
lret
push
jl
add
dec
icebp
or
inc
or
mov
xchg
fwait
push
outsl
lods
sahf
ljmp
movsl
decb
icebp
mov
es
cmp
out
pop
push
rcl
in
andps
jmp
adcl
jp
es
xchg
in
add
mov
add
dec
mov
xchg
pop
cmc
mov
pop
std
add
js
lds
jb
out
xor
mov
push
dec
push
lcall
and
add
mov
icebp
or
in
jl
or
fwait
out
cmp
xlat
les
sbb
lods
into
je
lds
daa
enter
add
push
or
subb
jge
push
cli
pushf
fisubrs
repnz
dec
push
or
insb
lock
push
dec
imul
pop
xchg
pop
adc
addb
loopne
mov
jg
test
mov
fistl
dec
jno
dec
pop
xchg
imul
or
push
js
dec
in
rclb
mov
fidivrl
or
cmpsb
ljmp
movsb
inc
cld
xlat
add
iret
dec
add
sbb
call
mov
xor
sti
jp
sti
xor
lret
add
pop
sub
or
test
repnz
out
mov
inc
xorl
loop
or
or
insl
sbb
push
outsl
mov
pop
std
mov
int
or
daa
aas
or
jp
push
ja
push
jge
idivb
xlat
adc
add
ret
xor
xchg
loopne
int3
sbb
xor
int3
jg
sbb
repz
movsb
xchg
jmp
maxps
out
or
or
imull
pop
lcall
sahf
adc
cmpsl
dec
pop
add
xor
lods
add
pop
stc
repnz
dec
cwtl
sahf
cmc
xadd
xor
imul
inc
or
jecxz
add
js
loop
jecxz
adc
or
jne
mov
lock
lret
jo
out
daa
shl
push
stos
inc
pop
push
push
shl
stc
cmpl
or
gs
ret
inc
dec
push
decb
xchg
sbbl
dec
scas
into
icebp
call
enter
lock
cld
mov
jl
xor
push
cmpsb
sahf
lcall
or
fnstcw
xor
out
pop
in
push
sbbl
pop
imul
js
push
loope
dec
inc
sub
dec
mov
xor
call
xchg
add
adc
add
mov
inc
dec
pop
sahf
dec
imul
sbb
lret
pop
adc
adc
fcmove
and
cmp
jns
pop
push
int
mov
jno
mov
dec
or
jnp
inc
dec
add
dec
incl
cmpsb
lea
adc
xchg
bound
shrl
pushf
cli
lret
test
or
inc
ljmp
mov
out
and
lret
fnstenv
test
lods
leave
add
xlat
mov
mov
testb
push
movb
notb
std
mov
mov
loop
cmc
loop
outsb
bswap
mov
sub
ret
loop
pop
stos
decl
into
cmp
fs
jo
lret
mov
pop
ljmp
aas
xor
xor
aad
daa
lret
fdivrp
test
cmc
outsl
mov
push
lea
pop
fbstp
jb
stc
or
test
or
jle
js
out
cmp
loop
dec
idivb
jmp
add
mov
subl
and
ret
mov
mov
mov
adc
adc
in
lret
jnp
xchg
ret
stc
fistl
pop
scas
mov
pop
pusha
inc
and
xor
je
in
fs
fstpt
ja
scas
adc
repz
mov
sbb
movsl
inc
in
push
clc
sbb
push
inc
push
pop
int
cmp
jle
add
scas
out
sub
xchg
sbb
push
outsb
jb
and
xchg
push
and
movsb
decb
test
push
fmul
hlt
dec
inc
mov
jg
or
fstpl
fiaddl
jl
pop
les
std
mov
inc
cld
cmc
jl
mov
aad
pop
adc
jnp
aas
dec
jno
cmp
pop
lods
sahf
add
fistpll
ljmp
push
gs
push
add
insb
icebp
imul
jae
adc
or
dec
cli
movsb
cltd
push
jp
add
adc
xor
nop
outsl
xlat
push
dec
xchg
andb
incb
cld
into
shrb
push
sahf
fcomps
enter
sti
repnz
push
movb
stos
dec
shl
push
pop
or
xlat
movsb
sahf
aas
js
xchg
loop
inc
or
or
sbb
sub
cs
or
ret
dec
test
lcall
sub
jae
nop
imul
jecxz
sbb
jnp
aam
insb
adc
sbb
pop
in
mov
pop
sbb
mov
cli
sbb
fadds
mov
bswap
sub
jnp
or
addr16
xlat
fcmovu
or
cmc
cmp
sub
das
mov
sbb
pop
jge
pop
sub
sbb
mov
sub
test
lds
sbb
loopne
popf
lret
push
enter
push
inc
pop
xor
fdivrp
pop
or
nop
fsubrs
sub
sbb
test
ds
xlat
jmp
ds
add
lcall
fwait
mov
fmul
ds
std
mov
adc
es
les
xor
dec
dec
jae
fwait
or
push
pop
test
jne
pop
mov
cli
out
ret
cli
repnz
xor
push
mov
mov
pop
jne
push
sbb
add
hlt
and
das
mov
fwait
neg
mov
test
jle
mov
out
outsb
jb
push
adc
addps
ja
pop
repnz
loop
cmp
loop
cmp
xor
test
mov
negb
sub
subb
ret
cli
mov
xor
mov
xor
mov
adc
sub
sbb
scas
outsb
loope
mov
add
repnz
stos
jge
adc
mov
jp
cmp
adc
fldl
add
mov
clc
mov
mov
out
push
or
adc
push
mov
and
mov
ds
movsb
mov
and
jmp
xchg
iret
sub
or
xor
addb
fildll
inc
sub
in
or
sub
loop
out
or
and
lcall
hlt
push
aaa
jns
mov
cmp
jmp
lahf
cmpl
push
dec
mov
iret
test
cmp
aaa
js
sbb
sahf
lcall
xchg
pop
js
mulb
cmp
or
mov
add
orl
dec
dec
xchg
inc
push
push
adcl
adcb
scas
fwait
hlt
or
dec
rorl
loop
or
or
mov
push
in
mov
xor
mov
fdivr
int
cmpsl
outsl
dec
add
out
or
or
or
inc
pop
mov
pop
push
not
lds
sbb
fidivrs
loop
rcll
sbb
and
rcrb
adc
into
cmc
lret
mov
loopne
inc
cld
add
xchg
lret
ja
xor
or
sub
stos
aas
add
dec
inc
test
inc
dec
cmc
mov
lahf
test
adcl
test
and
inc
fcompp
jmp
out
out
cli
outsb
mov
and
or
xor
mov
stos
mov
rep
int3
rorb
mov
adc
arpl
sub
and
xor
fucom
sahf
dec
lret
pop
lret
lock
dec
jmp
hlt
inc
jne
arpl
xchg
xchg
pop
add
in
cmp
push
arpl
test
push
sti
cld
sbb
jecxz
int
sahf
fwait
bound
pop
inc
and
hlt
inc
add
mov
in
mov
retw
cmp
xchg
and
mov
imul
aam
stc
shlb
mov
cli
inc
add
push
mov
addb
and
push
out
mov
sbb
or
enter
add
pop
inc
cmp
into
enter
add
xor
insl
and
jle
js
imulb
int
xlat
dec
mov
cmp
scas
cmc
adc
out
sahf
add
ffreep
cmp
or
dec
clc
fsubr
cmp
or
daa
dec
repz
push
or
ds
jbe
or
stos
cli
xchg
jg
ss
imulb
or
lods
insb
mulb
outsb
jmp
or
call
adc
int3
gs
outsb
or
or
pushl
repnz
push
pop
adc
push
mov
adc
jbe
sub
push
cld
stos
dec
pop
adc
fimuls
cwtl
or
mov
clc
insb
pop
fstps
inc
fisubrs
and
stos
clc
sbb
mov
mov
aas
in
jbe
mov
push
inc
mov
cmp
arpl
inc
cvtpi2ps
shll
xchg
sbb
inc
push
pop
sti
shr
mov
inc
adc
pop
stc
mov
xor
adc
pusha
or
jg
or
sbb
shlb
mov
or
jp
sbb
sti
dec
sbb
std
sub
fimull
sti
testb
fimull
std
fcmovnb
ja
sti
and
and
and
out
sub
pusha
mov
or
cmpsb
mov
stos
lret
icebp
mov
mov
aaa
dec
mov
or
or
push
clc
mov
inc
cmp
loop
adc
shr
mov
in
inc
jb
xchg
jp
insl
xor
mov
lcall
lahf
xchg
neg
mov
popf
mov
clc
loope
stos
pushf
test
sub
cmp
not
push
fs
push
and
fldl
sub
stos
and
jecxz
push
aas
fbld
inc
dec
scas
or
rorb
sub
pop
jb
push
fadds
test
push
outsl
lock
addl
or
inc
fidivrs
les
outsl
mov
icebp
jb
fs
jg
mulb
jge
push
cli
cmc
fmul
cmc
inc
jo
and
or
pop
xor
jecxz
out
sbb
mov
xchg
mov
adc
sbb
cmp
xchg
in
add
mov
inc
stos
dec
pop
mov
or
ljmp
xchg
and
inc
fimuls
jge
out
pop
mov
insb
or
std
add
movsb
inc
dec
stos
jb
add
loopne
sbb
inc
mov
imulb
xor
sub
and
xchg
jecxz
lahf
adc
add
cwtl
mov
add
out
lods
popa
lock
loope
sbb
int
icebp
pop
fimull
cltd
mov
mov
faddp
add
fldl
add
xor
jge
add
inc
pop
sti
or
pop
sub
or
sbb
sbb
filds
dec
bnd
xchg
int3
inc
lea
cmp
divb
and
in
or
jle
inc
roll
jecxz
es
or
test
mov
ljmp
sahf
popf
adc
jg
lods
jl
inc
out
jnp
jmp
out
mov
fnsave
or
sbb
sbb
or
out
sub
push
sbb
mov
mov
or
mov
dec
enter
dec
into
pusha
xor
into
lret
rcll
push
and
xchg
jecxz
cmp
fs
in
cmp
aaa
dec
lods
mov
add
test
xchg
pop
sbbb
aad
mov
mov
insl
sub
jp
mov
pop
fsubrl
or
sbb
or
iret
icebp
loope
fisttpl
sahf
cmp
lock
imul
xchg
outsb
loop
or
loop
mov
test
adc
xor
pop
loop
mov
pushf
jmp
xchg
xchg
adc
push
adc
rolb
orb
inc
or
mov
movsl
in
cmp
mov
push
and
repz
cmp
and
lret
sub
add
dec
sbb
xor
adc
arpl
xchg
sahf
lods
jae
sbb
cmp
jg
out
rcl
xor
cmpsb
js
jge
inc
lret
inc
jbe
je
loop
mov
es
cs
lahf
pushf
or
mov
test
fnstenv
loopne
inc
ffreep
and
xchg
push
cld
mov
dec
jmp
mov
inc
dec
xchg
lds
enter
rorl
roll
jecxz
mov
xor
cmp
jge
mov
pop
inc
mov
xor
sbb
xchg
sbb
jb
fildl
in
push
sbb
mov
inc
jp
out
push
pop
mov
sbb
sub
push
fmul
out
notl
adc
xchg
imul
imul
enter
sbb
jmp
iret
xchg
js
jb
jl
or
mov
sahf
fcomi
ljmp
mov
imul
pop
fpatan
push
out
xchg
adc
dec
loop
outsb
cmp
sub
shrb
sti
and
mov
js
and
ficomps
push
enter
cmc
push
cmp
insl
and
divb
push
dec
popa
sbb
pop
xchg
inc
jnp
ficomps
fisttpll
mov
lods
mov
adc
test
cmp
dec
or
aas
jge
mov
xchg
and
jnp
movsb
incb
scas
aas
ficoms
mov
inc
out
test
jne
out
daa
fildl
inc
jg
aam
lea
jecxz
xchg
jle
out
movl
jmp
movsb
sbb
cmp
mov
cmpsb
std
fs
add
inc
inc
push
xor
fisttpl
mov
mov
xor
std
loopne
jecxz
pop
pop
popf
shll
xchg
sub
fucomp
fs
hlt
lods
dec
adc
or
sbb
ror
mov
inc
int
fnsave
lahf
lods
lret
mov
lret
in
push
loope
dec
and
push
push
mov
dec
hlt
arpl
sbb
jmp
lcall
pop
and
jnp
push
cmc
test
je
mov
cmpsb
push
inc
or
lods
dec
leave
pop
push
sbb
mov
fldt
dec
jnp
push
ss
cmp
fisubrl
add
jl
outsb
iret
xchg
mov
mov
sub
repz
cmp
ss
sub
in
sub
aaa
out
mov
lahf
call
inc
pop
sub
add
movsb
mov
mov
sbb
clc
push
or
dec
cltd
adc
add
or
dec
or
outsl
add
inc
sbb
fadd
scas
aad
aam
stos
xor
cmp
daa
rcrb
insl
xor
and
or
pop
or
mov
mov
cmp
frstpm(287
pop
test
push
sub
pop
cmp
or
mov
mov
pop
mov
inc
sarb
push
pop
sub
cli
add
loopne
into
fs
xor
dec
mov
int3
jle
mov
jg
lcall
mov
in
and
sbb
adc
sbb
mov
or
pop
sbb
and
jnp
dec
or
dec
bound
inc
sub
cmp
adc
jge
push
dec
es
push
xchg
jp
movsb
dec
mov
lods
lds
cmpsl
xor
bound
aas
and
ds
dec
and
fstpt
push
jecxz
push
int3
or
cli
jp
std
sbb
jp
jle
orb
outsb
dec
dec
push
das
xor
icebp
stc
sub
mov
sarb
mov
cmp
int3
stc
mov
sti
lret
cmp
cmp
loopne
sti
mov
into
movsb
loop
pop
cmp
sti
out
sub
dec
enter
scas
sub
add
out
adc
sahf
loopne
jge
xor
aas
inc
fists
jg
out
add
fisubl
push
jae
shl
jne
cmp
mov
xor
not
sahf
daa
cmp
mov
inc
xor
mov
sbb
sub
push
sub
in
lahf
push
add
aas
mul
rcll
or
xlat
sahf
int3
mov
sub
cs
push
push
popa
mov
lock
sub
xchg
fwait
sub
cmp
out
xlat
dec
push
lahf
add
and
jecxz
mov
fsts
pop
fistl
pop
and
inc
push
xlat
aam
pop
nopl
pop
mov
pop
insl
xchg
fdivl
push
xor
andb
xchg
push
jp
imul
xchg
cmc
cltd
inc
dec
mov
xor
sbb
int
sub
mov
stos
and
data16
sahf
out
loop
xchg
inc
les
inc
bnd
int
sub
test
adc
jmp
enter
push
enter
or
es
icebp
fcoms
fiaddl
adc
les
cmp
xchg
xor
add
xlat
lret
stos
scas
fidivl
rorb
ret
or
pop
or
inc
js
arpl
js
push
and
pop
fdivrl
loope
arpl
pop
add
testl
push
jp
fadds
shll
loop
cmc
add
sbb
xchg
fmulp
inc
mov
call
aad
lods
push
pop
lcall
mov
jb
cmpsl
mov
aas
cmp
cmp
shl
sub
arpl
lahf
fistpll
out
sti
xchg
lds
cmp
inc
dec
sbb
mov
enter
adc
je
xchg
dec
rorl
jmp
jnp
pop
xchg
cmp
lahf
pop
leave
shll
aas
popa
cmc
stos
iret
std
inc
cmp
adc
sbbl
mov
rcr
mov
ja
rolb
fs
test
pop
dec
sarb
sub
push
push
jg
test
lods
lret
repnz
out
sub
sub
pop
cmp
sarl
fldl
jecxz
dec
lahf
inc
mov
add
jo
mov
cmp
aas
adc
or
dec
loope
aas
add
add
popa
in
jo
mov
filds
mov
inc
pop
push
cmp
inc
jns
sahf
push
les
push
inc
sahf
xchg
add
mov
in
les
adc
push
int
arpl
testl
adc
outsl
aas
adc
add
loope
iret
adc
add
repz
bound
out
fldcw
or
dec
adc
fcomps
mov
loop
jns
sub
sbb
lahf
sti
int3
xor
mov
mov
inc
jl
or
stos
sbbb
loop
shrb
mov
and
es
sbb
leave
mov
outsl
test
jmp
or
inc
fwait
lret
sub
call
or
push
popa
add
mov
fcompl
jge
mov
imul
sarb
mov
in
push
push
sbb
ss
mov
jb
adcb
stos
mov
sub
xor
outsl
js
adc
sub
adc
sub
mov
dec
out
push
rclb
cmp
xor
mov
filds
sahf
lret
sbb
cbtw
adc
pop
aas
fstl
mov
pushf
jo
inc
imul
pop
mov
push
mov
out
adc
xchg
clc
and
fildll
mov
testl
nop
dec
jae
mov
ljmp
jae
and
cmpsb
or
fwait
in
jo
lea
ret
mov
pop
ja
insl
jbe
test
leave
data16
mov
stc
jg
pop
insl
fstl
jnp
dec
rcrb
lock
xlat
mov
mov
jmp
cmp
int
cmp
push
test
ljmp
rcr
jb
imul
iret
xor
pop
lret
and
adc
jg
pop
mov
push
sub
cs
ret
ss
xchg
inc
int
mov
fildll
js
sbb
pushf
aas
stc
rcrb
xchg
arpl
fwait
lcall
in
cmpl
mov
push
fildl
mov
adc
push
lods
cmp
jno
push
mov
xor
dec
dec
daa
rcl
test
test
scas
aaa
das
jle
sub
jle
mov
or
rcpps
xchg
mov
mov
push
sbb
sbbl
add
lock
xchg
mov
add
push
mov
sub
sub
dec
outsb
jo
fcmovnb
mov
inc
pop
xchg
cmp
xchg
pop
mov
mov
popf
ds
fnstenv
std
loope
inc
fdivr
ret
mov
int
repz
fs
mov
mov
lds
cmp
push
jo
cmc
xchg
or
or
xor
sbb
es
mov
xchg
ret
shll
out
adc
mov
xchg
mull
mov
and
inc
cld
sub
jne
pusha
rolb
mov
adc
inc
or
cltd
sub
out
mov
push
sti
mov
mov
es
jp
push
outsb
xchg
mov
pusha
fcmovu
jo
mulb
pop
je
loope
or
add
sbb
sbb
push
iret
xlat
es
dec
sbb
xlat
sub
lcall
or
bound
sahf
adc
mov
out
pop
mov
inc
mov
nop
mov
push
mov
pop
lock
test
mov
or
out
cmpb
push
mov
in
ljmp
sub
pusha
cwtl
cld
adc
dec
ljmp
and
sub
cli
dec
xchg
sub
in
inc
xor
inc
cmp
sbb
pop
mov
loopne
mov
mov
xor
es
nop
in
mov
or
sahf
push
and
xor
js
loop
aas
sahf
mov
es
ja
cli
pop
cmp
stos
dec
sbb
sahf
fs
out
jle
sub
test
add
dec
scas
ja
push
mov
mov
ja
lret
add
cmpsl
clc
mov
fdivs
add
ds
cli
sbb
and
push
push
push
dec
ret
sahf
add
cmp
cltd
cld
sahf
icebp
xlat
aas
push
repnz
idivb
cld
mov
mov
in
mov
push
cs
cli
and
dec
dec
jns
adc
or
cmpsl
cmp
sahf
ror
scas
sti
cmp
out
xchg
fwait
mov
xchg
hlt
pop
xor
iret
into
lret
xor
loope
int
je
data16
jmp
inc
add
pusha
push
iret
out
or
dec
mov
or
fnsave
fmull
or
ret
adc
popa
mov
dec
xchg
das
pop
pop
xchg
push
jae
sub
rcl
fldt
leave
into
inc
jp
ret
testl
xor
movsl
rorl
shll
fistpll
and
frstor
mov
xlat
or
sub
xor
stc
pop
stc
das
fwait
inc
or
ret
dec
mulps
fs
es
out
jns
fcoms
mov
loop
pop
or
sahf
push
stos
fcmovu
mov
mov
test
jno
and
or
cmc
jne
or
xor
jl
xor
sarb
rcrl
xor
repnz
xor
fisttpl
shrb
cltd
xchg
add
arpl
xor
jge
jnp
gs
xchg
outsb
mov
dec
or
xor
outsl
jle
sub
add
xchg
fimuls
outsl
es
and
pusha
repz
dec
xor
cli
add
mov
jl
jo
jnp
pop
dec
fldt
pop
sarb
or
xchg
jge
adc
sti
adc
fwait
gs
fisubl
popa
inc
in
scas
add
cmp
inc
mov
jnp
movsl
ret
ds
cmp
out
jg
cld
xchg
mov
out
lahf
sub
dec
das
ficomps
pop
loopne
push
hlt
dec
pop
loope
fwait
ret
add
mov
xchg
sub
cmpsb
fidivl
adc
popa
loop
mov
add
stos
enter
pop
lods
mov
loop
out
fwait
stos
stos
xor
xchg
inc
sub
xorb
xchg
movsb
add
movl
dec
test
adc
jecxz
push
ja
and
lahf
dec
out
dec
or
or
mov
daa
cs
fnstenv
in
pop
add
or
les
frstor
sahf
dec
or
xor
mov
scas
scas
or
fnstenv
inc
mov
cli
dec
clc
sub
out
decl
pusha
lcall
icebp
mov
cli
roll
popf
aad
mov
cli
mov
or
cmp
adc
cmp
test
pusha
imul
mov
subl
sbb
and
sub
adc
cmpsl
dec
fwait
push
or
jp
adc
sti
adc
fsubrs
adc
sbb
in
xrelease
sub
mov
mov
adc
cmpsl
test
in
and
push
hlt
cmp
sbb
xlat
add
out
mov
lock
jge
adc
jnp
pop
std
jecxz
jp
jae
xchg
fnstsw
jno
xchg
imul
pop
aaa
cmpb
xchg
cmp
mov
xchg
aas
sahf
filds
push
xchg
sbb
ljmp
adc
xor
push
jge
pop
aam
lea
xchg
dec
cmp
rcl
or
xor
mov
push
mov
lea
jmp
xorb
mov
filds
cmp
push
or
xor
push
js
out
idiv
pop
mov
movsl
mov
sbb
rolb
sbb
xchg
lret
dec
sub
lcall
sbb
mov
testb
mov
shl
sbb
imul
push
sahf
ficompl
fsubr
clc
jecxz
jp
push
xchg
and
cltd
add
sub
loope
mov
or
shr
cmpsb
sub
sub
mov
lds
mov
subb
adc
aas
in
cld
sahf
or
cmpsb
iret
stos
ljmp
cmp
ss
add
lret
out
imulb
mov
shlb
mov
push
fistpll
mov
mov
jns
xchg
sti
mov
adcl
test
xchg
or
in
mov
mov
enter
inc
popf
fiadds
xor
lret
sub
repnz
mov
mov
dec
mov
insb
pop
and
loop
pusha
mov
test
jo
pusha
sbb
mov
enter
pushl
cld
sbb
gs
mov
out
inc
repz
xor
idivl
xor
jg
push
jbe
sub
and
sahf
call
lods
daa
xorb
sub
jb
xor
call
adc
xchg
ret
out
adc
xor
or
xor
inc
jne
mov
jbe
cmp
sti
push
jp
fiaddl
mov
push
subl
nop
std
adc
imul
out
xor
sub
lcall
outsl
sahf
inc
in
dec
pop
fwait
cmp
jb
pushf
lcall
into
push
dec
lcall
sub
cld
int
rol
adc
cld
stc
xlat
add
or
adc
mov
data16
jne
or
sub
lret
inc
jno
scas
mov
inc
adc
mov
add
mov
mov
or
lcall
or
push
pop
or
sahf
mov
mov
inc
push
popf
push
adc
loopne
mov
push
inc
ss
inc
fnstenv
and
sahf
push
inc
adc
cmp
imul
mov
int3
xor
pop
dec
adc
pop
adc
or
xlat
repnz
xchg
mov
sti
orb
dec
bound
out
clc
test
rcl
jns
pop
ficoms
jno
add
leave
lret
gs
xchg
in
adc
insb
mov
addl
mov
rcrb
testb
xchg
adc
mov
test
jl
inc
mov
loope
xor
pop
cmpsb
xor
das
clc
je
cli
rolb
jo
or
mov
in
iret
fsubr
fnstsw
and
cmp
mov
adc
fcmovnbe
fcomps
loope
adc
push
jbe
insl
push
inc
or
inc
imul
aas
add
and
mov
vphsubw
cmp
xor
inc
xchg
test
cmp
roll
dec
inc
mov
ror
lods
clc
dec
push
clc
fidivrl
loop
fisttpl
add
push
dec
mov
roll
adc
push
mov
or
mov
dec
imull
out
push
dec
adc
adc
movsl
sti
jecxz
js
adc
ljmp
or
jg
jle
repz
xchg
push
es
idivl
icebp
mov
lods
sub
adc
loop
adc
lret
mov
dec
jo
mov
ret
and
push
lcall
clc
pop
add
cltd
xor
or
or
xchg
push
sub
ficomps
rcrb
xor
or
icebp
pop
pop
lds
ret
sub
cmp
data16
out
or
enter
mov
mov
mov
adc
call
push
fistpll
xchg
test
adc
jae
cwtl
sub
fistl
test
cli
fcmovu
dec
mov
pop
mov
into
sbb
stos
fdivl
jnp
rol
xor
je
out
sub
cmp
out
sub
cli
clc
movsb
pop
stc
dec
adc
jge
das
ss
sarb
outsl
mov
cmpsb
fldenv
in
into
mov
xor
fists
cmpsl
inc
adc
sbb
sbb
lahf
sbb
lahf
out
adc
shrl
lds
ret
loope
out
rcll
inc
leave
fs
mov
ret
pop
loope
push
testl
or
int3
jns
out
mov
inc
xchg
into
testl
sti
or
stos
dec
push
cli
lods
imul
or
mov
repnz
sub
lock
or
inc
dec
or
outsb
xchg
stos
dec
inc
repz
push
jb
shll
outsb
sub
or
mov
loopne
mov
push
sub
pop
or
cmp
xchg
or
add
xchg
into
cwtl
push
mov
daa
shr
popf
es
addr16
movsl
insl
xchg
or
out
mov
cs
aas
mov
movsb
jg
iret
mov
push
shll
bound
int
sub
inc
stc
push
jmp
push
test
jae
call
jl
xor
ja
loope
or
insl
adc
loop
push
aam
rcrb
aad
push
movb
xchg
add
cmc
scas
stos
push
pop
mov
or
sbb
mov
clc
loope
or
faddp
mov
lds
jo
loop
mov
push
je
outsb
and
and
push
pop
arpl
xlat
adc
dec
test
sti
aas
loope
pop
int
enter
jo
or
fstl
outsb
mov
sahf
push
arpl
mov
popa
adc
pop
cmp
cwtl
push
out
fimull
cli
adcb
mov
push
out
ret
xor
dec
lahf
xor
add
sti
shlb
jbe
pop
stos
mov
cmp
es
fisubrs
push
mov
out
inc
lock
dec
test
mov
aam
test
xlat
or
xchg
in
insb
xchg
inc
push
add
fadds
xor
push
das
stc
mov
jo
in
aam
cmp
mov
lock
icebp
lret
mov
mov
jae
inc
mov
imul
mov
out
pop
leave
lods
out
incb
jns
sbb
dec
or
fxch
int3
pmaxub
add
add
ds
sub
inc
xor
sysret
loopne
fists
sbb
fidivrl
sahf
push
cld
out
push
clc
out
mov
dec
sub
mov
adc
adc
out
adc
scas
jne
insl
adc
iret
aas
sub
ljmp
sti
rcll
lret
call
add
xchg
stc
or
out
cli
sti
fisttpll
pop
push
lret
gs
xor
outsl
add
in
adc
mov
test
daa
mov
push
lods
xchg
roll
cltd
inc
jns
pusha
or
addb
notb
sub
pushf
add
or
fldt
sbb
cmp
sbb
rclb
adc
or
jns
or
sahf
jne
jle
rcr
icebp
xchg
jle
xlat
lock
or
sbb
inc
cmpb
testb
aad
sub
imul
enter
insl
xchg
add
pop
fdiv
cmp
push
sub
bnd
lret
cmp
mov
scas
popf
mov
nop
xor
xor
push
push
adc
imul
jle
out
ljmp
push
add
mov
push
jns
sbb
push
cmpsl
jbe
scas
xchg
sbbl
popa
adc
imul
je
stos
idivb
add
out
xor
xor
pop
push
fwait
jo
fsubs
negb
aas
mov
xchg
dec
out
ret
push
or
arpl
push
inc
lods
and
mov
dec
lret
push
cwtl
xor
mov
test
in
fildll
mov
jne
addr16
lods
mov
pusha
cltd
or
xchg
mov
imul
test
xchg
xchg
cs
push
inc
push
cli
lret
mov
pop
call
push
std
pop
mov
pop
adc
es
ljmp
js
or
aad
int3
jo
cwtl
into
and
lds
jecxz
mov
cmpsl
cli
mov
fimuls
sub
decb
mov
je
sub
stc
sub
jmp
inc
lods
jb
push
adc
bound
idiv
ficoms
mov
fisubs
lret
out
rcrb
out
mov
ljmp
jp
push
mov
inc
cmp
idivl
loope
xchg
mov
lods
mov
jge
mov
mov
mov
inc
das
icebp
push
or
cwtl
pop
gs
aaa
loope
adc
aas
lret
int
sahf
mov
lret
mov
xchg
scas
mov
sbb
add
mov
repnz
and
xor
add
sahf
inc
xchg
ret
aas
aad
mov
cmp
sbb
jo
imulb
inc
loopne
push
das
adc
mov
scas
adcl
or
add
cmp
jle
shlb
aas
mov
cmp
into
orl
push
rcl
orl
cs
push
mov
and
call
mov
jle
dec
aas
or
insl
aam
jb
mov
into
ror
and
or
cpuid
test
jb
pop
shlb
pop
or
idivb
in
popa
inc
outsl
mov
mov
loop
out
jnp
mov
or
jg
cmp
outsb
shrl
and
adc
les
out
std
enter
xchg
aaa
out
cld
shrb
fstpl
aas
lret
add
ja,pt
fistpl
push
into
les
xor
enter
inc
bound
in
insb
xor
push
mov
inc
push
loopne
inc
sahf
mov
cwtl
push
jecxz
dec
mov
sarl
cltd
imul
enter
fstpl
add
sbb
lret
add
xor
std
add
push
insl
or
pop
inc
add
adc
pop
sbb
cmpsb
lret
cwtl
lods
adc
add
mov
mov
fimuls
or
push
sti
in
mov
add
test
adc
mov
and
add
notl
mov
jae
loope
sahf
inc
cltd
loope
sahf
lahf
cmp
insb
or
in
clc
jg
les
cmc
dec
mov
ljmp
pop
int
bound
pop
in
and
mov
xor
test
fistpl
xor
mov
test
das
or
and
orl
lea
dec
xor
inc
loopne
jbe
fprem
pop
repnz
pop
clc
iret
mov
xchg
ficomps
aaa
in
lahf
rcrb
sbb
lret
dec
push
loopne
addb
lods
mov
fldcw
loopne
arpl
jmp
adc
mov
fdivs
mov
inc
xor
daa
adc
es
or
mov
push
xor
dec
or
mov
jb
std
rolb
add
int3
fisubs
inc
dec
pop
in
mov
sbb
xchg
pop
in
fiadds
loope
les
cmpsb
ljmp
ffree
cld
fadds
loop
fbld
cmpsl
test
adc
shll
mov
fdivrs
subl
daa
adc
sbb
add
push
mov
in
hlt
or
or
cld
sti
in
pushf
xlat
cmp
aas
mov
xor
lret
sub
push
mov
sbb
mov
mov
jae
inc
jne
xchg
jge
mov
adc
cmp
out
push
loop
add
ss
push
cmp
inc
movb
aam
cmp
pop
add
sub
inc
inc
stc
mov
jmp
cmp
fsubl
mov
sbb
push
cmp
ret
add
addr16
xor
mov
enter
jl
lahf
dec
adc
fdivl
cli
cmc
and
xchg
in
push
pop
and
xchg
bound
fsubr
xor
lds
mov
xchg
xchg
add
test
xlat
sub
xor
jp
add
out
enter
adc
mov
xor
mov
orb
mov
or
lcall
icebp
jo
out
jno
cld
or
adc
shl
mov
sub
shrl
push
fnstcw
adc
push
jbe
inc
mov
xorb
ror
out
cmp
ret
add
test
add
sti
stos
xchg
mov
sub
or
push
shll
mov
ficompl
sahf
xlat
out
stc
ret
pop
add
mov
test
mov
cmp
and
pop
fs
push
sahf
or
stos
icebp
mov
leave
into
lret
xchg
jbe
loop
sahf
dec
fsts
lret
mov
mov
divb
inc
lret
and
repnz
enter
lods
xchg
mov
fiadds
pop
ret
or
mov
test
sahf
or
push
xchg
pop
lock
ss
sahf
idiv
fdivr
xchg
daa
cmp
lods
jle
xor
xor
cmpsb
ror
fistpll
xor
and
dec
das
in
xor
ret
lret
xlat
cmp
mov
inc
outsb
xor
adc
pusha
aad
std
lahf
jo
int
popa
fdivrs
or
enter
mov
mov
jb
arpl
insl
add
cmp
jns
addr16
dec
add
fisubrs
lret
fldcw
jmp
sub
jg
pop
in
jecxz
inc
xchg
inc
adc
pushf
aad
jbe
mov
pop
push
sbb
int
ss
jbe
stc
pop
xor
cmp
lahf
push
movsb
xchg
leave
xchg
push
aas
es
rcr
fs
cmp
mov
test
inc
out
pop
mov
std
mov
sahf
ds
jbe
xchg
cmp
push
nop
pop
mov
cmp
mov
in
cmp
rcr
xchg
lcall
outsl
lock
jbe
test
xchg
addr16
ret
inc
dec
aam
ja
enter
mov
jbe
aam
cli
imulb
mov
imul
roll
frstor
hlt
aad
fcmove
shufps
pop
cwtl
sbb
xchg
cmc
xchg
fadd
pop
hlt
mov
mov
stos
add
movb
pop
popf
mov
jle
fisttpl
pop
xor
cltd
or
in
sbb
lret
inc
jnp
rcrl
loop
lret
out
roll
in
mov
repnz
rol
aam
lahf
adc
push
dec
or
data16
xor
mov
fs
cmp
pop
jb
xchg
and
and
inc
sbb
jo
into
jmp
enter
mov
stos
sahf
dec
stos
enter
out
stc
xlat
insb
movsb
xchg
sahf
pop
mov
adc
pushf
fimuls
push
jno
jnp
push
out
inc
sahf
mov
fld
daa
rol
rcll
pop
shl
and
ret
repz
ret
rcll
orl
adc
cmp
fsubrl
add
rcl
sti
xor
iret
adc
fistl
xor
cltd
pop
dec
xor
xlat
lret
js
sub
or
push
inc
enter
pop
adc
pop
js
xor
cli
cltd
std
dec
ror
mov
ret
jmp
sub
out
icebp
cwtl
test
shrb
sub
out
ds
into
movsl
hlt
sub
mov
out
sarb
pop
iret
push
and
inc
out
dec
pop
jne
jno
lahf
sub
add
in
add
xchg
inc
cmp
lds
in
into
adc
scas
int
sbb
int
adc
pop
lret
push
dec
xchg
ficompl
int
pop
push
iret
fisubs
dec
or
int
leave
cltd
int3
insb
jle
int
stos
jp
sbb
cmpsb
cmp
cwtl
cs
cmp
sub
sti
pop
out
nop
mov
lret
jp
int
mov
pop
pop
pop
push
push
sub
push
xlat
fisubrs
dec
push
xor
add
into
push
or
cmp
lcall
lret
mov
pop
int3
cmp
jbe
repz
fildl
xchg
sahf
icebp
or
sbb
mov
test
rolb
lret
nop
mov
aaa
scas
and
xlat
popa
leave
stc
sub
sahf
fs
mov
ret
mul
mov
stos
mov
dec
push
dec
push
jge
xlat
pop
sbb
cltd
push
pop
loope
xchg
push
xlat
mov
jo
popa
xor
in
or
sub
je
jns
ss
push
test
cmpb
add
xchg
push
push
xchg
mov
insl
xchg
jo
jbe
sbb
cmp
sbb
fisttps
jge
outsl
int3
out
xchg
lea
push
test
insb
movl
push
movsb
jmp
adcl
movsb
sti
out
cwtd
lea
push
test
cmp
inc
out
xor
movsb
jmp
push
xchg
inc
mov
mov
jge
mov
cwtl
rol
lds
dec
add
notb
gs
inc
sarb
jl
loop
jno
fsub
test
daa
mov
sarl
xlat
fadd
sbb
out
popa
lods
fsub
jo
push
sub
inc
out
add
dec
std
pop
movl
xchg
sbb
sub
in
jne
cltd
les
lahf
push
mov
mov
ror
add
push
int
or
dec
add
clc
xor
push
and
lock
or
das
notb
xor
outsb
sub
mov
repnz
or
pop
stos
adc
insb
movb
pop
mov
jbe
push
or
leave
inc
xchg
pusha
in
pushf
lcall
cli
and
pop
pusha
sub
or
shl
pushf
jg
mov
push
add
cwtl
imul
push
dec
sbb
lret
loop
out
sahf
pop
in
xor
daa
test
call
mov
into
dec
lods
fsubr
cmp
dec
mov
xchg
xor
inc
mov
mov
cmp
in
call
ljmp
cli
sahf
addl
cmpsb
pusha
rep
and
pop
jmp
lret
inc
repz
adc
sti
cwtl
cmp
fs
call
scas
sti
in
sbb
loopne
mov
lret
fsubr
inc
or
fisttpl
stos
jbe
stos
and
imull
ret
pop
lret
fidivl
out
xor
xor
fcmove
mov
dec
or
dec
xor
imul
jl
mov
dec
mov
mov
push
sub
ljmp
push
aas
or
dec
ss
lods
imul
mov
into
add
fmuls
inc
xchg
mov
mov
mov
shr
or
scas
jmp
popa
loope
testb
mov
dec
and
inc
pop
mov
jnp
bound
stos
mov
add
inc
jo
or
out
stos
add
push
or
addr16
mov
jb
sub
cs
push
arpl
psadbw
inc
xchg
cmp
shl
lret
push
sbb
or
xchg
stos
sarb
out
scas
jecxz
hlt
incb
subb
call
mov
lds
bound
fld
cmp
ds
dec
jp
shl
cltd
adc
mov
rol
cmpb
cli
xchg
fcmovbe
cmp
fstl
aas
inc
out
into
dec
cmp
adc
outsl
inc
pop
out
loope
mov
sbb
pop
mov
fldenv
fnstcw
jp
xlat
scas
xchg
dec
cld
movb
movsb
decl
or
push
pop
imul
leave
xchg
cmp
shrl
out
lret
leave
sahf
cmp
pop
cmp
cmpsb
adc
and
cmp
ss
sahf
pop
fists
dec
cld
xchg
jmp
mov
fnstcw
xchg
lods
out
scas
mov
cmp
dec
scas
clc
pop
mov
sti
loopne
inc
mov
push
fmuls
and
adc
test
shll
movsl
fisubrl
mov
rolb
enter
test
test
mov
test
imul
cmp
jecxz
das
pop
in
imul
fucomip
inc
mov
jae
aas
shl
pop
je
int3
std
adc
mov
ljmp
sbb
xchg
ds
cwtl
mov
lea
jno
test
xchg
or
add
iret
xor
push
inc
xchg
cmpsl
pop
rcll
mov
cmpsb
sbb
lea
adc
or
stc
shrl
outsb
stc
mov
into
ss
push
cmp
int
aaa
loopne
mov
xchg
mov
fwait
jl
aam
sahf
rcrb
xor
dec
sub
movsb
mov
push
push
lret
dec
movsb
push
repz
jbe
mov
jg
ds
in
mov
add
add
rcrb
cmp
inc
int3
inc
lcall
cmpsb
fnsave
fmull
out
sbb
or
cltd
xor
add
loopne
mov
pop
bound
mov
push
fxrstor
orl
js
test
adc
enter
add
mov
pop
mov
ret
cmp
aaa
fidivrs
mov
mov
push
loopne
dec
add
lcall
add
push
cli
mov
das
cmp
mov
stos
inc
mov
insb
pusha
cmp
rcrl
inc
xor
inc
pop
jl
or
loope
call
xchg
cs
add
jle
mov
ljmp
loope
xor
sti
mov
xor
push
xchg
insl
or
jb
push
lea
call
inc
flds
lret
jae
mov
cwtl
mov
mov
dec
jge
arpl
adc
stc
pop
or
lret
repnz
jne
mov
cmp
in
mov
xor
sub
xchg
xchg
xchg
mov
cli
push
mov
or
mov
aaa
mov
in
lock
mov
xor
xchg
jp
cli
fldt
into
jb
mov
pop
adc
or
les
or
xor
sahf
lods
jp
sbb
push
mov
lods
pusha
jge
lahf
pushf
mov
cmp
xlat
or
mov
in
scas
inc
lock
repnz
addl
ds
cmp
test
inc
test
push
fucom
data16
cltd
cmpb
lea
jl
xchg
jl
leave
out
lahf
movsl
adc
jecxz
pop
filds
sahf
jno
rorl
lcall
and
gs
jno
and
or
loop
cltd
jnp
test
sbb
xor
and
push
mov
ljmp
jmp
mov
hlt
js
or
mov
xor
aam
gs
int3
cmpsl
push
js
je
stos
sar
xor
push
or
test
gs
mov
cmc
cltd
rcrb
pop
inc
add
jne
scas
pop
cmpsb
dec
or
mov
in
jl
je
xchg
in
shlb
sub
add
mov
fdivp
jg
addr16
fidivs
bound
sahf
rolb
lret
iret
leave
mov
into
js,pn
imul
jnp
jns
xor
dec
sarb
push
mov
pushf
rcrb
out
sti
sub
in
xchg
push
mov
adc
iret
hlt
andl
shl
das
jmp
mov
and
fdiv
rcll
fwait
cli
outsb
fnstenv
mov
mov
inc
jae
or
mov
mov
push
inc
ljmp
cmp
insb
ja
mov
sarb
sbb
call
jl
jmp
fs
xchg
dec
pushf
enter
inc
push
mov
or
incl
out
sahf
lock
fisubs
xchg
fisubl
mov
pusha
jg
and
outsb
add
xchg
in
or
test
addl
test
int3
sub
je
lret
fdivs
cmc
add
inc
or
cli
aad
ds
or
push
cld
jns
jo
jg
cmp
lret
and
cmp
inc
adc
push
sub
and
jge
mov
ret
inc
cmp
or
mov
push
rclb
or
xchg
xchg
out
or
mov
adc
mov
icebp
inc
out
mov
cmp
xorb
cld
cli
dec
je
jne
jb
mov
insl
mov
jne
inc
cld
rorl
lret
loope
mov
mov
pop
adc
push
cld
jnp
mov
xor
push
mov
sub
xchg
es
stos
fs
pop
mov
jecxz
mov
addr16
sar
mov
fidivs
movsb
imul
fstpl
mov
adc
out
ret
jmp
aaa
inc
ss
mov
gs
push
cld
sub
adc
insb
mov
cld
popa
jbe
out
or
lds
push
push
ret
roll
ret
loopne
sub
and
dec
loope
mov
pop
add
loopne
stc
sub
lret
dec
sub
psrad
cwtl
jecxz
dec
popl
clc
push
inc
jmp
adc
pop
into
pop
sbb
inc
rclb
cmp
dec
sbb
les
enter
in
push
rol
sub
adc
jl
ljmp
dec
lds
sub
movsl
mov
test
xchg
sahf
fmul
jp
sbb
je
add
scas
test
fstps
mov
ljmp
into
xor
jne
out
sub
in
fisttps
imul
clc
dec
sbb
lods
pop
popa
push
stos
inc
rcpps
mov
cmp
add
push
sbb
stos
aas
repnz
test
push
cmpsl
idiv
sbb
xor
mov
sub
les
jno
into
shll
inc
std
cwtl
icebp
stos
popf
dec
pop
insb
call
pop
jg
lret
push
or
cmp
pusha
pop
sbb
out
adc
movsb
js
add
push
stos
call
mov
jnp
jb
mov
jae
seto
scas
int3
push
fistpl
pop
iret
inc
divb
and
lea
clc
sub
push
js
add
dec
cwtl
adc
movsb
and
aad
mov
cmc
jp
aas
push
cmc
pop
adc
call
pop
ss
fs
into
aas
out
sbbb
pop
mov
cwtl
mov
push
out
mov
xor
js
cmp
out
fildl
lret
add
lcall
stos
call
jns
push
jo
shlb
pop
xchg
fimull
out
dec
shlb
jns
rolb
lods
leave
nop
rorl
push
icebp
orl
pinsrw
sti
or
xor
divl
sub
arpl
scas
mov
push
dec
pop
pushf
pop
enter
mov
int
jno
push
scas
outsl
pop
jle
sbb
lods
push
daa
fcomip
dec
cli
rcrb
lahf
jp
test
add
jae
decl
int
dec
xor
int3
push
outsl
dec
rcrl
fmul
test
pop
into
outsl
sub
xsaveopt
mov
jl
jo
mov
cmp
repnz
hlt
test
outsb
mov
sbb
or
inc
cmp
mov
push
push
in
scas
mov
ret
mov
add
push
xchg
pop
aad
jp
mov
xor
push
xchg
push
xchg
cmp
jle
add
mov
out
mov
push
dec
xchg
sbb
jl
jecxz
repnz
dec
and
jne
dec
adc
mov
scas
sbb
enter
jle
ljmp
orl
mov
pop
pop
or
testb
sarl
lods
mov
test
or
inc
jecxz
mov
add
data16
repz
enter
cli
mov
jl
jo
xchg
jno
loope
inc
jae
or
addl
push
and
pop
push
jae
fistpl
inc
or
push
or
push
pop
xchg
in
xor
jbe
out
inc
ljmp
ss
icebp
scas
and
mov
rcrl
pop
xchg
and
vmovq
jecxz
adc
out
movsl
popf
and
sbb
xchg
mov
ljmp
mov
or
or
fnstcw
imul
insl
movl
ret
sbb
sti
mov
lret
stos
stos
mov
mov
loop
jl
adc
ds
or
or
mov
sbb
incl
fcomps
adc
js
xor
sub
cmp
xchg
in
push
and
xchg
icebp
and
sub
pavgw
sub
clc
jae
or
add
test
jp
in
mov
rcll
adc
push
push
sbb
repnz
cld
es
cs
add
aad
adc
ljmp
sti
cmp
loope
sbb
ds
push
out
dec
dec
lahf
out
fldt
mov
jmp
mov
mov
sbb
mov
jl
mov
mov
pushf
add
pop
push
js
lods
jns
incl
or
add
mov
pop
xor
xchg
outsl
in
adc
mov
xor
push
mov
xlat
adc
add
aas
push
mov
pop
sbb
mov
scas
xorb
bnd
pop
loope
sub
std
leave
mov
test
enter
push
fisubrs
dec
or
leave
jp
inc
xchg
fisubrs
aad
xchg
jae
or
push
sub
mov
je
out
loop
lret
shlb
and
lret
mov
fcmovbe
pop
clc
inc
cmpsl
push
mov
add
mov
pop
js
lock
ja
or
sahf
push
mov
loopne
sub
rclb
or
mov
mov
es
test
in
and
stos
cs
inc
and
inc
mov
out
push
jg
and
push
pop
dec
mov
jp
cmpsl
sub
es
cmp
sahf
loopne
inc
and
inc
clc
xchg
xlat
or
shrl
lret
cmpsb
inc
orb
adcb
jg
cmpsb
repnz
or
pop
pushf
adc
mov
cmp
aas
movb
cmp
mov
fistpll
clc
or
outsb
call
cmp
lea
sub
sahf
adc
or
popa
enter
sub
movsb
dec
loope
pop
stos
xchg
outsb
clc
lret
outsb
xchg
sbb
loope
or
cmp
jno
shl
lea
or
test
or
rorb
mov
xor
int3
jne
jge
int3
repnz
cmp
push
popa
mov
mov
call
sub
test
dec
or
cmc
and
fwait
lret
iret
mov
inc
lock
in
out
or
push
push
xchg
test
pop
push
xor
sti
test
nop
mov
jb
mov
repz
sarb
loop
inc
or
cwtl
sub
insl
lret
push
test
push
pop
jge
mov
jo
gs
rorb
dec
pop
jp
sbb
dec
mov
out
mov
inc
xchg
xor
data16
imul
clc
mov
fsts
aas
sarb
pop
adc
pushf
cmp
aam
jae
mov
iret
push
mov
mov
test
aaa
lds
and
push
test
push
push
cs
push
rclb
fs
insl
mov
loope
shrb
dec
mov
inc
idiv
push
push
pop
mov
lods
dec
mov
inc
push
xor
xchg
sub
fistl
mov
add
imul
es
ds
cmp
push
dec
loop
fs
cli
push
into
sti
jnp
add
cmp
cltd
arpl
fdivl
xchg
jge
clc
or
mov
add
dec
xor
jmp
sub
pushf
out
mov
add
mov
mov
insl
out
shrl
loop
fldcw
push
push
pop
jns
xlat
repnz
aas
popa
imul
inc
jp
stc
bound
adc
insl
sub
dec
add
clc
sar
dec
aas
in
pushf
rolb
xchg
jnp
lcall
xchg
js
sahf
dec
and
lcall
js
dec
out
js
xchg
push
out
dec
sub
inc
test
js
dec
rcrb
insb
out
icebp
cli
popa
dec
insl
sbb
pop
cs
incl
or
shll
xchg
mov
mov
leave
and
pop
mov
repnz
jmp
int
fldl
xor
scas
sbb
or
fdivr
int3
bound
sbb
movb
dec
mov
and
ds
inc
push
cmp
lcall
xchg
cwtl
jae
imul
fistpll
mull
iret
shr
add
ljmp
rolb
or
test
mov
push
stc
out
adc
xlat
adcl
mov
es
push
inc
cmp
pop
sub
sti
dec
mov
mov
sbb
imul
aam
cmp
rcll
mov
xor
xchg
mov
mov
or
xchg
sbb
test
nop
les
dec
data16
popf
inc
xlat
push
dec
inc
out
sub
repnz
rcrb
jo
rorb
inc
push
or
pop
js
pop
std
sub
popf
mov
pop
xlat
dec
pop
mov
outsl
popf
sbb
shl
or
insl
jecxz
push
int3
mov
repnz
popf
push
sbb
pop
insl
jnp
pop
scas
or
mov
test
mov
loopne
inc
push
sti
test
push
dec
pop
pop
lret
mov
xchg
pop
repz
pushf
or
jg
add
jg
decb
dec
outsl
fistl
lcall
pop
or
ljmp
xorb
sub
daa
jmp
scas
fs
cmpb
xchg
out
movl
push
push
jae
pop
inc
or
mov
inc
testl
mov
push
cmp
fiadds
cmp
incl
call
xchg
dec
out
nop
and
popa
sub
adc
call
es
lea
add
cmpsb
insb
out
sahf
aaa
inc
ror
inc
pop
faddl
sub
sahf
cmc
jae
icebp
test
adc
adc
mov
pop
sub
mov
shll
fisttpll
aas
mov
jg
pop
adc
inc
or
xchg
jne
fsubs
rclb
mov
fimuls
imul
fcomps
inc
cltd
pushf
es
pushf
inc
mov
stc
push
lahf
js
std
xor
jle
push
xor
clc
mov
aaa
xchg
xchg
lret
pop
ret
addr16
inc
fdivrs
mov
es
push
dec
lahf
cmpl
pop
int3
stos
xchg
imul
ljmp
lcall
mov
jp
xor
add
adc
cmpl
inc
imul
mov
pusha
stos
sbb
sbb
sub
mov
adc
dec
mov
fnstsw
gs
pop
adc
sbb
mov
xchg
jb
aas
aaa
scas
cmpl
sahf
mov
fisttpll
inc
orl
jecxz
hlt
pop
cmp
pop
cmp
jo
mov
arpl
mov
dec
sarl
aas
loop
push
xor
xor
pop
popa
iret
loop
sbb
xchg
cs
scas
pop
ror
enter
pushf
pop
adc
in
iret
mov
xchg
sbb
imul
sub
test
outsb
fcoms
adc
out
call
fs
xlat
xor
cmp
mov
mov
fs
dec
mov
fdivrs
xor
icebp
lret
cmp
test
sahf
sahf
loop
or
adc
dec
fnstenv
aas
lock
jecxz
adcl
xchg
ds
dec
inc
lcall
loopne
arpl
movb
jge
push
jg
xchg
loope
mov
test
and
lcall
mov
sahf
imul
sbb
push
rorb
xor
mov
fdivl
mov
ficomps
push
es
lods
aam
sbb
mov
xchg
lret
insl
mov
aas
sti
or
in
push
jle
sub
adc
nop
cld
decb
call
push
cmp
stc
pop
jb,pt
sbb
sbb
fstpl
inc
pop
adc
sbb
dec
fmuls
push
add
lahf
xchg
dec
sbb
inc
repnz
in
or
push
xchg
cwtl
xlat
inc
sbb
ds
lcall
inc
and
in
insl
mov
hlt
pop
jl
movsl
cmp
mov
cld
cmp
shrl
push
ficomps
lret
jne
xchg
add
ds
mov
push
push
popa
cmp
xor
int3
std
es
sbb
mov
test
or
arpl
js
xchg
xchg
jp
jge
into
xchg
test
or
sbb
jb
es
mov
cs
mov
mov
js
push
jge
mov
in
push
stos
inc
add
xchg
cli
or
or
fstps
mov
jb
into
xchg
jne
push
xor
pop
or
xchg
daa
inc
inc
mov
mov
sti
or
loop
cli
sti
cwtl
in
lea
xchg
push
negb
pop
adc
dec
cmc
sub
mov
mov
or
dec
mov
push
push
pop
cmp
push
pop
shlb
mov
xchg
sub
lahf
pop
and
pusha
mov
dec
jo
mov
mov
push
and
mov
push
fmuls
mov
jecxz
lods
lcall
rcrl
out
push
cmp
and
rclb
mov
shlb
xchg
push
sahf
stos
push
cmp
les
push
fcomps
stos
push
adc
lea
cltd
dec
or
inc
jmp
out
mov
aaa
lock
mov
fistps
repnz
pusha
inc
adc
hlt
daa
cld
xchg
adc
cmc
lds
xchg
and
mov
and
pop
test
cmpsb
xor
cmp
out
xlat
fstps
and
sub
pop
add
loop
xchg
or
dec
pop
sbb
lock
jbe
jne
loopne
push
lret
dec
clc
or
mov
leave
lahf
xor
dec
je
roll
lcall
lret
sbb
aam
loope
push
into
jp
ret
mov
mov
inc
sahf
cmp
cmp
in
loope
nop
repz
scas
pop
dec
enter
push
inc
in
push
mov
push
xchg
xchg
in
insb
dec
jg
lea
inc
sub
xor
lods
test
mov
push
add
dec
out
aas
out
sub
testb
mov
icebp
mov
fmuls
jne
ja
mov
jmp
xchg
push
push
lret
bound
lcall
add
fistpll
sahf
or
aad
lahf
stos
pop
push
dec
pop
mov
xchg
into
sub
adc
push
dec
test
fidivl
je
clc
nop
push
enter
decl
into
pushf
insb
mov
push
dec
orl
lahf
adc
cmp
ret
jae
adc
aas
pop
mov
xchg
dec
ds
pop
ljmp
pop
in
es
inc
or
mov
mov
or
vpsubsw
popf
and
sahf
jmp
loopne
repnz
jnp
pusha
fstl
in
jmp
out
xor
jp
jo
stos
push
cmpsb
cs
or
adc
int3
xor
sbb
adc
sub
enter
inc
mov
adc
and
loopne
ret
push
xchg
dec
leave
test
mov
out
rorl
gs
ds
pop
mov
jg
pop
add
lahf
push
jp
jecxz
inc
xchg
adc
pop
or
pop
ss
xor
loop
in
or
inc
std
int3
es
jmp
ret
sahf
jge
mov
cld
nop
mov
stos
cmp
stc
rclb
or
nop
push
in
fistps
pop
imul
insb
sub
cmpsb
loop
mov
pop
cmc
mov
mov
push
mov
jns
add
inc
cmpsl
scas
scas
cmp
xchg
push
mov
div
or
mov
addb
adc
cli
inc
sub
inc
inc
mov
or
jo
repnz
stc
mov
cmpsb
and
fmuls
or
dec
mov
push
sub
pushf
in
sahf
popa
or
push
or
clc
push
roll
cmp
push
push
sbb
xlat
pop
js
mov
sbb
sub
mov
faddl
jmp
mov
fnstsw
fildl
lret
dec
jno
enter
mov
jnp
test
push
add
lock
shll
push
sahf
sti
mov
sub
lea
out
jbe
inc
inc
sahf
loope
jae
or
or
or
and
cli
jg
xchg
shrb
dec
push
sub
test
pop
in
rorb
in
lcall
jo
lea
mov
sub
add
xchg
and
cmp
push
push
aaa
adc
fimull
mov
lock
cmp
sub
aad
sbbb
mov
es
and
fs
fcoms
push
cmc
out
das
pop
ljmp
mov
push
dec
in
jp
mov
loope
mov
hlt
filds
dec
inc
xchg
jl
add
inc
int
cmp
adcl
shl
fmull
pop
and
mov
cmp
rcl
inc
sbb
inc
popf
mov
sub
insl
sbb
sub
jne
insl
jp
pushf
jle
aad
cmc
xor
push
int3
cmp
push
cmc
test
lahf
xchg
loop
and
dec
hlt
ljmp
out
mov
aam
cmp
inc
mov
sbb
mov
pop
sub
push
inc
xor
rcrl
jp
pop
bound
inc
insb
frstor
push
fmuls
sarl
mov
repnz
cmp
push
cmpxchg
and
jp
movsl
insl
clc
mov
aas
lahf
inc
sub
scas
sar
inc
push
dec
push
shlb
das
addl
dec
jle
cs
dec
cmp
outsb
xlat
sbb
inc
stc
cmp
jp
cli
inc
xchg
cmp
adc
pop
cmp
or
rcrl
dec
sbb
adc
das
xor
pusha
adc
std
xlat
sahf
repz
ret
dec
adc
add
in
xlat
mov
loopne
mov
lret
inc
cld
sub
sahf
addb
jg
xor
dec
push
cmp
add
adc
inc
xchg
fs
or
lock
or
idivl
adc
xchg
sbb
fisttpl
mov
xchg
adc
mov
xchg
jp
popa
test
jmp
xchg
jno
dec
fwait
outsb
hlt
push
rorb
mov
sub
or
in
mov
loop
test
into
cmp
inc
ljmp
mov
popf
sbb
out
dec
cmp
lds
repz
pop
jg
sub
push
lahf
pushf
clc
mov
push
inc
cs
test
add
adc
inc
pop
adc
dec
addps
enter
inc
fiadds
lahf
adc
mov
mov
jp
mov
add
bnd
add
loop
fildl
adc
cmpb
xchg
cld
testl
mov
inc
mov
cmp
test
sub
pop
pop
xchg
push
adc
inc
sub
cmpsl
xorb
adc
xchg
mov
xor
sar
mov
or
add
test
push
sbb
aam
sbb
ret
ret
mov
in
int3
call
mov
test
test
insl
cmc
je
out
pop
mov
gs
pusha
and
insl
jl
dec
mov
lds
imul
insl
jl
sbb
push
fadds
inc
into
sbb
leave
xor
or
fldt
mov
jle
enter
sbb
aas
jl
jmp
sbb
push
xchg
pop
jnp
push
cwtl
adc
arpl
mov
jne
push
or
lahf
popa
jnp
sub
or
je
add
pop
out
push
loop
dec
and
jle
iret
add
out
sub
jp
dec
call
cmp
mov
xor
jge
jmp
dec
mull
dec
leave
ret
inc
inc
push
movl
adc
inc
stos
pop
rclb
fcmovnu
mov
lds
fstps
dec
or
dec
std
adc
xchg
ficompl
mov
add
fs
dec
jle
std
inc
push
sbb
push
fcomp
inc
out
inc
jl
mov
dec
shrb
mov
stc
outsb
enter
pop
dec
int3
mull
fnstcw
leave
shrb
mov
fs
cwtl
cmp
lret
inc
les
mov
pop
andw
sbb
sub
fldl
cmpsb
stc
cld
loop
add
add
hlt
lahf
xor
jbe
gs
mov
out
int3
and
out
movsl
mov
adc
es
mov
mov
shlb
xor
and
rcrl
popf
out
imul
dec
test
mov
movl
fimuls
cmc
test
aas
sub
or
popf
add
pushf
fiaddl
xor
mov
scas
and
or
jbe
mov
sahf
lahf
add
call
fldt
mov
or
jecxz
jge
jno
or
inc
and
outsb
cs
xor
jg
jge
push
mov
aam
xor
sub
pop
adc
mov
cwtl
leave
mov
movl
push
inc
fildl
inc
test
out
fs
mov
lret
sbb
mov
cmp
push
out
icebp
test
stos
mov
mov
inc
lahf
mov
aas
in
ffreep
out
jnp
test
xchg
xlat
lcall
push
pop
hlt
test
mov
adcb
sahf
lea
cli
scas
arpl
add
sahf
ja
clc
ss
push
add
cmpsb
lret
sub
mov
ret
jnp
pop
sti
or
xor
cli
les
or
mov
out
mov
sub
inc
or
or
pop
aaa
shl
cld
inc
out
mov
xchg
ret
icebp
adc
mov
negb
sub
pop
pop
sbb
lret
sub
lds
clc
sub
lret
and
inc
pop
rcl
ljmp
mov
stos
fwait
inc
cmp
mov
inc
sti
dec
aas
movsl
dec
das
sti
aas
pushf
and
push
sbb
xor
jnp
mov
movl
or
sbb
pop
aas
sbb
clc
mov
lret
jle
adc
or
xlat
or
mov
adc
repnz
sar
in
sub
xchg
inc
adc
ja
mov
jmp
fs
clc
inc
adc
mov
or
jno
cwtl
dec
dec
mov
testb
push
mov
mov
pop
lcall
fdiv
ret
roll
mov
or
imul
mov
sbb
dec
xchg
cmp
add
mov
inc
call
sub
push
push
pop
sti
mov
jg
out
push
dec
and
mov
adc
andb
dec
sahf
xor
andl
pop
jmp
or
call
in
je
adc
insb
ret
xchg
jp
sahf
mov
add
dec
or
insl
or
shlb
outsl
pop
ja
cmc
jle
mov
cmp
insl
dec
cmp
lahf
ds
inc
xchg
jecxz
testb
clc
jp
dec
mov
inc
or
adc
iret
out
rolb
cmpsl
cwtl
out
repnz
ja
in
inc
fdivrs
loope
les
pop
dec
xchg
mov
dec
cli
dec
mov
nop
xchg
dec
mov
roll
aam
jns
js
sub
movsl
push
jne
and
cmp
fnstcw
popf
jg
add
mov
push
push
and
inc
xor
push
fiadds
into
cmp
sub
arpl
test
outsl
les
popa
and
pop
xlat
xor
cmc
push
sahf
fists
lock
mov
dec
xlat
repnz
sub
loopne
mov
rol
or
mov
or
out
xor
out
iret
addr16
cli
mov
loop
mov
lret
into
dec
int3
pop
outsb
ja
je
jmp
mov
xor
push
jae
ja
push
in
lahf
int3
test
clc
sub
aam
into
adc
add
fcmovu
aam
pop
and
mov
sub
push
adc
into
fs
jge
lds
inc
nop
enter
adc
insl
icebp
clc
stos
add
inc
inc
add
mov
sub
aas
dec
std
loop
sbb
jg
scas
sbb
jle
leave
mov
and
sub
lahf
mov
add
xor
imul
or
int3
or
xchg
mov
ja
ja
lods
xchg
in
jecxz
adc
popa
push
data16
cwtl
pop
or
and
lock
fst
mov
sbb
push
mov
ss
xchg
popf
cltd
add
pop
inc
adc
repnz
in
mov
push
lock
sub
add
or
mov
xlat
xor
lret
daa
iret
or
popa
out
into
lds
add
push
sub
sti
add
ljmp
sti
dec
cld
jle
pop
push
adc
or
pop
pop
adc
je
stc
mov
sub
je
or
into
sahf
int3
cmp
or
push
xlat
cmp
mov
jl
movsb
rorl
pop
xor
dec
nop
jmp
stc
sub
and
fiadds
inc
aas
lret
pop
mov
call
add
or
jp
out
and
add
popf
dec
movb
pop
sub
js
mov
lea
in
sar
nop
adc
pop
out
xor
mov
fcmovnb
dec
and
lret
clc
in
icebp
ljmp
and
push
push
cmp
xlat
in
shrl
add
in
mov
jae
push
jecxz
push
sbb
sbb
outsl
or
push
sub
dec
pop
mov
xor
lods
lret
je
std
cmc
or
mov
mulb
bound
cwtl
xor
pop
lret
jae
xchg
jg
sub
xor
push
jae
or
sbb
adc
movsb
je
cld
cmp
push
dec
lock
sub
es
dec
dec
push
inc
sub
jg
mov
sbb
aas
and
jp
jb
inc
hlt
dec
cmp
sti
fstpl
pop
cmp
cmp
dec
jnp
or
or
sahf
jl
mov
outsb
lea
ss
cli
adc
mov
jp
pushf
push
test
fcoms
jbe
popf
iret
xor
mov
xchg
cwtl
mov
popa
out
bound
ds
cmp
pop
dec
xor
mov
aaa
lret
xlat
pop
pop
movsb
insb
repz
fsubl
sbb
fbld
mov
push
jmp
or
stos
mov
inc
mov
hlt
pop
lret
mov
stc
xchg
push
enter
pop
push
cs
stc
mov
test
pop
daa
ds
iret
jno
dec
sub
adc
sbb
jge
inc
imul
xchg
push
pushl
call
pop
xchg
and
or
lds
jne
jp
pushf
cmp
call
int
pop
or
int3
inc
add
sti
cli
hlt
popa
mov
cmp
xor
nop
ret
test
sub
aas
in
movsb
test
and
ret
mov
gs
adc
xor
popa
imul
and
mov
push
xchg
cmp
push
xor
inc
ljmp
call
jg
dec
ljmp
in
repnz
sbb
ljmp
jmp
sti
aas
mov
pusha
push
jg
jmp
int3
xchg
or
add
aaa
sahf
in
inc
mov
mov
std
out
fbld
ja
or
mov
fs
xchg
sub
int
out
inc
fstpt
xor
pop
std
adc
sahf
push
outsb
scas
fstpt
scas
lods
add
fisubrl
pop
lds
add
xorl
mov
test
or
inc
es
fldl
rclb
cld
add
mov
sub
or
cmpsl
or
shlb
mov
imul
xchg
jle
lahf
leave
adc
cmp
jae
out
dec
popl
pop
mov
mov
add
in
gs
test
rcl
or
out
roll
cmp
or
lcall
or
shrb
jl
dec
aas
sub
iret
popa
cmp
loop
popa
fs
sub
sahf
mov
mov
ljmp
jle
data16
xchg
cli
leave
sahf
ljmp
repz
xchg
dec
jg
fs
stos
outsb
insl
shl
jbe
push
pop
or
inc
sub
push
dec
inc
jecxz
pop
sahf
xchg
add
outsb
and
or
sbb
out
sub
popa
loope
mov
xchg
js
inc
lcall
sbb
mov
push
out
or
xchg
pop
xchg
mov
cmp
sub
cmpb
pusha
cld
sbb
push
inc
jmp
dec
pusha
movl
rorl
lahf
fdivl
inc
insl
lret
fnstcw
push
lret
aas
cmp
movsb
adcb
cmpsb
out
sub
pop
cmp
mov
push
pxor
cmp
aad
pop
mov
sar
or
lahf
jb
jo
cmpl
jmp
mov
cld
cli
imull
pop
adc
adc
mov
mov
lods
xchg
fisttpll
or
pushf
jecxz
arpl
shl
jp
test
loop
fcom
add
sub
push
clc
push
xor
mov
insb
lds
pop
rorl
inc
sub
jo
sahf
idivl
inc
clc
repnz
xor
das
decl
inc
push
cmp
loopne
add
insb
add
into
jb
jns
push
mov
adc
mov
ja
push
mov
sahf
adc
mov
loope
xor
sub
rolb
push
cmp
and
outsb
test
stos
jmp
insb
test
mov
test
adc
and
addr16
push
push
test
shll
lret
pop
or
jo
xor
fwait
popa
cmpsl
pushf
sbb
cmp
add
and
ljmp
in
jp
enter
and
stos
sahf
stos
sub
movswl
mov
pop
rcl
jnp
mov
cmpsb
xlat
push
or
or
loop
mov
bound
push
xor
not
data16
sub
dec
mov
push
and
push
or
adc
out
aad
dec
adc
out
stos
scas
adc
sub
lock
add
cld
inc
sub
sar
add
or
sahf
stos
jnp
movsl
pop
in
faddp
sbb
ja
mov
pop
test
or
popa
pop
adc
movsl
data16
or
aad
push
fnstcw
je
or
movb
or
es
sub
jp
fcompl
cmp
decb
je
imul
xor
xor
daa
and
dec
cmp
adc
sub
mov
mov
in
sub
cld
mov
pop
jl
adc
add
cs
fmuls
lods
inc
js
popa
fldt
fwait
xor
int
pop
sahf
jnp
rcrl
dec
cmp
out
pop
push
cmp
jnp
xchg
pop
lret
fstl
mov
mov
into
pop
or
inc
ficoms
mov
in
add
test
xlat
iret
inc
lret
lret
leave
jne
testb
add
sahf
add
adc
xchg
pop
fdivr
mov
adc
ret
fcmovbe
or
int3
fprem
adc
arpl
es
push
daa
or
enter
enter
xchg
xchg
scas
and
fs
mov
xchg
scas
mov
inc
sub
jnp
pop
mov
pop
mov
jp
push
pushf
sub
into
int3
sub
mov
adc
pop
in
adcl
sbb
mov
into
fs
lock
shll
sbb
adc
sub
xor
pop
test
fs
out
push
xbegin
adc
jmp
addb
fs
mov
sub
add
int
mov
mov
sub
xlat
adc
fidivrs
jb
leave
les
add
cmp
flds
mov
imul
xor
sahf
jo
dec
push
push
fwait
xor
mov
xlat
lret
pop
pop
inc
shrb
or
inc
add
fs
fs
ror
sahf
pop
cmp
bound
add
push
fisttpl
scas
and
inc
push
imul
shll
mov
mov
clc
or
or
sub
push
adc
cmp
pop
sbb
xchg
ret
cmp
or
jo
sub
enter
inc
or
fcomp
or
xlat
pop
aas
aam
std
cs
divl
push
xchg
clc
inc
adc
mov
xor
aam
imul
or
or
ficoml
inc
mov
xor
pop
pop
cli
fidivs
sbb
sti
int3
sahf
out
scas
test
fldl2t
fadd
sub
mov
repnz
iret
ret
add
clc
into
add
fisubs
push
js
sti
sub
pop
push
or
and
mov
shll
std
mov
stc
ljmp
jmp
lret
xor
inc
pop
ss
or
cmp
call
into
sub
xchg
fstl
dec
push
xchg
pusha
cmp
dec
lret
push
dec
sub
dec
bswap
out
pop
fwait
push
pop
mov
std
sahf
push
test
mov
cli
sti
push
and
aaa
stc
sub
or
decl
enter
mov
dec
mov
push
add
inc
xchg
enter
lds
add
pushf
stos
loop
mov
insl
push
pop
daa
add
out
mov
in
clc
ds
jns
jp
sub
data16
and
fidivrl
cmp
jmp
add
push
fnstenv
xor
loopne
add
data16
or
insl
mov
jne
imul
jns
push
test
push
jno
popf
jns
inc
pop
or
adc
push
jae
rorl
push
repz
mov
pop
ds
pop
ljmp
xlat
jne
mov
bound
cmp
fidivs
sub
clc
xchg
and
imul
inc
push
fimuls
jg
es
dec
repnz
sahf
dec
leave
mov
add
popf
push
mov
dec
push
dec
xchg
mov
lds
outsl
addr16
es
hlt
cmp
pop
fcom
or
ficomps
sub
dec
xlat
rorl
fldenv
pop
push
jge
mov
pop
fistl
rolb
roll
inc
cmc
sahf
ret
dec
call
cmc
inc
inc
stc
xchg
into
or
cld
ret
aaa
and
add
sub
jb
stc
into
jb,pt
das
xor
loope
loop
loop
das
lds
or
mov
cmp
add
or
bound
or
js
ret
in
mov
icebp
mov
lcall
push
jb
clc
repnz
scas
ffreep
xchg
push
out
push
and
int3
adc
xchg
pop
push
loopne
js
movsl
jnp
pop
fiaddl
xlat
iret
pop
or
daa
xor
jns
xchg
sub
leave
stc
mov
repz
repnz
out
fucomip
jnp
fidivs
pusha
sbb
xlat
jns
js
sbb
shlb
repnz
fsubr
clc
repnz
repnz
dec
idiv
pop
out
fucomi
lock
pop
out
mov
jl
lret
rcr
imul
arpl
mov
xchg
cmp
jbe
dec
and
xchg
lods
cld
cs
icebp
dec
sub
push
sti
add
xchg
mov
push
lcall
or
mov
and
dec
cltd
push
cmp
arpl
dec
mov
pop
outsl
mov
fsubrs
xlat
ljmp
rclb
xor
add
or
sub
cmp
cli
lret
aaa
sarl
xchg
sbb
dec
cmp
mov
and
cli
add
outsl
clc
out
jb,pt
push
push
into
ficomps
in
cmp
std
and
jnp
aad
add
pop
pop
ss
enter
fsubp
mov
xor
dec
cmp
test
dec
pop
dec
mov
inc
ss
inc
cmp
ret
std
cmpsl
fisubrl
test
es
pop
fwait
sub
mov
adc
or
jle
adc
xor
add
mov
lret
sar
mov
out
das
inc
and
sub
push
or
pop
stos
xlat
push
sub
insb
mov
lds
sbb
addl
jo
adc
cmp
mov
stc
adc
jne
xor
push
ds
push
mov
xchg
cmpsb
add
pop
lock
adc
ss
sub
stos
dec
or
mov
dec
in
insl
jge
or
dec
lds
fnstcw
adc
cmpsl
adc
push
cli
cltd
add
arpl
mov
daa
pop
int
fwait
adc
inc
loop
outsb
dec
cmp
adc
movsb
test
mov
mov
cltd
rol
lret
xchg
in
in
rolb
icebp
pop
fdivl
sti
push
mov
pop
fstps
jmp
jo
loope
stos
and
jmp
mov
enter
sub
mov
inc
mov
movsl
js
je
xchg
fwait
loop
ffree
adc
cmp
into
mov
jmp
outsb
fpatan
lahf
cmp
mov
rol
sahf
loope
or
subl
mov
sti
mov
mov
stos
sub
mov
enter
dec
or
jo
adc
inc
jge
icebp
fisubrs
fs
dec
cmp
call
sahf
pop
push
push
or
or
pop
outsb
sub
xlat
or
clc
rcr
jmp
in
mov
mov
sahf
pop
push
addb
repnz
jg
cli
xlat
jecxz
ja
mov
pop
or
addr16
jmp
push
sahf
aad
in
mov
push
add
mov
cmp
fprem1
bound
addl
or
ret
jp
cwtl
daa
sbb
adc
cwtl
lock
leave
pop
in
ret
lods
sarb
jg
lock
mov
pop
push
or
and
or
sub
mov
jno
sarb
imul
mov
outsb
loopne
jno
mov
jle
outsb
cld
mov
lcall
stos
xchg
cltd
mov
xor
int3
int3
add
ret
adc
xchg
mov
lods
int3
add
out
lret
dec
fcmovnu
daa
pop
mov
aaa
xor
ja
pop
dec
jmp
mov
add
fdiv
sub
mov
inc
mov
push
or
lret
xchg
sti
ret
push
pop
stos
pop
xchg
data16
js
lret
mov
xchg
inc
or
xorb
mov
ja
arpl
sahf
xlat
sbb
out
sub
daa
mov
shll
sbb
push
mov
js
or
lods
aas
push
lea
fidivrl
push
sbb
push
pushf
push
cmp
loope
add
mov
adc
or
cmpsl
add
add
mov
sub
lret
fstps
or
ljmp
xor
push
adc
pop
or
lcall
or
jecxz
mov
dec
ss
add
pop
popl
jno
push
or
cmpsl
dec
cmp
jp
mov
push
das
jle
push
pop
pop
or
sahf
test
insb
sti
xor
jecxz
jg
push
call
aas
call
mov
pop
ret
adc
movsl
loopne
mov
dec
and
xor
mov
mov
push
mov
cmpsl
sahf
mov
mov
movsl
leave
push
imul
jecxz
iret
jl
lret
fs
mov
push
out
pop
call
xor
xor
xchg
cmpsl
push
fadds
dec
das
mov
movsb
inc
imul
xchg
into
mov
inc
inc
movsb
and
xchg
data16
popf
enter
or
mov
mov
mov
inc
sub
movsl
pop
pop
sub
and
orl
lock
cmpl
out
pop
int
movq
loop
gs
shufps
push
pop
cwtl
cmp
dec
jmp
adc
jbe
dec
mov
outsl
or
pop
adc
cmp
push
mov
enter
fstpl
or
shlb
sub
jp
push
adc
jg
loopne
sbb
int3
xchg
je
pop
ret
dec
xor
sub
add
adc
out
or
test
mov
test
xor
dec
lea
inc
icebp
jge
outsb
add
decl
cmp
call
mov
xor
jns
adc
pop
lods
jecxz
or
out
inc
stc
ficompl
jle
or
es
mov
pop
inc
out
pop
fwait
or
dec
scas
fldenv
or
cmp
clc
cmp
and
testb
leave
aaa
add
sub
aaa
cmp
inc
cli
xchg
push
push
cmp
jp
and
cmp
out
pop
enter
sub
xlat
mov
pop
pop
addb
nop
cmpsb
adc
mov
mov
mov
mov
in
popa
jg
xor
aad
inc
or
or
jae
lret
xchg
mov
lret
pop
inc
shll
notb
or
cld
mov
sarb
mov
lcall
into
inc
sbb
pop
fcomps
mov
sbb
fsubrs
les
xor
or
gs
jns
xchg
cmp
adc
lahf
cwtl
jae
insl
jno
lret
or
ds
movsl
es
xor
jnp
sti
mov
hlt
and
leave
popa
test
adc
adc
popf
imul
sbb
pop
daa
mov
sub
and
adc
jae
insl
sub
into
or
ror
or
cmp
mov
xchg
subb
xchg
pop
adc
adc
lahf
insl
mov
rolb
pop
lock
out
mull
pop
sub
inc
sahf
and
jae
or
mov
cwtl
ret
or
imul
out
pusha
dec
lcall
xor
in
cs
rol
push
dec
repz
aas
cs
hlt
sub
dec
in
cmp
arpl
push
pop
or
out
cmpsb
mov
mov
push
out
jp
mov
or
cmp
out
stos
arpl
dec
dec
push
js
or
fidivl
sub
popa
jle
lret
cltd
fsubs
enter
es
shlb
int3
scas
setle
mov
xor
cmpsl
pop
shl
xchg
lret
stos
cmc
or
push
adc
jbe
out
mov
je
inc
cmp
inc
jne
andl
call
sahf
aad
push
popa
jle
and
jne
inc
inc
or
mov
jo
xchg
xor
xor
test
data16
sbb
xor
loopne
inc
movsb
loopne
inc
jno
lret
nop
addr16
jl
stos
cltd
loope
dec
ljmp
pop
leave
mov
mov
je
inc
xchg
mov
imul
popl
out
jecxz
push
cmc
addr16
push
test
lods
insl
bswap
xor
pop
scas
jo
add
xchg
dec
push
jne
sub
or
data16
inc
cli
lds
jmp
out
mov
mov
test
push
leave
stos
dec
and
popa
aas
sahf
insb
sbb
or
cltd
or
mov
repz
inc
sub
inc
add
cmp
fstl
ret
stc
mov
push
in
sub
jno
inc
jno
ja
dec
cmp
sub
fsubrs
add
out
mov
insb
mov
jge
imul
imul
dec
sbb
sub
test
jle
sbb
fs
xor
cmp
add
insl
xlat
mov
je
inc
jp,pt
jb
or
scas
sbbb
sub
inc
imul
pop
les
divb
hlt
jmp
pop
icebp
adc
xchg
loope
push
subb
hlt
in
sbb
or
or
mov
out
lods
std
scas
cwtl
roll
mov
push
mov
add
insb
push
cltd
test
faddl
pop
fmuls
xchg
add
int3
mov
cmp
lods
lock
hlt
pop
pop
fnstenv
and
dec
fdivrs
ds
or
push
sbb
jae,pt
dec
cmpsb
adc
push
sbb
push
cld
fisttpll
out
inc
or
lea
jg
hlt
mov
or
push
sbb
inc
shl
aas
ljmp
iret
jp
mov
push
or
cli
dec
add
int3
lahf
jne
test
mov
xchg
mov
jns
mov
test
loop
rclb
lods
mov
mov
mov
or
les
shlb
mov
in
repnz
bound
xchg
xchg
lahf
adc
push
stos
inc
dec
pop
mov
pop
push
and
cmc
outsl
test
adc
dec
clc
enter
cmc
xchg
inc
fistl
mov
mov
dec
cltd
pop
rcr
sub
mov
ret
inc
fdivr
rcpps
scas
jge
push
add
ret
scas
or
lods
pushl
fbstp
aas
pop
jae
mov
cwtl
cmp
mov
jne
fadds
xor
not
mov
aas
roll
fstp
add
test
push
mov
xchg
ljmp
aas
or
aas
mov
inc
push
mov
push
mov
cmp
sub
icebp
movsl
sub
repz
xor
fistpll
xchg
ds
mov
loope
jge
dec
xchg
mov
data16
lret
sarl
or
jge
cmpsl
sahf
jb
adc
adc
xchg
mov
lods
mov
ss
xlat
ret
cmp
aas
lods
lret
jmp
test
vmwrite
adc
mov
pop
xchg
cmpsl
cmp
push
sub
lcall
add
push
in
cs
inc
out
in
shll
loopne
pop
lods
in
xor
add
fsts
divb
in
leave
mov
dec
mov
xchg
fcom
mov
stc
js
add
jp
lds
mov
or
cmpsb
les
mov
sti
xlat
add
ljmp
mov
sahf
mov
int3
sub
mov
pop
std
mov
fistl
fs
jle
icebp
jns
cltd
dec
insl
jge
test
mov
sbb
out
inc
lea
mov
sbbb
inc
xor
or
mov
cmp
arpl
mov
mov
fsubrs
adc
cld
jns
adc
pop
and
ret
xorb
or
shl
or
push
fwait
int3
test
xor
add
sbb
jns
and
mov
and
mov
adc
mov
adc
xor
xor
enter
data16
leave
cmp
test
add
dec
pusha
mov
adc
and
bound
movsb
inc
xor
aad
push
push
in
lret
xchg
mov
subl
pop
push
lret
mov
dec
scas
js
clc
inc
mov
negl
cltd
sbb
jmp
xchg
dec
scas
or
ss
mov
jl
stc
mov
ds
aas
ffree
xchg
es
push
or
adc
ret
sahf
aam
imul
ret
out
iret
call
js
jo
dec
or
sub
sub
and
sti
test
add
jae
or
xor
sub
pop
push
mov
sub
jle
loop
adc
pop
or
adc
data16
nopl
les
add
pop
stc
push
add
pop
inc
mov
cmp
dec
mov
ret
xchg
lock
jmp
data16
cmp
add
xchg
inc
xor
add
xchg
sub
dec
inc
jl
mov
sbb
inc
push
mov
testb
test
enter
inc
jo
jge
cltd
add
mov
push
jne
not
cli
out
cld
pminsw
out
pop
clc
mov
ljmp
ret
loop
aad
mov
popf
inc
sbb
cli
call
push
jbe
pop
hlt
mov
lea
jp
repnz
aas
push
stos
ss
inc
jae
into
mov
adc
mov
stc
cmp
movsb
sub
negl
iret
dec
xchg
adc
push
xor
add
insb
paddsw
mov
mul
fs
add
call
push
stos
mov
idivb
cld
xchg
jo
or
movsl
mov
fs
sti
fisubrs
stos
mov
ficoml
pop
cmp
fdivrl
hlt
add
cmp
sub
push
add
ja
scas
pop
xchg
cmp
shl
mov
dec
loop
jle
pop
fstpl
inc
out
iret
ret
in
xor
aad
out
into
fxch
inc
add
sub
pop
sub
loope
xchg
ljmp
add
sti
sti
test
in
cmp
lahf
mov
ja
xor
or
shl
adc
cmp
mov
out
sbb
push
cmp
cmp
test
push
aad
divb
adc
sub
leave
mov
sub
movaps
push
test
popf
cmp
mov
dec
xor
xchg
cmpsl
rcl
push
idivl
cmp
ret
mov
cmp
pop
xor
popf
inc
xchg
sub
loopne
mov
pop
sti
int
xorl
mov
ja
repz
add
add
sub
call
sarb
or
jnp
dec
hlt
icebp
lret
add
mov
xchg
cli
inc
std
or
jecxz
cmp
jnp
nop
fcompl
lds
dec
jno
push
fdivrp
adc
and
add
sbb
das
xlat
add
adc
mov
cmp
mov
cld
mov
lret
mov
dec
cmp
scas
cmpl
adc
ffreep
mov
out
lods
inc
test
dec
js
mov
repnz
pop
sub
jle
rorl
sub
call
or
stc
xor
sahf
push
sub
inc
lcall
adc
jns
pop
test
add
mov
repnz
mov
or
cmp
sbb
dec
xor
push
sub
adc
rcll
loope
dec
add
std
ja,pt
test
clc
inc
cmp
pop
hlt
clc
scas
add
xrelease
out
jo
rcl
ret
add
int3
pop
push
or
xchg
fmul
or
add
xor
sbb
sub
or
mov
outsl
inc
or
dec
mov
js
push
inc
inc
mov
sahf
cmp
push
cmpsb
sbbl
mov
jg
outsb
adc
divl
stc
sub
cmp
call
sbb
adc
xchg
lret
cli
notb
push
bnd
xchg
stos
push
jbe
data16
pusha
push
jns
xchg
pop
cmpsl
into
ret
nop
hlt
stc
adc
ljmp
jb
push
imul
mov
data16
mov
ret
xor
fstl
xor
stos
cli
mov
jbe
push
xor
cld
pusha
aad
sbb
filds
cmp
push
jge
scas
loope
adc
mov
popf
pop
enter
pop
gs
pusha
lcall
mov
lret
test
fidivrs
mov
sub
mov
mov
dec
sbb
sub
scas
mov
xchg
sti
fldenv
adc
push
aas
push
or
jle
mov
cmp
fisubl
movsb
sahf
aam
sub
in
fcomps
push
lock
fdiv
add
enter
cmp
gs
jb
lret
adc
and
pop
les
adc
push
push
shlb
add
aam
outsl
ljmp
or
ds
movsl
jle
sub
repz
mov
mov
shlb
xchg
test
out
call
inc
scas
fdivl
or
mov
mov
out
push
std
sti
sti
test
fcmovbe
add
sahf
frstor
sub
scas
ret
dec
cmp
in
in
pop
out
pusha
cmp
sub
sbb
mov
in
pop
mov
movl
cmp
mov
sbb
pushf
fdivr
push
mov
xchg
cld
jecxz
nop
std
clc
movl
js
aam
mov
xchg
sub
cwtl
cwtl
lret
dec
pop
pop
pushf
or
rclb
jnp
daa
mov
mov
sbb
adc
iret
out
loopne
and
es
mov
cmp
pop
xchg
mov
imulb
fcoml
and
mov
sahf
fldt
mov
pop
popf
jg
mov
xor
dec
mov
fildl
pop
mov
push
push
mov
sar
into
pop
inc
push
adc
pop
or
call
fsts
bswap
lret
inc
xchg
and
mov
std
push
jle
and
pop
pusha
pop
shll
pop
rorb
jae
jge
js
inc
das
js
cs
fisubrs
test
mov
or
test
add
mov
mov
prefetch
dec
or
and
jecxz
shrb
adc
sbb
sub
and
add
add
sbb
call
aas
xchg
push
int
imul
lahf
or
pop
xorl
mov
cmp
dec
xor
mov
enter
std
push
stos
ss
inc
ficoml
sub
xchg
ret
scas
negl
adc
jnp
mov
dec
je
pop
jmp
mov
pop
or
lret
test
aam
mov
xchg
inc
leave
push
movl
icebp
jp
repz
push
jle
sub
mov
pop
lret
lret
or
stc
adc
mov
fwait
xor
add
lods
pusha
inc
fstl
lds
les
sub
gs
aaa
sub
es
out
or
xor
xor
lret
aaa
and
mov
enter
inc
std
mov
cld
adc
jns
pop
push
jnp
pop
pop
clc
add
dec
xchg
jb
int
call
jbe
sahf
call
pop
sub
adc
adc
out
mov
lds
adc
outsb
dec
mov
jo
les
in
inc
lret
jae
repz
xor
rorl
cmpb
pop
and
enter
pop
ret
pop
push
jecxz
in
inc
fwait
push
mov
rcl
push
call
cmc
jb
jmp
xchg
sbb
or
subl
je
clc
stc
pop
sahf
lods
std
add
inc
xor
and
sub
daa
ret
mov
enter
dec
push
test
dec
leave
ret
cmp
jge
mov
sub
fs
pop
sarl
sbb
cld
or
push
call
fsubrs
loopne
movaps
js
leave
cli
sub
mov
scas
fmul
movsb
sub
sub
test
aam
fneni(8087
mov
inc
movsb
pop
and
sbb
pop
iret
inc
rolb
adc
cmp
mov
outsb
cmp
les
jb
mov
lea
repz
mov
notl
sbb
sahf
push
xchg
pushf
lcall
inc
and
lds
das
dec
shrb
or
scas
add
dec
aas
cmp
rcrl
jp
pop
inc
xor
sarl
pop
add
push
push
cmp
mov
add
push
ret
or
or
imul
adc
mov
pop
add
mov
push
and
shll
mov
add
inc
ss
push
lds
add
je
xor
or
imul
and
mov
push
hlt
jmp
fs
xchg
push
imul
jns
mov
mov
xchg
inc
xlat
stc
cmp
push
xor
sub
sti
jecxz
je
mov
cwtl
in
les
sahf
outsb
mov
and
stc
ret
xchg
sti
lods
mov
sarb
aas
stc
mov
or
or
int3
lcall
and
jecxz
loope
mov
outsl
repz
rol
mov
test
out
add
xor
mov
pusha
inc
cmp
sub
mov
lods
cmp
mov
repnz
cld
xchg
sbb
ret
add
es
push
mov
icebp
call
aas
xchg
outsl
mov
test
int3
ds
mov
and
lcall
divl
shrb
mov
adc
in
push
pop
pop
daa
sbbl
jge
mov
inc
mov
aaa
mov
enter
fldcw
mov
adc
cli
jns
cmp
lahf
mov
out
jle
mov
pop
mov
mov
mov
xchg
add
fsub
movsl
or
out
icebp
mov
mov
decl
ret
push
cmp
fucomi
cs
mov
fisttpl
es
sahf
ret
cmpsb
mov
pop
ss
lcall
jns
mov
mov
cli
adc
sahf
in
out
and
in
mov
and
push
lods
cli
sahf
inc
std
loopne
pop
leave
xor
inc
leave
mov
out
aas
sub
jle
inc
std
push
xor
xchg
clc
sub
lret
sbb
rcll
fbstp
mov
in
idivb
cmc
jp
rolb
lods
xchg
fimuls
ss
ljmp
xchg
dec
mov
push
jge
push
add
lods
adc
aam
mov
stos
mov
jp
notb
leave
cmp
push
punpcklwd
push
mov
jb
dec
das
adc
scas
mov
jnp
pusha
in
sti
scas
mov
jge
pop
fisubs
mov
divl
movsl
gs
jbe
cmp
mov
mov
repnz
dec
pop
rcrb
xor
rcll
shll
cmp
push
jbe
arpl
sbb
and
call
push
dec
ja
andb
sahf
enter
or
push
nop
lods
jb
inc
out
cli
ficoml
data16
rcl
pop
addr16
fwait
and
repz
outsl
sbb
fiadds
lgs
xchg
mov
mov
es
decb
mov
mov
call
fcmovu
out
inc
cld
fmuls
cli
sbb
aas
xor
inc
fimull
pop
inc
fdivs
mov
fld
pop
sbb
call
cli
sub
aas
dec
enter
decb
cli
mov
mulb
aas
loop
repnz
decb
sbb
sub
cmp
aas
push
enter
decb
scas
mov
mov
aas
sbb
sub
cmp
push
inc
fdivrs
mov
bound
cli
inc
push
fsubs
cli
cmp
push
enter
nop
inc
movsb
fdivs
out
aas
or
and
cmp
dec
inc
pop
fsubrs
adcb
mov
repnz
jl
call
inc
xor
loopne
xorb
dec
push
fcomi
stos
ss
ret
sarb
mov
aas
and
inc
gs
adc
cld
enter
push
mov
insb
shl
hlt
add
xchg
dec
xor
or
mov
jbe
out
cld
or
jle
scas
out
mov
ret
test
arpl
mov
sub
and
call
pop
xlat
call
ret
pushf
mov
inc
cmp
pop
mov
push
sbb
jecxz
add
vmovhps
lret
out
imul
incl
lock
xchg
xor
or
sbb
or
dec
fstps
mov
mov
add
arpl
ss
pop
xor
rolb
sub
mov
notl
sbb
arpl
jp
push
test
leave
sti
fiadds
cwtl
jp
or
decb
sti
divl
push
loop
sub
sub
sbb
sbb
cmp
lods
mull
sbb
or
dec
add
and
sub
scas
mov
pop
and
ljmp
push
sub
hlt
cmpb
mov
ficomps
and
aad
pop
out
stc
and
or
ljmp
xor
xchg
ficomps
and
mov
test
pop
xchg
pop
into
stc
pop
sub
pushf
das
shlb
subl
pop
sbb
rorl
shl
divl
bound
sub
out
pop
es
mov
cmp
cmp
push
or
fsubrl
and
sbb
out
push
lock
jle
clc
and
rorb
lcall
lock
or
inc
mov
rclb
sub
clc
sahf
sbb
jb
dec
imul
cmp
sti
push
push
ret
pop
sti
sbb
idiv
and
inc
sub
rol
inc
fnstsw
cmp
cmp
jb
xlat
ret
frstor
cmp
push
pop
and
fcomps
fidivrl
and
sti
or
sahf
push
push
int3
stos
incb
out
xor
xlat
sub
stc
ljmp
sub
fcmovnb
mov
pop
sub
lahf
repnz
cmp
xchg
scas
stos
sbb
movb
hlt
notl
movb
mull
insl
stc
icebp
mov
mov
fiaddl
cli
icebp
xchg
sbb
and
cs
sbb
fcos
cli
sti
cli
ret
sbb
inc
scas
inc
cs
fcompl
jae
adc
jbe
inc
ror
sbb
ret
rclb
or
into
and
fisubrl
and
pushf
fiadds
xchg
nop
jne,pn
sbbb
cwtl
sti
cs
mov
adc
push
lret
or
inc
sbb
mov
jmp
jmp
cli
sbb
sub
and
mov
nop
enter
ret
loopne
loop
stos
push
or
das
cld
mov
and
pop
idivl
sub
sbb
fidivrs
xchg
lock
push
xor
ja
ja
push
ret
push
and
xchg
insl
lret
lret
ljmp
and
shr
xchg
lret
jmp
in
out
sbbb
out
add
push
sub
and
add
mov
cs
jmp
loope
add
loopne
mull
jp
cli
fiaddl
adc
lret
cmp
pop
and
sbb
jno
dec
js
sbb
rcr
mov
add
jmp
clc
into
lods
ds
mov
mov
or
cmp
ficompl
xor
dec
and
std
cmp
test
lret
fadds
sub
mov
mov
sbb
loope
add
add
inc
ljmp
jno
mov
jle
sub
into
fcomp
sbb
mov
and
in
cmp
and
ljmp
cld
cmp
and
out
add
xchg
lret
out
fimull
push
jmp
push
in
nop
push
sti
add
xor
mov
or
imul
data16
in
mov
prefetch
or
sbb
ficompl
sub
adc
sub
dec
mov
lcall
fdivs
jb
mov
jmp
loop
sub
add
xchg
xor
sub
cld
xchg
clc
imul
jl
dec
mov
or
add
or
or
mov
inc
es
hlt
cmp
cld
sub
jge
add
add
xchg
shr
rorb
push
or
dec
mov
inc
pop
test
or
jnp
cmc
xor
rcrb
lret
mov
and
pop
je
push
mul
hlt
push
fisubs
repnz
inc
fisubl
pop
popf
repz
arpl
pop
aaa
js
sbb
mull
pop
aas
mov
testb
cltd
mov
inc
dec
int
ficoms
push
test
in
stc
out
or
pop
pop
jl
push
sub
icebp
ret
aad
cmpsl
jge
rcr
pop
test
mov
inc
shrb
lods
inc
xchg
or
inc
jmp
push
outsl
rcl
or
rolb
iret
or
and
jecxz,pn
mov
out
dec
jmp
in
xlat
cltd
out
ret
ljmp
jecxz
pop
mov
xchg
out
out
fisubs
mov
test
ficoml
lret
inc
stc
dec
sbb
fsts
dec
test
lret
xor
push
cmc
xchg
ljmp
add
adc
lret
sbb
fdivr
pop
xlat
push
adc
cmp
adc
xchg
push
pop
shrb
out
adc
into
cli
sbb
pop
sub
es
inc
adc
filds
pushf
or
das
adc
sub
xor
into
cli
cwtl
pop
bound
sbb
mov
push
push
pop
fmul
mov
mov
push
pop
sbb
xlat
ror
cli
mov
cmp
loope
and
add
orl
or
fimuls
loopne
sbb
mov
and
fmuls
shrb
cmp
fisubrs
push
fbld
mov
addb
jg
xor
dec
int3
jne
cmp
inc
int
ds
in
fisttps
jg
aam
inc
xchg
sarb
in
add
push
sub
cld
loopne
repnz
nop
and
add
rcr
sahf
adc
loopne
decb
sbb
inc
mov
out
arpl
jmp
pop
fcmovbe
dec
pop
out
push
cli
adc
insb
xlat
xor
push
out
adc
jl
lock
int3
push
fwait
cmp
jg
xor
dec
jo
aad
push
leave
add
fidivl
in
add
sub
stos
mov
xchg
push
addr16
add
repnz
jecxz
int3
bound
sub
into
ljmp
jp
pop
sar
push
loope
or
loopne
in
out
cmp
dec
repnz
xadd
hlt
push
adc
xor
cmp
inc
enter
loope
stc
out
push
pop
mov
mov
neg
pop
outsl
lock
nop
divl
loop
pop
mov
in
nop
daa
imul
out
sub
fadd
mov
push
jg
adc
fisubrs
and
sub
test
ret
rclb
and
pop
ds
in
sub
fld
in
ret
jnp
ljmp
and
cld
in
es
sbb
dec
sbb
lods
push
fwait
add
sbb
insb
and
rorb
lahf
cmp
jp
int3
mov
add
ror
out
testl
xchg
je
repnz
inc
lcall
jmp
out
sbb
sarl
add
iret
jmp
push
mov
ljmp
out
sub
sub
icebp
stc
jecxz
lock
mov
out
mov
jge
inc
jge
out
in
clc
mov
pop
sbb
cmp
arpl
test
cmp
sbb
add
mov
jecxz
outsl
in
fidivs
mov
clc
jp
add
sbb
and
mov
cmpsl
ret
stos
shrb
ficoms
adc
adc
mov
pushf
mov
jecxz
sbb
jae
push
mov
pop
and
sbb
lret
sub
ss
push
out
pop
push
sub
sbb
stos
aad
loope
sahf
pop
iret
sub
and
push
sub
pop
icebp
or
sub
and
push
sub
inc
in
dec
and
ficompl
fxtract
fisubl
push
xor
push
adc
cli
mov
inc
adc
and
test
sub
sub
push
sub
imul
push
push
std
push
adc
enter
pop
sbb
pushf
mov
pop
loop
stos
and
incl
pop
jg
or
ds
inc
mov
and
test
dec
cli
rclb
push
les
mov
sbb
or
push
stc
pop
cmp
scas
add
sub
adc
in
cmc
or
sbb
or
sbb
scas
rorb
into
mov
iret
rcrb
adc
add
mov
stos
lcall
and
cmp
adc
shrl
jecxz
mov
subl
shl
mov
mov
in
ljmp
cs
jb
or
lcall
scas
mov
adc
rorb
or
push
or
adc
sti
push
or
jb
popa
cli
into
sbb
or
xor
fildl
testl
movsl
xor
insl
pmaxub
dec
fcmovbe
cli
pusha
sti
in
push
neg
test
lods
push
pop
into
push
push
add
push
aad
or
mov
xchg
test
cmp
mov
std
cmp
cltd
adc
add
clc
aad
jno
sub
mov
clc
xor
pop
movsb
xor
inc
cmp
aam
sbb
lret
or
adc
cmp
bound
lret
ficomps
cmpl
inc
fisubrl
sub
push
lock
arpl
bound
push
pop
dec
or
jp
push
and
add
das
push
push
add
je
sbb
add
in
mov
fisttps
nop
push
cmp
xchg
psllq
add
add
adc
or
lcall
sub
pop
ljmp
sti
xchg
out
and
rclb
xchg
insb
in
or
maskmovq
negl
xchg
xor
mov
loopne
outsl
xchg
pop
decb
inc
enter
std
push
rorb
xchg
pusha
xlat
sbb
fstpl
cld
inc
and
xor
arpl
int3
or
dec
xor
out
rolb
fdivr
nopl
out
daa
lahf
les
test
clc
add
cld
inc
push
push
or
inc
adc
orb
xchg
push
xlat
push
mov
push
dec
test
ljmp
ss
sti
mov
dec
fadds
adc
sub
dec
xchg
sub
mov
jp
dec
arpl
dec
or
ljmp
decb
lock
xor
decl
std
jae
jae
bound
lds
jecxz
push
xchg
in
dec
sbb
inc
pushf
arpl
pop
push
and
imull
pop
les
cs
add
jle
sbb
lock
inc
adc
inc
fbld
dec
inc
out
rorl
loop
or
shlb
pop
push
stc
cwtl
inc
pop
push
iret
sahf
pop
jne
push
js
pop
mov
sar
jnp
aad
fimull
cmp
add
inc
jg
cli
aam
add
mov
pavgw
sar
mov
dec
testl
psrld
cld
add
insb
out
or
stos
icebp
push
or
test
outsb
cmp
jle
mov
int
pop
rcrb
xchg
mov
and
adc
cmc
or
cld
inc
imul
cld
mov
or
push
inc
xor
add
add
fidivs
xchg
stc
fiaddl
pop
or
dec
inc
push
jae
add
pop
add
repnz
stos
xchg
rcrl
cltd
push
sbb
leave
cli
add
pop
out
rcrl
flds
sub
push
pop
xchg
push
ficompl
out
ljmp
dec
sbb
add
lods
out
xor
xlat
aaa
add
aam
mov
mov
cmc
or
sbb
rorb
cli
add
xchg
push
xchg
lods
and
push
mov
repnz
and
cmp
mov
outsl
ljmp
xor
cmp
mov
add
add
dec
adc
mov
mov
loopne
testl
call
or
lods
sub
xchg
std
or
add
cltd
push
adc
jle
add
ljmp
xchg
mov
push
sub
adc
rolb
lret
es
push
jle
pop
bound
add
push
fimull
or
aad
pop
lret
push
rorb
repnz
cld
xchg
lret
mov
lods
hlt
mov
or
das
push
lret
scas
shr
int
and
inc
decl
or
push
xor
sub
bnd
negl
pop
adc
enter
sbb
add
movsb
push
add
or
add
or
pop
push
xchg
repnz
les
push
adc
mov
movsl
or
pop
sub
sub
std
add
adc
stos
incl
pop
push
movsb
sub
add
pop
fcmovbe
rorb
dec
adc
pop
repnz
cmp
test
mov
xchg
flds
push
xlat
dec
mov
out
fistpl
add
and
dec
jmp
xchg
pusha
pop
add
inc
sbb
and
inc
push
add
add
fisubrs
test
add
push
pop
cltd
xchg
fdivr
int3
je
push
add
arpl
aam
mov
push
data16
into
mov
dec
add
mov
gs
popf
gs
lret
push
push
test
fiaddl
sub
pusha
and
cld
jg
sti
mov
sub
adc
ficompl
jecxz
ret
push
cli
xor
push
cli
mov
inc
jno
pop
orb
ds
iret
jnp
arpl
aaa
ffree
pop
les
fimuls
jno
or
loop
loop
out
idiv
or
arpl
mov
inc
stos
push
insb
outsl
push
cmpl
cli
push
push
lahf
sahf
or
jecxz
imul
push
loope
lcall
or
jo
decl
mov
add
movsb
sti
in
ljmp
jle
loopne
hlt
fwait
or
push
add
add
addr16
loopne
int3
and
adc
dec
jmp
orb
leave
inc
sbb
cwtl
lock
pop
loop
filds
cmpsl
int3
mov
test
test
call
xor
ret
cld
cwtl
jl
lret
sbb
popf
sbb
pop
ret
lods
push
xadd
dec
and
scas
roll
lahf
add
or
rorl
scas
push
outsl
sub
insb
inc
outsl
aas
pop
movsb
and
enter
or
ffreep
adc
add
sub
and
dec
push
arpl
stos
fisttps
push
fs
daa
push
std
xor
shrb
push
dec
push
movq
pop
mov
cs
inc
sbb
push
xor
or
in
pop
ljmp
rolb
test
filds
clc
mov
jecxz
ss
push
in
popa
inc
fidivrl
sarl
pop
add
stc
jmp
xchg
dec
lret
leave
clts
pop
es
test
repz
cmc
ljmp
call
push
out
cmp
xor
ret
xchg
mov
dec
add
dec
sbb
add
jno
fiaddl
in
jno
jb
pop
push
xor
sti
push
lret
push
sbb
push
pop
cwtl
popa
sbb
test
mov
sub
ljmp
jecxz
aaa
push
out
data16
nop
dec
adc
adc
pop
or
xchg
jp
cld
mov
cltd
pop
sti
ss
xchg
cs
ss
add
pop
pop
mov
lahf
sti
loope
mov
hlt
add
out
mov
cmp
pop
jo
rclb
lret
iret
aad
cmpsl
add
roll
dec
ret
cmp
add
loop
roll
dec
jns
dec
lcall
shl
gs
daa
xlat
insl
movsb
cmp
push
fdivrp
add
dec
fwait
out
mov
stos
out
fsubp
dec
aad
xchg
cmp
mov
outsl
or
jecxz
or
dec
stos
pop
push
jb
aad
jecxz
outsb
xchg
cwtl
and
cli
cltd
dec
enter
fisubl
jb
pop
loope
cmp
push
rorl
fisubrl
pop
popf
pop
mov
andb
out
clc
adc
xlat
out
pop
sub
jmp
cs
loop
popa
in
adc
push
aam
fcmovu
pop
enter
push
cmp
sbb
loop
adc
jecxz
shl
imul
ret
fstpt
pop
mov
inc
cmc
pop
stos
inc
xor
pop
orl
inc
es
ljmp
mov
pop
hlt
push
loope
das
cmp
push
add
xor
add
add
bound
inc
jae
jle
pop
out
out
jnp
cld
test
call
ds
dec
push
dec
lret
push
inc
insb
fisubs
add
xchg
popa
sub
xchg
mov
inc
into
adc
call
cli
gs
sub
dec
cld
push
imul
es
stos
xor
add
pusha
lss
stc
xor
orl
stos
push
inc
dec
loop
sbb
push
pop
mov
lahf
sti
mov
sbb
filds
rclb
and
jmp
push
push
pop
or
rclb
js
repz
fnstcw
add
xchg
ja
cmova
or
nop
cmpl
icebp
int3
inc
test
xchg
fwait
or
fisttpll
dec
js
pop
dec
inc
in
pop
mov
jg
ret
frstpm(287
cmp
dec
ds
jmp
rorb
outsl
out
push
xor
mov
rcr
add
rcl
cmp
push
out
lock
and
out
mov
mov
mov
push
lcall
into
pop
pop
adc
inc
imul
lcall
insb
cwtl
xchg
push
push
mov
loop
xchg
push
adc
pop
xchg
ds
scas
adc
sub
jecxz
cmp
std
or
or
jmp
and
shrl
xchg
jmp
xor
popf
dec
aas
subl
jo
jl
dec
mov
mov
lret
cmpsb
adc
outsb
adc
mov
inc
cmp
and
andb
int
mov
mov
out
sarb
pop
test
mov
data16
mov
pop
test
outsb
inc
jne
push
fidivl
in
adc
and
sub
add
pop
clc
inc
or
xchg
stc
fld
mov
mov
cmova
xorb
cwtl
pop
push
xor
push
mov
scas
aam
lcall
and
testl
fistpll
pop
add
push
int3
adc
int3
pop
pop
dec
xchg
push
jg
std
xorl
addr16
ds
inc
mov
arpl
rolb
xchg
push
rcl
loopne
adc
add
in
or
push
jno
lahf
xchg
sub
add
std
fldt
mov
aaa
out
lcall
and
xor
adc
mov
mov
je
into
lahf
pop
cli
sahf
or
jmp
add
or
mov
and
cmp
nop
adc
sub
dec
pop
popf
scas
aas
cld
add
dec
dec
std
xchg
pop
jecxz
sti
daa
call
in
inc
dec
and
cli
fldt
push
fildl
sti
adc
lret
or
testb
xor
fcomi
into
scas
aas
pop
and
add
mov
filds
inc
adc
and
xor
fnstsw
inc
pop
or
cmp
adc
add
into
and
std
mov
fldl
decb
push
into
push
push
push
fdivl
test
std
push
push
stos
adc
std
mov
or
sbb
add
call
das
into
mov
outsb
lahf
decb
incb
clc
jmp
repnz
pop
mov
or
and
ficoms
jae
add
aas
cmp
call
hlt
je
addl
dec
xchg
insb
add
cld
dec
push
dec
shlb
pop
mov
in
aad
pop
pushf
lret
mov
push
fstpt
push
xchg
or
adc
aad
jp
mov
je
mov
or
popf
aad
xchg
and
dec
shrb
push
sub
pop
into
jne
test
dec
cmp
mov
pop
pop
push
dec
jg
xor
adc
sbb
mov
out
push
pop
pusha
sub
call
pusha
decl
xlat
rclb
xor
xlat
ljmp
rcll
je
cmp
fs
jne
and
adc
fs
arpl
sub
dec
enter
fs
mov
decl
pop
out
fisttpl
fs
xchg
pop
stos
ret
mov
insl
hlt
int
roll
and
adc
or
ret
pushf
pop
mov
imul
aam
popf
jmp
in
push
dec
xchg
jg
lret
mov
push
ficoms
pop
jo
mov
or
add
or
inc
in
jmp
test
cli
leave
push
adc
in
inc
add
mov
jg
lds
sbb
ficomps
jg
mov
loopne
add
test
sbb
pushf
loope
xorb
cwtl
and
dec
push
das
adc
std
clc
or
dec
sbb
ljmp
add
cwtl
rorl
add
aas
nop
ret
aaa
shr
cs
stc
jb
dec
add
inc
cli
nop
lds
push
mov
mov
dec
fmuls
dec
xchg
nop
das
pop
in
insb
adc
sub
icebp
pop
stos
fwait
sahf
repnz
stos
mov
dec
dec
xor
loop
mov
outsl
push
fwait
jecxz
mov
in
es
inc
push
shl
fisttpll
loope
mov
cmp
and
mov
sub
mov
call
pusha
fdivl
es
jnp
fstl
jg,pt
fwait
into
or
insb
xorb
enter
lahf
mov
mov
ds
rolb
cli
or
xor
mov
call
adc
and
movsb
cwtl
mov
stos
bound
mov
js
repnz
mov
inc
decl
jle
andl
dec
ljmp
dec
repz
adc
lods
pusha
cld
fimull
pop
ffreep
push
dec
aas
rcl
aaa
clc
loop
je
inc
adc
xchg
mov
lock
xor
and
jae
adc
pop
ja
sub
das
out
mov
addr16
ja
mov
mov
ds
mov
dec
or
mov
xchg
hlt
mov
or
sti
inc
add
mov
call
bound
cmp
fists
pop
lock
lea
push
jbe
mov
pop
push
xor
insb
push
dec
mov
leave
insb
inc
rolb
inc
push
mov
sahf
ret
fchs
and
in
sbb
int3
mov
xor
sub
add
insb
clc
dec
out
push
sti
cmp
or
add
mov
into
adc
das
or
ds
aas
je
sahf
cmp
addl
insl
lret
mov
add
stos
inc
clc
into
lcall
mov
and
mov
pop
cld
stc
call
dec
fucomip
push
fs
insl
jl
dec
cwtl
xor
stos
adc
into
outsl
int3
icebp
inc
dec
jge
int3
push
inc
out
into
das
clc
pop
in
addl
mov
pop
cld
mov
jno
add
nop
ss
cmp
cwtl
enter
lock
not
push
in
or
inc
stc
adcl
subb
xchg
jnp
fnstsw
lret
andl
fistl
shl
jb
cli
in
fidivrl
pop
test
mov
in
xchg
add
jecxz
xor
jb
fldt
insb
or
movb
jb
stos
scas
fwait
aas
sti
adc
inc
xor
in
fiaddl
adcb
sbb
sub
mov
cs
dec
inc
in
mov
xor
mov
and
lods
xchg
movsl
pop
push
jb
incl
clc
data16
leave
shll
push
push
or
xlat
imul
aam
adc
xchg
cmpsl
movsb
xchg
push
test
push
add
into
insb
dec
cmp
add
mov
cmp
add
dec
repz
or
call
int3
add
sarb
dec
inc
pop
addr16
inc
mov
out
sbb
rcrb
pusha
insb
data16
ljmp
add
cwtl
cmp
or
imul
push
push
jmp
push
scas
sbb
std
sti
mov
mov
sub
push
jns
push
pop
lret
adc
pop
shlb
jg
jne
adc
add
insb
loop
repnz
push
xor
into
arpl
aam
data16
insl
add
adc
into
xchg
push
into
mov
test
inc
dec
imul
scas
test
pop
arpl
mov
aas
push
js
fisubl
pop
negb
push
std
lret
mov
pop
mov
lret
adc
jecxz
aas
int
mov
or
dec
mov
xchg
jnp
in
lock
fwait
stc
repnz
fnsave
lock
popf
xor
call
push
xchg
outsb
push
mov
add
cltd
aaa
dec
cmp
pop
mov
bound
gs
or
adc
movsl
push
fistl
sahf
inc
add
stc
pop
adc
lcall
cs
lcall
lods
out
sub
test
dec
push
in
dec
mov
or
xor
add
test
jnp
mov
add
lret
int3
pusha
mov
fdivrp
sar
fs
inc
dec
fxch
stos
loope
push
jle
lock
stc
inc
lcall
stos
outsb
and
jp
lahf
and
out
adc
or
ficoms
arpl
shl
cmp
and
dec
test
xlat
cli
xor
insb
xchg
repnz
decb
jb
rcrb
jle
xchg
mov
or
push
sub
adc
push
pop
stos
or
jbe
call
pusha
xor
pop
cld
inc
lods
xchg
xor
fisubs
in
pop
andb
data16
jne
fdivrp
mov
dec
pushl
push
icebp
sub
inc
mov
dec
jae
lcall
pop
jmp
out
xor
inc
xchg
xchg
movsl
test
insl
push
push
pop
repnz
divb
xchg
xchg
gs
inc
in
xor
dec
enter
lahf
mov
pop
adc
fsubrl
mov
lret
ljmp
push
cmp
andps
rclb
inc
cmp
in
into
frstor
shrb
xchg
cld
out
out
cmp
out
das
in
sarl
xchg
cld
jmp
ljmp
lcall
pop
aaa
xor
insl
pop
inc
push
rorl
push
aas
test
daa
enter
inc
lahf
daa
fs
rcl
add
testl
pop
xor
and
add
inc
test
stc
xor
adc
cli
add
stos
cltd
adc
in
adc
add
lret
into
cltd
mov
sahf
inc
mov
cmc
call
imul
sub
hlt
rolb
nop
inc
add
and
and
rorb
test
std
add
cmp
shlb
jmp
push
xor
lcall
ljmp
popf
xchg
mov
sbb
push
stos
cmp
movsb
flds
and
add
and
push
push
stos
mov
cmp
in
push
add
adc
les
aam
sbb
dec
in
add
pop
outsl
test
lcall
lcall
fldl
loop
in
stos
lcall
sbb
pusha
xchg
pop
es
push
test
pop
fs
pop
pop
push
push
lock
add
or
push
lock
add
addr16
nop
lret
push
dec
mov
mov
add
pop
gs
ss
outsb
add
fcomps
push
cltd
pusha
mov
arpl
or
lahf
loope
ds
mov
mov
lret
adc
stos
jo
pop
push
add
cli
jb
push
sti
mov
in
push
mov
or
cs
jns
stc
push
ljmp
pop
and
lahf
insb
stos
cmp
mov
xor
into
nop
mov
jge
jg
ds
js
xor
push
addr16
out
rcl
mov
cs
xor
sahf
out
lahf
xchg
dec
sub
push
or
rol
adc
in
push
dec
loop
sub
mov
push
loopne
pop
dec
nop
out
jno
add
out
stos
bound
push
enter
push
dec
or
out
mov
and
mov
push
or
in
adc
cmp
mov
sub
add
popl
jmp
hlt
dec
jp
dec
mov
pop
test
add
sbb
rcll
jne
xchg
or
adc
pop
pop
rcl
push
mov
push
jg
cmpsl
insb
hlt
subl
mov
jp
ja
push
push
xchg
adc
pop
popf
loope
jbe
adcb
cli
add
shl
jnp
dec
jl
xor
dec
jo
mov
xchg
or
xor
shrb
cmp
push
xchg
adc
pop
or
add
out
pop
xor
pop
and
push
xor
jb
xor
clc
fstpl
sti
lret
xor
mov
xor
pop
adc
xor
jecxz
rorb
sbb
int3
decb
loope
shrb
mov
xchg
clc
sub
and
add
hlt
add
mov
jmp
xlat
in
add
movsl
in
clc
sar
into
mov
add
sbb
push
movb
dec
aad
mov
add
add
ss
xchg
push
or
pop
push
pop
bound
mov
clc
inc
pop
lahf
sbbb
movb
daa
xor
inc
and
or
enter
fisttpl
inc
jg
outsb
test
insl
mov
movsb
hlt
lret
pop
inc
cmp
jmp
loope
adc
push
mov
pop
repz
jb
xchg
cltd
xchg
es
push
mov
dec
pop
into
add
pop
pop
or
loop
cmpsl
push
ret
mov
sarb
xor
stc
jp
cli
adc
adc
je
adc
loop
sti
lret
popa
jmp
pop
lahf
enter
test
dec
hlt
pop
int
fstpl
push
inc
pop
xor
arpl
imul
bound
imul
adcb
enter
jg
jecxz
loopne
nop
loop
stos
or
mov
sti
mov
out
jbe
adc
xchg
push
add
or
mov
add
inc
imul
jp
or
lods
arpl
jecxz
jo
inc
pop
ja
fwait
outsb
adc
push
out
cmpsb
stos
pop
icebp
add
adc
std
xor
mov
insb
mov
lea
ljmp
stos
sub
or
adc
mov
lret
and
and
pop
xchg
lahf
iret
or
bound
lret
mov
stos
popa
xchg
fmuls
or
orb
mov
cmp
dec
loope
mov
mov
push
dec
int
jecxz
mov
sub
jg
lods
or
mov
xor
push
or
or
inc
dec
lahf
xor
fisttpl
mov
xor
jecxz
add
repnz
jecxz
jecxz
int
fcmove
nop
cmpsl
sub
xchg
pop
add
test
int3
subb
out
or
adc
mulb
mov
adc
mov
push
loope
or
mov
ficomps
push
and
xor
data16
das
or
fs
mov
outsl
cmp
dec
call
cmp
pop
or
push
out
pop
call
jle
pop
pop
insb
sahf
push
mov
lods
push
adc
add
leave
movsb
jp
bound
outsl
das
pop
pop
lods
sbb
xchg
fdivrp
inc
dec
stos
loopne
enter
adc
insl
insl
push
ss
or
fistpll
stos
fisttpll
mov
sti
adc
daa
jo
data16
sbb
push
dec
movsl
sub
mov
pusha
mov
pushf
testb
dec
sbb
cmp
lret
dec
fidivs
push
adc
sub
mov
mov
and
push
stc
cmp
into
add
pop
xor
sbb
push
out
cld
cmp
lahf
jo
or
inc
add
adc
push
dec
push
adc
sti
lds
mov
mov
and
popf
imul
cmpsb
dec
fildll
cmc
pop
inc
stos
mov
xchg
lea
stos
cmc
add
fldcw
xor
or
jno
lahf
adc
xchg
mov
xchg
iret
mov
clc
inc
add
shr
outsl
inc
xchg
fstpt
scas
mov
call
addb
test
pop
loopne
and
mov
lods
xchg
push
adc
ficompl
popa
sti
stos
and
lods
sub
push
aas
fstpt
and
push
call
xor
sub
jb
push
inc
fnsave
ficomps
cmpsb
cmc
imul
xchg
add
popf
shrl
decl
cli
jmp
lret
cmp
in
jg
jno
cwtl
add
cld
add
scas
or
mov
jp
cmp
and
ljmp
scas
repz
lret
dec
jg
cltd
jbe
fs
rclb
into
sbb
dec
mov
adc
aam
and
adc
in
cli
dec
int3
inc
insl
movsl
fisubl
adc
std
ljmp
frstor
sub
mov
jmp
add
jmp
leave
add
inc
pop
pop
cmpsb
lods
add
cmpsb
pop
mov
pop
arpl
arpl
mov
test
call
je
inc
lret
arpl
movsb
jae
sbb
mov
dec
push
roll
popa
cmc
xchg
xchg
jbe
hlt
clc
ljmp
push
pusha
inc
or
cs
fldt
roll
decl
daa
dec
pop
mov
lahf
sub
jmp
imul
cmp
fsubrl
cmp
mov
ljmp
inc
fwait
pop
fwait
into
inc
pop
and
xor
xor
mov
add
sub
adc
popf
push
std
or
dec
mov
mov
out
movsb
sub
nop
stos
jae
out
jne
mov
jmp
sbb
sub
movb
cli
push
mov
cwtl
pop
mov
mov
push
aas
or
fiaddl
outsl
ret
neg
out
sbb
dec
xchg
test
cwtl
push
and
loope
pop
int3
jae
mov
cld
arpl
lea
xchg
lahf
daa
mov
mov
add
pop
ret
fistl
fistps
or
in
aam
mov
xorl
fisttpll
rorb
pushf
adcb
cli
xor
and
mov
inc
cmp
imul
pushl
lret
sbb
data16
push
mov
out
popl
push
icebp
jg
loopne
push
lods
xchg
fisttps
mov
push
pop
into
or
jo
mov
outsb
cmc
cs
fwait
nop
pop
mov
xor
pop
or
push
and
movsb
movsb
filds
insl
lret
sbb
addr16
add
add
mov
dec
inc
sub
xchg
icebp
jmp
cmpsb
lods
stos
fs
dec
xor
inc
pop
mulb
adc
dec
stos
inc
sub
pop
int3
cmp
dec
xchg
dec
xlat
psubd
xlat
and
sbb
mov
mov
stc
loopne
xor
scas
setae
pop
push
stos
pop
into
in
popf
call
aas
xchg
mov
hlt
test
mov
mov
jne
xor
adc
lcall
mov
cmc
push
push
mov
sbb
push
inc
adc
rcll
rorb
clc
sbb
dec
mov
mov
shl
out
push
and
dec
sbb
mov
das
add
sbb
fdivrp
movsb
xchg
ret
in
lods
mov
fs
bound
arpl
fcmovbe
in
pop
mov
cmp
fistpl
mov
push
sub
sub
out
cmp
push
sbb
fisttpl
mov
scas
lret
push
iret
push
mov
lret
or
in
or
mov
int
add
jb
inc
add
add
pop
xor
fimuls
ror
xchg
push
loop
and
rorb
hlt
xchg
xor
and
shl
xlat
and
xchg
sahf
lret
repz
lret
enter
imul
cmp
ret
lods
adc
fildll
adc
push
add
fidivl
int3
loopne
aad
mov
repnz
leave
mov
push
pop
dec
scas
movsl
sbb
pand
jecxz
outsb
pop
ljmp
and
mov
mov
add
fwait
in
inc
imul
pop
iret
aad
lret
xor
rclb
insb
inc
lods
add
dec
jno
adc
in
cmp
add
cmp
adc
sbb
sbb
mov
cld
into
dec
or
lahf
adc
dec
jae
dec
pop
movb
xchg
lret
pop
out
lret
inc
lret
mov
push
push
push
sbb
testl
or
xor
stc
movb
xor
les
cld
into
std
or
sbb
jb
inc
ss
add
pop
repnz
into
insl
dec
lret
cmp
add
jge
into
iret
or
mov
adc
clc
add
repz
fistl
sub
loope
in
lret
mov
xchg
xchg
mov
test
mov
push
mov
sub
push
fdivrs
loop
mov
ds
sbb
cli
sarb
enter
decb
ret
fsubrs
cli
les
inc
cmp
inc
fadd
cli
enter
leave
aas
or
fisubl
lret
inc
inc
fmul
cli
xor
aas
sbb
into
fiaddl
dec
inc
fcmovu
cli
mov
aaa
fmul
jp
fsin
pop
inc
fcmovu
inc
cli
fcompl
inc
fstps
aas
loop
mov
cmpsb
sbb
mov
outsb
fidivrl
cs
mov
dec
inc
rcr
sti
sarl
cli
xchg
sbb
cli
pop
lds
inc
int
inc
es
cli
add
aas
out
enter
dec
inc
mov
sbb
int3
xchg
int
jb
into
push
inc
iret
fadds
shrb
aas
ror
adc
sar
cli
inc
rcr
loop
aam
aas
aad
mov
mov
xlat
inc
outsb
fcomp
cli
push
fnstcw
sub
fcmovu
push
fildl
fcomp
cli
rcr
ds
aaa
fmulp
xchg
fcmovu
jbe
loopne
cli
loope
aas
jecxz
and
mov
ss
mov
ror
mov
aas
cmpsb
adc
jp
cmp
jns
jp
cmp
and
xchg
aam
xlat
jb
repnz
cs
cmp
push
fiaddl
and
cmp
jle
xchg
aam
xlat
jb
dec
stc
cs
adc
xchg
aam
xlat
insl
push
aas
sar
mov
xchg
xchg
cwtl
shrl
push
inc
insl
push
aas
sar
jns
jp
inc
hlt
xlat
jb
push
stc
xor
push
and
cld
cmpsb
scas
stc
adc
mov
push
ret
imul
out
lds
dec
or
pop
inc
loop
mov
xchg
adc
push
bnd
stc
cs
cmpsb
dec
cmpsl
ret
xchg
xor
in
cmp
ljmp
and
xlat
sahf
adc
mov
cs
cmp
push
cmpsl
ret
xchg
cmp
in
cmp
repnz
xchg
aam
xlat
jb
ret
xlat
cmpsb
push
aas
rcrb
lds
in
push
cmp
ss
in
outsb
cmp
repnz
es
aam
xlat
insl
inc
aas
shll
fiaddl
es
inc
jp
es
dec
cwtl
sarl
jp
cmp
jns
jp
inc
cmpsl
fldenv
and
inc
decb
xlat
pop
out
cmpsl
fldenv
cs
pop
out
cmpsl
jmp
loop
sbb
jecxz
aas
in
loop
in
ret
mov
xchg
aas
push
jmp
inc
cs
cli
push
in
aas
repnz
out
outsb
cli
lock
or
icebp
int
inc
repnz
repz
aas
hlt
enter
and
fmuls
cli
imul
aas
clc
enter
cli
mov
mov
sti
cli
jp
aas
enter
incb
fdivr
cli
push
add
out
enter
incb
ds
or
add
mov
add
aas
add
incb
pop
fsubs
cli
or
inc
xchg
testb
or
aas
or
stos
or
push
inc
jb
psubd
aas
ds
adc
fcoms
cli
ficoms
mov
pop
push
fmuls
sbb
push
ficompl
ds
sbb
sub
sbb
aas
sbb
ficompl
fmul
sti
pop
js
and
sahf
push
mov
and
and
dec
enter
and
cli
cli
daa
aas
loop
sub
lret
outsb
cli
sub
xchg
add
fisubrl
pop
inc
sub
ss
das
enter
cli
inc
xor
fdivrp
xor
aas
xor
mov
mov
xor
cli
outsb
aaa
aas
push
enter
cmp
fdivrs
cli
cmp
out
cmp
lret
ds
add
fcoms
inc
push
inc
inc
fdivs
cli
inc
push
aas
inc
enter
fiaddl
fdivrs
add
xchg
dec
fisubrl
dec
inc
push
fmuls
xor
sbb
dec
decb
fcmovu
dec
mov
dec
fsubs
xchg
fsubrs
push
dec
aas
push
enter
push
inc
push
fdivr
cli
push
fidivrs
push
enter
cli
mov
mov
pop
cli
push
aas
dec
enter
pop
inc
adc
pop
cli
cli
pop
aas
fcmove
pusha
fidivrl
inc
fdivrs
arpl
inc
fdivs
cli
data16
addr16
out
inc
imul
aas
imul
mov
insl
inc
push
outsb
cli
dec
outsl
aas
cs
jno
cli
fdivs
fidivs
mov
std
jne
lcall
pop
inc
js
ds
jns
aas
jp
fidivrl
loop
jl
lret
mov
cld
jle
lcall
cli
pop
cmpl
incb
cli
cli
test
loop
xchg
fadds
sti
cli
mov
inc
mov
pop
cli
mov
mov
sub
decb
inc
mov
idiv
loop
nop
enter
cli
cmpsb
cli
mov
xchg
cli
outsb
xchg
aas
push
enter
xchg
inc
and
xchg
cli
add
in
fcomps
fwait
mov
pushf
enter
push
inc
sahf
fdivs
cli
lahf
sbb
mov
fiaddl
fdivrs
clc
movsb
aas
or
fisubl
cmpsb
inc
dec
fsubs
adc
test
inc
fcmovu
stos
cli
mov
aaa
lods
enter
push
scas
fmuls
mov
aas
mov
adc
mov
testb
fdivrp
mov
fidivl
mov
mov
push
jae
ds
mov
incb
fsub
cli
mov
mov
cmc
aas
pop
xlat
push
inc
mov
inc
aas
ret
enter
decb
inc
test
sti
mov
cwtl
pushw
push
sbb
leave
adc
cli
lret
lret
enter
push
inc
int
push
cli
into
out
aas
iret
enter
cli
mov
mov
shrb
aam
cmp
aad
sbb
aas
push
enter
fadds
fcomp
cli
mov
aaa
fcmovne
mov
fcoml
cli
fstl
fmulp
inc
fcmovu
sub
fmuls
cli
loope
aas
loop
into
adc
cli
in
div
in
jp
out
pop
out
ds
cli
push
jmp
fcmovu
jmp
jp
ds
aaa
in
enter
jp
out
fcomps
enter
cs
repnz
cli
repz
aas
hlt
enter
rolb
es
test
fiaddl
fdivr
cli
dec
sti
aas
ss
std
inc
add
cli
ljmp
scas
out
mov
add
cmp
data16
add
dec
fiaddl
fcoms
cli
pop
cli
aas
or
or
imul
or
xchg
enter
decb
cli
dec
xor
adc
push
adc
fcoms
cli
ficoml
inc
cmp
adc
xchg
in
adc
push
ficoml
cmp
fcomps
cli
sbb
aas
sbb
ljmp
stos
jmp
sbb
jb
pop
ficoml
and
fsubs
cli
push
and
dec
and
ljmp
cmpsb
ljmp
push
sub
dec
inc
sub
cs
sub
or
fdiv
cli
xor
aas
xor
mov
mov
fdivs
lcall
pop
fdivs
cli
cmp
sbb
cmp
cli
cmp
fdivrs
mov
cmp
cmpsb
call
inc
fdivs
aas
bound
inc
enter
sub
fmuls
cli
inc
out
inc
int
inc
inc
stos
out
inc
cli
xchg
inc
aas
jb
dec
ficoml
dec
inc
fmuls
and
dec
dec
decb
ret
xchg
out
dec
push
push
enter
and
fadds
daa
mov
inc
into
fdivrs
mov
jb
mov
fsubrs
cli
mov
repnz
fiaddl
fdivrs
in
aas
mov
adc
cli
dec
aas
cs
dec
inc
repnz
cli
ror
ds
aaa
int3
enter
jp
into
fcoms
iret
cmp
ror
push
fcmovbe
cli
inc
rcr
rol
aas
aam
mov
cmp
inc
push
xlat
cli
dec
fdivrs
sub
add
fiaddl
fcomp
cli
rcr
aas
mov
loope
fdivrp
xchg
fdivs
loopne
inc
xchg
ds
loop
es
jecxz
aas
in
cli
loop
out
aas
out
stos
loopne
call
inc
outsb
fsubr
cli
push
jmp
ss
in
inc
fsubr
cli
aas
mov
fistpll
repnz
repz
aas
hlt
enter
sbb
fadds
cli
mul
aas
clc
int
inc
stc
scas
cli
cli
lcall
pop
std
inc
cmp
cli
sbb
inc
lcall
ret
fsubs
mov
fsubrs
or
or
fimull
fadds
cli
psrad
adc
lret
cli
mov
mov
adc
jp
aas
pop
enter
pop
inc
sbb
sbb
cli
sbb
enter
sbb
mov
cmp
push
push
enter
sub
fmuls
cli
and
aas
and
into
fisubl
adc
cli
and
neg
and
ficompl
daa
inc
inc
fsubrs
cli
xor
aas
sbb
sub
sub
sub
sahf
fnstenv
das
enter
push
inc
aaa
fdivs
cli
cmp
aas
cmp
cli
fidivrl
fiaddl
fdivrs
fdivrs
mov
incb
inc
xchg
inc
enter
testb
inc
lret
int
inc
inc
mov
xchg
push
dec
ficoml
dec
mov
xlat
and
dec
fadd
add
dec
out
dec
enter
adc
cli
push
xchg
not
push
aas
jp
push
ficompl
push
inc
cmp
push
cli
push
push
aas
cli
enter
push
inc
mov
aad
pop
pushf
ficompl
push
inc
pop
fadds
pop
sub
pop
enter
testb
cli
pusha
mov
aam
fidivrl
arpl
fsubs
gs
es
addr16
out
push
mov
sbb
inc
insb
fmuls
insl
sub
outsb
enter
cli
inc
ja
js
aas
jns
lcall
jnp
pop
fdivrs
jge
sub
jle
push
jg
repnz
mov
sarl
test
pop
cli
test
aas
xchg
sbb
xchg
testb
mov
sarb
mov
fmuls
out
enter
nop
ds
iret
xchg
fcomps
enter
and
fadds
cli
xchg
loop
xchg
enter
cli
stos
into
mov
cltd
cli
jp
aas
enter
pushf
inc
adc
popf
cli
out
inc
mov
int
mov
pushf
fisubl
fdivs
cli
movsb
push
aas
movsl
enter
fiadds
xor
test
cmpsb
int3
mov
stos
inc
data16
cs
scas
inc
fsubrs
ret
fsubs
mov
fsubrs
mov
aas
mov
cs
lods
inc
cli
mov
aas
mov
fdivrs
mov
mov
cli
ds
fiaddl
inc
inc
out
shll
mov
fcomp
jp
push
data16
pop
enter
cs
or
sbb
or
aas
or
or
ret
mov
jp
aas
pop
enter
adc
fcoms
cli
push
adc
test
fcmovu
adc
xchg
cli
sbb
sbb
ficompl
push
inc
sbb
cli
cli
sbb
aas
sbb
push
ss
and
data16
and
fsubs
cli
and
push
enter
and
divb
xchg
fadd
aaa
test
cmp
fdivrs
cli
push
cmp
out
enter
cmp
lcall
inc
pop
inc
inc
fadds
enter
incb
inc
inc
fcomp
mov
cltd
mov
ret
mov
dec
fadd
mov
push
mov
cli
sbb
out
mov
scas
ret
enter
data16
inc
aas
ret
enter
incb
inc
test
cli
scas
sarl
sti
outsb
mov
push
dec
inc
xor
int3
cli
push
int
cli
enter
dec
je
cmpsb
shlb
enter
hlt
jle
sbb
mov
cs
mov
mov
out
aas
mov
cmpsb
mov
xchg
push
ror
fcmovb
push
inc
ret
fdiv
cli
aas
jb
mov
jle
leave
inc
pop
fmul
cli
ds
aas
push
enter
dec
inc
fcmovu
into
mov
fcomp
mov
mov
fsubrs
fisttpll
fmulp
cs
adc
fsubr
cli
in
aas
in
mov
mov
fsubr
cli
push
aas
inc
enter
jmp
cli
fsubr
or
mov
sahf
mov
pop
push
pop
lret
jle
mov
push
fidivrl
sarb
mov
js
fimull
fdivrs
xor
rcr
inc
inc
repnz
ret
fdiv
lret
xlat
mov
movb
ds
enter
leave
fiadds
sahf
fiaddl
cmpsb
adc
sahf
cmpsb
jle
mov
cli
inc
mov
mov
fbstp
xchg
fcmovb
push
ret
cli
ret
cs
enter
ljmp
stos
cmp
dec
aaa
xchg
pop
test
dec
inc
xor
int3
cli
push
int
test
mov
scas
data16
mov
iret
jl
idiv
iret
idiv
push
lahf
sarb
mov
push
data16
xlat
int3
jmp
fdivrs
pop
ss
xchg
and
sub
test
mov
leave
or
sahf
cs
rclb
sar
rcrb
shrb
pop
rcrb
mov
fmul
cmpb
cmc
or
or
add
stc
int3
cmp
fistpl
adc
scas
lock
sub
xor
imull
mov
xchg
sub
and
and
cli
xchg
mov
pop
sub
sbb
dec
je
jne
insl
shrl
outsl
sub
mov
movsb
out
pop
adc
fildl
push
add
add
into
and
ret
sub
rcr
stc
repz
rcrb
sbb
fsubrl
and
and
and
sub
jbe
loopne
stos
push
sub
lret
lcall
xor
adc
add
cli
loopne
ret
insl
mov
xchg
sub
das
fistps
hlt
out
sbb
cs
adc
push
stos
fdivrl
inc
push
or
add
es
add
jecxz
ret
aam
jae
cmp
repz
negl
or
mov
mov
cmpb
push
enter
fsts
pop
adc
mov
push
mov
jbe
cmpsb
in
mov
out
push
cli
inc
data16
cmpsb
lret
push
aam
es
mov
call
fdiv
mov
mov
mov
in
in
mov
xchg
mov
aas
ret
mov
les
lds
xchg
ds
cld
inc
mov
into
iret
iret
imul
roll
cld
es
mov
aad
lcall
fsubs
cli
inc
push
aas
jbe
xchg
pop
shll
add
fsubs
mov
fisubl
cmpsb
xor
adc
in
push
std
sar
int
iret
cs
movaps
xor
fcomps
sub
das
or
sbb
dec
fbld
test
es
out
sub
andl
outsl
sbb
mov
sbb
test
pop
add
add
or
and
cmpsb
clc
inc
lcall
lods
push
inc
jbe
xor
add
dec
incb
ljmp
dec
push
add
adc
mov
push
scas
dec
jp
cli
orb
ja
or
cld
fistps
push
pop
jle
adc
add
lret
incb
decl
imul
push
push
sbb
sub
sbb
adc
sub
outsl
add
rorb
and
insl
or
jg
push
cli
clc
add
add
push
fcomp
sbb
outsb
add
hlt
aaa
mov
movsl
jbe
sub
push
sub
sbb
mov
ds
les
outsb
mov
and
jne
loop
mov
repnz
add
and
push
lods
inc
add
or
stc
lock
movsl
pop
push
dec
pushl
nop
sbb
cmpsb
and
das
ficompl
inc
clc
pop
inc
push
pop
mov
add
sub
and
pop
and
shlb
mov
cwtl
in
xchg
imul
push
sub
and
sub
dec
stos
or
jmp
push
cld
and
lahf
sbb
cmc
sub
out
test
fcom
push
pop
rcrl
jmp
arpl
daa
outsl
sarl
jp
mov
iret
push
in
cld
sbb
pusha
test
mov
pop
frstor
sub
movsb
push
sub
jg
rclb
inc
cld
jbe
sbb
push
cwtl
and
pop
repz
sbb
pop
clc
sbb
pop
std
push
insb
pop
popf
call
fstps
sub
repnz
ror
fucomp
pop
lds
std
negb
sar
push
mov
cmp
dec
popa
mov
les
cli
loop
sub
sahf
test
cld
cmc
pop
out
or
aaa
jo
xchg
stos
xor
and
mov
jae
jp
jae
mov
and
sbb
push
push
lock
xchg
sbb
jecxz
enter
adc
or
jecxz
cmp
mov
and
ficomps
sti
adc
or
sub
pushf
push
call
jg
inc
out
sbb
filds
pop
add
in
cld
or
push
imulb
adc
out
das
jg
imul
push
or
fisubs
lods
loopne
mov
sbb
cltd
in
loop
lcall
and
aad
fstl
jmp
stos
fsubrp
and
sbb
pop
idivb
cmp
fstpl
fisubrl
add
pop
popf
mov
push
jg
lods
loop
cmpl
adc
popa
add
lods
shlb
mov
filds
sbb
movsb
insl
xor
nop
int
pop
adc
outsl
cld
out
pop
mov
imul
fimuls
or
mov
pop
lcall
xor
gs
xchg
pusha
cld
and
leave
pop
sbb
jecxz
lock
push
push
imulb
stc
sbb
notb
adc
inc
call
movsb
lock
cltd
push
mov
fsts
cmpsb
and
divb
xlat
push
mov
jbe
push
notb
and
cmp
int3
sbb
inc
push
jo
jnp
and
dec
jno
rolb
scas
fildll
shl
loopne
imul
call
call
sub
push
lahf
push
or
divb
xchg
push
mov
jns
mov
xchg
cmpsb
idivb
ds
je
jbe
ss
mov
cli
jle
jg
inc
mov
cmpl
mov
inc
inc
mov
mov
jae
in
ss
mov
xchg
jne
fistpll
je
pushf
mov
out
cmp
push
jecxz
mov
xchg
testl
orb
loope
repz
lret
mov
int3
gs
jle
ljmp
mov
sti
jb
mov
addb
cltd
jns
and
es
pop
mov
xor
nop
add
out
sti
lods
xor
loop
or
aam
out
int
mov
sub
aam
adc
jnp
push
inc
jp
aad
sbb
adc
dec
or
movb
mov
or
inc
cmpsl
xor
xor
fdiv
mov
cmp
mov
sub
sub
mov
xchg
inc
and
out
or
scas
xor
hlt
cmp
xchg
cmp
lret
xchg
cwtl
inc
hlt
or
call
xchg
aam
iret
jge
sbb
cli
das
andb
pop
or
or
es
adc
xchg
sub
mov
fistps
decb
int3
xor
mov
call
mov
int3
push
cli
mov
cmp
adc
cmpsb
sbb
repnz
fidivs
insb
jecxz
mov
ljmp
mov
test
pextrw
push
mov
push
mov
sbb
push
lret
sub
or
lret
mov
fisttps
enter
mov
es
lods
outsl
adc
push
dec
mov
fcmovb
mov
or
fimull
inc
popf
outsl
ret
inc
mov
add
inc
nop
pop
push
pop
xlat
fucom
aad
fisubl
lcall
aas
add
add
mov
mov
and
pop
cmp
pusha
push
xchg
loopne
or
cs
jmp
int3
sti
fwait
cs
mov
int3
lcall
lcall
cmp
push
adc
push
pop
loope
pushf
enter
pop
je
pop
jecxz
fists
inc
push
inc
push
iret
int3
push
xlat
movb
or
sbb
push
mov
jl
pop
idivl
sub
outsb
out
in
xchg
jl
pop
adc
jae
push
clc
std
or
push
fisubrs
and
stos
divl
faddl
cld
add
push
and
push
int3
loopne
pop
sbb
call
jnp
pop
mov
loopne
or
cmp
js
lea
push
aad
sub
sbb
inc
mov
fisubs
dec
fisubs
call
loope
dec
loop
loop
int3
loop
adc
les
push
xchg
clc
clc
sbb
movsb
ret
aas
daa
mov
fwait
lret
mov
push
and
xor
imul
ljmp
push
repnz
psrlw
les
and
dec
sar
cli
stc
dec
cmp
addr16
out
iret
out
sub
je
or
xchg
insl
fstp
fwait
xor
shll
imul
cmp
cwtl
cmp
das
test
xchg
xlat
push
enter
inc
outsl
xor
inc
fstpt
les
fsubr
cld
jle
int3
dec
xor
ret
or
push
and
shlb
fiaddl
push
lret
pop
insb
call
pop
sub
sbb
mov
inc
xor
xchg
stos
gs
ret
addl
arpl
cltd
adc
negl
add
inc
and
sub
and
or
inc
call
add
mov
xchg
mov
imul
inc
sbb
fs
leave
lret
dec
fsubs
addr16
scas
shlb
into
popa
scas
rolb
ret
fistps
ljmp
ljmp
pop
idiv
or
push
incl
dec
jmp
pop
out
movsb
sbb
shlb
push
cmp
rolb
sbb
cmp
xor
mov
jmp
and
into
ljmp
int3
and
add
shll
enter
jnp
fs
jp
mov
push
cmp
mov
pop
stc
add
stos
push
stc
into
mov
lcall
call
test
lret
mov
es
push
xchg
fadd
sbb
arpl
mov
mov
xlat
rcrb
jbe
xchg
jmp
xlat
fbld
push
lds
in
xlat
add
mulb
ror
mov
out
iret
out
or
jp
ss
jle
inc
sbb
push
mov
mov
aad
outsb
sbb
ss
and
aaa
push
iret
jl
xchg
jno
xchg
dec
mov
add
mov
xchg
mov
incl
mov
idivl
or
fmuls
outsl
mov
mov
adc
inc
pop
inc
sbb
into
imul
sbb
xor
dec
fisubl
inc
movsb
lret
lock
add
aas
das
enter
cwtl
ds
or
and
aas
dec
enter
stos
fsubrl
or
push
mov
fisttps
outsl
mov
dec
fdivs
cltd
shl
out
or
fidivrl
fadds
jno
aas
hlt
leave
mov
es
out
shr
out
ret
fcmovb
out
fsubrp
xchg
xchg
icebp
cmp
int3
mov
ror
lret
es
iret
cld
es
sar
shll
es
pop
inc
fdivs
ja
cli
inc
shrb
fstl
fists
loop
fwait
xor
sbb
cmp
es
call
into
in
ja
ja
ja
xlat
or
xchg
repz
ss
clc
xchg
or
fmull
movsl
popa
test
mov
mov
jae
mov
jae
pop
int
adc
jmp
mov
test
stos
gs
xlat
imul
adc
decl
push
xchg
test
fs
sub
and
mov
and
xor
cld
adc
call
and
jae
outsb
and
push
pop
adc
push
loopne
fs
xor
inc
xchg
fwait
fs
ljmp
pop
inc
stos
gs
jo
adc
cltd
sbbl
and
xor
adc
test
pop
fs
mov
adc
inc
dec
pop
jo
sbb
jo
push
imul
outsl
and
rcrl
pushf
aas
imul
and
jbe
and
je
or
je
icebp
lea
push
push
xor
pop
loopne
aam
lock
adc
sub
adc
int3
repnz
mov
fcmovu
adc
sbb
xchg
sub
int
pop
ja
adc
outsb
inc
xchg
jecxz
loope
sbb
shlb
inc
js
push
sbb
lret
xor
or
mov
xchg
push
mov
add
rorb
idivl
clc
inc
xor
repz
xor
sub
push
cli
add
ja
in
jp
ficompl
add
roll
mov
lret
sarb
or
cmp
cmp
idiv
add
mov
imul
inc
xchg
mov
xlat
shll
aas
mov
add
ret
mov
clc
ret
inc
aad
or
movsbl
popl
fcoms
lahf
or
ret
pop
shrb
fwait
in
pop
push
inc
sti
mov
sub
push
in
sbb
sub
insb
lret
out
pop
in
xlat
stc
lret
out
bound
push
sbb
fstpt
clc
and
mov
adc
pushf
fimull
jmp
fnstsw
mov
xorl
jle
dec
and
cs
aas
mov
out
xchg
add
fdivrs
add
adc
add
cwtl
sub
sub
push
mov
js
xor
in
movsb
mov
jb
shrl
pop
es
pushf
mov
cmp
ficompl
adc
jns
out
dec
shlb
int3
mov
pusha
pop
mov
bound
push
pop
sbb
dec
mov
outsb
insl
fs
jae
jnp
push
stos
push
neg
jne
xor
mov
cmp
dec
mulps
mov
push
xor
pop
dec
add
lods
dec
out
pop
push
mov
jns
mov
dec
mov
jns
jg
push
mov
mov
in
je
bnd
je
out
mov
out
lret
jl
mov
mov
sti
mov
and
or
jp
jl
xor
xchg
and
iret
mov
inc
loopne
jne
insl
inc
int3
adc
cli
into
jne
les
add
cli
add
or
test
lsl
mov
mov
mov
stos
into
sbb
repz
mov
les
adc
jmp
inc
mov
pop
andb
mov
repz
fistpl
push
sub
aaa
pusha
ss
jg
jbe
test
mov
popa
shlb
shrb
jo
jno
inc
ja
jge
jne
arpl
inc
mov
outsl
push
mov
sub
mov
int
loope
fs
push
imul
clc
mov
cmp
popf
in
fbld
pusha
add
lret
mov
dec
subb
addr16
int3
pop
rcl
lea
mov
jle
cmpsl
pop
mov
loopne
imul
mov
inc
inc
sbb
stc
mov
repz
mov
and
inc
mov
inc
mov
sub
xor
shlb
gs
fstps
cmp
mov
inc
ds
lcall
dec
mov
aad
or
fcmovu
sbb
call
dec
fmull
push
inc
in
leave
test
and
jg
xorb
idivb
add
clc
inc
roll
or
mov
mov
sbb
and
in
and
repz
rcrb
in
fldt
enter
jmp
in
add
lret
gs
mov
mov
mov
push
lret
fimuls
shl
out
stc
pop
inc
inc
out
std
dec
rcr
cmpsl
mov
cmp
ret
fisttps
fimuls
sub
push
lret
clc
repz
mov
pop
insb
or
sub
call
dec
les
pop
fmulp
or
adc
out
dec
mov
mov
fdivr
cli
sbb
fdivrs
adc
fcoms
je
ds
in
enter
aaa
inc
push
fdivs
popf
ret
neg
aam
in
add
and
inc
inc
imul
mov
cli
fdivp
aas
or
and
ds
pop
inc
jle
scas
loopne
cli
adc
imul
fistpll
xor
pop
jp
mov
repnz
aas
inc
fdivrs
xchg
scas
ds
loope
fmul
neg
pop
aaa
inc
dec
es
mov
adc
cmpl
or
enter
mov
outsl
in
mov
outsl
hlt
push
les
pop
mov
sarb
sbb
inc
imul
mov
fstp
test
js
mov
mov
mov
push
loopne
sar
into
push
pop
clc
out
iret
mov
push
cmpsb
gs
fisttps
or
fsubrp
es
or
adc
lret
ljmp
ljmp
into
neg
jae
movsl
mov
push
mov
mov
adc
call
jb
xor
push
pusha
inc
mov
pusha
push
fisubrl
mov
jle
cs
sbb
es
pushf
das
pop
inc
mov
mov
ret
sbb
mov
data16
iret
in
or
xor
mov
cmp
sbb
and
enter
jg
or
jecxz
mov
sub
sbb
or
add
fildll
pop
in
das
stos
lock
es
dec
pop
sub
and
and
push
ss
and
out
xchg
ret
pop
or
cwtl
mov
call
stc
out
sub
lcall
ljmp
jno
cmp
dec
imul
sbb
fisubrl
fsubs
ficompl
pop
dec
cmp
add
je
lret
out
pop
pop
lcall
cld
or
les
dec
mov
mov
sbb
mov
dec
push
sbb
cmp
std
push
les
adc
ror
push
push
sbb
mov
ds
in
stos
iret
lcall
sub
mov
push
movsl
mov
mov
pop
bound
popf
sbb
mov
andb
adc
inc
push
popa
out
or
rorb
mov
mov
add
lahf
lret
in
fisubrl
lock
xchg
fisubs
sub
sub
jg
imul
repnz
je
inc
xchg
or
xchg
sti
cli
xorb
inc
loopne
add
cmpl
and
int3
and
movsb
movsl
pop
bound
out
lcall
dec
stos
jo
pxor
push
lock
repz
xchg
mov
xor
aaa
mov
mov
int3
out
jmp
adc
sub
xor
mov
ljmp
outsl
lds
sbb
push
dec
jg
fwait
push
mov
mov
fnsave
std
test
jg
xchg
xchg
enter
sub
mov
lcall
shll
icebp
repz
sub
test
xchg
setg
scas
data16
fcomi
sub
sub
sub
cmp
fwait
imul
fsub
sub
insl
test
ja
mov
pop
add
jns
mov
cltd
mov
ds
pop
cmp
ljmp
push
jge
popf
mov
stos
fwait
mov
rcr
push
in
jmp
push
or
push
pop
push
and
xor
ds
inc
push
push
push
pop
push
bound
push
jl
adcl
push
mov
mov
std
fstps
clc
jge
popf
or
popf
sub
ss
cmp
pop
popf
push
je
jns
mov
test
mov
mov
jg
xchg
out
lock
cmc
cmpsl
add
scas
and
cs
xor
push
scas
bound
subl
scas
scas
mov
into
ficomps
cmpsl
pop
scas
or
sbb
es
sub
dec
scas
pop
imul
mov
out
out
shl
icebp
repnz
in
cmc
cmc
push
add
adc
push
cmc
and
xor
cmp
aas
cmc
pop
cmc
cmc
addr16
xor
cmc
cmc
lahf
cmc
cmpsb
cmc
stos
les
inc
xlat
test
repz
cli
test
test
test
test
test
test
test
test
dec
test
arpl
jg
xchg
mov
icebp
mov
imul
cltd
imulb
or
mov
jb
out
lds
call
inc
cs
xor
xchg
xor
xor
sarb
shr
push
hlt
aam
push
jae
mov
ljmp
push
cmp
gs
jp
xchg
mov
ret
lcall
inc
stos
push
dec
es
rcl
in
in
push
dec
add
and
jg
fstpl
inc
popf
dec
popf
push
popf
cltd
xchg
push
in
sbb
out
sub
sub
ja,pn
jge
xorb
xchg
rcr
out
push
add
aam
push
outsb
aad
dec
mov
adc
lock
dec
dec
pop
push
imul
scas
cmpsb
icebp
rcrb
out
jbe
mov
test
jbe
test
mov
enter
fcomps
cmc
xor
mov
out
jg
xchg
dec
xchg
pop
lahf
cmpsl
mov
jg
xchg
pop
mov
ljmp
mov
mov
push
sub
xor
xor
xor
xor
xor
punpckhbw
cmc
jnp
xchg
xchg
cmc
pushf
cmc
cmpsl
cmc
mov
mov
dec
mov
add
adc
test
test
dec
test
bound
cmpl
in
movsb
popf
scas
xchg
mov
xchg
out
icebp
lahf
cld
cmpsl
pop
scas
adc
sbb
mov
mov
mov
mov
mov
mov
mov
mov
dec
or
mov
sub
int
fsubrs
jecxz
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cmc
mov
xchg
cmc
sahf
cmc
test
cmpsb
push
aad
loopne
mov
or
pop
test
test
dec
popf
pop
popf
fs
outsl
popf
jp
test
mov
mov
jns
mov
cltd
or
sub
push
popf
popa
popf
insb
popf
pushf
popf
cmpsl
popf
mov
mov
mov
xchg
xlat
dec
xchg
pusha
lahf
addr16
icebp
fstp
jecxz
stos
cli
scas
add
cmp
mov
mov
mov
mov
mov
mov
mov
push
hlt
cs
xor
xor
xor
sarb
add
add
int3
pusha
pop
cmp
mov
xchg
popl
gs
fdiv
sub
sub
int3
hlt
cwtl
push
mov
cmc
rcr
loopne
add
push
inc
jne
out
lcall
fsubrl
dec
push
push
push
je
aam
cmp
mov
mov
into
in
mov
lret
fdiv
daa
icebp
push
bnd
test
mov
mov
lret
cmpsb
shrb
js
mov
sub
add
cmp
fs
jno
jle
popf
push
div
pop
jg
xchg
cmc
sub
sub
sub
cs
xor
imul
xor
xor
xor
xor
xor
xor
add
ja
out
daa
roll
lahf
sbb
mov
pop
push
flds
ret
call
sub
add
sub
push
jae
nop
push
mov
insb
rorb
fidivrl
shlb
push
mov
jl
mov
js
fsubr
sub
mov
stc
sub
cs
push
test
sub
lahf
cmp
ds
call
and
jbe
hlt
lds
aas
out
cmc
pop
lock
pop
fbld
loopne
push
leave
out
int
lds
inc
stos
test
mov
push
xchg
mov
xor
xchg
pop
imul
sbb
xchg
push
sub
jmp
push
inc
shll
push
push
pop
pop
push
repnz
cmp
mov
and
cmp
pop
std
and
sub
lret
lock
jg
xchg
icebp
sub
sub
jno
jmp
pop
push
outsb
shll
xchg
das
std
dec
sbb
jns
xchg
xchg
aas
hlt
jbe
sahf
mov
adcb
sub
push
pop
adc
sub
xchg
xchg
add
nopl
icebp
xor
jge
xchg
loop
push
sub
in
add
and
dec
cmp
sub
add
push
ds
inc
aam
push
xchg
enter
lahf
push
push
in
imul
sbb
out
mov
and
adc
jge
xchg
mov
sti
mov
add
ret
pop
push
pop
cmp
adc
xchg
jns
popf
fnstsw
test
jbe
nop
lods
mov
mov
xchg
notl
and
js
out
lahf
add
xchg
test
pop
push
imul
cwtl
mov
sub
sub
sub
lea
les
xchg
or
adc
and
cmp
jb
fiaddl
mov
mov
inc
jecxz
fs
push
add
inc
lods
jg
push
sub
in
or
jle
mov
stos
scas
sbb
out
sub
jecxz
cs
sub
sub
sub
pop
adc
int3
adc
sub
inc
xor
sahf
inc
sub
pop
mov
jmp
sbb
movsb
jle
push
aaa
jle
hlt
push
pop
fsubp
or
xchg
sub
mov
outsb
mov
pusha
push
ja
dec
jg
xchg
jmp
lock
lds
mov
popf
popf
popf
mov
out
out
cmp
add
pop
loopne
mov
test
stos
cmpsb
loop
pop
lcall
push
pop
cmp
add
pop
mov
lock
icebp
and
cmp
clc
std
add
mov
jge
popf
es
mov
mov
pop
rolb
les
mov
mov
hlt
or
mov
sahf
jb
jle
xchg
ds
out
js
jg
xchg
data16
js
jle
test
mov
inc
in
cmp
es
cli
xor
dec
aas
pop
leave
outsl
cltd
jne
sub
cs
push
pop
nop
scas
insb
scas
int
push
add
in
sub
je
out
out
or
sbb
inc
inc
jns
out
fimuls
cltd
fildll
push
xor
sysenter
adc
xor
xor
shlb
lock
dec
cmp
sub
imul
sahf
stc
xor
mov
jp
subb
fwait
stc
lods
add
or
mov
data16
fcomip
xor
dec
fisttpll
jg
repnz
loop
fs
cs
jbe,pt
xchg
add
out
sbb
or
push
inc
rcrl
lret
cwtl
mov
aad
icebp
add
inc
adc
push
dec
std
pop
sbb
enter
push
cld
xor
xor
xchg
dec
scas
push
repnz
fnstsw
add
push
fisubrl
push
xchg
rol
push
leave
rcl
push
inc
aam
push
ja
orl
xor
pop
imul
mov
pop
out
cwtl
popf
xchg
mov
push
jl
xor
dec
cmc
push
fdivl
push
mov
aam
in
mov
test
lds
cmp
std
push
pop
lods
jp
push
push
dec
jle
test
or
xchg
repnz
les
inc
cld
cmpl
jns
pop
or
jns
mov
cwtl
xchg
xchg
jb
cmp
out
push
fsubrs
mov
mov
mov
cmp
call
push
lahf
lods
cmpsl
ljmp
repnz
cmp
jmp
sbb
dec
sbb
push
pushf
in
push
lcall
pop
stos
stos
scas
xor
pop
icebp
jns
mov
pushf
fdivr
ss
xchg
shrl
jge
std
dec
pop
aad
out
clc
xchg
lcall
enter
mov
cli
fstpl
leave
repz
xchg
in
adc
rclb
push
dec
cmp
push
inc
negb
xchg
mov
mov
xchg
fmuls
jg
sbb
lcall
icebp
imul
or
xchg
add
cmp
adc
leave
mov
repnz
or
and
pop
push
sbb
arpl
hlt
icebp
test
mov
inc
in
inc
add
inc
enter
in
lods
jnp
xchg
pop
shrb
mov
push
sbb
xchg
fisttpll
sahf
js
mov
aam
lock
jbe
xor
or
aas
push
pop
rorl
add
jns
repnz
pop
inc
push
cmp
sbb
lahf
sahf
cli
mov
aaa
push
and
jg
mov
lcall
fwait
dec
test
inc
stc
lret
out
dec
out
push
push
add
cs
cmp
mov
cmpsb
subb
lcall
into
cmpsl
shl
les
std
jnp
mov
cmpsb
outsb
xchg
in
adc
sub
mov
sbb
subb
rorl
shll
push
or
dec
in
pop
out
or
mov
stc
mov
pop
pop
data16
push
push
push
cmc
push
lcall
cmp
ljmp
xchg
sub
push
dec
nop
xor
xor
add
xchg
ljmp
mov
xchg
push
mov
ret
pop
lock
loop
xchg
cmp
mov
push
int3
adc
addr16
insb
call
push
xchg
push
mov
mov
mov
cmp
mov
mov
add
push
push
push
sbb
xchg
and
push
xor
dec
inc
add
test
pop
pop
mov
jb
jl
subl
add
adc
push
jl
hlt
sar
dec
incl
scas
pop
jg
insl
scas
jae
subl
scas
movsl
scas
stos
scas
mov
test
lcall
enter
jo
xor
syscall
cli
cmc
sbb
pop
in
loopne
cmp
js
imul
scas
test
xchg
cmc
fwait
cmc
movsl
cmc
scas
xchg
push
adc
sbb
sub
aad
dec
inc
add
test
jo
or
jg
repnz
aas
sti
xchg
outsb
adc
push
and
ss
mov
push
jle
addr16
insl
push
jl
adcb
xchg
jns
lods
test
mov
adc
out
push
lret
push
aam
push
sbb
push
xchg
cmp
enter
mov
and
shr
sub
aam
cmp
shll
in
sub
mov
mov
out
ljmp
jmp
or
adc
mov
cmp
sti
scas
outsb
add
lock
dec
pushw
pusha
add
faddl
jmp
bnd
add
and
jle
and
cmp
pop
jbe
add
inc
sahf
fsubs
mov
aaa
dec
push
pop
push
push
mov
ss
call
leave
out
jmp
ja
stc
ljmp
or
push
and
pop
inc
push
jl
mov
push
test
mov
sahf
testl
inc
mov
dec
cmpb
mov
ret
rclb
repnz
adc
and
xor
inc
mov
xchg
or
out
sar
mov
test
lahf
lods
cmpsb
ljmp
imul
sbb
push
pushf
stos
scas
scas
mov
cmp
pusha
push
lahf
xchg
sub
sub
cs
xor
jb
xorb
mov
hlt
rorb
shl
push
add
adc
xchg
mov
or
pop
test
pushf
add
fsubrs
xor
xor
add
adc
and
fadds
push
test
pop
jecxz
sub
sub
bound
outsl
cld
in
add
inc
adc
inc
ja
bound
dec
mov
repz
outsl
jl
mov
repnz
xchg
ds
cmpsl
push
scas
mov
fadd
ficompl
bnd
xchg
imul
scas
xchg
xor
loop
cmp
cmp
cmp
jne
push
dec
test
sub
pop
dec
mov
cmp
std
and
mov
fmul
aad
push
cltd
push
movsb
push
mov
mov
xchg
mov
push
ror
add
test
jns
repz
dec
adc
lds
dec
inc
push
xor
mov
fisttpll
pop
add
shrl
or
cmp
outsl
repnz
stos
les
inc
push
test
mov
mov
cli
and
rol
mov
sub
add
sarb
cmp
ret
std
lret
outsb
dec
lock
add
push
roll
cli
lret
out
push
sarb
pop
test
iret
call
imul
jmp
mov
fsubr
or
dec
dec
aaa
es
loopne
sbb
mov
data16
jg
loope
jl
jns
aaa
in
fdivrl
xchg
lahf
imul
mov
jg
push
loopne
out
clc
mov
pop
push
sahf
lahf
mov
mov
out
out
repnz
shl
out
jmp
push
mov
dec
rolb
add
and
icebp
lcall
mov
loop
fcoml
int
add
xchg
sub
push
sub
jbe
lahf
out
fistl
mov
out
fnsave
std
cmp
pop
bound
sub
pop
bnd
and
mov
xchg
push
call
pop
mov
mov
xchg
shr
sub
lods
loopne
mov
push
dec
lcall
mov
cmpsl
and
bound
sub
mov
in
call
shl
ljmp
mov
mov
pop
cmp
xchg
jmp
sbb
mov
clc
jg
xor
mov
daa
aam
dec
int
loop
lods
enter
xor
lcall
cmp
loopne
not
or
and
int3
add
add
push
divl
ja
js
out
ret
or
jno
or
inc
pop
bnd
test
out
repz
push
mov
sub
divb
js
scas
je
xchg
pminsw
mov
insb
in
jge
mov
rolb
lock
dec
adc
xor
xchg
xor
neg
xor
hlt
sub
adc
les
cmc
daa
add
fcoms
int3
jp
add
aad
push
add
arpl
push
xchg
roll
pop
sbb
jbe
mov
rcr
sbb
nop
adc
mov
cmp
pop
cwtl
xchg
icebp
or
jb
int
add
bound
scas
in
leave
xor
jbe
rcrb
mov
add
int3
call
xor
cmc
adc
sbb
xchg
inc
test
lds
frstor
jno
cmp
out
ljmp
loop
mov
in
xchg
adc
sub
jg
xchg
cmpsb
xchg
dec
in
sub
jnp
add
jo
inc
lcall
dec
std
sub
pop
icebp
insb
fstpt
test
lcall
dec
xchg
pop
adc
cmp
sahf
push
mov
incb
pop
fdivs
pop
rclb
repz
outsb
inc
mov
jns
push
sbb
xor
repnz
xchg
dec
pushf
xchg
ljmp
ret
ja
lret
in
sub
cli
xor
mov
test
xchg
dec
cmpb
jg
out
ds
jo
bnd
icebp
mov
cmp
incl
push
jbe
out
lcall
aaa
push
out
jbe
lret
jmp
fistpl
sub
add
rcll
insl
sahf
jle
out
repnz
mov
mov
fwait
aaa
push
lock
out
push
mov
and
add
add
popf
lds
add
inc
sbb
inc
mov
sub
es
cmp
out
add
cmp
out
dec
pop
lahf
adc
shlb
fsubs
mov
mov
pop
scas
cld
lret
mov
mov
xchg
mov
lods
not
cmc
dec
jg
xchg
pop
xchg
push
ds
out
xchg
add
jnp
cmp
cltd
test
cmpsl
xchg
ficoms
jo
mov
jle
ljmp
add
call
dec
in
int3
push
jns
test
adc
jo
add
icebp
into
sub
rcrl
push
daa
int3
xchg
cmp
mov
adc
push
lcall
add
sub
mov
sub
lea
add
sahf
mov
clc
mov
bound
dec
add
cmp
nop
or
aad
cmp
arpl
scas
ds
xchg
mov
dec
aaa
out
jg
fidivrs
jmp
mov
lcall
cli
mov
fcmovnb
in
lds
cwtl
inc
test
fnstsw
pop
je
pop
aam
dec
mov
sub
cmp
dec
mov
cmc
test
xchg
js
push
fwait
enter
sub
cltd
aam
cmp
jle
lahf
sbb
jns
loop
out
repz
push
icebp
stos
in
mov
xchg
cmpsb
fstp
cmc
pop
adc
jg
mov
out
out
push
sub
add
jbe
inc
ljmp
xchg
mov
push
rcr
in
add
dec
inc
cmpsb
sub
dec
shll
or
sbb
jecxz
neg
int3
in
stos
or
dec
popa
push
les
sub
pop
pop
lods
sahf
sbb
sub
mov
xchg
ret
enter
inc
sbb
xor
push
fiaddl
jns
jo
pushf
mov
lods
loope
cs
ljmp
mov
or
aas
or
enter
loop
ljmp
cmp
pop
hlt
les
test
int3
int
fisubs
or
cmp
mov
fwait
std
mov
cmp
cmp
lret
sub
cs
xor
leave
lock
push
cs
xor
add
stc
aas
sbb
shrb
fimuls
sahf
hlt
mov
lret
cmp
dec
push
out
repz
clc
cmp
insl
mov
hlt
and
out
incb
push
fcompl
mov
mov
mov
push
lret
enter
dec
pop
pusha
pop
xchg
addr16
insl
and
jl
jns
ljmp
cmp
aad
dec
iret
cmp
insl
or
out
adc
es
adc
lds
inc
lahf
jge
in
call
call
shr
or
pusha
mov
sarl
mov
negb
lcall
icebp
jo
add
cmpsb
mov
jecxz
aas
mov
cmp
mov
lahf
stc
add
subb
cld
js
js
mov
sahf
aad
sub
sub
sub
adc
or
ljmp
sub
loop
inc
jecxz
mov
jecxz
ja
out
mov
sahf
lret
cld
cld
dec
pop
cmp
mov
pop
xchg
xor
xor
mov
and
push
int3
in
hlt
fdivs
cmp
loope
add
loop,pt
aaa
dec
shl
out
cld
sahf
push
push
mov
mov
hlt
mov
xor
push
enter
dec
out
jns
subl
sub
enter
inc
or
leave
lods
jmp
push
shlb
inc
add
and
ja
int3
icebp
mov
dec
xchg
insb
lahf
mov
repz
fisubrl
fdivrs
and
cmp
icebp
addr16
xchg
enter
jl
pop
cs
mov
cmp
insb
sarb
cmc
or
aas
div
mov
add
aam
ss
lods
ljmp
scas
aaa
mov
in
mov
enter
addb
cmp
cs
jns
mov
fsubl
mov
push
mov
push
and
lock
fs
push
or
scas
shl
icebp
pop
jecxz
mov
hlt
dec
into
enter
pusha
lds
pop
pop
mov
imull
nop
cmc
fcoms
mov
faddp
sub
scas
add
lret
xchg
out
dec
cmp
add
ja
shr
mov
push
mov
sbb
xchg
icebp
sub
sub
sarb
shll
push
mov
push
or
imul
push
sbb
ds
lock
mov
push
in
stc
sbb
icebp
xchg
mov
cmp
add
fidivs
in
xchg
call
data16
push
xchg
enter
push
push
lret
lcall
cmp
ficoml
lods
cs
repz
ds
out
pusha
out
inc
mov
cli
cmp
or
jo,pn
imul
jmp
xchg
ljmp
mov
push
pop
xor
mov
push
sub
and
addl
dec
ret
jnp
les
xchg
ret
jns
cli
shl
lcall
fmuls
leave
xchg
pop
sub
add
outsl
mov
jmp
dec
push
jns
in
pusha
sbb
lds
mov
ss
ljmp
push
movsb
xchg
out
adc
jns
xor
mov
adc
xor
les
add
inc
fnstsw
idiv
push
mov
sub
push
hlt
insb
push
jle
out
jmp
mov
cs
add
shll
ficoml
int3
xor
stos
sub
lods
jge,pn
lcall
adc
jle
add
jns
pop
pop
mov
inc
inc
notb
ss
icebp
leave
jecxz
cmp
cmp
dec
inc
sbb
cmp
jne
xchg
pop
xor
sahf
adc
ljmp
movsb
adc
jb
jns
adc
das
mov
jno
inc
jbe
inc
jecxz
mov
icebp
nop
repnz
fcmovb
jle
fisttpl
out
or
jns
and
jp
repz
cmp
callw
fidivrl
mov
shl
add
jmp
mov
repnz
shlb
mov
and
xchg
aaa
push
mov
add
fcom
fnclex
push
cmp
sahf
fdivp
add
or
xor
xor
add
cmp
xor
xor
xor
xor
xor
adc
sbbl
ret
fidivrl
repnz
xor
adc
mov
inc
mov
jecxz,pn
xchg
je
and
cmp
add
jo
pop
and
repnz
repz
ljmp
or
mov
sbb
nop
sub
xchg
enter
dec
push
insb
xor
add
inc
jb
jp
orb
xor
setp
cmc
stos
mov
cmp
or
mov
push
cmp
lock
cmp
mov
push
jb
push
fistpl
int3
push
jb
jp
subb
test
fidivrl
add
ficoml
ds
fimull
cld
dec
sbb
sub
repnz
dec
dec
mov
push
nop
enter
mov
enter
clc
xorb
lret
cmp
sub
or
cmp
xchg
pop
enter
push
test
es
add
mov
int3
xchg
push
dec
mov
pop
mov
icebp
shl
loop
mov
dec
fisttpl
pop
dec
sbb
mov
add
js
dec
cs
xor
adc
jns
jp
subb
add
lds
mov
mov
enter
loop
bound
aam
xor
aad
dec
sbb
sub
inc
mov
je
aad
dec
bound
or
pop
adc
and
adc
pop
lret
lds
push
test
cli
add
cmp
hlt
xor
xor
xor
add
or
jb
inc
xor
xor
setb
frstor
mov
lret
add
cmp
cli
mov
adc
fwait
inc
dec
clc
push
test
add
jb
mov
xchg
cmp
mov
jecxz,pn
divl
loop
roll
push
xor
add
mov
add
js
cmp
enter
pop
mov
mov
push
ret
cmp
lcall
sbb
ret
shlb
enter
repnz
or
sub
mov
jb
aad
dec
push
xchg
cmp
push
add
pop
aad
dec
andb
xchg
push
lock
xchg
out
int
xchg
rclb
loop
ljmp
lret
js
and
cmp
xchg
bound
jb
jp
jp
mov
jns
mov
sarb
enter
repz
ljmp
cmp
add
push
pop
aad
push
cmp
push
dec
push
push
push
pop
arpl
jb
sub
adcb
xchg
cmc
lds
test
add
les
loop
adc
mov
or
and
mov
jns
pop
test
jb
mov
dec
xchg
cmp
cmpsb
cmpsb
ret
jo
adc
mov
xor
adc
mov
adc
test
out
push
scas
pop
loope
out
cmpsb
and
sub
mov
fcomps
push
sub
mov
bound
shl
ret
add
out
pop
testb
sub
push
jo
adc
shl
push
rorb
add
cs
ss
ds
fiaddl
fdivl
adc
jle
loop
sbb
sbb
push
cmpsb
jg
scas
and
mov
es
jg
sbb
fisubrs
loop,pn
xor
xor
dec
ss
jg
push
sbb
push
push
loop
inc
dec
add
fildl
inc
dec
jg
push
sbb
push
loop
push
dec
jbe
push
jle
push
xchg
cmc
scas
jecxz
inc
out
mov
and
movsbl
push
mov
leave
sahf
add
cmpsb
aas
scas
fs
rolb
mov
mov
mov
nop
out
xchg
add
xchg
fdiv
xchg
dec
lcall
mov
mov
cs
push
pop
scas
pop
ljmp
mov
jbe
dec
jle
mov
or
xor
mov
pop
out
std
jb
fucomi
iret
cs
sub
cs
xor
pop
sahf
xchg
dec
push
xor
add
js,pn
or
outsl
sahf
mov
les
adc
mov
lock
es
rorl
and
pop
adc
cmpsb
pop
sahf
cmpsb
test
scas
jne
cmp
xor
iret
adc
jo
mov
aas
inc
xor
pop
pop
popf
adc
adc
mov
mov
clc
ljmp
sbb
lds
test
push
test
test
addb
pop
cwtl
dec
rcrb
out
hlt
stc
xchg
adc
push
dec
sub
and
push
push
test
jne
mov
popf
cltd
popf
test
enterw
xlat
push
out
icebp
push
not
push
push
adc
push
and
cmc
inc
cmc
dec
cmc
push
jecxz
push
js
jb
into
mov
mov
scas
shl
lret
fildll
mov
movsl
jg
ffree
cmp
inc
jne
mov
push
shl
cmc
mov
cltd
cmpsb
mov
add
xlat
mov
imulb
adc
xor
scas
ds
inc
scas
push
and
bound
ror
mov
aad
push
mov
mov
mov
mov
mov
and
push
cmp
divl
jo
cmp
pusha
shll
push
mov
out
lret
mov
xor
and
pop
jecxz
mov
xor
xor
xor
adc
call
pop
and
cmp
adcl
rcll
jns
lds
lahf
inc
test
scas
shr
movsb
fcmovbe
int3
sbb
jo
xchg
xchg
mov
out
call
sbb
pusha
mov
or
inc
mov
repnz
repz
hlt
cmc
cmpsl
cmc
mov
fxsave
cmpsb
ss
lcall
sub
cmp
add
fiaddl
daa
mov
cwtl
mov
fcmovnbe
adc
sarb
or
lock
jp
push
data16
jae
out
xchg
hlt
sub
adc
callw
or
vcvtdq2pd
in
inc
in
xor
xor
mov
mov
movl
xor
mov
or
or
dec
add
push
push
ss
cmp
xor
xor
add
inc
sub
pop
mov
aas
cmpsb
mov
inc
adc
aam
jge
mov
or
pop
enter
sbb
xor
adc
jne
and
icebp
js
push
sub
mov
aad
push
pop
dec
pop
sahf
stos
cmc
imul
cmc
mov
xchg
cmc
popf
cmc
mov
leave
dec
outsb
pushf
out
fstp
xor
sti
push
jmp
or
jl
rcl
adc
mov
xor
fistpll
add
dec
pop
pop
jecxz
push
repnz
repnz
mov
shll
xchg
cltd
dec
mov
cmpsb
pop
movsl
dec
xchg
sub
sub
push
xchg
mov
xchg
ret
icebp
add
mov
es
mov
fisttpl
jbe
dec
scas
mov
ds
add
cmpsb
dec
dec
push
xchg
dec
push
icebp
jns
ja
fwait
test
adc
cmp
xor
xchg
mov
cmpsb
shll
pop
cli
icebp
cmpsb
vpmulhuw
aas
or
movsl
bound
in
push
addr16
mov
inc
movsb
test
lahf
enter
pusha
dec
mov
movsb
in
lret
dec
fstpl
lods
cmp
out
jne
cmp
inc
mov
or
sbb
iret
jp
jne
xchg
pop
stos
stos
int
pop
adc
push
je
jne
inc
shl
and
cmp
hlt
cmp
mov
mov
rclb
imul
push
add
cmpsb
lcall
ja
enter
pop
imul
imull
jbe
jmp
cmp
push
xchg
xchg
dec
cmpsb
add
rolb
inc
fs
arpl
mov
in
fmuls
bound
xchg
xor
xor
int3
adc
sub
adc
sub
int3
movsl
add
adc
dec
cmpl
push
push
imul
push
jl
cwtl
jmp
fstl
sbb
insb
xchg
and
ja
push
xchg
inc
ficoml
data16
jbe
xorl
mov
int3
scas
jb
dec
call
push
sub
mov
leave
lds
fidivl
xor
add
rcrl
xor
leave
jp
aam
cltd
in
adcb
cmp
dec
aam
fs
leave
insb
pop
insb
icebp
scas
in
cmp
cmp
ds
push
aam
dec
or
jle
jo
push
mov
out
shrl
enter
xor
outsb
mov
in
dec
loop
mov
sbb
in
out
ds
cmc
push
cld
jle
sub
mov
lcall
cwtl
pop
inc
aaa
jle
mov
sahf
shlb
into
push
xor
mov
leave
imulb
js
jg
xchg
scas
jmp
lods
inc
or
in
add
sahf
dec
inc
push
add
push
rol
es
lahf
pushf
cmp
dec
sub
stos
outsl
xchg
push
ror
divl
loop
cs
mov
lock
icebp
arpl
cmpsl
cs
add
int3
sarl
test
mov
les
data16
xchg
in
mov
sub
sysret
and
fdiv
dec
fidivrl
cmc
sub
imul
mov
mov
inc
stos
jle
xchg
pop
jle
sub
push
push
lahf
jae
push
mov
call
sbb
jne
loopne
and
es
sub
sub
addr16
mov
xchg
into
iret
xor
mov
mov
andb
mov
ljmp
fmull
imul
mov
sub
push
jb
dec
push
add
hlt
gs
jnp
xchg
jg
stos
mov
push
pushf
aam
push
mov
mov
xchg
jp
sbb
inc
dec
cmpsl
pushf
les
ljmp
xor
xchg
roll
lock
push
xchg
adc
popa
jg
mov
lret
cmpsb
or
data16
lds
mov
mov
jg
sub
js
mov
mov
adc
shr
or
jns
cwtl
outsb
aaa
jmp
dec
push
enter
int
fstpl
push
push
xor
cmp
inc
xchg
out
sbb
inc
js
jl
cmp
scas
mov
sti
sbb
or
lds
out
out
sub
out
jmp
in
roll
enter
inc
add
adc
push
lock
add
arpl
shl
imul
out
and
aam
test
clc
pusha
xor
or
adc
push
pusha
jg
testl
pop
test
jg
push
outsb
and
hlt
movsl
xor
sub
add
insl
mov
or
mov
mov
mov
lcall
sahf
adc
test
lahf
shl
push
stc
push
mov
push
mov
aad
dec
jg
clc
cmc
mov
xchg
cmc
lahf
int
jmp
add
aad
dec
lahf
stc
sub
ljmp
pop
ss
out
cmp
or
imul
pop
stc
out
shl
push
es
into
out
adc
inc
push
pop
and
sub
out
sub
sub
bound
lock
movsb
roll
pop
sub
leave
cmp
lds
mov
push
sbb
mov
xchg
sub
mov
js
inc
add
pop
fucomi
stos
dec
int
mov
repnz
push
sahf
push
pop
dec
mov
int
cmp
mov
jmp
push
jp
popa
dec
bnd
push
push
enter
and
push
push
lods
push
clc
add
adc
mov
div
xchg
dec
movsl
add
push
push
mov
ret
jmp
jbe
ljmp
jnp
cmp
lods
mov
shrl
xchg
jno
into
xchg
scas
movsb
scas
mov
add
pop
icebp
repnz
fsubrl
sbb
cmp
mov
cmpsb
adc
sbb
and
xor
lcall
dec
fcmovu
pop
dec
fidivrs
mov
push
addb
cltd
jae
cli
test
lods
repnz
jecxz
cmp
sbb
mov
dec
in
jmp
jg
mov
aad
dec
adc
aas
adcl
dec
cmp
test
fwait
lods
mov
enter
idiv
std
sbb
movsl
lds
inc
and
adc
pop
add
pop
lea
mov
mov
mov
repnz
fdiv
loope
lock
decl
or
shlb
add
lds
push
test
pop
test
data16
xchg
int3
cmpsb
in
mov
nop
fnsave
jecxz
in
xor
xor
xor
xor
xor
add
fsubl
dec
jl
push
xchg
test
mov
dec
aad
inc
pushl
fisubl
xor
mov
push
xchg
inc
pop
scas
pusha
scas
scas
insb
scas
stos
loope
cmp
jb
cli
mov
cmp
lds
pop
lds
inc
jg
xchg
pushaw
xchg
xchg
test
lds
push
inc
popa
jg
xchg
cs
icebp
daa
repnz
rep
hlt
xchg
xchg
in
jp,pn
pop
mov
test
inc
data16
pop
leave
stc
fs
lds
sbb
scas
cmp
pop
lcall
ja
popf
jbe
repnz
dec
fisubrs
adc
sbb
scas
test
in
dec
vmlaunch
cmp
push
cmpsl
dec
mov
fdivr
enter
jo
xchg
mov
xlat
rcl
mov
cmp
sub
xchg
jb
mov
mov
xchg
cltd
xorb
cmpsl
sub
icebp
js
mov
ljmp
cld
sbb
cmp
lcall
mov
mov
jne
push
adc
dec
fildl
fimull
lea
xor
ficoms
ret
aad
jmp
add
pop
mov
mov
inc
or
dec
sbb
pop
or
ret
inc
lods
dec
int3
cmp
ficompl
out
push
xchg
out
lock
hlt
pop
jecxz
mov
jns
dec
js
push
jl
shlb
push
mov
bound
pushl
mov
mov
push
push
jecxz
mov
cs
int
hlt
or
mov
mov
sub
push
dec
nop
sub
sub
add
jle
out
mov
into
fists
lds
inc
xchg
xchg
mov
cmp
xchg
mov
dec
arpl
fcomps
mov
insl
notl
loope
push
inc
mov
ret
dec
inc
push
test
fdivrl
scas
bound
sahf
jae
fisttpl
dec
lods
jns
push
js
scas
insb
adc
cmpsb
mov
jb
rorl
mov
sub
sahf
adc
adc
pusha
cmpsb
insl
stos
jg
mov
nop
ds
mov
dec
loope
in
out
faddp
cmc
sbb
repnz
dec
push
push
push
pop
push
arpl
inc
dec
mov
jge
mov
fwait
mov
mov
je
loop
pop
xchg
sub
rcr
push
in
shll
je
out
push
pop
lret
jo
push
sbb
add
inc
and
mov
rcrl
dec
fwait
mov
in
add
inc
aas
addl
mov
data16
je
jmp
xchg
add
scas
cwtl
lock
icebp
xchg
es
sub
xchg
popl
pop
lahf
jne
push
fst
or
push
enter
int
andb
fmul
sbb
jb
fs
mov
sub
mov
add
icebp
pop
repnz
cmc
test
mov
cmpsb
loop
jb
int3
fcompl
sub
cmp
rcr
out
lock
test
call
push
call
loope
dec
or
sbb
fst
lcall
jg
xchg
fstl
pop
scas
sub
cld
loop
ljmp
sub
dec
dec
out
imul
mov
int
cmp
cld
add
pushf
mov
or
xchg
mov
cmp
sbb
xchg
xchg
lds
pushf
jne
xchg
out
sahf
pop
push
sub
sub
pop
lds
add
push
cmpsb
cmp
pop
data16
rol
jmp
in
sbb
repnz
jns
mov
jb
testb
lock
cmpsl
mov
ret
icebp
push
mov
jo
lea
leave
sarl
push
pop
cmc
push
mov
int
hlt
stc
js
or
int
js
jmp
push
add
ja
loop
push
repnz
mov
rol
int
test
cs
xor
sub
lret
int
or
loop
int3
mov
add
faddl
xchg
insb
scas
scas
mov
bnd
mov
push
lcall
add
cli
enter
add
bound
rorb
sub
adc
out
loop
mov
cmpsb
dec
adc
fdiv
xchg
repnz
and
fsubrl
mov
jp
cmp
daa
dec
xchg
je
out
insl
xchg
jle
dec
and
jecxz
and
idivb
jo
sub
add
dec
fwait
mov
mov
mov
cwtl
jns
cmp
xchg
repz
hlt
xor
dec
add
insb
push
mov
out
xor
sub
sbb
sbb
aas
loope
js
dec
dec
cmp
pop
push
add
push
xor
pop
xor
dec
cmp
repz
jno
subb
rorl
sarl
nop
lcall
pop
sub
cli
push
loopne
push
rcll
jb
sbb
push
outsb
mov
push
repnz
ljmp
mov
push
insb
addr16
mov
add
mov
insl
cmp
mov
xor
and
mov
ljmp
loope
call
sarl
mov
adc
in
ret
mov
int3
pushf
leave
lcall
dec
ja
mov
lds
jp
xor
jae
enter
fstpl
lods
je
jbe
push
jle
inc
rorb
repnz
dec
xor
fiaddl
push
stos
lock
popa
jg
cmc
adc
adcb
addb
cmpsb
mov
outsb
addl
dec
lods
pop
mov
js
pop
stos
mov
sahf
mov
xchg
mov
mov
sarl
or
sbb
clc
or
lock
lahf
dec
or
dec
repz
icebp
sub
enter
rorl
scas
rolb
fildll
sub
mov
popf
vmovaps
adc
pop
sbb
inc
mov
sub
out
out
lock
and
jecxz
cmpsb
in
xchg
fcompl
out
jnp
fcmovb
xchg
mov
arpl
js
or
lcall
sub
insl
ja
lods
and
add
dec
dec
pop
pop
outsb
insl
cltd
call
ucomiss
test
jg
cmpsl
xchg
in
test
adcl
fcmovnb
mull
xchg
sub
cs
repnz
mov
cmp
xchg
adc
leave
add
cmpb
jne
sahf
fists
leave
daa
xchg
enter
mov
dec
lock
je
rcr
mull
mov
ljmp
lea
out
incb
or
hlt
xor
cmp
pusha
jns
mov
push
push
push
mov
ret
sub
cs
add
cmp
es
out
push
mov
inc
cld
jb
xor
out
push
cmp
in
jecxz
cmc
adc
lods
scas
push
mov
lcall
push
lock
imul
pop
cmp
js
sahf
or
icebp
dec
hlt
icebp
sub
cmp
mov
repnz
pop
xchg
ljmp
sub
rorl
enter
jnp
fdivr
repnz
loop
stos
cli
popa
inc
push
rclb
push
rorl
cmp
or
sub
push
in
jmp
mov
jg
inc
or
cmpsl
push
add
mov
in
fildl
cmp
push
leave
cli
jp
js
mov
subb
fildl
jns
cli
push
jbe
ficoms
pop
fmulp
pop
mov
in
sub
mov
cmp
push
sbb
ss
jo
add
outsb
cmpb
scas
aam
out
loop
adc
mov
orb
dec
fsubl
rolb
dec
adc
xor
enter
lods
pop
pop
sbb
jns
bound
or
xor
dec
mov
sbb
jp
fnstenv
cs
xor
nop
push
sub
cmp
dec
fimull
dec
push
out
out
or
nop
incl
out
xor
sub
bound
cmp
stos
cmp
jb
jp
pop
dec
lcall
ja
jge
or
in
push
xchg
bound
mov
push
jo
xor
add
outsb
data16
mov
sar
push
add
scas
mov
sub
lcall
loope
inc
or
imul
cmpsb
xchg
aam
pop
pop
sub
shl
in
push
sbb
cmpb
pop
dec
stos
or
out
mov
mov
cs
adc
dec
inc
cmpsb
mov
and
jecxz
sbb
jo
adc
mov
cmc
jmp
jb
cld
jl
aad
jge
scas
lea
xchg
and
dec
or
aam
push
outsl
int3
jns
lock
pop
jns
xchg
js
mov
sti
decl
mov
mov
in
out
ds
lret
hlt
xor
inc
cld
notl
xchg
fidivl
in
scas
les
and
mov
out
lods
xchg
sarl
dec
repnz
sub
outsb
jae
cmpsb
push
sub
sub
sub
punpckhdq
mov
sahf
nop
pop
pop
add
ljmp
in
adc
mov
shrb
or
cltd
or
and
js
es
sub
and
mov
shl
adc
aas
dec
scas
out
adc
les
xchg
mov
xlat
out
adc
and
cmp
lahf
add
loope
pop
push
push
cmp
movsl
dec
jns
sub
lods
cmp
pop
outsl
ljmp
int
or
out
sub
mov
xchg
fisubs
pop
dec
xor
decl
stos
mov
jno
cmp
sahf
cmp
cmp
es
je
mov
lahf
outsb
enter
sbb
cmp
loope
and
aaa
cmp
push
cwtl
stos
cmp
adc
mov
pop
fldl
mov
and
shr
data16
dec
cmp
sahf
mov
test
jecxz
cmp
cli
adc
mov
xchg
int3
loopne
cmc
jns
pop
push
shl
les
inc
jne
xchg
or
leave
fnstsw
add
inc
push
aaa
push
or
xchg
sub
pop
ficompl
mov
fwait
dec
pushf
xchg
in
dec
or
mov
jno
sbb
mov
mov
scas
icebp
or
xchg
fiaddl
xchg
push
xor
lcall
or
lea
fdivrl
mov
mov
jnp
cwtl
imul
pop
xchg
dec
fists
mov
lret
jg
xchg
mov
rorl
int
cmp
lds
jb
cmpsb
mov
sbb
cmp
jns
mov
out
and
sub
js
lock
xorl
sarl
loope
idiv
pop
sbb
push
push
fcomip
insb
cmp
push
mov
cltd
lcall
aam
jmp
cmpsb
pop
lock
mov
dec
push
inc
outsl
mov
ja
add
push
cmpsb
cmp
and
nop
cmp
or
inc
addr16
in
call
pushw
test
cmp
dec
push
dec
repz
pop
add
gs
stos
or
scas
nop
ljmp
mov
out
dec
sahf
cwtl
xchg
cmp
test
mov
cwtl
sub
dec
test
adc
test
sbb
sbb
dec
cmp
jb
xchg
ljmp
int
icebp
les
sbb
or
cld
dec
sub
jbe
fcomi
dec
xor
and
pop
dec
mov
mov
lock
fisttpll
jp
ss
imul
add
jb
dec
mov
adc
pop
iret
jne
mov
push
mov
sahf
dec
pop
adcb
jo
daa
ja
pop
out
jbe
out
pop
loopne
sub
push
mov
cmpsb
out
cmc
push
or
jp
xor
out
fwait
test
lcall
aas
sub
add
jp
fs
bound
out
jmp
adcb
ljmp
lahf
in
push
pusha
movsb
rol
mov
es
jo,pn
adc
in
dec
inc
add
dec
pop
lret
int3
pop
lahf
into
data16
outsb
jo
adc
in
dec
xchg
fmuls
fsubl
mov
mov
inc
mov
xchg
sbb
push
loop
dec
outsb
push
push
sub
mov
dec
into
add
push
fimuls
out
pop
out
sbb
pop
paddd
push
bound
fs
dec
push
pop
fsubr
orb
test
push
xchg
push
mov
push
or
cs
xchg
faddl
dec
dec
lcall
mov
mov
jle
faddl
test
pop
stos
sahf
mov
mov
sbb
test
cmc
arpl
sub
and
es
sbb
das
les
popf
sub
or
sub
adc
and
mov
add
xchg
lcall
xchg
not
mov
or
adc
pop
xor
adc
dec
xchg
mov
dec
stos
popa
or
fidivs
push
or
sub
dec
mov
mov
mov
sub
js
fisttpll
repz
or
pop
or
sub
adc
sub
pusha
mov
and
push
mov
clc
dec
mov
into
lcall
mov
sbb
divl
mov
cmp
cmc
cmpsl
mov
push
pop
cmp
mov
mov
call
or
xlat
mov
test
xchg
dec
push
out
sbb
cld
push
testl
aaa
sbb
add
mov
sbb
scas
add
jmp
iret
testl
ss
inc
ja
jmp
xlat
xchg
iret
jmp
andb
mov
idiv
adc
out
stos
pop
cltd
test
call
ss
push
mov
jmp
jmp
ljmp
rolb
add
daa
sarb
inc
dec
xchg
mov
lcall
out
cmp
pop
popa
push
out
xor
jbe
stc
mov
call
fdivr
out
push
jg
sub
mov
push
mov
jle
push
mov
cs
dec
push
mov
inc
jmp
inc
jnp
mov
mov
into
xchg
mov
mov
inc
out
in
fbstp
scas
push
pop
cli
inc
lret
scas
dec
iret
mov
adc
mov
dec
xlat
test
ret
inc
dec
mov
call
cmp
lret
fimull
out
fcmovu
ret
dec
pop
mov
out
xchg
int
cmpsl
and
adc
out
xor
mov
mov
mov
cmp
xchg
pop
push
scas
or
lcall
xchg
mov
out
inc
sbb
pop
pop
inc
sbb
aaa
and
cli
jbe
and
iret
push
test
out
xchg
dec
fidivs
push
or
negl
xchg
xlat
push
add
inc
sahf
sbbb
fdivp
xchg
xchg
dec
mov
bound
fisubl
sbb
mov
bound
add
dec
jp
pop
push
out
push
xchg
cmpsl
call
jbe
ds
mov
sahf
pop
ds
mov
dec
cmpsb
pop
sahf
dec
pop
xchg
daa
out
dec
out
ficompl
mov
push
dec
das
mov
mov
jmp
daa
pop
sbb
mov
mov
inc
addb
ljmp
dec
ret
sub
add
xlat
push
xchg
xorb
dec
outsb
aas
jne
or
addb
mov
inc
dec
jb
lcall
incl
stos
dec
mov
dec
jmp
in
dec
xlat
shlb
cmpsl
push
inc
aas
call
jle
sti
mov
pop
sbb
aas
movb
into
pop
sbb
iret
fistps
add
data16
out
jmp
call
jp
aas
lcall
dec
jg
mov
pop
dec
cmpsb
iret
out
push
pop
dec
mul
pop
cmpsb
sub
out
pop
cmp
stos
loop
inc
out
sbb
pop
sbb
xlat
jp
sbb
scas
ss
and
sub
call
pop
push
xor
sbb
dec
push
mov
faddl
aaa
or
xchg
test
out
sbb
pop
fistps
cli
aaa
and
jmp
popl
pop
sbb
pcmpgtd
sbb
leave
jb
jmp
jmp
loopne
into
cmp
out
sahf
mov
popa
inc
jnp
mov
fcmovb
mov
jle
out
adc
cli
popl
mov
xor
mov
dec
loop
es
and
cmpsl
inc
mov
jg
loopne
push
pop
movsb
lea
pop
sbb
gs
mov
negl
push
or
loop
pop
cmp
sbb
popa
mov
ret
cmp
jae
ret
sub
out
negb
mov
insl
and
dec
xor
je
pop
inc
add
dec
ret
mov
mov
xor
sub
std
out
push
pop
lods
test
fstpt
repz
jae
dec
sbb
jmp
add
xorb
mov
push
xchg
xchg
insl
jne
icebp
clc
divl
shlb
jo
out
pop
mov
mov
dec
shl
xchg
add
jno
push
push
outsb
inc
aaa
sub
jge
mov
cmpsb
fsubl
mov
out
int3
push
mov
jl
int
insl
or
mov
inc
mov
mov
outsl
xlat
in
pop
dec
dec
push
sti
addl
mov
dec
pop
mov
movsb
pop
lret
jno
out
out
pcmpgtb
movsl
cmp
push
inc
flds
cmc
pushw
popfw
call
les
imul
call
les
pop
dec
int
pushf
or
adc
xchg
or
std
adc
xor
aad
fistpll
decb
pop
sbb
loope
loopne
mov
adc
mov
adc
mov
adc
dec
add
in
xchg
movsb
imull
pop
movl
ja
outsb
ss
lds
inc
inc
mov
and
jo
dec
xchg
pop
xor
aad
mov
sub
inc
inc
out
test
pop
pop
aas
mov
pushf
call
gs
adc
mov
mov
jnp
xor
jl
js
out
mov
outsb
out
jp
ds
sub
jo
sarb
and
fisttps
cmp
and
pop
fwait
insl
or
pop
and
test
scas
pushf
push
pushl
lea
jne
movzbw
movb
bswap
bswap
pushf
lahf
mov
call
sub
push
call
sub
cmp
jmp
test
or
call
xchg
pusha
push
mov
fiaddl
inc
lds
rep
outsb
push
scas
pushf
lret
dec
mov
lods
enter
push
xor
testl
mov
mov
inc
dec
sbb
aas
jno
ljmp
xchg
push
mov
into
pop
addr16
pushf
jge
pop
sarl
adc
fcoml
cmp
rorw
lods
mov
outsl
rcrl
mov
test
push
pop
xor
lahf
loope
cmp
mov
jp
and
add
jg
addr16
pusha
not
jmp
arpl
nop
addr16
push
xor
cli
sarl
pop
dec
lock
pop
notl
adc
jle
sbbl
cltd
xchg
iret
test
xor
call
jnp
cmp
sub
sub
movsl
movsl
lret
adc
jo
es
or
lret
jne
adc
cmp
icebp
int3
inc
popa
xor
adc
dec
clc
gs
dec
inc
inc
std
leave
xchg
stos
jb
dec
icebp
insb
mov
push
jo
stos
jp
xchg
aas
sub
out
xchg
xor
inc
jecxz
and
lea
inc
aam
addr16
fcos
fucomip
int3
mov
xchg
mov
cwtl
mov
fiadds
scas
mov
test
ss
push
ja
imul
jbe
adc
mov
jmp
scas
in
sub
iret
aaa
jbe
push
and
mov
shrl
stc
push
out
lea
pop
sahf
inc
push
mov
leave
pop
sbb
sub
xchg
xchg
push
mov
xor
or
test
lds
call
lea
jbe
not
sub
cmc
mov
cmp
shld
movsbw
mov
sub
add
not
bt
shr
pusha
rol
rcl
btr
mov
sbb
add
not
jmp
mov
add
add
loop
icebp
inc
outsb
push
mov
cli
loopne
push
xchg
mov
insl
dec
movsl
jge
pop
pop
cli
mov
call
jnp
cld
int
sub
jge
rorl
jecxz
push
sbb
iret
mov
dec
mov
int
xchg
dec
in
cmpsl
loop
pop
imul
and
lahf
xchg
xchg
icebp
push
lock
sbb
add
sbb
shl
mov
iret
adc
sub
inc
js
jecxz
push
push
lods
imul
es
sbb
pushaw
pop
or
and
movsl
mov
cli
fmulp
add
mov
push
movb
pop
inc
popf
fiaddl
mov
mov
or
fistps
and
pop
or
movb
call
cmc
test
jmp
movzbw
rcr
sar
xor
mov
jmp
hlt
loopne
gs
pop
jo
cmp
ljmp
mov
jo
mov
mov
xor
les
sub
daa
xchg
and
sub
xchg
stos
cltd
fs
xchg
xchg
or
stos
fs
xor
js
inc
out
scas
or
paddsb
xorb
call
pop
adc
sbb
pop
scas
jns
adc
adc
nop
dec
sbb
mov
xchg
mov
mov
lea
push
cmpsb
or
out
mov
mov
pop
stc
imulb
push
add
mov
call
and
and
sbbb
jg
sub
andb
mov
scas
jg
roll
mov
pop
push
mov
adc
and
push
dec
call
xchg
test
lcall
iret
push
inc
inc
es
lods
sbb
xor
loope
in
pop
test
shrb
loop
jno
sub
and
test
sub
inc
lds
lea
shrl
cwtl
dec
aad
mov
rcr
repnz
jl
movsb
dec
sub
dec
push
jns
or
adc
xchg
lret
es
stos
in
jmp
fiaddl
fidivrs
mov
dec
sub
pop
pop
mov
mov
jle
pop
mov
js
hlt
xor
imul
mov
mov
sub
mov
xchg
les
subb
nop
dec
inc
in
sahf
hlt
cwtl
push
xchg
testb
mov
mov
std
mov
or
or
ret
inc
jl
bt
bt
sub
push
jmp
jmp
lea
ja
pusha
pushl
lea
jb
clc
cmpb
pusha
lea
jne
dec
dec
shrd
mov
cmp
cmc
pushf
add
test
mov
bt
push
movzwl
ror
pusha
bt
bswap
mov
clc
stc
add
push
pushf
mov
bt
mov
test
pushf
lea
je
test
pushf
add
push
cmc
stc
pushl
cmp
pushf
pushf
mov
lea
jb
call
pop
pop
pop
bound
add
jno
addr16
push
nop
das
pusha
cmpsl
scas
mov
in
adc
inc
jmp
fs
xor
xchg
repz
fnstcw
push
dec
int
sub
sub
xor
mov
test
jecxz
ds
fidivrl
lods
mov
push
ret
cmp
insb
jecxz
sbb
cmp
adc
push
jns
push
insb
adc
nop
imul
andl
sub
popa
mov
sbb
dec
fistpl
push
jae
sti
push
aad
bound
add
test
dec
mov
sub
jge
xchg
rcl
and
divl
push
jb
lock
xor
dec
fldl
jb
mov
jmp
jns
fistps
mov
scas
mov
fcompl
hlt
cmp
pop
adc
roll
and
lds
das
inc
push
mov
mov
mov
jmp
sbb
pop
popa
es
mov
out
daa
int
pop
and
outsb
push
test
pusha
mov
in
sbb
push
addr16
test
movsb
rcrl
dec
lahf
test
movsl
into
sahf
int3
mov
std
outsl
pop
inc
stos
ficoml
adc
in
insb
mov
push
xchg
mov
sti
sub
sub
pop
lcall
push
push
mov
mov
hlt
dec
loop
hlt
popf
sti
pop
cmp
and
in
je
nop
dec
divb
cmp
fnsave
mov
mov
mov
mov
mov
jbe
lea
or
push
push
in
pop
jge
sub
test
mov
adc
ss
les
mov
rcl
je
and
xrelease
or
jge
or
jmp
jb
fldt
cli
xor
sub
pop
add
inc
and
and
and
xchg
xchg
pop
scas
jno
add
cmc
cmpsb
nop
mov
jle
cmp
jae
xchg
cmpl
addr16
es
or
shlb
mov
aam
sub
push
xor
mov
test
mov
pop
jmp
add
lock
mov
push
mov
psrld
movsl
adc
fwait
js
xchg
int
stos
and
addr16
mov
mov
mov
cli
cmp
add
inc
add
arpl
icebp
lds
cmpsl
cwtl
mov
jmp
push
or
xchg
add
bswap
pusha
not
mov
push
pushf
lea
jmp
mov
pusha
pushf
pushl
ret
jmp
push
pop
pop
pop
es
adc
popf
movsb
pop
subl
mov
pop
and
scas
cli
push
repz
inc
das
dec
mov
out
mov
and
das
ret
or
movsb
outsb
adc
lods
pop
jp
cwtl
test
sar
out
inc
jecxz
aas
pop
sbb
sti
in
jbe
call
push
sarb
stos
shrl
add
xor
out
cli
fsubrl
mov
sub
inc
ljmp
fmulp
pop
imul
imul
mov
mov
nop
xchg
push
aad
sti
decl
xchg
xchg
pop
es
repz
das
test
ds
xchg
jno
pop
push
jecxz
dec
adc
mov
scas
add
rcr
pop
mov
mov
in
xchg
inc
pop
push
lahf
ficompl
and
loop
adc
push
mov
negl
call
int
out
fucompp
in
pop
mov
push
mov
shrl
sbb
pop
and
inc
xchg
xchg
cwtl
mov
pop
jmp
lahf
add
dec
je
loope
sub
pop
jne
pop
xor
or
es
movsb
dec
repnz
sub
pop
cs
dec
shl
cld
jnp
jbe
icebp
jmp
sahf
sub
int
ljmp
sbb
cmpl
inc
push
icebp
insl
mov
orl
pop
mov
add
loop
fwait
repz
push
lret
insb
insl
pop
cmp
pop
pop
popf
cmpsb
lret
inc
dec
mov
out
cmp
xor
mov
loope
mov
movsb
jne
jo
push
push
add
out
dec
adc
pop
mov
jno
add
cltd
push
sub
rcll
xchg
mov
add
jae
cmp
mov
sbb
jb
js
dec
mov
icebp
mov
bound
rorl
xchg
push
xor
cmpsb
push
sub
lret
fwait
cmp
rcrl
xor
cmp
mov
xor
popf
xor
loopne
in
push
sbb
sbb
jg
mov
loop
pop
es
add
movsl
jl
push
inc
shlb
sbb
ss
dec
jmp
test
push
sbb
add
push
cmp
sbb
gs
and
dec
les
movsl
jg
mov
imul
cmp
sarb
fisubrl
das
enter
lea
jp
jbe
ror
add
sub
mov
bsr
and
shr
add
or
and
bsr
shld
mov
setl
ror
add
dec
movl
sub
rcl
and
mov
test
test
cmc
cmp
pusha
jmp
std
jae
pop
es
lods
imul
mov
lahf
cmp
sub
pop
int3
sbb
xor
lock
cmp
bsf
hlt
cmpsb
stc
mov
hlt
cmc
insl
pop
jns
daa
pop
inc
cmpsl
jp
push
int
nop
out
xlat
loop
into
and
mov
scas
mov
lahf
pop
and
adc
fstps
adc
movsl
std
cli
into
sub
out
ljmp
adc
mov
in
mov
xchg
pushf
mov
shlb
daa
xlat
jp
adc
cwtl
xchg
jbe
inc
mov
cmpsl
sbb
pusha
imul
pop
enter
int3
pushf
test
inc
push
shl
cld
in
ja
xchg
mov
cwtl
dec
sti
jp
mov
xchg
push
or
test
mov
jo
dec
xchg
mov
and
sub
adc
push
mov
and
or
push
aad
push
pop
dec
movzwl
push
call
lahf
ret
insb
pop
es
cmp
xor
sti
mov
mov
pop
mov
mov
inc
mov
insb
mov
inc
sbb
fwait
pop
out
dec
je
mov
push
cmp
test
outsb
jmp
pop
insl
pop
sbb
addr16
mov
arpl
pop
lret
pop
shrb
cmp
push
cmp
in
inc
cs
pop
jg
call
repz
call
pop
es
push
std
les
sahf
push
out
jb
dec
in
inc
fisubrl
jp
pop
lods
mov
jge
xchg
and
add
jns
lcall
mov
cmp
push
cmp
sub
and
mov
andl
jmp
mov
ss
add
cmpsl
jo
adc
cmc
push
pop
repnz
fisubl
mov
mov
int3
pop
fsubrs
jle
lcall
loopne
es
incl
repz
fnstenv
lods
cmpsb
sub
les
inc
push
adcb
pop
andb
pop
or
adc
call
lods
lcall
leave
pop
movsb
mov
lds
inc
and
inc
gs
jns
pop
es
push
inc
mov
decl
int
out
or
xor
or
jae
sub
mov
fdivrp
or
clc
movsb
test
mov
cld
jns
in
sbb
loopne
sbb
mov
inc
adc
jnp
int
sbb
sarb
rcrl
pop
push
pop
es
mov
mov
das
bnd
push
pop
lret
push
jnp
sbb
adc
leave
jg
aas
sub
xchg
sahf
sahf
into
dec
or
mov
loop
loopne
aas
notb
sub
lahf
xor
cmp
adc
test
cmpsl
mov
inc
cmp
jecxz
es
mov
roll
pop
sub
cmp
cmp
or
int3
mov
or
mov
addb
jbe
mov
add
lret
pop
push
inc
cmp
adc
cltd
inc
pop
push
scas
es
push
push
mov
fxam
insb
lods
sbb
and
in
and
scas
pop
repnz
push
or
outsl
cmp
push
or
pushf
insl
or
adc
mov
testb
pop
out
xor
test
inc
inc
adc
push
push
jbe
iret
pop
adc
out
mov
rorl
popa
add
test
and
mov
fs
jae
test
mov
xchg
mov
and
mov
inc
shr
shl
sar
mov
pusha
cmc
cmc
bt
sub
test
bt
repnz
movb
jmp
sub
xchg
pop
es
push
gs
mov
fidivrl
adc
dec
dec
dec
push
push
dec
ja
hlt
or
lods
dec
hlt
incl
and
cltd
push
lret
sbb
insl
inc
inc
mov
add
mov
or
jl
jge
mov
mov
adc
ja
cmp
negl
jecxz
fstpt
sahf
outsl
int
inc
sarb
aam
xchg
mov
or
push
adc
scas
sub
cmc
pushf
stc
neg
call
inc
xchg
ds
es
fwait
addr16
loop
mov
sahf
pop
jmp
sarl
lods
mov
popf
inc
mov
out
in
push
and
sbb
out
pop
or
xchg
es
dec
sarb
into
shlb
sahf
sbb
sub
in
call
lret
xchg
add
loope
and
test
out
sbb
mov
xchg
or
mov
adc
nop
iret
dec
or
dec
adc
xchg
sub
js
test
hlt
xchg
mov
pop
popa
xchg
pop
cmp
mov
cmpsl
mov
nop
cmpsb
fsubrl
adcb
sbbl
mov
aaa
das
aad
call
adc
mov
std
test
add
cmp
xchg
push
sub
add
stc
pushl
sub
dec
notb
or
push
xor
das
mov
pop
repz
xchg
sub
in
outsl
sub
push
es
jge
loop
aaa
adc
adc
nop
popa
mov
int
cmpsb
ds
sti
sbb
arpl
shlb
sbb
addr16
adcb
fimuls
fwait
or
cmp
xor
jecxz
aam
push
inc
stc
xor
inc
jg
dec
jle
call
sbb
inc
pop
and
and
stos
push
sbb
mov
inc
sbb
sbb
sbb
jbe
icebp
inc
cmpsb
xchg
xor
cmp
cli
icebp
or
les
inc
into
lret
dec
or
jb
clc
cmpb
push
pusha
jmp
push
mov
mov
mov
lea
jmp
clc
xor
push
es
pop
mov
insb
pop
sub
pop
bound
push
sub
dec
jne
test
std
sbb
and
cmpsl
aam
pop
jmp
ljmp
xor
mov
push
sbb
cmp
xchg
push
cmp
pop
jno
jno
test
sub
cmpsl
shrb
bsf
pushf
jecxz
or
out
add
mov
lret
popa
nop
xchg
sub
pop
adc
outsb
jo
mov
and
mov
adc
lea
jae
test
cmc
test
xor
pusha
jmp
pushf
lea
jne
pop
xchg
pop
pusha
pushf
pushf
mov
pushf
push
pushf
pushl
ret
int
xchg
push
es
dec
cli
insl
int
pop
sahf
or
add
lcall
push
mov
cmp
lea
dec
cmp
out
ret
xor
sub
in
mov
mov
push
xchg
push
cmpsb
add
pushf
xchg
shl
lock
ljmp
mov
shll
or
insl
jbe
mov
cli
mov
add
adc
insb
xchg
inc
popa
insl
jns
jb
stos
femms
mov
jne
fidivl
out
arpl
test
insl
dec
mov
insb
pop
mov
cmc
mov
cmpsl
mov
dec
popa
rorl
leave
and
sub
push
cmpsl
shl
cs
and
mov
sti
and
mov
aam
push
es
or
inc
sub
mov
xor
cld
addr16
mov
mov
inc
mov
mov
scas
ljmp
add
push
sub
cmp
adc
pop
xor
push
jmp
jbe
nop
push
es
ret
push
xor
stos
mov
lea
inc
add
lcall
popa
push
stos
fidivrs
je
rclb
cltd
push
out
push
sub
push
mov
jns
and
mov
ljmp
add
sub
das
cmp
inc
in
setns
and
fcoml
fnsave
es
mov
in
lret
and
ret
in
push
adc
out
lods
in
ss
ret
dec
sub
shlb
faddl
js
sbb
mov
iret
push
cwtl
add
rcll
dec
xchg
outsb
mov
pushf
sbb
and
aam
movsb
add
dec
jne
cmp
xor
imul
add
test
outsb
das
int
paddb
je
pop
or
xchg
xchg
adc
cmp
push
movq
addl
mov
push
pop
fisttpl
arpl
xlat
add
test
ja
and
inc
outsb
js
pop
jg
push
pop
pop
pop
push
es
mov
sbb
lret
clc
jne
sahf
push
ja
test
xchg
ljmp
xor
scas
pop
jb
jno
mov
add
bound
bound
es
sbb
push
and
lds
test
sar
pop
sahf
cmp
inc
in
out
add
mov
data16
dec
ret
out
ss
pop
fadd
jmp
pusha
pushf
movl
mov
movl
mov
pusha
mov
movb
lea
jmp
movb
lea
je
cmp
cmp
jmp
lea
jne
pushf
movl
call
add
dec
gs
popa
addr16
outsl
js
add
inc
and
inc
jae
add
inc
and
push
pushf
movw
pushl
ret
adc
push
es
mov
pop
outsl
xchg
data16
sub
mov
movsl
in
arpl
cmp
sub
xor
int
xchg
lahf
cmp
cmp
lea
cmp
decl
push
fbstp
rorb
add
stos
pushf
mov
je
push
das
das
add
jp
xchg
mov
enter
into
sti
pop
repz
xchg
push
loop
mull
or
loop
imul
es
clc
mov
shll
xchg
fs
or
popf
jle
jge
mov
jl
mov
lds
loope
arpl
dec
loope
xrelease
imul
cld
sub
or
sbb
fidivrs
ret
repz
rcrb
adc
mov
andb
ds
xor
adc
aas
cmp
xor
or
mov
inc
adc
test
xchg
inc
shr
out
cmovle
xor
pop
cmp
sub
test
cmc
jmp
mov
or
push
mov
rorl
pop
cld
movsbw
btc
sbb
sub
mov
btr
bts
or
shr
add
jge
mov
stc
clc
jmp
fcoms
mov
cmp
jno
out
inc
js
mov
jae
cmp
jne
cmp
arpl
cmp
pop
das
icebp
in
hlt
jns
pop
clc
pop
or
push
bound
sub
shlb
sub
mov
adc
ret
sbb
pusha
testb
int3
inc
stos
sbb
stos
mov
ss
out
stos
stos
enter
mov
fwait
mov
and
or
add
xchg
push
sub
inc
pminsw
mov
stos
outsb
pop
jno
cwtl
inc
lods
fwait
mull
mov
mov
repnz
adc
mov
xor
add
into
daa
sbb
sbb
outsb
push
ret
loope
jnp
sbb
repnz
test
mov
jl
push
xchg
rcll
push
insb
roll
lock
adc
pop
jge
cwtl
ret
lea
dec
es
add
mov
dec
repnz
xchg
out
push
adc
push
add
fisubs
mov
imul
or
inc
int
mov
mov
es
adc
xchg
sub
sub
imul
lcall
aam
stc
pop
dec
add
cli
push
xor
and
lret
cli
outsl
or
push
mov
cmpsb
mov
dec
sbb
testl
jno
jo
subl
cmp
inc
ds
outsb
loope
add
stc
mov
mov
push
or
pop
xchg
loope
in
int
pop
clc
inc
jno
jge
sub
add
repnz
mov
push
inc
cmpsl
inc
sbb
jge
sbb
dec
es
add
push
loope
sub
jg
mov
lcall
dec
and
subb
icebp
scas
jo
pop
cltd
bound
push
lods
sub
bound
or
pop
push
dec
mov
cmovno
cmp
es
push
jle
sbb
jmp
sub
xor
inc
cmpsb
insl
sub
je
push
out
stos
rorl
dec
sbb
adc
aaa
pop
jg
xor
je
ds
jp
mov
rorb
clc
jge
aas
mov
add
loopne
stc
add
mov
jmp
ret
xchg
cmp
add
add
pop
mov
fs
call
gs
xchg
cmp
test
roll
xor
add
mov
push
xchg
test
cmp
sarb
push
data16
das
cmp
mov
mov
push
xchg
inc
lret
lds
and
sarl
mov
or
in
ret
mov
inc
jecxz
jb
or
aam
dec
jo
jae
lock
setle
push
movl
push
mov
not
mov
setge
call
jg
test
es
mov
pop
mov
shrb
test
fidivrl
jo
dec
nop
sub
gs
sub
out
fidivrs
pop
lret
sbbl
adc
jmp
in
xchg
cmp
aad
add
pop
fadds
pop
xchg
dec
xchg
add
scas
xchg
sub
faddp
scas
cmp
loopne
ljmp
xchg
stos
cmp
daa
out
call
mov
pop
fcmovbe
cmp
mov
push
aad
pop
jno
cld
adc
loope
add
xchg
lahf
lea
or
hlt
das
and
test
xchg
and
jp
push
repnz
notl
sbb
lods
sub
call
out
int3
adcl
fisttpl
fstpl
jge
inc
mov
xchg
mov
mov
add
leave
mov
and
and
jb
push
cmp
mov
sbb
js
push
mov
lret
aad
jecxz
insb
popa
cmp
lea
call
call
ljmp
add
lods
xchg
add
fwait
push
test
imul
mov
jge
pop
roll
xor
subb
scas
lcall
sbb
adc
cmovnp
aaa
xlat
dec
jle
jge
sub
loope
incb
fs
out
js
inc
movsl
mov
dec
and
icebp
jge
mov
fimuls
or
push
adc
js
test
js
push
in
lods
adc
fwait
cmp
fsubp
cmpsb
leave
inc
cmp
mov
mov
cmpsl
jge
orl
pusha
mov
data16
lcall
cmp
xchg
pop
andl
jl
push
cmp
sti
cmpl
test
xor
adc
pop
xor
scas
and
sub
sbb
dec
adc
jns
ffree
out
mov
push
mov
mov
push
mov
mov
jge
and
cmp
stos
pusha
out
sub
dec
jo
mov
aam
lods
and
aaa
xchg
inc
pop
add
mov
rclb
dec
xor
incb
out
push
fs
in
add
icebp
out
loopne
push
pusha
push
dec
mov
mov
mov
pop
testl
xor
loopne
push
test
or
lds
mov
inc
jno
push
sub
js
xchg
repz
mov
stos
sub
add
add
mov
cmc
repz
cs
mov
pop
pop
jmp
addb
sbb
mov
mov
int3
dec
es
inc
mov
lcall
xchg
xchg
xor
stos
cwtl
jge
lock
push
mov
mov
fidivrs
xchg
jne
add
push
and
pusha
cmp
movsb
testl
push
jecxz
aad
lock
insb
int
cltd
enter
add
and
and
add
mov
pushf
aad
jle
xor
push
jge
scas
adc
mov
subb
ret
sar
fs
fs
loope
cmp
sti
mov
mov
icebp
inc
push
ret
xchg
loope
push
add
add
add
xchg
pusha
dec
lods
fwait
stos
dec
cmp
aas
adcb
aad
mov
xchg
add
mov
loope
mov
stos
daa
ficoml
pop
pop
test
add
fwait
dec
stc
movsl
push
sahf
cmp
out
jae
or
mov
jne
cvtps2pi
outsb
xchg
adc
lcall
icebp
in
aad
icebp
mov
and
sar
xor
pushf
orl
in
rol
call
mov
jmp
std
lea
ret
xchg
push
test
cmp
ljmp
jg
in
mov
arpl
loop
or
dec
es
es
mov
shlb
sub
cmc
popf
ret
ljmp
inc
mov
inc
scas
mov
ss
and
adc
pop
popa
insb
pushf
xchg
sub
jo
mov
sbb
stos
mov
push
cmp
js
outsb
mov
jb
lods
enter
pusha
and
add
jae
mov
pop
xor
orl
outsl
fwait
test
adc
mov
push
outsl
cmp
mov
movsl
lods
inc
imul
jg
ret
or
sahf
in
xor
push
pop
aam
rclb
jnp
sti
icebp
xchg
fnsave
stos
or
in
dec
es
out
jle
insl
push
loopne
mov
jg
lods
inc
in
add
std
cmc
out
mov
es
hlt
xchg
arpl
mov
out
shl
ret
ljmp
lcall
subb
cmp
data16
lds
pop
xchg
int3
cmc
lock
test
ret
mov
lcall
add
js
push
adc
ficoms
adc
jmp
movsl
sbb
mov
ljmp
sahf
sub
mov
dec
cmp
or
out
pop
mov
out
fs
jmp
cmp
addb
insl
call
xlat
sub
sbb
or
fdivrl
push
mov
addb
daa
and
aas
mov
pusha
cmpsl
insl
or
ja
mov
add
jl
inc
and
movl
adc
test
mov
jne
popf
std
roll
or
or
adc
jle
mov
inc
es
leave
mov
push
mov
cmp
push
xchg
cmp
shll
les
shlb
in
jnp
popa
mov
and
andb
movb
adc
pop
es
lods
out
imul
mov
mov
push
or
rol
lods
cmpsl
add
imul
or
mov
sbb
jg
mulb
cltd
jmp
data16
iret
adc
mov
stos
call
leave
fsubrl
xor
adc
int3
jae
or
addr16
loop
loope
rcll
pop
fwait
aaa
hlt
dec
push
pop
xor
sub
cmp
jg
and
fisttpll
dec
loop
out
arpl
out
mov
push
sar
cmp
or
cmp
push
sarl
in
add
inc
push
shufps
fs
repz
lea
jb
cmp
push
pusha
test
cmp
jmp
mull
inc
mov
stos
sbb
mov
js
out
test
xor
fisubs
fsubs
ljmp
mov
mov
outsl
popa
ror
xchg
sarb
int
and
fwait
jmp
sub
imul
mov
imul
inc
mov
dec
sarl
loope
add
or
push
test
lock
mov
xlat
sti
jne
loopne
es
fdiv
add
mov
call
pop
nop
in
mov
loopne
jmp
inc
mov
jg
and
imul
push
xchg
add
shll
xchg
inc
iret
inc
mov
mov
out
mov
xchg
mov
pop
add
xor
hlt
push
pop
movsb
loope
jnp
das
popf
add
jne
push
imulb
add
lea
jb
call
ror
stc
push
movl
add
call
add
add
movzbw
mov
call
imul
add
sarb
andl
jns
sbb
push
jbe
mov
xchg
adc
inc
pop
int
adcb
or
rcrl
sbb
insb
sarb
mov
push
cmp
test
sti
push
mov
jmp
xor
js
and
dec
xor
inc
je
adc
lcall
loopne
fisubrs
popa
mov
cli
dec
andb
stc
fsubs
and
orb
xor
test
es
xor
ss
js
jmp
jge
cld
rcr
ret
es
jno
sub
cmpsb
xor
cmp
jo
popl
pop
hlt
ja
loope
lahf
jo
jb
dec
xchg
cmp
addb
out
loope
inc
out
loop
mov
push
pop
sahf
xchg
cmp
test
addr16
inc
roll
in
push
cmp
dec
dec
lahf
movsb
mov
and
mov
bound
dec
add
adc
ljmp
or
aaa
lods
iret
outsl
inc
test
xor
add
mov
repnz
in
test
mov
pop
jp
jo
mov
inc
es
iret
sub
mov
jnp
data16
test
xchg
fistps
jbe
movlps
lods
mov
frstor
les
pop
inc
jb,pn
leave
jg
clc
std
inc
int3
std
push
enter
sbb
stos
call
xchg
mov
and
xor
cmpsl
in
xchg
cmp
mov
outsl
ret
std
aad
jnp
loop
inc
jge
push
push
mov
mov
cmp
test
in
xor
sbb
add
xchg
movsl
into
clc
fdivrs
cmp
addr16
sbb
pop
sub
jp
jae
jns
and
sbb
sbb
out
mov
or
pop
aam
pushf
cmp
cmpsl
sbb
into
sub
sbb
sarb
mov
inc
jb
je
sub
and
xchg
mov
es
mov
sub
icebp
shll
ja
pusha
inc
sbb
into
outsl
dec
jno
jbe
andl
or
dec
adc
xchg
add
imul
fmuls
fmull
push
push
loop
mov
cmp
cltd
mov
outsl
sub
outsl
psllq
les
dec
insb
into
in
and
xchg
hlt
scas
sbb
push
test
fwait
and
pop
clc
ds
lods
scas
sti
pop
jnp
push
mov
fldcw
bound
ljmp
inc
es
testb
xor
es
nop
and
push
add
xor
gs
sbb
test
add
fisttpll
aam
icebp
fdivrp
test
dec
pop
pop
lahf
mov
push
dec
xor
sub
push
aas
aad
pop
mov
fsts
sub
adc
inc
lea
mov
cmpsb
int
leave
loopne
out
cmp
push
push
imull
test
scas
push
pop
insb
pop
add
fcmovnu
inc
es
cmp
cmp
stc
inc
lea
aad
jno
rorb
jmp
push
add
push
xchg
xchg
loopne
jl
mov
and
idivb
inc
push
imul
push
daa
mov
sub
gs
sub
jae
iret
cltd
mov
test
add
jp
outsb
xchg
mov
add
lea
fidivl
in
cmp
test
mov
mov
es
cmpsl
lahf
mov
xchg
fimuls
xchg
cmp
jl
xchg
inc
outsb
std
add
mov
jle
testb
mov
aas
pop
arpl
add
shlb
xchg
fs
loopne
xchg
mov
int3
adc
das
sub
iret
mov
mov
int
add
stos
add
jae
addr16
mov
mov
jae
fists
stc
call
pop
mov
adcl
cmp
sbb
int
push
aas
into
icebp
lcall
jp
int
push
fbstp
movsl
aaa
mov
ljmp
dec
inc
repnz
fcomip
rcr
fs
jae
stc
cmc
cmp
pushf
cmp
movb
call
cmp
jmp
lea
jmp
bnd
aas
es
loop
imul
add
xchg
fisttpl
fwait
cmp
sub
inc
pop
mov
and
xchg
stos
imull
xchg
popf
xor
or
jp
cmp
pcmpeqd
inc
idiv
push
sbb
add
add
or
xlat
das
add
adc
sar
lods
mov
cmpsl
or
mov
out
in
mov
jno
add
into
pop
les
pop
inc
rol
es
push
stc
mov
or
fwait
popf
mov
ds
push
subb
dec
data16
mov
insl
stc
pop
imulb
lea
divl
loope
scas
aam
mov
jb
sub
int
out
rcrl
inc
decl
hlt
xor
xchg
in
daa
add
dec
arpl
push
leave
jmp
fwait
sub
mov
shlb
aaa
mov
orb
ds
cmpsl
push
cmp
cmp
jne
jo
dec
xadd
mov
sti
jnp
ret
outsb
pop
mov
stos
sbb
jnp
cli
or
push
mov
push
sub
in
cld
xchg
mov
mulb
xchg
dec
pop
popw
cld
das
insl
push
or
mov
jae
jecxz
mov
js
cmp
fists
repz
and
rcrl
mov
nop
icebp
push
sub
ss
imul
jmp
stc
testb
and
xor
inc
and
aas
lds
pushl
lea
jmp
pushf
call
jge
fidivrs
es
or
repz
daa
add
mov
xchg
mull
or
cmp
mov
test
xchg
stos
cli
xlat
sbb
pop
jp
pushf
lock
jecxz
dec
lods
adc
mov
test
lea
sub
add
xchg
daa
xchg
pop
cmp
jne
sbb
in
fsubrs
sbb
dec
jle
sbb
push
sub
jle
xchg
popa
outsb
sahf
ret
xchg
jmp
pop
sbb
sub
xchg
mov
and
push
hlt
cmc
add
xchg
hlt
adc
cmpb
xor
sub
mov
imulb
ja
cmp
aad
add
sub
xchg
in
mov
sub
vcvttpd2dqx
xchg
nop
xor
int
inc
aas
cmpsb
jge
pop
nop
push
decl
fsubl
rcrb
xchg
pushf
out
ljmp
aaa
mov
mov
shrd
dec
dec
mov
pop
xor
lahf
mov
movsl
add
jbe
das
jl
mov
add
jp
imul
add
xchg
mov
add
pop
xchg
std
imull
and
mov
fimuls
lods
jle
mov
mov
dec
cwtl
gs
stos
je
into
inc
loopne
out
lods
jno
mov
dec
mov
mov
fucomp
and
xor
das
icebp
add
popa
xchg
ficompl
test
sub
popa
sbb
out
das
js
insb
mov
adc
jns
mov
test
push
repz
andb
neg
add
cmp
mov
jmp
pusha
jmp
movl
call
mov
movsbw
pusha
mov
lea
btc
neg
mov
test
test
xor
pushf
pushf
test
pushl
repnz
mov
call
rcl
imul
cltd
js
out
mov
xor
arpl
negl
lea
jge
pop
add
xchg
js
push
cmp
mov
shlb
fs
out
sub
pop
jbe
das
jg
pop
shl
cli
dec
jg
jae
pop
cmp
in
fistps
pusha
mov
and
mov
mov
jo
inc
aad
push
mov
adc
jl
rorb
mov
pop
movsb
mov
test
sub
cmp
cmp
adc
jmp
add
and
mov
dec
stc
jmp
call
clc
add
pusha
pushf
lea
jmp
lea
je
push
mov
add
cmc
cmp
pushf
jmp
jbe
jb
imul
add
mov
cs
cmp
adc
jmp
dec
cmp
mov
pop
mov
into
or
mov
xadd
lock
insl
ret
cmp
cmp
and
cltd
pop
stc
adc
std
mov
stc
aaa
out
sub
fistpl
pop
ficompl
int3
in
and
imul
mov
and
cmp
xchg
push
stos
cmp
test
and
pushf
movl
mov
mov
call
push
pusha
not
mov
pushf
lea
call
push
adc
pusha
jmp
add
dec
insl
popa
addr16
imul
add
xchg
cmp
add
mov
dec
jb
stos
fiaddl
lods
cmc
and
ljmp
pop
push
les
mov
cwtl
mov
dec
int
mov
cld
ffreep
push
aaa
cmp
mov
rol
mov
jmp
sbb
mov
mov
aaa
lock
out
dec
or
lods
cli
shll
cltd
faddl
and
icebp
and
mov
cmp
add
lods
test
test
push
stos
repz
cltd
push
scas
stos
shl
jnp
cld
aas
imul
jle
xor
pop
sbb
iret
jg
fbld
add
cmp
xchg
lods
dec
mov
xchg
pushf
mov
imul
testb
cli
mov
xchg
jno
das
into
movsb
dec
insl
pop
clc
adc
dec
inc
push
mov
push
push
outsl
sbb
cmp
add
ljmp
xchg
jp
in
add
cmc
insb
test
imul
or
orl
in
mov
imul
push
fcoms
mov
mov
jnp
stos
dec
mov
test
stos
cli
scas
mov
arpl
cmpsl
std
stos
jbe
xchg
add
icebp
xchg
mov
push
push
les
mov
cmp
sub
push
clc
rol
push
neg
test
push
cmp
bswap
lahf
not
lahf
lea
jmp
pusha
add
pushl
movb
push
lea
jmp
inc
call
movl
pushf
pushl
popl
push
pushl
ret
mov
dec
dec
enter
enter
nop
adc
mov
nop
mov
dec
int3
mov
or
mov
nop
enter
or
mov
into
iret
dec
mov
mov
int
sarl
enter
add
data16
or
arpl
inc
inc
jns
mov
cmp
pop
mov
jnp
cli
paddw
adc
mov
cmp
adc
xchg
sahf
xor
jns
imul
xchg
int3
mov
jbe
dec
sub
pop
dec
shl
or
hlt
and
js
sbb
mov
int3
sbb
pusha
out
mov
fcos
lea
aas
out
mov
and
data16
add
movb
mov
pushf
pushf
mov
movw
pushl
ret
xor
xor
es
mov
stos
stc
cs
cmpsb
out
inc
inc
mov
push
ja
mov
push
popa
fs
adc
cmc
jp
push
shr
mov
daa
cwtl
pop
roll
add
subb
mov
pop
aam
in
mov
fildll
pop
jnp
jns
in
sahf
or
xchg
mov
ret
out
adc
pop
ret
imul
jo
popa
mov
mov
out
enter
stc
dec
jns
fs
jb
clc
call
adcl
out
pop
mov
adc
push
adcl
inc
inc
das
mov
cmp
push
cmpl
test
xchg
test
jmp
push
outsl
xchg
cmp
cmc
push
inc
cmp
aam
push
mov
mov
push
dec
call
lcall
addr16
and
or
lea
jns
cmp
movsbw
jne
lea
not
pop
pushf
call
inc
stc
call
push
push
adc
es
xchg
fs
ja
ljmp
push
jmp
pusha
mov
xorb
repnz
mov
push
sahf
cmp
xchg
loop
stos
mov
or
fldt
jmp
arpl
rolb
ficomps
cmpl
call
paddusw
push
loopne
ret
add
lcall
push
negl
addr16
pop
jle
imul
gs
mull
or
push
lock
mov
mov
cmp
mov
loope
je
mov
fs
jb
push
push
movb
bt
cmp
pushl
pushl
lea
jae
jmp
add
dec
outsl
arpl
inc
jb
gs
sub
test
jno
jbe
jmp
movsb
push
bound
add
mov
mov
in
shrb
idivl
inc
mov
jecxz
add
ljmp
pushf
add
aas
cs
aaa
dec
jecxz
and
fistps
lds
jne
imul
pusha
std
pushl
mov
push
cmpl
add
je
cs
xchg
mov
sub
rolb
pop
inc
add
push
out
fbld
pop
push
nop
mov
pop
fbld
add
adc
gs
aas
dec
mov
jmp
aad
in
mov
or
ror
hlt
push
cmp
insl
dec
inc
bound
stos
push
jne
and
cmp
test
pop
and
jo
dec
cld
test
or
cs
sbb
mov
fisubs
sbb
jo
dec
sbb
repz
dec
sub
pop
adc
lods
call
ljmp
xor
add
jl
scas
inc
insl
pop
test
cmpsl
lods
scas
je
out
cltd
incl
pop
dec
or
jne
mov
in
add
loop
add
cmp
jb
lods
xor
mov
hlt
and
xor
outsb
pop
out
test
daa
aaa
sub
jbe
adcl
jne
adcl
fisttps
mov
int
xor
mov
rcrb
xor
push
nop
sbb
jecxz
jo
xchg
push
or
jge
in
ret
les
xchg
aad
mov
adc
pop
std
jg
stc
xchg
pop
mov
pop
mov
inc
and
hlt
fstl
add
mov
lahf
or
pusha
inc
jns
in
mov
dec
sar
int3
dec
inc
int3
idivb
or
sub
out
into
mov
cmp
add
push
xor
jnp
and
push
pop
test
mov
xor
jb
popf
jecxz
xchg
pushf
pop
ljmp
mov
outsb
xchg
pop
rcrl
pushf
cmpsl
dec
sbb
int
in
popf
inc
cmp
std
test
mov
lock
cli
and
out
cmc
lcall
mov
inc
out
push
xor
stos
sete
test
adc
adc
lods
mov
jmp
jo
mov
jge
cmp
fbld
stos
call
sub
add
xor
bound
cmp
cmp
add
inc
movsb
insl
lods
ret
cmp
andb
inc
mov
jge
cmc
rol
call
inc
mov
xor
add
or
test
dec
outsl
and
loop
lahf
adc
dec
fdivrl
xchg
int3
mov
adc
jmp
jnp
lock
repz
fsubl
outsl
cmp
xchg
lods
dec
nop
in
fistpl
sub
bound
mov
cmp
shll
nop
push
dec
movsl
xchg
dec
or
pop
loopne
sub
adc
data16
in
xchg
sti
cmp
mov
hlt
sub
cltd
add
out
fsubl
fistpll
shrb
repnz
fdivl
repz
mov
dec
jl
cwtl
jg
jbe
xor
imul
add
les
inc
add
mov
cmp
sbb
mov
test
nop
inc
movsb
ja
shlb
popf
cmpsb
mov
das
push
gs
xorl
xor
dec
pop
cmpsb
aad
sub
stos
cmp
mov
cmpsb
aam
inc
jmp
pusha
xchg
cmp
mov
xchg
mov
inc
push
xchg
jmp
hlt
add
fildl
push
notb
and
enter
fs
cmpsb
mov
gs
sahf
andl
pop
mull
cs
ljmp
push
xor
dec
jecxz
incl
add
fwait
adc
xor
lods
ror
imul
jo
mov
das
inc
nop
test
popa
fistpll
inc
and
in
mov
or
fisubrl
mov
call
stc
dec
fidivs
es
mov
sti
into
imul
sti
rclb
inc
adc
dec
xchg
jnp
adc
movsb
sbb
das
sub
push
push
dec
jnp
sti
push
or
dec
jo
xchg
or
loope
rol
in
or
adc
dec
divl
pop
adc
sbb
jae
mov
cld
xchg
scas
mov
push
mov
rcrb
adc
xor
cwtl
xchg
sub
test
bt
cmp
cwtl
setl
movsbl
call
or
or
es
pop
jno
and
mov
fisttps
cs
pop
inc
mov
loop
push
neg
mov
sbb
cmp
xchg
cmp
adc
cmp
add
aad
jns
inc
test
sti
ljmp
or
pop
xor
cmpsb
filds
cmc
mov
icebp
lds
sub
cld
push
and
je
leave
xchg
xor
add
les
jnp
popa
inc
mov
and
mov
mov
clc
adc
sbb
dec
lods
pop
jo
dec
mov
nop
adc
or
mov
frstor
stc
xor
cmpsb
shlb
icebp
movsb
repnz
lret
test
sub
push
hlt
iret
push
mov
xor
mov
arpl
test
rclb
imul
mov
test
mov
lea
je
pushf
pushf
stc
add
pusha
cmp
push
push
pushf
lea
jb
cmc
clc
cmp
pushf
push
lea
jmp
pushf
call
clc
sub
stc
call
call
mov
pusha
not
pusha
mov
push
pop
movzbw
xchg
mov
not
mov
mov
pushl
ret
pushf
pusha
call
xor
adc
popa
or
fildll
inc
cmp
cld
cltd
icebp
adc
mov
test
or
stos
js
into
fadd
jl
scas
pop
xor
jnp
sti
pusha
leave
call
addr16
popa
sti
test
ret
pop
arpl
cld
adc
or
jmp
mov
jbe
ds
scas
pusha
shlb
inc
pop
fwait
inc
push
jo
xchg
inc
jle
cld
sbb
xor
xlat
fs
cwtl
call
dec
jb
inc
pushl
movl
pushf
movl
push
pusha
mov
lea
jmp
pop
pushf
jmp
lea
jne
sar
shld
mov
stc
not
sub
shl
bsr
bswap
and
mov
stc
sub
pushf
mov
clc
stc
pushl
popl
jmp
movl
movb
pushl
movb
push
lea
jmp
xchg
cs
jg
pusha
add
pop
aam
clc
sti
sbb
ret
dec
push
add
mov
cmp
in
jae
mov
jno
out
pop
inc
out
pop
xchg
test
ds
pop
push
outsb
push
shlb
mov
push
daa
lret
test
xlat
pop
stos
inc
sub
jns
pop
jl
lock
lea
iret
fs
pop
sarl
inc
test
xchg
xchg
add
xorb
test
dec
mov
into
insl
cld
mov
push
sub
sbb
aas
lds
inc
dec
pop
pop
in
int
cmp
gs
cmc
push
fstpl
pop
mov
out
mov
add
scas
fs
inc
inc
std
sbb
jg
ror
inc
xor
add
loope
cmp
xor
push
jae
cmp
fdivl
inc
test
inc
xchg
stc
push
into
loopne
add
jae
fldl
pushl
popl
pusha
cmp
jmp
pusha
lea
jnp
push
movl
pusha
jmp
leave
pop
pop
sub
add
adc
in
lcall
push
in
pop
sbb
pop
inc
fidivrs
fiadds
call
jb
aaa
in
pop
mov
aad
mov
push
ja
in
jg
cmpsb
jnp
popf
fisubrl
push
cltd
lds
cli
call
shrb
push
pop
cmp
out
pusha
dec
enter
dec
jecxz
out
cs
cmc
cmpsb
cmpsl
lret
cmp
push
mov
shrl
add
arpl
mov
jno
inc
mov
add
test
repnz
inc
adc
jns
or
pop
cmp
loopne
jb
faddp
pop
add
mov
dec
mov
ljmp
std
cmc
and
cmpsl
push
jns,pn
mov
add
fs
test
cmc
xchg
das
imul
jbe
adc
mov
ds
cmp
aaa
jmp
xchg
push
ret
clc
mov
lds
pop
sbb
jmp
xor
sub
fsubrs
lret
sbb
ret
push
xchg
mov
push
xor
push
mov
xor
mov
and
xor
fwait
sub
add
in
fistpll
mov
mov
xchg
mov
aas
xor
aaa
out
pop
xor
cmpb
and
and
add
fidivs
mov
js
mov
in
xor
pop
and
arpl
gs
mov
or
insl
cmp
xchg
arpl
lock
xchg
ret
push
pop
pop
out
mov
aam
scas
jg
adc
inc
lret
aad
lds
jp
aam
mov
and
or
scas
test
fistps
ljmp
arpl
mov
sbb
daa
mov
push
cmp
fs
lea
and
mov
insl
adc
orl
add
mov
or
push
cmpsb
mov
mov
movsl
xor
mov
ljmp
je
mov
mov
lds
cmp
in
xchg
cmpsl
and
negl
push
mul
and
mov
sbb
outsl
fmull
cmp
cmpsb
fbld
push
jbe
daa
jge
jno
sub
test
dec
xor
dec
jecxz
jbe
orps
mov
nop
stos
cmpsb
mov
movsb
add
lahf
cmp
dec
insb
sub
mov
jnp
dec
cmp
inc
cmp
outsb
cmp
mov
ret
mov
rep
mov
mov
mov
ss
fmul
into
sti
xchg
push
in
add
clc
es
ss
ret
push
pop
sbb
jbe
mov
dec
test
or
data16
leave
cmp
cmp
pop
div
pop
push
lret
repnz
cmp
lret
ljmp
pop
mov
mov
mov
and
rclb
aam
add
mov
out
aas
add
pop
mov
lods
inc
cmp
call
ret
sbbb
sub
lret
mov
and
lcall
inc
push
xor
or
movsl
shrl
ds
js
ret
push
fistl
jns
lahf
scas
xchg
fsubl
and
js,pn
push
push
jg
mov
and
lods
mov
jns
dec
inc
fwait
test
pop
xlat
das
test
sahf
pop
xor
rol
test
push
jle
cmp
mov
lret
ds
mov
inc
lret
sahf
sub
hlt
aas
mov
or
jp
lret
sub
ja
mov
add
rolb
dec
and
das
mov
inc
jbe
clc
bound
fs
aaa
test
jb
pop
sahf
lcall
sbb
dec
and
push
ja
rcll
cmp
mov
pop
mov
pop
aad
cmp
mov
jp
jecxz
push
mov
fdivs
push
ds
dec
push
out
stos
cmp
rolb
repnz
xchg
xchg
call
mov
out
cwtl
push
push
jae
roll
cmp
cs
clc
std
and
or
fldcw
xlat
or
ret
and
push
push
push
iret
xor
xor
adc
xor
fildll
insb
ficoms
pop
mov
pop
inc
jmp
loopne
jne
ds
dec
push
fnstcw
aas
push
iret
add
loope
add
inc
popf
inc
push
sti
outsl
jmp
mov
iret
push
div
sub
outsl
dec
or
pop
mov
and
ret
sbb
cmp
andl
mov
jae
mov
xor
mov
inc
movb
sbb
jle
cli
push
sub
movl
hlt
xlat
out
fiaddl
jle
cli
int
loop
rcl
inc
push
outsl
push
addl
ffreep
push
ss
add
add
sub
push
mov
sub
pop
xlat
push
dec
stos
sbb
testb
pop
jmp
or
shrl
and
les
stc
add
sbb
sub
cli
jmp
pop
ja
xlat
pushw
scas
mov
js
cmp
rorb
adc
pop
popa
jmp
jmp
push
movsb
push
neg
push
shrb
sbb
lcall
fcomps
js
sbb
mov
push
out
sub
cli
ds
stc
and
test
movb
in
scas
jp
sbbb
push
into
xor
cld
pop
dec
lahf
pop
aaa
rclb
pop
popa
push
arpl
xchg
ffreep
sbbl
fstl
cmpsb
cmp
idivl
repnz
jle
icebp
dec
cmp
out
ljmp
mov
lods
inc
push
dec
push
adc
xorl
sub
or
sbb
scas
mov
add
cmp
inc
mov
push
and
pop
pop
mov
ss
push
cmp
call
ljmp
scas
mov
xchg
fildll
out
add
add
out
jb
aaa
in
jle
cld
dec
add
adc
cli
imul
or
leave
xchg
ret
testb
out
pop
in
sub
mov
inc
fiaddl
es
sahf
cld
imul
subb
dec
pop
cli
adc
push
push
sub
jge
repnz
sbb
arpl
lret
fcomp
out
ss
aam
int
dec
cmp
aaa
pop
lret
ret
into
insb
enter
push
push
iret
push
push
jo
fiaddl
jmp
cli
sti
jb
push
dec
lock
mov
mov
cli
xchg
mov
fcoml
add
out
out
xchg
js
sahf
sbb
std
and
lea
fisubrl
add
dec
stc
jp
idiv
cltd
push
adc
shrl
ret
jecxz
daa
or
aaa
push
jo
add
idiv
cli
xlat
ss
outsb
fadds
xlat
dec
xchg
fdivrl
sbbl
out
push
rcrb
xchg
outsb
scas
xchg
mov
push
and
jg
mov
dec
mov
mov
dec
xchg
pop
fisttpll
mov
inc
adc
jne
cmp
pop
add
clc
fcomps
and
pusha
jne
pop
jmp
xor
xor
or
test
repnz
push
cli
sbb
add
in
sbb
lods
cmp
pop
push
shlb
xor
cs
dec
out
add
pop
jp
fmuls
outsb
xlat
fcmovnb
adc
adc
sub
sbb
jmp
and
into
std
movsb
cmp
int3
add
inc
sbb
cmc
cmp
lea
and
movsl
int
sti
sub
and
push
clc
or
fsqrt
aad
sub
cmp
sbb
and
sbb
sbb
push
scas
sub
scas
test
rcrb
mov
inc
lods
jp
cmpsb
lret
outsb
ficomps
mov
cwtl
test
rclb
jmp
ret
mov
ret
into
cmp
rcrl
sub
jp
sub
push
das
enter
mov
add
or
lcall
pop
das
fbstp
rol
mov
clc
bt
jmp
cmc
test
pushl
pusha
stc
jmp
pusha
lea
je
cmp
bt
clc
call
pop
loopne
es
insl
inc
push
pop
mov
xchg
out
inc
push
stos
push
add
aam
repnz
cmpsb
lods
add
cmc
lods
mov
pop
and
mov
or
loopne
sub
movsl
push
xor
in
jge
mov
movsb
dec
sbb
xor
pusha
lcall
imul
fistps
or
mov
and
inc
in
imul
pop
push
je
inc
cmp
inc
jne
jmp
test
loop
cld
mov
xor
jns
cwtl
and
add
push
jge
movsl
pop
imul
or
adc
adc
cmp
mov
je
mov
je
jmp
ror
xor
mov
xchg
inc
push
shlb
cmp
cmpsl
xchg
pop
mov
test
jnp
out
insb
jns
cmp
ret
test
cmc
lock
and
pop
ss
jmp
cmc
cmp
sub
xchg
and
add
pop
ljmp
nop
jne
mov
sub
mov
pop
int
cmp
in
sub
sub
and
inc
arpl
test
loopne
outsl
mov
sub
popa
jle
bt
in
mov
rcl
ret
jbe
daa
in
sub
movsl
flds
out
dec
sub
lcall
mov
jmp
or
jge
popf
and
mov
pop
cwtl
sub
lods
sbb
outsl
dec
in
push
sbb
fiaddl
jg
mov
push
lea
jmp
movl
pusha
jmp
movl
jmp
lea
jae
push
jmp
lods
cmc
bt
xor
clc
push
ror
call
jmp
sbb
or
es
sub
bound
xlat
jle
scas
inc
jle
pusha
ljmp
pop
rcrl
aas
sub
mov
and
scas
sub
in
hlt
lahf
cmp
cwtl
jnp
lcall
insl
xor
inc
sub
ljmp
movsb
vmovddup
jnp
and
aas
sbb
pop
cmpsb
mov
lret
add
and
cwtl
pop
ja
and
enter
push
pop
sbbb
and
add
push
jnp
sub
out
ss
in
push
pop
ljmp
sbb
ljmp
test
push
jle
sbb
push
out
cmpsb
mov
jbe
icebp
aaa
dec
xor
cmp
xchg
adc
cmp
scas
dec
fdivrp
outsl
pop
cmp
clc
jecxz
or
pop
or
popf
xor
ret
xlat
cmp
jne
jg
cmp
call
and
add
sbb
jnp
fcmovnbe
inc
inc
pushf
std
add
cmp
cmp
sahf
mov
sub
xor
inc
push
out
sub
xchg
jp
sti
sbb
jnp
aam
pusha
ljmp
or
icebp
xchg
sub
int
push
test
or
cmp
aaa
mov
sbb
les
incb
popf
outsl
sbb
and
push
jae
mov
add
add
lea
jnp
push
mov
pushf
lods
bt
pusha
xor
cmc
push
ror
call
jmp
pushf
push
lea
jae
clc
clc
bt
stc
xor
pushf
call
pop
nop
cmp
jb
sti
ret
jnp
sub
popf
daa
call
nop
paddq
xchg
xlat
out
mov
or
jno
jno
sbb
add
mov
mov
cmc
imulb
xchg
xchg
outsb
add
or
or
xor
mov
inc
jmp
sbb
add
mov
ret
mov
pop
in
mov
inc
repnz
movl
pusha
mov
lea
jmp
push
sbb
xor
or
add
cmp
inc
or
cmpsl
nop
dec
sub
out
pop
cmpb
inc
add
sub
mov
lea
mull
sub
std
mov
pop
loope
cmp
hlt
jo
xor
test
sub
lods
movsl
inc
pop
sti
or
inc
sbb
repnz
jmp
rolb
dec
cmc
dec
mov
inc
push
lea
inc
ljmp
xchg
jge
mov
out
pop
loop
inc
add
mov
pusha
lea
jb
cmp
cmp
call
mov
push
push
es
sub
or
loopne
and
inc
pop
lahf
sbb
jo
lods
jne
dec
loope
aaa
sbb
jl
lea
fwait
loopne
pop
test
add
out
push
data16
cmp
imul
ljmp
xor
and
xor
shlb
loope
stos
cld
mov
inc
sub
fwait
add
ja
fsubl
dec
fsubr
lahf
pop
xchg
ds
add
xchg
fbld
jecxz
xor
and
roll
rorl
lret
testl
bsf
sub
mov
mov
add
sbb
movl
call
pusha
call
pushf
pushf
stos
push
lea
jmp
inc
mov
pusha
call
xor
out
sbb
add
adc
cmpb
xchg
push
pop
push
push
add
inc
mov
daa
repnz
fidivrl
icebp
push
xchg
aaa
popa
aaa
and
imul
dec
loop
and
rcll
mov
mov
mov
sbb
ret
loope
clc
add
test
in
in
lret
mulb
ss
mov
sbb
lock
ja
xchg
push
dec
xchg
js
jle
clc
dec
add
jne
sub
pop
sbb
cmp
and
out
and
lcall
and
mov
push
xor
lods
stos
xchg
dec
loop
xor
xor
int
jo
xchg
subb
sti
and
insl
xchg
clc
jge
sbb
add
test
pop
pop
mov
mov
adc
xor
in
int
pop
cwtl
push
cmpsb
dec
and
lods
pop
repnz
aad
rcrl
out
or
addr16
rdmsr
in
insl
lods
inc
adc
mov
mov
scas
xlat
fstl
hlt
inc
pop
mov
repz
stos
incl
negl
lahf
lods
lea
movsl
cwtl
dec
pop
adc
ja
add
xor
mov
loope
or
pcmpgtd
adc
nop
inc
out
jns
adc
push
pop
sub
mov
stos
add
jb
dec
push
cmp
and
push
fnsave
sub
adc
lcall
aam
ja
sbb
lea
inc
xchg
sbb
add
cmp
aam
inc
pop
or
mov
das
cmp
repnz
es
lahf
hlt
adc
daa
rorb
mov
test
ds
or
jne
add
lahf
in
cmpl
aaa
testl
fistps
imul
pop
stos
iret
cmp
push
add
sub
stc
xchg
fwait
push
sbb
movl
mov
jle
push
inc
fsubr
lcall
ss
push
mov
dec
jnp
xor
sub
sub
popf
popf
jns
mov
cmpsl
aad
and
cmpsl
jo
cmp
cmp
inc
cmp
aam
xchg
mov
out
int3
es
subb
adc
mov
add
sbb
out
inc
push
cmp
and
sbb
push
cmpsl
push
cmpb
sbb
dec
fidivrl
mov
enter
movsl
xchg
pop
outsl
insb
xor
cs
insb
add
jnp
sbb
add
or
mov
in
sbb
test
inc
je
out
mov
xor
inc
mov
jns
in
and
iret
cld
dec
popf
inc
mov
push
mov
clc
mov
std
or
mov
ljmp
jnp
nop
test
es
addb
jns
fs
sub
rorb
jae
popa
dec
stos
clc
scas
push
daa
xchg
adc
mov
pop
mov
lea
ljmp
enter
es
or
jbe
lods
dec
es
mov
pop
hlt
mov
sub
mov
in
scas
and
push
call
fdivrp
jo
add
aaa
mov
adc
in
ret
in
jecxz
fsubl
add
dec
push
adc
test
pop
mov
shl
sbb
jle
dec
pop
fldl2t
mov
sbb
decb
and
fnstenv
mov
xor
push
je
lock
push
adc
lods
pop
ds
pop
xlat
ret
jb
lret
jecxz
cltd
pop
pop
sbb
add
add
jle
mov
push
sbb
jge
jmp
mov
push
and
sbb
xor
dec
scas
lret
mov
cltd
xor
push
mov
lahf
push
gs
push
les
int
scas
sti
xor
xor
cmp
sbb
push
daa
faddp
cmpsb
outsb
aam
push
enter
mov
test
add
das
push
xor
mov
push
jae
pushf
mov
scas
ds
jo
aam
es
or
jge
and
loopne
shrb
aaa
mul
sub
aad
jb
push
or
fcompl
push
idivl
jne
push
push
fwait
lret
dec
mov
test
cmp
xchg
inc
je
test
cmp
sub
lret
push
pusha
pop
ljmp
sbb
dec
in
xor
mov
mov
pop
pop
in
dec
in
cs
xchg
pop
xchg
inc
rorb
jne
fs
je
jmp
lahf
sbb
add
push
std
es
jno
movsb
inc
in
das
sarl
mov
push
dec
ret
ja,pt
repnz
xor
pop
sarl
clc
imul
xor
mov
loopne
mov
into
inc
mov
xchg
lret
add
nop
jle
out
push
fwait
mov
imul
aaa
xchg
or
in
inc
mov
pop
cmpb
not
int
subb
or
sbb
add
test
xor
adc
inc
push
popa
shll
iret
nop
jmp
push
lds
pop
scas
mov
icebp
mov
mov
dec
cltd
add
jge
aad
cltd
push
cmp
jge
pop
ret
mov
scas
cmp
cld
add
adc
mov
leave
inc
lock
leave
mov
jge
divl
inc
out
fdivp
jae
sbb
push
mov
lock
rcll
jp
cld
ljmp
sbb
mov
add
lret
lea
mov
add
add
pop
es
adc
enter
js
pop
cs
jnp
pop
divb
je
mov
adc
je
xlat
into
orl
loope
push
add
xchg
push
fadds
jg
xchg
rorb
cmp
mov
cltd
mov
jo
add
clc
pop
sub
scas
pop
push
test
mov
es
enter
inc
sub
jl
mov
push
sub
andl
pop
push
jno
push
gs
push
mov
clc
in
inc
fsubp
cmp
out
sub
mov
dec
cld
call
inc
ja
imul
ljmp
add
aas
arpl
mov
and
lock
sbb
clc
xchg
movsb
xchg
jl
pop
push
loop
cmp
xlat
push
orl
roll
sahf
outsl
xchg
daa
inc
mov
dec
mov
add
sub
adc
or
pop
xchg
cmp
and
push
notb
cs
notl
outsb
ror
out
pop
arpl
stos
sbb
adc
repnz
es
lods
aam
loopne
mov
push
popf
in
sbb
jae
mov
push
jne
mov
push
roll
cmp
sub
std
push
jb
xchg
and
bound
sub
mov
sbb
cmp
ds
cli
leave
sbb
jnp
mov
mov
jmp
pusha
lea
jne
cwtl
setno
not
movb
seto
lahf
movzbw
setns
push
call
pushf
lea
jae
call
xchg
adc
inc
jae
cmp
mov
and
dec
arpl
fisubrs
sti
ret
cmp
je
pop
mov
cmp
repz
jmp
jecxz
aad
lret
jl
es
pop
outsb
imul
out
out
lahf
scas
inc
cmp
aam
push
cli
push
sbbb
dec
test
pop
push
pop
sub
add
dec
out
popf
adc
and
rol
enter
inc
dec
xor
imul
aad
popa
ret
ret
cmp
pushf
push
pusha
movb
lea
ja
not
xor
and
sub
add
add
bts
lea
bt
sbb
mov
clc
adc
mov
bt
jmp
jmp
add
bsf
ror
btr
mov
clc
cmp
pusha
cmpb
pusha
lea
jne
test
xor
inc
mov
rcr
add
pusha
shr
movb
shr
mov
mov
stc
pushf
bt
test
pusha
push
lea
je
cmp
clc
sub
call
bsf
inc
bsf
mov
push
pushf
pushf
or
pushf
pusha
lea
je
ror
bt
sar
add
bt
bsf
sub
bsr
movsbw
bsf
sar
shr
test
mov
rcl
shrd
add
sar
movzbw
cmc
stc
add
shl
mov
pusha
shr
cmc
pusha
jmp
lea
je
push
pushl
movl
lea
jmp
push
inc
inc
adc
add
popa
adc
sbb
cmc
xchg
clc
push
jmp
mov
decb
and
adc
enter
cmc
mov
ss
push
shlb
ds
mov
jle
out
cwtl
pop
adc
insb
ret
outsb
push
es
sarl
and
enter
xchg
int3
leave
sub
push
ss
subb
xchg
pop
inc
adc
add
cmpxchg
mov
cmp
das
faddl
sbb
pop
std
stos
mov
lods
enter
aaa
adc
outsl
pop
dec
fucomp
ds
sbb
pop
pushf
out
and
inc
js
and
fnstcw
enter
pop
std
jne
cmp
sti
lret
and
int3
cltd
mov
pushf
mov
sub
jle
icebp
outsb
inc
jns
cmpsl
jle
cmp
inc
out
movl
push
mov
or
dec
ljmp
out
lea
pop
push
into
sub
lods
clc
jmp
xor
add
jno
jo
mov
cmpsb
inc
in
dec
movsb
push
push
mov
es
push
xchg
pop
pusha
call
mov
xor
lds
cmp
mov
jmp
js
scas
mov
add
mov
cmpb
idivl
into
pushf
in
sbb
enter
cltd
je
shrl
imul
fdivrs
movsl
iret
dec
testb
out
in
jmp
pusha
sub
std
push
mov
int
cmpsl
sub
outsb
pop
loop
sub
cli
decl
jae
lea
jmp
outsb
xor
sbb
inc
jae
mov
fldcw
cmpsb
adc
pop
push
and
aam
add
or
andl
rorb
bound
test
mov
iret
and
push
inc
adc
andb
push
sbbb
mov
in
and
pop
cmp
bound
mov
add
mov
enter
add
clc
mov
ljmp
test
lea
cmpsb
test
sub
push
xchg
aam
xlat
or
lds
pop
add
adc
add
mov
movsb
jo
sub
jno
push
ret
xor
fisubl
sub
xchg
scas
fidivrs
cli
inc
mov
out
adc
adc
and
or
pop
fisttps
add
fstps
imul
pushf
stos
add
int
into
push
sbbl
add
cmp
xor
jg
int3
into
stos
je
mov
dec
aam
pop
mov
loop
cmpb
sub
inc
jnp
dec
sub
xlat
jg
xor
insl
xor
pop
pushf
dec
stos
jae
mov
sub
cmp
cmc
cld
inc
aaa
mov
lods
test
sahf
imul
pushf
adc
add
mov
xchg
in
in
pop
loopne
pop
push
fildl
testb
push
jns
sub
sbb
push
cmp
or
push
jo
fdivr
dec
jb
pushl
push
fisttps
cmp
stc
pop
dec
popf
pop
movsb
loop
aaa
aad
mov
rclb
and
int
mov
imul
clc
xchg
loope
mov
iret
cmp
movzbl
lea
lea
lea
setnp
bswap
lea
bswap
mov
call
mov
call
pop
add
dec
js
popa
dec
mov
repz
mov
mull
out
sbb
ds
xor
out
shrl
pop
sbb
jmp
mov
leave
pop
inc
cmc
inc
jns
cs
cmc
add
inc
sbb
pushf
or
repnz
xor
cmpsl
js
sub
loop
mov
lea
pop
rclb
addr16
push
psllq
test
add
lds
mov
cmp
pusha
cmc
sub
call
sub
sbb
mov
push
cmp
test
cmpsb
ret
in
inc
pusha
xchg
shr
addb
fcoms
stos
clc
aad
and
pop
mov
lret
jns
pop
mov
inc
xor
pop
push
icebp
pop
jmp
inc
insl
mov
shrl
bswap
lods
shlb
popa
and
or
xchg
inc
popa
add
mov
test
imul
loop
push
scas
cmpsl
jb
mov
mov
xchg
xor
fisubl
xchg
mov
push
mov
push
testl
add
sub
or
fcomp
cmp
scas
xor
xchg
mov
daa
adcl
dec
mov
mov
add
push
pop
outsl
pop
pop
daa
ljmp
and
fs
add
loop
call
jl
xchg
or
push
inc
mov
ss
arpl
fisubrs
sbb
repnz
lret
mov
push
sbb
movb
mov
push
out
arpl
jns
sub
mov
add
lret
stc
adc
jg
jb
xor
outsb
mov
data16
ds
or
mov
xchg
sub
push
cmp
dec
imul
call
cld
inc
andl
lds
and
pop
inc
push
mov
out
lret
adc
lock
xor
inc
mov
mov
out
mov
cld
jno
xor
xchg
cmp
mov
cwtl
inc
fxch
add
inc
mov
dec
mov
fyl2x
fisubrs
movsl
popa
dec
scas
jge
pop
sub
xchg
adc
mov
or
push
xor
mov
push
in
mov
sub
or
inc
test
push
loope
mov
in
sub
mov
or
test
cmp
jl
stc
add
jo
insb
adc
sub
adc
push
xchg
jg
and
push
ret
in
pop
sbb
divb
sbb
push
xchg
sahf
sub
daa
lret
mov
or
add
xor
mov
test
roll
xchg
add
int
cld
mov
mov
mov
jns
dec
test
and
out
int3
call
push
fs
sti
loope
arpl
xor
mov
inc
in
cwtl
cmpsb
xchg
lods
aad
outsb
daa
inc
sub
movsl
in
jp
pop
jmp
adc
push
jnp
xor
cmp
push
dec
or
add
scas
por
xor
lock
or
or
stos
sub
dec
idivl
fwait
xor
or
je
clc
or
cltd
fdivr
pop
aad
idiv
loopne
ja
ffreep
mov
iret
popf
inc
mov
and
subl
or
mov
pop
adc
pusha
sbb
loopne
in
jp
xor
cmpsb
data16
push
sarb
stos
pusha
mov
test
or
add
push
lods
pop
mov
lea
out
fdivs
push
sar
mov
xor
push
dec
neg
xorb
sub
icebp
arpl
fsubrl
out
cmpsb
adc
and
or
xchg
mov
mov
cltd
subb
je
jge
jno
sahf
in
xor
pop
add
out
test
add
jecxz
jl
sbbl
push
stos
ss
sub
mov
call
das
icebp
dec
or
add
mov
pop
stos
or
sahf
les
movsb
xor
inc
scas
lret
push
test
in
es
rcrl
push
loope
loopne
mov
je
cmc
mov
push
sub
mov
rorl
fidivl
sub
testl
cs
clc
mov
fnstsw
and
mov
shl
call
fiadds
arpl
mov
fdiv
cmp
setg
pushf
sets
lea
lea
pop
mov
jmp
mov
or
es
sub
push
and
pop
ss
incb
mov
jbe
adc
dec
divl
fdivrs
pop
ss
je
sbb
mov
outsl
cli
mov
jns
into
test
xchg
leave
sbb
sub
in
mov
cwtl
dec
std
xchg
nop
adc
push
shll
xchg
inc
jl
test
mov
and
push
mov
mov
pushf
call
ficomps
push
add
jl
les
vmulss
mov
in
cmp
jns
fisttps
mov
or
cli
ljmp
in
cmpsb
arpl
push
jns
xor
adc
cs
push
mov
mov
cmp
xlat
leave
inc
jae
cld
and
insb
imul
xchg
pop
dec
mov
pop
jns
push
jbe
pop
cs
das
clc
pop
dec
rcrl
add
lret
lcall
in
pop
mov
or
into
out
and
lods
sub
outsl
mov
inc
pushf
sbb
loope
ss
roll
aas
jle
das
and
andl
dec
imull
movl
cmp
mov
dec
pop
sarl
in
inc
data16
sbb
xchg
js
mov
or
push
insb
fists
jae
addr16
cmp
jno
or
sbb
add
lret
pop
stc
cmp
mov
lock
notl
and
or
sbb
add
sbbb
es
int
add
pop
sub
imul
push
jns
cmp
push
pushf
aaa
mov
push
inc
jae
mov
xchg
nop
add
and
aad
or
jns
shl
lea
mov
mov
add
adc
aas
xchg
mov
ds
sub
cmp
mov
jle
xchg
xchg
mov
subb
es
out
imul
ret
or
fisubrl
cmp
add
std
jb
out
inc
or
jbe
icebp
fcompl
add
jbe
mov
lret
data16
fwait
sub
ja
pop
call
jmp
pop
cs
mov
notl
xchg
cmp
fst
or
fs
aas
pop
cmp
scas
dec
pop
or
addr16
xchg
sti
sub
sub
sbb
jae
lock
sub
pop
pop
es
test
pop
push
push
shl
mov
mov
in
ds
out
cmp
fs
mov
in
ret
jg
mov
out
pop
insb
mov
push
xchg
sbb
std
jnp
shrb
fs
or
dec
sbb
subb
mov
adc
cltd
jno
push
cltd
lods
stc
je
pop
leave
loope
dec
fmul
lret
pop
es
lret
sub
push
mov
add
in
mov
lret
les
push
sub
clc
pop
adc
jl
aaa
lret
pop
adc
loopne
add
int3
cmp
cs
scas
add
lahf
mov
fmuls
push
lds
cmp
out
add
arpl
pop
sub
clc
add
add
bsr
movsbw
mov
neg
mov
call
call
and
add
sar
xlat
daa
add
mov
imul
push
mov
mov
cmp
cwtl
push
pop
das
mov
into
jno
mov
xor
jg
repz
outsb
ljmp
mov
pop
mov
mov
xchg
sbb
cmp
adc
lahf
push
das
xchg
mov
fs
nop
loopne
jnp
xchg
in
jns
dec
jbe
ja
jl
inc
inc
mov
int
popa
sbbl
jle
mov
ljmp
xchg
inc
sbb
xchg
or
add
mov
dec
imul
ror
lea
leave
push
xchg
add
lahf
sub
xchg
cwtl
das
pop
push
and
push
mov
xor
sbb
popf
dec
scas
dec
popf
or
dec
cli
ja
sub
insb
fistpl
lods
mov
gs
mov
jg
in
and
inc
in
cmpsb
shl
push
stos
mov
push
or
aaa
insb
mov
xchg
mov
outsl
add
ljmp
fldcw
in
int
add
clc
mov
dec
sbb
xchg
mov
mov
out
not
push
shll
jg
cmpsb
enter
faddl
pop
pop
aam
or
js
int
popf
cmp
xchg
jle
btr
popa
pop
adc
xlat
push
xchg
sti
lret
adc
and
jmp
inc
jo
les
add
test
popa
push
cmc
insb
mov
mov
ret
popa
jge
pop
pop
cmp
je
jle
ret
mov
pop
add
push
dec
cmp
in
imul
sub
cli
or
cmp
or
into
addl
data16
push
push
or
andl
jp
int
fdivrs
fldenv
sahf
subb
shl
or
mov
mov
jnp
repnz
sub
cmc
mov
push
sar
jo
mov
leave
xchg
jl
dec
xchg
divl
xor
and
xchg
scas
out
mov
fbld
pop
out
push
xor
sahf
in
int
mov
and
les
dec
mov
imul
stos
xchg
xchg
loop
outsl
mov
pop
pop
mov
hlt
cwtl
and
iret
repnz
dec
jb
xor
and
mov
cli
and
ljmp
mov
cmp
and
jae
add
push
popa
jb
popa
outsb
je
outsb
imul
add
clc
xchg
cmpsb
lret
in
xchg
loope
in
fcmovnb
add
insb
xor
ret
imul
rorl
adc
push
mov
sti
and
test
bound
fimuls
push
inc
mov
daa
outsb
push
mov
shrb
jns
bound
out
inc
xchg
cld
push
sbb
mov
sub
mov
cwtl
cmpsb
pushl
rol
call
xchg
mov
decl
loope
mov
sub
int3
cmp
and
add
call
sbb
jbe
add
jnp
push
jae
jae
sub
inc
push
icebp
mov
repnz
push
mov
test
scas
dec
imul
sub
sub
pop
clc
sub
mov
inc
or
ds
xchg
scas
lods
cmp
scas
inc
xchg
xor
scas
push
add
add
adcl
cmp
add
lods
jmp
sbb
fidivl
mov
imul
sahf
sub
push
cmp
pushf
lea
jge
ja
shl
dec
clc
sub
btr
inc
not
shld
add
rcr
cmc
stc
mov
rol
mov
push
cmc
repnz
jmp
and
lcall
push
jle
js
ja
mov
add
lret
jnp
cwtl
or
dec
lret
test
pop
ret
mov
int3
outsl
or
ja
iret
insb
mov
loop
loopne
mov
enter
inc
in
fs
sbb
pop
xor
outsl
pop
test
sub
or
adc
inc
and
pop
lea
ja
test
stc
call
mov
add
add
and
cmp
jno
mov
int
jl
arpl
mov
cmpsb
int3
shrb
push
imul
ljmp
pop
das
lds
mov
or
ljmp
pop
xchg
xor
jecxz
insl
push
insb
into
out
mov
lret
add
cmpsb
mov
mov
pop
jmp
shll
loopne
enter
jecxz
jmp
stos
pusha
lea
jmp
bt
cmp
jmp
not
mov
pushf
inc
lea
jo
mov
push
setb
mov
mov
pushf
push
lea
call
push
call
int3
lcall
nop
repnz
cs
addr16
jge
push
jle
fidivl
mov
or
pop
inc
xor
aas
mov
inc
mov
mov
push
out
mov
rolb
mov
lods
sbb
in
aad
cmp
insl
lods
sti
jecxz
ds
adc
xchg
stos
test
and
int
sbb
mov
movsl
sub
data16
mov
hlt
fdivs
es
test
stos
dec
xor
out
jmp
loop
leave
and
movsl
sbb
out
pause
aas
or
xchg
fmul
clc
adc
cmp
or
dec
xchg
mov
or
lock
cmc
fnstenv
and
pushl
adc
xor
cmc
inc
mov
ss
in
dec
dec
roll
idivl
enter
and
mov
bound
pop
out
jp
lods
dec
xchg
subl
xchg
cld
imul
sbbl
push
aas
fidivl
sbb
jo
sti
imul
gs
jb
cmpsb
jge
dec
dec
jmp
sub
cli
push
out
bound
and
cmp
pop
sub
mov
scas
jnp,pt
mov
mov
and
loope
cmp
sub
cmpsl
sub
movsl
adcl
popa
ret
sub
dec
leave
xchg
aas
sahf
jecxz
out
ss
inc
inc
sub
testb
in
and
adc
and
cmpl
cmp
add
lea
les
ss
lret
cwtl
jnp
fnstenv
cmp
in
mov
stos
not
js
sub
dec
mov
pop
das
jbe
mov
std
push
or
add
ror
cmp
mov
push
push
imul
xor
pop
pop
into
mov
bound
fimull
fnstsw
movsb
push
inc
push
and
push
in
mov
dec
jne
fs
jne
movzbl
pushf
call
jne
clc
mov
not
sub
rcr
bsf
xor
mov
stc
test
sub
clc
push
pushl
popl
call
mov
add
lret
sub
scas
sbb
push
jns
outsb
addr16
add
mov
enter
inc
mov
aaa
adc
xchg
dec
inc
mov
testb
pushl
sub
outsb
in
xor
mov
ficompl
jne
inc
mov
lret
ss
xchg
out
arpl
scas
jns
inc
inc
rcrl
cld
dec
xorb
test
leave
jns
cmp
or
pushf
insl
les
mov
xlat
aam
imul
and
call
pusha
pusha
pushf
lea
jmp
insl
imul
add
lods
or
xadd
xor
sbb
xchg
cld
imul
jns
scas
pop
jne
test
outsl
fadd
nop
xorb
daa
inc
push
lods
bsf
pop
add
adc
aas
mov
and
pop
stos
shll
pushf
sbb
push
pop
mov
hlt
cmpsl
adc
add
in
adc
adc
std
jbe
jl
cmpsb
inc
mov
int
xchg
mov
adc
ret
xor
repz
outsl
add
push
imul
outsl
dec
jne
je
inc
jns
gs
std
and
xchg
mov
call
scas
ffreep
bound
pop
push
pushf
mov
mov
ja
nop
mov
imul
sbb
mov
add
inc
jno
push
xchg
push
int3
fistl
jb
sti
pop
inc
xor
stc
movsl
dec
pop
inc
pusha
mov
rcrl
arpl
sbb
sahf
test
inc
pushf
xor
and
test
mov
lret
movsb
test
ret
aaa
sub
loope
inc
into
iret
jg
push
les
inc
xchg
icebp
mov
xchg
ss
lea
stos
push
pop
sarb
inc
cmp
mov
inc
cmp
mov
and
shl
mov
push
inc
adc
js
xor
xor
cmp
mov
xchg
sub
xchg
push
mov
repz
xor
fucomip
add
lods
mov
stos
xchg
nop
xor
hlt
inc
ljmp
and
lea
jne
shr
cmc
sar
mov
ror
sub
btc
mov
test
cmp
clc
pusha
sub
stc
pushl
popl
mov
cmp
push
pushl
call
add
push
outsl
insb
jns
imul
loop
bt
movzwl
test
rcr
btr
stc
mov
push
add
cmc
test
bt
movl
mov
cmc
call
jbe
dec
sti
and
mov
in
mov
mov
repnz
in
adc
fcomps
outsb
sbb
inc
jb
call
sub
pop
movsl
fwait
xor
mov
scas
movlhps
outsb
mov
and
cmp
fisubrs
lods
nop
lds
and
push
mull
js
push
sub
pusha
xlat
cmp
push
cmpsb
pop
popf
fstp
arpl
push
xorl
or
aad
or
inc
repnz
inc
out
dec
push
outsl
sahf
aam
daa
lret
sbb
popf
mov
sub
aad
fwait
popa
inc
stc
fnsave
sub
in
pop
test
inc
push
insl
mov
push
inc
xchg
mov
mov
fidivs
jmp
push
cwtl
iret
cli
mov
pop
sub
xor
and
outsl
and
inc
mov
fsubrs
sarb
push
pushf
int
out
and
push
add
aas
loope
xor
push
pop
aaa
mov
mov
sub
stos
mov
cld
int3
pop
out
pushf
jbe
cld
out
adc
fildll
in
out
and
xchg
jecxz
jmp
add
leave
and
aaa
sub
dec
dec
sar
xor
push
out
pop
mov
ds
push
and
inc
icebp
mov
popf
push
or
out
in
in
or
mov
rorb
nop
out
jae
mov
mov
add
sbb
add
adc
or
mov
mov
mov
lea
pushf
movsbw
mov
lea
push
lea
jge
push
mov
mov
pushf
call
stos
xor
stc
and
sub
call
push
in
mov
shr
sahf
add
dec
shlb
hlt
push
xchg
mov
insl
test
fsubs
lds
mov
fnsetpm(287
sbb
xor
ret
push
outsl
xchg
sub
loopne
or
mov
push
rolb
movsb
stc
dec
in
insb
pop
stc
clc
scas
in
das
cmc
adc
push
repz
dec
iret
cmpb
push
xchg
ja
stos
sub
mov
lea
rcr
btr
aas
shl
sub
inc
jmp
ja
mov
cli
xlat
call
fdiv
inc
push
xor
fcom
xor
mov
push
jbe
cli
cmp
push
push
sti
jne
xchg
stos
xor
lret
sub
popf
xor
fildl
mov
jno
shrl
pop
dec
pop
aas
dec
inc
dec
das
insb
ljmp
mov
rorb
dec
jp
mov
int3
or
mov
pop
jae
mov
jns
lods
dec
dec
cwtl
pop
or
jb
push
sbb
and
mov
xchg
sarl
pop
mov
mov
in
incl
sti
scas
inc
icebp
jecxz
mov
jns
jb
testb
ljmp
cmp
in
cld
mov
popf
push
leave
adc
sub
test
ds
test
adc
sbb
dec
loopne
outsl
xchg
pop
fwait
or
mov
xchg
cmpsl
mov
push
mov
dec
ds
pusha
ret
les
stos
jns
popf
loop,pn
adc
stos
lahf
adc
test
mov
mov
xchg
or
lea
js
ret
add
push
fildl
bound
scas
mov
insb
mov
pushf
dec
mov
push
imul
loopne
push
xor
dec
inc
out
or
imul
mov
jno
push
mov
push
xchg
cmp
adc
mov
pop
mull
cld
dec
in
inc
mov
movsl
xchg
jns
add
arpl
repnz
ds
fwait
repnz
popf
mov
xchg
loopne
ret
jno
enter
fstpt
outsb
aas
repz
push
call
jns
and
cli
into
dec
jae
fyl2xp1
xor
stos
shll
xchg
add
lret
push
xor
xor
dec
test
inc
dec
ljmp
mov
repz
je
xchg
adc
pop
cmp
xor
pop
pop
vmwrite
push
imul
mov
loop
fwait
ljmp
fcmovbe
stos
jo
shlb
xchg
and
jl
leave
ljmp
into
and
iret
xor
inc
cmpsb
pop
cmp
scas
mov
scas
push
int3
mov
aaa
pop
cwtl
popf
in
fisubrs
xor
aad
cltd
cmp
xchg
lock
stos
mov
cmp
cmp
jge
repz
stos
sbb
jno
jnp
std
and
outsb
jbe
arpl
mov
fldl
cli
xchg
addr16
mov
lock
jge
sbb
mov
xor
sbb
rolb
out
or
test
adc
sub
mov
addl
push
mov
mov
inc
cld
popf
fwait
adc
jbe
mov
inc
cmp
push
sub
jns
mulb
xchg
inc
sahf
xlat
push
rcrl
stc
popa
lahf
lret
mov
popa
push
dec
jmp
arpl
mov
imul
sar
and
xor
mov
dec
std
cltd
push
rcrl
pop
std
or
jb
es
xor
sbb
cmc
and
xor
xchg
shll
shlb
ret
sub
iret
cmp
jle
push
in
mov
sahf
lods
fs
adc
call
loope
das
ss
test
pop
adc
insb
mov
scas
push
fldt
bound
adc
push
xor
jge
pop
lcall
push
in
pop
push
dec
push
lea
jne
movzbl
push
movb
lahf
setnp
not
pushl
mov
movzbl
not
lahf
mov
lea
pushf
pusha
movl
jmp
pusha
jmp
pushl
lea
call
pusha
adc
pushf
push
pushf
lea
jae
pusha
movb
jmp
stc
sub
hlt
and
push
test
fisubrl
out
dec
movsl
insb
aas
add
imul
in
jl
xchg
xor
sahf
das
add
jmp
pop
lods
loop
xlat
mov
ret
cmp
dec
cmp
xchg
jmp
add
xchg
sub
push
sub
cmpsl
or
push
mov
push
mov
into
mov
fwait
sub
into
push
sbb
loopne
pop
xor
push
pushl
mov
and
mov
insl
popa
pop
jno
mov
ss
push
pusha
movl
jmp
imul
jecxz
jl
sub
dec
jne
rcrl
nop
add
mov
jae
sbb
mov
push
mov
sbb
and
jl
cmp
xchg
jno
dec
cld
pop
mov
int3
js
xchg
mov
and
shl
jne
nop
push
sahf
adc
popa
addl
hlt
push
out
fwait
sub
aaa
pop
mov
and
mov
push
hlt
repz
aam
sbb
dec
leave
xor
adc
xchg
jb
mov
or
fdivs
movsb
lock
cmc
push
imul
mov
cmp
adc
scas
cwtl
add
sbb
cli
int
cltd
lds
mov
pop
addr16
test
ds
fbld
xchg
cmp
mov
sub
add
lock
fs
and
cs
xor
fiaddl
cmp
stos
mov
inc
cmp
out
xor
mov
inc
jmp
inc
shrb
push
int3
popf
pusha
call
pushf
pushl
lea
ja
neg
or
call
scas
sub
repnz
mov
data16
dec
sub
scas
xchg
imul
lds
aaa
jge
xchg
aaa
cmp
ror
test
adc
and
mov
pop
pop
jno
fwait
mov
dec
stc
add
pop
cmpsb
add
mov
pop
push
loop
inc
cmp
add
cmp
fstps
xchg
mov
jge
or
adc
push
jg
and
cmp
xor
into
cmpsb
dec
nop
adc
sbb
mov
adc
sub
bound
add
call
add
repnz
movsb
xchg
jne
js
and
push
cmp
sub
shrl
pop
clc
stos
or
inc
pop
jl
pusha
movsl
aam
fs
fsubr
lret
sbb
sbb
adc
inc
popf
push
daa
testb
mov
push
jecxz
and
cli
das
xor
pop
inc
mov
ret
adc
push
cwtl
outsb
dec
test
and
mov
movsb
outsb
rcr
pop
pop
inc
xorb
mov
movzbw
neg
call
sbb
add
nop
mov
dec
popa
jnp
adc
cmp
push
movsl
mov
test
aas
mov
push
mov
jl
inc
popa
in
inc
cmp
and
and
fisubrs
sub
jge
in
rcll
aam
in
xor
sbb
repnz
out
mov
arpl
divb
dec
movsw
into
dec
ss
sub
sub
inc
ja
test
xchg
leave
fisttpl
insl
push
xchg
hlt
ret
lock
xor
lods
pop
jg
xchg
je
cmp
lods
fnstenv
icebp
bsf
cmp
out
cmp
divl
fsubrl
out
jg
into
push
fwait
outsb
in
lods
push
test
xor
jmp
mov
fcomip
xchg
sarl
add
mulb
push
call
out
dec
insl
adc
dec
arpl
jl
ja
xor
mov
fld
enter
jbe
cmp
movb
bt
rol
pushf
jmp
pusha
test
pushl
call
add
lock
jg
movsl
push
loopne
std
xchg
mov
in
cmp
mov
xor
mov
clc
mov
out
xchg
repz
lea
out
sub
and
popa
outsb
lods
nop
push
popf
dec
mov
pop
fldcw
push
add
push
pop
mov
push
and
lock
cmp
imul
pop
add
pop
pop
out
and
out
sbb
subb
or
sahf
clc
cmp
out
dec
pushf
outsb
push
mov
mov
push
mov
jb
loope
dec
mov
stos
nop
mov
push
pop
mov
cli
inc
mov
out
icebp
inc
addr16
in
xlat
test
mov
ficomps
mov
testl
dec
in
dec
movq
jne
xor
cs
insb
add
pop
jecxz
add
je
inc
ret
pop
sahf
and
and
and
pusha
pop
scas
mov
mov
cmp
adcb
jo
mov
ja
repz
lds
jnp
in
dec
inc
mov
mov
lahf
mov
jg
clc
xchg
jae
xchg
outsl
adc
fstpl
jnp
fisttpl
mov
jl
jg
sub
mov
add
xchg
sub
call
pop
cmc
imulb
lcall
daa
dec
orb
je
or
sbb
movsb
and
and
mov
sahf
mov
cmpsl
movsb
cmp
push
dec
shl
sub
shr
cld
mov
xchg
and
loope
xchg
mov
mov
or
cmp
xchg
ret
outsb
sub
mov
jae
ljmp
mov
xchg
mov
shl
js
push
mov
push
test
adc
add
mov
das
loopne
cmp
ja
sub
sbb
orl
pop
in
and
test
ja
mov
lods
es
loop
sti
pop
add
sub
testb
pushf
rep
pop
jmp
push
call
cmp
or
pushl
call
mov
mov
inc
sub
je
push
stc
mov
test
cmc
cmp
push
push
lea
jbe
stc
btc
shl
mov
movsbw
adc
add
btc
xchg
dec
not
mov
inc
adc
neg
add
shl
lea
shl
movl
add
mov
pusha
pusha
clc
cmp
movw
movb
pushf
lea
jbe
stc
adc
mov
sar
sub
btc
not
shr
rol
mov
cmc
dec
mov
add
sub
sar
add
push
or
shr
adc
mov
movzbw
add
bswap
mov
pushl
pusha
mov
call
stc
pusha
repnz
push
pushl
pushf
jmp
push
lea
jne
bsr
shl
mov
jmp
test
jmp
not
mov
push
lea
jmp
mov
clc
xor
bt
ror
movb
mov
pushl
pushf
dec
jmp
int3
loop
in
and
fidivs
pop
mov
mov
sub
mov
mov
mov
fneni(8087
bound
xchg
dec
push
dec
incb
shld
and
inc
decl
ret
xor
cltd
push
into
in
enter
clc
inc
mov
iret
inc
mov
leave
mov
aaa
ficoml
jo
push
inc
sub
mov
adc
mov
cmp
sub
mov
mov
pushf
pushf
call
lea
call
jmp
outsb
xor
outsb
lahf
jnp
popa
inc
lahf
shll
jmp
js
mov
or
push
repnz
cmp
cmp
test
icebp
in
jle
mov
adc
or
mov
outsb
xchg
push
fwait
mov
lcall
add
rcrb
popa
cmp
jo
shlb
mov
mov
mov
cmp
sbb
ja
and
adc
insb
lds
push
mov
scas
inc
adcb
sarl
negb
or
insb
sbb
js
jnp
xor
orl
stc
mov
lret
sub
inc
icebp
pop
jle
daa
cld
test
aam
daa
sub
sub
loop
les
inc
popf
fdivs
sbb
out
xor
mov
dec
popf
addps
fcoms
ret
adc
xchg
dec
mov
ja
gs
ja
and
pop
out
imul
test
cltd
fwait
mov
xchg
lea
loop
inc
repnz
pushf
pushl
push
lea
jmp
call
fildl
ljmp
push
jecxz
mov
cmpsb
mov
imul
push
cmc
and
xor
inc
xor
stos
into
xchg
pop
loope
scas
fldenv
add
cltd
stos
push
add
or
cmp
ja
push
aaa
pop
mov
push
std
scas
and
jmp
stos
xor
push
outsb
aaa
jmp
sub
cmpl
and
testl
sub
fdivrl
jmp
sub
mov
test
or
les
rorb
fimull
andb
scas
mov
es
sbbb
cmp
sahf
stos
pusha
push
mov
adc
push
movsl
cwtl
dec
les
pop
addr16
dec
sub
dec
mov
aad
push
call
mov
in
andb
lds
outsl
ret
adc
call
add
or
xchg
xor
ss
mov
mov
lock
fiaddl
fwait
and
pop
enter
add
add
inc
adc
in
popf
adc
jecxz
add
adc
or
cld
fstps
sub
mov
repz
pop
pop
setp
mov
pop
xor
dec
xchg
std
sti
fcoml
fcom
std
jnp
incl
adc
push
cmp
pop
lret
aad
push
jne
mov
sbb
ret
icebp
and
out
fistps
mov
in
sub
mov
leave
movsb
repnz
shll
aaa
add
mov
and
jmp
mov
testl
pop
mov
test
xchg
or
jne
out
add
insl
ret
adc
xchg
sahf
ficomps
xchg
dec
and
pop
mov
dec
int3
and
mov
hlt
mov
sti
mov
movsl
notb
xor
mov
mov
xor
pop
cld
add
arpl
divl
lds
jecxz
jge
popa
clc
cmp
mov
adc
jmp
test
inc
imul
and
pop
stos
dec
stos
test
sbb
add
cli
js
int
xchg
or
jne
jne
sub
in
lods
jnp
mov
ret
jecxz
sub
mov
inc
dec
sti
and
and
pop
push
movb
movl
call
sub
add
push
jg
lock
icebp
test
xorb
daa
call
jb
mov
mov
hlt
add
data16
or
in
mov
mov
push
inc
das
sarl
push
int
xchg
pushf
jno
sub
dec
lcall
cmp
daa
lods
mov
fwait
sbb
adc
shlb
stos
pop
into
xor
arpl
ja
dec
imul
out
add
add
clc
or
dec
mov
lods
mov
dec
jl
pushf
push
ds
dec
jno
push
sbb
cmp
std
dec
nop
popa
inc
inc
imul
movsl
clc
or
xor
stc
stos
push
loopne
push
jo
test
jmp
out
ss
xchg
js
js
cmp
ss
lea
add
ja
dec
int
adc
test
or
mov
adc
fwait
hlt
sbb
and
rol
je
sti
pop
fldcw
sub
rorb
fisttps
sbb
pop
fldt
sbb
cmpsb
mov
or
rorl
roll
mov
push
sbb
jl
mov
dec
and
mov
sub
cmp
clc
cvtpi2ps
mov
push
jmp
pop
fists
sahf
sbb
mov
sub
lods
xchg
pop
sahf
icebp
loopne
jle
in
jbe
cld
sahf
mov
inc
leave
mov
sbb
jmp
imul
mov
and
jmp
add
add
daa
push
adc
aad
or
mov
sar
shld
add
bt
sub
aas
push
cmp
and
das
stc
push
shl
cwtl
rol
cwtl
push
daa
sub
call
mov
push
lods
pusha
lea
jns
cmc
xor
push
bt
call
aas
jno
out
add
xorb
push
rcrb
add
xchg
movsl
xor
divl
and
in
sahf
call
in
pop
pop
repnz
rclb
pop
mov
out
leave
xchg
testl
sbb
shrl
or
adc
xchg
adc
jno
lret
in
ja
aas
cmp
iret
xor
lcall
popa
movsb
aas
repz
xor
inc
stos
mov
inc
jmp
fnstcw
stos
test
add
mov
aad
sub
push
inc
mov
cmp
push
mov
inc
leave
dec
xchg
iret
hlt
jae
mov
nop
cs
xor
xchg
jnp
and
data16
imul
dec
mov
mov
loop
sub
negb
xchg
bound
or
mov
lahf
dec
daa
out
inc
cmc
pop
xchg
or
mov
and
sub
ds
and
mov
pushf
mov
cmp
sub
sahf
cltd
xchg
mov
and
fdivs
mov
sub
mov
arpl
xchg
mul
xchg
mov
jns
mov
cs
test
popa
fimuls
jp
jb
repnz
out
pmaxub
jg
cmpsb
test
mov
pop
jo
icebp
cmp
fidivs
shll
insb
xchg
mov
in
add
add
aas
dec
pushf
inc
inc
arpl
cmp
cmc
or
inc
jbe
mov
push
and
sti
sub
inc
fisubrs
push
jmp
adc
lcall
sbb
mov
repnz
mov
and
cmp
sbb
and
call
cmp
es
movsl
mov
adc
shrl
enter
mov
or
adc
and
call
jle
mov
pushf
pushl
movw
lea
jmp
jp
xchg
and
push
test
lea
mov
js
pop
roll
push
shll
aad
pop
cmp
mov
pop
inc
mov
shl
pop
push
aad
sub
sub
cmpsl
notl
cmp
mov
inc
mov
gs
jbe
aam
shrl
sub
shll
dec
ss
add
in
jns
stos
loope
mov
jns
notb
adc
inc
stc
iret
repz
loope
test
jecxz
add
or
fistpll
push
add
call
sub
and
loopne
je
stos
pop
mov
test
sbbl
push
mov
cmp
cltd
inc
pop
dec
lret
push
sub
inc
lcall
jo
cmpsb
add
out
inc
in
ret
sub
leave
or
lahf
xlat
fadd
and
sub
lods
sbb
cmc
iret
cmp
add
pop
shlb
and
movsb
dec
and
adc
aam
movsl
push
pop
xor
pushf
push
mov
push
dec
pop
cwtl
test
adc
mov
push
aaa
movsb
sar
shl
push
outsb
dec
stos
gs
iret
enter
inc
pop
jmp
and
pusha
pushf
mov
xchg
mov
movl
pusha
movw
dec
test
mov
shl
setnp
push
jmp
adc
cmc
xor
add
ror
inc
mov
clc
cmc
cmp
call
test
or
pusha
pushl
pusha
push
lea
je
pushf
not
add
ror
pop
neg
btr
sub
btr
sar
bt
shr
sar
mov
test
add
mov
cmc
add
add
shl
mov
stc
shr
stc
test
cmp
cmp
pushf
lea
je
test
cmp
call
lea
mov
pusha
movb
mov
pushf
lea
jmp
cmp
jmp
call
add
push
loope
add
adc
mov
cmp
call
sarl
lcall
inc
push
int
xor
or
xchg
jno
mov
es
sbb
repnz
push
xor
xchg
je
jecxz
test
pop
sbb
inc
ror
jl
mov
jge
imul
fnstsw
jo
push
push
sub
cmp
and
popf
cwtl
cmp
mov
orl
cli
clc
sub
cmp
clc
cmc
cmp
pushf
lea
jae
pushf
pushl
pushf
lea
jmp
mov
lea
ja
push
pushf
pusha
call
sbb
daa
loopne
add
call
fidivl
inc
lods
or
or
dec
enter
sbb
push
or
mov
sbb
mov
not
pop
aam
mov
xor
fldt
xchg
roll
xchg
mov
xchg
xchg
movsl
xor
mov
mov
pop
shl
in
jo
out
sub
and
adc
lcall
mov
mov
mov
dec
out
add
leave
bsf
lcall
ret
addr16
and
iret
bound
ds
xchg
inc
and
lea
mov
movzbw
not
lea
pushf
mov
xchg
call
push
jmp
jo
adc
and
sahf
das
inc
stos
int3
jno
out
mov
lock
sub
pop
xchg
ror
push
sub
sub
shrb
stos
dec
int
imul
lods
notl
xchg
cmpsl
inc
pop
popa
jmp
mov
ja
or
aad
xchg
fisttps
mov
shlb
lea
adc
and
xor
aam
in
sbb
mov
test
cld
out
test
jb
cmp
pop
add
mov
lret
xor
mov
cmp
es
aas
and
and
mov
mov
sbb
add
sbb
mov
incl
and
je
cmc
test
test
test
add
call
push
test
and
loopne
xor
aas
sbb
sub
add
jmp
fstpl
lea
in
sbb
out
pop
xchg
jbe
lea
lods
mov
stos
mov
jno
sbb
adc
fsts
add
jg
arpl
inc
push
xor
ja
inc
loop
jnp
or
repz
jmp
inc
dec
lock
pop
xor
js
in
push
and
jge
sahf
sub
insb
outsl
add
pop
outsb
cmp
push
mov
xchg
mov
xlat
pop
test
movsb
stos
xlat
push
aad
movsl
dec
test
pop
adc
int
push
xor
push
movsl
lods
sti
mov
test
mov
cmpsl
into
mov
in
sarl
mov
mov
mov
lea
je
pusha
mov
add
pusha
cmp
jmp
pusha
popf
push
frstor
mov
adc
xchg
mov
jl
aad
push
add
addr16
out
cmp
xchg
sti
cmp
xor
mov
nop
sbb
fiadds
jp
mov
ljmp
push
jns
push
popa
mov
sarl
pop
xor
lods
pop
stos
in
ljmp
mov
adc
mov
imul
xchg
mov
mov
dec
pop
repnz
dec
loop
insb
popa
push
add
out
jne
roll
imul
lods
lock
mov
test
jge
sub
rorb
and
outsl
sbb
add
enter
and
jne
dec
and
stc
ror
jmp
aaa
mov
frstor
inc
add
xor
loopne
jo
push
icebp
push
jg
mov
pop
adc
out
mov
cltd
mov
mov
mov
xor
sbb
insb
repz
out
leave
xchg
imul
lcall
lret
sarb
and
addr16
call
aas
jns
pop
call
jmp
fldl
sbb
mov
mov
iret
push
inc
mov
stos
add
aam
iret
dec
nop
mov
xchg
jno
add
dec
lock
dec
cmp
js
mov
sbb
mov
out
mov
adc
pop
xchg
imul
sub
mov
jae
cmp
stc
adc
arpl
lret
cmp
or
lret
mov
idiv
in
mov
repnz
inc
add
adc
mov
and
push
stc
mov
jp
daa
jg
push
insb
or
filds
xor
fistpll
adc
mov
mov
xchg
aaa
fwait
insl
fsubl
cmp
push
mov
aas
nop
push
clc
cmp
pusha
iret
out
lea
fs
in
test
sbb
jg
cmp
out
mov
scas
xchg
popa
imul
insb
and
xchg
inc
in
cli
ffreep
pop
pushf
popa
inc
mov
jb
jno
fcmove
jo
jmp
shlb
rcl
in
pop
mull
movsb
dec
cmpsb
dec
out
mov
mov
and
or
or
push
icebp
sti
jmp
out
add
pusha
call
jb
xchg
lcall
hlt
and
vpsadbw
xchg
lahf
dec
sub
divl
fidivs
clc
aad
dec
lock
jecxz
and
outsl
and
and
sarb
jne
dec
in
cwtl
sub
rorb
ss
jge
xor
add
out
cmpb
ret
mov
sub
ss
pop
dec
mov
ss
cmp
outsl
mov
xor
mov
xor
ret
dec
dec
fisubl
jne
bound
xchg
cmp
out
dec
xchg
sub
aas
pop
in
lahf
jae
xchg
mov
nop
addr16
and
jecxz
cmp
xor
mov
insb
int
inc
cmp
ret
cs
cmp
mov
shlb
xchg
je
push
sarl
test
add
xor
jo
xlat
dec
fucomi
cmp
enter
stc
repnz
or
aad
and
in
and
loop
mov
leave
xchg
xor
mov
aas
notl
fnsave
outsl
hlt
mov
fsubr
jae
xor
xorl
adc
mov
out
inc
shlb
pop
push
and
mov
push
aaa
roll
stc
and
addr16
nop
test
jne
add
pop
idivb
or
bound
fwait
insb
das
sub
and
mov
fsubr
fnstcw
add
adc
sub
adc
mov
test
jns
mov
fldenv
fsubp
and
xor
aam
pop
ds
frndint
fsubs
pop
cltd
lahf
stos
push
xchg
inc
jecxz
xor
sbb
add
cli
mov
mov
sub
add
push
push
sbb
les
cmp
popa
xor
outsb
jb
mov
call
mov
add
cmp
fsubrs
sbb
xor
xchg
dec
mov
decb
or
mov
out
push
jp
mov
movsb
inc
sahf
fadd
mov
jno
lods
ja
shr
jb
rcrl
mov
stc
mov
cmc
mov
jno
mov
out
maxps
movsl
movb
in
inc
insl
jg
into
jmp
push
mov
cmc
faddl
sbb
adc
stos
dec
xchg
outsb
jl
lea
jb
cmc
cmpb
jmp
call
call
pusha
push
lea
je
pushf
push
pushf
lea
jmp
not
setno
push
mov
pushf
pushf
movb
lea
jmp
repnz
pusha
call
movsbw
mov
movsbw
mov
lea
lea
pusha
movl
pusha
jmp
mov
imul
cmp
popa
in
sub
jp
push
adc
adc
sbb
add
sbb
mov
xchg
xor
xlat
mov
mov
mov
popf
imul
pusha
in
mov
sbb
repnz
cltd
loop
xor
sti
dec
ror
dec
mov
jmp
fidivl
in
stc
adcl
je
shll
xlat
and
push
sub
fs
mov
enter
push
inc
mov
jecxz
cld
test
or
jl
cltd
cmp
rcl
mov
and
bound
adc
mov
cs
ficoml
ljmp
jp
adc
jg
push
add
jbe
jbe
or
push
push
flds
push
mul
jle
lret
test
sub
int
or
daa
pop
dec
sub
pop
push
jmp
add
push
movzwl
xor
test
mov
cmc
stc
add
stc
mov
call
mov
pusha
mov
lea
jmp
mov
and
jge
test
xchg
out
xor
lea
dec
push
repz
add
dec
sub
pop
mov
or
xor
cmpsl
jmp
int
lock
sub
adcl
xchg
repz
jmp
mov
add
or
mov
ret
dec
cmpsb
pop
xchg
dec
push
not
sub
data16
mov
aas
mov
rorb
pop
cs
mov
add
popa
adc
push
jns
insb
add
inc
cmp
sbb
adc
sub
add
add
adc
add
add
add
mov
add
add
mov
add
add
inc
jge
add
add
add
daa
add
add
add
sub
add
add
add
add
add
ss
add
add
imul
sub
add
sub
jg
daa
add
stos
sub
add
add
stos
sub
aad
add
jmp
ret
stos
cli
fistl
movsb
cli
push
nop
xor
jge
sbb
aas
push
mov
push
mov
stos
outsl
dec
dec
ja
pop
lahf
add
xor
or
inc
ds
shlb
mov
std
xchg
in
aad
sbb
adc
cwtl
je
cmp
sub
cmc
jno
insl
push
push
mov
fisubs
loope
cmp
jle
or
or
add
insb
fdivs
and
sbb
in
aam
add
repnz
mov
dec
dec
sub
jbe
movsb
adc
aad
and
sub
or
into
pop
std
xor
test
pop
aam
add
cs
mov
mov
bound
test
dec
or
out
jmp
aaa
and
lods
sub
jge
int
dec
sbb
sbb
mov
xchg
ja
shlb
jmp
cmpsb
mov
mov
dec
pop
arpl
adcb
enter
xchg
push
clc
xchg
jmp
mov
push
xor
int
push
inc
pop
aas
scas
dec
cmp
sub
in
gs
mov
hlt
loop
and
inc
mov
lcall
dec
popa
jnp
inc
sub
inc
fcomp
aam
add
gs
imul
lret
jp
xchg
or
data16
lea
mov
mov
arpl
push
shl
call
test
mov
inc
mov
sarl
rcl
xchg
lock
pop
push
mov
dec
dec
sahf
pop
xchg
sahf
or
pushf
lcall
pop
and
and
es
push
aas
cmpsb
cmpsb
decb
push
xor
aam
and
ret
cmp
or
sub
rcrl
push
mov
lea
rol
add
pop
fdivrs
push
das
xchg
add
jne
push
xor
imul
push
jl
jg
cmp
push
int3
enter
clc
push
xchg
jp
in
dec
or
aas
push
mov
test
cmp
in
ds
iret
dec
inc
repnz
out
in
xchg
jne
inc
jmp
out
lahf
shll
push
imul
sub
push
cmp
insl
call
mul
je
mov
mov
ds
mov
add
outsl
push
push
stc
pop
enter
aaa
mov
movsb
cmpsl
cld
outsl
loope
icebp
mov
int3
cmp
jl
xor
and
and
adc
insl
sti
addb
clc
aas
xchg
lea
mov
jle
push
dec
cmpsl
pop
mov
shlb
cmpl
jne
pop
test
mov
push
pusha
mov
setne
mov
pushf
pushf
bswap
movb
mov
movb
jmp
xchg
push
out
and
or
icebp
mov
and
sub
pop
add
ja
in
out
push
inc
loopne
pop
dec
popa
push
imul
or
mov
dec
push
out
mov
call
popf
dec
jb
aaa
imul
cmc
add
sahf
sub
pop
push
mov
cmp
fildll
cmp
aad
in
pop
int3
sub
popf
jl
test
xor
mov
icebp
int3
fxch
adc
fsubrs
inc
popf
pop
push
cmpsl
leave
mov
or
dec
xlat
loope
inc
lds
out
aad
dec
push
ja
adc
and
and
xor
cli
xlat
data16
pop
mov
nop
fwait
or
loop
lds
cmpsl
pop
sbb
leave
add
sbb
sbb
cltd
aad
push
push
sbb
mov
inc
push
sub
out
and
lds
lock
cmpsb
scas
jp
mov
and
jl
lret
jmp
cmpsl
cmpb
dec
cwtl
aas
movsl
push
ret
dec
push
xchg
fmuls
xor
xchg
pop
push
imul
xchg
notb
jne
jnp
fxch
movsb
pusha
mov
mov
mov
and
fstpt
cmp
jo
cmp
rorb
jmp
loop
xlat
insl
sub
sub
push
add
ljmp
push
daa
and
aas
test
shl
jle
cwtl
lret
stos
shl
fimull
loop
lock
cld
repz
rcrb
cmc
mov
push
insb
fs
in
vmulss
dec
cmp
jbe
adc
sarb
xchg
iret
rorb
stos
cmp
pushl
popl
mov
mov
movb
pushl
ret
mov
and
and
mov
fdivl
clc
cmp
test
sbb
push
arpl
das
imul
mov
cld
in
mov
mov
call
std
sub
mov
inc
cmp
mov
pop
jns
mov
in
ja
arpl
push
outsb
ror
icebp
adc
cmc
hlt
test
hlt
les
loopne
js
mov
cmp
jbe,pt
add
iret
testb
subb
cmpsl
outsb
sub
leave
loop
dec
fbld
pop
mov
and
mov
mov
xchg
sub
adc
cmc
in
xor
and
ffreep
std
imul
and
fsubr
cltd
mov
xchg
mov
fcomps
mov
sbb
loopne
repnz
arpl
and
xor
scas
mov
lock
loop
mov
jmp
mov
aaa
lret
xor
mulb
sbb
mov
cmpb
adc
and
insl
lock
or
adc
decl
cmp
mov
mov
add
sub
cmc
fbld
mov
xor
fstp
in
push
jl,pt
jmp
daa
mov
movl
hlt
incl
add
pop
xor
stos
lds
xchg
sbb
lock
push
loope
repnz
or
dec
pop
sub
lods
sub
add
inc
int
imul
push
sarl
xor
ret
or
fwait
push
loop
sbb
aam
and
mov
out
cvtps2pd
dec
add
cmp
add
lcall
xchg
cmp
inc
out
stos
ja
jns
icebp
adc
xchg
icebp
push
jns
aas
imul
push
cmpsb
push
mov
inc
jp
dec
stos
div
into
and
xor
fwait
addr16
xchg
cmpsl
or
dec
pop
divl
sub
push
arpl
sbb
jmp
adc
jge
add
cmp
cmp
decl
aaa
test
cmp
adc
jmp
pminub
ja
lahf
jg
fstpl
call
or
frstor
lcall
cs
icebp
sbb
push
popa
mov
cmp
subb
mov
fildll
adc
cmp
and
and
negb
mov
cmc
fstl
adc
and
imul
insl
push
adc
shlb
out
pop
data16
daa
into
add
sarl
or
enter
in
jg
lea
test
inc
and
repnz
or
pushf
cmp
je
sti
sbb
outsb
push
test
cmp
push
adc
pop
cmpsb
and
adc
call
push
loop
jno
mov
jle
jo
enter
sbbl
fsubrs
mov
scas
and
and
in
pop
cs
inc
jo
xchg
add
sbb
cmp
dec
dec
jne
cmp
mov
jo
movsl
in
fwait
ljmp
mov
int
cmp
push
cli
xchg
cwtl
fildll
inc
dec
mov
inc
fs
test
rep
mov
inc
lods
daa
or
int3
and
inc
mov
je
mov
mov
dec
cli
sub
push
es
aam
mov
xor
or
fisttps
loop
out
jne
push
cmp
mov
or
movsl
out
jge
mov
lret
cmp
mov
sbb
xor
xor
push
add
stos
xchg
test
stc
movb
in
test
incb
inc
adc
ss
or
int3
push
cmpsb
cmp
clc
fidivs
push
jne
inc
incl
dec
ret
hlt
movsl
or
setp
pushf
not
movsbw
mov
push
pusha
pushl
pushf
lea
jmp
jbe
lahf
int3
and
push
sub
aaa
sarb
scas
enter
lods
pop
pop
movsb
mov
cwtl
xor
insl
mov
sti
jo
sub
int3
jmp
in
sub
and
xchg
mov
push
sbb
lock
mov
cmovnp
mov
flds
cmpb
fldcw
pop
fldl
addr16
movb
xor
dec
lods
xor
xchg
cmc
dec
sarb
lea
jbe
btc
neg
dec
mov
movzbw
sar
add
bsf
mov
shld
xor
add
bswap
seta
movl
add
mov
test
stc
jmp
clc
call
lea
ja
stc
imul
push
jmp
lods
pusha
sub
cmp
test
mov
not
push
clc
neg
movw
call
fistps
ds
cmp
leave
sti
pop
xor
mov
sub
add
clc
lret
dec
mov
add
test
mov
jb
jns
mov
iret
iret
scas
ljmp
repz
or
movsb
xchg
mov
adc
pop
ficoms
mov
cmp
cmp
mov
dec
push
test
adc
or
inc
fs
mov
data16
nop
mov
shl
pop
cwtl
cmpsb
dec
movb
lea
jne
ja
stos
pushf
pushf
lea
jmp
jmp
call
jmp
ss
lret
outsb
stos
sahf
aaa
test
pop
mov
mov
cmp
lods
addr16
sbb
out
std
xlat
mov
push
sub
cmc
pop
cmp
mov
data16
in
push
mov
cmpsl
pop
arpl
pop
arpl
cs
scas
scas
cmp
xchg
jmp
rcll
jge
xorb
or
xor
mov
clc
push
sbb
out
push
pop
sti
adc
mov
fdivs
lahf
mov
xor
inc
mov
mov
int3
shrl
add
testb
les
mov
pop
add
test
out
ss
adc
repnz
jg
movsl
sub
mov
adc
push
pop
mov
jnp
scas
cltd
adc
nop
stc
ror
jnp
mov
or
sub
cmp
jp
rcrb
and
xchg
mov
xlat
mov
push
jo
mov
jecxz
xchg
insb
insl
pop
es
dec
out
inc
pop
xor
push
add
or
or
mov
push
add
pusha
cwtl
add
test
imul
pop
adc
inc
add
cmp
dec
cmp
fmuls
leave
and
aam
inc
jnp
pusha
adc
add
sub
or
push
sub
xor
push
leave
cmp
dec
subl
leave
or
mov
loope
int
scas
repz
out
fisubrs
in
fsub
and
jns
xchg
cmp
lock
popl
imul
fisubl
add
push
adc
jle
sahf
loopne
lods
cmp
lods
inc
lret
icebp
dec
push
out
add
pop
and
arpl
pusha
push
lea
movb
movb
movb
pushf
movl
jmp
imull
out
inc
in
lcall
hlt
inc
scas
xchg
add
clc
rolb
cli
push
pop
mov
ret
gs
mov
jo,pt
jae
dec
pop
stc
in
fnsave
jo
jl
cmp
xchg
out
daa
lret
fildl
xchg
loop
cld
and
int3
lea
ret
shr
into
aad
inc
or
pop
push
gs
sbb
inc
sub
adc
and
mov
sbb
pop
mov
add
or
das
int3
mov
push
ds
push
fisttpl
or
cmp
ljmp
outsl
jle
test
and
push
pop
sub
es
cmp
decb
push
loope
xchg
popf
leave
aas
out
cmp
leave
sbb
push
ret
or
dec
jbe
out
fists
sti
xlat
scas
nop
lods
repnz
out
or
pop
loope
cli
pop
mov
lock
clc
pop
out
jns
adc
pop
mov
jmp
inc
inc
cs
add
lods
mov
or
in
push
and
xchg
repz
shlb
xor
je
cmp
xchg
mov
cmp
jne
iret
cmp
imul
sahf
out
mov
insl
xchg
inc
sbb
rcll
cmpsl
add
shll
insb
aas
cmp
xchg
jb
mov
xor
hlt
sub
insl
out
ss
xchg
xchg
cmpsl
inc
add
xchg
pop
push
loope
jno
xor
icebp
sbb
jg
push
ds
pop
int
pop
adc
loop
faddl
xor
dec
and
imul
in
insb
lea
add
in
jmp
insb
addr16
jae
cmc
andps
ljmp
adc
pushf
lret
repnz
cmpsl
inc
arpl
imul
fnsave
or
or
loopne
popa
or
cmp
stos
stos
dec
adc
add
pop
repnz
sarb
and
lods
shll
imul
stos
mov
and
xchg
imul
stos
fmuls
xchg
pop
rcll
lcall
jle
shlb
inc
mov
repnz
and
push
mov
xlat
jne
jb
fnclex
call
inc
jnp
divl
popf
outsl
iret
mov
and
enter
and
ret
data16
xchg
dec
out
incl
in
xor
and
test
int3
lock
mov
mov
or
mov
sbbl
and
jbe
mov
dec
incl
cmp
mov
dec
test
enter
jb
stc
test
jno
pop
push
cld
out
popf
mov
push
cmpsb
cmp
sub
lret
out
inc
stos
cmp
mov
pop
push
mov
sti
loop
ret
dec
imul
mov
pop
mov
or
insb
adc
cmp
test
outsb
and
mov
add
fisubs
and
sahf
jmp
movsl
call
inc
and
enter
pushf
movb
pusha
push
lea
jmp
stc
ror
call
mov
pushf
pusha
pushf
pushf
pushl
ret
call
movb
mov
lea
ja
pusha
pushl
pusha
pushf
lea
jb
cmc
cmpb
jmp
sti
out
aas
les
jl
mov
lret
jg
mov
in
mov
icebp
imulb
pop
jo
inc
xor
pop
and
dec
ret
sbb
nop
nop
push
in
movsb
push
shrb
incb
in
sti
scas
fsts
xor
mov
or
arpl
jae
lret
cwtl
clc
orb
cmp
push
jmp
lods
insb
xor
push
test
hlt
lea
in
and
loop
mov
pop
pop
jnp
add
rolb
out
loopne
push
rcr
pop
xchg
push
mov
and
hlt
shrl
loope
insb
dec
add
call
mov
shl
xor
jp
lds
xchg
loop,pt
add
adc
imul
cmp
cmp
shll
jns
push
xchg
jb
mov
out
es
jnp
jb
push
ret
and
lea
fisttps
js
inc
cmp
pusha
or
mov
les
mov
stos
stc
and
lods
adc
push
mov
ljmp
mov
dec
lods
add
jl
outsl
pop
xchg
push
les
cltd
subb
leave
mov
and
jecxz
cmp
mov
std
cmp
push
out
es
and
in
cs
fadd
and
jle
mov
stos
push
mov
push
add
mov
and
in
or
lods
xor
mov
jl
aaa
sahf
in
dec
mov
jmp
jmp
jne
popl
stos
push
cmpb
push
inc
add
fcmovbe
lock
call
lds
ret
sbb
aaa
pop
push
sbb
mov
add
lea
fucom
call
ss
mov
and
int3
ljmp
inc
stos
xlat
push
fstp
mov
std
cmp
movsb
imul
cmp
stc
cmp
jge
mov
je
mov
call
jmp
fwait
mov
in
mov
mov
pop
xchg
pop
add
movsb
cmpsl
stos
xchg
xchg
cmp
push
mov
int
mov
test
incl
movzbw
setg
pop
cwtl
mov
cwtl
pushf
pushf
movzbw
lea
pusha
movl
pushl
call
push
call
inc
lcall
repz
arpl
call
dec
mov
push
mov
cli
ds
jns
cmc
jbe
dec
aam
cmpsb
or
pushf
scas
push
fldl
mov
mov
push
sbb
jecxz
cmp
or
mov
mov
in
push
insl
jnp
movsl
push
push
pop
in
jl
cmpsb
dec
lret
fadds
sub
cmp
mov
in
scas
sub
mov
sub
and
outsl
inc
jbe
push
lcall
jne
mov
repnz
je
pop
jle
in
lea
lahf
mov
cmp
inc
sub
in
sar
inc
push
push
imul
insb
add
clc
push
pusha
push
lea
jmp
cmc
add
test
test
cmp
call
add
bt
clc
movzwl
mov
mov
test
add
clc
jmp
lds
and
jle
testb
ret
pop
or
ficoml
out
dec
pop
ss
pusha
or
sub
adc
fisttpl
and
fs
movsl
shrb
into
imul
sbb
movsb
rorl
adc
cmp
pushf
scas
mov
inc
ret
jg
nop
inc
scas
pop
mov
lods
daa
out
es
jp
test
add
inc
jl
jno
mov
repz
sbb
cld
sbb
popa
js
mov
mov
mov
popf
or
ja
cld
cli
std
shlb
js
imul
add
mov
cld
mov
jg
in
or
ds
pop
je
pop
xor
fwait
aas
dec
adc
mov
inc
xor
or
daa
pusha
mov
inc
popf
pop
jne
fs
pop
xchg
lock
out
jae
push
lret
pop
pop
gs
arpl
push
movsb
push
sbb
xchg
aad
rclb
pop
and
mov
repz
cmp
jbe
mov
lea
insb
addr16
adc
icebp
push
andl
pop
pop
and
subb
adc
insb
loopne
daa
fisttpll
scas
pushf
xor
inc
sti
mov
pop
cmpsb
lahf
int3
mov
dec
xchg
sbb
xchg
jb
mov
loope
sub
aas
cmp
les
or
outsb
inc
mov
je
cs
sbb
add
arpl
jle
out
shlb
test
aam
or
jmp
jmp
fs
call
popf
cpuid
nop
pushf
jmp
lods
lods
cmpsl
mov
fsubrl
iret
cmpsb
adc
xchg
and
xchg
insl
push
out
cwtl
or
cld
sub
das
cmp
cs
cmp
scas
push
rorl
xchg
inc
mov
ds
mov
rcr
mov
cmp
add
xchg
enter
adcb
xchg
shr
jae
cli
aad
setg
jmp
fimuls
mov
fidivrs
dec
in
ret
add
cltd
je
lds
mov
std
std
xchg
bnd
jns
push
das
int3
rorb
imul
ss
mov
jnp
in
clc
dec
inc
push
and
aam
push
int
mov
dec
pushf
push
pop
test
mov
cli
add
fsubp
in
xchg
push
push
mov
stos
daa
or
push
xor
enter
aad
adc
lahf
inc
testb
ja
pusha
les
or
les
sahf
lock
mov
mov
es
jecxz
xchg
enter
pop
dec
xorb
movsl
scas
sbb
push
push
xchg
or
or
sahf
test
lcall
add
repnz
mov
stos
insb
add
das
jo
lods
rorl
mov
rcll
jmp
imul
shll
dec
pop
mov
inc
inc
insb
xlat
lcall
mov
sbb
in
hlt
pushf
mov
cmp
add
and
sti
lcall
aas
sti
mov
sbb
lahf
daa
rclb
inc
fcmove
js
pop
inc
dec
movsl
add
mov
inc
add
out
fsin
push
cmp
mov
sahf
out
fadd
out
xchg
stos
aaa
lds
mov
push
dec
mov
leave
out
mov
and
ljmp
das
sub
out
adc
fisubrl
inc
mov
mov
or
ffreep
mov
add
jae
mov
dec
push
repnz
aaa
mov
sub
pop
out
push
sbb
enter
mov
aas
sahf
lods
jge
cmp
mov
fcoms
push
mov
cmp
cli
into
lahf
out
lret
jns
scas
call
cmp
stc
je
lret
sub
imul
push
divl
adc
jge
iret
sahf
outsb
mov
out
cltd
mov
sti
push
fld
scas
aad
ss
icebp
or
aas
add
adc
add
cli
xor
fcmovne
add
shll
cmp
ss
scas
add
lea
mov
sahf
xlat
push
sahf
push
aas
adc
ss
jnp
mov
lahf
mov
mov
mov
sbb
inc
repz
repnz
test
pop
enter
mov
sbb
call
ret
fucom
cli
sub
repnz
insb
mov
mov
jle
ja
enter
scas
adc
mov
mov
jns
xchg
lds
test
iret
addl
enter
rol
jge
ljmp
mov
fidivrs
mov
xor
ljmp
push
stos
ss
mov
xor
pop
popf
or
shrb
ror
fcomps
aam
cmp
mov
fcmovbe
jb
lret
or
mov
ficompl
mov
cmp
pop
mov
mov
jnp
mov
scas
sahf
push
pop
or
imull
ret
push
dec
nop
sbb
mov
out
dec
push
mulb
push
push
sbb
pushf
jge
lahf
imul
dec
sahf
and
daa
aad
jge
leave
jl
fistpl
dec
and
lahf
out
int
sahf
test
in
aas
jbe
aam
pop
mov
add
mov
and
mov
inc
roll
repz
sahf
ds
lret
pop
and
jecxz
xor
pushf
lret
inc
xor
jle
movsb
scas
jbe
int3
mov
stos
scas
aaa
jmp
out
jnp
mov
es
pop
mov
jno
mov
stc
push
xor
ljmp
inc
sbb
push
cmp
out
lret
xchg
cmc
mov
jo
ret
mov
mov
pop
push
loop
jle
outsl
divl
sahf
in
lret
loop
jle
push
xchg
push
adc
pop
fcmovbe
cli
cmpsb
outsl
pop
push
negb
in
add
fisubrs
mov
je
sar
jb
inc
adc
dec
rclb
outsb
sbbl
push
sbb
pop
fisubrl
dec
cmpsl
push
inc
cmpsb
or
pop
mov
dec
mov
cmp
xchg
loop
sahf
in
adc
sbb
out
push
adc
push
cmp
adc
sbb
add
inc
mov
inc
lret
cmpsb
lcall
cmpsb
mov
inc
cmp
push
fiaddl
pop
cs
dec
mov
mov
pop
ljmp
std
call
pop
xchg
sbb
cmp
fisttps
add
iret
dec
mov
repnz
call
sahf
fldenv
data16
cs
push
mov
cmp
push
sbb
out
cmp
inc
fisubs
bound
xchg
and
imul
push
add
cvtpi2ps
xchg
ljmp
jmp
sbb
movb
rolb
xchg
dec
stc
aam
sbb
mov
clc
fisubrs
mov
ljmp
push
jmp
dec
pop
mov
in
fwait
mov
ss
cmp
or
idivl
add
push
xchg
cli
push
into
hlt
xlat
mov
cld
jno
mov
jle
sbb
inc
out
mov
shlb
incl
dec
stc
mov
pop
out
clc
inc
fsin
ret
in
mov
push
sbb
loop
jp
loopne
ljmp
push
fisttpl
inc
adc
lret
lods
mov
jns
mov
mov
movsb
dec
fwait
int
mov
or
fptan
xchg
in
sti
rolb
scas
lahf
outsl
in
mov
mov
out
mov
mov
repz
inc
data16
xor
mov
popf
scas
aas
mov
lret
mov
push
inc
push
or
scas
outsb
cwtl
aam
lods
xchg
xchg
add
notl
gs
hlt
mov
and
lret
mov
push
sarl
push
lods
xchg
cmp
lahf
cld
js
fwait
ror
out
pop
cmp
je
mov
mov
mov
mov
mov
lds
into
or
push
call
add
mov
aas
loop
mov
pop
add
fwait
inc
pop
cmp
pop
sbb
mov
fidivrs
pop
jp
ss
sahf
stos
dec
ljmp
ds
ja
or
sahf
xor
lret
xchg
mov
out
cmp
lahf
cmpb
and
sarb
loop
inc
xchg
and
sub
js
sahf
xchg
scas
clc
cld
cmp
xlat
ret
xor
rorl
cmp
lahf
aas
xchg
out
inc
add
adc
xchg
cmp
sahf
jae
add
add
call
mov
adcl
dec
pop
shl
mov
lahf
inc
pop
frstor
xor
leave
sti
ds
pop
fsubp
mov
pop
cmpsb
data16
fmul
test
movsb
ja
lahf
mov
mov
xor
mov
pop
scas
aaa
fistpll
mov
fbstp
push
test
lahf
imul
push
cmp
xchg
ret
pusha
test
jo
mov
add
mov
mov
ficompl
into
lret
jo
ja
imul
aad
andb
pushf
lock
incl
xchg
pusha
pop
leave
jnp
test
pop
shlb
sbb
or
jmp
clc
imul
xchg
addb
sahf
repnz
mov
out
mov
mov
shlb
stos
jge
mov
xlat
cwtl
mov
mov
repnz
daa
jbe
aaa
out
jmp
push
inc
loop
mov
das
sub
fcompl
scas
insb
or
in
and
rcr
shrl
lahf
push
adc
call
lods
lret
repnz
iret
lds
sub
sbb
mov
les
pop
mov
cmpb
fwait
lods
mov
in
stos
mov
xchg
mov
out
lahf
and
push
add
test
and
adc
mov
in
data16
ds
and
or
sbb
inc
push
hlt
push
push
add
cmp
lods
mov
xchg
or
pop
add
ret
mov
lods
mov
stos
cmc
lock
sahf
xchg
insb
cs
jp
inc
cmp
dec
ret
or
mov
ljmp
int3
mov
scas
cmp
sbb
push
mov
add
loop
push
imulb
ret
add
cltd
mov
jmp
sbb
sbb
aaa
shll
cli
adcl
cmpsl
push
sti
cmp
lds
out
js
cs
xorb
cs
mov
jl
ficompl
cltd
cs
jp
cmp
sahf
sbb
lcall
lods
xchg
push
and
inc
jne
pop
scas
adcl
dec
sbb
scas
ficoml
cwtl
shl
fwait
fcomi
push
out
or
dec
add
mov
ficomps
shrl
aad
pop
or
mul
sahf
loop
jnp
jno
inc
js
or
ds
popa
adc
adc
int3
xor
mov
inc
or
jnp
or
ss
aas
mov
popf
scas
xchg
cmp
lock
cmp
xlat
loopw
scas
in
xlat
dec
fsub
sbb
pop
or
dec
mov
jns
out
inc
sarb
clc
adc
lcall
and
lcall
sahf
aad
sub
xchg
push
rcrl
nop
push
ror
jnp
sbb
mov
xorb
or
lock
lret
xchg
pop
push
stos
mov
cmp
lret
sbb
mov
scas
int3
cli
ret
cli
std
shrb
insb
ja
xchg
shlb
repz
cwtl
lods
sbb
rorb
negl
test
push
je
push
mov
xor
outsl
add
add
adc
notb
xchg
jp
mov
push
outsl
sub
and
and
cli
ret
out
shll
out
dec
stos
jge
lcall
push
push
jle,pt
jbe
mov
mov
mov
mov
sahf
xchg
mov
jns
cli
cmp
push
mov
ja
push
push
lods
push
xchg
cmp
push
push
loopne
in
push
fidivrl
scas
xlat
mov
add
out
imul
cmp
test
add
loop
xchg
pop
sbb
call
sub
mov
fdivrp
xlat
dec
dec
fcomp
insb
lahf
clc
scas
test
fs
and
rolb
dec
test
jbe
scas
ss
jecxz
ret
lock
mov
push
cltd
rcl
push
loopne
mov
jbe
lcall
ds
inc
lret
adc
ljmp
test
xor
sub
pop
pop
mov
cmp
nop
test
cmp
out
loopne
cmp
movsl
lahf
dec
sar
xchg
pop
scas
mov
xchg
bound
test
xchg
cld
jge
aam
sahf
ss
jb
scas
or
in
mov
cmp
dec
clc
or
insb
leave
xor
and
xor
mov
lods
mull
nop
inc
fimull
cmpsl
je
decl
jmp
pop
idivl
adc
ret
mov
cmp
sahf
gs
push
push
test
mov
test
sbbb
push
sti
pop
andl
fs
pop
sahf
fldenv
mov
push
dec
stc
lock
mov
ss
push
scas
rolb
movb
cmpsb
mov
and
inc
dec
inc
in
sbb
push
jns
cmp
ret
adc
clc
clc
xchg
pop
push
pop
mov
mov
test
mov
icebp
sbb
fistps
dec
mov
sbb
push
lret
sbb
xlat
add
mov
xchg
fwait
rcrl
xchg
adc
push
mov
out
xchg
mov
cmp
or
cmc
dec
inc
pop
das
xor
in
xchg
jnp
test
mov
inc
fists
mov
push
sbb
cmp
into
push
mov
and
out
dec
xchg
cmp
and
mov
or
inc
and
xchg
mov
xchg
mov
enter
mov
into
sbb
ja
mov
shlb
sahf
in
cmpsl
pop
push
out
jnp
add
fwait
sub
or
ds
jnp
pop
fcmovbe
mov
add
sbb
pop
sbb
fiaddl
pop
movsl
add
xchg
xchg
inc
add
aas
and
cmp
mov
or
lds
enter
add
cmp
jo
rcll
mov
lds
roll
pop
inc
daa
push
pop
lahf
inc
xchg
push
lahf
out
lahf
add
cmp
in
or
xchg
or
dec
mov
inc
rcrl
xchg
loopne
loope
or
lahf
xchg
adc
andb
add
imul
lods
daa
push
xchg
js
loop
xchg
inc
add
notl
sahf
dec
cmpsb
fsubrp
mov
mov
inc
and
data16
fcmovne
mov
dec
shl
call
adc
inc
push
cmp
add
pop
cmp
mov
mov
sbb
mov
mov
lret
rolb
imul
mov
fdivrl
insl
mov
and
xor
out
jp
push
fmull
stos
idivl
repnz
fs
mov
ret
pop
mov
std
arpl
jnp
mov
mov
push
mov
mov
jnp
sbb
shlb
adc
loop
dec
shl
lcall
lods
xchg
mov
mov
ss
ja
pop
mov
mov
jle
mov
inc
mov
jecxz
aad
mov
sar
or
loope
adc
stc
sub
mov
lds
sbb
pop
mov
adc
jl
fistl
leave
inc
fwait
out
and
add
cmp
jno
hlt
stc
clc
lods
jl
out
adc
push
push
lods
shll
jmp
testb
jne
sarb
pusha
fs
mov
leave
mov
stos
aad
mov
rclb
cwtl
scas
push
push
inc
inc
int
iret
ss
mov
jbe
inc
leave
add
out
sbb
movsl
jmp
repnz
pusha
test
and
add
sub
add
jge
and
cwtl
inc
sarl
pop
push
cmpsl
dec
addr16
into
xchg
adc
pop
stos
cmpsb
imul
aad
or
xchg
mov
pusha
lea
inc
inc
in
push
js
daa
or
lahf
pop
adc
inc
sub
pcmpeqw
clc
mov
loope
lret
sbb
jae
ret
inc
enter
mov
aaa
ja
mov
or
jne
dec
jno
ret
fs
mov
mov
dec
push
ficompl
fadd
mov
jno
mov
int3
inc
add
mov
push
enter
dec
dec
mov
dec
inc
mov
push
shl
mov
jmp
cmp
sbb
js
xabort
in
roll
test
fsubp
push
shlb
in
sbb
sub
push
loop
adc
scas
stos
ss
mov
leave
lahf
push
lret
call
pop
xorl
sub
push
inc
mov
cmp
mov
js
cmp
dec
jo
lods
icebp
and
ja
sbb
out
in
inc
ds
push
les
pop
and
jecxz
inc
cmc
cmp
push
xchg
add
mov
iret
in
push
xlat
push
aaa
mov
test
mov
mov
and
fistps
cmpl
dec
mov
stos
inc
cwtl
mov
mov
lcall
in
and
enter
xchg
fdivrs
mov
fsubp
fcomp
inc
mov
inc
dec
adc
mov
fs
orl
push
lahf
roll
pop
add
mov
int3
fstpt
pushf
cmp
and
test
addr16
mov
cld
out
dec
in
clc
leave
pop
xchg
mov
mov
fcomip
mov
mov
pushf
mov
ss
scas
jbe
xchg
mov
mov
cmp
xchg
dec
cltd
fildll
mov
push
inc
in
lret
or
lahf
adc
add
inc
je
add
cmp
data16
ficoml
enter
decl
ljmp
loop
call
mov
pop
movb
jo
ja
ret
or
aam
mov
faddl
push
inc
dec
xor
scas
out
lods
mov
cmp
add
sbb
push
cmp
loopne
aad
xchg
xchg
stc
sahf
or
xchg
call
mov
xor
dec
leave
adc
js
loopne
in
jge
adc
jecxz
out
in
pop
sahf
nop
int3
iret
sub
out
fidivrl
mov
jae
popf
test
dec
lods
jns
cs
pop
pop
inc
clc
ds
inc
daa
mov
push
pop
inc
testl
mov
push
jns
inc
sahf
fsubr
fisubs
repnz
pop
mov
push
add
xor
clc
ds
incb
sti
xchg
mov
les
repnz
stos
sahf
sub
xchg
mov
push
lret
mov
push
cmpsb
jbe
loopne
mov
sbbb
enter
jge
inc
sahf
jns
in
pop
lds
mov
sub
lahf
sbbb
mov
ja
pop
shrb
call
jne
and
sbb
xchg
mov
lcall
dec
mov
or
push
cli
push
test
dec
mov
mov
dec
sahf
cmpsl
dec
push
lock
aaa
mov
cmp
pushf
jns
sahf
into
mov
shl
fwait
mov
adc
repz
push
enter
sub
fdiv
pusha
cld
sahf
ljmp
push
aaa
out
sub
push
repnz
inc
mov
jmp
push
inc
divb
pop
dec
repnz
arpl
mov
std
push
adc
jle
ret
fsubr
and
inc
fbstp
push
adc
jo
jp
int
mov
rcl
enter
mov
cmpsb
jae
fildl
gs
push
mov
leave
shr
mov
push
bound
arpl
inc
cmp
and
aas
xchg
cli
aaa
out
inc
push
in
add
dec
ja
mov
call
sub
mov
mov
sti
ss
test
fidivl
lods
xor
push
add
lock
mov
jl
push
push
rclb
ss
imul
jnp
inc
lcall
jge
jns
test
cmpsb
out
scas
scas
sahf
inc
or
xlat
fwait
std
inc
xlat
cmp
lahf
shrl
xchg
sub
test
mov
aaa
jbe
out
clc
mov
mov
dec
pop
dec
inc
mov
pop
cmc
mov
mov
sub
xor
enter
sub
mov
ljmp
adc
cmpl
add
lret
push
push
or
fwait
xlat
jae
sbb
fwait
jg
add
add
xchg
mov
fwait
lahf
in
rol
lods
cmpsb
inc
sahf
fstpt
inc
sub
push
mov
jl
sub
inc
loop
fists
jmp
add
out
stos
ljmp
jge
jo
jno
aad
push
dec
lock
and
push
fnstcw
dec
fbld
jo
jmp
pop
push
dec
enter
fmull
push
or
push
lock
xor
jle
cmpsb
fstpt
fdiv
incb
scas
mov
sahf
or
test
mov
mov
mov
lcall
fistl
clc
aam
rcrb
cmp
dec
fcompl
idiv
or
jnp
mov
cli
add
mov
jle
ds
dec
cli
or
out
or
stos
mov
mov
or
sbbl
push
and
addb
aaa
push
sarl
cmp
cwtl
add
adc
xchg
push
push
sub
sbbb
push
push
add
arpl
or
cmp
dec
mov
cmp
or
leave
sbb
dec
cmc
jp
ds
or
add
out
shrl
mov
cmp
out
popf
push
out
xchg
sbb
call
mov
xchg
mov
push
loopne
jge
sahf
lcall
or
clc
cmp
imul
jae
mov
daa
notb
nop
or
rol
sub
mov
inc
das
jb
push
mov
loop
scas
rcrb
scas
sbb
pop
push
cmp
adc
cmp
push
or
push
repnz
xchg
xor
sahf
cld
sahf
dec
mov
jbe
pop
movsb
mov
jb
mov
dec
mov
enter
lea
push
mov
mov
out
jno
jbe
mov
test
icebp
sbb
scas
sub
mov
mov
icebp
lahf
pop
int3
sahf
ljmp
mov
cmp
sbb
adc
call
call
sbb
cli
inc
add
lahf
filds
out
mov
xchg
push
push
add
out
addr16
mov
fstl
push
into
lds
int3
mov
fidivrl
in
inc
rcrb
adc
xchg
lahf
add
popa
add
mov
int
sbb
mov
dec
in
cmpsl
cmp
enter
lock
or
dec
push
sahf
adc
mov
movsl
dec
inc
xchg
movb
mov
imulb
fistl
dec
lds
out
pop
mov
xchg
sbb
or
jp
mov
sub
movl
push
adc
cmpsb
cmp
cltd
outsb
enter
std
addr16
fidivl
rorb
cwtl
dec
and
aaa
dec
mov
pop
jne
les
popa
dec
in
jns
adc
es
inc
mov
sbb
push
sahf
cmc
adc
mov
outsl
mov
pop
jbe
lock
jbe
xor
loop
stos
insl
xchg
ja
sti
sahf
pop
mov
pop
das
repnz
enter
stos
stos
xchg
imul
call
addr16
add
adc
out
test
jb
sahf
add
xchg
push
cmp
stos
push
and
add
inc
push
shlb
popa
cmp
mov
test
andl
lahf
movsb
je
ja
or
lahf
pop
scas
dec
lret
aam
add
cmp
js
push
pop
aas
xor
dec
jl
inc
cld
cmc
add
insl
scas
out
push
les
xorl
pop
mov
aas
push
inc
mov
popf
je
inc
insb
mov
push
idivl
xor
decl
xchg
jecxz
lock
and
jl
jns
cs
jp
mov
push
xor
mov
dec
mov
leave
xchg
mov
mov
cmp
pushf
int3
pushf
imul
add
adc
mov
xchg
inc
cwtl
rcll
pop
xchg
out
fsubrs
aaa
mov
sahf
push
movsb
push
dec
and
mov
loope
jg
push
fimuls
test
aas
mov
es
scas
inc
xor
mov
adcb
loop
or
jge
sbb
out
or
jl
insb
xchg
mov
jmp
lods
inc
xchg
sahf
psubusw
or
xchg
pop
pop
roll
push
in
enter
jp
rdpmc
jne
jg
fldl
cltd
push
leave
leave
pop
sahf
out
adc
sbbl
sahf
nop
xchg
ret
test
ss
repz
add
fdiv
lds
jge
int
sbb
ds
lahf
lds
ret
pop
dec
add
int
sub
rclb
outsb
xchg
orl
sub
cmp
lahf
or
xchg
cmp
lret
ja
mov
data16
fnstsw
add
mov
lods
lahf
scas
ror
mov
enter
push
mov
xchg
cmp
stc
inc
mov
sahf
pusha
adc
pop
and
jns
stos
jge
cltd
mov
sahf
outsb
sub
dec
repz
call
sub
sbb
adc
hlt
test
insl
lds
leave
outsl
pop
cmp
pushf
push
mov
sub
in
xor
adc
scas
cmpsb
add
jmp
test
pmovmskb
ret
int3
mov
popa
xchg
jge
dec
int3
mov
mov
ljmp
push
mov
dec
mov
mov
push
mov
mov
mov
xchg
dec
sub
clc
dec
sub
push
sub
xor
mov
cwtl
add
cmp
fisubrl
dec
jl
nop
inc
aas
ret
fidivrl
cmp
xor
mov
loop
aas
test
inc
pop
mov
jo
out
sbb
sbb
addr16
rolb
mov
add
or
mov
add
pop
sbb
scas
js
arpl
inc
pop
cs
rcrl
aam
mov
mov
sub
in
inc
test
shlb
jne
sahf
sub
cwtl
pushf
loop
pop
pop
je
cmp
mulb
mov
pusha
ja
jae
fldt
jo
call
fdivrp
test
or
pushf
mov
add
inc
sbb
or
jle
pop
jle
out
test
pop
mov
push
push
mov
fnstsw
adc
std
es
sbb
out
or
inc
mov
or
push
jnp
mov
leave
lret
loopne
xacquire
mov
pop
cmp
pop
dec
jecxz
xlat
sarb
cmp
hlt
aad
mov
loop
cmpsl
jg
and
loope
mov
popa
add
sbb
lret
inc
fstpt
pop
pop
ljmp
jb
jns
mov
push
xchg
mov
ss
jp
xchg
dec
mov
lods
pop
mov
sbb
jbe
dec
test
push
xchg
testl
out
inc
fwait
ja
cltd
les
lret
mov
ror
jne
dec
jg
lods
out
mov
jle
add
test
mov
or
clc
mov
xlat
stos
lcall
pushf
pop
es
scas
call
lods
test
stc
pushf
daa
jge
sbb
shrd
hlt
or
or
sahf
inc
frstor
push
pop
aam
popf
ja
mov
adc
insb
add
stos
mov
fnsave
bound
fisttpll
cmpsb
enter
aas
inc
push
jle
mov
add
xchg
mov
andb
dec
mov
mov
sahf
mov
ja
xchg
repz
aad
or
cld
mov
adc
cwtl
cmp
out
push
bound
dec
les
sub
cmp
sti
xchg
test
ficompl
mov
or
orb
fistl
xlat
popa
aaa
gs
mov
pop
jo
lds
push
sbb
ret
xchg
inc
js
and
loopne
les
mov
xor
jnp
cli
inc
pop
xchg
dec
dec
push
hlt
push
dec
sbb
xchg
cmpsl
sub
lcall
fcmovne
or
dec
out
shr
lds
mov
or
int
fwait
in
hlt
rcr
insl
testb
inc
lods
push
push
divb
aas
fwait
mov
and
outsb
jge
sub
pop
out
pusha
or
or
inc
ja
lahf
scas
cmpsl
or
pop
pop
in
aam
or
call
add
data16
jbe
imul
mov
loop
sub
sub
clc
fdivl
les
clc
enter
cwtl
fcmovnbe
push
cli
add
adc
dec
fidivl
es
clc
fnstsw
push
jecxz
lret
push
mov
lahf
lahf
out
icebp
or
out
dec
stos
push
mov
sbb
loop
mov
cmpsl
subl
lcall
push
sbb
xor
mov
lahf
ja
jnp
lods
push
outsb
outsb
cmp
fdivs
cmp
sub
movsb
in
push
sar
lahf
andl
adc
mov
test
add
loop
pop
int3
stos
adc
icebp
jle
mov
into
sahf
lods
mov
push
pop
fidivrl
stos
push
jle
lahf
sbb
lea
mov
les
scas
mov
inc
fimuls
xchg
clc
mov
ja
xchg
and
stos
jno
lret
xor
or
jg
lret
and
dec
mov
mov
insb
bound
mov
test
call
ficomps
mov
jmp
and
dec
aad
push
adc
lcall
jae
xor
push
mov
add
xchg
mov
cmp
adc
testl
cmp
ret
pop
inc
out
jg
or
mov
pop
pop
enter
mov
fistps
push
sarb
mov
ja
lret
add
in
mov
adc
je
mov
and
adc
add
divl
sbb
push
in
jle
rcrl
leave
fistpll
mov
push
das
in
jne
push
scas
cmp
xor
mov
lret
sahf
cmpxchg
xor
fimuls
mov
dec
add
loop
cmp
movsb
xlat
mov
jno
aaa
jnp
idivl
scas
jnp
outsl
orb
mov
add
mov
cmp
lods
dec
ss
mov
sub
sahf
loopne
cmp
mov
stos
cmpsl
and
mov
mov
or
inc
push
aad
outsb
mov
cmp
inc
xchg
push
inc
mov
push
cli
dec
cmp
push
sbb
jae
mov
outsb
fadd
adc
mov
fstpl
dec
stos
lahf
xor
insl
xlat
les
push
lahf
ja
dec
scas
lds
jp
negl
sarb
sbbl
div
xchg
mov
jbe
inc
inc
dec
push
iret
fwait
in
jb
push
or
mov
mov
inc
sti
push
inc
dec
rcrb
cltd
lahf
pop
movsl
movb
adc
fldenv
mov
mov
inc
mov
xor
jae
mov
mov
testb
not
and
cmpsl
or
mov
flds
and
push
push
inc
inc
test
cld
mov
sub
js
pop
cmpl
ds
jae
dec
pop
mov
call
negb
lahf
add
sbb
push
jle
pushf
mov
pop
jae
mov
inc
adc
sbb
jmp
pop
pushf
fistl
or
shrl
add
and
jo
lcall
cltd
mov
xchg
xor
enter
pop
outsb
inc
cmpsl
sahf
dec
loopne
mov
sbb
pusha
andb
lds
bswap
xchg
imul
sbb
push
cli
or
or
test
lcall
sbb
xchg
inc
sub
add
push
push
jns
mov
mov
dec
aam
gs
jg
and
xchg
jp
push
addr16
outsl
sarb
mov
mov
xor
or
jmp
jnp
mov
cmpl
unpcklps
xor
ja
lods
xchg
aas
sbb
cs
popa
subb
js
int
fcoms
xor
push
jl
pushl
mov
shrb
inc
mov
push
push
xor
add
cwtl
hlt
pushf
cmp
push
js
mov
ret
or
jbe
cwtl
out
xchg
cmpl
mov
nop
pop
mov
pop
testb
jp
pop
es
jp
loopne
xchg
dec
pop
test
js
push
sub
push
dec
stos
cmp
negb
mov
cld
dec
lahf
inc
mov
pop
mov
jle
std
leave
push
jne
inc
push
and
lahf
mov
jns
mov
mov
aas
fbstp
inc
in
mov
stos
xor
inc
inc
sahf
lods
decl
pop
data16
icebp
jns
lods
pop
and
arpl
repnz
push
xchg
mov
arpl
cli
xor
lods
dec
mov
push
or
sahf
cmp
in
daa
push
jb
shll
mov
jp
push
pop
ds
mov
and
cwtl
jle
pop
mov
mov
scas
sahf
jge
in
pop
adc
cmp
and
xchg
sahf
test
add
sar
adc
leave
cltd
ja
sti
lea
fcmovnu
daa
ja
lret
leave
inc
pop
mov
aaa
repnz
in
mov
mov
mov
sub
xor
in
test
stos
or
or
xchg
ss
int
popf
imul
add
mov
mov
dec
inc
sahf
mov
or
ret
sahf
add
sub
stos
or
jl
mov
pop
cmpsb
js
fmulp
repnz
mov
movsb
psubsb
les
mov
add
aaa
jbe
cmp
adc
or
fidivl
aaa
push
movsb
or
mov
rclb
inc
mov
add
xorb
aam
mov
mov
mov
pop
pop
mov
adc
mov
inc
ja
dec
push
mov
mov
aaa
mov
xchg
mov
mov
lcall
jg
sbbl
sahf
xchg
mov
xchg
shrl
ja
jg
lret
call
lds
imul
cmpsl
test
lods
xchg
scas
dec
repz
arpl
sbb
fcompl
adc
xor
sahf
les
lahf
mov
lret
lahf
fadd
xchg
movswl
cld
scas
scas
ss
lahf
test
shlb
push
inc
lcall
push
idivl
add
xor
fadd
inc
lahf
push
push
inc
insb
jne
test
data16
and
jge
lahf
sub
and
sub
push
decb
inc
sub
out
fs
jae
ljmp
test
or
into
or
decb
and
cmp
mov
pop
xchg
sbb
and
add
popa
mov
mov
jo
dec
sub
aaa
arpl
pushf
inc
jne
and
fldl
mov
push
push
xchg
push
js
sbb
sbb
out
or
and
dec
sti
pop
js
mov
inc
sbb
icebp
into
inc
ja
push
push
mov
dec
dec
pop
pop
in
adc
and
cmp
outsb
ss
rcrl
jge
jmp
shlb
add
adc
stos
icebp
dec
jmp
fcmovnbe
pop
cmc
lcall
jb
inc
js
cwtl
mov
aaa
nop
pop
sbb
xor
dec
add
add
cmp
mov
adc
movsl
roll
imul
sub
insb
shlb
stos
push
sbb
inc
push
adc
out
push
dec
mov
fcmovnbe
inc
aas
sbb
ret
sti
sbb
sub
lods
scas
pop
cmp
pop
popf
into
add
nop
adc
add
lea
lods
pushaw
daa
mov
cmp
jl
movsl
dec
rol
xor
call
add
push
shlb
shlb
push
jnp
outsl
dec
sbb
dec
lret
loop
jo
ja
sahf
jb
pop
lahf
out
and
in
lds
inc
inc
inc
mov
cmp
jbe,pn
mov
xchg
dec
stc
sbb
std
je
lock
ret
ficomps
repnz
leave
adc
jnp
shll
mov
and
push
out
and
jno
out
cld
jo
jmp
sub
out
lret
lock
fmull
sub
neg
rcr
and
lahf
jae
ljmp
xchg
adcl
imul
xor
fildll
push
jae
dec
ds
xor
mov
dec
sub
test
in
test
sahf
add
cmp
aad
lahf
pushl
cmp
inc
ret
jle
ljmp
ja
subb
movq
mov
push
push
aaa
inc
adc
shll
pop
fnstenv
loope
or
loopne
repnz
std
div
js
jns
lret
push
jnp
je
sahf
out
or
nop
mov
dec
popa
rcrb
sub
push
push
into
outsb
sub
mov
mov
pop
add
in
inc
xchg
pop
fsubl
inc
aad
push
aas
in
imul
push
cmp
sarb
jmp
mov
jnp
fisubl
testb
shll
xchg
ret
popa
push
ds
sahf
inc
pop
inc
fimull
pushf
shl
stc
clc
or
nop
mov
jno
adc
bound
jb
fcoml
imul
enter
mov
fsubrl
pop
xor
jp
push
outsl
lahf
dec
cmpsl
sbb
rol
inc
stos
mov
imul
mov
rclb
movsl
inc
in
and
cmpsb
mov
pop
ficoml
and
lcall
jb
xchg
stos
pop
data16
cmpsb
jae
ja
jo
dec
stc
cmp
sahf
fstpl
inc
mov
mov
fisubl
push
push
cli
xchg
enter
test
add
mov
imul
jb
movsl
or
and
test
cwtl
mov
jne
xlat
aaa
ret
xor
fld
add
ret
mov
xor
push
pop
ss
or
lods
out
outsl
daa
iret
int
inc
mull
mov
clc
xchg
fimull
mulb
mov
push
xchg
xchg
call
or
lock
cli
insl
lahf
jmp
adc
ret
les
push
or
jg
out
fimull
jbe
jl
mov
scas
outsl
jecxz
xchg
mov
xchg
rcl
jecxz
negb
cld
mov
mov
rclb
dec
leave
inc
arpl
ljmp
pop
andb
sbb
cmp
sahf
outsl
adc
or
dec
inc
sub
push
inc
mov
loopne
inc
test
ror
sbb
sbb
addl
mov
push
jecxz
cs
mov
insb
loopne
cld
mov
fidivrs
cli
pop
add
cmp
push
push
push
or
lock
aas
ss
sahf
nop
cmp
add
mov
rol
ret
js
lods
aaa
jnp
mov
dec
jp
adc
inc
cmp
pushf
loop
lret
jle
or
call
loop
enter
mov
loope
mov
shlb
xor
insb
cld
mov
int
or
in
inc
push
js
xor
mov
nop
ss
out
adc
inc
insb
xor
data16
xor
cltd
xchg
adc
loop
fcomps
push
sbb
push
andb
add
cmp
scas
dec
sbb
push
jle
sahf
mov
aas
ret
mov
cltd
clc
loop
test
push
adc
lock
xchg
push
int
scas
push
dec
ret
test
repz
std
lret
daa
dec
fadd
xor
vucomiss
sti
mov
mov
imul
ss
cmp
mov
fnstenv
stc
mov
repnz
mov
cmp
out
or
mov
imul
sub
or
mov
in
push
aad
nop
mov
adc
mov
sbb
scas
mov
jecxz
out
fs
mov
sub
lock
mov
sahf
cmpsb
out
push
sti
sbb
push
mov
xorl
xchg
cmpsb
ret
mov
mov
out
aas
sbb
lahf
add
jne
sub
push
cwtl
xchg
mov
jl
das
inc
mov
adc
jle
pop
pop
mov
mov
dec
lret
stos
cmp
int
in
loope
loopne,pt
adc
cmpsb
rol
sbb
out
sub
dec
and
add
pop
jecxz
xchg
dec
push
adc
idivb
ljmp
repz
dec
mov
sbb
dec
inc
mov
movb
dec
pop
pop
jbe
add
pop
mov
stc
inc
adc
dec
push
push
jae
push
lds
pop
push
inc
mov
sti
movsl
mov
push
and
dec
dec
pusha
cmp
popa
ljmp
enter
mov
nop
xor
mov
pusha
adc
mov
or
roll
push
mov
adcb
repz
jne
cltd
ds
fcoml
outsl
cmpsb
aad
int
dec
push
repnz
lcall
xor
add
inc
cmpsb
testb
push
sti
cld
jl
add
mov
ret
rorl
inc
mov
sahf
int3
cld
push
mov
mov
mov
jmp
fmuls
fcoml
and
int
push
gs
dec
scas
add
sahf
inc
cmp
repz
pop
iret
xchg
movsl
into
in
pusha
dec
inc
out
clc
loopne
jp
dec
fimull
aad
lahf
lret
sarb
sahf
cli
cmpsb
pop
mov
cwtl
mov
clc
rorl
test
mov
adc
dec
in
pop
shl
daa
sbb
jg
ret
lea
inc
ret
imul
or
cli
ljmp
dec
mov
sbb
push
dec
add
insb
call
outsb
ret
int3
imulb
add
mov
jnp
or
fsubrs
jg
xor
in
dec
cmp
mov
push
leave
inc
push
xlat
std
inc
dec
imulb
inc
pop
fcmovbe
push
inc
cmp
or
out
mulb
jl
lahf
gs
lds
xor
jo
and
inc
in
scas
pop
movl
or
sbb
mov
cmp
sar
stos
sahf
dec
faddp
in
fwait
paddusb
inc
mov
jge
inc
enter
inc
testl
sbb
fcoms
xchg
js
ja
insl
stos
popf
leave
stc
jo
inc
mov
cmp
xchg
fiaddl
jp
jb
pop
ret
out
iret
pushf
leave
fcmovbe
aaa
xchg
push
dec
mov
cmp
mov
adc
lods
add
lret
mov
sub
sbb
aaa
lahf
jne
int
fcomp
xchg
jnp
dec
mov
xor
sbb
push
dec
sahf
pop
into
in
ljmp
jp
sahf
test
inc
jg
inc
pushw
lock
ja
clc
pop
ds
sub
push
push
repnz
cmc
cmp
adc
enter
jmp
lcall
sub
js
aas
add
inc
push
xor
jne
xchg
fstpt
arpl
ret
sahf
or
int3
adc
addl
cmp
cmp
fildl
mov
lds
cmp
inc
jmp
mul
out
sbb
dec
jns
insl
push
xchg
mov
or
pop
push
mov
xchg
push
mov
ror
sti
int3
outsl
add
decl
jno
mov
jno
out
xchg
outsl
pop
xorb
sar
das
adc
xor
adc
ds
nop
adc
jnp
push
add
and
stos
rcrl
push
dec
rcr
movsl
ss
push
out
jbe
dec
jmp
insl
test
mov
adc
mov
icebp
shl
mov
or
push
int3
sti
lock
movb
mov
in
pop
or
in
incb
cmc
fsubr
push
mov
cmp
orl
and
xor
in
xchg
negb
inc
fwait
lea
int3
sahf
pop
stc
cli
out
popf
ss
inc
ds
fcomps
xchg
adc
push
outsb
cmp
out
pop
mov
aad
pop
or
ret
fwait
or
xchg
mov
insl
popl
inc
push
mov
lahf
push
and
rolb
bound
push
pushw
int3
jnp
enter
push
adc
inc
ret
out
push
es
lret
inc
sub
pusha
mov
adc
cmpsb
repnz
push
jns
push
mov
push
cld
push
jecxz
sar
xchg
xchg
fs
jae
or
pop
loop
cmp
jbe
or
data16
stc
jb
dec
mov
mov
mov
lahf
arpl
push
aam
xor
xor
xlat
repz
lret
cld
pop
mov
xchg
shrl
or
xchg
inc
lahf
sbbl
das
inc
xor
lcall
push
pop
push
shlb
les
in
pop
sahf
cmc
repz
rcrl
ss
jne
stc
adc
dec
js
push
push
jbe
lret
xchg
or
into
test
push
lahf
jb,pt
mov
movsl
sahf
int3
rclb
ss
mov
adc
add
sti
movsb
fdivrl
fs
int3
cld
pop
repnz
sahf
push
mov
add
imul
mov
inc
xor
enter
mov
lods
sar
mov
jp
mov
mov
out
dec
xchg
pop
push
jle
repz
fldcw
daa
daa
lcall
lahf
test
ds
mov
rcl
pop
inc
pushf
out
enter
cli
in
lods
mov
fimull
inc
mul
lds
nop
fcmovnbe
movl
dec
cmpsb
cwtl
push
cmpsl
adc
lahf
loopne
push
in
xchg
pop
lock
repz
lahf
pop
cs
xor
mov
jns,pt
mov
inc
jmp
jge
mov
mov
or
imulb
lcall
push
enter
inc
or
push
mulb
jbe
or
int3
les
jns
adc
sbb
jle
jp
mov
adc
out
xor
repz
and
out
lods
and
shll
stc
negb
out
adc
int3
push
rorb
lret
test
sahf
push
adc
push
idivb
cwtl
add
fwait
cmp
fstpt
add
pop
dec
xchg
or
imul
mov
ljmp
imulb
loop
test
jmp
clc
and
movsl
push
test
and
pop
mov
sub
push
inc
mov
or
xor
mov
xchg
mov
not
or
clc
fwait
mov
sbb
jbe
add
jl
or
inc
sub
jnp
jg
aas
orb
pushf
fildl
push
cmp
xor
cmp
mov
or
out
test
dec
fcmovb
inc
cmpsl
pusha
test
pop
sbb
dec
inc
imul
imul
pop
mov
pop
lahf
jge
jg
stos
adc
sahf
mov
roll
mov
scas
test
push
push
and
push
jb
subl
adc
jp
testb
rorl
int
dec
scas
rol
shld
lretw
lahf
cmp
jne,pn
enter
jbe
xor
mov
into
push
push
cs
scas
adc
dec
and
cmp
mov
or
cmp
dec
iret
shrb
aad
adc
or
fs
mov
sbb
ficompl
repz
sub
jnp
mov
into
scas
jp
add
jge
jg
mov
cld
out
mov
xor
jb
push
arpl
or
push
bound
loopne
daa
inc
sbb
out
shlb
out
shrl
and
lea
ljmp
adc
sahf
mov
shlb
adc
cmp
or
gs
jns
jo
sahf
lds
test
cmc
leave
xchg
out
ficomps
mov
ds
pushf
ss
sbb
inc
stc
sub
test
loop
sub
inc
mov
or
jo
std
jae
or
pop
jne
push
out
int
sahf
ret
cmp
xchg
das
mov
rcr
bound
jo
sbb
lods
stos
ja
xchg
pop
xchg
pop
imul
loop
jbe
lahf
push
mov
mov
or
mov
insb
jnp
inc
xlat
inc
jae
stos
mov
into
inc
mov
dec
daa
pop
ss
add
mov
mov
clc
dec
aaa
jg
mov
mov
push
ss
xchg
fsub
jo
pop
adc
aam
dec
fdiv
pushf
add
movsl
jp
fsubl
or
or
mov
inc
repnz
icebp
inc
add
xchg
mov
inc
sub
sbb
gs
imul
dec
push
mov
dec
test
sti
xchg
int3
mov
push
shrb
divb
and
sahf
lret
sbb
and
push
lock
fnsave
mov
and
aam
pop
imul
ss
insb
jmp
dec
pop
outsb
inc
cltd
loop
movsl
add
loopne
std
mov
push
ljmp
in
int
push
test
mov
or
jne
mov
pop
icebp
pop
push
push
rorl
mov
enter
popa
call
outsl
clc
inc
push
and
das
mov
push
mov
outsb
out
mov
push
scas
jnp
inc
push
movsl
out
pop
jae
push
or
into
mov
ja
out
inc
mov
js
in
aaa
mov
push
cltd
push
jb
xlat
mov
jnp
sub
push
fst
push
popa
cli
je
test
cmc
or
jnp
mov
jp
js
loop
dec
push
leave
mov
negl
xlat
xor
mov
add
pop
call
pop
inc
leave
arpl
popa
into
mov
int
and
imul
je
cmp
or
mov
femms
mov
push
test
jl
inc
lods
mov
fsubrs
notb
cmp
fxch
stos
and
in
stos
pop
nop
lcall
dec
cmpsb
inc
xchg
dec
mov
mov
movntps
enter
mov
test
cmp
loop
or
dec
mov
mov
loopne,pn
sbb
inc
insb
jb
ret
mov
and
into
nop
adc
pop
inc
clc
pushf
jg
rolb
aad
ss
pop
imul
pusha
jg
add
dec
pop
test
hlt
adc
add
out
inc
or
pop
loop
sahf
call
js
or
and
loop
ja
mov
dec
aad
or
cmpb
test
adc
dec
mov
aam
mov
neg
mov
outsl
out
cmp
push
or
fbstp
jp
loop
sub
scas
mov
add
pop
mov
push
push
add
imul
mov
bound
xadd
fstl
fwait
jno
hlt
dec
cmp
jo
or
jne
or
xlat
fsqrt
cwtl
orb
pop
divl
subb
lock
lret
pop
mov
mov
xor
push
sub
js
push
fcomi
fcomps
andl
jle
cli
ss
add
aaa
push
shlb
dec
negb
rcll
movsl
xlat
mov
push
push
or
jbe
cld
dec
aas
xchg
cli
es
sbb
out
xchg
cmp
insb
add
xorb
jo
mov
pxor
push
adc
sbb
sbb
cmp
cmp
arpl
mov
mov
in
jb
mov
or
loopne
ja
adc
imul
out
test
clc
daa
push
inc
clc
xchg
or
fs
push
adc
adc
or
mov
fnstsw
adc
enter
inc
mov
dec
mov
mov
cmp
sahf
loopne
adc
adc
fldl
mov
lods
outsb
and
push
adc
daa
iret
mov
sbb
sbbl
je
mov
cs
mov
inc
adc
int
fwait
mov
xchg
outsl
sub
or
mov
and
inc
ljmp
add
cmc
dec
aas
mov
mov
mov
adcb
xchg
lahf
sahf
mov
mov
popa
cmpsl
xchg
outsb
inc
add
and
aaa
dec
jg
loopne
jnp
lahf
mov
sti
ror
mov
outsb
rol
xor
and
xlat
cs
mov
pop
gs
push
lahf
cmp
dec
dec
or
notb
ljmp
push
fiadds
mov
cmp
repz
cmpsb
dec
jbe
test
lcall
fucomi
mov
out
add
mov
xchg
jne
mov
lds
lahf
pop
mov
jle
ret
out
idiv
std
inc
sub
pop
jae
inc
xlat
ret
leave
mov
notb
pop
add
mov
adc
inc
ret
add
pop
adc
sahf
mov
pop
outsl
lahf
mov
aas
mov
movsb
lahf
adc
and
lahf
outsl
adc
and
and
jp
fistps
rcl
xlat
or
xor
orl
outsb
or
loop
ds
ds
aas
nop
xchg
xchg
inc
test
cmpb
bound
or
insl
xchg
lock
cmp
jge
out
jbe
lcall
mov
call
mov
fmul
jbe
jl
mov
subb
inc
mov
push
test
sub
sbb
lds
mov
test
aam
ss
adc
xchg
cwtl
mov
call
xchg
cmpsb
or
and
cmp
mov
sub
push
mov
aas
stos
sub
inc
fs
aam
jle
in
jecxz
call
mov
dec
mov
das
lahf
mov
fstl
js
xchg
push
or
lahf
mov
in
data16
in
mov
push
xchg
int3
xchg
adc
sti
int
inc
push
pop
xchg
frstor
adc
loop
stos
xor
jb
inc
and
scas
sub
jecxz
add
adc
dec
ffree
mov
add
push
rorl
test
addr16
xchg
mov
je
iret
stos
dec
pop
ret
in
xor
fdivs
das
inc
shll
movsl
push
aam
xor
loop
hlt
ss
or
jnp
xchg
in
test
les
fsub
dec
cwtl
pop
vpcmpgtb
xor
pop
sbb
inc
sub
mull
fidivs
push
lcall
cmp
std
dec
adc
cmpsl
fcoml
fxch
push
cs
sahf
loopne
jae
fimull
xchg
xchg
push
push
xor
or
out
push
inc
pusha
adcl
lds
sahf
fwait
jmp
movsl
push
or
cmp
and
out
cmp
push
mov
pop
mov
or
pop
inc
sbb
inc
push
add
push
mov
ss
in
test
inc
jp
adc
adc
push
stc
loope
or
aas
cmp
push
movsl
testb
in
push
mov
outsb
ret
inc
push
int3
cmp
scas
add
xor
lock
dec
jae
xchg
js
cmpb
inc
arpl
scas
movsb
jp
sub
pop
add
ss
jg
mov
out
xor
pop
jb
pusha
cs
adc
mov
push
push
sbb
jl
sbb
and
scas
mov
xchg
and
xchg
and
xor
test
sarb
inc
ljmp
jns
mov
pop
repz
inc
ret
mov
dec
incb
dec
das
mov
aad
adc
es
stos
lods
into
pop
lock
adc
cld
push
es
int
gs
cmp
xor
in
or
test
sbb
pop
cli
dec
mov
xor
hlt
sub
adc
cmp
xor
pop
repnz
push
jmp
aas
jmp
pop
push
push
iret
outsb
push
popa
push
or
jns
outsl
int3
ss
flds
and
out
mov
fdivrs
icebp
je
repz
sahf
push
mov
in
dec
lock
inc
mov
mov
iret
xor
and
in
mov
outsl
rol
mov
fwait
inc
inc
stc
xor
dec
mulb
ja
in
mov
mov
pop
pop
inc
jecxz
cmp
clc
cli
mov
dec
pop
not
aad
fistps
lahf
mov
mov
mov
mov
jmp
shll
lret
xchg
lahf
dec
jp
les
dec
in
xchg
pop
inc
mov
mov
lret
aas
mov
outsb
and
roll
xor
mov
mov
xchg
jg
test
xchg
ja
sub
out
jbe
pop
aad
sub
cmp
out
push
xchg
xor
out
mov
jl
lcall
fcomp
orl
mov
addr16
sti
push
adc
adc
dec
fnstcw
jns
mov
mov
cmp
out
out
lahf
pop
cwtl
add
lods
mov
sub
sbb
push
sbb
add
lahf
jecxz
out
jae
sti
lea
cmp
cmp
adc
ss
xchg
dec
dec
int
stos
mov
daa
dec
ret
fldcw
and
in
cs
pop
or
jp
enter
fwait
mov
clc
xor
push
cmp
add
outsb
jmp
mov
sub
mov
dec
sahf
sbb
add
inc
or
les
sub
lds
dec
outsl
or
inc
in
xchg
push
bound
dec
test
mov
sbb
sti
push
leave
leave
out
lock
push
repnz
dec
fnstenv
xchg
push
mov
sbb
add
aaa
aas
aaa
xor
pop
mov
cmc
rcrb
sbb
loop
fsubs
xchg
xor
or
push
mov
jne
jp
jmp
inc
cltd
mov
aas
lods
sti
push
mov
mov
ljmp
jae
dec
mov
ja
xor
inc
ja
ljmp
lret
push
bswap
mov
xor
and
enter
stos
movsl
ret
xchg
xchg
sahf
in
ret
push
jno
jnp
icebp
jbe
mov
loop
mov
adc
sahf
cmp
mov
push
dec
sbb
outsl
jnp
jmp
push
mov
inc
mov
jno
push
mov
push
dec
cltd
mov
lret
add
bound
inc
mov
cmp
or
cmp
rorl
sub
sbb
dec
lea
das
dec
divb
pop
repnz
xor
mov
addr16
test
inc
inc
data16
dec
add
adc
pushf
insb
test
push
add
decb
sahf
pop
xchg
xchg
and
add
mov
xchg
out
or
xor
mov
xor
ss
out
cld
test
jmp
mov
xchg
mov
es
scas
jns
lcall
inc
xlat
sahf
pop
mov
js
xchg
lds
jo
adc
inc
cmpsl
fistps
sbb
or
gs
mov
fs
shll
lret
mov
xchg
sahf
ret
stos
cmp
fldt
pop
nop
or
inc
and
loopne
push
dec
cmp
das
enter
dec
iret
xor
repnz
jae
lods
xchg
insb
ret
xchg
pop
andb
fsub
idivb
push
push
leave
sti
xor
or
mov
lea
mov
imul
fs
test
jb
mov
stos
push
mov
or
lock
lock
out
lahf
enter
pop
leave
cli
icebp
ss
leave
roll
add
xchg
ja
mov
push
je
sahf
jae
outsb
mov
adc
pop
mov
sub
fcoms
cmp
or
adc
enter
adc
cwtl
or
or
fucomip
loop
pop
js
mov
mov
mov
inc
js
inc
sub
out
lea
das
ror
mov
sub
mov
add
add
out
dec
hlt
shlb
adc
sub
xchg
out
or
add
fldenv
mov
xlat
cli
push
das
push
jg
jl
mov
mov
pop
leave
xor
and
push
arpl
testb
or
cli
lods
int3
mov
inc
cmp
or
cmp
or
gs
push
and
jl
ds
push
inc
jb
push
out
lods
shr
imul
stos
ss
lds
inc
test
lret
jp
int3
sub
mov
fistpl
mov
sbb
out
sub
fs
adc
je
ds
outsb
lret
aaa
jmp
and
mov
out
xor
lods
add
and
xor
inc
andl
add
mov
loop
enter
aaa
lods
mov
mov
in
lods
jge
cmc
cwtl
std
adc
sub
test
mov
add
jo
jecxz
lcall
mov
inc
lret
insl
icebp
shl
div
stos
hlt
jb
pusha
ffree
jle
sbb
add
inc
jp
pop
jle
nop
pop
push
aas
mov
adc
enter
mov
push
jo
loope
out
sbb
pop
inc
pushf
push
jne
add
xor
mov
jp
jg
mov
xor
mov
jp
jno
jnp
shrb
jb
dec
out
mov
dec
lahf
sub
das
into
ficoms
xchg
or
sub
into
loop
cmp
xchg
push
sbb
mov
inc
scas
jne
jo
sarb
mov
into
mov
data16
jnp
sub
dec
mov
incb
cli
push
jns
mov
cmp
fisubrs
icebp
inc
or
dec
add
adc
pop
rcll
outsl
test
lret
cmpsb
bnd
or
and
sarb
clc
jp
sbb
jbe
mov
sub
lods
leave
mov
aad
xchg
out
inc
outsb
leave
leave
xchg
ja
sbb
or
mov
mov
in
mov
cltd
cmpsb
mov
sub
sub
imul
scas
in
inc
mov
sub
or
jmp
cs
jnp
cmp
lahf
in
xchg
loope
cmpsl
cli
mov
jecxz
cmc
mov
out
dec
or
sub
aas
loop,pt
stc
add
or
fildl
aaa
jecxz
push
push
push
cmp
daa
out
adc
or
jg
cli
pop
pushf
out
sub
add
jle
push
out
xlat
pop
leave
test
xor
inc
push
loopne
out
pop
adc
ss
lcall
mov
rcrb
xor
add
scas
test
es
clc
jmp
lds
outsl
fbstp
stos
mov
mov
mov
out
stos
mov
into
add
mov
ja
mov
push
dec
mov
clc
scas
sub
or
outsl
cmp
out
xchg
out
or
insb
iret
scas
rorb
sbb
push
xlat
hlt
jg
leave
popf
add
add
aas
dec
iret
insl
mov
pusha
cld
cmp
pop
frstor
aaa
cli
scas
cld
inc
jg
addb
or
out
movd
clc
sbb
sub
add
aas
xchg
sbb
icebp
pop
test
lahf
sbb
int
cltd
icebp
sbb
jnp
cli
mov
push
negl
pop
cmc
gs
pop
add
cli
les
push
adc
bound
pop
sahf
cmpsb
loop
inc
mov
call
mov
cld
sub
sahf
aaa
add
enter
pop
inc
inc
js
jbe
jmp
lock
loop
icebp
inc
ja
and
loopne
sub
out
fs
adc
cltd
out
push
xchg
dec
inc
iret
push
mov
std
add
insb
enter
xor
jge
sbb
add
fbld
push
dec
jae
lret
cld
pop
xchg
enter
push
or
mov
inc
push
push
add
enter
leave
jle
icebp
addb
jmp
mov
pop
mov
sub
sbb
lahf
sbb
outsl
add
arpl
push
mov
cmpsl
mov
aam
push
dec
mov
sahf
inc
cmpsl
jae
adc
mov
jb
cmp
mov
dec
enter
outsl
xchg
xchg
add
xor
notb
cmp
mov
in
or
sbb
jmp
repz
mov
push
lods
mov
popl
call
add
mov
imul
inc
lds
xlat
loopne
ja
mov
les
adc
sbb
nop
add
imul
enter
or
addr16
jecxz
dec
dec
xchg
sahf
mov
dec
jbe
push
xchg
out
jno
jne
out
push
js
sbb
and
or
movsb
je
negl
mov
int3
insb
xchg
sbb
je
mov
jno
cwtl
mov
cli
aad
xlat
enter
gs
jae
push
jle
cmp
pop
ljmp
adc
cld
lahf
into
popf
lahf
daa
add
pop
mov
hlt
adc
sub
js
inc
js
nop
xchg
cmp
pusha
inc
hlt
push
inc
repnz
leave
or
test
enter
xchg
ss
push
cmpsl
pushl
iret
ja
pop
out
jle
dec
orb
xor
lret
incb
push
xor
mov
inc
sbb
loop
adc
ja
cmc
inc
popf
push
ss
add
vmulss
mov
inc
or
cmc
clc
pop
lds
pop
jb
sti
mov
push
sub
push
jecxz
xlat
and
lret
loop
rcrl
in
xchg
iret
lahf
cmp
push
and
into
shl
test
cmpb
or
data16
mov
sub
fwait
aas
sahf
std
add
adc
mov
addr16
inc
adc
je
add
fld
mov
jnp
arpl
cmp
dec
lret
punpckhbw
sub
push
aaa
push
xchg
repnz
dec
addr16
inc
sbb
fisttpl
sbb
popf
enter
push
mov
cmp
inc
push
lahf
data16
pop
sbb
cwtl
mov
inc
add
cmp
pop
push
sahf
xor
cs
icebp
sbb
fwait
inc
cs
jecxz
jae
xchg
ljmp
call
out
ret
loop
cwtl
clc
ret
sub
shlb
cmovp
bound
ds
xor
movsb
push
mov
inc
jnp
inc
lods
xchg
lret
push
pushl
jecxz
push
inc
lret
fisttpll
cmp
jo
sbb
pop
out
or
jne
sbb
mov
aaa
pop
js
andl
pop
cmpsl
xadd
mov
xchg
lcall
mull
pop
dec
mov
inc
aaa
je
jns
xchg
or
out
adc
aas
jb
push
hlt
loop
dec
inc
mov
rcrl
fidivs
add
sbb
jmp
jns
std
jl
outsb
in
dec
jno
ret
outsl
pop
gs
aam
or
jnp
js
fisubrl
mov
or
cmc
ficoms
stos
mov
pop
xchg
call
arpl
popf
xchg
outsb
jno
pop
dec
adc
fildl
fdivrl
add
in
fcompl
aaa
or
xchg
rcrb
repnz
add
mov
mov
cwtl
sti
mov
pop
daa
clc
mov
sti
jge
mov
out
jbe
lods
in
sub
push
mov
cmpsl
fldenv
xchg
pushf
pop
cmpl
aam
shlb
sahf
and
dec
jl
lea
mov
ret
cmp
clc
lock
inc
dec
inc
shl
pop
and
or
in
loopne
fistps
stc
ja
push
pop
imulb
insl
cmp
sahf
iret
xchg
xchg
adc
add
or
xchg
mov
leave
ret
inc
stos
es
mov
fistl
ss
ds
das
repnz
imul
and
adc
jno
out
rorb
jp
aas
stos
mov
mov
and
mov
roll
mov
ss
push
push
pop
into
mov
mov
mov
fiadds
enter
or
test
into
pop
xor
mov
mul
push
cmpsb
repnz
int
lret
xchg
sbb
mov
jecxz
xchg
popa
aad
jbe
loop
pusha
aam
fsubrl
fnstcw
ja
subl
popf
fbstp
xchg
inc
jae
dec
ljmp
push
ret
or
lahf
jp
pusha
and
into
andl
faddl
xchg
jo
into
cmp
ret
call
mov
pop
or
sbb
sahf
cli
cmp
shlb
and
push
adc
out
loopne,pt
fwait
aaa
mov
add
mov
fs
inc
add
add
mov
sbb
jl
adc
pop
cmpsl
dec
push
sahf
loopne
bound
mov
int3
or
adc
pusha
xor
sahf
adc
or
imul
mov
xorl
inc
popa
inc
mov
mov
inc
int
push
pop
lods
push
loopne
lahf
adc
push
cmp
jp
dec
test
ja
scas
fld
dec
add
and
pop
loop
je
mov
int
push
cmc
add
add
cwtl
xchg
fisttpl
icebp
ficompl
subb
sbb
dec
jp
jge
fstpl
mov
jp
push
add
adc
inc
push
rolb
lcall
flds
lahf
std
enter
das
cld
mov
stos
loope
mov
out
mov
dec
jge
jno
mov
ret
icebp
and
mov
lahf
pop
aad
call
cwtl
jge
mov
xchg
ds
sbb
pop
mov
repz
mov
and
inc
push
mov
or
add
outsl
cmc
mov
mov
add
or
mov
sub
jecxz
std
xor
rcl
test
lahf
mov
cmpsb
xchg
sti
out
in
mov
fmulp
sbb
outsl
xchg
imul
stc
jge
mov
xchg
dec
fisttpll
mov
ds
ret
pop
sbb
cmpsl
adc
or
sahf
mov
and
push
out
inc
xchg
enter
push
push
add
adc
mov
and
inc
push
mov
xor
roll
or
or
or
sub
stc
sbb
inc
mov
or
ss
push
xchg
aad
jne
dec
stos
lret
fwait
cmp
leave
pop
xor
mull
imul
movsb
cmc
imul
jbe
push
xor
mov
outsl
inc
dec
sub
lret
xchg
or
les
ss
addr16
lds
clc
jbe
push
xchg
rcrb
dec
sbb
and
inc
sahf
es
mov
mov
ret
jbe
ret
dec
mov
jne
in
xlat
adc
inc
xor
into
out
pop
xchg
cld
pop
frstor
mov
stos
and
notb
ret
clc
mov
sub
aaa
sbb
addb
fcoms
int
adc
dec
add
add
fwait
cld
in
shlb
in
dec
subps
jno
adc
aad
mov
arpl
or
popa
test
lahf
out
and
dec
sub
dec
into
and
xchg
lahf
push
jge
jno
enter
in
jne
and
mov
or
xor
movsl
ret
jno
sbb
mov
test
mov
and
mov
jle
or
insb
jge
fiadds
jae
call
cmpsb
mov
addr16
push
orl
mov
jae
sub
inc
mov
pop
push
sti
jae
mov
sub
xchg
into
outsb
cmp
int3
addr16
dec
cmpsb
push
pop
lret
mov
ret
cld
outsb
xchg
int3
test
mov
aas
ds
out
xchg
and
call
incb
mov
lret
call
arpl
int3
rcrl
or
push
or
xchg
ret
sahf
int3
gs
test
nop
xlat
cmp
or
inc
dec
or
sub
out
shlb
sub
hlt
cld
dec
loopne
sahf
add
inc
push
push
push
add
mov
push
xlat
lds
mov
jne
pop
push
or
fisttps
mov
ffree
cld
ret
fs
cwtl
jne
adc
add
ss
xor
adc
cmp
mov
sub
cmp
jne
mov
scas
lret
mov
mov
ret
negl
ds
inc
idivb
jae
movsbl
mov
clc
cltd
mov
lahf
xchg
or
ret
adc
in
mov
fs
mov
add
xchg
xchg
ljmp
test
sub
sbb
ss
jg
mov
or
clc
and
mov
push
or
mov
mov
jbe
cmp
inc
xlat
in
mov
push
ss
or
push
int3
fiadds
fiadds
xchg
or
into
cmc
psubw
adc
popa
push
lea
xchg
mov
xor
adc
add
xchg
push
pop
or
dec
mov
scas
cs
inc
push
mov
push
outsl
call
mov
ljmp
pop
jo
imul
int3
mov
inc
mov
dec
out
and
movsl
push
inc
in
scas
sahf
mul
in
outsl
sbb
repz
lret
mov
xchg
iret
push
das
jns
push
mov
or
cmpsb
aad
sub
mov
mov
sub
or
jnp
jg
enter
popf
ja
and
das
mov
push
aaa
push
ja
cmp
out
sub
sahf
cmp
push
dec
mov
sbb
popa
mov
dec
jg
icebp
inc
or
jne
push
sarb
dec
jge
push
loope
loopne
sub
in
clc
xor
aaa
call
push
mov
lret
stc
push
push
jnp
cli
mov
jge
dec
mov
push
iret
scas
mov
push
jmp
push
addr16
int3
or
xor
js
pop
or
movsl
mov
mov
or
imulb
iret
ds
xchg
test
mov
dec
outsb
xor
stc
xlat
and
repz
dec
adc
shrb
sahf
inc
cmp
push
mov
daa
push
adc
push
or
push
cmp
enter
iret
adc
test
rcl
dec
adc
push
mov
jg
xchg
sub
dec
fisttpl
mov
ret
and
dec
inc
repnz
andl
out
int
sar
adc
adc
sub
test
cmp
mov
movsl
inc
xchg
aas
inc
mov
lahf
push
imul
aas
je
stos
fists
repz
shll
neg
dec
ficomps
xor
mov
inc
dec
idiv
mov
inc
cs
pushf
bnd
shld
push
outsb
lds
cmp
push
sar
jae
mov
dec
push
ja
cmpsb
mov
lds
jo
mov
out
stos
stc
nop
jns
cli
cwtl
jmp
stc
mov
inc
je
mov
inc
clc
xchg
in
and
ja
leave
movsl
mov
jle
lcall
inc
mov
adc
sti
jne
popf
clc
push
pop
cmp
cmp
test
pop
pusha
flds
lahf
shll
jp
mov
jo
inc
dec
cmpsb
xor
insb
add
sbb
test
add
pusha
inc
aas
inc
repnz
fistps
int
into
jl
add
mov
inc
push
xor
aam
icebp
repz
lcall
ret
shl
push
int3
xchg
mov
add
js
cld
daa
std
fcoml
out
and
mov
cs
push
or
lcall
aad
cs
in
ret
cmp
enter
enter
mov
ficompl
stc
mov
insb
cli
mov
xchg
jle
test
int
mov
add
aaa
sahf
imul
aas
and
ret
mov
inc
lock
lahf
jl
or
fwait
pop
xchg
sahf
sub
cmpl
bound
xor
push
sarl
ret
lahf
push
mov
dec
out
push
lret
lods
fildll
xor
inc
shr
sti
adc
cmp
loopne
push
xchg
mov
mov
mov
sahf
outsl
and
mov
xchg
push
or
pop
mov
xor
push
mov
jl
mov
gs
pop
xchg
pop
inc
repnz
xchg
xchg
imulb
pop
add
add
jl
cmpsb
mov
sbb
lahf
xor
sub
jge
sbb
mov
mov
lock
enter
add
fists
or
push
push
out
jg
lea
cmp
mov
dec
int3
testb
or
dec
xchg
outsl
add
push
inc
dec
ret
imul
stos
ret
adc
push
push
jecxz
xor
inc
lret
mov
lock
addb
enter
ja
call
or
out
shl
mov
dec
lods
mov
inc
aaa
arpl
mov
rol
shrb
lahf
xor
repnz
add
test
fisttps
cwtl
hlt
lods
js
ret
js
cmp
sub
or
enter
mov
or
mov
xchg
xor
mov
in
das
imul
js
jae
aas
mov
dec
repnz
sub
mov
aam
cmp
sti
ffreep
mov
pop
or
xchg
data16
out
jb
stos
lods
cmc
push
loope
push
sub
mov
mov
adc
sub
cmpsb
mov
or
dec
aaa
adc
in
int
or
roll
mov
push
ret
stos
mov
inc
call
je
push
cmc
mov
push
cmp
cld
fadds
jmp
aas
insb
inc
loope
mov
lds
aas
inc
and
ret
jg
mov
pop
or
cltd
push
imull
mov
into
sahf
ss
roll
std
out
out
lret
push
aaa
sbb
pop
stos
mov
int3
push
sahf
mov
dec
inc
dec
or
dec
xchg
scas
mov
test
fcomp
data16
call
sub
fidivs
lahf
push
mov
sbb
enter
out
test
ret
rcrb
lcall
fldl
cmc
rolb
repnz
mov
push
ja
add
mov
push
notl
sahf
inc
xor
inc
jl
mov
mov
cld
adc
xchg
cmpl
dec
and
sahf
fiaddl
and
or
lahf
rorl
enter
sahf
adc
push
mov
leave
dec
push
cld
sahf
push
push
cld
les
jle
scas
lods
lcall
mov
xchg
cmpsl
cmpsb
je
in
add
cmp
dec
sbb
jl
enter
mov
in
jecxz
push
out
movsb
adc
mov
mov
sahf
inc
add
popa
cmc
call
cmp
movsb
xchg
or
ljmp
xor
mov
or
test
dec
gs
lahf
filds
cmpsb
shrl
ja
mov
popa
or
or
add
sbb
fprem
mov
out
xor
inc
cmpsl
mov
adc
dec
push
not
sti
mov
insl
mov
jne
cmp
xor
call
rcrb
mov
mov
leave
ss
sub
push
testl
test
mov
xchg
lahf
in
fildll
jbe
mov
mov
ljmp
in
addb
push
sahf
inc
cmp
pop
stc
mov
leave
ret
ds
das
lahf
mov
jge
imul
xlat
lcall
das
in
mov
inc
or
xor
fmull
jbe
pop
stos
xor
mov
mov
int3
dec
push
jbe
push
push
inc
mov
lret
lahf
or
mov
mov
aam
loopne
lret
adc
push
fcmovnb
addr16
push
testl
push
mov
or
sub
ds
lock
vmovhps
lahf
xor
imul
or
jbe
mov
sbb
mov
or
jne
ljmp
xorb
push
imul
adc
add
in
stos
sbb
pusha
mov
and
fistpl
loope
into
xchg
ret
out
xor
daa
and
inc
out
ret
fwait
leave
add
cmpb
cmp
insb
jae
je
jmp
arpl
daa
out
rcll
sbb
imul
mov
or
dec
add
fiaddl
rcrb
ss
push
push
enter
lahf
xchg
add
fidivl
jle
ret
scas
or
xor
inc
fs
es
add
fistpll
lret
fsubl
in
gs
xor
cmp
jb
add
shrl
jl
push
test
sbb
ja
imul
arpl
testb
xchg
inc
int3
insl
shrl
mov
test
call
ss
inc
ret
cmc
lds
mov
sub
push
jmp
faddl
pop
pop
rorl
dec
cmp
adc
outsl
jo
adc
ret
jg
leave
clc
sti
faddl
mov
xlat
add
dec
imul
and
mov
add
lds
imul
xchg
ljmp
cmp
lods
push
sbb
test
push
out
mov
arpl
outsb
or
or
inc
dec
mov
inc
cmp
fsubs
pusha
xchg
jnp
inc
out
lahf
jne
arpl
notb
add
mov
sub
ja,pt
and
jle
or
dec
mov
test
add
pop
lea
mov
mov
lock
push
aad
int3
xor
mov
ret
sub
xchg
outsb
add
mov
or
pusha
mov
inc
lret
gs
cltd
pop
test
push
pusha
ja
daa
inc
jge
push
sbb
call
cmp
inc
dec
test
push
test
addb
mov
add
in
jle
or
imul
xor
adc
insb
cmovp
out
dec
and
icebp
fcmovne
fidivrs
add
sub
shll
mov
icebp
sbb
aaa
aam
ja
fldl
and
mov
pop
sub
adc
mov
pop
jg
push
fldt
pusha
inc
sahf
mov
xor
adc
mov
bound
js
push
adc
mov
push
sahf
or
mov
mov
ja
lods
mov
shl
dec
mov
mov
jbe
push
add
adc
test
arpl
addr16
mov
loope
xchg
pop
test
mov
dec
into
imul
mov
or
sub
jne
push
lret
push
shl
cmp
std
ret
or
cltd
push
test
les
imul
mov
cmp
subl
data16
loopne
cwtl
add
mov
xor
mov
std
adc
dec
gs
pop
repnz
lcall
push
ss
mov
lcall
ja
or
lret
mov
cmp
fcompl
jnp
cmp
fildl
adc
aad
inc
stos
jmp
xor
ja
sar
dec
roll
gs
ljmp
xlat
mov
sub
orl
and
mov
inc
insl
cld
inc
pop
xchg
or
loop
in
inc
or
jae
mov
add
divb
pop
notb
int
pushf
fbld
call
in
leave
rcrb
rcrb
inc
lds
mov
dec
cmp
std
dec
test
mov
testb
mov
mov
iret
mov
movsl
mov
outsl
lahf
leave
out
push
test
mov
pop
mov
les
mov
inc
jno
pop
imul
mov
and
and
fldt
dec
out
push
push
pushf
push
add
add
xchg
js
imul
dec
adc
sbb
mov
sahf
adc
lret
mov
aam
add
push
xchg
ljmp
dec
aad
mul
out
lahf
ffreep
not
xor
jle
jno
lock
inc
pop
dec
in
xchg
sub
mov
adc
xchg
fdiv
out
push
add
lods
pusha
enter
fcomps
shrb
xchg
out
fistl
in
js
adc
jg
adc
enter
pop
jecxz
dec
repnz
cmp
insb
mov
cmp
xor
or
sbb
scas
sub
or
aaa
insb
cmp
jecxz
negl
add
mov
pushf
dec
nop
or
mov
pop
mov
xchg
push
scas
push
pop
ret
fcmove
mov
stc
mov
push
imull
adc
hlt
xchg
mov
jbe
xchg
mov
mov
push
cli
add
nop
jbe
push
sbb
mov
mov
mov
pop
out
sahf
xlat
dec
aaa
jp
jae
sub
js
popl
jg
es
movsb
out
out
lods
in
push
fs
dec
ja
cmp
jge
mov
lods
xchg
js
sbb
pop
cmpsb
adc
xor
jb
add
pop
mov
lahf
in
push
in
pushf
fdivr
sbb
enter
aam
sahf
test
idivb
sub
rclb
mov
fcompl
scas
cmp
shlb
ror
dec
sbb
call
js
lahf
idiv
lds
jl
pop
test
add
jmp
mov
adcb
in
xlat
or
inc
dec
xchg
push
xchg
dec
mov
push
xor
dec
xchg
cmp
outsl
out
iret
movsb
xlat
push
mov
data16
inc
push
roll
enter
jno
out
jne
push
cld
es
imul
nop
sbb
or
movsb
mov
mov
lret
mov
xchg
mov
lahf
mov
lcall
inc
fists
jl,pn
cltd
rorb
sub
mov
xchg
add
lahf
pop
icebp
sahf
pop
out
icebp
pop
mov
pop
mov
xchg
js
inc
ret
mov
add
lahf
push
pushf
mov
repnz
fmuls
xchg
pop
js
das
or
xor
insl
test
xchg
addr16
jle
xchg
pop
cli
lret
lret
mov
xchg
cmp
lahf
dec
fs
dec
dec
mov
mov
or
int
dec
js
push
inc
clc
adc
in
or
xlat
inc
pop
scas
jp
in
or
push
into
adc
pop
popa
imul
cs
cmpsb
je
mov
xchg
add
xchg
dec
pusha
jmp
add
xchg
rcr
xorb
add
add
pushf
inc
and
incb
add
test
fsincos
pop
dec
loope
shlb
dec
sbb
ds
out
sahf
imul
sarl
cltd
cmp
add
mov
lds
enter
inc
mov
push
outsb
jle
clc
xor
push
mov
inc
mov
jno
sarl
js
lret
inc
pop
ds
stc
jmp
push
int
insl
pop
pop
mov
and
jmp
icebp
ret
mov
out
icebp
push
mov
lds
lahf
dec
loope
lahf
pusha
mov
int3
mov
aaa
imul
dec
popf
push
dec
and
ja
or
jne
cmp
add
cmp
push
movsb
mov
repz
xor
pop
mov
out
stc
jae
pop
mov
test
inc
into
sahf
jnp
sbb
repnz
lahf
pop
sarb
stc
outsl
cld
pop
cmp
js
sahf
or
push
inc
adc
mov
pop
scas
sar
push
sbb
in
xchg
mov
repz
shrl
enter
mov
das
inc
fiaddl
imul
insl
add
xchg
mov
cmp
movsl
mov
add
enter
jecxz
mov
ret
pop
pop
jb
aam
jg
add
popa
pop
push
aas
call
mulb
lods
mov
je
ljmp
loop
mov
mov
gs
cmp
dec
or
pop
scas
aam
push
shll
divb
and
insb
mov
popf
pop
pop
push
cltd
loop
push
jl
scas
lds
ljmp
sahf
mov
pop
adc
push
mov
dec
jle
inc
sbb
mov
lret
enter
sti
fsubl
lcall
sub
notl
outsb
std
or
mov
jnp,pn
pop
lahf
mov
mov
sbb
cli
xor
mov
ss
push
outsb
into
jbe
mov
fs
jo
fsubrl
sbb
roll
push
adc
fadd
push
std
push
scas
mov
mov
inc
push
pop
dec
js
rorl
jmp
outsl
clc
imul
lods
into
jne
cmpsb
push
pop
stc
push
in
test
clc
mov
mov
push
in
xchg
push
insb
pop
mov
je
rorl
xchg
dec
imul
xchg
pop
cmp
inc
subb
rcrl
das
sub
cltd
push
leave
sahf
pop
xchg
sbb
outsb
ds
ret
cld
outsl
push
int3
mov
mov
rolb
add
push
aad
mov
jo
mov
mov
jmp
imul
cmp
popf
and
mov
aas
ss
inc
cmp
pop
testb
jp
jns
jo
cs
imul
xchg
rorb
push
xor
shl
cwtl
inc
mov
std
mov
adc
pop
mov
mov
jmp
enter
push
sbb
mov
or
lods
test
jno
jecxz
leave
inc
dec
xor
iret
icebp
add
add
push
mov
sub
pop
and
or
idivb
xor
dec
mov
divb
or
adc
sbb
pop
mul
xchg
mov
dec
cmp
mov
enter
call
cmpsl
push
lret
push
sbb
sti
mov
insl
adc
jae
in
add
pop
out
fwait
popf
aad
push
push
test
sub
add
xor
inc
dec
imul
push
push
out
les
mov
jnp
mov
scas
aaa
mov
mov
test
leave
fstpt
subb
add
test
mov
insb
cmp
out
in
mov
out
arpl
sahf
xor
pop
sarb
push
push
push
rcl
js
arpl
adc
lahf
daa
loopne
mov
pop
inc
or
jle
push
xorl
scas
mov
push
mov
pushf
cmc
sbb
ret
cmpsl
mov
xchg
imul
mov
rorb
xor
push
shlb
mov
xorb
rcrl
sbb
jne
fwait
mov
addr16
sahf
add
sbb
mov
mov
data16
outsb
fs
mul
push
jge
loope
pusha
and
iret
or
test
add
sbbl
inc
jne
pop
sar
inc
repz
les
inc
jne
bound
sub
lea
add
notb
movsl
cmp
jmp
rorl
or
fdivs
ds
push
mov
shlb
aaa
std
fadds
mov
cltd
or
ss
shrl
cld
cmp
push
add
aad
mov
les
sbbl
cmp
or
call
pushf
mov
push
or
dec
stos
add
push
imul
icebp
repnz
fcmovnbe
lahf
mov
stos
mov
mov
ret
mov
lock
cmp
or
jle
and
jo
test
dec
fsubr
mov
xchg
fwait
loope
jne
inc
jle
pop
mov
mov
or
and
inc
xor
push
stos
lahf
jecxz
mov
decb
out
add
ds
imul
retw
int
mov
rclb
shlb
fucom
mov
adc
icebp
xlat
cmc
sbb
mov
jo
mov
push
das
outsl
jmp
fstps
adc
pop
push
call
aam
fcompl
ljmp
mov
leave
sarb
mov
mov
xchg
dec
add
push
lock
stos
adc
or
sub
inc
popa
mov
pop
lahf
inc
test
rclb
push
sbb
dec
aaa
inc
push
cmp
xrstor
loop
lds
sub
jns
xchg
test
mov
add
mov
scas
test
cwtl
or
add
leave
sbb
jnp
mov
jbe
xchg
clc
outsl
add
xlat
pusha
mov
xchg
adcl
imul
fs
dec
xchg
pop
ja
adc
bndldx
lahf
push
insb
into
decb
lahf
ret
rorl
dec
mov
scas
mov
inc
outsb
xchg
mov
insb
punpckhwd
ss
sub
dec
leave
in
push
jecxz
pop
fadds
inc
sahf
or
test
enter
pusha
sbb
and
add
adcl
lahf
jmp
arpl
notb
jnp
push
inc
jg
add
lahf
ja
hlt
pop
mov
das
lret
fdivs
adc
das
insb
mov
pop
clc
fadds
icebp
xor
inc
sub
loopne
dec
and
fiaddl
adc
lds
sti
xor
shll
jp
sub
fldt
push
jp
sub
xor
je
cmp
cmc
loopne
cmpsb
mov
sub
mov
data16
arpl
mov
mov
sub
cmpsl
mov
push
out
stc
mov
clc
divb
sahf
push
daa
fdivrl
add
xor
push
jmp
shlb
push
pop
ret
dec
mov
dec
jle
push
mov
inc
das
add
push
mov
sbb
inc
je
mov
jno
add
mov
sub
andl
push
pop
bswap
lahf
stos
or
aad
xorl
rcll
or
cltd
daa
adc
mov
xchg
jecxz
adc
lahf
cmp
sbb
sbb
push
adc
rcrb
cmp
sub
jecxz
fsubs
and
push
fsubp
push
insl
pop
shrl
lods
push
and
mov
popf
test
mov
push
xchg
cmp
jbe
lahf
and
fdivp
xchg
mov
test
in
nop
bound
dec
sahf
add
jle
xchg
push
dec
mov
arpl
xor
sbb
ficomps
add
ds
inc
lods
mov
xor
cmp
cs
cmp
sahf
xchg
cmc
mov
push
nop
pop
jmp
pop
pop
fdivs
imul
adc
mov
daa
mov
popf
fistl
push
or
shrl
add
push
inc
pusha
sti
lret
inc
sbb
inc
pop
mov
popf
mov
push
push
pshufw
jmp
mov
lahf
enter
jecxz
inc
mov
pop
lahf
mov
and
push
mov
sub
imul
mov
fisubl
xchg
mov
adc
outsb
fwait
lcall
nop
jecxz
and
jne
xchg
enter
xchg
jbe
addr16
cltd
inc
xor
push
mov
das
mov
jb
mov
mov
aaa
push
dec
xor
xor
xchg
jns
push
leave
dec
sbb
add
ret
gs
mov
xchg
cmp
mov
and
push
sahf
outsl
cmp
cmp
scas
lds
jns
dec
mov
dec
mov
inc
je
mov
mov
mov
jp
test
mov
mov
pop
xchg
lds
sahf
lds
jne
add
add
adc
mov
std
inc
sub
outsl
mov
jmp
sahf
jbe
push
mov
cmp
inc
les
push
call
jb
clc
aaa
mov
insb
out
inc
cmp
mov
out
lret
dec
aam
mov
test
movsl
or
out
nop
inc
add
insl
pushf
lret
in
ret
fwait
enter
test
outsl
sahf
in
ljmp
push
cld
mov
inc
fs
xor
xchg
clc
lahf
jns
push
sahf
jecxz
and
scas
pop
xor
xor
outsl
arpl
adc
stc
mov
sub
and
fcmovnu
mov
add
adc
popa
outsb
in
and
adc
xor
shrl
rcr
stc
jb
movsb
rcr
sarb
pop
out
sahf
icebp
pushf
aaa
aas
aam
test
pop
mov
jg
fldt
mov
negb
jo
outsb
sub
push
dec
lods
popf
out
lret
mov
stos
cmp
insb
mov
xchg
mov
push
xor
pop
out
fsubrl
out
cmp
jo
aam
into
jl
inc
jecxz
scas
inc
xchg
pop
roll
cmpb
aaa
lahf
mov
xchg
xlat
dec
mov
sbbb
push
mov
mov
mov
aaa
push
mov
insl
jae
xlat
outsl
xor
cmp
popf
leave
lret
repz
cmp
ret
add
jo
ljmp
adc
cmp
adc
mov
test
je
mov
sahf
add
ljmp
push
jp
leave
push
mov
cmp
mov
mov
mov
jmp
inc
push
push
xchg
or
lahf
decl
mov
dec
popf
loope
lock
xchg
dec
sub
sbb
jo
pop
push
jl
push
pop
cmp
add
enter
pop
fstpt
sarb
pop
push
adc
lods
lock
dec
push
ds
mov
mov
mov
add
lret
enter
imul
outsb
push
sub
decb
test
jecxz
sarb
in
mov
aam
inc
push
push
outsl
dec
loop
push
xor
je
pusha
jge
push
jb
mov
icebp
adc
enterw
sub
fisubs
jno
stos
arpl
mov
jne
push
sahf
cmc
mov
mov
daa
loop
sub
xchg
int3
stos
xor
outsl
cli
dec
add
ss
insb
adc
test
pop
scas
sti
inc
xchg
inc
pop
ficomps
xchg
adc
or
jae
fldl
or
mov
decb
faddl
icebp
notl
loopne
or
push
xchg
icebp
inc
push
mov
fisttpl
call
push
sub
inc
sahf
mov
cmp
xchg
out
pusha
mov
fidivs
sub
les
inc
test
in
or
mov
jno
out
and
jg
pushf
cmp
jo
cmpsl
adc
loopne
xchg
or
add
aas
cwtl
shl
mov
lods
mov
sti
xchg
scas
pop
movsw
adc
sahf
sbb
add
dec
xor
hlt
inc
push
sahf
adc
shr
in
lahf
pusha
enter
mov
cltd
out
lcall
lret
inc
xor
jns
push
jne
mov
jbe
sarl
or
jne
sbb
mov
icebp
mov
in
push
mov
inc
test
iret
sahf
cmp
int3
or
scas
mov
ret
lret
divb
cmovl
ss
inc
enter
aaa
sub
pushf
mov
lahf
mov
push
pop
inc
pop
add
dec
or
sahf
in
pushf
lods
adc
inc
adc
or
mov
jle
rcrb
xor
out
mov
mov
fs
ret
rol
sahf
or
add
mov
fiadds
lret
ror
jns
pop
loopne
outsb
shl
test
jns
leave
out
nop
mov
mov
or
cmp
arpl
adc
push
push
rcr
push
in
jbe
rol
add
sti
popa
jle
je
cmpsb
add
icebp
mov
inc
mov
mov
lahf
fldt
outsb
push
test
mov
and
and
loop
pop
cmp
ret
inc
scas
mov
sahf
and
movhps
mov
xchg
pop
adc
sahf
std
stos
mov
mov
or
mov
jge
xchg
cmc
leave
sbb
outsl
subb
repz
pop
sbb
or
in
notl
addr16
mov
add
lcall
xor
mov
mov
pop
push
out
fimull
inc
sbb
scas
xor
fs
mov
lret
test
mov
loopne
lahf
addl
mov
jmp
jne
negb
sahf
or
sub
dec
cltd
stc
push
das
mov
xchg
in
adc
cmpsb
dec
adc
push
nop
ret
push
pop
or
lock
icebp
cwtl
jne
and
and
orb
das
mov
icebp
lods
fdivrl
pop
cmp
mov
fimull
push
cmp
cmp
jbe
cmp
mov
xchg
add
pop
lea
enter
idivb
std
scas
cs
push
cmp
cmp
jmp
fs
push
mov
cmp
jns
adc
or
mov
fwait
insb
mov
inc
mov
ss
push
mov
data16
lcall
jae
push
and
cli
adc
push
xor
lds
ret
dec
inc
pop
inc
fsub
push
push
popa
xchg
outsb
loop
and
cs
mov
fisubrl
jbe
push
xchg
adc
aad
sbbb
cmpsl
mov
push
pop
mov
xchg
jnp
ss
push
loop
lahf
test
mov
jle
out
mov
xchg
iret
mov
pop
imul
mov
mov
push
xchg
push
jno
add
xor
and
cmc
jne
push
test
push
in
pop
xchg
fcoms
push
jmp
out
int3
jmp
fwait
call
push
notb
xchg
dec
imul
xchg
or
in
jne
lcall
sbbb
jno
gs
mov
push
dec
jge
adc
adc
jbe
jmp
or
les
push
outsb
jecxz
cld
or
cmpsb
push
push
shrl
incb
loop
mov
push
ss
scas
rol
pop
pandn
mov
add
add
cmc
or
push
ja
sub
repnz
int
inc
or
hlt
daa
sbb
or
inc
mov
sub
into
add
jo
mov
inc
push
call
pushf
pushl
out
mov
add
add
sbb
bound
push
cltd
out
jecxz
cmp
push
loop
ss
jp
and
jle
lds
test
adc
or
push
negb
or
mov
xor
sbb
pusha
fldt
adcl
inc
popa
pushf
pop
jne
xlat
and
cltd
sbb
in
daa
pop
sahf
scas
push
pop
sahf
add
loopne
shll
push
jg
cli
and
mov
test
testb
mov
mov
pop
das
loop
outsl
push
xchg
es
jl
enter
pop
and
lret
in
daa
stos
clc
push
inc
inc
les
add
mov
lcall
out
sahf
aaa
adc
jb
mov
ret
stos
lcall
arpl
mov
mov
sub
enter
shlb
in
push
xor
shl
adc
cltd
lahf
xadd
or
flds
push
shlb
jae
fs
pushf
sbb
mulb
lahf
jne
test
push
push
inc
lds
inc
push
jbe,pt
es
stc
int3
xchg
or
dec
sbb
pop
repnz
dec
mov
insl
add
repnz
mov
fcmovnb
mov
cmp
shl
sub
mov
dec
adc
add
in
loop
insb
pop
loop
clc
sahf
add
mov
cmp
sahf
sbb
ret
movsl
stc
lods
xor
lcall
nop
mov
mov
adcb
mov
push
fisubl
ss
rclb
jle
test
bound
jp
mull
sub
sbb
lret
mov
push
inc
aad
push
lahf
jge
pop
lock
inc
inc
dec
mulb
testl
aas
cli
lods
jo
push
jno
out
jle
push
mov
cmp
jae
sahf
sbb
mov
add
jle
push
adc
mov
lea
jl
dec
push
cmc
aad
mov
and
push
icebp
lahf
outsb
push
les
movsl
in
mov
loope
out
sahf
pop
lahf
loop
pop
sub
mov
jbe
inc
ficompl
adc
dec
pop
mov
push
sbb
aas
inc
mov
mov
stc
pop
adc
lds
sub
xchg
in
scas
loop
loop
or
sub
jbe
push
lret
xchg
cmpsb
dec
or
push
adc
idivl
lahf
pop
push
cmp
leave
rorb
push
add
fwait
or
dec
repnz
fildl
rorl
fwait
stc
push
lcall
mov
and
dec
sub
shll
inc
fcompl
test
inc
lahf
leave
inc
dec
aaa
es
and
adc
into
dec
add
mov
xchg
sub
pushf
mov
mov
xchg
icebp
test
jg
ljmp
push
dec
aas
mov
push
fistpl
pop
in
out
repnz
pop
xchg
imulb
push
dec
xor
jno
sbb
push
inc
ja
addr16
mov
inc
ljmp
fsubrl
cli
mov
test
sub
push
imul
fstps
insb
mov
stos
loop
pop
sbb
adc
jae
jne
inc
mov
dec
je
testb
jle
cmpsl
outsb
xor
cli
ljmp
mov
jp
test
js
int3
int
rol
mov
adc
inc
vmwrite
shrl
mov
jle
outsl
xor
hlt
push
xchg
mov
jp
dec
sarb
xor
xchg
dec
out
fisttps
adc
mov
adc
fidivrs
ficompl
out
aas
dec
mov
mov
or
pop
jne
mov
jae
loope
mov
xor
cmp
mov
enter
aas
or
dec
dec
mov
call
push
dec
outsb
cmp
push
scas
int
fcmovne
xchg
loopne
xchg
cmp
loop
pop
inc
sahf
notl
adc
adc
lcall
inc
inc
loope
arpl
out
sti
and
inc
lock
sub
mov
push
add
shl
frstor
dec
stos
into
insb
pop
mov
test
jle
lock
xchg
jp
push
lret
xchg
cmc
pushf
mov
xchg
mov
mov
mov
lock
sbb
mov
adc
pop
ss
cwtl
mov
mov
xchg
push
daa
pop
or
insb
je
dec
ret
insb
fstpl
aad
pop
in
push
int3
outsb
in
enter
fisubrs
xor
test
bswap
pop
or
dec
push
lahf
or
xchg
add
cwtl
aaa
popl
adc
dec
jo
pusha
ss
ja
push
xchg
adc
push
xor
mov
cmp
lods
mov
add
in
insl
str
test
leave
jp
push
add
dec
data16
ja
stos
stos
clc
push
sarl
lahf
mov
lods
adc
jp
dec
inc
insb
ja
mov
fcomip
jo
dec
arpl
lret
and
jecxz
cmp
lahf
cmp
mov
or
aas
fadd
sub
dec
std
and
repnz
xlat
xchg
or
lret
fsubs
mulb
mov
dec
push
xchg
push
lret
jmp
jno
and
fdivp
cmp
pop
popa
cmp
rcr
sbb
mov
and
lds
ret
cmp
mov
adc
inc
test
enter
xor
mov
push
ds
adc
dec
xorl
adc
pushl
arpl
gs
push
and
push
rcrl
test
addl
xchg
roll
ds
mov
nop
mov
rorl
dec
mov
and
gs
call
push
mov
push
std
jo
sbb
loope
into
lret
and
mov
imulb
jl
jecxz
iret
fs
pusha
add
xorl
mov
pop
sbbl
out
daa
enter
mov
jle
sahf
xor
sub
push
test
inc
insl
mov
adc
inc
sar
loope
xor
clc
sahf
popa
push
mov
cmp
push
mov
lahf
mov
sbb
imull
rcr
loop
mov
sub
sahf
out
pop
pop
adc
iret
arpl
cmp
or
or
popf
or
mov
dec
inc
sub
loop
or
test
adc
inc
je
cmp
leave
fildll
popa
fisttpl
pop
mov
sub
push
js
and
int3
cld
ret
in
aaa
ss
ds
mov
mov
mov
inc
test
mov
jno
and
ds
xchg
dec
sti
add
movsb
into
imul
sahf
add
sbb
jg
jle
jp
or
cmp
push
in
test
les
ss
jp
xor
sahf
pop
es
enter
aam
or
testb
pop
xchg
mov
cmp
dec
xchg
fcoml
das
ds
mov
lds
push
pop
and
mov
or
fisttpl
and
inc
imul
icebp
inc
repnz
lahf
push
adc
jmp
lahf
test
inc
movl
cmp
bound
push
ja
loopne
movsb
test
add
xor
xchg
movsl
add
jb
mov
lret
data16
jbe
pop
ljmp
push
add
fcmovne
or
lahf
pop
adc
jb
jbe
jne
pushf
mov
push
fdiv
inc
mov
lret
jp
dec
xchg
fisttpl
xchg
mov
cmp
fwait
adc
sbb
in
mov
aas
stc
lcall
sbb
sbb
cmpsl
jecxz
mov
dec
lahf
pop
or
inc
mov
das
lahf
lods
jne
sbb
mov
mov
movsl
ds
incb
in
pusha
push
mov
push
andl
in
add
fdivrl
shlb
push
inc
push
mov
dec
pop
into
xchg
and
mov
pop
pop
in
sahf
mov
xchg
lret
ret
pop
call
lock
xor
push
adc
out
push
sbb
ds
sbb
lods
adc
add
fisttps
jl
in
nop
jb
dec
add
inc
or
fwait
int
inc
xor
jp
mov
dec
mov
ficoml
cmp
sahf
pop
xchg
ja
enter
jg
loop
mov
push
add
pushf
stc
lret
sahf
dec
or
inc
fs
xchg
iret
dec
mov
imul
in
mov
ja
ljmp
sarb
cmp
mov
mov
dec
out
push
xlat
insl
not
push
mov
mov
xor
jo
or
jecxz
ret
stc
ret
mov
jp
rolb
loop
incb
cmp
leave
jb
fisubl
jbe
arpl
stc
js
sahf
xchg
lods
fdiv
add
decl
out
es
sahf
push
mov
add
dec
data16
lods
and
pop
mov
mov
pop
xchg
jg
push
aas
lahf
cmovg
pop
push
jle
cmpsb
imul
fisubrs
jno
or
mul
movsb
mov
mov
imul
add
scas
push
and
jae
pop
push
mov
lahf
js
roll
add
out
mov
mov
in
out
scas
arpl
enter
andb
pop
xchg
adc
or
xchg
aam
out
outsl
fisttpl
sub
arpl
sti
pop
rorl
enter
mov
pop
dec
lahf
sub
pusha
jle
jae
xchg
inc
cli
movsl
mov
mov
sub
lret
jg
cmp
nop
mov
test
add
lcall
sub
cmc
mov
stc
cmpsl
fs
aaa
cmc
push
ficomps
addr16
jno
adc
stos
dec
mov
xor
ret
into
ss
add
lds
push
js
fists
dec
jge
and
test
nop
lahf
add
imul
test
and
scas
xor
mov
push
mov
pushf
mov
xchg
dec
mov
pop
xchg
xor
addr16
es
pop
ja
pop
shr
jnp
add
rclb
inc
jp
adc
inc
in
aas
mov
rcll
push
inc
add
pop
lahf
cmc
test
ss
stos
dec
push
ja
mov
shlb
lahf
outsl
xchg
lcall
mov
sbb
mov
movsb
inc
xlat
adc
lods
jp
cmpsl
mov
xchg
fistpll
cld
mov
push
mov
push
jns
sub
dec
mov
fs
cmp
mov
loopne
stc
adc
out
xor
push
mov
and
mov
lahf
inc
test
mov
loope
or
jne
roll
inc
dec
push
inc
inc
mov
lahf
out
cmp
mov
mov
mov
dec
lahf
enter
add
push
xchg
cmc
jae
and
jmp
push
les
aad
xchg
bound
mov
jmp
xchg
scas
xchg
aas
lahf
lret
adc
and
mov
inc
scas
inc
fstl
pusha
stos
mov
pop
jle
lret
ret
int
shl
out
rcr
ror
mov
jo
sub
jl
add
enter
xchg
popf
fldl
call
sub
push
push
mov
push
mul
repz
mov
js
dec
mov
cld
loop
cli
and
aas
popa
out
hlt
pop
push
stos
sbb
jnp
lahf
xchg
mov
mov
add
sbb
ss
daa
dec
xchg
mov
popf
data16
aaa
lahf
add
mov
movsb
add
mov
lods
push
adc
cmpps
pop
out
add
push
cmc
push
ret
mov
mov
cmpsl
sarb
cmpsl
mulb
je
mov
inc
pop
loope
add
movsb
sar
push
push
enter
in
sahf
sti
mov
add
push
jae
js
aad
adc
sahf
nop
js
ja
adc
pop
push
push
scas
int3
cmp
jl
mov
rcrb
pushl
push
fmul
jecxz
js
push
adc
mov
jae
jp
cmpsl
pusha
ds
push
clc
xchg
xchg
ss
pop
sub
sti
or
bound
xchg
adc
mov
jp
ljmp
mov
jo
and
fiaddl
jle
outsb
orl
je
and
fs
mov
jle
mov
push
cmp
iret
lock
add
hlt
inc
movsb
push
xchg
pop
jae
cmp
dec
or
cmpsl
mov
mov
mov
push
xchg
dec
dec
push
ljmp
jecxz
call
fstps
in
ljmp
lahf
popf
mov
dec
lods
int3
imul
lret
shrl
out
ss
inc
pmulhuw
shl
jp
int3
pop
outsl
xchg
insl
pmulhuw
mov
inc
mov
sti
das
jecxz
mov
ret
jae
aas
ljmp
jmp
add
jno
push
pop
test
mov
push
mov
push
sahf
leave
rorl
daa
idivl
xchg
mov
call
sbb
lds
iret
cli
aaa
mov
jae
sub
bound
xor
sub
sahf
hlt
ret
shll
outsb
add
xchg
push
sub
mov
or
mov
arpl
mov
stos
mov
in
std
xor
xchg
cltd
mov
inc
adc
push
fimuls
fiaddl
in
mov
lds
jbe
push
dec
pop
int3
pop
jp
enter
pop
movsb
mov
xchg
int
lret
loope
ljmp
mov
mov
jbe
mov
into
test
push
in
cld
pushf
push
pop
xor
or
ficomps
adc
sub
cmpsb
ds
dec
sbb
test
out
in
adc
enter
repz
push
imul
jne
add
daa
push
xchg
sahf
mov
pop
cmc
in
or
sub
negl
sbb
mov
mov
xchg
sahf
je
mov
or
clc
lahf
push
and
outsl
into
dec
repnz
cld
dec
or
std
mov
fistpl
mov
adc
sarb
adc
lret
fistpll
mov
insl
add
mov
aam
fldl
fildll
sahf
mov
lahf
push
jecxz
mov
xchg
mov
outsb
adc
adc
pop
push
stc
xor
adc
mov
xor
sub
push
xor
mov
mov
subl
or
cli
lods
adc
adc
je
inc
cwtl
add
adc
jnp
pop
inc
xchg
inc
jl
dec
icebp
dec
sub
or
sahf
sub
pushf
push
hlt
pop
xchg
mov
xchg
sar
sahf
fcompl
pop
fstpt
xor
sar
scas
out
or
mov
adc
insb
push
cltd
stc
aaa
shrb
jo
xor
inc
sbb
sub
rorb
or
into
cmp
mov
sbb
fsubrp
cwtl
cmpsb
insl
into
sub
mov
push
clc
xchg
sahf
fistpll
out
adcb
push
add
jb
jg
mov
inc
dec
inc
dec
push
ds
jg
mov
int
push
or
ss
out
outsl
rcrb
cmp
lcall
adc
or
mov
dec
cmp
lds
cltd
and
js
mov
jnp
inc
or
mov
cmp
sahf
test
bound
jecxz
shlb
cld
mov
or
rclb
pop
or
pushw
rcrb
and
jp
adcl
adcl
xor
mov
or
adc
movsb
mov
sbb
push
popa
push
ret
lahf
in
xor
inc
jge
and
rcl
fidivl
aam
and
enter
push
daa
mov
idiv
mov
mov
fistl
mov
aas
mov
cmpsb
pop
xchg
cltd
andb
notl
mov
cs
cmp
push
rcrb
xchg
xchg
adc
jb
cmp
xchg
scas
cmp
in
xor
insb
mov
add
push
addl
addb
dec
pushl
sahf
push
push
push
sub
cmp
sarb
stos
movb
fistl
push
adc
lret
push
mov
cmc
xor
sbb
stos
inc
dec
jp
outsb
dec
add
daa
stos
into
imul
jp
pop
ficomps
jle
sarb
stos
cmpsb
xchg
gs
xchg
lock
loop
mov
mov
subb
mov
ret
fsub
add
jns
mov
or
inc
mov
jne
add
je
ffree
lods
js
lods
push
ja
loop
shll
mov
jp
push
popf
dec
add
outsb
push
loop
xchg
ja
inc
jo
pop
int
sti
lods
enter
xlat
mov
jge
out
dec
stc
mov
jge
into
lahf
push
popa
jo
jnp
repnz
adc
cmp
jo
lret
inc
push
out
cmp
lods
mov
mov
std
mov
fildl
gs
call
aaa
inc
aas
mov
repnz
adc
sti
xchg
dec
in
out
add
push
leave
das
std
out
popf
add
adc
push
lcall
sbb
nop
lahf
decb
in
or
sub
cmp
stc
jne
loop
add
and
jne
push
or
mov
in
jle
popl
int
test
jae
shr
aad
loope
jg
loop
aas
ret
adcb
and
mov
or
stos
xor
mov
lahf
fdivs
mov
aaa
push
pop
in
aas
aas
out
rclb
push
aaa
xchg
inc
dec
rcrl
jp
fwait
ss
cmc
jge
sub
jnp
test
inc
adc
mov
lods
mov
test
pop
leave
sahf
add
rcrl
mov
dec
in
test
or
in
push
enter
mov
push
sub
and
xchg
mov
fwait
out
call
lods
jbe
lea
jne
mov
pusha
pushfw
popw
sar
bt
pushf
shl
mov
pushl
pusha
sub
cmc
cmc
test
not
bt
neg
pushf
jmp
mov
mov
and
shrb
mov
aas
sub
xor
insb
push
outsl
pop
mov
clc
jbe
ljmp
cmp
js
pop
int3
pop
mov
aam
popa
in
cmp
mov
mov
xchg
outsl
repnz
cli
and
mov
and
stos
xchg
and
and
inc
lahf
pop
repnz
aas
pop
inc
mov
andb
repz
or
jno
js
inc
dec
pop
ljmp
decl
mov
pop
push
pop
jns
xchg
pop
ret
add
sbb
sbb
je
pop
in
mov
fisubrs
pop
and
sahf
enter
inc
xor
lret
mov
push
or
dec
and
inc
mov
inc
clc
jge
xchg
mov
jl
dec
xor
cmc
clc
bt
cmc
ror
mov
dec
bt
clc
ror
stc
jmp
jmp
push
mov
lea
call
jmp
repnz
jmp
lods
jg
xor
inc
mov
adc
lret
clc
shlb
mov
hlt
movsl
fstp
stc
jb
push
xor
pusha
ds
fildl
or
bound
and
or
mov
pop
aad
aas
inc
adc
mov
in
mov
fisubrs
mov
fiadds
call
ljmp
js
inc
and
cltd
lock
and
push
lea
jmp
mov
bsf
bswap
shr
sets
mov
adc
push
btc
bt
pushf
mov
movzbw
shl
btr
setge
push
shl
and
sbb
sar
push
setnp
push
test
bsr
mov
call
jmp
pushf
movl
mov
pusha
movl
pushf
movb
mov
lea
jmp
loop
sbb
and
shll
jmp
xchg
jmp
mov
inc
shll
sti
pop
mov
jno
jno
xchg
repz
push
dec
jmp
ja
mov
ds
xchg
cmp
or
insl
mov
sbb
fdivl
shl
cmp
sti
xor
fdivrl
dec
pushf
pop
aam
daa
push
jnp
sti
push
xor
mov
jmp
pusha
movb
jmp
mov
add
aas
dec
clc
pop
orb
xor
push
call
xor
and
mov
ret
ja
cmpsl
stos
into
jb
mov
lods
dec
mov
mov
das
mov
dec
mov
mov
out
adc
out
ror
clc
lahf
inc
mov
push
pop
and
and
push
fsub
or
decb
pop
push
arpl
loop
mov
sahf
movsb
mov
jmp
jmp
gs
pop
cmp
mov
stc
stc
push
stc
shl
jmp
mov
pushf
mov
movb
lea
jmp
repz
and
aam
fildll
sub
add
lea
jp
dec
scas
inc
loope
or
mov
jl
std
or
xchg
hlt
outsl
sbb
add
push
dec
scas
jmp
ljmp
neg
xchg
ja
nop
int
sti
inc
out
xor
aam
imul
repnz
popf
lret
stc
xchg
je
adc
jcxz
lret
adc
xlat
call
stc
scas
stos
xor
jno
push
cmp
mov
test
jns
imul
mov
mov
movsl
and
scas
sub
xchg
mov
pop
mov
sub
lret
jg
les
hlt
mov
sbb
cmp
jns
dec
cmpsl
sbb
ljmp
popf
sahf
cld
enter
cmc
repnz
xchg
inc
enter
addr16
orps
xor
sub
notl
bound
xor
xor
and
mov
and
cmc
popa
insl
xor
xor
or
iret
jb
push
inc
loopne
stos
and
mov
daa
push
dec
in
mov
in
std
lahf
push
mov
push
push
xchg
pop
jle
into
xchg
push
or
subb
adc
dec
shl
test
rcll
pop
cmp
fsubp
dec
push
insb
and
push
arpl
leave
pusha
add
cld
pop
xor
and
sub
and
ss
mov
add
jne
out
dec
push
mov
in
jp
pop
dec
xchg
mov
add
jle
test
int
inc
xor
or
fs
sbb
inc
adc
and
mov
sub
dec
popa
ret
jg
mov
mov
or
mov
popf
mov
or
insb
push
mov
hlt
dec
out
into
sbb
cltd
jmp
cwtl
hlt
jo
call
sub
mov
repz
pop
push
pushf
and
sbb
mov
and
pmaxsw
lret
ja
ljmp
push
in
cmpsb
mov
inc
cmpsl
xchg
inc
dec
imul
rol
mov
sbb
aam
cmovge
or
cmc
je
stos
leave
lea
cmp
mov
outsl
pop
mov
cmp
stc
pop
xchg
mov
fdivrs
aam
cmp
mov
fld
jb
mov
or
and
xlat
out
int3
and
ljmp
mov
movsb
xor
jns
mov
xor
lods
stos
lods
movsb
jo
cmpsb
sarl
mov
push
jge
jecxz
cmpb
push
adc
repnz
inc
and
pushf
pushf
mov
pushf
pushl
ret
inc
push
sbb
and
inc
aaa
inc
sub
adc
aad
push
ljmp
xor
push
lsl
leave
iret
test
les
sti
push
mov
into
xor
adc
arpl
or
cmp
adc
sub
mov
punpckhbw
xor
push
lods
loopne
data16
mov
movsl
adc
mov
xor
xor
sbb
add
cltd
inc
aad
jecxz
add
mov
mov
mov
inc
mov
push
mov
and
mov
xchg
loopne
int3
cmpsl
mov
in
jbe
das
and
mov
add
mov
xchg
pop
dec
fwait
mov
divb
push
pusha
mov
add
lea
xchg
jno
sbb
cmp
shrb
pop
arpl
cmc
inc
sbb
repz
idivl
in
xor
filds
leave
hlt
loope
js
jb
sti
arpl
sub
test
mov
call
les
arpl
pop
mov
loop
or
adc
mov
int3
mov
ja
lock
test
push
xchg
adc
cmpsb
inc
dec
aas
mov
rclb
add
bt
and
mov
pushl
call
stc
pushf
add
movb
cmp
pusha
lea
jb
cmc
cmp
pushf
mov
lea
jae
stc
rcr
sbb
shl
mov
xor
bsf
adc
mov
not
neg
mov
pusha
stc
pushf
test
xor
clc
stc
pusha
repnz
pushf
pushf
lea
jne
movzbw
sub
movsbw
push
mov
call
pusha
movzbl
mov
pusha
mov
movw
movb
pushf
movl
lea
jmp
cwtl
inc
sti
cs
pop
lods
inc
mov
arpl
or
xor
xchg
sub
cmp
push
or
and
test
in
in
push
rep
cmpsb
jl
fs
movsl
sahf
test
adc
mov
icebp
mov
mov
push
xchg
jp
sti
jge
or
sbb
push
mov
shlb
sbbl
push
loopne
ljmp
sti
jg
cmp
pop
sub
lret
pop
sbb
add
inc
out
mov
jne
xor
push
iret
fdivr
cmp
cmp
nop
push
imulb
mov
pop
stos
pusha
mov
dec
outsl
clc
push
add
out
fcmovnbe
pop
mov
xchg
xor
xor
or
mov
push
xchg
inc
sub
jmp
pop
pop
jg
adc
sbb
push
push
scas
dec
shll
xorb
fisttpll
iret
hlt
mov
sahf
fsubs
pop
fisttpl
xchg
xchg
cli
movsl
jns,pt
dec
inc
xchg
test
mov
sub
and
jge
movsb
push
sti
sbb
ret
xor
rcrb
lock
push
xchg
dec
mov
add
into
pop
rorb
in
arpl
shrl
and
repnz
pop
lods
adc
ds
pop
xor
sbbl
jb
add
xchg
cmc
repz
call
pop
je
ficompl
stc
outsb
js
cmp
and
hlt
sbb
mov
bound
jae
jae
jns
push
setle
movsbw
mov
push
push
mov
bswap
pop
mov
call
rcll
stos
sub
add
stc
fdivr
mov
cmpsb
icebp
test
xlat
out
push
pushaw
dec
pop
jge
mov
mov
push
and
aam
test
jle
arpl
pop
jmpw
sbb
roll
push
pop
jmp
add
mov
cmp
jmp
pop
les
cmp
movsl
lcall
out
lcall
ljmp
pusha
rep
cmpsl
in
push
addb
call
xchg
testb
addr16
lret
xchg
and
in
push
cwtl
inc
jge
xlat
or
push
mov
mov
movl
pushf
movw
push
lea
jmp
push
add
sub
js
xor
aaa
push
loop
push
cmpsl
out
bound
push
mov
mov
in
mov
jmp
addr16
xor
mov
xlat
sub
cmpl
add
nop
rolb
mov
inc
jne
inc
push
cmp
test
pop
rcr
mov
rclb
lods
sbb
insl
push
sbb
dec
fcomip
add
dec
lret
fwait
cmp
xor
mov
mov
shlb
lret
adc
push
push
dec
lods
sbb
mov
dec
stos
movb
mov
pushl
lea
jmp
fwait
int
sub
sub
das
pop
mov
inc
call
enter
cmp
stos
test
add
inc
jnp
es
std
mov
sbb
into
popa
add
stc
or
cwtl
jbe
dec
mov
pop
jb
sbb
add
call
movsb
fdivp
inc
fs
sbb
out
mov
xor
mov
or
lock
inc
in
xchg
ficompl
repz
mov
in
push
fstpl
jge
jmp
ret
mov
xor
data16
cmp
call
seto
not
pushf
mov
movb
pushl
push
push
lea
jmp
lea
jae
call
mov
add
outsl
sbbl
xchg
andl
or
stos
mov
mov
sbb
aad
in
push
mov
idiv
or
loope
xchg
xchg
jb
test
call
outsl
fnstsw
ret
sbb
mov
rorl
jmp
and
fucomip
or
je
mov
mov
lahf
out
lods
int
shrb
cmp
mov
and
add
pusha
aas
sub
ss
aaa
pop
popf
cli
sbb
lret
xlat
repnz
xor
in
cmpsb
mov
cli
in
inc
sbb
or
loopne
jbe
sub
imul
fimuls
and
add
xchg
loop
inc
in
dec
popa
pop
push
loope
xor
ja
sbb
pop
pop
xor
dec
add
jmp
test
stc
sub
push
xorl
nop
pop
xor
in
ss
adc
jmp
pop
lcall
nop
or
in
cmc
push
xor
rcrl
out
push
jp
pop
icebp
aad
dec
jp
jae
xchg
hlt
gs
mov
mov
push
scas
or
divb
call
repnz
insl
pop
fmuls
scas
repz
mull
mov
sbb
in
aam
popf
sub
cmpb
lea
je
call
pushf
lea
jne
movzbw
mov
test
bt
cmp
call
call
mov
add
adc
test
int3
in
icebp
loopnew
jno
lods
push
icebp
cmp
sbb
lahf
jmp
dec
icebp
or
mov
and
dec
xchg
stos
sahf
sub
popa
or
outsb
pop
daa
cmp
xor
mov
mov
shll
sub
inc
mov
jne
test
xorl
pop
sar
xchg
add
stos
dec
insl
in
or
sarb
pop
xor
push
jecxz
push
jbe
test
movsb
jb
adc
ficoml
jge
lret
sbb
dec
mov
sub
jmp
sub
sub
sahf
or
and
mov
and
ret
out
pushf
mov
flds
push
jno
mov
shl
sub
jp
push
insb
pop
movsb
pop
outsb
jl
fisubrl
inc
lds
dec
lods
add
cmp
aaa
push
pop
aas
cmp
add
lahf
jo
mov
pop
movsl
push
adc
in
bound
clc
movsb
out
jmp
adc
jl
adc
add
testb
dec
lea
outsb
mov
ficomps
pop
bound
sub
push
lahf
mov
jmp
add
dec
outsl
popa
fs
imul
add
xchg
daa
and
fisubl
push
jae
sub
sub
cltd
mov
pop
rolb
lods
add
sbb
in
fiaddl
das
or
ror
sub
and
inc
shrl
mov
imul
ss
mov
inc
outsl
lods
hlt
or
dec
jp
sbb
out
icebp
ljmp
faddl
mov
fdivrs
pop
pop
call
lods
lock
or
jno
aad
hlt
cmp
add
cmpsb
push
lret
gs
xchg
jmp
insl
xor
lods
sbb
ljmp
ja
es
jp
cmc
insb
or
mov
clc
outsl
lahf
icebp
add
hlt
xor
jecxz
mov
lds
in
pop
je
stos
fwait
nop
or
and
or
mov
shlb
ja
push
jae
dec
mov
xor
les
aad
cli
add
rorb
lea
sar
out
add
test
adc
cmc
test
data16
add
pusha
mov
mov
es
fdivp
out
push
adc
pushf
dec
dec
loopne
pop
cmpl
fistl
xor
decl
mov
nop
addr16
call
orb
sahf
adc
das
pop
and
xchg
adc
add
mov
pop
jnp
sbb
sub
lahf
das
jmp
ficoms
cmp
cltd
pop
pop
and
mov
sahf
not
mov
clc
sbb
inc
in
cltd
lds
bound
out
push
and
movb
aaa
imul
cmp
inc
or
mov
fsubrp
loopne
jmp
out
out
leave
scas
loopne
cmp
mov
nop
je
pop
in
or
and
fwait
icebp
mov
mov
cmp
jbe
push
pop
mov
mov
imul
icebp
fdiv
fstpl
jge
ljmp
and
out
jno
insl
mov
test
and
or
cmpsl
mov
add
ss
imul
xor
dec
outsb
cmpsb
rol
dec
sbb
or
jnp
and
test
les
ds
test
mov
mov
mov
push
imul
jmp
lods
mov
adc
pushl
jmp
ljmp
and
add
data16
pop
xor
cmp
sub
imul
repz
roll
push
push
jecxz
sub
lcall
dec
xor
clc
lahf
jne
pop
dec
pusha
xor
sbb
add
mov
or
and
gs
lock
add
stc
or
sub
insb
ljmp
imul
xor
sub
test
or
aas
fsubp
cmp
xor
mov
into
out
fbstp
lret
jmp
mov
lods
lcall
pusha
mov
fistps
stos
pop
stos
lcall
cmp
out
sub
ret
mov
test
and
jb
push
cmc
cmp
push
pushf
lea
jmp
pop
pop
pop
and
popf
loopne
ja
mov
nop
pop
xor
fnsave
xor
pusha
clc
std
sub
call
mov
ss
pushf
outsb
or
lods
xchg
and
push
out
push
out
jl
and
mov
loope
popa
dec
insb
pop
stos
lds
xchg
sub
mov
icebp
mov
dec
cld
inc
dec
setne
cmp
fwait
cmp
daa
dec
dec
mov
lock
jnp
test
shl
sbb
xchg
inc
push
xchg
in
lock
insl
fiaddl
add
and
jmp
sub
add
jmp
xor
or
push
jo
sarb
mov
leave
cmp
dec
mov
mov
xor
dec
outsb
mov
mov
jge
mov
jg
add
into
in
mov
ja,pn
add
push
cmp
add
test
into
test
fldcw
nop
shlb
xlat
push
fidivrs
jg
lock
dec
fwait
mov
int
stc
inc
xchg
hlt
loop
xor
lret
into
and
inc
mov
cmp
out
inc
pop
std
fstps
sbb
fisttps
insl
mov
pushf
push
xor
ja
mov
mov
jb
inc
arpl
jne
movsb
arpl
sbb
push
xor
cmp
mov
int3
push
push
dec
push
int
adc
mov
outsb
rclb
ds
dec
pop
sub
das
ja
cmp
xchg
jl
scas
dec
xor
jnp
and
cmp
sbb
scas
mov
cmp
ss
in
add
and
pcmpeqw
test
xor
mov
add
pop
pop
pusha
mov
mov
je
jns
shrl
fisttps
int
mov
sbb
and
inc
enter
pushf
mov
mov
cmpsb
adcl
jb
or
loopne
fs
mov
inc
rorb
loope
mov
mov
inc
lret
ss
addb
loope
fs
dec
sbb
mov
push
jg
or
sub
and
sbb
ljmp
and
push
xor
and
out
icebp
ret
and
lcall
push
pop
adc
cmp
mov
mov
rcll
mov
insl
push
fwait
push
mov
lea
in
dec
call
push
test
add
es
xchg
cmp
scas
fimuls
test
push
xor
data16
xor
sti
hlt
sbb
adc
add
mov
add
mov
add
mov
add
jne
add
mov
add
mov
add
dec
daa
add
mov
add
mov
add
mov
and
divb
add
add
add
popf
sub
fdivs
sub
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
daa
add
mov
add
mov
add
mov
and
add
andb
add
push
fs
xor
mov
sbb
and
mov
jle
dec
sbb
adc
mov
adc
mov
fs
or
test
inc
jb
pusha
inc
lods
or
adc
push
popa
mov
enter
shlb
or
subb
add
aam
pop
add
popa
and
cmp
ret
sahf
pushf
cmc
adc
flds
cli
jmp
test
test
and
jmp
or
das
inc
loopne
sarb
test
mov
rorb
data16
sbb
jmp
fwait
add
cwtl
mov
pop
outsb
fs
pushf
in
into
clc
jmp
std
lods
or
das
aas
jecxz
and
add
xchg
stc
jae
sbb
hlt
xchg
add
fs
sbb
cld
and
lods
insb
movsl
pop
pminub
push
xor
pop
sbb
sbb
jbe
mov
in
cmpsl
sbb
dec
ljmp
add
int3
lea
ja
rol
rcl
xor
sub
bts
push
sub
add
movsbw
bsf
mov
shl
rcr
test
mov
bt
pushf
bt
stc
repnz
call
iret
sbb
cmc
cmpsb
fildll
addr16
bound
mov
pop
pop
int3
xor
hlt
cs
dec
mov
xor
lods
fcomps
mov
in
add
jno
mov
xor
repnz
and
add
sub
rorl
imul
dec
stos
jecxz
push
sbb
enter
sbb
stos
mov
test
xchg
jae
call
in
push
push
clc
sbb
push
cmp
xrelease
lcall
inc
cmp
movsb
xor
inc
cmpsb
pop
add
call
pushf
call
jae
addr16
shlb
push
cmp
xor
inc
fnstcw
push
fists
gs
xchg
loope
mov
out
pop
les
inc
movsl
or
inc
sbb
cli
and
fcmovnbe
cmp
out
jecxz
insb
divb
push
inc
ljmp
aad
inc
movsb
es
pop
psubusw
lods
addl
xchg
int
shlb
lds
push
bound
add
jp
lods
es
sbb
jae
cli
dec
loopne
ss
pop
outsb
sbb
mov
jbe
add
cs
mov
mov
popa
ret
pop
inc
sbb
mov
popf
pusha
or
pop
imull
push
mov
push
lret
out
inc
mov
dec
xor
ficomps
repz
call
sbb
addl
push
sti
pop
fsub
repz
push
leave
test
mov
or
popa
dec
pushl
add
inc
mov
mov
lea
jne
mov
movsbw
pushf
not
movzbw
mov
pushf
pushf
push
push
pushl
ret
adc
add
pop
xor
and
insl
insl
imul
scas
cli
aas
movsb
cmp
sub
or
stc
les
pop
cmp
mov
imul
arpl
addr16
cmpsb
scas
add
leave
inc
pop
mov
xor
int3
movsl
mov
les
xchg
inc
dec
imul
pop
and
push
push
lahf
pop
iret
lret
and
pop
or
mov
lea
call
pusha
lea
jne
jmp
insl
orb
and
mov
loop
xor
jl
jo
arpl
daa
aam
push
xchg
dec
add
jb
dec
xchg
outsb
stos
xchg
or
cmp
clc
xchg
jno
stos
or
sub
ds
jge
xchg
lds
push
daa
mov
nop
js
aas
das
ds
mov
stc
jg
repnz
sub
shl
xor
pop
js
mov
imul
jns
outsb
inc
les
out
jle
fnsave
dec
jb
negb
push
rol
pop
jl
push
jo
or
mov
mov
cmc
subl
movl
and
je
shrd
btr
add
btc
cmp
mov
stc
add
stc
jle
mov
cmc
sar
not
mov
cmp
push
stc
cmp
pusha
call
bt
cmp
not
pushf
mov
lea
movsbw
bswap
bswap
mov
jmp
push
pusha
lea
jae
pusha
bt
stc
pusha
xor
mov
pushl
push
call
enter
jge
xor
mov
cmp
stc
add
insb
xchg
cmp
out
lods
fcomp
cld
cmp
addr16
clc
rcrb
lea
pushf
cmp
mov
ret
lock
jge
in
sbb
fdivs
es
ret
mov
fdivrs
jge
in
and
adc
xor
stc
ljmp
sbb
cld
cmp
mov
mov
fistps
mov
mov
lock
mov
fdivr
jge
clc
lret
cld
jle
inc
call
mov
add
jge
stc
xor
cwtl
jp
mov
sbb
jo
pop
mov
mov
mov
icebp
jge
testb
cmp
int3
jge
clc
push
icebp
ds
pop
cmp
jge
ljmp
cmp
mov
bnd
mov
mov
mov
cwtl
add
idivb
call
mov
mov
mov
mov
in
mov
mov
add
test
pop
mov
and
pop
mov
lret
or
jge
call
fs
cmp
clc
jge
jmp
pop
xchg
hlt
pop
scas
cmp
jge
sti
push
shll
cwtl
push
jge
rcrl
cmp
jge
clc
fnstsw
lahf
sbb
mov
mov
sarl
cwtl
cmpl
pop
ja
cmp
clc
jge
ret
cmp
cmp
lods
cmp
pop
cmc
jge
clc
fdivrl
pushf
sti
movsb
jno
cwtl
xchg
jge
clc
fiadds
add
add
mov
and
sti
cmp
jge
lock
cwtl
lcall
cwtl
xor
cmp
jge
stc
lods
ljmp
cli
jge
clc
shrb
xchg
cli
mov
pop
add
cmp
cwtl
xor
xchg
aam
mov
stos
cmp
mov
xor
cli
aad
cmp
xor
sti
jl
in
cmc
call
mov
mov
scas
cmp
fidivrs
clc
aas
roll
jge
aaa
sbb
jge
clc
fbstp
popf
push
sbb
sub
mov
cwtl
in
cld
cmp
sbb
xor
mov
inc
adc
out
mov
scas
mov
cli
testl
pop
add
cmpl
adc
sbb
cwtl
icebp
add
aaa
and
faddl
push
add
aam
outsb
lret
dec
jns
lods
lahf
test
dec
fwait
xchg
test
js
cli
mov
add
mov
push
push
movb
call
or
bts
sub
sub
cmc
lea
mov
cmp
push
lea
jg
sub
jmp
push
mov
mov
push
call
pushf
jmp
pop
clc
imul
dec
daa
xchg
cmp
mov
inc
inc
push
inc
push
mov
jbe
cmp
nop
jo
xor
cli
sbb
pop
xor
mov
outsb
push
inc
mov
stc
scas
push
mov
rcll
or
fdivs
adc
pop
dec
movsl
sar
pop
loope
fwait
or
cmp
aas
out
lds
pop
fistpll
fisubrs
dec
out
sahf
jo
fsts
test
lcall
xchg
xchg
mov
movsb
shll
shll
and
in
sahf
xor
jns
shl
mov
adc
shll
test
and
out
insl
fwait
and
jg,pt
xor
jecxz
jp,pn
int
jmp
cmc
mov
bt
push
test
call
mov
pushf
mov
pushf
mov
mov
movb
push
jmp
movzbw
lea
pushf
call
dec
bt
push
jmp
jl
fwait
push
and
and
and
mov
and
shrl
enter
lds
sub
cmp
gs
shl
scas
jmp
or
mov
movsb
icebp
mov
jne
add
or
in
and
mov
or
pop
hlt
iret
stos
inc
shrl
pop
bnd
or
stos
xchg
adc
clc
shll
outsb
push
inc
sarb
dec
ljmp
adc
cmp
or
repnz
xor
fldl
cmpsl
cmp
xorb
xchg
fs
dec
cltd
mov
sbb
xchg
test
ret
cmp
mov
xchg
cmp
sub
adc
sahf
cli
push
outsl
inc
aam
cmp
lock
inc
add
adc
xchg
pop
mov
mov
mov
add
jo
imul
sbb
rcr
dec
fiaddl
or
idivb
iret
and
sub
outsb
mov
push
add
in
fld
jne
pop
cmp
inc
xchg
dec
sub
cmpsb
adc
mov
sub
sarb
in
xor
mov
inc
sbb
sbb
test
lock
pop
cli
adc
sbb
lds
add
inc
xor
adc
cmp
insb
fnstsw
xchg
dec
shrb
xchg
xchg
add
out
hlt
and
adc
xchg
inc
and
loop
xor
jb
mov
popa
sub
xchg
jae
test
jo
and
das
outsb
push
cmp
mov
mov
sbb
jecxz
fistpll
push
outsl
fwait
jo
jmp
loope
cmp
adc
test
jecxz
jl
stc
push
mov
test
inc
popf
pop
jno
fldt
cmp
repnz
cmp
setae
lea
pop
mov
jmp
setbe
clc
btc
mov
lea
bts
mov
bt
or
push
lea
je
test
pusha
call
adc
adc
add
and
inc
mov
stc
xchg
fadds
fstl
or
outsl
int3
cli
aaa
cs
orb
mov
sarl
inc
repnz
add
shlb
and
pop
das
push
int3
pop
mov
fisubl
pop
mov
dec
negl
call
iret
cwtl
outsl
or
cld
arpl
or
jmp
dec
pop
in
test
lea
call
pusha
call
pushf
movb
movl
push
push
movb
lea
jmp
bt
jmp
cwtl
add
xchg
ds
dec
mov
lret
jb
pop
mov
mov
arpl
movsl
and
adc
push
es
xchg
int3
pushf
andl
jge
or
add
ds
jnp
xchg
xlat
iret
lahf
dec
test
and
sbb
cmpsl
fwait
dec
fmulp
mov
mov
movups
call
mov
adc
int
in
adc
xchg
add
bnd
mov
or
data16
mov
cmpsl
rcrl
lock
loopne
or
sub
jmp
aaa
and
adc
mov
outsb
xorl
jno
lods
test
cmpsl
lret
cmp
sarl
inc
jb
mov
sub
dec
adc
outsl
jp
xor
mov
fdivrl
xor
test
loop
adc
add
mov
std
mov
mov
sbb
hlt
xchg
cli
leave
sbb
pop
shll
pop
jno
dec
lods
ret
popa
fs
jo
xor
cs
insb
add
mov
and
sub
cmp
mov
scas
add
and
xchg
test
mov
imul
test
xchg
imul
fisubrl
lds
sub
add
call
push
dec
adc
mov
aaa
ret
loop
ja
inc
and
imul
mov
faddl
arpl
filds
mov
dec
mov
dec
pop
fs
std
call
add
jnp
mov
dec
jae
pop
movsb
mov
ret
sbb
xor
push
push
cld
sbb
sbb
xchg
jmp
mov
not
movzbw
add
stc
mov
xor
and
mov
rcr
sub
add
inc
movl
cmc
or
and
clc
mov
call
bswap
pop
mov
pushf
mov
call
pop
inc
in
adc
popf
ja
addr16
loop
cli
adc
or
mov
mov
aam
out
test
sub
push
loop
std
fsubp
sub
sbb
loop
xor
cmp
mov
les
dec
push
arpl
mov
jae
es
jge
sbb
mov
daa
inc
pop
cmpsl
and
add
arpl
fistps
xorb
xor
clc
sub
dec
sub
movb
movl
movw
movw
pusha
pushf
movl
push
push
mov
push
lea
jmp
pushf
pushf
movb
movl
pusha
movl
pushl
lea
jmp
movl
jmp
sbbl
xchg
addr16
js
mov
out
andb
cmp
xor
add
push
ret
fxch
push
test
push
mov
mov
push
inc
push
aaa
mov
aam
jo
rorl
push
ljmp
push
push
fists
mov
mov
int
dec
mov
cmpsl
leave
adc
mov
xchg
stos
xor
xor
movsl
xchg
cltd
movsb
cmc
add
sub
inc
popa
or
dec
iret
or
jmp
sbb
dec
cmpsb
push
jne,pn
lea
fcomip
pop
aad
out
and
xchg
jg
jecxz
movb
movl
call
pusha
sub
mov
sbb
rol
sub
shl
lea
add
jnp
sub
pusha
bt
test
mov
pushl
popl
clc
bt
cmp
push
lea
ja
push
movb
neg
push
sub
ror
rcr
shl
call
add
push
call
pop
inc
aas
push
and
imul
sbb
xor
ficompl
and
and
mov
enter
fwait
mov
inc
jne
inc
fs
add
lret
loopne
clc
testb
std
and
sub
jns
inc
add
lea
mov
sysenter
cwtl
push
in
sbb
cmp
cs
lret
ljmp
scas
or
cli
fisttps
jbe
das
and
insb
test
push
dec
iret
imul
pop
jne
jb
pop
and
mov
pop
add
call
out
data16
push
and
or
mov
ja
loop
js
inc
into
stc
loope
adc
test
add
test
mov
pop
call
dec
add
lret
rol
imul
add
pushf
mov
cmc
and
mov
mov
or
lock
movsl
add
mov
out
fldcw
in
cmp
add
xor
out
out
xchg
cmp
int
mov
test
in
or
xor
stos
push
cmp
cmpsl
add
test
jge
rcrl
stos
shlb
roll
dec
data16
inc
ficompl
sbb
loop
cs
shll
mov
setbe
pop
mov
pop
pusha
jmp
pushl
lea
jbe
or
shrd
setne
pusha
mov
sar
pop
pushf
add
stc
test
bsf
shl
mov
setge
push
add
add
stc
pushf
rcr
movl
adc
movl
sbb
xor
mov
movw
cmp
jmp
pusha
lea
je
je
bswap
bts
bswap
rcr
mov
or
add
bsr
mov
pusha
pushf
test
lea
je
jmp
jnp
and
in
mov
sbb
mov
mov
out
aad
dec
nop
aas
xchg
call
inc
in
pushw
mov
adc
outsl
ror
and
xchg
cmp
jp
call
fbld
out
aas
lcall
dec
sbb
xchg
xchg
or
out
cmc
into
nop
cmpb
dec
push
sub
popa
mov
sahf
daa
mov
repz
dec
stos
mov
mov
test
jne
sbb
xchg
xchg
add
mov
mov
sub
cli
sti
sbb
xor
es
xchg
lods
jg
mov
movb
lea
jbe
bts
xadd
xadd
shrd
sub
shld
test
bsf
mov
rol
sar
bt
mov
or
xor
add
ror
shr
xadd
mov
jmp
test
cmp
sub
push
cmc
jmp
test
sbb
and
shrb
mov
cwtl
leave
mov
xchg
xchg
xor
pop
stos
xlat
cmpsb
dec
jl
mov
scas
xchg
xchg
jbe
pop
lea
pusha
sub
inc
mov
xor
and
inc
adcl
pop
push
mov
sub
mov
mov
sbb
jle
cmp
adc
push
movsl
push
in
lds
xor
in
add
sahf
enterw
decl
jo
pop
mov
stos
add
cmpb
add
scas
and
stos
mov
lret
je
mov
mov
out
jno
enter
fld1
mov
push
or
lcall
push
ja
pop
xor
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
cmp
and
mov
pop
stos
dec
and
lods
dec
mov
hlt
add
jmp
test
jecxz
mov
xchg
fcoml
add
jp
push
inc
imul
mov
jg
jecxz
test
in
jmp
outsb
xchg
test
in
outsb
es
dec
push
lds
add
test
imul
and
fmulp
fbld
jo
aad
add
cmpsb
dec
fbstp
mov
lds
loope
xor
test
cmp
call
clc
push
movw
lea
jbe
ror
pusha
sub
bts
not
xadd
movsbw
mov
movzbw
bsf
mov
test
add
and
pop
bswap
btr
shr
rol
mov
dec
add
pusha
bswap
movzbw
pushf
mov
pushf
call
push
pushl
popl
bt
pushf
cmp
mov
lea
ja
stc
push
sub
movzbw
sbb
add
add
mov
mov
cmp
jmp
mov
fimull
and
and
loop
sub
subb
mov
test
add
sub
gs
test
insb
jb
subb
ss
rcrl
lds
mov
sub
xchg
mov
cmp
xor
lea
in
mov
pop
fchs
push
lcall
cmp
jl
sub
test
inc
jae
add
push
cmp
enter
movsl
add
icebp
xchg
push
stos
or
push
insb
pop
in
dec
movsl
add
sub
push
add
inc
repz
rclb
cmpl
push
loopne
mov
sbb
adc
mov
sar
popa
inc
clc
fsts
addr16
mov
cli
int
push
mov
lods
cmp
ja
adc
pop
fisttpll
out
pushf
cltd
cmp
pop
lcall
jl
xor
mov
inc
fcmovnu
fisttpll
and
shrl
sbb
dec
sub
ljmp
cs
xchg
outsb
out
cmp
and
inc
out
cmp
mov
stos
decb
and
cmc
fists
xchg
lods
push
jne
rolb
push
cmp
into
stc
lock
sbb
enter
cmp
movsb
bound
cmp
cwtl
insl
mov
jle
jns
pop
clc
adc
sahf
jnp
por
shlb
call
pop
or
xorl
icebp
xlat
ja
sub
or
push
sbb
aad
pop
sahf
lock
clc
clc
bt
call
lea
jne
pushf
jmp
lods
cmp
sub
cmc
call
push
lea
jne
pusha
not
jmp
mov
xchg
pop
and
dec
cmc
ret
sub
xor
leave
cmp
mov
jge
or
ss
adc
cmp
mov
adc
adc
cli
xchg
fisubrs
mov
stos
sbb
cltd
or
dec
jmp
ficoms
cmp
shlb
pop
mov
je
jno
ret
cltd
cs
mov
rolb
lock
pushf
push
lea
jae
setle
shld
mov
clc
adc
shl
mov
neg
bsr
call
pop
mov
fucompp
leave
mov
dec
inc
out
or
movsb
xor
cltd
inc
iret
vpmuludq
mov
fsubs
jge
xorps
mov
aas
xchg
pop
int
or
pop
inc
stc
and
xchg
and
mov
cltd
sar
xor
mov
dec
fwait
or
sbbl
test
iret
xchg
in
or
add
mov
aas
pop
subb
lahf
int3
aam
ja
ds
subb
dec
jg
dec
jge
shrb
cmp
xchg
sub
ds
popf
sub
cli
call
jl
mov
dec
mov
aam
repz
xchg
push
xchg
shll
pop
mov
in
xchg
mov
out
outsb
mov
fdiv
pop
or
cs
stc
inc
lods
sub
push
enter
int3
cmc
shll
mov
fnstcw
mov
cld
mov
sub
sbb
jge
jnp
mov
dec
inc
pop
cmp
or
dec
sti
fisttps
into
flds
mov
aad
and
in
out
or
and
les
popa
mov
movsl
or
loop
mov
push
hlt
jecxz
dec
movsb
clc
sbb
out
addr16
out
mov
and
mov
sbbl
lahf
imul
lcall
pop
sahf
xchg
jnp
clc
mov
mov
or
int3
mov
mov
or
mov
nop
enter
or
mov
into
iret
dec
mov
mov
int
sarl
mov
lea
je
stc
cmp
add
clc
call
mov
jae
and
pop
out
xchg
xchg
rorl
xlat
loop
jmp
lea
in
in
mov
mov
dec
inc
xor
int3
xchg
pop
fcos
mov
pop
mov
test
es
mov
jecxz,pt
in
push
std
dec
andl
xchg
xor
out
outsb
jns
xor
xchg
stc
cli
mov
pusha
mov
sti
hlt
bound
add
clc
lret
es
mov
rol
sbb
mov
js
les
cltd
cwtl
jp
push
dec
sub
xor
into
mov
rorl
aad
loop
or
pop
mov
mov
fldenv
inc
inc
rcrb
leave
shrl
mov
andl
mov
mov
jp
jmp
out
lcall
in
mov
pushf
jae
jl
in
inc
add
pop
sub
pop
jns
push
xor
lds
test
int3
lcall
mov
lret
pusha
stos
pushf
pop
into
jbe
stc
mov
mov
push
movsb
push
inc
xor
daa
mov
lods
mov
mov
mov
xor
ficompl
mov
add
and
xchg
pop
out
dec
cmc
cmp
mov
pop
icebp
push
sarl
inc
mov
inc
bound
mov
cltd
aas
xor
jg
mov
sbb
das
mov
sub
mov
sub
xchg
push
jae
cld
xor
jecxz
mov
pop
mov
cli
mov
rorl
repz
sub
in
and
adc
shll
sub
inc
mov
cs
adc
jge
outsb
mov
and
ljmp
ja
inc
mov
iret
mov
mov
xchg
jbe
scas
mov
cli
fsubrp
roll
iret
inc
aad
adc
sbb
es
ss
aas
pusha
enter
cmpsb
outsb
test
int3
loop
out
enter
push
inc
xor
inc
cli
push
insb
aas
jle
mov
mov
test
fsubr
cli
clc
or
push
enter
push
inc
pusha
fsubrs
mov
pushf
enter
push
mov
lock
aam
loop
xchg
push
or
mov
pusha
fdivs
sahf
inc
cmp
inc
out
fdivr
cli
adc
aas
xor
inc
ficoml
insb
inc
jle
nop
cli
pushf
scas
ds
fcomp
in
lock
add
push
cli
and
aas
cmp
push
fisubl
outsb
inc
sbb
cli
mov
aaa
ror
ljmp
cli
inc
push
aas
pusha
enter
xchg
inc
mov
scas
cli
into
ljmp
es
cmp
inc
cli
pop
push
ficoml
shl
sarb
fmulp
in
decb
and
sub
cmp
aas
pop
enter
xchg
inc
scas
rol
mov
fdivrs
aas
sbb
sub
cmp
dec
inc
pop
fdivs
orb
shlb
in
aas
push
enter
cmp
dec
fsubs
push
aas
xchg
enter
mov
call
cli
push
sub
inc
enter
outsb
inc
jbe
xchg
xchg
cmpsb
inc
cmp
out
hlt
fadds
cli
adc
aas
xor
cmp
dec
push
inc
push
cmp
mov
mov
aaa
mov
add
fcomps
sub
dec
enter
incb
cli
lods
mov
fmul
lock
adc
fsubrs
cli
cmp
enter
xchg
inc
mov
xor
call
incb
aaa
icebp
cmpsl
fsubs
dec
cmp
outsb
incb
cli
mov
divl
hlt
inc
add
adc
push
cs
ds
fs
jo
jl
mov
les
inc
in
out
cli
clc
or
push
enter
pop
inc
jo
mov
mov
aaa
int3
enter
decb
inc
fadds
push
jbe
mov
cwtl
mov
les
cli
repnz
aas
adc
and
xor
inc
inc
push
fsubs
jbe
aas
xchg
enter
mov
inc
cld
fcoms
cli
es
aas
push
enter
decb
jns
gs
mov
sbb
push
mov
cmp
dec
ficompl
inc
sbb
sti
cmpsb
mov
mov
call
cli
adc
aas
dec
enter
jbe
xchg
xchg
cli
cmpsb
mov
ljmp
cli
and
aas
dec
enter
jp
mov
sahf
cli
scas
shl
sarb
loopne
cld
fimull
and
fmuls
pop
push
jle
xchg
fisubrl
int3
inc
hlt
cli
or
aas
xor
fimull
inc
jl
xchg
cli
mov
aaa
fmul
in
decb
inc
and
cmp
push
push
fisubl
ret
call
test
ds
stc
cmc
iret
jbe
js
mov
lcall
rol
int3
ret
lahf
fdivrs
aas
and
xor
inc
pop
inc
insb
fdivrs
mov
mov
rol
mov
adc
sub
fadds
cs
sbb
mov
cmpsb
ds
aas
add
push
fisubrl
inc
inc
push
fsubrs
cwtl
aas
lods
mov
out
sbb
mov
dec
out
pop
mov
mov
push
sbb
jl
lcall
jbe
dec
ds
aam
add
mov
icebp
lods
fcoml
jne
mov
add
cmp
ret
lahf
movsb
adc
pop
xchg
mov
movsl
test
imul
cmp
fnsave
mov
sub
xor
mov
cmp
fwait
and
mov
aaa
and
popf
xchg
dec
in
fimull
push
stos
mov
push
lods
xchg
jge
sbb
xchg
sub
repz
sbb
and
adc
push
dec
push
data16
imul
mov
sbb
movsl
jp
out
push
out
xchg
lds
es
sbb
mov
or
ret
les
cmp
mov
jmp
mov
les
or
fwait
shlb
xchg
cmc
repz
add
or
aad
mov
mov
jle
enter
aam
ss
add
iret
dec
stos
mov
jecxz
fcomp
orl
sbb
pop
out
testl
cmc
inc
mulb
aam
push
add
mov
mov
pushf
push
je
aaa
fisttpl
jg
std
pop
test
jne
mov
cwtl
cmp
outsb
test
mov
scas
fcmovb
add
out
nop
sbb
std
lret
rorl
push
nop
jns
xchg
in
add
test
add
cmp
pop
rol
jno
ja
std
movsb
inc
int
mov
cmp
xchg
xorb
adc
scas
scas
jmp
cmp
push
int3
mov
ja
insl
jae
rol
xor
mov
mov
mov
xchg
shrl
pop
dec
cmp
data16
sahf
jns
cmpl
xchg
sbbl
pop
out
mov
scas
mov
adc
mov
xchg
cmpsb
cli
inc
roll
jge
jbe
ljmp
sahf
push
jnp
test
nop
repnz
rcr
iret
ds
cmp
mov
mov
mov
stos
gs
call
sub
jo
clc
insb
sahf
inc
mov
push
dec
subb
loope
jnp
lcall
push
pop
fs
icebp
les
sbb
push
mov
in
xchg
mov
xor
xchg
ds
pop
or
test
adc
push
sarb
and
pushf
mov
insl
sub
mov
jmp
sti
xor
or
xor
lret
mov
sub
dec
mov
bound
shlb
std
mov
bnd
out
or
mov
in
dec
pop
and
xchg
push
inc
rclb
stos
dec
push
jp
mov
movsl
cmpsl
es
loopne
mov
ljmp
mov
sub
xchg
mov
mov
add
mov
mov
jmp
sbbl
fisttpll
or
mov
pop
and
fs
jle
xchg
xchg
mov
mov
and
ds
sub
insl
test
mov
pop
sarb
daa
hlt
jp
sbb
jmp
cmc
mov
push
lods
mov
insl
jbe
mov
sbb
fldcw
pop
out
jecxz
mov
aaa
push
push
adc
push
leave
push
mov
xchg
jmp
and
cmp
cwtl
data16
insb
out
xchg
mov
pop
scas
sbb
sub
mov
jnp
loopne
pop
pop
mov
js
ja
aas
xor
sbb
dec
mov
fistl
inc
shlb
cmpsl
pop
lds
rcll
les
cld
in
popa
in
mov
fnstsw
push
lods
cmp
mov
and
sbb
adc
mov
sbb
js
xor
sahf
xor
cltd
dec
jmp
xlat
mov
rorl
mov
mov
inc
mov
mov
lock
mov
aaa
mov
lods
xchg
add
mov
nopl
mov
push
xchg
mov
mov
jle
xchg
cld
xchg
and
xchg
inc
jbe
push
mov
mov
inc
lds
cld
cmp
pushf
addb
xor
mov
push
jmp
hlt
cmp
ss
and
jge
js
leave
xor
or
ret
loop
jmp
add
sbb
in
mov
push
int3
mov
cli
push
dec
mov
mov
add
and
mov
jp
xchg
mov
inc
imulb
sub
das
sbb
divl
ss
pop
and
fs
imul
mov
jns
and
gs
inc
push
mov
orb
cmp
int3
cli
jecxz
dec
pop
adc
sbb
mov
push
std
cwtl
jl
mov
dec
enter
cmpsb
xor
loope
mov
xchg
or
adc
leave
aam
fwait
xor
mov
ja
in
jmp
enter
icebp
jecxz
cs
push
jno
sbb
push
push
cmpsl
mov
arpl
mov
out
push
rcrl
pop
add
sub
mov
cltd
mov
stos
mov
fisttpl
cmpb
clc
push
dec
or
xor
ja
cmp
cmovno
fists
sub
and
sub
jge
mov
jle
xor
add
rcrl
jecxz
in
repz
push
jns
mov
mov
mov
sub
xor
jg
mov
ljmp
mov
jb
fstps
and
int
mov
and
jbe
mov
call
jne
les
out
rorl
mov
in
adc
mov
cmpsb
test
test
imul
loop
pop
lds
push
les
push
jmp
push
es
out
fstps
pop
ds
mov
adc
add
call
pop
pusha
mov
cmp
jne
and
es
repz
xlat
stc
test
jecxz
jb
or
cmp
loop
or
mov
std
and
movntps
sbb
imul
ret
fwait
subl
clc
enter
jns
jge
hlt
xchg
mov
imul
jecxz
mov
orl
leave
mov
sbb
imul
enter
and
cmp
rolb
lret
push
in
cmp
testb
imul
stc
mov
insb
test
cmp
jle
pop
mov
sbb
addr16
mov
mov
mov
jne
mov
int3
add
mov
adc
xlat
imul
loope
std
mov
add
inc
repnz
jns
mov
out
mov
cmp
xor
adc
cld
lret
mov
out
shll
and
xchg
jo
leave
jge
inc
rolb
add
push
push
pop
in
scas
or
cli
popa
sbb
fidivrs
pop
loopne
mov
xchg
into
sub
mov
jns
sub
lcall
ret
mov
sbb
push
mov
mull
orb
popf
movsl
jmp
ljmp
xor
mov
addb
xchg
dec
fadd
mov
add
ret
and
mov
jno
enter
dec
arpl
arpl
or
mov
fucomp
xchg
pop
outsb
dec
shll
andl
sbb
sbbb
or
mov
inc
push
jl
inc
cmp
mov
pusha
mov
xor
sub
jns
xorl
ss
and
data16
repz
call
int3
cli
insb
outsb
les
mov
addr16
ds
enter
mov
mov
test
or
bound
xchg
pop
fs
in
cltd
das
sub
jp
mov
hlt
mov
aad
dec
jecxz
std
notl
xchg
ja
adc
xor
aam
fsubp
lret
ds
adc
lods
sbbl
mov
inc
lcall
bt
loopne
pop
mov
test
ficoml
inc
sbb
mov
js
test
push
push
push
fstl
mov
push
cli
jbe
divb
sbb
mov
jno
imulb
sbb
cli
sub
lock
or
xchg
gs
xchg
mov
jnp
mov
jne
scas
movsb
mov
mov
lods
mov
mov
orl
mov
mov
popa
rolb
or
aam
pop
hlt
mov
fildll
fwait
lock
pushf
add
out
call
push
push
mov
cmp
shl
inc
xchg
ds
jbe
cmp
inc
loopne
push
pop
mov
inc
jl
xchg
mov
nop
sbb
pop
out
sub
cmp
push
pop
adc
mov
add
adc
shlb
aad
popa
mov
mov
jp
insl
mov
inc
popa
leave
pusha
scas
sbb
and
push
dec
mov
inc
add
in
out
inc
or
adc
iret
mov
in
sub
or
xchg
mov
cwtl
aam
je
add
jae
idivb
arpl
ret
push
add
mov
and
mov
daa
arpl
mov
rolb
sub
dec
add
fdivr
cld
ficomps
lea
sarl
subb
adc
mov
mov
jge
shrl
sbb
cmp
mov
ret
das
mov
dec
rorl
xorb
xchg
imul
aaa
adc
testl
rcl
xlat
cli
mov
pop
add
cmp
shlb
pop
cmpsb
div
jae
aaa
ja
test
dec
mov
pop
xchg
shrl
or
mov
jo
pop
sub
dec
stos
mov
rcrl
aas
inc
or
mov
movsb
data16
call
daa
in
push
jns
add
push
xor
outsb
pop
cmp
cwtl
sarl
pop
ljmp
lahf
in
scas
xchg
xchg
loopne
inc
pop
ss
decl
mov
add
cmp
xchg
sub
add
lret
and
dec
jae
in
cli
mov
adc
mov
ja
scas
aad
ss
mov
push
push
pushf
pop
push
mov
in
pop
cmp
cltd
outsl
loopne
jo
mov
jle
scas
sahf
movsl
mov
mov
push
fsubrp
and
cmpsb
lcall
rcrb
les
cmp
and
sub
in
jp
shll
mov
jmp
je
jbe
push
lods
inc
shl
and
add
out
mov
in
jno
out
out
negb
push
jb
mov
mov
cmp
xchg
jmp
mov
xor
enter
jp
ja
jg
cs
and
std
dec
mov
add
test
xlat
pop
ja
popa
inc
das
cmp
hlt
mov
cmp
test
mov
icebp
xor
test
mov
mov
push
mov
pop
bound
les
mov
mov
roll
add
pop
mov
mov
ss
ljmp
xor
ret
sbb
fdivr
mov
mov
bound
mov
add
inc
test
mov
adc
das
xchg
pop
or
mov
inc
scas
roll
in
inc
jns
stc
int
sub
xor
rclb
sub
mov
jmp
popa
ds
inc
inc
es
aas
fcmovnu
pushl
in
add
push
fimull
xchg
mov
insl
es
or
xchg
xchg
mov
das
or
lds
test
add
and
fwait
xchg
pop
add
in
cmp
sbb
mov
cmpsb
popf
inc
pop
movsl
out
jp
mov
xchg
pop
repnz
cmp
and
mov
mov
xchg
push
enter
shll
mov
push
adc
sbb
inc
add
icebp
mov
sbb
mov
shlb
loop
mov
xchg
pop
test
sbb
inc
xor
cli
mov
pop
aam
stos
fmulp
sub
cmpsl
inc
ficoml
loope
xorl
pop
mov
push
mov
inc
xor
aad
pop
adc
arpl
mov
or
data16
nop
and
mov
sub
stc
mov
dec
mov
pop
cmp
sbb
rorb
mov
mov
outsb
jo
push
inc
jmp
ja
push
hlt
cmpsb
in
mov
dec
or
mov
int3
mov
stos
inc
mov
pop
xor
cmp
hlt
jns
push
or
iret
mov
popa
mov
stos
test
scas
adc
pop
mov
or
bound
push
mov
adc
jecxz
push
mov
xor
mov
adc
xchg
into
pop
jb
into
jno
add
into
out
insl
cmpsb
mov
leave
cli
repz
pop
add
rolb
lahf
dec
mov
adc
cmp
aam
stos
push
mov
dec
cmp
cs
mov
in
inc
push
hlt
xchg
xchg
fisubl
pop
mov
xor
push
xchg
jbe
pop
int3
and
xchg
cld
sub
mov
inc
sbb
jge
mov
jbe
push
mov
mov
js
in
xor
sub
or
test
hlt
negl
mov
fdivl
adc
addb
mov
mov
jb
add
mov
les
mov
cmp
inc
arpl
mov
and
sub
sub
sub
int3
repnz
shll
es
mov
aas
mov
mov
mov
push
sahf
dec
out
mov
or
pop
cmp
stos
mov
imul
mov
push
push
in
mov
dec
lcall
inc
push
out
xchg
rcll
pop
pusha
pop
xorl
sti
xchg
mov
adc
mov
pop
pusha
jbe
xor
call
push
xor
jo
aad
mov
mov
push
fistps
sub
fldenv
mov
je
adc
xchg
cmp
xor
pop
fidivs
sub
outsl
aam
dec
lock
insb
xchg
jbe
in
push
jl
pusha
insl
cmp
shl
clc
sub
dec
xchg
jae
adc
shlb
into
sub
fidivrl
xchg
cld
sti
pop
mov
sbb
test
aam
stos
and
aad
fdivl
push
push
adc
fstpl
test
in
adc
xor
cmpsb
xor
negl
pop
scas
xor
pop
push
nop
mov
pop
xor
mov
dec
and
cmpsb
imul
int3
sub
pop
jmp
pop
inc
mov
adc
fcoms
shlb
fcompl
or
mov
mov
pop
lea
lret
lods
sub
fs
pop
xor
rcl
sub
mov
dec
inc
mov
jmp
int
rcr
mov
xor
xchg
call
cmp
sbb
mov
pop
or
movsl
mov
les
addr16
mov
adc
adc
mov
cmpb
push
adc
shl
fsts
xor
jnp
jl
test
decb
mov
loope
mov
xchg
in
divl
test
in
mov
das
call
out
dec
jmp
icebp
addl
inc
or
neg
scas
or
mov
aas
popa
ficompl
icebp
iret
ljmp
popf
push
ds
je
or
in
jmp
dec
jbe
insb
orl
loop
add
adc
in
les
sbb
adc
cmp
add
jl
jae
xlat
adc
ljmp
bound
sub
dec
lods
cmp
xchg
mov
push
adc
mov
pusha
aas
mov
sub
lcall
xchg
mov
dec
nop
aad
fidivs
push
inc
ret
jb
xchg
mov
pop
lods
sbb
insb
lret
jmp
mov
mov
mov
mov
xor
jb
pop
les
mov
cmp
jmp
jne
or
and
push
mov
pop
adc
dec
icebp
fisubrs
mov
add
mov
jb
hlt
mov
in
adc
out
mov
rol
mov
das
cmp
out
xor
lock
out
mov
ss
add
xor
xor
lcall
sub
pop
and
into
out
stc
jg
movsl
fidivl
cmovns
jbe
mov
dec
lret
je
sbb
cmpsl
ss
lods
int3
mov
ss
enter
mov
cmc
lock
out
or
repnz
xor
aad
js
push
push
lods
cmp
movsl
dec
shrb
push
pop
imul
cmp
xchg
jns
mov
test
mull
pop
shr
clc
rol
inc
sahf
mov
and
inc
mov
jmp
pop
out
les
mov
xchg
inc
mov
scas
rclb
int3
add
mov
dec
mov
ss
jl
fs
mov
lods
mov
popa
push
test
repnz
jge
mov
cmp
jle
mov
inc
mov
shlb
xor
mov
sbb
inc
mov
je
sbb
mov
adc
push
mov
inc
mov
cmpsl
mov
xchg
inc
jbe
iret
jp
inc
test
hlt
inc
icebp
sbb
and
aas
adc
mov
shll
insb
sub
or
sbb
jl
push
leave
sti
int
in
fxch
xor
cmp
sbb
clc
inc
cmpsb
jnp
adc
incb
mov
jge,pn
mov
sbb
add
mov
daa
adc
repnz
dec
and
add
mov
loope
icebp
adc
mov
sarb
lds
cmp
movb
repnz
xchg
addb
xchg
stc
pop
cmp
push
nop
mov
jecxz
aad
cmp
mov
pop
sbb
cld
arpl
leave
xor
imul
cmpb
loopne
je
sbb
jecxz
lods
enter
xlat
lods
fnsave
jl
jb
mov
xchg
push
pop
sub
jne
pop
dec
sbb
push
jp
mov
mov
repz
cwtl
mov
push
push
call
ja
jb
roll
repnz
repz
int
xchg
add
rol
sbb
lods
sub
sbb
adc
mov
ficomps
adc
sub
das
outsb
cld
mov
mov
push
mov
push
lahf
inc
push
adc
pop
jmp
stos
push
sbb
jae
inc
pop
sbb
adc
or
cmp
shl
mov
movsb
cmp
mov
xor
loop
mov
stc
jmp
into
mov
xchg
sbb
mov
je
mov
jg
mov
loopne
push
xchg
pop
std
mov
mov
mov
adc
and
aas
add
orb
sbb
mov
push
movb
pushf
pop
push
sahf
cs
push
xor
xorl
ss
mov
push
mov
cwtl
rol
push
dec
jbe
stos
mov
sub
loope
mov
xor
inc
or
mov
add
xchg
add
in
out
sub
add
push
mov
ljmp
cld
cmp
aam
mov
jmp
jae
rclb
or
aad
mov
js
inc
xlat
mov
daa
mov
fldt
sbb
push
mov
xchg
inc
mov
or
dec
mov
mov
xchg
or
out
fdivl
add
mov
orl
in
movsb
mov
mov
xchg
push
lds
andl
cmpsb
das
cwtl
sub
jmp
popa
aam
push
cmp
mov
nop
int3
arpl
aas
mov
leave
stc
outsb
xchg
ds
or
adc
fdivrp
push
imul
xchg
dec
mov
lds
lock
xor
adc
xchg
leave
mov
daa
xchg
xor
mov
insl
push
int3
stos
lahf
sub
mov
mov
sbb
mov
test
push
ficompl
xchg
add
mov
add
inc
pop
lea
jp
adc
xchg
or
inc
mov
mov
stos
sahf
scas
mov
lahf
and
cwtl
out
loope
mov
imul
pop
xchg
jae
cmp
pusha
push
dec
dec
jb
aam
jne
or
je
mov
cld
ret
popf
leave
xchg
mov
aaa
cmpsb
es
mov
cmp
dec
sub
push
cmp
divl
call
push
add
cmc
dec
je
loopne
sub
mov
ret
pusha
test
dec
filds
push
ja
shll
adc
cmp
mov
aam
es
pusha
out
xor
cmp
and
insb
push
stos
mov
fsts
adc
repz
mov
loope
pop
mov
mov
fidivrs
ja
inc
into
push
mov
mov
dec
aam
cld
leave
fwait
lods
xor
jne
xchg
push
mov
mov
pop
jnp
mov
mov
mov
push
inc
mov
add
push
adc
lds
mov
aad
in
clc
subl
push
nop
sahf
dec
inc
divb
daa
lods
cltd
repz
shll
jge
icebp
test
aas
mov
mov
mov
in
sti
mov
leave
pop
jbe
mov
dec
lds
xchg
in
sbb
adc
and
mov
mov
pop
cmpsb
sar
jno
es
push
cltd
test
scas
shll
mov
out
faddl
xlat
stc
icebp
ds
aam
test
fistpl
add
out
lret
mov
jl
sti
aaa
aad
mov
or
das
jp
shlb
mov
add
mov
sub
lret
mov
push
in
mov
mov
out
shll
push
dec
fisubs
cmc
stos
mov
jo
loope
mov
adc
insl
mov
dec
rcrb
adc
les
aas
mov
ror
call
mov
orb
insb
mov
pop
inc
lret
icebp
imul
xchg
dec
mov
fsubr
arpl
mov
cli
mov
mov
es
ss
inc
nop
mov
dec
adc
dec
sub
mov
mov
lods
aad
cltd
cwtl
mov
hlt
arpl
jns
mov
push
mov
jo
sbb
scas
aas
data16
mov
mov
cld
cs
arpl
cmp
and
out
pop
mov
and
xor
movb
mov
push
mov
xchg
jne
add
out
cmpsl
stos
mov
mov
push
pop
dec
aaa
out
push
ret
jbe
fistpll
xchg
xchg
inc
adc
add
cmp
jb
or
ds
mov
mov
lret
scas
daa
xorb
mov
cmpsb
cmp
divl
mov
jp
test
jbe
pop
mov
xor
insl
pop
push
fsub
adc
mov
xchg
or
push
jno
sahf
push
xchg
mov
dec
out
ror
test
std
mov
mov
adc
xchg
pop
push
scas
sub
inc
aam
sbb
dec
loope
clc
shrl
or
pop
pop
mov
push
push
jo
xchg
jnp
jl
dec
scas
imul
imul
aas
add
adc
push
stos
lock
adc
pop
inc
cli
jmp
mov
dec
push
pusha
das
std
leave
shl
insl
dec
mov
inc
push
mov
mov
imul
mov
sahf
pushf
push
shlb
roll
fsubrs
mov
jnp
mov
sub
adc
cmp
gs
arpl
leave
mov
lret
dec
cmp
mov
fcoms
pop
mov
movsl
inc
pop
and
mov
insb
jnp
ss
xor
es
mov
hlt
cmp
daa
scas
jne
incb
dec
lds
mov
jl
movsb
xchg
mov
test
les
fnstsw
cltd
testb
mov
or
adc
or
push
inc
fcompl
sub
in
jle
shlb
lahf
rcrl
mov
out
xchg
dec
jmp
jbe
je
jb
aaa
inc
mov
or
jbe
xchg
mov
loop
adc
fcomp
not
fisttps
or
inc
test
mov
int3
into
mov
add
add
lock
mov
mov
cmp
arpl
mov
mov
imull
push
mov
rcrb
jbe
repz
insl
in
pop
or
mov
cwtl
mov
pop
mov
test
jmp
jg
and
sbb
dec
push
mov
stos
sub
sti
mov
or
sbb
test
cmp
cs
mov
and
push
mov
scas
and
pop
es
mov
cmc
bound
adc
mov
mov
out
fsubrp
rcll
cltd
jge
inc
negb
cmp
xchg
mov
and
push
mov
mov
aam
or
sarl
stos
mov
cmp
push
je
into
jno
mov
pop
repnz
dec
outsl
xchg
mov
pop
mov
imul
cmp
scas
push
dec
pushf
in
js
pop
mov
and
adcb
insl
int3
ret
push
data16
es
xchg
fidivl
dec
pushf
popf
pop
lcall
rclb
sub
cwtl
jns
mov
dec
repnz
mov
jnp
mull
add
cmp
cmp
das
mov
es
mov
sbb
jae
shlb
mov
inc
and
sahf
pusha
and
push
inc
lods
fldl2e
mov
sub
or
out
mov
jbe
mov
jmp
push
mov
mov
mov
fs
aad
xchg
cmp
push
shlb
lea
mov
mov
push
mov
stc
mov
ret
mov
mov
xchg
xchg
ss
mov
movsl
mov
das
loopne
mov
dec
mov
stos
xchg
mov
jl
popa
jb
mov
adc
fisubs
dec
cmc
mov
cmp
mov
in
mov
les
xor
imul
push
mov
dec
subb
mov
mov
ss
push
popa
mov
aad
mov
xchg
divl
std
mov
repz
sbb
mov
mov
std
inc
sbb
into
pop
in
enter
loopne
cmpl
leave
dec
rclb
out
jle
mov
into
inc
or
idivl
lock
aas
fs
les
inc
sbb
les
cs
mov
adc
add
shll
add
xor
shlb
fimull
filds
jae
daa
mov
pop
ja
outsl
loop
adc
data16
and
pop
dec
dec
sub
test
xchg
sbb
xchg
mov
test
adc
mov
mov
mov
inc
pop
pop
xchg
loope
rcr
pusha
xor
add
xor
mov
pop
push
cmpsb
int
add
mov
dec
jbe
scas
fldcw
add
shlb
xorb
jno
push
mov
cmp
leave
add
jle
sub
mov
orb
sar
mov
cwtl
aaa
stc
call
pushf
mov
add
orl
sahf
push
push
jle
addr16
adc
fsubl
sub
je
daa
aaa
mov
mov
loop
ret
aam
jbe
call
cltd
pop
lods
fisttpl
fcmovu
and
mov
and
imul
jmp
xchg
scas
mov
roll
sarb
enter
jle
out
bound
xchg
and
xchg
loope
mov
dec
sti
push
std
roll
les
arpl
mov
adc
mov
bnd
mov
in
mov
das
mov
add
mov
leave
repz
dec
out
mov
cmp
sbb
shl
mov
out
fmuls
push
insb
inc
mov
mov
push
jb
pop
mov
shr
jbe
push
jle
in
sbb
add
mov
inc
jno
xchg
push
adc
ss
aad
xor
out
pop
dec
mov
add
out
sub
adc
mov
xchg
fiadds
in
shll
inc
pushf
ret
mov
fcoms
mov
and
jo
jbe
popa
xorl
rcll
jne
ss
pop
push
cmc
fnstcw
xor
ljmp
push
loope
cmpl
inc
jnp
out
cmp
mov
cmpsb
das
test
xor
mov
iret
add
jl
stc
les
lret
cmc
mov
mov
pop
and
loop
cmp
idivb
mov
mov
cwtl
imul
jns
dec
mov
arpl
add
mov
fcompl
jno
mov
push
xchg
rclb
out
js
pop
jge
hlt
pop
sbb
jno
push
sub
or
xor
push
hlt
mov
fnstcw
aam
cs
push
in
mov
adc
mov
mov
inc
in
test
popa
xchg
mov
les
cmp
mov
xchg
xchg
xchg
scas
pop
repz
xor
push
mov
cmp
out
insl
enter
mov
lock
fldl
icebp
out
int3
mov
popa
mov
push
mov
inc
cmp
enter
cmpsb
aam
pusha
cmp
pmullw
testl
xchg
cli
mov
scas
pop
jae
ljmp
cltd
push
addr16
push
jl
test
pop
das
sbb
or
idivl
xchg
popa
aas
mov
and
dec
ja
inc
mov
fwait
jno
call
mov
cwtl
aas
hlt
in
insl
mov
stos
pushf
push
fisttpll
mov
fwait
ss
cmpsb
push
mov
xlat
add
sbb
xchg
mov
mov
inc
mov
mov
loop
fwait
lea
sbb
outsb
cmp
mov
fcomi
ss
push
hlt
and
push
xchg
icebp
cmp
add
sub
imul
sbb
jbe
jne
mov
jp
imulb
pop
mov
push
movsb
shrl
fidivl
vrcpps
mov
scas
js
imul
andl
mov
push
test
sti
popf
lods
js
pusha
mov
int3
mov
pop
xor
xchg
lock
lahf
rcll
mov
cmp
mov
mov
mov
mov
imul
push
ds
lret
mov
mov
adc
jne
mov
ss
xchg
dec
fsubl
mov
icebp
add
movntq
add
cmp
pop
push
adc
les
popa
mov
lret
imul
jnp
ss
mov
mov
cmp
addb
mov
cmp
out
clc
mov
xchg
mov
ds
in
ljmp
fists
mov
test
in
data16
pop
mov
xchg
out
jns
js
scas
mov
aaa
lcall
mov
lea
pop
xchg
dec
les
aad
mov
xchg
mov
jmp
add
pusha
jbe
call
rcrl
scas
jbe
dec
popf
aam
out
mull
inc
ljmp
out
pop
and
mov
ss
shr
mov
es
xchg
mov
mov
ret
ss
push
js
movzwl
inc
xor
out
jbe
data16
mov
xor
arpl
mov
fcompl
test
ss
mov
mov
mov
std
pop
mov
lock
sub
mov
icebp
jno
scas
jbe
subb
mov
mov
mov
int
xchg
jl
out
mov
push
data16
jb
out
int3
xchg
mov
pop
cmp
mov
fsubrs
adc
out
mov
mov
mov
dec
cltd
adc
dec
push
jle
xchg
xor
jmp
inc
jb
pop
rorb
mov
stos
ret
mov
adc
outsb
es
cmpsb
sti
mov
mov
mov
cmp
mov
jle
test
lahf
or
aad
repnz
mov
inc
mov
cmp
mov
pop
cli
add
mov
pop
inc
push
xor
test
mov
cli
mov
jmp
mov
mov
in
clc
cwtl
enter
fdivs
ds
mov
push
jne
dec
mov
mov
out
mov
movsl
sub
sub
mov
mov
daa
aam
push
int3
ljmp
jb
jge
into
test
pusha
cltd
and
push
mov
jecxz
adc
sbb
ja
add
xchg
jne
dec
ret
sub
inc
mov
addr16
mov
in
rcrb
es
js
fildll
hlt
pop
pop
mov
pop
loopne
and
inc
sahf
mov
pop
movsl
rcr
sub
lds
stos
mov
mov
mov
xchg
push
jns
jecxz
fsubrl
dec
add
push
outsb
fldenv
out
push
push
in
inc
mov
xor
cmp
ret
cmp
and
lock
mov
push
adc
cltd
negb
mov
inc
loope
mov
or
push
sub
add
mov
xchg
ret
into
push
mov
mov
fdivrs
jns
shlb
sbb
push
xorl
cmp
mov
jbe
jns
idivb
dec
testb
mov
in
push
pop
mov
shrb
jge
mov
in
mov
cmp
ret
adc
jg
roll
cli
push
dec
fdivs
dec
fwait
in
xor
xlat
jl
jg
ret
add
xor
rclb
in
mov
outsl
notl
mov
cmp
mov
mov
lahf
jecxz
testb
dec
jb
call
subl
dec
cltd
aas
mov
mov
fisttps
bound
inc
mov
dec
and
aad
enter
stos
jno
popf
in
fwait
out
sbb
sub
adc
test
add
ja
cmpsl
fidivrs
sub
mov
mov
daa
push
repz
sub
inc
movsb
mov
fdivl
sbb
cs
pop
outsb
mov
push
insb
jno
mov
addr16
lret
xorb
adc
mov
push
mov
dec
out
mov
and
jecxz
cmp
mov
pusha
mov
jns
pslld
push
push
out
jne
mov
je
add
xchg
dec
mov
cmpl
sub
out
or
outsb
dec
je
mov
test
aaa
fldcw
cmpsb
sbb
xchg
cli
scas
mov
out
in
xor
mov
sbb
cmc
mov
mov
imul
addr16
xor
pop
mov
pop
sbb
cmp
mov
shll
insb
mov
cmpl
fidivs
in
je
mov
movsb
mov
es
inc
mov
fnstcw
popa
repnz
or
mov
xor
std
pop
mov
outsl
sahf
inc
loop
leave
dec
mov
dec
push
xorb
cmp
cmc
sbb
mov
cs
adc
fsubrs
xor
negb
bound
lcall
fiadds
sbb
loope
les
mov
mov
fs
mov
mov
lods
xchg
cmc
stc
xchg
adc
scas
test
push
shlb
add
mov
loop
xlat
mov
sahf
mov
mov
aaa
jbe
test
push
and
cmpsl
xlat
mov
sbb
mov
xchg
in
repz
push
mov
je
dec
pop
mov
out
push
push
mov
jb
mov
mov
push
jbe
jp
jmp
in
leave
imul
mov
inc
test
int3
ret
dec
mov
push
into
sbb
shl
cmpsb
in
shlb
push
loop
mov
inc
cmc
nop
call
cmpb
ret
add
roll
popf
add
mov
push
test
es
mov
mov
and
pop
outsb
sbb
and
ss
test
mov
ds
push
xchg
dec
push
mov
les
xorl
lock
aas
loopne
sbb
out
pop
stos
xchg
fdivs
mov
repz
lret
dec
mov
dec
jge
js
add
push
mov
push
aam
and
mov
mov
dec
les
add
enter
int3
insb
push
pusha
mov
ljmp
pop
leave
xlat
mov
out
mov
push
ret
push
iret
push
mov
out
cmp
mov
mov
aam
fwait
in
shrl
xor
hlt
out
mov
fildll
test
aas
xor
hlt
push
outsb
mov
pop
hlt
mov
add
sahf
mov
xchg
cmp
mov
or
mov
mov
xchg
mov
sbb
sti
popa
bound
rclb
pusha
mov
cmp
jmp
xchg
cmp
aas
sbb
mov
in
bound
stos
out
jno
out
jno
lret
leave
mov
mov
test
push
loopne
pop
fdivl
insb
inc
pushf
and
sub
mov
stos
mov
xrelease
mov
sub
aad
call
shlb
aam
cmp
out
in
dec
pushf
push
push
jbe
test
out
out
cmp
test
lret
mov
mov
push
lcall
push
shlb
enter
data16
dec
mov
sub
hlt
xchg
ss
lret
adc
mov
mov
sbb
test
cmp
stos
push
dec
lds
mov
add
je
mov
ljmp
mov
jle
cmp
fcoml
loope
push
test
xchg
insl
mov
push
data16
mov
xchg
xor
outsl
cmp
pop
lahf
vucomiss
js
lea
mov
xchg
fstpt
cmp
or
mov
xor
test
xchg
int
ja
in
xchg
mov
xchg
pushf
je
fwait
pop
repz
and
popa
fisubs
rclb
dec
mov
ja
xor
mov
ret
hlt
dec
sub
leave
push
mov
jns
add
pop
out
and
pop
sub
shll
add
out
mov
movsl
and
rcll
outsl
jns
shll
mov
and
push
sbb
mov
cmpsb
popf
mov
daa
pop
mov
fcoms
cmc
inc
xchg
out
xor
dec
stc
ss
mov
fldt
push
mov
shll
mov
jns
pop
mov
ret
test
and
mov
inc
dec
sbb
push
sub
or
mov
xchg
jbe
push
mov
push
pop
movzbl
pop
pushf
push
mov
pushl
ret
test
test
or
pushf
lea
jne
cmp
sub
movzbw
bsr
mov
pushf
stc
bt
pusha
or
call
cmpsb
cmpsl
mov
push
movsb
dec
mov
inc
out
cld
mov
xor
cmp
lds
sarl
repz
sbbb
and
cmpsb
into
jg
shl
sub
mov
add
lret
inc
xchg
or
into
dec
mov
das
out
mov
sbb
lahf
mov
pop
in
lock
sub
testb
mov
daa
push
inc
sub
bswap
shld
test
sub
add
add
mov
and
movsbw
mov
test
rcl
ror
mov
bt
repnz
pusha
movw
call
adc
in
or
push
decl
movsl
push
and
jne
xor
jp
cmpsb
xor
lock
daa
mov
out
jge
roll
add
in
pop
push
jle
dec
cmp
dec
cld
in
add
pop
xchg
sbb
jecxz
cltd
xor
push
lret
sbb
pop
xchg
into
inc
push
arpl
or
push
clc
clc
and
xchg
dec
sbb
xchg
in
mov
outsl
pop
xchg
outsl
outsb
cvtpi2ps
mov
fdivrl
pop
mov
sarb
out
ret
pop
jno
adc
and
jecxz
push
mov
js
negb
popf
imul
cmp
jle
aam
fwait
push
daa
add
ds
insl
fistps
sub
mov
daa
jl
pop
mov
sbb
mov
lea
rorb
je
sbbl
dec
adc
stos
pop
sti
mov
rcll
adc
les
ss
jb
jl
cmp
ss
mov
in
outsl
out
push
sti
jecxz
or
and
sar
icebp
out
repz
fisubrl
cld
push
and
int
enter
jmp
pop
sbb
dec
imull
cmp
xchg
lds
frstor
sbb
test
xchg
mov
sbb
mov
sti
out
fdivr
push
js
out
xor
jo
cmp
mov
shl
push
scas
push
call
jb
outsb
jb
inc
imul
frstor
mov
fiaddl
popa
cli
mov
inc
jecxz
add
sbb
pusha
dec
stc
ror
call
cmpsl
and
pushf
inc
jb
and
mov
cmp
dec
je
les
fs
std
and
ljmp
mov
add
js
jg
dec
and
lods
xor
pcmpeqd
adc
jl
mov
or
ret
negb
cmp
jb
mov
pop
movsl
adc
mov
fldcw
test
or
jmp
cmp
pop
das
adc
movl
jge
adc
mov
pushl
out
pop
shrd
or
bsr
xor
movzbw
seta
jmp
imul
imul
outsl
movsl
or
and
sti
out
jg
push
outsb
ds
pop
rcrb
mov
pop
xchg
mov
in
cmp
lahf
out
int3
imul
mov
mov
loop
add
mov
ja
sahf
pop
hlt
pushf
movsl
mov
dec
in
xor
push
dec
add
lds
out
xchg
aad
jmp
movb
movzbw
pusha
mov
bswap
lea
call
cmpsl
cli
std
iret
and
push
cwtl
sub
mov
or
dec
push
xlat
out
sbb
jo
xlat
cmp
sbb
loop
fisubrl
cmp
mov
test
dec
ds
mov
xor
aaa
adc
lret
inc
ds
ja
in
adc
std
jecxz
inc
es
and
out
mov
test
int
sahf
inc
mov
mov
and
jl
cs
pop
int3
in
xorb
out
mov
idiv
add
ret
push
mov
into
and
mov
lcall
jge
jmp
jbe
movsb
sbb
clc
jb
mov
dec
jecxz
mov
pop
pop
fisttpl
inc
mov
cmpsb
hlt
in
or
sub
imul
popa
pop
stos
movsb
sub
orl
fcoms
lcall
cmp
mov
push
rorl
cmp
or
sbb
bound
dec
insl
repnz
decl
nop
ljmp
push
and
cmpsb
imul
lods
lock
stos
int
scas
clc
sbb
clc
mov
or
ljmp
daa
rolb
es
cmp
scas
stos
into
and
or
cmp
js
hlt
mov
ficoms
sbb
leave
loopne
lock
or
cmovge
ljmp
addr16
ret
gs
mov
dec
jno
cmp
mov
mov
pop
jmp
aaa
sub
insl
inc
add
and
xor
out
jo
outsl
xor
and
dec
sbb
dec
je
in
cmc
test
lods
sti
push
loopne
int3
cs
inc
mov
mov
lds
push
mov
pop
jb
out
ficomps
sbb
jbe
push
cmpsb
xor
add
mov
jmp
sub
xchg
int
add
shll
icebp
sbb
pop
jp
aaa
inc
push
lock
push
jl,pn
push
push
dec
cmp
in
negb
lret
insb
dec
push
jbe
dec
xchg
jmp
add
lret
fisubrs
sbb
mov
sbb
add
pop
cmc
pop
add
xorb
scas
inc
outsb
inc
pusha
lret
jns
and
cmp
clc
lcall
in
jecxz
lea
call
jmp
pushf
lea
je
mov
mov
lea
lea
pushf
pusha
push
movzwl
call
mov
lea
ja
pusha
push
call
pushf
push
movl
movl
push
pushf
pushf
lea
jmp
lea
call
call
call
out
adc
and
icebp
mov
test
push
and
fstpl
int
push
mov
addl
clc
pop
fs
imul
es
int
xor
das
mov
sbb
dec
repz
push
hlt
popa
inc
pusha
roll
outsb
imul
int3
xlat
push
xchg
stc
pop
shll
int3
fs
subl
fcoml
pop
mov
mov
pop
cs
push
adc
dec
in
gs
stc
loope
outsb
push
ljmp
lret
and
push
push
mov
xchg
ja
jb
mov
inc
add
cli
dec
dec
in
cwtl
lods
cmp
mov
jle
fistpll
sbb
in
xchg
add
inc
xor
cmp
add
aad
sub
xchg
jp
or
mov
leave
mov
cld
mov
and
call
jbe
xchg
xchg
fdivr
sub
in
cmp
loopne
or
xchg
or
push
sbb
inc
and
and
mov
mov
mov
imull
jle
lret
and
cmp
and
cmp
scas
pop
icebp
div
add
ja
mov
sub
mov
cmc
mov
mov
pop
and
loope
push
adc
das
idiv
iret
jmp
push
mov
inc
sub
xor
or
xor
dec
push
push
sub
sub
loopne
fildl
loop
inc
xchg
loope
or
inc
sbb
cmpsb
shrl
cmp
dec
xchg
mov
add
stc
iret
mov
mov
pop
mov
sahf
adc
cmpsb
rcll
mov
push
adc
movsb
xor
jb
incl
adc
and
dec
or
lock
imul
sub
out
xchg
aam
or
pop
pop
divb
stos
mov
jmp
mov
push
or
add
ja
or
add
pop
pop
or
or
sbb
mov
push
cmpsb
test
dec
andl
dec
gs
cmp
xchg
scas
aaa
xor
dec
push
jmp
or
ds
cli
or
pop
std
adc
int3
sub
scas
mov
clc
jns
test
loopne
jp
push
ja
lahf
adc
jmp
testl
inc
insb
outsl
jae
dec
gs
clc
pushf
call
imul
gs
xor
cs
insb
add
add
lea
jae
pusha
not
mov
bt
and
mov
bt
rol
mov
cmc
jmp
mov
cmpb
jmp
popf
rdtsc
nop
pushf
call
lea
jmp
jmp
add
lret
out
loopne
clc
sahf
outsb
mov
pop
add
cmp
stos
mov
cmp
sbb
cmp
mov
jmp
mov
mov
es
sub
stos
cmpsb
decb
sub
xorb
jp
lock
nop
lods
mov
ret
lds
bound
cltd
pusha
adc
dec
loop
outsl
adc
jnp
daa
sub
mov
and
aad
mov
lea
ja
call
cmp
dec
inc
ja
mov
and
scas
add
rcl
pop
add
jno
sbb
push
mov
mov
mov
lret
and
pop
cmpl
mov
loopne
xchg
mov
add
cld
bound
inc
cmp
or
xchg
jle
lret
mov
jno
bound
aas
and
dec
sub
in
pop
cmpsl
test
popf
cmp
dec
xor
adc
mov
or
adc
inc
mov
cs
jmp
gs
and
mov
lds
stc
sbb
lock
lret
cmp
pop
test
mov
mov
icebp
jo
fistps
mov
mov
shlb
ds
push
gs
outsl
xchg
pop
or
mov
cmp
cltd
lahf
cmp
adc
xor
data16
cmpb
imul
test
dec
dec
and
ja
xor
push
sti
xor
test
int
jmp
out
adc
and
bt
stc
stc
add
clc
jmp
xor
movzbw
rcl
jmp
test
jne
and
push
add
aam
push
out
out
mov
add
pop
mov
cltd
fimuls
sbb
inc
add
stc
and
loop
push
shrl
loop
pop
lock
jnp
ret
adc
cltd
cmpsb
push
fstpt
dec
push
ss
arpl
jns
mov
lods
mov
test
jmp
repnz
daa
out
mov
fists
inc
cmp
sbb
ret
ja
movsl
aas
jge
mov
outsb
add
out
pusha
negb
test
xchg
cmpsl
aam
mov
xchg
jbe
mov
sub
cli
jle
and
add
jno
push
and
pop
push
std
sbb
jg
mov
inc
add
int3
int3
stc
mov
fdivrl
inc
mov
mov
dec
idiv
das
jmp
xor
inc
jns
enter
les
ffreep
in
fistpl
mov
lods
push
jb
push
mov
cli
jb
mov
divb
push
mov
lods
ds
cmp
ss
push
sub
test
aad
push
std
xor
fists
ja
push
movsl
add
jo
fwait
dec
out
dec
insb
lret
jmp
sub
sub
xor
leave
ja
loope
jae
and
leave
xchg
adc
pop
arpl
imul
add
test
clc
dec
dec
aad
jge
mov
cld
ds
call
clc
cmpsb
xchg
and
pop
fcoms
adc
mov
xchg
fs
jno
ss
pop
jecxz
movsl
stos
xor
orl
out
rol
addb
decb
das
sub
adc
lds
mov
jp
pushf
int3
sbb
arpl
test
jle
popa
jae
icebp
dec
dec
in
int3
cmp
mov
inc
out
jnp
and
push
jns
mov
les
rcl
adc
mov
scas
sub
mov
jno
sbb
pop
inc
fstpt
int
sub
jl
scas
jns
popf
and
in
outsb
xchg
stc
cld
xchg
sbb
pop
sbbb
xchg
add
adc
out
rcl
addl
mov
and
mov
ja
inc
lea
push
pop
lret
stc
rol
mov
push
movl
call
lea
jae
shld
mov
not
movsbw
mov
sub
neg
mov
pushf
test
call
movzwl
and
shrd
mov
pushl
cmp
push
cmc
add
push
mov
pusha
pushf
push
lea
jmp
fsts
les
fucomi
lahf
in
jae
mov
or
addr16
ljmp
movsb
mov
xchg
xlat
addr16
jge
enter
xor
jmp
stos
mov
dec
jge
fidivrs
push
in
sbb
sub
sub
pop
fsubl
xor
inc
jae
inc
ljmp
inc
xlat
lock
mov
popf
aaa
mov
inc
fstps
shl
fs
pop
push
aas
adc
xchg
test
jb
and
out
and
les
lds
test
in
jle
movsl
pop
aaa
pop
dec
mov
xor
push
ds
mov
cmpsb
xor
arpl
shlb
ret
decl
pop
jecxz
out
movsl
add
cmp
in
push
sub
mov
dec
xlat
out
ljmp
bndstx
dec
sub
in
aas
mov
pop
ljmp
mov
sbb
pop
imul
loope
enter
jb
xchg
bt
add
cmp
jmp
dec
lea
ret
and
xchg
xchg
jge
loopne
jle
mov
jo
dec
mov
js
cmc
push
jns
es
ficomps
sbb
dec
lret
jne
or
cmpsb
repz
int
cmp
pop
and
out
mov
xchg
inc
bound
sub
fildl
push
cwtd
jl
out
gs
nop
daa
sahf
cmp
les
and
mov
icebp
pop
xchg
cmp
jle
mov
hlt
loopne
and
popf
mov
xor
sbb
cltd
sub
push
inc
lret
hlt
pop
lret
aaa
fidivs
insl
ret
aaa
and
adc
repnz
test
sub
ljmp
jo
or
mov
jge
cltd
xchg
sbb
faddp
std
mov
jb
pop
ret
mov
lcall
push
lods
dec
int
scas
and
dec
push
push
or
das
jge
adc
and
dec
xor
mov
or
lret
cmp
fidivrs
scas
jo
lcall
adc
cmpl
stos
pop
or
ja
jno
inc
movsl
and
mov
inc
and
cs
addl
push
and
jmp
adc
andb
sbb
ret
pop
push
fnstenv
cmc
inc
shl
mov
dec
cmp
inc
adc
in
cwtl
ds
shrl
xchg
mov
add
jne
inc
je
mov
xor
clc
lret
xlat
xor
subb
cmpsl
rolb
sub
xlat
negl
dec
call
add
icebp
ss
cmp
mov
repz
stos
lds
xor
leave
stos
inc
or
imul
incb
adc
xchg
shll
iret
and
pop
cs
dec
dec
pop
pusha
jp
in
cmp
jmp
pushf
jns
outsl
adc
mov
xlat
push
insb
mov
add
mov
or
arpl
adc
ja
add
in
xor
mov
je
push
punpckldq
dec
imul
dec
push
xor
pushf
lea
jne
setne
movb
call
ds
shlb
leave
mov
xchg
and
subl
or
out
cmp
ds
add
daa
imul
cltd
cs
xor
dec
sub
cmp
decl
and
repnz
and
mov
imul
xor
xor
mov
insl
or
sub
int3
push
mov
mov
mov
loopne
cmp
adc
sbb
inc
adc
shlb
jg
sub
repz
mov
or
aad
push
rorl
outsl
push
mov
mov
jbe
outsb
push
in
fisttpl
sub
push
adc
cltd
sti
js
adc
adc
ja
mov
and
fistpll
pop
cmp
stc
out
out
loop
dec
mov
ret
mov
repnz
lret
insb
fidivs
ror
pushl
dec
cmc
cmc
ror
cmc
stc
movb
sub
cmc
clc
bt
clc
rol
stc
cmc
cmp
neg
bt
stc
bt
stc
cmp
not
mov
lea
cwtl
bswap
lea
mov
call
addl
mov
pop
mov
sub
shlb
xchg
mov
or
xor
repz
mov
test
jmp
mov
sbb
cltd
dec
stos
lahf
push
sbb
push
jbe
int3
dec
mov
ret
cmp
xchg
into
ljmp
or
pop
mov
jecxz
adc
push
jecxz
insl
dec
test
loopne
mov
sbb
mov
and
push
mov
imul
jo
popa
push
repnz
data16
pop
lock
sbb
or
dec
sbb
mov
subl
movsb
mov
mov
and
mov
mov
mov
xor
loop
stos
out
das
aad
xor
jmp
xchg
lods
cli
cmpsb
mov
pop
sub
jno
mov
jle
sbb
dec
mov
loop
pusha
push
or
or
andl
add
fldcw
push
outsb
stc
jnp
sub
xor
xchg
adcb
loop
or
and
sub
adc
cmp
or
mov
mov
addr16
fimuls
jbe
mov
dec
sbb
mov
pop
clc
lock
pop
jle
or
inc
fs
sub
mov
mov
or
xor
jnp
js
aaa
bound
cmp
pushf
mov
pushf
lea
jb
stc
bt
call
lret
adc
push
mov
stc
add
mov
mov
out
sub
xor
adc
clc
xchg
in
mov
shll
pop
enter
cmpsb
sbbl
shlb
into
testl
inc
pop
and
clc
sbb
add
mov
lods
adc
mov
mov
sti
andl
xor
jl
mov
jnp
dec
enter
rcrl
jmp
dec
sbb
fs
ja
push
pushf
lea
jb
pushf
cmpb
pusha
jmp
pusha
push
lea
je
bswap
bswap
mov
mov
movzbl
lea
push
movzbw
mov
setbe
movsbw
lea
jmp
xor
mov
jecxz
jno
stos
dec
mov
sub
mov
popf
shrb
iret
pop
dec
popl
xchg
jmp
mov
dec
sahf
jecxz
in
setne
jbe
pop
jp
ret
bswap
data16
scas
ret
pop
lcall
mov
lea
in
jnp
fsubl
sahf
popf
add
xor
stos
push
or
outsl
jns
subb
mov
xchg
mov
jp
pop
cld
inc
inc
cmpsl
call
jecxz
ret
mov
outsl
sbb
sbb
mov
pop
in
fisttpll
add
mov
jo
sub
dec
fstpl
lods
dec
mov
or
pop
jle
scas
cmc
les
mov
shl
sarb
sbb
add
push
ret
xchg
mov
inc
dec
mov
pop
and
fnstcw
shll
fildll
cs
inc
ret
sub
jnp
in
insb
cmp
ljmp
movsl
ret
sub
cmp
mov
inc
xchg
dec
xor
add
dec
mov
call
xor
sub
mov
shrl
mov
push
loopne
cmpsb
and
mov
hlt
je
sbb
insl
enter
in
push
pop
dec
insb
sbb
push
shlb
loop
xchg
inc
insl
adc
jns
data16
dec
scas
lea
insl
lcall
pop
or
repz
cmp
mov
xor
inc
movsl
std
stos
add
pusha
mov
jae
cmp
lcall
sub
mov
fs
sbb
pop
subl
out
sbb
cltd
mov
jp
sub
and
xchg
shrb
fs
push
mov
mov
push
andb
adc
jbe
mov
mov
into
push
sahf
je
push
push
loopne
sbb
test
pop
sbb
adc
test
movsb
imul
fnstsw
arpl
inc
enter
iret
sub
clc
and
xchg
mov
adcl
outsl
or
clc
jns
lods
pop
out
test
aaa
dec
sbb
pop
testb
mov
xchg
frstor
mov
jbe
jecxz
adc
mov
cmp
dec
or
xchg
xchg
cmpsl
sbb
cwtl
cmp
jnp
test
test
pop
jecxz
or
imul
or
push
pmulhw
daa
or
je
cmp
xchg
in
leave
in
and
fnstsw
mov
loopne
popa
enter
or
pop
jno
cli
mov
test
mull
xor
pop
xchg
mov
test
sbb
test
ficoml
sbb
lock
push
enter
and
jne
add
jmp
shl
jmp
inc
enter
add
xor
stc
fidivs
dec
aaa
test
sub
les
and
jmp
sar
cmpsb
xor
inc
mov
pop
ftst
xor
and
loop
and
jae
dec
dec
jns
cltd
sbb
fistl
jbe
movsb
or
test
sbb
xchg
je
jp
sub
mov
jl
xchg
test
pop
lahf
js
subl
in
push
lods
cmpb
mov
cld
xchg
repz
and
cltd
push
adcl
and
lcall
add
lds
shll
jae
or
mov
sti
loopne
inc
fists
add
in
insb
xchg
mov
les
out
pusha
rcl
push
inc
or
cli
sarb
leave
xchg
add
fst
popa
xchg
out
xchg
mov
fucomi
and
inc
negb
add
adc
outsb
jecxz
dec
xchg
sub
cmp
push
push
jb
repz
xchg
lods
loopne
jl
int
cmp
adc
push
ljmp
inc
or
jno
xchg
call
pushf
stos
movw
lea
jmp
pop
mov
jns
out
mov
leave
fs
mov
ds
mov
jno
pop
stc
clc
mov
jmp
push
out
addr16
mov
mov
xchg
mov
add
sbb
cmp
jp
push
sbb
mov
mov
es
sub
and
xor
mov
shl
inc
test
sbb
inc
je
mov
movl
mov
das
sub
jmp
dec
xchg
xchg
popa
repz
test
popf
xor
pop
pop
arpl
daa
and
scas
pushf
outsb
dec
loop
jg
and
icebp
iret
xor
aam
jo
into
insb
test
mov
pop
dec
call
loop
andl
inc
mov
adc
xor
fists
push
jbe
aam
faddl
add
xor
stos
jae
into
pop
pop
add
sbb
loop
lcall
test
push
aam
xor
addr16
loope
add
xchg
mov
adc
stos
seta
mov
pusha
mov
call
or
mov
add
or
lcall
push
and
dec
add
push
shrb
mov
fdivr
xchg
jo
fwait
loope
cs
int3
adc
in
into
pop
adc
jmp
inc
mov
mov
push
sbb
dec
insb
and
mov
fcoml
xor
push
sahf
lods
daa
pop
push
jnp
enter
mov
mov
add
insb
add
xor
bound
mov
push
sub
subb
dec
add
cwtl
fs
cmp
dec
insl
call
lds
jbe
sub
fstps
mov
js
cwtl
push
cli
movsb
lahf
push
push
icebp
in
sbb
push
xor
mov
mov
mov
clc
lcall
ret
stc
iret
or
insb
leave
and
xor
jg
movsl
or
es
ja
cmp
push
aad
push
push
xchg
push
and
aaa
jmp
and
inc
and
jg
xchg
ljmp
pop
negl
ficompl
fadds
and
xor
pusha
sub
add
add
rol
and
push
xchg
lcall
ds
pushf
lea
jmp
loope
cmp
inc
xor
xor
mov
pop
jl
mov
pop
mov
lods
pop
add
push
data16
scas
inc
and
xchg
push
dec
and
lock
mov
sti
into
adc
movsl
xor
jae
ret
fwait
adc
cmp
loopne
lods
adc
test
hlt
lods
fdivrl
sub
popf
std
fistl
lods
stos
inc
dec
inc
dec
jo
push
aam
ret
mov
mov
add
lods
add
or
ljmp
aad
dec
out
push
pop
scas
sub
int3
cmp
popf
xor
test
and
push
add
outsl
xor
fimull
loope
push
sbb
xchg
adc
mov
psubw
jne
jg
std
movsl
lcall
inc
scas
dec
lcall
and
ret
rorl
xor
and
xchg
int
fidivrl
mov
lahf
lods
inc
cld
mov
cmp
cmp
dec
cmp
mov
mov
jo
mov
mov
xlat
pop
inc
mov
lahf
shll
pop
mov
adc
dec
jbe
nop
cmp
sti
add
imul
xchg
sahf
movsb
mov
add
push
cmc
cwtl
mov
gs
push
push
xchg
dec
ds
sbb
mov
xor
inc
and
cmp
inc
xchg
mov
pusha
lea
jmp
jno
cmpsb
mov
add
repnz
subl
sbb
leave
bound
pusha
ret
mov
outsb
sbb
not
jo
aad
jno
adc
or
push
shrb
test
cwtl
or
test
adc
fwait
shlb
test
movsb
dec
xchg
xchg
repz
fwait
xchg
add
xchg
call
jg
ds
add
fildll
movsl
cwtl
or
xchg
sbb
lea
sbb
push
xor
sbb
push
xor
test
call
sbb
aam
js
push
rclb
and
fdivr
pop
cmp
fstps
sbb
mov
js
into
push
insb
addb
sub
test
adc
mov
aas
addr16
imul
jle
sub
and
push
decl
gs
lods
sbb
and
xlat
iret
sub
mov
in
test
les
iret
pop
popa
frstor
mov
add
out
fistpl
mov
xchg
mov
addr16
jp
pop
aaa
xchg
fsubl
outsl
cmp
mov
sbb
in
xchg
aaa
lods
js
mov
pop
jle
mov
lock
in
es
cwtl
mov
mov
in
cmp
cltd
inc
inc
cmpsb
dec
xlat
je
jl
and
sbb
dec
or
or
jp
mov
mov
popf
js
ljmp
inc
jecxz
pusha
adc
adc
in
mov
add
mov
pop
xor
cmp
sub
out
jns
fnstenv
jle
pop
iret
test
xchg
mov
mov
cmp
inc
aam
int3
push
inc
adc
jbe
scas
stos
mov
add
cmc
add
or
mov
nop
cmpsl
push
hlt
fisttps
xor
adc
dec
test
pop
popa
mov
shlb
and
adc
cwtl
jo
jmp
mov
cmpsb
fstpt
test
pop
loope
bound
negb
or
rcr
mov
xorl
pop
andl
mov
push
cmc
sbb
push
sub
sbb
push
mov
xchg
test
mov
sub
je
mov
popf
pop
push
xor
jecxz
mov
inc
or
jnp
inc
loop
jno
and
lcall
cld
jle
andb
test
mov
push
not
push
mov
pop
lea
call
adc
add
lds
lods
mov
inc
jae
icebp
push
push
push
adcb
bnd
push
test
jmp
cltd
adc
jbe
add
xchg
sti
int3
popf
cmp
lods
stc
subl
outsb
mov
testb
in
dec
movsb
pop
add
fldcw
call
mov
add
fmulp
fiaddl
movsw
sahf
inc
dec
shll
iret
and
push
shlb
arpl
loope
mov
dec
sub
mov
add
aam
jg
pop
call
call
pushl
stc
jmp
mov
cmpb
pusha
lea
jne
rol
ror
shld
adc
mov
jmp
insb
div
mov
add
insb
arpl
lret
inc
and
mov
push
cltd
fwait
cmpl
mov
and
pop
into
repz
loope
ret
dec
bound
xchg
ss
mov
sahf
sub
incw
pop
jmp
mov
xchg
pop
adc
adc
mov
mov
or
adc
mov
xchg
inc
adc
and
shll
add
adc
xor
pop
push
cmp
jae
in
push
mov
lds
daa
mov
pop
xor
fcmovne
mov
cs
ds
adc
movsl
jne
sbb
adc
push
outsl
mov
dec
mov
outsb
and
ss
into
xchg
pushf
cmp
mov
insl
in
pop
jge
xorb
incl
xor
outsb
sti
test
ljmp
xor
pushf
mov
cmpsl
js
repnz
mov
sub
push
pop
loopne
mov
jnp
int3
dec
push
mov
scas
scas
sbb
fs
ljmp
add
call
mov
cmp
push
sub
mov
or
cwtl
cmp
xchg
and
xor
xlat
jl
sbb
insb
mov
mov
add
outsl
adc
cmp
mov
push
rolb
addr16
pop
pop
lock
js
shlb
sbb
push
mov
xchg
std
push
add
mov
mov
lcall
and
inc
shl
xorl
movsl
inc
ja
cmpsb
pop
outsb
lahf
mov
pusha
mov
pop
negb
scas
jl
pop
sti
addr16
incb
dec
jge
shrb
fimull
jae
push
push
sbb
jge
jl
dec
push
jmp
and
pop
push
lock
cmp
sbb
jle
in
repz
xor
push
xor
cmp
dec
in
pop
call
jo
lcall
roll
adc
lock
cmp
subb
fildl
iret
popw
repnz
or
shrb
insb
lods
jns
jle
jmp
jae
mov
xlat
divps
jns
insl
mov
jmp
imul
test
lret
sub
fisttpll
stos
lea
mov
pop
jmp
sahf
pop
iret
push
daa
mov
and
mov
pushl
mov
call
dec
inc
mov
clc
bt
cmp
push
add
jmp
pushf
pushf
popl
mov
pushl
popl
movb
lea
jmp
push
mov
pushf
jmp
pushf
mov
call
setnp
cmc
btc
sbb
mov
bts
xor
btc
sbb
xor
and
setle
not
add
bt
rol
btc
xor
ror
neg
btr
bswap
lea
bsr
mov
call
repz
popl
push
call
bswap
seta
pusha
movzbw
inc
bswap
not
btr
call
pushf
pushf
lea
jne
mov
xorb
call
push
mov
push
pushf
popl
pushf
call
push
pusha
add
jmp
xchg
pushl
push
bswap
xchg
not
movsbw
mov
push
mov
call
and
sub
clc
mov
push
sub
pusha
lea
jmp
pushl
popf
mov
mov
movb
lea
jmp
jmp
test
add
pushl
pushf
jmp
adc
aad
mov
mov
push
pusha
clc
test
add
pushf
mov
pushf
jmp
btr
mov
clc
add
ror
movsbw
lea
bswap
xor
bts
mov
stc
cmc
shl
pushf
shr
bt
or
cmp
pushf
jmp
xchg
not
call
mov
pushf
pushf
lea
jne
and
btc
jmp
mov
call
call
mov
mov
mov
pusha
call
lea
jno
popl
pusha
mov
lea
jmp
jmp
push
pusha
mov
push
push
mov
lea
jmp
mov
call
and
rdtsc
bt
call
movw
mov
mov
movw
mov
movb
mov
lea
jmp
pushf
call
mov
pusha
pushf
push
lea
jmp
stc
cmp
pushl
pushf
clc
mov
add
call
call
lea
je
test
test
sub
push
xchg
cmp
pusha
cmp
bt
mov
clc
sub
push
lea
jne
call
mov
pushf
call
shl
push
movl
mov
jmp
repz
popl
jmp
pusha
push
call
mov
jmp
cmp
jmp
pushl
popl
pushf
push
movl
pushf
lea
jmp
call
mov
pushf
pushf
mov
mov
repz
popl
pushl
mov
call
mov
dec
lea
neg
pushf
pop
inc
movsbl
dec
cmp
lea
cmp
sub
pushf
push
push
lea
jmp
call
push
lea
bt
bt
push
sub
pusha
pushl
lea
jmp
pushf
pushf
mov
pusha
call
movb
inc
push
stc
add
pushf
call
or
bsf
mov
cmp
test
add
pusha
mov
pusha
pushl
lea
jmp
mov
mov
pushf
call
lea
xchg
pop
mov
movzbw
bswap
not
movsbw
dec
neg
jmp
movl
mov
mov
pusha
jmp
push
pushf
jmp
mov
pop
pushl
popl
dec
movzbw
bswap
movl
not
xchg
movzbw
mov
dec
movzbl
inc
dec
sub
xor
jmp
repz
popl
pushf
call
push
mov
pushf
mov
jmp
setl
mov
sbb
push
lea
rol
mov
dec
mov
lea
jnp
pushf
add
jmp
das
adc
bsf
test
mov
ror
shrd
mov
cmp
add
push
call
call
pusha
push
push
mov
pushf
call
push
pushf
mov
movw
lea
jmp
movsbw
dec
cmc
neg
pop
dec
mov
dec
clc
lea
cmc
push
sub
pusha
movb
lea
jmp
mov
jmp
movw
mov
movl
pushf
lea
jmp
xchg
pusha
bswap
movsbl
xchg
pop
not
dec
bswap
mov
inc
pushl
pushl
popl
lea
jmp
lea
movl
pushf
bt
cmp
mov
pushl
sub
call
test
bt
sub
jmp
stc
cmp
pusha
pusha
push
lea
jne
setne
push
xorb
jmp
mov
push
movb
movb
mov
lea
jmp
pushf
jmp
pusha
mov
push
mov
lea
jae
push
call
movsbl
btc
ror
bsr
and
ror
cmc
inc
mov
jmp
pushf
mov
pushf
push
jmp
dec
shld
rcl
shld
lea
pushf
clc
jmp
sub
push
pusha
pushf
lea
jmp
rcr
lea
cmc
bt
cmp
clc
sub
pusha
lea
jmp
push
lea
push
pushf
jmp
pushl
popl
movw
pushf
lea
jmp
push
mov
call
pusha
pusha
mov
movb
mov
jmp
bswap
sbb
sub
mov
or
stc
mov
test
jmp
lahf
pusha
movsbw
pushf
mov
lea
pushf
jmp
lea
pusha
xchg
pop
mov
call
pushf
mov
push
pushf
jmp
bt
ror
test
jmp
clc
sub
jp
pushf
shrd
call
inc
neg
neg
call
bt
mov
jmp
pushf
movw
pushl
popl
pushl
lea
jmp
movl
mov
lea
mov
dec
bswap
mov
push
dec
rcl
neg
movsbw
dec
jmp
xchg
movl
jmp
and
test
inc
clc
movzbl
cmc
pushf
pushf
mov
add
cmc
push
cmp
pusha
sub
clc
bt
stc
call
cmp
call
movzbw
movsbw
mov
push
pushf
pushl
pusha
mov
pushf
movl
jmp
shld
adc
mov
xor
mov
call
stc
pusha
and
call
mov
mov
mov
movl
mov
movb
call
pusha
mov
shl
movzbl
stc
pushf
btr
add
ror
sub
rcl
ror
jmp
jmp
jmp
aam
cmc
movzww
test
cmp
call
movsbw
lea
mov
push
lea
movzbw
movzbw
call
push
pushf
popl
movw
pushf
jmp
pushl
pushf
popl
push
pusha
movw
pushl
popl
mov
lea
jmp
dec
push
bsr
lea
test
sub
pusha
pusha
mov
push
lea
jmp
movb
pusha
mov
call
rol
pushf
push
cmc
mov
setns
cmc
mov
bt
cmc
bt
sub
test
test
pushf
test
shr
mov
call
bt
add
pushf
mov
push
mov
pushf
mov
movw
push
lea
jmp
pushl
popl
lea
lea
call
pushl
popl
movb
pushf
push
movw
lea
jmp
dec
jmp
xor
call
pushf
jmp
push
push
mov
repz
popl
pushf
call
mov
pushl
mov
call
mov
pushf
pusha
mov
pusha
movw
pushl
movw
mov
pushf
push
lea
jmp
not
dec
add
lea
clc
sub
pusha
pushl
pushf
lea
jmp
pushf
add
lea
jno
pusha
rol
pushl
pusha
jmp
jmp
mov
push
jmp
pusha
jmp
cwtl
pushl
stc
call
push
xchg
not
lea
mov
mov
dec
bswap
mov
xchg
pushl
popl
jmp
add
lea
jae
pusha
pushf
popl
pusha
lea
jo
pusha
push
pushl
popl
push
lea
jmp
setae
bswap
not
btr
cmc
btr
ror
seto
clc
ror
not
and
or
bswap
mov
clc
pusha
cmc
mov
sub
jmp
pushf
movl
mov
mov
pusha
pushl
ret
pusha
call
mov
pushl
popl
pushf
pusha
lea
jmp
sar
bt
mov
pushf
add
stc
rcr
mov
cmc
cmp
test
test
not
call
push
push
mov
mov
push
lea
jmp
call
pushf
call
jmp
shld
not
test
notl
rcl
das
or
mov
push
test
test
sub
test
mov
lea
jne
and
pusha
jmp
clc
sub
push
pusha
pushf
lea
jmp
and
pushf
pusha
pushf
jmp
rol
mov
call
pusha
xchg
movzbw
dec
jmp
not
movl
movzbw
pop
movzbw
inc
mov
call
mov
mov
lea
jmp
movl
xchg
xchg
pop
mov
inc
pop
inc
dec
bt
bsr
pushf
neg
pushf
jmp
pushf
mov
mov
mov
call
bt
call
pushl
mov
call
repz
popl
pushf
call
pusha
stc
rol
mov
inc
call
jmp
mov
pop
mov
jmp
inc
mov
call
mov
movw
push
movl
lea
jmp
lea
xchg
pushl
popl
push
lea
jo
push
xchg
mov
lea
bswap
dec
shl
neg
mov
movsbw
call
pushl
popl
mov
movb
lea
jmp
test
bt
neg
pusha
pusha
pushl
ror
stc
clc
sub
pushl
xor
cmp
bt
mov
cwtl
cmc
jmp
movb
jmp
stc
lea
clc
cmc
cmp
test
sub
jmp
setl
mov
lea
jne
pushf
lea
cpuid
jmp
pushl
not
dec
movl
call
movw
push
mov
call
clc
sub
jns
cmpl
pusha
pushf
pushf
mov
call
repz
popl
pushl
pushf
mov
mov
movw
jmp
add
add
xor
stc
bt
pushf
add
jnp
lea
stc
sub
call
pushf
call
pushl
popl
pushl
movl
push
movb
lea
jmp
pushl
popl
pushf
lea
jmp
pushf
mov
mov
jmp
pushf
clc
cmp
pushf
pushf
call
call
repz
popl
pushf
pushf
pushf
jmp
lea
jne
call
mov
inc
mov
xchg
xchg
mov
push
xchg
pop
pushl
popl
xchg
call
cmc
bt
add
movb
mov
mov
push
movl
lea
jmp
mov
push
pushf
repz
popl
pushf
mov
lea
mov
pushl
not
not
dec
mov
inc
inc
lea
pushl
popl
pop
movl
lea
mov
not
lea
mov
pushf
pushf
pop
pushf
dec
shr
neg
pop
jmp
xor
mov
pushf
pusha
sub
pushf
call
dec
sar
neg
not
pusha
dec
btr
shl
bt
xor
lea
cmc
sub
pushf
push
pushf
push
lea
jmp
mov
pushl
lea
jmp
xor
stc
stc
test
sub
cmc
bt
pushf
stc
cbtw
call
mov
mov
call
push
cmpl
jmp
pushf
popl
pusha
push
jmp
pusha
pusha
mov
jmp
xor
push
pusha
inc
pushf
jmp
mov
jmp
sub
pusha
stc
jmp
divl
pushl
jmp
inc
jmp
jmp
movl
pusha
inc
jmp
pushl
popl
movzbw
movl
movsbw
inc
pusha
inc
mov
lea
call
not
xchg
mov
rcl
bts
cmc
mov
pusha
test
call
push
pushf
mov
push
pushf
lea
jmp
pushf
push
movl
movw
mov
pusha
pushl
push
lea
jmp
pushl
mov
jmp
mov
pusha
pusha
repz
popl
pop
movb
dec
inc
mov
inc
xchg
pop
sete
xchg
dec
bswap
xchg
pushf
xchg
pushl
popl
xchg
movl
inc
lea
mov
xchg
dec
dec
ror
neg
movzbw
pop
pop
pushf
dec
rcl
lea
sar
btr
sar
sub
not
shrd
mov
dec
stc
add
mov
movzbl
or
shr
add
add
pusha
mov
btr
dec
or
xor
sete
bswap
not
movzbw
inc
rcl
ror
neg
sets
pusha
rol
not
movzbw
xor
not
movzbw
lea
inc
rcr
call
mov
movb
jmp
push
pusha
bswap
dec
pushl
rcl
movsbl
lea
bt
sub
pushf
pushf
movl
lea
jmp
pushf
cmp
push
movw
sub
push
pushl
pushf
lea
jmp
jmp
mov
mov
push
lea
jmp
pushf
movw
mov
pusha
lea
jae
pusha
mov
push
push
pushf
mov
pushf
mov
jmp
pushf
mov
jmp
push
pop
dec
mov
movzbw
call
jmp
push
mov
pushf
mov
movb
pushf
push
movb
mov
movb
repz
popl
movb
call
mov
push
repz
popl
jmp
pushf
push
mov
jmp
movzbw
push
pushf
pushl
popl
jmp
call
clc
pushl
popf
pusha
lea
jmp
lea
jne
bsr
mov
pushf
test
cmc
and
clc
cmp
movb
cmp
movb
movb
pushf
pushf
lea
jne
call
neg
pushf
pushf
dec
test
sar
movsbw
sub
lea
lea
jbe
stc
stc
cmp
sub
pusha
lea
jmp
call
pushf
mov
push
mov
jmp
movb
push
mov
mov
pushf
lea
jmp
mov
dec
pop
push
lea
mov
push
lea
inc
movzbw
mov
dec
pushl
popl
push
movzbw
xchg
movl
movw
pop
call
push
push
movb
mov
pushl
jmp
jmp
call
dec
shl
lea
bt
sub
pushf
pushf
lea
jmp
call
pushf
mov
push
jmp
pushf
bt
not
mov
cmc
cmc
pushf
sub
cmc
call
cmp
sub
call
call
jmp
pushf
popl
push
pusha
jmp
movl
pushl
dec
bswap
movsbl
mov
dec
pop
push
pop
dec
adc
neg
call
pushf
mov
clc
cmc
pusha
clc
xor
push
cmc
xor
jmp
pushl
popl
pushl
mov
lea
jmp
mov
shr
clc
mov
add
cmp
shl
xor
mov
pusha
pushf
movb
sub
pushf
push
pushf
shl
jmp
shr
add
cmc
mov
sub
mov
cmp
clc
push
test
add
pusha
pusha
jmp
movb
pushl
popl
mov
lea
jmp
pushl
pusha
pushf
popl
movw
pushl
popl
push
pushl
mov
lea
jmp
lea
jne
sbb
rol
sbb
xorb
bswap
pop
pushf
pushf
pushf
lea
jmp
bswap
mov
jmp
mov
movb
push
repz
popl
push
pushf
xchg
inc
pushf
xchg
dec
movsbw
bswap
pop
mov
inc
push
movw
pushf
pushl
popl
call
mov
push
pushl
push
lea
jmp
mov
jmp
bsf
mov
push
call
pushf
mov
call
xchg
bswap
movzbw
xchg
push
not
inc
mov
inc
not
pushl
popl
pop
movzbw
bswap
movl
xchg
not
inc
mov
mov
mov
dec
rcl
sbb
neg
push
dec
bsf
btc
lea
bt
cmc
stc
sub
pusha
lea
jmp
jmp
inc
movl
jmp
jmp
pushl
call
xchg
bswap
inc
xchg
jmp
mov
mov
call
jmp
call
pushl
popl
inc
movsbw
movsbl
call
jmp
mov
pushl
movw
push
lea
jmp
dec
dec
bt
neg
inc
movsbl
pop
dec
rcl
jmp
call
lea
dec
xor
neg
inc
call
pushf
mov
pushf
call
shld
mov
pusha
and
pusha
call
pushf
pusha
pusha
mov
movw
movb
pushf
movl
repz
popl
pushf
pushf
mov
xchg
mov
xchg
dec
mov
lea
push
mov
mov
pushl
popl
call
pushl
popl
movzbw
push
pushf
pop
movzbw
mov
push
bswap
dec
movzbw
neg
lea
pusha
call
call
pushl
popl
push
pushl
movl
lea
jmp
mov
pusha
pushl
mov
push
jmp
pushf
mov
mov
pushf
mov
movl
call
decl
jmp
lea
push
pushf
mov
lea
jmp
pushf
bswap
xchg
mov
bswap
not
call
bswap
ror
adc
xorb
mov
mov
push
pushf
movb
lea
jmp
mov
pushl
lea
jmp
call
pusha
mov
jmp
jmp
mov
call
aaa
push
movzww
bt
xor
jmp
pushf
pushf
popl
call
mov
movb
repz
popl
pushf
movb
call
mov
dec
push
clc
and
not
neg
pushl
movsbw
movsbw
dec
bt
lea
mov
sub
pushf
lea
jmp
pushf
popl
call
mov
pushf
mov
mov
call
shr
jmp
test
sub
pusha
lea
jmp
pusha
or
jmp
call
mov
movw
pushl
pushl
mov
call
movb
pushf
mov
pushf
lea
jmp
mov
jmp
and
mov
mov
mov
add
jb
add
sub
add
mov
add
add
mov
add
mov
add
add
add
mov
sbb
mov
xor
mov
aam
mov
js
mov
in
mov
add
add
mov
lock
add
jl
add
mov
and
mov
movsb
jo
add
mov
add
mov
in
mov
add
cwtl
mov
cmp
mov
push
jae
add
test
add
add
mov
add
jl
add
add
jb
add
or
add
mov
xor
mov
xchg
out
mov
rorb
mov
add
mov
add
divb
add
xor
add
shlb
add
sub
add
mov
add
mov
add
add
mov
mov
add
mov
add
jl
add
and
mov
add
shlb
add
mov
add
mov
mov
icebp
mov
and
mov
subb
add
mov
add
jb
add
jl
add
sub
mov
hlt
shlb
add
add
test
add
shlb
add
jl
add
and
add
jl
add
add
add
add
mov
add
mov
add
mov
add
outsb
mov
xor
mov
fs
mov
rolb
add
mov
add
test
add
jl
add
add
jl
add
mov
js
mov
rcrb
mov
mov
mov
add
mov
add
mov
xor
mov
call
add
add
and
add
cld
mov
sbb
mov
test
add
mov
add
outsb
mov
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
mov
mov
add
mov
shlb
mov
add
mov
call
mov
add
jl
add
mov
add
mov
rcrb
mov
and
mov
add
mov
inc
sub
add
mov
add
mov
xor
add
mov
xchg
mov
mov
add
mov
push
and
add
add
or
add
add
mov
add
add
add
add
mov
and
add
add
cwtl
mov
and
add
add
mov
and
add
add
add
add
and
mov
add
add
mov
add
shlb
and
push
movw
mov
mov
pushf
mov
pushf
pushf
popl
pushf
mov
call
call
sub
movb
mov
pushf
pushf
pushf
movb
lea
jmp
mov
call
pushl
movsbl
mov
lea
pushf
pusha
bswap
xchg
not
mov
not
movzbw
lea
pushl
mov
std
push
pusha
mov
call
pusha
jmp
pusha
movb
mov
mov
pushl
mov
movb
mov
lea
jmp
pusha
push
movw
mov
movb
jmp
bt
test
or
jmp
lea
jne
rol
xorb
lea
pop
pushf
movw
lea
jmp
mov
pusha
call
xchg
xchg
pushf
pusha
movl
bswap
mov
not
dec
pushl
not
dec
inc
btc
neg
inc
dec
shr
sub
shl
lea
bt
lea
js
sub
pusha
mov
movb
lea
jmp
mov
push
lea
jmp
rol
test
xor
jmp
mov
movw
pushf
movb
lea
jmp
test
shl
stc
mov
aas
dec
pop
adc
std
push
pushf
mov
stc
mov
neg
mov
inc
clc
bsr
aad
mov
aas
or
pushl
popf
pushl
xchg
cwtl
mov
pusha
not
xchg
not
mov
bswap
jmp
call
call
movb
mov
push
mov
mov
movb
call
pushl
mov
mov
pushl
pushf
pushf
lea
jmp
pushf
movb
call
mov
jmp
mov
pusha
pushf
mov
pushf
pushl
jmp
pushf
movb
mov
mov
jmp
mov
mov
pushf
repz
popl
push
call
call
pushf
push
mov
push
mov
jmp
ror
pushf
movb
dec
bt
add
call
bt
shrd
jmp
movl
pop
bswap
pushf
mov
inc
dec
xor
neg
inc
pushf
movzbl
inc
dec
clc
cmp
btc
cmp
lea
bt
sub
pushf
pushf
lea
jmp
mov
movb
jmp
xor
bt
call
pusha
mov
call
call
shrd
pushf
mov
pushf
pushf
popl
push
movw
call
lea
cpuid
pusha
bt
sub
movw
push
cmpl
pushl
mov
push
call
rcl
clc
push
aad
mov
bswap
mov
setne
rcr
pushl
mov
cmc
test
add
cmc
movb
jmp
xchg
movsbw
mov
call
dec
movzbl
clc
sub
stc
clc
add
mov
pushf
stc
rol
pushf
call
pushf
pushl
popl
pushf
pushl
lea
jmp
mov
call
pusha
jmp
shrd
sbb
mov
push
clc
sub
clc
clc
pusha
test
add
pushl
pushf
popl
jmp
xchg
xchg
movsbw
push
dec
push
movzbw
mov
mov
dec
neg
neg
pusha
movw
dec
mov
lea
shrd
lea
pusha
jmp
push
cwtl
mov
test
add
mov
bt
not
cmc
mov
cmc
not
cmp
jmp
inc
mov
movzbw
mov
pushf
jmp
sub
pusha
push
pushf
pushl
lea
jmp
call
push
pusha
mov
movb
call
call
not
pushf
movl
push
call
jmp
pushf
pushl
mov
call
mov
push
pushf
repz
popl
call
stc
clc
add
call
shl
mov
cmc
jmp
movw
mov
pushf
call
push
not
push
mov
call
pushl
push
mov
jmp
lea
cwtl
mov
lahf
pusha
mov
call
movsbl
mov
lea
jbe
lea
pushf
mov
mov
lea
jmp
movl
movsbl
pop
push
movzbw
mov
movzbw
dec
sbb
rcr
inc
xor
neg
inc
call
pusha
pushf
popl
push
mov
call
pushf
movl
mov
mov
pushl
pusha
lea
jmp
mov
movb
push
lea
jmp
movl
jmp
sar
shld
test
lea
pusha
clc
call
pushf
mov
mov
movb
push
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
jmp
jmp
sub
stc
shr
push
jmp
xor
movw
call
xchg
pushl
popl
call
call
pushl
popl
movb
lea
jmp
jmp
shld
mov
jmp
mov
bswap
not
push
call
mov
call
and
movb
call
jmp
mov
movzbl
btr
bswap
not
mov
call
push
pushf
mov
pusha
call
pusha
jmp
pushf
pusha
pushl
mov
mov
jmp
mov
jmp
jmp
daa
mov
jmp
bt
test
sub
pusha
mov
pusha
pushf
pushl
movw
lea
jmp
and
cmp
jmp
dec
lea
jle
not
push
inc
dec
dec
xchg
mov
mov
movzbl
push
dec
rcr
inc
sar
neg
pusha
inc
dec
jmp
pushf
jmp
bswap
pushf
dec
stc
lea
call
call
pushl
jmp
pushf
movw
mov
pushf
pusha
lea
jmp
push
movzbw
mov
dec
call
neg
mov
call
shl
rol
push
mov
mov
push
sub
cmp
pusha
stc
add
pushf
push
mov
pushf
popl
movl
pushf
push
pushl
popl
pushl
push
pushf
lea
jmp
jmp
call
jmp
inc
pushf
rol
pushl
stc
sub
bt
add
push
sub
jmp
jmp
mov
mov
call
mov
mov
jmp
pusha
mov
movb
call
push
mov
jmp
jmp
jmp
shld
mov
push
pushf
stc
mov
add
mov
mov
lea
jmp
pusha
shld
movb
push
jmp
mov
dec
mov
pushf
pushl
popl
call
dec
pushl
shld
bswap
pushf
neg
push
pop
dec
and
rol
lea
jl
bsr
mov
clc
push
cmc
sub
pushf
lea
jmp
pushf
mov
push
mov
mov
lea
jmp
add
push
jmp
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
cmc
test
sub
cmc
shl
pushf
pusha
pushf
pushf
mov
call
not
pop
dec
movl
call
bt
add
call
call
repz
popl
mov
mov
call
dec
and
lea
pushf
pushf
call
jmp
stc
sub
pushf
mov
pusha
pushf
pushf
lea
jmp
mov
mov
mov
pusha
movb
lea
jmp
lea
jae
mov
call
xor
test
sub
test
cbtw
clc
cwtl
push
cmp
test
call
mov
pusha
jmp
jmp
mov
pushf
pushl
mov
pushf
mov
jmp
jmp
call
pushf
pushf
mov
pushl
movb
pushl
mov
pushf
jmp
dec
dec
rcl
lea
test
sub
push
lea
jmp
movsbw
inc
jmp
push
xchg
pushf
dec
mov
call
cmp
sub
jmp
call
pushf
popl
pushf
call
pushl
mov
pushf
pushf
lea
jmp
push
sub
pushl
mov
mov
pushf
mov
pushf
lea
jmp
movb
call
mov
movsbl
push
push
movb
jmp
pusha
jmp
inc
mov
mov
pushf
mov
lea
jmp
push
jmp
call
xor
pusha
bt
neg
pusha
cmc
clc
ror
mov
pushl
cmc
sub
jmp
xchg
push
push
call
cwtl
dec
pusha
das
mov
test
bt
sub
call
jno
bt
pusha
add
mov
jmp
call
push
mov
call
mov
pushf
repz
popl
pushf
mov
mov
dec
lea
mov
call
mov
push
movw
pushf
push
lea
jmp
pusha
mov
pusha
mov
pushf
pushf
push
jmp
sub
add
jo
sub
call
lea
jne
sar
setle
rcl
mov
pushf
pusha
and
clc
bt
test
cmp
pusha
jmp
pushf
popl
jmp
mov
lea
jne
push
not
movsbw
mov
movzbw
pushl
movsbw
jmp
call
call
xchg
inc
lea
jo
mov
movzbw
push
pusha
mov
lea
pushl
popl
bswap
movsbl
movl
not
mov
movzbw
pop
dec
and
shr
shl
add
neg
pop
pusha
dec
lea
jnp
inc
mov
jmp
mov
jmp
bt
call
pushf
mov
call
pop
mov
dec
movsbw
jmp
pushl
add
mov
mov
movb
movw
pushl
ret
movb
mov
bswap
jmp
movw
push
mov
inc
pop
bswap
xchg
jmp
btr
ror
call
push
lea
jne
and
mov
jge
and
stc
clc
call
movsbw
push
dec
rcr
shld
add
stc
rcl
sar
test
add
cmc
movsbw
stc
mov
clc
bt
bt
add
pushf
call
xchg
not
pop
mov
movsbw
pushf
lea
mov
pushl
popl
pop
dec
lea
movl
pusha
mov
pop
pop
push
dec
bswap
rcl
neg
jmp
mov
jmp
clc
clc
add
mov
mov
movw
lea
jmp
rol
not
pushf
mov
lea
jae
rcr
add
jb
not
push
pusha
mov
push
pushf
jmp
mov
call
movw
mov
pushf
movb
push
mov
jmp
sub
push
lea
jmp
jmp
mov
repz
popl
call
call
repz
popl
call
mov
movzbl
movsbw
pushl
popl
call
neg
not
bsf
mov
cmc
clc
movw
cmc
add
movw
jmp
or
clc
lea
bt
bt
cmp
pusha
pusha
push
lea
ja
rcl
ror
mov
sub
aaa
bt
lea
rcl
sub
setne
pusha
bts
bts
lea
ror
and
add
xor
pusha
neg
sub
call
pushf
mov
pusha
pushf
mov
push
call
bswap
pushl
popl
pusha
movl
push
inc
mov
not
lea
dec
cmp
neg
shl
neg
push
inc
not
pushf
dec
neg
lea
clc
sub
pusha
lea
jmp
push
push
mov
cld
mov
mov
rep
and
shrd
push
rcl
mov
shld
btc
cld
mov
jmp
call
lea
mov
sbb
mov
jmp
push
jmp
sub
cmc
cmc
call
pusha
pushf
mov
jmp
jmp
mov
pushf
pushf
popl
call
pusha
inc
call
sub
call
lea
jge
pusha
mov
movb
mov
push
pusha
pushf
popl
push
jmp
mov
test
call
call
mov
jmp
dec
lea
rol
shl
neg
inc
dec
dec
rcl
ror
call
dec
movzbw
pushl
popl
xchg
bswap
bswap
movl
jmp
bswap
jmp
mov
jmp
sub
push
pusha
lea
jmp
pusha
jmp
mov
call
inc
stc
clc
cmp
jmp
pushf
pushf
call
mov
cwtl
pushf
mov
movzbw
mov
mov
movb
mov
mov
movb
pushl
ret
clc
add
pushf
lea
jmp
pushl
pusha
mov
jmp
call
pushf
clc
stc
test
sub
pusha
mov
mov
lea
jmp
movb
mov
pushf
jmp
call
call
dec
dec
bsr
movsbw
lea
bt
cmp
sub
pushf
lea
jmp
mov
mov
pushf
mov
movb
lea
jmp
call
stc
jmp
movzbl
bswap
bswap
movsbw
inc
rcl
clc
sar
pusha
sub
push
test
bsf
shl
add
movzbw
rol
shrd
or
shl
btr
xor
ror
pusha
xor
sar
sub
adc
shl
shrd
movzbl
movb
cmc
mov
jmp
das
lea
mov
xor
mov
clc
test
add
push
mov
pusha
pusha
push
push
lea
jmp
lea
test
mov
rol
shr
mov
cmc
stc
bt
stc
add
jmp
jmp
and
add
pusha
pusha
mov
pushl
pushf
mov
pushl
pushf
lea
jmp
pushf
mov
movb
call
sub
pushf
pusha
pushf
lea
jmp
neg
jp
add
and
mov
pusha
sub
call
pushf
mov
pushf
pushf
lea
jle
push
pusha
pushf
repz
popl
pusha
pushf
jmp
pushf
xchg
movzbw
inc
mov
inc
inc
lea
mov
call
movzbw
mov
mov
mov
pop
call
cmc
rol
shl
bswap
mov
sar
mov
pushf
stc
call
call
rdtsc
mov
adc
shld
shr
mov
jmp
pusha
pushl
popl
pusha
push
push
pushl
lea
jmp
ror
btr
mov
shl
push
mov
pushf
jmp
dec
test
btc
lea
test
cmp
sub
pushf
pushl
pushf
lea
jmp
push
not
call
call
