xor
daa
in
aas
mov
add
lret
mov
mov
stc
shlb
ds
test
leave
push
push
addr16
pushf
testl
addr16
out
js
pop
xchg
adc
test
and
ljmp
cmp
ljmp
outsl
mov
jmp
xchg
fnsave
stos
sbb
clc
mov
scas
ror
add
mov
xchg
cmp
lret
fsubl
mov
out
and
iret
popa
lods
mov
cmpb
mov
push
loop
insl
adc
and
mov
pop
loope
arpl
xchg
mov
xor
jo
xchg
mov
cmp
gs
ljmp
ja
fdivs
aad
fcompl
cmpsb
popa
push
out
mov
and
add
mul
push
dec
pop
sbbb
lods
push
mov
and
pushl
movw
pushl
ret
mov
pushl
pushf
bswap
mov
movsbl
pop
mov
pushf
pushl
ret
fcoms
negl
leave
push
out
in
lret
stos
xor
mov
dec
push
push
ret
movsl
stc
dec
ja
push
cld
push
cs
xor
xor
iret
cmp
mov
or
adc
scas
xlat
rolb
stos
sub
testl
enter
push
pop
add
or
add
dec
xchg
in
mov
shll
adc
es
testl
pop
xchg
mov
push
insl
jg
cltd
cmp
repnz
sub
mov
jno
jecxz
sbb
fisubl
push
sti
inc
scas
adc
in
pop
fnstsw
nop
xor
outsl
mov
clc
inc
test
dec
mov
push
pop
push
mov
imul
arpl
hlt
sahf
xchg
test
mov
push
test
jae
aad
mov
cmp
daa
addr16
outsb
lcall
inc
push
dec
stos
cmc
mov
in
mov
mov
jb
adc
sub
adc
pushf
movb
pushf
pushf
mov
push
dec
push
pushl
inc
mov
push
mov
jmp
push
pop
push
xchg
iret
jnp
add
pop
inc
cmp
int
sbb
add
mov
lea
jp
mov
mov
loope
ljmp
xor
or
dec
push
dec
mov
notb
cltd
mov
mov
in
clc
cltd
mov
out
and
xchg
pushf
adc
je
pop
out
cs
in
fdivrs
loopne
in
adc
jb
jecxz
stc
popa
mov
and
ret
andl
xchg
push
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
and
je
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
mov
mov
jmp
pushl
popl
pushf
pushl
ret
mov
not
inc
call
lea
jb
test
cmp
pushf
lea
ja
test
push
add
add
clc
or
call
pushf
jmp
push
cmpsl
xchg
mov
dec
or
divb
xor
adc
lock
push
sbb
popa
mov
push
sbb
lcall
hlt
stc
mov
adc
jne
xor
mov
ficompl
mov
jo
xchg
fs
rep
clc
testb
dec
adc
and
jge
mov
xchg
and
out
push
mov
and
or
loopne
les
and
js
xchg
clc
stos
cmp
lods
add
mov
popf
cmpsl
iret
gs
push
gs
insb
xor
push
addb
fdivs
mov
and
test
decb
stc
shl
bts
and
btr
sub
sbb
adc
movsbl
shl
mov
push
pusha
cmc
cmp
sub
clc
bt
test
call
dec
jp
test
mov
sbb
pusha
pusha
aas
enter
imul
sahf
jns
mov
jbe
jecxz
lods
mov
mov
into
fs
push
fs
lret
sub
mov
mov
movq
outsb
push
sahf
arpl
movsb
inc
xor
insb
xor
stc
bound
loop
shlb
mov
adc
aad
or
int3
jne
pand
jl
mov
xchg
push
push
fdivs
xor
and
push
pushf
mov
pushl
ret
mov
pushf
movb
lea
jne
not
sbb
xor
or
rcr
shrd
shl
mov
and
xor
add
test
mov
cmp
cmp
push
bt
test
pusha
lea
je
pusha
stc
jmp
pusha
lea
jne
jae
push
pusha
bt
cmp
cmp
jmp
mov
stos
int
fadds
jp
push
ss
add
xor
pop
ss
pop
sub
adc
dec
mov
cltd
mov
insb
adc
cmp
jbe
sub
dec
sub
inc
jnp
add
mov
add
mov
stc
jnp
movsl
push
mov
ja
call
dec
push
shrb
pop
cmp
push
push
arpl
mov
adc
cmp
push
mov
jbe
sub
pushf
movw
lea
call
jmp
pushl
mov
pushf
lea
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
xchg
xor
sbb
adc
int3
scas
sub
dec
cmpb
in
dec
in
add
insl
jge
jge
and
pop
mov
sahf
sbb
or
test
jb
out
cld
in
je
jecxz
je
mov
xchg
sub
mov
pop
xor
fwait
dec
repz
jl
adc
push
push
outsb
cmp
sub
dec
popf
std
inc
jg
shr
push
xchg
pop
scas
jg
fisttpl
add
xchg
xor
xchg
stos
sbb
xchg
out
je
mov
imul
xchg
sbb
mov
push
and
lret
mov
ja
sub
pushf
push
lea
jb
pusha
pusha
mov
pushf
pushl
ret
inc
clc
movw
pushf
mov
rol
jmp
mov
jmp
data16
mov
xor
popw
cld
out
movsl
and
mov
aas
imul
mov
pop
popf
mov
mov
push
sti
mov
negb
mov
int
pop
call
out
ret
jno
int3
addb
mov
ja
ja
mov
mov
pop
and
xchg
cmp
inc
and
inc
pusha
cmp
xchg
mov
adc
push
sbb
jmp
sbb
inc
and
aaa
xchg
pop
movsl
repnz
test
jbe
jmp
push
pushf
lea
call
push
mov
lea
jae
call
xchg
repz
lea
inc
lock
rol
cmpsb
add
xor
scas
xchg
fimuls
mov
mov
push
add
addr16
cmpl
sbb
shll
adc
xchg
jmp
loop
adc
cmpsb
data16
cmpsb
xor
pushf
lret
fistps
sub
jo
lods
ret
test
mov
sti
sub
out
cmpsb
jmp
xchg
pop
push
xlat
loope
cmp
subb
andl
into
mov
sbb
kxnorb
xchg
fs
call
xchg
cmpsl
push
inc
mov
js
rcll
daa
adc
je
inc
push
mov
cwtl
xchg
ja
push
lret
inc
xor
xor
xor
lds
movsb
push
mov
cltd
mov
push
dec
in
rcll
sub
movsl
mov
out
shlb
or
push
mov
pop
dec
js
and
or
push
pushf
inc
jp
push
xchg
push
in
add
xor
xlat
sbb
xlat
adc
cli
lcall
sub
call
and
std
xchg
test
outsb
jge
icebp
loope
and
stos
pop
and
jge
mov
stos
adc
cwtl
fcom
ss
pushw
lock
jmp
or
sub
ret
and
add
cmpsl
push
hlt
mov
jns
lcall
aas
xor
add
in
int
add
and
or
stos
js
push
movsl
inc
mov
xchg
test
cmp
push
les
int
aaa
sbb
nop
mov
cli
call
push
stos
out
gs
push
or
and
add
pop
mov
xor
and
sub
fs
xchg
push
mov
jp
or
pushl
popl
pushl
jmp
sub
pusha
jmp
movl
pusha
movl
movw
jmp
jmp
call
movb
add
call
xchg
fcmovnb
in
mov
mov
jl
pop
mov
push
sub
mov
adcb
cmp
loop
scas
inc
or
xor
fimuls
jne
push
dec
out
adc
fdivp
jns
or
popa
lods
lock
sub
mov
and
xor
aad
mov
inc
add
sub
cmp
stc
into
jno
mov
push
cmp
sub
xlat
or
dec
fisubl
addr16
and
inc
addl
push
cmpb
inc
jmp
mov
pushf
pushf
movb
mov
pushl
ret
and
xchg
inc
cmp
mov
inc
mov
jne
test
mov
or
mov
inc
cmpsb
jne
fdivrs
sahf
mov
jb
jecxz
test
sub
pop
inc
pop
insl
mov
imul
ss
pusha
loopne
jne
mov
xor
or
adc
insb
add
mov
ja
stc
and
mov
in
test
mov
mov
jnp
stc
push
mov
jle
cmpsb
rorl
lret
xor
xchg
pop
hlt
push
and
inc
push
js
fisttpll
cli
in
sbb
jb
gs
lock
jge
or
jp
push
rclb
and
call
mov
data16
sub
push
jmp
push
loop
jmp
xchg
pop
dec
pusha
test
jg
xchg
insb
aam
pop
scas
bound
ret
pushf
pushf
pushl
popl
pushf
pushl
ret
arpl
idivb
mov
ds
xor
xchg
gs
fsubrs
cmc
lea
clc
divl
sbb
mull
xor
xchg
push
cmpsb
sbb
push
cmp
ljmp
cmp
loope
andl
cmp
lret
and
push
or
sbbl
int
mov
lcall
hlt
adc
add
pop
sbb
mov
in
cmp
mov
jl
test
pop
xor
ja
jp
push
add
mov
sub
pop
mov
test
jl
mov
scas
or
fiaddl
scas
dec
adc
sub
mov
fcomp
loop
daa
stos
jno
add
movsb
sub
xchg
push
sbb
es
enter
sbb
adc
mov
dec
mov
push
outsb
mov
arpl
dec
scas
dec
add
js
inc
pop
sahf
shlb
fimuls
fwait
lods
stc
mov
or
push
loopne
push
sub
adc
leave
mov
stos
mov
arpl
xchg
inc
movsl
or
xadd
pop
add
aad
aam
mov
push
push
ljmp
pand
addl
test
daa
cmp
iret
and
bound
es
push
ret
arpl
test
sub
idivb
mov
adc
lcall
fwait
inc
movsb
mov
popf
ret
shl
aas
orl
loop
lea
mov
jecxz
outsb
jb
add
dec
repnz
das
rclb
cwtl
add
mov
enter
repz
bound
int3
mov
jle
negl
pop
push
fidivl
xor
fstp
pop
dec
cmp
add
jecxz
inc
inc
out
mov
mov
outsb
jp
jae
fsubrl
movsl
shlb
xchg
push
rolb
jb
pop
sbb
je
cs
ss
repnz
mov
lods
jbe
filds
and
decl
jg
es
popa
sub
mov
and
cwtl
lret
push
pushf
movsb
shll
pop
sti
mov
mov
ss
inc
or
movb
jnp
xchg
stos
outsb
inc
xchg
je
jl
jo
fdivrs
xchg
testb
roll
cmc
movzwl
lea
bsr
mov
jmp
pusha
bt
pusha
cmp
mov
lea
jne
jmp
jno
es
lcall
jo
xlat
cmp
mov
and
imul
push
dec
push
push
enter
sub
cwtl
push
pushw
lcall
into
pop
dec
lret
repnz
mov
decb
push
call
sub
and
adc
aas
clc
dec
sub
rep
pusha
mov
mov
mov
xor
xchg
in
cmc
jg
fdivrs
les
test
mov
call
pushf
call
inc
mov
pushf
pushf
inc
pushl
lea
jmp
cmp
pusha
or
jmp
movl
pusha
lea
jbe
push
pushf
mov
pushf
pusha
lea
jmp
pushf
lea
jne
pusha
mov
pusha
lea
jmp
scas
stc
fisttps
dec
mov
push
mov
popf
sbb
push
mov
sbb
jns
repnz
js
fstpl
dec
fisttps
sahf
jle
ret
cmp
sbb
mov
pop
push
and
dec
fimuls
pop
and
in
xchg
jae
rcll
mov
cmp
mov
xor
jecxz
icebp
rorl
aas
cld
push
mov
cmp
adc
cltd
stos
imul
jl
jmp
pushf
jl
call
insl
pop
push
test
or
movsl
in
inc
nop
cmp
mov
xor
inc
jo
loopne
in
or
lret
cmc
lods
shlb
test
mov
mov
jp
jmp
adc
out
inc
lahf
imul
push
mov
pusha
pop
mov
dec
xchg
clc
xor
mov
movb
sub
insl
dec
mov
and
cmp
pushf
mov
push
mov
push
xor
nop
dec
stos
rclb
mov
pop
jne
fistpl
lods
pop
fmull
test
mov
incl
mov
cmp
lea
shlb
in
stos
pop
incl
inc
add
or
xor
hlt
les
xlat
push
or
nop
inc
rclb
pop
inc
adc
rolb
stos
cmc
mov
fsubs
xor
jns
cmp
and
shll
mov
pop
scas
out
test
cmpsb
xor
cmp
sbb
sbb
mov
inc
popf
cmp
insl
mov
roll
xchg
cmpl
pop
jmp
adc
pop
fmuls
fisubrs
cmp
lret
repnz
jno
aad
or
pop
daa
fcmove
in
std
xchg
enter
cltd
xlat
sub
jbe
inc
cli
fisubrs
jb
sbb
sbb
jne
stos
xchg
nop
iret
jle
in
stos
pusha
sbb
push
adc
cmp
shrl
fsubs
orb
and
jb
bt
cmp
cmp
cmp
push
pusha
lea
ja
cmp
jmp
xchg
pop
movsbw
bswap
pushl
popl
pusha
movzbw
mov
push
movl
pushf
movsbw
lea
pushl
pushf
movl
call
push
pop
mov
push
cmc
add
fcmove
into
mov
jmp
add
imul
arpl
dec
xchg
imul
movsw
adc
mov
bound
lods
lret
mov
and
or
mov
sahf
pusha
mov
cli
je
sbb
outsl
dec
xchg
enter
pop
add
xchg
aad
stos
push
sub
lret
dec
mov
test
in
pop
sub
lods
push
cwtl
loop
repnz
int
mov
enter
pop
rorl
and
mov
scas
out
jl
adc
outsb
shll
sbb
shl
inc
push
clc
shrl
js
and
cmpsl
or
outsl
xor
inc
aas
aaa
jns
stos
mov
dec
jmp
movsb
jmp
das
fxch
or
fsts
jge
ss
xor
xchg
xchg
dec
clc
fsts
popa
mov
cmp
test
fnstcw
lret
lods
out
and
inc
mov
and
mov
xchg
inc
mov
ret
test
cli
rolb
test
xchg
push
push
and
fsubs
sub
and
xor
cmp
sbb
and
adc
mov
ljmp
ja
sbb
bound
push
insb
loop
inc
cmc
jae
mov
xor
inc
out
leave
jnp
inc
mov
jge
xor
jmp
jle
jne
cmp
hlt
imul
xchg
or
pusha
sub
stos
push
and
jg
mov
pop
das
cmpb
iret
js
stc
mov
pushf
jns
xchg
push
add
fsubs
mov
pop
add
xchg
push
or
cmp
pushf
pushf
lea
jae
adc
stc
stc
mov
neg
shr
and
stc
mov
bsr
adc
mov
cmc
cmp
stc
stc
xor
pusha
test
repnz
movb
call
aaa
ja
xchg
mov
mov
mov
add
push
shrb
adc
dec
xchg
mov
ja
insb
pop
mov
adc
xchg
pop
fs
pushf
rcr
pop
aam
mov
push
mov
inc
xchg
jmp
cmp
xor
aad
scas
xor
dec
adc
jbe
mov
mov
jecxz
ffree
movb
aas
cli
pop
sub
mov
mov
mov
ret
sub
insb
adc
sub
jg
data16
rolb
sarl
jo
fsubs
das
sub
jmp
loope
xchg
pusha
sbb
mov
xchg
mov
fistpll
aas
movsl
negb
adcb
xchg
in
cs
adc
shlb
nop
jns
sbb
push
xchg
mov
mov
stc
pop
scas
loopne
icebp
loope
sub
mov
in
pop
fsubrs
cmp
pushf
sbb
pop
dec
data16
test
loop
cmp
pusha
notb
push
add
fistps
lahf
roll
pop
jnp
jae
dec
xchg
jmp
icebp
inc
movsb
out
mov
lods
icebp
mov
fsubs
sub
or
rcr
jb
das
add
fcom
mov
das
adc
das
jge
mov
mov
shrl
and
or
cmp
adc
insb
out
dec
lock
movsbl
push
aaa
mov
aas
das
sti
call
push
jmp
ds
jle
sbb
add
out
shlb
mov
outsb
xor
dec
add
inc
mov
pop
cs
mov
inc
add
mov
fisubrl
or
pushf
cmp
cmpsb
es
clc
xlat
sarl
jne
add
popa
pop
jnp
pop
rcll
or
fiadds
mov
push
inc
test
jge
insb
ja
js
mov
adc
add
pop
mov
in
mov
data16
adc
arpl
xor
out
fwait
in
mov
mov
mov
push
xor
sahf
cmpsb
or
lahf
inc
add
dec
mov
fcomi
inc
pop
psubsb
frstor
inc
inc
leave
pop
pop
loope
cltd
jge
or
cmpsb
lock
jbe
rorb
and
insl
in
pop
in
lods
les
jae
push
pop
jg
cs
arpl
je
xor
incb
fcompl
inc
inc
je
mov
sete
jnp
enter
dec
mov
sub
cmp
mov
pop
jae
add
xchg
pop
daa
mov
insl
dec
dec
mov
or
or
int
insl
jmp
cwtl
dec
jmp
fidivrs
aam
jno
cli
stc
sub
test
lcall
inc
mov
addl
and
mov
xor
xor
pop
mov
out
push
pushf
ret
xchg
movsl
xchg
sub
popa
cmpsb
out
mov
addr16
cmp
dec
or
outsb
cli
insl
insl
aad
sub
popf
in
sti
pop
mov
xor
ljmp
xor
stos
iret
fwait
outsb
addr16
sub
mov
mov
mov
jge
mov
push
aam
repnz
inc
xchg
push
jecxz
jbe
xchg
mov
sub
loope
push
mov
jle
push
pop
scas
enter
mov
cmp
mov
stos
clc
xlat
cmp
mov
mov
or
jge
rclb
dec
pop
mov
test
bound
sub
andb
mov
mov
rcrl
mov
pop
sub
cli
fwait
dec
pop
adc
mov
jnp
or
cmp
mov
dec
mov
adc
and
sti
mov
rcll
cltd
add
fdivl
and
push
pop
and
mov
adc
cli
les
inc
and
cmp
mov
movw
lea
jmp
inc
je
scas
jle
loop
inc
int3
dec
ss
test
pop
dec
inc
mov
lods
fsubrs
imul
aas
data16
dec
insl
push
mov
pushf
push
in
lods
mov
scas
int
xchg
sbb
mov
outsb
pop
loopne
orl
insb
call
outsb
je
arpl
xchg
xchg
icebp
dec
mov
inc
and
in
jp
addr16
pop
mov
addr16
xor
fdivrl
lds
popa
add
inc
push
je
dec
push
add
cmp
pop
cli
sbb
idivb
fsubl
xor
add
mov
pop
add
in
push
lret
mov
hlt
pop
mov
xor
loop
insb
or
jle
and
jbe,pt
mov
jae
sbb
cwtl
jp
and
aad
jg
mov
and
ja
int
out
jmp
ja
out
imul
xchg
aam
ds
or
cmp
stos
jo
imul
jne
adc
cmp
mov
push
cwtl
shlb
pavgw
xchg
jae
movsb
dec
sti
add
cltd
les
insb
ss
dec
lahf
mov
push
movsl
movzbw
mov
pusha
lea
mov
jmp
test
jno
lea
mov
out
loopne
int3
sarb
je
fidivl
add
cs
outsl
pop
mov
mov
jns
push
inc
push
jp
outsb
ret
jg
mov
fbld
shll
inc
inc
les
rorb
jle
mov
movsb
pop
dec
bound
insl
pop
stc
jmp
icebp
sub
ret
adcl
sti
xorl
dec
lods
jb
outsl
mov
push
jp
je
in
push
lods
or
sub
add
cmpsl
icebp
inc
andl
pop
add
sbb
ret
hlt
lock
inc
sub
pop
lods
mov
inc
pop
mov
enter
pop
xor
das
fimuls
sbb
pmulhuw
fistl
fdivrl
stos
sub
xchg
xchg
push
out
dec
xor
test
test
lds
mov
lea
dec
add
lea
das
idivb
jnp
scas
out
push
pop
fdivs
lds
push
dec
inc
inc
push
push
xor
cs
insb
add
xchg
xor
pop
loopne
dec
cmp
xor
outsb
icebp
inc
mov
daa
in
adc
shlb
test
xchg
sarb
insl
je
scas
or
xor
cmpsl
jl
sbb
inc
sbb
lret
dec
or
and
xchg
test
fs
ja
call
xchg
clc
jo
mov
loope
lock
inc
xchg
jle
xchg
loop
add
push
mov
insb
jns
clc
call
jae
sub
fadd
stos
xchg
hlt
fidivrs
ds
add
xlat
inc
aaa
adc
xor
jno
call
sbb
jnp
and
inc
adc
xor
hlt
ret
sub
xchg
inc
rorb
popa
in
sub
aaa
add
sti
jne
add
xchg
xor
inc
jp
test
data16
mov
mov
inc
test
lahf
jo
lea
das
ljmp
rcrb
lods
popf
jmp
mov
and
xchg
sub
mov
pop
fnstenv
xor
sahf
sti
out
bound
xchg
mov
mov
rcll
outsb
fildll
pop
lds
fiadds
cmpsb
arpl
dec
sbbl
pop
jo
les
out
and
lret
les
xchg
pop
ljmp
out
test
hlt
popf
xchg
xchg
subb
rcll
insl
fwait
je
push
cmp
stos
push
sbb
subb
dec
pushf
pop
sub
inc
aas
mov
fisubrl
xor
xor
jns
xor
lods
mov
pop
xor
jne
fsubrs
shlb
incl
leave
xchg
scas
negb
mov
or
inc
xchg
notb
xchg
out
cwtl
in
mov
cmpsl
mov
loopne
ret
xchg
fnsave
cli
gs
sbb
rorl
bound
push
mov
xor
popf
orl
push
out
out
ds
jmp
xor
cwtl
mov
jae
xchg
sbb
cmp
add
stc
dec
loope
cli
cmp
jo
lret
setge
pusha
xchg
or
mov
lds
mov
xchg
mov
nop
aam
push
int
inc
push
mov
jae
mov
xor
push
xchg
inc
fdivl
mov
test
push
repnz
xor
inc
sbb
loope
ret
nop
xchg
inc
cmpsb
jno
xor
mov
mov
lret
xchg
addr16
push
fucom
push
cmp
loop
test
sbb
call
xor
mov
sub
mov
or
lcall
xor
push
jae
push
dec
jae
lock
sarl
dec
fcomps
fs
inc
mov
mov
mov
jbe
push
adc
push
and
cmc
sub
inc
xchg
imul
into
push
nop
repz
scas
rcr
xchg
lock
repz
push
push
xchg
dec
sub
into
mov
mov
mov
mov
mov
mov
pop
pusha
pushf
pushf
pushl
pushl
ret
lea
jne
setne
mov
call
repz
aam
or
into
fiaddl
xchg
lea
jno
ds
hlt
dec
loopne
dec
sub
dec
jmp
sub
xlat
inc
inc
scas
cs
das
push
fmull
dec
add
push
aaa
shll
push
sbb
mov
push
sub
stos
jb
push
mov
outsl
jno
cmp
xor
adc
lea
jne
ror
movzbw
mov
mov
sub
je
xor
pusha
lea
bt
cmc
push
jmp
mov
push
mov
lea
jmp
lret
adc
inc
gs
xchg
ret
mov
mov
mov
sbb
xchg
sub
sub
push
push
xchg
stc
popl
sbb
insb
xor
test
gs
mov
dec
mov
rcll
mov
xor
jae
fs
pop
sub
cld
jge
insb
fstpl
ds
add
mov
inc
fists
cmp
ret
and
push
inc
or
pop
xchg
cmp
jle
ljmp
lret
lods
sub
pop
add
andb
sub
adc
mov
shrb
out
add
dec
cwtl
xor
inc
dec
js
sbb
jb
fstl
xchg
loopne
hlt
je
add
mov
test
cmp
and
cs
leave
aam
xor
imul
or
sti
shll
cmp
shll
mov
addr16
adc
sub
jb
out
inc
sub
push
cld
cld
dec
mov
add
test
xor
dec
popa
loope
adc
inc
nop
aaa
orl
or
cld
popa
and
mov
clc
rorb
movsb
cmpsl
xchg
subl
test
mov
es
mov
out
mov
data16
dec
sub
mov
adc
mov
xor
fcoms
xor
mov
dec
mov
inc
xchg
je
pop
fdivrl
insl
pop
and
pusha
sbb
dec
sbb
mov
cltd
hlt
jo
sub
bound
xchg
repnz
test
push
popa
xchg
jg
insl
cmp
inc
cmpsl
aad
lret
adc
rclb
dec
loopne
jns
divb
movl
in
mov
push
icebp
pop
je
fs
jne
movzbw
pushf
mov
push
lea
jmp
and
movsl
das
pop
lcall
pop
in
scas
movsl
xorb
fisubrs
adc
stc
je
xchg
sub
cmp
pcmpeqb
repz
or
imul
sahf
add
cs
xchg
push
das
jg
movsb
mov
shll
mov
add
push
sub
cli
pop
fldcw
push
loopne
jle
xchg
mov
mov
push
decb
pushf
jmp
outsb
into
xor
cmc
push
fldenv
inc
inc
mov
in
mov
and
and
mov
clc
lds
add
xchg
gs
adc
sub
sub
in
xor
mov
leave
lret
jle
and
push
xchg
popa
xorl
sub
mov
push
imul
fldcw
popa
lret
jge
sbb
dec
aad
pop
and
je
adc
lret
or
sub
fcoms
pop
stos
scas
or
mov
incl
andl
stc
fiadds
pop
xor
js
push
jge
mov
add
jp
or
lret
lret
lds
or
lea
mov
lret
pop
icebp
sbb
push
dec
xchg
jae
adc
aad
jnp
xchg
repnz
cwtl
ljmp
pusha
cmc
xchg
cli
movsl
adc
call
jns
and
pusha
inc
cmp
cmp
xor
dec
or
stos
jmp
push
dec
lods
in
inc
mov
mov
push
sub
movsb
inc
adc
outsb
stc
xchg
fcom
xor
test
les
insb
mov
loop
xchg
rolb
xor
dec
push
jo
mov
push
xor
dec
lret
mov
bound
icebp
inc
sub
push
rcll
push
mov
clc
fs
fdivl
aas
or
push
xchg
in
lretw
pusha
inc
dec
in
imul
aam
jne
push
sub
jmp
mov
movb
dec
call
insb
stos
lods
dec
pop
add
mov
adc
stos
or
mov
insb
leave
xchg
stos
jno
stos
push
mov
sarb
push
and
nop
sbb
je
and
jbe
jno
jl
aam
mov
sarb
out
mov
fildll
inc
clc
fst
add
test
and
sarl
orb
shll
pop
addb
or
in
sbb
mov
mov
push
cmp
push
lods
mov
push
test
dec
out
push
cmp
xchg
icebp
in
push
aas
loop
or
sbbl
leave
lds
push
sub
cwtl
sub
dec
lahf
hlt
and
mov
popf
lds
inc
ret
add
lahf
and
xor
mov
inc
xchg
and
imul
bound
cmpl
add
dec
outsb
mov
je
imul
pop
and
cmp
mov
dec
adc
es
out
xor
sbb
mov
mov
cmpsl
or
mov
subb
call
hlt
andb
cmp
jmp
mov
rcr
mov
xor
lock
ret
int3
pop
fstl
mov
aam
adc
or
jl
aas
jb
xor
mov
pop
or
imul
mov
jne
jo
jg
dec
leave
xor
jnp
sub
scas
mov
mov
push
cld
or
fs
jae
pusha
pushf
pushf
jmp
pop
pop
ret
adc
out
or
push
pop
inc
inc
mov
adc
push
fadds
push
rolb
cmp
xchg
and
negl
mov
push
cwtl
fs
or
out
xchg
or
lret
cld
xlat
adc
adc
popf
icebp
xorl
out
fbld
xchg
sti
ror
movsl
add
sub
jno
scas
out
lds
pop
mov
data16
or
push
loope
xchg
stos
xor
aas
popf
xchg
xchg
jno
push
shll
sahf
lret
mov
mov
push
in
jecxz
dec
mov
add
inc
mov
daa
shr
pop
push
cld
adc
cmpsl
jecxz
pop
sbbl
movsl
push
cmp
sub
inc
pop
aad
std
inc
mov
fsubr
jno
jmp
xor
out
mov
arpl
xchg
push
xchg
ljmp
int3
or
pop
or
mov
mov
dec
fwait
jae
and
ds
push
inc
daa
das
sbb
adc
lret
sbb
in
dec
or
sbb
dec
pusha
in
lret
out
das
sbb
or
lcall
fs
je
jbe
add
bt
pushf
stc
cmp
call
inc
cmpsb
xchg
mov
pop
push
insb
pop
sub
dec
sarl
fwait
subb
sahf
inc
add
bound
pushf
xchg
enter
lret
out
push
rorb
add
mov
mov
mov
pop
sti
lahf
xchg
js
je
dec
stc
ja
adcl
dec
clc
jl
in
in
inc
xchg
out
push
xor
imul
sahf
push
out
leave
bound
cmp
pop
sub
or
pop
xor
pop
sbb
add
loop
push
push
gs
fcoms
dec
sbb
fs
call
pushf
movw
mov
push
push
movb
mov
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
in
cld
lcall
pop
std
cld
push
lds
mov
inc
movsl
jmp
pop
int
cwtl
adc
pop
mov
cmc
jg
xchg
sti
and
push
movl
add
jns
pop
fnsave
add
sbb
xchg
int3
ffree
pop
mov
lods
jns
out
cmp
jecxz
xchg
in
pop
call
jp
cmpsl
dec
clc
sarb
pop
lret
loopne
mov
mov
and
push
es
test
inc
xlat
sub
inc
add
sub
cmp
jmp
add
enter
lahf
sub
test
in
xor
nop
push
movsb
hlt
mov
add
pop
jmp
xchg
repz
fwait
add
adc
lahf
push
pusha
dec
inc
push
xchg
pusha
pause
mov
jge
push
ror
das
xor
ret
mov
cmp
cli
sub
or
or
sbb
xor
push
sbb
mov
iret
std
outsb
add
jmp
jnp
pop
fadd
es
or
mov
jecxz
jo
lahf
popf
jmp
sbb
std
xchg
aas
xchg
mov
test
add
xchg
scas
xor
sub
test
mov
imul
int
lcall
bound
movsl
enter
popa
mov
inc
mov
pushf
in
lea
jns
xchg
aad
repz
pop
pop
pushf
push
add
outsb
or
lea
call
pusha
call
mov
rep
bswap
pushl
mov
pusha
lea
jmp
repz
pusha
jmp
call
push
xchg
lcall
pop
sub
or
pop
mov
std
adc
mov
int3
insb
scas
jp
fiaddl
sar
dec
repnz
bound
mov
inc
insb
outsl
enter
call
sub
les
js
push
jo
sub
jle
sbb
sub
clc
outsl
sti
mov
cmp
xor
ret
popa
push
mov
inc
cmp
xchg
push
and
cs
cmp
fldt
mov
sbb
mov
pop
or
notl
push
lods
daa
adc
push
dec
lods
aam
insl
mov
out
and
divl
add
fists
add
jbe
lods
sub
daa
cmpsl
jb
lahf
mov
lods
adcb
push
cli
pop
jno
rol
inc
xor
jle
dec
or
mov
jae
mov
xchg
out
cmp
jp
notb
mov
popa
fsubrl
mov
daa
pop
cltd
clc
inc
andps
test
add
add
xlat
out
pusha
pusha
lea
jmp
pushf
movb
lea
jne
bsr
movsbl
movzbw
movzbw
mov
bt
cmp
bt
or
pushf
pusha
jmp
call
pusha
pushf
cmp
pushl
and
cmp
call
push
lea
shrd
mov
test
pusha
stc
cmpb
jmp
mov
lea
jne
setb
shl
movzbw
and
mov
pusha
cmp
push
pusha
call
mov
pushf
pusha
movb
mov
lea
jmp
inc
fwait
mov
jge
daa
movsb
sahf
or
gs
xor
jge
inc
ljmp
jae
daa
repnz
out
mov
stos
shll
imul
jl
cmp
jl
ja
or
dec
arpl
lahf
insl
aaa
jne
sub
int
fisttps
pop
dec
xchg
pushf
sbb
mov
xchg
out
xchg
jmp
adc
xor
rcrb
mov
pop
inc
mov
cmp
cmc
mov
scas
xor
jmp
xor
daa
or
out
xchg
popa
jp,pn
mov
punpckhdq
inc
jp
icebp
mov
cmpsb
fwait
push
push
jl
cltd
push
push
sub
cmpsl
inc
ret
out
outsl
mov
mov
jecxz
jg
fcoms
jp
dec
mov
stc
mov
push
lods
out
lea
mov
std
mov
xor
add
loop
add
or
xor
adc
sbb
or
xor
mov
inc
cmp
xor
sub
in
in
cmp
sbb
cmp
dec
cmp
lret
cmc
xchg
notb
add
push
into
dec
pop
dec
les
push
rclb
sti
lods
mov
adc
aaa
inc
data16
lahf
shll
out
jge
jnp
adc
stos
outsb
mov
lods
sbb
push
aaa
xchg
lret
or
mov
or
testl
inc
cmpsb
sahf
sbb
jae
nop
imul
clc
add
jp
xor
jl
imul
out
pop
inc
xchg
popf
adc
int
lahf
loopne
fistl
mov
rcl
pop
cwtl
out
push
les
fdivr
inc
rol
js
and
pop
call
mov
rcrb
and
pop
movsb
or
rorl
ret
mov
xchg
or
jg
int
sub
test
jae
imul
sbb
scas
or
pop
orb
not
mov
movsbw
push
movzbw
mov
movzbw
movzbl
mov
jmp
add
push
gs
jo
outsb
dec
gs
js
add
stc
pusha
sub
pushf
cmp
push
lea
ja
stc
pushf
cmc
imul
stc
add
pushf
pusha
push
mov
lea
jmp
pusha
lea
ja
dec
dec
pusha
pushf
inc
push
movb
inc
jmp
xorl
mov
fistl
cmp
add
aam
push
arpl
popf
xchg
sbb
sarb
dec
cmc
mov
or
pop
sub
mov
jbe
inc
push
sahf
add
pop
sbb
scas
adc
enter
fcoms
ficoms
pop
cmp
dec
mov
inc
mov
xchg
xchg
xor
pop
fwait
sti
nop
sarb
lock
pop
cmc
push
mov
cs
loope
push
pop
add
idivb
mov
clc
mov
xor
xor
pop
sbb
cli
lret
stos
xchg
xlat
jns
rorl
add
stos
das
pop
test
sub
adc
sbb
inc
dec
push
add
sub
js
rol
sub
jg
and
mov
lcall
inc
fstpl
pop
xchg
xor
insb
aam
xchg
mov
imul
lods
sbb
push
inc
test
mov
mov
cmp
adc
sahf
addr16
lea
test
push
loope
sub
lods
push
out
pop
xlat
jle
sub
test
or
nop
repz
lods
and
mov
mov
enter
mov
movsb
mov
xchg
iret
repnz
in
xor
jae
sbb
cmp
xor
ret
insl
xor
mov
inc
ja
and
pop
lcall
mov
jmp
ljmp
inc
test
mov
rol
ljmp
or
int3
ja
aad
or
mov
cmp
dec
xchg
mov
and
push
in
sub
shr
data16
cmp
imul
in
mov
adc
out
imul
dec
into
mov
bound
ss
mov
push
stos
daa
hlt
sub
ss
js
bound
pop
mov
pop
and
and
push
hlt
xchg
jmp
jmp
cmpsb
sarl
arpl
pop
pop
sub
out
mov
inc
and
push
fadds
lahf
in
cmp
repnz
jmp
cmc
sub
push
pusha
cmp
pushf
pushl
jmp
ficompl
push
inc
add
pop
std
jge
lret
scas
push
xchg
xor
pop
add
or
mov
jp
orl
inc
loope
popf
jno
mov
cmp
nop
mov
inc
pop
fcomps
xor
lret
scas
rcr
movsl
shll
pop
lret
push
jg
stos
and
xorl
xor
test
mov
fadd
add
mov
mov
mov
mov
sbbl
pop
sub
or
mov
sub
mov
clc
inc
je
inc
outsb
out
int3
inc
fdivrs
adc
out
sbb
inc
hlt
adc
out
and
sbb
lods
loopne
je
inc
mov
scas
push
cmp
je
inc
outsb
out
jo
fcmovb
jno
jg
adc
imul
mov
and
jmp
inc
jmp
shlb
ret
loope
inc
xor
inc
jp,pt
sahf
cwtl
int
xor
adc
in
xor
inc
imul
clc
inc
je
inc
out
out
int3
pushl
sub
inc
dec
lods
dec
out
sub
adc
out
push
pushf
dec
xor
inc
outsb
ljmp
dec
xor
inc
push
pop
adc
imul
je
inc
outsb
out
sub
enter
inc
je
inc
outsb
out
pushf
push
hlt
outsb
out
into
xor
loope
ljmp
je
ss
dec
cmc
inc
je
inc
mov
add
add
dec
roll
inc
jbe
push
ds
nop
orl
inc
outsb
sar
fisttpl
adc
out
das
sub
xchg
xor
inc
hlt
adc
out
jns
out
pushf
xchg
clc
inc
je
inc
outsb
out
adc
inc
xor
inc
mov
inc
shll
xchg
mov
adc
pop
pop
rcr
mov
lea
inc
inc
pop
xchg
cmc
fxch
out
inc
je
inc
lret
add
inc
bextr
fwait
xor
inc
xor
inc
mov
jae
xor
xor
adc
in
lock
in
dec
mov
inc
jle
test
lock
hlt
repnz
push
mov
xchg
clc
inc
je
inc
outsb
out
js
fdivrs
adc
divb
pop
xchg
xor
inc
push
xchg
out
push
retw
xor
adc
cmc
out
fcmovu
lret
hlt
adc
adc
ljmp
std
lcall
adc
dec
push
testb
adc
rdpmc
xchg
dec
ret
addl
sahf
sbb
test
adc
push
lea
pop
mov
inc
je
inc
outsb
out
in
pop
leave
rorl
inc
outsb
out
bound
inc
je
inc
outsb
out
hlt
push
test
adc
cs
ror
xor
adc
out
pushf
neg
addr16
mov
adc
out
mov
inc
hlt
adc
and
shl
lret
inc
xor
inc
out
div
icebp
stos
add
orl
inc
fsubl
add
test
inc
je
inc
outsb
out
scas
mov
repnz
clc
in
inc
cmp
repz
jle
push
inc
sub
data16
xor
dec
fwait
pop
int
orb
sbb
mov
pop
adc
jnp
insb
jne
fstpt
imul
aam
sti
out
lods
loopne
mov
lahf
push
dec
lea
fadds
sub
clc
insb
addl
bound
inc
add
sub
push
push
add
call
lea
ret
movzwl
not
not
bswap
lea
call
cmp
jmp
jmp
cmp
push
lods
ljmp
jbe
xchg
jl
push
cmp
clc
enter
shlb
test
out
psllw
xchg
loopne
mov
int3
xchg
bound
dec
popa
jmp
gs
inc
mov
mov
sbb
add
loope
mov
xchg
imul
aad
xchg
mov
negb
in
test
test
xchg
mov
movsb
fs
idivb
sub
ds
stos
adc
call
mov
inc
jp
add
lret
jmp
and
jne
lea
movb
mov
setb
push
mov
mov
lea
push
jmp
bt
cmp
cmp
pusha
pushf
lea
jae
stc
add
call
push
dec
xor
repz
jnp
lcall
stos
or
pop
push
jnp
sbb
mov
scas
or
pop
sub
aas
fs
mov
testl
jo
mov
push
lret
sahf
hlt
js
test
in
stos
out
cmc
cmpl
mov
testb
shll
mov
jge
imul
mov
fldcw
lret
loop
sbb
mov
dec
sbb
mov
mov
test
insl
xor
rcrl
pop
cmp
daa
addr16
movsl
stc
lea
call
push
call
pushf
push
pushl
lea
jae
pusha
lea
jne
call
not
bswap
not
lea
push
movl
push
jmp
adc
pushf
movb
mov
pushf
lea
jmp
test
pusha
clc
sub
jmp
push
add
clc
pop
sar
rcr
shr
btc
bt
mov
inc
bt
call
popf
shll
sahf
pop
pop
aam
mov
adc
sub
mov
pop
outsb
push
sbb
xor
mov
test
jb
es
fwait
cmpsb
aaa
xchg
lods
or
mov
ljmp
les
jmp
jle
stc
adc
cmpsb
cmp
sbb
ret
call
mov
and
inc
add
test
subl
jecxz
mov
stos
mov
loope
push
lret
mov
mov
push
mov
sub
mov
or
sbb
imul
cmc
aad
shlb
sub
jnp
dec
repnz
xor
fcmovnbe
pop
aas
mov
jge
cmpsb
dec
addr16
cmpsb
xor
pop
in
jle
movsbl
xchg
pop
pop
and
cld
cmpsl
out
adc
ret
out
movsl
aaa
push
xchg
sahf
pushf
rolb
daa
shl
fisttps
lods
test
fidivs
xchg
dec
xor
cli
mov
icebp
xchg
into
cmp
jno
xchg
js
jecxz
inc
push
xchg
or
lods
inc
xor
popf
adc
inc
shll
fcmove
shll
mov
pop
in
cmp
call
in
push
sbb
mov
sbb
push
jo
sub
dec
and
jge
jnp
and
mov
loopne
test
sti
jbe
jo
jne
aam
inc
and
addb
push
xor
mov
stc
xor
jp
clc
and
pop
sti
enter
in
adc
mov
das
popa
in
xchg
imul
in
repnz
or
bound
mov
inc
xor
movsb
nop
xchg
lcall
nop
out
jne
sub
xchg
xchg
add
lea
pop
daa
add
dec
jmp
xlat
test
xchg
outsl
das
or
adc
cmpsl
pop
inc
out
fmuls
pop
mov
dec
inc
dec
dec
xor
cs
insb
add
test
or
jmp
loopne
cld
inc
lcall
insb
jmp
sub
dec
lods
xchg
jbe
jge
test
push
movsl
cmp
or
xchg
js
aam
push
xchg
rcrl
mov
ljmp
push
xchg
and
cmp
mov
push
xor
pusha
das
aam
adc
sbb
jle
loop
sub
lods
insl
push
xchg
in
mov
and
mov
dec
movsb
bound
inc
jp
mov
or
push
push
les
repz
cld
xchg
xchg
jno
mov
mov
mulb
fimull
mov
and
gs
enter
dec
das
jb
dec
aam
fimull
shrb
test
jns
ds
inc
subl
movsb
pop
jle
push
xor
jno
cmovnp
mov
xchg
pushf
lret
ficoms
mov
in
adc
sbb
es
pop
aas
add
sub
jp
push
inc
testl
mov
cmc
cmp
xchg
in
insl
mov
dec
fisubl
out
lds
inc
or
pop
add
jp
movsl
jp
push
inc
call
outsb
mov
mov
jnp
in
inc
inc
and
or
shlb
add
jnp
shll
lcall
movsl
pop
out
sub
xchg
jmp
inc
rcll
mov
adc
scas
ja
xchg
push
test
aaa
or
pop
test
lcall
sbb
and
fmuls
add
inc
pushf
lea
jb
clc
cmp
push
lea
ja
neg
sar
shl
mov
add
push
sar
jmp
jmp
loope
movsb
aas
fidivrs
gs
pop
cmp
and
cmc
fcoms
and
xchg
jno
jmp
xor
lret
movsl
imul
js
or
mov
and
xchg
in
aas
jge
xor
or
adc
data16
cmp
cmp
aaa
mov
jp
inc
lds
scas
push
and
repnz
sub
arpl
jmp
jae
adc
mov
push
push
jp
test
out
int
pusha
stos
imul
mov
dec
addr16
add
pushf
pushf
push
lea
jmp
arpl
mov
repz
inc
mov
data16
mov
cmpsb
scas
leave
lahf
or
push
dec
pop
pusha
es
mov
rclb
shrl
mov
mov
jmp
inc
in
cmp
inc
pop
shrl
cld
dec
cltd
stos
stos
scas
daa
or
mov
or
leave
push
push
imul
out
int
stos
in
outsl
or
shll
jg
mov
dec
jae
in
faddp
daa
jbe
jbe
adc
movsb
add
pusha
xor
fmuls
repz
test
mov
pop
mov
int
ds
jnp
cmc
or
out
bound
loop
dec
test
stos
add
ret
ficompl
in
stc
sub
lret
loop
out
fists
repz
mov
dec
loop
mov
repz
cmpsb
divl
push
aas
iret
test
cmp
and
inc
stos
les
mov
dec
xor
outsl
mov
push
mov
out
push
lock
cmp
lods
push
test
dec
cs
daa
cmp
jle
inc
mov
testb
push
add
fwait
imul
imul
xchg
pushf
mov
adc
dec
pop
stc
outsl
jg
ret
cli
fwait
incb
xchg
mov
imul
loope
adc
leave
dec
adc
imul
adc
dec
push
adc
sbb
inc
add
incb
into
mov
js
fmuls
mov
pushf
lea
jae
bt
push
xor
push
pushf
lea
call
jmp
jecxz
shl
pop
inc
add
insl
push
jae
pop
cmp
lods
xchg
cmc
insl
jne
adcl
mov
pop
repnz
cs
mov
or
cmpsb
inc
sub
adc
jmp
inc
lods
sub
xchg
cmc
insb
cmp
in
lock
mov
insb
adc
lea
mov
cmp
mov
cmp
lea
lds
fldcw
sbb
dec
cmp
imul
and
or
fwait
jp
or
and
pushl
xor
rcl
add
int
lcall
test
or
pushf
test
cmp
pushl
push
pushf
call
stos
ljmp
cmp
adc
pop
fadd
or
mov
push
mov
stos
pop
or
scas
stc
fnstsw
sbb
mov
jae
scas
sub
repnz
lret
dec
mov
pop
cmp
jmp
jmp
in
xor
jo
mov
das
repnz
mov
xor
pusha
xor
lcall
testb
pop
push
shrl
jg
lahf
test
scas
jg
movsb
sbb
icebp
mov
jbe
sbb
dec
or
test
fmuls
adc
neg
mov
pushf
mov
cmp
movb
lea
jbe
clc
bt
shl
mov
sub
shl
add
bt
movzbw
mov
add
push
dec
neg
add
cmp
btc
bsf
movl
clc
sar
mov
pushf
cmp
pushf
lea
jbe
inc
sub
sar
mov
or
test
mov
call
pushf
jmp
pop
imul
ss
cmp
sbb
mov
cld
adc
arpl
mov
push
or
mov
repz
icebp
mov
push
cmp
and
mov
and
xchg
fs
into
insl
mov
xor
jp
push
lret
push
mov
mov
sahf
adc
push
mov
and
sahf
push
xor
cmp
aaa
mov
fwait
sub
movsl
xor
jg
loop
aaa
sbb
mov
push
cltd
out
imul
pop
jle
fmuls
test
ret
jmp
sub
and
andl
jbe
cmc
push
jnp
dec
inc
test
mov
repnz
dec
jle
or
sub
mov
or
clc
and
in
dec
lret
inc
bound
enter
push
bound
daa
sub
and
xor
lods
mov
and
sar
xor
por
or
mov
mov
pop
les
sahf
les
popa
jno
dec
sub
shrb
arpl
ljmp
dec
in
rcr
sbb
in
mov
fwait
mov
jb
out
fsubr
outsl
cs
test
stos
pop
xchg
and
add
cmp
push
cmp
insb
ret
fs
mov
sahf
push
fnsave
scas
jo
dec
lret
int3
outsl
xchg
bound
sub
mov
in
ret
xchg
jo
imul
mov
xor
fnstenv
xorl
add
lcall
xor
push
xchg
mov
pushf
lea
jle
call
xlat
and
decb
or
sub
gs
fucomi
push
push
or
lods
inc
sbb
bound
arpl
ficomps
fstl
aam
add
and
mov
push
xchg
mov
out
sbbb
mov
in
ret
xchg
fldt
sar
push
add
pushf
lea
jmp
sub
xadd
bt
bts
mov
clc
mov
jmp
pop
insl
in
mov
ja,pn
xchg
js
iret
xor
sbb
jnp
xor
xchg
push
repnz
or
xchg
mov
mov
add
xor
ret
sbb
lds
or
sbb
cmpsb
add
shl
sbb
adc
aas
sub
das
out
jae
aam
dec
lods
cmpb
cmp
fs
push
ds
pop
mov
cmp
imul
into
mov
test
ss
orb
xor
insb
add
ss
in
xchg
sbb
xor
jae
loopne
adc
lahf
push
scas
pop
aam
call
mov
cmp
mov
outsb
sbb
adcb
sub
mov
and
and
es
scas
loope
popa
mov
lock
lds
fnstenv
xor
add
or
xchg
or
jmp
lea
je
mov
mov
lea
push
movzbw
cwtl
lea
jmp
mov
lea
je
call
inc
movsl
add
add
adc
cmp
sarl
adc
das
push
cmpsl
lock
xchg
nop
add
cmp
and
adc
movsl
pop
push
js
pop
dec
leave
daa
addr16
rcll
call
scas
iret
pusha
ja
add
fisubl
push
mov
aaa
mov
add
imul
sub
leavew
xchg
push
stos
or
ret
divb
scas
cmp
sub
enter
repz
mov
mov
push
add
repz
dec
aad
cli
mov
mov
sarl
mov
leave
sub
ret
or
pop
lret
xchg
adcl
cmpb
or
jle
int3
imul
mov
xchg
pop
aas
andb
loop
out
mov
insl
popa
lods
je
sub
inc
and
out
push
mov
cmp
outsb
xor
xor
jne
mull
inc
sbb
test
in
outsl
push
jecxz
xchg
daa
jo
mov
fnstenv
and
mov
pushf
jl
dec
mov
mov
cmpsb
push
insb
xor
cs
insb
add
test
add
lahf
lea
call
pop
adc
inc
sar
cmp
data16
movsb
sbb
andl
lcall
lret
das
xacquire
into
nop
hlt
lcall
mov
lcall
mov
std
jnp
test
and
shlb
lock
rorb
mov
cwtl
sbb
mov
inc
popa
lds
fidivrs
inc
xor
jl
lock
stos
movsb
ss
fistps
xchg
je
or
lods
repz
mov
mov
enter
and
jmp
popa
lods
dec
lret
push
icebp
jns
les
sbb
add
push
sbbb
xor
in
sub
pop
cwtl
inc
in
aaa
pushf
insl
outsb
inc
fcmovbe
xchg
jns
shlb
jb
sub
jo
mov
out
sub
lods
mov
adc
push
push
mov
xchg
mov
dec
mov
das
add
push
mov
mov
mov
cmp
jns
ret
add
mov
mov
mov
int
jg
pop
mov
out
push
push
cld
cmpsl
test
add
push
pop
sub
les
push
es
cmc
mov
pop
xchg
test
push
js
outsb
sbb
inc
cmp
lahf
push
xor
nop
add
add
mov
arpl
decl
cmp
shll
movsb
inc
test
jo
outsb
aaa
out
mov
adc
mov
mov
push
cmpsl
add
add
mov
add
bound
sbb
arpl
inc
aam
add
add
add
stc
iret
jb
jg
jl
push
inc
mov
out
lock
push
cmp
loopne
in
cld
movsl
dec
pusha
pop
sar
cmp
or
cld
sbb
mov
sub
test
pop
popf
test
or
es
fdiv
nop
xor
mov
cltd
sbb
push
pop
fcompl
inc
icebp
test
sub
insl
sub
call
add
and
xorl
test
mov
pop
cmp
aam
jl
xchg
push
mov
fisubs
into
cld
pop
xor
mov
jmp
xchg
flds
test
mov
stos
or
pop
rcr
mov
cmp
push
add
add
or
repz
popf
xchg
ja
and
jl
jl
adc
aas
mov
pop
dec
mov
add
add
lret
or
scas
mov
mov
sarl
lret
popl
leave
js
pop
sbb
and
stos
jg
test
fldcw
test
or
adc
mov
imul
pop
rep
hlt
insl
or
pop
fwait
sti
dec
push
pop
xor
adc
mov
mov
pop
sub
testl
mov
pusha
jmp
pusha
mov
cs
xlat
popa
mov
loope
insl
pop
mov
cmpsl
inc
cli
and
ja
xchg
sbb
cmp
or
or
fiadds
fucomip
lods
das
xchg
add
lcall
and
jecxz
test
push
dec
adc
mov
push
movsb
xchg
dec
sub
enter
mov
mov
push
adc
sbb
inc
incb
mov
loope
cs
fisubl
sahf
add
mov
mov
movsb
mov
aas
popa
or
mov
stos
dec
mov
mov
fs
jb
bt
cmp
cmpb
pusha
push
pusha
lea
jne
shrd
jmp
mov
pusha
movb
pushf
pushl
lea
jmp
mov
jns
sub
sub
mov
loop
and
in
xchg
jg
testb
scas
ds
and
jmp
mov
mov
mov
jecxz
in
lahf
sub
imul
popf
dec
fsub
add
data16
mov
xchg
lods
insl
add
test
lret
mov
jl
outsl
xorl
jae
sahf
adc
mov
mov
and
xor
xor
cmp
push
shlb
das
mov
mov
aam
in
inc
fsubs
push
in
mov
lahf
or
inc
push
outsl
pop
push
cli
aam
fs
dec
enter
mov
sbb
mov
adc
dec
and
jmp
jae
repz
pop
jb
mov
lea
cmpsl
sahf
in
sarb
cld
test
cmp
cld
bound
push
aas
sub
in
jbe
jno
mov
xor
outsb
popf
cmp
rclb
call
sub
dec
sarb
cmpsb
dec
movsl
imul
xchg
out
into
mov
mov
fs
je
push
pushf
call
lea
je
neg
add
shr
mov
stc
clc
jmp
lahf
lea
pusha
sub
shld
push
call
pushf
pushf
stos
pushf
pusha
lea
jmp
pusha
clc
repnz
pushl
call
jae
cmp
scas
cmp
xchg
sbb
xchg
cmc
pop
push
cmp
xor
mov
scas
xchg
enter
xchg
and
adc
loop
inc
adcb
into
jbe
xchg
push
outsl
rorl
loop
fnstcw
fs
jb
pusha
call
pushl
pushf
jmp
mov
ret
mov
inc
jle
add
mov
into
mov
inc
pop
mov
insb
pop
aaa
mov
lods
fimull
insb
cltd
icebp
mov
jl
mov
ja
into
in
jbe
iret
dec
pop
sub
aad
sub
bound
sub
mov
lcall
cmpsl
inc
lods
lret
es
cmp
xor
inc
movsb
outsl
mov
mov
mov
or
movl
mov
pusha
movl
movb
push
pushl
mov
lea
jmp
movzbw
mov
xchg
pusha
bswap
mov
mov
not
pushf
pushf
mov
call
hlt
cmp
loop
insl
ror
and
rcl
mov
fsubs
xchg
cmp
sub
in
mov
pop
mov
pop
aaa
lods
out
mov
push
xchg
inc
enter
in
int
in
pop
sub
rorl
dec
popa
in
jb
dec
rcrb
push
xchg
roll
in
mov
push
jns
std
cmp
cmp
jecxz
cli
mov
hlt
pop
and
loop
cmpsb
js
enter
jbe
sbb
add
sub
aas
std
mov
mov
inc
and
pushf
push
mov
movl
pushl
ret
cmp
cmp
cmp
pushf
pushl
lea
ja
pusha
shr
add
sub
inc
sar
stc
bts
add
add
inc
cmp
setnp
mov
shr
sar
rcr
mov
clc
push
repnz
mov
movb
lea
jne
sete
not
sete
not
movb
push
mov
call
inc
movb
mov
lea
jmp
movsb
cltd
popa
xorl
or
and
cmpsl
sbb
jp
or
xor
sti
roll
xchg
repnz
mull
iret
gs
scas
loope
rcl
xchg
sbb
pusha
xchg
xchg
pop
jb
jmp
xor
mov
sbb
jb
cwtl
lea
insb
ret
repz
xor
mov
stos
outsl
xlat
push
addr16
fnstcw
fs
jne
jmp
push
imul
call
jmp
adc
aam
pop
push
sbb
dec
mov
pop
inc
sub
mov
aaa
xor
adc
mov
xor
adc
inc
rorl
icebp
xor
sub
jmp
in
decb
test
and
mov
mov
loopne
insl
lea
iret
jbe
add
sub
cmc
or
in
jp
adc
push
xchg
mov
cld
cmpsl
lret
out
mov
jl
sbb
mov
pop
mov
jbe
sbb
mov
popa
mov
rorl
lahf
mov
mov
fs
jae
cmc
call
int3
popf
pushf
mov
movl
call
jns
scas
push
out
mov
inc
mov
int3
inc
inc
movsb
in
mov
push
xor
xor
leave
push
push
inc
mov
int
cwtl
add
mov
add
pop
jp
and
notl
sarl
xor
xlat
and
std
pop
push
cli
outsl
shll
push
mov
mov
mov
mov
cmp
and
call
fwait
mov
into
or
mov
int
loop
pop
push
loope
xchg
mov
inc
pop
sbb
leave
loopne
sti
popf
mov
add
popf
and
mov
aad
outsl
lods
pop
sub
mov
sub
push
mov
nop
add
or
ja
dec
clc
and
or
xor
aam
push
adc
loope
leave
and
xchg
loop
das
jmp
mov
adc
mov
fiadds
aaa
mov
cmp
pop
inc
push
pop
bound
imul
daa
loopne
pop
mov
std
shll
pop
add
mov
mov
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
iret
loopne
push
pushl
mov
lea
jmp
inc
jae
adc
nop
dec
pop
dec
lods
stos
or
sbb
aas
mov
mov
sbb
outsb
jmp
adc
jle
sahf
push
dec
push
mov
gs
mov
iret
xlat
jle
sbb
jge
and
dec
add
sbb
xchg
dec
or
cmpsl
jnp
loop
xlat
mov
pusha
sub
xor
dec
lods
inc
cmp
mov
push
cli
jle
mov
into
sub
push
xchg
insl
xor
mov
mov
xor
jmp
or
dec
sub
pop
pop
jp
jle
xor
push
imul
fidivrl
add
adc
subb
jmp
pop
inc
add
lret
lea
sbb
sub
rorb
mov
dec
inc
scas
into
mov
xchg
inc
scas
adc
pop
cmp
mov
gs
push
jle
iret
loope
stos
dec
js
adc
jecxz
mov
push
push
push
roll
jns
add
push
xchg
or
xchg
test
jae
mov
dec
sub
mov
xor
push
fmulp
cmp
repz
lcall
test
stos
outsb
rcrb
mov
mov
adc
mov
cltd
jbe
fidivrl
lods
adc
fcmovu
clc
int3
mov
pop
cmc
push
popa
test
cmp
stos
adc
data16
jmp
lcall
dec
out
fbld
cmp
pop
sub
xor
adc
std
cmpl
sbb
and
les
stos
outsl
stc
pop
shrl
add
addr16
loopne
insb
sub
pop
es
jns
fldenv
inc
xor
pop
or
mov
jmp
mov
xchg
outsl
lods
mov
nop
insl
push
mov
stos
fsubr
ja
push
stos
nop
repz
loop
cmpsl
std
mov
jno
and
xchg
in
insl
xor
loope
outsb
add
xchg
and
inc
xor
cmp
adc
pop
rorl
xchg
dec
inc
outsl
cmp
pop
sbb
inc
adcl
ljmp
movsb
pushf
pushl
dec
pushl
shr
jmp
mull
ja
sub
cmp
mov
inc
cmpsb
jo
and
decb
xchg
cmpsl
xchg
scas
into
imul
xchg
pop
xor
inc
inc
pop
mov
sub
shll
je
mov
test
lcall
xor
xchg
push
xor
mov
and
les
jmp
or
xchg
fistpl
mov
mov
or
xchg
jmp
pop
pop
out
int3
inc
mov
adc
dec
push
jp
popf
cmc
mov
lea
sbb
in
mov
inc
jg
xchg
jo
mov
test
xchg
test
pop
je
jge
xor
inc
lret
xchg
imul
jno
mov
lods
loopne
jne
sub
push
mov
repnz
mov
fstps
mov
sub
sar
inc
iret
notl
and
mov
mov
mov
cmpsl
out
sub
lods
ja
mov
mov
out
and
outsb
rcl
mov
movsl
nop
jne
dec
mov
loope
out
xchg
add
xchg
jmp
fiadds
in
pop
push
mov
mov
mov
call
lahf
mov
popf
jle
xor
dec
sarb
mov
lods
scas
or
or
mov
mov
loop
ret
mov
js
sti
push
inc
push
in
scas
push
pop
out
mov
or
jp
sbb
dec
mov
mov
dec
lret
addb
out
lret
ret
aaa
xor
adc
loopne
aaa
push
aas
xchg
js
jmp
adc
arpl
cli
inc
outsl
adc
mov
fs
cltd
mov
inc
mov
push
shlb
mul
addr16
inc
push
sbb
dec
sbb
mov
pop
arpl
lock
pop
adcb
enter
cmp
xchg
dec
int
hlt
fldl
pop
xchg
cld
dec
out
inc
ficoms
push
sbb
fnstenv
adc
mov
sbb
rcrl
and
scas
xorl
mov
lea
jb
push
mov
mov
not
mov
lea
pushf
pusha
pushf
mov
lea
not
movsbw
call
mov
cmc
rol
btr
mov
jmp
stc
push
aam
cwtl
mov
push
pusha
shl
push
lea
je
call
add
out
lods
sti
xchg
jbe
aas
fisubs
xor
jae
pop
decl
in
xor
loopne
pop
cwtl
stc
loop
xor
movsl
push
mov
cltd
mov
mov
mov
ss
int
test
xchg
adc
or
pop
xchg
mov
sbb
icebp
bound
repz
dec
repz
lods
and
cmpsl
fnsave
aad
jns
add
lahf
ds
movsb
inc
test
out
push
mov
rclb
out
repnz
imul
imul
std
mov
js
movsb
xchg
outsl
arpl
xor
jne
mov
jo
lds
mov
mov
sbb
lret
dec
adc
out
pushf
and
and
jge
inc
push
out
xor
divl
out
xor
psubsb
push
sbb
outsb
stc
jp
inc
cmp
lret
jmp
iret
mov
rcll
bound
xchg
jecxz
insb
inc
pushf
aad
fldenv
lock
push
cmp
mov
xor
dec
lret
adc
cmp
xchg
ljmp
mov
push
fdivrs
or
sbb
cmp
iret
xchg
jne
inc
inc
call
cmpsb
jle
arpl
xchg
das
sbb
dec
adc
fwait
jge
mov
stos
mov
stos
out
fldenv
or
lret
dec
inc
into
imul
jae
fstpt
pop
mov
aaa
xchg
lcall
inc
cltd
and
shlb
test
and
fmul
sbb
jo
sarl
xor
add
xchg
test
lcall
movsb
out
inc
and
test
mov
push
add
int
sahf
push
mov
cmpsl
repnz
rcrl
mov
lock
insl
sbb
addr16
sarl
call
add
fldenv
lea
je
clc
add
rcr
stc
mov
bsf
movzbw
add
btc
sbb
jmp
pushl
lea
je
neg
dec
rcr
movsbw
add
test
mov
bt
stc
add
jmp
sub
call
arpl
dec
mov
in
test
popa
les
mov
jae
shl
lods
leave
hlt
inc
fdiv
xor
dec
adc
popa
add
popf
pop
fistpl
aad
xor
jno
mov
jmp
xlat
out
outsb
stc
jmp
inc
popa
inc
dec
into
pop
dec
les
add
in
jb
inc
fdivrs
stc
test
cwtl
sahf
adc
std
mov
scas
out
cmp
dec
test
shl
pop
jmp
jmp
fidivrs
sbb
jg
call
and
jnp
in
int
mov
mov
inc
repnz
push
negl
out
lock
lock
mov
leave
or
pop
pop
rcrl
add
dec
xor
popa
and
mov
sub
sub
sbb
xchg
jb
into
adc
sbb
movsl
inc
mov
fsts
std
aas
and
dec
sub
fldenv
movsl
orb
add
add
pop
cli
sbb
stos
sbb
inc
mov
hlt
fdivrl
insb
mov
daa
jb
fldt
fcmovnb
and
sbb
stos
jge
ret
imul
jnp
jns
hlt
cmp
out
scas
bound
inc
push
push
jle
push
push
mov
sbb
jg
adc
stos
or
stos
divb
push
mov
cmpsl
pop
jo
inc
shr
ror
add
pushf
xchg
pushl
cmp
mov
neg
mov
test
call
jnp
movsb
fisubrl
mov
push
clc
jb
dec
mov
push
sub
xchg
mov
insb
adc
and
pushf
mov
mov
jo
sub
sbb
pop
xchg
cwtl
shl
push
inc
mov
pop
xchg
dec
pop
bound
bound
cmp
lret
xorl
sahf
pop
mov
pop
adc
orb
mov
inc
dec
mov
test
js
mov
pushf
pushf
lods
push
stc
rol
jmp
jns
pushf
movl
push
pushl
movl
push
mov
lea
jmp
test
pop
adc
adc
hlt
fmulp
xor
inc
pushf
scas
dec
jl
xor
aad
aaa
bound
mov
test
cmpsb
mov
outsl
ja
or
and
xchg
and
hlt
lods
bound
xor
bound
sbb
sub
or
jnp
push
int
les
push
sub
sbb
jl
or
fdivr
jge
mov
cmc
push
dec
int3
xor
cmp
pop
mov
shl
test
movsl
cmp
repnz
pop
flds
iret
adc
and
add
ds
xor
iret
rorb
sbb
pop
jecxz
cmp
int3
repnz
and
sbb
mov
and
push
adc
sub
cltd
sub
pop
sbb
aad
in
jge
xchg
out
sbb
lods
mov
test
jbe
fildll
xlat
pop
aaa
jle
lar
iret
mov
xchg
sti
push
stos
dec
mov
repnz
mov
inc
jb
outsl
jl
imul
ja
lahf
rorb
sahf
into
inc
pop
or
out
xor
ret
mov
sbb
mov
movsl
arpl
xchg
add
js
mov
stos
imul
fs
insb
add
shr
cmp
or
pusha
jmp
add
aas
sbb
add
inc
and
inc
sbb
add
int3
xor
sbb
and
dec
sbb
add
in
sub
and
and
push
sbb
add
sbb
add
and
pop
sbb
add
sub
xor
and
sbb
add
enter
inc
and
outsl
sbb
add
and
inc
inc
and
ja
sub
fdivr
and
dec
inc
and
jg
sub
fdivrl
and
xchg
sub
nop
add
add
add
add
add
add
and
fs
and
xchg
sbb
add
and
insb
inc
and
lahf
sbb
add
in
sub
je
and
add
and
or
rcl
mov
sbb
jmp
les
pop
insl
push
fdivl
and
jns
shlb
pop
add
int3
mov
cmp
inc
mov
pop
jbe
or
jbe
iret
push
jg
fsubs
imul
test
push
cmpsb
and
stc
insb
mov
bound
addr16
sub
fincstp
mov
pop
sbb
fsubs
and
mov
stos
cwtl
jo
outsl
pop
fstpt
shrb
push
jnp
ret
dec
sub
insb
dec
popf
sbbb
popa
nop
test
inc
xchg
sbb
jmp
stos
jae
hlt
xchg
mov
add
es
xor
jno
cmp
pusha
adc
aaa
and
clc
imul
jo
inc
mov
cmpsl
inc
dec
and
in
push
mul
push
dec
mov
incl
dec
jnp
fistpl
mov
mov
outsb
sub
or
movsb
out
inc
cld
pop
es
ss
mov
lods
cmpsl
xchg
arpl
xchg
add
scas
push
cmp
and
mov
mov
ret
imul
sub
shrb
repnz
or
or
add
sbb
and
push
add
mov
add
sarb
sub
mov
fldt
xchg
sahf
jge
push
shlb
lahf
inc
fst
out
sub
dec
xchg
rorb
xchg
stos
outsl
pop
aas
aam
push
mov
sub
push
popf
or
jne
lret
andl
sarl
sbb
xchg
das
push
or
xchg
data16
enter
std
add
sub
push
lcall
mov
mov
xchg
cli
inc
rcrb
push
mov
aaa
je
mov
pop
arpl
mov
dec
mov
orl
mov
daa
insb
call
add
mov
int
out
sub
mov
ljmp
or
mov
add
inc
mov
push
jmp
push
lds
mov
cmp
icebp
mov
and
lds
cmp
popf
test
std
rorl
aam
jmp
cmpsb
lds
sub
mov
lods
sub
cmp
sahf
out
adc
stos
sub
cmpsl
inc
mov
jge
jo
sarb
and
push
pushf
cmc
pop
jne
and
movsb
cmpsb
or
mov
cwtl
in
rcrl
imul
mov
movl
mov
dec
js
cmpsl
inc
repnz
imul
outsb
push
ficomps
adc
adc
cs
or
out
prefetch
or
sub
rorb
scas
jno
inc
cmpsl
cmp
cmp
movsl
mov
xchg
repnz
pop
out
dec
xchg
pop
stos
call
fldcw
xchg
cld
daa
mov
aam
mov
sahf
popf
xchg
insb
jmp
mov
and
mov
dec
xlat
mov
mov
icebp
enter
loop
adc
stos
mov
cs
pop
pop
mov
pop
notb
aaa
mov
dec
enter
jp
mov
adc
jae
jnp
sti
pop
inc
addr16
int
push
or
adc
mov
push
dec
sub
test
pop
loop
call
xchg
push
cmp
mov
scas
inc
mov
cmp
add
push
pusha
lea
jmp
test
add
jmp
stc
cmp
jo
jge
xchg
iret
sub
mov
stc
pusha
repz
mov
fiaddl
lcall
fs
movsb
xchg
cwtl
push
data16
inc
out
fcoml
sahf
into
pusha
mov
mov
mov
scas
push
jmp
in
bound
divb
mov
cmp
push
push
mov
xchg
ret
xchg
stos
insl
bound
cmp
movsb
or
adc
lock
inc
mov
xchg
pop
mov
sti
rclb
push
xor
les
fldcw
addr16
or
lahf
add
imul
mov
imul
xchg
and
add
mov
lcall
sbb
push
out
mov
ss
rorl
inc
mov
scas
loop
in
insl
jns
loope
stos
repnz
inc
xchg
adc
sub
mov
inc
sbb
cmp
aad
jae
sbb
mov
cmp
out
pushf
push
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
popf
sub
repnz
fnstsw
loope
xchg
fsubr
push
gs
shr
adc
push
nop
addr16
pop
push
dec
divl
add
jp
imul
and
fiadds
and
fcoml
or
mov
or
pusha
int3
cmp
loope
jg
jbe
push
jbe
loope
jecxz
lahf
loopne
jg
mov
gs
xchg
push
call
pop
dec
or
stos
aam
ds
inc
and
mov
sub
jmp
pop
xchg
push
out
cs
mov
cwtl
out
out
push
cltd
mov
lcall
incl
mov
sti
movsb
add
loop
cmc
ja
and
insb
fldt
lcall
fists
andb
add
pop
mov
mov
fsubs
push
and
cmp
pop
mov
xchg
pusha
cmpsb
or
mov
imul
inc
dec
test
push
jo
mov
inc
mov
xchg
cmp
dec
les
sub
and
int
and
daa
adc
stos
xor
and
stos
mov
cmp
dec
fwait
sti
iret
andl
push
inc
adc
lock
cli
jbe
sahf
mov
mov
xorb
jb
cli
push
mov
pop
iret
and
sub
adc
insl
jne
je
mov
call
fistps
jl
cmpsb
out
pop
push
mov
xchg
aas
int
pop
ds
sub
and
lret
sub
sti
testb
ja
xchg
push
out
icebp
test
negb
movsb
dec
insl
sarl
adc
jne
and
add
lea
mov
jae
sbb
scas
add
test
in
push
push
test
fidivs
out
push
das
insl
sbb
scas
mov
xchg
cltd
das
mov
fdivs
cwtl
add
bound
adc
sub
push
sbb
inc
aad
test
cltd
xchg
mov
dec
aaa
sahf
mov
or
mov
or
mov
adc
inc
jo
xchg
setnp
dec
jbe
xor
in
aaa
sbb
and
negl
cltd
pop
bound
pop
adc
inc
test
cmp
jecxz
lock
shlb
jnp,pt
fsts
inc
cmpsl
jo
test
xor
add
fistl
stos
aad
xor
push
mov
ret
scas
fidivl
jle
mov
and
push
add
addr16
push
rcrb
xor
mov
or
int
xchg
push
ja
stc
push
aas
pop
xchg
sub
xchg
pop
and
xchg
jae
aas
push
mov
mov
int
or
adc
or
out
das
aam
pop
cmp
dec
adc
mov
xchg
pop
out
pushf
pusha
lea
jne
neg
rol
sbb
mov
pusha
or
pushf
lea
je
movzbw
lea
bswap
jmp
lock
mov
cwtl
adc
iret
mov
imul
push
add
sub
adc
test
sub
cmp
jle
inc
sti
arpl
adc
push
rorl
cs
in
mov
ljmp
scas
stc
insl
mov
cmp
inc
pop
shl
sbb
lret
or
enter
shlb
sahf
push
repnz
aad
pop
jg
push
cmp
push
bound
dec
add
lret
push
int
jb
insl
xor
mov
push
mov
xchg
xlat
lods
out
shll
cmpb
jo
insb
rorl
inc
decb
imul
jb
sub
add
mov
sbb
mov
popf
inc
jl
jg
sub
lahf
sbb
adc
sbb
fisttpl
out
adc
add
int3
movsb
rep
xor
ljmp
mov
mov
push
scas
jno
push
out
xor
lret
mov
fsts
dec
enter
lcall
or
std
pop
fstl
lods
lea
inc
fwait
popa
push
test
cltd
inc
jmp
sub
push
jae
das
dec
pop
ds
inc
test
xor
sub
test
inc
insb
mov
aam
outsl
scas
sbbl
mov
xchg
mov
cmc
pushf
pop
loop
sbb
aas
mov
repnz
xlat
inc
mov
repnz
movsb
xor
test
add
adc
aas
xor
cmp
pusha
xor
test
push
fwait
lret
jnp
xchg
cvtps2pi
inc
add
es
sub
decb
ljmp
xlat
jne
ds
adc
aam
out
inc
sub
jmp
mov
push
ret
or
pusha
nop
mov
shll
imul
repz
hlt
sub
fs
loope
sub
adc
and
das
xchg
fisttps
lods
mov
inc
mov
sub
fcmovne
inc
pop
add
out
imul
or
and
xor
dec
iret
cmp
je
add
xorl
int3
xor
cmp
mov
mov
jae
push
bound
push
idivl
mov
xchg
int
pop
jmp
xchg
outsb
cli
addr16
lret
add
orl
das
lret
xchg
loop
fisubrl
pushf
in
fadds
in
subl
shlb
negl
je
cmpsl
mov
addb
insl
in
mov
xchg
and
icebp
lcall
mov
xchg
mov
cmp
push
rclb
imul
mov
add
out
mov
aas
lock
pusha
ficomps
mov
cmp
xchg
and
fwait
out
lods
or
ds
inc
int
cmc
dec
adc
add
and
or
jmp
mov
xchg
sbb
adc
inc
mov
int
mov
ja
pop
mov
loope
jnp
lahf
test
cmpsb
push
pop
outsb
cmp
push
out
xlat
xor
pop
movsb
push
mov
lret
sbb
movsl
icebp
cmp
dec
stos
ljmp
mulps
xor
or
insb
pop
fcmovbe
mov
add
add
xor
adc
imul
or
and
xchg
push
push
jl
aaa
mov
loop
loopne
lret
dec
push
rcrl
fldenv
cltd
sbb
aaa
xchg
fdivl
and
mov
in
scas
pusha
enter
cltd
ret
repz
and
test
and
rorb
shl
icebp
mov
inc
pop
fscale
push
xchg
xor
jmp
test
or
sti
cmp
cltd
jmp
adc
fstps
dec
dec
dec
dec
cs
insb
add
cwtl
ret
cmpl
xor
dec
mov
or
cmp
pop
addr16
jge
or
jmp
addr16
mov
fs
je
mov
int3
or
mov
sbb
mov
daa
jbe
sbb
out
lahf
mov
and
das
push
inc
je,pn
loope
inc
or
xor
and
insl
or
mov
out
rcrb
and
scas
hlt
mov
or
sbb
rolb
js
lock
data16
sub
icebp
cmp
int
and
imulb
pop
lds
pushf
pop
movsl
mov
xor
pushf
cwtl
mov
xor
out
xchg
inc
jae
or
jp
clc
lcall
bound
cwtl
push
shrl
xchg
push
dec
cmpsl
xchg
aas
pop
sbb
jle,pn
adc
mov
mov
dec
mov
cli
sbb
gs
shlb
std
fbld
xlat
jo
arpl
fstl
xorb
lods
xor
fistpll
fsubrl
jbe
mov
outsb
pop
in
xchg
inc
or
adc
sti
fcomps
jp
mov
loopne
out
jge
rcrb
sub
cli
popa
and
mov
cltd
lret
add
push
jmp
call
lea
call
jmp
push
stos
and
popf
pop
ds
or
je
inc
pop
sub
jnp
fiaddl
mov
xchg
adc
insl
jns
aaa
stc
xor
loop
call
pop
or
push
dec
xchg
in
push
gs
gs
rorb
and
cmp
mov
dec
lcall
and
xchg
insb
sub
inc
out
push
mov
in
xchg
call
jl
std
mov
test
dec
xor
mov
ret
cmp
mov
lcall
xor
test
or
push
stc
pushl
sub
pusha
clc
cmp
lea
pushf
lea
ja
jmp
cltd
xlat
sar
or
int3
inc
cmp
lcall
shrb
scas
mov
cmp
mov
lahf
mov
lods
or
xor
push
lcall
bound
addb
loope
aad
in
pop
aas
inc
rorl
sub
mov
std
lret
lahf
and
inc
mov
scas
cmp
or
iret
mov
sbb
lea
test
pusha
mov
mov
lcall
xor
divb
jo
ret
mov
pop
ret
aam
adc
mov
jmp
mov
movsl
push
jno
mov
mov
inc
sub
pop
ja
push
sbb
jo
mov
movsb
js
mov
sbb
jp
fstpl
sub
push
movsb
xchg
mov
mov
insb
mov
bound
push
xor
movsl
arpl
dec
into
test
outsl
scas
push
loopne
insl
sbb
mov
fwait
cmp
pop
mov
inc
in
les
das
testb
int
aas
cwtl
lcall
dec
lahf
leave
es
push
lock
xor
pop
and
dec
div
sub
sub
add
orl
cmc
push
pop
adc
add
mov
mov
push
lret
jge
ret
mov
push
ret
cmp
mov
stos
out
mov
inc
dec
jmp
lods
mov
aaa
shlb
inc
sbb
xchg
push
mov
dec
mov
mov
pushf
mov
in
int3
mov
mov
dec
xor
cmp
mov
inc
loope
shlb
mov
dec
adc
lcall
sti
insl
pop
xchg
rorb
sub
pop
out
addr16
sub
insb
mov
and
dec
rcll
fdivrl
pop
stc
mov
rcll
cmpsl
xor
push
clc
inc
mov
call
jp
push
mov
gs
stc
dec
xchg
lock
inc
movsl
dec
adcl
or
addb
xchg
pushf
movsl
mov
xor
icebp
jns
mov
je
inc
repnz
jg
shll
in
sbb
mov
rcrb
loop
jne
add
xor
push
fdivl
mov
or
cmpsl
inc
and
je
ljmp
jbe
in
mov
in
pusha
inc
popf
test
xchg
js
loope
cmp
or
mov
cmp
jl
jne
jmp
fstps
push
cmp
xchg
stos
and
jmp
popa
sbb
xchg
testl
dec
cs
inc
test
scas
adc
enter
rorl
or
cmp
mov
mov
popf
cmp
lret
movb
mov
lea
jmp
cmp
cwtl
aaa
cltd
jnp
aas
enter
sub
jmp
cmp
cs
lods
mov
xchg
lods
jle
aas
call
xchg
lock
mov
dec
jb
orl
fists
mov
push
adc
xchg
push
out
xchg
or
cmpsb
xchg
push
loope
push
or
aam
mov
jle
cmp
lret
cmpsb
cmp
aas
mov
add
push
ja
sbb
mov
dec
aad
in
xor
adc
leave
adc
fs
out
repz
cmpl
std
pop
sbb
dec
mov
dec
por
shlb
inc
inc
push
inc
push
dec
xor
cs
insb
add
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sub
pushf
jge
push
or
imul
adc
jo
push
fdivrs
mov
push
out
sub
imul
cmpl
ja
lret
js
data16
pop
jmp
and
dec
mov
jo
dec
lds
xchg
dec
cmc
js
or
fistps
outsb
inc
ret
test
add
pop
shlb
jmp
out
pop
fiadds
subl
mov
aam
pop
push
adc
add
lahf
repz
xchg
scas
mov
shlb
daa
sub
jl
je
mov
dec
push
call
dec
jge
aam
cli
loopne
push
sbb
out
adc
push
das
adc
mov
dec
lret
push
jns
mov
cltd
jge
scas
inc
ja
xchg
popa
mov
push
sbb
cwtl
cmp
leave
jmp
pop
mov
out
outsl
scas
aas
outsl
mov
mov
pop
mov
nop
shrb
cmpsl
in
jb
and
cwtl
addl
mov
jl
add
out
fstps
aad
cmp
cmpb
cmc
sbb
imul
int3
out
loope
outsb
and
mov
enter
stos
add
outsb
push
and
mov
cmpsb
imul
cwtl
ret
fxch
sbb
rcrb
mov
sbb
rolb
fdivrs
cltd
dec
insb
mov
inc
ss
mov
mov
mov
fs
outsl
mov
xchg
dec
mov
jns
mov
pop
mov
testl
out
and
add
ficomps
stos
pop
mov
jmp
daa
and
sbb
jmp
jl
pushf
lcall
fidivs
cmp
flds
and
or
cmp
sub
pusha
push
pushl
pushf
lea
jne
pushf
lea
call
push
pushf
pusha
lea
jmp
and
mov
mov
shll
mov
sbb
icebp
into
dec
das
in
fildl
cmp
hlt
pop
loop
pop
and
cmp
mov
pop
in
fnstcw
in
mov
lods
inc
jno
mov
movsl
and
mov
xor
shlb
cld
mov
mov
mov
mov
dec
movsb
scas
lahf
pop
fdivl
idivb
mov
in
dec
or
ss
push
jmp
adc
and
sbb
pusha
mov
push
pushf
lea
jmp
push
cwtl
xorb
mov
lcall
xchg
push
jae
and
and
je
and
cmp
and
jmp
xchg
lods
loopne
push
pop
mov
sarb
cmp
int3
scas
icebp
cmpsb
push
xlat
xor
add
mov
jecxz
or
xchg
fisubrs
fwait
add
mov
loopne
in
jle
cs
sbb
bound
fisttps
dec
and
imul
push
incb
adc
gs
xor
test
outsl
or
mov
sub
jge
jmp
mov
leave
aad
lods
push
fs
add
cmpsl
push
push
sti
mov
scas
loope
mov
xchg
es
mov
and
push
xchg
std
in
scas
push
cltd
jmp
or
mov
lret
and
push
adc
xchg
jge
mov
aaa
xorl
dec
lods
mov
flds
hlt
jge
inc
les
imul
cpuid
inc
call
or
lahf
inc
xchg
sbb
inc
jle
xchg
add
jmp
cmp
jmp
in
mov
sub
push
and
cltd
inc
push
mov
cmpl
jg
aaa
and
adc
jg
flds
dec
inc
addr16
mov
ja
pop
push
test
ljmp
push
lcall
cltd
adc
pushf
mov
mov
pop
pop
jle
cmpsl
test
dec
dec
push
inc
mov
adc
or
fmuls
gs
mov
mov
sub
add
dec
test
ret
mov
xor
flds
or
cs
pushf
push
and
into
dec
ss
or
lock
movsl
xchg
inc
fsts
adc
ss
lock
hlt
adc
imul
add
xor
aaa
repnz
cmp
cld
sahf
fmuls
frstor
jmp
push
loop
push
jae
std
sbb
jg
pop
cs
or
sti
push
mov
jmp
mov
movsb
arpl
jbe
mov
popf
inc
adc
flds
fs
jae
shld
test
mov
btr
ror
movzbw
mov
call
add
pusha
pusha
movb
lea
jmp
add
clc
int3
push
mov
pushf
push
out
inc
into
scas
cltd
push
jne
or
or
add
negl
je
loop
outsl
pop
fs
pop
mov
xchg
pop
inc
xchg
fnstenv
insl
jbe
fadds
mov
xlat
nop
outsb
mov
repz
test
inc
push
lea
jne
call
lea
ja
push
lea
jb
cmc
cmp
cmpb
pusha
jmp
xlat
and
xor
add
scas
mov
push
stc
push
loope
scas
cmpsl
cmpsl
xchg
cmpsl
sti
xchg
cmp
mov
and
jbe
aam
xor
jecxz
jecxz
push
rol
fistl
std
inc
mov
lds
mov
mov
arpl
sbb
movsb
pop
pop
push
lcall
add
add
and
je
adc
sbb
daa
negl
pusha
movsb
testb
rcll
pop
cmp
dec
xlat
mov
test
in
push
inc
push
mov
adc
dec
xor
adc
push
fldenv
aaa
push
neg
add
aas
sti
jo
call
cmp
out
sbb
lret
push
inc
jno
jnp
mov
cltd
mov
sub
lods
sbb
push
push
loopne
push
jecxz
mov
test
mov
push
mov
ja
inc
loop
rol
push
mov
int3
mov
daa
cmp
add
cld
cs
clc
pop
xchg
sbb
lods
jbe
sbb
dec
in
popl
xchg
mov
xchg
adc
add
lock
and
pop
aas
hlt
ja
pop
add
inc
leave
fwait
or
fwait
icebp
pop
push
cltd
jp
jne
jg
xor
popf
pop
cmp
xlat
sbb
sub
outsb
into
pushf
mov
push
inc
test
mov
jo
push
mov
cmp
insb
and
repz
daa
inc
jno
lahf
add
rclb
cs
scas
push
and
adc
divl
scas
lahf
and
in
rol
jae
pusha
sub
sub
cmc
popa
stos
mov
out
icebp
pop
stc
cmp
shll
mov
xchg
inc
sbb
stc
movsb
add
mov
call
mov
pop
mov
bswap
push
mov
setnp
movzbw
movzbw
mov
mov
mov
mov
pusha
pop
jmp
gs
mov
lds
shlb
pop
aam
cmpsl
das
push
aas
xchg
xor
dec
add
cmpl
pop
and
addr16
lods
add
mov
es
mov
sub
addr16
outsb
int
addr16
je
add
pusha
sub
out
jne
addr16
shll
jmp
pop
ficomps
pop
pop
popa
xor
mov
cmp
dec
mov
xchg
test
add
push
sar
test
inc
call
jg
aad
xor
shll
mov
mov
mov
insl
xchg
mov
jg
fistl
out
inc
cmpsb
in
ja
insb
fldt
into
add
xor
add
push
adc
push
out
popa
fwait
aam
xchg
sub
push
lret
scas
cmp
aad
mov
cmpsb
int3
aaa
jmp
push
enter
jb
push
call
in
lret
mov
scas
cmp
stos
data16
es
inc
fwait
aad
add
fwait
in
enter
xor
rcll
flds
shr
add
bswap
push
mov
lea
pusha
call
pushl
popl
pusha
pushf
pushl
ret
mov
fistpl
jecxz
jne
orb
xchg
hlt
jb
inc
inc
lock
test
cmp
movsb
cli
in
cmp
mov
cltd
sbb
xchg
lock
je
test
mov
push
dec
movsb
daa
rorb
stos
push
daa
jb
inc
pop
adc
lea
mov
int
je
mov
subl
cmpsb
pop
icebp
rcrl
call
pusha
outsb
ljmp
clc
xchg
data16
enter
and
mov
enter
aaa
mov
mov
xchg
cmp
orb
test
out
mov
mov
cli
test
les
lret
jb
push
pop
daa
pop
or
sar
rcll
pusha
ror
sbb
ret
dec
cmp
jns
sbbl
popa
jl
sbb
nop
sbb
jle
dec
shrl
cmp
mov
xchg
data16
lds
nop
push
lcall
inc
cli
iret
outsb
xor
insb
xchg
cmpsb
adc
outsl
je
fs
fwait
sbb
in
sbb
inc
push
bound
lahf
testl
push
jne
das
insl
imul
mov
inc
cmp
fidivl
es
std
mov
adcb
pop
cmc
sub
push
shll
lods
and
test
pop
sbb
push
movsb
push
sbb
jecxz
adc
test
test
xor
pop
pop
sbb
cmp
pop
jecxz
push
mov
mov
rol
add
cwtl
mov
mov
pushf
lea
call
push
pushf
mov
pusha
pusha
pushf
push
lea
jmp
clc
call
cmp
cmc
pushf
or
mov
mov
push
pusha
lea
je
push
cmp
lea
pusha
jmp
cmp
add
bt
add
movb
jmp
add
add
btc
mov
btr
push
or
cmc
pushf
lea
add
cmp
bt
sub
aad
push
stc
inc
shl
cwtl
push
movsbw
movsbw
neg
push
shrd
movsbw
bt
cwtl
sub
push
mov
mov
lea
mov
mov
pusha
pushf
movb
call
inc
jb
mov
ss
sbb
out
aaa
cltd
adc
jle
xchg
icebp
xchg
inc
xchg
inc
xchg
and
aad
std
popa
test
cs
in
ds
pop
bound
add
pop
outsb
test
pushf
fidivs
add
frstor
aaa
mov
or
push
or
sbb
cmp
movsl
xchg
std
mov
insb
xchg
call
popa
sub
mov
test
daa
repnz
mov
mov
loopne
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
mov
add
jle
into
enter
dec
and
push
xor
cltd
mov
repnz
dec
mov
outsl
out
cmp
fistps
push
lcall
cmp
pop
js
leave
inc
cld
dec
call
fwait
adc
jmp
scas
fdivs
dec
sahf
inc
mov
sub
in
ljmp
xchg
and
adc
dec
enter
or
add
bnd
xchg
pop
add
divb
mov
sub
jne
mov
add
je
out
inc
sub
sti
and
push
xchg
mov
xchg
mov
fsubs
call
outsb
sub
aam
mov
mov
xchg
test
rcrl
push
sbb
insb
push
cmp
shll
mov
repz
mov
mov
mov
aam
jnp
sub
les
cmpsl
test
or
add
xor
in
jns
fldcw
add
and
pusha
mov
push
jo
stos
sub
lcall
inc
aad
mov
clc
xor
lcall
push
mov
add
hlt
xor
xchg
push
bound
mov
insb
sarl
cwtl
push
inc
sahf
xor
repnz
xor
cmpsl
jne
sub
sub
xchg
sub
divb
pop
outsb
test
push
cmpsb
sbb
out
sub
mov
adc
push
jg
movsb
push
lock
gs
idivl
mov
push
imul
xchg
push
sub
add
sbb
mov
les
pop
dec
nop
push
outsl
mov
lea
mov
and
push
shrb
mov
mov
mov
push
cmp
cmp
dec
fisubrs
cmp
in
sub
fmuls
add
and
jle
cmp
mov
lcall
sbb
fnstsw
push
pushf
adc
and
xchg
rclb
scas
and
push
dec
add
unpckhps
push
adc
sub
lea
or
xor
pop
sbb
dec
mov
jl
adc
in
insb
xor
cs
insb
add
fldcw
aad
mov
inc
enter
fdivrl
cmp
or
dec
mov
xchg
inc
add
lods
mov
xchg
out
cmp
fisubrl
mov
mov
lahf
add
adc
repnz
pop
push
shlb
pop
inc
int
fisttpll
cmpsb
push
add
inc
scas
dec
mov
or
pop
and
sub
cmp
test
adc
dec
fsubrs
test
cmp
xchg
out
xchg
in
jne
dec
adc
testl
inc
adc
dec
addr16
inc
lods
sub
pop
fdivr
dec
popf
bound
cmc
xor
pop
lahf
fidivs
jnp
daa
and
pop
test
ret
jg
rcl
and
inc
mov
aad
rorb
loope
imul
or
mov
aaa
xchg
scas
cmp
dec
aad
sahf
mov
sbbb
jne
dec
lret
xchg
jb
adc
add
dec
xor
and
mov
movsb
adc
dec
cmp
pop
scas
loop
push
bound
sbb
fwait
in
lods
dec
cmp
cwtl
xchg
mov
mov
lahf
pusha
xor
lcall
xchg
ss
ret
mov
push
mov
mov
ja
fnstenv
cmp
pushf
cmp
jb
jnp
mov
ja
cwtl
sub
gs
sub
dec
test
stos
outsb
sub
fidivs
cmp
ficoms
cmp
xchg
insl
or
lcall
push
jns
aaa
int
pop
or
mov
lcall
push
push
mov
out
push
mov
xor
push
aaa
jecxz
enter
adc
int3
mov
adc
dec
popa
xlat
sub
cmpsw
or
xchg
jmp
or
lahf
loopne
mov
or
push
xor
inc
out
dec
bound
or
xchg
gs
mov
aaa
repnz
mov
js
dec
lods
jmp
jb
incb
fnstsw
sbb
mov
and
add
sbb
shll
add
loop
mov
sbb
rclb
mov
outsl
lds
rclb
and
inc
mov
lahf
jp
pusha
ja
jae
push
lods
xor
push
inc
lods
imul
jo
push
out
or
fistpl
icebp
inc
lcall
cmp
fadd
sbb
jnp
dec
jge
dec
mov
leave
lret
test
cmp
push
mov
pop
mov
leave
or
push
jge
mov
dec
cs
int
or
pop
mov
add
or
ret
push
into
test
sbb
hlt
adc
in
pop
xchg
pop
movsb
rclb
call
xor
mov
lds
add
pop
leave
sbb
dec
in
cs
out
jb
imul
sbb
inc
add
fyl2x
jae
add
xor
push
movw
pushf
pushl
ret
lea
jne
btc
and
jmp
adc
pusha
lea
jae
call
mov
sarl
and
mov
out
sbb
int
fisubs
push
shr
dec
addb
cmc
rdtsc
ficompl
cmpsl
fnstsw
scas
ja
sbb
lret
add
daa
into
pusha
mov
insb
sub
std
and
adc
adcb
mov
jg
cmp
out
inc
in
ds
insb
sub
cld
cmp
adc
push
xor
sbb
push
int
aas
mov
cld
cmp
and
in
pop
iret
out
filds
cwtl
xchg
out
add
movsb
imul
rolb
push
dec
cmp
mov
adc
lock
cmp
popa
pop
jmp
imul
shrb
cwtl
pop
jg
adc
repz
test
stos
or
insb
mov
push
and
int
jg
add
add
mov
repnz
pop
mov
sbb
xchg
mov
ret
push
or
jecxz
xchg
jmp
push
mov
adc
aas
lahf
cmp
out
insb
xlat
ljmp
movsb
cmp
xchg
push
push
loope
xchg
push
push
das
test
xlat
push
mov
cli
cli
adc
dec
xchg
xchg
mov
es
mov
loopne
dec
pop
test
push
jnp
into
hlt
stos
mov
dec
shll
fdivr
sbb
push
aad
in
daa
test
inc
test
cmp
xor
iret
mov
inc
test
add
sub
add
add
je
add
or
add
jmp
add
add
add
ret
and
add
add
cli
in
and
add
add
aad
xor
add
add
dec
stos
sub
add
add
mov
add
add
ret
and
add
add
inc
pop
das
add
add
add
push
and
pop
fldt
add
out
add
jae
add
sub
add
add
add
jo
pushf
pushf
push
lea
call
pushf
call
pusha
mov
jae
push
bswap
mov
pushf
pushl
ret
and
cmp
loope
pop
xchg
sbb
ss
lds
mov
mov
outsl
or
sbb
ror
ljmp
inc
in
xor
sbb
scas
mov
push
insl
in
push
xchg
push
dec
or
stos
int3
push
out
sbb
xor
popa
dec
dec
popa
sbb
mov
lds
mov
ret
int3
out
aaa
pop
test
mov
sbb
sbb
loopne
adc
loopne
fistps
xor
sub
call
imul
fistpl
mov
hlt
add
mov
pusha
cmc
push
cmp
pushl
lea
jg
push
lea
jb
jmp
pusha
movl
movl
pushf
call
pusha
lea
jne
push
pushf
stos
push
pusha
lea
jmp
add
mov
loop
add
mov
pop
lret
xor
mov
adc
mov
xchg
int
jb
add
sti
in
mov
iret
or
roll
es
or
and
sub
add
daa
mov
ret
lods
sbb
loopne
push
jmp
mov
test
repz
push
jge
fdivl
mov
loop
bt
pusha
add
cmc
mov
clc
pushf
cmp
test
call
dec
xchg
jl
mov
stos
repnz
js
push
aam
scas
sbb
in
or
mov
xchg
loope
pop
sbb
and
cld
leave
push
rcll
pop
dec
lahf
push
adc
and
mov
fmuls
jno
cwtl
pop
into
push
imull
outsb
test
stc
jnp
ljmp
data16
lcall
ss
fiadds
mov
jecxz
roll
cmp
mov
pop
cmp
into
adc
or
jns,pn
add
mov
cmc
sbb
mov
xchg
jns
pusha
fs
xlat
jl
push
inc
mov
fcmovnbe
into
sti
rclb
sbb
lret
jne
inc
pop
dec
movsl
or
sub
movsl
rclb
ret
add
test
repz
inc
fisubrl
iret
xchg
adc
sbb
ret
adc
ss
jge
mov
mov
sarb
dec
test
aas
fimull
das
ljmp
adc
lock
sub
adc
call
xchg
cld
mov
mov
imulb
push
fisubl
jae
ljmp
int
lahf
xchg
sbb
in
test
je
xor
addr16
sbb
in
sub
jne
mov
xchg
iret
jo
add
mov
xor
cltd
daa
call
mov
enter
jbe
add
fdecstp
cmp
xor
ja
bswap
mov
cwtl
popl
sub
add
pop
pop
sbb
lret
push
movsb
movsb
jecxz
xchg
mov
test
insl
sub
mov
sbb
add
lds
mov
and
push
add
xchg
arpl
icebp
pop
aad
fistl
push
jecxz
repz
sti
dec
frstor
cwtl
cs
addr16
and
xlat
xchg
icebp
mov
mov
mov
push
mov
jb
pop
inc
dec
push
pop
jp
rorb
pop
pop
jnp
mov
mull
rcr
btc
mov
push
pushf
call
roll
adc
mov
cmp
xchg
jae
pop
mov
ljmp
push
push
jle
fists
ds
sbb
mov
loop
leave
pop
xor
sbb
xor
ret
xchg
lret
jmp
push
das
jl
js
cmp
xchg
mov
mov
psrld
ds
je
inc
jl
jp
and
cmc
xor
jo
cmp
int
cmc
mov
cmp
in
mov
jge
adc
es
mov
mov
fprem
mov
dec
outsl
arpl
inc
jb
add
rcrb
push
pusha
pushl
ret
loopne
andl
lds
call
mov
push
int
dec
js
inc
mov
cmpsl
movsl
inc
cmpsl
dec
or
xchg
mov
mov
pusha
jl
push
into
dec
pop
dec
lahf
cmpsb
pop
inc
jnp
inc
into
xchg
push
pop
mov
jmp
xchg
and
mov
jae
leave
push
pop
jl
mov
sbb
push
lret
and
mov
out
jbe
mov
not
and
inc
xchg
push
cmpsb
loop
push
xchg
mov
in
push
aam
repz
iret
mov
aas
add
mov
clc
scas
pop
ret
frndint
into
xchg
add
cmp
imul
in
pop
jmp
fbstp
pop
cs
mov
cmova
aaa
xchg
xor
and
fdivp
ja
icebp
jne
mov
iret
movsb
daa
movsl
pop
icebp
inc
mov
daa
ret
mov
jb
push
cmpb
movsl
mov
jmp
jp
inc
mov
mov
mov
fwait
aam
xlat
jae
jae
jp
das
pop
cmp
adc
pop
cltd
popa
sub
cmp
jo
add
xchg
mov
stc
orb
mov
lret
pop
mov
insb
push
mov
cmpsl
or
lret
sub
imul
lcall
pop
push
js
popf
inc
cli
adc
pop
or
xor
mov
aad
insl
out
leave
stc
sub
adc
and
xor
adc
sbb
adc
pop
ljmp
pop
int3
or
sbb
add
jbe
mov
or
adc
imul
int3
and
lret
mov
jp
fs
ja
call
movl
mov
call
mov
pop
add
test
xor
sbb
incb
xchg
cs
clc
push
std
sti
mov
mov
pop
xor
and
cmp
adc
stc
cmpsl
pop
jb
xor
in
std
in
imul
jne
xchg
arpl
pop
xchg
pop
lahf
mov
xchg
inc
xchg
iret
mov
mov
inc
adc
cli
sahf
sub
pusha
pushf
jmp
repnz
mov
mov
rcl
mov
lea
add
les
pop
rorb
ret
sti
fstl
fiaddl
xor
aad
xor
movb
jne
xchg
movsl
mov
xchg
fnstenv
xlat
cwtl
pop
adcl
flds
shlb
pushf
cmp
sbb
int
jg
pusha
and
cmp
xchg
jmp
lea
mov
mov
cmp
stc
stc
pushf
test
pushl
pushl
pusha
pushl
lea
je
pushf
cmc
sub
movw
pushf
cmp
cmp
pushf
lea
ja
pusha
pusha
clc
pushf
imul
bt
pushf
call
test
fisttps
push
push
mov
cltd
andl
mov
mov
dec
lods
jne
int
pop
inc
outsl
loop
adc
dec
xchg
sub
test
push
stos
add
mov
inc
sbb
loopne
sti
inc
push
popa
and
sti
sbb
and
test
cmp
call
ficompl
xchg
inc
dec
xor
dec
rcrb
out
push
lret
lahf
or
hlt
pop
ret
popa
enter
popf
jg
mov
mov
fwait
lcall
and
dec
stos
inc
pop
shlb
and
push
xor
jg
xchg
push
mov
mov
mov
lahf
icebp
inc
push
clc
dec
adc
in
sub
repnz
hlt
cmp
mov
inc
and
pop
dec
xor
sbb
cmpsb
mov
jo
adc
loope
in
xor
clc
jge
shrb
or
mov
jns
sti
jno
cmp
jp
xchg
ja
xchg
push
cmpsb
and
and
sti
pushf
mov
aas
sbb
push
mov
lret
lahf
sub
or
jno
cmp
hlt
aad
push
fidivs
add
nop
out
sbb
and
push
fnsave
aad
pop
mov
std
lret
dec
xchg
cmc
ds
out
xlat
add
or
test
pop
scas
js
pop
sbb
adc
pop
out
adc
je
adc
cmp
xor
sbb
ret
repnz
repz
xor
adc
dec
les
ds
jl
mov
test
rcrl
add
repz
loopne
jbe
adc
push
jo
sbb
mov
jge
push
and
cmp
out
dec
push
dec
mov
push
mov
repz
push
out
fwait
repz
mov
and
into
loopne
sub
cltd
push
lods
cmp
dec
xor
sbb
mov
pop
inc
jo
std
sbb
cmc
pop
mov
jg
xbegin
jno
or
fsts
imul
push
cltd
fldcw
push
mov
cmp
pusha
pop
and
pop
mov
lea
jmp
into
xor
mov
xchg
out
xchg
jp
paddusw
call
push
jbe
aad
mov
jecxz
pusha
ret
scas
nop
or
shlb
push
mov
inc
mov
push
loopne
out
pop
imul
adc
lds
iret
mov
cmp
mov
lcall
loop
fcmovnb
mov
mov
jae
fists
mov
scas
xor
pop
jb
inc
fstl
js
sbb
les
push
addr16
or
loop
nop
mov
dec
push
mov
testb
cmp
xchg
imul
mov
popa
lahf
add
xchg
repnz
ficompl
mov
incb
lds
test
add
test
icebp
fiadds
lds
pop
xor
loopne
pop
shll
test
mov
inc
addr16
dec
int3
mov
sub
jmp
test
or
fisubrs
dec
fstps
rorl
mov
inc
mov
out
cmp
mov
cmpsl
push
sub
repz
xchg
jge
jne
or
xlat
jg
call
jecxz
or
push
ds
dec
icebp
movsb
in
inc
jecxz
cmc
push
sarb
aad
fnstenv
mov
jmp
add
xor
adc
dec
loopne
mov
nop
jb
rcl
xor
and
push
and
sub
les
and
or
popa
push
inc
xchg
jl
jmp
mov
or
cmpsb
data16
insl
pop
fcompl
sub
ljmp
jns
inc
pop
popa
pusha
pushf
ja
aas
idivl
loop
shll
cmp
cli
pop
stos
imul
loop
nop
addb
nop
pop
inc
leave
push
add
mov
cmpsl
mov
decb
pop
pop
jge
xchg
not
adc
loopne
stc
push
dec
mov
das
outsl
add
repnz
xorl
add
lcall
jmp
lods
cmc
cmc
push
mov
cld
scas
imul
and
xor
ds
sbb
bound
adc
popa
xlat
scas
ja
xchg
push
std
inc
xlat
clc
dec
mov
test
lods
cmp
pop
adc
pop
mov
or
bound
mov
push
adc
xor
fchs
aam
repnz
repnz
gs
mov
add
popa
ret
xchg
sbb
insb
and
movsl
mov
cmpb
mov
or
push
mov
xchg
mov
loope
xchg
sbbl
in
daa
loop
pop
hlt
in
inc
ucomiss
test
push
mov
mov
xorl
out
bound
hlt
sbb
or
test
ss
fnstenv
call
jne
jmp
loopne
cmpxchg
add
loopne
movl
or
scas
std
cmpsb
xor
pop
data16
pop
out
adc
jecxz
or
call
repnz
out
imul
mov
fimuls
mov
jne
pop
sub
leave
dec
aad
cs
sub
sub
ja
sbb
mov
mov
xor
mov
sub
aas
lahf
fbstp
sahf
insl
test
mov
loope
scas
js
dec
shll
inc
filds
cwtl
andl
xor
je
cmpsb
xor
adc
in
push
test
and
sbb
lret
inc
in
jmp
mov
lcall
mov
adc
or
sahf
sub
nop
push
push
and
sti
add
mov
into
into
loope
mov
lds
jmp
and
jae
std
dec
ret
pop
mov
xlat
jne
or
out
scas
adc
xor
mov
fiadds
jmp
and
lods
ljmp
adc
mov
loop
dec
and
outsb
cld
mov
xchg
jno
mov
sti
pop
fadds
push
js
or
dec
mov
stc
and
xchg
orb
dec
mov
out
cltd
cwtl
and
sbb
ficomps
adc
jno
mov
dec
jbe
pop
fstpt
lcall
jne
mov
movsb
cli
pop
xor
int
out
mov
mov
stos
mov
lock
out
divl
add
cmp
sbb
loopne
xor
inc
shrl
stos
or
divb
jne
mov
ja
cltd
clc
pop
cld
imul
sub
pop
scas
push
sti
dec
mov
mov
adc
stos
fwait
add
ljmp
xor
or
repnz
dec
xchg
mov
fcomp
int
add
jb
fwait
push
outsl
inc
fistl
mov
les
scas
sub
nop
repz
and
inc
nop
iret
lods
in
dec
push
push
mov
jecxz
lret
arpl
cmpb
sub
es
pop
jb
fisubrl
lock
xor
pushf
fldenv
scas
inc
push
cmpl
pop
leave
outsl
iret
les
cld
sub
mov
xchg
daa
xlat
lahf
call
mov
push
push
sbb
xchg
fdivs
ja
cmp
jmp
add
daa
dec
xlat
loope
sbb
and
pushf
and
outsb
xor
lods
jmp
push
fstpt
mov
out
mov
push
cmc
or
call
dec
xchg
jg
xor
loope
sub
pop
mov
xchg
loopne
int3
sub
filds
test
loope
icebp
mov
mov
push
push
add
loope
cmc
jne
lcall
mov
call
inc
and
das
js
jb
pop
int3
nop
outsl
cmpsl
add
out
sub
mov
ftst
cmpl
mov
mov
movsbw
movsbw
pushl
popl
lea
cwtl
cwtl
mov
bswap
movl
pushf
cwtl
bswap
pushf
lea
movl
pusha
mov
movl
pushf
mov
pushl
pushl
popl
pushf
movb
mov
push
pushl
ret
jmp
movl
jmp
pushl
lea
jae
push
pushf
call
mov
call
jbe
cmp
push
mov
push
dec
dec
sub
and
ret
insb
stos
inc
int
inc
cwtl
sub
and
dec
scas
mov
xchg
cmp
mov
sbb
into
xchg
loop
clc
loopne
jbe
adc
mov
in
inc
mov
xchg
hlt
lds
addr16
inc
lods
cltd
cli
add
les
mov
in
aas
ljmp
push
lret
jecxz
xchg
rcll
jo
popf
icebp
testb
loope
jb
push
rorl
lret
push
push
shlb
jecxz
lods
fsubrl
clc
sbb
pop
fwait
mov
leave
mov
shr
mov
cmp
dec
xchg
or
push
cld
loop
or
ret
loop
insb
mov
add
mov
jg
mov
pop
jle
data16
dec
nop
jo
add
sub
or
mov
in
shlb
lea
jne
jmp
aas
jne
adc
psubusb
mov
and
out
xor
mov
xchg
int3
and
sti
in
daa
subl
shlb
mov
sbb
add
mov
xchg
popf
and
xor
nop
xchg
clc
test
mov
xlat
arpl
repnz
testb
cli
pop
scas
jg
mov
push
add
xchg
adc
cli
mov
mov
ret
xor
arpl
pop
push
pushf
cmc
and
bt
stc
add
pushf
pushf
lea
jmp
cmp
cmc
mov
pusha
test
pusha
jmp
arpl
or
orl
cltd
ja
loop
dec
mov
cltd
bnd
jb
adc
lock
lea
push
mulb
jno
mov
cli
inc
sarl
xchg
dec
push
gs
mov
push
push
test
dec
loopne
fwait
or
pushf
pop
jmp
aas
adc
mov
adc
das
add
je
xor
popa
jecxz
mov
xor
mov
mov
pop
outsl
jmp
push
enter
rorl
loopne
lahf
sti
fcoml
icebp
xor
data16
int
jecxz
jbe
mov
out
inc
mov
cmp
jmp
push
pop
mov
jmp
dec
sub
ret
scas
incl
stc
pop
shll
test
mov
and
cmp
popa
pusha
fsubrp
rcl
cmp
pop
mov
sub
mov
mov
loopne
cmpsl
call
lods
mov
dec
sar
mov
dec
mov
in
sub
iret
test
xchg
and
test
xor
mov
add
adc
cs
aad
sub
shll
mov
leave
xchg
les
test
pop
idiv
push
aam
outsb
jo
test
adcb
std
aad
inc
cs
jmp
test
jne
dec
lea
pop
sub
cmpsl
int
out
mov
fisttpll
and
gs
in
lods
cmc
rolb
gs
mov
mov
out
pop
imul
ret
mov
and
pop
gs
fucomi
lds
sub
dec
mov
pop
movsl
std
xchg
int
and
fldl
data16
and
out
test
insb
pushf
and
int3
mov
ds
outsb
push
push
and
inc
mov
insb
push
rol
and
scas
testb
dec
and
cmp
call
jnp
mov
cli
cmp
mov
jmp
mov
incl
idivl
xchg
pop
popf
add
fisubl
push
loopne
dec
pop
cli
incb
pop
aam
jge
stc
movsb
repz
in
mov
adc
or
out
test
mov
add
jecxz
negl
mov
testl
out
inc
leave
sub
or
les
loope
incb
push
out
xchg
inc
push
and
outsb
and
inc
mov
testb
inc
call
xor
sarl
mov
add
clc
rorb
cli
call
call
out
xor
iret
aas
add
ja
out
lds
ret
outsb
sbb
out
pushf
movsl
jge
mov
es
data16
mov
inc
inc
decb
addb
add
add
ret
cmc
aam
out
mov
insl
and
xchg
testb
jo
out
cmpsl
jg
aas
push
add
jecxz
and
mov
inc
mov
mov
jecxz
pushl
or
mov
in
xchg
push
xchg
loope
add
push
out
paddw
mov
cmp
movl
cmpsl
inc
push
inc
roll
jmp
mov
mov
and
inc
jecxz
sarl
jae
jg
incb
in
jno
sti
mov
test
andl
cmp
icebp
in
bound
mov
movsb
lret
cmp
jge
daa
sahf
in
iret
loope
jmp
sub
ret
push
lods
mov
add
jbe
out
add
popf
stc
fldl
cltd
or
iret
xor
outsl
add
addl
xor
mov
enter
loopne
inc
inc
gs
incl
aad
test
filds
sub
incl
flds
push
mov
out
inc
push
clc
or
xchg
int
movsl
push
add
xchg
mov
in
insb
sbb
push
mov
xchg
mov
mov
movl
repnz
es
mov
in
add
push
adc
cmc
xor
mov
movb
jae
push
inc
std
jg
inc
sbb
adc
rol
mov
mov
add
sub
clc
xchg
cmp
cltd
jg
mov
push
scas
sub
mov
xlat
or
xchg
lret
dec
push
ret
cmpsb
mov
outsb
sub
and
arpl
stos
sbb
outsb
inc
xchg
stc
xlat
mov
addr16
pushl
jecxz
mov
fdivrs
sbb
test
addr16
add
mov
shll
in
addr16
in
sbbb
fsubp
xchg
in
push
insl
lds
bnd
sub
fistl
dec
scas
sub
scas
sub
scas
inc
dec
in
addl
xchg
push
inc
sub
push
jno
xor
push
cmpsl
add
cwtl
cld
mov
mov
cmc
cmpsl
and
jmp
aaa
dec
inc
sbb
pop
mov
xor
inc
cmc
adc
xor
inc
cli
xchg
lds
inc
popa
add
mov
cmpsl
lds
inc
dec
ficomps
and
inc
mov
sbb
inc
pop
mov
clc
or
mov
cmpb
lds
mov
sbb
pop
cmpsl
mov
or
inc
jg
dec
lock
enter
jbe
mov
inc
iret
lods
ret
push
test
lods
xor
and
iret
mov
iret
cmp
dec
or
fldenv
add
lea
lds
not
dec
sub
lock
outsb
inc
push
subl
daa
ret
pusha
negl
xchg
cli
popl
subb
lds
lcall
int
lds
or
lods
lds
push
mov
lods
push
mov
cmc
pop
mov
arpl
mov
fs
shlb
ja
pop
mov
mov
cmp
divb
rcll
jbe
ss
repnz
dec
call
xchg
ror
mov
imulb
insb
pop
or
pop
iret
inc
fs
mov
iret
xlat
jne
iret
jno
pop
dec
xchg
inc
push
stos
mov
arpl
iret
retw
iret
or
pop
add
dec
inc
xchg
mov
imul
cmp
std
xor
out
inc
aaa
iret
outsl
out
push
pop
out
sub
rol
jb
repz
jbe
jbe
outsb
andl
xchg
popa
dec
mov
mov
adc
out
or
iret
mov
mov
xchg
jnp
mov
lret
iret
ja
add
iret
roll
xlat
shrb
adc
iret
jo
mov
dec
sti
aad
aad
test
jg
pop
lret
subb
leave
mov
aaa
in
lds
sahf
jmp
pop
xchg
movsb
pop
les
movsb
push
les
xchg
cmpl
aaa
lods
push
scas
xchg
arpl
jo
jae
inc
adcl
jne
sbb
inc
pop
xchg
mov
loopne
iret
les
mov
push
add
scas
iret
mov
ja
pop
test
cmp
popf
add
adc
fmul
xchg
movl
xchg
and
into
ficomps
rcrb
into
popl
adc
jge
aas
addr16
sahf
daa
push
ret
xchg
sub
andb
mov
es
xor
mov
test
scas
inc
in
add
pushf
shrl
scas
ret
jmp
add
loopne
xchg
xorb
push
addr16
xorb
popl
mulb
mov
push
sbb
gs
test
push
inc
addr16
adcb
rcrl
fbstp
iret
jne
xchg
add
outsb
shl
aad
xchg
cmp
addr16
daa
je
movsb
push
scas
xchg
cmp
int3
xchg
fcoml
xchg
cmp
and
add
mov
out
mov
lret
gs
jnp
imul
xchg
cmc
scas
jo
aas
ja
inc
in
inc
jne
arpl
fsubp
push
cmc
std
fcmovnb
fadds
pusha
int
inc
iret
in
scas
xor
push
aad
dec
sub
xlat
add
xchg
xor
loope
adc
ss
es
sbb
ljmp
insl
stc
stc
mov
test
jb
hlt
mov
daa
pop
mov
loop
mov
addr16
movsl
ret
movsl
inc
insb
jnp
rcll
out
pop
add
inc
pop
jne
cmc
jb
std
pop
sub
mov
xchg
in
xchg
mov
ss
add
push
je
insl
add
cmpsl
popf
in
filds
mov
cmpsb
imul
movsb
inc
test
in
imul
dec
push
xchg
inc
push
jb
mov
sub
mov
out
iret
pop
jbe
ror
push
and
repz
cmpsb
imul
clc
add
popf
daa
nop
lock
daa
test
push
aas
mov
pusha
jnp
add
sub
daa
outsb
fbstp
mov
pop
daa
pop
xchg
div
movb
cmpsl
out
call
mov
push
out
inc
cli
push
aam
out
push
ljmp
addr16
jp
xchg
out
ret
jb
outsb
mov
addr16
mov
rol
loopne
mulb
ds
cmpsl
and
cmpsb
ret
gs
lds
xlat
mov
frstor
out
sub
pop
jnp
shl
xor
push
int
idivb
std
xor
inc
sub
insl
gs
cmp
insl
ret
pushf
repnz
push
fisubl
xlat
mov
shrl
mov
testl
in
addl
stos
imul
inc
outsl
aaa
ret
std
out
jne
lods
outsb
or
hlt
or
and
cmp
daa
and
in
out
add
inc
and
test
xchg
inc
loop
stos
cmpsb
enter
pop
or
and
ljmp
xchg
out
nop
out
sbb
cmpsl
je
fadd
das
and
xchg
inc
in
jge
lock
jne
shlb
cmc
jmp
rep
adc
jecxz
lret
mov
mov
stos
push
jnp,pn
out
out
insl
hlt
test
stos
xchg
xchg
or
sub
sub
int
mov
and
testb
scas
push
pusha
gs
out
mov
push
jne
fistl
inc
lods
add
jmp
push
std
ds
out
adc
por
mov
std
movb
jne
lret
fcoml
or
mov
arpl
cmc
jge
movsb
movsb
pop
add
jae
addl
out
jo
repz
jle
pop
mov
mov
cmp
sbb
popf
lea
and
or
and
pop
and
pop
mov
mov
xor
inc
int
sbbb
in
cmpsl
and
stc
in
pop
cmp
adc
out
pop
push
jle
rorl
in
mov
add
sbbl
sub
test
in
cmp
lods
loope
insl
xchg
mov
add
shr
movsl
sbb
pop
ret
mov
push
lods
fsubl
and
test
sbb
loop
adc
lods
sub
add
or
cmp
aas
jne
insl
andl
mov
sti
xor
jecxz
fisubl
jae
sub
adc
xlat
jne
lods
fldl
pop
mov
mov
dec
xchg
roll
lret
sahf
inc
bound
sti
out
jmp
push
adc
arpl
xchg
int
cmpsb
push
test
mov
xchg
rcll
cmpsb
fiaddl
test
inc
pop
cmpl
decb
aad
divb
inc
push
push
mov
movsb
lods
fists
push
out
dec
xchg
xchg
scas
gs
cmc
mov
dec
sub
mov
rol
xchg
adc
int3
lret
in
jbe
pop
andl
enter
out
lds
not
push
and
test
into
les
sbb
fsub
mov
jne
in
dec
loop
sub
out
cmp
mov
fiaddl
pop
lcall
push
test
loop
pushf
and
push
daa
sub
jecxz
xchg
cmp
orl
lock
mov
xor
jle
push
ret
jnp
cmp
lahf
lods
inc
fnstsw
out
xchg
xor
sbb
icebp
push
data16
in
aad
out
andl
rorb
push
adc
mov
cmpsb
add
loop
fbld
xchg
xchg
xchg
mov
bound
icebp
popa
fists
mov
scas
lds
xchg
ljmp
and
cmp
and
sub
hlt
dec
fildll
movsb
mov
push
bound
add
jp
out
sub
into
cmp
jno
ja
loope
sub
cli
bound
out
inc
add
pushf
repz
lods
dec
in
or
xor
test
inc
mov
je
popf
and
sahf
xchg
hlt
lods
jg
in
jge
cmpsb
mov
xchg
shll
out
imul
dec
lahf
fdivr
mov
push
dec
bound
in
xchg
sbb
add
push
adc
add
sti
fadd
push
loopne
xchg
mov
movsb
loopne
inc
dec
out
pop
cmp
icebp
jle
insl
adc
jmp
repz
push
sbb
adc
mov
daa
fsubrl
movsb
fildll
in
int3
jecxz
add
cmpsb
pop
sub
xor
xchg
bound
out
imul
scas
pop
jmp
sarb
adc
dec
aaa
cmp
pop
cmp
fists
jecxz
push
loopew
add
cltd
mov
in
adc
je
in
sub
sti
add
and
fiadds
add
and
gs
js
les
inc
xor
push
daa
nop
push
jecxz
arpl
out
lret
mov
jns
movsl
lock
ja
popf
jne
les
mov
xchg
push
addb
jge
and
lret
mov
js
addr16
es
cmpsl
push
movsl
insb
fsubrp
loope
out
xchg
jae
scas
xchg
mov
mov
fs
add
iret
les
add
mov
int3
sbb
xchg
lea
push
out
pop
incl
mov
dec
or
xor
aas
pop
clc
lea
pop
stos
adc
int3
hlt
xlat
out
sub
adc
inc
mov
in
sti
repz
in
popa
add
push
fwait
adcl
cmpsb
fbld
gs
sub
mov
subb
fmuls
ret
inc
fs
add
pop
sarl
daa
in
les
ficomps
mov
adc
mov
push
popa
shlb
fiadds
ltr
adc
mov
stos
movzbl
into
shl
loop
inc
xchg
xchg
gs
add
in
xchg
daa
jecxz
gs
arpl
mov
ja
and
loopne
mov
lds
in
fidivs
out
inc
andl
mov
and
ss
push
push
adc
push
and
cmp
xchg
xor
xlat
add
test
cmp
mov
xchg
inc
jecxz
mov
popf
add
push
hlt
bound
fld
sbb
icebp
add
inc
dec
jbe
xchg
jae
repz
mov
aaa
loop
cmc
push
jg
adc
xchg
jnp
insb
jb
mulb
mov
and
push
mov
add
mov
ss
or
and
cmp
cmpsb
int3
loop
lods
or
xchg
pop
fdivrl
out
adc
add
jne
xor
daa
pop
out
aad
std
xchg
lds
fsubl
jbe
cmpsl
call
push
pop
pop
pop
cmp
xchg
cmp
add
sub
pop
jae
mov
sub
xchg
arpl
jl
push
mov
shrl
xchg
fdivrs
bswap
add
test
hlt
xor
fldenv
test
call
lds
inc
and
inc
les
or
inc
jae
bound
xor
lock
fwait
aaa
or
daa
xor
add
inc
repnz
ja
mov
inc
adc
ret
clc
xchg
mov
dec
movsl
stos
cmp
shrl
stos
out
stc
xlat
jmp
mov
push
push
jge
xchg
je
push
addr16
dec
add
rol
mov
mov
sub
nop
incb
jge
pop
and
xchg
arpl
jns
subps
or
cmpsl
mov
jbe
cmp
and
cmp
dec
cmp
into
test
ja
daa
ja
ja
jl
add
fld
xchg
mov
xorl
push
lods
testl
mov
movsl
cltd
repnz
jne
lea
pop
inc
popa
movsl
ja
cmpsl
pop
pop
adc
mov
inc
lcall
mov
out
mov
cmc
xchg
inc
lahf
inc
xchg
gs
data16
push
mov
inc
cld
inc
jle
mov
mov
jecxz
insl
inc
inc
inc
inc
push
insl
data16
pop
sbb
jg
adc
ret
lret
loope
xchg
mov
test
gs
mov
aam
mov
mov
pop
fsts
in
cmp
jne
adc
pop
fadds
and
dec
jae
jbe
ret
addr16
inc
mov
aam
push
loop
add
pop
mov
dec
popl
jge
xchg
sbb
mov
pop
lcall
ret
lahf
push
cmp
push
loope
jb
divl
movsl
mov
out
pop
lds
mov
add
and
sub
mov
push
sarb
jge
sub
jp
pop
xor
mov
arpl
cld
mov
mov
xchg
mov
notb
not
and
pop
outsb
movsl
call
push
lahf
out
data16
pop
mov
or
cmp
test
jne
bound
in
or
std
in
mov
popf
mov
add
clc
clc
shl
jmp
push
test
rcr
pop
jmp
mov
sbb
jmp
mov
hlt
call
jecxz
xchg
pop
inc
andl
jecxz
push
xor
sbb
xchg
and
aam
andb
cltd
data16
fistps
pop
xchg
or
add
add
mov
dec
ret
jecxz
inc
daa
push
jl
add
lret
cwtl
out
dec
push
lods
lahf
fcompl
sub
add
mov
fistl
mov
je
ficoml
idivl
out
sarb
es
or
inc
ret
and
call
inc
frstor
out
fildl
mov
lds
lahf
jge
jmp
imul
fnsave
and
add
nop
addb
jne
pop
pop
and
mov
pop
cmp
push
jns
lods
bound
or
lahf
popa
mov
lds
add
jae
mov
sub
or
in
mov
lret
mov
stos
pop
pushf
push
pushf
push
movl
pushl
movl
pushf
pushf
push
lea
jmp
clc
fs
jb
pop
popa
test
mov
xchg
mov
mov
jnp
sub
das
in
scas
adc
outsl
or
mov
jo
mov
jo
push
in
and
cmp
cmp
jns
xchg
pop
pop
jae
jge
mov
adc
xor
outsb
push
sbb
add
mov
fmull
jl
addr16
ret
push
stc
ret
sbb
or
push
call
in
mov
fcompl
fstps
test
aad
lds
test
psrld
jnp
sub
rcl
lea
mov
pushf
pushf
sub
movb
cmp
jmp
clc
dec
shlb
mov
cs
sbb
pop
sub
faddl
cmp
sbb
add
shrb
mov
stos
dec
or
call
nop
cs
or
jno
stos
and
pushf
mov
xchg
adc
ds
add
outsb
lcall
roll
movsb
jecxz
mov
mov
int3
xchg
shll
nop
xchg
mov
fstpl
scas
pop
sub
jle
mov
mov
cld
pop
push
dec
ret
pop
popf
xor
pop
into
pop
sbb
lret
outsl
inc
sub
addr16
stos
xchg
test
inc
cmp
push
dec
mov
xchg
int
mov
jae
pop
loope
sub
pop
mov
mov
xor
xor
popf
test
daa
int3
mov
sbb
lods
sub
push
xchg
sarl
mov
roll
or
sbb
or
sbb
dec
mov
cmpsl
add
mov
sub
orb
iret
mov
mov
pop
inc
mov
fistps
ret
pop
sbb
mov
and
dec
cmp
adc
testl
dec
int3
fmul
push
cwtl
loopne
jp
jl
adc
fwait
cmpsb
out
ja
mov
mov
dec
and
or
xchg
fmul
out
jge
test
test
stc
pop
outsl
in
cmp
pop
sarb
out
and
cvtdq2ps
shll
add
hlt
jge
add
and
add
xlat
mov
setb
jmp
aam
xchg
cmp
data16
sbb
outsl
add
push
mov
adc
outsl
add
jg
arpl
push
mov
pop
andl
cmp
test
out
movsb
ljmp
push
sbbb
addb
and
clc
popf
mov
sti
xchg
sbb
in
jae
mov
loopne
pop
unpckhps
inc
in
out
sub
pusha
and
sub
jns
and
sahf
cld
and
dec
les
sbb
mov
push
adc
mov
fists
call
fcoms
mov
dec
add
mov
loopne
mov
cmp
sub
sub
je
mov
cmp
nop
je
mov
mov
adc
inc
mov
adc
fwait
pusha
jecxz
popa
xor
mov
sbb
cli
lods
les
js
pop
movsb
xchg
sti
push
and
cmpsb
xor
adc
in
addr16
bound
dec
xor
addl
lea
jmp
mov
fsubl
insb
das
or
xchg
clc
lret
xchg
mov
filds
cmc
movl
ror
pushf
inc
pushf
rol
jmp
pushl
popl
call
not
pushl
call
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
aas
data16
jle
js
into
xor
les
int
cld
push
jmp
aas
ficoms
jp
stc
jle
sbb
push
inc
inc
popf
or
lods
xor
jae
xlat
or
stc
mov
xor
out
xor
sub
jae
and
ds
jnp
mov
enter
cmpsl
fbld
jecxz
imul
shrb
movl
pusha
push
pushf
movl
push
mov
lea
jmp
xor
and
sbb
dec
ret
cmp
mov
pop
and
xor
dec
mov
lds
push
in
adcl
ljmp
repnz
das
pop
fmulp
stos
inc
xchg
popf
adc
jl
pop
insb
ljmp
loopne
cwtl
jl
mov
mov
clc
imul
xchg
sbb
or
sub
adc
testl
and
pop
loope
mov
xchg
hlt
mov
out
ja
or
fld
xor
and
add
fisttpll
test
add
or
ljmp
pushf
lea
jo
cmp
push
lea
ja
jmp
subb
cld
imul
adc
pop
dec
ds
mov
mov
cmp
pop
gs
mov
sti
in
stc
pop
fdivr
repnz
cmp
mov
add
scas
cmp
sahf
arpl
rolb
lcall
dec
dec
pop
jne
xor
xchg
mov
pushf
out
inc
ja
faddl
fimuls
and
xchg
dec
stos
out
shrb
fldenv
fld
push
jnp
vmovlpd
test
lret
sub
mov
fs
fwait
cli
inc
or
inc
add
daa
mov
or
lds
sbb
push
fldl
ret
mov
idivl
mov
fsubrl
lock
jg
mov
push
les
fbstp
push
das
test
ret
and
aas
adc
in
inc
inc
push
inc
scas
dec
aas
inc
test
andb
scas
adc
mov
or
leave
int3
sbb
and
in
aas
mov
dec
ss
and
cli
dec
mov
jne
enter
xlat
call
or
sbb
scas
mov
daa
out
je
mov
call
outsl
and
lret
push
mov
xchg
adc
add
sbb
push
xchg
xor
js
mov
push
add
dec
clc
int
xchg
or
incl
cmpb
sbb
xchg
jg
lea
nop
fstpl
jp
fwait
in
mov
ret
lock
scas
add
inc
gs
outsl
fs
gs
imul
add
daa
lret
push
loope
aad
push
movb
jg
pop
mov
pop
push
cmp
adc
insb
jecxz
pushw
jns
outsb
into
sti
pop
movsb
mov
imul
stos
and
mov
ret
pop
fisttpl
and
xchg
push
imulb
lcall
dec
into
pop
xor
inc
pop
in
or
inc
pop
imul
int3
sub
les
dec
and
popa
fildll
aam
xor
psubb
xorb
jmp
subl
dec
push
jnp
addr16
daa
std
shlb
hlt
rcrb
sub
mov
les
jmp
cmpsb
xchg
scas
sub
lods
push
jbe
fcoms
popf
nop
lcall
dec
dec
mov
and
dec
sahf
mov
je
adcb
iret
xchg
xchg
dec
jne
test
fidivs
mov
mov
inc
pop
aam
mov
ret
pushf
cmpsb
push
out
cmp
icebp
mov
xor
sbb
int
sub
jmp
imul
mov
mov
and
adc
jmp
les
std
cmp
movb
push
xor
add
call
lock
addl
mov
cmpsl
out
in
dec
pop
ds
out
cmp
data16
subl
and
sub
xchg
aaa
dec
rcr
add
mov
add
and
dec
mov
jg
xor
cmpsb
fisubrl
stc
aaa
mov
je
fldlg2
test
aaa
mov
xchg
shll
cld
inc
or
imul
mov
pop
sbb
and
fldenv
scas
adc
or
rolb
scas
jns
dec
hlt
ret
lods
ja
rcrl
push
sbb
lds
lret
aaa
lret
cwtl
push
lods
cs
lods
loop
and
repz
insl
jmp
out
cs
push
jae
mov
lock
ljmp
cmp
or
xor
scas
loop
xor
sub
push
test
adc
fisubl
test
aas
sahf
in
mov
xchg
outsl
cs
lds
scas
or
inc
and
lods
iret
push
pushf
pusha
movb
jmp
sbb
mov
or
lahf
decl
lock
stc
fsubs
int
iret
pop
mov
mov
ficoms
sub
xor
push
daa
ljmp
push
arpl
in
addb
pop
pop
lcall
lcall
bound
lock
xor
xchg
lahf
fildl
cmpsl
movsb
add
and
addl
mov
add
mov
outsl
add
loop
pop
add
pop
add
inc
int
pop
shll
or
cmp
ret
xor
xchg
cs
in
aas
lea
xchg
push
xchg
fadds
ficompl
dec
mov
jb
pop
sub
mov
sub
mov
push
imul
je
sbb
xchg
aam
add
ret
xchg
inc
into
ror
push
bound
pop
adc
jnp
adcb
sbb
rorb
into
mov
mov
adc
je
je
or
nop
shrb
fld
pop
outsb
rorl
push
mov
cmp
scas
in
testl
pop
flds
rcll
sti
cwtl
flds
movsl
dec
arpl
jnp
and
gs
fadd
insb
dec
out
and
mov
scas
outsb
les
ret
cmp
mov
leave
loop
imulb
fisubrl
out
mov
adc
in
xor
fcomp
sti
bound
push
push
nop
lods
inc
dec
cmpsl
sbb
aad
inc
cwtl
pop
in
sub
mov
fldt
enter
or
daa
out
ret
enter
int
push
test
or
pusha
pushf
lea
je
bswap
call
xchg
call
lahf
loope
nop
sbb
fucomi
cmpsl
adc
adc
iret
xor
mov
mov
dec
adc
sub
js
sub
fildl
lods
fcompp
iret
ret
push
dec
push
idivb
xor
jle
rolb
mov
nop
add
daa
mov
into
sbb
mov
or
mov
hlt
jp
icebp
sub
outsl
xchg
iret
sar
push
and
jl
and
jae
stos
lret
xchg
pop
and
and
fxch
js
test
cmc
or
pushl
push
lea
je
call
or
cmpl
and
notb
cmovae
call
ficomps
mov
xchg
mov
js
scas
cli
mov
fdiv
or
pop
fidivrs
ja
rorb
mov
stos
je
outsb
mov
test
incb
or
lock
or
pop
xor
pop
icebp
test
iret
mov
and
dec
outsl
or
inc
pop
xchg
popa
xor
or
xchg
shrb
movsb
push
mov
in
mov
jg
add
pop
add
mov
push
in
or
fistps
outsl
cld
jle
addb
cmp
mov
push
mov
movsl
nop
jge
sahf
pop
mov
shrb
or
cmp
fisttpl
iret
repnz
insl
and
test
enter
imul
or
mov
and
aad
or
inc
or
movsl
mov
into
ret
punpckldq
out
sbb
or
jae
push
or
out
pop
in
movsl
add
mov
insl
dec
or
adc
lahf
xchg
inc
popf
fwait
or
lods
mov
out
sub
mov
rclb
cmpsb
pop
pushf
repnz
out
mov
aam
pop
jp
adc
sub
sbb
daa
or
adc
sub
inc
add
loop
aaa
add
add
repnz
or
push
or
or
mov
popf
mov
inc
pusha
insb
in
or
fstps
daa
jl
ret
xor
int
dec
incb
lcall
sbb
inc
or
pop
mov
add
addps
xchg
add
add
rcll
or
sub
pusha
pop
test
xchg
or
sbb
shll
mov
mov
xchg
ja
pop
dec
or
jg
call
jmp
jmp
add
lds
stos
cmp
loopne
mov
adc
jbe
xorb
movsl
dec
dec
add
or
lret
pop
scas
push
mov
addr16
mov
into
mov
scas
push
orl
and
push
cmc
or
repnz
xchg
or
inc
mov
or
lock
or
pop
shll
cmp
and
int3
mov
cltd
push
mov
out
ret
dec
mov
out
cmp
mov
fcmovnbe
jl
xor
pop
stos
loopne
mov
decl
scas
jle
adc
ljmp
jecxz
mov
or
ret
addr16
clc
enter
in
mov
jb
lahf
push
pop
xchg
lret
or
and
and
jecxz
dec
test
cmp
loop
je
or
cmpb
imul
cld
pop
repnz
push
and
mov
sbb
loopne
push
jae
jb
fdivs
loope
or
orl
inc
ds
jmp
jno
xchg
sub
lods
pusha
cmpsb
sub
leave
mov
inc
xchg
add
sub
or
mov
cli
xchg
inc
sbb
xchg
fcmovu
insb
imul
pop
pop
mov
out
sahf
cwtl
test
hlt
rcl
xchg
decb
mov
jae
or
xor
or
cmpsb
dec
push
rorb
cmp
xor
ds
movsb
pop
xchg
inc
ss
push
adc
in
jnp
dec
or
dec
std
xchg
push
sub
pop
or
lods
ret
mov
jb
xchg
sbb
ja
idivb
mov
into
mov
decb
cmp
or
adc
and
popl
das
push
push
mov
inc
or
sbb
lahf
sub
lcall
mov
or
nop
jbe
xchg
rolb
xchg
jecxz
or
push
push
hlt
mov
add
test
lret
pop
inc
adc
or
xchg
sub
xor
stos
cld
jno
mov
nop
fs
mov
or
dec
push
iret
out
mov
shlb
inc
or
add
rorl
or
jo
jle
out
or
jp
or
clc
or
xorb
lock
or
mov
add
js
mov
mov
mov
or
inc
jns
out
lods
in
adc
sub
leave
cs
mov
cmpsl
lea
push
incb
add
cli
test
sbb
xchg
or
loopne
dec
jle
push
or
jg
jg
mov
sub
loope
and
jecxz
adc
test
daa
pusha
pop
imul
lods
mov
lock
je
and
push
loop
cmp
xchg
jo
out
pop
mov
out
pop
xlat
pop
xchg
jecxz
ss
cmpsl
std
out
jg
or
and
pop
add
mov
pop
mov
pop
jmp
clc
jmp
cwtl
push
push
stos
push
jg
sarl
or
mov
aam
xchg
adc
jo
cli
out
inc
inc
mov
pushf
add
pop
sub
mov
sahf
pop
jg
add
jp
std
or
cwtl
or
mov
dec
out
add
or
xor
data16
fstl
cmpsb
add
xlat
or
lods
sbb
inc
dec
or
pop
push
xor
push
or
mov
pop
aad
jg
mov
outsl
add
or
mov
sbb
fisttpll
or
push
notb
or
aad
scas
and
mov
sub
pop
pushf
or
jbe
test
cmp
pusha
jp
pop
pop
jl
sub
ja
lods
popf
in
sbb
stos
das
out
mov
insb
or
test
xchg
arpl
push
mov
or
rorb
lods
inc
lahf
daa
dec
add
loopne
sub
mov
aaa
les
xchg
inc
fmul
fldl2t
out
movsl
ret
or
lahf
or
lods
xchg
pop
leave
lcall
imul
xorl
sub
jbe
or
fadds
jbe
orl
stos
test
add
aas
clc
dec
imul
jbe
test
jne
cmp
fs
fistpl
out
popf
lret
cmp
xchg
add
and
insb
xchg
std
inc
sbb
lds
xchg
pop
int3
jns
test
es
sbb
or
insl
or
icebp
dec
inc
dec
cmp
movsb
pop
fwait
mov
int3
dec
lcall
fisttps
mov
mov
xchg
xchg
xor
insl
or
dec
testl
adc
icebp
push
incl
jmp
fisubs
push
ds
addr16
add
dec
jmp
out
lds
aad
xchg
dec
jmp
inc
pop
mov
mov
aas
lds
jnp
mulb
in
pop
mov
inc
idivb
mul
in
mov
mov
mulb
mov
out
lds
outsb
mulb
pop
push
mov
lds
jnp
mulb
in
push
mov
std
in
mul
fstp
xor
int
lds
divb
popf
ja
out
lds
in
gs
ret
lds
repnz
ja
notb
jnp
test
pop
xchg
mov
cmp
sarb
neg
in
add
xlat
sub
pop
push
divb
jl
sti
out
not
in
fdivrs
testl
in
xor
mov
popa
testb
nop
sbb
data16
inc
in
xchg
je
cld
fs
mov
les
mov
fs
je
in
fsubrl
mov
movsb
add
jmp
leave
mov
jge
js
mov
test
cs
in
mov
cmp
fisttps
and
in
inc
cld
movsb
inc
dec
mov
push
aas
xor
jns
push
call
or
les
and
int3
jg
aad
sbb
pop
movsb
and
mov
in
pop
roll
popf
mov
out
mov
paddusw
mov
sub
fwait
imul
xorb
fists
sub
pop
cmpsb
pop
les
mov
cmp
xor
stc
arpl
push
jne
mov
cld
nop
jae
xor
mov
loope
mov
dec
aam
push
inc
fs
xor
pushf
imul
sub
dec
and
paddsb
jecxz
fimull
xchg
int
mov
aad
les
aaa
pop
int
loop
test
rcrl
int3
ljmp
cmp
push
daa
in
jl
pop
mov
shlb
lds
push
cmc
xchg
cwtl
xlat
shll
mov
pop
in
movsl
jne
xor
fcompl
mov
outsb
std
jmp
testb
inc
pop
xchg
mov
js
add
jne
mov
movsl
jae
mov
xor
sarb
push
hlt
xchg
je
push
inc
subl
imul
mov
mov
push
mov
std
cmpsb
jne
loope
dec
mov
and
negb
dec
dec
lea
push
jbe
xor
sub
jbe
ficomps
push
fldl
aad
aad
insl
mov
data16
mov
adc
cmp
sarb
or
sahf
jle
faddl
fbld
addr16
push
mov
cmp
std
jmp
gs
mov
xchg
inc
mov
test
xchg
addl
in
cld
roll
and
cmpsl
and
es
adc
pop
add
and
loopne
lds
or
scas
and
sbb
es
jns
andl
xor
adc
in
iret
ds
outsb
data16
inc
jle
pop
or
jo
cld
mov
dec
arpl
daa
pop
or
test
lret
or
hlt
mov
movl
add
dec
movl
and
test
add
fwait
xchg
pop
mov
sub
xchg
std
jg
cli
pop
iret
cwtl
mov
arpl
push
cli
xchg
lea
ret
sarb
sub
aad
pop
out
outsb
in
xchg
adc
jb
dec
dec
lds
sarb
shl
and
inc
aad
dec
lahf
in
jle
fstl
inc
mov
jle
xlat
add
in
pop
cmc
imul
or
mov
adcl
fisttpll
cmc
sub
mov
jle
pop
notl
out
sbb
test
les
jecxz
cmpl
and
test
mov
adc
xchg
out
push
loope
movsl
mov
add
pop
pop
ja
into
mov
jno
jecxz
ret
mov
lcall
outsl
inc
andb
fadds
inc
idivb
mov
icebp
dec
lcall
or
into
dec
shll
mov
xor
adc
lret
add
mov
scas
mov
es
dec
in
mov
test
ljmp
mov
addr16
lods
mov
test
mov
cmc
pop
fs
xchg
cmp
jno
bound
iret
sbb
shll
cld
ja
mov
nop
imul
insl
mov
jp
imul
xchg
rol
inc
pop
aam
incb
add
push
lahf
add
cmpl
xchg
push
cli
mov
xchg
fs
test
in
aad
faddl
push
gs
lock
and
pop
insb
xchg
dec
and
aaa
in
mov
mov
xchg
add
mov
cmpsl
pusha
out
ret
std
xchg
xchg
jmp
rclb
inc
movl
fildl
jbe
lahf
push
pop
mov
out
fdivr
or
cmc
xor
pop
xor
fadd
jmp
pop
inc
dec
ret
jmp
cltd
or
ss
lea
andl
cmp
pop
push
mov
imul
ljmp
xchg
in
aaa
push
and
fists
out
fdiv
pop
int3
and
inc
mull
imul
jle
in
insl
lahf
jge
movsl
mov
repz
cmpsl
in
ret
mov
ss
je
fucomp
sub
push
mov
jl
add
aad
dec
std
das
jne
and
insl
ss
aam
xchg
pop
add
lret
add
data16
lods
aad
lds
pop
mov
xlat
xchg
shll
int
xchg
fcom
test
sbb
outsb
sub
rorl
out
out
push
sar
data16
ljmp
jns
push
loop
push
dec
mov
ret
lea
xor
vmread
mov
daa
or
pop
jne
or
inc
ret
xor
fnsave
pusha
out
or
shrl
stc
jno
insl
mov
test
test
shl
jmp
sbb
das
dec
repz
sarb
loop
or
addl
call
sbb
rol
mov
inc
or
cltd
incb
movsl
mov
insb
pop
test
popa
mov
or
fmull
mov
loope
mov
pop
xchg
lahf
loope
out
in
ret
je
icebp
mov
out
and
cld
inc
jg
pop
xchg
js
movsl
addr16
xchg
cmpsl
dec
lock
lret
lea
mov
xchg
lret
scas
pop
mul
cltd
xchg
outsb
mov
mov
data16
mov
movsl
incl
lods
addr16
scas
dec
mov
call
xchg
jo
xchg
popf
data16
jecxz
mov
imull
cmc
iret
ja
lods
sub
jae
adc
mov
addl
loopne
ret
xchg
jl
mov
ss
aaa
in
jnp
test
inc
inc
incl
icebp
fwait
xchg
je
pop
scas
pop
fistps
out
incl
mov
xchg
into
movsl
ja
mov
rol
fwait
mov
fsubr
mov
sti
push
out
ja
cmp
subb
into
addr16
inc
mov
mov
cmpsl
imul
cmc
fistl
les
out
xchg
add
addr16
add
add
ds
cmpsl
ljmp
aam
xchg
test
out
dec
stos
lahf
push
pop
outsb
pop
out
jge
aaa
mov
mov
stos
in
jmp
add
je
leave
aas
out
loope
mov
test
and
cltd
testl
movsl
cmc
jge
fnstsw
dec
jg
fs
mov
xor
mov
jge
addl
ljmp
mov
into
cmpsl
push
sub
jns
ljmp
rcr
outsb
add
pop
or
stos
mov
aam
cmp
addr16
iret
out
notl
pop
adc
call
dec
jns
in
lahf
pop
push
imul
mov
mov
aaa
pushl
sti
push
outsb
push
stc
or
ror
fidivs
cmpsl
test
scas
xchg
xorl
xchg
sti
and
aas
daa
jo,pt
pop
imul
test
xchg
dec
jge
and
xchg
data16
inc
call
dec
inc
das
add
xchg
jbe
les
pop
pop
repz
lds
rolb
les
aas
add
inc
xchg
arpl
in
loop
adc
test
push
iret
dec
mov
iret
into
adc
cmpsl
xor
cmpsl
inc
jne
jecxz
jmp
add
call
stos
stc
test
filds
rcll
pop
jmp
out
int
or
add
test
jmp
mov
pusha
aas
lds
fs
mov
filds
mov
ljmp
cmpsl
and
mov
jo
insw
stos
and
outsb
add
int
add
out
sub
adc
pop
mov
inc
mov
xchg
ss
loopne
shlb
iret
mov
leave
push
iret
addl
lahf
jle
cmpsl
out
movsb
add
fcmovnb
cmp
hlt
addr16
mov
sarb
out
cmp
sti
sti
mov
mov
insl
stc
jge
outsl
pop
inc
subl
out
lahf
stc
pop
add
out
mov
mov
in
pop
mov
dec
test
je
out
ljmp
xor
fs
pop
std
out
and
xlat
loope
sub
mov
lret
inc
test
push
add
stc
pop
cmpsb
test
add
shll
jmp
ffreep
jle
insl
test
sub
shlb
cmpsl
jmp
iret
aas
clc
fidivrs
test
movb
jmp
sbb
out
mov
mov
rorl
idiv
sbb
push
insl
call
xadd
adc
pop
icebp
out
test
xchg
xchg
sahf
cld
xor
dec
test
jmp
mov
fisubs
pop
or
movsl
jmp
repnz
jecxz
and
mov
fiadds
mov
lahf
arpl
xchg
inc
testb
and
insb
out
push
les
imul
jmp
notl
les
into
inc
scas
shlb
test
popf
sub
stos
jmp
jnp
shrb
loope
dec
into
mov
int3
dec
rorb
pop
jmp
push
dec
outsb
pop
jg
ja
add
xchg
ja
cld
inc
push
idivb
ret
pop
and
lret
cmpsb
notb
inc
cmpsb
pop
push
fwait
idivl
xorb
xchg
jmp
or
test
insb
mov
adc
addr16
loope
movb
cmc
daa
jbe
fldt
sub
insb
popa
cmc
repz
frstor
shlb
lea
mov
inc
mov
lahf
jl
shl
test
push
data16
addr16
push
sub
test
shr
rcl
shrl
insb
push
and
les
lret
pop
jbe
test
mov
testb
xchg
out
hlt
mov
xor
mov
add
jae
in
lahf
jne
jmp
andb
aaa
xchg
addr16
pop
fnsetpm(287
dec
aad
test
fwait
stos
mov
movsl
rcrb
mov
push
jbe
cs
cmc
lret
mov
or
scas
push
sbbl
stos
movsl
sar
mov
jecxz
jb
addr16
lahf
test
mov
add
fistps
mov
cmpsl
in
hlt
mov
mov
jg
ret
or
jg
xchg
xorl
iret
test
xor
jmp
lds
mov
shlb
das
cmp
mov
xchg
dec
fildll
mov
shll
pop
jle
ja
xchg
cld
pushf
adc
into
rcl
fbstp
sbb
out
push
pop
test
fwait
mov
inc
shl
add
sub
jns
icebp
push
mov
jecxz
inc
fwait
inc
out
outsl
repz
movsb
and
fidivl
and
ja
xchg
xlat
sbb
adc
sub
sub
jmp
jecxz
lods
fwait
ret
xchg
stc
insb
daa
addb
push
cmpsb
stos
or
add
sti
stc
cmp
add
xchg
and
dec
mov
stos
mov
outsb
push
fildl
adc
lret
js
jmp
xchg
inc
push
mov
ret
jbe
mov
and
stos
xchg
divl
stc
cmp
cmpsb
add
pusha
cmpsl
jne
popa
push
fiaddl
mov
sti
mov
mov
lds
aad
cs
and
outsb
sub
jmp
es
add
scas
pop
popf
mov
pop
add
inc
test
test
jnp
std
loopne
xchg
push
scas
dec
dec
jl
cmpsl
ret
sarb
loopne
xlat
add
movsl
push
test
jne
int3
mov
or
lahf
shr
sub
and
out
pop
cli
mulb
imulb
mov
in
mov
cmp
int
insb
fwait
or
dec
insl
pop
jae
insb
xlat
xor
movsl
dec
sub
add
je
add
cmp
mov
fnstcw
sti
adc
les
pop
sqrtps
call
pop
imull
add
ja
push
inc
dec
inc
movsl
notb
fwait
and
sub
cli
xor
inc
push
int3
outsl
xchg
xchg
jno
std
cmc
mov
xchg
ds
shll
cmpsl
cmp
testb
jmp
cmc
jnp
dec
adc
cmpsl
insl
sub
out
sbb
mov
pop
in
repz
out
mov
shll
adc
out
fadd
cmp
inc
es
mov
sub
jg
bts
mov
xchg
stos
movsb
test
and
insl
call
xor
addr16
pop
xchg
inc
ret
dec
repnz
rorb
push
rcll
xor
mov
and
jge
sarb
ss
mov
hlt
mov
xchg
inc
cmpsl
leave
mov
jbe
lahf
subl
ss
mov
inc
negb
mov
incl
dec
xor
jmp
jecxz
add
push
mov
xchg
decl
out
pop
add
fadd
push
jecxz
lds
mov
push
jge
mov
test
ja
fisttps
aam
push
mov
xor
jmp
inc
ret
outsb
pop
aad
pop
xor
pop
mov
lock
lods
aam
jnp
faddl
rclb
push
jnp
les
jbe
adc
inc
sarl
stos
pop
addr16
pop
in
fiadds
rcl
and
in
test
imul
push
jmp
cmc
lds
lahf
add
fcomi
fwait
inc
loopne
stos
icebp
jbe
out
test
lds
popl
arpl
inc
cmpsl
jns
mov
imul
xlat
and
pop
jge
sti
jg
mov
inc
add
jne
stos
testb
imul
insl
aas
call
daa
loope
mov
push
out
sahf
out
mov
jle
pop
adc
inc
out
jmp
out
addr16
add
sbb
cli
mov
and
lds
cs
stc
cmpl
mov
xchg
cs
inc
mov
daa
ret
negl
push
sti
loop
arpl
xchg
ds
inc
lods
sti
mov
inc
pop
cmp
std
jo
rcr
xchg
mov
xlat
adcl
add
push
xchg
cs
outsb
mov
inc
lcall
mov
das
movb
stos
mov
push
or
insl
loopne
jge
shl
roll
fs
es
inc
push
leave
cs
mov
fisttps
push
scas
adc
mov
sub
jecxz
leave
push
ror
jae
sub
outsb
add
sbb
fnstenv
or
sti
inc
popf
xor
lds
add
lahf
out
stc
cmp
pop
aaa
ret
xchg
xchg
push
das
loop
pushl
cmpsl
inc
cmpsb
ja
rolb
les
sti
ror
arpl
ja
mov
sbb
bound
in
filds
mov
popa
cwtl
or
addl
cld
mov
jecxz
ret
xor
addr16
sbb
or
jmp
cld
and
out
xor
out
pop
ret
add
inc
aas
mov
mov
adc
ret
shl
outsl
and
adc
xchg
hlt
into
rcrl
int
les
outsl
push
inc
cmpsl
lret
push
shrb
test
push
fisttps
nop
ja
cs
xchg
fs
mov
cmpsb
daa
pop
fimuls
hlt
sar
xchg
add
xor
adc
es
mov
insl
rol
ret
pop
xchg
mov
stos
inc
mov
inc
rolb
sbb
xlat
lods
cmp
sub
ds
mov
xchg
jle
movl
sub
stos
sub
les
shll
mov
jmp
das
lock
jbe
mov
ss
cli
pop
cld
push
sbb
pop
aam
inc
jecxz
sbb
jg
jmp
push
cli
loopne
pop
mov
test
mov
lret
add
lret
ja
add
mov
push
sbb
addr16
jge,pn
and
add
std
out
mov
into
imul
or
aad
call
or
push
fsubs
or
mov
inc
test
add
inc
fldcw
cmp
push
shl
cmp
loop
sbb
outsb
push
mov
cs
pop
scas
sub
out
je
leave
pop
xchg
shr
jge,pn
das
jle
inc
pop
adc
shrb
dec
idiv
xor
std
out
and
mov
popf
inc
js
ret
push
filds
lds
dec
add
aas
out
adc
cmp
mov
imul
jmp
mov
mov
cmpsl
push
fisttpl
and
mov
add
test
jg
ret
inc
lahf
les
lock
and
popa
pop
movsb
out
mov
jnp
jp
loope
push
test
xor
outsl
adc
addr16
mov
push
mov
loopne
push
ret
adc
pop
add
lahf
push
xchg
cmpsb
mov
out
dec
icebp
es
adc
mov
sti
adc
jno
xchg
jg
mull
dec
cmp
in
shlb
in
loope
sub
shrb
popf
lods
clc
or
mov
pushf
push
loopne
ret
push
cmpsb
dec
mov
and
movb
xchg
add
jo
jg
adc
jmp
lds
in
mov
ror
in
lahf
rcll
xor
mov
sbb
jbe
ret
jae
out
in
popf
and
pushf
push
adc
sahf
mov
mov
mov
adc
dec
addr16
int3
test
lock
rcl
lods
sbbb
sub
lahf
push
lret
ret
push
xor
sbb
cmpsb
push
rcr
dec
and
ss
add
push
xlat
into
add
fst
sbb
inc
lods
aam
int3
ds
fs
lds
shlb
hlt
mov
std
cs
arpl
lret
mulb
and
xor
stc
rorb
test
int
sahf
ja
mov
or
out
cmp
cmpsl
ret
push
push
mov
push
mov
into
inc
popw
test
fisubs
js
xchg
imul
jp
dec
test
mov
xchg
adc
dec
adc
das
lahf
mov
out
push
inc
fistl
mov
mov
lret
mov
ret
adc
adc
loope
fwait
jbe
xlat
mov
push
cmpsl
test
fcompl
jecxz
xchg
hlt
insl
pop
xchg
sbb
xlat
out
push
add
rolb
mov
xor
testb
inc
shr
ljmp
and
pop
pop
movsl
mov
jecxz
mov
loopne
pop
fidivl
hlt
push
test
mov
mov
lock
mov
mov
cmp
cmp
xchg
mov
inc
adc
into
jnp
ret
push
daa
mov
testb
cli
call
jns
jbe
test
dec
addr16
mov
sbb
pop
add
fwait
test
repnz
lcall
int
xchg
fwait
and
inc
ficoml
sahf
push
push
test
adc
push
mov
jmp
mov
out
mov
arpl
add
das
mov
adc
jecxz
dec
stc
mov
std
test
mov
pop
js
leave
xor
adc
jns
jmp
add
mov
inc
out
inc
sti
sti
shrb
pop
loopne
aaa
out
mov
xchg
imull
stos
lahf
push
mov
pop
jge
nop
cmp
add
dec
jno
in
dec
int
add
sub
cli
adc
clc
cld
data16
add
dec
gs
mov
addl
jmp
int
notl
mov
addr16
or
addr16
jns
mov
outsl
lret
ja
xchg
stc
jmp
sbb
shlb
mov
ror
xor
ds
testl
xor
xlat
iret
outsb
push
mov
sub
das
push
jg
jno
inc
cld
je
ds
roll
dec
xchg
outsl
push
les
icebp
dec
shlb
and
cs
adc
out
jo
xchg
push
icebp
inc
xchg
pushf
pop
shrb
mov
adc
jb
add
nop
add
and
out
mov
shll
sub
push
mov
arpl
add
lock
mov
add
xchg
test
fwait
data16
stc
shl
mov
adc
jge
add
push
sbb
jge
ljmp
leave
dec
addr16
stos
pop
and
movl
add
fdivl
add
shr
inc
mov
outsl
out
stc
int
leave
fistps
push
ficoml
push
xor
push
and
outsb
or
ljmp
jmp
popf
mov
ss
repnz
xchg
mov
jg
mov
pop
gs
pop
div
sub
mov
testl
lahf
sarb
pop
sbb
addr16
jno
pop
insb
cmp
cmp
jno
jns
xchg
movsl
dec
outsl
adc
ljmp
inc
cmp
sbb
bound
cli
movsb
scas
aaa
in
sahf
popf
loop
outsl
mulb
stos
pop
int3
dec
mov
stos
inc
out
push
out
jmp
in
mov
xlat
inc
jecxz
jg
dec
out
je
or
stc
insl
pop
pop
loop
rcl
mov
loope
fbstp
xchg
int
mov
push
es
fistl
push
add
fbld
shll
fstl
fistl
dec
insl
dec
fwait
pop
push
xlat
sti
cs
dec
pop
scas
rcrl
test
out
stos
cmp
jge
stos
enter
mov
lock
add
mov
orl
jecxz
jecxz
mov
fwait
dec
repz
or
xor
mul
cmc
sbb
pop
push
xchg
addps
pop
sarb
inc
les
mov
aas
ja
test
aam
jg
icebp
call
fs
out
divb
xchg
add
cmpsl
test
push
testl
test
add
ljmp
decl
test
into
push
test
std
and
mov
movsl
leave
shrl
or
cld
je
outsl
mov
dec
xchg
cmp
mov
add
push
out
mov
mov
rolb
aad
notb
sahf
dec
test
mov
xchg
out
or
shrl
adc
inc
jle
inc
int
leave
insb
sbb
addr16
jmp
and
cmp
je
push
pop
ret
sahf
jecxz
stos
leave
xor
push
jmp
xchg
cmpsb
cmpsl
mov
or
roll
xchg
fwait
inc
push
add
daa
aad
mov
das
out
jns
mov
ret
iret
lret
aad
dec
int
cmpsl
imull
mov
mov
pop
cmpsb
jns
push
jmp
pop
cld
xchg
jb
jnp
aad
aaa
mov
in
mov
mulb
push
xor
mov
jg
xor
mov
xor
pusha
stos
loop
inc
xor
and
int
out
and
mov
inc
loop
in
mov
es
and
cmpsl
aas
xor
xchg
gs
add
leave
andl
xchg
addr16
sbb
jle
js
mov
dec
mov
xchg
andb
cmp
mov
mov
aas
inc
idivb
lahf
add
arpl
dec
push
cwtl
cmp
pop
xchg
loop
nop
xlat
mov
adc
mov
sub
nop
mov
scas
aad
es
and
mov
mov
push
dec
lds
daa
xor
inc
stos
loop
addr16
xchg
neg
jno
out
out
jo
pop
xchg
lahf
inc
mov
mov
mov
jecxz
addr16
inc
adc
jb
adc
cmpsl
sub
inc
test
xor
dec
mov
pop
out
pusha
adc
mov
test
mov
subb
scas
mov
lea
aad
addl
xlat
jmp
addr16
aam
daa
scas
push
sub
lods
adc
mov
hlt
jecxz
lret
jae
dec
mov
movsl
cmp
fs
xor
movsl
jbe
inc
sbb
scas
btc
mov
xlat
pop
pop
dec
insl
jecxz
lds
out
sbbl
outsb
jno
out
xchg
out
mov
mov
rorb
push
push
cmp
mov
and
cmp
test
shrb
lock
loopne
aas
scas
rcl
stos
inc
jbe
leave
dec
mov
jmp
jg
shll
insb
push
fcomi
inc
push
nop
pop
push
xchg
pusha
je
xchg
push
in
ja
test
cli
mov
or
ja
add
mov
mov
or
sbb
adc
sub
add
jne
out
test
ret
int
pop
das
xchg
pushl
xlat
out
sti
sbb
clc
add
push
ds
push
into
sahf
rcrb
xor
mov
dec
fs
xlat
cs
jp
out
push
add
shr
shl
inc
dec
mov
push
aam
push
inc
jbe
mov
sbb
enter
pushf
cmp
sti
fwait
cmc
add
das
in
sahf
movsl
mov
shrb
stc
aam
andl
dec
icebp
xchg
cmc
inc
cmp
jns
mov
pop
cwtl
scas
inc
jmp
and
mov
mov
outsb
test
jmp
add
mov
xor
cmc
out
daa
fidivrs
scas
addr16
shl
cwtl
and
jp
sub
and
stc
jge
clc
and
into
movsb
xlat
enter
into
in
and
push
jns
jb
xor
sbb
and
addl
dec
mov
sarb
lea
int3
pop
addr16
insl
scas
jle
imull
std
dec
or
cmp
fwait
adc
sar
cltd
sub
testb
std
out
xchg
faddl
aam
das
stc
out
orl
lods
mov
into
mov
imul
xlat
jge
ja
stc
xchg
call
jb
dec
cmp
push
or
test
push
dec
mov
out
inc
mov
sub
inc
dec
jge
push
jae
fwait
mov
mov
incl
inc
insb
mov
loope
xchg
clc
inc
bound
out
test
les
repz
sbb
pop
js
xlat
jmp
and
clc
adcl
inc
jg
lahf
mov
mov
lahf
lcall
cmpsl
add
loopne
mov
incb
out
test
pop
je
jmp
addr16
rcrb
testb
jge
adc
mov
stc
mov
out
stc
popf
out
subb
ja
and
addr16
fwait
daa
add
pop
pusha
xor
cmpsl
in
ljmp
or
xor
mov
jmp
push
push
out
mov
xor
sbb
movsw
out
pop
insb
pop
sub
stos
out
imul
dec
inc
and
mov
mov
test
fwait
mov
ret
clc
and
jb
fst
xchg
addr16
out
push
sub
mov
cmpsl
pop
add
jne
arpl
sub
pop
call
push
mov
stc
sub
ficoml
lods
adc
imull
jns
out
ds
fisubs
xchg
mov
jl
add
pop
jmp
daa
adc
imul
out
out
xor
jle
test
lods
add
aam
std
mov
dec
xor
es
adc
or
ja
and
sahf
jecxz
adc
jns
sbb
arpl
test
pop
pop
add
jge
xchg
popf
adc
inc
aas
insb
ficomps
add
loopne
xchg
stos
add
int
addr16
or
inc
gs
rcl
push
sar
int3
mov
jecxz
cmp
xlat
ja
xchg
iret
icebp
sub
std
ss
ja
hlt
adc
push
mov
stos
lahf
popa
pop
cmp
push
movsl
stc
clc
out
lds
adcl
jge
add
imulb
and
in
ss
fwait
jmp
ret
xor
inc
adc
in
into
scas
mov
add
xor
mov
dec
ja
inc
movl
daa
data16
and
stos
dec
outsb
pusha
dec
out
addr16
mov
mov
jg
jge
lds
test
pop
or
adc
xchg
push
imull
mov
insl
jp
mov
mov
mov
sarl
fs
es
xchg
adc
clc
cmp
cmp
mov
mov
int
scas
xor
adc
pusha
test
repz
mov
psubb
or
scas
insb
aas
mov
adc
out
inc
inc
adc
jmp
movsl
sbb
enter
stos
xor
inc
cli
into
pop
das
neg
dec
test
push
cmp
outsl
sub
sub
test
inc
fstpl
nop
push
xchg
rolb
imul
cs
mov
inc
push
mov
stos
in
mov
dec
inc
add
rcl
and
rcrl
and
xchg
nop
and
in
jge
push
jnp
test
scas
gs
sbb
scas
out
mov
dec
sarb
cs
int
cs
cmc
inc
or
dec
fs
outsb
sbb
mov
pop
lahf
int3
in
mov
mov
fistpll
int
dec
stos
mov
mov
scas
pcmpgtd
jmp
jmp
push
adc
enter
dec
cmp
jmp
cld
out
add
push
scas
hlt
decl
dec
inc
test
out
mov
adc
inc
cmpsb
xor
mov
scas
mov
daa
pop
mov
mov
sarl
pop
mov
movsl
jb
jno
xlat
xor
fsubrp
sarb
ja
scas
jecxz
arpl
xorl
sub
jb
fwait
mulb
add
xchg
inc
dec
mov
adc
mov
or
xchg
imul
std
mov
lahf
fwait
xchg
add
dec
addr16
and
cmpsl
mov
jle
mov
and
dec
sbb
aad
out
jbe
dec
add
in
fwait
cmp
push
inc
aaa
cs
cmp
sub
repnz
sub
fwait
cmpsb
cmc
out
mov
mov
test
xchg
xchg
test
ret
cmpsb
dec
pop
jge
xchg
leave
cmpl
xchg
lods
clc
movsl
adc
jle
clc
mov
pusha
inc
les
mov
out
scas
pop
sub
movsl
aaa
cmpsl
push
pop
bound
xor
lods
js
xchg
jnp
out
fists
jecxz
jmp
test
jge
clc
dec
adc
std
fisubrs
loope
jnp
add
ja
cld
inc
mov
xor
lods
out
dec
push
mov
out
xor
sar
enter
cmp
push
xchg
icebp
arpl
jno
mov
sbb
xor
int
inc
lds
outsl
ret
mov
jp
sbbb
pop
mov
add
leave
add
popf
out
fbstp
push
lds
mov
repz
rorb
fwait
mov
ja
xchg
shll
test
loopne
mov
in
mov
add
sub
xchg
inc
pop
out
mov
xor
mov
jno
test
aam
out
mov
incl
insl
pop
frstor
scas
cltd
adc
xchg
test
les
outsb
or
lods
fdivs
pop
dec
cmpsl
in
sahf
loop
lret
push
mov
pop
stos
pop
int
push
sbb
shlb
pop
test
insl
dec
ret
sbb
jbe
push
and
pop
loopne
cmpsb
pushf
arpl
in
outsb
daa
pop
or
test
mov
ret
fldcw
addr16
mov
jge
les
inc
cmp
add
inc
jb
rcrl
popf
add
adc
jno
sbb
sbb
daa
mov
jns
fnstsw
scas
sti
sbb
or
pop
dec
shlb
push
out
jmp
add
cmp
lea
cs
iret
leave
movsl
out
das
sti
js
pop
test
and
mov
inc
sti
jne
mov
adc
ret
enter
cmc
outsb
out
pop
subl
stc
ljmpw
movsl
jne
jnp
xchg
xlat
test
out
jmp
fwait
jnp
pop
lea
xlat
scas
cwtl
add
loopne
xchg
adc
das
std
les
xor
pop
ds
mov
insl
xor
cmp
inc
mov
por
and
out
sbb
test
sti
test
mov
inc
cli
clc
xchg
rcll
cmpsb
repz
add
aam
std
fiadds
xor
in
in
xor
push
clc
xor
and
ficoml
mov
jne
push
push
shll
push
fbstp
jmp
test
nop
ret
jle
dec
xor
sti
rolb
cmpl
xchg
sbbl
stc
sbb
xchg
icebp
adc
in
mov
dec
orl
cmp
pop
or
add
incb
mov
js
pop
dec
icebp
mov
iret
xlat
pop
cmp
retw
loop
fisubrl
add
cmp
rolb
push
or
xchg
inc
add
shr
xor
test
cmpsl
std
icebp
cs
xor
stos
lret
inc
add
or
cmpb
dec
test
xchg
pop
leave
data16
cltd
sub
je
cmpsb
xchg
aad
xchg
xlat
leave
adc
movsl
inc
stos
iret
loopne
and
aas
popf
addr16
shlb
inc
rolb
add
cs
je
loop
and
rorb
fs
mov
in
mov
mov
jno
dec
fimuls
xchg
xlat
and
push
and
outsb
push
test
push
or
push
ficoml
shl
dec
idivl
adc
test
loop
inc
mov
mov
clc
dec
add
adc
mov
jg
add
pop
mov
jno
in
adc
popf
inc
cld
pop
add
pusha
in
fmull
aaa
push
mov
and
or
test
pop
fwait
jmp
popa
push
iret
pop
push
mov
mov
shrl
inc
fbld
das
add
xlat
scas
int
jae
mov
addr16
mov
movsl
xlat
add
jbe
test
sarb
mov
leave
jbe
aas
lods
das
push
in
push
scas
xchg
imul
test
sti
in
xor
sbb
sub
sub
movsb
jl
mov
ds
cmp
cmc
fwait
inc
jb
notl
hlt
sti
fwait
out
ret
mov
shrb
jg
xchg
test
ss
addb
push
mov
dec
add
sti
testl
mov
jecxz
cmpsb
pop
xchg
and
adc
in
inc
aad
dec
loop
xchg
cmp
popf
cld
inc
movsb
mov
insb
ds
pop
push
repz
stos
icebp
pop
jmp
pop
out
cmc
outsb
pop
rcrb
jl
sti
dec
insb
adc
push
push
les
sti
push
mov
scas
cmpsl
cmp
ficoml
fsubrp
stc
pop
daa
lret
and
mov
cmp
add
ret
xchg
imul
mov
addw
out
adcb
icebp
mov
jns
ret
push
addl
out
popl
out
loopne
into
push
and
add
sbb
mov
add
les
ja
add
xchg
or
jecxz
inc
test
aaa
sbb
arpl
push
sahf
add
cli
lds
ja
jmp
negb
xchg
insl
shl
xor
cmpsl
dec
subb
fistps
addr16
shrl
lock
push
mov
incb
mov
jg
pop
pop
test
into
cmp
call
dec
push
mov
push
imul
xor
ja
movsl
cmpsb
divb
lds
movsb
cmp
xor
imul
shrl
shl
adc
cmpsb
jnp
shll
test
sti
lock
jmp
cmpsl
out
outsb
jno
jmp
dec
mov
outsl
add
jne
loop
cli
movsl
inc
mov
pop
mov
pop
into
arpl
mov
cld
fldenv
xor
sbb
and
imul
je
dec
cmp
fs
rcrl
iret
in
mov
xchg
shlb
dec
sub
mov
bound
js
xor
mov
sub
mov
mov
fcomps
jno
movsl
xlat
mov
push
mov
ljmp
testl
leave
out
test
in
pop
sahf
icebp
pop
push
ss
pop
jbe
add
notl
push
or
mov
lds
jmp
lcall
push
inc
mov
gs
jmp
in
and
mov
sti
xchg
cmp
in
mov
rep
jne
xlat
jb
icebp
and
and
jns
test
popf
mov
lods
xlat
in
add
lods
cmpsl
cmp
pop
push
ljmp
repnz
xor
sbb
push
fsubs
mov
push
push
ja
in
insb
sub
icebp
pop
cld
fwait
arpl
mov
push
push
pop
out
mov
inc
sbb
lcall
outsb
inc
fistpl
mov
push
xorl
cltd
mov
add
pusha
test
push
add
sub
das
adc
test
lods
pop
lret
pop
daa
dec
mov
pop
xlat
sbb
adc
mov
pop
and
and
mov
movl
mov
mov
or
fnstsw
pop
aad
xor
sub
in
mov
cmpl
out
std
idivb
mov
inc
cmp
imull
ds
fnstcw
aas
jb
cmp
cli
ja
lcall
xlat
inc
pop
jbe
cmpsl
ffreep
mov
dec
imul
add
out
inc
out
outsl
push
jmp
pop
testb
cs
shll
fimull
cld
mov
add
rcll
aas
stos
loope
and
hlt
aad
loop
jns
ja
sub
fs
sbb
mov
inc
popf
pop
popf
jo
das
inc
rolb
std
inc
cs
out
fs
fstpl
adc
jo
fisubrs
fists
pop
in
cmp
xchg
imul
adc
shrl
pop
out
jno
in
and
fstpt
mov
or
push
test
in
andl
out
test
mov
pop
arpl
push
xor
push
pop
jae
mov
mov
in
movsl
push
fwait
mov
iret
lahf
add
xchg
jb
or
xlat
subb
adc
mov
loope
adc
inc
pop
std
lcall
loopne
out
adc
inc
in
shl
addr16
test
daa
push
mov
insl
popa
mov
outsl
inc
ljmp
daa
rcrl
cli
and
test
mov
pop
ret
arpl
sbb
fwait
sahf
jecxz
pop
pop
jo
outsb
or
leave
xchg
fs
fs
out
sbb
pop
mov
pusha
scas
call
pop
inc
xor
fucom
into
inc
jp
jecxz
cld
stos
mov
add
cli
lret
inc
mov
jbe
xor
xstore-rng
imul
pop
outsl
pop
inc
ret
cld
and
cmp
rol
adc
mov
add
cld
rcrl
push
and
dec
out
outsl
rcrb
sbb
notb
into
fldt
js
cmp
pushf
out
pop
cmp
jmp
int
fildll
mov
mov
xor
mov
shrl
adc
repz
sti
sub
ss
jmp
fstpt
imull
cmp
jmp
xchg
inc
or
mov
add
ret
mov
ret
cmp
sbb
dec
daa
jmp
bound
loope
pop
out
jge
pusha
push
mov
cmp
enter
loop
mov
shlb
fisubs
xor
movsb
test
scas
bound
fs
mov
sti
cmp
cmc
dec
cmpsl
push
xor
dec
out
test
jne
roll
fwait
pop
jns
notl
ret
sti
jnp
cmp
cmpsl
xchg
mov
clc
and
mov
sbb
fildl
daa
pop
movsb
testl
lcall
adc
lds
out
inc
movsl
mov
aam
scas
and
add
lds
aaa
addl
push
cmpsb
sarl
in
out
and
inc
movsl
js
add
mov
add
hlt
shlb
aas
int3
inc
outsl
push
cmp
and
add
shll
mov
bound
out
lds
jge
sbb
lahf
inc
mov
addr16
add
inc
add
stos
gs
pop
sbb
pop
mov
fcomi
ss
rclb
cld
sti
loopne
pop
or
std
mull
out
shlb
ds
out
push
sbb
jno
push
mov
subl
jns
push
and
icebp
pushl
mov
stos
mov
movb
aam
jb
and
jg
data16
push
icebp
sbb
aas
push
ret
pushl
frstor
mov
cmc
test
fnstenv
out
cmp
cmp
pop
aad
ljmp
rcr
subl
fildl
fsubl
stos
test
xchg
fbld
dec
imul
aad
pushf
int3
xchg
inc
aad
into
int
loope
jo
cmpsb
std
es
mov
cld
add
jno
add
ljmp
push
fsubrp
push
xchg
pop
scas
or
jbe
test
lahf
jecxz
das
push
imul
inc
cli
xor
addl
inc
or
jae
andl
jg
jmp
lds
pop
test
decb
popf
hlt
ljmp
cmp
jecxz
mov
or
sub
std
push
push
pop
jnp
ja
pop
imul
fs
aad
pop
aad
pop
and
and
rcl
inc
pop
in
roll
inc
pop
lahf
insb
mov
ja
and
data16
out
jmp
mov
mov
jnp
fldcw
push
and
test
adc
mov
fs
and
sub
cs
jle
in
xorb
pusha
pop
outsb
ja
cltd
aad
je
loopne
sbb
add
mov
cli
cmp
mov
push
in
inc
imul
js
xchg
jg
test
inc
shll
rcrl
addr16
sub
mov
inc
push
out
pusha
dec
jmp
in
fucom
shr
jns
xchg
cs
iret
mov
xchg
xor
mov
scas
lahf
mov
cmp
lahf
icebp
inc
test
mov
out
and
ret
addr16
scas
xchg
push
subb
addr16
test
ds
jbe
clc
in
call
push
or
pop
xor
aad
inc
or
or
xor
ficoms
in
out
inc
mov
outsl
out
roll
fmul
lea
hlt
into
inc
arpl
xacquire
into
mov
dec
cld
sub
xchg
cs
xor
shrl
cmp
lahf
cmpsl
cwtl
out
clc
popf
loopne
cmpsl
movsl
push
jnp
addr16
mov
clc
mov
add
add
loope
cmp
hlt
je
out
push
int3
test
in
push
mov
mov
in
mov
mov
out
mov
mov
inc
xor
mov
bnd
out
lds
jnp
data16
hlt
je
add
xchg
out
testb
cmpsl
out
xchg
notb
in
inc
mov
xchg
lds
jnp
divb
mov
in
push
mov
daa
or
cmc
std
imul
pop
insl
dec
mov
jno
lret
inc
popf
dec
push
dec
jne
jno
xchg
imul
lea
cmp
gs
shll
xchg
pmulhw
in
popfw
std
ja
cmpsl
push
xchg
ja
cld
pop
inc
cld
hlt
movsb
jmp
mov
push
les
test
dec
jecxz
xor
cld
fdivl
insb
test
in
cmp
popf
xchg
sub
mov
jg
in
pop
jecxz
test
push
mov
in
mov
in
out
push
or
bound
or
inc
data16
jno
int
pop
jle
inc
enter
push
in
push
cmp
xchg
mov
repz
aad
lcall
pushf
xchg
movsb
xor
imul
lods
and
lods
dec
sahf
rorb
je
push
pusha
xor
pop
dec
xchg
pop
ds
test
xchg
cmpsb
inc
push
js
xor
insb
mov
jge
mull
xchg
jge
jmp
cmp
stos
jge,pn
into
mov
add
xchg
ret
int3
aam
push
xchg
jo
stos
in
scas
leave
xor
cli
pop
adc
mov
jle
jbe
out
sbbb
cltd
std
xchg
idiv
es
std
clc
push
xor
bound
inc
cwtl
jbe
in
test
push
xchg
fisubs
in
dec
loope
inc
or
int
outsl
movsl
cld
ja
mov
popa
bound
xchg
fwait
outsb
mov
test
iret
pop
cmp
xchg
outsb
jbe
in
lret
incl
outsb
inc
aad
and
incb
test
das
pusha
mov
cmp
in
out
cmpsb
pop
popf
xchg
bound
sub
fadds
es
std
mov
pushf
hlt
sub
push
cmpsl
arpl
insl
sbb
pop
iret
dec
test
push
mov
inc
pushf
xchg
inc
test
addl
sub
pop
insb
and
icebp
xchg
lcall
gs
movsl
out
aas
in
cmp
in
push
es
retw
inc
fstpt
mov
mov
gs
insb
cmp
jle
cli
xor
in
loope
fnstsw
pop
push
mov
xchg
jmp
out
dec
fisubrs
std
aad
sbb
addr16
jnp
fisttpll
sarb
addr16
mov
cmc
mov
add
addr16
push
les
jne
cltd
add
stc
add
push
mov
adc
cmp
stos
jp
jno
mov
aas
bound
and
jp
int
in
test
pop
fbld
jne,pt
mov
lcall
and
inc
mov
xor
imul
sub
negl
pop
xchg
out
fstl
lcall
sbb
mov
mov
lahf
inc
pop
insl
adc
movsb
lods
repz
fstpt
popf
in
pop
push
jg
cmp
mov
in
mov
inc
xor
mov
adc
jnp
addr16
add
insb
cmpsl
mov
sbb
int
or
test
mull
lret
mov
and
mov
xor
cltd
fisubl
lds
xchg
jb
ljmp
insl
sub
loop
push
int
aaa
and
pop
arpl
dec
loope
in
jne
imulb
in
pop
incb
pop
fimuls
test
test
mov
stos
lock
mov
xchg
in
je
jae
aaa
in
cmp
pushl
sbb
push
stos
jb
lds
push
and
int3
mov
mov
lea
mov
mov
cmp
mov
add
in
inc
dec
xchg
not
decl
mov
mov
xchg
xor
in
pop
mov
lds
add
cmp
outsl
mov
push
rclb
dec
scas
fisttps
pop
and
mull
mov
xchg
fstpt
outsl
stc
aas
adc
or
in
sbb
cmp
out
jb
movsb
aaa
in
loop
addr16
fstpl
mov
push
loope
decb
shl
mov
lods
leave
sti
loopne
div
popa
pushf
jne
xor
rcrl
jne
add
xchg
dec
enter
fstl
ja
mov
cmp
lods
sbb
shll
testb
inc
cli
pushl
xchg
out
mov
adc
out
sar
jb
add
test
xchg
lahf
xchg
out
outsb
movl
mov
insl
pop
out
xchg
inc
push
jp
pushf
sti
xchg
jnp
pop
test
pop
int3
mov
add
jnp
idiv
in
sub
mull
movsl
xchg
push
cmpl
jb
sar
mov
scas
stc
cmpsl
stc
lahf
inc
rorl
stos
jbe
addr16
lret
sbb
mov
sbb
dec
xchg
push
les
insb
push
test
cwtl
jno
pusha
pop
hlt
imul
cmp
xchg
push
sbb
insb
xchg
mov
jae
dec
mov
lahf
push
movsb
pusha
pop
push
mov
mov
nop
sti
and
sub
mov
ret
insb
pop
loopne
movsb
inc
test
mov
adc
lods
xor
popa
out
push
xor
out
fisubrs
scas
mov
jno
mov
std
jmp
sbb
ljmp
pop
xchg
loope
aam
arpl
out
or
add
in
std
cmp
cld
ss
into
in
stos
sbbl
icebp
scas
pop
fcom
or
and
ljmp
test
ret
repnz
jo
jns
scas
mov
jno
fcomi
jg
in
cmp
jg
ja
out
test
dec
pop
jg
ret
pusha
hlt
jg
mul
in
add
inc
lds
jnp
mulb
aaa
and
cld
das
mov
and
inc
jnp
idivb
ja
out
lds
jnp
test
inc
sub
add
lcall
sub
add
out
push
pop
in
xchg
in
xchg
rorl
loopne
es
sbb
pop
mov
dec
cld
push
out
das
loop
outsb
add
hlt
rorb
add
fisubl
and
push
adc
cmpsl
ret
stc
ljmp
sti
adc
in
je
dec
xchg
std
je
decb
fdivrs
sar
xor
aad
jge
mov
add
xchg
imull
adc
cmp
jle
in
fs
push
cwtl
mov
insl
add
outsb
cmpb
cmp
addr16
xchg
pop
fildll
aas
pop
subl
push
insl
mul
mov
testb
lahf
mov
iret
lds
fdivs
insl
push
es
rolb
xchg
jg
ja
push
inc
xchg
insl
pop
xchg
std
jnp
mov
data16
inc
insl
cmp
dec
movsl
add
movsb
inc
negb
ja
cmp
xchg
bound
mov
mov
lds
cli
sbb
jbe
lret
and
int
ja
iret
cld
cmpsl
negb
sub
push
int
rol
pusha
scas
push
inc
mov
dec
ljmp
daa
push
jne
test
push
pop
mov
mov
fsubr
out
call
lds
and
xchg
mov
mov
and
popa
lds
in
add
arpl
cmpl
ret
in
add
and
inc
out
lds
movsl
rolb
data16
out
lds
mul
clc
jg
in
loopne
mov
push
incl
add
jge
popf
stc
cmp
sub
outsl
add
cld
inc
cmpb
mov
mov
test
push
xor
add
int
addl
out
lds
in
mov
jg
jbe
mov
mov
shl
push
mov
jo
xchg
sarl
nop
or
int
adc
xlat
add
sarl
xchg
inc
fwait
ja
jo
mov
ja
sbb
std
mov
scas
inc
ret
rcll
cmp
lods
mov
addb
out
lods
lock
data16
subl
fucomp
jne
pop
mov
mov
iret
sbb
mov
mov
and
pop
ret
popa
out
mov
and
mov
fs
adc
sbb
and
aam
mov
inc
sarl
in
pop
jle
mov
cld
mov
out
fwait
lret
mov
ret
inc
sub
or
xor
add
cmp
test
rcl
xchg
cmp
pop
sahf
lahf
xchg
in
fisubrs
mov
filds
push
cld
mov
cmp
js
in
add
mov
aaa
jmp
in
mov
test
cmpsl
ret
insl
xchg
data16
fildll
movsb
lahf
inc
jle
jmp
lds
push
repz
push
in
push
jae
insb
movsb
inc
cmpsb
mov
push
pushl
mov
xlat
xchg
loop
lea
shlb
movsl
jge
int3
push
mov
sub
jne
xchg
hlt
mov
mov
jle
mov
lret
push
sub
jbe
in
pushf
cmpsb
inc
lods
mov
and
insl
lea
xchg
loop
mov
insl
pop
mov
mov
roll
test
add
xor
shlb
pop
mov
addr16
mov
cmpl
xor
pusha
inc
inc
insb
cmpb
or
cmp
pop
inc
and
jmp
sbb
xchg
test
pop
stc
jnp
out
daa
xchg
jge
inc
testl
repz
sub
push
and
xchg
ret
popa
mull
mov
xlat
pop
divl
xor
ja
cld
inc
testl
idiv
adc
lods
iret
out
movsl
xchg
test
add
fwait
inc
idiv
push
fildll
adc
repz
xchg
std
inc
pop
jo
push
push
imull
and
repz
xchg
nop
inc
pop
add
mov
pop
dec
add
jmp
pop
xchg
rolb
outsb
add
repz
inc
idiv
lock
jo
add
repz
xor
stc
and
roll
repz
xchg
movl
jmp
out
xchg
popa
inc
pop
incb
jno
repz
addl
repz
xchg
mov
mov
repz
xchg
mov
loope
repz
xchg
movl
out
daa
xchg
test
xor
iret
iret
out
push
das
xor
out
inc
pop
incl
sub
ret
add
adc
xor
repz
xchg
push
inc
pop
jae
sub
mov
roll
jecxz
add
repz
xor
pop
push
addl
es
mov
incb
inc
testl
repz
mull
shll
or
stc
sbb
out
outsl
das
div
cmp
dec
mul
pop
outsl
das
div
push
stc
js
shll
repz
cwtl
gs
mul
test
xchg
std
mov
pop
enter
repz
call
add
repz
in
mov
idiv
sbb
out
daa
xchg
lds
inc
pop
add
in
test
iret
out
daa
xchg
std
mov
daa
iret
out
daa
xchg
test
test
leave
daa
xchg
test
ja
jmp
xchg
test
xchg
stc
or
out
daa
xchg
test
cmp
dec
out
enter
jmp
xchg
xor
test
mov
cs
xchg
sub
clc
test
mov
js
andb
je
ss
sahf
lret
mov
or
insl
xlat
xorb
fbstp
jmp
mov
dec
lock
sti
or
ljmp
mov
push
daa
xchg
aad
dec
into
cmpsb
sbb
mov
mov
ljmp
outsb
ficomps
in
jnp
dec
clc
push
aas
cmp
mov
fiadds
sbb
repnz
orb
jle
xchg
dec
or
and
ljmp
cs
jb
daa
jnp
dec
in
popf
sbb
jb
ficoml
mov
dec
cmpl
cld
xlat
in
sbb
cs
or
ljmp
add
test
push
stos
test
push
iret
jle
push
mov
imul
pop
or
aad
add
sahf
test
fidivrl
lea
sbb
aad
fstpt
or
dec
dec
ret
or
test
jp
xor
inc
mov
and
and
lret
mov
or
daa
jecxz
out
iret
testl
add
stc
fs
xchg
sub
daa
mov
test
jmp
mov
mov
xchg
lahf
dec
cmc
push
push
push
and
lret
jmp
imul
mov
dec
ret
push
cli
cmp
repz
cmpsl
jp
fiadds
std
sub
or
int
out
cmpsl
push
das
ja
xor
lret
cmp
jmp
pop
push
fadd
jg
ljmp
out
fs
lds
pop
lea
dec
pop
aas
cs
inc
adc
jp
dec
pushf
addb
jg
cs
mov
xor
jle
repz
ja
fldenv
shll
andb
in
inc
or
test
push
rorb
test
jmp
xchg
push
pop
pop
xchg
sti
test
or
sbb
out
fwait
lds
scas
std
pop
or
push
sbb
sub
jb
lcall
xor
mov
lea
push
fwait
call
push
xchg
test
jae
sarl
mov
out
push
inc
dec
sti
icebp
lods
pop
push
xor
mov
xchg
ljmp
pop
imul
or
dec
movsb
inc
mov
sub
xchg
icebp
repnz
xor
jne
in
adc
pop
stos
xchg
andl
xchg
mov
mov
ret
dec
imul
movsl
pop
pusha
pop
dec
setl
pop
int
sahf
dec
mov
xorb
mov
sub
in
push
lret
or
mov
shl
cmpsb
test
mov
or
pop
cld
test
fmulp
loopne
push
aad
stc
lds
push
clc
mov
inc
lcall
insb
mov
mov
push
loope
imul
or
popf
lds
cli
mov
or
or
and
jmp
sahf
pop
or
xor
dec
call
xchg
ljmp
loope
pop
repz
shll
stos
in
dec
out
sti
lds
jb
mov
lock
cmpsb
mov
xchg
xchg
jae
dec
mov
sahf
test
es
lret
sbb
mov
mov
adc
pushl
xorl
mov
push
fimull
jnp
jne
movsl
mov
aas
jb
sub
int3
fiadds
pop
xchg
push
in
push
sbbb
pop
in
and
push
or
sub
aas
sti
add
std
sahf
mov
into
and
aas
rcl
and
enter
push
clc
movsl
and
aas
inc
sysenter
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
daa
jle
sbb
push
jmp
call
les
push
mov
call
jbe
loopne
shl
movsl
xorb
mov
mov
icebp
shll
push
lock
js
cmp
xchg
dec
std
mov
mov
mov
imul
push
jmp
subl
cltd
push
subb
sbb
mov
mov
sub
and
and
and
and
cwtl
and
and
and
imulb
mov
lds
xchg
push
or
push
cmp
sub
in
xchg
mov
lea
inc
mov
ds
push
ljmp
mov
dec
out
fisubrs
ljmp
shr
push
out
cs
imul
push
jmp
iret
es
out
ds
inc
ss
cs
push
pop
xchg
fists
inc
xchg
push
xchg
insb
adc
push
loopne
mov
out
push
mov
mov
mov
mov
xchg
ljmp
inc
call
jnp
cmp
push
popa
push
js
out
jle
loopne
shl
lea
inc
and
and
inc
aas
ss
push
test
push
push
adc
shl
mov
adc
adc
adc
adc
adc
adc
mov
push
cmp
std
xchg
and
lea
jmp
orl
nop
mov
popl
loopne
fistpl
imul
lock
leave
out
push
xchg
imul
or
daa
cmpsl
inc
jecxz
jnp
adc
mov
mov
aas
imul
push
push
jmp
sub
jmp
xor
push
fldcw
push
loopnew
sarb
and
rorl
stos
or
or
out
cs
int3
lods
lret
add
adc
mov
enter
clc
es
mov
inc
clc
cmpl
cmp
cmp
inc
pop
push
je
fs
push
out
xor
and
mov
push
ret
push
mov
out
jne
pop
sbb
pop
cmpsb
adc
cvttps2pi
lcall
or
or
or
or
push
pop
into
out
int3
cmpsb
lret
ror
adc
stc
in
clc
xor
jae
loop
outsb
xchg
ss
cs
push
sbb
ret
jne
ss
or
cmc
pusha
lds
and
and
and
cmp
adc
loop
jp
xchg
xor
adc
popf
loopne
push
jo
testl
movsl
xchg
mov
rcr
ss
ss
cs
es
push
inc
push
daa
or
negl
jmp
adc
cltd
push
jmp
out
cmpsb
shlb
sub
movsl
inc
jno
inc
and
and
scas
test
cs
in
inc
jne
mov
dec
and
jg
push
jae
inc
jp,pn
les
pop
xchg
jecxz
fdivs
sbb
stos
cmpl
lock
shlb
sub
jbe
ja
adc
pop
out
pop
outsl
jge
xchg
outsb
loopne
fisubs
mov
xchg
pop
je
fs
or
loopne
shlb
cmpb
sbb
rcrb
idivl
inc
pop
mov
jns
lret
jne
hlt
leave
insb
loopne
imul
addr16
loopne
sarb
inc
adc
andb
mov
inc
inc
push
inc
test
shrb
je
fs
push
or
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
cmc
vucomiss
push
add
enter
orb
mov
loopne
pushf
push
fs
inc
xor
and
mov
mov
mov
mov
mov
mov
fiadds
xchg
sbb
xor
ret
iret
movsl
jbe
into
fmul
inc
int3
jmp
outsb
repz
es
add
movsb
loop
jno
sarl
repz
in
and
cmp
js
cmp
loopne
add
adc
inc
out
je
addr16
daa
inc
out
cmpsb
and
adc
adc
daa
test
sbb
add
jmp
push
inc
rolb
and
sbb
and
and
add
mov
ret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
push
add
loope
rorl
push
orl
and
add
loopne
rorb
push
addb
mov
inc
inc
daa
and
and
repnz
call
xchg
daa
xchg
pop
add
shr
les
scas
popf
cs
imull
std
shll
xorps
xchg
xor
in
loope
in
mov
lock
out
mov
or
mov
in
ljmp
fcmovne
or
loope
cmc
mov
ja
test
mov
jns
movsl
and
icebp
mov
push
ror
pop
cmc
jne
in
xor
addr16
dec
and
sub
dec
and
xchg
sbb
addr16
pop
iret
dec
outsl
fwait
mov
inc
pop
jg
scas
jp
scas
stc
jno
cmpsl
fnstenv
lock
aas
push
popl
add
gs
lods
jg
ret
xlat
xchg
cmp
jnp
mov
fcomip
inc
imul
and
mov
int
sub
popf
or
add
xchg
lock
sub
pop
mov
ret
xchg
rol
inc
test
jmp
sub
test
cltd
pop
or
dec
stos
ret
pop
lock
fbld
ret
andl
sbb
aam
fldl
dec
mov
dec
or
aam
cwtl
mov
je
aam
mov
iret
inc
jle
inc
andb
loopne
add
inc
out
mov
fwait
xlat
test
subb
inc
inc
stos
sbb
add
ret
decl
icebp
adc
sbb
lahf
subb
jmp
jo
and
aas
mov
test
scas
shr
dec
xlat
sti
stos
inc
adc
out
fildl
jle
add
xlat
and
sub
or
push
aas
mov
mov
daa
shrb
pop
roll
pop
in
jbe
or
fstpl
inc
and
adc
cmp
mov
addr16
dec
mov
lock
roll
loop
mov
addl
inc
cmp
js
inc
dec
es
sbb
mov
lds
inc
std
ljmp
jne
shrb
repnz
in
inc
add
xchg
dec
sbb
cmp
mull
idivl
rolb
rcrb
xchg
jle
add
inc
xchg
out
cld
mov
jnp
inc
lea
fs
fildl
mov
xchg
pop
mov
subb
sbb
fisttpl
jbe
test
and
pop
mov
les
add
das
and
cwtl
out
add
aaa
rclb
lret
or
outsb
mov
shll
mov
xor
out
iret
pop
pop
cmc
xchg
or
xchg
mov
mov
addl
add
testl
loopne
lds
sarb
ret
ret
xchg
and
ficoms
mov
and
inc
pop
xlat
mov
pop
mov
xorb
sub
pop
xorb
insb
sbb
pop
sti
out
fstpt
out
jcxz
mov
mov
fwait
mov
inc
push
sbb
cwtl
cmp
das
loop
xlat
sub
dec
inc
xchg
mov
xchg
aad
movsl
enter
mov
js
cmp
dec
cmp
add
inc
test
cmpsl
out
loope
pop
mov
cmp
inc
mov
inc
and
pop
push
data16
ds
jnp
inc
xchg
loopne
aad
inc
sbbl
ret
loope
out
inc
or
cmpsb
ret
cmpsb
mov
insb
cmpsb
aas
adc
out
dec
div
lea
pop
dec
scas
jg
iret
js
notl
xchg
scas
mov
adc
mov
inc
lock
es
mov
jl
in
idiv
addr16
pop
in
xlat
loope
mov
adc
ficompl
xchg
pop
lahf
pop
add
xlat
add
clc
popa
inc
in
jmp
test
das
push
cmp
or
dec
imulb
int
notb
lahf
mov
sbb
test
call
mov
loope
jnp
fsubrs
test
out
hlt
daa
or
inc
scas
jmp
sbb
and
rol
stc
push
loopne
and
rcrb
xchg
inc
mov
call
jmp
out
sarb
mov
mov
shlb
sbb
inc
inc
fwait
daa
out
ljmp
pop
jbe
add
sar
lea
cmc
repnz
daa
mov
or
mov
test
jno
xor
fildl
mov
fimuls
test
mov
das
les
rol
dec
or
dec
push
mov
mov
sahf
push
mov
jecxz
push
cmp
pop
ficomps
cmp
dec
sarb
jb
fwait
fwait
adcl
loop
sbb
aad
xchg
into
mov
xchg
push
negb
aad
test
aas
sarb
std
mov
fbstp
jo
sbb
push
roll
inc
fsubs
rcrl
int3
mov
int
and
pusha
les
aam
jge
out
fs
xlat
pop
mov
mov
les
pop
das
mov
cmc
mov
dec
pop
fmuls
pop
jge
cs
and
ja
push
jae
add
inc
mov
add
mov
in
inc
jnp
pop
pop
dec
incb
in
out
cmp
lock
ret
cmpsl
xchg
incb
jo
lret
sbb
arpl
out
imulb
lret
jmp
sar
mov
repnz
rclb
jae
xorl
fwait
fs
movl
push
mov
popa
dec
pop
mov
lods
sbb
inc
cli
inc
xchg
mov
and
ds
andb
lock
cmp
inc
inc
jno
int3
fcmovne
mov
mov
mov
push
rorl
xchg
addr16
mov
fs
ja
sub
data16
aam
or
jne
xchg
imul
cli
cmpsb
push
xor
cmpb
mov
roll
sbb
addr16
fwait
arpl
mov
push
adc
xor
mov
or
mov
xchg
sbb
pop
and
and
mov
cmpsl
cmp
mov
fists
cmc
fistps
inc
roll
cmpsb
out
pop
pop
lock
sub
xchg
pushf
adc
cli
xlat
adc
push
add
iret
xor
test
jnp
notl
out
inc
cmp
inc
and
daa
hlt
outsb
outsl
jg
xchg
pushf
aas
and
xlat
outsb
out
jle
idiv
jg
mov
ficoms
xor
test
lods
movsl
or
jle
insb
mov
fisttps
xchg
xchg
stc
out
and
jne
ja
aaa
mov
pop
mov
jecxz
jp
pusha
je
jno
adc
pop
loop
jns
inc
sbb
lds
mov
mov
push
mov
bound
ds
xor
cwtl
add
popa
out
xchg
sbb
jnp
movsl
aaa
mov
jb
sti
sti
rorb
ror
jnp
mov
xlat
add
fcmovne
mov
int3
rcr
out
movsb
bound
inc
fsubs
fwait
iret
mov
mov
imul
addr16
xchg
adc
push
jnp
pop
pop
lods
xchg
mov
mov
add
rorl
insl
repnz
dec
aad
das
ret
daa
js
aas
cmpsb
sbb
xchg
mov
fsubl
popa
add
mov
jl
sbb
cmc
je
loope
lret
jge
movl
in
daa
lret
insl
and
in
push
outsl
mov
cmc
pop
xor
push
ss
push
in
imul
pop
in
imulb
jg
xchg
repnz
xchg
and
pop
push
in
lock
xor
popf
mov
into
cli
dec
shlb
movsl
test
jp
scas
push
sbb
mov
and
mov
mov
es
out
pop
xchg
add
test
mov
ds
push
out
mov
testl
inc
push
inc
std
mov
jns
mov
div
nop
push
scas
insl
jge
mov
and
and
cmp
adc
lret
mov
das
shrb
sahf
push
ds
push
cli
xchg
xorl
jmp
loope
and
sti
mov
ret
pop
jl
mov
pop
and
xchg
pop
inc
cwtl
iret
cmp
std
test
outsb
cmpsb
jo
sub
or
xchg
mov
mov
mov
fcmovu
in
xchg
out
sub
fnstsw
jmp
mov
int
fldenv
xchg
call
imul
pop
push
mov
mov
fbld
cmp
sar
inc
aaa
mov
repnz
and
ljmp
icebp
fs
xor
lea
jg
push
ret
jnp
sbb
aad
sub
cmc
inc
xor
inc
and
mov
add
std
add
repz
mov
js
mov
daa
mov
adc
add
stc
add
pop
iret
lret
leave
iret
jae
inc
mov
mov
fs
push
mov
fsub
ret
ljmp
lret
out
mov
jle
movsb
mov
push
push
xor
iret
sti
cs
cmc
mov
xchg
pop
hlt
bound
aam
cmp
icebp
lods
jbe
pop
sub
adc
fbstp
push
andb
les
movl
push
jmp
cmc
inc
cmp
lret
jg
ret
and
hlt
imul
sub
cmp
loope
cmpsb
cmp
inc
fcmovu
pushf
fwait
movsb
in
lods
push
sti
cmp
repz
in
push
pop
es
aam
push
jne
outsl
dec
jns
dec
in
outsl
loopne
push
scas
xchg
das
jecxz
loopne
mov
adc
mov
test
mov
xchg
mov
push
out
iret
hlt
jo
pop
sub
push
shll
js
sarb
push
jno
push
dec
mov
aad
jno
loopne
mov
imul
fsubs
push
dec
aaa
cmp
add
dec
jmp
xorb
mov
xchg
sub
adc
inc
jmp
mov
jecxz
inc
addb
aas
and
addr16
leave
lods
incb
fbstp
scas
in
insl
negb
sub
in
jg
jo
int
mov
xchg
movsl
jge
mov
inc
and
mov
xor
ret
inc
jp
inc
xor
orl
sbb
or
lods
push
rorl
shrl
xor
lgs
or
dec
jp
dec
lea
mov
call
push
insb
and
roll
inc
jg
add
loop
loopne
popa
aam
sbb
inc
fists
cwtl
test
cmp
xchg
test
fwait
jnp
lret
in
jb
push
cmc
cmpl
and
std
mov
jo
jg
xor
add
sub
xor
add
loope
ja
pop
test
mov
sarl
and
inc
cmp
decl
add
jmp
or
pop
mov
std
rorl
cmc
mov
fnstenv
pop
repnz
fidivl
mov
movsl
cmp
scas
ret
xchg
and
jg
push
pop
lret
lock
pop
pop
ret
pop
mov
inc
test
fcmovnb
mov
mov
and
jb
movsl
ret
or
dec
xor
jb
dec
jg
bound
jl
loopne
jae
test
rcll
ret
cmpsl
cmc
aaa
addr16
ds
and
mulb
addr16
rcll
sub
mov
insl
shlb
adc
pop
sub
or
lea
das
call
xchg
sbb
pop
daa
cmc
jg
jne
lods
mov
mov
lods
mov
mov
lock
pop
mov
pusha
stos
mov
and
mov
push
mov
sarl
ja
out
loope
and
ret
fdivs
jge
daa
xchg
add
sbbb
pop
ror
mulb
fnstsw
pop
repz
jnp
jnp
jg
cmp
mov
or
lahf
loope
ja
jg
ja
cli
or
xchg
push
xchg
or
inc
inc
aad
cli
adc
ret
incb
jg
jcxz
jae
popf
imul
adc
jmp
cwtl
in
and
es
mov
arpl
xchg
insb
dec
push
lret
inc
cmpsb
mov
and
sarl
push
cltd
into
sub
iret
ficomps
adc
out
outsb
mov
inc
in
lcall
sub
adc
and
aaa
inc
sbb
sub
lds
mov
ja
fiadds
mov
movsl
stos
popf
enter
and
adc
dec
loopne
rcrl
out
sbb
jg
cli
mov
xchg
inc
add
jmp
and
xchg
mov
pop
outsl
orb
sbb
loop
adc
popa
in
test
lcall
sub
jbe
fs
imul
icebp
jle
aaa
xchg
mov
stc
int
repnz
push
sbb
sub
pop
xor
insl
lock
cmp
add
xchg
test
push
jp
xchg
mov
xor
mov
aad
adc
lahf
sub
rclb
das
cmp
inc
fldcw
jg
lds
fisttps
std
or
cmpsl
shrb
bound
mov
cmp
jge
idiv
xchg
pushf
lahf
or
pop
cmp
xlat
mov
fs
es
inc
and
stos
sahf
add
fs
repnz
jle
lock
sub
ficoml
adc
add
xor
and
sbb
dec
ds
jmp
mov
mov
mov
pusha
adc
mov
ficomps
fisttpll
cmp
fcomps
out
adc
int3
cmp
xlat
mov
repz
pop
loopne
mov
cs
lret
popf
cmpsl
jmp
mov
scas
inc
addr16
and
mov
sbb
and
adc
aad
jne
mov
xchg
inc
jno
adc
push
dec
push
jo
add
dec
jmp
lock
fs
decl
mov
xchg
ss
pop
jne
int
push
pop
or
dec
or
xchg
ljmp
pop
cs
mov
dec
call
shll
push
xchg
and
xchg
nop
rcrl
cmp
mov
pop
imull
cmpsl
das
xlat
add
jmp
orl
roll
sub
mov
jg
clc
adc
test
xlat
loope,pn
cltd
lds
test
mov
outsb
mov
into
out
mov
pop
xchg
sub
outsl
inc
out
ja
cmp
lods
std
pop
mov
mov
adc
shrb
aaa
cmp
adc
shrb
stc
stos
pop
inc
pop
std
inc
dec
ret
in
mov
inc
ljmp
ret
lea
pop
outsb
mov
cmp
add
jp
mov
cli
push
loopne
mov
fidivrl
nop
jp
fildll
rorb
leave
cmpsb
and
loopne
aad
loope
incl
das
rcrb
scas
xchg
mov
aad
subb
mov
cltd
mov
add
lret
dec
jle
jne
scas
and
cmpsb
int
and
push
shlb
orb
push
sbb
push
mov
adc
loop
out
pusha
sub
outsl
mov
ret
clc
adc
xchg
adc
mov
std
rcrl
push
mov
mov
les
iret
jecxz
adc
movsb
dec
cs
jae
and
test
xor
inc
arpl
out
xchg
sbb
mov
inc
imul
inc
lods
or
int
ret
cmp
fadds
sub
jge
jl
test
iret
push
sarl
cmpsl
idivb
shll
pop
jl
mov
xor
jp
scas
iret
push
arpl
and
cwtl
xlat
lcall
mov
cmpsl
xor
addr16
add
cmc
xor
cs
outsl
and
les
int
lods
js
mov
fcompl
adc
into
iret
jno
push
lds
in
mov
cmpsb
nop
imul
loope
fbld
sarl
icebp
sbb
xor
add
mov
fsts
adc
leave
mov
mov
or
mov
clc
out
add
inc
fisubrs
or
loope
xor
pusha
in
out
mov
pop
add
fcomi
stos
out
jnp
loop
nop
ret
or
in
xor
scas
and
and
jecxz
shl
cmp
out
xchg
loope
out
lods
xchg
sub
cmp
mov
ret
dec
and
add
mov
ja
notl
mov
push
jne
add
jl
adc
mov
mov
std
xorb
pop
lock
cmp
pop
add
fwait
ja
int
loope
dec
mov
cs
mov
out
mov
jl
xor
fistpl
fucom
movsb
lea
fwait
in
mov
insl
cs
inc
jb
push
popf
push
cmp
int
pop
test
jmp
mov
mov
mov
mov
testl
pop
add
inc
mov
ret
jge
jno
fwait
insl
push
clc
add
sti
inc
lea
jno
dec
xchg
push
jne
pop
mov
inc
or
dec
mov
sbb
addr16
xor
push
fs
mov
roll
mov
lds
popf
jne
pop
insl
ficoml
inc
push
add
sahf
and
cmp
cmp
mov
mov
scas
orb
int
scas
pop
andl
and
hlt
fstpt
sbb
je
dec
xor
subb
imul
mov
stos
cmpsb
xchg
pop
fdivl
adc
insl
mul
and
jle
lahf
loopne
xchg
inc
and
sub
xrelease
push
add
adc
inc
inc
and
orb
mov
jecxz
sbb
enter
popa
sub
sub
js
test
or
sbb
das
shl
jo
jecxz
sbb
ror
sbb
xchg
sub
sub
fwait
out
test
fcmovnb
push
in
pop
mov
add
lea
xchg
jno
aas
fnstcw
call
imul
bound
mov
xor
pop
push
sub
daa
dec
and
mov
ljmp
mov
sbb
ret
mov
sub
orl
shll
sub
testb
push
jmp
adc
fdivl
movsb
cmc
std
loope
fxtract
jg
jae
push
int
xor
aad
inc
outsl
and
aam
jg
pushf
adcb
icebp
shlb
iret
lods
andb
dec
pop
push
mov
or
pop
icebp
cmp
loopnew
and
or
mov
mov
push
mov
lahf
mov
outsb
loopne
mov
xchg
inc
and
add
sbb
outsb
cli
ficompl
add
adc
push
or
adc
adc
jecxz
pusha
push
frstor
push
sbb
mov
in
out
mov
mov
cmpsb
push
add
in
add
rolb
mov
ss
dec
cmpsb
orb
cmp
and
push
cmp
mov
fcmovnu
adcl
lods
inc
pop
les
lahf
stos
mov
mov
xchg
in
mov
fistpll
inc
or
clc
aas
mov
in
loopne
out
repz
dec
sub
xor
hlt
mov
cltd
fidivrs
cmpsl
ffreep
std
sub
imul
jecxz
sti
jge
es
imul
jns
xchg
loope
ds
cmpsl
cmp
xchg
and
xchg
lret
or
add
inc
cmp
adc
adc
cltd
push
cmpsl
xor
mov
fmull
xchg
xor
mov
cwtl
bound
test
test
icebp
mov
pop
push
jecxz
and
inc
loopne
inc
push
push
cmp
push
pop
jl
cmp
inc
dec
xchg
loopne
add
fnsetpm(287
inc
and
inc
mov
xchg
mov
and
clc
pop
jl
sub
xlat
rorb
arpl
lods
xchg
out
loope
stc
testb
and
testb
cmc
inc
cmpl
repnz
sbb
addr16
ds
dec
mov
sbb
ret
ror
mov
pusha
mov
mov
ss
and
pusha
cmc
inc
cli
test
in
repz
jecxz
daa
stos
pusha
incb
shrb
addr16
insb
mov
scas
pusha
jecxz
daa
das
pusha
sub
jecxz
daa
iret
pusha
out
in
leave
push
push
push
icebp
push
xchg
adc
xchg
pop
clc
aam
pop
jg
push
cli
pusha
jo
ret
incb
jo
xor
js
inc
xchg
inc
dec
jo
mov
mov
mov
xchg
mov
inc
es
mov
add
jo
jge
leave
jecxz
ret
aaa
mov
mov
push
out
cld
call
leave
mov
adc
xchg
fwait
inc
movsl
mov
and
dec
jmp
daa
pusha
cmp
pop
and
cmc
dec
push
pop
ret
xchg
lock
les
xor
add
fcmovnb
cld
orb
jmp
icebp
sub
call
leave
iret
sub
lcall
jg
mov
dec
sbb
inc
addr16
leave
lods
mov
test
fsubl
mov
mov
lods
adc
leave
out
pop
in
bound
in
push
inc
fdivr
pop
sub
je
paddsw
lret
pop
loope
dec
mov
mov
xchg
dec
loop
adc
jo
jnp
leave
sbb
fistps
nop
and
mov
cmp
aam
or
nop
cltd
fidivrl
lods
xchg
in
repz
arpl
and
cmpsl
rcr
mov
mov
add
inc
nop
xchg
mov
pop
xchg
pop
hlt
sbb
inc
scas
push
push
int
loope
cwtl
cmpsb
jge
inc
xchg
fisubl
push
xchg
addr16
ljmp
inc
pop
pop
inc
pop
fiaddl
jnp
jo
daa
sbb
cmp
sbb
fildll
cli
rorb
cmpsb
ficoml
cwtl
movb
js
lcall
int3
mov
ljmp
add
pusha
aad
in
insl
outsl
and
add
lea
cmp
push
inc
jmp
ret
mov
adc
int3
repnz
lods
sub
adc
inc
mov
adc
js
jnp
xchg
inc
iret
xor
cmp
push
mov
movb
jbe
xchg
in
daa
shll
loope
daa
xor
sub
or
imul
jl,pt
hlt
shrl
cmc
ret
mov
jge
rcr
inc
rclb
push
jg
dec
ret
test
or
xchg
inc
xor
xchg
test
daa
xchg
xor
push
push
lret
push
call
or
add
aad
mov
pop
and
sub
pop
inc
xlat
fwait
sahf
pushf
and
add
mov
lret
hlt
sarb
hlt
sbb
push
int
mov
mov
fmuls
fsubl
mov
fisttps
pop
mov
cmp
loope
sub
int
inc
mov
mov
dec
xor
push
or
mov
in
sahf
and
and
lods
dec
arpl
movl
xchg
pop
lods
arpl
mov
les
out
jbe
xchg
pop
cmpl
mov
into
aas
mov
out
incb
daa
dec
inc
aad
neg
cmc
mov
inc
adc
ud0
stos
into
xchg
cmp
imul
push
xor
gs
movntq
das
hlt
andl
shrb
mov
pop
jge
jecxz
fstpt
jb
pop
push
adc
enter
in
aaa
jg
enter
push
repz
jg
inc
idivb
mov
leave
andb
adc
mov
stc
ljmp
sahf
or
ret
rolb
pushl
in
popf
in
test
xchg
mov
ja
fs
fucomi
scas
push
addl
fs
ret
push
and
or
jmp
loop
mov
cltd
sbb
jbe
mov
mov
xor
dec
inc
daa
ret
inc
fsubl
sbb
mov
les
jae
xor
rcl
ja
mov
leave
push
cmc
ljmp
inc
pop
das
fisttpll
push
loope
lgs
outsl
xchg
ljmp
jno
fisttps
outsb
outsl
loopne
xlat
mov
adc
pushf
or
dec
sarl
div
movsb
adc
add
jo
ja
push
fcomp
push
adc
repnz
addb
icebp
adc
nop
pop
popf
pusha
jp,pn
loopne
daa
mov
out
inc
push
jnp
mov
into
or
fwait
sub
xchg
jle
cmc
shl
push
jne
data16
mov
jle
iret
testl
hlt
in
mov
test
add
xchg
aad
out
inc
xchg
loope
out
and
lds
push
ffreep
nop
das
loop
into
enter
or
xchg
push
sbb
shr
xchg
bswap
mov
jbe
mov
fbstp
repnz
out
add
and
cmc
push
bound
imul
test
pop
jg
pop
out
out
adc
pop
fisttps
push
pushf
fdivrs
push
mov
mov
lods
fnsave
pop
lock
pop
lock
test
cmp
mov
inc
lock
and
cld
mov
cmc
inc
psadbw
lds
int
aad
repnz
bound
push
push
in
arpl
scas
xor
daa
sub
xchg
clc
addr16
data16
cmp
hlt
imul
mov
mov
clc
movsb
xor
cmpxchg
aaa
mov
das
aas
inc
mov
jecxz
adc
xor
add
js
cmp
mul
pop
inc
mov
mov
loop
xchg
test
loope
inc
outsl
shlb
mov
pop
imull
cld
dec
push
arpl
fists
pop
sbb
outsb
add
fildl
mov
cmp
ljmp
inc
cmc
xchg
or
sub
cmp
cmpb
mov
lods
lcall
and
adc
mov
stc
xor
jnp,pt
repnz
dec
xchg
lock
inc
ret
cmp
mov
cmp
pop
adc
dec
aad
ret
adc
ficoml
js
xchg
dec
adc
lods
xchg
in
cmp
inc
xchg
sbb
pop
cmc
aad
mov
mov
adc
mov
mov
and
sbb
pop
roll
sub
insl
les
jbe
fidivl
lret
mov
test
xchg
cmpsb
jbe
cmc
sbb
cmp
inc
sbb
jle
xchg
inc
fstpt
ret
jg
enter
rclb
xchg
cmpsl
fcmovnb
outsl
shrb
xchg
and
mov
inc
dec
mov
sti
sbb
inc
pop
shll
push
and
in
icebp
xor
out
jl
jp
adc
imulb
mov
dec
jg
mov
push
sub
in
and
push
or
add
fwait
fs
xchg
mov
push
push
push
add
push
jecxz
and
sub
nop
lds
pop
jo
int3
lock
jg
mov
dec
in
dec
jae
xor
and
jmp
lea
popf
hlt
mov
inc
lahf
rcrb
cmpsl
pop
popf
sbb
add
adc
imul
sub
insb
xor
hlt
addr16
sar
roll
sar
aas
call
xor
aad
mov
shlb
or
fcmovbe
xor
dec
adc
pop
adc
test
add
les
and
test
sbbl
sbb
out
xchg
pop
xchg
pop
addb
cli
pop
cmp
hlt
cli
rorl
fisubl
lods
add
ffreep
mov
mov
aam
pop
ds
jnp
int
cmp
iret
inc
sbb
xchg
xor
bound
popa
xlat
push
push
jmp
and
or
ja
daa
in
dec
loop
add
fdivrs
lea
int3
aas
inc
cmc
test
mov
cmc
or
inc
cs
std
mov
xchg
adc
adc
or
gs
loopne
xor
push
mov
push
icebp
fsubr
outsl
sbb
ja
repnz
xchg
xchg
data16
xor
in
fisttpl
in
fisubrs
inc
icebp
bound
push
mov
jecxz
mov
icebp
mov
cmp
jl
push
pop
pop
loopne
out
xchg
mov
retw
inc
lret
loop
imul
jbe
and
add
cmp
out
mov
add
ficoms
bound
neg
shlb
xor
les
aad
stos
and
mov
push
or
jnp
cmp
aaa
loope
ljmp
and
inc
stc
testl
mov
repnz
gs
aam
orl
xor
loop
sub
and
jg
push
push
and
mov
arpl
inc
mov
jecxz
jecxz
cmc
mov
idivl
icebp
adc
aas
ret
out
decb
aad
pop
jmp
mov
sbbb
clc
jno
pop
ja
pop
inc
hlt
inc
dec
fisttpll
popa
cmc
ds
stos
xchg
fsub
pop
jp
xchg
jg
pop
daa
add
pop
mov
leave
orl
lods
imul
pop
mov
es
lret
rorb
dec
out
and
shrb
jns
add
pop
xor
push
testb
xchg
fimuls
dec
xchg
pop
mov
mov
mov
mov
fisttpll
dec
fldl
jmp
xor
icebp
jle
das
mov
data16
scas
xchg
rolb
fwait
xchg
jo
insb
icebp
inc
inc
out
fcmovnu
into
les
fistpl
in
in
div
es
cwtl
imul
inc
sbb
jne
pop
xchg
pop
dec
jl
adc
mov
pop
inc
pop
xacquire
out
cmp
jle
inc
out
sub
ds
loope
mov
loopne
in
loope
idivb
aam
jne
inc
mov
popf
lock
es
sbb
movsl
cmpsl
cld
rorl
stc
ljmp
aaa
dec
sub
je
pop
int
shl
sahf
jp
jae
dec
je
bound
lahf
icebp
inc
lret
cmpl
test
add
sti
inc
jns
push
cmp
addl
subb
lret
adc
sub
jno
xchg
retw
inc
adc
cmc
shlb
rolb
lret
or
mov
rolb
subl
ljmp
sub
inc
lea
out
pop
add
mov
push
ret
bound
bound
addr16
sub
jo
out
mov
scas
lahf
int
jecxz
mov
adc
mov
mov
shlb
and
mov
loopne
loopne
mov
add
xchg
pop
call
dec
hlt
adcl
and
xchg
xor
mov
xchg
add
jne
fisttpl
popf
divb
rol
cmp
lret
xchg
jb
clc
cmpsb
xchg
cs
ret
inc
push
dec
out
mov
inc
jne
lret
jnp
push
mov
shlb
repz
dec
pop
push
lret
xlat
push
push
in
ror
inc
std
or
hlt
mov
jae
fnstcw
sbb
sub
pusha
mov
inc
and
lods
push
add
into
cmp
mov
or
mov
xchg
cltd
pop
test
mov
hlt
pmuludq
pop
icebp
cs
inc
mov
in
inc
inc
mov
repnz
sub
scas
fisubrs
push
loope
inc
jns
mov
icebp
mov
testb
adc
leave
jns
testl
dec
xor
ss
jo
mov
jmp
xchg
jg
cli
clc
out
mov
gs
sub
inc
mov
sti
lock
xchg
adc
aad
adc
push
retw
mov
or
xor
xchg
imul
push
fdivrs
icebp
loopne
adc
aad
lea
jnp
xchg
cmpsl
jne
jb
jbe
cmpsl
insb
pop
enter
ret
xchg
enter
into
loopne
outsl
shlb
adc
and
daa
sbb
hlt
inc
lret
aam
std
rclb
mov
loopne
enter
sub
mov
jp
adc
or
lret
mov
pop
and
lret
lret
cmc
mov
add
mov
jmp
jge
test
fwait
adc
ss
mov
jo
int
jo
adc
mov
sbb
mov
inc
testb
cmp
xor
adc
hlt
cmc
adcb
bound
ret
lds
push
fdivrl
push
mov
inc
jp
ja
scas
aaa
les
sbb
jge
inc
inc
pop
and
out
sbb
out
loopne
ss
and
addr16
fbstp
sub
mov
or
daa
nop
sub
cld
jne
xchg
cmp
scas
mov
xor
movsl
adc
xchg
push
int
mov
rcr
js
inc
jae
imul
lods
sub
cld
mov
sbb
xchg
mov
les
subl
shll
aas
and
xor
dec
in
and
xchg
aad
jecxz
xor
movsb
nop
int
and
loope
pop
jnp
mov
add
movsl
push
xor
jnp
fcmovnb
mov
cmp
cwtl
int
jecxz
jmp
xchg
out
out
mov
int
int
and
int
push
inc
imul
pop
fistps
loopne
fldz
inc
xor
ror
icebp
ret
mov
xchg
jge
jns
pmaxsw
dec
aaa
js
stc
pop
jg
stc
ret
movsl
jns
das
repnz
push
int
out
cmp
mov
inc
jne
mov
or
inc
pop
mov
cmc
adcb
stos
add
insl
mov
xchg
ret
jge
pop
daa
push
cs
ret
jl
repnz
in
and
xchg
sub
lds
aas
mov
fsts
aam
jecxz
add
jp
loopne
pushf
mov
out
adc
adc
sahf
mov
pushf
sub
fsubl
xchg
loop
push
ljmp
push
mov
dec
leave
filds
add
lds
mov
push
xlat
aad
or
leave
adc
shrl
mov
adc
mov
arpl
jo
arpl
inc
fildl
jnp
repnz
rol
and
stc
loopne
cmpsb
int3
mov
mov
jmp
mov
inc
lea
fwait
cmp
outsb
divb
arpl
fnsave
add
dec
inc
cmc
mov
and
lods
sti
pop
xlat
enter
jno
in
stos
pushl
add
push
xchg
or
inc
imul
or
loope
and
sbb
mov
les
pop
xor
sub
jae
jns
addr16
sub
xadd
mov
and
push
push
pusha
scas
out
cmp
xchg
sbb
divb
mov
cmc
jp
xor
ret
and
push
cmp
aas
scas
push
pop
lret
aad
ret
test
cmpsb
decb
jne
inc
inc
mov
out
add
shlb
sub
jge
cli
ja
cs
sbb
add
ja
sarb
fildl
cmp
je
cld
xor
sub
pusha
scas
push
fcmovne
lock
jl
xchg
in
mov
cmpsb
nopl
jb
xor
outsb
jge
dec
fwait
movsb
xchg
lret
mov
cmp
dec
inc
cmp
hlt
mov
jecxz
mov
or
push
hlt
mov
popf
adc
mov
sbbl
xor
xor
call
lahf
inc
adc
sub
pop
in
inc
lods
aad
jae
ss
inc
outsb
fistps
xchg
cmp
mov
fisubrl
xor
lock
leave
xlat
dec
mov
push
pop
push
mov
xchg
addr16
ds
add
stos
adc
ret
add
xchg
sbb
adc
jl
movsb
nop
repnz
in
cs
mov
shrb
fisubrs
cltd
arpl
cs
imul
push
xor
imul
push
sub
in
mov
loopne
into
jecxz
mov
sub
xor
es
pop
lret
imul
fnstenv
lock
cmpsl
jmp
mov
ret
imul
cmc
lds
adc
aad
lea
stos
loope
sbb
mov
add
bound
enter
add
loope
jl
lret
inc
jnp
jl
lret
cmp
or
scas
imul
or
inc
fildl
mov
fnstenv
xchg
dec
mulb
inc
insl
leave
push
out
mov
add
dec
ljmp
jmp
cmc
test
rolb
clc
daa
ljmp
mov
das
test
aam
cmp
xchg
pop
js
scas
inc
inc
int3
push
adc
pusha
scas
andb
mov
mov
dec
ljmp
mov
jb
repnz
int
sub
adc
ljmp
dec
sbb
push
loope
and
cmpsl
xor
sbb
addr16
sahf
cmp
cmc
fwait
jp
pop
lds
mov
gs
mov
insl
xchg
inc
into
or
daa
lods
cmp
cmp
scas
jae
mov
les
dec
pop
add
mov
jge
push
repnz
mov
and
in
jbe
mov
jle
stos
cmc
out
cmc
shll
and
hlt
cmp
or
inc
jne
xchg
jae
xor
cmp
mov
mov
xchg
add
fisttps
jecxz
mov
dec
fstps
adc
pop
mov
aaa
adc
fs
test
test
mov
scas
sub
shl
mov
outsb
loope
xor
loop
mov
cmc
xchg
shlb
out
dec
fstl
jae
and
rolb
dec
add
std
mov
and
popf
fbld
adc
leave
push
xchg
movl
subb
faddp
test
push
jmp
rcrb
les
ss
shl
lcall
mov
data16
pop
add
mov
aaa
inc
mov
and
bound
aad
adc
outsl
xchg
jb
cmp
sub
and
lods
dec
jbe
sbb
xchg
cmpsl
mov
lods
or
pusha
dec
mov
addl
ret
pusha
jmp
sub
daa
popa
jo
iret
les
mov
jp
imul
aam
xchg
pop
adc
fpatan
pushf
xchg
or
fisttpll
ss
aas
leave
push
mov
push
loopne
sbb
or
in
mov
jecxz
mov
lret
or
xchg
sbb
xchg
stos
mov
fs
xor
stos
clc
stos
inc
shr
dec
mov
sub
stc
stos
pop
xchg
and
jp
mov
cli
imul
pop
inc
and
cmc
js
mov
ljmp
loope
or
xchg
mov
and
in
or
sub
aas
lahf
cmpsb
lods
inc
pop
cmc
or
xchg
mov
stos
jg
ret
ret
in
cmp
ret
outsb
and
lods
sahf
aad
clc
add
xchg
adc
clc
push
ret
add
sbb
or
cmp
mov
lret
lret
test
push
mov
test
lods
xor
imul
fldl
push
and
mov
cwtl
shrb
xchg
mov
repnz
hlt
js
jp
addr16
inc
xchg
mov
jo
jbe
mov
push
cmp
cmc
addr16
pcmpeqb
jbe
sti
jp
dec
in
scas
xchg
dec
jl
push
xchg
xchg
ficompl
mov
ljmp
fcmovb
loope
sahf
mov
int3
dec
fstpl
mov
fiaddl
add
cmpl
ret
scas
xchg
mov
pop
loop
fsts
jle
add
cld
dec
iret
xchg
inc
cmc
jl
push
testb
cmc
js
movsb
loop
flds
ljmp
dec
cmp
dec
ror
movsl
push
adc
xchg
sbb
pop
cmpsl
jecxz
out
jg
add
cmpsl
pop
xadd
in
cld
lock
inc
sbb
adc
fistl
cmc
push
nop
pop
cli
psllw
dec
sbb
or
ljmp
xor
daa
es
shll
decb
mov
cmp
mov
in
je
pop
jg
rol
int
mov
lret
in
je
pop
jg
roll
daa
and
in
je
pop
jo
xchg
test
pop
xchg
in
shl
mov
pop
add
cli
clc
cmpsl
pop
pop
outsl
scas
mov
popa
pop
jnp
xor
cli
fmul
cmp
mov
jae
cmpsb
fisttps
outsl
cmc
in
out
movsb
scas
jg
inc
cmpsb
adc
add
and
arpl
addl
push
cmc
fld
and
orl
loop
mov
aas
out
ret
les
int3
add
enter
vcmppd
orl
loope
jle
or
lret
cmp
mov
lds
repnz
pusha
test
or
add
jo
addr16
dec
arpl
push
adc
and
fbstp
adc
ror
push
inc
lds
adc
stos
out
pop
outsl
outsl
jmp
stos
and
inc
and
sbb
fists
sub
cmc
sbbb
and
dec
mov
or
or
ror
daa
xchg
xchg
mov
shrb
adcb
xchg
sbb
imul
inc
ret
lods
mov
sbb
repnz
push
inc
jno
repnz
jns
xchg
push
pop
into
jmp
out
or
pop
imul
iret
mov
es
pusha
or
jmp
pop
mov
frstor
shl
mov
mov
test
adc
js
aas
xchg
push
scas
pmaxub
mov
dec
js
flds
adc
mov
ficompl
jbe
jmp
pushl
cld
aam
cmpsb
jecxz
sub
fildll
and
cld
cli
imul
bound
cmp
mov
lret
lods
sbb
push
daa
cwtl
inc
jne
shl
inc
lret
cwtl
xor
hlt
rorb
sahf
xchg
xchg
neg
iret
out
xchg
ja
jp
es
lret
ffreep
and
loop
sbb
sub
testb
loopne
pop
mov
negb
aam
cmp
frstor
sbb
pusha
into
add
in
mov
or
fsubrl
sbb
outsl
pop
dec
leave
fldenv
add
lret
data16
push
push
addr16
sahf
test
in
and
out
gs
and
icebp
aas
fcompl
shrb
icebp
and
js
cltd
dec
lock
out
sahf
mov
pusha
shlb
pop
jne
xchg
out
xchg
fisubrs
sub
aas
cmp
dec
pushf
into
in
imul
sbb
cwtl
fisubl
dec
jg
mov
pop
sub
cmpsl
dec
fs
inc
popl
cmp
mov
stos
sbb
pop
fists
xchg
sbb
dec
in
push
and
pop
fidivl
or
mov
vshufps
movsl
adc
daa
sub
jb
xlat
xor
pop
sarb
push
dec
jecxz
shl
mov
test
in
scas
jae
in
jge
and
mov
int
inc
aam
in
mov
sbb
ret
dec
jb
insl
sbb
repz
push
sar
movsl
or
andb
in
jne
test
adc
sub
fisttps
pop
cmp
inc
mov
pop
es
and
push
push
dec
push
xchg
js
inc
push
cli
and
sbb
cmp
mov
rcll
pop
cmpsl
dec
adc
lods
outsl
std
sub
and
in
adc
sub
jp
inc
outsb
aad
pop
pop
xor
push
pop
sub
jae
enter
inc
inc
jle
sarb
lea
push
loopne
in
add
lcall
mov
icebp
lcall
mov
shl
dec
sub
ret
psrlq
jmp
or
in
mov
pop
adc
pop
mov
xor
xchg
loop
fnstsw
push
test
aad
sub
ret
add
out
add
push
push
jg
fisttps
and
dec
cmpl
hlt
popf
xlat
lahf
pop
aad
dec
iret
mov
ja
scas
ret
jecxz
imul
es
jne
ret
dec
jg
popa
ret
sbb
imul
add
mov
or
xchg
jae
lods
dec
lcall
fnsave
ffree
outsl
cmpsl
mov
in
ret
lea
cmp
inc
outsb
mov
jge
jecxz
pop
cmp
cs
dec
fsubs
add
inc
adc
inc
fdivrs
fildl
jnp
or
sub
scas
lds
cmpsb
scas
ret
cmp
dec
lock
lret
cs
mov
and
cmc
inc
cmp
xor
addb
xchg
bound
cmpsb
addl
inc
jecxz
ficoml
pop
mov
ret
sub
negb
insb
jne
loop
ret
mov
push
fistl
dec
mov
pop
xchg
jg
daa
hlt
inc
fistps
lcall
jb
in
inc
xchg
fistpl
dec
dec
inc
cmc
adc
or
fstpt
mov
sbb
fldl
stos
inc
frstor
inc
xchg
sub
cmpsl
push
cld
mov
sub
push
mov
sahf
lods
cmp
xchg
insl
jl
dec
xchg
inc
cmpsl
mov
ret
insb
cmp
adc
lods
les
push
pop
mov
sub
pop
and
dec
cli
outsb
lods
mov
les
add
and
xchg
jl
xchg
sbb
rcr
in
adc
dec
in
xchg
ret
cmpsl
enter
push
aaa
cltd
mov
lods
iret
int
xor
mov
mov
sub
cmpsb
out
sahf
mov
cmc
mov
stos
fists
sub
and
inc
dec
or
int3
mov
xchg
in
mov
in
mov
fstpt
mov
push
mov
sbb
dec
pop
popf
adc
js
jne
pop
shl
stos
popa
movsb
xchg
int
shll
negb
mov
or
jp
stos
push
push
mov
mov
mov
mov
test
jno
neg
or
loop
imul
add
loopne
rclb
or
in
lods
mov
aad
inc
mov
jbe
pop
ja,pt
imul
test
lret
scas
test
pop
int
push
test
xor
mov
leave
jmp
mov
dec
or
jae
pop
pusha
sub
dec
mov
mov
ret
movb
lret
mov
imull
lea
pop
lock
jp
lods
mov
dec
out
outsl
lods
mov
andl
into
int3
incb
movsb
mov
sahf
test
dec
sahf
arpl
imul
inc
pop
inc
push
mov
xlat
lods
aad
mov
test
daa
sbb
adc
ja
bt
cmp
dec
pop
inc
aaa
enter
call
loope
sbb
arpl
rcr
int3
pop
es
pushf
xor
lcall
and
stos
cmpsl
into
sbb
mov
aad
cld
movsb
and
std
adc
test
and
stos
stos
cmp
push
stc
cs
negl
pop
scas
fidivrs
into
jecxz
fld
xor
ljmp
loopne
sarl
sarl
movsb
popa
scas
lret
insl
rorb
fcoms
aaa
cmc
cli
outsl
jo
nop
inc
adcb
sarl
loopne
lock
xchg
notb
js
jmp
cmp
or
lret
sahf
inc
rcrl
sahf
fmull
mov
cmp
mov
out
add
and
loope
rcr
das
mov
nop
inc
loop
push
sahf
test
and
test
cmp
fldl
outsb
mov
or
pop
aaa
in
or
imul
or
jge
daa
fcmovnbe
dec
mov
push
repnz
cli
fsub
mov
jno
mov
xchg
mov
cmp
adc
xor
and
mov
clc
daa
lds
mov
xlat
push
shlb
fwait
add
inc
xchg
cmpl
cmp
adc
push
xchg
cmp
stos
mov
lods
lods
loopne
cmpsb
lret
scas
mov
cmc
sub
subb
mov
push
jmp
lods
or
dec
out
ret
fildl
mov
mov
mov
push
jmp
lods
mov
jg
shlb
adc
lods
incb
jl
xchg
ret
jmp
es
iret
xor
mov
inc
mov
xchg
divb
mov
mov
inc
lret
cmp
fcomp
loop
int3
es
lods
mov
jns
into
adc
imul
cld
mov
push
dec
repz
loop
repz
rol
mov
jae
mov
dec
push
sub
jbe
and
jp
cmp
lods
stos
inc
jg
lock
lds
lret
aas
or
rcrb
jo
inc
sarl
or
cmp
dec
push
fcompl
fsubrp
lret
push
sti
testb
lret
rorl
int3
sub
fdivr
es
xchg
sti
repnz
cwtl
lret
mov
insl
pop
pop
ror
pop
sti
push
or
sub
push
in
andb
push
add
cwtl
in
mov
jnp
stos
in
iret
ret
sti
add
or
in
cmpsl
imul
enter
insb
or
loopne
cmc
shl
or
mov
shll
or
cld
add
xchg
cli
mov
or
adc
int
mov
mov
lret
out
rcr
inc
cli
into
fcmovnbe
out
cmp
lret
adc
jecxz
popa
subb
mov
enter
dec
repnz
pushf
or
adc
orb
add
repnz
stos
xor
jbe
cmp
mov
adc
adc
int
push
xchg
mov
sbb
movsl
mov
dec
notl
push
jo
call
dec
push
lock
orl
xor
or
ljmp
and
mov
int
cmp
ljmp
sbb
mov
pop
adc
out
mov
jbe
add
xchg
jp
scas
xor
xchg
cmovnp
fwait
mov
inc
jecxz
and
xchg
push
sub
repz
cmp
es
test
lret
and
stos
ljmp
cmp
mov
and
cmc
sub
iret
cmc
pop
sub
insb
or
test
and
mov
mov
jae
jb
mov
sti
mov
cmp
and
outsb
jno
test
movsb
cmc
movntq
ja
push
and
ficoml
aad
add
int
incb
xchg
inc
sub
aad
mov
jne
mov
xor
xor
test
or
testb
xor
jg
inc
mov
inc
push
decb
cmp
xor
lret
hlt
fstpt
cmp
ret
cmp
cmp
pop
adc
cmc
dec
jb
pop
icebp
pop
inc
push
into
or
rolb
std
add
imul
ret
imulb
lds
pop
jae
mov
mov
mov
std
stos
fistl
mov
lret
jnp
clc
outsb
inc
xchg
loope
inc
sub
out
mov
loopne
pop
xchg
xchg
jg
dec
or
decb
xchg
imul
scas
ds
lret
and
dec
imul
iret
daa
ret
dec
pop
andl
push
scas
les
pop
cld
out
hlt
fmul
fs
scas
jg
pop
repnz
dec
sub
dec
mov
dec
fwait
std
mov
mov
cmp
dec
fcmovnb
test
stos
or
daa
test
add
xor
xchg
addr16
std
cmc
pusha
out
popf
pop
in
movb
adc
pusha
push
push
cmp
mov
pop
dec
push
sbb
shll
push
push
sbb
loopne
cmp
mov
and
or
mov
daa
loope
xchg
fsubl
leave
cmc
push
addr16
je
dec
ret
and
adc
idiv
or
insb
pop
ret
pop
insb
pop
scas
push
cwtl
mov
subl
insb
fs
mov
xchg
lcall
pop
shrb
mov
popa
je
and
jecxz
xor
mov
repz
outsl
mov
je
popa
jge
adc
addl
sub
pop
pop
xchg
mov
in
jbe
test
pop
inc
jb
fwait
or
call
lds
inc
lods
jl
test
adc
inc
jecxz
sub
xor
pop
push
ror
inc
shr
ret
out
xor
data16
mov
into
or
jmp
loop
insb
push
loope
mov
jecxz
test
fwait
mov
sub
insl
cmpsb
test
adc
jl
popl
cmc
mul
lahf
lea
push
hlt
jmp
xchg
mov
jmp
adcl
call
dec
add
jmp
xchg
cmp
xchg
and
bound
out
outsb
pop
les
test
ret
mov
push
mov
or
xchg
and
pushf
daa
loopne
mov
add
jecxz
adc
imul
inc
and
dec
mov
or
and
jns
lret
js
jg
mov
push
mov
out
mov
lods
leave
mov
push
dec
gs
int
clc
fdivrp
mov
mov
push
bound
lahf
repz
and
clc
sub
daa
inc
mov
daa
push
sbb
out
test
movsb
cli
jb
into
sbb
xchg
fisttps
mov
xlat
pop
or
loopne
lods
out
inc
adc
cmpsb
out
sbbl
xor
pushf
cmc
shrl
or
ljmp
les
aam
xlat
jb
lea
and
xchg
dec
xchg
fs
ficoml
ss
xchg
inc
sahf
rol
inc
imul
xor
hlt
out
cmpsb
mull
insb
mov
cmp
sbb
mull
test
sbb
and
pop
out
inc
jo
pop
dec
jno
or
iret
ret
push
cmpsl
xor
jl
sti
inc
mov
divb
mov
xchg
test
sbb
push
lret
mulb
mov
test
fstpt
push
cmpsb
rcr
add
sbb
inc
test
dec
sub
cmpsl
adc
sub
xor
lea
pop
inc
enter
out
cmpsb
pop
sub
ret
and
inc
imul
ret
lret
and
sarl
js
bound
loope
mov
jge
in
mov
hlt
cli
jmp
jo
mov
fdivl
outsb
aas
xchg
mov
rorb
mov
push
call
jae
mov
push
inc
popf
test
sbb
adc
adcb
sbb
inc
jg
cltd
add
pusha
in
or
jecxz
aas
pusha
xchg
mov
cmpsb
pop
inc
enter
adcl
out
and
daa
jecxz
faddl
push
mov
lahf
inc
jp
xchg
mov
sub
mov
pop
movsb
addr16
stos
mov
xorb
into
pushw
jge
jge
adc
and
jmp
fdivs
sbb
fcomi
fmul
dec
and
pop
adc
push
ret
or
jne
cwtl
mov
int3
pop
retw
sub
mov
cmp
cmpsb
jnp
out
jecxz
jg
jg
dec
push
pop
mov
inc
movsl
fisubl
in
xor
mov
xchg
out
or
scas
mov
aad
leave
shl
mov
push
pop
ret
loop
cmp
in
and
cmp
pop
mov
mov
fsubl
mov
push
adcl
mov
sbb
mov
or
sbb
and
cmpl
and
in
in
mov
mov
outsl
fwait
int3
in
xchg
jg
add
fsubrl
push
sbb
jecxz
fcomip
inc
pop
and
or
mov
lock
dec
push
xchg
or
jecxz
out
jb
pusha
jb
mov
pop
shrl
ljmp
fcmovnb
pop
rcr
aaa
cmc
jge
arpl
inc
jo
xchg
insb
inc
or
mov
or
and
movsl
cmp
sub
ljmp
adc
adc
or
cmpsb
jmp
pushl
fbstp
mov
in
lds
daa
fildl
gs
mov
andl
shrl
adc
idivl
jecxz
and
lret
out
or
jno
popf
push
cmpsb
insl
sub
push
and
sahf
fisubs
fidivs
nop
cwtl
xor
je
xor
mov
and
mov
sbbb
out
pushf
dec
xor
cli
dec
add
ret
cmpsl
push
jbe
xchg
negb
hlt
xchg
fisttps
sbb
daa
shr
imul
sbbl
bound
addb
push
shll
daa
loope
mov
jb
repnz
jp
repnz
data16
loopne
adc
add
cld
jecxz
imul
js
sahf
xchg
inc
daa
int
dec
popa
inc
scas
xchg
dec
test
push
mov
dec
push
out
push
add
xor
add
gs
inc
es
aad
push
or
aad
jp
or
js
or
mov
jle
or
ficomps
les
mov
rcr
pop
sbb
lock
orl
fwait
inc
addr16
lret
lock
test
mov
lock
sbb
sbb
loopne
cmp
sbb
sub
out
jae
icebp
test
xchg
popa
pop
xor
pop
jle
test
mov
mov
stos
fcoml
movsl
popa
mov
mov
out
mov
push
or
fists
cmp
ret
sarl
xchg
jne
add
insl
lret
xchg
jmp
cmpsl
add
cmpsb
sbb
icebp
sub
lods
popa
xchg
push
hlt
inc
mulb
out
sbbb
and
ja
sub
fdivs
or
cmp
xorl
sbb
xchg
mov
gs
loopne
js
lea
pusha
cmc
je
pop
ret
xor
in
cs
out
ss
sbb
call
shrb
imul
jg
dec
loopne
and
ljmp
adc
gs
fs
push
and
insl
fwait
or
inc
insl
inc
ret
hlt
fwait
mov
cmc
adc
jbe
lds
xorb
adc
repz
jo
jae
daa
push
mov
add
dec
loopne
ss
jge
push
pop
icebp
mov
test
and
test
loope
test
xchg
pop
jg
mov
aad
mov
push
aad
sbb
fs
sub
cmc
fsubs
jmp
xchg
mov
or
aam
pop
cmc
adc
dec
ret
xchg
movsl
cmp
adc
in
fistl
cmp
ret
cmp
jns
fwait
test
lods
fwait
inc
pop
dec
mov
lods
fwait
lcall
or
lret
inc
pop
push
lret
and
mov
pop
ret
ja
dec
push
mov
inc
sub
adc
dec
push
adc
push
push
lds
push
lds
out
bound
inc
xor
fwait
or
call
ret
add
pcmpgtb
push
lds
into
fldcw
cmc
adc
daa
and
lret
jg
ret
movsl
adc
icebp
adc
int
xor
fisubl
aam
ss
fs
and
rol
sahf
int
pop
pop
lods
cmc
push
jns
rcrb
fmull
shl
adc
sbb
popa
daa
xor
pop
pop
cmc
out
dec
lods
adc
xchg
push
popa
inc
sti
and
ds
in
cld
mov
jnp
sub
pop
mov
test
mov
sub
xor
push
enter
cmp
push
jg
ffree
mov
rclb
pop
sub
sbb
mov
test
fwait
and
push
adc
shl
mov
insb
push
out
daa
sub
mov
hlt
adc
push
or
daa
xchg
pop
fsub
adc
jecxz
in
popa
mov
jo
push
cmc
sbb
xor
test
in
in
pushf
ja
shlb
and
mov
sub
inc
cs
pop
sub
mov
mov
scas
lret
outsb
cmp
jo
inc
icebp
dec
in
fsubrs
sahf
dec
out
inc
rcrb
popa
rolb
jo
daa
loope
jp
lock
repnz
cmc
ret
loopne
adc
jge
test
in
fwait
lcall
pusha
into
pop
jbe
sub
aaa
rorb
imul
pop
cmp
xor
push
ficoms
loopne
ret
xor
xchg
scas
pop
test
scas
xor
add
scas
cmp
clc
jp
adc
fisubrs
cmc
and
jl
jmp
cmc
jnp
inc
int3
mov
insb
iret
call
int3
fdiv
ds
es
xchg
repnz
aaa
cmc
xchg
aas
pop
dec
std
push
loopne
xor
mov
fidivs
xchg
fwait
arpl
in
aad
adc
mov
repnz
repnz
data16
mov
into
inc
es
cld
test
xchg
out
mov
inc
movsl
ret
shl
std
xor
sbb
push
xchg
enter
cmpsl
testb
sub
cmpb
icebp
mov
add
gs
mov
fwait
cmc
out
vmptrst
push
pusha
es
sbb
fwait
adc
out
push
and
ljmp
cmp
push
cli
push
pop
mov
or
scas
jg
push
ret
push
clc
or
push
pop
loope
pushl
fists
dec
and
mov
jbe
mov
andl
fndisi(8087
push
lods
push
cmp
jb
push
out
push
push
scas
jle
js
add
jecxz
es
jg
es
es
mov
es
insb
test
scas
outsl
mov
and
aaa
jecxz
ja
jg
cs
and
ja
xchg
cs
cs
sub
and
and
movsb
lea
adc
shrb
lods
push
mov
or
jl
hlt
adc
sbb
fistps
icebp
push
test
popf
and
aam
and
mov
and
jns
adc
inc
lods
in
dec
cli
xchg
leave
ds
adc
jg
and
and
insb
xchg
les
mov
mov
aad
and
addr16
fimuls
ds
mov
enter
adc
pusha
mov
enter
pusha
mov
shl
mov
cs
or
xchg
sbb
mov
jp
add
fistps
fisttps
ret
adc
shll
movsb
lea
outsl
or
dec
adc
adc
les
inc
icebp
frstor
adc
bound
pop
cmpl
out
mov
cmc
add
out
mov
or
ret
lahf
dec
lea
and
aad
mov
dec
xchg
and
add
adc
jne
jge
adc
andl
imul
insb
insl
and
fisubrs
push
jns
lods
shlb
dec
xchg
xor
sbb
ret
lods
push
mov
and
and
mov
mov
xchg
jae
inc
xchg
hlt
es
xor
and
xor
nop
pusha
push
aad
jno
and
cmpb
loope
mov
push
or
jge
les
dec
imull
cmpsl
dec
jns
outsl
pusha
sub
push
mov
push
pop
adc
pop
outsl
jo
adc
mov
add
gs
loop
aas
pop
lahf
pop
add
sub
insb
mov
ret
insl
sbb
aam
data16
push
pop
ss
icebp
add
sbb
test
daa
and
cmp
std
fisubrs
sbb
stos
inc
clc
outsb
clc
mov
mov
dec
jae
jl
inc
mov
and
adc
int
mov
push
icebp
inc
sub
dec
sub
jno
fs
in
dec
lea
ret
and
jbe
arpl
pop
mov
test
xor
test
fwait
mov
xor
stos
lock
add
push
mov
dec
jbe
pop
mov
inc
jno
xchg
mov
inc
pop
mov
jle
jns
xchg
and
test
mov
cmpsl
jnp
mov
mov
mov
test
ds
mov
push
jo
mov
add
xor
loopne
and
xchg
and
push
std
popa
mov
andl
push
cmp
jecxz
xchg
into
dec
xchg
inc
inc
int3
xchg
xchg
lds
pop
dec
xchg
addl
scas
iret
test
dec
lret
iret
xchg
gs
mov
cmp
xchg
cmp
dec
ss
sbb
adc
je
cmp
jecxz
mov
cmp
xchg
ljmp
ja
mov
fidivrl
push
mov
in
pusha
pop
inc
push
cmc
std
lock
daa
sub
inc
pop
in
xor
out
mov
or
and
xchg
dec
and
or
and
mov
mov
jge
ret
out
lds
inc
xchg
mov
fcoml
pop
sub
xchg
pop
cmp
pop
bound
les
fcomps
roll
dec
lds
aaa
or
jo
std
inc
mull
cmc
imul
ja
out
das
fcoml
ret
es
fildl
shl
cmp
cmc
xchg
sahf
pop
ret
das
sahf
jns
jns
mov
mov
and
xchg
mov
jg
roll
in
fwait
ret
cmpl
inc
imul
jns
push
and
cmpsb
cmpsb
movsb
inc
and
push
cs
incb
sub
mov
mov
scas
push
push
gs
scas
xchg
jnp
and
cmp
scas
lods
cmp
dec
push
mov
data16
push
hlt
cmc
scas
lcall
pop
lock
cmp
mov
and
repz
imul
ret
cmc
mov
ret
mov
fwait
and
cld
inc
mov
cli
mov
xchg
pop
sub
jecxz
out
ds
cwtl
adc
fwait
clc
sub
xchg
ret
andl
pusha
adc
cmc
jp
mov
jbe
mov
cmpsl
jl,pn
fadd
aas
lcall
cmc
dec
xchg
add
dec
into
mov
andl
popf
xchg
mov
jns
rolb
push
jecxz
add
decl
mov
lods
mov
loope
into
inc
sbb
jbe
dec
mov
stos
inc
push
or
xor
enter
xchg
pusha
out
aaa
into
and
fildl
push
push
mov
loope
dec
ret
repz
pop
imul
mov
loopne
jg
jno
mov
je
repnz
mov
insl
imul
int
ja
adc
inc
xor
in
or
int
in
push
jg
fmulp
loopne
les
mov
inc
lock
pushf
or
sub
xchg
int3
or
pop
jb
adc
popf
fwait
xor
or
rclb
es
dec
mov
out
bound
adc
in
shrl
xlat
lret
push
push
out
dec
dec
and
mov
or
inc
cmp
sub
loopne
sbb
jo
addr16
dec
inc
inc
and
mov
push
imull
ss
adc
xor
data16
lock
shrb
out
das
outsl
lods
idivl
xchg
sbb
jmp
xor
scas
outsl
lock
sbb
cli
pushf
mov
dec
xchg
sahf
sbb
icebp
mov
or
push
dec
inc
jle
sub
and
mul
popa
add
gs
mov
popf
ror
cmp
in
movsb
dec
push
adcl
dec
lret
loop
imul
push
mov
pushf
test
xchg
mov
adc
in
rolb
jb
loopne
das
test
mov
push
push
push
loope
pop
jl
les
das
add
push
pop
xor
repnz
pop
loop
dec
xor
out
cmp
and
pop
xchg
mov
pusha
pusha
jno
inc
jnp
or
icebp
repnz
sbb
fildll
or
stos
sahf
add
jge
mov
and
leave
sub
stos
and
in
inc
or
push
pop
adc
fwait
inc
ficoms
loopne
addl
ljmp
mov
fwait
pop
sub
sbb
inc
adc
jecxz
sahf
jge
enter
jecxz
mov
mov
jp
mov
or
cmc
push
ret
sbb
and
mov
xchg
mov
andb
pusha
pop
subb
dec
sti
adc
cmp
jns
ret
out
push
xchg
add
iret
aad
lods
icebp
jmp
testb
dec
or
or
dec
daa
es
cmp
and
adc
movsl
xor
adc
push
fwait
and
movsl
cmc
inc
ret
and
inc
mov
cmpsl
jecxz
js
cmp
push
in
adc
dec
xchg
daa
jle
add
mov
or
add
adc
push
icebp
ja
inc
mov
int
outsb
push
jecxz
das
fs
std
insl
leave
rolb
stos
shll
jmp
movsb
icebp
insb
xor
pop
jle
divl
add
test
mov
inc
aaa
les
aaa
int
mov
pop
scas
push
adc
adc
mov
mov
dec
aad
sbb
cmc
adc
mov
sub
addl
xor
mov
jb
mov
cmpsl
hlt
xor
sub
loope
loopne
daa
enter
scas
mov
aas
imul
rcl
out
fsubs
pop
dec
cltd
call
int
push
push
mov
sti
je
push
out
add
dec
arpl
mov
sbb
imul
je
xchg
push
adc
mov
or
and
inc
mov
sbb
test
jp
repz
add
xor
add
loopne
js
lcall
dec
loopne
push
stos
inc
ja
jae
repnz
push
jp
dec
lahf
mov
loopne
dec
cmc
lcall
dec
inc
mov
dec
mov
jge
insl
dec
jns
lea
data16
push
cmpsl
add
fnclex
fisubs
push
and
adc
xchg
push
sub
xchg
pop
lods
xor
daa
add
dec
imull
cmc
or
mov
incb
aaa
inc
cli
popf
stc
sahf
sbb
cmp
xor
mov
xor
clc
push
scas
jg
pop
lret
and
push
add
and
roll
and
and
inc
shlb
bound
call
in
pop
sub
jg
shll
push
loopne
jg
xchg
cmc
popa
and
jmp
aad
inc
push
addr16
xchg
cmp
je
lods
mov
sbb
std
fwait
pop
int3
lods
fisubrs
xchg
sahf
pop
movsb
mov
in
pop
mov
fwait
in
adc
add
repnz
xchg
addr16
and
lds
push
scas
sub
sbb
icebp
mov
shll
ja
loopne
and
inc
bound
adcb
adc
dec
imul
push
xchg
xchg
loopne
xchg
ljmp
shlb
dec
imul
cmp
mov
addr16
addr16
dec
daa
mov
push
cmc
push
ja
mov
dec
add
fcompl
cmp
shl
mov
mulb
addr16
mov
xor
rol
xchg
dec
and
mov
repnz
clc
addr16
popa
sub
mov
mov
dec
pushf
sbb
xor
clc
adc
lock
fldt
jg
pop
lods
cmp
push
loopne
xchg
jg
mov
jbe
pusha
mov
lcall
cmp
adc
test
add
ficompl
xchg
cmc
addr16
cmc
outsl
and
mov
dec
cmp
mov
fwait
cli
lods
imul
or
xchg
jp
addr16
enter
jle
pop
xchg
sbbb
movsl
pusha
mov
xchg
jo
pop
inc
cmc
and
shll
add
jae
or
leave
out
addb
mov
pushf
jo,pn
roll
fadds
fisubrl
jo
ret
cmpb
mov
fidivrl
test
xchg
pop
fcos
les
subb
je
fwait
or
or
int
xor
mov
rcrb
adc
fnstsw
roll
mov
dec
push
lods
incb
pop
movb
xchg
jne
add
inc
loope
pop
dec
loopne
fcmovne
movnti
mov
and
and
ret
push
icebp
call
mov
shl
cmpsl
movsb
imul
xor
pop
push
out
inc
cmpsl
pop
and
and
jge
jo
push
or
call
push
lock
lret
or
sub
mov
sub
aam
pop
pop
dec
es
inc
clc
xchg
mov
push
stos
mov
imul
shll
scas
lret
lds
cmc
dec
mov
popa
pushf
mov
mov
jecxz
xchg
mov
and
inc
insb
arpl
inc
fs
fsts
or
xlat
and
ds
lds
sub
and
loopne
icebp
popa
mov
sbbb
les
lods
test
xor
dec
repz
dec
mov
ja
mov
and
xor
add
or
andb
mov
lock
cmp
mov
mov
xbegin
jecxz
mov
xchg
push
rol
in
daa
clc
loopne
jbe
xchg
jl
mov
pushf
mov
cwtl
test
ret
jp
aaa
pop
int3
ficoml
sbb
xor
out
or
jg
int3
xlat
inc
ror
dec
fadds
sarl
stos
add
jecxz
repnz
sbb
daa
leave
roll
mov
bound
scas
in
pop
and
mov
xchg
mov
adcb
lret
jne
push
jb
pop
std
and
jmp
lods
mov
loop
jbe
not
pusha
lock
adc
pop
adc
sub
fsts
cmc
sub
insb
or
leave
cwtl
xchg
sahf
les
cs
shlb
popa
mov
cmpsl
inc
jnp
hlt
xlat
insl
or
loopne
incb
daa
sarb
scas
xchg
fbld
decb
sub
mov
loope
gs
jns
lret
xor
pop
in
sbbl
sahf
jns
sbb
or
jns
mov
or
aaa
sub
push
mov
inc
outsl
fists
loop
xchg
sub
loopne
ds
dec
jnp
rol
pop
xor
out
stos
out
mov
movb
jmp
sbb
andl
and
mov
jle
lea
mov
ds
mov
cmc
pop
clc
sbb
scas
imul
xor
or
lret
lret
aaa
push
dec
jp
out
divb
loope
xor
mov
or
out
icebp
incb
lea
dec
call
sti
xchg
cmpsb
jge
cmp
imul
std
sub
mov
ficomps
mull
xor
or
and
aad
mov
pop
loopne
jne
xchg
aad
dec
dec
cmpl
or
out
in
and
fidivs
xchg
stc
in
out
jne,pn
div
int3
test
jge
shl
dec
pop
mov
mov
add
jae
inc
push
adc
sahf
dec
daa
fistpl
popa
adc
jmp
incl
or
daa
in
jmp
push
test
jecxz
and
in
push
adc
mov
adc
mov
push
jmp
ja
push
mulb
insb
sbb
fs
dec
xor
ljmp
outsb
jns
jecxz
ljmp
pop
in
je
sbb
inc
push
xor
dec
mov
gs
fcmovnu
xchg
push
jge
ss
and
and
inc
mov
mov
inc
jp
rclb
inc
repz
les
lcall
into
cs
mov
fcomip
mov
cmp
ret
mov
dec
mov
fiadds
push
dec
cmpsl
inc
in
jle
inc
movl
xlat
inc
loop
out
mov
aam
push
fs
dec
push
fs
fs
subl
xlat
lret
push
adc
out
inc
jnp
movsl
mov
mov
ss
add
push
jo
pop
or
cmpsl
or
inc
imul
xlat
adc
push
adc
lds
mov
xchg
xor
xchg
mov
imull
sub
aad
pop
ds
leave
movsl
mov
gs
mov
jbe
fildll
daa
jl
test
jmp
dec
fcmovb
mov
xchg
stos
pop
arpl
or
mov
push
mov
loopne
out
jle
aad
imul
push
ret
call
test
mov
dec
pop
in
pop
les
mov
scas
dec
fs
cmp
movsl
mov
scas
pop
adc
cmpsl
inc
movsb
push
test
sahf
cmp
lds
mov
pop
adc
fs
testb
adc
stos
leave
or
dec
xchg
shlb
cmc
push
aas
in
mov
mov
inc
ret
scas
push
xchg
or
cmpsb
fs
jb
jecxz
or
outsl
lret
aam
jg
mov
in
aaa
pop
pop
das
xchg
pop
mov
scas
test
mov
push
add
jbe
mov
push
xchg
aad
xor
add
insl
out
sti
mov
jecxz
dec
cmc
ret
out
lahf
dec
adc
jmp
jmp
les
jecxz
rcll
test
mov
shl
push
adc
cmpb
sbb
push
out
xchg
inc
xlat
xor
mov
lcall
rorb
adc
fwait
inc
add
aad
call
jmp
mov
les
cli
scas
mov
fwait
sbb
jns
inc
mov
push
fisttpl
stos
pop
mov
aaa
or
or
push
aaa
and
push
loop
push
mov
adc
rcrl
ljmp
or
xchg
lds
iret
xchg
pop
mov
in
test
scas
pop
imul
jb
call
lds
sbb
mov
xorl
ret
rolb
shlb
jmp
xor
ret
cmpsl
cs
shrl
dec
mov
or
push
iret
in
les
into
add
iret
cmpsb
stos
xchg
push
inc
mov
sbb
pop
pop
push
mov
add
rorb
ljmp
int3
and
dec
xor
jecxz
inc
inc
cmp
cmpsb
mov
or
fstpl
push
test
jmp
addr16
negb
jnp
popa
lds
xchg
sub
ja
jne
pushf
dec
aas
decb
shlb
fsubl
xor
fldl
hlt
mov
pop
dec
fs
mov
lahf
cmp
adcl
negl
repnz
rcr
xchg
jmp
fdivl
sti
add
js
xlat
inc
jmp
out
push
push
push
push
shrb
arpl
shlb
out
mov
mov
std
mov
ja
test
mov
mov
and
mov
adc
iret
pop
shlb
test
lahf
daa
and
pop
xchg
stc
mov
jo
and
lahf
dec
jmp
adc
cmpsl
pop
pop
aam
pushl
jmp
je
or
cwtl
jecxz
inc
shlb
scas
push
int
dec
add
or
daa
test
dec
out
leave
cli
jmp
movups
cs
test
sbb
aas
or
out
mov
push
and
or
mov
adc
pushf
xor
test
jmp
push
out
addr16
fnsave
add
mov
fld
add
jbe
xlat
jmp
xor
xorb
inc
inc
cs
sbb
push
mov
pop
fwait
push
imull
cmp
mov
adcb
pusha
pop
leave
divl
or
pop
fistpl
repnz
mov
pop
or
mov
fbstp
cmpsb
les
incl
out
shl
or
lahf
inc
outsb
sub
aad
jecxz
lods
out
flds
inc
iret
ljmp
adc
mov
shll
mov
mov
sub
fstpl
jbe
xchg
addr16
dec
or
dec
xchg
shrb
sbb
imul
daa
out
das
lods
iret
xchg
add
in
adc
loope
cs
and
lock
ret
out
pop
shrb
roll
into
addr16
lcall
adc
test
shlb
pop
subl
mov
ret
movsb
test
mov
iret
gs
push
mov
push
xchg
out
jecxz
mov
add
das
cmc
add
out
aaa
jg
ret
inc
lods
dec
add
mov
cwtl
add
mov
xchg
pop
jns
mov
shlb
in
adc
mov
pop
cmc
dec
scas
cmpsb
push
fwait
mov
inc
daa
icebp
jne
jbe
leave
movl
lret
lea
out
jg
dec
aaa
xchg
iret
xchg
addr16
jae
add
and
cmp
je
mov
dec
iret
std
mov
fcoml
stc
mov
pop
mov
dec
mov
movsl
ja
aas
xor
gs
idivb
std
test
xor
daa
test
int
add
shll
std
test
fwait
out
xchg
ja
cmpsl
and
inc
aam
pop
cmpsb
repz
jg
out
jecxz
negl
testb
adc
loope
sub
add
popf
cmpsl
xchg
sarb
outsb
mov
sub
cmp
in
pushf
std
sub
push
outsb
aam
aad
mov
mov
jg
daa
push
xlat
jg
mov
imull
nop
push
mov
addr16
fistl
shl
sub
sbbl
mov
icebp
iret
lods
mov
test
leavew
cmp
rcrb
pop
push
das
jmp
clc
sbb
lahf
adc
sbb
into
xchg
sub
shll
mov
je
mov
adc
mov
pop
or
xor
cmpsb
scas
arpl
lret
out
jg
daa
xchg
or
aad
lds
repz
out
fdivrl
mov
jns
inc
sub
ja,pn
out
stc
daa
shl
repz
push
out
test
inc
add
jmp
adc
and
cmc
pop
insl
and
jae
jbe
inc
sbb
shl
pop
or
dec
ja
sub
cmpsb
jle
jbe
add
test
jae
insb
jbe
lcall
ret
mov
addr16
pushl
das
inc
push
mov
push
sti
xchg
popa
adcl
cmpsl
dec
adc
inc
repz
fcmovu
arpl
sar
add
test
shll
out
dec
push
sbb
test
xor
in
out
aas
fs
imul
dec
mov
mov
sub
pusha
mov
outsb
cmp
dec
adcl
lds
ljmp
cmpl
stos
out
sti
loop
xchg
and
push
movsb
popf
cmc
push
call
cmp
or
loope
xor
cmp
cmp
cmp
out
pop
inc
or
in
sub
cmpsb
daa
mov
jb
test
testl
push
notl
jge
out
pop
aaa
popa
mov
mov
lahf
rolb
rclb
in
xor
or
mov
fwait
pop
movsb
pop
pause
inc
xchg
pop
es
pop
mov
inc
aad
mov
lods
ret
ja
jbe
into
pop
or
lret
xchg
jnp
stos
rcll
out
cmpsl
mov
push
icebp
hlt
xor
jmp
jmp
iret
push
test
mov
adc
pcmpgtb
pop
lahf
lods
shrd
add
pop
jle
pop
inc
aad
push
sbb
xlat
dec
stos
mov
gs
ror
inc
jl
data16
loope
jge
movsl
mov
in
jmp
pshufw
out
ss
movsl
out
and
push
cmc
pushf
aad
ja
imul
ljmp
outsl
test
xchg
pop
xchg
adc
das
push
out
adcb
js
movl
and
fs
mov
ret
test
jle
jnp
inc
mov
in
popa
ljmp
rclb
cmpsb
daa
lret
scas
gs
ss
pop
addl
call
inc
mov
shrb
imul
xchg
push
pop
xchg
insl
pop
inc
mov
jg
push
inc
inc
dec
jb
push
outsl
imul
data16
xor
js
pop
fwait
xlat
es
push
inc
mov
add
rolb
fwait
xor
cli
inc
xchg
ret
fs
in
imul
test
pop
dec
xlat
insl
mov
pop
stos
jmp
pop
cltd
xor
inc
cwtl
stc
mov
scas
sarl
test
cmpb
adc
mov
sbb
mov
mov
outsb
out
mov
jg
lods
div
jle
jge
in
int
mov
test
movsb
add
arpl
inc
out
das
int
pop
rcrb
pop
mov
mov
idivl
enter
neg
pop
ret
leave
jmp
cmpsb
add
lret
sub
adc
mov
cld
jge
mov
jns
lea
mov
mov
cs
out
jb
sbb
shlb
ss
push
sub
xchg
xchg
addr16
mov
cmp
stc
rcrb
enter
aas
jmp
jmp
inc
inc
pop
sbb
pop
bound
pop
jmp
adc
sarb
mov
and
mov
cs
rorb
mov
add
sti
add
lahf
push
aam
stos
mov
push
jo
ljmp
out
mov
mov
cld
jp
add
or
jmp
push
xchg
mov
insl
fwait
push
push
into
xchg
push
lret
mov
lods
pop
out
lock
mov
in
fistpl
aas
std
shl
jbe
sub
jo,pt
ja
addr16
push
cld
std
arpl
jle
and
vpminsq
int3
add
cli
arpl
scas
push
sbb
cmp
mov
test
jb
in
xchg
adc
mov
sbb
icebp
adcl
pusha
sub
fs
add
xchg
pop
jnp
mov
ret
test
mov
arpl
pop
add
stos
icebp
lds
xchg
mov
rcr
outsl
mov
cwtl
jb
addl
ja
shl
jmp
jle
incl
jns
add
adcb
and
filds
adc
les
pause
adc
pushf
es
ja
jnp
test
addl
hlt
push
inc
out
jecxz
ja
out
into
inc
addl
fbstp
loope
sti
xlat
mov
repnz
mov
out
out
xchg
leave
fld
mov
fbld
push
fidivrl
cwtl
scas
ja
mov
add
xchg
push
adc
fidivrs
call
xchg
mov
leave
xor
test
sbb
outsb
sub
or
sbb
insb
cmp
mov
push
sbb
jae
mov
mov
mov
bnd
xchg
jp
imul
mov
pop
dec
sti
adc
push
lea
int3
out
jb
rcrb
sbb
xchg
cmpsb
or
adc
mov
mov
fiadds
mov
cmp
mov
sbb
adcl
jno
or
xlat
test
xchg
pop
pop
jae
imul
push
cmpsl
xchg
push
jg
cmc
jecxz
cmpb
in
jmp
into
ret
test
hlt
shll
dec
mov
pop
enter
repnz
push
add
and
movsb
rol
mov
push
in
orb
fs
jle
cs
dec
add
mov
repnz
mov
cmpl
stc
cmp
dec
pop
adc
mov
in
push
and
imul
lock
popf
xchg
push
inc
add
pop
dec
lds
and
push
or
test
jne
xlat
and
push
jmp
add
xlat
dec
add
jle
xchg
ret
sbb
mov
addb
hlt
inc
out
jb
and
push
xor
mov
jecxz
inc
inc
add
fs
shll
fidivrl
add
stos
push
xchg
test
mov
lea
insb
hlt
sub
or
mov
ja
and
mov
and
fcmovnu
fldl
in
scas
inc
cmp
xor
clc
pop
ljmp
jno
pop
mov
dec
or
fwait
xor
imul
mov
dec
xchg
jbe
or
sarl
mov
icebp
ds
out
cld
xchg
fs
inc
pop
mov
fcmovnbe
sarl
jmp
ss
in
xor
divl
dec
shlb
out
push
out
mov
dec
jne
cmpsb
push
jg
add
ficomps
lock
mov
jne
fistpl
push
fists
push
hlt
daa
mov
shr
jg
in
ss
mov
xchg
icebp
xchg
adc
cmp
jno
data16
xchg
inc
ret
pop
lahf
add
jl
pushf
cmc
cmpsb
arpl
into
add
jae
lds
sub
or
cmpsl
push
or
xor
inc
lods
insl
dec
loopne
pop
mov
xlat
dec
jmp
mov
cld
in
xchg
jmp
ret
and
mov
sahf
xchg
cld
dec
out
jne
jne
les
cmc
jnp
out
pop
jns
pmulhuw
mul
repz
jo
jecxz
cmc
and
daa
out
mov
pop
in
adc
push
adc
push
lods
inc
leave
ja
aaa
sti
adc
push
cli
bound
sti
pop
xchg
cmp
mov
pop
jbe
lds
in
add
inc
out
push
dec
jp
jne
hlt
add
cmc
xchg
and
mov
xchg
jle
add
and
imul
daa
fwait
popf
shl
cltd
xlat
test
jne
xchg
addr16
mov
jg
jne
addr16
data16
mov
fsubp
pop
dec
mov
push
subb
sbb
inc
fwait
and
push
out
lret
xor
jge
cmp
test
test
add
adc
pop
cli
and
jns
mov
or
xor
repz
pop
insb
inc
or
aaa
mov
insb
mov
mov
out
testb
call
push
pop
cmp
add
out
push
sar
inc
mov
adc
jp
ret
shlb
aaa
xor
xchg
mov
inc
mov
pop
arpl
pop
mov
data16
ljmp
jnp
idiv
filds
xchg
xchg
add
and
loope
fidivrs
mov
sar
jl
jns
sbb
push
loop
loope
pop
lret
mov
mov
insb
mov
mulb
cmc
scas
mov
mov
mov
test
cwtl
ja
mov
movsb
pop
xchg
fisttps
fisubrs
rorb
lods
lods
insb
fidivl
sbb
clc
cmpsl
xchg
aam
dec
out
mov
mov
hlt
inc
pop
lods
xor
jg
inc
jne
add
idivb
inc
pop
xor
jmp
lds
adc
aas
and
dec
out
out
fst
jecxz
push
test
fwait
arpl
movsl
daa
jne
xor
ds
mov
mov
push
mov
pusha
fistpll
mov
ds
lea
fistpl
lahf
scas
mov
pop
xor
sbb
mov
shlb
repnz
in
push
test
push
add
gs
mov
jge
jg
ret
ja
cmc
pop
pop
je
mov
arpl
daa
lds
dec
sahf
loopne
test
dec
xor
loopne
sub
imul
and
dec
add
mov
arpl
enter
mov
dec
jecxz
out
cmpsb
pop
in
jmp
insb
and
lcall
push
fildll
test
inc
gs
cmp
fsub
leave
es
xchg
push
dec
push
fisubl
mov
cmpl
out
shlb
push
test
out
mov
divb
lock
adc
pop
push
hlt
sbb
mov
scas
cmc
iret
cmpb
xchg
mov
mov
inc
lods
out
iret
xchg
lods
out
test
add
popf
xor
inc
cmp
sbb
cwtl
ja
cmpsl
dec
pushf
xchg
out
sti
mov
aad
or
add
das
fmull
cmp
mov
int
mov
inc
mov
fdivrs
mov
test
aaa
std
aaa
pop
xor
scas
cmpl
jbe
loopw
movsb
repnz
jg
icebp
fdiv
in
or
dec
add
mov
adc
push
mov
xchg
mov
mov
fisubrl
pop
imul
movl
mov
xchg
sub
lods
inc
hlt
mov
repnz
fcmove
push
ret
add
push
gs
mov
repz
ljmp
lahf
stos
aad
pop
xor
out
cli
dec
ficoml
or
mov
add
test
repz
mov
mov
and
enter
movb
mov
in
es
xchg
in
xlat
or
sbb
outsb
jno
jg
mov
icebp
mov
lock
or
adc
mov
fwait
test
mov
jae
out
fs
xor
aaa
adc
and
out
and
ret
lock
icebp
mul
jmp
jecxz
aas
aad
dec
movl
inc
enter
psubb
mov
fwait
stos
das
ja
jmp
push
inc
mov
fstl
je
push
leave
xlat
inc
lods
xchg
inc
sub
rolb
out
mov
rcll
jnp
and
rolb
or
fwait
loop
in
outsb
mov
test
roll
arpl
sti
mov
into
xor
mov
cmpsb
fldt
mov
sti
loope
into
jmp
jle
mov
dec
mov
loopne
sub
test
out
push
lock
pop
ret
xor
pop
jae
push
jae
jg
movaps
repz
jno
or
xchg
fistpll
xlat
dec
xchg
xor
jmp
movsb
mov
mov
mov
add
mov
pop
sbb
jo
and
adc
aas
ret
cmp
lahf
rcrb
insl
ljmp
in
xor
pop
sub
fildl
pop
add
add
xchg
xchg
cltd
out
mov
movsl
inc
scas
push
rolb
in
or
inc
add
and
enter
mov
pop
cmp
ljmp
pop
sarb
enter
stc
add
iret
ds
imul
mov
scas
andl
ja
repz
fwait
or
out
mov
in
sub
cmpsl
mov
iret
mov
add
push
insl
xor
xchg
cmpsl
push
fistpl
call
sbb
aam
xchg
push
outsl
test
xchg
into
pop
lods
push
fwait
jge
cs
je
jg
stc
pop
add
push
push
insb
iret
adc
xchg
cmpsl
cs
mov
out
mov
cmp
outsb
or
data16
xchg
cld
cmp
jnp
jge
pop
xor
mov
jo
mov
insl
insb
ret
inc
or
rcll
jge
or
ret
addr16
pop
jl
sbb
insl
clc
fs
std
aas
push
jne
hlt
cmpsl
das
mulb
addr16
mov
sbb
adc
jg
outsb
div
pop
push
gs
inc
neg
jo
or
shlb
fs
scas
xchg
xchg
inc
je
rclb
insb
divb
add
scas
shr
or
lods
cmp
xchg
out
icebp
stc
mov
mov
xchg
dec
std
out
add
mov
mov
inc
in
mov
shlb
or
scas
sub
aaa
addr16
push
aam
dec
imulb
data16
std
cwtl
aad
xchg
dec
mov
dec
pushf
nop
lahf
lret
pop
push
lods
jmp
push
cmpsl
sub
mov
inc
ret
test
cs
jne
ds
addw
xchg
loope
mov
push
sub
xchg
inc
pop
test
push
inc
test
cmpsl
cmp
pop
inc
cmpsl
add
inc
inc
xchg
outsl
fcomps
push
imulb
cmpsl
std
fdivrl
pop
shll
dec
add
jg
sbb
test
rcll
pop
push
cmpsb
add
out
mov
inc
or
adc
test
xchg
hlt
in
loopne
mov
mov
aad
fwait
add
lahf
scas
stc
aad
cltd
mov
mov
cmpsl
pop
fldt
mov
insl
in
fadds
add
xchg
lret
mov
mov
xchg
fsubrs
in
ret
out
xchg
mov
test
popf
add
ja
inc
or
ret
adc
rcrb
mov
loope
sbb
cmp
sub
stos
pop
je
mov
jmp
xchg
or
pop
push
je
sub
push
cmp
test
neg
stc
testl
jge
fsub
jp
mov
jl
jp
and
repnz
imul
sbb
sbb
adc
add
add
rcrb
cmc
jo
push
ficoml
jmp
add
ret
clc
lds
in
pop
add
pop
imul
mov
scas
dec
fiadds
add
lcall
faddl
mov
ret
sbb
test
test
icebp
xchg
fmull
js
or
lds
xchg
popf
xchg
fcoms
mov
test
pop
mov
jae
movsl
inc
movsl
jno
xchg
sahf
add
cmp
movl
in
stc
mov
out
xor
mov
mul
jb
jp
sahf
xchg
mov
mov
inc
add
mov
rclb
jbe
sbb
scas
movsl
dec
xor
adc
cmp
mov
mov
popa
shr
fabs
movb
shl
jne
inc
xchg
fwait
es
xchg
sbb
scas
push
jge
daa
neg
sub
mov
adc
les
dec
pop
sarb
xchg
xchg
call
iret
jl
out
ret
mov
xor
jo
int
out
roll
and
addr16
or
shlb
xor
mov
jge
mov
insl
cwtl
aad
dec
push
cmp
mov
jecxz
mov
xor
pusha
fidivs
jne
dec
loop
cmp
scas
hlt
cs
pop
xchg
dec
adc
jmp
jnp
sbb
jno
insl
ljmp
and
sbb
imul
out
repz
pushl
scas
and
stc
out
push
arpl
mov
addr16
test
or
int
cmp
adc
out
fs
test
inc
fucom
dec
dec
jo
out
sti
rcl
movl
cli
aad
lds
pop
popa
jle
vaddsubps
loopne
addr16
clc
or
insb
fstps
cmpsb
ds
loop
xor
and
popf
shll
add
nop
sahf
es
hlt
xchg
js
js
xchg
mov
lahf
imul
jmp
mov
dec
cmp
or
inc
pushf
in
mov
dec
lods
popa
jo
mov
jne
or
add
shlb
mov
push
out
xchg
push
loope
test
loop
xor
lods
xor
lahf
aaa
mov
mov
adc
ja
aam
out
push
jne
xor
pop
das
mov
pop
sbbl
imul
mov
mov
pop
popa
sarb
rcll
aaa
push
test
decl
mov
into
inc
push
sbb
pop
or
aaa
lret
test
rolb
mov
sbb
mov
test
push
adc
xor
jecxz
rcrl
in
outsl
ss
push
ret
sbb
icebp
sbb
and
inc
mov
mov
push
cmpsl
loop
sahf
fs
test
cmp
das
dec
lret
jnp
cmp
cli
lds
pop
sub
out
push
iret
cli
sti
addr16
xor
jle
arpl
call
rcrb
inc
inc
push
jbe
jbe
incl
jne
ret
je
add
nop
testb
mov
xlat
mov
push
add
sbb
int3
testl
loop
jne
sahf
idivl
movsb
cmp
jg
push
roll
test
mov
loope
pop
inc
sarl
jp
sar
cmpsl
out
arpl
pop
mov
inc
xor
adc
pop
sub
hlt
add
movsb
pop
adc
cmc
xlat
add
lret
ret
cwtl
inc
popa
fstpl
sbb
lds
adc
out
repz
push
outsl
dec
pop
jo
fucom
mov
ja
ds
pop
sub
xchg
push
std
dec
in
cld
pop
into
movsl
out
data16
cs
shll
and
mov
fstpt
hlt
push
out
movsb
mov
xchg
sub
lea
popf
push
add
push
addl
dec
push
mov
sbb
pop
test
cs
pushf
outsl
daa
wrmsr
test
add
fists
xor
mov
test
shll
sahf
fsubrl
ret
sub
cmp
jo
repnz
xlat
adc
imul
inc
lret
mov
inc
mov
sub
and
in
xor
mov
stc
pop
gs
mov
sub
gs
ret
loop
fidivrl
into
jmp
scas
div
mov
scas
icebp
pop
and
push
out
decb
out
mov
sbb
repnz
sub
adc
movsb
mov
jp
mov
subl
popl
xchg
addr16
mov
add
xchg
ret
bound
mov
fmull
push
adc
hlt
inc
jg
aaa
bound
fwait
or
xor
cltd
jae
add
and
mov
mov
add
fiaddl
stos
adc
adc
leave
int
jbe
jg
inc
mov
and
aaa
xchg
mov
ds
leave
das
jmp
xchg
pop
in
and
push
shrb
test
outsb
aaa
jne
push
sub
inc
call
xchg
dec
in
xchg
push
insb
cmpsl
rclb
mov
inc
aas
lea
pop
xchg
data16
mov
daa
cmc
jge
enter
inc
clc
aad
push
adc
in
pop
stos
loopne
ja
dec
je
lahf
mov
aaa
mov
in
mov
xchg
gs
flds
pop
sti
lea
jmp
or
mov
xchg
repnz
push
jne
rol
add
sti
pop
cld
outsb
add
lds
add
mov
xchg
insl
mov
push
mov
cmp
sti
pop
jmp
push
mov
push
in
pop
dec
in
stos
push
fwait
xchg
and
inc
lcall
or
jnp
fsubp
je
pushf
xchg
dec
push
adc
fnstsw
out
bnd
inc
insl
shr
adc
xor
jp
cmpsl
addr16
or
sub
daa
loope
xor
dec
cli
sar
jle
in
push
jne
xor
cld
cmp
fbstp
cltd
dec
dec
jg
inc
jecxz
xchg
jbe
addr16
mov
enter
jg
add
sub
inc
mov
sbb
imul
dec
das
ja
xchg
scas
mov
rcll
ret
jl
cmpb
xor
cli
mov
loope
jbe
out
jbe
popl
pop
daa
stc
std
in
xor
adc
out
out
in
stos
ret
add
leave
aad
mov
addr16
mov
outsb
and
xlat
xchg
movw
xchg
push
in
scas
in
lds
daa
test
mov
rclb
push
jg
mov
test
fildll
in
addr16
mov
cmp
imull
add
in
shlb
xor
xor
mov
jbe
dec
lods
es
test
cltd
pop
pop
es
test
lret
jne
sbb
cmp
in
inc
dec
and
aad
hlt
mov
cmpsl
imul
mov
mov
add
cmpsb
xchg
es
push
ss
lods
out
cmpsb
jge
jo
jmp
dec
xchg
addr16
stos
notl
jg
nop
jg
call
inc
lret
dec
push
jmp
daa
mov
mov
push
jl
divl
mov
sub
addl
ret
je
inc
test
mov
insl
in
push
pop
fiaddl
and
in
mov
mov
nop
xchg
ja
jo
loope
das
fiaddl
in
and
sbb
push
stc
loop
hlt
out
lock
rol
mov
movb
scas
data16
mov
inc
xchg
shll
data16
xchg
repnz
mov
mul
in
imul
push
lds
out
out
mov
movsl
mov
test
gs
in
popa
in
inc
ret
aad
loope
inc
or
imul
ds
sbb
push
mov
add
in
sub
divl
add
jne
fbstp
in
jae
add
lahf
ficoms
adc
mov
repz
mov
in
mov
jmp
lock
shlb
test
cltd
aas
mov
aas
dec
aas
jns
adc
cmp
jge
pop
push
les
scas
shrb
popf
outsl
mov
sbb
lds
xorb
lcall
outsl
es
daa
dec
rolb
mov
mov
stos
push
and
ret
sbb
dec
sbb
inc
cmpsl
mov
outsb
mov
xchg
out
push
roll
ds
sti
cltd
jg
cmp
push
bound
movsb
loop
aad
test
in
dec
xlat
jge
bsf
push
lds
xlat
scas
push
push
sti
in
stc
test
jecxz
pop
xchg
in
xchg
cmp
adc
jmp
jmp
sbbb
stos
pop
aad
jg
scas
jge
mov
loopne
rorl
xchg
add
int3
movsb
pop
jb
icebp
add
fmull
shrb
test
pop
fldl
lds
lds
mov
or
jno
out
dec
loope
pop
mov
idivl
mov
push
les
pop
mov
notl
mov
mov
push
test
push
xchg
jne
ftst
push
lds
inc
xor
ja
adc
cmp
mov
xchg
data16
pop
mov
mov
in
pusha
insb
mov
lea
push
cmpsl
rorb
fcomps
stos
mov
jo
mov
lods
xor
adcl
ljmp
ret
hlt
test
es
adc
ret
ret
outsb
jno
jmp
clc
inc
arpl
addr16
xchg
sbb
push
cmpsl
outsl
roll
loop
fdivrp
xchg
add
clc
repnz
sbb
xor
aad
adc
mov
push
xor
arpl
lret
sbb
ret
pop
clc
fists
in
addl
xlat
out
sarl
mov
xchg
icebp
in
in
repz
pop
push
push
shl
add
sub
mov
xchg
sub
hlt
insw
gs
outsb
sub
ljmp
cmpsl
ds
mov
roll
pop
add
pop
outsl
add
out
es
mov
into
aad
push
jmp
push
inc
mov
xchg
rcl
in
inc
test
scas
mov
cmc
or
sub
pop
or
fsubrp
xchg
mov
mov
les
sbb
mov
cmp
dec
mov
cmp
fistpl
ja
int
sbb
adc
ret
mov
aam
dec
mov
jns
dec
sbb
xchg
mov
les
and
scas
loope
stos
and
push
rorb
jbe
dec
jge
pop
test
inc
clc
pop
mov
popf
icebp
aam
fwait
xor
cmp
mov
iret
push
jne
lcall
add
lret
lret
lds
adc
cs
mov
cmpsb
adc
idivl
sti
jl
lret
enter
add
std
mov
xor
inc
shll
jle
fwait
adc
mov
xchg
jo
lds
lret
xchg
jne
and
sbb
push
daa
lcall
xor
out
int3
popf
jb
fisttps
and
ror
mov
adc
inc
pop
scas
icebp
sub
lods
add
aas
addl
jl
cmp
fcoml
fisttps
pop
cmp
aas
mov
imul
xchg
push
sti
aas
mov
ret
lods
xchg
fistpll
outsl
sbb
in
pop
ljmp
jg
mov
pop
jg
popf
das
pop
mov
repz
sar
iret
icebp
rolb
testb
lahf
aam
outsb
fildll
jge
outsb
out
sub
inc
sub
lock
sarl
cmp
dec
leave
and
cmp
mulb
inc
in
js
iret
cltd
push
out
xlat
mov
cmp
cmpsl
xor
dec
out
sbb
sbb
outsl
outsb
mov
push
adc
movsb
mov
jl
movsb
add
loop
cmc
aam
dec
adc
sbb
ds
adc
adc
outsb
shr
imull
outsb
push
fnstenv
negl
jb
push
scas
fwait
push
fnstenv
das
scas
out
inc
insl
pop
xchg
and
mov
fisubs
fsubl
in
dec
dec
in
jno
stc
insl
xchg
mov
jecxz
test
bound
aam
push
fs
xor
ret
les
in
lret
jge
std
lock
addr16
call
loop
add
mov
fidivrl
mov
cmc
shl
repnz
outsl
loopne
sub
movsl
xchg
pop
fsubr
mov
mov
cmpsl
movsl
jne
mov
mov
ds
inc
andb
test
push
addb
test
mov
jge
mov
add
pop
push
jl
outsl
mov
mov
xchg
div
pop
in
lds
xchg
arpl
dec
sub
test
ja
mov
xchg
push
mov
cld
out
xorl
sbb
int
aas
in
push
jge
test
fwait
xchg
repnz
dec
cmp
jmp
jnp
stc
je
into
adc
xchg
pop
fsubl
lds
std
rcl
mov
ret
arpl
subl
push
xchg
gs
clc
scas
addr16
aas
inc
lret
testb
popa
lahf
pop
and
jge
jmp
adc
pop
cmp
sahf
cmp
sub
mov
mov
dec
push
jp
mov
out
lds
pop
out
lret
in
gs
and
cmp
ss
jg
out
mov
jb
cmc
mov
sub
cltd
test
and
push
hlt
std
hlt
mov
xor
inc
xchg
mov
ficoms
mov
ret
sub
sub
mov
xor
cmpsl
shr
roll
aad
push
pop
out
mov
ret
in
push
lds
jmp
and
fmulp
outsb
js
mov
jne
out
xchg
bt
cmp
in
jno
les
movsb
mov
test
das
sub
jns
and
pop
mov
fstl
or
ljmp
cmpsb
aam
mov
mov
xchg
jbe
iret
jge
les
rolb
les
loop
inc
dec
sub
push
xor
lock
xorb
xchg
lahf
daa
adc
out
arpl
inc
and
mov
std
fwait
adc
push
jle
dec
rclb
fs
pop
mov
xlat
pop
adc
lret
cwtl
adc
pusha
icebp
rorb
iret
or
fisttpll
and
dec
and
lret
orl
sbb
mov
push
lds
in
adc
mul
out
lds
xchg
negb
inc
adc
xchg
ret
aas
aam
jmp
and
movsb
inc
cli
addl
pushf
andb
pop
pop
mov
pushf
cmp
mov
ja
and
movsb
lds
in
daa
notl
jle
lret
mov
add
adc
mov
mov
cmpsb
lahf
lret
fdivs
stos
out
gs
lods
test
and
add
jp
es
lea
pushf
cli
movsb
sbb
rcrl
cmpsw
cmpsl
outsb
fs
ret
loopne
stos
sbb
aas
mov
jb
dec
aad
outsb
in
out
testl
sar
mov
mov
pushf
loope
jle
push
cmpsl
movsb
dec
stos
faddl
jecxz
icebp
xchg
test
test
lock
or
decb
cld
mov
sbb
js
jns
ror
js
and
xor
mov
cmpl
data16
scas
adc
xorl
sbb
mov
adc
mov
loopne
cmc
add
push
mov
aaa
dec
jg
mov
pusha
cmpb
int3
add
stos
cmp
cmc
rcrb
add
xlat
mov
mov
daa
jb
mov
decl
jae
testb
out
cmpsl
sti
fildl
fdivrs
jbe
jo
fildl
add
jp
xchg
mov
lcall
inc
repz
daa
es
daa
jecxz
mov
cmpsb
push
cmp
stc
mov
sahf
lahf
ja
lods
push
cmp
jne
xchg
and
hlt
in
mov
test
mov
cmp
push
mov
jge
jno
sbb
shl
lds
jne
inc
cmpsl
and
xchg
test
outsl
std
push
sbb
add
insl
dec
test
sbb
test
js
pop
dec
imul
mov
adc
outsl
pop
repnz
add
push
lea
push
dec
dec
push
movsb
jne
xchg
sarb
or
push
iret
arpl
mov
inc
fimuls
cmp
inc
push
fnstcw
shll
in
sbbb
xchg
dec
pop
pop
mov
fwait
add
mulb
mov
loopne
sbb
lds
loopnew
xlat
jne
les
and
jle
cmpsb
rcrb
mov
in
inc
jo
cmp
decl
test
imul
fs
sbb
sti
dec
mov
jmp
lret
cmc
pop
bound
out
pop
jae
cmpl
lods
push
cmpsb
shrb
dec
test
dec
mov
popa
or
push
aad
gs
cmpsl
push
frstor
jnp
sbbl
sarl
inc
adc
xchg
enter
adc
pop
xor
into
inc
out
push
push
inc
inc
cli
popa
leave
loopne
adc
pushf
aaa
mov
jl
out
repz
lret
and
mov
cmpsl
addb
jle
sbb
lods
aaa
sub
mov
inc
inc
cmp
push
sahf
mov
dec
std
lea
xlat
xchg
repz
addl
and
or
fisubs
dec
jns
jbe
push
loopne
and
sub
add
addl
cmpsb
loopw
mov
cmp
cmpsl
pop
aaa
sbb
iret
rorb
add
addr16
jge
inc
pop
and
sarl
addr16
popa
testb
aam
icebp
popf
sub
xchg
pop
jg
dec
cltd
loope
cmc
mulb
inc
les
sbb
lret
xchg
aad
icebp
sub
outsb
insl
dec
stc
jecxz
cmpl
inc
neg
push
pusha
xor
cmp
xchg
ds
shrl
jno
or
cmpsb
das
sub
pusha
cmp
xchg
cmpsb
repnz
lods
rolb
cs
jmp
iret
jge
xor
jno
mov
fs
je
stc
dec
inc
repz
jb
je
dec
mov
xchg
ret
data16
popa
lds
dec
xor
xorb
pop
pop
inc
sbb
je
dec
xor
outsl
rorb
jecxz
xor
testb
nop
imul
xor
repz
bound
test
fidivrl
inc
xchg
scas
dec
call
arpl
mov
je
mov
dec
call
loope
je
scas
mov
xchg
push
andl
jne
das
xor
test
mov
or
mov
daa
mov
fwait
lds
cltd
mov
addr16
mov
xchg
inc
test
fwait
imul
lds
push
jae
mov
hlt
fs
xchg
xor
fdivl
push
pop
jnp
shrb
inc
xchg
pop
cmpb
das
dec
popa
cmp
push
stos
sub
cmc
pop
push
jbe
sub
std
mov
sub
icebp
pop
push
add
mov
sub
shrl
shl
lods
dec
mov
stos
push
dec
add
mov
mov
sub
ds
pop
pop
jnp
inc
push
sti
test
dec
scas
int3
or
dec
mov
cmp
out
addr16
cmpb
sbb
mov
pop
in
jecxz
pop
mov
cmc
stc
pop
in
ficomps
dec
repz
sbb
stos
test
sbb
cmp
or
mov
rcll
add
push
fwait
mov
lea
movzbl
xor
fsubrs
xchg
es
je
std
mov
mov
xchg
mov
and
fwait
js
shrl
repz
lock
and
jbe
cmpsl
out
jns
icebp
sbb
adc
pop
pop
adc
mov
adc
mov
ret
push
jnp
test
mov
fldl
popl
jl
scas
jbe
pop
mov
push
ja
pop
mov
cmp
add
add
sub
inc
movsb
lcall
mov
adc
rol
aas
divl
fisttps
jns
addb
les
push
dec
sub
icebp
dec
pop
ja
data16
outsl
adc
mov
push
mov
jno
jnp
icebp
xlat
mov
sti
mov
mov
mov
push
lcall
xchg
daa
lods
push
xchg
sbbl
jne
sbb
or
scas
jmp
cltd
stos
cs
scas
cmpsl
mov
jcxz
addr16
repnz
imul
jnp
adcb
aaa
sbb
jb
jne
loop
mov
sarl
test
mov
sarb
xchg
ljmp
dec
scas
stos
int
jae
dec
out
outsl
lret
push
rcrb
mov
mov
cmp
mov
push
inc
add
lds
loop
test
inc
and
mov
and
cmpsb
inc
dec
adc
out
test
sub
pop
ret
pop
je
std
push
hlt
ja
aas
xlat
and
inc
adc
mul
adc
cmpl
sahf
adc
mov
xchg
push
ja
jb
dec
mov
ss
push
ffreep
push
repnz
imul
add
in
int
add
movsl
jmp
loope
cli
or
ffreep
mov
add
mov
cs
imull
pusha
fldenv
idiv
mov
faddp
inc
adc
test
mov
aad
addr16
mov
mov
and
aas
pop
xchg
inc
std
iret
test
cmc
aas
xchg
push
scas
les
iret
mov
scas
aas
jg
dec
and
inc
daa
sub
in
scas
mov
pop
imul
jle
and
mov
fisttps
inc
mov
xchg
inc
in
addl
popl
lea
push
pop
hlt
push
repz
or
push
add
test
aaa
scas
ja
cmc
fs
out
fs
adc
adc
jecxz
loope
push
arpl
xchg
push
fistpll
and
mov
push
addr16
jns
fdivr
cmpsl
data16
and
and
sbb
mov
aad
imulb
in
mov
pop
mov
or
or
cmc
pop
aas
insb
sar
jle
int3
inc
fisttps
test
fs
daa
faddp
cmpb
lods
std
pop
out
repnz
adc
jnp
shlb
loop
ret
or
lret
es
lahf
mov
sti
daa
enter
or
sbb
in
in
mov
addl
sbb
xchg
jae
mov
call
mov
mov
mov
sbb
adc
loope
mov
inc
imul
xchg
or
cmp
cli
insl
dec
xchg
movsb
pop
in
jo
jg
inc
aam
cmpsb
mov
fiaddl
jle
in
in
stos
and
mov
cmpsb
push
cmp
addr16
daa
jne
xor
enter
xorb
xlat
dec
pop
xchg
into
stc
ret
sbbl
sbb
xchg
ficoms
xlat
movsl
or
das
lock
adcl
inc
xor
leave
add
clc
cwtl
cld
repnz
mov
push
pop
aad
sahf
std
cmp
out
or
mov
andl
xchg
sub
lret
cmp
fnstsw
sbbb
fiadds
mov
and
imul
jge
enter
push
lea
shll
mov
push
in
fld
xchg
or
insb
loop
mov
movsl
test
mov
push
sti
in
add
ja
jo
sbb
dec
cmp
push
cmp
lahf
shr
loope
sub
pushf
in
add
ljmp
mov
pop
xchg
aam
stos
into
daa
or
and
dec
lcall
or
test
cmp
push
sti
mov
or
aas
and
jno
jo
mov
addl
and
addl
sub
and
mov
add
popf
insb
in
mov
fs
jecxz
cmpsl
inc
jecxz
arpl
cwtl
mov
movb
mov
and
repz
push
and
std
cmp
rcrl
cmp
adc
mov
test
je
push
movsl
pop
mov
popa
jge
mov
stos
inc
inc
lock
in
dec
jbe
pop
adc
out
pushf
into
sub
aad
fisttpl
jle
sti
inc
pop
pop
mov
xor
dec
std
test
mov
outsl
fnstcw
add
scas
and
out
bound
cmp
daa
ja
pop
inc
rcl
dec
rorl
xchg
popf
cmpsb
pusha
loop
test
pop
je
cmpsl
loop
movsl
mov
rol
lods
cmovne
in
jmp
jns
xchg
test
arpl
fwait
std
jecxz
jge
inc
fs
nop
inc
xor
cmp
repz
jo
adc
lock
mov
insl
scas
xchg
mov
loopne
pop
lea
jp
lods
in
into
push
subl
jne
dec
pop
cmp
pushf
mov
jl
mov
fldenv
and
les
add
shll
xchg
roll
xchg
jecxz
daa
mov
addr16
daa
aad
out
pop
jnp
shll
jg
cmp
test
into
lods
mov
or
ret
lcall
inc
add
bound
cmp
add
sub
not
pop
mov
adc
sub
fisubl
sub
pop
daa
rcrb
in
out
data16
mov
lds
dec
in
jmp
xchg
test
ja
inc
mov
add
movsb
pop
sarb
clc
cmp
and
stos
pop
into
dec
inc
sahf
or
sbb
cmp
xchg
divb
jecxz
aad
inc
out
push
sbb
sti
sub
cmpsb
int
inc
rorb
test
jg
push
adc
mov
push
insl
into
dec
mov
mov
xor
mov
cmp
cwtl
adc
nop
test
addr16
cmpsb
stos
das
dec
loope
xchg
cli
loope
xchg
sub
xchg
out
pop
pop
stc
push
jne
mov
repnz
test
push
loop
cmc
gs
fstl
jb
daa
aad
clc
nop
mov
mov
add
movsb
movl
jl
mov
xorl
call
lods
fs
cmp
push
subl
mov
iret
notl
and
mov
push
sbb
ljmp
mov
movsl
fbstp
aaa
jge
xchg
or
fnsave
xchg
daa
jl
xchg
shll
jb,pt
dec
xchg
imul
jecxz
dec
xor
push
inc
movb
push
imul
cmp
out
jnp
cld
dec
and
push
test
mov
jle
add
scas
movsb
fstpl
inc
in
out
cmp
test
lret
or
mov
lods
test
loope
mov
mov
push
jge
dec
loopne
int
decb
leave
fs
sub
ret
mov
rclb
inc
cmp
xchg
or
cmpl
cwtl
pop
jno
lea
ret
push
lds
push
les
or
fcmovnb
pop
mov
xchg
ret
or
in
sar
lods
icebp
movsl
or
adc
js
sub
mov
push
push
mov
inc
lahf
out
jne
push
bound
outsb
aad
or
rcr
in
xor
daa
les
push
imul
scas
scas
shl
xlat
mov
xacquire
or
lock
add
push
lds
add
rol
dec
xor
sbb
dec
lea
or
out
nop
pushl
imull
cs
or
push
lock
xchg
out
add
inc
push
fwait
dec
sbb
mov
cmp
ja
shlb
aad
jne
test
mov
inc
out
or
xchg
sbb
ljmp
in
xchg
jb
adc
and
xlat
outsb
or
imul
mov
dec
mov
leave
fstpt
ror
sub
cmp
scas
xchg
das
imul
div
fistps
jecxz
es
ficompl
test
xchg
in
inc
dec
jae
xor
and
fistpll
sub
das
imul
loope
mov
fs
in
inc
rorl
push
push
pop
inc
adc
pop
sbb
xlat
jmp
mov
ljmp
inc
cwtl
pop
dec
adc
mov
mov
inc
xchg
and
pop
add
adcb
testl
lret
bound
ss
xor
out
lret
inc
lea
loopne
xchg
jne
stos
mov
lret
fcmovbe
sub
lods
jnp
jo
adc
mov
loop
lock
ret
fwait
loope
icebp
shlb
lahf
jnp
cmpb
iret
clc
xchg
fld1
lock
mov
lret
xor
adc
aas
jmp
mov
test
pushf
lds
in
scas
push
cmp
cmpl
or
notb
movsl
scas
or
call
inc
sarl
xchg
sbb
jecxz
frstor
imul
mov
xor
test
mov
jg
xchg
mov
pop
aaa
mov
mov
icebp
repnz
pop
into
lds
outsb
pushf
aad
add
mov
adc
ret
pop
outsl
subl
add
ja
js
mov
in
sbb
aad
test
les
hlt
xchg
cmc
pusha
js
inc
mov
shll
add
ret
adc
xorb
aas
inc
add
push
aas
jg
divb
out
lds
aam
dec
in
and
idiv
out
lds
in
cmp
stc
push
test
or
push
sbb
movsl
jl
rolb
push
scas
lds
dec
jne
adc
and
sbb
sbb
out
arpl
cmp
sbb
sti
addr16
scas
testb
mov
shll
les
fisubs
test
push
add
push
jg
mov
shll
sarb
or
hlt
inc
lds
idivl
insl
pop
add
and
rcl
test
pop
adc
fs
fisubrs
dec
jle
xchg
popa
test
es
push
test
out
jecxz
enter
push
divl
fdivrp
insb
mov
xchg
pop
popa
imul
loop
and
andb
jb
and
xchg
pop
jns
outsb
xor
nop
shlb
dec
cmp
stos
ret
fidivl
mov
inc
pop
push
fidivrs
jmp
mov
fwait
adc
jbe
sub
test
pop
idivl
leave
iret
jns
sub
xlat
movsb
shll
dec
push
mov
shll
gs
fadds
cmc
mov
inc
adc
and
rep
jl
lcall
in
inc
jo
shlb
fwait
mov
jo
mov
dec
or
mov
lock
arpl
xor
xor
mov
int
xchg
cli
daa
mull
lods
in
jb
ret
and
fdiv
movsb
sub
xchg
adc
mov
jo
cmp
jl
scas
ret
jmp
cmp
dec
inc
mov
fdivs
data16
lods
inc
iret
or
sbb
sbb
inc
mull
test
rol
adc
xor
sub
mov
add
lret
jg
jecxz
or
in
fwait
xchg
mov
repnz
into
aam
push
call
jo
out
inc
jge
out
push
insl
xlat
mov
mov
insl
xchg
data16
stos
push
mov
xor
cs
and
cmc
xorb
repz
out
fidivrs
int
add
lods
or
shlb
jae
sub
xchg
inc
adc
cmp
mov
xchg
fisubrl
loopne
les
lock
xchg
push
loope
jecxz
mov
adcl
and
inc
dec
loop
add
xchg
mov
jle
clc
es
loope
mov
dec
jae
test
flds
cmp
cs
sarl
fldl
xor
clc
add
outsb
dec
mov
lahf
pop
movsb
cmc
shlb
push
int3
fmul
adc
add
xlat
sbb
xchg
popf
cmpsl
scas
inc
in
xchg
jmp
sti
mov
fs
outsb
cmp
mov
xchg
popf
jmp
adc
loope
push
or
int3
rcl
test
inc
mov
mov
sbb
push
fs
fiadds
inc
cs
or
sar
pop
or
mov
and
xlat
xlat
mov
and
test
lahf
inc
sbb
inc
cltd
jg
daa
test
pop
nop
and
dec
or
adc
xchg
shlb
or
push
bound
das
rcl
adc
repnz
adcl
lret
das
and
pop
out
repz
adc
mov
outsl
adc
pusha
ficoms
or
ss
mov
int
out
mov
push
decb
xor
popa
ffreep
mov
cmp
movsb
ja
push
mov
push
mov
cmp
jmp
lds
inc
mov
js
dec
mov
js,pn
and
addl
mov
daa
gs
mov
shll
push
inc
adc
mov
pop
cmp
inc
mov
pop
negb
inc
insl
jae
jbe
test
inc
pusha
fwait
out
inc
mov
xchg
jle
out
cmp
adc
dec
sti
adc
pop
out
dec
dec
adc
fstpt
in
cmpsb
gs
add
xor
fs
xchg
gs
gs
aam
xor
out
fsubl
clc
mov
xchg
lock
cmpsb
cmp
jp
mov
ja
fsubl
sarb
fstpt
popa
sub
sti
lea
inc
popa
pop
sti
add
stos
mov
pop
add
ffree
jecxz
xchg
into
inc
scas
sub
mov
jecxz
fbld
notb
pop
lds
and
inc
stos
ds
cmp
inc
xchg
fsub
aad
test
push
outsl
add
fsts
aad
jnp
fisttps
and
int
pop
inc
jno
hlt
inc
mov
adc
mov
movsl
imul
cmp
mov
repnz
and
pop
paddd
insb
popa
scas
push
hlt
and
ret
rol
add
dec
inc
cmp
dec
cmp
mov
bound
test
imul
fs
inc
inc
fcomi
mov
int3
add
adc
and
add
movsl
stos
lock
pusha
xchg
in
mov
in
insl
test
jbe
or
aas
inc
movsb
jne
nop
adc
aam
inc
xchg
jno
mov
dec
cltd
sti
stos
sub
inc
cs
fs
in
ds
jnp
pop
cmpsb
mov
leave
fcompp
gs
int
in
arpl
inc
out
shll
push
bound
jne
push
and
xchg
sbb
mov
dec
loop
cmpsb
mov
inc
inc
push
mov
sub
pop
jecxz
mov
mov
jo
jne
jb
pop
test
cmpsb
roll
test
jnp
inc
not
out
stc
in
cmp
mulb
shl
fnstcw
jns
mov
ret
out
ljmp
mov
ds
push
jno
xchg
push
push
addb
xchg
icebp
push
in
popa
pop
and
enter
sbb
js
jge
icebp
ret
dec
les
ffree
scas
popa
pop
xchg
jmp
push
lock
xchg
mov
rcr
ret
jns
sti
les
mulb
jl
out
shrb
jg
sub
push
push
ret
es
and
andb
std
add
std
ljmp
cli
jno
bound
dec
lods
sti
das
mov
lock
jmp
xchg
stos
add
jg
or
decl
push
adc
in
fildll
push
push
ret
dec
orl
ret
cmc
xchg
test
mov
jo
pop
in
add
xchg
scas
leave
not
in
das
es
scas
mov
cmc
lcall
or
and
movsb
sbb
pop
add
fiadds
jnp
mov
jg
xchg
xchg
arpl
into
push
in
pushf
inc
or
jae
test
scas
jne
int
test
call
lods
add
pop
lock
popf
movswl
jp
in
dec
shll
notl
stos
push
sub
inc
jne
sbb
test
sub
mov
pop
out
mov
inc
incl
rolb
pop
push
aad
test
aad
decb
cltd
addr16
test
sti
loope
out
jmp
adc
and
bound
xchg
ret
ficomps
icebp
cmpsb
xchg
stos
ja
int3
out
mov
pop
push
in
out
push
pop
mov
pop
jg
sbb
cli
inc
cmp
loopne
xor
push
daa
fcmovnbe
inc
xchg
mov
xlat
pop
popf
pop
and
xchg
ret
out
or
mov
jecxz
imul
or
adc
dec
cmp
cs
test
in
in
push
jg
push
cmp
dec
cmp
push
xchg
rorb
ficoml
sub
inc
int
test
shr
lds
les
pop
xchg
movl
xchg
pop
sub
dec
lret
add
fimull
and
int
push
test
shl
and
loope
lea
jp
fsubrl
imul
scas
cmp
xor
icebp
fwait
in
ja
in
and
jecxz
and
lret
mov
out
mov
push
dec
push
rol
sahf
shll
push
repnz
inc
push
pop
in
push
mov
inc
aam
test
push
and
xchg
jb
sti
inc
test
mov
fwait
push
jge
lock
xlat
fistpll
leave
rol
and
lock
jecxz
out
inc
sbb
in
pop
or
ja
jno
mov
xor
sbb
stos
aam
fidivs
push
sbb
jg
push
lods
stc
in
inc
xlat
mulb
jb
loope
push
dec
loopne
out
pinsrw
enter
jns
stc
jmp
mov
xor
adc
mov
cmpsl
outsb
cwtl
cs
xchg
mov
jecxz
dec
lock
out
addr16
insb
in
and
sbb
shll
or
in
aam
push
es
jmp
inc
or
addl
and
xchg
mov
movb
push
push
pop
mov
fwait
adc
insl
sahf
test
icebp
andl
fxch
sbb
mov
mov
xlat
std
ss
adc
int
fprem1
lahf
xor
fcos
jbe
xchg
stos
cmc
mov
xchg
cs
pop
fbld
sub
push
pop
sub
pop
out
sbb
imul
aaa
add
iret
rcrb
into
test
cli
pop
sbbl
ja
mov
es
sbb
pop
push
or
jl
ret
jmp
pop
fistps
ds
loopne
aam
test
cmpsw
xor
in
outsl
lds
mov
jp
mov
pop
xchg
add
fwait
rorl
or
xchg
jg
mov
clc
scas
scas
xorl
add
jb
movsl
test
mov
or
jge
out
or
jle
cltd
daa
add
dec
push
dec
mov
sub
clc
mov
cmp
mov
and
cmp
cmp
xor
lret
push
dec
cmpsb
add
push
dec
ja
pusha
sbbl
inc
out
mov
popa
cmp
mov
pop
xor
fwait
ret
mov
or
add
rorb
xchg
test
pop
daa
leave
and
shl
xchg
stos
ljmp
cs
out
popa
aaa
cld
shr
mov
std
mov
push
xchg
adc
cmp
scas
xchg
data16
xchg
in
push
and
arpl
jo
rcrb
gs
es
jg
push
xor
jmp
iret
cmp
aaa
xor
cmpsl
pop
and
add
jno
add
xchg
daa
xor
es
xor
sbb
aas
mov
add
mov
push
in
leave
out
inc
arpl
enter
mov
shl
cmp
mov
sub
shrb
insb
mov
in
mov
adc
push
inc
sbb
mov
std
and
cmp
sbb
addl
and
and
add
push
jecxz
xchg
and
mov
xor
and
cli
mov
gs
outsl
jb
cld
stos
inc
icebp
pop
jb
dec
cmp
xchg
call
test
stc
notl
subb
gs
inc
push
mov
sub
xchg
gs
xor
cmpl
rclb
jecxz
dec
mov
cmpsb
xchg
shlb
bound
pop
aad
inc
outsb
sub
lods
inc
jb
cmp
div
inc
daa
stos
dec
pusha
out
jg
dec
cs
in
insl
mov
fists
add
push
sub
fmuls
testl
subl
imul
js
pushl
xor
pop
dec
inc
xchg
inc
lods
sub
repnz
pop
xchg
data16
outsb
pop
push
ficoms
adc
add
cmpsl
into
int
cmp
dec
dec
add
and
adcb
xchg
insb
inc
sbb
or
ret
add
jecxz
inc
rcrb
push
cmp
push
add
in
pop
mov
push
rcrl
or
in
sbb
subb
fs
jp
xchg
cmp
sahf
mov
imul
rcll
jbe
jae
xchg
sahf
add
jge
mov
lea
aaa
repnz
ret
subb
dec
rcrl
notb
orl
sub
hlt
xchg
mov
mov
loopne
je
imull
mov
cmc
outsb
dec
cmp
decl
jg
test
gs
sti
mov
cmp
push
inc
shlb
inc
pop
shlb
cmp
jbe
in
adc
pop
scas
gs
iret
sbb
shr
dec
jno
addb
pop
jns
hlt
sti
loope
nop
mov
cmpsl
jae
mov
lods
dec
stc
test
xchg
adc
sbb
pop
stos
mov
das
mov
movsl
std
dec
iret
xor
test
movsb
roll
faddp
testl
lahf
jae
out
and
pop
or
lods
lds
push
filds
ljmp
lahf
xor
stc
dec
idivb
fsubl
inc
inc
inc
jbe
lods
notl
jmp
xchg
gs
in
test
dec
cmp
mov
push
inc
ljmp
mov
in
mov
dec
fs
aad
lds
pop
test
test
aaa
daa
cmp
inc
jg
in
scas
icebp
xchg
es
popa
ss
or
inc
push
lea
fistpll
mov
or
pop
add
or
mov
loope
mov
sarb
mov
int
xchg
leave
scas
icebp
ficoms
mov
enter
sbb
loope
pop
sbb
and
js
sbb
outsl
inc
pop
data16
sbb
shrl
rorl
aad
inc
test
and
scas
shl
aaa
shl
push
fwait
out
fimull
xchg
hlt
cmpsl
inc
movsl
lods
lea
sti
daa
ljmp
mov
stos
sahf
sub
push
cmp
lcall
dec
xchg
sub
jb
std
adc
pusha
lods
jle
sub
in
inc
in
shlb
cmp
jg
sti
cs
mov
outsl
mov
iret
mov
das
popa
mov
pop
mov
jp
mov
dec
shrb
test
inc
pop
xor
cmpsl
mov
pop
mov
ret
and
js
xchg
aam
testl
icebp
stc
rorb
orl
adc
out
imul
test
xchg
in
test
aam
and
fwait
sbb
and
jge
and
in
in
ror
add
jbe
shrb
push
jge
in
aas
out
jbe
xchg
data16
arpl
jo
scas
xchg
in
adc
adc
loopne
pop
std
cmp
adc
pop
xchg
adc
cwtl
xchg
xchg
into
jae
sbb
ffreep
mov
push
mov
cld
xlat
rorb
dec
mov
rcl
adc
mov
mov
out
ret
gs
add
cmp
icebp
mulb
cmc
mov
jae
lock
mov
sbb
mov
mov
sub
sbb
add
mov
cmp
sar
popa
mov
mull
mov
cmpsb
mov
xlat
jl
mov
test
and
sbb
sub
dec
xor
dec
aam
xchg
mov
mov
mov
cli
test
xor
push
adc
hlt
xor
cli
push
adc
adc
jmp
sahf
push
daa
inc
int3
insl
imull
popf
rorb
mov
aad
stc
xlat
out
adc
and
and
dec
and
lds
lcall
dec
adc
pop
pop
stos
sub
sbb
aad
lock
test
sahf
mov
inc
and
ljmp
and
loopne
inc
mov
test
and
ss
push
outsl
test
rcrb
movb
jmp
xor
xor
jg
test
popf
mov
mov
lea
lahf
and
add
push
int
in
xchg
jno
flds
xor
fstpt
xor
push
ret
mov
setle
stos
shrb
aas
push
and
fisubs
push
ja
ret
into
xchg
and
cmp
push
test
mov
jo
lahf
cmp
outsb
addr16
dec
cmpsb
mov
shll
out
cmpsl
jecxz
movl
cltd
adc
xor
or
adc
mov
in
adc
std
jb
in
test
fnsave
push
xchg
cld
mov
fcoml
pop
bound
and
out
add
mov
lea
pop
push
push
mov
or
ret
and
inc
sbb
test
ss
or
mov
push
pop
jge
inc
aad
inc
adc
mov
test
xchg
les
iret
dec
pop
jae
int3
push
scas
icebp
push
adc
fwait
push
in
dec
jnp
jne
addb
jmp
push
test
lea
sti
lock
sbb
xchg
add
dec
or
js
cmpsb
lahf
test
jo,pn
xor
jbe
dec
add
push
stos
fs
push
jno
roll
inc
clc
pop
lret
push
push
mov
jmp
mov
or
repz
xchg
sub
dec
jge
fs
rolb
cltd
rcrl
insl
mov
fstps
adc
adc
push
lock
fmull
call
icebp
and
es
cmpsl
mov
sbb
shrb
fiaddl
testb
push
negl
out
data16
push
inc
xor
cmpsl
inc
shl
sub
or
rcrb
jge
jno
out
pop
mov
insl
mov
das
clc
sti
inc
sbb
xor
std
fwait
test
addr16
mov
cmp
dec
fidivl
and
lret
adc
subb
aam
xor
div
addl
pop
mov
lds
sahf
adc
lret
outsb
sti
add
adc
push
out
push
sbb
xchg
xchg
shl
or
fwait
mov
inc
mov
cmovbe
mov
and
inc
incb
cmc
jae
jbe
aas
in
pop
inc
adc
in
int3
les
jnp
or
mulb
inc
idivl
data16
inc
mov
repz
imul
xor
cli
mov
lahf
adc
lea
imul
xchg
sbb
or
out
push
jecxz
lret
xchg
or
push
jecxz
sbb
add
or
cmp
aaa
mov
popf
repnz
lock
jp
inc
out
leave
or
push
ret
insl
mov
imul
cmp
aaa
inc
shr
in
fbstp
orb
add
add
mov
add
arpl
andl
call
mov
and
jge
sub
repz
fs
cmc
push
ja
sbb
subl
pop
jns
mov
daa
and
xchg
cmc
add
test
mov
inc
ja
jl
cmp
mulb
add
xor
fs
xor
and
test
stc
or
test
mov
std
inc
mov
xor
flds
mov
pop
jne
enter
xchg
inc
push
jl
ljmp
outsb
xchg
inc
in
out
lret
sahf
shll
cs
inc
stc
mov
sub
fldenv
test
and
sti
jno
mov
sub
mov
dec
jecxz
inc
push
mov
mov
or
int
pop
ret
inc
outsb
cwtl
stc
gs
dec
xchg
sbb
jl
je
je
ret
pop
jo
pop
lea
inc
out
scas
int3
outsl
lds
inc
mov
ds
mov
in
stos
jns,pt
ds
shrl
xchg
out
in
xlat
pop
adc
daa
cmpb
dec
push
jno
mov
cmc
lea
ret
and
test
jo
jbe
mov
cli
icebp
dec
mov
ja
enter
mov
sar
mov
subl
jnp
lock
idivb
dec
rcll
loop
add
inc
movsl
and
add
fiaddl
jns
mov
cmpsl
mov
ret
outsb
add
jns
icebp
sbb
jno
mov
dec
mov
jne
scas
dec
test
lret
adc
jb
pop
out
in
shlb
arpl
test
test
fs
jo
dec
cli
test
or
adc
ja
push
out
mov
mov
fnstsw
inc
subl
jecxz
jg
sbb
sub
mov
add
jg
jecxz
xchg
lods
xor
cmpsl
ret
clc
movl
into
aas
repnz
xorl
outsb
mov
in
sub
sub
mov
lods
push
push
push
pop
xchg
inc
pop
nop
jo
cmp
and
aam
imul
mov
xor
decl
jo
mov
push
mov
sbb
orl
and
cld
shlb
dec
pop
notb
cmpsl
movsl
and
int3
es
xor
fildll
push
xchg
and
xchg
in
incb
mov
xorl
imul
in
pop
cli
pusha
pop
or
outsl
leave
pop
mov
leavew
mov
ljmp
rol
adc
sub
addr16
sbb
stc
mov
arpl
push
es
loope
ljmp
jne
xchg
xor
les
add
xor
cmc
inc
inc
sbb
ja
mov
sbb
test
subb
sub
das
leave
lods
mov
jb
push
xchg
incb
and
xor
out
fisubs
xlat
pop
cmp
mov
ret
movl
faddl
xor
pop
push
or
jns
cmp
stos
loop
gs
cmp
mov
repnz
cmp
jmp
or
sahf
sub
int
cmp
push
sti
pop
ret
adc
daa
insl
test
test
ret
mov
fsubl
dec
cmpsl
insl
jge
insb
gs
daa
andb
frstor
pop
add
jns
add
add
nop
aad
loopne
add
xchg
lcall
mov
cmp
mov
movl
jae
imul
outsb
sbb
mov
sbb
jnp
sbb
ljmp
popf
sbb
fisubrl
fisttps
mov
inc
test
popa
std
stos
jecxz
fs
push
pop
mov
out
popa
sbb
xchg
fucom
xor
loope
mov
nop
ret
sahf
cmpsl
mov
into
ret
mov
in
shrb
mov
lahf
lods
and
ss
ja
out
ljmp
dec
lahf
and
orl
mov
cmpsb
mov
push
mov
or
pop
aad
test
mov
dec
imul
out
adc
jg
jl
add
shrb
nop
fsubrl
dec
outsl
movsb
xor
cmp
shr
ret
popf
daa
bound
daa
les
mov
lods
out
gs
sbb
dec
sahf
clc
xlat
ret
lcall
inc
dec
jae
nop
sbb
lock
bound
and
jge
sub
mov
xlat
cmp
ja
out
or
push
les
negl
negl
test
jp
push
adc
rcr
notl
call
cld
gs
data16
xchg
cltd
lods
jo
mov
es
cmp
cmova
out
sar
fisttpll
out
and
inc
aam
pop
gs
xchg
daa
mov
ret
into
xor
inc
pop
test
mov
inc
xchg
dec
jge
fildll
and
push
inc
lds
sti
outsb
cmp
lea
in
enter
call
pop
test
xor
fldl
cmp
ds
xchg
mov
xchg
mov
pop
mov
jge
arpl
fs
xchg
movsl
or
je
pop
mov
in
pop
pop
jge
fiadds
inc
in
je
sahf
jg
jo
insl
mov
stos
jbe
std
jbe
test
je
sbb
test
in
push
xchg
pop
insl
jne
push
jbe
mov
xchg
sub
pop
xor
or
inc
mov
dec
pusha
ret
pop
daa
test
cmpsl
clc
cmp
push
or
imul
cmpsl
jne
lea
jmp
sar
pop
dec
pmulhw
pop
repnz
adc
popa
ljmp
test
adc
lahf
imul
inc
cli
in
pop
pop
mov
sbb
xchg
sub
sarb
xlat
mov
lcall
test
sbb
inc
rep
mov
aaa
stc
jl
xchg
dec
cwtl
lods
ss
mov
syscall
incb
imul
ja
pop
test
in
loopne
push
sbb
fcoml
add
out
xchg
or
ss
call
incb
dec
mov
lds
add
mov
in
fidivs
adc
mov
stc
addr16
xchg
fldenv
adc
scas
out
test
sub
mov
jnp
jmp
mov
mov
inc
jmp
mov
cmp
inc
ljmp
sub
mov
addr16
inc
and
sub
sub
mov
imul
das
jp
jbe
ret
jb
jo
mov
adc
xchg
jbe
push
pop
movsb
or
inc
test
ja
out
vpor
mov
mov
push
out
dec
sbb
pop
fwait
testl
mov
fildll
mov
cmpsb
lea
mov
adc
leave
insl
lcall
and
imul
hlt
xor
ret
incl
repnz
jp
adc
rcl
cltd
cmpsb
push
jle
pop
xchg
mov
mov
push
addw
loopne
pop
mov
mov
add
cmp
into
mov
dec
xchg
testb
pop
insl
push
fcoml
aam
pop
add
xchg
rcll
xchg
test
mov
sbb
scas
mov
pop
and
je
jae
sti
mov
pop
push
test
mov
pop
es
push
push
jne
push
out
cld
lds
mov
cs
and
fdivrs
and
lahf
sti
loope
cs
subw
andb
out
lret
cmp
bound
lds
lea
lds
pop
das
in
shl
pop
aad
std
scas
std
mov
mov
adc
popa
xchg
sahf
mov
mov
repnz
adc
mov
cmpsl
xor
ret
out
ret
sub
adc
lret
loopne
cmp
out
push
test
add
jns
loopne
mov
pusha
insl
sarb
les
or
ds
xchg
inc
imul
mov
xlat
jns
xor
cmp
mov
pop
push
movb
mov
push
pop
arpl
fs
test
hlt
dec
movsl
jae
add
scas
rcrl
add
mov
test
dec
sar
add
cmp
push
mov
inc
mul
mov
outsb
jno
in
or
aam
daa
jo
mov
xor
mov
push
inc
sub
scas
stos
ret
jbe
dec
ror
pop
sbb
pop
js
movsl
cltd
inc
dec
subb
jnp
mov
mov
xorl
jo
inc
push
and
mov
loopne
fisttps
pop
loop
add
inc
andl
inc
sbb
scas
je
xchg
icebp
jb
icebp
push
jne
ss
mov
les
int
xor
jne
scas
rolb
stos
fmull
aas
and
hlt
out
mov
test
stos
gs
or
adc
leave
dec
push
mov
jg
fbld
aaa
jecxz
or
xor
mov
inc
mov
jne
sub
pop
out
xchg
mov
inc
adc
fs
and
movsb
mov
mov
inc
inc
lahf
bound
aam
add
movsl
aaa
push
mov
sahf
or
sbb
test
aam
pop
dec
xchg
pop
repnz
xchg
jnp
pop
inc
lods
jo
jns
int
out
rcr
mov
add
fldl
inc
pop
ffreep
mov
arpl
cltd
out
mov
outsl
shrl
xchg
ret
arpl
sbb
int
add
movsl
popa
adc
sarl
sbb
mov
stos
out
lock
sbb
daa
rclb
shll
leave
divl
loop
test
xchg
cwtl
xor
movsl
push
fdiv
pusha
sbb
cltd
mov
xchg
sbb
adc
out
ficoml
sahf
inc
movsl
jo
inc
cmp
incb
add
add
lock
loop
test
out
ja
jg
jno
jle
mov
push
lods
mov
arpl
sub
out
jp
out
out
mov
push
xchg
loop
sbb
add
imul
stos
fs
sbb
jo
jle
outsb
xor
jno
ret
mov
jle
scas
cmc
mov
loop
dec
inc
mov
mov
inc
je
inc
mov
mov
mov
test
bound
fistl
xchg
loope
rol
xor
add
mov
mulb
jb
gs
add
out
das
jo
ss
daa
js
fst
ficoms
jns
jo
xchg
stos
or
push
push
decb
lods
leave
or
cmp
jg
insb
jb
pop
ret
add
add
cmp
add
xchg
test
jno
gs
push
push
jecxz
push
imul
aad
nop
push
insl
mov
adc
icebp
jae
pop
fistl
mov
cmp
test
xor
ret
std
je
arpl
cmovno
in
mov
ret
ret
jg
jecxz
fs
loop
add
fs
loopne
aas
ret
push
shll
or
hlt
ret
sbb
les
ret
fcos
push
xchg
test
in
push
icebp
jle
cs
xchg
mull
xchg
mov
je
dec
repz
cmc
stos
test
loope
xor
mov
push
cmpl
lret
test
dec
js
push
jb
mov
loope
cmp
repz
addl
sti
mov
out
mov
imul
in
add
add
icebp
push
cmpb
inc
pop
mov
pop
test
or
cmc
lret
test
cmovns
pop
mov
and
pushf
das
incb
pop
outsb
add
int
fldt
fwait
dec
push
mov
push
loop
es
and
push
out
notl
xchg
jecxz
jmp
and
inc
cld
int3
mov
cmpsl
inc
xchg
mov
add
cmp
movb
in
mov
cli
rcll
inc
jge
add
loope
ss
rol
add
aam
pop
cs
sbb
lods
jne
je
mov
and
pop
sbb
repnz
test
sar
mov
sub
loopne
add
sub
int
addl
fwait
imul
adc
sbb
adcb
xchg
and
fildl
in
add
and
xchg
cltd
add
dec
gs
rcrl
add
decb
jbe
mov
inc
imul
inc
sub
shlb
cmp
mov
mov
loop
add
jmp
aad
mov
insb
push
fidivrs
cwtl
mov
jne
push
inc
jmp
mov
sti
sub
sub
outsb
inc
std
sub
sub
push
jmp
mov
pop
outsb
xchg
enter
jno
mov
loop
xor
cmp
faddl
jmp
push
and
adc
push
call
iret
in
cs
test
jae
mov
add
imul
subl
insl
add
and
xlat
popf
xorl
fs
jge
adc
loope
not
mov
scas
insl
mov
hlt
add
rclb
movsb
mov
test
imul
pop
cmp
dec
push
lods
mov
test
xlat
int
sub
mov
jle
inc
or
adc
push
adc
sub
xlat
loop
mov
aas
fdivrl
and
inc
pop
fs
mov
roll
add
out
cmp
inc
pop
pop
mov
mov
dec
loopne
pop
iret
fnsave
xlat
jle
mov
push
xchg
call
test
mov
adc
mov
mov
dec
cs
inc
scas
test
fsubl
inc
mov
xchg
add
and
rclb
jae
add
inc
xor
lea
fldl
pop
cmpl
inc
cmp
jp
inc
mov
xchg
shl
and
ds
adc
cmp
inc
ret
lcall
mov
push
jnp
and
dec
mov
add
ljmp
loope
sub
mov
dec
test
nop
push
adc
fs
xor
push
loop
and
xor
addr16
insl
sub
dec
add
aam
pop
push
inc
cltd
out
in
stos
xor
push
ljmp
iret
xchg
jle
inc
push
mov
jg
mov
mov
and
ljmp
in
std
aam
fbld
test
fs
cmp
add
push
ja
jg
mov
fbld
testb
xchg
loop
ret
movl
incb
xchg
ret
shl
hlt
and
inc
mulb
aas
add
ret
pop
out
shrl
testl
cli
filds
insl
inc
jns
iret
xor
jmp
scas
out
int3
lods
cmpsl
ror
inc
lea
sub
or
rclb
ss
pop
mov
sub
cmp
adc
add
insl
dec
outsb
push
fdivrs
cmpsl
das
xchg
lahf
add
stc
xchg
dec
aaa
xchg
mov
and
cli
insl
adc
aam
test
cs
lea
pusha
mov
add
es
es
scas
fwait
or
in
xor
icebp
jne
out
mov
sar
add
push
sahf
repz
cmpsl
sbb
rorl
pop
push
mov
add
push
lret
adc
and
enter
jg
mov
push
fwait
decb
ds
sub
dec
rcl
push
inc
and
sub
jmp
or
and
jg
stos
icebp
jl
mov
push
sbbb
mov
pop
xor
dec
enter
cmpsl
hlt
in
out
xchg
aad
scas
or
cmp
inc
inc
sub
daa
cmpsl
leave
push
pop
test
in
pop
and
fwait
cli
adc
push
pop
jae
in
aas
mov
out
xchg
mov
jne
pop
xchg
push
scas
je
adc
cltd
out
mov
insl
sarb
inc
mov
out
push
shrb
and
data16
pusha
push
movsl
cmp
mov
adc
pop
add
lea
test
clc
fdivrl
fiadds
inc
test
pusha
divb
pop
push
mov
arpl
add
imul
pop
aaa
outsb
sbb
mov
out
jbe
fwait
adc
fcoml
mov
daa
cmp
cmpsl
int
mov
fwait
jle
rorb
cmp
in
jbe
out
xlat
scas
pop
das
pop
sub
push
pop
jb
push
push
shlb
imul
loop
addl
mov
mov
adcb
sbb
sbb
ret
mov
rcrb
stos
es
sub
ljmp
mov
mov
lock
jle
pop
scas
xchg
imul
push
push
push
out
xor
cmpsb
lock
add
stos
pusha
fstl
cs
arpl
addr16
stc
fwait
cmp
pop
ret
and
mov
mov
aad
fwait
inc
imul
in
xchg
pop
aad
call
mov
cmpsl
ret
aaa
shll
add
sbb
neg
xchg
cwtl
out
cmpb
mov
mov
sub
jnp
push
test
daa
insl
push
jb
and
lods
loopne
inc
fucom
inc
dec
in
rorb
push
inc
or
mov
cmp
push
push
fisubs
stos
dec
jnp
and
adc
mov
mov
or
cli
out
decl
mov
inc
sub
mov
scas
or
mov
pushf
xor
out
mov
jecxz
inc
adc
ret
test
push
test
mov
sub
into
int
jbe
xor
push
repnz
sbb
sub
and
xchg
data16
movsl
xchg
inc
adc
lds
sub
es
shrb
rclb
addl
sbb
fbstp
aad
sahf
push
cs
pop
out
push
fdivp
push
xchg
cmp
add
leave
dec
pusha
daa
mov
ljmp
lock
sti
or
adcb
scas
imul
out
xor
ja
adc
out
jge
clc
cmp
js
movsl
aaa
movsl
stos
cmp
sub
jp
mull
dec
cmp
mov
sbb
sbb
pop
movsb
testb
popa
insb
jmp
and
pop
sbb
sahf
loop
das
add
mov
push
mov
cmpsb
mov
xchg
aam
ja
mov
jge
inc
add
int3
rolb
mull
inc
shlb
testb
daa
sarb
es
pop
mull
lds
test
std
push
fadds
dec
mov
push
mov
rcrb
rcr
xchg
add
daa
popf
bound
addr16
icebp
divb
jns
push
out
mov
pand
pop
sub
inc
mov
cmpsb
pop
mov
mov
addr16
mov
in
lds
jecxz
push
in
push
test
sbbb
mov
movsl
or
repz
xchg
inc
add
xchg
pop
sub
xor
jecxz
jge
jg
fiadds
inc
dec
xor
push
cmp
out
fidivrs
push
sub
sub
hlt
inc
push
in
dec
push
mov
dec
rol
pop
or
jb
push
addr16
mov
jb
mov
in
iret
mov
cmp
xchg
lds
xchg
jmp
ds
lahf
add
decb
out
cmc
test
xchg
movsl
mov
jbe
lods
and
jmp
test
hlt
mov
mov
fisubrs
ret
xchg
bound
test
sub
in
jnp
jge
sahf
aad
mov
push
in
movb
addb
xor
rcrb
lods
lret
cmpsl
fucomi
stc
cltd
push
jae
vcomiss
aam
pop
cmpb
pop
ljmp
js
jecxz
insb
push
call
aam
aam
sti
sti
xchg
jae
sar
mov
adc
sub
cld
out
out
insb
pop
push
aas
pop
mov
ret
add
scas
lock
pop
or
dec
add
mov
mov
or
ljmp
frstor
ret
test
ja
arpl
fldcw
testl
jle
nop
sub
xor
pusha
jg
and
in
test
ljmp
xor
in
jbe
jg
movl
daa
mov
flds
arpl
mov
lahf
jnp
addr16
movsl
pop
jne
gs
inc
in
jbe
xchg
in
adc
adc
cli
filds
inc
ja
negb
xor
and
add
fucom
mov
mov
cmpsl
and
arpl
inc
xchg
arpl
out
add
ret
mov
vrsqrtss
cmc
inc
and
pop
sarl
iret
adc
add
push
jle
addr16
lahf
mov
popa
cli
filds
cmp
loopne
cmc
shr
pop
andb
pusha
xchg
and
inc
int
inc
arpl
addr16
mov
iret
mov
aaa
out
cmc
daa
incb
xchg
ret
fldenv
data16
inc
push
shl
in
lds
gs
jg
movl
test
testb
mov
out
cmc
add
jecxz
ret
ret
mov
aas
arpl
inc
jecxz
and
add
ret
shl
ret
jg
bound
andl
add
loope
roll
mov
adc
jno
adcl
jl
movsl
imull
xchg
rcl
and
int
hlt
adc
cmpsb
cmpsl
push
ret
fistpl
fildll
cltd
addb
aam
pop
sar
pop
leave
push
rol
popf
xchg
add
das
add
in
fs
dec
das
pop
in
pop
js
repnz
sbb
adc
dec
jge
or
in
aaa
push
test
out
fidivs
repnz
shll
xchg
inc
std
int3
cld
in
mov
stc
stos
fdivr
jmp
adc
push
cltd
shrl
stos
mov
mov
inc
jbe
gs
adc
inc
lds
or
ror
out
out
sub
inc
sbb
sar
repnz
xchg
fcmovnb
mov
xchg
in
test
inc
nop
xor
fistl
jno
dec
or
fwait
mov
ja
xor
es
iret
leave
push
cmpsl
pop
rolb
adc
std
fisubs
sub
add
pop
jp
scas
cmpsl
mov
mov
sti
stos
std
push
sti
stc
and
daa
lods
or
outsw
jg
mov
ljmp
mov
sbb
imul
loope
xor
pushl
cmpsl
rclb
arpl
iret
add
repz
lods
in
push
xchg
mov
jge
jns
inc
push
lret
inc
jg
jne
test
ret
cmpsb
jns
cmpsl
xlat
mov
mov
inc
or
jmp
and
icebp
mov
and
test
loope
push
leave
lods
mov
inc
xchg
into
adc
out
aad
cmc
arpl
sbb
lahf
stc
xchg
cmp
lret
and
icebp
fs
and
jne
in
xor
faddl
sbb
addr16
cmc
mov
sti
icebp
cmpsb
and
mov
cmpsl
adc
mov
xor
shrb
cs
or
js
arpl
test
jge
mov
add
dec
rcr
stos
sti
push
sahf
aaa
fs
addr16
push
fwait
jp
nop
movsl
out
pop
inc
pop
push
enter
jne
add
ja
out
xchg
stos
hlt
fs
mov
push
scas
pop
outsl
push
lods
fldl
push
rcrb
lods
in
jge
loope
or
hlt
into
push
nop
mov
dec
add
hlt
inc
dec
shlb
scas
scas
push
sbb
add
jmp
adc
inc
inc
popf
ret
inc
hlt
or
adcl
mov
sbb
sub
scas
daa
out
push
shl
push
and
jo
ds
aas
mov
movsb
push
push
sahf
imul
inc
add
rclb
cmp
adc
sbbl
lods
dec
dec
push
arpl
xchg
sub
push
mov
dec
dec
scas
movsb
in
mov
and
outsb
mov
push
test
mov
dec
orb
ret
aaa
add
add
sar
mov
dec
cmpsl
jnp
fiadds
call
lret
push
xlat
cmpsb
shlb
sub
cmpsl
stc
clc
notl
xchg
ja
sahf
or
rolb
or
aad
dec
and
bnd
fdivrs
notl
jl
arpl
xchg
loop
rcrb
or
inc
fs
jge
and
push
into
jle
xlat
xchg
mov
jno
fnstenv
into
sbb
fs
pop
lahf
dec
jp
ljmp
and
inc
movl
je
imul
xlat
jmp
sub
push
lret
mov
mov
cli
push
xchg
cmpsb
jae
inc
dec
lds
or
mov
push
jne
loop
sub
pop
jl
negl
test
mov
outsb
or
sahf
sub
or
lods
or
pop
mov
cmp
in
shrl
dec
pop
insb
jmp
div
push
mov
xchg
jle
jg
xchg
repz
inc
dec
imul
sbb
imul
inc
xchg
cmp
mov
into
pop
data16
add
test
insl
fldenv
pop
fs
cmc
inc
shl
or
or
xchg
jne
push
lret
jae
pop
cmp
gs
ret
jl
mov
ds
divb
shll
mov
push
loope
sub
and
cmp
test
ret
dec
fstpt
fs
jmp
or
jns
je
lods
outsb
ret
or
pop
adc
and
inc
jo
or
fisttps
out
and
cmc
ret
or
cmp
pop
repnz
aas
adc
or
xor
jae
shr
dec
sub
sbb
rclb
lret
cmc
jnp
push
bound
jmp
out
rcrb
dec
cmp
and
mov
addr16
inc
into
lods
and
std
add
or
outsb
inc
js
dec
pop
shl
jne
daa
ds
mov
out
cmpsb
cmp
jne
jecxz
fidivl
bound
cli
hlt
inc
insb
push
push
jge
clc
shr
xor
pop
sbb
mov
inc
mulb
int
jg
mov
lds
mov
incb
shl
cs
imul
repnz
insl
rcrl
push
mov
in
in
jle
cmc
inc
scas
imul
xor
stos
mov
loopne
or
dec
pop
daa
jecxz
fs
test
ljmp
dec
cmp
mov
push
insl
movsb
mov
shll
or
out
mov
mov
add
repnz
sbb
movsb
fnstcw
adc
aas
xor
add
inc
or
xchg
sbb
mov
sbb
out
or
pop
jae
repnz
dec
aam
repz
shll
loop
movsl
xor
movsb
int
cmp
mov
in
adc
decl
ja
stc
mov
orl
sub
or
push
sbb
inc
fidivrl
jle
idivb
les
mov
mov
insl
test
adc
and
adc
movsb
loope
insl
sub
mov
fld
insl
push
xor
adc
std
or
mov
adc
les
and
movsb
cmc
pop
inc
mov
jg
pusha
popf
push
mov
cmc
les
or
adc
stos
dec
mov
jmp
clc
jmp
incb
push
cmc
or
sub
xorb
bound
sarb
outsb
lods
sbb
fadds
jecxz
cmp
scas
fmulp
movsl
rcll
mov
rcr
icebp
or
and
xlat
ss
in
or
add
test
cmp
mov
mov
inc
cmc
stos
test
inc
xor
imul
dec
xchg
aad
int
fs
mov
test
add
cmpsl
mov
mov
push
mov
adc
popf
xchg
inc
jmp
jbe
std
inc
mov
push
lock
cmpsl
pop
int
insb
addr16
out
out
sbb
icebp
adc
sbb
mov
and
les
xchg
std
outsb
mov
fstpt
arpl
sub
sahf
mov
addr16
mov
mov
sub
xor
push
mov
cs
cli
es
cs
mov
mov
inc
xchg
cmp
pushf
fcoml
push
in
mov
mov
mov
mov
push
cmpb
iret
fistps
pop
pusha
lcall
mov
jno
dec
sub
out
mov
jmp
pop
cmp
mov
test
sbb
imul
cmpsl
xchg
mov
inc
push
outsb
adc
add
jl
adc
ja
fnstenv
test
pop
imull
aaa
test
add
rolb
push
fisubs
xchg
loop
addr16
stos
or
imul
shlb
inc
scas
adc
into
pop
aad
jbe
jle
mov
daa
fld
jmp
mov
test
mov
inc
mov
inc
in
push
jmp
cmp
jnp
mov
sbb
mov
lea
jae,pt
or
mov
cmpsl
aaa
mov
vfmsub213ss
jne
sbb
and
repz
inc
popa
mov
push
cmp
test
xchg
cmp
cwtl
ficomps
sub
bnd
in
pop
mov
movsb
imul
push
mov
xchg
push
sbb
push
mov
jge
cmpsl
lcall
rcr
dec
sbb
icebp
xchg
out
sbb
enter
test
or
test
rorl
cmp
cmpsb
lods
dec
sub
xchg
cmp
stos
add
and
testl
jne
pop
cmpb
push
lahf
cmp
jp
repnz
cltd
jb
mov
subb
pop
jnp
push
cmpsl
xor
jle
mov
es
fwait
cmp
xchg
dec
and
adc
fs
sbb
cmpl
jbe
push
mov
push
repz
mov
push
lea
add
inc
ja
pop
outsb
dec
into
push
cmp
push
adc
loope
add
jg
mov
push
pop
xchg
adc
jl
leave
psubw
or
pop
sbbl
shrl
ss
stc
jns
and
rorl
xor
stos
negl
jl
and
sub
enter
jp
insb
out
mov
stos
add
jle
push
testb
adc
cli
stos
nop
fildll
dec
insb
cmc
js
mov
cmc
or
adc
mov
mov
movsl
in
mov
popa
inc
addr16
out
xor
or
jg
or
insl
outsb
sub
dec
jecxz
ficomps
out
mov
mov
daa
ret
ds
or
es
inc
add
fnstenv
mov
dec
mov
fs
pop
cld
inc
sahf
daa
adc
or
in
push
int
fs
fdivl
dec
jo
loopne
pop
loopne
ljmp
push
lret
sti
out
push
cltd
mov
mov
fidivl
arpl
jmp
ljmp
xchg
test
add
mov
jle
add
cmp
dec
add
lods
dec
notl
push
jle
push
mov
inc
dec
push
pusha
add
fldl
xchg
pop
push
push
mov
mov
cmpsl
enter
ljmp
jge
pop
xchg
inc
subl
aad
lea
orb
or
in
stos
pop
je
inc
mov
ja
inc
gs
stos
loop
mull
aaa
ret
cmpsl
xor
inc
mov
out
loope
jno
dec
pop
mov
fadd
out
div
cmp
jecxz
inc
arpl
adc
outsb
or
sbb
daa
pop
push
pop
data16
ficoms
fiadds
hlt
cmp
push
loop
or
pop
ficoms
addr16
jne
out
sub
add
jmp
loopne
shll
into
mov
cwtl
xchg
jo
stos
sub
mov
fdivrl
hlt
movb
inc
lods
adc
push
pop
dec
movsl
cmpsb
jecxz
pop
frstor
inc
push
loop
pusha
jbe
gs
imul
pop
repnz
push
jne
aad
repz
or
dec
sub
hlt
jbe
sahf
push
in
xor
mov
push
sub
xor
xchg
jmp
loope
jb
mov
mov
push
jno
jge
sbb
push
test
orl
push
inc
fnstenv
jg
xchg
xchg
mov
cwtl
push
cwtl
lds
pop
movsb
shrl
push
aad
push
loope
add
loop
mov
test
out
movsb
xchg
stos
xor
divb
in
ret
movsb
jbe
xchg
out
ja
dec
icebp
jmp
inc
lds
out
test
into
aaa
jmp
xor
push
gs
test
dec
orl
dec
cwtl
data16
inc
xchg
cmpsb
ror
stos
loop
and
test
inc
pop
outsl
das
xchg
cs
sbb
mov
testb
push
faddp
sbb
sbb
out
jnp
fdivrs
cmp
out
push
test
mov
cmp
xchg
mov
and
imul
jne
xchg
sete
mov
fidivs
lahf
xchg
dec
fwait
scas
insl
xor
pop
shlb
inc
sbb
adc
add
jmp
orb
in
lsl
nop
pop
mov
xchg
test
mov
out
xchg
scas
lcall
out
dec
stos
shrl
fsubrl
sub
xlat
or
xchg
into
cmpsl
gs
test
decl
cmp
cwtl
pop
int3
lcall
mov
mov
outsl
xchg
sbb
pusha
pop
or
push
xchg
data16
out
in
test
fwait
adc
xchg
outsb
mov
jg
xchg
push
mov
pop
sub
jno
call
cltd
stos
addr16
xchg
mov
out
mov
out
jns
aaa
mov
sub
push
xlat
negb
testb
out
ds
dec
adc
mov
mov
cmc
or
fisubrs
out
dec
mov
movb
mov
sbb
fwait
dec
fsubr
shll
adc
aam
out
divb
xor
ficompl
daa
adc
push
in
scas
dec
jge
mov
xchg
mov
jl
push
std
les
mov
lret
insl
jmp
ja
stc
mov
loopne
sbb
sbbl
sbb
sti
inc
xlat
xor
mul
lret
mov
pushf
push
push
push
pusha
jne
lret
xchg
mov
push
insl
pop
mov
imul
ret
icebp
sbb
adc
mov
dec
jl
ret
dec
push
clc
lock
mov
movsl
aaa
pop
mov
sbb
xchg
daa
xchg
mov
pop
ret
or
mov
jle
sbb
adc
dec
iret
mov
into
repnz
dec
cmc
pop
xchg
pop
cmpsl
icebp
out
jg
in
or
stos
sahf
xchg
and
icebp
minps
and
cmp
jl
jmp
outsl
mov
or
imulb
xchg
xchg
stos
fsts
pop
push
or
jne
and
lods
push
lret
mov
test
jb
sti
je
cmpsl
push
pop
adc
ror
pop
inc
loopne
pop
stos
dec
inc
jmp
pop
mov
loope
mov
mov
mov
mov
movsb
pop
jb
decl
loopne
pusha
jne
inc
adc
stc
adc
dec
or
subb
repnz
rcll
xor
addr16
loope
or
imul
call
mov
cmp
imul
outsb
in
or
xor
pusha
in
and
push
mov
lock
aad
sbb
jno
lods
xor
repz
lock
dec
popf
and
sub
mov
xchg
dec
shrl
lcall
data16
inc
jo
jge
call
sbb
sbb
sbb
mov
jo
std
add
cmp
xchg
and
addr16
jb
mov
fwait
mov
jbe
divl
aad
push
out
lods
lods
inc
inc
dec
flds
fs
push
out
out
mov
xlat
sahf
xchg
mov
fwait
rclb
cmp
xchg
or
cmp
sahf
movsl
pop
xchg
negb
and
icebp
fistl
shr
mov
std
je
test
jmp
shl
lea
daa
adc
in
in
pop
push
mov
ja
adc
mov
xchg
rclb
js
push
mov
sub
dec
xlat
fsubrl
inc
mov
jns
insl
or
push
pusha
add
cmp
jg
iret
xchg
cmc
lds
push
fistpll
out
or
inc
add
clc
cltd
mov
gs
rol
sti
lret
cmp
and
daa
aad
or
sbb
out
mov
insl
out
push
xor
xchg
mov
jecxz
fwait
inc
xor
push
mov
sti
in
test
or
std
mov
inc
inc
inc
xor
sub
mov
lods
inc
stc
test
fimuls
cmp
lret
imul
bound
pop
fcomip
shlb
lret
roll
dec
lahf
and
stos
pop
ficoms
mov
fstps
pop
dec
sub
repz
and
pop
aad
push
fldt
test
xchg
cmp
andl
js
fbld
xchg
mov
mov
xor
adc
mov
adc
and
xor
leave
out
aas
and
mov
lret
jnp
ret
gs
inc
std
lret
jnp
ret
xchg
cmp
inc
das
lret
jnp
ret
cmp
inc
pop
cmc
psllw
xchg
pop
mov
int
jge
adc
and
and
inc
jle
xchg
mov
cmpsl
imull
ret
jle
out
inc
xchg
clc
xchg
movsl
jg
jl
out
push
add
jecxz
sub
roll
add
out
loop
aaa
rolb
jnp
adc
scas
adc
xlat
and
jecxz
ret
ja
cmp
pop
inc
inc
mulb
shll
hlt
cli
pop
andb
cmpsl
sar
fistpll
in
sar
addl
ljmp
push
xchg
add
xlat
ret
push
jnp
data16
xlat
pop
faddl
mov
loopne
andl
addb
add
inc
mov
lahf
leave
sub
stos
jb
loop
inc
jbe
aas
mov
xlat
xchg
loopw
inc
jbe
aas
loope
jg
cmpsl
mov
mov
subb
or
fcomps
mov
or
mov
fildll
mull
sub
cmp
test
cmp
test
bswap
movsb
clc
scas
fldt
fwait
jl
clc
inc
push
lret
in
push
mov
les
inc
les
movl
pop
std
inc
mulb
push
mov
xor
or
aad
mov
lock
cmpl
or
test
push
sbb
cmp
and
loopne
mov
jl
inc
decb
sub
pop
mov
xor
ret
stos
sarl
pop
or
pop
je
cmpsl
mulb
mov
jecxz
faddl
xchg
mov
and
das
out
and
ret
hlt
bound
loop
pop
es
and
adc
pop
push
int
dec
push
daa
mov
add
mov
inc
shll
jbe
outsl
daa
adc
int
out
ja
ret
mov
ret
jg
je
and
ja
rolb
jbe
xchg
pop
push
lahf
je
mov
movsl
xchg
sub
insl
cmpsl
push
push
jnp
shrl
mov
mov
and
popa
jnp
rol
adc
ds
daa
ret
pop
out
xlat
xorl
out
xor
out
fildll
out
pusha
aas
out
outsl
jmp
shrl
data16
out
inc
in
cmpsb
in
clc
jp
mov
loop
inc
test
shr
dec
out
popa
jecxz
shrb
ss
lahf
loop
push
and
add
xchg
rclb
adc
push
ss
push
and
bound
pop
out
icebp
out
nop
inc
bound
stos
jmp
je
dec
in
and
stos
leave
rolb
call
subl
shr
test
ret
test
aad
es
sub
ds
daa
pop
push
pop
sub
gs
insl
adc
mov
push
sahf
sti
sbb
xchg
test
xchg
lock
fisttpl
cmc
inc
xchg
inc
lret
cld
cmpsl
sbb
out
adc
loop
xor
idivl
vsubsd
mov
outsb
pop
mov
into
lcall
movl
loope
dec
cmpsb
jne
lcall
in
jne
test
inc
mov
scas
jge
lds
loop
push
fs
hlt
cmpsl
fwait
inc
shl
pop
mov
mov
stc
dec
inc
sub
pop
mov
inc
mov
add
jno
int
stc
xchg
lahf
pop
mov
mov
xchg
fnsave
test
out
imul
mov
add
rorb
stc
shlw
sarb
fdivl
or
nop
repz
mov
frstor
mov
imul
leave
inc
shrl
rolb
int
mov
push
daa
mov
sarl
push
xchg
dec
fst
jmp
in
inc
testb
sti
dec
movsb
jne
into
mov
ficompl
test
mov
aas
mov
int
sbb
cmp
sahf
rol
mov
and
insl
scas
inc
push
loope
fadd
cld
inc
push
xor
cs
repnz
lods
ret
xchg
imull
inc
fdivrl
in
lods
clc
pop
mov
inc
push
jbe
les
jle
lock
je
pushf
lahf
push
in
mov
in
push
je
cmpsb
popf
leave
out
aaa
outsl
mov
test
js
jne
dec
add
xchg
push
adc
pop
ret
leave
shll
in
pop
jecxz
mov
roll
sahf
push
jmpw
call
pop
mov
aad
mov
hlt
inc
inc
xlat
cmp
cmp
jae
popf
incb
mov
int3
scas
pop
pop
add
add
rcrb
or
inc
outsl
pop
loop
xor
es
mov
in
xchg
push
and
or
or
in
push
es
leave
inc
dec
rorb
mov
dec
aad
pop
push
pop
xchg
dec
push
mov
cwtl
sbb
loop
movsb
mov
inc
les
mov
and
push
insl
mov
jecxz
popa
jp
dec
mov
cmpsb
scas
fwait
popf
lret
daa
loope
loopne
mov
add
in
out
push
jge
shrl
fisttpll
jne
imul
cwtl
pop
lods
mov
cmc
inc
xchg
adc
in
sti
jge
inc
lods
in
ret
movsl
dec
xor
mov
movsl
inc
cmp
inc
xor
and
sub
xor
inc
add
pop
dec
sarl
mov
stos
and
jb
insb
scas
lds
xchg
shl
dec
fcmovbe
inc
iret
call
int
rol
pop
aad
xor
notb
std
incb
rcrb
fcoms
fs
cmc
and
cmpsl
xlat
inc
sbb
mov
mov
push
mov
sbb
inc
test
sbb
stc
insl
ret
adc
jne
cmp
push
leave
hlt
mov
scas
and
cltd
pop
mov
scas
mov
adc
das
lods
or
push
xor
dec
icebp
lret
sbb
push
mul
sbb
mov
loopne
aaa
push
xchg
mov
lret
mov
sarl
mov
mov
outsl
xlat
mov
or
orb
mov
pop
nop
push
cmp
add
jp
popa
pop
and
mov
stc
mov
sbb
sbb
fildll
data16
jno
xchg
addr16
jmp
into
test
pusha
inc
mov
jp
test
mov
mov
roll
roll
dec
ret
insb
das
lret
aas
scas
fmull
or
outsl
into
sub
cmp
scas
xchg
jmp
sbb
jb
push
js
jge
testb
xor
jmp
sti
into
pop
stos
jno
popf
rorb
sub
add
out
test
or
cmpsl
mov
divb
repz
push
les
testl
jl
pop
in
fs
popa
inc
sbb
out
into
inc
mov
mov
ret
push
das
add
aam
sbb
loop
insb
or
int
adc
stos
out
pop
dec
inc
or
outsl
repz
out
push
shl
pop
lea
imul
out
outsb
rcll
pop
ja
fcmovnb
imul
aaa
cmc
stc
fnstsw
mov
mov
xchg
shlb
xchg
mov
je,pn
cmp
mov
int
cmp
and
ret
hlt
ja
notl
out
and
shll
ja
cs
addr16
scas
incb
fimuls
scas
testb
dec
mov
push
xorb
outsl
movsl
out
inc
mov
mov
sbb
xchg
in
mov
dec
add
aas
inc
cli
xbegin
cmpsl
xlat
pop
push
mov
mov
dec
cmpsl
sbb
decl
stc
test
aam
xchg
data16
repz
pusha
movsl
scas
or
pop
dec
push
je
sti
rcll
cmpsl
popf
lods
lahf
imull
inc
fwait
gs
xchg
jg
lea
out
cmp
es
cs
gs
outsb
inc
lret
jne
mov
add
mull
push
cmpsb
adc
imul
pusha
cli
pop
dec
inc
fwait
dec
jg
andb
lret
std
out
mov
pop
jle
out
xchg
push
xchg
mov
cmp
mov
mov
popf
mov
icebp
jnp
outsb
add
movsb
mov
addr16
sti
test
xchg
outsl
xor
mov
mov
ljmp
in
mov
fs
stos
inc
out
adc
inc
mov
fstpt
push
mov
xlat
fcomps
data16
aas
mov
dec
lods
dec
shlb
mov
push
aas
dec
mov
addr16
das
add
inc
or
lods
movl
mov
cmpsl
cmp
xor
jge
es
lret
or
scas
cmp
adc
dec
shlb
movsl
filds
orl
test
jecxz
dec
xchg
push
inc
xor
insb
daa
es
pop
xchg
fs
mov
jnp
mov
dec
aas
imul
test
call
xor
roll
cmp
je
xchg
cs
icebp
xor
xchg
rorl
cmpl
push
cmpsl
mov
negl
xchg
js
int3
in
test
dec
cmpsl
out
mov
mov
jecxz
push
mov
and
or
daa
dec
in
cmpl
rolb
jg
imulb
in
cmp
incb
jae
test
jg
loopne
inc
sub
jnp
xchg
mov
loope
sbb
dec
int3
or
js
sahf
mov
dec
imul
mov
clc
rcrb
movsb
aad
sahf
cmpsl
nop
rcl
fstps
cmp
lock
adc
outsb
int
scas
rcrl
mov
cli
insl
ds
lret
xchg
inc
and
mov
in
mov
fcomip
int
scas
xlat
or
frstor
pop
xlat
jge
in
adc
jae
mov
and
fninit
sub
rcll
pop
test
adc
jg
cwtl
mov
mov
add
inc
cmp
addr16
dec
mov
push
clc
out
mov
leave
or
insb
pop
jae
inc
stos
jmp
andb
pop
jns
lea
addr16
pop
test
aad
dec
mov
test
inc
and
dec
pop
repnz
and
mov
push
scas
pop
push
mov
sub
mov
or
mov
mov
aaa
xor
adc
aaa
lret
dec
pusha
mov
repnz
push
mov
adcl
test
loopne
cmpsb
sbb
test
fcoml
cmp
aas
lea
or
mov
pop
jns
push
dec
dec
add
testl
and
cmp
rolb
pop
xlat
movsl
push
test
cmp
fs
inc
sub
jmp
fisubl
jb
add
jmp
out
dec
push
insb
out
sub
popf
jecxz
ja
mov
dec
in
jne
push
stos
push
es
push
inc
mov
fcomi
loop
rol
mov
pop
pop
sbb
out
sbb
and
cmp
adc
test
cld
daa
mov
jecxz
icebp
or
pop
push
mov
daa
test
sbb
jae
dec
inc
xor
std
cmpsl
addl
inc
fistl
dec
and
pop
xchg
aam
xchg
imul
fistpll
mov
scas
outsl
sti
leave
pop
test
or
data16
incl
push
adc
insl
ret
out
cmpsb
dec
or
mov
es
addr16
je
dec
jno
inc
and
stos
cmpsl
xchg
xchg
push
mov
std
lds
mov
aas
cli
mov
cmp
or
std
test
pop
pop
push
test
inc
lods
negl
and
out
sbb
push
movsb
mov
sarb
pop
cmp
faddp
sub
dec
fstl
or
lcall
inc
daa
and
and
mov
inc
push
add
cmp
nop
shlb
sbb
andl
inc
jecxz
fcmove
xlat
pop
xor
mov
in
jne
lret
andb
pop
cmp
shlb
sbb
mov
scas
inc
fwait
sub
jmp
adc
loope
cs
pop
jge
bound
pop
std
mov
cmp
js
sahf
out
pop
xchg
rcl
rclb
pusha
pop
sbb
shr
jmp
and
jae
pop
jbe
ret
test
pop
aas
jnp
xor
mov
xchg
cmp
fsts
mov
loope
mov
dec
xor
insl
add
negb
gs
dec
fs
std
out
add
iret
inc
mov
lods
adc
mov
mov
popa
test
adc
fwait
xchg
frstor
mov
sub
stos
notl
adc
stos
arpl
pop
xor
inc
mov
sub
and
out
cmpsl
out
adc
outsl
lods
push
daa
and
out
out
das
les
and
dec
out
cmp
aaa
les
xchg
stos
insb
inc
movsb
adc
xchg
xchg
adc
or
jae
outsl
lods
mov
rorb
push
jns
inc
addr16
scas
push
sbb
mov
cmp
out
incb
inc
push
adc
mov
push
ror
std
push
andl
lahf
mov
mov
mov
jge
in
mov
cli
addl
cltd
addr16
lcall
add
mov
inc
insl
loopw
out
stc
mov
jmp
push
outsb
sbbb
jno
lds
mov
jae
xor
cmc
stos
cmp
lds
test
xchg
inc
aad
mov
jg
das
stos
lods
bound
push
aas
push
flds
inc
sub
rcrl
dec
stos
mov
stos
mov
mov
gs
mulb
cmc
or
inc
pop
jbe
pop
push
sbbl
cmp
aam
adc
sti
cltd
lcall
jecxz
fwait
push
hlt
mov
cmpsl
loop
test
es
ret
mov
out
aas
es
arpl
test
movsl
jle
xchg
in
insl
jae
xchg
pop
ret
adcb
cld
mov
jae
lahf
repz
cwtl
adc
movsb
out
mov
jns
outsl
pop
pop
data16
sub
adc
cltd
mov
mov
xchg
xchg
es
pop
sarl
test
mov
or
push
pusha
dec
fsub
or
jle
and
jno,pn
push
sbb
out
adc
das
cli
jno
lds
mov
sbb
jne
icebp
sti
and
or
sbb
xor
sub
sub
cmp
fsubs
loop
test
mov
outsl
decb
cmp
sbb
mov
pushl
imul
test
or
dec
out
iret
mov
outsl
push
sbb
insl
or
jb
jg
jne
test
faddp
fildl
xor
pop
mov
mov
mov
popa
push
cmp
dec
mov
and
loopne
outsl
lahf
push
outsb
adc
sub
inc
orl
les
movsb
add
pop
adc
jg
xchg
or
mul
xor
sahf
ja
nop
mov
adc
xchg
and
ficoms
out
repz
shl
lea
test
pop
xchg
dec
std
fisttps
xor
xchg
fnsave
out
leave
adc
out
mov
lahf
cmpsl
or
test
into
fidivs
mov
mov
xchg
outsl
lret
lods
pop
and
mov
cmp
mov
lea
scas
loop
mov
aad
sbb
testl
cmp
in
mov
int3
addr16
sbbl
or
or
leave
jne
nop
pop
mul
jmp
lds
stos
mov
fstl
add
ret
stc
leave
cmp
mov
lods
shrl
sbb
leave
mov
ja
aas
adc
and
mov
xlat
or
scas
add
fwait
inc
sbb
daa
sub
push
stc
mov
adc
and
test
test
outsb
push
loope
mov
pop
pop
test
pop
or
fwait
lods
push
ja
repz
aad
mov
cmp
scas
out
or
mov
ret
out
leave
sbb
daa
add
fwait
and
jae
fnstsw
imul
sbb
mov
ret
mov
or
loop
rolb
inc
lods
filds
insb
jmp
add
adc
out
sub
jb
lds
aad
aas
sub
pushf
insb
js
rcr
movq
xchg
aaa
lea
xchg
add
jbe
out
mov
mov
adc
negb
push
cmc
and
mov
dec
adc
cmpsb
mov
pshufw
cmp
and
xor
jno
lock
nop
add
mov
inc
jbe,pn
clc
sbb
xchg
mov
push
xor
mov
iret
idivl
push
outsb
mov
push
mov
xor
inc
notb
sub
ja
sub
fs
unpcklps
jne
iret
out
cmpl
int3
sub
adc
cmp
push
jge
add
mov
pop
insl
ret
leave
jecxz
out
push
dec
testb
arpl
jne
out
out
add
fwait
jae
push
je
lret
mov
push
pop
mov
sbb
cmp
das
mov
push
fsub
imul
pusha
sbb
rcrl
xorb
mov
call
xchg
test
fdivp
test
shrl
cld
mov
out
sub
in
rcrl
arpl
pop
jns
xor
mov
aad
fnstenv
pop
fwait
cmp
test
mov
ss
and
into
cmp
pop
mov
mov
sub
push
mov
inc
fisttps
rcrl
inc
out
test
stc
lea
jge
decb
push
jne
stos
or
add
out
jnp
xlat
mov
scas
lods
les
lods
inc
cmp
or
xchg
sub
lret
psubd
mov
cld
ror
das
push
ss
pop
aam
sahf
add
inc
jg
cld
lcall
mov
jle
test
add
inc
ret
pop
add
shlb
jl
idivl
jnp
movsb
out
push
mov
out
xchg
or
and
push
lock
xor
add
push
in
pop
aas
mov
mov
ljmp
cmp
negl
or
mov
adc
sub
pop
movsl
inc
inc
subb
mov
scas
xor
xchg
add
fs
negb
push
in
mov
fimuls
pop
insb
lcall
xchg
mov
inc
das
sbb
imul
out
scas
fsubp
jnp
lret
ss
in
mov
inc
xchg
test
sbb
sti
mov
testb
sbb
add
jbe
fcomi
cs
and
mov
shl
push
push
lea
xchg
in
inc
int3
mov
out
xchg
notl
fmulp
int3
adcl
pop
jl
pop
fadds
jae
scas
xchg
jge
testb
fidivs
pop
jo
inc
cmpl
les
or
nop
sbb
lods
mov
cld
push
decl
or
inc
pop
aas
push
outsl
and
sahf
pop
cmpsb
jo
pop
hlt
cmp
pop
lea
dec
fwait
js
mov
dec
roll
pop
sbb
out
andl
lock
insb
sub
and
cmc
cmp
mov
insb
add
fwait
adc
aad
inc
add
pop
jg
dec
scas
mov
xchg
ret
daa
fistl
orl
lods
adc
sub
int
outsl
xchg
and
mov
sub
ss
sub
stos
ds
clc
xchg
pop
push
mov
arpl
cmp
ret
repnz
inc
les
cmpsb
icebp
lret
sahf
inc
in
imulb
adc
in
xchg
in
dec
jle
pop
test
addl
dec
addr16
aad
jbe
in
nop
mov
pop
loop
cmpsb
mov
dec
hlt
stc
std
add
add
scas
mov
push
or
mulb
fcmovnu
jl
and
shll
jmp
push
pop
xlat
data16
int
iret
mov
cmc
cmpsb
jle
mov
push
insl
jbe
cmpsl
popf
mov
sbb
mov
call
out
push
or
stos
pop
outsl
test
shrl
dec
icebp
mov
jecxz
stos
jmp
and
hlt
pop
xor
sti
and
mov
mov
arpl
mov
sbb
loopne
test
sahf
test
ret
jae
xor
pop
or
mov
popf
lret
dec
pop
xor
inc
push
mov
daa
icebp
in
addr16
sbb
xchg
ffreep
jmp
inc
and
pop
mov
imul
xor
add
inc
push
lods
mov
pop
lds
dec
gs
inc
js
push
push
jns,pn
outsl
movsl
inc
loop
add
fs
outsl
int
subl
inc
pop
ret
es
or
push
je
cli
cmp
shll
pop
pop
pop
push
scas
dec
aas
mov
and
adc
jg
cmp
push
lock
mov
xor
test
test
jne
fisubrl
test
mov
pushf
pusha
fbld
mov
xchg
jg
out
or
add
mov
lods
push
pop
and
inc
push
daa
push
pmaddwd
or
ret
aad
loopne
out
jo
mulb
dec
ss
and
dec
les
fwait
push
outsl
xchg
sbb
dec
imul
mov
testl
pop
enter
mov
cwtl
test
gs
add
cmpsl
inc
adc
stc
lods
cmp
in
push
or
cld
inc
pusha
adc
push
faddl
pop
or
fdivrs
mov
xchg
xchg
stc
push
push
adc
imul
bswap
mov
mov
stos
mov
sbb
xor
stc
mov
fs
mov
dec
pop
push
sbb
sub
mov
leave
test
cmpsl
mov
flds
pop
jecxz
rorb
sarl
loopne
mov
inc
leave
jmp
adc
mov
rcll
cmpsb
lret
pop
mov
fistps
sub
pop
arpl
cmp
dec
in
mov
faddl
ja
rolb
jne
sbb
xor
loope
pop
and
repz
aas
jbe
jg
xor
xchg
ret
jl
bound
jns
mov
fwait
jge
xchg
imull
in
adc
inc
lret
jae
pop
das
push
sub
or
sub
daa
jae
lret
pop
ljmp
addr16
dec
fwait
inc
mov
ret
enter
in
mov
hlt
xrelease
inc
orb
loop,pt
fnstsw
fidivrl
mov
inc
cltd
mov
mov
mov
mov
jle
add
and
popa
xchg
jb
stc
add
lcall
add
push
push
ja
popa
mov
inc
dec
inc
sbb
lret
lahf
ficoms
js
adc
push
out
pop
scas
outsl
fwait
push
push
mov
mov
mov
neg
fwait
test
in
fucom
out
and
inc
mov
fstps
arpl
clc
movsl
stc
insl
fiadds
ss
cs
dec
fldcw
pusha
mov
jp
xor
or
in
aam
add
jne
lret
dec
divl
add
inc
arpl
mov
inc
add
sub
adc
stos
mov
fcomip
cmp
popl
in
outsl
cs
inc
push
jle
jmp
sbb
cmp
jb
and
negb
mov
les
test
push
stos
fcmovnb
mov
into
pop
cmp
mov
mov
cmpsb
shrl
mov
jecxz
xchg
jb
dec
push
xor
aad
mov
pop
jb
adc
fdivrl
fisttpll
lds
mov
or
pop
pop
imulb
sub
test
mov
mov
in
jmp
movsb
or
jge
shlb
lock
or
mov
xor
popa
mov
add
out
test
mov
add
xor
repnz
cs
sahf
aad
push
add
cmp
popa
dec
hlt
xor
jae
mov
pop
shrl
lcall
sbb
mov
aam
sbb
idiv
mov
iret
mov
mov
pop
insl
pop
sub
les
sub
mov
aam
cmp
jne
in
mov
leave
dec
mull
lret
rcrb
mov
int
dec
cmp
outsb
sub
sub
shr
sub
xchg
xchg
mov
inc
cmpsl
lret
add
push
rolb
inc
jecxz
mov
lods
push
and
sub
adc
in
inc
addb
jae
enter
icebp
and
out
push
in
or
add
dec
dec
retw
sbb
sbb
mov
and
inc
shl
fs
cli
and
repnz
mov
dec
leave
fildll
push
scas
test
addr16
or
aaa
cmpsl
mov
test
in
setnp
iret
fildl
adc
add
idiv
adc
inc
push
les
shlb
jns
add
jle
addr16
les
xchg
insl
loope
pusha
mov
mov
in
xchg
addb
daa
ljmp
test
cmc
arpl
mov
mov
negl
test
insb
lds
jg
leave
shll
out
xlat
mov
sub
cmp
xchg
cmp
scas
rolb
stos
mov
jle
cs
adc
sbb
lods
jmp
jge
pop
int
push
faddp
fistl
out
xchg
mov
xor
mov
sti
test
sti
shlb
xchg
add
test
lcall
test
cmpsl
pop
std
xchg
scas
xchg
adc
jg
mov
push
jno
xchg
orb
jmp
outsl
mov
fucomip
cltd
add
add
xchg
mov
gs
fs
dec
jecxz
sub
xchg
jbe
add
xchg
je
popf
stos
push
cs
std
stos
inc
test
int3
cld
std
idivb
mov
push
movsl
mov
pop
jno
xchg
push
sbb
cmpsb
test
inc
pop
adc
pop
gs
repnz
fldenv
mov
jbe
sbb
dec
mov
int3
out
mov
lahf
pop
mov
leave
jmp
jge
mov
sbb
out
sarb
out
mov
sbb
nop
mov
cmp
mov
into
add
std
dec
mov
in
stos
push
fwait
mov
mov
jmp
add
mov
mov
pop
jns
xchg
fildll
jo
pop
stc
jae
or
fsts
or
shlb
dec
jb
sbb
popw
gs
pop
ja
dec
xbegin
xchg
xchg
pop
pop
into
inc
dec
jb
xchg
pop
push
dec
mov
push
outsl
mov
pop
add
pop
neg
dec
mov
ja
dec
cld
into
xchg
pop
dec
adcl
std
pop
mov
fisubs
rorl
adc
jmp
xchg
lcall
add
jecxz
inc
stos
sub
pop
lods
adc
or
out
out
rorb
dec
cwtl
mov
xor
adc
mov
out
mov
outsb
dec
daa
xchg
rdtsc
scas
pmaddwd
dec
adc
daa
imul
out
xchg
loopne
dec
pop
pop
int
es
xor
clc
inc
sbb
push
cmpsb
xchg
ljmp
add
outsb
cli
dec
adc
or
add
inc
into
push
into
pop
rcr
jae
aas
loopne
add
push
jnp
fadd
sbb
push
neg
sbb
jge
pop
movsl
out
and
jne
fisttpll
ret
pop
insl
lret
outsl
push
fs
arpl
sahf
in
mov
push
je
jbe
cmpsb
or
sbb
loopne
shll
push
ffreep
push
inc
cltd
xor
cmpsb
inc
roll
mov
mov
inc
mov
subb
out
sbb
cltd
pop
scas
loope
jne
xchg
push
insb
lds
sar
test
test
dec
adc
or
mov
xor
shrb
icebp
xchg
loop
test
mov
xorl
sti
stc
std
mov
arpl
in
testb
ljmp
sub
in
jno
pop
sbb
inc
add
negb
push
lock
ret
jle
mov
stos
pop
hlt
sbb
shll
mov
ret
aam
test
pusha
fsubl
xchg
sbb
nop
ret
jno
loope
and
fildl
sbb
in
add
lds
je
aam
test
out
jne
push
jnp
lods
add
lods
inc
loope
mov
mov
xchg
push
jb
push
lea
dec
or
fwait
lret
fiaddl
jecxz
dec
xchg
jo
aad
jecxz
add
lods
lret
jne
pop
cmc
push
js
cmpl
test
in
test
or
out
adc
fmull
sub
fwait
adc
dec
test
jns
out
pop
test
and
scas
shrb
jnp
imul
mov
scas
adc
mov
test
data16
mov
imulb
stos
dec
push
out
lods
mov
sub
lds
and
ror
jmp
test
loop
lahf
xorl
pop
nop
fistl
clc
rolb
cwtl
into
stos
push
loopne
or
mov
mov
inc
mov
ja
xchg
dec
les
xchg
add
ret
and
jecxz
add
jecxz
mov
leave
out
or
inc
cs
out
lock
aaa
xchg
es
and
mov
inc
nop
jno
sbb
jb
sub
adc
dec
testb
adc
movsl
imul
daa
mov
cmc
enter
sarb
cmc
jecxz
pop
lds
and
and
pop
test
xchg
dec
hlt
or
pop
addr16
rcr
mov
out
jg
dec
imul
sub
sbb
rol
push
aas
jno
in
xor
push
fs
adc
decb
and
out
jbe
int
decl
insl
shlb
out
adc
notb
popa
or
daa
cli
xchg
out
sti
xchg
cmp
inc
jmp
adc
mov
or
cmpsl
cmp
test
xchg
jmp
ja
xchg
je
fdivr
mov
out
rol
and
sahf
pop
fldenv
adc
push
xlat
push
and
xor
pop
jmp
mov
xchg
push
fs
mov
and
sub
stos
cmp
stc
cmpsb
popa
mov
sbbb
cwtl
push
mov
cmp
push
arpl
arpl
jge
pop
add
enter
add
pop
lds
rorb
or
adc
and
negb
notb
shrl
loope
jne
push
xchg
pop
push
jae
mov
outsl
push
repnz
repz
sub
pop
scas
adc
mov
out
pop
movsl
or
jecxz
push
das
das
xor
dec
cmc
xor
inc
mov
xchg
pop
xchg
test
push
add
adc
xchg
jae
call
cs
and
mov
or
or
jle
add
repz
addr16
jge
outsl
xchg
jne
outsl
subl
add
inc
clc
loope
leave
sub
cmpsb
inc
jmp
cmpsl
lret
icebp
imulb
mov
rcrb
xorb
sarl
insl
cmp
js
pop
cmp
pop
les
xor
rcll
sbbb
xor
sbb
push
ret
mov
inc
inc
pop
in
dec
jge
inc
pop
shlb
add
add
in
cmp
xor
inc
xchg
aad
dec
cmp
iret
int
dec
xchg
xor
xchg
mov
sbb
jmp
decl
loope
out
xor
sbbl
cmp
cli
xchg
xor
dec
mov
sub
stc
mov
ss
mov
pop
les
mov
mov
sbb
fcompl
or
mov
cmp
xchg
test
push
mov
mov
mov
add
mov
adc
push
je
out
xchg
jbe
xchg
fdivrl
out
xchg
push
xlat
jo
stc
test
out
ret
xchg
pop
pop
sub
testb
hlt
pop
sub
into
mov
rolb
mov
iret
mov
jne
mov
rcrb
xcrypt-ofb
cmpsl
sub
dec
shl
mov
insl
mov
rolb
test
pop
mov
pusha
push
lock
jecxz
fwait
mov
jb
adc
xchg
add
aam
mov
jg
bound
sub
sbb
sbb
add
pop
xchg
loop
cmpsb
mov
sbb
xchg
sahf
std
aaa
out
jg
fstps
push
shlb
xchg
sub
dec
out
out
out
cli
sti
outsl
ss
adc
insl
lahf
push
negl
push
repnz
sahf
nop
or
pop
jnp
fcoml
mov
int3
sub
and
pop
push
out
int
push
push
sbb
add
fdivrl
sbb
mulb
pushl
pop
mov
dec
loope
mov
pop
stc
stos
sbb
adc
mov
mov
shll
xorl
addr16
and
ret
jg
push
jne
mov
pop
pop
jnp
sub
daa
lods
test
inc
lret
loop
ljmp
adc
lods
jge
adc
cld
mov
cmp
sub
movl
mov
mov
hlt
ss
icebp
outsl
add
fmulp
pop
pop
test
les
imul
cmpsb
test
jmp
jmp
insl
push
mov
cmpsb
and
pop
pushf
pop
jg
inc
and
mov
stos
insl
out
fdivrl
mov
mov
jo
jg
and
push
push
dec
insb
je
sub
xchg
add
mov
sub
hlt
and
fwait
sti
dec
ja
divb
fisubrs
mov
ljmp
js
out
cmp
pop
sbb
mov
add
mov
dec
repz
jns
jne
cmp
mov
push
cli
jg
cmpsl
pop
push
js
or
xor
hlt
push
xchg
cwtl
in
sub
inc
sbbb
lods
xchg
les
cmp
hlt
inc
lret
dec
cmp
jp
data16
shll
sub
push
lcall
cmpsl
fists
xchg
xorl
in
imul
loope
sbb
xor
mov
sahf
sbb
pop
popa
xor
sarl
jo
nop
out
adc
arpl
add
fstpt
les
add
pop
lahf
mov
pop
lds
mov
adc
jle
cs
fstpt
imul
arpl
aam
adc
mov
out
pop
dec
mov
or
xor
movsl
or
rol
jmp
imul
mov
sub
push
fwait
xchg
out
addl
xchg
and
dec
dec
xor
xor
or
ret
xchg
push
mov
adc
adc
xlat
pop
in
bound
daa
in
xchg
mov
cmp
cmp
imul
jns
repz
stos
frstor
imul
out
lock
mov
jl
sahf
scas
hlt
cmp
mov
stc
retw
mov
enter
mov
xchg
out
jae
ja
stc
icebp
das
fcmovnb
mov
dec
out
fbstp
mov
fstpt
filds
add
scas
mov
fwait
mov
push
add
lock
cli
lds
dec
dec
mov
inc
xchg
int3
fidivl
flds
jmp
adc
sti
clc
in
fs
xchg
cltd
into
es
nop
xchg
rcr
stc
push
xor
cmc
outsl
roll
frstor
mov
sbb
jnp
xchg
xchg
loopne
push
out
add
mov
fadds
mov
pop
push
lds
mov
xor
stc
sub
mov
pop
and
loope
in
out
inc
movsl
mov
movsl
adcl
xor
cmpsl
jp
dec
mov
cltd
dec
es
inc
mov
loop
in
mov
xor
mov
out
inc
fucomip
xlat
iret
call
xchg
inc
fwait
mov
sarl
out
fstpl
fmul
mov
pop
push
gs
xor
push
cmpsb
push
sub
fistpll
cmp
ret
push
insb
pand
push
into
test
xorb
push
outsb
testl
jne
into
ljmp
xchg
push
out
std
fidivrs
mov
mov
test
iret
hlt
shl
mov
push
push
push
push
xlat
jne
push
pop
les
orb
sub
dec
xor
add
jge
in
fdivs
xor
push
dec
dec
xchg
ds
ss
push
into
add
outsl
push
repz
xor
insb
lahf
shlb
dec
jg
push
imul
test
mov
stos
pop
movsb
push
pop
mov
adc
rclb
out
inc
rolb
cmpsl
adc
lea
rcll
sbb
adc
mov
addr16
pop
adc
xchg
mov
sbb
lea
adc
mov
inc
shlb
daa
aaa
dec
cmp
inc
test
pop
popa
mov
lea
daa
ret
mov
addr16
sub
mov
frstor
out
arpl
mov
push
repz
xchg
adc
daa
push
fimuls
inc
addr16
push
leave
mov
fsts
sbb
jb
fisubrs
in
xor
insl
shll
shl
out
add
shll
jno
dec
mov
push
hlt
push
push
out
shl
mov
inc
mov
jmp
add
in
mov
sbb
shrb
adc
and
add
test
daa
add
test
sub
dec
movsb
dec
out
neg
cwtl
xchg
mov
inc
pop
sbb
xchg
sbb
cmpsl
sub
ja
outsl
hlt
test
push
xchg
shrl
push
jo
dec
cmp
jmp
inc
pop
out
repz
mov
mov
aad
in
push
aas
push
addr16
mov
sti
add
pop
jne
or
sub
push
jg
jno
cmpsl
addr16
mov
pop
push
test
out
cmpsb
jnp
or
add
movsl
xchg
cmpsl
dec
cmp
add
mov
cmpsb
adc
pop
lret
pop
xchg
div
cmc
jns,pn
pusha
adc
xorb
imul
inc
mov
iret
dec
pop
arpl
int
and
or
rorb
and
fwait
into
popa
add
jl
mov
mov
jne
adc
jmp
xor
outsl
es
push
repnz
xchg
scas
pop
aaa
arpl
xchg
add
jmp
enter
xor
outsl
mov
pop
fidivrl
cmp
clc
mov
xchg
fldenv
cmp
adc
sub
test
outsb
cwtl
ja
cmp
out
mov
mov
inc
movsl
lahf
push
jge
and
fs
mov
sub
inc
repz
push
sbbl
mov
out
addr16
aam
lods
out
aaa
ret
faddl
gs
dec
jne
dec
mov
inc
jecxz
cmp
es
xchg
push
cmpsl
mov
and
rcl
jne
lds
jecxz
xor
stos
inc
cmp
and
shrl
insb
xor
sub
pushf
fadd
adc
mov
lret
fimuls
xchg
add
add
and
fisttps
mov
mov
sub
push
cmp
and
lret
dec
adc
into
scas
push
adc
or
mov
fistpll
sbb
add
and
push
stos
sbb
dec
sahf
inc
out
cs
jge
mov
cmpsl
out
lock
cmp
dec
pop
sub
pop
loop
jne
lea
mov
xchg
out
fildl
mov
mov
mov
xlat
popf
test
xchg
dec
push
das
cli
xchg
xor
in
inc
adc
lret
xchg
ret
and
adc
jecxz
lret
into
scas
cmp
push
lock
fldl
jne
mov
es
push
cmpsb
cmpsb
addl
dec
leave
sub
dec
idivl
fs
pop
adc
or
loop
inc
jmp
mov
xchg
sub
pop
mov
testl
and
pop
xchg
idivl
sbb
insb
hlt
popl
sbb
sbb
iret
test
adc
push
jp
stos
add
mov
pop
notb
movsb
pop
fisubrs
sar
rcr
stc
mov
xchg
mov
cwtl
xor
stos
repnz
movb
ljmp
sbb
push
mov
xchg
in
mov
leave
sub
ljmp
and
js
dec
fbstp
and
or
stos
sbb
dec
movsl
lea
out
add
leave
mov
shrb
out
insl
shl
mov
push
fidivrs
sub
stos
out
cld
test
pop
inc
add
xchg
mov
into
cmpsl
in
fidivrs
sti
shlb
or
cltd
repz
shlb
push
icebp
mov
pop
pop
or
cwtl
lret
outsl
test
sub
fists
cli
mov
mov
dec
arpl
daa
decb
sbb
fists
dec
adc
mov
push
lahf
out
out
aaa
rol
lock
mov
sbb
gs
rorl
xorl
dec
sti
mov
popf
arpl
mov
jmp
jmp
sbb
fisttps
fldenv
fcompl
loope
xchg
in
ljmpw
out
jle
mov
shrl
test
movsb
mov
loopne
stos
movsl
mov
jnp
cwtl
dec
inc
xor
out
test
mov
dec
mov
aaa
pop
or
andb
das
mov
mov
inc
xlat
sahf
adc
add
bound
nop
sbb
mov
test
fldl
sub
dec
inc
pop
subl
fwait
inc
pop
jl
scas
push
cs
gs
mul
popa
pop
movsl
adc
insb
push
jmp
xor
fdivrp
popa
out
addr16
mov
xchg
xchg
in
movsl
das
int3
lods
adc
aad
popa
ja
test
sub
imul
movsb
outsb
inc
pop
outsb
cwtl
in
ds
jno
pop
sti
adc
add
rcll
js
loope
adc
mov
cmc
pusha
aas
mov
cmpsw
xchg
jg
stos
test
lods
iret
xchg
pop
cs
pop
aam
xchg
fdivr
push
or
mov
daa
adc
enter
or
xor
out
adc
mov
jge
jmp
mov
dec
clc
in
les
pop
push
fistpll
in
xchg
sbb
xor
mov
xchg
dec
adc
mov
sbb
push
xlat
xchg
dec
and
lods
mull
jne
call
out
js
xchg
sub
sbb
jmp
insl
scas
iret
push
stos
sub
nop
adc
je
dec
adc
clc
aaa
shl
jns
adc
dec
sub
loopne
movsl
sbb
lds
fimuls
out
cli
jns
jbe
cmp
insb
push
je
xor
jl
in
push
mov
jns
pop
in
testb
dec
push
gs
dec
inc
lret
jecxz
push
scas
and
mov
add
push
repnz
inc
gs
rclb
out
les
gs
gs
icebp
adc
adc
add
mov
movsb
je
addr16
mov
and
xor
test
cmc
addr16
xchg
pop
jmp
cmpsb
sti
stc
in
in
data16
jno
jnp
lret
lret
jecxz
ret
mov
jno
mov
push
mov
scas
sub
aaa
lods
jne
and
arpl
movb
ret
cmp
leave
lret
pop
jne
in
imul
lods
fs
outsb
mov
out
addr16
push
cs
adc
ljmp
clc
outsl
push
mov
xor
lods
daa
shll
pushf
into
xor
outsb
mov
sbb
sub
std
push
jl
mov
mov
push
jbe
inc
push
dec
push
or
dec
movsb
gs
movsl
lds
outsl
test
sbb
jle
out
in
imul
lret
inc
mov
out
mov
pop
add
mov
lds
sbb
mov
lds
jb
jg
je
sbb
sbb
les
jg
mov
sbb
xchg
and
mov
inc
push
and
lret
loope
int3
jl
out
sbb
dec
imul
mov
cmc
lea
jnp
out
jne
pop
and
int
mov
arpl
dec
fisubrs
cmp
lret
mov
jae
inc
or
iret
xchg
call
mov
lods
xor
mov
xchg
xor
adc
mov
sbb
and
jecxz
rcrb
orb
xchg
movsb
gs
icebp
xor
push
sub
cli
jnp
jg
and
rcrl
cld
test
testl
out
ljmp
in
mov
gs
movsl
and
mov
stc
in
xor
cmc
sbb
test
aas
xchg
fdiv
xor
jp
mov
xchg
adc
scas
not
nop
jg
or
add
rorb
add
negl
pop
cmp
js
dec
push
add
mov
les
and
shlb
sub
mov
mov
xchg
push
inc
sti
rolb
xorb
filds
xor
mov
jnp
ret
js
repnz
or
fcomps
and
sti
add
add
push
fisttps
add
xchg
test
std
xor
pop
leave
push
lds
test
subl
push
dec
jb
mov
test
loop
or
fs
mov
cmpsl
es
gs
pop
das
dec
shl
scas
xor
into
leave
push
push
mov
xlat
stos
and
leave
shl
mov
sub
imulb
imulb
pop
push
mov
jbe
stos
inc
xchg
xchg
icebp
stc
inc
sub
sarb
push
jg
push
ret
out
stc
shlb
or
mov
dec
test
push
push
out
stc
jbe
idivl
inc
scas
jge
rcrb
push
mov
test
outsl
mov
in
adc
fistps
inc
out
aaa
xchg
aad
test
aas
cmpsl
outsl
add
stc
cli
dec
lods
push
outsb
xlat
cmpsb
jbe
xchg
incw
and
out
mov
fistpll
adc
adc
xlat
faddl
stos
jecxz
pop
pop
jecxz
inc
jnp
ja
nop
ja
mov
push
ret
dec
sbb
ss
mov
jge
inc
dec
mov
fcomip
xlat
pop
fs
adc
mov
push
mov
cmpsl
call
xchg
lahf
fisubs
gs
cmpsb
jecxz
inc
popa
dec
sub
mov
scas
ficomps
cmpsl
sub
dec
nop
ds
jne
in
mov
stc
movsb
xchg
test
stos
jbe
jg
addr16
xchg
ja
xchg
push
and
mov
pushf
out
outsb
and
fwait
lret
loope
mov
mov
imul
faddl
or
xchg
jb
xchg
mov
mov
dec
xlat
icebp
std
mull
add
dec
test
dec
negl
mov
xchg
add
shll
sbb
cmp
pop
mov
pop
jnp
cmp
cmpsl
pop
cmp
test
in
fbstp
jo
rol
ss
ja
cmpsb
stos
repnz
lock
cmp
jne
mov
fisttps
in
loope
cs
jl
xchg
shll
adc
pop
push
cmc
and
mov
insb
and
add
cmp
xchg
rol
in
mov
xchg
cli
je
or
inc
pop
jge
xor
push
rclb
outsl
test
es
mov
mov
shlb
outsl
iret
mul
mov
stos
repnz
lods
adc
das
jmp
rolb
divl
mov
xchg
das
lcall
lock
cmp
inc
scas
sub
and
leave
xor
xlat
pusha
push
xchg
ror
mov
push
or
out
inc
jle
jmp
into
scas
cmp
lcall
add
in
shl
icebp
xor
rcll
pop
sub
std
and
add
fs
movsl
xor
sbb
cmp
xlat
dec
cmp
addr16
test
stos
jge
jbe
adc
jmp
cs
xor
sub
xlat
xchg
sub
scas
fwait
xchg
aad
lret
or
rcrb
push
add
inc
lret
hlt
jge
push
jns
lret
push
mov
fwait
mov
ret
dec
jge
jg
add
mov
incl
fcoml
push
adc
jno
rcll
lds
into
mov
push
and
fisubrl
out
mulb
inc
popa
jmp
pop
aaa
dec
and
sbb
inc
imul
mov
xchg
xchg
mov
adc
mov
les
aad
mov
ret
shl
cmp
add
outsl
adc
mov
fildll
mov
push
ret
adc
jmp
xchg
imul
mov
es
xchg
mov
nop
lret
mov
pop
fists
outsl
add
scas
sub
iret
ficoms
mov
in
scas
pop
sbb
insl
sub
lcall
fldenv
push
lahf
lds
fidivs
xor
or
mov
push
inc
cwtl
into
mov
dec
in
pop
sub
filds
sbb
pop
rcrb
stc
lahf
mov
sbbl
rorb
xchg
outsl
xor
push
inc
mov
rol
icebp
adc
xchg
sti
xchg
in
sbb
arpl
es
mov
in
movsl
and
enter
mov
inc
fs
add
cs
xor
ds
ds
movsb
stos
pop
cmpsl
lret
es
mov
push
cld
in
cs
inc
sti
sub
sbb
les
xchg
push
out
test
sub
mov
sti
mov
dec
mov
add
pop
xchg
ret
out
out
mov
xchg
shll
push
lcall
cmp
les
testl
jo
push
test
outsb
fs
xlat
aas
bound
mov
push
je
xchg
pop
es
loop
add
pusha
dec
stos
pop
and
add
flds
outsb
cmp
jns
aaa
pop
mov
andl
out
inc
mov
fwait
out
or
sbb
dec
into
push
stc
push
ret
mov
int
adc
ja
sub
xchg
jmp
or
pinsrw
inc
fistpl
ja
mov
xor
cmpsl
out
fsub
dec
mov
shll
and
ds
jmp
das
in
dec
movsl
pop
cmovge
aaa
shll
mov
mov
add
push
sub
push
cmp
sbb
jp
xchg
pushl
mov
mov
and
inc
scas
fistpll
andl
js
data16
pop
icebp
xchg
movl
data16
cmp
adc
insl
adc
fistps
fsubrl
xchg
xor
daa
popa
ss
pop
into
dec
xor
ret
cli
es
xchg
loopne
roll
pushf
xchg
xchg
push
dec
stos
lahf
or
ror
into
pop
roll
fnstsw
nop
addb
movsl
push
jbe
mov
fwait
jnp
mov
mov
cmp
cmp
into
ds
movsb
ja
pop
inc
or
push
cmp
sti
mov
vcvtpd2dqy
ss
jg
jnp
les
push
les
test
inc
mov
rorl
cltd
pop
ss
adc
popf
dec
or
jmp
ja
aaa
stos
or
shl
pop
insl
out
sub
hlt
iret
xlat
inc
shl
shll
cmp
in
iret
dec
scas
decb
js
add
and
fisubl
dec
rcl
or
xor
mov
repz
fs
hlt
mov
fimuls
pop
and
adc
add
js
movsl
adc
cmp
or
aaa
in
mov
jb
hlt
mov
pop
adc
xor
add
pop
push
popa
movsl
dec
and
inc
add
adc
bound
pop
popa
xchg
fildll
enter
aas
pop
fcomps
out
jno
adc
mov
push
add
cltd
or
pop
out
dec
lock
xchg
mov
sbb
xchg
xor
mov
ret
pop
push
xor
add
notl
js
mov
fstpl
dec
push
and
jle
pop
scas
dec
jo
mov
sbb
jnp
je
xor
jg
sbb
jo
cmc
mov
push
lcall
sbb
mov
cmp
jecxz
test
pop
mov
cmpsl
push
std
sbb
fists
pop
mov
pop
xchg
pop
movsl
push
sbb
lods
jp
add
mov
xor
or
test
sbb
mov
xor
aam
into
xchg
sub
mov
ret
mov
xchg
ret
sbb
xchg
adc
xlat
scas
inc
fidivl
push
mov
fs
pop
out
pop
and
stc
out
push
cmp
pop
cmp
test
cmc
sbb
jg
movsl
lahf
inc
inc
lret
ret
add
cs
xchg
daa
adc
pop
sub
pop
popa
add
push
loop
adc
mov
mov
sub
fiadds
jnp
pushf
sbb
xchg
bound
inc
pmullw
and
or
das
jno
ja
ret
push
shl
in
push
jecxz
out
int
jno
pop
add
sub
sbb
mov
pop
lds
andl
xchg
pop
mov
and
mov
sahf
or
lods
outsb
cwtl
dec
mov
push
ja
ljmp
xchg
in
cmpsb
and
mov
jb
fs
adc
loope
mov
mov
xchg
sub
lret
loope
add
in
pop
mov
sub
mov
inc
jl
pop
and
movsb
xor
inc
pop
cmp
fdivrs
testb
push
inc
in
mov
imul
divb
xor
xor
fnstcw
negb
lahf
sub
scas
in
mov
add
mov
lret
cli
push
jnp
into
negb
les
cli
sbb
ja
mov
add
aas
cmpsl
cmpsb
cmp
push
xchg
jmp
jl
fcmovnbe
push
adc
in
push
mov
dec
and
lds
push
xor
ja
xor
sub
adc
sub
gs
jnp
out
add
aaa
lods
fnsave
xchg
sub
pop
std
gs
test
jne
loopne
sti
movsb
pop
pop
and
les
in
xchg
cmc
ret
cmpsb
pop
adc
jno
or
ja
xchg
push
fs
addr16
add
push
cmc
ret
jge
add
xchg
pop
push
out
mov
cmp
fildl
mov
inc
lret
lea
add
loope
rcll
test
jmp
pop
in
sbb
not
out
lds
mov
or
mov
fadd
xor
mov
loop
cmp
rolb
das
bound
push
das
rolb
lea
jno
push
push
xor
fimull
mov
adc
fldenv
rolb
inc
pop
jge
pop
mov
neg
sbb
fldl
push
add
subl
pop
pop
lods
insl
mov
jnp
out
adc
hlt
cmp
jmp
ret
or
rcl
dec
push
pop
adc
sub
mov
andl
mov
pop
add
xchg
popa
das
out
rcrl
inc
xrelease
push
test
imul
lret
out
inc
mov
mov
test
popl
adc
xor
cmp
pusha
jmp
rcl
jnp
aad
pop
mov
dec
mov
cmpsl
mov
hlt
gs
lods
imul
jg
fmul
rorl
rcr
mov
fildl
inc
adc
mov
sbb
pop
adcl
cmp
addr16
js
jge
lock
ja
jne
in
movl
lcall
out
sbb
ret
sub
call
add
push
or
or
mov
fstp
mov
jae
int3
lahf
cmc
test
mov
or
sarl
xchg
cmp
outsl
in
mov
or
mov
add
stos
pop
ret
arpl
loope
inc
jecxz
push
pop
mov
pop
or
push
fistpl
movsb
idivb
ss
mov
imul
cmp
add
cmpsl
sub
outsb
jecxz
jp
push
pop
stc
xchg
and
test
jbe
pop
cmp
pop
cmpsl
sub
jae
or
mov
adc
fdivrl
xchg
in
test
or
sbb
jb
inc
cwtl
hlt
jne
rcll
mov
sub
icebp
shlb
daa
out
clc
rcr
xchg
leave
insl
mov
call
cli
inc
add
jb
jmp
ljmp
iret
ret
add
rorl
popa
pushf
inc
add
in
negl
ret
mov
lea
mov
cmc
or
push
cmp
push
add
push
sbb
mov
mov
add
jns
pop
fdiv
mov
adc
ficomps
out
out
xchg
lcall
lods
sbb
pop
out
ljmp
push
fistps
push
inc
repnz
inc
adc
or
xor
mov
je
add
icebp
clc
adc
fstpt
cs
adc
inc
mov
lahf
and
ficoml
and
add
in
and
mov
push
loopne
cmpsl
and
loop
loop
shl
xorb
mov
inc
cmpsl
leave
xlat
pop
sar
outsl
xor
jbe
or
pop
cli
cmp
mov
or
jae
loopne
outsb
mov
pop
push
mov
push
xlat
pop
sbb
in
sbb
cmpsl
int
jae
enter
lret
cwtl
movsb
out
cmp
fwait
mov
or
mov
pop
sti
frstor
jecxz
pop
sbb
ljmp
mov
icebp
scas
dec
aam
mov
xchg
dec
stc
mov
test
mov
mov
lock
iret
ret
cmp
test
xlat
xchg
inc
repnz
fstl
sub
push
cmp
hlt
sbb
loop
jg
loopne
subb
daa
lea
call
test
sbbb
gs
lcall
pushf
inc
and
mov
ret
sbb
testb
and
std
dec
nop
or
add
dec
xor
cltd
cmp
ret
das
inc
jno
xor
sahf
icebp
scas
or
fidivrs
add
addr16
insb
lcall
pop
xchg
addr16
pusha
scas
mov
xlat
xor
test
stos
jmp
mov
xchg
push
divl
push
sbb
cmpxchg
xchg
xchg
orl
lods
int
loope
rolb
mov
fldt
fidivrs
fsubl
pop
mov
push
sbb
popa
mov
xchg
inc
dec
into
cmp
jecxz
push
fadds
jbe
lods
std
les
add
push
jecxz
fs
push
mov
ljmp
push
sarl
fcoml
pusha
mov
mov
xchg
sbbl
inc
scas
in
add
adc
pop
mov
jecxz
jge
push
imul
mov
fs
out
push
dec
repnz
pop
out
push
mov
ret
push
jecxz
jns
mov
inc
add
pop
mov
inc
dec
inc
outsl
cmp
arpl
jae
push
push
inc
jmp
mov
xchg
jne
imul
mov
xor
lret
scas
cmp
rolb
inc
jae
xor
pop
inc
jmp
mov
or
dec
add
lock
sbbl
notl
mov
push
fs
aaa
in
push
pop
xor
pop
push
cmp
test
inc
fld
test
out
lds
pop
add
pop
mov
jno
push
divl
les
or
adc
cmpsl
leave
pop
xlat
mov
xor
shlb
out
push
dec
jbe
test
es
dec
dec
and
in
ror
pop
xchg
or
pop
jecxz
and
mov
ret
stos
test
mov
mov
ficomps
clc
jae
lock
inc
pop
mov
insl
mov
push
divb
mov
stos
mov
lds
cmp
scas
mov
test
add
mov
sbb
addr16
mov
and
test
ja
xor
ja
daa
into
or
inc
idivl
xchg
fldcw
out
cwtl
cmp
rcrb
idivb
push
mov
jg
mov
cmpsl
mov
shrl
dec
mov
cmp
inc
xchg
rcll
xchg
add
pop
addr16
insl
inc
loope
or
dec
rclb
jecxz
or
movsl
jne
and
sub
out
fiaddl
shll
dec
gs
jge
dec
call
pusha
imull
jle
pop
mov
lods
adc
or
mov
imul
push
imul
hlt
and
or
lea
or
gs
adc
xchg
lds
pop
or
in
test
adc
lods
dec
sbb
lods
pop
sub
jecxz
lret
repnz
movsl
jg
push
call
ljmp
pop
dec
mov
outsb
sub
push
outsl
sbb
or
or
mov
mov
fs
mov
lcall
adc
push
test
bound
lds
xchg
test
push
xchg
add
add
shr
rorb
fisttpll
mov
lods
js
jnp
mov
mov
lcall
and
xchg
loope
push
in
and
out
inc
ljmp
daa
inc
gs
rol
xor
xlat
pop
push
add
xchg
mov
inc
in
sbbl
xchg
inc
mov
fbstp
sahf
jle
imul
testb
cmp
ljmp
ss
add
jmp
out
xchg
hlt
jbe
pop
cld
push
pop
pop
popa
imul
in
adc
and
jae
mov
push
or
push
push
rcll
jbe
mull
pop
lock
jmp
cld
adc
leave
enter
dec
shlb
and
sti
lahf
mov
mov
mov
pop
inc
sbbl
xor
or
addl
mov
pop
scas
mov
int
and
push
jge
push
jbe
mov
xor
outsl
inc
pop
mov
mov
sub
daa
out
xor
repz
xchg
mov
dec
std
inc
mov
in
add
mov
xchg
fld
out
bound
sbb
mov
jl
or
pop
stc
lret
into
daa
scas
fabs
cltd
mov
mov
lds
sbb
mov
jle
adc
adc
sub
inc
js
movsl
sbb
mov
in
pop
push
fwait
push
jmp
in
outsb
dec
lea
mov
out
xchg
jmp
and
or
rclb
xor
sbb
mov
daa
out
adc
mov
dec
into
and
out
insl
stc
out
cs
shll
push
gs
mov
mov
bound
xor
adc
mov
imul
lock
pusha
inc
sbb
sbb
xor
xlat
iret
lds
add
adc
mov
pop
or
pop
test
mov
sbb
jecxz
push
xlat
shlb
and
cmp
fwait
pushf
or
iret
rolb
insb
jb
cmc
loopne
and
mov
clc
dec
int3
lods
repz
out
jns
and
push
imul
sti
adc
clc
cli
cmp
lcall
pop
xchg
repz
daa
insl
outsb
sub
mov
mov
dec
inc
es
shr
jmp
mov
aaa
in
or
ret
pushf
jl
out
mov
dec
mov
or
scas
out
push
fs
popa
rolb
sub
and
call
sub
xchg
jne
loop
fidivs
cmp
dec
add
push
add
nop
mov
mov
sbb
test
loope
sub
pop
sahf
adc
pop
sti
mov
sub
xchg
repz
add
inc
std
push
sub
fisubs
repz
dec
jo
ds
in
addb
rorl
mov
cmp
dec
fdivs
fstps
xor
subl
dec
jmp
jge
push
jo
aad
cs
push
nop
stos
cmp
test
and
roll
je
or
fstpt
mov
dec
into
xchg
cmp
pop
idivl
loope
push
fs
sub
adc
or
lea
inc
jmp
mov
sub
inc
bound
loope
mov
jl
outsl
lret
in
adc
int
xor
mov
jb
xchg
xlat
in
aas
xor
imul
xor
or
jp
pop
cs
sbb
mov
movsl
and
inc
dec
and
aam
xchg
js
mov
fistpl
xchg
scas
mov
addr16
sbb
loopne
jne
mov
pop
int3
shll
jg
dec
push
movsl
mov
cmp
lods
mov
shll
bound
and
cwtl
lods
jge
or
lret
iret
push
dec
aam
repz
neg
xchg
jo
xchg
sbb
xchg
jge
mov
pop
movsb
cwtl
ja
mov
mov
aas
or
sub
test
pop
jl
repnz
mov
inc
cmp
pop
jl
lea
jns
ds
outsl
in
fs
xchg
and
xchg
xchg
cmp
pop
and
aad
sub
mov
sbb
push
cmpsb
stos
push
aaa
sahf
out
scas
daa
mov
icebp
jle
push
pop
in
outsl
push
pop
sarb
ja
adc
stos
lods
xor
fildl
dec
jg
cmp
sbb
xchg
aad
rcll
je
inc
or
jmp
add
jmpw
clc
inc
mov
int
fldln2
subb
incl
test
lock
xor
xlat
pop
outsb
cmc
jg
xor
in
pop
pop
push
imul
pop
sti
jecxz
pop
and
loopne,pn
shll
or
inc
jns
or
adc
out
mov
out
stos
inc
clc
in
mov
add
mov
mov
cmc
add
dec
test
cs
mov
xor
push
out
jns
xchg
mov
mov
mov
ja
nop
fldl
fs
mov
xchg
adc
jno
xor
pop
sti
xor
xlat
gs
cmp
jmp
or
fistpl
xchg
pop
gs
pop
jg
lock
inc
imul
divl
insl
scas
fs
iret
xlat
addl
into
std
dec
shl
add
jp
fistpl
ficomps
pop
xacquire
dec
jne
fdivr
leave
push
mov
lock
ret
push
in
outsl
xchg
add
or
dec
mov
test
fs
test
xchg
mov
cmpsl
sbb
inc
xchg
adc
into
call
int3
push
mov
fstpl
jb
dec
in
test
popf
mov
out
or
sub
mov
int
popf
push
pop
or
add
jae
inc
dec
jnp
inc
dec
stos
and
mov
int
imul
mov
dec
sbb
mov
dec
mov
cli
xlat
sbb
xor
mov
mov
inc
inc
push
lcall
sub
movsl
adc
add
jno
popa
jno
push
andb
mov
sub
pop
sbb
aad
out
push
sub
test
in
or
and
divl
jle
xlat
dec
fstpt
in
mov
push
repnz
dec
push
mov
jl
adc
push
outsb
mov
test
fs
pop
or
iret
xchg
testl
cs
sahf
jl
xchg
jmp
push
pop
repnz
fmuls
adc
adc
lds
mov
sahf
popf
outsl
or
lock
lods
mov
inc
fbstp
xor
dec
loope
add
rolb
outsb
frstor
pop
inc
insl
testb
mov
cmp
xor
xchg
cmp
scas
ja
inc
pop
lods
call
xchg
jg
std
xchg
dec
fistps
xor
xchg
sub
add
push
pop
cmp
aas
addr16
xchg
icebp
scas
pop
xor
push
sahf
leave
out
cmp
data16
cs
mov
aad
ret
ja
pop
xor
int3
xor
mov
and
sub
inc
orl
ds
adc
lock
sti
lock
mov
bound
in
add
push
cmp
imul
jg
sarb
push
outsl
popa
fdivrp
xchg
scas
fstpl
dec
inc
jle
lds
mov
push
pop
out
shrl
add
pop
or
in
sub
inc
or
and
out
fsubp
loop
mov
and
in
xchg
stc
fwait
jecxz
fst
sbb
out
dec
and
mov
dec
add
mov
lea
jns
and
xchg
jmp
pushl
push
sbb
mov
arpl
dec
out
stc
sbb
insl
shl
push
jno
xor
xchg
rclb
scas
ja
test
and
xchg
xchg
cmpsb
push
aad
cmp
shll
xchg
cmp
mov
dec
or
push
cmpsb
jb
sbb
jo
in
cmpb
int3
adc
cmp
mov
sahf
incl
and
pop
push
cmp
adc
jb
mov
lds
roll
cmp
xchg
scas
dec
sub
ja
push
in
mov
push
xor
push
add
cltd
shlb
push
xor
pop
out
push
mov
test
dec
icebp
sar
xchg
mov
jmp
sub
sbb
push
push
xorl
pop
mov
scas
and
or
xchg
xchg
push
pop
xchg
mov
sub
cmp
push
pop
insl
mov
mulb
cmp
test
gs
xor
movsl
dec
add
and
fst
add
flds
pop
pop
popa
jle
imul
push
fs
push
pop
jne
jns
mov
jno
cli
adc
inc
jge
loope
ret
pushf
inc
ljmp
repz
sub
push
out
sub
cmpsl
push
imul
insl
sbb
imul
or
lea
add
xlat
insl
test
fstl
sbb
fwait
stos
sbb
add
or
pop
cmp
dec
jnp
adc
dec
mov
inc
push
push
mov
jecxz
sbb
mov
in
loopnew
jo
add
push
pop
mov
fs
addl
in
out
mov
xchg
inc
shll
inc
xchg
mov
xchg
call
sbb
rcrb
xchg
jmp
adc
lods
and
adc
lahf
lods
shl
push
inc
xorb
add
cmp
cli
pop
or
mov
andb
pop
andb
mulb
ds
sbb
addl
shr
mov
dec
mov
dec
adc
dec
fidivrs
jnp
inc
sahf
mov
mov
fcmovbe
lcall
xor
fwait
jge
jl
cltd
pop
push
add
inc
cmp
sbbl
inc
arpl
jne
pop
lods
jb
sub
loop
pop
iret
mov
mov
jge
cmpsl
pop
lods
jmp
lcall
scas
int3
adc
cvtdq2ps
test
and
icebp
mov
mov
out
outsb
jecxz
lock
inc
pop
dec
fs
addl
rcrb
mov
dec
jg
mull
sbb
push
gs
add
aas
inc
data16
movb
loop
sub
sarb
cmp
js
jle
pop
jmp
xlat
mov
mov
mov
mov
fistpll
pop
test
rcr
mov
fs
jbe
xchg
test
repnz
popa
dec
daa
test
xlat
mov
pusha
mov
fs
sbb
push
and
pop
mov
addr16
push
outsl
test
push
xchg
test
adc
frstor
jecxz
nop
lock
jg
fwait
mov
xchg
push
les
loope
mov
nop
loope
jae
gs
scas
outsl
popf
adc
xchg
lds
stc
jp
sub
mov
sub
outsl
jp
in
sbb
cmp
mov
inc
fadds
add
sub
fs
movsb
adc
arpl
mov
test
je
mov
stos
iret
ret
out
sub
sbb
jnp,pn
fs
adc
jge
addr16
adcl
les
popf
loopne
add
and
pusha
icebp
pop
daa
dec
and
imul
push
mov
cld
mov
fwait
popa
inc
xor
mov
pop
cmp
lock
adc
in
loopne
popa
mov
imul
out
inc
push
fmuls
jb
jne
pop
jmp
rorb
pop
adc
add
adc
xchg
xchg
inc
add
pop
push
push
insl
insl
mov
and
ret
xor
std
in
cmp
mov
cmp
pop
imul
push
popa
movsl
rorb
cs
mov
mov
insl
es
imul
mov
fidivrl
xchg
and
pop
cmpsl
xor
shll
loop
es
dec
cmp
insl
shrl
mov
mov
mov
imull
push
xchg
daa
in
or
dec
inc
lcall
pop
sbb
pop
call
and
pop
jae
gs
andl
jge
mov
mov
call
mov
and
inc
test
mov
std
mov
cmp
pop
pop
xor
fsubl
cmp
sbb
dec
mov
mov
mov
addr16
test
mov
imull
test
add
sbb
popa
mov
jge
sub
and
mov
sarb
lods
shll
mov
idivl
jns
out
mov
lds
pop
sbb
cwtl
cmp
mov
jmp
ret
fcompl
divb
mov
jne
test
mov
imul
iret
xor
ja
jb
mov
mov
ja
repz
add
jle
or
sbb
dec
sahf
dec
jnp
jge
pop
cmpsl
sub
mov
jnp
loop
xor
call
jne
cmp
insb
mov
jae
sarb
insb
cltd
loop
xor
adc
jbe
push
rcr
add
inc
mov
pop
ret
fisttps
fcoms
mov
fs
sub
sbb
into
jo
ja
cli
testl
rorl
push
scas
mov
hlt
or
inc
loop
push
cmpsb
shl
rep
mov
ss
aaa
pop
sub
dec
imulb
lods
mov
test
push
jl
dec
mov
mov
or
cmp
push
into
cmpsl
add
cmpsl
repz
or
gs
out
out
pop
cmc
scas
mov
mov
test
call
xchg
push
stos
loop
fucom
lea
mov
fstpt
mov
cmp
sub
and
mov
adc
das
std
lahf
mov
xor
outsl
mov
add
pop
dec
inc
xor
lds
mov
pop
or
mov
mov
add
cmp
daa
adc
adc
mov
out
inc
pop
adc
ja
loop
mov
mov
lcall
daa
shrb
stos
jb
leave
das
inc
jne
jmp
or
cmp
mov
icebp
fdivs
repnz
mull
cmp
and
stos
mov
nop
jl
shll
push
mov
add
repnz
push
add
js
jg
adc
cmc
popf
jl
mov
movsb
fdivrl
ja
cli
ret
and
jne
dec
stc
lea
stc
push
addr16
mov
pop
out
shlb
mov
or
xchg
aaa
or
addr16
dec
leave
stc
daa
imulb
aas
xchg
inc
xchg
sbb
mov
mov
mov
out
push
mov
xor
pcmpgtd
out
mov
or
push
bound
xchg
jge
scas
dec
xor
rcl
or
sar
jne
mov
inc
sub
scas
dec
mov
adc
jge
cwtl
in
sarl
test
and
xchg
mov
arpl
fisubs
pop
xchg
sub
mov
pop
pop
scas
aam
mov
mov
subb
in
jg
inc
push
clc
add
dec
mov
cmp
int
sti
jge
scas
shll
jg
sub
mov
shl
dec
pop
pop
cmpsb
push
mov
push
addr16
sar
cmp
jns
xchg
int3
xchg
into
fwait
xorb
je
out
fstp
addr16
dec
dec
cmc
mov
pop
xchg
loopne
mulb
ficomps
jae
ret
jp
fcmovnb
fildll
lock
daa
adc
inc
jg
in
mov
in
data16
out
add
bound
xor
xchg
adc
loop
icebp
push
mov
jge
in
fisubl
mov
adc
mov
mov
lock
dec
pop
jne
or
lods
mov
mov
aaa
jge
push
out
push
mov
rcll
push
bound
mov
std
xchg
fstpl
orl
jl
jecxz
testb
mull
xor
mov
lods
into
cs
mov
pop
mov
dec
movsb
divb
and
dec
sahf
or
loope
ret
xchg
cmp
into
mov
cmp
out
dec
mov
jg
sbbl
rorb
repnz
hlt
rorl
lock
movsl
jecxz
add
dec
inc
pusha
cmpsl
sbb
jae
adc
mov
arpl
aam
add
les
cmp
xor
pop
fiaddl
test
xchg
movsb
jb
jecxz
pop
sar
sbbb
loopne
dec
aad
test
aam
outsb
test
iret
mov
int
mov
sbb
mov
inc
jge
jecxz
stos
pop
cmpsb
dec
dec
mov
cmpsl
outsb
add
imul
sbb
ja
mov
and
push
es
mov
cmpsl
incl
xchg
divl
data16
out
test
sub
hlt
in
stos
dec
test
xor
mov
mov
sbb
aas
inc
mov
repz
or
mov
stos
mov
mov
pusha
ret
aaa
shufps
es
mov
sbb
lcall
jmp
jecxz
outsl
repnz
xlat
jae
adc
in
mov
push
adc
adc
pop
xchg
js
mov
aas
mov
jg
ret
xor
add
or
rorl
mov
not
aaa
push
addb
cld
fdecstp
icebp
rcll
mov
popf
fisttps
pop
cmp
mov
inc
shrl
add
adc
pop
in
fwait
imul
xor
rcll
les
sub
pop
pop
add
lahf
shlb
mov
mov
adc
adc
cli
push
pop
cs
rcll
movsb
xchg
fs
jg
repnz
and
xchg
pop
nop
lahf
sbb
jae
test
mov
out
or
sub
adc
sub
dec
adc
jl
adc
mov
lret
lods
fldl
movl
sti
add
test
cmc
faddl
mov
or
mov
outsl
mov
mov
cmpsb
jg
sti
push
lods
pop
cmp
dec
insb
dec
push
test
lahf
inc
sar
adc
mov
push
es
out
inc
mov
mov
mov
pop
ja
cmp
ljmp
aaa
lea
insb
xor
inc
jbe
dec
mov
mov
sbb
sbb
inc
imul
xor
push
or
out
add
popf
dec
adc
or
and
jnp
xor
push
repz
mov
pop
mov
pop
cmpsb
rcrb
shll
inc
or
inc
repz
cmpsb
cmp
or
addr16
mov
ss
push
inc
mov
fwait
out
cmp
roll
cltd
push
sbbl
clc
xchg
roll
mov
dec
lods
cmp
fisubl
cmp
jbe
inc
ret
xchg
and
add
inc
mov
dec
or
lcall
or
inc
adc
jae
jo
cs
ljmp
mov
adc
xor
shlb
jg
int3
jge
scas
adc
add
jg
sub
into
out
push
sbb
cmp
es
fisubs
mov
mov
movsb
lds
add
es
mov
imul
call
push
hlt
mov
sbb
scas
mov
out
test
rcl
jnp
fsubs
sti
jb
popa
pop
xor
xchg
pop
scas
ficompl
enter
adc
dec
ljmp
outsl
mov
sub
add
xchg
push
lods
nop
mov
jl
mov
out
mov
cs
in
pop
sub
ret
adc
adc
jne
jns
push
mov
dec
or
inc
fisubl
addr16
in
andb
add
call
cwtl
inc
jecxz
jl
rcr
pop
or
mov
out
fwait
mov
imul
aas
cmp
or
cmc
xchg
push
repnz
imul
out
inc
sahf
ret
sbb
jmp
sbb
jp
xchg
not
mov
roll
cmc
pop
imul
sub
pop
data16
mov
in
adc
push
fsubp
xor
aaa
jb
int
js
iret
and
sub
pop
jge
xor
or
negb
xor
clc
dec
addr16
test
in
inc
xchg
hlt
pop
mov
jb
fwait
jge
stos
cltd
pop
push
sbb
ljmp
xor
jmp
adc
xchg
out
xchg
test
push
div
or
into
pop
call
push
jge
popf
and
xor
lds
leave
sti
fwait
cmpsl
iret
xchg
aas
inc
jbe
mov
jo
into
inc
test
insl
popa
jnp
in
inc
std
out
scas
pop
mov
cld
leave
add
xlat
pop
fildll
jmp
mov
inc
adc
xchg
sub
xor
fsub
sub
push
call
aam
pop
mov
movl
repz
mov
incb
fidivl
lods
and
cmpsl
rclb
cltd
add
incb
jne
xchg
xchg
dec
dec
jnp
inc
mov
push
test
add
push
aad
cmp
or
in
popf
rcrb
js
adc
in
insb
test
jo
inc
out
jne
dec
xchg
es
dec
sub
in
ds
and
aad
mov
scas
cmpsl
jmp
sar
mov
inc
mov
dec
out
and
or
add
movsl
cmp
addb
mov
cltd
pop
pusha
sbb
rclb
sbbb
outsl
loope
leave
push
add
cld
add
jge
movb
lods
pusha
cmpsb
and
add
stc
mov
pop
iret
mov
movsb
push
jecxz
lahf
nop
mov
aad
lock
inc
dec
xchg
inc
xor
movsl
shlb
gs
dec
add
popf
xlat
lahf
xchg
lret
aaa
jg
pop
jno
lretw
jle
xor
fucomi
clc
idivl
xor
xor
fildll
push
inc
xchg
pusha
aam
sub
and
mov
std
popa
mov
sarl
sbb
lcall
fs
mov
outsl
testb
inc
daa
mov
jg
mov
in
movzbl
ret
rcrb
or
fldcw
sar
cmp
xchg
cs
sub
cmpsl
inc
loope
lods
sti
in
xlat
jbe
xchg
je
mov
pusha
mov
and
data16
add
inc
das
loope
and
pusha
data16
jg
lock
arpl
jg
xchg
lea
jge
std
pop
fs
xchg
adc
mov
das
fldl
mov
adc
xchg
popf
outsl
sti
adcl
popa
cmp
adc
adc
shr
fsubrp
jg
and
push
cmp
sub
shll
inc
ljmp
ss
out
addr16
dec
and
mov
inc
in
xchg
aas
cmpsl
arpl
mov
pusha
add
fcomps
xor
idivb
cmpsl
mov
jg
ret
lods
push
push
decb
je
das
pop
inc
push
aaa
lahf
push
enter
addr16
jmp
mov
mov
push
cmp
frstor
nop
shr
mov
adc
data16
ss
mov
pop
pop
or
jno
xlat
jg
sbb
mov
mov
xchg
push
inc
lret
jle
sub
pop
shll
jp
daa
insb
test
cmp
cmpsl
popf
and
xor
push
mov
mov
mov
xor
movsl
inc
cmpsl
and
ficoms
loope
jne
and
cli
pop
jecxz
jne
aad
or
dec
sti
mov
insl
scas
stos
mov
shr
dec
mov
pop
pusha
mov
pop
mov
mov
sbb
pop
loope
nop
or
mov
lock
sbb
into
or
ja
cmc
daa
jbe
jl
clc
cmp
or
jecxz
clc
imul
mov
cs
and
or
lods
adc
shr
addr16
mov
xor
in
pop
and
leave
sub
xchg
inc
lds
adcl
mov
jo
or
fisttps
pop
bound
les
or
out
aas
jns
or
jmp
pop
jmp
subl
fiadds
or
dec
xor
lret
push
std
jl,pn
push
scas
call
mov
cmpl
clc
pop
push
mov
in
vsqrtsd
add
jmp
add
mov
roll
xchg
sub
jno
pusha
pop
xlat
inc
sti
xchg
mov
pop
fldl
divb
xchg
testb
xlat
orb
iret
jle
sbb
adc
jecxz
lret
sub
or
xor
out
fs
and
push
into
icebp
push
adc
inc
jmp
test
bswap
sbb
ss
xlat
inc
mov
xchg
cmpsl
int
out
jg
fs
je
cli
iret
movsl
out
bts
mov
jp
lods
iret
sbb
dec
or
xor
pusha
mov
jp
mov
loopne
test
ucomiss
int
loop
or
scas
cmpsl
fneni(8087
cmc
or
jg
push
jb
cmp
and
pop
xchg
insl
cmp
xchg
scas
dec
sub
adc
adc
fistpll
pop
loop
addr16
rcrl
mov
inc
out
cmpsl
je
ret
leave
add
inc
jne
jbe
inc
mov
iret
idivl
ss
out
inc
pop
popa
cmc
sub
inc
cmpsl
mov
mov
call
frstor
cmp
mov
filds
xlat
mov
clc
js
pop
ret
cmpb
add
imul
fnsave
add
adc
mov
cmp
lahf
jle
daa
or
mov
mov
outsb
icebp
scas
fdivrs
pop
shl
icebp
jle
inc
cmp
inc
fistl
clc
or
and
out
sbb
cmpsb
dec
aam
push
sbb
fldl
lahf
out
aad
dec
addr16
test
in
add
fs
cmpsl
push
jecxz
jnp
inc
fdiv
add
pop
mov
and
and
jne
jecxz
mov
fisttps
pop
xchg
data16
push
cld
idivl
shlb
in
adc
lock
jg
stos
sub
sub
shll
sbb
push
adc
daa
repz
test
cltd
xchg
inc
add
or
rcrb
add
rorb
or
and
ficoml
push
scas
mov
mov
add
repnz
ret
push
cmp
les
push
mov
out
and
pop
test
xor
lds
aaa
cmpsl
xchg
cmp
push
mov
movsb
loope
repz
and
jae
aad
loopne
je
cmpsl
in
mov
mov
mov
jno
stos
jl
aas
sahf
lods
movsl
jae
lds
pop
stos
scas
or
inc
mov
adc
les
cmp
scas
in
push
dec
xchg
lahf
push
inc
ljmp
scas
pop
inc
jns
in
xchg
loopne
inc
xchg
test
and
repnz
and
xchg
jo
subb
dec
cmp
in
pop
jne
test
mov
les
sub
cwtl
cmc
std
aaa
decb
push
pop
dec
popf
clc
sub
out
pop
cmc
xor
jne
mov
daa
sbb
iret
xchg
test
push
lods
push
daa
mov
int
mov
inc
cmp
rcrl
js
fs
icebp
push
addb
stos
jo
and
mov
popf
ret
push
fistpl
aad
movsl
sbb
xchg
hlt
fisttps
test
out
inc
jge
xchg
movsl
cs
cmp
outsl
mov
or
push
negl
loopne
repnz
sub
mov
test
mov
jb
lock
adc
push
inc
shrb
jmp
jmp
pop
dec
cli
shlb
notl
and
in
nop
insl
mov
mov
dec
out
mov
cmpsl
jg
mov
movsl
jl
outsl
outsb
je
mov
cmp
inc
insb
xchg
sub
jecxz
mov
add
mov
sub
icebp
cmpsl
or
and
mov
cmc
add
pop
inc
cmp
add
mov
pop
sti
incb
mov
cmp
js
test
pop
inc
sbb
mov
shr
jmp
imull
out
stos
and
lods
arpl
arpl
add
pop
daa
icebp
popa
pop
jp
test
fcmovu
cmp
xchg
rclb
jns
daa
movsl
in
xchg
mov
pop
ds
mov
fmulp
mov
pop
rcrl
lods
or
rcrb
cmp
push
int
dec
std
js
mov
pop
cwtl
cmp
into
in
negb
mov
and
or
jecxz
dec
sahf
aas
imul
xor
jne
test
sbb
ja
cmp
in
or
inc
aam
cmovs
cmpsb
or
jb
cs
inc
cs
pop
and
xchg
mov
push
stos
mov
adc
mov
mov
mov
mov
push
pop
js
xchg
xchg
ja
insl
dec
fcoms
sbb
cmpsb
cmp
add
fsubrl
mov
pop
fldl
dec
cmc
outsb
ffreep
adc
xor
mov
dec
rclb
fistps
aas
outsb
xor
sbb
sub
jmp
into
inc
scas
movsb
out
pop
jnp
out
push
inc
in
jecxz
rcll
gs
mov
clc
cmpsl
mov
test
dec
jo
or
and
and
and
leave
dec
sub
mov
cmp
leave
aam
cmp
ret
cli
mov
pop
aas
es
sub
sbb
popl
dec
nop
lea
mov
push
ljmp
or
insb
out
add
jbe
add
add
xchg
out
fldenv
lds
shll
inc
imulb
nop
test
jmp
rol
sahf
insl
pushl
adc
test
and
sbb
lahf
ds
adc
mov
subb
or
add
add
mov
and
or
sti
gs
push
fstpt
push
add
fcmovne
push
mov
fisubs
ds
in
xchg
sbb
repz
xchg
in
imul
jns
movl
pop
mov
or
lret
in
cmpsl
mov
and
mov
sub
xor
out
lds
sarb
pop
insb
cmpsb
lods
rolb
fbld
mov
iret
stos
mov
dec
push
pop
inc
inc
mov
ja
jno
es
inc
loop
or
shr
sti
jecxz
js
js
cs
push
les
cmpsl
cmp
insl
aas
inc
or
xchg
loope
pusha
jmp
les
xchg
fs
adcb
dec
pop
dec
clc
lret
scas
push
sub
mov
out
rclb
cmpsb
insw
jmp
pop
jae
pushf
jl
mov
mov
pop
adc
mov
and
ret
std
push
test
dec
ret
push
mov
mov
inc
popf
int
mov
xchg
outsl
cmpsb
sub
push
mov
and
add
jmp
gs
push
jne
add
cmp
or
inc
popa
mov
scas
mov
movsl
inc
testl
in
inc
mov
es
lds
ret
nop
add
push
ret
mov
stos
sbb
loopne
cmpsl
nop
outsb
popa
jge
cli
mov
push
repz
ja
sub
mulb
out
rclb
xchg
mov
sub
pop
jne
inc
test
adc
inc
inc
pop
cmc
fcomip
gs
cmc
test
fisttps
ss
push
ja
test
push
dec
testb
mov
in
mov
or
scas
scas
stc
and
cltd
ja
jb
mov
mov
dec
out
jns
popl
mov
mov
andl
int
scas
flds
push
fwait
notb
mov
xchg
push
in
test
or
sbb
in
decb
daa
cmc
sub
sti
xlat
shlb
mov
sti
dec
push
cmp
dec
test
inc
stos
adc
xchg
stc
leave
lods
push
movb
out
dec
push
add
mov
roll
pop
movsl
cwtl
mov
test
out
dec
pcmpgtb
mov
xchg
or
or
fxam
sub
movb
pop
aaa
rorl
outsb
pop
daa
fs
repnz
mov
out
aad
jbe
pop
cwtl
or
pop
cmp
adc
roll
and
sbb
inc
scas
jno
jg
orl
push
add
cs
and
pusha
jmp
out
sub
sub
sti
lods
insb
cmpsl
cmp
mov
jo
repz
inc
and
push
xchg
dec
clc
cmp
mov
sub
mov
mov
xchg
jo,pn
ret
pop
movsl
pop
xlat
es
adc
movsb
xchg
fimull
in
pop
mov
in
dec
mov
popa
lret
xchg
lock
mov
fstpt
in
cmp
ja
push
pop
xlat
into
inc
out
cmc
mov
and
jns
outsl
decl
sti
jo
adc
push
xor
adc
mov
out
fbld
dec
jne
mov
mov
or
push
mov
push
lcall
xchg
jge
mov
in
in
xlat
faddp
imul
jmp
sub
jge
xor
fnstenv
bound
sbb
icebp
add
inc
sarl
fnsave
xchg
rolb
fiadds
mov
cli
stos
pop
loope
mov
es
int
inc
in
pop
push
push
dec
scas
es
outsl
scas
inc
test
in
outsb
add
faddp
xchg
into
mov
xchg
push
fdiv
aam
sub
jle
mov
mov
push
je
icebp
in
xorl
cmpsb
shlb
in
sub
inc
scas
add
aad
and
ret
mov
lods
cmpl
jmp
jae
jbe
fs
cmpsl
lock
mov
hlt
push
int3
lret
icebp
or
cmp
out
jns
ficoml
xchg
arpl
mov
pop
jle
fldl
arpl
inc
divb
and
add
fs
push
test
cmpsw
xchg
add
sarl
fisttps
xchg
mov
wbinvd
cmp
xchg
lds
push
mov
cmc
js
ds
mov
xchg
js
les
mov
pop
mov
add
fndisi(8087
out
mov
in
lret
ljmp
xor
cmc
outsl
or
mov
push
xchg
out
fcmovnu
adc
jecxz
hlt
pop
mov
jne
cmp
sbb
xchg
lahf
mov
scas
push
sbb
pop
es
es
jbe
push
out
lds
outsl
ljmp
jnp
pop
jnp
mov
mov
xchg
dec
jnp
aas
outsb
add
adc
in
aaa
rcrl
cmc
fiadds
mov
mov
or
add
or
outsl
bound
xlat
add
dec
cmpps
stos
rorl
fnstenv
jmp
jge
sarb
push
adc
pop
out
rcll
mov
pushf
out
mov
cmp
adc
push
je
mov
adc
mov
xor
mov
push
out
pop
icebp
dec
scas
icebp
ja
jp
xor
fldt
mov
std
add
jmp
push
xor
pop
jb
sbb
cmp
test
dec
ret
cs
adc
push
and
aam
dec
jae
dec
jns
jne
and
dec
adc
fstl
aam
and
mov
push
adc
xorb
in
sbb
ficoms
mov
in
idivl
leave
or
add
inc
stos
or
inc
mov
jnp
insl
lret
std
mov
push
fisubs
pop
pop
or
notb
xchg
mov
fisubl
dec
xchg
scas
out
sub
push
retw
push
lock
ficoms
test
clc
cmp
stos
insl
stc
rcrb
loop
ds
lret
or
push
sahf
fdivp
ss
inc
xchg
jl
in
adc
pop
sub
jge
cli
add
lahf
add
cs
pop
aaa
addl
add
repz
and
leave
fucomip
daa
and
jne
fbstp
adc
fsts
mov
push
pop
dec
and
dec
lea
outsl
out
ljmp
rdtsc
fcomps
cltd
jo
iret
add
mov
std
dec
mov
inc
shll
pop
sub
out
fwait
int
cmp
xor
aad
adc
sbb
repnz
sbb
daa
mov
pop
fisubs
xchg
jmp
fisttpll
push
es
sbb
or
mov
test
adc
iret
mov
enter
and
fstl
mov
int3
jge
cmc
lcall
lods
out
pop
shlb
mov
fcmovu
sub
push
cmc
push
sbb
aad
popf
cmpsl
test
aas
adc
daa
cmpsl
xlat
xchg
int
enter
lret
mov
or
mov
jnp
ds
data16
outsb
lcall
push
fwait
jl
jge
test
mov
jnp
std
pop
mov
stc
scas
jmp
in
daa
out
inc
mov
scas
lods
pusha
dec
addr16
xchg
sbb
popf
mov
inc
je
fwait
sbb
cmc
xchg
movsb
test
pop
push
push
inc
bound
pop
adc
testl
outsl
stc
sub
shr
inc
andl
into
jne
repz
inc
add
es
jge
lods
ficoms
xor
mov
pusha
fnstsw
push
sub
xchg
dec
adc
dec
aaa
inc
bound
add
mov
xchg
popf
cmpsl
jle
aaa
int
dec
mov
cmpb
inc
push
fwait
andl
cmpsl
outsb
jmp
mov
mov
sbb
ja
pop
test
incb
xchg
pop
scas
leave
dec
or
adc
imul
fwait
test
jne
test
in
cmpsb
loope
cmpsb
pop
shrb
out
orl
jecxz
in
sbb
jl
xchg
dec
mov
nop
push
and
outsb
imul
dec
or
xchg
cmc
mov
jmp
sti
mov
mov
es
test
ret
jg
jg
les
ja
mov
xlat
or
mov
cmp
imul
ffree
mov
addl
mov
mov
sarl
cli
sub
mov
xchg
jmp
addr16
jmp
sbbb
btr
mov
push
mov
push
pop
into
adc
inc
pop
je
outsb
es
out
negl
sahf
fs
jg
xchg
push
xchg
roll
xchg
pop
addr16
pop
xchg
gs
pop
ret
dec
fistps
rclb
enter
stos
jnp
jbe
jg
xlat
mov
stos
test
jecxz
in
cmp
pop
out
adc
push
lds
ljmp
or
shrb
adc
mov
add
adc
jmp
es
mov
aad
pop
sub
jae
mov
push
test
cmpsl
vorps
fucomp
ss
xor
jge
adc
pop
adc
lret
pop
add
in
cs
sbb
sbb
cmp
mov
add
in
xchg
addr16
fisttps
call
int3
ja
lock
js
mov
pop
xchg
in
push
shrl
test
hlt
mov
push
jmp
inc
jno
repnz
pushf
xor
fists
in
dec
nop
es
mov
fnstsw
adc
shlb
xchg
fucomi
mov
push
push
cs
push
js
dec
lea
out
pop
inc
imul
push
sarb
aaa
fisttpll
and
mov
scas
mov
pushw
jge
out
cmp
scas
xorl
mov
mov
movq
push
loope
pop
pop
xlat
xchg
nop
push
ja
cmc
dec
mov
into
lea
mov
push
sub
sarb
loopne
repnz
or
jb
movswl
scas
cmpsl
xchg
lahf
xlat
inc
push
lcall
clc
scas
push
sub
pop
lret
push
jmp
lods
mov
fcomip
loope
inc
pop
mov
into
dec
inc
add
and
fs
es
and
lds
pusha
jg
call
sbb
mov
pusha
push
mov
inc
addl
rcrl
add
and
push
into
inc
scas
cmp
imul
xor
sub
shll
add
adc
out
icebp
inc
in
xchg
in
jae
loopne
jbe
inc
sahf
jmp
and
cmp
adc
lods
lds
bound
icebp
roll
inc
and
mov
fsubs
sti
lahf
lret
and
fcoml
push
scas
in
mov
adc
mov
adc
mov
outsl
jmp
andl
mov
sbb
imul
add
lret
sbb
out
jge
mov
cmp
popa
mov
xchg
pushl
dec
loop
sbb
aaa
xchg
dec
dec
push
push
fstps
jge
jbe
pop
push
jbe
lds
loop
pop
or
enter
lods
ror
rcl
inc
addr16
mov
sbb
adc
sbb
fstpt
xchg
push
aad
out
xor
ja
dec
hlt
xor
pop
adc
rcl
xor
fiaddl
mov
repnz
out
jmp
add
xchg
les
outsb
shrb
daa
xchg
les
mov
and
add
rcr
stc
push
loope
dec
les
lods
repz
jge
into
ror
add
dec
clc
int
lahf
mov
or
adc
rol
mov
aam
pop
lock
mov
imul
or
ret
mull
icebp
cmpsb
insl
dec
into
shlb
pop
jp
or
jge
xchg
enter
in
test
xor
call
stc
shrb
adc
test
cmc
test
idivl
faddl
lret
test
and
mov
inc
outsb
push
or
pop
movsb
lcall
add
add
pop
aas
and
xchg
mov
into
je
lret
int
out
mov
ds
jecxz
pop
fcomip
popa
test
loop
sbb
aas
bound
push
dec
lret
dec
out
icebp
xchg
xor
mov
movb
xchg
or
daa
pop
in
dec
fs
loope
mov
decl
push
shrb
cli
dec
int
lds
outsl
popa
sahf
add
frstor
fbld
test
aas
mov
and
lcall
fwait
add
push
cmpsb
addr16
inc
iret
in
and
lods
out
into
sbb
sti
lods
jg
jbe
mov
pop
fisttpll
adc
inc
mov
fistps
aam
aam
mov
addr16
outsb
ljmp
mov
insl
adc
arpl
jne
addr16
push
and
sub
inc
pop
dec
sahf
popf
out
and
push
out
in
jp
insb
outsl
inc
iret
lahf
leave
fldl
clc
movsl
xor
and
or
push
inc
xlat
iret
inc
jmp
sarl
cmc
cmpsb
xchg
js
sbbl
addl
test
pop
jge
ret
cmp
mov
lods
cmp
sbb
les
clc
lret
movsl
push
dec
mov
into
mov
dec
inc
jmp
and
mov
cmp
ja
xor
fbstp
sub
sub
lcall
push
push
sarb
mov
in
sbb
dec
in
mov
repnz
test
dec
outsl
push
xor
sub
ficoms
push
out
jmp
std
rcrl
sub
inc
sbb
shlb
sbb
iret
add
sub
mov
mov
push
and
shrl
inc
dec
add
ss
mov
push
pop
int3
mov
sarl
mov
fistpll
add
xchg
fidivrl
mov
stc
out
dec
ret
popf
and
mov
rolb
jbe
sub
popa
mov
dec
xor
cmp
cmp
mov
cmpsb
mov
sbb
cmp
icebp
or
mov
mov
das
mov
shr
and
roll
rorb
cmpsb
imull
adc
iret
popa
sbb
xchg
mov
add
pop
stc
aam
push
pop
sub
cmp
dec
mov
mov
jge
mov
cmp
mov
lods
out
pusha
pop
cmc
sar
sbb
daa
loopne
jae
lods
inc
iret
orl
push
add
rcl
cmp
scas
pop
xchg
je
add
pop
mov
aad
mov
subl
inc
dec
inc
or
push
mull
insb
test
in
sbbb
xor
ljmp
push
adc
mov
pop
pop
stos
lcall
push
addr16
push
cwtl
cmp
mov
dec
pop
popa
sub
xchg
imull
testb
xor
and
in
in
jb
rorl
ret
out
mov
jecxz
mov
xor
or
jl
test
fwait
cmp
push
sbb
push
push
fidivrl
sarb
mov
rcrb
rorl
mov
xor
cmpsl
outsb
dec
xlat
cli
stos
add
fcmovbe
push
lea
lock
scas
mov
std
mov
arpl
xchg
repz
stc
loope
fidivl
in
cmp
ret
daa
out
add
in
cmp
pop
fwait
daa
mov
cmpsb
xchg
notl
outsb
and
shl
pop
call
out
lods
fistpll
jne
and
push
test
rol
stos
pop
ljmp
sub
jne
add
shlb
fistpll
sub
dec
les
popf
loopne
jmp
jge
mov
xchg
pop
sbb
pop
xchg
xchg
push
iret
fdivs
adc
xchg
jecxz
or
xlat
rcrb
std
mov
sub
clc
movsl
mov
adc
add
negb
repnz
and
idivl
or
fdivp
mov
loop
fiadds
loopnew
aad
pop
arpl
pop
imul
aas
in
jne
mov
jns
and
sub
sub
dec
ret
cmpsb
out
pop
mov
jno
dec
movsb
inc
mov
xor
ss
rorl
lret
fildl
loop
adc
fsubp
stos
cltd
inc
mulb
fs
and
cmc
pop
loop
push
loope
adc
jg
mul
out
in
inc
insl
mov
cmp
lods
xchg
pop
adc
dec
cmpsl
fcmovb
bound
cmp
les
sti
mov
icebp
and
sbbl
sub
std
push
inc
mov
daa
lea
push
ljmp
scas
fsts
shll
mov
pop
jb
bnd
cli
test
lcall
add
dec
daa
ljmp
add
mov
cmp
cmp
or
cmp
arpl
mov
movsl
push
xchg
mov
pop
stos
rcl
imul
hlt
mov
aad
lret
pop
lea
testb
divb
and
es
mov
push
cs
or
ljmp
movsl
ja
ss
fisttps
or
push
and
mov
pop
bound
xor
adc
xchg
push
nop
push
cltd
in
sub
xchg
pop
inc
ds
rcl
in
dec
jmp
loope
icebp
adc
and
push
xchg
mov
push
xor
pop
dec
out
cmpsb
cmp
addr16
arpl
movl
testl
pop
fnstenv
rolb
aam
mov
xchg
out
sbb
mov
gs
push
jae
mov
mov
dec
mov
cmp
or
shlb
xchg
add
xchg
inc
hlt
scas
xchg
in
pop
cmp
xchg
out
inc
sub
andb
push
adc
push
iret
xlat
xchg
in
data16
pushf
xchg
inc
mov
pop
les
fcomi
xor
inc
sbbb
loop
popa
sarb
fldl
movb
lret
sub
dec
and
sbb
lcall
repz
mov
dec
mov
cmpb
push
cmpsb
sahf
adc
jnp
mov
mov
mov
cmp
cmpsb
adcb
and
js
inc
mov
mov
jbe
adc
cmp
fisttpll
pop
das
imul
shll
addl
jbe
and
push
loop
push
sub
and
or
push
scas
cmp
cmpsb
addr16
mov
xor
inc
test
xchg
push
pop
cmc
mov
push
scas
shll
scas
in
pop
jmp
xchg
inc
sti
cmp
aad
lods
fildll
mov
test
mov
das
lea
or
inc
mov
pop
fsub
stos
ljmp
push
or
sbb
gs
cwtl
test
inc
jne
push
sub
repz
fs
repz
les
adc
out
hlt
pop
lcall
loop
jae
out
xchg
daa
adc
cmp
das
inc
movsl
repz
pop
into
mov
adcl
popa
push
cltd
scas
mov
pusha
fisubrs
mov
in
stc
loope
xlat
xor
es
stc
das
insl
leave
test
pop
das
jne
or
gs
in
out
arpl
adc
mov
inc
jbe
adc
outsb
testl
or
push
lret
inc
cmpsl
lcall
test
cmpsl
fwait
adc
fdivrp
jmp
cwtl
hlt
pop
cmp
sub
mov
jb
pop
mov
push
repnz
cltd
jecxz
sbb
xchg
sbb
es
add
jnp
fs
and
enter
ljmp
push
inc
test
or
lods
dec
pop
mov
pop
mov
nop
icebp
std
adc
inc
xchg
gs
dec
inc
popf
mov
push
popa
aas
inc
ja
and
rol
mov
imul
sbb
xchg
push
mov
clc
cli
sahf
add
std
lret
xor
dec
push
xchg
push
jno
out
jne
inc
test
push
mov
popf
mov
neg
fisubs
test
jbe
daa
and
pop
imul
mov
repz
pop
dec
jge
or
and
adc
adc
inc
pop
mov
mov
sahf
addr16
inc
inc
sar
leave
iret
fs
and
out
addl
xchg
repz
jne
add
xchg
mov
mov
lea
adc
mov
adc
adc
or
lea
imul
ret
lods
and
jmp
sti
roll
dec
push
les
or
dec
inc
ret
xor
andb
add
inc
mov
sbb
stos
fnstcw
loope
add
or
movsb
push
movsl
push
jecxz
lods
in
les
jp
sar
pop
push
mov
scas
jmp
fcmovnbe
fidivrs
lea
xor
jmp
sbbl
movsl
movlhps
jne
repnz
sbb
outsl
adc
test
stos
push
adc
cs
movsb
pusha
call
shrl
mov
inc
adc
test
push
addr16
rcll
les
movsl
dec
es
or
jl
mov
loope
jge
es
scas
cmovbe
sbb
fs
mov
or
pop
mov
mov
inc
and
push
push
sbb
les
call
in
cmp
outsl
mov
lds
lods
fucom
and
or
fistps
bnd
in
or
repz
dec
movsl
jg
jbe
xchg
add
aaa
js
sub
int
cwtl
jne
xchg
movsb
mov
add
mov
loop
les
cmpsl
mov
lods
sbb
pop
cmp
daa
mov
xor
fsubl
sbb
xchg
dec
sbb
xor
fcomip
mov
out
loopne
cmpsl
pop
or
sub
nop
insl
xchg
addr16
fucom
sar
xchg
xor
cmp
mov
add
mov
cwtl
test
mov
fistps
sarb
xchg
and
mov
enter
mov
in
jp
adc
insb
mov
jns
or
mov
out
cmc
push
pop
iret
repnz
ds
pop
cmp
cmpsl
jp
sub
mov
lods
ret
neg
out
aad
daa
cmp
xchg
inc
scas
mov
aaa
sbb
adc
cs
xlat
jns
rorb
mov
mov
xor
dec
mov
popa
sub
lret
mov
das
lea
out
mov
and
fs
push
in
mov
lret
repnz
adc
out
lods
inc
add
or
jl
test
pop
mov
daa
ja
push
xchg
imul
ds
push
movsb
or
pop
inc
fists
ret
out
nop
mov
add
push
inc
mov
mov
gs
pop
mov
ds
jne
push
add
arpl
xor
fistps
dec
xor
sbb
pop
ja
es
or
gs
adc
rcrl
std
js
fistps
fistpll
inc
inc
jp
pop
jmp
sbb
loop
fidivrs
movsb
sbb
test
sbb
js
subl
adc
outsb
jne
xchg
popa
or
dec
mov
push
aaa
jge
xor
leave
xor
cmpsb
and
inc
mov
ficoms
aam
das
jns
dec
cmp
xor
movsb
pop
insl
push
xchg
dec
aaa
or
cmp
fbld
aam
aas
and
dec
sarb
movsl
out
test
xchg
mov
sub
es
xor
add
mov
jl
xchg
xor
fisubrl
mov
movd
pop
and
call
sub
repnz
leave
adc
push
jl
jle
pop
fsubrs
xchg
mov
push
outsl
xchg
lahf
mov
int3
lods
imulb
xor
push
sub
pop
ja
dec
mov
adc
and
ss
xchg
inc
add
fnstcw
mov
cmpsb
and
icebp
outsl
test
jle
ss
xor
jg
pushw
cli
in
xor
sbb
jmp
or
xchg
mov
frstor
sub
cmp
sub
dec
push
mov
dec
xor
and
lock
test
add
icebp
out
xor
or
push
pop
add
pop
add
fisubs
pusha
test
cmpl
push
jo
out
aad
and
mov
mov
lea
and
push
sarl
arpl
out
xchg
jle
adc
in
jecxz
add
std
mov
nop
inc
cmp
cmpsb
push
xchg
xchg
mov
fstps
xchg
test
int
xchg
dec
ret
mov
repz
pop
adc
lock
ja
subl
aam
jl
xor
xlat
aad
sub
inc
ds
add
mov
sub
pop
mov
dec
aaa
sub
jns
xor
mov
inc
mov
adc
mov
and
in
push
in
pop
sahf
arpl
ljmp
aas
mov
insb
lret
jo
pop
bnd
leave
jbe
cmp
pusha
enter
dec
push
inc
jno
push
add
cmp
jmp
mov
ljmp
push
sbb
xor
adc
cli
mov
mov
addr16
xchg
and
adc
repz
mov
movb
insl
clc
ja
loope
and
repnz
shrl
xchg
inc
daa
mov
out
lods
xchg
int3
dec
movsl
jge
iret
xchg
and
in
cmpsl
movsl
jecxz
scas
lods
or
test
jle
in
cmpsb
addr16
dec
lds
xchg
sub
pop
in
cmpsl
out
adc
cmc
shrb
loope
xchg
movl
ljmp
inc
mov
mov
scas
fwait
stos
mov
negb
jge
jnp
sbb
or
in
jae
imul
pop
fs
pop
sbb
pop
shr
add
or
push
insl
enter
jg
mov
addr16
fidivrs
inc
cwtl
cmp
sub
clc
cmpsl
pop
gs
pusha
dec
mov
mov
xor
or
fcoms
outsl
cmp
repz
push
rorb
sahf
sub
cmpsl
loope
fdiv
inc
or
cmc
out
xor
shl
pop
xor
pop
and
inc
loopne
xorl
lcall
inc
ljmp
push
mov
test
dec
shrb
jne
outsl
rclb
sub
mov
jns
fistpll
es
mov
jcxz
fmuls
js
ret
and
movsb
aad
fisubs
loopne
arpl
mov
dec
inc
dec
add
insl
and
es
fiaddl
sbb
lock
lds
or
outsl
adc
call
adc
fwait
out
sub
mov
sub
cld
mov
stos
cmp
mov
or
cld
xor
dec
xor
lock
call
add
out
ret
jge
adc
test
jmp
inc
test
dec
inc
mov
pop
roll
pop
insl
and
lds
movsb
pop
rorl
cmp
leave
push
cmc
sub
pop
jnp
scas
bnd
or
jge
mov
xchg
insb
dec
cmpsb
push
and
lcall
mov
mov
cmpsl
in
dec
mov
mov
mov
pxor
jmp
mov
sbb
addr16
lds
test
mov
xchg
es
fisubs
cmpsl
dec
rolb
repz
add
pop
jae
mov
add
mov
iretw
ds
jg
outsl
outsb
outsb
addr16
out
pop
outsl
mov
push
mov
sbb
pop
fsubrl
aaa
in
or
sub
mov
xchg
push
lock
xchg
or
call
or
xchg
adc
jg
mov
pop
in
xlat
ds
out
outsb
push
push
cmpsl
sbb
ljmp
jne
add
out
mov
jo
adc
movsl
push
lock
repz
mov
repnz
jg
pop
jae
fs
jg
jg
test
mov
cld
lds
inc
cmc
push
or
insl
mov
testb
xchg
fxch
in
faddp
push
or
mov
jl
repnz
mov
call
adc
cwtl
dec
arpl
lahf
fsubrs
ja
insl
cmpsb
xor
mov
mov
sbb
addr16
mov
test
lahf
mov
fldenv
cwtl
test
adc
sbb
sub
lret
div
gs
adc
aas
lods
rcrb
cs
mov
inc
pop
mov
dec
push
scas
cmpsb
test
jp
insl
dec
adc
es
sub
mov
cmp
push
dec
test
aad
or
xor
mov
imul
lds
out
orl
pop
sbb
clc
push
loopne
out
test
sbb
fiaddl
ret
outsl
fists
call
ja
jg
lcall
ret
dec
push
pop
inc
pop
push
push
mov
push
lods
mov
xchg
adc
push
add
fs
ret
popf
and
hlt
ficoms
add
lds
in
push
mov
scas
mov
cmp
mov
jg
fs
inc
jb
outsb
push
push
das
addr16
sbb
rorl
and
push
loopne
mov
mov
xchg
jnp
mov
aas
vphaddudq
xchg
jg
pushf
repnz
or
jne
pushf
and
arpl
mov
dec
xlat
cli
and
testb
xor
out
inc
cwtl
in
inc
insl
mov
adc
insb
fsub
ja
mov
xlat
and
sbb
aaa
cmc
mov
inc
insb
dec
or
iret
push
inc
out
adc
lods
inc
jnp
out
cmp
mov
mov
ds
addr16
mov
aam
xlat
iret
jne
cmpsb
test
inc
mov
in
rolb
fistpll
popa
faddp
movsb
dec
insl
add
dec
push
divb
jbe
addr16
cmp
pop
jg
cmp
mov
sub
jbe
js
xor
std
test
xorl
cmpl
mov
pop
cmp
aas
pushf
push
pop
push
add
jbe
mov
adc
bswap
add
mov
lea
xor
mov
xchg
lcall
jns
int
cwtl
sbb
fisttpl
aad
mov
sub
insb
push
sbb
or
mov
arpl
pop
ljmp
in
dec
jmp
pop
shl
test
jp
test
rclb
or
inc
sahf
loopne
pop
loop
xchg
inc
mov
insl
xchg
lds
cmp
movsl
xor
pop
es
push
inc
cmp
cmp
negl
popa
jae
fwait
stos
mov
dec
jns
dec
insl
adc
hlt
js
pop
xorl
lea
outsl
adc
xlat
sub
aam
push
inc
cmc
popf
mov
pop
call
fnsave
in
sti
aam
cmpsl
adc
mov
test
sub
add
dec
jnp
adc
inc
and
sbb
lret
stc
mov
inc
int3
lods
mov
imul
mov
jmp
nop
les
mov
mov
or
xchg
pusha
gs
or
stos
gs
roll
fs
mov
sbb
add
sbb
dec
sub
sub
fildll
mov
inc
and
loopne
inc
sub
add
aaa
sbb
dec
inc
jmp
rorl
xchg
fs
add
add
mov
arpl
fcomip
in
pop
movl
mov
xor
ss
mov
insl
sbb
pop
ja
mov
fwait
out
loopne
push
inc
lods
aam
fucomi
mov
push
and
cmp
addl
mov
mov
nop
sub
mov
jb
sti
cs
dec
daa
repnz
test
aaa
sub
lds
sub
lcall
mull
loop
repnz
jp
out
inc
mov
cld
out
sarb
ja
jb
fsub
jp
adc
popl
fldcw
add
stos
outsb
inc
mov
and
lcall
mov
push
gs
add
popf
ds
jecxz
call
lods
stc
pop
push
push
mov
daa
orb
jg
push
data16
sbb
jne
add
nop
imul
and
loope
adc
outsl
lcall
stos
pop
cmp
adc
inc
jne
ja
xor
adcb
lahf
push
xchg
mull
cmpsl
mov
gs
pusha
out
ffreep
xchg
aad
mov
dec
cmp
xchg
push
xlat
shrb
push
push
scas
sub
movsl
cmp
jmp
or
fucomi
sbb
jne
iret
sar
fucomp
sbb
movsb
ja
xor
lea
sbb
nop
scas
add
fstp
lret
mov
imul
loope
pop
xor
pop
lahf
pushl
loop
mov
jl
xor
in
aas
jl
sub
shll
call
inc
lds
push
popa
mov
fmull
mov
in
movsl
push
test
xor
daa
bound
mov
mov
mov
ficomps
mov
push
sub
mov
das
fwait
or
or
aas
mov
lret
repz
mov
daa
fld
jmp
aaa
inc
out
jecxz
pop
sub
ret
rolb
ja
nop
lock
cwtl
adc
xor
jae
inc
pop
fsubl
addr16
notl
mov
dec
dec
xor
leave
xlat
inc
adc
fs
fwait
aad
add
push
into
pcmpeqb
ja
aaa
mov
cs
ret
xchg
sbb
push
in
cld
jecxz
loop
aaa
clc
push
cld
pop
rorl
mov
fistpl
aaa
inc
jne
fsubs
movsb
adc
xor
xchg
cmp
dec
xorl
out
mov
subb
ss
clc
jg
int
ret
div
mov
jmp
cmpb
lahf
push
sub
push
adc
mov
and
clc
sub
int
sub
test
hlt
out
out
pop
dec
jge
ret
repnz
mov
mov
mov
cmpsl
sub
fs
fistpll
jg,pt
fldenv
negb
push
not
xor
xor
arpl
push
lea
mov
fucomp
in
pop
mov
and
shlb
dec
cmp
cmp
cmp
in
sbb
mov
lock
lea
fidivrl
dec
add
addr16
mov
dec
and
pop
in
and
and
mov
imull
xor
cmc
fisttps
aam
pmuludq
cmp
cli
repnz
fs
dec
sarb
fadd
fcmovne
add
add
loope
sbb
xor
mov
sbb
pop
cs
fcomi
jmp
dec
mov
sub
sbb
in
fs
mov
lahf
adc
rolb
ds
mul
jg
outsl
mov
insl
push
xchg
cmp
jl
pop
sarl
scas
movsl
pop
rcl
insl
frstor
outsl
lock
push
aaa
rolb
jno
add
add
jge
jge
out
loope
call
vpsraw
xor
cmp
pop
je
sub
jle
push
in
fs
mov
mov
dec
inc
hlt
inc
push
cmc
adc
jae
mov
test
mov
adcb
push
or
dec
loope
js
movb
add
or
idiv
adc
pop
fs
stc
sbb
je
int
outsl
push
xchg
add
mov
mov
lea
lcall
out
test
mov
push
jno
test
adc
mov
and
inc
icebp
jb
dec
js
sub
inc
jns
xchg
lds
mov
jmp
repz
add
sbb
lea
mov
cli
pop
shll
add
pop
cs
sarb
cmpl
cmpsb
mov
movsb
hlt
je
sbb
xchg
jg
popf
imul
mov
push
outsl
fwait
roll
les
push
jl
lea
push
or
add
mov
cmp
inc
hlt
sub
inc
push
fmuls
scas
leave
pop
adc
adc
adc
test
cmpsl
popa
out
xchg
inc
outsb
jne
add
sub
jge
dec
stos
ret
pop
mov
fwait
inc
push
lea
fidivrs
out
inc
clc
in
negl
stos
icebp
inc
add
jne
leave
out
or
cmp
pop
cwtl
adc
and
js
cmp
out
cmp
cs
in
rolb
sbb
mov
lds
cs
jp
nop
adc
mov
iret
and
adc
pop
push
mov
inc
int3
out
adc
ret
mov
out
imul
xor
add
inc
xchg
out
movsb
rolb
dec
or
incb
test
imull
inc
jo
dec
stc
or
imull
jo
adc
leave
out
andb
and
lods
or
dec
outsl
movsl
xchg
inc
fwait
and
mov
enter
bound
movsl
sub
mov
stc
and
shlb
std
lcall
cli
addb
out
xor
out
pop
and
sarb
xchg
fimuls
add
xchg
mov
addr16
jmp
xchg
ja
pop
bswap
loopne
mov
jnp
aam
lds
adc
jmp
imull
pop
popf
testl
insl
hlt
aas
inc
fnstenv
not
xlat
xchg
jmp
out
addb
and
imul
xor
sbb
pop
or
rcr
divl
xchg
inc
ja
push
jmp
xor
inc
fwait
gs
jp
out
push
jle
pop
lock
test
in
decl
enter
mov
in
fistpl
pop
sub
loop
jne
jg
jne
gs
inc
dec
lock
rcrb
add
add
mov
hlt
jl
imull
scas
or
in
mov
inc
add
orl
inc
mov
xor
and
mov
xlat
dec
sbb
dec
faddl
daa
xor
pop
adc
pop
sub
jmp
out
cltd
cld
stos
out
cmp
add
dec
gs
mov
or
out
test
jg
mov
addr16
push
stos
adc
lock
jae
mov
jle
adc
lea
movsb
jne
xchg
leave
lods
bound
sbb
sbb
add
xor
inc
ss
xor
ret
sarl
rolb
mov
sbb
add
adc
xor
sbb
iret
inc
fnstcw
test
dec
rcr
ds
sti
addr16
in
mov
and
mov
mov
int3
jno
push
pusha
negl
stos
add
cmp
test
insl
in
daa
jae
shlb
pop
inc
pop
and
in
sbb
jmp
lea
mov
addr16
out
lock
bound
add
inc
scas
shll
inc
leave
sti
inc
mov
icebp
xor
addl
negl
aam
iret
mov
movsb
imul
lock
push
scas
orl
add
icebp
xchg
push
fstpl
test
sub
sti
call
loopne
fiadds
ja
idiv
xchg
imul
faddp
sbb
daa
movsb
adc
fs
xchg
jp
out
andl
adc
pop
int
loop
adc
xor
xlat
cmpsl
fwait
sahf
cmpsb
inc
repz
decl
inc
or
and
and
cmpl
sub
insl
bound
lock
dec
mov
pop
mov
or
rcrl
popa
mov
fimull
lea
pop
sbb
shrb
mov
dec
cmpsl
xchg
and
in
mov
mov
inc
into
fwait
pop
jecxz
imul
cmpsl
scas
mov
inc
jecxz
fs
mov
es
adc
fildl
in
fcomps
lds
jb
addr16
ss
mov
xchg
or
sub
cmp
addb
bound
gs
dec
xlat
dec
mov
jge
add
mov
stos
mov
pop
shlb
test
and
xchg
movsb
scas
xchg
and
cmpsl
outsl
and
mov
xchg
hlt
xchg
lods
scas
or
loopne
pop
daa
add
bound
das
xor
in
in
xchg
lea
mov
test
mov
sbb
jle
xchg
movsb
push
sahf
sahf
rcl
jmp
scas
icebp
ljmp
sarl
xchg
jecxz
inc
mov
xor
or
cmp
fistpll
add
lret
jge
jne
lret
lods
aad
dec
fdivp
cmpsb
and
into
pop
mov
sub
sub
daa
jne
xor
cmc
jge
lods
lcall
repz
mov
mov
inc
pop
jecxz
or
pop
adc
sahf
add
xchg
mov
mov
std
xchg
inc
add
addb
xorb
test
lods
pusha
dec
aad
xchg
popf
mov
into
mov
inc
mov
aad
adc
lock
add
pusha
movl
out
icebp
out
cs
cmp
sahf
dec
push
je
inc
and
inc
stc
dec
icebp
shlb
add
mov
int3
xchg
stos
mov
jmp
test
clc
ss
les
repz
je
cmc
repnz
jle
inc
sbb
mov
jne
cmp
sbb
aaa
and
or
xor
mov
mov
xchg
jbe
mov
dec
adc
sarl
out
in
inc
test
ficompl
mov
es
ret
roll
add
pushf
pop
cmpsl
cmp
inc
clc
test
jno
fstps
sbb
or
jg
sti
in
cwtl
jge
outsb
setnp
cmpsl
or
out
ljmp
fidivs
sub
insb
mov
in
fildl
shld
sbb
testl
test
lock
lock
cmp
and
jmp
fs
pop
jle
test
dec
xor
cmp
or
pand
stos
loop
lods
xchg
jmp
lcall
movsl
sahf
add
shlb
popa
jbe
lahf
stos
ljmp
das
mov
pop
mov
divb
and
rolb
pusha
and
out
mov
subl
dec
push
add
or
jb
out
and
iret
cltd
fwait
out
cmc
jns
jmp
pop
lea
arpl
out
mov
push
add
movsl
testl
icebp
and
inc
out
int
outsl
pusha
inc
cmp
and
insb
ss
mov
and
sarl
push
mov
adc
and
lods
nop
fstpl
pop
stos
into
xchg
cmp
or
push
jp
xchg
movsb
rorb
shl
push
movsl
xchg
ret
sahf
cmpsb
cmp
shlb
dec
sahf
inc
pop
gs
dec
gs
dec
shr
data16
push
inc
lods
mov
sub
cltd
sub
ja
and
fstpl
aam
mov
xchg
or
out
popa
dec
adc
out
cmpl
push
lret
cmove
push
fidivrl
mov
lods
and
ret
mov
xor
jne
inc
ljmp
fstl
or
pop
jp
push
or
mov
mov
cltd
inc
out
inc
ret
insl
test
jne
cmp
push
lds
xchg
cmp
pop
pop
out
sbb
adc
cmp
aad
call
jbe
es
jge
and
add
jmp
dec
call
mov
fdivrl
mov
push
arpl
pop
jg
lds
sub
sbb
das
sahf
ret
movsb
mov
pop
cmp
fcomps
es
out
dec
mov
push
testb
arpl
pop
jg
push
mov
pusha
mov
push
sahf
idivb
popa
repnz
movsl
dec
jg
jge
jp
into
scas
inc
push
mov
rclb
jae
adc
mov
add
dec
push
pop
fiadds
add
insb
mov
loopne
mov
push
pop
cmpsl
xchg
xchg
mov
decl
push
mov
test
and
jne
push
pushl
adc
mov
movl
jmp
cmpsb
sbb
or
orl
dec
mov
testl
mov
pop
andb
jge
xchg
add
or
push
mov
fistl
pop
mov
cmpsb
loope
jmp
shl
jae
shr
adc
and
leave
in
fimuls
outsl
xchg
sbb
mov
in
lds
repz
jns
jo
cs
pop
jg
mov
cmp
fdivp
cwtd
lds
and
popa
loop
in
sub
addb
es
jbe
fs
pushf
xchg
pop
aaa
cmp
faddl
jbe
inc
jle
mov
push
cs
dec
cli
jg
lds
lret
or
sbb
sti
out
jo
outsl
pop
xlat
ret
mov
mov
sub
push
inc
daa
int3
stc
test
fbld
testl
push
xlat
in
fwait
cmpsl
push
fmul
dec
addr16
pop
mov
pusha
test
push
out
insl
test
jnp
jno
mov
rorl
sbb
cld
lods
aas
sbb
xor
dec
les
push
popa
icebp
push
adcl
paddusw
pop
mov
push
rcrb
loope
pop
scas
sahf
mov
jp
lods
daa
addr16
lahf
jb
mov
or
or
inc
sbb
in
push
je
aam
lods
dec
adc
jmp
push
push
mov
push
mov
mov
mov
stc
add
fdecstp
add
addr16
test
xor
js
dec
or
lds
leave
cmp
adc
xchg
aas
sbb
imul
or
lock
cmpsl
stos
add
fsts
ret
mov
or
sub
into
xchg
loopne
pop
stos
clc
inc
out
sbb
adc
call
xchg
adc
push
xchg
out
cmpsl
inc
pop
stos
iret
xor
mov
paddq
push
jle
push
cmpsl
mov
and
jle
cltd
lcall
jbe
ja
aas
fists
cmpsb
fldt
dec
lret
out
stos
push
stos
jns
mov
jnp
shll
enter
jne
filds
sbb
sbb
push
mov
addr16
insl
mov
bound
or
pop
jle
mov
ds
xor
sub
adc
iret
pop
pop
mov
cmp
imul
andps
cmp
clc
dec
push
addr16
xchg
popa
xchg
or
add
insl
cs
add
xor
sbbl
jge
mov
or
jle
shll
int3
mov
inc
mov
in
jge
jbe
mov
mov
or
loopne
mov
mov
dec
dec
test
mov
aad
daa
xchg
push
mov
xchg
aam
data16
push
aas
inc
jnp
fiadds
pop
outsb
xor
mov
push
loope
push
sahf
push
xchg
xor
xchg
fwait
bound
dec
inc
mov
test
ss
mov
xchg
mov
loope
bnd
std
sub
fs
mov
dec
jmp
lods
inc
sub
rcr
data16
sbb
dec
fistpl
xlat
sub
adc
jae
cmpsb
pop
adc
mov
in
lods
adc
and
shl
lock
es
into
outsl
stos
and
mov
in
pop
cmpsb
rolb
pop
incb
es
inc
loopne
outsl
ficompl
mov
das
pop
jae
add
sub
mov
jne
sarl
pop
std
push
xchg
lods
mov
arpl
arpl
test
cli
call
jns
or
push
lods
pop
sbb
adc
sbb
sub
push
in
es
pushf
les
test
dec
jno
dec
jne
test
sbb
iret
sbb
xchg
mov
scas
daa
jge
ret
sub
rep
outsl
aad
ja
push
test
jmp
fisubrs
rorb
adc
cmc
scas
pop
pop
mov
int3
inc
adc
ret
clc
ss
mov
dec
mov
cmp
mull
sub
arpl
lods
push
mov
out
sub
mov
jge
js
dec
fs
ss
ss
and
aaa
jns
lret
xchg
push
es
std
push
xorps
pushl
cmp
pop
sbb
jmp
xchg
insl
mov
aam
lea
stc
mov
jge
nop
lods
sub
jmp
pop
shlb
cmpsl
test
fmul
dec
shlb
jne
ljmp
jmp
int
push
cmp
insl
jne
in
rolb
sbb
adc
and
mov
xchg
fidivrl
xchg
xchg
push
dec
clc
jecxz
nop
mov
stos
imul
mov
stos
rcrl
push
nop
mov
loopne
adc
mov
out
into
into
dec
xchg
sub
cmpsl
sbb
gs
sar
or
inc
mov
sti
fisubrs
outsl
fs
jle
rorb
scas
push
clc
adc
pushf
hlt
or
or
jae
movsl
jns
xchg
inc
dec
or
shlb
xchg
pop
cmpsl
dec
jge
cmpsb
mov
dec
jo
push
dec
aas
mov
in
push
in
push
lds
mull
psrlw
test
push
fucomi
push
je
sbb
sbb
inc
and
lock
scas
sarl
lea
loopne
ret
nop
inc
pop
sti
std
rclb
xor
ficompl
dec
lds
and
mov
inc
sarb
or
ficoml
ljmp
js
mov
lret
aam
pop
and
dec
xor
fwait
lret
repz
jecxz
fcoms
lahf
jecxz
shl
jle
or
dec
cli
dec
insl
cmp
fldl
fistpl
mov
dec
shlb
push
ja
mov
pop
jns
fs
jb
jp
jp
ss
or
js
fwait
jb
xor
add
push
push
xor
outsb
fwait
mov
scas
stc
add
mov
cmpsl
shrb
adc
mov
mov
fdivl
jns
lods
xor
jbe
ja
dec
imul
mov
mov
ljmp
out
fmul
inc
mov
fsts
mov
sbb
out
scas
addr16
in
jge
js
adc
insb
out
xchg
inc
test
test
data16
sub
pop
fs
ret
pop
xchg
xchg
scas
mov
cmp
cmpb
inc
cmpsl
out
jge
pop
add
jge
xchg
push
push
xchg
or
cmpsb
out
aaa
arpl
cmpsb
das
ja
xlat
push
ret
into
shrl
addr16
cmp
mov
mov
push
mov
jge
mov
mov
push
mov
mov
mov
dec
ret
imul
mov
inc
stos
in
inc
loopne
add
repnz
cmp
mov
sbb
sbb
scas
push
inc
loope
mov
mov
jne
ds
mov
add
or
dec
pop
sub
rol
ja
aad
push
divl
pop
and
xchg
xlat
dec
mov
dec
mov
jmp
mov
sub
mov
pushl
pop
sub
mov
inc
adc
sub
aas
inc
dec
inc
mov
cmpsl
inc
dec
std
into
xchg
inc
movsb
mul
cmpsl
lds
push
in
addr16
cli
das
xchg
pop
jge
int
xchg
into
mov
not
pop
notb
out
inc
das
daa
mov
cmp
dec
mov
movsl
ds
mov
dec
rcrb
xlat
loopne
xchg
out
shrl
mov
jnp
iret
dec
sub
inc
dec
addl
adc
xchg
pop
ret
pop
stc
daa
loopne
xlat
jge
and
adc
push
jle
pop
cmp
jle
inc
fdivs
fnstsw
pop
push
add
fnstcw
ret
dec
pop
push
xor
mov
mov
pop
add
fldl
stos
xchg
push
bound
mov
ja
pop
mov
aaa
jp
icebp
xlat
pop
push
int
push
pop
incb
xchg
sub
addr16
jae
rcrb
imul
and
and
jno
test
jae
mov
into
push
cmp
ret
mov
rclb
xchg
imul
mov
rcrb
pop
inc
add
rol
outsb
jno
pop
cmpb
jp
in
or
js
xchg
push
aaa
add
sbb
mov
mov
clc
out
fistpll
repz
loope
test
fadds
pop
popl
ror
je
adc
mov
loope
jo
addr16
test
mov
lds
div
pop
out
int
mov
pop
out
ss
mov
js
mov
mov
insl
push
dec
rcl
mov
hlt
mov
xlat
lods
mov
outsl
mov
out
cltd
pop
cld
adc
test
paddd
out
pop
xchg
jno
lcall
test
gs
cmp
sar
lcall
xchg
or
les
dec
cli
pop
jnp
testb
or
mov
pop
mov
mov
jo
or
stos
push
popf
mov
cmp
sub
inc
jb
test
adc
cmp
inc
pop
push
sub
shr
mov
push
inc
inc
das
in
sub
popf
sahf
mov
sbb
lret
mov
shrb
jb
psubb
add
jmp
sbb
pop
popf
add
jmp
jp
mov
test
inc
xchg
jg
test
push
test
hlt
or
stos
outsl
dec
push
loop
dec
std
leave
fs
pop
sbb
cs
cmpsb
data16
outsl
mov
in
xor
add
test
popa
mov
xchg
adc
subl
js
testl
mov
inc
ret
and
mov
iret
les
stc
jo
add
add
jae
in
test
in
pop
inc
cmpsl
xchg
xchg
xlat
fucomip
insb
and
subb
mov
mov
in
test
pop
cmc
inc
pop
sbb
sbb
lock
int3
out
ret
dec
lret
out
dec
and
les
add
inc
mov
xorl
shlb
loopne
and
out
fnstcw
pop
gs
cmpps
ds
jge
lcall
inc
fistps
cmp
mov
pop
pop
pop
jge
pusha
jne
or
mov
xchg
es
into
out
pusha
loop
daa
add
cmp
mov
push
mov
out
and
scas
sub
pop
movsl
fwait
roll
inc
xor
or
lods
and
into
lds
inc
sahf
xlat
cmpsl
cmp
dec
mov
pop
ja
pop
xor
add
fwait
jge
sbb
in
adc
jae
push
fdivp
lahf
xchg
pop
cmc
push
mov
mov
or
fld
mov
subl
cmc
xchg
fisttpl
pop
test
test
and
mov
scas
ror
lods
adc
add
pop
or
outsl
jmp
xor
xchg
out
adc
sub
inc
cmpsb
mov
testb
xchg
daa
push
mov
shr
jg
movsl
inc
dec
fs
push
rcll
xor
cmp
xor
jmp
faddl
mov
push
int3
xor
adc
lea
nop
incb
addr16
xor
pusha
and
mov
sti
mov
jae
mov
and
fistpll
or
cld
xchg
insl
xor
mov
lds
outsl
dec
inc
adc
mov
pop
mov
leave
test
pop
cmp
lahf
push
push
jle
cmp
ja
or
sbb
outsl
fs
sahf
dec
imul
out
dec
jns,pn
sub
in
cmpsl
adc
jae
pop
and
inc
cltd
mov
push
push
inc
into
sub
ja
xor
mov
jecxz
cmp
outsb
frstor
mov
add
int
jne
xchg
mov
fstps
das
out
rclb
fsubrs
aam
dec
arpl
loop
insl
out
cmpsl
pop
sub
mov
add
shlb
rolb
mov
mov
rcrl
ja
sarb
mov
rcll
in
stos
lcall
fisttps
ret
daa
daa
dec
push
rcrb
fwait
scas
push
sub
dec
gs
mov
cmp
push
pusha
scas
repz
outsl
mov
push
mov
xchg
jne
imul
fwait
pop
lret
xchg
repnz
roll
gs
push
xchg
cmp
insb
sti
stos
lcall
stc
btc
lahf
push
cmpsl
xchg
lds
mov
outsb
add
xchg
inc
xchg
in
aas
popa
rclb
jno
das
movsl
inc
xor
pop
mov
pusha
js
mov
pop
jae
in
sub
test
stos
js
cmpsl
jbe
and
sub
data16
test
mov
repz
lods
movsb
test
subb
ljmp
pushf
clc
iret
ds
jae
xor
stos
push
add
sbb
fisttpll
mov
cmc
mov
mov
rcrb
in
repnz
jmp
inc
lods
add
or
outsb
fadds
mov
pop
into
not
inc
icebp
stc
sbb
jbe
add
sti
mov
xor
pop
scas
dec
rcll
and
cmp
sbb
arpl
add
lahf
mov
fstpt
loope
ss
shr
fistpll
mov
in
jp
lcall
cmc
add
outsb
cwtl
cli
outsl
push
loopne
push
sub
dec
pop
jnp
lea
xchg
mov
cli
push
xor
cmpl
inc
xchg
daa
mov
or
in
divl
sarb
add
es
pop
aam
push
xor
adc
nop
cmp
mov
mov
rcrb
fcompl
xchg
stc
mov
daa
fwait
out
fidivrl
cmovs
ret
push
push
lahf
fldenv
scas
mov
cld
pop
test
adc
add
sbb
dec
fwait
shl
jnp
leave
iret
xlat
mov
pop
int
sbb
or
mov
inc
lret
adc
outsl
sub
cmp
push
push
imul
or
and
cmp
out
daa
pop
xlat
pop
fnstenv
fstp
sti
jmp
mov
ljmp
shl
daa
in
xchg
xor
mov
xor
and
mov
mov
dec
imul
cmpsl
sbb
xchg
ret
scas
pop
inc
int
push
aaa
or
push
xor
push
es
xor
sarb
stc
add
pop
inc
je
cltd
xor
and
inc
adc
addr16
out
icebp
test
cs
mov
scas
fnsave
push
dec
xor
inc
pop
mov
adcl
cmpsl
sbb
scas
sarl
arpl
push
sub
popf
adc
rorb
sub
lds
adc
mov
ja
mov
movsl
stc
pop
add
add
imul
leave
jmp
mov
mov
push
ret
push
mov
and
sub
adc
mov
mov
mov
cmp
inc
testb
js
test
cld
add
push
mov
test
xlat
scas
js
mov
clc
sub
cs
xchg
and
push
gs
roll
es
add
ficomps
mov
rcll
int
leave
cmpsl
sti
clc
sbb
jmp
adc
xchg
inc
aaa
fisubrs
xchg
dec
cmc
outsl
fmuls
fmuls
out
iret
ret
insb
xchg
in
aad
and
mov
xchg
fadds
jns
cwtl
fwait
addl
aam
imul
mov
adc
mov
mov
aas
sub
pop
xchg
enter
dec
adc
popf
and
ja
sbb
xchg
outsl
cmp
inc
mov
shl
outsl
in
data16
frstor
test
add
mov
xchg
cmc
cs
add
test
xor
pop
mov
loop
adc
mov
ss
cwtl
push
aam
ja
push
push
fs
lahf
jp
mov
scas
daa
jmp
push
rcrl
das
xor
mov
or
push
aad
jle
cmpsb
shrl
orl
test
cmpsb
inc
cmpsl
mov
xchg
iret
sbb
cs
cmc
lret
cmp
icebp
mov
stos
dec
and
pop
imull
rcrl
test
sub
mov
stc
adc
lret
adc
mov
cwtl
rclb
daa
sub
dec
clc
rorl
mov
cltd
popa
add
pop
xor
sbb
or
sub
jmp
pop
push
add
sbb
movl
mov
jb
xchg
ret
aad
fcoms
mov
scas
xor
dec
ret
xchg
movsb
stos
imul
lahf
xlat
inc
mov
mov
jle
and
daa
mov
inc
and
repz
rorb
shl
data16
push
adc
repnz
sub
subl
fnstcw
xor
and
sti
or
out
mov
mov
dec
sbb
in
and
int3
rolb
fbld
adc
xchg
fisttps
rorb
push
imul
and
into
push
inc
lods
xor
pop
rclb
add
adc
jne
ja
cmpsb
add
fnsave
es
cmpsl
stos
in
fimuls
sbb
add
lcall
out
adc
pop
xchg
dec
xlat
rolb
mov
push
stc
clc
popf
pop
int3
mov
daa
out
out
movb
filds
into
push
push
inc
xlat
std
es
pop
in
push
addr16
movsl
xchg
or
push
jno,pn
dec
cmc
mulb
mov
add
out
adc
icebp
inc
les
fs
fidivrs
xchg
cld
cmpl
adc
xchg
daa
in
movsb
test
and
out
dec
pushf
pop
cli
inc
sub
addr16
ret
inc
mov
arpl
frstor
add
jle
mov
sub
test
out
ja
enter
popf
gs
ficomps
dec
jl
loop
sti
sub
adc
sub
bound
mov
mov
pusha
lds
mov
leave
fdivr
mov
xchg
stc
lahf
mov
scas
mov
sbb
sbb
inc
pop
and
addr16
jmp
xlat
adc
add
mov
pop
inc
or
lahf
jno
xchg
lods
divl
push
fldcw
pop
and
sub
add
cmpb
ja
outsb
lods
cmp
imul
or
dec
jge
leave
cmpsb
data16
aas
outsl
ret
lea
insl
shlb
sahf
lahf
out
test
out
push
je
scas
roll
ret
mov
mov
imul
jnp
xchg
add
jnp
fmuls
test
fst
test
outsl
in
cs
inc
insb
pop
mov
sub
sbb
scas
xchg
sarl
push
push
jnp
lods
and
mov
push
push
shl
lock
das
fucomp
lahf
gs
sbb
into
gs
gs
movl
das
outsb
xor
mov
data16
cs
mov
out
cmp
outsl
xlat
jmp
cmpsl
cmpsl
ljmp
ljmp
or
movsb
mov
inc
and
cmp
popf
in
and
jae
push
mov
bnd
lahf
jge
mov
mov
xor
mov
daa
jae
fdivr
push
cmp
pop
bound
outsl
add
scas
scas
leave
stc
inc
testl
cld
mov
xor
mov
xchg
ljmp
jb
push
push
pop
mov
mov
jmp
inc
add
xchg
fs
adc
sarb
fwait
mov
inc
scas
mov
out
sub
iret
pop
push
inc
lcall
ret
dec
jle
push
push
or
sbb
std
inc
jl
xchg
inc
aad
inc
xchg
inc
cmp
sar
jle
inc
pop
fists
pop
loopne
jae
mov
movsl
mov
push
stos
popa
lret
sbb
cld
popf
daa
in
mov
push
mov
sbb
jnp
out
cmp
mov
out
mov
out
pushf
mov
pop
push
adc
cmc
sub
adc
fimull
jo
out
nop
out
ucomiss
jecxz
add
loop
stc
out
xchg
inc
repz
adc
lds
pop
pop
xor
ja
in
je
notb
out
and
sbb
or
sbb
jne
or
cmpsb
jmp
mov
push
xchg
mov
out
rcll
ret
and
dec
test
push
rcll
ds
js
push
outsl
inc
add
push
jnp
fbld
lcall
or
je
mov
jmp
dec
in
loopne
dec
and
lds
push
add
mov
insl
test
adc
jbe
testb
shll
movsl
pop
in
scas
les
notl
mov
inc
cmp
div
xchg
pop
inc
xor
aas
lahf
jmp
xor
mov
xor
inc
es
mov
dec
mov
cmc
xchg
fwait
xchg
sub
mov
rcrb
inc
pop
dec
and
or
push
xchg
mov
pop
adc
inc
inc
in
repz
jge
jg
or
cmp
hlt
push
jne
lds
sub
leave
loopne
cwtl
andb
dec
mov
jne
xchg
in
inc
mov
insb
push
adc
rolb
ss
std
sbb
insb
sbb
lods
push
out
sbb
int
xor
test
cmp
adc
and
arpl
jecxz
loop
out
out
lahf
add
sbb
jge
jns
mov
fstpl
iret
cmc
push
pop
push
mov
dec
in
cmp
dec
neg
mov
push
das
cmc
push
cmpsb
jne
ja
xchg
das
lds
pop
test
push
into
jge
adc
push
sub
out
jbe
out
jmp
mov
push
stc
sarl
pop
add
mov
ja
bound
ja
ret
xor
ret
mov
ret
int
mov
out
nop
lea
jecxz
mull
cmp
or
ja
push
scas
dec
out
mov
mov
mov
xlat
mov
ret
dec
xlat
pop
push
push
mov
mov
add
clc
cmpb
cmp
out
xchg
imul
sbb
cmpsb
xchg
jno,pn
pop
fwait
std
bound
ficoml
xchg
mov
rcr
pop
into
fnstcw
xlat
sbb
dec
sbb
cmpsl
clc
push
push
mov
fisttpl
push
in
into
xchg
fwait
jg
ret
dec
lods
cmpsl
insb
cltd
jnp
in
or
lret
pop
and
dec
adc
cmpsl
lea
pop
imul
mov
push
push
xchg
adc
sub
das
dec
repz
xchg
mov
xchg
fucomp
jb
int
sub
leave
add
fisttps
xlat
popf
fs
push
imul
repnz
mov
push
ret
push
int
fldenv
jecxz
inc
in
xchg
dec
in
sahf
pop
into
sbb
into
cltd
test
jne
or
push
ljmp
mov
pop
mov
or
or
es
stos
mov
pop
es
cmc
nop
or
mov
cltd
fcomps
incl
or
ror
pop
scas
adcb
pop
inc
mov
mov
jl
mov
mov
push
adc
cmpl
test
lahf
mov
or
scas
jmp
ds
test
mov
inc
jmp
fstpl
mov
inc
scas
adc
test
inc
inc
mov
in
imul
or
xchg
jg
jge
cmc
test
and
stc
add
add
mov
data16
incb
inc
sti
vpaddb
cmpsl
shlb
lahf
subb
pop
and
cli
mov
ds
mov
xlat
mov
or
xchg
sbb
es
xor
iret
dec
sti
mov
inc
testl
movsb
repz
sbb
jge
sahf
ds
and
subb
and
xchg
fcmovne
push
mov
add
mov
mov
cmpsl
repnz
into
mov
mov
testl
fwait
into
mov
out
imul
and
push
int
out
in
fbld
addr16
jecxz
xchg
out
aad
rcr
jno
scas
cli
scas
jmp
add
cmpl
repnz
xchg
and
push
or
mov
fs
movsl
mov
inc
les
pop
in
xor
sub
jnp
test
movsb
adc
and
cmp
mov
outsb
mov
sbb
mov
cmp
test
pop
inc
jle
imul
jg
add
adc
lret
push
sbb
loop
lods
in
inc
jge
idiv
sbb
pop
outsl
in
adc
sbb
pop
fists
insl
inc
mov
out
orb
mov
xchg
mov
cltd
jle
jecxz
lds
dec
xor
sbb
mov
jmp
cltd
test
scas
scas
stc
call
movsb
sti
out
inc
mov
jecxz
fdivrs
das
pop
cmpsl
pop
decb
out
mov
or
and
cs
rorl
jne
fsubl
push
sti
movsl
lods
gs
jbe
test
lods
mov
mov
shlb
notl
inc
movsb
sbb
mov
les
xchg
cmc
mov
mov
pop
sahf
and
out
cmpsl
test
adc
or
hlt
push
xchg
adc
sahf
adc
pop
mov
mov
std
dec
lahf
arpl
xor
lock
shrb
popa
inc
jne
subl
mov
xor
pop
pushf
or
out
jge
inc
xor
push
lods
es
mov
leave
jo
mov
lcall
push
out
pop
test
rcrb
mov
js
in
movb
gs
je
dec
or
cmp
repnz
dec
test
stc
dec
stc
rclb
pop
inc
mov
push
xchg
test
or
insl
gs
shl
sub
gs
mov
gs
pop
mov
dec
xchg
cmpsb
push
adc
movsl
inc
out
cmp
je
cli
jmp
dec
rorl
fisttpll
xchg
mov
cs
lds
pop
lds
and
movsl
lret
movsb
jbe
movsl
and
sti
mov
stos
adc
mov
sub
js
fisubs
inc
mov
shlb
mov
inc
imul
mov
push
inc
lods
inc
xchg
popf
adc
ret
adc
mov
scas
add
subb
sarl
orb
jle
movsb
in
sti
clc
sbb
iret
cmpsl
mov
rcr
movsb
fisubrs
jle
jg
clc
testl
mov
test
mov
inc
jno
sub
push
and
push
js
in
fwait
mov
xlat
aad
mov
fldenv
scas
xchg
add
inc
dec
out
dec
stos
lea
jae
jge
sub
lods
lahf
xor
mov
add
fistpll
and
mov
mov
and
xchg
xchg
dec
cmc
lahf
mov
push
cmpsl
mov
push
fsubrs
cwtl
mov
int
test
push
inc
xchg
push
out
dec
loopne
jne
sarl
outsb
sbbl
idivb
xorb
into
out
and
rorb
mov
cmpsl
scas
adc
std
pop
jge
es
mov
mov
push
sub
sub
andb
xor
lea
push
pop
jmp
jp
aas
dec
loope
mov
lcall
out
or
cs
ja
aaa
cltd
sbb
outsl
scas
adc
adc
mov
dec
mov
shll
addr16
or
out
jge
lods
jecxz
xchg
push
arpl
cmp
jae
adc
and
sbb
add
pop
stc
ss
call
push
pop
stos
sbb
mov
push
icebp
mov
lods
pop
fcomp
mov
movsl
sub
cmp
shrl
sbb
sahf
xchg
pop
loop
jmp
sub
xchg
outsl
mov
idivl
fldl
cltd
xchg
jmp
ret
push
inc
fidivrl
addr16
push
addb
pop
into
das
mov
daa
out
out
mov
frstor
inc
sub
sbb
lea
jae
jbe
mov
icebp
std
pop
and
inc
stos
std
mov
sbb
fs
jns,pt
fcmovnb
mov
jnp
or
fstpl
inc
push
shlb
fldcw
inc
lahf
pop
shll
test
cs
jo
push
and
ljmp
nop
dec
outsl
xchg
addr16
mov
shl
push
movsb
dec
add
fdivs
scas
push
imul
jb
mov
movd
shlb
repz
cld
sahf
enter
std
mov
movsl
cmp
dec
jns
sbb
push
arpl
add
mov
insl
dec
jl
pop
mov
addb
push
sub
jecxz
in
out
pop
stos
test
sbb
inc
inc
xchg
testb
lods
dec
lcall
mov
pop
scas
insb
fisubs
mov
dec
rolb
ret
test
jg
testl
mov
mov
scas
or
push
in
and
mov
mov
fistl
imul
pop
sub
pop
inc
sbbl
into
roll
pop
cwtl
movsb
xchg
flds
ret
push
mov
pop
test
xchg
leave
push
aad
add
add
movsl
out
in
cmpb
dec
mov
test
inc
mov
out
sub
inc
fmull
and
mov
pop
out
sub
mov
insl
in
sub
addr16
mov
mov
mov
push
mov
repz
pop
shr
cmpsl
repz
test
cmp
pop
ret
fs
jge
repz
sub
adc
sbb
imull
mov
push
test
gs
pop
mov
fs
cli
fdivl
mulb
imul
out
jecxz
or
and
xchg
cmpsb
inc
adc
sub
cmpsl
mov
addl
repz
push
fidivl
or
sub
movsl
mov
or
out
stos
add
dec
mov
pusha
leave
hlt
sbb
iret
ret
cmpsl
lds
incb
lcall
stos
push
xor
and
or
repnz
test
andl
out
mov
sbb
nop
out
lret
sbb
into
lods
jo
roll
dec
clc
out
push
inc
push
jge
les
inc
push
rcrl
lods
inc
fcomps
pop
jbe
aam
rcrl
sub
sbb
sbb
sti
push
lret
cmp
pop
mov
fimull
test
jns
out
fildl
adc
mov
cmpsb
push
sahf
xlat
push
std
lcall
fcoml
mov
shrb
mov
or
cmp
or
lds
or
sbb
cmp
inc
push
push
push
pop
dec
andb
cli
clc
cltd
dec
xor
nop
mov
mov
jl
push
lods
addr16
sbb
push
ficoml
push
mov
or
fimuls
mov
ret
pop
and
lcall
xor
or
inc
mov
mov
out
out
push
mov
push
mov
rorl
jmp
sub
and
mov
pop
pop
test
jae
push
mov
arpl
mov
movsl
lea
cmp
repnz
xchg
dec
sbb
out
sti
mov
aaa
data16
sti
loope
mov
in
cmp
arpl
and
dec
mov
data16
loop
dec
movb
inc
aad
imull
inc
inc
add
inc
dec
or
movsb
outsl
mov
das
mov
pop
movsb
mov
or
ja
jecxz
inc
cli
sete
xchg
jae
mov
mov
jge
mov
enter
into
xchg
and
test
sub
inc
in
mov
sbb
xor
pop
sbb
fwait
push
mov
pop
jns
jns
dec
add
nop
test
push
pop
pop
sti
sub
pop
pop
push
or
sbb
inc
pop
xor
push
stc
shl
imul
lea
pop
add
push
andb
mov
jbe
stos
mov
daa
pop
mov
dec
imulb
rcr
mov
icebp
fnstsw
mov
cs
rolb
rcrb
movsl
xchg
dec
jecxz
repz
shll
aaa
sbb
idiv
jns
into
push
fnstsw
mov
in
imul
cltd
stos
data16
stos
mov
rcrb
xor
pop
push
mov
ret
push
testl
mov
jbe
roll
inc
js
rcrb
sbb
push
in
dec
fsubp
mov
into
lds
out
fs
mov
add
add
out
adc
mov
div
push
incl
stos
or
std
and
cmp
adc
idivl
stc
and
leave
testl
xor
sbb
dec
sbb
fwait
xchg
hlt
out
sbb
mov
int3
push
lret
xchg
imul
rcrb
out
and
test
ljmp
sbb
inc
jg
inc
test
mov
cmpsl
lds
xchg
push
sbbb
lods
lock
cmp
and
dec
ja
rorl
jne
fdivrp
push
pushf
test
sbb
cli
into
adcl
movsl
jl
sbbl
mov
mov
jecxz
test
push
cmp
mov
push
fwait
aas
jns
popf
loope
jle
pop
bound
sti
out
mull
ja
or
mov
lret
lock
sti
add
pop
test
lcall
lock
mov
negl
xchg
jg
paddd
jg
jo
jg
pop
ja
je
dec
ja
add
xchg
mov
and
out
mov
clc
mov
iret
movd
add
daa
inc
mov
ret
jne
aaa
lds
inc
mov
pop
imull
sbb
ret
mov
adc
jne
fwait
enter
push
test
ja
xchg
cmpsl
adc
sti
ja
out
lds
imul
push
mov
xchg
cmpsl
mov
cld
fnstcw
mov
sub
ficompl
lds
mov
push
hlt
insb
addr16
mov
pop
fstpt
mov
outsb
cmc
cltd
mov
lods
xlat
dec
jo
pusha
inc
sub
test
mov
cmpsl
inc
out
gs
cmpsb
pop
dec
inc
mov
mov
rorl
dec
lods
add
inc
cs
es
jbe
daa
ljmp
or
pop
mov
test
cwtl
insb
out
dec
push
mov
push
subb
cwtl
mov
fs
mov
ffree
jp
dec
in
push
inc
xor
test
xchg
mov
vmovupd
or
scas
sarl
mov
sahf
test
aam
add
adc
stos
jge
jae
repz
pop
jle,pt
scas
add
loopne
roll
adc
inc
decl
aam
push
push
sbb
pxor
inc
popf
mov
jg
mov
fs
sbb
ja
sub
sbbb
imul
xchg
add
mov
cmp
ficoms
fcmovu
mov
out
hlt
inc
das
lea
ror
mov
sub
mov
pop
mov
add
sbb
pop
outsl
cmpsl
sbb
aam
dec
xlat
push
fisttpll
push
jg
es
xchg
ret
vpunpckhqdq
hlt
pop
sbb
mov
or
lret
adc
cmpsl
lock
dec
inc
sar
out
repnz
mov
lret
adc
ffreep
add
or
mov
cmc
adc
add
or
sub
out
sub
xchg
int
shll
xchg
ret
outsl
lcall
or
js
je
push
or
add
inc
lds
push
pop
mov
inc
inc
shlb
mov
popa
jne
inc
mov
jbe
inc
pop
imull
push
mov
repz
dec
fimull
push
shlb
das
cmpsl
mov
ljmp
push
pop
mov
les
xchg
mov
adc
test
push
mov
filds
fmuls
add
test
fisubs
add
pusha
aad
ret
jmp
adc
fdivrl
loope
sbb
dec
sbb
or
cmpsb
and
jnp
loop
enter
addl
xchg
mov
out
lcall
add
jmp
or
add
mov
sbb
add
xchg
call
jne
out
jmp
jg
ret
jne
popf
test
adc
loopne
mov
jp
mov
faddp
imul
inc
in
pop
inc
fcomps
pushl
mov
mov
xor
adc
xor
mov
insl
les
fwait
jae
mov
test
ret
cmpsl
xchg
xchg
inc
xor
cmp
test
xor
mov
cmpsl
dec
dec
sarb
imul
fnstcw
inc
popa
xchg
dec
and
fsubrs
xchg
dec
jle
inc
mov
adc
xchg
mov
cmp
xorl
test
lods
orb
mov
jecxz
icebp
sahf
or
dec
insb
adc
subb
outsl
mov
ret
js
add
lods
js
loopne
int
or
jecxz
fsubs
fs
dec
test
hlt
inc
fsubrs
and
das
sub
arpl
push
adc
xor
cmc
stos
xchg
adc
jo
sbb
mov
fstpt
sbb
sub
mov
inc
pusha
mov
mov
adc
pop
in
loope
or
xchg
inc
pop
aas
pop
insb
add
jle
ja
xchg
test
call
and
dec
adc
cvtps2pi
ret
jg
push
adc
bt
pop
sti
daa
cmp
ret
daa
fs
cld
push
mov
xor
xor
mov
pop
pop
push
cmp
and
add
push
jmp
loop
inc
mov
out
mov
push
pop
mov
jae
pop
inc
outsl
cmpsl
inc
in
frstor
leave
adc
daa
lret
in
fbstp
mov
cmpsl
pop
and
push
xchg
in
mov
inc
lds
inc
pop
ret
subl
js
popa
or
mov
popf
inc
ja
and
ss
test
fsubrs
ljmp
mov
xchg
clc
jne
scas
push
stc
lds
dec
and
shlb
loopne
rdmsr
sbb
subb
test
mov
cli
ret
jge
call
jbe
jp
mov
js
fnstsw
inc
int
jne
loop
imul
xor
nop
push
icebp
shrb
sub
mov
cmp
add
aaa
aas
int
idiv
ja
loope
popf
hlt
sub
mov
xchg
or
inc
dec
and
jmp
stos
xchg
mov
mov
and
out
dec
inc
mov
fcompl
xchg
out
imul
rclb
mov
pop
mov
addr16
pop
aas
sub
jno
je
xchg
sbb
sub
dec
cmpsl
mov
add
dec
mov
hlt
scas
stc
cmp
dec
jne
out
aad
adc
out
xchg
xchg
aad
test
add
ffree
jmp
and
mov
jecxz
pusha
inc
sti
outsl
mov
popf
stos
loope
out
decl
add
push
pop
repz
leave
jecxz
cmp
jle
fs
pop
xchg
mov
les
ja
jae,pt
xor
je
in
or
into
push
cs
aas
shlb
out
loope
pushf
rorl
inc
shlb
addr16
pop
test
movsl
stc
push
shlb
lret
negl
mov
jg
shrb
inc
test
aad
and
mov
pop
xchg
mov
rorb
cmc
loopne
push
jg
shlb
ret
jle
movsb
lret
out
shlb
daa
jg
rolb
pusha
negl
addr16
inc
repz
rolb
xchg
mov
shlb
mov
add
test
test
mov
ds
rol
mov
jnp
test
test
addr16
rcl
inc
inc
cmc
icebp
out
rorb
shrb
aaa
jg
les
mov
jbe
push
pop
push
mov
adc
jecxz
jno
pop
mov
jle
outsb
xor
cmpsl
xor
adc
jbe
cmpsl
xor
push
xchg
movl
mov
shrb
gs
sahf
ror
gs
cmpsb
shrb
daa
scas
rol
test
test
movsl
fs
fdivs
add
rolb
mov
rclb
ret
rolb
shl
mov
out
inc
outsl
enter
sub
xchg
shlb
mov
lahf
inc
add
cmpsb
pop
lock
retw
shlb
notl
shrb
negl
rorb
das
rcrb
das
rorb
push
aaa
rclb
xchg
adc
cmp
out
scas
jmp
jle
inc
xlat
jg
adc
push
pop
pop
xchg
mov
xlat
sar
inc
sahf
shl
jge
xchg
add
lods
into
out
roll
inc
repz
shlb
lds
xchg
popa
push
addr16
fadds
push
mov
xchg
arpl
mov
xchg
inc
inc
xchg
mov
xchg
daa
inc
mov
incb
aam
repz
hlt
pop
je
out
les
out
cmpsb
mov
jg
notl
push
cmc
xchg
push
mov
jbe
jnp
push
mov
xor
push
out
ja
cmp
in
gs
loope
incl
mov
xchg
ret
inc
push
mov
xchg
movsl
inc
ss
loopne
xchg
imul
xorb
xchg
cmpb
loopne
fs
and
sbb
push
fidivrs
sub
mov
inc
inc
subl
jb
and
out
adc
add
arpl
scas
movsb
jnp
and
fldl
add
into
pop
adcb
xchg
pusha
lret
faddl
rcr
ret
add
fwait
arpl
outsl
movl
sub
test
jne
stos
outsl
xchg
jns
fisttps
mov
fwait
bound
sub
mov
mov
scas
sbb
jne
mov
in
in
in
out
lahf
cmp
js
cwtl
dec
loope
jecxz
and
inc
aas
bound
xchg
lret
stos
repnz
sub
test
add
out
inc
sub
sbb
mov
int3
aas
cs
out
cwtl
fs
orb
pop
push
fnstenv
add
cli
loop
cwtl
rolb
jnp
stos
inc
dec
xor
cwtl
and
pop
or
in
jne
cmc
mov
adc
les
fnstsw
inc
nop
sbb
add
mov
xlat
mov
dec
daa
jmp
clc
push
push
flds
xchg
adc
mov
or
into
movsl
loope
insl
pop
inc
xchg
repnz
int
push
xor
gs
jg
aad
lds
fldcw
sahf
in
popa
test
xchg
ja
xor
push
popa
hlt
test
lds
mov
testb
enter
sbb
pop
loop
cmp
test
lock
xchg
mov
or
push
sbb
out
pinsrw
inc
or
mov
in
sub
test
lods
mov
adc
push
subb
test
jp
mov
lahf
jae
loope
adc
cmpsl
mov
sub
xchg
loop
inc
das
jno
ja
popf
cmpsb
mov
imul
push
daa
cmp
pop
lods
push
mov
add
stos
out
jne
mov
stos
cli
xor
movsb
mov
mov
and
int
loope
or
pop
stos
rcr
ja
mov
out
lods
mov
adc
adc
fistps
sub
jecxz
icebp
pushl
mov
pshufw
push
xchg
xor
adc
pop
lea
in
out
xchg
inc
and
inc
and
pop
add
dec
rorl
cmpsl
cmp
fs
aaa
or
mov
or
pop
fistpll
in
int
and
push
dec
cmp
jno
mov
in
jnp
xor
int
push
jp
shl
sysret
pushf
scas
jmp
xchg
gs
idiv
data16
test
adc
rorb
or
and
scas
addr16
test
faddl
idivb
outsl
movsl
jne
or
sbb
cs
mov
mov
sarb
or
jae
push
mov
fadd
ret
adc
cmc
pop
mov
ljmp
sahf
push
push
or
xor
xchg
test
cmpb
test
mov
adc
and
repz
dec
inc
or
push
jns,pn
adc
or
es
lds
es
inc
cmpsl
repz
adc
mov
xchg
jge
sbb
je
mov
inc
movb
jae
aaa
inc
cli
repz
scas
mov
in
rcr
mov
stos
push
or
push
lods
in
push
icebp
ja
aad
mov
cmp
aad
pop
pop
aaa
mov
dec
cmp
xchg
int
xchg
adc
pop
xlat
jns
sbb
and
jge
daa
push
inc
jo
out
std
test
scas
jo
outsl
inc
xor
cmp
mov
movb
mov
test
mov
xchg
test
pop
pushf
test
mov
cmpsb
jmp
sbb
out
fwait
daa
jecxz,pt
xor
ljmp
pop
ds
sbb
add
mull
fldt
pop
jl
sti
je
xor
gs
fstpt
pushl
pop
clc
mov
out
out
icebp
dec
sar
dec
clc
mov
xchg
cmp
das
nop
xor
stos
mov
cmp
pop
xor
icebp
mov
inc
shrl
test
cmp
popa
sbb
ffreep
mov
scas
jbe
cmpsl
mov
sbb
jecxz
xchg
movsb
push
sbb
add
mov
into
outsl
inc
push
pop
out
inc
out
jae
mov
push
daa
pop
leave
lods
sti
xchg
jbe
cmpsb
sbb
jae
or
fnstcw
xchg
dec
adc
loop
test
int3
shl
or
es
xchg
aaa
sahf
inc
push
pop
or
push
mov
cmc
rcrb
imull
mov
add
sbb
dec
iret
out
mov
mull
xchg
adc
or
mov
js
out
ja
and
mov
xchg
subl
pop
mov
fsubp
andl
mov
xchg
mov
push
pop
daa
jecxz
fs
outsb
test
das
push
mov
xchg
adc
sbb
mov
push
das
sbb
inc
imul
int3
xchg
mov
push
js
ja
xchg
xorl
jge
xchg
ficomps
pop
lret
mov
into
sahf
push
jge
je
rcrb
dec
dec
or
add
dec
pop
das
or
push
scas
out
dec
int3
nop
aad
xlat
cmp
pop
mov
outsb
insb
insb
push
mov
out
inc
and
xlat
js
mov
fwait
push
les
pop
mov
push
fwait
shrb
mov
dec
outsl
lods
lret
pop
inc
fidivl
into
mov
jno
stos
scas
push
xor
notl
inc
xlat
pop
scas
push
insl
out
mov
add
mov
sbb
xlat
sti
push
sub
sbb
loopne
adc
inc
outsb
and
popa
aam
jmp
dec
cwtl
add
sub
adc
nop
and
mov
call
mov
sti
test
popa
adc
mov
subb
xchg
or
imul
bound
test
cmc
inc
fsubr
and
rcr
aas
mov
mov
ljmp
adc
mov
cmpsl
adc
pop
out
xchg
shlb
sub
xlat
add
leave
aad
and
idivl
iret
adc
push
pop
shr
adc
inc
iret
outsb
jmp
and
dec
out
ss
inc
adc
xchg
addr16
fistpll
sub
push
cli
xchg
dec
push
test
push
sub
std
or
xchg
xchg
lea
dec
push
mov
loope
int
xor
lea
movsl
jp
push
popa
pop
mov
xchg
ds
out
popa
dec
adc
xchg
push
inc
es
test
jle
pop
leave
int
cmp
ds
out
mov
lds
mov
or
add
nop
and
inc
aas
das
aad
adc
and
xchg
pushf
mov
pop
adc
xlat
mov
mov
pop
rcll
xor
mov
inc
xorb
out
mov
ret
jns
aam
push
cmpsb
movb
mov
ljmp
xchg
pop
ja
ja
inc
call
xlat
push
insb
inc
cmpsl
and
xchg
and
lock
inc
testb
mov
in
cmpsl
jmp
mul
dec
stc
sarb
xchg
mov
mov
out
xchg
das
out
jge
dec
sub
xor
or
popa
mov
xchg
jo
test
mov
std
scas
cmpsb
jmp
mov
sbb
out
sub
into
dec
xchg
stc
push
stos
mull
pop
les
adc
xlat
stc
add
pop
aad
test
test
adc
xchg
jbe
adc
push
push
jne
xchg
xor
mov
push
xlat
ds
mov
lods
lods
xor
jp
je
sbb
repz
pop
xor
cmp
mov
cmc
xchg
xchg
loope
and
insl
lods
shl
jge
mov
idivb
inc
test
push
pop
out
and
shll
pop
push
pop
dec
sarb
pop
daa
add
mov
or
mov
fisttpl
jbe
aas
cmc
inc
dec
loop
ja
ret
lahf
lods
cmp
in
lcall
jl
jge
cmpsb
ret
data16
dec
mov
inc
pop
les
aas
mov
inc
add
addr16
out
lds
ficomps
cwtl
in
or
leave
in
push
inc
mov
es
sub
leave
rcr
add
cmp
lcall
cmpsb
jge
mov
shr
mov
xchg
and
push
add
scas
into
lods
cmpsl
add
stos
loop
dec
aaa
inc
pop
insl
fs
pop
jge
pop
push
ret
adc
inc
insl
xchg
repnz
inc
shll
cmp
push
std
rorl
mov
adc
inc
dec
push
or
repz
sub
movsl
ja,pn
sbb
fstps
divb
sbb
ficompl
mov
out
xchg
mov
pop
sub
cmpsb
notl
sbb
and
mov
xchg
push
imul
add
enter
pop
cmc
push
xor
aad
movb
mov
jbe
inc
jmp
stc
mulb
xchg
dec
pop
icebp
sub
data16
call
popa
shrb
jecxz
in
add
adc
mov
cs
pop
xchg
ds
dec
add
adc
dec
lods
in
mov
jp
cmp
pop
cmpsl
jne
cmp
mov
orb
cs
inc
dec
xor
pop
mov
movb
movsl
cmp
inc
adc
pop
xchg
xor
jns
lock
ds
aad
jg
jnp
push
repnz
fisubs
rolb
inc
sub
addr16
gs
rorl
sub
xchg
dec
in
inc
dec
mov
fs
fidivs
lcall
fwait
data16
movsb
out
dec
out
test
xlat
pop
cs
or
ja
adc
mov
iret
loope
cmpsl
jle
mov
das
sbb
mov
jmp
jl
int
aam
dec
push
mov
and
mov
push
inc
or
cs
and
dec
shlb
shll
add
shrb
int3
jno
in
aas
mov
movsl
mov
jg
ficoms
mov
fisubs
mov
stc
inc
pop
mov
sub
stc
sbb
shrl
cmp
ja
adc
dec
mov
ffree
jnp
push
in
jb,pn
and
and
pop
jecxz
loop
lahf
push
icebp
mov
out
test
mov
mov
andl
sub
add
movsb
add
ja
mov
dec
and
pop
adc
jge
scas
mov
mov
pop
out
lahf
pop
mov
cmpsb
push
fwait
bound
repnz
push
adc
aaa
fwait
imull
jp
int
inc
sbb
lods
mov
jno
jmp
mov
in
cmpsb
push
pushf
in
outsl
xchg
push
cmpsl
mov
dec
push
test
pop
mov
mov
rol
jp
addr16
xor
in
and
and
imul
hlt
das
gs
lcall
mov
inc
pushl
iret
or
mov
lea
les
pop
inc
sbb
or
ljmp
test
test
xlat
inc
pop
jg
imull
inc
ljmp
outsl
les
fcmovu
loope
fidivs
sbb
movsb
push
fsubp
xchg
xchg
std
inc
mov
mov
outsl
daa
fwait
gs
cmp
fcomi
pop
fwait
mov
push
test
mov
jle
xchg
push
xor
shll
inc
jge
fnstenv
mov
stos
cmpsl
dec
inc
ljmp
fstps
bound
dec
lcall
in
movb
inc
adc
or
test
idivb
test
add
cmp
aad
mov
loope
les
pop
dec
inc
popa
cmc
lds
div
cmp
add
sahf
mov
add
xor
jecxz
push
cmc
in
bound
int
loope
push
and
movq
bound
dec
ret
sti
adc
imul
jle
data16
mov
mov
out
loop
movsl
fcomp
adc
ffreep
pop
push
faddl
stos
flds
jmp
lea
les
out
jo
and
frstor
jbe
data16
or
daa
shl
push
jns
xlat
stos
inc
add
movsb
dec
mov
jns,pt
mov
adc
xchg
hlt
pop
jge
push
aaa
sub
pop
mov
movsl
add
sbb
add
mov
pop
xchg
jb
repz
push
aaa
or
and
stos
mov
mulb
sbb
cmpsl
mov
fs
inc
and
jb
cmc
jle
pop
xchg
out
or
and
in
frstor
xchg
pop
jle
xchg
jb
stos
std
movsb
sbb
cmp
sbb
add
mov
shl
xchg
jnp
dec
mov
arpl
pop
dec
cs
add
sbb
pop
imul
movsl
add
or
pop
mov
push
push
xor
addr16
xchg
inc
xchg
rcrb
idivl
mov
stos
fldt
mov
rcr
jge
sub
dec
add
xlat
mov
lret
push
test
rcll
cmpsb
stc
dec
notb
sahf
pop
iret
sbb
js
sub
fsubrl
and
test
push
jbe
fldl
ret
scas
xlat
gs
mov
mov
movb
cmc
out
jns
xor
pop
insl
and
mov
mov
adc
mov
les
cld
faddl
jno
aaa
inc
mov
out
jmp
xchg
jg
dec
sub
add
popf
jbe
scas
sbb
mov
adc
fildll
xor
int
mov
add
movsl
aad
jl
inc
out
pop
sub
jecxz
in
or
nop
sbbl
leave
aad
int3
inc
jno
popa
into
inc
sbb
ud1
lds
or
push
imul
push
add
aaa
jb
bsr
inc
inc
mov
loop
sbb
mov
xchg
nop
loop
cmp
test
mov
add
notl
mov
fs
rcr
sbb
dec
loope
jge
ja
stc
clc
pop
ficoms
mov
push
mov
push
xor
cmp
aam
icebp
js
imul
xchg
clc
xchg
fmul
push
jno
xor
pop
nop
addl
push
loopne
pop
out
xchg
mov
icebp
mov
cli
sbb
scas
cmp
or
fwait
jmp
inc
cli
jp
jbe
ljmp
leave
mov
and
fildl
sbb
lds
cmpsl
outsb
jb
sub
xor
xchg
add
dec
addl
scas
in
sbb
movl
pop
jnp
notb
fcmovnu
out
mov
push
xchg
mov
aas
add
subl
cmpl
hlt
or
mov
cmp
rolb
and
jle
mov
pop
shlb
jo
inc
push
xor
adc
xchg
pop
daa
mov
mov
cmp
arpl
pop
loopne,pn
fnstsw
xchg
mov
aas
bound
insl
push
jg
loope
lcall
sbb
nop
mov
adc
mov
mov
mov
xor
add
adc
cmc
out
mov
pusha
aas
and
loope
scas
fldt
jnp
add
negl
mov
sahf
or
mov
mov
mov
push
pop
mov
hlt
popf
pop
jecxz
adc
lods
mov
rcr
jnp
ficomps
gs
mov
jnp
mov
jg
and
rcrl
loope
in
shlb
je
dec
mov
rorb
xor
or
addr16
push
and
mov
enter
lret
hlt
gs
or
insl
cmpsb
loope
out
pop
mov
in
xor
imul
out
jge
pop
mov
rorb
xor
dec
fs
leave
jne
inc
daa
jbe
out
mov
cmc
push
dec
sti
pop
pop
testb
jbe
and
jle
pop
pop
adc
inc
test
shll
out
testb
mov
adc
cli
int3
cmpsb
push
jp
add
jbe
in
xor
sbb
sub
xchg
cmpsb
push
movsl
and
daa
arpl
pusha
sbb
aaa
cltd
pop
popl
testb
and
inc
jne
fcmovnu
test
sub
movsb
or
into
jbe
jg
lds
leave
cli
mov
iret
jge
adc
or
andb
mov
inc
push
dec
std
mov
enter
lahf
rorb
sbb
frstor
idivl
rcrl
sarl
repnz
outsl
test
pop
mov
sbb
pop
icebp
dec
dec
test
in
lods
scas
aaa
inc
das
sbb
je
loopne
and
lahf
es
lock
repnz
stos
pop
push
outsb
cmpsl
mov
aaa
shl
fcompl
pop
sbb
inc
loope
mov
dec
loope
adc
scas
hlt
mov
shlb
sti
stc
inc
lds
mov
push
jl
or
mov
add
testl
test
gs
dec
or
fldl
inc
cwtl
in
dec
movsb
mov
test
jecxz
add
daa
ret
sub
xchg
mov
pop
push
jecxz
scas
faddp
test
mov
test
dec
out
popf
sub
push
insl
pop
ds
pop
adc
cmp
dec
jge
ja
cwtl
ds
sbb
push
push
ficomps
push
lahf
jg
pop
jnp
in
adc
adc
outsl
movsb
xor
aad
cmp
arpl
iret
adc
roll
push
xlat
mov
xor
cmc
add
mov
xchg
testl
pop
nop
sbbb
cmp
lret
inc
push
mov
nop
into
adc
inc
sbb
shll
es
push
out
xor
mov
push
push
imul
sbb
or
sub
pop
pop
cmpsb
sub
jno
in
pop
cmp
or
sub
out
push
push
loopne
lds
pusha
fs
add
shl
out
xor
and
addr16
into
push
adc
lcall
scas
icebp
fimuls
ret
orl
out
or
into
pop
outsl
fsts
pop
dec
pop
inc
cmpsb
fwait
inc
add
rclb
jle
out
cmpsb
cs
aad
cmp
aad
fs
cmpsl
call
cs
sbb
pop
out
scas
cmp
inc
arpl
add
jg
js
mov
pop
in
mov
aam
repz
and
repnz
outsl
fimuls
inc
test
mov
mov
movsl
jno
xchg
out
loopne
jne
movsb
dec
fimull
ret
jecxz
jno
fldt
leave
addb
jp
mov
push
jecxz
js
ds
test
pop
movsl
ja
or
xor
cmc
lcall
stc
xchg
jge
cmp
jne
sti
loopne
div
in
xchg
stos
jg
sbb
add
cwtl
xchg
mov
push
mov
sbb
sbb
or
push
push
or
inc
jnp
xlat
test
dec
and
incb
jecxz
push
jle
shlb
mov
fwait
jge
and
addr16
mov
sbb
mov
cmp
sbb
es
pop
in
or
jb
mov
pop
mov
add
es
fldt
xchg
ficomps
jbe
jg
mov
leave
inc
sub
stc
dec
loopne
push
lret
mov
nop
rcll
xchg
fsts
test
mov
cmp
mov
xlat
test
ss
xor
out
cmp
xorl
mov
pop
mov
leave
fidivrs
jne
push
mov
dec
mul
fidivl
popa
data16
repz
adc
jge
insl
ret
sti
stos
stos
or
rclb
push
mov
in
inc
fs
es
adcl
adc
jecxz
and
lods
cmp
jb
popf
xlat
std
push
pop
hlt
mov
aam
jecxz
in
pop
pop
jns
popl
jne
fnstsw
adcl
pop
jnp
es
mov
gs
cmpsb
xor
inc
cmp
out
fcmovnbe
inc
mov
cmp
pop
test
idivl
add
daa
cmp
xor
and
call
insb
mov
in
test
jp
push
mov
dec
mov
aad
xchg
popa
mov
sbb
push
or
sti
inc
fwait
movsl
fiadds
push
shll
sbb
aas
pop
out
xchg
lea
insl
inc
adc
sarb
gs
push
jne
mov
mov
lret
jg
in
mov
les
push
cltd
and
bound
scas
les
loope
arpl
push
mov
sub
hlt
push
sar
sub
push
fwait
jg
xchg
ja
adc
mov
outsl
pop
mov
jb
outsl
mov
cmp
adc
jne
xorl
or
mov
out
inc
mov
movsb
imul
in
push
jne
lret
adc
jb
cmpsb
inc
and
mov
lret
mov
mov
shlb
jo
ja
mov
sbb
std
popl
icebp
in
cmpsb
jecxz
std
in
mov
jne
push
sbb
xchg
test
in
or
out
clc
cs
fs
roll
dec
pop
mov
pop
in
fs
inc
cmp
bound
pop
ret
jo
addr16
fmul
jnp
std
sub
push
xchg
stc
rclb
xor
adcb
sbb
push
push
pusha
jecxz
sub
pop
loop
fadd
imulb
fcomps
in
outsb
pop
sub
and
pop
adc
lds
stos
sub
sbb
dec
sbb
fwait
lock
test
lods
int
jg
out
aaa
mov
mov
pop
out
cwtl
add
or
mov
roll
std
cmpsl
lahf
lret
inc
xchg
cmpsb
inc
pop
push
test
loopne
or
cmpsb
mov
daa
fisubrs
mov
stc
xor
test
out
icebp
xchg
cmp
sbb
jle
leave
xchg
fs
jno
push
cmp
ja
je
pop
and
fsubl
out
lahf
sbb
pop
cs
sbb
sbb
xchg
movsb
out
add
sub
pop
nop
imul
movsl
sub
push
bound
fmull
lock
inc
cmp
dec
jecxz
js
hlt
shlb
xchg
add
ljmp
lea
std
rcr
or
fs
mov
xor
shlb
cld
mov
cmc
sbb
add
adc
addl
sub
scas
jp
pop
scas
mov
leave
xor
mov
push
mov
shl
cmp
sbb
cmpsb
lcall
add
jecxz
clc
gs
dec
push
add
std
sbb
and
inc
cmp
lods
add
test
cmc
mov
jne
clc
rol
xor
std
int
mov
pop
and
mov
mov
test
arpl
or
jbe
mov
outsl
negl
mov
or
add
and
mov
xchg
stc
test
por
mov
and
sti
test
jg
push
mov
stc
lea
insb
and
popf
jle
dec
push
mov
lahf
je
repz
xchg
jne
mov
ret
ss
mov
scas
fdivrs
mov
mov
fs
js
test
aad
cmpb
sub
sbb
clc
cli
in
jae
in
repz
hlt
push
aas
add
jne
in
clc
inc
test
sbb
popf
push
jge
xchg
fstpt
pop
cld
mov
fsubp
sbb
in
lea
out
js
call
outsl
ds
int
pop
cmpsb
pushf
stos
mov
sub
ss
stos
into
jne
adc
fwait
add
xchg
push
js
popa
cmp
sub
loope
div
pop
adc
fdivrs
hlt
mov
jl
mov
lds
aaa
bound
es
jnp
ret
pop
fidivrs
cmp
sti
mov
push
xchg
lock
addr16
xchg
outsl
xchg
push
inc
mov
lahf
cmpsb
and
movsb
movb
sbb
xchg
jge
mov
adc
push
pop
jbe
cmpsl
outsb
and
repnz
jg
data16
adc
pop
rclb
test
aad
inc
mov
dec
rolb
jecxz
mov
insl
sbbl
in
in
negl
rclb
push
xor
insb
inc
movsl
mov
rolb
int3
inc
test
rcr
jnp
loop
ficomps
addl
test
fldt
mov
and
flds
inc
jb
jb
lods
subb
call
leave
jae
push
pop
cmc
repnz
cmpsb
xchg
inc
or
xor
push
cmpsl
stos
jno
in
add
pop
mov
pop
or
ficoml
jae
insl
cmp
clc
imul
pop
add
dec
in
cmp
inc
outsb
ret
adc
pop
in
lret
or
xlat
test
push
cmp
rclb
repnz
inc
arpl
add
test
pop
mov
aaa
mov
insl
adc
mov
sbb
jecxz
and
jp
cmp
inc
cmpl
mov
xchg
movsl
scas
fnstcw
push
addb
gs
std
cmp
jecxz
icebp
ljmp
adc
sbb
and
shlb
mov
test
push
jo
dec
ret
mov
jecxz
jne
call
std
and
dec
sub
inc
mov
mov
shrb
push
ficoms
cmp
mov
cmp
mov
pop
es
pop
ret
stos
inc
cwtl
std
jle
push
ficoml
mov
mov
add
movsb
dec
or
mov
mov
enter
ja
lret
mov
or
mov
adc
jno
add
lret
mov
mov
shl
rcr
imul
xchg
std
or
jno
and
mov
mov
mov
jmp
mov
sti
dec
test
cwtl
insl
out
jle
mov
icebp
jb
jecxz
iret
into
push
xchg
and
shlb
dec
hlt
out
fwait
xor
mov
mov
pop
mov
std
jnp
mov
push
out
push
rolb
stos
xor
sub
rcl
incb
out
or
adc
xchg
repz
dec
test
insb
daa
mov
jbe
cmpsl
popa
add
scas
dec
adcb
sar
lea
fistpll
jne
fisubs
mov
in
dec
ja
mov
test
mov
cmpb
scas
mov
movsb
int3
pop
inc
pop
jg
jge
mov
push
inc
insl
jno
stos
cltd
repnz
mov
cld
mov
pushf
dec
data16
daa
mov
sub
adc
cmp
shll
pop
insl
inc
inc
xor
push
push
and
push
sbb
sub
sub
cmpsb
add
movsl
mov
shrb
in
rolb
aaa
mov
repnz
dec
xchg
jae
leave
xor
dec
pusha
movsb
add
inc
mov
xor
movsl
imull
push
adc
lret
call
fs
movsb
push
or
test
fsubl
adc
jae
cwtl
and
add
das
hlt
sbb
pop
inc
notl
push
cli
bound
int
aas
jmp
mov
lock
fldcw
lds
mov
cmp
out
pop
lods
test
imul
cmc
lods
sub
inc
pop
aad
outsl
jmp
dec
mov
sti
push
in
inc
test
jbe
mov
mov
cltd
pop
dec
xchg
dec
xor
lods
sbb
movsl
push
aam
notb
cmc
sahf
ret
das
pop
sub
jno
and
cmc
scas
stos
out
fdivl
data16
mov
arpl
adc
loopne
pop
rcrb
adc
adcl
pop
mov
jo
out
js
push
inc
mov
sbb
into
pop
rclb
aad
xchg
dec
cmp
inc
and
adc
sbb
popa
cs
mov
fimuls
pop
sahf
pushf
lods
xor
in
leave
xchg
inc
pop
xchg
pop
leave
push
xchg
ds
test
jecxz
dec
aas
xor
fiaddl
and
mov
mov
jo
ja
dec
ret
lock
das
outsl
xorb
in
loop
daa
movsl
fildll
xor
testb
leave
mov
inc
mov
lds
push
dec
pushf
xor
ja
fs
sbb
mov
mov
add
pusha
xchg
loopne
or
xchg
les
xor
dec
hlt
mov
outsl
mov
ret
mov
xor
xchg
add
icebp
sbb
ljmp
or
push
push
lret
imul
lret
and
inc
push
push
testl
jge
jbe
inc
movsl
jp
rcrl
data16
sub
mov
sbb
inc
cmc
and
jp
jmp
daa
mov
fnstenv
or
in
movsb
out
adc
xchg
into
in
popf
gs
dec
outsl
push
mov
mov
mov
in
jnp
xchg
cmp
xchg
cmp
hlt
sub
into
and
xchg
popa
xchg
mov
das
inc
ds
pop
and
call
scas
notb
push
inc
cmp
pop
push
pushf
inc
sarb
stos
or
mov
out
cmc
stc
jge
xor
and
jae
test
loop
loop
rolb
andl
jp
dec
scas
arpl
jge
test
adc
fs
jae
mov
les
clc
add
addl
adc
inc
xor
add
into
out
mov
cmc
and
test
add
push
sahf
arpl
jbe
sub
pop
mov
ja
adc
cs
std
movsl
inc
cmp
nop
sbb
inc
rol
mov
rcl
pop
jmp
in
xor
inc
sahf
sbb
notb
inc
cmp
ljmp
mov
out
divl
outsl
and
xlat
cmp
xchg
sbb
cwtl
insb
mov
pop
cmpsb
andb
jle
cmpsb
jle
call
xchg
std
cld
mov
subb
or
iret
or
sbb
loop
rcll
int
mov
push
mov
pushf
mov
lea
fistl
sub
mov
xlat
xchg
pop
popa
push
dec
push
inc
mov
push
sbb
inc
loop
sbb
cmpb
mov
dec
mov
push
out
jp
mov
mov
cmp
sahf
xorb
xor
adcb
and
adc
aaa
cmpsb
lahf
dec
clc
sahf
ds
hlt
outsl
insl
cmpsb
jne
dec
sbb
int3
aad
xchg
adc
xchg
test
lock
cmp
cli
jle
movsb
lcall
mov
aaa
icebp
fisubrl
stc
sub
lods
xor
and
iret
out
fdivrs
push
ret
jne
cltd
and
rcr
pop
enter
loope
lods
jns
cmc
mov
fucom
or
inc
and
mov
inc
out
pop
sbb
imul
xchg
lods
outsl
mov
dec
push
fadds
cmp
test
mov
mov
testb
and
scas
cmp
push
xlat
jp
jo
sbb
push
insl
lock
push
aam
movsl
or
movsl
inc
xor
cmpsl
and
dec
xchg
cld
xor
int
dec
mov
fcmovne
ja
mov
test
inc
loope
inc
and
or
sti
inc
shlb
add
out
addr16
fdivs
pop
pop
ficomps
int3
jae
or
mov
jbe
jo
mov
push
fadd
icebp
or
data16
jb
xchg
xchg
ret
inc
cmc
repz
movsb
ja
pop
or
jecxz
mov
flds
adc
ds
xor
cmp
sbb
lea
dec
mov
and
loop
mov
fs
mov
lock
cmp
add
sbb
xor
mov
jns
push
in
cmpsb
jge
repnz
mov
inc
imul
jne
xor
stc
cmp
xor
dec
call
pop
sti
xor
inc
pop
inc
sbb
add
lock
jnp
roll
inc
mov
addr16
arpl
loope
mov
fsub
lea
push
movsl
lcall
xchg
push
pop
outsb
jbe
out
sbb
mov
ja
fwait
mov
in
into
aad
fcoms
mov
popa
lret
push
andl
mov
cmc
daa
subl
in
data16
inc
and
add
incl
rcrl
pop
xor
ja
andl
fnstenv
push
in
push
mov
cmp
inc
fldl
push
cmp
jp
es
sbb
and
pop
dec
roll
mov
mov
loopne
sahf
xchg
movsl
testb
addr16
icebp
inc
xor
sarb
sbbl
mov
push
cmpsb
daa
lods
lods
mov
scas
repz
push
int
or
add
fnsetpm(287
orb
jnp
ja
mov
and
mov
dec
inc
jle
call
lret
mov
xchg
movsl
sahf
adc
mov
int
scas
mov
jg
iret
mov
sahf
popf
push
mov
pop
cltd
cmpl
mov
lcall
aaa
xchg
or
fnsave
aas
aad
dec
sub
mov
mov
sahf
push
or
mov
jecxz
sti
insl
cmpsl
pop
jb
sub
inc
push
shr
shrl
mov
xchg
jmp
into
lods
out
mov
shlb
lock
adc
test
mov
jne
pop
mov
xor
aaa
jl
inc
icebp
cmpsl
imul
mov
outsl
mov
rcl
push
test
add
movsb
mov
mov
roll
mov
fadd
gs
pop
cmpsb
or
fxch
and
add
out
xchg
pop
aam
fadd
inc
cmp
mov
out
xlat
mov
push
dec
sarb
pop
pop
stos
loope
test
pop
dec
jne
sub
jle
jp
jmp
mov
loop
mov
clc
inc
mov
test
sbb
dec
test
mov
arpl
inc
popf
xchg
cmp
jmp
pop
pop
scas
and
repz
fwait
out
aaa
adc
add
inc
ljmp
jo
xchg
jo
dec
sub
pop
xor
xchg
aas
loopne
iret
adc
mov
movsb
inc
mov
xchg
xor
out
cmp
out
jecxz
std
and
xchg
mov
mov
test
icebp
sarb
divl
fcmovnb
pop
shll
out
icebp
jmp
sub
xor
cmp
dec
shlb
test
fs
outsb
lods
cwtl
loope
ds
div
fwait
movsb
push
sbb
stos
mov
push
arpl
loopne
push
jae
sbb
popf
xlat
int
mov
ds
das
pop
pop
jmp
iret
mov
fldt
fildll
jge
dec
xor
cmp
mov
lock
dec
repnz
aam
xchg
movsl
push
xchg
test
std
add
insl
or
xchg
aad
addr16
or
sbb
dec
inc
dec
pop
out
punpckhwd
mov
outsb
adc
fisubl
out
test
add
data16
insl
out
fldenv
jge
orb
test
cmp
aam
ss
jb
test
xchg
push
or
push
cmc
lds
xor
sahf
jns
movsl
mov
les
popf
or
movsl
sbb
pop
loope
pop
out
cmpsb
sar
mov
iret
popa
mov
cmpsb
cmc
rcrb
sub
gs
sti
out
xlat
icebp
in
das
fcoml
popf
test
dec
sbb
aam
jg
inc
adc
xchg
inc
decl
xchg
cmp
mov
mov
ffreep
lret
or
pop
es
cmpb
daa
sbb
daa
fbstp
pop
push
or
push
mov
inc
and
mov
pop
cmpsl
sbb
jno
adc
jae
divb
aas
pop
pop
addr16
mov
mov
test
icebp
mov
mov
js
scas
push
aaa
gs
fmull
movsl
sub
aad
adc
jle
cmpsb
dec
repnz
mov
jecxz
xchg
cltd
pop
cmpsl
cmc
xchg
addr16
push
fdivs
fiadds
hlt
sti
mov
dec
cltd
popa
push
mov
xchg
or
shrl
xchg
jmp
cltd
or
and
pop
jns
dec
jge
xor
mov
aas
test
ficomps
adc
repz
rcrb
sbb
xor
pusha
arpl
mov
pop
cld
mov
addr16
stos
pusha
xchg
mov
cmpsl
ja
out
je
gs
daa
xchg
xor
insl
pop
push
inc
mov
nop
inc
andl
jg
xchg
out
inc
dec
insl
jge
fwait
ret
push
ret
shlb
por
push
dec
sbb
cwtl
inc
xchg
iret
push
mov
stos
icebp
jp
out
mov
pop
dec
mov
jg
mov
shll
outsb
jnp
les
in
mov
movsb
pop
test
add
shlb
xor
push
or
outsl
cmpsb
ret
jmp
inc
scas
sbb
shl
mov
xor
pop
mov
pop
lock
cmp
mull
mov
lahf
mov
jge
ja
or
push
cmpsl
mov
scas
cli
cld
mull
or
das
inc
paddb
fisttpl
fistl
repz
into
and
in
idiv
fdivrl
sti
out
shll
dec
sarl
and
xchg
xor
ret
sbb
lret
push
out
pop
stos
fdivrl
and
stos
and
jle
adc
mov
lods
mov
es
jns
xor
mov
and
jge
fs
addr16
mov
pop
out
inc
or
pop
push
fdivp
xlat
mov
mov
cmp
mov
dec
inc
repnz
out
icebp
sbb
mov
push
and
mov
xchg
dec
fidivl
xor
add
add
sbb
imul
ffreep
or
scas
and
test
jge
cmp
cltd
repnz
mov
frndint
adc
jb
lods
cs
jne
fldz
push
xor
cmp
mov
sbb
lahf
call
mov
or
stos
pop
and
mov
cmp
test
rolb
adc
sub
xchg
adc
test
jae
fwait
and
aaa
mov
pop
pop
inc
sub
lea
shll
test
xorw
inc
mov
mov
test
loope
icebp
pop
adc
loope
xor
bound
jbe
popa
out
jns
ffreep
sti
mov
lcall
jle
scas
stos
jl
testb
jns
jge
sbb
test
dec
in
addr16
icebp
out
dec
xchg
add
stos
dec
xor
pop
out
pop
cmp
incl
hlt
popa
or
mov
push
add
inc
outsb
and
cltd
je
das
rcl
roll
clc
xchg
clc
ss
imul
rolb
sahf
xchg
jg
mov
add
pop
mov
push
jg
popf
xchg
std
or
movsl
add
in
cs
testb
daa
mov
or
daa
lods
inc
test
push
mov
push
imul
or
push
movsw
and
int3
jb
add
push
fmull
icebp
jb
cmpsb
sbb
add
jp
ss
jp
mov
cmpsl
das
movl
rcrl
jge
into
pop
pop
outsl
xchg
ja
and
mov
dec
popf
out
loopne
les
xchg
and
cs
mov
sub
cli
sub
das
incb
cmp
mov
lock
daa
pop
dec
pop
xor
jl
inc
dec
hlt
xchg
es
loope
jl
cmp
insl
cmc
jmp
jbe
loopne
sbb
lcall
pop
xchg
faddp
aas
add
mov
lds
das
lds
push
xor
bnd
or
call
test
xchg
mov
sub
leave
scas
dec
cmp
ja
test
addr16
jb
pop
dec
and
out
jae
data16
sub
mov
jl
je
adc
sub
inc
imul
inc
jge
sub
cmpl
cmp
or
fdivr
jae
scas
cld
lock
push
ja
mov
inc
out
xchg
cmpsl
mov
sahf
popf
xchg
rolb
lahf
mov
pop
mov
or
or
dec
push
jns
outsl
test
mov
in
cmp
loope
and
mov
pop
mov
or
leave
cld
scas
mov
dec
test
pop
xor
cmpsl
rclb
mov
or
decb
jge
shlb
pop
or
in
xchg
mulb
jne
jge
cmp
mov
ret
and
loop
push
ret
std
rclb
fidivs
cmpsb
mov
pop
in
aad
ret
fcompl
cld
jle
pop
popf
push
jmp
jnp
imul
divl
jl
ja
dec
pop
inc
sub
adc
test
iret
movl
cmpsl
or
xchg
push
pop
push
add
dec
xor
movsl
inc
lcall
add
daa
out
xchg
xchg
jmp
filds
mov
jae
jns
addr16
hlt
xchg
mov
out
outsb
add
out
xchg
pop
mov
dec
mov
ljmp
data16
out
adc
mov
int
xlat
popf
dec
in
mov
sbb
rorb
gs
daa
cmc
mov
lret
ret
shl
in
pushf
add
add
sbb
mov
jnp
testb
popf
out
and
inc
fimull
test
adc
xor
icebp
inc
in
data16
fdivrs
mov
sbb
das
and
mov
xor
cmp
jecxz
jl,pn
push
scas
jg
cs
pop
mov
cmpsb
insl
out
ja
in
mov
mov
lods
fbld
test
aas
mov
and
les
in
outsl
sbb
lea
pop
outsl
mov
mov
stos
and
or
pusha
fwait
scas
movsb
sbbl
imul
pop
jmp
addr16
xchg
jb
sbbb
test
and
or
loop
xor
insl
mov
stos
xorb
into
push
popf
js
es
mov
inc
sti
sbb
rcrb
les
jg
cli
jl
mov
inc
cmp
loope
stc
mov
cmp
dec
movsl
inc
jg
test
test
push
push
sub
add
jg
out
ja
cmpsb
jmp
mov
js
outsb
mov
jge
fidivs
imul
jno
ja
inc
jg
sbb
jnp
fs
pop
mov
mov
lods
iret
out
aad
out
sar
incb
dec
das
in
pop
xchg
test
xchg
and
push
cmpsl
das
fwait
std
fisttpl
push
pop
mov
arpl
push
test
adc
call
xchg
movsl
testl
gs
es
ficoms
ret
in
sarb
mov
dec
jb
or
fwait
pop
mov
dec
dec
pop
jne
ret
mov
cmp
and
and
scas
mov
push
popa
imul
das
fidivs
sub
pop
out
fstl
imul
andl
int
adc
mov
mov
mov
jne
mov
daa
mov
test
lds
mov
add
jg
aas
shll
push
test
and
push
xchg
std
movsb
pushl
mov
in
in
and
push
in
and
pop
ljmp
fs
loope
and
inc
lods
jge
mov
cs
test
lds
mov
dec
inc
std
in
out
roll
xchg
aad
cmp
push
jmp
push
and
ret
aad
adc
dec
aam
jg
movsl
cmp
jnp
roll
or
movsb
outsl
mov
add
mov
push
or
in
out
test
cmc
jns
lds
addl
or
pop
mov
and
xchg
popl
and
cmp
movsl
ss
out
push
cmp
call
pop
jnp
cmp
sar
mov
xchg
jge
imul
stc
iret
scas
xchg
decl
mov
js
mov
mov
mov
mov
sub
scas
pop
and
ss
shrl
outsl
stos
in
jl
arpl
negb
ret
jne
push
lds
sarb
pop
jb
cmpl
daa
cwtl
lret
mov
mov
cmpsb
cmp
ret
subb
scas
fwait
jne
or
and
lock
push
fcmovbe
ss
sub
rcrl
inc
rol
js
dec
outsb
or
ret
inc
mov
frstor
in
loope
fwait
and
aam
cmp
test
jl
imul
and
sbb
es
sub
stos
inc
push
scas
sbb
stos
fnstenv
pop
mov
cmc
sbb
sbb
push
rorl
pop
jae
loope
dec
mov
cmpb
jnp
jae
adc
mov
jecxz
sbb
push
cmp
call
mov
int3
cmp
inc
adc
inc
lahf
push
xchg
test
lds
sarb
out
ret
leave
and
xchg
jbe
lds
stc
push
or
xor
mov
mov
stc
cmp
out
scas
sub
fwait
or
lahf
xchg
jne
hlt
subb
lea
dec
loope
mov
dec
xchg
out
bound
xchg
pop
test
xor
movsl
in
in
mulb
fstl
cmp
in
xor
movsl
mov
mov
roll
rclb
incl
inc
in
jge
pop
adc
das
loope
outsl
stos
xchg
pop
test
mov
or
addb
cwtl
or
cld
pop
mov
cmpsb
outsl
nop
divb
out
fisttpl
icebp
mov
jmp
inc
mov
aaa
inc
pop
fs
mov
cld
arpl
sarl
mov
jno
push
hlt
cs
push
aad
or
inc
mov
jmp
sub
hlt
pop
jg
arpl
xor
xchg
adcl
dec
mov
gs
cmp
lods
rorb
pop
sbb
add
xchg
mov
ss
cli
or
xor
test
sti
adc
jnp
xorl
lds
lods
jo
shrb
inc
adc
cs
insl
adc
mov
mov
test
jmp
mov
xor
aam
fldl
jns
cmp
fs
lock
mov
std
movsl
lret
jle
mov
sbb
mov
jo
mov
aad
inc
xchg
in
jmp
fs
fldl
mov
cmpsb
inc
xor
movsl
ret
add
push
push
sub
bound
push
inc
mov
jmp
shll
adc
rolb
mov
cs
fs
adc
xchg
inc
xchg
mov
jle
rorb
lahf
loope
movsb
rcll
xchg
shll
sbb
or
movsb
pop
and
jle
fstps
xor
sub
insl
mov
mov
testb
or
xchg
ja
jge
test
aam
xor
cmp
rcrl
jo
push
mov
mov
sub
add
pop
fs
ds
xchg
jns
mov
mov
adc
gs
jge
mov
out
lds
fstpl
imul
pop
inc
inc
sub
dec
and
or
cmp
fnstsw
push
cmp
xor
sbb
shl
pop
sub
addl
sbb
flds
sahf
mov
test
loope
xor
test
mov
adc
sbb
add
cmpsl
repnz
dec
cmpsl
jbe
cld
pop
movsl
pop
dec
mov
mov
fisttpl
and
ja
icebp
popf
leave
mov
ds
out
popf
jecxz
mov
cmc
test
enter
cmc
adcb
pop
ja
fs
add
xchg
sti
mov
cmpsl
cmp
arpl
shll
mov
jb,pn
outsl
mov
inc
in
addl
subl
sbb
es
cmp
leave
pop
jo
cmpsb
cmp
jp
out
sbb
push
cmp
loop
lea
push
mov
aad
jne
stc
mov
jecxz
shl
rclb
or
jo
mull
lods
testb
xchg
xor
mov
mov
test
dec
ret
andl
mov
aam
jne
mov
cmpsb
scas
xchg
add
jo
sahf
insb
dec
cmp
addr16
mov
mov
mov
xchg
adc
lcall
jp
inc
or
mov
and
dec
mov
sahf
ja
cmp
addr16
inc
mov
mov
push
data16
jle
cwtl
inc
test
fldenv
adc
int
push
pop
fdivrs
in
sbb
mov
orb
andl
call
jge
mov
shrl
lahf
adc
cmp
xchg
inc
push
test
push
pop
cmc
shlb
in
into
loope
inc
test
movsl
pop
push
push
sub
mov
leave
out
movsb
lods
lea
mov
aas
outsl
inc
push
xchg
frstor
xchg
pop
loope
testb
test
sbb
xor
pusha
cld
arpl
repnz
sahf
xor
imul
push
sbb
xchg
sbb
pop
out
ja
ret
mov
jge
push
and
lock
mov
arpl
pop
fwait
dec
aas
stos
inc
adc
mov
mov
pop
push
sub
insb
ja
sub
test
subb
pusha
loopne
imul
jecxz
cmp
test
lahf
rorb
or
test
pushw
out
mov
inc
mov
mov
mov
cld
popf
fs
jl
pop
lahf
mov
push
jge
cmc
test
xor
pop
inc
xchg
push
fs
mov
idivb
sbb
dec
outsl
enter
mov
call
sti
repz
idivl
lret
inc
push
inc
mov
jmp
push
jnp
lea
jg
jecxz
jge
xabort
mov
out
mov
rorl
dec
sub
rclb
loop
dec
mov
fdivs
pop
mov
outsb
cli
mov
andl
pop
cmp
scas
shlb
fs
mov
xor
cmp
sub
fiadds
out
pop
fidivs
push
mov
inc
dec
mov
jo
cmpsb
xor
mov
push
iret
rcrl
aas
sbb
test
mov
cmc
das
cs
mov
add
insl
shrb
pop
cmp
fidivrs
std
mov
jno
fldl
sub
cmp
add
fs
dec
testb
imul
jp
stos
mov
jp
inc
sub
insl
stos
jae
add
xchg
pop
rcrb
loopne
out
push
sub
in
sbb
out
mov
loopne
stc
ja
stc
loope
orl
out
xor
stc
pusha
mov
pop
sbb
push
mov
addr16
ja
xor
addr16
ss
add
fistps
and
jge
mov
ds
in
repnz
ss
inc
inc
sub
fisubl
jmp
cmpsb
mov
cmp
ret
test
iret
lcall
mov
in
xor
pop
push
jl
push
paddb
sbb
insl
repnz
fwait
add
fnstsw
inc
scas
xchg
lods
sti
mov
push
bound
or
xor
fisubrs
sahf
shrb
hlt
imul
das
out
or
pop
fstpt
sarb
ljmp
fldl
or
lock
mov
ljmp
xor
rcrb
cwtl
sub
and
ret
xchg
mov
cmpb
inc
cmp
mov
movb
jecxz
xor
outsb
sbb
mov
fisttps
or
pop
loop
clc
aam
mov
psrad
mov
leave
jg
rcr
repz
xor
sahf
dec
jne
xchg
int
xchg
pop
inc
jmp
cmpsl
rol
or
mov
xchg
mov
stos
shlb
mov
rcl
mov
fs
pop
push
in
xchg
push
in
aad
fidivrl
mov
pop
jp
inc
in
pop
xchg
out
adcl
jae
inc
in
or
sbb
dec
xor
out
mov
aad
push
sbb
inc
jo
in
and
jecxz
not
inc
pop
add
sbb
mov
lcall
sub
jge
cmc
insl
push
add
push
je
repz
push
jmp
or
filds
pop
aas
mov
sub
cmpsl
das
sti
call
fildll
filds
pop
mov
push
mov
aaa
stc
ds
scas
pop
mov
adc
lahf
sbb
int
pop
fnstenv
dec
xchg
rorb
mov
xchg
mov
psubw
push
inc
test
xor
pop
dec
into
ret
add
test
outsl
out
negb
in
imull
adc
mov
loop
xchg
in
cmc
inc
iret
ror
out
fisttps
daa
in
lds
mov
daa
jno
or
adc
mov
inc
sub
fists
pusha
testb
mov
cmp
push
inc
mov
movsl
aad
mov
adcl
rcrb
jge
mov
sub
or
add
or
cmp
test
sbb
inc
ja
gs
and
pop
fldl
ret
xchg
shlb
mov
sub
outsb
cmc
sub
sbb
jmp
movsb
dec
ds
aad
call
dec
insl
das
push
out
jo
inc
adc
cltd
mov
sti
mov
outsb
sbb
repz
jae
add
pop
mov
aas
rclb
cmp
loop
insl
cmp
in
les
push
dec
adc
rcr
inc
outsb
push
fimuls
test
or
pop
test
push
cmp
pop
daa
sbb
sahf
push
out
push
mov
pop
sbb
push
shl
inc
and
sub
imul
and
jmp
frstor
bound
rcll
pop
cmp
xor
mov
and
outsb
cmc
fsubp
or
popf
fs
sarb
dec
sub
pop
adc
popf
mov
out
ja
stos
or
sub
push
pop
xchg
ss
call
mov
jns
xchg
andl
jecxz
repnz
xchg
add
lds
mov
push
movsb
push
pop
ja
shlb
lods
into
and
and
cmp
lock
dec
test
adc
in
aad
ficomps
xor
test
lods
gs
mov
xchg
mov
outsl
stos
loope
incl
mov
jb
in
lds
cltd
and
outsl
arpl
rorl
ret
out
dec
pop
in
add
loope
jmp
outsl
fdivr
imul
cs
push
dec
jge
lahf
cs
mov
adc
je
call
ficompl
shrb
push
push
push
jle
mov
fisubrs
lahf
mov
cmp
mov
push
outsl
lods
scas
stos
std
mov
out
xor
mov
xor
jge
dec
jp
jns
push
jmp
ss
or
mov
cmp
push
mov
jbe
and
dec
cmp
icebp
inc
adc
or
lret
mov
pop
inc
sbb
andl
push
shll
enter
push
pop
fistpll
adcl
push
sbb
dec
shrb
dec
inc
or
mov
mov
cli
sbb
jb
stos
push
and
push
les
cmp
cs
jno
push
out
sbb
cmp
loop
mov
mov
fdivl
ror
gs
fs
pop
jns
es
bound
mov
lods
cmp
mov
sti
or
xor
jnp
imull
psllw
lcall
pop
push
add
pop
inc
ja
mov
repnz
testb
insl
arpl
or
test
rcrb
icebp
mov
xchg
insb
push
lcall
add
push
adc
dec
jle
cmc
filds
loopne
adc
jle
lds
pop
push
out
mov
add
xchg
push
fisubrs
es
adc
push
js
xchg
shl
lods
mov
mov
push
sbb
loop
xor
pop
jmp
fs
ss
add
xor
push
dec
fists
ja
xchg
push
pop
loop
cmp
movb
mov
xchg
jo
movsl
mov
jns
out
or
cli
xchg
ja
mov
stos
mov
leave
lods
jecxz
rcrl
mov
sbb
sbb
push
fiaddl
clc
sbb
xor
or
jl
out
inc
mov
xchg
and
pop
and
clc
cmpb
jb
fs
repz
pop
mov
and
jb
jne
push
in
cmp
xor
rclb
and
mov
sbb
and
rorl
mov
test
orb
testb
sbb
aad
inc
sub
popf
push
adc
adc
mov
test
fnstcw
xorb
add
loop
test
shrl
pop
mov
jge
mov
push
imul
cmp
cmpsl
mov
clc
push
and
push
mov
mov
nop
frstor
test
insl
inc
vpmulhw
add
push
adc
and
cli
sub
add
mov
aas
mov
cmp
out
sub
imul
and
data16
jmp
adc
mov
mov
jb
pop
add
in
rclb
ljmp
nop
mov
rol
mov
xor
lret
dec
mov
add
test
mov
cmpl
shl
scas
into
mov
adc
xchg
pop
fsubrl
xchg
mov
mov
mov
pop
test
mov
cmp
mov
jae
jns
pop
pop
shlb
lods
mov
aad
jne
in
mov
bound
adc
in
call
movsl
out
xchg
fidivrs
pusha
dec
add
inc
sub
scas
in
scas
test
jne
jae
enter
mov
pushf
add
mov
mov
sub
adc
mov
scas
notb
jge
scas
aad
mov
mov
rol
and
mov
rorl
addl
dec
xchg
sub
cmp
dec
jnp
iret
jb
or
out
icebp
adc
xlat
jne
adc
in
mov
mov
xor
mov
dec
fs
rcrb
jg
inc
mov
faddp
ds
push
sbb
mov
xorb
and
aad
mull
shll
jns
icebp
cmpsb
fcoml
xor
mov
mov
mov
xchg
cmc
out
ja
xor
ret
inc
push
pop
mov
sub
or
xchg
mov
js
in
jae
jge
mov
mov
jecxz
xlat
cmpsl
in
mov
xchg
in
stc
ja
sbb
xor
inc
mov
shll
add
std
push
ret
aaa
and
inc
add
xchg
xlat
jmp
jno,pt
mov
add
stos
pop
out
rcrl
lahf
xor
push
ljmp
jle
ja
jle
ja
outsb
mov
sbb
dec
jg
out
push
jg
out
pop
jg
out
pusha
jg
out
push
mov
sub
add
and
sbbb
jne
cli
scas
leave
iret
add
cmpsl
mov
repnz
and
pop
test
popa
adcb
add
loop
xchg
pop
cli
cmp
rolb
addr16
mov
mov
xor
loop
cmp
adc
mov
int
scas
cmpsl
andb
xchg
jg
scas
add
popa
push
lea
add
sbb
inc
lods
pop
loopne
push
jns
add
addl
aaa
cmpsb
daa
std
jle
mov
jns
cmc
aas
scas
dec
jecxz
dec
adc
popa
or
frstpm(287
inc
xchg
or
lock
cmp
repnz
sbb
lock
push
push
stos
std
daa
mov
xor
das
pop
sbb
jg
xor
repnz
xor
jge
add
jnp
insb
aaa
inc
xor
addl
repz
mov
mov
adc
add
mov
adc
sub
addr16
scas
outsb
add
sbb
mov
pop
popa
loopne
stc
out
out
rol
sti
jge
jno
xchg
fldt
decl
adc
jmp
pop
push
mov
or
push
or
shll
test
xor
sahf
xchg
adc
lea
jecxz
mov
jae
or
sti
pop
mov
mov
push
pop
cmp
adc
repnz
jne
addr16
sub
loope
stos
mov
adc
enter
sbb
add
fcompl
pushf
scas
rorl
mov
movsl
pop
sbb
daa
pushf
inc
pop
mov
dec
or
push
jno
jne
cmp
fdivs
iret
in
in
daa
test
repz
push
imul
in
mov
pop
push
mov
ficompl
xor
scas
mov
hlt
out
js
add
iret
cmp
data16
xchg
pop
ficomps
iret
test
inc
pop
lds
ja
jnp
addr16
or
pop
test
fldcw
rorl
test
stos
pop
jae
fs
cli
in
jge
lock
jns
cmc
sbb
xor
fdivrp
ret
jnp
cmpl
daa
sub
dec
push
out
mov
pushf
scas
popf
in
mov
outsl
scas
jbe
lahf
ret
push
xchg
mov
test
add
inc
and
stos
clc
faddl
frstor
scas
inc
sarb
fidivrs
cmp
loop
pop
pop
out
or
icebp
das
dec
jmp
or
addb
aad
pcmpeqw
cmp
xchg
cs
insl
inc
out
ds
filds
dec
data16
out
mov
lods
push
rclb
gs
push
test
dec
pop
vshufps
and
aaa
mov
sub
cltd
loope
icebp
add
add
inc
cmpsb
mov
sti
int
jg
jne
fadds
xchg
fwait
inc
sbb
repnz
cmp
mov
sti
popf
loopne
mov
and
jmp
pop
add
out
repnz
mov
cmp
call
cmp
fstl
rclb
cs
sarb
mov
fildll
dec
bound
adc
inc
mov
std
std
negb
leave
adc
jb
add
push
dec
jbe
dec
out
or
adc
xchg
or
xor
xchg
outsl
fwait
imul
and
fimull
outsl
cmc
nop
out
std
xchg
pop
shl
daa
leave
adc
mull
pop
fimuls
mov
xor
sbb
cld
imull
ss
adc
or
cmpsl
add
mov
jmp
xor
mov
into
aaa
rolb
pop
into
cmp
shl
sbb
xorb
mov
sarb
jmp
cmp
aad
iret
test
mov
mov
push
push
mov
add
add
push
je
mov
cld
mov
leave
pushl
fsubrp
dec
push
xor
jns
cmp
addr16
out
sbb
xchg
call
test
int
jmp
mov
mov
pop
mov
subl
pop
dec
pop
test
push
fwait
sbb
jb
push
push
arpl
push
cmp
in
xchg
inc
scas
xor
sbb
lock
pop
test
test
ficoml
lcall
dec
xorl
jecxz
adc
mov
insl
inc
fcmovu
in
lods
out
test
loop
mov
stc
out
fwait
pop
bound
mov
cmpsl
fsts
mov
ljmp
in
mov
subl
inc
mov
cmpsl
adc
loope
jle
mov
fs
outsb
test
ja
push
repz
sbb
push
mov
xchg
pop
jmp
add
test
insl
jae
dec
push
addr16
sarb
sar
sbb
out
insb
imul
repz
mov
fnstsw
mov
push
push
fs
pop
popa
or
sbb
decl
int3
mov
icebp
mov
jecxz
aad
xchg
inc
in
xor
sub
iret
scas
mov
adc
sbb
fwait
data16
stos
cmp
fucom
ret
cmp
fistps
sbbb
cli
pop
stos
sbb
dec
test
cmp
js
es
fnstsw
cmp
jae
jg
fstl
fwait
xor
leave
js
inc
pop
lds
mov
mov
stc
enter
or
mov
fwait
cltd
out
inc
cs
repnz
push
aam
dec
fnstcw
xor
aas
mov
xchg
stos
scas
cmp
add
repnz
xchg
add
mov
and
sub
add
cli
nop
mov
jecxz
loope
jp
xchg
mov
imul
test
dec
aad
jecxz
mull
outsl
dec
push
lods
cmp
pop
insb
jnp
inc
add
jecxz
inc
sbb
pop
xlat
insl
or
ds
inc
bnd
cltd
and
fidivrl
fs
stos
pop
loop
neg
pop
sti
test
fbstp
xor
sbb
pop
in
sbb
frstor
cmpsb
mov
xchg
sub
daa
in
mov
mov
les
dec
data16
push
stos
ja
mov
sbb
mov
inc
jge
xchg
pop
mov
jge
pop
adc
movsl
add
jl
add
or
fcom
movsb
mov
clc
lahf
jbe
and
xchg
inc
add
sub
lods
xchg
lds
lods
addr16
out
call
scas
test
pop
jae
aad
push
add
es
pop
mov
pop
sub
cmp
sub
scas
mov
not
rcr
push
mov
decb
sbb
or
add
out
cmp
mov
xchg
mov
pop
ss
arpl
enter
paddusw
mov
fs
mov
dec
inc
cmpsb
jmp
dec
cs
push
and
test
jne
adc
js
icebp
mov
jne
xchg
outsl
sahf
sbb
out
inc
sub
gs
out
cmpsl
push
aaa
in
stc
mov
aaa
inc
ja
jp
or
jns
sbb
lea
and
icebp
lods
xchg
xchg
mov
daa
cmp
fstl
and
pop
and
jae
adc
cs
xchg
cmp
or
rol
rcll
mov
xlat
in
rorb
xchg
out
xlat
mov
adc
fisubs
mov
dec
jns
push
sbb
push
mov
sbb
mov
rol
jbe
pop
je
dec
push
inc
lds
mov
stc
rolb
pop
imul
or
push
add
push
mov
xor
add
lds
lods
inc
rcrb
in
bound
mov
and
mov
test
xlat
stos
adc
jecxz
sbb
sbb
in
mov
dec
out
cwtl
mov
lret
fsubrs
and
and
jno
add
dec
adc
xchg
mov
mov
jp
or
vpxor
int
test
or
inc
es
push
es
inc
loop
loop
shl
fbstp
xlat
push
mov
inc
or
pop
add
shl
leave
js
out
mov
std
xchg
fisubs
pushf
out
push
popf
loopne
out
shlb
cmc
jb
xchg
outsl
jno
jae
push
push
cmc
inc
jo
aaa
mov
mov
pop
sub
popa
sbb
jmp
pop
mov
out
hlt
mov
xchg
jno
push
push
jecxz
data16
sbb
pop
pop
mov
sub
pop
pop
cltd
ljmp
xor
cli
dec
mov
xchg
or
jb
dec
sbb
mov
inc
aad
cs
movsl
sti
jne
mov
mov
in
and
fcom
ja
jbe
and
push
mov
xlat
out
loopne
out
cmp
aaa
mov
mov
shl
cwtl
mulb
pop
popf
mov
shrb
cmpsl
dec
insl
pusha
mov
fisttpl
pop
test
insb
cmp
daa
cmpsb
in
addr16
xchg
mov
cmc
push
and
or
xor
mov
push
add
lds
jbe
rcll
mov
xchg
pop
loop
repz
lahf
mov
inc
loop
loope
mov
pop
jecxz
popf
popa
cmc
rcr
mov
cmc
pop
xor
fiadds
inc
xchg
std
dec
push
pop
inc
mov
mov
xor
pop
mov
adc
dec
cmp
in
repnz
pop
pop
push
aam
fs
cmpsb
in
adc
adc
cmpsb
imul
push
in
xchg
cmpsl
dec
addr16
aam
pusha
inc
push
mov
push
imul
dec
imul
mov
out
movsl
das
pusha
inc
cmpsb
xchg
dec
and
adc
or
decl
iret
mov
xchg
cmp
jae
lods
sub
ja
jecxz
sbb
xchg
xchg
fst
imul
sub
sub
loop
arpl
ja
aaa
adc
mov
mov
inc
test
and
mov
cs
inc
ret
add
test
pop
rorb
insb
jecxz
or
out
mov
pop
js
das
std
dec
jge
sarb
add
mov
ja
out
mov
mov
fs
mov
mov
lea
adc
jecxz
and
and
xchg
andb
or
adc
lea
or
addr16
xchg
dec
add
loopne
dec
ficomps
sahf
pushf
fs
out
lds
sahf
push
dec
into
fcomp
std
and
leave
jbe
clc
or
sar
rcl
sub
stc
push
fstpt
stc
inc
jecxz
sahf
popfw
add
jecxz
adc
mov
and
jmp
out
rcrb
and
arpl
rol
add
gs
aas
mov
dec
rolb
loop
jo
faddp
in
push
or
mov
xchg
xor
mov
sub
and
or
fwait
sub
inc
cmp
xor
je
xchg
mov
xor
in
and
scas
mov
xchg
dec
and
gs
scas
fwait
insb
inc
sub
push
scas
and
aaa
xor
jecxz
repz
dec
cld
jle
enter
or
sub
cmpl
jge
mov
lock
dec
jae
cld
add
lock
test
pop
loopne
push
shll
mov
cmpsl
lret
push
ja
out
jns
neg
pushl
push
adc
bound
bound
ja
jae
ror
jne
sarb
jle
insb
and
aas
and
dec
jo
xorl
sub
mov
scas
push
sbb
ja
add
sbb
xor
arpl
into
stos
sub
push
cmpsb
cs
std
jl
jecxz
es
repnz
mull
push
scas
movl
adc
jl
adc
mov
out
cmp
dec
test
pop
or
popa
jno
daa
mov
popf
and
xchg
into
dec
ret
das
xchg
push
mov
fidivs
push
repnz
cwtl
and
or
and
cmp
iret
mov
xlat
pop
mov
out
add
add
cmc
in
pop
push
inc
enter
add
xchg
aas
sarl
jle
jb
hlt
push
pop
nop
or
xchg
cmpsl
push
fs
push
mov
jbe,pn
loopne
xchg
movsb
dec
and
mov
rol
push
jb
xchg
pop
or
rol
sarl
fisubl
dec
lahf
lods
data16
xchg
jmp
inc
mov
adc
sti
out
lds
enter
xchg
jb
imul
sbb
testb
sbb
adc
arpl
cmpsb
out
cmp
lret
xor
ja
add
xchg
ss
jnp
mov
lahf
int
mov
stos
iret
sbb
xchg
inc
cs
mov
jmp
sbb
pop
mov
es
pop
test
mov
int
xchg
adc
pop
out
negb
imul
mov
pop
ds
iret
call
cmp
inc
pop
mov
cmc
mov
pop
iret
icebp
pusha
mov
shlb
pop
sbb
and
jmp
stos
add
jae
addr16
add
fiaddl
getsec
in
out
fnclex
test
or
xlat
xchg
cmp
mov
xchg
dec
divl
pop
in
xchg
pop
inc
jge
scas
mov
ja
in
test
fisttps
push
add
ds
stos
lods
mov
idivl
add
cs
out
sub
push
and
std
sub
jb
cmpsl
xor
jecxz
sbb
dec
dec
push
inc
ds
test
sarl
ds
mov
test
xchg
push
imul
mov
andl
dec
jmp
dec
pop
jg
push
aad
out
sbb
in
fwait
cmp
sti
xchg
sbb
ja
and
call
mov
push
or
pop
stc
addr16
scas
mov
xlat
push
loopne
shll
sub
pushf
ret
in
aad
ja
test
sbb
out
xchg
nop
ret
adc
hlt
pop
inc
jle
mov
sub
add
idivb
jg
ret
arpl
mov
insb
xchg
fstl
dec
andb
xchg
lods
dec
lds
mov
sbb
aad
in
lods
cld
mov
lret
mov
adc
ja
push
xchg
mov
mull
pop
pop
adc
out
cli
pop
lahf
lahf
les
inc
xor
cld
sub
ret
es
cld
je
pushl
xlat
out
push
push
stos
ss
add
dec
cmp
add
and
and
push
cld
pop
and
add
shll
icebp
fimuls
loop
add
xor
adc
mov
pusha
daa
lds
mov
cmp
fiadds
lock
cmp
ja
int3
scas
mov
sub
sub
push
add
insb
push
leave
push
add
jg
fistpll
lea
xchg
pop
mov
xchg
pop
mov
insl
rclb
daa
fisubrs
pmuludq
inc
scas
inc
lea
outsb
sub
inc
add
xor
lock
mov
mov
mov
add
es
hlt
push
fiaddl
repz
mov
sahf
or
pop
jno
popa
aas
fistps
ja
arpl
and
jno
mov
cld
jmp
aam
push
mov
xchg
mov
and
in
repnz
std
or
or
add
jns
mov
add
mov
test
cmpsl
mov
testb
inc
idivl
cmp
cltd
adc
out
add
imul
ds
xchg
enter
sbb
mov
ja
dec
ja
and
or
push
mov
cs
outsl
gs
jns
es
imul
push
adc
ja
icebp
sbb
mov
mov
push
js
push
jae
add
outsl
pop
push
ja
scas
cmp
or
xor
mov
test
cltd
mov
add
mov
mov
imul
lret
push
dec
mov
popf
xlat
fidivrs
jmp
and
test
jnp
mov
cmpsb
xchg
mov
xchg
mov
pop
and
dec
pop
fistpl
imul
mov
outsl
test
xchg
movl
cli
addr16
rcll
sub
ds
pop
test
lock
shll
out
adc
jae
sbb
xchg
dec
lods
adc
std
pop
jle
hlt
out
out
arpl
xor
lods
icebp
aam
inc
mov
dec
add
inc
nop
sbb
out
fs
and
ffreep
mov
jle
or
int3
fcompl
pushl
jl
mov
mov
jge
mov
xchg
mov
dec
mov
xchg
xchg
insb
xchg
test
out
jb
pop
movsb
daa
cmpsl
mov
stos
shrl
inc
sbb
add
cmpsl
aaa
shlb
pop
movsl
lret
ja
stos
fucomp
fwait
les
lods
repnz
inc
insl
sbb
in
test
mov
movsl
xchg
pop
inc
lods
and
mov
loope
inc
mov
insl
mov
in
popf
jp
ja
fistpll
pop
mov
xchg
fwait
test
cmp
adc
jmp
in
loopne
out
es
mul
test
sub
ja
test
adc
test
ds
arpl
cmp
mov
outsl
aam
and
addr16
notl
ficoml
xor
pop
inc
out
xchg
shrl
sbb
pushl
pop
aaa
ljmp
xor
and
ja
jecxz,pt
shl
insl
pop
rclb
out
hlt
adc
cmpsl
pop
insl
imul
fwait
mov
aas
jge
push
cwtl
aaa
loope
testl
test
notw
dec
xor
rorb
pop
mov
xchg
andb
mov
adc
xchg
dec
lds
mov
pop
xchg
lcall
or
and
mov
fstpl
gs
cmc
jb
mov
mov
fwait
jge
ja
icebp
pop
mov
mov
xchg
leave
fstpt
pop
mov
cmp
test
shrb
sbbb
mov
mov
adc
mov
fmull
int
test
mov
and
cmp
lret
jbe
mov
xchg
sarb
xchg
mov
addr16
daa
aam
imul
inc
mov
arpl
sbb
scas
std
rclb
cli
in
push
fbstp
lds
mov
inc
test
fwait
inc
push
movsb
inc
test
adc
sub
cmpsb
pushf
jge
shll
outsl
jnp
mov
jge
mov
dec
pop
and
cld
sbb
mov
mov
shll
dec
mov
sbb
lret
into
jecxz
nop
in
pop
push
jb
ja
leave
movsb
and
inc
pop
add
fldenv
test
lods
imul
xor
shlb
jge
lods
rcrb
enter
ds
xor
or
andl
shlb
dec
stc
xor
pusha
jl
or
gs
push
jne
rcl
lea
out
ss
mov
iret
daa
xor
jge
sub
ror
mov
addr16
jns
cmpsb
hlt
iret
loope
mov
or
out
test
test
ss
fadds
inc
or
xchg
push
data16
stos
loope
push
call
xchg
sub
outsb
jno
lds
sub
gs
pop
mov
push
es
inc
out
or
push
xchg
mov
sbb
pop
jnp
sub
das
ret
fwait
sbb
or
sub
or
push
adc
lret
es
sbb
lahf
std
push
sbb
mov
mov
dec
stos
mov
fwait
in
xchg
ret
push
stos
loop
gs
loop
cmp
fwait
push
and
push
add
ja
dec
lret
push
pop
dec
jns
inc
mov
test
inc
or
dec
cmp
inc
jmp
push
or
cmpsl
es
iret
pop
in
fistl
test
pop
pop
mov
shr
cltd
fldt
rol
fwait
or
mov
rclb
sti
mov
jmp
jp
pop
shlb
ljmp
mov
mov
test
cmp
pop
incb
bound
nop
jbe
xchg
outsl
dec
jne
lds
xor
sbb
incb
lds
or
xor
out
mov
pop
lock
mov
mov
outsb
out
jmp
fs
es
fs
cli
insl
das
mov
mov
fidivrl
xchg
popf
test
cs
js
addr16
notb
jns
out
jle
jmp
arpl
add
jno
pop
sarb
mov
shlb
frstor
cli
enter
add
daa
mov
sub
sub
inc
jg
shl
cmp
int3
ds
insb
push
data16
bound
and
jmp
pushf
push
inc
fidivrs
mov
fsubs
cmp
mov
cmpsl
fsubrs
outsl
std
sub
xchg
inc
jl
mov
mov
arpl
lds
inc
rcrl
inc
cmp
repnz
fwait
imulb
test
jnp
add
jle
inc
mov
push
dec
and
cwtl
xchg
jbe
jmp
int
mov
sbb
ret
rcrl
xor
fs
jge
test
dec
int
xor
cmc
jle
push
pmaxub
stos
cld
xchg
pop
cli
test
pusha
sbb
aad
insl
push
into
inc
sub
hlt
stos
and
iret
add
imull
dec
lea
inc
jle
fwait
sub
dec
push
outsl
imul
insl
xchg
dec
jg
popf
in
or
jne
adc
fdiv
fs
int
icebp
pop
cmp
scas
sbb
aas
mov
frstor
jo
cmp
test
sti
hlt
out
mov
pop
pop
jg
aad
imul
push
mov
cmp
xchg
cmp
addl
loop
push
ficoms
mov
mov
lods
xchg
movsb
out
pop
scas
inc
das
xchg
pop
andb
fcmovnb
push
push
gs
inc
ficompl
adc
inc
ret
sbbb
imul
fwait
inc
outsb
nop
jecxz
lods
insl
xchg
xor
add
fs
push
sub
sbb
push
push
insl
addr16
cmp
movsb
call
movsb
cmp
sarl
out
xchg
mov
outsl
mov
test
adc
aaa
imull
sub
js
or
scas
push
int
mov
icebp
mov
inc
xchg
out
xchg
lea
mov
and
cmpsb
jg
ja
jo
out
outsl
scas
icebp
addb
mov
mov
gs
xchg
aam
lods
xchg
testl
cltd
in
sbb
mov
mov
loope
in
pop
or
push
cs
es
addr16
jnp
cmp
or
out
sti
data16
mov
xchg
add
mov
and
aam
cmp
cmpsb
and
pusha
cmp
push
mov
imul
rcl
mov
test
add
ljmp
mov
push
sub
sub
dec
pop
nop
xchg
xchg
test
out
mov
jo
lock
arpl
inc
xchg
or
mov
push
iret
mov
adc
add
xchg
sbb
mov
test
seto
mov
push
mov
mov
xchg
dec
sub
xchg
add
ret
push
xchg
in
fwait
pop
inc
into
leave
cwtl
in
loope
adc
stos
add
add
adc
mov
mov
pop
popa
jge,pt
adc
adc
jnp
nop
xchg
pop
cs
cmc
imul
mov
stos
mov
fstpl
or
movsl
dec
xchg
cmp
ret
mov
xchg
enter
fstps
inc
cmpsb
out
outsb
mov
gs
pop
ret
mov
push
inc
push
mov
es
lahf
push
in
test
out
mov
sbb
bound
not
popf
fnsave
jecxz
inc
inc
aad
rclb
xchg
push
lds
pusha
sub
mov
inc
jne
cmpsb
mov
sets
repnz
xorl
leave
mov
popa
dec
stos
es
mov
mov
stc
push
sub
sahf
movsl
and
jae
cmp
in
pop
mov
or
mov
add
and
clc
jecxz
dec
dec
aaa
jnp
and
mov
sar
out
sarl
adc
hlt
aam
cmp
mov
xchg
das
xchg
nop
xchg
mov
imul
es
jmp
cwtl
cmp
in
mov
fdivs
mov
xorb
xor
push
inc
stos
arpl
std
in
adc
and
outsl
push
jnp
ret
inc
test
xor
xchg
out
xchg
call
es
test
cmpsl
mov
divl
mov
and
loopne
daa
sub
cmpsl
in
icebp
out
mov
push
sbb
mov
jmp
fdivl
ja
add
inc
mov
sub
cmpsb
imulb
lds
mov
sbb
lret
pop
stos
fisubrs
fdivl
out
jbe
in
jge
ret
aad
lea
inc
cld
xchg
stos
cmp
imulb
jne
pop
lods
sub
cld
out
dec
rolb
mov
mov
dec
mov
cmc
xor
adc
xor
mov
push
add
and
daa
push
test
cltd
cmpsb
scas
pusha
mov
xchg
sti
jns
mov
neg
sbb
fnsave
mov
fs
rcrb
pop
mov
in
aam
mov
in
mov
mov
into
add
or
push
mov
shl
scas
out
jne
sar
add
adc
mov
push
dec
shrb
addr16
test
hlt
mov
outsb
movsl
movl
cmpsl
ja
ja
jmp
push
in
push
std
dec
adc
or
mov
loop
xor
shlb
test
cmp
movsl
fptan
in
and
cmpsb
push
lret
jmp
shlb
sbb
xchg
fisubrs
cld
insl
xchg
negb
sub
pop
fcompl
cmp
sbbl
xchg
and
pop
out
pop
outsl
push
cmpsl
cmpsl
add
xlat
and
mov
imul
mov
imul
enter
sti
int
xchg
adc
xor
in
dec
aaa
jns
push
out
js
inc
push
scas
xchg
fwait
xlat
xchg
jmp
mov
xlat
repnz
bound
data16
rol
stc
xchg
mov
sahf
inc
jecxz
dec
mov
test
inc
pop
popf
arpl
lea
imul
push
cld
inc
mov
mov
mov
pop
mov
mov
clc
cltd
xor
mov
sub
inc
cmpsb
xchg
shl
add
and
into
inc
nop
sbb
mov
xchg
xchg
lea
jne
clc
fildll
pop
sbb
sbb
std
xchg
push
add
and
pop
fnstenv
sub
mov
or
add
pop
icebp
loop
add
ljmp
sahf
xchg
xor
mov
cs
jge
mov
fwait
inc
cli
leave
mov
dec
gs
clc
int3
cli
outsb
push
xchg
mov
and
insb
pop
addr16
inc
sbb
and
pop
nop
mov
cmp
je
and
cld
xor
xchg
outsl
xchg
jg
enter
fwait
jno
mov
jbe
sbb
inc
inc
fprem1
or
paddd
jle
xor
fisubrs
out
sarl
adc
cmpsb
fs
lds
cld
popa
jmp
xor
adc
xor
jo
daa
shl
xchg
cmpsb
cmc
jl
cmp
xorb
fwait
popa
test
inc
mov
mov
and
push
enter
outsb
jno
mov
dec
jb
in
cli
int
fsubl
pop
jbe
jns
pop
and
fsubrs
stos
cltd
test
sarb
cmp
movsl
into
cmp
inc
rcl
and
sbb
in
mov
adc
std
push
sbb
push
aam
jb
fwait
ret
dec
les
subl
mov
loop
sbb
fs
xor
sahf
mov
lods
in
rcrl
aaa
ss
in
xor
addb
push
xchg
mov
and
ret
xchg
ficomps
xor
daa
xor
sbb
and
int3
mov
rcr
enter
xchg
pop
mov
aas
dec
mov
sbb
xlat
pop
out
mov
mov
push
daa
test
adcl
lcall
insb
ficompl
add
insb
push
fisubs
lods
or
int
mov
es
scas
dec
stos
jae
sub
sbb
idivb
or
les
sub
add
cmp
dec
test
push
mov
js
push
into
adc
add
cmp
hlt
ret
dec
push
inc
jecxz
jno
mov
pop
dec
stos
mov
mov
test
sti
icebp
cmpsl
inc
mov
std
in
out
and
push
in
hlt
cs
fs
dec
mov
push
mov
in
jle
xor
testl
decb
lds
movl
les
mov
jg
ja
jbe
and
and
jl
adc
add
mov
xchg
lds
xor
push
loopne
test
stc
push
mov
js
inc
mov
mov
dec
push
or
inc
add
js
ficompl
mov
clc
jo
test
inc
neg
in
bound
fsubr
test
sbb
shl
or
push
xlat
out
aas
fnsave
mov
sbb
jl
cmc
cmp
sub
inc
mov
xor
adc
pop
cmp
xor
dec
push
sbb
inc
lea
inc
insb
pusha
pop
jnp
fwait
cmpsb
jge
or
mov
aad
jecxz
pop
or
out
xchg
and
add
test
movsl
xchg
scas
xlat
out
mov
loop
fisttpl
mov
std
ja
int3
divl
mov
out
add
rclb
xchg
out
jb
fs
jge
ja
sbb
adc
dec
in
cmpsl
xchg
cld
mov
jnp
test
dec
ja
rclb
rcrb
cmp
pop
add
and
xor
aad
sbb
xchg
js
add
jbe
in
out
fldt
jmp
inc
ret
imul
mov
mov
pop
and
push
movsbl
addl
adc
in
inc
xor
xlat
or
sbb
movsl
stc
mov
outsl
xchg
jle
popf
xchg
pop
add
cmc
fimuls
xchg
inc
xchg
jge
mov
push
mov
andl
out
inc
sbb
push
leave
mov
add
shlb
add
cmc
aaa
lds
and
lods
push
sbb
jae
mov
imul
pop
dec
fwait
xchg
in
and
jmp
loope
add
addr16
xchg
ljmp
stc
mov
fbstp
ret
pop
sub
xchg
pop
call
sarb
jp
insb
enter
dec
fstl
inc
sbbb
shll
aam
loop
pop
sub
or
sarb
pop
mov
in
and
ffree
xchg
movsl
inc
call
insl
les
pop
cmpl
lds
xchg
dec
sbb
in
mov
lret
ret
int
aad
mov
xor
jp
out
aaa
mov
data16
addl
or
push
dec
int3
add
add
dec
fs
rcrb
fildll
xor
cmp
test
ret
mov
ds
mov
outsb
mov
push
mov
mov
mov
pop
lods
into
dec
testb
insl
add
aas
rorb
into
mov
or
push
mov
repnz
mov
insl
adc
push
daa
and
fdivs
dec
jmp
notb
clc
mov
jbe,pt
jl
in
adc
add
fidivrs
jno
cmpb
or
inc
lcall
lods
pop
dec
add
mov
in
nop
mul
mov
inc
les
outsb
lahf
into
or
nop
shll
cmp
sbb
mov
mov
gs
xchg
shl
and
adc
out
fstpt
mov
stc
mov
imul
mov
xchg
out
dec
pop
sub
xor
rcll
cltd
pushl
and
insb
iret
fsub
scas
imul
cltd
test
jbe
in
sub
stc
mov
mov
out
dec
call
mov
xchg
xchg
fwait
in
shll
adc
jge
xchg
fdiv
int
dec
inc
jl
xchg
scas
push
scas
icebp
out
roll
push
xchg
add
in
in
ja
filds
mov
mov
imul
mull
test
adc
dec
iret
sahf
test
test
loop
shr
in
cmpsb
lods
test
jne
mov
sbb
in
mov
in
add
jg
sti
inc
xchg
sbb
test
in
sub
pop
add
dec
add
test
mov
adc
test
adc
int
mov
popf
mov
arpl
sbb
andb
xchg
xor
jmp
pop
loope
cli
fwait
sbb
int
fiadds
std
add
dec
sub
ljmp
test
lret
in
sahf
out
lock
mov
jne
loope
je
ss
xor
lea
negb
mov
ss
ja
mov
mov
dec
xor
sub
out
out
xor
test
scas
scas
push
and
cld
out
fisubl
iret
arpl
addl
rol
push
in
ficomps
mov
aaa
jne
out
pop
cmpsb
add
fistpll
dec
add
fistpll
popa
out
ret
cmc
lds
int3
lods
cmpsb
pop
mov
mov
shlb
fwait
cmpsl
sub
stc
adc
mov
mov
mov
fcompl
scas
cmpsl
test
inc
rolb
or
out
dec
arpl
adc
ficoms
stos
push
movsb
push
bound
xchg
lods
pop
xchg
rol
jae
mov
mov
jae
or
jno
cmc
fs
pop
jne
aam
jo
push
test
loope
pop
jmp
xor
mov
mov
mov
rolb
ret
push
lods
leave
ja
data16
ja
xor
cmc
stos
dec
popf
or
dec
sbb
inc
mov
scas
outsb
add
sbbb
outsb
mov
inc
fs
int
sbb
adc
jb
lods
daa
shll
jae
adc
xor
sbb
rcrl
in
inc
jae
adc
xchg
mull
push
fwait
mov
scas
test
stos
ljmp
mov
movsb
mov
dec
mov
xchg
mov
ja
mov
push
cs
cmp
fadd
outsl
cmp
mov
aad
shll
out
sbb
sub
inc
push
xor
xchg
xlat
sahf
jne
in
add
test
stos
dec
add
xor
fwait
insb
sbb
cmc
repz
stc
test
subb
lods
push
sub
add
scas
scas
dec
test
rol
sbb
loop
adc
or
mov
jecxz
mov
or
icebp
jmp
pop
mov
adc
rol
fdivp
ret
out
jne
push
or
mov
rcrb
or
jae
imulb
in
add
roll
jmp
cmp
repz
mov
ret
pop
sti
inc
rcl
jae
les
stos
imull
jle
scas
and
pop
loop
ds
pusha
lret
testb
shrb
loopne
dec
inc
jae
jg
push
es
movb
mov
add
mov
test
aad
push
jne
jno
mov
dec
cmp
scas
testb
scas
push
xchg
jmp
push
test
inc
xchg
faddp
adc
inc
jno
adc
jae
mov
lods
insb
gs
repz
sbb
jge
popf
aas
inc
pop
sub
dec
and
fld
data16
nop
mov
fisttps
adc
mov
out
fsubl
jmp
pop
loope
shll
cld
adc
iret
ljmp
test
mov
ffree
andl
aad
ja
pop
push
push
jp
jl
sbb
push
outsl
mov
add
add
rcr
fsubp
test
sbb
test
nop
push
test
roll
stos
into
aaa
rcrl
popf
fcmovb
xor
fistps
les
cmc
lock
pusha
mov
icebp
enter
ja
sti
add
cs
in
xlat
movl
arpl
loop
inc
jbe
aas
ret
jecxz
std
fs
fimull
das
jnp
in
and
xlat
loope
rol
repz
popa
cmpl
lods
sbbl
mov
daa
dec
dec
pop
popf
sti
pop
lcall
xorl
cmp
addr16
jp,pt
ja
mov
scas
sub
sub
xor
movsl
aaa
xchg
aam
aad
popa
xchg
bnd
inc
out
xchg
movsb
rcll
inc
aas
loop
nop
loop
cmpsb
pop
pop
outsl
mov
adc
test
daa
sbb
xchg
aaa
sbb
cld
mov
in
iret
inc
or
outsl
in
xchg
fldcw
inc
pop
mov
lahf
xchg
addl
inc
and
cmp
or
jnp
shll
and
shr
and
adc
cmp
sti
lret
inc
cmpsb
jns
and
loop
ds
dec
incl
leave
or
ja
sar
hlt
fisttpl
inc
xchg
fstl
pop
outsl
inc
mov
cmp
popa
mov
loope
int3
jns
cmc
cmp
pop
jge
xchg
mov
fsubp
push
dec
out
sbb
add
in
adc
xchg
movsl
xchg
lods
stos
or
cltd
inc
jl
mov
shll
or
and
in
in
mov
xchg
lds
mov
or
add
insl
lret
jae
adc
rorb
imul
mov
pop
cmp
jge
xchg
movsb
cmp
adc
mov
xchg
xor
jecxz
in
test
pop
addr16
movsl
test
addr16
push
or
mov
test
movsl
cmp
movb
jne
pop
imull
in
mov
insb
xchg
loop
sbb
push
add
dec
or
cmp
cwtl
lret
fs
jb
dec
movsb
mov
ret
inc
out
popf
push
jae
mov
adc
inc
gs
pop
jecxz
inc
mov
inc
fsubrs
rcrl
repnz
xchg
test
nop
scas
cmpsb
test
in
push
into
dec
xchg
jo
in
test
data16
repnz
push
sbb
mov
decl
nop
sbb
pushf
addl
sbb
nop
mov
sti
mov
xor
cmc
cmp
loopne
scas
jo,pn
negl
rcrb
arpl
addr16
or
inc
fsubp
xchg
xchg
repz
adc
xchg
ds
leave
mov
idiv
mov
mov
xor
iret
loope
arpl
sahf
mov
and
push
and
out
dec
and
sahf
jnp
outsb
aaa
pop
and
jno
mov
gs
movsl
fdivrl
fucomip
jge
shlb
imul
movsl
popa
push
cmpb
pop
jp
pop
jnp
inc
mov
scas
jno
lcall
xchg
add
sub
fidivrs
ja
dec
stos
dec
insl
out
lock
mov
pusha
dec
xor
repnz
outsb
imul
jo
adc
pop
dec
pop
or
mov
jae
xchg
cmp
aas
and
xor
pop
insb
pop
mov
xlat
cmp
jecxz
out
pop
imul
enter
push
jge
ja
mov
outsl
cmp
nop
jecxz
popf
dec
test
dec
test
mov
xchg
cmp
inc
push
pop
das
inc
out
inc
mov
xchg
mov
cmpsl
pusha
mov
ficompl
or
or
shrb
fwait
adc
fdiv
cs
lds
xchg
adc
inc
lock
lock
sbb
sub
xchg
add
addr16
jbe
out
inc
xchg
fucomp
lahf
arpl
jg
jbe
ret
movsb
negl
aad
xorl
inc
cmp
pop
and
frstor
push
push
out
cmp
data16
arpl
inc
loop
cmp
incb
fwait
mov
sbb
jge
jno
cmpsb
fildll
and
cmpsl
test
frstor
sahf
scas
jp
mov
subl
fidivrl
out
jge
divb
add
jnp
jne
inc
shrl
push
push
sub
dec
or
inc
jge
outsl
pusha
jno
sarb
ljmp
fdivl
adc
jnp
scas
int3
cli
cmp
divl
in
aad
push
jbe
pop
loopne
push
test
addr16
mov
loopne
ljmp
jae
push
lahf
mov
call
xchg
push
addr16
jno
gs
fldenv
mov
dec
jge
daa
fldenv
lret
jl
mov
scas
fwait
cmpsl
add
clc
or
fsubrl
mov
cmpsl
push
and
sbb
pop
lea
test
loop
out
outsl
cmpsb
bound
jns
test
lods
and
and
test
les
arpl
mov
aaa
stc
fdivp
leave
loop
idivl
out
pop
pop
xor
mov
test
scas
mov
xchg
aas
rcr
jmp
lock
out
clc
ror
int
outsl
xchg
and
aad
cwtl
push
xor
xchg
jmp
in
ja
cmp
jecxz
sub
xchg
lcall
add
cli
push
or
addr16
mov
aad
stos
cmpsl
out
push
inc
sti
ret
mov
cmpsl
out
dec
fs
jle,pt
push
mov
cld
inc
test
add
sti
fcomp
xlat
add
inc
inc
popf
pop
jns
std
scas
pop
scas
loopne
test
stc
add
dec
jmp
gs
jnp
add
mov
or
call
out
mov
push
insb
mov
jo
pop
notb
nop
repz
and
pop
popa
push
mov
pop
lahf
adc
mov
inc
movsb
std
lahf
xchg
test
jmp
bound
jmp
ret
test
mov
dec
lods
pop
loopne
movsb
cmpsl
bound
in
mov
xor
into
mov
inc
outsl
movsb
daa
jge
xchg
shrb
imul
daa
jne
inc
in
data16
jns
fimuls
jmp
mov
in
push
imul
mulb
jo
or
or
test
lea
fstpt
jge
outsl
insl
outsb
sub
cmp
popa
inc
les
stc
js
iret
lret
out
fwait
test
mov
mov
test
mov
xchg
stos
xor
lret
pusha
test
daa
mov
dec
loope
stos
stc
pop
bound
aad
rclb
push
lea
fcomp
lret
loope
xchg
lahf
jmp
xchg
jnp
jecxz
dec
call
jne
cmpsl
std
xchg
xorl
fwait
or
rcr
xchg
mov
aas
mov
ss
xor
sbb
repnz
xchg
add
out
repnz
je
jge
inc
mov
add
ja
imul
or
xor
and
mov
inc
das
ljmp
icebp
cmpsl
daa
clc
jno
jnp
sbb
or
cmp
pop
jnp
inc
aad
push
loope
cmp
data16
test
cmpsl
stc
mov
jno
mov
iret
xchg
cmp
xchg
pop
mov
jmp
lahf
dec
stos
out
pushf
adc
cltd
jg
mov
adcl
shll
cmpsl
imul
mov
cmp
jg
cmp
fs
mov
sub
js
dec
push
in
mov
fnstcw
mov
push
cs
jne
push
and
outsb
into
mov
aad
arpl
fwait
mov
ljmp
test
shll
mov
mov
nop
ret
push
xchg
movb
ret
push
or
ret
outsb
mov
outsl
ss
cli
call
int
dec
ret
popl
out
mov
dec
je
add
add
dec
cmp
not
mov
push
js
sub
xchg
inc
mov
push
or
or
sub
rcll
or
inc
sti
daa
inc
test
xlat
out
ficoms
aaa
mov
enter
jne
xor
mov
push
icebp
cmpsb
jg
sahf
daa
mov
mull
push
ja
call
clc
xchg
pop
xchg
add
arpl
out
mov
sub
lcall
mov
lds
loop
inc
cmc
jns
mov
test
push
mov
std
gs
movsl
and
ret
scas
scas
ffree
cmp
stos
roll
or
roll
pop
pop
inc
xchg
in
movsl
mov
addr16
mov
push
pop
add
mov
imul
divl
cmpsl
jmp
mov
int
or
jo
cmp
fiaddl
fisttpll
jne
aam
xchg
pop
mov
icebp
or
xor
xor
aas
mov
cmpsl
movsl
and
or
xchg
mov
std
add
mov
jno
scas
xchg
add
faddp
sbb
stc
je
mov
push
es
jno
cmc
mov
shrl
into
adc
out
cmp
lods
jno
sub
xchg
scas
stc
ret
cltd
jne
mov
movsl
add
mov
dec
in
je
cmp
and
frstor
lods
mov
mov
jno
lret
dec
fwait
jge
dec
lea
xchg
out
cmp
out
stos
test
adc
scas
mov
incb
outsl
jb
push
test
sbb
mov
das
aad
enter
movsb
mov
arpl
mov
ljmp
pop
dec
in
insb
orl
ret
mov
lret
cmp
stos
shrl
ds
adc
popf
sub
sbb
out
scas
icebp
add
mov
mov
mov
imul
je
sub
fcomps
fistpll
cmp
and
arpl
mov
loopne
ja
mov
cmp
mov
sbb
pop
out
out
test
add
out
xchg
jns
add
popa
mov
stos
inc
jbe
popa
add
mov
cmc
pushf
dec
loopne
mov
xor
cmc
clc
sub
out
vmovdqu
adc
mov
xor
ja
adc
je
aas
test
sti
cmc
enter
loopne
cltd
lahf
fcmovne
mov
movsl
addl
add
mov
loop
mov
pushf
std
inc
mov
add
add
and
dec
ljmp
das
or
xchg
outsb
testb
sub
mov
jg
shll
mov
lock
mov
ds
mov
test
or
sub
test
mov
jae
orb
cmp
mov
lds
leave
int
pop
rcr
stc
and
inc
push
add
fs
add
push
scas
jmp
xchg
xlat
xchg
mov
imul
into
add
push
push
aad
push
movsb
addl
enter
in
aaa
or
in
ja
out
shrl
iret
inc
aam
mov
dec
cmp
xchg
pushl
bound
mov
push
inc
fiaddl
icebp
ret
xchg
call
mov
movl
jno
fists
pop
push
jbe
movsb
out
stc
dec
sbb
ret
cli
fs
mov
sbb
fwait
iret
mull
cmc
sbb
jbe
test
addr16
aam
lret
xchg
je
cs
push
jmp
jno
aad
hlt
in
xchg
aad
xchg
cwtl
xchg
lods
idiv
cmp
mov
push
testl
push
add
push
mov
sub
pop
mov
or
sbbb
lds
je
mov
pushf
jno
cltd
dec
mov
or
cmc
movsl
sti
aam
out
shll
aas
fnsave
xchg
and
loope,pt
out
xor
shll
loope
inc
addl
mov
out
loope
addr16
loope
loope
mov
mov
out
xchg
mov
sub
cli
mov
sbb
pop
lds
cmpl
mov
sub
mulb
inc
add
mov
pop
mov
adc
js
sbb
dec
jge
xor
movsl
popf
cmp
jmp
in
jmp
mov
jbe
push
aad
rorl
jg
pop
out
unpcklps
adc
mul
ja
inc
outsl
and
inc
xchg
and
je
fcomp
dec
pop
fdivrp
js
sahf
outsb
das
mov
and
jg
mov
jnp
pop
bound
cmp
fisubs
fidivs
aas
icebp
lock
cmpsl
das
cli
or
dec
in
in
out
jo
add
nop
lock
mov
in
ret
gs
lds
xor
pop
mov
fs
sub
shl
sbb
mov
and
jmp
push
rol
pusha
jne
rorb
cmc
xor
inc
adc
movsl
jge
sar
mov
adc
into
stos
roll
cmp
outsb
add
clc
push
mov
pop
je
and
in
loop
fsubr
jns
jno
push
int3
lods
cmc
xchg
jns
std
insl
sbb
dec
push
mov
fs
rcrb
mov
mov
sub
mov
add
and
aad
jecxz
xor
or
dec
cmp
sbbl
loopne
sbb
mov
mov
or
pop
fistps
mov
mov
fdiv
negb
jb
jmp
lahf
fs
xor
mov
xchg
xor
and
and
xor
jl
rcrl
xchg
sbb
jns
mov
scas
xsaves
push
fs
imul
sbb
cmpsb
in
out
imul
shrl
push
jge
data16
inc
adc
fucom
rorb
cmc
dec
mov
add
add
je
sbb
repz
cmp
dec
jno
push
mov
and
cmc
sahf
leave
std
aaa
pop
ret
sub
lret
ja
fs
adc
mov
hlt
lds
jmp
xchg
pop
mov
jb
xor
jnp
push
sbb
mov
loope
xor
xor
mov
repnz
xorl
mov
jecxz
and
sub
les
jb
loop
ret
jge
cli
fimuls
rclb
jg
push
pusha
sub
je
test
pop
xchg
add
fwait
aad
or
adc
sbb
xor
in
push
mov
cmp
stc
inc
adc
mov
mov
lret
pop
pop
add
push
pop
pushf
xorb
xchg
test
out
stos
push
dec
ja
pop
xchg
mov
sub
cmp
into
enter
mov
aam
ds
ficoml
push
xchg
mov
or
pop
cs
daa
imul
xchg
mov
lahf
daa
ret
sbb
addr16
out
inc
jbe
lahf
hlt
loopne
div
outsb
push
aad
jmp
and
push
cmp
push
js
xlat
cmpsb
cmpb
jmp
icebp
pop
dec
scas
insl
inc
subps
and
aad
xchg
cmp
shl
sub
mov
sbb
cmc
fs
sbb
aad
imulb
dec
inc
test
repz
sbb
adc
repnz
sar
ffree
arpl
shl
nop
sbb
rol
cmpsl
std
cmc
cmpsb
test
add
popa
fnstenv
or
inc
pop
loope
inc
mov
pop
icebp
lret
sbb
aad
sahf
adc
les
push
rcrb
vprotd
or
outsb
mov
mov
xchg
inc
jbe
daa
cmc
mov
jp
cwtl
fwait
sub
stos
dec
lret
xor
les
rcrb
iret
push
fwait
or
jae
pop
pop
mov
fwait
dec
cwtl
sub
lds
loope
and
shll
fs
ret
lea
cwtl
push
dec
mov
ror
xchg
or
mov
ffree
mov
pusha
shl
dec
in
cmp
xlat
push
pop
fiaddl
shrb
jbe
xor
push
cmp
stos
push
call
or
stos
mov
fsubrl
inc
mov
mov
push
push
pop
push
into
fbstp
jg
and
pop
movsl
mov
daa
jbe
add
xorps
xchg
pop
mov
test
outsb
les
mov
test
sub
aas
scas
xchg
out
mov
les
mov
push
sub
outsl
hlt
cs
in
sub
cmp
scas
orl
jmp
jmp
cmp
pop
mov
pusha
roll
mov
mov
mov
test
xchg
add
stc
inc
mull
jnp
daa
scas
test
icebp
arpl
sti
jne
ret
pushf
xchg
push
and
push
mov
adc
sbb
insl
cli
adc
push
jmp
mov
rclb
in
inc
in
dec
rcll
jge
out
call
cmp
fwait
ror
stc
cli
mov
hlt
fwait
gs
pop
pop
mov
sti
popf
dec
xor
mov
mov
sbb
rolb
xchg
fwait
push
out
outsb
jne
sti
sub
xchg
jnp
test
jle
scas
pop
insl
jns
aaa
rcrb
jae,pt
add
icebp
mov
mov
test
gs
in
scas
cs
andb
or
inc
inc
fwait
mov
lahf
xchg
out
dec
inc
jae
jmp
mov
and
xchg
popf
add
into
vhsubps
sub
std
notb
xor
scas
xchg
cmpsl
push
in
ffree
xor
mov
adc
jecxz
lods
sahf
mov
pop
test
fwait
sbb
xchg
fcomps
and
sti
movsl
xchg
xlat
adc
stos
sbb
stc
call
in
xchg
and
fldl
pop
mulb
xor
rcrl
ret
mov
iret
xchg
test
xchg
bound
adc
in
mov
daa
int3
shrl
ja
jae
adc
push
push
jge
ret
fwait
pop
scas
xchg
or
pop
lea
addr16
scas
push
cmp
sbb
cmp
pop
int
leave
das
lahf
dec
into
push
lds
mov
test
fwait
add
mov
xor
std
mov
gs
mov
pop
out
sbb
push
fucom
in
pop
push
into
inc
fwait
clc
xchg
mov
mov
pop
stc
idivb
pop
testb
sti
adc
test
mov
cmpsl
out
rcll
mov
jge
fidivs
mov
pop
push
mov
push
mov
jnp
icebp
insb
data16
cmpsb
sti
fs
push
test
or
cmc
out
inc
adc
data16
add
dec
mov
arpl
imul
outsb
in
shlb
cmp
xchg
xchg
and
stos
pop
cmpsl
fbld
int
ja
pop
push
dec
mov
lock
call
jge
pop
cmpsb
jne
std
into
xchg
mov
mov
xchg
dec
mov
mov
sbb
mov
sahf
std
push
and
aad
mov
or
je
out
in
loope
nop
jns
jge
fs
repz
outsl
and
xorl
lods
cmp
jbe
dec
and
test
in
dec
xor
cs
cli
loopne
movsb
enter
test
mov
sub
ja
adc
add
pop
nop
cwtl
stos
sbb
fs
xchg
mov
and
fisttps
fwait
lcallw
xor
xchg
fs
stos
icebp
stos
filds
jecxz
mov
leave
mov
sbb
into
or
cmc
inc
sti
dec
fwait
cmpsl
repz
filds
dec
addr16
inc
nop
push
fwait
push
inc
jle
jne
popa
scas
fstps
mov
out
cltd
insb
xchg
fwait
cwtl
hlt
arpl
arpl
ljmp
ds
loope
inc
and
mov
cli
xor
ss
inc
mov
movl
pushf
push
ja
jns,pn
or
fs
add
out
gs
fdiv
add
scas
cltd
pop
xchg
aad
push
pop
aas
mov
mov
jnp
mov
aas
sbb
mov
pop
js
gs
jnp
xchg
mov
ljmp
jg
xor
insl
push
xchg
data16
aas
mov
adc
mov
mov
fadd
mov
push
adc
rcl
jge
add
sbb
loopne
jo
sahf
jg
push
test
in
mov
lods
jmp
sbb
into
jmp
lcall
adc
jge
xchg
aas
or
fmuls
mov
fdivp
ljmp
ja
pop
and
leave
stos
fiadds
lea
xor
cmp
les
and
add
adc
mov
fistps
pop
mov
add
xor
mov
dec
test
das
movsl
mov
dec
xor
insl
test
pop
out
rorb
cmp
bound
testl
out
fsubr
add
mov
mov
and
jns
neg
add
dec
or
fbld
inc
push
pop
test
test
dec
jae
or
xchg
outsb
lret
inc
jmp
idivb
imulw
adc
pop
cmp
out
pop
ja
mov
pop
addr16
aas
dec
out
icebp
mov
add
pop
pop
inc
push
mov
pusha
push
ja
dec
sub
jmp
in
xchg
jecxz
in
sti
push
leave
lds
xchg
jmp
fdivl
aaa
sti
stc
and
out
inc
xchg
das
sub
add
xchg
stos
and
add
lahf
sbb
addr16
dec
out
filds
and
mov
scas
mov
and
sub
loope
icebp
shrd
je
nop
not
out
pop
cltd
push
or
sarb
adc
inc
push
lahf
cli
cld
pusha
out
stos
out
xchg
jmp
inc
or
mov
js
mov
aad
js
sub
addr16
cmpsb
or
fwait
xchg
pop
lds
repnz
hlt
mov
dec
jbe
jg
xchg
push
mov
pop
testl
shrb
inc
fldl
sahf
out
test
inc
pop
mov
rorb
movsb
fcomps
andl
fisubl
adc
dec
test
in
jge
ret
sbb
dec
in
fnstenv
ret
dec
pop
xor
pop
pop
out
inc
scas
test
test
or
rclb
imul
push
mov
xlat
in
cltd
inc
xchg
mov
addr16
jmp
lods
xlat
xor
and
cmp
popf
add
out
test
out
test
fwait
out
ret
add
xor
loopne
sbb
sub
or
insl
inc
in
xchg
fstpl
jae
push
xlat
insb
nop
jg
push
pusha
and
inc
rorb
inc
push
mov
jp
cmpsl
out
addb
xlat
cmpsl
addr16
or
popa
shl
pop
add
cld
mov
movsl
clc
cmp
adc
adc
je
out
xchg
rolw
xchg
flds
inc
int3
adc
xchg
xor
pop
pop
dec
push
scas
movsb
test
push
inc
cmp
or
sahf
shr
and
adc
loopne
mov
xorps
jnp
fwait
lret
arpl
fcmovnb
jae
addr16
ret
mov
adc
rclb
pusha
sti
sbb
cmpsl
jnp
mov
data16
rol
gs
mov
mov
dec
push
jmp
jae
inc
mov
insl
mov
xlat
in
movsb
iret
mov
push
addr16
push
in
movups
clc
sahf
adc
and
cmp
repz
and
or
add
movsb
test
and
mov
test
fs
jne
aad
mov
into
and
popa
xchg
and
nop
mov
inc
iret
cld
out
test
xchg
jbe
or
or
in
mov
push
inc
in
ljmp
test
mov
in
ficomps
jne
lahf
scas
mov
iret
cs
je
jne
arpl
push
mov
push
insb
and
stos
movsl
or
les
or
cmp
mov
ret
mov
mov
add
rcll
loopne
test
jp
scas
stc
addr16
pop
out
xlat
test
iret
incl
dec
or
mov
fsts
leave
jmp
out
clc
dec
jns
test
xor
adc
mov
dec
leave
mov
into
addr16
cmpsl
add
sbb
dec
jne
pop
lods
xchg
out
cmpsl
mov
sub
sbb
jmp
out
pop
dec
ss
inc
negb
cmpsb
out
add
sbb
push
cld
test
scas
add
xor
loop
movsb
mov
cmp
mov
jecxz
push
test
jecxz
mov
and
fldl
mov
adc
es
sub
iret
mov
xchg
stc
out
ror
int
addr16
int3
rcrb
pop
fldcw
aad
ret
jg
ret
out
jmp
out
pop
aad
mov
adc
add
adcl
pop
adc
and
inc
add
mov
adc
cmpsl
out
aam
bnd
mov
xchg
stc
mov
incb
xor
jg
cli
jne
add
pop
fxch
jp
add
mov
mov
movsl
xor
mov
lahf
loope
lahf
adc
jno
sbb
and
adc
test
mov
idivb
lods
in
iret
jnp
idivb
pop
subl
xchg
stc
repz
mull
inc
dec
ss
mov
ftst
inc
xchg
pop
aad
mov
jae
daa
fsubl
mov
add
fwait
mov
bound
mov
jbe
mov
mov
cmc
nop
idivl
hlt
ficoms
push
cmc
or
es
popf
mov
out
mov
ret
sbb
push
add
push
dec
mov
test
out
imul
pop
ja
xchg
out
stc
dec
pop
sub
cmp
mov
cs
push
loope
cli
rol
iret
mov
pop
sub
int3
and
sbb
jmp
pop
jp
and
icebp
jae
mov
lds
aam
rorl
insl
addr16
in
mov
jmp
push
cmp
xchg
test
adc
xchg
cmp
outsb
test
xor
and
shrl
enter
mov
jmp
xchg
in
xor
pop
and
rcrb
arpl
in
std
aad
popf
push
mov
pop
xchg
cmp
push
iret
dec
jmp
xchg
mov
addr16
jns
lahf
pop
pusha
adc
imul
cltd
push
arpl
cwtl
addr16
leave
clc
cli
shlb
xchg
aas
inc
cmp
jnp
add
fistpll
shlb
inc
ror
mov
mov
pop
xchg
mov
adc
arpl
mov
out
sar
jns
testl
mov
sub
sar
sub
fcmovu
add
sub
adc
push
mov
push
mov
ret
aad
add
add
cmpsb
out
orl
outsb
inc
ret
adc
mov
lret
ja
mov
scas
arpl
add
imul
pop
xchg
dec
idiv
cmpsb
sbb
push
mov
repz
outsl
fildll
outsb
dec
mov
in
mov
filds
push
addl
adc
loop
out
outsb
icebp
mov
mov
jg
daa
mul
aam
addr16
outsb
mov
movsl
rorb
adc
call
pop
rcrb
out
sahf
testl
std
enter
sbb
jno
sub
aad
pushfw
test
or
mul
dec
out
mov
outsb
std
jne
sti
push
inc
rcll
xor
add
cli
inc
lock
mov
sbb
out
outsl
sub
push
mov
into
cli
mov
xor
sbb
pop
mov
mulps
mov
ja
das
pusha
loope
sbb
outsb
pop
icebp
mov
sarb
sti
and
fistps
ret
out
rol
inc
cwtl
es
popl
in
mov
addb
xor
lds
xchg
in
shlb
cmp
rol
pop
pop
sti
scas
aas
mov
outsl
and
ja
in
imul
decl
jmp
and
jae
std
fcoml
loope
add
jmp
stos
imul
dec
outsb
jge
sbb
mov
leave
out
pop
imul
jecxz
fadds
orl
mov
jbe
mov
cmpsb
mov
jo
jb
ret
imul
mov
jg
pop
jge
pop
push
and
ret
dec
lret
cmp
jbe
test
add
jmp
mov
fisttpll
xchg
sbb
fisttpll
les
mov
mov
and
cltd
orl
enter
sbb
mov
mov
pop
mov
in
pop
cli
lods
xchg
and
add
les
sbb
pop
sbb
in
out
xor
push
or
and
les
and
sbb
jnp
ret
and
les
shlb
xor
dec
push
pop
jne
pop
fiadds
aaa
call
ljmp
pop
mov
fistps
adc
push
and
xchg
xchg
sub
adc
mov
pop
xchg
jbe
or
repz
dec
repz
pop
dec
inc
int3
dec
mov
inc
pop
mov
jo
sbb
pop
pop
in
daa
incb
or
les
and
cmpsb
aas
mov
shll
jnp
shrl
inc
jnp
inc
aad
movsl
rcrb
inc
out
xor
mov
imul
inc
mov
pop
aad
and
data16
mov
lods
jno
push
push
inc
lods
mov
mov
cmp
xor
subl
jg
je
int3
mov
call
cmp
inc
scas
inc
scas
mov
xchg
xchg
or
adc
mov
aam
jns
dec
pop
xchg
testl
cmc
int3
nop
add
mov
mov
adc
xor
inc
inc
cmp
hlt
jbe
icebp
or
pop
inc
add
push
mov
adc
add
jg
outsl
ret
test
stos
cmpsb
jge
xchg
pop
pop
xchg
push
shl
in
mov
nop
add
cs
je
popa
adc
rorb
pop
mov
adc
mov
add
iret
dec
in
sbbb
jmp
push
mov
je
cmp
scas
sarl
sub
scas
cld
jp
push
jne
mov
ljmp
cmp
jge
jp
lods
fistps
ffreep
fst
inc
adcb
mov
cmpsl
mov
push
pushl
test
es
dec
lahf
ss
rolb
insl
scas
lahf
testb
push
insl
in
lret
inc
or
xchg
sub
scas
cmp
add
enter
push
lods
cltd
cmp
addr16
push
lock
push
and
out
pop
and
in
cmpsl
pop
or
pushl
fwait
cwtd
icebp
jb
fstpt
mov
shrb
dec
mov
add
xlat
sbb
addr16
push
pop
cmpsl
mov
scas
cmc
xor
cltd
mov
jns
push
xorl
scas
mov
pop
sbb
pop
sbb
cs
insb
aaa
pop
aaa
test
loope
stc
std
inc
or
daa
leave
js
je
mov
mov
add
out
pop
fwait
jne
dec
loop
and
fcmovnu
and
imul
or
jb
imul
pop
fs
mov
fwait
pop
mov
dec
pop
cmp
rcl
mov
mov
xchg
mov
dec
iret
leave
xor
mov
dec
add
inc
xchg
fs
data16
jge
fnsave
andl
xor
or
mov
jne
sarl
jle
adc
sti
inc
or
sbb
aas
movsl
push
mov
jns
add
inc
loop
fnstenv
sbb
arpl
std
sarl
mov
mov
data16
imul
pop
and
addb
insb
or
aad
push
jecxz
gs
dec
mov
jbe
outsl
xlat
mov
ret
test
dec
fidivrl
inc
das
jb
pop
decb
hlt
or
lret
cli
movb
insl
sub
les
adc
mov
sti
stc
mov
cli
ss
add
sti
cmp
fldl
jnp
fistl
sahf
adc
jbe
arpl
insl
mov
sub
inc
pop
ret
dec
ljmp
xlat
enter
out
sub
or
fldt
hlt
jne
out
fidivl
push
adc
xchg
mov
imul
xchg
inc
push
sbb
pop
sbb
pop
add
nop
cltd
cmp
dec
jne
jno
adc
sbb
add
dec
push
pop
clc
lock
or
scas
rolb
dec
and
dec
cmp
insb
adc
add
dec
movb
xchg
addr16
mov
rorl
cltd
out
push
cmp
out
mov
pop
cmpsl
add
pop
inc
fisttpl
sbb
cmc
fs
shll
popf
cmpsb
xchg
push
ret
in
xchg
rcl
cmp
inc
mov
jmp
inc
scas
mov
xor
sub
push
lea
data16
jo
pop
loopne
movsl
fstpt
loope
xchg
mov
imul
outsb
jo
jecxz
fwait
in
nop
testl
or
xor
cmp
arpl
ja
jnp
push
loopne
mov
push
ficompl
aad
aas
adc
push
aaa
and
je
out
rolb
mov
fbld
fwait
hlt
adc
and
pop
popa
adc
cmpsb
notl
mov
std
mov
loopne
adc
push
and
sbb
aas
sahf
xchg
rorb
push
scas
std
mov
mov
mov
or
push
popa
sbb
scas
stc
aas
dec
test
fdivrl
sahf
add
cmpsl
xchg
xchg
dec
dec
leave
mov
iret
stc
test
mov
or
xchg
xchg
push
xlat
cld
int3
popa
xchg
icebp
pop
inc
add
imul
js
add
fldpi
cmp
ljmp
lods
push
repnz
xchg
sub
mov
call
pop
in
mov
jecxz
icebp
mov
xchg
call
jno
or
rcrl
pop
mov
xchg
std
mov
fimuls
imul
lock
adc
jbe
xor
mov
mov
shll
out
clc
xor
mov
imul
add
ret
dec
xchg
adc
movsl
push
jmp
sbb
in
idivl
aad
push
subl
data16
loope
ja
adc
cmc
xchg
push
push
inc
sti
push
dec
gs
repz
xchg
xor
test
inc
mov
inc
repnz
jns
icebp
out
fs
mov
and
xchg
loope
sahf
push
adc
inc
pop
jne
push
jp
cmpsb
mov
movb
cwtl
dec
sbb
sti
scas
icebp
ret
cmp
mov
out
mov
fyl2x
adc
mov
fcompl
cmpsb
push
mov
fildl
fwait
mov
ficomps
fmul
mov
loopne
dec
cmpsb
push
imul
loop
ret
jmp
adc
int3
pusha
movsb
push
repnz
sti
sbb
icebp
negl
pop
mov
adc
inc
stos
push
ret
mov
scas
pop
ret
inc
adc
aas
mov
adc
inc
inc
mov
push
fucomip
test
push
mov
xchg
mov
lock
sarb
loop
mov
in
xchg
or
hlt
aad
test
mov
test
inc
rolb
lahf
lds
pop
mov
test
cld
nop
or
idivb
andl
imul
dec
idivb
jbe
mov
xchg
addr16
sbb
popa
mov
cmc
pop
loop
iret
iret
notl
daa
call
fadd
nop
les
stc
test
sub
mov
jg
lods
pusha
ds
lods
inc
test
out
mov
lret
jo
es
lret
ret
push
adc
or
pop
lods
out
push
in
jae
iret
dec
shlb
dec
and
addr16
jle
loopne
je
out
jbe
das
xor
jle
ja
pop
int
mul
jne
lds
lds
hlt
fs
mov
testl
jo
es
addr16
hlt
xchg
inc
ds
out
bound
pop
int
imulb
cmpsb
jl
cmpsl
adcl
ds
ja
pop
int
notb
loopne
lds
dec
ja
aaa
jp
inc
movsl
inc
jg
pop
lea
mov
mov
je
notb
cmpsl
filds
push
lret
jnp
rcrl
aad
mov
shl
xchg
add
rclb
loopne
add
inc
rorb
leave
aaa
xlat
push
ja
or
mov
repnz
shl
aam
sub
insl
pop
jecxz
aad
leave
sbb
or
movsl
dec
pop
jge
pusha
shlb
jg
popa
mov
les
out
push
mov
movsb
shr
scas
xchg
pop
aas
push
xchg
inc
insl
in
jbe
aas
jge
pop
cmc
roll
shl
imull
jle
rol
cmc
idiv
push
orl
in
jbe
aas
andb
cmpsb
icebp
push
mov
mov
mov
loop
jg
cmpsl
in
add
push
daa
cmp
std
stos
ja
lea
add
in
outsb
arpl
notb
shr
scas
ret
cmpsl
test
leave
mov
inc
enter
in
push
inc
or
cmp
lock
push
cwtl
mov
mov
int
outsb
push
and
imul
decl
ja
jg
out
aad
fnstenv
sub
cltd
mov
cmpsl
push
test
fiaddl
jecxz
jbe
push
insl
mov
xchg
mov
stc
stos
shlb
sarb
pop
test
pushf
stc
ja
lock
mov
xchg
sti
insl
lcall
inc
stos
inc
inc
sub
and
sub
fildl
outsb
pop
adc
push
adc
pop
pop
inc
mov
test
dec
and
cmpsb
add
adcb
imull
ss
in
mov
imul
hlt
push
in
cmpsb
push
shll
insl
mov
xchg
mov
mov
gs
nop
inc
sbb
insl
or
test
rorb
adc
cmp
jecxz
dec
add
mov
jnp
ret
std
sub
jg
addb
sub
clc
xchg
cwtl
add
jl
mov
fstpt
out
scas
sub
xlat
mov
sub
sub
gs
and
pushl
and
push
pop
shlb
out
shlb
scas
into
sbb
scas
fsubrp
fdivp
out
add
pop
std
fcmovnb
mov
lods
jnp
cmpsl
push
inc
xor
int
or
jbe
loopne
ljmp
pop
jo
ret
stos
jns
testb
mov
sbb
sbb
pop
pushf
push
xchg
lcall
in
xor
or
cmpsl
gs
mov
faddp
mov
ja
daa
mov
dec
ret
into
mov
adc
movsl
mov
adc
rcrl
lock
xchg
in
push
xchg
jbe
add
and
mov
mov
jnp
lret
jg
shrl
push
or
test
out
jne
or
xchg
push
lods
loop
mov
mov
sub
fisttpll
sub
pop
push
fucompp
cltd
add
cltd
jns
cld
or
push
mov
in
gs
cwtl
jno
cld
aaa
xchg
les
cmpsb
das
incb
out
xor
mov
bound
sbb
jge
xchg
in
ret
lock
data16
inc
mov
stos
xchg
fildll
lods
data16
movsl
inc
or
inc
cli
adcb
popa
ja
adc
jge
js
mov
push
test
test
adc
jle
jecxz
add
out
movsb
mov
dec
je
into
les
loop
push
mov
dec
push
jne
mov
cmpsl
scas
fs
cmp
mov
neg
jecxz
dec
cmp
loopnew
or
pop
jo
adc
pop
jb
addr16
in
xor
jo
iret
js
xchg
and
out
in
hlt
pop
sub
jecxz
pop
mov
dec
xor
pop
sub
cmp
jg
jp
hlt
sahf
in
fs
hlt
mov
sti
insl
dec
rclb
inc
add
pop
out
call
mov
push
mov
push
sbb
sbb
cmp
push
fs
mov
ja
pop
cmpl
and
mov
xor
pop
lahf
cmpsb
xor
stc
push
adc
sbb
xchg
push
mov
cmc
jb
jge
lret
jg
jge
mov
xchg
outsb
out
call
in
inc
shlb
shl
lret
xchg
out
ja
aas
shll
cwtl
out
jp
divl
aas
mov
cmpsb
inc
subl
adc
add
in
jne
test
xchg
popa
mov
jge
cmpsb
dec
clc
xchg
imul
cmp
cld
jmp
clc
inc
xlat
mov
loop
cld
shl
in
inc
loopne
movsl
pop
fld
and
shll
insl
mov
mov
dec
les
ja
add
fdivrl
adc
cmpsb
dec
roll
jbe
lods
adc
inc
std
jo
cmp
xorb
subb
filds
subl
aam
out
jl
aam
lock
lock
push
ret
divb
hlt
gs
push
cmpsl
rolb
xor
mov
sar
pop
inc
mov
cmc
fcmovne
inc
sbb
leave
and
adc
mov
into
sub
add
or
fidivrl
and
pop
dec
adcl
mov
mov
sti
loope
in
adc
dec
in
fbld
xchg
jnp
push
cmp
cmpb
imul
add
out
repz
push
in
addr16
mov
popa
andb
les
mov
fistpl
jne
pop
cmp
in
inc
cmc
rol
repz
aad
out
daa
jg
mov
add
sbb
lods
ret
inc
ss
repnz
dec
xchg
arpl
pop
shl
out
gs
jns
fcoml
mov
inc
and
add
orl
xchg
inc
mov
inc
mov
jge
cld
lds
dec
push
loope
filds
cmc
sti
out
add
jp
scas
xor
fdivl
or
xor
inc
inc
int3
mov
stos
pop
pusha
ja
or
sarl
mov
pop
icebp
gs
jns
iret
sbb
shl
sahf
push
dec
mov
imul
add
cmpsb
rclb
je
cmp
or
push
ja
out
mov
cli
or
addr16
aaa
jl
addb
pop
push
pop
and
out
pop
lods
inc
outsl
sbb
sahf
test
lahf
test
outsl
stos
mov
movb
mov
ljmp
or
dec
in
sahf
push
jbe
dec
out
mov
in
cmpsb
shll
push
icebp
push
dec
xchg
jns
test
fucomip
cmc
fidivrs
arpl
xchg
dec
pushl
xchg
pop
int
or
aaa
pop
jne
in
and
pushf
mov
pop
or
mov
out
jb
dec
in
mov
test
lret
push
outsb
inc
in
popa
mov
jl
loopne
repnz
aas
inc
push
mov
inc
xlat
jp
divl
push
aad
cmc
fs
fldl
adc
outsb
mov
jmp
in
pop
mov
insb
push
jg
and
inc
fucom
mov
ljmp
sbbl
daa
imul
cmp
mov
xchg
dec
lds
aad
sahf
je
in
cmpsl
leave
push
ljmp
jne
mov
jmp
idivb
jg
push
shll
enter
in
fwait
in
int3
shrb
adc
fisubrl
lahf
mov
test
pop
mov
cmc
cli
inc
xchg
and
mov
push
dec
in
inc
fsubrl
mov
ss
test
imul
inc
fs
mov
ret
push
mov
xchg
test
les
cmpsb
dec
xchg
adc
data16
aad
out
and
add
rol
inc
add
jecxz
loope
pop
movsl
and
repnz
xchg
inc
mov
jge
mov
fdiv
push
ficompl
movl
pushf
sbb
xchg
outsl
mov
sbb
jne
fisttps
mov
test
in
pop
inc
xorb
addr16
stos
mov
pop
dec
pop
jmp
test
inc
fucomip
add
xchg
int
xchg
daa
xor
int3
addr16
add
nop
fistps
inc
cmpsb
pop
aad
ret
test
mov
dec
cld
mov
into
addr16
lahf
lock
data16
ja
pop
aad
ret
pop
jns
movl
jns
inc
mov
mov
xor
outsb
push
jg
out
mov
pop
in
les
inc
push
movsl
cmpsl
sbb
inc
loopne
orl
in
outsl
sub
inc
stos
rolb
stc
pop
xor
push
xchg
lahf
lods
mov
jg
mov
imulb
in
inc
lds
test
pop
jecxz
inc
mov
pop
in
mov
pop
xchg
mov
inc
jnp
repnz
out
sub
fnstsw
out
mov
sub
gs
push
int3
shlb
jo
inc
out
aas
nop
fld
repz
mov
stc
sbb
repz
mov
adc
lds
jne
out
mov
mov
or
mov
pop
push
mov
pop
add
imul
pop
add
mov
sarb
insl
popf
cmp
cmpsb
mov
ret
and
xchg
pop
jle
push
mov
mov
in
out
cmc
imul
adc
popf
inc
scas
push
ss
pushf
data16
out
sub
out
pop
mov
and
jne
xchg
loope
and
fldl
push
push
pusha
lahf
dec
inc
test
adc
shrl
lds
repz
je
mov
imul
sub
test
xchg
adc
out
add
inc
pop
add
movsb
push
dec
jge
push
mov
sub
dec
das
pop
or
pop
or
sarb
ds
cmc
push
shrb
push
mov
push
scas
dec
push
out
dec
movsb
xorb
sbb
icebp
mov
fs
arpl
cmp
mov
retw
call
lea
test
pop
leave
dec
dec
xor
cmpsl
fs
jnp
push
sub
dec
loop
cmpsb
add
mov
jle
mov
out
jns
xchg
test
aaa
sbb
xchg
mov
xor
sbb
cltd
pop
cmp
dec
stc
lcall
jbe
lds
lods
out
xor
adc
sub
xchg
cmp
std
icebp
mov
adc
movb
ret
frstor
rolb
dec
std
mov
push
jge
jno
daa
int
push
cmp
movb
xchg
int
enterw
bound
flds
jp
inc
leave
sti
addr16
sub
cmpsb
les
push
or
jg
jnp
ret
sub
mov
pusha
scas
xchg
mov
popl
cmc
cmpsl
mov
cmc
pop
ret
jbe
iret
cmp
add
out
sti
mov
popf
mov
mov
sbb
das
inc
clc
cmp
fcmovnbe
cmpsb
out
in
rcrb
dec
fistps
mov
or
repz
adc
les
ret
sub
mov
inc
lock
jg
sbb
jl
icebp
push
xor
icebp
push
mov
mov
rcl
into
cmp
pop
jp
jecxz
push
push
or
fwait
adc
push
lahf
mov
and
es
and
inc
push
ret
ljmp
je
mov
push
sbb
lds
sub
enter
out
or
dec
aad
mov
shl
rorl
or
pop
mov
call
pop
movsl
call
adc
test
xchg
les
inc
or
dec
pop
test
fwait
outsl
cmc
push
or
pop
rcrl
adc
leave
aad
data16
lods
dec
inc
movsl
xor
arpl
cmpsl
adc
add
jmp
push
test
out
push
inc
sub
or
inc
dec
pop
movsl
insl
test
lods
push
xchg
ret
dec
sbb
sub
cli
mov
pop
sbb
stc
leave
jns
and
fwait
inc
mov
cmc
test
loope
or
and
shlb
ficoms
out
daa
aas
lods
add
jecxz
sbb
mov
jecxz
cmpsb
lods
fwait
dec
loope
adcb
rorb
push
xor
pop
xchg
mov
jge
mov
movsl
aam
icebp
pusha
in
rolb
adc
mov
test
dec
movsl
push
inc
or
mov
loope
pop
test
xchg
dec
adc
push
into
mov
popa
loope
sbb
loop
push
cltd
xchg
push
push
mov
jb
dec
jge
arpl
push
js
mov
rorb
mov
push
jo
mov
int
fs
sbb
mov
sarl
icebp
inc
jmp
pusha
mov
push
insb
and
sbb
nop
mov
orl
mov
pop
mov
jno
mov
ret
imul
push
mov
mov
inc
jmp
out
mov
ficomps
insb
adc
dec
fldl
jne
xchg
lods
lret
fists
dec
mov
inc
cmpsl
scas
shl
out
dec
aam
cmp
aad
xchg
test
dec
out
mov
test
sub
push
in
or
push
adc
dec
or
pop
add
sbb
in
inc
push
fstpt
pop
mov
nop
ret
imul
fdivrs
mov
cs
add
iret
dec
into
and
mov
gs
pop
orb
clc
xchg
jmp
xor
mov
mulb
sbb
dec
and
push
xchg
mov
jo
rorl
aaa
stos
ret
fcoml
lret
pop
sub
cmp
mov
shl
mov
xchg
out
push
add
jl
fiaddl
in
jle
and
scas
lret
xchg
sub
ds
aad
mov
xchg
stos
les
in
out
sti
mov
ds
lock
jno
decl
mov
std
js
lcall
ja
and
pop
and
lods
out
jbe
push
push
cltd
aas
inc
pop
sti
inc
mov
and
dec
dec
ficoms
test
inc
cmp
outsl
and
cli
sti
ret
outsb
popf
jns
shr
xor
cmpsb
pop
xchg
adc
das
aam
xchg
jne
test
fildll
mov
inc
mov
add
xchg
test
jge
sbb
or
fs
shlb
xorb
dec
or
rcl
shll
and
jne
cmp
sbb
add
in
out
out
pop
movsl
and
fs
cmp
sub
lds
cltd
xor
cmc
mov
and
fwait
daa
test
jbe
in
mov
pop
push
pop
mov
mov
ret
xor
cli
mov
xchg
ret
adc
jl
cmpsb
xor
cmp
arpl
and
jp
dec
inc
push
sbb
and
xchg
out
inc
jmp
pop
ja
xchg
enter
mov
aam
leave
jo
dec
jno
dec
push
es
mov
inc
and
cmpsb
and
aam
or
repnz
int
icebp
fldenv
insl
jecxz
mov
inc
jno
das
in
xchg
bound
mov
movhps
popf
test
scas
fadds
subl
adc
insl
movsb
mov
std
out
test
cmc
movsb
fnstsw
iret
mov
test
cwtl
shl
jbe
pop
movsb
out
mov
rcrb
mov
cltd
push
imul
push
in
test
push
jbe
es
cmc
add
sub
bnd
xchg
cmp
dec
insb
test
inc
sub
outsb
mov
mov
pop
and
push
or
testl
push
frstor
mov
movsl
push
push
cs
frstpm(287
js
mov
lea
cwtl
push
add
adc
jbe
iret
jne
stc
js
aas
or
ljmp
js
stos
cmp
pop
cmpsl
sahf
push
and
jne
sbbl
nop
je
or
push
push
in
arpl
mov
dec
lds
dec
mov
inc
fnsave
xchg
cmpsb
jp
lock
ss
clc
lock
push
or
movsb
stos
mov
jg
add
insl
pop
inc
dec
sbb
out
shrb
ret
data16
icebp
out
lock
int3
lods
cld
pop
add
sub
pop
adc
adc
sbb
mov
pop
push
mov
xchg
push
jg
jno
jle
outsb
mov
sub
push
pop
out
cld
push
fs
repz
pusha
in
lock
lcall
pop
cmp
rorb
xor
call
pop
add
pop
jle
cmpsl
xchg
or
sub
iret
inc
cmc
in
je
or
inc
mov
leave
xlat
inc
push
adc
in
scas
stos
cld
mov
ret
or
mov
cmpsl
fimuls
push
mov
xchg
hlt
bound
add
or
aaa
sbb
mov
outsb
pop
les
pop
in
neg
inc
inc
fwait
mov
adcl
xor
xchg
ret
inc
nop
div
sbb
dec
fldlg2
jle
and
jecxz
ljmp
add
xchg
push
stos
pop
out
rcrb
xor
movsb
aad
mov
stos
xchg
movsb
cs
and
or
adc
pop
pop
add
dec
adc
testl
pop
jl
cmp
movsb
and
xchg
inc
into
mov
rclb
gs
and
loop
cmpsl
daa
cmc
addr16
inc
test
xchg
adc
das
adc
cmp
xchg
lahf
pop
mov
sbb
shrb
pop
loope,pn
pop
mov
sub
leave
lock
mov
jge
mov
cld
mov
dec
jl
cli
mov
int3
outsb
jl
mov
xchg
jnp
jl
mov
add
cli
push
into
push
out
test
dec
je
pop
fsubrp
inc
fiaddl
rorb
inc
outsl
dec
lods
or
or
int
ret
fwait
gs
lods
jle
push
sub
test
pusha
jns
cs
jmp
xchg
fcompl
loope
cmp
sbb
mov
xchg
stc
es
inc
lods
rcrb
xchg
jle
inc
fwait
js
jo
mov
sbb
fildl
and
scas
flds
mov
jne
daa
adc
icebp
jmp
ss
or
addr16
or
out
int
push
mov
call
stc
pusha
inc
or
out
outsb
test
imul
out
pop
pop
fistps
push
icebp
cmp
neg
std
sahf
mov
cmpsl
popf
cs
lret
xchg
push
iret
add
cmpsl
and
inc
ja
ret
jmp
stos
push
mov
int3
mov
inc
scas
dec
fnstcw
in
dec
or
shrl
aas
mov
mov
int
lods
imul
mov
pop
push
inc
jecxz
jmp
iret
nop
and
imul
and
sub
mov
push
testl
orb
xchg
jge
mov
call
lods
out
adc
dec
xchg
data16
sub
out
mov
xor
fdivrl
fisubrs
insl
stos
aad
push
addr16
mov
divl
popl
vminss
hlt
rorl
pop
xchg
mov
into
mov
lods
dec
pop
adc
dec
adc
outsb
out
fisubrs
add
push
and
xchg
pop
mov
mov
punpcklbw
mov
add
mov
das
cmp
cmpsl
shlb
aas
outsl
adc
popf
rcrl
stos
jle
aad
mov
cwtl
in
iret
jg
xlat
stos
xchg
iret
adc
leave
add
daa
out
test
mov
movb
add
and
bound
mov
insb
pop
push
negb
jae
out
shll
sbb
xor
mov
push
add
prefetch
ss
into
mov
fs
mov
ret
or
mov
daa
pop
mov
loope
filds
arpl
nop
hlt
in
inc
mov
mov
inc
dec
jne
lock
fiaddl
stos
test
add
or
and
jne
fwait
mov
or
gs
xchg
push
out
into
shlb
mov
xchg
insl
fistps
dec
pop
xchg
push
jbe
sahf
inc
lods
mov
mov
inc
pop
lds
pop
adc
mov
addr16
dec
dec
xchg
add
add
pop
loope
aas
xchg
jl
pop
std
xor
sti
rcr
push
les
rcr
inc
adcb
add
mov
jp
mov
or
mov
lahf
add
shll
adc
stc
mov
cli
mov
dec
pop
outsb
xlat
in
pop
jp
out
mov
xor
inc
mov
int3
pop
mov
loopne
ffree
test
jecxz
mov
and
dec
daa
stos
add
sub
ret
stc
lods
jmp
adc
xlat
push
ss
loop
pusha
stos
idivb
add
data16
bound
stos
and
mov
out
insb
rcrl
and
insl
adc
test
les
iret
jle
sub
aam
lods
add
in
add
mov
jnp
push
jbe
sti
xchg
test
pop
xchg
jo
aaa
imulb
repnz
mov
ja
xchg
test
dec
pop
cmp
pop
loopne
and
cwtl
push
je
push
into
mov
and
movsb
jne
jge
dec
ja
sub
mov
mov
test
subl
popa
out
mov
shrb
outsb
arpl
into
outsb
add
cmpsb
xor
fimull
mov
repz
out
fbld
jecxz
and
xor
bnd
out
rol
test
pop
jle
xchg
cmp
add
nop
add
stos
mov
stos
outsl
aas
addr16
bound
pop
pop
push
sub
jecxz
mov
scas
cmc
pop
ds
rcr
pop
mov
pop
add
enter
test
into
adc
jae
adc
ja
cmp
mov
into
mov
out
xor
enter
cmpsb
mov
sbb
xchg
jge
xor
loopne
loopne
cmp
inc
test
xchg
inc
push
xor
push
pop
mov
cmpl
jge
into
mov
int3
sbb
ja
cmp
hlt
push
push
aaa
add
add
roll
xchg
pusha
jne
addr16
test
add
mov
mov
and
rcl
out
jns
adc
iret
mov
scas
imul
dec
sbbb
cltd
mov
sbb
sub
pop
mov
notl
push
arpl
push
inc
mov
arpl
dec
or
jno
das
fildl
xchg
inc
testl
xchg
call
addb
fisubs
inc
sbb
stos
or
inc
push
jne
mov
test
adc
lret
lds
les
shrb
xchg
mov
jmp
outsl
push
mov
inc
sbb
xor
loope
rorb
stc
cltd
divl
mov
fcmove
dec
cli
bound
cs
insl
push
cmpsb
ja
addb
into
mov
scas
push
push
cmpsb
arpl
or
sub
sbb
lds
mov
sub
fidivs
outsb
xchg
inc
pop
or
ret
insl
int3
pop
rcl
push
es
mov
ret
fisubl
loope
mov
scas
add
jne
cmp
fildll
xor
cmp
mov
mov
imul
popa
in
in
push
adc
int
sub
sti
mov
fs
lret
cmpsb
push
outsl
inc
clc
call
xchg
insl
rcrb
sbb
or
push
jae
add
push
xchg
mov
cmpsl
adc
pop
lods
loope
xlat
cmp
mov
arpl
xchg
into
jne
sub
pop
jnp
hlt
les
mov
test
pop
xchg
dec
jl
push
lock
cmc
jmp
cmpsl
cs
inc
bound
imul
mov
test
les
daa
push
inc
sub
cli
lods
mov
add
loopne
popf
inc
orl
jns
or
dec
xlat
or
jne
and
es
lret
push
ficompl
mov
push
cli
int3
ja
jecxz
xchg
sub
inc
cltd
jne
and
sbb
out
jmp
inc
int
rcl
aam
mov
mov
jg
pushf
mov
lret
sbb
push
pop
clc
jecxz
jg
inc
sbbb
add
jmp
inc
leave
fistpll
pop
outsb
xchg
jecxz
into
lea
div
cmp
imul
jg
out
inc
testl
jecxz
fbstp
stc
mov
scas
inc
outsb
sub
in
daa
xchg
inc
lret
and
hlt
leave
rcrl
and
in
addb
imul
std
inc
loope
jo
add
inc
xlat
addb
fwait
sub
scas
cmpsb
mov
cmpsl
loop
dec
xchg
sub
mov
inc
push
jbe
mov
sub
push
xchg
filds
shrl
outsl
xchg
mov
inc
dec
cltd
shl
mov
cltd
rolb
jne
or
fs
cwtl
xchg
xchg
mov
outsb
leave
sti
mov
out
or
es
cmp
adc
lds
testl
adc
cmc
jecxz
xchg
push
notl
and
filds
pop
cmpsl
jns
sbb
jl
jmp
add
hlt
gs
mov
mov
lahf
bound
push
iret
xchg
notl
ret
cmp
push
adc
shlb
aam
mov
mov
call
push
xchg
jb
fidivrs
mov
dec
ja
cmp
mov
lea
jno
fstpl
inc
cmc
mov
or
dec
pop
scas
sub
jno
pop
lock
sbb
outsl
insl
dec
lock
mov
jge
ret
pop
aam
ljmp
aaa
jmp
aam
jp
push
aaa
fcmovu
cli
jmp
xlat
rcrb
ja
bound
iret
ror
push
sbb
inc
icebp
xchg
pop
sub
int3
jns
mov
jle
addr16
mov
jmp
xlat
xchg
adc
js
out
loopne
into
aas
jne
pop
mov
je
stc
scas
shl
aam
xor
pushf
mov
mov
and
xor
xchg
dec
lcall
std
andl
pop
in
xchg
mov
into
pop
adc
ret
mov
and
sbb
arpl
scas
mov
shl
cmp
cmpsl
jg
jg
js
in
ret
iret
repnz
insl
jg
sbb
rorb
mov
mov
sbb
sarl
add
xlat
jecxz
dec
inc
inc
dec
xor
sub
out
pop
adc
mov
cmc
inc
fwait
dec
insl
mov
daa
andl
in
or
aas
movsb
inc
cmpsb
push
mov
push
sbb
jge
mov
pop
data16
aas
iret
and
push
push
or
inc
sahf
dec
out
adc
pop
mov
test
ja
xor
xor
shll
pop
mov
adc
jecxz
hlt
fstpt
xchg
cmpb
push
into
into
sub
lds
in
aas
aad
leave
xor
inc
sbb
fisttpll
push
and
sub
jnp
cli
push
xorl
test
adc
pop
push
aam
and
fsubr
je
inc
xlat
es
lahf
mov
shrb
lds
cs
adc
xchg
or
xor
cld
addr16
dec
mov
xchg
mov
sub
into
pop
inc
stos
xlat
or
fcmovne
outsl
mov
inc
add
cs
or
in
enter
paddq
push
ja
fcmovnbe
fildl
push
xchg
jecxz
fs
std
mov
mov
add
fimuls
sti
outsl
notb
sub
xchg
pop
push
enter
sahf
test
jge
pop
cmpl
or
cmc
movsb
sarl
mov
mov
popf
dec
mov
xchg
pop
sub
ja
mull
jle
inc
fisubrs
push
xchg
jecxz
mov
in
les
push
outsb
imul
pop
test
pop
adc
les
xor
cmc
xchg
dec
jns
xor
xchg
es
jbe
inc
clc
dec
dec
jg
inc
adc
xor
dec
addr16
mov
les
cs
dec
outsb
push
lcall
sbb
add
mov
inc
loope
imul
aas
daa
jae
out
jecxz
sub
lcall
movl
push
push
in
rorb
xchg
mov
pop
mov
mov
inc
ret
imul
inc
in
add
jns
inc
adc
test
dec
push
cs
insl
test
outsb
stos
popf
xchg
xor
aaa
and
jns
xor
pop
jmp
leave
lahf
pop
fimuls
mov
cs
jle
lahf
mov
fs
daa
das
xlat
inc
in
sbb
jne
push
outsl
ds
rcrl
mov
jnp
mov
mov
mov
and
jp
in
xor
in
jge
mov
sub
adc
mov
pop
pop
pop
or
test
adc
push
jge
mov
add
sbb
pop
mov
pop
inc
jno
movsl
daa
hlt
fs
inc
jge,pn
sbb
es
push
cs
call
dec
and
pusha
mov
sbb
xchg
cmc
ja
xchg
mov
in
cwtl
jbe
sbb
mov
xor
insl
cmpsl
cs
ja
cmp
aaa
into
inc
pop
cltd
pop
ljmp
loopne
idivb
jne
adc
aam
gs
pop
sti
jnp
mov
push
js
test
jno
xorb
gs
mov
sbb
adc
inc
ds
fs
mov
and
addr16
xchg
cmp
out
mov
test
jmp
adc
xchg
movsb
adc
loopne
jne
test
xchg
nop
lods
xor
sahf
test
push
jg
mov
xchg
mov
and
cs
inc
pop
dec
xor
repz
ja
jns
out
stc
or
sub
push
push
movsl
add
out
adc
or
dec
mov
add
out
test
aas
jg
xchg
imul
out
cmp
push
push
stc
pop
addl
out
inc
test
xlat
xchg
or
jg
push
or
pop
xchg
jp
std
jecxz
mov
rcrb
jmp
push
xorl
dec
ja
jne
and
pop
mov
and
push
inc
imul
fisubrs
data16
stos
div
pop
ficomps
add
loope
xor
in
pop
inc
test
cwtl
cmpsl
ret
jp
mov
loopne,pt
movsb
loope
cmp
int
xchg
shrl
stos
test
mov
bound
inc
dec
imul
jae
insb
mov
aad
iret
jp
insl
adc
iret
add
in
out
jg
jb
loope
fisubs
xor
cmpl
das
jns
mov
add
add
dec
cmp
add
xchg
dec
pop
push
popl
lahf
xor
add
call
xchg
fwait
xchg
test
xsaveopt
mov
mov
lock
iret
lock
rcr
dec
cmpsl
jns
xlat
pop
shll
mov
mov
push
ja
mov
inc
add
adc
in
push
xchg
mov
add
popa
or
int
outsl
xor
insb
lods
or
dec
cmpsl
add
movsb
f2xm1
inc
mov
xchg
jae
push
bnd
inc
dec
lods
add
insb
js
lret
cmpsb
mov
cli
cmp
loope
xchg
pop
mov
push
inc
insl
adc
mov
addl
loope
lds
fdivs
addr16
xchg
pop
arpl
daa
shl
lcall
rolb
insl
sub
or
pop
mov
sahf
rolb
lods
out
or
call
push
sbb
mov
pop
int
jmp
mov
cmp
mov
lock
addr16
dec
movsl
fldenv
loopne
xor
cmpsb
cmp
inc
add
orl
mov
lds
sti
fbld
push
add
xor
ss
push
cmp
jbe
sbb
xchg
pop
adc
rorb
cmp
sbb
test
adc
cmp
xchg
loop
mov
test
sub
lcallw
shr
dec
push
xchg
sbb
jne
lods
je
or
pop
daa
mov
pop
sbb
sahf
scas
iret
enter
lahf
push
dec
sbb
fsubs
ret
sti
jno
xchg
fs
push
ret
pop
cli
out
stos
shr
push
leave
inc
leave
imul
dec
xchg
call
bound
insb
int
rcr
xor
test
sbb
cli
insl
data16
push
cli
cmp
arpl
in
jg
push
je
mov
dec
flds
mov
stos
test
outsl
dec
inc
jns
dec
jne
mov
inc
mov
cmpsl
cmpsb
add
popf
loope
adc
jle
cmp
addl
movsb
arpl
jecxz
aam
in
mov
rcrl
add
pop
mov
or
inc
loope
sub
pop
imul
insb
cmp
test
decl
mov
scas
sarb
sub
xor
and
cmpsb
scas
mov
shlb
xchg
sbb
adc
popf
aam
fidivs
cmc
dec
ds
call
add
gs
mov
push
pop
ds
add
jne
lods
aad
push
test
cwtl
cmpsl
imul
xlat
pop
sub
mov
gs
in
mov
xchg
jp
les
icebp
stos
outsl
fwait
fs
lea
inc
pop
cmc
dec
xorl
jb
ljmp
cmpsb
mov
xchg
inc
mov
push
aas
dec
jne
mov
enter
mov
sbb
repz
out
add
adc
sahf
movsb
test
pop
cmp
in
in
jg
xchg
icebp
loop
push
addr16
rolb
cmp
cmpsb
sub
add
mov
jg
cld
into
cmpsl
jne
pop
loope
and
mov
mov
cmp
mov
sahf
jle
or
mov
or
test
inc
dec
cmp
jge
dec
inc
mov
ljmp
sub
imul
mov
into
mov
pop
loope
in
test
arpl
and
stos
mov
sbb
scas
cmp
loope
mov
mov
fildl
movsl
jge
daa
iret
sbb
aas
adc
inc
aas
rcrb
dec
fwait
movsl
mov
aaa
push
in
loop
dec
pop
jge
cmp
lock
push
xor
add
xchg
and
ret
lds
int3
mov
neg
sbb
pop
icebp
lahf
inc
adc
mov
ja
add
movsb
push
pop
test
fwait
out
loopne
addr16
test
push
pop
fidivl
pop
popa
sbb
push
adc
repnz
mov
iret
outsl
aam
ja
test
iret
out
mov
or
pop
cmp
xchg
neg
xlat
stc
lock
scas
jns
test
mov
arpl
testw
mov
inc
mov
sbb
out
push
rol
dec
cmp
out
sbb
dec
xchg
fiadds
ljmp
movsl
sub
es
stos
movsl
shll
dec
or
xor
jge
push
out
xchg
jp
insl
xor
jnp
pop
jae
roll
mov
and
test
fsubrl
mov
mov
cmp
mov
mov
lods
jle
test
bound
loop
in
sarb
mov
inc
pop
adc
jb
or
push
fdivp
inc
push
sahf
mov
ljmp
dec
fadd
mov
jbe
repz
mov
fs
inc
pop
js
cmc
fisubrl
shll
jge
mov
xor
cmpsb
inc
cmp
mov
lods
mov
mov
pop
push
mov
cmpsl
outsb
sub
iret
inc
push
mov
clc
xlat
push
add
jno
cmp
jg
sti
push
dec
cmp
xchg
stc
adc
ret
and
aad
cmpsl
sbb
icebp
cmpsl
push
outsb
aam
repz
xlat
lods
addr16
jmp
ret
cmp
mov
notb
adcb
push
rcr
inc
mulb
or
push
sbb
jmp
cmp
xchg
shl
jo
loope
jb,pt
shll
decb
idivb
mov
lret
inc
stc
mov
mov
inc
div
into
jmp
add
leave
fbstp
addr16
mov
or
andl
stos
das
add
addr16
scas
test
bound
stos
xchg
das
mov
dec
mov
inc
mov
mov
movb
xor
mov
inc
push
das
andl
mov
xchg
xchg
mov
dec
out
dec
adc
mov
sub
adc
or
mov
scas
jnp
out
mov
inc
stos
or
in
out
scas
rcl
rol
out
push
into
scas
std
insb
add
out
out
ret
mov
or
adc
inc
mov
out
loope
neg
mov
fnsave
repz
or
jg
sbbl
jne
ljmp
pop
add
mov
xor
pop
scas
inc
test
into
sub
push
test
jmp
jne
aaa
cmpsb
pop
int
pop
push
push
cmc
jbe
pop
notl
sub
push
cmpsl
jge
xlat
in
mov
xchg
xor
out
aas
inc
cmpsl
cmpsb
imul
xor
orb
push
sub
mov
jb
inc
mov
addr16
imul
push
xlat
adc
stos
add
cltd
pop
iret
jns
xchg
adc
mov
fstpt
xorb
cs
inc
insb
data16
push
add
mov
std
test
push
mov
ds
and
lds
dec
loop
jae
jne
dec
or
jge
sti
fildl
in
dec
lods
add
sti
adc
inc
rorl
sti
aad
lds
pop
xchg
pop
in
pop
test
ffreep
pop
and
mov
int3
add
sar
pop
dec
mov
cmp
insl
dec
dec
inc
out
arpl
repz
pushf
pop
ret
dec
and
orl
test
jae
sbb
adc
jns
cmp
push
mov
xor
push
lcall
enter
shll
leave
adc
std
push
push
aas
xchg
rep
fwait
adc
mov
iret
mov
pop
mov
ret
cmc
pop
mov
sahf
cmpxchg
movsb
pop
lods
iret
cmpsb
sbb
stos
mov
flds
and
aam
mov
in
in
sti
jg
in
xchg
aad
lahf
jmp
mov
xchg
push
add
popf
rolb
rolb
and
xchg
jae
add
add
adc
mov
sbb
lds
lcall
out
out
cmp
loope
inc
popa
nop
addr16
inc
inc
dec
int
or
notl
jle
mov
in
add
in
andb
cli
ss
test
ja
mull
addr16
cltd
or
and
xchg
leave
std
mov
outsl
lret
jecxz
mov
dec
push
stos
mov
in
and
repnz
dec
hlt
into
in
aaa
popa
xor
testl
cwtl
inc
cmp
insb
out
pop
pusha
mov
jae
jge
jne
jns
test
push
fists
into
xorb
dec
sbbb
insl
scas
aad
mov
testl
or
lcall
cmp
ljmp
add
mov
shrb
scas
or
cli
xor
xlat
std
movsb
or
aas
mov
fs
and
ret
xor
add
inc
or
mov
and
mov
inc
insb
iret
sbb
shrl
jecxz
mov
stos
inc
xchg
call
sub
iret
pop
cmpsb
js
xlat
into
cmpl
add
inc
loope
pop
stc
mov
mov
xchg
jl
decb
push
pop
inc
test
fs
test
pop
into
lds
test
outsl
ret
pop
push
out
push
enter
jmp
jae
xchg
add
sti
outsb
dec
push
adc
scas
jne
addr16
mov
sbb
cmp
flds
dec
jge
or
fdivl
sub
push
stos
jge
and
push
popf
ljmp
mov
icebp
xlat
dec
insl
adc
das
imul
out
hlt
cmpsl
mov
orl
ds
out
jle
dec
lahf
outsb
fistl
aas
jno
test
das
pop
into
into
cmpsl
mov
mov
inc
add
ret
push
xchg
or
cmpsb
inc
jge
cli
mov
vpmulhw
xor
mov
inc
stos
xor
and
mov
stc
aam
int
aam
ja
pop
outsb
jno
push
mov
sti
es
xchg
iret
pop
imull
cmp
add
in
ja
sub
pop
ss
adc
dec
pop
out
xor
xchg
mov
mov
in
jg
mov
xchg
outsw
push
push
adc
sub
inc
sahf
pop
ret
add
mov
adc
xchg
cmc
add
jb
pop
test
cmp
jge
adc
xchg
adc
mov
inc
cmp
data16
mov
jnp
jnp
in
in
dec
pop
mov
pop
jmp
out
dec
hlt
repnz
orb
cmc
js
fwait
in
add
pop
jg
arpl
jg
cmc
sub
pop
or
jne
xchg
mov
and
and
sub
push
mov
sbb
push
jmp
or
outsl
sbb
fwait
nop
jae
cmc
loopne
push
sbb
fisttpll
pcmpgtd
or
adc
sbb
and
test
adc
outsl
insl
add
in
mov
mov
pop
mov
bound
mov
and
push
or
sbb
xchg
inc
and
or
jnp
ret
outsb
repnz
jmp
and
lock
nop
or
mov
mov
mov
lds
pop
xor
mov
leave
mov
inc
adc
xchg
bound
gs
sbb
scas
push
push
jmp
sbb
stos
imul
in
dec
adc
jmp
cmc
pop
xor
lock
popa
cli
add
jle
aad
or
fbstp
sbb
fcoms
cmpsb
lret
insl
cmp
outsb
sub
out
popf
cmpsl
ficomps
int3
dec
mov
maskmovq
notl
inc
cmpsl
jecxz
and
bound
sti
inc
or
lods
insl
aam
out
xchg
or
cmpsl
mov
cmp
pop
in
jmp
gs
and
bound
insl
inc
in
jnp
mov
outsb
shlb
cmp
pop
xchg
repnz
std
rclb
std
insl
outsb
lea
divb
iret
jbe
jne
aam
js
xchg
pop
add
outsb
ret
out
aaa
mov
inc
mov
dec
out
int
cmpsb
pop
daa
and
repz
xchg
push
push
loop
lock
mov
leave
cmc
popa
in
jbe
hlt
add
jecxz
es
sub
and
stos
jp
adc
mov
enter
subb
jae
insl
test
fbld
add
aad
out
loopne
push
add
shll
insl
cmpsb
outsl
pop
sub
adc
icebp
fcompl
or
mov
jg
xchg
jnp
dec
or
clc
adc
test
push
or
push
fwait
insl
imul
lock
cld
jo
xchg
loop
add
and
adc
or
aam
jne
jp
pop
jb
out
aad
das
lea
ja
xchg
mov
rolb
jae
push
scas
repnz
movsb
fildl
addr16
sub
add
movsb
insb
mov
cmp
fsts
arpl
out
iret
int
add
fs
fucomi
push
push
lds
cs
les
jg
dec
fldenv
outsb
pop
sub
loope
inc
into
ss
ficompl
push
pop
sbb
adc
or
es
stc
testl
sbb
cmp
pop
and
mov
jmp
popa
jo
mov
sub
daa
test
clc
icebp
out
ret
aad
lahf
xor
inc
dec
std
incl
test
dec
mov
mov
test
mov
push
daa
mov
arpl
cmc
mov
push
aaa
sbb
mov
jp
push
pop
popa
and
addr16
pop
fwait
push
movsb
addb
lret
out
add
pop
mov
dec
jno
jae
dec
test
pop
cmc
xor
divb
pop
insl
cmc
inc
arpl
cmc
cltd
pushf
cmpsb
inc
movsl
lods
into
mov
pushf
es
mov
sub
xchg
out
stc
int
jbe
and
sbb
inc
out
cs
fs
and
dec
xchg
ret
gs
addr16
mov
sbb
xchg
xchg
sahf
es
lret
dec
gs
pop
adc
shll
sbb
and
push
mov
inc
in
roll
jecxz
cmp
and
fs
sub
jmp
rorb
inc
jmp
push
push
mov
inc
fisubrs
jbe
aam
push
push
daa
jb
rcrl
cld
dec
das
mov
ret
imul
xchg
pop
push
testb
jmp
out
out
out
and
out
subl
mov
jno
xor
mov
out
mov
test
js
ljmp
stc
dec
andb
jo
mov
pusha
lret
into
mov
cmc
ds
sbb
test
sub
icebp
in
fs
mov
inc
or
push
cs
test
aad
arpl
imul
jge
out
adc
jno
dec
out
mov
sub
movsb
adc
cwtl
fwait
push
sub
inc
xor
lds
push
jle
cld
and
jae
xchg
jno
es
mov
pop
test
pop
in
mov
shl
dec
hlt
shrl
inc
fdivrl
dec
pop
pop
sbb
xchg
mov
push
push
jb
inc
repnz
xchg
bound
inc
jg
lock
outsl
out
ficoml
inc
pop
xchg
pop
lds
sbb
adc
add
adc
fists
fildl
shl
xchg
pushf
sbb
lea
arpl
lock
aaa
shl
repz
hlt
pop
out
add
scas
icebp
out
xor
lods
daa
pop
xor
out
inc
adc
frstor
je
xchg
movsb
into
pop
stos
sbb
jl
test
xchg
adc
or
push
inc
test
ja
jg
mov
push
cmp
push
and
cmpsl
add
cmp
cltd
into
lret
cs
xchg
jnp
cmc
filds
push
shlb
jl
shlb
mov
push
out
push
out
cmpsl
test
int
mov
inc
and
outsl
in
inc
adc
arpl
repnz
repnz
je
push
test
fildl
cmpsb
add
xchg
loope
lahf
sahf
xor
pop
mov
arpl
andl
dec
arpl
out
sarl
jne
sub
add
pop
ret
cmc
gs
rcll
inc
mov
mov
xor
cmp
int3
xchg
scas
add
ds
mov
push
cli
and
push
in
and
repz
cmp
mov
mov
mov
pop
cmpsb
cmc
aam
mov
mov
xor
clc
xor
call
xor
xchg
xlat
or
mov
mov
cmpsl
lahf
mov
xchg
pushl
pushw
xor
mov
sahf
icebp
sub
insb
ds
fnstsw
test
ret
fwait
shll
dec
scas
xchg
jb
ret
dec
inc
adc
push
mov
cmpsb
sub
mov
inc
mov
pop
mov
mov
jnp
push
ret
lods
std
xchg
aam
rcll
insb
stos
in
pop
push
es
out
cmp
test
mov
jle
pop
pusha
lods
addr16
push
pop
mov
or
xchg
neg
jno
dec
je
pop
lock
test
mov
xchg
out
sarl
jmp
push
stos
popa
jl
addl
daa
neg
push
daa
lods
mov
into
xchg
cmc
lods
inc
sub
les
dec
mov
mov
push
mov
sbb
ljmp
int
mov
insl
into
gs
out
out
insl
cmpsl
in
daa
pop
push
in
xchg
inc
pop
jbe
ss
out
dec
jo
addr16
mov
jne
outsb
sbb
mov
pop
push
inc
inc
je
iret
loop
aas
stc
ja
sub
adc
arpl
sub
jle
dec
cmp
stos
pop
test
dec
outsb
movb
pop
aas
inc
cmp
icebp
bound
fdivp
rorl
sub
xor
std
cmpsl
scas
cmp
push
xchg
cli
cmp
add
xchg
adc
and
mov
scas
or
and
repnz
pop
lds
sub
and
aaa
test
insb
mov
mov
addr16
inc
mov
js
scas
mov
sub
dec
fimull
mov
add
add
mov
in
jns
sti
mov
pushl
xor
ret
popf
inc
aam
pusha
sbb
push
int
into
in
scas
mov
jns,pn
or
push
dec
mov
mov
ret
mov
jb
jecxz
icebp
insl
sub
or
jo
jle
das
decb
add
in
adc
mov
sti
cs
je
mov
outsl
mov
cwtl
mov
mov
mov
scas
add
out
dec
mov
inc
inc
xor
or
mov
cmp
mov
inc
test
fwait
repnz
into
shll
out
cmp
pop
out
and
pop
aaa
mov
sarl
out
clc
adcb
lods
arpl
jmp
mov
or
stos
xchg
leave
push
inc
addr16
lods
mov
pop
mov
lea
jmp
pusha
adcb
lods
dec
call
outsb
jb
sahf
inc
dec
push
add
push
push
inc
xor
add
lds
clc
mov
inc
jo
xor
and
out
mov
mov
adc
pop
lock
sub
jno
lds
xor
inc
xor
mov
mov
std
cmc
aad
ds
cltd
cmp
sbb
subb
ljmp
and
into
mov
add
pop
stc
sub
out
arpl
dec
inc
mov
cltd
cs
add
daa
mov
jae
into
mov
sbb
fldpi
sahf
sub
shll
inc
pop
inc
dec
sub
mov
push
xchg
enter
in
lods
inc
mov
data16
mov
out
xor
xchg
ljmp
fnsave
in
daa
gs
test
jnp
es
ror
cmc
xchg
mov
outsb
lods
push
pushf
xor
out
test
call
push
das
stos
jecxz
lods
test
int
fisttpl
fwait
or
jns
movsl
xor
cmpsl
fucomp
icebp
aad
addr16
adc
fisubs
push
imul
inc
fsts
jecxz
pusha
adc
sti
cmp
add
pop
xchg
xchg
cmpsl
jbe
dec
aaa
sahf
fcmove
fcmovnb
add
mov
jbe
cwtl
lea
call
mov
mov
inc
fstl
cld
daa
and
or
pop
scas
jns
mov
inc
sarb
pop
jbe
bound
xchg
loope
test
cmpsb
testl
push
ror
fidivs
mov
clc
mov
fwait
push
lea
mov
cmpsb
pushl
daa
cmpsl
push
xchg
fsubl
push
add
cmp
inc
repnz
enter
in
sub
sti
loope
xchg
into
in
lahf
mov
push
adc
les
sbb
pop
xchg
add
pop
test
loope
inc
pop
inc
add
lea
aas
mov
cmpl
dec
cmp
test
sub
mov
sub
repnz
sub
icebp
pop
lea
sub
shlb
call
jg
push
fistps
icebp
clc
ja
daa
sub
and
rcr
mov
repz
outsl
inc
inc
test
hlt
testl
hlt
fisttpll
jecxz
out
sahf
shlb
or
out
inc
test
movsb
mulb
mov
daa
aad
push
push
push
out
subb
jb
push
aam
daa
mov
mov
inc
cmp
mull
inc
sub
mov
inc
lods
into
pop
nop
adc
mov
mov
ret
fs
push
or
and
lds
pop
sub
or
jbe
dec
sbb
andb
sbb
pusha
aad
frstor
lcall
scas
icebp
jg
mov
into
cmp
jne
adc
jnp
cwtl
cmpsb
or
in
lea
jne
pop
or
pop
dec
push
mov
xchg
in
hlt
xchg
aad
test
jo
mov
cmpsl
sti
sbb
fs
inc
sub
and
inc
jb
xor
or
into
mov
or
mov
or
dec
jmp
addb
sahf
fwait
ret
in
ja
pop
cmpsb
subb
xchg
sti
sahf
stos
push
addr16
dec
cld
add
lods
lahf
scas
mov
test
sub
adc
cltd
js
mov
ret
rcrl
xor
mov
cmp
mov
test
jae
lret
mov
sub
dec
rcrb
stos
aad
test
pop
push
data16
mov
sub
cs
lock
mull
xchg
ss
out
insl
mov
out
cmpsl
add
test
hlt
pop
out
inc
jecxz
test
pop
test
cmp
iret
xchg
push
and
xchg
cmpsb
adc
fisubs
cmp
mov
xchg
dec
inc
push
repnz
les
ljmp
jmp
and
cmpsl
jne
les
push
test
je
rcl
repnz
cs
sbb
stos
es
fs
popf
mov
in
cmpsl
or
cmpsl
pop
addr16
cmpl
dec
pop
mov
xchg
push
jns
out
add
fdivs
jns
push
sti
mov
add
push
inc
cmp
nop
cmp
std
test
and
loopne
aam
test
add
ds
insb
mov
hlt
movsl
push
push
in
jmp
leave
xchg
pop
add
ret
sub
scas
leave
xor
fcompl
add
sbb
or
jns
fldenv
insb
push
mull
dec
incb
popa
jbe
jne
xor
test
scas
test
cs
jo
push
mov
push
idivl
dec
rcrl
divl
out
and
xchg
dec
lods
push
clc
scas
lock
dec
mov
mov
jl
xchg
shlb
fnstsw
adc
stos
xchg
pop
in
fisubl
xchg
jbe
imull
int
outsb
in
mov
push
pop
jecxz
push
push
shlb
fwait
dec
repnz
icebp
mov
inc
sbb
fidivs
pop
mov
fimuls
add
mov
cmp
xorb
in
xchg
xchg
pop
or
xchg
dec
jo
adc
in
dec
movsl
add
rclb
cmpsl
outsb
xorb
notl
fxam
inc
fnsave
push
outsb
push
mull
adc
add
push
cmp
adc
out
jmp
sbb
mov
daa
or
addl
ljmp
lds
pop
orl
jle
sub
and
mov
pxor
lcall
adc
mov
cmp
sbb
mov
xchg
cmp
cmpsl
mov
pop
jecxz
repnz
lods
jnp
lds
jmp
pop
cmpl
repnz
pusha
popf
jmp
dec
outsb
push
push
xorl
sbb
mov
jns
into
xchg
jecxz
pop
cmpsb
push
cmpsb
lods
cmp
movsl
in
fidivrs
scas
inc
push
scas
iret
mov
sub
jg
outsl
ljmp
inc
dec
testl
dec
cmpb
test
es
imull
or
ljmp
fs
jmp
paddb
subb
dec
push
cmpsl
push
adc
mov
sbb
clc
dec
dec
fwait
xchg
scas
add
insl
inc
inc
pop
xchg
idivl
aad
in
jge
sbb
shlb
stos
popf
movsl
xor
popa
xchg
cmpsl
and
daa
add
stos
cmpsb
push
cmpsb
lods
cmp
in
test
sysret
push
enter
inc
push
aad
mov
les
push
movsl
xchg
nop
aad
stos
lahf
pushf
adc
dec
jle
pop
push
fstpt
push
fldl
jmp
dec
test
pop
mov
and
cli
mov
xchg
outsb
out
ds
xchg
stos
mov
cs
or
ret
aas
cmp
scas
ret
jns
mov
data16
mov
pop
and
rcrb
out
cs
inc
push
fistpll
cmp
repz
mov
jnp
repnz
adc
cs
insb
test
sahf
test
xchg
jl
sahf
test
movsb
jae
inc
icebp
mov
aam
pusha
xchg
scas
je
les
and
cltd
push
out
pop
adc
int
je
arpl
cmp
push
xlat
xchg
pcmpeqw
pop
sar
push
dec
out
sar
fwait
jae
test
jle
push
cld
cli
cs
lods
jp
addr16
jno
adc
sti
cli
repnz
bound
adc
lea
adc
pushf
push
add
push
daa
out
mov
popa
mov
push
aas
les
imul
shlb
or
dec
data16
and
insl
fwait
aad
add
cmp
push
lods
sahf
xchg
mov
lds
pop
test
pmulhuw
cmp
out
cmpsb
out
repz
adc
mov
insl
shrb
and
sub
xchg
je
jg
mov
lds
hlt
std
mov
sbb
push
aad
ret
and
jecxz
and
dec
jg
mov
ja
dec
das
arpl
xchg
loop
push
fucomp
loope
testl
aas
es
rclb
jecxz
subb
adc
fstpl
movsl
cmpsl
dec
push
fs
or
lea
push
dec
inc
pop
cmpsl
or
pop
mov
out
dec
divb
cmp
adc
out
lcall
cwtl
sbbb
inc
shlb
jnp
mov
pop
leave
adc
inc
pop
sub
inc
pusha
pop
adc
jge
xchg
push
ss
mov
cmpsl
loopne
jae
xchg
adc
data16
xchg
cmp
push
sub
and
shll
sarl
adc
out
xor
orl
or
inc
mov
clc
xor
dec
mov
cs
or
jno
jb
data16
pop
inc
push
lods
push
add
jbe
movsl
xchg
sahf
add
push
rolb
inc
call
addr16
mov
cmp
xchg
cli
addr16
and
sbb
scas
flds
jns
popf
into
mov
mov
scas
fiadds
js
push
sub
outsl
test
sbb
fs
xchg
xor
scas
ret
out
aam
clc
addl
jbe
imul
test
int
jbe
test
shl
push
mov
dec
test
cmp
dec
xchg
sbb
adc
adcl
mov
hlt
inc
sbb
jo
mov
inc
cmp
out
or
nop
fistps
movsw
dec
rcl
or
cs
iret
out
add
cld
and
mov
rolb
test
shl
lcall
sub
add
inc
mov
loopne
incb
lods
push
sbb
test
and
lret
lock
filds
dec
inc
fnsave
or
movl
xchg
test
ds
jo
shrl
xlat
mov
ds
xlat
fstps
cmp
push
pop
and
lods
push
jo
mov
movsb
int
mov
jmp
fwait
test
in
mov
loopne
push
insb
icebp
repz
push
dec
int3
mov
mov
sbb
iret
inc
jmp
notl
push
sub
mov
stos
mov
push
cmpsl
cmp
idiv
cmp
and
xchg
pop
ds
cwtl
sbbb
into
inc
std
add
std
aaa
stos
jae
cmp
out
out
inc
lahf
jge,pt
mov
jnp
mov
or
xchg
call
inc
xchg
mov
adc
xchg
sub
mov
sarb
stos
jge
test
add
shlb
mov
out
push
xchg
xchg
pop
dec
in
jb
addr16
mov
inc
cmp
fistpll
add
in
push
les
jl
inc
in
enter
dec
jae
xchg
ficoms
movsl
adc
mov
int3
shll
xor
mov
and
out
jge
aaa
xor
and
ja
mov
subb
movsb
pop
call
add
addr16
insl
inc
call
pop
push
pop
fbstp
inc
test
xchg
mov
xchg
inc
cmp
test
leave
ja
jbe
pop
shlb
push
inc
pop
aad
clc
jecxz
dec
nop
data16
mov
shlb
test
and
inc
ds
xor
pusha
jecxz
sbb
mov
aad
in
movsb
pop
inc
dec
fdecstp
mov
xchg
test
je
jge
ret
fisttps
mov
in
mov
lret
repz
testl
jo
pop
jge
pop
aad
cmc
xor
mov
pop
out
xchg
stc
dec
pop
stc
ss
mov
std
cmp
cmp
mov
sub
xchg
mov
andl
and
shrl
inc
fwait
xor
ret
out
and
movsl
test
add
cmc
jmp
xchg
cld
div
stos
push
adcl
out
rorl
push
es
push
fistpl
in
jecxz
xchg
mov
adc
repz
push
cmc
fs
insb
sbb
mov
ja
inc
mov
cmp
jbe
fisubrs
mov
sahf
shll
insl
cltd
mov
scas
xchg
jbe
inc
sbb
shr
sbb
add
addr16
sub
sub
fidivs
shr
ror
fprem1
fstl
aam
test
jne
outsb
jno
movsb
std
jle
fidivrs
cmc
or
out
push
nopl
out
push
jge
dec
mov
mov
and
cmpsb
lock
push
adc
jae
hlt
mov
ret
adc
mov
pop
xor
xchg
cmp
pop
jmp
fwait
shld
movsb
popa
adc
cmpb
ret
rcrl
add
addr16
ficoms
cs
push
fidivrs
cs
add
push
lods
pop
loop
lret
sbb
adc
and
cmc
add
inc
je
mov
pop
mov
mov
inc
fildl
repz
cltd
imul
popa
jno
xor
push
cmpsl
push
mov
test
test
lcall
adc
repnz
leave
out
add
filds
push
add
xchg
mov
jp
mov
xchg
xor
faddl
outsb
mov
ret
jae
xchg
adc
andb
jmp
sub
in
jnp
jne
ljmp
jns
adc
adc
je
arpl
out
ja
shlb
arpl
test
inc
test
adc
loope
mov
push
sarl
fildll
xlat
sub
andl
cmp
scas
sbb
ret
movsl
les
popa
add
shll
test
sbb
mov
aaa
sbb
hlt
das
jg
jg
das
aam
in
push
aam
bnd
pop
fs
inc
movsl
xor
mov
inc
addr16
mov
pop
xor
jb
mov
loop
push
or
mov
cmp
out
mov
add
in
mov
testb
mov
rcl
xchg
sub
mov
lods
cli
pop
pop
out
cmpsb
adc
add
rol
xchg
adc
loope
shl
mov
pop
inc
xchg
cmpsl
xchg
sahf
fwait
test
jno
fisttps
mov
mov
mov
std
sbb
cmc
and
out
das
jne
jo
sub
daa
mov
testl
js
scas
jmp
pop
fwait
je
xchg
xchg
sti
jb
jbe
mov
int3
cmp
cmpsb
movsl
mov
mov
mov
lea
outsl
pop
jae
xchg
stos
inc
hlt
add
push
movsb
mov
adc
int
andb
or
jp
jae
dec
pop
outsb
inc
es
cmpsb
pop
out
rcr
cs
mov
xchg
and
std
out
lret
aaa
outsb
mov
stos
icebp
cmpsb
cs
scas
rcrl
add
mov
es
sahf
pop
js
loop
xor
and
pop
mov
mov
addr16
cmc
mov
sub
xchg
adc
push
mov
jns
lret
cmc
pushf
fwait
xchg
sbb
cmp
in
dec
insb
cwtl
fimuls
in
jo
inc
dec
jle
daa
xor
xchg
data16
cltd
pushf
insl
mov
xlat
fstps
addr16
fcoms
mov
scas
and
out
jecxz
jno
dec
jne
fldt
push
mov
daa
in
in
dec
jecxz
jne
sbb
fistl
add
mov
repnz
fiadds
inc
repnz
movsl
push
jne
repnz
test
outsl
xor
pop
fiaddl
sub
jmp
cli
outsl
push
and
data16
loop
push
mov
es
mov
mov
xor
sub
push
test
into
popf
inc
std
in
mov
jbe
outsb
pop
mov
cmp
scas
out
repz
lahf
inc
sbb
stos
mov
pop
stos
jne
xchg
test
stc
mov
dec
lock
dec
addr16
jno
mov
sahf
pop
mov
mov
sahf
loope
outsb
push
dec
outsb
daa
mov
cmpsl
mov
lret
xor
push
pop
lods
mov
cmp
xor
fiadds
cmc
sub
adc
inc
and
scas
push
jb
movsl
insl
jno
cmp
adc
ja
lea
mov
xlat
xchg
loope
out
pop
dec
rorl
lds
aaa
lock
xlat
dec
in
mov
sbb
in
mov
loope
mov
std
orb
jmp
sub
cmp
cld
inc
movsl
adc
adc
insb
dec
xor
inc
les
scas
mov
jmp
in
inc
cwtl
repz
js
idivl
ja
aad
ror
xor
adc
test
aad
jle
push
xchg
addl
push
cld
cmpsl
mov
xor
fidivl
lods
ret
pop
ret
pop
and
or
pop
movsb
inc
mov
jne
movsl
ret
jnp,pt
lea
mov
adcl
push
pop
ss
mov
add
mov
daa
fwait
mov
pop
popf
inc
cmp
cld
outsl
mov
sbb
and
ret
fs
or
jge
jnp
mov
dec
cmp
cltd
mov
data16
out
xchg
push
mov
or
ja
rcll
fiadds
jb
pop
aad
lds
popa
ret
out
test
je
pop
imul
lods
xchg
faddp
push
loope
xor
mov
ja
push
ficoml
pop
sbb
xchg
out
xchg
sbbl
pop
das
adc
ret
xor
test
sti
aad
pop
jo
mov
jnp
xchg
cs
test
insb
or
out
fwait
test
out
cmp
cmpb
lea
ret
ja
or
mov
sub
int
push
pop
ret
and
movb
cmp
push
dec
pop
inc
mov
jmp
movsl
icebp
sub
lds
mov
testl
xrelease
mov
push
cs
lret
imul
add
dec
sar
out
iret
mov
imul
lds
push
test
arpl
lcall
ret
inc
push
outsw
enter
mov
shll
daa
push
mov
movl
push
mov
push
jmp
and
cs
push
insb
mov
xor
inc
and
test
cmp
mov
pop
add
add
cmpsb
repz
fwait
jmp
push
pop
es
mov
shr
cs
lds
adc
inc
test
xchg
and
jmp
jne
sbb
xchg
cmp
push
push
mov
jg
cmpsb
push
into
push
mov
cwtl
outsb
sub
pop
add
jmp
pusha
and
xchg
sbb
xor
xor
jae
fistl
mov
ds
pop
mov
jg
xor
loopne
in
inc
sbb
fcomp
jle
shrl
data16
pop
mov
shrl
mov
out
mov
jo
aad
mov
push
add
insb
mov
shlb
out
cmp
inc
inc
inc
jmp
sbb
jl
adc
lcall
pop
push
push
inc
jmp
sbb
add
jbe
pop
adc
inc
jae
sbb
xchg
je
inc
js
cmpsb
mov
xchg
ficomps
jmp
in
adc
push
push
icebp
insl
mov
jae
subl
dec
sarb
orb
inc
mov
ret
pop
xor
orl
daa
and
jmp
xchg
cmp
cmc
and
push
push
and
xchg
lea
and
mov
mov
and
ds
pushfw
stos
test
dec
fnstenv
ficoms
out
fisttps
out
jmp
subl
dec
icebp
outsb
jno
outsb
nop
outsl
fwait
cmp
xchg
jmp
repz
xchg
icebp
pop
cwtl
add
cmp
push
pop
rorl
jno
or
clc
mov
mov
cmp
stc
jp
push
and
jmp
stos
or
rclb
negl
jbe
dec
jae
sbb
movsl
data16
repz
dec
sub
movsb
jbe
jecxz
push
arpl
loope
popf
cmc
fimuls
cmpsb
dec
mov
xchg
jb
sbb
and
xchg
cmpl
je
dec
pop
int3
mov
mov
xchg
mov
cmp
and
pop
out
andl
dec
push
mov
fidivrs
sub
pop
test
and
test
loope
test
and
xor
mov
aaa
mov
leave
sbb
fs
mov
arpl
insl
pop
fs
jge
push
pop
test
repnz
mov
dec
filds
loop
aad
jae
js
jnp
jns
cli
cld
and
out
cmpsl
mov
pop
cmpsb
adc
adc
adc
pushf
inc
cmpl
scas
or
mov
jno
mov
sbb
jecxz
xchg
pop
sti
flds
movb
fldenv
sub
cmpsl
loop
addr16
lds
and
addr16
cli
mov
js
pop
lods
rorb
sbb
lahf
jecxz
popa
int
xchg
add
das
xor
sub
out
notl
hlt
lea
loope
xor
add
into
lret
jg
dec
inc
iret
push
adc
push
or
lahf
inc
cmc
clc
dec
adc
sub
inc
sahf
out
dec
pop
jne
or
push
push
int3
lods
test
cmp
lret
sar
xchg
popl
addl
sbbb
les
aas
aam
inc
cli
jnp
mov
idivl
rcll
std
pop
nop
out
jl
out
mov
mov
mov
jmp
stc
and
jp
mov
filds
dec
mov
inc
inc
mov
mov
inc
hlt
or
fiadds
inc
in
daa
lret
ljmp
test
cmp
rclb
xor
push
sbb
sti
mov
and
mov
popa
cmp
sbbl
sarb
add
std
xchg
out
mov
mov
sti
pop
vpcomuq
dec
rorl
xchg
xchg
pop
cmc
cmc
mov
stos
loope
ficompl
shlb
in
push
sbb
push
mov
gs
and
mov
popa
sahf
flds
outsb
test
mov
sti
int
negl
jecxz
stc
jae
add
add
mov
les
mov
ljmpw
fldt
stos
dec
shll
push
mov
xor
pop
incb
retw
add
fisubs
sub
movsl
into
scas
fnstcw
cltd
mov
push
and
sub
mov
sbb
add
xchg
aam
lods
paddsb
ja
idiv
pop
movsb
jnp
and
pop
adc
adc
les
mov
xchg
and
cmp
and
pop
dec
sbb
fldt
out
xchg
dec
aas
mov
push
inc
clc
rcll
aad
sub
push
mov
movsl
shll
lea
add
jg
xor
adc
out
pop
je
aam
xlat
fiadds
subl
repnz
loope
and
loope
imul
fidivrs
mov
movsb
sahf
pusha
inc
movsl
pusha
test
vmovdqu
mov
mov
mov
add
dec
test
dec
std
popa
push
inc
mov
jb
push
ficomps
lods
push
rcll
xor
inc
xchg
inc
lds
and
shlb
ficoml
movsl
cmp
jg
icebp
sub
cmpsl
fadd
dec
sbb
adc
mov
into
imul
fwait
cmc
add
xchg
daa
in
dec
hlt
inc
lret
cmc
dec
scas
aam
lods
cmpsl
je
in
ret
adc
roll
mov
pop
loopne
cmp
andl
aam
push
fwait
out
sbb
adc
rclb
lret
or
xchg
mov
imul
xcrypt-ofb
cmpsl
out
leave
imul
subb
leave
pop
push
enter
pinsrw
sti
or
not
and
cmc
cmp
and
mov
loope
mov
jecxz
jae
hlt
out
xchg
ret
push
sub
jle
fwait
arpl
jbe
add
jb
xor
popa
repnz
test
pop
es
add
add
paddusb
inc
jp
sbb
pop
fstl
jo
in
fnstcw
push
mov
dec
test
js
rcll
je
add
mov
imul
jge
out
jl
dec
cmp
mov
test
sbb
sti
jnp
inc
cltd
jmp
outsb
arpl
xor
arpl
pop
ljmp
in
enter
push
or
stos
hlt
gs
insb
andb
xor
mov
out
aas
imul
movsb
sbb
push
js
pop
jecxz
jo
ja
cmpl
repz
cmpsl
add
js
sbb
daa
and
fwait
mov
out
icebp
insl
xchg
jae
xchg
sub
aam
cmpsl
es
push
xchg
popf
pop
cwtl
roll
aad
jmp
and
cmp
push
xchg
mov
push
add
adc
scas
inc
mov
mov
push
out
dec
jmp
pop
ja
out
mov
out
std
cs
xorb
and
push
cmp
add
es
mov
push
arpl
ja
test
xchg
test
nop
ljmp
aas
out
jo
mov
out
sahf
out
std
mov
mov
negb
call
sti
leave
popa
cmp
iret
test
sbb
scas
pop
sub
add
leave
repz
dec
aaa
and
sub
out
fists
jp
mov
push
imull
sub
xchg
popa
out
fdivrl
ret
mov
jecxz
xchg
pop
mov
shl
mov
inc
not
pop
jecxz
sahf
aaa
cmc
xchg
iret
int
jo
jge
xor
fnstsw
adc
adcb
fistpll
pop
test
mov
out
fwait
push
rorl
std
inc
cwtl
addr16
out
lret
mov
loop
add
inc
or
insb
mov
out
in
daa
lock
sahf
lahf
fs
test
mov
decb
dec
mov
stos
fidivs
or
push
notl
lea
sarl
popf
dec
aad
and
repnz
mov
xchg
test
dec
mov
mov
cmc
in
xor
and
push
add
out
shrb
dec
pushf
clc
ror
xchg
and
repz
xchg
push
movsl
sahf
out
push
mov
fsub
inc
add
in
popf
out
pop
xchg
mov
sti
adc
jns
xchg
and
jne
sbb
xchg
lds
das
imul
ljmp
pop
xor
popf
jo
pop
cmp
inc
or
sbb
sub
sbb
adcl
out
gs
dec
jl
jmp
mov
jbe
lods
push
rolb
addl
or
add
repz
push
das
mov
push
insb
push
mov
add
testb
mov
jmp
adc
fsubs
outsl
jbe
xchg
sbb
pop
xor
shl
cmpsl
in
xchg
pop
test
lods
push
jae
insl
sbb
in
mov
inc
fildl
and
adc
bound
sarl
int3
adc
jne
mov
mov
sbb
sarb
fwait
gs
sbb
repz
sbb
dec
pop
jl
aas
data16
mov
adc
lock
loopne
hlt
xchg
orl
out
xor
xlat
jbe
movsl
addr16
or
icebp
xchg
jmp
gs
add
adc
adc
jo
mov
mov
pop
dec
test
shrb
jmp
inc
pop
repnz
cmp
shll
dec
cmp
outsl
push
jo
jecxz
in
and
out
mov
jae
jg
cmpsb
push
push
in
lods
data16
pushf
adc
and
xor
xorl
data16
inc
addr16
dec
cmp
or
xorb
imul
jp
sahf
inc
out
fildl
outsl
sarb
mov
bound
pop
mov
or
in
dec
imul
imul
cmpsb
js
scas
jmp
mov
jbe
sub
js
pushf
mov
nop
jnp
rol
mov
fisttpl
mov
arpl
or
shll
pop
push
jmp
xchg
daa
jne
imul
push
or
pop
or
pop
orb
sahf
mov
jo
jns
mov
xchg
stc
daa
out
jo
mul
sbb
cmc
out
jecxz
inc
adc
mov
cmc
mov
xchg
jbe
loope
jmp
ja
int
jns
push
cmpsl
jecxz
xor
imul
and
daa
repz
pop
mov
out
mov
stos
ja
sbb
ja
adc
gs
out
mov
cmpsl
xchg
into
fistl
es
mov
sbb
push
mov
mov
test
cmp
ret
das
sbb
incb
and
movsbl
stos
flds
test
jge
pop
lahf
lods
jns
leave
test
mov
adc
int3
mov
xor
std
dec
jae
sbb
popf
jb
gs
pop
cs
ret
jo
bound
dec
aam
mov
or
mov
ja
inc
push
int3
cmp
data16
inc
xor
add
aaa
lods
daa
adc
test
fs
jg
push
andb
jmp
dec
lock
and
mov
xchg
fwait
pusha
out
sub
cmc
inc
sub
leave
or
fwait
lea
call
and
push
and
push
loope
roll
sbb
mov
push
or
xchg
pop
loope
jmp
cmpsb
and
lret
bound
test
data16
stos
orl
dec
cmp
inc
mov
jle
push
stc
sub
jmp
mov
outsb
mov
push
dec
adc
cs
jmp
sub
fs
lods
xchg
inc
je
test
bnd
mov
or
jmp
push
and
outsb
hlt
xor
adc
xor
fs
faddl
or
inc
outsl
lds
sbbl
lahf
or
lahf
cltd
sbb
jbe
in
push
ljmp
xchg
addr16
or
add
outsb
add
push
mov
pop
outsb
pop
xor
jl
shll
inc
or
fwait
es
mov
or
out
stos
shrl
loope
inc
cmc
in
mov
inc
outsl
inc
adc
pop
shl
jmp
cltd
fwait
xchg
cs
les
jae
addr16
xlat
mulb
pop
push
aaa
mov
mov
jg
outsl
add
push
sbbl
subl
and
fnstsw
outsl
addr16
sbb
adcl
mov
xor
cmpsb
push
add
jno
test
push
aad
jae
mov
icebp
out
inc
cmpsb
insl
jg
outsl
lret
jmp
test
fldenv
jae
shr
inc
mov
mov
xlat
nop
out
cmp
pop
cmp
or
insl
cmpsl
lods
movsb
xchg
push
push
fstpt
push
dec
pop
inc
fwait
xchg
mov
xor
xor
cmc
pop
rcr
pop
outsl
shlb
stos
fldl
cli
movsl
fwait
je
sbb
xchg
inc
loopne
jb
mov
ss
ja
add
cmc
cmpsl
into
fwait
mov
fnstcw
fisttps
rclb
lcall
cs
fwait
scas
in
mov
sbb
lcall
gs
outsl
mov
sti
mov
jecxz
ljmp
rorb
and
sub
push
dec
mov
and
inc
insl
add
push
xchg
shrl
add
test
testb
xchg
lods
or
cwtl
inc
insb
dec
in
inc
jle
imul
jbe
je
pop
scas
mov
mov
inc
outsb
cs
xchg
sti
lcall
inc
fwait
xor
mov
es
into
mov
mov
call
dec
xor
stos
mov
daa
cmp
add
inc
lret
lods
sub
out
xor
je
cmp
test
jbe
inc
push
in
shrl
mov
outsl
daa
fs
pop
add
enter
ffree
outsl
lods
cli
cli
add
xchg
mov
ljmp
inc
notb
adc
sub
insl
pop
out
pop
loop
aas
lods
xchg
ja
das
pop
push
mov
mov
jg,pt
mov
push
jns
dec
loope
cmpsb
mov
mov
sub
pop
js
pop
pop
jg
xchg
pop
mov
fcompl
mov
adc
pop
incb
mov
imul
inc
adc
mov
pop
sbb
mov
test
mov
pop
jmp
das
jmp
cs
inc
dec
out
lock
test
adc
add
cs
jg
inc
fidivl
cmpsb
mov
xchg
add
pushl
xchg
out
push
out
mov
jl
push
push
int3
pop
inc
adc
pop
push
addr16
nop
mov
loopne
jne
repnz
jns
andl
loop
mov
lahf
incl
inc
mov
jge
push
test
mov
add
jge
mov
sbb
movb
jnp
mov
test
aaa
testb
sub
mov
rclb
scas
lods
cmp
cmp
adc
sbb
mov
jge
sbb
pop
and
mov
fs
sub
lcall
fadds
icebp
inc
movsl
outsb
aam
xchg
pop
data16
in
ds
and
jnp
fidivs
jno
aaa
mov
out
jg
jns
std
xchg
xchg
jo
ds
xor
mov
scas
push
movsl
jns
in
jbe
jbe
aam
add
push
mov
cli
popf
push
test
pmaddwd
testl
xchg
scas
mov
out
mov
cmp
cs
loop
xor
in
pop
push
popa
sbb
ja
mov
enter
inc
mov
dec
xchg
ret
addr16
pusha
xorb
repnz
pop
cmp
inc
jmp
adc
push
adc
fiaddl
insl
jge
jmp
out
ja
sub
inc
imul
add
jmp
sbb
stos
scas
arpl
sbb
mov
inc
ljmp
stos
inc
stc
ret
cwtl
jno
bound
lods
aam
rorl
and
lret
les
mov
stc
or
insb
sbb
inc
push
arpl
push
inc
lcall
imul
js
adc
xchg
push
into
rcrb
dec
sarb
cmc
cmpsb
repnz
gs
fnstsw
push
mov
aaa
insb
sbb
dec
test
es
fs
push
push
mov
hlt
js
sbb
cmpsb
lahf
iret
sub
pop
pop
sbb
push
and
out
stc
call
arpl
sar
inc
fdivs
ret
loop
daa
lods
cmc
in
cmpl
nop
lods
adc
pop
lret
inc
and
inc
adc
std
loope
inc
int
into
jno
fimuls
or
mov
out
mov
mov
loope
enter
or
push
js,pn
pop
jge
push
cld
jecxz
test
mov
clc
jo
inc
fadds
out
sub
push
and
shr
mov
insb
stc
inc
shr
icebp
mulb
nop
add
stc
mov
shlb
fcmovnb
jl
icebp
popf
xor
cmp
sbb
divb
dec
hlt
cmc
add
rorb
out
xchg
je
add
int
repnz
fwait
xchg
es
dec
or
mov
cmpsl
jecxz
leave
or
pop
add
daa
mov
pop
push
loope
and
in
and
repnz
aam
mov
cwtl
lret
movsl
push
fs
add
subl
mov
jae
clc
sahf
lds
pop
test
fwait
les
cmp
test
inc
fs
ss
scas
push
xor
inc
repnz
rcr
or
mov
mov
pop
outsl
cs
fcom
jnp
lods
ret
xor
pop
jnp
jl
cmp
mov
popa
arpl
inc
iret
lret
and
lcall
jae
fstps
jl
test
incb
xchg
int
aam
in
rorl
cld
xchg
outsb
out
pop
into
xlat
iret
push
cmp
or
dec
imul
jno
inc
imul
call
inc
jecxz
add
sbb
ja
mov
gs
mov
leave
mov
sbb
lahf
xchg
je
mov
xorb
test
jb
sub
fildll
pop
cmpsl
dec
jmp
cld
jl
mov
adc
outsl
jne
stc
or
and
inc
xchg
and
push
popf
mov
adc
lret
sbbl
xchg
inc
cmp
scas
cmpl
mov
div
push
add
sbb
jmp
sub
push
pushf
les
out
xor
fcompl
mov
pop
mov
sbb
scas
xor
adc
xor
or
cmp
arpl
sahf
jbe
mov
jns
ret
jne
inc
xchg
inc
mov
iret
test
cmc
push
adc
and
cmp
mov
int
fs
xchg
sbb
test
aas
push
inc
xchg
int
test
jae
test
fcmovu
inc
sbb
cltd
cli
pop
jb
jge
imul
icebp
dec
push
addb
mov
or
movsb
dec
out
nop
std
mov
js
lock
das
imul
outsl
outsl
cli
xchg
xchg
out
lret
xchg
push
ja
arpl
loopne
fnsave
inc
pop
ret
lds
fs
xor
mov
mov
jae
pop
jge
iret
mov
fs
cmpsl
push
test
out
enter
test
daa
loope
test
into
dec
inc
test
movsb
movsl
scas
pop
ja
xchg
arpl
mov
mov
sbb
rclb
mov
mov
jno
dec
mov
ds
das
push
adc
jecxz
and
sbb
scas
in
fmulp
test
mov
cmp
inc
fwait
adc
lock
int
fadds
jecxz
xchg
loopne
sbb
push
cmc
loopne
cmp
insl
cmc
xchg
xchg
scas
adc
xor
into
mov
lea
push
out
xchg
mov
fiadds
jmp
inc
add
scas
rcrl
dec
aaa
xor
or
sbb
sub
xchg
repnz
xchg
jg
insl
jl
call
sbb
out
and
cmp
pushf
mov
adc
mov
dec
fwait
cmpsl
ret
push
pop
test
mov
fnsave
mov
sub
or
push
addr16
out
xor
dec
mov
mov
xlat
out
add
pop
repnz
stc
scas
mov
fucomip
pop
lea
pusha
je
lods
push
hlt
icebp
jecxz
cmpsb
in
leave
inc
mov
ds
mov
fcmovbe
inc
push
out
hlt
outsl
or
sarb
inc
pop
xchg
or
xchg
data16
fucom
cld
sbb
push
pop
scas
xchg
in
sub
addb
push
jno
dec
aad
inc
lods
cwtl
mov
into
pop
pop
scas
dec
pop
test
fidivrs
imul
dec
push
jecxz
adc
lods
and
push
test
notl
test
fnstsw
push
add
dec
shll
xor
mov
outsb
in
outsb
outsl
jbe
addr16
or
jnp
jg
push
sub
add
ret
sbb
lret
aam
popf
xchg
cmp
add
and
xchg
ret
jecxz
dec
arpl
out
push
dec
mov
and
mov
fimuls
mov
lcall
ja
inc
ret
add
inc
sub
mov
or
add
push
or
xor
push
fs
std
add
insl
dec
mov
or
cmc
mov
mov
and
jae
mov
inc
adc
jne
ja
insb
cmpsl
repnz
ja
inc
sbb
xchg
movsl
mov
cmpsb
jne
or
adc
mov
inc
xchg
rcr
stos
push
jle
mov
dec
mov
insb
test
in
ja
scas
jo
pop
lahf
push
xchg
xchg
jmp
shrl
fs
ret
loope
dec
push
xlat
xlat
repz
mov
xor
xchg
addr16
shl
push
insl
add
push
dec
xchg
sbb
mov
sbb
cs
sub
push
add
xor
scas
jmp
je
xchg
xor
pushf
xchg
into
inc
sub
jmp
mov
or
sub
add
outsb
jno
mov
andl
xor
xchg
daa
push
outsl
ljmp
inc
int3
js
jp
pop
lcall
lods
test
out
nop
cs
out
in
mov
std
push
nop
ja
adc
and
mov
shl
adc
lds
push
dec
adc
ret
and
out
xor
adc
add
test
jne
test
xor
sub
or
nop
pop
das
addr16
rep
cmp
icebp
mov
inc
xchg
loop
xor
jne
push
mov
subb
inc
pop
or
xor
add
popa
mov
outsb
mov
jbe
mov
jae
ret
mov
aad
jle
jp
aaa
je
outsb
mov
adc
das
add
and
adc
add
push
cmp
les
fmul
dec
mov
pop
loope
push
fsts
adc
int3
xchg
push
es
fwait
push
jmp
push
jne
ds
rclb
mov
push
cli
pop
out
ja
jge
repz
in
xor
in
loop
lock
or
cmp
sti
jb
jecxz
adc
xchg
lahf
scas
dec
mov
dec
out
jno
stc
test
dec
mov
or
xor
adc
int
gs
lcall
outsb
jno
lods
fwait
data16
jle
adc
push
push
sub
shll
pop
inc
adc
pop
add
pop
shlb
scas
and
mov
hlt
pop
bound
and
mov
sub
std
xchg
sarl
push
cmp
xchg
andl
inc
mov
xchg
adc
movsl
cmp
push
inc
xchg
mov
cmpsb
dec
fwait
xor
and
cmpsl
movsl
cmp
sti
mov
jnp
xorb
mov
push
out
jo
mov
jbe
push
hlt
add
aaa
pop
fidivrl
scas
ret
jg
pop
test
sti
xchg
iret
or
stos
sub
jmp
test
ja
int
jecxz
stos
out
insb
mov
mov
movsb
push
and
sub
cmp
sbb
adc
lods
inc
push
je
pop
insl
leave
jmp
test
xlat
jmp
outsb
push
cmc
xchg
jae
fcmovne
repz
inc
mov
in
jmp
cmp
outsl
lods
xchg
xchg
jo
jnp
jp
cs
ret
push
mov
adc
jmp
mov
adc
roll
test
mov
mov
pop
and
out
jmp
xchg
jg
out
lods
test
push
inc
das
sbb
adc
scas
cmc
negb
cmp
lds
hlt
adc
repz
cs
out
popa
out
sbb
cs
inc
mov
xchg
cmp
push
mov
cli
fidivrl
add
mov
pop
cmpsl
inc
pop
jae
shll
out
push
pop
ja
xor
aad
test
xchg
negl
push
adc
push
dec
call
cmp
cmp
jmp
inc
fs
pop
sbb
mov
pop
test
xchg
in
cmpb
cs
stc
adc
cmp
movsb
nop
loopne
push
andb
shll
mov
mov
mov
mov
or
jns
insl
cmp
out
rorb
mov
fwait
jae
or
test
mov
sarl
xchg
pusha
xchg
ja
adc
xchg
popf
dec
xchg
faddp
in
mov
mov
mov
add
add
pop
popf
test
fwait
cmpsb
lcall
fwait
xchg
daa
push
sti
arpl
sti
icebp
mov
fidivrs
out
sti
leave
repnz
xchg
inc
test
push
xcrypt-cfb
cmpsl
es
mov
lea
add
pop
xchg
sbb
lret
xor
xchg
stos
jge
cwtl
sti
loope
mov
popa
jnp
lret
or
push
sub
lods
cmpsl
mov
push
jg
or
loop
data16
mov
jp
cmpsb
push
ret
add
es
lds
add
push
mov
mov
lcall
and
jne
iret
cmpsb
fldt
shll
xchg
outsl
pop
pusha
js
je
cmp
or
mov
or
sbbl
push
sub
cs
stos
out
adc
outsl
ret
jge
sbb
pop
xor
popl
js
push
mov
das
cmp
sub
imul
dec
jmp
fiadds
and
popa
jae
jae
push
xor
bound
fidivrl
and
dec
pop
shll
push
pushf
rep
stc
clc
negl
les
movsl
data16
push
dec
out
adc
mov
jb
ja
mov
or
add
aas
std
ret
and
pop
push
or
decl
lea
jo
popa
add
jnp
fneni(8087
sar
sbb
inc
pop
mov
insl
pop
sub
lds
dec
jne
stos
push
jle
divl
scas
shrb
mov
xchg
cmp
jne
mov
inc
andb
xor
testb
push
in
cli
nop
data16
js
sbb
cmpsb
pop
cmp
in
jle
sarl
sbb
pop
sbbl
clts
into
add
mov
add
inc
ss
inc
dec
cmp
pop
jb
jnp
aam
in
inc
jecxz
out
jl
stos
cltd
push
cmp
jne
mov
out
jbe
mov
mov
test
nop
mov
out
sbb
xor
adc
jmp
push
loop
adc
les
xchg
mov
sub
jmp
or
into
out
xchg
dec
mov
pop
push
xchg
mov
scas
loope
add
mov
xlat
or
inc
jmp
test
movb
pop
sahf
jl
xor
cmpsl
push
mov
and
xchg
test
movsb
pop
cmp
xchg
push
or
ret
mov
gs
sarb
mov
mov
in
dec
inc
cmp
incb
daa
das
roll
sub
mov
es
test
lahf
out
pop
mov
lods
jmp
out
mov
lods
add
jbe
enter
or
lds
push
stos
imul
inc
ja
shlb
push
pop
aad
aas
test
and
cs
insb
dec
insl
push
mov
pop
cmp
and
divb
mov
fidivrl
jae
push
imul
in
mov
insl
jne
ficomps
imulb
dec
mov
ljmp
addr16
out
add
mov
lahf
mov
jae
cmpsl
mov
jb
or
dec
loope
xchg
inc
ret
jge
inc
xchg
cli
std
mov
je,pn
pop
push
cmp
pop
scas
jno
add
in
sbb
xchg
xchg
addr16
mov
pop
jo
fwait
push
push
popa
std
test
jle
rcr
je
mov
add
data16
repz
pop
leave
mov
jecxz
ljmp
fildll
sti
stos
outsl
in
loope
pop
in
fucompp
je
push
lods
push
std
aaa
out
in
and
ljmp
add
fldenv
mov
sbb
adc
ret
pop
inc
xor
aas
jbe
sub
mov
xchg
mov
pop
in
xchg
sbb
mov
jo
cmp
addr16
imul
push
fldl
mov
ljmp
sbb
das
pop
ret
push
push
imul
inc
popa
push
dec
sbb
cmpsl
mov
je
je
and
test
ja
jbe
jge
dec
inc
or
sub
and
jae
xchg
sbbl
fwait
and
jo
dec
inc
dec
jl
jne
xchg
push
cli
pop
jnp
testb
in
out
test
aas
xchg
addr16
and
xchg
and
and
int
mov
out
push
and
mov
rorl
dec
das
mov
fstl
or
cli
or
test
out
lock
ret
ss
sub
cli
scas
test
sbb
scas
incb
add
inc
loopne
mov
fucomi
xor
pop
fidivs
pushl
dec
mov
sbb
mov
call
adc
push
in
jae
dec
cmp
daa
dec
and
inc
adc
mov
push
dec
out
sub
jecxz
xchg
or
cmp
add
mov
movsl
jno
shll
adc
into
mov
inc
cli
jne
cli
jnp
sub
out
aad
das
stos
daa
jmp
rol
xchg
sahf
in
mov
pop
mov
or
mov
imul
push
mov
sbb
into
pop
mov
repnz
mov
and
loope
daa
pushl
outsb
mov
jmp
sub
sbb
fisubrs
rcrl
sbb
fsts
mov
or
xchg
jbe
inc
or
orl
ds
dec
lcall
mov
push
nop
in
jns
sub
outsl
pop
rcrb
and
or
orb
fwait
les
jne
loope
jmp
fistps
fistps
pop
xchg
mov
hlt
neg
mov
scas
int3
pop
mov
test
mov
lods
out
popf
pop
js
test
inc
inc
add
sub
and
xor
lret
call
test
dec
sti
cmp
orb
andb
scas
shll
push
icebp
mov
and
enter
lcall
repnz
xor
sub
push
iret
mov
jbe
push
daa
prefetch
xchg
dec
xchg
inc
lods
mov
inc
mov
push
popa
mov
add
jecxz
out
sub
dec
cmp
push
aad
and
and
inc
dec
aas
jns
loopne
pop
ret
push
adc
out
daa
insl
fadds
mov
flds
add
rcrl
inc
in
arpl
sub
xchg
xchg
shr
pop
into
jae
pop
lods
pop
mov
lods
ret
sbb
cltd
gs
or
jl
dec
rclb
cmpsb
pop
add
fistpl
jb
push
add
idiv
mov
xlat
lock
into
out
outsl
stos
out
aam
fiaddl
insb
mov
and
cmp
cmp
xor
aas
lea
addr16
xchg
inc
and
je
sub
test
fdivrs
rcr
push
arpl
jo
std
cmpsl
test
sub
scas
rcrl
loope
adc
add
negb
add
lds
push
cmp
in
sub
daa
jmp
mov
repnz
mov
fucomip
jl
mov
ret
lds
out
inc
cmpsb
stos
shlb
adc
mov
mov
mov
lock
xchg
cs
shlb
and
sti
dec
mov
xor
inc
and
mov
clc
mov
stos
incb
pop
shl
sub
cld
je
gs
shlb
mov
jns
call
shlb
jge
mov
dec
push
test
mov
add
ja
test
sbb
adc
fldl
mov
adcl
fdivrs
add
mov
lea
out
fwait
cmpsb
ret
ja
pop
out
hlt
dec
aas
xchg
or
dec
jns
inc
nop
jge
fisubrs
or
mov
leave
sahf
cmpb
cwtl
pop
push
in
xchg
sarl
cmp
fdivl
pop
mov
xor
cmpsl
mov
jle
ret
jecxz
sti
mov
pop
or
mov
adc
in
sahf
and
jl
jns
lods
mov
fistpll
fwait
fs
sarl
xchg
into
fldt
lods
and
cs
pop
loop
out
ret
out
shll
mov
mov
scas
push
push
or
scas
in
xor
out
loop
add
aaa
cs
sbb
xor
lock
xor
fsub
ds
fstl
jns
add
add
mov
stos
outsl
js
dec
jp
sbb
cmp
or
imul
scas
or
mov
rorl
adc
pusha
and
fcompl
lods
mov
xchg
pop
outsb
out
shll
stos
hlt
mov
inc
add
test
push
bound
idivl
test
or
sbb
test
fwait
insb
mov
adc
cmpsb
adc
sub
cmpsl
jg
or
push
pop
divl
test
sarl
js
test
iret
mov
rcrb
andb
test
in
pop
test
push
repnz
ret
mov
xchg
std
pop
out
and
inc
sub
jno
or
mul
dec
cmp
inc
jnp
dec
xor
inc
adc
lret
inc
testl
add
mov
push
xchg
lds
mov
addr16
xor
inc
ret
popa
add
repz
pusha
add
in
dec
sub
incl
mov
jg
sub
std
cwtl
ret
fdivrl
push
aaa
mov
mov
inc
out
sub
and
ja
xor
sbb
popf
fwait
inc
leave
inc
mov
mul
fistpll
cmpsb
inc
fsub
inc
mov
sbb
hlt
daa
fs
xlat
ficoms
inc
inc
sbb
inc
in
popf
pop
mov
repnz
dec
stos
andb
adc
popf
pop
sbb
mov
lods
negl
movsl
mov
mov
jnp
lods
pop
jbe
mov
mov
push
call
push
cmp
addr16
lea
es
test
pop
fimull
dec
inc
in
pop
inc
jnp
sub
out
sti
mul
and
fs
push
or
mul
xchg
xchg
sbb
xor
adc
xor
jmp
nop
pop
repnz
inc
sbb
jg
push
ret
lds
or
jg
test
pop
int
xchg
and
xchg
pop
repnz
fmul
xchg
adc
jns
ss
add
xchg
cs
push
std
jno
out
shll
inc
gs
jnp
fs
inc
mov
pop
scas
jbe
add
fs
cltd
cmpsl
xchg
pop
in
or
jo
idiv
ss
pushf
aad
xor
out
xchg
xor
gs
pop
out
scas
arpl
add
mov
subl
inc
ja,pn
lahf
mov
popa
mov
jno
mov
aam
or
lods
repz
adc
pop
cmpsl
jle
gs
sahf
pop
inc
dec
outsb
jp
mov
xor
ret
and
xchg
movsb
mov
push
bound
mov
iret
popf
inc
sbb
and
scas
pop
add
out
or
xchg
out
andb
pop
xchg
mov
and
push
mov
sbb
cld
je
dec
int
mov
js
das
push
rcll
out
inc
das
add
cmpsb
loop
cwtl
xor
fs
ja
js
jbe
test
jae
add
jmp
out
jns
ss
adc
lret
ja
add
xchg
push
es
in
lahf
inc
subl
daa
dec
out
movsb
xchg
ja
push
sbb
sbb
sahf
loope
jmp
sbb
xchg
pop
daa
ret
mov
ret
and
sub
push
dec
xchg
rorb
pop
xchg
cltd
mov
imul
sti
xor
inc
ud2
dec
push
mov
imul
cmpsl
fisttpll
dec
addr16
addr16
add
ja
dec
mulb
adc
adc
mov
pop
sbb
mov
dec
fidivrl
aam
bound
add
in
insl
addr16
inc
imull
lds
les
cmpsb
jo
adc
dec
mov
and
fmul
add
cmpsb
fwait
outsl
mov
lods
aad
mov
fildll
dec
or
inc
fidivl
out
cltd
fwait
addr16
jmp
repz
lock
add
aad
int3
icebp
inc
dec
loope
test
jne
adc
jno
subl
clc
or
mulb
test
ljmp
xchg
sbb
fadds
mov
clc
inc
cli
xchg
jnp
adc
imul
pop
fwait
test
mov
add
fs
ret
sbb
inc
push
fcmovnu
lods
shlb
mov
dec
das
inc
adc
fs
sub
mov
sbb
addr16
or
or
leave
lret
jnp
out
sar
jnp
xchg
cwtl
pop
scas
jg
cs
int
adc
jno
mov
rcrl
dec
sti
adc
test
lods
addr16
movl
popa
mov
arpl
mov
nop
sbb
inc
mull
cmpb
fimuls
jne
movsl
into
cmp
aad
jo
jne
into
and
mov
sub
test
sub
or
sbb
test
fwait
push
mov
jmp
jg
xchg
es
fidivl
out
xor
mov
dec
sbb
cmc
xor
lds
cmc
xchg
ret
fists
and
inc
mov
lds
addr16
shl
and
sti
mov
jp
je
data16
dec
pop
push
inc
inc
sbb
mov
jnp
or
nop
sti
push
js
add
push
push
xchg
loopne
inc
jo
cmp
imul
push
xor
clc
adc
repz
push
fdivp
sbbb
jl
cmpsl
fsubs
fidivrs
or
jg
rolb
outsl
jg
mov
sbb
lods
lds
mov
lods
pushl
fs
push
mov
out
jo
add
pop
xchg
out
call
cli
add
in
inc
mov
out
lds
xchg
or
push
dec
pop
sub
push
sub
or
fwait
fs
mov
loop
xchg
inc
cld
dec
ljmp
cmpl
insl
push
lock
dec
mov
shlb
xchg
fwait
xchg
adc
sub
lret
push
test
lea
ficoml
aad
push
out
inc
sbb
movsb
push
mov
cmp
cmp
sbb
and
out
lret
fwait
es
enter
out
cs
adc
mov
ja
sbb
popf
jmp
pop
mov
insb
popf
insb
aas
pop
push
ret
decl
mov
xor
push
xchg
cld
push
and
test
xor
mov
rorb
out
pop
pop
iret
mov
mov
lcall
jne
hlt
ja
pop
cmp
outsl
xchg
pop
jmp
add
mov
leave
scas
lcall
cmp
lcall
and
jg
push
adc
stos
cmp
push
push
std
loopne
jo
les
rorb
cmpsb
push
daa
jecxz
or
mov
mov
aaa
xchg
mov
inc
inc
or
push
jnp
lds
shrb
into
cmpsb
loope
fiadds
xchg
cmp
test
clc
loop
pushf
ficoml
mov
and
pusha
loop
push
fnstcw
scas
shrl
mov
cmpsb
std
jge
xchg
xchg
inc
add
xorb
jbe
lds
scas
xchg
mov
testl
movsb
sbb
mov
clc
or
bound
pop
addr16
aad
inc
dec
out
popf
fisubl
std
inc
fs
cmp
out
test
xor
jb
cmp
pop
jmp
inc
sbb
aaa
ja
pop
jp
cs
push
fidivs
dec
jb
scas
mov
in
mov
pop
mov
lret
std
dec
push
lret
icebp
sub
push
fdivrl
pop
movsl
repz
jg
out
imul
ja,pn
les
mov
jne
lds
jmp
xor
das
aaa
jge
or
mov
in
std
jo
mov
mov
ds
out
ljmp
mov
mov
or
test
repz
cmpsl
dec
cmp
sti
bound
rcr
pop
cmpsl
mov
and
mov
out
notb
out
mov
jo
ret
jno
sub
fwait
mov
pop
sbb
add
in
inc
push
push
pop
fs
sti
gs
and
push
jg
sbb
mov
je
sbb
and
mov
mov
lahf
out
cmp
cmpsb
lods
or
pop
push
push
mov
sub
adc
outsb
sub
push
fstl
out
mov
repz
push
jle
cs
imul
dec
add
mov
mov
add
mov
pusha
mov
jns
mov
xlat
and
sub
jecxz
push
repnz
ret
lods
inc
loopne
fnstenv
insl
inc
in
pop
jg
lcall
add
out
pop
lock
mov
into
outsb
pop
lea
xchg
std
push
dec
lock
or
add
in
out
adc
fwait
xchg
add
cmpb
test
jmp
sahf
negl
push
jne
addl
ret
and
ret
xor
add
or
push
fsubrl
fildl
jmp
lods
add
adc
in
sub
xorb
xor
aaa
fwait
ljmp
jns
stc
push
adc
lock
sar
sti
mov
xchg
out
mov
mov
inc
fbld
test
mov
pop
fwait
ss
mov
cmpsl
popw
inc
adcb
and
push
arpl
std
out
rcll
cmp
jecxz
stos
fs
sbb
adc
dec
cs
bound
pop
lahf
ret
cmpsl
adc
decb
in
mov
lea
adc
jge
mov
dec
sbb
mov
xchg
data16
inc
fstpt
movsl
lods
adc
aam
inc
dec
jp
outsb
in
sbb
cs
mov
jmp
inc
inc
jns
addr16
stc
add
arpl
sahf
lods
cld
xor
sbb
mov
mov
nop
js
dec
mov
test
je
outsb
mov
mov
outsl
push
test
fcoml
sti
adc
xchg
adc
popf
int3
dec
icebp
mov
nop
fwait
jl
add
pop
ret
pop
push
jge
smsw
push
ds
push
cmpsb
adc
loop
or
clc
clc
loope
jp
ss
or
jmp
xchg
int
jge
jecxz
std
push
out
mov
insb
test
adc
ret
sbb
jbe
insl
adc
pop
push
lock
push
mov
adc
mov
fistl
jl
outsb
cwtl
lods
dec
ljmp
lea
clc
rcll
shll
sahf
fs
mov
in
outsl
enter
out
push
mov
mov
or
ret
test
outsl
subl
pop
jge
xor
or
pop
and
and
lcall
add
xchg
sbb
mov
into
fisubs
outsb
cmp
cmpsl
popf
pop
int3
push
ja
out
add
jno
fisubrl
scas
push
dec
fwait
sbb
or
dec
aas
fstps
mov
in
and
scas
in
and
fisubl
pop
pop
push
lds
loopne
andb
push
lock
or
xrelease
xchg
sahf
or
fisubrs
iret
sbb
out
and
inc
cmp
pop
jns
loop
add
ret
repz
and
jp
adc
lods
mov
cmp
pop
dec
jl
int3
inc
aas
cmp
addr16
xor
call
mov
cmp
scas
cmp
sub
dec
outsw
xor
sbb
push
mov
dec
xchg
movsl
add
push
testb
adc
mov
pop
out
mov
lea
inc
movsl
sbb
movsb
ss
xchg
rorl
cmp
mov
adc
dec
xchg
or
xchg
mov
or
test
push
shrl
outsb
loop
int3
idivb
out
cmp
add
lods
jns
unpcklps
and
dec
jle
pop
push
cmc
mov
inc
xor
jmp
fisubs
and
fidivs
mov
lods
dec
test
xchg
aas
mov
xchg
jns
mov
dec
cmp
xchg
in
cwtl
dec
lret
add
xchg
push
mov
mov
push
dec
sbb
cmpsb
lea
sbb
ljmp
cmc
mov
or
push
out
sub
sub
hlt
mov
rcl
fwait
int
mov
xor
and
lods
cmp
es
iret
aas
and
movsl
adc
xchg
aad
push
inc
stos
imul
ret
out
mov
aas
imul
jle
ret
loope
mov
jmp
mov
pop
inc
mov
mov
jg
mov
and
pop
jae
repnz
daa
dec
dec
jae
mov
fstpl
or
xchg
and
xchg
mov
xchg
fsub
test
mov
xchg
fsubs
fistl
sbb
push
pop
adc
inc
shlb
test
mov
inc
scas
mov
xorb
xlat
ds
js
cmp
push
xchg
bound
fwait
push
xchg
jne
int3
lea
dec
loope
sub
outsl
xchg
push
pop
aas
dec
pop
jbe
xor
hlt
js
and
fbld
push
sahf
aas
notb
mov
mov
and
jge
add
popa
mov
or
fisubs
loope
test
jbe
mov
dec
mov
add
out
test
lds
leave
test
lods
jge
lcall
mov
cmpsb
pop
jmp
push
adc
xchg
repz
mov
loopne
jg
cmp
mov
pusha
cmp
movsl
in
popf
push
cli
mov
in
in
test
mov
dec
pop
inc
sub
pop
jnp
sahf
in
lds
mov
sbb
pop
in
into
adc
test
into
xchg
fs
mov
popl
sub
jge
add
popf
addr16
cmpsl
out
dec
inc
popa
add
sub
inc
shl
adc
movsl
xor
sub
or
cmp
fwait
mov
fisubrl
sbb
dec
out
shll
mov
pop
fidivrl
jmp
pop
add
jns
cmp
outsl
lds
sbbl
aam
sahf
inc
push
or
mov
adc
jb
pop
mov
repz
data16
fs
mov
inc
mov
shrl
out
imul
aam
mov
mov
jne
fisubrs
add
jnp
jmp
in
pop
jo
cmpsb
leave
fistpll
jnp
int
and
cmp
or
mov
pop
mov
test
or
lcall
rcrb
fcmovnbe
stos
insb
and
sub
cmpsb
pop
movsl
das
push
ljmp
movsl
pop
in
arpl
adc
pushf
add
add
inc
xchg
ja
scas
dec
testl
pop
xlat
push
testl
in
dec
xchg
pop
pop
ja
xchg
and
shlb
or
mov
fwait
out
aas
scas
andb
push
jmp
leave
cmpsb
push
call
daa
dec
scas
test
das
fldcw
leave
push
hlt
enter
mov
scas
dec
pop
xor
inc
enter
cld
and
scas
leave
xchg
cmp
cmp
fsubs
push
stos
popa
andb
fadds
pushw
jl
mov
hlt
sbb
cmpsl
mov
mov
test
test
add
xor
sbb
push
xor
out
or
and
iret
pop
popl
out
sbb
sub
dec
sub
add
push
in
cmpsl
sub
push
jmp
add
add
das
jmp
shrl
cmc
out
pop
or
inc
movl
inc
xlat
loopne
cmc
idiv
push
inc
stos
mov
xchg
cltd
pop
out
test
mov
iret
add
mov
cmpsb
jle
fistps
out
xlat
push
push
or
inc
fildll
sub
cmpsb
addr16
movsl
xor
sbb
jbe
clc
and
push
out
adc
jbe
adc
sbb
sbb
inc
popa
cmp
fildll
dec
outsb
push
es
scas
aaa
mov
add
inc
out
fwait
and
dec
mov
mov
cmc
mov
add
sbb
scas
cmc
repz
and
cmp
add
or
in
lock
and
es
mov
outsb
sbb
jns
leave
sbb
or
aad
movsb
xchg
cmpsl
pop
iret
out
arpl
dec
xor
push
cltd
jo
out
mov
scas
adc
adc
xlat
pop
cmpsb
and
imul
loop
fs
and
xchg
inc
sbb
mov
jmp
out
iret
inc
xchg
pop
xlat
ja
mov
out
leave
jnp
addr16
filds
adcl
test
adc
int3
hlt
sbb
lret
dec
fwait
xchg
mov
stos
imul
fbld
add
lds
nop
or
arpl
add
adc
enter
js
and
popf
das
pop
jg
sti
inc
outsb
mov
ljmp
out
aam
mov
loopne
sub
jae
pop
in
and
addr16
std
mov
popf
cmpsl
imul
push
data16
cli
mov
mov
adc
dec
lea
pop
emms
ret
cmpsl
mov
sti
icebp
mov
imul
push
addl
iret
fwait
arpl
inc
cs
leave
jne
lock
mov
mov
xor
jo
stos
inc
dec
stos
inc
mov
in
out
mov
xchg
jmp
ficoms
mov
or
cmpb
in
adc
sbb
fdivp
push
inc
or
pop
unpckhps
jo
sbb
dec
push
xchg
adc
aad
testb
push
xchg
int
jo
test
lods
xorb
inc
inc
and
fisubl
mov
jge
ret
xor
jg
sub
cmc
mov
pop
out
into
ret
jb
mov
xor
xor
xlat
cmpsb
shlb
test
and
xchg
mov
sti
popf
idivl
sub
movsl
xlat
lock
mov
xlat
in
add
add
roll
insb
mov
cld
test
lcall
outsb
addr16
inc
sbb
jg
ja
fidivrs
imul
add
dec
outsb
shrb
aaa
push
xlat
pop
shll
jns
ja
mov
in
movsl
pop
in
adc
pop
imul
xor
test
pop
movl
cmp
push
adc
add
push
push
and
fsubrl
jecxz
mov
adc
fwait
addr16
pop
mov
scas
pop
scas
testl
lods
pop
adc
rorl
inc
sub
stos
das
ja
in
xlat
pop
jne
out
stos
nop
out
imul
dec
pop
call
addr16
mov
leave
jo
or
sub
lods
mov
adc
bnd
mov
mov
add
ret
push
aam
aaa
pop
in
in
add
daa
and
xor
inc
jbe
add
movb
mov
push
enter
test
into
pop
xor
jge
fs
mov
outsb
jge
mov
xchg
adc
sbb
xchg
movsb
ja
mov
test
and
lea
loop
addr16
pop
mov
jg
insb
icebp
addr16
pop
je
shl
rcl
xchg
pop
filds
xlat
iret
sub
sti
mov
and
loop
adc
mov
in
xlat
mov
cli
jns
stc
cmp
mov
bound
jbe
cmp
jp
sbb
mov
pop
cmp
pop
inc
push
les
sahf
ret
nop
pop
mull
cmp
ss
xor
ja
cmpsl
pop
xchg
mov
clc
jmp
stos
gs
xchg
xlat
pop
jecxz
test
jae
jae
push
or
das
ja
jns
into
add
jbe
imul
adc
xchg
popa
sub
sub
sub
iret
aad
into
dec
cmp
ds
cmpsb
xor
or
cmpsl
repnz
fisttpl
cmp
insb
push
testl
jle
mov
inc
mov
scas
mov
addr16
sbb
mov
adc
out
xor
sbb
data16
cmp
dec
ljmp
ret
mov
out
movb
in
xchg
push
outsl
dec
sti
jmp
xchg
jp
pop
lods
scas
adc
push
je
mov
add
and
divl
push
sub
inc
add
cmp
test
rcl
pop
add
cmpsl
add
ja
in
xchg
mov
loope
pop
push
jle
pop
insb
std
push
lods
jg
adc
cmp
mov
and
int
movsb
inc
aad
cwtl
arpl
add
incb
outsb
clc
sbb
dec
jg
mov
rcl
ds
call
push
pop
push
js
addr16
lret
sar
subb
cmp
dec
test
jns
scas
in
add
xor
mov
outsl
pop
cmc
jg
mov
or
pop
push
pushf
cmp
mov
loope
sarl
add
stos
pop
mov
cmpsb
inc
dec
xchg
fsubl
data16
mov
sbb
lods
in
daa
adc
sub
push
popf
sub
pop
cmpsb
jle
inc
pop
into
xchg
icebp
inc
inc
push
pushf
inc
cmp
xchg
test
add
sbb
ds
imul
lds
jmp
test
jle
es
arpl
push
cs
inc
dec
inc
cmpsl
push
test
shrl
shlb
adc
out
jnp
or
inc
and
pop
ljmp
xlat
aam
push
sbb
push
ss
or
mov
jns
aad
daa
push
mov
sbb
loop
stos
gs
adc
push
nop
xchg
push
mov
arpl
push
xchg
shrb
out
clc
mov
inc
ret
dec
rol
cs
insb
popa
out
iret
mov
ja
xchg
pop
lock
decl
ljmp
dec
xlat
shlb
and
pop
lea
push
inc
ret
inc
ffreep
fldl
adc
shll
clc
xor
aas
mov
jne
mov
shrl
sbb
cmp
xchg
loop
mov
outsb
aam
sahf
bound
cwtl
ja
call
and
inc
inc
and
dec
xchg
cli
fwait
movsl
cmpsl
test
cmp
or
out
pop
jecxz
dec
sti
sbb
cmp
inc
arpl
add
addr16
das
dec
inc
scas
ss
mov
movsb
daa
cmpsl
inc
test
cmpb
test
pop
pop
aaa
xor
rorb
mov
mov
icebp
xlat
push
mov
es
test
push
push
add
fwait
daa
mov
imul
push
xlat
stos
lea
paddusw
jbe
scas
testl
add
out
cltd
stos
mov
scas
test
call
stos
dec
inc
adc
lret
add
ljmp
xchg
xchg
mov
fisubrl
fucompp
mov
cltd
sbb
scas
add
jecxz
cltd
daa
sbb
sbbb
in
xlat
repz
movsl
pop
pop
inc
pushf
stos
sbb
xchg
cmc
movsb
cwtl
imul
cmp
cmp
les
sahf
test
xor
mov
in
pop
ret
out
mov
add
add
sub
jecxz
clc
fiadds
inc
out
inc
cmpsl
mov
xchg
or
fwait
arpl
xchg
push
xchg
insb
insb
xor
push
pop
fimuls
adc
ja
xchg
into
push
data16
xchg
fldt
mov
mov
rorl
push
push
inc
dec
xchg
incb
out
sbb
push
loope
xor
sahf
inc
daa
inc
cmp
and
inc
out
jo
or
inc
sub
nop
push
pop
sbb
mov
xor
pop
addr16
std
jge
xchg
jno
mov
xchg
add
pop
sarb
scas
pop
rcrl
pop
mov
xor
sbb
pop
cmc
adc
rolb
sbb
xchg
adc
add
popf
call
or
mov
mov
cmpsb
aas
push
xlat
inc
clc
sbb
lret
sub
mov
stos
in
and
cmp
cmpsb
jae
mov
stos
jno
pop
cmc
pop
inc
pop
cmc
out
cmp
outsb
cmp
fnstsw
xlat
mov
jl
cli
jno
jne
push
inc
inc
shl
xchg
faddp
cmpsl
xor
sbb
adc
in
dec
notl
test
mov
jmp
insl
push
jecxz
push
cli
adcb
mov
repnz
test
add
gs
mov
pop
jmp
push
inc
hlt
mov
cmovne
xor
and
xlat
xor
in
out
imul
jmp
dec
inc
and
int
out
loopne
outsb
andb
mov
adc
ja
stc
mov
pop
mov
push
pop
mov
ljmp
popa
shlb
add
shlb
mov
cmpsb
cmc
jno
jae
scas
insb
jae
pop
mov
mov
addr16
adc
xchg
dec
jp
push
pop
xlat
add
pop
nop
pop
add
add
pop
push
mov
lret
push
inc
jg
xchg
push
bound
sti
test
ss
xor
das
cmpsb
inc
fsubp
inc
test
add
iret
pop
movsl
jno
in
jl
push
inc
in
and
dec
mov
adc
les
sti
sbb
push
sbb
jg
adc
out
test
cmpsl
push
jge
lcall
jge
pop
sbb
jb
jbe
adc
ja
pop
sahf
cmpsl
cmp
out
xor
into
cwtl
mov
pop
xor
push
in
ror
in
adc
sbb
push
ret
lods
dec
jecxz
into
pop
jae
fidivl
and
into
add
repz
scas
add
loope
dec
pop
sub
out
lds
mov
push
xor
lahf
ss
out
add
sub
jmp
out
jmp
in
jb
inc
movsb
test
push
mov
add
cs
adc
cwtl
push
lods
sarb
dec
rcr
out
pusha
sbb
add
xchg
adc
xchg
fnsave
dec
pop
arpl
aad
roll
add
or
fildll
cli
sub
outsl
pusha
mov
bswap
fdivr
ja
mov
nop
xchg
and
jge
pop
jne
add
add
fucomip
mov
mov
addl
add
add
scas
adc
int3
xchg
push
lds
jmp
cli
in
adc
inc
mov
out
fldl
pop
xchg
stos
lods
shll
inc
cmp
frstor
xlat
pop
notb
les
dec
outsl
aaa
push
cmp
add
jne
ss
and
ficompl
mov
out
add
imul
dec
or
or
arpl
cmp
mov
mov
jg
adc
fwait
popa
stc
mov
jmp
gs
rclb
sbb
pop
push
loopne
cmc
adc
aaa
mov
fistpl
sti
les
mov
fnstenv
jmp
dec
orb
jmp
rolb
out
psubusb
and
cmpsl
fs
daa
dec
xchg
mov
stos
pop
les
jmp
daa
dec
sub
xchg
pop
xlat
xchg
pop
cmpsl
add
iret
mov
cmp
daa
mov
fadds
aad
andb
jg
daa
gs
std
jg
lock
xacquire
test
and
aad
or
add
fbld
fsts
cmp
loop
jge
push
stos
repz
xchg
sbb
mov
scas
xor
push
sbb
outsb
xchg
pop
xchg
sub
fiadds
aaa
iret
in
lods
pop
mov
iret
jbe
mov
in
shlb
out
and
hlt
jne
shr
jge
mov
sub
mulb
xlat
mov
popf
cmp
icebp
xchg
call
jb
or
inc
lods
cmp
push
cmp
push
dec
adc
test
mov
mov
xorb
outsb
divl
pop
pop
bound
test
dec
lds
out
adcb
outsw
xlat
fcomi
mov
addb
push
negl
mov
movsb
xchg
pop
cmp
mov
pop
mov
cmpsl
out
popf
std
mull
mov
xchg
push
and
pop
and
pop
rorl
es
aaa
jp
and
inc
popf
push
mov
pop
add
xchg
mov
and
test
imul
and
mov
int
mov
aad
or
jg
jle
rolb
ficomps
jo
mov
stos
hlt
in
pop
inc
pop
mov
test
jmp
inc
test
jnp
and
aaa
cmpsb
inc
daa
xchg
pop
pusha
push
or
inc
mov
mov
mov
cmc
add
test
or
jmp
jmp
repnz
loopne
add
pop
dec
pop
inc
in
notb
daa
dec
xchg
mov
push
jnp
test
incl
insl
xchg
jo
push
aaa
mov
das
imul
mov
ret
xchg
sub
test
fisubs
or
in
ds
push
in
aaa
adc
sbb
xchg
push
jp
inc
call
mov
push
cmp
movsb
pop
iret
daa
sti
fbld
lds
pushl
xor
loopne
inc
orl
push
lahf
test
sbb
pop
shl
enter
lds
cmpsl
xchg
out
shlb
insl
in
jns
xor
nop
xchg
lock
push
xor
mov
xchg
out
adc
fstl
in
mov
insb
mov
ljmp
cmp
inc
jle
imul
cmpsl
mov
test
xor
scas
xchg
aam
mov
inc
ja
je
mov
and
ljmp
ds
xchg
rcr
adc
sub
push
aam
ret
xchg
dec
mov
stc
and
pop
push
add
push
xchg
out
jnp
out
lea
lock
andl
sbb
and
test
cmpsl
jmp
or
lahf
ror
inc
dec
scas
mov
sahf
and
xchg
js
cmp
mov
mov
pmaxsw
scas
dec
or
test
or
add
inc
addr16
add
adc
push
jb
stos
movsl
ret
les
fnsave
daa
jge
test
cmp
xlat
xchg
inc
dec
into
pusha
lahf
lea
lods
xchg
mov
xchg
mov
mov
fs
or
out
push
fsts
xor
sti
and
mov
shr
and
test
adc
mov
xlat
dec
adc
and
divb
push
xchg
mov
lahf
inc
stc
out
in
outsl
xchg
xor
push
mov
mov
lods
fwait
icebp
movsb
in
mov
dec
dec
testb
negb
lock
daa
jp
stc
insb
shr
dec
xchg
and
in
insl
clc
mov
fistps
enter
icebp
popf
mov
imul
popf
inc
cmp
jle
dec
ja
adc
lock
mov
jg
testl
xlat
jns
nop
aam
incl
inc
cmc
xchg
ds
adcl
aas
std
push
or
mov
xchg
jle
fstpt
sahf
sbb
pop
dec
loop
popa
dec
les
in
insl
loope
cmc
rcrl
loop
mov
mov
aas
xor
out
or
in
xchg
repz
mov
leave
push
movl
mov
repnz
xor
out
pushf
in
pop
and
aad
push
jnp
or
xchg
aaa
lahf
cmp
das
jo
push
bound
movsb
into
je
cmp
icebp
clc
cmp
pop
shlb
push
xchg
repnz
subb
pop
test
sub
out
cmpsl
mov
test
test
jle
testb
cmpsb
das
daa
xchg
aad
mov
inc
enter
hlt
or
daa
testb
fld
in
and
inc
and
mov
mov
das
push
cld
idiv
jae
sub
inc
out
sbb
adcb
div
insl
std
push
xchg
sbb
pop
out
les
mov
fwait
mov
pop
movsl
pop
inc
in
dec
push
cmpsl
push
daa
loopne
std
out
pop
addr16
es
jb
jmp
push
in
inc
test
xchg
cmpl
mov
xlat
mov
in
mov
rcll
bound
enter
mov
loope
pusha
inc
jne
cmc
mov
sbb
inc
test
gs
jbe
loop
inc
dec
inc
mov
and
sbb
rcr
push
hlt
test
addr16
in
cmc
cmc
mov
out
pop
lcall
mov
cmpsb
mov
xlat
push
mov
addr16
inc
mov
arpl
cmp
cli
out
popf
outsb
arpl
mov
jbe
mov
inc
mov
xchg
loop
incb
in
int3
xor
loopne
hlt
and
lds
movntq
std
cmpsl
test
push
sbb
jg
cli
pop
jb
mov
popf
xchg
and
add
imul
cmp
sbb
push
mov
lcall
cmp
mov
pop
mov
cmpsl
fbld
es
inc
rcrb
cmc
out
xchg
cmpsl
imul
fdivl
out
fisubs
icebp
pop
mov
mov
lods
mov
loope
shrl
out
das
cmp
cmp
mov
and
add
fcomp
jne
jb
push
inc
loop
repz
das
stc
es
fwait
xchg
movsb
movsl
out
pusha
loop
sub
mov
pop
jae
mov
mov
jmp
xchg
pop
mov
rorb
fwait
xchg
mov
gs
lret
iret
inc
mov
mov
cmc
sub
lods
jecxz
jne
jge
mov
sub
test
aas
adc
mov
ss
cmpsl
iret
inc
mov
jo
jo
xchg
mov
movl
pop
cli
loope
dec
fdivrp
test
mov
adc
loop
xor
inc
std
bound
sti
iret
movsl
pop
inc
sti
cmpsl
daa
xchg
dec
inc
cmpsb
mov
aad
int
add
shrl
or
hlt
jns
xchg
in
ljmp
cmpsl
daa
gs
dec
test
inc
in
je
arpl
dec
inc
leave
in
es
mov
jbe
cmpsb
scas
ret
inc
xor
push
mulb
movsl
and
jle
mov
fildll
jno
pop
out
data16
data16
pop
mov
xchg
repnz
ficoml
aas
out
sbb
addr16
inc
bsf
xchg
outsl
out
pop
mov
adc
sbb
mov
loope
jnp
std
imul
icebp
inc
inc
jecxz
cmpsl
aaa
sbb
arpl
insl
cmc
out
and
ret
and
mov
out
popa
lea
and
stc
xor
ja
ds
ret
dec
pop
jno
pop
dec
adc
pop
loopne
gs
rolb
popf
out
ret
mov
adc
and
testb
adc
shl
pop
insb
adc
adc
and
xchg
aas
dec
addr16
pop
inc
cld
lret
adc
xchg
movsl
mov
push
add
jge
push
xchg
movsb
pop
inc
fcomps
jecxz
mov
xor
mov
loopne
jmp
cmpsb
jbe
pop
push
popf
out
sub
data16
sub
inc
xchg
stos
cwtl
push
jmp
mov
inc
popf
cmc
xchg
outsl
loope
es
cltd
adc
cmpsb
es
test
jg
pop
bound
jge
les
xchg
cld
sub
incb
adc
push
shrl
in
xchg
mov
add
loop
ret
imul
in
test
lods
mov
ret
enter
pop
js
sbb
inc
xchg
out
inc
insb
jmp
jg
dec
daa
inc
inc
add
cmpsb
iret
inc
or
jg
pop
shll
fsub
xor
add
add
daa
ljmp
fucomi
fsubrl
mov
xchg
xchg
ljmp
cmpsl
fwait
xor
arpl
inc
gs
pop
outsl
jmp
cmc
movsl
cmp
nop
and
sti
loopne
cmp
out
jae
data16
out
and
out
jmp
int
out
sbb
sub
out
test
inc
out
stos
out
imulb
es
jmp
scas
inc
je
daa
popf
jmp
es
sahf
mov
jmp
scas
jmp
daa
jg
jno
push
dec
out
cmpsb
mov
mov
pop
int
fistpl
cld
loope
and
data16
push
jge
int
hlt
cmpl
cwtl
jbe
ret
gs
inc
arpl
mov
cmpsl
add
adc
inc
mov
shr
mov
xchg
mov
adc
aas
pusha
ja
in
cmpsl
ret
mov
shlb
es
xchg
ja
push
mov
andl
lds
loopne
sub
addr16
and
cmpsl
repz
cmpsl
push
and
outsb
popf
and
mov
imul
into
ja
mov
ret
push
andb
mov
movb
fidivrl
bound
shll
inc
loop
test
adc
rol
push
push
and
add
call
or
add
mov
jne
xchg
loope
sarl
xchg
jmp
jge
addr16
lret
and
mov
in
xlat
sbb
push
dec
shrb
shrl
roll
shr
out
les
loope
mov
pop
call
mov
lcall
imul
mov
dec
fcmovb
add
dec
out
and
add
scas
or
icebp
sti
loope
push
jg
mov
rcr
loopne
int
ja
mov
stos
sahf
icebp
divl
fildl
movsl
dec
mov
sarb
aad
outsb
add
sar
mov
cmc
push
sub
fistpl
fdivp
div
loopne
mov
idivl
cmc
in
pop
mov
jmp
jge
js
arpl
inc
push
mov
out
shlb
xchg
xor
ljmp
mov
lods
rcl
pop
xor
jg
inc
test
addr16
clc
and
daa
jg
cmpsl
pop
xchg
jecxz
out
jecxz
and
push
cmpsb
inc
jecxz
xchg
push
data16
inc
mov
dec
jb
pop
push
inc
sarb
in
shll
jbe
out
loopnew
sbb
pop
data16
fwait
icebp
lock
fcmovb
mov
repnz
mov
shrl
movsb
xchg
addr16
cli
out
cmpsb
cmc
jg
daa
jecxz
inc
incb
movsl
add
sti
es
jle
arpl
mov
inc
es
lds
sbb
sti
inc
mov
ffreep
in
mov
mov
mov
jge
inc
lock
into
mov
fwait
sub
pusha
cmpsl
push
and
mov
gs
jae
shl
sbb
rorb
test
pop
cmpsl
jmp
xor
addr16
pop
cmp
lods
scas
and
data16
ljmp
push
ret
xchg
roll
push
dec
mov
adc
inc
add
xor
arpl
dec
xor
jnp
popa
jns
dec
popa
xchg
pop
xor
flds
push
jne
inc
and
mov
out
inc
loop
cmp
imul
ljmp
test
and
in
dec
adc
pusha
shl
add
in
xchg
loopne
cmp
xchg
or
dec
lcall
inc
jp
in
dec
movb
push
sahf
clc
repnz
pop
push
xchg
stos
fstl
xchg
jae
hlt
sub
jmp
ja
test
stos
add
sbb
outsb
mov
lea
divb
xchg
jbe
lcall
hlt
adc
shl
cwtl
icebp
imul
adc
out
xchg
pop
mov
aas
adc
icebp
push
scas
neg
cmpsb
sbb
rolb
mul
lcall
mov
shlb
adc
jae
icebp
imul
mov
outsl
hlt
popf
rcrb
jnp
addr16
sarl
in
sbb
aam
testl
adc
bound
dec
js
jle
aam
test
xchg
lea
out
dec
adc
mov
sbb
outsb
loopne
icebp
lds
std
aaa
sti
xchg
inc
sbb
stos
cmp
filds
jecxz
pop
daa
xchg
xchg
cmpsl
test
out
dec
or
push
addr16
shlb
sub
test
sbb
fistpl
fs
hlt
es
out
cmp
inc
ja
xlat
rorb
cli
cmc
jae
out
fimull
pusha
dec
aaa
push
in
stos
loop
hlt
aam
adc
pop
xor
jle
or
fcom
mov
lock
frstor
ret
pop
lahf
jnp
ret
rorl
popf
jp
inc
xor
inc
test
dec
in
push
push
sub
fistl
popa
push
mov
into
add
pop
shl
push
xchg
bnd
jo
notrack
mov
mov
int
bound
in
lods
cmp
test
or
lock
adc
fwait
mov
mov
or
adc
es
fsubl
cmpsb
addr16
dec
xchg
xchg
in
mov
divl
sbb
xchg
mov
fwait
mov
daa
sti
lahf
jecxz
pop
div
pop
sbb
dec
shl
mov
out
jmp
xor
notl
and
loopne
dec
jns
stc
rolb
xor
adc
jp
daa
test
cmp
loopne
imul
aas
xchg
dec
xor
jb
in
call
lcall
mov
sub
adcl
sub
add
cmp
fwait
mov
push
imul
push
xlat
leave
scas
add
dec
movsb
push
std
repnz
aas
bound
movsl
mov
xor
gs
mov
mov
aad
loopne
addr16
lahf
push
fdivl
mov
inc
cmp
stos
cmpsl
iret
sti
inc
es
jae
push
pusha
jp
add
mov
push
jmp
repnz
or
roll
popf
pusha
movsb
pop
imul
pop
scas
rcl
ror
in
pusha
push
aas
shll
out
xrstors
cmc
xchg
cmpsb
divb
xlat
into
sub
bound
mov
jne
out
add
test
ljmp
test
repnz
dec
scas
jle
jl
scas
cmpsl
dec
jg
int
inc
movsl
sub
fcompl
mov
out
push
xchg
sub
jb
loope
mov
test
jne
cmp
and
jle
mov
xlat
loopne
mov
pop
xchg
out
int
lds
rcrb
cmpsl
dec
jb
sbb
cltd
mov
rcrl
dec
imul
push
inc
pop
gs
sbb
xchg
pop
push
cli
and
xchg
mov
cmc
popf
jg
insl
in
cmpsl
and
ja
test
cmp
sub
pop
test
ja
and
fcmove
cmc
mov
iret
mov
pop
fld
cli
in
pop
cli
jp
int
mov
leave
dec
cmp
push
stos
xchg
repz
push
pop
outsb
xchg
xlat
jno
mov
out
sub
pushf
ja
cmpsl
test
loopne
mov
popf
jge
sbb
xchg
orl
stos
out
mov
iret
inc
pop
std
mov
call
stos
es
pop
mov
mov
jnp
jae
in
cmp
sub
test
mov
inc
dec
inc
imul
mov
jne
adc
outsb
and
push
out
and
lcall
mov
outsb
lret
xor
sub
lds
fstpl
lea
xchg
sub
fs
js,pn
cmpsb
stos
pop
mov
aad
xor
cmpsb
jmp
jne
adc
stos
cli
insl
mov
in
xchg
pop
cmp
repz
adc
lcall
xchg
fs
sahf
cmpsl
shl
arpl
and
out
test
sub
add
mov
adc
je
clc
pop
daa
push
sahf
pop
ss
sahf
outsb
cltd
dec
xor
test
lods
push
js
iret
sbb
fstps
pop
shrl
aaa
addr16
test
das
and
sbb
mov
adc
mov
stos
orl
loopne
jne
insb
push
imul
je
cmp
cli
stc
add
int
sarb
daa
push
addr16
xorb
sub
inc
xchg
add
aaa
stos
rcrb
mov
mov
jns
xchg
jp
into
sub
scas
push
dec
mov
push
inc
lods
mov
sarb
outsb
cmpsb
cmpsb
outsl
push
sbb
lea
aad
fstpl
xchg
aaa
xchg
sahf
rcrl
daa
icebp
pop
inc
jae
leavew
push
sbb
push
push
adc
xchg
in
xlat
push
xchg
sbb
je
call
jbe
inc
hlt
jp
jge
cmp
pop
insb
xchg
inc
enter
test
in
mov
incl
cmp
dec
jb
addr16
push
push
stc
dec
sub
mov
push
lea
xor
xor
lds
mov
lods
scas
js
repnz
sbb
xchg
sbb
loopne
cmpsb
into
cmp
out
dec
loope
xlat
movsl
or
add
enter
sub
or
enter
roll
ja
mov
testb
jnp
call
mov
incl
scas
dec
push
stos
xor
jne
mov
loopne
je
inc
scas
inc
mov
pop
movl
push
clc
inc
pop
std
pop
shlb
shll
mov
arpl
ds
sub
shll
imul
scas
cltd
xchg
lea
adc
lret
es
sbb
or
cld
push
shl
movl
push
dec
testb
or
pushf
scas
cltd
or
sti
data16
insl
xchg
lds
mov
out
inc
mov
icebp
and
sti
addr16
shll
cltd
mov
add
mov
jbe
das
sub
mov
push
jg
or
cmp
les
mov
leave
call
jecxz
dec
aad
sub
mov
adc
mov
aad
out
into
ja
mov
shrl
sub
add
jno
inc
hlt
xchg
popa
nop
stos
xor
stc
adc
and
xor
lock
push
jp
ds
mov
out
rcll
arpl
sub
ss
aaa
out
sbbb
mov
inc
out
dec
nop
mov
cmpsb
or
aaa
mov
adc
adc
push
mov
adc
pop
and
mov
adc
and
test
dec
mov
and
fisubrs
in
sub
cmpsb
jge
lret
dec
bound
xchg
or
gs
addr16
daa
adc
mov
ds
add
pushf
and
daa
lret
pushf
daa
xlat
imul
pushf
shll
lods
xchg
or
adc
leave
ja
push
xor
pushl
xchg
ljmp
cmp
sarl
lds
lea
hlt
mov
into
xchg
arpl
loop
adc
dec
daa
lea
mov
call
mov
xchg
inc
test
sub
mov
mov
popa
insl
in
inc
jno
rcll
fimull
mov
insb
ret
jns
mov
pop
jae
cltd
sub
orl
push
imul
dec
ds
xchg
out
loope
jns
xchg
jle
inc
neg
test
stos
stos
in
pop
add
jmp
idiv
es
mov
int
test
pop
js
mov
pop
xlat
add
out
cmpsb
sahf
imul
jl
inc
loop
jae
bnd
scas
cmp
fwait
xor
fsubrl
mov
push
cs
out
rorl
mov
out
nop
fidivs
add
ss
xchg
push
popa
adc
cmc
add
cmp
aam
lahf
lods
push
insb
sub
cmp
sbb
add
inc
dec
and
into
in
test
andl
pop
enter
jno
push
cmpsl
mov
std
ss
sub
movaps
aad
fucomip
das
xlat
xchg
mov
xlat
in
in
push
andl
data16
jbe
aas
cmpsl
pop
shr
daa
incb
addr16
mov
xlat
addl
jecxz
test
mov
xor
dec
scas
insl
dec
mov
mov
out
movups
or
ja
push
in
inc
test
aas
adc
pop
insl
and
lds
hlt
jge
fmull
imul
pop
xchg
arpl
and
mov
xlat
notb
lds
inc
pop
xchg
sub
jae
mov
mov
adc
sahf
xchg
mov
jle
adc
push
sbb
pop
lret
sub
ja
aas
clflush
aaa
hlt
ja
out
lds
fwait
dec
cmpl
cmc
pop
mov
mov
or
dec
cmp
sbb
adc
jb
jb
add
and
xlat
inc
rcrl
cmpsl
add
fwait
and
call
inc
in
jbe
movsl
fwait
mov
inc
xchg
loope
icebp
imul
xchg
pop
imul
stos
jae
xchg
stc
cmp
cs
loope
test
and
subl
lea
push
subl
int
mov
or
xchg
jo
push
lds
jnp
xchg
daa
neg
sub
idivl
xchg
mov
mov
adc
jl
inc
mov
push
test
jbe
pop
mov
cmp
repz
lea
jnp
cmp
repz
xlat
lds
push
pop
sbb
jp
fimull
mov
lods
pop
mov
jno
inc
adc
jb
or
mov
cmpsb
insb
mov
test
push
sub
adc
cld
push
jne
jnp
test
nop
mov
cmpsb
push
push
imul
push
shl
pop
lods
jno
es
push
pop
mov
mov
push
sbb
sar
arpl
cmc
pop
ret
pop
mov
jge
enter
popa
sbb
inc
add
jecxz
sub
outsb
stos
sub
push
pop
sbbl
shr
pop
loopne
add
mov
sbb
push
lcall
test
stos
imul
mov
cltd
jns
dec
test
add
mov
push
push
arpl
mov
divb
sub
add
and
pop
xchg
ffree
loopne
dec
and
rorb
mov
aas
jae
pop
ja
out
lds
jnp
not
or
inc
and
fwait
and
sub
fisubrs
jnp
data16
fisubl
call
pop
add
adc
rclb
xchg
dec
or
mov
movsb
sbb
addr16
stos
or
inc
insl
mov
mov
rcll
lahf
adc
outsb
push
pop
outsb
insl
inc
gs
movsb
test
cmc
cmpsb
jp
faddl
out
mov
ror
jne
lock
xor
jb
outsb
lahf
push
icebp
scas
std
inc
mov
xchg
aad
mov
call
fmul
mov
movhps
lret
xchg
int
movl
inc
shlb
jno
sub
fnsave
mov
iret
pop
lods
sub
mov
cmpsb
loopne
mov
jno
insb
dec
push
jge
divb
gs
cli
imul
xchg
sbb
ja
scas
push
pop
mull
test
gs
push
sbbl
lds
clc
cmc
inc
or
push
mov
or
fidivrl
popa
jg
lahf
inc
jge
lret
daa
adc
mov
xlat
shlb
arpl
mov
pushf
mov
shlb
jge
filds
pop
rclb
dec
xchg
ss
in
nop
pop
dec
imul
xchg
lods
stc
jne
out
cmc
mov
add
jbe
inc
mov
bound
inc
jb
mov
sub
cmp
add
ja
stc
dec
fsubs
dec
xor
xorl
adc
adc
cmpsl
test
loope
cmpsl
rcrb
aam
mov
popf
pop
shrb
jno
inc
pop
push
je
mov
adc
enter
xchg
push
std
xor
mov
into
xor
mov
or
mov
fisubs
fwait
movsb
out
loop
sub
std
test
or
mov
cmpsl
mov
mov
into
pop
inc
cmp
cmpsb
es
dec
add
shll
movsl
mov
cmpsl
xchg
xor
dec
cmp
and
aaa
gs
in
inc
dec
inc
lret
mov
mov
lahf
fnstsw
push
sub
dec
cmpsl
ss
xchg
xor
jge
xlat
xchg
movsl
les
or
enter
lock
loopne
data16
test
out
and
cmpsl
xchg
in
addr16
mov
popa
cmc
fsubl
cmpsb
cmpsl
push
shrb
addr16
mov
mov
xor
sbb
rolb
mov
je
pop
push
mov
lods
xor
in
jg
fsubl
ret
pusha
cmpsl
scas
inc
mov
xchg
int
incb
or
mull
xor
inc
daa
idivb
lock
mov
and
in
sahf
mov
loopne
test
fnsetpm(287
movsl
lds
out
dec
movsl
pop
addr16
xor
popa
xorl
out
out
push
ret
dec
shl
cmp
jecxz
out
imul
pop
lock
in
pop
mov
test
sub
sbb
in
negl
jg
jg
lock
cmpsl
lret
movsl
inc
mov
mov
inc
push
jns
mov
mov
sub
mov
movl
cltd
ret
es
lret
les
andl
or
mov
je
addr16
cmc
sbb
outsb
cmpl
out
fwait
out
insl
shl
adc
push
out
add
cmpsl
out
mov
add
sbb
pusha
test
out
fwait
mov
in
cmpsb
insb
pusha
or
mull
inc
and
and
sbb
inc
stc
mov
out
adc
mov
mov
cmpsl
pop
adc
or
stos
aas
mov
xor
add
mov
and
fcomps
addl
cmpsl
fwait
bound
fdivl
out
sbb
clc
outsb
adc
mov
xchg
mov
pop
inc
xorl
or
and
ja
out
out
mov
mov
movl
mov
loope
inc
cmp
push
sbbl
inc
push
adc
repz
add
adc
or
mov
mov
out
shll
cmp
and
imulb
cmpsl
mov
pop
addr16
xor
out
mov
mov
pop
rolb
xchg
fwait
jge
andl
fisubs
xlat
inc
mov
push
jae
cli
sahf
xchg
aad
xchg
repnz
negb
add
std
inc
pop
pop
aam
es
aaa
cmp
leave
jg,pt
inc
or
daa
fidivrs
mov
inc
pop
push
sub
inc
jge
pop
andl
mov
push
cmpsl
mov
repnz
sub
out
fs
lock
adc
js
bound
sub
mov
jmp
inc
clc
and
pusha
outsl
insl
mov
inc
mov
addr16
dec
jne
adc
push
mov
rolb
cs
fwait
cli
repnz
cmp
insl
sbb
dec
repnz
sbb
sbb
jl
iret
xlat
push
push
int3
mov
in
xlat
imul
add
popf
xbegin
neg
in
pop
mov
stos
sarl
xchg
jp
arpl
icebp
xlat
or
mov
shll
push
mov
cmp
ja
jl
push
loopne
int3
loope
mov
and
stos
add
sti
mov
daa
cli
mov
icebp
add
mov
cmp
pop
add
iret
xlat
xchg
cmpsl
sub
test
leave
filds
lahf
xchg
in
scas
push
js
enter
sti
mov
test
outsb
aad
sbb
add
out
add
scas
rcll
dec
and
test
pop
out
sti
push
pop
xlat
lods
pop
xor
or
andl
lret
data16
cmc
js
div
sbb
jno
out
mov
dec
test
xlat
fiadds
jl
movsl
push
lock
xlat
aas
shlb
cmp
iret
xchg
fnstsw
jge
in
sarl
and
mov
in
mov
ret
push
inc
add
icebp
bound
pop
jle
pop
dec
cwtl
xchg
jns
shlb
mov
mov
push
ret
sub
jg
inc
test
rorb
dec
xchg
out
cli
inc
xchg
mov
data16
insl
fldt
pusha
jno
inc
sub
sbb
mov
ja
insl
sbb
subw
fs
test
in
aam
cmpsb
dec
sub
sub
dec
ljmp
jle
test
bound
xor
aad
in
dec
adc
insl
sbb
push
xchg
fists
xchg
jecxz
mov
lods
inc
fstpt
or
lahf
push
decl
pushf
push
stc
clc
andb
mov
cmpsb
adc
lea
subl
fwait
sbb
dec
push
and
in
jb
sbb
loopne
icebp
add
push
inc
xor
jmp
cmp
and
cmp
fstpt
jecxz
fcompl
cli
fcmovb
push
bound
out
lods
pop
mov
fidivrs
or
and
ja
or
std
mov
adc
das
test
das
iret
cmp
add
outsl
je
pop
popf
push
jo
daa
out
jge
stos
push
mov
sub
push
out
cmp
lret
pop
fwait
pop
in
inc
sub
inc
pop
jo
daa
rcrb
daa
scas
jmp
jecxz
add
add
lea
pop
lret
mov
jg
popa
negb
jl
mov
xchg
popf
adc
xchg
inc
xor
jo
cmp
test
sub
negl
and
mov
fs
sub
pop
xor
mov
adc
jo
sub
inc
scas
test
xor
pop
call
sub
jnp
addr16
pop
ret
decl
jo
jmp
aas
repz
push
pop
inc
ja
movsl
cmc
xor
jp
add
sub
adc
jle
fstl
mul
rcrb
cli
aas
outsb
pop
out
inc
outsb
notl
dec
ret
dec
push
mov
adc
cmp
sub
or
aaa
das
cs
pop
ljmp
jae
adc
pop
mov
je
inc
and
addr16
xchg
pop
icebp
stos
fisubs
stc
adc
fsubl
ret
push
inc
arpl
pop
fsubr
out
pop
data16
es
popf
lds
push
mov
cmp
pop
inc
xor
fists
popf
mov
inc
push
addr16
xor
add
test
sti
add
cmpsb
gs
push
movsl
repnz
sbb
inc
test
ds
xchg
sub
loopne
fisttpll
addr16
pop
pop
inc
mov
movl
pop
xorl
mov
pushl
xchg
in
pxor
xor
out
in
xor
sub
xor
in
dec
lds
add
xchg
pop
or
orl
mov
mov
out
daa
fidivs
adc
aas
fstpl
mov
and
icebp
mov
add
push
and
inc
mov
and
movsl
mov
mov
je
lods
inc
jns
je
add
mov
lcall
adcl
mov
xchg
daa
scas
push
inc
in
xor
sbb
fldenv
fisttps
std
daa
jmp
out
pop
fsub
sub
movsb
lret
xchg
shl
and
xor
xchg
add
pop
in
mov
loope
push
fildl
fstpt
in
insb
repz
sahf
push
cli
test
jle
pop
in
push
faddl
les
mov
fimuls
ds
dec
xor
dec
jmp
sub
xor
es
aas
outsl
stos
adcb
jmp
adc
lret
fisttps
mov
cwtl
xor
push
in
add
das
repnz
icebp
pop
repz
and
mov
xchg
dec
mov
mov
sti
repnz
adc
popf
mov
mov
pusha
testl
sub
mov
out
stos
cltd
popf
fistpll
out
test
addb
lret
mov
mov
add
jle
jbe
test
inc
xchg
sti
aam
mov
mov
shr
popa
lea
cmpsl
dec
leave
add
out
stc
cli
add
or
pop
iret
adc
ds
mov
faddl
xchg
fcmovbe
repz
xor
ficoms
pop
mov
std
data16
dec
dec
xlat
xchg
jmp
jnp
test
out
adc
pop
adc
jno
fs
dec
pop
jmp
maskmovq
idivl
rcrl
lds
icebp
rol
outsb
mov
sub
std
or
icebp
mov
pushl
repz
or
daa
test
std
jns
pop
mov
push
jb
inc
mov
into
xlat
insl
pushf
jge
jle
cs
sub
adc
mov
adc
mov
shlb
pop
sbbl
jmp
fcmovu
fs
sti
insl
mov
pop
inc
out
mov
testl
ja
flds
rcrl
jl
test
scas
shrb
xchg
push
pop
xlat
push
push
jecxz
test
mov
pop
push
jg
cmc
out
out
fstpt
fisubl
lret
mov
and
xchg
xor
arpl
mov
pushf
push
push
pushf
shll
mov
nop
sub
add
subl
sub
inc
les
aaa
lahf
hlt
das
mov
mov
and
loop
inc
jbe
aas
lods
div
inc
bound
dec
cmp
pop
idivl
data16
cwtl
nop
out
out
ror
inc
pop
dec
mov
lds
sbb
add
mov
or
xchg
fsubrp
add
push
mov
push
out
cs
pushf
stos
mull
cmc
mov
or
test
mov
aam
push
adc
cli
push
push
ror
cmc
and
inc
fwait
adc
icebp
pop
jns
fsubp
and
cmp
push
xor
push
test
inc
dec
or
lret
push
jno
sbb
scas
xchg
sub
jl
shlb
dec
shlb
cld
subb
mov
or
xor
jp
xlat
pusha
jbe
das
pusha
jae
stc
xchg
and
pop
pop
sbb
loopne
mov
sub
fisubrs
rorb
xchg
insb
mov
jecxz
pushl
xlat
cmpsl
pop
pop
jb
xlat
incb
addl
aad
pop
dec
fmull
mov
push
push
shl
stos
in
inc
mov
xchg
cli
lods
mov
xor
dec
arpl
inc
sub
push
and
das
orl
xor
aas
or
fs
pop
jl
lds
cmp
dec
xchg
test
movsb
inc
lahf
addl
dec
notl
mov
ss
addr16
in
inc
pop
inc
xchg
daa
fwait
adc
pop
popa
push
lods
outsb
cli
pop
mov
and
jne
insl
dec
sub
fbld
fpatan
dec
popa
and
out
ficoms
daa
lock
out
cs
pop
gs
adc
in
cmc
movsl
jge
iret
add
lock
inc
and
pop
lds
ret
jp
cli
mov
jg
cld
mov
in
in
popa
mov
fdivrp
notl
push
in
loop
and
lret
hlt
testb
mov
adc
enter
iret
out
mov
out
test
out
add
jg
outsl
sub
jnp
ja
pusha
loope
test
lods
jecxz
pusha
cmc
cmc
popf
testb
jecxz
and
cmp
test
add
mov
jp
enter
lock
lock
inc
add
mov
cmp
ret
loop
xchg
rolb
test
sahf
je
imul
xchg
cmc
jp
addr16
clc
push
mov
xchg
cmpsl
adc
mov
cmpsl
inc
mov
push
mov
leave
lahf
fsubl
pop
leave
sbb
ficomps
pop
es
sahf
mull
sahf
inc
cmp
mov
mov
jge
lahf
pop
mov
mul
push
lds
add
push
std
iret
push
dec
sbbl
fidivrs
mov
jb
inc
ret
cmpsl
or
mov
shl
xchg
lret
push
mov
testl
rorb
faddp
pop
ret
das
push
lcall
call
dec
scas
pop
notl
sti
iret
and
cmpsl
decb
mov
andl
inc
inc
cld
daa
or
adc
out
cld
push
mov
cmpsb
mov
adc
mov
inc
in
daa
mov
sbb
in
inc
fcmovnb
lods
cmc
movsl
and
test
dec
daa
gs
jg
movl
cli
pop
add
in
and
mov
inc
mov
repz
xchg
sbb
mov
lcall
jecxz
mov
mov
sahf
sbb
push
inc
sbbl
jecxz
arpl
inc
loop
and
or
testb
dec
sarl
outsl
and
test
andb
movl
in
adc
mov
add
flds
inc
xchg
add
mul
decb
jne
ret
add
mov
popa
inc
sbb
mov
es
out
in
std
xor
test
jg
ret
adc
stos
jno
jecxz
pusha
mul
testb
mull
jo
pop
mov
mov
cmc
mov
addr16
xchg
push
hlt
jne
or
push
fs
mov
ret
add
jnp
cmc
addr16
mov
ret
jecxz
mov
cli
movl
fisttpll
mov
add
shll
mov
add
xlat
push
lds
jns
sarl
shll
jno
movl
pop
subb
mov
inc
inc
mov
xchg
imulb
pop
push
jp
in
add
inc
in
sub
xor
jo
into
mov
pusha
cmpsl
cwtl
push
fs
jle
scas
test
arpl
testb
mov
cmp
incb
sahf
mov
shrb
aas
xchg
jne
lea
cwtl
sahf
push
sbbb
and
test
fnstcw
js
add
jo
subl
jp
push
mov
xor
daa
lret
jae
aad
push
mov
les
xlat
test
mov
sar
pop
push
out
pop
insl
jns
lods
rcr
xor
faddl
icebp
das
testb
and
filds
sub
lret
pop
mov
movsl
aad
push
xor
subl
rclb
xchg
lahf
push
cmp
ja
mov
adc
adc
lods
shlb
cmp
mov
lods
pushf
cmp
rorb
xchg
cmp
loop
sub
insb
cltd
sub
bound
cmp
inc
add
mov
ja
jge
jbe
insl
ret
mov
jecxz
adc
push
mov
mov
mov
iret
push
es
push
outsb
aam
loope
sarl
jmp
gs
xchg
mov
sub
pop
xor
shl
in
mov
inc
in
ja
aad
ret
es
in
fists
outsb
or
fiaddl
stos
cmp
cmp
dec
movsb
enter
std
ljmp
dec
pop
stos
mov
mov
xchg
mov
stc
cli
aad
mov
in
and
add
inc
pop
addr16
shll
jb
xchg
jmp
or
xor
push
in
cmp
cmp
mov
adc
add
add
lahf
xor
and
pop
daa
pop
jo
fbld
dec
sbbb
movsl
inc
roll
push
out
dec
daa
js
mov
mov
or
shrl
call
idivl
inc
jecxz
push
sub
data16
repz
dec
pop
sub
jp
addl
and
or
push
ja
pop
push
mov
and
inc
sbb
adc
jbe
xchg
idivb
jae
sbb
icebp
ret
pop
clc
cmp
dec
gs
sbb
ja
jns
push
outsb
outsl
rcll
roll
pushf
fsubl
andb
xchg
sti
movsb
clc
xchg
sbb
push
negb
adcb
mov
mov
and
push
push
pop
push
inc
nop
cwtl
or
and
jbe
shrl
mull
imul
xchg
mov
dec
std
inc
in
incl
cmpsl
push
and
mov
jbe
dec
cmpsl
push
xlat
pop
fs
popf
push
adc
pop
xchg
fnstenv
fwait
dec
xchg
or
pop
pop
or
dec
idiv
cwtl
inc
push
das
int
pop
pop
cmp
std
mov
es
push
ja
out
lods
aaa
mov
test
clc
popa
mov
pop
dec
cli
movsl
frstor
inc
ja
aas
mov
popa
xlat
rcrb
mov
adcb
loope
inc
or
xlat
push
cwtl
mov
sub
xor
mov
fs
and
sub
jmp
lahf
popf
fsubrs
pop
pop
or
fstpl
fwait
push
cli
ss
or
sbb
cmp
push
addl
test
notb
jns
mov
mov
pop
in
push
into
and
mov
cmp
pop
out
cmp
and
inc
mov
xlat
xchg
pop
outsb
mov
xchg
mov
stos
xchg
inc
lret
loope
xlat
mov
mov
jecxz
push
repz
jecxz
dec
push
lods
das
lds
pop
shr
or
fdivrl
or
mov
std
scas
cmpl
cmp
iret
out
xchg
leave
xlat
inc
in
mov
add
push
out
jmp
xchg
xor
arpl
and
daa
out
lcall
push
in
jnp
repnz
jle
outsb
imul
std
mov
aam
out
mov
fisubrs
jb
movsl
dec
mov
mov
sar
and
mov
sbb
push
scas
adc
je
cltd
fcmovu
cmc
imul
hlt
pop
or
mov
in
mov
fwait
or
aam
xchg
jae
pusha
or
jne
aam
shlb
int
cmp
mov
shll
aas
out
test
xchg
mov
dec
mov
insb
mov
pop
addr16
dec
xchg
rcll
jecxz
adc
mov
shlb
sti
in
dec
inc
scas
xchg
pushl
xor
rcll
aas
outsl
mov
lock
aad
jp
lock
push
aad
ljmp
jge
pop
adc
arpl
cltd
imulb
loope
mov
mov
call
or
mov
and
js
in
das
and
mov
cmpsb
cmp
sbb
js
xchg
sub
xchg
rol
fcoms
lock
jnp
cmpsb
mov
int
add
repnz
pop
cli
cmc
js
popf
sbb
mov
xchg
cmp
clc
inc
mov
add
push
aaa
mov
inc
jae
push
int
and
pop
pop
jecxz
gs
dec
ds
es
test
push
adc
jecxz,pn
test
jmp
cmp
jl
xchg
jno
push
not
outsl
stc
sahf
lds
vpsadbw
push
jbe
lock
sti
test
mov
frstor
cli
jne
add
lds
loop
call
xchg
stc
ds
out
jb
adc
mov
or
pop
jg
dec
jge
jg
es
dec
xchg
jne
xor
jl
jnp
xchg
mov
outsb
sub
and
out
lock
leave
dec
mov
cmp
jg
pusha
repnz
icebp
test
les
lock
cltd
mov
mov
sbb
mov
loop
cmpsl
pop
pushf
or
popf
push
xlat
or
test
add
subl
push
les
mul
nop
or
mov
repz
jbe
cltd
ja
in
adc
out
outsb
pop
call
xchg
mulb
in
pop
cmp
jmp
fwait
loope
scas
loope
out
popf
cmpsb
xchg
imul
mov
daa
daa
rclb
js
cmp
push
add
jmp
incl
inc
adc
or
rol
sbb
mov
lea
test
sub
mov
sti
fiaddl
fwait
test
and
push
mov
incb
or
aas
push
and
mov
out
test
jbe
sahf
dec
jbe
cmc
mov
aam
test
dec
push
xor
add
xor
shlb
xlat
outsl
loopne
rcrb
fdiv
lahf
stos
jp
lods
inc
fidivrl
add
inc
sbb
cli
pop
ja
mov
push
into
inc
and
inc
mov
pop
popf
sub
std
jl
jge
push
jle
aaa
sbbl
out
sbb
rcl
insl
outsb
mov
mov
orl
push
jns
outsb
xchg
shrl
add
sub
xor
out
ds
push
mov
std
mov
icebp
in
adc
or
leave
and
dec
popa
mov
pop
sbb
pop
cmp
xchg
mov
or
loop
ficomps
mov
lods
aaa
popa
pop
mov
xchg
ja
test
daa
fsubl
addl
adc
js
cs
push
popf
mov
iret
xchg
lods
xlat
push
sub
sbb
jg
movsl
leave
int
and
inc
cmp
push
cmc
es
xchg
mov
push
mov
out
mov
fidivs
fwait
fwait
sbbl
mov
sbb
mov
jmp
iret
movb
pop
roll
jae
mov
mov
fnstcw
stc
xlat
outsb
movsl
js
sbb
std
cmp
xchg
pop
ror
push
mov
outsb
push
mov
daa
mov
cld
fidivrs
lds
cmp
shlb
in
out
addb
and
cmc
int3
aaa
out
ja
xchg
push
inc
xchg
sub
movsl
das
repnz
xchg
mov
adc
lods
push
fs
es
xchg
push
jecxz
out
scas
mov
jno
clc
or
in
hlt
ja,pt
fs
int3
fwait
mov
in
out
cmp
test
jns
add
cwtl
data16
cli
sub
and
out
pop
xor
scas
inc
in
aam
mov
loopne
sbb
mulb
in
test
push
add
lods
pop
sbb
mov
popf
mov
aad
cmpl
jmp
cmp
movsl
icebp
sub
in
mov
stc
jecxz
mov
inc
mov
pop
xchg
out
fcomps
mov
or
cwtl
push
xchg
pop
or
pop
add
sub
pop
add
dec
cld
dec
test
cmp
in
ja
outsl
xlat
enter
or
aas
je
lahf
push
xlat
cs
and
ja
movsl
ret
mov
mov
jmp
loop
icebp
xlat
cs
push
or
ds
xor
out
jmp
repz
and
cmpsl
mov
pop
insl
jo
sti
cmp
rcll
rcrb
push
xor
cmpsl
in
int
lahf
xlat
jle
push
rolb
stos
sarl
dec
std
sub
jns
or
pop
mov
pop
mov
stc
xor
out
mov
ffreep
nop
ret
dec
push
inc
hlt
or
dec
rolb
jns
js
cmp
rcrb
outsl
iret
push
icebp
pop
and
out
leave
sbb
scas
stc
iret
cs
dec
imull
inc
stos
decl
push
scas
push
sbb
ret
pusha
sub
xlat
ret
fdivrl
xor
nop
ret
mov
and
out
fisttps
xchg
dec
int
cmp
push
jp
xchg
mov
mov
mov
lods
stc
dec
jg
xchg
sbb
push
clc
insl
icebp
scas
jecxz
adc
dec
testb
jbe
mov
gs
dec
andl
dec
insl
rorl
fdivrs
cmpsl
ret
call
add
pop
lds
pop
sti
aas
lds
jae
adc
xchg
xchg
sti
test
mov
adc
test
ja
push
mov
push
shll
jmp
mov
xchg
cltd
fsubl
insl
inc
cltd
cmc
xchg
aas
test
jnp
inc
cmp
jmp
jo
stos
cmpl
xchg
sbb
lods
test
push
clc
addr16
xor
out
mov
mov
mov
inc
loope
pop
test
jnp
stos
cmc
mov
imul
test
jp
sub
pop
loop
test
xchg
cwtl
xchg
movsb
xor
push
daa
and
aas
and
mov
pop
mov
push
jp
xor
mov
ret
stos
shrb
faddl
mov
arpl
jo
cwtl
cwtl
jnp
sbb
and
sbb
inc
into
inc
jge
int
inc
and
sbb
push
aad
into
gs
dec
pop
fisubrl
sarl
in
sub
mov
mov
pusha
xorb
data16
jbe
xorl
and
imul
scas
lds
push
push
xor
inc
movsl
xchg
or
mov
ljmp
dec
pop
testb
dec
mov
lods
jge
scas
cmpsb
and
jo
jecxz
dec
and
push
ljmp
inc
arpl
aam
xor
insb
addr16
sbb
arpl
mov
mov
cld
mov
in
fildl
fs
push
pop
mov
adc
pop
shll
push
jno
dec
jb
mov
fwait
jge
arpl
cmp
cmp
or
push
test
xchg
notb
dec
jg
imul
das
jge
addr16
in
jae
adc
jp
push
push
movsl
stos
and
dec
ret
and
inc
cmp
pop
ds
xchg
jo
in
sti
sarl
hlt
add
jg
dec
sbb
fcoms
adc
xchg
inc
loopne
or
mov
jbe
pop
mov
imul
lods
cmpsl
xchg
pusha
fwait
imul
inc
stc
in
xor
mov
leave
dec
mov
jl
or
ret
or
add
scas
enter
or
daa
scas
rorl
xor
arpl
push
fidivrs
push
filds
lahf
add
add
iret
lock
test
enter
pop
fdivs
mov
or
xor
addl
pop
inc
shr
and
movsb
je
jbe
ret
dec
mov
and
sbb
mov
inc
xchg
cmp
stos
xor
xlat
mov
pop
adcb
in
jbe
xchg
inc
pusha
sbbl
loopne
ss
dec
cwtl
shrl
pop
push
mov
add
mov
xchg
pop
aam
sti
rolb
aas
jo
sbb
push
lret
lcall
mov
test
xor
inc
int
sub
and
out
inc
dec
ret
cmp
cld
mov
leave
test
lods
das
mov
sbb
ja
stos
lahf
cmp
jae
xchg
and
adc
xor
xor
mov
inc
in
mov
les
xchg
shlb
mov
movsl
movsl
imulb
lcall
jne
push
cs
sub
pop
cmp
lds
xchg
cmp
ret
push
push
int3
mov
sti
fisubs
xchg
ja
xchg
add
outsb
test
sbb
sbb
sub
dec
movswl
and
mov
in
push
aaa
insl
fnstenv
subb
out
arpl
xor
cmpsb
pop
xchg
icebp
xchg
xor
dec
loop
lds
pop
sbb
rolb
lds
test
jecxz
std
call
pop
lea
jb
lods
xlat
xor
arpl
cmp
xchg
stc
xchg
and
in
cmc
arpl
xchg
les
fildl
xlat
insl
inc
sahf
ljmp
fidivrs
mov
sub
gs
xchg
call
stc
in
fiadds
and
sbb
test
aam
hlt
xchg
xchg
pop
add
cltd
push
jmp
jmp
icebp
mov
shl
fdecstp
mov
xor
sarl
jne
fisubs
cmp
mov
cltd
jmp
jne
ja
icebp
jmp
inc
test
out
and
lahf
jne
in
in
pop
mov
cmp
testb
add
nop
std
sub
lock
inc
xchg
pop
adc
jae
fsubrl
adc
outsb
push
sahf
fldt
push
cmp
push
mov
jecxz
sbbb
addb
fnstenv
mov
aas
dec
add
decb
cmp
inc
add
sti
ret
pop
in
imulb
aam
mov
test
dec
lea
and
imul
inc
jmp
aam
push
ret
loope
test
cmp
in
dec
jnp
and
int
scas
loopne
and
jg
or
aaa
mov
xchg
out
inc
fadd
outsl
pop
orb
clc
ja
imul
adcl
push
push
bound
mov
pop
jnp
sub
sbb
repnz
iret
repnz
push
test
fidivs
jns
addr16
sbb
xchg
mov
popa
sbb
orl
movsb
add
popf
mov
jae
mov
lcall
xchg
jb
xor
pop
push
push
and
std
in
fwait
movsb
adc
fsubr
aam
lahf
mov
add
mov
inc
fstps
leave
imul
push
ss
fstpt
lahf
ret
pop
mov
std
test
sbb
jecxz
rcll
cmpl
and
push
jbe
aas
fstps
rcrb
jbe
jnp
test
scas
dec
addr16
mov
cmpb
inc
or
movl
pop
cmp
jecxz
les
add
jnp
stos
rol
in
jns
xchg
ja
cmp
test
cld
iret
adc
gs
es
pop
addb
test
mov
push
out
mull
lret
lock
fnstsw
jne
mov
mov
and
jae
sarb
dec
mov
inc
adcl
inc
xchg
ljmp
scas
pop
test
cmp
jge
mov
ja
xlat
fiadds
dec
shl
sahf
jo
stos
ja
mov
addl
xorb
xor
xchg
lods
dec
sbb
jle
cmpsl
pop
add
mov
shrl
sbbl
add
movl
ja
jb
push
lahf
es
mov
into
loope
mov
js
jl
ss
das
mov
insl
jge
cmc
mov
mov
pop
mov
xor
jo
dec
lock
jecxz
dec
xorl
jp
inc
aaa
jo
dec
lock
add
xor
inc
mov
inc
sbb
leave
js
cltd
adc
mov
jge
adc
lahf
add
adcb
mov
aas
cmp
ss
push
or
test
xchg
test
inc
nop
lahf
mov
es
fsubp
loope
cld
mov
jnp
rolb
jbe
mov
js
jnp
push
aas
popf
mov
mov
cmpsl
sub
xchg
sub
les
jp
jno
in
adc
icebp
in
dec
mov
mov
andb
add
push
push
rcl
cmp
xchg
mov
cwtl
mov
je
mov
and
ret
jmp
aad
xchg
jge
rol
cmp
movsl
popl
mov
test
lret
inc
xchg
cmpsl
repnz
adc
push
mov
loop
jo
jnp
fcoms
dec
push
data16
inc
xchg
rolb
xor
daa
cmp
je
inc
out
jne
sbb
adc
add
xor
loopne
hlt
leave
jecxz
data16
mov
inc
dec
jecxz
es
xor
fistpll
hlt
mov
loop
inc
je
sub
je
mov
ja
cmp
adc
inc
xchg
mov
dec
jo
stos
jecxz
mov
xchg
lahf
pop
daa
mov
mov
fbstp
add
mov
xchg
ljmp
scas
shlb
cld
ss
ret
pop
rclb
js
addr16
mov
xchg
jnp
add
push
inc
repz
push
push
pop
push
mov
mov
test
rolb
mov
mov
mov
mov
xor
ret
add
mov
mov
fistl
mov
out
cmpb
cmpl
test
xor
repz
hlt
clc
aas
lahf
and
xchg
mov
jno
xchg
cmpsl
fs
imul
cs
and
mov
mov
out
arpl
and
xchg
adc
inc
cmp
adc
jbe
aas
mulb
mov
mov
xor
cmp
xor
jmp
out
jmp
sahf
fsub
inc
mov
cmp
les
xor
jecxz
int3
or
stc
and
jae
cld
mov
mov
into
jns
daa
popf
cltd
insl
imull
mov
testb
cmp
cmpsb
mov
xlat
push
xchg
mov
jp
lea
xchg
and
daa
lahf
addr16
test
inc
dec
fiaddl
test
jbe
jo
mov
lret
pop
jge
dec
jns
shll
out
popa
add
dec
imul
adc
and
fidivrs
rcr
mov
and
in
jg
shl
call
dec
dec
rclb
xor
dec
sub
mov
loope
mov
clc
xchg
mov
stos
test
mov
pop
sub
roll
hlt
xchg
cmp
mov
pop
sahf
out
lret
mov
xchg
xchg
pop
jmp
add
sbb
into
lods
and
subb
cmp
mov
outsl
insl
arpl
addr16
xchg
fwait
daa
pop
test
jb
or
xchg
imul
out
jmp
mov
bound
jecxz
ja
loope
subb
jne
add
sti
mov
xchg
xchg
dec
aas
push
bound
jae
cltd
xor
jo
scas
fildl
popa
iret
out
cmc
jb
inc
xchg
scas
outsl
xchg
repnz
jne
ja
out
mov
movsb
jae
out
stos
ficoml
daa
ret
dec
cmpsl
pop
add
test
outsb
notl
mov
sub
xchg
jne
arpl
add
mov
popa
je
loope
xor
mov
and
bound
fisubrs
mov
sbb
frstor
inc
cmp
cmc
xchg
es
aad
out
and
ss
mov
inc
jno
daa
or
scas
mov
fwait
insb
iret
cmpsl
push
fwait
addr16
lods
stc
xor
dec
addr16
push
shl
aaa
jge
aas
and
imul
std
jb
jmp
or
popa
ss
stos
pop
lea
xor
rcrb
mov
mov
mov
fdivrp
jp
cmp
movsb
mov
jmp
adc
pop
pop
popa
sub
iret
xchg
inc
adcl
jnp
add
out
das
xlat
js
push
int
cmp
jno
insb
outsl
fsub
cmp
adc
cld
sti
loope
push
mov
pop
loope
xchg
jg
mov
jo
pop
mov
mov
loopne
mov
gs
add
ret
sarl
mov
cmpsl
out
mov
addr16
aad
in
pop
mov
sub
iret
sub
xlat
fldl
dec
les
and
mov
or
pop
dec
loope
mov
sub
jnp
jns
mov
loopne
mov
xor
lds
cmp
xchg
jno
in
stos
add
mov
rcrl
pop
push
icebp
inc
cmpsb
mov
jecxz
data16
cmp
push
int
mov
sbb
icebp
mov
out
and
fldl
scas
jne
mov
mov
dec
out
and
into
fistps
mov
or
fs
rcll
jmp
lock
lds
scas
dec
arpl
lods
cmp
fs
out
jle
pop
add
lods
lods
mov
dec
scas
insb
or
and
fidivl
cmp
stos
ss
and
cmc
pop
imul
jb
adc
in
adc
mov
scas
minps
pop
fs
gs
cmp
icebp
dec
xor
cmp
jne
movsl
pusha
popa
pop
inc
sbb
cmp
cs
and
adc
or
scas
lock
sbb
xlat
xor
xlat
sbb
mov
mov
mov
and
movsb
mov
xlat
mov
leave
jns
xchg
icebp
sahf
stos
and
dec
pop
jle
iret
push
clc
mov
aaa
xchg
xor
cmp
aad
xchg
xchg
mov
pop
jbe
mov
test
pop
pop
mov
xchg
sbb
andb
mul
jne
stc
push
add
sbb
icebp
adc
fsts
sahf
add
lock
negb
lret
cltd
xlat
mov
mov
imul
push
dec
cmpsb
dec
movsl
push
ret
mov
mov
adc
aas
addr16
aad
and
lar
addr16
or
mov
mov
loope
adc
scas
jmp
cli
jmp
hlt
loopw
shl
cltd
xlat
jmp
mov
sti
mov
jnp
sbb
pop
jnp
negb
and
cmpsl
js
push
cmp
jae
in
sub
loop
adc
lret
movsb
std
or
stos
loopne
fadd
add
jp
xor
pop
fdiv
daa
or
push
loopne
sub
add
push
mov
insl
adc
mov
loope
xchg
mov
hlt
rcll
loop
pop
roll
jge
mov
lahf
pop
jecxz
jno
xor
cmp
or
shrb
inc
xor
cmp
lret
push
push
pop
fsts
hlt
adc
xchg
xchg
aas
push
xor
pushf
loopne
or
cmp
mov
fimuls
mov
les
pop
rcrb
and
dec
sub
and
jno
shl
sbb
dec
sub
movsb
scas
mov
or
adc
jne
scas
popa
cwtl
jae
jge
fs
pop
sbb
test
cltd
in
pop
sub
faddl
cmp
xor
mov
cmp
sahf
add
dec
xchg
xor
push
fildll
sbb
xchg
adc
mov
add
add
lods
insl
push
scas
add
xor
adc
adc
mov
fimuls
repz
std
jg
add
ja
jbe
std
cld
pop
daa
mov
push
test
mov
mov
ret
push
out
cwtl
or
leave
shrl
cmpsb
lds
jnp
inc
mov
rcll
mov
cmp
push
outsb
stc
out
or
mov
mov
mov
or
add
sub
mov
fisttps
pop
push
andb
pop
pop
mov
shlb
ret
xchg
fnsave
imul
jb
cli
subl
jecxz
popf
mov
jbe
jmp
pop
ret
test
lahf
ret
mov
sbb
pop
das
mov
or
jo
mov
jge
sbb
cli
mov
lcall
in
xor
mov
xor
inc
add
iret
mov
subb
aas
mov
andb
pop
cmc
xchg
mov
cld
xchg
inc
call
shl
sub
mov
call
lock
out
add
into
and
clc
rclb
lds
mov
repnz
xchg
dec
xor
lds
fs
cli
or
in
clc
mov
inc
xchg
ja
enter
in
push
insb
push
push
int
mov
je
sbb
nop
hlt
les
daa
mov
ljmp
sub
popf
es
aam
inc
mov
out
mov
aas
xchg
cmpsb
pop
pop
push
dec
jo
mov
mov
outsw
jnp
aad
std
das
jno
shl
mov
mov
cmp
dec
movsl
xchg
pop
rcrb
les
fwait
shl
inc
or
jbe
and
sbb
jmp
cmp
jb
push
ret
sarb
jnp
out
es
cli
nop
sbb
cmp
pop
mov
inc
bound
lea
mov
sub
jb
es
inc
lret
fiadds
and
mov
cmp
test
mov
mov
sub
enter
mov
push
pop
xchg
mov
jae
and
fs
fstpt
sbb
ficoms
movsw
movsb
out
loope
pop
es
mov
cld
lcall
shll
sti
dec
daa
out
jb
adc
mov
lods
out
pop
cmp
mov
adc
cmc
stos
gs
xchg
or
imul
mov
xor
sub
bswap
mov
out
outsb
jle
cli
mov
in
mov
ffreep
aad
nop
or
popf
or
mov
mov
lods
scas
lock
inc
rcll
outsb
sub
xor
inc
mov
idiv
lods
ret
insl
and
scas
daa
sbb
aad
mov
xor
dec
mov
cld
test
movsl
out
popa
data16
mov
cltd
not
in
fisttpl
push
xor
mov
xor
mov
xchg
test
jb
jbe
xor
cmp
icebp
xchg
repnz
cmp
test
rclb
cmpsb
lret
cmpsb
or
loopne
cwtl
xchg
sti
push
fsubrs
xchg
movsl
subl
mov
scas
fs
xchg
loopne
out
adc
jnp
mov
sbb
sbb
adc
mov
aaa
popa
pop
daa
pop
ret
mov
push
inc
cmp
mov
pusha
test
jbe
push
adc
movb
inc
idivl
xor
xor
repnz
sbb
mov
inc
shr
fs
and
cmp
mov
cmp
inc
repz
aaa
inc
mov
popf
sub
xchg
push
popa
mov
jbe
mov
inc
xor
mov
xor
cmp
lds
dec
xchg
xchg
call
mov
imul
dec
mov
or
loope
mov
mov
push
xor
pop
loope
push
testb
adc
arpl
repz
sahf
cld
push
out
and
cmpsb
movsl
xor
jno
jge
jecxz
and
mov
loop
ret
add
in
sub
movsb
jg
jne
out
xchg
fldl
or
cmc
adc
popa
bound
fstpl
ret
mov
ret
jecxz
cmpsb
xchg
cwtl
lahf
push
push
and
and
outsb
cmp
dec
cmpl
repnz
insb
lds
xchg
jg
xchg
incb
in
pop
sub
test
jb
fsubl
stos
adc
xchg
dec
inc
mov
lock
scas
ret
jg
sub
pop
and
test
xchg
adc
jge
aaa
cld
aaa
cwtl
xchg
pop
xchg
lock
push
xor
rcll
xchg
sahf
fcomps
push
dec
or
mov
gs
xchg
push
fwait
ds
xor
push
inc
push
addl
mov
mov
int
aaa
std
and
xor
les
xchg
js
and
cli
mov
dec
sbb
mov
mov
shl
mov
popa
xchg
xor
jecxz
sub
out
lcall
adc
cmpl
inc
test
fmull
lahf
in
aam
add
pop
and
rcrb
mov
das
mov
add
addr16
push
xchg
inc
pop
mov
mov
inc
push
repnz
inc
mov
in
imul
es
push
xchg
popa
and
adc
les
lds
cmpsl
loopne
jno
test
int3
les
fldl
jb
pop
inc
testl
or
mov
call
mov
dec
lock
into
add
call
inc
jmp
cmp
mov
xchg
pop
bound
sti
jae
sbb
sub
mov
xchg
mov
adc
icebp
mov
cmp
sbb
fidivs
lahf
cmpb
mov
xchg
into
in
sbb
jbe
sbb
in
jno
inc
inc
mov
aad
mov
das
addr16
mov
jge
mov
mov
test
clc
shl
filds
ljmp
jg
cmp
xor
into
mov
aas
sbbl
xor
js
lock
je
cld
shl
mov
aas
jle
push
inc
insl
mov
xor
psadbw
ljmp
and
in
add
pop
das
push
mov
ret
xchg
daa
add
shll
inc
jecxz
roll
lahf
addl
push
add
insb
pop
pop
push
into
mov
add
sbb
nop
jno
inc
mov
jae
out
inc
mov
mov
fists
xchg
mov
fs
pusha
test
xchg
cmp
add
cmp
in
shr
jge
ja
and
sbb
xchg
pop
add
adc
push
and
faddp
cmp
inc
inc
rorl
add
aas
cmpsb
bound
add
sub
and
mov
test
inc
xchg
inc
mov
lods
test
jns
lock
repnz
mov
add
je
mov
mov
xchg
out
das
inc
cmpsl
jle
inc
push
imul
insb
push
mov
mov
push
adc
lods
addr16
fiadds
cmp
out
les
inc
jecxz
xor
dec
ja
movb
loop
mov
mov
hlt
jns
jg
fs
in
ljmp
jno
push
aaa
rolb
sahf
mov
xchg
push
push
jecxz
jmp
mov
inc
mov
mov
fs
std
ror
divps
int3
mov
jle
mov
lcall
xorb
mov
ja
test
orb
mov
mov
pop
cmp
sbb
lods
dec
add
mov
loope
arpl
inc
movsl
pop
or
dec
jb
xorl
fwait
aas
and
adc
push
pop
sub
push
cmc
mov
aaa
jo
gs
cmpl
pop
mov
loop
xor
xchg
xor
jno
mov
sub
jecxz
add
sub
inc
xchg
cltd
dec
add
dec
enter
mov
hlt
js
pop
sub
into
ret
movsl
or
inc
sarb
into
jnp
xchg
ret
adc
insb
scas
jecxz
cmpsl
lods
xchg
testb
push
sbb
push
mov
pop
cmpsl
shlb
addr16
movsb
out
jmp
fidivs
movsl
repz
xor
mov
insb
jecxz
xlat
clc
mov
lods
pop
movsl
fsubs
dec
repz
rolb
sbb
push
xchg
icebp
xchg
vpunpcklqdq
inc
push
add
pop
ret
mov
sbb
inc
test
repz
insb
push
jbe
inc
ds
addr16
aaa
aaa
add
inc
and
pop
in
call
loope
fs
or
jne
mov
push
push
mov
out
lret
mov
add
mov
inc
mov
pop
jle
sti
push
inc
pop
inc
rorb
js
add
pop
negb
sub
fbld
inc
negb
mov
sbb
mov
fwait
push
int
pop
mov
inc
sub
xchg
inc
ja
pop
int
mov
mov
rol
loope
push
out
popf
mov
inc
and
jmp
in
push
mov
push
jg
xor
inc
adc
jno
xor
pop
rolb
jnp
les
push
out
mov
or
mov
enter
xor
jno
cmpb
int
incb
lret
addl
fnsetpm(287
inc
mov
call
adc
popa
pop
cwtl
push
pop
xchg
push
sbb
xor
push
xor
dec
push
xchg
cli
lods
imul
inc
mov
jae
pop
push
cmp
mov
cli
loope
cmc
mov
test
test
mov
dec
les
jl
fbstp
push
bound
jnp
into
test
mov
mov
ret
lods
flds
dec
inc
add
ds
ss
and
cmp
sbb
and
push
sub
and
and
jp
bnd
inc
xor
aas
div
mov
pop
pop
xor
pop
test
fisttpl
adc
cmc
fstpt
xor
loopne
dec
xchg
jb
jg
cmp
mov
negl
mov
out
mov
in
frstor
fstps
inc
rclb
ds
test
ja
xchg
inc
mov
mov
xor
sbb
sbb
mov
sbb
adc
sbb
or
fsub
stos
pushf
scas
jge
lret
xor
dec
aas
mov
pop
stos
or
sbb
cmp
xchg
test
addr16
jno
and
arpl
cmp
into
ja
and
clc
mov
pop
xabort
roll
inc
loope
dec
inc
jge
nop
pop
push
into
addb
pop
jp
divb
dec
sbb
mov
push
test
and
fs
nop
loopne
xchg
or
loope
xor
sahf
inc
icebp
frstor
lods
fistps
sub
shlb
test
std
pop
inc
jns
xchg
cmp
outsl
fimuls
stos
dec
cmp
cmc
mov
sbb
leave
xchg
xchg
xor
or
or
imul
test
and
cmpl
add
mov
in
lds
ja
jae
mov
shl
cmc
leave
sub
adc
wbinvd
stos
dec
xor
mov
mov
lods
fstpt
mov
shrb
outsb
sbb
xchg
fidivl
cmc
es
mov
adc
lock
or
cltd
ss
les
in
mov
lock
push
fcompl
mov
inc
test
jg
mov
push
and
outsl
inc
gs
icebp
les
pop
fucom
sar
test
and
aad
dec
mov
xchg
or
stc
push
mov
lahf
jne
fldcw
xchg
jmp
xchg
push
rclb
add
icebp
jmp
mov
cmpl
mov
mov
push
jae
dec
push
repnz
and
in
jbe
popa
xor
popa
mov
xor
hlt
push
mov
adc
mov
lods
sbb
lock
and
pushf
int
push
jno
mov
mov
xor
jae
gs
fdivrl
cwtl
xor
jmp
ds
fs
pop
or
push
gs
mov
inc
push
stos
jo
data16
test
dec
aad
std
sub
dec
mov
test
test
testb
xchg
push
out
std
adc
mov
sbb
inc
inc
jne
pusha
jb
arpl
xchg
pop
xor
daa
jbe
nop
not
mov
cs
and
xchg
dec
sbbb
jo
sub
sbb
and
js
fs
jle
icebp
lret
icebp
mov
adc
in
and
push
fidivs
push
xor
bound
aad
add
mulb
xchg
inc
jbe
inc
sbb
or
mov
call
xchg
jp
pop
outsb
rorl
or
aas
test
fwait
inc
xchg
fwait
xor
jge
icebp
cmpsl
mov
lods
lds
or
sub
mov
sbb
sub
ds
sbb
dec
jae
mulb
cmp
pop
scas
mov
ja
pop
pop
lods
fxam
fisubrs
inc
sub
stos
adc
addl
imul
inc
pop
jno
dec
cmp
pop
js
lea
cmp
sub
pop
arpl
sbb
dec
sub
sahf
push
iret
sub
imul
sbb
xchg
mov
jne
xchg
fsubl
mov
ret
mov
jne
outsl
ficomps
leave
and
lods
jg
cmp
adc
and
in
lock
mov
sbb
shrb
and
jmp
in
shll
insb
or
pop
sarb
loopne
adc
inc
pop
pusha
and
addr16
mov
cmpsb
imulb
xchg
mov
pop
mov
and
pop
rcrb
in
jp
cmp
cmpsb
sub
popf
and
into
mov
bound
lock
jl
sahf
push
adc
hlt
jns
outsb
lock
rorb
sbb
popa
pop
xchg
jmp
loopne
mov
dec
mov
mov
push
ss
adc
xchg
adc
xchg
ja
push
pop
je
shll
xchg
pop
cli
and
jns
mull
pop
cmp
insb
dec
xchg
imul
inc
push
sahf
dec
fnstsw
xlat
cmp
cmc
movsb
int3
adc
mov
jle
xchg
jge
dec
pushf
inc
mov
in
jns
cmp
pop
add
or
out
stos
pop
mov
les
bound
jnp
mov
pop
or
jae
sbb
stos
dec
adc
push
add
adc
jl
inc
or
sbb
jge
jae
mov
mov
ret
mov
aam
aam
idivb
stos
mov
into
ret
subl
pusha
xor
inc
mov
adcb
daa
lahf
pop
inc
push
jo
and
mov
jnp
movsl
movsb
mov
testl
xchg
gs
test
pop
mov
lds
mov
cmp
jg
outsl
sbb
add
mov
int3
jmp
sbb
sub
jno
mov
test
add
mov
sbb
pop
sarl
dec
test
pop
testb
mov
xor
out
jg
pusha
mov
mov
jb
std
inc
lahf
and
dec
in
lods
inc
rep
add
decl
mov
pop
xchg
cmp
mov
dec
cmp
xor
mov
jbe
sarl
lahf
sbb
rcll
sbb
xor
xor
test
aam
sbb
xlat
mov
fld
sti
imul
inc
mov
mul
sarl
or
cmc
stos
add
mov
sub
xor
xchg
dec
cmp
testb
pop
xchg
dec
jle
testb
xchg
mov
ss
pushl
xchg
outsl
adc
sbb
adc
mov
pop
imul
loopne
cmc
add
and
mov
sbb
mull
outsl
loope
popa
xchg
test
and
pop
dec
addr16
insl
dec
fldl
test
xor
push
mov
mov
aad
jbe
dec
jnp
faddl
fstpt
insl
mov
xchg
aad
andnps
sub
lcall
idivl
fs
jno
sbb
push
ja
mov
cmp
jno
lahf
sub
xchg
add
cmc
fcom
data16
mov
outsl
mov
cmp
adc
std
mov
jnp
and
add
js
stos
jo
out
gs
pop
sub
mov
jno
ss
clc
mov
pushf
push
hlt
shll
lcall
in
cmp
xchg
sub
mov
jbe
xor
jge
jg
inc
mov
es
mov
jae
pmullw
scas
in
gs
lock
sahf
in
push
mov
lock
fwait
pop
fimull
jo
xor
test
adc
imul
and
mov
sbb
cmp
mov
inc
js
jg
pop
ret
mov
sub
jg
lcall
or
nop
sarb
aas
cmc
div
xor
or
iret
jae
aad
mov
xor
cmpl
mov
mov
inc
mov
orl
inc
dec
lret
or
cs
insl
dec
sahf
dec
dec
out
mov
jge
out
js
ja
jl
wrmsr
aaa
push
jg
aam
push
daa
adc
incb
xlat
ss
in
int
mov
xchg
pop
mov
movsl
push
cmpsb
out
pop
jmp
jnp
scas
pop
addr16
fmulp
stos
ret
clc
test
scas
mulb
movsl
or
mov
divl
mov
aaa
rclb
add
into
xlat
xchg
sub
stos
xor
xlat
mov
add
mov
add
shlb
inc
adc
or
sub
filds
outsb
adc
mov
test
je
sarl
pop
xchg
pop
mov
insb
inc
sti
or
iret
mov
inc
jne
pop
loop
popf
je
into
stos
xchg
int
lods
adc
test
sarl
std
stos
fdiv
lcall
push
insb
lods
or
idivl
daa
mov
mov
popa
push
popf
out
pop
in
jmp
jg
push
push
lods
gs
mov
movl
std
inc
push
ja
dec
dec
lods
divb
xchg
ficomps
cli
lea
icebp
xlat
mov
cmpsb
pop
mov
pop
push
sahf
and
xchg
mov
ss
mov
shrl
xor
test
mov
mov
icebp
je
mov
fiadds
lahf
cmp
push
xchg
cmpsl
xchg
add
mov
mov
in
out
out
mov
pop
add
ffree
push
pusha
push
or
xlat
add
xor
lods
stc
cmpsl
stos
ret
push
imul
testb
lret
xbegin
mov
jle
mov
adc
xchg
adc
push
adc
xor
sub
or
pop
fyl2xp1
jge
ds
aad
pop
ret
mov
or
adc
leave
adc
movsb
adc
mov
ret
out
adc
pop
jle
pop
jbe
ja
jg
mov
cmp
push
dec
dec
mov
iret
mov
push
mov
jg
or
outsb
and
lods
roll
add
mov
lret
pop
gs
sahf
adc
aas
pop
pop
out
loopne
jl
lret
add
fs
add
lds
adc
xchg
and
mov
rorl
dec
cmp
push
out
cmp
mov
js
add
dec
rorl
jne
aam
pop
push
int
mov
fcmovbe
outsb
and
das
stos
std
adc
cltd
mov
pop
and
mov
hlt
sbb
in
xor
inc
inc
in
fadd
mov
mov
call
or
lods
sbb
stc
popf
and
sarb
and
xorl
mov
jbe
pop
subl
cmp
push
lret
mov
sahf
cmp
add
fidivs
or
xchg
out
shll
inc
out
nop
lods
xchg
cmp
inc
sti
cmp
cmp
push
cmp
xor
mov
xlat
lods
mov
cmp
inc
inc
mov
lea
add
dec
loopne
jmp
xor
and
aam
push
mov
clc
popf
or
leave
xchg
sbb
mov
enter
jno
hlt
sbb
out
divb
insb
fisubl
ss
lea
dec
scas
movsb
in
pop
jl
sahf
gs
cmp
sbb
pop
popf
cmp
int3
or
jge
sbb
xor
inc
popf
cltd
js
push
jge
pop
and
pop
std
int3
int
int
cmp
popa
xor
cmp
inc
sbb
or
cmp
or
test
fisttpll
fcmovu
inc
lock
fs
inc
mov
mull
sub
andl
movsb
adc
sub
test
sarb
mov
add
mov
xor
xchg
cmpl
sti
loope
inc
popf
adc
out
sub
cltd
int3
sar
jo
mov
mov
mov
jae
or
mov
jle
or
pop
nop
mov
push
lods
test
jae
std
and
fdivrl
and
test
add
jne
shrb
stos
pop
cmp
mov
or
or
loopne
jle
cmp
sbb
jle
cltd
xchg
cmpsb
pop
fsubr
and
lock
push
mov
loopne
test
adc
xor
imul
mov
inc
mov
shrb
xchg
jo
mov
cmp
dec
mov
int
mov
jp
mov
cmp
mov
sub
mov
test
mov
enter
ss
mov
insb
loop
and
movb
dec
cmp
adc
cltd
leave
jle
iret
lret
mov
pop
filds
mov
iret
sahf
add
stos
popa
jmp
js
lock
pop
pop
adcb
add
inc
filds
and
dec
mov
outsb
and
sti
add
addr16
dec
test
pusha
dec
pop
and
mov
add
mov
mov
xor
push
stos
cmc
push
scas
mov
stc
das
add
mov
scas
arpl
ja
inc
xchg
mov
or
pop
out
lret
jp
out
int
add
out
fwait
or
cmpsb
aad
or
fdivs
sbb
das
cmpsl
mov
pop
movb
push
jmp
jno
icebp
stc
out
cmp
out
xchg
outsb
addr16
int3
movl
sbb
xorl
jg
gs
cmp
fsts
aas
icebp
mov
push
xor
jne
bound
xchg
inc
es
xchg
test
pop
mov
mov
xchg
cltd
imul
loopne
int3
add
incb
cltd
int
ret
cltd
lret
xor
inc
xchg
adc
sub
add
and
push
mov
cmp
fiadds
in
cltd
cs
in
les
aad
sub
loop
add
inc
mov
and
inc
loope
pop
push
inc
and
push
lock
rolb
push
push
fisubs
nop
or
adc
lods
out
adc
or
pop
movsl
xchg
ja
es
xor
lds
dec
loope
aam
jbe
push
sbb
rorb
fwait
loope
data16
ret
or
clc
shl
ja
leave
jmp
mov
leave
sub
js
pusha
aas
call
insb
jns
mov
cld
stc
repz
btr
sub
call
nop
xor
push
and
or
push
or
imul
lock
jae
xorl
xorb
mov
sub
push
movsl
push
sbb
sti
stc
mov
in
cmp
cmpsb
xchg
xorb
dec
andb
fnstcw
push
mov
inc
dec
mov
outsb
aam
pop
lret
test
pop
adcl
sub
test
out
mov
in
mov
sarl
sbb
mov
in
rcpps
rorb
inc
aaa
jne
aam
dec
popa
and
scas
fs
or
stos
fbld
mov
push
into
aas
pmullw
out
sysexit
mov
sub
mov
outsl
or
cmp
idivl
popa
mov
fnstsw
aad
mov
mov
xchg
jns
mov
cmp
adc
add
lds
pop
mov
shlb
rcrl
sti
das
cmc
subl
mov
aam
and
add
inc
inc
inc
pop
sarl
inc
xchg
inc
icebp
cwtl
inc
xchg
shll
out
lahf
jae
mov
sub
cmp
rol
dec
mov
add
in
lahf
add
bound
add
jno
xlat
popa
in
loop
imul
mov
push
shl
or
cmpsl
xchg
mov
cmp
or
xor
jmp
sub
incb
aad
mov
jbe
shrl
out
inc
pop
pusha
test
int
jp
inc
lcall
test
cmp
adc
xor
loopne
xchg
mov
dec
and
push
in
out
jno
in
push
adc
rcr
insl
xor
cmp
jae
repnz
es
pop
jns
stos
jle
rcll
jno
adc
mov
outsl
je
dec
aad
and
roll
ret
popa
jno
fists
jo
sbb
push
or
hlt
movsb
dec
lret
mov
mov
filds
inc
jnp
cmp
add
add
push
lahf
pop
inc
scas
mov
dec
aad
aaa
loope
push
push
cmp
imul
mov
push
push
mov
rolb
in
mov
lds
out
ds
cmp
cmp
gs
and
xchg
inc
cmpsl
sub
mov
cmpl
pop
je
dec
arpl
hlt
stc
stos
mov
aam
call
adc
frstor
adcl
mov
incb
sti
lock
add
filds
pop
jg
sbb
dec
test
fldl
pop
loope
adc
loopne
add
adc
jmp
inc
xchg
fs
movsl
push
fsub
sarb
rclb
cmp
or
jge
cli
jne
inc
add
mov
std
daa
daa
jg
inc
mov
add
sti
call
mov
outsb
in
pop
and
pop
add
and
rcrb
hlt
js
pop
inc
jg
sbb
sahf
clc
fldl2t
movl
ret
outsb
ja
pop
mov
fs
pop
test
stc
lock
pop
das
gs
sbb
outsb
xchg
jne
lods
stc
int
sbb
popa
adc
push
mov
sbb
push
pop
mov
jecxz
pop
add
mov
fdivrs
daa
aas
xlat
cmpsb
mov
inc
loope
adc
add
or
mov
mov
or
adc
dec
adc
fdivp
or
add
or
push
xor
push
lods
and
xchg
arpl
xchg
jg
iret
les
int3
or
cmp
mov
inc
xor
into
shl
pop
jns
sbb
icebp
aaa
push
fdivrs
jne
lahf
je
incb
or
push
loop
jmp
outsl
mov
shr
into
mov
or
fldcw
pop
shr
std
lahf
mov
add
mov
push
fsubp
inc
sub
cmpsb
xchg
daa
lret
jno
push
stos
push
in
ja
rcrb
xchg
add
lahf
loope
in
loop
xorl
sarl
and
push
or
addr16
or
arpl
jbe
xchg
and
incb
or
decl
pop
mov
dec
mov
mov
sbb
les
stos
adcb
cmp
rorb
jno
cmp
popf
out
pop
test
mov
out
inc
out
sub
out
shrl
mov
cmp
pushf
mov
leave
frstor
xchg
fiadds
dec
test
or
pop
xchg
daa
stos
or
xchg
add
incl
add
xorl
es
mov
shrl
add
add
imul
test
or
out
sub
mull
adc
jecxz
inc
sub
xor
fbld
mov
jp
sahf
push
fistl
jg
xchg
push
repnz
sahf
pop
add
jge
sti
sbb
cwtl
into
in
inc
dec
mov
push
stos
rcll
sbb
jg
cmpsl
jmp
cmpsl
iretw
ret
push
movl
cmpsl
stc
mov
in
sub
pop
in
xchg
inc
cmp
mov
pop
xchg
mov
jl
push
fcmovnbe
test
or
mov
xchg
loop
xchg
fwait
loopne
jae
pusha
pop
mov
dec
inc
scas
leave
mov
cs
mov
dec
nop
cmp
inc
cs
jle
mov
cmp
sub
fwait
out
stc
mov
mov
mov
adc
xor
popf
rorb
dec
iret
cmpsl
or
fs
mov
mov
inc
lods
add
out
icebp
sti
mov
orl
shl
sub
fstpt
clc
mov
sbb
cmp
dec
pop
or
stc
sbb
mov
neg
test
add
pop
test
inc
in
adc
sbb
ja
jge
addr16
inc
outsl
out
outsb
push
sbb
cmpb
test
xchg
xor
aad
jmp
jp
adc
and
jge
insb
lcall
daa
out
rol
or
jle
in
pop
sbb
inc
jnp
push
and
ret
sarb
inc
xchg
or
add
addl
mov
mov
out
inc
push
pusha
lods
popl
add
mov
adc
movb
andb
lahf
adc
pop
fisttps
fistpl
leave
cmpps
int3
push
fisttpll
jg
cmp
dec
adc
inc
jle
add
xchg
jo
mov
pusha
mov
jns
repz
jno
cmpsl
aas
out
mov
outsb
xor
addr16
test
pop
inc
fs
push
adc
sbb
leave
mov
imull
loope
cmpsl
pop
aad
adc
ret
aaa
and
outsl
in
push
jmp
loop
and
push
mov
xchg
aad
mov
or
mov
cld
xchg
add
stos
xlat
test
mov
ret
mov
adc
jg
out
out
cmpsb
test
inc
add
jmp
data16
xchg
mov
adcb
adc
jb
cmp
pop
mov
stos
js
aad
ss
cs
push
ffreep
icebp
jecxz
ljmp
xor
ja
gs
out
out
adc
aam
lods
mov
shr
mov
test
mov
xchg
insb
xorl
leave
pop
cltd
ds
outsb
cmpsl
inc
clc
push
mov
mov
les
data16
ja
outsl
loope
in
fwait
xchg
test
push
fidivrs
out
add
jl,pt
pop
xor
hlt
incl
and
repnz
push
std
insl
adc
popf
cmpb
xchg
pop
pusha
mov
aas
out
shrb
jg
sti
out
outsl
mov
jg
mov
adc
or
xchg
fwait
test
jns,pn
push
lahf
scas
stc
iret
hlt
jmp
xor
jo
std
lret
loopne
in
and
ffreep
pop
aas
les
sub
and
fildll
fwait
and
cmp
sub
in
or
outsb
in
or
mov
add
inc
icebp
enter
nop
fldenv
cmp
mov
or
fbld
mulb
push
addr16
call
sti
xor
sbb
xor
fidivl
mov
decl
inc
inc
sbb
ja
popf
and
hlt
jge
fucomip
loop
rcll
mov
int3
cmp
xchg
dec
js
inc
popa
cmp
cli
notl
rcr
addr16
cli
je
jmp
mov
movsl
xchg
shll
fcom
test
sbb
mov
xorb
dec
sbb
push
iret
imul
test
leave
test
jmp
jo
dec
jg
repnz
jle
add
jns
adc
loopne
js
das
jecxz
scas
es
jecxz
mov
out
out
pop
incb
sub
and
xor
xor
daa
in
cmp
jecxz
pop
stos
adc
test
sbb
out
push
add
sbb
shll
shlb
inc
pop
push
jg
faddl
fsubp
arpl
jae
out
inc
mov
adc
inc
cli
movsl
cmp
adc
cmp
and
outsb
jmp
or
adc
or
add
popl
cmp
inc
inc
addr16
inc
mov
in
mov
pop
mov
cs
sub
pop
les
jns
add
dec
add
jmp
fs
cmc
mov
cmp
les
bound
cmpsb
out
andl
das
les
mov
inc
push
cmp
test
mov
mov
shr
inc
push
std
leave
jge
cmpsb
mov
add
dec
sar
add
popa
das
lock
repz
lods
dec
add
pop
mov
stos
cmpsl
insl
js
fcoml
mov
popa
push
stos
out
gs
dec
xlat
sbb
xor
ds
add
cmc
add
ja
pop
mov
leave
adc
pop
cmpl
mov
push
fst
out
xchg
negb
in
or
lret
pop
popa
test
mov
add
in
lds
rcrb
aam
in
lods
outsl
xchg
sbb
xchg
push
mov
in
stos
sbb
adc
mov
jle
pop
mov
shll
in
dec
mov
repz
jae
ret
add
jae
fwait
sub
cmp
push
lds
adc
out
je
jmp
mov
pop
adc
mulb
test
imul
pop
mov
lahf
cmpsb
sub
jp
out
je
mov
out
das
push
pop
mov
push
aas
cmpsl
jge
inc
mov
shlb
mov
idivl
and
pop
dec
test
push
mov
mov
fisubl
pop
inc
inc
xchg
ret
rorb
es
popf
xorb
std
sub
sarb
pop
cmp
test
cmp
pusha
mov
mov
inc
jnp
add
cmp
hlt
xchg
add
or
ljmp
jle
and
add
jmp
fucom
push
es
in
mov
mov
ljmp
rclb
in
add
setnp
inc
sub
pusha
int3
inc
out
cld
cmp
push
mov
adc
dec
xlat
out
adc
mov
sbb
xchg
mov
andl
mov
dec
fwait
adc
mov
ret
xchg
cmpsb
scas
inc
lcall
xlat
lea
test
mulb
insl
push
mov
faddl
adc
jmp
add
push
iret
popf
pusha
pop
xor
ja
add
mov
push
fstpt
in
xchg
std
arpl
lds
test
mov
xchg
insl
aaa
iret
pop
ja
mov
fxch
or
sbb
pop
loope
repnz
lods
outsl
shrb
stos
loopne
and
loopne
rcr
sti
mov
insl
xchg
jecxz
stos
xchg
sarb
sub
or
ficompl
inc
ljmp
and
cli
xlat
outsb
mov
jle
add
sahf
int
jmp
fwait
ret
imul
cmc
frstor
jmp
data16
pop
test
inc
ljmp
jno
repz
add
shl
mov
pop
jle
add
xchg
push
add
stc
pop
cmpsb
test
add
shll
jmp
ffreep
push
pop
insl
jle
int
xlat
addr16
rcll
jge
data16
or
mov
inc
add
push
mov
adc
mov
idiv
rcrl
jecxz
dec
push
jmp
xor
enter
sarl
xchg
sbbb
jle
jbe
test
jmp
int
cmc
fidivs
pop
push
in
jg
and
fcmovnbe
loope
lcall
dec
fcompl
push
adc
xchg
std
xchg
sahf
sub
adc
imul
daa
cmpsl
xchg
pop
mov
lea
lds
jecxz
sub
jmp
add
jo
movsl
and
inc
outsl
pop
in
icebp
stos
mulb
in
div
ret
in
ljmp
add
mov
or
pop
jecxz
ret
adc
fwait
xchg
insl
inc
ljmp
es
aam
fld
or
xlat
push
clc
mov
cmpb
mov
jecxz
loop
add
push
xchg
fidivrs
jmp
mov
fdivr
sti
cmp
cmp
in
ret
and
stos
cs
add
mov
sub
mov
mov
pop
cwtl
pop
aas
sarb
xor
push
insb
push
push
push
lds
std
test
adc
inc
inc
leave
cmp
fxch
xchg
cmpsl
cmp
jecxz
pop
insl
fcoml
faddp
mov
mov
push
xchg
sti
lock
pop
push
sti
scas
pop
xlat
scas
sub
cmpsb
inc
inc
push
out
mull
jge
fs
push
and
push
repz
mov
cmp
pushl
xchg
jle
mov
mov
cmc
loope
sbb
mov
fs
jle
inc
pop
mov
pop
das
add
iret
dec
xchg
dec
add
pcmpgtb
sahf
xorl
jecxz
mov
movsl
push
or
out
add
mov
mov
mov
inc
fildll
pop
nop
mov
adc
clc
xchg
jecxz
shll
adc
fidivrl
add
and
jp
sub
fwait
pop
dec
and
push
in
push
adc
jmp
jno
mulb
xlat
adc
inc
push
nop
pop
in
cmpsl
int3
shrb
into
inc
out
mov
aam
pop
ss
push
sbb
lahf
pusha
push
pop
cmp
and
pminub
loopne
pop
dec
or
adc
xchg
sub
stos
idivb
frstor
insl
testb
mov
sarb
addr16
push
insl
std
addr16
aad
or
je
or
fs
and
pop
xlat
mov
pop
sbb
pop
mul
cmc
jmp
arpl
push
das
mov
inc
cli
outsl
mov
cwtl
inc
stos
das
test
shrb
les
pop
mov
jg
and
push
jnp
lds
sbb
mov
lds
mov
sar
jge
and
movsl
lock
out
inc
test
jbe
pushf
pop
dec
insb
xlat
adc
sbb
lret
pushl
jmp
call
jbe
jecxz
test
xchg
push
out
or
sbb
shlb
ss
dec
int3
out
mov
stc
mov
addr16
jnp
mov
push
mov
xchg
lds
sbb
pop
lds
pop
pop
jecxz
adc
cmc
aaa
out
mov
pop
dec
aad
mov
test
insl
hlt
mov
sbb
loopne
mov
dec
frstor
out
test
inc
xor
push
jmp
mov
add
aad
and
xchg
pusha
mov
aam
ss
inc
mov
or
cmpsl
adc
pop
inc
dec
lcall
outsb
movsb
in
popf
or
mov
mov
jbe
loope
stc
jecxz
pop
pop
jg
cmp
adcl
arpl
add
push
sbb
ss
insb
mov
ss
cmp
scas
sahf
jecxz
cld
pcmpgtd
aam
inc
lea
shlb
inc
testb
and
jmp
sbb
sahf
and
pop
scas
pop
or
push
jns
scas
cmpsb
aas
addr16
mov
les
out
jbe
addr16
movsb
outsl
out
ja
mov
sti
jmp
adc
sarl
add
xchg
pop
iret
jmp
call
ja
hlt
pop
pop
stos
orb
or
sub
adc
mov
into
repz
inc
les
push
or
pop
arpl
fs
pusha
jp
std
fcoms
pop
stos
sub
mov
jbe
xchg
xlat
or
push
test
mov
cmp
add
inc
push
pop
inc
dec
insl
mov
xchg
stos
mov
fstp
loop
inc
inc
imul
mov
fisubs
pop
mov
pusha
pop
or
out
fsubr
pop
test
dec
sbb
jbe
cltd
add
or
cmp
daa
iret
mov
push
mov
lret
cwtl
into
iret
xchg
push
inc
mov
xor
sbb
addr16
cmp
push
adc
mov
and
idivl
jne
jns
pop
push
addr16
js
dec
outsl
mov
int
and
loope
add
adcb
movb
popf
xor
mov
ljmp
dec
sar
fcomps
mov
add
sar
test
inc
mov
jbe
je
aas
cmp
push
mov
inc
icebp
add
cmp
cmpsl
mov
cltd
mov
loopne
daa
std
shlb
add
sub
movl
lods
xchg
mov
adc
and
outsb
rcll
cmpsl
popa
fwait
inc
ja
incb
xchg
jo
or
mov
dec
sahf
adc
cmp
mov
or
hlt
jnp
imul
mov
sub
fisubs
mov
add
nop
xlat
xchg
mov
xchg
pushf
subb
jp
out
push
scas
pop
mov
jp
out
pop
cs
pop
lods
pop
sub
sbb
dec
jne
aam
in
xor
mov
and
jmp
filds
enter
popf
xchg
movsl
jmp
xchg
out
adc
adc
mov
cmpsl
inc
in
mov
shlb
addr16
jle
cmpsl
fs
cs
dec
out
add
push
or
xor
cmp
ja
jecxz
xchg
mov
loope
inc
jmp
inc
xlat
mov
sbb
jge
imull
out
out
jmp
test
in
pop
test
test
inc
popa
add
ds
cs
inc
fbld
stos
cmpsl
push
insl
js
xchg
jmp
and
out
xchg
ja
jmp
and
and
mov
add
in
jge
in
sarb
leave
lahf
std
sti
cmp
fnstsw
jne
jae,pt
xchg
and
in
pop
test
xor
xlat
in
jmp
sub
sub
push
add
inc
cmc
call
loope
xlat
adc
inc
into
xor
inc
mov
mov
std
cld
test
lds
sti
push
shl
mov
stos
dec
stos
inc
sbb
sbb
loope
mov
repnz
fisttps
clc
jge
xlat
cmpsb
push
dec
adcl
stos
nop
andl
add
inc
cld
hlt
out
loope
repnz
scas
cli
jnp
test
lds
xchg
adc
hlt
and
test
jmp
add
jmp
or
in
cmp
stos
jge
addl
cmc
dec
and
sub
push
sub
mov
dec
mov
mov
pop
fcmovnu
insl
shlb
sbb
out
shrl
xchg
aaa
inc
add
scas
iret
int3
pop
dec
jno
call
ja
std
xor
xchg
lea
push
movsb
or
cli
jp
xchg
dec
or
rcr
cmpsl
pop
mov
inc
out
insl
cmpsl
flds
pop
jae
mov
out
mov
clc
repz
cld
dec
or
in
jno
mov
aas
addl
push
addr16
stc
cmpsb
int
out
push
add
xchg
or
jecxz
and
fdivl
out
jl
jno
sub
cmpl
into
rep
mov
mov
push
pop
test
sbb
sbb
push
push
test
ljmp
addr16
test
movsl
cmp
mov
xorb
movsb
in
incl
inc
sub
rcrb
std
lahf
inc
lds
ljmp
addl
sbbl
adc
test
mov
scas
or
xlat
sbb
fsts
movsb
test
and
insl
pop
jecxz
inc
push
push
insb
jno
xlat
add
cmpsl
sbb
test
inc
divl
sbb
sub
stc
lahf
enter
and
jmp
add
clc
xlat
inc
cmp
sarb
mov
jg
xlat
inc
aad
pusha
push
sti
mov
mov
push
test
xchg
pusha
int
inc
sub
adc
mov
sti
cmpsl
mov
test
lret
push
xorl
fstpt
jl
or
js
jo
add
iret
mov
push
pop
push
sahf
cmp
jbe
loop
push
dec
imul
aam
sub
cwtl
fisubrs
pop
scas
add
int
daa
mov
xchg
lahf
mov
ds
movb
daa
or
xchg
pop
ja
out
dec
js
jp
jmp
fldl
mov
test
cmp
mov
inc
scas
sub
pop
push
daa
ffree
add
shr
jns
xchg
cs
jge
lret
iret
mov
xchg
xor
cmp
lock
cld
ficoms
subb
mov
xchg
testb
cmp
das
testb
pop
das
repnz
das
xchg
rcrl
cmpsl
icebp
inc
lea
mov
pop
ljmp
testb
stos
mov
out
cmpsl
push
icebp
scas
loop
das
push
xchg
jg
outsl
xchg
and
stos
or
je
cmp
mov
jns
addl
mov
pop
addr16
add
cltd
cmp
mov
pop
into
les
fcmovne
xor
je
lea
dec
inc
arpl
mov
orl
scas
and
and
ret
rcl
ljmp
cmpsl
testl
mov
cmpsb
rcl
std
xor
add
aad
aaa
addr16
or
in
lds
cmpsb
mul
frstor
std
inc
xchg
loopne
fwait
mov
mov
andb
lds
fs
out
fsubs
jle
mov
mov
mov
lds
lret
jne
adc
cmpsl
jnp
xorl
push
xchg
pop
scas
aad
cmpsl
fwait
fs
and
imul
clc
lahf
sbb
loopne
test
data16
cmp
aam
outsb
pop
add
cmp
outsb
and
outsb
inc
aas
inc
idivb
lahf
add
arpl
dec
push
cwtl
cmp
pop
xchg
loop
nop
xlat
mov
adc
mov
sub
nop
mov
scas
aad
ret
jns
insl
add
idivb
mov
dec
pop
mulb
mov
mov
xchg
dec
lds
fs
inc
mov
inc
mov
mov
mov
jecxz
addr16
inc
xor
dec
dec
push
lahf
mov
iret
frstor
scas
xchg
insb
out
cld
roll
js
push
lods
jle
sbb
mov
add
dec
fs
lahf
jge
bound
cmpsl
sar
xlat
sahf
aad
sub
dec
jmp
aam
sahf
mov
into
dec
clc
outsb
je
mov
jbe
popa
xor
mov
out
dec
test
add
mov
and
cs
loope
cmpsl
xchg
clc
mov
xchg
rol
push
and
das
push
cs
cmp
idivb
add
push
insb
pop
mov
pop
call
lcall
or
clc
setle
fwait
addr16
pop
mov
leave
xlat
mov
sarb
call
xchg
int
jge
dec
inc
shll
sahf
js
into
adc
pop
xor
icebp
addr16
in
jge
jmp
sahf
jbe
add
je
sti
mov
jge
insb
mov
loope
xchg
clc
dec
jns
test
adc
mov
cwtl
pop
ds
push
inc
pop
mov
nop
nop
jnp
mov
test
scas
add
sahf
sbb
outsl
mov
mov
inc
push
mov
aad
sahf
and
daa
lcall
mov
hlt
fisubrs
inc
das
lds
mov
hlt
sub
aam
dec
nop
mov
lea
xchg
jno
shl
loope
and
mov
mov
ficomps
sti
fnstsw
add
call
movsl
push
mov
pop
push
jmp
ja
movsl
fnsave
cs
movsb
outsb
push
adc
adc
add
add
lock
stos
xlat
out
orl
inc
mov
fs
jno
cmpsb
loop
cmpsl
pop
dec
icebp
jae
mov
cmpsl
jle
pop
shrl
pop
jae
shll
in
test
test
mov
mov
iret
add
pop
jne
loop
mov
mov
les
mov
xor
xchg
sti
push
add
cmpsb
push
aas
add
cs
shrb
mov
call
addr16
pop
stos
add
push
leave
pusha
pop
xlat
iret
int
loopne
test
jg
notb
insl
pop
jge
push
xor
jle
and
inc
inc
push
pop
sbb
outsl
out
xor
cmp
xlat
inc
rclb
mov
or
pop
fwait
pop
jns
arpl
cmpsl
pop
es
cli
hlt
pop
pop
repnz
popf
sbbb
insb
jg
add
sub
loope
and
add
in
daa
into
add
stos
fs
addr16
cld
adc
xchg
into
aad
repnz
mov
cmp
dec
pop
inc
pop
out
lret
imul
cli
rol
scas
jp
je
cmpsl
test
dec
fistps
ja
out
scas
fwait
adc
dec
rolb
adc
inc
lahf
rorb
je
std
mov
sbbb
and
rcrl
test
push
fdivrl
pop
into
mov
test
ss
xchg
dec
cli
add
mov
in
jg
cmpl
dec
sub
mov
ljmp
stos
jo
inc
imul
push
mov
xor
aas
push
sti
aaa
and
mov
jecxz
jmp
jno
pop
aaa
addr16
pop
sub
xor
jp
and
ret
xor
push
adc
push
pmaddwd
add
add
mov
data16
adc
pop
std
sti
xor
adc
or
orb
fistpll
add
or
js
stc
dec
movsb
scas
xchg
inc
add
daa
add
sub
sub
repnz
icebp
addr16
loop
ja
mov
mov
incb
loopne
xchg
out
inc
out
loop
push
push
sti
pop
arpl
xchg
cs
repz
scas
jo
testl
lods
add
js
sahf
mov
mov
cmpsb
lds
cwtl
cmc
daa
ljmp
cmpsl
ret
mov
fistl
fistpll
mov
push
in
in
insl
loopne
cmp
les
mov
fnstsw
mov
shlb
idiv
inc
cmp
pop
clc
jne
ljmp
inc
mov
xchg
das
cld
and
ret
gs
shlb
and
ret
insw
stos
push
mov
mov
fbstp
pop
mov
mov
pand
mov
and
sub
pop
cmp
push
int
fildll
negl
lahf
mov
arpl
mov
sti
sub
cwtl
jp
insl
add
cwtl
push
inc
div
add
stos
jmp
jmp
test
pop
mov
add
ret
mov
ret
insb
jno
sbb
daa
mov
bound
es
fmull
jge
and
les
arpl
xchg
ret
int3
in
out
mov
pop
stc
lret
sub
jmp
insb
imul
je
lock
fmuls
lea
dec
pop
addr16
iret
aad
inc
sbb
pop
xlat
scas
mov
pop
pop
ffreep
or
cmp
fwait
adc
sar
jecxz
fs
sahf
add
inc
add
std
int3
out
faddl
aam
out
stc
xor
das
or
mov
mov
mov
leave
lahf
dec
js
out
mov
fcompl
mov
sahf
push
jae
aas
std
test
push
scas
inc
test
pop
es
pop
outsb
cs
dec
mov
clc
daa
iret
repnz
xorl
and
xlat
push
cmp
cmpsl
mov
pop
repnz
fdivr
insb
test
xchg
arpl
jb
jnp
sti
fwait
cmc
add
cmc
mov
int
sbb
mov
jle
icebp
inc
aad
outsl
mov
cmc
inc
dec
cmp
jns
mov
pop
cwtl
scas
inc
dec
jae
jge
dec
and
mov
mov
push
test
js
add
sti
out
clc
ds
mov
lds
iret
add
pop
shl
fwait
add
out
or
cmc
and
fs
and
enter
rcrb
and
xlat
in
popa
test
aad
jb
les
test
jg
ret
and
data16
cwtl
jge
std
dec
cmp
repz
iret
fs
loop
div
dec
and
icebp
lret
xor
pop
add
arpl
jp
aas
pop
outsb
icebp
icebp
xlat
inc
push
lret
jns
sti
pop
mov
std
data16
ja
xor
leave
inc
push
pop
xchg
fildl
sarl
push
fstps
hlt
mov
fdivr
cmp
sarb
or
out
scas
pop
mov
dec
pop
dec
into
push
or
xchg
fwait
sbb
push
iret
push
push
cmp
mov
out
mov
pxor
call
cmpsl
inc
aad
fmuls
pop
dec
pop
xlat
sbb
test
divl
sub
nop
imul
mov
pop
add
cmc
stc
inc
push
push
stos
movsb
xor
dec
pop
stos
out
push
mov
imul
std
testb
push
cmp
sub
scas
adc
mov
mov
mov
out
mov
outsb
shll
iret
jnp
and
inc
das
ja
je
mov
out
or
iret
xchg
test
or
mov
lds
mov
gs
fwait
push
out
xchg
lds
jmp
mov
ss
aas
stc
mov
add
mov
imul
or
out
mov
xor
je
cmpsl
and
out
cmc
addr16
stc
pop
xchg
push
rclb
push
or
cmpsl
jg
mov
cwtl
stos
out
test
jnp
scas
xchg
mov
cwtl
or
push
mov
outsl
daa
test
mov
cmpsb
fs
sbb
or
das
repnz
cwtl
cmp
push
push
fistpll
jnp
push
lods
add
sbb
insb
inc
in
mov
rolb
add
in
pop
or
jbe
push
lds
mov
push
jae
mov
movsl
out
ja
cmc
psubsw
sahf
inc
daa
fists
sbb
clc
out
pop
addr16
in
aaa
clc
imul
sub
pop
add
lea
leave
or
push
lret
add
pusha
addr16
lock
mov
mov
lret
dec
orb
push
push
fidivs
mov
jle
push
or
sub
and
pop
sub
jle
sub
mov
sti
rol
addl
add
fistps
aad
jle
scas
rclb
mov
movsl
scas
jp
push
mov
repnz
mov
jne
inc
inc
dec
pop
adc
loopne
sub
addl
lods
add
in
lret
push
pop
push
cmc
std
divb
jne
loope
jne
lds
in
idiv
js
mov
xor
sti
cmp
and
adcb
or
fdivp
adc
pop
repz
inc
add
cli
out
sarl
out
ret
fsubl
mov
divl
inc
jl
mov
sahf
mov
imulb
inc
pop
sbb
add
jl
jno
stc
test
pop
repz
in
outsb
test
and
insb
sarb
xchg
scas
cmp
push
lahf
cs
dec
pop
push
xchg
or
mov
scas
lret
js
pop
test
mov
adc
cs
aaa
jecxz
cmp
outsl
jo
les
ja
test
add
xchg
loopne
fs
ja
lds
idivl
dec
fnstsw
test
pop
and
adc
push
fimull
inc
xor
xlat
dec
sub
shrl
movsb
shll
dec
inc
adc
push
cmp
mulb
xor
pop
div
out
fistl
insl
dec
or
stos
xor
ds
pop
push
test
jp
testl
std
fistpll
popa
in
pop
out
faddl
int
ljmp
dec
rcll
jge
inc
mov
popa
test
loope
mov
rolb
inc
and
and
and
inc
or
adc
test
ret
popa
stc
xlat
rol
insb
insb
pop
lock
or
adc
ja
push
fdivl
jbe
aaa
mov
or
out
enter
fnstenv
push
adcl
imul
imul
mov
faddl
cmpsb
int
mov
pop
repz
jbe
mov
hlt
pop
aam
dec
out
adc
loopne
in
lods
cmp
mov
mov
sbb
and
int
lahf
aad
aaa
pop
shll
test
stos
adc
cmpsb
stc
lods
push
xor
adc
inc
pop
xchg
fcmovnu
sbb
cs
push
push
add
loope
mov
adc
fcom
std
xchg
pusha
out
add
and
sbb
scas
fbld
loopne
jecxz
dec
aad
sbb
in
add
arpl
popf
notb
mov
cli
popa
push
mov
test
pop
jecxz
mov
pop
mov
out
nop
pushf
loopne
fs
xchg
dec
pushf
dec
xchg
iret
cmp
push
xlat
cli
out
jns
mov
cmp
mov
aad
in
cmp
push
push
sbbb
jmp
es
divb
aad
sbb
cwtl
sbb
fistl
jo
inc
fstpt
jo
jle
mov
stc
cmp
std
pushl
daa
fistps
fwait
in
fidivrl
or
jmp
lldt
call
xchg
lods
xchg
test
mov
add
out
or
jmp
pop
push
lret
addb
out
icebp
cmp
pop
int
loope
jo
std
es
loope
add
clc
pop
idiv
out
roll
adc
stos
add
iret
popf
adc
inc
sbbb
sahf
push
jge
mov
out
xor
lahf
jae
movsw
dec
out
rcr
sbb
mov
sub
ja
push
cmp
sub
jmp
pop
jg
jmp
in
inc
sahf
adc
cmp
lods
ljmp
and
push
mov
es
and
imulb
fiadds
cs
cwtl
cmpsb
dec
shrl
addl
adc
cmc
xor
inc
jecxz
iret
cli
test
mov
mov
jbe
inc
mov
rcr
mov
push
xor
pop
add
shr
or
sbb
push
and
fbstp
jg
push
jecxz
jo
and
popf
arpl
daa
add
idivl
in
jbe
inc
imul
mov
mov
nop
fimuls
cmp
enter
and
ret
and
and
in
in
lahf
sub
scas
sti
jbe
fwait
mov
test
sbb
push
push
pop
cmpsb
lods
add
inc
sbb
aam
inc
es
popf
xor
or
push
push
rcrl
lahf
data16
mov
dec
sarb
out
and
mov
das
cs
data16
test
inc
js
xor
sbb
or
add
xchg
fwait
sbb
mov
stos
pop
mov
movl
daa
in
inc
cld
inc
adc
sub
inc
push
cmpsl
fisubs
in
cmpb
inc
mov
push
subl
xchg
mov
iret
cmc
xchg
test
insl
push
mov
jl
pop
aad
push
ljmp
jg
fs
fs
sti
cmp
std
push
adc
dec
mov
lret
scas
cmc
rol
push
rcr
or
mov
hlt
jecxz
mov
les
les
ror
imul
lods
pop
adc
inc
mov
push
out
mov
inc
out
jge
rcl
xor
and
aad
into
push
inc
pusha
xchg
and
ss
xorb
dec
sub
scas
loop
pop
notb
ficoms
inc
push
enter
dec
rolb
repz
insl
inc
sar
xchg
fs
xchg
inc
ja
ret
mull
dec
testl
mov
or
adc
push
xchg
scas
or
fldz
push
sbb
les
xor
out
jg
jnp
fs
cs
pop
scas
mov
fnstcw
inc
adc
aaa
dec
fwait
add
out
popf
xchg
xchg
jge
in
cmp
or
push
xchg
ret
pop
dec
sbb
mov
mov
in
add
push
cs
ss
inc
cmpsl
dec
test
mov
rcl
out
adc
or
jge
ja
clc
out
icebp
adc
stos
outsb
lods
xchg
adc
orb
sbb
rcrb
imul
lods
xlat
mov
fimuls
lea
adc
jg
insb
sahf
cmp
stc
jmp
imul
adc
arpl
lret
mov
inc
add
inc
rorl
mov
mov
outsl
daa
test
icebp
pop
nop
lea
shrb
repz
jo
mov
mov
jo
cmp
pop
xor
xchg
aaa
mov
insl
int
add
jecxz
pop
mov
cmpsl
hlt
scas
sahf
pop
ret
divps
cmpsl
xchg
pop
jo
adc
iret
inc
dec
push
cs
mov
insl
mov
imul
mov
jge
das
insl
xchg
jecxz
mov
nop
testb
ss
mov
jmp
add
xorl
sar
jl
mov
cmp
out
mov
testl
xor
scas
sub
xchg
popl
mov
jb
mov
jg
iret
sbb
jmp
dec
mov
or
mov
xchg
scas
add
popa
xor
bound
push
icebp
outsl
push
pop
fldenv
push
cld
int
pop
xor
es
sbb
lret
push
imulb
or
jl
xorb
xlat
sub
jb
imull
les
jnp
mov
or
cli
into
mov
push
fldt
fcmove
mov
loopne
insl
mov
stos
xlat
out
lahf
shlb
call
cs
scas
insb
lahf
jl
xorl
mov
lds
xor
mov
test
xor
inc
movsl
outsb
mov
loopne
stos
mov
cmc
mov
mov
ret
movl
jle
in
movl
push
jecxz
insl
xchg
jecxz
insl
mov
push
outsb
or
in
fs
and
loope
insl
out
js
idivb
xor
mov
andb
lds
push
pop
movsl
inc
aas
inc
sarl
push
pop
lret
test
pop
fwait
jne
and
mov
mov
out
dec
jne
push
xchg
pop
pop
mov
mov
jo
xor
jmp
or
std
mull
call
or
pop
push
scas
stc
jns
inc
xchg
pop
inc
xchg
fcoml
xchg
push
movsl
jl
jb
xchg
xchg
sub
xchg
and
fdivs
inc
xchg
or
clc
scas
sarl
cmpsl
pop
fs
test
out
push
sbb
pop
daa
aad
shrl
fildl
sarl
mov
inc
das
sbb
jmp
and
rorl
push
andb
cmpsb
sub
out
xor
nop
clc
push
out
fs
jns
jl
pop
xor
iret
xchg
pop
adc
xlat
xlat
push
mov
inc
fidivrl
std
jb
mov
sbb
rolb
lret
mov
xor
jbe
lock
mov
cli
mov
jl
addr16
std
fisubl
push
pop
pop
js
sbbl
ss
insb
cltd
mov
jbe
repz
out
dec
jg
outsl
pop
popl
inc
call
jmp
sbb
or
push
add
sub
int
dec
xor
fistl
add
xchg
ss
pop
jne
out
lds
push
jns
inc
jns
xchg
add
pop
fidivrs
dec
rorb
and
jge
pop
add
xchg
scas
push
xchg
popa
dec
enter
outsl
pop
das
xlat
xchg
or
mov
mov
sub
jmp
orl
roll
sub
into
xchg
jg
repz
cs
lock
hlt
cs
lds
int3
jge
aad
dec
dec
faddp
push
sti
xor
cmp
fstl
mov
sub
in
scas
hlt
movsl
xlat
ds
pusha
dec
pusha
adc
pop
and
push
stos
sarl
jg
xchg
outsb
cmpsb
jns
mov
scas
dec
out
in
pop
jno
push
sbb
dec
and
sub
out
movsl
das
adc
mov
into
mov
loopne
out
jns
adc
push
jno
fucomp
scas
mov
into
or
pop
mov
jecxz
xchg
push
pop
mov
cmp
test
fists
lods
clc
out
mov
ja
mov
add
mov
cmc
mov
sbb
cmp
mov
and
mov
sbb
pop
jb
dec
xchg
popf
or
popa
shlb
mov
mov
scas
imul
pop
xchg
les
pop
xchg
pushf
lods
leave
cs
xor
jne
rcl
movsb
cs
push
adc
sub
stos
push
mov
out
add
mov
movsb
pop
fisubrs
jecxz
loopne
sti
lods
mov
jecxz
xor
cmpsl
testl
ljmp
pusha
mov
jle
adc
jecxz
in
pop
cmp
imul
inc
imulb
mov
pop
xor
fwait
dec
call
xor
jmp
pop
das
mov
mov
push
pop
aad
addl
xlat
scas
shlb
inc
fbld
pushf
scas
push
jle
into
pop
roll
pop
mov
mov
add
es
mov
ds
shll
adc
leave
jne
mov
gs
xlat
es
adc
mov
in
xlat
pop
dec
pop
insl
gs
out
mov
cmc
adc
inc
inc
or
push
add
or
imul
rcrl
int
push
adc
addr16
dec
push
mov
inc
out
leave
orl
jmp
stos
mov
cmp
insb
push
pop
adc
push
xor
lds
out
mov
out
js
sub
stc
xlat
mov
mov
dec
addr16
popf
mov
push
test
xlat
mov
and
ret
int
pop
cmp
incl
out
dec
sti
sbb
xchg
iret
add
sub
inc
push
into
jle
inc
out
push
mov
mov
inc
add
lods
push
sbb
mov
push
push
lahf
movsb
inc
jbe
into
adc
jnp
negl
inc
mov
jae
dec
push
dec
inc
pushf
outsb
ss
mov
sub
cs
clc
aad
jns
mov
je
int3
cmp
pop
popa
out
sahf
pop
shl
clc
jbe
lods
xorb
mov
sti
jle
and
je
jnp
mov
dec
lahf
jg
sahf
out
cs
lahf
push
mov
jmp
push
lods
push
dec
subl
nop
fldl
jg
mov
sbb
sbb
sbb
add
scas
adc
movsl
insl
cmp
cmpsl
add
movsb
adc
mov
xchg
lahf
jmp
cmpsl
mov
pop
cmc
sub
xchg
add
aaa
ret
out
imul
incl
fwait
jge
mov
stc
js
out
icebp
cmp
sar
jae
mov
data16
and
nop
mov
inc
cs
test
mov
jle
fwait
sahf
addr16
stc
clc
out
daa
fs
inc
cmpl
loopne
dec
subb
stos
mov
insb
int
add
in
jo
dec
rcl
pop
fildll
push
lds
push
test
jg
pmaxsw
pop
and
iret
lret
adcl
mov
arpl
les
sub
push
dec
in
mov
rclb
fdivl
cli
cmp
sahf
jmp
loope
out
push
addr16
pop
add
dec
cld
js
enter
cli
jne
faddp
sahf
shr
pop
xchg
cmpsl
into
inc
cmp
stos
mov
push
clc
mov
jae
mov
shrb
cwtl
inc
mov
jmp
lods
jmp
or
push
movsl
mov
aaa
shlb
mov
loope
out
push
jae
rorb
add
ror
dec
xor
pop
cmpl
fcmovnbe
or
outsb
clc
ljmp
andb
scas
jbe
xlat
inc
jb
lock
xor
lock
jge
xchg
cmp
adc
jecxz
ret
mov
mov
adc
pop
fisttps
shll
jge
jo
or
xlat
push
jmp
jmp
vandnps
lret
dec
adc
enter
fidivs
add
xchg
push
aam
push
cmpb
jo
in
out
jecxz
out
mov
cld
pop
out
jle
mov
bound
fistps
out
pop
sarl
cmp
cmc
lcall
push
mov
aaa
jecxz
jg
pop
inc
rol
ds
jl
jmp
jo
loope
dec
lock
fcoms
call
sbb
stos
dec
mov
scas
push
cmc
add
pop
stos
mov
adc
fsubr
sbb
jecxz
mov
mov
mov
push
das
push
std
add
mov
arpl
ret
movsb
adc
push
test
je
jns
test
mov
mov
mov
adc
addr16
sbb
in
dec
sbbl
in
cs
decl
pop
and
movl
mov
popa
test
repnz
cs
mov
testb
xchg
xor
push
mov
fidivrl
pop
test
jmp
add
pop
shl
jmp
push
push
push
in
cli
xchg
mov
jg
mov
pop
gs
test
inc
fsubp
push
repz
mov
testl
adc
xchg
cmp
jle
adc
jmp
push
jnp
jns
xchg
inc
adc
addr16
stc
pop
adc
mov
faddp
mov
pop
cli
cmp
and
pop
cli
ret
aaa
xor
mov
clc
movsb
shrb
xor
inc
call
xlat
inc
jecxz
jg
dec
out
je
or
stc
insl
pop
pop
loop
rcl
mov
pop
fistpll
test
xchg
movsl
push
push
lret
ret
fistl
and
rorl
mov
iret
je
mov
jo
fldt
dec
sub
rcrl
push
subl
scas
shll
pop
out
pop
adc
in
cld
mov
fnstenv
pop
orl
mov
loopne
test
sbb
pop
push
dec
lss
shr
movsl
out
fstpt
mov
and
insb
or
stos
jg
icebp
jmp
out
mov
arpl
fcoml
jnp
add
test
push
mull
pop
jecxz
cmp
pop
out
cmc
decl
test
xchg
push
pop
jmp
mov
push
movsl
pop
rorl
cld
pcmpeqd
je
lea
pop
mov
jle
adc
xchg
cmpsl
mov
rolb
sbbl
mov
roll
aad
sub
adc
fs
idiv
lcall
or
mov
test
mov
shl
lret
jmp
out
hlt
mov
xchg
jbe
and
fisubl
repz
mov
test
in
fisttpl
aad
jecxz
mov
jp
push
pop
push
popf
stos
xor
cmc
lret
jmp
idivl
rcr
sahf
sahf
pop
and
dec
ficompl
mov
mov
or
pop
lahf
test
or
xchg
jno
shll
loope
hlt
xchg
inc
inc
mov
jg
ret
in
mov
mov
jg
lds
or
lods
push
faddp
testl
les
pop
lods
cld
in
inc
dec
xor
outsl
cmp
jge
cmp
roll
subb
icebp
ja
xchg
add
fbstp
sbb
out
std
pop
test
add
add
repz
push
ja
repz
mov
sti
scas
inc
fwait
inc
ss
xchg
cs
out
inc
mov
and
mov
ds
les
sub
ficoml
jmp
jecxz
lods
fwait
ret
movsl
jmp
es
daa
testb
scas
stos
add
add
sti
stc
sar
xor
xchg
and
xchg
loope
push
mov
push
fildl
adc
movsl
pusha
cwtl
jmp
into
testl
jbe
andl
stos
mul
ret
stos
xor
pop
in
out
cmpsl
fwait
push
sti
cwtl
andb
out
mov
lds
aad
and
jmp
sub
jmp
cs
add
data16
pop
popf
add
movb
into
jmp
inc
pop
jae
rol
push
jge
add
sahf
cmpsl
fidivrs
xlat
fiadds
cmp
mov
or
mov
fistpll
add
je
gs
adc
and
dec
adc
add
insb
out
fwait
or
jecxz
and
aad
or
jno
int3
dec
lret
jmp
lock
aam
test
mov
fisttpl
sti
adc
lods
stos
push
inc
sbb
stos
pop
dec
xor
cmp
or
ja
push
sar
int
jg
nop
push
fwait
adc
push
test
xor
and
stc
jge
outsb
es
ja
pop
andl
push
cmc
inc
decl
fs
dec
rolb
fldl
packsswb
pop
inc
shrl
mov
inc
dec
push
adcl
sub
out
add
sbb
sarb
mov
pop
mov
and
sbb
push
adc
inc
sub
adc
jmp
out
mov
cmpsl
cli
loope
sbb
hlt
ret
adc
push
mov
pop
and
insl
les
movsl
popf
sarb
addr16
pop
inc
fiaddl
repnz
in
in
push
mov
xor
dec
or
lds
addl
ljmp
adc
in
sti
mov
stos
mov
xchg
sbb
jbe
lahf
in
scas
cli
mov
and
negb
test
push
jo
push
sbb
add
fisubl
jg
cmpsl
pop
mov
xchg
lahf
loop
mov
mov
in
ja
fisttps
cmp
jmp
add
aad
cltd
pop
les
pop
mov
ret
loope
imul
jnp
cli
xlat
rclb
push
jnp
les
jbe
adc
inc
sarl
mov
nop
enter
incb
shl
aad
pop
add
imul
stc
cmc
ds
xchg
lahf
push
add
negb
es
jnp
mov
outsb
jno
out
inc
arpl
push
cmpsl
out
test
imul
xlat
and
xchg
sbb
push
dec
gs
adc
mov
aas
call
push
daa
out
std
cmp
dec
sahf
out
mov
jle
pop
pop
dec
xchg
into
mov
and
cli
cmpsl
inc
jp
insl
and
andl
jno,pn
mov
ja
cmpsl
mov
and
aad
outsl
test
scas
cmp
sub
daa
test
jle
loop
in
cmpsl
push
cmp
pop
inc
lods
repz
inc
pop
cmp
std
jo
roll
jns
jmp
adc
pushf
cmpsb
add
scas
cs
lcall
cli
out
ss
fsubr
mov
jl
scas
mov
lods
cmp
or
jmp
movsl
repnz
shll
fs
leave
mov
inc
fisttps
push
scas
and
push
xchg
xchg
addr16
mov
stc
out
pusha
fcoms
mov
mov
lods
pop
hlt
sti
pusha
arpl
mov
mov
aam
or
xor
es
mov
mov
aaa
ret
xchg
popa
push
das
mov
lods
pop
inc
cmpsb
push
pushf
shlb
jmp
rcrb
pushf
mov
std
popa
aaa
jmp
inc
add
movsb
fstp
je
in
mov
test
addl
mov
mov
arpl
fwait
aaa
mov
sbb
sahf
test
iret
jmp
cld
and
push
xor
out
push
pop
ret
std
inc
aas
cmc
cmpsl
mov
adc
mov
sahf
dec
popf
and
movl
rcrl
int
les
outsl
push
inc
cmpsl
lret
push
shrb
test
push
push
repz
xchg
fs
data16
daa
aaa
sub
mov
mov
subl
adc
cmpsl
jo
mov
lds
mov
int3
pop
mov
gs
lahf
jmp
xchg
inc
rolb
sbb
xlat
lods
cmp
sub
mov
int3
leave
std
mov
mov
lahf
fs
shrb
stos
mov
pop
outsl
bound
cwtl
cmpl
nop
in
jl
outsl
sarl
jo
xchg
dec
pop
aam
inc
aad
xor
sarb
push
data16
popw
repz
cmpsl
cmc
sti
push
lahf
mov
lret
add
lret
lcall
ss
cs
mov
addr16
cs
and
repz
addr16
sbb
test
imul
or
cmp
cmp
addr16
lods
jns
push
mov
xchg
push
add
fcomps
pop
data16
mov
inc
and
cltd
in
cli
add
fwait
cmp
int
inc
dec
cmp
pushl
sarb
scas
pop
and
push
outsl
std
push
stos
fucom
je
sub
or
shr
cs
repnz
hlt
icebp
or
ffree
jnp
lahf
dec
and
push
inc
js
repz
and
imul
in
outsl
inc
inc
or
pop
jae
xchg
mov
dec
add
sbb
mov
push
cmp
mov
sarb
jmp
movl
in
push
push
dec
aas
add
fsubp
enter
in
fs
jg
ret
and
pop
pop
stos
js
mov
out
outsl
les
incl
in
ss
cmpsb
or
xorl
cmp
cltd
jno
adc
fistpll
out
out
cmp
xchg
xor
mov
jno
sbb
cmp
ret
inc
fst
and
rcrb
sbb
cmp
add
and
add
mov
mov
ret
cltd
test
roll
in
or
adc
push
mov
faddl
stos
mov
jbe
in
mov
leave
mov
inc
leave
enter
popa
aad
jecxz
mov
aad
dec
or
cmpsl
jo
scas
mov
adc
pop
sbb
fs
ss
xchg
cltd
cmpsl
incl
push
pusha
sub
xor
cmp
cmp
frstor
inc
xchg
lods
iret
dec
cli
mov
push
xchg
jmp
push
xchg
test
dec
js
int
sub
mov
cmc
add
das
push
add
js
inc
mov
jmp
mov
jo
insl
pusha
outsl
mov
inc
sahf
push
test
and
xor
mov
aad
sub
sbb
sbb
xchg
add
stc
out
je
lahf
mov
rcrb
pop
addr16
hlt
das
push
leave
mul
cmp
xchg
inc
sbb
pop
sbb
loop
or
inc
push
add
jge
std
test
leave
std
cmp
mov
in
pop
xlat
ror
inc
fwait
int
loope
adc
js
nop
cmc
repz
fdivrl
les
sahf
adcl
repz
adc
pop
fst
into
fldl
mov
pop
adc
jbe
sub
sahf
push
jp
in
and
stos
pop
repnz
fwait
xchg
sbb
orl
jbe
leave
sbb
inc
mov
pusha
cmpb
jo
add
push
addr16
mov
cmpsb
cltd
push
cmp
sbb
out
push
fs
cs
pop
pop
repnz
push
sub
test
xchg
mov
adc
imul
mov
loope
mov
xchg
int
test
cmp
shl
in
inc
into
ja
in
mov
addb
fsubp
int
inc
sbb
stos
faddl
dec
adc
divl
out
mov
and
mov
xchg
lock
out
or
mov
adc
dec
cli
lods
push
xchg
and
lods
lods
push
sub
pop
out
pusha
or
daa
lds
orb
and
sub
fidivs
pop
cmp
aam
sbb
imul
hlt
test
jae
mov
testb
jb
or
mov
mov
cmpsb
lahf
adc
dec
jle
xchg
dec
cmc
xor
push
sbb
push
imul
jo
shlb
jne
cmp
fcmovnb
aaa
mov
mov
out
push
dec
pop
push
adc
out
adc
rcr
test
dec
adc
add
lahf
jg
jbe
icebp
mov
mov
push
jo
das
push
sahf
mov
and
ret
sahf
aaa
add
icebp
xchg
push
inc
adc
ret
fs
ljmp
add
mov
lahf
test
mov
out
repz
aad
fldl
jmp
sub
sbb
xchg
inc
pusha
jl
std
pop
jno
arpl
data16
xor
insl
adc
outsb
inc
das
xchg
mov
mov
imul
pusha
cmpsl
lds
in
insb
lds
jg
pop
mov
je
test
mov
fsubl
mov
out
dec
call
pop
mov
fcmovb
add
push
xchg
adc
mov
and
addl
ret
into
and
rcl
aaa
inc
aaa
and
xor
adc
jnp
pop
test
fisubl
lahf
nop
popa
scas
xlat
shlb
out
shl
cmp
out
mov
ds
hlt
addb
fistps
stos
sbb
testl
test
aam
dec
outsl
std
mov
lcall
ret
fcomps
xorb
fwait
xchg
cmp
fcomp
out
dec
stos
into
sti
imul
inc
jmp
xchg
out
pop
int3
xor
es
fdiv
lcall
fldenv
repnz
lret
jp
out
loope
mov
xor
push
xor
dec
pop
test
dec
push
pop
lea
rcrb
lcall
push
fs
hlt
jecxz
xchg
cmpsl
out
and
out
ret
mov
pop
jecxz
xchg
loope
mov
pop
push
popa
sbb
fxtract
add
aad
push
or
lds
ret
cmpxchg
adc
cmp
test
sbb
ficomps
xor
roll
popl
test
stos
pop
xor
lret
pop
out
cmp
stos
and
jb
movsl
add
iret
adc
mov
notb
daa
xlat
cmp
movsb
jmp
loopne
mov
andb
outsl
mov
imulb
fbld
incb
jnp
add
lahf
sbb
jns
daa
scas
stc
clc
pop
decb
add
aaa
loope
lret
es
cltd
xlat
mov
mov
jg
push
cmp
xor
outsb
push
movhps
pop
jb
ret
mov
arpl
mov
mov
ljmp
push
or
fisubl
fs
jnp
or
pop
in
dec
repnz
dec
fldt
sbb
add
fbld
sub
mov
and
cmpsl
inc
cmp
inc
hlt
out
insb
leave
stc
mov
or
mov
push
inc
xchg
stos
push
or
mov
push
outsb
jno
push
jge
insb
xchg
mov
scas
add
xchg
frstor
lretw
gs
pop
sbb
xchg
fisttpl
xchg
je
pushf
cmp
dec
ds
in
push
mov
jecxz
pop
shl
divl
test
add
inc
jle
or
xchg
jne
shll
cmpsl
dec
lret
insb
int3
gs
das
fsubl
pop
movsb
stos
stos
add
mov
out
pop
hlt
jmp
aam
repz
arpl
hlt
dec
inc
pusha
cmpsb
mov
xchg
mov
rolb
jno
mov
leave
iret
cmp
mov
or
test
pop
pop
xlat
jne
add
ljmp
adcl
into
ja
cmp
das
or
jb
mov
cmpsl
and
imul
scas
inc
rcr
outsl
jmp
xor
testb
test
adc
shlb
sahf
mov
inc
mov
sti
adc
jecxz
rclb
and
faddl
adc
mov
pop
ret
lock
jle
fistpll
arpl
jle
test
sbb
int
ret
xchg
shrb
jmp
pop
push
les
xchg
adc
lods
xor
inc
inc
out
jo
mov
js
push
pop
dec
js
enter
sub
xchg
dec
sbb
int3
or
mov
aaa
mov
lds
jmp
out
jecxz
jge
aas
xor
sub
pusha
movb
notb
xchg
outsb
xchg
scas
test
std
out
mov
dec
inc
xor
stos
sahf
push
pop
jmp
enter
xchg
ljmp
stc
mov
sbb
jge
rcrb
or
jmp
jmp
xchg
ret
scas
or
xor
out
sub
mov
cmp
cmp
pop
inc
mov
sti
out
stc
fs
xchg
ret
jl
mov
out
int
jns
test
sbb
push
or
addr16
orl
and
in
out
and
mull
pop
call
imul
add
lahf
popl
sti
roll
pop
inc
xchg
lock
jp
imul
vunpckhps
pusha
jmp
movsl
pop
mov
inc
xchg
addl
daa
in
jg
iret
scas
push
push
shrb
out
outsl
insl
test
js
mov
ds
push
mov
test
outsl
inc
in
dec
mov
inc
jne
or
lret
push
aaa
mov
sub
xlat
mov
xchg
jmp
add
sub
sub
cmc
mov
out
out
fsincos
push
lret
mov
std
outsl
call
test
fwait
mov
mov
xchg
iret
loop
in
out
xor
seto
sub
movd
bound
std
pop
or
stos
mov
hlt
xor
inc
push
push
in
test
mov
sar
out
mov
fidivl
ljmp
xor
testb
mov
lcall
lds
rcrb
hlt
cs
andl
xchg
arpl
lods
das
nop
loopne
mov
xchg
pop
xor
sahf
int
aad
xor
inc
push
js
push
xor
mov
push
inc
mov
inc
push
xchg
xor
addr16
jecxz
arpl
lahf
daa
sbb
add
xchg
fcompp
dec
adc
dec
sub
mov
inc
jb
sbb
mov
scas
test
inc
in
insb
inc
ds
mov
push
xor
cmp
mov
mov
stc
jecxz
add
int
jns
and
inc
pop
jecxz
popf
shl
inc
jo
sahf
pop
call
cmp
inc
test
pop
add
fisubl
in
jae
jg
popa
repz
mov
icebp
pop
lds
dec
add
add
xor
sbb
dec
aam
add
loopne
cmp
fwait
mulb
jg
icebp
push
cmp
jae
mov
pop
pop
dec
mov
out
and
sbb
ss
clc
test
icebp
mov
push
es
test
sub
mov
cmp
adc
add
dec
mov
int3
jmp
mov
push
out
fs
inc
test
mov
sbb
out
out
clc
mov
sub
fbstp
xchg
xchg
sbb
das
xlat
leave
mov
mov
and
movsb
mov
filds
aam
sahf
popl
inc
mov
inc
lods
adc
xchg
sti
sbb
xor
into
pop
mov
jne
ja
add
in
cld
mov
inc
inc
or
mov
lods
into
xlat
and
fdivrl
lods
outsl
mov
dec
iret
sti
cmp
xchg
sbb
jle
push
ds
cmpsl
data16
imul
sahf
mov
aam
fs
jmp
pop
insl
inc
jb
popf
fisttps
outsb
adc
inc
dec
js
rclb
cld
xchg
jns
cmpsl
mov
scas
add
push
jmp
xlat
pushl
addr16
test
mov
in
outsl
stc
out
outsl
loopne
outsl
out
adc
mov
jge
outsl
stos
lds
popa
xchg
or
out
ficoms
testl
loop
mov
sub
adc
cmpsb
mov
lock
jne
mov
shr
cmp
mov
das
mov
mov
inc
nop
add
mov
cmpsb
sahf
pop
test
sub
ja
jmp
das
xor
ja
mov
mov
inc
fimull
mov
jo
stos
aas
pushf
jno
jmp
popa
fiadds
mov
sbb
cmp
pop
xlat
fs
pop
aas
add
inc
cs
js
xchg
push
or
ret
lahf
pop
repz
push
aad
pop
xchg
ljmp
iret
ffree
xor
ds
xchg
cld
jno
pushl
add
push
xchg
in
cmp
rcr
jl
inc
inc
xchg
sbb
fstl
mov
adc
pop
mov
mov
aaa
es
ljmp
xchg
xchg
mov
mov
stos
repnz
cli
cmpsl
leave
insl
inc
out
test
cmp
pop
push
sbb
jne
add
pop
lods
mov
and
xchg
les
sub
inc
mov
lahf
inc
ds
out
and
loopne
jl
xlat
iret
inc
lret
lods
sbb
in
mov
fucomi
lods
fistps
fwait
rcl
sbb
add
inc
adc
mov
repz
daa
and
mov
cld
xor
cmp
in
pop
xchg
push
add
outsl
or
mov
push
jecxz
je
push
rdtsc
mov
and
pusha
insl
xor
inc
lods
lret
pop
pop
xlat
push
test
sbb
add
pop
xchg
push
sub
dec
cmp
out
mov
xlat
out
add
pop
mov
fs
adc
inc
jmp
inc
push
pop
roll
mov
cmc
push
fs
push
add
add
daa
sahf
repz
push
out
cmpsl
push
push
pop
jp
imul
lahf
test
frstor
dec
js
fdivrl
nop
out
push
pop
cmp
xchg
jp
jg
xor
fisubs
imull
jnp
je
test
lret
inc
mov
or
test
fs
sbb
and
inc
and
jge
xchg
subps
mov
fisubrl
jg
dec
jo
ja
cmpsl
sbb
sbb
subb
and
mov
cmc
das
cmpsl
sar
xchg
fwait
push
jg
jns
in
dec
divb
shlb
int
addr16
stos
in
roll
rorb
jns
aad
rcrl
int
in
push
incb
frstor
fs
les
lcall
jg
mov
mov
lods
clc
cwtl
push
pop
aad
loop
push
xchg
test
inc
and
add
arpl
rcr
aaa
test
in
test
jmp
cmc
add
loop
testb
aaa
addr16
jecxz
dec
gs
aad
and
adc
push
push
cltd
loop
mov
inc
sub
push
aad
and
mov
sbb
sub
inc
andl
les
lcall
jg
mov
push
rcll
cvttps2pi
bound
aad
loop
push
lea
mov
andl
adc
xchg
jbe
mov
xchg
scas
sub
push
jmp
cmc
arpl
jne
mov
inc
scas
test
test
xor
shrb
test
add
test
outsb
or
cltd
daa
inc
push
loopne
cmp
outsb
rorb
inc
pop
inc
iret
xor
jge
inc
jecxz
addr16
jp
mov
loope
pop
dec
inc
js
out
mov
shll
js
sbb
push
ss
and
xchg
aaa
mov
in
sub
pop
insb
jecxz
rclb
mov
and
mov
inc
pop
adc
adc
and
cmc
adc
mov
xchg
ss
sbb
into
xchg
mov
mov
mov
jge
xchg
push
pop
outsl
xorb
add
fldt
mov
add
add
and
jecxz
into
mov
iret
addl
mov
and
popf
addr16
cmc
jle
es
fistl
ret
addr16
in
inc
ja
push
and
xchg
call
dec
adc
fisttpl
mov
idiv
aaa
lea
iret
enter
dec
mov
inc
mov
xchg
add
inc
ret
sbb
inc
test
dec
icebp
mov
mov
icebp
movsl
xchg
cmpl
inc
inc
add
ljmp
and
jns
sti
lock
je
mov
clc
loop
cmpsl
inc
jns
jp
test
negl
add
mov
and
jmp
lcall
push
aas
jae
cmp
das
pop
inc
xchg
mov
sti
push
rorw
xchg
add
mov
add
enter
fs
setle
icebp
pop
roll
pop
das
data16
xchg
mov
sub
insl
mov
or
and
mov
inc
mov
rcl
jne
jecxz
popf
inc
das
inc
outsb
jno
xlat
mov
mov
sbb
sub
xchg
cmp
dec
out
scas
pop
fs
cmp
fs
mov
mov
in
sbb
push
adc
cli
push
fs
adc
sub
push
and
shrb
mulb
jp
mov
adc
inc
iret
into
inc
xor
jmp
rcrl
xor
cmp
imulb
shll
jge
xorps
xchg
sar
cmpsl
pop
push
ret
cmp
xlat
jo
inc
scas
pop
adcb
mov
int
loop
adc
push
mov
out
cmp
sti
adc
pop
aas
out
xchg
das
sti
loope
outsl
sti
loop
scas
or
dec
add
inc
aam
cmpsl
sti
loope
sub
popf
sub
sub
int
push
jmp
pushf
mov
data16
jecxz
push
dec
adc
out
repnz
imul
sub
and
pop
fstp
dec
pop
mov
mov
mov
shl
pop
lods
and
or
lret
insl
sbb
inc
adc
mov
aaa
xchg
cmp
sarb
cli
xchg
call
mov
inc
mov
xor
adc
stos
pop
loope
dec
jne
xchg
xlat
sarb
mov
push
loopne,pn
imul
push
idivl
out
in
mov
push
pop
test
or
mov
cmp
or
aas
push
fcmovnbe
out
inc
xlat
dec
pop
inc
or
test
xor
xchg
loopne
adc
fidivs
or
push
dec
jb
inc
fs
ds
and
sti
and
and
lods
and
xor
or
add
ljmp
ret
pop
call
sbb
repz
shrb
lcall
pop
ret
aas
inc
idivb
mov
or
outsl
push
dec
adc
in
loope
push
scas
and
jbe
nop
repz
push
jnp
xor
in
inc
jmp
lods
add
xchg
dec
fwait
insb
outsl
rolb
fisubrs
aad
cmp
dec
test
pop
xlat
stc
add
test
rcrb
sbb
test
pop
loopne
out
dec
in
jbe
pop
xor
inc
mov
imul
sahf
movsl
movsl
jecxz
push
adc
xchg
cmpsl
sub
cltd
out
xor
jg
aad
stos
stos
jae
jl
adc
mov
imul
inc
nop
and
outsl
inc
mov
pop
push
dec
sub
test
andl
jne
mov
dec
add
sahf
pop
jno
push
test
mov
rcrb
inc
es
jmp
jecxz
aad
jns
mov
xchg
scas
es
inc
or
stos
jmp
mov
out
out
cmc
or
incb
xor
add
sub
xchg
add
jecxz
xchg
mov
pop
loopne
testb
inc
iret
and
ret
test
jmp
and
ficoml
pusha
inc
push
out
inc
test
pop
cmc
loopne
mov
or
test
dec
cmpl
mov
sub
imul
aad
xchg
leave
cmp
mov
sti
sbb
out
out
and
aas
mov
xchg
jno
in
dec
int
in
nop
sahf
test
push
gs
adc
pop
jg
movsb
clc
ss
es
sahf
into
push
ja
dec
mov
mov
lds
dec
lahf
fdivl
data16
nop
mov
or
fildll
dec
push
or
repz
and
out
orb
adc
imul
push
mov
xchg
int3
shl
xchg
mov
add
in
insb
pushf
add
stos
lds
mov
push
pop
fsubp
jne
jnp
push
mov
fisubrl
mov
pop
mov
leave
shlb
ficoms
mov
cmpsl
add
loop
push
sub
cmp
and
loop
pop
cs
out
mov
lahf
insl
stos
adc
sub
ds
mov
xor
cmp
sbb
jg
push
mov
inc
test
iret
bts
cmp
push
rolb
xchg
mov
add
pop
xchg
stos
iret
push
jne
clc
pop
xchg
jg
lahf
jnp
fwait
shrl
addr16
mov
rcrb
sbb
sbb
dec
outsb
mov
movsl
xchg
ss
and
cs
xor
or
sbb
or
xor
scas
xchg
in
lods
clts
aad
inc
out
add
inc
adc
push
lds
dec
push
cmc
push
jmp
enter
inc
mov
or
push
pusha
dec
shl
sbb
xorb
data16
jne
ljmp
cmpsb
je
sub
neg
cmc
cmpsb
dec
fcmovb
insb
mov
mov
cmpsl
ror
fbstp
jp
add
ret
xchg
inc
insb
sbbb
pop
mov
pop
fisubrl
shl
jbe
inc
jb
pop
push
mov
jbe
insb
xchg
sti
push
inc
in
mov
jp
cmp
insb
lea
and
in
inc
mov
or
in
iret
cmp
out
imul
add
test
cmpsl
and
and
add
jmp
addr16
pop
xor
pop
gs
fmul
addl
mov
test
pop
std
xor
mov
push
int
in
or
out
sbb
and
test
iret
push
mov
into
xchg
xchg
ffreep
aas
mov
enter
lcall
jl
rcrb
mov
add
scas
fadd
sbb
push
insb
push
push
add
sbb
add
pop
push
adc
dec
sub
jbe
insl
scas
aam
fld
in
pop
fisubl
dec
iret
push
mov
dec
popf
and
add
pop
mov
xchg
shl
and
outsl
std
imul
dec
jle
orb
dec
mov
cwtl
jg
test
scas
scas
jbe
sbb
mov
movsb
pop
icebp
repz
jae
push
fildll
into
ds
out
cmpsb
clc
cmp
addr16
dec
rorb
ss
fmull
aad
test
or
mov
mov
outsl
jecxz
mov
lahf
popa
ret
adc
mov
inc
dec
dec
popa
add
aad
andb
fadds
movsb
mov
les
test
sbb
xor
outsl
scas
and
dec
lds
pushf
aam
mov
bound
movsb
movsb
xchg
popa
repnz
jae
dec
aad
pop
pop
push
pop
negb
xchg
shlb
push
ds
and
fs
mov
fsqrt
cmp
out
jecxz
scas
addl
test
push
in
dec
mov
out
sbb
out
loope
sub
ret
sarb
stc
or
sub
dec
pop
mov
insl
jl
outsl
cwtl
inc
mov
pop
push
cmp
dec
fdivrs
mov
ds
rorl
inc
jbe
lods
sahf
mov
jg
pop
mov
pop
and
mov
add
sbb
sti
dec
stc
xchg
mov
mov
ja
pop
ret
cli
iret
push
icebp
fidivs
dec
stc
movsb
idivb
or
cmpsb
jne
sbb
pop
int3
loopne
loope
cmpsb
jno
fiadds
addr16
cmpsb
popf
orl
fistl
outsb
stos
iret
cli
out
bound
test
dec
inc
mov
add
pop
xchg
aad
mov
fs
out
xchg
or
xchg
pop
cwtl
mov
call
mov
js
fld
into
xor
cs
fldcw
inc
testb
aad
movl
shll
aaa
cmp
scas
or
inc
mov
mov
inc
lret
leave
jge
ss
das
test
out
ret
mov
outsb
add
hlt
mov
cmpsl
mov
lds
inc
dec
mov
jo
push
jge
out
shrl
scas
push
lahf
rorl
cmpsl
xchg
dec
mov
stc
fyl2x
and
jge
fcoml
and
xchg
ret
std
push
jns
or
sbb
adc
add
loop
jle
loop
sbb
hlt
and
lock
rolb
mov
add
sarb
out
scas
outsb
mov
mov
repnz
pop
dec
outsl
cli
test
imulb
push
fdivs
subl
inc
out
xor
out
pop
push
arpl
and
fwait
push
sbb
jno
daa
sbb
rcrl
loop
xlat
inc
dec
test
push
mov
int
inc
aas
cmp
lea
popa
or
dec
and
sar
idivb
lock
and
mov
pop
adc
sub
loop
ss
pop
mov
adc
dec
out
test
jne
roll
es
push
jns
in
incl
xlat
adc
add
bound
in
in
mov
jecxz
and
inc
shr
gs
ret
sub
les
gs
mov
testl
cld
adc
adc
cmovb
shll
jg
lock
adc
icebp
enter
jno
cmpsb
xor
add
adc
xchg
mov
div
stos
mov
push
aam
sti
and
mov
or
or
dec
stc
add
inc
lods
loop
aad
add
ljmp
in
dec
ja
vmaxss
jge
fcmovnb
mov
idivb
cmc
inc
addr16
daa
inc
lods
xlat
outsb
idivb
mov
addr16
dec
xchg
mov
gs
pop
jne
ficomps
or
out
repnz
enter
popw
jbe
mov
rorb
movl
push
mov
pop
fnstsw
or
add
fwait
mov
das
test
inc
out
xchg
loope
xorb
outsl
sub
ja
sub
fs
fcomp
mov
repnz
les
loope
mov
decl
jbe
fstpl
sbb
jo
jb
add
pop
mov
not
mov
jno
fadd
adc
sub
add
push
jg
xchg
mov
popa
add
ja
jae
sub
sbb
bound
dec
loopne
fldenv
andl
out
test
mov
pop
idivl
pop
addl
sbb
jb
jl
jl
mov
fiaddl
xchg
or
pop
push
lods
or
test
aas
sbb
mov
ret
push
fucom
cmovnp
test
lods
iret
rorl
cmp
es
insl
or
mov
aad
pop
test
mov
xchg
fwait
mov
aas
addr16
xchg
dec
cs
testb
sub
fwait
mov
xchg
dec
push
inc
sbb
mov
jb,pn
por
dec
das
cmpsl
xchg
xchg
add
popa
jg
inc
lahf
jmp
pop
pushf
lahf
mov
sub
inc
out
setnp
mov
aas
out
test
or
inc
testl
repnz
xchg
jo
sbb
std
add
adc
roll
and
psubw
mov
mov
mov
lods
mov
and
addr16
fwait
daa
add
pop
pusha
cmp
cmpsl
inc
add
ja
icebp
es
push
popf
adc
xchg
xor
mov
sti
push
push
out
mov
xor
cs
pop
movsl
pop
pop
insb
mov
sub
ja
stos
mov
jp
movsl
mul
dec
nop
jmp
pop
dec
repz
test
fwait
mov
mov
inc
mov
movsb
loope
fst
jecxz
cmp
or
insl
movl
mov
cmpsl
mov
outsl
jne
scas
pop
jle
add
adc
pusha
pop
jle
sub
stc
sub
push
mov
inc
lods
adc
imull
jns
xlat
ds
fidivrs
in
xchg
addr16
insb
add
jmp
sub
in
adc
test
fs
out
addr16
xor
add
aam
std
mov
dec
xchg
fbld
mov
push
stc
arpl
pop
mov
lds
push
mov
pop
xor
out
pop
arpl
test
pop
pop
add
jge
xchg
popf
adc
inc
aas
insb
ficomps
add
loopne
xchg
stos
add
int
addr16
or
inc
gs
rcl
push
sar
int3
mov
jecxz
cmp
gs
jno
xlat
outsl
in
stc
aas
addb
inc
xor
sahf
cli
pop
adc
jne
loop
dec
lahf
out
fcompl
int
stc
clc
cli
out
lds
and
push
insl
jge
push
loop
mov
inc
and
cmpsl
ss
jo
data16
xor
inc
addr16
in
scas
adc
pop
add
rol
mov
adc
enter
int3
test
addr16
sub
mov
inc
inc
movsl
lret
in
scas
mov
jge
lds
or
xchg
cmp
lahf
xchg
cs
lds
pushf
addr16
mov
insl
mov
pop
sahf
and
cmp
jle
cltd
dec
cmc
es
sahf
add
lds
clc
cmp
cmp
mov
xchg
or
pop
mov
test
xchg
test
push
add
aad
imul
cli
pop
inc
insb
aas
jb
cmp
js
xchg
iret
ret
jmp
inc
outsb
je
jg
cmp
stos
xor
inc
into
aad
rcr
test
data16
loope
push
push
mov
movl
lds
inc
mov
jmp
sub
pop
inc
repz
adc
mov
scas
mov
mov
xchg
xor
rcrl
and
bound
and
in
mov
in
out
xchg
lea
sbb
scas
out
mov
dec
sarb
cs
fwait
loop
inc
cmc
inc
or
dec
fs
outsb
sbb
mov
pop
lahf
int3
in
mov
into
test
fistpll
int
dec
in
stos
in
cmp
mov
popf
vmread
xchg
fs
push
adc
jae
imul
mov
testb
cld
jmp
scas
fldt
popl
insl
push
pusha
mov
in
mov
inc
sarl
test
mov
daa
pop
mov
mov
sarl
pop
mov
movsl
jb
jno
xlat
xor
mov
inc
cmp
cmp
cwtl
aaa
xchg
ja
fildl
fnstsw
and
faddl
xlat
rcl
enter
jge
adc
movl
scas
sbb
mov
push
mov
jp
xchg
imul
mov
mov
pop
add
jae
sub
dec
fwait
and
test
add
cmp
and
cmpb
aad
std
outsl
jbe
fiadds
cltd
xchg
mov
push
push
aaa
cs
cwtl
lea
repnz
test
fwait
cmc
out
mov
pop
pop
stos
and
dec
xchg
sbb
jae
fidivs
adc
mov
mov
faddp
loope
iret
bound
xor
cmp
mov
mov
jecxz
pop
stos
cmp
pop
cmp
aaa
cmpsl
xorl
lret
sbb
mov
je
adc
mov
in
cltd
jecxz
notb
lahf
xchg
lcall
hlt
adc
jmp
mov
sub
xchg
xor
jmp
dec
push
mov
mov
rcll
cmp
or
insl
popf
mov
movsl
jno
mov
repz
xor
int
add
push
lods
pop
dec
push
and
subb
std
add
shr
fisttps
sahf
sub
xorb
jecxz
filds
jg
or
aam
cmpsl
sub
or
shll
jb
loopne
aad
rol
inc
cmpsl
xchg
jecxz
sub
ret
xchg
add
out
mov
add
incb
pop
cmpsl
mov
dec
push
or
test
add
test
scas
jge
mov
rolb
movsl
jmp
lea
mov
outsl
and
jecxz
xlat
rcll
es
fisttpl
inc
add
fstpl
das
inc
js
jb
out
xlat
lea
jg
or
lds
push
gs
loope
cmc
sub
ja
jecxz
and
and
cwtl
arpl
mov
mov
scas
xchg
jmp
in
and
add
lea
jl
xchg
sub
mov
ja
add
aad
inc
cmpsl
inc
inc
cs
pop
and
add
sti
dec
inc
cmp
fistpll
add
mov
std
push
ds
sub
lods
xchg
lea
sbb
in
arpl
icebp
fs
lret
pop
cmp
divb
mov
data16
ss
add
mov
lods
xchg
and
bound
mov
movsl
inc
adc
stos
fwait
out
inc
pop
popa
rcr
fnstsw
jne
cs
xchg
pop
int
pop
mov
notb
jge
les
dec
cwtl
mov
jl
stc
rol
mov
out
rclb
nop
jl
imull
jl
shrb
xchg
and
pop
inc
outsl
hlt
fwait
xchg
in
call
hlt
jl
jecxz
rol
divb
cmpsb
hlt
xchg
lret
loop
mov
inc
and
push
into
cmp
insl
pop
jo
jmp
test
pop
les
mov
sub
jecxz
mov
sahf
ja
leave
test
mov
pop
stos
inc
pop
xchg
push
js
mov
fwait
out
push
scas
cs
mov
add
sbbb
mov
mov
ljmp
xor
test
mov
cld
sub
ja
jecxz
stos
cmc
xchg
xchg
inc
jnp
addr16
xchg
subb
cwtl
cmp
sahf
and
prefetchnta
sbb
mov
jns
fstp
mov
sti
sub
xor
rorb
ljmp
add
pop
das
add
xchg
jl
push
vpsubq
iret
leave
movsl
out
das
sti
js
pop
test
and
fmulp
popa
mov
dec
cld
sti
adc
mov
js
and
jno
cbtw
pop
jle
mov
outsb
ds
orb
mov
dec
mov
in
das
pop
sub
xlat
xor
repz
jne
adc
stos
lods
icebp
mov
mov
and
adc
orb
jno,pt
dec
pop
ds
fld
popf
out
repnz
xor
cmp
por
mov
repz
add
fsubrl
dec
lahf
sti
test
scas
fldt
sbb
jae
cmc
test
and
inc
sub
std
pop
and
push
inc
cmpsl
vpcmpeqw
xor
mov
sub
jmp
in
fidivl
fs
adc
lahf
mov
xor
push
add
mov
push
std
jle
fbstp
mov
test
mov
jecxz
xor
sbb
rcrb
je
pop
mov
cmp
mov
xchg
stc
pop
lret
icebp
adc
in
rcrl
pop
fs
fs
cmpsl
xchg
shrl
jg
xchg
incb
ret
jg
push
out
push
pop
dec
add
loop
adc
xlat
pop
adc
testb
sub
sub
jno
cli
cld
or
adc
add
outsl
leave
scas
shr
rcrb
out
xchg
add
inc
cmpb
xchg
add
or
or
cmp
dec
xchg
pop
leave
data16
bnd
inc
je
shll
fists
imul
dec
fildl
cmc
insb
outsb
stos
cmp
addr16
insl
mov
rcl
cmp
cs
inc
je
aad
push
mov
add
jae
gs
pop
ffreep
mov
stos
mov
fwait
test
mov
mov
xor
push
dec
test
testl
adc
dec
bound
imul
dec
fsts
cmp
or
clc
dec
cmpsl
movsb
inc
scas
push
rolb
cmpsb
pop
and
test
inc
cld
pop
add
pusha
in
fmull
aaa
push
mov
and
mov
xor
and
mov
mov
insb
cmpsl
ljmp
jo
or
adc
int
mov
push
addr16
out
dec
and
ret
xor
rcll
lods
push
rclb
adc
popl
cmp
in
push
les
push
stos
scas
imul
mov
sti
sbb
mov
inc
pusha
pop
mov
fwait
cmp
fwait
adc
addl
out
dec
ret
insb
iret
jg
scas
xchg
test
jmp
enter
mov
fs
mov
dec
add
dec
inc
mov
inc
out
inc
or
in
mov
jecxz
sub
es
hlt
adc
out
in
aad
dec
psrad
popf
cmpsb
inc
fimuls
jbe
pop
add
mov
jmp
push
rcrb
jl
aas
dec
insb
adc
push
or
inc
mov
adc
rolb
push
fsubrp
stc
pop
daa
mov
jb
scas
shll
add
ret
xchg
imul
mov
addw
out
adcb
icebp
mov
jns
ret
push
dec
lcall
lods
mov
pop
cmp
fdivs
jmp
push
mov
js
cmc
mov
or
cmpsl
cs
fbld
leave
inc
push
ja
or
scas
rol
lcall
vpsubb
test
insb
faddl
mov
jmp
loope
dec
mov
insb
mov
inc
cli
loope
in
jmp
cmc
mov
mov
stos
push
cmpl
inc
cmpsb
insb
int3
adc
xlat
add
push
add
orl
imul
push
mov
lods
xchg
aam
pop
jecxz
jae
test
sbb
sbb
das
je
fisubs
cmpsl
outsb
mov
gs
mov
xchg
movb
xchg
iret
dec
or
insl
test
cld
inc
loope
pop
sarb
dec
mov
int
add
pop
and
mov
inc
or
in
jmp
test
mov
inc
pop
jecxz
lods
inc
shufps
loope
lret
mov
mov
jo
xchg
ret
fstl
jb
xlat
inc
fbld
fdivr
and
pushf
fnstcw
outsb
fs
mov
iret
ljmp
inc
aam
rorb
and
jne
mov
pop
jge
pop
add
fdiv
lds
jo
jecxz
sub
aaa
cmc
iret
sbb
fwait
or
adc
mov
add
mov
rolb
in
pop
mul
inc
pinsrw
mov
inc
push
mov
aad
mov
les
adc
dec
sbb
mov
dec
inc
clc
mov
lds
add
addr16
adc
xchg
xchg
aad
mov
addr16
loope
shr
or
adcl
mov
jb
pop
leave
jge
jmp
xchg
aas
notb
mov
mov
ja
cli
leave
push
icebp
mov
outsl
loope
xlat
inc
shr
pop
mov
insb
cmp
out
pop
out
aam
xrelease
nop
icebp
sub
mov
arpl
insl
pop
loopnew
notb
mov
dec
rcl
mov
aaa
sbb
mov
and
out
popa
outsb
stc
jnp
xchg
xor
or
jmp
mov
xor
enter
add
pop
jae
mov
sbb
mov
rcrb
xlat
jne
mov
cmp
ret
push
pop
rorb
xchg
push
adc
sub
es
jbe
adc
add
push
xor
insl
fld
mov
idivl
mov
psraw
push
push
cmc
xor
cld
adc
mov
mov
dec
add
scas
cmp
add
dec
popl
inc
jns
stos
loopne
imul
imul
push
mov
divb
mov
mov
gs
mov
dec
test
pop
sub
test
inc
ljmp
fistps
add
iret
sbb
jg
lods
lds
mov
xchg
es
bound
mov
dec
cli
or
fisubl
js
add
sti
jle
add
fs
negb
imul
nop
jg
shll
sahf
aaa
jnp
dec
repz
push
inc
add
pop
mov
ja
cmp
sbb
mov
scas
fs
xacquire
and
push
std
lcall
es
pusha
call
aaa
jge
aas
into
outsl
data16
xchg
or
js
xchg
mov
mov
inc
and
add
jnp
cmpsl
fs
mov
xchg
jge
and
mov
int
test
mov
jb
jae
mov
jecxz
test
jg
xchg
xchg
mov
faddl
cmp
insl
mov
lds
aaa
fstpt
fs
lahf
movsl
push
fsubr
cmpsl
rcrb
cmp
test
lock
mov
clc
mov
add
jno
test
call
test
loopne
es
xor
mov
xlat
loopne
xlat
pop
cmpl
cmpsl
repnz
mov
dec
sbb
cmp
outsb
mov
push
add
popf
and
fisubrs
cmp
xor
or
daa
shll
push
cmpb
xor
push
adc
cld
rcrb
add
jmp
std
shlb
and
sbb
inc
ret
inc
test
mov
push
imull
mov
add
xchg
ljmp
incl
roll
sbb
cwtl
lret
xlat
and
test
addl
mov
out
inc
jnp
sub
mov
cmpsl
lods
ja
xor
subb
fsubr
ja
mov
cmp
push
mov
out
jbe
xchg
inc
xchg
inc
mov
cmc
std
xor
xlat
out
out
in
jnp
and
fs
jbe
cld
out
repnz
mov
stos
leave
lea
cmp
pusha
rcrb
aad
mov
fs
lahf
lahf
xor
dec
push
imul
xor
inc
mov
add
sti
sub
xchg
jnp
bound
mov
out
mov
pop
out
xchg
stos
jg
std
shl
jmp
lcall
bound
loope
faddl
xchg
xor
add
leave
adcl
fistl
subb
loopne
scas
mov
dec
aad
fcoml
daa
iret
lods
decb
stos
lods
or
cmpsl
add
lods
aam
sub
daa
pushf
xchg
outsb
xlat
dec
aad
pushf
in
addr16
dec
rorl
test
and
xorb
rcrl
std
repz
arpl
adc
jno
cwtl
leave
mov
cmc
mov
shrl
push
popf
mov
test
mov
or
stos
sbb
cs
hlt
inc
pop
dec
and
imull
lock
jne
inc
xchg
test
mov
outsl
outsl
adc
adc
push
dec
cmp
fwait
push
imul
std
pusha
sarl
sahf
testb
pop
adc
add
movsl
jnp
test
and
fisubs
icebp
lahf
movl
dec
ss
mov
adc
in
out
movsb
push
add
push
stos
lds
xor
insl
dec
mov
rcrb
out
mov
out
sbb
bound
out
cmp
loop
sub
mov
dec
and
in
xor
and
mov
test
mov
xlat
aaa
rcl
push
mov
nop
cs
and
loopne
adc
push
ja
push
mov
sub
pop
push
push
push
aad
push
add
xchg
pop
enter
fnstcw
rol
cli
mov
out
rorl
sub
mov
into
push
scas
cmc
pop
push
les
ljmp
inc
adc
add
and
sbb
add
pop
in
test
inc
push
into
mov
push
ja
adc
cltd
mov
pop
mov
mov
mov
ds
out
push
scas
mov
or
xor
cmp
lds
xchg
sbb
add
aaa
push
sahf
pusha
push
ficoms
movsl
push
call
imul
add
inc
push
aad
ret
mov
sarl
jbe
jo
cmc
xchg
xor
push
jmp
mov
leave
push
addb
jo
or
arpl
sbb
sarb
lcall
pop
mov
mov
fists
jo
jmp
faddp
pop
lahf
pushf
lds
jno
mov
push
repz
repz
dec
outsl
xchg
add
cmp
stc
loop
clc
pandn
sbb
mov
or
js
xorl
ret
hlt
xlat
clc
xchg
andb
adc
push
push
or
add
cmpsl
fs
mov
xchg
xchg
lods
lds
std
or
lods
call
loop
mov
mov
scas
mov
jmp
test
std
push
push
pop
sbb
pop
mov
iret
iret
fs
mov
or
aad
inc
and
daa
and
sarb
inc
pop
inc
outsl
roll
mov
ja
and
dec
cmp
out
push
xorl
cmp
pop
add
stos
cmp
call
hlt
and
stos
pop
inc
mov
mov
out
sub
xchg
inc
cmpb
insl
rcr
pop
movsl
jge
sub
ljmp
fs
push
aaa
je
loopne
enter
add
inc
pop
jns
mov
and
xor
dec
adc
push
aaa
mov
movsb
in
xlat
aaa
arpl
adc
or
mov
cli
or
mov
popa
jecxz
fsubrl
sub
jecxz
mov
pop
cmpsb
clc
std
mov
pop
mov
or
cmp
add
add
ja
push
adc
ffree
loope
fidivs
xlat
jg
aad
inc
inc
push
and
xlat
shll
adc
jae
add
fiadds
and
mov
jo
js
mov
add
sbb
xlat
pusha
rcr
push
mov
push
add
pop
out
sub
xchg
jnp
ja
xor
fsub
mov
in
pusha
test
jmp
xchg
or
fs
or
shlb
or
push
mov
adc
adc
test
test
cmpsl
mull
aad
fsubr
imul
loope
xor
pop
subb
divb
mov
dec
pop
dec
add
js
push
cmp
sbb
xlat
pop
popf
lock
testl
lea
std
imul
clc
jmp
cmpsl
push
mov
sbb
mov
jmp
es
xor
inc
add
js
pushl
mov
loope
ss
jb
mov
test
xchg
pop
addb
scas
and
add
push
ljmp
jo,pt
rep
mov
jbe
iret
jmp
aam
mov
mov
mov
cmp
in
inc
out
jle
mov
ror
adc
mov
mov
sub
and
call
mov
in
inc
mov
adc
ret
ljmp
xor
fildll
loop
sahf
mov
xchg
ret
sbb
cmpsl
test
scas
pop
dec
pop
lret
lret
rclb
xlat
mov
xor
dec
xor
lock
inc
movsb
and
mov
arpl
stos
aam
mov
pop
inc
in
adc
inc
pop
jecxz
scas
pop
aam
pop
and
add
ret
test
mov
lret
nop
inc
dec
xchg
pop
test
lret
nop
push
ljmp
ret
add
fsub
dec
cmp
shrl
out
into
fsts
aam
popf
mov
adc
pop
lret
xchg
shll
aas
out
mov
fwait
outsl
repnz
aam
push
mov
push
popf
pop
test
mov
stc
dec
adc
test
test
popa
lds
push
sarb
jne
js
push
and
push
mov
jno
roll
scas
scas
stos
popa
xchg
inc
test
negl
fimull
push
push
pop
push
jg
jmp
fs
dec
loopne
ror
xor
push
xchg
jmp
jns
mov
arpl
add
push
adc
leave
fwait
inc
cld
pop
cmp
int3
test
mov
hlt
adc
idivl
test
xchg
xchg
out
fists
sub
xchg
rcll
mov
push
mov
adc
ret
ss
ret
divl
cmp
mov
loopne
insl
neg
rolb
pop
clc
and
cmp
sbb
sub
or
pop
sbb
int
lret
adc
iret
es
fs
push
inc
or
rorl
push
int
jns
out
stc
test
icebp
sbb
orl
iret
scas
jo
stos
mov
icebp
mov
pushf
push
xchg
mov
cmc
xchg
pop
dec
jbe
test
mul
shll
data16
mov
addr16
out
mov
pop
mov
shl
aaa
lds
fsubrl
push
fcom
lds
mov
aaa
cli
push
inc
pushf
dec
test
cmpsl
stos
shll
sbb
stc
xchg
out
push
movsl
lahf
and
outsb
test
in
outsb
pop
jne
mov
arpl
inc
jnp
in
cmpsb
lahf
or
mov
fwait
or
and
lcall
lds
cmpsb
out
aaa
add
adc
je
clc
and
lods
ljmp
dec
jbe
jecxz
mull
rol
call
add
fisubrl
add
insb
xor
cld
mov
xlat
je
movsl
add
xchg
mov
ficompl
cmp
aas
js
call
ja
lea
mov
dec
lret
add
jne
lods
mov
inc
and
xchg
cmp
insl
push
adcb
sbb
notl
ret
sub
orb
insl
rolb
jmp
mov
pop
aad
mov
sbb
jg
in
cmpl
xchg
mov
xorb
out
pop
push
adc
mov
add
pop
mov
adc
dec
or
loope
testb
ss
stos
ss
push
imul
push
movsb
stc
enter
push
fwait
or
or
mov
xchg
or
jne
loopne
push
fwait
and
orl
sub
dec
test
mov
mov
xor
mov
repnz
sahf
inc
and
test
push
push
inc
inc
xchg
int3
aam
adc
jae
cmc
aam
test
mov
hlt
or
mov
jae
pop
cmp
mov
dec
clc
push
fcoml
push
or
pop
orl
lcall
in
xorb
sbb
xchg
imul
stos
ljmp
sbb
pop
inc
mov
fidivrl
xor
mov
cmp
cmp
and
adc
imul
dec
jle
sbb
pop
xchg
push
lock
daa
add
mov
mov
aad
jl
inc
and
fs
or
icebp
rorb
popa
pop
sub
cmp
xchg
dec
stos
inc
dec
repz
enter
jge
mov
push
insb
inc
adc
mov
addr16
dec
ficoml
lcall
inc
mov
mov
shlb
mov
push
pop
xor
iret
call
les
mov
push
loop
push
ret
fmull
and
push
daa
jnp
test
inc
outsl
and
cmpsl
jae
bound
push
jno
dec
xchg
inc
es
and
push
rorb
stc
inc
mov
icebp
pop
add
cmp
adc
cmp
and
push
fcmovb
push
jns
aam
shll
stos
xlat
xchg
aas
sti
xlat
out
scas
ret
push
and
ficomps
xchg
jae
outsl
push
cmc
fsubrp
addr16
mov
daa
sbb
hlt
faddl
sbb
dec
pop
imul
roll
repnz
es
inc
inc
out
shll
jmp
mov
pop
inc
push
fbld
mov
push
inc
sbb
xchg
adc
call
add
in
fbstp
aaa
mov
in
stc
fstps
lods
push
stc
mov
adc
rolb
mov
cs
sub
push
adc
lcall
addr16
ret
pop
pusha
xchg
je
push
lahf
xchg
mov
add
insb
fisttpl
les
sbbb
mov
ret
decl
sti
xchg
shrl
or
cmp
es
les
scas
jmp
in
add
mov
add
insb
inc
jmp
lds
add
shrl
out
lahf
in
stos
mov
push
xchg
cmp
popa
aad
ret
mov
pop
int
mov
inc
xchg
movq
dec
mov
in
fildll
mov
adc
nop
xchg
shrb
rclb
bnd
cmpsl
stos
aaa
aam
testb
imul
mov
pop
xlat
ret
pop
test
int3
sbb
or
ss
test
stos
lret
fistl
mov
scas
mulb
mov
test
ljmp
ret
adc
adc
or
out
jg
shll
out
xchg
xchg
xchg
xchg
cwtl
xor
mov
cli
pop
inc
xchg
sub
pop
nop
pop
jno
push
dec
int3
roll
push
xchg
out
repz
cmp
fmull
out
cmc
outsb
adc
adc
lods
mov
int3
mov
mov
pop
in
test
inc
sbb
pop
loopne
dec
add
int3
sbb
fs
jb
inc
mov
adc
xchg
cmp
mov
cli
jo
xchg
scas
enter
clc
out
filds
gs
fs
insb
lods
daa
loopne
adc
in
sbb
or
gs
jbe
in
push
lock
mov
push
or
dec
call
xchg
adc
xchg
mov
lds
pop
rol
loope
dec
adc
dec
out
adc
inc
sbb
xchg
aam
test
jge
data16
push
sti
divb
out
mov
in
sti
pusha
xchg
fisttps
inc
pop
out
inc
fnsave
addr16
rcrb
insl
andl
shll
sub
or
popf
push
mov
mov
xchg
jle
addr16
lahf
push
andl
rcrl
mov
push
fldenv
xchg
mov
xchg
aaa
pop
loopne
stos
in
bound
fs
shl
push
sbb
scas
dec
addr16
imul
mov
and
jge
shll
cmp
popf
std
cltd
adcl
leave
fistps
adc
dec
fsubrl
xchg
lret
ja
dec
clc
jmp
cmp
cmpsb
inc
loop
inc
push
xchg
lods
lods
push
jns
shlb
daa
jg
movl
cmp
les
inc
jne
xchg
inc
aaa
xchg
dec
sbb
aas
ds
ja
or
cld
mov
imul
mov
sub
movsb
xchg
pop
cmpb
inc
arpl
ja
mov
sub
iret
sbb
dec
shlb
xchg
lcall
xchg
jmp
or
aam
pop
adc
adc
xor
pop
jg
inc
out
lods
push
es
cmp
sub
xchg
popl
test
ljmp
pop
xchg
stos
pop
subl
addr16
rcll
enter
inc
push
cmpsl
push
and
dec
mov
ret
push
dec
pushf
jns
sbb
add
add
cmp
inc
pop
les
imul
mov
sbb
or
sub
std
fldcw
and
fdivl
push
dec
addr16
scas
in
push
jg
dec
sbb
aaa
pop
arpl
das
rorb
sub
cmpsl
xor
sbb
ljmp
sbb
sbb
xor
push
les
shr
sub
inc
pusha
push
test
mov
aad
mov
xchg
testb
in
sbb
cmc
scas
add
ss
ds
aad
mov
jle
xchg
sbb
movsl
cmp
shl
scas
push
mov
mov
cmp
push
js
mull
in
or
xorb
sbb
repnz
test
std
roll
addr16
test
mov
jae
mov
add
fisubrs
push
push
add
xor
mov
jae
in
sbb
in
jl
push
xor
mov
adc
aam
test
jb
and
addl
pop
pop
in
dec
cli
outsl
push
movsl
das
jne
sub
test
addr16
pop
cmp
xchg
incl
mov
mov
int
out
pop
pop
icebp
fimuls
outsl
imull
hlt
adc
and
or
inc
cmovge
pop
js
imul
mov
inc
and
mov
sub
inc
stos
pop
in
xchg
dec
cli
fs
adcb
pop
fbstp
push
leave
shl
dec
jmp
mov
and
sahf
sbb
jge
ss
addr16
xchg
or
addr16
mov
pop
arpl
mov
mov
mov
inc
pop
mov
push
sbb
fs
popl
test
push
bound
xchg
out
stc
dec
loopew
jmp
fnstcw
loop
roll
mov
imul
xlat
xlat
stc
inc
xchg
add
jecxz
fisubs
sti
lret
or
cs
repz
daa
or
add
iret
scas
icebp
out
sbb
test
cmp
mov
fistps
mov
jbe
ret
sar
xlat
xchg
and
out
xchg
adc
jmp
iret
xor
cli
mov
stc
aas
cmpsl
or
out
popf
push
sbb
aas
lcall
out
sbb
mov
mov
add
sbb
xchg
cmp
bound
xor
es
inc
mov
and
lahf
cld
divl
push
lahf
cs
and
std
mov
outsl
aad
fldl
pop
push
sti
test
std
iret
mov
dec
fwait
lods
dec
into
add
dec
xor
data16
xchg
pop
fs
add
jmp
notl
call
shlb
addl
lods
sbb
mov
out
lds
adcb
fwait
cmpsl
push
ja
and
lods
mov
xlat
leave
in
add
pop
mov
fwait
mov
pop
and
std
dec
pop
mov
push
mov
dec
fisttpll
mov
dec
cmpsl
and
lods
mov
in
jno
mov
aad
aas
xchg
mov
dec
mov
movsb
mov
out
push
arpl
mov
jge
push
mov
rol
addr16
cmpsb
insl
test
ljmp
ja
mov
sbb
into
inc
cli
test
outsb
sub
fistps
adc
adc
dec
add
shrl
out
sti
pop
cli
daa
push
or
or
loop
xchg
imul
in
mov
jmp
add
shrb
es
mov
arpl
sbb
aaa
sahf
movsl
jecxz
or
mov
inc
sub
adc
sbb
or
les
adc
push
and
fs
cltd
ds
fwait
or
sub
jmp
mov
add
cmc
lret
test
jb
cmpl
xchg
inc
mulb
popa
enter
js
aad
inc
daa
pop
std
adc
test
mov
sti
xlat
sbb
xchg
jns
ja
jnp
pop
and
dec
or
fucomip
lcall
pop
cmc
add
jecxz
mov
jmp
xchg
ja
ds
cmp
sbb
decb
fs
cmp
push
int3
inc
mov
adc
jecxz
scas
xlat
mov
inc
pop
push
mov
cmp
addr16
mov
es
dec
mov
inc
cmc
xchg
inc
dec
cli
mov
scas
xchg
pop
add
push
lods
fdivrp
push
cltd
xchg
enter
daa
inc
leave
aad
mov
jle
mov
in
cli
and
scas
out
stc
add
fwait
out
mov
test
cmpsl
and
or
int3
pop
xchg
divb
out
xor
mov
lock
mov
jne
sub
add
scas
cmpsb
push
jb
scas
jecxz
inc
xchg
mov
lds
adc
mov
out
push
aad
ret
xlat
mov
imul
xor
lret
jecxz
ds
je,pt
iret
aaa
icebp
arpl
lahf
mov
out
cs
insb
fistpll
test
jecxz
sub
out
mov
stc
fisubs
dec
push
orl
xchg
stos
jl
push
lock
pop
sarb
sub
push
outsl
scas
adc
lods
add
cmc
lahf
and
pushf
loop
mov
sbb
idivb
jp
mov
outsb
jo
mov
push
mov
sbb
dec
mov
out
sar
das
pop
mov
pop
or
dec
pop
pop
enter
test
sbb
pop
stc
subb
outsb
push
imul
sbb
stos
dec
or
ja
mov
jnp
or
cmp
cmpsb
inc
and
orl
mov
mov
mov
pop
bound
enter
adc
and
sub
xorl
in
xchg
xor
test
es
xorl
dec
xor
adcl
lret
sbb
dec
ret
xlat
ror
adc
fimull
je
pop
sbbl
mov
or
arpl
or
int3
xchg
xchg
mov
imul
pushl
mov
ljmp
and
arpl
push
add
xchg
cli
and
fildll
ja
push
add
mov
pop
xchg
into
sbb
xor
or
inc
xchg
pop
out
dec
scas
mov
pop
jmp
lock
dec
sbbb
adc
sbb
cld
fistl
xchg
daa
add
out
and
ficoml
mov
xor
pop
cmp
lea
ret
inc
push
inc
pop
loop
add
mov
jl
ja
aaa
xchg
ds
rcrb
in
mov
cmc
mov
pop
cld
fxch
cmp
adc
cltd
xor
or
cmp
bound
lahf
cld
adc
bnd
add
stos
test
dec
in
insl
out
lock
mov
xchg
sub
shlb
xchg
cmpsl
inc
push
rorl
cli
sbb
std
xor
mov
cmp
out
gs
inc
adc
xlat
mov
sub
testl
lahf
std
in
fmull
mov
sbbl
test
std
mov
shll
sbb
xchg
shrb
push
pop
shr
sub
out
shrb
fidivl
dec
nop
mov
inc
pop
movsl
sub
cmp
and
stos
icebp
add
shl
das
dec
inc
mov
xchg
inc
jae
lods
cmpb
fldl
fwait
mov
cmp
clc
cmp
pushf
jno
cmp
push
dec
sbb
testl
cs
push
pop
pop
and
out
incl
adc
mov
popf
into
adc
cltd
xor
out
adc
add
addr16
mov
fsubrp
fimull
rorl
packuswb
repnz
ja
in
adc
cs
sbb
pop
mov
cs
ja
push
scas
ja
add
std
jle
push
mov
inc
xchg
cmpsb
lods
popa
std
sbb
frstor
cmp
and
cs
pcmpgtw
dec
push
mov
pop
ja
pushf
stos
dec
data16
out
lds
jne
psubw
add
dec
or
imul
push
jl
and
jmp
ja
or
outsl
arpl
sbb
mov
js
add
add
icebp
fcomps
inc
js
xchg
std
mov
fisttps
les
and
repz
cmc
xchg
movsl
fisubrs
fisubs
lea
and
cmpsl
xchg
push
addr16
sahf
and
lret
sbbl
fs
sub
gs
rcl
xchg
adc
jo
into
mov
jg
add
std
or
jmp
adc
mov
leave
test
insb
ds
mov
sbb
rcrl
or
inc
inc
cld
jle
add
out
ja
ja
int3
movsb
fdivrs
aad
sub
int3
mov
dec
sbb
push
cmp
pop
dec
daa
and
jp
xchg
and
xchg
aam
rclb
loope
sbbl
push
iret
lret
fnsave
xor
das
or
aaa
out
sbb
aam
xchg
xor
mov
mov
xor
test
xlat
cmc
xlat
or
iret
or
roll
stc
repz
inc
xchg
shlb
shll
test
or
sbb
sbb
pop
pop
cmp
es
xchg
test
or
clc
nop
push
jnp
ja
imul
inc
pop
mov
mov
cmpsl
test
xchg
movsl
repz
stos
rcll
mov
nop
add
pop
pop
stos
mov
xor
test
scas
cmp
push
sahf
sti
leave
dec
cli
dec
test
scas
hlt
mov
arpl
xchg
enter
inc
lock
loope
push
sar
sbb
cld
in
add
outsl
adc
pop
push
pop
mov
xchg
lfs
adc
hlt
loope
ftst
pop
inc
push
inc
dec
mov
mov
popf
jge
pusha
into
mov
and
fdivr
bnd
cmp
push
pop
scas
imul
sub
sbb
cmpsb
clc
call
mov
fwait
xchg
jecxz
sub
dec
jecxz
xchg
pop
sub
xchg
rorb
sbb
jae
mov
xor
je
dec
xchg
mov
roll
xor
dec
inc
loopne
test
dec
fsubrp
and
leave
push
out
or
in
add
jecxz
mov
mov
cs
xchg
or
loop
addr16
ds
push
mov
call
cmc
mov
aaa
mov
testb
lret
movsl
inc
sbb
inc
shll
lret
xchg
call
sbb
sbb
jno
hlt
js
repz
std
int
xchg
call
mov
or
notb
mov
inc
sbb
out
ss
adc
xorl
sub
jle
jle
jnp
ret
push
xchg
add
roll
pop
lahf
lock
jns
mov
cli
xchg
popa
out
repz
mov
jle
or
ret
push
jge
repnz
ja
gs
push
loopne
imul
adc
cmc
pop
xchg
roll
pop
loopne
andl
xor
out
cld
sbb
ss
aad
cmp
xlat
imul
icebp
les
fs
hlt
das
aaa
movsl
sbb
xchg
sbb
mov
bound
sub
add
push
dec
add
push
mov
push
mov
adc
arpl
rol
sub
push
push
push
out
daa
hlt
mov
insl
mov
rorb
pop
push
es
jo
outsb
add
jnp
cld
sbb
and
shll
xor
call
ret
test
dec
loopne
adc
add
xlat
addl
aam
pop
fs
mov
lahf
pop
out
int
enter
adc
lods
lret
mov
xor
add
jle
cmpsl
mov
mov
popa
inc
movsb
pop
fists
aad
or
pop
xchg
sahf
xchg
jns
mov
mov
mov
into
test
test
cmp
ja
add
repnz
andb
adc
loop
dec
push
popf
idivb
mov
mov
pop
cmpsb
out
xchg
or
xchg
mov
pop
adc
in
daa
sub
fdivrl
mov
mov
scas
popl
addr16
push
sarb
pop
aad
push
cmp
pop
ret
jmp
fdivr
sbb
shrl
ficoms
test
push
cmpb
xor
in
lock
rorl
outsl
aas
insb
xchg
lds
aad
test
cmpsl
pop
mov
inc
or
scas
int3
push
mov
dec
xor
and
pop
mov
faddp
push
loopne
jbe
xor
arpl
popa
mov
sahf
ja
mov
popf
cwtl
inc
cld
mov
mov
add
dec
fwait
lea
jnp
cmpsb
scas
mov
inc
and
mov
test
jb
add
push
int3
sbb
cmpsl
mov
mov
and
push
decb
or
sbb
repz
in
stc
dec
sarl
cmp
add
sub
add
jl
sbb
mov
sti
mov
outsb
pop
add
pop
mov
or
sub
or
jg
jp
daa
sbb
or
adc
outsb
jmp
aas
clc
movhps
jg
orl
into
adc
or
mov
inc
out
ds
or
sbb
fbld
sub
cwtl
ss
outsl
pusha
lds
and
mov
push
mov
jo
ret
or
or
imul
loopne
and
xor
add
pop
xchg
and
scas
repz
push
xor
xchg
xchg
pusha
into
sbb
xlat
pop
xchg
mov
lea
pushf
mov
xchg
mov
push
sbb
push
inc
pop
incb
imul
sbb
dec
scas
es
pop
loopne
icebp
roll
sub
add
in
push
jno
push
imul
pop
inc
pushl
lret
popf
movl
jl
jle
not
and
mov
jae
adc
outsb
js
sub
roll
jg
js
imul
in
jo
jo
dec
cld
mov
cs
gs
mov
pop
fdivrs
cmpsl
dec
mov
inc
jae
push
ret
test
int3
lea
inc
std
mov
sbb
push
add
fldt
lea
in
lods
fdivr
add
mov
testl
xor
xchg
outsb
add
dec
ds
aas
ret
movl
cltd
adc
add
mov
aam
sbb
sub
rcrb
fnsave
sbb
mov
out
push
dec
insb
je
jmp
int3
mov
mov
insl
rclb
loopne
iret
cmp
loope
mov
movsb
add
fneni(8087
fs
in
lahf
call
int3
or
rol
xchg
xchg
xchg
out
mov
loopne
fidivl
fbstp
into
sar
dec
mov
add
jno
clc
fsts
push
leave
jo
add
test
leave
das
out
push
addr16
outsl
cmp
pop
addr16
lock
mov
mov
sbb
mov
xchg
sub
sbb
addr16
movsl
dec
and
xlat
pop
ds
in
pop
mov
or
push
outsl
mov
flds
lret
add
sahf
test
cmp
hlt
xchg
cli
in
or
add
ds
mov
xchg
dec
pop
stc
ret
push
mov
cltd
jge
lahf
jg
pop
sbb
clc
std
imul
aam
push
xchg
test
adc
adc
test
loop
test
mov
xchg
imul
add
fiaddl
jae
test
mov
pop
jbe
test
ja
xorl
pop
ljmp
add
addr16
mov
jg
xchg
flds
out
pop
loope
test
jg
mov
and
out
mov
xchg
jbe
clc
adc
in
cmpl
mov
xor
stos
jno
jbe
sub
addr16
cmp
iret
test
andl
push
out
out
inc
fs
sub
fnstenv
fmull
xchg
sub
pop
nop
aad
mov
insb
vmread
pop
mov
sbb
jne
in
mov
sbbb
or
add
stc
enter
push
test
xchg
std
je
xchg
repz
jnp
xor
dec
push
gs
out
fwait
in
movl
cmp
pushf
pop
cmp
fists
jle
add
mov
jns
xchg
or
cld
mov
cmp
xor
popf
repz
dec
inc
pop
push
test
dec
jecxz
dec
mov
push
mov
dec
addr16
test
sarl
and
cmc
in
xchg
out
inc
push
pusha
test
iret
stc
mov
lds
je
push
test
adc
data16
xchg
test
mov
sub
mov
pop
mov
aas
push
mov
mov
enter
jnp
scas
sbb
cmp
push
orb
outsl
xchg
xlat
push
jge
dec
pusha
cltd
push
fimull
cmp
fwait
push
lahf
mov
xchg
xor
testl
adc
es
ja
jo
ss
mov
scas
popf
xlat
sub
mov
out
cmp
or
mov
arpl
psubq
xchg
test
sub
cmp
xchg
pusha
xchg
push
jp
inc
jl
aam
je
lret
in
mov
je
daa
mov
rcll
out
shlb
rcl
fstpt
loopne
fdivs
out
mov
mov
sub
mov
sub
mov
divl
sahf
test
lahf
push
fs
cmpsl
inc
jno
fs
sbbb
aaa
test
and
test
ljmp
out
mov
cs
pop
xor
push
sub
dec
leave
xchg
mov
scas
push
fbstp
les
sarb
aad
inc
loopne
sti
ljmp
xchg
xor
bound
jbe
int3
out
outsl
jp
jmp
test
mov
sub
fists
in
mov
inc
mov
xchg
jp
xlat
or
stos
mov
mov
popf
popa
movsl
xor
faddl
lds
lods
mov
pusha
call
cwtl
xchg
and
cmpsl
stc
adc
sar
inc
scas
cmp
rcrl
sti
sbb
add
je
loope
aad
aas
pop
mov
push
inc
inc
test
inc
les
testl
sbbl
test
inc
dec
pop
push
adc
lcall
adc
mov
clc
daa
fisttps
js
ret
dec
adc
shl
out
adc
pop
in
xchg
jno
fisttps
mov
pop
adc
push
dec
stc
subps
in
ja
fwait
ja
out
test
cmp
lock
jp
dec
inc
push
mov
stos
push
mov
or
out
hlt
pop
add
jns
push
sti
mov
add
pop
fwait
inc
jecxz
and
cs
je
push
jae
xlat
lahf
lds
push
xchg
aam
out
adc
mov
cmpsb
jb
cmc
gs
mov
out
fdecstp
jbe
cmpsl
incl
pusha
cmp
sub
fists
jae
ret
mov
lods
mov
push
jno
mov
cmpsb
aad
adc
pop
mov
inc
out
je
outsl
mov
enter
push
mov
or
jmp
cmp
push
in
lcall
repnz
fimull
rorl
rcl
test
lds
mov
mov
fdivl
adc
cmp
pop
pusha
aas
arpl
sysret
insl
aas
push
ds
ss
out
jle
push
fwait
and
xlat
mov
jp
inc
lds
mov
stos
fsubrp
add
ss
sbb
lea
mov
add
stc
inc
ss
push
jle
jno
mov
out
jle
sbb
pushf
fs
pusha
popf
aas
rcrb
push
ja
inc
test
cltd
mov
cwtl
adc
xchg
mov
ret
mov
sub
cs
pop
mov
lock
fnstsw
push
and
or
cld
dec
lcall
mov
insb
and
loope
cmc
in
mov
dec
ret
imul
clc
or
and
inc
mov
xorb
stos
push
mov
inc
aaa
mov
pop
mov
adc
imul
lock
test
aaa
cmp
jne
jge
mov
xchg
adc
insb
das
leave
jno,pt
leave
stc
xchg
xchg
ret
jbe
mull
cli
cmp
mov
dec
jp
cs
leave
in
test
and
outsl
insl
sub
xchg
in
sbb
mov
adc
jle
iret
jl
fs
push
dec
fucomi
jmp
out
imul
imul
fs
fwait
les
sub
icebp
xor
sbb
pop
in
pop
scas
decb
je
pop
jnp
mov
and
jge
cmp
std
sbb
xchg
mov
lds
dec
xchg
das
fs
cs
out
arpl
xor
lea
pop
jg
shlb
xorl
cli
lea
cmpb
leave
xor
in
inc
out
test
mov
mov
out
adcb
arpl
xor
inc
les
cmpsb
cs
fimuls
lds
bound
mov
test
outsl
pop
add
idiv
mov
push
sbb
dec
or
add
jge
mov
mov
inc
jmp
ss
icebp
cmp
push
add
push
fbld
add
lahf
mov
mov
mov
mov
mov
shrl
in
lock
pop
in
aaa
in
cmc
inc
loopne
mov
jnp
dec
movl
cmp
add
out
frstor
mov
orb
add
and
imul
add
and
arpl
dec
cmp
lock
and
aaa
or
popa
jnp
fistl
lret
ljmp
cmp
daa
imul
xchg
in
pop
and
pop
add
jecxz
test
jmp
ja
adc
inc
rcrl
rol
jmp
pop
js
xlat
dec
pop
repnz
outsl
shl
loopne
in
in
bound
dec
ss
dec
stc
cld
fwait
mov
xchg
xchg
andl
adc
popf
lcall
imull
sbb
add
mov
push
sti
push
inc
adc
jp
scas
icebp
adcb
jle
pop
xlat
xchg
and
incb
test
repnz
mov
or
jne
loopne
push
daa
out
mov
fwait
scas
pop
sub
pop
adc
pop
ja
pusha
mov
pop
sub
adc
push
cmc
jae
pop
add
test
xchg
ret
pop
cmp
jl
pop
inc
and
inc
orl
jne
decb
cmc
mov
jecxz
nop
jb
pop
into
addr16
sub
push
jnp
ret
add
sbb
jg
cmc
repnz
push
pop
pop
push
sub
mov
jo
jp
notb
jae
pop
inc
nop
dec
fmull
fxam
orb
aaa
inc
out
stc
jae
inc
pop
movsb
ds
scas
xlat
adc
shlb
mov
sbb
mov
lods
inc
das
adc
lods
or
adc
sbb
test
loope
jecxz
int
push
pop
add
out
adc
pusha
mov
sub
cmpsl
out
or
push
shrb
imul
out
pop
push
jae
int
mov
loope
repz
loope
jge
stos
mov
fs
mov
addl
or
stos
aam
clc
int
xlat
xchg
pop
out
fwait
in
daa
lock
jecxz
dec
je
andl
mov
mov
xchg
mov
cmp
loopne
imul
jbe
or
xor
loope
or
scas
mov
icebp
aad
out
or
xchg
insb
pop
cli
sub
pop
aas
jne
neg
iret
mov
pop
lea
cmp
mov
mov
lcall
mov
mov
int
testb
addl
repnz
ret
jecxz
mov
out
pop
test
sub
pop
ja
gs
ja
or
addr16
lds
hlt
mov
mov
mov
push
cld
sub
hlt
test
enter
mov
push
jge
pop
out
dec
xchg
mov
iret
mov
adc
pop
aad
in
aas
test
test
jecxz
stc
sbbl
cmp
sub
push
mov
arpl
fstpt
jmp
cwtl
movsb
test
dec
ljmp
stos
pusha
and
jge
stos
jmp
fsubl
out
arpl
fsts
bnd
cmpsl
xchg
xchg
bnd
das
adc
xor
sti
sbb
mov
push
das
sbb
gs
test
out
das
pop
adc
xchg
and
sbb
test
shlb
inc
loopne
pop
ljmp
fcomps
lcall
mov
inc
mov
adcb
adc
xchg
sar
cwtl
ds
mov
push
jge
mov
outsb
fcompl
adc
inc
mov
aas
cli
fucomi
fsubrl
daa
aad
leave
mov
mov
xlat
rcr
mov
fs
test
xchg
mov
lds
hlt
adc
mov
test
pop
and
bound
stos
jp
xlat
gs
repz
pop
fwait
lods
movl
outsb
mov
js
mov
pop
inc
stos
mov
mov
add
idivb
inc
push
scas
in
int3
int
sbb
mov
hlt
pop
dec
xor
xchg
adc
lods
inc
movsb
rcl
insl
mov
movsl
insl
test
add
dec
xlat
sbbb
test
stos
push
jge
cmc
ret
subb
pop
test
dec
es
roll
mov
pushl
jbe
out
adc
cmpsl
leave
push
movsl
add
and
jmp
xchg
mov
cmp
mov
mov
adc
or
push
mov
ja
inc
jae
mov
push
outsl
inc
aad
clc
cmpb
cmpsl
add
les
fisubs
ss
inc
out
pop
bound
mov
cmp
lcall
mov
add
adc
fiaddl
dec
mov
out
jb
push
jl
jae
fcomps
sbb
cmp
jge
in
inc
aaa
jecxz
pop
test
push
inc
push
inc
xchg
and
fidivrl
mov
push
in
xchg
popf
mov
enter
add
and
xchg
or
mov
stos
add
or
cltd
pop
pop
mov
push
or
inc
test
outsl
sbb
adc
icebp
movsl
sub
inc
pop
cmp
sbb
push
shll
sbb
cwtl
sub
mov
fidivs
pop
jae
pop
mov
inc
pop
stos
sbb
inc
or
pop
inc
popf
cmpsl
push
jg
fnstsw
fldt
sti
data16
fisttps
mov
dec
mov
lahf
outsb
xchg
xor
cmpsb
leave
and
dec
out
aas
adc
adc
adc
push
pushl
fsubr
loopne
in
out
movsl
insb
xchg
aaa
pop
in
dec
rolb
icebp
in
rorb
pusha
add
cmp
cmpsl
mov
sahf
jmp
inc
mov
test
jecxz
popf
popf
push
std
mov
cmp
dec
gs
aad
jecxz
cmp
push
inc
les
popa
xor
xchg
inc
lea
repnz
mov
or
inc
adc
test
push
outsb
add
cmp
cmpsb
dec
adc
shll
jmp
xor
movlps
js
mov
mov
idivb
test
sbb
sbb
imul
cs
ret
sub
fcmovb
mov
shl
or
cmc
lret
sti
mov
roll
loop
cmc
add
sbb
xchg
test
inc
ja
imul
add
insl
aad
pop
out
jg
mov
mov
insl
out
xchg
push
int
popa
fst
mulb
adc
inc
jno
jns
xchg
xor
cmp
lock
testl
outsl
sub
xchg
push
cli
sbbb
pop
mov
and
xor
lods
into
sbb
add
adc
add
pop
dec
inc
sbb
and
cs
jle
es
test
pop
in
sarb
stos
aad
mov
test
push
loopne
sbb
or
push
and
jmp
test
jae
test
popf
out
in
ljmp
lcall
push
sbb
repz
push
mov
inc
add
push
insb
fsubrl
cmpsb
leave
test
movsl
loop
inc
int3
test
out
insb
loope
in
test
push
jbe
icebp
leave
inc
cmp
int3
or
incl
pop
hlt
push
fsubl
testb
adc
mov
aaa
pop
or
jl
push
iret
inc
cmpb
mov
icebp
sbb
je
mov
sbb
xor
or
daa
into
cmpsl
xchg
ret
inc
loope
mulb
daa
mov
cmpsl
rorl
mov
cwtl
sub
jbe
xchg
mov
std
incb
es
mov
jg
inc
pop
jo
push
xchg
push
cmpsl
int
ds
pushl
call
dec
rcrl
lods
enter
xchg
mov
testb
js
lods
push
vrcpps
test
adc
cwtl
hlt
lods
jae
shll
jmp
mov
daa
pop
adc
jecxz
stc
mov
dec
sub
inc
ror
das
sub
mov
fidivs
pusha
out
push
fucom
test
mov
cwtl
test
ret
sub
mov
scas
or
mov
mov
jns
aas
xchg
or
cli
xor
arpl
jno
orb
xchg
and
inc
lock
mov
sub
or
les
repnz
jecxz
test
jg
filds
push
adc
cmp
cmpsl
stc
dec
fwait
lods
dec
fs
adc
adc
inc
mov
aas
and
rclb
ja
pop
fcoml
jmp
movsl
cmp
xchg
lahf
jb
pop
in
push
test
dec
mov
mov
stos
cmp
sbb
daa
push
cmpsl
xor
push
adc
push
aam
and
addl
test
int3
cmpsl
jg
dec
push
xor
mov
ja
fwait
xchg
pop
std
imul
dec
aas
test
fcompl
adc
mov
cmp
sub
mov
inc
neg
insb
and
cmc
dec
mov
xor
sbb
ret
cmpb
out
enter
inc
add
mov
lods
cmc
in
jge
cmp
add
fdivp
inc
ret
push
xchg
jne
hlt
inc
jbe
mov
push
ret
xchg
cmp
addl
test
inc
jbe
lahf
test
lcall
lahf
sti
hlt
jg
repnz
divl
xchg
inc
mov
mov
push
hlt
xchg
sbb
jno
bound
ficomps
cmp
test
sub
jnp
mov
mov
push
fs
data16
jno
xor
scas
aam
pusha
frstor
loope
lret
testl
and
sar
movsl
in
decb
lods
in
lds
loope
pop
cmpsb
inc
fcmovnb
js
mov
fdivrp
repz
mov
pop
jmp
shll
test
jg
loop
jnp
add
mov
scas
pop
lds
push
insl
les
pushf
lock
lds
push
outsl
pop
jae
sbb
and
cmpsb
xchg
inc
in
nop
mov
or
insl
mov
sub
adc
sarl
cmpsl
leave
jmp
test
testl
jne
sub
dec
out
pop
pop
pushf
adc
arpl
ja
out
dec
push
mov
xorb
mov
fwait
lds
jo
cmpsl
mov
je
jo
mov
stos
rol
in
pop
out
sub
lods
pop
adc
loope
insl
imul
scas
loope
inc
inc
adc
adc
jnp,pn
mov
xor
call
mov
cmpsl
pop
arpl
andb
add
sbb
sarb
loopne
cmp
call
inc
imul
push
adc
cltd
inc
inc
int
xor
xchg
addr16
ljmp
scas
inc
mov
adc
test
shll
imul
pop
push
lret
repnz
and
call
out
xlat
lahf
test
mov
test
push
push
sub
xchg
lea
cmp
dec
push
icebp
mov
cmp
fidivrl
add
ljmp
mov
fcmovbe
insb
outsb
test
rorl
inc
xchg
mov
mov
mov
test
jg
sub
out
shll
jge
cld
pop
mov
addl
sbb
ljmp
mov
dec
out
aas
mov
lcall
fcoms
out
enter
out
jle
mov
sub
std
shl
dec
ror
jns
lret
cmpsb
pop
divl
in
add
sbb
sbb
lahf
dec
sbb
lcall
mov
cmpsb
push
into
je
mov
test
dec
stos
jns
jg
adc
cmp
and
mov
inc
pop
push
out
loopne
cmp
scas
push
or
in
aad
dec
mov
or
push
or
imul
repnz
mov
push
addr16
push
push
dec
test
out
mov
mov
pop
dec
ja
pop
js
scas
insl
sbb
dec
outsb
mov
out
and
ffreep
stos
sti
jecxz
cmpsl
inc
inc
in
mov
cmc
int3
out
jecxz
pop
into
or
ficoml
fimuls
fcmove
addb
dec
in
sarb
xor
jp
push
orb
in
subb
call
aaa
in
mov
xor
pop
mov
div
mov
xor
inc
xchg
loopne
inc
adc
jo
dec
repz
xlat
dec
stc
lock
mov
in
sti
xor
pop
out
cmp
add
out
ja
jecxz
pop
pop
push
pop
aam
test
fimuls
mov
daa
icebp
cmp
xor
mov
sbb
jg
xor
xor
or
pop
clc
outsl
je
inc
xor
ja
divl
and
es
or
push
lods
jecxz
jb
loopne
dec
into
mov
jbe
cmp
dec
mov
in
scas
xchg
jge
jge
adcb
addl
scas
mov
sbb
rorl
dec
cmp
rcrl
mov
aam
add
pop
mov
subl
and
push
cli
cld
leave
out
jle
cld
int
aad
add
jae
jp
mov
leave
add
fwait
jne
cs
fldcw
and
mov
dec
and
rorl
clc
dec
mov
add
pop
pop
adcb
pop
loope,pt
mov
mov
cmp
mov
jae
pop
addr16
test
xor
and
fwait
aad
xor
lods
addr16
jle
fwait
cmpsl
cmpb
xchg
sub
sbb
dec
pop
mov
shrl
ja
lahf
ret
mov
jnp
pop
lret
xchg
mov
out
cmp
lcall
cmc
test
lods
lock
nop
xchg
in
sub
dec
sbbl
out
std
adc
cmp
or
push
repz
out
testl
movb
test
scas
int
jge
mov
rolb
loope
cmp
loop
xor
cltd
lock
pop
int
inc
test
xchg
ret
out
data16
cmc
in
daa
out
test
cmp
lds
cmp
rol
xor
dec
dec
mov
cltd
push
sbb
push
sub
pusha
xchg
inc
dec
roll
inc
xor
fs
icebp
add
fdivs
pop
addl
push
pop
outsl
mov
data16
addr16
jne
pop
testl
shlb
pop
or
mov
and
pop
mov
push
add
daa
cmc
and
pop
jo
arpl
or
or
cmp
scas
out
fwait
daa
push
sti
nop
dec
xlat
jmp
push
dec
aaa
decb
roll
or
mov
repz
dec
inc
cltd
mov
jg
jl
jns
aam
ja
outsb
mov
or
in
jns
repnz
aad
inc
xlat
rcr
mov
out
daa
ljmp
les
inc
stos
leave
mov
shr
imul
inc
dec
outsb
push
xchg
addr16
arpl
xchg
in
idivb
pop
push
ljmp
push
std
pop
mov
push
insb
stos
cltd
mov
jae
push
outsl
cli
rcrb
hlt
cld
shlb
mov
mov
mov
lock
cli
lods
jg
stc
out
cmpsl
cmp
sub
mov
jge
outsl
jecxz
xlat
mov
cmp
jbe
addr16
sbb
fbstp
lds
xor
jnp
mov
xor
adc
dec
sub
pop
pop
cmp
and
repz
or
scas
in
test
mov
lcall
mov
inc
and
mov
addr16
add
pusha
and
std
dec
inc
imul
cmpsl
mov
mov
mov
mov
and
dec
fs
in
mov
jno
mov
dec
jl
jge
mov
xchg
mov
inc
sub
xchg
adc
dec
sbb
es
imul
test
outsl
addr16
xor
adc
xor
fwait
ja
xor
lcall
icebp
loop
lret
out
jae
cmp
mov
shlb
push
mov
mov
and
test
scas
lock
js
xor
int
sbb
push
aaa
ds
mov
pop
ret
xchg
jbe
and
jae
xchg
mov
jmp
pop
icebp
jns
icebp
enter
push
jg
in
jb
xor
vucomiss
or
mov
sub
insl
mov
push
insb
addr16
xchg
push
cmc
sahf
imul
mov
push
rolb
imul
and
scas
inc
stos
fwait
scas
test
jae
ss
sbb
mov
sbb
enter
and
sub
or
xchg
std
outsb
outsb
cwtl
ds
xor
or
xchg
dec
stos
cld
es
sbb
sbb
ret
push
test
sub
aam
loopne
or
jbe
les
mov
lahf
xchg
cmc
cmp
daa
xor
adc
addr16
movsl
jno
jnp
dec
aam
ss
icebp
jecxz
and
test
pop
jg
orb
xchg
ds
adc
and
sbb
sbb
push
fiadds
mov
lret
xor
shr
icebp
add
aad
lds
xchg
out
xchg
andw
inc
rolb
xor
pop
adc
test
sub
loop
adc
out
cmp
loop
push
pop
sub
and
idivb
push
shl
jge
add
or
lcall
filds
aas
mov
xor
mov
dec
mov
shl
mov
and
ret
mov
cbtw
fwait
mov
sarb
mov
jae
lahf
fwait
xlat
push
leave
lds
push
outsl
mov
ljmp
sahf
pusha
and
pop
lock
lret
ja
cmp
or
jmp
pusha
add
xchg
lock
test
test
rcrl
or
cmp
out
enter
lods
testb
cmp
inc
mov
jmp
mov
ret
dec
mov
ja
les
sbb
ret
shr
pop
mov
xchg
mov
push
shl
pop
out
mov
push
in
inc
jecxz
out
in
xor
pop
cmp
xor
cmp
pop
mov
les
and
and
popa
jg
inc
repnz
in
mov
xchg
test
or
call
xchg
push
pop
push
int
incb
rcll
xor
mov
sahf
add
in
adc
nop
lret
jmp
jno
into
mov
movsb
popa
cmc
xchg
imulb
xchg
mov
outsl
les
and
pop
pop
xchg
cltd
rcrb
icebp
add
fwait
lds
leave
loop
scas
stc
jg
test
pop
and
rolb
fdivl
notb
pop
or
jge
dec
dec
push
ja
pop
pop
in
adc
les
shlb
daa
cmp
lock
and
xadd
fistpll
insl
xchg
imul
cwtl
mov
stc
sbb
or
cs
and
cmp
movsl
dec
jg
imul
sub
jns
dec
out
dec
lock
or
jecxz
pop
sub
jae
dec
xchg
insl
ja
fldl
imul
idiv
fldt
push
aaa
fs
and
pop
std
stc
aam
or
jmp
insl
mov
pop
xchg
mov
addr16
stc
sbb
mov
or
sub
mov
loopew
lock
xlat
lods
inc
xchg
add
inc
mov
test
fs
adc
mov
imul
sti
cli
mov
shlb
rol
adc
sbb
pop
loope
dec
addb
mov
lahf
into
sbb
orl
shlb
cmc
or
push
xchg
xchg
jbe
or
cmp
mov
xchg
mov
or
js
out
xor
push
and
inc
js
inc
insl
pop
cmpsb
out
aam
push
lock
push
pop
ja
or
stc
in
cs
dec
aas
push
cmc
hlt
fsubl
sahf
mov
call
adc
jge
jl
mov
aaa
mov
or
lret
adc
jbe
mov
mov
orl
scas
pop
aam
jno
sbb
jae
pop
fisubrs
mov
movsb
inc
aas
push
test
cmp
movsb
pop
lret
loope
idiv
pop
push
int
cmpsl
insl
in
call
cli
jne
fs
fdivrl
adc
ja
in
ret
fildl
or
or
push
ds
pop
pop
repz
shl
mov
cmp
mov
test
push
cs
mov
add
outsl
mov
fmulp
insl
jb
daa
sbb
push
fiadds
fwait
mov
adc
xchg
sub
dec
in
xchg
push
movl
sbb
or
jge
gs
incl
fisttpl
je
insl
test
cli
std
pop
ljmp
inc
popa
jae
sub
mov
adc
sub
movsl
xor
push
cmpsl
shl
sbb
out
stc
data16
push
daa
mov
jb
loopne
sbb
addl
push
insl
ret
or
cs
mov
aaa
das
pop
andl
ret
and
pushf
jge,pt
fs
mov
hlt
popa
xchg
mov
into
leave
push
loopne
and
ficomps
repnz
iret
stos
xor
faddp
pop
xchg
inc
and
mov
pop
and
pop
lret
mov
or
and
inc
notl
das
jbe
sub
xchg
orb
dec
rcrb
call
jecxz
xor
xchg
mov
gs
pop
pop
and
gs
xor
pop
mov
push
subb
inc
fwait
insb
aad
sarb
ss
nop
dec
stos
cmpl
iret
push
scas
mov
lds
frstor
loop
leave
add
sub
fwait
iret
popf
dec
add
push
xor
mov
shl
sub
adc
je
pop
jmp
xor
adc
stos
mov
mov
mov
shrl
inc
cmp
lret
shll
shll
push
js
add
fists
pop
xlat
mov
insb
out
xlat
pop
in
outsb
les
push
push
stos
iret
mov
out
mov
sbb
aaa
stos
mov
out
cmp
insb
cmpsl
push
popa
mov
xchg
sti
insl
inc
outsb
arpl
mov
imul
pop
rcrb
mov
shl
pop
stc
out
adcb
arpl
rcl
cmpsl
inc
mov
dec
rcr
xchg
lcall
out
scas
stc
or
bound
jle
outsl
cmp
repz
lret
iret
push
fs
add
lds
lds
push
daa
out
pop
jno
xlat
xchg
pop
out
inc
test
inc
mov
mov
or
jno
mov
out
xchg
imul
dec
std
jns
int
xlat
pop
out
pop
test
loope
out
jno
inc
push
xchg
ljmp
test
shll
mov
repnz
stos
out
scas
mov
sub
and
ret
cmp
in
mov
mov
lcall
lock
mov
mov
lea
mov
xchg
movsl
stos
cmpsl
icebp
jae
pop
test
mov
test
push
mov
aaa
cmpsl
cs
add
fs
mov
rolb
gs
bound
mov
mov
and
xchg
sbb
add
dec
js
out
scas
insl
loopne
jmp
or
in
mov
jge
jmp
jne
xchg
pop
movsl
addl
int
jae
mov
mov
or
fsubl
mov
scas
jno
cmp
repz
ret
ret
mov
popa
and
inc
frstpm(287
add
fcomps
movsl
xlat
xchg
vcvtdq2pd
pushf
fsubl
dec
mov
fidivs
push
dec
lahf
xchg
dec
jle
outsl
dec
mov
jecxz
inc
and
and
jno
jnp
out
jg
pop
out
outsb
movsl
mov
test
aam
inc
xor
ja
xchg
push
pop
mov
sbb
in
push
loope
add
pop
pop
mov
sub
outsb
dec
mov
in
inc
fs
push
jbe
pop
and
ret
add
outsb
das
out
cmpsb
stc
dec
ret
fidivl
xchg
xor
out
inc
popa
ja
adc
xchg
ja
and
jno
add
fsubs
mov
shlb
fsubrs
lret
stos
mov
jb
lds
addr16
mov
add
ss
cmp
jge
lahf
xchg
mov
or
jl
or
arpl
xchg
xchg
enter
aaa
ret
xchg
movsl
mov
mov
mov
and
mull
inc
fs
jbe
add
dec
rclb
aad
mov
mov
sub
addb
rclb
sub
xchg
sbb
fimull
out
cmc
cmp
mov
mov
and
in
inc
push
imul
aam
dec
pop
scas
push
inc
in
sbbl
cmpl
lea
sub
loope
mov
jae
jmp
or
aas
sbbb
push
mov
cld
shll
jge
scas
in
inc
test
sti
or
fcomi
aam
stos
int
movsl
xchg
das
mov
lea
inc
out
ret
mov
test
pop
push
jle
mov
arpl
scas
cmp
dec
scas
fistpll
rorl
pusha
push
orl
mov
or
xchg
insl
adc
mov
test
xchg
cwtl
out
gs
leave
add
sti
sub
inc
loop
insb
int
dec
addr16
mov
outsl
push
pop
or
jmp
daa
shrb
daa
inc
push
imul
ljmp
add
mov
and
adc
and
mov
test
ja
mov
inc
push
jg
mov
arpl
jns
or
jge
fsub
andb
sti
mov
push
nop
adc
mov
dec
push
sbb
cmp
stc
push
push
xchg
iret
movsb
add
cltd
cmpsl
pop
xchg
adcb
repz
popf
mov
bound
cs
mov
daa
jp
jbe
xchg
and
fs
add
popa
push
dec
sbb
sub
sub
mov
xor
mov
mov
lret
ss
jecxz
stc
in
cmpl
shrb
adc
daa
les
outsl
les
mov
rclb
push
push
add
sar
rclb
mov
scas
loope
dec
lret
mov
mov
bswap
inc
mov
in
repz
mov
xor
inc
in
repz
xchg
push
daa
pop
insl
les
mov
lods
stc
cltd
add
adc
loopne
push
jge
mov
scas
outsl
dec
ret
popa
xchg
test
adc
arpl
inc
jg
hlt
jmp
inc
xchg
and
out
jl,pn
cmc
add
push
dec
mov
inc
sbb
push
pop
in
test
mov
push
aad
fimuls
pop
test
ret
ja
lds
faddp
outsl
pop
mov
inc
in
pop
loop
pop
adc
xor
xor
fisttps
fwait
adc
fidivs
sarb
lock
mov
inc
aaa
push
rcll
and
sbb
ja
push
daa
mov
lahf
pushf
adc
daa
fwait
xchg
adc
lods
stos
mov
clc
xchg
rorb
lahf
fists
cmp
fsubs
into
popa
stc
testb
push
jecxz
adc
stos
mov
mov
mov
into
inc
cmpsb
pop
dec
arpl
loopne
vunpcklpd
lods
lret
mov
jl
sahf
push
stc
inc
inc
cmpsl
fs
sbb
fbstp
push
inc
push
xchg
mov
addr16
cld
mov
push
pop
cmp
icebp
dec
jns
push
fnstenv
and
push
dec
mov
jo
push
sbb
inc
in
pop
rcl
inc
push
jb
test
pop
in
xor
push
jno
lahf
iret
popf
in
and
dec
movl
out
leave
fs
flds
mov
out
sub
push
or
or
mov
rol
mull
dec
or
stc
enter
pop
jle
test
mov
rcrl
aam
adc
out
cmc
les
sti
sub
pop
mov
jnp
lds
test
xchg
test
push
cmpsb
sub
mov
inc
outsl
insb
ret
mov
jmp
dec
iret
fcmovbe
xor
fs
push
into
rcl
jp
jbe
dec
add
fcoml
mov
repz
loopne
and
outsb
rolb
stos
adcb
dec
sub
test
add
test
addr16
loop
inc
mov
je
push
mov
out
sub
dec
imul
mov
or
ja
and
ret
mov
iret
push
cltd
cli
out
push
std
jle
sub
gs
jmp
mov
shl
adc
adc
int
mov
jge
movsb
out
shr
sti
push
rorb
outsb
repz
cli
lds
mov
sbb
cmp
jnp
mov
sbb
test
rorl
cltd
inc
repnz
or
sub
mov
adc
push
mov
mov
fildll
adc
mov
movsb
and
testl
jmp
xor
int
push
and
xor
repnz
mov
and
fs
aam
adc
jno
xchg
and
xchg
cmpsl
bound
ja
push
addr16
pop
mov
out
stc
mov
jo
sub
hlt
popa
jb
mov
lock
pop
ja
push
pop
popf
lea
mov
loopne
mov
popf
popa
cmpsb
sub
sahf
jae
sbb
pop
ret
pop
iret
fcomip
data16
pop
xor
movsb
sbb
fdivp
ljmp
lahf
ja
push
sbb
xchg
fdivs
xor
cmp
add
push
arpl
mov
add
mov
out
xchg
push
rclb
lock
les
add
call
lret
mov
push
push
inc
add
xor
mov
in
fcmovb
out
cltd
cmc
into
mov
xchg
cmp
ret
aam
ss
out
push
adc
test
mov
cld
rclb
cmp
fwait
scas
pop
add
xlat
mov
add
addr16
testb
enter
aad
or
fwait
in
sbb
cli
inc
rcrb
push
rcrl
mov
lret
insl
stos
subb
xchg
jns
shrl
cmc
scas
mov
ja
add
mull
dec
test
pushl
push
lds
addr16
sbbb
xor
jns
cmpsl
add
dec
cmp
xchg
inc
subl
mov
add
outsl
rclb
sbb
pop
test
ret
dec
and
add
cs
adc
push
sbb
pusha
cs
mov
pop
test
divl
mulb
cmpsb
rcrl
dec
jbe
mov
xor
pop
fimuls
pop
jb
sub
push
mov
inc
ss
sahf
inc
stc
repnz
adc
cs
mov
mov
icebp
lods
inc
add
sbb
and
jo
adc
inc
xlat
lea
jae
adc
adc
fdivr
push
inc
sbb
outsl
iret
in
pop
mov
and
push
add
pushl
out
jle
decl
andb
adc
xchg
push
arpl
sbb
sbb
std
dec
cs
jp
ss
cmp
cmp
iret
pusha
sub
data16
pop
xor
fidivrl
imul
and
in
es
inc
ja
pop
xchg
mov
ss
and
adc
add
imul
cmp
stos
movsl
mov
jne
sbb
out
pop
in
arpl
test
nop
jecxz
shll
push
jmp
mov
insb
cmp
fwait
sbb
xchg
pop
rolb
xor
mov
ret
inc
inc
fwait
sub
data16
bound
daa
loopne
loop
sbb
icebp
xchg
repz
pop
fimuls
mov
and
testl
cmpsb
mov
jmp
data16
push
mov
rcr
xlat
and
loope
inc
aam
cmp
jae
and
mov
and
lea
lock
fisubrl
mov
out
les
in
push
pushf
xchg
jns
out
lods
push
mov
cmpsl
mov
pop
ret
push
push
push
mov
mov
into
ret
lock
fwait
jl
xchg
mov
sub
pop
fadd
gs
inc
push
cmpsl
adc
sub
lods
out
push
or
insl
out
add
adc
pusha
fs
and
adc
sub
andl
dec
mov
movl
popa
cmpsl
add
cld
test
cmp
dec
mov
mov
push
test
push
test
ja
lds
inc
out
cmc
cwtl
sub
test
mov
adc
cwtl
movsl
mov
imul
std
ficoms
js
mov
or
sub
loope
or
ja
fs
sub
jb
and
lret
jo
xchg
movl
adc
dec
lock
loope
ja
ja
jnp
dec
pop
inc
lods
mov
xor
xor
std
cli
push
jg
in
movsl
std
notb
push
rcl
cmc
popf
or
or
and
jecxz
sub
xchg
arpl
test
sbb
jg
ret
in
jg
adc
sbbl
xor
mov
xor
jg
inc
or
pop
and
addr16
shlb
cmpsb
bound
add
add
out
xchg
in
insl
jb
mov
dec
inc
out
repnz
int3
icebp
lea
sti
or
pop
addl
ret
xchg
data16
push
sbb
fwait
cmp
rcll
fildll
lahf
inc
xchg
je
scas
adc
clc
xchg
push
in
adc
int
out
ja
outsl
scas
test
xchg
test
aaa
mov
add
pop
fs
jae
push
push
push
or
sbb
daa
ja
int
jo
lock
cld
mov
dec
xor
jmp
popa
and
ss
stos
int
repnz
lods
and
pop
dec
pop
popf
dec
jle
filds
in
out
les
mov
sub
cmpsl
sbb
lods
mov
sub
int3
fldl
cmp
pusha
jge
pop
and
rorb
push
arpl
data16
addr16
pop
mov
mov
mov
ficompl
pop
movsl
data16
insl
sbb
mov
scas
test
insl
xchg
loop
aad
pop
gs
enter
jno
in
test
jmp
daa
outsl
cs
xchg
fdivrp
gs
xor
test
dec
out
lahf
int3
and
xchg
mov
push
sbb
inc
jp
dec
pop
xor
xchg
pop
out
mov
adc
xchg
inc
dec
mov
push
test
fiadds
push
pushf
mov
out
inc
out
xchg
ret
orb
lahf
jg
mov
lods
in
fisttpl
mov
adc
fs
jmp
jne
pop
testb
pop
out
cmp
dec
jne
fidivrs
aad
mov
xchg
jp
or
cmp
push
sbb
or
inc
addr16
fcompl
adc
dec
jne
addr16
push
pop
sbb
or
fimuls
push
xor
pusha
or
mov
dec
sarl
faddl
cmpsl
or
mov
inc
repz
shll
xchg
ffree
test
and
bnd
rolb
sbbl
rorl
or
mov
std
inc
std
cmp
in
rorb
and
aad
arpl
dec
mov
cmpsb
fwait
add
lret
inc
dec
jl
leave
push
leave
aad
and
push
loopne
out
outsl
mov
sahf
jecxz
jl
movsl
and
stos
call
or
or
scas
xor
pushl
and
push
push
into
and
loopne
icebp
xlat
jecxz
or
push
jecxz
nop
fimuls
cmpsl
pop
xchg
jecxz
pop
shl
lahf
sti
ret
icebp
inc
loope
mov
sbb
fucom
iret
add
add
or
ds
mov
in
sbb
push
daa
adc
lret
test
dec
daa
pop
pop
rcrb
out
inc
addr16
aas
pusha
outsb
mov
xor
xchg
xchg
movsb
loop
xlat
insl
jns
ret
shll
or
leave
inc
xchg
inc
mov
scas
dec
and
test
sub
insl
dec
fninit
adc
xor
inc
je
xor
push
push
daa
add
mov
std
or
jns
outsl
lahf
out
sub
lods
mov
xor
sub
out
sbb
inc
loope
mov
cmp
inc
push
and
dec
lahf
xchg
pop
push
xchg
or
cmpsl
test
fildll
int
xchg
fucomp
or
mov
jge
dec
sarl
jae
repz
dec
mov
adcb
inc
inc
and
lret
test
jnp
lcall
data16
stos
js
popf
jl
mulb
mov
and
xchg
inc
popa
test
lret
test
fwait
std
cmp
add
xchg
mov
xchg
orl
jge
inc
mov
mov
mov
sub
jl
mov
inc
aas
jns
pop
cmpsb
fiaddl
std
dec
and
leave
push
add
pop
or
mov
push
push
insb
daa
rolb
inc
sub
dec
mov
popf
add
test
test
daa
push
or
out
mov
dec
mov
push
adc
cld
jecxz
loope
mov
xchg
fidivrs
add
insl
adc
sub
inc
negl
inc
mov
sbb
and
imul
mov
rolb
push
push
mov
test
outsl
push
sub
ret
cmp
sbb
in
cmc
sarb
loope
xchg
sub
test
xchg
inc
xchg
inc
push
mov
daa
lock
pop
push
stos
adc
add
js
test
outsl
shlb
stos
jae
test
lock
notl
add
movsl
cmpsl
mov
jns
cmp
jnp
xchg
mov
bound
test
push
mulb
outsb
adc
adc
ja
sub
mov
gs
or
xchg
mov
stc
aas
test
mov
jnp,pn
scas
mov
notl
leave
hlt
aas
adc
ds
insb
test
popf
pop
ja
xchg
aaa
jg
push
cmpsb
lea
test
mov
popa
xor
xchg
xor
xchg
push
sbbl
xor
ror
mov
iret
xadd
out
mov
lds
out
push
ljmp
fs
out
xor
xchg
in
xor
hlt
inc
push
mov
fildl
aad
ret
adc
push
dec
lea
fnstcw
shll
jae
sahf
dec
stos
pop
lea
jmp
data16
push
das
repnz
xlat
ljmp
daa
cmp
xchg
or
icebp
mov
cmp
sbb
add
mov
xchg
imul
bswap
sbb
addr16
les
mov
add
jge
loope
test
ljmp
mov
jne
lock
push
addr16
cli
fisubs
dec
push
enter
add
inc
mov
ljmp
addb
or
push
sbb
insl
push
xor
fnstcw
gs
dec
aaa
xchg
and
pop
pusha
rorb
sub
cmpsb
sahf
jbe
imul
xlat
mov
push
aas
jl
shlb
mul
mov
iret
negl
call
out
push
out
xor
jb
jbe
out
jg
adc
xchg
cmp
add
scas
pusha
sub
in
adc
ds
lahf
mov
or
ja
xchg
cmp
test
xchg
pop
test
sbb
test
out
cmc
into
or
jle
js
shrb
pop
mov
repz
hlt
stos
into
ja
js
adc
inc
add
lods
jmp
jno
pusha
jnp
jmp
movsb
push
sbb
jmp
insl
out
push
subb
cmpsl
dec
inc
pop
pusha
test
fistpll
sub
jno
push
fwait
and
scas
xlat
adc
test
add
or
pop
mov
insl
mov
cmc
inc
shl
test
jp
ja
stos
adc
xchg
sti
sub
inc
mov
iret
push
scas
test
pop
jg
pop
lods
jns
sub
xchg
out
push
or
cmpb
inc
cmc
das
jne
sub
out
fwait
daa
mov
add
cmpb
nop
mov
mov
test
ret
shll
out
lods
cmp
mov
outsb
imul
pop
shll
sbb
inc
push
shrl
mov
iret
or
cs
mov
pusha
sub
pop
sbb
daa
xor
and
mov
ror
lcall
mov
loope
xlat
cmp
xor
cs
lods
push
gs
insl
out
icebp
scas
gs
mov
xchg
outsl
pushf
test
test
push
mov
push
in
push
pop
jg,pt
jp
imul
add
mov
in
jge
aam
push
cmc
mov
inc
iret
shl
and
aaa
sahf
int
aaa
xchg
cmp
imul
sub
aaa
cmp
sub
pop
scas
out
es
add
xorb
lds
rcrl
xchg
cmp
sbb
mov
fsts
ds
testl
mov
xchg
sahf
fistpl
or
lods
mov
sbbl
xor
stc
out
rclb
insb
xlat
fbld
stos
int
arpl
out
and
xchg
arpl
out
stos
ror
pop
mov
cmp
imul
scas
add
xorl
and
aas
jl
es
and
imul
pushf
sub
cli
and
pop
out
sti
sbb
into
movsl
in
xchg
int
imul
jne
decb
mov
fstl
mov
sbbl
jo
imul
dec
in
js
sbb
daa
jle
arpl
pop
mov
sbb
dec
test
sbb
dec
mov
incl
dec
mov
sub
mov
mov
jmp
xchg
jge
arpl
int3
or
int3
shlb
cs
jecxz
cmp
inc
jle
pop
mov
cmp
pop
or
push
in
imul
test
test
aam
std
sbb
lahf
cmc
insb
fldt
pop
push
iret
sub
stos
dec
inc
dec
cmp
ja
movsl
fwait
cmpsb
dec
mov
jl
add
and
mov
pop
jb
mov
fisubs
out
fwait
lods
loopne
sbb
arpl
pop
mov
sbb
outsl
divl
dec
je
inc
out
lds
test
xor
mov
push
gs
addr16
jnp
jbe,pt
std
mov
addl
mov
jmp
mov
adc
mov
push
mov
movsl
scas
stc
out
jecxz
cmpsb
aas
cmpb
arpl
cmp
test
mov
add
xlat
xchg
les
jmp
fsubl
add
test
mov
add
mov
bnd
mov
in
xchg
ds
inc
repz
ficoms
scas
iret
popa
or
cmpsl
in
push
mov
cmp
or
push
outsb
data16
pusha
adc
pop
movsb
dec
adc
test
movsb
ret
add
dec
enter
adc
cmp
cltd
mov
fstps
or
test
pop
call
jnp
aad
inc
rclb
lea
int
test
repnz
dec
mov
outsl
mov
add
sti
mov
or
iret
mov
pop
inc
mov
lods
pop
sub
pop
jecxz
daa
data16
push
sub
sub
xchg
daa
mov
test
pop
and
je
push
pop
mov
imul
lahf
inc
fsts
cli
scas
into
and
imull
fs
lods
jl
pop
ficoms
mov
sbb
sub
cmp
and
rcr
mov
loop
and
filds
mov
stc
mov
js
jae
repnz
cmova
mov
test
xlat
repz
pop
in
sbb
insb
cmc
fdivl
movsb
xchg
mov
daa
jno
jge
fistps
adc
xor
scas
xchg
cmp
mov
xchg
pop
xchg
adc
push
mov
dec
pop
nop
clc
iret
sarb
cmp
jne
fucomi
dec
mov
das
jbe
adc
xchg
ret
push
jne
cmp
movl
je
fisubs
stos
xor
fildll
enter
in
xor
inc
les
mov
xchg
jb
add
or
ljmp
fs
out
test
in
cld
pop
add
das
mov
ja
test
dec
leave
ja
out
jb
stos
fwait
push
push
xchg
push
mov
or
loope
testb
mov
rol
add
jne
lcall
loopne
test
add
mov
pop
pusha
xchg
lods
mov
xor
dec
jae
lds
xchg
stos
xchg
addb
sub
imul
pop
sbb
mov
jno
sahf
ja
jecxz
out
or
mov
adc
faddl
mov
loop
inc
and
xchg
jno
add
sbb
mov
rcl
push
and
loop
in
into
stc
jle
int
jp
mov
iret
lcall
popf
inc
jo
lock
lret
and
in
popa
mov
jg
jmp
movsl
int3
sub
xchg
shlb
adc
xchg
dec
cs
mov
fs
sbb
sarl
arpl
test
test
adc
add
inc
mov
popf
mov
test
jge
pop
jg
pop
adc
fdivs
fmuls
mov
movsl
dec
or
repz
ja
push
jl
mov
cmpsl
lahf
mov
sahf
pop
sbb
pusha
mov
test
cmc
inc
or
gs
mov
xchg
and
mov
mov
es
and
pop
jg
cmp
lds
add
arpl
inc
bound
out
pop
push
adc
sbb
add
mov
pop
push
mov
push
outsb
clc
xchg
jbe
mov
xchg
dec
or
or
pusha
test
lock
les
or
rcrb
dec
mov
sub
out
mov
ss
lock
shrb
test
add
negb
adc
icebp
and
or
out
out
das
js
loop
in
mov
jae
mov
push
jle
mov
inc
les
add
scas
mov
cmp
in
cs
les
sahf
xor
cli
in
daa
addr16
inc
xor
ss
pop
cmc
jle
das
sub
dec
or
imul
push
test
addr16
sahf
test
mov
notl
dec
lret
dec
addl
sbb
jmp
and
pop
movsb
lcall
stos
push
sbb
mov
xor
mov
push
push
cmc
ret
cmpsl
arpl
and
or
sub
xor
dec
mov
and
push
lret
and
in
inc
jb,pn
push
fdivs
jecxz
mov
loop
cmp
aad
adc
and
or
test
nop
lret
lcall
mov
scas
leave
sbb
fstl
jge
ds
sub
call
sbb
jbe
in
scas
xor
cmp
pop
inc
lods
lock
mov
pop
push
gs
adc
dec
lret
add
out
cmp
mov
in
daa
daa
test
sbb
lock
ret
mov
cli
clc
bnd
gs
cmp
mov
inc
mov
insb
in
or
ret
cmp
pop
loope
sbb
test
imul
out
fisttpl
lods
cmp
rcrl
data16
cmpsl
addr16
inc
ljmp
mov
ja
bound
js
mov
ss
test
cmp
inc
jl
xchg
jg
mov
inc
jmp
aas
mov
add
out
fwait
pop
test
pop
dec
arpl
mov
pop
hlt
push
pop
outsl
or
js
push
out
xchg
xor
mov
xor
dec
sub
cmp
mov
fwait
lret
int
jo
rolb
push
scas
mov
dec
mov
inc
insl
add
fs
mov
test
mov
lock
push
jne
dec
fs
xor
jnp
xchg
push
repnz
dec
xchg
xor
pop
into
add
ja
lea
sub
and
push
push
scas
or
enter
cmp
mov
stos
sahf
les
dec
dec
mull
pop
sbb
test
mov
imul
call
orb
sbb
pop
movsb
and
test
in
pop
iret
shlb
adc
add
push
pop
add
cmpsl
jo
stos
pop
ret
out
or
rcl
jnp
sarb
aad
add
imul
lods
ljmp
sahf
push
push
and
pop
insl
cli
xor
pop
iret
xor
fisubrs
stos
adc
out
stc
pop
scas
adc
pop
sbb
sub
and
cmpsb
leave
pop
nop
pop
daa
popa
jns
adc
daa
frstor
subb
jns
scas
xor
std
add
pop
sahf
popf
test
push
pusha
out
cmp
fwait
es
scas
mov
xchg
roll
test
adc
inc
sbb
inc
and
cmp
push
jge
inc
jb
ficomps
dec
aam
and
cmp
dec
jbe
inc
dec
faddp
in
and
outsl
push
mov
jmp
test
test
and
jnp
jg
and
inc
cmp
pop
jge
test
mov
dec
mov
test
aam
xchg
mov
jno
add
aad
daa
mov
fisubs
add
ja
dec
xlat
in
inc
add
andl
out
pandn
in
das
mov
dec
das
xor
sbbl
outsl
cmc
les
cmpsl
xor
jp
mov
mov
dec
loope
dec
ja
fistl
fisttpl
int3
or
inc
les
sarb
negb
inc
cmc
or
jp
je
inc
int
push
xchg
add
or
sarb
jne
mov
sbb
adc
or
out
into
add
inc
daa
movsl
dec
ja
xlat
fwait
mov
dec
out
mov
xchg
aam
add
sarl
into
inc
jmp
flds
push
dec
out
pop
test
sub
scas
into
add
cmp
mov
jge
xchg
xor
push
daa
cmpsl
pop
lahf
addr16
outsl
stc
ds
out
imul
out
in
add
test
mov
cmpsb
xor
jmp
test
rorb
mov
jb
fmull
pop
cli
xchg
ret
pop
mov
mov
mov
in
pop
fucom
in
mov
repnz
popl
cmc
cld
rol
pop
aad
pop
iret
ja
out
mov
sub
es
out
add
cmpsb
mov
ret
outsl
das
mov
fld
aas
ret
lretw
sbb
lret
sbb
add
stc
out
xchg
in
popa
inc
out
daa
scas
les
dec
push
sbb
mov
sahf
rclb
dec
iret
sub
dec
loopne
mov
sbb
sub
insl
les
outsb
or
shrl
call
push
arpl
leave
xor
scas
pop
into
or
pop
sbb
xor
cmpl
adc
xchg
mov
icebp
in
scas
and
rcr
dec
inc
std
push
inc
ja
cmp
pop
imul
mov
test
addb
mov
fiadds
shlb
rorl
sbbb
into
cli
inc
fstpt
outsl
movsl
sbb
or
mov
rclb
add
add
mov
add
cmp
fdivr
mov
mov
mov
mov
cmp
imull
mov
stc
dec
xor
cmp
test
and
icebp
out
dec
sti
leave
into
negl
and
imul
cli
push
mov
and
scas
lds
push
add
jg
fs
pop
xchg
add
in
les
negl
daa
roll
xor
popl
insl
out
aas
out
testl
inc
sub
out
stc
outsl
arpl
insl
pop
incl
jnp
ret
dec
in
mulb
loopne
testb
add
je
push
mov
sbb
cmp
jmp
sbb
lds
shr
pop
mov
lahf
scas
subb
jnp
fistpll
xlat
xchg
inc
out
xor
insl
dec
jmp
sbb
jmp
out
lds
scas
mov
cmp
and
shlb
add
sbb
sbb
arpl
movsb
push
sbbb
cmp
mov
gs
stc
aaa
lret
mov
cmpl
push
inc
sbb
mov
cmp
jnp
inc
push
pop
bnd
mov
and
sub
data16
pop
xchg
sahf
stos
jl
jmp
inc
pop
scas
stos
ret
mov
mov
scas
xor
repnz
and
push
inc
jg
and
lret
mov
cmp
jp
mov
test
dec
idivb
pop
jmp
jns
lods
repz
sbb
or
repz
aas
sar
and
mov
aas
rcll
lahf
jo
jecxz
in
addb
mov
jbe
inc
fsubrp
jle
hlt
test
mov
push
pop
jae
clc
rol
outsl
shlb
repnz
mov
xchg
inc
push
and
jle
in
sbb
and
jg
not
mov
xchg
mov
lds
sbbl
mov
out
popa
out
arpl
popf
repnz
insb
mov
cwtl
sub
pop
jecxz
fistl
lcall
std
outsl
fisubrs
lret
daa
dec
frstor
fsubp
das
out
les
fidivl
and
es
add
inc
daa
fucom
pop
cmc
es
cmpsl
les
lret
pop
inc
lret
or
mov
cmpsb
nop
sahf
pop
mov
xor
outsl
outsb
pop
mov
xchg
scas
scas
mov
cmp
mov
es
push
cmp
fildl
icebp
push
sarb
dec
and
sbb
adc
add
ja
or
lods
sahf
test
cmp
dec
adc
jl
mov
sar
rclb
xchg
cmp
push
mov
pop
jl
in
xchg
xor
xchg
xor
ja
leave
jg
xchg
cmpl
in
adc
repz
adc
sbb
in
cmp
mov
dec
daa
loop
and
mov
insb
repnz
lcall
inc
push
jmp
sarb
aad
ja
mov
mov
test
jae
test
mov
pop
add
fs
in
out
jecxz
gs
push
movsb
add
test
sub
add
jecxz
fldt
add
gs
fs
mov
aad
mov
xor
ljmp
out
adc
add
frstor
sarl
sbb
sbb
push
stos
pop
mov
icebp
inc
lds
jmp
pop
cmc
int
fwait
rolb
in
jo
push
jae
mov
jecxz
stos
mov
pop
test
dec
mov
into
loopne
add
pop
xlat
dec
in
roll
shll
add
add
and
fimull
sbb
mov
scas
std
ret
pop
mov
loopne
sub
fisttpl
xchg
cmp
sbb
aas
test
mov
fdivs
orl
pop
aad
pop
mov
test
jne
ja
rcr
and
pop
jl
mov
shlb
push
lcall
push
sbb
pop
fwait
pop
popa
jne
or
ret
sahf
pop
sbb
pop
clc
test
sqrtps
and
cltd
hlt
jnp
add
add
and
jge
pop
jb
dec
loopne
out
leave
pop
jg
xor
sbb
test
out
push
fwait
sub
mov
xchg
mov
add
or
xlat
or
and
pop
imul
push
xlat
xchg
sbb
ror
test
push
mov
pop
test
fidivrl
in
jle
jmp
adc
imul
stos
stc
test
lds
cmpsl
aas
xchg
or
inc
xchg
xchg
adc
loop
aad
and
pop
jmp
push
ss
fidivrl
jle
mov
daa
sti
mov
mov
call
mov
aad
xchg
ja
push
les
mov
add
addr16
push
dec
in
mov
mov
cld
cmpsl
test
mov
lahf
sahf
and
int3
and
push
cmp
pop
xlat
ja
mov
insl
inc
ss
lods
dec
insl
xchg
push
lds
jae
ds
je
mov
mov
int3
sub
pop
gs
sbb
adc
dec
inc
insb
lods
lds
adc
loope
lds
testb
sbb
sub
sbb
cmp
in
jp
scas
jns
test
dec
in
cmpl
inc
lds
dec
es
xlat
jbe
jo
cmp
aaa
test
or
sub
xchg
mov
jge
dec
jne
adc
imul
cmpsb
mov
mov
popl
cmp
ffree
jb
push
inc
and
shl
filds
lret
mov
fistl
rol
sbbl
sbb
fsubs
xchg
jnp
xchg
xlat
adc
aaa
data16
pop
pop
movsb
xchg
or
jne
xchg
inc
mov
cmpsb
testl
repnz
xchg
rcrb
add
inc
and
mov
xlat
inc
cmpsl
and
les
lahf
rcrb
test
loopne
imul
shl
adc
es
gs
jecxz
cmp
clc
xchg
pop
movl
sti
loop
cmp
xlat
inc
scas
push
jbe
sub
pop
loope
sub
lret
or
clc
sbb
imul
add
cltd
out
push
push
repnz
mov
jnp
dec
ss
pop
adc
xchg
push
pop
or
and
ror
cltd
jno
dec
into
mov
sbb
int
shll
jmp
sub
inc
sub
mov
adc
jne
xchg
jle
out
cmpsl
movsl
stos
pusha
hlt
bound
mov
stos
sbb
cmp
xchg
dec
dec
jmp
outsl
xor
js
mov
jl
std
daa
ds
repz
pop
test
fs
pop
mov
pop
xchg
push
rorb
add
add
ja
and
pop
in
dec
mov
arpl
lret
addr16
fstps
mov
and
into
or
jge
inc
mov
pusha
aam
mov
shl
test
out
push
adc
push
imulb
in
repz
and
test
cmpsl
test
rcrb
mov
pop
xchg
add
lock
add
xchg
cmpsb
sahf
mov
xor
fs
pusha
icebp
int
outsb
adc
les
mov
rclb
push
mov
in
aam
dec
mov
test
out
adc
dec
inc
mov
bound
xor
push
shll
add
dec
inc
std
mov
leave
mov
sbb
mov
lahf
add
mov
mov
movsl
clc
cs
inc
mulb
push
cmp
jge
jb
push
pop
mov
test
or
sahf
cmpsb
fwait
xchg
xchg
out
jo
mov
rcll
lahf
or
in
add
sub
dec
insl
loope
popf
into
push
arpl
mul
dec
mov
or
adc
les
mov
fbstp
sti
adc
loopne
aas
xchg
xchg
jg
jg
jg
cltd
mov
leave
xchg
stos
jge
call
mov
cmp
test
jl
fs
inc
mov
je
into
std
in
jae
aaa
inc
jmp
push
movsb
pop
xlat
dec
mov
lcall
addb
movsb
popa
fldenv
fmuls
lahf
xor
adc
mull
rorl
sub
adc
filds
sbb
outsl
xlat
cmp
lods
cli
add
pop
sbb
sti
ds
daa
fs
xchg
ffree
frstor
in
xchg
jg
in
xor
cltd
dec
insl
outsb
pop
je
adc
jg
mov
fiadds
sbb
jl
inc
jp
jmp
ljmp
mov
fidivl
ds
shl
jmp
jae
loop
jbe
inc
lds
jecxz
and
pop
movsl
cmp
mov
and
xor
lcall
adc
cs
insb
dec
jl
or
lahf
fwait
dec
shl
pop
std
insb
push
sub
in
mov
inc
pop
and
inc
fs
lret
jae
out
cli
xchg
mov
sub
sub
pop
cli
fidivrl
and
test
push
sbbl
mov
cmp
stos
cli
movsb
and
push
daa
cmp
pop
jbe
mov
dec
add
mov
push
fs
xlat
arpl
inc
fsts
repnz
mov
fdivrp
adc
jg
lods
popl
outsl
xor
push
pmulhw
rcrb
adc
sub
mov
fcom
and
test
jl
icebp
mov
jbe
test
xlat
inc
xchg
cmp
sbb
inc
mov
daa
dec
sbb
sub
jns
push
loope
sbb
fstps
pop
loope
testb
adc
pop
addr16
jecxz
jo
jno
fnstcw
mov
pop
jns
imull
out
mov
adc
fwait
mov
cmp
std
leave
movsb
cltd
out
pop
ret
mov
fimuls
fimuls
dec
nop
stc
in
or
ffree
bound
icebp
adc
lock
fucompp
lahf
dec
adc
aas
add
dec
test
stc
mov
or
xchg
push
mov
int3
cmpsl
inc
insb
pop
cltd
aaa
orl
xchg
movsl
mov
test
ds
cmp
iret
inc
pop
fs
fcmovnbe
lcall
int
jae
orl
sub
iret
fwait
sbb
add
dec
imull
or
dec
xor
shlb
fidivrl
lahf
test
pop
popf
ljmp
cmpsl
fiadds
outsl
dec
rcl
mov
sarb
nop
cltd
sahf
loop
movsb
iret
fwait
adc
lods
subl
sti
adc
adc
add
jae
shr
jbe
xchg
std
daa
xchg
dec
dec
fs
xchg
lds
out
push
inc
cwtl
daa
js
mov
stc
out
sbbb
sub
das
out
shlb
xchg
cmpsb
lret
add
mov
push
dec
imul
dec
ficompl
pop
pop
sarl
fidivs
jmp
cwtl
push
dec
jns
addr16
fists
or
jae
or
out
icebp
or
sub
xorb
sbb
addr16
mov
ret
adc
push
pop
dec
lahf
xlat
jp
iret
aaa
mov
lcall
pop
and
js
sahf
cmp
mov
sarl
iret
enter
aas
mov
stos
and
add
pop
into
jo
fs
mov
mov
cmp
push
fistl
stc
dec
add
sbb
or
sahf
aad
hlt
ret
repnz
mov
fbstp
add
fs
xchg
jl
repz
xchg
add
sbb
lret
sbb
mov
jmp
push
inc
pop
adc
arpl
aas
dec
into
fs
xchg
inc
cmpsb
cmp
lods
inc
push
pop
jle
add
adc
pop
outsl
popa
push
iret
push
divl
dec
movsl
test
adc
fisubs
fsub
mov
pusha
pop
sub
xchg
fildl
adc
scas
jbe
aad
not
jg
iret
aad
fildl
adc
jae
jo
jle
addr16
cwtl
test
imul
lods
dec
aad
rcll
or
jle
xlat
or
push
pop
or
les
lods
in
jp
mov
xchg
add
jo
mov
cmp
fisttps
repnz
adc
loopne
movsb
test
sti
ja
sbb
mov
pop
xlat
test
rcrb
xchg
adcl
data16
xor
sahf
jnp
dec
in
push
mov
iret
mov
jbe
fs
pop
adc
cmpsl
nop
in
jmp
sahf
dec
jbe
push
cli
mov
repz
mov
lahf
in
lahf
ja
adc
pop
mov
out
ljmp
iret
inc
mov
mov
mov
mov
sarl
sub
ret
push
adc
incb
out
jl
mov
xchg
rolb
ss
xor
jnp
out
bound
xchg
inc
cli
das
push
cld
xchg
mov
pop
jae
jne
ret
andb
adc
push
inc
ret
das
dec
and
pop
dec
ds
sahf
mov
mov
std
call
cli
adc
shl
mov
add
nop
sbb
pop
es
icebp
xlat
rorb
test
addb
pop
mov
dec
fwait
mov
js
fldt
sbb
sub
jbe
sbb
adc
sub
in
push
or
mov
daa
adcl
pop
scas
or
pusha
loopne
cmpsl
scas
stos
push
gs
out
push
adc
sarb
lret
daa
fstpt
stc
movsb
adc
clc
jp
pop
daa
out
inc
out
fninit
imul
cmp
cmp
mov
lock
idivl
stos
mov
mov
push
outsl
sbb
inc
fsts
xor
inc
cmp
pop
adc
mov
jg
les
mov
out
add
add
sub
cwtl
out
mov
cmc
lea
mov
out
out
pop
ds
int
push
xchg
pop
dec
fimuls
mov
xor
jns
cmp
lahf
pop
ljmp
dec
popa
fxam
mov
cld
addr16
fmull
xchg
cmp
scas
rcr
test
fiadds
pop
inc
mov
gs
jmp
sahf
out
jg
lock
pop
mov
dec
lahf
mov
es
out
inc
jmp
in
pop
leave
mov
icebp
inc
mov
bnd
ss
or
unpcklps
mov
push
test
xor
pop
mov
test
cli
jle
sbb
sub
sbb
pop
inc
popf
rcr
repnz
push
sahf
cmpsl
aam
flds
cmpsb
cwtl
into
adc
push
push
mov
mov
dec
inc
mov
out
dec
cmpsb
mov
and
rep
scas
pusha
lea
mov
fdivrp
cmp
add
dec
test
sbb
dec
push
jb
and
fstl
cld
jno
inc
push
inc
scas
leave
dec
add
incb
ret
sbb
or
inc
aas
insl
stos
adc
dec
jbe
int
inc
test
std
mov
lret
push
inc
dec
scas
jmp
subb
ret
mov
scas
sar
push
hlt
in
push
repz
push
or
or
and
jecxz
pop
sub
popf
cmpsl
push
inc
out
mov
mov
xor
push
shrb
jns
test
dec
pop
adc
out
mov
sti
popf
jmp
push
test
imul
pop
mov
pop
pop
adc
pushf
je
xchg
xchg
ret
sub
ja
or
insl
stos
outsl
xchg
add
ja
cmp
ljmp
cltd
add
loopne
imul
inc
jmp
mov
cltd
jecxz
inc
cld
mov
mov
fcmovbe
mov
mov
cmp
xor
out
xchg
rcr
das
movsl
test
push
icebp
mov
fldenv
cmpsl
fildll
in
pop
lods
push
sub
xlat
sub
ds
cmp
test
mov
xchg
subl
dec
push
fwait
es
push
iret
cmp
or
lods
inc
mov
ja
push
inc
xchg
fstpl
or
shll
dec
jns
gs
ljmp
mov
ljmp
cmpsl
iret
xchg
sbb
xor
pop
push
shrb
aad
xlat
ret
pop
mov
in
pop
int
pop
aaa
addr16
mov
cmpsb
popf
jmp
out
movsl
mov
add
push
rorb
xchg
cmp
dec
push
scas
pop
aam
mov
xor
movsl
repnz
into
inc
and
mov
das
mov
bound
aam
aad
in
arpl
lds
in
in
stos
jns
add
imulb
faddl
sub
pop
not
jns
ds
stos
ficoml
out
test
cmpb
fldt
and
add
jp
ja
mov
or
add
xchg
ds
dec
xorb
movsl
aad
pop
out
or
ret
enter
add
xchg
cltd
movsb
mov
inc
push
xchg
jno
inc
test
scas
inc
mov
cmp
rolb
dec
in
mov
xchg
pop
subl
cmp
inc
jge
les
dec
jle
sbb
loop
lcall
js,pn
cmp
test
or
push
xor
mov
ja
or
inc
addr16
out
adc
popf
or
and
out
sub
fwait
sbb
and
pusha
out
sbb
clc
fisttps
mov
push
xchg
pop
inc
cli
xchg
iret
and
dec
mov
out
scas
aam
push
pop
lods
mov
clc
lods
fs
nop
lds
sub
jmp
addr16
ja
xchg
out
aas
test
movsl
aaa
jne
addr16
out
mov
sub
aad
gs
scas
mov
inc
xor
outsl
shlb
pop
or
fwait
jmp
icebp
mov
into
mov
inc
jnp
stc
xchg
jne
inc
xchg
in
daa
jb
mov
rcr
cmpsl
mov
adc
lods
jmp
scas
cmpsl
inc
xchg
mov
rol
or
cmc
daa
cli
movsb
and
pop
push
shr
enter
int
into
subl
push
push
push
adc
lods
hlt
testb
fsts
cld
repnz
je
or
mov
int
jecxz
inc
mov
sub
dec
data16
adc
ja
push
pop
fisttps
adc
add
rcr
callw
mov
sub
jmp
push
outsl
cltd
addr16
scas
dec
lcall
lahf
outsb
mov
dec
aad
mov
adc
out
adc
lret
aas
dec
out
addb
sbb
addr16
add
xchg
cs
movl
jge
push
mov
mov
adc
hlt
dec
sbb
nop
popf
push
inc
rcr
and
push
fsub
cwtl
or
push
pop
rorb
roll
cwtl
test
fs
adc
je
jne
mov
gs
inc
andl
push
pop
in
out
cs
push
aad
dec
lcall
pop
lods
xor
dec
fdiv
fadds
movsb
or
rcrb
hlt
mov
ss
ds
out
and
inc
mov
lods
inc
bound
cmp
mov
loop
cltd
jmp
out
loope
stos
jne
sbb
orl
sbb
and
or
jl
icebp
cmpsl
xchg
movsl
in
addl
shll
outsl
aas
xchg
mov
aaa
lds
aad
mov
loop
fsubs
movsl
jb
dec
xorb
xor
lahf
cmpsb
lcall
loop
mov
aad
fimuls
jne
push
mov
and
fs
outsb
mov
out
mov
sti
cmpsl
dec
rclb
push
icebp
shrl
or
pusha
pop
jo
jecxz
or
and
ds
or
xchg
outsb
mov
jecxz
dec
pop
xchg
mov
dec
sahf
mov
xchg
cltd
pushl
repz
fwait
or
pop
loop
xor
and
fldt
insb
sbb
shr
out
inc
cmp
out
ficoml
or
outsl
out
stc
jns
pop
fsts
xchg
cmp
repz
pop
and
test
xchg
push
cmp
lahf
addr16
cmp
das
into
mov
mov
lahf
pop
mov
scas
push
jno
cltd
into
push
push
ret
mov
ror
out
int
ficompl
fidivs
mov
jecxz
mov
clc
cli
leave
mov
dec
in
jo
push
cmc
fs
gs
aaa
scas
fmull
adc
addr16
fisubrs
push
dec
aaa
push
inc
or
add
xlat
push
shlb
test
les
cmpsb
dec
or
mov
out
rcrl
outsb
loop
or
xchg
imul
repz
adc
in
test
lahf
jns
cli
sbb
mov
scas
adc
addl
test
inc
clc
jecxz
inc
inc
int
xchg
xor
jmp
les
cmp
frstpm(287
loop
sbb
xchg
outsb
mov
fwait
mov
addr16
jge
out
ret
ret
loope
loopne
xchg
loope
jnp
shrl
sbb
out
xchg
mov
out
jb
mov
cmp
jecxz
in
and
mov
cli
cmpsb
jnp
pop
push
add
xchg
lret
xchg
orl
test
and
adc
xchg
loopne
inc
in
test
mov
jg
addr16
add
jae
sahf
xlat
xchg
xchg
ret
jle
sbb
pop
lret
pusha
int
gs
incb
pop
popa
pop
divb
lock
push
mov
lret
or
or
les
xchg
out
jge
sbbl
icebp
test
rorl
push
test
das
es
xor
std
test
shl
into
stos
xlat
out
loope
rclb
lret
idivb
rcl
push
sbb
jle
out
lods
sbb
xlat
inc
dec
cmp
push
lret
lahf
push
cmp
movl
pop
nop
outsb
mov
cmp
adc
xlat
push
pop
pop
test
inc
pop
and
sub
xchg
sbb
mov
rcl
jge
lahf
jo
jg
sti
testb
loop
test
mov
sahf
rolb
xchg
mov
arpl
fwait
insb
push
lcall
mov
sub
js
adc
xor
mov
cmp
mov
movsl
push
stos
or
call
ja
out
jnp
aam
mov
dec
sub
inc
movsb
fwait
test
insb
std
jnp
sub
adc
dec
lahf
test
popa
add
dec
sbb
ja
mov
inc
fisttpl
jmp
mov
inc
outsb
sti
dec
jns
cld
xchg
iret
adc
pop
cld
lret
xlat
data16
jecxz
xchg
repz
fisubl
xchg
push
mov
outsb
inc
aam
lahf
ja
inc
add
or
xor
jmp
xchg
scas
lahf
pushf
ds
scas
pusha
add
xor
mov
inc
xor
leave
lds
mov
fwait
mov
adc
faddl
sbb
jmp
jns
push
cld
push
ja
pop
fildl
popa
rolb
mov
and
cmp
in
push
pop
scas
mov
hlt
out
xchg
sub
jecxz
push
std
inc
add
mov
pop
xchg
push
fs
sbb
pusha
inc
rclb
pop
daa
mov
adc
je
pop
jp
fiaddl
leavew
aam
mov
push
push
cli
push
testb
push
push
out
loopne
scas
stc
mov
sub
jle
sti
cmp
test
ret
stos
jmp
inc
lds
mov
cltd
addb
xor
andb
sub
inc
mov
push
xlat
shll
inc
ds
fistl
pop
fstp
or
sbb
mov
mov
inc
int
test
fwait
mov
add
sub
mov
mov
cmpsl
inc
jae
dec
test
fmull
adc
lds
mov
xor
fstpl
ret
aam
jmp
arpl
rcrb
xor
cs
pop
jle
cmp
xlat
mov
lds
mov
xchg
ja
outsb
or
jge
push
rol
add
cmpsb
pop
push
loope
mov
js
call
lock
in
pop
test
mov
jmp
scas
icebp
inc
inc
fs
push
xorl
xchg
cs
icebp
fs
mov
test
aas
add
test
rcr
or
dec
mov
dec
ss
jne
mov
imul
mov
jmp
ja
adc
leave
jae
repnz
and
push
sbb
mov
push
dec
test
jo
push
push
mov
cmp
inc
adc
out
testb
test
jae
lds
aad
icebp
cmpsb
je
mov
stc
popa
mov
je
mov
andl
mov
stos
lds
pop
insl
stos
and
pop
or
xchg
xchg
inc
insb
push
sbb
mov
push
mov
aas
sahf
mov
shrb
arpl
pop
pop
cli
push
sub
lock
add
fstpl
jo
test
xor
out
xlat
cli
push
add
std
shrb
movsl
push
add
inc
inc
mov
xchg
les
loope
mov
inc
pop
pushf
mov
lock
push
mov
and
pusha
stos
mov
outsb
ja
dec
ret
cmp
adcl
mov
out
cmc
sub
cmp
jp
xchg
pop
clc
mov
std
jb
mov
jge
or
adc
arpl
ja
add
xchg
fucomp
mov
fdivl
orb
adc
jl
lods
and
test
mov
sahf
push
lock
mov
imul
test
push
jb
fstl
push
lcall
push
ss
in
pop
mov
mov
aam
scas
inc
loopne
into
pop
loope
add
or
test
stos
rorl
add
jns
inc
cmc
adc
outsb
xchg
cmp
frndint
nop
jp
inc
mov
insl
mov
into
cmpsl
xor
outsb
push
mov
add
ds
pop
lret
jmp
mov
mov
hlt
pop
adc
mov
outsl
xor
rcll
jne
pop
cmpsb
fidivs
pop
jecxz
imul
aas
xlat
outsb
in
cwtl
mov
push
fs
mov
movsl
fsubrp
xchg
cwtl
je
lea
pop
shlb
dec
mov
push
fidivrs
decb
iret
xchg
pop
push
adc
or
daa
stos
hlt
clc
push
pop
aas
in
push
lcall
sub
cmp
jge
test
sbb
cmp
cmp
or
out
xlat
pop
xchg
insl
call
sti
sub
aaa
jae
sub
mov
outsl
adc
mov
or
in
adc
pop
leave
fsubp
xor
pop
gs
lock
lock
rcll
mov
mov
sub
mov
and
popl
xor
dec
push
jbe
pop
or
jp
jno
mov
xlat
daa
pop
das
push
addr16
sub
ja
jp
icebp
imul
jae
xchg
xchg
dec
add
ffreep
add
dec
sub
ficompl
fsubs
shll
fs
sbb
fcoms
mov
nop
push
inc
ret
sarb
or
cmpsl
nop
cmp
pushf
ljmp
push
fimull
icebp
cmp
or
mov
orl
jb
or
in
lock
push
pop
inc
mov
dec
cmpb
inc
ja
xor
pop
xor
iret
mov
push
test
dec
fidivs
insl
mov
or
test
xlat
mov
mov
daa
nop
cmpsb
jl
jecxz
fs
push
mov
dec
lods
or
and
push
repnz
push
cmpsl
push
pop
and
aaa
jns
jne
sbb
lods
jmp
pop
aaa
cmpsl
daa
std
add
leave
cs
pushf
push
add
or
dec
pushf
and
addr16
sub
sarl
push
dec
addr16
loopne
or
jmp
mov
dec
shr
imul
jo
or
push
fldcw
stos
shlb
les
mov
flds
scas
adc
out
jnp
add
cmp
xlat
movsl
shlb
adc
jg
orb
push
jmp
sub
jae
jbe
mov
and
cmc
sti
pop
inc
pop
adc
lcall
sub
sub
pop
ja
push
test
mov
pop
stos
outsb
std
mov
push
xchg
mov
stc
lcall
jmp
pusha
pop
xlat
jae
scas
aad
rcl
jne
ds
ficoms
ljmp
shrb
inc
pusha
xchg
loope
adc
les
mov
mov
mov
push
movb
cmp
pop
repz
outsb
push
cs
inc
and
and
xchg
xchg
jle
out
test
clc
sub
push
fwait
dec
dec
and
test
nop
sub
in
dec
jne
or
push
xlat
jmp
push
jo
dec
jmp
loope,pn
js
pop
idiv
xchg
pop
popf
xchg
test
popl
fwait
mov
mov
in
sub
pusha
and
les
out
push
int3
xchg
sub
cltd
fcomi
jbe
adc
fs
xchg
sarb
sub
cmp
xchg
outsb
mov
sub
sbb
testb
lcall
xor
adc
out
xchg
or
outsb
xchg
stos
daa
lahf
std
jecxz
mov
fisubrs
sbb
inc
movsb
out
or
out
pop
fadd
jmp
mov
push
cmp
outsl
movsl
sub
rcrb
cmc
pop
test
dec
push
rcrb
push
dec
mov
sub
jae
ss
sub
adc
mov
stos
test
jae
mov
inc
sub
push
sub
out
pop
loopne
sbb
push
sbb
jmp
in
and
cmc
mov
mov
mov
call
add
mov
incb
outsl
pop
popa
mov
sub
pop
jmp
lds
das
mov
add
jge
dec
icebp
imul
or
mov
mov
test
pop
mov
cmp
rolb
faddp
dec
pop
nop
out
aaa
test
shlb
movl
xchg
lea
addr16
jp
cs
dec
inc
xorb
push
jmp
out
jno
and
in
sub
out
xor
popa
jecxz
decl
testl
pop
into
inc
fbstp
in
push
adc
fstl
in
pop
cs
pop
scas
scas
out
sbb
sub
dec
test
and
mov
ds
push
fs
lds
and
xchg
dec
outsl
adc
mov
push
scas
and
pop
loop
out
xlat
adc
movl
inc
outsl
xor
push
arpl
or
cld
les
cmp
cmpsl
fdivp
cli
and
dec
pop
xchg
xchg
outsb
add
lret
xor
cmc
shlb
mov
mov
xchg
in
xor
cmpsl
arpl
notl
inc
pop
fs
ficomps
int
xchg
mov
mov
jbe
xor
adc
jmp
pop
inc
test
daa
jle
std
frstor
out
pusha
dec
out
sti
mov
mov
push
out
inc
idiv
push
stc
dec
adc
insb
jne
mov
shr
jne
pop
andb
stos
inc
pop
add
xchg
mov
push
or
leave
aad
or
ror
push
int
icebp
xchg
pop
and
dec
and
inc
test
push
mov
sbb
cmpsl
mov
scas
and
xchg
pop
popa
add
cli
popa
and
xor
push
inc
mov
movsl
scas
in
mov
and
arpl
mov
jge
std
inc
js
adc
sub
cmp
data16
ja
outsl
add
jo
popf
jb
xchg
inc
pop
ja
sbbl
arpl
dec
jae
pop
or
les
push
scas
sbb
xchg
ds
xchg
sti
push
jmp
enter
mov
jg
shll
or
ss
cld
in
std
push
lds
xlat
mov
cmpsl
or
out
imul
mov
mov
loope
insl
inc
lahf
and
mov
in
mov
rol
cmpsb
les
inc
lret
in
inc
jne
roll
daa
mov
add
cli
adc
lds
lcall
cmpsl
jecxz
std
pop
cmp
dec
lcall
xlat
pop
ja
fiadds
inc
add
outsl
cmp
dec
fildll
xor
mov
add
dec
aam
cli
pop
popa
cmp
scas
inc
in
mov
inc
add
push
cs
xchg
ret
or
enter
and
fimuls
and
mov
cmc
leave
pushl
dec
cmp
scas
iret
jge
xor
mov
stos
loope
ja
jecxz
adc
inc
jns
fidivrs
decl
jbe
dec
fidivs
mov
imul
xchg
add
sub
insl
cs
sub
xchg
mov
cmpsb
mov
js
dec
hlt
xor
insb
icebp
insl
sar
fidivrs
ja
test
or
inc
loopne
cmc
mov
jg
xchg
sbb
lds
loope
add
or
sarl
push
pop
adc
daa
add
stos
sbb
shlb
data16
test
addr16
adc
sub
ret
mov
insl
inc
je
add
sub
movsb
mov
jg
or
pop
cmp
out
mov
add
cmpsl
fcmovne
or
xchg
test
into
out
mov
out
and
mov
test
in
dec
cmp
mov
scas
or
jmp
fisubl
pushf
adc
frstor
sbb
movsb
insl
jecxz
ffreep
pop
test
movsl
jl
bound
ret
icebp
mov
inc
cmpsl
nop
fwait
test
cmp
xchg
cmp
and
out
outsl
pusha
mov
mov
ljmp
ds
mov
lods
dec
rorl
ds
fsts
jbe
loopne
inc
aaa
pusha
jmp
mov
fildll
inc
fnstsw
jnp
movb
notl
jge
mov
mov
les
div
std
scas
stos
and
sbb
out
rcrb
adc
jmp
out
pop
xchg
mov
rclb
push
lea
lahf
jo
cmp
pop
insl
pop
lods
jne
xor
mul
inc
push
push
fistps
push
out
lods
or
dec
or
icebp
ret
or
sbbb
lods
pop
jns
cltd
bound
sti
aas
inc
aaa
xchg
incb
jne
mov
scas
inc
mov
xchg
dec
sub
jmp
fs
decb
dec
aaa
xchg
je
pop
ss
sahf
ljmp
xor
mov
test
mov
or
pop
and
andl
sbb
sahf
ja
sbb
aam
push
insl
ret
aam
pop
mov
cltd
push
aaa
cwtl
jl
les
pop
sub
xchg
pop
xor
arpl
mov
add
mov
xchg
out
cmp
ret
mov
xor
pop
adc
stos
rcrb
int
mov
out
lods
and
sub
into
rclb
aaa
push
sub
pop
daa
das
repz
lcall
pop
xor
mov
shlb
xchg
es
add
rorb
jbe
repnz
push
loope
stc
dec
xchg
cmc
pop
xor
stos
mov
jg
cltd
and
ljmp
out
scas
add
cmp
das
pop
pop
jns
lea
jg
inc
jno
jb
add
jmp
mov
add
dec
xor
inc
rcrb
mov
add
inc
lods
ds
ds
xchg
fdivrs
ss
add
call
scas
inc
mov
pop
ss
mov
repz
shr
stos
mov
ficoms
test
inc
scas
les
mov
push
pop
sub
pop
inc
scas
sub
xor
bswap
ja
loope
adc
sbb
shlb
mov
test
ficompl
add
in
div
push
aad
xor
outsl
jl
mov
mov
adc
jae
iret
ret
pusha
jp
lea
push
dec
jp
je
jb
in
adc
mov
cmc
pop
lcall
rcrb
push
leave
mov
lcall
loopne
jl
xchg
repnz
rol
insl
repnz
or
out
xlat
fs
iret
add
jl
mov
rorb
into
in
ja
lea
popa
adc
in
in
dec
add
adc
outsb
jne
push
mov
or
mov
mov
repnz
les
mov
dec
mov
mov
lcall
sbb
pop
mov
out
icebp
mov
pusha
lock
push
addr16
roll
jge
lods
arpl
mov
adc
aam
and
xlat
subl
bound
xchg
mov
daa
xchg
in
sub
adc
or
shlb
mov
fsub
mov
xchg
add
cmpsb
adc
cmovl
sbbl
inc
mov
mov
sub
out
push
and
mov
cmc
sub
int
cmc
jbe
pushf
shr
in
stos
sbb
pop
xchg
xor
inc
jmp
aas
mov
stos
decb
rcl
rcll
xchg
test
jns
dec
addr16
out
hlt
data16
pop
cmp
sbb
ja
hlt
test
mov
fistl
pop
mov
cld
add
ja
inc
scas
push
mov
jl
xchg
jae
negb
push
push
outsb
fdivrs
jecxz
cmpsl
sbb
xchg
fstpl
clc
dec
out
pop
imul
sub
insb
test
xlat
inc
push
fadds
icebp
cmpl
pop
aam
sarl
test
in
fdivrp
sub
shl
int3
inc
inc
jnp
adc
aam
lea
and
push
jns
or
mov
jle
loopne
mov
sarb
leave
ja
fisttps
loopne
and
test
aas
xchg
call
mov
push
push
int3
adc
addl
lods
sub
jb
inc
cmpsb
xchg
scas
rcrb
cmp
jb
mov
push
jge
test
das
mov
aam
popa
lea
rol
int
mov
out
xor
sbb
mov
out
enter
and
push
sti
mov
lods
sub
ret
arpl
push
inc
jmp
push
filds
mov
lds
cmp
inc
fwait
jno
faddl
cmp
imull
in
mov
rcr
negb
xchg
leave
mov
or
push
mov
dec
or
outsb
mov
xor
cs
jecxz
xor
loop
ja
shlb
aam
arpl
dec
xchg
mov
addr16
mov
jp
or
sbb
mov
lds
ljmp
adc
fst
mov
rol
jp
adc
add
and
inc
les
mov
add
jl
icebp
push
adc
loope
out
vmaxps
fsts
cmc
xchg
clc
inc
mov
repz
pop
push
out
sub
ret
popa
jle
add
stos
add
dec
pop
mov
ret
cmpsl
subl
jb
andl
sub
nopl
xor
dec
stc
pusha
sub
cmc
mov
mov
aad
cmpsb
mov
push
sahf
xlat
imul
cmp
loope
cli
lds
add
add
popa
daa
addr16
ficomps
mov
mul
iret
leave
jg
jge
repz
jge
loopne
fiadds
mov
cli
icebp
rclb
daa
push
xchg
testb
cltd
movsb
inc
jne
mov
into
dec
dec
add
mov
mov
addb
adcl
ds
mov
add
mov
lahf
jnp
movsb
jge
sub
aas
mov
sbb
push
pop
loope
jle
test
jecxz
iret
adc
aas
xchg
cmpsl
fs
adc
pusha
gs
test
mov
divb
pushf
dec
cmc
jp
mov
fildll
inc
int
cmpsl
daa
loopne
es
jnp
mov
jmp
push
cs
push
dec
in
mov
cmp
mov
xchg
mov
lahf
jl
sub
and
in
loop
adc
cmpl
dec
sub
cli
faddl
sbb
pop
add
scas
push
or
fwait
sub
pop
dec
popa
imul
pop
jae
and
mov
in
jg
add
jnp
pusha
sbb
les
push
push
les
inc
mov
jns
scas
hlt
sbb
inc
adc
mov
addr16
stos
sti
xor
int3
inc
ja
pop
sub
repz
add
outsb
stos
jle
xchg
rorb
mov
jl
out
test
cmpsb
ja
push
rorb
std
test
pop
ss
sbb
dec
test
cli
insb
dec
cmp
lahf
jecxz
mov
jg
shlb
scas
jge
adc
es
pop
inc
insl
punpckldq
aad
fnsave
mulb
insb
jns
sub
mov
mov
pushl
sbb
and
xlat
rcrl
ret
daa
mov
and
xlat
adc
mov
lods
adc
mov
inc
and
bound
enter
push
out
pop
cwtl
nop
and
jecxz
inc
push
mov
jmp
daa
push
mov
xor
call
pop
sahf
addr16
cmp
pop
jg
xlat
sbb
pop
and
sbb
and
mov
mov
stc
mov
icebp
in
add
and
mov
jns
jle
flds
mov
insl
pop
dec
es
stc
add
test
sahf
inc
inc
test
fiaddl
aad
imul
insl
aam
sbb
mov
add
imul
xor
adc
mov
testl
jmp
imul
popf
push
pop
xorl
xor
std
and
fwait
int
sbb
repnz
ret
jns
dec
adc
inc
dec
jnp
sbb
insb
cmp
addr16
add
sbb
cs
cmp
inc
dec
sub
pop
jmp
inc
dec
jp
out
sbb
int
pusha
idivb
inc
adc
shll
xchg
jge
inc
mov
hlt
fbstp
inc
or
ja
aad
fidivl
jg
cmc
cmpsb
add
xchg
roll
dec
lods
xor
fwait
jmp
pop
or
pushf
movsl
sub
lret
push
add
push
lds
int
jno
jg
sbb
push
sbb
lret
cmpsl
movsl
jge
stos
data16
imul
out
out
nop
enter
out
push
lea
xor
nop
mov
insl
out
sarl
pop
in
imul
mov
ficompl
lret
fsubs
add
inc
mov
mov
or
and
out
mov
iret
sub
fldenv
icebp
push
and
dec
fnstsw
push
lds
stos
divl
in
mov
ds
cmp
jne
ret
inc
fnstcw
jno
test
pop
add
into
inc
pop
jg
loope
pop
sarb
fwait
sub
push
pop
push
mov
incb
sbb
xchg
out
imul
int3
push
mov
mov
add
pop
xchg
pushw
sub
jno
or
frstor
mov
add
loope
and
idiv
cmp
fldt
adc
fidivrs
push
xchg
imul
shll
cmp
outsl
adc
icebp
jmp
shlb
pop
imul
aaa
mov
out
xchg
jb
cli
jmp
stos
dec
xor
test
das
lea
cwtl
push
data16
int3
cmc
dec
inc
mov
lods
sbb
mov
test
sbb
dec
mov
out
fstpl
fidivrs
adc
loop
nop
jno
lcall
inc
les
xor
stos
incb
push
mov
fstl
jmp
mov
sahf
movsl
xchg
mov
cmpsb
lcall
pmaxub
lret
stos
pop
sarl
or
mov
adc
mov
jb
or
fmuls
push
js
mov
mov
mov
and
jmp
iret
cmp
lahf
std
mov
cmpsl
dec
dec
idiv
jmp
xchg
aas
adc
add
cld
mov
xchg
mov
xor
mov
lahf
dec
mov
or
shrl
stos
scas
lock
adc
data16
mov
fwait
negb
loop
mov
not
test
and
mov
cmp
adc
arpl
ja
mov
ret
add
aam
jb
xorb
out
jbe
aas
loop
sbb
mov
bound
aas
jecxz
leave
roll
pop
mov
pop
push
push
bound
inc
and
push
cli
push
out
jno
mov
jle
fwait
sti
iret
lea
fisubrs
pop
fnstcw
mov
aas
test
enter
aas
add
into
inc
out
fistps
testb
xchg
mov
pushf
test
mov
mov
loopne
or
lds
dec
js
cmc
ds
mov
in
out
mov
adc
test
pop
lds
sbbb
xchg
push
xchg
sahf
fnsave
notl
mov
fwait
pop
stos
mov
lds
xchg
inc
xchg
mov
inc
pop
cli
sbb
jns
pop
mov
and
mov
jmp
mov
in
insl
into
dec
cmc
loope
push
inc
call
adc
xor
pop
cli
ja
sarb
cmp
add
jae
test
cld
scas
adc
jnp
xor
jns
mov
imul
xchg
xchg
aaa
shlb
pop
jge
jg
in
and
adc
aad
in
mov
adc
jg
leave
xchg
in
iret
aad
inc
lea
xor
nop
movsl
daa
add
pop
push
cmp
xchg
clc
mov
sub
pop
xlat
dec
mov
in
inc
mov
mov
mov
add
out
add
mov
test
inc
pop
js
cmpsl
les
setnp
daa
push
mov
inc
popa
ss
sub
adc
xchg
adc
mov
sub
pop
xor
lcall
fidivrs
or
and
scas
sub
jo
sbb
inc
or
shll
inc
mov
sbb
dec
cmp
jbe
je
add
mov
jle
inc
cmpb
push
daa
js
mov
xchg
das
jmp
aam
push
sti
imul
mov
ret
ds
jmp
mov
push
add
push
test
out
bound
pop
cmp
push
ljmp
call
mov
jl
ret
mov
into
inc
in
inc
jno
push
inc
cmp
mov
sbb
repz
fcmovne
test
xchg
add
pop
xlat
xchg
ret
nop
data16
in
movl
xor
gs
scas
jecxz
sbb
jecxz
inc
lods
loope
sbb
in
out
inc
int
lods
jnp
pop
xor
in
sbb
loop
cmc
lea
add
push
pslld
add
into
sbb
and
ret
dec
jp
sbbb
inc
je
popf
je
in
inc
mov
lock
mov
shl
add
sbb
mov
insb
icebp
jge
adcb
pop
cmpsb
sub
dec
jne
ret
mul
xchg
loop
mov
cmpsl
test
scas
push
icebp
sbb
aas
add
push
out
mov
in
mov
sbb
jecxz
cmc
dec
icebp
pop
addr16
clc
subb
incl
js
lods
xlat
adc
cmpsl
test
popl
sbb
push
movsl
sti
fadds
pop
xchg
fs
dec
sbb
js,pt
jl
movsb
and
lods
push
cmpsl
out
push
pop
cs
add
out
mov
cmpsl
pop
push
arpl
sti
insl
xchg
rcpps
jns
cli
jg
mov
sti
imul
dec
xchg
pop
stos
imul
cmpsb
inc
jns
mov
shl
mov
fstl
lea
mov
adc
sbb
pop
cmpsl
add
iret
dec
jbe
mov
mov
hlt
jp
repnz
xchg
pop
test
andb
pop
stos
sbb
mov
jno
cmp
xlat
xchg
cli
sarb
fiadds
sub
xor
cmp
dec
xor
ss
mov
push
es
out
cmpsb
pop
mov
sub
sti
scas
subb
dec
sbb
jg
mov
mov
in
mov
mov
pop
data16
or
lret
stos
es
and
xchg
ret
mov
fistps
ja
fucomip
inc
out
fsubp
loope
repnz
flds
fs
add
mov
sub
outsb
xlat
dec
adc
jbe
subb
je
xor
fsubrp
inc
sbb
pop
sub
outsb
and
push
mov
sub
mov
gs
lods
lock
sbb
mov
pop
mov
jp
imul
les
pop
js
arpl
cmpsl
mov
ficomps
inc
mov
mov
pusha
test
ja
repz
stos
jl
jno
lods
aad
inc
sbb
adcl
push
mov
jecxz
insl
jnp
into
cli
pusha
cli
out
push
push
mov
movsb
jp
test
and
pop
xor
jg
movsb
inc
mov
outsb
lcall
jg
ret
arpl
cmp
ffree
jns
cmc
mov
notb
out
dec
sub
sbb
ret
fiadds
out
ljmp
push
jae
imul
outsb
cmpsl
cmc
into
jns
jno
ds
mulb
outsb
mov
mov
sar
test
gs
add
unpcklps
addr16
das
clc
enter
scas
xor
and
daa
adc
lds
xor
shlb
les
xor
xor
jge
mov
dec
shl
idivl
call
es
push
mov
inc
add
xlat
in
or
push
jno
xchg
or
sub
stos
in
pop
xor
data16
push
dec
fiadds
inc
aam
imul
xchg
rclb
outsb
outsl
and
imul
out
add
add
sbb
pusha
fisubrl
cmp
add
pop
js
push
ss
shll
lahf
js
xor
and
jns
lods
pop
jecxz
add
mov
jnp
pusha
jns
cli
xor
sbb
nop
aad
imul
shrb
push
pop
inc
pop
mov
test
mov
push
dec
out
sub
and
fistl
out
mov
cmp
or
push
stos
fisubl
and
icebp
out
and
orl
add
cmc
ljmp
gs
xlat
notb
and
int3
inc
hlt
inc
inc
je
cmpsb
adc
cwtl
daa
iret
sbb
test
inc
mov
sbb
adc
xor
popa
cmc
xor
movsb
stc
fucomi
fldenv
mov
fcomip
mov
and
in
inc
rol
sub
mov
adc
repnz
or
xor
xor
movsb
xorl
sar
jle
dec
aaa
sbb
lods
cld
fcoms
inc
out
mov
fisubrs
inc
add
lock
mov
aad
sbb
sbb
es
in
pop
arpl
test
mov
lods
div
dec
es
lahf
and
movb
cmp
jmp
xchg
dec
sti
pop
inc
pop
jae
jo
lret
xchg
inc
jg
ret
cli
pop
xor
adc
xorb
rol
mov
cmc
xchg
js
sbb
jle
je
divl
pop
hlt
in
jne
imull
sub
jo
add
stos
jecxz
subl
cli
fidivs
mov
pop
inc
popa
cmc
leave
sbb
mov
xchg
mov
jnp
lds
adc
jmp
leave
aam
sub
mov
mov
insl
and
add
add
or
sbb
add
sbb
out
jne
stos
or
fisubs
test
ret
mov
ja
jb
std
pop
sub
arpl
add
lret
xchg
ret
xor
andb
les
aaa
movsl
and
in
cmc
jle
jg
mov
pop
cmpsb
dec
testb
xor
jnp
xorl
adc
fdivs
jbe
ret
jnp
and
insl
mov
mov
mov
xor
inc
pop
mov
shlb
xor
jl
or
rcrl
daa
imul
mov
loop
xchg
jge
or
inc
jge
add
xor
repnz
xor
sub
inc
out
hlt
jge
incb
iret
xchg
loopne
test
cmc
ret
divb
sbb
movl
and
lock
xchg
out
mov
push
inc
cmpl
jmp
xor
add
ret
je
xchg
inc
dec
ret
jecxz
xor
mov
test
fcoms
inc
outsl
add
js
in
lods
and
ficoml
insl
adc
sub
cmp
push
mov
lock
push
xchg
cli
adc
inc
ljmp
imul
ret
jle
test
rorl
arpl
insb
cli
dec
pop
scas
push
mov
add
je
andl
mov
test
outsl
xchg
sarl
movsl
mov
inc
ss
add
in
neg
test
cmpsb
xor
gs
addr16
xchg
mov
inc
adc
int
test
ret
movsl
loopne
jbe
xchg
dec
jecxz
bound
data16
add
scas
inc
and
fdiv
notb
xchg
ret
inc
shll
aaa
je
pop
xchg
int
movl
mov
add
inc
pop
and
ja
repz
notb
mov
enter
xchg
or
ret
repz
mul
pushl
in
popa
cld
add
dec
sub
adcl
icebp
divb
jp
icebp
ret
pop
nop
das
ret
push
xor
lods
loope
or
mov
cmpsb
es
in
pop
mov
add
pop
mov
ds
jg
pop
and
or
inc
jp
sbb
in
jne
fs
int
in
mulb
daa
scas
jns
adc
test
adc
clc
negb
inc
repz
xor
inc
test
mov
and
jmp
jecxz
std
movb
testl
push
jecxz
scas
inc
iret
cmp
add
je
inc
hlt
mov
ja
movsl
andl
adc
xchg
shl
gs
cmp
iret
cmp
inc
mov
jecxz
scas
adc
and
movsb
cli
dec
add
test
mov
jg
pop
cmc
subl
mov
filds
jne
mov
addr16
dec
add
mov
std
mov
jne
xchg
mov
cmpsb
ja
pop
add
pop
push
push
in
push
mov
movsb
jecxz
push
mov
cmc
test
xchg
push
cmpsb
jle
dec
inc
vpcmpgtw
mov
jne
mov
inc
aas
xchg
fmuls
addl
repnz
mov
and
hlt
pop
jnp
mov
pop
mov
test
sar
in
incb
icebp
idivl
inc
movl
clc
cmp
inc
scas
xorl
inc
ret
sub
pop
add
inc
cli
push
repnz
pop
and
sbb
jecxz
lcall
sbb
into
push
jge
xchg
outsl
stos
mov
test
orl
test
call
mov
mov
cmc
cmpb
add
aaa
mov
xchg
pop
add
sahf
xor
adc
movb
cli
and
outsl
icebp
popa
jo
js
push
test
inc
cmpsb
xchg
push
jae
or
movb
loop
hlt
cld
cmp
mov
push
ret
mov
incb
into
lds
repz
mov
cmc
adc
add
stos
icebp
int
testl
addr16
int
shll
movb
jne
and
je
cs
in
arpl
xchg
fisubrl
push
pushf
aad
xchg
repnz
mov
and
jg
mov
jecxz
xor
jg
mov
mov
xchg
ficoml
xchg
out
and
andl
xchg
jge
mov
push
xchg
xchg
incb
ss
ret
inc
in
movsl
jecxz
out
add
fs
xor
mov
add
sub
and
stc
mov
inc
and
lock
add
arpl
or
push
mov
addb
xchg
and
movsl
mov
in
jle
dec
ffree
pop
cli
inc
add
mov
call
xchg
fstl
addr16
inc
jbe
and
jne
daa
and
in
jle
loopne
mov
adc
loope
test
xchg
fildl
test
adc
xchg
ret
test
hlt
fildl
add
inc
jne
push
adcl
in
movb
daa
inc
lds
mov
xchg
loope
into
jge
jo
mov
movsl
xchg
repnz
fs
repnz
mov
and
shlb
in
pop
xchg
cwtl
mov
data16
pop
icebp
jp
add
fs
mov
or
in
popa
jecxz
xor
push
xchg
jp
mov
inc
cmc
clc
in
mov
fiaddl
outsl
test
dec
add
jmp
in
mov
jbe
insl
mov
sub
shr
cmpsl
jg
outsb
push
xor
inc
mov
repz
fldl
lock
scas
fcmovb
pusha
cmp
rolb
inc
mov
or
retw
jbe
bound
loop
cmc
or
movl
int
mov
jns
movl
ljmp
inc
les
cmc
inc
jg
pop
repz
add
xor
xchg
pop
hlt
push
cli
add
decl
addr16
imul
push
test
shrl
cmp
lea
les
mov
es
dec
dec
and
sbb
mov
lock
fbstp
push
int
mov
int
mov
fmuls
and
sbb
leave
pop
ret
leave
cwtl
ret
loope
inc
pop
lret
jg
ror
or
ffreep
cld
pop
ret
cld
std
xor
mov
out
int3
inc
in
xor
scas
test
or
scas
rol
inc
xchg
jnp
outsl
jne
xchg
mov
ss
movsl
and
leave
sub
cmp
add
mov
ds
sbbb
test
dec
into
ljmp
mov
dec
popf
add
fnstcw
cmpsb
shl
aam
dec
test
jns
repnz
gs
repnz
movl
jns
jg
xor
mov
aam
ret
popa
cmc
in
dec
mov
mov
fwait
jl
xchg
push
mov
pop
dec
jecxz
cmpsb
inc
in
add
dec
adc
and
shlb
mov
xchg
push
inc
jg
inc
cwtl
jnp
hlt
bound
jg
mov
mov
cs
scas
in
jae
dec
lret
ficoml
clc
call
cmc
test
pushf
pop
fstl
push
ret
sbb
fadd
bound
jg
jns
divb
dec
cmpl
push
les
jecxz
shll
inc
inc
xchg
pop
rorl
and
cmpl
xor
cmpsl
or
jl
jecxz
hlt
push
dec
add
and
incb
jecxz
inc
divb
add
in
inc
pop
ss
std
divl
xchg
mov
ret
mov
out
push
aam
pop
lds
test
sbb
add
in
jb
xchg
test
ret
test
lds
stc
int
inc
inc
es
xchg
or
or
mov
das
ret
pushf
fnstsw
xchg
rol
cs
push
andb
test
pop
ja
lods
sbbl
mov
es
mov
dec
xchg
xchg
push
data16
inc
mov
leave
inc
hlt
jecxz
lds
sti
push
inc
fs
cmpb
pop
pop
out
lds
cltd
jo
pop
cli
jmp
ret
movsb
sahf
dec
or
in
push
pop
push
xor
scas
push
test
imul
mov
sub
out
gs
es
inc
cmp
jecxz
lret
lock
cmp
push
inc
leave
add
xor
popa
pushf
jl
cmc
lds
subl
cmp
jg
pusha
inc
orb
sar
push
out
scas
cmc
addl
out
jb
cmc
shll
data16
mov
push
xchg
add
jno
xchg
ss
dec
xchg
mov
test
enter
addl
andb
mov
scas
xor
ja
jg
mov
pop
loop
jo
inc
outsl
cmp
add
adc
add
add
fildl
mov
in
mov
cmp
jbe
mov
stc
call
sarl
addb
mov
inc
outsl
sub
inc
ret
leave
inc
xchg
mov
movsl
movl
xorb
inc
adcb
les
add
adc
movl
inc
mov
test
xor
sub
or
faddl
fidivs
test
loopne
lods
xor
ret
testl
add
or
subl
movb
roll
add
ret
jb
cmp
std
mov
pop
push
xchg
popa
mov
je
mov
adc
sub
shl
int
jnp
or
cmc
addl
add
std
inc
divb
mov
or
jo
push
ss
mov
loope
jecxz
in
scas
and
jo
stos
pop
ds
cmp
ss
decb
mov
ret
test
jecxz
dec
or
ret
jbe
add
movb
cmp
push
ficoms
andl
ret
pop
test
add
dec
scas
add
es
xchg
mov
inc
push
sub
loop
mov
or
ret
xchg
mov
push
push
and
cli
xchg
icebp
push
cmc
inc
incb
add
movl
and
hlt
pusha
out
xchg
push
aas
cmp
jge
ss
sbb
lea
loop
cmp
push
fucom
aaa
loope,pt
cmp
vaddss
pop
in
loope
in
xor
incb
fcmovb
arpl
hlt
jbe
jg
cmpsl
cmpsl
in
jecxz
cmc
lds
in
jbe
jg
cmpsl
and
in
mov
mov
push
push
xor
loop
mov
sbb
in
lret
incb
xchg
and
adc
xchg
or
jg
cmpsl
movl
in
scas
mov
sub
ret
add
pop
nop
push
sub
fistl
int
int3
fs
inc
xor
adc
push
cmp
shlb
ljmp
inc
cmp
dec
fistl
movsb
clc
hlt
subb
xchg
hlt
xor
sub
fistl
loope
hlt
mov
push
sub
mov
in
in
or
nop
push
inc
cmp
push
into
ret
inc
int
mov
cld
xchg
xchg
ja
addr16
movsl
aad
ret
mov
cmc
sub
jg
scas
fnstenv
or
xchg
jge
in
fstpt
icebp
scas
pop
xchg
cmpsb
out
or
les
mov
loop
scas
repnz
mov
daa
out
adc
inc
fnstsw
hlt
test
xchg
repz
daa
cmpl
fildl
xchg
sub
das
and
ret
pop
jbe
ret
in
fistps
pop
imulb
pusha
scas
xchg
mov
pop
xlat
scas
inc
sub
in
adc
mov
jbe
jae
out
inc
divb
adc
flds
pop
pop
jo
sbb
incl
mov
es
adc
test
cmp
ds
notb
lods
arpl
or
repz
ret
inc
xor
pop
hlt
cmp
add
in
cmc
jb
jg
neg
mov
outsl
leave
jno
and
imull
dec
movl
cmc
lret
incb
xchg
mov
repnz
movl
mov
out
lock
leave
inc
mov
scas
xchg
shll
jle
sbb
aas
add
jmp
test
into
rcrb
push
push
mov
lock
ret
in
outsb
es
daa
fsubl
notl
das
and
pusha
scas
sarb
xor
mov
cmpsb
scas
fildl
cmc
andl
inc
and
cmp
dec
lods
mov
xchg
jno
mov
sub
sbb
enter
sbb
int
inc
call
scas
mov
inc
mov
inc
mov
clc
cmc
orl
testb
out
xchg
andb
test
jne
pop
jo
lret
repz
clc
mov
mov
push
sbbl
jno
data16
cld
add
andl
or
pavgw
xor
mov
xor
scas
faddl
scas
ret
xor
inc
out
push
jae
repz
inc
subb
adc
cmpsb
pop
sub
inc
sbbl
movl
mov
scas
mov
subl
lea
sarb
in
or
pop
cmp
cmpb
push
cmp
into
cmpsl
ret
sti
pop
inc
xor
roll
movsb
enter
and
adc
lds
xchg
push
test
pop
mov
or
ret
rcrl
roll
loopew
filds
cmpsb
push
cli
pop
xor
adcl
xor
inc
add
repnz
xchg
or
inc
jne
test
in
repz
aas
mov
inc
mov
arpl
mov
repnz
cmc
jg
pusha
sbb
aas
andb
aaa
xchg
cmpsb
rolb
filds
xchg
add
movsl
xchg
scas
xchg
scas
jge,pt
cmc
inc
stos
movsl
cmp
repz
push
addl
pop
add
mov
jecxz
stos
les
mov
je
in
lds
aaa
mov
mov
test
out
scas
test
push
inc
jecxz
jbe
jb
cmpl
sbb
arpl
mov
pop
and
jp
test
aaa
pop
xchg
jg
cmc
aaa
jb
lret
pop
testb
cld
add
mov
out
mov
testl
out
mov
add
mov
dec
arpl
mov
xchg
mov
push
ja
push
ret
cmc
jo
pop
xchg
ret
and
cs
xchg
jb
test
add
jae
and
out
xor
xchg
xor
inc
jecxz
in
push
inc
xchg
jne
adc
add
mov
or
inc
add
fiaddl
loopne
je
jg
mov
or
push
lds
imul
ret
xchg
cmp
jbe
jnp
inc
outsl
mov
ds
add
mov
outsl
push
into
pop
lcall
mov
cmc
sub
sahf
loope
decb
add
pop
jl
jns
dec
or
mov
cli
mov
jecxz
addl
addr16
int3
fwait
add
cld
push
call
into
ss
fildl
xorb
jae
pop
loopne
in
std
add
je
rolb
addr16
xchg
cmpsl
and
jecxz
cmc
sarb
orb
into
jp
add
cli
pop
imull
mov
into
inc
mov
mov
movsl
sub
mov
jo
out
pop
pop
mov
jecxz
lret
xchg
jecxz
icebp
sub
cmp
sbbl
xchg
je
and
out
xor
push
loop
ficoms
nop
fcmove
add
sarb
data16
fwait
aas
lret
xor
pop
ror
mov
jns
xor
imul
xor
sub
xchg
fisubl
mov
jns
xor
push
fwait
sarb
xor
test
fsub
jecxz
add
sti
movl
sub
add
int
pop
inc
lcall
in
push
cli
jle
mov
jb
mov
pop
repz
jns
jg
sub
or
sbb
xor
shll
cmp
pop
push
xchg
icebp
lret
incb
and
enter
jle
test
cld
xor
testb
or
loope
cmc
and
pop
xor
dec
add
mov
lcall
inc
scas
dec
mov
xchg
dec
inc
movsw
push
cli
add
xor
enter
sti
sti
icebp
sbb
andb
adc
sbb
cs
aaa
out
jge
lock
mov
mulb
pop
push
xor
arpl
cmp
mov
cmpsb
aad
repnz
xchg
dec
test
mov
xchg
testb
fwait
out
push
push
push
icebp
gs
and
inc
out
mov
divl
test
push
cmc
adc
clc
sub
push
cmp
dec
xor
out
inc
mov
scas
mov
dec
ret
in
ja
xorl
sti
rorl
push
rorl
loop
mov
movsl
push
xchg
rcrl
icebp
dec
movsl
test
mov
testb
test
repnz
and
out
movl
jle
mov
hlt
dec
mov
or
cmc
push
test
cmc
add
add
jb
jge
out
cmp
das
movsl
add
inc
imul
out
add
imul
cmpl
sbb
xor
or
out
jg
push
dec
pop
push
push
push
sub
shrl
and
xadd
inc
in
adc
pop
mov
cltd
inc
dec
and
fidivl
subb
cld
and
fildl
cmc
xchg
imul
mov
adc
arpl
inc
mov
cmpsb
jg
ret
xchg
and
mov
jo
sub
push
or
int
pop
jbe
in
out
fiadds
and
lret
inc
mov
mov
das
loopne
mul
add
cmp
mov
add
addr16
addr16
mov
xor
jecxz
and
jl
xor
cmp
cld
ja
mov
es
mov
inc
notb
addr16
pop
in
repnz
xchg
cmpsb
push
cmc
test
xor
or
inc
jg
scas
fs
add
int3
mov
pop
es
pop
sbb
mov
cmpsl
addr16
in
cmpsb
inc
in
add
jo
mov
adc
pop
es
fsts
cmp
loopne
daa
jno
inc
aam
sarl
lahf
movl
int3
push
loop
inc
sti
mov
mov
les
shll
push
fbld
jns
jg
mov
addr16
and
xchg
push
ret
jb
sub
xor
cmc
cs
fidivl
add
in
scas
testb
out
pop
inc
idivb
mov
sbb
pop
inc
daa
xchg
dec
push
jge
xchg
daa
sub
ret
inc
inc
outsl
xchg
addr16
icebp
es
add
adc
xchg
inc
xchg
notb
cmc
sarl
mov
repz
ret
mov
cmp
data16
push
out
adc
shll
jecxz
mov
incb
cli
pop
pop
mov
mov
mov
jg
xchg
das
push
cmp
fcompl
ja
cmpsb
add
mov
bound
addr16
inc
test
mov
loopne
inc
divb
push
xor
cli
rcrb
cmpsl
in
xor
and
mov
in
mov
xchg
movsb
mov
ret
pusha
aaa
fs
adc
test
pop
inc
jne
mov
xchg
mov
addr16
aaa
in
testb
mov
and
push
cmc
inc
push
sub
shll
pushf
scas
shll
gs
incb
imul
inc
cli
push
and
movb
mov
es
repnz
fisttps
fs
out
pop
aas
adc
jcxz
aas
and
mov
pop
movl
mov
loopne
jns
dec
repz
pop
and
jne
sbbb
cmc
neg
aas
jnp
pushf
addr16
nop
icebp
mov
mov
mov
test
rcrl
xor
sub
std
add
rcrl
divb
addl
push
shl
xchg
test
inc
ja
mov
cmpsb
addr16
add
test
cmc
scas
out
xorb
imul
daa
ja
aas
cmpsb
cli
pusha
test
test
jecxz
movb
jecxz
sti
mov
xchg
roll
jge
ret
icebp
inc
jb
dec
arpl
sbb
inc
pminsw
ret
pop
jecxz
adc
je
xchg
pop
and
xchg
mov
fisubrl
nop
std
shll
mov
sbb
xchg
lock
insb
out
testb
mov
cmpsb
inc
test
js
inc
notb
cmc
incb
xchg
and
inc
sti
rol
std
dec
icebp
or
dec
adc
sbbb
ja
not
xchg
xlat
inc
jg
repnz
jg
and
jne
cmpsl
aas
adc
mov
mov
andl
ja
out
lds
mov
inc
frstor
notl
add
in
daa
mov
nop
stos
out
and
xchg
in
cmpl
inc
divb
jg
mov
xor
xor
in
cmpl
lds
xchg
div
in
xchg
mov
push
mov
fwait
mov
aad
adc
mov
jb
mov
lds
div
in
xor
and
mov
inc
sarb
inc
out
jmp
mov
mov
aam
and
mov
cmp
out
in
jnp
mov
xor
mov
xor
mulb
xlat
push
push
and
xor
out
lds
jecxz
inc
out
lds
aad
jbe
out
mov
notl
jnp
testb
cmpl
lds
in
xchg
ret
pusha
xchg
sti
and
fidivs
movsl
and
mov
jae
push
notb
in
aaa
mov
notl
icebp
lds
mov
xor
ja
out
lds
aad
push
in
mov
and
cmp
add
out
lds
jnp
divb
adc
lds
pop
testb
loopne
rol
push
jnp
notb
in
fs
in
inc
jnp
mulb
and
mov
bound
out
lds
xchg
push
movsb
add
xorl
add
add
cmp
mov
push
lods
inc
inc
mov
jnp
repnz
ja
divb
jbe
push
notb
and
loop
add
and
mov
out
lds
jnp
mulb
in
aas
jbe
cmp
jg
shl
shl
and
jno
icebp
outsb
add
xor
mov
mov
je
hlt
out
lds
jnp
divb
frstor
out
lds
shl
in
push
mov
xchg
lds
in
out
addr16
divb
out
lds
add
and
push
mov
fs
adc
mov
pop
ja
notb
jmp
mov
mul
in
loop
inc
ja
out
lds
push
mov
inc
ja
mulb
out
lds
mov
lock
xchg
notb
imul
out
lds
in
bound
xor
cmpsl
arpl
aaa
jnp
testb
xor
out
jb
shl
inc
sarb
mov
adc
lds
repnz
popa
call
and
cmp
jnp
notb
in
adc
out
aad
sbb
sarl
jnp
xor
sar
jmp
movsl
jbe
mov
fdivl
mov
fs
testb
ret
and
loope
mov
push
xor
xchg
mov
sti
cmpsl
gs
lret
out
mov
out
movsb
xchg
inc
xlat
mov
mov
inc
xchg
mov
nop
out
lds
in
pusha
mov
dec
lds
cmp
xor
sub
mov
add
in
out
mov
xlat
adc
mov
scas
out
lds
sub
out
lds
negb
push
dec
mov
aaa
lds
jnp
negb
in
btc
ja
out
out
fsubp
into
mov
push
neg
in
dec
mov
fcmovnb
dec
jnp
notb
or
out
aad
mov
sarl
in
add
out
lret
in
add
jg
out
lds
inc
in
dec
mov
fcmovb
sub
div
in
mov
cmpsb
das
mov
sub
mulb
sbb
out
lds
or
in
mov
inc
cmp
iret
int
fs
mov
test
insb
outsb
pop
and
mov
in
cld
or
dec
mov
mov
out
jle
pop
push
xor
lea
pusha
inc
outsb
cmpsl
popf
sub
or
das
leave
xchg
decl
mov
in
insl
adc
dec
mov
inc
std
insb
add
lods
cmp
mov
shl
les
insb
test
rcl
xchg
xor
popf
pop
sbb
mov
lret
cli
in
in
les
outsb
dec
and
mov
xchg
xor
xchg
ret
sti
popf
mov
in
aas
mov
push
lret
cmp
aad
aaa
jl
xor
cmc
mov
inc
cmp
int3
ljmp
cmp
pushl
adc
mov
push
inc
daa
jecxz
mov
fiadds
aaa
faddp
lds
das
in
pop
into
xchg
fcmovu
lea
mov
loop
jmp
test
pushf
andl
fsubrl
mov
jnp
xor
repnz
stos
push
and
xor
jmp
outsl
push
add
aam
aad
sub
fs
pop
inc
jge
add
fldl
in
fisubrl
pop
test
mov
push
push
xor
lret
in
mov
mov
notb
cmp
pushf
lock
lods
xor
push
dec
pop
sti
xchg
xor
rcrl
mov
nop
xchg
mov
dec
ret
hlt
jno
jbe
std
in
lret
ja
inc
insb
int3
jg
loope
xor
hlt
mov
in
mov
jmp
dec
cmpsb
mulb
and
aad
push
sarl
cli
imulb
aad
xchg
in
ja
xchg
pushf
pushf
aad
movsl
pusha
mov
pop
aam
sarl
cltd
insl
or
daa
cld
addr16
es
jg
xchg
jle
mov
loopne
push
add
lahf
xchg
push
pushl
add
int
outsb
stos
mov
int
addr16
xchg
cmpb
andl
out
bound
cmp
aad
mov
mov
jmp
es
loop
add
push
filds
testl
roll
inc
out
call
push
clc
out
xorb
lret
loopne
dec
addl
mov
or
lret
fistpll
xchg
sahf
mov
addl
xchg
xchg
aam
outsb
leavew
inc
jle
pop
push
or
adc
push
loopne
call
in
dec
fsubl
jbe
pop
or
test
lret
or
incl
ret
movl
movl
aas
jne
jge
sbb
add
xchg
jle
ja
out
test
push
movsl
jle
faddl
mov
incb
jg
xchg
push
mov
fcompl
or
subl
mov
aam
mov
addl
pop
in
add
mov
std
std
xchg
cltd
jmp
fisttpll
sbb
in
loopne
sub
sbb
dec
out
mov
insl
or
inc
mov
cmp
scas
loope
rolb
xchg
jbe
std
roll
movsw
pop
in
les
into
adc
and
fstpl
ret
pop
mov
scas
push
inc
inc
rcrb
adc
jle
pop
sub
test
mov
xlat
and
inc
in
imul
or
shlb
xchg
imul
in
or
jle
mov
adc
and
mov
mov
enter
jecxz
sub
lea
stos
adcl
jmp
loop
jecxz
js
jge
inc
mov
jg
jo
add
shr
gs
fs
inc
cmpsb
js
jmp
jns
outsl
jge
mov
inc
push
pop
sbb
fs
pop
jmp
mov
ret
mov
mov
mov
cmp
into
test
xchg
sub
stos
loopne
jl
sub
andb
test
lods
dec
push
mov
xor
loopew
mov
test
insl
push
addr16
addr16
fdivrs
es
cmp
test
subl
dec
test
sub
addr16
inc
fisubl
test
scas
nop
mov
jp
and
mul
mov
pushf
mov
imul
mov
mov
andl
jmp
adc
insl
jecxz
andl
cltd
and
mov
mov
in
cltd
mov
test
sbb
out
jp
leave
mov
cmpsb
fsubl
jge
adc
pushl
dec
in
mov
rclb
addl
out
xchg
xchg
test
fidivrs
ficoms
add
test
mov
add
xchg
add
call
pop
jg
add
mov
jbe
inc
imul
cli
fldl
popa
popl
cmc
in
add
std
mov
in
sub
mov
pop
clc
cwtl
inc
add
movsb
dec
cld
test
insl
fs
push
mov
std
lods
js
stos
lock
fstpt
push
xchg
out
std
lock
push
jmp
sub
rolb
push
pop
insb
jmp
adc
jns
add
xchg
std
cli
repz
mov
fbstp
jo
xor
push
inc
scas
xchg
rcll
sbb
xlat
in
mov
das
push
ficomps
ljmp
outsb
mov
pop
add
cmpsl
fnstsw
inc
xchg
pop
push
xchg
popf
nop
xchg
pop
jbe
testl
xchg
in
push
incl
inc
push
in
inc
orb
pop
jle
fnstsw
ffreep
in
jbe
push
loopne
xor
adc
dec
mov
ljmp
in
xchg
xchg
jmp
inc
ds
std
mov
fst
lods
repz
sbb
add
mov
cmc
cli
rep
mov
movsl
jg
push
in
or
push
xchg
push
cmp
dec
fscale
leave
out
pop
sub
xchg
jo
fwait
std
out
or
or
loope
fwait
ret
mov
xchg
stos
push
jp
push
jb
in
sti
sarl
mov
ljmp
sar
add
jl
call
iret
out
out
popa
fiaddl
adc
inc
mov
rol
dec
inc
cmp
daa
pop
hlt
into
mov
pop
inc
mov
mov
mov
jge
fists
loope
shlb
dec
cmpsb
dec
add
fdivl
fucomp
dec
fists
les
daa
mov
jp
pop
inc
jns
subb
and
or
push
andl
sub
lock
and
insl
cmp
movsb
fcompl
das
inc
inc
sbb
adc
cmp
or
mov
notl
stos
int3
sub
mov
xchg
in
push
int3
mov
mov
insb
or
int
andl
mov
addr16
hlt
cli
insb
mov
cld
sahf
jle
or
mov
mov
xchg
jbe
jo
and
test
mov
push
jle
xchg
cld
insb
out
fs
mov
mov
adc
xchg
fs
inc
call
repnz
stos
mov
mov
mov
add
rclb
cmp
and
cwtl
popa
jp
mov
jmp
dec
jns
push
and
mov
push
mov
dec
inc
xor
adc
dec
cmpsl
addr16
out
pop
or
jno
jg
pushf
cmp
add
repnz
divb
add
pop
out
cmp
dec
sbb
clc
mov
cmpsl
mov
bound
icebp
test
pop
dec
mov
imul
add
xor
xchg
adc
cli
ljmp
out
cmc
jb
data16
xor
daa
mov
sbb
push
andl
in
inc
jb
inc
adc
imul
or
pop
and
icebp
or
pop
sbb
loope
adc
mov
xchg
pop
dec
popa
cli
fwait
push
pop
push
sbbl
loope
ja
ja
imul
adc
cmpsl
ret
lds
out
test
mov
mov
push
mov
cmpsb
lds
test
fcomps
movsl
sub
jno
mov
sub
cmpb
add
loope
icebp
cwtl
pop
rcl
leave
ljmp
ljmp
shlb
andb
icebp
mov
addb
adc
and
or
mov
and
xchg
add
jmp
inc
cmpl
nop
adcl
jecxz
jp
stc
pusha
push
adc
sub
pop
movsb
add
sub
mov
or
xor
add
shl
jno
mov
out
mov
insb
loopne
icebp
sbb
andb
jp
enter
pop
adc
in
cmpsb
loopne
jecxz,pt
add
loope
jp
inc
subl
xchg
lcall
jecxz
inc
xchg
scas
test
mov
vmwrite
cmpl
inc
push
repz
pop
ficomps
xchg
es
stos
movsb
mov
push
pop
testb
xchg
mov
out
fs
stc
xor
fsub
push
in
test
cmp
fldenv
mov
xchg
push
pop
ds
jg
xlat
and
in
add
movsb
mov
xor
or
cld
pushf
arpl
xor
fidivs
addr16
or
in
insb
or
pop
mov
dec
ss
push
jg
aad
cmpsb
xchg
in
inc
dec
adc
push
sbb
mov
mov
pop
insl
cltd
cmpsb
adc
cwtl
out
das
lahf
cmp
sub
divb
iret
jne
int3
scas
jmp
ss
mov
call
sub
inc
push
movsb
push
outsl
lea
sbb
mov
mov
lock
je
inc
and
dec
adcl
and
cld
inc
lret
adc
shll
mov
int3
lret
lahf
dec
xchg
es
mov
ja
fs
testb
push
xchg
in
shlb
jle
cld
pop
insl
cmc
mov
jle
add
aad
addl
add
xchg
cmc
lock
adc
pop
call
call
jl
adc
ds
jno
aad
lahf
rep
insb
xor
inc
adc
call
jae
in
and
into
jmp
fnsave
pop
test
js
adc
mov
std
push
in
add
sub
mov
insl
icebp
insb
scas
cltd
pop
or
aam
dec
cld
sti
dec
and
or
lock
inc
icebp
xchg
sbb
leave
pop
push
dec
xchg
dec
ret
push
mov
mov
mov
mov
cmp
cmp
cmp
cmp
mov
loope
ret
imul
jns
imul
jge
dec
jmp
rcrl
aad
add
hlt
sbb
ficoms
pop
repnz
js
mov
mov
jno
mov
fdivr
lahf
dec
mov
fs
mov
addl
fcomps
mov
lcall
fdivl
ficoms
scas
cmc
xor
std
xchg
jno
mov
mov
ret
mov
mov
jmp
jo
jl
orl
push
adc
in
mov
jge
repnz
fcompl
rclb
out
in
les
insl
in
je
test
push
lods
aam
mov
adc
iret
cmc
pop
int3
gs
loopne
xchg
jmp
fnstsw
scas
add
mov
movsl
pop
fnstcw
ss
sub
jae
insl
icebp
jmp
push
jl
sbb
xchg
lret
in
mov
jne
imul
lods
mov
hlt
mov
mov
pop
mov
out
xchg
pop
sbb
andb
movsb
cmp
jg
sbb
outsb
scas
mov
inc
hlt
cmpsb
jle
pop
cld
cmp
mov
arpl
add
xchg
mov
std
sbb
xor
call
inc
lea
arpl
pop
push
pop
fnsave
js
push
jle
out
rorl
pop
jp
lods
mov
hlt
in
insb
push
lahf
cmp
insl
lahf
lods
mov
mov
ss
inc
in
mov
and
test
test
pushf
arpl
push
jns
addr16
idivb
adcl
mov
cwtl
ja
ja
xchg
pop
and
mov
adc
mov
or
lcall
sub
push
push
jle
inc
xor
push
cli
xchg
lret
bound
or
stos
sar
cmp
fisubrl
dec
or
jg
loope
jp
mov
aad
loopne
pop
sbb
inc
inc
scas
push
scas
xor
es
pop
addr16
mov
or
inc
mov
push
shlb
add
js
cli
orb
or
dec
in
hlt
fmull
pop
out
iret
pop
ret
jmp
leave
mov
fdivrl
mov
loopne
sbb
xchg
xchg
inc
sar
cmp
ja
aaa
ja
out
jne
inc
adc
push
je
fisubrl
stos
sub
xchg
aam
lds
or
sbb
mov
mov
xchg
cld
orb
stc
cmpsb
stc
and
sub
push
xchg
mov
jne
push
push
mov
mov
loop
test
test
stos
adc
mov
sahf
test
mov
daa
mov
adc
inc
mov
sarl
mov
mov
pop
add
popa
xchg
movsl
je
xchg
jp
aad
mov
mov
in
cmpsl
mov
out
sub
mov
xchg
cld
dec
pop
lods
and
outsb
xor
out
lahf
pop
inc
jp
adcl
inc
arpl
push
fmuls
mov
push
jnp
test
cmpsl
aaa
int
cmp
push
lcall
addl
xchg
idiv
scas
scas
add
inc
stc
cmp
xchg
negl
sub
ljmp
test
jl
xor
push
cmpsl
fcomps
lahf
xchg
ja
xchg
jg
sub
jl
addr16
jmp
cmpsl
dec
inc
enter
inc
xor
out
aam
out
inc
shlb
lahf
add
add
out
jg
decl
cld
mov
mov
add
add
repz
or
mov
cli
add
idiv
loop
iret
mov
pop
xchg
xor
push
sbb
std
push
push
jg
ja
jle
xlat
outsl
jge
cld
iret
idivb
sti
jnp
cli
out
cmc
jp
pop
jne
jns
out
hlt
je
arpl
or
aas
aaa
into
mov
ss
mov
push
or
cmp
aam
int3
les
dec
inc
or
jmp
fcmovnbe
lret
ret
or
pop
push
dec
or
xor
ljmp
mov
pop
or
inc
cmp
icebp
jmp
leave
sarl
pop
push
dec
inc
cmp
clc
or
call
sarb
pusha
pop
push
dec
addr16
cmp
inc
orl
lds
jg
xchg
insb
jne
inc
fcoml
lahf
jg
or
ja
idivl
cld
jl
idiv
addr16
in
or
out
outsb
jne
push
pop
jns
push
out
addr16
fidivrs
xorl
cmp
scas
repz
cli
inc
leave
xor
cmpsl
pop
push
sbb
ret
jmp
or
cmp
mov
push
or
negb
dec
jge
jo
ss
cmp
mov
push
jno
int
cltd
add
fadds
sub
push
mov
rcll
cmc
addr16
pop
pop
or
arpl
or
sti
aad
ficompl
cli
int
dec
sahf
rcr
or
rcrb
cmp
gs
mov
nop
dec
and
test
add
lret
iret
jecxz
inc
gs
js
cmp
jge
push
insl
add
push
je
jle
sbb
insb
ficompl
jnp
push
ja
add
mov
mov
in
mov
mov
cmpsb
out
leave
clc
add
pop
test
adc
or
loope
push
or
scas
add
mov
lahf
cmp
cwtl
mov
out
fistl
js
jne
test
push
ret
sub
or
test
es
je
and
arpl
push
cmpsl
stc
leave
xchg
mov
hlt
sub
xchg
xchg
lret
push
clc
int3
sti
mov
cltd
mov
popa
mov
cmp
xor
push
lcall
inc
je
mov
ret
push
popf
jbe
ljmp
lar
push
add
and
stos
mov
inc
ss
xchg
fnstsw
cmpb
sub
jbe
or
repnz
cltd
inc
and
rorl
cmpb
mov
mov
leave
mov
dec
add
mov
roll
outsb
and
or
xor
add
or
sub
cmpsl
cmp
xor
jb
mov
mov
outsl
pop
or
arpl
jmp
into
pop
xchg
add
and
xchg
aad
sbb
leave
cli
jne
ficompl
xor
adc
add
or
mov
lds
sbb
scas
inc
stc
das
or
iret
fnstsw
mov
nop
xchg
or
shlb
leave
ljmp
inc
mov
or
and
arpl
or
pop
sub
or
dec
pop
cmp
jmp
pop
or
and
xchg
iret
mov
test
jp
shll
stc
fmul
out
push
or
into
lea
mov
inc
cmpsl
dec
or
inc
lcall
outsb
clc
mov
pop
repnz
xor
pusha
inc
pop
dec
inc
xchg
lods
rorb
pop
xor
mov
jnp
or
cs
xchg
or
jge
outsb
xchg
mov
mov
sub
jle
mov
adc
push
out
adc
rclb
pop
inc
cmp
popf
or
imulb
cld
push
push
or
inc
insl
lock
xor
xor
jecxz
mov
add
pusha
pop
outsb
xor
add
xor
lret
adc
test
mov
sbb
cmpsb
adc
pop
scas
or
das
sbb
jl
dec
xlat
and
push
mov
pop
lret
fcomps
push
rcrb
int
decl
jo
loopne
mov
xor
fdivrs
adc
or
and
cltd
pop
mov
movsl
rcrb
or
inc
jb
add
push
add
fwait
stc
xchg
and
lcall
xchg
mov
ror
fbstp
fwait
jmp
pop
subl
andb
and
test
mov
rcrb
fucomip
scas
or
adc
jae
shll
push
dec
mov
xor
std
andl
pop
decl
stos
test
fstpl
inc
and
adc
outsb
lods
push
xchg
or
repz
mov
pop
dec
sbb
popa
or
in
int3
gs
and
sub
mov
inc
loop
xchg
jl
sub
inc
xorb
inc
stos
or
sub
dec
cmpsb
mov
addl
mov
dec
sbb
or
push
sub
jae
std
push
sarl
hlt
inc
out
dec
xchg
int
push
mov
add
ret
aam
loop
or
mov
mov
add
cmpsb
xor
xlat
lahf
inc
or
adc
lock
fsubrs
xor
imul
or
test
pop
sbb
or
xorb
ret
xchg
jo
mov
push
addl
inc
mov
add
enter
or
push
das
dec
pushl
push
lock
push
clc
incb
inc
xor
mov
out
cmpsb
stc
fcmove
std
pop
loope
js
push
push
pop
and
sahf
fwait
cld
aas
lds
shlb
imul
mov
cmp
stos
fadds
fnstsw
or
jl
lcall
push
notl
or
stc
cwtl
nop
sbb
adc
div
jo
int
and
iret
mov
jl
iret
dec
pop
mov
stos
cmp
sub
fbstp
loopne
in
das
push
int
or
xchg
xor
fwait
je
out
cmpl
cltd
fsubrl
stc
cld
mov
pop
or
bound
jg
or
in
xchg
ss
ja
or
and
jae
or
xor
pop
mov
add
cmpb
es
dec
sbb
or
roll
nop
sbb
or
adc
or
in
mov
jge
xor
push
or
dec
or
ror
and
stos
rclb
cmp
mov
inc
mov
mov
bound
pop
jns
xchg
lret
fwait
mov
stos
std
push
add
inc
fdivrl
inc
or
mov
ror
push
in
aaa
or
pop
iret
ret
daa
stos
test
mov
out
or
mov
out
jecxz
rcrl
and
jno
loopne
loop
lods
fldl
out
jae
insl
cmp
pushf
bound
into
push
test
scas
cmc
lahf
xchg
xor
dec
adc
cmp
or
lret
add
xchg
cli
bound
jne
shrl
mov
aas
inc
std
mov
or
inc
loopne
fnstsw
loop
les
add
mov
pop
ret
call
pop
dec
jns
std
dec
cwtl
xor
dec
inc
fs
in
sbb
push
aas
add
sti
sbb
addr16
or
sub
insl
push
mov
cmp
ror
faddl
cmp
ret
mov
inc
ja
mov
cwtl
pop
pop
mov
in
mov
aad
pop
xor
pop
stos
clc
btr
adc
push
xchg
mov
add
bndstx
cmpsb
in
lds
loop
pop
jo
inc
xor
or
scas
cmp
mov
jl
and
or
sbbb
and
fcmovnb
ret
or
mov
or
fisttpll
fildll
sti
ss
or
fs
pop
pop
cmp
iret
test
mov
add
into
xor
pop
add
iret
cmp
fucomi
pop
pop
lea
loop
inc
mov
in
push
push
or
jl
mov
adc
mov
mov
mov
test
gs
nop
scas
or
pop
mov
and
mov
out
stos
mov
xchg
mov
xchg
or
daa
lcall
fnsave
push
test
xor
jbe
inc
mov
mov
les
int
pop
xchg
iret
or
xor
pop
pop
stc
and
inc
mov
adc
out
fs
loopne
jl
adc
pop
adc
or
cmp
rorl
iret
cmp
or
xor
dec
xor
or
loopne
fildll
jbe
mov
repz
add
fidivrl
jnp
adc
mov
sti
out
pop
mov
leave
inc
and
pop
clc
lahf
mov
lods
jmp
and
pop
stc
jne
daa
or
cmp
insb
div
outsb
mov
sub
iret
dec
iret
bound
pop
insl
jns
gs
jle
dec
das
xchg
test
xchg
or
mov
jp
lcall
sarb
mov
push
add
or
mov
mov
jmp
mov
shl
shld
fisttpl
mov
mov
jp
loopne
cwtl
adc
pop
push
daa
ja
or
xlat
jge
enter
pop
xchg
push
ss
adc
xor
mov
orl
xchg
mov
in
scas
xchg
fldcw
or
ss
or
dec
shl
and
or
add
add
inc
dec
mov
ja
or
add
push
lds
cmp
setns
or
cmpsl
xchg
xchg
or
enter
popf
ds
mov
popa
shl
out
sub
jp
iret
mov
add
and
inc
xor
xor
cmp
and
or
test
or
lock
sbb
loop
push
push
mov
int3
imul
push
jae
jmp
rorl
stos
push
cmp
cs
mov
add
or
pop
pop
stos
loopne
and
sub
inc
cmpb
popa
mov
jne
pop
add
or
stos
dec
pop
and
or
insl
ljmp
or
inc
ss
fwait
or
or
ljmp
adc
jmp
and
pop
add
or
shll
sbb
andl
or
fsts
leave
imul
clc
popa
and
or
sbb
clc
dec
push
adc
lcall
sub
push
mov
jno
and
pop
xor
mov
hlt
test
loope
outsl
mov
push
shl
xor
cs
mov
xor
test
mov
jle
cmpsl
mov
hlt
add
sbb
cmp
popa
out
sbbl
jle
insl
clc
add
aaa
mov
mov
fld
pop
sti
lods
sub
dec
or
mov
add
or
cmp
add
adc
pop
sar
fisttpl
add
jb
mov
push
xlat
jl
or
aas
mov
and
lahf
xchg
xor
jo
or
or
lret
das
loope
or
ror
sbb
sub
inc
mov
and
jne
rorl
fdivl
xchg
inc
imul
iret
mov
xorb
movsl
out
mov
mov
add
xor
outsb
sbb
addb
or
nop
cmp
ficompl
and
xchg
icebp
mov
jmp
push
mov
es
icebp
adc
jmp
jb
add
nop
or
cli
add
mov
jnp
out
or
dec
xchg
ss
mov
sub
int
fcompl
insb
ret
mov
idivb
or
push
adc
scas
push
out
scas
push
stos
pop
pop
xchg
sti
or
data16
xor
inc
mov
adc
mov
pop
inc
lods
add
dec
sti
data16
jae
push
in
push
add
loop
sub
add
mov
cmpsb
or
bound
and
sbb
or
jle
call
and
dec
inc
push
pop
fimull
adcb
pop
sbb
test
invd
cmp
mov
lods
lret
sub
xchg
xchg
mov
out
lcall
or
jns
jo
insl
enter
xchg
das
xchg
imul
bound
adc
dec
out
std
or
push
pop
xchg
scas
cmp
sahf
jge
mov
fistl
add
add
mov
add
aas
inc
test
sub
xchg
test
fstp
fldcw
jb
in
mov
outsl
xchg
cmp
mov
enter
loopne
out
fcomip
int
test
or
dec
push
into
cltd
pushl
cmp
clc
shll
inc
pop
in
movl
xchg
jns
imul
loope
das
pop
add
jp
inc
sbb
loop
jnp
enter
pop
repz
jge
cmp
mov
and
dec
cld
mov
sahf
add
out
imul
inc
or
jle
cmpsb
or
daa
xchg
adc
loopne
loope
mov
mov
push
pop
jnp
std
out
js
mov
popa
out
and
fwait
or
loop
lock
sbb
jb
mov
xchg
lret
jns
daa
lcall
leave
aaa
mull
xchg
and
sbb
add
out
pop
fldenv
bound
cmp
pop
xor
push
call
add
cmp
or
pushf
pusha
xchg
sbb
out
mov
or
pop
and
fisttpl
push
bnd
cmp
movsl
xchg
rolb
or
cmpsb
jno
jbe
aaa
or
ficoml
out
aad
arpl
jecxz
add
sub
add
mov
lret
stos
mov
add
popf
mov
push
js
cltd
popl
into
push
mov
xor
fst
mov
cmp
pop
dec
shr
mov
imul
adc
xor
scas
or
jnp
cmp
sbb
repz
js
sti
add
adc
std
jmp
stc
das
mov
jb
cmp
sbb
or
movsl
jge
test
mov
cltd
fstpt
or
in
int
jne
mov
push
test
clc
or
or
push
stc
or
out
jno
cltd
rorl
incl
ds
xchg
jo
and
and
inc
loop
cmp
pop
jnp
inc
aad
jne
out
add
popa
pop
aas
adcl
or
es
mov
or
icebp
xchg
fs
or
adc
scas
jg
add
jb
bound
inc
mov
mov
loope
pop
iret
dec
rcll
xchg
sub
int
or
ret
leave
sbb
add
xchg
jbe
or
or
fsts
mov
xor
std
pushf
cld
xchg
jnp
or
dec
cmp
or
adc
inc
push
iret
orl
aaa
aad
int3
or
dec
jg
je
or
imul
add
call
stos
xchg
xchg
movl
or
or
mov
sub
int3
and
mov
insb
cmp
xchg
inc
lcall
or
xor
movq
out
lahf
or
push
scas
jmp
cmp
ljmp
stos
inc
sarl
inc
mov
mov
inc
enter
iret
call
sbb
jecxz
pop
sub
dec
xor
dec
mov
or
ja
xorb
pop
sbb
addr16
jns
fadds
repz
aad
mov
cli
push
xchg
push
inc
je
iret
pop
dec
out
add
ljmp
int3
ret
or
xor
xchg
pop
cmpsl
lret
pop
bnd
inc
mov
sahf
fiaddl
mov
mov
insl
sti
adc
fldcw
and
or
aaa
orl
ljmp
das
orl
xor
mov
xlat
jl
jl
test
or
sarl
inc
or
jl
insb
fisubs
sub
in
pop
in
sar
or
push
dec
loopne,pt
jge
sub
pop
sub
punpckhdq
jbe
fisttpll
sub
inc
mov
out
adc
jl
adc
xor
enter
in
lret
lds
mov
jne
out
jb
inc
xchg
xor
inc
xchg
mov
in
sub
ret
and
adc
xor
or
jmp
adc
adcl
or
rcll
adc
popa
andb
or
lds
in
inc
popl
jae
cmp
adc
pop
lea
jl
nop
or
adc
pop
fldt
or
fwait
insb
push
cmpsl
pop
test
push
add
sub
int3
or
push
inc
inc
or
jno
mov
or
jb
pop
int
clc
sbb
lods
shlb
mov
mov
insl
out
mov
cld
rcll
int3
mov
mov
mov
aam
xchg
lahf
iret
mov
aas
faddl
push
xor
mov
enter
fs
mov
insl
sbb
cmp
or
movsb
test
mov
sbb
pop
or
mov
xor
sub
jno
js
leave
pop
sbb
bound
push
jg
mov
or
adc
cs
loop
lcall
dec
cmpsl
loopne
sub
push
mov
aam
push
mov
pop
xchg
insb
or
inc
lea
dec
jp
cmp
popf
add
jl
and
mov
pushf
or
jno
mov
dec
push
adc
out
mov
sub
push
mov
out
ljmp
fadds
xor
adc
pop
lcall
es
mov
inc
stos
push
je
adc
mov
dec
jbe
push
cs
jp
add
cmp
mov
adc
or
jmp
xchg
data16
xor
xor
add
loop
push
insb
cs
jg
cmp
mov
jae
clc
test
xor
leave
lcall
or
push
jecxz
or
mov
rcrb
popf
aad
test
fsubrl
add
pop
rclb
out
sub
dec
push
ret
lods
or
add
decl
dec
popf
out
xchg
or
lret
sbb
ss
inc
inc
mov
fsubl
pop
loop
call
decl
test
testl
mov
jmp
pushf
loope
adc
jecxz
shll
dec
pop
pop
or
xor
test
push
ds
lcall
mov
xchg
adc
data16
mov
jg
mov
sti
mov
xchg
in
mov
add
push
pushf
rcrb
pop
add
mov
lods
ljmp
jb
call
inc
test
ljmp
outsl
and
fmull
mov
test
es
ja
or
mov
or
jnp
xchg
pop
and
mov
das
push
bound
fldcw
mov
or
inc
lods
out
jmp
mov
adc
cmp
frstor
inc
or
pop
xchg
push
aas
jg
and
mov
int
or
jbe
push
popa
orl
xchg
sub
incl
stc
mov
xor
and
rclb
or
js
stos
inc
xor
or
repz
out
fimuls
lcall
in
movsl
rolb
loope
push
pop
mov
adc
inc
sahf
lock
or
inc
sbb
jne
pop
or
jbe
add
dec
fdivrl
or
idivl
call
or
test
ds
or
jl
inc
jns
or
insb
data16
imul
repnz
pushf
xchg
push
enter
xlat
pop
popl
inc
outsb
or
cmp
mulb
jno
or
bound
mov
cmc
or
inc
mov
push
shl
jle
adc
xlat
push
and
or
loope
scas
mov
push
fwait
out
xor
pop
out
jnp
jb
xor
cmpsb
cli
test
mov
or
push
mov
dec
or
push
inc
in
or
mov
push
pushf
xchg
mov
sub
out
or
test
inc
fmuls
inc
out
add
push
insl
call
out
ds
jge
add
imul
rolb
test
addr16
pop
or
sarl
jecxz
call
mov
out
jns
push
data16
xlat
js
and
pop
subl
push
fildll
fs
stc
push
in
sub
int
dec
xor
pop
sti
lahf
sub
sbb
cmc
or
lods
insb
cmpsb
jl
xchg
or
ret
dec
inc
jno
push
ret
stc
push
sbbb
idivb
imul
sbb
iret
xchg
push
shlb
mov
stos
inc
insb
or
adc
dec
cwtl
or
std
add
fmul
test
loop
add
cmp
or
add
xchg
enter
xchg
loope
sti
jae
add
scas
shl
mov
dec
sahf
pop
inc
mov
lcall
pop
or
shlb
cmp
push
sub
hlt
dec
lret
dec
xchg
mov
cltd
xchg
or
nop
ja
mov
aaa
icebp
inc
xor
test
push
sub
shl
pop
mov
inc
bound
in
mov
mov
push
xlat
or
pop
add
imul
or
loop
lea
inc
bound
jge
shlb
stos
push
mov
inc
loope
imul
mov
mov
int3
shr
push
or
out
into
xchg
jl
push
and
and
enter
add
daa
clc
pop
out
inc
cmp
subl
mov
in
icebp
or
push
aaa
into
or
cmpsb
out
popa
pushf
nop
or
mov
icebp
or
pop
dec
mov
loop
adc
iret
in
sti
imul
mov
or
imul
inc
lods
push
mov
push
or
xor
pop
in
sub
jbe
out
fwait
ret
push
pop
out
add
pop
mov
ss
imul
jno
in
jae
or
cmp
clc
or
adc
mov
mov
sbb
xor
sti
add
stc
mov
mov
cmpsb
push
iret
and
push
push
dec
jbe
and
nop
daa
in
std
add
sbb
icebp
adc
push
mov
ret
or
add
mov
inc
in
pop
ret
loopne
mov
lahf
push
adc
inc
std
rolb
cmp
out
sub
jg
or
sub
shl
out
jmp
push
push
cli
ret
inc
mov
mov
shl
sbb
mov
push
mov
xor
push
add
or
fisubrl
je
movsl
mov
arpl
push
or
or
xchg
sub
jecxz
mov
cmc
insb
jae
in
sbb
stc
xor
sub
pop
loopne
xchg
rcrb
faddl
idiv
loop
cmp
mov
lea
xchg
jb
adc
data16
ret
xorb
dec
or
xor
or
inc
clc
dec
addl
sub
add
lods
das
stc
std
mov
dec
aad
ja
shl
inc
or
or
mov
lcall
push
inc
stos
repnz
cltd
jne
or
mov
sbb
and
orl
or
pop
mov
push
jnp
out
ret
pop
or
dec
pop
in
fisttpl
inc
sbb
sub
iret
out
or
cmp
outsb
popa
lcall
cmp
sub
cmp
or
lods
dec
jne
add
push
mov
out
sbb
frstor
fneni(8087
insb
test
jne
or
fcoms
addb
adc
push
or
scas
sub
adc
rorl
fdivr
xchg
in
orb
lds
push
or
imul
lods
or
mov
and
add
push
in
pop
xor
push
jmp
sbb
jbe
popf
movsb
lret
loopne
pop
cs
xchg
into
or
push
shll
sbb
xchg
xor
rclb
out
bound
pop
rolb
out
pop
inc
xor
rclb
mov
sub
lock
jb
push
sbb
lea
pusha
mov
test
or
mov
push
mov
insl
push
in
add
es
int
xor
add
and
pop
lea
sub
call
dec
add
adc
pop
subl
inc
lea
divb
pushf
lret
mov
xchg
xchg
outsb
imul
sub
pop
repnz
enter
call
lds
sahf
clc
roll
sbb
or
sub
push
mov
adc
inc
into
movsb
jp
js
xor
pop
add
call
imul
jl
mov
repz
add
or
mov
inc
pop
rcrb
fs
pusha
mov
and
test
or
clc
popf
dec
fnstenv
xor
aaa
jne
xchg
rclb
pop
jl
bound
insb
outsl
inc
xchg
aas
loope
mov
push
sub
fldl2e
mov
adc
dec
push
or
mov
and
ss
xchg
js
ret
aam
es
iret
rcll
incb
or
mov
stc
out
cld
call
inc
mov
inc
iret
mov
adc
fisttps
fisubrl
inc
addr16
jno
fisttpll
cmpsb
out
mov
decl
sahf
addr16
adc
lcall
dec
adc
inc
sub
jae
int
js
mov
or
mov
adc
popa
or
or
fucomip
in
mov
mov
loop
divl
dec
pop
scas
sub
test
sub
mov
or
dec
xor
mov
pusha
cs
jg
pop
add
scas
add
repz
push
inc
push
or
adc
rcrl
inc
adc
in
jmp
andl
lret
subl
out
or
or
addb
cmp
cs
or
adc
xchg
jmp
aas
xor
xchg
out
add
inc
daa
or
add
cmpsb
es
push
xchg
testl
jb
and
push
mov
cmp
or
xchg
ja
sub
iret
clc
adc
mov
lcall
or
sbb
push
and
jle
pop
add
push
sbb
outsb
shrb
ja
mov
add
push
stos
mov
xchg
outsl
or
jg
test
into
add
sub
lahf
or
xlat
jmp
inc
sbb
mov
xchg
inc
pop
insl
adc
data16
fmuls
add
jo
cld
loope
das
dec
add
mov
mov
sbb
test
push
int
jle
es
or
int3
popa
adc
js
xchg
xchg
aam
mov
cwtl
mov
mov
fwait
or
int
jmp
lea
adcl
mov
adc
xchg
fisttps
sbb
addr16
xor
call
cmp
out
iret
clc
jb
mov
jl
test
or
pop
lcall
data16
loope
out
cld
es
or
dec
mov
inc
imul
outsl
mov
dec
imul
jae
dec
mov
movsl
jecxz
cwtl
enter
sbb
cmp
fs
pop
or
aas
mov
lods
push
or
inc
mov
ss
cmc
fisttpll
testl
fdivrl
pop
std
test
addr16
out
stos
pop
scas
or
or
push
sub
sub
inc
hlt
xor
out
or
stc
cwtl
push
or
int
and
mov
repnz
data16
mov
or
push
nop
int3
push
in
shlb
lods
and
ss
or
bound
fmul
jnp
in
sti
addr16
add
push
push
or
mov
es
push
and
dec
or
js
cwtl
pop
mov
push
and
jg
inc
loop
iret
xchg
aam
out
mov
loope
xchg
inc
out
jo
xchg
ds
add
mov
addb
or
mov
insb
test
rcll
and
fs
test
push
jmp
xor
cmp
push
mov
test
les
add
jnp
mov
push
or
enter
icebp
jmp
fmull
lret
push
pop
add
loope
xchg
call
mov
dec
cmpsl
sti
jl
sub
aas
loopne
xlat
cs
or
rorb
mov
or
push
test
sub
lret
icebp
or
aad
fsubl
sbb
pop
dec
adc
add
fidivrl
inc
popa
fisttps
inc
or
aad
or
daa
jl
cmp
push
out
out
int3
hlt
adc
or
inc
dec
push
mov
or
test
cs
add
cmp
pop
mov
and
cmp
or
xor
loopne
or
in
fs
xlat
push
push
or
sbb
or
sbb
lea
mov
mull
or
std
mov
outsb
jne
xor
add
cmpsb
mov
xchg
clc
test
std
pop
or
or
xchg
adc
scas
shlb
loope
ja
fildll
lods
or
int3
ljmp
jbe
mov
cld
out
sbb
dec
into
hlt
xchg
stc
xlat
outsb
or
push
push
gs
inc
popa
push
or
push
shr
dec
or
xchg
mov
mov
inc
call
push
cmpb
or
inc
cld
clc
mov
fmull
xchg
pusha
fwait
je
dec
mov
or
jbe
shll
hlt
xchg
sahf
sub
or
cs
or
pop
lea
imul
dec
jne
mov
push
cmp
push
pop
fadds
insl
xchg
fistps
xchg
imul
call
mov
divl
jmp
ret
or
fimull
pop
lock
jmp
data16
enter
add
and
or
dec
test
fwait
push
fimull
add
jmp
adc
or
jne
jo
int3
jecxz
or
pop
push
or
pop
push
imul
push
lahf
xchg
mov
or
fdivl
mov
inc
pop
or
pop
test
lret
mov
sahf
xor
or
lret
mov
fmull
xor
mov
inc
call
into
pop
push
shr
cmpsb
adcb
stc
aas
leave
call
or
and
bound
lea
fcmovu
push
or
aaa
push
jne
test
enter
pushf
add
aaa
pop
in
cltd
hlt
jns
mov
ret
push
and
mov
and
loope
pop
adc
or
jg
lea
outsl
sub
add
or
rorb
shrb
leave
pop
push
and
or
adc
pop
jnp
aad
sar
dec
call
iret
cmpsb
test
lea
add
and
mov
inc
stos
add
sbb
sbb
or
imul
rolb
adc
sbb
mov
mov
int3
or
dec
xchg
imulb
das
cs
add
loopne
or
subl
xor
adc
jb
sbb
and
fbld
int3
push
or
in
push
stos
cwtl
adc
inc
rorb
aam
cld
sub
aad
or
pop
jno
jae
mov
sarl
cli
inc
or
pop
lock
mov
dec
int3
movsl
pcmpeqd
lret
and
lret
jmp
jnp
inc
decl
scas
cmp
mov
cmp
jecxz
or
loope
roll
mov
and
js
lock
adc
inc
sbb
cmp
sbb
dec
or
jle
and
gs
mov
out
fbld
pop
mov
sbb
fidivl
mov
xchg
inc
mov
call
in
sub
xor
decl
ss
adc
pushf
popa
cmp
sub
jae
mov
or
inc
roll
scas
dec
jle
fmul
mov
mov
fndisi(8087
inc
rcr
and
mov
add
xchg
pushw
pushf
xchg
or
inc
ret
cltd
sub
lods
jl
test
xor
inc
nop
aam
cmc
cld
aad
icebp
mov
cmp
pop
inc
push
adc
mov
das
fcmovu
or
xchg
push
push
js
mov
test
in
jmp
sub
out
or
mov
scas
shll
xchg
cmpsb
mov
rol
jo
das
adc
mov
inc
cli
lock
sbb
rolb
sbb
jb
fdivs
push
mov
idiv
inc
add
adc
or
rolb
adcl
enter
push
ds
add
cmp
loope
jnp
popf
scas
mov
mov
aam
call
mov
js
ret
mov
or
cmp
mov
jne
add
loop
or
into
mov
adc
push
dec
sbb
and
sbbb
jl
iret
mov
shll
popf
dec
or
out
mov
dec
mov
lcall
lods
mov
dec
loop
xchg
mov
or
in
inc
dec
es
push
sbb
mov
addr16
and
sub
or
or
test
or
push
imul
push
add
cmp
fwait
loopne
xchg
add
or
xor
push
out
lock
enter
repz
mov
mov
sub
xchg
or
ljmp
or
loope
and
add
sub
dec
js
and
orb
repnz
shrl
or
xchg
push
inc
dec
jle
push
out
add
out
xchg
lods
pop
movsl
fwait
adc
or
test
fiadds
or
inc
bound
test
mov
push
sbb
xchg
or
cmp
popa
or
bound
aaa
mov
jnp
ja
lods
adc
inc
cmpsl
ficoml
push
push
mov
jle
dec
xchg
add
scas
pop
popa
sbb
mov
in
invd
stos
repnz
pop
lods
fs
movsl
push
lock
cmp
or
xchg
push
js
addb
fwait
dec
push
es
mov
jns
mov
or
popa
and
sahf
push
or
test
bound
dec
adc
or
mov
or
lods
in
shl
dec
adc
or
outsb
and
fdivs
pop
scas
mov
or
or
and
lods
mulb
or
dec
je
test
fcompl
mov
loop
inc
mov
int
nop
pushf
cmp
jae
mov
hlt
or
mov
insb
clc
push
fldcw
lods
adc
or
aas
ret
fsubrs
add
loop
mov
mov
leave
jno
pusha
sbb
add
jae
ss
inc
iret
jmp
sti
std
imul
mov
push
mov
mov
idiv
or
pop
jnp
andl
sub
push
int
lods
pop
and
push
out
test
push
pop
popa
in
movsl
js
adc
outsb
or
jbe
sub
sub
out
jno
mov
dec
daa
lret
orb
ret
fistl
push
mov
or
sub
dec
dec
into
jl
mov
xor
iret
mov
test
mov
fildl
ret
mov
call
iret
cli
int3
mov
fs
or
cmp
fwait
hlt
lods
add
iret
pop
int3
adc
in
sbb
xchg
mov
pop
xchg
adc
xchg
dec
jo
insl
pop
popf
jecxz
std
mov
sub
shrb
loopne
les
or
mov
adc
pop
test
add
dec
cmpl
xchg
mov
jg
or
fs
jo
loope
sbb
hlt
dec
jae
fisubrl
xor
test
fstl
or
inc
cmp
mov
movsb
push
pop
lock
call
xor
push
icebp
in
or
pop
stos
mov
push
ja
mov
jp
push
push
outsb
or
and
adc
testb
ret
jnp
or
sbbb
arpl
loope
inc
xor
jp
inc
adc
lcall
adc
imul
ds
in
or
mov
add
jae
dec
sub
cli
dec
aad
pusha
or
repz
sarb
mov
data16
rolb
or
sub
mov
xchg
pushf
sarl
and
and
incl
mov
test
lcall
dec
shlb
rcl
repz
int3
sub
xchg
cmp
je
add
xchg
inc
inc
mov
scas
xchg
or
test
xor
sbb
or
cmp
fimull
subl
adc
push
jb
in
fnstsw
inc
sub
mov
das
inc
cwtl
orl
jmp
nop
adc
and
orb
push
test
or
pushf
daa
jle
shrb
adc
and
jae
mov
push
loope
sbb
or
or
cmp
xor
and
xchg
pop
rclb
push
add
adc
sahf
pusha
pop
data16
neg
pop
ds
push
pop
mov
loop
sbb
sti
inc
jg
insb
aaa
jmp
nop
addr16
xlat
cli
add
xor
jl
stc
jno
xor
aaa
adc
push
pushf
add
pop
and
dec
pmaxub
add
xchg
push
leave
or
mov
mov
out
push
ret
stc
or
push
sbb
andl
popa
pusha
dec
jg
je
or
mov
xchg
andl
add
or
dec
sbb
or
mov
sbb
pop
mov
push
xor
cwtl
andl
ja
movsb
aam
mov
jl
xchg
add
iret
icebp
or
btr
cmp
or
sbb
inc
test
xor
pop
mov
dec
subb
mov
pop
data16
aam
or
pop
movsl
cmpsb
mov
js
jp
cmp
sub
jns
out
mov
insl
iret
shl
inc
xlat
or
cmp
pusha
mov
shrl
cmp
ja
mov
pusha
mov
mov
adc
dec
xor
idivl
inc
push
daa
aaa
and
bound
rcrb
mov
xor
sub
pop
pop
adc
out
push
cmc
lea
loope
roll
sarb
in
push
mov
push
or
or
out
add
pop
int
add
sub
adc
in
fidivrl
test
iret
enter
push
test
jne
mov
mov
xor
inc
ret
push
int3
or
or
clc
pop
sub
jne
popf
imul
bound
inc
inc
repnz
push
test
popf
and
sub
xchg
lret
clc
cwtl
or
jns
inc
or
shll
pop
nop
or
mov
or
and
sub
leave
xor
cwtl
scas
js
push
inc
loope
or
cs
push
lcall
cmc
xor
roll
push
cs
mov
aas
mov
sbb
or
mov
or
lea
inc
cmc
add
out
rolb
cmpsb
inc
xchg
cmp
inc
or
sahf
mov
mov
pusha
or
mov
xor
adc
les
pop
push
ss
lret
out
inc
or
loopne
icebp
sarb
mov
lods
mov
or
addr16
mov
xor
nop
mov
mov
cmpsb
mov
mov
adc
imul
cltd
ret
push
ja
nop
out
test
and
push
adc
add
int3
dec
pop
push
cmp
pop
push
aaa
dec
xchg
jnp
mov
repnz
sub
decl
adc
orl
test
fimuls
mov
insl
test
icebp
or
adc
mov
inc
pcmpeqb
lock
fsubp
push
aad
in
adc
inc
inc
or
push
jae
adc
jbe
fbld
ror
push
adc
aas
jge
xchg
call
aad
into
mov
loop
int3
pushfw
pop
ret
cmp
add
pop
int
neg
outsb
stc
push
aas
add
cmp
push
cmp
in
cmc
notl
adcl
sbb
add
xchg
and
mov
xor
mov
js
daa
pop
sbb
jnp
sub
xchg
push
pop
mov
xchg
sbb
xchg
mov
or
scas
dec
in
lret
dec
nop
add
fwait
ljmp
insl
les
test
ret
push
add
scas
jo
loope
cmp
dec
mov
xchg
data16
mov
andb
mov
out
int3
or
aas
lret
push
push
ret
cmpsb
clc
sub
imul
mov
frstor
mov
mov
nop
inc
loope
cs
outsb
ss
pop
popf
test
or
int3
cmp
loop
sahf
packssdw
sub
push
outsl
sbb
xchg
jne
das
push
jge
mov
icebp
or
rcr
dec
std
adc
or
imulb
cltd
dec
push
or
js
repz
jns
in
pop
or
add
fdivrs
pop
movsb
fs
scas
inc
push
jle
sbb
push
cmp
into
mov
lret
add
jmp
add
xchg
push
adc
lock
adc
daa
mov
xchg
add
pop
call
xchg
gs
jnp
les
shlb
iret
cltd
in
daa
rcrb
pop
add
inc
sub
jns
aas
and
dec
dec
je
mov
cmp
leave
inc
pop
decl
mov
mov
push
adcl
or
repnz
jb
pop
mov
adc
out
mov
ficoms
push
add
cmp
inc
mov
and
out
jbe
es
stc
xchg
jecxz
mov
jg
add
lds
repz
lcall
sub
xchg
fnstenv
enter
and
pop
push
ljmp
sub
jno
or
mov
popl
pop
sub
or
push
lret
dec
test
xor
dec
or
sub
iret
push
mov
test
or
sbb
ud0
xor
jo
cmpsl
std
dec
adc
and
adcb
cmp
mov
shrb
sbb
call
push
cs
cwtl
adc
or
daa
cmpl
cltd
or
shr
into
cmp
paddq
and
mov
pop
mov
add
iret
test
subb
orb
or
leave
popf
adc
push
cwtl
ret
or
jmp
pop
or
dec
jp
or
out
in
or
adc
cmp
mov
enter
lods
mov
outsb
mov
aad
jecxz
enter
pop
xor
out
push
pop
xlat
shlb
loop
iret
clc
add
push
lret
mov
sbb
xor
loope
mov
js
mov
or
cmp
xor
mov
xor
pop
xchg
aad
mov
push
jae
inc
inc
pop
fcomi
sbb
movsl
mov
gs
jl
or
ror
push
sbb
out
cld
adc
pop
lods
scas
mov
leave
or
xor
outsl
xchg
inc
repnz
frstor
jl
or
fucomip
pop
or
xor
loop
cmp
jo
jg
add
adc
and
add
and
xor
xor
stos
mov
outsb
jbe
cmp
mov
or
mov
fs
jl
jl
out
xor
push
pop
adc
iret
scas
or
lds
mov
or
test
pop
and
dec
call
push
inc
xchg
or
aaa
cmp
leave
or
or
fld
jle
push
je
popa
cs
andb
push
out
dec
testb
lds
inc
mov
mov
xchg
mov
and
cmpb
out
call
jo
cmp
out
sahf
fldcw
out
inc
add
jbe
es
imull
sbb
loope
or
pusha
test
pushf
mov
or
pop
cmp
mov
xchg
jb
es
out
fcomps
roll
mov
out
cmp
ljmp
mov
into
popa
add
rcrb
mov
add
test
inc
inc
imul
mov
jmp
push
jne
aas
add
or
pop
sub
xchg
out
sbb
scas
xor
int3
iret
add
cmp
cmp
jne
inc
mov
pop
loop
and
or
adc
jns
es
lcall
jmp
and
push
mov
fildl
ficomps
xchg
rcrl
push
push
dec
inc
clc
sbb
sbb
shll
or
popa
cmp
jno
repnz
gs
sub
or
jae
or
dec
sahf
xor
or
mov
and
outsl
or
push
add
icebp
xchg
cmpsl
xor
std
mov
jp
dec
xor
mov
leave
inc
xlat
test
push
xchg
or
mov
and
push
or
cmp
push
push
out
insb
or
mov
out
adc
add
inc
stos
sub
scas
aaa
pop
fsubr
incl
dec
jp
add
or
out
push
push
xchg
dec
enter
repz
aaa
pop
out
les
mov
mov
outsl
orb
sahf
mov
xor
or
sbb
dec
cmc
rorb
in
or
movb
out
jae
mulb
or
xor
lcall
stos
mov
enter
mov
aad
test
shrb
push
fwait
daa
pop
sarl
mov
add
stos
mov
or
sbb
dec
cmpsb
mov
and
insb
dec
js
jl
sub
outsl
adc
ret
inc
push
or
sti
shlb
lock
xchg
push
fidivrl
jg
cmp
mov
sub
mov
mov
xchg
fsubs
sub
or
frstor
fisttps
shll
adc
push
xor
daa
mov
pop
sub
jmp
jp
std
pop
sbbb
xchg
or
js
aad
dec
jge
or
adc
ret
adc
push
iret
loopne
or
xor
je
ss
xlat
add
pop
push
cmpxchg
or
fistpl
test
push
leave
jl
dec
sti
jg
out
cmp
inc
roll
push
out
pop
or
leave
push
jbe
and
pop
xor
in
or
jecxz
ret
je
sbb
ljmp
jmp
mov
loope
mov
shrl
lret
pop
or
mov
pop
or
fldcw
testb
jle
sbb
inc
xchg
cmp
rcl
and
mov
xchg
out
pop
popf
scas
shll
test
sahf
mov
orb
loope
jl
or
test
gs
inc
cmovnp
or
pop
cwtl
bound
ret
sahf
pop
or
loop
pop
or
mov
pop
pop
into
mov
inc
shr
test
mov
movsl
faddl
aad
popf
or
test
xchg
adc
mov
lcall
or
sarl
inc
fwait
push
jno
xlat
ds
cmc
xchg
rolb
or
inc
mov
sbb
int3
clc
lret
stos
sahf
hlt
insl
dec
shlb
push
cltd
jae
inc
out
and
and
push
imul
xor
mov
inc
mov
out
or
loopne
adc
jb
cmp
imul
xor
jmp
add
and
imull
mov
or
push
ja
popa
or
sub
adc
adc
fimuls
repz
or
or
jp
mov
adc
sbb
sub
mov
jns
insl
jg
daa
push
push
in
sahf
add
leave
subb
iret
aad
sbb
xor
dec
or
addr16
or
sbb
or
ljmp
jne
sbb
mov
sarb
add
cmp
xchg
jecxz
or
test
or
sub
or
lahf
aam
adc
inc
inc
je
add
gs
sarl
xchg
dec
push
jge
add
cld
loopne
or
je
iret
movsb
and
out
push
mov
or
enter
repnz
adc
sbb
xor
or
nop
pushf
mov
lcall
mov
int3
das
cwtl
mov
or
jl
sub
pop
inc
or
sbb
stos
mov
pop
or
or
dec
or
mov
push
xchg
inc
fnstsw
out
sti
add
cmp
mov
ja
dec
out
or
outsb
call
and
cltd
lret
and
sub
iret
arpl
mov
dec
hlt
or
add
and
inc
mov
pop
bound
jae
in
pop
sbb
inc
xchg
mov
fwait
fnstsw
add
out
leave
mov
arpl
dec
sbb
cmp
mov
jmp
inc
dec
add
repnz
movsl
ds
inc
mov
jae
ja
mov
xorl
dec
or
cmpsb
and
scas
pop
imul
aaa
or
ds
mov
loopne
or
subb
add
in
xor
scas
loope
and
fs
icebp
push
cli
xorb
sub
mov
mov
scas
or
call
aad
int3
sbb
imul
lea
inc
cmpsb
mov
fcoml
movsb
add
iret
xchg
xor
cmp
mov
out
dec
xchg
ss
dec
or
push
jb
lds
pop
cmpl
add
cli
int
scas
scas
sub
ss
xchg
test
mov
xchg
inc
data16
inc
adc
or
fucomi
xor
dec
outsl
out
xlat
test
add
mov
nop
mov
cmp
cmp
dec
or
fbld
sbb
insb
adc
js
sbb
decl
ret
xchg
xchg
sub
cltd
cmp
push
sub
faddl
cwtl
aam
and
push
imulb
mov
mov
lods
push
sbb
push
or
aas
and
sbb
add
pop
imul
mov
and
or
sbb
rcl
or
pop
mov
call
and
xor
das
scas
sbb
jmp
enter
cmc
or
cld
iret
repz
mov
dec
or
inc
sbb
mov
inc
jl
sub
icebp
adc
orb
fldcw
iret
jp
mov
xchg
into
add
out
or
push
lds
dec
movsb
cmp
add
fs
inc
adcb
add
lret
mov
add
decl
dec
sbb
pop
fisttps
jge
xchg
xlat
cmc
stos
pop
pop
or
or
fsts
jmp
xor
cmpsl
dec
or
and
loope
cmp
adc
or
cmp
push
xor
or
in
iret
imul
push
dec
insl
or
lahf
cltd
icebp
aad
pop
mov
mov
idiv
pusha
inc
mov
ss
dec
shll
mov
mov
push
mov
or
cmp
mov
xchg
rcrb
scas
add
push
or
push
xor
nop
dec
add
pop
outsb
pop
or
pushf
test
push
ss
jb
das
inc
sbb
jns
dec
push
stos
or
xor
fimull
push
adc
divb
push
xchg
stos
sti
cmpsl
fcomip
inc
add
clc
xchg
orb
fs
lahf
ret
aad
push
les
imul
push
push
iret
cs
sbb
xor
cmpsl
mov
inc
stos
jno
out
pop
lcall
jne
mov
or
or
ret
shl
or
sahf
cld
pop
dec
push
push
push
or
fsubs
out
push
outsb
pop
mov
addb
sub
or
pop
lcall
test
pop
jl
jle
mov
xchg
loope
jecxz
mov
test
mov
and
inc
or
cmova
xchg
pop
xchg
mov
mov
shl
push
std
inc
jbe
mov
mov
repz
adc
cmp
add
cwtl
mov
or
push
sarb
or
cmpsb
lds
mov
or
inc
mov
and
mov
js
cli
sbb
in
sbb
pop
pop
mov
lock
jae
fdivrs
add
push
scas
or
lcall
mov
dec
push
dec
push
jne
push
bound
add
out
pop
push
and
xchg
and
popl
icebp
fdivrl
xor
sbb
sti
addr16
in
jp,pn
stc
leave
dec
test
or
repnz
xchg
adc
int3
jae
dec
xor
pop
or
xor
rorl
cmp
jns
aad
sub
aas
push
adc
xchg
lret
iret
dec
mov
lock
aaa
xadd
or
sub
xchg
sbb
int3
adc
cmp
stc
sub
fnsave
insl
fldlg2
or
out
xchg
xchg
jg
or
mov
adc
xchg
dec
leave
ja
fs
out
mov
scas
or
aam
into
and
cs
fcomp
or
lock
pop
data16
mov
jmp
lods
push
and
or
into
inc
inc
adcl
or
mov
sub
or
push
xchg
test
push
cmpsl
xlat
add
aas
pop
push
lret
or
xchg
in
mov
aaa
push
pop
sub
maskmovq
lret
dec
call
ja
jae
int
mov
inc
xchg
or
mov
cmp
lret
or
in
pop
pushf
fbld
pop
add
outsb
das
push
push
xchg
pop
cmp
adc
or
ljmp
add
or
cmp
push
pushaw
sbb
mov
les
and
xchg
cmp
and
fwait
cmp
sarl
in
out
push
dec
outsb
cmc
scas
loop
testl
addr16
enter
push
inc
sbb
sbb
cwtl
add
bswap
push
mov
xchg
lods
testb
pushf
sbb
push
fcompl
jb
out
test
scas
sbb
or
or
and
bound
add
jg
jo
or
cmp
stos
fucomip
mov
scas
push
out
lods
dec
cmp
insb
gs
xchg
cli
out
iret
mov
popf
dec
roll
fistpl
mov
cmp
or
push
xor
decl
dec
mov
addl
pop
jbe
pusha
adc
and
mov
icebp
sub
sub
and
or
test
or
inc
push
call
popa
or
sub
mov
jecxz
dec
dec
sub
jno
lret
call
or
pop
cmp
mov
pop
call
cld
repnz
sub
inc
lock
sbb
out
mov
mov
std
cmp
and
or
cmp
int
jp,pn
iret
push
adc
cwtl
pop
mov
jle
outsl
or
jecxz
andl
jmp
or
push
test
and
jno
addr16
push
mov
dec
push
jae
inc
pop
jns
or
fwait
sbb
cld
je
rorb
ret
adc
xor
insb
add
jo
push
out
or
sub
lock
iret
add
jge,pt
imul
clc
daa
adc
sbb
adc
js
push
or
pushf
jno,pt
xchg
dec
or
sbb
jmp
loope
pop
test
cmc
lea
icebp
scas
pushf
push
push
push
sub
or
pop
jo
or
add
loopne
aas
aaa
pop
jnp
idivl
or
xchg
fwait
mov
out
imul
lea
inc
into
sbb
fisttps
leave
push
adc
test
adc
xor
out
fwait
cmp
in
incl
mov
mov
cs
and
adc
push
scas
xchg
jle
sub
or
xor
shlb
fadds
outsb
std
imul
lock
or
sub
xorb
mov
inc
les
dec
cmpsb
out
imul
sub
stc
mov
fs
add
push
pop
jp
xlat
or
mov
xor
push
mov
fs
or
push
mov
daa
add
dec
movb
adc
pop
pop
jo
fstpt
or
cmc
or
and
xchg
int3
mov
push
add
adc
pop
aam
push
xor
es
pop
mov
adc
idiv
leave
or
jno
popf
or
mov
daa
fnstsw
mov
adc
dec
xor
xchg
cld
divb
stos
out
and
mov
add
adcb
jnp
or
pushf
rolb
adc
add
fwait
or
hlt
mov
or
imul
mov
pusha
or
or
mull
dec
xchg
xchg
sbb
mov
or
es
arpl
pushf
cld
jmp
mov
add
and
dec
or
adc
loop
lahf
cmp
dec
cmpsb
mov
pop
in
sbb
and
push
jp
leave
sti
cmpb
faddl
push
mov
negl
in
test
add
gs
shl
or
push
jl
jbe
add
or
pop
xor
out
cmp
shl
in
mov
or
cmp
push
pop
pop
or
int3
lods
stos
adc
or
dec
popa
fwait
loop
pushl
cli
xor
fiadds
sbb
jo
push
push
daa
sahf
sub
in
jmp
xchg
sub
cmp
je
inc
aas
or
int
or
pusha
or
inc
mov
andl
nop
sub
dec
pop
shr
or
xchg
push
mov
cmp
mov
add
lock
pop
js
sbbb
jp
sub
jnp
lds
add
cmp
xor
je
loop
fistpl
iret
mov
test
adc
xor
pop
scas
sub
cmp
push
xchg
add
jp
std
xor
or
mov
ss
and
xlat
xor
pop
hlt
sbb
out
jne
adc
add
and
xchg
mov
sub
rcrl
cltd
je
adc
fimull
add
dec
push
adc
push
jb
fucomip
imul
shrl
cltd
sub
mov
dec
dec
jp
movups
inc
xchg
scas
rcll
jmp
sbb
or
mov
notl
push
and
test
push
cli
ja
mov
sti
lds
push
clc
adc
stos
xchg
sbb
loop
cmp
lret
out
xor
mov
pushf
clc
jo
inc
dec
or
jle
sbb
sbbl
shlb
leave
aas
and
sub
inc
and
or
fwait
xchg
adc
inc
mov
outsl
sub
jg
pop
mov
mov
invd
clc
mov
out
or
mov
inc
sub
inc
testl
add
pop
sbb
dec
insl
or
cli
adc
lock
or
in
imul
or
inc
fimuls
cmp
pushf
fidivl
enter
or
cmp
call
ja
inc
out
and
xor
lcall
nop
add
inc
dec
rorb
mov
decl
sbb
or
jne
jp
out
es
pop
or
jns
push
lods
push
ja
in
lock
gs
shlb
xor
cld
cli
daa
pop
inc
lods
mov
pop
int3
shr
add
iret
adc
xor
sbb
push
add
les
push
adc
jecxz
fwait
aaa
pop
or
imul
mov
test
dec
fnstcw
cmc
es
add
ret
mov
xchg
or
test
and
out
bnd
xor
adcb
data16
push
cmp
lcall
push
imul
or
adc
rcl
sahf
adc
cmp
daa
dec
mov
push
mov
or
sbb
jle
icebp
cli
hlt
and
cwtl
outsl
cmp
ret
loopne
push
pushf
sbb
call
popf
out
mov
push
cwtl
in
add
sarl
or
and
jns
sub
sub
imul
lret
or
push
pusha
scas
les
add
push
dec
lret
add
push
xlat
mov
jl
add
in
loopne
jg
add
push
pop
mulb
pop
push
or
sub
xchg
cmp
jmp
or
xorb
mov
mov
add
jae
pop
pusha
push
inc
into
loopne
iret
scas
vmovaps
fxch
mov
pusha
cmp
inc
push
mov
shlb
out
push
mov
lods
or
into
cmp
lahf
fsubp
leave
sub
cmp
cwtl
jle
mov
ffreep
lret
sbbb
push
es
push
cltd
lret
push
add
fnsave
sub
ja
inc
dec
aas
mov
mov
lods
or
cmp
push
or
dec
pusha
mov
cmp
mov
or
inc
mov
out
lock
add
mov
sar
sti
dec
aas
movsb
pop
or
les
popf
int3
inc
adc
stc
repz
inc
loop
cmpsl
nop
or
loopne
or
push
xor
iret
cmp
fs
mov
xchg
lret
fdivr
mov
xchg
add
or
dec
ret
dec
ljmp
jge
popa
gs
mov
inc
out
into
or
push
xchg
sbb
outsl
fld
iret
in
mov
ja
subl
or
ret
fnstcw
inc
fadds
sub
lahf
int
xchg
mov
insl
inc
data16
fsubrl
jo
loope
out
out
fildll
mov
testl
shrl
jo
pop
sub
test
inc
ljmp
int
mov
fdivr
clc
sub
lock
mov
mov
xchg
lcall
ret
cmp
xor
or
adc
mov
pop
pop
rol
push
mov
lock
xchg
jo
xor
or
jle
sub
or
add
pop
and
jo
dec
jmp
xor
stos
es
fwait
adc
or
mov
test
or
lret
or
push
adc
or
xchg
loopne
stc
push
jno
cmpsl
nop
test
ds
push
adc
repnz
sub
inc
cmp
sbb
imul
testl
sub
or
scas
mov
xor
or
push
jns
jno
rcll
or
or
mov
sbb
or
push
iret
cs
or
test
xor
mov
or
mov
jg
xor
iret
mov
jno
pop
or
pop
sbb
aaa
test
xorb
imul
adc
cwtl
subb
lret
mov
jle
lea
jne
pop
or
sbb
pop
cmp
pushl
out
insb
dec
pop
call
cmp
mov
fldenv
cmpsl
test
or
ljmp
and
mov
lcall
lea
cmp
andl
sbb
jns
aas
adc
or
bound
or
and
mov
call
or
in
pop
cwtl
mov
in
adc
or
or
fcoms
cmc
andb
sbb
jmp
lret
lods
jae
sub
push
movsb
or
pop
or
adc
inc
fcmovnu
push
nop
jb
mov
hlt
xlat
addr16
sbb
and
adc
pusha
sub
call
xchg
popa
pop
push
mov
push
mov
out
test
out
imul
mov
or
out
or
jmp
ljmp
xor
sub
and
pusha
push
icebp
xor
dec
xlat
add
or
lcall
or
test
cmp
inc
or
mov
xchg
dec
or
inc
cwtl
mov
add
aas
cs
xor
nop
add
loop
dec
pusha
dec
iret
jmp
or
mov
test
xor
or
sbb
stc
push
dec
scas
repnz
jg
loopne
mov
imul
jl
fldl
pushl
xor
ret
lahf
stos
push
loope
jg
mulb
or
daa
jns
mov
outsl
mov
iret
mov
in
push
or
insb
cwtl
or
jns
ret
adc
cltd
outsb
mov
jno
out
dec
out
push
into
dec
mov
fisubrl
cmc
push
and
sbb
lcall
xchg
test
icebp
or
cmpsb
out
outsl
mov
out
jecxz
dec
mov
call
incl
js
loope
push
add
lock
jae
sbb
add
sub
jmp
in
xchg
aas
imul
adc
cli
xchg
loop
push
mov
int3
or
neg
ficomps
and
or
mov
fwait
por
jns,pn
into
lods
mov
push
stos
add
mov
mov
out
shrd
aaa
test
and
arpl
dec
rol
ss
mov
out
into
and
ljmp
pusha
pop
in
sub
and
mov
xor
sarb
push
je
das
std
pop
or
pop
notl
or
xor
cmc
insb
rorl
jl
dec
mov
aad
data16
pop
or
or
or
clc
jo
or
ss
or
or
sub
mov
or
adc
daa
sahf
andb
iret
and
dec
sti
add
aaa
dec
shrb
or
lock
cmp
adc
pop
sub
xlat
sahf
imul
mov
xchg
or
movsb
adc
hlt
or
shlb
mov
shl
inc
mov
dec
or
and
or
pop
fwait
repnz
insb
cmpsb
cmc
stos
cmp
movsb
lret
jge
inc
pusha
sbb
out
lcall
lock
mov
xchg
stc
or
xchg
xchg
push
push
pop
insl
enter
and
std
cmp
iret
insb
add
scas
pusha
test
cmp
adc
xor
je
mov
jecxz
pusha
pop
pop
sbb
or
pop
lods
jb
into
and
jp
ljmp
sbb
lds
rorb
aas
mov
mov
pusha
push
cmp
cmp
insl
or
shll
jmp
fwait
inc
or
inc
aas
push
or
int
lock
imul
test
test
fists
dec
push
out
stos
movsb
lock
jl
sbb
invd
mov
daa
dec
mov
pop
mov
mov
insb
or
loope
lods
rorb
adc
cmp
nop
repz
insb
sar
out
mov
jbe
mov
pop
inc
sub
jae
jge
xchg
mov
add
pop
cmp
sub
pop
xchg
pop
or
pop
sbb
movntq
adc
aas
cmp
mov
leave
fldcw
sbb
mov
adc
add
push
and
movsl
pusha
je
push
out
daa
xor
loope
imul
push
inc
xor
xor
outsl
sahf
shlb
add
test
jmp
or
or
sbb
call
orb
clc
jge
or
ss
or
xchg
inc
cmp
insb
xchg
setl
arpl
imul
xor
mov
add
or
cmp
adc
call
pop
or
mov
xchg
push
test
and
and
addb
or
cmpl
mov
mov
popf
xor
sub
pop
sub
iret
imul
rorb
mov
cli
and
mov
push
fldenv
aad
sar
adc
mov
mov
sbb
inc
mov
xchg
imull
rcr
mov
pop
or
test
test
sbb
or
cmc
inc
xchg
mov
mov
test
push
or
push
aaa
sbb
inc
out
cmpl
mov
fs
inc
cwtl
mov
sbb
subl
or
and
int
icebp
dec
push
mov
pop
mov
dec
mov
add
adc
adc
jo
xchg
push
or
mov
add
or
push
push
and
dec
xchg
pusha
push
mov
iret
xchg
cmp
mov
pop
push
lret
ret
or
xor
fwait
mov
dec
incl
pop
add
out
adcb
daa
sbb
fdivrs
xchg
out
mov
clc
and
mov
roll
dec
bound
cwtl
nop
dec
cmpsl
gs
or
xchg
pop
jno
push
icebp
or
sbb
mov
and
inc
iret
fldcw
push
xchg
xchg
mov
or
es
jnp
mov
cmpsl
pusha
sub
lahf
mov
iret
andb
mov
insb
push
or
jnp
faddl
pop
adc
mov
sub
and
xor
mov
adc
out
fdivrl
test
int3
out
push
das
or
mov
add
repnz
test
fidivrs
cld
or
xlat
add
popl
inc
repz
adc
adc
sub
sub
mov
clc
ljmp
or
shl
and
mov
jb
cmp
push
or
mov
jmp
repz
mov
std
inc
xchg
ficoms
js
nop
or
pop
leave
or
mov
or
ljmp
fwait
or
lods
stos
sub
sub
mov
js
and
rorb
into
and
roll
adc
and
dec
or
jne
js
mov
sub
cmpsl
sahf
sar
pusha
xchg
push
xchg
or
in
rcr
sets
sub
dec
or
loopne
lret
adc
jne
mov
icebp
leave
dec
lds
fadds
add
add
ds
aad
or
push
lcall
pop
pop
sti
out
mov
push
add
cmp
in
out
jle
bound
xchg
das
adcb
or
cmp
pop
cwtl
and
out
in
and
ja
shrl
cli
xchg
insb
pop
inc
fbld
pop
nop
and
or
dec
or
repz
loop
insb
jo
insl
cmpsb
add
lods
mov
inc
ljmp
cltd
insb
xchg
pop
and
enter
mov
sub
ljmp
cmp
iret
push
notl
lret
sbb
data16
adc
or
sub
adc
daa
fmuls
xor
and
or
push
pop
stc
mov
push
div
cmp
dec
or
mov
pushf
or
xor
xor
negb
cmc
mov
ud0
push
xor
cmp
roll
mov
fs
dec
xchg
sub
mov
push
xchg
clc
shlb
and
lcall
jno
jge
adc
add
into
cmpsl
test
fwait
fs
adc
sbb
xor
scas
imul
push
sbb
adc
stos
xchg
sub
test
push
jg
repz
dec
iret
push
int
je
outsb
dec
xor
jae
sub
fbld
add
pop
jns
or
xchg
daa
movsl
add
and
mov
lcall
sbb
jnp
fs
popa
add
popf
jle
sub
imul
and
call
lods
addl
fmuls
pop
divb
inc
xchg
adc
pop
pop
or
sbbb
out
push
xor
add
pop
lds
sti
add
or
iret
js
jge
cmpb
xchg
xchg
out
xor
mov
cmp
fsubp
cmp
mov
xor
rcll
push
jno
cmpsl
sub
lahf
ds
sub
jbe
cmp
loop
and
outsl
arpl
sub
pop
mov
xchg
adc
or
pop
data16
or
mov
fstp
data16
xor
jge
lea
decl
iret
pop
sti
jmp
daa
and
inc
inc
sbb
add
rcrb
push
dec
lds
popa
mov
loop
out
mov
or
jns
fcomps
adc
js
mov
and
push
dec
in
push
int
loope,pn
cmp
stos
movsl
add
call
pop
or
cli
push
push
xlat
or
xchg
or
out
sub
aad
mov
test
jg
xchg
or
jbe
lret
pop
stos
leave
rorb
orb
or
popf
out
imul
and
je
inc
enter
int
xor
daa
iret
pop
loope
subl
movsb
xor
sub
xor
xchg
outsl
sub
lock
in
jnp
or
add
or
fimull
lea
bound
cmp
inc
stos
cmc
cmp
lock
inc
lds
ds
sbb
pop
mov
sub
insb
push
or
repz
fisubrs
dec
xchg
push
cmp
sbb
add
incl
mov
addr16
popa
or
jnp
cltd
jg
vsubps
jae
push
aad
mov
ljmp
jno
sbb
xor
iret
into
xchg
lea
clc
and
xchg
jne
iret
inc
stc
push
cmpsb
es
shrl
xchg
xchg
dec
xchg
pop
xchg
imul
or
pop
add
push
imul
test
dec
jle
pop
or
xchg
ss
add
pop
stos
sub
imul
adc
add
and
xchg
cmc
or
daa
sbb
inc
sub
push
shll
cli
int
into
inc
adc
or
dec
ficoml
shl
or
nop
sub
daa
scas
in
rorb
or
push
or
ss
or
inc
popa
ret
add
call
xor
mov
cld
sub
xchg
idiv
dec
or
into
push
dec
or
iret
fsubl
fcomps
call
mov
lret
push
jno
shl
push
adc
push
lock
or
pop
adc
sub
or
movsb
daa
arpl
pop
js
sbb
lret
or
movsb
fistpll
or
in
das
in
sub
jle
xchg
ss
es
shlb
div
insb
sbb
ljmp
xchg
sub
add
or
jp
sub
xor
int3
fcompl
xor
mul
cltd
fnstenv
idivb
rcrl
cmp
test
or
outsb
icebp
loope
out
loopne
addl
inc
pusha
pop
iret
jp
sbb
dec
inc
rol
fmull
sub
and
or
insb
adc
jbe
dec
xorb
lods
dec
clc
or
xchg
pop
push
or
pop
add
jle
add
icebp
adc
sub
ljmp
mov
jmp
mov
fs
movlhps
mov
repz
lea
push
xchg
mov
mov
sub
inc
or
call
imul
pop
and
push
pop
and
adc
cmp
mov
cmpb
cli
cs
out
notb
pop
fidivl
sub
jle
or
jne
test
xor
test
or
adc
mov
testb
inc
imul
cli
mov
lcall
or
das
retw
sar
adc
lds
add
dec
js
mov
jae
bound
loop
lcall
fwait
push
dec
into
push
sbb
jmp
ss
out
in
add
fwait
in
or
inc
and
cmp
testb
or
xchg
pop
cmpsb
cwtl
and
sbb
lret
jo
push
add
fsts
add
in
push
push
adc
ljmp
and
push
dec
fs
daa
add
sbb
and
and
xchg
push
add
test
push
jge
xchg
mov
es
sbb
roll
pop
sar
xor
pop
ret
cltd
cmpsl
pusha
ss
pop
popl
or
clc
dec
insl
loopne
or
iret
xchg
jbe
mov
jle
inc
pop
add
call
popf
imulb
dec
test
sub
inc
add
adc
xor
jge
hlt
add
popf
js
mov
or
ret
or
sub
or
xchg
loop
cmp
or
aam
scas
les
or
cs
or
add
jecxz
jge
incl
jns,pt
xchg
jle
xchg
nop
dec
add
imul
xchg
or
inc
inc
lock
flds
pop
pop
or
push
test
or
call
pop
or
leave
jno
pop
testb
cmp
out
pop
adc
add
pusha
in
repz
lea
push
or
loope
jne
cli
ljmp
and
push
or
mov
sahf
xor
push
push
aam
out
or
and
or
dec
fs
mov
mov
insb
jmp
lock
or
jl
cmpsb
adcb
pop
jne
pop
and
xor
jl
subl
push
scas
and
loope
out
inc
xor
call
cwtl
or
adc
or
mov
es
push
adc
sub
inc
cli
or
pusha
out
out
or
push
pop
inc
inc
and
push
add
adc
out
mov
inc
xchg
ds
or
add
and
push
or
mov
sbb
jp
push
xchg
add
pop
inc
cmpsl
orl
add
cs
push
addr16
and
repz
outsl
bound
sbb
ss
fs
je
mov
nop
adc
push
iret
inc
ljmp
inc
xor
xchg
js
inc
cltd
pop
dec
and
cmp
cmp
scas
mov
cmpsl
les
out
leave
insb
dec
or
add
push
movsl
or
or
ret
dec
add
pop
mov
cs
fwait
out
or
or
test
scas
rolb
ds
lret
loop
bound
es
dec
orl
iret
sub
mov
pop
push
xor
shrl
fdivl
cmp
push
cmpsl
out
test
hlt
and
dec
stos
xor
rorb
mov
nop
scas
jp
adc
cmp
lea
sbb
mov
ret
imul
test
and
jge
xor
aam
mov
or
rcl
inc
es
inc
jb
add
call
pop
push
jnp
in
imul
xor
xchg
aas
sub
nop
push
pop
cmp
pop
ljmp
sub
aam
or
sub
jb
xchg
xlat
iret
or
xchg
cmp
adc
cs
movsb
sbb
sub
xor
cltd
mov
movsl
in
or
mov
cmpsl
shlb
mov
push
push
inc
sbb
inc
pop
scas
ficoms
or
sub
push
loop
add
sub
lock
es
push
das
inc
adc
cmp
popa
rclb
inc
jnp
mov
repnz
addr16
or
push
push
and
inc
ret
sahf
loopne
int
loop
rorb
lock
fistl
outsb
sbb
clc
or
mov
xchg
loopne
mov
cmp
adc
or
mov
leave
cmpsl
iret
add
pop
and
or
pop
jl
shlb
mov
lock
inc
cmp
aaa
push
or
inc
mov
jp
or
mov
jmp
mov
lcall
ror
push
add
repz
jmp
inc
jmp
sbb
add
or
pop
loope
out
in
mov
xchg
movsb
or
and
sub
push
sti
lret
or
mov
lods
xchg
adc
in
out
test
cmp
fidivrs
clc
push
outsb
leave
adc
dec
pop
add
mov
mull
or
jmp
jge
insb
dec
cmp
or
stos
inc
and
loope
ljmp
pop
imul
iret
mov
mov
xor
mov
adcb
push
les
mov
out
lods
sub
into
test
xchg
mov
daa
xlat
push
cltd
call
fcoml
test
mov
mov
sbbl
mulb
adc
fcoms
jae
or
add
int3
lods
out
decb
repnz
pusha
push
xchg
lods
push
pushl
ret
stos
and
incb
or
fcomps
sbb
or
leave
out
outsl
mov
ss
push
pusha
or
hlt
out
sub
and
data16
jno
pop
out
pop
outsb
or
cmp
dec
notl
icebp
popf
pop
mov
lock
xchg
rclb
push
mov
cmp
sub
or
popf
test
iret
cmp
rorl
mov
lret
cmovae
imul
outsl
push
pop
sbb
inc
xor
or
xor
mov
fcmovu
insb
sarb
add
or
js
sti
leave
xor
xchg
imul
dec
and
and
sub
xchg
push
fisttps
hlt
mov
int3
inc
or
cs
mov
inc
cmpsl
add
mov
mov
mov
mov
mov
sbb
cmp
pop
dec
or
pop
cwtl
cs
jmp
pushf
fidivrs
enter
ljmp
lret
mov
and
mov
shrb
or
sub
cmp
sbb
out
cmpl
leave
jge
addr16
inc
js
and
sub
pushf
lods
jne
or
aad
xor
push
iret
adc
jo
pop
pop
aam
jnp
lcall
roll
insb
pop
out
ds
ljmp
inc
sub
mov
push
push
adc
scas
mov
iret
movl
lods
adc
or
cmp
mov
xchg
leave
std
or
cltd
mov
mov
push
aam
sahf
pop
and
or
nop
add
xchg
and
xlat
lds
xlat
xchg
and
iret
pop
jo
jmp
and
imul
rorl
or
fs
stos
cmp
jp
add
xchg
ja
mov
jg
stos
and
pop
pop
shr
stos
daa
add
loopne
ret
xor
or
mov
movsb
inc
lods
or
xchg
jecxz
out
pop
add
sbb
add
pop
or
js
mov
pop
lods
imul
pop
add
syscall
lea
or
or
lods
pop
insb
xchg
data16
mov
mov
mov
mov
imul
mov
pop
jnp
sbb
ds
call
vpavgb
or
push
pop
cmp
in
lret
push
pop
adc
xchg
pop
pop
loop
rclb
fwait
xchg
sbb
and
jmp
sbb
stos
inc
sahf
fstpt
sti
push
fcomip
rcll
insb
mov
xlat
stos
popf
fisubl
mov
ss
jbe
pop
fdivr
push
jecxz
fstl
and
or
stos
mov
xor
daa
or
in
bound
call
leave
or
dec
cwtl
mov
or
add
push
js
mov
pop
add
enter
rorb
mov
fnstenv
xchg
cmp
imul
sbb
stc
es
push
adc
push
jmp
sbb
mov
in
or
mov
inc
jb
inc
or
mov
mov
jnp
subl
jmp
outsb
mov
push
loope
or
jbe
lahf
mov
ror
mov
and
push
punpckhdq
cmp
or
imul
mov
or
sbb
and
arpl
out
sbb
iret
adc
icebp
fadds
xchg
pushf
push
jae
scas
cmp
mov
aas
loope
or
scas
rorb
xchg
loope
or
xor
fucom
inc
inc
lods
out
cli
shlb
popf
push
or
fadds
fiaddl
jg
iret
enter
mov
inc
test
or
stos
cli
sbb
bound
add
push
or
repnz
inc
fstpl
lods
cmp
out
jne
daa
je
pop
sub
loopne
inc
mov
xlat
in
adc
scas
ds
jbe
test
pop
out
push
add
adc
in
cmp
dec
cwtl
mov
jmp
mov
dec
stc
andl
loopne
test
aas
mov
std
add
pusha
dec
call
or
icebp
pushf
mov
adcb
jmp
sub
jg
pop
add
cmp
aad
lret
push
or
std
out
adc
dec
lds
es
add
sbb
shufps
or
loopne
jl
mov
cld
sti
out
or
sub
push
or
jnp
iret
or
adc
leave
inc
jg
mov
jne
inc
or
add
les
ret
xchg
lods
or
or
mov
xchg
rcll
jp
popa
out
cmpb
ret
outsb
dec
imul
sbb
pop
pop
xor
and
psubsb
mov
push
orl
gs
out
push
insl
movsb
push
enter
ss
inc
sub
out
orb
scas
or
adc
mov
ljmp
pop
push
fsub
in
mov
mov
cmp
fisttps
ret
sahf
add
bound
jge
cs
sti
addb
ds
out
ret
rclb
psubq
pushl
mov
pop
jmp
lds
subl
adc
mov
cld
mov
or
xor
push
dec
add
mov
aas
fwait
in
xchg
je
sbb
aaa
lret
movsb
in
or
das
adc
iret
or
mov
cmp
jb
push
push
fisttps
stc
add
cs
or
mov
jbe
dec
add
jmp
xchg
push
add
or
mov
cmp
imul
fmuls
imul
rcr
mov
out
jno
inc
stc
loopne
fs
or
xor
pop
jmp
adc
insb
in
cmp
cmp
jnp
xor
sahf
bound
inc
or
cld
or
dec
aad
or
or
dec
pop
xor
mov
pop
out
in
mov
loopne
lcall
mov
idiv
and
or
adc
or
add
jb
push
daa
mov
dec
jge
insb
es
xchg
lods
jae
test
or
shll
fs
cmp
push
push
xchg
fcoms
out
add
inc
int
jno
lods
dec
jg
mov
xchg
inc
mov
push
adc
sub
pop
testb
out
out
cmp
fisttpl
dec
clc
ret
enter
rcl
pop
imul
lret
sbbl
test
push
fadd
call
hlt
jae
sub
pusha
push
insl
fstps
push
push
pop
subb
xchg
or
jno
test
push
out
addr16
add
inc
fbstp
sbb
mov
mov
mov
add
mov
lcall
push
and
sbb
mov
inc
or
call
mov
in
fwait
test
add
lds
xchg
scas
add
fildll
xchg
jp
andl
ret
insb
xor
sub
aaa
jne
push
dec
add
loope
ds
pand
fiadds
movsl
icebp
sbb
jne
dec
rcll
iret
punpckhwd
clc
add
test
cmpsb
or
lret
adc
xchg
es
out
push
pop
dec
add
mov
xchg
movsl
jl
outsb
pop
jp
rorb
push
mov
inc
push
iret
clc
sub
cmpsl
add
bound
mov
addr16
and
out
add
pop
push
js
andl
lcall
mov
jne
ljmp
or
xchg
dec
es
cmp
cmc
fists
push
xchg
je
inc
pusha
add
test
xor
repz
imul
dec
jmp
or
pop
sbb
xchg
fisttps
sbb
out
jg
push
xchg
inc
test
adc
scas
xor
or
leave
pop
mov
lea
pushf
jl
daa
out
mov
movsb
pop
roll
lret
push
xchg
enter
in
jb
sub
adc
inc
insl
shlb
push
jno
into
jle
ret
mov
rolb
mov
jg
mov
push
inc
rcll
or
sub
iret
add
cmc
inc
pop
mov
or
addr16
jns
ret
call
pop
aas
xchg
jne
stos
dec
repz
mov
xchg
mov
pushf
test
adc
or
xor
or
in
pop
dec
push
sbb
or
mov
scas
sbb
iret
sti
or
cwtl
loopne
cmp
cmp
pop
or
dec
add
mov
pop
push
mov
sbb
inc
dec
js
mov
stos
insl
popf
pushf
lret
int
sti
and
xor
popa
rcll
out
mov
mov
or
sti
sbb
jmp
inc
or
push
es
push
jo
sub
cli
stc
out
jg
popl
mov
scas
outsl
std
insl
filds
pop
gs
out
jo
inc
daa
jne
lar
dec
fs
or
sbb
pop
pusha
imul
in
movsl
mov
adcl
or
inc
and
xor
roll
fldt
ficompl
and
shrl
mov
xchg
add
add
pop
int3
movsl
stos
adc
mov
inc
lcall
pop
sar
ja
sub
inc
bound
cltd
mov
roll
mov
push
mov
lea
testl
ret
push
ret
popa
sbb
mov
mov
pop
mov
fisubl
out
sbb
aam
or
sub
repnz
out
repnz
xchg
jecxz
and
ret
cmpsl
shl
mul
test
ret
mov
in
in
iret
das
ret
daa
aas
idivb
lds
jnp
testb
push
mov
callw
test
mul
xchg
out
mov
push
cmp
mov
jp
xlat
testl
out
adc
loope,pn
jg
lock
ss
les
or
push
or
pop
call
xchg
lds
inc
data16
je
jle
xchg
xchg
mov
adc
cli
test
inc
mov
pop
mov
jl
mov
or
addr16
enter
and
jo
jne
popl
or
inc
mov
mov
div
add
loop
mov
les
xchg
insl
jp
cmpsb
cwtl
out
daa
pop
insl
push
into
xor
push
or
xchg
in
pop
sub
pop
leave
mov
test
in
outsb
ret
push
sbb
outsb
pop
xchg
insl
idivl
jne
pusha
push
add
in
xchg
or
mov
mov
pushf
xchg
loop
js
ficomps
popf
inc
cmp
les
sti
mov
in
ds
pop
jns
into
and
daa
insl
pop
mov
and
mov
cmpsl
vfrczss
mov
testl
fnstsw
mov
enter
test
mov
pop
mov
add
addr16
in
xor
out
push
add
cmpsl
pop
mov
sbb
in
sub
jle
xchg
mov
xchg
jnp
imulb
addr16
gs
xor
out
loope
rcr
out
xlat
out
iret
mov
mov
lock
scas
jae
push
ret
pop
aas
test
push
inc
ret
mov
or
ret
xchg
mov
mov
xchg
flds
or
mov
xchg
sub
jns
ja
add
popa
cmp
push
and
cmp
adc
adc
in
xorb
pop
shr
mull
repz
pop
jge
sti
inc
ja
cmp
sbb
pop
xor
cltd
or
mov
mov
fisubrs
inc
jno
bound
je
xchg
pusha
cmp
jecxz
inc
push
insl
mov
mov
pop
cmp
jecxz
rorl
xchg
mov
lds
jbe
outsb
xchg
jge
int3
push
pusha
fs
repnz
pop
xchg
inc
in
popa
ret
xchg
sub
popa
lock
push
arpl
lock
dec
gs
mov
mov
push
js
out
jno
xor
add
pop
jno
pop
inc
pop
fistpl
mov
lret
jno
xchg
test
sbb
mov
js
sbb
sbb
mov
or
jbe
hlt
mov
mov
xchg
aad
in
out
mov
cmp
lods
adc
mov
or
repnz
call
sbb
cmp
xor
dec
lods
sub
xchg
sbb
testl
dec
mov
add
out
add
lea
inc
es
pop
or
fldl
push
add
inc
add
push
inc
outsb
xchg
call
sub
push
pushf
in
pop
jle
xchg
outsb
xchg
je
jle
mov
push
movl
cmp
std
or
mov
add
mov
mov
mov
and
inc
add
or
sti
test
adc
test
jle
mov
xchg
mov
mov
testb
out
rorl
shl
sbbl
out
inc
stc
add
inc
int
jecxz
cli
dec
inc
js
jnp
mov
lahf
out
mov
add
xchg
mov
xchg
cmp
jecxz
test
jae
stos
popa
roll
sar
orl
xchg
test
and
mov
push
cmp
popf
enter
inc
push
lret
inc
adc
es
add
pop
inc
xchg
shl
fldl
push
mov
cmpl
inc
inc
adcb
xchg
lds
cmp
xchg
stc
addr16
xor
add
test
xchg
rolb
vcmpordsd
xor
pop
int
in
xchg
cmc
inc
jg
in
add
xorl
hlt
xchg
mov
and
mov
sbb
and
inc
push
xchg
add
or
sub
add
ret
test
jg
dec
ret
sarb
jo
cmpl
jo
mov
in
mov
xchg
enter
mov
testl
pop
mov
rcrb
addr16
pop
jl
cwtl
pop
cmp
arpl
inc
shll
sbbl
inc
jnp
mov
test
lock
add
movsl
inc
cmp
ret
test
xchg
and
jle
adc
pop
nop
rol
inc
add
imul
nop
insb
pop
clc
xchg
cmpl
mov
shr
andb
xchg
inc
jecxz
add
insl
incl
js
cli
mov
incb
or
lds
dec
push
mov
inc
rcr
add
jnp
js
movsl
inc
testl
pop
inc
cmpb
addl
test
sarb
push
loope
and
inc
jnp
movsl
add
pop
int
clc
lds
mov
repnz
outsl
js
xor
loopw
aad
xchg
add
addl
xchg
repz
test
inc
push
fldl
inc
jp
mull
out
imull
sti
xchg
notl
sbbl
ja
decl
into
push
roll
in
push
pop
add
lret
lock
mov
mov
addr16
pop
jle
pmaxsw
jnp
js
mov
xchg
loope
and
xchg
cwtl
emms
test
push
add
cli
push
add
jle
lret
jo
lea
inc
pusha
pandn
cmpsl
notl
notl
in
mull
ficoml
inc
xchg
and
test
inc
xchg
add
inc
xchg
pusha
inc
and
jno
xchg
inc
roll
jg
jne
xchg
outsl
out
xchg
sub
add
add
add
repz
das
xchg
push
rol
push
daa
cmpb
or
loopne
mov
adc
and
inc
movzwl
inc
test
orl
scas
xchg
sbbb
in
insl
cs
scas
addb
push
sahf
mov
xchg
les
std
arpl
cmp
push
add
addb
lret
orl
clts
movl
inc
js
xchg
into
add
test
ss
add
rolb
xchg
add
mov
sahf
inc
repz
xor
push
into
inc
sub
inc
fnstenv
cmpl
insb
sbb
jbe
fs
mov
addr16
les
cmp
icebp
lds
add
ret
roll
std
adc
add
notl
add
xchg
movl
repnz
addb
mov
sub
sbb
arpl
out
dec
add
cmpsl
mov
dec
sarl
pop
mov
jle
xor
sti
icebp
int
mov
cmp
daa
sub
xchg
mov
in
loope
jmp
jp
inc
and
sarl
out
test
aas
mov
sub
je
push
cmp
push
inc
mov
xchg
add
mov
pop
add
addl
mov
jne
inc
xchg
cmp
test
xor
fnstcw
pop
ror
shl
scas
and
cli
add
neg
sarl
imul
imul
add
push
orl
push
sub
out
loopne
mov
rcrb
roll
loope
dec
out
inc
shll
adcb
jnp
add
inc
test
cmc
sbb
jg
mov
roll
popf
fcmovnb
clc
je
xchg
in
lds
mov
mov
sbb
out
addl
cmp
mov
movl
fnstcw
jg
repnz
std
andb
mull
dec
jns
jge
add
inc
movl
out
add
adc
inc
loopne
popa
into
je
sbb
test
sub
mov
push
out
adc
addb
add
decl
popa
xchg
add
xlat
inc
cmp
jg
call
out
add
push
sub
out
fistpll
fiadds
pusha
int
hlt
add
pop
inc
xor
pop
dec
add
mov
test
jbe
xchg
dec
cmp
add
add
cmpb
leave
aam
jno
rcrl
icebp
subb
addw
testl
decl
push
js
call
loopne
out
std
mov
push
icebp
mov
ret
cmpsb
jmp
xlat
mov
bsr
mov
addl
rolb
adcb
fwait
rolb
ret
pop
roll
add
or
add
or
mov
inc
push
jle
out
lds
test
xor
testb
ret
cmp
or
sbb
out
xchg
pop
push
test
adc
jl
call
add
xor
inc
out
out
inc
add
insl
push
inc
or
xlat
out
inc
mov
inc
jge
movsl
out
ret
add
lcall
in
out
jg
inc
push
xor
dec
out
scas
ja
outsb
xor
loope
cs
push
dec
incl
movsl
roll
adc
cmpsb
dec
pop
adcb
push
lods
and
sbb
jle
fs
adc
movl
and
fcmovu
shl
or
adc
movl
ret
sahf
mov
ret
inc
addl
add
adc
test
push
stos
dec
out
lcall
out
out
rolb
or
scas
out
add
pop
loopne
rol
add
hlt
movntq
in
out
adcl
add
inc
fs
out
into
out
addb
mov
lds
pop
filds
testb
std
xchg
lcall
jg
dec
mull
and
push
in
in
subb
lahf
imul
lahf
push
inc
push
out
add
and
add
lds
repz
pop
clc
cmp
test
inc
pop
add
add
cmpsb
push
cmpsl
test
jle
xchg
stos
test
sbb
ret
sbbl
mov
ss
jbe
jp
pop
inc
ret
push
lret
xchg
or
sbb
mov
repz
out
mov
dec
out
mov
dec
fistpll
add
push
inc
cmpsb
lds
imul
adc
cmpb
icebp
xchg
push
inc
add
cmc
out
add
jmp
sahf
inc
mov
cmp
lods
out
push
or
andl
stos
loop
testb
daa
sub
jne
jb
xchg
jnp
addl
dec
mov
push
fisttpll
test
pop
sbb
pop
lret
xor
lods
xchg
fiaddl
int
xchg
incb
lock
sbb
mov
jnp
add
movsl
dec
es
stos
loop
add
fnsave
ss
cltd
inc
jge
dec
es
pop
fldl
push
pop
addb
sbb
out
sbb
and
and
call
xchg
cmp
cmp
daa
outsb
leave
jl
mov
mov
loopne
orb
outsb
cmpsl
sbb
jne
lret
cmp
push
cld
ds
jns
dec
jle
cmp
push
pop
adc
lret
lods
dec
cmp
or
jbe
jp
push
rorb
or
push
cmp
iret
cli
movb
push
jb
in
out
test
sub
xchg
int
xor
jecxz
or
outsl
ja
inc
js
pusha
cmpsb
test
fdivrs
pop
xchg
mulb
push
imul
add
push
lock
fisttpll
loop
jge
jg
pop
in
xor
hlt
jno
test
jnp
mov
sbb
mov
jg
addr16
add
inc
push
push
push
sbbb
mov
and
andb
add
add
or
cli
inc
pop
mov
ret
daa
sbb
add
test
cld
cmp
mov
mov
fucomip
inc
ljmp
add
incb
and
mov
push
pop
xor
clc
fbld
add
loop
inc
lods
push
xchg
ret
outsl
fisttps
fbstp
sub
cmp
test
and
or
stc
push
fists
pop
inc
ret
or
inc
inc
add
inc
jnp
inc
out
ret
push
mov
jg
jp
test
aad
jle
daa
rcll
movsl
sbb
inc
mov
inc
or
loop
inc
push
push
xchg
cmpsl
mov
pop
inc
aas
ret
xchg
incb
dec
movl
push
cmpl
out
add
cld
ret
outsl
pop
jle
xchg
mull
inc
idivb
mov
mov
aaa
mov
xchg
div
in
addr16
jle
xlat
cs
out
out
cmp
jae
ret
add
inc
mov
scas
fsubp
jp
push
imul
mov
mov
mov
cmpb
mov
pop
idivb
mov
push
lds
pop
mov
jge
into
addr16
dec
mov
and
out
add
sbb
clc
jnp
idiv
cmc
push
adc
and
xorb
add
add
add
add
inc
insl
cmc
lods
xchg
ret
xlat
sub
insb
hlt
les
xchg
add
gs
xchg
xchg
xlat
sahf
ja
gs
inc
daa
adc
add
jmp
cmpsl
pushf
test
add
repz
dec
das
add
test
jmp
or
mov
push
test
sub
or
jp
test
or
enter
mov
movsb
mov
xorl
iret
lret
out
add
pop
leave
sub
xor
clc
or
ret
add
xchg
out
jmp
mov
add
addb
in
push
or
add
daa
and
call
mov
or
add
movsb
and
or
roll
out
pushaw
scas
test
leave
dec
dec
ret
lds
or
in
fs
lods
sub
lret
int
dec
mov
inc
or
loopne
popa
scas
test
sub
into
enter
les
or
in
gs
lods
sub
dec
div
jbe
or
stc
jle
or
cmc
jb
or
std
jp
or
lock
or
clc
jg
or
hlt
jae
or
cld
jnp
or
mov
xor
xlat
rcll
mov
pop
pop
mov
xor
rcl
push
push
mov
fcmovnu
pop
pop
mov
aaa
xor
rclb
mov
pop
pop
mov
xor
push
mov
fcmovu
pop
xchg
push
push
stos
inc
or
mov
pop
push
into
popl
adc
out
loopne
xor
inc
inc
pop
lds
add
cmp
movb
cmp
cmp
daa
mov
and
ds
jge
sbb
ljmp
add
pop
stc
arpl
nop
aad
push
cmpsb
sti
mov
xchg
pop
int
shl
mov
stos
insl
fdiv
or
add
hlt
sbb
or
imul
jne
out
pop
or
cmp
test
xchg
mov
push
cmp
lcall
or
movsl
dec
push
outsb
in
push
sahf
imul
add
adc
pop
shll
and
decl
in
inc
jmp
jae
sub
mov
jne
mov
shl
lock
push
or
out
mov
inc
mov
mov
and
sarl
in
adc
shll
pop
mov
xchg
out
fneni(8087
dec
push
mov
ret
pusha
cmp
jno
insl
mov
xchg
loopne
out
aas
movsb
in
mov
movsb
out
push
xchg
ja
inc
xchg
je
idivl
out
setne
call
xchg
pop
inc
pusha
inc
lds
jnp
xor
xorl
mov
out
lcall
decb
mul
mov
out
scas
add
fadds
pushf
in
out
and
loope
or
cmc
xor
xor
lea
frstor
lds
sub
mov
pop
movsb
fstps
cmpsb
out
cmp
and
xchg
lds
inc
pop
push
out
mov
push
out
lret
push
imul
mov
xor
sbb
bound
lcall
cmp
hlt
and
fmuls
jbe
out
int
mov
add
inc
gs
cmpb
cmpsl
out
jp
jne
out
outsb
mov
out
pop
mov
aad
mov
mov
adc
out
fstpt
out
xor
inc
mov
repnz
cmp
lods
xchg
lds
out
xchg
lds
repnz
dec
sub
addr16
out
out
pop
insl
sbbl
decl
dec
test
push
jl
loop
je
repnz
push
lds
fs
add
bound
std
mov
jle
testl
jg
insb
shll
push
push
pop
out
jnp
jge
int3
rcl
arpl
inc
mov
mov
pop
mov
inc
xchg
cmpsb
in
sarl
clc
jae
shlb
dec
xchg
jmp
push
outsl
pop
inc
or
push
add
or
mulb
mov
inc
jecxz
mov
test
loopne
daa
lea
mov
int
notb
pop
jle
xor
and
mov
outsl
jp
mov
mov
cmp
ret
fiadds
and
mov
mov
inc
in
sub
jnp
testb
ret
dec
mov
inc
jg
divb
sbb
hlt
inc
shl
mov
faddl
int3
mov
mov
lods
lds
jnp
aam
loopne
and
movsb
add
lock
test
cmp
lds
in
or
loopne
lcall
frstpm(287
arpl
mov
movsb
lds
in
mov
xchg
sub
imul
testb
bound
sub
in
adc
adc
or
out
lds
je
stos
nop
fs
lcall
push
mov
lds
and
in
arpl
jnp
into
les
pop
ja
out
lds
in
xchg
mov
mov
idivb
in
xor
jns
gs
imul
dec
vrcpps
inc
add
sbb
adc
or
mov
call
mov
dec
jp
addr16
out
lods
and
add
ja
out
push
movsl
imulb
push
mov
jle
mov
cmp
dec
add
xor
push
add
dec
adc
adc
add
xchg
add
outsb
mov
mov
push
sbb
inc
cmp
pop
int
adc
sbb
mov
out
push
push
lock
xor
or
xchg
out
pop
mov
sarb
add
scas
jbe
adc
push
mov
mov
stos
push
dec
lea
push
fnstsw
lret
and
orl
mov
jmp
pop
mov
mov
pop
es
je
add
or
sub
lahf
mov
xorl
in
pop
jbe
adc
repz
rcrl
and
movsb
test
popa
push
xchg
inc
dec
or
in
pop
xor
inc
or
dec
or
fsubrs
iret
jae
push
lret
in
leave
lret
mov
ja
fcmovnu
add
push
sbb
cwtl
add
jb
or
lret
and
add
jo
fstl
adc
iret
or
cmp
pop
iret
mov
lock
stc
pushw
psrlq
pop
iret
fcompl
hlt
sbb
addr16
xor
and
incl
adc
inc
pop
cltd
lcall
test
mov
add
mov
or
jge
divb
cltd
mov
jmp
dec
sbb
xchg
aam
jae
push
xchg
push
inc
sub
lods
pushf
push
mov
mov
mov
xchg
or
out
sahf
add
out
push
je
lea
push
xor
cmp
sub
daa
or
inc
or
or
push
or
ljmp
lods
sub
inc
xchg
scas
negl
jo
jecxz
xor
push
bound
push
ss
mov
xchg
cmpsl
or
aas
inc
cmp
nop
xchg
or
cmpsb
inc
xchg
and
rcrb
in
adc
mov
sbb
or
add
shlb
adc
insl
or
imul
bound
and
or
push
and
lds
lea
jo
pop
push
jnp
ja
fs
cmp
and
mov
or
arpl
add
inc
push
inc
mov
dec
push
adc
sti
add
sbb
dec
popf
or
fmull
incl
ja
aas
mov
mov
jecxz
jl
lods
dec
pop
ss
add
cs
adc
je
or
jns
push
movsl
ret
fimuls
cmp
or
sahf
mov
decl
or
mov
faddl
push
lea
mov
push
subl
je
or
sub
daa
out
cmc
xorl
cltd
out
sti
adc
imul
sbb
mov
pop
imulb
add
jp
mov
stos
loope
les
xlat
aad
inc
daa
ss
out
movsb
and
movb
xchg
dec
leave
shlb
mov
dec
ffreep
out
xchg
xchg
mov
and
call
xchg
cmp
add
imul
mov
xor
push
inc
jbe
push
inc
push
aaa
outsl
or
out
cmpsb
dec
insl
mov
inc
pop
es
xchg
dec
outsb
cmc
call
loope
sbb
or
lds
movsl
mov
loopne
mov
js
push
jecxz
pop
stc
and
gs
adc
leave
jmp
or
or
adc
je
out
cmc
mov
mov
loope
xchg
xchg
add
scas
test
pop
xchg
lcall
outsl
mov
iret
add
dec
push
pusha
jns
or
xchg
jo
aam
or
sub
addb
or
out
push
sub
pusha
arpl
push
and
outsb
adc
jb
sbb
jmp
pushl
int
push
inc
data16
ljmp
out
pop
pusha
jb
jg
push
mov
add
adc
bound
lods
or
push
cmc
shlb
dec
mov
add
gs
or
decl
pop
adcl
sti
lds
xchg
push
int
testl
add
cmp
ja
xor
mov
xor
and
iret
jecxz
roll
fs
jne
sbb
flds
adc
repnz
xorl
in
mov
push
sbb
mov
xchg
es
lret
cmpsb
mov
push
pop
mov
es
pop
cmc
inc
mov
pop
in
dec
filds
xorb
rolb
mov
repnz
out
sbb
add
inc
lock
ret
push
jae
sti
in
add
icebp
mov
add
cltd
add
call
sbbb
out
pop
add
or
es
push
jmp
lret
add
xchg
xchg
cld
add
out
mov
adc
push
and
enter
rcrl
rolb
xor
jecxz
gs
or
push
out
sbb
adc
jecxz
cmp
in
inc
pushf
ret
aas
inc
push
out
rcl
adcl
and
cmpsb
mov
push
push
xchg
fs
jnp
incl
stc
gs
stos
jns
push
les
jecxz
ds
jmp
cltd
xchg
cmp
xchg
jecxz
xchg
mov
insl
sub
sti
and
xor
inc
adc
lods
inc
movsb
push
loop
ret
andl
out
mov
data16
icebp
adc
xchg
mov
or
lret
cmpsb
mov
push
jl
addr16
test
test
sbb
sbb
sahf
jno
adc
cs
leave
push
lds
scas
mov
loope
leave
test
pusha
les
imul
not
repz
jecxz
orl
inc
push
icebp
inc
inc
rolb
and
int
gs
jno
lahf
ljmp
push
popf
lea
or
sti
push
sbb
les
gs
fildll
in
adc
and
xchg
incl
push
jg
push
shlb
inc
and
add
aam
push
jecxz
lret
push
push
mov
xor
inc
stc
int3
add
addb
es
pop
mov
iret
xchg
testl
popf
faddl
mov
push
daa
inc
add
ficomps
cmpsl
mov
push
lods
inc
dec
inc
add
shll
or
repz
es
push
mov
push
int
outsb
sbb
incl
testb
lret
test
loopne
clc
push
adc
add
leave
push
mov
push
and
ror
or
sbb
cmp
mov
xchg
insb
outsb
push
into
inc
in
jns
loope
adc
jnp
out
pop
imul
xchg
jl
add
inc
add
inc
xchg
xor
out
ret
add
dec
aad
outsl
or
mov
inc
cld
das
jmp
cmp
xchg
xchg
sub
cmp
cmp
mov
mulb
push
fldt
add
dec
mov
es
bound
cmpsb
or
cli
mov
cmpsb
cli
add
push
into
jmp
repz
addl
inc
cmp
and
pop
insb
mov
mov
cs
inc
jnp
clc
aad
inc
jmp
in
enter
inc
repz
popa
scas
into
pop
push
and
add
insb
out
gs
xlat
pop
pusha
add
mov
cmp
daa
and
adc
clc
add
xchg
dec
jmp
stc
add
xor
daa
push
in
mov
es
add
sub
in
push
push
aas
lcall
adc
not
or
jg
mov
adc
jbe
scas
xchg
push
xchg
out
mov
xor
pop
sbb
es
xchg
in
push
movb
mov
movb
inc
inc
cmp
hlt
push
mov
bsr
mov
sbb
or
icebp
lds
or
push
lods
mov
and
and
add
or
sub
and
pushf
or
incl
sbb
lds
adc
mov
push
mov
test
push
rorb
shrb
mov
push
cmpsl
and
test
push
movsb
pushf
mov
lret
and
cmpsb
ret
or
jnp
loopne
inc
jecxz
sub
push
or
add
andb
inc
outsb
clc
push
ret
push
sub
lods
add
adc
nop
adc
inc
add
out
pop
incl
iret
cmp
sbb
xchg
mov
push
scas
sbbb
ja
lds
xchg
mov
lahf
add
push
adc
and
and
push
sti
inc
push
sbb
fildll
shrb
ja
mov
push
pusha
aaa
inc
das
adc
or
or
lods
pop
push
out
xchg
out
or
jge
add
ja
jp
out
mov
adcl
dec
add
test
and
ffreep
ja
leave
xchg
ficoms
add
sbb
cld
add
out
push
hlt
push
popa
or
jmp
adc
xchg
orb
inc
orps
inc
cmpsl
fwait
or
sub
push
dec
stos
lea
ss
push
jmp
or
adc
inc
clc
dec
add
pop
test
cltd
popa
pmuludq
iret
or
and
movsl
and
test
popa
jno
inc
test
sahf
testl
imul
dec
inc
jne
aaa
or
fs
mov
jecxz
push
jne
fld
aas
fstps
inc
inc
xchg
inc
jge
out
xchg
xchg
cs
cmc
mov
add
xchg
cmp
faddl
outsl
mov
cmp
add
popa
je
add
cmp
cmpsb
dec
mov
repnz
in
das
or
adc
callw
mov
lahf
stos
testl
pop
adc
push
jbe
sbb
cwtl
sti
push
shl
addb
sbb
push
cmpsb
lret
pop
cmc
hlt
lret
cld
roll
ret
jle
ss
out
imul
lret
mov
push
cltd
cmpsl
popa
mov
sub
inc
cli
aam
add
popf
int3
and
push
call
pop
push
push
jle
shrb
pop
in
and
addr16
shl
test
add
ret
pop
lret
adc
push
jae
mov
push
inc
lahf
insl
add
lea
add
cld
jmp
push
in
mov
xadd
mov
or
out
push
lds
in
push
adc
inc
or
iret
scas
or
sbb
push
mov
sub
or
sahf
out
mov
repnz
out
sub
imull
push
inc
lret
movsb
inc
xorb
std
iret
jecxz
popl
pop
cmc
mov
and
pop
lahf
test
inc
out
add
jbe
out
frstor
imul
out
pop
ret
or
testl
xchg
xchg
inc
cmpsb
xchg
gs
pop
jbe
or
inc
inc
iret
cmpsb
idivl
repnz
imul
ret
mov
outsb
cmpsl
mov
push
sub
and
out
sub
iret
inc
dec
cmp
mov
inc
les
fimuls
push
mov
add
notl
cld
ret
scas
add
loopne
jbe
cmpb
pusha
inc
cmpb
orl
xchg
xlat
push
pop
pop
or
fnstcw
cld
pop
addr16
sub
stos
ret
bound
push
add
xor
push
push
dec
xchg
mov
rorb
xor
inc
or
imul
fldl
nop
ds
ja
xchg
loopne
pop
and
sbb
cmp
decl
jnp
test
out
test
mov
push
sub
rolb
cmp
roll
cmp
mov
arpl
jecxz
inc
xlat
ja
repnz
adc
jg
lahf
jo
gs
cmpsl
ret
ret
fldl
inc
adc
incb
cmc
cmpsl
mov
es
add
push
pop
in
inc
roll
outsb
fs
mov
xchg
insl
inc
and
dec
cmc
inc
data16
data16
int
xchg
outsb
sahf
push
mov
pusha
inc
rol
inc
dec
mov
out
les
mov
test
int
xchg
js
lock
cmp
outsb
daa
jbe
pop
pop
addr16
int3
inc
ret
mov
out
and
inc
jecxz
data16
out
outsb
jnp
adc
repnz
dec
pushf
push
lcall
mov
lea
push
push
add
fwait
cwtl
out
pop
add
adcb
sahf
daa
xchg
cmpsl
faddp
insl
les
lds
xrstors
inc
sbb
ret
in
xlat
cmpsb
imul
pop
test
out
out
push
stos
repz
xor
hlt
mov
ds
mov
popf
lcall
jo
shl
push
pop
mov
dec
rcrb
push
cmc
xchg
in
loopne
and
out
into
loop
inc
inc
inc
inc
xchg
xor
inc
and
sub
mov
xchg
xchg
cld
pushf
dec
sbb
std
mov
mov
fstl
push
outsl
test
insl
test
in
pop
movsb
cld
je
cmpsl
test
mov
dec
sub
add
insb
sbb
mov
ret
shrb
out
gs
imul
rorb
ss
shr
jmp
push
test
add
ret
pusha
add
cmp
in
inc
enter
cmp
or
sbb
add
mov
and
push
or
das
fisttpll
add
push
sahf
test
jmp
sbbl
mov
rolb
push
cltd
mov
push
insb
aad
mov
stc
xlat
adc
rorb
sbb
inc
mov
and
js
jmp
dec
sahf
add
push
outsl
push
xchg
pushf
ss
add
add
popf
aas
in
add
lods
int
dec
push
sub
lret
gs
sbb
cs
cld
xlat
in
faddl
stos
mov
jmp
into
je
dec
hlt
push
inc
xchg
push
sub
pop
jno
jmp
jmp
clc
inc
sbb
mov
jle
lret
add
mov
stos
ja
iret
add
cmp
jae,pn
or
in
arpl
insb
inc
inc
push
push
jecxz
push
mov
and
xchg
push
jmp
stc
repnz
sub
rolb
push
mov
mov
xchg
lcall
addr16
dec
push
pop
push
adc
pop
bound
pop
inc
cltd
push
push
cmp
gs
add
mov
inc
ficoml
stc
push
adc
jmp
pop
and
mov
inc
popa
push
in
popl
int3
jns
rol
cs
inc
cmp
int3
cmp
or
sub
paddusb
xorb
add
call
iret
inc
push
enter
mov
test
lds
bsf
mov
les
js
and
adc
and
ja
into
dec
iret
and
inc
sub
xor
add
loop
or
push
xor
sarb
pop
testl
ljmp
inc
sbb
in
jmp
movsl
mov
inc
test
scas
inc
pop
push
cmpsl
out
lahf
jmp
mov
orb
xchg
push
addr16
xor
outsl
clc
xor
lret
lods
pusha
addr16
imul
xor
xor
inc
stc
add
or
cmovp
iret
mov
pop
sbbb
pop
xchg
bswap
mov
pop
stc
daa
xor
add
and
jg
xor
fiadds
xor
and
vmread
mov
and
and
pop
push
add
inc
push
sahf
stc
push
xor
mov
icebp
and
pmulhuw
iret
sub
jbe
jp
outsb
stc
rclb
pop
jmp
fs
add
aam
cmp
inc
inc
mov
lods
ds
push
and
es
adc
lds
and
nop
push
mov
cmp
mov
test
xor
negb
in
mov
or
aad
test
add
inc
icebp
push
test
jmp
jle
add
push
xchg
inc
xor
test
setb
jge
rcrb
andb
xor
inc
mov
inc
dec
test
mov
sbbl
inc
out
xor
sub
xchg
sbb
adc
sbb
add
mov
loope
in
cmpsl
push
in
lds
out
and
movswl
int3
fbld
les
push
mov
mov
icebp
in
lods
xchg
out
and
xchg
movsl
add
hlt
addb
roll
je
adc
cmpsl
popa
sub
mov
rcrb
jno
jmp
sbb
ret
inc
arpl
mov
inc
out
and
push
push
sbb
push
mov
repz
or
cs
loopne
adcb
adc
aad
mov
add
stc
cmp
pop
mov
sbb
xor
push
add
mov
push
hlt
mov
push
repz
das
cmpsb
and
push
jmp
jp
add
xchg
in
jmp
movsb
jmp
divb
lcall
mov
pop
xor
leave
dec
inc
add
or
push
mov
lcall
and
hlt
sbb
mov
negl
jns
jnp
jnp
outsb
add
in
add
stc
data16
sbb
push
sbb
iret
or
out
xchg
and
jbe
jne
repz
xchg
inc
pop
andl
iret
out
scas
mov
daa
mov
loopne
jbe
arpl
cmp
aad
or
cmc
iret
adc
stc
add
mov
popf
jmp
in
jge
insb
ss
add
cmp
push
or
in
ror
les
movsb
dec
lods
test
inc
cmp
inc
sub
call
inc
in
add
pop
and
ljmp
add
andb
jge
mov
jnp
cmp
adc
xor
das
push
dec
enter
add
mov
inc
jne
fwait
sbb
mov
cli
add
ljmp
inc
lret
jle
mov
int
fcompl
mov
decl
jmp
fcmove
inc
lcall
decl
pushl
mov
and
incl
jmp
fistl
xor
addl
mov
popa
repz
push
lret
subl
faddl
xor
movsl
popf
and
pusha
sub
or
out
cmp
ret
loopne
mov
ret
add
mov
nop
inc
outsl
push
cwtl
cmpb
jg
in
fdivrp
jmp
cld
movsl
dec
add
jle
ljmp
lcall
fnstsw
loope
lcall
push
push
push
addr16
push
pop
ret
dec
push
ds
push
fucom
push
jne
push
or
push
xor
push
lret
cs
pop
pop
push
ljmp
or
and
xor
inc
and
std
into
clc
dec
iret
in
out
dec
out
int3
out
dec
out
lret
lds
cmpsl
mov
sub
stos
cwtl
jg
scas
sbb
imull
testl
sbb
xor
lret
pusha
cmpsb
xchg
scas
sbb
fiaddl
cmpsb
movl
push
gs
mov
dec
clc
ret
movsb
push
shlb
sub
fmuls
push
xor
xchg
xchg
xchg
jge
mov
xchg
pop
xchg
add
nop
dec
fstp
out
pop
daa
out
outsb
out
mov
lods
hlt
out
cmp
jnp
xchg
mov
and
js
and
out
cs
insl
out
movsb
out
inc
adc
test
out
fwait
mov
xchg
xchg
cmpsl
mov
movl
or
sub
pop
and
xchg
inc
mov
ja
scas
push
movl
pop
bnd
xchg
lcall
jp
in
stos
mov
add
add
push
adc
mov
in
jg
popf
flds
out
sbb
cs
pop
shll
nop
outsb
jo
daa
test
test
mulb
aam
imul
mov
ds
insl
cld
pop
in
je
std
insb
jbe
imul
shll
fs
bound
pop
out
inc
mov
out
pusha
mov
mov
shll
and
mov
add
shl
mov
mov
and
mov
pmulhw
inc
cmp
pusha
ljmp
scas
mov
xorl
in
mov
jae
or
shl
in
testb
xchg
pusha
xchg
pushl
mov
inc
ja
xor
ja
lea
mov
cmp
ja
or
in
lds
jnp
out
dec
adc
mov
ja
cmp
cmp
out
and
aaa
xor
pop
out
fs
js
jnp
daa
jno
movsl
andl
les
js
jae
pop
or
shll
out
cmp
scas
out
inc
mov
jnp
fs
decb
negb
in
push
push
in
mov
in
jnp
mov
in
out
imul
imul
mov
mov
cli
out
in
mov
out
and
pop
cmpsb
fs
push
mov
ficoml
xchg
cs
incl
mov
push
cmpsb
push
push
jno
inc
adc
insl
pop
push
mov
out
and
cmc
mov
les
mov
lods
pop
rcrl
out
notl
and
push
xor
lds
in
loopne
jnp
out
aad
in
int
cmp
ja
push
loopne
lds
mov
in
movsl
fwait
test
and
pop
mov
les
add
and
lret
rolb
fnstsw
fiaddl
mov
adc
lcall
out
mov
lcall
adc
out
xor
jbe
mov
jne
sbb
jbe
mov
xchg
out
dec
orl
mov
out
and
ret
or
sarl
addb
mov
push
loopne
lds
out
and
or
out
popa
mov
lock
mov
mov
jbe
mov
pop
shlb
and
mov
dec
aad
std
repz
arpl
fcoml
jo
lds
ja
xor
inc
jl
xchg
out
ljmp
je
in
test
daa
xchg
out
sbb
test
fidivrl
xchg
cs
loope
ret
jge
and
xlat
and
es
call
ret
inc
pop
and
sub
jmp
subl
adc
inc
or
inc
in
gs
mov
jecxz
iret
inc
mov
loop
add
pushf
out
incl
jnp
jecxz
pop
jmp
inc
jnp
jno,pn
inc
pop
test
xchg
jne
and
ss
lods
inc
inc
and
shl
jecxz
in
or
in
lds
inc
mov
pop
in
jnp
or
jnp
out
pop
adc
xor
and
frstor
insl
cmpsb
mov
pop
out
incl
out
add
add
testb
in
test
movl
hlt
jg
or
mov
cli
xchg
addr16
lds
push
in
adc
push
idivb
mov
jle
or
mov
int3
les
xchg
test
movsb
in
sti
aaa
mov
stos
xchg
cmp
rcr
jbe
out
xchg
fcompl
xor
outsb
and
xchg
pop
sub
lahf
cmpsl
push
repz
fs
push
pop
cmc
push
aam
push
jg
mov
jge
mov
fiaddl
inc
incb
bound
je
test
mov
cmp
mov
cmpsl
fisubrs
movsb
pop
dec
or
mov
pop
cmpsb
addr16
je
adc
mov
cmp
inc
push
cld
test
ja
lahf
inc
addr16
fists
insb
mov
or
hlt
sbb
int3
jge
push
dec
out
andb
adc
mov
mov
out
in
cld
mov
xchg
xor
lds
daa
rcrw
xchg
je
test
jge
mov
out
add
flds
pushf
cld
pop
inc
movb
bound
in
jmp
std
sub
loope
lahf
mov
inc
stos
imull
popf
test
fisubl
daa
aad
test
fs
push
movsl
pop
es
aad
sbb
sti
lahf
cmc
mov
and
or
add
push
std
inc
push
cmpsb
inc
in
jmp
jge
fwait
cmc
mov
in
cltd
iret
in
mov
push
xchg
dec
push
inc
int
test
pop
test
mov
dec
pop
addr16
hlt
mov
pusha
clc
pop
mov
ret
mov
jnp
testb
ret
sti
add
out
lds
test
out
push
lret
arpl
xchg
add
movl
in
stos
jecxz
mov
add
mov
inc
ja
out
in
jecxz
loope
add
and
movsl
inc
mov
mull
mov
mulb
repz
inc
mov
sar
inc
in
and
ret
and
and
and
in
mov
mull
jnp
mulb
mov
ja
out
sbbb
test
add
mov
jb
mov
movsb
jnp
testb
and
in
data16
xchg
mulb
inc
and
loopne
in
mov
and
inc
in
add
test
mulb
dec
out
out
std
loope
repz
mov
ss
insb
aam
sbb
in
leave
pop
cmp
xchg
insb
ss
mov
mov
in
inc
insl
leave
movsl
lods
mov
test
lahf
imul
inc
mov
fisttpll
xlat
mov
inc
inc
stos
xchg
stos
in
add
ss
xchg
push
stos
dec
je
movsb
jns
inc
ficomps
aam
ret
cld
cmpsb
push
mov
lret
jne
fidivrs
in
cmpsb
adc
pop
sbb
push
std
popl
subb
xchg
push
hlt
int3
arpl
dec
jp
sbb
mov
push
push
mov
das
pop
pushf
hlt
pop
push
mov
dec
arpl
jecxz
hlt
cmp
lds
sub
jl
js
lods
out
mov
lock
int3
pushf
inc
insl
inc
cli
ficomps
inc
into
push
mov
aas
insb
mov
cmp
aaa
lock
xchg
mov
pop
push
fs
sbb
icebp
stos
aad
in
loop
movsb
lds
jno
das
xor
jbe
pop
xchg
out
sbb
cwtl
fiaddl
add
cmc
hlt
mov
adc
inc
popf
pop
pop
les
mov
rcrb
ret
data16
cmpsb
or
jge
mov
cmpsb
xchg
cmpsb
call
int
in
hlt
into
je
aaa
jmp
sub
icebp
aas
cwtl
in
mov
jbe
mov
jnp
and
int3
fcoml
xchg
mov
or
inc
out
outsb
mov
aad
es
mov
repz
push
in
pop
hlt
sub
je
cmp
in
dec
push
out
xchg
and
enter
mov
fdiv
iret
std
les
addr16
pop
test
dec
xor
dec
xchg
dec
popa
shrl
repnz
inc
jae
lret
add
fistpll
hlt
mov
jl
fildl
sbb
push
mov
mov
xor
xor
cmp
mov
dec
sbb
xchg
mov
jno
or
dec
sub
cmpsl
mov
mov
imul
push
fs
mov
pop
cmp
mov
mov
movsb
xchg
sub
fmuls
andb
mov
aad
xchg
mov
scas
les
xor
cld
fisubs
sub
loope
in
mov
test
and
das
fsts
dec
jnp
cwtl
jns
out
add
mov
loop
scas
sub
and
dec
movsb
adc
imul
in
les
jnp
push
in
std
jl
dec
xchg
mov
cltd
sahf
dec
cmpsl
mov
ret
sub
mov
outsb
mov
pop
out
stc
ffree
iret
lea
leave
gs
aaa
pop
cs
aam
jecxz
ja
mov
and
ret
aad
cli
daa
imul
pop
gs
in
insl
loop
leave
mov
shll
scas
sub
daa
mov
in
arpl
in
adc
lds
lock
mov
test
repnz
mov
rcl
mov
cmpsb
xchg
scas
mov
and
push
pop
repz
aam
push
int3
imul
fisubs
adc
lds
ss
ja
mov
sub
and
lahf
cwtl
xor
pop
dec
hlt
loope
pop
dec
sahf
mov
push
hlt
adc
popf
fs
inc
jle
addb
test
hlt
xor
push
cwtl
mov
sbb
xchg
adc
xchg
xor
jle
cmp
insb
sbb
or
inc
je
ds
mov
mov
cs
xor
mov
push
scas
adc
test
mov
jp
jbe
push
in
and
fsub
ret
jp
mov
mov
push
mov
ljmp
adc
sahf
mull
in
xchg
lods
push
test
dec
push
cltd
orl
push
dec
mov
mov
das
mov
mov
mov
xchg
lea
jmp
pop
in
xor
xor
neg
push
aad
cmpsb
xor
dec
mov
pop
in
or
push
sti
cmp
and
mov
scas
mov
and
loop
jne
loop
xor
dec
idivb
leave
scas
pop
mov
mov
jo
fistpl
mov
ss
mov
fisttpl
stos
cld
insb
jae
popa
ret
sub
xchg
fwait
mov
jbe
arpl
inc
testb
test
pop
bound
jne
movntq
out
pushf
cltd
nop
jl
out
repnz
lods
and
mov
fstl
sahf
orl
pop
dec
add
mov
cmp
or
addr16
xchg
jae
pop
pop
lods
adc
sub
jnp
mov
fisubl
dec
xor
or
popa
cld
xor
and
pushf
or
test
fnsave
les
mov
or
mov
mov
aam
sub
mov
frstor
pusha
cmp
jg
out
repz
pop
mov
bswap
adc
cmp
enter
cmc
movl
sub
gs
jecxz
xchg
pusha
jp
aas
or
aam
xor
jge
pop
es
xorl
fldl
mov
push
adc
arpl
mov
pop
mov
es
xchg
mov
xchg
into
xchg
jbe
fimull
inc
xor
enter
rcr
stos
movsl
out
mov
add
in
movsl
sub
cwtl
int3
es
mov
inc
xchg
into
push
loopnew
mov
in
test
pop
lds
test
loopne
cmpsb
aam
imul
xchg
and
mov
pop
mov
shlb
gs
ss
push
push
xchg
inc
int3
out
mov
jle
cmp
insl
mov
test
mul
pop
sbb
push
les
cmc
jae
jb
repnz
jae
aam
and
insb
jb
push
les
jno
dec
adc
cwtl
ret
dec
inc
lcall
jo
scas
ss
lcall
jnp
lcall
imul
in
fsts
call
xor
faddl
loop
and
mov
aam
ret
arpl
insl
add
jne
int
fdivs
or
or
and
push
sub
pop
insl
icebp
pop
outsb
add
mov
cld
repnz
jb
lods
daa
out
int3
jo,pt
je
ss
loope
xchg
rcll
frstor
repnz
ret
cmc
inc
sbb
mov
out
mov
sub
cmp
in
lods
das
sar
inc
push
cmp
mov
popa
loopne
stos
bound
aad
xor
hlt
in
push
stos
and
std
ds
or
in
cmp
jnp
dec
imulb
jge
pop
lea
inc
inc
mov
cmp
into
insl
std
cmpsl
cmp
out
ficomps
int3
arpl
mov
push
cld
inc
and
xor
lock
lods
xchg
bound
ret
add
loope
mov
pop
mov
outsb
xchg
mov
in
jg
nop
std
pop
gs
push
xchg
sbb
xchg
int3
std
popf
test
fs
xchg
mov
inc
mov
fidivs
sbb
loope
cmpsl
arpl
out
xchg
movl
sub
or
or
ds
ds
int3
jecxz
push
out
or
jbe
es
incb
cli
testl
mov
faddl
jg
out
xor
cmp
inc
mov
mov
pop
mov
inc
nop
inc
in
test
popa
filds
push
test
movsb
nop
mov
aad
mov
data16
mov
scas
movsb
add
addr16
mov
iret
xor
pop
rol
pop
daa
push
rol
int
out
inc
add
pop
cmc
pop
insb
add
xor
aas
sub
sbb
mov
and
dec
cmp
ja
pop
int
test
ss
test
out
ja
dec
adc
out
jnp
or
fbstp
xlat
ja
push
lock
or
js
jg
add
lds
ret
mov
inc
inc
mov
in
or
loop
mov
out
inc
rolb
in
shl
add
scas
arpl
loop
jo
out
push
lock
mov
in
test
mov
vmwrite
adc
lds
add
loope
and
adc
mov
inc
psraw
arpl
mov
pop
push
fnclex
gs
fneni(8087
movsb
or
movsb
cmp
cmp
mov
push
add
and
jg
and
std
shll
push
jnp
sbb
mov
inc
dec
jecxz
js
je
imul
jae
mov
and
mov
mov
loop
loop
daa
out
mov
lds
and
pop
mov
pop
lds
cmp
ja
faddl
pop
mov
xchg
ss
adc
jbe
mov
ja
or
lock
add
cmp
inc
arpl
shlb
add
out
inc
sub
ud0
inc
or
dec
adc
faddp
add
sahf
popa
shl
je
data16
enter
into
mov
mov
mov
push
push
fnclex
gs
mov
bound
negl
ud0
mov
loop
unpckhps
loop
xchg
push
cmc
loop
out
scas
loopne
push
sub
es
addl
mov
ret
lds
adc
mov
add
sahf
or
leave
out
movsl
xchg
addl
loop
frstor
mov
incl
pop
mov
xacquire
out
loop
sbb
jo
sbb
mov
sbb
jbe
addr16
add
into
lea
xorb
mov
fs
or
pop
push
fildll
out
or
andb
cmpsl
add
mov
rolb
push
and
mov
adc
jne,pt
loop
shll
mov
loope
into
test
es
add
or
fs
add
subl
notb
lds
or
mulb
loopne
in
mov
in
and
cmc
ja
ffree
add
mov
in
ret
or
arpl
inc
test
nop
fs
data16
call
loop
jnp
jo
pop
cmp
ja
dec
adc
cmp
scas
dec
rcrl
lds
jo
out
mov
movsl
mov
dec
loopne
mov
xchg
out
push
jo
pop
cmp
ja
dec
adc
test
fwait
cmp
mov
daa
loop
out
jnp
incb
out
daa
add
outsb
and
dec
addl
shlb
negb
adcb
test
inc
or
outsb
mov
in
or
cmc
cmp
out
and
mov
mov
jns
cmpsl
mov
push
mov
std
adc
shll
jne
pop
or
mov
jle
loopne
jo
iret
stos
les
mov
ljmp
or
lock
adc
int3
jmp
leave
inc
inc
rcrb
or
dec
movl
test
lea
in
mov
adc
jge
xor
push
inc
loope
cmpsl
sub
jns
in
mov
jbe
jle
outsl
pushf
idivb
test
mov
cmp
fstl
stos
push
and
out
xchg
testb
push
add
mov
aad
sti
sbb
aad
lahf
jecxz
in
xlat
xchg
repnz
in
push
test
jmp
mov
jle
int3
and
fildl
out
adc
mov
movl
fdivrl
cld
sbb
movl
and
stos
out
mov
xchg
pop
hlt
mov
popa
loop
ja
movsb
sub
push
movsl
loope
or
push
pop
movsl
ja
cmp
add
movsl
sti
dec
and
adc
scas
add
ds
aad
out
fdivs
loopne
outsl
adc
xchg
outsl
mov
test
jmp
xlat
push
rcrl
jo
jns
and
or
xadd
add
jecxz
out
loope
mov
out
adc
fildll
pop
xor
or
xlat
or
movsl
or
mov
add
push
sbb
fdivs
mov
or
push
jg
out
movl
insb
jecxz
out
mov
pop
xchg
jg
lret
add
add
ficomps
add
iret
mov
sbb
out
add
lcall
xlat
setne
iret
lret
pop
mov
push
out
test
in
mov
lea
in
outsl
mov
cmp
out
sbb
sbb
add
inc
sub
testl
call
xor
fisubs
sar
push
xchg
dec
or
jge
cmp
aas
loope
push
mov
test
or
mov
jbe
ljmp
xchg
loop
and
inc
pop
add
or
scas
movsl
push
mov
adc
sahf
inc
enter
or
jo
xorb
std
adc
or
xor
test
sbb
leave
fldt
push
inc
or
xor
or
sbb
and
movsb
xlat
in
ret
push
xor
pop
lahf
fwait
roll
or
std
add
int3
bnd
out
es
or
lods
sbb
lahf
jno
pop
xchg
mov
xor
add
inc
jb
or
sub
push
cmp
mov
jbe
and
or
cmp
xchg
cmp
loope
adc
pop
dec
rcll
orl
out
loope
push
cmp
mov
adc
mov
fisttps
shl
mov
and
mov
les
stos
pop
cld
stc
push
sahf
aam
or
jl
decl
and
jno
mov
pop
mov
mov
pop
push
xlat
or
or
inc
shl
mov
add
xchg
ret
or
xchg
clc
sub
push
pushf
dec
movsb
in
jmp
lods
loope
cld
xor
iret
inc
xchg
fistl
pop
xlat
pusha
sub
or
das
stc
pusha
repz
loope
pop
sarl
sbb
mov
inc
adc
and
pop
sbb
mov
push
movsl
popa
sub
inc
cld
jb
xchg
sti
sahf
ss
ljmp
fimull
mov
dec
pop
inc
loope
jns
loop
pusha
push
imul
ret
int3
or
insb
sahf
out
in
pop
out
outsb
or
mov
jl
cmp
xchg
std
test
roll
cmpsl
or
push
mov
or
cmp
loopne
xchg
xchg
or
adc
divb
ret
dec
push
push
cmp
cs
movsb
xor
pop
jmp
cwtl
push
iret
push
xor
jno
fs
int
mov
dec
sbbl
sub
out
push
and
in
or
jecxz
in
push
mov
pop
lahf
ret
xor
mov
push
imul
or
jp
iret
sbb
pusha
ljmp
pop
adc
xlat
mov
dec
test
push
movsb
push
aas
enter
push
das
popa
adc
or
xor
int3
mov
cmp
loope
adc
xchg
in
xchg
dec
dec
pop
add
lock
imul
icebp
inc
inc
jne
jo
lea
sub
sbb
xlat
pop
push
lods
push
jb
xor
scas
lahf
inc
movsl
das
mov
push
push
mov
incl
mov
pop
loopne
dec
ret
xchg
jle
adc
test
add
jno
ficoms
les
or
out
int
sub
or
testb
cs
movb
jb
xor
mov
and
icebp
jle
sbbl
pop
xchg
adc
or
mov
mov
imul
push
xchg
ljmp
outsl
dec
test
repz
inc
lock
or
push
cmpsl
sub
xchg
jno
lahf
adc
dec
or
sub
shl
lock
inc
push
les
push
adc
sub
clc
dec
orb
xor
popl
mov
xlat
aam
scas
jg
adc
out
mov
lods
cld
xchg
movsb
or
lock
nop
jno
or
jmp
xchg
icebp
push
or
cld
int3
lret
add
mov
or
mov
jns
and
scas
or
subb
push
dec
insl
or
mov
or
mov
mov
inc
jo
lret
mov
xor
shr
ljmp
adc
cltd
mov
or
cmp
xchg
or
push
mov
loope
or
les
dec
call
scas
cli
xchg
cmpsl
jmp
xor
push
cmpsl
xchg
pop
inc
dec
mov
push
push
lods
cmp
jo
xchg
add
mov
imul
dec
mov
or
push
add
shl
ret
pop
out
cmp
les
cmp
add
ja
addl
addl
imul
dec
push
movsb
cmc
add
call
mov
repnz
push
out
push
shl
jg
inc
pushf
cmpsb
cmp
add
add
mov
movsb
or
mov
xchg
xchg
and
add
adcb
mov
out
fmul
jbe
notrack
notl
cmc
stc
xor
mov
mov
enter
stos
xor
bnd
adc
jge
sbb
stos
mov
faddl
movsb
loopne
and
scas
sub
push
inc
mov
push
add
sbb
cmp
inc
insb
lds
mov
sahf
sahf
ss
and
push
inc
mov
aad
xchg
push
jle
mov
insb
pusha
pushf
add
out
ret
loopne
out
out
ds
loope
out
and
out
add
add
jae
mov
pusha
test
push
out
add
push
jecxz
push
inc
add
pop
xchg
jno
out
in
out
cwtl
push
push
les
jle
addr16
loopne
push
out
inc
ret
data16
testl
bound
les
out
out
testb
sti
fs
adc
out
mov
push
les
pop
mov
icebp
xchg
mov
inc
jge
pop
adc
inc
outsb
hlt
call
scas
xchg
or
fildll
jnp
push
ret
inc
sbb
cld
inc
ja
mov
out
cmpsl
mov
adc
icebp
cltd
daa
xchg
fisubs
cs
fsts
xchg
mov
gs
test
out
loopne
cmp
fs
out
xchg
arpl
adc
jae
xchg
lods
flds
cli
cmc
fidivs
add
popa
sbb
out
test
pop
dec
add
movsb
or
jle
out
pop
stos
stos
sub
pop
sahf
jbe
sbb
adc
inc
xchg
cwtl
push
mov
lahf
cmp
dec
imul
fisubrs
push
sbb
mov
jmp
ljmp
sarb
add
int
shl
fisttps
push
incl
lds
loopne
cwtl
out
jle
std
idiv
in
stc
mov
mov
mul
in
mov
inc
lds
jnp
testb
add
cmc
shl
int
xor
bound
inc
mov
add
fdivrp
cmp
dec
aad
nop
xchg
mov
jb
jp
xor
xchg
and
mull
iret
dec
jmp
idiv
mov
imull
stos
add
xchg
out
add
or
out
xor
pusha
xchg
add
inc
ljmp
mov
aam
pop
mov
add
mov
notl
add
mov
inc
jl
icebp
lock
cmpb
inc
in
or
xchg
xchg
xchg
push
mov
cmp
push
xchg
ljmp
cmpsl
lret
ficompl
std
push
inc
iret
lods
sbb
rolb
clc
push
cmpsb
inc
sarl
in
pusha
lahf
push
inc
jp
pop
push
aad
outsb
pop
roll
sahf
ficomps
loopne
stc
mov
sub
inc
lahf
adcb
das
icebp
and
arpl
call
and
inc
xor
imul
mov
lea
and
jno
and
insl
cli
pop
pop
add
aam
jg
mov
aad
das
in
sub
xchg
mov
push
in
call
dec
pop
and
addl
test
int
mov
xchg
leave
out
call
jge
fmuls
loopne
add
lds
shlb
insl
pop
pop
lock
aad
jnp
ffree
push
div
mov
adc
aad
test
mov
pop
dec
mov
mov
ret
es
jae
jnp
mov
xor
incl
popa
xchg
cmpl
addr16
call
mov
push
push
jl
movsb
mov
fsubr
ret
mov
add
test
jp
inc
pop
insb
cmpsb
fdivl
orb
mov
test
and
test
cmp
out
jmp
mov
out
in
mov
cmp
cwtl
xchg
mov
lock
xchg
fwait
sti
jno
pop
xchg
notl
aas
stc
andb
in
add
cmp
aaa
inc
xchg
jnp
lock
jnp
ret
inc
jnp
jg
jae
ret
ret
jg
imul
test
xor
mov
aaa
jg
pop
ret
inc
jnp
jg
aam
sarb
adc
inc
push
nop
mov
loope
pop
push
mov
sarb
sbb
and
in
and
jle
xor
inc
mov
lds
push
inc
adc
jg
push
inc
jb
fidivrs
push
and
jle
or
push
jnp
aam
jp
es
call
ds
xchg
lock
mov
and
and
loope
jg
out
inc
iret
aaa
pop
lods
pop
mov
xor
mov
add
shr
loopne,pn
lds
movsb
push
and
daa
sbb
inc
fs
mov
jo
aam
xchg
jl
mov
in
jae
es
mov
mov
orl
inc
jo
testb
inc
out
and
jnp
cmp
jne
outsb
sbb
pop
and
loopne
push
jbe
dec
ret
lods
xchg
cmpsb
js
movsl
out
jecxz
adc
fwait
cmpl
add
adc
or
jne
subl
stc
mov
xlat
mov
ret
inc
mov
xchg
lds
ret
ja
pop
and
pushf
sarl
movq
sbb
mov
mov
pop
mov
jne
add
xchg
stos
shll
cmp
inc
stc
out
add
loop
popl
test
aam
inc
lea
add
data16
shlb
out
aaa
insb
lds
xchg
cmc
cld
xor
inc
pop
popf
in
mov
lahf
sbb
dec
inc
cwtl
adcb
inc
inc
int
xor
xchg
je
mov
scas
std
stos
fs
push
in
insb
test
xchg
mov
test
fcomps
jne
mov
cli
and
ljmp
in
ret
insl
lahf
fnsave
jbe
sub
xchg
je
or
movsl
add
ror
in
adcb
dec
push
jecxz
jl
jg
lea
lock
ss
out
inc
jne
imul
cli
add
jns
mov
cs
lods
xchg
mov
cmc
inc
adc
lea
xchg
xchg
in
push
mov
cmp
and
mov
lds
fildl
jo
jo
fistpl
std
adc
aas
outsb
pop
outsl
adc
push
inc
test
es
xor
mov
insl
sbb
mov
inc
cmc
pop
jl
and
addr16
pop
inc
insl
sbb
test
gs
and
ret
pop
jle
out
ret
xor
lds
mov
add
pushl
lcall
add
mov
stos
sbb
xor
out
jbe
add
mov
cmp
cmpsl
cmp
xchg
inc
repz
lcall
xchg
adc
mov
cmp
and
add
inc
call
cmp
ja
dec
ret
and
xchg
and
mov
jb
sti
adc
loopne
lds
adc
add
mov
pop
cld
xchg
mov
mov
jmp
mov
test
jle
xchg
pop
jmp
inc
and
add
lds
es
mov
mov
gs
xchg
xchg
test
cltd
cmpsl
sub
sbb
xchg
pusha
in
ret
lcall
inc
inc
push
cli
subb
sub
inc
pop
pop
and
dec
pop
dec
sbb
sub
fs
add
nop
push
popf
aas
inc
outsb
daa
mov
cld
and
dec
pop
test
pop
int
imul
dec
test
cmpsl
ret
les
ret
out
push
mov
sub
out
xchg
mov
fidivs
cvtdq2ps
fisubrl
xchg
arpl
dec
sbb
insl
or
sbb
repnz
jl
add
ret
jg
leave
or
dec
xor
xchg
aad
rcrl
add
mov
jle
leave
jo
mov
cmpsb
shrl
add
sub
pop
inc
cmpsb
xchg
mov
inc
roll
inc
push
add
push
sarl
into
cmp
shlb
int
cmpsl
pop
mov
rolb
inc
xchg
xchg
out
addr16
sbb
jno
inc
ret
lods
outsl
adc
daa
iret
push
inc
sbb
inc
aas
cli
and
xchg
jnp
neg
mov
inc
push
roll
mov
sub
xor
push
in
les
push
aaa
testb
loope
sub
jnp
sarb
inc
jge
sub
jae
dec
jnp
add
sti
hlt
push
andb
sub
aad
in
sbb
adcb
pushf
in
adc
aad
xlat
negl
pusha
mov
mov
shlb
mov
inc
push
mov
and
addr16
int
cmp
inc
sub
subb
pop
add
mov
mov
fiadds
rol
xchg
stos
push
inc
dec
les
ret
jl
mov
test
mov
ficoms
pop
push
test
xor
mov
inc
inc
das
push
inc
outsl
mov
movb
sbb
inc
call
and
jnp
jne
and
or
pop
in
mov
xchg
mov
in
pop
xchg
lea
in
in
js
in
dec
rol
daa
add
call
arpl
in
das
lret
ds
inc
test
jb
mov
not
popf
addl
stc
outsb
mov
data16
jae
inc
stos
add
in
movsb
cli
mov
ret
int3
fldl
loopne
xchg
out
pop
ja
jne
inc
jp
push
fbstp
jo
clc
sub
inc
inc
pop
sti
ss
adc
mov
loope
pop
scas
inc
push
mov
jno
insb
or
hlt
outsb
jbe
inc
inc
movsl
sti
inc
add
cmp
insb
xchg
add
mov
jno
add
xchg
inc
and
test
push
lahf
and
dec
xchg
jb
mov
pop
sub
xchg
xchg
mov
pop
inc
out
jb
repnz
adc
jmp
xor
xchg
mov
scas
lds
jae
mov
ret
xchg
inc
jecxz
xchg
inc
imul
push
movsb
int3
or
adc
mov
rcll
lea
xchg
push
mov
lods
lds
mov
xchg
cmc
sbb
jno
mov
mov
inc
aam
into
insb
pop
aaa
ret
jmp
ret
aam
pop
push
popf
sub
jns
loope
jecxz
cmp
pop
iret
cmp
cmpsl
add
jl
popl
int
in
insb
pushf
mov
mov
fildll
mov
mov
out
cmpsb
pop
popf
dec
xor
lret
enter
jmp
xchg
in
in
cmp
sub
lods
fwait
mov
pusha
push
cmp
fldt
pop
std
pop
int3
fcomps
imul
xchg
std
test
out
adc
aad
cmp
les
mov
imulb
inc
out
xchg
jl
in
push
out
aaa
lds
xchg
and
cltd
aad
jg
les
insb
addr16
cmpsl
lahf
gs
mov
loope
fnstsw
pop
push
mov
xchg
repz
pop
pushf
and
jne
cmpsl
loope
xor
or
cmc
std
adc
xchg
aad
sub
in
gs
inc
push
xchg
aad
data16
mov
rol
and
fwait
notb
add
ret
lea
xlat
jne
xchg
ja
sahf
pop
addl
out
jae
add
dec
loopne
sbb
push
mov
ja
mov
sub
movb
call
mov
mov
mov
in
jb
xchg
cmp
aam
shr
stos
out
lcall
add
inc
cltd
xor
fwait
enter
dec
ds
and
test
in
mov
fsubs
adc
mov
mov
jno
out
sbb
mov
mov
mov
lods
xchg
inc
pop
cmp
sub
or
add
loope
cmp
xchg
test
stos
cmc
outsb
push
pushf
xchg
cmpsb
inc
fwait
lods
std
sbb
insb
fldl
aam
icebp
or
repnz
fmulp
je
add
pusha
in
fadds
leave
pop
cmp
stos
in
scas
call
movsl
push
hlt
je
mov
out
aad
out
test
ss
std
sbb
in
jp
push
es
std
add
shl
insb
pushf
pop
and
pop
cmp
daa
dec
sbb
lods
fnsave
shlb
scas
xchg
add
nop
add
push
or
pop
or
repnz
jle
mov
sahf
jb
incl
movsl
movl
push
xlat
or
jle
dec
jl
mov
les
pop
dec
fstpt
pop
lods
inc
xchg
sub
lds
dec
sbb
jecxz
fs
xorl
in
sub
lods
mov
jecxz
lcall
sbb
xchg
dec
lods
cmp
xor
jo
mov
push
pop
xchg
xchg
mov
push
jnp
cmp
loope
jp
xchg
shrl
inc
fs
lcall
jg
cmp
xchg
ljmp
inc
push
addr16
fidivrl
rolb
jbe
jnp
out
adc
ffreep
pop
repnz
pop
movb
iret
stc
dec
pop
add
call
inc
lret
add
ja
sub
pop
lods
adc
cmp
fisttps
or
adc
or
pop
push
movsb
mov
inc
jle
ret
leave
push
and
fidivrs
inc
arpl
fidivrs
sub
mov
cmpsl
cmp
dec
xlat
movsb
push
fcmovu
mov
xor
jp
gs
clc
inc
pop
mov
cld
jno
push
hlt
enter
mov
lds
popf
stos
mov
mov
mov
cmc
in
pop
inc
mov
loop
xchg
mov
xchg
std
movsb
push
xchg
in
mov
and
add
pop
or
iret
xchg
das
xchg
xchg
outsl
leave
outsl
mov
fwait
xchg
pop
jb
push
xchg
pop
xchg
cmpsl
jg
add
xchg
cs
jbe
jle
dec
ret
inc
lock
and
out
scas
leave
add
mov
js
jl
sub
sbb
addr16
sbb
inc
cmpsl
dec
movl
fcoms
add
cmpsl
test
idivl
inc
shlb
inc
inc
and
insl
cmpsl
loop
out
fiadds
test
in
lahf
lds
lret
xchg
repz
test
lds
jbe
orl
and
test
arpl
add
cmpl
inc
addr16
test
xchg
inc
inc
int
and
lds
inc
test
sbb
in
cmp
jo
push
flds
fs
loope
sbb
in
mov
test
and
push
pop
in
test
les
pop
inc
inc
jb
out
je
or
jnp
push
push
repnz
in
movsl
addr16
lret
mov
inc
and
inc
xchg
in
stos
loopne
inc
movl
add
fadd
cs
inc
adc
mov
push
and
loopne
add
ret
loope
jg
inc
mov
out
lds
movsl
addr16
out
mov
int
inc
cmp
inc
rolb
add
inc
js
sub
ja
ret
js
ja
clc
push
ja
push
movsl
inc
shlb
rolb
fmuls
mov
inc
xor
in
jbe
sbb
mov
in
cmp
jo
or
testb
movsl
insl
les
inc
inc
cmp
sti
movsl
add
in
scas
and
loopne
movsl
inc
addr16
cs
xchg
addr16
out
inc
shlb
pop
or
sbb
test
in
shlb
sarl
shlb
insb
repz
es
fwait
jbe
add
test
inc
pop
and
test
cmp
out
inc
and
sti
fildll
push
mov
pop
inc
inc
bound
inc
mov
push
test
mov
in
addr16
das
rol
inc
dec
addr16
push
aad
jo
push
sti
in
movsl
add
out
inc
call
repnz
test
mov
mov
lea
flds
dec
sub
inc
test
hlt
addr16
dec
sub
xor
in
jbe
pop
sbb
mov
in
movl
dec
add
lds
or
jecxz
inc
cmp
movsl
inc
sub
cs
testb
add
andl
fildl
mov
movsl
insl
addr16
test
test
xchg
push
les
addr16
push
test
std
ret
js
sub
shlb
inc
rorb
mov
xor
iret
in
addr16
inc
mov
and
sbb
or
pushf
inc
jmp
mov
xchg
mov
fadd
pushf
inc
mul
mov
ror
loope
mov
das
icebp
add
add
test
test
xor
inc
movsl
addr16
jnp
cmp
std
ret
jns
bound
add
sbbb
in
inc
addr16
daa
pusha
pushf
test
in
cmp
xchg
test
adcl
ret
mov
into
int
fldenv
mov
lock
push
inc
jmp
mov
xchg
inc
lret
ret
pop
pushf
inc
icebp
test
push
sbb
into
pop
rol
pop
dec
pop
add
addr16
add
pushf
cmpsw
popa
pop
push
subb
arpl
inc
and
lds
inc
addr16
inc
inc
add
pop
lock
push
sti
add
out
rol
test
jno
movl
imul
xchg
out
mov
add
xchg
fs
lcall
inc
push
roll
inc
sub
inc
jnp
and
xchg
in
lds
add
test
in
rolb
in
inc
push
cmp
cmp
das
mov
inc
cmp
shlb
loope
and
fwait
lock
cld
sar
xchg
jmp
inc
incb
popa
and
xchg
loope
in
mov
inc
xchg
inc
inc
cmp
subl
out
jnp
idiv
jne
shll
fwait
add
addb
and
iret
pop
jecxz
sub
shll
negb
xor
jne
inc
roll
int
mul
aad
js
pop
inc
inc
js
mov
andb
sub
outsb
push
push
test
xlat
ja
dec
arpl
ljmp
or
out
fiaddl
and
fwait
lock
inc
lock
lock
lock
lock
movsl
inc
sub
inc
imulb
add
inc
out
addr16
jb
dec
addl
ret
add
dec
inc
decb
inc
mov
pop
jnp
and
fdivp
push
scas
imul
push
test
in
add
xchg
xchg
ficoms
inc
addl
ret
inc
pop
inc
mov
stos
test
push
add
jmp
aad
lock
subl
flds
inc
mov
push
inc
movb
lds
insl
addr16
in
pop
inc
mov
xchg
shrb
lret
out
into
test
inc
imul
fadds
lds
cmpsl
out
mov
jnp
rcll
out
out
mov
fmul
jbe
jne
iret
mov
fadd
jbe
insb
mov
into
mov
cmp
xchg
xchg
test
es
inc
lcall
lock
inc
inc
add
test
subb
mov
out
pop
add
arpl
jnp
and
notb
sti
lock
mov
arpl
pop
addl
mov
jbe
inc
gs
and
cmp
sub
inc
fldz
aaa
fldz
inc
fcompp
ds
das
jecxz
sub
cmp
lock
mov
icebp
inc
mov
arpl
int3
sbb
inc
push
ret
add
push
add
pop
ret
xorb
mov
add
push
inc
xchg
ds
movsl
out
popf
and
out
leave
push
mov
cmp
ret
pop
xchg
out
mov
frstor
mov
loope
cmpsb
xchg
incb
out
cmpl
and
out
sbb
xchg
jbe
aas
xchg
jg
out
or
test
jb
dec
addl
add
xchg
incb
loopne
mov
add
ret
in
adc
adcl
inc
das
roll
rorb
inc
daa
add
push
xchg
xchg
mov
xchg
mov
test
add
inc
sub
pop
inc
add
add
sarl
andl
push
mov
mov
push
adc
sbb
push
daa
out
mov
add
les
test
inc
inc
inc
lcall
xchg
shll
loope
lret
add
and
jl
daa
sub
jnp
ja
dec
ret
pop
add
mov
push
test
mov
ja
shlb
inc
jbe
jg
out
and
iret
fnsave
mov
in
scas
mov
add
xchg
in
mov
pop
clc
in
push
mov
outsl
lds
testb
mov
dec
lds
aas
sarl
das
daa
testb
ja
out
lds
mov
dec
inc
out
lock
lret
pop
addb
out
fwait
loopne
insl
dec
add
add
in
mov
add
mov
mov
mov
jg
popa
jg
and
es
adc
jg
call
jg
push
jg
in
mov
mov
mov
mov
mov
jg
bound
icebp
jg
cmpl
jg
xor
jg
loopne
fsts
pop
mov
test
fwait
icebp
push
loopne
mov
cmp
movl
cli
jge
jl
pop
mov
inc
aaa
add
dec
int
loop
in
mov
cld
mull
addr16
jnp
and
data16
and
int
es
mov
or
push
jb
push
aad
jo
ds
addr16
gs
or
cmp
in
mov
mov
adc
push
and
inc
add
add
in
test
movsl
pop
or
pop
xchg
std
mov
je
ret
jnp
rorl
loope
push
xchg
out
add
je
push
movb
fldcw
inc
or
js
jnp
inc
cmp
cli
js
inc
dec
mov
xchg
addr16
push
in
cmpsl
mov
pop
lds
jne
inc
addl
in
out
lds
mov
enter
xchg
movb
outsl
fdivp
div
or
push
and
add
or
test
aad
dec
clc
inc
mulb
dec
and
xchg
pop
das
out
pop
out
fsts
vpmulhw
leave
ret
leave
dec
ret
leave
or
ret
dec
cmp
insb
les
add
cmc
inc
mov
orl
jg
inc
adc
insl
inc
test
rorb
cmp
sahf
dec
jnp
not
in
iret
mov
push
idivb
scas
inc
inc
cmp
rol
int
test
rcl
sbb
dec
jnp
rol
mov
sarl
xchg
ds
jecxz
mov
xchg
xchg
shrb
jb
in
inc
testb
cmpsb
fldcw
jnp
mov
ret
cmp
fld
lods
xchg
mov
add
inc
ss
xchg
jo
dec
inc
mov
lods
test
cmpsl
pop
lock
inc
jo
cs
lds
adc
test
inc
sti
gs
xchg
rolb
cmp
mov
insl
xor
adc
inc
sbb
or
test
xchg
testb
add
mov
dec
andb
mov
in
jecxz
jg
pop
push
sahf
inc
test
and
stos
loope
imul
sub
les
jecxz
ljmp
xor
pop
and
fildl
xchg
add
shll
jns
add
enter
push
inc
test
mov
test
outsl
out
pop
pop
out
pop
cmpsb
into
and
aad
clc
test
test
and
test
dec
addl
jnp
rcll
inc
lds
add
test
lds
ret
inc
xchg
lods
testb
add
js
inc
or
flds
andl
fwait
loopne
push
jo
jnp
shr
inc
idiv
inc
sbbb
fstps
lea
scas
add
push
inc
out
inc
push
test
mov
test
inc
rolb
mov
and
ja
nop
inc
roll
faddl
inc
ret
mov
int3
inc
stos
and
pop
xor
push
sub
inc
pop
xchg
jnp
and
dec
mov
aas
out
daa
xchg
xchg
fnstsw
mov
jg
push
mov
xchg
cmc
mov
sub
cmp
std
mov
test
xchg
ret
add
inc
jo
testb
inc
cmc
fndisi(8087
sbbb
movsl
mov
subb
ja
out
scas
jg
cmc
inc
andl
js
cmc
inc
inc
fiaddl
xchg
cmc
jnp
test
lret
inc
fsubrp
dec
jg
adc
and
mov
inc
push
int
out
lods
jnp
or
aad
js
andb
loopne
mov
xorl
jnp
push
movl
and
cmp
js
mov
xchg
inc
and
lret
jnp
and
add
jnp
and
xchg
in
inc
mov
jbe
clc
add
or
sarl
or
sub
frstor
add
aad
jo
push
add
scas
and
in
sarl
or
scas
out
pop
push
fidivrs
cmp
jle
lock
adc
cmp
cmc
lock
lock
ret
leave
in
ret
leave
xchg
mov
into
roll
mov
fisubl
sub
jns
inc
and
lock
shrb
push
shrl
and
int3
ret
leave
jle
leave
es
leave
int
leave
jne
leave
sbb
in
insb
mov
out
lds
in
or
into
lds
testb
mov
push
out
cmpsb
mulb
xchg
jg
pusha
push
push
jbe
jg
out
lds
out
jne
jl
add
fwait
icebp
push
pusha
sub
es
mov
jg
mov
sbb
mov
mov
jg
pop
jg
jmp
mov
jg
cwtl
jg
sub
mov
in
fsubp
in
outsb
loope
std
loope
loope
sbb
in
cmp
in
lret
fldenv
or
lds
add
stos
ret
leave
push
ret
leave
stc
mov
leave
mov
cmp
roll
add
into
xchg
or
mov
mov
jg
aad
call
add
or
arpl
jb
dec
addl
add
add
dec
addl
arpl
or
mov
cmp
das
roll
ret
das
roll
loopne
lds
fldl
jmp
dec
test
push
ret
leave
stc
ret
leave
mov
lock
lock
lock
lock
sarb
lock
lock
lock
lock
lock
lock
movsl
sub
sti
inc
and
ret
push
inc
jae
inc
ret
sbb
inc
ret
ret
inc
inc
adc
sarl
lods
das
jecxz
inc
int3
or
rolb
sbb
xchg
inc
or
leave
xchg
mov
inc
mul
aad
jo
cmp
mov
fld
cmpsb
test
fwait
loopne
je
ds
orb
mov
movsl
sub
js
and
inc
mov
ja
mov
mov
xchg
mov
lds
leave
or
push
inc
add
out
cmp
fiaddl
xchg
in
ret
xchg
xchg
out
add
jnp
rol
jl
ret
sub
sub
mov
xchg
rol
sub
inc
orl
loopne
and
fcmovb
jnp
and
enter
pop
add
ret
add
arpl
mov
sarl
add
insl
rolb
rcll
mov
lods
testb
scas
addr16
gs
pop
add
jg
test
aad
mov
mov
inc
mov
and
or
xchg
xchg
or
and
xchg
movsb
rol
ja
in
out
inc
mov
testb
pop
mov
or
cmp
lock
movl
out
ficompl
ret
jo
testb
inc
in
mov
jne
in
sbb
jnp
xchg
jne
inc
ret
and
mul
xchg
inc
in
jno
gs
mov
aas
testl
pusha
bound
push
mov
lock
push
int
add
insl
inc
adcl
inc
insl
inc
ret
cmp
xor
insl
mov
inc
push
jne
shlb
fiaddl
out
cli
sub
insl
and
inc
test
andl
add
mul
pop
gs
push
add
pusha
in
in
xchg
and
pop
pop
addl
sbb
gs
jg
add
adc
jg
and
test
and
pop
jl
daa
idivl
add
inc
adc
add
adc
cmp
incb
xchg
push
inc
mov
push
flds
out
inc
dec
jnp
roll
addr16
xchg
jnp
mov
mov
mov
add
sar
out
dec
jl
lods
out
sub
cmpsl
mov
testb
cmpsl
movsl
movl
mov
mov
test
add
movl
inc
je
push
add
add
aad
pop
repz
js
cmc
addl
mov
push
adc
cmp
rolb
fiaddl
xchg
insl
test
lods
mov
iret
xor
inc
and
push
xchg
and
ret
cmp
int
mov
cmp
and
sbb
add
push
adcb
imul
add
inc
pushf
xchg
mov
cli
xor
inc
loope
test
add
int3
inc
out
sar
xor
loopne
and
call
inc
cltd
add
add
xlat
lds
in
mov
cld
in
mov
lahf
lds
in
lret
lds
jg
jmp
outsl
ja
out
lds
fstl
out
testl
xchg
sbb
add
xchg
xchg
lods
out
add
ret
out
sarb
rcl
jne
inc
adc
inc
adcb
xlat
vshufps
pop
inc
stos
pop
out
rcr
rol
xchg
push
cmpsb
movb
jnp
and
add
ret
mull
cmp
adc
and
sbb
fiaddl
xchg
in
rol
adc
jecxz
inc
jnp
rolb
inc
dec
jnp
rol
xlat
in
adc
jnp
adc
sti
mov
out
dec
test
loopne
je
out
lds
ds
ja
dec
mov
inc
out
pop
out
out
pop
xchg
out
pop
es
addr16
mov
pop
in
push
rorb
or
jl
das
loope
mov
xlat
mov
xlat
mov
iret
out
inc
mov
push
fldl
test
test
cmp
push
movsl
inc
lds
or
add
pop
les
xchg
mov
add
add
out
fisttps
xlat
xchg
push
mov
cmp
aad
scas
addb
addl
xchg
out
pusha
arpl
ret
pop
leave
inc
ret
jl
das
shl
sub
test
aad
jo
ds
jbe
clc
sbb
dec
ret
pop
clc
inc
das
pop
mov
push
push
push
add
jb
out
test
jbe
test
andb
add
shl
dec
lds
and
or
das
repz
daa
fwait
in
and
loopne
in
or
mov
add
xchg
mov
out
adcb
inc
loope
in
movsl
loopne
mov
add
fs
mov
ret
loopne
mov
and
add
dec
xchg
jo
dec
addl
dec
andl
mov
icebp
inc
call
fmull
mov
push
addb
inc
aam
movsl
inc
lock
xor
add
xchg
es
test
aam
popa
jge
adc
arpl
xor
shll
jge
jl
daa
ror
repz
sbb
push
and
jl
das
int3
sub
inc
add
lret
add
lret
andb
lret
jnp
rol
add
add
loope
jp
clc
xchg
das
ret
and
out
mov
push
fldl
inc
add
mov
aad
jb
adc
out
inc
les
sar
in
add
adc
mov
in
pop
lea
jl
lea
scas
lret
jg
and
lret
jnp
and
in
jnp
and
and
mov
movsb
out
inc
cmp
daa
out
mov
add
loop
jno
inc
jae
mov
mov
adc
add
shl
lods
dec
inc
cmpsl
flds
lods
out
addr16
out
les
addr16
xchg
inc
das
mov
cmp
add
shlb
inc
xor
xchg
cmpl
movsb
das
mov
inc
fsubs
ret
test
ret
push
add
aad
jo
pop
aad
jo
adc
out
inc
pushf
test
mov
lds
aad
jo
pop
aad
jo
pop
aad
jo
pop
aad
jo
pop
jo
fwait
loope
je
out
mov
and
loopne
jne
fs
mull
xor
stos
test
daa
clc
xchg
mov
inc
test
xchg
or
dec
addr16
jb
dec
add
add
idivl
idiv
inc
inc
jp
and
orb
out
add
and
test
fcmovb
jnp
and
lret
jnp
and
jnp
and
add
jnp
and
test
inc
lods
test
cmpsl
xor
lds
mov
jl
inc
jl
test
and
out
pop
lahf
out
pop
pop
fld
lods
inc
mov
mov
push
jnp
out
inc
cmp
and
ret
je
in
fs
je
roll
xor
add
out
add
les
and
jnp
rol
inc
cmpsb
insb
test
icebp
xchg
add
test
inc
test
js
psadbw
ja
pop
iret
lock
and
lods
movb
or
dec
inc
addr16
sub
scas
addr16
movsl
sbb
cmpsb
and
rcll
xchg
incl
mov
mov
in
pop
shll
cli
push
pop
ret
lret
cmp
fs
addr16
jp
xchg
jb
jge
push
test
mov
mov
mov
cmp
cmp
data16
test
pop
mov
dec
cli
cmc
cmp
lock
loope
in
sarb
jg
jo
push
jg
add
xchg
andl
mov
and
jne
in
data16
inc
ja
xchg
jg
push
pop
xchg
add
out
lds
testl
xchg
ja
out
lds
in
inc
in
inc
mov
stc
addr16
das
mov
mov
mov
add
jnp
notb
ja
out
lds
jnp
xchg
not
push
cmpsl
fwait
mov
mov
dec
clc
jnp
mulb
in
push
mov
xor
and
ja
out
mov
loope
jg
cmp
movsl
das
sar
das
mov
mov
mov
ret
jae
sarl
pop
xor
mov
mov
rol
mov
in
mov
push
and
lds
jnp
mulb
in
and
inc
mul
in
aad
jbe
out
push
inc
mov
notb
in
loope
inc
ja
out
lds
mov
xor
cmpsb
ja
out
in
xchg
and
mov
and
sarl
jae
push
in
gs
aaa
nop
add
push
div
in
mov
xor
jnp
not
in
aad
push
ja
out
aad
or
sarl
in
push
mov
mov
adc
in
pop
mov
pusha
adc
loopne
shl
push
sarb
fs
push
mul
in
idivb
jb
mov
bound
divb
and
mov
lds
fldl
idiv
cli
mov
xor
xchg
inc
cmp
lret
cmpsl
arpl
shl
lds
ret
mul
in
push
mov
xchg
or
mov
jo
out
addr16
mulb
push
gs
mov
aas
jbe
push
sarl
shl
and
jno
mov
mov
mov
inc
out
lds
divb
push
mov
jg
pusha
fcomi
shl
sarl
inc
notb
ja
out
lds
out
jo
testb
jno
mov
push
lds
in
adc
out
lds
jnp
xchg
jmp
mov
loope
out
lds
mov
and
out
lds
out
pusha
repz
xchg
icebp
ret
sarl
pop
add
jae
nop
ja
out
mov
in
mov
cmc
testb
ja
out
lds
pop
cmpsl
arpl
aaa
cmpsb
mov
xor
testb
ja
out
lds
pop
xchg
jbe
mov
adc
in
repnz
lcall
cmpsb
mov
xchg
out
lds
testb
sbb
mov
mov
xor
jecxz
movsl
xchg
jae
adc
mov
mov
cmpsl
mov
jmp
or
push
dec
loope
mov
pushl
xchg
les
adc
insb
movsb
pop
cld
mov
ja
insl
lds
mov
insl
in
sti
pushf
mov
jno
pop
pop
das
iret
repz
xchg
xchg
mov
ja
lea
sbb
mov
sub
out
xchg
jge
inc
jbe
test
jmp
dec
mov
enter
push
push
fs
push
cmp
cmpsb
adc
xchg
out
inc
push
pop
xor
dec
or
mov
jb
fxch
xchg
inc
xchg
leave
pushf
in
stos
insb
aam
rcrl
mov
xchg
adc
cmp
xchg
stc
ficoml
pop
sub
xor
jns
repnz
arpl
call
insl
jbe
sub
mov
test
rcrb
sub
testl
je
xor
inc
pop
or
lock
in
mov
ret
int3
incb
daa
lods
movsl
or
std
inc
inc
iret
popf
pop
movsb
in
push
inc
xor
mov
std
in
std
in
pop
adc
add
mov
cli
cmc
aam
adc
push
mov
aas
push
lahf
mov
arpl
xorb
insl
rcrl
je
jno
xor
cmp
inc
cmp
test
push
test
scas
jno
xor
inc
movsb
cmpl
mov
mov
les
data16
cld
out
xchg
aas
mov
mov
cwtl
loop
leave
fcmovnu
inc
test
xor
mov
pop
add
in
jle
inc
add
fstl
stc
mov
xchg
repnz
test
mov
ror
mov
ret
jecxz
mov
add
push
inc
mulb
out
movsb
mov
or
jl
icebp
call
arpl
or
pop
fs
xchg
push
and
movsl
lock
call
mov
push
jnp
mov
add
es
jne
pop
fisttpll
test
fs
hlt
daa
sbb
push
adc
mov
push
cld
in
test
imul
fsubl
adc
sahf
mov
mov
or
pop
xchg
sub
cmp
xchg
bound
jns
ret
adc
fstpt
data16
lret
push
out
test
mov
test
enter
jae
cmp
aad
xchg
shlb
mov
mov
sbb
push
push
mov
adc
jb
mov
pusha
inc
fisttpll
and
divl
arpl
push
inc
or
and
lods
imul
push
inc
push
negb
jo
xchg
je
inc
lods
cmp
lods
xchg
les
jle
cmpsb
mov
in
int
jns
pop
ja
call
loope
lcall
gs
out
mov
xchg
jbe
stos
mov
push
les
test
xchg
push
mov
mov
cmp
inc
ret
inc
ja
repz
in
mov
jne
repz
add
add
pavgb
cld
hlt
cmc
cmp
pop
scas
sbb
cld
xor
inc
push
in
test
pop
out
push
cmpsb
cmpsb
imul
and
cs
in
mov
lcall
scas
jno
insb
data16
push
andl
push
cmp
test
xchg
insb
test
fs
arpl
hlt
js
xor
jo
jns
mov
lds
sbb
push
out
bound
ja
decl
mov
adc
sub
add
pop
incb
jno
push
stos
bound
mov
cmpsb
mov
cmp
adc
leave
adc
ja
jle
mov
inc
mov
in
clc
dec
andb
jle
rolb
mov
mov
notl
inc
jnp
pop
test
xlat
mov
negb
les
xchg
int3
pop
adc
cli
outsb
arpl
xor
push
out
hlt
in
in
les
inc
xchg
popa
cmpsb
arpl
xor
cld
subl
and
and
pop
data16
je
dec
pop
xor
imul
sbb
jecxz
xchg
jge
aaa
push
push
push
ja
js
and
je
sbb
push
dec
repz
xor
jae
push
dec
or
outsb
cmc
cmp
aad
push
lds
jecxz
lds
dec
mov
gs
jge
xchg
cmpsl
pop
jl
pop
aam
mov
int
enter
movsb
imul
add
mov
mov
jb
aad
adcb
outsb
daa
loopne
int
loop
ja
popf
and
pop
ljmp
rcrb
mov
lds
imul
inc
push
inc
clc
out
rcll
lods
nop
jl
fldl
mov
pop
and
adc
mov
gs
lcall
pop
jno
lds
mov
repnz
clc
pop
testb
sbb
ret
andl
cld
inc
fstpt
add
lods
inc
pop
pop
repnz
aad
les
add
aam
imul
fwait
cld
movsb
mov
out
lret
mov
or
clc
xor
movl
mov
xor
mov
dec
push
in
xchg
ss
insb
mov
movsl
subl
lret
mov
push
fnstcw
or
movsb
sbb
add
ret
cmpl
pop
dec
shl
stc
fidivrs
dec
push
pop
hlt
int3
loopne
std
in
int3
scas
shlb
mov
fcmovnb
aaa
incb
jmp
push
mov
mov
sub
mov
push
notb
mov
out
mov
inc
pop
xor
jne
pop
xrelease
jbe
xchg
aaa
adcl
jo
mov
cmp
fnsave
cmp
daa
loope
in
les
sub
pop
mov
out
loop
sub
xchg
ret
jae
pushf
add
fnsave
adc
jae
jo
vsqrtsd
mov
lods
ja
hlt
test
and
jle
add
movsl
lods
cmp
sahf
ret
es
and
movsb
jg
mov
sbb
hlt
and
pushw
or
lods
jbe
fidivrs
mov
cld
std
xchg
cmpsb
cmc
cmp
loop
pop
mov
lds
mov
mov
lea
ja
push
xchg
iret
test
movsl
movsl
addr16
ljmp
mov
or
adc
orl
mov
test
add
test
jle
and
test
ret
notl
ficompl
cmpsb
push
dec
sbb
insl
fwait
mov
movsb
movsl
or
jne
mov
popf
xchg
xchg
lods
mov
xor
ficomps
insl
adc
jg
push
ret
movsb
pop
arpl
call
loope
mov
popf
jge
lea
jo
pop
mov
aaa
cmp
push
in
scas
fs
shll
inc
jl
pop
ljmp
add
icebp
fucomp
ja
cmp
test
adc
lods
push
sub
jae
mov
ficoml
mov
jbe
pop
sarb
negl
jnp
les
in
and
lds
cmpsl
and
test
stos
cmp
ja
fs
dec
test
mov
fsubrl
fidivs
in
mov
push
jae
mov
ja
dec
insb
gs
fs
jg
and
jb
ficoml
pop
jae
stos
push
in
outsl
sub
jbe
xchg
xchg
ja
xor
add
fstps
mov
cmp
dec
movsl
pop
das
jns
push
icebp
push
insl
fnsave
xlat
cltd
inc
lret
int
popf
cmp
daa
aam
inc
loope
mov
mov
adc
sbb
pop
and
call
adc
lea
fcoml
sub
cli
lods
stc
sub
xchg
jge
sbb
mov
repnz
in
in
idivl
ret
xchg
neg
xor
push
arpl
jl
bound
test
sub
push
mov
leave
insl
test
sbb
fcmovb
jae
fs
cmp
in
mov
icebp
and
frstor
inc
push
mov
in
cmp
movb
cli
or
rorb
and
addr16
daa
push
push
xor
pop
std
pop
gs
divb
and
pop
div
stos
xchg
frstor
fisubs
fnstenv
rol
sub
cmpsl
and
incb
xchg
lds
jecxz
sbbl
adc
test
stos
inc
ljmp
lods
mov
and
in
fnstenv
testb
inc
std
mov
add
dec
adc
sbb
daa
in
jg
xchg
dec
ja
movsb
out
lcall
aas
shll
dec
xchg
out
repnz
push
cmpsl
mov
inc
ljmp
mul
and
cmc
jae
sub
ja
dec
add
out
cmp
movsl
add
lds
xor
jne
pop
lret
cmp
mov
aad
test
inc
mov
xor
inc
mov
jne
cs
mov
xor
add
mov
inc
insb
ja
nop
xchg
push
into
ljmp
cmp
lds
pushf
sbbl
push
fidivs
aam
testb
lock
cmp
sti
test
ljmp
push
mov
xchg
aaa
test
aas
insl
repz
sbb
hlt
fistpll
adc
fcompl
inc
mov
mov
xchg
sub
scas
xor
jbe
hlt
ret
mov
loopne
stos
mov
lret
sbb
jb
xchg
out
inc
mov
cmp
addr16
xchg
je
pop
pop
push
ret
sub
inc
cltd
cmp
ja
flds
inc
xor
bound
mov
test
pop
ret
xor
popf
xchg
sbb
jne
and
shll
cmp
pop
xchg
mov
xchg
push
movsl
nop
push
sbb
std
mov
cmc
je
test
in
jne
imul
cmpsl
sub
mov
cmpsl
insb
mull
mov
mov
mov
cmp
mov
ficoms
mov
movsl
jnp
adc
lds
inc
mov
xchg
clc
rorl
repnz
test
inc
mov
xchg
jns
in
out
arpl
aas
mov
xor
push
sub
mov
xchg
inc
jl
pop
pop
cmp
repz
lods
addl
lds
icebp
mov
cmc
adc
imulb
int3
mov
test
clc
sahf
inc
fdivp
fdivl
cli
std
jb
cmp
mov
shll
cmpb
xorl
sbb
movsl
push
jne
testl
pop
test
push
cmp
jge
repz
mov
repnz
fmull
cmp
cmc
push
cmp
inc
cmp
adc
mov
jne
xor
les
mov
jnp
addl
add
aad
add
mov
ss
sbb
out
stos
ret
pop
je
jo
cmp
out
jge
ss
xchg
cld
push
js
pop
cmp
lahf
xchg
push
cmpsb
mov
pop
test
lret
mov
push
lock
mov
daa
bound
xchg
mov
mov
xchg
movsb
push
xor
imul
js
mov
aaa
ss
jne
test
xor
cmp
into
loop
ret
mov
cmpsb
jecxz
mov
sbb
inc
inc
arpl
inc
fs
xchg
cltd
ljmp
mov
xchg
out
cmp
insb
in
cli
fsubr
pop
enter
xchg
scas
jne
mov
dec
arpl
scas
xchg
lods
es
repnz
imul
mov
mov
in
stc
dec
pop
cmc
incl
sub
adc
jecxz
iret
out
inc
data16
test
testb
add
std
in
stc
push
xor
mov
sarl
in
cmp
xchg
out
add
gs
ljmp
and
jmp
mov
fucomip
sub
mov
cmp
imul
ss
adc
jp
add
pop
sub
lahf
sbb
and
jmp
scas
shrl
and
in
std
movsl
call
test
sub
lcall
inc
negl
cmp
mov
not
and
daa
shl
mov
inc
jg
js
ret
jle
leave
aad
adc
add
testl
out
jle
xor
xor
clc
add
or
sar
or
add
stos
pop
jle
call
imul
es
lds
jnp
xchg
xchg
push
pusha
sbb
cmp
jle
mov
jecxz
and
clc
pop
pop
idiv
in
lret
mov
popa
test
ds
jp
loope
imul
xor
mov
mul
out
arpl
dec
push
jecxz
mov
fs
lahf
push
popl
es
repz
xlat
and
xchg
fldl
or
mov
mov
cmp
cmp
in
mov
pop
call
cmpb
lret
jo
pop
jno
xchg
sub
out
rcrl
loope
fadds
cmp
or
adc
pop
mov
lahf
sub
mov
mov
data16
dec
cli
rcll
jo
out
mov
subb
popa
pop
jb
loope
and
push
xorl
mov
sub
subl
adc
pop
loope
add
jb
daa
push
dec
stos
adc
lret
ficomps
xchg
loope
add
icebp
add
pop
ljmp
dec
push
add
test
xchg
push
les
pop
adc
fstl
pop
test
cwtl
inc
shufps
or
out
sbb
mov
insb
pop
mov
xchg
inc
je
jmp
imul
loop
pop
inc
mov
mov
subb
je
pop
or
or
push
ret
ja
incl
icebp
js
mov
sbb
gs
mul
out
lds
pop
loopne
in
movsl
negb
out
scas
add
test
cmp
arpl
rolb
nop
mov
jne
jb
pop
addr16
pusha
mov
test
push
jne
cwtl
xchg
mov
out
and
pop
in
mov
jo
dec
rol
and
addr16
out
dec
push
or
lds
arpl
dec
pop
pop
mov
out
in
movsl
movl
adc
pop
mov
mov
adc
arpl
inc
scas
gs
dec
addr16
sub
jne
or
out
xchg
loope
jmp
fsubl
dec
popf
cli
pmulhuw
xor
ret
fs
xchg
stos
cmp
mov
and
addr16
xchg
cmpps
gs
cwtl
add
test
mov
adc
dec
movsb
mov
sbb
scas
lds
inc
decl
mov
or
out
jo
inc
test
invd
mov
jge
shlb
addr16
in
xor
movsl
push
movsb
mov
dec
pop
mov
mov
es
addr16
cmp
sbb
jo
and
loope
inc
cmpsb
xor
test
lcall
xchg
inc
cmp
out
ret
xor
cwtl
dec
and
addr16
insl
lds
dec
rol
mov
rcrb
mov
mov
addr16
popa
dec
dec
pop
xor
lds
sub
into
neg
loopne
pop
addr16
test
and
mov
inc
jl
mov
sbb
lcall
adc
dec
xchg
es
and
sbb
stos
pop
xchg
ret
or
mov
inc
mov
mov
sbb
addr16
loopne
fsubrs
in
or
sbb
mov
add
arpl
xchg
sbb
mov
adc
cmc
shrl
nop
push
pop
das
inc
mov
dec
jne
mov
dec
xlat
out
in
jg
sub
push
out
stos
in
aam
neg
push
mov
out
je
lcall
push
pop
sbb
mov
repz
cmp
cmp
js
call
stc
psubw
sbb
movsb
and
out
lcall
mov
idiv
jle
fdivrs
pushf
divl
bound
jbe
loopew
cmpsl
andb
mul
dec
pop
mov
sub
xchg
jb
mov
loope
xchg
daa
mov
and
loopne
sub
scas
addr16
jnp
inc
sub
mov
dec
or
notl
testl
sarl
sbb
clc
mull
ljmp
es
xchg
push
out
rol
popf
dec
adc
and
and
test
jnp
pop
aam
popa
pusha
inc
sbb
filds
fildll
sub
or
neg
outsb
mov
xchg
insl
lret
imul
inc
pop
adc
mov
mov
test
sarb
loop
pop
add
mov
adc
inc
xchg
pusha
xor
mov
incl
test
arpl
and
or
dec
mov
sbb
test
movsl
dec
push
cwtl
inc
ret
sub
nop
insl
adcl
dec
je
lret
mov
mov
inc
sbb
fsub
js
scas
sub
dec
push
test
inc
fsubs
cwtl
push
lods
add
test
test
cmp
xchg
out
movsb
adc
adc
das
test
mov
add
xchg
cmp
inc
pop
cmp
incb
jl
mov
mov
inc
jne
out
xchg
inc
ljmp
std
xor
mov
cmp
int3
int
aas
jge
xor
imull
mov
loope
scas
and
xor
or
dec
sub
mov
xchg
push
cmovno
xchg
cmovns
stc
nop
aad
inc
xchg
mov
idivl
subl
fisubl
mov
xchg
xor
shrl
in
xchg
add
js
cmc
test
push
addr16
into
push
fldt
cwtl
dec
push
sub
inc
jmp
mov
xor
cmp
jmp
repz
dec
mov
mov
loopne
xchg
pop
sub
jbe
movsl
pop
or
mov
cltd
push
cmp
adc
les
out
add
xchg
mov
or
push
push
idivl
sub
xchg
xchg
add
addl
fchs
mov
and
mov
xchg
inc
mov
mov
push
les
inc
out
out
je
cmp
inc
fbstp
cmp
pop
loope
leave
addb
adc
out
subl
sub
lock
add
mov
inc
shll
jae
push
out
negl
or
fld
xchg
call
mov
xchg
fsubp
push
xchg
movsb
leave
mov
lds
lret
xchg
xor
dec
in
addr16
mov
ficomps
xchg
insb
into
cmp
sbb
mov
pop
les
les
out
jbe
cld
or
fistl
insl
mov
movsl
std
cmp
sbb
shll
shl
lea
pop
loopne
into
and
pop
loope
jl
push
in
dec
sub
inc
jne
pop
gs
test
bound
jo
pop
popa
xor
push
or
inc
shrl
inc
xchg
adc
call
lods
mov
outsl
orb
mov
test
or
pop
mov
data16
shll
mov
divb
cmpsb
hlt
fwait
pop
jno
repz
adc
adc
stc
fisubrs
push
jae
or
ja
xchg
mov
dec
push
inc
ja
daa
fistl
dec
iret
sbb
loope
mov
test
test
enter
mov
test
shlb
icebp
test
popa
test
lock
jne
mov
inc
mov
push
pop
addr16
jne
inc
mul
fisttpll
aad
pop
movsl
gs
lret
adc
push
sub
addr16
xor
daa
xchg
xchg
mov
stc
pop
mov
bound
add
add
xor
pop
popf
inc
xchg
daa
addl
dec
mov
ror
mov
leave
loopne
xchg
cmp
or
xor
cmp
fsubs
sub
dec
rolb
sbb
or
inc
ffree
add
les
mov
mov
fdivrs
add
xor
jnp
repnz
mov
das
pop
xor
lret
mov
mov
pop
aaa
pop
rclb
pop
pop
dec
push
sarl
stos
add
lahf
syscall
repnz
andl
js
out
ja
jle
out
negl
aas
add
push
in
roll
cmpsl
xchg
add
out
inc
cmpsl
mov
xchg
xchg
out
outsb
loopne
cmpb
inc
ss
sub
popf
add
or
or
fisubs
and
outsl
iret
xchg
insl
daa
lcall
fimull
jge
jecxz
and
cmpsb
cmp
dec
out
inc
test
push
cmpsl
mov
xchg
jecxz
scas
das
lods
clc
aaa
push
les
in
popf
jecxz
mov
mov
flds
xchg
cmc
shl
pop
fldt
mov
dec
test
xlat
shll
frstor
inc
and
xor
mov
bound
xchg
xor
lcall
adc
inc
stc
pop
sub
cld
out
in
pop
fcompl
dec
and
andb
ja
div
out
mov
xchg
cltd
pop
sbb
cmpsl
fcoml
xchg
add
sahf
inc
push
pop
pop
and
fstl
lock
cmpsb
and
mov
mov
adcl
pop
aas
jbe
gs
mov
je
daa
data16
jecxz
add
out
cli
je
mov
in
push
pop
out
xlat
xor
out
test
cmp
out
out
not
xlat
das
jne
les
push
out
arpl
mul
xchg
add
jae
xchg
jge
add
out
les
cmpsb
pushf
sub
push
adcl
outsl
mov
pop
mov
int3
push
aam
inc
lcall
sbb
inc
into
adc
sbb
pop
in
adc
adc
pop
scas
mov
add
aas
add
ret
mov
das
daa
mov
xor
idiv
mov
push
mul
stos
mov
ret
ja
out
repz
in
mov
ficoms
jle
inc
mov
movl
pop
shl
and
push
cmp
pop
jmp
data16
mov
out
pusha
add
jg
in
out
inc
ja
out
xor
mov
loope
mov
add
scas
frstor
mov
inc
lds
in
mov
ret
in
ja
add
out
lds
inc
negb
arpl
xorl
mov
idivb
in
aaa
mov
and
daa
jnp
negb
in
pop
mov
movsb
lds
jnp
idiv
in
idivb
and
neg
in
mov
push
idivb
lds
mov
lds
in
xchg
inc
lds
imulb
ja
mov
pop
in
push
mov
jg
and
aam
or
mov
xchg
test
pop
push
dec
inc
cmp
add
addr16
iret
cmpsl
xchg
div
lahf
scas
xlat
mov
push
adc
decl
push
lahf
cld
in
and
lods
movsb
das
dec
test
insb
fs
pop
scas
out
out
or
aaa
daa
das
cmpsb
jle
or
xchg
mov
xchg
dec
sahf
lret
outsb
data16
int3
mov
movsb
lods
hlt
je
xor
mov
faddl
aaa
das
daa
pop
pop
iret
sysret
imul
push
and
cwtl
push
idiv
aaa
cmp
daa
fcmovnb
mul
push
call
scas
mov
push
test
out
sbb
mul
aaa
sub
inc
arpl
fbld
xlat
insl
xchg
add
mov
pop
mov
mov
pop
notl
int
aas
loopne
xchg
fwait
scas
add
cmpsl
jno
cmpsl
cmpsb
out
negl
jnp
rorl
in
popl
cmpsl
xacquire
scas
imul
addr16
jae
pop
shll
ja
xchg
not
inc
jbe
daa
sub
das
inc
out
pop
mov
idiv
mov
add
loope
movsl
inc
das
rcr
fdivrl
xchg
divl
cmpsl
arpl
ja
daa
xchg
not
add
out
mov
out
mul
jle
arpl
mov
mov
incb
notb
out
neg
out
movb
add
dec
sub
push
mov
add
lea
inc
mov
cmc
sahf
shll
movb
pop
adc
int
mov
sahf
jo
inc
pop
mov
mov
mov
je
and
lret
in
out
sahf
inc
les
cmc
xchg
mull
pop
out
aas
xchg
imul
push
icebp
jle
lret
xlat
jbe
outsb
mov
cmp
adc
xchg
neg
pop
mov
push
mov
into
idivl
xchg
cmp
xchg
xchg
dec
add
pop
mov
pop
not
ds
jne
mull
pop
imull
loop
jne
mull
divl
push
call
push
and
mov
std
add
cs
inc
out
insl
divl
stc
pop
sub
jo
out
in
dec
rcr
pop
mov
addl
lret
loopne
sub
aas
test
add
cmpsl
pop
dec
int
inc
test
mov
mul
cmpsl
inc
das
jmp
aaa
idivl
mov
daa
subl
add
popf
shr
xchg
cmc
imull
inc
pmaxsw
aas
in
sub
pop
cmp
add
xchg
data16
cmpl
jge
lea
daa
cmp
vdivsd
xorl
pcmpgtw
inc
daa
jge
arpl
jg
idivb
imull
pop
pop
jo
cmp
aas
scas
out
shrl
rorl
and
sbb
adc
xchg
out
cmpsl
mov
idiv
jg
mul
out
out
sahf
xor
in
scas
jbe
aas
in
pop
adc
cli
faddl
loopne
data16
divl
outsb
out
push
mov
out
mov
fsub
lods
hlt
mov
or
cmc
movsb
add
pushf
pop
maskmovq
testl
pop
testl
scas
fcomi
test
jl
je
pop
insb
mov
es
mov
xchg
jl
cmpsl
inc
mov
mov
xor
into
mov
movsl
shl
push
push
int
fwait
sub
xor
negl
aaa
mov
idivl
xchg
addr16
mov
fwait
or
adc
xchg
push
repz
push
das
jmp
xlat
jno
push
div
inc
jcxz
or
test
je
lret
maskmovq
aas
lret
xchg
imul
pop
jnp
jb
push
int
divb
add
divl
divl
xchg
mov
neg
fwait
inc
aaa
lods
imul
inc
in
xchg
or
jnp
cmpsl
pop
div
jae
ja
cmpsl
in
fists
push
sbb
scas
fwait
iret
arpl
mov
fmuls
jnp
mov
inc
dec
test
jmp
add
pop
inc
xchg
jns
mull
mov
jnp
jbe
xor
lahf
pop
div
sub
xlat
and
xlat
adc
cmc
das
mov
testl
inc
out
or
cli
cli
add
repnz
pop
mov
ljmpw
shl
aas
dec
loop
mov
in
out
fiaddl
sar
mov
ja
das
fbld
scas
movsb
testl
idiv
mov
cmc
xlat
stos
mov
pop
lcall
pushl
test
jp
das
mov
aaa
fists
cmc
daa
mov
fisttps
mov
rcll
bound
cmpsb
es
jmp
mov
jle
into
es
xchg
cmc
jle
inc
dec
inc
push
fbstp
loopne
notl
lret
subl
cmp
aaa
pmaxsw
xor
sbb
sub
and
testl
aas
jo
movzwl
add
fsubs
mov
push
push
into
adc
inc
stos
idivl
or
inc
testl
pop
cmp
notl
cmpsl
mov
mov
mov
jmp
mov
mov
push
testl
andl
notl
mov
fdivp
test
mov
scas
testl
popa
pop
sub
fistpll
pop
addr16
divl
pop
jnp
out
xchg
call
loopne
mov
dec
add
xchg
idivl
jle
jbe
ja
daa
inc
fildl
mov
mov
rcrl
dec
mov
mov
sahf
pop
jbe
xor
pop
pop
in
aaa
movsl
testl
and
enter
sbb
out
xor
adc
aaa
xlat
or
cwtl
test
fdivr
inc
daa
out
div
int
idiv
out
cmp
mov
call
iret
loopne
fdivs
not
test
enter
mov
dec
mov
push
test
mov
notl
dec
cli
mov
cwtl
add
ja
mov
xchg
fistpll
fbstp
shll
push
test
pop
cmc
push
push
jo
js
mov
add
addr16
movsb
negl
xchg
cmc
dec
cli
pop
add
mov
negl
pop
fwait
push
and
mov
push
scas
das
mul
aaa
scas
mov
mull
xchg
daa
divl
out
insl
aas
imul
push
das
sub
cmpsb
loopne
cmpsb
mov
cmc
into
jo
pop
jnp
rorl
mov
mov
jbe
iret
lea
mov
in
fisttpll
imull
mov
sti
lahf
inc
sub
incl
lret
test
sti
mov
out
mov
notl
aas
jle
push
neg
cli
mov
xlat
or
mull
jg
popa
daa
iret
sti
sbb
mov
aaa
imull
ficomps
aaa
xchg
aas
dec
mul
fidivs
sti
cmpsl
mov
negl
mov
xchg
cmpsb
push
jb
dec
or
pop
jne
xchg
mov
idivl
mov
dec
push
and
lahf
imulw
ja
mov
push
cmc
xchg
test
push
decb
jnp
daa
aad
and
cmp
and
mov
ret
inc
mov
jge
pop
cmpl
lock
or
push
idiv
movb
mull
ret
sbb
dec
fiadds
mov
gs
xchg
jmp
out
lahf
mul
jbe
xchg
shrl
mov
aaa
mov
scas
sub
jne
js
cmpsb
xor
filds
enter
lahf
sahf
daa
cmp
aas
xchg
jle
ds
lods
idiv
aaa
das
jbe
imul
inc
cmp
mov
outsb
inc
out
les
idivl
xadd
push
cmc
push
dec
pop
mov
ljmp
mov
idivl
or
ss
pop
mov
pop
divl
push
mov
sti
inc
adc
es
out
lahf
test
mov
lret
push
out
and
inc
push
jne
std
jae
mov
push
idivl
xchg
sti
arpl
test
pop
je
mov
sahf
je
out
out
aad
in
idiv
and
push
dec
add
das
mov
pop
push
filds
pusha
int
clc
daa
out
stc
out
in
mov
push
mov
sbb
hlt
jg
inc
lahf
sahf
imul
lds
lods
xchg
push
mov
pop
out
lods
xor
out
cld
addr16
push
pop
mov
mulb
cmpsb
data16
ret
sti
popa
jg
sahf
das
scas
incb
seto
mov
xchg
xchg
fs
in
dec
inc
mov
test
xchg
popf
xlat
dec
ja
xor
cmp
icebp
imul
pop
arpl
mov
mov
inc
pusha
mov
xchg
mov
std
mov
xlat
adc
in
scas
repnz
xchg
fwait
add
sti
iret
aas
jmp
lret
cmpsl
mov
pop
scas
dec
testb
popl
mov
add
testl
test
xlat
out
and
mov
aaa
fdivs
rol
outsl
roll
std
jmp
xchg
cmpsl
push
rcrl
mov
xor
out
xlat
jbe
daa
mov
pop
dec
sub
jle
xchg
pusha
mov
xchg
jno
xlat
repz
into
cmpsl
adc
jmp
std
xchg
aad
jecxz
loop
aad
xchg
aaa
lahf
out
add
jge
xchg
sahf
out
push
movsl
xchg
jg
mov
add
xchg
repnz
loope
pop
inc
inc
inc
inc
pop
sahf
mov
jmp
push
test
test
xlat
test
mov
push
lods
push
lahf
jbe
sub
cwtl
jle
xchg
andl
aaa
jne
inc
insl
test
mov
loope
negl
xchg
out
leave
cld
aaa
xchg
mov
iret
andl
xchg
shl
mov
push
dec
pop
adc
ja
xor
mov
add
mov
shl
pop
xor
add
les
inc
out
test
lock
fdivrs
mov
sbb
nop
repz
jno
push
push
loop
add
out
mov
jb
inc
push
adcl
mov
dec
sti
xchg
andb
mov
pusha
mov
jnp
out
push
mov
adc
and
test
repnz
es
aaa
adc
xor
aas
mov
movsl
das
shll
movsb
pop
and
xlat
repnz
jecxz
fidivs
jle
aam
loop
mov
mov
mov
sub
movsb
jecxz
nopl
in
ja
jecxz
incl
movb
inc
out
arpl
pop
and
push
shl
jge
and
inc
ja
in
pop
inc
jecxz
mov
rolb
and
cld
mov
cmpsl
jecxz
mov
sar
cmpsl
data16
lds
mov
pop
and
pop
in
jno
ja
mov
in
sarl
outsl
add
pop
push
fs
repnz
and
loopne
movsl
divb
push
adc
pop
cmpsl
inc
pop
xor
sbb
mov
data16
aam
int3
jb
xorb
add
popa
addr16
xor
and
add
inc
jno
lahf
push
addr16
rolb
mov
subb
mov
aaa
movsb
test
xor
daa
outsl
repnz
pop
ja
ja
movsl
or
and
dec
mov
ja
pop
dec
mov
push
mov
cmp
aas
pop
test
cmpsb
test
jle
xor
ficoms
pusha
ja
inc
add
push
hlt
jg
divl
sti
mov
popa
arpl
mov
cld
inc
xor
iret
inc
xlat
xchg
daa
cmpsb
push
cld
cmpsb
lock
sti
fbld
fs
and
movsb
xlat
movswl
xchg
sti
je
dec
sti
ja
outsl
aaa
xchg
pop
pusha
jbe
mov
dec
mov
xchg
cmpsl
out
rolb
mov
mov
movsl
and
mov
les
out
cmpsb
xor
lds
push
mov
dec
incl
in
pop
inc
std
add
mov
testl
popa
dec
aad
inc
push
cmpsb
xorb
and
sti
jle
cmc
out
gs
loope
lock
sub
cmp
daa
in
xchg
insb
sti
jbe
bound
pop
and
outsl
add
jg
pop
stc
cmpsb
into
mov
out
mov
pop
popa
pop
inc
xorb
inc
fisubs
out
sti
cmpsl
out
mov
popa
daa
movsb
movsl
in
test
ja
outsl
idiv
push
call
outsl
aas
aas
push
out
in
dec
inc
popf
jb
out
out
xlat
scas
add
pushl
lds
out
loopne
out
ret
ror
cmpsl
shlw
sti
cmp
xor
xlat
xchg
outsb
popl
out
xchg
fs
cmpsb
mov
sub
sahf
cld
andb
out
fsts
pop
and
and
loope
negb
or
std
mov
test
pop
mov
push
in
add
scas
xchg
jae
lods
xor
mov
adc
and
jae
dec
popf
or
inc
idivb
outsl
daa
jno
inc
add
adc
inc
icebp
jno
jnp
jbe
mov
xor
push
xchg
jmp
adc
jp
inc
jecxz
xchg
dec
cmpsl
jne
mov
call
jbe
pop
fildl
addr16
pop
xchg
shl
mov
mov
cmpsl
pop
adcb
mov
xor
cld
mov
jle
incb
loopne
push
mov
mov
mov
pop
mov
push
push
out
aas
adc
push
ret
sbb
inc
divl
ret
sti
lods
add
inc
call
mull
mov
or
cmc
jbe
adc
ja
ja
mov
iret
pop
test
sbb
inc
cld
inc
mov
jne
sub
adc
mov
aad
mov
push
ret
loopne
pusha
movsl
and
or
push
je
pop
xor
and
lods
push
lds
cmpsb
push
ret
ret
fs
mov
mov
fildll
sahf
movsb
pusha
out
mov
jno
seta
mov
imull
mov
adc
or
mov
imul
lahf
movb
out
sti
xchg
insl
mov
aad
outsl
rolb
iret
daa
adc
out
cmpsb
addr16
std
test
pop
ja
addr16
test
pop
jecxz
mov
into
mov
ret
dec
mov
es
xor
out
loop
dec
fildl
mov
mov
xor
inc
test
xlat
fsubp
push
lahf
lock
and
pop
daa
jae
jg
mov
inc
lea
repz
xchg
in
inc
cmpsl
xchg
sti
test
mov
and
fs
hlt
xchg
lock
sti
inc
cmpsb
mov
sub
icebp
aaa
push
cld
mov
hlt
adc
cmp
inc
push
hlt
xchg
inc
cmc
es
jnp
nop
mov
fs
out
pop
repz
popf
mov
jne
and
pop
push
fisubrs
sbb
jo
xlat
hlt
sarl
gs
push
pushf
test
mov
mov
hlt
lahf
arpl
popa
out
andb
and
andl
add
sti
adc
imul
push
test
testb
xor
jae
sti
mov
pop
mov
and
and
into
sbb
xchg
cmpsb
out
lahf
inc
sti
cmp
ret
mov
cmpsb
daa
test
popf
xchg
jle
add
sti
sub
mov
les
cmp
xchg
incb
ret
pop
cld
inc
cld
push
mov
cmpsl
mov
scas
cmpsl
mov
je
jno
jmp
inc
lds
movsl
push
vpaddw
cld
adc
xlat
std
jecxz
rcrl
fnsave
push
out
mov
pop
and
cmpsb
repz
popl
test
mov
repz
mov
xor
mov
mov
shll
loop
add
mov
addr16
xor
xorl
ja
les
and
rcr
into
dec
pop
and
push
movl
jecxz
shll
shl
mov
jae
push
adc
fsubl
lods
neg
fwait
hlt
lds
and
xor
lods
out
push
xlat
shll
out
js
xchg
or
xchg
aas
xor
sub
fbld
out
fildl
jcxz
push
xchg
jmp
cmpsb
add
xor
repz
rcrb
pop
repz
add
loopne
cmpsl
jae
mov
imul
test
jbe
push
inc
mov
aaa
xchg
arpl
mov
inc
pusha
adc
aaa
rolb
cmp
shll
inc
in
inc
or
xchg
pop
mov
inc
repnz
repz
add
and
add
or
loop
mov
jecxz
addb
push
into
test
repnz
sbb
ret
jp
fcomip
jae
outsb
loope
jno
push
pop
ljmp
cmc
xor
insl
inc
test
mov
inc
out
mov
stos
mov
fs
jecxz
je
repnz
js
jle
data16
jae
inc
outsl
xchg
dec
wrmsr
push
jbe
cmpsl
push
aaa
loop
ret
jecxz
xlat
mov
ja
xchg
mov
lahf
mov
idiv
adc
cmpsl
cs
xchg
jle
in
imul
out
aam
std
xchg
pop
icebp
rol
lret
add
shlb
jmp
icebp
ret
in
repz
aas
mov
push
mov
cmpsl
push
movl
jb
cmpl
addr16
push
xor
call
addr16
stos
cmpsb
ja
mov
repnz
mov
in
out
xor
cmp
xchg
into
popa
xorl
std
loopne
jecxz
lcall
out
jecxz
insl
push
cmp
xchg
jle
cmp
fldl
outsl
outsl
jbe
icebp
pop
shlb
mov
out
loop
and
stc
and
out
jbe
lahf
mov
sahf
ja
repz
mov
xor
stos
subl
pop
mov
jae
xchg
mov
divl
aaa
aas
cmpsl
das
pop
std
sbbl
test
add
push
mov
mov
inc
xchg
sbb
rclb
fndisi(8087
xorb
pop
xor
xor
xchg
out
xorb
ret
lds
outsl
nop
addr16
xchg
xchg
inc
mov
ja
jge
rcrl
lods
mov
mulb
ja
ja
push
popa
xor
ret
stos
bound
lods
and
in
mov
push
mov
stos
xor
cmp
ja
xchg
jmp
cld
mov
inc
mov
roll
dec
scas
sub
loop
pop
mov
movb
in
pop
jge
inc
pushf
cmpsb
movsl
and
cmpsb
pusha
xchg
addl
das
inc
adc
pushl
gs
mov
lahf
mov
xlat
scas
out
invd
cmc
outsl
pop
cmpsl
ljmpw
into
push
pop
sbb
je
repz
cld
push
fbstp
inc
addr16
inc
scas
push
push
xor
repnz
xlat
lds
xlat
and
bound
repz
dec
or
test
hlt
icebp
mov
inc
sti
mov
movsl
mov
std
bound
les
pusha
cmpsb
jb
js
test
aaa
dec
int
mov
dec
call
bound
adc
jbe
mov
mov
mov
mov
je
mov
inc
sti
fidivs
rorl
das
xchg
inc
aas
inc
mov
movsl
into
cmp
inc
mov
lret
out
sbb
fwait
movsb
out
or
inc
daa
add
mov
sub
aaa
outsl
lods
push
mov
inc
addr16
ja
xchg
ja
addr16
test
outsb
add
subb
xor
mov
xchg
arpl
adc
inc
xchg
inc
xchg
and
jge
jb
mov
mov
outsl
aaa
xchg
mov
cmpsl
pop
and
xlat
inc
inc
and
lock
ljmp
stc
test
add
roll
mov
in
repz
test
dec
pop
inc
add
jecxz
addr16
xor
neg
cld
xchg
push
scas
mov
call
mov
inc
mov
xlat
outsl
adc
xor
bound
add
sbbb
mov
cmc
aaa
cmc
inc
clc
push
aas
ret
cli
test
jecxz
inc
xchg
iret
icebp
add
out
out
in
push
dec
cltd
ret
scas
outsl
data16
jle
and
cmp
loope
icebp
xchg
add
mov
sbb
ja
pusha
push
inc
cmpsl
xorb
pop
xchg
into
pop
jmp
jp
push
and
push
pop
lds
leave
and
mov
and
sbb
popa
adc
lods
in
scas
pop
and
sarb
andb
cmp
inc
pop
inc
jl
add
adc
and
and
cmpsl
xchg
lock
mov
mov
fs
rclb
jne
xchg
cmc
jne
lock
pop
and
mov
adcl
iret
pop
mov
lock
imul
outsl
ret
and
xor
ss
outsl
mov
in
sar
into
mov
add
xchg
aaa
aad
inc
push
dec
fwait
mov
mov
or
xchg
loop
arpl
jge
into
and
xchg
pop
frstpm(287
jecxz
icebp
mov
ja
subl
xchg
in
repnz
xchg
xchg
pop
aaa
inc
addl
data16
adc
and
adc
xor
inc
testl
out
repz
movb
sbb
aam
xchg
pop
repnz
mov
icebp
rolb
mov
xchg
inc
cmpb
pop
and
cmp
ja
loope
aas
jb
out
sub
or
add
jne
out
in
push
xchg
pop
test
pusha
mov
xor
xchg
loopne
movsl
das
adc
sbb
mov
popa
adc
movsl
xorl
pop
xor
dec
cltd
jbe
fisubl
lret
and
ja
push
push
pop
fildll
lahf
flds
loop
lods
incl
mov
jbe
lds
cmpsl
faddl
push
hlt
adc
out
loop
outsl
and
jno
popf
pop
popa
ja
pop
jp
mull
mov
repnz
movsb
or
and
dec
inc
lea
mov
out
daa
inc
bound
imul
das
mov
or
xchg
jle
aad
mov
xchg
inc
loop
mov
fcmovb
loope
popa
es
cmpsb
cmpsl
xor
pop
mov
push
ja
push
pop
and
mov
out
push
mov
push
inc
outsl
mov
out
out
pop
and
mov
xchg
mov
jb
push
ret
xor
xchg
popa
ds
inc
aas
std
icebp
ja
mov
jo
mov
lods
sbb
push
aaa
inc
xorl
jmp
shll
push
icebp
imul
dec
push
rolb
out
fidivrs
fwait
out
xlat
pop
pop
adc
adcl
mov
xchg
pushf
fiaddl
arpl
add
jl
lcall
mov
outsl
pop
nop
out
arpl
aas
dec
mov
arpl
lahf
push
nop
outsl
push
aaa
pop
repnz
movsb
cmpsl
mov
mov
outsl
std
rorl
lahf
mov
jne
scas
mov
leave
inc
mov
jbe
out
ret
std
mov
mov
adc
mov
hlt
icebp
push
xor
mull
xor
dec
cmpsb
cwtl
sbb
ja
push
aaa
bound
add
popa
xchg
gs
mov
loopne
gs
divl
das
inc
clc
dec
fcomp
fldenv
xchg
xor
lahf
bound
inc
cmp
pop
adc
ja
fldl
loope
mov
in
adcl
jno
out
pop
xlat
ds
push
dec
inc
sti
cmp
insl
cmp
jge
shrl
outsl
push
cli
popw
push
cmpsl
cmp
add
adcl
pop
test
xchg
jecxz
mull
push
inc
es
xchg
xchg
inc
aas
out
scas
push
mov
mov
xchg
push
jno
inc
inc
xchg
lahf
xor
mov
fisubs
mov
push
neg
das
lahf
in
sbb
outsl
fdivp
and
xchg
mov
sti
push
push
cmpsl
movsb
adc
mov
data16
inc
cmpl
jle
hlt
push
iret
loopne
cmpsb
mov
rolb
and
jle
scas
scas
push
xchg
imul
inc
loope
jmp
pop
loopne
xor
scas
inc
dec
movswl
inc
scas
and
inc
test
lcall
movsl
out
xor
pop
fildl
push
pop
mov
pusha
adc
adc
loop
ret
stos
mov
hlt
push
test
outsl
cmc
outsl
in
bound
mov
es
mov
xor
pop
mov
jbe
sbb
fsubp
push
mulb
cmc
in
ljmp
out
mov
addl
ret
inc
pop
xor
push
jp
cmpsl
inc
cmpsl
scas
out
out
xchg
cltd
rol
push
mov
test
test
je
jae
addl
push
and
out
or
movsb
inc
iret
inc
outsb
lret
mov
jle
jo
mov
mov
scas
cmc
shrb
daa
les
ja
inc
adc
jecxz
and
inc
mov
scas
daa
iret
sahf
fstl
mov
jmp
xchg
sti
sub
add
arpl
mov
scas
xchg
lds
lods
mov
pop
jns
xchg
xchg
pop
daa
or
fistl
cli
cmpsl
das
popa
rcrb
sarl
daa
xor
mov
pushf
lods
push
mov
pop
xlat
jae
xchg
xlat
stos
lds
xchg
xlat
std
add
mov
inc
outsl
mov
es
inc
fs
sub
leave
ret
addr16
ret
push
aas
js
xlat
xlat
dec
push
cmpsl
js
pop
xlat
incb
js
pop
sbb
loop
push
mov
mov
out
jg
and
mov
pop
push
fistl
outsl
mov
pushf
js
scas
pop
cmpsl
js
push
push
mov
fsubrp
sbb
mov
daa
xlat
mov
mov
lock
sbb
xor
xlat
push
pop
testb
xchg
repz
je
lahf
cli
cmpsl
xlat
xlat
daa
stos
xlat
mov
ja
inc
cmpb
dec
jle
push
fbstp
aas
ret
into
or
jg
jg
out
push
lods
mov
cwtl
lods
shl
lahf
pop
cmp
vpshlq
xor
rcll
push
out
cmpsl
andl
movsb
xchg
lahf
fsubp
dec
mov
mov
and
mov
xor
xchg
add
jbe
lahf
pop
jmp
jecxz
push
cmc
out
movsl
adc
push
sub
sahf
lahf
repnz
lahf
arpl
xlat
aad
lahf
outsb
cmpsl
ja
mul
cmpsl
dec
lahf
jb
sbb
addr16
xchg
cli
inc
iret
xlat
shrl
and
lcall
mull
pop
dec
xchg
fs
jg
cmpsl
push
das
mov
adc
cmpsl
sahf
mov
xchg
in
adc
pop
xlat
and
lahf
add
adc
lock
dec
inc
pop
xchg
xchg
std
add
lahf
aas
jnp
xor
rcrl
data16
cmp
bound
repz
lahf
clc
and
xlat
inc
mov
push
xchg
cmpsl
icebp
mov
push
push
add
daa
ja
mov
popf
xchg
pop
xor
mov
xchg
fiadds
jge
loope
jnp
mov
inc
ljmp
aas
and
mov
mov
xlat
movntq
out
fsubl
not
cmc
push
aaa
push
sbb
out
fldl
jg
cmpsl
xor
xlat
pop
outsl
aaa
aam
lahf
out
pop
les
xor
stos
xlat
mov
cmpb
dec
ret
das
cmp
test
mov
movsl
push
lahf
into
jle
out
pop
mov
in
jp
out
mov
fdivs
addr16
popa
push
adc
xlat
cmc
jg
xchg
pop
pop
xchg
das
push
jb
mov
test
jne
pop
test
sbb
jecxz
in
into
inc
jle
imul
cld
lahf
xchg
ja
pop
std
out
ss
pop
xlat
adc
pop
mov
es
aaa
sbb
pop
ret
and
out
mov
icebp
lahf
aas
jg
outsl
enter
and
xchg
das
sbbb
incb
daa
cmpsl
dec
and
mov
mov
xlat
push
test
mov
sub
cmc
fcoms
cmpsl
inc
jcxz
out
movsl
push
outsb
xchg
lahf
pop
push
cld
adc
lahf
inc
inc
sbbl
out
or
ja
ret
add
push
mov
xchg
jb
loopne
push
aad
xlat
std
idiv
data16
cmpsl
in
dec
repnz
rcr
xlat
scas
jae
inc
lods
xchg
inc
xor
xchg
es
cmpsl
pop
cmpsb
jg
out
fdivp
inc
push
xchg
xlat
test
jecxz
mov
pop
pop
xlat
notb
xchg
into
lds
mov
divb
cmpsl
pop
mov
and
jle
pop
add
idiv
mov
repnz
fnsave
sub
mov
cmc
rorl
mov
or
xchg
cmp
xlat
addr16
daa
and
out
je
fisubs
arpl
mull
fisubl
inc
or
aad
out
cwtl
lret
jb
push
lds
mov
ljmp
adc
pop
bound
addr16
mov
adc
outsl
jecxz
and
cmpsl
imulb
insl
mov
xchg
and
dec
fs
movsl
xlat
pop
in
inc
or
mov
adcl
mov
or
xchg
in
pop
or
sbb
hlt
inc
xchg
mov
adc
dec
ljmp
xchg
mov
mov
xchg
iret
loopne
je
jnp
pop
sahf
push
mov
push
scas
jp
andl
adc
repnz
cmp
aam
fistpll
and
ficomps
mov
fsts
out
push
lret
lahf
cld
pop
hlt
inc
xchg
mov
daa
ja
les
stos
into
xor
popa
adc
inc
pop
cmc
into
pop
jg
mov
icebp
xchg
ret
mov
mov
rclb
bound
test
inc
ret
mov
jnp
jae
mov
xor
cmp
adcb
inc
add
mov
repnz
adcl
sbb
xor
jg
xchg
push
movsl
movsb
cmc
push
lahf
out
out
fdiv
cmpsb
pop
loop
lock
and
cli
xchg
decl
ret
mov
mov
addr16
out
push
mov
or
movsb
cli
xlat
scas
mov
add
iret
movntq
jbe
inc
mov
cmp
loop
bound
mov
jecxz
inc
cmp
dec
add
into
jo
data16
aas
rol
jle
cmpsb
jnp
scas
pop
jae
cmp
add
insl
movsb
aam
mov
jb
and
out
mov
dec
ja
mull
jge
cmpsl
fstl
mov
push
mul
gs
addr16
mov
xchg
data16
out
push
sahf
pop
cmp
push
fsts
mov
loop
outsl
inc
bound
mov
call
xor
fistl
pop
push
rol
or
inc
divl
gs
xchg
jne
hlt
mov
mov
cmpsb
jle
dec
mov
or
jo
cmp
fiaddl
bound
cld
xchg
mov
adc
mov
in
cld
sbb
notb
jmp
and
stos
outsb
inc
xchg
mov
mov
xchg
popa
out
mov
jnp
sub
clc
push
inc
sbb
dec
mov
pop
push
outsb
lret
jmp
push
or
cmp
insb
mov
je
inc
jnp
divb
cld
movsb
mov
in
aam
pushf
lds
in
mov
or
jcxz
add
pushl
pop
xchg
add
ljmp
and
icebp
enter
daa
pop
sahf
inc
inc
push
push
lods
mov
data16
test
adc
xor
fsubrl
and
or
mov
lock
cmpsl
xchg
xor
mov
adc
push
enter
or
iret
shll
add
andl
jmp
sbb
outsl
inc
mov
daa
dec
inc
std
push
cmpsl
popf
mov
sub
cli
daa
sub
xor
push
adc
daa
fs
cli
dec
mov
push
dec
jo
jecxz
sbb
addb
mov
add
inc
jnp
test
add
mov
add
test
push
inc
mov
pop
lds
loope
stos
jecxz
and
testb
ja
out
lds
popa
testb
ja
out
lds
jnp
testb
ja
out
lds
in
daa
stos
mov
mov
popa
in
bound
jecxz
fs
mulb
in
mov
jp
mov
arpl
aas
std
mov
in
fnstsw
test
lds
out
lds
in
jge
jne
insl
out
lds
push
testb
cmp
cmpsb
jl
fsubrs
pop
sub
cmp
xchg
aam
mov
je
insb
ja
out
lds
testb
stos
testb
fnsave
jnp
stos
loopne
idivb
dec
rcll
cmpsl
stos
loop
idivb
dec
rcll
jo
jnp
stos
loopne
idivb
push
mul
sahf
mov
and
xchg
les
iret
scas
insl
les
jbe
mov
xchg
push
int
rcll
pmaxsw
outsb
and
mov
in
sub
mov
dec
mov
sub
push
stos
icebp
adc
clc
ljmp
and
dec
mov
xor
add
mov
lret
addr16
push
ds
daa
xchg
int
out
jbe
xchg
xchg
or
mov
sarl
xchg
mov
addr16
inc
je
ds
daa
pop
xchg
int
out
insl
jnp
sarl
je
ds
daa
popf
xchg
int
out
lods
jnp
sarl
aad
fstl
int
pop
std
xchg
ljmp
ja
cmp
addr16
int
leave
cs
popf
mov
xor
xor
mov
and
ds
aad
xchg
sub
cmp
dec
iret
pushf
cmp
push
bound
sbb
mov
bound
mov
push
aaa
inc
pop
test
push
jecxz
cmp
ss
loopne
je
test
mov
and
mov
jb
in
xchg
xchg
push
and
scas
rolb
loope
mov
sarl
frstor
cmc
mov
xchg
cmpsb
in
sbb
or
mov
movsl
rolb
out
outsb
add
test
idivb
in
add
out
xor
xchg
cmp
mov
dec
or
in
pop
mov
lds
loop
jo
arpl
jecxz
and
lds
pop
shrb
cwtl
inc
mov
test
cmpb
inc
in
in
shlb
enter
sarb
neg
in
loopne
inc
ja
out
arpl
clc
in
add
lds
jnp
negb
pop
and
in
popa
mov
xor
arpl
mulb
ja
out
pop
adc
popa
jg
inc
imull
rol
jnp
idivb
roll
and
xchg
jnp
negb
and
lds
pop
inc
dec
in
loopne
leave
ja
out
lds
fdecstp
and
loope
mov
xchg
mov
mov
mul
in
test
sbb
jnp
mulb
sub
mov
idivl
out
lds
testb
push
mov
vpunpckldq
imulb
out
ret
and
jp
inc
out
adc
add
loope
and
test
jne
jmp
adc
xor
pop
ja
jp
and
lock
dec
subb
xor
fldt
jo
addr16
test
test
lods
adc
cmp
add
test
cmpsb
push
xorl
or
xlat
mov
out
sahf
mov
mov
push
bound
lret
mov
jae
sbb
shl
into
cld
adc
jmp
dec
sbb
sub
sub
push
stc
andl
imull
jb
pop
jno
xchg
cld
fmull
imul
or
hlt
or
les
push
push
add
shll
std
and
andl
adc
in
in
mov
rclb
je
pop
mov
subl
xchg
mov
frstor
xor
mov
shll
adc
mov
adc
sub
pop
xchg
lods
adc
movsb
fisubs
lds
ret
mov
addl
jns
cmpsb
dec
out
sbb
addr16
jbe
ss
push
push
fadds
xchg
jecxz
call
or
inc
jecxz
mov
test
lahf
push
inc
sub
mov
jne
and
add
inc
mov
imul
and
addr16
xchg
repz
jb
inc
lds
xor
mov
pusha
or
pop
and
jne
arpl
jo
loopne
sbbl
cmpsb
jne
add
jnp
loopne
and
dec
aam
push
int
lret
mov
inc
mov
lcall
std
xchg
push
push
jecxz
test
aaa
daa
mov
jbe
insl
ja
mov
out
mov
cltd
mov
and
shl
ss
add
cmpsl
pop
xchg
xchg
jne
add
push
out
add
outsb
negl
add
cmpsl
cmp
mov
and
popa
sbb
push
xchg
mov
inc
es
dec
xchg
add
sub
cli
ljmp
xor
shrl
xorb
leave
pop
hlt
fcmovne
ret
xchg
fbld
xchg
pop
addr16
repnz
sub
cmc
daa
cmpsb
dec
addl
mov
jecxz
fs
pop
mov
add
pop
cwtl
in
cmpsb
std
xchg
mov
mul
adc
push
inc
inc
rcl
shll
push
xorl
xchg
pop
loopne
loopne
xchg
ds
push
shll
jle
ss
pop
shlb
movsb
xchg
pop
xchg
arpl
inc
fmuls
xchg
sbb
iret
and
mov
lods
ja
pop
xchg
xor
push
cltd
sub
imul
and
inc
jge
mov
sub
xor
mov
xchg
jecxz
cmp
dec
dec
fwait
daa
cmpsb
mov
push
cmc
xor
xorl
jb
pushf
pop
iretw
icebp
dec
adc
xchg
and
lods
addr16
xor
or
je
mov
std
mov
out
jns
mov
xor
scas
iret
out
pushf
mov
dec
fldl
jne
aad
mov
pusha
add
pop
ljmp
ret
sbb
test
inc
cltd
movl
imul
ret
adc
xor
sub
add
mov
cmpsl
les
jl
ja
add
sbb
mov
dec
push
iret
xchg
imul
mov
and
addl
sbb
lahf
rcl
repnz
fldenv
ror
out
sbb
rolb
cli
arpl
popf
cmpsl
in
cmpsl
roll
push
inc
repz
xchg
cmp
cmpsl
xor
and
lds
in
mul
jge
push
shlb
lds
testb
ja
negb
jecxz
shll
xchg
cwtl
fldt
mov
inc
loopne
mov
fwait
scas
xchg
cmpsl
imul
jnp
mov
sbb
loop
mov
dec
sbb
mov
push
insb
popf
add
lds
inc
in
les
daa
scas
ss
xchg
xchg
shl
test
jp
and
cmp
pop
pop
mov
jae
sub
ja
jg
cmpsb
out
movsb
std
jg
sbbb
push
xchg
inc
add
push
add
inc
aad
xchg
add
sarl
add
mov
add
ja
mov
inc
xchg
push
sub
adc
add
out
xchg
inc
ds
test
test
aam
jg
jp
add
out
add
testb
add
mov
inc
xchg
xchg
bound
sbb
mov
out
shrl
pop
leave
add
cmc
push
hlt
movsl
icebp
mov
xchg
cld
rol
lret
inc
xorb
mov
sub
popf
daa
clc
push
mov
push
mov
inc
push
popf
cmpsl
mov
add
pop
dec
push
cmpsl
jecxz
data16
jecxz
xchg
xchg
test
push
popf
and
push
in
xchg
push
fndisi(8087
stos
mov
jne
push
out
mov
pop
icebp
les
in
data16
cltd
inc
add
roll
xchg
mov
repz
xlat
mov
or
test
popf
cmp
mov
jg
mov
adc
push
in
fdivrp
mov
and
mov
sub
mov
dec
add
popa
loop
mov
sub
inc
lods
loopne
or
push
xchg
outsb
push
inc
inc
and
fdivs
dec
js
aam
mov
jp
dec
ja
popa
mov
incl
loopne
test
daa
inc
int
adc
xchg
push
add
push
and
add
push
add
xchg
mov
ss
add
inc
add
sub
cwtl
add
js
mov
jo
mov
dec
iret
mov
jmp
xchg
jo
test
je
test
inc
lcall
movsb
cmpl
call
xchg
outsb
lret
aas
arpl
out
or
mov
ds
pop
popl
xor
mov
xor
out
inc
out
ds
cmpsl
mov
loope
jmp
mov
and
ret
nop
mov
shll
dec
push
pusha
arpl
pop
sbb
cmp
mov
xor
mov
xorl
push
roll
mov
add
pop
out
out
outsb
jg
jp
xchg
sub
jl
dec
mov
cmp
pop
das
push
inc
jmp
inc
push
aas
loope
in
pop
cmpsl
or
pop
loope
mov
pop
in
lds
sahf
notb
out
testl
sti
in
sub
jg
out
lds
xor
mov
bnd
sub
sarl
pusha
push
idiv
repnz
lcall
fwait
lea
push
jmp
cmp
pop
jnp
mov
sarl
pop
jae
dec
fisubl
mov
dec
and
loope
add
out
sahf
out
jbe
pop
inc
iret
mov
pop
xchg
jmp
xchg
pextrw
xchg
xlat
lcall
add
stos
mov
xchg
inc
push
or
outsb
in
fstp
push
pushf
cld
mov
je
addr16
popl
imul
shll
pop
test
mov
xchg
jge
adc
les
loope
inc
xor
fucom
in
cld
mov
in
jbe
jecxz
in
push
xchg
mov
push
outsb
pop
arpl
ljmp
mov
je
mov
push
frstor
jns
ret
into
and
fstpt
in
push
xor
jne
cmc
std
add
add
add
and
add
out
push
mov
in
stos
iret
sub
daa
xor
movsb
pop
add
test
scas
or
add
xchg
clc
imul
cmpsl
jg
xchg
pop
loope
jns
dec
push
gs
movl
lcall
movsl
pop
mov
daa
mov
jle
iret
outsl
cmc
adc
xor
xchg
pop
add
rcrb
arpl
add
mov
xor
lds
insb
test
cmc
addl
add
xchg
fcmovnb
ror
cli
sub
push
pop
push
fcomp
jne
cmpsl
mov
fadds
ja
sti
pop
fs
je
mov
cmp
loop
jo
xchg
push
insl
aam
push
mov
pop
loop
inc
xorb
int3
add
imul
sbb
test
ret
add
cmp
lahf
jg
test
insl
je
cmc
out
lock
jnp
leave
xor
std
jns
jne
ficompl
addr16
sbb
shll
xchg
mov
mov
xor
aas
sarb
push
pop
mov
mov
lahf
sub
into
pop
mov
push
add
pop
cwtl
pop
ret
adc
jne
sbb
pop
pop
xchg
mov
into
repnz
sbb
jecxz
jg
pop
enter
ret
push
sub
rol
add
push
lret
sbb
inc
dec
fs
xchg
sbb
cmpsb
jne
mov
jg
cmc
scas
shll
sub
cli
clc
ror
mov
cmp
xchg
fisubrl
or
loopne
test
hlt
insl
pop
in
cmp
mov
shlb
sbb
xchg
sahf
pushf
inc
in
fnsave
inc
xchg
test
dec
jo
test
dec
mov
je
jo
ficoms
and
mov
push
and
jno
cli
jbe
jo
jb
mov
dec
dec
arpl
xchg
imul
sbb
fbstp
add
scas
push
xor
out
addr16
and
lcall
push
cmc
sbb
std
push
sub
push
addr16
gs
fucom
divl
pop
sti
xchg
lods
fdivrl
stos
push
mov
dec
inc
iret
sarl
adc
bound
xchg
gs
add
xlat
pusha
cs
ret
out
fs
addr16
add
cltd
aam
aas
jl
std
xchg
mov
lods
negl
or
jl
clc
mov
jle
orl
movsb
xchg
and
lock
or
jecxz
mov
push
xchg
in
imul
pop
xchg
xchg
test
jl
cmpsl
mov
and
xor
sub
cmp
jp
fdivl
jg
or
push
stos
mov
fcoml
pop
lock
notl
jl,pn
xchg
mov
cmp
pop
je
insl
push
cli
jle
hlt
push
std
shl
mov
xchg
lret
xor
imul
mov
add
sbb
jb
mov
xor
outsl
mov
test
int
mov
into
andl
cwtl
jb
jle
xchg
outsb
xor
jg
test
lret
das
notb
or
pop
decb
jns
repz
jl
pop
loop
dec
je
jne
stos
jbe
or
cmc
stc
cmc
cld
int3
add
jb
dec
mov
mov
cs
xchg
sbb
call
addr16
xor
in
ds
inc
inc
cltd
int3
pop
aaa
push
inc
dec
cmp
pop
jne
int3
les
ljmp
sbb
mov
cmp
movzwl
jnp
test
inc
mov
ret
inc
xchg
mulb
mov
cmp
mov
addr16
test
negb
dec
sbb
ret
aas
jnp
jbe
mov
decb
movsb
mov
arpl
mov
push
in
es
dec
sub
pop
jo
cmp
lret
movsb
insl
inc
mulb
in
push
mov
in
in
pop
cmp
test
ret
in
dec
gs
sarl
xor
jle
into
mov
mov
shrl
test
out
xchg
xchg
dec
shll
cmc
jo
push
out
xchg
xlat
add
jns
jo
out
inc
aas
mov
shlb
lock
filds
das
movsb
cmp
ja
xchg
and
addr16
out
testl
lds
lds
iret
and
add
out
jns
fcomip
frstor
negb
pushw
dec
xlat
mov
fucomp
out
in
mov
mov
jg
pop
lods
xorl
jne
mov
out
add
outsb
je
xchg
out
movl
add
data16
dec
es
movsb
push
and
movq
out
out
and
pop
mov
popa
fs
out
and
in
fisubl
imul
push
inc
lds
mov
daa
test
les
cmpsl
out
jp
out
out
cmpsl
test
cmpsl
out
jp
out
out
cmpsl
lret
out
jbe
jo
subl
adc
or
cmp
and
in
mov
out
jo
in
ret
mov
js
lods
out
lret
loopne
push
jo
orl
cmp
lret
loopne
push
jo
subl
in
fs
cmp
or
dec
pop
dec
mov
pop
jae
mov
out
in
in
push
cmpsl
inc
jg
mov
xchg
add
add
inc
inc
fiaddl
cmpl
mov
aas
pop
into
mov
jo
inc
cwtl
or
in
je
aas
cmpsl
mov
scas
jnp
negb
mov
pushf
addr16
xchg
or
sbb
xlat
aad
and
fists
rol
xlat
and
mov
testb
popa
ja
mov
loope
stc
inc
lea
cmpsb
jno
sarl
std
popa
dec
into
daa
jb
inc
rep
aaa
daa
push
idivb
das
mov
pop
pop
adcb
imulb
repz
push
sar
sub
cmpsl
jae
lahf
jbe
clc
xchg
cmpsl
jno
jae
scas
add
data16
divl
cwtl
mov
mov
mov
mull
neg
mov
jns
ljmp
jecxz
out
and
and
out
incl
jae
mov
test
and
pop
fcomps
sbb
test
add
shlb
push
mov
pusha
popf
out
dec
add
xchg
inc
mov
push
push
mov
xlat
inc
jge
movsl
mov
xor
xlat
in
pop
mov
mov
jbe
les
into
mov
out
jno
mov
add
cmp
fcmovb
pop
popa
cmp
push
cmp
out
mov
mov
sarl
mov
pop
idivb
xchg
imul
inc
pop
repnz
pop
nop
sub
rcr
xchg
pminub
cmp
cmp
in
xchg
loop
mov
fnsave
aaa
lahf
pop
jnp
lret
mov
lock
jbe
into
mov
cmpsl
mov
cltd
cmp
iret
xchg
aaa
cmp
decl
mov
xchg
dec
arpl
push
test
das
cmpsb
negl
lret
andl
pop
pop
in
inc
idivb
incb
nop
jg
out
fidivl
nop
jg
addr16
neg
dec
into
xchg
and
je
inc
ss
cmp
mov
inc
and
push
dec
mov
sahf
mov
scas
fsubp
out
inc
push
repz
inc
inc
ja
je
adc
jo
and
dec
mov
xchg
jle
xor
mov
neg
ss
out
mov
sbb
ss
mov
push
mov
mov
sbb
sahf
mov
pushl
out
cmpsl
data16
mov
mov
jl
insb
negl
out
fildll
sbb
or
adc
adc
adc
adc
adc
adc
insl
add
mov
jmp
xchg
mov
dec
adc
mov
sub
in
mov
scas
cmpsl
xor
push
mov
mov
cmpsl
push
test
hlt
loop
adc
je
mul
scas
xchg
in
inc
mov
pop
lds
jg
fdivl
test
lea
filds
lret
loope
popf
out
icebp
xorl
orb
or
je
xlat
ljmp
jle
arpl
mov
scas
cs
ja
out
notb
fidivl
lahf
xchg
movsl
mov
loop
push
cmpsb
ja
and
push
inc
das
out
daa
xor
rorl
push
pop
xchg
aas
xchg
ja
addb
bound
test
incb
mov
aad
xchg
mov
xor
movsb
and
arpl
jbe
jns
dec
mov
jae
das
ret
xchg
dec
arpl
add
scas
sbb
test
add
adc
popa
stc
mov
xor
popf
inc
aaa
negl
lcall
push
dec
cmp
xor
mov
daa
mov
add
jne
xor
cmp
adc
outsb
movsl
add
sub
repnz
xchg
out
insl
ja
push
out
mov
mov
cmp
movmskps
jae
mov
mov
sar
inc
pop
daa
cmp
sti
xchg
inc
and
xlat
jg
mov
xchg
js
mulb
pop
push
out
sbb
std
xor
adc
test
imul
push
fbstp
pusha
ja
xchg
je
scas
pop
aaa
add
ret
mov
cli
inc
adc
repz
xchg
aas
gs
les
ffreep
jb
inc
xchg
into
std
jnp
cmc
jne
in
scas
mov
cmc
insl
mov
cld
xlat
aad
add
hlt
aas
in
fstpt
and
aam
lods
jbe
xchg
mov
dec
cli
push
repz
lret
out
nop
mov
test
movsb
jno
outsl
xor
add
movsl
add
push
xor
rcl
gs
xlat
add
movsb
loop
lcall
pop
orps
pushf
bound
loopne
jae
push
pop
mov
out
inc
adc
test
jb
jge
fistps
sahf
outsb
mov
xchg
fidivrs
mov
dec
mov
mov
inc
and
rcl
xchg
sbb
lods
push
mov
xlat
and
addr16
and
mov
aaa
in
push
out
sbb
cmpsl
push
xchg
data16
push
in
idivb
adc
inc
jae
notw
add
jb
es
xchg
fcompl
lods
test
jb
ja
mov
mov
xor
jne
ljmp
xchg
mov
jne
cli
out
pop
xchg
lds
dec
popl
fwait
inc
push
lret
lds
xchg
addb
cli
iret
iret
pop
test
push
adc
jle
mov
xlat
out
inc
cmp
pop
mov
inc
xchg
div
ja
inc
lcall
mov
in
repz
test
xchg
mov
inc
xchg
mov
out
inc
ret
jnp
push
lret
jge
inc
rclb
ret
adc
xor
pop
out
popa
loop
in
push
jg
ljmp
pop
daa
out
out
add
adc
add
cli
xor
jg
add
fs
ret
or
xchg
mov
int3
sti
sbb
xchg
push
jg
and
rorb
rcrl
pop
gs
mov
mov
xor
push
mov
out
mov
rolb
jno
out
out
daa
int
dec
rep
leave
inc
aas
rcll
rcrb
add
add
fcoms
and
aaa
push
pop
inc
divb
es
push
sbb
mov
pop
sub
divl
negl
popf
out
adc
add
mov
add
mov
or
iret
add
jg
mov
movl
testl
jg
xchg
mov
into
add
mov
push
inc
ret
idivb
push
xchg
lcall
cmp
mov
mov
push
push
mov
stc
pop
es
jg
adc
cwtl
cmp
test
sbb
mov
sarl
cmpl
je
adc
mov
sti
out
lahf
lds
out
mov
mov
lods
adc
pop
test
and
jnp
int
sbb
fisubl
xchg
cltd
addb
inc
xor
mov
out
push
js
stc
and
jg
push
out
mov
pop
inc
bound
jg
addb
push
and
insb
xchg
cwtl
les
jle
jg
jl
ljmp
pop
push
mov
fwait
xor
daa
xchg
dec
testb
test
out
stc
hlt
test
mov
inc
inc
ret
pusha
mov
mov
mov
sbb
aam
fnsave
mov
in
pop
mov
or
sarb
enter
insb
in
out
cld
aas
ja
enter
sbb
push
ja
cmpsb
adc
mull
sbb
jg
and
add
fmuls
addr16
cmp
ret
mov
sti
add
stc
xchg
jg
push
out
xchg
mov
sbb
xchg
inc
out
mov
push
jg
and
lock
and
movl
or
jg
or
orb
mov
in
out
aas
in
popf
sti
les
add
or
lods
cmpsl
inc
jbe
and
mov
or
xchg
sub
add
pop
inc
out
rcl
dec
adc
hlt
xchg
xchg
out
es
ret
out
jg
fldl
xor
sbb
mov
mov
pop
movb
cmc
cmpsl
ret
push
ret
shlb
out
negl
cmp
add
push
inc
inc
mov
and
orb
push
xor
inc
testb
es
jg,pn
xchg
pop
pop
aas
xor
cmp
test
cli
leave
jg
rep
sub
dec
fldl
inc
dec
jmp
mov
adc
and
xor
push
and
add
dec
pop
andb
xor
in
cmp
and
mov
pusha
jbe
mov
pushf
ret
das
scas
jg
testl
xchg
sub
jg
mov
pushf
in
mov
jg
xchg
add
push
popa
inc
movsl
sahf
add
jg
mull
pop
mov
scas
test
out
sbb
add
out
daa
int
mov
mull
adc
sbb
jg
neg
sbb
in
jg
out
lret
es
aas
cmp
jg
ljmp
jg
fiadds
ret
out
jg
adc
ror
movsl
outsb
mov
scas
movsb
movsl
sahf
mov
js
xlat
cmpsl
xchg
bound
add
jg
inc
dec
pusha
pop
cmpsl
pop
es
add
adc
xchg
and
pextrw
jbe
jg
imull
fcomi
rcll
inc
sarb
mov
pop
inc
ja
cltd
inc
add
daa
inc
adc
out
out
inc
das
sti
add
mov
pop
adcb
aaa
je
andl
aas
cmpsl
add
in
leave
push
test
jbe
jg
div
pop
out
mov
ja
shl
mov
inc
push
jbe
stos
jg
testl
loopne
ja
divl
testb
add
mov
repz
outsb
loop
subl
inc
jg
ja
nop
sar
ret
xchg
mov
jg
push
add
movsl
mov
out
outsl
push
adc
xchg
movsl
xorb
inc
notl
out
out
cs
xchg
repz
out
testl
jg
neg
aam
mov
cmpl
shrl
jnp
ljmp
in
cmpsl
add
or
in
jg
testl
mov
and
mov
pop
jg
test
push
inc
mov
push
jmp
and
add
mov
adc
cmpsb
out
divl
icebp
mul
ror
jg
jg
pop
ja
out
shl
test
jle
or
out
addl
jg
out
and
and
repz
out
out
lds
xorl
cmp
xlat
test
pusha
inc
inc
in
jg
out
int
xchg
jg
push
add
pop
addl
cli
test
movsl
and
fdivrs
inc
xor
xchg
push
in
out
pop
int
dec
dec
imul
iret
xchg
push
jno
sub
pop
jmp
push
push
jo
adc
ret
xlat
js
inc
in
mov
sub
gs
stc
inc
cmp
jg
cwtl
out
dec
jb
sti
push
shll
aam
add
test
aaa
mov
popa
inc
enter
cmp
adc
nop
mov
xchg
fsub
fs
loopne
shll
jle
mov
aaa
pop
ret
aam
js
or
orb
movsb
leave
aas
jg
adc
aas
mov
and
popa
fsts
mov
jg
xor
cld
inc
adc
mov
ss
test
jg
dec
sbbb
inc
and
add
andb
push
stos
test
leave
negb
stc
pop
or
addl
mov
inc
xchg
xchg
jb
hlt
cltd
push
subl
sti
fwait
xchg
jp
xchg
mov
bnd
movsl
mov
mov
sarl
test
jle
add
add
jg
rcll
flds
loope
loop
stc
mov
mov
jg
inc
ja
icebp
cmpsl
test
xchg
add
inc
or
test
xor
cmp
adc
push
lcall
jg
mov
imul
push
or
leave
jg
cmp
test
xor
out
test
dec
sti
dec
sbb
dec
inc
ret
rcrb
push
in
xchg
jmp
xchg
push
bound
jbe
mov
hlt
xchg
pop
in
mov
push
fnstsw
jp
xor
ret
mov
add
adc
test
rcll
iret
xor
pusha
mov
mov
push
dec
out
aam
add
dec
lret
mov
mov
dec
add
icebp
dec
push
pop
mov
ret
inc
rclb
add
loopne
cmpsl
inc
sub
movb
ret
xchg
fiaddl
orb
scas
jmp
aad
lahf
fnstsw
repnz
mov
pop
test
mov
xorl
xor
pop
pop
xor
popl
loope
push
repnz
push
aaa
pop
in
test
nop
repnz
shrl
push
jg
jg
cmp
xor
or
repnz
cmp
or
test
orb
jae
inc
dec
push
jbe
jg
div
pop
out
xchg
push
add
rolb
xchg
jp
jg
pop
add
inc
arpl
xlat
push
out
out
iret
int
imul
orl
cmp
test
stc
cld
jg
jnp
in
scas
mov
adc
cmpl
jg
imul
lret
divb
mov
xchg
out
daa
pop
enter
fwait
jmp
aad
hlt
and
inc
mov
cmpsb
divb
out
stos
inc
adc
inc
xchg
mov
mov
cmc
inc
mov
jg
ret
add
sub
fnstcw
lret
jmp
fs
jg
pusha
cmc
ret
inc
roll
jmp
sbb
pushl
cmp
inc
xchg
jecxz
shl
aad
add
addr16
sub
std
loope
xchg
jb
popa
repz
ret
sti
jg
add
lea
emms
add
jmp
add
inc
test
jg
idiv
xchg
add
inc
sbb
and
xchg
icebp
incl
adc
addr16
xor
jo
jg
sub
addl
std
out
les
test
jecxz
mov
dec
xlat
add
jg
inc
push
add
jg
pop
add
cmp
xorl
pop
jmp
add
addb
std
andb
test
jns
outsl
rorl
xchg
ret
arpl
xchg
int
pushf
rep
imul
movsb
stc
imul
subb
jg
imul
call
cmc
dec
jg
in
add
xchg
jg
aam
test
jg
fdiv
out
out
mull
adc
in
xlat
ret
push
xor
addl
stc
add
outsb
out
test
stc
xor
add
in
clc
or
jg
testb
lds
ret
sbb
mov
jg
movl
jg
inc
xor
add
jg
std
outsl
test
inc
inc
jg
lds
xchg
cwtl
leave
pop
jecxz
jmp
and
repz
mov
gs
lds
repnz
mov
insl
xchg
out
dec
inc
jne
add
xchg
jp
and
call
test
pop
hlt
cmpl
sbb
inc
jle
jg
xchg
std
andb
vmovhpd
inc
movsl
add
xor
xchg
add
add
shlb
mull
mov
in
jg
lds
and
and
out
mov
daa
cwtl
out
and
repz
testl
jg
push
shl
jbe
jg
notl
testb
push
cmpsl
or
jg
add
sbb
mov
inc
std
test
push
cmpsl
mov
pop
inc
test
inc
jnp
jg
cmp
pushf
outsl
movsl
jg
mov
ja
push
lahf
ret
out
jno
jo
testb
jmp
xchg
sub
movsb
es
dec
pop
inc
cs
daa
insb
andl
ss
bound
scas
pop
and
out
enter
jnp
mov
inc
out
repnz
dec
repz
add
test
mov
repz
out
out
inc
frstor
out
dec
lret
cmpsl
lds
ljmp
testl
int3
xchg
push
add
xchg
push
dec
push
jecxz
sbb
pop
std
lods
sub
cwtl
fists
mulb
in
out
shl
ja
xchg
in
inc
mov
lods
sub
pop
pop
mull
push
mov
movntq
out
xchg
pop
out
jnp
not
in
into
mov
mov
mov
fildll
mov
pop
addr16
xlat
test
sub
mov
and
sub
iret
add
mov
mov
lds
xor
es
jo
xor
out
fisttps
aas
test
jnp
testb
mov
xor
faddl
in
mov
sub
out
lds
add
xchg
aas
jne
cmp
ja
into
scas
out
jbe
ds
cmp
mov
xchg
les
pop
cmp
movsl
sub
mov
mull
xor
mov
xchg
dec
fists
cmp
mov
xor
js
jbe
notl
sbb
mov
pusha
mov
pop
sahf
mov
and
inc
iret
lahf
and
xlat
les
xor
push
jne
dec
mov
cmp
ficoml
dec
out
push
aam
out
ljmp
cmpl
daa
into
icebp
ljmp
dec
mov
xchg
imul
xrelease
push
fstp
jae
dec
xchg
repnz
dec
jg
xchg
inc
xchg
mov
jbe
fstpl
lods
lods
mov
popa
adc
leave
fidivrl
jo
divl
negl
lods
lods
push
sahf
cmp
aas
outsl
fcompl
addr16
not
lods
cmp
in
aaa
pop
ffree
daa
les
cmpsb
jne
lock
int
pop
xor
insl
push
mov
test
je
stc
add
sbb
sbb
and
repz
pusha
loope
jle
sbb
and
imul
jmp
das
pop
mov
add
call
add
das
aam
jg
mov
faddl
jo
mov
test
jo
adc
xor
mov
sub
fs
lcall
stc
and
sbb
outsb
pop
jg
jmp
repz
mov
shl
jmp
lret
mov
inc
incl
aad
inc
pop
test
add
fldenv
inc
daa
cmp
lcall
imul
fsubrl
inc
inc
mov
and
cli
xchg
push
xchg
xor
out
or
rcrb
int3
icebp
fistpll
cs
pop
stc
push
stc
dec
lods
jmp
jmp
repz
pop
insl
dec
mov
mov
inc
call
stos
xlat
mov
jmp
mov
sbb
stc
jp
dec
repz
mov
js
jno
hlt
xlat
insl
stos
pop
inc
mov
test
int3
lahf
fwait
cmpsl
mov
fldcw
inc
aas
inc
aas
mov
mov
pop
xor
xlat
adc
orb
mov
pop
add
ljmp
cmp
xor
rcl
insl
lret
ljmp
jb
mov
icebp
inc
and
movsl
fbld
dec
pushf
repz
fabs
add
cmc
divb
lds
sti
fs
sbb
mov
push
stos
into
js
mov
dec
mov
adc
mov
int
aaa
xchg
xor
sub
and
push
mov
pop
clc
jb
sarl
loope
add
add
add
add
add
inc
xlat
mov
rcrb
bound
pop
mov
in
aam
add
add
add
inc
shrb
test
in
dec
mov
jmp
mov
add
mov
mov
aas
divb
xchg
insl
inc
xchg
std
push
lret
xchg
fcoms
out
xchg
data16
inc
aas
xchg
mov
mov
mov
loope
cmpsb
mov
inc
stos
cmp
jbe
pop
xor
jmp
xlat
xor
push
xor
xchg
pop
test
push
mov
jge
xlat
inc
add
mov
adc
sarb
sub
out
add
ja
lcall
and
scas
push
jae
insb
cmpsb
fidivrl
sub
mov
cmpsl
inc
mov
push
outsb
jb
jb
ror
pop
add
pushf
scas
mov
fisttps
pushf
xlat
lock
xchg
cli
fcoms
add
mov
jmp
icebp
mov
jge
jne
xchg
xor
mov
push
rcrl
xor
int3
pop
cmc
shl
xlat
cmc
idivl
sub
aad
not
lods
mov
fsubrp
jb
mov
jmp
cli
div
mov
sbb
aam
cwtl
cltd
mov
mov
neg
sbb
ds
cmp
insb
and
add
lds
cmp
ja
fldt
hlt
iret
repz
ret
fld
mov
push
sbb
stos
xchg
xor
fnsave
in
jp
mov
inc
jmp
loopne
fmull
cmp
add
inc
aaa
mov
daa
or
adc
scas
add
mov
test
xor
cmp
pop
ficoms
xlat
mov
xlat
in
repz
pop
push
jbe
xor
mov
leave
gs
mov
xchg
or
sbbb
rcll
je
ret
push
lret
addr16
ljmp
xor
jo
adc
add
pop
roll
lcall
jae
je
add
out
add
fbld
mov
mov
pop
push
int3
aas
ret
xchg
movsb
jo
dec
pop
adc
mov
and
pop
pop
mov
js
or
scas
mov
loopne
sarb
lds
imul
xor
xor
lcall
ss
scas
jp
arpl
xchg
jb
push
incb
mov
pop
daa
popf
jbe
scas
testl
pop
fidivl
mov
jnp
out
push
sbb
pop
pop
scas
push
movsl
int
add
in
push
jmp
fdivp
cmc
cld
inc
and
inc
jne
push
lret
leave
jo
adc
test
pop
ljmp
jg
inc
jl
pop
lods
out
repnz
stos
ret
fistpll
outsb
mov
jns
xor
add
push
jb
inc
push
test
sbb
std
scas
sbb
imul
and
adc
mov
outsl
add
jne
neg
shrb
push
cmp
ja
repz
add
clc
shrb
in
push
bound
cmpsl
fstpl
call
cmp
sahf
out
rcll
mov
xchg
clc
in
adc
cmp
outsb
jbe
fucomp
sbb
add
inc
sarl
std
xor
test
pushf
jno
stc
sub
imul
out
add
loope
fcomi
xchg
lods
mov
clc
mov
mov
rcll
sti
dec
test
das
fsubrl
sbb
push
push
movsb
gs
fisttpl
les
and
adc
pop
data16
and
mov
add
dec
and
pop
repz
movsl
mov
popf
mov
insl
inc
inc
gs
adc
stos
repz
add
les
adc
and
and
movsl
fildl
push
nop
insl
bound
shll
push
hlt
out
mov
mov
mov
je
or
push
pop
xor
int3
mov
jl
xor
mov
cmp
push
jnp
jae
and
cld
mov
fnsave
in
lret
and
pop
xor
outsb
ret
pop
shll
repz
aam
sbb
mov
jbe
pop
or
lds
adc
cmp
rcrb
nop
mov
ljmp
push
mulb
xchg
mov
mov
insb
fildl
testl
inc
imul
dec
mov
mov
xor
or
test
mov
jb
adc
les
data16
pop
addb
addl
fbld
xchg
cld
jne
aam
test
pushf
mov
out
jecxz
repz
xchg
push
xchg
dec
mov
cmp
mov
repnz
cld
sahf
pusha
out
mov
mov
fdivrs
mov
add
adc
mov
cmp
roll
shlb
mov
pop
mov
adc
sub
outsb
pop
mov
sub
push
addr16
test
in
xchg
in
xchg
or
loop
pop
cmpsl
popa
mov
mov
loope
ffree
inc
test
jo
mov
dec
popf
movl
cmp
aam
pop
outsb
and
int3
inc
lahf
daa
rcrl
pop
cmp
xor
sbb
mov
inc
sbb
lock
adc
out
gs
lcall
mov
rorl
xor
adc
mov
mov
loope
adc
mov
aam
cmp
inc
mov
les
or
movsl
cmp
mov
mov
pop
cmp
inc
repnz
and
jecxz
clc
pop
out
inc
adc
sti
or
jae
lea
dec
and
mov
jae
xor
add
mov
stc
shlb
addl
push
leave
jae
sub
test
gs
jae
pop
fbstp
lret
cmpsb
out
mov
int3
jecxz
lods
and
clc
in
xchg
mov
test
sahf
pushl
sbb
pop
inc
pop
xor
orl
push
cs
or
and
jge
mov
cmpl
jae
movsl
xchg
adc
add
mov
mull
mov
xor
mull
sub
aad
mov
test
lds
xchg
lods
out
cmpsl
test
filds
arpl
test
adc
mov
jns
push
inc
and
fisubrl
aam
pop
mov
cmpsl
mov
subl
xchg
lea
xchg
xorl
dec
push
clc
xchg
roll
xor
fiaddl
xor
imul
mov
push
mov
lods
jno
fnstcw
push
rorl
push
cmp
leave
push
arpl
out
ljmp
inc
or
bound
sub
movsl
mul
mov
mov
es
xor
cmc
push
stc
xor
daa
test
movsl
mov
lahf
icebp
fsub
inc
aad
out
loopne
sbb
outsl
scas
mov
fildl
loope
stc
dec
shlb
inc
pop
hlt
adc
daa
jne
imull
adc
stos
test
icebp
dec
pop
ljmp
test
mov
mul
scas
pushl
push
xchg
fisubs
dec
inc
pop
leave
movl
pushl
outsb
xor
in
pop
fsts
fistl
notb
stos
daa
lock
push
repz
daa
inc
jno
push
shll
push
sti
popa
pop
das
movsl
test
cmc
xor
icebp
push
inc
cli
test
pop
xor
dec
clc
mull
mov
sub
inc
popa
sbb
cmpsb
in
scas
xchg
pop
inc
lea
stos
push
jmp
and
mov
mov
mov
popf
mov
clc
push
repnz
mov
ret
decl
into
xchg
lcall
cli
mov
lret
shl
xor
loopne
xor
mov
stos
inc
mov
dec
push
xchg
jg
outsl
dec
mov
mov
xchg
jnp
cmp
sub
aas
idiv
daa
mov
int
imul
pop
mull
sbb
adc
sbbl
push
out
lret
adc
out
mov
enter
aad
push
jns
mov
testl
ffreep
sbb
lcall
push
xor
rorb
xlat
aad
fsubs
out
push
push
inc
call
stos
push
pop
mov
rolb
and
in
mov
xorl
repnz
lock
rorb
test
xchg
jg
cmp
xchg
push
and
loop
fcmovu
mov
andps
and
jecxz
arpl
call
cmc
negl
enter
fld
sahf
div
fldl
test
negl
adc
clc
icebp
pop
int3
push
out
movsb
pop
fcmovnb
mov
mov
mov
or
out
adc
xor
rorb
mov
out
push
sub
push
cli
jmp
aas
push
mov
pop
sub
xlat
test
es
sbb
mov
xchg
inc
cltd
sti
aas
jno
mov
adc
push
mov
bound
xor
xlat
jecxz
into
adc
lods
mov
pop
rcrl
and
aam
sar
xchg
mov
mulb
cmc
stos
push
mov
movsl
mov
gs
cmc
mov
sbb
std
sub
xchg
sbb
fcmovnb
inc
jecxz
push
sub
je
and
aas
int3
pop
sbb
pop
jno
inc
push
mov
and
rorl
lcall
push
push
mov
push
sub
mov
jle
jbe
lcall
inc
fcompl
and
pop
repnz
mov
lcall
aas
pop
inc
xchg
mov
out
mov
cmc
pop
call
inc
call
aad
mov
aas
in
aad
push
test
fmul
fs
jae
xor
hlt
or
push
mov
jno
xor
out
inc
adc
mov
aam
dec
pop
mov
fidivl
lods
sti
dec
mov
sbbl
sar
pop
or
repnz
sahf
xchg
stc
je
sbb
pop
push
out
push
pop
pop
mov
and
add
sub
xor
xchg
icebp
rcrb
loopne
lahf
out
xchg
mov
sahf
orl
dec
mov
mov
sub
mov
jecxz
popf
les
sbb
pop
mov
jno
mov
adc
inc
shlb
mov
ss
lds
mov
jbe
decb
push
push
fidivrs
and
out
dec
xchg
add
inc
adc
adc
sub
rcl
xchg
sub
das
pop
push
addr16
mov
std
inc
loop
and
push
pop
xor
sub
shl
fnsave
out
repz
jecxz
mov
les
xchg
insl
mov
pushf
incb
jbe
mov
aam
jno
push
push
ja
mov
fdivl
adc
divb
push
pusha
in
sbb
push
arpl
jnp
or
sub
push
pop
fidivrs
jb
mov
sub
mov
mov
subb
xor
mov
ret
mov
xchg
lock
mov
mov
mov
idivb
adc
nop
fnstsw
aad
mov
mov
bound
mov
push
adcl
lahf
sbb
lea
imul
je
inc
jp
stc
or
lret
arpl
cmpl
add
xor
add
pop
mov
out
push
movsl
mov
mov
xchg
jl
imul
push
sub
jbe,pn
in
lods
adc
out
test
in
pop
adc
subb
imul
outsb
sahf
cmp
jmp
std
mov
mov
shll
mov
testb
cmc
fisubl
jecxz
lods
popl
adcl
outsl
cmp
lds
cmpsl
and
push
push
data16
pop
mov
mov
mov
jne
hlt
out
inc
xchg
jle
outsb
push
push
shll
adc
aad
repnz
pslld
pop
repnz
xor
addl
dec
xor
aad
movb
lea
adcl
ds
mov
mov
ja
mov
jo
xchg
push
sbb
out
xor
mov
daa
jae
push
inc
mov
xchg
loop
dec
pop
sbb
or
icebp
aad
mov
fiadds
jb
mov
in
sub
cltd
xchg
mov
cmpsl
loopew
nop
data16
es
mov
mov
arpl
mov
mov
arpl
daa
sbb
and
xor
adc
lods
dec
and
cmp
mov
roll
clc
aaa
inc
cmc
movsl
test
mov
loopne
out
movsl
aad
jae
adc
hlt
xor
outsb
and
clc
aam
jnp
jnp
cmp
bound
test
lds
adc
pop
ja
xchg
push
cmc
popa
lds
xchg
popa
sbb
loop
test
mov
imul
mov
mov
adc
mov
popa
inc
adc
xorl
or
jmp
cmc
popa
mov
sub
fmuls
in
xchg
xchg
shlb
es
icebp
pop
mov
add
jo
shll
dec
pop
div
aam
imull
push
mov
mov
adc
shll
out
pop
mov
or
jmp
push
push
js
mov
es
pop
xchg
or
int
daa
cmp
sub
inc
jo
xorl
xchg
insb
push
jnp
mov
popa
inc
mov
lock
addr16
lds
negl
addr16
dec
mov
cmp
icebp
outsl
lods
cmpsl
leave
nop
ljmp
lods
fstl
les
lds
xor
xchg
xor
aad
sbb
xchg
xor
mov
push
and
rclb
fimuls
rol
fwait
shll
sar
inc
mov
and
fwait
jle
mov
mov
add
mov
pop
imull
push
loop
ljmp
les
ljmp
jecxz
sbb
push
jg
cltd
testl
jmp
sarl
add
pop
mov
jg
pop
mov
ljmp
inc
jne
addl
or
jbe
mov
filds
mov
addl
or
out
out
addr16
cmp
inc
ret
inc
jnp
mulb
insb
loop
idivb
xchg
add
loope
out
popa
addr16
data16
mov
out
push
shll
incb
mov
jnp
jo
es
imul
push
fadds
xor
jo
push
mov
sahf
inc
pop
mov
xchg
and
testl
push
mov
scas
add
pop
sbb
loop
addl
lock
mov
aad
xor
push
sub
xchg
inc
mov
out
dec
in
test
mov
popa
shl
dec
adc
xor
out
test
add
movntq
and
icebp
push
fiaddl
out
cmp
add
pop
jne
fidivl
ficoml
add
add
or
sub
lret
jp
es
popa
push
inc
or
in
sub
mov
out
repz
fwait
pop
neg
mov
push
and
push
ljmp
xor
sbb
es
add
or
pop
pop
out
xchg
pop
mov
out
movsl
cmp
divl
cld
data16
add
out
repnz
cld
add
ds
test
mov
imulb
jne
pop
mov
jne
add
jmp
lods
in
ljmp
and
or
push
leave
mov
ret
and
mov
addl
push
out
push
mov
cmp
nop
jae
and
jmp
push
or
mov
mov
hlt
bnd
lcall
shll
and
push
shlb
add
push
sub
mov
xchg
std
shll
add
push
sbb
jno
jmp
pop
inc
mov
jne
or
outsl
out
mov
shll
inc
mov
out
jge
add
or
jp
test
jle
xchg
adc
pop
addr16
push
push
mov
mov
loop
inc
inc
jne
mov
or
in
fstpl
fldcw
jge
mov
and
imul
lock
adc
mov
repnz
je
add
out
test
test
out
lds
adc
insl
test
incb
test
std
mov
add
popf
xchg
cmp
add
push
rolb
insl
add
out
xlat
jnp
roll
movsl
insl
std
cs
int
out
inc
jnp
idivb
jg
les
mov
xchg
lds
cmpb
out
gs
in
pop
mov
call
fs
rcll
out
ret
loope
je
cmp
shlb
mov
mulb
insl
out
and
es
daa
movsb
xchg
int
mov
mov
pop
inc
cmp
daa
jne
mov
loopne
je
jbe,pt
loope
int
out
hlt
jnp
shl
divl
cmc
daa
loopne
enter
int
out
arpl
shll
je
outsl
daa
mov
int
out
bound
shll
fbld
push
xchg
in
add
inc
cmp
outsb
daa
push
xchg
insl
push
push
out
or
je
ds
daa
mov
sarl
shll
pop
je
ds
daa
adc
int
out
and
rcll
daa
xchg
xchg
int
xchg
and
cmp
jg
or
and
jl
int
out
icebp
loopne
je
ds
call
jnp
jo
ds
daa
jae
jnp
sarl
jno
mov
jb
leave
out
mov
cmp
pop
mov
pop
out
pop
jnp
shll
int
out
fistpll
rcr
mov
sbb
xor
sbb
push
xor
out
pushf
jnp
shll
lahf
je
ds
daa
xor
je
jmp
shrl
and
xchg
int
out
shr
add
pop
or
out
sub
cmp
cs
int
shrl
daa
stos
xchg
int
out
push
loopne
je
dec
rorl
and
xchg
int
out
xchg
jnp
ror
int
nop
push
int
out
adc
ds
daa
adc
loopne
je
mov
lea
ret
stc
adc
cli
jo
push
jnp
and
loopne
or
js
int
jo
push
jnp
and
mov
cmp
cmp
cmp
jo
push
jnp
and
mov
pop
or
pop
cmp
rcrl
cltd
and
out
sbb
sbb
rcrl
int
and
mov
ljmp
shrl
push
push
out
stos
cmp
int
jo
push
jnp
add
leave
cmp
xadd
adc
dec
jo
push
jnp
and
cmp
int
jo
push
jnp
and
mov
add
test
inc
add
outsl
insl
cmp
xchg
cmp
out
lds
out
out
div
out
and
idivb
push
stos
jp
add
xchg
add
xchg
cmc
aas
ret
inc
loope
xlat
mov
mov
add
out
inc
jle
jg
ret
lahf
jge
inc
stc
lret
pop
out
shlb
andl
out
sub
loope
idivb
dec
rcll
jo
jnp
test
clc
cmpsl
rolb
mov
out
lret
int
pop
inc
xchg
in
cs
pop
push
fwait
inc
inc
insl
outsl
mov
testl
cmp
push
lret
push
mov
add
push
scas
imul
sbb
inc
jnp
aad
in
inc
xchg
in
pop
or
pop
pop
inc
sbb
cmpsl
es
addr16
mov
int
mov
gs
test
mov
scas
rol
addr16
cmc
inc
loopne
movsb
sub
sahf
xchg
stos
adc
jae
clc
jge
lds
adc
gs
je
fcompl
int3
cs
xchg
mov
jge
push
test
mov
fisubl
mov
andl
mov
pop
test
or
xor
outsb
in
insl
or
scas
fldl
clc
test
push
jecxz
cmp
ret
fs
ja
in
add
inc
pop
sarl
hlt
shl
mov
mov
ja
xchg
lds
lods
movsl
mov
xchg
add
mov
outsl
jne
push
sbb
leave
xor
lret
pop
cli
inc
inc
lds
jne
sarl
pop
or
popf
in
pop
movsl
fstl
test
pop
jns
bound
insl
fstl
push
inc
and
and
dec
sbb
lahf
cmp
hlt
shl
and
sub
in
xor
mov
add
dec
mov
push
mov
rolb
mov
insl
test
int3
out
repnz
pop
mov
pop
jns
bound
aad
push
pushf
inc
push
ja
les
push
sysret
fldt
sti
nop
fsub
adc
and
sarb
nop
rcl
movb
shll
out
adc
test
lret
add
dec
mov
enter
cmpsb
inc
in
test
add
pop
aad
mov
data16
out
test
xor
add
lea
mov
mov
jge
not
fwait
add
filds
iret
xchg
jle
mov
sbb
imul
test
out
inc
mov
in
daa
notl
arpl
inc
shl
inc
or
mulb
out
lret
shlb
pop
fildll
fldt
call
add
cmp
fmull
lret
filds
mov
xor
and
sub
testl
lcall
cmpsb
jg
add
cwtl
cmpsl
xchg
scas
into
out
or
incl
cld
addr16
mov
push
das
push
fs
dec
jae
scas
test
cld
and
jecxz
nop
inc
push
inc
and
mov
lds
testb
inc
xchg
jp
movl
pusha
mov
rol
jnp
mulb
in
popa
mov
loope
inc
jnp
mov
testb
jecxz
and
test
in
add
in
inc
mov
fs
inc
pop
in
inc
mov
xlat
inc
stos
jno
and
cmpsl
rorl
clc
lock
mov
daa
scas
pop
insl
push
es
pop
jp
idivl
jg
ja
push
inc
xchg
insl
pop
xchg
std
jnp
mov
data16
inc
insl
cmp
dec
movsl
add
movsb
inc
negb
ja
cmp
xchg
bound
mov
mov
lds
cli
sbb
jbe
lret
and
int
ja
iret
add
sbb
loop
cld
add
incb
rorb
add
fisubl
and
push
adc
cmpsl
ret
stc
ljmp
sti
adc
push
daa
pop
fiaddl
ret
mov
je
test
push
fadds
sub
mov
test
cli
xor
es
jbe
imul
jle
ss
ret
in
mov
gs
into
es
pop
iret
pop
inc
es
pusha
xlat
xchg
das
loop
mov
test
ja
mov
testl
inc
divb
in
das
mov
jg
inc
pop
and
cmp
mov
and
daa
ljmp
test
iret
out
test
add
mov
and
lret
fcmovnbe
jl
lahf
adc
out
addr16
push
in
cmpsl
inc
aas
mov
nop
icebp
mov
faddl
inc
jmp
mov
pop
and
mov
mov
icebp
repnz
xor
dec
ss
inc
aad
lods
out
mov
sbbb
in
inc
pop
and
aas
popa
jg
ja
out
mulb
in
bound
pop
loop
loope
mov
pop
lds
in
ret
mov
jge
inc
in
test
aas
lds
in
test
dec
lds
jnp
mulb
in
inc
mov
pusha
mov
fadds
xchg
push
mov
sbb
xchg
mov
in
xchg
lods
jl
lcall
ret
mov
push
call
jbe
cs
mov
shl
adc
ret
std
inc
xor
or
fsub
mov
mov
idivl
jnp
notb
in
mov
adc
xchg
out
lds
cltd
divb
jo
movsb
mov
mov
dec
out
lds
divb
push
ja
negb
out
lds
jnp
not
in
xor
adc
adc
das
mov
mov
in
sbb
out
lds
in
incl
fwait
xlat
mov
jne
mov
inc
mov
mov
pop
cmp
adc
add
push
and
lds
push
cmpsl
stos
out
mov
cmpsl
jb
sub
pusha
scas
xchg
push
cmc
jecxz
idiv
cmp
in
push
mov
idivl
es
js
pop
jl
cmp
dec
and
movsl
inc
inc
push
out
xchg
dec
lds
lcall
gs
mov
dec
xorl
inc
addr16
lahf
sbb
test
jl
pop
test
les
xor
inc
inc
lahf
xchg
lods
adc
jns
mov
inc
out
push
out
xor
mov
testl
pop
addb
loopne
out
loope
movb
add
loopne
add
cld
push
cmp
idiv
shlb
pop
faddl
aad
xlat
mov
pop
out
out
push
jo
out
je
pop
in
mov
cmpl
jae
imul
and
ds
pop
pop
adc
cmp
data16
mov
inc
xchg
bound
outsb
jo
xchg
mov
xchg
or
and
adc
out
add
sti
jnp
inc
test
pop
or
arpl
jnp
inc
add
dec
push
cmpsl
xchg
xor
scas
cmp
and
scas
out
ja
add
incb
push
pop
and
aas
mov
das
xchg
xchg
cwtl
push
mov
xchg
add
adcb
test
scas
ret
sbb
aaa
xchg
lea
test
inc
jl
push
dec
pop
in
xchg
fistps
or
or
in
sti
ja
mov
repz
es
rorb
or
mov
add
int
imul
and
or
test
push
and
or
xchg
adc
sbb
test
adc
jge
cli
rclb
mov
sti
in
movb
call
iret
test
popa
push
xor
or
jnp
sar
xchg
add
call
dec
cmpsl
daa
pop
sti
roll
push
mov
or
lret
cs
inc
jb
cwtl
insl
xor
or
stos
adc
add
rolb
fisubl
sbb
sbb
int3
mov
inc
push
roll
xchg
movsl
mov
mov
jne
loope
pop
loop
cwtd
mov
push
jl
push
mov
ljmp
in
or
ja
pop
add
imul
js
or
das
pop
mov
push
or
push
mov
dec
push
shrl
cmc
xor
pop
arpl
push
enter
xchg
dec
mov
movsl
sub
adc
sarb
cs
pmulhw
add
int3
xor
iret
fstpl
add
out
shl
and
cs
jle
stos
xor
or
stc
adc
insl
and
sub
fwait
xlat
out
adc
pop
sub
adc
daa
fidivrl
or
mov
sbb
or
loopne
in
aad
sbb
pop
push
in
sub
mov
jmp
jnp
push
inc
xor
aas
or
fsubrp
jle
mov
jns
repz
inc
add
or
and
inc
das
jp
shr
shr
add
jecxz
cmc
or
push
cmp
xchg
ss
outsb
jl
jno
add
nop
mov
ror
adc
dec
xor
or
pop
jbe
les
or
jne
in
dec
xchg
sahf
push
lea
xchg
xchg
lods
add
adc
icebp
sbb
rcl
adc
or
xor
test
push
inc
xchg
lods
fdiv
sbb
mov
jg
adc
or
rolb
mov
mov
mov
mov
push
sti
pop
add
int
add
rcr
push
lahf
dec
lds
movsl
fistpll
inc
mov
rorl
lods
fildll
sub
add
lea
addr16
jb
test
rcr
push
mov
fists
jne
adc
inc
sub
insl
fildll
and
jge
gs
jmp
dec
aam
cmpsb
inc
jbe
mov
pop
rclb
xor
popa
adc
aad
inc
and
inc
adc
dec
cmpsb
mov
mov
or
add
jecxz
add
push
xchg
in
sti
sahf
repz
push
pop
cmp
xchg
jmp
daa
mov
cmpsb
fldcw
jl
jge
fcmovb
xchg
or
ja
add
mov
gs
mov
aas
xchg
mov
push
mov
mov
imul
test
test
rcll
sub
aaa
sbb
and
push
daa
fcmovb
daa
cld
ja
jae
pop
std
dec
insl
jp
xchg
in
in
sub
pop
aam
aad
cmpsb
daa
dec
ja
jnp
test
mov
add
add
movsb
scas
movsl
push
add
jmp
mov
mov
and
mov
vpavgw
mov
aaa
xchg
xchg
cmpsb
inc
scas
inc
adc
mov
pop
mov
roll
cmc
pop
out
xchg
add
jle
mov
jb
jbe
cmpsb
cmc
es
xchg
or
data16
clc
mov
sbb
mov
ljmp
mov
shr
les
mov
sub
dec
mov
jnp
xor
mov
std
mov
mov
in
mov
mov
add
cli
pop
test
cvttps2pi
fisubrl
dec
jle
lds
mov
lods
inc
mov
lods
data16
popf
test
jl
arpl
pop
mov
or
outsb
push
jg
jne
jae
ret
or
inc
into
imul
add
xchg
lret
xchg
mov
ret
mov
roll
out
sub
mov
push
dec
mov
scas
add
inc
jg
testl
out
movb
inc
ja
out
lds
xchg
test
xchg
mull
jle
lock
or
xchg
pop
out
pop
push
scas
add
inc
lods
xchg
inc
outsb
test
jbe
ret
jg
out
lds
imulb
fs
sub
push
jnp
inc
testb
mov
add
inc
ret
ja
jg
imulb
ret
add
inc
sbb
mov
fists
pop
out
leave
inc
mov
js
lods
out
movsb
test
out
les
pop
xor
sub
pop
jmp
jmp
in
shl
es
in
inc
ja
testb
ret
incl
div
fldl
add
fistpl
test
pop
jg
ja
out
lds
inc
divb
subl
iret
jg
testb
xchg
pop
lds
outsl
inc
jle
mov
cmp
ret
addl
aam
jle
out
mov
jp
addb
call
popw
mov
cmp
pop
test
addl
lret
loopne
push
incb
adcl
xchg
xchg
jae
loopne
push
incb
subl
cmp
push
insl
addl
sbb
mov
ret
xchg
addl
test
loopne
push
incb
adc
add
jae
loopne
push
incb
xchg
xchg
incb
cmp
sti
incl
push
in
xorl
cmpsl
movsl
movsl
dec
loopne
aas
add
push
cmp
jg
call
lock
xchg
es
mov
iret
jl
jg
call
ret
pop
mul
push
pop
pop
mov
mov
jp
and
pop
jg
xor
jg
sbb
jg
add
loope
inc
test
int3
inc
clc
xchg
pop
mov
clc
arpl
mov
pushf
out
rclb
fildl
push
je
in
xlat
jecxz
cmp
cmpsl
xchg
movsb
mov
subb
cmpsb
pop
ret
push
and
fiaddl
xor
and
in
in
movl
xchg
xchg
daa
mov
pop
in
lock
stos
mov
mov
pop
cmp
jo
out
es
xchg
loope
push
ret
inc
mov
les
xchg
mov
xchg
inc
data16
arpl
ret
and
out
jp
push
ljmp
ja
pop
in
xchg
pop
and
in
push
in
imull
fstp
inc
lahf
mov
clc
pop
cs
mov
les
pop
out
jg
insl
pop
std
cmp
pop
int
cmpsl
popf
xchg
arpl
cmp
nop
cld
add
es
in
pop
idiv
aam
mov
lahf
mov
outsb
std
out
aam
push
xchg
sbb
insl
xchg
test
jne
sbb
pushf
in
cmpsl
xchg
pop
out
scas
movsl
fisttpll
test
jo
dec
lods
cmc
cli
test
adc
mov
popf
mov
mov
add
pop
adc
pop
and
ss
jl
popa
jne
or
xor
dec
add
movsl
std
insb
int
lret
pop
data16
enter
je
cld
int3
pushf
mov
lret
cltd
push
popa
ds
outsb
push
push
and
inc
mov
insb
push
rol
and
scas
testb
dec
and
je
je
daa
ljmp
push
insb
popf
insl
insl
xchg
in
pushf
sub
les
cmp
or
imul
pop
xchg
pop
popf
add
jecxz
lcall
loopne
lock
xchg
shrl
stc
rep
mov
jnp
aam
push
in
or
add
aas
xchg
mov
mov
cmp
sbb
inc
xchg
xchg
sub
bound
and
loope
cli
incb
pop
push
das
xchg
and
and
or
clc
adc
out
ja
out
test
decl
push
iret
mov
push
outsl
xlat
repz
xchg
pop
in
xor
hlt
call
imul
and
iret
and
imulb
outsb
sbb
pushf
jecxz
jge
mov
out
add
int3
and
or
adc
push
add
daa
ret
mov
jbe
out
mov
and
and
jl
ja
int3
jnp
pop
add
jg
aas
add
psadbw
out
and
stos
jbe
pop
mov
xchg
and
mov
jmp
jle
cmp
xlat
adc
xchg
mul
incb
pop
out
decl
jmp
sarl
in
cli
out
movl
inc
outsb
push
inc
aas
test
and
mov
jae
les
test
iret
cs
out
pop
jecxz
pop
mov
aam
jg
jbe
in
jno
sti
mov
fisttpl
ret
jnp
andl
movsl
cs
bound
iret
lock
call
imul
inc
sahf
idivl
jmp
sub
movsl
into
out
jbe
das
dec
cmp
pop
add
sbb
jne
std
imull
outsl
add
std
xchg
and
std
not
push
incl
mov
jne
lahf
mov
dec
dec
xor
outsb
dec
mov
jbe
pushw
ret
lret
lret
repnz
mov
xor
lret
xorl
mov
les
popl
adc
jg
bound
add
push
jae
movsb
add
adc
mov
inc
shr
mov
mov
fcmovnu
inc
sub
incl
flds
push
mov
out
inc
push
clc
or
xchg
int
movsl
push
add
xchg
mov
in
insb
sbb
push
mov
xchg
mov
mov
movl
fbld
push
inc
dec
stos
xchg
lret
add
xorb
addr16
dec
cld
jg
xchg
xchg
sub
pop
fwait
xor
mov
push
push
sbb
mov
les
cli
mov
or
loopne
jmp
mov
inc
and
xchg
and
cltd
mov
scas
adc
aas
or
adc
movsl
fs
int
test
outsl
sub
pop
sbb
outsb
jbe
lret
loope
mov
add
sti
addr16
adc
pop
mov
fdivrs
sbb
test
addr16
add
mov
shll
in
addr16
in
xorb
pop
pop
mov
pop
push
insl
lds
bnd
sub
fistl
dec
scas
sub
scas
les
enter
daa
inc
lret
xchg
dec
mov
dec
sub
xor
and
inc
sbb
ret
sub
inc
sub
aaa
inc
dec
xor
adc
jbe
das
cmpsl
or
sub
dec
inc
pusha
push
xchg
and
cmpsl
cmp
inc
loopne
and
into
subb
inc
cwtl
lods
inc
bound
jecxz
xchg
inc
loop
push
test
pop
orb
fwait
cmpsl
out
ret
inc
sbb
cmpsl
fiaddl
pavgw
inc
aad
fsubl
movb
ffreep
nop
jae
jbe
mov
in
iret
lods
ret
test
das
lods
lods
lds
fs
jle
add
iret
cmpsb
sub
out
inc
adc
dec
mov
inc
and
dec
out
xchg
rorb
xchg
lock
movl
ret
shl
das
inc
imul
xchg
cli
popl
adc
rol
jno
orb
xor
andb
lods
lds
pop
bound
inc
push
lds
add
rol
sti
divb
pop
pop
xchg
pop
pop
jb
fnsave
jnp
lds
and
dec
stos
lcall
add
test
cli
pop
or
pop
iret
jl
out
mov
mov
loop
aas
dec
xchg
inc
cwtl
stos
insl
jns
dec
out
dec
dec
iret
adc
mov
aaa
dec
inc
xchg
imul
sub
iret
mov
dec
fscale
xor
out
test
into
out
xor
iret
dec
dec
add
fcoml
and
int3
add
inc
xchg
popa
mov
sub
push
insb
xchg
dec
and
das
out
adc
fcmove
psrlq
xchg
mulb
jge
xchg
xchg
iret
out
add
add
popf
test
es
loopne
adc
xchg
sti
mov
add
pusha
inc
pop
cmpb
adc
add
test
dec
and
aad
ds
jge
fistps
inc
pop
movsb
test
movsb
bound
pop
movsb
fcoml
fwait
andl
loop
jb
arpl
lds
jae
inc
mov
sbb
xchg
bound
adc
in
les
or
test
jl
int3
imul
sahf
push
inc
jne
loopne
test
and
cli
popf
add
push
scas
fmul
xchg
movl
xchg
pop
daa
fcomps
xor
mov
arpl
stos
sbb
mov
outsb
addr16
jg
sbbb
push
movsl
addr16
lea
mov
addl
jmp
cmp
cmp
sahf
loopne
and
out
andb
xchg
adc
popa
push
mov
fstpl
adc
cwtl
cmp
inc
and
pop
inc
repnz
popl
in
rcr
shlb
add
jp
dec
lcall
shrb
lret
jg
mov
sahf
cs
test
scas
adc
jnp
adc
inc
dec
std
jo
jecxz
sbb
dec
es
cmp
mov
mov
mov
scas
pop
sub
faddl
subb
ds
aas
add
mov
sar
jge
mov
and
pop
stc
adc
cli
add
sub
mov
lds
cld
imul
inc
add
xchg
inc
push
or
shl
inc
insb
inc
nop
adc
mov
push
xchg
xchg
rol
int
and
ret
repz
push
lds
xor
xlat
scas
mov
out
out
mov
fisttpll
or
sarl
sbb
inc
add
adc
fistpll
outsl
jg
dec
xor
rorl
xor
xor
outsl
inc
fnsave
xchg
les
out
dec
pop
inc
sub
dec
bound
cmp
sbb
sub
mov
insl
lock
dec
or
negb
shrb
in
push
push
std
addr16
dec
aad
iret
mov
les
push
push
out
inc
sti
aam
mov
cmc
mov
stos
xchg
int3
cmp
pop
xchg
inc
jns
std
xchg
loope
add
mov
in
xor
xchg
test
xchg
das
xchg
popf
add
iret
rcll
clc
in
add
xchg
movsl
cmp
pusha
jns
pop
xor
out
mov
push
pop
mov
jecxz
rcl
sub
pop
test
xor
insl
and
xchg
cmpl
pop
xor
or
mov
sub
add
movb
dec
call
add
dec
lock
fwait
inc
testb
incb
daa
push
lods
pop
xchg
inc
jns
jbe
ljmp
cli
jle
lds
out
into
sbb
sbb
sbb
xlat
push
cmp
int3
adc
mov
jnp
cmpsb
push
mov
sub
push
cmp
movsb
les
jns
scas
mov
xchg
lds
mov
jle
cmpsb
pop
sbbb
popf
xchg
sbb
add
jle
inc
jo
xchg
push
inc
in
or
xchg
int
cmc
add
testl
inc
loop
push
dec
inc
inc
jnp
lds
xchg
xchg
iret
add
inc
mov
push
or
pop
or
ja
mov
int
fcomps
lds
orl
push
fwait
inc
jbe
or
cmp
ret
push
jbe
jno
movsb
mov
je
inc
movsb
xchg
mov
sbb
sub
imul
or
or
bound
movsl
aas
int3
dec
mov
imul
enter
cwtl
les
je
data16
mov
sar
cmp
mov
sub
ds
sbbl
xchg
pop
xor
cmc
dec
pop
adc
test
test
test
or
aad
xchg
cmp
addr16
jmp
jmp
repz
push
inc
daa
cld
daa
int3
push
fadd
ret
out
xchg
cmp
popa
test
test
mov
in
jle
mov
lret
gs
jnp
mul
iret
xchg
mov
in
mov
in
pop
inc
mov
arpl
cmc
xor
dec
ret
arpl
mov
inc
add
mov
ja
je
aad
dec
sub
xlat
add
incb
pop
les
daa
ja
aas
fstpl
in
mov
jne
insl
sub
rclb
test
jb
mov
loopne
mulb
mov
push
daa
addr16
movsl
ret
loop
sti
shrb
push
in
subl
adc
jne
ss
in
sub
jbe
mov
xchg
data16
movsl
ss
faddl
inc
in
mov
je
add
cmpsl
rcrl
push
fcomip
mov
cmpsb
in
cmp
fiaddl
add
imul
and
push
or
mov
stos
sub
arpl
jbe
rorb
jbe
leave
sti
push
jb
mov
mov
daa
mov
mov
fildll
pusha
sarl
shrb
daa
aas
fbstp
pop
jl
daa
mov
idiv
movb
sahf
out
dec
addr16
and
jb
out
inc
ljmp
mov
xchg
fwait
arpl
test
add
outsl
add
clc
push
inc
mov
xor
test
jg
daa
iret
shll
cmpsb
loope
les
in
cmp
mov
out
repz
mov
or
aas
lea
idiv
sbb
sub
insl
cmp
movsl
cmpsb
not
push
insl
ret
pushf
jge
daa
test
std
and
xlat
aas
adc
addr16
imul
xor
rcll
sti
inc
dec
stos
in
inc
add
pop
inc
aaa
movsl
add
or
xchg
jl
stc
cmpl
add
daa
test
pop
mov
xor
mov
inc
loop
into
cmpsb
and
arpl
popa
or
xor
inc
and
and
lret
and
nop
test
andl
cmpsl
jb
test
jge
and
addl
ljmp
fcmovb
mov
dec
fildll
sarb
cmpsb
les
jnp
clc
lret
out
insl
hlt
test
pop
cmp
push
xchg
inc
gs
and
jnp
les
cmpsb
pusha
mov
xor
push
fisubl
add
lods
xlat
pop
push
ds
mov
out
int3
jecxz
xlat
es
std
or
xchg
mov
push
movsl
inc
mov
arpl
mov
sti
movsb
cmp
daa
ficoms
out
loopne
outsl
in
in
jle
pop
mov
add
mov
test
popf
lea
and
sbb
ret
jne
and
data16
lea
data16
popa
popf
pushw
pop
filds
out
pop
insb
repz
test
fsubl
mov
inc
jbe
adc
mov
in
shrl
sub
add
sbb
jl
cmpsl
mov
repz
lods
pop
push
lods
fcmovne
aam
int3
jbe
addr16
in
push
fcomi
mov
ret
ljmp
inc
and
loop
inc
adc
sub
push
or
repz
aas
jne
insl
and
out
mov
xor
jecxz
popa
mov
sub
adc
xlat
ja
popa
lods
cmpsb
inc
pop
mov
into
lds
in
rcl
add
mov
arpl
mov
jmp
push
ret
inc
arpl
xchg
inc
stc
int
push
test
add
cmpsb
gs
test
in
pop
popf
mov
rcr
xchg
test
andl
lds
orl
out
jne
inc
sub
loopne
movsb
repz
icebp
xorl
test
xchg
gs
jmp
repz
out
mov
imul
addl
imul
mov
test
sbbl
rcll
and
imul
arpl
sbbl
loop
imul
in
mov
inc
sub
mov
mov
mov
lods
add
pop
negl
pushf
test
add
lret
push
xor
dec
int3
push
sbb
xchg
rol
insl
cmp
decb
fnstcw
cmpsl
inc
imul
test
fdivrl
rolb
jne
jnp
cmp
lods
aaa
inc
fnstsw
iret
xchg
xor
sbb
aad
fisttpl
mov
ja
mov
pushf
add
lods
mov
and
out
lcall
outsl
cmp
popa
mov
cmp
mov
scas
addb
ljmp
and
popf
andb
rorl
or
hlt
dec
push
ss
bound
test
hlt
jecxz
push
pusha
fcoml
into
push
shlb
fisubl
xor
cmc
add
pushf
out
lods
dec
ret
inc
cmpsl
incl
dec
stos
lahf
xor
test
inc
imul
pop
rolb
lods
inc
in
jno
cmpsb
pop
scas
xchg
mov
mov
test
je
ror
sub
mov
bound
xchg
jae
inc
adc
inc
daa
add
sti
jb
sub
insl
dec
out
push
push
pusha
pop
push
loopne
daa
dec
jg
mov
mov
stc
aad
inc
sbb
sub
loop
pop
inc
adc
jbe
in
int3
jae
add
test
inc
add
addr16
xchg
mov
pop
dec
jmp
cltd
mov
push
movsl
pop
loope
push
dec
pop
push
scas
inc
aad
jecxz
xchg
adc
lds
in
add
jns
adc
je
in
sub
filds
xchg
sahf
mull
arpl
andl
arpl
lods
add
inc
test
movsb
roll
nop
push
je
jns
out
es
fidivs
sub
add
popf
mov
jge
movsl
repnz
subl
xorb
stc
xchg
mov
and
or
jl
shlb
cmpsl
jo
daa
loopne
jbe
pop
pop
test
xchg
ss
xorl
mov
bound
mov
lds
mov
fsubl
iret
les
movsb
out
mov
sbb
jecxz
outsl
lock
push
in
adcl
data16
inc
mov
dec
or
or
jge
pop
clc
lea
pop
stos
mov
add
sub
adc
inc
mov
in
pop
repz
les
lahf
fwait
adcl
cmpsb
std
cmpsl
fstpt
xor
push
inc
add
arpl
fmuls
ret
sbb
cmpl
vpcmpeqd
in
les
fidivrs
xchg
ret
ds
jne
pop
shrb
add
divl
stos
lret
gs
into
mov
inc
outsb
xchg
gs
add
in
xchg
daa
es
mov
arpl
xchg
pop
scas
xor
cwtl
divb
and
pop
inc
xor
cli
movsb
xchg
rorb
inc
mov
inc
filds
mov
mov
add
push
push
adc
cwtl
and
es
xor
xlat
add
test
cmp
mov
xchg
inc
jecxz
mov
popf
add
push
hlt
bound
fld
sbb
icebp
add
inc
dec
jbe
xchg
jae
repz
mov
aaa
loop
cmc
push
jg
adc
xchg
jnp
insb
jb
mulb
mov
and
push
mov
add
mov
ss
or
and
cmp
cmpsb
int3
loop
lods
or
xchg
pop
fdivrl
out
adc
add
jne
xor
daa
pop
out
aad
std
xchg
lds
fsubl
jbe
cmpsl
call
push
pop
pop
pop
cmp
xchg
cmp
add
sub
pop
jae
mov
sub
xchg
arpl
jl
push
mov
shrl
xchg
fdivrs
bswap
add
test
hlt
xor
fldenv
test
call
outsl
test
scas
and
and
inc
les
arpl
inc
cmp
sar
arpl
adc
or
mov
mul
daa
pop
ret
xchg
inc
out
ja
stc
push
inc
jl
adc
ret
jbe
xchg
cmpsb
dec
repnz
cmp
in
sub
jmp
sub
push
push
jge
push
xchg
xor
xchg
jge
add
rol
icebp
loopne
insl
sub
inc
nop
push
gs
inc
and
xchg
fdivr
inc
jns
subps
cmpsl
mov
inc
xlat
xorl
int
fsubrs
sarl
and
cmp
sbb
les
rol
ja
shl
add
fld
adcl
push
cmpsb
add
jbe
xor
dec
pop
repnz
jge
pop
cld
popa
jle
fbld
push
cmc
pop
icebp
cmc
inc
faddl
arpl
mov
push
aam
std
bound
addl
mov
fildll
gs
mov
aad
jne
inc
inc
movsl
inc
jne
inc
rcrl
xor
addr16
inc
xlat
inc
push
insl
data16
jno
sbb
jg
adc
ret
cld
loope
xchg
xor
add
insb
jge
gs
push
aam
loop
aam
pop
lods
jne
cmpsl
mov
fsts
jnp
xchg
fs
lret
adc
fmuls
test
icebp
dec
loop
mov
andl
aam
push
mov
mov
pop
popl
jge
mov
std
rcll
pop
notb
lahf
pop
shl
mov
pusha
add
fwait
leave
mov
movsl
mov
xor
inc
repnz
mov
and
cmpsl
movsb
imul
jae
ss
xchg
jge
sub
stos
mov
lds
out
je
xor
jle
cld
mov
notb
in
xchg
mov
les
idiv
stos
and
sub
cmp
mov
xor
scas
addr16
fsubrs
fsubrp
pop
ret
dec
bound
ljmp
out
roll
out
shll
or
xchg
pop
testb
sbb
rolb
jle
add
xchg
lahf
frstor
cmp
or
movsb
push
adc
lods
icebp
rorb
out
insl
js
fidivrs
xchg
aam
loopne
and
out
stc
inc
cmpl
ja
repz
cmp
insb
ficomps
mov
dec
jle
xor
out
mov
in
loope
mov
test
inc
add
add
cmpsb
data16
and
stc
pop
scas
out
mov
jne
cmpsb
mov
cmpsb
xor
arpl
xchg
out
shll
inc
in
jge
xchg
cmp
push
push
out
fcomi
adcl
filds
testl
and
or
pop
in
lods
xchg
add
inc
xchg
mov
pop
int3
inc
addr16
in
rclb
lret
or
xlat
mov
in
dec
push
xchg
pushf
rcl
mov
in
movsl
arpl
movsb
xchg
sub
mul
push
aam
es
mov
or
xor
lock
mov
dec
fidivrs
adc
ret
pop
jo
push
mull
add
add
jbe
loopne
shlb
outsb
lods
ss
xor
jge
and
out
fucomp
sbb
jmp
lcall
ds
jae
push
cs
xchg
cmpsb
inc
dec
xchg
sub
nop
xchg
shr
out
add
ljmp
push
jmp
or
flds
fs
mov
pop
lret
xchg
jle
into
dec
std
mov
push
mov
push
add
mov
cmpsl
data16
mov
movsb
adc
iret
pop
int3
into
mov
inc
cld
push
push
fstpt
xchg
cltd
in
pop
adc
add
inc
je
daa
push
ds
sbb
into
and
cmp
fisubrs
inc
mov
je
fs
push
test
and
outsl
push
cmpsb
into
stos
in
testb
adc
adc
add
jl
stos
ljmp
in
add
mov
fs
mov
xor
pop
imul
push
add
push
jne
xchg
sarb
mov
sub
fcoms
adc
out
aas
inc
aam
mov
dec
mov
xlat
ss
xchg
jne
sbb
in
into
jbe,pn
sbb
call
es
fmuls
fsubrl
jmp
out
push
scas
imul
push
jmp
loope
adc
sbb
xchg
addr16
aaa
ss
dec
es
xor
loop
dec
push
test
push
adc
mov
repnz
pusha
inc
inc
test
dec
jle,pt
ss
cs
dec
push
sbb
leave
push
xor
push
xchg
mov
lea
mov
mov
loope
outsb
jmp
ljmp
dec
call
stc
push
out
pavgb
sarb
cs
es
loopne
adcb
xchg
ret
jmp
loop
mov
add
inc
xchg
loopne
addl
idivl
sbb
sub
cmp
xor
and
push
cs
mov
shrb
ljmp
sub
jp
mov
les
xor
sbb
ret
sub
xchg
xchg
mov
imul
mov
loopne
xor
inc
and
scas
outsb
push
sbb
jmp
mov
int
int3
adc
inc
pop
or
insl
int
int3
mov
sar
push
in
test
inc
stos
dec
popf
rorb
cs
inc
adc
mov
cltd
in
insb
ds
ljmp
jbe
fnstsw
hlt
clc
les
mov
inc
je,pn
or
mov
je
pushf
push
sbb
lret
xor
daa
lcall
push
sbb
lods
imul
push
test
jbe
lea
into
imul
out
cmp
loop
mov
push
jle
bound
std
outsb
dec
loopne
shlb
mov
hlt
ss
cs
int
loop
adc
adc
mov
cld
pushf
dec
mov
cmp
fistpll
movb
xor
jge
jp
mov
lahf
ds
or
stos
in
insl
push
popa
sbb
and
js
cmp
test
ret
call
jle
out
mov
pusha
idivl
jbe
les
fs
xchg
mov
push
xchg
mov
out
push
ss
dec
push
jmp
xchg
loopne
sarb
push
ror
dec
fnsave
jecxz
andl
xchg
incl
xchg
test
xchg
popf
into
jl
fisubl
adc
lret
inc
es
loopne
adc
addr16
mov
sub
dec
pusha
bnd
adcl
fs
push
adc
sbb
and
adc
adc
daa
mov
pop
jae
lea
fwait
mov
mov
roll
jge
and
pslld
add
popa
or
lret
cmpsl
jle
into
push
int
int3
aam
fcmovne
inc
loope
imul
xorb
loopne,pt
rorb
imul
cmp
outsb
je
mov
push
imul
push
sub
xor
cwtl
push
inc
aas
pop
test
cmp
mov
cmp
pop
xrelease
mov
inc
call
ds
xchg
mov
inc
xor
and
adc
adc
adc
mov
adc
loopne
push
dec
pop
imul
andl
xchg
mov
shll
ds
sbb
pop
cld
adc
cmc
out
push
adc
lret
and
int
int3
mov
mov
cli
clc
adc
loope
loopne
shr
test
sub
fadds
xchg
push
hlt
push
pop
xchg
sarl
sarb
and
sbb
leave
dec
xor
mov
mov
adc
jbe
pop
fs
mov
sti
and
adc
popf
loope
push
pop
xchg
outsb
hlt
xchg
test
mov
data16
gs
fsubrs
mov
stc
ret
or
test
outsl
push
sbb
ss
jnp
repnz
leave
inc
or
or
mov
int
int3
xor
add
mov
flds
movsb
jmp
leave
push
push
cs
jnp
les
bound
cmc
es
sbb
inc
popa
xor
and
das
lahf
push
mov
mov
push
mov
push
js
inc
notl
je
fs
xor
and
adc
daa
testl
mov
and
pop
sbb
jmp
mov
sbb
aas
jle
mov
xchg
add
mov
cmpb
cmp
cmp
iret
jbe
xchg
xchg
cmpsb
scas
out
push
lds
adc
push
repz
inc
push
or
mov
sbb
into
xchg
mov
mov
mov
mov
lods
imul
pop
cmpl
shlb
push
inc
dec
jmp
lock
add
jns
in
jecxz
jg
outsl
adc
out
adc
rolb
cmc
dec
xchg
loopne
rorb
xchg
outsb
pop
cld
xor
inc
iret
and
pop
push
iret
add
jle
jbe
mov
sbb
or
sahf
ds
mov
ss
es
sbb
push
push
loop
cmp
xchg
push
cmp
inc
add
fs
mov
pop
xor
test
mov
xchg
gs
xchg
xlat
inc
pop
test
jmp
sti
ds
sub
pop
ds
ss
out
mov
and
jb
add
xor
xchg
fsubrs
sar
ljmp
xchg
je
fs
jae
call
shrb
xchg
pop
push
push
xchg
xchg
rcll
scas
dec
and
aaa
mov
mov
push
lock
jns
sahf
xchg
inc
adcb
inc
xchg
aam
fsubrs
cmpsb
adc
add
jmp
push
jae
test
daa
lods
dec
rcrb
xor
add
test
sahf
and
ss
cld
or
adc
inc
xchg
xorb
daa
ds
lods
ss
mov
xchg
in
inc
lods
mov
xchg
xchg
into
js
stos
outsb
andb
iret
pop
pop
mov
inc
incb
ds
pop
dec
sbb
pop
or
iret
dec
lods
into
push
int
int3
pop
fcmovnu
imul
sub
ljmp
sti
push
lds
mov
pop
xchg
or
xchg
jle
xchg
cmpsl
jnp
and
jno
ja
in
lods
addr16
ljmp
or
int
jne
movsb
mov
addr16
fucom
loopne
rol
jb
lds
push
pop
ss
js,pn
and
in
movl
jb
mov
jle
mov
or
mov
rclb
rep
roll
icebp
es
push
out
sbb
imul
mov
push
jnp
cli
rcrb
into
inc
jae
out
loop
mov
cmp
fs
pop
inc
add
jne
jle
sbb
xchg
outsb
mov
push
stc
in
jne
mov
repz
cmpsl
lret
xchg
mov
xchg
cs
and
mov
je
sbb
repnz
add
inc
jp
shr
jns
cmp
mov
pop
loopne
shlb
orb
inc
iret
iret
cs
into
mov
mov
xor
nop
lock
inc
movsb
loopne
shrb
push
fnsave
push
add
ficoms
out
xchg
mov
insb
in
imul
clc
test
sub
dec
inc
and
jnp
lret
aas
pop
notb
std
jns
cmp
pop
dec
xor
mov
xchg
out
imul
ss
bound
xchg
adc
push
mov
ret
ret
xchg
and
ret
inc
xor
daa
xlat
outsb
cmpsl
xchg
adc
jmp
insl
jno
mov
push
xor
ret
inc
mov
pop
xchg
xchg
xchg
lds
push
add
je
inc
arpl
ja
jmp
push
repnz
jb
movsl
imul
push
loope
shl
and
popa
iret
sub
mov
inc
ds
mov
fiaddl
out
push
lds
loop
push
test
gs
inc
adc
mov
pop
or
xchg
jle
jbe
outsb
sbb
daa
push
pop
movsb
sbb
inc
mov
frstor
adc
loopne
rclb
call
and
mov
pop
lea
jmp
and
nop
or
jb
jo
and
pop
pop
pop
out
push
push
jb
mov
cmpsb
lea
out
notl
sub
daa
loopne
shlb
addb
outsl
ljmp
jne
aam
rcrb
jg
push
push
sub
mov
jmp
xchg
xchg
orl
or
ror
daa
pop
into
cmp
push
sti
dec
out
mov
cmpsl
cmp
orb
je
fs
lods
sbb
pop
mov
pop
aaa
pop
lret
and
jle
shll
je
gs
ret
out
and
loopne
mov
loope
imul
lret
es
mov
jmp
xor
mov
inc
popf
jle
fs
rclb
mov
pop
sbb
outsl
loop
jo
lea
rorb
add
loope
shl
cmpl
adc
adc
push
mov
loopne
push
xor
jmp
in
push
inc
push
push
inc
aaa
adc
mov
push
inc
mov
add
jmp
mov
adc
andl
fidivs
jp
adc
bound
fidivs
inc
cmp
cmpxchg
xchg
add
imul
mov
pop
movsl
ja
fs
ss
push
xchg
dec
push
push
mov
pop
int
cld
dec
cld
mov
fs
xchg
sbb
mov
mov
aas
imul
push
cs
stos
push
je
pusha
pop
inc
or
inc
daa
es
push
cmpsl
pop
notb
jmp
leave
pop
sti
and
push
mov
mov
xchg
imul
push
leave
cmp
add
cmpsb
add
sarl
jb
pusha
mov
and
cli
push
stc
inc
dec
push
loopne
adc
es
xchg
push
dec
mov
jo
pop
out
cld
rclb
adc
add
cmpb
in
bound
fucom
cli
push
out
and
insl
mov
mov
add
mov
iret
roll
icebp
aad
inc
xor
push
bound
inc
out
and
loope
rcll
nop
and
add
loopne
mov
push
inc
and
xor
je
fs
push
cmpsl
inc
xchg
and
inc
in
pop
sub
movd
mov
or
into
ss
into
mov
insl
es
shll
or
or
or
lret
outsb
inc
insl
into
add
cmp
jecxz
repz
sub
add
cs
dec
mov
std
adc
jns
movsb
add
pop
lods
jns,pn
cwtl
iret
ret
insb
int
int3
push
cmp
rolb
call
xchg
ss
xor
pop
ds
jmp
icebp
mov
je
lret
test
adc
in
repz
test
xchg
cwtl
jmp
test
gs
icebp
and
inc
jmp
push
call
and
cli
hlt
insb
mov
enter
decl
inc
out
fs
xor
sbb
into
push
test
outsl
xchg
imul
and
or
xchg
mov
jbe
xchg
loopne
xchg
bound
mov
addr16
sahf
push
gs
inc
push
lret
test
inc
dec
je
cmp
xchg
jae
add
dec
ds
add
out
ja
cmpsl
jmp
addr16
in
mov
and
testl
ljmp
aad
mov
dec
negl
push
pushf
icebp
xchg
and
ret
or
mov
push
xchg
inc
ds
mov
repnz
data16
ja
test
xor
and
sub
mov
lock
xorb
sbbb
jg
push
lods
dec
sbb
daa
push
addr16
inc
pop
bound
pop
jae
add
lods
inc
add
daa
addr16
imul
push
out
aaa
and
adc
adc
daa
outsb
es
mov
push
and
jecxz
mov
testl
jle
into
pop
int
int3
and
mov
mov
stc
into
outsl
out
pop
inc
push
out
cmp
pop
shll
inc
and
jg
mov
xchg
into
in
int
int3
sti
lret
jnp
and
sbb
cld
and
jns
cmp
mov
jmp
aas
jae
mov
mov
out
out
mov
add
mov
in
jae
notl
int
gs
dec
jnp
outsb
loope
int
loope
imul
loopne
mov
push
jbe
sub
xchg
add
jle
jmp
ss
sbb
movsb
xchg
mov
imul
out
lea
push
add
lods
xor
adc
lods
hlt
rep
movsb
call
add
add
adc
mov
fildl
imul
and
inc
repz
enter
js
dec
adc
dec
xlat
push
scas
jmp
push
push
loope
arpl
mov
popf
adc
adc
adc
adc
adc
adc
adc
cmp
clc
and
add
loope
jo
test
repnz
inc
xor
mov
mov
cs
xor
and
jno
sbb
inc
mov
ds
je
sub
push
xor
mov
sti
xchg
imul
pop
filds
inc
jmp
xorl
cld
aaa
cmpsb
xor
loop
and
into
sub
loopne
imul
fidivrs
push
sti
mov
xchg
outsl
into
inc
iret
jb
mov
push
fsubs
add
aad
iret
insl
fdivrs
ja
test
inc
or
in
cmp
test
fs
inc
adc
adc
adc
adc
adc
mov
jmp
jo
dec
shl
outsb
je
xchg
mov
xchg
sahf
mov
adc
mov
jmp
jo
test
inc
adc
fisttpl
test
cmp
jae
icebp
dec
lret
xchg
push
add
fcomp
mov
inc
push
testl
aad
ja
inc
jmp
and
push
push
mov
imul
or
lods
sbb
out
cmp
ss
data16
pop
push
cmp
push
jmp
push
xor
loopne
cmp
cmp
add
pop
lock
loopne
shlb
daa
or
rcrb
cwtl
mov
inc
into
dec
fnsave
jno
incl
sbb
cmp
imul
es
pop
push
insl
sbb
out
push
mov
data16
xor
inc
inc
test
sub
and
out
pop
filds
scas
hlt
pop
push
inc
xchg
or
jns
cmp
jmp
xchg
cmc
xchg
push
mov
lds
movsl
andb
inc
fidivrs
mov
sbbb
fdivl
shll
push
decb
xchg
sub
js
out
mov
sahf
inc
lret
inc
arpl
pop
enter
add
incb
xor
xchg
and
pop
iret
les
mov
adc
cld
adc
push
fisubrl
rcr
cld
out
mov
gs
adc
test
ljmp
inc
scas
push
adc
mov
addr16
mov
in
loopne
testb
xchg
pop
jmp
addb
out
and
inc
arpl
and
popf
jb
push
cmp
push
daa
jmp
out
jb
push
push
sub
adc
adc
adc
adc
xor
and
sbb
shll
inc
inc
xchg
push
add
jecxz
ret
push
mov
inc
and
and
and
and
loopne
inc
mov
add
loope
sar
cmpl
and
rorb
mov
xor
insb
mov
loopne
sarb
shrb
mov
pop
cli
mov
rcl
adc
lock
fsubr
adcl
es
ss
xchg
fsubrp
lret
xlat
call
ljmp
lods
aam
mov
notl
add
je
pop
push
into
mov
and
mov
mov
fnstcw
jmp
add
jbe
outsb
mov
daa
push
cld
jmp
mov
cmpsb
negl
and
rorb
fsubrp
stc
nop
push
imul
jecxz
rorw
mov
adc
lods
add
xor
mov
es
jne
je
add
sbb
roll
inc
aas
push
je
fs
jmp
push
or
and
add
inc
add
push
mov
ljmp
xchg
jecxz
mov
std
xchg
pop
push
mov
pop
pop
mov
mov
xchg
dec
push
idivb
push
iret
dec
mov
iret
loop
mov
inc
mov
je
out
cmpsl
icebp
inc
jp
mov
out
cs
flds
mov
icebp
cmpsl
arpl
outsl
nop
xor
jae
push
xor
pop
movsb
inc
xchg
jle
mov
jmp
mov
inc
loope
shll
andl
mov
ss
cmpsl
fiadds
mov
pop
mov
and
addr16
inc
and
pop
or
or
or
inc
push
in
lds
jo
inc
push
adc
mov
mov
mov
inc
mov
jb
push
movsb
ds
mov
je
xchg
outsb
popl
fcmovnbe
es
xchg
outsb
push
aad
out
mov
loop
mov
xchg
mov
repz
cwtl
inc
mov
mov
push
data16
into
xlat
lret
inc
sar
push
xor
xchg
mov
js
das
and
call
jnp
push
fidivs
fucomp
out
and
add
dec
lret
arpl
cli
fbstp
mov
mov
or
sbbb
sub
mov
cmp
push
or
subl
mov
jnp
or
add
mov
mov
inc
jno
fs
loopne
rorb
jae
add
and
dec
iret
out
mov
mov
loopne
mov
mov
loopne
mov
jno
enter
enter
dec
mov
add
loop
mov
inc
pop
cmpsl
adc
or
or
or
or
inc
mov
mov
ss
xchg
and
mov
loopne
nop
fldenv
andl
out
out
inc
push
ss
and
and
inc
mov
inc
shlb
lret
xchg
lods
out
xchg
add
out
lods
mov
clc
lds
push
mull
dec
in
adc
in
andb
inc
xor
cli
shrl
add
pop
xorb
stc
notl
push
sahf
jae
mov
into
out
not
jns
fs
or
push
jnp
out
cmp
xchg
pushf
jae
push
xchg
ja
add
sahf
jle
and
pop
adcl
push
ret
daa
in
rcrb
pop
dec
pop
jmp
lcall
push
inc
outsl
pop
jecxz
icebp
mov
gs
ljmp
ficomps
in
mov
in
movl
dec
lret
jne
std
jne
add
xchg
sub
and
ret
pop
adc
adc
incb
cmpsl
sub
inc
dec
aam
stc
ds
or
lods
filds
add
or
es
push
test
push
jae
jecxz
add
push
xchg
icebp
notl
mov
bound
mov
clc
jae
mov
and
and
cmp
imul
xchg
inc
push
adc
fiadds
and
mov
add
dec
notl
ret
push
pusha
pop
loopne
mov
js
jae
hlt
add
pusha
dec
inc
mov
ds
adc
adc
shlb
mov
in
and
push
or
and
iret
push
call
jecxz
dec
mov
int3
repz
mov
mov
cmc
mov
sti
rol
movsl
jbe
lods
jne
popa
stc
ss
xchg
je
mov
xchg
adc
mov
daa
jno
fsubrs
mov
push
inc
movsb
xor
cmp
push
adc
inc
insb
sbb
ja
addb
add
adc
xor
mov
subl
mov
ljmp
std
and
nop
into
xor
sarb
mov
out
xor
loopne
shr
jo
and
cmovo
icebp
aad
push
push
outsl
addr16
lret
out
add
dec
filds
xchg
imul
out
daa
lret
jmp
jns
push
xchg
xorb
daa
ja
pop
jae
add
mov
repnz
push
xchg
mov
sub
xor
and
add
xchg
pop
push
insb
cmp
mov
xor
adc
push
add
push
orl
xor
nop
es
lret
icebp
or
flds
shrb
adc
popf
and
ds
cmpsl
xchg
addr16
inc
xchg
or
into
mov
adc
and
roll
and
ja
add
cltd
outsl
gs
xchg
xchg
add
mov
sahf
cmpsb
sti
loopne
push
fsubl
jp
mov
icebp
dec
repz
jge
pusha
push
push
loop
xchg
cmp
and
push
jae
call
dec
jb
and
out
rolb
and
sbb
inc
push
outsl
push
sub
addl
xchg
inc
cmpsl
je
sub
dec
xchg
notl
or
push
mov
in
imul
dec
outsl
xchg
shlb
mov
add
dec
je
or
jmp
loopne
or
inc
lahf
ds
inc
adc
and
adc
daa
out
dec
imul
xchg
fsubrl
pop
inc
cs
imul
cmp
jmp
mov
add
cmp
mov
ss
dec
fs
dec
ret
test
sahf
xchg
inc
xchg
rolb
je
ljmp
dec
push
je
xor
add
sbb
movsl
addl
sbb
adc
bound
jae
mov
addb
out
add
lea
pop
jbe
mov
or
xchg
pop
insl
adc
bnd
nop
cmp
cmp
inc
add
lret
daa
stc
push
out
adc
imull
fs
icebp
cmp
jne
dec
lea
sti
sahf
mov
jb
cmpsl
in
jae
mov
xchg
mov
jle
and
xchg
adc
xor
repz
into
xor
sbb
leave
xor
adc
test
sub
xchg
push
push
dec
sbb
loopne
sbb
push
je,pn
mov
cs
movsl
jne
pushf
aam
add
in
push
mov
fs
sar
mov
daa
outsb
out
movl
inc
ret
jge
push
rolb
and
push
enter
out
cmp
cmpsl
mov
cmp
lock
ds
test
je
adc
xchg
es
ficomps
iret
push
jae
push
jge
and
inc
add
add
sahf
mov
xchg
mov
loopne
rcl
ss
fisubrs
inc
mov
xor
xlat
out
xor
shl
repz
lret
adc
dec
subb
or
jae
ret
test
mov
push
jbe
ret
push
inc
call
ret
std
cs
mov
add
cs
add
shrb
mov
sti
loop
pop
push
mov
addl
mov
lock
mov
pop
test
mov
loope
xorl
jmp
mov
int
popf
xorb
test
xor
cmpsb
cmp
and
jmp
popf
imul
pop
jmp
sbb
mov
push
adc
add
addl
xchg
cmc
ss
out
inc
in
lods
xchg
pusha
in
xchg
pop
xchg
les
push
dec
sti
jae
fiaddl
mov
sbb
cs
jmp
lods
jb
push
mov
aas
mov
lret
mov
xchg
stos
inc
adc
dec
xchg
rolb
inc
sub
ja
mov
sahf
cmpsb
adc
ss
add
out
ljmp
mov
mov
push
xchg
js
divl
add
pop
out
ja
push
mov
rorl
shlb
outsb
push
clc
rclb
mov
push
out
cmp
xor
je
sbb
outsl
push
mov
bound
jl
shl
sbb
aam
add
cmp
scas
cld
jbe
std
and
pusha
sti
data16
adc
cmp
cli
mov
add
pop
dec
gs
mov
jo
jmp
inc
push
inc
dec
add
xlat
shrl
dec
fs
jns
mov
pop
sti
and
repz
sarl
js
mov
ret
add
outsb
lea
mov
and
push
dec
inc
ja
out
loopne
cmp
pop
xor
mov
test
push
mov
or
inc
xchg
test
inc
mov
lods
push
xchg
push
mov
adcl
add
mov
sbb
pop
adc
iret
add
or
inc
adc
test
add
or
mov
int3
xor
lock
fistpll
cmp
mov
outsb
xor
adc
inc
xor
std
push
xchg
mov
pop
icebp
fcmovnbe
movsl
out
xlat
or
into
and
mov
add
mov
cmp
gs
inc
lds
add
and
lret
inc
jno,pn
shlb
sarl
outsl
outsb
icebp
cmpsl
shl
out
xor
xor
dec
push
add
xchg
ds
pop
mov
fidivrl
je
xchg
xor
ja
in
pop
rcll
movsb
gs
fs
inc
sahf
jle
call
in
lds
popl
and
data16
xchg
ss
imul
sbb
subb
es
push
mov
inc
aas
xor
push
data16
enter
out
push
inc
divb
mov
jecxz
popa
mov
sub
add
inc
fidivrs
xchg
ss
into
adc
lock
adc
mov
adc
insb
mov
addr16
inc
sub
repz
mov
push
push
in
pop
adc
imul
cli
rcrb
push
and
add
pop
mov
push
es
jae
inc
ss
adc
xchg
xchg
loop,pn
push
sub
jns
data16
ficomps
bswap
mov
mov
stc
out
jns
lods
fdivp
jno
out
and
repz
scas
push
mov
push
pop
xor
add
inc
lahf
mov
adc
jbe
mov
imul
jb
push
push
push
mov
xlat
jmp
mov
das
inc
fimuls
out
jmp
es
jno
and
daa
negb
xor
xor
sub
loopne
sbb
fsubr
xchg
cs
imul
fmul
dec
flds
loop
scas
and
mov
mov
pop
std
aad
push
scas
inc
stos
inc
shll
jae
push
push
dec
flds
mov
bound
inc
mov
add
dec
jnp
mov
xchg
xor
or
shlb
and
add
decl
in
int
je
sub
jbe
loopne
ror
adc
adcb
pop
xor
inc
hlt
xor
gs
ds
ss
cmpsb
mov
adc
in
bnd
or
hlt
cmpl
pop
pop
mov
cld
push
rolb
or
icebp
lock
add
pop
dec
or
popa
dec
add
pop
and
xchg
outsl
inc
mov
neg
mov
push
xchg
lods
and
ja
cmp
icebp
and
mov
add
inc
inc
enter
das
es
in
out
inc
add
and
arpl
dec
xor
cmpsb
push
les
push
push
sub
jecxz
dec
pusha
pop
inc
ds
movsl
push
cs
xchg
xchg
mov
popf
cmp
mov
adc
xchg
add
popa
jp
xor
add
out
in
jb
or
and
jmp
and
cmp
jae
ja
mov
mov
cmp
movaps
mov
in
pop
and
cs
mov
inc
rol
jecxz
jle
stos
xchg
xchg
sarb
add
rorb
sbb
shlb
clc
jns
mov
inc
jle
mov
add
mov
push
js
mov
ds
jge
mov
jp
arpl
xchg
je
adc
adc
push
loopne
roll
cmp
adc
ret
sbb
outsb
sbb
inc
fimuls
xor
shl
ja
rcll
pop
pop
push
or
test
jae
sbb
scas
xchg
ss
clc
xchg
mov
std
adc
out
sbb
and
es
mov
jb
push
adc
adc
xorl
xor
js
adc
loope
scas
scas
daa
cmpsb
stc
pop
jne
jne
xchg
sbb
mov
inc
push
nop
push
jp
inc
mov
ret
inc
push
and
movsl
loopne
xchg
addr16
inc
adc
push
es
push
push
in
lds
movsl
mov
and
inc
in
fsubrl
xor
popa
js
jmp
aaa
fisubrs
and
ss
arpl
es
adc
test
xchg
subl
scas
repz
adc
push
or
lods
pusha
jae
jne
sbb
mov
fcompl
jns
push
xchg
sahf
imul
std
push
je
sti
xchg
push
xchg
xchg
fidivrl
jle
sub
xlat
cmp
lock
mov
fs
adcb
pop
pop
mov
mov
xchg
jmp
sbb
xchg
inc
inc
repz
pcmpgtw
fiaddl
cmpsb
adc
mov
jbe
fidivs
push
std
mov
mov
lret
adc
call
pop
fldenv
mov
insb
xorb
stos
movsb
jmp
pop
pop
inc
add
imul
ds
ss
popf
add
imul
pop
shlb
clc
mov
repz
mov
mov
mov
popa
mov
xor
add
xor
and
mov
xor
ss
cld
rolb
adc
cmp
cmc
ds
xor
sbb
popf
andl
or
addr16
xchg
es
ret
xchg
xchg
xchg
jb
test
cmc
push
jno
dec
lock
jbe
xorb
push
in
rorl
aas
lahf
outsb
cmp
xchg
cmp
add
mov
data16
inc
cs
movsb
dec
adc
icebp
adc
and
push
xor
lret
push
fistpll
iret
leave
xchg
fldt
fidivrs
cmc
add
pop
xor
or
rcrl
movsl
bound
xor
popf
jne
ficoml
mov
inc
repnz
mov
dec
xchg
in
imul
pop
and
inc
add
out
mov
das
clc
repnz
jp
adc
xchg
push
cmpsl
mov
add
cmpsb
mov
jae
push
add
jbe
rcrl
arpl
imul
sbbb
add
sbb
out
inc
xchg
inc
jae
jge
inc
scas
jmp
adc
jmp
hlt
cmpsb
sbb
mov
sub
push
adcl
cmpl
lret
inc
xchg
mov
jo
adc
subb
fists
fstpl
mov
movsb
and
push
sub
repnz
and
ret
test
pushf
es
andb
ret
pop
add
push
dec
add
test
data16
pop
cs
ret
inc
push
je
fldcw
fcomip
in
dec
inc
inc
loopne
mov
andb
ds
inc
rol
jbe
xor
jnp
jecxz
jmp
ss
and
push
add
stc
out
inc
sarb
ja
and
adc
adc
sbb
pop
imul
icebp
xchg
push
and
and
xor
jle
into
jne
jb
loope
mov
xchg
mov
clc
test
pop
outsl
ja
xchg
cmp
mov
test
scas
adc
sub
dec
dec
add
nop
js
dec
out
ja
loope
and
in
shlb
and
and
int
xchg
sbb
outsl
xchg
mov
dec
pop
data16
jge
mov
sbb
adc
cs
inc
sbb
mov
mov
jno
mov
adc
fmull
in
andb
inc
xchg
into
or
mov
cs
inc
mov
shl
movsl
mov
std
xorl
lea
loopne
or
loop
push
add
orl
inc
pop
mov
into
das
fst
jae
mov
rclb
ret
xchg
flds
andl
into
sar
xor
incb
mov
addb
inc
lret
push
jp
popa
mov
pop
xchg
jle
sbb
push
pop
add
and
outsb
movsl
fcomi
xchg
mov
mov
int
cmp
flds
inc
rorb
ja
xchg
into
ljmp
dec
jbe
push
dec
xlat
ret
inc
push
loopne
xor
inc
mov
out
push
into
imul
and
inc
push
and
push
add
lea
popa
xchg
xor
xor
and
adc
lea
inc
cmp
jo
inc
ss
cmp
mulb
filds
jno
jmp
xlat
loopne
rclb
cld
sarl
xchg
pop
je
popf
jmp
icebp
stc
arpl
sbb
lret
inc
xchg
and
arpl
cpuid
or
and
and
addr16
ret
out
into
jmp
xchg
xchg
xor
adc
push
bsr
xchg
shl
push
mov
into
leave
mov
inc
fs
mov
sbb
popa
shll
adc
repz
lcall
ss
idivb
addr16
xchg
rcrl
movsl
sbb
call
pop
repnz
adc
ja
mov
test
fsubl
insb
lea
mov
bndstx
mov
inc
mov
mov
and
test
loope
adc
xchg
xor
add
sbb
ja
xorb
loopne
mov
mov
adc
push
xchg
push
clc
adcb
clc
out
scas
cs
mov
xorl
sub
rclb
add
mov
mov
test
loope
xchg
jo
xor
push
xlat
cmp
ja
jmp
dec
out
out
mov
adc
andl
popl
inc
mov
cmp
repz
movlps
lea
mov
jns
sub
inc
xchg
dec
push
and
mov
int3
cmp
fisttpl
cmp
inc
cmpsb
mov
jae
add
push
push
divb
jmp
inc
jo
inc
test
out
xchg
inc
or
xlat
movsl
and
cmpsb
push
sahf
lret
ret
pop
pop
adc
repz
aad
daa
in
dec
sbb
push
test
mov
jb
xchg
outsl
repz
adcl
ss
push
or
jle
push
xchg
push
add
pop
jg
sahf
pop
lret
mov
je
inc
jb
popa
adc
jo
push
xchg
ja
and
mov
mov
mov
je
je
fisttpl
imul
mov
jno
lds
dec
dec
add
push
xor
das
push
jb,pn
xlat
rolb
test
push
xchg
inc
cmpsb
inc
lret
movsl
xchg
xchg
imul
pop
mov
ret
cmpsl
pop
jbe
inc
and
outsl
pop
jne
ja
mov
adc
andl
add
repnz
loopne
cmp
inc
add
mov
and
jns
cmp
mov
xor
and
xchg
fldenv
or
jbe
adc
aam
xchg
stos
iret
pop
fcomp
cmpsl
xor
adc
gs
jbe
stos
sar
dec
mulb
xchg
scas
divb
xor
notl
xchg
popf
ja
test
cmp
pop
movsb
pop
sub
icebp
inc
push
push
cmp
adc
movsb
xlat
push
xchg
pop
cld
xchg
sub
adc
je
cmp
mov
int
fidivrs
and
or
imul
or
repz
push
xorl
imul
rolb
and
and
std
out
mov
shlb
arpl
xorb
jo
adc
adcb
sarb
test
push
lret
xchg
mov
mov
xlat
adc
std
mov
jle
jae
lock
sarb
cmp
jb
push
movsl
pop
lcall
jo
jno
cmc
icebp
inc
cmpl
xchg
loopne
or
inc
pop
shll
jle
lret
loopne
shlb
adc
aas
mov
jne
loop
repz
in
inc
lods
adc
push
mov
mov
xor
mov
mov
outsl
jno
xor
lea
mov
mov
nop
lods
scas
repz
push
adc
out
inc
cmpsb
mov
ret
clts
jae
inc
adc
into
outsb
xchg
mov
xor
mov
add
push
aaa
setns
inc
xchg
ss
xchg
lret
daa
mov
repz
mov
mov
mov
xchg
push
sbb
inc
push
xor
add
and
xor
out
add
adc
fistps
lock
aad
pop
scas
dec
int
mov
xchg
scas
or
cmpsl
mov
stc
scas
scas
ret
loopne
in
jbe
repz
push
imul
and
mov
lret
mov
in
add
sbb
repz
popf
flds
mov
mov
lods
out
inc
ret
xchg
mov
mov
cs
js
cmp
pop
in
push
mov
jg
das
arpl
lea
push
inc
imulb
out
ds
mov
jg
das
es
lea
cmp
inc
lahf
jae
pusha
xorb
jo
sbb
push
push
loopne
imul
ds
pop
jecxz
dec
jno
test
nop
fmul
add
stos
loopne
xor
jne
and
je
sbbb
out
xlat
inc
pop
sahf
jge
and
xchg
mov
outsl
inc
jmp
jbe
push
pop
out
push
add
dec
fcomip
inc
mov
divl
xchg
add
lahf
dec
fists
xchg
sysexit
fdivr
daa
push
js
xchg
xchg
fimuls
sub
mov
pop
cmp
cmp
mov
jg
push
or
into
int
in
rcl
lods
clc
loop
ss
mov
popa
or
loopne
out
mov
cld
rorl
and
jl
test
pop
lea
and
xchg
adcb
mov
sbb
repnz
jno
out
pop
adc
mov
adc
ret
mov
and
icebp
mov
adc
addps
sub
lahf
ret
push
cld
xor
and
into
sub
fstp
mov
push
cmpsl
jl
mov
cli
push
inc
push
xor
push
in
sub
jmp
out
rolb
pop
movsl
jae
icebp
in
lret
loopne
mov
inc
jb
mov
jo
inc
addr16
andb
scas
mov
jmp
popa
and
hlt
mov
int
loop
ret
testl
out
andl
in
sti
shrb
aam
jne
mov
cmp
ds
shll
rcl
push
sub
stos
scas
inc
pushf
stc
xor
bound
xor
test
mov
xor
push
dec
stos
mov
iret
roll
push
in
add
ret
or
add
ret
xchg
aam
daa
mov
loopne
cmpsl
adc
jo
imul
iret
cmp
fwait
and
add
mov
mov
ret
sahf
push
inc
and
xchg
push
loop
mov
inc
fs
test
dec
cmp
icebp
mov
inc
and
stc
sbb
and
cmp
push
cmp
data16
gs
mov
add
por
add
mov
lods
add
mov
pop
lret
push
sub
jecxz
and
mov
icebp
add
loopne
lods
add
out
mov
adc
dec
xchg
lods
push
fldl
inc
add
inc
or
clc
lock
cmp
mov
lods
int
push
pop
repz
xorb
dec
iret
push
cmp
add
xchg
loopnew
rclb
or
ret
add
les
xor
xchg
imul
mov
mov
xchg
add
and
mov
xlat
xchg
test
xchg
lea
xchg
jmp
inc
inc
sbb
mov
adc
pop
outsb
pop
ss
std
ret
cmp
or
xchg
inc
es
push
imul
bound
icebp
icebp
ror
movb
sub
xchg
popa
and
adc
orl
notl
inc
jno
push
push
add
jae
gs
mov
jp
adc
out
test
xchg
xor
sbb
inc
inc
push
sbb
lock
and
sbb
xchg
nop
mov
xchg
push
mov
andb
shlb
inc
daa
fiadds
rcrl
push
adc
inc
and
jb
dec
mov
sahf
imul
adc
or
and
ds
ret
xor
and
out
dec
inc
push
push
cmp
pop
pop
xorb
sbb
and
ja
mov
and
adc
xchg
repz
dec
jecxz
sub
pop
clc
neg
mov
or
inc
dec
inc
rcrb
sub
daa
movsb
bound
jnp
loopne
inc
ja
and
ds
ss
xchg
push
inc
adc
out
cs
and
es
push
repz
jae
inc
xchg
cwtl
mov
inc
adc
test
je
or
inc
xor
and
fisubs
cli
loopne
add
sbb
add
lea
mov
test
push
popl
and
movb
push
in
test
repnz
data16
scas
fdivrl
ljmp
add
lds
mov
hlt
add
jbe
cmp
push
outsl
incb
sahf
pop
inc
push
xchg
arpl
mov
or
aaa
stos
mov
ficomps
lds
xor
jecxz
xchg
adc
sbb
push
fcmovu
andb
cmpsb
shlb
xchg
cmpsl
ret
xor
push
inc
lds
cmpsl
addl
out
in
mov
mov
pop
imul
clc
xchg
mov
cmpsl
cmpsb
arpl
sarl
stos
repnz
fistpl
fadd
jae
pop
jecxz
add
cli
inc
dec
aad
fwait
ja
outsb
mov
out
lahf
imul
and
cmp
cmpsl
mov
xor
or
icebp
push
mov
aad
xor
inc
mov
mov
popl
shrb
jae
push
mov
mov
xor
push
or
inc
and
xchg
and
jno
out
popa
adc
jmp
pop
icebp
xor
inc
jae
cmp
push
sbb
pop
xchg
and
ret
std
push
pusha
inc
into
inc
iret
push
pop
movsb
rcll
xor
shlb
adc
push
test
xchg
inc
out
mov
inc
adc
or
hlt
insb
mov
jno
xchg
fsubl
push
mov
lock
in
xchg
dec
adc
test
mull
testl
cmpsb
push
xchg
ret
or
inc
xor
mov
mov
scas
inc
ret
push
pop
push
jle
mov
orl
lret
jmp
dec
jo
rorl
sub
push
inc
push
fwait
mov
push
loopne
daa
cmpsl
sahf
test
movsl
iret
loope
ds
addb
movsl
xchg
repnz
adc
mov
xchg
xor
add
imul
push
mov
icebp
ret
cmpsl
push
inc
ja
mov
dec
std
cli
cmc
add
ret
loope
cmpsb
push
inc
nop
dec
lods
dec
add
enter
jecxz
bound
mov
inc
repz
repz
loopne
xchg
and
test
inc
sahf
xor
and
adc
mov
cld
out
inc
pusha
ja
add
dec
std
jecxz
incb
xchg
bound
mov
push
lea
nop
fbld
dec
mov
mov
je,pt
sub
jmp
mov
loopne
xchg
mov
idiv
sar
nop
jge
dec
push
and
inc
sbb
push
mov
mov
jno
bound
push
mov
and
in
ret
inc
inc
jb
add
lea
xchg
pusha
idivb
js
push
out
mov
inc
ja
shr
loope
jo
pop
iret
adcl
push
jg
aas
jns
cmp
stc
xor
clc
mov
inc
mov
xor
adc
jae
inc
push
scas
inc
mov
in
inc
or
mov
inc
in
add
repz
ret
xchg
mov
add
insb
jae
adc
xor
inc
inc
adc
mov
notl
movsb
pop
pop
jae
lea
xor
aas
add
leave
xor
icebp
mov
mov
scas
popa
mov
out
jmp
ljmp
and
cltd
in
inc
aad
mov
das
xchg
push
xchg
loop,pt
push
es
popa
outsl
bnd
call
call
mov
push
xchg
out
push
adc
xchg
insl
mov
mov
scas
ret
lds
add
push
xchg
dec
dec
loope
popl
xor
repz
int3
in
lds
push
adc
mov
xchg
sbb
inc
nop
je
fisubrs
mov
pop
add
mov
sbb
dec
shr
xchg
outsl
fiadds
dec
lret
push
cltd
loope
xorb
ds
xchg
lods
mov
or
lahf
jle
xchg
jne
mov
repz
mov
add
dec
jg
dec
cmp
xor
mov
cwtl
jae
add
lahf
and
pop
notb
inc
out
int
adc
xor
fiaddl
jae
mov
test
adc
mov
repz
mov
xor
adcb
jo
and
xlat
outsb
cmpsb
mov
push
shrb
pop
lcall
push
add
push
das
in
sahf
divl
push
arpl
lea
ja
ret
adc
add
outsl
adc
test
in
add
lock
shlb
repz
mov
jae
sbb
adc
xor
sub
inc
or
and
psubb
jb
push
and
mov
mov
add
icebp
and
in
cmc
jbe
loope
icebp
xchg
inc
adc
mov
in
jne
jno
cmp
aam
fbld
add
divb
pop
scas
dec
fs
xor
out
push
push
fs
mov
inc
adc
cld
je,pn
add
cmpsl
nop
inc
clc
pop
dec
loope
popf
aaa
ret
add
jbe
stos
incl
inc
adc
dec
movsl
sub
xor
jb
adc
sub
push
pop
test
lods
int
adc
push
es
xor
xchg
and
out
outsl
mov
adc
inc
test
add
nop
inc
adc
out
int
shll
push
pop
sbb
lret
ja
popf
es
cs
push
ret
push
mov
mov
inc
add
out
inc
imul
sti
and
and
push
les
xor
jbe
out
out
lock
mov
and
adc
sbb
push
adc
inc
pop
mov
divl
adc
pop
xor
jb
mov
rclb
mov
ja
bound
cmp
jne
or
cld
and
rcll
test
mov
shrb
std
popf
es
mov
pop
mov
clc
gs
push
out
mov
push
js
adc
or
push
fstpl
push
icebp
mov
movsb
aad
mov
lret
xor
pop
stc
push
xchg
mov
fisubrs
mov
addb
aad
jae
push
push
pop
and
popl
push
and
dec
dec
add
and
adcb
cmpsl
xlat
pop
test
push
lcall
cwtl
dec
sbb
stos
aaa
scas
add
movsb
outsl
jge
divl
adc
jo
xor
cmp
mov
andb
sub
ss
and
mov
out
cmpsb
addb
cld
inc
in
inc
jecxz
push
mov
cld
cmpsb
push
mov
lods
jo
pusha
xchg
into
push
pop
stc
bound
ret
and
daa
in
jae
jp
stc
test
mov
xchg
push
adc
pop
adc
icebp
inc
fsubs
xor
pop
xor
sbb
rcr
xchg
and
loopne
sub
jae
mov
mov
rcll
adc
mov
lods
scas
addr16
or
imul
inc
push
mov
out
mov
add
sub
repnz
aad
in
mulb
scas
shl
movsb
mov
inc
jns,pn
mov
cli
icebp
add
mov
xchg
inc
jmp
xor
repz
or
repnz
push
popa
mov
mov
lea
rcll
addl
fists
xchg
sti
ret
jae
or
xor
in
rorl
test
push
ficoms
pop
outsl
jmp
xor
stc
test
fsubl
jecxz
push
icebp
loop
push
sub
lods
inc
mov
call
jnp
adc
cmp
scas
ror
mov
and
mov
repz
jae
lea
push
cli
inc
inc
in
js
adcw
std
rclb
xor
aaa
mov
mov
mov
inc
lock
ret
gs
jmp
testb
movsl
out
sbb
mov
lret
inc
mov
in
and
mov
into
filds
out
aas
cs
test
push
mov
clc
mov
int3
out
cli
and
jbe
pop
jmp
fs
ds
fbstp
cld
xchg
jge
pop
ss
test
ret
pushf
jl
dec
cmp
xchg
jmp
jo
mov
or
mov
lret
fcomps
notb
and
frstor
xchg
fs
mov
cmp
mov
sub
push
inc
inc
ficoms
test
dec
daa
addr16
out
dec
repz
adc
sub
pop
xor
push
rclb
ds
insl
rcr
test
xchg
push
push
push
push
gs
fisubrs
push
out
and
sysret
push
mov
es
shll
and
jnp
jecxz
push
or
add
popa
mov
xor
push
add
cmpl
scas
xchg
adc
inc
xor
mov
sub
ss
jbe
idiv
clc
loopne
and
into
rcr
cmpsb
pop
stc
outsb
mov
scas
es
divl
dec
mov
rcr
push
shrb
jmp
dec
cld
arpl
stos
inc
add
es
mov
or
test
xor
ret
adc
xchg
call
scas
xor
cmp
jle
mov
mov
jo
and
push
xlat
add
xchg
xor
movl
jae
and
cmpsl
outsb
test
stos
and
das
jmp
jae
push
inc
dec
dec
inc
or
test
scas
fs
adc
clc
aad
out
adc
ja
add
push
into
inc
sub
jne
sbb
pop
add
dec
into
adc
cmc
cmp
adc
push
push
addr16
adc
push
adc
push
push
and
es
cld
xchg
fwait
mov
jbe
loop
push
xorb
and
shrb
orb
scas
ret
adc
cltd
movsb
hlt
cmpsb
push
xor
jmp
mov
adc
adc
inc
daa
push
cmpsl
push
push
adc
xor
lea
fisubl
sub
jno
test
pop
andb
add
sahf
inc
outsb
jae
adc
adc
or
arpl
outsl
shll
ror
mov
gs
mov
test
mov
jbe
jo
mov
lcall
out
sbb
jb
push
ja
mov
adc
push
test
add
and
and
adc
mov
cmc
into
mov
sbb
inc
in
repnz
mov
jno
pop
xor
jmp
stos
lock
sbb
out
or
repz
xchg
dec
ss
cmovb
mov
faddp
add
add
inc
push
into
mov
ja
or
inc
xchg
and
lret
push
mov
adc
rcll
sti
push
xor
sub
daa
jg
shlb
jae
mov
movsl
push
out
sub
adc
fbstp
push
jne
add
mov
push
cmp
cmp
fcmovnb
scas
js
cmc
daa
movsl
xorl
cmc
sub
and
cmc
adcb
xchg
adc
adc
lea
push
mov
push
and
repz
andb
xchg
loope
xchg
mov
out
xchg
inc
pop
cmp
std
mov
add
ja
scas
bound
out
clc
inc
dec
xchg
lds
inc
adc
and
dec
xor
mov
xorb
and
push
lea
iret
rcrb
idivl
in
mov
cmc
cmp
std
icebp
cltd
adc
fists
jb
xor
push
xchg
dec
mov
lret
xor
scas
repz
cmp
mov
push
into
pushf
test
jmp
inc
sub
sbb
xor
loope
shlb
cwtl
jns
cs
inc
jge
adc
cmp
jae
push
cld
xchg
cmp
push
cmp
movsl
cmp
ja
hlt
jmp
mov
mov
mov
shll
fs
cmp
ds
xchg
and
fidivrs
hlt
pop
mov
enter
xchg
cmp
xchg
xrelease
pop
mov
mov
gs
push
add
cmp
out
sbb
ja
mov
mov
daa
adcb
adc
jg
ja
mov
xor
addl
pushf
fiadds
cmpsl
mov
jae
fstpt
fildl
cmp
mov
or
push
jne
int
in
and
sbb
mov
inc
loopne
jge
cli
ror
mov
jae
pop
mov
mov
cmp
adc
dec
xor
aas
sbb
adc
stc
add
outsl
jle
mov
movsl
push
mov
cmpsb
add
popf
aas
je
dec
out
xchg
cmp
ja
or
gs
lds
cld
adc
mov
dec
jecxz
adc
fnstsw
inc
shlb
faddp
cmp
push
into
std
aam
jne
cli
out
in
aas
push
imul
clc
sar
push
add
fisubs
addl
scas
mov
cmp
in
mov
lea
mov
je
mov
ja
and
inc
mul
js
in
js
mull
mov
loopne
fs
sbb
inc
cmpsl
push
idivl
outsl
jno
add
ds
mov
repnz
test
xor
gs
fimull
xchg
mov
pop
test
adc
lock
xchg
sbb
outsl
cs
or
mov
mov
addb
imul
push
xchg
rorl
aam
fldl
mov
inc
addb
pop
xor
je
lds
push
and
fmull
out
ret
mov
pop
push
les
movsl
pop
mov
dec
jo
dec
inc
add
stos
jp
pop
test
xor
push
add
push
pusha
dec
fdiv
push
mov
mov
dec
addl
add
loop
ret
xorb
and
and
add
shll
sub
mov
xor
test
cmp
cs
loop
inc
xchg
adc
es
adc
sbb
push
or
and
les
movsb
push
test
mov
push
jecxz
mov
arpl
inc
and
adc
mov
inc
faddp
add
push
ror
cld
inc
popa
xchg
repz
and
loopne
push
cmc
mov
push
inc
ret
mov
sahf
out
popa
out
icebp
aaa
add
shlb
add
out
lods
inc
repz
popa
testb
mov
bound
movsb
xchg
and
jecxz
jecxz
loop
mov
scas
xchg
and
ret
stos
mov
scas
ret
orb
shll
imul
push
xlat
mov
lock
ret
mov
inc
lea
add
out
mov
or
xchg
pop
inc
xor
inc
sub
dec
lret
adc
loopne
xor
bound
xchg
repz
push
adc
adc
mov
out
je
shlb
push
repz
mov
push
mov
andb
and
dec
fcomip
mov
pusha
inc
inc
es
sti
inc
adc
inc
sahf
and
xchg
loope
rorl
jne
mov
ficoml
or
mov
jecxz
mov
ja
add
adc
in
les
fs
mov
mov
and
cmp
movsb
loop
and
mov
cld
cmpsb
outsb
xchg
in
jae
mov
out
addr16
in
iret
add
jecxz
adc
and
and
xor
jmp
pop
ja
pop
mov
xor
xchg
xchg
movsl
mov
les
into
mov
fs
daa
std
xor
mov
mov
xor
cmpsl
notb
gs
movsb
data16
dec
std
inc
add
loope
bound
xchg
mov
xchg
dec
loop
inc
mov
push
mov
rcl
and
loop
and
inc
mov
pusha
mov
es
popa
imull
xchg
ss
inc
sub
inc
xor
jle
inc
bound
adc
and
xchg
add
and
arpl
inc
mov
fs
and
clc
mul
cmpsb
adc
pusha
test
mov
jae
lds
mov
in
jmp
arpl
sbb
int3
inc
movsl
into
mov
daa
cmpsl
jnp
mov
icebp
mov
out
fsubl
mov
mov
lret
in
ret
add
pop
adc
adc
lea
adc
daa
and
mov
cmp
lods
addl
rol
mov
out
mov
xchg
cld
mov
inc
mov
inc
test
lds
dec
lcall
scas
mov
fiadds
adc
xchg
ret
jo
loop
lea
bound
mov
adcl
or
test
xchg
ficoml
hlt
pop
push
xor
loope
mov
ret
mov
popa
inc
push
les
scas
adc
inc
loop
add
and
or
adc
add
loopne
lret
shlb
inc
sbb
inc
xchg
mov
addr16
mov
dec
xor
test
adc
xchg
adc
pusha
cmp
add
cmp
fiadds
arpl
les
inc
enter
jae
sarl
popa
push
inc
mov
outsl
rolb
inc
mov
push
imul
test
cmp
sub
pusha
in
lds
xchg
stos
mov
xchg
stos
xor
adc
inc
sbb
and
shufps
and
cmp
cld
add
xor
addl
arpl
fiadds
rol
ret
adcl
and
cmpps
ss
jo
sbb
inc
mov
push
inc
cmp
xchg
inc
mov
repz
jecxz
ret
add
ret
mov
hlt
and
cmpsb
cmp
pop
in
add
mov
mov
inc
inc
mov
loop
xchg
popa
xor
dec
fsubl
adc
mov
scas
xor
lret
enter
and
xor
adc
adc
lods
test
cmp
cmp
inc
fs
add
cmpps
mov
repnz
push
cmpsb
dec
add
push
rcll
add
addb
pop
daa
ja
icebp
lds
pop
fbstp
lds
test
adc
adc
adc
adc
sbb
gs
pop
push
ja
adc
or
and
popa
je
push
notb
mov
es
push
push
fs
loopne
adc
shlb
sbb
and
xchg
mov
outsl
and
mov
data16
in
adc
adc
push
cmp
bound
push
loopne
and
in
xor
loop
mov
inc
push
adc
gs
fsubl
or
push
out
lock
shlb
fbstp
movsl
cmp
add
inc
or
and
jp
imul
lsl
outsb
xchg
inc
adc
dec
js
int3
inc
loopne
stos
xor
cmpsl
dec
and
movsb
push
rcr
stos
adc
lods
add
insl
orl
lods
lcall
and
xchg
lods
and
fs
xlat
inc
and
mov
test
test
xor
out
cmp
push
mov
ret
or
mov
add
mov
add
fsubp
mov
daa
add
inc
mov
andl
arpl
mov
push
and
ja
out
daa
xor
in
add
xchg
mov
adc
movsl
adc
in
inc
jecxz
push
cmpsl
test
movb
xorb
push
sarl
add
mov
xor
inc
fidivs
add
movsl
adc
movb
sbb
inc
jae
add
subl
cmpsl
inc
data16
sbb
les
std
shll
imul
test
rclb
inc
ret
fs
xor
fs
test
pop
inc
push
pop
icebp
adc
orl
hlt
cmc
movb
shrl
jno
icebp
xchg
add
adc
ss
jbe
ja
pop
xchg
repz
inc
adc
xchg
inc
cmp
add
shlb
rcrl
andb
arpl
push
mov
push
fs
xchg
in
rol
arpl
out
ja
repz
test
mov
cmpsl
add
push
incl
repz
and
mov
outsl
icebp
jno
inc
mov
mov
jecxz
and
arpl
outsl
xchg
jne
test
test
or
xor
xor
mov
adc
adcl
daa
push
shl
imull
add
mov
stc
xchg
and
out
jecxz
repnz
arpl
mov
inc
pop
in
mov
es
mov
cmpsl
jae
lods
out
ficoml
clc
xchg
scas
jecxz
ss
cmc
xor
cmp
inc
or
push
fs
mov
jo
mov
inc
jne
test
jae
jae
and
outsl
xor
loope
test
and
data16
inc
js
cmp
roll
push
outsl
cmpsl
repz
les
mov
stc
andb
lock
loope
mov
test
inc
xor
ret
add
and
ja
icebp
pusha
cmpsl
inc
mov
and
rorl
loope
inc
cmpsb
and
add
and
ja
inc
subl
push
les
mov
jno
ret
lods
loopne
inc
inc
cld
xor
pop
push
and
push
xorb
xor
hlt
orl
cmpsb
test
cmp
out
xchg
push
push
ret
jecxz
icebp
add
xchg
xor
mov
scas
repz
movsl
dec
iret
mov
loopne
inc
es
std
xor
repz
and
out
jne
bound
fs
ret
xorl
out
xchg
inc
jae
cmpsb
mov
and
ret
or
data16
xor
xorl
push
adc
mov
movsb
mov
arpl
roll
add
pop
iret
mov
loopne
and
sbb
push
aam
sbb
inc
cmp
loope
loopne
test
loopne
add
daa
xor
mov
scas
push
ret
ficoml
add
into
inc
lret
inc
cmpsb
int
in
xorb
sbb
add
fsubs
jno
addb
adcb
and
cmpsb
out
sbb
out
inc
std
xor
mov
fs
and
sarl
scas
push
jge
push
movsl
lea
add
jnp
out
xchg
lock
add
cmp
ja
mov
outsl
movsb
jno
fiadds
nop
dec
add
mov
icebp
bound
mov
iret
jae
fsub
imul
repnz
inc
add
and
and
inc
aaa
into
data16
cmp
mulb
out
xchg
and
lea
shrb
out
ret
inc
jae
mov
xor
jno
es
mov
mov
popa
testb
mov
in
ss
mul
xor
in
inc
and
mov
daa
push
adc
data16
rol
dec
jecxz
inc
mov
xor
movb
in
push
add
add
faddp
jecxz
pop
addb
in
mov
cmp
outsl
xchg
es
test
repnz
es
loopne
lea
mulb
in
pusha
jecxz
inc
movsb
xor
adcb
data16
lods
and
inc
or
andb
jecxz
loope
add
mov
push
inc
test
mov
push
add
sbbl
loope
jae
inc
dec
pop
xor
mov
push
mov
cmp
mov
push
arpl
add
les
pop
xchg
adc
xchg
add
cmp
sahf
inc
mov
sbb
nop
mov
into
pushf
jb
pop
arpl
andb
adc
push
in
ss
fs
mov
in
and
andl
out
mov
fcmovu
add
mov
push
fistpll
into
inc
frstor
add
and
rolb
jle
sbb
aad
adc
xchg
pop
ret
mov
and
loop
xor
ss
sub
xchg
js
es
jl
jbe
movsl
inc
push
adc
adc
mov
adc
xor
inc
inc
cmp
sbb
xchg
inc
inc
andb
cmp
inc
jbe
add
in
add
shl
data16
cmpsl
and
ret
xor
sbb
fcmovne
adc
int
lods
je
sub
test
xchg
movsl
and
inc
loop
add
mov
xor
inc
push
and
add
jl
cmovb
pusha
adc
and
sahf
loopne
xor
cmpsb
sbb
inc
xor
lea
mov
xchg
xchg
imul
sahf
inc
loope
pop
or
lcall
movsb
out
inc
faddp
daa
and
addr16
cmpsb
sbb
sub
scas
sti
loope
jnp
adcb
xor
fwait
mov
orl
les
sbb
test
arpl
rclb
mov
outsl
ret
data16
je
mov
mov
aad
jnp
outsl
inc
xchg
jbe
mov
popf
daa
aaa
cmpsb
xchg
addr16
mov
arpl
or
ja
adc
add
aas
xchg
in
in
mov
lds
aad
adc
imul
cmp
inc
lds
jbe
cmpsl
mul
adc
jne
out
add
andb
loopne
pusha
or
mul
mov
mov
mov
fstl
loopne
sarb
shll
loop
inc
jecxz
inc
jb
fisubs
ret
repnz
inc
ja
shl
push
jne
shlb
daa
jnp
inc
cmpsb
mov
fs
xchg
fisubs
jo
out
jg
push
ss
mov
test
movl
movsl
daa
pop
in
or
inc
push
movsb
lock
ret
into
add
inc
icebp
jge
ja
ret
and
repnz
add
popa
loop
adcb
out
movsl
fldl
jb
sahf
fs
andl
add
ja
jecxz
mov
jecxz
ret
inc
add
movsb
ja
mov
adc
sbb
mov
test
adc
jecxz
add
xor
in
repnz
fiadds
addr16
hlt
out
jge
xchg
ja
loopne
out
cmp
dec
in
pusha
add
cmp
popa
shlb
adcb
shl
push
or
out
daa
cmp
insb
rcll
repnz
jno
and
fldl
ja
loope
xor
adc
fs
popf
xchg
and
arpl
fidivrs
xlat
testl
loop
daa
mov
movsb
lds
imul
inc
mov
dec
cmpsl
lods
data16
lds
movsb
mov
adc
andl
jbe
mov
movsl
es
into
fs
popf
loop
fisubs
ja
push
nop
es
test
jae
xorb
adc
and
jecxz
inc
push
lea
je
adc
cmp
pop
out
cmpsb
mov
enter
mov
and
and
gs
les
and
xor
adc
lods
pusha
mov
data16
outsl
in
aam
imul
in
loopne
popf
loopne
into
cmpsl
jecxz
daa
jno
xchg
and
jecxz
xchg
or
clc
ret
and
mov
loop
cmpsb
mov
loope
inc
xchg
jae
and
addr16
lods
in
icebp
push
mov
mov
mov
test
and
xor
jae
ss
and
cmpsl
cs
inc
fisubs
loopne
lods
gs
push
jecxz
outsl
mov
and
adc
add
test
loopne
cmp
mov
rolb
pusha
icebp
xadd
repz
cmpsl
adc
mov
inc
xor
lods
add
popa
xor
cmpsl
loopne
inc
lods
in
mov
mov
mov
shll
xchg
je
sbb
and
xchg
add
xchg
mov
jns
xchg
cmpsb
ret
into
cmpsb
in
xchg
and
ret
dec
jecxz
jno
mov
addb
imul
inc
push
pusha
into
and
xor
mov
fs
push
aam
les
lods
jno
and
test
daa
in
mov
in
lock
and
in
inc
and
loop
mov
loope
test
test
out
push
or
inc
ret
add
loop
nop
popf
bound
xchg
jg
fs
and
and
mov
imul
movsb
lods
ja
loop
out
test
lods
addr16
andb
mov
cmp
jo
popf
push
xchg
cmpsb
adc
outsl
in
cmpsb
into
and
movsl
inc
push
jb
inc
add
rorb
and
mov
outsb
repz
loope
jnp
ja
adc
dec
cmpsb
and
jae
ret
fs
outsl
and
and
xor
sub
stc
add
and
fs
mov
mov
inc
cs
push
rcll
repz
loop
adc
inc
movsl
mov
and
outsl
pop
fcomi
lret
mov
loope
mov
sarb
cmpsb
outsl
inc
bnd
in
jnp
push
and
loop
push
xchg
pop
mov
dec
mov
and
fsubs
ret
fadd
repz
xchg
mov
shl
and
rorb
fsubp
add
inc
sub
andb
mov
xchg
mul
popf
inc
fs
adcb
jne
mov
inc
aam
add
fldenv
out
jnp
pop
cmp
outsl
movsl
lock
out
mov
punpcklwd
inc
adc
sarb
mov
in
xor
mov
cmpb
cmpsb
movsb
gs
push
test
orl
mov
mov
lock
mulb
and
je
test
gs
and
test
popf
inc
aam
ret
sahf
mov
and
dec
es
adc
int
loopne
mov
shlb
icebp
frstor
nop
into
in
fbstp
pusha
mov
adc
xor
cmp
test
sahf
gs
imul
ret
clc
push
and
out
notb
cmpsb
cmp
test
xor
mov
data16
xlat
imul
and
rcrb
cmpsb
jns
dec
inc
dec
outsb
xlat
inc
jo
js
addl
inc
ficompl
addl
ficoms
lcall
shlb
mov
inc
xor
fs
jo
shlb
xchg
cmpsb
test
lods
push
repz
and
and
inc
pop
in
xchg
mov
movsl
mov
xchg
out
add
ret
mov
ja
aam
movsl
xchg
push
je
add
mov
add
xor
movsb
xorb
popf
add
xor
es
inc
xchg
add
int3
mov
push
orb
pusha
gs
cmpsb
push
jecxz
mov
rolb
mov
mov
scas
popl
test
lods
notb
jno
and
xor
lds
scas
mov
es
scas
and
and
and
xor
cmc
mov
bound
or
fisubs
cld
pop
xorb
cmc
imul
movsb
and
loope
shl
push
loope
mov
lcall
and
inc
cmp
mov
push
into
lds
testb
inc
mov
ss
and
mov
in
mov
shlb
stos
movsl
stc
inc
add
addb
inc
or
in
mov
add
push
rcll
out
inc
mov
test
and
cmp
hlt
add
loopne
jb
mov
test
fs
sbb
and
add
inc
shl
sbb
std
out
outsb
testb
ret
pushf
loope
xchg
jnp
inc
sahf
cs
into
inc
mov
shlb
movsl
incb
ret
jo
cmp
in
mov
add
adc
icebp
mov
xor
faddl
fidivs
lret
cli
out
not
and
mov
lock
mov
jae
bound
inc
mov
dec
push
fisubs
scas
shl
lret
fadds
imul
cmp
test
jecxz
xchg
jg
fiadds
mov
lds
lock
mov
test
dec
and
ss
cwtl
xchg
les
mov
or
xorb
pop
and
mov
mov
jae
jecxz
inc
shll
xchg
push
out
xor
aad
push
push
jo
inc
fisubs
inc
movsl
xorl
loop
ret
outsl
inc
sbb
imul
jb
ret
addr16
mov
jb
bound
lcall
add
fiadds
and
sub
push
loopne
pop
bound
imul
lea
jecxz
sarl
adc
aaa
xor
push
sahf
loopne
or
lock
adc
lods
inc
addr16
jae
adc
lods
inc
out
jb
and
imul
mov
hlt
and
mov
loopne
fs
mov
jecxz
test
inc
jb
testb
mov
jo
inc
jnp
push
test
add
push
adc
in
mov
gs
lea
inc
in
call
inc
imul
mov
and
lea
lock
stos
out
shll
xor
lea
mov
fsubp
loope
xchg
inc
mov
into
icebp
xlat
push
pop
mov
pusha
push
nop
fsubl
xchg
lds
rorb
sbb
push
mov
jle
sarb
cmpsl
xchg
jbe
and
mov
xor
nop
sub
aam
xchg
addb
and
roll
push
sbb
inc
xabort
cmpsl
test
jbe
pop
aaa
adc
jne
cmp
lcall
push
into
mov
adc
loopne
dec
mov
adcl
sbb
nop
push
mov
cmp
imul
push
cmpsb
andb
bound
enter
inc
in
and
imul
outsl
adcl
lea
xchg
jecxz
mov
mov
xchg
pop
rolb
push
call
add
and
fwait
icebp
xchg
mov
push
and
xchg
mov
lds
push
lods
test
jecxz
mov
rcrl
movsb
and
sahf
loope
dec
scas
xor
xchg
and
mov
and
push
push
lcall
xchg
mov
mov
cmp
pop
in
cmp
jge
dec
es
jo
js
outsl
inc
mov
mov
xor
hlt
dec
js
xchg
inc
hlt
push
call
inc
gs
call
xchg
push
aad
push
sub
push
clc
xchg
fildl
cmp
dec
clc
push
adc
addl
dec
adc
inc
or
push
call
xchg
push
cmpsb
clc
xchg
ficoms
inc
inc
sub
cmpsl
lock
jae
inc
jns
outsl
xorb
popa
jnp
sarb
dec
mov
notb
repnz
xchg
fistl
inc
pop
push
clc
inc
push
fisubs
inc
cmpsl
push
clc
xchg
fdiv
mov
xor
jo
nop
push
push
xor
adc
xor
ret
add
inc
fs
inc
loopne
mov
ret
cmp
jp
mulb
xor
sbb
xchg
pop
inc
jno
inc
movsl
mov
fs
ret
xchg
test
mov
adc
push
mov
in
popa
mov
mov
xchg
adc
push
ret
sahf
loopne
xchg
inc
rorb
xor
and
gs
lods
js
lcall
adc
pop
xor
xchg
cmc
add
xchg
fidivrl
push
fidivs
inc
jbe
cmpsb
mov
mov
jne
xor
adc
inc
sahf
hlt
je
movsb
mov
add
add
loop
in
or
inc
and
loope
or
mov
sarl
mov
and
mov
adc
jne
scas
divl
or
shll
add
jae
and
lods
addb
ja
and
js
mov
cmpsl
and
lods
jo
sbb
inc
movsl
mov
xor
ret
mov
mov
jns
lods
jbe
scas
or
jb
test
popa
or
xchg
or
rorl
scas
cmp
pop
out
pop
or
jp
inc
cmp
push
test
sbb
subl
pop
push
push
fisubs
sub
ja
mov
inc
mov
lods
xor
je
pop
xor
jno
in
pop
mov
hlt
test
jb
or
mov
icebp
test
jmp
inc
hlt
ja
xor
pop
xor
and
mov
adc
bound
xchg
mov
sub
jecxz
pop
and
jne
mov
inc
inc
dec
jnp
scas
cmp
mov
lock
push
xchg
mov
daa
mov
push
mov
xchg
out
adc
jbe
adc
mov
xor
test
xchg
mov
jo
aad
and
ret
div
movsl
mov
lcall
movsb
fs
aad
dec
aaa
xor
aaa
les
mov
sub
ficoml
faddl
mov
mov
add
loop
inc
cmp
mov
arpl
sarb
imul
inc
and
xor
movsl
cmp
loopne
sub
xor
faddp
sub
loop
loope
shll
gs
add
sbb
mov
icebp
in
jno
and
jge
into
mov
lock
and
mov
jne
movsl
fidivrs
fiadds
lock
ror
mov
mov
shlb
mov
jbe
shlb
add
daa
shrl
lods
icebp
push
js
dec
ret
push
nop
push
cmp
loop
jns
or
xchg
cmp
fwait
jecxz
je
inc
and
jl
xchg
cmp
cltd
loope
sbb
scas
cltd
adc
push
scas
cltd
jb
data16
mov
retw
loop
add
jno
push
jno
in
mov
cmpb
loope
rclb
out
or
push
adc
in
inc
and
or
loopne
test
fs
ret
mov
mov
mov
in
jns
xor
xchg
icebp
push
in
xor
cmpl
xlat
cwtl
cmpsb
mov
and
repz
mov
into
popa
cmp
dec
mov
or
mov
inc
je
cmp
mov
and
jge
fidivrs
sub
push
repz
inc
cmp
test
push
push
ret
fiadds
jb
into
add
rorb
pop
in
xor
mov
mov
adc
and
ret
and
fisubs
adc
daa
adc
aaa
pop
adc
negb
ficompl
cwtl
add
fidivrs
mov
dec
mov
jmp
push
ljmp
pusha
jae
pop
sarb
mov
mov
cmp
add
mov
jbe
mov
inc
adc
movsb
ja
add
bound
addr16
mov
mov
push
cmpl
test
mov
shll
int3
rolb
es
cmpsb
jne
add
movsb
inc
adc
add
jb
into
add
jecxz
cmp
pop
cld
xlat
add
ffreep
add
lods
enter
pop
jg
pop
insb
ja
repz
add
pop
inc
jo
jp
cmpsl
sbb
push
loopne
lret
mov
push
js
mov
rcl
shlb
push
inc
xor
adc
icebp
and
and
and
xor
adc
lock
and
and
xor
adc
idivl
pop
xlat
ss
xchg
es
push
push
aaa
push
pop
push
testb
push
mov
xchg
push
jbe
push
push
ss
push
push
cmc
push
aad
mov
xchg
push
jne
push
push
xor
push
aam
mov
xchg
push
je
push
push
xor
adc
repz
rorl
mov
xchg
push
jae
push
cmpsb
xor
add
insb
out
jno
mov
or
push
rcrl
xor
adc
repnz
rorb
xor
adc
icebp
or
or
or
or
or
inc
dec
call
mov
jmp
xchg
int3
xchg
mulb
icebp
lods
pop
rcrb
test
sub
pop
jmp
in
das
push
insb
sbb
rcrl
push
add
inc
sti
stc
jg
xor
hlt
and
jecxz
incl
and
add
fdivl
fucomp
dec
add
cmp
mov
out
jp
pop
inc
jns
shl
and
mov
or
orl
jp
shl
sbb
or
ss
mov
dec
insb
inc
insl
cmp
fcompl
je
push
inc
or
or
in
pop
lods
dec
mov
test
mov
dec
or
xchg
mov
shr
push
int3
jo
in
mov
cmpsb
shrl
jl
cmp
pop
loopne
es
addr16
hlt
insb
insb
sub
cli
je
inc
sahf
jle
dec
xlat
sub
xor
add
in
test
enter
xchg
cld
push
insb
fs
mov
xor
andb
call
repnz
mov
inc
mov
mov
orb
push
dec
cmp
add
mov
sub
lock
jns
fildll
and
pop
lahf
mov
mov
jmp
mov
dec
insb
xor
mov
dec
cmpsl
mov
pop
or
jno
jg
mov
push
xor
mov
divl
daa
cli
repnz
add
clc
push
xchg
mov
pop
out
cmp
dec
sbb
clc
mov
cmpsl
mov
bound
icebp
test
pop
dec
mov
imul
add
xor
xchg
adc
cli
ljmp
out
cmc
jb
data16
xor
daa
mov
sbb
push
andl
in
inc
jb
inc
adc
imul
roll
int
and
or
clc
sbb
loope
inc
sbbb
popa
fwait
daa
push
pop
mov
in
decb
pop
imul
xchg
in
cmp
add
ret
stc
lds
out
push
leave
repnz
imul
nop
push
mov
adc
jnp
test
fsub
sbb
loope
les
xchg
lock
mov
mov
cmpsl
loope
div
cwtl
pop
rorl
ljmp
js,pn
add
sub
es
icebp
adc
xchg
pushl
xor
adc
and
or
push
inc
xor
add
mov
dec
jmp
mov
adc
int
jmp
adc
inc
mov
shll
lcall
pusha
or
mov
shl
jno
mov
dec
mov
loopne
icebp
sbb
cmpb
mov
inc
push
pop
adc
push
cmpsb
cmc
lds
lds
loope
jp
subl
pusha
lcall
and
inc
scas
fcoms
out
pop
nopl
xorl
adc
jae
ret
push
ja
pop
add
sbb
les
shlb
int
push
notb
addr16
in
jbe
mov
inc
out
fs
xor
fsub
push
ja
test
cmp
es
aaa
push
mov
jg
stos
and
push
in
xlat
xlat
cmpsl
test
cmp
xor
cld
jge
add
sysret
insb
das
xor
call
cld
movsb
pop
dec
jmp
and
sub
add
mov
movsb
jg
push
pop
xchg
in
das
inc
adc
int
sbb
mov
mov
pop
aam
cmpsb
out
das
shll
push
add
icebp
push
testb
int3
pop
stc
arpl
sub
mov
js
inc
cld
jge
movsl
and
movsb
push
outsl
lret
idivb
enter
inc
aam
je
cmpsb
and
or
aad
push
jg
aad
push
dec
xchg
pushf
or
hlt
andl
lret
lahf
xchg
es
idivb
mov
lret
xor
jne
cli
xchg
pop
insl
cmc
pop
cmpl
or
inc
dec
push
jle
in
shlb
sbb
add
xchg
cmc
lock
adc
movd
aad
jle,pt
out
xchg
gs
mov
xchg
push
sti
xchg
ds
cmc
in
in
push
xchg
filds
mov
shrl
add
or
mov
xor
xor
push
mov
test
mov
lret
push
int3
xlat
decl
in
xlat
mov
cmp
orb
mov
dec
and
mov
xchg
js
mov
xchg
in
lds
testl
movsl
test
repz
lds
pop
or
dec
inc
ret
and
out
pop
addr16
repz
sbb
lds
vpcmpgtw
test
sub
add
ret
out
xor
mov
pop
in
jae
pusha
vpaddq
lret
mov
repz
std
ljmp
sbb
mov
cmp
enter
in
popa
daa
mov
mov
fdivs
jno
xor
rcrb
mov
mov
dec
lcall
dec
or
pop
movsb
shrl
test
popf
mov
or
mov
mov
xchg
in
jmp
sbb
mov
dec
mov
imul
jg
xorb
in
popf
xchg
jge
ficompl
pop
les
xchg
mov
sub
aas
jl
arpl
out
lahf
scas
mov
jne
clc
add
jg
xchg
arpl
mov
loope
mov
adc
pop
push
xchg
inc
bound
jbe
pop
pushf
jecxz
cmp
or
sub
movsb
or
inc
sti
addr16
adc
aad
or
je
sbb
outsl
arpl
xchg
pop
in
cmp
inc
loope
popf
and
int3
int3
fdiv
or
js
jl
xor
push
cmp
pop
mov
jecxz
jmp
les
lds
das
in
pop
out
arpl
adc
divb
test
lds
pop
gs
fwait
mov
inc
es
repz
insl
xchg
movsl
and
mov
ljmp
jecxz
aam
ret
and
cmpsb
insl
repz
mov
adc
push
push
fisttpll
mov
repz
out
mov
aad
in
push
cmp
aad
ret
mov
daa
jge
aas
xchg
in
stc
out
add
icebp
stc
scas
in
dec
adc
aas
insb
lods
iret
addr16
call
shlb
push
arpl
push
push
cs
pop
cmpsl
cmp
mov
test
in
divl
negb
stos
and
jbe
lcall
lahf
pop
inc
jb
sbb
xlat
xor
add
out
es
fisubl
int3
out
aaa
daa
pop
aaa
ret
xor
add
jmp
xchg
add
std
add
test
pop
ds
mov
lret
jg
push
stc
jle
lods
orb
or
iret
or
ljmp
inc
subb
pop
nop
cwtl
iret
cmp
leave
push
iret
dec
xor
push
and
fistps
daa
dec
jmp
sbb
sub
testl
ds
ja
adc
sub
rcll
dec
sub
or
jle
push
rclb
inc
test
xchg
mov
data16
ret
mov
push
jecxz
pop
es
out
cmp
mov
push
mov
jbe
sub
and
cmovbe
lahf
rcr
out
enter
les
orl
sub
mov
cmp
jl
mov
mov
jle
test
lods
dec
xor
addr16
and
push
leave
inc
dec
dec
jmp
push
in
jne
out
sub
push
push
pop
jmp
popf
lret
syscall
in
xlat
cmc
int3
loope
push
add
pop
fldt
add
ret
jl
js
fdivr
js
fwait
mov
imul
das
xchg
pop
mov
lock
jmp
aad
add
test
push
outsb
or
fisttps
adc
mov
mov
popf
cmpb
test
xor
push
test
test
aad
rol
mov
out
push
sbb
or
add
int
repz
xor
out
sub
push
jl
inc
mov
loope
int
mov
cmp
test
inc
mov
sub
inc
cmp
inc
in
mov
iret
loope
repz
faddl
xchg
lret
jmp
clc
lcall
bound
sti
shlb
add
jge
popa
ret
add
dec
add
mov
in
add
jne
loope
cs
in
mov
out
jecxz
out
and
jecxz
testl
lret
les
ja
sub
and
mov
in
sub
andl
add
ret
repz
dec
sti
push
and
pop
mov
push
in
pushf
fisttpll
aad
inc
inc
aam
rol
lret
loope
sahf
outsb
add
inc
pushf
lods
fldenv
or
add
cmp
orb
and
packsswb
sub
bound
nop
icebp
orl
pop
push
add
fs
mov
arpl
outsb
adc
loopne
out
xor
mul
into
push
stos
cld
xchg
pop
popa
in
test
hlt
inc
hlt
dec
shl
repz
sti
ret
and
xor
jae
pop
mov
sbb
mov
hlt
xchg
mov
and
fwait
push
mov
cs
and
pop
xchg
clc
cmp
insl
mull
dec
jne
in
xchg
xchg
mov
loope
lret
xor
push
pop
and
push
push
movsl
mov
out
imul
push
lds
pushf
stos
repz
push
in
lcall
bound
add
mov
and
xchg
fsubs
inc
inc
addr16
inc
cmp
add
pop
and
cmpsb
sbb
out
cmp
xchg
cltd
repz
sti
add
fsubs
mov
arpl
xchg
rolb
push
test
jo
pop
fisttpl
orb
and
adc
inc
daa
test
jecxz
or
xchg
and
cmp
cmpb
add
pop
and
test
and
lods
push
ja
push
push
mov
inc
add
filds
inc
out
loop
adc
add
mov
add
je
mov
out
jno
cmp
inc
sub
addr16
inc
loopne
fbld
out
mov
stc
subb
inc
mov
push
inc
repz
leave
aaa
in
push
inc
add
jecxz
jae
out
loop
orb
sbb
clc
addb
loopew
inc
cmp
inc
repz
pop
ret
pop
lret
adc
sti
bound
cs
es
test
and
movsw
inc
ss
mov
aad
test
push
inc
dec
out
int
in
push
and
xchg
xchg
mov
add
jae
mov
jmp
mov
lcall
add
cmp
inc
movsl
andb
mov
inc
rol
inc
cltd
add
xor
lock
cmpsl
lds
movsb
jnp
out
and
xchg
or
cmp
loope
mov
mov
xchg
inc
jle
pop
test
push
xchg
ljmp
inc
hlt
mov
loopne
push
in
inc
inc
sti
in
add
movb
mov
dec
add
les
xchg
dec
mov
rcrb
mov
test
mov
xchg
es
test
mov
inc
jecxz
cmp
push
mov
pusha
leave
test
roll
loop
stos
push
pusha
jmp
add
mov
add
shlb
add
jb
lds
add
hlt
js
mov
sti
arpl
or
add
add
adc
cmp
loopne
xchg
sti
inc
loop
enter
and
fldenv
cli
xchg
mov
loop
pusha
cmp
sbb
mov
data16
ret
jecxz
pop
stc
and
add
ret
sbb
mov
ja
gs
add
xor
flds
sub
out
push
lcall
sbb
and
gs
hlt
daa
imul
test
pop
jbe
addl
or
pop
cmpsl
fldt
pusha
fwait
ja
sub
fs
mul
push
push
pop
fldl
fs
mov
jecxz
fdiv
add
shr
mov
jecxz
xchg
daa
loopnew
addr16
mov
andl
lds
fimuls
or
mov
mov
out
movsl
adc
cmpsl
orb
xchg
repnz
loope
push
in
testb
inc
mov
push
scas
lods
mov
inc
pop
repz
inc
inc
fdiv
add
add
ljmp
jo
loope
enter
mov
out
rorl
jl
or
inc
punpcklwd
filds
xchg
jmp
cmp
aad
cwtl
loope
jle
sti
cmp
jbe
enter
push
les
mov
pusha
sub
xchg
ret
mov
and
xchg
xlat
and
add
inc
mov
or
jecxz
pusha
inc
lds
mov
out
inc
inc
cmpsb
mov
xchg
push
cmp
pop
push
jle
or
or
sbb
outsl
test
movsb
fbld
sub
jecxz
mov
add
mov
out
inc
gs
push
popf
arpl
ja
dec
out
repnz
inc
jb
xlat
mov
xor
jecxz
xlat
ret
ret
push
jbe
mov
pop
cmpsb
insb
mull
test
cld
xchg
cmp
hlt
xchg
jge
add
add
or
orb
addl
mov
pop
xchg
mov
lds
aam
inc
js
jbe
mov
mov
sbb
push
push
repz
xor
ror
inc
jmp
mov
int
adc
cmpsl
loop
fadds
jge
and
inc
or
and
mov
fcmovnbe
filds
and
push
js
xor
mov
and
movsl
add
addr16
mov
orl
mov
fcmovne
lret
jmp
flds
xchg
mov
mov
ljmp
xchg
push
cltd
rorl
int3
lret
mov
inc
shlb
add
mov
jle
mov
ss
sbb
popa
inc
inc
mov
movsl
popf
lock
cmp
frstor
inc
lcall
mov
cmpsb
sub
or
jecxz
lds
out
rol
scas
sub
mull
repz
mov
insl
sbb
and
sti
jp
inc
mov
add
mov
and
mov
xchg
aaa
xor
inc
mov
roll
pop
rol
mov
push
cmp
add
in
inc
mov
add
stos
pop
inc
mov
xchg
inc
mov
inc
outsb
lods
movb
loop
xchg
add
inc
out
lahf
cmp
inc
movsl
fldl
push
and
in
adc
jmp
mov
add
or
lds
inc
add
cmc
mov
add
mov
mov
in
imul
add
xchg
js
rolb
nop
jnp
loopne
add
in
inc
inc
and
add
dec
add
movsb
jl
cmpsb
sub
jecxz
mov
push
loop
xchg
xchg
jnp
repnz
andb
lret
xchg
jmp
jae
outsl
idivb
sti
gs
mov
lret
test
icebp
add
loope
stc
cmpsl
inc
mov
push
lret
loope
sub
xor
push
out
mov
add
iret
mov
lcall
mov
jle
je
add
stos
inc
mov
and
sub
sar
and
sbb
dec
adc
sbbb
add
test
push
push
cwtl
sbb
jbe
xchg
addb
insb
mov
addl
jp
mov
loope
jl
ret
lds
mov
loope
fsts
add
xchg
pop
pop
pop
jo
cmp
and
add
dec
repnz
add
pop
test
xor
inc
lret
clc
imull
push
in
stos
inc
es
data16
mov
out
sbb
jb
and
les
addb
xchg
mull
dec
loopne
out
jo
or
inc
out
xor
addr16
cld
inc
inc
jle
lahf
add
xchg
sbb
ret
inc
pusha
add
mov
inc
into
movsl
sub
test
and
jbe
insb
inc
xchg
xor
aam
sbb
xor
fsub
fidivs
movsb
pop
jnp
dec
push
pop
test
mov
movb
inc
cmpsl
lds
ret
add
add
les
cmp
cwtl
popa
aad
and
push
push
lods
stos
mov
lods
push
in
in
inc
cmp
sti
pusha
mov
push
add
dec
ss
das
inc
push
rcrl
push
mov
or
repz
test
lds
ja
push
mov
inc
jge
push
push
andl
mov
addb
jae
outsb
ja
inc
xchg
push
xchg
loope
loope
xchg
mov
loopne
addb
mov
movsl
lds
flds
adc
arpl
and
pop
sarl
repz
add
inc
inc
jge
pop
jo
push
dec
cli
and
jge
mov
inc
mov
std
popa
dec
fsubl
call
clc
pop
inc
int
push
xchg
xorl
jo
mov
ja
lcall
in
mov
add
imul
rcrl
shrl
add
xor
movnti
cmp
jmp
dec
inc
aas
cmp
push
loope
arpl
sbb
frstor
sbb
shl
pop
loope
call
loope
test
cmpsb
jmp
or
roll
sub
shrb
test
enter
bound
rcll
aad
fs
insb
mov
mov
stos
sbb
roll
xor
cmpsl
and
movl
sti
test
fwait
aam
add
addb
adc
add
rolb
and
add
fdivs
mov
jae
pop
test
cwtl
mov
dec
xor
sub
out
arpl
mov
fisubl
pop
call
mov
arpl
sub
sar
addb
sub
push
xchg
xchg
bound
and
inc
push
mov
or
repz
ret
test
insb
mov
jecxz
cmc
int3
stos
jmp
cmp
ret
loop
addr16
and
mov
jmp
xchg
and
cli
pushl
and
std
inc
jnp
cmp
or
mov
fcoml
and
adcl
push
jo
sub
xorb
add
push
mov
jle
xchg
inc
xchg
and
insb
jb
out
leave
arpl
jns
ret
sub
mov
add
ret
inc
or
nop
xlat
adc
pusha
add
pop
push
gs
mov
jecxz
filds
es
add
les
aas
pop
movsl
mov
xor
mov
imul
loope
inc
inc
test
ret
ret
test
and
adc
les
lds
jp
push
add
push
jae
pop
rol
mov
shl
mov
dec
mov
push
jl
xor
cli
sub
cld
lock
aam
xchg
stos
jbe
nop
test
rcl
cmpb
imul
sbb
hlt
loop
push
in
subb
push
idivl
add
fstl
scas
aad
clc
ret
push
mov
add
and
adc
lods
pop
inc
cmp
inc
jle
pop
outsl
sub
inc
out
mov
call
sbbl
mov
mov
in
inc
cmpsl
mov
mov
loop
je
inc
dec
xchg
inc
in
jne
sbb
daa
sub
add
mov
cmp
sbb
mov
arpl
cmc
jecxz
jmp
test
push
int3
cli
cmp
les
cmp
rolb
imul
imul
cmpsb
cmc
sti
cmpsl
popf
mov
mov
mov
loopne
dec
jle
outsb
lods
or
cmp
dec
jecxz
in
rolb
mov
inc
jl
mov
push
notb
cli
pop
shlb
repz
cmpsb
push
aas
fcompl
addr16
inc
push
push
inc
dec
js
pop
push
inc
repz
mov
mull
and
pusha
xchg
in
or
dec
pop
add
ret
cmpsl
sub
dec
adc
jl
dec
lcall
sub
or
arpl
idivl
dec
push
fs
in
and
fildl
dec
sti
call
cmpb
inc
or
movsl
xchg
inc
jae
pop
aam
sbb
loopne
mov
test
cli
and
mov
daa
out
mov
cmpsl
andb
xor
aam
push
inc
fadds
pop
loop
mov
les
lcall
add
rcl
add
repnz
dec
cmpsl
pop
mov
popf
sub
out
add
repnz
jae
lds
jecxz
ret
int
add
inc
scas
jbe
add
push
add
std
mov
adc
cmpsl
mov
add
or
cmpsl
mov
jge
mov
inc
mov
in
or
popa
mov
push
dec
add
popf
movsl
adc
addr16
cmpsb
movsb
sub
fdivrs
dec
loope
test
test
outsl
mov
add
jb
xchg
arpl
xchg
jl
inc
mov
inc
mov
and
add
cwtl
pop
mov
lcall
mov
hlt
and
jge
jle
cmc
test
std
insb
lds
loope
in
pusha
lds
addr16
and
or
mov
fwait
std
aaa
mov
mov
repz
xchg
cld
jecxz
pop
xlat
cmp
pusha
xlat
push
sbb
and
cmpl
add
packsswb
sub
movsb
or
add
test
loope
cmp
add
lret
inc
jo
xor
mov
mov
push
lret
or
push
and
outsl
mov
fwait
loopne
in
or
es
jae
mov
rclb
test
and
add
cwtl
dec
xor
sti
mov
add
test
pop
mov
rol
scas
push
je
cmc
aam
rol
jmp
jbe
add
test
adc
fisubs
cmc
adcb
push
ret
hlt
add
mov
gs
push
xor
mov
cmpsl
and
out
addr16
shrb
stos
inc
lock
std
stos
dec
pop
ret
jecxz
mov
arpl
lods
jecxz
xorb
jnp
add
stos
or
decl
loope
and
xchg
loope
out
repz
les
and
bnd
ret
lds
mov
push
movsb
andb
mov
repnz
in
add
bound
inc
xor
sbb
sbb
test
jp
jl
sbb
popa
or
push
mov
filds
inc
dec
testb
push
fildl
pop
inc
fs
fdiv
inc
stc
in
jno
sbb
arpl
and
push
fldl
add
inc
xchg
insb
add
cmp
xor
dec
add
mov
xchg
pop
mov
lods
loope
push
in
and
dec
test
and
mov
mov
mov
ret
inc
xchg
dec
stos
cmp
push
mov
in
cmc
je
loopne
cwtl
testb
or
stos
and
test
pusha
inc
mov
mov
mov
hlt
push
loope
jle
test
xor
pop
xchg
jns
dec
inc
cmc
mov
inc
cli
and
sbb
xchg
inc
push
pop
jl
movsl
arpl
mov
sahf
and
inc
and
stc
mov
mov
sahf
add
and
outsl
xchg
shll
out
nop
movsl
scas
mov
push
push
ds
daa
popa
arpl
js
sti
add
in
ds
sub
bound
inc
int
loop
aas
inc
push
arpl
jb
fwait
cmpsb
aam
into
ret
lods
sti
fisubrl
inc
add
mov
dec
rclb
test
movsl
push
dec
add
mov
add
clc
icebp
idivb
adc
add
jl
out
dec
sub
inc
test
ss
loopne
mov
cmp
sti
lahf
inc
add
cmpsl
add
and
sbb
hlt
and
fs
shll
outsl
xchg
sbb
jae
mov
mov
mov
addb
inc
or
jb
hlt
mov
mov
repz
push
jp
push
push
inc
push
cmp
and
jge
ret
cmp
mov
icebp
inc
inc
fiaddl
mov
aad
pop
xorl
repz
sarl
adc
out
mov
inc
add
cmpsb
subb
andb
push
ja
repz
push
fisubl
xor
adc
cmp
xor
and
mov
xchg
push
loope
pop
fldl
push
xor
mov
mov
and
mov
arpl
push
dec
sbb
nop
imul
out
jmp
out
fwait
arpl
addb
inc
and
jl
push
movsb
loope
pusha
out
inc
test
pop
jle
mov
push
test
test
in
lds
lods
push
lcall
loope
jnp
in
adc
mov
push
pop
clc
ret
mov
testl
cmp
cmpsb
ja
push
inc
jle
test
add
fldl
test
movsl
call
scas
test
add
inc
push
inc
jge
inc
imul
dec
in
shl
in
popa
outsb
movsl
je
inc
inc
add
add
or
mov
int3
add
fdivr
out
or
inc
scas
stos
cmpb
add
js
xchg
xchg
cmpb
mov
sbb
mov
and
shl
in
sti
stc
jecxz
mov
inc
mov
and
sbb
sub
add
fsubs
js
mov
inc
data16
sub
lods
imul
lds
or
clc
sub
mov
icebp
mov
std
xchg
js
pop
es
xchg
jno
arpl
in
out
sbb
pop
mov
sbb
cld
pop
fimull
or
and
fisubrs
inc
fcomi
add
jl
jecxz
cmpb
pusha
add
xchg
subl
and
lods
pop
push
cmp
inc
mov
in
or
jne
cmp
ret
mov
lods
mov
cmpl
notl
test
cmp
jle
int
jmp
cmp
pop
pop
cs
cmpl
addr16
fs
addr16
or
lret
push
adc
mov
fdiv
xchg
or
push
in
adc
jnp
sti
inc
test
je
add
jecxz
popa
addr16
add
inc
sbb
addl
loope
lods
pop
stc
cmpb
jae
jno
and
ret
inc
gs
outsb
mov
jle
add
cmc
add
inc
pop
bound
fsubrl
ljmp
mov
add
jne
out
lods
test
outsl
push
out
adc
jecxz
jecxz
xchg
jne
and
pop
scas
xchg
aad
loope
mov
lds
mov
add
ficompl
fsubp
cmpb
cmpsl
xor
mov
cmpsl
add
and
in
in
bound
mov
fs
insb
mov
jbe
fiadds
mov
sub
cmp
lods
dec
icebp
gs
and
sub
sbb
push
es
je
pop
subl
lods
adc
add
and
jecxz
test
jle
xchg
xorb
test
fstp
cmp
ss
imul
sbb
loop
lea
jbe
mov
andl
mov
outsb
fdivr
inc
sti
cmpsb
pop
jle
jge
dec
inc
and
mov
mov
cmp
push
sbb
mov
cmpsl
test
xchg
xlat
pop
imul
adc
xor
add
scas
xchg
add
lods
fimull
and
mov
jbe
sub
xchg
push
jecxz
jae
in
cmp
add
movsb
cmp
jae
sbb
push
in
enter
mov
pop
mov
inc
nop
push
les
rcrb
xchg
jge
ret
pop
and
add
fadd
cld
inc
inc
pop
and
movhps
xchg
sub
ret
addb
lds
mov
rclb
add
xchg
push
in
adc
push
je
add
sbbb
jbe
cmpsl
scas
daa
jne
lds
arpl
jmp
popa
lcall
and
pop
out
out
xorl
lods
add
adc
mov
inc
pop
add
push
and
out
and
movsl
subb
mov
fadds
and
mov
pop
ret
popf
out
inc
andb
jge
pusha
andb
xchg
jno
insl
stc
test
and
jae
mov
and
arpl
enter
fs
mull
cmpsl
lds
push
roll
and
and
xchg
inc
addr16
aas
popf
hlt
jmp
inc
mov
dec
xor
sar
sahf
test
mov
add
test
je
add
movsl
aam
mov
mov
adc
movsl
faddl
mov
pushf
sub
add
jo
jne
xchg
cmpsb
data16
ret
mov
xchg
mov
subb
dec
add
movsl
dec
inc
nopl
jmp
push
aas
mov
xchg
and
cmp
jae
popa
test
cmpsb
inc
mov
add
popf
cld
mov
adc
cmp
push
stc
movsb
cmp
mov
mov
movsb
add
dec
gs
xor
cld
cmpsb
mull
addr16
mov
aaa
mov
imul
outsl
mov
clc
movsb
pop
shlb
test
and
ret
pop
mov
xchg
mov
es
cmpsb
scas
sbb
add
fiadds
jmp
mov
mov
jmp
and
cmp
bound
shrb
in
in
loop
aas
in
aam
js
je
stos
daa
out
mov
addb
cmp
std
jge
addl
ljmp
cmpsb
in
icebp
add
mov
mov
stc
movsb
loope
add
xor
add
push
adc
inc
or
jbe
stc
mov
or
jl
scas
mov
add
mov
int
outsb
in
and
fildl
daa
scas
xchg
fcoml
lea
movsl
cmpsl
mov
roll
and
shlb
and
icebp
shl
push
mov
jbe
pop
andl
sbb
andl
fwait
add
in
cmp
cmpsl
cmp
push
mov
push
add
rcr
cmp
jbe
mov
lea
cmpsb
popf
xorl
loop
cld
add
mov
ja
sti
loopne
jo
inc
or
roll
addr16
jbe
add
xchg
jns
movsl
mov
inc
sbb
imul
inc
addl
mov
inc
add
inc
mov
ret
and
xor
push
cmp
lds
or
test
or
ja
mov
nop
jae
insb
inc
rolb
xor
xor
pop
cmp
mov
les
ja
test
popf
pop
addr16
adc
inc
addl
imul
andb
cld
cmp
lods
add
inc
and
mov
ds
fsubrp
add
mov
in
mov
inc
daa
push
data16
loope
out
push
ret
mov
pop
les
xchg
scas
cmp
pop
in
jge
inc
test
outsl
add
xchg
or
jecxz
in
in
std
adc
push
inc
push
mov
inc
fs
push
hlt
cmpsl
mov
les
mov
cmp
js
adc
sar
or
and
add
data16
insb
fidivs
xchg
arpl
push
add
les
inc
xchg
es
cmpsl
inc
les
loope
out
xchg
xor
cmpsb
mov
add
mov
jle
jecxz
jle
iret
sbb
inc
xchg
or
add
addb
fsubrl
lods
xlat
es
rolb
mov
dec
jge
sub
push
loop
sarl
sub
cwtl
jae
cmp
in
mov
adc
xor
insl
dec
add
inc
mov
fdivrl
xchg
mov
test
xor
mov
xchg
cmpl
out
and
jge
and
or
add
cld
out
imul
test
ret
adcb
jne
mov
mov
mov
loope
out
push
pop
inc
dec
inc
jecxz
or
xchg
test
push
adc
inc
sub
loopne
pop
nop
pop
mov
jo
jp
fidivs
add
fs
mov
rol
xchg
dec
push
mov
sbb
push
pop
insl
pushf
inc
icebp
add
movsl
add
popa
inc
mov
add
inc
jmp
andb
es
adc
in
jns
dec
add
lea
in
sbb
dec
push
ja
fsubs
pop
cmpsl
testl
mov
jae
mov
push
les
repz
add
inc
mov
cmpsb
mov
outsb
movsl
adc
pop
lock
push
addr16
mov
bnd
nop
pusha
cmc
cli
mov
cmp
xchg
out
add
scas
add
out
test
jno
mov
repnz
inc
mov
add
pop
jmp
push
push
mov
pop
jle
inc
clc
lahf
pop
aas
sub
lds
out
push
xlat
incb
fldl
lret
cmpsl
sahf
push
push
int3
push
test
movsl
testl
pusha
sarl
inc
xchg
push
add
lds
mov
xor
mov
xchg
andl
outsb
test
and
scas
xor
fcmovnb
mov
mov
jnp
orb
ret
xchg
inc
clc
js
mov
dec
loop
cmp
sub
ds
mov
pop
movsb
cmp
push
and
pop
aam
mov
leave
cmpsl
jg
into
pop
jge
xorb
scas
mov
movsl
enter
adc
dec
test
jbe
out
inc
je
sbb
lcall
inc
push
shll
sarl
out
cmp
test
ss
mov
in
scas
addb
sti
insb
into
jns
pop
dec
jl
ja
mov
dec
mov
dec
repnz
aad
cmp
xchg
stc
sti
add
jae
std
pop
xor
jmp
push
andl
in
inc
pop
add
rcr
push
xchg
sub
mov
arpl
leave
in
xchg
inc
fwait
mov
lods
idivb
cmpb
outsb
xchg
mov
jle
mov
test
mov
std
jg
pop
xchg
out
shll
xchg
sbb
mov
mov
jle
scas
xchg
push
push
insl
lods
mov
sahf
scas
inc
jecxz
and
idiv
inc
xchg
push
in
and
xchg
and
mov
in
xchg
stc
int
and
stc
jg
addl
notl
jg
or
js
jnp
mov
lahf
out
cmpsl
xor
jmp
inc
neg
pop
xchg
int
shl
addl
add
movsl
stos
and
mov
test
xchg
sub
inc
sbb
adcl
jg
add
sub
inc
lcall
fldl
push
mov
add
jecxz,pt
inc
push
xor
sahf
psadbw
faddl
fs
push
jno
push
decl
mov
pop
inc
push
imul
inc
mov
pop
add
out
pop
std
xchg
ret
fsts
xchg
sarl
pop
lods
add
test
addl
push
pop
jno
out
imul
sbb
and
test
inc
stos
test
or
mov
xor
dec
addb
ret
test
shlb
inc
jb
mov
in
mov
xchg
rolb
in
enter
div
flds
clc
add
or
add
add
lods
lock
movb
fldl
pop
jecxz
js
pop
inc
push
lret
inc
cmc
test
mov
scas
inc
pop
jb
pusha
fldl
andl
js
movsl
inc
cmp
ret
jo
xchg
loope
jo
jbe
jle
dec
mov
pop
push
rol
inc
sbbb
cmp
inc
inc
push
adc
mov
inc
in
and
rolb
push
xchg
add
test
addb
add
push
lret
inc
cli
adc
andb
dec
push
ret
dec
jecxz
adc
call
insl
addb
lock
xchg
inc
test
lcall
inc
mov
xchg
mov
jmp
inc
enter
mov
ret
jle
xchg
jl
inc
roll
out
jns
pop
lock
js
xlat
adc
fildll
lock
addb
pop
pop
loope
loope
subl
xchg
add
ret
lock
lds
sbb
std
sbb
out
aas
std
movl
lahf
movsb
xchg
inc
test
shll
sar
xchg
jecxz
push
outsl
add
add
add
jl
sub
pop
jp
packuswb
cmp
xor
jge
addl
aam
xchg
inc
subb
addb
lret
icebp
push
xchg
inc
add
lret
cmc
test
inc
icebp
add
pandn
icebp
add
pop
jecxz
dec
std
cs
inc
inc
inc
sub
fsubr
sarb
lea
add
add
push
push
inc
jg
das
mov
inc
aas
andb
out
mov
loope
pop
mov
xchg
cmpl
out
enter
out
xchg
loopne
fldl
xchg
or
out
adc
jbe
inc
push
push
pop
cmp
lock
movl
push
pop
inc
repnz
inc
jge
movb
loope
mov
add
adc
or
inc
push
fldl
les
push
jp
cmp
jl
ret
test
je
inc
inc
lcall
std
movzwl
ds
jge
add
test
cmpsb
test
push
and
test
js
lea
adcb
jg
cmc
ss
outsl
andb
inc
mov
incb
cmc
xchg
add
rolb
inc
in
mov
cmp
cmp
jbe
fs
mov
mov
in
les
inc
nop
clc
test
in
ret
call
dec
inc
inc
out
pop
test
push
ja
pop
aad
lds
inc
ret
loopne
mov
jno
cmc
imul
in
push
xor
xchg
incb
mov
mov
cmpsb
ja
imulb
out
inc
divl
xlat
das
jnp
jo
pop
mov
jl
loop
pop
mov
pop
push
in
hlt
int
pop
out
in
movb
push
jle
int
jbe
notl
decb
mov
movsb
xor
int3
sbb
hlt
mov
loopne
loope
add
push
push
je
lds
mov
decb
and
addl
add
movb
inc
push
xchg
scas
std
push
jg
scas
std
xor
test
iret
adc
out
out
xchg
movl
inc
out
cmpl
add
jnp
add
xchg
addb
scas
call
movsl
jg
jmp
xchg
gs
andb
dec
jnp
jle
insl
imul
xchg
xor
xchg
ljmp
ret
in
pop
icebp
movsl
loop
incb
bound
mov
bound
movl
sarl
add
xorb
push
aam
and
jns
mov
dec
jb
sarl
push
add
add
decl
clc
inc
xchg
cwtl
xlat
lcall
out
pop
loopne
in
add
lock
jg
out
mov
std
pop
push
inc
shlb
xchg
roll
xchg
rol
idivl
into
out
add
mov
roll
js
pop
inc
inc
nop
jp
push
pop
gs
mov
imul
lods
addl
push
xchg
data16
mov
icebp
add
pop
jecxz
xor
scas
in
decl
push
js
call
loopne
aad
mov
js
add
xchg
inc
inc
sahf
jmp
movsl
mov
push
icebp
test
inc
movsb
data16
pop
test
shlb
cmc
dec
inc
lret
inc
add
inc
push
inc
sbbb
js
inc
add
jne
shll
out
cmc
lds
push
pop
flds
les
ss
inc
roll
cmc
ret
cmp
xchg
inc
cmc
test
sbb
jg
and
std
or
stos
jl
jmp
inc
mov
cmc
and
in
pop
fiaddl
addl
out
inc
popf
arpl
iret
out
cmpsl
scas
add
mov
enter
add
sub
cmc
hlt
inc
loope
ja
add
aas
inc
rolb
mov
push
movsl
or
test
push
hlt
xchg
xchg
pop
add
sub
push
push
test
or
and
xchg
inc
addl
sti
jp
mov
ret
in
popf
pop
inc
stos
in
addl
or
dec
add
cmc
lcall
pop
inc
xchg
jge
fcomi
add
out
add
test
movsl
cmc
inc
push
xchg
out
stc
xor
jge
add
test
xchg
scas
in
cmp
in
in
les
lret
xor
inc
jbe
arpl
outsl
subl
xor
dec
in
enter
std
mov
xchg
inc
rcll
xchg
jg
push
add
mov
inc
jp
test
jle
inc
insl
scas
sub
ja
insl
xchg
inc
loope
mov
fwait
ja
shl
int
icebp
add
scas
xchg
test
sbb
inc
in
add
pop
test
in
inc
cli
test
xchg
lds
shll
cwtl
pop
inc
ret
add
xchg
xchg
push
or
shlb
ret
jae
sbb
xchg
inc
mov
pop
in
jnp
hlt
inc
pop
adc
and
or
pusha
xchg
jne
inc
inc
pop
cmc
or
and
test
test
in
pop
mov
mov
inc
js
inc
ret
out
out
inc
test
jle
adc
cld
jno
jnp
fs
incb
loope
sbb
dec
cmpsb
inc
xchg
stos
fisubrl
mov
roll
sbbl
mov
test
out
out
fsin
add
loop
adcl
pause
daa
fnsave
mulb
jnp
fs
in
add
xor
incb
loopne
sbb
xor
mov
stos
loop
pop
mov
enter
test
add
in
sub
add
in
in
xchg
cmpsb
xor
push
daa
leave
jl
mov
ds
es
or
outsb
cmpsl
dec
movsl
ds
jne
lret
iret
push
cld
ds
jns
dec
mov
jnp
and
pop
adc
iret
lret
dec
cmp
loope
xlat
push
add
mov
push
cmp
cli
movb
iret
push
jb
out
test
addr16
int
clc
xor
xchg
inc
cmc
cmpl
jle
push
xchg
cmpl
jg
add
jnp
xchg
ds
add
test
in
arpl
bnd
jnp
in
popf
add
push
inc
jno
fistpl
cmpsl
ja
adc
sub
repz
mov
addl
ss
movl
add
in
add
or
out
addb
fildl
in
movl
add
cld
jmp
add
pop
std
push
mov
inc
roll
movb
addr16
push
or
xchg
pop
out
xchg
lods
addb
into
in
inc
mov
mov
inc
icebp
test
in
sar
push
in
jp
dec
lea
cltd
rolb
in
in
mov
add
test
jg
adc
inc
in
add
in
in
push
into
in
hlt
xchg
int3
inc
jmp
out
loope
in
pop
out
out
and
mov
ljmp
xchg
jnp
lea
inc
shr
mov
addr16
inc
add
inc
sbb
add
cmc
push
inc
xchg
push
nop
test
push
inc
push
aad
addw
jnp
add
mov
outsl
in
mov
inc
imull
inc
aas
inc
mov
ja
scas
sub
into
xchg
xchg
int
jnp
decb
mov
addr16
loope
cwtl
addr16
xchg
jae
shlb
cmp
inc
jnp
divb
scas
out
xchg
loop
pop
mov
outsb
out
lds
jnp
ficomps
mov
pop
mov
push
out
lds
push
decb
dec
mov
addr16
testb
push
add
xchg
xchg
cmp
js
clc
in
sti
mov
and
out
lds
jnp
pop
add
add
add
flds
insl
cmc
add
ljmp
sub
inc
insb
hlt
les
xchg
inc
jmp
std
pushf
gs
xchg
das
sahf
ja
gs
inc
daa
adc
incl
jmp
cmpsl
test
inc
xchg
repz
dec
das
add
push
xchg
lahf
or
mov
test
xchg
daa
or
cld
lds
jle
push
pushl
enter
jg
movsb
mov
xorl
lret
mov
pop
leave
sub
jge
clc
lcall
ret
add
es
jmp
mov
add
addb
in
push
mov
add
daa
and
call
or
or
add
or
and
mov
inc
inc
out
or
scas
test
or
ret
lds
jecxz
or
stos
lods
sub
int
dec
dec
mov
inc
out
or
scas
test
sub
enter
ret
inc
loop
or
stos
lods
sub
dec
div
jbe
xchg
xchg
or
adc
stc
jle
lahf
cltd
or
sbb
cmc
jb
xchg
xchg
or
adc
std
jp
fwait
popf
or
sbb
lock
xchg
nop
or
adc
clc
jg
sahf
cwtl
or
sbb
hlt
jae
xchg
xchg
or
adc
lcall
ss
rorl
push
push
mov
pop
pop
mov
xor
aad
push
push
mov
fisttpll
pop
pop
mov
aaa
xor
rorb
push
push
mov
fmuls
pop
pop
mov
xor
push
mov
fsubl
pop
pop
lcall
stos
mov
pop
push
into
push
pop
adc
out
shl
addr16
aad
rol
in
fiadds
sub
cld
pop
xchg
ret
jb
jp
xor
xchg
cltd
negl
iret
dec
jmp
mov
mov
sub
xchg
adc
xor
dec
push
add
ljmp
mov
mov
push
dec
jg
ret
fld
push
pop
movl
add
incl
dec
xchg
mov
bound
je
fsub
fldl
sub
xchg
data16
sahf
mov
inc
mov
movl
mov
sbb
test
jmp
outsb
scas
out
addl
add
xchg
xor
or
adc
xchg
aas
popf
orl
jp
ret
jge
hlt
jo
arpl
test
mov
ret
int
std
bound
lret
arpl
sbb
mov
push
xchg
int3
adc
arpl
jmp
or
mov
imul
inc
jnp
jle
cmp
sar
pop
ds
les
int
mov
pop
mov
jge
mov
add
or
aad
ja
int3
jbe
lds
pop
mov
cld
pop
daa
fs
repnz
or
mov
add
loope
gs
push
jo
sbb
mov
cmp
lret
arpl
push
cmpsl
idiv
inc
mov
jne
addl
mov
addr16
and
mov
fldenv
add
clc
sbb
add
notb
mov
fs
movsl
cmp
movb
je
cmpsb
xchg
mov
jp
sti
sub
fdecstp
mov
mov
stc
in
jnp
push
mov
gs
out
in
lods
aam
mov
jg
notb
pop
mov
out
lds
in
js
in
mov
or
ret
insl
jl
loope
lds
outsb
inc
idiv
jne
add
mov
jg
xchg
shrl
ss
push
ret
cmpl
negl
ds
fwait
arpl
adc
in
xchg
mov
andl
fistpll
or
and
aaa
ret
jg
lcall
mov
cmp
stos
jle
out
cmp
cmp
inc
mov
fcomi
jne
iret
xchg
and
vxorps
aad
add
inc
leave
jp
jae
dec
out
mov
cmp
mov
mov
paddd
loop
daa
popf
insl
pop
sar
xchg
insb
mov
jo
mov
inc
mov
in
int3
mov
out
inc
imul
mov
aad
fimuls
cmpsb
jle
fcmovb
jg
jg
or
out
test
xchg
ret
loope
outsb
inc
mov
push
push
cmp
rorl
flds
lock
cmpsb
pop
inc
ret
dec
mov
fs
dec
push
dec
fadds
sub
cltd
or
cmp
and
mov
mov
xlat
ja
out
push
into
repz
push
test
jg
ss
das
inc
in
in
cs
insl
cmp
and
mov
and
mov
push
inc
adc
add
scas
mov
std
aam
lea
jmp
jbe
addr16
mov
adc
cmc
cld
test
into
pop
repz
in
aad
mov
sahf
ja
outsl
lahf
lea
inc
subb
cs
inc
xor
or
je
cltd
lods
dec
into
cs
insb
test
xchg
mov
test
fcomps
rorb
nop
cmp
icebp
dec
int3
push
jp
mov
insl
jne
in
fstl
call
or
movsl
std
lock
dec
loope
ss
das
cmc
mov
faddl
mov
mov
out
sub
mov
add
mov
ja
cmp
jae
enter
xchg
or
movsl
outsb
ss
in
adc
mov
out
daa
test
push
and
add
mov
fs
push
fadd
fadds
cmpsl
xchg
inc
sar
sbb
incl
mov
mov
pop
pop
xchg
sbb
inc
ds
cmc
pop
fs
add
stc
insl
fs
mov
shl
loop
and
add
dec
xchg
loopne
pop
cmc
xor
mov
mov
lock
loop
in
push
ss
jo
shl
cwtl
mov
mov
push
mov
adc
mov
cld
subb
enter
addb
inc
cli
lcall
cld
add
inc
shrl
outsb
mov
repnz
jnp
cmp
sti
mov
sti
and
mov
xorl
xor
jnp
fneni(8087
nop
test
inc
inc
lds
outsl
adc
std
outsb
movb
jg
jle
test
testl
movsb
js
test
cmp
mov
in
in
pop
jecxz
mov
mov
mov
dec
mov
push
cmpl
jg
push
xchg
xor
testl
mov
ja
dec
or
cmpl
xlat
add
cmp
jle
sub
cmp
and
cmpsb
pop
clc
lds
cmpsb
std
jl
adc
cmc
inc
sub
push
mov
testb
xor
inc
lods
je
les
xor
out
psrad
adc
test
les
dec
or
insl
inc
sbb
loope
cmpsl
test
or
xlat
add
mov
loope
or
rdpmc
movsl
cld
push
push
ret
ljmp
test
rcrl
in
inc
shll
mov
jl
xchg
stos
or
in
insl
mov
cmc
out
jbe
sbb
add
test
pushf
stos
cmp
add
sbb
enter
jo
aaa
addl
fwait
icebp
inc
and
in
sbbb
lds
movsb
jecxz
push
sbb
add
test
or
rclb
in
les
add
inc
out
rorb
inc
loop
cmpsl
jmp
inc
ljmp
int3
inc
insl
sahf
in
sub
add
mov
inc
adc
rcll
and
xchg
sahf
daa
dec
addb
in
jae
sub
inc
fwait
xlat
imull
inc
inc
jns
incl
icebp
std
out
inc
in
or
out
addr16
inc
mov
int
add
pop
cmp
jge
out
inc
in
xchg
loope
jnp
sub
scas
jne
fwait
idivb
les
inc
push
mov
pop
cmpsl
inc
cmpl
mov
cmp
add
add
test
and
inc
stos
mov
movb
fstpl
lds
stos
mov
pop
adc
cmp
cmpsl
out
sarl
dec
inc
jle
jle
ret
lret
or
iret
in
in
lock
cmp
add
test
in
mov
or
sbb
in
fiaddl
xchg
test
test
add
popf
fdivrp
test
insl
mov
push
inc
mov
adc
jecxz
repz
in
movsb
cmpl
test
pop
inc
xor
in
jle
inc
icebp
pusha
repz
dec
inc
mov
hlt
pop
add
clc
in
subb
inc
icebp
jp
fstpl
gs
jae
mov
mov
cmpsb
in
sti
add
jns
insb
xchg
add
mov
xchg
jmp
rclb
inc
and
test
jg
enter
cwtl
mov
push
xor
push
pop
cwtl
xchg
mov
gs
and
in
or
xchg
ljmp
lds
fisttpll
leave
clc
ss
add
mov
pop
mov
movsb
int3
xor
int
aad
xchg
addr16
popa
xor
out
pop
mov
lods
xchg
mov
lods
lds
mov
xchg
cmc
sbb
cmp
ss
mov
push
aam
es
push
jo
orl
mov
mov
inc
mov
mov
stc
cld
inc
jecxz
inc
dec
lods
frstor
incb
movsl
das
daa
in
ret
movb
mov
add
pop
fildll
or
lds
xchg
add
inc
cmpsb
out
cmpsb
pop
fstpl
out
clc
cmp
in
xor
std
test
test
push
xchg
cmpsl
lds
insl
sbb
je
push
out
mov
movsb
mov
fdiv
std
test
cmpsl
loope
ljmp
aad
hlt
xor
ret
adc
add
movsl
xchg
in
jl
xchg
push
std
xlat
data16
pop
cmp
and
cltd
aad
jg
les
insb
addr16
cmpsl
lahf
gs
mov
loope
fnstsw
pop
push
mov
xchg
repz
pop
addl
lret
xor
ds
mulb
jl
iret
int
cmc
std
lea
pop
push
adc
push
in
gs
in
jle
dec
push
dec
jne
jno
data16
dec
push
jns
pop
and
inc
loop
push
ret
insl
loop
mov
or
int
pop
out
out
popf
std
cmc
ja
jne
xchg
shll
pop
addl
mov
sbb
hlt
mov
shll
out
dec
notb
sub
test
in
data16
stc
pop
dec
mov
addl
in
inc
rcrl
roll
shrl
sbb
cwtl
jne
lretw
or
xor
callw
fnstcw
cmp
mov
in
or
in
adc
jne
roll
add
aaa
bound
out
movhps
pop
repnz
lods
and
xchg
sbb
xlat
cmpsl
ljmp
test
push
add
dec
adc
test
stos
cmc
outsb
push
pushf
xchg
cmpsb
inc
fwait
lods
cld
lahf
pop
cmc
mov
cld
sti
cmpsb
aam
icebp
or
push
repnz
fmulp
je
add
popf
xchg
lods
icebp
xchg
pop
push
pop
adc
stos
inc
in
scas
sub
cltd
jmp
jle
jbe
out
jp
ss
fs
sbb
cmp
jno
nop
sbb
test
adc
incl
push
int
loope
sbb
rorl
cmpl
fnstsw
jne
lret
loop
scas
repnz
orb
or
pop
icebp
repnz
shl
into
mov
xor
mov
push
fildl
cmp
sarl
and
negl
cmp
lcall
fstpl
movsb
in
pop
push
fst
cli
test
xchg
pop
xchg
rol
cmpsb
mov
fs
test
or
cmp
scas
jbe
sahf
xchg
dec
es
lods
cmpsl
les
fsubrl
mov
jle
movl
scas
repz
inc
mov
and
andl
inc
test
loop
int3
mov
and
add
xchg
arpl
ljmp
jecxz
sti
in
gs
jg
and
inc
mov
xchg
aad
adc
jecxz
mov
xchg
iret
push
aad
xchg
notl
fcomip
pop
mov
pop
movb
iret
out
jmp
dec
mov
or
add
jl
mov
fst
es
and
sbb
cmc
or
fistpll
mov
or
inc
and
jne
cmpsl
pop
inc
fisubl
mov
bound
ja
cli
out
scas
mov
ja
aas
cli
pop
into
mov
xchg
fwait
add
mov
mov
jnp
lods
cmp
or
movsb
cmpsb
lcall
icebp
mov
loope
pop
movsl
cld
pop
and
daa
pop
mov
jecxz
sbb
dec
cmp
lcall
rorl
adc
addl
sti
pop
jno
mov
mov
xchg
std
inc
int3
jg
lret
aad
loope
outsb
insl
lods
jle
cmp
filds
out
pop
or
out
das
xchg
xchg
leave
into
outsl
mov
aaa
xchg
movsb
xchg
mov
cmpsl
out
icebp
sub
sarb
xchg
loope
idivl
ja
dec
stos
inc
mov
inc
idivb
scas
faddl
test
les
in
scas
rol
fbld
fcoms
add
pusha
xorl
addr16
and
and
out
fiadds
add
test
ret
add
add
addr16
sbbl
fistpll
addr16
pushf
popf
std
cli
ret
push
jnp
pop
in
test
addb
xor
in
jle
fsts
int
and
pop
out
and
push
les
jae
inc
loop
jg
jae
daa
in
sbb
jb
dec
jnp
pusha
mov
ret
les
cmp
ja
test
sub
jecxz
imul
xchg
addr16
xchg
test
inc
ljmp
in
shlb
cmpb
add
fstpt
inc
push
movsl
inc
shlb
inc
roll
repz
inc
arpl
sti
movsl
xchg
push
clc
inc
rorl
in
test
mov
add
push
movsl
inc
shlb
es
mov
inc
cmp
cmpb
jo
cmp
lea
xchg
inc
mov
inc
bound
in
arpl
inc
and
inc
add
inc
add
inc
pop
addb
and
inc
and
adc
push
ret
inc
inc
lcall
push
xchg
xchg
ret
mov
add
lds
inc
inc
adc
movsl
insl
inc
addr16
dec
fstpt
push
movsl
test
insl
inc
inc
jb
pop
loopne
sbb
movsl
sarl
sub
js
dec
push
or
testb
jp
addb
sub
jl
sub
shlb
addl
inc
addr16
aas
mov
mov
roll
add
xlat
jg
cmp
mov
xchg
mov
sub
mov
test
add
lds
test
and
mov
in
andl
das
loope
xor
in
cmp
jo
inc
icebp
lds
loop
in
add
insl
test
addl
inc
jl
sub
shlb
addb
add
mov
in
xchg
insl
mov
das
ret
test
add
mov
fildl
add
dec
lock
push
test
movsl
andl
add
mull
out
inc
js
and
inc
lock
sti
in
movsl
addr16
cmp
pop
std
ret
mov
test
shll
sbb
inc
jg
sbb
mov
inc
addr16
mov
or
fucomip
and
andl
arpl
shlb
sub
rclb
inc
jno
movsb
inc
sub
mov
adcb
inc
adc
in
jbe
test
test
mov
push
in
shlb
les
or
adc
adc
test
in
shll
add
subb
or
in
cmp
xchg
test
push
or
les
addb
push
sti
in
movsl
xchg
inc
add
rclb
ss
add
addl
add
test
paddusb
loopne
cmpl
xchg
lock
sti
add
push
inc
mov
out
cli
shll
addr16
inc
adc
xchg
add
push
lds
addr16
add
fndisi(8087
inc
sbb
add
addr16
in
out
rolb
mov
repnz
ret
add
out
push
add
xchg
add
ret
xchg
pop
nop
inc
sti
cmpsl
inc
lods
push
scas
inc
testb
fbld
ret
add
filds
jne
and
inc
pop
lret
jnp
and
lret
jnp
and
mov
ret
push
fldl
xchg
inc
jg
ljmp
push
loopne
dec
out
xchg
out
add
ret
inc
loop
mov
add
insl
add
test
pop
xchg
mov
ret
fbstp
movb
fwait
loopne
push
clc
fisubrl
ret
add
add
test
roll
test
idiv
rcll
das
roll
out
adcb
xchg
movl
cld
les
in
lds
fldl
aam
xchg
mov
jecxz
mov
div
in
lcall
jmp
dec
add
add
lret
push
fldl
out
inc
fldcw
test
xchg
fxtract
add
inc
or
inc
es
insl
add
adc
addl
add
xchg
push
adcb
movl
sbb
or
mov
ret
cmp
xor
dec
inc
addb
inc
mov
pop
add
scas
dec
xchg
andb
xchg
ffree
test
ja
into
aam
cmpb
out
mov
fldl
mov
loope
inc
test
fwait
icebp
add
rcrb
mov
and
jnp
fadds
push
inc
movw
out
lds
ljmp
push
or
cmp
daa
xlat
mov
inc
loopne
je
out
mov
fdivrl
xchg
add
mov
addl
inc
inc
push
mov
fcmovnb
inc
stos
and
movb
addl
jo
dec
addl
mov
xchg
roll
nop
jl
add
xchg
rcll
xchg
push
flds
jbe
xchg
lds
daa
sub
inc
fwait
loopne
je
mov
ret
ret
js
mov
mov
subb
sbb
add
aad
lock
inc
xor
cmp
cmp
cmp
inc
int3
push
mov
insb
icebp
xchg
dec
addr16
test
roll
inc
ret
arpl
je
xchg
add
pop
pop
add
shrl
idiv
aad
jo
ds
daa
xlat
mov
ja
shl
jg
in
fistpll
movsl
xor
mov
out
lds
in
lahf
mov
and
jnp
testb
ja
out
lds
imull
jg
testb
ja
out
lds
jnp
test
aas
push
mov
das
lds
testb
and
pextrw
mov
inc
cmc
movl
inc
xor
in
lds
add
loope
data16
cmc
loope
test
in
adc
in
xor
in
ret
loope
push
loope
loop
in
jb
in
add
in
xchg
loope
and
in
mov
in
inc
loope
xlat
sbb
js
idivb
xchg
push
js
movsl
js
xor
inc
push
js
jecxz
inc
jae
inc
add
xchg
js
and
mov
push
jg
inc
fistpll
arpl
add
xchg
mov
inc
cmpl
scas
inc
xchg
inc
out
dec
mov
lods
jb
mov
addr16
ja
push
xchg
jnp
pushf
std
xchg
xchg
inc
scas
xchg
xchg
cmpsb
test
aad
clc
test
and
jb
pop
pop
test
add
ret
loope
or
lods
push
mov
mov
add
frstor
movl
and
mov
adc
xchg
loope
mov
xchg
orb
in
cmpb
jnp
lea
ja
bound
jp
sub
and
add
dec
jg
out
adcb
out
leave
sarl
lods
sbb
jg
cld
jg
mov
in
inc
cmp
or
loopne
push
mov
inc
or
js
add
inc
pop
mov
mov
sub
pop
out
pop
outsb
out
pop
cs
pop
in
xchg
add
into
jg
pop
loopne
test
xchg
std
cmp
cmc
add
add
sub
jge
pop
jp
mov
ja
inc
mov
lds
add
test
push
push
inc
adc
out
stc
vpackuswb
leave
leave
into
ret
leave
mov
push
cmp
insb
les
test
push
adc
pop
jmp
addr16
inc
mov
sbb
jbe
scas
out
mov
add
shrl
mov
mov
hlt
fcomip
jp
xchg
jle
lock
pop
jle
push
add
dec
fwait
icebp
test
jle
movsl
mov
rcrb
lds
roll
mov
sarl
loope
mov
xchg
lock
roll
inc
xchg
jmp
inc
flds
rolb
loop
ffree
lds
js
or
inc
dec
movl
push
jne
mov
adc
add
adc
add
adc
add
incb
pop
loope
xor
jnp
push
inc
js
in
jbe
adc
mul
fs
ds
adc
arpl
jb
dec
addl
inc
dec
jnp
shl
out
xor
dec
inc
ret
xor
inc
lock
xchg
add
in
jg
push
rolb
mov
mulb
sub
jb
test
test
ds
movb
jp
fldl
sti
stos
and
cli
js
mov
push
icebp
push
sub
addl
and
cmp
rol
into
pop
shll
or
inc
jnp
and
inc
inc
insb
js
adc
inc
mov
jg
inc
cmpb
mov
jo
pop
inc
stos
add
and
push
add
dec
in
ret
hlt
push
cmp
add
push
jb
dec
addl
add
inc
das
roll
out
lds
inc
fcomi
add
jns
push
into
sbbl
add
test
cmp
movsl
add
addb
inc
js
xorb
fldl
arpl
aad
clc
xchg
out
shll
inc
testb
rol
inc
les
fld
lods
push
out
add
stos
inc
jo
dec
arpl
jb
dec
jnp
and
out
or
add
rol
int
out
adc
out
test
pop
incb
or
inc
fstpt
insb
cmc
je
cmpb
scas
roll
addl
push
in
jecxz
xchg
in
loope
incb
loope
in
lret
hlt
out
test
addl
test
adc
pop
add
jne
cmc
cmpsb
inc
aad
clc
add
stc
jl
out
inc
loope
stc
in
push
loope
incb
adc
icebp
andl
ret
ret
dec
out
rol
inc
xchg
js
or
inc
roll
jnp
inc
inc
add
icebp
das
mov
add
test
scas
ret
add
ret
dec
jnp
mov
add
xor
cmp
test
lock
cmp
roll
loopne
lds
jmp
add
xorl
inc
cmp
cmc
jmp
inc
mov
hlt
loope
jg
jo
dec
mov
push
mov
outsb
ja
loope
rcl
or
sub
leave
sarb
mov
hlt
iret
mov
out
pop
pop
roll
outsb
mov
cmpl
ret
leave
or
leave
pop
ret
leave
add
leave
stos
ret
leave
push
ret
leave
cli
ret
leave
mov
leave
icebp
ret
leave
cltd
ret
leave
inc
ret
leave
call
mov
out
lcall
dec
ret
leave
test
sahf
ret
roll
in
in
mov
out
lds
in
mov
into
testb
ja
out
lds
cmpsb
mulb
in
leave
mov
mov
sbb
test
jle
mov
inc
mov
outsl
xchg
inc
inc
out
mov
push
mov
sub
inc
dec
mov
imul
mov
test
inc
enter
mov
inc
mov
sahf
mov
mov
ljmp
sub
inc
shll
and
or
leave
clc
add
add
subl
ret
mov
or
mov
push
or
arpl
xchg
incb
loopne
mov
and
mov
and
loopne
mov
mov
inc
mov
test
out
add
jmp
jno
inc
jns
test
shr
pop
jnp
pop
and
leave
jb
leave
sbb
leave
rol
imul
mov
leave
add
icebp
mov
jle
lock
movsl
scas
mov
inc
push
mov
int
mov
int
mov
int
mov
int
mov
leave
pushf
mov
leave
inc
mov
leave
jmp
inc
leave
xchg
mov
leave
cmp
mov
out
add
rcrl
inc
add
or
lds
lods
call
pop
mov
inc
mov
test
xchg
pop
dec
add
test
lcall
stos
sahf
add
pop
xchg
roll
daa
aas
stos
daa
push
mov
mov
insl
lock
mov
mov
jnp
push
inc
inc
mov
arpl
aad
clc
xchg
xchg
or
jb
cmp
add
test
inc
lret
jnp
and
add
int
out
inc
cmp
xchg
cltd
lock
cmpsl
xchg
inc
mov
lds
xchg
inc
into
int3
or
xchg
cmpb
scas
test
inc
push
gs
scas
cmp
cmpsl
xchg
and
lock
dec
mov
inc
lea
scas
test
leave
or
cmp
xchg
subl
fidivrs
or
push
push
into
xchg
les
in
js
add
cmpb
inc
add
jnp
and
lret
les
movl
inc
mov
shl
cmc
cmc
pop
in
jb
push
rcrl
add
flds
bound
subl
cmp
jecxz
xchg
jg
adc
out
or
add
dec
pop
clc
ret
addl
dec
lea
shl
inc
inc
jo
div
cld
lea
test
loope
jns
incb
adc
les
aam
lods
in
xor
ja
hlt
inc
add
aad
mov
daa
les
add
add
inc
hlt
into
aam
push
xorb
movsl
inc
inc
fcmovnu
add
shl
jno
jg
int3
clc
jns
inc
xlat
mov
in
add
cmpsb
xchg
enter
dec
push
pop
out
ret
add
in
aad
movsl
xchg
inc
into
sbbb
xchg
and
int3
mov
fwait
loope
fs
roll
inc
lret
jg
and
lret
jnp
and
xchg
in
sbbl
popa
and
add
mov
insl
add
ret
mov
add
add
out
add
xchg
dec
inc
out
cmp
fidivrs
roll
jecxz
insl
outsb
xchg
push
adc
jl
movsl
xchg
rolb
inc
insb
adc
je
inc
jnp
mov
xchg
or
xchg
push
cmp
mov
inc
cmp
xor
fadds
out
hlt
mov
inc
pop
in
xor
mov
and
fwait
loopne
test
out
ret
arpl
arpl
jnp
shll
es
clc
xorb
inc
dec
xchg
lods
movl
scas
out
outsl
jnp
adc
inc
addb
pop
shrl
orb
sub
or
addl
jo
inc
inc
pop
pop
cmpb
inc
inc
leave
add
add
sbb
les
inc
fldt
cmp
mov
add
dec
loopne
mov
scas
add
ret
push
add
stc
inc
mov
outsl
and
loope
rorb
lods
and
outsb
inc
out
loope
mov
call
mov
sub
inc
dec
js
fstpt
outsb
shrl
cli
loope
mov
in
sbb
in
test
in
enter
jg
cmp
out
sbb
fwait
xchg
pop
je
movb
jg
inc
test
sbb
mov
push
jb
cmp
inc
movsl
movl
and
xchg
inc
scas
or
inc
mov
faddl
roll
cs
mov
nop
jl
add
incl
inc
mov
fcoml
rol
je
push
xchg
inc
jo
ds
jg
and
xchg
mov
xchg
mov
or
mov
xchg
xchg
sbb
aas
jge
out
out
int3
test
dec
jnp
rol
imul
jnp
shll
xchg
dec
jg
rol
push
add
ffree
out
pop
xchg
sub
sbb
fwait
loopne
sbb
fwait
loopne
adc
scas
inc
cmp
inc
nop
mov
movsl
movl
test
xchg
cmp
inc
mov
or
insl
test
mov
dec
addl
xchg
inc
mov
and
jnp
roll
inc
das
loope
lock
out
loope
rcrb
loope
xor
out
flds
jg
testb
push
faddl
movb
inc
mov
inc
and
add
and
inc
divb
and
repnz
dec
in
xor
jae
insb
les
mov
mov
mov
mov
add
inc
mov
popa
mov
out
jl
out
lds
out
test
lret
jg
and
lret
jnp
and
jnp
and
ret
jnp
and
add
aad
and
cmp
sub
inc
lcall
clc
loopne
cmp
dec
out
cmpsl
pop
loope
cltd
mov
call
inc
popa
loope
xchg
pop
ljmp
pop
push
push
addb
ret
ljmp
inc
fcomps
shl
pop
int3
or
inc
inc
xchg
cmc
imull
and
ret
imul
or
add
inc
loopne
add
int
ret
loope
cmpsb
icebp
inc
rorb
inc
shr
add
iret
jmp
jp
and
inc
cmp
add
mov
in
shl
fstps
mulb
push
aad
jb
div
push
daa
out
enter
inc
scas
test
cmp
cmp
out
add
out
sarl
out
cmpb
jg
sarb
daa
ss
mov
loopne
vmovups
xchg
add
cmp
cmp
loopne
lds
jecxz
mov
vsqrtss
add
test
push
dec
loope
mov
loopne
rorl
fnsave
mov
scas
xchg
cli
inc
cli
lds
rclb
inc
mov
out
movsl
jnp
sar
ret
fcmovb
jnp
and
lret
jnp
and
ret
test
bound
mov
mov
inc
and
stc
enter
cmp
out
cmpb
test
in
jmp
movsl
xchg
jle
sarl
mov
inc
xor
inc
jb
ds
lds
mov
and
inc
cwtl
dec
xchg
loope
les
inc
jo
dec
andl
shl
mov
addr16
nop
dec
xchg
jo
dec
andl
inc
dec
jnp
shl
add
in
iret
jmp
sub
addb
daa
push
inc
inc
jb
ds
in
xchg
out
ret
push
mov
scas
add
orb
jo
out
shlb
fsin
inc
add
fdivs
inc
jecxz
sub
loope
ret
inc
adc
jp
sbbb
inc
mov
into
int
out
ret
add
out
add
mov
inc
xchg
ret
lock
insl
daa
mov
sub
loopne
mov
orl
mov
pop
add
or
pop
cmp
ret
test
std
sti
dec
and
mov
add
setbe
adc
xor
jno,pn
mov
popa
jle
or
inc
stc
mov
add
push
or
cmp
push
or
sub
inc
or
cmpsb
add
pop
addl
or
dec
outsl
mov
subl
or
pop
and
mov
fwait
or
loop
in
mov
cmp
or
fisubrs
xor
sub
notb
movsb
in
lret
aad
ds
test
or
popa
push
adc
rcll
test
imul
enter
or
repnz
sbb
xchg
lods
je
push
push
inc
leave
mov
jle
data16
pushf
rorb
ret
test
repnz
push
aam
xor
or
adc
inc
jae
daa
sub
or
sub
mov
insl
es
cmpsl
out
scas
inc
rol
mov
in
ja
xchg
cmp
sarl
inc
cmp
push
pop
xchg
loope
and
nop
jnp
notb
push
mov
cmpsl
and
in
adc
jb
ret
outsb
pop
cli
adc
jg
mov
out
movsl
cmpb
jecxz
test
adc
mov
xchg
out
inc
test
popa
nop
stos
repz
jnp
testb
adc
out
lds
mov
adc
andl
inc
outsl
divl
std
nop
sarl
daa
mov
inc
jnp
mov
shl
andl
mov
call
add
xchg
icebp
add
jno
mov
arpl
repz
in
inc
ja
mov
movl
inc
mov
mov
not
in
movsb
mov
jbe
pop
jnp
div
pop
pusha
cmpsl
in
popa
mov
and
jecxz
inc
testb
sarl
in
cmc
mov
divl
imul
add
jnp
mulb
ja
out
and
jg
mulb
in
push
mov
jecxz
push
jnp
div
in
cmpsb
mov
jg
andl
mov
mov
rol
push
jnp
divb
ja
out
lds
das
inc
sub
idivb
mov
je
add
in
idivb
divl
mov
sti
cmpsb
ja
out
lds
in
add
xor
mov
xor
shll
in
test
jp
rcll
mov
jnp
xor
je
mov
mov
int
push
push
out
mov
and
jo
sarb
mulb
aam
mov
test
adc
push
jnp
mulb
in
and
mov
sti
divb
out
lds
in
adc
mov
mov
add
fs
xchg
ja
out
addr16
pop
cmp
ja
out
lds
ret
outsl
aas
mov
adc
xor
in
adc
out
lds
jnp
das
and
jnp
mov
mov
mov
arpl
testb
mov
mov
pop
jnp
inc
adc
jo
shlb
out
lds
ret
in
je
adc
daa
test
roll
mov
cmp
push
mulb
xchg
ja
out
and
addb
cmp
mov
inc
divb
out
out
ret
pop
hlt
cmp
rolb
mov
pusha
not
jg
ja
pop
jnp
notb
jecxz
adc
popa
not
in
movl
ja
out
lds
in
repnz
add
jo
xlat
outsl
push
in
mov
and
and
adc
add
nop
mov
lds
jnp
divb
ja
out
movsl
mov
mov
mov
pusha
test
push
xchg
int3
je
fdivl
shl
mov
cmpsl
testb
xchg
cwtl
jecxz
mov
mov
mov
in
cmp
mov
mov
xchg
mov
cld
sbb
lds
mov
jne
or
cmpsl
dec
pop
xchg
or
mov
out
cli
sub
adc
inc
mull
sbb
clc
jbe
add
push
lods
shrl
aad
lahf
xchg
ret
mov
mov
fs
scas
or
ljmp
add
xchg
xchg
movsb
jmp
inc
add
fnstsw
int3
jo
out
insb
negl
mov
movsb
call
or
add
or
adc
dec
pop
inc
dec
or
call
flds
or
xchg
test
xor
and
mov
mov
or
es
push
test
out
xchg
ljmp
inc
xchg
ss
inc
imul
pop
call
sub
jo
jecxz
les
inc
inc
push
fimuls
and
sub
mov
gs
aaa
pop
push
adc
cs
xchg
rcr
mov
add
sub
or
repnz
add
xchg
sahf
or
push
outsb
out
addr16
mov
or
mov
xchg
pop
xchg
addl
rorb
xchg
lcall
xchg
cmpb
add
push
add
fimull
mov
sub
jl
out
and
leave
or
data16
sarb
inc
ljmp
sub
das
call
ficoms
adc
insl
mov
sbb
jmp
mov
jmp
insb
mov
std
sub
out
xor
mov
cmp
mov
ljmp
jg
or
inc
lahf
scas
or
fdivr
pop
xorl
cmp
inc
mov
and
push
adc
xchg
sub
pop
mov
sbb
adc
call
subb
or
and
mov
rol
add
daa
out
and
js
shll
or
or
es
fidivl
jnp
pop
or
arpl
push
rcll
inc
pop
aam
inc
mov
push
mov
push
dec
bound
jge
popf
repz
aas
test
into
mov
imul
pop
in
sub
mov
sbb
or
mov
outsl
and
or
or
sub
jmp
out
faddl
inc
or
test
movsl
push
repnz
ret
popf
cmp
adcl
jae
mov
xchg
aaa
or
or
sbb
add
sti
and
addr16
test
rcr
rclb
enter
les
out
imul
lock
fcompl
scas
jl
xchg
insl
or
stos
pop
or
inc
and
aaa
nop
jae
and
fwait
sub
push
sbb
ss
out
jmp
xchg
loopne
lds
dec
rcl
cmpsl
inc
xchg
add
xchg
lods
jle
mov
add
imul
lods
cmpsb
add
cmp
and
and
lret
in
ret
mov
xchg
add
outsb
fstl
mov
pop
xchg
loop
out
jbe
cmpsl
sar
mov
dec
mov
movsl
jbe
popf
adc
and
adc
push
outsb
add
movsb
xor
inc
xchg
aam
mov
ds
fistl
lret
mov
movsb
mov
popf
je
pushf
push
gs
or
or
sbb
fucomp
push
sbb
stos
adc
xchg
push
aad
xchg
xchg
sbb
test
inc
or
out
bound
dec
add
ret
jp
mov
cmp
add
imul
test
mov
call
inc
xchg
popa
jg
or
cmp
push
mov
lea
or
inc
mov
dec
mov
sub
adc
aaa
loope
jne
jno
jecxz
push
sahf
cltd
lds
mov
pop
aad
iret
filds
decl
add
and
into
popa
lods
or
add
add
pop
sub
das
mov
push
xor
or
fwait
add
scas
cmpl
or
mov
inc
cmp
int3
mov
out
fsubs
pop
push
or
sub
iret
xchg
xor
mov
or
mov
push
cld
jne
or
push
pop
pop
data16
mov
push
mov
rorb
lcall
xchg
jl
or
int3
inc
ljmp
jp
pop
mov
test
cmpsl
shl
stc
pop
lret
decl
sub
dec
cmp
inc
dec
pop
dec
mov
mov
mov
lret
shrl
xchg
ds
daa
mov
adc
outsb
or
push
data16
sub
out
lret
cwtl
adcl
hlt
inc
mov
in
cld
pop
or
sub
push
push
jge
inc
ja
add
or
ljmp
cmp
out
adc
jb
fwait
xlat
pop
nop
and
and
sbb
scas
mov
xor
mov
push
jae
fbstp
xchg
jno
inc
fcmove
out
les
lea
sub
or
js
xor
fwait
jge
scas
or
out
outsb
or
jns
xor
and
and
jmp
mov
cltd
shlb
or
or
lcall
or
movsl
jmp
mov
adc
adc
clc
mov
xor
pusha
mov
xchg
popa
or
test
clc
out
ror
stos
add
push
leave
mov
add
jmp
or
out
sub
nop
jge
popa
xorl
dec
adc
test
mov
dec
dec
sbb
jbe
out
pop
or
mov
add
push
imul
imul
or
pop
loop
mov
sti
or
xchg
adc
push
or
mov
sbb
out
mov
shll
iret
lds
out
shr
ret
out
jp
cli
sub
mov
sbb
in
sub
iret
mov
subb
notl
xor
rol
xor
cli
es
xor
lods
pop
or
sti
mov
cmpsl
sbb
push
scas
repz
das
mov
insb
loop
fs
sbb
sub
fildl
xchg
pushf
rorb
mov
or
icebp
leave
roll
mov
loope
add
scas
imull
pop
and
add
sahf
stos
xchg
mov
push
sbb
add
into
inc
pop
lods
or
xchg
push
rol
mov
xchg
lds
shrb
adc
ret
out
fdivs
and
out
jle
cmpsb
addr16
ficoms
int
xor
idivl
push
fsts
pop
loope
les
lock
mov
lods
or
fadds
mov
lret
in
outsl
jle
dec
add
fsts
scas
or
jnp
imul
out
mov
dec
ret
sbb
inc
test
fdivp
inc
sbb
addl
cs
repnz
add
xor
setbe
jnp
jae
or
imul
pop
mov
dec
scas
xchg
sbb
movsb
loop
and
and
ret
es
call
addr16
test
dec
or
sbb
inc
mov
cmpb
in
xor
push
jnp
hlt
and
nop
xchg
inc
das
mov
pop
cmp
in
clc
sahf
scas
xchg
pop
test
xchg
in
es
add
test
or
je
mov
addr16
or
and
add
mov
push
cmp
or
fsubs
ja
bound
mov
cmpsb
xlat
fldl
or
add
inc
and
iret
not
leave
call
lods
add
daa
outsl
or
jecxz
ret
mov
sahf
in
xor
fisubrs
push
leave
incl
sbb
or
cs
pop
dec
or
stos
outsb
mov
jnp
mov
jg,pt
andb
inc
or
loopne
pop
insl
rcll
mov
lods
or
dec
add
sub
push
sti
jne
xchg
test
jae
add
dec
das
iret
push
call
add
inc
mov
insb
cmp
addr16
notl
aaa
push
jle
lcall
rolb
xchg
jge
and
add
bnd
cmp
mov
pop
mov
add
aaa
ret
int3
push
ljmp
push
cli
scas
imul
leave
jne
pop
movsb
jae
mov
pop
cli
lock
or
pop
sbbb
or
add
mov
mov
add
push
call
lods
fmul
sub
or
mov
fsts
xchg
xor
inc
sbb
cmp
lock
jno
pop
or
mov
and
add
fistpl
or
in
lock
add
jg
or
xchg
data16
icebp
mov
cmc
incl
nop
pop
jecxz
xchg
popa
cli
jne
xchg
or
insb
inc
pop
stc
sub
xchg
xchg
icebp
dec
jno
add
fbstp
or
or
hlt
push
mov
mov
lcall
push
subl
cmpsl
jp
mov
filds
push
test
inc
push
mov
aaa
popf
popa
xchg
ret
inc
xor
inc
mov
lea
pop
xchg
jg
jecxz
idiv
test
cmp
into
add
insl
xchg
mov
mov
stos
push
orb
in
aaa
sub
out
dec
shll
and
or
sub
adc
jo
jae
adc
and
push
fdecstp
imul
ljmp
fwait
xchg
add
repnz
repz
iret
movsb
pop
loope
xchg
sub
jae
push
mov
mov
int3
out
int
clc
or
subb
xchg
or
ss
dec
daa
and
or
enter
lret
sti
cmp
ret
lcall
cmpsl
inc
jg
push
mov
or
mov
jns
pop
insl
in
adc
int
pop
and
out
insb
mov
xlat
push
jnp
stos
sahf
xor
mov
bound
jns
push
repnz
mov
out
in
fildl
add
or
js
xchg
pop
add
pop
push
add
pop
xchg
dec
fsubl
xlat
mov
outsb
loopne
adc
or
leave
inc
mov
cmpl
inc
or
lods
or
jbe
cmp
inc
aam
or
mov
or
or
loope
add
filds
jbe
sub
adc
movsb
popa
out
and
es
mov
aas
iret
ss
inc
jb
and
cwtl
cs
mov
repz
in
fwait
or
lcall
push
lret
xchg
stos
jne
add
adc
scas
cmp
add
sbbl
inc
mov
jb
cmp
cmp
push
lock
inc
data16
movsb
mov
and
xor
fincstp
add
rorb
outsl
inc
inc
jg
pop
mov
repz
mov
out
cmp
out
and
leave
push
out
sub
or
push
lcall
aaa
push
ja
add
or
cs
call
add
pop
sub
lods
sbb
cld
je
or
and
lock
fxsave
js
or
inc
cs
push
xchg
pusha
bound
sub
sti
adc
scas
sub
popa
add
repnz
out
call
pop
and
push
push
add
mov
xor
or
push
or
fs
ret
push
add
addr16
add
mov
cmpsl
adc
mov
xor
mov
push
mov
out
cmp
and
mov
jecxz
lock
ss
or
out
push
or
movsb
shufps
sub
inc
pop
in
mov
loopne
mov
out
fsts
add
or
addb
inc
mov
mov
mov
pop
das
or
jae
daa
or
jmp
cmpsb
aas
pop
ja
in
cwtl
or
pop
enter
or
add
mov
mov
pusha
add
or
cmc
mov
mov
dec
movl
xchg
cmpb
add
fisubl
repnz
xlat
pusha
add
jae
push
jp
imulb
push
fsubs
lods
push
or
in
scas
jns
inc
into
lret
xchg
push
push
mov
jne
add
or
stos
xchg
popf
test
out
mov
adc
add
push
cmpsl
mov
fidivrs
lods
inc
je
sbb
fiadds
or
pusha
push
pop
idivl
es
stos
or
jnp
ret
test
jmp
pop
push
xor
mov
jo
out
pushf
cltd
cs
cmp
add
jno
add
sbb
shlb
and
cmc
jl
mov
repz
add
das
adc
push
popa
xor
movsl
divl
pop
push
dec
cs
ja
out
xchg
pop
pusha
adc
or
sbb
aam
std
jo
addb
pushf
iret
int
pop
fisttpl
fidivl
dec
cli
xchg
dec
pop
push
or
lcall
push
jae
int3
or
daa
cmp
stc
imul
imul
xchg
cld
std
and
or
lret
in
or
jns
scas
leave
mov
add
cltd
or
outsl
mov
dec
adc
add
xor
mov
add
or
sbb
dec
ret
adc
mov
add
int
popa
sbb
push
or
or
sbbl
sbb
or
add
add
pop
pop
cmp
cmc
mov
fildl
divl
lea
out
insb
out
int
sbb
mov
sub
in
test
pushf
cwtl
push
es
lods
xchg
xchg
or
xchg
je
inc
bnd
addl
cwtl
jns
pop
or
fsubs
cmpsl
add
rcl
outsb
push
adc
sbb
add
adc
or
fisubrl
fsubrs
inc
imul
or
cmpsb
std
popf
xchg
lock
inc
pop
or
stc
mov
data16
div
lds
roll
ds
ja
jmp
jbe
add
imull
ficompl
add
push
xor
outsl
xor
fbstp
std
clc
mov
mov
or
js
mov
pop
mov
loopne
pop
imul
movsl
icebp
clc
sarl
fs
or
pop
mov
les
pop
rorb
xor
in
popa
jne
je
out
cmp
rep
xchg
add
push
dec
lods
loop
add
inc
inc
or
mov
nop
and
add
push
mov
fimuls
ljmp
sti
neg
xchg
divl
fsubrl
iret
fbld
shrb
mov
or
mov
sarl
neg
sbb
sbb
sbb
mov
xlat
mov
ljmp
pusha
and
arpl
push
or
bound
scas
and
mov
lds
xchg
sahf
bound
insl
add
pop
shl
lcall
push
idivl
add
jbe
cmp
dec
bound
mov
xor
jae
jg
lret
stc
aad
loope
outsb
add
jbe
xchg
das
jnp
or
mov
push
and
inc
pop
or
out
sub
jne
outsl
add
or
lcall
adc
mov
enter
pop
sbb
sti
add
lock
and
jp
push
dec
mov
xor
es
sub
or
in
enter
mov
add
sarb
mov
aad
jmp
jae
jl
xchg
shlb
in
and
in
sbb
fisttpl
bnd
cltd
cmp
lahf
add
int3
out
or
adc
adc
in
mov
hlt
jmp
cmp
enter
adc
xchg
mov
xchg
or
push
xor
aas
mov
pop
add
shll
arpl
or
das
int3
movsb
out
push
or
or
sub
rcrl
push
push
rorb
jge
aaa
aas
xorb
push
mov
loopne
roll
rep
or
mov
push
or
or
adc
inc
and
pop
js
out
pusha
cmc
or
xor
fs
sbb
mov
je
cmp
or
add
roll
pop
push
scas
dec
pop
jp
sbb
xchg
mov
test
or
xchg
or
adc
push
jmp
rcr
add
mov
mov
sbb
cmp
jge
leave
jno
idivb
jns
and
cmp
adc
inc
jno
add
pop
mov
popf
lret
or
add
mov
add
or
into
or
mov
inc
sub
sbb
jge
and
jle
stos
pop
es
inc
test
cs
mov
aad
outsl
dec
adc
xchg
cmp
pop
aaa
or
decl
jge,pn
jb
inc
ds
or
ret
mov
dec
sbb
cmp
sbb
popa
out
or
or
stc
fmulp
push
or
or
std
negb
xor
ret
xchg
pop
and
or
cltd
pop
or
stos
out
into
mulb
jmp
add
dec
in
add
into
std
int3
jle
mov
add
addr16
adc
out
imul
or
test
pop
push
sbb
in
push
ret
pop
shlb
xlat
nop
iret
pop
test
test
push
cltd
or
sbb
sbb
mov
fists
mov
sti
xchg
mov
gs
or
dec
out
sbb
or
dec
mov
and
daa
push
or
stos
dec
sti
jmp
andl
andb
mov
push
cld
roll
sub
jp
scas
mov
lds
enter
repz
pop
or
mov
loop
dec
sub
fistps
data16
xchg
mov
adc
push
imul
mov
lods
movsb
sbb
lock
xor
jg
dec
or
call
jb
add
js
shlb
and
inc
or
stc
pusha
sbb
mov
pop
mov
rcll
fs
outsb
jne
mov
lret
mov
rclb
fbld
and
add
pusha
cmp
or
sti
dec
cld
inc
mov
cld
out
movsb
mov
jmp
andb
test
cltd
pop
sbb
jo
or
xchg
cld
push
xor
das
rcrl
in
ds
idivl
xor
enter
pushf
xlat
push
faddl
jo
pushl
int
sub
bound
and
int
mov
out
mov
mov
pop
xor
mov
push
or
mov
jmp
leave
add
js
or
push
movsb
mov
test
cltd
into
in
sub
fsubr
ja
mov
inc
add
pusha
push
jo
lret
insb
les
inc
sub
push
inc
jl
out
lock
jns
daa
and
popf
jmp
out
jnp
cmp
test
add
mov
outsl
inc
jnp
add
fwait
ss
dec
jle
add
mov
xchg
adc
repnz
mov
adc
add
pop
mov
mov
add
stc
gs
stos
push
andb
sahf
pop
xchg
rorb
jle
cmovne
cmpsl
int
out
push
insb
orl
les
pop
add
ret
cmc
xor
pop
leave
and
pop
loope
ljmp
rdpmc
mov
scas
mov
scas
mov
fwait
or
mov
dec
enter
add
xor
pop
mov
lar
mov
push
popa
out
cmovae
fidivrs
addr16
test
or
push
aas
pop
push
lds
lret
subb
out
popf
cmp
pusha
sbb
xchg
jp
lods
jecxz
push
sbb
icebp
sbb
mov
lea
call
mov
and
jecxz
mov
cld
jne
loop
scas
jecxz
fndisi(8087
jb
sub
sti
sbb
daa
sbb
fs
bound
out
adc
jmp
sub
lods
scas
xor
loopne
inc
xor
xchg
mov
stc
add
insl
xlat
cmp
rcll
dec
sti
int
xor
mov
cmp
sub
or
mov
mov
fwait
into
xor
pop
popl
fisubrs
or
fcoml
push
xchg
cwtl
out
cmp
and
add
xchg
xor
inc
dec
test
pop
ja
push
popf
cmp
ret
push
xchg
out
mov
mov
test
xchg
xorb
outsb
sub
add
xchg
or
sub
mov
lcall
mov
inc
inc
pop
mov
enter
xor
fldenv
pop
movsb
or
imul
out
cli
mov
aad
jp
iret
enter
mov
stc
inc
neg
or
movsl
test
or
xor
ja
sbb
or
cmc
fbld
xlat
mov
shrb
mov
test
xchg
lahf
in
jno
cmp
xor
pop
xchg
mov
cmp
movsl
fistpll
cmpsl
pusha
inc
mov
mov
push
add
push
outsb
push
xchg
ret
rcr
xchg
iret
xchg
mov
and
and
or
ret
pop
sub
test
or
add
jno
pop
daa
pop
fdivrs
lea
or
xchg
add
xorb
filds
sub
sub
out
sub
push
sarb
daa
iret
or
push
rorb
aaa
xchg
ret
outsl
mov
out
jae
mov
xchg
dec
sub
cmp
fsubl
incl
dec
cli
lock
das
add
loopne
loop
dec
add
lcall
inc
inc
int
inc
incb
jnp
test
cmpsl
xor
lds
lea
cmpsl
add
cmp
and
repnz
clc
inc
das
or
mov
jecxz
cmpsb
inc
ss
arpl
inc
lea
or
mov
movsl
pop
add
or
je
aaa
add
out
lcall
sti
adc
pop
inc
shl
mov
inc
ljmp
test
dec
fadds
pop
sarl
mov
mov
sbb
pop
scas
add
mov
dec
xchg
or
cltd
mov
loopne
sbb
testl
or
or
cli
push
add
inc
or
repnz
cld
test
sbb
inc
lret
cmp
loope
or
aaa
jp
out
test
enter
shl
stc
cmpsb
dec
idivl
mov
mov
mov
sbb
and
vpshaq
mov
xchg
inc
dec
orl
mov
mov
sub
mov
lock
jae
or
rcr
add
and
cwtl
push
xchg
das
and
add
movsl
loop
inc
insl
imul
push
add
xchg
mov
xchg
sti
repz
out
jnp
dec
out
divl
add
mov
pop
call
mov
subb
popa
push
mov
pop
add
daa
xchg
inc
or
das
cld
or
xor
cltd
in
aam
inc
aad
cmovge
push
add
int
xlat
popf
pop
ja
sti
movhps
push
inc
test
xchg
dec
or
push
pushf
loop
cltd
movsl
or
mov
pop
iret
mov
sbb
out
arpl
mov
pop
adc
out
push
iret
daa
andl
jecxz
xchg
mov
cmp
orb
or
jbe
jae
mov
lcall
push
and
inc
in
out
je
addl
loope
lret
decl
cmp
sbb
in
jecxz
add
hlt
aaa
push
into
popa
xchg
cmp
call
jg
mov
sbb
sub
jecxz
mov
xorb
cmp
iret
lret
jmp
dec
push
mov
test
decl
dec
push
or
repnz
ret
mov
or
mov
and
xchg
dec
mov
jo
test
add
mov
decb
mov
cmp
push
test
add
pop
adc
punpckhdq
or
push
pop
jg
sbb
add
insl
cltd
js
fistps
or
mov
rorl
and
add
mov
adc
inc
call
xor
loop
stos
xchg
lds
xchg
addr16
aaa
push
ja
out
sbb
pop
adc
or
mov
add
cld
mov
jno
cmove
icebp
jmp
pop
xchg
jg
pop
jl
addl
sbb
xlat
aad
loop
clc
ret
push
xor
jmp
mov
andl
push
jmp
testl
push
inc
xor
std
rcl
shlb
das
daa
cmpsb
jbe
add
pusha
pop
pushw
enter
gs
pop
push
aam
adc
shrb
int3
jmp
or
xor
movsl
lds
lods
add
sahf
adc
jbe
lods
fdivrp
roll
jb
out
pop
lock
mov
in
stos
jns
mov
adc
or
jecxz
lahf
int
push
mov
mov
mov
or
fmul
imul
int3
or
mov
cmp
sub
ja
iret
subl
pushf
push
xor
push
push
inc
test
iret
push
enter
jne
sub
mov
push
sub
or
data16
pusha
xchg
or
clc
addr16
insl
bound
sub
inc
fptan
push
lock
or
fmuls
stos
call
add
jo
int3
add
out
ret
or
mov
cld
les
push
mov
xchg
shll
jl
add
and
iret
jb
sbb
add
insb
jg
or
stos
mov
inc
push
ret
or
js
cld
out
push
dec
mov
push
out
jmp
xor
push
fs
dec
or
sub
fimuls
stos
in
or
push
adc
negl
adcb
and
jle
imul
xchg
mov
push
cli
imul
cmpb
push
mov
xchg
jecxz
push
or
lahf
lcall
dec
mov
or
lcall
faddl
mov
lock
xor
in
sarb
imul
dec
das
sar
dec
repnz
sub
inc
int
das
mov
sbb
dec
push
iret
out
xchg
adc
lock
push
adc
aam
mov
pop
or
push
inc
lahf
cmc
inc
aad
out
aas
scas
int3
hlt
cmp
cld
les
adc
mov
and
imul
adc
sub
test
dec
add
pushf
pushf
movb
pushf
adc
pushf
lea
jmp
out
das
dec
popf
sub
arpl
and
mov
ds
iret
popf
jae
popa
push
lret
mov
jg
loope
and
mov
cmpsb
push
pop
testb
xchg
push
xlat
pushf
push
pop
frstor
dec
lret
in
test
pop
jl
mov
aaa
mov
popl
push
cwtl
pop
sbb
mov
repnz
fcoml
xchg
pop
cs
hlt
es
aaa
xlat
or
addr16
shl
subb
shl
mov
mov
icebp
cmp
mov
mov
enter
addb
and
aaa
jp
ss
movsl
pop
cmpsb
push
adc
fdivrl
add
movl
es
mov
cmp
mov
faddl
mov
add
xchg
cmp
xchg
scas
xchg
pushl
lahf
add
xor
mov
jmp
ds
ret
enter
enter
scas
enter
xchg
pop
sbb
mov
ret
jne
xchg
clc
ljmp
lds
outsl
inc
sbb
inc
mov
pushf
and
pop
shll
ja
jmp
push
nop
fldenv
push
ss
pop
xchg
push
mov
cmpsl
add
jns
stos
ss
xorl
outsl
add
xchg
push
mov
les
push
mov
sbb
and
outsb
repnz
cmp
dec
inc
imul
shlb
pop
enter
out
out
lods
divl
aam
loope
xchg
pop
sbb
repnz
mov
stc
xchg
fs
int3
sub
xchg
add
ffreep
stos
sub
jne
in
mov
test
inc
sub
jmp
stos
pop
imul
jns
cmp
or
inc
mov
jmp
inc
adc
pop
out
mov
test
pop
mov
jns
ret
xor
fsub
dec
sbb
xlat
and
scas
add
es
mov
das
push
mov
pushf
sub
lods
sub
movsl
movsb
add
mov
mov
cmp
test
adc
out
and
or
sub
cmpsb
and
add
movsl
hlt
lret
insl
aam
mov
clc
rorb
or
dec
jno
xchg
ss
daa
mov
lcall
push
into
fnstsw
or
leave
push
in
xor
jl
jno
lret
xor
and
fiaddl
punpckhwd
inc
andb
inc
rcll
sbb
dec
pusha
and
sub
xor
pop
mov
ror
push
jecxz
int
or
and
loop
fldz
pop
inc
lods
add
jo
or
decb
movsl
xor
gs
push
ss
lcall
pop
lret
adc
xchg
cmp
leave
lahf
icebp
mov
mov
popf
and
xchg
mulb
stos
adc
push
cmp
xchg
xchg
mov
pop
fldcw
insb
jl
jne
clc
sub
bound
pusha
mov
ja
fwait
sbb
jbe
sbb
sub
call
addr16
sahf
int3
rorl
pop
dec
xchg
add
pusha
sub
popa
aaa
sub
jmp
jns
scas
addr16
add
test
sub
clc
jle
sub
clc
push
xchg
sar
pop
or
test
movsl
ljmp
adc
mov
daa
mov
pusha
inc
pushf
movb
movb
pushf
lea
jmp
push
sahf
cmpl
add
xor
fcompl
pop
and
data16
hlt
aaa
and
or
lret
push
cmp
rorl
cmc
sub
in
xor
pop
push
jecxz
jle
divl
sub
xor
ds
das
cmpb
jp
mov
jnp
cmpsb
pushf
outsl
dec
adc
lods
or
mov
sub
in
add
jmp
mov
pop
mov
sbb
inc
mov
sbb
mov
push
mov
cmp
dec
xchg
jns
pop
pop
dec
sbb
mov
in
leave
iret
pop
xchg
ljmp
ja
sub
pop
xor
fistpll
or
cmp
inc
xchg
add
lods
dec
pusha
ja
or
call
ljmp
xor
test
pop
add
adc
mov
int
push
xor
rcrl
shrb
dec
mov
mov
pop
pop
dec
aam
inc
lret
aad
xchg
pop
add
shll
mov
lahf
aam
pop
push
xchg
xor
xchg
repnz
mov
loopne
jbe
rcrl
jmp
repnz
stos
ret
cmpsl
rorb
sahf
or
aad
pop
sbb
loope
ffree
mov
repz
lahf
jbe
xor
pop
push
outsb
jmp
loopne
xor
popf
push
mov
sub
ficompl
xchg
push
fdivl
mov
xlat
jns
fsqrt
jae
mov
jg
push
mov
cwtl
out
rcrl
xor
mov
dec
jns
sbb
sbb
fldt
dec
repnz
jbe
jb
inc
jae
xchg
adc
adc
mov
mov
sub
mov
aas
popf
shlb
cltd
out
cmpsl
sub
outsl
xchg
push
pop
int3
mov
sub
ss
mov
inc
add
pushf
jle
fwait
jo
mov
sub
mov
stos
pushf
movsb
rcll
jae
add
push
pop
ss
or
icebp
js
imul
mov
or
sub
push
lahf
das
dec
jl
pop
les
int3
inc
xor
sbb
cmp
mov
sub
or
imul
jbe
iret
mov
out
push
xor
cwtl
in
mov
popl
cmp
lods
jge
scas
add
sbb
jo
outsb
mov
xchg
in
mov
inc
test
test
cmovae
pushf
fldcw
inc
ret
inc
adc
call
dec
shrl
dec
int3
pop
push
es
jbe
dec
cmp
dec
inc
fcomp
dec
lret
inc
rcll
jmp
jmp
dec
lcall
xor
pop
mov
pop
scas
cmp
inc
cwtl
adcb
adc
mov
lret
stos
sahf
sbb
jmp
or
loopne
adc
nop
jp
mov
sub
or
call
mov
loopne
cmp
push
std
imul
add
notb
jae
and
jne
in
pop
clc
mov
out
shll
call
in
inc
out
je
jnp
xor
mov
sahf
lock
out
mov
inc
or
test
push
mov
sub
cmp
daa
xchg
leave
sub
lods
mov
cmp
ret
pop
out
sub
xchg
cmp
xor
cmpsl
inc
pop
sub
sub
cli
inc
jl
add
inc
popa
push
lahf
jecxz
mov
mov
rcrl
sbb
fs
daa
jns
dec
bound
sti
pop
dec
adc
sub
mov
xor
sbb
in
mov
fs
leave
cmpsb
jnp
or
jmp
shrb
mov
or
lock
aam
orb
jle
xor
and
popf
and
fsubrs
loopne
test
mov
je
add
jns
mov
inc
iret
sahf
out
addb
repz
add
push
mov
lds
mov
int
repnz
mov
les
push
xor
ljmp
shll
mov
out
hlt
xor
test
jb
pop
in
jno
mov
push
scas
and
and
mov
mov
dec
lods
shlb
scas
xchg
loop
mov
or
les
pop
movsl
movsl
mov
xor
push
test
out
push
daa
cld
pop
inc
cmp
data16
mov
ret
fimull
jbe
dec
push
popa
push
ficompl
and
mov
enter
int
int
sbb
lret
jmp
add
outsb
ja
mov
loope
enter
cltd
dec
dec
fisttpll
imul
shr
test
stos
shlb
ljmp
inc
push
jbe
sbb
insl
repz
movb
mov
lds
xchg
int
xlat
sub
xor
pushf
pop
xchg
shll
sti
fsubl
and
mov
imul
data16
ss
fisttpll
and
mov
dec
mov
sub
fmull
mov
jmp
mov
pop
cmp
data16
dec
fisttpl
cwtl
movsb
sbb
mov
mov
jg
or
jp
stc
xor
jmp
sbb
fldl
and
jno
std
add
stc
dec
xchg
pop
mov
sub
mov
cli
adc
mov
push
adc
or
orb
pushf
popf
cli
jp
iret
pop
cmp
scas
adc
test
leave
sub
arpl
outsl
inc
lret
cmp
popa
int
stos
loope
loope
imul
inc
jno
int
jb
lods
sub
xchg
cmp
mov
mov
sub
xchg
mov
fs
cs
xor
pop
pop
pushf
jl
lcall
inc
jg
shrb
call
addr16
roll
mov
sbb
cmp
xlat
leave
pop
mov
es
push
data16
mov
adc
in
add
pop
out
add
inc
iret
xor
jo
vmread
mov
fs
jle,pt
mov
push
sub
cld
popa
dec
scas
mov
mov
movsl
pusha
ljmp
sbb
lcall
lods
mov
mov
push
fdivrs
xor
lahf
imulb
pop
xor
jne
loope
loop
xchg
dec
jg
aam
pop
ret
bound
sbb
cs
pop
mov
into
mov
and
adc
pop
stos
sti
and
xor
mov
mov
push
pop
jns
jecxz
test
lahf
data16
add
jae
push
pop
mov
jecxz
pop
fldl
mov
movsl
pop
push
std
pop
add
pop
dec
lods
push
pcmpgtw
shrb
jae
div
cmp
fnstsw
xor
aad
ret
mov
sarl
push
push
test
cmp
mov
mov
dec
cmc
aaa
adc
adc
cmpsb
frstor
mov
bnd
cmp
lds
jbe
outsl
cmp
cli
pop
mov
xchg
out
push
cmp
imul
rorb
mov
mov
lds
outsl
fdivrl
sub
movsl
jge
fnstcw
push
pushf
mov
mov
xor
mov
dec
and
cmp
fst
mov
stc
and
repz
stc
add
mov
inc
jno
je
sub
test
and
int
cwtl
mov
cmp
gs
mov
inc
movsl
add
mov
jle
xchg
jne
lcall
cmp
icebp
scas
insl
rorl
add
les
mov
mov
mov
add
lods
xor
push
mov
xchg
add
cld
or
xchg
daa
mov
adc
jb
daa
mov
lahf
dec
mov
sahf
bound
movsl
mov
and
sub
adc
xchg
mov
imul
pushl
cmc
sbb
adc
pop
lods
xchg
aas
push
adc
std
loopne
pop
xlat
mov
push
and
repnz
inc
lahf
jnp
lcall
jle
bound
in
cs
dec
push
fisubs
lods
pushl
test
clc
cmc
cmp
pushf
lea
ja
pusha
stc
mov
imul
clc
pushl
test
clc
add
pushl
movl
pushl
mov
lea
jmp
cmp
sbb
icebp
adc
aad
outsl
call
and
push
in
inc
popf
inc
test
loop
adc
scas
jge
mov
out
push
in
mov
mov
bound
sbb
inc
call
lahf
fiaddl
dec
out
lret
push
jo
fdivs
xchg
xor
cmc
xor
dec
out
mov
jp
pop
in
scas
push
rcll
pop
xor
stmxcsr
jns
adc
outsl
cmp
inc
dec
mov
adc
imul
out
stos
mov
adc
cmpsl
sbb
add
push
mov
cwtl
dec
sbb
jns
adc
jne
xchg
pop
sbb
and
gs
lahf
gs
fs
mov
jns
mov
cld
scas
xor
lods
sub
repnz
lods
nop
in
jp
lcall
mulb
les
test
mov
inc
add
insl
mov
aad
jbe
sub
xchg
mov
stos
in
dec
sbb
lock
adc
test
cmp
pop
inc
and
and
out
iret
xor
sbb
xor
inc
add
test
insb
push
add
mov
call
jnp
inc
rorl
nop
adc
and
ljmp
loope
stos
fsts
imul
imulb
mov
cltd
push
jmp
bound
xchg
add
xor
aam
xchg
dec
das
add
shrb
adc
mov
cmp
jmp
not
inc
sub
movsbl
shrd
bsf
mov
pushf
sub
mov
pushl
popl
call
sub
aad
inc
xlat
nop
xchg
or
repnz
iret
dec
mov
add
inc
movsb
insl
push
jne
and
imul
jbe
lret
sbb
sub
imul
lea
mov
neg
lock
cli
ljmp
xchg
scas
push
xchg
repz
fwait
icebp
addr16
ja
push
incb
ret
outsl
ret
pop
ja
add
stos
repnz
and
pop
das
jnp
xchg
push
loop
in
test
nop
xchg
insl
outsl
bound
cmp
adc
mov
in
mov
pop
jle
mov
cmp
pop
in
bound
lahf
enter
dec
pusha
loop
lods
ficomps
sbbl
cwtl
bound
ljmp
mov
aaa
hlt
rclb
outsl
inc
add
mov
mov
adc
int
and
divb
mov
loope
push
fistpll
sbb
sub
mov
scas
xchg
fisttps
das
iret
push
adcl
bound
lds
pop
push
stos
test
aas
jle
and
rcrl
rclb
dec
aam
or
cmpsb
jecxz
or
gs
sbb
adc
mov
push
insl
pushf
jecxz
mov
aad
ret
push
repnz
mov
sbb
ret
imul
or
or
sbb
mov
fwait
mov
adc
call
gs
insb
addr16
je
insb
dec
inc
add
and
je
pusha
pusha
lea
jmp
pushf
pushf
pushf
inc
call
lcall
insl
test
add
push
aam
icebp
push
sbb
inc
or
sbb
push
repnz
insl
push
mov
pop
push
pop
in
lods
inc
mov
mov
pusha
loop
push
rclb
fucomip
and
mov
in
cmpsl
jo
jecxz
xor
repnz
scas
es
rorl
fdivrl
sti
shlb
rclb
cmpsb
sbb
mov
cmc
inc
jmp
cld
add
ss
lods
inc
fists
jmp
inc
mov
or
rorl
insb
int
or
sbb
mov
lea
or
xchg
fisubrl
adc
clc
fwait
ret
aas
and
mov
push
das
push
cmpsb
push
dec
push
pop
dec
xchg
push
dec
mov
stc
inc
dec
testb
out
mov
cmp
or
mov
push
add
add
jbe
dec
jne
dec
jo
outsb
add
inc
cmp
inc
int
mov
xchg
outsl
icebp
ror
lods
test
in
jl
cs
xchg
ffreep
xchg
out
inc
popf
loop
pop
leave
fdivrl
enter
clc
inc
pusha
mov
mov
add
aad
or
insl
cmp
xor
jns
inc
pop
adc
or
xor
jbe
ds
subl
pushf
out
divl
inc
jno
leave
push
xor
jo
cs
andb
lcall
jmp
push
fcmove
jbe
sbb
outsb
mov
rclb
arpl
xor
pushl
lea
je
pusha
lea
jmp
pushl
movl
pusha
movb
movw
lea
jnp
push
pusha
pushf
mov
lea
jmp
imul
mov
or
enter
pop
rorb
rcrb
mov
push
movsb
mov
push
stos
je
pop
ljmp
inc
pop
fsub
xlat
push
push
mov
jno
pop
sbb
js
roll
lcall
in
adc
jl
sbb
aam
arpl
pop
test
in
mov
pop
lock
jne
pop
dec
cwtl
rcr
fadds
mov
add
fidivs
jmp
out
jnp
push
scas
lret
xchg
stos
lcall
mov
mov
push
or
cltd
mov
sarb
iret
mov
pop
sub
mov
popf
movsl
and
push
or
fcmove
testl
test
in
lea
add
and
lcall
mov
xor
js
icebp
push
xchg
pop
loopne
jne
cmp
test
dec
jl
in
cltd
jle
arpl
add
push
sub
in
cmp
iret
mov
xchg
test
rcll
ljmp
imul
xor
jle
and
push
xchg
push
xor
scas
sub
lds
add
pop
arpl
popf
sub
push
aaa
shl
into
cmp
jne
pop
inc
xor
cmpsb
add
mov
push
push
mov
sbb
add
or
add
not
pushl
lea
pushf
jmp
ret
xchg
mov
and
roll
and
or
loope
fwait
rolb
jl
cmpsl
movsl
xor
mov
sbb
inc
fcoml
or
push
xor
mov
lret
insl
icebp
cli
and
push
push
pop
sub
xchg
ljmp
imul
pop
mov
std
aam
les
xchg
dec
add
cwtl
push
mov
inc
pushf
jo
adc
divb
popf
pusha
pushf
movl
call
mov
loope
test
mov
xor
ret
ss
das
std
dec
repz
inc
stos
rcrb
dec
subb
shll
add
sub
push
addl
inc
leave
xlat
cwtl
loope
mov
inc
ret
mov
shr
mov
add
push
xor
cs
mov
shll
ret
xchg
daa
push
js
jns
dec
fimull
jns
push
mov
loopne
cltd
fnstenv
cmp
push
mov
sbb
rorl
test
add
inc
bsr
add
ror
sub
bswap
cmc
shr
inc
mov
dec
add
test
bswap
add
rol
mov
stc
bt
push
cmc
shr
push
pushf
pushf
stc
cmp
jmp
add
dec
insb
gs
outsb
imul
imul
popa
jg
mov
cmpsl
mov
fimull
popf
xchg
push
cmc
pop
scas
jge
pop
xchg
scas
or
hlt
pop
sub
ljmp
mov
push
and
hlt
jno
pop
scas
loopne
orl
loop
insb
in
dec
pop
fistl
ss
mov
add
fdiv
jne
outsl
jmp
int
fwait
or
dec
or
xlat
movsl
addr16
out
das
icebp
pop
adc
cmp
pop
cmp
mov
sbb
out
inc
cmc
aas
mov
inc
sbb
shll
mov
sbb
inc
jmp
adc
ss
jle
mov
jne
xchg
daa
das
iret
cmp
push
sarb
mov
clc
incb
jae
dec
sbb
and
mov
mov
xor
stos
fwait
loopne
insl
inc
fildl
dec
sub
inc
clc
out
insb
cmp
lea
jle
push
jle
jg
mov
pop
icebp
mov
loopne
out
rclb
fwait
push
rcrb
xor
shlb
outsb
jb
fidivs
jg
sbb
inc
lds
ret
stos
pop
pop
fidivs
add
ds
fldt
mov
xchg
ret
xor
sbbb
xchg
int3
inc
cwtl
sub
aas
pop
repz
int3
dec
push
xorl
fsubrl
enter
bswap
push
jl
xlat
dec
mov
shll
jecxz
xchg
fs
mov
loop
jae
lds
popa
mov
lahf
push
loop
cwtl
cs
add
pop
lret
xor
push
js
xor
inc
or
pop
insl
pop
or
sbb
dec
add
mov
insb
mov
lret
pop
out
shl
lret
push
push
sbb
insl
cltd
dec
les
rorb
pop
mov
insl
lret
lahf
sbb
and
aad
lahf
int
pop
xlat
shlw
pop
jl
inc
sbb
adc
pop
ds
pop
scas
ljmp
mov
push
test
pop
sub
fsubs
xor
lea
push
stos
testl
scas
jp
ljmp
je
popf
xchg
int3
cmp
add
cltd
and
insb
dec
mov
pushf
out
xlat
mov
dec
enter
jns
into
xchg
in
jns
lahf
or
subl
ret
and
pop
out
jae
dec
mov
sbb
nop
ret
mov
jae
pop
cld
jg
push
lock
jle
xor
outsb
fs
mov
decb
jae
push
pop
pop
lds
or
movsb
or
add
jmp
xchg
stc
stos
and
and
mov
fisttpll
js
test
and
sarb
add
pusha
pop
jle
pop
fs
popa
jne
test
mov
gs
dec
in
scas
adc
je
popa
sbb
pop
int
jne
mov
rcll
dec
push
xchg
add
outsb
push
test
adc
ret
mov
addr16
push
subl
cmp
clc
push
outsb
sarl
sbb
inc
icebp
sub
das
bound
orl
jae
jno
je
xor
sbb
mov
add
adc
push
jnp
inc
push
xor
test
xchg
inc
and
adc
lret
jg
push
mov
jbe
xchg
sub
dec
jmp
mov
insl
stos
cmpsb
mov
cmc
mov
mov
push
int3
sahf
and
or
inc
sar
leave
adc
in
mov
int3
dec
pop
cmp
adc
mov
fisubl
dec
mov
sub
enter
add
mov
sbb
ja
xchg
push
xchg
pop
mov
rcrb
push
call
add
pop
push
popa
in
jge
ret
jl
jo
inc
aas
xor
insl
mov
push
mov
or
mov
pop
mov
mov
push
sbbb
loop
push
push
movb
sbb
mov
jecxz
add
push
push
adc
test
pcmpgtw
movsl
push
lea
cltd
push
pushf
out
cli
mov
xlat
adc
mov
rcrb
lahf
outsl
mov
int
bswap
pop
pushf
pusha
pusha
pushf
pushl
ret
xor
not
xchg
bts
setge
aad
mov
rcr
xor
xor
rcr
mov
cmp
cmc
mov
call
fidivrs
fistl
gs
pop
jns
pop
pop
dec
pop
jns
scas
mov
fwait
sbbl
push
insl
aaa
pop
jmp
lds
cli
push
in
add
pop
repz
in
outsl
jne
mov
jmp
scas
shl
test
lret
push
es
xchg
or
jbe
jp
pop
add
cwtl
pop
sub
push
adc
push
nop
and
inc
ret
inc
dec
add
xchg
mov
dec
pop
addr16
or
mov
cmpsl
insb
es
scas
negb
int3
mov
nop
hlt
jb
add
call
ja
sbb
iret
sub
je
pop
stc
cmp
mov
xchg
mov
insl
pop
push
cwtl
ss
jno
in
xlat
or
incl
adc
lahf
out
jbe
popa
repnz
push
cli
ja
mov
cltd
aad
mov
test
pop
imul
loopne
imul
sbb
mov
lahf
jb
clc
mov
push
or
sbb
ror
jbe
adc
xor
lret
adc
cltd
mov
loopne
shl
sar
cmc
mov
clc
sub
pushf
pushl
popl
cmp
clc
cmp
cmp
pushf
mov
pusha
jmp
xchg
ror
icebp
ret
dec
inc
ja
outsl
adc
jbe
push
mov
mov
pop
or
mov
out
pop
add
loop
add
adc
jne
sub
inc
out
lahf
push
xchg
pushf
jg
mov
lds
lret
add
push
hlt
adc
iret
inc
add
mov
sub
xor
sbb
jle
mov
pusha
mov
pop
mov
fwait
xchg
imul
int3
push
mov
mov
mov
scas
lea
and
add
cltd
add
pop
mov
fnsave
mov
add
xlat
pushf
lea
je
lea
shl
xor
sar
daa
mov
pushf
btr
mov
or
shr
call
xor
das
pop
dec
xchg
in
sub
jle
sarl
push
mov
test
shr
popf
push
mov
stos
test
mov
cli
test
insb
imul
stos
outsb
test
rcll
mov
xchg
scas
fs
or
and
arpl
out
fldcw
pop
in
and
aad
inc
pop
jge
adc
decl
iret
inc
add
pop
aad
push
fbld
sbb
sub
cmp
dec
aam
rolb
push
mov
pusha
pushf
pushf
pushl
ret
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
std
movsl
fs
mov
sbb
cmpsb
sbb
xor
or
icebp
mov
xchg
jne
add
jne
stc
cmp
xchg
mov
scas
jl
int3
push
mov
test
mov
and
dec
push
das
dec
cmp
cmp
shll
pop
cmpb
lret
mov
mov
lret
push
out
loopne
cmp
aas
push
imul
test
xchg
lret
cmp
dec
rcrl
push
fwait
xchg
fsubrl
or
fcoms
push
rolb
aad
mov
movl
dec
icebp
pop
iret
adc
xor
or
adc
dec
stos
mov
jne
mov
jno
ss
shr
adc
ret
cwtl
sbb
inc
shll
pop
xchg
pop
mov
xchg
inc
mov
fildl
push
sbb
lahf
mov
mov
cmp
inc
xlat
jnp
ret
push
lcall
add
inc
mov
add
or
popa
cmp
in
fs
cs
fildll
inc
xlat
push
add
push
lcall
stc
fsubp
cwtl
pop
call
push
addr16
clc
mov
in
adc
sub
mov
fstp
pop
cmp
mov
pop
aam
inc
shlb
nop
pop
ljmp
jmp
mov
jmp
dec
push
mov
mov
and
test
jo
pop
mov
ljmp
mull
mov
add
add
mov
daa
pop
dec
inc
popf
icebp
jg
cmp
sub
repz
cltd
pop
rcr
mov
cmp
inc
sbb
mov
sub
rcrb
xchg
lods
adc
sub
or
cmp
adc
jns
aas
push
cmp
notl
jl
repnz
inc
in
loop
add
je
jecxz
loope
pop
lds
iret
sbb
jo
mov
insl
mov
or
xchg
sub
cld
mov
mov
stos
mov
ror
mov
mov
lcall
xchg
test
scas
ds
xor
addr16
sbb
ret
icebp
mov
adc
loopne
ss
jge
or
outsb
out
mov
inc
mov
mov
ret
dec
addr16
adc
loop
sbb
loop
xchg
pop
mov
sbb
jno
adc
sub
aaa
pop
bound
mov
add
mov
and
ja
rcl
mov
pushf
sbb
sub
shld
bsf
rcl
lea
add
bsr
btr
cmp
jmp
ret
ret
lods
nop
cmpsb
lea
mov
xchg
push
inc
inc
mov
and
inc
push
js
xor
mov
imul
xchg
in
mov
out
push
xchg
inc
jo
lcall
loop
rorl
inc
push
aad
scas
ficoml
xchg
and
fsub
bound
ja
rcrl
inc
jae
loopne
sub
xchg
pop
int3
cmp
inc
cmpsb
sbb
sbb
push
out
leave
pop
bound
mov
roll
movsb
in
rolb
pushf
ror
jmp
movw
inc
lea
jle
pusha
adc
lea
pusha
pusha
pushf
mov
pushl
ret
push
movb
mov
pushf
pushf
lea
call
push
call
test
push
lcall
loope
aaa
lcall
dec
repz
add
pop
dec
jno
leave
xor
imul
push
ss
push
xchg
int3
gs
or
test
jecxz
mov
xlat
mov
jnp
aas
pop
orb
jl
cmp
mov
hlt
pop
fsub
sbb
leave
mov
test
scas
sbbb
mov
fbstp
mov
push
sbb
and
je
call
mov
pusha
push
lea
jmp
lea
ja
call
cmp
pushf
call
push
lea
jne
rcl
rcl
aaa
shl
xor
or
sbb
add
sbb
mov
shr
add
neg
adc
rcl
bt
mov
test
clc
test
test
push
push
mov
lea
je
cmc
pushf
cmp
sub
push
movw
clc
cmp
pusha
push
mov
lea
jmp
ret
jmp
or
repnz
pop
push
fstpt
movsl
adc
ffree
in
jecxz
xchg
cmp
pop
mov
lods
negb
cltd
out
xor
mov
loopne
xchg
out
add
jp
cmp
mov
xchg
clc
stos
ret
or
xor
inc
test
fcompl
outsb
mov
pop
add
push
lods
or
sbb
sub
rolb
aad
pop
movw
clc
test
or
mov
lea
je
call
lods
call
pusha
stos
or
pop
pop
in
icebp
outsb
jb
jo
mov
out
in
jne
or
dec
imul
sub
fmull
sbb
in
lret
or
pop
sbb
sbb
sub
movsl
aaa
dec
or
jbe
add
cli
iret
add
or
cli
xchg
mov
inc
inc
std
push
jp
out
sbb
dec
lret
dec
adc
sbb
rclb
and
mov
or
daa
jne
fs
jne
mov
rol
cmp
mov
clc
or
jns
je
mov
lea
pusha
pusha
movzwl
call
add
popf
popf
nop
or
int3
mov
imul
xor
movsl
inc
fwait
les
jl
pop
stos
in
cmc
pop
outsb
addr16
sahf
add
orb
mov
dec
xchg
and
mov
ret
and
or
xchg
jge
ds
into
shrl
in
mov
mov
outsl
pop
icebp
fwait
scas
gs
dec
fwait
sub
sub
in
and
aam
lcall
adc
mov
and
jge
sbb
stos
push
mov
insl
pop
je
daa
sbb
js
jp
add
popf
out
rclb
stos
call
mov
xor
xchg
je
movsb
xchg
cli
push
gs
xchg
pop
lcall
add
mov
in
ret
mov
lods
bt
jle
shll
loop
in
ss
int
iret
cwtl
mov
neg
cwtl
mov
or
mov
dec
dec
and
repnz
sarl
jno
popa
xor
jle
pavgb
ss
outsb
xor
lods
xchg
ds
sbb
inc
int3
push
inc
push
cmp
aas
jne
inc
iret
dec
movsb
and
in
lds
push
out
xchg
scas
add
int
push
jmp
xchg
js
lret
adc
popf
test
jmp
xor
push
xchg
mov
and
std
fs
mov
adc
mov
sar
fs
arpl
jnp
jae
inc
or
shrb
adc
and
adc
loope
std
adc
pop
pop
clc
hlt
je
mov
js
adc
xor
xchg
dec
movsl
ret
mov
or
xor
repz
aas
jl
mov
push
inc
mov
clc
outsl
insl
lret
inc
mov
mov
movsb
stc
call
mov
mov
jp
ret
roll
jne
xchg
xor
ljmp
fs
dec
popl
dec
pop
in
popa
filds
cmpsb
in
push
jnp
enter
icebp
pop
and
push
in
ret
out
hlt
cmp
fstpt
jns
mov
pop
lret
pop
in
daa
mov
add
aaa
lods
jecxz
mov
imul
or
pop
and
stc
xchg
lahf
js
loope
xor
mov
enter
iret
sbb
mov
jecxz
mov
loope
cmp
xchg
js
push
inc
mov
leave
inc
rcll
in
scas
cmp
popf
loop
icebp
gs
dec
mov
jns
dec
xor
mov
mov
xorb
or
mov
xchg
mov
fwait
leave
cmp
push
xor
cmp
mov
push
adc
mov
adc
mov
aas
jp
sbb
and
push
sbb
add
add
loop
ds
pop
mov
js
shll
mov
stos
inc
in
cmp
fcomps
fdivrs
push
clc
mov
mov
int3
js
loop
mov
imul
xchg
and
in
rolb
mov
sub
outsb
mul
dec
sbb
in
or
dec
cmc
lret
ror
add
aas
enter
in
ficoms
loope
push
sti
popf
and
movsb
xchg
fwait
jbe
add
and
cli
dec
pusha
jmp
or
pushf
call
mov
mov
call
shr
mov
mov
bts
btc
shl
add
movzbw
mov
call
pushf
pusha
movw
movl
pusha
push
push
jmp
movb
pushf
movl
lea
ja
push
mov
pushf
pushl
ret
jmp
jae
ss
ds
out
test
iret
sub
mov
aas
and
push
mov
push
imul
push
add
xor
and
jmp
cli
test
mov
jns
bswap
cmp
pop
jmp
sub
jnp
push
and
add
mov
imul
push
sub
enterw
mov
dec
mov
ud0
sbb
movsb
xchg
mov
add
je
pop
mov
adc
loope
and
js
mov
push
rorb
jno
sar
movb
lea
ja
jmp
lods
push
push
mov
dec
adc
pop
xchg
hlt
pop
dec
sub
or
aaa
subl
mov
dec
push
jle
lods
push
sbb
cld
jbe
dec
repz
mov
jb
into
inc
inc
sbb
outsl
xchg
jl
shl
or
fmuls
lcall
call
mov
out
xchg
jmp
mov
stos
sub
adc
mov
mov
xchg
pop
cmpsb
out
adc
cmp
mov
or
cmp
mov
add
pusha
movw
pushl
ret
adc
loop
sub
or
imul
out
push
push
mov
xchg
sub
in
mov
adc
push
pop
pop
call
add
fwait
ret
cs
loopne
jp
jmp
xlat
mov
add
pop
in
aaa
jne
pop
adc
sbb
xchg
sbb
push
out
daa
xchg
pop
outsl
or
cmp
rclb
pushf
ljmp
ret
mov
in
lret
lods
or
mov
push
fistpll
stos
leave
stos
push
clc
bound
adc
aas
cmp
add
dec
mov
icebp
dec
mov
pop
cmp
lods
add
es
xor
movsl
cmp
sub
xlat
es
xor
mov
out
aas
and
cmp
mov
ror
enter
mov
rol
cmpsl
and
loop
mov
rcrl
enter
mov
daa
mov
std
dec
xor
xchg
fwait
lcall
iret
out
ficoms
jns
sub
push
adc
insl
test
imul
dec
mov
out
fisttpl
adc
mov
jmp
mov
xor
push
sub
divl
addr16
pusha
movl
jmp
out
pop
mov
icebp
xor
loope
test
xor
jle
cmp
sub
stos
cmp
clc
in
outsl
mov
outsb
insb
mov
pop
pusha
pushl
ss
mov
repnz
scas
sbb
aaa
scas
sbb
and
scas
cltd
or
xor
push
dec
mov
push
mov
jg
scas
xor
cmp
inc
sbb
mov
dec
xchg
xor
fidivl
cmpl
test
out
jne
pop
add
pop
clc
jns
mov
clc
pop
dec
jl
adc
pop
cmp
shll
mov
or
test
xor
cmp
push
adc
mov
pop
mov
rorb
ret
push
sub
push
test
cmp
mov
jo
pushf
out
shr
call
push
call
inc
lea
not
inc
call
pushw
popfw
mov
call
adc
gs
adcb
jg
pop
jo
jnp
xor
imul
cmp
add
jecxz
gs
mov
jg
fs
test
jbe
jecxz
adc
mov
xchg
fldcw
inc
iret
jp
cmp
push
push
mov
mov
xchg
push
jge
adc
and
mov
sahf
aam
cli
mov
inc
call
les
inc
sbb
int3
fcoml
push
jbe
dec
push
xchg
hlt
jnp
push
vmovsd
adc
ret
or
add
in
adc
aam
push
sarl
sbb
notl
gs
sbb
mov
and
jb
xlat
xor
sbb
ljmp
in
or
push
mov
cld
and
sub
ret
mov
insl
ret
lds
test
mov
mov
ficompl
xor
cmp
pop
aam
jbe
leave
jp
add
aaa
data16
jbe
fbstp
adc
gs
std
push
mov
ficomps
repz
xor
std
mov
adc
popf
js
push
enter
mov
arpl
adc
insl
push
mov
adc
jmp
or
xchg
pop
divl
imul
sbb
sub
test
imulb
lret
mov
mov
push
iret
mov
push
xor
adc
je
scas
ss
xchg
xor
mov
rcrl
in
jne
mov
xchg
int
arpl
popf
adc
es
adcb
icebp
jns
or
jbe
lods
inc
xchg
push
cmc
in
sbb
mov
cmp
enter
paddw
inc
dec
push
fs
push
xchg
adcb
push
mov
xchg
add
ja
mov
outsb
mov
push
mov
cmp
xor
fs
insb
add
les
and
inc
and
movsl
sbb
jmp
pop
mov
mov
mov
push
mov
mov
xor
pop
lods
ljmp
call
into
mov
sbb
jle
jp
cmp
insl
jmp
cmc
in
aaa
xchg
cmp
vpxor
sbb
stos
cmpsb
mov
movsl
sti
jno
aad
add
or
gs
scas
bound
lock
mov
adc
pop
outsl
mov
push
jl,pn
or
test
mov
xchg
in
xor
ffree
loop
inc
out
cmp
or
test
mov
in
outsl
jns
inc
outsl
jle,pt
insl
repz
jbe
stos
adc
fdiv
mov
out
dec
cmpsb
or
jl
mov
faddl
fs
sahf
adc
cmp
es
and
repz
lea
or
ja
adc
pop
mov
jae
faddl
outsl
in
cmpsb
jge
mov
add
or
stos
out
rclb
shlb
jne
and
add
sbb
imul
mov
loopne
jb
xchg
ljmp
cmp
mul
inc
xchg
aaa
out
les
jo
xadd
pop
arpl
arpl
and
mov
mov
aaa
mov
mov
pusha
lahf
sub
pop
mov
inc
bound
imulb
or
sbb
gs
sub
test
sub
or
pop
inc
and
mov
je
jl
xchg
xor
hlt
out
iret
inc
mov
jge
pop
xchg
imul
sbb
sbbl
sbb
push
imul
gs
into
addr16
dec
pop
icebp
or
inc
push
mov
add
mov
cld
pop
ja
xchg
push
ret
sub
mov
out
movsb
sbb
xlat
jbe
cwtl
loopne
divb
jmp
cmc
jle
and
lret
sets
icebp
mov
in
add
sbb
mov
je
push
insl
shrl
jge
and
mov
or
pop
inc
lods
adc
out
lock
dec
imul
lock
leave
repnz
fs
cmp
adc
and
pop
push
stos
jecxz
and
cmp
jl
adc
js
xchg
cmp
pop
fsubp
jo
cmp
pop
sub
lcall
ljmp
jbe
sar
pop
shlb
push
pop
fstpt
scas
add
add
inc
and
movsl
add
call
sar
mov
pusha
stc
pushl
clc
test
jmp
push
mov
jmp
mov
bswap
lea
movl
pop
pop
cwtl
lea
lea
jmp
cmc
pusha
mov
cmp
pushf
jmp
xchg
rol
jle
mul
inc
mov
icebp
pop
dec
xor
adcl
jo
cwtl
aas
loope
lcall
shrb
loope
pop
mov
xor
and
outsl
int
ret
mov
imul
aam
adc
in
inc
and
add
daa
testl
fwait
and
xor
xor
mov
sub
fbstp
mov
or
pop
leave
xor
out
dec
das
leave
clc
das
rolb
filds
cld
mov
adc
xchg
scas
sti
pop
lret
or
push
sbb
fbstp
orb
cmc
push
push
shll
jnp
lcall
jmp
ljmp
lods
jb
xor
xchg
inc
ret
mov
inc
inc
out
jns
in
cmc
sar
xchg
push
mov
pusha
dec
or
stos
pop
adc
xor
pop
loope
sahf
sbb
mov
dec
popf
inc
movsb
int3
jp
insl
maskmovq
notl
scas
and
jecxz
cmp
and
icebp
inc
and
or
sub
andb
scas
pop
clc
mov
mov
mov
lds
lcall
add
cmpsl
add
jmp
add
lret
xor
lods
dec
or
and
adc
mov
fdivl
push
xchg
shll
fisubl
testl
arpl
decl
out
rorl
aas
xor
mov
pusha
lret
cmp
popa
xor
popl
test
inc
push
and
xchg
hlt
pop
daa
arpl
ljmp
push
std
mov
sbb
sti
mov
mov
sub
cmpsl
pusha
mov
mov
ja
outsb
filds
clc
lcall
fs
jne
jbe
push
mov
pusha
mov
pushf
lea
jnp
pushf
lea
call
pusha
pusha
call
adc
mov
pop
sti
outsb
jbe
insl
adc
pop
aam
mov
jno
call
xor
sub
mov
shrb
pop
push
lds
push
scas
mov
ss
mov
inc
je
or
int3
rclb
jl
mov
sbb
fadd
dec
out
inc
fcomps
xchg
or
dec
data16
mov
pop
mov
cmp
fildll
lock
sarb
sub
call
push
mov
pop
xor
add
inc
shlb
inc
sbb
adc
jge
mov
adc
lret
lods
mov
fisubrl
push
and
adc
fmull
movsb
sbb
and
dec
daa
pusha
jb
dec
push
bound
loope
mov
testb
notb
mov
lahf
repnz
mov
js
sub
sub
pop
cwtl
es
mov
outsl
clc
cwtl
stc
pop
fnstcw
mov
sbb
and
sbbb
cltd
call
lahf
dec
cmp
test
pop
aam
aam
aaa
pop
fcoms
jns
enter
in
lods
ret
inc
sar
stos
xor
int3
sub
fs
mov
adc
clc
mov
mov
out
das
popa
mov
mov
push
xchg
scas
inc
sarb
pop
mov
mov
mov
jns
inc
xchg
movsb
in
mov
push
mov
sub
mov
add
mov
mov
lods
push
jp
movsb
push
xchg
testl
inc
movsb
mov
sub
call
fs
sub
repz
cmpsl
xchg
sub
insl
test
lds
or
add
fmuls
sbb
add
mov
or
mov
arpl
into
xor
mov
xchg
mov
jp
rcr
xchg
mov
sar
mov
mov
sarb
pop
pop
lds
icebp
sub
les
fcmove
inc
mov
pop
jge
jmp
xchg
cmpsb
dec
mov
inc
lock
ljmp
test
das
sbb
loop
xor
sti
cwtl
push
push
fdivrs
pop
adc
aad
jo
aad
jo
xor
xchg
cwtl
rorb
stc
push
jo
cmc
mov
mov
mov
in
lret
jne
cmpsl
dec
xlat
pop
notb
ds
sub
outsl
push
aam
jne
fwait
lods
in
fs
mov
xchg
ret
pop
push
jo
xchg
mov
mov
or
out
ss
mov
out
pop
push
add
adc
sub
mov
sti
sub
daa
push
outsb
cmp
pop
mov
jmp
and
ds
mov
popa
aas
add
jp
cmp
divl
push
inc
iret
jb
jo
ss
pop
mov
push
stc
mov
negb
or
movsb
pop
dec
out
loop
sub
jne
mov
xchg
fdiv
movsb
mov
aad
dec
mov
jecxz
out
sbb
addr16
flds
pushf
nop
dec
popf
mov
lret
mov
cld
in
adc
xor
inc
lahf
dec
scas
sbb
push
sahf
and
cmp
xor
jbe
xchg
mov
ja
and
aad
and
xchg
push
add
cmp
loop
inc
mov
xchg
iret
sub
xor
call
js
mov
test
and
repnz
mov
jnp
sbb
icebp
insl
sub
jne
arpl
mov
subb
sub
movsb
xchg
cld
mov
ret
into
es
and
dec
adc
pop
ss
jle
xor
sbb
sahf
sub
stc
dec
inc
rcll
xor
pusha
pop
sbb
aas
inc
add
icebp
inc
mov
inc
mov
xor
cltd
pop
lock
adc
sbb
js
lcall
shlb
rcrb
ljmp
pushf
in
mov
jl
inc
adc
nop
rorb
or
movzbl
cmp
shrd
add
stc
inc
sbb
mov
or
mov
pushf
repnz
pushl
call
push
pushf
movl
pushf
movb
movb
push
lea
jmp
insb
mov
push
xchg
sbb
lock
rorb
sub
iret
mov
in
dec
sahf
push
push
xchg
test
pushf
jmp
jecxz
dec
das
xchg
jp
popf
out
or
pop
mov
ret
enter
repnz
sbb
inc
sbb
pushf
pop
shrl
lods
push
xchg
inc
iret
popa
inc
pop
mov
mov
lret
lahf
aas
test
xor
sarb
jmp
mov
clc
bsr
push
inc
and
lahf
cmp
push
and
movsbw
mov
test
test
jmp
sub
mov
test
cmp
pushf
pusha
call
jae
lahf
pop
gs
loopne
rcrl
lock
mov
movl
fwait
sti
or
jno
out
add
enter
mov
test
jb
sub
ljmp
fstpl
adc
loop
cmp
repnz
and
mov
add
fwait
inc
inc
add
pusha
rcr
fwait
inc
push
dec
mov
les
fs
insl
inc
push
loopne
mov
jge
sub
scas
into
jae
fs
repnz
jle
pop
cmp
in
xchg
ljmp
jmp
sub
bound
rolb
das
pop
sbb
mov
dec
cltd
incb
inc
imul
dec
xchg
das
jb
nop
clc
mov
push
sbb
inc
mov
jle
push
je
int
ljmp
clc
add
iret
iret
scas
mov
test
and
xor
lods
outsl
std
cmp
cmpsb
cld
lret
js
data16
lods
and
sub
xchg
mov
pop
aaa
cs
std
test
cmp
pop
jl
cltd
ffreep
xlat
nop
mov
lret
stc
roll
inc
dec
cltd
bound
jns
adcb
orb
or
dec
or
dec
outsl
data16
dec
addr16
dec
stos
xchg
imul
addr16
sti
cmp
ds
das
shrl
int3
adc
dec
push
std
outsb
call
in
push
fwait
mov
sarl
pop
xchg
stc
subl
inc
mov
fsub
cmpl
int3
and
and
mov
aaa
cli
nop
sbb
mov
jle
jge
cmp
jmp
jmp
pusha
pushl
jmp
push
and
xor
cmp
pushf
mov
or
pop
mov
push
mov
dec
mov
or
ret
fiadds
daa
cwtl
cmp
mov
xor
rorl
lahf
mov
jg
ds
push
pushf
mov
setg
lea
mov
call
cmc
sar
bswap
mov
clc
je
bt
and
stc
push
add
lea
pushf
add
pushf
pushf
dec
call
jmp
and
xor
btc
mov
bt
cmpb
jbe
push
push
lea
jne
ror
bts
cwtl
sar
xor
rol
aas
mov
clc
mov
push
add
mov
dec
mov
push
test
pusha
call
lea
push
mov
movzbw
lea
push
pushf
call
jmp
xor
pop
cmp
lods
movsl
pop
sub
popa
dec
stos
pop
sub
ja
cmp
jno
in
xor
mov
lret
loope
les
iret
arpl
jo
or
mov
dec
mov
jl
add
stos
scas
das
jge
loopne
mov
mov
adc
or
cmp
loopne
sub
lods
jb
popa
sub
repz
cmc
mov
js
mov
dec
sbb
jo
cltd
push
cmp
mov
cmp
sub
mov
subl
mov
shlb
sub
dec
es
pop
ret
mov
icebp
mov
mov
jle
inc
sub
in
jl
mov
ss
or
xchg
iret
xor
jbe
or
jge,pn
or
pop
sbb
and
test
sub
pop
dec
les
popa
ret
test
or
cltd
popa
insb
mov
popa
jno
hlt
inc
popf
cmpsl
dec
mov
mov
xchg
pop
jmp
ret
pop
jnp
jmp
fdivrs
data16
stos
pop
lret
sbb
dec
pop
ja
pusha
or
daa
sub
pop
mov
sbb
mov
orb
into
cltd
adc
xchg
daa
sub
jg
imul
jbe
andb
movsl
and
lods
or
mov
adc
mov
dec
stos
xor
xchg
loope
jle
push
aaa
add
push
mov
scas
add
pop
fs
popa
imul
clc
jmp
mov
cmp
jmp
jmp
xchg
clc
js
ror
or
mov
xchg
cmpsb
je
in
data16
mov
cmp
xchg
inc
inc
fldl
jmp
sbbl
stc
cmp
imul
dec
cmp
cmp
rcrb
loop
adc
sub
push
popa
pop
jmp
mov
scas
pop
sbb
or
or
shlb
shrl
xor
dec
and
adc
pop
push
adcl
hlt
push
cltd
cmp
cld
pop
jmp
adc
jmp
mov
or
or
mov
lds
enter
inc
rorl
jg
scas
dec
mov
sti
enter
sbb
les
clc
add
dec
sbb
inc
in
jp
idivb
jnp
out
mov
testb
sbb
lods
add
in
out
imul
sbbl
sub
sahf
xor
in
cld
lahf
inc
pop
std
pop
arpl
dec
cwtl
cli
mov
mov
pop
cmp
cli
jle
xor
mov
push
jmp
fldl
jle
mov
adc
dec
push
dec
out
jns
xor
loopne
shlb
jge
shrb
cld
mov
arpl
decb
xchg
add
pusha
call
cmc
bt
cmc
cmp
xor
push
pushf
inc
lea
pusha
mov
lea
jbe
push
lea
call
jmp
cwtl
repnz
pop
pop
jb
mov
filds
sub
lret
cs
xor
mov
test
push
jge
gs
cmp
clc
popa
push
dec
and
test
lock
adc
fwait
xor
xchg
dec
jmp
orb
sbb
vdivps
rcr
push
cwtl
sub
mov
int3
lea
xor
sub
xchg
or
shlb
push
mov
mov
cmp
xor
js
cmpb
jo
rcrl
jmp
dec
lods
xchg
mov
push
sub
movsb
into
rcrb
subb
fimuls
push
cmp
sbb
jp
stos
pop
add
or
dec
fwait
jb
imul
jo
loopne
xchg
jmp
testb
lcall
int3
pop
bnd
push
or
or
mov
das
leave
jnp
xchg
aas
xchg
jne
test
out
notb
addr16
shrb
repnz
jge
hlt
gs
cmp
pop
inc
cmp
lods
sub
add
dec
sbb
rolb
sbb
and
dec
in
fmull
ja
andl
rolb
dec
mov
fcoms
xor
mov
mov
dec
jae
ljmp
xor
sub
lcall
mov
jp
daa
in
adc
scas
in
dec
adc
lock
dec
mov
gs
cmpsb
jbe
fidivrs
mov
sbb
add
das
xchg
add
aad
shll
ss
testb
mov
or
sarl
jge
lahf
pop
fisubrs
in
xor
jg
dec
sub
pop
push
call
jle
jne
sbb
das
xor
lret
xor
pop
cltd
mov
std
jne
call
out
aad
test
cld
jno
xorl
js
movsb
pusha
adc
mov
ss
fs
imul
adc
int
pop
mov
ss
push
mov
hlt
push
in
popf
pop
rclb
lahf
pop
add
and
lcall
and
test
in
lock
push
and
add
mov
inc
sbb
mov
sbbb
dec
push
jl
loopne
popa
jg
jp
xor
cwtl
outsl
lret
xchg
aam
cld
inc
packsswb
shlb
test
add
mov
xor
mov
xor
mov
cmp
sbb
ja
mov
adc
in
pop
imul
inc
ss
push
sahf
add
in
lods
mov
mov
aad
mov
bound
cmpsl
sub
repnz
rclb
es
das
jb
push
pop
pushf
pop
ds
and
mov
int
hlt
mov
data16
fs
je
call
or
out
scas
cmp
push
icebp
aam
and
jmp
pop
mov
xchg
sub
sti
or
sbb
lds
jbe
add
insl
into
mov
add
pop
xchg
sbb
cwtl
and
add
jp
jb,pt
divb
push
jne
out
add
jno
jae
ret
mov
in
and
gs
or
adc
test
mov
xchg
mov
addr16
sbb
lock
decl
and
pushl
lea
call
call
and
nop
xchg
mov
rol
sub
pop
rol
dec
xor
leave
or
add
mov
mov
cwtl
loop
pop
sbbb
mov
loopne
xchg
and
xor
pop
jg
test
std
xor
adc
inc
mov
pop
test
jnp
adc
xchg
sbb
call
push
xchg
and
sbb
cld
ret
inc
add
mov
pop
jnp
pop
sub
js
movb
mov
cmp
pop
lods
mov
addr16
jae
mov
add
mov
dec
int3
mov
pop
jl
mov
mov
cmp
xor
aas
lret
add
add
xor
push
xchg
mov
push
ds
or
dec
mov
push
mov
push
fstps
mov
lds
lret
cmovl
cld
mov
dec
mov
inc
pushf
test
inc
dec
xor
pop
inc
push
xor
mov
out
sbb
inc
cwtl
sub
or
arpl
mov
les
push
xor
js
or
sbb
add
dec
rcl
push
add
sub
or
sub
mov
ror
bt
mov
movzbw
push
add
mov
mov
movl
mov
or
mov
lea
jl
pusha
lea
je
ja
cmc
test
or
pusha
pushf
mov
pushl
lea
je
xor
cmc
xor
shld
shld
rol
mov
clc
movzbw
lahf
shl
mov
shrd
ror
shld
pusha
shr
lea
rcl
bts
sbb
cmp
mov
cmc
or
push
pushf
jmp
or
xchg
add
push
add
shlb
xchg
jb
rorb
arpl
xor
or
les
xor
pop
ja
out
push
lods
mov
xor
sub
pop
fsts
pusha
loopne
inc
insl
repz
push
xor
sbb
enter
jbe
pop
aam
xchg
stos
jl
sub
inc
into
lock
jbe
imul
ficoml
leave
aaa
rorl
jne
iret
push
mov
mov
cmp
mov
imul
inc
orl
jb
inc
sub
pushf
add
mov
aad
insl
lds
mov
xchg
in
fdivrs
sti
jmp
ud0
sub
into
icebp
or
inc
xor
rcl
dec
decl
aam
popa
mov
movsl
adcl
ficoms
pop
movsb
sbb
lcall
xlat
mov
adc
cmp
adc
in
dec
push
cli
inc
or
push
mov
mov
lea
jno
mov
movsbw
push
bswap
lea
mov
pushf
pushl
ret
mov
dec
jae
les
pop
cmpsb
push
mov
push
push
mov
mov
nop
pop
xor
push
mov
xor
push
jae
sahf
push
mov
ds
push
sbb
xor
decb
push
out
and
or
insb
pop
sahf
call
mov
imul
js
not
lea
pushf
movw
pushf
movw
movl
movw
pusha
pusha
pushl
mov
pushf
pushf
pushf
pushl
ret
add
dec
outsl
popa
fs
imul
add
pushl
push
mov
nop
add
ljmp
stos
and
or
clc
sahf
mov
jns
je
testl
cli
inc
in
std
repnz
add
or
inc
mov
add
adc
push
xchg
sbb
or
mov
mov
int3
and
popf
mov
cld
pop
fwait
notb
ljmp
imul
fstpt
orl
and
mov
imul
add
orl
sub
xor
or
mov
xchg
mov
cmpsb
push
iret
pop
push
or
popf
pop
push
into
outsb
ret
mov
fdivp
addl
aaa
int
pop
mov
sarl
push
out
orb
mov
mov
lret
cs
rorb
test
push
mov
or
fcomp
jl
xor
inc
les
jae
push
in
in
popf
in
jg
push
call
shrb
les
mov
jp
aam
stos
cwtl
jg
pop
lds
pop
xor
pop
ret
push
dec
inc
jbe
adc
outsb
inc
fdivr
pop
clc
cs
pop
cwtl
push
movsb
xor
mov
inc
xchg
in
jo
mov
stos
cmp
shrb
out
sbb
pop
cmc
xor
enter
jnp
mov
loope
cmc
xchg
jo
jo
rclb
iret
daa
xchg
mov
movb
sbb
mov
mov
insb
aad
pop
jmp
adc
jne
dec
insb
xor
sub
inc
mov
mov
cmpsl
push
inc
jmp
iret
aas
inc
xchg
jg
jp
roll
fsubrs
cmpsb
lea
add
adc
ljmp
adc
mov
push
sbb
mov
and
or
xor
pusha
loop
pop
fsubs
mov
call
inc
test
addr16
lock
cltd
nop
sub
pop
scas
int
mov
testb
cmp
jo
mov
add
jb
or
les
insl
notb
fsubl
inc
dec
std
xor
mov
cld
in
mov
popf
adc
cmp
sub
ss
push
inc
cmpsb
dec
icebp
inc
pop
aas
push
hlt
and
sub
sub
add
cmp
cwtl
push
xchg
mov
loop
fs
pop
adc
test
loopne
std
pop
sbb
loope
mov
iret
sti
lock
sbb
insb
sub
xor
mov
jno
adc
fstps
sub
pop
push
fwait
neg
aad
jmp
cmpl
push
hlt
xlat
inc
mov
fdivrs
outsl
dec
push
jmp
clc
cli
cmp
and
mov
notl
test
dec
sbb
push
cltd
inc
cmpsl
sub
movsl
stc
dec
lds
nop
cmpsl
xor
adc
pop
rol
orb
and
jne
movsb
clc
test
shlb
adc
fisubs
mov
and
push
mov
inc
jb
mov
xchg
fnstenv
aas
cli
push
and
sbb
imul
imul
outsl
jb
and
pushf
push
lea
jae
bt
push
test
xor
pushl
movw
lea
jl
call
jno
jae
pusha
xchg
xchg
jmp
jmp
movsb
out
mov
out
hlt
mov
xor
pop
dec
mov
xchg
movsl
or
jo
sarb
cmc
or
sbb
fcompl
call
leave
je
and
jbe
xorb
das
sub
xor
inc
mov
aas
xchg
add
and
test
xchg
cmpsb
outsb
cs
dec
shlb
mov
rcll
fnstsw
lock
jne
xchg
push
xor
mov
pop
das
mov
outsl
sbb
inc
cltd
or
aas
and
repz
or
testb
xor
and
sub
rclb
inc
adc
sub
js
sub
jns
push
mov
arpl
jecxz
push
outsb
xor
inc
in
lds
out
cli
push
mov
jmp
ja
shrl
call
mov
into
daa
jns
ret
sbb
dec
jnp
dec
lahf
lds
in
incl
pop
mov
fstpl
movsb
call
jmp
sub
pushf
cmp
call
cmpb
call
dec
pushl
call
pushf
lea
ja
call
cmp
call
pop
stc
jae
daa
mov
je
call
and
pop
mov
xor
xor
adc
data16
out
std
cld
xor
xchg
fadds
push
mov
push
rorl
push
sub
dec
push
xchg
push
popa
inc
hlt
sahf
stc
pop
loopne
or
jno
cmp
xor
out
in
mov
push
xor
mov
inc
mov
pop
sub
js
lcall
lods
in
add
stos
repz
mov
mov
xchg
and
dec
mov
and
dec
mov
rorb
push
dec
mov
cmpsb
data16
push
stos
or
mov
inc
inc
mov
cltd
cld
xchg
jl
addr16
or
daa
cmp
clc
push
loope
add
jbe
mov
pop
pop
roll
or
xchg
jp
cmp
js
xlat
movsb
mov
add
cld
addb
sti
sbb
inc
push
icebp
xor
rcll
mov
push
pop
mov
fwait
stc
out
adc
scas
sbb
add
cmp
lds
mov
ss
jo
scas
imul
aam
enter
jne
popf
cmp
fcompl
ret
inc
fcmovu
js
jbe
cli
cmp
ror
shl
cmpsb
cld
jb
dec
sub
popf
sarl
ss
shr
mov
or
fbld
xlat
mov
repz
push
add
sub
or
push
lret
jmp
cmp
push
xchg
repz
xor
fucomip
mov
push
repnz
mov
stos
aaa
sti
sbb
dec
in
rcl
mov
fwait
cld
inc
les
xchg
lret
popa
cmc
push
jns
cmc
xchg
sub
pop
in
das
fadds
sti
enter
imul
dec
insb
mov
mov
sbb
inc
imul
cmpsl
add
lods
and
adc
jns
mov
pop
pop
fildll
pop
mov
lods
aad
cmpsl
sbb
addr16
mov
lret
push
push
popa
inc
push
popa
mov
rclb
out
loope
cwtl
inc
orl
sub
dec
daa
and
dec
shrb
fucomi
mov
push
mov
jnp
repnz
cmpsl
nop
testl
insl
mov
es
xchg
enter
jl
xor
pop
dec
mov
setae
lods
push
popf
jb
cmp
push
xchg
or
xor
out
add
stos
inc
rorl
nop
mov
into
jle
gs
xor
dec
nop
push
cwtl
in
xor
enter
push
pop
mov
pushf
mov
push
and
dec
push
movsb
adc
sub
mov
ja
dec
mov
xchg
leave
sbb
test
pop
mov
int
xor
lods
push
lcall
xchg
dec
or
fs
fs
in
or
je
into
dec
mov
lret
cmp
popa
addr16
bound
inc
ficoms
ja
fimull
jbe
mov
jae
call
mov
and
mov
inc
and
mov
push
mov
leave
clc
or
call
mov
pushf
pushf
push
lea
jmp
xchg
aam
ljmp
push
dec
mov
imul
add
dec
mov
fcoms
loopne
mov
lret
jge
and
mov
jg
xacquire
adc
fdivr
sub
popf
xor
jmp
inc
jmp
rcrl
mov
cmpsl
mov
inc
inc
imul
nop
pop
cltd
add
mov
mov
pop
push
inc
mov
mov
mov
push
hlt
push
pop
cltd
xchg
ds
sbb
sub
pop
add
int
sub
fnstcw
pop
cmp
fs
ret
repz
cmp
jecxz
cvtpi2ps
push
xor
sub
sbb
inc
out
add
in
imul
imul
sub
xlat
out
cmp
xor
mov
push
jmp
or
cmc
mov
fwait
outsl
hlt
adc
inc
jl
mov
mov
or
push
test
decb
mov
scas
data16
dec
jns
pop
mov
xchg
in
or
pxor
popf
add
mov
adc
out
cmp
pop
ret
push
and
push
jno
les
mov
stos
push
insb
jno
mov
xchg
sub
int
xchg
xlat
clc
push
mov
scas
movsb
push
addr16
mov
add
inc
dec
cmp
ja
into
jns
idivb
in
cmp
xchg
pop
mov
jge
iret
jecxz
cwtl
dec
leave
mov
leave
xchg
fcompl
inc
pop
mov
sbb
push
xor
mov
cmpsb
adc
add
jl
test
sub
rclb
mov
test
cmp
pushf
call
adc
clc
xor
ljmp
mov
add
mov
cmpsl
mov
jno
or
call
loop
shrb
pop
sub
and
aas
shl
adc
orb
mov
pop
cmp
pop
jne
mov
pop
adc
icebp
push
pusha
and
icebp
in
or
mov
xor
pop
addl
loopne
loopne
icebp
loope
and
add
rcr
sub
push
stos
pop
mov
pop
lods
out
scas
and
pop
int3
nop
icebp
mov
cmp
sti
inc
subl
fbstp
jle
daa
insl
loope
or
movb
stos
dec
fwait
insb
addr16
stos
inc
and
fnstenv
int
mov
popa
sub
mov
jp
push
pop
inc
sub
cmc
lcall
pushf
loopne
sbb
adc
xor
adc
inc
mov
xor
push
mov
sub
fwait
arpl
gs
lea
in
mov
sbbl
adc
add
xchg
jge
dec
ret
or
fsubrs
cmp
loope
ss
or
jb
mov
sub
rcrb
outsl
xchg
sbbl
aas
clc
mov
sub
mov
pop
and
rclb
pop
sub
adc
and
lock
push
pop
inc
test
jae
rcrb
out
inc
cmpsb
dec
outsb
aad
lods
out
cli
popa
scas
mov
lods
aam
repnz
jle
rorb
and
xchg
mov
jae
orb
scas
hlt
je
cwtl
xor
inc
xchg
cs
sahf
jns
fwait
push
inc
fwait
nop
jle
dec
mov
inc
mov
xor
movsb
insb
lahf
in
in
xchg
fdivl
stos
std
mov
push
push
xchg
cmp
cs
jae
push
push
ret
jp
xlat
dec
xor
xor
add
push
lret
mov
pushf
pop
ret
das
sub
sbb
inc
push
dec
in
sti
jmp
cmp
cmpsb
ss
daa
xlat
push
rorb
cmp
xor
pop
es
mov
cmp
push
jle
sub
sub
inc
xchg
pop
test
sbb
inc
or
in
scas
or
cmp
rcrb
leave
pop
xor
lods
mov
inc
sub
inc
cmpsb
out
xor
cli
xchg
sbb
std
jb
xor
adc
xchg
gs
lahf
shlb
repnz
lds
loopne
jbe
sub
sub
jl
sbb
mov
rcr
or
and
repnz
or
or
mov
sbb
inc
or
push
cld
pop
cs
mov
mov
pop
je
and
outsl
pop
dec
jno
mov
xor
jns
in
push
xor
dec
xchg
xchg
popa
cld
dec
loope
sbb
inc
sbb
push
sti
movsl
pop
jge
fsts
dec
daa
fidivs
xchg
push
test
and
fistl
ljmp
fmuls
js
ret
mov
daa
lahf
mov
jmp
wrmsr
inc
mov
cli
push
adc
mov
mov
into
pusha
add
mov
dec
mov
hlt
test
lds
sub
pop
pop
out
mov
pop
xchg
jns
add
inc
js
je
jb
arpl
jae
push
movsl
jle
std
icebp
cmpsb
xchg
fs
mov
in
cmc
push
inc
movsl
in
mov
stos
jns
mov
sub
pop
sbb
pop
rorl
hlt
xchg
out
sbb
and
divb
mov
int3
jle
or
xlat
out
lods
inc
sbb
mov
sub
rolb
add
les
gs
sbb
pop
cltd
out
into
sbb
mov
pop
stos
pusha
mov
jb
das
ss
jne
negb
ret
sub
repnz
shll
sbb
and
mov
dec
and
or
out
sbb
jg
decb
pop
aas
push
fisubl
mov
in
insb
sub
int3
fnsave
in
or
fs
scas
cmpb
cmp
xchg
outsb
fsubl
and
jl
push
xchg
in
imul
movsb
aam
add
pop
cltd
repnz
jmp
mov
imul
mov
cmp
in
out
dec
pop
mov
pop
pop
popf
popa
pusha
lea
je
jmp
daa
outsl
fdivrs
xchg
add
jmp
push
dec
inc
shrb
mov
pop
mov
xor
adc
faddl
inc
push
rorb
jb
subl
movsl
aam
test
stos
fsts
xchg
lock
xor
aas
xchg
jno
clc
mov
movsl
and
sbb
sbb
ret
lcall
iret
insl
mov
pop
jo
sti
in
sub
fwait
sbb
loope
loop
cmp
push
outsl
in
push
mov
lds
dec
out
mov
add
inc
test
xchg
xchg
pop
inc
mov
adc
jno,pn
test
sub
lods
repnz
push
xchg
or
xor
jge
push
xchg
aam
arpl
mov
sbb
cmp
leave
pop
push
leave
movsb
xor
insl
push
scas
pop
xchg
cs
lods
insb
movsb
dec
iret
pop
lea
pop
out
sbb
mov
fidivrl
inc
dec
pop
fsubrs
cmp
and
mov
pop
inc
mov
lea
mov
call
add
cmp
cmp
movsbw
lea
lea
movzbl
bswap
setp
mov
call
cmp
push
pushf
lea
ja
not
inc
jmp
lea
pushf
bswap
mov
jmp
pusha
pushf
mov
push
pusha
push
pushl
ret
incb
push
jmp
int
les
iret
iret
cmp
push
adc
into
arpl
pop
cs
push
mov
adc
mov
sahf
xchg
add
mov
adc
push
test
jl
popa
loope
divb
cmp
xor
sub
mov
or
cmp
stc
xchg
add
int
add
push
daa
dec
or
repnz
repnz
mov
mov
loop
pop
stos
pusha
add
cltd
pop
mov
inc
add
leave
adc
and
mov
int3
and
and
mov
dec
inc
dec
xor
cs
insb
add
cmc
fistps
dec
call
hlt
bound
mov
cmp
pop
shrl
fcoms
rcrb
roll
inc
jecxz
lods
xchg
cmp
repnz
shrl
xchg
in
push
adc
bound
lret
fisubl
movsl
ja
in
repnz
inc
mov
xchg
sbbl
pop
pop
xchg
xchg
mov
pop
orb
test
push
cs
in
in
ss
sbb
in
dec
push
mov
adc
pop
jmp
outsl
push
dec
out
stos
stc
mov
sti
mov
cmpsb
push
xlat
cmpsb
std
aas
xchg
xlat
stc
insb
sti
cmpsw
jmp
sbb
arpl
in
adc
sbb
outsl
test
daa
mov
push
mov
push
cmpsb
cmp
xor
subl
adc
cmp
push
mov
iret
inc
xchg
and
or
jns
sahf
insb
sub
xor
inc
lea
je
pushf
stc
jmp
add
sub
add
add
add
add
add
add
and
sub
es
sub
and
sub
add
add
add
sub
sub
lret
jg
dec
or
mov
stc
movsl
xor
shrb
dec
mov
cmpsb
sbb
fdivrs
mov
mov
enter
jae
xor
mov
imul
jmp
dec
rol
ret
ja
mov
push
scas
outsl
jg
adc
mov
push
push
push
test
stc
fildll
test
cmp
enter
lcall
xchg
movsl
cmc
mov
int
flds
les
icebp
sub
mov
mov
lcall
lret
cmpl
lret
int3
cmp
cli
pop
ss
fsubl
fisubl
scas
mov
jge
neg
jg
xchg
cmp
add
pop
add
cmp
xor
lret
loope
aad
jae
add
jp
pop
or
hlt
sbb
test
sbb
mov
and
aam
adc
out
pop
or
xchg
ja
loope
push
ret
and
loopne
movq
ds
data16
std
mov
pop
mov
push
imul
int3
dec
xor
push
repz
sub
jp
aaa
sub
mov
lret
xchg
adc
cmp
popa
popf
pusha
sbbb
loope
test
jmp
lahf
icebp
ljmp
dec
jb
or
dec
push
mov
mov
popa
add
rcrb
idivl
rcrl
pop
push
cmp
xchg
ficompl
dec
or
jno
jl
rorl
insb
popa
pop
lea
sub
xchg
imul
repz
push
or
pop
jp
loopne
hlt
xor
dec
lret
pop
ret
mov
inc
cmp
mov
add
jae
pop
lcall
fistpl
out
aam
ss
stos
adc
jg
lds
fdivrs
out
jns
pop
les
loopne
push
or
sar
mov
icebp
sahf
test
aam
arpl
adc
cmp
jbe
or
insb
sarb
lds
lahf
lock
or
lock
fisttpll
lcall
dec
jno
push
stos
mov
aad
hlt
or
xor
cmp
outsl
ljmp
mov
pop
xor
push
mov
repnz
push
adc
xor
pop
mov
mov
pushf
sbb
cmp
adc
push
mov
in
idivb
in
enter
addb
mov
movsb
mov
inc
or
sarl
into
add
mov
xchg
add
loop
mov
cmc
add
scas
insb
mov
fs
add
push
outsl
sbb
and
mov
sbb
outsl
movsl
fildll
mov
lcall
inc
inc
enter
add
push
xor
icebp
sub
dec
scas
mov
push
dec
mov
mov
scas
mov
frstor
adc
out
lock
cs
adc
mov
add
shrb
lods
pusha
fsubl
popa
nop
int
xor
rol
xchg
mov
mov
call
aaa
push
xchg
ja
or
add
enter
inc
data16
into
cmpsb
cmc
push
rcl
mov
inc
ja
or
shll
pushl
mov
sahf
mov
mov
push
and
push
jl
fst
iret
popf
lods
add
js
mulb
inc
xchg
adc
arpl
aam
adc
xchg
sbb
push
jbe
mov
shlb
js
sub
fwait
scas
mov
jl
hlt
fidivl
add
daa
repnz
enter
xchg
or
pushf
xlat
fldenv
xor
repz
push
push
dec
ds
fs
testb
jg
pop
mov
lahf
jae
and
pop
sub
add
out
or
push
ljmp
mov
fs
in
mov
lock
adc
loop
jo
or
mov
jmp
xor
inc
or
mov
pop
pop
cmc
jecxz
xchg
int3
pop
aad
mov
imul
or
in
sbb
pushf
pushf
imull
mov
lahf
daa
sub
pop
ja
cmp
das
push
lds
leave
scas
das
dec
mov
shrl
cmp
push
and
fwait
xchg
xor
jecxz
lret
sti
dec
or
scas
in
xor
dec
aas
lods
lds
xlat
call
iret
or
nop
adc
sub
pop
repz
icebp
in
imul
sub
xor
cmp
mov
lods
out
adc
iret
jl
gs
lods
sub
fmuls
xor
push
jo
dec
outsl
push
lods
insb
rcrl
or
and
jbe
shll
and
inc
hlt
cmp
xchg
das
nop
push
sahf
ljmp
sarl
insb
daa
xchg
stos
mov
stos
out
push
test
fistpll
mov
out
ja
sub
rcrb
fildl
sahf
mov
push
mov
out
add
dec
add
imul
xor
fwait
clc
iret
mov
repz
pop
push
and
movsl
insl
or
xor
sahf
adc
gs
xor
rcrl
inc
xchg
int
ret
arpl
js
les
fnsave
clc
loop
aad
push
sbb
adc
int
dec
fildll
pushf
cmp
push
dec
push
out
stos
cmp
in
sti
jns
outsl
xor
stos
sbb
inc
shrl
jg
jb
push
or
mov
cmp
pop
test
mov
mov
xor
push
insb
adc
out
mov
xor
jle
adc
clc
xchg
push
or
in
into
fwait
ds
scas
fiadds
pusha
invd
lock
dec
les
movsl
out
cmp
aas
cmp
sub
call
cld
pusha
fstps
sub
mov
mov
idiv
inc
aas
jmp
push
xchg
mov
shrl
push
mov
pop
mov
jne
mov
mov
sbbb
or
adc
leave
repz
and
jmp
push
add
xchg
sub
push
mov
dec
out
mov
pop
adc
pop
cmp
xor
out
roll
mov
cmpsl
push
arpl
popa
fidivrs
adc
mov
rclb
xor
and
ss
cltd
std
int
repnz
or
sbb
imul
js
scas
cltd
push
aad
or
add
test
fisubrs
popf
out
dec
mov
pop
cmp
xchg
adc
jbe
loop
mov
roll
pop
jle
or
pop
std
push
shrb
ret
enter
push
aad
sahf
es
pop
mov
xor
sbb
mov
mov
and
movsl
mov
cmp
stc
or
sbb
mov
mov
mov
orl
mov
xorl
xor
addr16
jb
pop
repnz
mov
js
mov
jno
inc
or
sub
lods
or
pop
mov
cmc
fdivs
lcall
sarb
enter
jne
push
insl
mov
js
aas
fstpt
dec
push
les
pop
inc
das
xor
jne
xor
inc
cmp
pop
int
xorl
dec
jp
mov
testb
add
push
or
jle
push
inc
ret
loopne
jmp
insb
dec
cmp
pushf
icebp
xchg
test
xchg
imul
xchg
jl
shll
jnp
shl
or
in
ss
inc
sbb
xor
aas
pop
ret
pop
pushf
les
adcb
jno
xor
and
push
add
xchg
pop
int3
test
jle
pop
adc
inc
sub
push
inc
outsl
fisubl
int3
repnz
mov
pop
and
xor
shrb
mov
roll
loop
xlat
xor
jmp
mov
xchg
dec
stos
or
testl
mov
xchg
mov
sub
or
adc
ja
mov
pop
xchg
and
sbb
add
xor
test
lcall
outsl
push
test
lods
add
ja
xchg
insb
loope
lea
adc
stc
test
rorb
mov
pop
scas
mov
lock
mov
adc
cwtl
push
sbb
mov
push
mov
flds
jle
dec
xchg
xchg
dec
sub
push
sbb
or
lods
shrb
leave
push
out
jne
test
decb
or
sbb
cld
xchg
pop
popa
lcall
ljmp
pusha
mov
dec
xor
pop
gs
xor
xchg
dec
test
loopne
inc
mov
push
pop
xor
addr16
sub
lret
pop
dec
leave
adc
mov
mov
cmpsb
lahf
rcr
mov
xchg
push
into
push
fwait
xchg
test
mov
aaa
and
ds
mov
repz
loop
sbb
adc
sbb
cmp
pop
inc
scas
in
fwait
pushf
insb
xchg
adc
xchg
xchg
out
or
mov
cltd
bound
fisubrs
pop
mov
sub
jge
negl
aad
xchg
cmp
in
out
add
in
mov
mov
loope
push
jo
testb
mov
mov
xchg
fwait
cmc
cmp
orb
dec
mul
mov
adc
aaa
sahf
jl
dec
mov
mov
mov
ret
je
scas
and
int3
and
mov
inc
sub
les
outsb
arpl
test
add
lea
xor
lods
fs
mov
adcb
xchg
and
xchg
movsl
out
pop
pop
mov
stos
aas
add
sbb
pop
lds
ljmp
cmp
push
inc
pop
ss
sarb
cmc
jmp
outsl
imul
cmp
xor
mov
bound
popf
sub
sub
mov
leave
dec
push
dec
scas
mov
inc
pop
imul
sbb
inc
push
and
mov
in
lods
sbb
fsubr
pop
mov
and
adc
xchg
xchg
xor
inc
ja
and
ljmp
std
jmp
adc
je
ljmp
hlt
dec
or
andb
movsb
mov
dec
ret
inc
xchg
inc
push
in
pop
sahf
testl
jnp
cmp
push
or
push
push
in
in
popw
jns
psubd
sub
xlat
mov
stos
imul
push
popl
mov
aad
adc
dec
in
push
cmpl
lahf
aam
ljmp
cmpb
gs
mov
fildl
push
lea
inc
mov
dec
xchg
shlb
fucomip
mov
xchg
mov
mov
mov
mov
es
les
add
add
cmovno
push
loopne
xchg
jbe
mov
into
mov
jno
popa
inc
out
in
out
imul
pop
insl
add
mov
push
cltd
push
adc
sbb
mov
loopne
xchg
and
fstsw
int3
pop
adc
inc
ja
aas
std
cli
imul
andps
dec
test
inc
dec
sbb
push
inc
push
rcrl
lods
enter
inc
lret
jl
clc
ret
sbb
sbb
cmpsb
jecxz
mov
dec
mov
neg
mov
movb
sub
push
rep
pushf
pushl
pop
mov
push
lea
jmp
cmc
push
inc
call
jnp
xchg
or
mov
pushf
data16
outsl
mov
pop
dec
mov
popa
xor
push
roll
cli
call
push
rcrb
push
mov
xchg
mov
daa
call
sub
loope
addr16
push
or
cld
push
cwtl
cmc
dec
push
pop
lcall
adc
enter
jns
test
cmp
push
xchg
lock
les
pushf
nop
ja
push
aas
push
push
test
pop
mov
adc
and
fcmovnb
insl
cmp
jnp
lahf
lods
xchg
int
and
mov
test
add
pop
lea
xor
mov
sub
orb
in
xchg
jnp
dec
add
mov
add
stos
enter
je
rcll
adc
into
push
pop
rorl
sbb
sub
mov
dec
rolb
lea
ja
neg
test
ror
sub
inc
shrd
ror
and
add
shl
mov
dec
push
cmp
sar
mov
push
call
imul
inc
shr
cmc
xchg
arpl
fimuls
mov
or
dec
jae
adc
and
lds
push
es
sbb
adc
mov
push
xchg
push
xchg
jmp
cmp
push
pop
mov
dec
xchg
fcoms
rorb
add
jno
xchg
js
xor
push
mov
pushf
mov
pusha
mov
jmp
pusha
lea
jne
push
movl
pusha
push
push
lea
jmp
jmp
stc
test
call
lcall
add
orb
pusha
popa
lret
nop
mov
pop
fwait
sub
cmc
cmc
pop
sub
or
pop
xchg
negb
aaa
loop
jmp
imul
out
insb
dec
movsb
leave
ja
xchg
repnz
icebp
push
xchg
test
jecxz
jp
xbegin
ja
dec
sqrtps
xor
sbb
lods
mov
sub
jno
add
bound
pop
mov
ret
add
mov
mov
dec
dec
sbb
pushf
sahf
mov
incl
dec
aad
cmpsb
cmpsl
lcall
daa
dec
lods
aam
enter
insb
shl
mov
xchg
cmpsb
cld
lds
hlt
std
lret
push
stos
add
inc
pop
fcompl
jno
lret
ja
cmp
fistpl
in
pop
movsb
dec
ret
mov
or
xor
movsl
sbb
rcl
call
adc
mov
mov
dec
andb
incb
sub
push
int3
lods
add
mov
in
push
jmp
int3
mov
dec
sarl
xchg
mov
cmp
and
push
call
je
xchg
call
pusha
push
lea
jbe
bswap
jmp
pusha
cmc
cmp
movl
mov
lea
ja
rcl
add
shl
jmp
pop
cwtl
jge
ss
cmp
adc
into
cmp
add
arpl
idivb
cli
out
lea
sahf
pop
sub
cmpsl
mov
cmp
sbb
mov
jae
test
movsb
cltd
and
mov
insl
xor
or
cmp
and
pop
fwait
popa
cltd
adc
inc
adc
mov
je
mov
push
and
pop
sbb
stos
cmpsb
lret
adc
ret
push
xchg
mov
in
push
data16
aad
data16
data16
dec
outsl
popf
add
mov
dec
push
loope
bnd
jno
ret
lea
out
pop
test
mov
rorl
ja
cmp
add
mov
shl
push
je
daa
add
inc
jo
xchg
lret
and
out
xor
mov
mov
repz
jnp
jne
lret
leave
pushf
cmpsb
xor
imul
insb
je
idivb
clc
imul
call
popa
and
lahf
inc
xchg
ficompl
jne
rorb
rolb
sub
xchg
call
jmp
pushf
jmp
bsf
add
rcr
call
sbb
testl
mov
xor
or
xchg
jl
ret
les
mov
mov
jbe
add
mov
call
popa
push
sub
jnp
addr16
out
outsl
jp
push
sarb
add
int3
add
xor
push
jnp
jle
scas
push
lods
aam
out
mov
imul
add
daa
jns
shll
fwait
cltd
mov
push
ret
xorl
fwait
andl
shrb
mov
cmc
daa
repz
fdivs
lds
sarl
xchg
dec
push
xchg
nop
lods
push
xor
xchg
sub
jmp
mov
arpl
mov
dec
leave
aad
inc
or
repz
mov
int
rclb
es
sbb
imul
pop
pop
cmp
mov
movsb
xchg
in
in
xchg
push
lds
subb
std
test
dec
adc
mov
cs
mov
mov
lock
pushf
lods
mov
movb
cmc
call
aam
cmp
jo
adc
mov
jns
clc
ficompl
inc
sbb
or
xchg
enter
dec
rclb
push
jns
jle
ss
test
mov
insl
test
lcall
dec
fcomp
int
or
or
rorb
aam
loopne
jecxz
movsl
jo
ja
scas
and
fstpl
fcomps
xchg
repz
add
lods
int3
mov
mov
negl
adc
aas
adc
jb
cmp
mov
inc
xor
es
adc
and
mov
data16
and
jno
das
shl
jl
jle
xor
orb
ret
cmp
lret
add
loop
cmp
les
cs
jp
xlat
sub
sbb
xor
push
cmp
xchg
in
add
stos
jp
or
std
ret
shll
gs
sub
add
pusha
cmp
sbb
es
jmp
jnp
or
arpl
js
loopne
shll
xchg
push
push
imul
cmc
cld
arpl
stos
lahf
gs
cmp
fisttps
add
or
mov
and
sahf
or
jno
or
dec
shll
sbb
or
stos
mov
arpl
or
addr16
rorl
cltd
test
sbb
adc
lea
imul
mov
push
push
cli
jp
stos
mov
mov
out
movsb
add
out
scas
cmp
jne
pop
fsubs
sbb
stos
jle
or
mov
push
cmpsl
sbb
adc
insb
push
push
out
cmpsl
sub
add
gs
ss
and
stc
test
sub
push
gs
jp
xlat
jb
nop
adc
popa
in
scas
mov
fs
lock
fiadds
iret
sbb
rcrb
push
inc
dec
mov
and
xor
in
ret
test
xchg
lret
inc
pop
addr16
pusha
sub
mov
xchg
pushf
sub
movsb
pop
ret
and
loope
xchg
mov
cmp
dec
inc
xchg
push
sarl
repz
lds
dec
test
xor
ds
sti
dec
cmp
sub
fcoml
es
std
jge
xor
mov
dec
and
xchg
mov
testl
push
mov
mov
add
cmp
push
jmp
jmp
mov
sub
dec
mov
in
jp
add
fcoml
es
lea
test
and
imul
xchg
hlt
mov
pop
cwtl
xor
cmovne
test
pushf
xchg
sub
mov
pop
in
test
push
cmc
jbe
mov
fcomps
and
bound
aas
jns
or
addl
sbb
adc
add
mov
add
je
shrb
clc
mov
shlb
pop
js
and
outsl
les
ds
push
movsl
cmc
rcll
jns
into
movsb
inc
push
fldl
sbbl
cmc
outsl
inc
int
add
clc
int
mov
in
push
movsb
jns
adc
or
xor
leave
es
adc
pop
sbb
into
cmp
pop
mov
lock
in
int
pop
push
cmc
out
bound
mov
adcl
cltd
jae
xchg
fbstp
jbe
mov
movl
int
arpl
xchg
ljmp
and
ret
mov
xor
mov
movsb
mov
cld
ds
xchg
mov
arpl
cltd
sbb
insl
pop
xchg
iret
stos
pushf
pop
xchg
cmp
xchg
enter
mov
mov
cmp
cli
lcall
outsb
push
inc
into
movsl
dec
loope
in
adc
jle
popf
xor
in
movsb
ret
fsubrs
and
scas
sti
xchg
lods
mov
mov
ljmp
data16
adcl
fnstsw
lret
pusha
inc
xor
mov
dec
lea
pop
xchg
xchg
nop
pusha
add
sbb
jo
inc
imul
loop
leave
xlat
sbb
sub
and
nop
bound
and
jp
lahf
inc
in
inc
stos
jecxz
bswap
pop
lahf
call
add
ljmp
cmp
dec
cwtl
in
insl
clc
push
insb
pusha
pop
ljmp
sub
sahf
pop
jmp
andl
nop
iret
cmp
lret
mov
push
add
testl
rolb
cmpsb
add
mov
jp
mov
fldl
dec
add
mov
add
test
ds
lret
cli
out
andl
cmpsb
cmp
mov
out
mov
sti
scas
lea
inc
mov
inc
adc
mov
aad
jecxz
scas
xchg
sub
mov
cwtl
ret
jp
rolb
pop
lret
xchg
or
sarl
cmp
and
jge
jnp
dec
test
mov
push
mov
mov
data16
std
sbb
pop
shlb
in
mov
mov
sahf
js
int3
inc
icebp
jnp
cltd
adc
repz
outsb
cmp
mov
repz
fincstp
add
ljmp
lahf
jnp
sub
je
push
andb
and
cltd
mov
jge
sarb
mov
pop
jg
loop
mov
adc
mov
dec
sbb
outsl
mov
xchg
cmp
pusha
xor
mov
push
mov
stc
pop
cmp
pop
add
cmp
pop
loop
dec
ffree
and
imul
mov
mov
rcll
pusha
in
mov
fimuls
push
xchg
xchg
das
mov
push
mov
pusha
jg
xchg
or
sub
jecxz
cmpsl
inc
adc
add
popa
xor
es
enter
repnz
cli
stos
js
mov
adc
jg
or
cwtl
push
mov
pop
xor
ret
adc
shll
ja
inc
sahf
cmp
int3
gs
mov
sbb
rcll
dec
loope
cs
popa
inc
jne
lahf
pop
or
dec
push
jg
shrl
push
lods
jge
dec
push
mov
outsb
lods
xchg
cmp
int
jne
cmpsl
xchg
pusha
in
int3
sbb
xor
andl
sub
sti
dec
fisttpl
jle
iret
call
adc
jns
in
sar
cmp
add
shl
push
jmp
cmpsl
xor
clc
dec
int
jle
and
jne
test
out
hlt
xchg
pop
sub
movsb
jnp
rcrb
insl
jecxz
jle
imul
das
iret
loop
mov
mov
js
ret
push
iret
insl
xchg
xchg
hlt
jbe
adc
aam
push
in
sbb
test
mov
outsl
pop
add
popa
dec
stos
imulb
sti
cmp
add
out
outsl
cs
pusha
adc
aas
jle
or
jmp
fsub
or
out
scas
jne
dec
xchg
popf
push
imul
stos
xchg
into
push
leave
jmp
cmp
mov
ret
leave
fs
lods
sub
rep
cmp
aad
jnp
mov
pop
xor
pop
fbld
int3
jne
push
pop
mov
es
lret
add
andl
pop
movsl
lock
out
movsb
or
sbb
test
and
outsb
mov
adc
dec
leave
lods
and
dec
idivb
call
outsl
lea
push
dec
nop
iret
push
cld
sti
cmp
mov
or
add
mov
adc
lock
sbb
ljmp
pop
in
mov
xchg
or
sbb
movsl
jne
lock
leave
js
push
push
mov
lahf
ret
pusha
add
in
aam
xchg
mov
cmp
test
cwtl
mov
fwait
cmp
xchg
dec
fdivrl
mov
pop
dec
jg
or
or
cli
popf
mov
sub
int
adc
lea
ss
ds
pop
jbe
add
bound
fisubrs
cmp
mov
dec
mov
xchg
ja
add
pop
push
inc
popf
fcomps
fidivs
cmp
in
shl
push
sub
es
leave
nop
xchg
aad
cli
jo
push
inc
cmp
lea
pusha
out
pop
jl
cld
popa
mov
inc
loop
iret
fiaddl
mov
jb
add
jbe
mov
lret
insl
out
aam
xor
cmp
inc
push
or
out
xor
adc
jb
fildll
leave
jns
pop
xchg
and
ret
arpl
popf
push
and
in
out
movsl
or
into
sahf
repz
add
sub
lahf
push
xor
in
dec
leave
jb
jo
jle
sti
push
cmpsl
fstl
dec
imul
cmp
lea
in
out
mov
or
sbb
mov
loop
sahf
jo
rcrb
fs
bound
cmp
test
fs
cmpsl
dec
sub
shlb
dec
xor
lahf
sub
xchg
clc
enter
push
mov
shll
sbb
sbb
jno
xchg
pop
ljmp
ljmp
xchg
sbb
adc
dec
push
ja
outsl
or
adc
push
pop
pop
pushf
cmpl
dec
inc
pop
insb
out
stos
jne
push
push
repnz
shll
push
lds
roll
in
or
loopne
or
lret
mov
insl
into
and
hlt
dec
aad
std
xchg
cwtl
in
addr16
and
mov
sbb
xchg
xchg
push
loop
xchg
pop
cmc
sahf
mov
xchg
or
or
push
xchg
icebp
jecxz
cltd
fsubrs
add
scas
loop
push
adc
mov
aad
outsl
movsl
pop
mov
xor
pushf
lds
cmpsb
into
xchg
jecxz
adc
mov
out
sub
stos
lods
dec
xor
mov
and
inc
pop
sahf
cmpsl
inc
or
push
into
mov
lret
aad
call
inc
pop
pushf
inc
jo
mov
test
cmpl
sub
sbbl
sbb
mov
cmp
jle
add
iret
jb
test
in
mov
stos
cmp
jl
sbb
idivb
loope
cmc
dec
popf
cmc
push
pushf
xor
stos
out
scas
dec
outsb
scas
stos
sbb
and
pop
loope
pop
iret
mov
stos
cmp
sbb
pop
insb
lock
mov
lcall
adcl
sbb
hlt
dec
xorl
pop
negb
jo
fcompl
jb
or
lret
cld
orb
decl
mov
cmp
imull
in
outsl
cli
std
cmpsb
pusha
xor
jae
insb
mov
test
or
out
icebp
inc
leave
or
cwtl
push
in
pushf
xchg
add
pop
pop
pop
xchg
in
mov
mov
mov
cmp
test
inc
xchg
roll
jo
int3
push
movsl
xchg
jns
loopne
sahf
mov
mov
xchg
cmp
jg
adc
xchg
daa
mov
xor
adc
push
inc
dec
cmp
stos
jmp
lret
loopne
je
adc
push
out
push
arpl
cmp
shlb
inc
or
xlat
dec
lahf
cmp
fcoml
and
ja
pop
add
sub
popa
mov
gs
push
add
pop
fwait
js
fdivs
popf
and
popa
push
test
dec
mov
out
mov
sti
pop
sbb
xor
pushf
jbe
pusha
adc
jmp
push
mov
enter
inc
fstl
hlt
je
stos
or
insb
andb
dec
adc
jl
shll
cmpb
idiv
and
fildl
mov
inc
jmp
xor
xor
out
or
ret
test
ja
fldl
lahf
mov
fwait
xor
add
jmp
dec
jno
jns
xchg
add
inc
sbb
mov
ss
jl
inc
push
mov
pop
aaa
cwtl
stos
and
pop
xor
in
xchg
xor
lods
cmp
adc
jnp
or
loope
js
dec
mov
in
icebp
adc
jbe
shll
or
xchg
and
inc
roll
outsl
mov
mov
pop
shl
push
int3
sub
gs
mov
inc
lods
addb
sub
out
mov
into
scas
loop
xchg
lcall
inc
inc
push
fstpt
xchg
shlb
mov
inc
cmpsl
mov
dec
mov
iret
clc
inc
andb
xchg
jnp
or
clc
cmpsb
mov
inc
orl
push
cmp
stos
shrl
fnsave
idivl
outsl
in
mov
xor
mov
or
dec
pushf
ljmp
aaa
pop
push
notl
jnp
sbb
or
adc
cmc
xor
pop
fsub
stos
adc
test
cmp
xor
or
mov
ja
inc
dec
add
sub
dec
sahf
test
data16
int3
pushf
icebp
jno
mov
fldl
dec
xchg
lea
adc
xchg
mov
push
jne
fld
rclb
cmp
mov
sub
rcrl
popa
sti
daa
sbb
nop
mov
or
mov
insb
in
hlt
out
or
cmpsl
dec
or
call
push
pop
sti
scas
xchg
add
xor
std
adc
pop
iret
and
jp
xchg
shlb
loopne
sar
into
mov
out
inc
ja
pop
xor
adc
adcb
sub
ja
inc
sbb
repnz
stos
or
call
insl
std
mov
in
push
sbb
mov
mov
outsl
scas
into
in
jo
cmp
arpl
mov
cs
xchg
xchg
nop
in
and
aaa
orb
push
or
xor
cld
jl
pop
xchg
call
dec
sub
insl
sub
in
sub
dec
mov
mov
xlat
adc
inc
jne
jo
clc
int3
pop
call
push
rcrl
mov
lods
int3
repnz
popf
pop
lock
add
jo
ss
into
pop
pop
cs
pushf
push
mov
nopl
sbb
jl
fwait
fs
cli
fwait
sbb
movsl
jo
ljmp
mov
cmp
cmp
lret
sbb
xor
jne
enter
cmp
movsl
jmp
loopne
pop
pushf
ss
rcll
dec
int
cld
lock
mov
or
das
xor
jnp
jns
xchg
enter
addr16
addb
jb
add
outsl
or
roll
test
and
add
sbb
jb
fisubrl
out
sbb
mov
sbb
cmp
pop
xchg
in
nop
jle
out
cs
adc
jg
adc
fwait
shrl
jno
or
dec
mov
lahf
jns
cltd
sbb
int
loopne
push
mov
mov
add
push
cmp
in
mov
push
hlt
les
lret
add
jno
xchg
sbb
rcr
add
pop
push
sub
cli
inc
dec
jo
insl
movsb
mov
aad
pusha
incb
aaa
mov
movsb
lret
lret
cmpsl
cmp
iret
inc
lods
or
xor
cmp
jg
aas
sub
and
nop
jbe
test
xlat
lds
aad
nop
jae
cli
mov
mov
mov
xchg
test
mov
out
lcall
stc
jge
push
cmpsl
mov
ds
scas
push
inc
adc
addb
repz
sarb
dec
jno
lock
pop
and
or
jne
nop
inc
jno
jl
ja
sub
lock
orb
cmpsb
dec
movsb
daa
inc
hlt
mulb
jnp
xchg
add
iret
sub
xor
inc
popf
cmp
cmpsl
popf
push
sub
sub
mov
or
mov
inc
adcb
fisubs
jle
xor
test
es
cltd
or
xchg
out
sbb
push
or
arpl
in
pop
aam
mov
gs
sahf
sub
ds
inc
adc
outsl
and
inc
rolb
xor
mov
dec
aas
push
popa
repz
dec
imul
insl
pop
sbb
mov
in
call
pop
sbb
ror
push
dec
sub
inc
frstor
sti
insb
arpl
and
sahf
shlb
cmp
sbb
outsb
mov
je
mov
mov
stos
cmp
pop
fwait
out
jae
aas
mov
shrw
cmp
cltd
xor
pop
into
and
icebp
jbe
jmp
imul
bound
add
popf
out
adc
lods
fnsave
test
mov
popf
sub
sti
mov
rcrl
add
addr16
dec
push
loope
sbb
cmp
arpl
adc
xchg
mov
sbbl
dec
ljmp
sarl
test
inc
insb
inc
xchg
lahf
jmp
test
sub
adc
pop
lret
js
push
adc
xor
push
fisubl
push
mov
adc
imul
outsb
pop
pop
fimull
subb
mov
adc
dec
and
jp
mov
iret
mov
fcoml
xor
add
and
repnz
mov
js
pop
scas
dec
lods
push
push
pop
xchg
stos
cmp
ljmp
aas
ret
cmc
and
pop
add
leave
scas
push
in
pop
xchg
sbb
popa
fidivs
pop
fstpl
xor
pop
dec
lea
ss
test
mov
mov
popa
insb
test
out
arpl
notl
ja
push
cmp
xor
sbbl
add
lret
dec
xchg
push
scas
fbstp
jmp
jns
pop
jp
fnsave
adc
int
pop
in
xchg
pop
mull
pusha
jle
int
repnz
mov
adc
and
push
inc
jo
subl
mov
inc
test
adc
and
std
mov
push
imul
jae
mov
shlb
pop
shl
pop
rcrb
xor
loope
enter
call
int
pop
xor
or
outsb
mov
jne
or
sub
xlat
in
sub
jg
repz
adc
icebp
adc
shlb
push
jae
fld
repnz
iret
divl
fmuls
mov
loope
out
lods
sub
ficomps
sub
pop
dec
repnz
and
dec
adc
mov
ficomps
mov
mov
push
orl
orb
lea
pushf
push
mov
mov
cmpsl
or
pop
das
dec
jno
or
mov
lods
jg
fstl
xchg
mov
clc
xor
incb
fs
fiaddl
minps
les
cltd
fsubrs
pop
divl
stos
andl
adc
cmp
cmc
js
sbb
sub
xor
dec
mov
sub
cmpsl
fdivp
xchg
inc
scas
sub
fs
or
cwtl
mov
cld
mov
pop
or
loopne
imul
add
pop
arpl
jl
fcompl
push
fwait
sub
mov
imul
lret
test
lock
or
or
and
ja
mov
jge
push
cmp
dec
ret
xchg
and
repnz
or
xchg
push
mov
andb
jecxz
orb
push
mov
into
mov
rorl
add
add
jo
dec
cmpl
loop
cmpsb
inc
out
in
xchg
rep
pop
cwtl
jno
mov
inc
add
adc
fistpll
int3
inc
bound
das
mov
das
shrb
mov
aas
cli
cmpsb
fcoml
xchg
rcrl
add
adc
mov
rolb
out
adcl
jle
mov
jmp
sub
and
jae
test
adc
pop
in
loope
push
jmp
inc
mov
jno
mov
in
aad
int3
push
jge
inc
ret
mov
clc
jbe
lret
pop
sub
test
into
jl
inc
imul
icebp
pop
shlb
lahf
and
hlt
adcl
inc
js
loope
popf
and
ret
bswap
push
mov
jbe
mov
lods
xchg
rorb
or
xchg
bound
movsb
push
mov
inc
sti
test
inc
fsubs
ss
xor
clc
sub
mov
jbe
sbb
outsl
cmovo
aaa
mov
and
sbb
addr16
das
cmovae
mov
xchg
jbe
or
and
dec
jle
lret
mov
jnp
roll
cld
orl
movsb
and
fildl
out
cwtl
sub
sub
fs
mov
push
sub
fistpl
test
mov
repnz
pushf
dec
ret
repz
and
sub
subb
rolb
sbb
inc
push
pop
cmp
adc
jno
adc
sub
fwait
jl
pushl
xchg
rcrb
in
dec
mov
ret
push
xlat
adc
fmull
loope
lods
inc
or
sarl
mov
cmpsb
sti
jne
pop
inc
jno
fucom
sti
push
icebp
sbb
loop
movsb
gs
xchg
xchg
fists
xchg
in
lret
fcoml
inc
jne
loopne
ljmp
jno
dec
sub
daa
pop
js
dec
rcrb
loop
enter
push
mov
repnz
out
xor
jg
xchg
test
pop
cmp
push
and
pop
mov
mov
sbb
icebp
cld
cld
rcrb
outsb
add
das
sub
imul
addl
cmp
push
adc
imul
lahf
cmp
or
adc
outsl
jmp
jge
inc
xor
jb
jbe
jnp
inc
xchg
push
pop
or
int3
loop
fldl
push
sub
cltd
in
add
xchg
lret
jle
jbe
mov
cwtl
subb
xor
inc
cmp
sbbb
cmp
and
mov
sub
loop
lahf
pop
mov
add
insl
fmull
inc
icebp
and
scas
in
lea
dec
cmpsl
xchg
push
lods
outsl
adc
xchg
call
pop
lret
xor
outsb
cmpxchg
test
sbb
mov
and
outsb
loop
xchg
int
mov
push
ja
or
lret
add
xor
cwtl
dec
cs
push
in
xor
or
sbb
jne
or
jbe
fdivrp
es
mov
and
push
in
mov
outsb
mov
and
idiv
jmp
mov
push
sub
orl
loop
aaa
lahf
sbb
push
jl
out
inc
ret
orb
xchg
ficomps
lahf
jo
divb
jl
jge
mov
adc
pop
fucomp
mov
pushf
add
jg
lea
jae
xchg
in
das
dec
mov
stos
push
jne
sbb
mov
clc
pusha
mov
cmpb
push
lea
jne
lea
btc
clc
rcl
xor
pusha
bswap
and
mov
stc
rol
add
dec
pushf
pusha
mov
jmp
cmp
sub
add
add
je
add
or
add
jmp
add
add
add
ret
and
add
add
cli
in
and
add
add
aad
xor
add
add
dec
stos
sub
add
add
mov
add
add
ret
and
add
add
inc
pop
das
add
add
add
push
and
pop
fldt
add
out
add
jae
add
sub
add
add
fwait
xchg
ja
xchg
movb
les
adc
push
loope
jle
dec
pop
jnp
out
aas
or
jg
shrl
or
adc
aad
push
mov
ffreep
jae
outsb
ljmp
mov
inc
into
xchg
test
cmp
sbb
insl
cmpsl
mov
mov
sub
cmp
out
icebp
cmp
repz
or
mov
cmc
dec
lcall
mov
je
pop
push
ja
shlb
js
mov
lods
mov
sahf
icebp
and
mov
iret
push
icebp
out
dec
cmp
lds
out
shll
pop
mov
inc
sbb
test
in
dec
inc
movsb
out
push
mov
jbe
rcll
lods
ret
loop
ljmp
xor
inc
enter
sbb
xor
stos
and
outsb
mov
fistpl
test
adc
inc
sbbb
shrl
not
mov
pusha
ror
pushl
push
inc
inc
bt
not
rol
pushf
inc
not
inc
dec
call
pushf
pushf
lea
je
rcl
rcl
add
dec
sub
or
movsbw
movzbl
mov
shr
bsr
ror
or
mov
movsbw
add
cmc
rcl
add
test
mov
bsr
mov
jmp
jle
push
inc
lods
cmp
ret
jae
in
into
cmp
and
push
and
jmp
cmp
int
mov
mov
cmp
push
aad
jns
sarl
add
and
mov
ret
and
dec
into
pop
dec
les
mov
cmp
mov
pop
mov
mov
mov
cmpsb
stc
iret
lods
outsl
inc
lods
hlt
aas
push
inc
mov
lods
adc
int3
or
cld
sahf
scas
push
fxam
shlb
out
xor
cmovg
jb
pop
call
mov
subl
cmp
aaa
xchg
mov
das
mov
add
inc
pop
test
mov
lds
or
pop
loop
inc
mov
data16
push
incl
lock
flds
cli
cmp
repz
xchg
push
in
mov
leave
xor
pop
out
mov
mov
pop
push
pushf
fidivrs
xchg
pop
pushf
mov
scas
mov
jne
aas
fdivrl
jp
sub
out
cmp
mov
js
sub
cmpsb
in
ftst
or
add
mov
jg
ljmp
adc
nop
loop
mov
mov
pusha
xchg
dec
leave
or
sbb
push
mov
fwait
icebp
addr16
inc
dec
ret
popa
push
int
adc
aas
idivl
fiaddl
xchg
and
push
nop
bound
ja,pn
sub
shr
jno
sub
lcall
dec
pop
mov
loopne
xor
mov
or
rorw
push
jmp
scas
pop
outsb
fists
in
pusha
cwtl
and
dec
xlat
jb
jmp
add
inc
mov
add
loop
or
sub
fisubrl
lret
popf
pop
adcb
fstl
inc
out
cmp
dec
cld
call
scas
pop
mov
and
push
mov
or
xchg
inc
ret
push
push
divb
mov
nop
mov
cltd
ds
add
clc
xchg
xchg
ret
jl
in
pop
lret
jl
mov
mov
mov
in
mov
cmp
xchg
push
xor
xor
dec
pop
mov
scas
pop
popf
arpl
movl
push
push
mov
lea
jmp
or
jmp
pushf
lea
je
lea
lea
pushf
lea
not
movzwl
bswap
mov
lea
push
mov
pushf
lea
call
push
lea
jne
mov
mov
push
pusha
pusha
movb
lea
jmp
movsb
lahf
mov
dec
push
push
lea
aam
inc
movsl
or
xor
mov
popf
xor
jno
outsb
cmp
jne
jae
xor
daa
insb
orl
shll
dec
push
cmp
pop
inc
jge
test
mov
mov
cmp
mov
repnz
movsb
loop,pt
ljmp
fwait
push
pop
mov
xor
mov
ss
pop
cmpsl
out
xor
nop
out
sbb
mov
or
dec
hlt
sbbl
in
push
xor
dec
test
cld
and
cmp
add
push
out
enter
mov
and
stos
imul
ret
xor
xchg
ja
lcall
sub
gs
or
test
rclb
fs
cmp
pop
outsb
incl
jmp
out
jmp
stos
test
mull
mov
std
jecxz
xor
orl
xor
adc
sub
icebp
ret
mov
xlat
shrb
sub
xchg
daa
out
add
xchg
imull
inc
scas
jmp
sbb
and
stc
je
push
add
insb
or
frstor
call
int3
add
pop
jmp
xlat
out
sarb
cmp
sbb
and
mov
in
loope
stos
inc
inc
fwait
daa
ss
outsb
pop
inc
scas
sub
ss
jbe
icebp
mov
loop
or
sbb
or
push
addr16
test
pop
ret
idivl
mov
in
movb
mov
mov
mov
jb
addr16
incl
xchg
mov
imul
add
fnstsw
add
cmpsb
adc
cmp
push
rcr
dec
jbe
add
stos
mov
inc
pop
aam
sarl
inc
stc
pop
xchg
in
arpl
xlat
mov
jne
and
cmpsl
mov
pop
mov
les
sub
push
test
pop
les
fldt
loope
test
stos
divb
pop
inc
xor
ret
cmc
stos
mov
inc
pusha
cli
add
fldt
pusha
cltd
test
jecxz
jmp
out
icebp
mov
xor
xchg
scas
mov
cmpsl
les
sarb
jbe
pusha
addr16
pop
or
fdivrl
mov
mov
xchg
adc
xchg
jmp
push
inc
mov
mov
data16
jb
push
pop
mov
inc
int
pop
mov
test
lds
sbb
addr16
push
pop
stos
in
add
shrb
sti
inc
in
shlb
cwtl
movsl
rol
lahf
xchg
dec
add
clc
popa
inc
in
jmp
test
das
push
jno
icebp
rcrl
dec
stos
divl
sbb
out
cld
ja
testb
xchg
std
not
push
scas
push
out
imul
iret
das
mov
incl
div
sti
test
sub
lcall
popa
sbbl
cld
cmp
in
incb
jmp
sarb
push
in
je
mov
push
push
insl
cmp
mov
in
out
mov
jge
and
mov
testb
inc
jl
xchg
fs
mov
push
mov
mov
add
repz
mov
leave
in
das
sbb
out
loope
idiv
lea
and
mov
xor
jp
cli
mov
pop
insl
mov
sti
dec
out
ret
pop
xor
fnstcw
mov
jns
jl
mov
adcb
sbb
lret
cmp
mov
insb
in
or
push
xor
cmp
imul
sbb
addr16
adc
adc
pop
xchg
sub
ds
out
testl
es
scas
jmp
dec
out
sahf
add
add
hlt
jne
push
jnp
jg
test
movsl
mov
insb
add
data16
outsb
mov
adcb
mov
insl
jo
addr16
loopne
mov
cwtl
lock
std
mov
arpl
push
arpl
add
pop
test
loopne
lahf
out
mov
imul
sbb
movsb
mov
pop
mov
mov
out
jecxz
mov
cmc
xchg
mov
pop
xchg
push
lock
jno
dec
out
lods
xchg
int3
push
inc
xchg
xchg
and
test
cmpsb
loop
cmp
insl
out
jne
lret
push
icebp
cmpb
sbb
mov
loopne
pmulhw
sahf
cmp
jecxz
adc
jg
ljmp
mov
movsb
mov
js
loope
movsb
mov
aas
movsb
psadbw
push
sub
inc
lods
inc
sbb
fwait
ret
mov
lods
icebp
push
lods
pop
int
loope
lods
movsb
pop
mov
cmp
mov
mov
add
mov
mov
aad
mov
rclb
es
icebp
jb
daa
mov
fcmovne
in
cmpsl
jmp
push
fidivrl
pmaddwd
mov
ljmp
repz
xor
movsb
std
mov
mov
ljmp
cmc
mov
es
mov
lahf
imul
pop
aaa
jge
and
mov
roll
cmpsl
cli
gs
in
imul
jle
lods
cmovb
cmc
push
and
adcb
fdivl
mov
fildl
dec
jo
push
out
xor
cs
and
sar
pop
rolb
mov
out
inc
add
xchg
jne
adc
or
push
or
out
aas
aad
sbb
add
xlat
movsb
sbb
out
test
mov
popa
mov
inc
lcall
sub
jg
int3
jp
aam
xchg
mov
push
aad
jp
aam
push
shl
cli
aam
add
adc
cmpsl
sbb
or
cmp
add
jmp
pop
inc
fnstcw
out
push
mov
leave
out
in
pop
push
in
cmp
negb
testl
and
inc
sub
cmp
jb
loopne
je
push
out
bound
repnz
fcoml
or
jnp
lds
pop
jle
and
xlat
inc
inc
mov
jns
pop
subl
fnstenv
cli
inc
movb
mov
mov
jns
pop
out
daa
push
mov
repz
xorps
jle
xor
xchg
mov
aad
jb
fstpt
insl
icebp
mov
scas
jg
out
out
push
push
icebp
loope
mov
into
loope
cmpsb
add
nop
push
aad
xchg
fildll
push
lea
ja
jmp
and
das
ret
and
jecxz
mov
in
pop
add
push
loopne
inc
icebp
lcall
xor
in
jo
in
aad
pop
pop
xchg
shlb
faddl
pop
aad
xchg
in
pop
cmp
pop
das
aaa
fildl
subb
iret
ffree
insl
lods
push
dec
loopne
movl
nop
mov
loop
das
xchg
jg
dec
mov
push
outsl
test
cli
or
inc
mov
cli
insb
loopne
dec
dec
adc
shl
in
cwtl
sbb
push
outsb
mov
inc
std
jge
mov
pop
mov
out
sarb
nop
scas
mov
and
mov
aad
sbb
cld
add
jge
cmp
xchg
jecxz
cld
jle
sub
cld
inc
stos
xor
cmp
lea
sahf
add
fisttpll
scas
and
add
test
out
cld
cld
daa
and
inc
fidivrs
xor
xchg
pop
xor
sbb
popa
jb
mov
cmpb
mov
popa
add
xlat
jp
popa
ds
fstpl
jp
mov
dec
inc
sub
mov
cmpsl
mov
mov
inc
add
and
or
add
push
cmpsl
out
loopne
lret
adc
xor
cmp
inc
inc
stos
loope
mov
mov
inc
xchg
les
stos
inc
in
mov
push
and
cli
mov
mov
adc
cmp
inc
lods
xchg
xor
out
add
imul
cmpsb
cmpsb
out
popf
or
and
sub
jge
scas
jecxz
adc
idivl
mov
jae
arpl
popa
jg
pop
mov
push
jge
cltd
push
int
pop
jbe
ja
xor
xchg
addr16
cmp
cld
pop
jmp
mov
adc
mov
fneni(8087
inc
inc
int
and
test
movsb
push
negb
lahf
adc
cmpl
pop
lock
adcb
sub
jnp
cmpsl
sbb
jp
mov
fadd
popa
ret
inc
daa
sbb
iret
sar
leave
fbld
shr
mov
and
sbb
mov
pop
cmp
orl
sahf
xchg
out
ffree
mov
fstl
fmull
mov
mov
cmp
andb
daa
dec
xchg
repnz
jl
lea
out
sub
mov
cmpsb
jno
push
rorb
cs
mov
mov
gs
or
stos
popl
xchg
fidivrl
push
push
mov
dec
mov
add
mov
sbb
leave
iret
fdivrp
and
push
out
xor
sub
cmc
fimull
sbb
movsl
aad
push
out
mov
dec
fildl
insl
ja
sti
fcoml
adcl
ljmp
cmp
nop
js
cmp
adc
lock
aaa
ss
jge
push
outsl
loope
cmp
out
push
cmp
hlt
and
test
insl
and
push
xor
push
inc
add
std
fisubrs
mov
scas
cmpb
out
clc
add
test
push
add
dec
push
push
mov
lock
dec
popa
mov
roll
loope
dec
push
mov
ljmp
add
das
ds
xchg
dec
es
leave
mov
movsl
or
sbb
mov
icebp
cli
push
lock
push
enter
fsubl
cmp
insb
pop
mov
in
push
inc
fs
push
cmc
and
push
push
movsb
out
pop
ret
out
pusha
orl
shrb
dec
aad
fnstenv
jmp
mov
add
mov
in
or
movl
or
setle
or
or
xor
clc
in
gs
lods
inc
shlb
mov
subb
jge
fsub
scas
mov
sbb
jmp
inc
insl
das
push
jmp
lret
insl
cli
and
insl
imul
pop
shll
jbe
jo
add
mov
andl
das
leave
push
movb
and
mov
loop
cmp
mov
dec
sbb
fneni(8087
mov
add
loope
dec
xchg
inc
cmpsb
in
sub
jne
xor
sbb
cmp
jne
jg
jge
and
xorl
jo
in
fwait
je
imul
or
push
mov
stos
inc
mov
mov
or
sub
push
fisttpl
jge
pop
and
in
xchg
inc
lahf
jecxz
jge
mov
test
icebp
pop
movsl
clc
lock
sub
popf
imul
test
add
ja
jle
nop
insl
and
jb
push
aad
pushf
faddl
sub
or
cmp
loop
incb
mov
inc
testb
mov
cmc
xchg
sub
fsubs
mov
jnp
mov
jbe
fcompl
ss
sar
add
jecxz
xor
push
xchg
addr16
hlt
cmp
aaa
lods
xchg
lea
bound
jmp
mov
popf
andl
xchg
sub
loope
dec
jle
xchg
mov
pmulhw
mov
jp
xchg
sub
mov
xchg
clc
into
xchg
daa
pop
push
roll
insl
fwait
fs
jmp
and
and
rolb
les
roll
xchg
pop
sub
jl
push
mov
in
int
pop
pusha
nop
outsl
xor
test
jnp
orb
rcrl
jecxz
in
cld
sbb
fistps
mov
testb
popf
shlb
incb
jg
imul
and
popf
mov
jl
hlt
ja
pop
ret
fsubs
mov
cmpsb
xor
movsl
call
addr16
pop
inc
int
and
jne
jae
push
mov
mov
mul
add
mov
add
daa
aad
xchg
pop
sub
cmc
lods
jecxz
cmpsl
cmp
fcomps
pop
roll
aam
div
out
outsl
repz
fsubrs
xchg
cmpsb
es
cmc
jns
mov
mov
bound
sbb
mov
jns
imul
sbb
rolb
fmuls
fsincos
push
pusha
dec
mov
jns
xchg
mov
inc
shlb
movl
sarl
mov
mov
inc
dec
jge
push
out
inc
mov
mov
test
sti
les
loope
add
xchg
xor
mov
in
xchg
out
aam
popf
xchg
incb
push
int
fnstenv
cs
andb
test
mov
icebp
out
incb
inc
cmp
pop
fs
cmp
push
inc
pop
fneni(8087
outsl
inc
cli
fcomi
or
mov
arpl
jb
sbb
scas
mov
roll
dec
out
xchg
push
and
cmpl
int
pushf
or
popa
enter
ljmp
jbe
jecxz
sbb
push
addr16
outsb
push
add
cmp
shr
lcall
mov
test
les
inc
jmp
loop
jle
mov
xor
mov
fidivrs
aas
mov
enter
mov
pushf
sbb
cmpsl
xchg
xchg
inc
lods
addl
rcll
arpl
movl
insl
cli
int
xor
pop
je
jae
stc
clc
lret
cmpsl
cmpsl
rorb
push
leave
ffreep
mov
mov
pop
xorb
adcb
xlat
adc
and
xor
jle
outsl
adc
outsl
add
out
add
shlb
and
addr16
and
in
incb
hlt
cmp
add
cmpsb
ljmp
rcr
in
mov
cmp
ss
arpl
mov
xor
jns
std
cmp
aad
mov
gs
mov
aaa
xor
dec
sahf
jne
addr16
scas
in
cmp
enter
jno
in
stos
movsl
mov
dec
push
scas
fisttps
cmc
jp
in
movnti
mov
shr
popf
or
pop
jnp
and
incb
out
xor
xor
xadd
adc
insl
cmc
xor
cmc
push
xchg
adc
mov
mov
push
pop
insl
or
cli
cmp
cmc
fstpt
dec
cmp
aaa
mov
cmc
jp
std
loopne
scas
lds
aas
xor
data16
cmpsb
fisttps
jne
inc
jp
lret
out
mov
mov
sub
pop
push
cli
in
inc
push
cmc
jb
push
add
mov
mov
out
and
ret
cld
dec
push
xchg
cli
sbb
mov
mov
testb
xor
pop
jb
xor
mov
cmpsl
jg
lcall
idivb
adc
cmp
cmc
jp
push
movnti
popa
cli
fimull
vmwrite
scas
or
push
cmc
jb
push
andl
push
stos
cmp
mov
mov
jecxz
push
ss
pop
dec
push
ret
lahf
leave
filds
stc
xchg
sub
mov
mov
cltd
mov
out
or
xor
fabs
test
adc
scas
lods
in
push
adc
mov
div
sbbb
int3
lock
in
sub
jnp
xchg
pop
push
test
jbe
mov
in
dec
cmpb
sbb
leave
ret
dec
push
mov
ret
mov
mov
popa
pop
enter
xlat
inc
cld
pop
scas
sar
push
push
ljmp
mov
jmp
cmpsb
and
adc
loop
inc
mov
lret
inc
lret
sbb
xchg
pusha
adc
in
das
incb
popa
or
or
clc
fimull
jg
mov
pop
pop
imul
inc
loope
es
in
fcomi
lcall
jl
inc
cmp
adc
xlat
test
jb
push
xchg
pop
int
mov
dec
aas
notb
cmp
pop
add
iret
aam
outsb
jne
pop
cli
and
lea
test
iret
loopne
mov
sub
cs
scas
push
ret
enter
push
ret
add
clc
or
mov
fstpt
pop
out
ja
pop
sub
repnz
loope
ss
dec
repnz
push
ss
xchg
xchg
pop
or
push
roll
ret
outsl
aas
fsubrs
scas
out
xchg
out
inc
pop
shr
push
cmpsb
in
loope
cmpsb
in
push
lcall
jecxz
pushf
aad
loope
jle,pt
xchg
loope
rclb
ss
inc
loope
in
push
lods
sub
cmpsb
jb
fwait
insl
icebp
push
ds
fbstp
and
xchg
loopne
inc
mov
cli
fadds
ljmp
pop
inc
movsb
jnp
cmc
shlb
cli
and
dec
jg
dec
sbb
cwtl
dec
das
aad
lret
mov
dec
inc
dec
sbb
mov
fiadds
dec
nop
cmpsl
xchg
ljmp
mov
pop
dec
jnp
data16
iret
cld
les
mov
push
dec
arpl
sbb
mov
ljmp
js
push
push
add
test
sub
and
dec
daa
and
lahf
inc
jg
shl
and
in
movsl
pop
mov
sbbl
fs
incb
mov
in
and
jno
add
ss
inc
and
repnz
mov
xorb
std
jnp
lock
cld
cmpsl
jge
dec
cmpsb
push
loop
idivb
pop
rcr
xchg
shlb
insb
loope
pop
cmp
pusha
push
xchg
int
inc
inc
fistl
adc
mov
mov
scas
lcall
xor
add
aas
jecxz
data16
arpl
dec
mov
adc
dec
ud0
les
nop
movsl
cmpsl
testb
dec
pop
xchg
mov
sub
les
movsb
sbb
add
mov
pop
bound
cltd
mov
sbb
cmp
mov
loopne
inc
outsb
fadds
int3
cmpsl
cmc
out
jecxz
outsb
outsl
outsl
sbb
jle
cli
pop
xlat
mov
aaa
pop
cmc
jl
popf
mov
mov
pop
lahf
adc
pop
xchg
mov
sahf
mov
inc
xchg
ret
rclb
popf
ret
in
inc
aad
mov
ja
daa
daa
fucomi
scas
push
addl
xchg
jl
mov
loopne
push
outsl
and
stos
push
sub
jbe
in
and
into
adc
mov
repnz
ret
add
push
sti
mov
lds
inc
das
icebp
das
rorb
cwtl
adc
push
or
aad
mov
mov
mov
outsl
fisubrs
insl
sbb
adc
loopne
in
xchg
insb
jg
loopne
mov
and
leave
cld
mov
push
mull
jo
es
cmc
jle
fistl
fdivl
xor
dec
mov
jle
daa
mov
testl
out
jle
cmp
adc
sub
pop
out
inc
mov
jecxz
push
out
or
sqrtps
hlt
int3
stc
sub
adc
sub
iret
cmp
aad
popa
pop
jmp
andl
imul
xor
cmpl
mov
insl
in
jecxz
out
push
mov
jns
outsl
std
mov
stos
js
in
out
add
add
out
cmc
jb
adc
imul
test
out
push
xor
adc
pop
fisttps
push
inc
sub
fwait
xchg
loopne
adc
aas
mov
pop
gs
push
fists
sbb
fisttps
jae
pop
mov
fdivrp
push
xchg
sub
and
cld
mov
cmc
inc
mov
jnp
aaa
add
aas
inc
add
ja
jge
loope
cmpsb
and
std
int
pop
or
ja
test
rolb
nop
nop
xchg
or
inc
jnp
dec
ror
cwtl
sahf
push
mov
inc
mov
ret
mov
cmp
mov
cmc
xchg
mov
xor
sbb
pop
inc
sahf
mov
sahf
testb
pop
jb
xchg
sub
fiadds
roll
stos
sarb
and
inc
dec
xor
cs
mov
jnp
shl
loope
lods
sub
fbstp
scas
fs
jnp
fcmovnu
adc
outsl
xor
mov
fiadds
jnp
pop
popa
add
lahf
add
jle
mov
cmpsb
jl
xchg
pop
inc
pop
add
mov
xor
cmc
cmpsl
lds
fisubs
cmp
add
nop
scas
sar
fwait
mov
std
sarb
loop
ds
mov
test
fcomi
repnz
push
std
add
ffree
cmp
leave
push
inc
cmp
mov
ret
push
je
cmp
fwait
xchg
cmp
insl
or
jecxz
mov
addr16
idivl
sbb
xor
pushf
pop
movl
push
pop
jl
repnz
mov
int3
dec
lds
pop
jo
aas
arpl
mov
adcb
popf
rcrl
cmpsb
sti
cmp
jb
ss
in
out
lea
add
mov
mov
xchg
adc
fidivrl
push
sbb
mov
fstpt
ret
pop
mov
mov
push
ret
outsl
xor
ja
mov
rcrb
xchg
jg
sahf
and
sti
sbb
call
push
pop
xor
push
in
and
lcall
les
sbb
pop
push
pushf
ret
out
jne
adc
rcrb
xchg
inc
js
inc
adc
add
out
int
aas
mov
inc
scas
outsw
xchg
arpl
xchg
jge
dec
adc
out
add
and
loope
into
xchg
jg
into
mov
movsb
adc
cmp
fildl
cmc
in
sbb
in
mov
sbb
mov
test
ret
xchg
scas
lds
pop
fcom
lret
rcrb
mov
sbb
fwait
jge
mov
inc
shl
mov
dec
jo
addr16
add
inc
fucom
adc
out
addl
popa
ficomps
mov
in
add
fildl
mov
fisubs
pop
xorb
push
adc
clc
push
clc
test
out
pop
mov
dec
stos
mov
jb
addr16
pop
rcll
in
imul
fsts
dec
sub
rcr
enter
shlb
enter
xor
xchg
fcoml
lock
adc
hlt
addr16
and
shl
into
iret
mov
and
loop
imulb
in
cmpsb
sbb
out
jp
out
mov
std
ljmp
adc
jnp
in
xchg
xchg
xor
mov
loope
sbb
out
movl
xchg
mov
testb
xlat
leave
push
decb
inc
leave
neg
in
pushf
cli
fwait
push
or
jb
dec
pop
dec
shll
mov
test
mov
daa
pcmpeqw
push
or
adc
ja
pop
xor
jae
sarl
xlat
xchg
mov
mov
jns
inc
mov
fbstp
loopne
cmp
enter
ds
addb
lcall
insl
scas
addr16
rol
cmpsl
and
pop
dec
mov
shlb
ja
jae
jle
xchg
daa
inc
out
mov
jmp
inc
scas
cs
push
shl
mov
das
shll
aaa
ljmp
pusha
lea
mov
clc
cmp
addr16
ljmp
mov
add
jne
scas
xchg
or
or
shll
xchg
data16
inc
sub
xchg
mov
pop
cmp
out
cmpsl
ja
aas
nop
lret
jecxz
dec
hlt
xchg
adc
mov
stos
mov
lret
mov
cmpsb
jg
das
jg
pshufw
jno
push
insl
dec
fidivrs
add
push
mov
mov
xor
inc
sahf
repz
wbinvd
data16
rorb
cwtl
adc
sbb
out
out
nop
adc
xchg
adc
or
imul
push
pop
add
decb
cmp
lds
movsb
test
mov
js
pop
mov
mov
xchg
cmp
insl
cltd
push
xlat
out
cmpsb
mov
imul
cmp
out
adc
arpl
add
out
xchg
icebp
adc
addr16
push
inc
outsl
fwait
repnz
push
cmc
cld
jp
pop
mov
push
pop
mov
imul
hlt
cli
jecxz
pop
cmp
cli
xchg
add
leave
pushf
out
scas
adc
jg
pop
cmp
repnz
xchg
scas
shll
pop
jno
movsl
mov
js
inc
ret
or
fcompl
add
or
notl
mov
or
and
inc
adc
out
icebp
dec
daa
add
add
ret
out
imul
mov
sbb
js
push
out
decb
xchg
push
ret
lock
xchg
insl
testb
sbb
inc
sar
ds
test
fidivs
sbb
pop
testl
orb
shr
das
pop
ljmp
fsubp
inc
sti
ret
or
out
adc
or
xlat
xchg
or
xchg
sub
outsb
inc
cmp
or
add
es
adc
pop
das
jecxz
pop
add
pop
incb
add
clc
aaa
xor
mov
xchg
into
adc
mov
fiaddl
cmp
mov
loope
cmpb
cmp
jmp
stc
into
sarb
xor
out
aas
lcall
mov
jo
pop
push
xorl
push
mov
mov
adc
cmp
push
adc
jne
les
aas
sbb
add
notb
push
in
jbe
mov
nop
jg
mov
adc
in
hlt
daa
scas
xchg
sti
std
inc
xchg
addr16
adcb
and
lds
bound
mov
jb
cmc
pop
mov
cmpl
je
xchg
pop
mov
sub
push
pop
inc
es
pop
inc
sbb
sub
cwtl
dec
fwait
jg
cli
inc
dec
das
push
jmp
scas
xchg
dec
and
jecxz
mov
sti
dec
push
and
xchg
jb
or
in
inc
outsl
lret
loop
cmp
xchg
jp
push
das
push
mov
xchg
inc
xor
xor
xchg
sbb
and
mov
arpl
sbb
pop
push
lret
adc
lcall
in
sub
xor
loopnew
mov
cmpsl
lret
mov
pop
jnp
pop
or
lret
popf
lcall
fstpl
lret
mov
mov
mov
lahf
or
inc
fwait
ljmp
pop
cmc
jne
dec
mov
cmp
adc
popa
pusha
cmc
jns
ret
mov
out
pushl
sbb
pop
sbb
or
insb
pop
into
divb
jbe
push
bound
xor
dec
and
xchg
dec
mov
sub
outsb
cmc
mov
sub
mov
arpl
scas
fsubrl
xchg
pop
mov
mov
ds
pop
fldl
push
mov
imul
cwtl
es
and
mov
inc
popf
inc
outsl
lahf
jo
movsb
cld
sar
in
aad
mov
nop
pop
scas
negl
fldcw
xchg
pop
sbb
xchg
test
mov
xchg
pop
dec
incl
int
fidivrl
test
pop
push
ja
orb
sbb
mov
out
lcall
sbb
cmc
nop
cmp
vminps
out
sub
xchg
frstor
fwait
jo
es
pushf
repnz
loopne
cmp
fs
jg
mov
fcmovnu
jg
mov
cmp
lods
into
clc
and
cmpsl
es
cmpsb
inc
popf
jg
push
and
pusha
stos
fstps
add
push
repz
mov
adc
imul
add
cmp
pushf
cmpsb
cwtl
arpl
xchg
cmp
adc
jp
in
in
inc
fwait
sbbl
and
mov
xorl
loope
movsb
test
adc
mov
inc
push
clc
push
xchg
jle
lds
add
inc
movb
xchg
addb
mov
xchg
js
and
mov
jmp
xor
cmp
dec
pushf
jae
lret
xchg
mov
sub
int
in
jecxz,pn
lods
pusha
in
fadd
add
lcall
jae
std
out
or
sahf
popf
cmpsb
jnp
mov
jo
sub
int3
sbb
mov
adc
icebp
cmpsl
inc
es
adc
mov
sbb
scas
dec
xchg
add
cmp
sbb
jne
cmp
pushf
in
adc
cmpsl
stos
sbb
icebp
xacquire
xchg
jne
mov
sub
push
sti
inc
sbb
add
stc
aad
mov
out
dec
lahf
int3
repz
xorl
ret
xor
dec
jns
cmc
mov
push
out
ja
hlt
sbb
loop
sbb
xor
in
jge
inc
loop
jg
cmpsl
push
and
xacquire
cmp
xchg
stos
sub
xchg
loopne
dec
cmpsl
sahf
cs
mov
in
jae
mov
scas
pop
icebp
push
xchg
jecxz
in
popa
scas
jecxz
mov
cmpsb
jmp
jmp
mov
mov
xor
jnp
dec
div
fcmovnu
push
jnp
test
mov
inc
push
mov
adc
ja
mov
pushf
into
cmpsb
jge
pusha
push
mov
jns
and
mov
js
jge
sahf
push
lock
xchg
mov
bound
or
cmp
jp
mov
jle
iret
ds
push
fs
xchg
mov
push
xchg
add
subb
add
xchg
mov
ret
push
cmc
mov
push
and
xchg
std
inc
xchg
fisttpl
or
mov
mov
mov
jo
sbb
dec
iret
loope
push
in
je
mov
and
test
mov
pop
scas
and
sahf
add
std
inc
nop
dec
addl
insl
lret
nop
sub
cwtl
xchg
jb
jecxz
jnp
in
mov
or
mov
sbb
test
pop
mov
inc
adc
adc
test
dec
cmp
test
jecxz
into
test
push
and
jnp
inc
pop
iret
fwait
or
jge
das
jecxz
iret
jg,pn
iret
add
xlat
dec
or
sbb
push
out
inc
xlat
adc
add
cmp
jns
sahf
lret
outsb
in
rol
jae
jge
jns
inc
call
sbb
dec
add
push
jg
fildll
and
mov
push
in
in
mov
icebp
stos
fistpll
xchg
cs
pushf
aad
inc
pop
les
lock
ss
and
jle
aas
lods
cmp
add
and
aad
out
adc
and
mov
scas
adc
gs
jns
adc
pusha
das
jecxz
out
xor
adc
out
jo
push
andl
fcmovnu
testl
enter
push
dec
cli
sub
mov
fwait
addl
jo
fmull
push
lods
xor
pop
int
add
js
cld
inc
rcl
mov
das
shll
in
aad
push
sub
jg
shll
xchg
push
inc
adc
fwait
jnp
jecxz
testl
rorb
lods
shll
pusha
das
jl
neg
mov
sbb
in
xchg
fwait
testl
xchg
mov
cmp
clc
inc
jg
fsubl
ljmp
sbb
and
sarl
sub
in
movb
cmp
pop
lods
dec
mov
ja
jmp
pop
cld
cld
dec
xchg
mov
xchg
loopne
test
int
jecxz
decl
sub
jecxz
push
dec
mov
out
push
xor
dec
out
leave
and
js
icebp
ds
mov
dec
push
inc
jle
mov
xchg
inc
out
fisubrs
xchg
js
mov
mov
aas
rolb
add
xor
stc
dec
popf
and
xchg
mov
add
cmp
inc
cmpsl
es
cmpsb
out
cmpsl
roll
and
aas
daa
cmpsl
xchg
mov
push
incl
add
push
fs
xor
decl
inc
xlat
lret
push
adc
fildl
dec
inc
adc
inc
hlt
jmp
jmp
add
jo
jo
out
out
or
inc
imul
xlat
cmp
jb
inc
lds
and
icebp
in
out
dec
movb
notl
inc
pop
ds
leave
clc
imulb
mul
into
aaa
inc
mov
jno
xlat
jge
xchg
cli
xchg
fstpt
jmp
fxch
in
shlb
pop
sbb
ret
and
lock
cltd
mov
out
dec
call
subb
cld
xchg
or
in
mov
sub
filds
cmpsb
mov
std
cmpsl
lcall
xchg
or
jns
fwait
or
adc
imul
mov
and
sub
and
add
pop
stos
in
movsb
push
mov
dec
rol
imul
jo
test
fs
inc
sub
jae
rolb
out
pop
or
stos
leave
insl
or
mov
fs
out
lahf
aas
in
sbb
scas
in
clc
cmpsb
fs
das
fnstsw
lds
lret
es
jg
mov
aaa
jle
das
dec
xchg
and
pop
out
insl
addl
inc
icebp
mov
ja
mov
insl
scas
insl
out
out
fs
arpl
out
test
jle
or
cwtl
jmp
jmp
les
jecxz
rcll
test
inc
sub
mov
mov
decb
fwait
inc
add
jmp
icebp
mov
dec
iret
jle
mov
shrl
out
imul
sbb
sub
movsl
data16
movl
mov
jmp
shlb
mov
dec
cmpsb
cmp
in
repz
adc
aad
leave
je
push
inc
inc
imul
aaa
cmpsb
push
inc
or
leave
sbb
cmp
test
fldcw
adc
cltd
xchg
leave
in
dec
xchg
mov
cmp
xor
divl
push
subb
xchg
mov
testl
pop
out
test
fists
jo
cwtl
out
add
stos
push
xor
adc
xor
cmc
testl
mov
popl
test
mov
jbe
xchg
push
jge
dec
addr16
and
ja
std
jne
push
cmpsb
das
test
ds
lahf
ja
into
cmp
call
add
mulb
pushf
fisttpll
push
daa
imul
xchg
pop
mov
add
imul
mov
and
ret
repz
sbb
add
test
mov
push
xchg
pop
mov
or
jmp
add
jg
mov
and
and
mov
mov
add
idivl
xlat
push
shrl
or
sbb
mov
fdivrs
lods
fcomip
not
pop
stos
push
add
cld
sarb
shrl
mov
or
mull
xchg
xchg
jmp
and
mov
adc
lods
out
or
test
daa
cmpsl
outsb
mov
insb
out
push
orb
pop
sahf
and
rcll
pop
pop
movl
push
jnp
or
fbld
sub
cmp
icebp
scas
cs
dec
add
shr
inc
push
pextrw
imul
addr16
or
jge
icebp
ja
filds
inc
or
mov
mov
scas
push
out
test
aad
in
cmpsl
out
jns
pop
movb
mov
mov
sbb
test
sbb
push
cmc
pop
sbb
das
js
add
cmpsb
xor
test
cmp
sti
cmc
inc
outsb
sub
add
loopne
jmp
jne
movsl
pop
inc
ljmp
xchg
adc
add
and
xlat
daa
or
out
shr
imul
pop
iret
xor
jle
cmp
sub
push
loope
test
test
xchg
add
cmp
adc
hlt
loopne
cs
and
stos
mov
aaa
lret
out
jne
shrb
add
into
addr16
cmpsb
xor
test
sub
jo
filds
inc
decb
push
fnstsw
mov
mov
cli
jno
mov
imul
add
roll
loope
hlt
inc
aaa
flds
mov
fcmovnbe
adc
add
adc
in
jns
out
push
fidivs
mov
xor
cmpl
sub
data16
mov
add
lret
xchg
test
out
pop
push
or
test
xchg
addr16
jae
add
std
jg
out
add
cld
je
mov
dec
iret
std
mov
ficoml
stc
mov
mov
sti
mov
jg
ja
xor
es
in
dec
lret
push
test
test
scas
jl
cmc
int
lcall
xchg
xchg
out
jecxz
cmpsl
lcall
aas
js
gs
mov
fwait
arpl
push
popf
shlb
adc
pop
jmp
add
mov
inc
jne
mov
cs
idivl
testb
orb
cmpsb
xchg
jne
jge
sti
xchg
cmp
test
lahf
in
cmpsb
add
outsb
cwtl
rclb
push
ror
ja
jmp
xchg
dec
outsl
xor
and
mov
les
movsl
pop
mov
aas
inc
aad
fsubs
mulb
xchg
pop
or
das
jnp
dec
mov
pop
pushf
dec
jno
inc
daa
mov
shll
mov
outsb
push
icebp
hlt
fisubrs
xor
adc
aas
inc
jmp
add
push
sti
arpl
data16
jne
jns
pop
es
jge
cmp
push
adc
dec
stos
mov
mov
jl
data16
popa
addr16
add
test
mov
xchg
jnp
pop
jbe
out
sar
aam
xlat
mov
jg
aad
ja
imul
xor
mov
lds
mov
mov
dec
adc
push
out
addb
ljmp
lcall
mov
dec
ret
fnstsw
xchg
push
mov
cmp
mov
repz
cmpsl
leave
mov
inc
insb
fistpll
xor
sub
mov
js
int
jl
cmpb
insl
xor
lds
xchg
in
stc
sarb
sti
enter
cli
jmp
xchg
pop
loop
outsb
mov
mov
out
dec
mov
and
mov
cs
sar
adc
aad
sti
imul
push
and
adc
rcr
stc
aad
addr16
lahf
xor
sub
pop
push
in
nop
add
popw
adcb
sahf
sub
mov
add
mov
insl
fwait
push
push
and
xchg
imul
out
jno
lret
testl
cmp
sub
sub
xchg
or
jmp
sub
and
inc
mov
adc
les
mov
push
push
push
jg
out
cmp
divl
loope
sti
out
mov
out
jp
push
cmc
fistps
not
outsl
mov
push
loop
push
daa
mov
leave
js
mov
adc
xlat
fsubp
mov
pop
xchg
je
mov
cmpsb
jno
pop
push
xor
adc
lods
pushl
stos
jne
mov
mov
popf
cmp
outsb
sub
pop
scas
sbb
adc
jns
jecxz
fs
cmpsb
cs
sbb
pop
outsl
cmp
insb
daa
stos
mov
test
idivb
mov
loop
fisubs
cli
punpckhbw
shl
daa
pop
xor
dec
sti
adc
dec
imul
stos
inc
rcrb
add
cmpsb
or
jo
out
sbb
movsl
sarl
jno
jne
stos
jne
cmp
mov
sub
cmp
ja
scas
test
mov
std
out
xchg
in
xchg
into
or
imul
mov
adc
pop
mov
rorl
push
cli
mov
dec
in
pop
jmp
icebp
jne
scas
les
ja
out
outsb
jno
jg
jne
mov
pop
cmpsb
pop
aad
outsb
cmpsl
mov
mov
fistpl
or
lods
xchg
pop
sub
ss
adc
add
in
xchg
dec
adc
fs
data16
rclb
popl
mov
fildl
cltd
adc
jae
lds
xchg
sub
or
cmpsl
stos
push
add
xor
cmp
cmpb
addr16
and
ja
sti
iret
jmp
and
cld
and
in
xchg
jmp
ret
and
mov
rcrb
mov
test
test
cmc
xchg
out
pop
jns
push
inc
test
test
jmp
in
out
out
mov
in
mov
lret
adc
jbe
inc
mov
cmp
inc
or
scas
pushf
mov
jecxz
xor
adc
testb
add
jmp
mov
sbb
lcall
push
dec
out
jmp
fwait
popf
rol
insb
fistps
dec
inc
pop
inc
shll
shrb
sti
push
lds
xchg
mov
stos
dec
je
out
subb
sbb
fwait
jmp
sbb
mov
or
mov
sarl
addr16
or
stos
pop
mov
mov
scas
out
pusha
or
pop
out
fnsave
in
inc
mov
jecxz
cmpsb
lock
inc
xchg
sbbl
js
out
push
mov
in
test
push
test
pop
cmp
add
inc
xlat
and
cmp
sbb
iret
ret
lds
es
lea
sub
loope
inc
test
fdivrl
sbb
xor
fdivl
into
mov
aaa
dec
out
nop
xchg
pop
jb
mov
xchg
ja
and
in
xchg
fs
inc
adc
xchg
pop
lret
mov
xchg
daa
rclb
mov
imulb
mov
xchg
test
leave
push
pop
faddl
repz
push
jno
in
pushf
xchg
jp
mov
hlt
aaa
lods
mov
test
jp
sbb
jmp
movsl
mov
xchg
inc
cmpsb
pop
bound
mov
jne
inc
mov
jbe
push
rcrl
addr16
mov
and
jmp
out
mov
jne
js
testl
loope
and
pop
sarb
pop
clc
ds
lods
hlt
pop
xchg
dec
test
lods
stc
jbe
cmp
notb
loope
pop
cmp
cmp
dec
xor
mov
xor
stos
ficoml
cmp
movl
adc
add
dec
and
dec
jns
sbb
in
inc
adc
test
out
push
fbstp
cmpsb
ret
mov
outsl
out
pop
test
out
bound
loopne
lds
jb
outsl
inc
xlat
mov
loopne
daa
xchg
sub
add
les
lock
fadds
sbb
ljmp
and
cmp
fwait
ss
int3
mov
mov
add
andb
xchg
jne
inc
in
push
inc
dec
jecxz
cmpsl
cmpsb
hlt
aaa
mov
or
pop
xor
out
xlat
roll
jb
xchg
dec
push
sti
rclb
stc
out
test
pop
sbb
decb
adc
les
mov
jle
mov
mov
cmp
daa
xlat
lret
adc
fcomip
outsb
jno
jg
insb
pop
pop
icebp
mov
lock
and
insl
xchg
rcrb
ja
and
test
mov
mov
es
movsl
xlat
daa
adc
addr16
xchg
ret
out
pop
je
or
lock
je
adc
ret
xchg
xor
test
int3
mov
sahf
jecxz
xor
cs
imulb
out
in
loope
lret
sbb
movsb
push
outsl
cmpsb
andb
aad
jne
inc
sti
mov
sahf
cmpsl
les
in
jae
minps
xchg
jecxz
repz
jo
gs
out
dec
fwait
mov
xor
pop
jl
jnp
in
xchg
out
out
daa
movsl
and
sbb
fwait
lds
outsl
dec
test
pushf
mov
inc
mov
cs
xor
xchg
fwait
insb
cmp
cmpsl
inc
sub
adc
repz
popf
movsl
lahf
mov
cld
xor
pop
stc
scas
jmp
das
inc
mov
rorl
pop
ror
mov
sbb
bound
idiv
and
and
faddl
rcr
pushl
in
inc
adc
fcompl
cmp
jecxz
push
or
pop
jae
pop
push
jge
decl
leave
incl
push
cmpsl
inc
ljmp
sahf
adc
hlt
push
or
iret
jb
dec
notb
or
adc
fwait
xchg
inc
fwait
cmc
xchg
dec
out
mov
rcll
addr16
in
in
inc
pop
rolb
or
in
push
jp
outsb
mov
jb
daa
cmpsb
test
add
add
imul
push
and
mov
add
jp
into
movsb
or
cmp
xchg
xchg
clc
push
insb
add
jmp
adc
mov
aam
div
fiaddl
hlt
stos
hlt
push
sti
and
xchg
icebp
stos
stc
lret
xchg
leave
mov
out
cmpsl
cmp
add
jmp
mov
adc
insl
cmp
push
sub
xchg
push
cmpsl
mov
add
sbb
cs
cli
fildl
or
arpl
repz
add
adc
ss
repz
mov
dec
xchg
test
xor
cmc
mov
jg
add
leave
inc
add
ds
add
jo
cli
ja
loope
jae
scas
repz
push
fwait
or
pop
insl
xchg
lret
loop
cli
pmovmskb
push
rcrl
iret
xchg
cltd
sbb
mov
aas
in
test
cmpsl
push
fistpl
rclb
ja
jbe
adc
xchg
movsl
push
pop
fiaddl
repnz
pop
lods
fwait
jge
cs
je
sti
stc
sbb
dec
cmp
insb
iret
adc
cmpsl
cs
and
jmp
cmpl
mov
jmp
das
pop
scas
shrb
pushf
push
pop
cmp
mov
mov
xor
add
ret
mov
cltd
adc
cmc
or
xchg
add
ss
jge
or
cmpsb
inc
mov
pop
jl
sbb
insl
cmp
jne
fnstenv
mov
mov
sbb
adc
mov
mov
mov
loope
cmpb
inc
lds
aad
inc
je
adcl
push
out
scas
shr
shlb
push
stos
negb
mov
cld
mov
adc
push
jge
push
mov
pop
rcrl
inc
sbb
arpl
and
je
int3
jge
scas
sub
inc
addr16
sbb
idivl
push
xor
fcoml
push
mov
scas
rorb
divl
aam
test
cmc
xor
negl
adcl
add
push
jne
ds
pusha
out
mov
pop
mov
sarb
mov
adc
inc
sti
xchg
inc
cs
adc
push
jno
das
out
fdivl
call
addr16
add
jg
out
pop
or
rcll
in
imul
sub
and
xorb
adc
test
mov
mov
xchg
movsl
dec
aad
xchg
mov
mov
lahf
scas
stc
pop
aad
negl
mov
pop
fldt
mov
insl
in
sbb
out
add
sub
xchg
mov
fmulp
jbe
jo
popa
jb
cmp
jp
gs
cmp
test
pop
add
aam
xchg
incb
aad
lcall
jecxz
int3
xchg
fbstp
sub
or
aad
mov
rolb
sub
push
je
sub
push
cmp
test
test
testl
jge
fsub
insb
aam
dec
jp
fmull
test
push
inc
jge
mov
sbb
testb
mov
les
cmc
jo
dec
pop
rolb
pop
in
loopne
arpl
cltd
sub
pop
and
jae
shll
fwait
sub
mov
pop
jae
mov
rcrb
repz
sub
pop
daa
mov
pusha
fs
adcb
addr16
sar
inc
mov
cmp
or
stc
push
xchg
xchg
fistps
test
ficoml
mov
lods
inc
adc
movl
int3
sti
adc
sbb
out
loop
vcvttpd2dqx
mov
loope
scas
pop
pop
mov
inc
mov
mov
scas
cmc
scas
loop
xchg
adc
frstor
jbe
sub
mov
call
and
jecxz
fs
daa
jmp
out
fnstcw
negb
inc
add
inc
sbb
xchg
push
addb
imull
pop
mov
adc
inc
dec
sarb
cmp
xchg
adc
mov
mov
cmp
push
mov
out
shl
mov
jecxz
push
or
mov
lds
pop
insl
ficomps
idivb
pop
cs
pop
fwait
pop
jg
mul
adc
jne
inc
loop
cmp
scas
inc
cs
sbb
ja
leave
insl
jnp
sbb
jno
insl
ljmp
xor
dec
fucomp
jo
int
xchg
lds
xchg
in
dec
mov
inc
jb
std
cli
adc
aad
push
shll
mov
addr16
adc
mov
repz
jae
gs
cli
adc
out
fs
test
gs
mov
jmp
cmpsb
sti
jnp
mulb
ret
push
js
cli
inc
jae
pop
fs
xor
nop
mov
daa
adc
cmpsb
clc
ja
mov
cltd
shlb
outsl
loope
ret
fs
gs
rcll
xchg
push
jns
push
push
shl
xor
mov
popf
dec
das
inc
jmp
out
lea
cmp
in
ja
or
pop
cmpsl
mov
dec
xchg
jge
mov
jne
xchg
subl
add
jne
daa
movl
xchg
in
mov
lods
imul
cmc
aaa
mov
mov
nop
in
ja
aam
xchg
addr16
data16
xor
sbbb
jle
add
or
jnp
cmc
mov
roll
fdivl
push
mov
ss
jmp
jne
mov
fisttps
xchg
cmp
or
enter
add
test
pop
jge
mov
sub
push
lock
mov
xchg
js
jmp
rcrl
in
xor
dec
xchg
popa
out
mov
add
sbb
and
std
jmp
cmp
out
test
out
pushf
adc
aad
fdiv
lcall
les
pop
ljmp
sub
pop
and
push
test
xchg
arpl
jmp
pop
shrl
push
aas
shll
xchg
add
xchg
les
sbb
testb
mov
xchg
enter
xchg
leave
add
mov
dec
jp
ret
pop
jb
repz
in
push
jne
fnstsw
jg
push
testb
rorl
mov
sub
dec
arpl
jle
dec
movb
cmpsb
and
inc
ss
loope
pop
and
js
pop
cmpsb
pop
movsb
or
add
fsubl
andb
sbb
lds
adc
test
dec
lds
lock
ja
mov
dec
pop
sub
xchg
cs
dec
in
mov
data16
rcrw
adc
xor
push
mov
imul
mov
rolb
adcb
push
xchg
dec
dec
and
inc
bnd
cwtl
outsl
daa
or
mov
or
fists
mov
inc
std
push
mov
test
inc
xor
bound
mov
push
pop
das
hlt
pop
mov
jmp
sub
and
and
adc
out
cmp
cmp
mov
das
enter
sub
es
in
fisttpll
add
fnstsw
fwait
dec
iret
in
ret
jmp
cmp
loop
cmc
push
into
ljmp
xchg
sub
test
repnz
push
icebp
jnp
sbb
jmp
jle
lock
add
inc
adc
scas
test
xchg
sub
cmp
cs
push
aad
inc
xchg
sti
stc
in
mov
push
xchg
cmp
stos
mov
jmp
push
clc
push
out
add
inc
ret
add
aaa
bound
decl
pop
shl
shll
push
fists
fisubrs
lods
dec
xchg
subl
dec
shll
pusha
ja
out
js
push
adc
int
cmp
sbb
push
out
aad
mov
lea
add
or
es
in
and
cmc
adcb
movsb
push
outsb
shll
push
sub
inc
call
xchg
fbld
jne
pop
out
ja
ret
out
insb
cmpsl
ljmp
addr16
inc
jg
jge
push
cmp
clc
lret
fldenv
mov
daa
jge
sbb
jmp
mov
aad
push
pop
movsl
cmpl
or
cmp
je
jnp
psubw
fbld
stos
flds
out
or
imul
mov
lret
addr16
push
push
mulb
cmp
xchg
insl
add
out
xor
fs
xchg
insl
mov
push
fstpl
sahf
dec
push
mov
dec
jmp
shl
or
insl
sti
push
setnp
mul
cltd
out
mov
aad
mov
lods
pushf
test
fists
leave
fstpl
insl
rorb
in
jbe
xchg
xorl
call
mov
inc
pop
sub
xor
daa
ss
cs
dec
shrl
scas
out
xchg
insb
push
jg
mov
negb
cltd
dec
fdiv
test
inc
sbb
cmpsl
outsb
fildl
in
or
fs
or
clc
daa
mov
sbb
xchg
mov
pop
add
addl
mov
push
imul
push
pop
in
test
adc
jbe
aas
out
pop
das
dec
inc
rorl
xlat
pop
inc
daa
out
in
jo
test
test
stc
iret
loope
loope
outsl
xor
fwait
jg
rcrb
lret
imul
loope
pushf
je
mov
xchg
lock
push
pop
push
nop
add
fbstp
sbbl
js
sbb
jmp
mov
add
jb
ret
sub
outsl
insb
pop
fcomip
das
mov
fiadds
notl
shll
adc
mov
cmp
add
jg
lahf
sbb
fimull
icebp
adc
inc
outsl
push
sahf
imul
push
xchg
pusha
out
xor
push
cmp
jecxz
hlt
or
and
inc
outsl
mov
lds
pop
xchg
outsl
xchg
or
xlat
imul
test
sbb
mov
je
add
adc
push
pop
out
daa
cwtl
xorb
daa
les
pop
dec
mov
jne
lds
ret
cmp
sub
jl
jle
es
std
daa
push
sbb
insb
adc
mov
and
jge
inc
incb
loopne
sbb
lds
and
adc
les
sub
dec
arpl
cmp
add
ja
inc
adc
mov
arpl
imul
negb
ja
jecxz
mov
sbb
lods
push
mov
lret
scas
cmp
push
or
scas
test
jb
lret
cs
add
loope
cmp
or
nop
cmc
aad
mov
fldt
add
pop
sarb
test
xchg
push
jp
sbb
inc
dec
movsl
dec
insb
adc
adc
jg
push
add
mov
lahf
xor
stos
mov
jmp
cs
sahf
daa
adcl
imul
pop
xchg
lret
sbb
jp
cld
mov
and
mov
push
dec
ret
int3
repz
xchg
and
and
movsb
data16
mov
loop
aaa
out
inc
xchg
daa
or
lea
movsl
mov
pop
adc
cmp
mov
scas
cmp
mov
fldln2
mov
ret
aaa
xchg
cmp
mov
dec
mov
dec
addr16
pusha
bound
pop
xchg
or
pop
mov
decb
fstpt
sub
in
int
mov
dec
aaa
inc
imul
push
jbe
hlt
inc
sub
aad
les
das
xor
test
mov
pop
mov
mov
hlt
pop
daa
mov
fiadds
ret
test
cld
mov
jnp
imulb
xchg
mov
shlb
jae
lods
das
mov
jle
es
subl
mov
aad
and
push
dec
repnz
addr16
sbb
sti
jge
arpl
fs
stos
movsl
xorb
sahf
addr16
xchg
in
mov
add
push
int3
add
lahf
cmpsl
cmp
icebp
mov
add
out
orl
xchg
push
and
cmc
aas
push
dec
xlat
push
jle
push
sub
xchg
movsb
subl
sub
test
pop
jnp
sahf
pop
dec
add
sti
cmp
mov
lret
push
inc
lcall
cli
ja
lahf
add
notb
cld
cltd
pop
cmp
movsb
ffreep
sub
sti
dec
mov
adc
push
inc
outsb
mov
mov
clc
add
mov
loop
sarb
filds
xor
je
movsl
les
jne
inc
fidivrl
ret
test
arpl
dec
mov
mov
jae
adc
imul
add
and
add
xlat
pop
repz
pop
pop
lret
push
cli
or
out
mov
pop
leave
sbb
clc
or
ret
fwait
je
cmpl
test
popf
lds
dec
repnz
cmp
mov
mov
jnp
andl
repnz
hlt
xlat
push
jmp
cs
sbbl
bound
xchg
jne
out
xor
jb
xchg
data16
mov
repz
cmpsb
jmp
call
in
add
adc
and
or
mov
fcmovb
daa
test
shlb
flds
test
fs
xchg
lds
xchg
loop
jo
stc
insb
jle
fwait
adc
test
insl
cmpsb
nop
into
cmpsb
adc
fisubrs
cmpsb
fwait
lods
mov
hlt
je
std
inc
dec
mov
fldt
out
mov
out
xlat
and
test
pusha
mov
mov
out
xor
xchg
add
testb
js
testl
dec
ffreep
push
and
lea
push
stos
fs
mov
roll
lret
mov
gs
cmc
and
negl
jge
pop
rcrb
rcr
push
cli
ja
aas
imull
fs
mov
mov
iret
xchg
mov
fadds
pop
outsb
jbe
or
aas
jg
popf
ja
pop
mov
iret
test
cli
aas
mov
scas
data16
test
aas
jnp
push
shlb
pop
mov
adc
or
jno
jle
iret
sub
stc
dec
cmc
inc
aam
mov
outsb
sbb
insb
popl
iret
push
insl
jge
nop
push
fstl
add
mov
fidivrs
xor
adc
scas
jecxz
andl
pop
fistps
data16
loop
sbb
adc
nop
pop
lea
std
xchg
xchg
or
and
xor
jns
jmp
data16
and
and
lods
jge
daa
adc
in
insl
xchg
shlb
cld
jb
sbb
loope
mov
or
aas
fs
aad
out
pop
ja
and
adc
or
scas
fs
std
daa
les
pushf
test
ret
in
adc
jnp
rcrb
fs
xor
lds
int
sub
xchg
mov
add
sarl
jecxz
loop
or
add
push
sbbl
rolb
cmp
outsb
sub
mov
lods
dec
jae
int
or
std
fcmovb
adc
sbb
jg
in
js
jle
test
pop
flds
push
inc
insl
and
jge
sub
addr16
pop
jns
inc
xchg
jecxz
inc
cmp
in
xorl
sbb
fldl
pop
adc
cmp
jae
and
in
cli
add
arpl
in
out
push
loopne
jne
lock
xor
in
pop
xor
hlt
or
negl
movsb
and
das
aaa
cmpsb
add
addr16
mov
sbb
mov
mov
xor
pop
add
push
sti
ficompl
cld
push
std
jge
pop
jo
jle
mov
push
sbb
mov
mov
into
testl
iret
xchg
fstsw
mov
sbb
xor
add
adc
xchg
mov
into
adc
movsb
push
shrb
rcrl
daa
push
sub
fs
adc
into
jb
pop
loop
mov
negl
mov
sub
rorl
ja
jo
pushf
mov
jmp
stc
push
mov
mov
push
rorb
rolb
or
ss
mov
cmp
fbstp
cmpsl
pusha
aad
ret
leave
adc
mov
imul
out
sahf
xor
dec
jecxz
aas
inc
arpl
rcr
cld
jbe
test
mov
inc
popf
test
push
and
iret
mov
mov
mov
test
xchg
orl
fs
mov
cs
push
loopne
shrb
pop
sbb
iret
xor
pop
adc
cmc
xor
les
cmp
mov
je
dec
std
test
mov
outsl
test
loope
xchg
test
push
stos
dec
push
sub
push
imul
mov
das
rclb
cmp
xor
jmp
pushf
test
pop
je
cmpsl
cmpsb
call
xchg
mov
rolb
loope
por
xchg
scas
jmp
jns
loope
leavew
mov
ret
popa
leave
ret
jecxz
jge
cmp
inc
pusha
das
imul
jo
jmp
jl
cmp
ss
xchg
push
mov
jge
addr16
sarb
jns
mov
outsl
jne
dec
cmp
pushf
xchg
jmp
jl
push
mov
inc
movsb
xchg
test
mov
les
cmp
andl
dec
mov
mov
xchg
push
ja
daa
es
addr16
inc
pop
xchg
int
es
sti
andl
data16
mov
sbb
mov
ss
adc
mov
lcall
call
jbe
and
push
test
cmp
sarb
inc
idivl
andl
mov
aaa
sti
and
ss
push
cmc
pusha
clc
fiaddl
test
dec
test
ret
mov
mov
jno
mov
mov
cmp
xor
adcb
push
mov
icebp
fwait
aad
lret
shrb
xchg
pop
adcl
cwtl
lds
outsl
xor
and
rorl
mov
cmp
pop
loop
sti
xchg
shrl
idivb
mov
cld
mov
jl
inc
cmp
lods
ljmp
jg
testl
lods
fs
fstpl
jl
cmpsb
and
popf
cmpsl
scas
inc
adcl
and
movl
pand
xchg
mov
inc
aad
adc
dec
mov
icebp
mov
jmp
sbb
lret
loop
jns
cmp
es
push
stc
pop
into
jmp
xchg
mov
inc
or
mov
sub
cmpsl
mov
inc
aam
es
jg
fs
sub
pop
cwtl
mov
xor
aaa
and
shlb
push
out
das
inc
push
push
stos
sbb
lahf
das
lahf
dec
adc
repnz
cli
xchg
or
in
mov
popf
inc
into
mov
jae
shr
adc
mov
sahf
mov
shl
xchg
cmp
in
daa
and
mov
push
decb
repnz
xchg
loope
testb
mov
int3
mov
mov
lock
push
test
fisubrs
mov
mov
xchg
ucomiss
imul
push
addr16
inc
cs
lret
mov
mov
shll
xor
imul
dec
add
cmpsb
mov
inc
mov
inc
pusha
dec
jg
xlat
jnp
pop
pop
negb
inc
insl
jae
xchg
adc
arpl
pop
out
fidivl
cmc
inc
mov
fnstsw
out
cmp
lods
cmp
cmp
fdivs
jo
pop
out
dec
mov
xchg
cmc
push
imul
mov
push
gs
iret
sub
stos
xor
fs
mov
push
movsb
movsl
push
test
mov
mov
dec
rclb
push
jecxz
lret
jne
sahf
push
pop
push
int
movsl
arpl
xlat
jb
data16
out
test
and
cli
inc
push
cli
dec
lret
xchg
push
inc
sti
mov
popa
pop
sti
add
stos
mov
pop
add
ffree
and
mull
out
fcmovnu
test
cs
adc
loope
bswap
lds
xor
pop
out
rcr
nop
vpshlb
test
push
outsl
andb
aad
mov
fbld
inc
fwait
mov
cli
inc
mov
inc
orb
cmpsl
cmp
movsl
imul
into
test
mov
jne
lea
jae
insb
popa
stos
shl
lahf
mov
mov
mov
pop
push
fwait
jecxz
inc
cmp
dec
cmp
xchg
jne
rorb
incb
leave
pop
jecxz
push
mov
jmp
inc
cmc
idivl
xchg
push
add
dec
xchg
test
mov
lods
jnp
out
jbe
test
jne
or
jb
fsubl
std
jae
imull
jnp
inc
jae
fidivrl
addr16
arpl
xchg
ret
sub
out
fs
ds
cwtl
pop
sbb
adc
into
flds
in
int
jnp
mov
rcr
push
xor
mov
push
and
pop
aaa
xchg
insb
and
mov
ss
add
inc
mov
sbbl
pop
jg
shll
jae
push
or
ja
pop
icebp
addl
xor
jnp
dec
and
jg
es
testb
xchg
shl
sbb
loop
mov
xchg
popa
mov
out
pop
sub
push
or
sbb
push
mov
xchg
jae
in
popa
pop
and
cwtl
in
mov
in
ja
out
icebp
out
dec
les
pop
push
push
adc
cmpsl
lods
xlat
scas
shrb
cmp
mov
movsl
iret
rcr
xor
les
idivb
out
xchg
sbb
sub
jg
mov
add
imul
fisubl
xlat
jge
add
jo
pop
not
dec
repnz
testl
fildl
jg
aad
mov
push
das
or
pop
xchg
ret
aam
mov
cmp
mov
in
icebp
inc
not
add
or
ljmp
push
iret
cmp
pop
adc
sbb
push
push
adc
in
data16
mov
test
adc
xchg
test
stos
push
addr16
jo
inc
pop
add
xchg
xor
not
in
das
es
sub
repnz
fidivs
movsl
cmp
out
and
aad
rolb
les
out
ret
fnstsw
arpl
loopne
mov
adc
outsb
lea
pushf
inc
sub
fisubs
data16
repz
into
in
pop
or
pop
addr16
ret
dec
lea
mov
fnsave
negl
jo
mov
sub
cld
pop
std
cmp
mov
mov
inc
push
pushl
mov
jp
data16
cmpsb
scas
iret
fdivrl
and
lods
add
mov
loop
andb
sbb
out
cmp
dec
or
cld
scas
push
inc
mov
dec
pop
jo
sahf
fs
inc
fdivs
xor
xor
out
jmp
mov
lcall
cmpsl
cmp
or
cmpl
mov
xchg
jecxz
std
fwait
stos
inc
icebp
fdivrl
daa
push
test
inc
cli
divl
and
es
scas
aad
subl
and
loope
sub
in
into
cmpsl
stos
dec
and
into
jno
pop
mulb
iret
mov
mov
sarb
ret
test
cmp
jae
add
mov
mov
ret
aad
or
adc
enter
decl
sbb
jb
ljmp
rol
cmpsb
cmc
decl
adc
data16
lds
daa
push
ret
rcll
add
bound
xchg
ja
cwtl
pop
ret
xlat
mov
mov
fwait
mov
mov
and
mov
pop
pop
fs
fwait
lret
xchg
out
mov
sahf
xor
fcoml
ja
mov
mov
rclb
imull
push
add
pop
push
mov
imul
imul
push
mov
sbb
arpl
mov
cwtl
xchg
jle
ja
cmp
lods
mov
cs
push
sub
sub
lcall
and
jnp
push
gs
and
jge
hlt
add
pop
mov
mov
dec
inc
shl
repnz
loope
jg
dec
cmpsl
in
mov
jbe
gs
bound
or
sub
push
jmp
popa
lds
add
rorl
jno
stos
out
arpl
push
es
in
movsl
push
push
iret
adc
test
arpl
pmaxub
div
cmc
call
aas
and
out
mul
dec
lahf
outsb
mov
and
pop
out
lods
or
fnstsw
adc
inc
xor
stc
and
push
andl
lea
div
adc
mov
outsb
xchg
lds
out
gs
mov
mov
push
inc
and
fimull
fnstsw
out
fdivrp
lret
mov
mov
sub
subb
xor
ja
inc
enter
lds
or
xlat
fs
pusha
fwait
sub
add
jae
fwait
xlat
mov
push
jne
out
inc
enter
add
test
into
jg
out
xchg
xor
mov
dec
push
pop
fs
scas
icebp
fstl
ja
leave
mov
jmp
xchg
mov
out
xchg
xchg
adc
mov
pop
inc
adc
mov
cmc
addr16
xor
test
mov
leave
scas
shl
aaa
inc
shr
fwait
out
loopne
sbbl
cmp
inc
lods
inc
and
ljmp
mov
movsb
add
pop
cltd
insl
pushf
loop
mov
mov
rcrb
ja,pn
xlat
pusha
fs
push
je
into
dec
outsb
loop
inc
repz
pusha
sbb
aam
pop
call
sti
xchg
leave
adc
inc
out
lret
das
test
fisubs
fnstsw
sahf
jmp
in
in
addr16
das
jge
pop
and
push
mov
inc
movsl
cmpsl
jge
pop
or
ret
rclb
pop
in
in
inc
int3
aam
testl
stc
inc
fidivs
mov
dec
mov
adc
mov
int
mov
push
test
loop
or
ret
test
faddp
and
cs
rcr
jecxz
jle
inc
jge
sbb
in
pop
pop
in
test
jbe
cmp
xchg
adc
inc
les
push
cmp
arpl
jp
mov
shr
xchg
fsubrp
adc
adc
repz
mov
mov
adc
into
mov
fbld
test
stos
loop
xlat
rorb
iret
rcl
adc
mov
mov
cmpsb
daa
shr
mov
cmp
icebp
mulb
cmc
mov
jle
daa
repz
add
cmc
ror
inc
rolb
cli
clc
stos
jg
mov
mov
jge
divl
leave
cmp
int
dec
xchg
in
mov
xchg
popa
cli
aad
mov
lahf
jno
test
into
outsl
dec
fs
inc
into
jle
lret
sbb
scas
notl
ror
in
clc
into
pop
out
subl
nop
dec
pop
in
sbb
pop
std
stos
fimuls
stos
fwait
xchg
out
inc
fmul
inc
inc
les
roll
aaa
sub
mov
shlb
cmpsb
dec
jb
add
pop
jmp
push
lea
inc
cmc
lock
or
lock
pop
ja
or
mov
ja
loopne
cmpsl
std
xchg
ss
addr16
fistpl
in
out
jmp
dec
pop
push
negb
nop
dec
ret
mov
mov
push
pop
cmpsl
sub
ret
mov
lea
dec
pushf
cmpsb
or
loope
xchg
notb
mov
push
push
or
cmp
push
add
rcrl
xor
in
out
inc
fwait
dec
or
ret
inc
sub
mov
pop
ret
lods
and
inc
xchg
test
mov
push
fwait
lea
aas
cmp
int3
mov
jmp
and
push
into
add
sub
dec
fadds
out
scas
movl
mov
push
and
cmp
xor
bound
les
outsl
shl
cltd
push
data16
outsb
xor
repz
fs
adc
imul
mov
pop
push
jno
adc
les
xchg
xor
nop
push
out
movsl
std
inc
jp
mov
icebp
inc
shll
fldenv
scas
inc
orl
xchg
mov
cmp
add
loopne
lahf
jo
int3
addr16
xchg
cmp
add
mov
jecxz
out
add
jno
and
push
mov
rol
push
in
push
pop
pop
xchg
jnp
adc
adc
jne
sar
lret
stos
push
ljmp
mov
test
and
pop
push
push
mov
or
pop
scas
cs
dec
int
mov
jmp
fcomip
dec
xchg
push
mov
cmpsl
inc
inc
cmpsl
push
inc
inc
gs
out
mov
fcoml
push
scas
jnp
cmp
movb
inc
aad
push
andl
lahf
cmpsl
mov
inc
sti
mov
aad
les
stos
lahf
aad
ret
adcb
ror
pop
add
or
xchg
stos
xchg
lods
and
lods
pusha
xchg
dec
dec
fmuls
ja
xchg
sub
aam
fs
xchg
pop
clc
add
lods
pop
fdivrl
popf
sub
lret
jbe
sub
test
push
push
outsb
sub
push
lret
lods
popa
in
inc
stos
iret
idivl
inc
andb
clc
pop
bound
js
jp
mov
and
sar
sub
movsl
push
addr16
lds
sbb
push
fnstsw
mov
mov
dec
jge
mov
les
push
sbb
por
scas
xchg
adc
adc
clc
pop
jge
mov
mov
cmp
popf
xchg
loope
mov
out
and
es
xchg
aaa
inc
push
inc
sahf
jno
repz
repnz
and
pop
jae
mov
push
and
vmovsd
add
movsl
sub
dec
sbb
aad
test
jns
fildl
jge
test
jecxz
xchg
outsl
clc
or
loop
xlat
lods
mov
or
mov
ret
out
cmp
and
out
pop
lock
ja
or
pop
js
jmp
push
add
stos
fwait
mov
cmc
dec
mov
idivl
out
push
inc
lock
test
xchg
add
subb
jnp
cmpsl
aam
fs
push
hlt
scas
addl
bound
enter
and
jl
sub
sbb
fsub
outsb
add
add
inc
pop
jl
or
cwtl
test
cmpsl
cmpsl
lods
inc
add
xchg
sbb
xchg
sahf
add
shlb
ja
je
loop
arpl
test
and
scas
fidivs
mov
adc
fnstenv
aas
in
pop
and
add
in
pop
pop
lahf
loop
dec
out
daa
cwtl
mov
pop
fidivrs
and
idivb
mull
pushf
and
sarb
jo
aas
shrl
repnz
jp
adc
or
lds
xor
mov
sub
mov
or
movsb
xchg
dec
imul
mov
cmp
mov
dec
pusha
scas
mov
xchg
jne
inc
test
mov
inc
popf
loope
orb
add
std
inc
xlat
ret
add
mov
fdivs
sti
ss
stos
fcoml
bound
ret
sbb
test
cmpsb
jmp
out
jp
push
repnz
lret
cmp
insb
shr
fbstp
jecxz
loopne
cmpsb
fs
xchg
andl
add
arpl
aas
ret
push
subl
stos
pop
mov
jl
lock
test
jge
sub
jmp
in
fs
fwait
jne
mov
dec
inc
jg
ret
outsl
cs
mov
repz
subb
in
imul
ret
jmp
adc
fwait
mov
test
dec
es
addr16
jns
sbb
xchg
mov
loop
pop
jbe
ret
in
in
mov
add
add
fwait
movsb
out
inc
dec
outsb
dec
lcall
in
and
ss
repnz
pop
mov
jle
jbe
aad
rclb
out
adc
push
sub
fdivrs
jmp
addl
pop
inc
in
out
lret
mov
cmp
sbb
lock
retw
inc
rcl
stos
adc
aas
test
mov
cmp
jle
xchg
outsb
inc
push
pop
mov
jecxz
je
sbb
daa
lods
dec
lock
decl
mov
pop
ljmp
dec
xchg
cli
sbb
stc
and
jo
pop
insl
dec
movsl
mov
outsl
lds
xchg
xlat
mov
mov
in
stos
xchg
fs
int
shl
shrl
out
xlat
mov
sbb
push
cld
jmp
fs
adc
mov
idiv
movsl
test
inc
ret
fisubs
fidivl
sahf
hlt
push
adc
in
in
dec
xchg
xchg
sarb
fiadds
dec
jbe
mov
mov
mov
jp
dec
movl
clc
aad
clc
and
test
cmp
jnp
mov
add
mov
sbb
mov
xchg
imul
jecxz,pn
mov
jno
mov
shl
clc
stc
mov
test
inc
out
xchg
sub
xchg
pop
addr16
inc
jmp
pop
fndisi(8087
xchg
push
out
arpl
xchg
mov
lcall
xchg
je
outsb
mov
arpl
scas
aaa
dec
cmpsl
addr16
push
and
loop
addr16
pop
xchg
shlb
fwait
xor
mov
fs
test
imul
sbb
insb
in
scas
fwait
cmpsb
fnsave
mov
shlb
xchg
pushf
ds
mov
shlb
fidivs
cli
outsl
or
jmp
popf
mov
jne
lret
aaa
pop
push
lcall
subl
fcmovbe
orb
mov
rolb
fs
xchg
lods
lret
mov
insb
mov
xchg
ret
pop
jnp
jecxz
add
push
dec
mov
jge
cmp
lds
daa
int
jge
rorb
scas
in
mov
xor
push
test
cmpsb
jge
push
loope
dec
xor
push
call
das
jno
jmp
lock
rcll
xlat
outsl
scas
addl
jmp
test
cmc
inc
mov
push
movsl
repz
mov
stc
shrb
cmpsl
ficoms
xlat
out
stc
add
mulb
ljmp
fwait
xor
cmpsl
je
gs
mov
cmp
dec
dec
vpsllw
mov
ss
out
mov
mov
dec
push
xor
fnstsw
pop
jns
mov
mov
fisubs
cmpsl
insl
outsb
sub
imul
jbe
in
inc
fisttps
inc
sbb
push
or
int
sar
push
fsubrl
push
inc
sub
pop
in
das
shll
add
cmc
ds
rorl
inc
pop
pop
outsl
adc
mov
pop
push
push
push
cmc
ret
in
sti
cmp
fidivrl
lahf
loop
mov
cmp
fildll
movsl
lea
lea
int
mov
pop
pop
mov
mov
jns
mov
fiaddl
daa
add
push
mov
xor
sub
ror
gs
js
pop
sbbb
ret
rcll
bound
cmpsb
push
nop
cld
mov
mov
andb
push
push
es
dec
pushf
push
inc
push
testb
in
inc
mov
pop
fwait
inc
jmp
out
inc
movsl
arpl
ja
ficomps
test
mov
adc
add
pop
scas
mov
loope,pt
cs
cmpsl
mov
add
or
dec
jle
jne
ffreep
int3
inc
fsubl
xchg
jno
and
and
andl
pop
mov
insb
add
clc
outsb
aas
imul
lcall
das
addr16
mov
rorb
daa
pop
adc
icebp
and
jns
push
out
jge
jl
mov
repnz
jmp
pop
push
xor
or
fwait
mov
test
add
fidivrs
mov
lret
add
cmp
or
jge
icebp
aas
ret
icebp
xchg
xchg
and
add
lods
shll
dec
xor
sbb
mov
je
stc
je
xorb
pop
push
fisttps
sahf
rorl
inc
sbb
sarl
mov
jle
cmpsl
inc
in
xor
push
dec
jecxz
xchg
arpl
pushl
out
mov
xor
cwtl
lds
cmpl
out
mov
xchg
cmpsl
in
mov
es
test
jnp
push
cmp
out
stos
ret
es
lea
dec
lret
ret
jb
inc
cmpl
jmp
rorb
mov
cltd
fstpt
imul
dec
and
pop
data16
cmpsb
pop
xor
jmp
int
xor
ljmp
pop
inc
mov
jge,pn
addr16
sbb
stc
mov
arpl
push
es
loope
ljmp
jne
xchg
add
out
cmp
pop
ja
pop
cs
push
push
sbb
mov
and
sbb
xor
cmp
cli
add
les
inc
jbe
sbb
or
add
out
out
out
dec
repz
mov
ds
ret
ja
sub
mov
and
clc
scas
lahf
das
or
data16
or
stos
jne
popa
cmpl
mov
fildll
dec
ds
or
mov
adc
rcll
pop
ffreep
adc
pop
daa
test
jb
jge
ret
aad
aad
jo
and
shrb
insb
gs
daa
andb
frstor
pop
add
add
add
pop
adc
addl
sbb
jne
or
add
pop
xchg
xchg
mov
stos
mov
cli
mov
loopne
cmp
jb
sarl
pushl
mov
fistl
mov
shrb
add
aas
outsb
test
add
fs
stos
pop
or
and
pop
or
addr16
rcl
in
in
pop
add
xor
pcmpgtw
pop
mov
lds
hlt
lcall
stos
out
fisubrs
imul
out
xchg
test
and
mov
insl
dec
mulb
pop
mov
pop
xor
jl
and
ja
jne
cmp
jne
fsubrp
inc
es
sub
bound
jl
or
sbb
data16
push
test
dec
pop
mov
mov
incb
mov
sub
ficomps
out
mov
pop
xchg
xchg
inc
dec
add
stos
cltd
pusha
ret
fisubrs
cmpps
jge
push
xchg
xchg
add
jp
xchg
lahf
sti
and
or
loopne
push
mov
mov
sahf
cmpsb
cmpl
push
les
lahf
mov
negl
pop
movsl
jp
push
popf
rolb
call
es
fsubr
cmpsl
mov
or
inc
gs
mov
lahf
mov
es
test
xchg
iret
fldl
out
adc
inc
inc
jbe
gs
xchg
daa
popf
insl
push
das
inc
dec
fnsave
cmpsl
inc
test
mov
and
sub
loop
sub
mov
jae
in
sub
je
jp
fsubl
test
movsb
xor
imul
test
adc
or
jb
add
xchg
and
dec
aam
arpl
lcall
movsl
lea
ucomiss
fnsave
sbb
fiadds
or
jne
mov
mov
add
std
out
xor
ja
jb
popf
popa
in
je
push
test
in
push
xchg
pop
insl
jne
push
jbe
mov
xorl
js
addr16
inc
fcmovnb
dec
in
pusha
inc
pop
fs
cltd
mov
and
inc
fwait
push
out
cmpsl
jne
lea
mov
hlt
lcall
arpl
xchg
fwait
repz
xor
sti
push
pop
mov
outsl
test
mov
add
out
lock
testb
mov
jg
and
fisubrs
add
mov
popf
popf
mov
lea
clc
sub
std
sbb
sbb
xchg
repz
filds
out
lock
ret
loopne
push
pop
dec
outsl
cli
in
add
cmp
jmp
lds
xchg
push
pop
fisttpl
mov
nop
mov
shrb
aad
movsb
add
loopne
mov
ficoml
ja
xlat
adc
sahf
ja
adc
fistps
leave
mov
fldenv
adc
fucomi
test
mov
adc
mov
lret
cmc
jmp
pop
adcb
leave
movsb
jmp
sarl
push
out
xchg
cmpsb
ret
pushl
sub
ja
aas
lret
cs
and
nop
int
cmpsl
lods
mov
divl
mov
ret
mov
jb
fidivl
push
pusha
mov
inc
mov
mulb
movsl
rclb
pushf
cs
sbb
xorl
out
dec
sbb
dec
jae
outsl
inc
loope
xchg
out
ret
jmp
pop
inc
mov
ja
inc
in
inc
jo
and
in
sbb
pop
lcall
pop
jecxz
fs
dec
pop
pop
hlt
jle
dec
movsl
test
arpl
mov
rcl
and
enter
nop
fdivrl
pop
stc
or
push
addl
jb
ja
mov
push
rolb
stc
xor
gs
mov
add
insl
shl
loop
jmp
or
add
sbb
pop
fnstsw
movsb
mov
push
push
daa
mov
cs
xor
fbstp
pop
fisttpl
lret
movsb
data16
lock
adc
loope
mov
mov
xchg
mov
out
mov
push
push
test
rolb
pop
es
idivb
xor
test
push
fwait
out
out
imul
push
movsl
shlb
or
outsl
dec
mov
mov
dec
ss
stc
aaa
sti
loope
sbb
lods
push
shrl
ficomps
daa
imul
test
mov
xor
push
lds
outsl
pop
das
mov
push
std
out
fnsave
xor
out
push
repnz
xlat
jns
lcall
js
lds
loope
outsb
add
or
mov
jmp
adc
lret
loopne
cmp
cld
les
outsb
and
push
test
add
jns
loopne
mov
mov
into
pop
cmpl
mov
jg
xchg
hlt
push
sar
xchg
imul
xchg
daa
mov
cmp
and
add
das
fiaddl
fnsave
jo
andb
push
dec
mov
gs
shrb
mov
jne
ljmp
push
xlat
inc
mov
xchg
and
dec
adc
sub
or
sahf
add
clc
cmc
test
xor
or
inc
sub
jo
mov
ret
cltd
inc
push
mov
mov
nop
xchg
pop
mov
into
and
shll
lods
push
add
arpl
dec
test
mov
xchg
lods
fadds
repz
inc
in
scas
inc
mov
ficoml
scas
cltd
loopne
pop
fsubrl
out
mov
adc
popa
in
ficomps
nop
gs
cltd
cmpb
inc
jne
push
rorb
stos
loop
cmpsl
aad
xchg
fwait
mov
jle
out
mov
test
mov
sub
stos
xchg
add
xchg
adc
inc
and
aaa
jecxz
gs
lret
aaa
push
mov
in
cld
inc
mov
mull
add
les
inc
adc
cmp
jo
sbb
sub
inc
or
adc
sbb
inc
add
jbe
adc
inc
and
xchg
clc
push
mov
pop
cld
pop
in
mov
dec
daa
mov
sahf
rcrb
jg
or
add
jecxz
inc
sbb
iret
cld
xchg
aas
movsl
mov
pop
arpl
pop
pop
add
lds
and
loop
xchg
mov
iret
out
lock
dec
pop
lcall
pop
pop
icebp
ja
leave
notl
or
sbb
jecxz
push
add
pop
pop
int
hlt
lret
pop
and
ljmp
mov
add
sbb
fld
lods
js
fucom
and
jp
mov
or
jae
ret
fwait
add
inc
hlt
sar
adcl
inc
out
mov
ret
xor
jge
mov
shlb
adc
inc
inc
negl
and
mov
push
loop
pop
outsb
cmp
dec
mov
mov
xchg
fcoms
pop
xor
cmpsb
xchg
lds
scas
xchg
int
roll
push
or
xchg
mov
popf
mov
jnp
filds
add
xchg
repz
inc
jb
jo
and
neg
jg
sti
aas
push
das
lds
xor
mov
hlt
sub
push
add
fs
ss
in
test
or
mov
xchg
js
roll
add
test
xor
pop
jne
pop
jne
or
inc
push
out
vmread
addr16
into
scas
cmpsb
pusha
lock
popa
leave
adc
dec
das
xor
out
sbb
test
lods
dec
mov
dec
jb
bound
xor
push
stos
cli
aaa
das
pop
pop
add
push
mov
test
xchg
sub
jecxz
sbb
mov
mov
xchg
add
test
mov
incb
ds
cmp
fstpt
and
mov
lds
sub
fnsave
or
xlat
scas
add
xchg
jae
int3
push
js
pop
aas
imul
cld
test
ret
test
movsl
sbb
or
outsl
inc
stc
repnz
mov
inc
dec
push
mov
dec
mov
ja
pop
mov
loope
out
out
mov
rolb
xchg
xchg
insl
cltd
mov
cltd
inc
xchg
lock
xlat
fisttps
ret
mov
jle
sub
mov
loop
int3
cmc
ret
in
loop
inc
leave
inc
ret
mov
call
bound
cmc
jp,pn
dec
xchg
rorb
repnz
rcrl
orl
mov
and
gs
xor
hlt
mov
mov
bound
js
fstl
popa
xor
pusha
inc
xchg
movsb
push
ficoms
rcrb
cwtl
cmc
or
dec
cltd
xchg
ret
cltd
shll
movsb
add
roll
adc
ja
loop
push
push
xchg
imul
inc
shrl
sahf
cmpsb
into
push
cmp
jno
shrb
repz
xchg
ret
scas
jo
test
jnp
cmp
imul
jbe
mov
mov
add
dec
add
jle
add
loopne
mov
cmpsb
jnp
test
lret
xchg
rolb
inc
lock
xchg
loopne
mov
test
ret
sar
clc
mov
adc
push
jle
addb
sub
push
lock
mov
cmc
decl
xor
hlt
or
ret
jmp
xchg
jp
xchg
gs
inc
lret
std
shrb
mov
mov
xchg
or
cmc
insl
jmp
incb
out
push
loope
sbb
js
repz
jg
adc
out
outsl
imul
inc
pop
push
and
and
in
sti
sbbl
outsl
pop
xchg
mov
jg
pop
add
fstl
add
mov
cli
popf
sti
cmovne
jo
daa
cmc
add
inc
pop
mov
push
inc
int
outsb
cs
jge
adc
xor
or
sarb
cli
sub
mov
fsubs
out
ja
xchg
jecxz
jecxz
and
inc
cld
dec
sub
cmpsl
ret
cmp
ljmp
mov
mov
inc
pop
in
mov
incb
loope
mov
inc
add
addr16
mov
sbbl
lods
jne
jo
and
jbe
xchg
pusha
or
and
test
sar
or
sub
nop
pusha
cmp
add
test
jle
dec
mov
loopne
scas
test
outsl
pop
adc
xorb
pop
xchg
add
imul
cmp
psubusb
sub
xchg
cmpl
inc
dec
stos
mov
js
cmp
rcr
ja
adc
lods
jl
push
sahf
sub
push
andb
mov
jg
mov
and
mov
loopne
test
push
aad
mov
push
es
out
mov
cmc
sub
inc
jmp
mov
push
sub
stos
in
add
cs
out
mov
dec
add
jmp
inc
pop
mov
adc
mov
inc
jmp
push
and
outsb
sub
pusha
adc
pop
mov
iret
xchg
or
test
lahf
mov
fwait
out
mov
negl
or
cmp
mov
inc
lahf
icebp
dec
sti
pushf
fildll
andl
adc
fs
jge
rcrb
hlt
xchg
pop
insl
xchg
xchg
xchg
test
xor
movsb
sub
shrl
mov
popa
pop
in
inc
cmp
dec
dec
stc
mov
push
ret
add
sub
cmp
push
sahf
adc
adc
sahf
popa
or
sbb
or
icebp
cmp
fdivrl
and
inc
pop
fs
mov
add
inc
dec
or
xlat
add
out
cmp
xchg
jge
pop
pop
jns
fistpll
mov
jmp
icebp
pop
iret
ffree
test
mov
xlat
add
mov
push
mov
mov
sub
add
test
mov
scas
test
fsubl
inc
out
fiadds
jbe
mov
push
mov
aad
cmpsb
dec
xchg
add
and
inc
jns
cs
lcall
loope
lods
movb
sub
mov
and
popa
std
lods
inc
aas
fisttpl
adcb
icebp
mov
push
jnp
and
cmc
mov
pop
fcmovnb
jbe
pop
loope
pushf
jle
sub
cli
jp
loope
jmp
loope
jmp
jecxz
push
xchg
jg
repz
mov
cli
popa
lods
popa
shrl
lods
daa
test
aam
pop
inc
popf
inc
cli
iret
outsl
stos
test
pop
push
ljmp
ret
xchg
loope
hlt
push
jle
inc
adc
in
inc
into
jecxz
inc
comiss
and
ljmp
jg
xlat
aam
fbld
mov
xchg
stos
stos
inc
fsubrl
push
out
vpmulhw
mulb
xchg
in
loopne
testb
and
add
cmc
jecxz
ret
jnp
ret
cmpl
arpl
add
loop
pop
out
imulb
jbe
add
ret
mov
bound
inc
popf
jns
iret
xor
push
and
ljmp
neg
mov
sbb
or
mov
sbb
push
dec
xor
pop
cmp
lret
and
inc
fcomi
test
push
pop
cmp
data16
insl
popa
push
test
dec
cmp
jecxz
movsl
clc
lea
scas
ja
subb
dec
sti
std
fwait
or
in
or
pop
jo
mov
mov
test
test
cmp
mov
jg
mov
inc
aad
jecxz
inc
fisubl
out
pop
std
jae
push
and
dec
outsl
rolb
ja
mov
jge
xor
xor
ds
in
cmp
arpl
scas
adc
sarl
addl
pop
push
add
jnp
jp
jl
push
sbbl
test
push
mov
dec
popf
shrl
and
fisubrl
sbb
sbb
loopne
lds
stos
fldt
mov
mov
adcb
fidivs
leave
pop
mull
xchg
pop
xchg
ret
decb
jb
mov
lock
out
mov
jle,pt
dec
adc
push
xchg
sti
push
scas
stc
mov
negl
cwtl
test
movsb
jp
insb
addr16
shl
out
test
sahf
sub
push
or
aam
gs
sti
mov
inc
test
pop
icebp
roll
test
pop
pusha
mov
repnz
cmpl
xchg
add
sub
lods
test
outsl
lea
decb
ljmp
lea
cmpsl
aam
in
mov
in
push
dec
sub
daa
repnz
ds
xchg
cltd
pop
subl
jmp
inc
jne
xchg
pop
inc
cmp
mov
test
lds
andb
out
inc
jg
rol
cltd
push
leave
imul
mov
pop
in
sub
test
arpl
in
test
std
inc
lret
sub
xor
fs
in
xchg
shlb
fildll
jge
fldt
and
jle
scas
xchg
loopne
or
push
cmpsl
push
out
out
mov
in
stc
jae
mov
subl
jae
into
das
pop
pop
mull
cmc
filds
ret
and
mov
mov
outsb
lods
movsb
fwait
out
push
pusha
or
xchg
in
xchg
dec
sub
loope
sbb
cmpb
repnz
aaa
shll
mov
aas
sub
movsl
and
fistl
inc
test
xchg
cmp
gs
mov
sub
jnp
push
test
daa
insl
push
repz
and
xor
in
inc
les
mov
push
inc
or
mov
cmp
push
push
fisubs
push
jnp
and
xchg
fsubrp
mov
dec
clc
jmp
or
movsl
test
pop
hlt
inc
jo
fmulp
mov
xchg
dec
leave
sub
mov
loop
mov
aas
test
jecxz
inc
adc
ret
test
push
test
mov
addr16
scas
into
leave
mov
or
jg
pop
pusha
scas
movsl
aam
movsb
out
mov
data16
mov
xchg
stc
outsl
adc
adc
pop
jle
lea
xor
aas
ffreep
sti
lock
add
add
cmc
cmp
jmp
out
pop
rolb
push
int
pop
out
shlb
cmp
mov
jno
ficoms
or
mulb
xchg
mov
jb
loopne
inc
fsubp
ds
lds
cmpsl
pop
out
scas
adc
add
push
jecxz
ret
lahf
pop
push
adc
mov
cld
scas
icebp
sub
mov
leave
or
scas
mov
fistps
sub
shlb
out
or
adc
faddl
or
lods
inc
pop
ja
jne
and
out
add
or
je
mov
push
pop
fldl
xchg
sar
test
out
xor
sub
mov
push
into
in
daa
jecxz
jns
xorb
mov
imul
addr16
xchg
ret
pop
mov
adc
nop
push
lea
or
shll
fisttpl
and
and
mov
dec
mov
icebp
jg
rorl
dec
push
stc
and
in
lds
test
std
in
out
imul
shll
addr16
jb
imul
ds
push
jns
push
test
rcrb
sahf
loope
movsl
into
sbb
leave
xchg
cmpsb
add
inc
mov
jae
or
inc
jecxz
jge
jg
xchg
test
pop
inc
inc
sub
add
sarb
pop
ffreep
sub
mov
test
mov
or
in
mov
sarb
loopne
dec
jge
jo
or
shlb
fildll
cs
lock
add
int
lahf
das
add
mov
loope
shll
mov
mov
and
test
test
hlt
inc
push
push
xchg
stos
fsubp
sub
test
xchg
fisubs
jae
fstl
out
mov
mov
sbb
out
hlt
loop
fildl
pop
xchg
xor
movb
mov
jmp
imul
lods
lret
in
xchg
out
stc
push
movsb
ffree
imul
adc
mov
add
loope
xor
push
addr16
jecxz
aad
mov
push
dec
aaa
mov
sti
xchg
aaa
jl
adc
adc
mov
mov
stos
mov
jne
cs
insb
pop
push
aas
pop
mov
push
loope
in
push
sub
call
andl
and
mov
and
popf
call
ljmp
mov
iret
xchg
jg
adc
sub
out
or
in
xchg
insl
ljmp
mov
push
mov
add
ret
pop
icebp
add
loope
shrl
negb
push
aas
inc
and
fldl
mov
stos
lock
pusha
mov
inc
dec
fstl
and
ljmp
cmpsl
fsubrl
ja
lahf
addr16
inc
fistps
xchg
pop
push
enter
dec
cmp
mov
push
in
ljmp
data16
mov
cmpsl
es
push
mul
pusha
in
cwtl
ret
pop
xchg
shl
test
gs
cmc
and
arpl
hlt
and
in
adc
push
fs
ret
push
in
mulb
add
jecxz
out
pop
ret
addr16
ret
adc
jb
sarl
inc
imul
test
push
jg
or
cmc
lea
addr16
cmp
add
loop
ret
jle
jne
bound
and
aad
loope
rol
in
mulb
inc
jge
pop
xor
and
loopne
aad
mov
daa
cmc
cmp
xchg
and
les
cmpsl
xchg
lds
inc
in
testb
out
shl
cmpsb
incb
loope
inc
push
mov
jecxz
push
sar
jne
gs
xchg
int3
ret
mulb
aad
xor
and
add
jecxz
ret
inc
push
mov
orl
add
add
loop
and
cmc
movsl
div
jecxz
push
aam
jp
and
into
fisttpll
mulb
fwait
std
outsb
cmpsb
inc
out
sub
fisttpl
loope
pushl
popf
xlat
mov
bound
das
xor
das
mov
in
push
dec
rcrl
fcoml
imul
daa
add
mov
ss
xchg
dec
shlb
loop
push
test
fldl
jo
shll
xchg
int3
jne
adcl
out
in
pop
sbb
stos
pop
fucomip
pop
sbb
adc
mov
or
adc
stc
stc
aam
cs
mov
adc
inc
lds
jg
addr16
out
out
sub
cmp
sbb
jnp
xchg
fstp
nop
int
lahf
sarb
jl
imul
leave
fs
fstpt
dec
sbb
cli
adc
mov
xor
ja
cwtl
pop
daa
and
leave
push
cmpsl
xchg
jmp
mov
add
jecxz
cmp
hlt
subb
mov
cwtl
out
stos
std
push
sti
stc
and
daa
sub
jae
aaa
outsl
jg
je
scas
rolb
cmovs
enter
dec
add
xchg
lea
lahf
call
mov
or
mov
jmp
rclb
cwtl
cwtl
les
outsl
pushl
ret
repz
lods
in
push
xchg
mov
jge
jns
inc
push
lret
inc
jg
jne
test
ret
cmpsb
jns
cmpsl
xlat
mov
mov
inc
or
jmp
and
jae
out
adc
sbb
test
hlt
pop
cmp
xchg
mov
rcl
cmc
andl
lahf
mov
jge
daa
cmp
pusha
test
mov
orb
icebp
imul
out
repz
sbb
jno
and
push
ja
test
mov
icebp
std
addr16
jge
outsl
div
cmpsb
sub
dec
push
ds
add
cmpsl
imul
call
and
cs
sbb
dec
mov
bnd
shrl
cld
inc
dec
lock
ret
into
fisubl
inc
stos
sti
sub
or
push
fwait
jp
nop
push
loop
inc
lret
clc
mov
les
out
mov
push
cmpsb
stos
fs
inc
push
cmpsl
cld
sub
outsl
int3
lods
out
pop
rolb
mov
sub
cli
lock
push
scas
xchg
ljmp
addr16
jb
pop
mov
cmp
dec
add
hlt
inc
dec
shlb
scas
scas
push
sbb
xchg
ljmp
cmpsb
cmp
popf
in
jle
enter
lock
pop
pop
in
decb
add
shll
movsl
hlt
out
xor
out
push
and
xor
add
add
sub
test
inc
roll
mov
push
mov
mov
outsb
ffree
jle
cmp
cmp
and
sub
cmpsb
push
pop
mov
popa
sub
sahf
jb
pop
mov
pusha
lcall
jo
sub
mov
xorb
ret
cmp
adcb
and
decl
dec
cmpsl
lds
xchg
fbstp
hlt
lret
pop
push
cmpsb
shlb
jno
or
jp
movsb
sub
outsl
stc
clc
notl
xchg
add
sub
dec
jns
push
push
hlt
add
aad
dec
and
nop
ja
fsub
div
lock
mov
lods
jb
daa
jp
ficoms
mov
xor
adcl
or
inc
loop
ljmp
hlt
movsl
xlat
sbb
dec
loop
fldenv
inc
dec
jp
adc
and
fsts
xchg
gs
cmc
inc
jle
icebp
cmp
lret
push
add
dec
lret
scas
mov
rcrb
pop
and
inc
das
xbegin
dec
rcr
xchg
and
insb
es
mov
push
fs
jne
loop
pop
inc
js
les
test
popa
aam
add
rolb
push
adc
test
dec
int
test
cmp
cs
scas
enter
pop
lret
in
into
mov
dec
xchg
stos
mov
out
dec
gs
cmp
xchg
bound
cltd
out
movsb
movsl
xchg
cltd
mov
ds
xchg
mov
lods
or
orb
add
sahf
je
out
shl
jmp
dec
mov
or
cmp
jg
jl
or
call
or
subl
add
pop
add
lods
and
shlb
das
mov
and
cmc
cmp
jmp
mov
cli
cmp
or
rep
mov
or
outsl
pop
ja
inc
add
cs
xchg
dec
imul
mov
cmp
jecxz
or
pop
inc
lock
pop
bound
sbb
pop
push
adc
adc
cmpb
jg
aam
xor
push
sahf
out
mov
dec
adc
push
and
jge
sbb
sar
rorb
mov
inc
leave
dec
les
sbb
inc
adc
out
mov
loop
frstor
scas
mull
in
mov
fsub
cmpsb
repz
cld
jne
sub
mov
jns
or
sti
std
jmp
iret
jno
cmp
mov
xor
mov
mov
jns
push
out
cmpsb
mov
xchg
sarb
jnp
imul
loopne
out
xchg
out
jae
adc
incb
push
mov
loopne
and
mov
xchg
mov
dec
pop
daa
jecxz
fs
outsb
test
das
dec
mov
mov
cmp
lds
icebp
add
idiv
add
mov
sbb
mov
push
and
sbb
mov
pop
inc
movsb
xchg
jmp
out
mov
ret
sbb
jl
movl
gs
sub
jg
mov
sbb
sub
jge
add
sbb
mov
mov
popa
out
out
add
cmp
outsl
push
inc
lds
dec
jge
mov
sbb
pop
shrb
jns
repnz
subb
lods
loop
jbe
in
popa
jae
mov
mov
psrlq
inc
icebp
cmpsl
lods
insl
addl
stc
and
les
out
pop
push
jp
push
jg
xor
test
pop
sbbl
mov
add
mov
adc
mov
xchg
mov
les
call
scas
push
pop
xchg
addr16
push
loop
les
shrb
ret
xor
dec
or
leave
lret
out
mov
lds
sbb
out
bound
sarb
jmp
rol
fadds
lods
mov
shll
shrl
jmp
pop
mov
or
cmpsl
xlat
ss
lods
testl
add
out
jge
test
rclb
ljmp
pop
cmpsl
mov
mov
inc
dec
jbe
das
aad
cs
jge
cld
insl
stc
cmp
add
inc
mov
addr16
cmpsl
std
jge
and
loope
into
in
adc
jmp
jbe
std
inc
gs
mov
fwait
cmpsl
pop
fs
in
jb
mov
or
rcll
xchg
pop
mov
les
cs
sbb
adcl
mov
mov
mov
mov
pop
dec
ja
ja
sub
aad
orl
xchg
push
mov
cs
cli
es
in
cs
mov
or
cmp
ja
mov
in
loope,pn
sahf
jbe
rcr
out
mov
idivl
orb
inc
xchg
sbb
pop
jno
sub
pop
inc
call
hlt
push
mov
and
jl
fs
cmpsl
xlat
js
mov
sub
mov
mov
test
xor
push
mov
stos
push
dec
adc
mov
dec
pop
mov
pop
mull
inc
cmp
mov
imul
cli
add
sarl
out
sub
daa
out
mov
cs
scas
push
xchg
frstor
scas
mov
sub
mov
pop
les
adc
or
cmc
aam
jnp
ret
cwtl
mov
pop
imull
mov
sbb
mov
add
mov
jne
ja
mov
xchg
push
jmp
mov
mov
xchg
ja
cmpb
or
push
cmp
cmpb
pop
lret
jmp
jmp
dec
call
mov
test
cmpsb
cmp
cmc
gs
int3
sti
push
stc
add
add
pop
in
in
mov
pop
mov
les
mov
xchg
sub
mov
iret
cmp
xlat
push
insl
std
and
jmp
lcall
inc
arpl
fsincos
jmp
scas
test
dec
fidivrs
jae
fwait
mov
jmp
daa
dec
mov
xchg
jne
lcall
add
jns
push
outsl
in
les
xchg
mov
or
aas
stos
sbb
sbb
and
jecxz
jb
andl
arpl
cmpb
test
cmp
fs
ja
in
fsts
mov
push
test
dec
test
sbb
push
mov
fisttpll
cmpsl
cmc
lcall
pop
jnp
sub
icebp
xchg
sbb
enter
std
dec
addr16
or
icebp
fiadds
adc
hlt
mov
nop
inc
cmp
stos
xor
pop
pop
jge
test
sub
mov
mov
es
jp
repnz
cmp
cltd
mov
pop
push
add
rolb
in
rorb
lea
sbb
adc
scas
jo
xchg
mov
adc
rcrl
loope
mov
lock
fidivs
rcll
jbe
push
mov
and
add
adc
xchg
push
jno
or
push
scas
inc
mov
cli
pop
xorb
push
mulb
es
rolb
xlat
ljmp
sarl
cmpsl
mov
out
pop
ds
mov
iret
out
fwait
mov
out
xor
fistps
adc
xlat
cltd
icebp
movsb
test
push
mov
and
inc
jo
out
mov
stos
xchg
vmread
mov
sbb
jbe
adc
add
shl
fcoml
mov
pop
push
addr16
iret
out
shll
push
lret
arpl
es
aam
js
add
dec
jecxz
sahf
lods
add
out
dec
lahf
xchg
out
in
jo
mov
or
es
inc
addb
fnstenv
lock
in
sbb
adc
inc
inc
sahf
daa
adc
out
lock
xchg
cmp
and
inc
es
sub
cmp
test
mov
in
pop
iret
jns
push
cltd
mov
mov
fidivl
mov
idivb
test
add
mov
mov
or
pop
add
dec
js
xchg
insb
add
pop
dec
fcompl
in
mov
pop
dec
xchg
pop
push
jp
pop
shll
repnz
out
sub
cmp
shrb
pop
add
shrb
rorb
jnp
push
ds
add
imul
or
hlt
mov
jg
movsl
ret
gs
xor
idivl
stos
loop
loopne
rorl
out
and
fimuls
test
out
div
int
incb
inc
arpl
rcrb
dec
mov
fwait
jo
ficoms
mov
push
out
aas
movsb
movl
or
fcoml
repnz
ret
jne
add
pop
es
xor
shll
das
fistpl
lea
stos
out
cli
fdivl
ja
imul
xchg
cmp
jae
out
mov
pop
lret
into
frstor
cmpsb
btr
pop
frstor
inc
push
loop
pusha
jbe
push
ja
jno
stos
sbbl
cmp
in
pop
mov
orb
stc
bound
fldenv
jno
in
xor
aaa
xchg
push
sub
xor
aam
jmp
loope
jo
mov
mov
push
jno
jge
sbb
push
test
jns
mov
dec
sbb
icebp
jg
xchg
or
fimuls
in
or
lods
scas
pop
inc
or
push
dec
xchg
es
aad
push
loope
cli
push
loop
mov
or
mov
xchg
xor
divb
in
ret
movsb
jbe
adc
int
jmp
inc
lds
out
test
into
xor
gs
aaa
lds
adc
xchg
push
dec
addr16
in
jbe
xchg
in
iret
sbb
data16
cmp
stc
sbb
mov
scas
out
inc
jae
lds
loopne
pop
pop
std
sbb
adc
mov
jnp
icebp
add
test
loop
leave
and
sbbl
test
scas
mov
sbb
negb
mov
inc
repz
cmp
mov
xor
outsl
dec
mov
pop
push
xlat
shrb
imul
movsb
ljmp
stos
cmp
mov
pop
or
notl
mov
xcrypt-cbc
cmpsl
push
subb
pop
xchg
mov
xchg
mov
adc
test
shll
scas
add
dec
mov
sub
test
imul
outsl
cmpsl
sub
lods
or
inc
leave
iret
loop
dec
add
mov
pop
mov
popf
jbe
sub
pop
pop
sbb
sbb
data16
mov
jge
add
in
test
fwait
adc
push
rorl
push
loope
sub
mov
inc
mov
mov
flds
or
and
test
xchg
xchg
adc
push
adc
sbb
adc
rcl
cmpsb
pop
mov
ja
xchg
ds
cld
mov
decb
jno
out
dec
pop
fldenv
mov
jge
xor
fwait
dec
xor
mov
or
aam
shlb
test
inc
repnz
pop
mov
daa
mov
sbb
jmp
hlt
jge
mov
sbb
or
les
push
std
les
gs
aam
inc
dec
gs
sub
movsb
or
lea
jns
mov
sub
sahf
cmp
cmp
adc
xlat
mov
adc
imul
inc
pop
fcoml
push
sub
lret
pop
sbb
pop
or
and
in
add
cmp
inc
sbb
sub
sahf
mov
ljmp
mov
pop
into
xchg
xor
sbb
test
jecxz
daa
nop
jb
sub
or
pop
out
and
daa
lcall
int3
dec
sub
and
repnz
jnp
pop
testl
je
push
jle
pop
or
stos
loop
lret
dec
xchg
mov
decb
pop
cmpsb
inc
or
shlb
jae
xchg
movsb
stos
js
faddl
inc
inc
lret
jmp
mov
cld
cmp
sbb
mov
jae
push
jge
push
mov
jg
lock
daa
enter
fldcw
lret
into
sub
mov
daa
sahf
in
into
popa
iret
shlb
cmpsl
mov
sbb
int
push
xor
stos
dec
scas
jmp
xorb
adc
ds
pushf
loopne
daa
and
mov
decl
sbb
pop
cmc
mov
mov
in
jmp
jne
repnz
addr16
flds
or
mov
cmpsl
xchg
js
pop
testl
loop
cmp
cmp
sub
cmp
outsb
ret
outsl
leave
sbbb
rol
in
and
push
mov
lock
aad
mov
jno
lods
xor
cmp
sub
lock
cmp
push
in
div
inc
imul
addr16
decl
in
sqrtps
inc
cmpsl
popa
fidivl
xlat
pop
popf
std
lods
mov
rcr
pop
mov
fildl
lods
pop
aad
mov
adc
xchg
or
pop
jecxz
orl
nop
cmp
ficoms
adc
xchg
out
lods
mov
and
test
cmpsl
sbb
pushf
cs
lret
dec
adc
nop
aam
xchg
mov
aad
rcl
cmpb
xchg
lea
adc
loop
stos
negb
loope
xchg
test
shll
mov
adc
xchg
loope
sub
or
shl
lea
daa
push
loope
mov
jne
push
mov
negb
mov
xor
inc
mov
frstor
mov
inc
lahf
xlat
sub
fadds
push
ja
insl
mov
sbb
pop
idivl
fwait
in
push
sbb
push
lds
cmc
repz
sahf
scas
bound
les
movb
sub
sbbl
fwait
sar
out
jbe
std
outsl
outsb
and
aad
or
push
bound
push
out
jne
in
je
testl
fwait
inc
or
pop
les
test
or
mov
filds
in
ds
subl
roll
test
fimuls
js
stos
xchg
xor
imul
nop
test
adc
xor
aaa
and
stos
mov
dec
jl
lock
sub
fsts
fiadds
aam
popf
test
cmp
xchg
stos
rcll
fists
and
push
loop
sti
repz
lahf
dec
sti
inc
out
shlb
xchg
ret
testb
lods
aad
adc
dec
pusha
shl
out
addr16
pop
pop
add
stc
cs
out
in
cmc
outsl
data16
out
lds
jl
out
test
lods
out
inc
xchg
mov
xchg
add
jmp
ja
pop
mov
xor
daa
xlat
and
jb
inc
xchg
cmpsl
test
inc
fxch
jnp
ret
jb
xchg
movsl
ret
sar
out
push
add
fs
stos
andl
add
addb
push
fnstcw
rolb
cmp
mov
add
scas
mov
and
push
jecxz
ret
ja
addl
and
mov
insb
pop
movb
pop
int
out
pop
shrb
jl
add
mov
popa
daa
pop
ret
loope
gs
inc
lds
and
in
mov
pop
xlat
in
pop
mov
ja
loopne
mov
pusha
addl
fcoml
sub
arpl
jmp
mov
mov
xlat
in
inc
daa
and
incb
data16
pop
inc
popa
dec
dec
rclb
pop
inc
aad
adc
call
jne
mov
faddl
testl
mov
mov
mov
out
push
cwtl
cmp
sbb
add
sub
out
xchg
lcall
test
cli
stos
mov
push
pop
inc
in
adc
lods
push
xchg
push
mov
xor
sahf
clc
jmp
mov
mov
fisubl
mov
ja
call
add
cmp
aad
lcall
movsb
stos
lods
mov
stos
cmp
dec
dec
adc
mov
ja
sahf
call
les
or
pop
outsl
movq
adc
int
or
out
int3
hlt
in
cmpsl
inc
arpl
xchg
fadd
enter
sahf
arpl
inc
das
in
je
push
hlt
cmp
jmp
pop
cli
lock
and
xchg
adc
pop
dec
lds
ds
cmpsl
add
xchg
rcrl
int
inc
daa
addr16
in
loopne
pop
jnp
rcll
inc
cmpsl
inc
sub
xchg
in
repnz
and
xchg
inc
mov
jbe
inc
xchg
rcrb
xor
and
sub
aad
and
push
in
jbe
ds
daa
xchg
int
out
mov
aaa
shll
lds
xchg
nop
aad
ror
inc
jbe
xlat
daa
icebp
jecxz
adc
or
mov
mov
div
rclb
leave
mov
outsl
inc
out
data16
filds
in
or
addr16
jecxz
xor
jb
mov
xchg
stc
test
xchg
xchg
rcr
andl
ret
and
lods
addl
rclb
adc
int
sbb
lock
jecxz
shlb
xchg
sti
shl
incl
stc
inc
stos
jmp
test
shlb
dec
dec
leave
addl
sahf
fs
subl
subl
add
test
popf
mov
inc
inc
ds
daa
pop
push
sub
sbb
jne
mov
sbb
notb
jns
movsl
leave
outsl
push
sti
sbb
test
repz
jns
cmp
scas
fildl
fiadds
adc
mov
cmpsl
adc
jg
mov
xor
lods
xchg
jg
lock
pop
outsb
pop
mov
outsl
pushl
scas
jecxz
gs
mov
cmpsb
mov
inc
mov
shr
roll
jl
push
xor
sahf
lds
adc
enter
inc
rcr
pop
mov
ja
or
into
inc
add
pop
push
lcall
or
and
je
push
notb
mov
gs
mov
xchg
rcrb
xor
fucomp
cmpsb
push
sbb
cmc
adc
inc
pop
negl
mov
sar
sbb
ret
rcll
xor
sarb
pop
adc
enter
add
sarl
mov
mov
imul
lods
inc
imulb
jle
add
mov
or
in
jmp
in
fs
mov
dec
pushf
dec
fstpl
jecxz
dec
mov
testl
jle
mov
test
mov
aas
jbe
pop
int
xor
jg
jecxz
sarl
mov
jne
hlt
outsl
insl
stc
ret
mov
mov
mov
mov
dec
mov
inc
lods
add
add
inc
fdivrl
das
cmc
sub
ja
mov
inc
in
out
inc
mov
or
mov
sarb
pop
int
not
icebp
popf
leave
out
sti
aaa
mov
ds
js
ror
ret
xor
xchg
pusha
scas
adc
bswap
rcrl
in
and
mov
shll
clc
addl
jne
lea
mov
push
fldl
cmp
incb
pop
cs
pop
pop
xchg
pop
sbb
pop
cli
add
ja
inc
outsl
cltd
cli
xchg
sbb
es
decb
xchg
push
add
add
push
es
leave
inc
dec
rorb
dec
aad
pop
push
pop
lea
mov
mov
sbb
loop
movsb
mov
inc
les
adc
into
jge
and
sub
insl
scas
popa
jecxz
lds
out
scas
push
mov
cmpsb
scas
fwait
ror
inc
and
ss
in
out
sbb
xor
push
dec
stos
inc
jne
imul
shl
arpl
rol
cmp
sarl
repnz
push
in
and
movsl
dec
fs
mov
movsl
inc
mov
iret
lods
outsl
andb
mov
pop
add
rcl
loop
mov
sbb
insb
mov
lds
jl
dec
fidivrl
iret
outsb
call
int
rol
stos
outsb
or
add
std
cmp
stc
shrb
dec
arpl
jle
xchg
jl
test
inc
sbb
mov
mov
push
mov
sbb
inc
test
sbb
stc
insl
adcl
mov
mov
mov
xor
cltd
ss
mov
cmp
lods
lock
xlat
lods
or
push
xor
dec
test
jnp
dec
push
jecxz
jecxz
out
jb
dec
pop
jno
pop
ret
fstl
dec
leave
xor
or
scas
ja
push
xlat
jle
mov
jae
pusha
daa
fdivs
test
test
sbb
popl
cmp
push
cmpsl
roll
popa
pop
inc
mov
jge
out
mov
inc
loop
sub
dec
mov
xchg
outsb
push
sub
imul
mov
jae
out
pop
roll
roll
jge
jg
aad
outsb
scas
fmull
or
push
lea
jb
fildll
pop
sub
popf
cmc
mov
and
stos
sub
in
push
js
jge
jne
jecxz
mov
jmp
sti
out
in
jmp
cmpsl
mov
or
pop
jmp
mov
inc
pop
and
out
or
andl
loop
jo
repz
push
les
testl
lock
mov
leave
popf
mov
in
jbe
out
into
inc
ja
stc
loope
insl
cmpsb
setne
inc
or
push
das
add
aam
repnz
xchg
xchg
fidivs
and
in
adc
mov
stos
outsl
mov
outsl
mov
xchg
push
mov
pop
mov
imul
cmp
shll
fcomi
shrb
stc
mov
std
cmp
lds
stc
mov
add
inc
mov
cs
je
fcom
mov
neg
and
ret
hlt
inc
sub
push
mov
roll
mov
and
xchg
or
jle
and
xlat
mov
fstpl
clc
data16
test
pusha
icebp
and
xchg
mov
add
push
inc
cli
mov
imull
lret
xlat
pop
shl
es
xchg
pop
andl
dec
cmpsl
mov
stc
test
aam
xchg
mov
popa
cmp
or
pop
jle
xchg
lods
xor
fwait
gs
xchg
test
lea
cmp
inc
in
jbe,pn
gs
outsb
or
jne
dec
mov
add
mull
mov
or
sbb
shl
imul
dec
jge
cmc
fprem1
jle
xchg
jg
xchg
inc
or
jmp
mov
fidivrl
out
and
cmp
fwait
mov
jne
inc
mov
sbb
add
mov
addr16
daa
test
xchg
into
or
mov
outsl
mov
test
mov
dec
adc
adc
push
je
xor
addr16
pmaddwd
xchg
lret
xlat
and
or
cld
push
aas
mov
mov
fists
fildl
mov
hlt
and
test
dec
addr16
outsl
inc
les
mov
push
mov
lea
push
aas
les
or
shrb
pop
mov
inc
add
cmp
fnsave
call
rclb
or
cli
lds
sar
mov
mov
jecxz
jo
ret
test
push
and
cs
fstp
fidivs
bound
gs
aas
push
sbb
cmp
call
mov
mov
cmpsl
dec
test
es
icebp
pop
aaa
push
and
daa
adc
mov
adc
mov
push
mov
mov
out
lds
leave
xchg
add
std
dec
cld
out
in
pop
mov
pop
in
cld
in
sbb
mov
and
paddsb
and
test
es
push
sub
iret
fdivr
aad
inc
pop
cmpsb
aam
stos
mov
aas
testb
jo
push
int3
xchg
mov
sarl
and
sti
pop
ja
repnz
mov
or
in
dec
stos
cld
pop
movsb
dec
pop
insb
scas
mov
idivl
sbb
movsb
aad
sahf
cmpsl
nop
rcl
pop
popa
fildl
push
mov
test
outsb
int
daa
jo
sahf
addr16
pop
je
inc
je
push
insl
cmc
outsl
lret
inc
ret
and
mov
jo
outsl
mov
add
mov
out
cmp
test
mov
lcall
mov
inc
add
dec
cmc
jecxz
roll
pusha
in
push
xorl
or
and
sarl
loopew
cmp
dec
xor
clc
jp
push
inc
jp
xchg
or
and
daa
pop
add
stos
jmp
adc
mov
adc
jne
shrb
cld
mov
dec
pop
mov
dec
mov
gs
fsubl
mov
xor
mov
and
push
mov
mov
inc
mov
or
adc
xchg
mov
dec
dec
sbb
mov
ret
pop
mov
xorl
nop
or
xchg
adc
dec
and
addr16
ds
faddl
mov
sbb
mov
sbb
pop
imul
dec
inc
data16
or
add
popa
xor
jbe
xchg
shl
ja
xlat
iret
movsl
test
or
inc
movsl
pushf
sub
jmp
push
and
int3
lods
add
rorl
cltd
mov
subl
ja
inc
or
ljmp
push
stos
inc
sbb
in
rolb
fisubrl
push
out
or
add
ret
cmp
adc
mov
in
jecxz
push
cmc
mov
inc
testb
jno
pop
out
inc
test
std
aad
divl
cmpsl
inc
scas
aaa
xor
jle
inc
adc
dec
testb
out
aam
ds
add
shr
or
mov
mov
jmp
mov
pop
cmpsl
or
insl
xchg
or
sahf
or
sub
outsl
sub
mov
xor
enter
jp
es
out
jg
push
je
mov
ret
or
mov
cli
mov
cmp
or
std
test
or
inc
adc
out
int
test
or
dec
jns
jmp
pop
stc
int3
cs
dec
pushf
cs
rclb
inc
pavgw
sbb
mov
and
mov
divl
or
std
gs
mulb
test
sbb
and
ror
icebp
or
jno
inc
cli
jecxz
cmp
lods
pop
lds
add
mov
ret
dec
test
mov
in
pop
mov
shlb
xchg
stos
in
add
and
mov
arpl
inc
sub
mov
add
roll
jge
mov
neg
pop
std
jge
fnstenv
leave
sbb
jns
les
shll
adc
pop
mov
push
ret
mov
pop
ret
fsubrp
and
pushf
mov
ret
test
mov
jnp
shl
xor
cmp
cmp
cmc
sti
loope
shl
loopew
push
daa
sub
test
jne
cmpsl
jns
mov
mov
gs
fs
bound
test
cmp
test
fwait
lods
data16
es
jae
mov
adc
movsl
fwait
xchg
bound
fiaddl
push
in
stc
rclb
push
push
ffreep
adc
stos
arpl
mov
add
push
into
js
aaa
and
out
shrl
or
int3
orb
mov
daa
and
or
data16
das
les
mov
aaa
xchg
mov
xchg
and
sbb
lods
loop,pn
out
and
rorb
sahf
adc
mov
mov
lods
xlat
ss
adc
shlb
cwtl
sbb
ja
cmpsb
ficoms
lcall
mov
fwait
pop
jnp
adc
push
js
mov
arpl
jge
in
pop
daa
cli
pop
add
pop
xlat
dec
push
or
mov
inc
insl
addl
mov
jmp
ljmp
ret
jne
jbe
xchg
pop
sar
mov
jae
xor
cmc
stos
cmp
lds
test
xchg
inc
aad
mov
jg
das
stos
lods
bound
push
aas
push
flds
inc
sub
rcrl
stos
mov
or
insl
ja
mov
shrb
arpl
push
push
repz
push
arpl
mov
cltd
xor
mov
push
hlt
mov
cmpsl
loop
test
sarl
mov
sbb
jne
arpl
jg
outsb
sbb
or
sarl
sub
repz
pop
mov
pop
inc
jmp
xor
sub
mul
lds
mov
fdivs
cmpsb
mov
sub
adc
cltd
mov
mov
xchg
xchg
es
pop
sarl
movsb
or
jmp
mov
bnd
cmpsb
gs
arpl
or
jle
ret
mov
rclb
jnp
sbb
nop
das
cli
loop
sub
lods
std
mov
sbb
inc
out
fisubrl
jecxz
and
push
xchg
stos
int3
add
lds
inc
lea
pop
cmp
mov
pop
lds
test
aas
pop
dec
in
outsl
cmc
mov
adc
sbb
pop
push
divl
imul
in
or
nop
fistpll
addr16
push
insl
cmpsl
inc
and
push
stos
cli
in
jg
fbstp
into
out
fildl
std
rolb
stc
in
cs
mov
bndldx
aaa
adc
mov
jecxz
cmp
rcrb
or
jbe
in
jnp
gs
adc
das
inc
xchg
push
ds
daa
mov
lock
inc
inc
xchg
mov
cmp
ret
mov
jo
pop
rolb
std
shl
notb
cmc
jl
cmp
out
push
push
sahf
jecxz
pop
pop
adc
or
jecxz
inc
mov
mov
dec
cwtl
or
cmp
imul
test
ja
or
or
or
adc
fcomps
es
xchg
fisttpll
adc
out
lds
mov
shl
mov
xchg
outsl
mov
nopl
mov
pop
clc
movsl
mov
lea
dec
push
sub
mov
aaa
jne
ja
jns
arpl
mov
rcrl
insl
cltd
push
sbb
nop
out
sbb
or
pop
out
fwait
xor
insl
jecxz
rcr
call
and
js
outsb
es
out
inc
popw
lods
cmc
sub
sbb
fidivrl
ja
adc
jp
ss
jnp
xchg
cli
mov
xlat
or
jg
in
sbb
inc
sbb
stos
mov
shll
xlat
iret
and
test
dec
ljmp
pop
std
test
lods
add
dec
ja
out
in
mov
fwait
or
or
insl
inc
mov
mov
out
inc
daa
in
in
fwait
and
into
mov
into
adc
test
ret
mov
pop
in
js
mov
incl
inc
mov
add
insb
or
jmp
rolb
fwait
sbb
les
push
out
mov
cmpsl
stos
aad
es
loopne
aaa
stos
jg
push
pop
rcrl
or
pusha
lahf
mov
test
pop
cltd
or
pop
out
xor
in
pop
dec
cmp
cs
adc
aaa
mov
jo
fwait
cmp
mov
adc
jno
lock
icebp
mov
loop
int
inc
cmpsl
adc
sbb
jmp
add
jb
les
sub
mov
iret
mov
bound
mov
pusha
mov
adc
or
push
mov
xchg
bound
sbb
cmp
aad
mulb
dec
adc
cmp
push
jge
negl
mov
push
dec
jecxz
out
dec
and
out
arpl
inc
out
hlt
add
push
mov
cltd
loope
jge
into
adc
jmp
xchg
cwtl
lcall
loope
xor
imul
push
mov
sbb
fildl
mov
scas
sbb
pop
test
fdivp
test
shrl
cld
lods
ret
dec
sub
in
fstps
arpl
pop
jns
xor
mov
mov
loop
test
fwait
arpl
inc
cmp
cmp
aad
jbe
stos
mov
adc
push
mov
ret
mov
jle
cld
out
xor
cmc
jecxz
scas
and
push
inc
fisttps
rcrl
ret
add
stc
lea
jge
decb
push
jne
stos
or
mov
inc
jle
cmp
iret
mov
xchg
inc
mov
adc
lret
or
enter
dec
push
aaa
sub
mov
and
jg
lcall
divb
incb
nop
mov
aas
xlat
shlb
or
dec
sbb
addr16
out
sbb
push
addr16
or
cwtl
pop
das
leave
fbld
sahf
sub
ljmp
dec
aam
mov
push
das
ficomps
js
in
or
iret
loope
xchg
push
push
jmp
negl
jne
jg
insl
mov
xor
pop
shld
or
mov
scas
xor
inc
adc
inc
mov
lods
repz
lcall
or
pop
xor
mov
sub
outsl
dec
mov
jb
jne
into
lret
in
fnstenv
or
add
mov
mov
ds
sbb
pop
jbe
pop
fisubrs
sahf
mov
repz
mov
lods
xchg
in
inc
int3
ds
pop
arpl
inc
pop
pop
int3
in
adc
jl
dec
push
add
lods
and
sbb
dec
ret
push
add
adc
inc
outsl
cmpl
les
dec
adc
cmp
pop
nop
faddl
mov
adc
cmc
dec
inc
gs
test
ficomps
mov
pop
mov
sub
sbb
stc
cwtl
mov
sub
pop
in
sub
jg
out
mov
cmp
sub
mov
push
insb
add
fwait
adc
aad
les
pop
dec
scas
xor
movsl
fistl
orl
out
sub
dec
pushf
sub
movsb
sbb
push
outsb
mov
repz
mov
mov
insl
out
sti
lcall
loop
ret
jnp
mov
inc
les
cmpsb
clc
scas
lret
inc
repnz
jg
mov
cmp
scas
imul
test
roll
dec
addr16
mov
adc
and
push
ljmp
or
repz
add
dec
clc
pop
daa
or
or
mulb
fldt
lods
subl
push
xlat
ljmp
iret
xchg
cmpsb
jle
mov
xchg
fwait
dec
xchg
insl
in
mov
sbb
pop
orl
shrb
test
daa
pop
push
pop
jecxz
pop
fcomi
bndstx
mov
dec
cmp
mov
test
rcll
and
loope
xor
repz
daa
fnsave
stos
sti
shl
mov
lcall
push
pushf
cmp
jbe
inc
popa
mov
test
mov
scas
jp
add
rcr
adc
ja
xchg
aaa
popf
js
dec
sahf
sbb
push
mov
daa
mov
cmpsb
jae
xchg
inc
jmp
xchg
mov
jg
fbld
gs
mov
hlt
xlat
pop
xchg
jo
sub
icebp
js
push
jns,pn
andb
insl
cld
neg
aad
outsl
pop
inc
bound
add
xor
imull
pop
fistl
mov
cmp
shl
sbb
mov
dec
mov
mov
add
mov
add
sub
lock
dec
xor
lods
sub
mov
pushf
negb
scas
shll
mov
cld
shl
mov
insl
sbb
jno
inc
in
mov
jne
sarl
mov
lods
push
pop
and
inc
push
daa
push
xchg
addr16
ret
aad
loopne
fmulp
pop
sbb
jle
cmc
repnz
pusha
out
fidivrl
psllq
xor
movsb
insl
sbb
mov
testl
aas
pop
enter
shlb
mov
jbe
push
into
gs
testl
lcall
cmp
mov
or
in
jg
paddq
int3
sub
aas
mov
adc
sbbl
imul
sete
mov
and
ss
sbb
cmc
adc
mov
sbb
pop
dec
pop
lock
push
or
xchg
mov
test
pop
hlt
je
and
rcrb
pop
dec
mov
pop
mov
push
or
stc
in
inc
lret
popf
inc
leave
jmp
sub
jbe
mov
dec
adc
in
jo
stc
pop
rclb
sahf
sub
sbb
jle
push
mov
dec
aad
push
out
movsb
aad
push
xchg
xchg
sbb
add
sbb
cmc
and
test
popa
sub
sbb
hlt
sbb
cmp
jle
lock
xor
ja
fs
push
repz
notb
fwait
jae
repnz
jg
mov
das
stos
push
jl
mov
lods
mov
mov
xchg
daa
xor
scas
cmp
pop
ljmp
scas
add
mov
in
xor
mov
mov
inc
orb
loop,pt
fnstsw
icebp
lret
arpl
inc
mov
push
lret
xchg
jle
add
test
mov
mov
or
xacquire
rol
fmulp
popa
imul
dec
rcrl
lods
in
lock
cmpsb
or
add
out
pop
outsl
dec
fwait
push
fistpll
lods
test
xchg
test
mov
test
mov
daa
push
pop
jp
fistpl
loopne
les
aaa
sbb
and
add
cmp
das
fstps
push
pop
jp
xor
sbb
sbb
xchg
xor
dec
mul
jle
out
mov
add
push
fstpt
mov
push
icebp
cmp
out
mov
jb
ret
outsl
cs
mov
push
cmpsl
daa
cmp
stos
xchg
sahf
mov
pop
dec
outsl
cmp
and
fwait
lret
xlat
inc
mov
and
loop
push
test
add
jnp
pop
pop
push
rorl
or
mov
adc
xor
mov
fsts
cmp
sub
out
jbe
scas
repnz
pop
inc
in
jmp
pop
fisttps
ss
xchg
test
popf
push
pusha
gs
jg
mov
push
mov
insb
jmp
movsb
or
jge
and
int3
pop
sbb
and
lock
mov
xor
aam
sbb
test
sub
stos
pop
sbb
xchg
cs
cmp
adc
push
les
push
cmpl
dec
loope
jecxz
out
jmp
icebp
lods
pop
ljmp
and
and
lahf
sti
sbb
js
test
mov
out
ret
cmpsb
loope
cmp
or
sbb
les
arpl
cmp
xchg
test
jle
test
xchg
ret
jo
fisubs
int
or
in
cltd
sub
inc
cmc
jae
sub
jne
out
jg
ret
xchg
loope
add
shl
in
inc
out
mov
mov
adcb
in
icebp
and
data16
lcall
mov
push
mov
jmp
jo
pop
testl
sbb
pop
xchg
add
add
rol
dec
rorl
dec
cmp
dec
leave
cmpsl
jo
push
pop
ret
stc
aaa
cmpsl
and
mov
or
mov
popf
ficompl
jae
add
push
es
fwait
lret
stc
push
jmp
aad
jno
aaa
jo
iret
rorb
sub
inc
push
adc
insl
push
outsb
test
insl
jp
psadbw
sti
out
les
adc
sti
mov
mul
push
dec
lock
mov
or
xchg
pop
rorl
negl
repz
jg
rcr
daa
out
xlat
shrb
pusha
mov
pop
push
test
mov
jle
xlat
aam
arpl
loop
daa
jmp
push
stos
das
ja
stc
adc
imul
into
enter
mov
fsubp
repz
test
iret
sti
rol
in
adc
add
test
pop
stos
filds
xlat
xchg
scas
xchg
call
mov
lods
adc
xchg
inc
pop
add
fsubr
cmpsl
mov
mov
jmp
add
cwtl
add
sahf
fmuls
icebp
test
mov
xchg
pusha
add
sahf
sub
roll
add
addr16
push
fwait
in
fcoms
bound
cld
xor
mov
cmp
out
ja
pop
repz
test
adc
or
les
aam
cwtl
pop
aas
test
ds
fstps
ret
lret
test
jmp
mov
rcl
push
dec
or
test
jbe
lahf
pop
mov
subb
cmp
add
mov
sbb
jp
outsb
adc
sbb
nop
mov
cmp
mov
xchg
imul
ret
into
xchg
stos
ficoms
push
lret
mov
ds
orb
pop
cmpsl
pop
xchg
scas
shr
stc
add
pop
add
cmpsl
or
scas
ficoml
lret
bound
sarb
push
popa
lds
pop
sbb
clc
lods
shl
jmp
dec
mov
pop
mov
push
jecxz
call
lds
push
pop
idivl
xchg
sbb
dec
ss
std
repz
pop
pusha
add
mov
jno
je
pop
popa
test
add
mov
cmc
dec
dec
stos
or
adc
clc
ret
adc
dec
pop
adc
add
out
rorb
or
popa
call
sbbb
inc
test
add
jo
outsb
adc
fsubr
sbb
adc
daa
add
and
loopne
xchg
add
sbb
test
and
fdivrl
jmp
push
push
xchg
jle
hlt
xor
roll
add
cli
aam
and
or
add
inc
xchg
cmpsb
pop
xchg
shlb
jbe
add
fdiv
rorb
and
repnz
mov
mov
dec
stos
inc
push
stos
pushf
xchg
outsl
cwtl
cmpsb
fldcw
mov
sbb
mov
test
jbe
stos
scas
ret
push
jbe
cmpsb
pop
negb
loopne
shll
scas
push
lahf
mov
aas
addb
dec
aas
ss
cmp
adc
subb
sbb
adc
fimuls
lock
loop,pt
cmpsb
in
data16
adc
inc
push
pusha
mulb
inc
pop
xchg
inc
loope
push
mov
outsb
test
sub
push
inc
test
ficoms
mov
test
repz
sti
stc
orl
dec
mov
loop
push
testb
pop
mov
jno
adc
data16
and
push
xchg
aad
outsl
push
mov
ret
pushf
lret
jae
sbb
cmpsl
mov
mov
cltd
push
pop
in
dec
shll
out
cli
mov
sahf
mov
jecxz
jecxz
test
fsubl
sub
lods
loopne
inc
shll
push
cmc
pop
mov
add
sbb
cmp
push
jge
test
outsb
xchg
xchg
mov
mov
and
sbb
mov
js
jb
sahf
popl
xchg
movsb
xchg
xchg
add
mov
pop
fwait
mov
mov
ret
inc
jge
fsubrs
les
iret
cmpl
lahf
jae
test
loop
xchg
movsl
mov
pop
dec
test
add
mov
adc
fidivs
mov
pop
test
xor
xor
iret
ret
fld
jnp
imul
repnz
sbb
lods
decl
sbb
push
out
testw
ljmp
dec
inc
lods
push
sub
lods
push
mov
les
add
rorl
inc
rol
shl
inc
sbb
faddl
rclb
leave
gs
pop
clc
shr
add
push
or
and
mov
jb
daa
inc
fs
add
add
ja
repnz
cmc
aaa
aas
ljmp
movsl
cld
fiadds
add
leave
sti
cs
je
ja
add
outsl
sbb
stos
jp
xor
das
add
cmp
sbb
adc
sbb
scas
xchg
cltd
or
cmc
aad
lods
adc
mov
aaa
xchg
push
daa
and
cmc
enter
shl
pop
sub
adc
nop
dec
aad
push
and
mov
in
pop
mov
pop
fcmovnb
pusha
out
test
nop
jle
rcrb
out
outsb
jg
clc
in
notb
dec
mov
jge
pusha
hlt
mov
inc
data16
out
xchg
mov
ljmp
mov
ljmp
aaa
in
xchg
out
sub
mov
imul
repnz
mov
push
frstor
fwait
daa
in
xchg
out
sti
addr16
cmp
sti
out
adc
gs
daa
cmpsl
cmp
test
sbb
mulb
stc
mov
out
rol
sub
addb
sahf
pop
fldenv
adc
push
xlat
push
and
xor
pop
jmp
mov
xchg
push
fs
mov
inc
cltd
fnstenv
cmp
stos
ret
test
cmc
pop
sbbb
pop
pop
xchg
pop
jmp
mov
add
mov
dec
adc
cmp
imul
mov
aas
in
fiadds
cmp
mov
popa
shl
or
aam
mov
jg
aad
cmc
incb
xchg
rorl
jg
imul
xchg
inc
cltd
pop
push
jae
mov
pop
push
push
ljmp
cmp
sub
pop
lea
out
mov
or
cltd
push
jmp
das
mov
jae
cmc
sbb
scas
ficomps
sub
addr16
xchg
pop
xchg
test
push
add
adc
xchg
jae
call
cs
and
mov
mov
sbb
incb
stos
cli
inc
loope
into
fs
jge
outsl
sub
add
add
mov
imul
add
pop
add
cmpsl
ja
lret
icebp
pop
insb
mov
std
or
adc
mov
cli
dec
lret
lahf
cmp
out
and
or
mov
loope
adc
lcall
aas
std
scas
scas
jl
and
inc
lahf
pop
jg
dec
jge
xor
pop
mov
add
sub
cmp
adc
lret
and
jns
aad
cmp
arpl
cmp
xchg
loop
movb
push
negb
pop
out
inc
pop
test
loop
mov
pop
push
xorl
cmp
jmp
fwait
in
sbb
xor
addr16
and
xchg
xchg
ret
mov
out
les
sbb
mov
ficoml
std
stc
xchg
jb
mov
adc
push
pop
mov
ret
xor
mov
adc
xchg
je
incb
js
add
in
push
xlat
and
stc
test
pop
cmp
xchg
fistl
sub
incb
stos
ficomps
push
ja
into
inc
jns
mov
dec
xor
or
cmp
out
mov
adc
imul
cmpsl
sub
dec
mov
insl
and
jae
add
adc
pop
mov
gs
jmp
jecxz
fwait
mov
jb
adc
xchg
add
sahf
gs
mov
jg
shll
sub
outsb
mov
faddl
dec
xchg
loopne
repnz
and
mov
jg,pt
movsl
fprem1
push
stc
out
xlat
ja
and
adc
inc
nop
jecxz
pushl
testl
jnp
cmc
sti
into
ss
pop
outsl
sbb
mov
mov
call
pop
sub
fisttpll
test
cmpsl
pop
and
pop
push
out
dec
jnp
push
sbb
add
fdivrl
cli
cmc
cmpsl
jge
or
cmp
push
enter
pop
fcmovu
sti
popa
pop
stc
stos
lds
aaa
pop
jl
fbld
add
aaa
sbb
fidivl
mov
and
mov
aaa
mov
mov
in
xchg
addr16
out
addl
push
lret
push
dec
je
sbb
adc
jge
ret
fldl
lahf
sarl
mov
pop
and
addl
mov
inc
jnp
hlt
test
repnz
outsl
jbe
mov
mov
inc
data16
movsl
cmpsb
cmpsb
arpl
scas
jmp
inc
or
test
test
mov
out
imul
xchg
push
into
addr16
out
sarb
test
jg
loopne
into
sub
insb
sub
dec
inc
rcrb
inc
inc
cmp
push
mov
sub
and
dec
in
xor
mov
loopne
inc
ficomps
lcall
sbb
mov
and
pop
cmp
xchg
shlb
sub
mov
jns
jne
mov
aam
jg
mov
pop
lods
inc
ljmp
jp
lods
push
xchg
sub
in
addb
xchg
les
cmp
hlt
inc
lret
and
push
add
sahf
data16
mov
sub
or
adc
cwtl
call
in
dec
xchg
js
arpl
les
stos
pop
jecxz
mov
in
stos
mov
pop
mul
jecxz
lds
in
data16
pop
addl
jecxz
mov
cmc
insl
dec
add
lahf
pop
pop
ss
mov
lea
test
fisubs
std
pop
push
aam
adc
cmpsl
push
mov
stos
mov
rcl
mov
in
or
ja
test
data16
fsubrl
xchg
jmp
add
aad
jnp
subl
dec
jne
dec
mov
es
clc
fldl
cmpsb
push
xor
into
jg
pop
orb
dec
iret
push
jbe
mov
lods
bound
repz
add
cmp
dec
cmp
jno
ja
out
jns
mov
mov
dec
sbb
in
lock
testl
jnp
lods
outsl
cmp
mov
stc
add
cmc
mov
icebp
inc
adc
mov
cmp
mov
icebp
sub
std
mov
dec
pop
out
xor
fldt
pop
and
inc
or
mov
dec
push
mov
mov
xchg
lds
dec
mov
push
xchg
jae
sbb
jbe
sbbb
unpcklps
pop
add
sti
cltd
es
nop
xchg
pop
stc
mov
jo
into
pop
inc
in
mov
mov
adc
ds
std
out
sub
jnp
xchg
and
push
dec
stos
xchg
adc
stc
pop
sbb
test
stos
adc
test
pop
or
mov
das
jnp
lods
sub
popf
jne
out
stos
push
rcrb
testb
gs
cli
das
jbe
xor
sub
jle
mull
jo
and
pop
out
in
jg
lds
test
mov
je
ds
out
in
xlat
jl
dec
add
dec
inc
fwait
mov
push
push
mov
jecxz
cmp
sbb
add
std
mov
gs
jae
dec
add
ja
xchg
push
cld
sub
in
sbbb
test
rcll
lods
notl
arpl
ljmp
xchg
push
out
std
fidivrs
mov
mov
test
iret
hlt
shl
out
shr
adc
push
push
scas
push
xlat
jne
sub
les
sub
aaa
sub
in
cmp
xor
xchg
jge
fstps
inc
jb
int
idivl
adc
inc
dec
adc
mov
cmc
insb
aaa
shlb
dec
testb
andb
inc
out
push
aaa
mov
xchg
cmc
inc
dec
cld
cmpsl
decb
pop
stc
aad
clc
daa
fstps
push
mov
push
mov
mov
rclb
out
int
in
bound
jle
jns
pop
push
orb
cmp
sbb
push
adc
xor
std
fs
xchg
adc
movsl
push
rorb
mov
lea
or
or
add
dec
ret
daa
mov
dec
in
sub
movsl
pop
in
popa
ficoml
adcb
pop
imul
mov
roll
in
mov
addr16
out
les
xchg
and
test
mov
xor
test
jmp
pop
push
jecxz
cmp
or
test
mov
das
mov
cs
fldl
jb
subb
std
ret
cli
sti
xor
lock
out
rol
les
inc
fdivs
cmpsb
cli
movl
jnp
xor
in
mov
dec
andb
or
add
mov
gs
sub
push
shlb
pop
movsb
dec
test
cmc
popa
fildll
pop
in
add
ret
shl
cwtl
loope
fs
adc
in
or
or
add
icebp
sub
das
dec
out
mov
push
imul
push
xor
nop
fs
ds
pop
cld
out
test
mov
mov
jns
jnp
xlat
push
push
addr16
in
sti
fiadds
out
gs
xlat
mov
jno
cmpsl
addr16
addr16
dec
mov
stos
push
test
out
int
or
lods
jns
push
aaa
movsl
xchg
mov
adc
pushf
pop
xchg
pop
xchg
cmc
jns,pn
pusha
es
push
pop
movl
cmp
xchg
iret
or
and
sub
xor
pop
les
mov
loopne
sbb
add
mov
and
jne
stc
jmp
filds
pop
outsl
sub
sub
mov
enter
mov
lcall
xchg
ja
movsb
xchg
fs
jge
outsl
and
xor
add
mov
cwtl
sarb
mov
adc
sub
les
and
repz
xor
sbb
stos
inc
std
or
cs
subl
fwait
inc
jp
push
faddl
test
mov
loopne
psraw
sbb
lock
rclb
pusha
sub
sub
inc
jno
mov
nop
jbe
dec
xor
mov
inc
jecxz
or
cltd
xchg
push
cmpsl
mov
and
je
push
loop
jmp
mov
jecxz
add
stos
cmp
push
outsl
mov
jbe
or
dec
xchg
out
ja
dec
scas
ret
push
push
push
push
pop
and
mov
cmc
fisttps
pop
push
in
dec
leave
test
cmp
test
faddl
mov
outsb
add
out
scas
push
adc
mov
aas
mov
sbb
jl
scas
and
xchg
inc
sbb
hlt
dec
or
out
mov
bound
cmp
or
out
out
sbb
cmp
sbb
sub
loop
testb
shr
notl
mov
xchg
push
popa
mov
xlat
test
das
aas
xchg
pop
rorb
inc
dec
sub
jl
and
in
adc
mov
pop
sub
ret
rclb
in
pop
fwait
mov
imul
add
lods
idivl
or
or
mov
pop
xor
xor
cmp
adc
or
sbb
xchg
clc
mov
dec
jg
fistpll
and
pop
test
mov
or
jp
fwait
add
sbbb
iret
iret
test
xor
popa
call
mov
in
fidivs
cld
pop
rorl
scas
mov
xor
fimull
mov
fwait
ljmp
sbb
mov
lret
data16
xor
outsb
hlt
cs
test
test
or
jecxz
scas
dec
stc
jne
and
stos
sbb
dec
imul
adc
out
test
lds
scas
leave
ss
into
test
imul
clc
test
jo
neg
sub
pop
jae
jle
inc
icebp
outsb
or
xor
ficomps
fisubrl
jno
adc
addr16
lods
and
fld
jge
mov
ds
push
jecxz
negl
inc
lds
test
sub
fisubs
cli
mov
mov
jge
movsl
fwait
daa
dec
jecxz
sbb
push
pop
xor
mov
push
lahf
out
out
aaa
rolb
xor
mov
sahf
dec
nop
cmpl
push
xchg
shll
push
push
mov
stos
arpl
loopne
mov
cmpsb
jmp
decl
pop
add
insl
fcompl
in
imul
lods
out
jle
test
rclb
dec
push
pop
jnp
out
and
clc
jo
frstor
lods
cwtl
mov
inc
sbb
out
iret
push
fcoml
jns
dec
jmp
jno
ljmp
andb
das
mov
je
xlat
imul
inc
sahf
dec
sub
sahf
sub
lcall
xchg
imul
dec
inc
xchg
pop
cmc
sub
inc
pop
loope
scas
call
testb
movsl
addr16
ds
arpl
leave
xor
pop
or
and
xchg
xchg
hlt
int3
pop
push
data16
xor
test
jge
sub
sbb
scas
push
outsb
mov
push
ds
adc
fidivrs
adc
shrb
hlt
xchg
pop
pop
js
jb
fisttps
ss
pusha
aas
movl
jg
jmp
cwtl
push
pop
shll
fdivrs
daa
mov
dec
push
pop
fists
int3
and
rcrl
mov
jmp
mov
sbb
adc
in
repz
jmp
in
pop
sbb
lcall
inc
mov
adc
adcl
and
es
xlat
xchg
dec
and
lods
mull
jne
dec
sub
sbb
xchg
mov
jmp
bts
sub
outsl
je
dec
cmp
jnp
popa
mov
bound
das
jnp
sbb
pop
sub
ficomps
mov
pop
jns
lcall
cmc
frstor
push
sub
fldl
mov
cmc
fldt
and
call
push
dec
xor
std
dec
inc
fs
andb
and
mov
out
mov
jmp
inc
inc
sarb
jge
xchg
inc
push
or
adc
xchg
lods
mov
inc
repnz
lds
hlt
sbb
imull
push
xchg
or
repnz
add
sti
xchg
stc
rcrl
data16
jno
mov
subl
test
jecxz
ret
mov
mov
mov
mov
jecxz
lds
in
push
push
xchg
mov
cmpsb
mov
jbe
cmp
ret
adc
pop
mov
out
push
mov
sub
lret
add
mov
mov
push
push
cs
inc
dec
push
mov
insl
push
mov
stos
or
test
shlb
push
cli
pushf
xor
into
outsb
aam
in
sbb
pop
sub
cmpsb
jbe
pop
adc
mov
imul
or
lret
mov
movsl
fstpl
test
repz
push
cmc
add
stos
pop
std
push
add
negb
pop
jle
out
in
imul
lret
inc
mov
out
mov
pop
add
mov
lds
sbb
mov
lds
jb
jg
je
sbb
sbb
les
jg
mov
sbb
xchg
and
mov
inc
push
and
lret
loope
int3
jl
jg
cmp
repnz
loope
mov
in
cmc
into
movsb
jae
xorb
jne
insb
dec
daa
daa
int
mov
out
jne
lods
push
in
aad
cmp
lret
push
scas
out
cmc
cwtl
pop
adc
rcl
xchg
repz
inc
mov
lods
xor
mov
xchg
xor
adc
mov
sbb
and
jecxz
rcrb
scas
inc
int3
pusha
sbb
insl
movsl
lret
jb
inc
testl
addl
inc
push
mov
mov
lds
ret
mov
punpckldq
mov
sbb
jnp
divb
fdivp
pop
aad
jg
fs
ret
aas
loope
xchg
lret
adc
test
fstpt
ja
or
imulb
fidivrl
or
and
subb
idiv
jbe
cmp
hlt
mov
inc
out
movsb
fwait
xchg
cld
and
shr
xor
out
mov
mov
pushl
jl
mov
sbb
popa
dec
scas
sbb
cltd
stos
jnp
loope
jge
xlat
mov
fdivs
jbe,pt
testb
fildl
sub
adcb
jecxz
xchg
inc
mov
std
stos
mov
mov
pop
push
jno
sahf
inc
push
adc
push
cltd
lock
xlat
jl
or
and
loop
mov
mov
cmpsl
mov
pop
das
inc
icebp
fsubrl
iret
push
mov
and
pop
rorl
mov
rcll
xchg
popf
imulb
lods
push
adc
stos
lods
pop
fidivrs
jbe
push
lods
out
xchg
out
jmp
add
icebp
stc
inc
mov
ss
in
test
sub
add
out
stc
rorb
and
lods
movsb
and
adc
stos
fmull
jmp
xchg
cmp
dec
outsb
adc
mov
and
scas
aaa
jge
int3
lds
sub
cmc
test
pop
outsl
in
stos
cmp
add
gs
aad
add
xchg
aad
div
pop
mov
outsl
scas
add
fisubl
mov
cmpsb
data16
xlat
data16
inc
shlb
in
les
shrb
xchg
orl
adc
xlat
inc
push
and
xchg
xlat
ret
shl
mov
sbb
or
inc
or
test
shlb
clc
jno
push
sti
lods
or
test
mov
addl
mov
rep
mov
fwait
int
mov
stos
out
std
mov
sbb
cmc
rolb
adc
jmp
fwait
dec
jne
inc
mov
out
test
pop
outsl
std
cmpsb
jg
xchg
push
data16
inc
in
test
in
and
cmc
jns
movsb
ret
shl
test
sub
inc
movl
cmpsb
mov
mov
mov
outsb
nop
je
daa
fwait
lret
lock
in
jmp
inc
mov
imul
pop
ret
ds
fwait
dec
ret
loop
cli
xchg
inc
fistpll
jne
addr16
jecxz
idivl
adc
addr16
cld
enter
dec
dec
test
popf
or
inc
inc
pop
adc
test
cmp
pop
sbb
mov
xchg
mov
mov
xchg
rcrl
mov
out
jp
mov
cmpl
jmp
mov
pop
int3
lahf
addr16
pop
addl
lret
in
xchg
jle
les
movsb
clc
or
xchg
ret
test
dec
xchg
in
mov
cmp
shl
in
cmpsl
jb
pop
ret
add
fs
mov
in
je
or
jle
jge
pop
imull
jp
and
mov
pop
mov
push
mov
xor
out
addr16
leave
fs
lret
sub
lods
pop
xchg
mov
push
adc
rolb
std
out
cmpsb
lahf
out
test
jne
nop
test
add
rcrl
lcall
dec
ficoms
add
push
icebp
fdivrp
gs
or
out
mov
cs
and
imul
sub
lret
sub
add
lock
icebp
xor
rcll
pop
sub
std
and
add
fs
movsl
xor
sbb
cmp
mov
mov
jne
test
stos
jge
jbe
adc
jmp
scas
cs
testl
shrb
cmpsb
add
mov
lret
add
cwtl
sub
add
push
add
jge
imul
xchg
stos
xchg
decl
loop
shll
dec
ret
sub
adc
lods
xchg
mov
scas
fbld
adc
xor
add
cmpsl
hlt
cmp
pop
loope
addb
and
sub
sbb
insl
jmp
pop
aaa
or
push
arpl
insl
xchg
ret
inc
imul
jns
mov
les
push
aad
loope
lds
mov
ja
xor
add
inc
out
mov
lahf
dec
sarb
cs
push
ret
adc
inc
loopw
dec
scas
sub
outsb
pusha
mov
shlb
jo
cmpb
and
sbb
pop
pop
fists
inc
aam
dec
and
cmc
push
pop
add
pop
push
sbb
jle
les
lods
popl
in
in
addb
and
add
loopne
mov
bound
scas
pop
cmp
inc
mov
aas
mov
test
movb
push
aas
sub
sub
or
bound
push
and
pop
dec
mov
jge
dec
addl
outsl
icebp
pop
fimull
mov
adc
cmc
adc
xchg
xchg
in
movsl
pushf
cli
xor
and
testb
test
aam
sub
fs
cmp
cs
xor
push
movsb
inc
pop
lret
es
in
pop
add
movsb
cs
inc
sti
dec
sbb
mov
push
les
cltd
pop
jne
xchg
aas
test
sub
mov
and
add
test
jecxz
push
out
mov
cmpsl
add
xchg
mov
xor
les
repnz
sbb
out
gs
std
mov
lds
xlat
aas
shlb
mov
push
jnp
fistpl
test
into
ss
pop
loop
sti
push
jne
ja
scas
fsts
lret
xlat
jns
aaa
jne
inc
jae
add
sub
jg
mov
fwait
out
dec
js
sar
jbe
push
and
aaa
jg
jg
jae
push
aad
sti
adc
cmpsl
push
jnp
pop
xchg
fsubrp
push
adc
decl
fdivrs
in
lds
ret
add
js
aas
mov
test
mov
inc
pop
xorl
lds
and
test
std
repnz
dec
movsl
pop
jl
push
jge
outsl
into
mov
imul
push
test
push
ret
or
sbb
mov
sbb
inc
pusha
popf
loopne
inc
sbb
mov
ds
scas
popf
xor
scas
mov
jno
lret
xchg
add
inc
scas
jns
add
outsb
test
sti
pop
lret
test
xor
and
jo
mov
mov
adc
xorb
cs
xchg
aas
mov
pop
jmp
outsl
push
daa
mov
ss
push
xchg
push
aad
loop
into
mov
xorl
dec
ret
pop
lds
orl
jb
dec
iret
or
ret
lret
sbb
test
jns
cld
pop
icebp
inc
icebp
push
loop
imul
sbb
fdivrs
or
addb
in
cmpb
xchg
sbb
mov
ja
sub
mov
adc
in
jg
decl
in
loopne
cmp
fistl
in
testl
mov
sbb
or
push
daa
lods
and
cmc
cld
jbe
ss
stos
mov
movsl
fists
pop
insl
repz
dec
sbb
and
cmc
mov
sub
sbb
subb
sub
fdivp
sbb
dec
sub
or
dec
or
cmpb
fistpll
cmpsb
push
mov
mov
inc
mov
sbb
scas
lahf
fisttpll
push
mov
lock
aaa
push
jecxz
psubsb
push
inc
mov
in
pop
jmp
xchg
or
dec
movsl
mov
mov
add
adc
push
sbb
and
sti
dec
jge
stc
mov
out
push
pop
and
sti
cmc
pop
sbb
mov
push
fnstenv
addr16
add
cltd
or
pop
lds
dec
ret
push
xchg
cltd
fwait
xchg
mov
call
pop
imul
insb
dec
xchg
pop
test
pushf
jbe
add
fists
jo
addr16
mov
hlt
fiadds
dec
mov
rorb
sarb
sub
divb
negb
fdiv
loopne
jecxz
ljmp
sarb
sub
jnp
xor
scas
adc
inc
inc
dec
arpl
sahf
inc
stos
jno
roll
cmp
out
jmp
adc
and
xor
or
jmp
sbb
mov
inc
cmpsb
add
xchg
shlb
dec
addb
inc
into
add
mov
lods
mov
xor
aam
into
xchg
sub
mov
ret
mov
xchg
ret
sbb
xchg
jo
mov
mov
scas
cmpsb
fidivl
push
mov
fs
pop
out
pop
sbb
cmp
and
jae
jg
cmp
pop
jbe
test
cmc
xor
arpl
xor
push
mov
mov
notb
gs
daa
adc
pushf
xchg
ss
popa
shlb
sub
mov
xchg
inc
lods
jnp
jbe
fiadds
jnp
push
mov
xchg
in
push
out
inc
rclb
scas
lds
xor
ljmp
mov
xchg
int3
cmpl
movsl
xor
pop
cli
sub
mov
stos
mov
lds
pusha
and
imul
mov
mov
sahf
outsb
cwtl
mov
or
std
mov
flds
ffree
lret
xchg
cmpsb
add
or
sbb
std
loop
adc
pop
add
inc
inc
rcll
ficoml
loopne
xchg
mov
lret
or
addr16
mov
lea
cwtl
dec
insl
retw
shll
add
aaa
push
xor
inc
pop
aas
jmp
lds
adc
pop
pop
mov
in
int3
mov
divl
neg
leave
out
lds
pushf
imulb
imul
iret
mov
or
arpl
xor
sar
mov
mov
es
sub
jae
fnstcw
jmp
xchg
mov
dec
aam
push
aad
adc
in
push
mov
fstl
or
daa
sahf
aad
or
int3
ljmp
and
cmc
pop
sub
gs
mov
adc
fdivs
lods
jge
xchg
pop
test
cmp
pop
loopne
add
xchg
dec
in
sti
mov
mov
les
dec
popa
push
xchg
sahf
push
jns
ret
ret
cmpsb
in
adc
outsb
dec
or
das
js
testl
mov
jg
cli
rol
mov
jecxz
ret
idivb
jg
adcl
in
push
in
sbb
cld
push
lods
mov
roll
imul
xchg
ret
loope
in
shl
es
mov
and
call
mov
push
out
lds
shl
inc
add
negb
test
jnp
imulb
in
fnstcw
out
out
lds
xchg
inc
mov
test
faddl
or
outsb
add
add
sbb
xchg
imul
repnz
cmp
cltd
mov
fisttpll
in
aad
adc
pop
mov
outsb
gs
nop
or
ret
ffree
cli
scas
or
rcrb
test
dec
and
mov
into
data16
add
cli
das
mov
rcr
lcall
ja
es
cmp
pusha
repnz
sbb
or
pop
add
sbb
mov
idivb
push
xchg
mov
aas
orl
sbb
mov
dec
sbb
rclb
lahf
sbb
add
leave
mov
mov
jb
pop
jae
fs
lock
shrl
and
fucom
mov
inc
cmc
inc
fs
sbb
lret
aad
pop
push
xchg
push
lock
std
in
divb
aas
ja
test
in
mov
dec
pop
xlat
sbb
ffreep
nop
add
cmp
cmp
cltd
push
or
test
mov
stos
push
add
or
mov
rcll
xchg
roll
lahf
test
negl
push
addr16
outsl
out
incl
int
mov
rolb
cmc
add
stc
xchg
pop
arpl
insl
xchg
ja
ret
adc
fistps
mov
mov
jg
ss
pop
int
lods
ss
out
imul
cmp
push
push
out
add
daa
cmpsl
sub
jmp
push
pop
hlt
nop
mov
mov
mov
mov
mov
jge
jne
inc
mov
sub
push
mov
jg
iret
shrb
mov
jb
inc
add
inc
loope
mov
or
push
and
out
shlb
jg
pop
jecxz
leave
fdivrl
lret
nop
pop
fisubrl
mov
xchg
push
aad
sub
add
adc
mov
add
mov
jne
shll
int
jle
jecxz
adc
cmp
push
add
rcrb
orl
inc
or
add
pop
jb
out
shl
mov
outsb
add
ds
push
mov
out
jne
int3
adc
in
repz
in
movsl
daa
xor
jge
lahf
pop
push
pop
mov
scas
lds
adc
and
test
arpl
daa
iret
cwtl
icebp
scas
dec
push
fdivl
cs
sarl
leave
shll
loopne
xor
inc
adc
roll
and
aas
inc
cmpsl
add
pushl
mov
xlat
in
loop
rolb
and
addl
fcmovne
xlat
add
rorb
or
or
mov
rorb
pop
cmp
dec
cmp
sbb
test
mov
out
mov
dec
mov
pusha
mov
and
dec
add
out
arpl
or
aam
loop
cmp
jge
jb
pop
ret
cld
fwait
mov
or
sub
mov
fs
adc
xchg
pop
sbb
into
mov
pop
mov
mov
decb
mov
xlat
jle
out
mov
out
int
xchg
xchg
cli
pop
iret
daa
mov
xlat
jl
xchg
cmpsl
ret
pop
mov
xchg
mov
jge
mov
inc
mov
repz
es
orb
mov
fldcw
fiaddl
inc
add
jmp
push
lcall
popf
cmpsl
test
faddp
shl
sbb
lods
stos
into
clc
jno
or
cmpb
xchg
dec
cmp
pop
xor
popa
xchg
pushf
jp
cmp
pop
adc
inc
jmp
xor
inc
sarb
add
push
mov
pop
pop
jb
mov
pop
push
leave
pop
addr16
cmp
scas
pop
xlat
in
test
cli
push
sbb
mov
add
test
cmp
mov
cmp
pop
sbb
cmp
arpl
sarl
or
mov
xchg
je
mov
mov
lock
stos
or
pop
jg
mov
sar
push
cmp
inc
jbe
jno
rolb
incb
push
or
imull
cmp
cmpsb
push
sarl
fcoml
pusha
mov
mov
add
das
push
sbbl
inc
sub
call
jne
inc
test
pop
push
jae
lds
jp
fs
mov
mov
jnp
pop
xlat
rcrb
outsb
pop
inc
popa
xchg
incb
mov
lods
pop
xlat
and
into
mov
xor
cltd
and
outsl
outsl
into
xor
popa
pop
mov
xchg
jmp
mov
push
data16
sub
xchg
xor
in
scas
cmp
test
aam
mov
inc
std
sarl
jnp
cwtl
dec
or
and
and
inc
jb
iret
adc
aam
xchg
push
sbb
push
fs
shll
in
out
pop
push
push
outsl
inc
dec
out
push
sub
ret
pop
inc
sbb
jmp
jno
movsb
push
test
std
repnz
std
mov
lds
negl
mov
xor
xchg
out
decb
adc
xchg
shlb
pop
xchg
fisttpll
mov
jnp
sub
push
mov
daa
add
cld
cmp
jns
or
push
mov
fnstsw
dec
loopne
shlb
das
ljmp
incl
jne
ss
stos
flds
mov
leave
pop
mov
cmp
rolb
scas
je
test
hlt
nop
jecxz
andb
push
dec
and
and
repz
out
rorl
test
fists
sbb
or
mov
out
mov
pop
inc
mov
rcrb
shr
test
pop
fs
in
mov
sbb
push
jl
or
test
outsl
cmpsl
mov
push
inc
jg
mov
jae
movsb
ja
jl
lret
dec
push
aas
clc
shrb
movsl
sti
shll
mov
pop
cmp
lods
fsubrl
outsb
inc
xchg
dec
cmp
mov
rclb
push
add
lods
xor
test
ja
stc
jae
test
fs
mov
sub
jg
cmp
aas
or
add
imul
jg
mov
lods
pop
js
imul
dec
sahf
leave
mov
xchg
in
cwtl
daa
push
in
fdivl
jnp
lea
or
gs
adc
xchg
xor
pop
push
or
test
adc
inc
dec
sbb
jecxz
jle
jnp
test
vmovhpd
jp
mov
pop
push
jno
inc
stos
sbb
cmp
mov
xchg
or
mov
or
in
pop
mov
push
ficomps
dec
adc
pop
outsb
push
test
bound
adc
xchg
lds
aas
lods
in
add
test
xchg
sbb
cmc
add
adc
push
ret
mov
mulb
xor
jo
dec
call
and
cmp
rol
pop
xor
es
out
in
sub
sbb
call
xchg
or
push
rol
jne
jmp
daa
stos
xor
sub
xchg
inc
jbe
sbbl
xchg
arpl
mov
sbb
fldt
xchg
mov
cmp
push
lods
shll
mov
out
xor
xchg
hlt
ja
pop
cld
imul
pop
pop
add
push
mov
xchg
in
adc
and
jae
mov
jnp
es
push
push
rcll
pop
cltd
sti
jge
pushf
cld
xchg
push
mov
fisttpll
or
leave
mov
hlt
mov
dec
in
out
mov
cmp
das
mov
push
fwait
xchg
mov
ljmp
push
sahf
sbb
jo
mov
addl
mov
pop
scas
mov
into
loope
jne
add
fimull
mov
xor
outsl
inc
pop
cmpsl
jg
xchg
pop
inc
pop
pop
mov
or
sub
jecxz
daa
out
xor
repz
lret
inc
mov
in
add
mov
xchg
mov
mov
jl
xor
push
stc
into
scas
fnstenv
mov
mov
lds
orl
xchg
adc
movsb
or
movsl
pop
adc
in
sub
js
lahf
movsl
sbb
mov
data16
xchg
cwtl
inc
mov
leave
xchg
fs
push
addr16
daa
adc
push
test
loop
or
adc
in
loopne
add
das
andl
imul
hlt
test
mov
mov
std
loop
jne
bound
imul
mov
sti
lods
cmp
jle
adc
xor
sbb
xor
gs
lds
mov
push
and
mov
icebp
jmp
neg
mov
xor
or
add
pop
mov
xchg
xlat
sarb
pusha
dec
adc
aas
out
rolb
loopne
fisubs
mov
dec
lods
cmpl
and
push
cmc
or
or
dec
aam
adc
clc
cli
cmp
cmp
push
jmp
repz
daa
insl
outsb
sub
mov
mov
dec
inc
lock
inc
call
mov
popa
out
lods
and
sbb
ret
pushf
pop
jnp
adcl
std
mov
or
sahf
out
push
jns
fimuls
stos
pop
pop
leave
les
dec
sub
es
jecxz
jo
call
sbb
sbb
or
push
sub
sub
stos
std
lods
mov
int
mov
loope
push
pop
sar
sbb
fldcw
dec
adc
cld
sub
sub
fsubr
leave
loope
repz
movl
bound
sarb
mov
popa
nop
sahf
out
pop
sbb
mov
ret
faddl
aad
inc
jmp
xor
js
adc
out
push
fildl
add
dec
rcrl
mov
add
cmp
push
mov
scas
orb
jmp
movl
adcl
mov
dec
or
pop
testl
jg
push
fs
out
out
sbb
jne
mov
popl
ret
or
lea
mov
out
push
les
stos
pop
inc
lods
shlb
in
dec
ror
xor
pop
sub
xor
xchg
out
in
push
xchg
test
nop
mov
jne
xor
sbb
into
xchg
pop
pop
cmp
fs
lcall
adc
adc
es
cld
cltd
in
test
mov
sbb
mov
or
fisubl
add
rcl
jle
pop
fsubs
loopne
mov
sub
mov
cmpb
mov
nop
or
fldt
int3
or
jge
dec
daa
or
in
pop
sbb
psubb
add
xchg
jo
and
jge
jnp
and
test
lcall
cmc
mov
or
xor
xor
cmp
jecxz
jp
sub
or
mov
mov
ror
mov
les
fs
add
fsubrl
xchg
into
cmp
movsl
and
aad
cmp
xchg
jl
sub
pop
stos
inc
push
aaa
xor
mov
sbb
gs
pop
sahf
jns
arpl
jno
cmp
fs
dec
scas
orl
not
cmp
loope
lods
ret
insl
rcrb
fsubr
out
xchg
hlt
bound
lock
out
add
clc
inc
aad
out
mov
and
jge
es
push
addr16
lock
push
test
xlat
pop
movsl
ss
loope
fldlg2
sbb
xchg
out
lock
dec
push
jg
pop
and
cs
mov
sub
and
out
dec
sti
jns
ds
fsts
cld
cmp
lcall
lods
mov
fmull
mov
cltd
popa
mov
add
dec
test
cs
mov
xor
push
fdivl
out
jns
pop
popa
sub
inc
xchg
xor
mov
mov
xchg
lods
inc
inc
push
pop
mov
jae
xchg
adc
pusha
pop
idiv
xor
xlat
mov
jmp
dec
mov
mov
jmp
sbb
imul
jge
lea
insl
fs
orb
sub
dec
shlb
fistpl
ficomps
pop
jns
mov
mov
call
dec
mov
pop
or
outsl
or
je
dec
mov
pusha
push
stos
ds
jg
sbb
jg
ljmp
cs
mov
into
push
mov
fisttpll
cmp
inc
inc
ja
xchg
sub
mov
mov
int
jne
test
imul
lret
or
testb
jmp
loope
sub
mov
popa
aaa
imul
mov
jg
out
mov
dec
movsb
push
lret
mov
sub
ljmp
sub
and
xor
out
fdivr
arpl
jecxz
dec
es
mov
xor
push
in
jge
rclb
add
mov
cmp
repnz
popa
hlt
jecxz
addr16
pop
test
sahf
push
fs
test
jbe
or
lret
sbb
imul
aas
in
cmp
push
jo
adc
jl
mov
mov
out
das
sarb
fidivrs
add
inc
jne
pop
or
pop
int3
div
jl
dec
push
aas
xchg
lock
xchg
jmp
pop
push
xlat
sbb
adc
fistl
inc
shlb
test
mov
push
sbb
dec
jge
mov
stc
aam
push
loop
cli
pop
js
push
test
or
rolb
jg
jecxz
pop
inc
popa
roll
scas
fdivrp
adc
aam
xchg
cmp
scas
fnsave
mov
pop
das
mov
fildll
ret
addr16
jmp
pop
cmp
xor
testb
add
ret
repz
push
leave
out
jl
jae
mov
jbe
aam
jnp
bound
dec
rclb
jmp
ret
mov
ror
and
and
sub
inc
orl
ds
adc
lock
sti
lock
mov
bound
in
add
push
cmp
jle
xchg
jb
aaa
push
and
mov
ja
cmc
aam
sar
pop
add
lods
in
xchg
scas
mov
das
lds
xchg
mov
js
sahf
movsb
adc
frstor
sar
mov
jb
or
sub
inc
dec
jbe
pop
rcrl
dec
inc
call
mov
and
imul
sub
mov
add
leave
mov
subb
or
xchg
jmp
xor
or
add
nop
insl
shlb
lea
push
jecxz
jmp
xchg
aad
ja
test
and
mov
cli
xchg
pop
cmpsb
push
aad
cld
sarl
cmp
mov
dec
add
cmpsb
adc
scas
sbb
in
sar
hlt
inc
insl
xchg
adc
cmp
jae
fnsave
ds
scas
sar
push
cmpb
adc
out
fnstenv
add
movsb
lods
sbb
mov
jo
or
mov
add
add
sbb
fdivl
pop
std
rcl
out
test
fldl
xchg
mov
aas
test
dec
out
adc
fstl
jb
dec
jne
jp
adc
add
daa
xchg
push
insl
sub
jbe
out
mov
insl
mov
mulb
cmp
test
gs
xor
movsl
dec
add
and
fst
add
flds
pop
pop
popa
jle
imul
shlb
scas
enter
jne
mov
leave
pop
cmp
mov
push
icebp
dec
cmpl
push
rcr
ret
mov
fwait
push
mov
movsl
push
xor
xchg
mov
stos
inc
push
out
sub
cmpsl
push
imul
insl
sbb
jne
popa
and
jo
xor
sbb
add
insl
test
lcall
and
and
mov
or
mov
pop
clc
pop
sbb
xchg
and
push
lds
addr16
lea
repnz
rclb
cs
inc
test
stos
lods
sub
cmpsl
fisttps
lret
push
add
fs
pop
rorb
movsb
xchg
out
insl
hlt
xor
sbb
bound
lds
xchg
outsb
into
mov
cmpsb
xchg
xchg
imul
fcomip
xorl
stos
out
mov
stos
shrb
mov
add
mov
mov
cs
movsl
scas
or
neg
mov
pop
sbb
cmpsl
inc
cmpsl
mov
jmp
jnp
ret
jnp
dec
mov
jne
mov
cmp
sahf
xchg
cmp
aas
inc
test
fcmovbe
lcall
mov
push
dec
in
jge
jl
cwtl
pop
push
add
inc
cmp
subl
inc
loopne
cmp
pop
lods
jb
sub
iret
mov
mov
jge
cmpsl
pop
movsl
jmp
or
push
pushf
fidivrs
push
movlps
rol
bound
sub
mov
cmpsl
xor
int
sub
mov
mov
out
fs
repz
rolb
popf
stos
mov
orl
dec
daa
nop
cld
jb
lret
fisttpll
add
mov
dec
fs
mov
movsl
push
add
jge
andl
cmc
jge
cmp
mov
jmp
xlat
jge
in
movsl
and
inc
repz
filds
mov
gs
mov
fs
jbe
xchg
stc
cmpsb
shrb
sbbl
dec
daa
popa
jg
or
test
mov
das
pop
jbe
push
dec
loop
mov
adc
stos
fwait
inc
jecxz
jge
pop
add
jecxz
push
notb
test
push
hlt
cs
adc
frstor
addl
mov
outsb
or
test
aad
mov
dec
outsl
inc
sbb
jae
decl
popf
or
xchg
and
and
mov
into
inc
scas
popa
or
cmpsb
xchg
jae
sub
fsts
ljmp
adc
fadds
add
cmpl
arpl
mov
testb
mov
stos
iret
and
jmp
loope
xor
push
fs
iret
bnd
and
ficoml
pop
lods
pop
rcr
mov
aad
stos
mov
popa
pop
and
lret
mov
inc
inc
mov
popa
jnp
repz
fstpt
inc
pop
dec
sbb
cmc
rolb
add
loop
mov
scas
pop
mov
mov
mov
mov
inc
adc
scas
cmp
mov
add
in
rorb
xor
addb
xchg
or
dec
pop
push
mov
insl
mov
and
inc
jae
pop
dec
out
aaa
jne
call
cwtl
iret
addr16
jge
cmp
mov
lods
sbb
mov
movsl
outsl
in
pusha
jo
pop
adc
push
imul
mov
stc
pop
pop
cmp
cmp
not
ret
mov
stos
adc
stos
faddl
imul
mov
mov
idivl
iret
cmpsl
push
in
daa
testl
scas
xchg
mov
repnz
mov
jae
test
push
cmp
fldt
cmpsl
pop
out
addr16
pop
arpl
mov
push
fisttpll
out
aaa
loope
cmc
sti
or
in
sub
mov
pop
fs
test
lahf
dec
xchg
mov
fcoml
mov
dec
lret
cmp
mov
inc
ja
rolb
cmp
test
push
jno
cmp
hlt
testb
test
out
nop
repz
popf
andl
lods
sbb
and
fmuls
lock
xor
shlb
rcl
jmp
mov
mov
testl
pop
aad
mov
mov
lret
pop
sbb
mov
movsl
pop
mov
jmp
xor
jnp
pop
aad
out
xchg
testl
imul
xor
pop
sbb
in
loopne
dec
mov
dec
add
mov
loope
pop
inc
mov
aad
pop
mov
and
loop
shr
dec
xchg
sbb
int
adcb
ljmp
ret
xchg
js
insb
lods
into
loop
xor
adc
jbe
push
rcll
xor
repz
ficompl
outsl
push
mov
inc
push
jg
cmp
mov
jo
movsb
xor
iret
andps
or
inc
jno
or
enter
stos
fisubs
xor
cltd
aaa
pop
sub
int
mov
sub
ret
nop
dec
pop
pusha
loop
mov
or
addr16
into
add
mov
scas
fs
fbstp
test
test
scas
scas
mov
or
jmp
jge
cmc
js
repz
icebp
movl
jnp
addl
repz
fstpt
push
jl
push
cmp
sub
ds
or
mov
loopne
jmp
mov
add
pop
sbb
jp
test
aad
rcrl
rol
xor
lret
ljmp
jbe
stos
stos
push
scas
addr16
imul
rolb
insl
int
loop
xor
pusha
sub
fisubs
stos
jb
leave
das
inc
jne
pop
in
or
cmp
mov
icebp
fsubp
aad
repnz
inc
mull
icebp
fwait
lods
pop
inc
jmp
xchg
sub
outsl
mov
and
adc
sub
imul
les
xchg
pop
sar
xchg
test
lea
aas
ja
lahf
ret
and
jne
dec
orl
push
xchg
test
pop
out
sarb
push
jle
mov
dec
pcmpeqd
sbb
adc
in
test
pop
aas
xchg
out
adc
fs
jbe
js
inc
mov
scas
shll
in
sti
out
mov
or
inc
std
push
stos
les
lods
and
test
in
js
in
test
xor
mov
ja
lcall
mov
adc
rcr
in
fs
in
loopne
movsb
or
xchg
mov
mov
test
in
ja
xchg
popf
and
test
jp
xor
jno
in
roll
imull
jg
inc
jle
pushf
add
out
shlb
mov
cmp
lea
repz
jnp
dec
mov
add
sbb
shr
movsl
testl
mov
sub
into
jnp
or
scas
push
jns
xchg
xchg
xchg
into
fwait
movb
aad
xchg
addr16
push
or
cmc
mov
lods
popa
iret
ret
pop
cmp
mov
divb
aaa
scas
out
shl
ror
inc
jg
in
xor
insl
inc
inc
out
pop
aad
adc
mov
ficoms
push
ja
scas
jge
in
xchg
push
rcl
int3
push
mov
mov
loope
mov
loope
es
sbb
xor
xor
xorb
or
mov
shll
lods
push
push
push
mov
rcll
mov
xor
cmp
pop
xor
mov
sbb
in
pushf
mov
sbb
adc
lret
and
pop
add
loope
in
pop
pop
ljmp
sub
mul
xor
aam
dec
mov
jg
sbbl
rorb
repnz
hlt
rorl
lock
movsl
jecxz
add
dec
inc
pusha
cmpsl
sbb
jae
adc
mov
arpl
aam
add
les
cmp
xor
pop
fiaddl
test
xchg
movsb
jb
jecxz
pop
sar
sbbb
out
aad
test
mov
ret
mov
rolb
paddw
addl
out
adc
pop
dec
push
pushw
jg
adc
mov
pop
stc
mov
dec
roll
outsl
lds
push
icebp
cld
sbb
sub
cmpsl
decl
mov
and
imul
ja
out
es
sub
push
cmp
inc
xor
fisubl
xor
mov
adc
mov
ret
negl
jnp
ja
mov
jns
stc
xor
stos
mov
mov
pusha
mov
and
ss
cmp
xchg
rorl
mov
adc
loop
shr
cmc
push
outsl
bnd
xlat
mov
gs
test
cmp
fisubl
cld
jns
ss
dec
lds
mov
cmp
add
xchg
ss
push
mov
cmc
in
add
mov
divb
sbb
sbb
push
les
testb
pop
out
pop
mov
cmovp
sbb
and
shr
lock
inc
roll
rcrl
cmp
pop
imulb
adc
pop
in
test
push
scas
scas
out
pop
or
mov
mov
loope
stos
ret
mov
lods
sbb
movsb
dec
mov
mov
dec
enter
add
jl
andb
mov
lcall
jl
xchg
or
aam
test
cmc
insl
mov
lods
lock
in
push
inc
ljmp
adc
cmpsl
cmc
pop
and
clc
jmp
arpl
repz
sti
add
pop
mov
mov
movl
ljmp
addr16
cmpsb
xchg
sahf
push
in
push
ror
jo
or
pop
rcr
inc
add
sahf
out
mov
ret
in
in
push
mov
pop
fiadds
jbe
inc
orb
sahf
sbb
jle
mov
push
insb
xor
rcll
test
test
adc
loope
fnsave
dec
cmp
fcomps
sbb
loope
add
dec
les
pop
mov
push
ret
rolb
insb
arpl
push
pop
cmpsb
rcrb
pop
movsl
sbb
shrd
and
scas
cmpsb
cmp
data16
pusha
in
out
jmp
push
inc
andb
fwait
out
dec
loopne
scas
lods
rorl
cltd
xor
xchg
mov
and
cmp
ss
popf
or
in
ret
mov
lcall
pop
pop
xchg
xor
jne
fmuls
pusha
push
lods
push
popf
adc
sub
je
jo
cs
mov
leave
jo
mov
push
push
or
jl
stos
shlb
cmp
sub
sti
scas
adc
mov
rolb
cmp
es
xor
out
mov
loopne
into
lds
add
and
shll
cmp
in
jno
ljmp
cmp
test
inc
mov
call
stos
sti
mov
jnp
adc
mov
dec
jns
cwtl
dec
or
lret
rolb
out
outsl
out
scas
inc
mov
lea
dec
xor
test
inc
push
js
std
in
scas
call
out
mov
cs
cmc
in
pop
cmp
inc
push
lahf
in
pop
jecxz
in
adc
adc
insl
jns
or
mov
call
mov
pop
addr16
cmp
stc
inc
inc
movb
out
loop
test
sub
inc
in
fistpll
fcomp
or
or
shlb
addb
subl
sbb
nop/reserved
loopne
lea
xlat
vunpcklpd
das
cmp
and
icebp
orb
push
mov
repz
test
dec
out
testl
imul
cmc
push
rorb
jno
outsl
mov
in
cmc
xor
andb
cmp
movsb
sub
pop
jge
test
and
repnz
shll
lret
arpl
pop
cmp
and
push
mov
push
add
inc
jle
stos
and
pop
fsubrl
jae,pt
cmp
sub
add
das
xor
push
mov
movl
out
lods
cld
in
into
jns
loope
jne
jge
mov
xchg
inc
dec
mov
mov
cmpsl
fcmove
jmp
out
push
pop
test
into
mov
xchg
das
ja
add
jnp
xchg
jne
mull
fisubl
xlat
rcrb
hlt
addr16
add
cmpsl
pop
outsb
mov
jmp
mov
fisubs
inc
xchg
into
sti
stc
cld
sub
xor
add
daa
ljmp
jecxz
xchg
pop
rclb
movl
sub
pop
and
xchg
xor
lahf
lea
and
frstor
mov
inc
jne
sub
inc
loop
repnz
push
test
xor
mov
or
mov
push
out
andl
pop
adc
mov
out
insb
dec
test
or
pop
push
cwtl
es
sub
and
xchg
jmp
and
jg
int3
repnz
cmpsl
jmp
jbe
mov
inc
mov
dec
out
and
or
add
movsl
cmp
addb
mov
cltd
pop
pusha
sbb
rclb
sbbb
outsl
loope
leave
push
add
std
add
jge
movb
lods
pusha
cmpsb
and
add
stc
mov
pop
iret
mov
movsb
push
jecxz
lahf
nop
mov
aad
lock
inc
dec
xchg
inc
xor
movsl
shlb
gs
dec
add
popf
xlat
lahf
xchg
lret
aaa
jg
pop
jno
lretw
jle
xor
fucomi
clc
idivl
xor
mov
fsubrs
push
inc
xchg
pusha
aam
sub
and
mov
std
popa
mov
sarl
sbb
mov
mov
mov
outsl
testb
inc
daa
mov
jg
mov
in
movzbl
ret
rcrb
or
fldcw
sar
cmp
xchg
cs
sub
cmpsl
inc
loope
lods
sti
in
xlat
jbe
xchg
je
mov
pusha
mov
and
data16
add
inc
das
loope
and
pusha
data16
jg
lock
fs
jg
xchg
lea
jge
std
pop
fs
xchg
adc
mov
das
fldl
mov
adc
xchg
popf
outsl
sti
adcl
popa
cmp
adc
adc
mov
icebp
out
loope
ja
push
movsl
add
sbb
push
fwait
xor
xor
hlt
loope
xchg
stos
mov
mov
hlt
dec
int3
mov
jne
repnz
jnp
jbe
aas
cmpsl
faddp
jle
scas
sub
pusha
inc
cld
leave
fisttps
jecxz
into
mov
cmpsl
mov
mov
insb
outsb
jne
push
ret
push
je
roll
adc
inc
rcl
jge
xchg
out
aaa
inc
mov
pop
push
jge
jmp
jae
repz
mov
sub
push
test
mov
and
dec
pop
add
in
xlat
pop
sbb
bound
sti
jg
push
test
mov
imul
lret
jle
sub
inc
pop
jbe
push
fcmovb
cmpsl
testl
rol
test
jne
pop
jbe
push
aas
popf
and
pop
and
cmpsb
mov
scas
imul
or
xor
xorl
rcrb
mov
sbb
frstor
ja
pop
ja
xchg
fadds
or
dec
nop
mov
outsb
idivl
mov
jne
fsubrl
sti
mov
jecxz
push
xchg
mov
popa
pop
mov
inc
sbb
jmp
pusha
inc
sub
cmp
jno
sbb
into
push
xchg
ja
jbe
jl
clc
insb
inc
cmp
cmc
jecxz
icebp
imul
mov
cs
and
or
scas
push
push
cmp
popl
in
addr16
dec
mov
jno
pop
pop
lock
push
jbe
inc
or
cld
jne
xchg
xlat
jbe
leave
adc
xchg
fwait
or
mov
jg
test
inc
out
dec
and
lods
dec
dec
test
xchg
cltd
jnp
call
imul
fimull
push
mov
pushw
scas
mov
fistpl
mov
jno
testl
aas
sti
scas
xchg
dec
push
loopne
sti
mov
adcl
mov
lahf
aam
jp
jle
stos
js
jmp
inc
add
dec
lahf
lods
sti
roll
lret
sub
daa
xlat
sti
xchg
pop
pop
pop
testb
ja
lret
jg
mov
inc
rorb
pop
inc
iret
adc
mov
or
cmc
test
mov
cmc
or
ja
or
outsl
push
cld
into
push
adc
inc
std
iret
test
mov
sbb
sbb
xlat
and
dec
mov
int
jg
pushl
cmc
or
iret
shr
fisttpll
jno
mov
fidivrs
dec
test
decl
hlt
mov
pop
testl
lds
pop
jnp
push
sti
cmpsl
sahf
mov
push
repz
xor
jmp
and
pop
xchg
pop
insl
cmp
pop
xchg
dec
sub
adc
adc
repnz
iret
cs
mov
mov
inc
cmpsl
je
cs
add
inc
jne
jbe
inc
cs
mov
idivl
ss
out
inc
pop
int
push
inc
cmpsl
push
mov
mov
push
jle
scas
fnsave
xchg
add
addl
inc
inc
movsl
dec
inc
inc
js
pop
add
sbb
imul
fnsave
add
adc
mov
sub
lahf
jle
shlb
mov
cmp
outsb
icebp
scas
xchg
rolb
pop
inc
shlb
sbb
pop
fistl
clc
iret
into
and
out
stos
popf
mov
pop
push
cmpsb
mov
fldl
lahf
jecxz
aad
addr16
and
clc
in
inc
xchg
shl
inc
jbe
xchg
cwtl
pop
pop
mov
inc
sbb
loopne
pop
pushf
xchg
in
jge
lea
sbbl
cld
maskmovq
idivl
jbe
push
notb
mov
xchg
xchg
inc
adc
sub
movsl
arpl
sbb
sbb
jns
pop
int3
add
lds
mov
pop
sarl
mov
inc
xchg
add
sarb
je
addl
cmp
cmpsl
les
jecxz
dec
inc
repnz
mov
mov
push
push
mov
ja
mov
fwait
and
shl
xor
repnz
out
cmpsl
les
pop
push
stos
push
divl
jae
std
lret
jnp
rcrl
cmpsl
xchg
imul
pop
stc
push
imull
mov
in
lods
movsl
push
lds
outsb
test
xor
mov
lods
push
div
cmpsl
pusha
sbb
cs
leave
push
mov
scas
repnz
inc
ret
and
and
enter
das
inc
test
push
mov
pop
cmp
push
lods
je
addr16
rep
inc
dec
icebp
cmp
sahf
mov
popf
mov
les
jp
das
xchg
repz
std
lea
xchg
aaa
std
push
pop
lods
sar
sbb
push
sbb
pop
cli
xor
mov
mov
jecxz
icebp
mov
dec
out
mov
push
fs
push
daa
mov
int
adc
adc
add
aad
push
push
add
push
ja
shrl
stos
jo
add
inc
ret
les
cwtl
sbb
ss
data16
sarb
dec
pop
inc
xchg
or
jge
xchg
filds
cmp
mov
es
xchg
add
fistps
rcll
pop
sub
lea
test
es
loope
movl
and
add
rolb
xchg
add
loopne
xchg
fdivs
out
cmpsl
push
cli
cmpsl
scas
addr16
loopne
test
outsb
add
sub
insb
xchg
fcmovnb
jecxz
lea
mov
mov
mov
ds
mov
sti
enter
cmc
add
or
inc
adc
xchg
mov
mov
ss
inc
mov
sbb
cmp
test
pop
repz
loope
shr
add
imull
sub
inc
lods
mov
add
pavgw
aaa
pop
add
popa
pop
stos
aaa
imulb
inc
xchg
jnp
shl
movsl
xchg
data16
adc
jne
pop
outsl
arpl
mov
fdivp
mov
das
xchg
out
rcrl
or
pop
push
adc
adcl
or
xchg
push
xor
aam
jecxz
test
in
xchg
push
lcall
adc
mov
inc
push
cmc
dec
jns
and
sbb
add
xor
ja
jle
and
sub
pusha
fxch
mov
mov
test
cs
inc
cs
pop
and
xchg
mov
push
stos
mov
adc
mov
mov
mov
mov
push
pop
js
xchg
xchg
ja
insl
dec
fcoms
notl
repnz
jbe
add
sub
inc
mov
push
lret
sub
dec
mov
rclb
and
cmp
roll
scas
rclb
outsb
fdivl
and
adc
fmulp
jnp
inc
push
test
jle
push
sub
jo
ret
insl
or
jg
test
mov
stc
sbb
jmp
xchg
negl
outsl
and
in
dec
inc
jmp
mov
sub
lods
aam
popa
cmp
cli
mov
pop
aas
es
shr
adcb
loopne
pop
scas
nop
lret
dec
addr16
mov
push
ljmp
or
insb
out
add
jbe,pt
imul
daa
loop
xchg
pop
and
inc
jnp
mov
jge
fsubrp
shll
insl
add
adc
test
pop
std
push
pop
adc
lret
cs
sbb
ds
adc
mov
inc
scas
aam
xchg
inc
push
mov
inc
lcall
outsb
sub
test
scas
cld
out
xchg
cld
cmpsl
add
cmc
lret
sub
jae
loop
fstpl
ds
in
sbb
pop
jae
ljmp
jle
xchg
jmp
scas
adc
loope
outsl
cltd
je
mov
jo
or
xor
push
jbe
shr
shlb
ret
ror
pop
dec
dec
cs
inc
inc
loopew
das
mov
hlt
add
mull
fbld
fsubrl
jmp
loope
push
lods
mov
jecxz
or
aaa
ljmp
xchg
cwtl
push
inc
les
sarb
dec
jbe
insl
aas
inc
or
add
imul
adc
insb
in
adcb
insb
adc
sbb
dec
sti
jne
xchg
decb
icebp
xchg
shr
push
enter
loope
mov
dec
fidivrl
scas
addr16
sti
scas
sbb
push
ja
pop
fldl
add
test
xor
dec
ret
cs
lret
fmuls
loope
rcl
jl
fbld
xchg
and
in
jecxz
loop
mov
rcrb
dec
jbe
mov
repz
shrb
out
push
push
mov
in
orl
push
pop
inc
testl
pop
mov
cmp
aas
es
adc
or
jae
jmp
lods
dec
add
adc
cs
into
mov
aaa
popa
pusha
mov
rcrb
push
mov
pop
push
pop
gs
scas
or
fs
push
out
rclb
sbb
mov
fwait
adc
lods
inc
add
decl
clc
adc
or
jae
lods
scas
test
out
test
fucomip
clc
popf
loop
mov
stos
jg
outsl
rcll
testb
mov
in
mov
or
scas
scas
stc
and
cltd
ja
jb
mov
mov
dec
out
jns
popl
mov
mov
andl
int
scas
flds
push
fwait
notb
mov
xchg
push
in
test
hlt
jne
in
pop
pusha
sub
inc
in
xor
jecxz
daa
cmc
cli
insl
daa
out
shlb
adc
or
push
insl
adc
dec
mov
inc
mov
test
inc
mov
leave
fistpl
lods
mov
out
sahf
pop
add
push
mov
rclb
mov
cmp
decl
dec
fbstp
or
fxam
and
pop
inc
cmc
addr16
in
fwait
rorl
push
jns
cs
dec
push
out
pop
pop
aaa
inc
out
out
idivl
fistps
mov
mov
cmp
adc
leave
ret
jl
popf
cmpsl
add
cmp
push
xor
jg
decb
push
pop
or
cs
and
pop
pop
data16
test
subl
repz
or
and
push
mov
xchg
and
push
aas
orb
pop
fcompl
pop
mov
jo,pn
icebp
data16
pop
add
adc
or
pop
add
mov
push
mov
mov
jmp
scas
lret
cmc
xchg
xor
iret
in
and
in
mov
cmp
dec
sub
jp
inc
fists
inc
dec
cmc
out
daa
std
notb
ret
sti
lcall
and
adc
ss
jo
push
push
dec
xlat
pop
sbb
mov
jb
out
hlt
mov
mov
mov
mov
icebp
adc
adc
jbe
mov
jne
ret
and
test
xchg
scas
pop
add
hlt
xlat
sbb
lret
sbb
jge
sbb
test
jb
mov
cmc
sahf
loope
mov
add
cli
inc
inc
or
ja
scas
dec
fldl
filds
mov
cli
stos
xchg
test
mov
es
ja
jmp
push
dec
es
push
outsl
cmpsl
add
or
jge
outsb
xchg
faddp
add
aad
push
mov
aam
xchg
jle
pop
lods
mov
push
cmp
cld
in
xorl
cli
mov
pop
jbe
sahf
dec
in
pop
imul
filds
nop
push
xchg
xchg
mov
fiaddl
add
scas
fs
cmpsl
jl
pop
xlat
jle
outsb
lret
cmp
dec
jno
add
dec
js
jns
or
icebp
sti
mov
push
shr
mov
add
roll
aam
jae
sar
and
testl
push
jmp
cmpsl
and
lcall
ss
lods
movsl
out
push
lret
psllw
push
lret
pusha
pushf
pop
lds
sarb
ds
nop
hlt
bound
sbb
repnz
xchg
mov
cld
std
dec
inc
das
sub
call
incl
stos
out
mov
xor
cmpsb
xchg
out
fistl
test
loope
jns
add
js
sub
mov
push
sbb
push
pop
pop
es
es
into
in
push
cmpsb
xorl
int
shl
pop
in
addr16
in
pop
imulb
in
xchg
jle
into
testb
aas
int3
add
sbb
push
mov
fcmovnu
add
icebp
add
lret
add
jno
out
pop
add
sbb
stc
xlat
les
sahf
pmullw
fs
adc
adc
sarb
push
adc
pop
out
rcll
mov
pushf
out
mov
cmp
adc
push
je
mov
adc
mov
xor
mov
push
out
pop
icebp
dec
scas
icebp
ja
jp
xor
fldt
mov
std
add
jmp
push
xor
pop
jb
sbb
cmp
test
dec
ret
cs
adc
push
and
aam
dec
jae
dec
cmp
jne
and
dec
and
xchg
push
xor
adc
ja
pop
icebp
adc
inc
fisttpl
jb
in
pop
mov
sbb
insl
lods
repnz
cmp
or
add
and
and
mov
loopne
pop
xchg
xor
push
les
lcall
xchg
ja
je
leave
packuswb
xorl
mov
push
jbe
fiadds
xchg
test
sbb
iret
rcrb
loop
gs
lret
or
push
bound
or
incl
jle
sub
pusha
shrl
mov
cmp
icebp
pop
aaa
pop
inc
ret
adc
fdivrl
sti
and
leave
daa
cmp
jne
mov
fcoml
addr16
mov
ret
imul
cmpsl
inc
sti
adc
outsb
push
pop
nop
inc
nop
mov
ret
out
aad
adc
mov
mov
push
ret
ds
mov
cltd
loopne
popl
mov
std
ret
xchg
movsl
test
mull
ret
cltd
pop
cltd
out
fwait
int
cmp
daa
aad
sti
adc
sbb
mov
out
add
rolb
mov
fisubs
ret
fisttpll
cmp
sbb
add
xchg
jmp
rcll
icebp
cmpb
cs
push
aad
fstpl
lret
fwait
cmc
cltd
mov
xchg
aas
test
ret
mov
das
fisubrl
mov
mov
sbb
jb
jbe
cmpsl
test
push
js
cmpsl
daa
xlat
xchg
in
and
xchg
lret
sub
cli
sti
jne
add
cmpsb
outsb
pop
ret
cmpsb
xor
fwait
jl
cld
jge
test
clc
jp
imul
inc
pop
fidivrs
scas
hlt
jmp
daa
out
inc
movsb
mov
scas
pusha
xchg
addr16
xchg
sbb
popf
dec
mov
inc
je
sbb
and
fistpl
popa
add
cmp
inc
testl
addr16
fldt
stc
sub
xor
add
into
dec
mov
cmp
inc
repz
fstpt
addr16
adc
xchg
out
notl
jns
push
dec
cmp
mov
cmp
aaa
xchg
addb
mov
jle
aaa
mov
outsl
int
inc
fs
push
jl
cli
cmpsb
mov
jge
mull
jne
cld
ja
sub
mov
sbb
movsw
mov
test
inc
incb
xchg
aad
scas
leave
dec
adc
xchg
inc
fwait
pop
add
in
cmpsb
loope
cmpsb
pop
mov
jl
xor
jne
dec
jge
arpl
outsb
imul
or
test
jl
mov
sti
popa
cmp
adc
test
fildl
idiv
xorl
xlat
bound
test
cmp
ffree
ret
neg
rcr
xorl
fsubrl
popa
mov
inc
arpl
iret
mov
xchg
aam
movsl
addr16
push
jmp
cmpsl
sahf
shlb
xchg
btr
cmp
jg
mov
mov
pop
sub
outsb
into
jge
add
negl
sahf
fs
mov
je
ds
pop
inc
inc
icebp
xchg
out
pop
addr16
out
xchg
mov
xchg
daa
jp
dec
ffreep
shlb
loop
dec
repz
jge
jnp
jbe
jg
xlat
mov
stos
test
in
in
cmp
pop
out
adc
push
mov
mov
lcall
stc
rol
push
pop
scas
sub
lcall
sbb
jmp
es
dec
aad
stos
and
gs
pop
aad
pop
push
test
lds
das
push
mov
jbe
cmpsl
ficoml
jae
cmp
sti
adc
xor
imulb
roll
sub
sub
xchg
out
mov
lds
divb
push
fadds
das
xchg
mov
add
jnp
wrmsr
push
fwait
pop
out
pop
xchg
in
push
ret
dec
inc
bound
call
mov
lock
inc
lods
xor
out
outsb
std
out
shr
or
daa
xchg
loop
rcrb
ja
js
stc
fstl
and
mov
ret
or
xchg
xchg
cld
push
cs
fdivrl
jecxz
add
int
sbb
push
scas
aam
sbb
movsl
pop
dec
aaa
mov
sbb
subb
push
inc
aas
out
cmp
outsl
cmp
ret
jl
xor
outsl
jae
out
cmp
pop
inc
mov
push
insl
rcrb
push
xchg
rcrl
ja
loop
dec
int3
js
lods
test
test
lock
sub
dec
push
jp
mov
mov
lret
shl
xlat
or
jae
stos
xchg
inc
mov
inc
sbb
stos
mov
cmp
fildl
rclb
arpl
dec
jle
mov
testb
pop
roll
cmc
adcl
push
lds
mov
jae
sub
pusha
cmp
push
jl
andb
gs
pop
mov
push
ja
dec
lods
xor
rcrl
lahf
mov
daa
into
pop
in
adc
mov
scas
outsl
jbe
movb
sub
rcr
lods
or
add
adc
xlat
out
icebp
pop
in
and
inc
sahf
in
xchg
imul
int3
or
lds
stos
ret
bound
push
int3
cltd
mov
sub
adc
sub
testb
in
lds
mov
repnz
push
sbb
scas
inc
ss
scas
mov
xchg
ffreep
adc
fistpll
outsl
sbbw
cli
dec
cli
pop
jae
or
clc
xor
nop
leave
xchg
cmp
cli
inc
pop
hlt
addr16
imul
popa
mov
mov
pushl
stc
popa
inc
sbb
aaa
out
dec
pop
push
push
fstps
jbe
push
jbe
lds
sbb
leave
out
jmp
mov
fsubl
pushl
sub
jns
test
inc
cmp
mov
ret
pop
fsts
std
xchg
aad
add
out
movsl
dec
mov
sub
icebp
jecxz
roll
or
mov
jmp
add
xchg
les
outsb
rcrb
les
mov
and
add
rcr
stc
push
loope
out
enter
adc
xchg
mov
or
enter
cmp
adc
jbe
pop
cmp
les
adc
fs
aad
hlt
cmc
pusha
dec
fisttps
mov
push
push
xor
loope
nop
ret
call
mov
push
int
or
jge
sub
sub
xchg
xchg
popa
xor
out
push
movsb
xor
flds
adc
mov
lods
addb
in
faddl
mov
test
pop
add
out
stos
mov
push
jno
movsb
scas
sbb
xchg
add
add
pop
aas
and
xchg
mov
into
je
lret
int
out
pop
add
dec
jecxz
fcomip
cmc
popa
test
jae
dec
xchg
test
idivl
push
out
icebp
adc
sbbl
sarb
lds
daa
sbb
dec
fs
es
xchg
push
cmpsb
and
into
fwait
inc
cmc
iret
or
mov
shlb
lds
mov
negl
and
mov
test
out
jnp
or
jae
mov
mov
ffreep
out
mov
fisttpl
cmpsl
inc
iret
rorl
lds
sbb
fildll
or
sbb
outsl
test
push
mov
inc
iret
cmpsl
aam
aam
mov
cltd
adc
out
mov
mov
loope
in
addr16
cmp
lds
fbstp
push
and
mov
dec
gs
popf
inc
mov
daa
pop
xchg
insb
outsl
test
leave
dec
fldl
lods
adc
daa
aad
push
inc
aaa
iret
inc
xchg
out
cmp
mov
sahf
cmc
xchg
push
mov
insl
shrb
std
cmp
lods
ds
cmp
sbb
push
les
imul
xor
adc
ljmp
fisttpl
stc
mov
xchg
mov
jno
dec
sbb
pop
sbb
sbb
xchg
scas
test
dec
push
push
out
mov
hlt
sbb
sub
sti
out
and
jns
test
sub
push
sbb
sub
jae
mov
or
sub
add
pop
loopne
xchg
popa
xor
stos
xor
into
fs
sub
ror
jle
add
push
arpl
mov
push
and
jnp
lret
movsl
jp
add
ss
adc
int3
jnp
lds
sti
jno
mov
mov
fldl
mov
stc
out
dec
ret
popf
and
mov
shlb
mov
jae
pop
scas
imul
repz
inc
cld
popf
mov
lea
sub
or
mov
mov
das
mov
shr
and
roll
sarb
int
mov
insl
test
ja
add
add
out
mov
jg
sbb
add
jne
and
lods
sub
sti
mov
daa
frstor
mov
cmp
sbb
out
xchg
ret
push
mov
loopne
loopne
lods
sar
orl
push
add
sarl
cmpsl
fs
mov
pop
xchg
and
pop
sub
sahf
cmpsb
jge
push
addl
xchg
or
inc
adc
push
movsl
out
adc
shrb
pop
mov
icebp
dec
std
lcall
jge
repz
pop
pop
stos
pop
lcall
push
std
push
stos
cwtl
mov
icebp
cmc
mov
dec
aaa
pop
sub
repnz
popa
jl
div
pop
adc
jecxz
insb
mov
mov
xchg
imul
mov
sub
xor
outsb
mov
fnstenv
daa
clc
enter
push
fidivrl
sar
movsb
shll
inc
jnp
push
mov
mov
inc
mov
aas
aas
outsb
dec
xlat
in
stos
add
cs
lahf
push
lea
lock
scas
inc
mov
fwait
arpl
xchg
push
jge
jnp
mov
jmp
push
mov
cmp
in
daa
movsb
lds
sub
and
jns
cs
daa
cmp
out
insb
in
lds
xchg
js
ljmp
xchg
lods
subl
mov
push
mov
mov
test
mov
inc
ja
stos
repz
sub
xchg
cmpsl
jmp
fs
mov
cltd
mov
dec
les
les
setge
or
bound
xor
shlb
inc
pop
sbb
pop
xchg
push
cs
arpl
inc
inc
aaa
adc
in
iret
lahf
xlat
rcrb
lret
xlat
mov
cmp
adc
repz
negb
repnz
les
addr16
fidivs
xor
pop
out
insl
jnp
inc
jno
arpl
pop
imul
aas
cs
inc
repz
inc
pop
inc
shlb
icebp
cmp
mov
mov
test
push
mov
jno
dec
jp
mov
xchg
pop
bound
pop
and
imul
aad
fucom
rclb
inc
hlt
ds
clc
mov
pop
fs
jae
shr
jne
push
lds
mov
jge
mul
out
jecxz
inc
imul
in
xchg
fcmovb
inc
jne
mov
mov
jg
testb
mov
xchg
mov
fxch
idiv
mov
jecxz
out
xor
xor
cmp
sub
xchg
daa
mov
jl
dec
adc
inc
shrb
xchg
iret
fldl
xchg
ret
aas
test
scas
pop
leave
ljmp
or
imul
rcrl
mov
out
dec
adc
movsl
loop
cmc
in
pop
xchg
outsl
outsl
push
sub
in
adc
jl
cmp
push
push
xor
xor
sbb
lret
lea
imulb
or
mov
mov
stc
clc
ljmp
cmpsb
hlt
xchg
movsb
and
adc
call
pop
or
ja
or
sub
fsubs
jle
cmp
jae
adc
sub
jnp
xchg
rclb
in
dec
jmp
loope
icebp
adc
and
push
xchg
mov
push
xor
decb
sarb
jno
arpl
xchg
addr16
leave
jg
testl
test
aas
enter
popa
adc
jg
in
pop
add
sbb
rclb
mov
xor
sbb
sub
add
adc
xchg
and
faddl
fstl
shlb
addl
in
and
out
xor
lret
ds
inc
adc
repnz
test
out
inc
std
xlat
xchg
in
shlb
lods
xchg
subb
pop
lcall
gs
lods
add
pop
cmp
pop
xor
dec
adc
aad
add
lret
sub
and
les
stos
push
cmp
pop
fldl
sahf
mov
jge
sahf
cmpsb
jp
mov
jo
mov
rorl
sbb
lds
js
shrl
test
movsb
mov
test
negb
sahf
or
cmp
lds
mov
repnz
jbe
and
push
loop
push
dec
in
and
or
push
scas
cmp
cmpsb
addr16
mov
rcl
inc
jmp
pop
mov
mov
mov
jbe
mov
dec
in
xchg
push
xchg
cmp
rcrl
daa
mov
fildll
fbld
and
xchg
push
inc
pop
sahf
in
aaa
mov
xadd
add
xchg
inc
mov
fisubs
pop
xor
push
pop
aas
dec
movsb
test
fwait
hlt
jne
inc
popa
jae
or
push
addr16
fs
das
push
les
mov
mov
xor
jbe
jecxz
aaa
or
or
cmp
addr16
mov
inc
faddp
adc
in
add
into
pop
mov
lea
sub
jb
inc
or
dec
jnp
stc
sbb
jp
es
das
insl
cpuid
dec
das
jne
or
gs
jle
push
fldenv
lret
scas
test
dec
mull
push
adc
mov
jnp
xchg
lods
sub
pop
push
movl
jle
loop
orb
fsubrp
push
cmp
xchg
std
pop
mov
sub
push
dec
aam
jae
xacquire
es
add
jnp
fs
and
push
outsb
jno
inc
fiadds
or
dec
mov
mov
out
in
std
and
cmp
pop
cltd
push
dec
lds
aad
lahf
mov
push
aas
out
add
mov
loop
add
into
ret
xchg
push
xor
clc
lods
cli
add
pop
ret
pop
imul
fs
inc
test
push
mov
sahf
mov
idivb
add
in
inc
add
scas
jge
mov
in
pop
xchg
ljmp
js
xchg
adc
xchg
and
test
arpl
inc
sub
mull
inc
int3
push
dec
iret
sahf
and
adc
cmp
ja
daa
test
rcrb
sbb
lea
shll
clc
mov
mov
xchg
outsb
popf
test
ret
cmp
hlt
scas
add
mov
fs
mov
sarb
inc
sti
rol
dec
push
mov
mov
pop
pop
pop
add
nop
or
subb
outsb
sbb
es
aas
mov
fistpl
fsts
cmc
xchg
inc
js
mov
adc
into
mov
movsb
imul
mov
lods
jnp
faddp
sbb
gs
mov
scas
jmp
mov
and
pusha
xor
pop
fs
xchg
push
pop
xchg
sbbl
jbe
push
jg
pop
inc
notl
dec
cs
mov
add
and
mov
adc
call
or
pop
les
jbe
es
add
ficoml
rol
xchg
pop
push
scas
mov
add
fs
mov
mov
pop
loopne
or
iret
in
cs
and
or
clc
or
les
es
gs
or
adc
xchg
jns
mov
in
xlat
or
adc
mov
or
xchg
push
xchg
mov
jae
or
sbb
enter
aaa
inc
pop
sbb
or
xchg
movsb
mov
sbbb
jno
jne
and
in
movsb
stos
mov
push
and
mov
lods
cmp
dec
sbb
pop
and
out
mov
mov
add
pop
adc
bound
loop
shrb
sbb
or
lea
and
mov
push
sub
rcll
add
scas
sbb
aam
add
leave
fs
fistpll
mov
fcmovnu
vminps
sahf
shll
in
mov
outsb
adc
insb
mov
jns
pusha
mov
test
cmc
pop
iret
mov
mov
adc
mov
out
fcompp
jecxz
xor
mov
lds
xchg
out
out
bnd
popf
aaa
lods
bound
adcl
cs
xlat
mov
inc
mov
mov
insb
sub
cli
pop
jne
dec
in
pop
rcr
or
inc
stos
out
push
pop
mov
xchg
fs
cmp
pop
mov
test
lds
sbb
add
cmpsl
pusha
stos
jb
loopne
out
notl
push
adc
mov
fwait
in
cwtl
sti
rolb
sarb
test
add
aad
ja
add
aam
mov
push
inc
aas
xchg
fwait
mov
test
jbe
insl
data16
cs
jge
push
sbb
mov
dec
ret
imul
outsb
sub
dec
addr16
loopne
es
or
gs
aaa
pusha
jb
fiaddl
xor
pushf
out
nop
fistps
fistpll
xchg
ljmp
jmp
fs
sbb
jg
movsb
sbb
test
sbb
js
subl
adc
outsb
jne
xchg
popa
or
dec
mov
push
aaa
jge
xor
leave
xor
cmpsb
and
inc
mov
inc
mov
sbb
decl
push
rol
jns
dec
nop
fwait
lods
cmpsl
mov
xor
pop
int3
cwtl
jmp
or
pop
cmp
scas
jns
fbstp
push
xlat
and
movsl
out
test
jg
notl
xchg
shl
lea
or
mov
or
xchg
xchg
pop
sbb
cmc
jle
pop
cmp
pop
pop
xor
jb
ja
and
repnz
leave
pop
cmp
push
jle
mov
sbb
data16
jae
pop
adc
arpl
lahf
dec
mov
aam
pop
rclb
cli
cwtl
fs
xchg
lods
cwtl
outsl
sub
mov
fisubs
daa
or
cmpsb
leave
test
mov
push
cltd
dec
mov
incb
sbb
ds
mov
mov
sbb
test
in
xor
jg
pushw
cli
lds
cmpsl
aad
cmpsb
xchg
testl
xchg
jmp
ret
es
push
mov
aam
dec
fists
jge
xor
divl
icebp
out
pop
inc
scas
mov
rcrl
pop
pop
add
pop
fsubp
sti
test
pop
sbb
jb
xchg
inc
outsl
xchg
adc
mov
mov
xchg
mov
adc
enter
or
add
bound
sbb
jle
adc
pop
jg
add
int3
mov
aas
nop
cmp
mov
mov
ficomps
std
add
int
pop
pop
sub
and
into
add
ja
sub
mov
dec
testb
stos
push
loop
gs
ds
pop
cs
cmpsb
insl
aam
sub
pop
lock
daa
mov
loop
ret
cmpsl
aas
xchg
sar
stos
cmp
jp
in
hlt
cld
inc
insl
and
push
xor
dec
pop
jae
inc
addr16
shl
insl
in
jae
push
mov
js
cmp
xor
inc
push
pop
pop
and
jmp
inc
jmp
imul
pop
push
pop
test
popa
xor
xorb
jp
lods
scas
xchg
mov
fisubs
dec
aad
es
xchg
mov
cmc
movsb
insl
push
clc
dec
loope
and
pop
out
hlt
repnz
push
fs
daa
loope
xor
mov
sbb
movsl
xchg
xchg
pop
inc
cmc
lret
cmpsl
movsl
in
push
or
pop
adc
test
mov
mov
cmp
in
cmpsl
mov
test
add
in
loope
and
cli
insb
movsb
mov
add
jmp
imul
mov
cmp
fisubl
out
mov
sbb
and
adc
xchg
stos
pop
lea
jl
fs
decb
push
pop
shr
add
adc
sbb
push
cmp
movsl
in
jg
int
xchg
daa
test
faddp
leave
fadds
mov
gs
in
sbb
dec
mov
mov
jle
add
in
sbb
cmp
repz
mov
repz
mov
ja
dec
jne
mov
sbb
cmpsl
shl
sbb
jno
test
cmp
out
mov
sbb
lcall
ljmp
imul
jns
inc
jne
outsl
add
xchg
loope
or
jle
pop
xchg
ret
data16
ds
in
pop
jne
jecxz
dec
xor
fmuls
js
jno
testl
aad
fs
mov
out
loop
adc
mov
dec
dec
insl
lds
movsb
jge
inc
pop
push
pusha
ficoml
sbb
or
popf
lds
cwtl
call
adc
fwait
out
or
sbb
adc
sub
cld
stos
sarb
push
cwtl
mov
testl
jge
pop
add
mov
mov
out
add
out
ret
jge
jle
test
inc
mov
fistpl
sub
mov
scas
xchg
pop
subb
jno
mov
ret
movsb
rcrl
push
subl
mov
test
scas
hlt
adc
push
sbb
insb
sbb
test
pop
pushw
ret
leave
pop
pop
test
mov
mov
icebp
cmp
sarb
xor
inc
psubsw
in
call
push
mov
jae
cmpsl
cli
in
xor
pop
mov
addr16
rcrb
dec
roll
add
sbb
ss
pop
pop
add
ds
test
call
addr16
sbb
outsl
mov
and
lahf
sbb
pop
arpl
mov
ret
sub
fidivrl
fists
xor
lock
sub
jmp
out
gs
dec
mov
or
jnp
loop
ss
out
ds
out
outsb
pop
push
cmpsl
fstpl
ljmp
mov
data16
mov
adc
movsl
ret
bound
pop
fbld
repnz
xchg
pop
jne
jae
mull
jg
mov
ret
iret
vsubss
lds
in
lea
jecxz
cmp
cmpsb
sbb
fisubrl
stos
jae
push
or
mov
jge
iret
push
push
inc
ds
mov
dec
jns
out
dec
cwtl
sub
mov
mov
aas
cmp
mov
sbb
fstpl
lret
add
lahf
cmp
jmp
addr16
cwtl
sub
jnp
or
sub
jne
gs
and
aas
lods
rcrb
cs
mov
inc
pop
mov
dec
push
scas
cmpsb
test
jb
insl
dec
clc
cmp
jmp
jns
cmp
push
lods
pop
mov
arpl
push
test
push
jge
in
fwait
xchg
fdivrs
mov
cwtl
jne
sti
clc
clc
xor
pop
jno
push
mov
out
int3
test
mov
fcmovb
inc
out
fists
push
dec
mov
jnp
ret
outsl
lcall
test
or
test
jge
pop
stc
push
sbb
fists
push
push
rolb
xor
icebp
mov
fdivl
cmp
xlat
jns
push
dec
movsb
in
pop
aas
int
mov
mov
pop
dec
push
pop
add
rorb
fs
push
push
push
das
mov
adc
push
mov
rorl
and
push
fsubs
mov
imul
lods
jp
mov
mov
fisttpll
lds
cmp
sub
std
dec
inc
pushf
mov
or
push
jne
dec
leave
ret
pop
scas
stc
arpl
jge
pop
xlat
shlb
fs
testb
je
subl
cli
inc
insl
dec
mov
fst
loop
jbe,pt
out
dec
dec
cmp
out
aaa
mov
and
ret
mov
xchg
inc
out
adc
not
hlt
mov
inc
shrl
mov
idiv
test
jecxz
bound
push
lcall
sub
push
movsb
inc
cmpsb
mov
xor
lds
inc
sahf
aaa
out
ljmp
adc
add
dec
cmpb
cld
stos
cmpb
mov
insl
xor
adc
movsb
out
nop
pop
jg
call
pop
mov
dec
in
fsubrl
data16
ret
inc
dec
test
imul
iret
add
daa
mov
lods
aas
mov
pop
add
push
pop
jbe
mov
mov
sbb
and
and
adc
lods
or
xchg
fwait
addr16
iret
stos
jo
nop
rcl
and
fwait
aad
jae
out
sub
insb
push
xor
lock
or
cmp
arpl
rclb
sti
popa
arpl
jns
jge
int
out
fs
in
xor
icebp
pop
pop
and
es
dec
out
test
push
or
test
shll
or
lret
push
add
lds
rcl
in
insl
loope
mov
notb
rcrl
dec
enter
add
test
ja
sub
inc
cwtl
outsl
faddl
cs
pop
ret
fdivrl
adc
js
inc
push
xor
mov
xchg
imul
insl
aam
addr16
cmc
popf
cli
cmpsl
jp
pop
repnz
fnsave
sti
aam
cmpsl
adc
mov
mov
mov
and
adc
cmpl
in
xchg
out
iret
pop
mov
mov
std
sti
scas
xchg
jmp
mov
inc
lret
cmc
imul
addr16
lock
jmp
shll
int3
subb
add
or
dec
xor
lea
and
gs
sarl
and
fs
mov
pop
je
loopne
add
dec
sub
jmp
mov
fildll
jae
inc
and
cmp
add
sub
sbb
dec
inc
jbe
inc
dec
inc
outsl
sbb
mov
push
xchg
std
mov
fiaddl
mov
shlb
fs
movsl
rolb
lock
xor
ss
rcl
gs
ja
test
xor
shrb
mov
loope
fiadds
loop
out
pop
scas
cs
adc
push
mov
or
lods
add
test
rcrb
or
sub
std
aas
out
das
adc
bound
pop
negb
cmp
xor
add
scas
dec
shlb
pop
jb
sub
cmpl
addl
loope
ja
in
stc
sarb
pop
out
add
push
out
mov
jb
fsub
jp
adc
popl
mov
pop
rorl
popf
dec
mov
ja
xchg
ficompl
pop
add
repnz
push
gs
out
sarl
inc
shl
movsb
call
out
stc
pop
stos
popf
push
mov
mov
shll
data16
sbb
pop
jne
ss
je
mov
ljmp
mov
rcrb
lahf
stos
cmpsb
xlat
mov
sti
or
jecxz
shlb
xor
out
testl
ja
lahf
lahf
adcl
outsl
mov
cld
mov
rcl
mov
jmp
stos
loop
xlat
shrb
add
popf
pop
xor
fstpt
mov
lods
loop
add
push
leave
or
cmp
pop
movsb
repnz
dec
cmp
cwtl
test
das
out
ret
inc
rorl
addr16
movsl
add
pop
sbb
icebp
stc
in
or
jmp
jge
pop
mov
inc
sarb
daa
or
nop
mov
mov
xor
cs
adc
push
mov
divb
mov
xchg
fdivrs
lahf
mov
je
mov
mov
ficomps
mov
push
adc
data16
xchg
mov
jge
fwait
or
or
aas
mov
lret
repz
mov
daa
fld
jmp
cmp
cltd
lds
mov
ret
rolb
ja
shl
pusha
mov
push
lods
xchg
stc
mov
in
scas
jae
inc
pop
fsubl
xor
out
dec
dec
xor
leave
xlat
add
in
fwait
aad
inc
test
iret
mov
jmp
std
xlat
ja
jmp
push
popf
out
gs
jmp
mov
test
or
dec
aad
mov
and
jg
cmc
movsb
adc
xor
xchg
cmp
dec
xorl
out
mov
subb
ss
stc
jg
aas
adc
mov
pop
jmp
cmpb
stos
jl
bound
pusha
push
adc
mov
and
lods
clc
repz
xlat
lods
int
stos
push
push
loop
sub
sbb
outsb
out
xchg
pop
mov
jl
aas
cmpsl
mov
ss
mov
dec
aas
popa
inc
fsts
notb
jmp
jg
push
imul
scas
test
arpl
push
fmull
mov
push
jg
jp
pop
mov
and
pusha
mov
add
icebp
stos
mov
shll
sbb
jecxz
inc
cs
and
das
pop
lea
fbstp
mov
mov
pop
inc
lods
mov
lcall
fxch
dec
aas
lahf
imull
pushl
out
aam
sbb
mov
out
stos
fs
or
aaa
dec
fcmovne
and
push
jp
mov
sbb
pop
imul
jne
dec
cld
mov
bound
push
arpl
fs
lahf
pop
adc
rol
mov
addr16
mov
daa
jg
cs
push
les
fstpt
mov
mov
xor
shr
in
sub
stc
lock
jl
rol
dec
sbb
and
scas
test
pop
ja
movsl
inc
xchg
movsb
pop
push
in
out
fldenv
mov
cmp
jne
shrl
outsl
push
in
fs
add
fs
mov
ret
std
adc
sarb
xchg
xor
subb
inc
hlt
and
jmp
mov
jge
pop
sub
sbb
std
cmc
or
out
adc
mov
mov
repz
push
loopne
adc
push
xchg
or
adc
mov
push
mov
sub
xchg
dec
out
test
mov
push
loop
mov
adc
xchg
inc
fnsetpm(287
aaa
mov
sub
inc
bnd
mov
daa
shlb
jnp
pcmpgtb
ljmp
lahf
push
les
stos
fs
lds
test
shll
push
inc
addr16
add
cs
in
mov
ja
mov
movsb
je
fs
lcall
test
fwait
into
roll
scas
lret
jb
js
mov
repz
push
jae
xchg
imul
dec
pop
mov
inc
cmp
mov
inc
int3
fsub
push
shll
mov
or
dec
mov
add
mov
outsl
lds
jnp
popa
out
ret
mov
inc
outsb
mov
xchg
sub
ret
stos
popa
mov
pop
fldln2
fwait
inc
into
push
mov
inc
sub
mov
pop
clc
inc
add
mov
loopne
jne
leave
jg
lret
pop
cwtl
adc
mov
cltd
add
lock
int
cmp
insb
adc
jge
add
cs
in
mov
test
pop
iret
cmp
sbb
in
mov
inc
ror
int
xor
add
push
jg
push
out
testl
rolb
or
pop
in
test
fildll
inc
loopne
mov
or
scas
fildll
ret
leave
out
cs
popa
mov
and
or
cmc
dec
movsl
pop
add
pushf
and
push
inc
sub
out
adc
or
rolb
icebp
addl
cmc
addb
out
xor
pop
out
and
sar
testl
add
pop
xchg
add
dec
not
enter
icebp
pushl
xchg
stc
jo
push
mov
aas
jnp
outsb
xor
push
test
dec
jmp
mov
sti
mov
inc
cli
icebp
insl
jle
cmpsl
fnstenv
in
imul
xchg
jmp
out
inc
orb
aas
inc
jbe
sti
out
xor
lds
outsl
sbb
pop
or
shll
ss
inc
mov
out
jg
popf
jp
inc
fwait
gs
sbb
sbb
mov
dec
int
in
decl
enter
mov
in
cmc
sbb
pop
sub
and
ret
repz
mov
stos
js
shlb
inc
mov
cld
cli
ljmp
scas
or
repnz
mov
sahf
xor
in
and
pop
out
or
push
jbe
inc
clc
daa
lcall
xchg
sbb
jmp
jnp
subb
std
scas
gs
jecxz
add
fsubr
jmp
xchg
mov
scas
stos
or
lock
adc
push
imul
jg
bound
outsb
jp
jecxz
out
leave
fisubl
sbb
jecxz
je
add
sbb
add
in
xlat
lock
in
xor
aam
sar
ret
rcr
dec
in
jne
xor
jnp
pop
push
push
adc
add
adc
mov
in
adc
jbe
cmp
inc
call
fidivrs
test
mov
cmp
pusha
in
outsb
mov
or
mov
adc
sub
sub
sbb
inc
addr16
pop
outsl
cmp
test
aam
jge
icebp
out
xchg
xor
lea
outsb
std
movsl
sbb
jmp
lea
mov
addr16
out
lock
bound
add
inc
scas
shll
inc
leave
add
mov
jp
sub
push
and
cwtl
in
mov
aam
iret
mov
movsb
imul
lock
push
scas
orl
subb
arpl
adc
push
dec
pop
dec
test
pushf
mov
cwtl
ljmp
or
fildll
xlat
xor
and
call
movsb
add
mov
rolb
in
scas
sbb
out
aas
arpl
int
sti
adc
cmpsb
shl
in
data16
cmpsl
fwait
jb
pop
repz
and
ljmp
and
dec
faddp
shl
or
and
movsb
xchg
add
lock
nop
shll
adc
sub
shlb
fiaddl
outsl
sub
fidivrs
in
and
testl
and
dec
data16
and
sub
mov
das
pop
xor
jp
cs
repnz
sar
scas
mov
pop
inc
dec
fs
mov
ja
es
mov
push
jnp
lods
sbb
cmc
mov
mov
addr16
fnstenv
filds
int3
scas
mov
rolb
mov
out
cmp
flds
cli
jo
loop
addr16
dec
data16
jge
out
mov
adc
ss
sbb
stos
xchg
pop
cmp
xchg
call
and
out
jmp
xchg
xchg
dec
lods
scas
or
imul
sahf
daa
add
jmp
adc
dec
xchg
sub
stos
out
popf
adc
pushf
push
add
jo
test
mov
gs
jle
lret
xchg
movsb
cmc
push
sahf
sbb
pop
xchg
jbe
jge
cmp
or
or
loopne
push
shlb
out
xor
or
jmp
jbe
filds
daa
push
jmp
jno
test
push
cmc
xor
cmpsb
push
mov
ja
pop
push
sub
cmc
daa
jne
pop
aas
inc
movsl
ret
fsubrp
gs
fcompl
xlat
shl
es
ret
ficoml
or
mov
add
cli
mov
add
dec
mov
arpl
std
inc
or
add
scas
inc
mov
movb
add
xchg
popf
mov
dec
mov
inc
mov
aad
adc
lock
add
pusha
movl
out
icebp
out
cs
cmp
sahf
dec
push
jne
inc
and
inc
stc
dec
icebp
shlb
add
or
xchg
stos
mov
jmp
test
clc
ss
les
repz
je
cmc
repnz
jle
inc
sbb
mov
jne
cmp
sbb
aaa
and
or
xor
mov
mov
xchg
jbe
mov
dec
adc
shll
xchg
into
andl
test
ficompl
mov
es
ret
roll
add
pushf
pop
cmpsl
cmp
inc
clc
test
jno
fstps
sbb
or
jg
sti
in
cwtl
jge
outsb
setnp
cmpsl
or
out
ljmp
fidivs
sub
xlat
rcrb
testb
fistl
or
in
stos
xchg
and
fs
inc
imul
push
adc
add
decl
nop
ret
and
push
mov
dec
add
xor
test
scas
sbb
es
add
inc
pand
jne
cmp
xchg
mov
jecxz
enter
mov
sahf
add
incb
pop
mov
ja
pop
jns
lcall
push
out
xchg
fildll
sahf
divb
add
sbb
or
daa
icebp
out
pop
jae
sbb
testl
fwait
jge
adc
and
cltd
fwait
out
xor
inc
jmp
out
aas
add
mov
pop
push
sbb
adc
sbb
inc
repnz
adc
lods
sti
cmp
mov
insb
jle
mov
and
jle
bound
adc
lds
pop
gs
jae
dec
stos
dec
lds
cmpsb
push
fisttps
movsb
rorb
mov
cmp
movsl
rcrb
mov
jge
dec
icebp
inc
pop
pop
mov
add
fisttpll
cs
add
pop
jg
sti
fadds
stc
nop
sub
mov
fstl
out
sub
fs
xchg
dec
mov
popa
dec
adc
out
and
mov
lret
lret
inc
das
push
mov
shr
xor
xchg
mov
or
cmpsb
rcl
add
rcrb
outsb
adc
jecxz
insl
pop
mov
sbb
lods
outsl
sbb
push
sub
orl
gs
stos
jne
imul
ret
cmpsl
in
lea
pop
pop
loop
or
loope
aaa
mov
sbb
popf
mov
mov
mov
and
call
js
adc
arpl
pop
popl
mov
add
loopne
mov
add
out
push
pop
popf
inc
ds
xchg
repz
rol
xlat
xchg
add
js
and
xchg
pop
das
push
push
push
cltd
lods
gs
push
out
rclb
mov
popa
loop
movsl
lods
dec
mov
shr
imul
add
mov
pushf
xor
test
sub
xchg
mov
add
mov
pop
loope
mov
xchg
inc
rorb
js
add
pop
cmpsl
jle
out
adc
in
sbb
sbb
fs
cmc
jne
adc
and
mov
fisubrl
pop
inc
fs
sub
dec
fimuls
bound
mov
mov
add
pop
flds
daa
mov
test
lds
add
xchg
pop
orb
mov
sbb
mov
xor
std
fistl
into
pop
mov
cmpsb
fisubs
shlb
jae
jbe
push
sub
or
and
push
orps
cmp
inc
sahf
sbb
stos
pop
outsl
std
jecxz
lret
jae
aaa
in
and
push
jns
jnp
fs
and
mov
inc
sbb
push
cltd
lds
jmp
ja
push
pop
es
jl
jae
ljmp
outsl
lds
lcall
aas
rorl
pop
jle
outsb
sub
push
adcl
std
dec
lds
into
sbb
sti
out
add
xlat
and
addr16
jmp
push
inc
daa
jmp
cmp
testl
jle
imul
fwait
cmpsl
sub
push
dec
sbb
pop
ficoms
scas
jb
jno
mov
out
test
ret
mov
jae
addr16
daa
sbb
mov
fldl
mov
cmp
push
push
or
push
addl
neg
pop
movsl
push
inc
push
push
fidivrs
cmp
adc
push
in
jg
mov
mov
test
pop
push
and
sbb
mov
out
ja
ss
test
mov
out
inc
xchg
or
or
mov
sbb
mov
hlt
lods
lret
das
cmpsl
outsb
push
test
xchg
pop
and
addr16
jnp
inc
stos
or
xor
xor
dec
test
push
loop
notb
xchg
adc
aad
stc
sbb
stc
or
jl
mov
stos
add
jbe
mov
pusha
ss
pop
mov
mov
mov
jae
cmp
notb
inc
inc
sub
xchg
sbb
mov
mov
xchg
addr16
cmpsl
adc
push
stos
iret
jae
out
aam
xchg
cmpsl
push
dec
push
lods
cmpsl
testb
inc
hlt
cltd
or
ja
rorl
stos
or
inc
add
out
stos
lcall
ljmp
rcrl
das
push
fwait
ja
scas
xchg
inc
and
sarb
lahf
loope
out
push
or
jne
jnp
jns
mov
push
std
ds
mov
in
jno
js
out
mov
fidivs
mov
and
mov
test
and
in
das
es
notb
dec
inc
push
addr16
sti
xchg
jecxz
or
ret
cmpsb
cs
lods
mov
cmpsl
cs
push
dec
int
out
mov
ja
ljmp
sub
movb
idivb
std
pop
test
insl
pop
jbe
and
cmc
cmc
and
jnp
push
mov
outsb
dec
dec
mov
jns
mov
daa
ret
adc
or
xchg
jae
data16
rcll
mov
popa
xor
mov
lock
loop
sbb
push
push
les
daa
xor
mov
or
fwait
les
inc
mov
jb
repnz
add
mov
ljmp
xchg
jne
dec
in
insb
mov
dec
jmp
lods
mov
sub
sti
and
rcrb
repz
or
sbb
xor
sub
cmp
into
cmpsb
sbb
adc
outsl
and
rclb
das
inc
sahf
movq
sub
and
stos
inc
pop
lds
rolb
push
ds
mov
test
add
pop
frstor
inc
jne
mov
mov
loopne
movsl
or
and
mov
icebp
lods
fcmovnb
cmp
loopne
imul
aaa
pushf
sbb
sbb
sub
pop
cmc
push
mov
hlt
les
test
xchg
or
sahf
cld
and
jmp
int
cltd
sbb
xchg
xor
cmp
daa
jge
ret
adc
rep
stos
fisttps
push
add
sti
mov
lret
test
sbb
arpl
pextrw
lcall
insl
mov
mov
out
ss
cmpsl
lea
data16
pop
fisubrs
ss
arpl
sub
push
and
cltd
and
mov
or
lea
fsts
push
es
ds
xorps
sbb
cmpsb
cmpsl
mulb
jnp
outsl
pop
mov
mov
lock
lret
arpl
jne
pop
test
mov
pop
fldt
aam
push
dec
lods
sahf
movsl
subl
xor
fsubl
int
sarb
insl
jne
ljmp
push
pop
jb
ljmp
dec
lea
xor
lds
les
mov
mov
sbb
and
mov
xchg
sahf
shrd
lods
xchg
mov
dec
call
sub
pop
push
mov
xchg
addr16
jle
mov
mov
popa
mov
out
loope
xor
cmpsl
xchg
pop
sub
mov
test
dec
ja
aad
loop
dec
icebp
fs
sar
into
rorb
jno
ret
pushf
faddl
jmp
or
in
cs
dec
sbb
shlb
pop
cmpsl
cmp
in
mov
or
aas
jbe
cltd
cmpsb
inc
in
cmp
push
testb
outsb
scas
sub
xchg
js
lea
mov
ss
mov
out
xor
fs
out
filds
sbb
daa
mov
cmp
mov
mov
mov
shr
add
adc
xchg
mov
int3
dec
jg
jne
add
aas
in
jno
jns
push
mov
daa
cmc
xchg
stc
test
jge
pushf
dec
hlt
and
sub
pop
fmull
mov
mov
movsb
xchg
push
cmpsl
into
test
jb
lahf
gs
icebp
add
sub
cmpsl
dec
insl
repnz
jl
mov
push
and
mov
push
movsl
ja
mov
mov
insl
xor
cli
enter
jcxz
cmp
subb
dec
fwait
adc
inc
les
stc
add
xchg
testb
imulb
lea
and
mov
sahf
adc
jecxz
mov
xchg
mov
sbb
jmp
mov
mov
lret
movd
andb
cwtl
popf
fldenv
mov
subb
cmpsl
xchg
aaa
fwait
int
outsb
adc
cmc
cmp
push
inc
add
sub
and
xchg
sub
pop
fs
ret
pop
xchg
xchg
scas
mov
cmp
addl
inc
pop
in
push
repz
xchg
mov
repnz
add
jnp
push
push
pop
xchg
sbb
pop
out
mov
das
shll
outsl
bswap
xlat
ror
rcrl
pop
pop
dec
addr16
dec
mov
cmc
sub
push
mov
pop
pop
jl
push
sti
js
fiadds
fwait
mov
mov
arpl
inc
mov
fisubrl
push
in
or
sbb
lds
aaa
sub
mov
mov
pop
sbb
or
ljmp
sbb
inc
in
in
jb
push
and
clc
inc
jecxz
add
jo
jne
ds
mov
add
or
dec
push
adc
rol
ja
aas
pop
cs
mov
push
and
xchg
in
mov
lods
mov
jp
mov
insl
movsb
sub
mov
mov
filds
cmc
pop
nop
jmp
inc
lds
sub
add
inc
sbb
jge
cmpsl
lock
ds
testl
insl
sahf
pop
push
jo
fldt
ss
jge
int
xchg
sbb
aad
testb
inc
daa
mov
stos
jae
mov
push
mov
inc
pop
fisttps
pushf
mov
lret
jnp
cs
outsl
das
xchg
mov
push
int
or
add
lds
adc
cmc
lret
out
pop
iret
daa
loopne
xlat
jge
je
push
xchg
jae
adc
jle
push
push
pop
jle
add
fstsw
orl
xor
fsubp
pop
and
and
inc
negb
mov
fldl
ret
ffreep
inc
cs
fistl
lock
jae
aaa
leave
fcmovb
inc
lret
cmp
rorl
xchg
sub
mov
xchg
fsubrp
and
and
pusha
sbb
out
rclb
sub
adc
idiv
rolb
push
pop
add
outsb
jno
pop
dec
add
mov
inc
xchg
xchg
out
aaa
add
sbb
loope
mov
clc
out
mov
push
mov
scas
loope
cmpsb
push
aaa
jne
fadds
sbb
pcmpeqb
sub
cmpsl
negl
popf
loope
shll
test
mov
lds
lock
mov
int
mov
aam
sbb
jmp
dec
mov
fstl
push
insl
sub
sub
gs
hlt
cs
inc
xlat
pop
mov
mov
aam
adcb
cs
rorb
insl
xor
pusha
xor
inc
inc
test
sub
ljmp
mov
roll
adc
xchg
xchg
test
push
stc
fimull
addr16
or
ret
je
mov
push
push
into
sbb
jo
dec
cmpsl
xchg
mov
out
or
or
insl
cmpsl
mov
jecxz
test
adc
mov
inc
cli
push
lcall
push
shlb
loopne
inc
inc
ror
or
sbb
imul
jecxz
aad
ret
jecxz
test
lret
xchg
cmp
add
imul
xchg
mov
popf
add
pop
pop
test
sbb
repz
inc
xchg
jg
test
xor
mov
imul
aad
in
or
jmp
outsl
dec
push
repz
fs
push
sbb
popf
into
inc
xchg
fwait
mov
shll
testl
es
inc
mov
or
enter
outsb
inc
mov
dec
ds
inc
fs
je
ljmp
xchg
test
add
cmc
add
jae
adc
shr
inc
sti
xchg
and
xlat
fildll
repz
repz
and
xchg
jmp
inc
adc
es
movsl
repz
js
cmp
ret
out
inc
arpl
cwtl
popa
out
inc
test
or
outsl
ret
xchg
subl
shl
fwait
call
push
ja
out
mov
pop
sub
cmp
add
cmc
jmp
fbstp
cmp
xor
mov
sbb
mov
pop
pushl
addr16
into
es
outsl
out
xor
loop
lds
xor
mov
jb
test
mov
dec
mov
jo
in
sub
movsl
fwait
roll
js
scas
lock
dec
inc
daa
xchg
lds
stc
lea
movsl
inc
adc
sbb
adc
lods
or
lcall
adc
dec
sub
ja
pop
sti
negl
push
xor
cltd
mov
lahf
int
push
pop
jg
in
jne
rcrb
mov
cmpl
fisttpl
pop
test
cld
pop
mov
or
or
daa
leave
fistl
scas
rcr
lret
xchg
addr16
cs
add
lods
stc
fidivs
inc
push
cmp
xchg
push
adc
sub
or
jnp
push
xchg
daa
or
pusha
xchg
ret
cmpsb
rolb
in
sub
mov
lcall
push
jbe
jno
mov
sub
in
xlat
jo
jmp
lea
lret
pop
xchg
addr16
pop
pusha
fisubs
js
mov
mov
and
fsub
sbb
pop
cmp
lea
sbb
insl
cmpsl
imul
lea
jns
cs
push
mov
or
test
jmp
jae
out
lahf
in
xchg
scas
cmp
sub
fs
sahf
pop
dec
ror
mov
adc
lds
mov
scas
dec
lds
in
addr16
cmpsl
daa
mov
sbb
pop
cmp
fimull
mov
push
daa
push
pop
pop
xor
jne
pop
hlt
cmp
cmpsb
movsl
jle
pop
mov
test
into
push
push
pop
jnp
jge
test
das
mov
repnz
mov
or
test
jnp
lock
cmp
adc
pop
cmp
mov
mov
adc
sarl
jns
aaa
mov
jecxz
xchg
xor
movsl
push
push
aas
xchg
stos
pop
cmp
dec
fstpt
insl
ret
daa
daa
dec
into
push
shl
inc
jge
shlb
scas
push
sub
xchg
stc
jae
and
xchg
mov
in
shrb
mov
mov
xchg
jne
imul
fwait
pop
lret
xchg
repnz
roll
gs
xchg
cmp
insb
sti
stos
or
xor
repnz
lahf
cmpsl
pop
xchg
movsl
inc
leave
mov
mov
xchg
inc
loope
push
cmp
rclb
jne
das
imul
std
out
pop
mov
sbb
xorl
mov
dec
adc
test
stos
js
cmpsl
jne
push
test
pop
gs
inc
mov
adc
icebp
out
xchg
pop
aas
aaa
mov
test
rclb
push
subl
pushf
mov
inc
dec
in
sub
push
or
shl
sub
dec
push
sub
pop
xor
dec
mov
xchg
insb
les
popa
sub
aad
negb
inc
push
lods
mov
add
pop
xchg
outsb
or
jge
jmp
jne
aam
inc
cltd
out
jmp
mov
xor
pop
dec
sahf
rcll
and
in
cmpsl
add
mov
fstpt
xchg
out
rorl
sub
jae
rcll
insl
scas
and
repz
outsl
push
jnp
push
in
xchg
test
sbb
mov
xchg
mov
addb
in
adc
inc
push
dec
orb
insb
rol
rolb
es
pop
cmp
adc
cmp
mov
jecxz
cmp
xor
jbe
pop
cltd
xchg
icebp
stc
mov
fwait
ds
mov
push
dec
rol
and
je
push
aaa
fldenv
push
gs
sbb
and
addr16
iret
xlat
mov
pop
int
sbb
xchg
adc
lret
notl
sbb
sub
mov
cld
push
xor
dec
aam
aad
or
or
xchg
xchg
adc
inc
pop
inc
in
xlat
pop
inc
je
xchg
jmp
pop
js
dec
xchg
push
jmp
xchg
and
and
mov
mov
dec
in
hlt
pop
mov
jno
out
int
ja
xor
push
cmpsl
pop
mov
faddp
movsl
jns
scas
pop
int
mov
mov
push
es
or
pop
mov
inc
pop
mov
stc
add
pop
dec
aas
je
dec
or
mov
mov
hlt
adc
jae
icebp
pop
test
cs
decl
ret
scas
ja
sub
and
mov
sub
pop
sbb
scas
rorl
mov
push
dec
pop
mov
mov
mov
lds
dec
lock
mov
movsl
pop
into
add
sbb
out
leave
jmp
mov
mov
push
ret
push
js
daa
out
mov
xlat
adc
inc
aad
cmpsl
mov
cmp
mov
adc
jne
test
js
hlt
js
mov
push
jp
les
scas
js
mov
and
fisttpll
xchg
xchg
mov
inc
mov
dec
mov
xchg
inc
leave
push
stc
add
fidivrs
mov
sbb
fs
in
stc
leave
sti
clc
inc
sbb
jg
adc
dec
out
fimull
cli
ret
leave
pop
and
repz
out
iret
jg
imull
movsl
lods
aad
imul
mov
xchg
ret
cwtl
jg
addl
and
lock
xchg
int
adc
pop
mov
add
sub
sahf
pop
in
adc
enter
in
ss
shll
sbb
xchg
mov
outsl
mov
rol
outsl
nop
roll
jo
data16
movsb
iret
mov
scas
scas
add
xchg
insb
aas
and
jge
or
xor
pop
mov
mov
repz
sbb
mov
xchg
pop
imul
ret
jecxz
es
push
test
mov
aam
inc
dec
cmp
aam
push
push
shl
cmpsb
not
stos
ja
dec
xchg
ja
inc
cmpsl
imul
or
loope
cs
adc
lret
incb
mov
jnp
and
add
insl
out
rcrl
loope
cmp
or
cmpsb
stc
mov
mov
mov
adc
mov
cmp
adc
pop
daa
sub
dec
clc
rorl
mov
cltd
popa
add
dec
shl
clc
xor
lea
jb
or
mov
and
cmc
mov
movl
pop
iret
ret
aad
je
add
mov
scas
pushf
cmp
mov
inc
mov
mov
jle
and
xchg
mov
mov
sbb
and
dec
idivl
pop
das
stc
inc
gs
in
or
test
or
jge
xor
mov
dec
dec
popa
in
cltd
and
adc
push
xchg
stos
roll
jnp
std
imul
pop
push
mov
shrb
add
shl
jne
cmp
frstor
stos
in
fimuls
sbb
add
dec
scas
in
cli
jecxz
lods
in
xchg
jno
sbb
pop
inc
push
and
mov
push
daa
pop
sti
out
out
or
loop
xor
xlat
es
in
in
push
cmp
xlat
movsl
testl
mov
cli
mulb
in
xor
dec
add
pop
icebp
mov
sbb
icebp
les
xchg
fs
ret
add
addb
into
cwtl
ss
movsb
test
ja
push
dec
pop
addl
mov
rol
jle
ret
inc
mov
arpl
jmp
mov
add
mov
sub
fadds
push
ja
enter
popf
gs
xor
dec
lods
inc
stos
jno
shrb
ds
sbb
lcall
jae
pusha
adc
lds
mov
mov
push
leave
enter
orl
mov
scas
xchg
mov
nop
lock
ficomps
jmp
aaa
es
jmp
cmp
fs
mov
fwait
xchg
and
xlat
sub
call
lock
dec
jge
test
push
mov
inc
and
pop
ja
cmpsb
rcr
cmpb
jnp
xor
and
cmc
stos
popf
pop
adc
jge
ds
data16
add
aas
sbb
lods
xor
inc
inc
lods
cltd
add
icebp
lds
test
adc
push
je
iret
scas
roll
jg
dec
mov
imul
out
mov
sarb
mov
paddusw
ret
cs
sahf
insb
pop
jae
pushl
cmpsl
cmpl
sarl
push
sti
jnp
lods
inc
fucomi
jae
xchg
jge
push
sar
lock
das
mov
gs
jns
xor
xchg
gs
fsubl
movl
das
int3
xor
mov
mov
cmpsl
fnsave
outsl
xlat
jmp
pusha
aas
test
fwait
pop
xchg
repz
push
sub
dec
ret
movsb
lret
outsl
in
out
roll
cmp
popf
mov
icebp
push
dec
push
pop
imul
jge
mov
mov
xor
jno
setp
out
std
mov
cmp
cs
jb
jg
push
outsb
icebp
scas
leave
push
stc
inc
testl
push
add
cld
insl
pop
adc
xor
mov
and
push
fsubl
jge
rorb
inc
sti
movsl
das
add
sbb
xchg
jl
sahf
dec
aaa
movsb
xor
aad
scas
mov
out
dec
test
push
mov
lcall
daa
jmp
inc
xchg
pop
or
or
mov
call
aaa
mov
aam
aaa
or
incb
filds
loopne
jno
lfs
jp
jb
sbbl
popa
pop
pop
mov
xchg
das
add
adc
push
in
rorl
cs
stos
fcmovu
adc
pop
jo
push
pop
je
das
pop
out
mov
xchg
push
adc
rcll
sahf
adc
lods
mov
push
aad
mov
mov
mov
das
cmpsb
stc
and
pop
xchg
repz
hlt
jecxz
mov
jb
xor
test
add
out
jle
daa
jnp
movl
and
xlat
add
cwtl
mov
add
and
arpl
ds
jmp
mov
sahf
push
xchg
in
rolb
out
shrl
dec
lahf
ret
and
xor
rcll
xchg
jbe
xchg
das
ds
mov
roll
and
es
lcall
rcr
bound
jmp
sub
into
imulb
ret
cmp
fwait
push
add
shlb
adc
xlat
sti
cmpsl
xor
sbb
pop
hlt
mov
lods
movsl
mov
out
scas
add
notl
mov
lods
cmp
testl
ret
cmp
les
nop
jno
add
mov
pop
mov
cmc
jne
fwait
dec
adc
fmull
sbb
jne
and
or
rclb
add
notb
and
inc
in
push
bnd
jg
or
ja
hlt
cmpsb
jne
lds
sub
add
jb
popa
call
stos
inc
adc
fwait
out
or
adcb
loop
push
repz
insb
ja
push
push
stc
lds
and
sbb
sub
pop
sbb
clc
repnz
and
mov
xor
test
lahf
xchg
sti
leave
push
push
lret
jge
fstp
mov
popf
pop
push
mov
mov
andl
addr16
sub
mov
cmp
add
dec
das
out
xor
jge
adc
push
lcall
aas
and
out
or
or
insl
mov
mov
out
jns
imul
adcl
iret
xor
ljmp
ret
out
int
mov
out
inc
out
push
add
ja
divl
enter
or
push
lds
mov
mov
ret
mov
inc
ret
dec
xlat
pop
push
mov
xchg
mov
add
adc
shlb
and
push
add
movb
push
std
orl
inc
xchg
cmc
mov
mov
dec
sub
fcompl
fistpl
ret
jns
packuswb
das
sbb
dec
pop
cmp
jbe
push
or
jg
ret
lods
and
sar
jae
movl
mov
insb
mov
mov
cmpsl
pop
cmp
outsb
imul
mov
sbb
xor
scas
les
das
out
loop
popf
mov
faddl
int
xchg
je
popa
jae
out
add
fisttps
lods
popf
cli
test
push
imul
sarb
jo
cld
inc
xchg
ret
jb
push
mov
inc
mov
dec
fstpl
mov
int3
addr16
or
les
test
aaa
mov
xor
ja
lds
testl
test
mov
mov
lahf
cmc
nop
push
jecxz
cs
outsl
fdivs
inc
jmp
fs
ror
scas
adcb
pop
adc
dec
mov
xchg
mov
jo
and
push
popf
push
inc
sbb
mov
xor
movsl
lahf
mov
cmpsl
adc
scas
jmp
das
ds
test
std
mov
jmp
leave
mov
test
orps
push
stc
clc
cmpsl
insb
mov
push
xchg
je
popf
jge
xor
and
stc
add
stos
pop
add
sub
jmp
ret
jle
pop
fwait
add
cmpsl
shrb
mov
out
lds
or
scas
scas
rorl
cli
xor
xlat
jbe
fucomip
pop
xor
xchg
dec
mov
bound
xor
iret
cwtl
sar
fadd
leave
push
push
inc
or
ljmp
sbb
mov
jge
sahf
notb
sbb
iret
in
mov
push
in
scas
dec
push
mov
add
adc
jb
in
sub
lret
mov
divl
push
or
mov
mov
mov
out
pop
xchg
fidivs
cmpsb
pop
mov
ds
cmp
fucomip
xchg
les
addr16
sbb
dec
pcmpgtd
cli
icebp
jmp
add
pusha
mov
cs
pop
xchg
dec
jg
push
mov
dec
lods
fistpll
cltd
inc
aam
fidivrs
in
jo
dec
mov
cmp
jl
ds
add
into
movsb
cmc
movsb
dec
jl
ja
loop
fwait
push
adc
and
mov
out
es
decl
clc
testb
xchg
iret
roll
loop
loopne
out
mov
push
insb
decb
mov
and
pop
sar
mov
mov
xor
inc
pop
fbld
lock
out
andb
jne
mov
jae
push
cmp
shlb
call
in
addl
test
inc
mov
cltd
fdivp
scas
stc
jb
cli
push
mov
mov
and
jnp
cmpsl
pop
jne
mov
hlt
adc
jnp
ds
xchg
dec
les
das
xorl
inc
mov
shll
les
addr16
mov
addl
inc
mov
dec
add
jmp
add
cmp
into
pop
xchg
mov
les
xchg
cmpl
cmp
xor
repz
jle
jo
loope
xchg
adc
cwtl
pop
incl
pop
mov
mov
std
dec
lahf
arpl
xor
lock
shrb
popa
inc
jne
subl
mov
xor
cmp
divl
dec
lahf
pop
movsb
ret
jp
leave
int
cmp
push
and
pop
cli
test
sub
pop
stc
test
leave
xor
dec
xchg
adc
in
xor
cli
imul
cmp
roll
stc
or
push
dec
push
pop
mov
loope
out
out
xchg
test
or
insl
cmpsb
gs
sbb
xor
pop
das
mov
cltd
adc
out
pop
loop
out
pop
xchg
and
cmpsl
inc
out
cmp
inc
std
mov
jmp
adc
pop
add
movsl
push
xchg
cwtl
pop
scas
sti
fsubr
and
xor
and
movsl
pop
jp
mov
outsb
fprem
and
outsb
mov
stos
jecxz
push
pop
sub
mov
faddp
clc
jge
in
jge
movsl
sbbl
mov
jnp
fcmovnb
iret
lods
jmp
test
push
push
push
mov
push
inc
lods
inc
xchg
popf
adc
ret
adc
mov
scas
add
subl
orb
jle
movsb
in
sti
clc
sbb
iret
cmpsl
mov
rcr
movsb
fisubrs
jle
jg
clc
testl
mov
test
mov
inc
jno
sub
push
and
push
js
in
fwait
mov
xlat
aad
mov
fldenv
scas
xchg
add
inc
dec
out
dec
stos
lea
in
out
mov
inc
repnz
pusha
sarl
out
mov
cmpsl
faddl
add
fistpll
and
jmp
out
dec
mov
out
and
adc
xchg
icebp
jne
cmpsl
xchg
cli
pop
push
jb
dec
push
les
jle
test
jp
xchg
out
dec
cwtl
test
push
adc
pop
cmp
mov
in
pop
jg
out
std
and
rorb
lods
out
data16
cmpsl
adc
stos
std
mov
or
cmp
dec
and
shlb
js
add
lea
sbb
pop
jmp
ret
outsl
dec
mov
lcall
out
or
cs
je
aaa
cltd
mov
outsl
scas
adc
bound
sbb
test
out
add
std
xchg
cltd
arpl
push
cli
push
jbe
pop
dec
stc
addr16
mov
addb
dec
cli
inc
jmp
inc
mov
pop
ss
call
push
pop
jns
sub
sub
inc
inc
into
lods
pop
test
mov
stos
movsl
pushf
pop
test
rorl
jg
sahf
jno
jmp
mov
pop
outsl
fadd
sub
lea
mov
pop
or
rol
lret
jb
inc
xor
mov
add
jne
das
inc
pop
add
out
mov
fwait
and
sbb
lea
jae,pt
jbe
mov
test
out
fldt
xchg
stos
push
jle
fisubs
addr16
cmc
mov
jo
pop
shrb
pop
imul
lds
fldenv
inc
shll
pop
in
mov
sahf
pop
scas
xchg
adc
call
jo,pn
push
bound
ljmp
nop
sub
outsl
clc
mov
push
lret
repz
std
movsb
xor
jmp
out
scas
out
imul
popf
dec
sub
pop
sbb
jmp
ds
imul
out
mov
xchg
cmp
daa
sbb
push
arpl
shlb
dec
pop
loope
stos
filds
mov
sub
in
out
pop
stos
mov
xor
sbb
imul
test
insb
daa
push
mov
dec
inc
mov
test
xchg
xchg
add
outsb
sahf
scas
mov
cmp
jmp
ds
movsl
rorl
subl
fdivs
inc
in
movsb
pop
imul
dec
andl
inc
cmp
cmc
into
movsl
inc
stos
adc
dec
cwtl
jne
fldcw
ret
jle
cs
in
add
pop
daa
or
test
add
or
and
xorb
pop
xor
fdivl
push
mov
sub
inc
aad
je
xor
and
mov
or
in
sub
repz
lds
cmpsb
jp
daa
sub
out
mov
mov
repz
daa
mov
repz
push
leave
out
cs
cmp
fs
fst
das
popa
movsl
repz
sub
negb
cmpsb
push
loope
std
divl
jns
mov
inc
ret
gs
test
cmp
sub
fs
push
push
add
pop
cmp
int
add
out
jecxz
or
and
jne
inc
fsts
addl
imul
scas
push
adcl
cmp
mov
add
scas
add
jg
stos
scas
test
lods
leave
hlt
dec
aas
mov
jecxz
aas
push
test
jnp
jae
xlat
call
stos
push
jb
lcall
int
pop
adc
adcl
sbb
rorb
and
or
xchg
aad
jns
adc
out
adc
jge
or
mov
adc
daa
mov
xorl
js
fldt
rcrl
sbb
pop
mov
add
stos
and
cld
jecxz
adc
mov
pop
lahf
jns
sbbl
cmpsb
jbe
cwtl
sub
mov
add
mov
fs
cwtl
adc
loop
daa
arpl
mov
loopne
add
push
sub
sbb
adc
loopne
lods
sbb
cmp
adcb
pop
dec
clc
and
in
clc
cltd
mov
loope
mov
jle
in
scas
testl
mulb
cmpsb
lods
in
lcall
sahf
lods
push
jmp
inc
insl
ljmp
mov
test
pop
add
xor
mov
lods
xor
adc
loope
ja
mov
mov
and
mov
aam
jmp
test
or
adc
dec
pop
inc
pop
mov
jp
jae
or
cmpsl
lds
mov
mov
mov
rclb
scas
repnz
mov
adc
mov
sub
sti
mov
pop
movsw
mov
loope
jno
and
jle
pop
cmp
cwtl
push
and
pop
addr16
dec
xchg
pshufw
std
add
daa
insl
mov
xchg
inc
add
inc
or
jl
inc
out
out
sbb
ljmp
cmp
test
add
stos
ljmp
jecxz
or
xchg
movsb
adc
call
les
loop
aas
in
and
adc
sbbb
std
out
movsl
cld
or
jnp
scas
sub
sbb
repz
mov
dec
int
in
adc
inc
test
push
pop
pop
sti
sub
pop
sahf
pop
push
and
int
dec
sarb
shrb
add
or
andb
test
mov
daa
pop
fs
lea
dec
sub
int
stos
sarl
pop
push
dec
sub
dec
data16
lds
sarb
out
or
sbb
dec
jecxz
repz
shll
xchg
in
push
fnstsw
rorb
repz
in
adc
lds
xor
mov
rcr
mov
push
mov
and
push
int
out
shlb
jmp
inc
lret
repz
ror
sub
jbe
outsb
lods
fdivp
mov
into
out
divl
loop
shl
addb
adc
inc
mov
sbb
in
adc
shlb
or
lcall
mov
adc
and
stos
int3
stc
ror
out
inc
jge
mov
pop
ret
mov
sti
leave
jge
cmc
mov
int
je
popf
daa
cmp
adc
jb
out
repz
mov
mov
inc
cmp
cmc
mov
cltd
lret
ret
lock
add
popf
inc
sub
mov
push
and
push
mov
cmpsl
lds
leave
push
sbbb
pop
js
movsl
pop
and
test
je
adc
jne
push
test
movsb
fistps
jg
inc
add
jno
rcrl
roll
icebp
popa
jb
inc
das
test
push
mov
cmpsl
cmp
insb
cs
popa
fwait
aas
les
mov
bound
sti
mov
push
jmp
jne
add
pop
scas
and
xor
push
mov
jg
mov
lcall
cmp
out
mov
test
sbbb
jecxz
mov
and
out
mov
clc
es
vmptrld
inc
pop
add
inc
mov
addr16
jne
repnz
inc
lods
xorb
fistpll
std
das
mov
into
push
out
sub
mov
outsl
and
mov
mov
loope
sub
lea
imulb
dec
mov
add
cmpsl
loope
mov
sub
lds
pop
lahf
bound
fstpt
shl
insb
addr16
xchg
inc
fwait
xchg
pushl
shl
out
or
addr16
pop
lods
xlat
or
rolb
and
sub
loope
pop
cmpsb
stos
cmp
hlt
mov
fwait
dec
mov
leave
inc
arpl
pop
mov
pop
clc
in
daa
push
ljmp
inc
xchg
cwtl
dec
mov
add
out
or
xchg
call
jge
aad
push
daa
cmp
xchg
in
sub
fucomi
inc
movsb
xor
cli
fs
in
mov
add
xchg
scas
roll
push
insb
cmpsb
ljmp
iret
stos
sbb
nop
aas
sti
add
push
sbbb
adc
repz
mov
jle,pt
scas
or
dec
ja
add
mov
cmp
sbb
push
gs
push
popf
pop
mov
sub
mov
aaa
dec
cmp
mov
jo
ja
sbb
mov
push
jno
xchg
mov
and
lcall
pop
ret
lds
push
cmpsl
or
lret
inc
dec
out
and
push
lods
push
outsb
pop
pop
mov
inc
xchg
jmp
sub
outsl
inc
sbb
aam
xlat
xchg
push
stos
dec
ficompl
in
scas
pop
test
or
inc
fsts
sub
adc
or
in
and
in
xchg
dec
inc
sar
pop
in
ja
stos
xlat
je
out
mov
fistpll
cs
adc
orb
adc
push
stc
xchg
add
jge
dec
adc
fildl
loope
inc
jbe
andl
xchg
idivl
sub
mul
or
out
aad
daa
mov
add
inc
out
xchg
jecxz
cs
divb
mov
mov
popa
jne
inc
dec
pushl
inc
pop
sti
sub
dec
push
ret
mov
jno
inc
push
shlb
mov
fwait
xchg
sub
pop
stos
sbb
bound
xchg
sahf
mov
or
fsubs
nop
push
filds
add
das
icebp
aaa
ret
xor
add
fwait
loopne
fcomi
and
xchg
sbb
sarb
dec
ret
mov
pop
pop
and
jnp
loop
enter
andl
aaa
js
scas
ret
test
cmc
mov
lcall
add
jmp
insl
loop
test
fistpl
lods
inc
add
adc
xor
jnp
out
pop
jg
std
mov
rclb
cmp
test
out
mov
movsl
pop
sbb
inc
jnp
inc
mov
sahf
lcall
fdivs
insb
testb
xchg
dec
add
xor
hlt
aam
jg
arpl
movsl
loop
push
adc
adc
cmp
cmpsl
cs
inc
inc
cmc
test
cmp
mov
mov
cmpsl
pusha
mov
xchg
loope
add
fmuls
fs
stos
jg
jle
xchg
xchg
cmp
xchg
hlt
pop
inc
xchg
sub
in
sub
jg
lods
shlb
adc
pop
sub
pop
call
lahf
pop
imull
cmp
jo
mov
dec
pop
cmp
dec
or
jl
mov
add
js
jo
out
adc
icebp
sbb
and
pop
push
pop
jle
orb
adc
and
das
lcall
movsl
outsl
ret
pop
lods
or
xor
mov
cmc
fldl
adc
inc
addb
ljmp
faddl
scas
xor
sbb
push
add
cmp
mov
inc
xchg
adc
pop
repnz
xchg
or
dec
and
add
and
cwtl
xchg
enter
test
shl
pop
mov
dec
jge
cmpl
sbb
xchg
mov
pop
sti
cmp
gs
jge
mov
fs
push
icebp
cmc
mov
push
lea
rolb
mov
loopne
xor
fdivrl
dec
loop
stc
mov
mov
addr16
pop
pop
gs
addb
xor
jmp
rclb
inc
jl
imul
inc
lock
ljmp
test
mov
in
push
and
movsb
inc
lds
pop
int
push
addl
and
or
pop
popa
inc
mov
popf
inc
inc
insb
dec
lock
ss
sub
test
repnz
ret
pushl
inc
dec
test
in
jb
aad
or
test
xor
inc
or
dec
add
adc
pop
test
pop
cmp
scas
addr16
jge
call
pop
dec
jp
cld
push
xchg
in
jae
pop
sahf
cmp
jne,pt
loop
test
mov
mov
nop
push
cs
jp
ror
in
xor
cmpb
aaa
orb
rcrb
mov
js
insb
in
pop
enter
lcall
nop
std
pushf
mov
mov
fdivrl
sti
adc
mov
push
mulb
dec
mov
sbb
push
xchg
out
imul
into
cltd
push
mov
pop
push
adc
into
addr16
out
popl
jno
nop
add
adc
xor
insb
cmp
push
sbb
hlt
inc
cmp
out
jb
test
xchg
hlt
xchg
xchg
cmp
push
iret
add
ficoms
mov
sub
data16
and
mov
ret
decl
add
ljmp
jecxz
cs
xchg
leave
jo
mov
lahf
iret
xchg
mov
les
ds
mov
movsl
inc
or
into
push
leave
in
mov
sarb
out
rorl
pushf
jne
dec
filds
mov
mov
ret
test
mov
sbb
in
movsl
repz
shlb
ror
jle
out
shrb
inc
outsl
out
rorb
and
in
and
pop
stc
jg
dec
cwtl
scas
movl
rolb
movsb
add
xchg
lahf
rolb
neg
loop
loopw
ret
inc
test
and
mov
bound
lds
out
pop
push
add
rcrl
dec
shlb
lea
xchg
fadd
cmpsb
mulb
daa
ffreep
lret
addr16
out
shrb
ror
and
out
shrb
jg
aad
movsl
push
loope
int
mov
push
jecxz
cmp
pop
add
jle
and
cmpsl
dec
aad
imul
fildll
push
xchg
mov
xchg
movsl
sub
sub
cmp
cmp
cmp
xor
cmp
xor
xor
xor
xor
test
mov
out
and
inc
outsl
cmp
jecxz
data16
inc
mov
stc
pop
shlb
rolb
add
shrb
pop
clc
clc
inc
jbe
add
shrb
add
rorb
stc
aaa
rcl
scas
jecxz
fst
loop
adc
jge
cmc
sti
loope
out
jmp
rcr
testb
add
mov
pop
test
inc
sahf
shlb
add
test
div
mov
notb
adc
jne
cmpsl
add
jne
xchg
mov
xchg
arpl
mov
xchg
inc
inc
xchg
mov
xchg
daa
inc
mov
aas
xchg
adc
xor
loop
xchg
les
xchg
mov
adc
inc
push
mov
xchg
bound
mov
xchg
inc
inc
xchg
mov
test
xchg
jg
inc
aam
iret
mov
jg
jbe
pop
loope
aas
add
ret
pop
add
movsl
pop
add
xchg
push
jg
xchg
jbe
jbe
jne
inc
add
push
mov
imul
xchg
add
pop
add
bound
add
rcr
test
shrb
int
xor
fs
fdivp
xchg
out
lods
out
stos
inc
rcrb
xchg
xchg
push
inc
jnp
fsts
and
shrb
pop
inc
jo
fldln2
divw
jge
ret
lret
je
add
filds
imul
shrb
sbb
xchg
cwtl
fcoml
xchg
aas
lock
mov
fs
mov
out
dec
aas
outsl
daa
lods
shlb
arpl
push
push
fidivs
test
jg
in
fdecstp
jg
ss
out
rcrl
push
dec
lock
sub
arpl
inc
cmpsl
cli
scas
jne
or
lret
std
repnz
aaa
pop
sub
mov
sbb
inc
andl
int
push
jecxz
cwtl
fs
ds
pop
inc
fsubrl
and
fnstcw
sub
std
call
inc
dec
pop
lret
jo
xchg
call
cmovp
adc
js
lock
dec
adc
fwait
sbb
inc
pop
addl
fisubrl
fs
xlat
mov
dec
daa
jmp
clc
push
push
flds
xchg
adc
mov
or
or
xchg
mov
jae
sbb
pop
outsb
jg
inc
leave
test
ret
mov
test
xor
mov
data16
loop
push
in
push
and
jg
mov
enter
xchg
in
mov
test
out
aam
aas
or
out
xchg
sbb
jnp
les
movsw
or
bound
mov
push
add
adc
cmpb
int3
mov
shll
loope
adc
inc
ffree
inc
cmpsl
aam
mov
sub
mov
jno
lahf
inc
jno
mov
jp
inc
lock
mov
push
mov
pop
aaa
adc
and
stos
fstpl
cli
addr16
lret
loope
out
and
int
loope
out
and
cmc
jbe
jo
ljmp
addr16
dec
lahf
jecxz
xor
add
mov
inc
fadds
jns
push
cmpsl
rol
pop
lods
push
xor
sub
ja
scas
ljmp
cmovnp
xchg
rclb
add
mov
xor
pop
push
push
in
out
inc
cs
add
cmc
iret
mov
in
add
pop
aaa
and
dec
mov
sbb
xchg
rcrl
cmp
cmp
push
and
dec
cmp
lret
mov
fwait
jnp
xchg
mov
addr16
dec
pop
pushf
jmp
sahf
xchg
test
std
data16
test
dec
inc
or
and
scas
pop
mov
dec
mov
xor
stc
jg
scas
popf
jne
xor
js
fistpll
sbb
out
xchg
loop
cwtl
aam
mov
sarb
or
orb
inc
cmc
sbb
dec
jno
cmp
mov
sarl
cmpl
adc
notb
sbb
test
sub
js
add
and
or
dec
incl
jns,pn
adc
lds
fldenv
fldl
cmpsl
repz
mov
mov
and
inc
pop
out
mov
movb
jae
aaa
inc
cli
repz
scas
mov
lods
lahf
add
lahf
add
add
in
pushf
inc
icebp
add
xchg
movl
fidivrs
enter
int
adc
inc
pop
inc
jns
sbb
test
push
insb
inc
mov
inc
mov
aam
xchg
mov
addr16
mov
jmp
shl
fadds
unpckhps
jbe
cmpsb
mov
mov
xchg
mov
outsb
outsl
mov
pop
pop
shl
daa
pop
jecxz,pt
push
addr16
dec
ds
xor
mov
je
mov
in
out
adc
cmpsb
jl
je
cld
cmpsb
in
mov
loop
jns
leave
jns
mov
mov
or
lods
ret
std
cmpsb
jne
shrl
cmp
out
stos
mov
cmp
pop
xor
icebp
mov
inc
shrl
test
scas
cmp
jae
popa
sbb
ffreep
mov
scas
jbe
cmpsl
mov
sbb
ljmp
dec
add
je
into
xchg
inc
inc
pop
out
out
inc
lds
sti
leave
sti
xchg
inc
adc
cmpsb
push
mov
mov
and
stc
xchg
dec
adc
je
dec
jae
cmp
or
ret
fnstenv
es
scas
in
xchg
shlb
push
or
outsl
push
rcrb
pop
inc
and
mov
fldl
mov
add
xorb
je
es
or
or
pop
rcrb
or
std
jno
scas
add
mov
mov
inc
xor
dec
dec
testb
mov
pop
mov
push
pop
iret
daa
jecxz
fs
push
adc
insb
rcll
dec
add
pop
inc
mov
xchg
cmp
mov
daa
mov
mov
pop
ja
lock
cmp
addr16
into
push
pop
dec
sbbl
cs
inc
int3
scas
dec
pop
das
inc
push
push
scas
mov
sub
xlat
push
mov
pop
jae
jnp
arpl
cltd
insb
push
mov
loop
repz
js
les
push
jno
test
mov
inc
fnstsw
imul
jg
mov
outsb
push
inc
arpl
sbb
stos
jg
xor
inc
cmp
scas
popa
insl
out
sbb
pop
push
fildl
out
adc
ss
ret
sbb
subb
sub
mov
adcl
or
inc
test
call
push
xchg
mov
or
adc
adc
sbbb
and
dec
push
mov
test
and
test
sarb
stos
fcomip
mov
push
sahf
ljmp
or
adc
inc
mov
shrb
aas
es
out
mov
in
inc
cmpsw
inc
shlb
push
sub
mov
cmp
xlat
inc
mov
and
testl
iret
notl
and
push
shr
adc
inc
in
iret
jmp
dec
and
ljmp
addr16
adc
mov
icebp
cmp
push
stc
cli
mov
out
test
jge
pop
cmpsl
or
sub
enter
xchg
lea
push
stc
insb
dec
inc
aad
loope
xchg
sbb
push
movsl
int
push
xor
mov
xchg
jmp
xchg
dec
loopne
xchg
add
xchg
out
es
enter
sub
adc
xchg
std
in
out
in
jge
mov
or
push
sbb
dec
movl
inc
adc
mull
xchg
pushf
stc
fsubrl
out
mov
rcl
mov
mov
pop
rcrl
add
adcb
push
andb
push
lds
in
aam
cmpsb
rcrl
daa
fld
icebp
mov
scas
xchg
pop
xchg
rclb
call
inc
dec
cmpsl
xchg
iret
fs
mov
vmptrld
jmp
fnstsw
incl
xlat
sub
gs
dec
testl
scas
mov
test
incl
out
jge
dec
sub
mov
or
loop
add
shlb
je
mov
std
cmpsb
jmp
sub
test
mov
out
dec
clc
jp
mov
add
out
pop
les
adc
dec
xlat
mov
fld
adc
shll
test
lret
jmp
pop
cli
addb
or
fwait
mov
dec
add
push
lahf
xlat
ds
pop
popf
cs
adcb
xor
xor
cmp
xchg
xchg
inc
xchg
or
test
adc
fucomp
mov
xchg
pop
into
inc
into
pop
ds
xchg
or
icebp
pop
pop
fisttps
sub
push
daa
scas
rclb
push
add
dec
inc
jae
outsl
inc
sbb
ja
std
hlt
lahf
in
push
clc
lcall
jl
xchg
loope
xor
jb
mov
jge
flds
aas
pop
mov
test
push
aad
incl
fs
add
dec
pop
icebp
pop
sbb
cmpsl
leave
jecxz
sub
or
mov
scas
cmpsb
popf
es
shll
out
mov
add
in
add
jne
xchg
shrb
dec
sbb
dec
cmpsl
and
add
scas
into
lods
cmpsl
add
stos
loop
dec
mov
pop
sub
pop
pop
push
inc
rol
cmpsb
pop
lret
xchg
in
je
mov
aaa
xchg
jge
icebp
repz
decb
nop
popf
cmp
push
enter
sbb
lods
outsl
movsl
jp
sbb
dec
fcompp
or
dec
pop
mov
pop
repnz
test
out
push
sti
ss
loope
out
dec
sub
aam
cmpsb
sti
mull
sub
mov
mov
ds
xchg
cmpsb
imul
test
add
enter
mov
xor
es
jge
out
cs
cmp
push
pop
or
xchg
jmp
in
stc
xchg
dec
pop
mov
pop
arpl
sarl
mov
sub
sub
cli
arpl
movsl
in
sbb
test
rorb
pop
nop
cli
push
mov
insl
bound
movsb
jnp
cmpsl
jne
dec
push
je
lock
dec
arpl
push
or
xor
inc
into
xor
xchg
inc
cmpl
movsl
cmp
inc
shlb
xor
jns
enter
aaa
out
jg
jnp
adc
into
addr16
dec
xor
sbb
aad
scas
outsl
in
dec
mov
sub
out
jmp
lods
rcrb
mov
sarb
mov
fisubs
ljmp
pop
cs
or
mov
adc
stos
loopne
or
aas
mov
das
adc
inc
push
pop
mov
jle
test
sbbb
add
test
and
jg
xor
inc
adc
pop
test
mov
stc
outsl
and
adc
gs
lds
inc
adc
jo
cltd
movsb
insl
lahf
test
xchg
mov
in
cmp
mov
js
loopne
add
xorb
dec
shrl
cmp
ja
adc
dec
mov
ffree
jnp
push
in
jb,pn
and
and
pop
jecxz
loop
lahf
push
icebp
mov
out
test
mov
mov
andl
sub
fldl
movsb
addb
int
add
adc
pop
adc
jge
scas
mov
inc
xchg
mov
jb
jno
xor
out
fsubs
das
mov
rclb
ja
call
jne
add
pusha
int
orl
mov
xchg
push
jae
xlat
lods
jg
fisttpl
mov
adc
mov
mov
mov
ret
jp
icebp
mov
aad
lods
movsb
stc
cmp
fisubs
and
push
shrb
jo
push
mov
mov
jne
fiadds
xor
dec
pop
fld
and
loope
aam
xor
push
xchg
push
xlat
lahf
ret
dec
pop
xlat
rcrl
je
pop
inc
ljmp
xorl
mov
ja
or
fiadds
inc
cmc
movsb
in
out
pop
dec
loopne
out
fs
fwait
gs
cmp
lret
movl
xor
test
mov
mov
cs
lret
jo
inc
jge
push
jp
mov
sub
dec
dec
lcall
mov
jge
xor
lcall
rol
adc
gs
dec
adc
loope
xchg
xchg
mov
in
movb
int
ret
aaa
jns
push
pop
dec
push
inc
cmp
fwait
punpcklwd
lock
push
aad
cli
inc
jns
sti
push
aad
mull
cmp
jno
lahf
mov
shrb
aaa
inc
cmp
leave
jecxz
shll
shrb
aaa
jecxz
pop
and
aad
sbb
jo
stos
mov
cmp
and
adc
sbb
xor
scas
inc
add
data16
imul
lock
movsl
fadds
sbb
rcr
fadd
test
frndint
daa
ds
sarb
jne
adcb
out
jo
adc
lret
ss
or
jb
or
fcmovnb
mov
jmp
stos
sahf
clc
sahf
addr16
and
mov
cs
inc
imul
push
push
aaa
sbb
pop
mov
add
sbb
jge
pop
lods
pop
xlat
movsb
mov
sbb
cwtl
pop
arpl
xchg
pop
loop
sbb
and
hlt
pop
jmp
and
in
cmp
das
mov
fs
and
lods
xchg
cmc
outsl
repnz
int3
jmp
xchg
ja
ficomps
addr16
std
aam
jmp
jle
xchg
add
std
movsb
mov
xchg
arpl
and
push
ds
push
pusha
jne
sbb
dec
jmp
pop
dec
jl
addb
cmp
imul
add
int3
out
sti
mov
jge
addr16
add
stc
and
mov
sub
inc
rolb
cmc
testl
pop
jge
mov
dec
mov
lret
dec
or
dec
push
lea
punpckhwd
mov
jnp
dec
div
inc
fcmovu
jg
iret
or
clc
push
imulb
movb
rcrb
inc
push
fidivrs
add
jae
cmpsb
xchg
cmp
xor
mov
inc
mov
out
jns
xor
mov
movsb
mov
pop
shlb
int
and
lea
shll
inc
cli
xchg
mov
pop
cmp
sahf
cmpsl
add
jbe
std
mov
jne
out
test
jne
adc
dec
cs
je
das
push
push
test
pop
movsl
aad
inc
ja
and
mov
je
mov
lods
and
shlb
inc
mov
ret
fidivrs
push
jns
lds
or
push
into
cmp
mov
inc
push
jae
inc
inc
pop
aas
arpl
ss
loop
mov
mov
cmp
test
outsb
xchg
add
notl
in
data16
notb
in
mov
popa
add
mov
idivl
fcmovb
xor
xchg
insl
mov
and
icebp
cmp
sub
sbb
outsl
inc
jns
sbb
xchg
andb
out
adc
aas
fdivrs
jnp
scas
mov
cmp
std
cmp
jp
in
imull
leave
popa
movsb
neg
fildl
sbb
lds
pop
jmp
cmpsl
outsb
cld
in
inc
int
aam
or
dec
in
es
ret
nop
adcl
xor
push
leave
divb
pop
ja
addr16
mov
lcall
cmp
aaa
push
out
jecxz
push
sub
xchg
mov
loope
jno
scas
sti
mov
jbe
pop
aad
inc
rolb
inc
mov
cwtl
test
mov
shlb
loopne
inc
repnz
xor
sti
rclb
add
mov
or
lods
daa
add
xchg
jp
mov
add
jbe
insl
jg
inc
nop
pop
mov
sub
sbb
mov
addr16
call
jge
mov
sahf
mov
fmuls
iret
push
arpl
bound
and
cltd
ja
pusha
and
loope,pt
test
jbe
add
mov
cld
mov
mov
mov
repz
inc
stos
push
inc
lock
das
cli
ficompl
pop
mov
hlt
popf
jecxz
lahf
and
and
jo
in
inc
stos
testb
adc
gs
pop
iret
mulb
sarb
jnp
retw
inc
rol
mov
sbb
xorl
jnp
orl
mov
mov
jge
mov
in
pushw
outsl
and
sbb
mov
pushf
cmpsb
aas
or
insl
cmpsb
rclb
nop
pop
add
movsl
mov
lret
adc
or
stc
and
hlt
sti
mov
mov
loope
or
aam
dec
sbb
mov
jne
mov
mov
outsl
push
and
addr16
cmp
arpl
cmp
add
cmpsb
pop
rclb
das
lret
or
or
rol
gs
ret
mov
add
mov
adc
cmc
int3
cmpsb
sahf
jp
add
jbe
ret
cmpsb
bound
push
dec
xor
loope
test
cmp
outsl
daa
mov
arpl
sbb
pop
aaa
mov
xchg
ja
add
leave
and
and
fists
sub
add
movsb
adc
idivb
mov
inc
mov
jge
jmp
lds
lret
pop
jmp
jne
ds
mov
jns
nop
repz
enter
xor
mov
aas
xchg
xor
cmpl
sbb
mov
mov
pop
sbb
test
in
and
scas
inc
das
or
mov
loop
pop
scas
and
lahf
es
cmc
inc
xor
cmp
pop
in
cmpsl
jno
daa
pop
xlat
addr16
fcompl
mov
jp
push
xor
add
pop
fs
test
shlb
movsl
gs
inc
jns
mov
in
jl
or
mov
add
testl
inc
xor
addl
inc
fildll
cwtl
mov
dec
jnp
stos
les
test
xchg
and
iret
aad
mov
hlt
nop
mov
sarb
pcmpgtd
sbb
mov
jmp
xchg
xchg
das
roll
pop
ret
adcl
pop
ds
jne
test
pop
outsl
fldcw
cmp
insl
push
add
jge
icebp
in
sbb
jl
add
ficomps
push
lahf
jg
push
jnp
in
adc
xchg
and
movsb
and
dec
int
arpl
push
inc
xor
sahf
fimuls
outsb
outsb
fucom
jne
pop
or
mov
xchg
nop
xor
xor
xor
mov
sbb
dec
push
inc
xchg
or
sbb
sarl
gs
ret
push
out
and
aad
imul
jg
scas
cwtl
pop
inc
ss
shlb
das
adc
cmpsb
stos
sub
jno
ss
packssdw
mov
movsb
dec
adc
lea
jecxz
xor
das
push
adc
vmovupd
fimuls
xchg
es
sub
and
pop
repnz
mulb
adc
xchg
test
mov
sahf
popf
ret
cmpl
sbb
or
adc
push
inc
pop
dec
pop
shlb
cmp
imul
out
cmpsb
cs
aad
cmp
aad
fs
fbld
inc
sbb
pop
out
scas
cmp
inc
arpl
out
out
insl
in
js
and
cmp
push
into
cmp
mov
gs
repnz
mov
test
mov
and
daa
fldl
jno
xchg
jae
loopne
jne
orb
inc
xchg
aaa
fimuls
dec
lods
pop
cmpl
leave
push
scas
push
mov
test
in
js
ds
sbb
fildl
pop
jnp
std
jl
scas
stos
in
pop
lcall
pop
outsl
jge
mov
iret
loopne
negl
mov
mov
adc
add
mov
mul
sub
adc
cs
std
push
mov
add
or
add
mov
rorl
arpl
add
jg
insl
bound
jecxz
push
jle
shlb
orb
cmp
rol
jbe
data16
mov
cmp
sbb
push
lds
and
mov
mov
in
es
cmp
es
aam
ficomps
and
and
lret
leave
sub
stc
sbb
lret
dec
cwtl
xchg
mov
imul
test
xchg
cmpsb
push
jle
popa
les
sbb
das
mov
jmp
data16
xchg
mov
or
ja
push
mov
mov
jecxz
mul
enter
pop
xchg
leave
cltd
mov
jne
xchg
mov
push
dec
div
lcall
addr16
repz
jge
addr16
stos
or
mov
push
mov
outsb
fs
scas
es
or
into
loopne
icebp
movsl
push
scas
cmp
divb
mov
std
push
stos
outsl
or
in
sbb
in
ficomps
xchg
ret
stos
inc
xor
jnp
scas
mov
nop
pop
sbb
inc
cmp
pop
mov
sub
gs
rcll
fcmovnbe
mov
mov
test
shlb
pop
and
mull
cmc
hlt
movsb
mov
mov
and
push
shlb
enter
mov
mov
pop
mov
lret
std
daa
inc
andb
add
lods
mov
or
push
pop
shrb
das
cmp
adc
fwait
inc
fisubs
mov
sbb
inc
jecxz
lods
outsb
data16
xchg
or
out
test
jnp
fcomi
push
lods
mov
lods
imul
negb
lds
add
lcall
jp
mov
add
push
sub
cmp
into
inc
push
push
or
dec
dec
clc
or
sbbb
pusha
es
imul
mov
shrb
adc
lds
pop
or
addr16
cmpsl
xor
arpl
ret
inc
mov
repnz
push
mov
xchg
cmp
and
sbb
jb
data16
xor
mov
sbb
pop
or
pop
cmpsb
cmc
mov
jne
or
and
mov
out
sbb
popf
sbb
add
sub
pop
lret
pop
fs
cmpsb
xchg
rclb
pop
pop
cmc
ret
cmp
mov
fmul
roll
lds
adc
insb
push
and
aad
push
push
jge
push
mov
mov
pop
aad
fdiv
lods
jecxz
test
fmul
pop
xchg
stc
outsb
sub
fisubs
orl
addr16
adc
push
ret
jecxz
push
std
lret
sbb
jl
fwait
push
es
lods
and
fsub
outsb
ljmp
sub
pop
mov
shlb
icebp
or
pop
jl
mov
data16
cmp
inc
out
cmpsb
jae
push
nop
mov
loopne
jmp
loopne
out
cmpsb
daa
loope
cmpsl
jb
lea
inc
jl
stc
xor
jge
sub
icebp
jg
cmp
sbb
jle
dec
fs
xor
mov
in
and
mov
test
sbb
sbb
ficompl
sbb
sub
adc
mov
nop
xor
mov
lods
add
fmul
mov
rcrb
lock
push
clc
jns
push
mov
mov
pop
push
dec
mov
push
mov
cmp
lcall
mov
repz
js
mov
scas
mov
adc
movsb
inc
xchg
pop
push
jb
out
cmp
sbb
mov
adc
adcl
mov
lods
push
lcall
pop
pop
jecxz
les
aam
pop
addb
iret
sahf
and
fsub
addr16
sbb
or
fiadds
pop
movl
pop
repz
and
dec
std
mov
mov
sub
cmp
aad
test
mov
jne
or
mov
sub
mov
ret
xchg
cmpsb
ret
dec
pop
fwait
xor
push
test
mov
mov
jbe
mov
repz
cmp
jae
lods
cmp
add
pushf
or
and
out
stc
test
jmp
add
sub
pop
repz
jbe
mov
xchg
test
fdivrs
clc
std
in
inc
lea
xchg
int3
and
mov
stc
je
mov
inc
imul
cwtl
loope
scas
or
jecxz
test
and
push
dec
cmpsl
pop
adc
jno
out
cs
frndint
sarb
jnp
aad
data16
inc
hlt
andb
mov
add
pop
and
mov
pop
clc
mov
aas
aad
in
repz
cld
push
add
jne
mov
test
jge
jb
test
popa
lds
add
jecxz
cmp
cmp
dec
data16
in
cmp
lea
add
call
outsl
hlt
ds
sbb
xchg
stos
adc
xchg
sub
cmc
les
gs
lret
inc
fwait
xchg
push
js
in
outsl
sub
xchg
xchg
jle
sub
xchg
in
mov
push
addr16
cmp
ljmp
ret
ret
scas
jne
cmp
jae
mov
mov
jl
es
jmp
xchg
mov
jg
in
mov
add
push
mov
test
cmc
std
outsb
mov
mov
cmpsb
pushf
out
das
jg
sbb
fldenv
push
das
ret
xchg
addb
rclb
out
test
jmp
jle
icebp
das
or
inc
dec
shl
out
ret
shr
add
inc
rcl
sahf
in
add
rclb
arpl
jb
subl
loope
int3
inc
test
rcl
out
in
jmp
cmpsb
mov
add
aad
fwait
dec
xor
mov
add
push
cli
mov
inc
or
cmp
mov
nop
and
out
rcl
out
mov
mov
out
shlb
add
jg
cmpsl
mov
cmp
in
in
sub
sbb
pop
push
or
sbb
arpl
clc
sub
pop
pop
mov
in
cmp
ss
outsb
jecxz
sub
loop
lret
fisttpll
movsb
xlat
cmpsb
test
mov
mov
adc
repz
xor
mov
inc
incb
testl
insl
sbb
mov
sbb
mov
or
lea
sbb
or
test
movsl
scas
hlt
fnstenv
and
adc
dec
or
int
std
adc
xchg
dec
dec
xchg
call
mov
inc
sbb
aas
xchg
dec
pop
jne
xchg
mov
mov
xor
fwait
addr16
add
fsubrp
sbb
aam
test
shrb
inc
mov
add
fbld
pop
push
xor
sti
aad
cltd
int
pop
inc
subl
jmp
add
pop
cmp
xchg
push
cmp
inc
adc
jle
push
jno
jmp
es
inc
mov
mov
add
movsb
or
xor
test
jmp
leave
pop
arpl
xor
adc
orl
or
mov
adc
jne
cmc
std
sbb
fimull
loop
adc
cmp
cmp
stos
dec
pop
inc
out
dec
test
cwtl
insl
daa
rorb
outsb
nop
icebp
repnz
jecxz
iret
out
rol
sbb
and
jge
hlt
jae
mov
out
stos
das
imul
pop
mov
std
in
mov
pop
sbb
xlat
xchg
out
shrb
stos
sti
out
nop
out
movl
data16
mov
out
lods
or
sub
ret
sbb
in
add
ljmp
scas
mov
adc
scas
sar
or
mov
cmc
jne
pcmpgtd
outsl
xchg
push
sub
jae
mov
enter
iret
xor
test
add
subl
sbb
sub
mov
inc
add
cwtl
fwait
insl
pop
push
dec
test
inc
push
repnz
sub
loopne
leave
or
scas
mov
mov
jae
out
mov
xor
shlb
shlb
pop
movsb
insl
push
inc
into
xor
push
mov
mov
cmpsl
sub
scas
fiadds
aaa
scas
shrb
in
addl
pop
push
mov
je
jl
loopne
xchg
add
jbe
test
sbb
insl
inc
aam
pop
loop
cmp
push
dec
nop
mov
lock
or
fwait
lock
pop
sub
cmpsl
mov
shrl
sub
add
in
cwtl
jae
cmp
loop
add
fcomi
add
lock
add
lods
dec
cs
repnz
test
adc
pop
pop
push
lds
inc
mov
lods
test
fwait
leave
int
sbb
inc
outsl
sub
movsb
hlt
les
sbb
pop
outsl
imul
adc
sti
out
in
inc
test
mov
mov
pop
and
cmp
lcall
cmp
jmp
into
mov
std
mov
je
mov
jg
pushf
cmp
jae
in
pop
scas
imulb
fdivp
data16
dec
aam
and
adc
adc
icebp
adc
daa
andl
or
ficomps
add
xchg
inc
les
jno
pop
adc
fcmovnb
repz
mov
mov
dec
ds
mov
xchg
sbb
rcrl
cs
pop
jns
ficomps
push
sbb
dec
jb
movsb
es
inc
xor
cwtl
dec
leave
add
push
mov
jecxz
jl
push
add
inc
or
sahf
mov
in
or
out
mov
das
outsl
mov
jbe
xchg
fildll
xor
jg
movsb
leave
jecxz
mov
or
push
xor
push
fs
adc
jecxz
xchg
jge,pt
inc
adc
push
pop
test
popa
lods
mov
bound
push
addr16
xchg
insb
loope
xchg
push
ret
mov
add
pop
add
icebp
sbb
ljmp
or
push
shrb
push
fisubrs
imul
sbb
fs
faddl
push
test
sti
dec
pop
sbb
cmp
mov
lahf
outsl
mov
cs
movsb
stos
out
inc
sub
lds
mov
test
jp
adc
arpl
addr16
mov
mov
movsb
in
and
jecxz
popf
mov
enter
cltd
int
mov
in
insl
sahf
cmp
sub
xchg
lods
xor
add
aas
sub
sbbl
mov
das
ds
pop
stos
push
shll
jns
scas
push
lds
fidivs
xchg
mov
lods
sar
push
or
pop
pop
jnp
sub
iret
stc
lea
xor
lahf
add
mov
mov
xchg
xchg
mov
cmp
jge
xchg
cmp
fiadds
insl
inc
loopne
sub
repz
push
mov
dec
pop
adc
add
adc
inc
mov
rorb
xlat
into
out
sbb
sbb
adc
lds
mov
mov
subl
das
dec
rcr
das
dec
popa
sub
lea
pop
leave
add
inc
inc
cmp
rol
aad
lea
pop
lcall
sbb
mov
aam
movsl
leave
inc
push
sbb
jnp
mov
daa
and
or
jns
sbb
shr
test
jg
out
flds
adc
xlat
cmp
xor
mov
mov
xchg
pop
jle
cmpsb
jle
call
xchg
std
cld
mov
subb
or
iret
or
sbb
loop
rcll
int
mov
push
mov
pushf
mov
lea
fistl
sub
mov
xlat
xchg
pop
popa
push
dec
push
ret
mov
sub
push
ret
xor
add
popa
lret
outsb
or
push
sub
les
push
cld
mov
dec
outsb
rorl
cmpsb
orl
imul
das
xor
sbb
adc
dec
ds
outsl
insl
mov
jne
and
inc
push
clc
mov
dec
loopne
lret
pop
fildll
test
add
pop
ret
sahf
cmp
inc
pop
loope
lcall
sti
lahf
and
mov
sub
sub
into
mov
pop
lods
and
ss
jle
lret
iret
out
pop
jg
push
jne
cltd
and
inc
addl
out
and
loop
jl
ja
shl
lods
js
jle
movb
mov
adc
das
pop
sbb
movb
xchg
shlb
xchg
mov
push
gs
test
pop
rcl
test
jge
out
inc
icebp
shlb
xchg
jecxz
cld
call
fiadds
add
push
jp
mov
pusha
dec
mov
and
outsl
xchg
push
jbe
or
xchg
hlt
jae
dec
inc
aam
pop
dec
dec
add
dec
xchg
mov
scas
sub
sbb
into
push
jae
jge
daa
out
dec
inc
shl
and
scas
mov
mov
cmpsb
jno
nop
fiaddl
sub
sbb
int3
mov
sarb
gs
jo
repnz
testb
out
jbe
clc
or
cmp
mov
repz
movsb
mov
push
iret
outsl
aaa
pop
mov
js
and
flds
adc
ds
xor
cmp
sbb
lea
dec
mov
and
loop
mov
fs
mov
lock
cmp
add
sbb
xor
mov
jns
push
in
cmpsb
cmp
rorb
mov
imul
jne
xor
stc
mov
pop
xor
xor
lods
mov
in
xorb
imul
sbb
aad
or
mov
jbe
shrl
fistps
je
jae
or
mov
cmp
aad
in
add
mov
adc
repnz
dec
adc
leave
sbb
js
mov
not
outsl
aad
jo
fldt
les
movsl
out
and
test
adc
push
ret
ja
popf
daa
cmpl
stos
inc
and
add
inc
insl
rcrl
mov
cmp
mov
mov
mov
cmp
ror
cmc
add
fildl
das
add
or
bound
mov
and
fsubrs
jb
movsl
mov
push
lret
movsl
jg
mov
out
icebp
inc
sahf
out
out
push
clc
sbbl
mov
push
push
daa
pop
lods
add
cmpb
sub
pushf
in
cmc
daa
jb
dec
imul
mov
leave
and
aad
lods
cltd
scas
out
inc
inc
push
call
imul
movsl
push
mov
cmc
mov
int
scas
mov
ret
pop
push
push
or
shrb
mov
pop
repnz
and
dec
fistps
neg
in
push
push
aad
add
lahf
jnp
xchg
lods
negb
pop
shlb
lods
insl
push
pop
insl
push
add
inc
shr
cmp
jno
jge
ss
scas
daa
shl
and
dec
jbe
fsubs
xchg
inc
lea
xchg
aam
repz
pop
jge
andb
cmp
loope
pop
rclb
imull
or
sbb
mov
jno
dec
cmp
movsb
mov
test
testb
iret
shll
pop
fsubl
jmp
ljmp
jbe
faddl
mov
mov
mov
aaa
mov
xchg
add
or
fcompl
pop
mov
pusha
mov
cmpsl
jmp
ss
int3
aas
jp
cs
js
or
das
push
jno
push
sbb
cmpsb
push
fisubrl
dec
test
mov
arpl
inc
popf
xchg
cmp
jmp
pop
pop
scas
and
repz
fwait
out
aaa
adc
add
inc
imul
jo
xchg
jo
dec
sub
pop
jno
scas
les
fwait
sti
sbb
loopne
iret
adc
mov
movsb
inc
mov
xchg
xor
orb
add
jecxz
std
mov
xchg
mov
lds
pop
add
test
dec
repz
std
mov
imul
shll
ret
and
icebp
jmp
sub
xor
cmp
dec
shlb
test
fs
outsb
lods
cwtl
loope
ds
div
fwait
movsb
push
sbb
stos
mov
push
jae
test
std
pop
push
mov
xlat
out
adc
outsb
icebp
inc
xor
dec
leave
fwait
pop
mov
out
iret
pusha
jecxz
arpl
outsb
jno
push
sbb
pop
icebp
mov
lock
sub
fcoms
xchg
into
movsl
cmp
idiv
jns
jl
jg
jbe
or
xchg
outsb
mov
mov
xor
call
imul
icebp
outsb
or
test
addr16
pop
insl
pop
fld
movsl
test
or
das
pop
test
push
into
aam
pop
in
jmp
lahf
lea
push
fdivrl
sahf
aad
movsl
out
mov
les
std
lods
data16
sbb
mov
pop
out
sarb
popa
push
ficomps
cmpsb
mov
pop
jmp
jg
aaa
jecxz
mov
jmp
gs
test
shlb
nop
sahf
sbb
jbe
jmp
or
fldenv
xor
loop
insl
pop
add
or
pop
lods
es
inc
mov
sub
sbb
jnp
fs
sbb
fildll
push
out
shlb
mov
idiv
or
idiv
and
jecxz
addr16
mov
sbb
sbb
out
adc
mov
or
sti
mov
sub
aad
adc
mov
movsb
loope
adc
jecxz
xchg
cltd
pop
cmc
xchg
test
jb
data16
hlt
sti
cltd
mov
cltd
insl
push
mov
lea
out
movsl
sbb
xchg
adc
push
add
hlt
pop
jns
jge
fadd
ret
sbb
loope
test
mov
inc
xlat
rcl
gs
or
fcmovnb
or
notl
mov
pop
jecxz
mov
imul
cmpsl
insb
mov
mov
mov
jecxz
dec
mov
stc
push
dec
pop
xchg
push
jecxz
sbb
imul
add
push
ret
mov
daa
push
xchg
out
inc
insl
jge
js
add
pop
pop
jmp
popf
bound
outsl
movsl
bound
dec
scas
sbb
cwtl
fstp
pushf
es
out
cmc
cmpsb
fstpt
out
pop
sbb
das
lods
into
and
dec
sbb
cmpsl
jg
lea
outsb
loop
in
mov
jbe
mov
inc
andb
shl
xchg
mov
xchg
in
lock
inc
scas
sbb
sbb
ficompl
fidivl
xchg
xchg
fwait
jno
insb
subl
test
lds
ja
enter
cmpsl
divl
inc
mull
or
das
pop
inc
icebp
movsb
out
cld
sbb
dec
fldt
repz
lds
decb
mov
gs
pop
clc
cmp
xchg
xchg
sbb
lds
mov
mov
dec
iret
mov
subb
jle
sbb
je
les
jae
and
bound
je
bound
fs
push
jg
sub
fistpll
scas
inc
sahf
filds
pop
lahf
lret
add
insl
fisubs
dec
xchg
stos
hlt
xchg
inc
pusha
mov
out
icebp
xchg
jbe
and
arpl
mov
mov
mov
inc
inc
xor
xor
aas
ffreep
mov
filds
jb
dec
ret
cmp
xchg
mov
mov
adc
ftst
jl
dec
cs
fwait
fwait
stos
pop
cmp
stos
pushw
icebp
imul
in
jmp
repz
lahf
mov
mov
xor
pop
stos
ljmp
insl
orb
pop
dec
mov
sbb
mov
sub
ljmp
cmpsb
fwait
mov
fwait
icebp
jge
addr16
or
iret
leave
shrb
sub
xlat
mov
or
call
mov
mov
pop
mov
jae
bound
cmpsb
ret
pushf
cmp
movsl
sar
mov
or
cmp
scas
stos
ja
into
inc
dec
jns
pop
aas
stos
int
mull
in
addr16
icebp
out
in
mov
es
jne
and
mov
xchg
xchg
push
loop
std
sbb
push
in
or
xor
addr16
cltd
repz
vucomisd
roll
stc
ja
adc
enter
inc
rclb
sbb
loope
adc
jns
dec
push
adc
lea
mov
js
inc
add
out
cs
leave
push
cld
ljmp
inc
shlb
xor
pop
dec
mov
push
outsb
shll
das
lods
or
jmp
in
outsl
int3
fs
add
cmp
sbb
add
incl
sbb
jp
fnstenv
mov
cmpsb
into
rcr
shl
lea
adc
pusha
sub
and
loopne
les
jo
std
and
cs
je
sbb
jg
or
sti
insl
cmc
sub
push
in
push
jb
outsl
loopne
movsl
mov
lds
pusha
push
jl
inc
dec
hlt
xchg
jb
pop
ret
ret
cmp
imul
ss
mov
jecxz
pop
jge
ficomps
cmc
add
jne
mov
mov
sub
shl
jp
inc
scas
aas
in
inc
sub
xor
shl
fistps
leave
fiadds
rolb
pop
xchg
mov
mov
into
aam
or
clc
push
jbe
les
insl
cltd
repz
sbb
mov
outsl
lea
stc
push
subl
inc
adc
adc
fs
cmc
jae
push
lock
cmp
lcall
push
inc
out
xchg
cmpsl
jno
add
repz
sarl
mov
test
mov
xchg
mov
xchg
push
ret
mov
mov
into
pusha
rcl
into
fdivrs
mov
add
mov
leave
cld
mov
and
jecxz
aas
movsl
xor
or
leave
lea
fidivrl
sub
movsl
pop
jge
ror
test
xchg
xchg
in
lds
push
repnz
push
imul
push
mov
int
xchg
repz
lret
pop
pop
in
cmp
enter
xor
aam
hlt
pop
xor
adc
imul
jl
xor
je
dec
into
pop
cld
sub
cmp
push
out
sub
jmp
leave
push
pop
push
loopne
push
pop
sbb
lcall
outsl
lcall
shlb
in
out
lea
jmp
inc
fistps
leave
mov
mov
aad
jle
mov
ljmp
or
fcmovne
xor
leave
test
loope
mov
jg
adc
out
cmp
add
jmp
ret
lds
shl
jp
mov
jmp
lea
testb
sbb
or
cmp
xchg
mov
mov
sahf
mov
jecxz
pop
negl
sub
pop
ret
popa
data16
push
popf
icebp
add
jno
in
and
or
dec
test
xorl
idiv
mov
xor
cmp
jecxz
lahf
jl
push
scas
jg
lahf
cltd
fdivrl
cmpsb
insl
out
dec
daa
lods
mov
mov
ljmp
test
pop
adc
retw
movsl
into
xor
or
popf
push
or
jle
pop
xlat
push
jnp
mov
jb
fisubs
rcrb
mov
repnz
imul
xchg
xchg
mov
push
enter
sub
jb
or
sbb
test
shrb
add
push
dec
insl
in
xor
jo
in
push
mov
or
cmp
sbb
mov
sbb
dec
les
jg
adc
mov
jbe
inc
or
xchg
mov
cmp
or
inc
cmpl
sbb
xchg
icebp
jae
adc
lock
xlat
test
xchg
imul
in
pop
lods
xor
outsb
jno
ja
add
adc
xor
pop
mov
loop
pop
shrb
out
add
or
push
notb
dec
add
pop
xchg
xchg
test
cmpsb
mov
das
out
fisttpl
inc
pop
mov
inc
push
arpl
mov
imul
jle
mov
call
movsl
lds
lods
cmp
shll
cli
mov
fsubp
xchg
lds
ret
jbe
mov
fidivrs
sbb
popa
or
pop
lret
or
mov
daa
mov
outsl
xchg
fwait
pop
mov
xchg
and
mov
push
push
lret
daa
je
mov
ret
adc
pop
dec
ret
sub
jg
lock
pop
int
dec
pop
fstps
mov
sbb
inc
xchg
jne
mov
sbb
lods
push
je
mov
mov
or
cmc
iret
out
pop
inc
rol
push
xchg
jg
sbb
nop
out
ljmp
mov
in
in
mov
jbe
scas
idiv
xor
fistpl
hlt
inc
addr16
movsb
lods
jge
test
and
test
loop
fisubs
inc
add
repz
in
inc
into
mov
sub
add
leave
into
popa
and
out
testb
dec
outsb
lahf
jg
cmpsb
movsl
mov
dec
movsl
lds
inc
pop
lock
test
mov
sub
gs
test
jns,pn
vandnps
mov
add
stos
xchg
out
jae
int
inc
in
int
and
ss
mov
out
lds
idivb
cmp
adc
jge
push
out
out
xlat
iret
scas
xchg
decl
mov
js
mov
fwait
inc
aaa
out
mov
addr16
lods
daa
jae
inc
cmp
xchg
jbe
ja
push
insl
mov
lods
in
test
outsl
icebp
cmpsb
in
jl
and
repnz
ret
push
jne
jb
fnsave
mov
pop
arpl
subl
js
or
xor
leave
xor
iret
push
push
arpl
mov
mov
xchg
push
gs
xchg
andb
fstl
jbe
and
aas
test
mov
push
sti
mov
fwait
xchg
fwait
shlb
dec
stos
outsb
push
push
roll
movsl
mov
loope
fwait
and
out
xchg
mov
fidivrs
outsb
imul
es
and
cwtl
sbb
jl
scas
sbb
mov
pop
dec
jae
shrb
cmp
push
jns
stc
push
rorl
pop
out
loope
dec
ja
pop
cmp
clc
clc
push
out
ljmp
fs
sbb
add
aad
cwtl
je
dec
push
test
call
mov
cmp
ffree
adcb
stc
lahf
rcrb
jp
cmpsl
addl
popf
shl
xor
leave
push
and
jbe
push
lds
mov
or
stos
jnp
sarl
scas
mov
mov
sbb
scas
sub
bound
lods
shlb
lds
add
adc
lahf
or
push
outsb
pop
dec
loope
fcmovb
dec
xchg
inc
sbb
add
cld
mov
cmp
push
mov
movsl
in
sbbl
push
inc
mov
jo
mov
into
hlt
mov
sub
or
sbb
mov
push
or
jp
sub
xlat
shlb
vpand
sbb
and
pop
aaa
inc
repz
jecxz
ja
idivb
out
mov
aam
xchg
fwait
inc
mov
cltd
or
inc
dec
into
icebp
dec
loope
rcr
negb
sub
fdivs
jg
jge
or
xchg
roll
push
mov
dec
mov
cmp
shlb
enter
xchg
or
fs
add
cmpsl
jge
aas
sub
imul
push
cli
or
xor
test
sti
adc
jae
add
adc
xor
shrb
inc
mov
adcb
std
push
les
push
movsb
icebp
or
movb
dec
loope
popf
shl
outsb
fldl
nop
idivl
fs
pop
sahf
mov
addr16
cmp
mov
dec
in
stos
xchg
xor
push
inc
cmpsl
or
test
dec
in
cmpb
insb
inc
or
jge
adcb
dec
push
pushf
pop
jle
push
lret
cmp
and
cmp
scas
mov
sbb
daa
repz
int
cmp
and
in
fistpll
dec
xchg
xchg
sarb
fsubrp
mull
fnstenv
xchg
pop
push
imul
jecxz
loope
mov
cmpsl
jle
mov
insb
rorl
and
jle
fstps
xor
sub
js
sbb
fldt
out
dec
stos
xchg
cmpsb
lds
fldl2e
inc
popa
xor
bound
pop
test
mov
enter
lods
adcl
loop
mov
ds
incb
cli
mov
mov
cmp
pop
jo
dec
push
daa
push
jne
mov
jg
lock
pop
imul
outsb
repnz
movsb
pop
loope
dec
and
and
or
cmp
fnstsw
xchg
cmp
xor
sbb
shl
pop
sub
ds
repz
test
mov
sbb
jp
push
xchg
mov
sub
dec
out
out
dec
push
or
cld
push
daa
popa
pop
addr16
dec
push
xchg
cmpsl
aam
cld
mov
pop
xchg
outsl
stos
sub
xchg
insl
mov
hlt
cwtl
sbb
and
mov
ds
popf
jecxz
xchg
ljmp
loope
push
jp
test
test
add
and
shl
jl
mov
dec
rcr
add
xchg
sti
mov
cmpsl
push
dec
rcr
mov
call
in
into
or
jp
addr16
popa
inc
scas
inc
push
mov
lea
dec
movsl
cmp
xchg
sysret
push
and
or
inc
out
xchg
sbb
outsb
dec
lds
or
push
dec
jno
push
add
ja
stc
mov
out
dec
rorl
xchg
sti
je
shlb
sbb
dec
dec
jbe
in
jb
lods
add
push
insb
loope
mov
pop
repnz
mov
mov
cmp
pop
mov
cltd
lret
cmc
mov
rol
mov
xchg
subb
aaa
push
insb
sub
xchg
mov
xchg
adc
xor
and
inc
mov
ss
push
dec
cmpsb
out
shll
ja
mov
jecxz
mov
pop
and
xor
jle
cwtl
inc
test
push
daa
adc
ljmp
add
push
lods
hlt
scas
or
xor
lcall
push
mov
in
sub
roll
cmpsl
sbb
inc
test
xchg
test
ss
pop
shlb
pop
outsl
lock
cmpsb
test
pop
cmp
icebp
faddl
dec
mov
jbe
daa
sub
es
movsb
lods
lea
aad
les
insl
popf
dec
out
pop
cmp
loope
sahf
addr16
adc
loope
loopw
xchg
xlat
push
test
mov
test
ja
outsb
arpl
imul
xchg
push
adc
cwtl
imul
ja
popa
sub
cmp
in
jge
outsl
jecxz
and
mov
pop
fwait
adc
sub
inc
dec
and
add
fisttps
shrb
cltd
cmpsl
add
daa
cmpsl
jno
push
push
or
lahf
xor
lds
rol
lahf
test
push
out
cs
push
mov
mov
xchg
jns
mov
mov
add
rorb
cmpb
hlt
movl
inc
xchg
push
fs
mov
ja
out
test
sbb
dec
outsl
enter
aas
sahf
mov
pop
shl
mov
in
cmp
inc
push
inc
mov
jmp
push
jnp
xor
testb
jle
adc
jecxz
pop
in
dec
mov
sub
outsb
out
ss
or
loop
and
or
jne
rorb
in
ret
outsl
inc
test
inc
lds
adcl
mov
hlt
xchg
shlb
fs
mov
xor
mov
jecxz
dec
adc
inc
jne
inc
or
pop
mov
or
outsb
lea
and
mov
andb
cmpsl
int3
push
das
mov
sahf
iret
in
test
adc
jecxz
inc
outsb
cmc
push
das
cs
mov
in
sarb
mov
pusha
ja
cmp
loope
insl
xchg
push
jle
mov
mov
add
sub
cmp
add
jnp
divl
sub
jp
enter
inc
lcall
jae
add
icebp
fs
xor
xchg
test
add
and
roll
ret
sbb
out
mov
loopne
stc
ja
stc
loope
orl
out
xor
icebp
pusha
mov
icebp
ret
adc
fistpl
jae
rcl
push
xor
scas
jb
cmp
fdivs
xor
data16
gs
mov
cmp
in
mov
mov
lds
inc
stos
inc
xor
or
dec
cmpsb
mov
cmp
and
dec
cwtl
lods
mov
mov
out
mulb
jbe
push
jl
dec
push
mov
pop
cmp
ja
add
fnsave
jb
sti
and
mov
das
lcall
mull
sbbb
scas
lahf
jo
stos
adc
ds
sarb
fwait
mov
jno
testl
mov
ljmp
xor
sbbl
nop
cmpsb
and
out
xchg
mov
jmp
fsubl
inc
sbb
mov
add
mov
outsb
push
sub
or
lea
or
pop
xchg
loop
aam
repz
xor
std
push
mov
jg
je
repz
sahf
pop
out
int
mov
mov
mov
inc
add
or
xchg
add
adc
pop
sub
mov
dec
pop
sbb
cmp
cltd
arpl
push
adc
aad
jl
mov
mov
movsb
addl
push
fcoms
ret
rorl
out
scas
mov
sbb
jp
push
push
jg
test
mov
sub
or
mov
test
pop
ja
mov
in
push
add
xorl
repz
jne
sbb
inc
fs
cli
mov
pop
aas
mov
sub
cmpsl
xlat
sti
call
fists
stc
stc
xchg
mov
and
mov
cmp
mov
ficomps
testl
outsl
lahf
or
mov
pop
mov
enter
xchg
test
lahf
cmp
test
movsl
mov
popa
dec
ret
or
in
outsl
jae
negb
nop
sub
out
jbe
icebp
jae
cmp
inc
mov
or
xchg
repnz
out
in
cmp
cltd
inc
cli
adc
test
cmp
push
sub
cmp
pop
sti
push
aad
imulb
test
daa
dec
lods
and
out
cmp
sbb
mov
movsl
aad
mov
loopne
xlat
insl
rcrb
popa
movsl
jne
cltd
add
xor
subl
or
outsb
lds
sbb
inc
ja
gs
and
pop
fldl
cmpsb
ret
xchg
add
jecxz
and
lds
cs
addr16
or
xchg
movsb
xchg
je
mov
insl
das
push
out
jo
jl
sbbl
fbstp
leave
ja
xor
lret
xchg
ds
add
insl
adcl
sub
test
add
cli
mov
stos
insl
aam
and
or
or
dec
cwtl
jg
or
pop
pop
inc
adc
mov
incl
mov
mov
lds
daa
aas
mov
push
and
and
shl
lret
cmp
imul
adc
jmp
xor
andl
mov
push
pop
nop
mov
pop
pop
mov
or
mov
and
outsb
fimuls
pop
rep
mov
rcrb
test
testl
icebp
sub
sub
scas
mov
addl
aaa
imulb
xchg
int
in
cmpb
mov
jns
mov
push
mov
mov
add
jnp
jge
das
sahf
movsb
xchg
pop
mov
je
into
js
mov
rclb
pop
mov
push
adc
in
or
xlat
pop
mov
test
lea
adc
lock
into
or
outsl
dec
stos
xchg
testl
xchg
dec
ficomps
dec
ss
lret
xor
out
adc
pusha
jmp
outsl
fdivr
imul
cs
push
lret
data16
cmp
pushl
cmp
sbb
fcmovnu
aas
mov
xchg
cmp
mov
cmp
mov
push
outsl
lods
scas
stos
std
mov
out
xor
mov
xor
jge
dec
jp
jns
push
jmp
mov
xor
rclb
icebp
ret
push
icebp
inc
pusha
adc
enter
and
lods
and
add
das
popf
loope
lret
and
mov
repz
movsb
and
dec
mov
je
daa
enter
push
pop
stc
jl
rolb
dec
pusha
sub
xchg
sub
mov
loop
jns
inc
leave
jmp
mov
test
xor
nop
ret
push
rcr
add
loopne
jnp
fistl
mull
or
xor
int
lea
into
and
pop
in
jo
jno
push
dec
loop
jle
fs
cmp
xchg
xor
mov
or
repz
jnp
mull
test
lcall
ficompl
mov
fldl
pop
inc
sub
sub
or
in
mov
shl
xor
rcr
lcall
mov
sub
aam
stos
push
cmpsb
movsl
sbb
loop
and
dec
pushl
add
in
pop
push
jl
jne
xchg
push
push
dec
out
ja
and
and
cmpsl
mov
mov
or
lods
leave
push
loopne
add
nop
in
adc
push
cmp
popa
push
fadd
adcb
arpl
out
cs
mul
dec
fildll
xor
sbbb
ja
imul
popa
jmp
out
add
or
xchg
addr16
pop
lahf
andl
stos
mov
and
scas
mov
sbb
adc
lcall
mov
sbbl
push
jl
out
and
faddl
repnz
sbb
mov
rclb
test
repz
pop
lods
scas
add
addr16
out
adc
test
jle
sbbb
fsts
stos
out
rcrl
test
push
subb
sbb
ret
cmc
lods
push
fsubs
xchg
pop
scas
dec
ret
push
jle
scas
sahf
inc
es
dec
popf
stos
neg
adc
or
sbb
fst
lock
pop
hlt
dec
cmp
cmpb
fsubrl
sub
mov
add
jge
mov
push
imul
dec
adc
mov
ret
push
and
or
aad
out
push
sarl
jns
lds
jmp
rol
in
outsl
in
shrl
xorl
jo
and
sub
fildl
or
ds
test
test
pusha
push
test
mov
lock
mov
hlt
imull
pop
or
insl
mov
loop
push
ljmp
nop
mov
rol
mov
xor
lret
dec
mov
add
test
mov
cmpl
shl
scas
into
mov
adc
xchg
pop
fsubrl
xchg
mov
mov
mov
pop
test
mov
mov
inc
dec
jne
test
pop
test
or
lret
jl
mov
inc
in
ffree
push
cmpsl
arpl
jne
gs
je
mov
movsl
jecxz
xchg
ds
adc
outsl
pop
sub
mov
mov
pop
jge
mov
jae
dec
je
jg
jecxz
je
pushf
add
aas
push
mov
sti
mov
sub
movsl
adc
mov
in
jge
scas
into
shrl
push
scas
jp
and
dec
fsub
cmp
fisttps
xor
inc
mov
dec
aam
mov
shl
scas
push
iret
pop
or
out
inc
xchg
adc
incb
mov
in
mov
outsl
mov
ds
dec
testl
dec
mov
in
insl
and
jb
fsubrp
fiadds
mov
sub
mov
jge
mov
xchg
add
inc
mul
jge
shll
ljmp
and
notl
sahf
mov
pop
mov
in
fidivs
pop
cld
idivl
sbbb
sarb
add
bound
addb
pop
jae
jge
or
out
dec
aaa
jne
jecxz
mov
mov
jmp
ficoms
dec
mov
das
out
sub
stc
inc
inc
inc
cmpsb
sbb
xchg
add
cmpsl
std
push
add
js
inc
sbb
cltd
and
or
pusha
xor
sub
aaa
xor
pop
ljmp
hlt
out
sub
xor
inc
jnp
ret
iret
xor
test
dec
idivb
aad
imulb
aad
negb
xchg
cmp
dec
add
loope
xor
clc
fwait
adc
es
dec
leave
iret
sub
pop
aaa
insl
lahf
stos
lahf
jl
into
pop
icebp
rorl
test
mov
lods
xchg
cmp
rolb
fimull
mov
inc
fwait
pop
sbb
mov
mov
jb
pop
push
int
push
cmpsl
cmpb
xor
jg
push
add
popa
push
mov
int
hlt
sarb
pop
dec
fadd
sahf
dec
addl
loop
ja
cli
shl
lds
push
shlb
sub
lahf
aas
xor
or
ljmp
ret
fldt
int3
repz
cmp
aad
negl
stos
std
daa
mov
and
fcoms
push
mov
loopne
dec
test
ret
fisttps
cltd
aaa
hlt
mov
ret
xor
fisubrs
ffree
adc
movsb
mov
divl
mov
fwait
cmp
addr16
mov
jnp
mov
mov
mov
rol
out
outsb
jno
xchg
fistl
lret
push
out
addr16
repz
mov
or
push
cs
and
test
xor
jns
xchg
xchg
sbbl
cs
out
ja
mov
mov
adc
pop
mov
mov
mov
push
test
lahf
cmp
mov
jae
daa
jne
data16
sub
loope
dec
inc
xchg
scas
out
adc
enter
add
fdivr
pushf
pop
loopne
gs
add
out
push
es
pop
daa
daa
pushf
pop
mov
dec
or
sub
jno
out
cmp
jo
jge
jbe
popw
daa
mov
mov
push
mov
popf
icebp
or
leave
jmp
add
pop
push
mov
pop
pop
jnp
out
xchg
add
lret
jne
in
lea
lcall
in
pop
ficomps
iret
test
inc
pop
lds
ja
jnp
jb
inc
loopne
test
fldcw
rorl
test
stos
pop
jae
fs
cli
in
jge
lock
test
sbb
idiv
jmp
jmp
inc
jns
int
jbe
mov
sbb
fwait
or
jae
mov
jno
rsm
popa
loope
les
jbe
fstpl
xchg
cmpsb
in
dec
and
fndisi(8087
daa
or
dec
pop
shlb
frstor
adc
cmpsb
push
fimuls
cmpsl
lea
es
pop
jae
add
xor
xor
adc
xchg
stc
test
test
jl
inc
xchg
jne
push
int3
push
aad
insb
cs
insl
inc
cmpsl
pop
filds
dec
cmc
out
jno
pop
lods
shll
rorb
gs
test
dec
pop
vshufps
and
aaa
mov
sub
filds
lods
pop
and
test
xchg
fadds
sbb
fwait
in
jge
fstpl
lods
out
popf
loopne
cmp
insl
mov
add
jmp
add
out
jns
int3
push
and
sub
adc
subl
adc
mov
outsb
push
mul
shlb
shll
dec
jae
mov
or
mov
jecxz
jle
jmp
leave
sbb
dec
cld
pop
mov
aad
insl
lods
test
jae
xchg
push
mov
adc
outsl
fwait
bound
cwtl
jne
xchg
cli
cmc
push
add
mov
sahf
jl
loop
daa
leave
mov
push
aaa
xchg
or
fimull
add
imull
mov
or
cmpsl
movl
enter
fwait
out
mov
sbb
ljmp
pop
into
enter
sbb
pop
cmc
and
lahf
pop
sar
jmp
or
cmp
in
iret
in
adc
mov
aas
mov
and
mov
sbb
add
hlt
xor
test
gs
idiv
leave
push
ss
xorb
les
outsl
addr16
cmp
and
xlat
leave
push
outsl
in
out
push
dec
pop
jmp
mov
mov
pop
mov
subl
lds
test
push
fwait
sbb
jb
push
push
arpl
push
cmp
in
xchg
inc
scas
xor
sbb
repnz
outsl
pop
inc
leave
lcall
sub
mov
fucom
popf
push
mov
out
jecxz
adc
rcr
cld
fucomip
lods
out
leave
loopw
lcall
movsl
out
and
nop
xchg
mov
cmpsl
push
mov
pop
xchg
jle
push
adc
xor
cmp
scas
mov
mov
mov
das
and
xchg
in
test
outsb
ja
repz
mov
push
or
xor
pop
stos
xchg
xchg
jmp
iret
pop
notl
or
insl
loope
out
stc
mov
pop
fcmovnb
and
xchg
addr16
fs
repz
pop
mov
dec
jle
mov
lret
push
fs
sbbl
out
cmp
mov
mov
clc
fdivp
addr16
fcmovnb
and
xor
xor
addr16
fbstp
iret
std
mov
adc
and
fwait
sbb
pop
sub
loope
jg
cmp
fwait
and
aaa
push
sbb
pop
cs
ret
movsl
mov
test
movsl
js
es
ffree
popf
rcr
jle
div
arpl
xchg
add
sti
sbb
out
clc
pop
scas
lds
mov
xchg
imul
mov
add
or
js
loop
int3
xchg
lods
jne
shll
cmp
and
adc
and
add
jmp
mov
xchg
in
or
mov
mov
xlat
cmpsl
iret
addr16
sub
nop
mov
ja
loope
loope
sub
orb
push
std
adc
aaa
xchg
dec
push
cmpsb
cmp
insb
int
hlt
add
outsl
out
sbb
push
cs
pop
xlat
pop
movsl
or
cwtl
imul
lods
call
and
fisubrl
jae
addl
fistl
ffreep
fbstp
rep
mov
push
and
sbb
cmp
fs
hlt
cmpsb
scas
dec
xchg
inc
cwtl
daa
lahf
in
jbe
xchg
fwait
xor
aas
ret
dec
orl
sub
mov
jge
jne
mov
xor
pop
cmp
push
dec
clc
ret
add
lds
mov
hlt
insl
mov
jecxz
mov
jo
aad
hlt
add
mov
stc
pusha
pop
and
lods
test
bound
pop
cmp
mov
jg
es
mov
push
pop
sub
adc
mov
jge
rclb
shll
ret
shlb
in
dec
jecxz
sbb
or
inc
mov
jae
popa
ja
out
mov
clc
or
mov
jne
enter
maxps
pop
int
mov
sub
fmuls
sbb
dec
mov
hlt
push
addb
xchg
jne
inc
addl
in
pusha
jno
fstl
xor
inc
outsl
sbb
shrb
lds
cmpsl
push
jle
repnz
repnz
add
aaa
inc
mov
mov
sbb
jle
sbb
dec
loope
xchg
call
mov
add
rcr
lods
inc
fisubs
and
aad
dec
mov
out
out
bound
rcl
adc
jmp
xlat
cmpsl
cmc
sar
and
mov
inc
xlat
push
adc
out
stc
jecxz
mov
ja
dec
push
pop
adc
lret
outsl
rol
imul
pop
lret
pop
and
rclb
imull
cltd
loopne
imul
paddsw
dec
leave
test
call
faddl
dec
or
in
repnz
vpunpckhbw
and
test
add
push
pop
out
cmp
add
sbb
mov
dec
dec
out
mov
push
fsubs
adc
adc
arpl
xor
cli
inc
xchg
mov
ficomps
xor
lds
out
jle
int
test
fisttpll
jns
mov
clc
push
in
jnp
arpl
xchg
popl
push
or
add
mov
cmc
push
push
push
jnp
fld
jmp
mov
adc
mov
xchg
mov
sub
movsb
loopne
sub
and
je
xchg
and
add
pusha
mov
outsl
cmpsb
push
xchg
fcoml
popa
sbb
jmp
lds
vpmuludq
mov
jno
jno
push
push
mov
pop
pop
mov
out
out
jo
push
cltd
int
pop
loop
jb
pop
jmp
shr
pop
out
adc
insl
gs
dec
xor
dec
movsb
insl
mov
aad
dec
cs
movl
mov
in
cmp
aam
out
in
fwait
push
inc
fadd
pop
and
out
rcr
jge
jbe
mov
mov
hlt
psadbw
xor
paddd
popf
mov
rolb
cmpsl
fimull
jne
or
mov
movsb
test
popa
insb
cli
cmp
int
in
shl
jne
ret
sub
pop
mov
and
cmp
inc
out
xor
dec
xor
orl
lods
cmp
rcll
mov
xchg
vandnps
addr16
into
stos
leave
dec
adc
imul
jg
popf
popa
scas
rcr
mov
rolb
in
xchg
std
rolb
or
mov
xor
pop
mov
adc
dec
xor
outsl
add
pop
and
pop
push
aam
fs
cmpsb
in
adc
adc
cmpsb
imul
push
in
xchg
mov
outsl
xchg
aam
pusha
inc
push
mov
push
imul
dec
imul
mov
out
movsl
aad
inc
cmpsb
xchg
dec
and
adc
or
decl
iret
mov
xchg
cmp
jae
lods
sub
ja
jecxz
sbb
xchg
xchg
fstl
and
gs
pop
push
sub
loop
arpl
ja
aaa
adc
mov
mov
inc
test
and
mov
cs
inc
ret
add
test
pop
rorb
insb
jecxz
or
out
mov
pop
js
das
std
dec
jge
sarb
add
mov
ja
out
mov
mov
fs
mov
mov
lea
adc
jecxz
and
and
xchg
andb
or
adc
lea
or
faddl
sahf
dec
fidivs
adc
in
lds
jge
dec
hlt
fcoms
adc
leave
jbe
clc
ja
in
ja
aam
xchg
fisttps
loop
sbb
xchg
stos
out
rcr
pop
pop
add
jg
xor
orb
push
jmp
stc
mov
jp
aam
jo
insl
mov
rcr
add
jge
mov
dec
adc
xchg
add
pop
sbbl
and
into
mov
notb
loopne
sbb
sahf
and
mov
fwait
sub
cmp
jns
sub
mov
dec
dec
push
data16
scas
mov
gs
jne
scas
fwait
insb
inc
les
jge
scas
je
loope
loop
les
xor
repz
cmc
pushf
sbb
mov
outsl
scas
loop
adc
pop
xchg
dec
add
mov
or
adcb
xchg
lock
cmp
xchg
jno
loopne
push
pop
pusha
mov
lret
pusha
ja
ret
push
mov
xor
cmp
int
dec
mov
ja
sbb
lods
and
fdivrl
ljmp
and
xchg
dec
repnz
mov
gs
mov
pop
mov
xor
ret
jmp
test
add
ficomps
out
pop
arpl
stos
sub
push
sbb
rclb
jp
push
out
mov
pop
jo
ret
in
and
scas
testb
mov
xor
aam
fiadds
mov
out
jle
aad
test
or
test
jecxz
popf
and
dec
jg
repnz
out
inc
sbb
mov
in
push
fstl
adc
cmpb
lods
jl
jbe
xchg
mov
xlat
mov
or
popa
out
mov
ja
daa
cmc
mov
pop
push
jl
sub
shrl
adc
inc
loope
pop
nop
adc
jecxz
push
xor
fs
dec
in
inc
inc
push
mov
jbe,pn
mov
and
adc
shlb
cmp
or
sarl
insb
mov
cwtl
in
imul
lahf
push
aam
pushf
xchg
jmp
inc
popa
xchg
and
out
lds
test
xchg
aam
and
xchg
jb
imul
xchg
xor
mov
notl
out
cmp
lret
xor
out
movsb
cld
xchg
mov
in
xchg
ss
not
mov
lahf
int
mov
stos
iret
xlat
xchg
jle
inc
mov
lods
leave
sub
fidivrs
negl
test
push
cmpsl
out
cmp
push
xchg
es
pop
out
in
and
in
mov
into
mov
pop
ds
idivl
iret
inc
pop
pop
push
and
jecxz
sahf
mov
icebp
pusha
pop
hlt
mov
iret
and
cmp
stos
std
clc
out
lahf
movb
sbb
getsec
ret
adc
test
test
fs
mov
test
adc
pop
cmp
das
xchg
lods
jmp
xchg
rcrl
jge
pop
mov
mov
jne
in
ja
scas
add
push
push
adc
test
dec
inc
stos
arpl
cmpl
stos
decl
daa
and
xchg
or
out
sub
sbb
outsb
movsl
jb
mov
sbb
jl
inc
in
ljmp
leave
mov
jb
ret
mov
idivb
ja
mov
fldl
jno
mov
addl
mov
ret
and
lcall
aad
out
mov
insl
jl
add
les
outsl
xchg
mov
shll
es
push
lds
mov
outsl
push
mov
stc
icebp
push
mov
push
push
into
xlat
and
xor
mov
pushf
fs
icebp
stos
test
ss
pop
xchg
mull
addl
lds
loope
fstl
out
into
and
arpl
push
in
mov
pop
insb
xchg
push
inc
dec
adc
jge
push
les
fwait
daa
mov
subb
or
push
jmp
leave
cld
mov
xchg
insl
mov
ret
adc
mov
cs
out
lcall
fs
es
mov
stos
adc
cli
pop
lahf
les
insb
mov
jge
test
cld
ss
divl
xlat
out
add
stos
ss
test
inc
dec
jbe
into
rcrl
shll
push
and
test
push
pop
jmp
in
shll
jecxz
dec
mov
xor
jbe
out
sbb
shlb
call
fiadds
fldenv
popf
push
inc
enter
jecxz
adc
aad
push
inc
call
add
jg
xlat
fisttps
pop
inc
adc
dec
outsl
pop
mov
insl
mov
sbb
ja
outsb
mov
mov
lea
outsb
sub
inc
xorb
sti
jmp
addr16
pop
xor
daa
or
pusha
es
xchg
mov
mov
push
or
pop
mov
mov
fists
pop
jbe
mov
mov
pop
adc
and
call
xor
fcmovb
arpl
xchg
sub
loopne
or
or
and
mov
in
mov
sbb
jg
or
xor
popf
mov
cmp
or
imul
add
pop
jle
notb
cmp
stos
add
inc
imul
jmp
mov
iret
aad
xor
mov
test
add
test
js
icebp
xchg
xchg
xorl
imul
sbb
dec
xor
cmp
adc
aam
mov
es
outsl
mov
adc
xchg
test
ja
fistpl
clc
pop
testl
add
mov
lea
and
add
out
push
jge
or
bound
jae
loopne
imul
into
mov
imul
dec
jae
push
sub
lcall
push
sbb
lret
push
dec
test
jge
pop
mov
xchg
xor
ja
out
xchg
nop
push
jmp
pop
inc
pusha
inc
sbb
push
jns
outsl
jp
cmpsl
in
es
sbb
mov
hlt
leave
cltd
mov
out
push
xchg
fistpll
aad
pop
mov
fbld
xor
mov
aas
mov
icebp
not
out
xor
scas
pusha
cmp
std
dec
xchg
inc
sbb
mov
dec
loope
xchg
ja
jne
test
cmp
lods
lret
rcll
dec
repz
inc
nop
dec
mov
cvtpi2ps
jg
dec
xchg
pop
mov
test
shr
jge
int3
pop
fcompl
fbstp
leave
outsl
jbe
xchg
in
mov
jge
fisubs
out
test
dec
mov
xchg
dec
pop
insb
inc
cltd
jne
in
jo
mov
mov
dec
xchg
loopne
imull
xor
inc
sbb
add
cmpsl
aaa
shlb
pop
pop
stos
jl
movsl
dec
jae
ja
stos
fucomp
fwait
les
lods
repnz
inc
insl
sbb
in
test
mov
movsl
frstor
addr16
outsl
lret
mov
insl
jg
out
cmpsb
popf
and
inc
sti
mov
lods
pop
pop
mov
iret
jo
push
adc
or
inc
cmp
clc
addr16
xchg
shll
adc
or
sub
ds
fimuls
push
int
in
fnstenv
out
pop
test
in
notl
ficoml
xor
pop
inc
out
xchg
shrl
sbb
cmpsb
jbe
pop
xor
sub
mov
push
xor
xchg
jg,pt
adc
pop
lea
xchg
mov
mov
popf
jmp
movsl
dec
mov
in
in
cwtl
lods
xchg
mov
ret
scas
adc
sbb
jecxz
dec
test
pop
mov
xchg
stc
pusha
xchg
inc
mov
xor
sbb
out
xchg
pop
cmpsb
ret
cmp
fisubs
fsubl
jnp
fs
pop
pop
jge
jb
shl
into
cmp
loop
repz
rcrl
lods
push
mov
stos
out
ja
pop
sbb
push
out
ficoms
icebp
cmp
sub
stos
sbbb
mov
mov
mov
fwait
xor
mov
push
out
pop
and
inc
std
cmpsb
push
mov
ror
aas
addr16
xchg
pusha
jge
movsb
in
push
test
aad
sub
daa
aam
imul
inc
mov
arpl
sbb
scas
std
rclb
cli
in
push
scas
xor
lds
and
mov
inc
pop
inc
fldt
dec
mov
test
adc
sbb
cmpsb
jge
dec
sar
idivb
push
and
lret
outsl
jge
mov
jl
mov
push
rorb
adc
push
mov
lods
dec
mov
sbb
shlb
push
loop
popf
fsts
incb
leave
and
mov
sub
lods
adc
cmp
pop
push
sub
xchg
mov
push
fnstsw
xor
pop
enter
in
pop
dec
xchg
cltd
mov
andl
std
jle
shlb
cmp
ret
lds
nop
jae
pop
push
adc
push
xchg
cltd
xchg
rcr
stc
mov
out
loop
jbe
test
in
jbe
sbb
sub
rorl
addr16
push
aad
cmpsb
mov
mov
stos
sbb
jnp
jnp
xchg
testl
inc
dec
sub
fiadds
dec
aad
pop
inc
xlat
push
call
fldcw
into
es
dec
cwtl
mov
jge
jge
mov
push
es
ret
out
mov
mov
insl
sub
jp
dec
js
push
jnp
sub
das
ret
sahf
sbb
and
fldcw
or
push
xor
xchg
and
out
pop
std
push
push
xchg
dec
mov
out
mov
dec
xchg
mov
fstpl
push
stos
jnp
dec
jne
fucom
xchg
add
rcrb
mov
lods
cld
ja
mov
pop
or
idiv
mov
test
jp
jbe
in
xchg
push
fisttpll
rorl
cmc
cmpsl
bound
in
scas
adc
pop
stos
rcrb
rcll
adc
bound
sti
mov
jmp
jp
inc
aad
pop
mov
fldt
cmp
and
out
es
jbe
xchg
outsl
dec
jne
lds
xor
sbb
incb
lds
or
mov
test
inc
xchg
mov
or
pop
inc
ficompl
cld
mov
fisubl
out
shl
fs
pop
push
push
jb
fdivp
xchg
jecxz
movsb
mov
mov
fidivrl
xor
sub
cs
jae
pop
push
stos
leave
in
add
jle
lahf
std
mov
arpl
xlat
add
cmp
lds
mov
sbb
out
enter
add
daa
mov
ret
sarl
cld
data16
insb
imul
jns
pop
bound
jp
fucompp
dec
mov
pushf
jle
fidivrs
mov
fcoms
mov
data16
sub
jecxz
jle
xchg
vsubsd
lock
lds
inc
rcrl
inc
cmp
repnz
fwait
imulb
test
jnp
add
jle
inc
mov
push
dec
and
cwtl
xchg
jbe
jmp
int
mov
sbb
ret
rcrl
xor
fs
jge
test
dec
int
xor
cmc
jle
push
pmaxub
stos
cld
xchg
pop
cli
test
pusha
sbb
aad
insl
push
into
inc
sub
hlt
stos
and
iret
add
sahf
mov
xor
fwait
sub
push
xchg
imul
loope
jb
fisubrs
mov
push
popf
mov
aaa
loop
jne
cmp
fsub
fs
mov
push
sbb
mov
adc
pop
push
mov
aad
sti
imul
xor
jns
jge
mov
rorb
mov
cmp
xchg
cmp
add
cmp
les
push
mov
pop
mov
lods
xchg
movsb
out
pop
scas
inc
das
xchg
pop
andb
fcmovnb
push
mulb
inc
ficompl
push
fldl
xchg
cmpsb
sbbb
imul
cwtl
out
outsb
nop
jecxz
lods
insl
xchg
xor
add
fs
push
sub
sbb
push
push
insl
addr16
cmp
movsb
call
movsb
cmp
sarl
in
xchg
mov
outsl
mov
test
inc
repnz
aaa
imull
sub
js
or
scas
dec
int
mov
icebp
mov
inc
xchg
out
xchg
lea
mov
and
cmpsb
jg
pop
mul
add
pop
test
outsl
scas
icebp
add
jbe
sub
aam
lods
idivl
jg
dec
lods
cltd
push
adc
adc
loope
in
pop
or
push
cs
es
addr16
jnp
cmp
mov
out
sti
data16
mov
xchg
add
mov
es
dec
aam
cmp
pop
cmp
push
mov
imul
rcl
mov
test
add
ljmp
mov
sub
sub
dec
pop
nop
xchg
or
test
out
mov
jo
lock
xor
popf
sahf
mov
inc
or
mov
push
iret
mov
adc
add
xchg
sbb
mov
test
seto
mov
push
mov
mov
xchg
lret
jnp
xchg
add
ret
push
xchg
in
fwait
pop
inc
into
leave
cwtl
in
loope
adc
stos
add
add
adc
mov
mov
pop
popa
jge,pt
adc
adc
jnp
nop
xchg
pop
cs
cmc
imul
mov
stos
mov
fstpl
or
movsl
dec
xchg
cmp
ret
mov
xchg
enter
fstps
inc
cmpsb
out
outsb
mov
gs
pop
ret
mov
push
inc
push
mov
es
lahf
push
in
test
out
mov
sbb
bound
not
popf
fnsave
jecxz
inc
inc
aad
rclb
xchg
or
jge
mov
xchg
xchg
inc
jne
cmpsb
mov
sets
repnz
xorl
leave
mov
popa
dec
stos
es
mov
mov
stc
push
sub
sahf
movsl
and
jae
cmp
in
pop
mov
or
mov
add
and
clc
jecxz
dec
dec
aaa
jnp
and
mov
andl
orl
hlt
aam
mov
lea
sbb
xchg
or
test
js
xor
dec
xchg
mov
lea
sub
pop
fdivrs
mov
subb
roll
xchg
arpl
xor
in
ja
aad
incb
nop
shlb
push
out
popf
idiv
cs
inc
call
es
icebp
mov
cmpsl
push
mov
mov
loope
call
dec
xchg
fchs
lods
daa
mov
mov
fsts
imul
ds
xchg
scas
jns
pop
mov
mov
push
xor
sahf
inc
mov
sub
cmpsb
imulb
lds
mov
sbb
lret
pop
stos
fisubrs
fdivl
out
jbe
in
jge
ret
aad
lea
inc
cld
xchg
stos
cmp
imulb
jne
pop
lods
sub
cld
out
dec
rolb
mov
mov
dec
mov
cmc
xor
jno
rcrl
insl
out
out
add
and
daa
sbb
sbbl
xor
into
xchg
sti
fnstsw
jbe
imull
mov
popf
icebp
mov
push
mov
mov
out
aam
mov
cs
mov
test
inc
add
idiv
aam
or
jp
sbb
or
scas
shll
add
and
vmovups
aaa
xor
dec
sbb
shll
out
inc
hlt
mov
outsb
mov
jbe
xchg
dec
popf
pushf
cmc
cmpsl
int
jle
divl
push
les
push
dec
push
inc
or
lcall
loop
xor
std
cmpsl
mov
pop
mov
out
cmp
mov
lods
in
mov
push
sub
lods
adcb
and
lods
cmp
xchg
mov
movsl
inc
test
pop
cmpsb
popf
mov
cmp
and
mov
rcrl
notl
push
cmpsl
cld
add
xlat
lods
jae
in
mov
ja
xchg
mov
cmp
enter
test
int
ret
adc
leave
cli
jae
call
out
js
inc
scas
xchg
fwait
add
xlat
bound
std
mov
sbb
es
sbb
mov
addb
mov
pop
jge
pop
popf
jns
lea
jge
outsl
enter
mov
jg
mov
pop
mov
and
mov
iret
jmp
inc
adc
daa
dec
in
cmp
pop
inc
sbbl
sbb
sub
ja
fdivrp
xchg
gs
dec
adc
scas
dec
jne
clc
scas
lods
sbb
xor
adc
repz
push
add
push
ficomps
jge
cmpl
and
inc
mov
add
pushl
pop
sbb
push
jmp
cs
pop
xchg
gs
mov
inc
leave
arpl
dec
jnp
gs
clc
mov
outsb
ja
lock
ret
and
imul
jb
in
and
ja
nop
lret
mov
xchg
mov
cld
fdivr
xchg
xchg
jle
enter
jno,pn
sbb
and
mov
addl
or
pop
setne
idivb
xor
mull
xchg
pop
decb
shrl
cmpsb
fs
scas
jecxz
stos
stos
shlb
jmp
mov
inc
xchg
nop
and
lods
xchg
jo
daa
roll
jns
jnp
xchg
mov
dec
jnp
lcall
mov
sahf
outsb
jno
scas
jne
push
mov
push
pop
dec
gs
in
out
and
jg
subb
lods
repz
cmp
movsl
into
cmp
inc
rcl
and
sbb
in
mov
adc
std
push
sbb
push
aam
jb
fwait
ret
dec
les
adcb
sub
repnz
pop
lods
in
xor
test
in
xor
xlat
sbb
push
sub
jecxz
out
sub
popf
imul
push
mov
push
and
test
mov
in
or
mov
jno
clc
sbb
push
and
pusha
repz
scas
pop
inc
or
jae
cmp
imull
pop
pop
out
mov
into
mov
mov
aaa
or
das
jge
xor
cltd
lea
es
insb
mov
pop
inc
insl
pop
fimuls
jb
cmpsl
or
leave
and
add
jnp
mov
std
out
mov
jae
sub
insl
mov
clc
xchg
mov
add
ss
cmp
dec
sbb
push
adc
jno
adc
pusha
sub
aad
dec
inc
inc
jecxz
fwait
rolb
stos
adc
dec
mov
jne
ret
cmp
dec
icebp
xchg
mov
dec
cmp
pop
xchg
sbb
notl
call
pop
mov
les
add
xlat
rcrb
add
fxtract
xor
fisttps
lret
dec
push
inc
data16
cs
addr16
aas
int3
aas
rcl
mov
jnp
jg
fs
mov
jg
dec
lods
jg
push
lds
lea
mov
pop
addr16
jbe
dec
movb
std
xor
icebp
sahf
mov
ret
mov
js
inc
mov
mov
jecxz
jne
adc
jle
mov
inc
mov
negl
push
clc
lea
jmp
sub
icebp
out
ja
mov
and
into
mov
dec
icebp
out
icebp
pop
push
aad
mov
cmc
popa
insl
pop
jge
pop
push
scas
mov
push
aaa
jg
cmp
imul
sub
les
jmp
pop
dec
jle
and
adc
mov
dec
push
add
pop
inc
lea
inc
in
sbb
cmpsb
movsb
jge
daa
bound
pop
arpl
jecxz
pop
or
iret
imul
incl
es
xor
jecxz
sub
xchg
jne
loop
push
pop
mov
test
testl
lock
aad
xchg
out
rcl
xchg
imull
bnd
sub
cmpl
and
out
in
cmpsl
and
mov
out
pop
test
mov
jns
int
adc
mov
cmp
into
pop
stc
and
pop
jnp
xlat
xor
sbb
xchg
mov
push
repz
pop
rol
sbb
add
pop
dec
mov
rolb
nop
lcall
push
mov
fldt
lods
divl
xlat
clc
push
xor
std
fwait
adc
ss
iret
stos
lahf
movsl
outsl
xchg
xchg
popf
add
aas
adc
div
andl
lcall
mov
cmpsl
pop
iret
ljmp
les
adc
movsl
notl
out
and
push
pop
lahf
les
outsb
jl
jo
adc
dec
xchg
mov
sub
lock
std
fwait
xchg
in
cmp
shr
test
aaa
push
mov
xor
stc
xor
ret
mov
and
ffreep
sarb
jp
enter
jge
xchg
stos
push
flds
sub
stos
stc
lods
test
mov
or
mov
jge
icebp
cmp
cmpsl
or
out
jno
pop
into
aad
insl
les
pop
mov
mulb
dec
mov
add
mov
sub
leave
int
jnp
mov
lret
jne
addr16
mov
xor
js
mov
pop
lret
mov
add
repz
or
in
add
sub
push
jle
add
or
mov
mov
sbb
icebp
out
pop
js
mov
outsb
push
je
xor
adc
dec
jnp
test
lahf
xlat
insl
add
andl
mov
lods
dec
sbb
cwtl
dec
xchg
adc
cmc
mov
cmc
imul
inc
in
push
call
insl
repnz
mov
mov
push
cli
imul
mov
xchg
mov
add
fidivrs
jno
add
xor
and
fucomi
inc
push
clc
and
sbb
into
fwait
lods
scas
int3
add
mov
psubq
fidivrs
les
gs
in
mov
ret
rcll
mov
daa
outsl
stos
mov
aas
loope
xor
cmc
aaa
xchg
shll
pop
out
sahf
pop
mov
into
es
jle
fs
gs
mov
mov
into
xchg
and
mov
inc
mov
adc
push
mov
mov
fsub
scas
es
movsb
test
es
sbb
mov
repnz
pop
imul
outsb
or
es
aas
mov
mov
in
mov
stc
testl
dec
pop
aam
lahf
mov
inc
in
xchg
jecxz
lods
pop
dec
test
jbe
xchg
push
dec
xchg
add
mov
pop
mov
xor
icebp
pop
and
out
push
adc
lods
or
enter
bound
fs
outsb
ror
cmpsb
test
inc
xchg
out
orb
mov
stos
xlat
jecxz
mov
or
add
jg
inc
inc
movl
cmpsl
jbe
mov
mov
inc
or
into
or
cmp
mov
adc
add
mov
fs
cld
push
ret
pusha
aad
push
sbb
xchg
pop
addr16
imul
popa
out
fwait
sub
dec
mov
adc
test
cwtl
fmul
push
and
aad
outsl
dec
xchg
xlat
sub
mov
sbb
mov
loopne
pop
jmp
pop
and
or
ja
ljmp
fisubs
aaa
sbb
out
ror
divl
push
int3
adc
xchg
test
cmp
andl
and
data16
cmp
inc
out
or
pop
in
mov
push
dec
mov
sbb
int
lods
pop
cmpb
aad
jge
sbb
mov
lods
or
pop
jl
cli
xchg
lds
pop
or
test
lods
push
rcl
and
xor
mov
out
lahf
mov
mov
fwait
cmpsl
sub
stc
adc
aaa
mov
jb
lods
dec
outsl
mov
jmp
sub
xchg
shl
or
shll
subl
mov
movsb
hlt
int3
rcl
rcrl
mov
rol
popa
div
int
xchg
add
cli
inc
dec
out
insb
popa
lods
loope
pop
xor
dec
scas
pop
jne
dec
sub
subb
out
jmp
inc
ret
outsl
dec
fldt
or
lods
sbb
jge
adc
add
or
mov
insl
data16
dec
out
test
inc
adc
out
sarl
notb
sbb
mov
push
rcl
mov
sti
rol
mov
sbb
sahf
xor
and
xchg
repz
push
jge
cli
ficomps
mov
push
xchg
cmp
negl
xchg
inc
adc
add
add
cs
mov
loop
cmp
mov
das
sysret
gs
pop
ja
pop
in
lods
gs
push
icebp
sti
in
out
adc
pop
outsl
out
add
adc
into
inc
jne
test
dec
outsb
pop
ja
sbb
les
push
xor
add
orb
pop
clc
add
in
fidivs
sbb
or
outsb
sub
push
or
pop
mov
mov
int3
adc
jbe
sbb
ret
jae
mov
in
push
xchg
fbstp
pop
adc
push
jne
fisubrs
mov
inc
mov
jmp
mov
addr16
mov
and
addr16
xor
add
inc
pop
and
ds
fs
jg
push
mov
sbb
dec
inc
cmc
xchg
jg
jo
sub
inc
es
movb
mov
test
mov
test
aad
push
jne
jae
mov
dec
cmp
scas
decb
xchg
sbb
cmpsl
xchg
jmp
out
arpl
sub
sarb
fisubrs
rep
rorb
aas
and
sahf
cmp
cmp
arpl
jb
xor
fsubp
fldenv
sub
xorl
shr
xchg
cmp
in
mov
cmpsl
inc
mov
xlat
inc
ret
pop
dec
out
subl
cmpsb
cmpsl
mov
loopne
shlb
repnz
add
stos
fdivl
std
repz
mov
inc
add
nop
ret
jnp
and
test
mov
roll
sub
ret
out
pop
fdivr
xorb
ljmp
in
jg
in
and
idivl
cmpsl
std
inc
xlat
gs
add
mov
aas
loop
inc
shr
popa
inc
addl
add
ret
mov
and
jne
add
xlat
loope
sarl
xchg
inc
test
jl
xor
mov
pop
les
test
leave
dec
mov
pop
jns
jno
enter
dec
lcall
jl
stos
addr16
push
outsb
out
add
pop
add
les
sub
adc
sbb
push
cmpsb
aaa
xchg
into
or
aad
sub
mov
js
in
adc
sbb
inc
mov
adc
jg
push
sub
int
aaa
cs
cmp
lods
jecxz
pop
adc
roll
in
xchg
mov
mov
lahf
xchg
fs
inc
sbb
pop
cmp
loop
fcoml
mov
jge
and
add
push
gs
ffreep
imull
nop
addl
addr16
jo
loop
xor
add
or
mov
jp
cmova
div
push
sub
mov
sarb
aaa
ret
push
push
popa
imul
loopne
cmp
testb
xor
lods
xchg
dec
push
sbb
clc
dec
andb
in
mov
mov
xor
shll
sahf
cltd
js
ret
rcr
inc
or
adc
cmpsl
pop
in
inc
mov
pop
lds
fs
popf
jns
sbb
push
xor
sbb
jne
dec
repz
repnz
addl
mov
cmp
jge
out
lahf
jecxz
jle
movsb
xchg
sbbl
fstl
loope
lds
repnz
mul
in
test
addr16
loope
hlt
fs
mov
push
repnz
mov
mov
push
mov
lods
popl
pusha
fsub
dec
mov
aad
insb
rclb
stos
xor
pop
ret
add
dec
push
stc
inc
jge
push
aaa
ds
lods
fidivrl
mov
cli
sahf
ret
hlt
jmp
lds
jo
gs
jae
outsl
add
jae
inc
mov
out
loop
dec
cli
xchg
cmp
xchg
fcomip
test
cmp
push
pop
in
xchg
fcmovb
push
mov
push
push
add
gs
repnz
jae
jecxz
add
lods
test
or
pushf
add
jge
cmp
sbb
nop
mov
sti
mov
xor
cmc
cmp
loopne
scas
jo,pn
negl
rcrb
arpl
addr16
or
add
push
jnp
inc
pop
cmpsl
out
jmp
lods
pop
fistl
dec
xchg
mov
out
leave
gs
ret
push
inc
test
mov
mov
lcall
divb
fucomi
mov
xor
dec
repz
cmc
push
xor
mov
in
stos
sti
inc
movsl
xchg
das
cmp
pop
mov
popa
pop
mov
lcall
and
gs
mov
imul
inc
fnsave
shll
nop
test
sahf
jbe
mov
scas
jno
lcall
xchg
shll
xchg
dec
mov
lock
xor
pusha
dec
xor
repnz
mov
ja
sub
in
movsb
pusha
cmp
inc
stos
push
cmp
and
mov
icebp
test
jb
int
jbe
jecxz
out
inc
fsubrl
jg
out
ja
jle
cmpsb
rcrl
mov
outsl
xchg
cmc
push
std
loope
nop
mov
popf
pop
adc
fisubs
movsb
outsl
movsl
and
xchg
adc
inc
mov
inc
jb
mov
pop
add
pop
jle
ficomps
jle
popf
scas
addr16
cmpsb
fwait
jne
dec
xor
shrb
fwait
mov
test
imull
xchg
loop
cmp
inc
in
xchg
inc
xchg
lock
popa
dec
ljmp
jle
xchg
add
addr16
aas
xorl
movl
arpl
or
push
aaa
jno
divb
ret
movsb
testl
scas
sbb
push
in
mov
out
inc
sbb
mov
data16
inc
popf
addb
gs
data16
xchg
sub
gs
jp
xchg
sub
add
pop
sub
clc
cmp
insl
and
faddp
js
arpl
dec
jbe
mov
pop
sahf
mov
cmp
std
pop
pop
fisubl
inc
pop
cmp
stos
jmp
push
repz
negb
mov
shrl
daa
pop
mov
nop
xor
xchg
loope
xchg
imul
push
popf
iret
and
inc
jge
lock
pop
loop
mov
xlat
mov
in
mov
add
mov
jo,pt
adc
jnp
mov
test
mov
addr16
shlb
push
adc
mov
push
jo
pop
mov
es
sbb
dec
add
push
fcomi
hlt
jae
mov
cmp
pushl
repnz
xor
dec
neg
or
xchg
push
addr16
jno
xlat
fldenv
mov
inc
rcr
jne
add
mov
and
andl
add
clc
add
fisubrs
outsl
cmpsl
cmpsb
and
test
xor
or
mov
shr
mov
rorb
mov
jle
jns
inc
stc
fcmovnb
and
test
or
mov
out
add
mov
or
xor
scas
adc
test
jae
fsub
nop
pop
add
jmp
cmp
xor
jmp
pop
sub
iret
movsb
jnp
in
cmp
jecxz
cmc
xchg
add
lahf
jns
sbb
jne
fisubrl
mov
xchg
jmp
lahf
jnp
ret
arpl
xchg
outsl
xchg
lcall
repz
push
or
loope
mov
aad
stos
jle
inc
idiv
pop
mov
out
xchg
ds
push
leave
mov
cld
cld
test
scas
nop
iret
pop
fst
sti
jno
jmp
lcall
inc
iret
scas
pop
scas
imul
xorb
dec
jmp
jge
sar
imul
loop
rolb
aad
mov
push
insb
mov
jo
pop
je
mov
aas
and
push
mov
xor
fwait
pop
lahf
cmp
xchg
mov
add
out
ss
jno
or
addr16
scas
jo
aad
test
mov
lods
js
aad
shll
bound
dec
repnz
mov
pop
inc
movsb
daa
add
lahf
test
dec
inc
test
sub
sub
mov
cmp
ljmp
fidivrs
ret
add
sbb
or
mov
push
aam
sahf
out
shrl
imul
inc
arpl
or
or
gs
mov
jge
insl
outsb
movsl
sub
or
repnz
js
iret
out
setnp
jp
daa
mov
push
mov
jmp
sti
lret
pusha
incl
daa
mov
bound
pop
loop
jne
cmpsb
inc
push
push
loop
mov
jne
fsubs
loope
loope
mov
fiadds
mulb
mov
jecxz
aam
xchg
inc
ret
loop
mov
std
std
xchg
xorl
fwait
call
mov
mov
scas
ss
outsl
and
data16
out
fiadds
scas
mov
test
out
repnz
mov
inc
cmc
pop
adc
ss
or
sub
mov
out
inc
test
cmpsl
test
icebp
cmpsl
jmp
ss
sbb
cmp
jnp
into
aad
inc
shrl
jecxz
test
inc
cmpsl
mov
xor
into
xchg
cmp
and
test
cmp
lcall
jno
xchg
mov
aam
jg
mov
les
out
decl
imul
mov
aas
lcall
loopne
cmp
push
fxam
sbb
js
test
jb
aad
cmc
xchg
vmovdqa
mov
mov
cs
jne
push
and
or
mov
aad
mov
out
pop
movsl
fwait
cmpsb
mov
sub
test
adc
out
add
dec
in
into
ffreep
push
jle
ret
push
push
push
popa
pop
rcr
jne
ss
inc
jp
cmp
xchg
out
fwait
int
sub
lret
inc
push
inc
xchg
mov
stos
testb
imul
cmp
not
mov
push
inc
scas
sbb
and
pop
push
mov
mov
call
call
xlat
addr16
inc
daa
mov
ja
xchg
push
loope
or
or
enter
mov
mov
cld
push
cmpsb
jg
sahf
xchg
mov
divl
or
xchg
add
fucomip
jns
sub
lcall
mov
lds
xchg
movsl
cmc
les
test
add
iret
jbe
mov
fildll
roll
add
pop
inc
test
in
test
sbb
xor
movsl
mov
addr16
mov
push
mov
out
fldt
imul
pop
idivl
cmpsl
inc
arpl
out
int
or
jb
movsb
iret
jno
nop
incb
sbb
fldl
mov
or
ja
mov
push
movsl
cmpsl
and
lea
ja
jb
insb
mov
vzeroall
les
stc
je
pushl
jno
mov
push
outsl
adc
out
cmp
lods
mov
scas
stc
aam
jne
rcrl
movsl
shrb
mov
je
movsl
inc
jae
notb
arpl
lods
dec
adc
movsb
jno
jmp
sub
inc
cmp
out
stos
test
adc
scas
mov
xchg
outsl
cmp
pop
inc
fbld
mov
sahf
jnp
ljmp
movsb
dec
shll
ret
sub
dec
in
cmp
addr16
imul
cmp
stos
shrl
push
ds
shrb
jno
divl
inc
mov
data16
shlb
xor
push
mov
shl
jg
cmp
xchg
call
hlt
mov
push
es
xchg
pop
mov
xchg
sti
pop
lea
jae
ja
movb
push
aad
jge
imull
out
out
add
mov
mov
and
popa
test
mov
cli
pushf
dec
je
jecxz
mov
clc
sahf
rcll
sti
lds
fisttpl
mov
ja
adc
mov
xor
sti
enter
xchg
or
lahf
icebp
lret
call
push
movsl
andl
or
and
into
loopnew
sarb
mov
add
add
out
dec
jge
addl
das
data16
or
std
mov
mov
mov
movsl
xchg
mov
sub
mov
lock
insb
mov
lock
jns
ret
xor
mov
adc
divb
out
jae
inc
mov
pushl
out
mov
jno
out
leave
es
fdivp
imul
and
add
out
inc
add
adc
push
jmp
xchg
jmp
mov
imul
rorl
pop
push
aad
push
lds
push
lret
ljmp
ss
jbe
ja
addr16
out
sbb
and
jne
arpl
imul
cmp
xor
icebp
push
inc
mov
icebp
inc
ret
daa
call
mov
jecxz
sbbl
push
bound
push
divl
out
stc
lods
sbb
cmp
add
sbb
mov
cs
ficomps
lea
negl
dec
jne
mov
push
push
xchg
fwait
addr16
aam
imul
cs
jg
out
jle
sbb
out
test
jns
push
xchg
cmpl
inc
insl
mov
test
pop
testl
or
out
or
mov
cmc
push
scas
cmp
pop
xchg
addr16
sbb
jbe
je
movsl
mov
mov
test
cmc
sti
lods
aam
jle
jbe
out
aas
fstpl
loope
jnp
arpl
loope
rcrl
loope
inc
roll
dec
inc
mov
scas
add
fs
xchg
sbb
loope
push
fbld
inc
xchg
jb
sahf
inc
jno
test
mov
sbb
cltd
das
ret
xor
ficompl
jo
lds
scas
dec
out
xor
cmpsl
mov
inc
out
or
sbb
filds
mov
nop
hlt
cltd
addr16
inc
cmp
out
push
sbb
out
cmpsb
loopne
movsl
movsl
popf
lahf
sub
adc
jmp
sub
outsl
lds
push
scas
out
mov
jg
out
adc
or
jno
ja
cs
mov
fbld
imul
fdivs
xor
cmpl
cmp
popa
mov
lds
ret
outsb
mov
lds
lret
fs
pop
in
and
mov
into
inc
shlb
test
or
stos
jb
div
out
jo
or
fwait
dec
jl
mov
mov
notb
out
in
out
cltd
jae
pop
loop
rcrl
sub
orb
jno
and
jle
or
xor
addb
push
xchg
add
mov
movsl
pop
jge
cli
insl
mov
adc
into
stos
roll
cmp
outsb
add
clc
push
mov
pop
je
and
in
loop
fsubr
jns
jno
ret
xchg
jns
std
insl
sbb
dec
push
mov
sbb
rcrb
gs
jns
mov
add
inc
lea
andb
xor
sahf
roll
movsb
mov
mov
fadds
rolb
xor
scas
jmp
xor
and
push
aaa
mov
xchg
mov
pop
fstpl
negb
cmp
cmpl
xchg
daa
cmp
mov
push
mov
jl
xchg
shl
add
rolb
dec
mov
and
cmc
scas
jns
xlat
mov
and
repnz
mov
mov
shlb
std
popf
mov
insl
popa
or
jge
out
ja
fiaddl
rcrl
shrb
dec
push
jo
cmp
mov
jnp
push
je
mov
cmp
dec
dec
rcll
inc
pop
sub
call
les
popa
sub
pop
ss
cmp
xorl
lahf
test
mov
call
jmp
xor
mov
arpl
int3
jnp
outsl
push
jle
sbb
aam
notb
adc
lea
mov
xchg
jns
ljmp
frstor
pop
sub
adcb
add
insb
add
sbb
inc
out
add
mov
jae
push
testb
add
mul
fwait
aad
or
dec
mov
or
pop
xchg
dec
mov
and
loopne
pop
stc
clc
fbstp
movsl
inc
ja
cli
mov
xor
or
testl
stos
stos
sbbb
or
and
je
data16
xchg
test
push
jp
mov
mov
fisubrs
xlat
scas
mov
dec
sub
jns
push
or
add
and
mov
lcall
push
dec
mov
jmp
daa
or
add
lcall
les
jae
cmpsl
lahf
shl
and
outsb
push
adc
mov
add
stc
cmp
adc
insb
cmpsb
das
cmpb
jmp
pop
dec
and
clc
xadd
pop
pop
aad
xchg
in
test
pop
int3
lea
or
inc
arpl
pop
mov
jle
scas
addr16
sub
dec
test
loope
clc
cmc
mov
push
insl
mov
mov
in
cld
rorb
add
inc
mov
ss
lret
lock
shl
cmpsl
mov
cmpsb
test
mov
and
pop
mov
xlat
inc
dec
xchg
mov
inc
sbb
mov
pop
jns
les
mov
cltd
fisttpll
in
mov
xor
pop
ror
data16
js,pn
cmpsl
xchg
lods
hlt
rol
jp
scas
cwtl
fwait
cmp
rcll
xorb
call
data16
pop
pop
mov
movl
add
pop
scas
mov
fwait
push
dec
sbb
dec
dec
adc
mov
movl
shll
fs
ret
mov
dec
divl
imul
ffree
mov
bound
dec
in
cmp
xlat
push
pop
fiaddl
shrb
jbe
xor
push
cmp
stos
push
imul
fnstsw
stos
mov
fisubrs
inc
mov
or
rolb
aas
add
jge
into
addr16
mov
sbb
pusha
arpl
pop
in
ljmp
jle
push
xchg
pop
andl
xchg
xchg
cli
aas
les
adc
cli
stos
sub
scas
xchg
imul
loopne
sti
repnz
lret
jmp
fnstenv
jne
in
and
add
popf
pop
loope
outsl
cli
sarl
scas
addl
jmp
decl
aam
es
xor
shrl
push
mov
push
insl
lods
mov
add
stc
inc
ss
or
pop
lret
mov
push
jne
mov
xor
int3
out
enter
sbb
add
sub
das
push
push
jmp
fwait
adc
rcrb
das
jbe
adc
shll
dec
call
fidivrs
mov
aaa
out
mov
push
and
fnstsw
gs
enter
fcompl
sahf
jge
cmc
mov
xor
fwait
mov
out
or
push
fucomip
xchg
imul
ss
mov
roll
je
lods
jnp
btc
pusha
test
push
test
pop
and
in
scas
orb
inc
sbb
lea
fwait
icebp
mov
xchg
out
movsb
dec
inc
jnp
mov
cs
aaa
inc
scas
xchg
cmc
inc
push
mov
push
push
outsb
vhsubpd
pop
pushf
ja
sub
pop
sub
scas
cmpsl
xor
inc
notb
mov
adc
aas
test
jecxz
lods
sahf
mov
pop
test
fwait
sbb
xchg
ret
mov
shrl
inc
rorb
xchg
out
adc
stos
sbb
stc
call
in
or
inc
pop
ret
mov
push
repnz
out
add
scas
rcrl
loope
addr16
inc
iret
fisubrs
stos
sbb
cmp
cs
in
mov
jo
mov
inc
ja
rolb
and
out
incl
gs
sbb
adc
jmp
xchg
jbe
test
in
addr16
push
push
cmp
dec
inc
cmp
mov
dec
mov
leave
lahf
jb
push
lds
mov
test
or
test
addr16
sub
fs
push
std
out
shll
and
jo
imul
jne
pop
call
pop
repz
push
les
lret
xchg
mov
dec
xchg
idivb
pop
out
jns
ss
loop
ljmp
jecxz
cmp
out
rcll
push
pop
rcrl
sub
mov
jle
je
jno,pn
pop
aam
cs
cmpsl
lea
inc
push
and
push
cld
popf
jnp
cs
insb
data16
sti
fbld
test
xor
movsl
out
or
in
xchg
mov
into
push
mov
jecxz
cmp
fildll
mov
cmp
hlt
cmp
jno
sbb
pop
cmpsl
cwtl
fmul
cmc
ja
les
insl
jne
fs
cmc
jge
lahf
pop
cmpsb
jne
into
inc
xchg
jecxz
cld
or
nop
movsl
adc
sub
jb
repnz
dec
xor
fs
mov
scas
jbe
push
daa
and
pop
and
test
dec
sub
push
faddp
or
add
add
shll
cmp
jge
loop
out
outsl
icebp
outsl
rclb
push
xorl
xchg
movsb
jno
cmp
fsubrs
call
xlat
call
dec
mov
cs
mov
out
addr16
mov
and
cltd
sub
jae
dec
hlt
pop
pop
add
pop
nop
fistpl
shlb
pop
je
adc
stos
sub
mov
orb
lcallw
xor
icebp
inc
add
imul
mov
leave
sbb
in
pop
pop
sbbl
cwtl
sti
mov
cmpsl
repz
add
pop
dec
lret
outsl
inc
jl
cwtl
inc
jb
inc
or
pop
xchg
flds
insb
xchg
fwait
lods
arpl
sbb
scas
test
ds
push
fdivrp
and
mov
xchg
push
call
movl
xchg
icebp
jns,pn
or
fs
pop
mov
fildl
fdiv
scas
cltd
xchg
mov
mov
nop
mov
jnp
add
sbb
xchg
pop
js
sub
jbe
mov
pop
mov
das
jno
push
cmp
mov
dec
push
pop
xchg
pop
pop
xchg
xchg
inc
push
aaa
and
mov
in
aam
fwait
add
popf
loopne
jnp
jg
mov
clc
outsb
sub
decl
pop
addb
lahf
into
jmp
lcall
add
add
rorb
mov
jnp
mov
rcr
repnz
subps
imulb
std
stc
in
leave
push
ficomps
lds
les
test
out
sub
fwait
packuswb
out
add
dec
sub
push
cli
jle
mov
iret
adc
dec
mov
mov
jle
cmpsl
insl
test
sarb
rclb
loopne
orb
mov
mov
aad
out
into
insb
sahf
add
xchg
push
test
jp
dec
pushf
mov
scas
imull
filds
add
out
inc
out
test
ret
add
mov
dec
xchg
lds
imul
test
frstor
cli
pusha
fidivs
push
adcb
pop
cmp
xor
dec
and
cli
aas
aaa
out
icebp
fbld
out
pop
pop
dec
dec
int3
sub
mov
lahf
or
mov
in
xchg
jecxz
in
sti
push
leave
lds
xchg
jmp
fbstp
mov
stc
and
sub
adc
add
stc
push
and
xorl
sbb
shll
push
push
pop
and
into
scas
ret
into
cld
sti
and
xchg
clc
jecxz
icebp
int
shlb
nop
sarl
push
mov
cmp
cli
out
stos
mov
dec
cld
aam
and
inc
add
push
mov
fistps
pop
js,pn
inc
dec
inc
pop
cmpsb
or
jne
xchg
pop
jnp
lds
cli
mov
and
shll
mov
ds
mov
pop
scas
or
test
mov
adc
fstl
addr16
loope
inc
or
adc
lods
push
mov
sub
cmp
mov
cli
mov
lahf
dec
test
jge
ds
sbb
dec
add
fwait
pop
xor
ret
and
lret
pop
scas
roll
out
or
sbb
repnz
sti
in
pop
ljmp
not
shll
mov
mov
stc
into
mov
add
fwait
out
ret
add
enter
flds
stos
sub
outsl
inc
rol
cmp
insl
out
pushf
je
jg
push
shlb
inc
inc
rorb
inc
push
addr16
sbb
aas
out
addb
fsubl
or
and
btc
cmpsl
icebp
cmp
adc
push
or
je
ret
out
pop
mov
loopne
xchg
test
sti
inc
adc
lds
pop
and
push
push
cltd
cs
cmp
or
shr
neg
mov
and
xchg
fstpt
push
pop
jnp
or
test
out
shl
mov
stc
xchg
int3
or
adcl
sbb
stos
test
test
mov
roll
jmp
or
mov
iret
mov
fwait
stos
inc
xchg
les
cli
mov
xlat
divb
push
call
xlat
jg
jl
lea
dec
sbbb
subb
outsl
jmp
and
mov
ret
mov
movsb
test
push
xor
test
cmpsl
push
imulb
lret
jne
aad
gs
frstor
test
and
sahf
subl
mov
or
or
xorl
fisubrs
decl
gs
ficomps
xor
lds
in
iret
cs
je
mov
jmp
test
mov
cs
pop
pusha
aad
mov
cmp
inc
push
lcall
rolb
shll
add
test
jp
jle
stc
pop
pop
out
push
xlat
xchg
loop
dec
or
mov
fsts
leave
jmp
out
clc
dec
jns
test
xor
adc
mov
dec
leave
mov
into
addr16
cmpsl
add
sbb
dec
jne
pop
lods
xchg
out
cmpsl
mov
sub
sbb
jmp
out
pop
dec
ss
inc
negb
cmpsb
out
add
sbb
push
cld
test
scas
add
xor
loop
movsb
mov
cmp
mov
jecxz
lods
test
sub
and
pop
addr16
stc
mov
pop
add
out
cmp
test
dec
data16
push
stc
mov
ror
int
addr16
or
bound
jmp
fldcw
xchg
ret
aad
out
cli
jmp
jg
aad
mov
jge
jmp
insl
insl
adcl
pop
adc
and
inc
add
pop
dec
in
adc
es
aam
ret
jo
ret
sbb
leave
cmc
stc
es
and
push
cmpsl
mov
jmp
fldenv
jp
add
xchg
mov
movsl
mov
out
mov
adc
outsb
adc
test
ret
jg
subl
cmp
stc
gs
idiv
imul
addr16
cmpsl
mov
in
dec
ss
out
mov
flds
cmp
sti
jg
out
mov
mov
in
je
stc
mov
add
fwait
mov
bound
pop
cwtl
mov
mov
pop
cltd
jnp
inc
stc
nop
aas
mov
or
scas
js
mov
out
jo
test
jne
sbb
push
add
idivl
test
out
imul
or
adc
xchg
out
cmp
push
dec
sub
loopne
rcrb
std
pop
fidivrs
or
mov
push
mov
jecxz
rclb
cmp
stc
in
repz
fstpl
and
sbb
jmp
inc
bnd
cmp
icebp
lods
outsl
out
leave
or
aam
inc
dec
insl
addr16
in
xchg
mov
jmp
push
in
xor
sar
daa
adc
xchg
and
pop
mov
out
and
shrl
enter
mov
pop
jmp
xchg
xor
or
dec
mov
add
rcrb
insl
mov
fdivl
ret
jbe
mov
loop
xchg
dec
jmp
std
cltd
loop
and
jecxz
adc
cmpsb
jge
cmpl
lahf
pop
pusha
jecxz
imulb
out
and
cltd
cmp
cmp
jmp
cwtl
addr16
leave
clc
jecxz
mov
push
movsl
xchg
mov
aad
imull
mov
rcl
test
jle
andl
leave
inc
ljmp
outsl
cmp
leave
sub
loopne
jg
cmpl
jecxz
imulb
out
inc
mov
mov
shl
sub
mov
dec
add
sub
adc
pop
mov
outsb
mov
rcl
loop
scas
cmc
xor
in
mov
jb
push
or
inc
repnz
test
lret
cmp
cli
out
imul
ljmp
ret
pop
inc
add
dec
idiv
sbb
cmp
ret
subb
outsb
dec
loopne
in
and
inc
fcoms
addl
xor
outsb
icebp
jbe
xchg
xchg
in
out
loop
in
mov
outsb
jge
or
push
mov
adc
iret
mov
ret
shlb
test
add
or
inc
enter
lret
sbb
mov
mov
pushf
test
or
adc
ret
dec
jg
out
inc
mov
xor
inc
rcll
test
add
jecxz
lock
mov
dec
in
xchg
sub
into
cli
mov
xor
sbb
cmp
loop
pop
dec
jbe
xchg
mov
lds
ja
sbb
outsb
jmp
mov
rcr
jb
fistpll
xchg
inc
pop
cwtl
js
add
test
andl
add
mov
lds
imul
ja
sub
negb
out
in
orps
and
movsl
pmulhw
inc
add
in
movsl
rorb
jmp
imul
mov
pop
fnstsw
push
mov
push
mov
push
mov
pop
fiadds
inc
idivb
aaa
leave
xlat
jae
movsl
imul
test
rclb
mov
push
sti
mov
mov
add
add
imul
arpl
repz
in
repz
jo
test
sbb
push
shrb
incl
jmp
xchg
sbb
pop
test
dec
dec
sbb
dec
mov
jae
cmpsl
ja
mov
stos
pop
mov
jne
push
sub
lds
and
mov
mov
dec
jle
fwait
ss
jg
add
les
jecxz
fcomi
std
pop
push
aas
cmpsl
xor
mov
add
les
and
pop
in
pop
dec
rcl
insl
mulb
les
shlb
cli
lods
and
pop
inc
dec
and
les
cs
in
ljmp
adc
xor
jg
std
xchg
mov
leave
outsb
xchg
adc
lods
pop
xchg
shll
repz
dec
pop
xchg
sbb
and
or
pop
jo
sbb
sti
pop
daa
cmpsl
xchg
test
add
dec
mov
pop
mov
in
int3
scas
sub
imul
cmpsl
rcl
cmc
hlt
aad
movsl
inc
cwtl
adc
icebp
in
inc
out
xor
mov
lods
test
aad
sbb
not
or
or
mov
mov
and
cmpsb
xor
subl
jg
je
int3
mov
call
cmp
inc
scas
inc
scas
mov
xchg
xchg
or
adc
mov
stos
jns
dec
or
leave
testl
cmc
mov
xlat
or
out
movsl
out
push
xchg
test
stos
cltd
mov
adc
xor
inc
push
fdivs
and
or
pop
add
mov
inc
dec
or
lcall
outsl
ret
test
stos
jge
adcb
sub
idiv
imul
imul
je
adc
push
js
xor
call
bound
push
adc
mov
iret
sbb
add
jmp
add
adc
je
cmp
scas
sarl
adc
scas
cld
jp
push
jne
mov
ljmp
cmp
jge
jp
lods
ja
nop
jp
mov
rorl
mov
cmpsl
sbb
sub
dec
lahf
popa
sar
test
and
jg
cmp
pop
out
inc
sahf
adc
sbb
scas
cmp
and
adc
lret
lea
mov
add
and
sbb
cmp
mov
roll
pop
push
fwait
cwtd
clc
cmp
add
cs
dec
mov
add
jmp
sub
xlat
jns
push
pop
xlat
mov
scas
cmc
cmpsl
xor
cltd
mov
sarb
out
movsb
inc
fwait
lods
pop
popa
cli
adc
mov
sbb
xchg
pop
push
icebp
sti
inc
cs
insb
aaa
ss
test
loope
stc
xchg
sarl
cs
jmp
sub
data16
mov
mov
add
cmpl
dec
mov
jnp
xor
sahf
cmpsl
int3
jo
and
iret
mov
lret
xchg
jmp
sti
jae
pop
jns
push
rcrb
pop
adc
dec
push
mov
jne
mov
add
adc
push
and
bswap
rol
add
in
es
or
fwait
cli
fidivrs
xchg
jo
das
les
mov
push
repz
popa
add
inc
inc
or
ljmp
jle
aas
movsl
push
mov
jns
add
inc
loop
shll
cmpl
loop
dec
mov
inc
mov
data16
fnstcw
pop
pop
and
jle
jae
add
subl
adc
jne
fwait
mov
daa
lods
cmpsl
loopne
push
jns
jbe
outsl
into
xlat
push
divl
lods
aas
jno
dec
and
mov
jns
or
add
leave
inc
ret
scas
mov
orl
push
sti
stc
mov
cli
ss
xchg
mov
add
jb
out
push
sahf
mov
sahf
insl
xor
ja
inc
cmp
xor
jo
dec
adc
fnsave
out
sub
xchg
pop
mov
sub
outsb
jno
jne
out
arpl
xchg
adc
ss
ret
lds
xchg
mov
xor
pop
lock
adc
sub
adcl
mov
divl
xor
mov
rolb
xchg
adc
cmpsb
idivl
cs
or
inc
cli
or
jo
aas
cmpsb
pop
nop
mov
cmc
add
clc
inc
jge
mov
decl
dec
push
aaa
imul
jle
cltd
mov
cmp
int3
nop
mov
cmpsl
add
mov
fnsetpm(287
adc
mov
sbb
xlat
cmc
fs
ja
sbb
shll
rcl
cmp
ja
outsb
movsl
xor
lods
lcall
cmp
outsb
jo
push
loopne
mov
in
mov
adc
addl
cltd
and
testb
outsl
lret
xor
xor
and
and
aad
xchg
cmp
fs
push
loopne
mov
arpl
ret
adc
push
mov
and
xchg
cmp
out
movsl
push
mov
je
mov
adc
jns
dec
jne
ja
idivl
mov
imul
std
data16
cmp
std
std
jne
loopne
adc
mov
fdivrl
xchg
shrb
push
ret
xorl
xchg
mov
fwait
shl
jae
testl
mov
mov
sahf
imul
mov
mov
xor
cmp
or
test
aas
mov
dec
cmc
xchg
xchg
lods
data16
cld
popa
xchg
pop
inc
cltd
xlat
mov
test
js
lahf
cmp
jmp
test
sbb
decl
push
aaa
sub
push
inc
scas
jno
imul
pop
lock
jmp
daa
pusha
testb
push
jno
jge
rcll
fists
and
insl
sub
push
in
outsl
lock
jp
popa
out
cltd
mov
outsl
into
aaa
xor
stos
mov
jge
xchg
mov
popf
shl
mov
pop
xor
cmp
jecxz
mov
inc
and
jmp
xchg
adc
cmp
in
addr16
in
idivl
and
orl
adc
mov
push
loope
mov
xchg
icebp
inc
dec
lock
push
mov
lds
pop
xor
roll
push
test
pop
fwait
mov
push
bnd
icebp
push
out
fs
mov
and
dec
mov
push
mov
ljmp
push
mov
add
pop
xor
cli
lds
sti
ret
mov
xchg
psrlw
jne
xchg
jp
shll
aaa
mov
mov
xchg
lret
test
nop
loopne
dec
xchg
in
ja
fildl
test
loop
fldl
pop
pusha
push
movsb
push
addr16
lcall
xchg
jmp
idivl
pop
dec
pop
inc
and
scas
ret
inc
adc
push
xchg
push
inc
add
mov
pop
lock
mov
call
sarb
mov
mov
lock
in
xchg
or
das
xchg
loop
aad
dec
test
arpl
ret
add
mov
shlb
lahf
sbbl
js
test
pop
fnstsw
jbe
jecxz
inc
mov
loop
aad
jne
mov
xchg
fs
add
arpl
inc
dec
testl
push
inc
add
and
jge
std
sbb
stos
les
xor
sbb
rolb
xchg
in
adc
xchg
iret
cmp
ja
adc
mov
jle
es
xchg
in
sar
gs
movl
out
push
pop
fcmovb
addr16
inc
rcr
adc
and
xlat
dec
ret
sub
inc
mov
xchg
pop
add
mov
je
out
bound
jnp
shrl
out
inc
cmpsl
mov
jnp
pop
loopne
je
out
add
data16
out
xchg
push
pop
hlt
pop
inc
cmp
dec
inc
les
fldenv
inc
ja
shlb
outsl
xchg
fiaddl
cmpsl
fists
lds
adc
inc
in
aad
xchg
add
dec
shrb
jae
or
dec
loope
xlat
cmpsl
leave
xlat
lds
dec
push
enter
mov
rolb
rcl
dec
jns
in
pushf
mov
mov
sbb
ja
mov
jge
les
ja
dec
push
popa
push
in
mov
shrl
jg
jne
cli
repnz
ret
jg
cmpsl
mov
in
loope
jge
sbb
ss
popf
subl
cmp
push
in
jbe
aas
lods
cmpsl
pop
shr
cmp
sub
cmpsb
out
out
mov
idivb
mov
fnstsw
in
loop
movsb
in
cmpsl
cwtl
cmc
xor
add
ja
sub
mov
ja
mov
push
shr
dec
push
arpl
xchg
sbb
and
cmpsl
in
test
sti
ret
cmp
shl
out
push
les
push
push
mov
xchg
sbb
daa
adc
outsb
push
dec
inc
cmpsl
int
jmp
push
fidivl
lcall
jp
xor
mov
outsb
mov
cmpsl
push
test
fiaddl
shlb
mov
inc
lods
aaa
shlb
cmpsb
repnz
sbb
jmp
insl
dec
int
mov
cmp
inc
stos
inc
mov
add
cld
mov
lcall
stos
dec
jecxz
pop
or
add
aaa
pop
pop
and
test
daa
sub
push
or
sarl
nop
pop
push
hlt
jle
mov
mov
fistl
push
in
cmpsb
cs
inc
daa
frstor
insl
fdivrl
jae
mov
lods
xchg
nop
xchg
inc
movsl
popa
fcoml
insl
mov
xchg
adc
pop
push
subb
xorb
icebp
mov
sub
and
xchg
aaa
xlat
or
pop
lea
and
sub
mov
mov
sti
mov
sub
iret
ret
push
pop
mov
mov
loop
nopl
sub
fcmovb
add
ljmp
fs
pop
sbb
mov
rcrb
lock
out
pop
pop
xchg
jl
jae
jae
jnp
lret
mov
sbb
lods
pop
shlb
xchg
mov
sbb
adc
jmp
cmp
pop
xor
dec
sahf
sbb
xor
mov
xchg
inc
addl
push
mov
push
gs
inc
add
inc
fcmovb
push
xchg
push
testl
mov
dec
push
enter
in
je
adc
mov
pop
pop
filds
or
hlt
pop
ljmp
jl
jae
inc
mov
movsb
mov
sbb
test
in
or
or
les
or
loope
lods
xchg
jl
sub
fisubs
cwtl
cmpsl
je
inc
push
or
jmp
sti
stc
loop
jns
outsl
or
mov
incb
gs
lcall
lret
inc
std
xor
cmpsb
movsb
inc
fildl
negl
hlt
inc
sbb
es
ret
ret
loope
jns
mov
ret
push
cmc
lds
mov
pop
inc
xchg
addb
test
popf
ja
aaa
push
movb
mov
scas
lds
scas
xor
test
stos
adc
shl
pop
repnz
les
loop
pop
pushf
imul
xchg
mov
and
jle
or
imul
sbb
loope
mov
dec
sbb
mov
les
addr16
in
sub
out
js
lea
jle
insl
jecxz
in
ret
mulb
ja
sbb
dec
mov
jecxz
jb
jle
xchg
out
and
adc
jp
es
rorb
ds
adc
adc
ja
out
ljmp
lcall
rcll
sbb
sbb
les
out
mov
adcl
bound
jae
in
in
fiadds
pop
cli
jle
andl
and
cmp
pop
lahf
push
xor
stc
push
or
push
ret
lea
lret
add
add
xchg
outsb
out
cmp
jb
cmpsl
rolb
shrl
out
ret
xchg
rcrl
idivl
xchg
mov
push
xorl
test
xchg
popa
mov
jge
fldenv
clc
imul
sarl
shlb
aam
jge
mov
mov
pop
hlt
rolb
dec
inc
jg
pop
in
mov
mov
js
xchg
mov
sar
fdivrl
adc
push
dec
inc
shll
jnp
in
rcr
mov
inc
std
cmp
movsl
andb
ret
roll
mov
scas
dec
pop
outsb
pusha
arpl
es
pop
insb
stos
inc
jne
hlt
aam
out
jl
aam
lock
jp
fcmovnb
adc
div
inc
scas
gs
je
jge
gs
cmp
test
popa
les
inc
mov
sarb
inc
or
pop
addr16
inc
sbb
cli
and
ss
push
jmp
fists
or
lds
int
jle
pop
dec
out
sbbl
gs
arpl
loope
mov
dec
add
out
repz
mov
cmpb
imul
clc
jle
add
out
push
in
rcrl
xchg
movsl
aad
ss
dec
inc
test
scas
dec
out
jne
dec
arpl
mov
jge
dec
jne
add
in
lods
dec
rolb
ljmp
inc
addr16
repnz
test
push
loop
dec
in
fcmovnb
xlat
lds
jo
adc
cmp
push
fiadds
out
add
fimuls
mov
jp
lret
inc
hlt
inc
and
sahf
test
clc
ja
test
jnp
mov
push
ret
jecxz
test
inc
jge
pop
scas
mov
pop
xor
add
xor
inc
inc
int3
mov
scas
pop
adc
sub
or
cmp
dec
jns
iret
sbb
shl
sahf
push
dec
mov
insl
loopne
out
mov
pop
jne
cmpsb
add
push
mov
adc
add
sbb
call
test
adc
fldenv
aaa
jl
lea
gs
out
dec
dec
jmp
lahf
inc
cmpsb
dec
adc
out
pop
pop
outsl
xchg
sbb
test
stos
mov
push
mov
pushf
jg
lahf
xchg
and
cmp
jecxz
push
mov
ljmp
pop
ljmp
jp
xchg
fstpl
lock
pop
data16
addl
dec
stos
cmp
fs
adcl
jbe
orl
push
rorb
push
lahf
int3
jge
insb
xchg
sbb
outsl
hlt
test
jp
xor
popa
call
cmp
cmpsl
inc
neg
movl
lods
scas
lds
pop
daa
inc
mov
adc
outsb
mov
ja
rorl
cs
and
aam
outsl
rcrb
jbe
inc
fucom
or
stc
mov
cmc
pop
rol
push
daa
lea
jge
rcrl
aaa
add
leave
ret
pop
incb
aad
test
mov
jns
xchg
aad
cmpsl
inc
fnstsw
testb
and
int
pusha
mov
fs
fucomp
and
mov
arpl
lahf
fidivrs
sub
cmp
es
add
dec
repnz
insl
lods
sar
repz
stc
hlt
test
mov
mov
lods
popf
pop
ret
pushf
mov
daa
sbb
add
pusha
movsl
mov
in
mulb
jbe
jp
adcb
mov
mov
xbeginw
scas
dec
fiadds
pop
fdiv
xchg
xchg
js
cmpl
cmpsl
mov
dec
mov
rcrl
inc
inc
cmc
xchg
fwait
std
jecxz
test
push
cmp
fcomi
inc
cmp
aaa
sbb
ja
dec
xchg
out
out
mov
lret
fimuls
xchg
cmc
ret
lds
cmpsl
frstpm(287
and
jge
mov
pop
testl
out
inc
in
pop
jmp
adc
mov
jo
data16
add
pop
inc
xchg
jo
data16
ret
test
xorb
insl
push
lahf
mov
data16
sbb
data16
ret
pop
std
sbbl
push
jnp
insb
outsb
ret
cmp
mov
rolb
add
fidivrs
cmp
mov
testb
xchg
cwtl
xorl
cmc
sub
sub
in
pop
out
ret
mov
sub
imul
lahf
pop
clc
in
pop
push
out
jg
xlat
mov
and
scas
push
bound
ret
inc
mov
test
pop
inc
mov
fildl
jbe
lds
mov
inc
je
data16
lods
pusha
cmp
sbb
or
inc
mov
fwait
out
test
pop
jge
sub
mov
ret
add
mov
dec
outsl
sub
sbb
test
mov
inc
sbb
xchg
frstor
cmp
adc
lds
jne
out
mov
mov
or
shll
test
imul
pop
or
xor
mov
cmp
cmpsb
mov
ret
and
xchg
adc
mov
in
out
cmpsl
imul
xchg
inc
popf
inc
scas
push
jecxz
adc
sahf
fmuls
rorl
adc
fwait
out
in
push
push
jne
inc
xchg
pop
jns
jecxz
cli
jbe
loopne
dec
cmp
xor
push
je
or
cwtl
and
aam
mov
fcmovnb
xor
imul
movsb
negl
insb
dec
bound
sub
xchg
add
add
inc
xor
dec
jge
mov
imull
xchg
pop
sub
pop
cmp
sar
mov
inc
push
das
lret
test
push
cmpsl
outsl
das
insb
push
push
hlt
adc
or
sub
inc
dec
xor
mov
loop
sbb
pop
iret
fists
data16
pop
leave
cwtl
rolb
fcomip
rolb
sbb
int3
idivb
lret
jnp
push
sub
dec
loop
mov
xor
out
jns
xchg
test
jle
rolb
xchg
enter
xchg
pushf
mov
sbb
adc
mov
mov
xchg
icebp
sar
in
subl
xlat
movl
jmp
sub
cmc
test
or
fmull
nop
or
daa
movsl
inc
dec
cmp
sbb
push
push
xchg
daa
mov
gs
mov
mov
dec
ja
ds
daa
enter
mov
push
imul
leave
sti
addr16
test
mov
fisubrl
pop
pop
and
and
jl
arpl
xchg
movsl
pop
sahf
or
mov
lds
sub
bound
hlt
dec
cmc
cmpsl
fcmove
test
out
jbe
stos
loopne
add
pop
sar
mov
movsb
mov
mov
adc
das
test
sar
add
mov
rclb
idivl
out
jecxz
add
or
mov
jne
test
test
or
sahf
pop
addr16
inc
mov
jg
out
inc
js
cmc
xchg
push
in
out
adc
push
sub
lret
mov
sbb
add
sbb
mov
fsubrs
mov
adc
mov
and
outsl
push
cltd
cltd
inc
sbb
mov
mov
push
add
pop
mov
sbb
xchg
push
das
xchg
and
push
clc
mov
pop
bts
aad
mov
xchg
divl
jecxz
mov
sbbl
clc
enter
in
repz
jecxz
jns
add
push
fwait
xchg
les
test
or
test
outsl
jno
jb
push
sub
in
mov
xchg
fwait
adc
leave
sti
leave
data16
fimuls
movsl
xor
scas
out
mov
iret
cmpsl
mov
xlat
add
cld
xchg
sub
push
pop
cmp
insb
mov
mov
insl
pop
lds
loopne
xchg
data16
sub
pop
iret
mov
out
xchg
mov
stos
sbb
xchg
lret
mov
enter
mov
sbb
inc
inc
xor
inc
and
xchg
shlb
xchg
ret
test
xchg
push
add
ja
daa
out
inc
and
or
jns
lds
cmpsb
ja
pop
js
fdivrp
cld
lds
in
iret
xchg
pusha
inc
xorl
or
mov
aam
inc
pusha
lods
in
inc
stc
xor
inc
jge
sahf
xchg
xor
test
bound
fwait
inc
sub
in
mov
mov
adc
mov
jbe
mov
cmc
jecxz
jno
cli
out
mov
push
sub
rcl
jb
xchg
push
xchg
mov
or
jo
enter
push
inc
xchg
dec
pop
sub
mov
pop
loopnew
lahf
sbb
fisttpll
cmp
mov
inc
jmp
stos
pusha
mul
out
stc
push
ret
insb
and
pop
mov
test
cmpsl
ljmp
mov
scas
out
imul
push
pop
punpcklbw
mov
aaa
mov
add
inc
rsm
jl
mov
ja
cmp
adc
test
insb
imul
lods
inc
fists
or
add
imull
dec
push
sarl
mov
and
in
mov
cmp
cld
out
cmp
cmpsl
pop
jge
frstor
pop
or
jmp
in
dec
xor
mov
xchg
jno
jb
in
cmpb
ja
aaa
std
std
jmp
orb
les
loopne
xor
or
mov
testb
mov
adc
cli
xchg
adc
inc
xor
jo
in
sti
sub
jg
aad
xchg
jmp
stos
repz
into
daa
sub
xchg
xchg
cmp
divb
roll
aaa
ret
mov
dec
movsl
lret
inc
fcoml
gs
cltd
in
mov
push
shll
pop
std
adc
adcb
xchg
fcomi
es
scas
cmpl
jnp
mulb
out
xor
repz
sub
daa
out
mov
jg,pt
lock
or
add
movl
int3
cmp
cmc
mov
pop
push
fwait
mov
sbb
fcompl
sti
inc
mov
add
inc
dec
dec
mov
outsl
out
or
and
arpl
jle
sbb
shr
xor
fcompl
adc
rorb
xchg
fidivs
int
cmc
shll
enter
mov
les
fldt
fisttps
mov
into
rorb
lea
iret
mov
scas
sbb
and
jns
shl
cmpsb
shl
and
jne
dec
cmp
add
in
adc
ffreep
push
xchg
aad
in
fs
inc
xchg
jmp
stc
aaa
ds
adc
pop
dec
jns
loop
push
jbe
cmc
jbe
add
rolb
repz
and
cltd
pop
pop
aad
mov
mov
pop
sbb
jp
pop
test
or
mov
loop
repz
push
pop
xchg
pop
aam
inc
icebp
push
add
inc
jmp
pop
loope
xchg
cmp
xor
mov
stos
adc
leave
rcrb
imul
xchg
lods
dec
mov
sarb
cmpsb
aad
dec
jns
lea
jae
or
repnz
push
out
icebp
mov
insl
mov
xchg
popa
mov
neg
xchg
loop
mov
cmpsl
addps
mov
pop
inc
push
or
sbb
leave
test
out
movsb
jb
mov
xorb
add
lock
pop
add
into
and
mov
cltd
out
fs
inc
test
in
test
lods
data16
sbb
jae
in
mov
add
add
cmp
das
xchg
xchg
lods
pushf
and
xchg
cmp
dec
call
sub
outsb
mov
mov
pop
and
push
or
daa
add
mov
dec
adc
or
push
frstpm(287
sahf
mov
xor
xchg
adc
jbe
sti
enter
rorl
cmp
or
pop
inc
leave
jecxz
adc
js
std
cmpsl
push
and
lahf
aas
jmp
repnz
loop
insb
mov
or
push
in
popa
fmull
out
int
inc
dec
dec
dec
cmp
sub
ss
sbb
in
js
pop
and
push
test
sub
ret
add
cmc
add
insl
arpl
sbb
outsb
out
ja
jmp
repnz
data16
out
mov
int3
lcall
in
sub
pop
push
sbb
popa
inc
pop
push
pop
sahf
lahf
ja
and
repz
inc
mov
xchg
push
int
mov
add
outsb
mov
sub
in
mov
push
popa
mov
mov
mov
pusha
outsl
and
push
pop
shll
push
mov
mov
sahf
int
xchg
xor
mov
dec
add
mov
fwait
adc
in
call
and
add
cmpsb
mov
mov
leave
xlat
dec
push
and
adc
in
cmc
jmp
incl
mov
andl
mov
fs
popf
hlt
les
add
mov
cmp
negl
les
sbb
inc
pop
mov
out
xchg
add
adc
xchg
ret
inc
nop
div
sbb
dec
or
dec
inc
jo
xchg
call
into
test
scas
adc
fnstsw
sbb
movsb
aad
test
ret
popa
ds
cs
or
push
or
add
test
and
jl
sub
icebp
jecxz
and
jl
push
test
and
nop
mov
mov
loopne
sbb
lret
xchg
inc
inc
sub
sti
push
jmp
das
mov
pop
lahf
shlb
xchg
into
mov
std
jge
test
xor
addr16
pop
xchg
inc
xchg
jecxz
inc
scas
adc
mov
mov
daa
jne
fwait
mov
cld
xchg
pop
mov
sub
pop
mov
jae
jo
repnz
pop
loopne
mov
xchg
shl
ficoml
je
pop
loop
or
cmp
popf
dec
or
int
cltd
jb
mov
jle
fmull
push
test
nop
mov
pop
cs
jmp
xchg
cwtl
or
push
mov
pusha
hlt
stc
pop
sbb
in
pop
ja
arpl
inc
scas
jne
inc
repz
ja
icebp
add
test
and
fwait
out
xor
adc
sbb
mov
and
inc
nop
inc
jno
sbb
rcrl
mov
or
addr16
or
out
int
push
mov
insl
out
cmc
cs
pusha
inc
or
out
outsb
test
imul
out
pop
pop
fistps
push
icebp
cmp
neg
std
sahf
mov
cmpsl
popf
cs
lret
xchg
push
iret
add
cmpsl
and
inc
ja
ret
jmp
stos
push
mov
int3
mov
inc
scas
dec
fnstcw
in
dec
mov
shrl
aas
mov
mov
int
lods
imul
mov
add
inc
jecxz
jmp
iret
nop
and
xor
scas
xor
sub
mov
push
testl
orb
cs
popf
sahf
gs
pop
andl
sub
adc
jecxz
or
and
mov
mov
jge
xchg
repz
pop
sti
mov
add
popl
lds
mov
lcall
pop
data16
jns
data16
mov
into
fdivp
stc
mov
aam
ja
loope
outsl
sbb
insl
data16
push
and
xchg
or
shlb
js
or
sub
lock
das
mov
test
and
outsl
test
pop
mov
out
jno
push
inc
mov
lret
iret
jg
xlat
insl
xchg
negl
in
addr16
push
xchg
adc
push
aas
jecxz
lcall
jb
ret
inc
xor
mov
adc
xor
jnp
mov
data16
test
or
mov
outsl
and
add
mov
in
cmp
mov
clc
cmovge
xor
pop
mov
pusha
ja
push
push
out
push
ret
or
xor
data16
pop
mov
loope
filds
arpl
nop
hlt
in
inc
xchg
cmp
or
adc
xchg
mov
or
pop
jge
iret
jne
fwait
jb
or
sub
push
out
lahf
shlb
sbb
lret
sahf
out
or
jl
mov
inc
add
inc
push
fistps
inc
lcall
mov
xchg
adc
mov
inc
addr16
sbb
ret
dec
add
mov
and
ret
mov
std
push
les
sar
inc
inc
and
je
inc
sti
or
insb
jp
and
outsb
cwtl
mov
cmp
ret
ja
mov
in
fnsave
insb
pop
les
in
pop
push
jmp
ret
xchg
pop
pop
inc
shll
cwtl
xor
cmp
xchg
clc
mov
add
add
icebp
test
dec
sbb
hlt
inc
movsl
daa
add
ret
jge
sub
adc
xlat
pop
ss
into
jl
addr16
and
add
mulb
and
jne
shrl
dec
hlt
ss
in
xchg
and
xchg
iret
mov
aam
add
cmp
mov
xchg
addr16
xchg
nop
dec
adc
shlb
test
les
xor
aaa
in
sbb
dec
mov
cmp
aaa
les
in
shlb
out
test
mov
and
pop
movsb
jne
popa
sub
dec
cmp
mov
andl
add
xor
out
orl
popa
bt
daa
scas
sarb
outsb
arpl
xor
push
pop
cmpsb
pop
cmp
push
and
mov
stos
aam
fs
push
fbstp
dec
pop
jg
shl
es
outsl
ret
shlb
pop
hlt
add
nop
xlat
movl
jge
push
aas
addr16
sbb
mov
inc
pop
pop
pop
push
or
data16
and
fisubs
icebp
xchg
cli
cmc
scas
ja
ds
rclb
sub
iret
fwait
or
jl,pt
adc
push
pusha
loop
pop
dec
jp
cld
jo
mov
test
popf
or
xchg
cmpsb
jge
notb
push
xorl
aam
adc
popf
pop
repz
push
outsb
jecxz
outsb
repnz
mov
sbb
test
sti
cmpsb
aad
mov
popf
pop
adc
inc
decl
testb
aam
fmul
fisubs
test
leave
xchg
mov
sti
repz
cwtl
and
mov
movsb
iret
pop
dec
inc
and
fidivrl
fs
lahf
jecxz
out
inc
cltd
mov
leave
and
test
cmp
sbb
lds
pop
fbstp
pop
test
jnp
adc
loop
adc
mov
push
cmp
jne
fwait
mov
test
aam
enter
pusha
jecxz
in
in
rcrb
xchg
int3
fldenv
mov
lods
sahf
test
insl
lret
dec
inc
xor
mov
xchg
js
mov
jge
test
dec
and
xchg
cs
notl
xchg
clc
mov
stc
mov
mov
mov
mov
arpl
push
mov
loope
mov
popl
lods
cmp
imul
sub
std
push
loopne
pop
ja
outsb
nop
cltd
pop
xor
in
cmpsl
shrl
insl
int3
ss
sarl
decb
daa
mov
cmp
sbb
cmpsb
aaa
test
lea
pop
pop
jmp
lcall
and
dec
aaa
mov
pop
push
scas
stc
jne
orl
sub
aad
add
sti
sbb
fs
popa
nop
loopne
in
cmp
lods
and
ss
push
scas
push
scas
shl
and
mov
in
mov
jae
into
or
sbb
mov
or
sbb
pop
lock
mov
cmp
incl
aaa
clc
cmp
mov
popf
fs
hlt
les
mov
test
pop
xchg
dec
cmp
lock
cmc
jmp
cmpsl
cs
inc
bound
imul
mov
test
les
push
pop
sbb
inc
inc
pop
cmpsb
and
aam
mov
outsl
inc
in
xor
aam
outsb
jns,pn
inc
rorb
or
jne
or
cld
call
imul
enter
jbe
mov
stos
enter
and
inc
cltd
jne
and
sbb
out
jmp
xchg
filds
movsb
jecxz
fcomi
xchg
lds
aam
sub
ljmp
out
filds
das
inc
jb
ret
xchg
jnp
andb
add
mov
sbb
inc
jge
fwait
mov
rolb
sub
jmp
inc
ret
leave
fistpll
pop
outsb
aaa
mov
xchg
xchg
loopne
loope
mov
mov
inc
flds
stos
call
imul
add
ja
or
sub
sbb
outsb
sub
in
daa
sbb
sub
shrl
cmp
pop
and
repz
ret
out
inc
aam
sbb
aaa
xlat
inc
adc
stc
cmpsb
mov
cmpsl
loop
xchg
mov
inc
data16
out
fisttpl
fsts
shl
call
and
ja
dec
cltd
rcrb
pop
xor
add
dec
insl
jne
popl
jns
into
mov
mov
sti
mov
add
nop
divl
jnp
adc
imul
xlat
in
lds
add
cltd
mov
mov
xchg
shl
clc
push
idivl
and
fbstp
push
and
cmpsl
xor
inc
fs
mov
gs
mov
mov
lahf
shlb
iret
ret
and
ret
xchg
mov
subl
and
adc
test
dec
out
jno
out
adc
cmp
jg
lds
mov
rolb
inc
xor
test
repnz
das
cmc
inc
inc
outsl
pusha
push
clc
cmp
xchg
out
pop
outsl
inc
add
add
insl
push
lock
stc
fwait
adc
xor
fwait
adc
jmp
lods
mov
jno
test
cli
jmp
xlat
rcr
ja
bound
iret
mov
test
adc
shl
sbb
inc
ja
bound
repnz
out
sub
jmp
add
mov
js
cs
int3
cmc
int
pop
scas
unpckhps
add
je
stc
mov
das
sbbl
sahf
adc
pop
jb
push
lret
xor
mov
rsm
in
out
jbe
std
orl
inc
sbb
mov
into
mov
repnz
lcall
loopne
xor
cmp
gs
loop
call
inc
shrb
ret
iret
pop
repnz
insl
jg
xlat
mov
stos
out
and
aas
jmp
mov
mov
xchg
call
push
cmc
je
inc
mov
test
and
test
jecxz
fwait
xchg
shlb
daa
add
xchg
out
rorb
movsb
inc
inc
push
inc
daa
rcl
orl
pop
jge
ja
inc
aas
stos
fwait
stos
cmpsb
add
xchg
stos
iret
fmuls
dec
or
movsb
sub
daa
or
sbb
mov
ja
xor
xor
shll
pop
mov
adc
jecxz
hlt
fstpt
xchg
add
rcrl
into
into
sub
lds
in
aas
aad
leave
push
mov
dec
cmp
aaa
cmpsl
mov
cli
in
inc
stos
and
xchg
sub
repnz
cmpsb
adc
negb
aam
daa
xlat
jecxz
push
dec
in
fildl
inc
fsubl
push
mov
push
sub
xchg
mov
test
adc
xchg
mov
push
push
mov
dec
inc
mov
mov
sub
into
pop
inc
not
dec
shr
cli
int3
outsl
mov
addr16
adc
inc
push
lds
add
out
in
dec
mov
jne
push
aam
push
add
fcmovnu
movsl
andb
movl
in
jmp
test
fimuls
sti
outsl
fstl
sub
xchg
pop
lcall
xchg
filds
mov
cmp
mov
cmp
xchg
or
cmc
movsb
jnp
fldcw
addr16
jmp
ret
mov
pop
aas
xchg
pop
sub
fiadds
xchg
jmp
inc
inc
push
mov
push
xchg
jecxz
mov
in
les
push
outsb
imul
pop
test
pop
push
hlt
les
xor
mov
adcb
and
cmp
repz
rolb
test
sbb
xor
pop
rcll
sbb
cs
dec
outsb
or
sarb
inc
fcoms
add
mov
inc
lock
cmpsl
daa
test
adc
test
cmp
out
stos
int
daa
clc
and
mov
lea
jmp
mov
mov
mov
scas
inc
mov
xor
push
mov
in
insl
mov
add
test
dec
push
xchg
call
insl
test
sbb
outsl
outsb
stos
xchg
insb
xor
and
jns
xor
pop
jmp
leave
lcall
mov
ja
dec
cmpsl
sbb
mov
xchg
fs
int
das
xlat
xchg
jg
xchg
push
jle
repnz
ds
shll
push
xchg
push
ret
jmp
hlt
pop
mov
mov
sbb
sbb
stc
addb
movl
lods
pop
shll
popf
xchg
sub
lock
jae
movsl
or
sbb
orb
iret
xor
dec
pop
ffreep
push
addr16
inc
mov
mov
pop
pop
sub
pop
inc
in
sahf
adc
xorb
inc
hlt
rolb
jge
sbb
cmc
inc
push
dec
orb
leave
es
rcll
mov
xor
jecxz
xchg
pop
mov
es
in
sbb
cli
xor
insl
xchg
int3
mov
push
into
inc
mov
add
test
jle
in
aaa
rcll
sub
mov
sti
test
fnstsw
push
idivb
divl
inc
jae
leave
insl
gs
and
adc
sahf
pop
push
pusha
popf
negb
ja
addr16
cs
pop
inc
mov
add
pop
inc
add
sub
fbld
and
shll
addr16
jmp
mov
ja
shll
jg
dec
sub
pop
arpl
orb
xor
rolb
test
in
mov
repz
push
jns
dec
out
stc
mov
mov
cmc
push
movsl
and
out
adc
cwtl
nop
mov
dec
adc
out
out
test
jmp
push
add
lock
in
int3
int
stc
adc
xchg
mov
push
test
inc
add
hlt
jmp
push
push
add
insl
pop
jecxz
in
ret
lods
xchg
fldln2
cmp
push
adcl
fldenv
xchg
outsl
imul
dec
dec
in
mov
mov
add
aas
jp
into
hlt
xchg
lods
lods
inc
and
daa
bound
negb
fimuls
xchg
imul
imul
leave
into
pop
inc
or
ds
jb
pop
insl
loopne
fwait
jmp
imul
int
mov
fwait
test
cmp
mov
into
mov
leave
aad
iret
jp
insl
adc
iret
add
in
out
jg
lret
call
pop
mov
mov
or
sub
adc
mov
adc
aam
xchg
add
out
icebp
mov
xchg
dec
adcl
imul
xor
add
shrb
push
or
xchg
test
mov
addr16
mov
adc
inc
iret
lods
mov
imul
leave
popf
cmpsl
jns
xlat
pop
shll
scas
mov
xchg
mov
inc
mov
mov
fwait
adc
xor
push
out
mov
add
mov
cmpsl
int
mov
sbb
test
inc
push
cli
lods
or
mov
add
mov
sbb
mov
repnz
xchg
inc
sub
inc
pop
sahf
mov
mov
mov
jle
cmp
xchg
lahf
mov
push
inc
insl
ja
aaa
cli
mov
push
addl
cwtl
fdivs
mov
xchg
or
bnd
stos
sub
arpl
ret
cltd
shl
pushl
lods
aad
add
sub
push
into
xchg
inc
stos
fcmovnb
xchg
lods
out
dec
jo
push
call
sbb
leave
inc
pop
int
into
jmp
sub
dec
data16
and
repz
dec
imul
popa
cmpsb
cmp
add
adc
or
dec
aad
jne
nop
icebp
mov
fists
addr16
pop
dec
shll
push
push
cmc
cmp
sarl
movl
sar
pop
scas
data16
sbbb
xor
stc
push
add
fidivrs
jmp
aam
mov
shl
mov
outsl
test
test
cltd
mov
repz
sbb
sahf
xchg
xor
jne
je
xchg
push
aas
int3
daa
mov
pop
sbb
sub
icebp
sti
mov
xchg
neg
hlt
sub
xchg
mov
fs
test
pop
idiv
les
repz
leave
mov
dec
fdiv
daa
sub
ror
xchg
rolb
push
and
mov
test
inc
ret
xor
data16
push
inc
cmp
insl
call
jg
mov
xchg
mov
test
aad
into
test
dec
jne
mov
inc
popa
cmpsl
roll
sti
loope
cli
sbb
mov
leave
add
pop
clc
add
addb
data16
sub
mov
call
adc
mov
fsts
movsl
or
pop
inc
hlt
jno
mov
imul
push
rcrb
clc
in
sub
test
testl
in
jl
shlb
insb
mov
sub
sbb
ss
push
scas
mov
imul
testl
adc
test
pop
loopne
addr16
ds
pop
mov
jnp
jge
sbb
aad
outsb
icebp
mov
push
ja
incl
xchg
das
clc
inc
shrb
scas
cmp
out
fnsave
and
ss
inc
mov
and
addr16
addr16
divl
mov
xchg
fwait
mov
and
xchg
rcr
inc
shlb
aad
push
and
mov
cld
sbb
rcll
jbe
dec
repnz
push
outsl
mov
push
in
pop
sbb
repz
ss
dec
imul
and
or
sub
in
jmp
xchg
std
loop
repz
popl
repz
das
push
sub
sub
out
xchg
gs
adc
ds
cmpsl
sub
rcrl
test
mov
inc
sbb
xor
adc
mov
adcl
jns
dec
push
scas
cli
jo
lret
pop
inc
dec
cmp
inc
jge
dec
js
ret
jno
inc
fisubrs
push
sbb
push
pop
lret
mov
pop
pop
dec
mov
fildll
test
mov
orb
pop
mov
xlat
fdivp
jle
scas
cmp
pop
int
sarb
fcmovnbe
dec
jecxz
movsl
sub
mov
mov
mov
fcomi
add
pop
shll
fwait
movsl
jbe
aad
cmp
pop
jge
or
imul
xchg
mov
fs
xchg
and
ret
lds
int3
mov
sahf
add
movsb
aaa
fisttpl
mov
inc
dec
xor
cltd
call
mov
cmpsb
push
ds
fwait
inc
ja
or
push
jmp
addr16
adcl
out
mov
push
repz
xchg
sbb
push
iret
pop
int
iret
lea
in
idivl
ss
and
stos
out
jne
pop
add
loope
mov
xlat
mov
pop
or
testl
dec
daa
cli
mov
push
idivl
lcall
xchg
fiadds
clc
sarl
lds
fisubs
testl
pop
jl
enter
ljmp
movsl
sub
es
stos
movsl
shll
sahf
or
or
js
in
cmp
ss
jecxz
in
repz
sub
sarb
sbb
push
dec
mov
out
test
ret
test
and
out
cmp
mov
in
lods
test
shlb
addr16
xchg
divl
inc
lods
and
adc
or
push
mov
mov
xchg
out
adc
xor
or
lds
dec
jbe
sbbb
push
lds
incl
lods
sub
pop
leave
shl
xor
push
insb
cli
sbb
adc
and
in
cmpsl
mov
enter
xor
cmpsl
outsb
sub
inc
push
pop
mov
jecxz
push
add
pop
jae
jno
adc
ficoms
push
dec
cmp
adc
leave
lds
aad
cmpsb
sbb
pop
faddp
jle
outsb
jno
repz
xlat
cmpsb
shll
jmp
idivb
out
scas
mov
stos
mov
xor
out
pop
push
rcr
hlt
mulb
mov
shll
xchg
sbb
push
sarl
test
rcl
mov
lock
fimuls
addl
xchg
hlt
jmp
jecxz
dec
cmpsl
pop
leave
fistps
mov
addr16
mov
push
shl
cmpsb
jge
add
bnd
stos
hlt
addr16
test
jp
mov
das
jg
and
ficoml
data16
inc
stos
leave
shrl
inc
jnp
fwait
ja
cli
mov
popf
push
adc
cmpl
inc
or
mov
mov
xor
out
mov
xchg
ret
test
icebp
dec
stc
pop
fistps
add
pop
jnp
icebp
xlat
mov
loope
sub
scas
pop
shll
inc
psubd
add
out
out
aad
adc
pop
adc
adc
scas
push
adc
mov
push
xchg
test
mov
inc
das
cmc
out
mov
faddl
repz
dec
jge
fistpl
test
fs
or
loopnew
xchg
test
add
mov
mov
stc
test
push
sub
test
jmp
cmp
aaa
cmpsb
int
pop
std
push
cmc
mov
pop
repz
push
cmc
cmpsl
ret
arpl
data16
in
push
xlat
call
pop
or
cmpsl
cmpsb
xlat
xchg
popa
push
stos
orb
sub
xlat
lds
arpl
jle
aaa
and
mov
jb,pt
xlat
movsb
pop
cmp
loop
cmp
xchg
mov
push
mov
push
fstpt
repz
fs
insb
leave
mov
sub
jno
test
push
mov
pop
mov
call
inc
fsubl
dec
out
jae
out
dec
xor
jge
fldt
or
cmp
cmp
jle
and
test
xchg
add
jmp
les
pop
scas
pop
and
jg
outsb
inc
xchg
cmc
int3
add
rol
dec
nop
inc
mull
mov
and
loop
push
cltd
fcmovne
das
int3
mov
ret
and
jecxz
jns
cmp
es
test
mov
push
pop
push
jnp
shlb
mov
xor
aaa
cs
push
mov
push
xchg
ds
shl
mov
ror
lock
push
push
pop
imul
ja
fwait
adc
iret
movsl
mov
loop
push
push
aad
in
xchg
cmc
adc
cmp
mov
in
pop
iret
or
mov
jb
and
and
push
mov
pop
imul
in
sti
pop
inc
fbstp
int3
rorb
bound
sbbb
clc
sbbl
rolb
and
xchg
jae
add
add
rcr
and
test
sbb
loop
push
jb
stos
icebp
rcll
fbld
jo
inc
mov
nopl
xchg
es
scas
int
or
cmpsl
adc
push
rorl
incb
fucomp
inc
jo
mov
or
or
mov
int
leave
std
pop
ljmp
ljmp
add
fbstp
jbe
cmpsb
and
jge
mov
aaa
mov
mov
sarl
push
fdivrp
cmp
and
subl
pusha
pop
jg
or
and
fmuls
fisubrl
push
push
adc
inc
ss
mov
adc
lea
push
sbbl
mov
mov
outsb
mov
rcrb
pop
scas
or
dec
mov
mov
xlat
movsb
repz
mov
test
fs
inc
cmp
mov
fldenv
icebp
or
test
push
mov
loopne
xor
mov
xchg
in
pusha
dec
xlat
sbb
push
lock
imul
nop
and
add
inc
or
jnp
inc
loope
xchg
pop
push
lods
sar
mov
in
cld
ret
dec
in
mov
push
test
rcr
lcall
dec
test
jae
icebp
dec
int3
xchg
or
cmp
xchg
shl
jmp
jae
xchg
add
sti
jno,pt
push
adc
fbstp
add
mov
sbb
cmp
jne
pop
aad
xchg
cwtl
aaa
push
mov
jge
mov
in
push
pop
fdivr
sahf
cs
xor
jge
shrb
decl
xor
daa
xor
es
mov
out
in
xchg
mov
cwtd
fstpt
addr16
push
lds
into
cmpsl
mov
jg
inc
movb
insl
cltd
lds
repnz
adc
inc
jb
jge
mov
sub
dec
vpackuswb
lds
adc
test
mull
push
and
cmp
push
push
ja
outsb
inc
jno
xor
data16
inc
out
outsl
add
dec
mov
fcoms
add
ss
popa
sub
pop
mov
aaa
adc
dec
out
jl
loope
gs
out
clc
lock
mov
xchg
outsw
push
push
adc
sub
mov
or
cli
outsb
fldenv
mov
add
cltd
jecxz
lods
pop
xchg
and
sbb
mov
sarl
cmpsl
ljmp
sbb
aad
frstor
dec
pop
xchg
adc
testb
fwait
in
repz
xchg
stos
punpcklwd
int
xor
lds
sub
pop
or
sti
and
cs
sub
out
mov
aad
mov
pusha
cld
lret
xchg
inc
jmp
mov
iret
sbb
fwait
xor
fisubs
mov
pop
sbb
enter
lds
iret
adc
sbb
stc
jecxz
loop
cmp
pop
fcmovb
outsl
insl
add
in
outsb
mov
pop
mov
bound
cmp
and
push
adc
shrb
sbb
xchg
or
jmp
cltd
bnd
jmp
insl
subl
mov
nop
or
mov
mov
and
inc
insb
leave
sbb
fwait
lods
add
xchg
bound
push
cmp
or
jmp
fs
xchg
call
std
xor
das
daa
movsb
mov
adc
sub
mov
mov
inc
in
inc
fs
pop
mov
fiadds
add
aad
daa
or
mov
adc
ss
or
fsubrs
scas
lret
xchg
insl
push
outsb
sub
cmpsl
sbb
or
push
fwait
inc
cmpsl
cli
fwait
and
lcall
popa
aam
out
xor
out
and
push
or
cmpsl
cmc
lds
push
addr16
aad
pop
in
jmp
gs
and
lcall
inc
out
xor
movsl
shlb
nop
dec
lds
add
push
xchg
insl
movsl
icebp
rorb
sti
movsb
cmpb
aam
adc
arpl
outsb
push
out
lcall
mov
xchg
int
pop
daa
push
jbe
inc
mov
xchg
mov
xchg
xchg
pusha
repz
leave
cwtl
popa
in
stos
popf
bound
mov
pop
jg
sti
or
cli
sbb
push
leave
xchg
and
adc
adc
dec
xchg
shrd
bound
fists
daa
add
out
jo
sub
into
inc
xlat
in
frstor
mov
ljmp
iret
or
mov
and
roll
lods
jmp
clc
iret
stc
push
or
js
push
fwait
insl
imul
in
pop
icebp
xchg
dec
jne
pop
add
fisttps
adc
or
push
mov
xchg
jb
jae
setg
lahf
xchg
mov
rolb
mov
out
in
mov
lds
ja
and
orb
dec
lret
inc
cs
insb
mov
push
pop
lock
insl
cmpsl
dec
mov
inc
push
notl
add
fs
fstpt
stos
lds
cs
test
push
dec
lock
and
pop
cltd
pop
mov
into
in
ss
clc
push
xchg
pop
adc
sti
mov
mov
cmp
mov
out
mov
clc
notl
pusha
mov
adc
lret
xor
jge
daa
in
pusha
and
ret
not
lret
faddl
add
std
iret
test
mov
pop
movsl
gs
daa
cmc
aaa
movl
lods
aaa
mov
inc
mov
pop
hlt
mov
push
ret
mov
push
movsb
xchg
mov
rolb
sbb
mov
lods
addr16
rcrb
sbb
jnp
pop
insl
incb
loop
cltd
push
cmpsb
inc
shrb
lcall
sbb
and
stc
int
jbe
and
sahf
jle
xchg
push
sub
pop
push
loop
test
dec
out
xchg
andl
xchg
cwtl
xchg
mov
sti
jmp
xchg
es
jne
mov
xchg
jbe
shll
out
add
js
mov
inc
inc
dec
mulb
fstps
and
repz
jmp
out
sub
subb
dec
inc
jmp
push
hlt
push
dec
clc
inc
insl
mov
jbe
push
cltd
push
daa
lahf
push
rcrl
lahf
dec
das
jbe
push
outsl
ret
imul
xchg
lcall
mov
cmpsb
into
out
add
out
subl
imul
or
jmp
mov
mov
and
test
js
pop
aaa
xchg
lods
filds
stc
or
movsl
test
jecxz
pand
cmpsb
fbld
fcmovb
push
loop
into
mov
ds
cmpsl
insl
test
xchg
mov
dec
in
sbb
fildl
call
xchg
out
icebp
mov
mov
jo
jge
out
adc
jno
dec
out
mov
sub
lea
cwtl
aad
sub
and
jbe
scas
ret
out
cmpsb
push
inc
and
mov
mov
pop
test
jecxz
in
mov
loopne
int
hlt
loopne
int
fsub
data16
mov
sbb
xchg
loop
int3
ret
pop
cs
cmp
xchg
cmpsb
mov
mov
xchg
xchg
test
adc
inc
pop
aaa
xchg
lds
adc
add
hlt
add
sub
add
hlt
int
push
sbb
lea
mov
addr16
jl
lahf
in
in
stc
jle
incl
scas
clc
out
push
mov
daa
mov
popa
aaa
scas
in
sti
inc
adc
frstor
je
stos
jecxz
inc
or
hlt
sbb
andb
subl
mov
ja
jg
xchg
daa
sbb
add
push
or
sbb
cltd
lret
cs
jl
idivl
xchg
in
and
inc
mull
jmp
cmpsl
xlat
jge
cmp
mov
jp
push
push
out
cmpsl
cli
test
ja
cmp
mov
jne
outsl
mulb
cmpsb
jnp
fimull
je
push
jecxz
out
shrl
sar
xor
mov
fbld
andl
dec
add
out
rol
loope
mov
mov
out
outsl
gs
in
push
divb
mov
fs
inc
xor
sub
cli
outsl
pop
int3
scas
dec
add
mov
cltd
fstl
and
sub
add
jae
jmp
jnp
mov
mov
rep
and
jnp
testb
es
xchg
jmp
lcall
or
clc
iret
inc
insl
inc
mov
pop
push
xchg
jmp
push
pop
arpl
aad
sub
ds
stos
cmp
lds
scas
xchg
jb
ret
inc
xchg
adc
cs
add
push
fwait
cmpsb
dec
pop
mov
inc
mov
lods
pop
pop
pop
cmpsb
testb
push
xchg
repz
rcll
shrb
es
sub
mov
repnz
lods
xchg
in
lret
pop
shrb
jmp
fldt
or
jo
bound
loop
dec
fdivr
scas
loope
push
sti
jecxz
negl
adc
sarl
sarl
cmc
or
popa
jl
incb
push
daa
push
mov
xor
xchg
xchg
cmpl
into
lcall
cmc
sbb
cli
in
pop
int
mov
imul
insl
lea
inc
out
aad
inc
in
daa
pop
push
xchg
rcll
in
ss
jg
loopne
fsubrs
popa
cs
fisubrl
mov
ja
cmc
inc
pop
sbb
inc
fdivrs
ja
dec
out
test
fwait
ja
push
dec
mov
mov
jmp
xchg
jb
pop
test
nop
outsb
test
addr16
aas
inc
push
stos
fcompl
fisttpl
stc
and
mov
std
cmpsl
cmp
mov
cmp
add
sbb
pop
cmp
cmp
in
movl
clc
lods
inc
mov
mov
scas
leave
insb
pop
dec
cmp
adc
sbb
pop
inc
imul
mov
xchg
pop
or
sahf
stc
jae
mov
jg
idiv
out
dec
popf
mov
in
repnz
insl
mul
sar
pop
pop
jge
out
popf
jle
iret
mov
and
push
mov
jns,pn
or
lods
jmp
dec
jae
cs
mov
repnz
inc
icebp
lret
ja
jbe
adc
jge
loopne
hlt
daa
push
cmc
mov
push
pop
inc
addl
adc
sti
cs
fdivs
std
bound
into
and
ja
je
xorl
je
lds
addr16
inc
pusha
and
or
jae
shll
jb
std
rol
and
cmp
mov
fwait
in
rorl
out
fs
pop
int
sarl
stos
insl
shl
cmp
clc
add
dec
jnp
inc
fmuls
rclb
inc
movb
add
popf
mov
rcll
jmp
push
rolb
xchg
call
outsb
in
inc
sub
out
pop
sbb
xchg
mov
xchg
icebp
mov
test
pusha
out
and
add
xchg
out
sahf
mov
sahf
xchg
pop
loope
mov
sub
fidivrl
xorb
divl
into
ds
sub
sbb
add
inc
arpl
ret
and
into
mov
add
pop
stc
sub
lahf
ret
arpl
inc
mov
push
adc
mov
daa
mov
out
mov
in
xor
jno
mov
sub
lcall
inc
pop
dec
jp
aad
repnz
mov
sub
loopne
ret
lods
mov
fdivrl
cmp
sub
aad
xchg
mov
repz
frstor
into
fs
mov
inc
call
sub
fwait
add
xchg
jno
fstl
cmpsl
lods
push
pushf
pop
out
clc
add
leave
adc
mov
fldt
stos
jecxz
lods
test
jge
mov
sub
or
jns
movsl
pushaw
fldl
icebp
aad
addr16
adc
and
inc
mov
jae
inc
xchg
mov
xchg
cmp
pop
xchg
and
pop
sahf
lods
iret
fildl
jbe
xor
mov
shll
sub
ja
andb
icebp
daa
and
add
jns
outsl
cli
call
jae
and
mull
fsubrl
xchg
pop
xchg
mov
cmp
push
shlb
jne
and
cli
adc
mov
std
cmc
dec
xchg
pop
xlat
andb
cmpsl
xchg
test
jg
push
stos
mov
fimuls
inc
fnstsw
lret
or
loope
xchg
sbbl
pop
lret
stos
sbb
pop
pop
add
ret
push
sbbl
nop
lea
aas
cmp
xor
mov
test
sub
addr16
sub
inc
sub
pop
cli
jmp
or
and
call
jg
mov
insb
mov
clc
ja
daa
dec
cmp
mov
pop
icebp
or
jecxz
in
adc
hlt
std
inc
add
stos
mov
mov
mov
xor
or
out
inc
test
movsb
mulb
mov
daa
aad
pusha
fsin
push
push
mov
inc
cld
roll
cld
adc
out
mov
mov
inc
cmp
mull
sub
lds
cli
test
nop
sbb
fldt
ret
ret
fs
cmp
xor
mov
mov
jnp
dec
mov
or
xorl
fprem1
ret
pusha
fwait
inc
fnstsw
lcall
scas
jecxz
in
popa
pop
xchg
cmp
loop
mov
sub
xor
mov
jne
pop
push
sahf
cmp
mov
adc
and
shr
xchg
aad
cmpsb
test
ret
into
in
loopne
arpl
loopne
fs
xchg
mov
fdivrl
adc
into
popa
or
mov
mov
jmp
add
inc
fwait
xor
ficomps
lods
out
daa
leave
xor
xor
icebp
add
push
scas
das
mov
test
adc
xor
cltd
call
shrl
cmpsl
mov
test
cmp
jecxz
and
ficomps
xchg
mov
dec
in
dec
rcrb
jb
and
sti
aas
pop
xor
iret
cs
cmc
imul
add
out
or
icebp
cmpsl
push
add
sti
pop
cld
std
iret
inc
andb
pop
xchg
pop
out
aam
xchg
add
or
cmpsb
adc
fisubs
cmp
mov
xchg
dec
inc
push
repnz
out
inc
mov
dec
ljmp
jmp
and
cmpsl
jne
les
mov
inc
rorb
les
adc
sbb
stos
es
fs
popf
mov
in
cmpsl
or
cmpsl
pop
addr16
cmpl
dec
pop
mov
xchg
push
jns
out
add
fdivs
jns
push
add
pop
rcrb
inc
inc
scas
push
lahf
cmp
sbb
fistpll
mov
std
mov
adc
aam
sub
dec
ds
push
insb
mov
ffreep
movsl
lret
push
jnp
jmp
xchg
pop
mov
addb
cmp
push
ret
fwait
cmpsl
push
jge
add
jg
or
out
jns
popa
jbe
cli
push
div
dec
jbe
popa
push
jne
aaa
mov
mov
dec
scas
scas
cmp
out
xor
jp
mov
data16
into
pop
mov
sahf
add
adc
shlb
out
out
incl
adc
scas
into
mov
icebp
jp
jne
add
into
xchg
adc
add
mov
mov
js
fwait
int
test
in
cltd
jae
sbb
push
pop
mov
ss
in
lds
mov
stos
inc
push
xlat
jne
test
jmp
or
pop
xor
subb
ficoml
cmp
roll
jge
xchg
pop
dec
inc
adc
loopne
cmpsl
gs
into
push
in
mov
test
fld
in
adc
pop
cmpsb
xor
jp
push
pop
inc
mov
out
adc
and
mov
pop
push
sbb
daa
rorb
insl
addl
stc
call
insl
movsb
pop
push
lds
push
mull
clc
iret
xchg
jle
ret
pop
jg
testb
and
push
sub
inc
add
pop
repz
xor
pop
movsl
push
jnp
jbe
xchg
cmp
adc
pop
inc
push
mov
out
out
loope
push
daa
lds
insb
fildl
in
push
push
out
outsb
push
in
fstl
adc
outsl
outsl
mov
jns
dec
roll
cmpsb
mov
in
fiadds
iret
push
aad
cmpsb
fisubrs
pop
add
outsl
ljmp
dec
mov
push
lods
xchg
scas
inc
sti
and
iret
or
mov
ljmp
mov
or
jge
sbb
pop
repz
fs
jmp
cld
mov
lds
cmpsl
push
adc
mov
fsubp
mov
fadds
pop
xorl
cmpsl
jecxz
ljmp
rcrb
shrb
stos
popf
movsl
sbb
loope
shll
inc
xlat
push
daa
out
stos
push
cmpsb
movsl
lods
imul
mov
adcl
push
push
aad
mov
fwait
push
xchg
nop
aad
stos
lahf
push
mov
push
repz
dec
jle
pop
jecxz
push
loop
jp
hlt
xchg
sbb
in
loop
popa
daa
dec
and
mov
and
idiv
xchg
xor
iret
out
xchg
test
xchg
hlt
mov
cs
mov
mov
lock
push
popf
pop
mov
lock
ja
dec
fwait
in
ss
iret
int
cltd
mov
enter
cs
inc
push
fistpll
cmp
add
mov
dec
repnz
sub
adc
adcb
xchg
cld
mov
push
xor
xchg
scas
inc
inc
jl
and
scas
out
adc
int
je
arpl
cmc
push
cmpsl
xchg
pcmpeqw
dec
pop
cmpsl
std
push
dec
scas
cs
out
out
jle
push
cld
cmc
cs
dec
hlt
add
adc
sti
in
repnz
bound
popf
dec
adc
and
pop
inc
sub
sub
daa
push
daa
out
mov
in
out
scas
les
int
jmp
xor
mov
xor
or
inc
ja
out
push
add
xchg
insl
fwait
aad
std
pop
cmp
push
sub
xorl
sbb
sarl
mov
adc
mov
adcl
adc
pop
jb
sbb
sub
and
sub
xchg
loopne
notb
mov
imul
movsb
sub
jg
and
mov
mov
jge
sahf
das
cmp
test
arpl
out
call
out
mov
mov
imul
lds
cmp
mov
dec
jle
movsl
pop
dec
push
add
aaa
ds
dec
lea
pop
dec
inc
add
or
shll
shl
or
mov
cmc
dec
out
jne
test
ja
inc
aaa
out
pop
mov
or
fwait
and
rorb
and
jne
adc
addr16
pop
sub
aad
adc
pop
xchg
mov
mov
adc
adc
data16
xchg
cmp
or
and
push
or
pop
and
and
jmp
adc
aad
add
or
sbb
xchg
popa
xor
adc
cld
cs
dec
iret
sbb
iret
inc
gs
or
adcb
out
lds
icebp
xchg
add
nop
rcl
pop
out
inc
push
jmp
or
imul
aad
std
and
fnstcw
jecxz
dec
into
jno
mov
repz
cmpsl
es
imul
mov
pop
enter
xchg
cs
jae
adc
addr16
jbe
scas
pop
out
aam
shl
inc
jno
add
negl
jbe
sti
popw
nop
aas
paddd
outsl
push
out
cli
test
test
aad
and
hlt
clc
fs
adc
cmc
adc
fistps
mov
jo
push
das
xchg
and
outsl
or
inc
ficomps
dec
xchg
xlat
xor
out
cs
iret
out
add
cld
and
mov
rolb
cmpsb
push
gs
sahf
repnz
and
sbb
dec
popa
fcompp
sub
addl
loopne
jecxz
xchg
dec
fcmovu
mov
dec
sbb
mov
in
mov
fucomip
icebp
int
pop
push
stos
sbb
lds
sub
into
bound
test
xchg
ds
jb
outsl
out
xlat
jne
mov
call
ja
sbbl
rclb
xor
jnp
mov
inc
in
mov
add
xchg
xchg
pop
sbb
add
push
insb
inc
repz
mov
mov
inc
xor
sbb
inc
jmp
notl
mov
cld
popf
stos
mov
std
push
cmp
or
std
fisubs
inc
pop
lea
add
cmpsl
testl
add
aaa
out
jae
hlt
cmp
pop
add
jge
jne
mov
or
jecxz
push
mov
add
incb
jg
sbb
lock
adc
sarb
push
xchg
scas
imul
sub
mov
cmp
movsl
cmp
fistpll
filds
pop
mov
xlat
les
jl
xchg
in
insb
or
dec
mov
mov
adc
mov
push
jbe
cwtl
fists
adc
mov
popf
out
jge
aaa
sbb
ja
ret
or
inc
stos
mov
movsb
pop
call
mov
inc
call
add
mov
mov
cmp
ja
inc
ljmp
js
data16
ja
jbe
xor
mov
adc
test
dec
aaa
push
or
add
fists
mov
xor
ret
pusha
cmp
inc
inc
mov
aad
mov
mulb
xchg
test
jge
repnz
mov
std
push
imul
fs
push
xor
filds
idivl
es
mov
scas
push
pop
jg
aad
pusha
mov
test
ljmp
pop
stc
mov
cmp
cmpsl
push
pop
xchg
cmp
mov
adc
sti
icebp
jmp
inc
out
es
in
das
fwait
xor
andl
stos
ret
push
out
xchg
ret
xor
pop
movsl
add
jnp
mov
pop
cmc
xchg
data16
sub
testl
cmp
neg
fidivrl
add
push
push
push
dec
xchg
mov
into
inc
popf
insl
loop
xchg
scas
test
cmp
fs
mov
mulb
hlt
ja
inc
mov
aam
shll
scas
ja
ja
jbe
test
inc
inc
shll
pop
popf
sbb
mov
inc
push
inc
lods
mov
dec
mov
add
jecxz
hlt
addr16
movsb
mov
movsb
mov
arpl
lods
lahf
rcrl
sbb
cli
xchg
jne
cmpsl
outsb
jno
movsb
xlat
jle
mov
incb
icebp
cmc
adc
jb
push
out
cmp
pusha
std
addr16
xor
or
or
popf
mov
and
cmpsb
adc
adc
fwait
subb
mov
adc
sub
fistpl
cmp
cmp
fsubr
jae
test
fwait
movsl
xchg
mov
adc
add
nop
push
xor
popf
sti
lods
dec
test
dec
scas
xor
test
ja
xor
and
sbb
xorl
pop
imul
dec
xor
or
or
cmp
cli
add
jns
push
mov
xor
cmc
add
movd
xchg
xchg
xchg
xchg
cmpsl
mov
xchg
cmp
mov
stos
and
test
cmc
xor
addr16
push
leave
out
dec
je
mov
lcall
jmp
jl
push
sbb
pop
lock
mov
test
shlb
jno
lock
cmpsl
dec
fwait
inc
out
jmp
add
ja
ftst
jge
jne
aaa
ljmp
sahf
push
adc
into
jne
mov
fnstsw
shlb
add
mov
adc
cmpsb
mov
add
push
pop
sbb
adc
subb
sub
faddl
xchg
jmp
sbb
out
fwait
icebp
add
sbb
leave
mov
jge
ja
jae
std
addr16
cld
das
decb
dec
jg
das
or
in
push
gs
ret
pop
addr16
jge
pop
movsl
xor
mov
shll
and
mov
or
mov
jae
fiadds
mov
pusha
and
cmp
jl
out
repz
stos
fiadds
fs
testb
mov
mov
out
movl
insb
push
insl
pop
out
pmulhuw
jbe
pop
ficoms
push
adc
pop
arpl
pop
mov
add
jle
cmpsl
sahf
fwait
test
xor
push
dec
dec
mov
addr16
mov
lods
cmc
adc
idivl
nop
fwait
daa
mov
incl
cmpsl
mov
scas
stc
aaa
pop
fwait
je
lret
jb
jbe
mov
ds
mov
shlb
into
jnp
aaa
or
xchg
fldl
add
push
movsb
in
add
adc
int
andb
in
push
or
xchg
mov
movsl
es
cmpsb
ja
jmp
pop
ret
pop
mov
xchg
and
std
into
sti
lret
aaa
outsb
mov
pop
clc
daa
cs
add
inc
pop
js
jno
fs
and
fnsave
mov
incb
mov
sub
dec
or
rorb
dec
xchg
pop
pushf
fwait
xchg
jge
dec
add
into
shlb
xchg
sbb
in
pop
test
fldenv
test
adc
pushf
insl
mov
cmpsl
xchg
je
fldcw
sbb
insl
test
pop
xor
and
add
adc
mov
jecxz
jno
dec
jne
fistl
dec
movsl
mov
daa
in
in
jmp
lock
jne
xchg
sbb
fistl
test
mov
repnz
fiadds
inc
repnz
movsl
push
jne
repnz
test
outsl
xor
pop
fiaddl
sub
jmp
cli
outsl
push
and
data16
loop
push
mov
es
mov
mov
xor
sub
push
test
into
popf
inc
std
in
mov
jbe
outsb
pop
mov
cmp
scas
out
repz
lahf
inc
sbb
stos
mov
pop
stos
jne
xchg
test
jp
int
xchg
pop
dec
lock
dec
addr16
jno
mov
sahf
pop
or
cmpsb
sahf
loope
outsb
push
dec
outsb
daa
mov
cmpsl
mov
lret
xor
push
pop
lods
mov
cmp
xor
fiadds
cmc
sub
adc
inc
mov
imul
cmp
adc
ja
lea
mov
xlat
xchg
loope
out
pop
dec
rorl
lds
aaa
lock
xlat
dec
in
mov
sbb
in
mov
loope
mov
std
sbbb
jmp
sub
cmp
cld
inc
movsl
adc
adc
insb
dec
xor
inc
les
scas
mov
jmp
in
lds
xor
idivl
ja
aad
ror
xor
xchg
sahf
xchg
test
rorb
test
xchg
addl
push
cld
cmpsl
mov
xor
pop
mov
pop
pop
jbe
ret
pop
ret
pop
and
or
pop
movsb
ret
mov
jne
movsl
ret
jnp,pt
lea
and
mov
adcl
push
pop
ss
mov
inc
adc
out
in
movl
lods
test
push
fwait
lea
popf
inc
cmp
cld
outsl
mov
sbb
mov
fs
or
jge
jnp
mov
dec
cmp
cltd
inc
pop
data16
xchg
mov
sbb
xchg
push
sub
in
ret
clc
fwait
popf
lods
ret
out
add
daa
cmpsl
jg
ja
xchg
out
sbb
clc
movsb
mov
cmpsl
push
pop
xor
fcmovu
pushf
sbb
xchg
push
cmpl
addl
stos
or
pop
scas
fidivs
aas
adc
ficoml
out
jmp
jnp
cmc
xchg
jae,pn
test
insb
mov
xchg
jnp
test
add
cmp
inc
push
jp
jge
xchg
ret
lods
mov
push
rolb
test
cmpsl
add
rorl
mov
repz
adc
push
xchg
mov
gs
cmp
sub
mov
loop
es
shl
ja
clc
push
cs
fwait
cmp
sahf
mov
push
push
adc
imul
mov
roll
fwait
dec
mov
mov
imul
insl
jnp
jae
jae
xor
jae
scas
mov
jg
inc
ja
icebp
enter
xor
and
daa
push
xor
andb
mov
push
fsubrp
and
subl
pushf
push
insb
mov
pop
xor
mov
pop
dec
jno
sbb
mov
adc
pop
or
dec
cmpsb
repz
mov
sbb
xchg
and
es
adc
lds
mov
adc
test
fwait
and
movsl
dec
pop
jge
dec
jne
ja
xchg
dec
into
push
push
mov
hlt
std
into
cmpsb
loope
js
loope
and
push
data16
fisubl
push
lods
imul
movsb
pop
loopne
dec
cmpl
sub
or
mov
mov
and
adcb
loopne
mov
lahf
pop
scas
divl
adc
and
rcrb
sbb
add
shr
sub
imul
dec
loopne
jb
jo
cmc
mov
push
test
scas
mov
rclb
dec
outsb
imul
jmp
cmp
mov
mov
cmpsl
xchg
ds
push
or
scas
jmp
xchg
push
push
jp
adc
cltd
xchg
mov
ja
sbb
xchg
xchg
call
mov
loop
jb
dec
icebp
fiadds
inc
insl
lods
mov
jne
scas
sub
movsb
sbb
push
addr16
xchg
jns
cs
es
pop
lods
outsl
and
jne
mov
daa
and
jmp
xchg
mov
lret
and
push
lret
adc
and
xchg
loopne
dec
sub
fimull
andb
mov
stc
dec
outsl
fnstcw
lods
out
jge
mul
icebp
sbb
addl
outsb
jno
outsb
mov
sti
repnz
fs
fcmovnbe
fstpt
cmc
pop
inc
fisttps
dec
mov
push
rcl
cmp
and
or
mov
popf
pop
cmp
cmp
jns
xchg
push
stc
jbe
and
jmp
xor
push
pop
jmp
int
lods
test
xor
or
addl
sub
pop
jnp
jbe
inc
jecxz
arpl
inc
les
dec
mov
xchg
movsl
hlt
lea
xchg
mov
dec
xchg
adcl
mov
daa
into
jl
mov
inc
test
ja
in
out
jbe
inc
dec
push
cmp
in
adc
stos
xor
jecxz
repz
jmp
fsubl
insb
rcrb
in
mov
movsb
or
loope
jno
sub
cmpsl
jae
adc
pop
mov
rcrb
addr16
pop
fidivrs
outsl
test
loop
aad
jne
or
jns
mov
stc
out
cmpsl
mov
iret
ficoml
lods
cltd
adc
pushf
outsl
addl
test
xor
mov
mov
pusha
cld
movsl
pop
sti
flds
fldl
inc
dec
data16
in
ljmp
mov
addr16
cli
stos
mov
out
push
lods
and
int
sbb
nop
incl
fisttps
or
in
add
adc
mov
jb
inc
and
int
test
jae
out
lret
lock
dec
ja
dec
stc
fistps
add
adc
mov
stos
ja
mov
mov
sahf
xor
cmp
lret
cmp
mov
fcmovbe
add
adc
repnz
scas
aam
inc
mov
jnp
jbe
testl
or
popl
push
loope
sti
jl
out
mov
mov
mov
jmp
cmpsb
and
fists
std
ror
cmp
dec
xlat
mov
mov
jmp
sub
fimuls
in
lret
repz
fs
int3
mov
lea
mov
pushf
and
dec
movsb
or
xor
push
lret
cmpl
or
bound
stos
dec
testb
ljmp
pop
std
mov
cli
jg
out
mov
popa
pop
es
pop
imul
jmp
and
lds
loope
fidivl
loop
cmpsb
jns
or
in
into
add
jne
loop
ljmp
stos
fwait
adc
inc
pop
test
push
neg
push
mov
dec
sti
les
popf
cmpsl
addb
and
add
inc
data16
setl
enter
cli
data16
jg
push
cld
or
xchg
dec
or
xor
scas
jno
pop
inc
pop
fwait
retw
and
aam
mov
fmul
test
into
fiaddl
cmp
and
adc
fwait
std
add
pop
aam
sahf
shld
pop
movsb
jbe
out
jbe
out
outsb
ja
mov
and
mov
mov
and
aaa
scas
jg
adc
jb
div
in
jecxz
xchg
sbb
xchg
aas
mov
inc
push
shrl
icebp
xlat
inc
sub
mov
mov
shll
mov
js
stos
jg
lea
test
roll
xchg
pop
movsl
adc
loopew,pt
inc
mov
outsb
addr16
stc
xlat
inc
push
imul
jae
in
mov
cmp
in
xchg
fsubl
adc
mov
scas
or
adc
notb
rcrb
test
into
fs
xchg
mov
pushf
in
pop
push
and
mov
fimull
xchg
jecxz
repz
push
inc
fdivl
xchg
inc
inc
dec
sub
testl
cmp
adc
lock
aaa
imul
cmc
add
xchg
loope
aad
inc
lret
aam
not
sbb
push
int3
sbb
cmp
mov
mov
inc
rcl
jl
popf
scas
fs
out
sbb
pop
cmpsl
daa
add
and
lret
cmp
out
xchg
mov
mov
movd
out
leave
cmp
outsb
or
push
add
leave
loopne
movl
jmp
or
mov
xlat
xchg
out
mulb
aas
xchg
lahf
xor
jg
mov
inc
xor
jecxz
and
out
mov
ret
cwtl
mov
in
jb
fwait
arpl
jge
pop
test
scas
push
loop
sahf
lret
jecxz
sub
or
je
cmpsb
inc
add
shll
stos
inc
das
mov
push
insl
mov
dec
in
outsb
jle
inc
push
jecxz
sub
dec
test
outsl
rcll
mov
push
add
dec
xchg
imul
out
dec
std
push
cmp
cmp
inc
jnp
icebp
inc
jns
in
fld1
arpl
sbb
inc
ljmp
xchg
dec
dec
sub
or
inc
hlt
pop
int
push
scas
mov
enter
jno
mov
das
les
rcrl
pop
xchg
cmp
movhps
movb
decb
arpl
imul
jns
pop
fwait
mov
fadds
shr
andb
cmpsl
pop
mov
in
adc
rcl
cmc
jmp
leave
adc
or
inc
add
adc
jo
scas
mov
repz
push
pop
dec
std
jmp
pop
movsb
out
pop
aam
or
std
cs
xchg
aad
and
cmp
fwait
out
fwait
int
add
aas
jecxz
stc
xchg
arpl
jbe
test
xchg
test
aas
aas
out
jo
out
push
sbb
add
std
adc
xor
fdiv
push
call
leave
popa
sbb
push
iret
and
mov
sbb
mov
jl
cli
call
call
shl
jp
mov
imull
lods
xorb
out
push
out
or
mov
mov
xchg
xchg
pop
js
push
fwait
popa
lock
aad
inc
jecxz
in
popa
aaa
pop
xchg
int
and
fnstcw
cli
mov
and
ficoml
xorb
jae
out
sbb
addl
push
shll
movsb
loope
pop
inc
jno
mov
pusha
mov
pop
mov
cmc
xlat
std
add
mov
jbe
in
daa
push
mov
imul
cmpsl
test
mov
sbb
mov
inc
je
hlt
dec
stos
mov
pop
movsb
inc
mov
ja
test
nop
sub
push
shl
shll
mov
mov
in
and
xor
je
sbb
jecxz
pop
loop
sahf
mov
mov
mov
cmpl
out
popf
cmp
pushf
adc
rclb
test
or
sahf
rcl
push
imul
inc
mov
cmp
popf
out
pop
and
push
jns
test
and
into
jne
and
cli
fs
aad
nop
mov
adc
mov
cmp
fdivr
scas
pop
std
mov
mov
or
popf
push
mov
cmp
lods
in
jecxz
sub
scas
pop
xor
adc
mov
gs
je
scas
dec
inc
or
mov
data16
push
adc
cmp
cmpsl
add
mov
in
orl
adc
or
jmp
ja
shll
xchg
push
and
out
aas
jmp
andl
push
adc
jmp
sbb
mov
cld
cmpsl
in
xchg
pop
lret
test
push
cmp
insl
dec
aad
pop
pusha
ja
addb
inc
das
fildl
and
loop
ret
scas
adc
bound
xchg
adc
fisttpl
mov
xchg
repz
in
repz
sbb
inc
out
imulb
sub
dec
jg
data16
inc
add
ds
sahf
xchg
test
push
sub
out
xchg
movsl
addr16
sahf
popf
out
icebp
jmp
mov
xor
push
fs
lret
jo
shrb
dec
and
and
in
pop
lock
faddp
jae
push
jecxz
shll
cmp
jnp
push
push
sub
in
fldenv
cld
test
xchg
mov
cmpsb
adc
xchg
enter
cltd
mov
or
fwait
mov
or
mov
or
out
inc
lds
mov
popf
cmp
pop
add
icebp
sub
sahf
repz
mov
jns
dec
mov
cmp
cs
mov
sbb
arpl
push
test
fwait
lds
stos
outsl
dec
imul
imul
stc
js
scas
inc
push
push
mov
jbe
std
stos
js
xchg
adc
xorb
imul
sbb
aad
pop
jmp
rcrl
push
mov
xchg
fsts
push
pushw
test
ss
imul
andb
mov
out
jns,pn
or
inc
hlt
daa
out
push
jo
idivl
xchg
out
jecxz
pop
jmp
adc
das
movl
data16
loope
data16
cltd
cwtl
pop
rol
cmpsl
fprem1
xor
sahf
adc
pop
insl
cmc
and
sbb
or
fs
out
mov
stos
clc
repnz
and
fidivl
fmulp
gs
out
mov
cmpsl
xchg
into
fistl
es
mov
fwait
movb
gs
mov
test
cmp
ret
das
sbb
incb
and
movsbl
stos
flds
test
jge
pop
lahf
lods
jns
leave
test
mov
adc
int3
mov
xor
std
dec
jae
sbb
popf
jb
gs
pop
cs
ret
jo
bound
dec
push
mov
jnp
jle
mov
ja
inc
push
int3
cmp
data16
inc
xor
add
aaa
lods
daa
adc
test
in
jg
push
andb
push
int
cmp
and
xchg
jge
cs
inc
inc
mov
fidivrl
jbe
sub
leave
or
repz
fwait
lea
call
loope
div
and
mov
std
mov
sub
jle
mov
push
inc
outsb
xchg
lock
jmp
cmpsb
inc
out
mov
xchg
lahf
arpl
adc
test
out
stos
orl
fidivrs
push
js
mov
in
push
icebp
test
jmp
mov
xchg
daa
outsb
cwtl
jno
mov
lds
lret
jmp
and
fs
fs
xchg
push
je
xor
xchg
jmp
push
and
aam
pusha
adc
shlb
loop
mov
arpl
or
inc
inc
into
lds
xor
roll
cltd
sub
mov
cmp
xlat
or
add
int3
add
push
mov
mov
pop
bound
lock
mov
or
fwait
or
iret
pop
and
je
stos
shll
roll
in
mov
inc
inc
into
adc
mov
jmp
cltd
fidivs
xchg
push
les
ljmp
in
pop
lds
outsl
fs
lds
jge
inc
outsl
testb
push
jg
cmp
iret
pop
xorl
sbb
fcoml
inc
faddl
ja
nop
mov
ss
stos
hlt
addr16
sbb
adcl
pop
jae
sub
cmc
add
xorl
rcll
mov
inc
push
and
iret
xchg
mov
pop
xor
cmp
addr16
fistpl
sbb
add
add
cmp
call
xchg
shrl
add
into
sti
icebp
pop
inc
js
jp
xor
pcmpgtb
push
cmc
cmp
imull
pop
shlb
adc
or
jg
cs
je
dec
mov
push
fwait
mov
into
bound
add
cmc
cmpsl
fwait
mov
fbld
aam
enter
push
xchg
jle
cs
ftst
push
mov
fmulp
lcall
mov
out
mov
mov
cmpsb
aas
jecxz
or
sar
pusha
int3
jge
loopne
xchg
into
imul
mov
jecxz
repnz
lret
xchg
mov
arpl
ret
inc
hlt
jecxz
dec
incb
dec
loopne
xchg
inc
les
jmp
jle
imul
xor
xor
pop
pop
sbb
cld
xlat
inc
cs
xor
subl
popf
addr16
inc
cs
xor
mov
mov
out
lret
xor
cmpsb
fcompl
dec
lds
addr16
dec
mov
add
inc
mov
leave
and
mov
rolb
and
shll
adc
cld
shr
xor
add
cs
rol
lods
fs
xchg
mov
ljmp
inc
out
jne
rcrl
insl
jecxz
arpl
lods
outsb
xchg
ja
pop
sahf
push
mov
mov
jg
outsl
mov
push
mulb
mov
lock
push
jl
pop
out
mov
pop
testb
jne
sub
mov
rcll
adc
imul
cli
imul
adcb
inc
imul
in
push
sbb
mov
push
jge
mov
pop
decl
das
std
cs
mov
xorl
and
cs
mov
mov
ficoml
add
fndisi(8087
dec
push
dec
xor
mov
cmp
push
dec
mov
mov
pop
mov
rclb
loopne
mov
stc
loope
jns
outsl
andl
dec
or
jmp
inc
inc
jl
mov
mov
pop
test
xchg
movsb
mov
in
mov
pop
int
sbb
aad
xchg
leave
and
jle
pop
ds
cmp
and
or
in
lods
daa
dec
in
or
in
shlb
mov
inc
xchg
fimuls
lods
jmp
pop
push
mov
jge
mov
mov
dec
or
loop
pop
mov
es
pop
xchg
jne
jge
in
out
add
and
out
sub
jecxz
xor
fwait
xchg
mov
adc
dec
mov
movsl
xor
addb
aam
ss
stos
mov
mov
lret
push
mov
inc
dec
shlb
or
movsl
incl
xchg
pop
jo
dec
scas
add
cs
addr16
xor
out
fs
xor
lods
popf
cmp
ffree
enter
inc
fimuls
dec
ficomps
fwait
addr16
adc
outsl
bound
mov
stos
out
cmp
scas
std
inc
jmp
aaa
xor
rcrl
scas
jge
jmp
out
lods
fs
movsb
adc
inc
jbe
les
gs
inc
xchg
adc
jmp
sbb
push
xchg
js
stos
arpl
sbb
mov
inc
bound
iret
stos
lods
jg
cwtl
pushl
push
sbb
outsl
fmuls
nop
cwtl
push
ja
jecxz
lods
mov
ss
imul
sbb
ja
inc
push
push
lret
lret
lods
push
mov
icebp
jno
pop
adc
rorl
out
sbb
addr16
aas
shll
js
cmp
xchg
aaa
sub
scas
xchg
test
mov
fs
push
pop
in
jecxz
mov
push
jb
cld
iret
lcall
jns
pop
adcb
out
and
test
mov
clc
daa
pop
inc
lret
aas
popa
test
cmpl
mov
push
lret
das
imul
adc
std
aas
inc
int
loopne
sub
or
jle
fists
mov
out
mov
mov
add
inc
fs
js,pn
sbb
jge
mov
fsubl
push
pop
xchg
out
clc
xorb
xor
scas
inc
out
leave
jl
es
dec
mov
testb
adc
daa
roll
jno
add
xor
popf
xor
inc
dec
mov
ret
daa
das
notb
xor
mov
xchg
adc
stos
jne
xor
and
es
push
or
mov
cmpsl
test
xor
sbb
mov
std
in
and
repnz
leave
jns
mov
jmp
movsl
xor
gs
in
and
sub
pop
and
filds
fwait
sahf
les
test
xchg
jg
jg
inc
xchg
and
stos
leave
repnz
jbe
out
rorl
lcall
scas
cmp
dec
and
jb
mov
mov
test
mov
inc
popa
push
arpl
sub
out
add
flds
and
addr16
out
xchg
enter
in
rcrl
xchg
outsb
cmpsl
pop
xlat
iret
sbb
or
cmp
mov
movsl
scas
outsl
jg
adc
dec
ss
testb
mov
stc
lret
ds
ja
mov
gs
mov
leave
mov
sbb
lahf
stos
je
mov
xorb
inc
in
jb
sub
fildll
pop
cmpsl
dec
jmp
cld
jl
mov
adc
outsl
jne
stc
lea
inc
lret
push
and
inc
xchg
and
push
push
mov
adc
lret
sbbl
xchg
inc
inc
stc
xor
cmpsb
sahf
popf
lret
daa
testl
repz
sub
and
aaa
pushf
xchg
out
aaa
pop
mov
cwtl
insl
jle
cld
mov
mov
add
mov
ret
stos
push
icebp
xor
jno
push
add
lock
in
out
sub
daa
mov
mov
iret
xor
cmc
sbb
sub
cmp
push
mov
in
int
movsl
sahf
sbb
add
pop
add
push
inc
mov
lock
test
mov
jmp
mov
sahf
in
ficomps
jge
cmp
icebp
xor
jmp
xor
lret
push
movsb
cmp
inc
cmp
or
addr16
cli
xchg
sbb
ret
test
in
jno
fnstsw
pop
loop
loope
xlat
fs
xor
repnz
mov
out
pop
xor
xchg
mov
jne
pop
shlb
push
push
add
cltd
out
xchg
pop
into
jns
frstor
mov
xchg
dec
js
movsl
movsb
scas
inc
pop
out
xchg
xchg
in
sbb
dec
test
repnz
push
xchg
sbb
mov
fisubl
icebp
test
dec
mov
jecxz
addl
out
fsub
mov
fidivs
inc
dec
fisubrl
daa
inc
fwait
adc
lock
dec
dec
int
in
dec
jg
imul
scas
jecxz
insl
xchg
jge
scas
dec
dec
lods
and
inc
mov
scas
push
jne
sbbb
out
jns
into
adc
inc
insb
incl
rcrl
call
push
pop
adc
pop
dec
cmp
sub
bound
insl
xchg
pop
adc
xchg
inc
cmp
in
jnp
cs
fidivrs
pushf
fdiv
xchg
or
sti
dec
fwait
cmpsl
ret
dec
push
mov
test
mov
fldt
xchg
lods
or
loope
stos
jp
and
cs
les
test
lods
stc
mov
pop
es
lret
je
out
jp
cmc
shll
mov
ds
dec
or
inc
cmp
test
daa
xchg
inc
mov
push
pop
mov
push
inc
mov
fucom
sbbb
mov
xchg
jb
sahf
fnstsw
push
lret
sub
shrl
sbb
cmpsl
fcmovne
addr16
pop
scas
dec
xchg
ljmp
pop
mov
cmc
add
adc
shrl
xchg
ret
out
push
jg
xchg
pop
mov
mov
ljmp
outsb
aas
aas
outsl
sub
addr16
push
mov
push
pop
add
dec
jge
sbb
mov
xchg
push
cmp
pop
xchg
sbb
mov
pusha
mov
mov
dec
mov
das
into
xor
scas
push
sarb
adc
repz
hlt
fimuls
mov
dec
cmp
mov
mov
ja
mov
and
ja
mov
sbbb
ret
jp
or
xor
push
fs
std
add
mov
fdivrp
mov
mov
and
mov
aad
xchg
inc
adc
mov
cmpsl
jge
mov
jb
sbb
push
jne
popf
imul
dec
lea
jne
push
inc
and
dec
insb
insl
inc
mov
dec
xor
sub
scas
shrl
xor
gs
mov
loope
push
jmp
rep
or
xor
cmc
rorl
insl
add
push
test
nop
addr16
mov
cs
sub
stos
add
xchg
jmp
or
adc
jl
lret
lcall
mov
mov
loop
sbb
or
mov
mov
stos
xor
pop
daa
push
mov
and
inc
inc
sbb
pop
xor
outsl
add
lods
test
out
nop
cs
insb
mov
mov
adc
inc
mov
mov
inc
ja
sbb
jecxz
sbb
jl
lret
sub
mov
and
jmp
xor
adc
mov
sbb
fwait
test
cmpsb
sub
shll
les
je
jne
mov
xchg
pop
inc
mov
pop
inc
or
xlat
mov
dec
sub
xor
xchg
out
mov
je
jmp
xor
add
mov
adc
fadd
mov
jae
imull
push
aad
in
addr16
iret
aaa
je
aam
dec
adc
stc
pop
and
adc
add
push
cmp
les
xchg
dec
mov
pop
mov
push
adc
ror
decb
mov
incl
jne
je
rclb
mov
push
cmc
pop
vcvtdq2pd
ja
repz
lahf
jle
xchg
mov
rorb
out
or
fmull
mov
mov
xchg
mov
add
test
jmp
idiv
xor
pop
push
lds
push
mov
fs
xor
outsb
jno
fwait
data16
jne
jge
xchg
dec
push
pop
inc
mov
popf
pop
inc
ret
adc
add
pop
in
shlb
je
cmpl
bound
mov
loopne
je
mov
repnz
xchg
mov
cmp
push
mov
out
loope
ficoms
loopne
mov
jne
in
test
out
stc
inc
cmpsb
dec
xor
sub
out
in
mov
aad
sti
sbb
push
jnp
addb
mov
out
jo
int
xchg
xchg
push
add
aaa
xor
sub
jg
test
xchg
gs
iret
into
pop
stos
sub
jmp
jns
fs
jecxz
mov
dec
mov
jmp
shll
addr16
add
sbb
aas
mov
fisttps
leave
jmpw
data16
ret
xlat
xchg
outsb
push
cmc
push
gs
jae
iret
push
sub
mov
xchg
mov
mul
outsl
addr16
popl
adc
push
mov
adc
sub
mov
pushf
add
dec
cmpsl
jbe
or
bound
jmp
test
jg
jecxz
jb
sbb
inc
das
out
pop
mov
testb
jnp
stc
lds
dec
outsl
je
hlt
dec
rclb
ficoms
pop
jns
sahf
add
add
xorb
aam
mov
fidivrl
pop
add
sbb
xchg
mov
pop
cmpsl
jp
jae
lahf
movsb
pop
pop
cmc
ja
adcl
xchg
idivl
ficoms
call
cmp
and
stc
xchg
inc
fs
xor
mov
pop
jle
xchg
in
test
add
cmp
xchg
nop
lods
cmp
mull
mov
call
dec
lods
ljmp
mov
repz
cmp
out
ss
adc
sub
xor
xchg
pop
out
aad
jg
mov
xchg
mov
adc
mov
in
xchg
push
ret
jle
mov
mov
iret
add
add
popf
dec
cmp
fwait
cmpsb
rcrl
stc
sub
arpl
sti
aaa
icebp
mov
pop
xchg
leave
data16
inc
xchg
jno
push
sti
cmpsl
push
pop
in
jo
jo
popa
add
sbb
fmul
rolb
jge
cwtl
sahf
sti
loope
mov
popa
jnp
pop
sbb
or
orl
cmpsl
and
sbb
push
mov
xchg
movsl
data16
mov
sub
dec
cmpsb
hlt
ret
std
add
mov
outsb
lret
arpl
xchg
adc
or
scas
cmpsb
mov
fnstenv
add
imul
dec
lds
cmpsb
sub
pop
jns
scas
cmpb
push
xor
scas
in
pop
out
mov
cmpsb
inc
push
sub
cs
stos
out
adc
outsl
ret
jge
je
aam
xor
or
fisubrs
movsb
adc
push
mov
dec
enter
pop
xor
inc
shlb
xchg
mov
fnstcw
imul
test
aaa
inc
test
out
gs
xor
clc
notl
sahf
cmp
dec
ja
adc
jb
inc
fstl
into
das
or
rcr
add
push
xchg
mov
std
ret
inc
test
lea
push
or
lcall
xor
jo
popa
add
jnp
stc
pop
adc
cld
pop
mov
test
arpl
ffree
testb
adc
lcall
sahf
cs
pop
inc
rolb
add
ja
hlt
andb
mov
inc
add
jmp
xchg
nop
data16
into
lds
sbb
cmp
xchg
aaa
and
jle
rcl
inc
dec
push
andl
clts
sbb
lds
mov
jmp
push
mov
inc
dec
dec
fsubs
pop
jle
jnp
cmp
addr16
jg
xchg
sbb
scas
stos
dec
push
fdivs
icebp
and
pop
inc
mov
mov
test
nop
mov
ljmp
xchg
xor
adc
jl
mov
sub
cmpl
fiadds
das
xchg
mov
sub
jmp
or
cmc
decl
jae
sub
hlt
das
add
dec
lret
xlat
push
push
cld
inc
rclb
out
sahf
inc
jmp
mov
jno
fstl
mov
cmp
push
pop
cmp
xchg
out
or
bound
pop
sarb
mov
mov
cmp
incb
daa
das
roll
sub
mov
cmpsb
repz
test
lahf
out
pop
mov
lods
jmp
out
mov
lods
add
jbe
enter
or
inc
or
imul
inc
ja
shlb
rcrl
sub
cmpsb
push
pop
mov
leave
insb
dec
in
push
mov
fnstsw
stos
rcrb
lods
cmpsb
and
cmp
sti
sbb
aaa
push
mov
jg
adc
es
add
inc
fsub
in
mov
insl
jne
ficomps
outsl
out
dec
mov
ljmp
addr16
out
add
mov
sbb
jae
cmpsl
mov
jb
or
dec
loope
xchg
inc
ret
jge
inc
xchg
cli
std
mov
scas
je
pop
push
cmp
pop
scas
jno
add
in
cwtl
jg
xchg
xchg
addr16
mov
pop
jo
fwait
push
push
loope
test
jle
rcr
je
mov
add
data16
repz
fstpl
or
jecxz
ljmp
fildll
jl
outsl
in
loope
pop
in
fisubrl
jae
mov
in
and
js
popl
mov
sbb
adc
ret
pop
inc
xor
aas
jbe
sub
mov
xchg
mov
pop
in
xchg
add
addr16
jo
cmp
mov
add
pop
jmp
mov
ljmp
sbb
das
pop
ret
push
push
imul
inc
loope
dec
sbb
cmpsl
xor
je
je
and
add
jbe
jge
dec
inc
sbb
sub
and
pop
out
add
nop
sbb
push
jo
dec
inc
dec
jl
jne
xchg
push
cli
pop
jnp
testb
test
aas
xchg
out
and
xchg
and
and
int
mov
out
sahf
and
mov
rorl
dec
das
mov
fstl
or
cli
or
test
out
lock
ret
ss
sub
cli
scas
test
sbb
scas
incb
add
inc
loopne
mov
fucomi
xor
pop
fidivs
pushl
dec
mov
sbb
mov
call
adc
push
in
jae
dec
cmp
cmpsb
mov
adc
mov
push
dec
out
sub
jecxz
adc
cmp
add
mov
movsl
jno
shll
adc
into
mov
inc
jnp
mov
jnp
sub
out
aad
das
stos
daa
jmp
rol
cmpl
test
xor
jecxz
js
sahf
push
jmp
cltd
insl
push
jp
xchg
jbe
ja
push
int
mov
jecxz
or
nop
lea
xchg
inc
sti
sub
and
and
mov
aas
cs
sti
adc
sbb
mov
push
or
daa
test
xchg
jnp
xlat
or
outsb
adc
mov
and
dec
xor
push
xlat
lcall
loopne
jns
add
or
cld
je
rcrb
movsl
jge
jo,pn
lock
push
test
xchg
add
mov
les
iret
loope
test
fbld
pop
mov
xchg
mov
jecxz
mov
pop
jl
sbb
push
sbb
mov
fwait
test
inc
add
sub
push
xor
pusha
imul
xchg
sti
test
jp
or
mov
pop
sbb
cmp
es
scas
rcll
push
mov
rcrb
xor
repnz
iret
inc
mov
sub
iret
pop
adc
test
add
dec
addl
jmp
jg
mov
inc
repnz
sbb
adc
out
sub
in
fcomps
push
aad
and
outsl
push
add
jns
call
cs
out
in
or
pop
dec
dec
popa
or
xor
call
les
lcall
mov
jne
push
into
mov
pop
mov
fisubl
adc
or
lea
rclb
push
pop
push
scas
fistpl
sbb
std
idiv
mov
xlat
lock
rorb
popf
into
sti
outsl
stos
out
aam
jno
ds
push
xchg
push
jno
es
mov
pop
shrl
adc
jb
in
arpl
xchg
gs
push
mov
std
test
sub
xchg
inc
fildll
rcrl
js
dec
mov
subl
push
in
sbb
jb
je
jne
jae
aad
mov
sub
ljmp
push
push
mov
filds
add
jae
insb
mov
inc
cmpsb
mov
test
jns
mov
iret
adc
stos
mov
jg
inc
imul
xchg
cmp
pop
sti
dec
aas
push
cmpsl
scas
mov
es
cli
in
and
inc
mov
dec
mov
clc
jae
sub
add
sarb
xlat
inc
add
loop
mov
pusha
call
dec
push
shrb
jge
out
dec
push
test
xor
pop
cmp
and
jg
std
jno
fisttpll
lahf
imul
pop
adcw
addr16
fadds
clc
std
mov
mov
imul
mov
out
cmpsb
ret
sbb
out
hlt
dec
xlat
xchg
or
dec
xor
adc
addr16
adc
in
sub
and
ja
cwtl
push
jg
push
xchg
fldenv
adc
cmp
fsubp
cmp
cmpsb
sub
ljmp
lds
sti
lods
sbb
mov
jae
in
daa
and
and
jns
xor
push
nop
movsl
stc
ds
fs
cli
jns
mov
movsb
jno
inc
jge
pop
sbb
or
push
inc
push
mov
mov
in
insb
and
mov
out
cs
push
sbb
xchg
subl
inc
dec
ds
push
pop
pop
jns
add
out
stos
js
dec
mov
pop
int3
out
imul
cmp
scas
sub
hlt
test
add
or
sbb
and
pop
lret
jae
test
sahf
dec
pushf
xchg
pop
mov
mov
jo
rolb
cmpsl
cs
stos
mov
dec
or
test
dec
add
xchg
sbb
xchg
cli
adc
jne
rorb
or
pop
divl
cli
xchg
mov
js
adc
int3
jno
cmp
sahf
and
in
lods
popa
xchg
pop
test
adc
cs
inc
ret
cmpsl
xchg
std
sti
pop
test
push
cmpsb
sub
or
idiv
dec
cmp
pushf
xor
push
xchg
lret
sahf
inc
mull
add
xchg
jae
fdivs
push
jne
sahf
je
ret
pop
aas
test
fisttps
lods
adc
add
test
mov
push
shr
rdtsc
cmp
out
sub
xchg
xchg
popa
pop
xor
out
mov
leave
mov
add
add
mov
cmpsb
cmp
adc
and
into
mov
daa
sbb
sbb
fisubrl
mov
ret
outsl
inc
adc
addl
push
push
movb
sbb
daa
mov
pop
sbb
ja
sub
xchg
insl
push
hlt
movsl
fwait
jge
out
jb
push
pusha
cmp
and
idiv
mov
jle
inc
jge
push
inc
adc
test
movsl
addr16
imul
cwtl
out
loope
jns
test
pop
mov
inc
pop
adc
mov
mov
icebp
sti
fwait
sti
idivl
xor
push
fisttpll
scas
mov
dec
idivl
xchg
xor
cmp
fs
xor
jmp
test
pop
rcrb
push
mov
mov
lds
int3
xchg
push
hlt
test
out
clc
pop
int
fsubs
lret
xchg
pop
ret
lret
xchg
dec
out
lret
cmpsl
adc
pusha
popa
xchg
push
dec
add
stos
push
cs
mov
sti
cli
shll
gs
data16
mov
in
shll
cmp
mov
push
xchg
test
popa
jo
pop
notl
push
andb
xor
gs
sub
inc
lods
push
inc
testl
jmp
inc
loope
jmp
mov
test
jae
sbb
jae
repz
adc
iret
cmpsl
movsl
push
lods
pop
adc
xorb
mov
test
in
xchg
ljmp
mov
outsl
inc
inc
sbb
jbe
int
bound
xchg
fstl
imul
aam
pop
outsl
repnz
push
add
lods
outsl
mov
cld
sub
test
jge
cmpsl
and
push
das
pop
jb
call
out
inc
aad
mov
mov
fs
jecxz
and
in
loop
orb
fldl
lds
fldt
es
repnz
out
aam
and
in
in
outsl
div
daa
fsubp
mov
fwait
sbb
sbb
push
or
pop
ret
das
pusha
mov
push
fimuls
xchg
jp
push
mov
sub
cltd
repnz
pop
stos
xchg
mov
fiadds
xor
inc
int3
cmovge
dec
fildll
jmp
adc
pushf
addr16
addr16
sahf
pop
push
push
in
pop
imulb
divl
out
test
outsl
dec
mov
pop
add
sbb
inc
dec
fidivrl
cmp
or
test
scas
insl
fucom
mov
add
jge
and
jae
outsl
stc
mov
popa
les
cmpsb
es
jns,pn
imul
cmp
or
mov
jns
mov
lea
or
adc
pop
xchg
adcl
out
mov
fwait
addr16
add
pop
push
ds
imul
ja
icebp
pop
xorb
aad
icebp
inc
dec
js
ss
cmc
addr16
jae
adc
sub
mov
adc
test
test
ljmp
xchg
dec
test
add
fwait
inc
mov
inc
les
aad
stc
imul
pop
cmc
fwait
test
outsb
cmp
mov
add
cltd
sbb
notb
mov
xchg
das
adc
fs
or
mov
lea
inc
dec
or
pop
or
ja
outsl
fsubrp
test
jnp
lods
xchg
push
fwait
cwtl
out
scas
std
cs
int
adc
adc
mov
rorl
test
outsl
popw
std
mov
adc
dec
dec
fdivrs
pop
fldt
out
ds
xchg
pop
nop
fcmovnb
sbb
push
inc
cmpsl
bnd
xlat
andb
fimuls
cmp
and
arpl
or
lods
popa
xlat
sub
or
dec
xor
std
fwait
mov
lret
cmc
jo
jmp
jecxz
xor
rcr
in
gs
add
fistpll
sbb
filds
pop
fiaddl
repnz
adc
adc
inc
mov
bound
sbb
jg
and
and
push
cli
les
scas
dec
sbb
adc
das
cmp
dec
mov
mov
jnp
or
nop
add
push
mov
out
push
cmp
es
sarb
push
mov
repz
push
cmc
and
jl
cmp
or
jg
cmpsb
inc
jecxz
jg
mov
dec
cmc
test
in
lods
ja
mull
lods
jnp
fs
or
mov
mov
and
mov
rolb
mov
ljmp
std
fdivs
mov
or
popa
pop
mov
dec
lcall
mov
jae
outsl
fwait
fs
ja
test
decl
dec
cmpl
insl
sbb
rcrl
xchg
hlt
adc
js
nop
and
jbe
daa
addr16
add
js
test
addr16
and
push
out
mov
movsb
mov
cmp
push
pop
addr16
dec
sbb
cmp
or
enter
out
cs
adc
jne
lea
cmp
daa
jbe
and
cltd
pop
push
ret
or
mov
sub
and
test
cmpsb
cmpsl
dec
xchg
push
sub
push
scas
mov
jo
and
pusha
pushf
aas
insl
xchg
shlb
inc
testl
xchg
pop
jmp
add
repz
pushf
add
ja
ret
stos
jne
xchg
or
mov
cs
push
adc
sahf
cmp
std
loopne
jo
xor
dec
rorb
push
daa
jbe
inc
cs
jl
imul
test
icebp
loop
lds
cmpsb
js
mov
mov
xchg
test
mov
jbe
xor
mov
jbe
pusha
mov
in
scas
xchg
rcrl
xchg
push
add
xorb
mov
in
mov
div
push
daa
lods
pusha
and
je
sahf
or
mov
fstpl
aad
sub
pop
xchg
inc
fs
adc
test
xor
movsb
mov
in
sbb
jne
enter
dec
mov
out
pop
jp
jnp,pn
lea
jb
out
adc
pop
add
notb
insb
dec
cmpsb
mov
sbb
sub
push
aas
cmp
add
pop
imul
ja
xor
fbld
jne
pop
pop
daa
cmp
ja
xlat
jge
or
jne
aas
add
jg
std
es
test
push
outsb
mov
xchg
add
lds
xlat
test
das
cmpsl
mov
mov
mov
rol
ficomps
cmpsl
mov
inc
inc
jae
lret
pusha
neg
adc
or
push
mov
xor
ss
push
mov
pop
xor
test
push
push
mov
inc
push
lcall
mov
inc
adc
test
sahf
cld
sbb
gs
shll
cmp
xchg
jmp
roll
push
adc
xchg
lcall
sbb
xor
hlt
outsb
sub
mov
adc
adc
sahf
in
sbb
cmp
test
jb
out
mov
add
mov
pusha
pop
aad
cmpb
lahf
and
sub
mov
push
push
jp
push
mov
xchg
mov
lcall
add
cmp
outsl
push
insb
xchg
arpl
mov
adc
and
and
cmpl
rcrl
or
dec
movhps
xor
lds
mov
fwait
xchg
add
add
add
sub
push
cmpl
ret
and
xchg
add
adc
xchg
fdivrl
scas
inc
in
xchg
hlt
jmp
dec
stc
jg
es
fistl
jle
sbbb
and
xlat
jns
stc
adc
mov
cmp
fs
mov
inc
scas
and
test
adc
pop
and
add
repnz
inc
cmp
rol
inc
jno
fucomp
out
rcll
push
push
stos
fs
sub
xchg
inc
mov
push
cli
bound
pop
lahf
jg
adc
push
in
jae
mov
sbb
repnz
test
mov
inc
xchg
cmp
add
fstpt
lods
inc
adc
adc
jmp
hlt
adc
fmull
inc
jmp
inc
cmpb
mov
xor
sbb
les
dec
fstps
outsl
mov
or
dec
inc
pop
in
cs
test
aam
xchg
scas
or
mov
rolb
push
test
notl
sti
adc
xchg
adc
sub
mov
mov
nop
fwait
jl
sbb
lahf
ret
push
mov
ljmp
pop
xchg
push
cmpsb
pop
shlb
mov
mov
hlt
jmp
addr16
adc
imul
or
repz
out
mov
rolb
sbb
and
jmp
repnz
cs
imulb
inc
sbb
mov
pop
sbb
jp
gs
ret
inc
int
adc
outsl
shlb
adc
lock
cwtl
push
ljmp
mov
addr16
icebp
push
xchg
xor
dec
sbb
xor
push
jae
jle
int
jle
xchg
icebp
movsl
popa
pop
movl
or
mov
ret
test
pop
cmp
outsl
orl
jl
out
pop
dec
jecxz
or
aad
jge
mov
mov
fdiv
add
test
outsb
adc
rolb
in
sbb
into
daa
outsb
pop
aam
jg
xchg
aas
cmpb
or
into
stos
shrl
dec
fwait
sbb
or
pop
aas
js
test
jg
fs
adc
rcll
cmc
xor
mov
pop
jne
cmpsl
mov
out
xchg
andb
pop
inc
xorl
jp
test
add
mov
out
scas
or
sbb
stc
std
sbb
mov
inc
out
jns
mov
mov
mov
inc
and
imul
adc
adc
push
pop
cmc
pop
dec
and
inc
rcl
and
addr16
jg
xchg
mov
hlt
xchg
insl
inc
cmpl
cmp
push
test
andb
mov
mov
add
or
add
aad
sub
or
mov
sub
xchg
pop
jns
imul
call
pop
movsl
dec
sbb
or
mov
or
jle
test
imul
lret
mov
mov
clc
daa
ja
scas
jns
or
orb
pop
push
xor
adc
add
mov
mov
fldt
xchg
mov
ret
xchg
jns
mov
pop
push
cmp
cs
dec
mov
div
pop
jecxz
inc
data16
lock
sbb
insl
daa
mov
dec
in
scas
test
push
std
cmc
mull
scas
sbb
and
hlt
lahf
adc
aam
and
xor
rcl
push
fwait
int
mov
xor
pop
mov
push
lds
iret
dec
aas
and
push
out
icebp
mov
icebp
aad
push
inc
xchg
imul
dec
inc
out
xor
shll
aas
testl
jmp
rorb
inc
lret
mov
mov
in
es
lret
pop
mov
ret
mov
repnz
adc
movsl
fsubs
ljmp
jo
and
ja
jle
mov
jb
mov
mov
pop
xchg
xor
sub
add
add
mov
les
mov
push
mov
xor
inc
mov
loop
lahf
lret
or
xlat
out
js
cmp
add
js
push
xchg
jno
push
xchg
jne
lea
out
mov
nop
mov
push
pop
in
pop
cmp
xor
sbbb
bound
mov
cmc
outsl
cmc
mov
js
add
fldl
pushf
and
add
cmc
test
mov
jns
or
data16
in
out
jle
test
sahf
aad
push
pop
movsl
arpl
cmp
loop
in
lds
push
mov
mov
mov
fisubl
data16
mov
push
push
cli
xchg
cltd
lods
test
mov
gs
int
inc
xchg
or
frstor
cs
out
mov
push
pusha
ss
jmp
inc
popf
imul
test
inc
add
fs
test
stos
xchg
pushf
sbb
add
addr16
cmpsl
xchg
inc
or
js
call
shl
sub
test
sub
or
loopne
fwait
and
mov
outsb
push
enter
jno
mov
push
cmpsl
xchg
or
idivl
in
int
ror
movsl
scas
pop
mov
mov
sbb
inc
push
and
mov
adc
jb
jne
push
mov
data16
mov
into
lock
movsb
push
movsl
addr16
sub
sub
and
orb
insl
gs
and
in
dec
rcll
and
aad
int
icebp
mov
or
int3
xchg
sti
mov
es
or
pop
ret
push
dec
xor
pop
mov
lods
dec
mov
popa
xor
jle
test
sub
lock
mov
push
mov
in
pop
mov
scas
inc
adc
jnp
sbb
imul
inc
xchg
xchg
push
std
mov
pop
dec
testl
in
add
xlat
push
fiadds
add
add
fldl
jl
mov
fsubl
jle
pop
add
xor
stc
xlat
rcrb
and
scas
addb
int
and
push
inc
movsb
lcall
enter
out
fldcw
leave
sub
outsb
hlt
enter
mov
scas
fs
sti
xor
pop
inc
fs
aam
and
scas
leave
fmul
arpl
lahf
cmp
xor
andb
inc
insl
xor
jnp
into
es
loop
jne
xor
repnz
aaa
inc
inc
add
add
rolb
sbb
inc
xor
daa
jbe
iret
popl
pop
out
sbb
mov
add
in
mov
ljmp
call
jp
push
jmp
imul
iret
jns
fildl
sbb
in
mul
punpckhbw
add
inc
stos
mov
mov
ret
movb
add
pop
mov
jge
in
fildll
push
cmp
sub
mov
pop
pop
mov
add
inc
xor
cmp
fidivrl
push
out
test
fdivl
inc
mov
xchg
inc
sbb
jns
inc
push
cmp
fildll
mov
push
push
es
aaa
mov
aad
testb
and
pop
adc
mov
mov
aad
sbb
jmp
and
sti
mov
add
or
mov
mov
std
and
inc
mov
insl
into
jns
in
fbld
cmp
dec
repnz
lret
cmpsl
test
or
lods
and
shlb
out
lret
pop
addr16
scas
adcl
jne
cmpsb
imul
icebp
arpl
dec
stc
jnp
filds
mov
jmp
std
ror
xchg
or
fcomip
xlat
dec
mov
out
leave
cmp
addr16
lock
add
sbb
mov
xlat
rclb
sub
cltd
call
xchg
jo
pushf
push
sbb
imul
bound
xchg
mov
add
adc
shl
and
addr16
fldcw
mov
ljmp
out
inc
mov
sub
pop
sub
in
out
std
cmpsb
inc
rcrl
cmpsl
sbb
jbe
mov
adc
mov
mov
lahf
int3
enter
js
adc
ret
pop
mov
sti
icebp
xchg
mov
imul
pop
aas
mov
iret
fwait
arpl
insl
xchg
cs
leave
cmpsb
lock
adc
mov
cmpsb
dec
cmc
jb
xor
mov
push
inc
insb
mov
cmc
leave
in
fcomip
xchg
jmp
fdivp
inc
lods
mov
or
andb
jb
aas
sarb
push
fists
hlt
sbb
pop
mov
or
mov
add
mov
insl
mov
pop
cld
fidivl
add
push
dec
mov
and
xor
sti
mov
jp
arpl
test
testb
xchg
mov
inc
jbe
mov
ja
add
xlat
cmpsb
aaa
cld
gs
xchg
rorb
idivl
bound
xlat
icebp
lock
das
jb
loop
add
or
subb
push
call
test
jae
pop
iret
dec
bound
push
outsb
ja
sbb
jg
repz
cmp
sti
fisttps
dec
jmp
outsb
mov
cld
xchg
push
fcmovbe
inc
mov
adc
or
in
in
pop
mov
push
mov
jbe
lea
test
add
scas
mov
push
adc
add
addr16
or
xchg
out
adc
fwait
sbbl
out
scas
negl
pop
lods
jmp
mov
roll
inc
sub
xor
jp
out
push
pop
pop
pop
stos
nop
outsb
out
imul
dec
push
test
inc
je
fmull
sub
adc
stos
jo
subl
lock
sarb
mov
mov
stos
inc
add
loop
mov
aad
fldl
cmp
cmc
jo
mov
add
inc
clc
mov
scas
jmp
add
cmc
addb
outsl
gs
fcmove
sbb
int3
enter
test
popa
cltd
and
adc
jge
andb
cmp
fidivrs
daa
cltd
mov
xchg
inc
cmp
mov
andl
xchg
pop
and
push
mov
jbe
xchg
andl
mov
jg
insb
scas
addr16
pop
test
xlat
out
push
out
sti
xlat
dec
mov
mov
cmp
or
cmp
mov
jecxz
clc
stc
cmp
mov
mov
int
popf
inc
mov
es
rol
das
dec
pop
mov
cmp
lahf
daa
mov
sahf
jno
test
cmp
or
cmpsl
lds
icebp
mov
clc
xchg
loop
lds
cmc
cmpsl
mov
pop
jecxz
test
call
subl
jns
lock
mov
xor
imul
cs
sub
mov
inc
scas
outsb
ret
fisubrl
aas
iret
enter
in
jbe
iret
adc
cmc
out
cmpsb
lods
in
or
cmpsl
mov
lea
call
mov
xor
mov
inc
cmpsl
jle
gs
test
mov
sub
adc
lds
repnz
jae
dec
push
movsb
mov
icebp
shlb
push
xor
sub
push
movl
inc
pop
ja
loope
outsl
dec
sti
jmp
xchg
jp
pop
lods
scas
adc
push
je
mov
add
and
divl
push
sub
inc
add
cmp
test
rcl
pop
add
cmpsl
add
ja
in
xchg
mov
loope
pop
push
jle
pop
insb
std
push
lods
jg
adc
cmp
mov
and
int
movsb
inc
aad
cwtl
arpl
add
incb
outsb
clc
sbb
dec
jg
mov
adc
data16
in
push
pop
push
js
addr16
lret
sar
subb
cmp
dec
test
jns
scas
in
add
xor
mov
outsl
pop
adc
mov
rcr
addr16
pushf
cmp
lahf
pop
mov
rol
mov
cmpsb
cmpsb
inc
xchg
fld
mov
pushf
sbb
push
in
daa
sbb
pop
mov
sub
pop
cmpsb
lahf
hlt
inc
pop
xchg
xchg
data16
pusha
jecxz
jle
inc
add
outsl
inc
sub
xchg
push
loope,pt
inc
add
imul
push
in
es
sub
push
push
aad
inc
xchg
inc
cmpsl
sbb
aam
xor
stos
lds
sbb
mov
cmp
imul
jnp
or
addr16
jp
shlb
stos
ljmp
xlat
aam
push
xor
lcall
repnz
stc
imul
jg
jno
xor
jne
push
dec
into
push
pop
test
shrb
mov
or
out
addr16
ret
dec
rclb
out
iret
cmp
stc
shlb
aam
pop
xchg
inc
lret
push
pop
insl
add
shlb
inc
and
pop
push
jne
xor
inc
ffreep
pop
mov
and
push
xlat
ret
xor
push
js
pop
jne
enter
pop
rcr
adc
and
add
clc
cmpsl
ret
insl
insb
aam
sahf
bound
xchg
dec
jl
mov
ss
mov
mov
outsl
movsl
cmpsl
test
incb
jecxz
inc
dec
sbb
cmp
int
rolb
outsl
dec
inc
scas
ret
xchg
test
shlb
test
pop
sub
xchg
add
mov
add
mov
mov
mov
mov
mov
fwait
daa
mov
cmp
out
imull
xchg
scas
pop
scas
mull
pop
fistpll
or
xchg
scas
test
adc
cmp
push
addb
add
push
add
divl
or
jns
in
adc
inc
jecxz
mov
scas
lahf
mov
inc
jno
lea
jno
fbld
jecxz
out
repz
pop
rcrl
sbb
aaa
cmc
movsb
cwtl
clc
lds
leave
incb
sbb
out
ret
sbb
test
pop
ds
sti
outsb
out
es
dec
cmpsl
fildl
fildll
adc
inc
add
cmpsl
mov
xchg
arpl
mov
pop
dec
xor
out
pop
faddp
hlt
pop
sbb
divl
mov
fcmovnu
jno
rol
out
mov
adc
cld
mov
sbb
adc
mov
push
loope
or
add
cmp
jecxz
inc
push
inc
out
xchg
jo
or
imul
push
pop
mov
addr16
jg
jge
stc
xor
mov
xchg
bound
mov
mov
clc
pop
shll
in
testl
pop
mov
or
mov
xchg
shl
add
xor
mov
lret
fadds
divb
xlat
inc
out
lret
sbb
xor
and
mov
mov
stos
ss
add
or
cmp
outsb
sub
icebp
jg
xlat
sbb
js
gs
gs
pop
mov
repz
inc
test
xchg
ficomps
cmpsl
xor
xchg
adc
in
divl
cmp
fmull
in
mov
faddl
icebp
insl
push
test
fcmovne
push
or
or
mov
int
insl
popa
add
gs
jmp
cmpsb
push
inc
mov
fwait
imul
cmovne
xor
idivl
jmp
xlat
dec
and
sti
imul
les
jecxz
pop
lret
loopne
andb
mov
push
and
inc
cmp
cmp
arpl
xlat
jo
dec
ss
iret
out
or
jno
xlat
push
adc
fcompl
jno
inc
and
pop
mov
stos
mov
lods
push
into
subl
and
add
sbb
pop
addr16
add
mov
lret
adc
ja
jmp
pop
jg
xchg
xchg
mull
test
lahf
fbstp
xor
das
fldl
inc
sbb
push
inc
iret
adc
fwait
nop
jbe
inc
rorl
mull
cmp
imul
mov
sbbb
scas
jmp
test
jg
imul
out
or
test
cli
push
jge
aam
mov
push
data16
jo
cmp
pushf
jb
jae
adc
loop
xchg
fisubl
lods
daa
jg
xor
mov
push
mov
rorl
sti
shl
rclb
addr16
jnp
mov
jecxz
jo
pushl
and
loope
add
lea
jae
push
inc
xor
or
testb
into
std
xor
xchg
jecxz
sub
lea
pop
ds
add
pusha
ds
insl
dec
ficoml
pop
frstor
in
cmp
ror
in
insb
test
test
in
iret
shl
inc
testl
cmpsb
xor
bound
mov
out
stc
aas
leave
xlat
icebp
mov
and
shll
pop
adcb
jb
xlat
jg
imul
out
idivb
out
addr16
filds
xlat
testl
pusha
fcmove
outsl
xchg
adc
jge
xchg
mov
aaa
stc
add
pop
divb
test
mov
mov
jne
ljmp
aas
xchg
cmpsb
out
les
rolb
pop
pop
xchg
inc
sti
dec
shr
das
sub
add
mov
dec
fwait
and
sbbl
cmpsl
out
and
nop
out
add
dec
dec
shr
xchg
mov
enter
add
xlat
or
mov
cmp
aad
or
jge
out
out
rolb
subl
addr16
add
daa
faddp
rorb
mov
dec
cmp
xor
mov
repz
xchg
sbb
addl
inc
fwait
xchg
jecxz
xor
xchg
dec
push
outsb
jbe
xchg
adc
iret
divl
xor
sti
jbe
mulb
mov
mov
orb
daa
jne
cltd
out
lds
inc
mov
jnp
fbstp
xchg
xlat
fimuls
popf
or
inc
sbb
jbe
dec
push
test
lods
mov
push
test
ret
jmp
jae
adc
xor
addl
nop
add
fldenv
xchg
jle
stos
xor
lret
xchg
leave
lret
outsb
fmull
popa
cmp
cmpsl
jmp
das
ja
leave
sbb
pushf
dec
cwtl
xchg
sub
sbb
dec
mov
cmpsl
out
mov
sub
scas
cmp
add
inc
stc
jns
das
adc
or
es
shrl
add
mov
mov
pop
test
lret
insl
jge
fdivs
sti
je
test
and
std
jle
xchg
or
push
xchg
xorb
sbb
jg
idiv
int3
mov
xchg
dec
mov
pop
adc
test
mov
pop
sub
mov
test
pop
inc
mov
loop
loope
test
dec
call
xlat
dec
les
arpl
lahf
cmpsb
inc
xchg
xchg
notb
inc
mov
mov
mov
push
add
push
jecxz
lret
or
xchg
or
add
outsb
xchg
sbb
les
mov
testb
mov
imul
mov
ret
xchg
lcall
pop
push
scas
add
orb
dec
mov
mov
js
mov
add
fsubrl
jmp
jmp
fbstp
and
push
and
rolb
int3
ljmp
aam
push
jno
cmpsl
dec
aad
inc
mov
inc
xchg
or
into
pop
call
and
or
xchg
ja
add
adc
jmp
in
iretw
push
push
ffree
out
pop
and
dec
popf
ljmp
dec
sub
cmpb
pop
aad
add
pop
mov
jl
test
test
stos
fdivrl
ljmp
or
xlat
jecxz
mov
test
dec
pushf
xchg
cli
fdivrl
inc
xchg
sbb
rcrl
dec
nop
jne
scas
xchg
out
fistl
daa
cltd
dec
adc
idivl
mov
cmp
mov
mov
cmp
movsl
popf
rorb
dec
iret
add
mov
mov
add
out
div
sti
mov
shll
insl
mov
sub
xlat
add
and
idivl
mov
ja
inc
stc
sbb
mov
imull
icebp
fwait
push
xchg
jmp
sbb
add
jge
ja
xchg
rep
jge
outsl
leave
test
push
cmpsl
sbb
inc
fisubrs
dec
mov
aad
mov
add
lahf
ja
jl
orb
daa
out
roll
or
or
out
push
pop
in
jg
and
test
les
push
cmc
call
add
adc
ja
stos
or
mov
mov
out
inc
push
pusha
lods
popl
add
mov
stos
xor
xchg
adc
fs
stos
lahf
notl
adc
mov
fcmovne
fwait
xor
fcmovne
pop
pandn
int3
aas
push
or
cmp
jne
inc
lods
jle
add
jo
jbe
daa
mulb
pop
jns
ja
outsb
jno
int
out
mov
xor
addr16
test
pop
inc
push
lods
adc
adc
leave
fiaddl
in
test
adc
adc
and
pop
in
outsb
jmp
loop
and
inc
sub
test
adc
mov
call
inc
filds
push
inc
xchg
fildl
inc
adc
add
aam
scas
scas
in
mov
jbe
mov
cmp
test
repz
dec
mov
xchg
mov
adcb
adc
std
clc
inc
fimuls
adc
popf
lret
out
cs
push
push
adc
daa
mov
movsb
ret
and
fwait
std
lahf
out
cmpsl
out
mov
and
idivl
outsl
pop
pop
cld
xchg
insb
addr16
xor
leave
cmc
std
es
cmpsl
inc
clc
add
adc
jno
mov
sahf
pop
cmpsl
jge
xchg
fwait
imul
outsl
out
pushf
out
add
jl,pt
pop
xor
hlt
incl
and
inc
push
fwait
std
insl
mov
popf
cmpb
mov
sbb
xchg
in
xlat
sarl
out
add
cmpsl
adc
bound
icebp
cltd
fwait
pop
test
lahf
scas
stc
mov
xchg
cltd
or
loopne
loop
push
mov
mov
rcrl
sub
in
testl
jp
int
jo
push
dec
xadd
outsb
cmp
cmp
xor
ds
gs
add
dec
out
mov
loopne
cmp
xor
jge
or
fisttps
cmpsl
jecxz
out
jbe
addr16
inc
fbld
xor
aad
lcall
jne
cmp
lds
std
sbb
inc
push
sbb
sbb
inc
daa
jge
fistpll
push
cmc
cmp
int3
push
int
jns
insb
aas
add
inc
mull
xchg
cmpsl
pop
mov
adc
shl
xchg
pusha
pop
cmpsl
ds
orb
inc
xchg
sub
hlt
leave
push
xlat
inc
mov
stos
shlb
xchg
mov
adc
sbb
leave
test
jmp
push
aad
lock
aad
jecxz
push
jg
movsb
mov
ret
movsb
jo
add
fwait
xchg
xorl
push
test
jbe
mov
jp
out
lahf
stos
inc
aaa
pop
nop
jg
out
inc
rorb
push
dec
icebp
jo
or
pop
out
aaa
out
ja
mov
daa
fimuls
mov
shlb
cmp
scas
push
stc
icebp
push
add
mov
arpl
pusha
adc
push
sub
sbb
loope
mov
movsb
imul
mov
pop
in
cld
in
push
stc
mov
or
or
idivb
or
sub
pop
xchg
sub
xchg
push
inc
int
pop
imul
je
movsl
adc
iret
sub
jmp
les
add
inc
jmp
or
andl
xchg
les
cmc
pop
push
les
cmp
fistl
cmc
das
les
cmp
sahf
pop
lds
test
mov
cmpsl
daa
roll
out
aaa
idiv
leave
fildll
dec
mov
decl
std
insl
das
mov
cs
repz
pop
mov
je
repz
fcoml
adc
mov
bswap
out
cmovns
xlat
sbb
xor
jg
out
push
in
test
inc
cmc
xlat
data16
arpl
lods
or
mov
mov
mov
fnsave
hlt
xchg
mov
mov
jg
popl
jge
adc
dec
xlat
pop
lahf
pop
cmc
subb
outsl
addr16
jb
incb
icebp
adc
sahf
xchg
ret
mov
addr16
adc
popa
je
pop
mov
cmpsl
jbe
inc
cmp
call
mov
push
out
mov
xor
sbb
fwait
sub
jle
sbb
notl
mov
movsl
outsl
out
je
jecxz
mov
sbb
pop
mov
jecxz
xchg
imul
imul
mov
jle
loop
add
and
test
sbb
sub
cmpsl
push
cmpsl
jge
jae
fsubrp
daa
or
imul
test
pop
je
scas
push
xchg
addb
popa
test
xchg
jge
popf
inc
and
inc
adc
sbb
rcl
rcr
or
aaa
fidivrs
xchg
pop
imul
popl
lods
idivl
jmp
push
les
dec
lret
mov
roll
xchg
loope
cli
in
inc
shrb
rorb
push
xchg
dec
xlat
out
adc
aad
fwait
xor
std
lret
data16
mov
ret
in
mov
mov
dec
fwait
ss
cld
test
inc
mov
mov
test
lds
lret
shrb
mov
mov
mov
je
jecxz
adc
inc
in
jmp
jae
pop
mov
push
ljmp
aaa
pushf
in
cmp
fdivrs
mov
mov
scas
xchg
std
pop
fisttps
mov
scas
xlat
adc
push
insl
ljmp
sti
pop
pop
inc
adc
leave
add
addl
ljmp
es
test
xchg
mov
jecxz
cmc
pop
xor
mov
fwait
pop
add
in
cwtl
in
sbb
jg
mov
lea
cmpsl
and
xchg
add
adcl
add
lock
mov
adc
sub
xor
daa
test
rcrb
dec
cmp
test
arpl
sar
mov
lcall
ret
sbb
add
in
stc
and
cltd
jmp
and
aam
ljmp
inc
pop
rol
inc
ror
outsl
jge
test
int3
ret
xor
push
aam
xor
add
pushl
ror
pop
loope
add
xchg
add
and
add
out
int
mov
jg
jne
inc
push
subl
jp
out
inc
repz
fld
pop
add
enter
lahf
insl
xchg
pop
in
lds
xlat
and
pop
inc
pop
rolb
or
mov
shl
addr16
aaa
bound
push
push
shlb
jb
push
icebp
loop
inc
mov
addl
jnp
pop
in
fists
loope
cmpsl
push
test
in
lds
sbb
mov
xorb
push
cmp
xchg
or
scas
or
outsl
aas
cli
xchg
movsl
fwait
mov
inc
sub
sub
jmp
fldl
outsb
cmpsl
test
movsb
add
ret
push
addr16
lock
testb
jmp
jp
cmp
shr
push
insl
inc
push
mov
out
sub
movntps
movsl
aam
or
mull
or
clc
mov
cmpb
mov
mov
dec
sbb
push
ret
push
mov
mov
lds
roll
lods
and
repnz
frstor
aam
pusha
mov
test
inc
mov
rorl
mov
add
pop
in
cmp
out
std
test
adc
fxch
xchg
sti
addb
mov
aam
popl
push
xchg
in
stos
repz
xchg
sti
lock
test
scas
pop
dec
xlat
scas
in
in
mov
mull
jge
out
mov
push
and
push
jbe
mov
cmp
call
fs
fldl
mov
cmpsl
jl
mov
sbb
scas
addr16
aaa
fs
inc
loope
mov
add
add
dec
cmp
push
sub
cltd
popa
pop
pop
ret
das
xchg
insb
call
cmpl
add
cmp
mov
nop
xchg
stos
push
xlat
mov
xchg
movsb
out
pop
std
popa
inc
sbb
cli
jge
shll
mov
add
and
lcall
lahf
and
push
adc
daa
jmp
pop
stos
jp
movsb
adc
cs
push
inc
pop
and
shrb
fldl
ficomps
pop
ja
in
fistpl
std
sbb
xchg
push
stos
sbb
and
cmovnp
and
adc
les
imulb
fnstsw
lret
cs
inc
icebp
mov
mov
les
pop
aad
mov
insl
imul
ffreep
inc
sub
insl
or
pop
lock
cmc
lds
xor
jae
int
lret
jg
mov
pop
inc
inc
inc
das
test
adc
mov
daa
and
sub
xchg
ds
mov
add
mov
mov
loopew
repz
jmp
inc
mov
in
loope
mov
xor
sbb
in
dec
xchg
dec
out
test
cmc
jbe
jecxz
mov
xchg
popa
lea
or
push
add
pop
ss
dec
out
mov
mov
mov
ret
mov
push
lods
cmp
jge
arpl
pop
mov
ds
sahf
aaa
jecxz
out
insl
out
out
rcr
mov
shlb
mov
cmp
or
out
stc
rcll
insl
mulb
jnp
xchg
ret
sti
jno
in
push
notb
pop
pop
les
shl
insl
imul
add
adc
add
cmpsl
arpl
and
pushf
rorl
sbb
cmpsl
dec
xchg
imul
mov
sbb
outsb
sub
imul
xor
sbb
ja
std
xor
and
pop
xor
outsl
bound
sbb
cmp
cmc
pop
inc
pop
lcall
mov
add
dec
adc
addl
push
pop
out
mov
xor
inc
pop
push
pop
scas
mov
jmp
push
scas
adc
rcrb
sbb
shll
movsl
ja
xchg
mov
sti
out
aam
sarl
add
stos
jg
pop
iret
jmp
lods
cmp
pop
pop
stos
sbb
ret
icebp
rcll
jmp
jmp
cmpb
and
mov
push
das
ds
fnsave
inc
cmp
add
push
fs
cltd
std
clc
push
pop
dec
mov
cmp
cmp
movb
cmp
add
inc
push
pop
into
dec
pop
mov
dec
ffreep
roll
imul
cmp
add
jg
xchg
mov
in
pop
ret
push
out
jo
mov
stos
addr16
push
js
and
push
cmp
add
cmp
daa
pop
iret
mov
sub
add
mov
push
int3
popf
xchg
scas
fistpll
addl
hlt
sbb
das
cmp
inc
inc
mov
insb
lods
sub
lcall
lahf
loop
neg
mov
xchg
jns
pop
push
mov
sbb
sarl
pop
mov
data16
xorb
push
push
popf
xchg
xor
cli
iret
mov
fdivr
mov
dec
rcrb
aas
fadd
mov
xor
and
roll
xchg
test
jns
jg
jecxz
in
pushf
in
cmp
data16
and
scas
mov
add
loopne
daa
shl
mov
xchg
xorb
ret
or
cmp
enter
mov
jbe
mov
fwait
ja
adc
or
cmpsb
les
inc
mov
dec
push
adc
cmp
mov
xchg
mov
hlt
pop
jnp
imul
aam
jno
repz
mov
popf
mov
notl
pop
aam
dec
xchg
stc
movsb
dec
out
hlt
inc
out
push
scas
mov
ljmp
pop
push
daa
push
lods
pop
push
lea
loop
sub
mov
or
pop
and
lahf
and
jmp
inc
scas
jp
xor
popf
xchg
movsl
jmp
xchg
sti
adc
adc
fisttpl
cmpsl
testb
rolb
mov
popf
addr16
pop
dec
or
int
dec
or
mull
lahf
push
sbb
dec
ds
push
les
cmpsl
fstp
stc
pop
popa
negl
loop
dec
jmp
pop
jge
mov
mov
pop
negl
or
and
ret
add
mov
mov
aaa
mov
fs
cs
and
push
shrb
lret
jmp
pusha
out
fisubs
ja
inc
xchg
cmp
push
mov
add
jmp
in
push
cmc
jae
js
cmc
leave
lahf
xchg
cmp
out
jne
jge
sub
ds
jecxz
and
stos
mov
test
sarb
xlat
in
test
outsl
cmpsl
cmp
and
cmp
call
lock
push
xlat
mov
repz
leave
jle
loop
jecxz
mov
std
icebp
test
jno
sbb
lock
mov
mov
sbb
xchg
mov
sbb
popf
push
pop
cmc
iret
cmp
jmp
cmpsb
dec
lds
sahf
stos
nop
xchg
repz
pop
out
xchg
jb
hlt
cld
fs
addr16
std
fldt
xchg
jnp
lahf
inc
shlb
cmpsl
test
jmp
shr
scas
pop
testl
sub
cmp
inc
ret
insb
sbb
arpl
sub
sarb
lret
iret
subb
or
faddp
cld
cmp
shrl
and
inc
les
cmp
scas
pop
or
jno
fwait
xor
pop
aad
outsl
xchg
mov
in
pop
sarb
mov
push
in
mov
shll
mov
mov
mov
pop
push
xchg
addb
into
imul
dec
jmp
vpsadbw
pushf
mov
and
in
pop
in
xchg
cmp
push
stc
int
iret
movsb
push
add
lods
xchg
jmp
fs
mov
jecxz
inc
inc
outsl
fsubl
int
js
cmpl
into
rep
mov
mov
in
lea
aad
or
ds
addb
aad
cmpsb
lods
cmp
xor
cmp
jae
mov
addr16
jmp
jae
sub
jnp
pusha
cmp
pop
lahf
inc
cmp
jmp
repz
cltd
xchg
fs
add
pop
adc
add
cmpsb
and
das
loop
cmp
test
and
ret
pop
loope
ffreep
mov
xchg
mov
and
xchg
mov
inc
and
ret
push
aam
clc
xchg
cmp
pop
in
mov
inc
add
mov
stos
xlat
add
aad
pusha
push
aad
push
pop
fs
add
stos
repz
test
dec
xchg
out
test
mov
ljmp
cmpsl
sub
mov
out
pop
es
and
mov
sbb
pop
fs
in
add
mov
push
in
cmp
icebp
loope
inc
hlt
ret
push
dec
imul
hlt
movsl
mov
loopne
scas
add
int
pop
mov
xchg
dec
adc
cmc
daa
ret
inc
jl
dec
and
ss
aad
cld
xchg
test
fiaddl
mov
test
cmp
mov
inc
out
sub
pop
daa
cmp
push
shr
shr
jns
xchg
cs
jge
pop
iret
xchg
xor
int3
xor
jmp
dec
jecxz
arpl
subb
mov
addr16
cmpsl
ret
xchg
loope
mov
das
inc
mov
lock
fbstp
xchg
fwait
sbb
cmpsl
icebp
inc
lea
xchg
test
jp
ss
cmpsl
or
inc
jnp
les
cmpsl
push
mov
adc
jns
xchg
cmp
test
push
stc
inc
jns
roll
out
repz
lods
dec
dec
xchg
movsl
jmp
dec
cltd
cmp
mov
pop
into
ret
addr16
jmp
hlt
mov
call
add
xchg
fwait
inc
cmp
cmpl
sbbb
das
out
jns
loope
iret
cmc
aad
pop
mov
mov
mov
cmpsb
jne
adcl
and
aad
int
aaa
mov
movsb
mov
gs
test
ss
jg
sbb
out
sbb
out
sbb
fwait
out
ds
movsl
aaa
je
inc
mov
mov
aad
mov
test
adc
data16
loop
pop
jge
cmpsb
jmp
fs
andl
inc
lahf
test
loopne
loope
pop
push
decb
out
subl
cmp
scas
inc
pop
cmpsl
pop
in
inc
mov
stos
out
out
cs
add
push
lea
lret
bound
pop
inc
loop
mov
mov
pushf
lods
xchg
mov
mov
out
ljmp
mov
pusha
out
movsl
out
dec
mov
mov
mulb
ja
xchg
jnp
cmpsl
mov
mul
mov
xchg
frstor
pop
push
push
ret
pop
xchg
xchg
addr16
inc
imul
or
cmpsl
or
and
fists
mov
test
adc
aam
ficomps
lods
jecxz
inc
dec
outsl
add
xlat
sahf
aad
dec
sub
dec
pop
lea
test
push
sahf
mov
dec
insl
dec
shl
jae
inc
inc
xchg
xchg
jno
jp
mov
mov
out
dec
test
ret
xlat
out
aad
add
add
sub
loope
stc
xchg
xchg
clc
mov
sbb
jmp
rorl
fidivs
dec
icebp
shll
xlat
add
push
insb
pop
mov
pop
call
lcall
or
clc
setle
fwait
inc
addr16
popa
mov
leave
xlat
pop
lods
roll
int
movsb
and
fistl
adc
inc
inc
xchg
mov
xor
sbb
dec
push
loop
addr16
sti
mov
inc
insb
movsl
mov
aaa
ljmp
lods
add
jecxz
jae
push
pop
and
mov
fidivs
nop
or
cmp
pop
push
rclb
and
outsl
leave
mov
mov
inc
idivl
aaa
fistps
incb
ret
ror
mov
inc
out
cmp
mov
lds
out
and
mov
aam
adc
jbe
sbb
pop
cmp
cmpsl
shr
xchg
call
dec
movsl
jge
test
dec
xor
xlat
fmulp
mov
mov
andl
push
into
mov
xor
sub
mov
ja
movsl
fnsave
cs
movsb
outsb
push
adc
adc
xchg
rorl
adc
xlat
out
sbbl
jo
dec
iret
pop
mov
fs
fs
cmpsb
inc
cmpsl
ja
dec
icebp
cmp
ja
pop
shll
push
adc
fstl
out
pop
or
mov
iret
std
add
pop
fstpt
nop
lods
xchg
ret
fstpl
and
cmp
gs
pop
je
arpl
add
mov
ror
mov
sub
pop
movsb
pop
mov
and
mov
push
xchg
pop
test
int
sbb
cmpsl
test
fcoml
jmp
iret
jecxz
jle
fwait
sbb
and
ss
hlt
push
fidivrl
aad
xor
test
add
addr16
rcl
jnp
scas
jae
mov
jns
arpl
mov
add
insl
cli
iret
inc
sarl
pop
fildl
adc
sahf
push
inc
jbe
add
repz
daa
out
inc
jmp
filds
dec
divb
push
daa
into
add
stos
mov
xchg
mov
mov
in
gs
jb
lds
pop
cld
mov
repnz
cli
out
cmp
mov
or
repz
mov
mov
aam
rcrb
subb
push
xor
dec
int3
xchg
dec
sarl
add
sub
out
cmp
adc
sahf
push
test
push
push
mov
xor
jmp
out
test
ss
rorb
clc
setg
add
adc
cmpb
pop
dec
fs
ljmp
jecxz
inc
movsl
sbb
jle
push
mov
mov
aas
add
mov
test
add
inc
test
out
dec
mov
sub
and
xchg
xor
js
in
adc
push
pop
pand
add
sbb
rcr
aaa
pop
sbb
out
icebp
pop
std
sti
xor
out
and
adc
or
fnsave
xlat
fistpll
mov
xor
lock
push
andl
daa
add
dec
jnp
dec
xor
stc
hlt
push
aas
mov
sbb
lds
aam
mov
pop
pop
jne
in
arpl
mov
pop
dec
push
pop
inc
es
out
aaa
pop
popa
pusha
ja
std
das
in
xchg
scas
cmp
add
scas
jo
testl
shlb
sahf
loope
mov
mov
scas
cli
daa
ljmp
arpl
lds
in
sub
aad
inc
aas
ja
rcll
or
out
cmp
popa
mov
jnp
cmp
mov
inc
rclb
idiv
sarb
inc
jmp
gs
xchg
ret
push
loopne
aad
outsl
xchg
inc
cld
and
in
xor
repnz
repz
dec
sbb
xchg
movsb
pop
or
mov
cmovns
mov
sub
mov
fldt
mov
lock
sub
pop
cmp
push
daa
test
maskmovq
mull
jl
mov
and
movsb
push
sbb
pop
cmp
mov
hlt
imull
cmp
xchg
mov
addr16
out
jmp
aaa
addr16
mov
mov
add
ret
mov
ret
jno
sbb
popf
daa
adc
sbb
dec
testb
mov
hlt
das
test
loopne
aad
cmc
in
pop
fisubs
sbb
lret
lahf
lahf
sbb
movsb
or
add
adc
lods
testl
inc
lock
fidivrs
fmuls
addr16
iret
aad
cmpl
mov
pop
pop
std
or
add
fwait
adc
add
cld
mul
loopne
scas
add
pop
loope
std
out
faddl
aam
out
stc
adc
rorl
test
add
nop
mov
das
add
leave
lahf
xchg
js
sarb
into
fdivl
pmulhw
iret
adc
inc
shlb
pop
es
pop
outsb
cs
dec
mov
clc
pop
iret
repnz
xorl
and
xlat
push
cmp
cmpsl
mov
lahf
jno
faddl
insb
test
cltd
cmpsb
inc
loop
lcall
mov
dec
jge
push
push
in
cmc
popf
mov
or
pusha
cmovs
mov
pop
cmc
inc
cmp
jns
mov
pop
cwtl
scas
out
dec
stos
shr
xchg
xorb
orl
ds
push
mov
sti
clc
std
pop
daa
fiadds
mov
iret
push
adc
in
fwait
add
xchg
adc
nop
cmc
and
movb
and
lods
test
test
popa
sbb
and
xlat
ret
popa
test
push
and
test
iret
sbb
mov
mov
dec
std
dec
cmp
sbb
inc
iret
lea
dec
leave
and
pop
ja
arpl
into
dec
mov
sbb
pop
mov
lcall
xchg
pop
xor
cli
std
mov
xor
mov
pop
xchg
jns
sarl
fstps
and
push
cmp
rol
mov
xor
mov
pop
xchg
stc
mov
into
xor
js
push
xor
cli
adc
sbb
loope
push
push
cmpsl
cmp
inc
out
insb
mov
and
fwait
in
add
inc
aad
or
stos
pop
jge
sub
divl
sub
stc
nop
out
mov
pop
add
cmp
push
test
stos
xor
mov
pop
out
push
mov
imul
testb
cwtl
add
sub
icebp
jnp
out
lock
dec
push
xorl
test
mov
xlat
mov
outsb
jnp
jbe
movsb
lds
jmp
out
ja
or
pop
mull
xchg
test
or
jne
xchg
out
lds
mov
gs
xchg
subl
adc
sub
cmpsl
aas
stc
mov
stc
pop
shll
in
cmp
aas
in
out
mov
xor
insl
je
push
hlt
push
xchg
addr16
add
push
imul
xlat
jg
mov
daa
test
rcr
inc
xor
cwtl
mov
stos
mov
outsl
daa
test
fiadds
dec
xchg
sbb
xor
idivl
xlat
push
fistpll
jno
out
ficoml
lahf
scas
add
xor
jge
or
insb
inc
in
mov
mov
adc
daa
xchg
fdivr
jbe
mov
arpl
push
jae
adc
ja
xchg
add
adcl
aas
pop
addr16
add
imul
xchg
adc
call
ss
cs
add
lea
leave
push
cmpsb
mov
cmpsb
xlat
add
dec
mov
jnp
loopne
cmp
shll
xchg
xchg
out
out
imul
xlat
fs
clc
sbb
into
add
cmp
add
jge
jle
xchg
shll
bound
stos
fcmovnu
jge
je
adc
fbld
add
jmp
push
push
jae
andb
jae
mov
xor
stc
sbb
shlb
std
es
push
mov
stc
addb
fidivl
add
nop
adc
push
jmp
fcoms
xor
lods
out
mov
mov
jmp
cmp
into
xchg
pop
inc
sbb
int
push
push
stos
mov
pusha
cmp
imul
xor
out
inc
int
inc
mov
imul
out
loope
mov
ret
mov
cmc
jo
inc
aas
js
es
cmp
gs
mov
fbstp
sub
rolb
xchg
mov
addr16
out
pop
iret
cli
add
je
mov
pop
aaa
repz
jno
sub
test
adc
iret
scas
jle
icebp
and
and
or
fcmovu
out
or
test
mov
and
xchg
ret
inc
in
divb
jmp
sarb
jne
mov
repz
ret
inc
popa
ffree
inc
pop
imull
or
in
leave
push
shl
cmp
std
xor
jns
xchg
js
inc
mov
jmp
js
leave
loope
popf
cmp
cmp
loope
out
inc
cs
jecxz
adc
movsl
jle
hlt
fmulp
jge
push
mov
inc
mov
hlt
xchg
and
fs
in
and
mov
push
shll
jge
or
rorb
xchg
rcl
push
xor
jecxz
inc
xor
add
cmc
data16
cmpsl
jmp
push
jbe
xrelease
inc
addb
dec
out
fcomi
rcr
rol
adc
xor
mul
out
test
insl
xor
mov
mov
fnsave
ds
jne
sti
test
jp
nop
lds
sbb
stc
xor
decl
out
movsl
push
test
push
int
ret
ja
inc
push
pop
shrl
mov
push
push
shll
mov
roll
dec
sbb
and
add
adc
mov
out
xchg
rol
and
test
pop
push
push
push
adc
mov
mov
push
movsl
stos
aas
js
mov
pop
std
out
out
in
ficoml
fisubrs
xor
dec
shlb
icebp
jnp
push
mov
mov
adc
test
outsl
jge
std
iret
shlb
aas
out
gs
sub
dec
fs
xchg
jnp
ja
lods
faddl
inc
into
cmc
aad
mov
jb
pop
rclb
cli
jnp
pop
rcrl
adc
andb
inc
and
mov
cmc
adc
pop
ljmp
sti
fcomi
scas
cltd
outsl
mov
sub
jmp
shr
in
insb
sub
loop
cld
xor
inc
push
and
push
pop
xlat
lods
xchg
gs
sbb
add
pop
inc
es
push
sub
mov
fidivl
xor
lahf
movl
stc
inc
rcrb
out
and
mov
lret
or
jge
das
cmp
test
jne
fimull
push
pop
sbb
ss
cmp
mov
test
inc
sbb
movsb
fidivrs
dec
mov
cmp
lret
push
cmpsl
pusha
xor
push
and
xlat
add
mov
or
in
and
in
lcall
cmpsl
or
mov
push
test
mov
loop
add
pop
aad
ljmp
packsswb
fdivrl
loop
cmp
aam
fidivs
movsb
stos
popf
scas
dec
rol
mov
or
sbb
pusha
inc
mov
and
lret
adc
repnz
inc
mov
sbb
push
push
inc
or
jge
rcll
mov
xlat
loope
pop
push
mov
cltd
sar
xor
mov
cltd
jb
lret
aas
hlt
outsb
lds
dec
lds
jmp
mov
xor
out
cmp
mov
push
testl
pop
sbbl
pop
pop
jg
mov
ja
rcl
cmp
dec
xchg
mov
jns
repnz
adc
cmp
add
mov
cmpsb
lods
or
into
sbb
or
push
cmpsl
push
lret
sti
cmpsb
test
sbb
pop
jno
push
cmp
inc
cmp
mov
aam
jle
sub
data16
pop
jle
out
add
push
push
ljmp
lcall
dec
scas
add
aam
jecxz
jg
movsl
adc
in
xchg
clc
sbbb
movsb
xbegin
test
test
xchg
xor
xchg
mov
and
loop
and
arpl
adc
cmc
xchg
cmc
js
cmpb
test
test
hlt
inc
mov
xchg
mov
ret
xchg
test
xchg
cmpsb
mov
in
movsl
mulb
int3
xor
test
pop
add
lahf
ret
mov
repnz
lods
loopne
aam
jmp
mov
adc
push
xchg
xorb
push
scas
stc
jns
vunpckhpd
pop
sti
mov
push
fwait
mov
or
push
mov
lods
push
sti
fistpl
in
out
jae
daa
mov
fs
jmp
and
dec
xlat
in
xchg
js
cmp
ds
cmpsl
fs
test
fsubp
jmp
aad
rcrl
stos
fldcw
aas
sahf
fwait
and
das
pop
mov
jmp
and
out
out
rol
in
mov
andl
outsl
jmp
mov
sbb
fistl
xor
test
adc
xlat
test
jnp
mov
mov
jp
mov
dec
aad
inc
push
sbb
xor
xor
jbe
clc
fadds
mov
jno
mov
push
addr16
std
mov
pop
data16
lahf
scas
test
mov
jb
add
cmp
out
loopne
pushf
outsl
popl
push
outsl
pop
push
sti
adc
andl
sbb
and
jne
jp
movsb
mov
jo
dec
scas
dec
stos
cwtl
addr16
mov
mov
ss
pop
jne
aad
lds
pop
push
rorb
xor
adcb
pop
jae,pn
mov
call
test
lret
rclb
popf
xchg
or
mov
pop
std
testl
in
sti
cld
mov
loope
push
rorl
roll
sbb
fistl
push
fdiv
cmpsl
xlat
cs
mov
mov
jl
push
outsl
icebp
idivl
adc
mov
flds
movsl
lahf
ds
mov
cltd
cmpsl
push
sub
out
das
movsl
outsl
icebp
rclb
cmp
jmp
cmp
push
lods
daa
out
cmpsl
push
adc
loope
addl
shlb
out
bound
ret
mov
cli
pop
xchg
pop
lret
cmpsl
shlb
mov
sar
pop
inc
mov
jg
scas
or
jmp
xchg
mov
roll
movsl
pusha
inc
pop
adc
leave
or
and
push
xchg
adc
push
sar
out
sub
addr16
fisubs
sub
imul
mov
dec
cli
inc
arpl
mov
test
stc
fistpll
pop
jp
movsb
ret
out
pop
mov
cmp
rclb
mov
clc
cmpsb
cmp
add
cmpsl
out
jns
mov
cmp
mov
aad
in
outsb
outsl
or
mov
jg
divb
aad
xor
imulb
sbb
fstpt
cltd
cmp
clc
sub
aad
xchg
icebp
stc
pushf
cmp
std
inc
mov
xlat
xchg
daa
xchg
sbb
test
fwait
in
mov
sub
or
jmp
lldt
daa
movsb
pushl
push
shl
and
sbb
lret
dec
cmp
pop
std
push
push
orl
jecxz
mov
aaa
cmc
std
enter
int3
cli
cmc
test
testl
pop
push
push
popa
scas
jo
or
popa
orl
loop
jbe
pop
mov
ret
jmp
out
jmp
or
push
daa
sbb
push
pop
jg
push
add
flds
aaa
cld
sbb
aas
stc
jnp
xchg
xchg
cmpsl
dec
add
jbe
push
inc
leave
int
pop
xor
in
negb
inc
adc
fwait
out
jl
xorb
sbbb
nop
or
sbb
adc
mov
and
out
out
and
cmpsl
fldt
pop
jg
or
rclb
hlt
aaa
fidivs
out
scas
push
fidivs
cs
pop
lahf
out
push
xchg
cld
mov
lret
pop
daa
mov
add
out
scas
js
in
mov
push
jp
addr16
daa
ja
xchg
lock
in
mov
sbb
cltd
ja
in
pop
ljmp
sbb
inc
in
adc
stos
idivb
mov
lcall
scas
gs
sbb
fstp
push
and
popa
insl
jmp
xchg
sub
pop
pop
fisttpl
mov
hlt
push
test
push
and
rolb
jge
sub
mov
xchg
popa
idivb
push
inc
xchg
clc
lds
sbb
call
sbb
pop
outsl
mov
hlt
in
push
mov
push
cs
cld
popf
jl
push
scas
stos
push
and
lds
out
inc
push
sub
pop
in
sub
out
out
lods
test
in
int3
xor
push
xchg
sahf
jnp
aad
or
rorb
daa
and
pusha
sub
ss
mov
mov
push
push
pusha
inc
mov
setnp
and
leave
stos
xchg
jecxz
push
dec
scas
or
stos
pop
filds
aad
addl
xlat
rorb
daa
scas
sub
lods
into
shrl
outsb
clc
inc
mov
add
mov
outsl
in
mov
cmp
xchg
jne
cmp
jbe
xlat
es
sbb
jg
jl
fdivrs
fwait
xlat
pop
dec
insl
pop
ja
pop
out
lcall
xchg
adc
mov
lahf
xchg
out
mov
sbb
hlt
xor
adc
lock
push
mov
aam
aas
inc
out
leave
dec
mov
jmp
xor
dec
cs
insb
push
repz
add
pusha
je
mov
jecxz
cmp
shrl
out
js
lcall
mov
sbb
rorl
jno
pop
ret
add
and
sti
test
lods
ret
int
es
das
xor
mov
lock
jmp
sti
sbb
xchg
add
mov
ds
push
into
outsb
sar
push
daa
mov
pop
fs
inc
add
notl
push
loop
cmpb
test
dec
jno
jmp
inc
lods
jbe
inc
lock
sbb
dec
shlb
push
dec
push
pop
aad
xchg
outsb
push
mov
push
mulb
mov
aad
add
js
cmp
pop
test
dec
pop
rorb
jecxz
fdivl
inc
cmpsl
pop
and
faddl
and
out
je
xchg
mov
inc
rcrb
outsb
sbb
lahf
push
icebp
lahf
jmp
mov
xor
inc
aad
dec
subb
fucom
push
mov
sbb
dec
dec
xchg
adc
insl
out
mov
sub
cmp
into
adc
xchg
dec
xchg
lahf
jmp
cmpsl
mov
pop
cmc
sub
xchg
add
ja
mov
push
push
fwait
jge
mov
stc
inc
imul
icebp
and
pusha
decb
cld
mov
data16
and
nop
mov
inc
cs
test
mov
jle
fwait
sahf
sarb
stc
clc
out
daa
fs
ja
jmp
inc
pop
icebp
dec
arpl
dec
and
mov
das
pusha
in
loopne
pop
stos
xchg
lods
mov
das
pop
clc
out
jnp
jb
pop
in
pop
and
iret
vmovddup
mov
arpl
les
repnz
shlb
jae
xor
cld
rclb
lds
addr16
add
scas
jmp
inc
mov
adc
cli
inc
fcmovu
jnp
movsl
in
mov
cmpsl
lods
inc
call
stos
sahf
cli
out
push
and
ja
jne
out
xchg
sarb
push
jge
lcall
jmp
push
adc
cmpsl
out
mull
sbb
cmp
mov
je
push
jo
rorb
add
psrlq
mov
xchg
cmp
out
jo
outsb
fcmovnbe
jl
subb
sbb
jbe
xlat
inc
jb
lock
xor
adc
jge
xchg
cmp
adc
jecxz
loope
inc
std
lods
xorb
push
xchg
adc
xor
pop
fisttps
in
sbb
or
sbb
add
push
lds
mov
pop
scas
addr16
adc
push
inc
cmpsl
test
stos
mov
inc
mov
xchg
push
aam
push
cmpb
jo
in
out
loope
out
mov
cld
pop
out
jle
into
movsb
mov
testl
out
cmp
test
sbb
push
mov
xlat
jecxz
jg
pop
inc
les
daa
ds
test
cmc
push
push
jno
stos
sahf
orl
daa
loope
xorb
adc
loope
inc
ss
or
xor
stos
mov
adc
rcr
hlt
nop
jcxz
pop
fwait
popf
mov
adc
mov
int3
lret
arpl
pop
cmpl
sahf
scas
xchg
aas
test
mov
add
mov
pop
add
push
sbb
cwtl
dec
xorl
cs
dec
stos
pop
dec
and
sub
push
xchg
push
pop
std
push
cmp
popa
mov
fcompl
je
or
insb
fbld
mov
push
addr16
fcmovu
rclb
cmp
cmp
lock
test
jmp
add
sbb
fiadds
sbb
movb
cmpsb
mov
pop
gs
test
inc
faddp
fiadds
notl
fnstsw
xor
mov
jmp
sbb
ja
outsb
cmp
jecxz
mov
mov
jge
mov
shlb
aas
scas
sbb
dec
test
fisubrl
scas
and
cli
pusha
js
mov
in
sahf
jbe
out
cwtl
negb
jb
dec
mov
or
jmp
mov
jg
jo
dec
xchg
je
or
stc
popf
pop
push
jae
aaa
rcr
orl
test
mov
out
scas
aas
lock
jg
push
fsubl
pop
ret
ret
jecxz
pop
mov
je
mov
fnsave
fistl
dec
insl
dec
ja
pop
push
pusha
cs
dec
pop
scas
shll
pop
out
sbb
xlat
repz
cmc
fnstenv
pop
orl
call
fcoms
std
test
sbb
pop
push
dec
lss
sarb
mov
jnp
push
jmp
and
insb
aam
jg
test
push
out
xchg
jno
add
test
push
mull
pop
cmp
pop
out
out
mov
ja
test
pop
push
ret
in
mov
loope
in
movsl
rorl
xchg
jbe
je
icebp
mov
dec
xchg
push
ss
inc
dec
adc
ret
fs
xlat
ja
sbb
inc
sbb
cmp
dec
mov
push
fisubrs
call
mov
xor
mov
addb
cmp
daa
hlt
outsl
jmp
fucomip
aam
cmp
cmp
jg
lea
outsl
stos
xchg
into
gs
data16
jecxz
cwtl
fsubs
and
pop
sbbl
dec
jns,pn
into
fwait
cmpsl
lea
test
and
in
ds
push
out
pop
add
out
or
imul
xchg
jno
ret
leave
adc
xchg
test
push
push
addl
jnp
jecxz
xchg
push
imul
xchg
repz
pop
push
mov
push
jae
iret
out
testl
xor
or
jge
je
gs
test
pusha
mov
add
pop
loope
cltd
and
fucomp
jbe,pt
jo
dec
add
xlat
xor
xchg
add
out
xchg
dec
mulb
loope
push
xchg
sub
adc
shrb
stos
pop
loopne
and
pop
ficoms
xchg
jbe
jg
out
rorb
push
outsl
rcl
movsl
push
in
add
xlat
add
aaa
das
dec
xor
and
add
push
dec
sarl
jp
ret
outsb
xchg
test
ss
cli
dec
pop
andb
mov
xlat
push
test
mov
mov
stos
xchg
mulps
sub
dec
adc
in
mov
sbb
jge
add
inc
imul
dec
dec
in
mov
push
arpl
test
jmp
mov
and
and
rcl
sbb
xchg
sbb
shrb
mov
pop
jecxz
repz
shrl
mov
in
call
lds
jb
or
cld
lahf
stc
cli
divb
jle
adc
incb
outsb
jmp
and
insl
mov
popf
loopne
insb
inc
js
mov
ret
pop
mov
lods
inc
repz
mov
out
faddl
mov
rorb
roll
pusha
or
sbb
orb
fcmovne
sub
jg
stos
mov
xchg
or
je
mov
fnstcw
mov
and
mov
cmp
lds
or
mov
int3
cmp
sahf
xlat
je
mov
push
cmpsl
in
pop
pop
test
lahf
sahf
out
pop
cmp
std
ss
in
ja
fisttps
cmp
jmp
add
aad
cltd
pop
les
pop
mov
ret
jb
stos
aam
adc
daa
inc
dec
adc
mov
ffreep
fsubr
adc
inc
shr
std
stos
pop
addr16
mov
jns
mov
xchg
and
in
test
imul
push
jmp
cmc
out
sbb
iret
lahf
add
icebp
negb
sbb
sahf
xor
outsb
jno
out
inc
arpl
push
cmpsl
fidivrs
sbb
jne
mov
aad
jb
cltd
std
sti
ja
mov
mov
mov
stos
in
sbb
add
call
inc
daa
jnp
shr
sahf
sbb
xchg
mov
jle
pop
popa
dec
popl
shr
jmp
mov
sbb
cli
movsl
jmp
insl
pop
and
mov
aas
pop
xchg
iret
jno
push
mov
movsl
pop
pop
cmpsl
jge
pop
and
aad
ljmp
fwait
mov
je
inc
mov
jg
mull
rcr
jmp
cmpsl
out
mov
push
repz
pop
icebp
fs
mov
mov
jo
rorl
add
inc
mov
xlat
rcll
or
add
test
inc
jbe
jg
jns
loopne
out
fnstenv
pop
test
mov
xchg
and
loope
lea
xchg
cmpsl
sahf
push
adc
or
mov
cmp
movsl
rolb
rcrb
cmpsb
fs
es
and
mov
fisttps
push
scas
adc
mov
in
inc
scas
sub
adc
adc
mov
out
into
sub
stos
sbb
jmp
les
xchg
shrb
xchg
outsl
jns
pop
das
loope
cmp
inc
sbb
jge
cmp
roll
subb
push
push
outsb
rcl
fbstp
lret
pop
scas
test
out
inc
xor
and
lock
xor
ja
mov
scas
filds
inc
shl
cs
or
mov
loop
outsl
sub
inc
sbb
adc
ljmp
push
scas
es
cmpsb
fs
ret
jmp
stc
insb
daa
clc
add
pop
push
push
stos
xchg
fildl
out
stc
jbe
add
dec
dec
icebp
cli
mov
jg
outsb
scas
adc
mov
jmp
push
je
mov
out
ret
sub
idivl
dec
out
add
push
sar
cmp
cmpsl
fwait
xchg
test
add
scas
lods
ret
das
fsub
cli
aad
add
bound
mov
lret
jmp
sti
add
pop
popf
fistl
mov
test
imul
add
adc
sbb
repz
dec
and
fs
jmp
nop
cmpl
xchg
ret
insb
push
jnp
add
sbbb
sbb
pop
mov
sub
sbb
lahf
add
jmp
out
and
add
jmp
xchg
pop
shlb
ljmp
ss
jecxz
mov
add
mov
aaa
addr16
clc
fwait
inc
test
cmp
jmp
add
aaa
das
jno
add
test
scas
jae
daa
jne
inc
adcl
push
fidivs
ret
lock
jle
sub
mov
ss
repz
pushf
push
test
popl
shlb
jg
or
mov
imul
outsl
xchg
loopne
aam
inc
popf
xor
lds
fstpt
mov
aaa
ret
pop
xchg
ss
das
imul
jo
mov
cmpsb
ja
mov
data16
leave
icebp
je
fcmovb
arpl
scas
mov
pop
inc
mov
inc
popa
mov
movsb
fbstp
stc
ss
ret
movsb
popa
cwtl
xlat
les
cmpsl
ret
dec
inc
dec
movsl
aam
push
or
andl
inc
jge
xlat
push
add
jmp
cld
ss
pushl
out
pop
ret
cmp
std
aas
cmc
mov
push
adc
lret
testb
rcl
xor
test
xchg
adc
mov
mov
xchg
xchg
inc
in
cmpsl
push
pusha
mov
test
movsl
les
lea
sti
add
fs
mov
cmpsb
daa
daa
imul
fists
shlb
jo
mov
mov
lea
andb
shr
pop
add
mov
out
in
ret
je
mov
arpl
pop
mov
sbb
addr16
into
ljmp
sub
stos
and
stos
lahf
pop
lahf
les
and
imul
mov
mov
or
addl
jmp
adc
cmpsl
sbb
in
mov
cmp
les
pusha
call
arpl
ljmp
dec
adc
adcl
add
std
cld
leave
stos
das
je
push
add
push
das
xlat
dec
mov
sub
call
mov
xor
aad
out
and
jns
mov
rolb
shlb
mov
ja
in
lret
sti
mov
push
cmp
mov
movsl
into
addr16
xchg
push
jmp
cs
out
sbb
clc
mov
addb
add
push
add
cmp
mov
mov
rcll
xchg
adc
push
addr16
rorl
out
repz
add
out
or
insb
mov
jecxz
sbb
out
outsl
mov
jge
jmp
daa
inc
aas
pop
mov
cmpsl
in
out
cmp
jmp
inc
sbb
fisttpl
test
inc
gs
and
rcrb
add
enter
insl
or
jmp
sbb
sahf
adc
pop
loop
rdtsc
dec
pop
cltd
mov
incb
test
mov
jmp
dec
cld
adc
mov
lods
faddl
stos
add
jbe
outsb
stos
mov
and
popa
aad
bound
xlat
andb
aad
dec
or
cmpsl
jo
dec
mov
pop
pop
movsl
pop
out
pop
cmpsl
ss
and
push
pusha
dec
out
pop
mov
aas
lahf
add
fdivl
mov
inc
lods
cmpsb
test
dec
pop
lds
jmp
pop
incl
cld
mov
xchg
inc
sbb
mov
sbb
push
jb
add
das
cmc
shlb
mov
sbb
adc
mov
adc
or
push
fistl
push
test
lea
imul
mov
pushf
push
cs
fst
push
mov
dec
lret
pop
sub
arpl
mov
mov
ds
xorl
jne
add
out
mov
incl
push
inc
sbb
or
push
pop
adcl
jge
test
push
mull
push
movsl
pop
stos
xor
ror
rcrl
adc
mov
divw
stc
int3
mov
les
jecxz
orb
pop
adc
fstp
sar
fldl
out
aad
adcl
dec
sub
sahf
pop
jp
scas
in
jg
xchg
xor
gs
addr16
xchg
sub
decb
fwait
in
leave
xchg
stos
subl
fs
xor
fadds
fs
cmpsb
xor
gs
pop
out
out
scas
sbb
jmp
aaa
cs
pop
pop
add
inc
sub
xchg
mov
sub
in
and
outsl
mov
cli
mov
idivl
lea
adc
cmc
inc
into
out
ret
xchg
out
int
sbb
or
test
mov
jae
and
mov
and
mov
dec
push
stos
adc
pop
addr16
std
mov
adc
pop
add
icebp
repz
pop
add
cmc
insb
xchg
daa
lds
mov
adc
jmp
mov
sbb
jne
cmp
cmp
add
lret
out
sub
test
loop
jae
ret
dec
dec
sbb
cmpsb
push
xchg
jbe
cld
jbe
dec
lahf
aam
mov
movsb
cmp
cmc
nop
mov
or
push
loop
fldl
idivl
subb
cmp
sarb
cmpsl
out
dec
push
push
gs
adc
jmp
fildl
pop
lods
cmp
lahf
jg
jbe
lock
mov
sub
stc
push
fisttpl
aaa
dec
cmp
aaa
call
push
adcb
push
mov
aad
jl
add
mov
lahf
test
mov
out
repz
aam
pop
add
jl
imul
cmp
sbb
dec
inc
xor
std
std
pop
jno
arpl
xor
out
mov
jmp
adc
mov
test
xor
nop
mov
mov
out
aas
cwtl
cmpl
lahf
mul
dec
jbe
inc
pop
jmp
gs
arpl
mov
addr16
sbb
jge,pn
jnp
adc
xor
xchg
mov
lods
dec
ja
outsb
addr16
test
and
aaa
inc
and
jo
test
mov
fs
mov
sub
inc
mov
xchg
sbb
mov
sub
movsl
rclb
mov
xor
out
loope
fs
jmp
or
xchg
fistps
stos
mov
and
testl
test
aam
mov
sarb
lcall
fcmovnu
mov
cmpb
incb
call
dec
dec
std
into
sti
xor
mov
jmp
xchg
jne
int3
stos
jge
mov
movsl
negb
sbb
push
rorl
loopne
mov
push
hlt
popf
xor
pop
or
push
pop
jae
push
mov
dec
shrb
sbb
stos
jb
mov
and
mov
fs
jecxz
iret
and
popaw
jg
mov
test
rclb
adc
cs
loope
sbb
orl
jnp
lret
mov
push
xchg
ret
inc
xchg
xor
mov
xchg
xchg
test
pop
mov
pop
xor
pop
or
hlt
fs
mov
dec
add
out
cmp
lea
stos
cmc
and
mov
hlt
mov
mov
out
mov
or
sub
aaa
jmp
push
xchg
and
in
ja
loope
cmp
loopne
out
cmp
addr16
fcomip
mov
filds
mov
add
xlat
and
add
loop
scas
stc
clc
mov
shlb
aaa
loope
lret
or
in
frstpm(287
pop
jg
or
pop
inc
cltd
xor
icebp
aad
sysenter
pop
pop
jmp
pop
push
pop
jge
mov
in
mov
repnz
cmp
addr16
loope
jne
push
push
test
addr16
fs
lds
xchg
inc
das
jns
pop
xchg
icebp
stos
xchg
adc
sbb
mov
mov
and
and
mov
outsb
push
insb
leave
cmpsl
mov
or
and
fstpt
cs
add
push
inc
subb
or
outsb
jno
push
jge
hlt
xchg
inc
lds
frstor
pop
ss
xchg
dec
sbb
fcoml
mov
cmp
mov
out
notb
push
aad
xorl
test
sbb
jle
ret
jae
es
rcrb
test
lret
insb
int3
out
jl
fcoml
add
inc
ds
push
popl
in
pop
mov
xorl
into
lea
dec
lds
rolb
xchg
mov
mov
fwait
cli
negb
xorl
mov
cmpsb
cs
inc
movsl
dec
outsl
loop
mov
sbb
dec
insl
daa
out
out
mov
xorl
into
mov
mov
ret
mov
cmpsl
xchg
and
jmp
in
mov
js
rcl
jno
sub
adc
or
fiaddl
into
incb
mov
and
inc
mov
add
sub
pushf
sub
into
sbb
call
mov
pop
ret
sbb
jle
fstp
aas
dec
in
out
cmpsb
aas
test
sbb
inc
and
test
sub
subl
loopne
adc
lods
mov
lea
popa
adc
adc
pop
lods
dec
leave
xor
cmp
xchg
xchg
cmpsl
mov
inc
imul
cmp
push
add
out
xchg
xchg
loop
in
jmp
jecxz
jnp
sbb
sbb
xor
xorl
xchg
aas
xchg
out
test
std
out
mov
or
sahf
cmp
push
push
dec
jns
jb
xchg
sub
out
mov
sbb
filds
pop
dec
add
mov
xchg
out
mov
sub
mov
sub
dec
mov
pop
pop
fnstsw
xor
add
inc
scas
out
stc
fs
cld
sub
xchg
movl
int3
int
jns
test
sbb
push
or
addr16
orl
and
in
out
and
mull
pop
call
imul
add
lahf
dec
add
out
mov
adc
jp
imul
call
pop
mov
inc
xchg
jne
sbb
in
jg
iret
fistl
push
shrb
jae
pop
insl
sbb
add
pop
test
ss
insb
push
sub
sub
sub
test
aaa
test
lret
add
cmpsl
cmpsb
clc
aaa
mov
rclb
xlat
mov
xchg
jmp
xchg
push
fsubrs
loop
out
test
js
lods
push
movsb
push
cmp
outsl
inc
mov
in
ja
out
mov
iret
mov
push
call
mov
outsl
insl
dec
xorb
movsl
test
dec
fs
std
gs
xor
out
test
ja
mov
inc
push
push
roll
jne
aaa
sub
lods
jno
cmp
lcall
inc
in
pop
out
lcall
sti
cmp
aam
xchg
mov
fildl
sbb
inc
mov
and
push
jbe
pusha
xchg
fsubrl
push
adc
aad
inc
xchg
aad
mov
test
mov
arpl
xor
mov
testl
xor
loope
jp
out
neg
stos
push
jae
jl,pn
aad
imul
add
notl
jbe
cmp
roll
jle
sub
jp
scas
test
xchg
in
xchg
insb
ds
imul
fnsave
jmp
out
xchg
aam
lahf
ja
out
and
scas
data16
jecxz
fsts
nop
pusha
jno
push
jns
fsubs
inc
and
popf
testl
xor
test
mov
cmc
repnz
inc
test
add
and
mov
xchg
out
pop
jg
movsl
mov
scas
mov
icebp
pop
dec
in
adc
add
push
repnz
xlat
shl
fs
in
pop
jnp
addr16
jg
outsl
cmpsb
mov
int3
mov
outsl
pop
inc
pop
lods
jo
jbe
cmpsl
and
pop
or
mov
sbb
mov
xchg
clc
add
adc
shrb
mov
cmp
add
dec
shlb
adc
ret
inc
cmpsl
cmp
or
std
popa
xchg
bound
test
and
sbb
and
pop
mov
dec
sbb
mov
test
xor
mov
repnz
das
inc
xlat
cmp
mov
jns
adc
daa
les
fists
mov
lods
add
inc
and
ss
mov
clc
sti
xchg
sti
sbb
push
mov
mov
push
ja
add
inc
inc
or
mov
rcl
pop
into
jmp
dec
jbe
cmp
iret
fildll
add
out
inc
sbb
inc
daa
push
and
add
into
mov
aam
fs
jmp
or
and
dec
outsb
mov
leave
jb
push
adc
fsubl
js
jmp
xchg
aaa
xchg
test
enter
mov
movsl
stc
xchg
and
out
fwait
adc
mov
add
jge
and
aam
ficoms
mov
ja
mov
inc
imul
popf
sbb
inc
in
xchg
das
mov
sbb
in
out
pop
cmp
mov
pushf
mov
popf
addr16
adc
mov
sahf
test
int3
sbb
xchg
ja
jmp
fisubrl
mov
ja
data16
lcall
arpl
test
push
jno
mov
inc
lods
test
sbb
sbb
pop
cmpsl
addr16
pop
add
fwait
inc
cs
lock
outsb
adc
pop
xor
and
aaa
pop
repz
push
mov
ljmp
iret
repnz
push
dec
jbe
sbb
out
or
xchg
cmpl
fstpt
ljmp
rcrl
out
jae
jg
adc
add
pop
mov
pop
dec
and
aaa
es
push
adc
xchg
inc
mov
and
sub
stos
mov
sahf
jnp
pop
mov
cmpsl
leave
incb
cmp
lcall
sbb
fs
jp
test
lds
cmp
mov
jle
les
test
lds
roll
push
xlat
out
insl
mov
fucomip
mov
fstpt
repz
aaa
and
xor
add
sub
std
mov
sbb
daa
in
and
loope
mov
mov
xchg
push
push
out
sti
hlt
jle
adc
mov
inc
pop
mov
xor
mov
inc
into
movsl
and
push
clc
sbb
pop
pop
add
test
sbb
add
loop
scas
arpl
pop
push
sub
pop
js
adc
adc
out
add
pop
addr16
fs
adc
jmp
dec
inc
test
xchg
mov
adcl
push
ret
cmp
lahf
push
fisubrs
rcl
adc
dec
cmpsb
std
jbe
inc
lahf
add
fsubl
ljmp
popf
cmp
pop
addr16
mov
xchg
jp
jg
xor
fisubs
imull
jnp
je
test
cmpb
ret
outsl
sub
arpl
or
mov
sbb
inc
mov
addb
mov
push
jp
mov
mov
in
adc
cmp
loope
es
outsl
pop
shlb
mov
jecxz
movsl
cmpsl
push
das
cmp
bound
push
adc
dec
mov
aam
mov
cli
addr16
sahf
out
ret
xchg
xor
aaa
cmc
inc
mov
mov
jl
aad
rcrl
ss
aas
push
sbbb
and
inc
fucom
les
mov
mov
mov
loop
mov
lods
mov
push
aad
pusha
sahf
mov
cmc
push
je
fildl
mov
and
inc
jns
lahf
daa
addr16
aaa
mov
jb
aas
lret
nop
pop
jns
aad
add
fnclex
decb
xchg
addl
inc
enter
mov
mov
loop
mov
jmp
and
outsl
push
mov
ja
inc
jecxz
push
andb
les
adc
cltd
xchg
mov
loop
bound
push
and
ljmp
loop
push
or
fildl
cs
insl
aad
cmpsb
xchg
ficoml
xchg
loop
mov
aas
sub
push
aad
arpl
loop
push
ss
cmc
inc
andl
jns
sbb
jecxz
xor
into
cmp
ffree
jbe
test
loope
into
inc
xlat
outsb
or
daa
mov
lahf
cmp
rorb
inc
xchg
jecxz
jno
mov
test
sbb
cmpsl
pop
inc
or
cltd
movl
clc
cmc
movsl
ret
sbb
lods
dec
ret
cmp
jb
and
cmp
dec
mov
rorl
aaa
sbb
data16
sub
sub
push
cmovge
clc
mov
scas
loope
adc
fildl
adc
lock
jp
adc
xchg
cmpl
inc
addr16
shll
js
dec
inc
pop
insl
gs
push
test
mov
jmp
notb
scas
gs
add
mov
test
pop
in
jae
add
mov
jecxz
addr16
push
pop
fstpl
lea
mulb
ds
jecxz
push
xor
xchg
test
lahf
scas
addr16
dec
adc
sahf
pop
jno
xor
mov
dec
aaa
shrb
iret
nop
out
test
lcall
push
movsl
lds
xor
js
or
icebp
loop
pop
push
lea
movsl
data16
in
inc
clc
add
jmp
add
rorl
jmp
jmp
mov
je
inc
mov
mov
jns
jp
test
testl
and
and
mov
lcall
out
jae
cmp
cmc
das
inc
ficoml
shl
fs
and
push
mov
add
inc
mov
lret
cmp
inc
pminub
inc
in
cmp
mov
shl
addl
mov
push
int3
cmpsl
add
daa
mov
add
ljmp
cli
ss
outsl
inc
aad
outsb
jno
out
mov
rcrb
subl
xor
cmp
pop
out
scas
pop
fs
cmp
xchg
mov
dec
lds
scas
jbe
inc
test
loop
adc
shlb
dec
push
xor
sub
cwtl
xsha256
cmpsb
xlat
cmc
mov
mov
dec
push
int
jo
dec
cmp
xchg
push
sbb
sub
pop
popa
int
fld
xchg
cli
sti
sbb
push
jne
pop
cmp
push
dec
pop
addr16
adc
pusha
cmp
rcll
push
jmp
fildl
in
pop
into
push
dec
push
inc
in
shl
stos
inc
cmp
jg
inc
xchg
daa
push
mov
imul
push
ja
cld
leave
rcll
imul
sbb
test
jb,pn
mov
inc
push
insl
sar
push
in
in
addr16
xchg
out
mov
xchg
fcomps
sub
gs
ja
dec
js
outsb
testl
mov
pop
mov
loop
xlat
sbb
and
xor
mov
jbe
jmp
or
mov
sbb
fcmove
mov
test
cmc
or
xchg
es
mov
aas
mov
aad
dec
cmpsb
and
pop
lea
lock
and
roll
int
fs
and
adc
inc
das
fs
ds
mov
cli
mov
inc
test
adc
push
pusha
sbb
ljmp
ret
mov
hlt
pop
push
into
sbb
mov
sar
cs
pop
cmpsl
scas
test
mov
ds
or
outsl
out
dec
mov
fst
loope
scas
and
stos
push
push
sbb
push
loop
test
and
jmp
lds
or
insl
iret
push
dec
fwait
es
jecxz
fidivs
jecxz
aad
shrl
sbb
or
and
insl
mov
cmp
es
sbb
add
dec
jmp
xor
pop
add
cmp
scas
movb
dec
push
mov
cmpsl
sub
cltd
out
xor
jg
aad
stos
lret
jae
jl
adc
push
ljmp
jle
rclb
rol
rolb
mov
sbb
add
jge
stc
inc
pop
aas
mov
pushf
repnz
imul
mov
test
sbb
mov
sub
inc
lahf
inc
mov
ja
es
cmpsl
dec
jecxz
aaa
imul
dec
addr16
scas
fbld
push
stc
inc
mov
call
sub
dec
inc
inc
sbb
xchg
fwait
inc
movsl
nop
dec
stos
xchg
stos
jecxz
aaa
push
out
pop
add
cmc
xchg
push
nop
shlb
in
jp
adc
or
ja
jmp
out
jb
dec
test
lods
out
cmp
cmpb
rcr
cmp
divb
cltd
lods
sbb
loope
mov
out
out
hlt
xchg
daa
or
mov
mov
sbb
cmpsl
inc
add
jno
in
ret
dec
int
icebp
nop
test
pop
in
stos
in
adc
clc
cld
ljmpw
movsb
pop
aad
aam
leave
je
jge
arpl
mov
fistl
insl
ret
mov
add
inc
dec
or
fbld
popa
xchg
dec
mov
cmpsb
push
out
xchg
por
mov
xchg
mov
add
adc
shlb
outsb
je
sbb
add
sti
out
in
insb
pushf
add
or
or
or
push
pop
out
or
push
dec
push
add
jns
fs
test
add
leave
shlb
fidivs
aas
ret
inc
scas
cmpsl
add
loop
push
or
and
and
inc
pop
cs
out
mov
lahf
ss
fistps
add
jmp
addr16
xor
xor
sbb
addr16
repz
push
jno
int3
inc
movsb
das
std
sub
bts
push
pop
rolb
xchg
adc
mov
stos
std
iret
out
jne
jecxz
inc
in
push
es
out
sub
jns
fnsave
sbb
push
sahf
sahf
cmp
inc
loop
jnp
out
mov
and
or
push
jge
rorb
sub
out
dec
in
xchg
mov
xchg
adc
add
cmc
push
jns
inc
out
movsl
ja
inc
adc
ja
scas
outsb
dec
xchg
decl
test
xor
in
ds
or
push
push
pusha
loopne
xchg
mov
aad
test
jne
gs
fsubrl
pop
add
sub
cltd
div
cmc
cmpsb
stos
fisubl
cmc
addr16
arpl
sarb
lea
sbbb
mov
int
inc
push
pop
fidivrs
pop
push
lret
inc
push
ja
sub
decb
dec
xor
mov
ljmp
mov
inc
jno
mov
insb
ljmp
or
mov
setne
loop
les
add
jo
jge
jb
movl
mov
jmp
addr16
dec
je
or
dec
int
and
mov
inc
xchg
mov
test
push
std
mov
xchg
out
addr16
lods
movl
cmpsl
leave
notb
dec
xchg
sahf
lcall
mov
decl
xchg
add
sub
pop
imul
or
push
les
test
mov
mov
imul
shrl
xor
addb
shll
mov
add
mov
pop
fwait
and
outsl
imul
push
loop
data16
orb
xchg
rcrl
dec
test
xchg
or
out
lahf
mov
pop
cmp
repz
fisubs
cmpsb
call
xchg
lea
push
cli
aaa
mov
shufps
rorb
ffreep
negl
push
jbe
jecxz
fbld
aad
shll
mov
cmpsl
pop
xchg
dec
ficomps
add
adc
mov
mov
daa
int
xchg
mov
insl
and
add
inc
sarb
fadds
movsb
adc
orl
cmpsb
mov
cwtl
mov
scas
into
xorb
push
and
sti
add
mov
popa
addr16
fst
shlb
mov
pop
push
xor
xchg
scas
insb
test
insl
push
fcoms
mov
movb
addr16
cmp
loopne
jecxz
jne
add
test
push
mov
mov
loopnew
inc
icebp
sbb
into
push
movsb
cmpsl
ret
xchg
je
cli
add
jl
mov
lock
aas
jmp
push
mov
cmp
leave
je
fldl
fisubl
cmpsl
dec
std
xor
pop
cmp
ss
into
push
cmc
add
xchg
movmskps
mov
inc
push
dec
addr16
imul
and
arpl
aas
iret
icebp
addr16
test
sar
mov
mov
jle
xchg
movsl
insb
decl
aad
cmp
jno
add
fldenv
test
inc
out
fcomi
adc
iret
jecxz
bound
test
and
scas
push
lahf
pop
mov
inc
int
aaa
fs
data16
xor
mov
jne
add
sbb
xchg
xor
xlat
xor
repnz
in
je
push
fwait
aad
test
int
cltd
int
in
mov
aaa
cmp
mov
call
inc
mov
jae
mov
loope
ret
mov
inc
into
das
jg
out
jg
mov
jge
test
xor
xchg
cmpsl
mov
pop
sub
sub
mov
sbb
mov
adc
cmpsl
xchg
sub
and
xor
mov
idivb
add
xor
je
pop
push
rolb
mov
repnz
fildll
adcl
lret
icebp
cmpsl
je
inc
push
ficoms
sahf
div
mov
add
rol
inc
out
inc
inc
hlt
add
outsb
cmp
push
out
cwtl
mov
push
out
xorl
mov
pop
xchg
push
ja
subl
push
xorl
dec
mov
fwait
lods
sbb
mov
loopne
daa
push
jmp
pop
pop
push
loop
jmp
inc
push
loop
pop
mov
in
push
idivl
push
dec
mov
or
sti
mov
and
xchg
mov
fcoms
nop
aam
ss
icebp
flds
sub
testl
roll
stc
pop
inc
dec
push
jns
in
incl
xlat
adc
fnsave
add
bound
pop
in
mov
jecxz
and
inc
rolb
icebp
ret
out
cmc
mov
daa
repnz
pop
mov
divl
inc
mov
add
ja
mov
scas
pop
sbb
sarl
scas
jg
js
les
insb
insb
icebp
adc
jno
add
subl
jns
dec
push
jno
rclb
cmc
stos
jbe
std
in
add
mov
ret
add
mov
mov
ja
hlt
dec
subb
push
inc
and
xor
insl
les
movsb
push
ljmp
mov
mov
divb
shlb
fnstenv
subb
cmp
inc
idivb
mov
and
rcrb
pop
lds
pop
and
jmp
sti
mov
imul
test
rorb
add
movl
sti
cmpsl
lea
sbb
jecxz
mov
out
fwait
out
push
icebp
push
out
scas
xor
loope
movsb
inc
test
mov
js
xchg
or
pusha
fs
aam
in
cmc
hlt
movsb
in
push
inc
rcr
cmp
fs
jo
das
cmp
lahf
xor
inc
pop
or
dec
fs
fstp
lahf
out
das
sbb
shll
cs
pop
or
sub
cmp
push
push
imul
imul
jae
and
popa
add
bound
je
sub
sbb
bound
test
xchg
test
gs
jp
mov
out
bound
test
fwait
inc
jne
pop
xchg
imull
or
iret
mov
sbb
jl
jl
mov
addb
and
jne
dec
inc
sub
sbb
and
mov
xchg
cmpb
in
fcom
nop
xchg
sub
iret
mov
adc
insl
adc
les
jg
fldt
jnp
out
loopne
aad
jnp
insl
xchg
add
mov
in
les
js
mov
or
jne
jle
dec
inc
jns
ret
into
pop
jmp
std
jmp
add
das
in
jecxz
xlat
and
and
cli
andb
lahf
lods
ret
mull
add
movhps
push
or
jl
aas
out
and
inc
sti
xor
lods
inc
movb
or
pop
cmp
push
sbb
adc
adc
ror
cmpb
mov
mov
mov
mov
mov
and
jmp
or
pusha
mov
inc
js
push
icebp
mov
sbb
adc
xor
mov
rorb
push
out
mov
xor
jle
pop
movsl
repz
pop
insb
pop
sub
repnz
mov
jp
xchg
movsl
mul
dec
add
and
mov
push
aas
test
fwait
mov
ljmp
rcr
in
cmp
fildll
adc
push
sub
mov
jbe
cmpsl
or
call
add
and
pop
call
in
arpl
scas
pop
adc
aaa
stc
sub
push
or
shrb
imull
jns
ds
cs
fisubrs
xor
xchg
addr16
jl
enter
sub
adc
ljmp
test
movsl
out
out
pop
xor
stc
out
add
mov
bound
std
inc
xor
dec
and
mov
xchg
cmpsl
lea
pop
mov
adc
mov
add
pop
pop
mov
out
push
arpl
or
cmpsl
cs
pop
add
jge
popf
pop
adc
je
insb
cld
das
sbb
out
xchg
add
aas
inc
xchg
in
xchg
sub
mov
int3
std
aad
in
xor
mov
jecxz
dec
mov
xlat
outsl
in
stc
aas
addb
and
in
cli
pop
adc
jne
loop
xchg
sub
inc
stc
clc
out
lds
xlat
push
mov
insl
jge
push
pop
lds
and
test
adc
loop
xor
inc
adc
in
into
scas
mov
cmp
ret
jmp
out
adc
enter
dec
test
xchg
xchg
mov
push
stos
pop
outsb
pusha
outsl
out
clc
gs
outsl
mov
jg
jge
lds
mov
loopne
lahf
add
push
pop
lods
pushf
cmpsb
mov
fnstsw
or
pop
sbb
or
mov
shlb
repz
test
scas
dec
jmp
addb
stc
cmp
mov
lods
xchg
shr
scas
xchg
mov
test
push
add
bound
cpuid
pop
mov
les
addl
insb
aas
or
inc
adc
xor
in
and
enter
cmp
xor
into
pop
cmp
jg
shlb
data16
lods
insb
jg
sub
xor
inc
mov
inc
mov
lahf
daa
mov
rolb
es
addr16
xor
cmp
adc
mov
scas
mov
mov
xchg
xor
rcrl
and
bound
and
in
mov
in
out
xchg
lea
sbb
scas
out
mov
dec
sarb
cs
fwait
loop
inc
cmc
inc
or
dec
fs
outsb
sbb
mov
pop
lahf
int3
in
mov
into
test
fistpll
int
dec
in
stos
in
cmp
mov
popf
vmread
xchg
fs
push
adc
jae
jno
lahf
pop
js
push
push
jmp
scas
fldt
popl
insl
push
pusha
mov
in
mov
inc
sarl
test
mov
daa
pop
mov
mov
sarl
pop
mov
movsl
jb
jno
xlat
xor
mov
inc
cmp
cmp
cwtl
aaa
xchg
ja
xchg
ljmp
add
sarb
aad
jne
jge
dec
cmpsl
xor
fsub
repz
out
cmc
scas
sbb
icebp
icebp
in
dec
or
or
xchg
imul
fisttps
lahf
pop
fwait
xchg
add
in
sub
dec
fwait
insl
and
jbe
dec
cmpsb
inc
inc
mov
mov
data16
pop
adcb
ljmp
mov
xchg
in
cmp
pop
push
mov
cwtl
jmp
repnz
fisubrs
neg
mov
sarl
fs
stc
sbb
loope
loope
pop
cmp
cmc
xchg
orb
fs
mov
mov
vcvtpd2psy
jle
cmc
jmp
push
and
das
add
lods
mov
je
xchg
jb
jp
mov
jne
aaa
sahf
cmpsl
divl
mov
clc
sub
imul
sarl
out
fists
jecxz
jmp
dec
stos
add
outsb
jl
push
sub
ja
in
add
mov
cmp
xor
jmp
dec
fwait
push
xlat
xchg
ret
mov
arpl
rorl
enter
sbb
ss
sbb
jmp
mov
xchg
xchg
lds
xchg
dec
movl
lds
mov
pop
sbb
xorb
std
inc
out
add
add
pop
jge
dec
jle
nop
dec
add
leave
stos
jno
mul
cmpsl
filds
rcl
or
aam
cmpsl
ja
out
and
in
shll
shl
mov
in
xor
add
sub
ret
xchg
lcall
inc
out
sahf
xor
dec
jno
test
and
mov
insl
mov
mov
shll
mov
fcmovnbe
jmp
scas
lea
mov
scas
and
in
sub
mov
mov
pop
and
lods
cmp
shrb
lods
jle
push
in
push
jle
jg
or
lds
cmpsb
gs
outsl
fwait
movsl
inc
jo
jecxz
scas
fsubp
movl
pop
js
sub
lret
test
xlat
xchg
inc
sbb
icebp
mov
push
add
aam
mov
xchg
sub
or
sub
mov
ja
add
aad
inc
cmpsl
mov
inc
and
add
movsl
adc
jmp
cmpsb
mov
adc
test
fdivrp
xchg
push
lds
popf
xor
xchg
xor
cmpsl
sbb
in
mov
cld
fs
lret
mov
push
or
cmc
testb
dec
sub
in
aaa
fwait
ss
test
mov
lods
xchg
cmpsb
and
push
jne
mov
inc
xor
stos
sarl
pop
mov
fcomip
aas
mov
pop
mov
jg
ja
xlat
xor
bound
dec
push
popa
nop
xor
dec
xchg
push
ror
in
cmpsl
push
push
inc
nop
sub
lods
xlat
sub
fidivrs
sub
sahf
nop
inc
xchg
xor
hlt
rcll
ja
inc
hlt
xchg
jecxz
popl
bound
in
xchg
jno
and
and
int
cmpl
pop
hlt
jo
jmp
test
les
sarl
add
test
dec
xor
test
test
dec
cmp
stos
inc
or
lcall
cs
jno
in
inc
add
pop
loopne
mov
in
ljmp
daa
add
test
addr16
mov
mov
mov
fwait
lret
into
dec
in
mov
push
test
adc
inc
add
cwtl
cmp
sahf
adc
sbb
mov
insb
jns
fnstsw
sahf
sti
sbb
enter
scas
scas
test
cmp
jmp
add
test
jl
ja
push
sti
stos
jmp
sti
jne
ja
and
scas
es
xor
testl
sti
jne
mov
daa
push
daa
xor
aaa
ficomps
lds
jle
mov
out
cld
out
out
ds
add
inc
aam
in
ljmp
push
jnp
sahf
data16
ret
jne
rclb
jno
pop
mov
lods
xor
adc
jl
lret
adc
mov
jmp
orb
xchg
loop
xchg
pop
fstps
or
test
out
ja
jb
mov
jmp
cmp
lahf
and
loop
cmpsl
jno
mov
es
mov
fcompl
sti
test
outsl
jmp
mov
sbb
mov
clc
mov
sahf
inc
add
pop
fwait
std
push
pop
xor
cmc
jne
xor
jae
cmc
jle
iret
aaa
xor
fs
adc
movsl
mov
xor
push
or
mov
std
xchg
mov
je
dec
mov
test
ret
pop
jle
dec
xor
mov
shlb
mov
mov
cmp
jo
sahf
roll
sbb
xchg
icebp
adc
js
mov
jns
scas
lds
xchg
rcrl
jg
xchg
jae
inc
pop
jg
push
out
dec
negl
fbstp
cmc
aam
xlat
pop
sub
mov
adc
and
rorb
sub
or
mov
pop
out
outsl
leave
scas
shr
rclb
out
add
add
stos
mov
ds
insl
stc
into
cmp
ret
shll
mov
cmc
jno
jp
inc
je
xlat
rcl
xchg
xlat
ret
movsl
inc
fisttpl
stos
iret
loopne
and
aas
popf
addr16
jb
scas
mov
cmp
cmp
mov
cs
mov
push
mov
mov
jge
mov
push
mov
fnstcw
cld
xchg
add
mov
xor
xor
push
dec
test
testl
adc
dec
bound
imul
dec
fsts
cmp
cmp
icebp
mov
icebp
xchg
inc
movsb
inc
push
sub
or
and
test
inc
scas
pop
add
pusha
aas
faddl
xor
imul
jg
std
mov
xor
push
mov
pop
push
mov
mov
shrl
inc
fildll
pop
test
daa
nop
loope
sti
xlat
int
ds
jge
int
in
mov
ret
add
jbe
adc
shlb
push
pop
cmp
lods
das
push
in
push
scas
sub
idiv
mov
in
mov
lahf
xchg
fs
sub
pusha
ret
mov
ds
cmp
cmc
fwait
add
mull
inc
sti
fwait
out
ret
mov
shrb
jg
xchg
test
adc
dec
iret
mov
ljmp
dec
add
fistl
xchg
cs
jecxz
cmpsb
pop
xchg
and
adc
xlat
in
aad
dec
loop
insb
xchg
lds
neg
xchg
dec
in
pop
stc
pop
repz
mov
jmp
push
rolb
orb
adc
push
or
adcb
cmp
ficoml
sbb
jmp
daa
adc
scas
lahf
mov
cmp
jle
mov
into
push
insb
outsl
mov
popw
subb
sbbb
jnp
push
ret
icebp
pop
std
jns
ret
push
xchg
negl
lods
mov
cmp
out
fcmovbe
loopne
shrl
cmc
jno
push
int
repz
cmpsl
cs
jmp
and
inc
push
ja
add
rol
idiv
jne
xchg
test
insb
fdivrl
jmp
orb
jg
ss
mov
add
loope
out
jmp
cmc
mov
or
scas
in
push
into
cmpsb
aas
insb
adc
xlat
inc
aam
push
add
loop
int
in
stos
ret
in
and
out
pushf
scas
mov
lods
xchg
aam
pop
loope
jae
lods
popl
mov
mov
das
daa
sti
mov
add
pop
stos
adc
mov
ret
mov
repz
xchg
iret
fisttps
xor
test
inc
inc
mov
and
sub
and
stos
mov
or
popa
shlb
xchg
pop
jecxz
aaa
fwait
pop
mov
iret
add
loope
lret
cmpsb
mov
fcomi
add
clc
xor
jbe
xlat
inc
fbld
fdivr
and
pushf
fnstcw
outsb
fs
mov
iret
ljmp
inc
aam
rorb
and
jne
mov
pop
jge
pop
add
fdiv
lds
jo
jecxz
sub
mov
iret
sbb
fwait
or
adc
mov
add
mov
rolb
in
pop
mul
inc
pinsrw
mov
inc
push
mov
aad
mov
les
adc
dec
sbb
mov
dec
inc
clc
mov
lds
add
addr16
adc
xchg
xchg
aad
mov
addr16
loope
shr
or
orl
mov
cmpsb
pop
leave
jge
jmp
xchg
aas
notb
mov
mov
ja
cli
leave
push
icebp
mov
outsl
loope
xlat
inc
shr
pop
mov
insb
cmp
out
pop
out
aam
xrelease
nop
icebp
sub
mov
lea
inc
js
pop
loopnew
notb
cwtl
push
push
dec
rcl
mov
aaa
sbb
mov
mov
cli
popa
and
stos
push
xchg
add
loop
ficompl
or
inc
pop
push
jmp
enter
out
jmp
lds
sbb
push
cltd
pop
cmc
testb
mov
cmp
ret
jae
pop
rorb
fildl
dec
inc
pop
pop
imul
jbe
sar
test
add
sbb
mov
movsl
fld
and
ret
es
out
mov
ja
push
cmpb
mov
xor
movsb
add
or
fmuls
add
dec
testl
daa
enter
xchg
jp
sahf
ret
loope
cli
sarb
mov
shl
pop
int3
insl
push
xor
sub
adc
std
xchg
sti
in
inc
ljmp
fistps
jns
out
and
andl
adc
xchg
add
inc
mov
bound
or
jb
xchg
add
inc
in
js
or
xor
xchg
sbb
push
mov
cmpsl
mov
push
jg
loop
push
sahf
aaa
int
sub
push
pop
adc
leave
pop
mov
pop
mov
ja
add
push
fs
repnz
dec
xchg
les
push
negl
es
out
mov
repnz
mov
or
bound
mov
ret
inc
gs
iret
mov
and
aas
fs
mov
jle
jge
and
outsl
ret
test
mov
cmp
mov
shll
pop
out
bound
xor
insl
push
test
jg
imul
ret
push
mov
mov
rcrb
cmpsl
jnp,pn
mov
test
push
cmpsl
fs
lahf
push
cmp
shll
cmp
test
fnstcw
pop
jo
icebp
mov
andb
aaa
fs
add
or
mov
add
mov
xor
test
xor
jg
and
out
mov
imul
mov
push
dec
mov
lea
fstp
into
adc
xchg
add
and
cmp
out
loope
and
mov
or
daa
in
fs
ja
xor
push
adc
arpl
lahf
add
jmp
std
shlb
and
sbb
inc
ret
inc
test
mov
push
imull
mov
add
jecxz
sbb
push
sar
sar
xchg
xchg
shl
mov
sbb
cwtl
lret
xlat
and
test
addl
mov
out
inc
jnp
sub
mov
cmpsl
lods
ja
xor
sub
dec
aam
jmp
mov
mov
dec
mov
push
jne
mov
out
jbe
xchg
mov
inc
std
test
cs
fidivrl
mov
and
or
out
jge
testb
adcl
leave
lea
andl
loope
addr16
rcrb
shl
mov
sbb
jecxz
xor
fmul
daa
cmp
jno
inc
mov
inc
mov
lret
dec
xor
xlat
iret
cmp
in
test
rcrb
jmp
xchg
sarb
rorb
outsl
stc
lcall
imul
ret
inc
or
sbb
mov
data16
sbb
and
out
loopne
scas
mov
fidivrl
cmp
daa
iret
jne
or
cmc
stos
pop
push
inc
lea
sub
sbb
push
and
dec
aad
mov
sbb
dec
decb
push
test
add
mov
mov
aaa
lahf
in
xchg
out
mov
aam
lods
es
leave
ficomps
mov
scas
mov
cltd
ror
popf
sub
dec
cld
es
lret
ret
push
add
stos
sbb
loopne
push
mov
add
fnsave
jne
pop
xchg
adc
mov
testb
les
lds
nop
jle
aaa
imul
loope,pt
ljmp
add
jb
ja,pt
sbb
mov
fidivs
push
inc
lahf
mov
inc
and
inc
scas
daa
push
fcoml
dec
jnp
invd
movsb
push
add
addr16
xchg
outsl
xchg
mov
cmc
insl
mov
mov
mov
punpcklbw
dec
cmpb
push
cli
sbb
pop
stc
shl
insl
out
pop
inc
sub
push
loop
sub
mov
dec
and
in
xor
and
mov
cs
rorl
popl
data16
rcll
push
mov
std
vmovaps
int
test
loopne
test
orl
adc
loope
and
push
fists
lahf
push
jp
sub
mov
std
mov
das
add
insl
mov
mov
or
cmp
sub
cmpb
jle
mov
pop
ffreep
dec
test
es
pop
lock
lea
ret
cmp
sbb
xchg
xchg
pop
shrl
add
jae
ja
sbb
xor
mov
push
cmp
scas
mov
or
xor
cmp
lds
xchg
sbb
add
repz
in
test
mov
popa
and
pop
push
scas
imul
add
cs
mov
hlt
pop
pushl
jo
inc
adc
jmp
jecxz
push
and
push
jo
or
fsubl
jg
shrb
mov
in
das
in
pop
pop
mov
mov
fists
jo
jmp
faddp
es
lds
jno
mov
push
repz
repz
dec
out
xchg
imul
out
cmp
psubw
sbb
repnz
mov
or
push
sbbb
add
repz
ret
es
xlat
push
xchg
pusha
inc
ja
adc
dec
push
push
addr16
cmpsl
fnstenv
xchg
xchg
lds
std
or
mov
cltd
mov
data16
push
xbegin
cmc
minps
std
push
xor
gs
mov
add
fs
cwtl
push
stc
pop
aad
xchg
inc
and
and
shrb
negb
xor
xchg
loope
lahf
mov
lods
ja
ret
sarb
add
aam
orl
cmp
mov
aas
jl
cmp
into
mov
stos
test
and
xchg
pcmpgtb
or
push
imul
jnp
inc
bound
sub
insl
aas
sub
pop
xlat
ja
fs
divl
mov
cwtl
mov
add
inc
mov
cmp
loopne
or
xchg
arpl
nop
xchg
das
out
add
stos
in
xlat
arpl
mov
jo
sub
lods
sbb
mov
mov
fsubrl
sub
jecxz
out
mov
dec
and
push
mov
dec
js
loope
into
cmp
cmp
pop
push
aad
in
push
dec
sti
cld
dec
fstsw
mov
mov
mov
jg
stos
shrl
insb
push
xlat
ja
mov
jae
add
fiadds
mov
test
out
lds
mov
jbe
cmpsl
sub
jb
loopne
xlat
add
pusha
rcr
push
mov
fisttps
xor
pop
out
sub
cld
insb
loop
ja
xor
cmp
jg
sbb
test
jmp
xchg
or
fcoml
js
mov
xorl
xchg
push
inc
cmpsb
cmpsl
mull
fwait
aad
in
and
or
push
ret
pop
subb
aad
stos
mulb
mov
lret
dec
dec
loop
mov
or
inc
sbb
inc
popf
jmp
add
js
fldt
and
insb
mov
or
sub
lods
rcrl
mov
mov
sbb
mov
jmp
es
xor
inc
add
js
pushl
mov
loope
ss
jb
mov
test
xchg
pop
addb
scas
and
add
push
ljmp
jo,pt
rep
mov
jbe
iret
jmp
aam
mov
mov
mov
cmp
in
inc
out
jle
mov
ror
adc
mov
mov
sub
and
call
mov
in
inc
mov
adc
ret
ljmp
xor
fildll
loop
sahf
mov
xchg
ret
sbb
cmpsl
test
scas
pop
dec
pop
lret
lret
rclb
xlat
mov
je
dec
xor
or
lock
inc
movsb
sub
jno
adc
xchg
sahf
sub
pop
dec
and
cmc
push
out
test
inc
inc
pop
bound
pop
and
std
daa
ret
xlat
cmc
mov
adc
testl
test
jno
fldl
ds
rcl
fdivrl
test
pop
pop
test
rcl
imul
pop
cmpsb
cmp
data16
aas
ljmp
ja
in
inc
add
popf
aam
loop
and
add
pop
scas
out
es
test
test
pop
out
ret
sarb
push
add
jno
jb
mov
or
movsl
mov
test
mull
mov
push
push
push
jg
jmp
fs
dec
imul
lret
addr16
cmpsb
test
mov
out
lret
outsl
pop
int
mov
test
add
adc
mov
pop
cmp
mov
in
scas
js
test
inc
xchg
fistpll
in
sub
in
aaa
out
xchg
into
in
in
aas
cs
push
fimuls
inc
mov
adc
repnz
inc
cld
add
xchg
fucom
mov
sub
insl
neg
rolb
pop
stc
inc
and
cmp
sbb
sub
or
pop
sbb
int
lret
adc
iret
es
fs
push
inc
or
rorl
push
int
jns
out
stc
test
icebp
sbb
orl
iret
scas
jo
stos
mov
icebp
or
sbb
scas
mov
cmc
xchg
pop
dec
jbe
test
mul
shll
data16
mov
addr16
out
mov
pop
mov
shl
aaa
lds
fsubrl
push
fcom
lds
mov
aaa
cli
push
inc
pushf
dec
test
cmpsl
stos
shll
sbb
stc
xchg
out
push
movsl
lahf
and
outsb
test
in
outsb
pop
jne
mov
arpl
inc
jnp
in
cmpsb
lahf
or
mov
fwait
or
push
lcall
lds
cmpsb
out
aaa
add
adc
je
clc
and
lods
ljmp
dec
jbe
jecxz
mull
rol
call
add
fidivrl
add
insb
xor
cld
mov
xlat
je
movsl
add
xchg
mov
ficompl
xchg
push
fucomi
mov
lods
pop
les
out
dec
lret
push
lahf
flds
fimuls
pop
lods
mov
inc
and
mov
rclb
pop
dec
sbb
cmpsb
xchg
insl
push
hlt
sub
orb
sbb
test
ds
jmp
pop
inc
shlb
cld
xor
add
in
cmpl
cmpsl
fcomp
stos
xorb
adc
pop
fs
out
test
mul
sti
cwtl
mov
sub
jns
inc
pop
cmp
aaa
mov
aad
aas
fs
mov
pop
ss
rclb
or
fwait
pop
or
adc
test
lahf
lock
inc
shl
ljmp
jnp
cmc
xor
fwait
and
addl
inc
sub
testl
mov
xchg
mov
pop
mov
jnp
sbb
inc
mov
jb
ret
test
mov
or
inc
jmp
adc
cmpsl
and
clc
fldt
ja
xlat
mov
scas
imul
popf
addr16
inc
int3
dec
push
xchg
movb
add
orl
sbb
in
orb
sbb
loope
fbld
fsubrl
dec
rcrl
jecxz
lods
insb
sbb
fidivrl
mov
mov
cmp
and
mov
clc
push
adc
sbb
adc
jns
sub
jno
dec
xor
push
xchg
sbb
pop
add
mov
mov
jne
rcl
lock
jle
pop
fs
push
sbb
jecxz
or
sbb
dec
fisubs
xlat
rol
stos
inc
sbb
jge
or
lods
mov
inc
pop
ds
mov
add
xchg
repz
cmp
ret
nop
lods
pop
scas
out
test
cmp
add
out
mov
pushf
mov
out
mov
scas
sti
adc
movl
mov
mov
loopne
dec
add
int3
pop
orb
jb
cmpsb
mov
out
dec
dec
sti
dec
xchg
iret
mov
adc
icebp
dec
aas
repz
sbb
mov
xorl
outsb
sub
call
neg
jmpw
das
inc
lods
sub
nop
ss
fldt
push
mov
xor
mov
push
es
dec
xchg
jo
enter
repnz
stos
out
xchg
add
test
loop
scas
sub
mov
mov
inc
mov
dec
xchg
mov
pusha
stos
xchg
push
mov
mov
notl
aad
pop
and
push
mov
pop
adc
int
push
inc
popf
out
jns
pop
orb
aad
fwait
cmpsl
push
ss
jbe
ja
dec
add
out
popf
test
lahf
lods
xchg
fcomps
in
loopw
push
or
pop
and
std
mov
pop
lret
push
or
pushf
or
shlb
sub
push
popf
ljmp
stc
or
pop
sub
insb
xchg
xchg
insl
cli
mov
cli
and
or
mov
push
lea
dec
call
jb
jmp
and
addr16
nop
ljmp
push
mov
mov
gs
adc
outsb
cmpsb
int
in
pop
jmp
loopne
fbld
popa
mov
xchg
pcmpgtw
sti
out
clc
xchg
pop
cmc
daa
push
dec
aas
mov
mov
pop
xor
mov
push
sbb
cli
pop
loopne
mov
push
test
rolb
or
dec
arpl
sbb
data16
cmp
pop
lods
xchg
dec
incl
sar
aaa
or
lock
fs
gs
fwait
lock
add
in
mov
cld
or
orb
cltd
aam
sbb
mov
mov
sub
jne
add
daa
ret
das
and
mov
or
aad
out
cmp
sub
lcall
sub
add
fwait
pop
test
js
test
adcl
imul
sarl
dec
jmp
call
cmc
push
jl
or
es
adc
test
xchg
push
sbb
xchg
adc
cmp
mov
imul
mov
xor
add
test
and
add
mov
shl
stc
inc
fbld
fldt
iret
push
add
ret
cltd
and
test
xor
mov
ss
aas
sbb
cmpsb
rol
test
aam
lahf
cmpsl
dec
sub
xor
or
out
scas
cmp
das
ret
ficomps
lret
lea
mov
outsl
mov
in
cld
and
scas
push
xor
imul
pop
dec
mov
jecxz
imul
stc
roll
repnz
es
mov
mov
adc
jmp
mov
jno
mov
fbld
mov
push
add
stos
iret
fwait
insl
decl
sbb
in
xchg
mov
push
xor
daa
jne
data16
sahf
xor
and
int
jnp
pusha
dec
add
and
negb
repz
mov
mov
movsl
lea
iret
inc
inc
inc
enter
xchg
mov
rcrl
mov
mov
cs
out
mov
dec
out
xchg
ret
sub
or
mov
or
cmp
jmp
jecxz
adc
xlat
pop
in
add
jle
jnp
mov
inc
rcr
push
add
jae
cltd
stc
ja
test
roll
insb
test
jo
loop
repz
outsb
out
push
jne
mov
dec
mov
int
xor
sbb
aaa
outsl
mov
rorb
dec
mov
stos
in
ret
in
fildll
outsb
cmpsb
scas
add
dec
rcrl
popa
test
and
lret
sbb
and
aaa
sbbb
movb
mov
loope
sbb
ret
fdiv
ret
clc
scas
rclb
mov
loop
adc
ret
js
lret
ret
adc
cmp
xchg
ret
pop
lahf
xor
mov
sahf
fldl2e
addr16
sub
aas
mov
cmc
pop
pushl
or
lcall
hlt
movsl
std
mov
mov
mov
sbb
push
sub
lcall
sub
or
std
out
push
sti
daa
xchg
mov
pop
aam
aaa
js
fwait
daa
das
sbb
sti
jbe
cmpsb
out
push
mov
xchg
sbb
and
data16
loope
jae
stc
mov
pop
and
ficoms
mov
xchg
cs
imul
cmp
iret
daa
addr16
lahf
push
ret
sti
add
pop
std
mov
mov
ljmp
es
popf
arpl
loopne
in
jg
inc
aas
aaa
fs
shr
xor
imul
ja
sub
xor
or
fisubl
push
hlt
adc
movsl
ja
xchg
repz
inc
mov
std
xor
xchg
xchg
mov
leave
fwait
popf
pusha
dec
jge
test
xchg
cld
cltd
xchg
shrl
mov
sbb
sahf
and
mov
cmpsb
fldl
incb
cmc
push
jno
cmp
divb
daa
ret
pop
std
inc
test
std
fiaddl
jae
or
jmp
insb
xor
scas
and
loopne
sti
es
fimull
das
fcmovb
cmp
fs
ja
test
mov
cmpsb
iret
push
ds
aad
adc
push
icebp
rorb
lods
stos
push
add
je
dec
repz
sub
push
mov
push
xchg
aaa
mov
rol
fisttps
cmp
xor
icebp
shl
xchg
mov
cmc
ret
pop
int3
mov
pusha
add
cwtl
scas
arpl
sbb
movsb
ja
xchg
testl
push
fisubrs
stos
lahf
in
lahf
inc
push
ds
push
imull
xor
mov
js
push
es
addr16
jmp
das
cli
inc
lods
out
jb
scas
stc
lea
mov
addr16
xchg
adc
hlt
push
adcb
or
enter
imul
dec
daa
fadds
ja
sbb
pop
xlat
add
push
xorl
movb
jmp
mov
leave
xorl
or
insl
add
fidivrs
lret
ret
cli
and
ja
shrl
pop
arpl
xlat
rcl
mov
push
je
ja
addr16
push
arpl
test
hlt
push
xchg
popa
xor
cmpsl
mov
add
andl
out
dec
aam
pusha
pushf
test
jecxz
rorb
aad
sub
idivl
mov
bound
inc
add
ss
or
out
aad
mov
fwait
mov
mov
stos
into
scas
out
rorl
out
out
jge
cmp
dec
cmp
mov
dec
out
ljmp
or
or
arpl
inc
std
pop
mov
iret
test
inc
push
fld
cmpsb
jno
jnp
pop
push
inc
jno
scas
inc
fimuls
and
lods
xor
cmp
in
xor
and
addr16
aas
jbe
xchg
mov
xor
mov
push
das
jge
aam
ret
cmc
in
jb
addb
arpl
mov
jae
out
test
hlt
addr16
sub
movsl
test
add
mov
test
adc
mov
inc
arpl
mov
jae
push
movsl
icebp
pushf
or
subl
xor
aaa
sub
lods
and
ja,pt
xchg
fbstp
xchg
pop
mov
mov
sbbl
mov
rcr
dec
xlat
mov
movb
aaa
jo
shll
push
out
or
adc
mov
pop
and
mov
add
xlat
mov
stos
inc
pop
popl
push
sbb
shll
test
popl
jecxz
and
mov
jno
sahf
cmpsl
push
test
arpl
insb
fadd
out
push
movsl
fisttpl
xchg
test
loop
pusha
sbb
mov
pop
in
sti
xlat
stc
inc
jmp
cmp
fisubs
add
or
scas
inc
add
pop
daa
or
add
out
xor
add
test
mov
mov
fistps
aad
add
cld
xlat
jnp
inc
or
xchg
adc
jmp
iret
adc
mov
gs
adc
aam
outsl
add
out
popf
add
sbb
lcall
cmc
out
andl
cmpsl
fldenv
xchg
cmp
and
xlat
adc
push
scas
sar
cmp
filds
and
lahf
cld
divl
push
lahf
cs
and
clc
ret
std
outsl
aad
fldl
gs
je
scas
mov
xor
push
movsl
mov
xor
jecxz
and
aaa
mov
ljmp
pop
mov
and
dec
sub
das
loope
cmpsl
cmc
pop
xchg
addb
mov
pop
int3
rclb
out
les
xchg
popaw
push
pushl
mov
das
jg
shrl
cli
aaa
cmpsl
test
xor
xchg
cli
mov
bnd
lock
mov
pop
xchg
into
or
or
xchg
mov
fistpll
or
scas
add
les
cmp
mov
jo
test
cmp
aad
push
pop
push
lods
add
mov
int3
inc
ja
sti
mull
nop
out
adc
jmp
dec
sbb
popa
mov
stos
jns
sub
jne
sbb
test
mov
jg
addr16
in
xor
flds
out
add
iret
out
mov
call
test
popf
call
sub
jae
push
sub
mov
inc
or
push
xchg
ret
pop
dec
sbb
mov
mov
in
stos
cltd
repz
ja
loop
mov
inc
cmpsl
test
insb
mov
shrl
or
jge
xlat
scas
or
adc
stos
lods
xchg
jle
xorb
pcmpeqw
add
mov
jmp
add
repz
addr16
aad
adc
sbb
fwait
out
add
pop
xchg
pusha
pop
jp
and
frstor
xor
lahf
pop
mov
addr16
negb
push
xchg
pop
loope
imul
movsw
addr16
xchg
inc
daa
mov
push
out
mov
xor
out
mov
fs
or
xor
dec
jae
or
adc
nop
fwait
lock
addr16
mov
scas
jo
stos
test
push
in
insl
imul
mov
in
jge
lods
cmp
les
add
and
inc
push
cs
add
mov
rcrl
repz
stos
cmp
sub
mov
stc
adc
mov
ja
add
push
stos
testl
lahf
std
jg
pop
fidivs
jbe
stc
push
sub
std
mov
clc
in
mov
aad
mov
add
shrb
add
sub
out
shrb
mov
cli
aam
xchg
inc
jp
nop
pop
add
imull
mov
incl
or
gs
nop
and
daa
out
mov
sbb
scas
scas
fldt
add
jle
lds
cmp
dec
je
xlat
mov
shll
xchg
arpl
pop
xor
sub
add
out
outsb
push
stos
outsl
leave
stos
notb
or
out
adc
cmp
stc
ja
sub
sbb
rorl
jle
in
mov
sub
shrb
js
mov
test
out
inc
or
scas
jecxz
adc
sub
push
mov
lods
lods
xchg
hlt
shll
jne
pop
jmp
mov
cvtdq2ps
dec
mov
jle
cmpsl
mov
ret
stos
dec
popf
insb
ja
dec
iret
repnz
fiadds
dec
test
out
addr16
in
out
add
loope
or
jecxz
mov
pushf
mov
js
add
add
stos
lahf
mov
inc
sbb
pop
mov
fisttps
les
inc
loopne
mov
fwait
inc
jnp
movsl
ficoms
mov
cld
pop
jb
adc
jge
cmpsl
ret
out
push
sahf
fneni(8087
pop
push
mov
es
imul
add
adc
rorl
mov
testb
sbb
jg
xor
std
inc
in
mov
xor
out
xor
mov
test
nop
ds
pop
or
dec
xchg
push
adc
cmc
out
ja
dec
rcrb
mov
dec
enter
add
dec
mov
cmp
pop
lcall
daa
and
and
dec
mov
jmp
pop
mov
dec
push
lret
fisttpll
fwait
or
aaa
out
mov
icebp
mov
mov
out
xchg
cmc
xlat
aas
or
iret
or
push
repnz
out
mov
ja
sarl
test
inc
mov
outsl
jmp
cmp
es
imul
adc
int
int
fstl
pop
mov
mov
cmpsl
test
xchg
push
outsl
pop
aas
repz
pop
add
sbb
mov
mov
push
jmp
stos
pop
out
mov
imul
mov
cmpsl
ja
push
scas
sti
leave
dec
les
test
or
push
ss
jbe
fbld
inc
xor
shlb
fbstp
jmp
scas
jb
push
xor
or
iret
jmp
xchg
mov
test
leave
xlat
push
rorl
ljmp
xchg
dec
stc
leave
jge
test
push
xor
loope
xchg
inc
cmpl
pop
and
sahf
adc
loop
mov
cmpsb
clc
call
mov
fwait
xchg
inc
fisubs
add
dec
cmp
lds
inc
lcall
xor
fisubs
and
cmp
ja
jbe
movl
and
incb
cmp
orl
sahf
dec
inc
mov
pop
daa
adc
inc
ja
test
aaa
push
or
ror
in
jmp
cltd
das
stc
test
fildll
xchg
xchg
xor
mov
ds
jle
shr
dec
lret
jno
adcl
push
pop
fmull
hlt
les
incl
mov
dec
sbb
out
xor
mov
xor
fldl
sbb
cs
and
movsb
push
cs
loope
fwait
pop
jne
inc
fisubrs
mov
jge
repz
sbb
testl
or
imul
mov
cmc
mov
lcall
and
jle
sub
aad
pop
push
in
inc
je
sarl
lock
mov
jns
mov
add
shl
and
orb
outsb
add
add
ja
pop
movsl
test
fsts
aaa
sub
and
fistl
ljmp
adc
dec
aas
daa
cmp
loopne
mulb
xor
add
scas
cld
or
mov
add
rorb
pushf
add
repz
jmp
xchg
les
fs
das
movsl
jnp
iret
pop
rorb
jno,pn
mov
dec
pop
repnz
int
or
icebp
jecxz
mov
xor
js
dec
xlat
sbb
mov
scas
push
test
pusha
repnz
add
das
lret
scas
or
daa
mov
dec
movsb
daa
movl
aas
inc
stc
mov
rcrb
mov
mov
dec
in
cmp
xchg
and
icebp
test
mov
xor
or
orb
addl
add
int3
fs
mov
pop
fcomip
lahf
pop
out
int
enter
mov
cmovae
fildll
adc
popa
ja
or
jle
and
mov
or
rcll
pop
jle
ss
pusha
aad
mov
pop
mov
aaa
popa
mov
or
repz
mov
inc
test
roll
cltd
ja
or
repnz
ficoml
out
mov
movsb
divb
ret
xchg
xchg
mov
adc
out
in
daa
sub
fsubl
sahf
xlat
mov
inc
scas
dec
hlt
adc
movsl
pop
je
mov
sbb
arpl
int
xlat
or
jmp
ja
adc
ret
filds
ss
test
test
sbb
lods
shll
aas
insb
xchg
roll
push
cmpsl
lcall
mov
dec
xchg
scas
outsl
mov
clc
orb
and
mov
lcall
jg
pushf
stos
shl
cmp
outsb
sahf
divb
mov
adc
push
mov
add
dec
fwait
lea
jnp
cmpsb
scas
mov
inc
and
sbb
fdivl
add
push
int3
sbb
cmpsl
mov
mov
and
push
decb
or
sbb
repz
in
stc
dec
les
add
sub
add
jl
dec
mov
mov
sti
mov
outsb
pop
add
pop
mov
or
pop
jle
or
jb
daa
sbb
or
or
adc
jmp
aas
mov
cmp
fwait
les
orl
adc
mov
inc
ds
ret
pop
add
sub
and
adc
pop
loope
pusha
test
outsl
ret
ja
rcr
pop
clc
and
dec
sub
outsl
add
push
loop
jmp
addb
mov
loopne
and
pop
jge
mov
fists
lds
add
xchg
and
scas
mov
push
icebp
cmc
adc
pop
inc
xchg
sbb
fcom
pop
xor
add
pushf
xchg
into
mov
jno
mulb
loopne
xor
test
dec
pop
mov
sbb
and
jae,pt
not
xlat
mov
dec
test
je
add
in
push
pusha
stos
mov
in
xor
sub
push
dec
ror
push
popf
scas
call
mov
jle
mov
mov
sti
outsb
sub
jnp
sti
imulb
sbb
mov
cld
mov
lods
lds
or
aas
je
dec
shr
in
out
cmpsl
test
movb
arpl
daa
fcmovnbe
aas
or
imulb
movsb
mov
cs
mov
sub
repnz
mov
testl
xor
scas
push
add
movl
cltd
push
mov
ss
lea
data16
pop
dec
ja
dec
mov
mov
mov
mov
jecxz
sbb
pop
pop
mov
je
jmp
fdivrs
sbb
xchg
insl
adc
xchg
mov
sti
call
movsl
adc
and
push
fisubrs
fstpt
pop
and
nop
sbb
jp
roll
xor
sti
jnp
mov
lea
mov
in
and
repz
fmul
dec
jecxz
add
jno
mov
leave
mov
jmp
test
comiss
fwait
xor
loopne
dec
addr16
and
cmp
jae
jbe
jne
dec
mov
addr16
fcmovne
cmp
psllw
lds
sbb
jne
inc
xchg
into
sub
fistps
sbb
xor
sub
mov
popf
stos
xchg
add
call
inc
test
clc
repnz
jae
push
or
mov
mov
fists
or
push
push
lock
movsl
loopne
xchg
jp
jg
pop
sbb
mov
imul
out
push
xchg
test
adc
adc
push
cmc
vucomisd
inc
daa
mov
or
imul
inc
or
lock
shrb
push
adc
loopne
fimull
out
xchg
jmp
or
adc
aad
mov
addr16
mov
jg
hlt
xchg
xchg
jmp
push
jmp
imul
out
mov
sbb
sbb
lahf
jbe
lds
mov
mov
data16
rcl
jb
daa
mov
out
test
pop
xor
mov
lret
xlat
repz
les
cmpsl
jle
add
int3
or
sub
or
dec
and
jp
jl
outsl
lcall
hlt
arpl
mov
mov
pop
fcomi
cmc
push
insl
lea
mov
add
enter
mov
jg
aaa
adc
inc
cmp
fwait
xlat
incl
daa
cld
xor
test
aaa
fwait
in
xchg
cmp
das
clc
xor
pop
scas
cmp
add
xchg
dec
test
sbb
mov
je
stc
lods
mov
std
cmp
xlat
adc
xchg
bound
pop
in
arpl
fistpll
test
aaa
push
mov
rorl
inc
loop
fs
ja
xor
mov
test
gs
fcomip
push
dec
nop
int
jp
in
inc
mov
shl
frstor
out
cmp
insb
push
cmovg
add
xchg
mov
inc
bound
xchg
inc
jmp
mov
mov
add
out
out
das
stos
push
gs
xchg
enter
daa
inc
leave
aad
mov
jle
dec
cmpb
popa
scas
out
stc
xchg
mov
mov
test
jp
cltd
in
and
push
std
out
xor
dec
mov
fistps
jbe
cld
outsl
sub
mov
jmp
mov
sahf
scas
mov
je
jge
adc
ret
xlat
pop
xor
dec
fs
mov
and
es
fidivl
and
jecxz
xchg
cwtl
mov
push
cltd
sub
mov
jbe
mov
jns
mov
lds
xchg
fsubrl
push
mov
xor
xchg
jne
dec
in
aaa
out
adc
dec
addr16
push
xor
or
xchg
js
lret
mov
inc
or
xchg
out
push
mov
stc
mov
lds
dec
ror
mov
jns
clc
inc
add
push
sub
adc
xchg
mov
pop
sarl
mov
push
push
adc
frstor
jecxz
push
jns
xchg
push
mov
stc
xlat
push
jge
xchg
andl
fiaddl
rol
mov
dec
cwtl
aam
lahf
pop
adc
sbb
ficoms
lods
sbb
adc
es
mov
daa
fs
clc
pop
push
shll
mov
out
sbb
addr16
hlt
dec
nop
mov
popa
loopne
sti
jns
xchg
test
or
cmp
xchg
pusha
xchg
push
jp
sbb
aam
lock
movsl
in
mov
shll
lods
fsubl
out
adc
ds
out
rcl
fstpt
in
fadd
sarb
test
mov
mov
sub
mov
mov
or
in
negl
inc
ds
cmpsl
inc
jno
pop
jno
inc
aaa
scas
lret
xor
call
aas
out
incl
xchg
adc
inc
sub
pusha
leave
and
jle
dec
add
scas
push
daa
iret
faddl
fisubrl
pop
mov
lods
hlt
add
mov
les
out
mov
inc
out
fwait
bound
cmp
lods
mov
xchg
mov
les
xlat
push
dec
clc
mov
pop
jge
inc
mov
movsl
mov
lret
cmpb
mov
lods
cs
lea
loopne
and
stc
lods
adc
push
jo
inc
xchg
loopne
shlb
sti
sbb
xor
push
je
push
mov
mov
push
adc
subl
or
add
or
into
mov
iret
loope
test
sbb
pop
xor
repz
lahf
sub
pop
aaa
sahf
sbb
sbb
scas
mull
cmp
decl
adc
shl
out
adc
pop
testb
xchg
push
testl
test
inc
cli
ja
sarl
and
movl
mov
stos
mov
adc
test
into
loopne
dec
ret
mov
push
jo
btr
cmp
cmp
repz
xchg
mov
or
dec
xlat
cmc
lds
push
xchg
aam
out
adc
mov
cmpsb
jb
cmc
gs
mov
out
frndint
jbe
cmpsl
incl
pusha
cmp
sub
fists
popf
imul
loop
pop
jae
lcall
mov
cmpsb
aad
adc
pop
mov
inc
out
je
outsl
mov
enter
push
mov
icebp
adc
lea
aas
or
lcall
lret
repnz
inc
push
shrb
xorb
in
push
jb
test
nop
scas
jb
xlat
inc
mov
mov
insl
cmpsl
push
ds
ss
out
inc
pop
sbb
data16
sub
and
stos
ja
add
imul
nop
fstps
pop
inc
ja
fcmove
xlat
mov
inc
and
cmp
jge
idivl
jno
fcomps
xor
ret
divl
pushf
pusha
xor
popf
rcrb
sub
movb
cmpsb
or
cltd
out
testl
adc
inc
cmp
or
xor
data16
or
test
xor
xchg
lods
scas
test
add
stos
cmp
lock
repnz
fdivrp
dec
mov
mov
test
inc
sbb
dec
stos
push
adc
pop
js
push
aaa
mov
int3
pop
cmc
adc
popa
mov
in
addr16
pop
inc
aam
rcl
arpl
inc
jne
xchg
ljmp
lock
adc
insb
das
adc
scas
leave
jmp
xchg
test
cmpsl
loopne
xlat
pop
in
cmp
outsl
add
fdivrs
hlt
cmpsl
push
movsb
leave
in
outsl
adc
xchg
inc
movsb
insl
into
sub
test
and
sbb
mov
and
sbb
xchg
dec
lock
std
push
dec
fucomi
jmp
out
imul
imul
fs
fwait
les
sub
icebp
xor
sbb
pop
in
pop
stos
rorb
je
dec
jnp
mov
and
jge
cmp
std
dec
inc
mov
push
lods
mov
lds
dec
xchg
das
fs
cs
out
arpl
xor
xor
fs
jg
shlb
scas
mov
fiadds
push
jmp
mov
or
ret
test
mov
repnz
add
jge
mov
aaa
dec
lret
bound
mov
sbb
sbb
adc
push
push
mulb
loop
pop
jmp
xchg
stc
and
stos
dec
dec
add
outsl
stc
add
rorb
aas
popf
push
or
mov
mov
jmp
in
pop
scas
or
mov
test
jne
aad
pop
repz
adc
xchg
imul
push
les
jmp
aaa
push
jg
loope
mov
ffreep
and
lahf
mov
mov
lds
les
push
xor
mov
sub
in
stos
in
cmc
inc
pop
lret
jnp
jns
dec
cmp
jb
aaa
js
adc
aas
clc
inc
cs
ja
imul
or
sbb
outsl
add
push
or
sbb
add
int3
jecxz
icebp
and
in
cs
xchg
addr16
sbb
inc
adc
lods
xchg
in
add
mov
mov
adc
xlat
xor
in
sbb
in
pop
mov
ret
cmp
xchg
aad
iret
add
and
ret
fildll
mov
mov
les
mov
or
cmc
mov
data16
pop
loopne
test
xor
sub
jae
pusha
out
add
cmp
add
pop
adc
les
ja
adc
inc
jno
ret
decl
push
xlat
pop
pop
mov
mov
mov
shl
dec
nop
mov
test
scas
sbb
loope
inc
scas
lock
repz
xchg
scas
jno
and
imull
sar
test
inc
and
mov
test
mov
dec
aas
std
inc
pop
std
inc
mov
inc
xchg
adc
ret
or
mov
out
push
adc
mov
dec
stos
inc
andb
div
mov
jnp
dec
add
popf
jecxz
add
cmc
ret
lahf
enter
fildll
cmc
nop
cmp
inc
or
mul
adc
movsb
xor
repnz
dec
adc
call
lds
ja
aaa
out
stc
or
fisubrl
fbld
nop
lret
addr16
sahf
loope
lods
movl
adc
mov
insl
xor
mov
and
dec
mov
jecxz
out
outsb
push
xor
adc
es
mov
push
inc
es
mov
cmpsl
out
lret
insb
iret
test
es
fs
xchg
push
push
xorl
adc
loope
repz
scas
cltd
mov
mov
xor
push
aad
roll
inc
aam
clc
inc
jp
jnp
pop
fdivr
out
in
shl
fisttpll
je
fbld
fidivs
inc
nop
dec
ret
jbe
mov
leave
out
loopne
jno
and
test
jbe
in
jecxz
lds
cmc
je
idivl
cs
jmp
aad
out
mov
aaa
jmp
sbb
mov
pop
aas
movsl
xor
iret
mov
push
mov
in
mov
add
cli
xchg
inc
and
cmp
scas
adc
lret
push
push
xchg
in
sahf
movb
fstpl
jg
inc
mov
int
or
ja
jg
mov
xchg
xchg
xchg
sbb
mov
cs
sahf
insb
xchg
push
cld
dec
int3
hlt
xchg
mov
fbld
mov
push
cmpsb
ficoms
sbb
dec
mov
notl
out
aad
xlat
mov
aas
xorb
pusha
pusha
sbbb
jecxz
out
mov
test
xchg
sub
rcrb
lds
push
dec
arpl
jo
inc
mov
or
test
inc
jge
sub
cmp
stos
pusha
jmp
xlat
sbb
out
data16
xorl
or
xchg
test
xchg
dec
adc
pop
pop
negl
xchg
fs
dec
out
cmp
cmpsl
push
fistps
push
test
inc
inc
pop
adc
push
shll
adc
ficoms
ds
shr
es
pop
decl
pop
pop
sbb
and
mov
sub
sarb
dec
pusha
fldcw
push
repz
xchg
mov
or
fdivl
cld
dec
mov
sub
fucomi
mov
dec
xchg
fisubl
jnp
xlat
sarb
or
fiaddl
lods
xchg
fbld
adc
mov
iret
pop
and
jb
xchg
gs
jmp
repz
pop
das
lods
movl
mov
dec
mov
fisubs
lahf
xor
inc
aas
inc
xchg
cmc
xchg
dec
dec
inc
jae
in
pop
lds
and
jne
xor
inc
jo
test
lods
inc
cmpsl
rcl
insl
mov
movsl
insl
test
sti
adc
leave
xlat
inc
xor
arpl
cmp
mov
lods
and
lret
adc
xchg
sbbb
hlt
test
es
rcll
add
sarl
sub
mov
leave
push
test
addr16
pushl
in
xor
cmp
aaa
push
mov
mov
adc
adc
add
xchg
adc
rcl
inc
leave
push
inc
aad
pop
cmpsl
test
ret
mov
hlt
pop
stos
push
xor
shlb
cmpsl
mov
inc
and
pop
les
mov
std
add
pop
fsubl
lds
mov
inc
pop
adc
sbb
jecxz
jo
and
adc
push
popf
out
sub
aaa
mov
scas
dec
add
mov
shr
fdivrs
loop
lds
lods
add
repnz
aam
nop
mov
pop
mov
in
cs
and
aad
hlt
xor
adc
push
mov
addl
testl
insb
inc
test
fcmovnb
cmp
iret
jmp
ret
sub
push
dec
jns
inc
nop
jmp
ljmp
sub
or
rcrl
movsb
mov
jmp
out
jno
dec
mov
sub
testl
mov
fdivr
mov
push
sti
popf
jecxz
sti
dec
popf
mov
sbb
add
movsl
lahf
xchg
push
mov
dec
push
mov
fildll
pop
inc
lds
adc
inc
rclb
out
out
imul
lahf
pop
xor
cld
mov
ror
adc
or
pop
js
sbb
idivb
ja
test
jge
outsl
lods
push
std
fs
ja
ret
fdiv
dec
daa
loop
push
idiv
into
jmp
and
das
addr16
and
callw
je
jg
lods
dec
and
int
in
loop
das
shrl
cmpsb
mov
mov
or
pop
sahf
jecxz
ljmp
push
ja
lock
mov
cmpsl
lea
xchg
rcl
mov
clc
xchg
push
or
dec
push
repnz
fs
pop
loop
iret
or
fimull
mov
rorb
xor
decb
in
addr16
sbb
fbstp
adcl
add
clc
sbb
push
jg
cmpsb
push
mov
ljmp
out
xchg
test
test
jg
lds
inc
mov
iret
jno
loope
sub
xchg
or
cmp
inc
into
sbb
dec
icebp
or
outsl
shl
loope
fisttps
mov
repnz
mov
leave
xchg
les
clc
add
dec
pop
dec
out
out
frstor
in
cs
test
shrb
aad
mov
xchg
bswap
test
xchg
jmp
sub
jae
test
popf
out
in
ljmp
mov
push
lret
adc
mov
push
stos
stc
push
ss
mov
adc
arpl
sahf
scas
xor
inc
test
inc
loop
outsl
mov
mov
test
push
movsb
jle
leave
inc
movb
sbb
decl
les
std
pop
push
push
stos
cmpb
jecxz
aaa
ja
or
xchg
aas
cmpb
mov
icebp
int
je
mov
sub
xlat
and
jecxz
subb
inc
inc
in
cmpsl
cmc
jecxz
addl
test
test
jecxz
mov
addr16
mov
icebp
shl
xor
out
mov
push
incb
ficomps
enter
xor
xchg
push
cmpsl
testb
repz
pushl
mov
loopne
push
inc
in
jl
jp
pop
faddl
subl
rclb
test
adcl
xor
push
xchg
loop
test
shr
xchg
xor
pop
stos
and
stc
mov
xor
lea
addw
das
mov
mov
xlat
aam
cli
dec
out
push
popa
fbld
test
push
jo
ja
lea
xchg
xlat
mov
dec
scas
xor
stos
outsl
cli
mov
push
in
incb
lds
arpl
adc
and
cmpsl
negb
mov
add
lea
in
movsb
outsl
iret
insb
filds
sbb
test
mov
cmc
ffreep
jg
mov
push
testl
fwait
mov
xchg
xor
sbb
cmp
pop
or
out
jg
push
mov
pop
mov
fsubrl
addr16
movsl
mov
rolb
jns
cmpsb
push
pop
lods
popa
sub
pop
or
shll
test
dec
out
push
jae
testl
test
cmpsl
jg
pop
xorb
insb
daa
mov
ja
fwait
xchg
sbb
std
hlt
cmpsl
rorb
ja
fcompl
mov
pop
mov
int
outsb
mov
inc
inc
testb
adc
in
jns
into
xchg
cmp
cmpb
mov
iret
inc
add
loopne
cmc
rorl
add
dec
aad
shl
lods
inc
xchg
xchg
loop
hlt
inc
fdiv
outsl
addr16
inc
or
andl
fimull
idivl
lahf
mov
or
shlb
lahf
lcall
push
sar
clc
movsl
mov
mov
dec
mov
lock
jecxz
jmp
hlt
outsl
cmp
adc
mov
out
jns
or
push
lea
pop
jne
mov
mov
sbb
jnp
dec
inc
ljmp
adc
movsb
mov
jb
mov
imul
outsb
dec
cmc
popa
mov
dec
cmp
rcll
inc
in
xchg
dec
inc
push
je
loop
cmpsl
rol
mov
scas
cltd
lds
push
insl
les
mov
mov
lds
jb
or
idivl
mov
adc
lods
and
ds
pushf
add
xlat
mov
sub
inc
adc
cmpsl
mov
cmpsl
leave
add
mov
push
xchg
and
or
adc
push
clc
icebp
push
popa
stos
or
out
xorps
imul
out
lds
arpl
or
ja
xor
rol
fists
or
jmp
xor
lods
pop
pop
adc
xchg
bound
jmp
fs
scas
insb
mov
mov
lds
xor
inc
into
jl
stos
mov
iret
mov
lock
cmpsl
xor
and
mov
sbb
sub
inc
cmp
pop
lods
sar
sti
or
push
outsb
push
adc
cmp
or
daa
addr16
fldcw
scas
jmp
xchg
inc
pop
mov
rolb
xchg
add
call
cmpsb
vpsubsb
ret
cmp
lret
add
fs
clc
pop
lcall
lahf
jbe
loope
jle
mov
inc
push
mov
push
add
xchg
imul
mov
cmpsb
sbb
repnz
push
pusha
pop
ss
aaa
sbb
xchg
mov
insb
pop
and
lods
and
jecxz
cmpsl
ret
jb
mov
test
pop
add
pop
out
stc
xchg
popa
jge
cmp
daa
mov
xchg
add
xchg
jmp
repnz
adc
or
test
sbb
iret
mov
and
lds
sbbb
mov
cwtl
mov
popa
subb
test
mov
mov
push
pop
dec
fists
fcoms
mov
je
gs
enter
dec
aas
cmpsb
push
je
inc
xchg
mov
daa
test
ret
xchg
stos
jg
jo
adc
add
loope
lods
inc
sbb
push
push
or
xchg
xchg
or
cs
movsb
mov
push
sbb
daa
sbb
std
gs
dec
cmp
leave
ja
bnd
cmpsl
test
imul
leave
inc
loope
lcall
pop
inc
fs
sbb
dec
sti
and
mov
fildl
push
cli
int3
out
jecxz
pop
into
cmp
rolb
and
mov
outsb
mov
push
jge
in
adc
test
cmpsb
into
adc
lcall
mov
test
jne
sti
push
xchg
out
jmp
jle
xchg
pop
mov
xor
mov
dec
mov
inc
add
xor
scas
dec
rolb
adc
mov
mov
lcall
enter
shlb
dec
cwtl
ret
xor
in
mov
or
mov
test
add
dec
pop
dec
out
jne
les
cmovno
sahf
pop
lds
jp
lcall
mov
or
mov
out
out
ja
jecxz
cld
mov
lods
fmulp
dec
pop
inc
xor
add
and
cmp
xchg
xorb
xchg
adc
insl
rorb
imul
sub
and
nop
ljmp
sub
xchg
sub
loope
push
les
ret
and
mov
pop
out
test
xor
and
fwait
aad
xor
int
jle
fwait
cmpsl
andb
xor
rol
lods
mov
jp
cmp
mov
out
shrl
vcmppd
stos
loop
pop
jno
xor
jae
pop
push
cmpsl
out
cmp
arpl
adc
cmc
addr16
fnstcw
bound
out
jno
in
shl
orl
and
cmp
push
pop
xlat
out
testl
cmp
int
cs
and
test
ror
repnz
jb
mov
jecxz
negb
xor
pop
xor
xchg
mov
testl
les
dec
in
jge
jle
fwait
ret
or
call
jmp
mov
mov
imul
fimuls
fwait
mov
out
out
dec
stc
lock
jl
pop
cld
ret
test
dec
stos
inc
fdiv
cli
mov
jno
je
mov
add
pop
scas
add
xchg
inc
sub
pop
mov
jecxz
rcrb
and
xchg
jbe
jbe
mov
ljmp
cld
dec
adc
imul
pop
xor
fs
xchg
push
pop
and
jnp
gs
sub
rorl
push
mov
sbbl
mov
jge
out
mov
pop
shlb
pop
fsubl
hlt
pop
mov
pop
out
push
or
cmc
ret
mov
mov
jge
popl
or
jb
push
mov
mull
dec
xlat
int3
push
pusha
data16
scas
out
std
jbe
idivl
aam
out
add
cltd
test
dec
repz
xlat
xchg
gs
jns
insl
icebp
cmp
mov
jne
mov
sarl
inc
mov
dec
shrb
fstl
inc
leave
mov
out
fwait
cmp
pushfw
nop
jno
pusha
andl
push
pop
rclb
outsb
shr
jge
xchg
mov
rorb
or
insb
stos
push
mov
filds
jmp
cmpsl
mov
test
inc
cld
mov
jo
push
or
outsl
push
mov
add
out
fistpll
jg
movsl
xor
jg
sub
cmpsl
adc
jge
jge
das
cmp
mov
cmp
mov
in
mov
push
mov
mov
fwait
mov
xchg
xchg
adc
pop
cmp
sahf
shrb
subb
andb
jbe
lcall
and
pop
cli
fcompl
xchg
gs
inc
and
sar
adc
xchg
or
sub
std
dec
inc
pop
mov
lods
out
pop
jo
push
outsb
movl
fstps
adc
cmpb
loope
fwait
mov
mov
jp
xor
cmp
xchg
hlt
sub
and
sbbl
inc
jl
push
dec
fs
daa
popf
test
leave
movsl
lea
iret
jno
xor
push
dec
ja
cmc
cmc
sbb
lods
cmp
fidivs
jae
sbb
pop
jae
lods
mov
cld
cmpsl
and
mov
pop
push
mov
xor
mov
xlat
pop
mov
jnp
lcall
cmp
jmp
jbe
pop
mov
fwait
roll
aaa
ds
inc
mov
pop
cli
inc
xchg
and
xor
dec
xchg
jge
enter
push
jg
in
mov
mov
xor
out
sub
insl
mov
push
insb
addr16
xchg
push
cmc
sahf
imul
mov
push
rolb
imul
rcr
loopne
les
int3
and
imul
jnp
or
mov
scas
fsubs
mov
or
push
sub
outsb
cwtl
ds
in
bound
push
pop
dec
and
sbb
inc
lea
mov
test
xchg
cs
loopne
jb
sbb
sti
fdivrl
adc
and
ret
jecxz
sti
jno
mov
jg
rol
jnp
movsl
dec
imul
mov
push
pop
lock
hlt
xchg
xchg
push
jno
in
flds
sub
scas
sbb
add
repnz
in
mov
sub
dec
jecxz
xchg
lods
pusha
decb
add
mov
mov
ja
loope
sbb
mov
jecxz
inc
imul
ja
negb
stos
push
test
or
inc
into
xor
xor
out
sub
jae
push
push
xor
add
inc
sbb
lret
jge
or
lods
orb
mov
bound
cmp
add
fiaddl
sub
pop
scas
mov
vmovd
push
push
xchg
push
and
ret
mov
push
data16
cli
mov
fisttps
cli
sbb
lahf
xlat
dec
data16
sti
dec
in
push
mov
repnz
or
adc
pop
lock
mov
pop
push
pop
cmp
repz
jmp
pusha
xlat
and
lock
pop
das
stc
xchg
fcmovnbe
add
sbbb
rcll
push
inc
test
or
cmp
loopne
xor
jo
repnz
testb
mov
ja
les
cmp
fsubr
dec
pop
jg
sub
xchg
mov
test
aad
incb
mov
sub
cmp
jg
xor
cmp
out
test
dec
test
pop
popa
ret
aas
mov
pop
fs
jle
inc
ljmp
xchg
addb
mov
fildll
test
leave
sahf
test
shll
dec
in
fmull
fsubr
rolb
into
std
push
clc
cwtl
xchg
ss
jmp
xchg
mov
les
orb
pop
int3
stc
cltd
rcrb
icebp
add
fwait
lds
mov
daa
leave
andl
and
or
js
add
popf
or
cltd
lods
inc
or
lods
xchg
ja
cmp
add
pop
int3
les
dec
dec
pushl
pop
pop
in
adc
jb
jne
shlb
daa
cmp
lock
and
xadd
pop
mov
insl
xchg
imul
adcl
nop
mov
or
shll
adc
cmp
in
cltd
jg
mov
outsb
jns
repnz
ja
mov
movsb
dec
mov
jl
fisubrl
bound
cmp
rorb
movsb
sar
jp
push
popa
in
adc
out
insl
out
fldl
imul
idiv
fldt
push
aaa
fs
and
pop
std
in
lret
or
lret
mov
mov
jp
stc
sbb
ljmp
push
or
sub
mov
imulb
sub
xchg
lods
xchg
add
inc
clc
cmp
jb
add
shll
cmp
mov
mov
negb
loop
test
pop
cmp
jne
mov
mov
adc
sbb
mov
and
sbb
shr
mov
pop
mov
gs
stos
jmp
fcmovbe
es
xchg
cmp
arpl
arpl
in
scas
rcrl
jne
mov
and
js
testb
cmpsb
out
leave
push
movsb
add
jae
repnz
sti
pop
inc
lret
mov
outsb
ret
fsubl
xor
jno
mov
push
jge
jl
adc
or
adc
xor
inc
test
jp
mov
inc
push
flds
out
sub
scas
xchg
pop
mov
jnp
ret
xchg
push
inc
aas
mov
test
es
xor
pop
and
add
into
jns
paddd
jp
cmp
fmul
clc
inc
fs
push
cmc
cltd
movsl
mov
scas
inc
ds
test
push
pop
mov
jge
add
lret
cmc
mov
cmpsl
test
addr16
movsl
test
mov
add
outsl
ja
insl
hlt
jo
mov
into
cmp
clc
lea
icebp
lret
sbb
mov
setb
repz
xlat
xchg
dec
rorl
pop
sbb
incl
dec
sbb
and
and
loop
adcl
xchg
adc
sub
out
test
inc
mov
out
sub
imulb
xor
mov
insl
jmp
out
stc
push
or
push
fldenv
xor
mov
cs
insl
xchg
daa
push
push
mov
popl
xorb
out
and
cs
push
fs
in
push
mov
xchg
fildl
jns
je
hlt
cmp
push
fiadds
into
push
mov
lcall
scas
iret
stos
and
aad
mov
mov
jne
pop
mov
pop
and
push
mov
and
inc
inc
adc
das
cmp
sahf
popa
adc
ffree
pop
or
rcrl
push
sbb
or
bound
dec
scas
addb
lock
scas
test
mov
and
pop
fbstp
mov
aas
andl
jns
je
dec
test
shl
adc
sbbl
lds
mov
aam
jp
outsb
aaa
xchg
popf
dec
add
push
pop
out
mov
lea
out
xchg
push
pop
jmp
adc
sub
push
lcall
loopne
xor
jl
dec
cmp
rcll
loopne
xchg
adc
sarl
int
pop
lds
jecxz
adc
js
lret
insb
out
movsl
jne
into
pop
popa
shl
adc
mov
pop
stos
loop
lret
pop
aas
gs
movsl
sub
jmp
loop
in
xchg
cmpsl
push
stc
popa
sub
xchg
into
insl
ja
mov
in
xchg
rcrb
cmp
pop
test
stc
add
arpl
jecxz
cmp
dec
pop
add
add
out
stc
jo
lds
mov
pop
outsl
cmp
mov
cmpsl
iret
pop
push
sbb
imul
test
adc
popl
lds
xchg
mov
gs
or
faddl
or
jno
mov
into
out
imul
out
stos
add
ljmp
or
test
adc
pop
into
jge
add
pusha
dec
jne
jge
test
mov
stos
pop
shl
outsb
push
dec
xchg
fnstenv
out
scas
popf
sub
daa
or
test
ret
movsb
adc
sub
hlt
mov
mov
hlt
jge
aam
adc
daa
xlat
ss
fisubrs
jae
xchg
pop
jp
mov
dec
fisttpll
ds
out
mov
jnp
mov
out
pusha
dec
dec
sbb
fs
lahf
shl
sbb
lods
xor
xchg
or
nop
mov
test
es
nop
and
push
xchg
or
push
cld
dec
inc
or
inc
mov
adc
out
add
fdivs
fdivrs
into
push
mov
mov
inc
aam
jle
jbe
stc
mov
aad
into
xchg
cmpsl
mov
jo
push
movsl
int
jae
mov
mov
or
aas
adc
inc
add
les
fsubrl
cwtl
das
cmp
adc
ljmp
icebp
xchg
in
jne
xchg
push
pushf
decb
mov
out
add
in
xchg
movsl
adc
repnz
std
ret
aad
xchg
mov
inc
cmp
jmp
mov
jp
push
xchg
jle
hlt
dec
sbb
xchg
lahf
inc
stos
repz
stos
cmpsl
or
mov
pushl
add
mov
movsl
cmp
outsl
test
mov
or
rcl
popf
or
gs
ja
xchg
repz
xor
mov
dec
fstp
jbe
push
hlt
xchg
or
dec
xor
mov
nop
arpl
xchg
jne
mov
push
fwait
xchg
adc
push
jecxz
jle
push
jbe
pop
xchg
inc
add
xor
out
das
out
cmpsb
dec
jg
stos
cmp
xor
insl
movsb
inc
inc
out
cmp
adc
into
sbb
rclb
pop
push
cmpsl
jne
mov
adc
rclb
outsb
sub
sahf
addl
fsub
sub
addr16
cmp
daa
add
mov
sub
leave
ss
and
mov
mov
lcall
data16
idivl
add
pop
xchg
push
fwait
sub
in
cli
xchg
mov
aam
push
iret
aaa
jne
xchg
fdivrl
mov
cmp
sahf
div
arpl
pop
cli
and
add
sub
jbe
repz
add
je
cmpsl
inc
inc
test
fwait
xchg
pop
pop
arpl
inc
xchg
xlat
inc
inc
clc
xchg
mov
push
fimuls
xchg
push
sti
test
mov
into
mov
aas
stc
push
xchg
push
shrl
pop
icebp
inc
rorb
pop
jnp
push
out
test
inc
movsb
inc
lea
lods
sub
loope
xchg
sbb
daa
jae
jbe
iret
push
or
popf
jmp
push
repnz
jl
in
arpl
scas
cmp
into
xchg
sti
dec
or
push
aam
stos
int
movsl
dec
das
cmp
mov
add
jnp
loop
add
nop
pushf
in
test
cltd
mov
andb
inc
mov
sbb
push
sbb
jae
negl
js
rorl
pusha
push
mov
imul
or
cli
mov
insl
rclb
inc
cwtl
gs
leave
add
sti
sub
jb
insb
int
add
fcmovnu
cmpsl
jbe
outsl
mov
or
push
inc
jne
cmpsl
cmp
mov
push
daa
addl
ret
fisubrs
lcall
inc
insl
mov
divb
dec
pop
into
xchg
pushf
fwait
pop
adcl
addr16
cmc
fidivl
movb
frstor
nop
jne
mov
jle
faddl
xlat
lcall
arpl
inc
push
jp
xchg
ficompl
xlat
rcr
cmp
out
subl
mov
out
popf
mov
cltd
cs
mov
lds
pop
daa
cmpsb
pushf
mov
mov
and
add
push
xor
dec
imul
xchg
cmp
mov
mov
movsl
cmp
mov
dec
out
das
jne
bnd
les
loopne
cwtl
xor
mov
and
outsl
xor
loopne
dec
pop
movsl
nop
scas
insb
add
movl
jnp
imul
dec
mov
ss
xchg
dec
dec
pop
movl
adc
sbbl
xorl
jmp
xchg
cmpsb
test
push
in
sti
lods
out
ja
cmp
add
daa
insl
les
in
xor
das
or
iret
loop
jnp
mov
scas
outsl
dec
ret
popa
xchg
test
aad
arpl
inc
in
pop
hlt
jmp
inc
xchg
and
dec
out
jl,pn
cmc
add
push
dec
mov
inc
dec
in
into
mov
sbb
push
out
ja
push
aad
push
jmp
adc
jae
nop
ret
in
dec
add
outsl
test
adc
ficoms
filds
pop
lock
pop
jo
or
movsb
daa
inc
int3
sub
ret
lret
fwait
adc
mov
pusha
mov
das
dec
xor
mov
clc
repz
shll
xchg
jno
mov
mov
adc
and
push
lcall
outsl
ret
add
mov
pop
adc
mov
jecxz
dec
cmc
push
out
or
aam
lret
mov
jecxz
pop
adc
jnp
loopne
jecxz
xchg
ja
adc
mov
adc
in
jl
mov
push
inc
scas
inc
cmpsl
fs
ret
jb
jle
mov
dec
xor
inc
push
scas
jg
das
or
lods
inc
cltd
cld
lods
sti
inc
ja
in
std
or
lods
ljmp
shll
sbb
in
popa
rorb
pop
jg
mov
jb
sbb
lods
hlt
rcrb
xor
sub
fs
fldenv
sub
push
mov
jmp
test
ja
push
mov
mov
shlb
push
push
dec
jle
test
iret
mov
in
in
loopne
in
dec
sbb
cmp
cmc
adcl
jmp
cmpsb
andb
mov
jge
pop
aam
jbe
inc
mov
out
repnz
inc
subl
pop
mov
inc
pop
jbe
cmpsl
adc
adc
xchg
std
push
shlb
dec
add
mov
mov
andl
push
and
pop
outsb
sbb
mov
movsl
loope
add
test
add
dec
daa
test
jg
lods
fimull
lea
lods
or
and
dec
adc
movsb
test
add
subl
out
addr16
imul
outsl
mov
mov
push
jle
icebp
and
push
in
mov
repz
stos
inc
out
mov
call
push
xchg
out
inc
jge
pushf
mov
notl
out
aam
stos
pop
in
lds
lods
outsl
out
adc
or
mov
sarb
ficoml
in
insl
rcrl
fsts
sar
mov
loop
ja
je
decb
pusha
cli
sarb
cmpsb
jmp
hlt
filds
dec
xchg
in
sahf
or
out
fldenv
xchg
pop
outsl
inc
dec
jecxz
or
mov
add
xor
ljmp
pop
jbe
loopne
nop
int3
add
sub
js
cmc
jo
add
fs
aam
adc
xlat
imul
cli
imul
negb
add
dec
stc
incl
lea
hlt
ficoml
xchg
jmp
mov
lock
and
fwait
sbbb
xchg
mov
add
xchg
outsb
popa
xchg
mov
jae
out
sarl
in
ret
pop
iret
fcomip
data16
dec
mov
jns
in
pop
push
inc
jbe
addr16
sub
sahf
mov
sub
addr16
test
aaa
js
sub
popa
push
jg
mov
idivb
ret
shl
xchg
xchg
das
rcrl
and
push
push
push
xchg
cmp
loop
movsl
negb
out
mov
pop
mov
adc
inc
jecxz
aam
mov
dec
jo
addr16
mov
insl
mov
inc
jbe
pop
fwait
subb
out
xlat
add
add
out
mov
enter
jbe
or
lock
mov
pop
jmp
mov
cmp
int3
aaa
cmp
out
dec
jns
shrl
push
mov
jge
int
jmp
dec
imul
arpl
pop
sarb
lds
repz
fs
pusha
divb
sbb
lcall
sub
push
cmpsl
ret
or
mov
add
or
sbbb
dec
cltd
sub
push
sbb
cmp
in
insb
pop
test
xchg
test
xor
or
cs
adc
push
sbb
pusha
cs
mov
pop
popa
xor
divl
test
jb
rcrl
dec
jbe
mov
xor
das
fimuls
pop
jb
add
push
mov
inc
ss
clc
sahf
inc
stc
add
adc
cs
mov
mov
icebp
mov
sbb
and
lock
inc
out
jo
jae
and
adc
fdivr
push
inc
sbb
outsl
iret
in
pop
mov
icebp
mov
dec
add
push
adc
xchg
dec
and
inc
xchg
jecxz
call
cmp
hlt
gs
adc
andb
lock
xchg
push
adc
sbb
loopne
pop
sub
push
mov
hlt
adc
in
cmpsl
inc
mov
push
jmp
add
in
pushfw
imul
mov
pop
mov
sbb
adc
or
fsubrs
ja
push
xchg
imul
and
adc
dec
sbb
add
inc
dec
roll
movsl
sub
add
into
mov
jae
jecxz
cmp
sbb
xchg
cmp
push
dec
push
mov
fdivrs
jl
jle
movsb
sbb
mov
mov
pop
mov
mov
fwait
sub
std
add
bound
jae
loop
fs
test
jecxz
jmp
dec
dec
adc
in
out
cmp
shrl
mov
add
cli
dec
in
gs
xor
fsubl
xlat
inc
icebp
call
xchg
mull
and
jg
pop
dec
sub
mov
adc
lea
lock
outsl
adc
add
xchg
les
inc
mov
out
lods
push
jb
rcr
mov
in
and
pop
ret
loop
mov
fwait
mov
add
insb
lods
or
jl
mov
pop
or
gs
jle
inc
push
adc
jne
insl
or
mov
sbb
les
aaa
xchg
fsts
outsb
sbb
shll
cmp
loopne
dec
xchg
fiaddl
cmpsl
add
cld
test
cmp
dec
mov
mov
push
test
push
test
ja
out
add
adc
and
sbb
mov
push
cmp
lret
adc
adc
sbb
push
inc
jo
jne
xor
push
mov
lcall
stos
sti
ja
fs
nop
cmp
and
mov
test
cld
mov
dec
jo
xor
incb
jb
neg
dec
scas
jl
outsl
mov
mov
or
xchg
inc
cmp
test
xchg
ja
mov
jae
inc
fisubrl
insb
sahf
popf
addr16
jg
aam
clc
cli
fisubrs
push
xchg
arpl
jle
aaa
sbb
jg
int
jmp
jnp
sbb
lds
sti
fsts
pop
xchg
dec
mov
cwtl
bound
ret
addb
pop
adc
add
jmp
xchg
in
jne
add
adc
shrb
or
aad
sub
pop
repz
mov
mov
lods
sub
scas
int
add
andb
pop
xchg
inc
testl
mull
pop
nopl
xchg
jns
cli
mov
rorb
push
fisttps
nop
aaa
inc
and
jp
clc
sbb
mov
adc
int
arpl
scas
ficomps
fstl
test
mov
mov
and
out
iret
ja
int
push
push
mov
jmp
out
adc
lock
cld
scas
jg
push
and
movsl
mov
les
mov
or
xchg
in
stos
int
sbb
sbb
pop
popf
cmp
mov
push
mov
out
les
inc
sub
mov
jg
aas
pop
jecxz
bound
fwait
pushf
enter
scas
aam
call
lcall
cld
sub
stc
dec
push
rcr
aad
jge
or
fisttpl
mov
imul
and
mov
jg
movsl
insl
sub
jmp
sub
stos
je
scas
ja
or
pop
mov
mov
imul
test
ss
movsl
pop
into
dec
fists
xchg
insl
bound
testb
cmc
dec
or
jmp
lds
data16
mov
mov
icebp
push
aam
sub
inc
sub
ret
push
rcll
inc
enter
test
inc
out
cmpsb
imulb
push
push
cltd
movsl
inc
test
jge
sar
das
aaa
mov
out
hlt
out
repz
cld
mov
dec
movsb
lahf
out
adcl
sbb
lods
in
fisttpl
insl
std
loop
ds
adc
fs
jmp
jne
lahf
test
fldenv
ret
jnp
inc
fdiv
fildl
xor
icebp
pop
lahf
shll
cltd
cmc
sub
adc
inc
addr16
push
mov
cmp
mov
inc
pop
jecxz
mov
pop
sbb
loopne
pop
adc
ss
mov
fdivl
cmp
cmp
cmpsl
mov
cmpsb
sbb
out
rolb
jae
cld
mov
cmp
popa
cmpsb
xchg
cmpsl
mov
test
xor
ja
xchg
dec
jne
shl
or
push
imul
pop
add
loopne
cmp
scas
ret
xlat
inc
or
rclb
stc
outsl
cltd
in
arpl
movsl
pop
push
mul
cmpsb
jns
add
xchg
dec
lret
xlat
dec
movhps
push
leave
aad
loope
mov
jns
repnz
push
jecxz
xchg
mov
call
clc
add
ret
daa
scas
xor
js
cmc
pushl
and
inc
inc
cmp
outsl
inc
pop
ret
or
xorb
adc
inc
in
xchg
pop
out
negb
icebp
dec
xchg
cli
stos
inc
mov
jmp
test
jl
popa
into
xchg
test
pop
lcall
repnz
push
imul
inc
bound
mov
out
dec
daa
pop
rcr
out
inc
inc
adc
cmp
pop
cs
es
loop
sbbb
xchg
xchg
mov
sbb
xchg
test
mov
test
push
nop
sub
dec
scas
jecxz
out
pop
shl
jae
inc
fadds
sub
sti
daa
decl
xchg
repz
repnz
mov
sub
loopne
dec
cmp
xlat
sub
out
sbb
jne
adc
scas
ja
popa
push
mov
movl
push
mov
test
lcall
fildll
xchg
pop
or
addl
dec
xorl
xchg
adc
xchg
out
sahf
jno
inc
cltd
mov
inc
and
ljmp
jnp
fistps
ret
inc
adc
pop
adc
mov
std
jle
cli
pusha
sub
xchg
cmpsb
imul
test
sub
adc
sbb
xchg
lods
jns
mov
scas
test
shll
mov
sub
in
pop
cmpl
push
mov
out
aas
rorl
ds
sub
and
packssdw
mov
in
cmc
push
inc
fnsave
out
stc
jge
dec
fistpl
dec
int
inc
pop
lahf
jl
cs
push
test
daa
pusha
sbb
out
mov
dec
add
adc
cld
jecxz
loope
in
mov
xchg
fiadds
jno
adc
sub
inc
negl
or
xchg
cmp
jge
mov
std
xchg
push
jl
leave
pop
iret
inc
adc
xchg
cmpsl
es
cmp
lcall
xchg
ret
xchg
cmp
and
aas
insl
aam
add
subb
pop
repnz
mov
sub
lea
loope
test
ret
or
test
shlb
mov
imulb
pusha
push
adc
jae
cmpsl
shlb
lods
push
popf
cmpsl
data16
inc
lahf
les
pushf
jbe
pusha
mov
mov
mov
adc
bnd
adc
das
in
repnz
xchg
push
mov
push
or
add
repnz
rol
sub
jnp,pn
addr16
and
fnstcw
and
rclb
test
xor
push
and
adc
mov
cmp
test
mov
jge
rcll
jl
cmp
push
out
push
nop
dec
sub
enter
and
ror
mov
inc
cmpsl
testb
cmpsb
mov
jno
xchg
lods
push
ds
mov
add
sub
push
inc
imul
lods
mov
scas
loop
push
into
pop
push
nop
sti
loopne
inc
and
mov
mov
xlat
or
dec
mov
xlat
int
jp
sbb
jp
xchg
repz
lret
adc
mov
cmp
push
jp
inc
jg
and
movsb
incb
lret
dec
fiaddl
jg
dec
xchg
xor
pusha
pop
jb
outsl
dec
les
jo
mov
jp
ja
scas
lahf
aaa
aad
gs
daa
movsb
fwait
ja
sub
jns
das
jecxz
lock
xor
lods
scas
outsl
cli
ja
mov
scas
enter
pusha
popl
cli
or
sbb
adc
pop
pusha
adc
dec
sbb
xchg
aad
sahf
mov
ljmp
rolb
cmpsl
pusha
rorb
sub
ret
sahf
jbe
cwtl
jge
adc
jne
jp
mov
test
jle
push
loopne
sub
in
jg
xchg
aas
push
out
sbbb
or
dec
jg
orb
xorb
mov
inc
test
mov
add
lea
insl
addb
mov
sbb
jmp
test
jmp
lahf
andb
push
stc
mov
cld
insl
aas
iret
js
and
push
pop
mov
stos
mov
in
jns
cltd
mov
sbb
xchg
xchg
jmp
jno
or
out
adc
imul
inc
nop
add
insl
out
adc
das
lods
je
mov
pop
mov
xor
adc
cltd
fwait
jno
lock
xlat
adc
add
xchg
mov
mov
fistpl
dec
add
ret
lds
in
sbb
test
pop
in
dec
loopne
mov
sub
inc
cli
push
iret
std
push
test
negb
mov
sub
sub
lret
lock
repz
dec
out
std
jne
insb
sub
out
daa
push
add
ja
andb
nop
mov
jecxz
mov
into
shll
scas
add
sub
jno
loopne
test
rcrl
inc
xchg
imul
add
mov
outsb
cmp
fiadds
inc
cld
out
cs
orb
and
out
pop
cmpsb
cs
mov
jecxz
xchg
stos
dec
inc
mov
fidivl
icebp
sti
sbb
scas
ljmp
cltd
and
mov
outsl
test
fdivrl
xor
cs
push
sahf
movb
adc
mov
popf
std
mov
loope
orb
pop
je
mov
jg,pt
popa
jp
fsubrp
fildl
aas
xchg
inc
jg
in
push
repnz
push
mov
jae
iret
icebp
ret
fdivp
outsb
mov
xchg
adc
shll
out
aaa
inc
std
mov
dec
dec
stc
add
add
andb
xchg
add
js
cmp
outsb
aad
dec
out
mov
sbb
outsl
or
xchg
xchg
push
pop
dec
or
inc
mov
xchg
cmc
mov
adc
loope
sbb
xchg
sbb
add
sbb
rorb
xchg
daa
stos
int
data16
add
and
dec
xchg
in
mov
and
jae
aas
mov
imul
repz
insl
in
andl
and
test
push
aad
and
and
xchg
imul
sub
ret
push
or
popa
pop
sbb
insl
into
aas
scas
mov
imul
pop
andb
adc
xchg
mov
mov
mov
movsl
cmpsb
mov
dec
add
mov
rolb
sarl
or
dec
daa
in
arpl
pop
ja
mov
xor
test
xor
cmp
in
mov
mov
mov
sbb
push
xchg
jge
sahf
stos
pop
ja
outsb
mov
push
test
cli
cmp
xlat
cmpl
fidivrs
pop
mov
fcoml
fdivs
out
push
pop
sbb
adc
cli
insb
cmc
test
xchg
push
fstps
iret
jl
mov
dec
xor
adc
dec
pop
mov
orl
push
mov
pop
cmp
mov
out
call
xchg
fidivl
adc
arpl
jno
sbb
jmp
in
testl
cmpsl
addr16
in
mov
xchg
cmpl
out
xchg
jbe
mov
in
mov
push
out
popf
jnp
mul
sti
and
andl
jecxz
mov
arpl
or
inc
mov
in
fistpl
or
xlat
subl
jo
mov
add
and
icebp
cmp
dec
ss
aaa
pop
xor
into
ds
stc
call
aam
mov
nop
pop
dec
jle
jecxz
insl
jge
and
inc
or
aas
push
insw
shll
scas
stos
in
push
aad
inc
cwtl
or
shlb
jno
sbb
jmp
imul
pop
cmp
cld
test
mov
stos
mov
mov
jb
lods
cmp
fdivs
scas
dec
sub
fisubs
in
repz
xchg
jl
pusha
stos
iret
rcl
and
mov
ficoml
cmc
std
daa
aaa
or
test
fsubl
ret
subb
inc
mov
mov
das
pop
cmp
mov
test
mov
adc
adcb
rorb
dec
sar
fisubs
or
test
mov
sbb
sbb
and
adc
rcr
mov
loop
or
filds
cmpsb
jo
pop
cmpsl
stc
mov
js
jae
repnz
push
cmova
mov
test
xlat
repz
pop
in
sbb
pop
fdivl
movsb
xchg
mov
daa
jno
test
cwtl
push
mov
shll
dec
mov
dec
test
push
or
mov
xchg
jmp
push
mov
or
inc
iret
rorb
xchg
jle,pn
dec
pop
dec
ss
das
hlt
jbe
xchg
popa
xor
cmp
or
pushf
pop
inc
clc
popf
ds
adcb
add
test
subl
enter
out
arpl
add
daa
mov
xchg
arpl
xchg
cmp
sbb
push
sarl
dec
mov
sub
fisubrs
jge
jecxz
repz
cli
xchg
mov
xor
jb
scas
fs
jne
sub
xor
stos
fcomp
sub
int3
ficoml
filds
sbb
mov
mov
sbb
subl
cmp
enter
stos
xchg
inc
pop
jg
cs
xchg
inc
ret
test
cmp
pushf
jecxz
movsb
pop
adc
push
out
ret
inc
sub
inc
adc
es
dec
idivl
mov
mov
out
movsb
outsl
cmp
outsb
jg
fsubr
test
fs
mov
xor
jb
enter
push
popf
inc
cmp
pop
pop
inc
xchg
or
hlt
add
imul
pop
popa
gs
roll
adcl
int3
jecxz
xchg
pop
aaa
mov
dec
sahf
int
or
lret
fstpt
filds
cs
sub
shll
shl
mov
sti
adc
adc
inc
fimuls
xchg
popf
scas
sub
adc
pop
jg
push
sbb
stos
cmp
or
pop
adc
fs
jmp
scas
repz
jmp
out
ds
xchg
jo
mov
test
cmc
insl
sbb
gs
mov
xchg
and
mov
pop
ja
mov
es
dec
push
xchg
pop
jg
cmp
lds
add
arpl
inc
bound
out
pop
push
adc
sbb
add
mov
xor
pusha
ds
outsb
clc
xchg
jbe
mov
xchg
dec
and
or
pusha
test
lock
les
xor
and
pop
or
data16
or
fs
scas
mov
into
pop
cmp
stos
shrb
rorl
ljmp
pop
lret
fsubs
or
lea
aaa
push
repnz
in
xor
pop
xchg
mov
xchg
xchg
pop
sahf
hlt
add
scas
arpl
inc
mov
sahf
mov
rcll
fldenv
sahf
addr16
aam
mulb
inc
inc
gs
pop
adc
push
inc
mov
mov
push
mul
arpl
mov
in
sahf
push
test
iret
lds
adc
outsl
and
inc
sti
mov
fsubr
scas
fisubs
dec
mov
outsb
insl
test
pop
movb
jno
jnp
ja
fisttpl
inc
aad
mov
test
sub
ljmp
mov
aad
sub
cs
popa
push
dec
into
dec
mov
lds
sbb
sbb
jne
or
test
test
mov
rorl
fwait
jle
mov
lock
stos
data16
ds
out
rcrb
lock
xor
xchg
cmp
lock
mov
push
jp
inc
inc
dec
or
push
js
add
mulb
push
pop
push
cmc
addr16
aaa
daa
lret
xor
in
mov
mov
jae
adc
shll
arpl
mov
scas
dec
push
call
mov
out
or
mulb
dec
scas
push
jns
imulb
dec
fs
cmpsb
pop
into
aad
fcmovnu
sbb
jnp
in
andl
inc
jmp
pop
mov
jo
imul
push
fdivl
jnp
test
rclb
scas
cmp
inc
movl
addr16
jmp
ds
push
pusha
cltd
pop
loop
ss
pop
divl
adc
ficoml
sahf
jge
es
divb
and
out
out
shrb
ret
negb
push
xchg
xor
inc
and
sbb
pop
mov
adc
jge
xlat
and
sahf
jae
sbb
mov
mov
add
pop
inc
mov
mov
cmc
loop
xchg
pop
lret
mov
js
mov
jne
imul
adc
xchg
dec
xchg
pop
add
pop
into
add
inc
shrb
sub
xchg
iret
test
push
push
or
lock
dec
int3
dec
into
loopne
pop
cmpl
dec
stos
xor
pop
orl
fldt
mov
adc
mov
push
dec
pop
or
pop
lret
adc
pop
add
std
pop
rolb
icebp
popf
add
push
jmp
mov
in
cmpsl
pusha
mov
inc
push
or
mov
test
test
ja
mov
fcoms
pop
xor
fiadds
jp
sahf
cmpsb
push
shlb
ret
aas
fists
insl
xor
push
pop
add
pop
xor
popa
daa
adc
add
stc
scas
stos
inc
sbbb
cmp
enter
pop
test
jns
loopne
push
out
mov
pop
addb
jns
adc
sbb
scas
mov
mov
loop
cmp
enter
xchg
rcl
mov
xchg
add
inc
and
xchg
mov
movsl
add
push
fdivrl
inc
cwtl
cmpsb
faddp
sbb
fdivl
lret
cmp
movsl
adc
cmp
mull
push
sub
push
mov
cli
xorl
push
jg
jno
lods
dec
mov
xlat
clc
pop
pop
enter
in
or
adc
shlb
rcl
stos
xchg
mov
imul
xor
xlat
mov
push
push
sbb
loope
fs
ja
cwtl
stc
int3
inc
add
pop
inc
jbe
out
iret
fbld
jge
imull
jmp
and
pop
sar
sbb
cli
out
push
add
das
test
cmc
das
les
dec
xor
push
test
ss
stc
lods
loopne
dec
jp
fsubp
sar
ja
mov
scas
aas
ret
or
or
in
loope
mov
divb
movsl
sbb
cmp
lods
push
xchg
or
mov
cmp
jne
jbe
dec
aam
jno
add
out
pop
sbb
cmc
call
loope
clc
inc
jns
xchg
call
xchg
xlat
lcall
xor
cmp
in
jmp
les
sub
jecxz
inc
into
cwtl
sub
mov
fs
dec
out
or
out
out
orl
xor
scas
imul
stos
jecxz
iret
push
imul
rcrl
and
add
jnp
dec
ror
lods
popf
mov
add
test
mov
push
adc
xchg
mov
inc
test
pop
rcl
mov
and
dec
out
fistpl
movl
rcl
mov
push
xchg
in
cmc
fucom
out
cmpsl
leave
mov
cltd
or
dec
testl
cmpl
pop
movsb
pop
shll
out
mov
nop
xchg
std
out
add
aad
mov
lret
subl
inc
push
pop
xor
call
and
jno
out
test
mov
out
loopne
xchg
add
add
stc
or
xor
rol
and
push
pusha
inc
adc
insb
xchg
cmpsb
jnp
stc
loop
inc
mov
sub
stos
add
insl
dec
les
ds
inc
or
mov
mov
out
adc
into
rol
std
dec
out
stos
dec
test
nop
imulb
xor
mov
shlb
das
jmp
xor
sti
xchg
hlt
dec
ljmp
cmp
push
popf
out
sarb
push
inc
dec
cmp
pmaxub
or
push
mov
stc
fbld
mov
stos
jae
jno
loope
mov
push
or
push
mov
sti
or
cli
test
sahf
je
scas
mov
dec
mov
xlat
scas
xor
mov
stos
rolb
aam
add
das
add
mov
xor
test
xchg
pop
mov
cs
jmp
xchg
mov
push
pop
or
notl
out
pop
dec
xor
cmp
test
lods
rolb
adc
push
out
and
mov
neg
in
out
and
jp
xor
scas
push
mov
cld
mov
sarl
cmp
aad
fadd
push
add
int
sbb
push
xchg
movsb
push
pop
add
fs
dec
les
pop
in
daa
cmpsb
inc
xor
frstpm(287
jg
popl
shr
jnp
ret
outsl
movsb
pushf
pop
jecxz
rcrb
daa
sub
in
outsl
mov
insl
pop
xchg
ret
mov
lds
dec
testb
mov
jo
jg
movsl
pop
pop
mov
push
movsb
mov
sti
cmp
jmp
jg
loop
popa
shr
pop
push
push
in
xlat
rcrl
xor
xor
fmul
xlat
inc
out
xor
mov
cmc
dec
jmp
data16
je
xchg
scas
xchg
mov
jae
mov
stos
sti
aam
cmpb
push
testl
decl
sbbb
lahf
dec
cmp
mov
shr
pop
in
es
jge
sbb
test
push
add
fs
cltd
jle
cmp
fdivs
fucompp
xcrypt-ctr
cmpsl
pop
stos
mov
jl
push
gs
mov
pop
sahf
cmpsb
jg
shrb
cs
jge
push
test
inc
mov
les
loopne
aaa
outsl
pop
clc
cmpb
sub
jg
movsb
icebp
mov
mov
mov
daa
test
pop
jb
add
mov
pop
repnz
fs
adc
jmp
jns
lods
rep
leave
sbb
neg
xchg
inc
aas
sarb
xchg
push
loopne
test
lahf
dec
ja
dec
sbbl
inc
mov
mov
xchg
mov
xchg
jmp
test
jg
scas
rcl
xchg
andb
fs
cli
pop
fidivrs
xchg
imul
push
cmp
in
and
push
inc
shlb
mov
jae
and
daa
add
cli
mov
jge
cs
dec
mov
inc
test
aas
pop
jecxz
fistl
lcall
std
outsl
fimuls
or
pop
pop
cmpsl
mov
das
mov
jae
lea
fdivrl
repz
jno
add
or
jno
addr16
xchg
cmc
out
ret
mov
cmc
mov
or
or
lods
jbe
inc
fbld
arpl
pop
mov
pop
scas
scas
mov
cmp
push
cmp
fildl
leave
push
rcrb
sbb
fmull
movsl
add
add
ja
or
popf
sahf
test
cmp
dec
adc
jl
mov
jb
rclb
xchg
jns
push
xchg
in
mov
xor
sbb
xchg
xor
xchg
xor
ja
in
xchg
adc
lret
imul
in
adc
sub
dec
lret
lods
adc
frstor
lds
pop
loopne
inc
push
or
popf
sub
inc
pop
shlb
add
icebp
push
add
fwait
aad
mov
pop
xor
lods
and
test
jae
lret
cld
rcll
mov
pop
push
addr16
sbb
aad
sarb
sti
jmp
in
jmp
stos
or
jmp
mov
or
add
xchg
dec
pop
inc
mov
mov
dec
inc
outsl
fldl
add
loop
ljmp
jg
ds
push
clc
jb
out
movsl
mov
xchg
cltd
stos
pop
xchg
mov
inc
test
test
xchg
int
pop
cwtl
add
lods
hlt
mov
push
stos
ja
mov
push
insb
xor
jecxz
shll
test
jo
push
lcall
or
add
out
movsb
xchg
fs
mov
mov
jno
or
repz
mov
mov
fisttps
fs
cmp
mov
aas
test
and
mov
jecxz
mov
cmp
test
jne
cwtl
cmpsl
shrb
ja
xchg
sahf
out
rolb
inc
dec
loope
pop
ja
push
in
or
ss
dec
dec
cmp
lds
fwait
sub
jge
push
adc
or
sbb
pop
clc
es
or
ljmp
xchg
nopl
and
sbb
pop
movsb
xchg
pop
cmp
cs
out
fwait
or
adc
aam
ffreep
jge
cmp
loop
test
sbb
adc
inc
arpl
jno
add
in
sub
xlat
or
cwtl
jecxz
test
iret
mov
mov
and
jecxz
fidivl
mov
mov
mov
adc
shrb
icebp
push
inc
cwtl
stos
stc
add
cmp
xchg
test
xlat
push
cmpsl
xchg
inc
addr16
xchg
daa
inc
int3
and
lock
outsl
shll
jb
dec
arpl
and
dec
fmull
ss
xor
hlt
mov
mov
daa
mov
mov
lds
insl
adc
mov
aad
push
notl
les
loope
xor
aad
pushf
into
add
mov
jge
outsl
jb
mov
movsl
leave
cmpsl
mov
or
insl
sahf
xchg
pop
xlat
inc
int3
and
fs
in
outsb
push
add
pop
xlat
ja
test
inc
mov
inc
ss
scas
adc
divl
adc
xchg
fisttpll
movsbl
rorb
add
xchg
fs
xchg
clc
div
nop
adc
rep
jnp
addr16
jns
and
cmp
aas
fisttpll
test
jecxz
stos
sbb
mov
or
imul
test
xchg
mov
ja
mov
cs
push
mov
jecxz,pt
jbe
pusha
iret
jb
scas
fs
test
or
sub
loope
rclb
movsl
and
or
xorl
add
jae
inc
add
stc
xor
sub
lcall
dec
shl
sbb
ja
pop
mov
testb
repz
pop
inc
jle
enter
mov
testl
mov
in
xor
xchg
mov
rcrb
add
add
mov
addl
inc
lods
push
sbb
lahf
rclb
pop
pop
movsl
test
movsb
xchg
mov
cltd
fisubl
addr16
xchg
rcrb
sub
push
pop
sti
out
out
xchg
sti
jae
fsubl
xlat
inc
mov
cmpsl
out
test
lock
ficompl
fprem
sbb
out
add
into
out
push
push
addl
test
dec
jnp
dec
ss
inc
adc
add
fisubs
inc
jne
add
add
clc
rolb
push
pop
bound
jnp
out
jae
daa
mov
loope
dec
aaa
ds
sbb
loopne
or
leave
outsl
aad
jmp
mov
jnp
aas
movsl
dec
rcr
ds
stos
push
lods
nop
std
xchg
mov
mov
nop
aam
sbb
dec
sbb
js
outsl
push
ds
hlt
inc
js
inc
or
xchg
test
ds
xlat
pop
push
jno
cmc
or
adc
fs
mov
pop
xor
sahf
push
add
pop
gs
jecxz
or
pop
jg
xor
fcmovu
mov
mov
addr16
mov
in
and
cmp
insl
rclb
test
pusha
call
fisubrs
push
scas
leave
data16
test
sub
pop
repz
jae
lds
lcall
cmpsl
iret
mov
sub
add
xor
xchg
dec
or
fldcw
jae
push
or
cmpsb
jbe
addb
daa
leave
fs
push
ret
lret
clc
les
jnp
out
shrb
pop
mov
and
sbb
loope
add
xchg
xchg
pop
imul
fstps
cli
push
add
jne
mov
mov
outsl
into
fcoml
pop
in
call
or
aaa
fildl
les
sbb
push
pop
mov
mov
repz
and
jmp
aaa
ret
push
pop
adc
push
or
inc
leave
jge,pt
dec
mov
cmp
add
jl,pn
in
enter
inc
mov
loopne
std
in
or
ret
xchg
subb
movsb
pop
cmpsl
dec
mov
lcall
add
sbb
aaa
out
cs
dec
add
mov
or
insl
xor
cli
cmpb
xchg
pop
mov
pop
aad
filds
push
jae
pop
test
cs
test
es
xchg
daa
mov
adcl
insl
xchg
arpl
shll
loopne
js
sbb
movl
xor
rorl
mov
stos
rcr
pop
sbb
in
mov
repz
gs
stc
push
fisttpll
lods
xchg
mov
lea
jbe
inc
addr16
xchg
and
mov
mov
jae
ret
aas
xor
lcall
lods
test
in
out
xchg
leave
insb
dec
pop
outsb
mov
aaa
aaa
push
cmp
insb
dec
push
mov
jecxz
data16
inc
lcall
fs
lea
out
out
cli
mov
push
xchg
test
fiadds
insb
pusha
loopne
addr16
gs
cs
rcrl
mov
pop
mov
jbe
or
sarb
jge
cmpsl
stos
daa
cmp
jae
movhlps
sub
jae
shr
lock
mov
leave
cmp
xor
imul
addr16
push
cmp
scas
xchg
das
mov
pop
in
push
xchg
jns
pop
out
imul
in
incl
lods
cmp
in
mov
ja
test
mov
cmpsl
xchg
out
test
dec
adc
sti
inc
scas
push
sbb
test
ja
cmp
rorb
xlat
jbe
jno
sti
mov
push
adc
inc
dec
mov
mov
hlt
filds
arpl
jno
sub
jno
fnstcw
icebp
cmp
imull
je
mov
and
mov
jle
fidivs
movsb
fisubs
inc
jb
adc
mov
test
testb
movsl
cmp
push
out
cltd
sub
inc
mul
aas
dec
js
fadds
rol
fdivr
loop
sti
push
in
push
outsb
sbb
xor
in
cltd
aaa
lret
lcall
mov
xchg
je
mov
loope
ds
mov
inc
pop
es
sahf
aad
fsubr
in
dec
sbb
sub
inc
jmp
and
iret
fwait
sbb
cmp
inc
dec
push
push
addb
shlb
add
test
gs
mov
cmpsl
mov
sub
outsl
sub
add
std
push
stos
cmpsl
fmulp
sbb
fadd
xchg
movsb
xchg
fwait
adc
push
fldl
outsl
xchg
pop
mov
sti
mov
pusha
cmp
cld
cli
in
mov
push
mov
cmc
xchg
shr
xchg
add
push
cld
jmp
nop
lds
test
mov
inc
sbb
xchg
out
xchg
out
testb
rcl
add
fistl
aad
fstl
xchg
jb
pop
pop
pushf
mov
je
ret
dec
fisubrl
lret
push
rolb
js
ljmp
or
inc
jecxz
dec
xor
addr16
fists
popa
push
fnstsw
push
fists
jp
sahf
insb
in
icebp
or
lcall
mov
bnd
xchg
bound
fidivrl
jmp
roll
cmc
push
out
mov
jno
adc
leave
stos
mov
lods
and
lods
andb
sbb
xor
xor
mov
sbbl
sbb
inc
and
add
jecxz
push
push
mov
inc
jnp
lea
ret
lods
cmc
cmpsl
and
imul
test
or
aad
ret
sti
test
and
mov
fs
arpl
out
cmp
add
cmc
cmp
sub
fmull
pop
loope
jecxz
inc
pop
adc
arpl
aas
dec
into
fs
xchg
inc
cmpsb
cmp
lods
cmpl
push
pop
outsl
popa
push
iret
push
divl
dec
movsl
mov
push
scas
push
pop
stos
fisubs
dec
in
push
pop
idivl
pusha
pop
das
repz
xchg
fildl
adc
scas
jbe
aad
not
jg
iret
aad
fildl
adc
jae
jo
xchg
repz
cwtl
test
rol
in
leave
xchg
xchg
andb
mov
jle
xlat
or
scas
mov
imul
jp
xor
push
icebp
xchg
cli
add
fdivs
inc
fildll
pop
fucomip
dec
jge
repnz
pop
dec
push
loopne
inc
push
cli
jle
sbb
in
pop
cmp
inc
test
ss
outsb
jmp
mov
mov
in
xlat
arpl
xor
sahf
jnp
dec
cmp
push
mov
iret
mov
mov
pop
adc
cmpsl
repnz
pop
and
mov
fs
mov
lahf
inc
lahf
ja
adc
mov
pop
mov
call
stos
psrad
cmc
inc
in
push
jne
mov
scas
out
sub
stc
lds
sarl
xchg
in
neg
xchg
xchg
mov
in
out
and
xchg
jnp
out
arpl
xchg
inc
jp
cs
adc
mov
pop
or
jge
pop
pop
jp
cld
push
sbb
jp
inc
movsb
xor
pop
sahf
imul
dec
ds
loope
ja
ja
stos
popa
add
call
cmc
jge
mov
popw
stc
andb
inc
inc
imul
movsl
xlat
faddp
pusha
das
lret
vmptrld
and
test
sub
mov
enter
test
or
adc
into
dec
push
mov
in
xor
in
je
ja
scas
leave
and
push
cld
fisubl
mov
ret
mov
or
test
insl
stos
adc
out
cltd
adc
dec
mov
scas
std
mov
push
dec
inc
xlat
or
sbb
inc
sti
stos
mov
sbb
and
imulb
cmpsl
in
nop
icebp
into
loope
sbb
pop
xlat
xabort
cmc
push
xchg
and
fs
adc
mov
xchg
lds
loop
cmp
ds
pop
scas
inc
stos
notw
cmp
aas
scas
inc
mov
adcl
dec
imul
movl
mov
dec
imul
out
xchg
sbb
cld
cmp
cmp
icebp
pop
loope
fistpll
ja
rcr
push
sbb
pop
aad
fnsave
pop
or
cmp
into
push
mov
or
enter
xchg
mov
fnsave
aaa
test
mov
outsl
sub
outsl
inc
jbe
outsb
xor
dec
jo
mov
mov
mov
pop
loope
add
loope
mov
adc
add
les
xchg
test
sbb
push
sub
inc
in
test
fcompl
call
cwtl
fimuls
add
sub
stos
jmp
out
jb
jbe
inc
pop
push
inc
and
cmp
mov
add
mov
shr
in
pop
leave
mov
icebp
inc
pop
sub
jmp
ss
adc
or
pop
pop
cmpsl
rcrl
ljmp
stos
fidivs
das
aad
cmp
jmp
lcall
cltd
add
repnz
mov
inc
mov
push
hlt
inc
aad
push
in
mov
cltd
push
push
in
mov
into
imul
mov
or
ret
stc
and
pop
dec
stos
shlb
cmp
pop
jns
cs
orl
xlat
fmuls
fimuls
sub
out
or
imul
js
jmp
daa
push
test
lret
mov
imul
mov
test
cmpb
loope
fldcw
sti
or
gs
push
sbb
xchg
and
push
push
dec
inc
xchg
xlat
xlat
jmp
decl
fadds
das
ficoms
aad
sub
mov
sub
dec
add
jmp
mov
inc
das
lahf
mov
xchg
add
outsb
mov
mov
shufps
xchg
loop
jbe
test
adc
mov
inc
pusha
loop
in
ffreep
scas
mov
xor
dec
stos
mov
sarl
lds
stc
push
cmp
sti
idiv
fwait
es
xchg
out
cmp
or
and
cmp
mov
repnz
add
ja
dec
or
sbb
jns
jb
jg
arpl
and
fcmovbe
int
xchg
ret
cwtl
mov
cs
pop
lock
sub
scas
jge
aad
xlat
ret
aaa
or
fwait
mov
sub
int
mov
cmpsb
mov
inc
and
add
int
push
inc
movsl
stc
andl
cmpsl
imul
sbb
adc
pop
jnp
sbb
mov
movsl
mov
push
roll
mov
stc
iret
jbe
and
and
imul
pop
roll
push
jnp
out
pop
sub
repz
pop
mov
adc
scas
push
adc
mov
cmp
or
out
pop
cmp
scas
notl
mov
push
mov
fs
jbe
dec
daa
ja
mov
mov
aas
ds
or
scas
adc
jnp
insl
lahf
cmp
cmp
jno
xchg
sbb
scas
inc
out
cmp
outsl
adc
orb
test
cmpsb
jg
mov
xchg
loopne
rol
push
dec
jle
sbb
loop
lcall
mov
daa
test
out
pop
sub
loop
leave
mov
mov
jp
jmp
xchg
inc
and
lahf
mov
adc
es
das
ja
jae
imul
mov
fwait
sbb
inc
pop
or
dec
sbb
inc
fisttps
in
mov
mov
inc
jne
lods
xchg
pop
inc
push
shlb
mov
jl
pop
mov
cld
push
add
xor
pop
xor
into
sub
ret
sarl
popl
cmpsb
mov
xlat
out
insl
sarb
test
std
out
mov
orl
push
test
scas
mov
fisttps
imul
out
or
mov
arpl
icebp
cld
inc
mov
pop
ret
xlat
stc
mov
xchg
cwtl
in
xchg
fbstp
or
inc
mov
add
mov
pop
lock
fisubs
ret
xchg
iret
out
out
rorb
clc
aam
mov
int3
test
cmp
mov
fistpl
hlt
sub
orl
fldt
mov
inc
mov
into
icebp
xchg
rol
cmp
mov
imul
fstpt
gs
jne
out
or
daa
ret
and
mov
jb
testb
push
test
lret
fwait
shrl
cmp
pop
dec
fldcw
movsl
inc
mov
sbb
sbb
and
ljmp
cmp
mov
stc
mov
lcall
mov
cmp
cltd
mov
cmpsl
shlb
adc
imull
js
push
mov
cmp
pop
sub
mov
iret
sub
leave
rclb
xor
das
imul
lds
cs
mov
or
out
pop
out
and
ror
mov
scas
pop
pop
mov
movl
mov
repnz
jb
inc
in
dec
sbb
push
pop
loope
hlt
push
mov
mov
fwait
pusha
xchg
add
shrl
xor
icebp
add
and
pushf
push
mov
sbb
shlb
dec
inc
push
scas
into
fldt
add
test
fimuls
repnz
dec
shlb
sbbl
lods
mov
cld
mov
push
sbb
mov
cmc
adc
adc
or
cli
hlt
mov
ds
push
sub
idivb
jnp
jmp
inc
hlt
mov
mov
mov
xlat
adc
dec
dec
pushl
sbb
rol
jae
mov
imul
dec
in
dec
into
lahf
gs
push
icebp
in
jb
inc
rorl
cmpsl
movsl
shlb
push
dec
pop
movsl
cmp
std
test
movsl
mov
aaa
jg
jae
ja
jbe
outsl
jbe
aaa
fildl
addr16
rcr
fadd
loop
mov
es
sbb
cmp
xchg
loopne
data16
jg
xor
cmp
mov
and
jne
push
pop
out
inc
inc
sub
cmc
lds
scas
cmc
adcb
rcrb
mov
push
add
cmpsl
or
and
or
sbb
pop
dec
repz
rorb
cwtl
xchg
mov
push
ds
mov
mov
popf
sub
stc
dec
fldenv
push
push
and
adc
lcall
addr16
adc
push
pop
fwait
or
addb
icebp
mov
int3
fs
iret
scas
mov
sbb
bound
enter
pusha
aad
pop
and
pop
fisubrs
ss
or
outsl
stc
pusha
pop
aaa
jo
pop
cmpl
add
imul
jo
pop
xor
jns
jge
movsb
mov
mov
dec
pop
pop
mov
aam
push
push
popa
xchg
in
xlat
rclb
fidivs
ja
fcoms
out
adcb
out
push
in
das
jnp
jno
push
ror
adc
adc
int
ret
inc
cmp
adc
adc
sub
push
lea
or
leave
xlat
les
lods
test
add
leave
aaa
adc
cmpsb
dec
add
hlt
push
push
xchg
loop
shrl
or
add
xchg
adc
les
or
cli
clc
icebp
mov
mov
scas
sub
mov
inc
cmc
jnp
fcmovne
pop
movsb
bound
fwait
cmpsb
in
dec
cmp
jle
inc
push
daa
push
cmc
test
cmpsb
in
les
fcmovnb
cmp
jl
adcl
or
outsb
ds
and
fistps
jge
std
shlb
out
loope
xor
xchg
lock
mov
jb
xchg
sbbb
cmp
jno
gs
mov
out
and
mov
insl
xor
rclb
mov
test
daa
and
rolb
scas
nop
inc
push
and
adc
adc
dec
xchg
sbb
adc
push
mov
pop
pusha
and
xchg
add
mov
cmp
addr16
nop
and
addl
jo
jle
xchg
mov
mov
inc
out
and
shr
repz
decb
lea
push
push
xchg
sti
jge
sbbl
icebp
xlat
pop
mov
push
jle
std
das
sti
xor
mov
cmpsl
mov
aam
insb
sbb
mov
ret
popf
push
data16
mov
or
out
sub
push
xor
lahf
push
push
mov
xchg
clc
movsl
xor
das
jl
outsb
push
gs
aas
in
repz
add
xlat
adc
xlat
push
pop
mov
push
inc
push
and
les
iret
jecxz
lcall
lahf
xorl
jecxz
sub
out
mov
int3
sahf
inc
dec
jnp
mov
arpl
fwait
insb
push
out
sbbl
xor
rcrb
test
sub
mov
into
push
xor
mov
or
mov
movsl
push
rorb
aaa
inc
add
jnp
aam
mov
dec
sub
movsb
fwait
test
sbb
cmpsb
add
push
push
out
pop
and
popa
mov
dec
sbb
ja
mov
inc
fisttpl
jmp
mov
inc
outsb
sti
dec
jns
cld
xchg
iret
adc
pop
cld
lret
xlat
data16
jecxz
xchg
repz
fisubl
xchg
push
mov
outsb
inc
aam
lahf
ja
inc
add
or
xor
jmp
xchg
scas
lahf
pushf
ds
scas
pusha
mov
mov
inc
xor
leave
lds
jns
mov
rcrb
adc
fcompl
repz
push
ffree
push
jecxz
lods
pop
push
sub
push
xor
dec
insl
mov
inc
dec
andl
sub
lret
jnp
pop
out
scas
cmp
arpl
aas
ja
cltd
mov
inc
icebp
daa
orl
loop
xchg
sub
cmpsb
shr
mov
rclb
jl
mov
xchg
je
pop
jp
fiaddl
leavew
aam
mov
sub
mov
negb
out
loopne
scas
stc
mov
sub
mov
mov
shrb
icebp
stos
jmp
inc
lds
mov
cltd
addb
xor
arpl
outsl
xlat
inc
mov
push
xlat
shll
inc
ds
fistl
pop
std
fldl
jmp
and
ja
dec
out
sub
lahf
mov
inc
int
and
in
cmp
mov
add
je
mov
mov
out
inc
xor
test
fmull
scas
mov
inc
push
aam
push
iret
fstp
test
aaa
rcrl
jmp
lahf
mov
int3
xor
imul
dec
lods
cld
loop
mov
push
cli
xchg
dec
out
or
jge
sbb
mov
add
inc
insl
repnz
or
or
or
inc
jecxz
dec
mov
cwtl
pop
xchg
lret
inc
ret
scas
icebp
addb
dec
and
mov
cmpsb
xor
cmp
pop
ja
icebp
mov
pop
mov
test
aas
add
test
jnp
jg
pop
xchg
nop
mov
dec
pop
jne
arpl
bound
mov
outsl
jnp
fimull
bnd
out
adc
leave
fimuls
arpl
in
sbb
mov
push
dec
inc
inc
xchg
inc
xor
pop
icebp
push
mov
ja
out
jg
insl
jae
lcall
in
scas
inc
jae
cmpsl
cmc
aam
mov
inc
jle
je
in
mov
stc
mov
xchg
push
mov
test
arpl
push
test
test
stos
push
xor
stos
clc
lahf
mov
imul
or
xchg
sbb
xorl
mov
insb
leave
out
in
add
xor
outsb
xor
fstl
pop
jo
push
fsubrp
outsl
gs
aad
xlat
arpl
ja
xchg
mov
push
shrb
cmpsb
inc
gs
les
data16
xor
inc
or
loope
stos
movsb
add
in
scas
or
mov
cmp
mov
andb
rcll
aam
mov
ret
addl
adc
nop
ficoms
insb
xor
add
jecxz
std
int3
in
xchg
jb
or
mov
ret
mov
add
jg
out
xor
movsl
mov
mov
pop
lahf
pinsrw
pop
add
xor
jg
iret
dec
add
lods
lds
sub
xchg
push
inc
addr16
sub
imul
les
mov
inc
lods
ffree
daa
outsl
das
push
dec
fsubs
aad
pop
daa
jno
aaa
dec
pop
inc
enter
pop
push
mov
mov
bound
cmp
push
rorb
cmp
jbe
test
stos
rorl
aam
test
fmuls
cmp
outsb
dec
cmp
rcr
xchg
or
sub
sahf
rcll
lahf
lds
dec
rcll
jmp
jp
cmpsl
orb
xorb
arpl
mov
cmp
mov
jl
xchg
jle
cltd
popf
hlt
adc
xchg
movsl
xor
sbb
into
pop
inc
pop
jecxz
test
imul
shrb
test
push
adc
sbb
stc
insl
inc
jge
out
ja
out
xchg
cwtl
sub
pop
cs
movsl
mov
jae
dec
mov
fisttps
fdivp
mov
lods
pusha
push
mov
xchg
pop
push
adc
int3
out
or
daa
pop
movsb
mov
pop
push
pop
lea
xchg
cmp
jge
jnp
dec
stos
xchg
ffree
stos
and
push
aam
scas
cmp
cltd
mov
test
icebp
xor
pusha
jne
xchg
imul
inc
adc
out
add
jbe
in
arpl
push
sysret
leave
ja
sbb
mov
jl
sarb
js
shrl
cld
addr16
orl
std
movsl
xchg
out
sub
xor
mov
shll
cmp
daa
int
pop
addr16
sub
jg
push
cmp
mov
lcall
rcrb
test
xchg
daa
rclb
ljmp
xchg
ret
test
ret
dec
js
imul
stc
push
dec
dec
add
xchg
fiaddl
mov
orb
inc
aad
std
mov
cli
xor
or
mov
mov
insb
mov
ret
ja
xor
sbb
test
push
dec
and
jne
inc
rorb
imul
insb
jp
notb
xlat
mov
out
movsl
lock
or
xchg
fs
mov
out
dec
adc
push
ja
inc
inc
inc
push
pop
and
jns
dec
jne
xor
push
jecxz
data16
std
jle
and
out
leave
cs
jecxz
push
stc
inc
jne
ds
push
pushf
inc
insb
mov
push
shrl
adc
xchg
push
cmp
addr16
xor
ja
xlat
fistpll
dec
cltd
out
lret
add
scas
jo
add
mov
mov
insb
push
pop
mov
add
hlt
fs
std
shl
push
jp
add
test
pusha
movsl
mov
in
and
add
sbb
jmp
jmp
out
or
mov
and
into
pop
mov
inc
jno
pop
test
lcall
jb
mov
aad
ficoms
sbbl
jbe
mov
xchg
movsb
lods
rcll
aaa
stc
jle
loopne
ljmp
mov
pop
movsb
aad
fisubrs
or
add
out
pop
mov
les
push
mov
cwtl
push
shll
push
xchg
add
xchg
cmp
pop
pop
outsb
push
mov
jmp
add
frstor
mov
xchg
fs
test
mov
sub
lahf
fwait
dec
and
sbb
adc
push
dec
les
add
push
and
cmpsb
ds
cli
dec
es
pop
hlt
mov
dec
adc
xchg
push
out
or
test
fwait
jno
or
sbb
xchg
lret
dec
int3
rol
dec
aam
sbb
xchg
fwait
lods
mov
xchg
outsl
push
das
pop
int3
sahf
xchg
mov
lods
js
adc
popa
daa
dec
xor
js
int3
shlb
and
pop
sbb
mov
outsb
mov
sub
jl
inc
mov
mov
stos
xor
dec
lods
push
jbe
out
xchg
or
lods
mov
adc
fisubl
fst
in
ljmp
lea
cwtl
add
fadd
jmp
mov
loope
lock
movsl
sub
rorb
pop
orl
imul
lahf
sbb
test
addr16
aas
jge
into
sbbb
ss
dec
or
mov
mov
stos
test
imul
push
sub
lds
jbe
sbb
loope
jmp
dec
xor
sub
push
push
int3
xor
in
js
sahf
and
lahf
dec
scas
fsubp
mov
dec
adc
sahf
lret
mov
adc
add
movsl
adc
lahf
rcl
inc
pop
push
xor
pop
push
push
loop
adc
jle
repz
jmp
ret
dec
xchg
pop
movsb
adc
inc
mov
cmp
rorb
jae
mov
mov
mov
les
faddp
fstps
iret
xlat
test
scas
xchg
lock
jp
xchg
cmp
test
dec
nop
inc
out
pop
cli
push
jg
cmpsb
push
iret
add
test
xlat
and
roll
jge
insl
adc
sbb
jne
mov
mov
xchg
fists
xchg
in
adc
pop
lea
fstpl
ljmp
jno
mov
push
les
aas
sub
add
ja
test
icebp
rcrb
lcall
fdivrl
int3
mov
push
xchg
xchg
adc
icebp
mov
in
into
mov
push
push
loop
out
dec
mov
or
inc
push
fmull
sbb
hlt
arpl
scas
idiv
les
test
sub
sahf
test
inc
enter
jl
and
push
jno
push
rolb
push
in
addr16
pop
jo
fsubp
mov
jne
out
inc
pop
lea
pop
std
inc
int
es
xchg
sahf
adc
jbe
xor
adc
add
jg
test
xchg
jle
pop
frstor
out
xor
jbe
sti
mov
pop
cmp
cli
push
stc
cs
add
in
cmp
pop
cld
and
mov
cmpsb
rcr
fldl
subb
mov
mov
aad
push
or
call
add
iret
push
int
dec
icebp
pop
add
lret
inc
jno
adc
inc
test
fisubl
or
mov
jnp
cmpsl
test
scas
cs
and
inc
xchg
mov
repz
test
sub
loopne
mov
gs
mov
insl
hlt
add
and
in
mov
xchg
cli
scas
mov
cmp
outsl
or
jb
mov
addl
mov
std
jae
mov
imul
pop
dec
cmp
rclb
inc
mov
mov
mov
in
jo
faddp
les
clc
sti
or
popf
sahf
xchg
enter
mov
push
mov
mov
push
cmpsl
adc
pop
ss
xchg
add
mov
test
shlb
loope
inc
movsl
lahf
and
jne
mov
fwait
mov
inc
mov
jb
adc
in
inc
out
roll
jl
add
inc
mov
mov
jle
and
xchg
jmp
mov
jno
jbe
cmpb
hlt
out
push
jmp
push
out
iret
les
lret
push
addr16
lea
arpl
test
scas
pop
and
lret
mov
out
mov
mov
push
inc
mov
aam
out
pop
subb
mov
push
xor
repnz
iret
jge
mov
push
xchg
rcll
jg
inc
sbb
sub
mov
jp
mov
les
mov
ficoms
mov
imul
mov
stos
add
cli
add
stc
xor
test
sub
jg
mov
mov
pop
push
cmp
add
insb
fidivs
rcrl
fidivrs
into
fcomip
mov
in
and
lret
jmp
les
outsl
idivb
cbtw
lcall
ja
adc
xor
test
pop
sbb
rcrb
mov
push
test
addr16
adc
sbb
orb
dec
pop
inc
push
jmp
arpl
add
sub
clc
lock
cmpb
pop
lea
push
out
push
fmull
test
dec
or
int
jnp
leave
or
adc
sbb
andl
inc
mov
and
stos
sbb
mov
fisttps
daa
xor
lds
mov
rep
add
xchg
push
xor
addr16
sbb
ficoms
push
xor
test
dec
fld
cli
jbe
dec
orl
call
jmp
fadd
clc
and
xchg
cmp
and
fwait
outsl
pusha
mov
addb
test
jns
pop
ds
sbb
gs
lret
sarb
loopne
jl
out
mov
fwait
gs
push
dec
cmp
pusha
jmp
pop
sbb
test
add
mov
repnz
jo
sarl
sbbl
adc
stc
add
and
inc
mov
call
jnp
jle
scas
stos
xchg
mov
sbb
push
mov
out
cwtl
xchg
sbb
aas
aad
or
leave
out
pop
inc
scas
mov
sbbb
inc
adc
into
push
loop
stos
cld
outsl
sarb
jns
jne
pop
rcl
inc
test
jbe
push
push
xchg
fbstp
out
sub
testb
dec
and
clc
add
lods
or
lahf
mov
push
arpl
mov
aam
ret
dec
and
push
les
addl
dec
insl
mov
scas
inc
mov
push
aam
mov
addr16
jmp
lret
mov
inc
fldcw
stos
imul
sub
shll
and
sub
out
test
lcall
scas
andl
jne
add
sub
pop
int3
roll
jp
aam
pop
inc
aam
jge
sub
cld
push
outsb
cwtl
pop
ja
or
pop
pop
mov
std
xchg
ljmp
add
xchg
mov
jge
jo
sbb
pop
mov
xor
ret
xchg
scas
jo
pop
dec
inc
out
movsb
pop
jnp
call
xchg
and
sub
fld
sbb
sete
aaa
and
jbe
pop
int
pop
cmp
loope
inc
test
xor
repz
shlb
xchg
mov
ret
ja
or
cld
sarl
cmpsl
scas
ret
loope
stc
sbb
jmp
dec
sbb
test
fwait
ljmp
jg
fwait
jbe
ljmp
out
scas
add
cmp
das
jecxz
xor
lods
pop
add
repz
add
sub
dec
out
xor
or
push
jle
lret
ret
out
push
fs
inc
lods
ds
ds
xchg
fdivrs
pop
ja
add
call
scas
inc
mov
pop
ss
xor
insl
cs
dec
jo
adc
mov
jne
aam
lods
pop
jb
pop
rolb
pop
scas
stos
sub
mov
jl
cmpsb
sub
sbb
sbb
shll
jbe
mov
aaa
test
pop
and
sti
cmc
adc
cmc
in
lods
loop
lahf
fidivl
inc
mov
inc
js
adc
inc
sahf
iret
psraw
lods
addr16
js
dec
scas
jg
je
sti
adcb
lock
andl
mov
inc
shll
fnsave
inc
push
repz
adc
sbb
popf
int
arpl
jo
ja
jl
xchg
cmpsb
inc
ret
mov
insl
in
into
dec
out
xlat
dec
mov
iret
jmp
sub
or
fmulp
dec
jb
hlt
push
push
out
rorb
mov
bound
aad
scas
pop
adc
push
mov
sub
inc
sub
jae
aad
lea
fimull
movsl
mov
mov
dec
repz
pop
aam
bound
idivl
testb
insb
sub
outsb
test
mov
push
sbb
dec
xchg
xor
aaa
out
icebp
dec
icebp
pusha
jl
pop
addr16
andl
jecxz
jno
jge
lods
rol
push
inc
push
arpl
addr16
mov
push
add
scas
leave
xlat
inc
adc
loop
xchg
fcomps
in
test
mul
enter
lock
adc
adc
and
ljmp
inc
jne
call
adc
cltd
push
cs
push
adc
xchg
xchg
mov
aas
aaa
sub
out
cli
dec
pusha
dec
fldt
inc
fdivs
lds
ffree
repz
popf
popa
push
mov
pop
sbb
xchg
xor
inc
jmp
ds
push
lds
rcl
cld
roll
mov
out
inc
sbbw
in
mov
xor
jb
in
push
sub
jecxz
rcr
adc
inc
out
incb
in
notb
xchg
imul
fwait
and
mov
dec
mov
sbb
cs
fstpl
xchg
xor
sbb
add
into
ja
aas
sub
xlat
mov
movl
jg
xchg
subl
ret
dec
popa
lds
mov
adc
push
into
adc
mov
push
int3
arpl
gs
sar
mov
ret
and
in
scas
leave
jecxz
fildll
inc
les
jbe
aas
inc
cmpsl
xchg
cmc
xchg
std
lods
adc
ja
insb
xchg
jb
inc
xchg
jb
cmp
mov
add
cmp
das
icebp
movsb
sbb
sub
mov
fcmovne
lds
cmp
stos
sbb
push
repz
inc
rcr
and
int3
lods
inc
pop
cmpsb
xor
cld
arpl
mov
push
xchg
or
sti
fnstsw
mov
fwait
pop
sub
jnp
xchg
addr16
mov
cmp
int
es
movsb
mov
in
mov
jecxz
inc
rclb
cmp
push
test
push
push
stos
adc
or
cs
push
push
xchg
sub
fwait
mov
jne
popf
mov
arpl
xchg
mov
mov
xor
ret
int
mov
mov
into
jg
stc
loopne
out
ffree
in
xorb
dec
in
adc
mov
xchg
lret
xchg
out
inc
andl
pop
jns
mov
ja
shll
inc
mov
push
fildl
data16
ret
cmp
lcall
xchg
and
inc
cmpb
sub
ret
aam
incb
xchg
mul
sti
stos
mov
call
das
ret
mov
jle
inc
xchg
test
adc
push
mov
dec
outsl
rcrb
or
aad
cmpsb
jb
dec
out
push
xlat
sub
add
sbb
sbb
dec
xchg
ror
ja
xchg
ds
ret
in
jecxz
in
in
pop
dec
mov
adc
sarl
pop
out
js
inc
jge
add
lds
mov
ret
jecxz
daa
loope
pop
addr16
mov
add
jae
inc
test
into
adc
jb
xchg
dec
fwait
xchg
sbb
pop
pop
xlat
cmp
push
sbb
pop
aas
inc
push
loop
dec
sub
in
xchg
test
rclb
out
jne
js
dec
cmpsl
mov
inc
rorl
aad
jno
mov
mov
imul
fcomip
mov
mov
or
loopne
es
lret
and
inc
decb
cmp
push
add
sbb
cs
cmp
jle
test
jae
xchg
xlat
insl
or
in
inc
push
add
sub
pop
sub
cmc
mov
cmp
sbb
leave
cmp
sahf
xchg
pop
add
mov
pop
movsl
dec
mov
scas
add
out
aaa
mov
in
inc
jo
pop
in
dec
std
lods
jge
mov
cltd
jg,pt
inc
dec
cmp
les
ret
insb
adc
push
les
sbb
mov
cmp
div
sbb
mov
cmp
movl
int3
lock
push
xor
into
xor
fildll
movsl
stos
clc
lods
xor
sbb
mov
and
std
jg
jno
test
lods
into
ja
xor
das
std
test
inc
cmc
test
ss
iret
sbb
es
inc
insb
aam
sbb
jmp
out
mov
jg
push
stos
push
mov
sbb
pusha
xchg
inc
cs
xlat
lods
sub
mov
lock
outsb
sahf
nop
sub
jns
leave
xlat
and
lret
mov
cmpsl
or
adc
movsl
mov
xor
sbb
inc
mov
and
push
aaa
jbe
mov
cmc
sti
dec
xlat
and
inc
cmpsb
mov
dec
adc
repz
out
or
mov
pop
fldenv
pop
mov
std
mov
mov
imul
inc
xor
out
jmp
shll
push
jge
mov
xchg
dec
sarl
rep
sbbb
cmp
mov
adc
sbb
mov
imul
data16
ss
das
mov
push
lds
pop
movsb
int
xchg
and
push
ss
cltd
push
jle
pop
inc
insl
pop
int
repz
add
test
cmpsb
push
fadds
jp
sarl
movsl
xchg
jbe
push
add
aad
std
mov
or
mov
add
cwtl
lds
adc
inc
das
sub
mov
dec
imul
cltd
pop
jmp
repnz
je
adc
sub
and
fwait
int
mov
mov
bound
push
and
shrb
or
or
jecxz
cmp
cltd
cmp
pop
addr16
rcrb
sbb
pop
rol
cs
adc
pop
lods
inc
adc
pop
jmp
inc
repz
lahf
sbb
int
cmpsl
sbb
testb
shrl
xchg
pop
adc
and
or
jmp
cld
and
xchg
jbe
aaa
inc
or
ja
aad
fidivl
jg
cmc
cmpsb
add
xchg
roll
dec
fs
cmc
jmp
test
loop
pushf
inc
sub
loope
push
mov
rclb
out
sbb
stos
jne
pop
ljmp
jg
repnz
js
ljmp
rorb
mov
test
mov
xor
and
data16
gs
push
out
sbb
movsl
out
lea
divl
mov
pop
out
shll
shlb
mov
xor
enter
mov
mov
jmp
fsubl
pop
outsl
jnp
cmp
pop
cmc
mov
inc
inc
pop
test
ds
out
int3
scas
es
lock
mov
or
imul
mov
fisubrs
test
das
lods
dec
push
adc
stos
jmp
xorb
inc
filds
loopne
scas
test
xchg
lcall
shlb
es
adc
mov
daa
sarl
sub
or
jnp
aaa
jge
cmp
xor
push
cmpsb
call
imul
mov
loope
aas
rcr
in
test
xchg
dec
jle
cmp
lahf
mov
xchg
das
daa
cmp
sub
mov
xor
mov
mov
xor
stos
dec
push
xchg
rcrb
sub
dec
lahf
test
fbstp
stos
push
data16
pop
adc
adc
icebp
stos
or
jp
sbb
mov
dec
sbb
mov
repz
fidivs
xor
enter
ja
push
clc
dec
pop
push
sahf
sbb
mov
sub
notb
scas
lret
movsb
cmp
fistpll
into
jmp
xor
adc
lahf
cmp
mov
fstpt
or
adc
lods
xlat
jmp
movsl
pop
cmp
pop
push
sbb
xor
fidivrs
pop
inc
mov
es
imul
in
fdiv
inc
jp
loop
and
and
ds
adc
xchg
mov
cmp
mov
inc
ret
adc
jbe
inc
mov
fwait
into
jnp
pop
jne
mov
decb
dec
lds
and
mov
cmp
xor
arpl
ja
mov
ret
add
aam
jb
xorb
out
jbe
aas
loop
dec
nop
repz
aas
jecxz
leave
roll
pop
mov
or
stos
adc
in
and
js
add
mov
or
divl
mov
xchg
popf
mov
lea
lods
xchg
data16
xchg
test
mov
fwait
les
dec
out
mov
fisubs
inc
outsl
test
adc
jg
out
mov
adc
subl
pop
jg
xchg
mov
or
jmp
add
ds
testb
and
outsb
push
in
sahf
fnsave
notl
mov
flds
push
sti
cmp
xchg
xchg
inc
mov
mov
inc
xchg
dec
addr16
push
in
mov
es
push
jnp
push
mov
scas
cmc
mov
ret
das
shlb
xchg
fndisi(8087
addr16
adc
pop
and
sub
lret
scas
shll
outsb
dec
clc
les
adc
dec
scas
adc
daa
or
cmpsb
inc
shll
movsl
push
lahf
inc
xchg
xchg
incb
test
push
add
imulb
sbb
pop
aad
shll
neg
and
add
or
in
and
mov
aad
cmp
push
cmp
sbb
idiv
dec
popf
movl
add
rclb
jle
lcall
xor
jecxz
dec
pop
push
filds
std
cmp
fdivr
inc
les
cmpsl
xorb
xchg
jae
sbb
outsb
dec
push
add
mov
inc
adc
ffree
sub
push
mov
mov
sub
loopne
xor
iret
stc
adc
dec
je
fidivrs
or
push
jo
sbb
inc
or
shll
inc
lock
sbb
dec
sti
insl
mov
push
loope
arpl
ds
add
stc
add
or
cmpb
mov
out
lods
push
daa
lods
mov
adc
std
mov
aam
push
add
sbb
outsb
mov
daa
ret
cmc
push
mov
push
add
incb
lds
dec
cmp
outsl
shlb
ljmp
call
shr
mov
fcmovbe
fptan
arpl
jmp
inc
add
ret
mov
cs
jnp
shl
and
movl
mov
pusha
bound
and
pop
sahf
xlat
jns
inc
data16
in
cli
mov
aam
ja
xlat
lea
mov
scas
icebp
xchg
pop
mov
addb
out
lret
xor
mov
jecxz
in
pop
sbb
ret
cmp
into
int
ret
and
cmpsb
cmp
daa
or
fs
hlt
in
inc
jae
mov
negb
cmc
add
jle
mov
shl
add
pop
xor
incb
mov
mulb
inc
cmc
insl
xchg
call
pinsrw
incb
scas
inc
jmp
or
out
sbb
cmc
jmp
mov
inc
imul
xchg
sub
movl
add
push
aam
ljmp
test
sub
sarb
mov
dec
push
xchg
dec
sub
adc
les
xchg
fs
fnstcw
test
stc
xchg
inc
adc
mov
aaa
fisubrl
adc
test
int
xor
pop
test
inc
mov
lahf
jne
add
jg
movsl
xchg
inc
cmpsb
aam
stos
add
pop
mov
inc
into
jecxz
mov
fidivrs
adc
pushf
pop
outsl
imul
cmpsb
lds
pop
ds
sbb
cmpsl
push
add
out
bound
test
xchg
fnsave
aad
daa
pop
add
xchg
pop
aaa
stos
sbb
add
and
imul
mov
jge
in
mov
cli
into
jmp
add
les
cmp
outsl
stc
dec
mov
mov
test
xor
or
sub
mov
es
imul
push
xchg
pop
cs
ja
fisubrs
and
jp
jg
clc
xor
shl
repnz
stc
dec
add
fcmovne
ret
ret
mov
icebp
jne
sbbl
js
mov
cmc
std
xor
in
in
mov
push
in
icebp
ja
sub
pop
leave
xchg
jne
movsb
cmp
in
out
je
out
jae
lret
ds
xchg
jl
cmc
std
sbb
mov
cmp
pop
test
push
xor
dec
sub
repz
push
adc
mov
sti
ljmp
inc
outsl
out
mov
lods
outsl
cmp
mov
arpl
jmp
lods
mulb
pushf
mov
xorl
lock
out
mov
mov
cs
fldenv
das
repz
rcrl
aam
pop
add
les
ja
xlat
xchg
jmp
shrl
mov
pop
inc
repz
lret
pop
out
push
push
mov
fisttpl
or
mov
outsb
test
movsb
push
mov
add
and
inc
test
in
pop
push
faddl
sub
fstl
pop
sbb
dec
jnp
jge
xor
cld
push
dec
inc
mov
imul
mov
in
pop
xor
push
pop
data16
lahf
sarb
jmp
cmp
inc
mov
fiadds
insb
shr
addr16
cmp
xchg
mov
lahf
mov
pop
pop
loopne
lea
outsb
out
adc
add
or
in
dec
sub
xchg
bnd
sti
sub
outsb
and
pop
or
std
adc
xor
cmc
inc
sahf
gs
sbb
je
inc
cmpsb
inc
push
jl
data16
pop
pop
mov
add
or
xlat
fld
add
cmpsl
lds
xlat
pop
sbb
sbb
inc
rorb
ss
cmp
ljmp
insl
or
adc
inc
jle
outsb
cli
into
sbb
cmc
mov
push
add
sbbb
xchg
add
xor
aaa
fisubrs
jb
or
xor
adc
add
or
cmp
das
pmaxub
mov
mov
lods
push
mov
cmpsb
jne
xchg
mov
pop
inc
xchg
mov
fdivl
movsl
mov
outsb
push
mov
les
sub
fimuls
les
pop
jge
fiadds
sbb
ljmp
aas
mov
inc
inc
fstpt
sahf
repnz
sti
fldcw
scas
inc
sub
addr16
andl
ljmp
gs
xlat
jnp
subl
xchg
jnp
mov
mov
cmp
pop
ss
jg
jmp
int3
jp
test
inc
mov
sbb
adc
lret
push
test
dec
sub
shrb
jmp
dec
out
pop
adc
pop
divb
mov
rdtsc
lods
lea
sbb
js
sub
mov
ret
sbb
mov
push
arpl
sahf
xor
outsl
leave
je
test
lcall
xchg
clc
jo
into
mov
mov
or
and
xchg
lahf
das
adc
mov
and
lahf
lcall
sbb
inc
mov
add
cli
in
scas
jno
inc
mov
push
and
mov
push
push
mov
int3
xchg
mov
repnz
cmp
cmp
xlat
addr16
ret
pop
push
enter
gs
jecxz
pop
add
test
iret
mov
inc
add
inc
in
inc
bnd
xchg
ljmp
inc
mov
xchg
jg
loopne
inc
inc
enter
cmpb
push
sahf
or
es
mov
insb
mov
lds
jne,pt
call
jmp
insl
out
outsb
mov
cmp
test
cmc
inc
mov
nop
xchg
insl
jle
mov
add
std
jge
pop
call
add
insb
adc
inc
adc
pop
lock
xchg
fiaddl
xchg
add
movb
adc
and
sti
pop
test
adc
add
mov
jmp
fcomi
ret
push
sahf
testl
mov
add
xchg
push
adc
mov
inc
addl
inc
out
xchg
fstl
jecxz
andl
js
std
scas
mov
das
jb
jg
inc
adc
into
dec
dec
xor
pop
daa
arpl
lret
and
bound
data16
push
add
pop
shl
scas
fwait
lahf
cmpsb
inc
imull
inc
stos
add
aaa
cmpsb
cmc
incb
add
inc
icebp
push
movsb
inc
inc
inc
add
rolb
addl
sbb
int
inc
mov
fisubrs
add
fs
test
out
mulb
rcl
push
mov
popf
flds
jg
pop
add
inc
ret
xchg
xor
pop
loopne
inc
add
cmc
xchg
jb
dec
test
in
push
bound
ret
pmaddwd
add
inc
pop
inc
aam
jg
test
xchg
cmpsb
pop
pop
add
pop
dec
push
mov
xchg
xchg
add
js
ss
sahf
xor
push
cs
inc
fninit
cmc
xor
cmp
hlt
inc
call
xchg
loop
addl
and
test
mov
pop
adc
fs
scas
cli
out
ret
mov
add
cli
inc
adc
loope
push
aas
add
fiadds
stos
cmpl
xchg
movl
popa
sbb
stos
out
pop
mov
sub
add
inc
repz
sarb
movsb
incb
cmc
push
test
adc
scas
daa
push
adc
jg
dec
inc
int3
je
pop
test
jge
aas
cld
ss
test
dec
clc
testb
cmpsb
sbb
add
stos
inc
ss
add
in
lds
pop
nop
jne
in
testb
inc
notb
inc
es
add
jne
push
pop
sti
rol
jne
shl
xchg
cs
movl
xchg
sub
mov
out
mov
mov
ret
lods
xchg
ret
inc
push
push
nop
cmc
jge
cld
and
negb
cmpsb
mov
out
add
dec
pop
cs
addr16
les
ret
xchg
mov
xchg
or
movl
xchg
fldl
aam
mov
xchg
cld
xorb
lds
test
aam
add
xchg
jge
add
cmc
pop
xchg
dec
jb
dec
andl
xchg
xchg
ss
adc
in
push
fstpt
xor
push
fwait
pop
imul
mov
incb
ret
mov
xchg
in
scas
cmp
jb
pop
push
cmc
fldl
idiv
inc
inc
pop
mov
popa
div
addr16
inc
popa
in
sub
pop
xchg
jg
mov
out
arpl
xor
pop
pop
shll
mov
in
divb
and
test
xchg
addr16
jecxz
add
inc
divb
mov
idiv
arpl
push
les
jg
inc
inc
cmpsl
in
pop
mov
xchg
inc
into
lds
pusha
int
incb
jg
mov
and
daa
sub
sub
out
xchg
pop
and
and
add
adcw
add
out
movsl
inc
and
ljmp
sar
loope
lds
notb
fs
inc
and
rorb
fiadds
inc
subb
and
mov
mov
insl
mov
icebp
repnz
jg
mov
and
sub
loopne
negb
sub
into
rcr
hlt
xchg
lds
mov
and
jg
mov
jecxz
add
mov
mov
jg
mov
incb
adc
push
jne
xchg
add
jecxz
cmpsl
inc
lds
fsts
mov
pop
jg
mov
inc
xchg
repnz
jg
mov
add
jg
mov
and
and
sub
pop
loope
jae
shl
mov
lds
mov
xchg
loope
loopne
sarl
xbegin
loope
mov
popa
mov
xchg
loop
hlt
xor
mov
push
add
movsl
sub
mov
rorb
push
jmp
ret
add
mov
ret
push
imul
adcb
shrb
inc
rcll
sahf
je
stc
out
adc
mov
movl
in
inc
test
sbb
inc
incb
xchg
xchg
jbe
aas
and
push
outsl
movl
inc
pop
aad
jb
xchg
mov
mov
notb
add
nop
mov
inc
xchg
add
cmp
pop
mov
sbb
pop
dec
in
ret
frstor
cs
lret
xor
ljmp
jno
add
push
pop
imul
and
outsl
int
subb
fnstsw
xchg
xchg
xchg
jg
mov
sbb
stos
jl
xchg
out
or
rorl
out
lcall
frstor
jg
mov
mov
fs
mov
pop
mov
scas
fnsave
mov
fcmovne
and
testb
sub
xchg
in
ljmp
jb
mov
popa
ljmp
xchg
jecxz
dec
into
xor
jg
pop
imul
rolb
fdivp
jge
and
xchg
popa
daa
pop
inc
push
ret
lds
ja
pushf
push
fisttpll
je
icebp
jle
cmp
outsb
sbb
jle
mov
shr
cmpsb
mov
sub
fcmovnb
xor
ret
les
mov
jno
test
xor
rorb
mov
xchg
jg
add
es
push
adc
mov
ucomiss
scas
repz
mov
ret
incl
test
dec
inc
movsl
dec
sub
jecxz
ret
or
mov
int
fildl
cmp
jg
sti
out
pop
lods
addl
cmc
bound
jecxz
adc
push
fldl
out
rcl
rorb
mov
inc
push
inc
inc
add
pop
pop
loope
mov
xchg
xchg
pop
ljmp
ret
xchg
push
cmc
push
incb
xchg
sbb
add
testb
pop
xchg
mov
xchg
std
rorb
faddp
jecxz
push
shl
pop
orl
fnstsw
pusha
sbb
test
jne
xchg
lahf
sub
pop
inc
fcomip
xor
mov
add
push
aad
cs
jnp
jnp
es
rol
mov
fldl
test
test
lret
sarb
inc
mov
mov
add
testb
inc
and
push
jg
jg
xlat
lods
xchg
ror
cli
lds
sti
push
inc
imul
and
lds
sbb
jo
dec
out
jo
and
xchg
insl
sbb
sub
movsl
scas
jo
popf
mov
push
inc
pop
fs
jmp
lds
push
gs
lds
push
and
mov
fdivl
push
inc
inc
add
adc
push
jle
cmc
xchg
test
inc
pop
sub
add
push
les
pop
adc
jp
or
in
scas
cmc
cmp
xchg
ret
push
inc
repnz
add
xchg
xchg
mov
fsubrl
xchg
mov
xchg
and
bound
in
sti
aas
es
addr16
ffree
and
incb
pop
push
cli
jecxz
mov
inc
add
and
lea
daa
jg
bound
mov
cmc
adc
icebp
shl
push
xor
dec
ret
or
xorb
or
push
pop
xchg
psubq
add
add
jge
jge
mov
or
ret
push
jmp
add
cmp
testl
xchg
inc
adc
mov
aam
jg
loope
faddl
les
loope
movl
pop
loope
xor
sbb
not
add
jg
addr16
inc
ja
adc
inc
loopne
fisubrs
mov
xchg
inc
add
divb
stc
jno
adc
fldl
movsl
ja
add
xor
fstl
push
and
and
pop
add
fcmovnu
popa
xchg
pop
incb
add
adc
and
dec
or
leave
lret
out
lds
push
addb
std
add
scas
addl
stc
push
xor
clc
sub
leave
and
mov
push
ds
incb
daa
cmc
or
add
pop
push
mov
inc
stc
push
jnp
addl
daa
push
loope
fcmovnbe
pop
cmc
xchg
cs
or
in
testb
add
testl
outsl
xchg
mov
in
inc
cmc
lds
faddl
push
xchg
pop
push
jb
jg
xchg
lret
in
test
nop
push
jnp
sbbl
xchg
lods
pop
loope
jp
inc
in
mov
push
jbe
mov
add
mov
stc
clc
mov
xchg
jl
add
testb
and
scas
mov
int
jg
xor
in
jbe
xchg
decb
ret
cmpsl
sub
jne
jg
int
cmc
add
scas
jle
push
inc
jo
adc
das
lds
fldl
fistpll
sbb
fisubl
in
mul
aas
and
shl
testb
xlat
push
gs
scas
jne
push
cmpl
scas
mov
add
fisubl
in
popf
add
mov
aad
ret
cmp
inc
fistl
xor
int3
mov
and
int3
dec
inc
inc
in
fcmovnb
xor
cmp
ret
scas
xor
cmp
adc
cmp
inc
inc
int3
push
inc
cmp
dec
fistl
cmpsb
clc
hlt
jae
push
sub
mov
fwait
loope
scas
sbb
jl
cmc
rorb
into
xchg
inc
imul
xchg
out
movsl
jecxz
xchg
ret
ret
cmc
jg
loope,pt
out
fildl
imul
sahf
inc
andl
enter
jg
xchg
test
mulb
mov
in
loop
cmc
imul
in
daa
in
xlat
int
incb
cli
repnz
cmp
out
mov
push
jle
jecxz
cmc
out
ret
add
fnstcw
ss
xor
pop
test
test
pusha
repz
xor
jg
cmc
decb
aas
xchg
xchg
sbb
sarl
ss
push
call
leave
ja
ss
flds
pop
xchg
lcall
pop
add
pop
add
and
incb
testb
fiadds
adc
test
jecxz
inc
notb
shll
pop
rol
notb
test
xchg
mov
add
cli
pop
xchg
xchg
rorl
ret
mov
add
xchg
push
cmc
mov
add
inc
fs
mov
mov
data16
pusha
or
and
add
push
or
inc
arpl
scas
arpl
add
out
jbe
jg
cmpsl
in
inc
loopne
push
adc
cmpb
ret
scas
xchg
mov
js
mov
jnp
sbb
scas
rcr
loopne
jg
scas
and
push
push
push
outsb
loope
add
cmpl
mov
push
cmp
cmp
addr16
xchg
push
fidivrl
cli
push
sub
inc
push
fstpt
popf
push
addr16
sbb
mov
push
fninit
push
in
lds
dec
jecxz
dec
sahf
lds
inc
cmp
jecxz
xchg
shl
in
push
lds
rolb
and
rorl
repnz
add
lods
inc
fwait
out
push
push
lock
mov
pop
inc
les
xchg
sub
mov
jbe
pop
loop
lret
inc
jg
test
repnz
test
xlat
push
aaa
pop
xchg
pop
jae
dec
mov
lock
xchg
mov
dec
cmc
shr
cmpsb
mov
inc
inc
pop
xchg
jnp
inc
fists
addb
xchg
push
xlat
add
sub
jle
pop
pop
or
mov
movb
pop
mov
cmc
add
jbe
xchg
rcrl
xlat
add
cmc
add
aam
test
and
mov
ja
inc
mov
xchg
pop
int3
or
and
sbbl
xor
xchg
jecxz
xchg
or
rorl
testl
iret
add
testb
fstp
arpl
inc
cmp
push
mov
mov
rolb
jbe
xchg
aam
jbe
xchg
inc
sti
inc
xchg
lods
add
insl
xchg
xchg
pop
inc
and
xchg
and
mov
jmp
inc
std
xchg
test
jp
mov
das
mov
pop
outsb
cmpsb
xchg
push
test
aaa
sub
test
inc
adc
outsb
test
inc
add
pop
mov
inc
scas
push
mov
adc
inc
push
cmp
jge
sar
lods
cmp
push
add
inc
mov
les
mov
cmp
cmc
pop
inc
jg
scas
mov
add
shl
jg
jns
push
jbe
addb
add
adc
add
inc
stc
xchg
jbe
xchg
push
jbe
xchg
mov
addr16
pop
jg
imul
inc
jecxz
pop
jp
bound
xchg
jle
in
test
adc
xor
xchg
mov
inc
adcb
jecxz
adc
add
les
push
pop
data16
inc
inc
fstl
addl
inc
rolb
cmc
xchg
addl
inc
ss
xchg
and
fidivrl
sbb
mov
cmpsb
push
or
adc
ret
xchg
jl
insl
add
jmp
pusha
faddl
jecxz
or
fisttpl
pushf
jl
testb
loop
xor
push
jp
fists
scas
add
cmpl
inc
fnstcw
popf
movl
push
push
push
jecxz
pop
push
movsl
inc
add
adc
push
pop
jg
push
adc
cmp
ret
adc
ret
in
push
jbe
cmc
cmpb
cmc
xchg
addb
ret
and
add
sub
add
mov
or
sbb
cmp
fsubs
xor
xchg
mov
negl
jp
loop
fidivs
scas
pop
sub
xchg
jecxz
pusha
and
orl
xchg
sbbl
xchg
adc
incb
ret
bound
inc
mov
inc
fimuls
test
push
mov
lds
rolb
mov
xor
sbb
cs
sahf
fwait
pminsw
jg
imul
fwait
push
mov
xor
data16
fwait
cli
mov
imul
sub
push
and
jle
sahf
and
testb
inc
inc
cmp
mov
add
mov
jp
insl
ja
repz
cmpsb
ss
adc
fnsave
jg
outsl
xchg
cmpsb
mov
mov
test
add
jl
ret
push
arpl
mov
in
xchg
cmc
scas
dec
jb
jo
mov
ret
ds
out
cmc
sbbl
dec
testb
aad
or
xorb
cmpsb
xchg
addl
nop
scas
add
dec
jecxz
inc
xchg
sbb
mov
jl
icebp
mov
pop
mov
push
movsl
loope
cli
movsl
repnz
movl
in
sbb
xchg
unpcklps
or
icebp
mov
es
mov
stos
mov
add
rolb
lret
ret
loop
in
xchg
fcmovnb
inc
mov
notb
out
mov
sub
adc
sub
lea
push
pushw
sbb
ret
mov
xor
test
bound
aad
inc
push
in
dec
sub
dec
dec
dec
inc
and
cmpsb
push
cmp
inc
push
sub
sub
ret
addr16
test
out
sbb
ja
ficomps
arpl
int
push
or
idivb
jecxz
xchg
outsl
adc
inc
inc
jg
xchg
sbb
nop
mov
repz
testb
dec
addl
and
mov
xchg
cmp
xchg
fdivr
add
in
xchg
adc
xchg
movsl
xchg
bound
addl
andb
inc
fst
fistpl
dec
pop
ffree
fucomip
call
push
adc
scas
sarl
aas
das
add
out
add
stos
fiaddl
aam
sub
setle
inc
cmp
cmp
cmp
cmpsl
inc
jecxz
insl
ret
xchg
push
incb
xchg
ret
into
mov
lds
shrb
test
cmpsb
sub
jae
rol
mov
xor
sar
cmp
gs
icebp
test
push
inc
lods
xchg
pop
sub
inc
cmp
push
jg
add
out
data16
je
mov
mov
xlat
cmp
and
js
inc
jg
sbb
out
mov
loopnew
test
imulb
ret
xchg
cmp
xor
in
testb
shrb
ret
jno
add
inc
xor
and
out
sub
out
call
add
push
in
cmpsb
cmpsb
loop
test
repz
mov
lahf
ds
mov
mov
loopne
loopne
jne
add
aad
add
inc
jb
xchg
mov
mov
and
inc
cli
xlat
popf
push
jmp
inc
pusha
cwtl
push
dec
ret
inc
shlb
insl
addr16
or
push
test
dec
bound
cmp
ret
xchg
mov
pop
cmpsl
in
repnz
jg
jg
fisubs
addr16
mov
test
push
jecxz
faddl
mov
add
mov
faddp
jge
cmc
test
jecxz
push
cmpsb
hlt
jecxz
cmp
inc
jg
scas
movl
sub
mov
sub
mov
pop
adc
loopne
out
stos
mov
add
xchg
fadd
pop
pop
mov
hlt
lods
sbb
push
jecxz
pop
jae
out
arpl
and
ja
mov
inc
fdivl
clc
mov
xchg
cmp
test
test
jg
push
pop
iret
mov
xorl
rolw
bound
cmpsl
aaa
loope
push
push
and
in
mov
dec
cmpsb
andl
xchg
js
inc
jg
cmp
ret
pop
in
xchg
push
or
sar
xor
subl
ret
sbb
and
cmpsb
les
test
sub
sti
xchg
pop
aad
in
movsb
daa
arpl
testb
testl
imul
ret
add
or
cmpl
repnz
pop
inc
jno
icebp
shlb
jmp
adc
shll
test
cli
ret
xchg
mov
xchg
mov
addr16
jg
cmpsl
fwait
mov
cwtl
ja
push
jbe
aam
lds
scas
lcall
xchg
mov
push
jg
push
fsubrl
mov
fadds
addr16
addr16
mov
lock
testb
cmpsl
fwait
ret
mov
imul
repz
pop
out
les
test
mov
pop
pop
movsb
testb
inc
add
hlt
push
and
cli
push
ja
jecxz
in
in
inc
int
pop
cmp
xchg
lahf
push
icebp
xchg
sbb
mov
pop
adc
test
mulb
filds
xchg
cmpsb
in
jl
aam
test
roll
dec
jmp
mov
insl
jno
jecxz
push
testb
test
xchg
clc
xor
or
ror
mov
mov
cltd
cld
pop
rcrl
mov
dec
mov
loopne
push
or
jp
shll
and
push
aad
xlat
push
inc
sub
out
cmp
mov
stos
ja
mov
mov
jp
mov
push
lsl
outsl
cmp
into
ds
fnstsw
sub
ljmp
push
jo
enter
int
std
xchg
shl
mov
fwait
and
scas
adc
mov
xchg
add
push
mov
xor
stos
je
loop
sub
xchg
sub
jle
es
stos
mov
enter
notl
adc
fiadds
aaa
mov
mov
sbb
dec
stos
xchg
inc
cmpsb
in
lods
xor
outsb
jo
test
fbld
repz
xor
lock
xor
xor
sbb
in
pushf
pop
lahf
jl
add
aam
jae
add
pusha
aas
repz
mov
lods
mov
sub
cmp
jp
push
xchg
cmp
adc
mov
pop
mov
pop
inc
dec
mov
jg
pop
loope
mov
shrl
lret
scas
mov
or
dec
ret
les
inc
sbb
push
sbb
fistl
inc
imul
xor
ficompl
test
dec
scas
idiv
out
and
fstpl
in
mov
sub
xor
int3
sub
mov
push
lds
mov
pushl
add
jne
pushf
test
cmp
movb
pusha
push
push
lea
jb
push
sub
jbe
stc
cmp
pushf
lea
ja
inc
shr
add
call
lcall
dec
mov
cmpsb
adc
push
mov
mov
imul
loopne
and
fnstenv
cmp
je
jle
cld
xchg
negb
jns
and
pop
movsl
inc
std
shll
mov
jns
push
movsb
push
pop
loope
mov
xor
js
dec
sub
push
jbe
cli
xchg
or
inc
repnz
mov
and
and
push
xchg
hlt
xor
mov
pop
ret
pushf
cld
cmp
pusha
pop
stos
nop
push
sub
mov
imul
mov
dec
das
jp
popf
test
sar
adc
jl,pn
pop
pushf
aas
addr16
cli
pushf
cld
adc
leave
leave
pop
cmpsb
push
adc
sbb
and
dec
lea
test
jno
cwtl
jl
mov
mov
pushw
mov
push
addr16
rolb
mov
imul
and
test
pop
hlt
call
pusha
mov
jmp
adc
pushf
call
add
push
adc
jb
in
pop
aam
movsl
xor
aad
lret
das
inc
cmpsl
mov
repz
ror
std
cmp
xchg
loop
or
pop
jbe
sbb
mov
movsl
lahf
aam
pop
loopne
fstps
repz
arpl
or
pusha
aas
jecxz
loope
xchg
push
arpl
fdivr
dec
stos
jg
sarb
push
jnp
addr16
mov
sub
xchg
push
xor
cmp
fistps
inc
mov
jmp
bt
cmp
mov
push
lea
jne
pushf
pushf
mov
movw
inc
pusha
inc
pushf
push
push
lea
jmp
xchg
fcmovnb
in
mull
sbb
outsl
push
add
jno
lret
sub
push
into
mov
test
cmp
xchg
rcll
jp
push
sub
sbb
repnz
fs
repnz
popa
addr16
mov
fnsave
in
sti
cmp
jns
lret
mov
xchg
mov
out
and
mov
cmp
sbb
inc
cmpsb
jns
xchg
cli
mov
push
in
sets
pushl
lea
push
lea
js
push
push
pushl
pushl
popl
pushf
not
pusha
mov
pusha
seta
jmp
adc
call
stos
movb
mov
lea
call
pusha
add
pushf
pushl
mov
lea
jmp
push
jmp
inc
mov
dec
push
mov
fildll
jge
dec
sarl
pop
mov
les
mov
addr16
push
and
insl
inc
enter
dec
pushf
cli
sti
imul
lret
cld
lret
xchg
hlt
dec
pop
cmp
lea
dec
jne
test
cwtl
sti
je
aam
sub
inc
stos
jle
sti
and
add
pop
mov
fsubl
js
push
cmp
sub
lret
ja
in
fdivp
xor
mov
int3
mov
jg
aam
call
and
lea
call
push
pushf
pusha
lea
jb
pusha
pusha
pushl
ret
outsl
scas
cs
jecxz
cmc
push
imul
imul
push
cs
jbe
subl
mov
fmul
clc
inc
in
xchg
jns
aas
js
out
sbb
and
pop
popf
int
mov
cmpsb
inc
xor
arpl
ja
test
insl
pop
lods
shll
adc
popa
mull
sub
mov
xlat
inc
adcl
aam
loopne
xchg
ljmp
sbb
inc
adc
push
add
xchg
jae
xchg
es
or
pop
insl
mov
mov
bound
mov
mov
pop
shlb
xchg
pop
or
push
lret
lods
sti
push
out
les
cs
mov
sti
cmp
testl
add
add
mov
insb
imul
xor
pop
subb
xor
test
lds
pop
lods
xchg
aaa
je
inc
lret
jno
or
cmp
call
pop
inc
add
idivb
or
mov
insl
sbb
movw
call
mov
arpl
add
out
mov
movsb
xchg
cmp
mull
jne
or
sub
outsb
cwtl
xchg
lock
adc
mov
out
adc
sub
pusha
sbb
popa
cli
add
shlb
insb
pop
shl
jae
add
bound
add
sbb
in
lahf
test
xor
std
leave
xor
lcall
push
lods
icebp
dec
jo
or
mov
insl
pop
lds
sub
cmc
shl
mov
btr
mov
rcl
mov
clc
mov
cmp
sub
bt
xor
push
inc
mov
bt
movb
ror
push
pushf
push
cmc
mov
sub
js
bt
add
cmc
bt
bt
jmp
gs
ret
dec
adc
je
inc
daa
das
or
pop
push
mov
mov
mov
call
arpl
lcall
mov
outsb
test
ja
mov
ja
mov
pushl
sbbb
adc
adc
inc
ret
dec
jb
nop
dec
push
fistpl
mov
mov
jnp
testb
and
test
xchg
push
insl
imul
negb
ss
jae
ljmp
lret
lods
dec
jp
in
push
repz
adc
dec
icebp
out
add
add
dec
push
lret
push
je
vcvtsi2sdl
dec
pop
cmp
push
jns
hlt
push
jp
cmp
inc
loopne
scas
sub
insb
cli
stos
daa
or
mov
test
and
out
push
sbb
jns
leave
jecxz
aam
fwait
ds
cmp
lea
ljmp
pop
jo
add
stos
insb
leave
push
loope
jne
sbb
fwait
pop
mov
outsl
movb
bt
imul
cmc
pusha
add
mov
lea
jmp
inc
jo
adc
dec
pop
std
xlat
test
xchg
push
add
fstps
and
mov
cmp
mov
mov
pop
mov
dec
repz
mov
jne
pop
push
test
inc
mov
sti
mov
cmp
in
sti
dec
pop
mov
movsb
gs
outsb
ret
sub
pop
sub
rcll
push
icebp
scas
inc
or
and
push
lcall
test
outsl
mov
pop
hlt
ljmp
into
inc
scas
cmp
xor
roll
mov
push
outsb
flds
cltd
cmp
insl
dec
dec
imul
lret
ja
out
push
jmp
or
test
orl
lods
icebp
jne
lret
mov
cmp
add
cmp
push
daa
mov
sarb
stos
cld
pop
ret
and
ret
out
fisttps
push
fcoml
mov
ss
ss
test
fsubs
mov
cmc
enter
adcl
fcoms
or
xchg
sub
xchg
into
adc
imul
add
sbb
add
pop
loope
lods
cmp
inc
rcrb
arpl
dec
push
nop
std
jl
loope
stos
hlt
sub
mov
dec
insl
push
lea
xchg
xchg
inc
cltd
push
sub
jbe
bound
dec
mov
jp,pt
add
bound
rcll
fldcw
movsb
data16
inc
jecxz
push
cmp
repnz
flds
mov
add
mov
cmp
fs
iret
data16
jecxz
mov
lahf
div
cmpl
testb
jb
add
outsl
lds
and
adc
stos
ss
pop
and
adc
int3
pop
dec
adc
xor
xchg
adc
push
repz
bound
mov
mov
cld
sbb
adc
or
in
push
xchg
gs
and
aam
jle
repz
inc
mov
jb
cld
jl
push
dec
mov
xlat
lea
pop
ljmp
lcall
data16
aam
mov
shlb
mov
xchg
jo
adc
sbb
repnz
clc
lods
lcall
aad
aad
test
loop
icebp
stc
dec
fwait
popa
mov
subb
leave
inc
push
adc
jecxz
push
adc
inc
sti
scas
stos
cmp
pop
adc
movsb
fs
pop
push
insl
ret
push
je
test
mov
push
pop
lods
sti
mov
shrb
mov
insl
rcl
cmp
xlat
roll
loop
mulb
mov
push
pop
xlat
fs
icebp
bound
dec
mov
sub
add
jns
cmp
popa
idivl
hlt
jl
cltd
test
sahf
daa
inc
or
negb
into
in
mov
movsl
into
cmc
sbb
cmc
cmpl
rorl
fwait
in
add
ljmp
dec
or
mov
push
mov
lds
aam
fisubl
pushf
test
pushl
lea
je
call
pushf
movl
push
movl
pushf
lea
jmp
push
outsb
push
test
jb
inc
scas
xor
lea
sarl
sub
xchg
or
cmc
dec
loopne
dec
and
pop
repnz
push
enter
mov
push
push
fs
cmp
jmp
pusha
scas
popa
ljmp
leave
insb
mov
inc
repnz
cltd
or
in
or
lret
mov
ffreep
jle
mov
rcrl
pop
mov
push
pop
push
pusha
movl
push
jmp
pushl
call
mov
jns
lret
pop
or
jne
cmp
cltd
sbb
inc
pop
int3
adc
push
pusha
push
sbb
push
and
stc
ret
adc
cmp
dec
aam
gs
xor
xor
aas
push
aam
pushf
pusha
loopne
dec
add
jmp
sub
lods
add
arpl
sub
fs
mov
dec
fnstsw
push
adc
cmpsl
or
lods
mov
push
xor
data16
clc
adc
cmp
int
pop
or
cld
filds
dec
jno
movsb
mov
adc
inc
hlt
cltd
sub
cli
pop
lods
dec
ds
ljmp
out
jnp
jge
adc
bound
imul
rcrb
pop
ret
dec
push
lcall
imul
xor
shll
ret
repz
std
add
cli
outsb
in
push
lret
inc
cld
inc
test
out
dec
adc
in
add
and
jle
decl
add
ss
js
sub
insl
in
push
shlb
dec
mov
sub
in
pop
aad
fdivl
dec
sub
dec
mov
fwait
cmp
dec
filds
cmp
clc
cld
cmp
enter
inc
movsl
sub
dec
je
shrl
dec
mov
fisubrs
jne
inc
and
cmc
jae
cmp
test
rcll
or
cmp
inc
aad
shlb
xor
cmp
test
inc
adcl
stos
lret
xor
mov
aaa
or
or
xchg
mov
push
addl
inc
jb
or
xor
and
mov
shll
mov
movsb
fisttpll
jg
add
xor
fcmovb
sarl
inc
add
out
test
add
add
pushf
icebp
lds
flds
mov
shrb
enter
fiaddl
add
mov
cmp
mov
mov
and
enter
leave
inc
adc
sbb
call
shlb
lahf
jno
scas
jl
stos
xlat
cwtl
mov
rcrl
addr16
dec
sub
mov
pusha
roll
arpl
stc
add
js
fs
fiaddl
push
or
push
xor
cmp
jle,pn
movsb
mov
out
int3
addl
mov
jecxz
int3
jp
cli
and
popa
loope
fcompl
dec
cmp
test
lret
inc
mov
add
xchg
and
or
push
xchg
imul
cltd
fnstenv
push
loope
or
sub
icebp
sarb
push
out
stos
or
xchg
out
lahf
cwtl
mov
jbe
sarb
xchg
stc
outsb
mov
inc
fnsave
loop
insl
in
setp
push
call
pop
cmp
cmpsl
and
and
ret
ljmp
das
test
xor
fstpl
push
je
xchg
mov
out
sbb
scas
cltd
inc
add
pop
ret
mov
dec
or
mov
xchg
je
and
jns
scas
add
mov
push
push
jne
adc
bound
imul
iret
jbe
dec
xor
xchg
inc
mov
inc
pop
mov
js
push
and
js
mov
sub
push
std
sub
mov
das
mov
imul
mov
mov
push
sub
pop
push
push
mov
xor
mov
out
test
mov
dec
xor
imul
fstl
push
sub
in
shlb
add
cmp
pop
out
ds
movsb
jne
sub
mov
fildl
inc
mov
push
xor
repz
pop
cld
push
shlb
jp
movsl
xchg
aaa
xchg
adc
loopne
push
cld
push
cmp
cs
add
cmpl
mov
in
cs
mov
inc
mov
jp
aas
andb
in
inc
in
adc
leave
inc
lock
les
jle
jmp
cmp
insb
lcall
in
clc
rclb
outsl
ret
pop
xor
les
push
mov
lret
movsl
or
ror
sub
cmp
punpckhbw
cmp
insl
scas
mov
sub
mov
jecxz
mov
loope
hlt
call
dec
xchg
mov
outsb
bnd
andb
cmp
aam
loopne
add
mov
sbb
fldt
adcb
pop
dec
jp
inc
repnz
or
mov
andb
ljmp
pop
stos
les
mov
mulb
pop
lret
or
ja
adcl
and
jl
add
mov
xchg
jne
roll
cwtl
push
pop
jns
lock
adc
icebp
movups
sbb
cmp
push
xor
push
pop
shrl
loopne
fdiv
out
cmp
fcmove
je
add
push
jle
rolb
lahf
pop
stos
mov
test
push
cmp
les
in
fdivs
and
test
xchg
jo
xorl
mov
jo
jecxz
lea
int
add
dec
fdivrs
sbb
inc
fs
mov
int
flds
mov
jg
pop
sbb
cltd
int3
inc
loop
roll
sti
jmp
cmp
mov
or
jl
ficompl
adc
cmp
loop
dec
mov
cmp
mov
sti
jo
imul
mov
cmpsb
jne
jle
fadds
mov
imul
dec
inc
sub
adc
lock
lods
je
or
sub
mov
imul
mov
or
adcb
add
jmp
and
imul
dec
mov
or
int
inc
sub
add
mov
lock
pop
lods
inc
cmp
mov
testl
pusha
scas
in
test
jp
mov
std
aad
xlat
inc
xlat
fstpl
rep
cs
imulb
cmpsb
in
cmpsb
addr16
dec
in
adc
mov
mov
xlat
xor
mov
inc
int3
pop
sbb
cmpsl
ljmp
mov
repz
mov
pop
sbb
inc
jb
pusha
test
test
cmpb
call
jmp
popf
in
or
out
pop
push
stos
or
repz
ds
clc
and
in
cmp
dec
pop
hlt
push
pop
sti
and
das
jl
pop
push
cli
or
xchg
mov
cmpsl
mov
cltd
les
cmp
cmp
xchg
or
popf
sub
outsl
stos
sub
idiv
fxch
aad
addb
mov
repnz
cli
dec
outsl
cltd
mov
cmp
inc
call
lods
add
shll
adc
xor
mov
pop
mov
js
add
push
das
mov
lret
inc
mov
andl
sbb
dec
push
sbb
daa
sbb
mov
imul
pop
dec
gs
pop
aam
adc
pop
cmpsb
dec
stc
sbb
xor
shlb
mov
int
fcomps
ljmp
or
sub
and
cmp
sub
cmpsl
mov
popa
xlat
sub
pxor
cmc
fbld
mov
into
lock
je
cmp
jmp
cmc
push
cmp
call
jns
push
xor
lcall
push
cmc
mov
and
jmp
cmc
xlat
inc
adc
lea
mul
sarl
int3
jae
or
xor
mov
das
aam
pop
fwait
xor
fs
jb
stos
push
add
mov
cmp
arpl
sub
aaa
add
sbb
cmp
cld
push
movsb
push
mov
int3
dec
jecxz
sbb
or
cmp
inc
ss
test
stos
imul
add
xchg
mov
add
and
adc
jmp
jmp
pushf
movb
dec
cmc
test
bt
call
ja
sub
push
popf
pop
jb
iret
cmp
add
test
pushf
inc
lahf
dec
cmp
fimull
and
fdivrs
sub
pusha
cmc
and
jnp
nop
adc
cmp
js
inc
push
mov
das
out
dec
stos
shlb
mov
stos
or
inc
mov
stc
inc
test
stos
clc
mov
mov
dec
mov
cmp
mov
repnz
lods
adc
ds
xlat
inc
iret
xchg
inc
jle
and
and
data16
psllw
orl
cmp
adc
mov
stos
cmp
xchg
data16
clc
mov
jns
andb
in
jg
or
outsl
sti
daa
inc
jge
mov
xlat
fisttps
dec
imul
and
stos
and
inc
inc
mov
cmp
aas
or
push
xor
aam
mov
mov
mov
aad
ret
or
ficoml
xor
lods
inc
loopne
ret
cmp
jp
cwtl
jmp
lods
sub
xor
and
fimuls
inc
pop
ret
iret
sahf
push
test
mov
mov
mov
push
jecxz
mov
insb
aas
sbb
in
cmc
and
mov
rcll
pop
push
push
push
adc
sarb
lahf
cmp
addl
orb
ja
das
in
shll
int
jns
mov
rsm
pushf
mov
pushf
lea
jmp
call
bsf
sbb
mov
test
sub
call
sub
cmc
test
test
cmp
pusha
pusha
mov
jmp
call
push
lahf
xchg
pop
adc
adc
movl
jb
cwtl
xor
sbb
jbe
xor
mov
hlt
adc
jae
inc
push
pop
sti
mov
xor
loop
jnp
roll
test
xor
cmp
jecxz
adc
mov
jo
fs
test
push
sbb
cmp
test
daa
stos
xor
or
sub
xor
lcall
jp
aad
inc
fdivr
mov
mov
cmp
test
mov
pop
xor
push
jne
pushf
pushf
pusha
inc
push
push
call
pop
sahf
xchg
ret
jl
lret
rcrl
pop
dec
sarl
adc
loope
mov
jns
fdivs
aaa
xchg
arpl
and
pop
xor
test
inc
repnz
data16
sbb
push
xchg
lret
dec
jbe
dec
lods
push
lods
jb
sub
mov
lahf
and
inc
out
movsl
data16
mov
out
stc
shrl
aam
sti
movl
pusha
jmp
pushf
lea
jbe
je
cmc
dec
shrd
mov
cmp
movsbw
add
pusha
neg
inc
call
movzwl
sub
jmp
or
sbb
cs
jae
inc
sbb
test
dec
icebp
aam
jle
repz
fcoms
lea
lret
push
nop
adc
fisubrs
ret
pop
iret
mov
and
lods
mov
sbb
cs
inc
int
test
inc
and
dec
xchg
cmc
xor
and
add
mov
cmpsb
sbb
mov
or
xchg
cmpsb
lock
adc
lahf
push
loope
jae
test
repz
mov
inc
mov
out
adc
aad
cltd
idivb
pop
cmpsb
push
in
pop
push
dec
testb
pop
push
sub
push
fisubrl
push
ret
inc
xchg
sarl
ret
shrl
clc
test
daa
add
pop
std
xchg
cmpsb
movl
add
movl
addb
jo
pop
push
imul
mov
negl
das
int3
ret
jbe
cmpsb
and
inc
clc
flds
cltd
clc
iret
lcall
jp
pusha
in
add
inc
jnp
aad
inc
clc
das
inc
jns
loope
sbb
movb
daa
in
lock
push
fwait
jmp
daa
mov
daa
lahf
das
and
adc
test
test
test
test
out
xchg
fldl
jnp
and
add
out
cmp
scas
cmp
in
mov
pop
call
cmpb
lret
jo
pop
jno
xchg
jno
push
adc
iret
sbb
cmp
or
inc
mov
shrb
les
aas
xchg
cli
rcll
adcl
lock
cli
aas
cmpsb
mov
pop
rorl
push
mov
adc
pop
loope
add
sbbl
and
in
lret
pop
mov
popa
icebp
mov
pop
inc
jle
mov
ret
dec
push
mov
test
ja
test
pop
rorl
xchg
test
std
push
in
or
test
mov
xchg
mov
pop
test
je
fsub
cmpsb
bound
aad
mov
insl
test
je
faddl
add
fisubrs
mov
xchg
je
add
mov
cli
mov
and
xchg
loope
adc
jle
xchg
mov
add
mov
adc
aam
jle
lahf
mov
push
inc
push
ret
add
shlb
pop
jmp
jle
sbb
mov
in
ret
mov
shrb
out
cmp
enter
cli
addr16
fstpt
push
gs
nop
mov
push
cmp
pop
xor
out
scas
addr16
mov
out
and
mov
mov
jmp
fcmovb
xor
pop
mov
xor
push
insl
and
out
pop
lds
arpl
test
pop
jns
mov
xchg
pop
mov
cmp
cs
mov
cli
addr16
mov
gs
push
dec
addr16
scas
out
pop
loope
jmp
jg
rol
sbb
sbb
hlt
test
ret
fs
cmp
dec
movsl
xchg
and
dec
int
dec
bound
mov
js
and
pop
popa
ret
mov
addr16
mov
inc
test
push
movsb
sbb
inc
fstpt
sbb
sbbl
out
inc
mov
mov
jnp
pop
popf
jge
xchg
gs
push
pop
lods
in
rol
sub
movsl
xchg
movsb
xor
adc
sub
mov
es
addr16
cmp
sbb
jo
and
loope
inc
cmpsb
xor
cli
xor
or
out
ret
sbb
loopne
fcoms
mov
push
rclb
arpl
and
cmc
cmp
test
out
sbb
cmp
sbb
loopne
xchg
loopnew
in
es
xchg
and
addr16
xor
inc
neg
sub
loop
test
pop
adc
dec
xchg
es
and
xchg
jno
ret
or
cwtl
scas
xchg
mov
and
mov
mov
jl
adc
out
pusha
cmp
fs
in
mov
test
and
stos
inc
sbb
cmp
jne
or
sbb
mov
lret
sarb
ljmp
cmp
dec
in
es
mov
lret
ret
arpl
push
neg
push
mov
out
je
lcall
push
pop
sbb
mov
repz
cmp
cmp
js
call
stc
psubw
sbb
movsb
and
out
lcall
mov
idiv
jle
fdivrs
pushf
divl
bound
jbe
loopew
cmpsl
andb
mul
dec
pop
mov
sub
xchg
jb
mov
je
xchg
scas
mov
sub
pop
addr16
mov
enter
mov
or
notl
test
shl
pop
in
jg
xchg
sbb
clc
divl
inc
or
add
insl
pop
dec
adc
and
mov
loop
and
inc
out
addr16
mov
daa
sbb
filds
cmp
fildll
sahf
divl
cmp
or
mov
dec
mov
mov
lock
lahf
mov
clc
imul
mov
mov
or
or
sbb
mov
cmp
fsubrs
sub
nop
loop
call
popa
inc
nop
mov
stos
movsl
test
shll
orl
ret
stos
je
lret
mov
push
dec
mov
pop
inc
adc
sbbl
ret
test
xchg
je
and
or
addr16
into
cmp
xchg
ja
mov
cmc
out
or
movl
inc
incb
jg
lahf
out
add
and
jl
and
jbe
mov
in
inc
iret
insl
fsubl
and
std
lret
pop
mov
pop
insb
fdivl
int
aas
jge
xor
imull
mov
loope
scas
and
xor
or
dec
sub
mov
xchg
push
cmovno
xchg
cmovns
stc
nop
aad
inc
xchg
mov
or
subl
jo
fisubl
jge
xchg
mov
in
push
add
mov
cmc
stc
test
push
mov
push
lea
test
cs
push
dec
lret
sub
rcrl
lds
push
pusha
loope
and
imul
pop
repz
cmpsl
pop
test
inc
mov
jge
mov
sub
hlt
movsl
pop
or
mov
cmp
add
xchg
std
xchg
movl
in
fwait
or
mov
push
push
jns
sub
xchg
stos
add
out
pop
xchg
sti
rcr
fchs
icebp
mov
mov
inc
mov
xor
aaa
jle
movl
adc
jno
cmp
pop
loope
leave
subb
or
outsl
out
data16
adc
lock
sbb
jae
ret
ret
fs
loop
mov
in
gs
neg
in
fs
pop
inc
orl
fimull
inc
pushf
insb
in
movsb
rorb
adc
sbb
fists
or
cltd
cmc
push
dec
fcmovnb
pop
jg
mov
xchg
jp
test
xchg
cwtl
in
cmp
xchg
les
std
pop
xchg
movsl
adcb
mov
cmp
sbb
adc
popa
test
jmp
imul
loope
out
xchg
movsb
mov
ja
mov
adc
in
mov
adc
int3
mov
movsl
cmp
jno
push
inc
popa
xor
push
lret
or
testl
or
xchg
adc
js
sbb
push
mov
mov
xlat
movb
jp
mov
push
lds
xlat
shll
mov
divb
not
pop
jno
xor
push
sahf
cmpsl
icebp
adc
push
sti
cmp
insb
xchg
jae
or
lret
xchg
mov
dec
push
xchg
daa
jnp
dec
iret
sbb
loope
mov
test
testb
mov
test
shlb
icebp
test
popa
test
lock
mov
pop
xchg
std
push
int3
fidivrs
xlat
push
sti
addr16
ja
mul
fst
std
negl
gs
adc
pop
mov
sub
jmp
xor
in
xchg
inc
mov
xlat
lahf
mov
inc
jns
dec
and
pop
pop
inc
ss
std
inc
lret
and
sub
and
pusha
leave
cmp
data16
stc
pushf
mov
xor
or
test
cwtl
fsub
jo
movsl
dec
dec
pusha
cmp
nop
or
pusha
lock
push
and
and
fisubrs
scas
push
inc
dec
aad
add
mov
adc
push
ret
aaa
xchg
out
roll
divl
mov
daa
pop
lods
pop
cli
xchg
out
mov
fistps
or
stos
add
psrld
hlt
xor
out
ja
jle
add
lcall
pop
out
push
in
das
xchg
pop
in
cmpsl
xchg
cmc
mov
jbe
out
inc
cmpsl
mov
cmpsl
xchg
xchg
mov
pop
int
cld
ss
xor
mov
or
mov
and
stc
and
mov
mov
outsl
xchg
or
daa
lcall
fimull
push
aad
and
cmpsb
inc
loopne
and
out
les
xchg
jecxz
shrl
in
data16
mov
pop
sub
inc
das
out
cmc
roll
shll
dec
test
inc
sub
fs
addr16
frstor
add
xchg
iret
push
es
cmpl
data16
xchg
shrb
push
negl
lds
inc
jge
jae
inc
stc
pop
sub
cld
out
in
pop
fdivrl
pushf
pop
adcb
and
mov
icebp
out
addb
imul
addr16
cmpsl
xchg
pop
jae
loopne
enter
lds
cltd
lahf
push
and
negl
xor
jo
mov
and
push
pop
cmc
push
les
jbe
push
test
mov
aad
jecxz
add
xchg
mov
out
xlat
out
mov
in
cltd
popa
cmpsl
out
not
adc
add
out
xlat
xor
out
arpl
outsl
xchg
cmc
push
aad
xchg
std
out
inc
repz
les
and
shl
push
out
popf
push
xchg
popa
out
push
sbb
popl
xor
test
dec
mov
pushf
pop
sub
mov
gs
in
mov
subb
mov
aas
pop
fwait
xchg
dec
mov
daa
mov
loopnew
jmp
test
ret
in
jmp
out
mov
xchg
push
test
ret
outsb
push
icebp
sub
addr16
dec
push
cmpsl
inc
pop
rol
and
repz
ret
and
ja
out
xor
in
xlat
mov
jecxz
jnp
idivb
inc
ja
out
lds
in
xchg
mov
in
xchg
idivb
and
outsl
jnp
mulb
test
movsl
ja
out
lds
in
inc
in
aas
mov
inc
lds
jnp
mulb
in
pop
mov
mov
jnp
testb
ja
out
inc
imul
in
out
cmpsl
ja
out
and
in
pusha
mov
mov
mov
in
loopne
sahf
ja
out
lds
jnp
testb
popa
mov
jbe
mov
in
loope
pop
ja
out
lds
jnp
out
inc
jnp
or
in
in
int3
les
xchg
test
insb
fs
push
dec
inc
cmp
add
or
cmpsl
xchg
testl
pop
mov
jg
lahf
adc
and
lods
movsb
das
dec
test
insb
fs
pop
scas
out
out
or
aaa
daa
das
cmpsb
jle
or
xchg
mov
xchg
dec
sahf
lret
outsb
data16
int3
mov
movsb
lods
hlt
je
xor
mov
faddl
aaa
das
daa
pop
pop
iret
sysret
imul
mov
mull
aaa
fnsetpm(287
inc
data16
daa
fcmovnb
mul
push
call
scas
mov
push
test
out
sbb
mul
aaa
sub
inc
arpl
fbld
xlat
insl
xchg
add
mov
pop
mov
mov
pop
notl
int
aas
loopne
xchg
fwait
scas
add
cmpsl
jno
cmpsl
cmpsb
out
negl
jnp
rorl
in
popl
cmpsl
xacquire
scas
imul
addr16
jae
pop
shll
ja
xchg
not
inc
jbe
daa
sub
das
inc
out
pop
mov
idiv
mov
add
loope
movsl
inc
das
rcr
fdivrl
xchg
divl
cmpsl
arpl
ja
daa
xchg
not
add
out
mov
out
mul
jle
arpl
mov
mov
incb
notb
out
neg
out
movb
add
dec
sub
push
mov
add
lea
inc
mov
cmc
sahf
shll
movb
pop
adc
int
mov
sahf
jo
inc
pop
mov
mov
mov
je
and
lret
in
out
sahf
inc
les
cmc
xchg
mull
pop
out
aas
xchg
imul
push
icebp
jle
lret
xlat
jbe
outsb
mov
cmp
adc
xchg
neg
pop
mov
push
mov
into
idivl
xchg
cmp
xchg
xchg
dec
add
pop
mov
pop
not
ds
jne
mull
pop
imull
loop
jne
mull
divl
push
call
push
and
mov
std
add
cs
inc
out
insl
divl
stc
pop
sub
jo
out
in
dec
rcr
pop
mov
addl
lret
loopne
sub
aas
test
add
cmpsl
pop
dec
int
inc
test
mov
mul
cmpsl
inc
das
jmp
aaa
idivl
mov
daa
subl
add
popf
shr
xchg
cmc
imull
inc
pmaxsw
aas
in
sub
pop
cmp
add
xchg
data16
cmpl
jge
lea
daa
cmp
vdivsd
xorl
pcmpgtw
inc
daa
jge
arpl
jg
idivb
imull
pop
pop
jo
cmp
aas
scas
out
shrl
rorl
and
sbb
adc
xchg
out
cmpsl
mov
idiv
jg
mul
out
out
sahf
xor
in
scas
jbe
aas
in
pop
adc
cli
faddl
loopne
data16
divl
outsb
out
push
mov
out
mov
fsub
lods
hlt
mov
or
cmc
movsb
add
pushf
pop
maskmovq
testl
pop
testl
scas
fcomi
test
jl
je
pop
insb
mov
es
mov
xchg
jl
cmpsl
inc
mov
mov
xor
into
mov
movsl
shl
push
push
int
fwait
sub
xor
negl
aaa
mov
idivl
xchg
addr16
mov
fwait
or
adc
xchg
push
repz
push
das
jmp
xlat
jno
push
div
inc
jcxz
or
test
je
lret
maskmovq
aas
lret
xchg
imul
pop
jnp
jb
push
int
divb
add
divl
divl
xchg
mov
neg
fwait
inc
aaa
lods
imul
inc
in
xchg
or
jnp
cmpsl
pop
div
jae
ja
cmpsl
in
fists
push
sbb
scas
fwait
iret
arpl
mov
fmuls
jnp
mov
inc
dec
test
jmp
add
pop
inc
xchg
jns
mull
mov
jnp
jbe
xor
lahf
pop
div
sub
xlat
and
xlat
adc
cmc
das
mov
testl
inc
out
or
cli
cli
add
repnz
pop
mov
ljmpw
shl
aas
dec
loop
mov
in
out
fiaddl
sar
mov
ja
das
fbld
scas
movsb
testl
idiv
mov
cmc
xlat
stos
mov
pop
lcall
pushl
test
jp
das
mov
aaa
fists
cmc
daa
mov
fisttps
mov
rcll
bound
cmpsb
es
jmp
mov
jle
into
es
xchg
cmc
jle
inc
dec
inc
push
fbstp
loopne
notl
lret
subl
cmp
aaa
pmaxsw
xor
sbb
sub
and
testl
aas
jo
movzwl
add
fsubs
mov
push
push
into
adc
inc
stos
idivl
or
inc
testl
pop
cmp
notl
cmpsl
mov
mov
mov
jmp
mov
mov
push
testl
andl
notl
mov
fdivp
test
mov
scas
testl
popa
pop
sub
fistpll
pop
addr16
divl
pop
jnp
out
xchg
call
loopne
mov
dec
add
xchg
idivl
jle
jbe
ja
daa
inc
fildl
mov
mov
rcrl
dec
mov
mov
sahf
pop
jbe
xor
pop
pop
in
aaa
movsl
testl
and
enter
sbb
out
xor
adc
aaa
xlat
or
cwtl
test
fdivr
inc
daa
out
div
int
idiv
out
cmp
mov
call
iret
loopne
fdivs
not
test
enter
mov
dec
mov
push
test
mov
notl
dec
cli
mov
cwtl
add
ja
mov
xchg
fistpll
fbstp
shll
push
test
pop
cmc
push
push
jo
js
mov
add
addr16
movsb
negl
xchg
cmc
dec
cli
pop
add
mov
negl
pop
fwait
push
and
mov
push
scas
das
mul
aaa
scas
mov
mull
xchg
daa
divl
out
insl
aas
imul
push
das
sub
cmpsb
loopne
cmpsb
mov
cmc
into
jo
pop
jnp
rorl
mov
mov
jbe
iret
lea
mov
in
fisttpll
imull
mov
sti
lahf
inc
sub
incl
lret
test
sti
mov
out
mov
notl
aas
jle
push
neg
cli
mov
xlat
or
mull
jg
popa
daa
iret
sti
sbb
mov
aaa
imull
ficomps
aaa
xchg
aas
dec
mul
fidivs
sti
cmpsl
mov
negl
mov
xchg
cmpsb
push
jb
dec
or
pop
jne
xchg
mov
idivl
mov
dec
push
and
lahf
imulw
ja
mov
push
cmc
xchg
test
push
decb
jnp
daa
aad
and
cmp
and
mov
ret
inc
mov
jge
pop
cmpl
lock
or
push
idiv
movb
mull
ret
sbb
dec
fiadds
mov
gs
xchg
jmp
out
lahf
mul
jbe
xchg
shrl
mov
aaa
mov
scas
sub
jne
js
cmpsb
xor
filds
enter
lahf
sahf
daa
cmp
aas
xchg
jle
ds
lods
idiv
aaa
das
jbe
imul
inc
cmp
mov
outsb
inc
out
les
idivl
xadd
push
cmc
push
dec
pop
mov
ljmp
mov
idivl
or
ss
pop
mov
pop
divl
push
mov
sti
inc
adc
es
out
lahf
test
mov
lret
push
out
and
inc
push
jne
std
jae
mov
push
idivl
xchg
sti
arpl
test
pop
je
mov
sahf
je
out
out
aad
in
idiv
and
push
dec
add
das
mov
pop
push
filds
pusha
int
clc
daa
out
stc
out
in
mov
push
mov
sbb
hlt
jg
inc
lahf
sahf
imul
lds
lods
xchg
push
mov
pop
out
lods
xor
out
cld
addr16
push
pop
mov
mulb
cmpsb
data16
ret
sti
popa
jg
sahf
das
scas
incb
seto
mov
xchg
xchg
fs
in
dec
inc
mov
test
xchg
popf
xlat
dec
ja
xor
cmp
icebp
imul
pop
arpl
mov
mov
inc
pusha
mov
xchg
mov
std
mov
xlat
adc
in
scas
repnz
xchg
fwait
add
sti
iret
aas
jmp
lret
cmpsl
mov
pop
scas
dec
testb
popl
mov
add
testl
test
xlat
out
and
mov
aaa
fdivs
rol
outsl
roll
std
jmp
xchg
cmpsl
push
rcrl
mov
xor
out
xlat
jbe
daa
mov
pop
dec
sub
jle
xchg
pusha
mov
xchg
jno
xlat
repz
into
cmpsl
adc
jmp
std
xchg
aad
jecxz
loop
aad
xchg
aaa
lahf
out
add
jge
xchg
sahf
out
push
movsl
xchg
jg
mov
add
xchg
repnz
loope
pop
inc
inc
inc
inc
pop
sahf
mov
jmp
push
test
test
xlat
test
mov
push
lods
push
lahf
jbe
sub
cwtl
jle
xchg
andl
aaa
jne
inc
insl
test
mov
loope
negl
xchg
out
leave
cld
aaa
xchg
mov
iret
andl
xchg
shl
mov
push
dec
pop
adc
ja
xor
mov
add
mov
shl
pop
xor
add
les
inc
out
test
lock
fdivrs
mov
sbb
nop
repz
jno
push
push
loop
add
out
mov
jb
inc
push
adcl
mov
dec
sti
xchg
andb
mov
pusha
mov
jnp
out
push
mov
adc
and
test
repnz
es
aaa
adc
xor
aas
mov
movsl
das
shll
movsb
pop
and
xlat
repnz
jecxz
fidivs
jle
aam
loop
mov
mov
mov
sub
movsb
jecxz
nopl
in
ja
jecxz
incl
movb
inc
out
arpl
pop
and
push
shl
jge
and
inc
ja
in
pop
inc
jecxz
mov
rolb
and
cld
mov
cmpsl
jecxz
mov
sar
cmpsl
data16
lds
mov
pop
and
pop
in
jno
ja
mov
in
sarl
outsl
add
pop
push
fs
repnz
and
loopne
movsl
divb
push
adc
pop
cmpsl
inc
pop
xor
sbb
mov
data16
aam
int3
jb
xorb
add
popa
addr16
xor
and
add
inc
jno
lahf
push
addr16
rolb
mov
subb
mov
aaa
movsb
test
xor
daa
outsl
repnz
pop
ja
ja
movsl
or
and
dec
mov
ja
pop
dec
mov
push
mov
cmp
aas
pop
test
cmpsb
test
jle
xor
ficoms
pusha
ja
inc
add
push
hlt
jg
divl
sti
mov
popa
arpl
mov
cld
inc
xor
iret
inc
xlat
xchg
daa
cmpsb
push
cld
cmpsb
lock
sti
fbld
fs
and
movsb
xlat
movswl
xchg
sti
je
dec
sti
ja
outsl
aaa
xchg
pop
pusha
jbe
mov
dec
mov
xchg
cmpsl
out
rolb
mov
mov
movsl
and
mov
les
out
cmpsb
xor
lds
push
mov
dec
incl
in
pop
inc
std
add
mov
testl
popa
dec
aad
inc
push
cmpsb
xorb
and
sti
jle
cmc
out
gs
loope
lock
sub
cmp
daa
in
xchg
insb
sti
jbe
bound
pop
and
outsl
add
jg
pop
stc
cmpsb
into
mov
out
mov
pop
popa
pop
inc
xorb
inc
fisubs
out
sti
cmpsl
out
mov
popa
daa
movsb
movsl
in
test
ja
outsl
idiv
push
call
outsl
aas
aas
push
out
in
dec
inc
popf
jb
out
out
xlat
scas
add
pushl
lds
out
loopne
out
ret
ror
cmpsl
shlw
sti
cmp
xor
xlat
xchg
outsb
popl
out
xchg
fs
cmpsb
mov
sub
sahf
cld
andb
out
fsts
pop
and
and
loope
negb
or
std
mov
test
pop
mov
push
in
add
scas
xchg
jae
lods
xor
mov
adc
and
jae
dec
popf
or
inc
idivb
outsl
daa
jno
inc
add
adc
inc
icebp
jno
jnp
jbe
mov
xor
push
xchg
jmp
adc
jp
inc
jecxz
xchg
dec
cmpsl
jne
mov
call
jbe
pop
fildl
addr16
pop
xchg
shl
mov
mov
cmpsl
pop
adcb
mov
xor
cld
mov
jle
incb
loopne
push
mov
mov
mov
pop
mov
push
push
out
aas
adc
push
ret
sbb
inc
divl
ret
sti
lods
add
inc
call
mull
mov
cmc
mov
mov
repnz
jecxz
jecxz
repz
add
and
out
rorl
inc
inc
inc
mov
movsb
add
sub
or
push
mov
ja
pop
ret
ret
imul
ja
daa
push
xor
inc
in
and
ret
push
imull
ret
fs
aaa
mov
fnstsw
jb
sub
dec
in
pop
or
xchg
adc
mov
mull
or
sub
pusha
jns
push
pop
jmp
shrl
sti
mov
icebp
aas
rcl
outsl
mov
daa
jae
mov
addl
inc
test
mov
insl
clc
shl
into
mov
mov
in
lds
mov
xchg
clc
inc
fdivl
inc
xor
arpl
mov
pop
push
lahf
inc
je
and
jecxz
xor
jg
mov
inc
imul
in
inc
cmpsl
xchg
sti
and
jbe
fisubrs
incb
inc
push
add
mov
icebp
xlat
push
cld
jae
inc
adc
jbe
sti
inc
push
inc
xchg
andl
pusha
jnp
nop
mov
fs
std
iret
repz
popf
mov
jne
jne
and
push
jae
xchg
rcll
xchg
imul
ja
xor
shl
cmp
out
xchg
das
push
test
xor
push
popa
andb
and
mov
addr16
pop
mov
cmpsb
push
adc
adc
out
test
popa
testb
xor
mov
xchg
mov
and
out
xlat
into
dec
push
mov
mov
sti
inc
addl
cmc
add
ficomps
push
test
movsl
xchg
sahf
add
aam
pop
cmpsb
mov
pop
les
add
xchg
pextrw
daa
adcb
ret
pop
inc
inc
push
xor
scas
cmpsl
mov
inc
pusha
andb
add
pop
ja
outsl
xchg
ja
xchg
jecxz
adc
rcrl
jae
mov
outsb
daa
jae
pop
cmp
push
and
push
not
popa
jns
into
mov
xor
aaa
mov
cmpsl
xor
mov
mov
jb
push
out
pop
mov
add
and
xchg
mov
loop
mov
pop
push
out
pop
xchg
sahf
ja
mov
hlt
sar
into
dec
fsubl
add
push
ret
out
cmp
jb
xorb
push
stos
out
neg
adc
fcompl
call
ss
jg
add
xor
out
push
std
rcll
shl
mov
out
popf
xchg
mov
imul
add
cmpsb
pusha
testl
cld
pop
xchg
add
test
mov
loopw
add
repz
jbe
loopne
out
mov
iret
mov
pop
incb
inc
adc
xchg
arpl
out
inc
sbb
addl
movsb
outsl
cmp
cmp
inc
or
and
and
add
scas
and
add
outsl
add
dec
xlat
jmp
mov
cld
aaa
cmpsb
xchg
xchg
add
into
popa
xchg
repnz
sbb
lret
xor
negb
outsb
jmp
cmpsl
pusha
and
ljmp
test
cmpsb
arpl
push
scas
mov
inc
mov
mov
fs
je
fwait
repnz
hlt
rep
mov
repnz
dec
pminub
jbe
cmpsl
mov
loop
ret
cli
jae
mulb
icebp
mov
ja
xchg
ja
jmp
outsl
adc
push
iret
and
sahf
xchg
cmpsl
pop
xchg
movsl
jb
push
out
outsb
jno
aaa
fs
aam
xchg
fcmovb
sti
icebp
shrb
lret
popl
and
rcrb
popa
ret
ret
dec
jmp
aas
mov
sahf
jecxz
jg
adc
xchg
pop
xor
xor
lds
jno
in
inc
add
addr16
lods
stos
lahf
ja
cmpsb
sub
repnz
and
and
cmp
ja
out
pop
jbe
test
or
lcall
std
inc
cmpsb
addr16
push
push
daa
mov
adc
into
cmpb
mov
mov
idiv
loop
addr16
movsb
andb
inc
lahf
out
mov
js
out
hlt
repz
mov
xor
addr16
mov
std
xlat
pop
cmc
xchg
addr16
out
jle
gs
add
xchg
je
xlat
aaa
aas
cmpsl
das
pop
addl
jge
sub
mov
notb
lret
xor
mov
jbe
pop
xlat
push
adc
xor
adc
lods
mov
jecxz
out
cli
ret
sub
sahf
movsb
shlb
mov
xchg
xlat
lods
xchg
or
inc
inc
mov
in
arpl
das
jae
icebp
jbe
test
push
jecxz
fwait
popa
shlb
loop
mov
cwtl
xchg
jae
filds
sbb
xor
jge
xchg
xorb
xchg
inc
jne
roll
xchg
mov
in
mov
xlat
test
popa
inc
inc
sub
mov
mov
xchg
out
and
inc
xchg
das
adc
pushl
gs
mov
xlat
out
lar
outsl
pop
cmpsl
adc
mov
sbb
ficomps
je
repz
cmpsb
push
std
jno
inc
addr16
mov
scas
push
xchg
push
in
adc
xlat
ja
ja
mov
repz
mov
xorl
mov
aad
icebp
jae
adc
mov
movsl
xor
push
inc
in
bound
xor
cmpsb
loope
mov
xchg
pop
loop
mov
lock
mov
mov
stc
push
jbe
mov
jb
jae
mov
fwait
je
test
xor
rcr
mov
xchg
inc
roll
sahf
les
jo
jae
adc
test
stc
xor
push
xchg
inc
and
inc
out
mov
pop
mov
pop
sub
aaa
addr16
mov
inc
data16
inc
jecxz
mov
inc
movsl
aam
subb
xor
shlb
insl
xchg
scas
push
inc
jnp
adc
xchg
rcll
xlat
addr16
jb
mov
in
vpsrlw
jecxz
rcll
and
into
xlat
inc
ja
fcomip
ljmp
addb
mov
out
aam
ret
inc
repz
inc
orl
addr16
xor
push
jno
jg
aam
pop
xor
cmc
mov
roll
inc
outsl
xlat
loope
mov
repz
mov
mov
lahf
mov
inc
push
mov
jecxz
movb
in
iret
add
out
out
adcl
std
ret
loope
inc
fbstp
addl
fildl
jp
xchg
scas
mov
and
das
jecxz
lret
pusha
cwtl
inc
mov
inc
inc
cmpsb
mov
andb
and
fwait
push
vpackuswb
mov
popa
fnstcw
and
notl
in
popf
scas
and
dec
dec
rcll
dec
mov
lds
inc
pop
inc
and
push
ja
dec
aaa
mov
ja
js
les
lahf
nop
inc
adc
inc
test
inc
lds
bound
jbe
jne
xchg
xorl
lock
in
push
into
movsl
pop
mov
mov
sbbl
movsl
lock
in
cmpsl
mov
xchg
xor
mov
in
sar
es
pop
mov
xchg
rcl
movsb
push
push
fsubrp
mov
lock
aam
jecxz
mov
cmp
bound
addb
pop
in
push
xchg
ja
xorl
xchg
in
repnz
outsw
pop
roll
inc
adc
jg
scas
data16
adc
mov
xor
test
test
mov
outsl
test
in
scas
mov
pop
rorb
repz
icebp
mov
mov
xchg
adc
lds
pop
push
xchg
repz
jp
xlat
jb
adc
popa
cmpsb
or
add
jne
out
in
push
xchg
pop
test
ja
gs
cmp
loopne
movsl
mov
movsb
pop
or
xor
mov
fistpll
popa
es
movsl
out
pop
arpl
xchg
pop
xor
dec
cltd
lahf
jbe
faddl
and
ja
fstl
fbstp
xchg
mov
add
add
cmpl
cmp
xorb
mov
add
pop
in
daa
pop
mov
arpl
rclb
loopne
movsb
into
inc
and
inc
imul
daa
adc
xchg
bound
ja
sti
popa
clc
cmpsl
xlat
mov
enter
lds
and
mov
mov
mov
jl
pop
es
push
cmpsl
scas
xor
xchg
jno
pop
mov
push
ja
push
pushf
and
icebp
in
mov
mov
fldl
fld
stc
data16
pop
mov
rolb
fimuls
jb
divb
xchg
popa
xchg
movsl
fs
inc
aas
xor
ja
and
and
mov
dec
push
roll
adc
add
js
movsl
loope
pop
icebp
loop
out
js
pop
rorb
out
fisubs
pusha
in
out
xlat
lds
adc
sahf
pop
push
je
xchg
sub
sbbb
cmpsb
arpl
jne
movsb
cmc
loop
rol
ret
inc
xchg
sbb
fiadds
aas
lea
mov
jae
adc
nop
out
aaa
cwtl
bnd
sub
mov
outsl
adc
mov
test
aam
movb
fbld
inc
mov
add
mov
mov
adc
and
pop
jnp
negl
xchg
fnclex
fwait
cmpsb
sub
sbb
out
aaa
push
bound
inc
dec
popa
jmp
fwait
loopne
ret
pop
mov
in
roll
fdivrs
fidivrs
arpl
aaa
lock
test
push
inc
sbb
adc
pop
inc
loopne
divb
jnp
fisubs
mov
in
popa
mov
out
pop
xchg
xlat
sbb
cmp
xchg
daa
lods
and
aad
scas
mov
popa
rcll
lds
push
cmpsl
pop
mov
push
aaa
pop
pop
and
imull
ja
push
push
push
push
lahf
es
xchg
cltd
hlt
push
pop
xlat
inc
out
lea
jae
pop
in
push
lret
inc
rolb
xor
mov
inc
jbe
mov
hlt
sbb
mov
mov
fiadds
xor
and
pushf
sti
push
cmpsl
loop
rorl
push
mov
loop
inc
xorl
xchg
inc
push
mov
loopne
cmpsb
repz
rolb
roll
les
jp
pop
xor
push
xor
data16
inc
dec
movswl
repz
mov
inc
test
movsb
cmpsb
out
push
movsl
out
xor
fdivrp
test
iret
push
mov
sbb
rorb
fwait
dec
loop
ret
mov
fs
push
and
jecxz
loope
mov
movb
icebp
add
xor
mov
lods
andb
cmpsl
je
xor
out
loop
sbb
ret
outsl
test
test
add
mov
loop
push
mov
push
pop
scas
xor
push
movsb
adc
out
out
and
loope
and
mov
shlb
xorb
inc
pop
arpl
dec
lahf
nop
ret
push
adc
sti
inc
outsb
clc
mov
jle
jo
mov
mov
scas
adc
mov
bound
daa
push
adc
jecxz
jg
xlat
lods
add
stc
sahf
jns
jge
jbe
loop
xchg
add
arpl
ss
jne
daa
inc
inc
xor
and
fs
sbb
jno
xchg
push
pop
lahf
adc
cmpsl
lds
popa
mov
insl
jo
into
daa
loopne
push
mov
notb
pushf
xor
fiadds
xlat
loop
ljmp
xchg
xlat
add
lods
mov
outsl
mov
int
mov
push
js
js
mov
out
aas
and
xlat
pop
dec
cmpsl
and
lods
js
pop
dec
lahf
in
jbe
mov
movl
xlat
jg
mov
ja
sbb
sbb
adc
xlat
sahf
xorl
cmpsl
js
push
cltd
mov
push
fsubrp
les
daa
xlat
dec
lahf
sarb
jbe
sbb
jg
xlat
mov
rorl
xchg
add
or
std
xlat
repnz
xlat
cltd
mov
xchg
aaa
sbb
push
aam
xor
inc
push
je
mov
lock
into
pop
loope
in
out
xor
xchg
mov
xor
adc
outsb
push
xchg
pop
push
inc
rcl
jle
rorl
cmpsl
pusha
nop
das
xchg
lahf
out
xorl
fiadds
dec
das
cmpsl
cmpsl
jno
es
loop
inc
add
jbe
lcall
jecxz
xchg
out
imul
lahf
lret
out
push
test
mov
lahf
sahf
lahf
rorb
cmpsw
push
push
cli
xlat
mov
xchg
inc
idivl
lahf
pop
dec
aas
fnstsw
xlat
ret
xlat
jo
and
xlat
inc
and
lcall
mull
fimuls
xchg
pop
jg
in
push
mov
ja
fwait
sbb
cmpsl
sahf
repnz
in
inc
push
lahf
xchg
lahf
or
xlat
push
mov
xchg
push
lahf
jg
adc
cmp
fiaddl
xchg
daa
loope
xchg
add
lahf
aas
in
push
inc
cmp
pop
jecxz
scas
adc
lahf
repz
inc
and
xlat
push
lahf
out
jo
xchg
xchg
cmpsl
xorb
adc
fisttpll
in
xlat
pop
xchg
cmpsl
adcb
les
mov
aaa
dec
arpl
cmpsl
iret
xlat
loopne
mov
inc
ret
sbb
cmpsl
push
aas
test
mov
xlat
int
sarb
ret
pop
roll
sbb
clc
pusha
out
jns
in
adc
pop
aaa
cmp
push
fbld
xlat
xor
lea
dec
mov
xchg
fildll
test
inc
mov
je
test
movsl
mov
out
jb
in
and
std
xlat
cs
cmpsb
notb
fistl
fisubs
jb
cmpsl
rcl
jg
stos
fisubrl
rol
push
mov
jne
lahf
sbb
pop
je
lahf
scas
out
sbb
incb
idivb
pop
clc
mov
lahf
xchg
daa
ja
sub
jp
iret
xlat
lret
ss
idivl
aaa
cmc
adc
hlt
and
xlat
out
scas
push
xor
jecxz
lock
roll
in
inc
push
int
push
dec
negb
push
mov
xlat
lea
mov
cwtl
jle
cmp
adc
imul
dec
cld
mov
push
inc
data16
push
cli
push
dec
push
fsts
and
jmp
dec
lock
in
mov
ret
aad
test
push
data16
pop
dec
out
sar
xlat
mov
test
push
jnp
mov
in
out
ret
inc
fcmovb
xchg
daa
daa
decb
repnz
pop
xlat
push
out
sub
lds
mov
lds
repz
and
cld
mov
dec
xlat
rcrl
data16
mov
xlat
cmpsl
rorb
jnp
adc
addl
adc
and
mov
mov
xlat
jg
mov
daa
negb
out
adc
aas
push
jno
pop
not
mov
shlb
daa
cmp
push
cs
mov
xlat
jae
popa
jo
jecxz
fcomps
into
jecxz
or
lret
out
xlat
outsl
loope
and
mov
and
cmpsl
das
arpl
mov
loope
out
push
out
fs
sahf
xlat
test
cmpsl
shlb
pop
jle
in
bound
jge,pt
xor
mov
mov
inc
pop
dec
pop
in
add
xchg
mov
adc
dec
cmpsl
popa
add
xchg
adc
lods
jb
bound
out
mov
sahf
pop
mov
push
cmpsb
scas
push
in
xchg
push
or
sti
adc
bnd
xchg
cmp
mov
inc
out
dec
mov
aaa
in
js
je
cmc
loopne
out
push
jmp
inc
inc
jmp
xchg
daa
jecxz
les
mov
xor
dec
ret
mov
adc
inc
mov
in
mov
repnz
loopne
lods
mov
bound
mov
push
popf
inc
divb
jb
jge
movl
xor
add
mov
repnz
jecxz
divb
pop
lods
push
jno
adc
mov
insl
xchg
cmp
pop
out
lock
xlat
cmpsb
ja
push
xchg
inc
inc
inc
decl
repnz
bound
mov
addr16
xlat
incb
cmpsb
adc
or
scas
test
inc
add
iret
movntq
mov
gs
push
xchg
arpl
aas
jecxz
inc
adc
pushf
add
into
es
fwait
aas
inc
sbb
cmpsb
add
pop
loopne
adc
bound
movsb
cmp
or
jno
dec
fidivl
adc
jge
jbe
mov
idivl
pop
addr16
mov
mov
lds
lds
pop
xchg
in
jp
mov
scas
arpl
jecxz
cwtl
es
or
mov
cmp
push
mov
push
xor
shl
roll
pop
mov
hlt
cmc
ret
insb
stos
mov
lods
fidivrs
xor
dec
stc
push
pop
out
jo
into
mov
mov
xchg
push
dec
shll
jbe
mov
jg
dec
cld
aas
lds
xchg
jg
out
lods
mulb
adc
mov
jmp
test
push
dec
clc
inc
mov
dec
inc
sti
popf
mov
pop
pushf
outsb
lret
add
orl
cmp
mov
mov
jl
mov
imulb
xchg
mulb
aam
pushf
ja
out
movsl
insb
sub
dec
pop
mov
addr16
outsl
add
adc
ret
xchg
inc
or
rorb
ds
icebp
test
sahf
xchg
xchg
push
push
jae
add
and
pushl
push
adc
sub
and
lcall
xchg
repnz
inc
fs
filds
out
ja
sub
adc
or
sarb
xor
cltd
and
mov
arpl
andl
gs
fdiv
dec
cmp
sub
testl
daa
xlat
dec
std
push
cmpsl
aaa
popf
mov
cmp
pop
test
xchg
sub
in
push
outsb
sub
jp
das
lret
fs
popf
xor
lret
fisubl
mov
jecxz
push
out
ret
jp
and
inc
testb
test
testb
inc
xchg
inc
lds
inc
cmp
ja
out
lds
xor
mov
mov
add
arpl
cmpl
ret
in
inc
mov
add
lds
mov
jnp
mul
pop
inc
mov
mov
shl
lds
in
and
movsb
ja
out
lds
jnp
mulb
in
and
mov
jge
xchg
cmpsl
std
mov
in
ffree
aad
int
mov
lods
ja
out
lds
in
jne
insl
ja
out
lds
dec
testb
xor
je
insb
xchg
xchg
sbb
adc
xchg
outsb
sub
test
mov
mov
push
lds
idivb
fs
loope
idivb
dec
rcll
jo
jnp
stos
loopne
neg
cmpsl
jno
jg
stos
loopne
idivb
dec
rcll
jo
jnp
stos
jbe
sahf
mov
in
jne
mov
fs
scas
insl
les
jbe
bound
leave
ds
js
pmaxsw
push
and
mov
jo
push
int
sarl
nop
addr16
dec
mov
sub
push
mov
adc
lret
insl
or
mov
dec
mov
sub
push
mov
add
sahf
cmpsl
push
pop
in
xchg
je
ds
daa
pop
xchg
int
out
outsb
jnp
xor
dec
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
cmp
mov
cmp
daa
push
xchg
int
out
gs
shll
je
lea
xchg
xchg
int
out
movsl
jnp
shll
int
aad
int
out
in
leave
out
cmc
cmp
ljmp
push
cmp
addr16
int
leave
cs
popf
mov
xor
xor
mov
and
ds
aad
xchg
sub
cmp
dec
iret
pushf
cmp
push
bound
sbb
mov
bound
mov
push
aaa
inc
pop
test
push
jecxz
cmp
ss
loopne
je
test
stos
enter
in
mov
mov
inc
rolb
add
arpl
int3
jle
jg
mov
add
mov
mov
pop
in
popf
int
mov
call
xor
xorl
dec
test
out
outsb
inc
sbb
sbb
and
out
or
in
cmp
add
dec
jnp
notb
and
jecxz
pusha
out
lds
and
js
es
out
lds
pop
add
in
cmpl
mov
test
mov
add
test
jnp
neg
in
loopne
test
out
movsl
idiv
in
add
mov
mov
and
out
xor
movsl
in
mov
out
dec
lds
inc
negb
loope
mov
add
jno
xor
in
cmpl
negb
addr16
test
out
lds
jnp
testb
ja
out
lds
loope
mov
div
inc
in
cmpsb
sarl
daa
testb
adc
pusha
push
sti
sbb
out
lds
xor
out
lds
in
inc
stos
and
xchg
test
push
and
jb
arpl
test
out
insl
or
and
test
jne
iret
and
inc
mov
adc
and
lock
xchg
bound
cli
inc
out
cmpsb
mov
jo
mov
test
rcll
jno
adc
cmp
add
test
outsl
push
xorl
leave
or
jle
xchg
mov
lea
mov
aaa
adc
or
addl
jb
mov
lds
imul
pusha
sub
push
cmp
andl
or
jb
pop
jno
jmp
cmp
imul
or
xor
dec
push
push
inc
add
add
or
andl
cmp
fidivl
aas
pop
aas
mov
mov
je
pop
lahf
mov
push
call
out
jns
cmc
xor
mov
addr16
dec
mov
ljmp
adc
mov
mov
in
bound
push
xor
mov
dec
xlat
add
jns
cmpsb
dec
mov
inc
push
cmp
movsl
mov
xchg
sbbl
jecxz
call
gs
push
cmp
scas
gs
xor
test
jmp
xchg
inc
loop
icebp
cmpsb
gs
cmpsb
incb
out
jecxz
jno
inc
mull
imul
and
lds
repz
jb
inc
lds
mov
sbb
cmc
pusha
pop
inc
arpl
fidivrl
cmp
loopne
orl
mov
pop
adc
inc
cmp
mov
cmc
je
lea
aam
push
jnp
clc
mov
inc
cmc
push
jge
inc
lcall
adcl
loop
jecxz
outsl
test
aad
xor
xor
jbe
loop
addr16
out
mov
cltd
les
sarl
cmpsl
lds
rcll
add
push
scas
push
mov
inc
and
mov
mov
sbb
push
insl
mov
in
fildl
dec
test
mov
sub
ljmp
push
stos
gs
xchg
shrl
inc
ret
incl
test
cli
repnz
cmpsl
and
loopne
xchg
fiadds
xlat
mov
or
mov
iret
mov
mov
cwtl
in
cmpsb
adcl
idivl
iret
push
inc
inc
cmp
aad
and
arpl
lret
xchg
pop
repz
xlat
loopne
lds
shrl
jle
xchg
ret
es
je
pop
cmp
in
pop
xchg
arpl
cmp
outsl
sbb
sti
and
mov
mov
inc
ret
xchg
xor
fcomps
imul
mov
les
sub
shll
out
jne
orl
loop
dec
ljmp
ja
fnstcw
loop
jb
je
arpl
pop
lds
icebp
dec
adc
arpl
jno
addr16
jl
mov
in
lods
mov
std
repz
xor
push
out
inc
pushf
sbb
adc
xchg
jne
aad
push
mov
xlat
add
add
ljmp
mov
pop
ja
add
xchg
scas
fdivp
shrb
imul
jl
out
xchg
jnp
imul
mov
lahf
cmpsl
ss
shll
stos
cmpsl
add
mov
or
iret
jge
jg
imul
sbb
or
cmp
bound
inc
repz
addr16
mov
lahf
xchg
and
sbb
pusha
inc
popa
arpl
ret
cmpsl
push
roll
je
inc
fsubp
or
out
sub
adc
out
idivl
or
cmpsl
fs
pop
out
lds
inc
adc
test
push
roll
test
mov
inc
cmp
and
nop
jecxz
ljmp
adc
loopne
xchg
sbb
mov
mov
mov
in
mov
imul
icebp
push
mov
cmp
inc
daa
icebp
ss
imul
idivl
into
cwtl
lock
push
in
inc
jne
mov
add
aam
add
fsub
cmpb
out
ret
add
repz
push
add
cmpl
outsl
add
xchg
arpl
test
fsubr
les
push
xchg
dec
fiaddl
xchg
push
lds
push
jo
push
out
add
push
ret
inc
leave
testb
mov
test
jp
cmp
add
mov
add
jg
ja
xchg
cmp
idiv
bound
sbb
mov
out
shrl
pop
leave
add
cmc
push
hlt
movsl
icebp
mov
xchg
cld
rol
lret
inc
xorb
mov
sub
popf
daa
clc
push
mov
push
mov
inc
push
popf
cmpsl
mov
add
pop
dec
push
cmpsl
jecxz
data16
jecxz
xchg
xchg
test
push
popf
and
push
in
xchg
push
fndisi(8087
stos
mov
jne
push
out
mov
pop
stc
les
or
mov
inc
inc
xchg
mov
roll
outsl
out
repz
jbe
sahf
xlat
mov
dec
test
test
int
push
and
in
out
mov
addr16
movsb
out
jmp
fsubs
inc
jnp
xor
mov
push
shrb
lcall
push
mov
and
pop
out
addb
adc
cmpsl
in
es
jp
loopne
or
jb
pop
addr16
mov
cmp
push
fcomi
pop
out
aad
es
cmc
jmp
xor
out
movsl
popa
mov
cli
xchg
mov
xchg
mov
sti
push
in
hlt
mov
add
adc
pushf
test
jo
dec
add
je
lret
push
cs
into
push
sbb
inc
mov
jns
and
inc
adc
ljmp
xchg
andl
xchg
fs
push
inc
mov
jmp
inc
add
fwait
inc
sahf
adc
mov
pushf
test
cmc
je
and
dec
roll
inc
shll
xchg
xchg
test
imul
mov
lock
pop
nop
pop
pushf
in
cld
je
inc
lcall
mov
movsb
aaa
inc
push
pop
test
mov
fs
xor
stos
addl
je
in
lods
jnp
sub
std
or
xor
outsb
in
insl
cwtl
add
fstl
push
pop
test
in
cmp
rep
fs
std
ja
lods
add
cmc
pop
mov
xchg
mov
lds
mov
lret
vmovd
ds
add
cld
test
cmp
pop
mov
add
pop
pop
fildl
lds
dec
out
jle
pop
loopne
setge
fldl
aad
les
fstl
mov
addr16
and
add
and
bnd
lock
push
push
cld
in
xor
incb
inc
inc
push
mov
rolb
mov
test
ss
mov
popa
test
sarb
sub
jo
push
les
int
clc
insl
les
mov
mov
sarl
popf
fcoml
shll
out
sti
roll
mov
leave
and
inc
jb
pop
decb
push
add
xor
data16
stos
movsb
cli
mov
mov
daa
lea
mov
inc
je
mov
mov
sarl
rcl
add
cmp
xchg
ljmp
pop
pop
inc
in
insb
mov
mov
cli
std
add
test
cmpsb
out
mov
in
lret
notl
loope
aas
test
dec
or
scas
xchg
sbb
shrl
loop
fildll
cmp
fbld
fmull
ds
xor
call
jle
mull
lret
pop
popf
mov
mov
jp
xchg
clc
inc
inc
mov
stc
in
or
xchg
iret
mov
orl
mov
mov
loop
add
and
xorl
add
fs
testb
ja
out
lds
jnp
testb
xchg
out
daa
jnp
test
movsl
xchg
roll
and
popa
in
and
mov
or
in
out
jbe
out
inc
lahf
shlb
idivb
mov
add
insl
mov
scas
fcoms
es
popl
xchg
jg
ja
out
inc
fcomps
xchg
ds
daa
test
insw
jne
mov
add
movsb
jbe
pushf
out
lds
arpl
xchg
jbe
repz
jmp
jecxz
mov
cli
xchg
subl
out
lret
add
jl
iret
cmpsl
iret
push
out
mov
repz
and
jne
jg
sti
or
and
push
adc
inc
ret
ljmp
sti
jne
out
push
arpl
sub
std
jnp
xchg
mov
loopne
aaa
xchg
fmuls
sti
cmp
mov
fists
add
scas
add
inc
adc
cmp
adc
pop
out
aas
out
push
jo
out
je
pop
in
mov
cmpl
jae
imul
sub
mov
and
out
cmpsb
add
clc
in
test
pop
xchg
and
cmpl
and
jg
testb
in
ret
aaa
jnp
imulb
in
daa
mov
jnp
divb
testb
movsl
inc
rol
fisttpll
add
or
mov
and
dec
cmp
aam
jp
push
mov
add
cmpsl
testl
sub
repz
faddl
push
jmp
mov
mov
fnstcw
add
ret
pop
icebp
repnz
xor
subb
sub
out
clc
cmpsl
aas
lret
arpl
dec
mulb
and
pop
cmpsb
out
aas
out
emms
daa
out
lds
mulb
lahf
jg
stos
testl
in
pop
mov
and
pop
jnp
mulb
shll
add
daa
jnp
idivb
in
jg
ret
out
lds
inc
testb
idivb
ret
jecxz
pusha
dec
aam
inc
xchg
js
pop
add
out
xchg
ljmp
push
xor
hlt
cmp
lds
cs
lods
mov
sar
adc
int3
pop
inc
xor
mov
mov
adcl
adc
out
aas
jnp
divb
in
adc
out
lds
in
adc
ja
sti
jbe
dec
out
lds
push
divb
push
ja
out
lds
ret
aaa
mov
xchg
not
in
xor
or
cmp
adc
adc
divb
lods
out
mov
hlt
lds
div
in
leave
mov
xlat
movsb
in
mov
inc
aad
jecxz
scas
ret
pop
faddl
movsb
xchg
jmp
xchg
dec
inc
out
mov
mul
sahf
xor
sub
jecxz
data16
test
fpatan
cmpsb
div
jle
pop
movsb
add
test
cmp
out
inc
ficoml
mov
pop
pop
pop
fidivs
add
xchg
add
jno
cmp
fiaddl
jae
mov
and
lahf
mov
jno
xchg
clc
sub
add
scas
insl
gs
push
pusha
out
sub
aaa
and
ret
xor
xchg
cmpsl
pop
pop
nop
arpl
ret
ss
testb
mov
xchg
mov
push
movsb
insl
pushf
out
pop
cmp
inc
pop
ja
out
or
in
mov
pop
testb
sbb
testl
clc
xor
scas
cmp
and
scas
out
ja
add
incb
push
pop
and
aas
mov
das
xchg
xchg
cwtl
push
mov
xchg
add
adcb
test
scas
ret
sbb
aaa
xchg
lea
test
inc
jl
push
dec
pop
in
xchg
fistps
or
or
in
sti
ja
mov
repz
es
rorb
or
mov
add
int
imul
and
or
test
push
and
or
xchg
adc
sbb
test
adc
jge
cli
rclb
mov
sti
in
movb
call
iret
test
popa
push
xor
or
jnp
sar
xchg
add
call
dec
cmpsl
daa
pop
sti
roll
push
mov
or
lret
cs
inc
jb
cwtl
insl
xor
or
stos
adc
add
rolb
fisubl
sbb
sbb
int3
mov
inc
push
roll
xchg
movsl
mov
mov
jne
loope
pop
loop
cwtd
mov
push
jl
push
mov
ljmp
in
or
ja
pop
add
imul
js
or
das
pop
mov
push
or
push
mov
dec
push
shrl
cmc
xor
pop
arpl
push
enter
xchg
dec
mov
movsl
sub
adc
sarb
cs
pmulhw
add
int3
xor
iret
fstpl
add
out
shl
and
cs
jle
stos
xor
or
stc
adc
insl
and
sub
fwait
xlat
out
adc
pop
sub
adc
daa
fidivrl
or
mov
sbb
or
loopne
in
aad
sbb
pop
push
in
sub
mov
jmp
jnp
push
inc
xor
aas
or
fsubrp
jle
mov
jns
repz
inc
add
or
and
inc
das
jp
shr
shr
add
jecxz
cmc
or
push
cmp
xchg
ss
outsb
jl
jno
add
nop
mov
ror
adc
dec
xor
or
pop
jbe
les
or
jne
in
dec
xchg
sahf
push
lea
xchg
xchg
lods
add
adc
icebp
sbb
rcl
adc
or
xor
test
push
inc
xchg
lods
fdiv
sbb
mov
jg
adc
or
rolb
mov
xchg
daa
lahf
lahf
fisttps
daa
mov
loop
daa
add
stc
in
dec
lds
addr16
inc
mov
rcl
cmp
insb
lahf
sub
fs
sbb
jb
test
addr16
jnp
xchg
loopnew
push
jmp
xchg
fbstp
repnz
addr16
outsl
ljmp
jmp
stc
std
popl
rep
add
cmp
mov
xchg
fildll
add
and
stc
adc
dec
icebp
sarl
mov
or
mov
jae
cld
sub
and
push
stc
scas
std
xchg
jmp
fdivrl
movl
imul
out
arpl
repz
fisubs
and
cmp
xchg
sub
out
jecxz
mov
inc
dec
mov
imul
test
test
xchg
aas
sub
aaa
sbb
sbb
jge
stc
std
mov
outsl
insl
sbb
in
sub
aam
aad
jnp
dec
stc
int
jnp
test
lock
sbb
lods
add
movsb
mov
cs
jmp
mov
testb
fdivrl
out
out
xor
ss
leave
xchg
cmpsb
inc
mov
in
push
repnz
out
mov
sbb
daa
mov
push
cmc
lcall
sbb
popf
lret
jbe
fbld
iret
int
xchg
fists
mov
inc
negl
jne
fidivs
shl
xchg
mov
les
mov
push
call
mov
or
jnp
movsb
fmulp
in
aas
pop
nop
std
pop
mov
ret
fisttpl
out
cmpps
les
dec
mov
fwait
ret
mov
xchg
pop
jecxz
data16
push
popf
push
jno
adc
scas
addl
test
jnp
jge
out
in
xchg
jae
insl
xchg
ja
xor
leave
add
into
lret
int
fsubrl
leave
mov
mov
or
out
push
decl
filds
or
and
imul
or
jbe
inc
mov
mov
pushf
fldcw
hlt
clc
scas
in
int
sub
out
sbb
inc
dec
test
loop
scas
nop
push
pop
push
repz
mov
je
push
mov
lea
xor
mov
dec
out
dec
mov
jne
and
or
push
andb
pop
outsb
jl
ss
jl
cmp
jmp
gs
test
sete
inc
inc
lea
setp
xchg
not
neg
aam
clc
mov
push
mov
add
cmc
bt
pushf
cmc
xchg
call
dec
mov
xchg
pop
out
cmc
jne
mov
ja
addr16
mov
sbb
std
or
mov
fsubrl
cmp
in
cmpsb
out
xchg
mov
lods
mull
cltd
or
mov
push
jge
push
dec
pop
jbe
add
jle
stos
or
icebp
loope
sarl
pushf
xchg
dec
or
sub
push
push
mov
out
ljmp
xlat
adcl
add
jmp
pop
mov
stos
or
push
adc
out
icebp
push
out
shlb
or
pop
movsb
jp
int3
push
aas
inc
stos
inc
fisubl
dec
repz
inc
inc
push
ror
cmp
in
gs
pop
push
aas
adc
xor
add
and
xchg
jp
fwait
push
nop
or
adcl
jne
pushf
pushf
mov
or
mov
xchg
xchg
lret
test
jae
cmpsb
dec
aas
mov
flds
inc
push
inc
or
or
loopne
ror
sbb
in
mov
pop
sub
sahf
xchg
push
mov
call
movsb
add
lahf
pop
in
sbb
inc
lret
jl
push
mov
stos
mov
add
imul
ss
push
and
pop
push
push
xchg
ret
or
rcll
clc
sub
and
clc
mov
rclb
adc
adcb
and
lods
mov
and
int3
mov
mov
mov
data16
sub
cmp
je
pop
in
or
jbe
enter
mov
insb
inc
xchg
pop
sete
inc
xchg
sub
sbb
mov
dec
lcall
mov
inc
je
rol
adc
repnz
push
mov
pop
insl
push
clc
popa
sub
sbb
cwtl
mov
sub
ret
sbb
jge
add
lods
addr16
jns
movsb
or
add
add
xor
push
fsubrl
jmp
cmpb
xchg
jnp
mov
dec
cwtl
xlat
sub
push
ss
sahf
fbld
jmp
lea
pusha
push
lea
je
push
cmc
cmp
test
cmp
pushf
pusha
lea
jno
je
pushf
push
lea
jmp
mov
call
xor
andb
sbb
std
imul
xchg
in
jge
push
xchg
push
cmc
and
xchg
push
jg
not
lods
out
mov
jmp
jge
sub
pop
push
sahf
fnsave
mov
xchg
sub
pop
xorb
js
loopne
movsb
stos
insb
arpl
or
jo
cmp
out
cmpsl
xchg
mov
cmpsl
lcall
inc
sbbl
mov
mov
out
push
dec
xchg
cwtl
test
movsb
jg
fs
mov
sub
sub
add
push
btc
gs
adc
cmp
fwait
xchg
sub
cltd
xchg
lods
sub
push
mov
mov
jmp
push
js
lods
ret
inc
rolb
sbb
mov
cli
aas
pop
pop
out
int3
xor
in
cmp
jmp
mov
push
push
xchg
popf
and
hlt
mov
push
jl
xorb
sahf
clc
jb
lock
imull
pusha
ret
cmpsb
cwtl
xchg
imulb
cmp
int3
xor
mov
ret
sarb
jmp
mov
mov
fwait
cmp
add
lcall
addl
sahf
pop
fbld
aam
iret
test
mov
and
lods
bswap
mov
mov
pushfw
inc
in
jge
xor
repz
adc
mov
pop
sbb
iret
sahf
loope
repz
cmpsl
push
movw
jmp
rcr
mov
clc
push
add
call
test
stc
cmp
pusha
pusha
call
or
mov
lea
pop
xor
push
mov
arpl
cmpsb
hlt
mov
shl
xchg
cwtl
in
mov
pop
mov
xor
leave
adc
repz
scas
add
shrb
push
jns
ds
adc
pop
jg
int
pop
frstor
lds
adc
mov
sbb
jecxz
sub
xor
dec
cwtl
popa
mov
adc
rcll
mov
arpl
lea
jae
cmp
call
aad
pop
cmp
outsl
clc
nop
jns
dec
stos
sub
arpl
pop
das
adc
lahf
pusha
xchg
fnstcw
repnz
pop
or
testb
cmc
mov
in
insb
pop
jno
mov
hlt
orb
cmp
jno
mov
and
jle
inc
cli
loope
gs
jbe
dec
les
pop
f2xm1
je
xchg
aad
movsl
sub
std
add
mov
int
push
in
aas
and
adc
mov
cmp
add
mov
mov
ljmp
mov
stc
xchg
addr16
out
inc
imul
mov
mov
repz
out
fisttps
sub
aam
sub
adcb
xlat
add
jl
pop
test
aam
mov
out
xor
and
sti
out
repnz
adc
adc
xchg
push
repnz
sub
dec
out
icebp
cmp
ss
addr16
push
fstl
push
loopne
cmc
lret
es
mov
pop
pop
lea
mov
pushl
mov
mov
movb
mov
lea
call
pusha
pushf
pushf
call
pushf
pushl
call
xchg
lret
and
adc
shrl
add
fimuls
icebp
movsl
divl
inc
dec
push
int
out
sahf
dec
mov
sub
sahf
mov
mov
test
movsl
dec
jae
movsb
add
adc
push
popa
or
jle
sbb
bound
stos
xor
sub
dec
leave
out
ss
mov
or
clc
dec
pop
mov
push
mov
test
sbb
xchg
mov
xchg
je
push
es
xor
in
push
adc
fldcw
adc
cltd
and
dec
leave
sub
out
cs
movsb
cmpb
pop
jge
push
sub
mulb
sti
mov
or
test
loop
aad
jmp
and
mov
ljmp
test
adc
jne
fidivrl
addr16
jl,pn
pop
gs
mov
outsl
sbb
jge
cmpsl
cltd
add
arpl
cli
ljmp
shr
je
cmp
insb
jns
test
push
sbb
jecxz
decb
sub
shlb
xor
xor
xlat
pop
arpl
push
cli
dec
pop
aaa
adc
jmp
pop
int
inc
mov
pop
and
popf
pop
push
arpl
adc
push
dec
sub
adc
movsb
mov
lock
imul
out
lcall
add
popf
pop
jnp
in
dec
mov
fldenv
mov
sub
cwtl
xor
hlt
pop
jne
adc
adc
xchg
xor
push
je
mov
and
lret
pop
aam
std
orl
jge
mov
sub
jl
adc
lret
push
push
jle
cmp
xchg
dec
mov
pushf
inc
or
orb
test
push
outsl
sub
stos
dec
xchg
mov
push
hlt
push
int3
out
sub
lret
das
jl
mov
icebp
mov
jne
ret
lock
imul
adc
sarb
movsb
cmp
sbb
stos
lcall
out
push
outsl
ds
jno
inc
decb
mov
mov
jb
divb
stos
std
push
leave
movsl
xchg
xchg
mov
scas
mov
ret
cmc
mov
cli
push
sbbb
push
sbb
cmp
lds
adc
xchg
into
imul
test
cwtl
les
mov
inc
jae
lret
adc
inc
pop
jne
push
mov
jl
fldt
mov
inc
sub
or
and
mov
push
in
in
sbb
js
in
mov
or
sbb
lods
imul
movsb
pop
popf
nop
adc
out
push
cmp
mov
mov
imul
cmc
mov
icebp
push
mov
ret
add
lods
jg
mov
icebp
cmpsl
shrb
pop
xchg
aam
sahf
sbb
push
add
lahf
add
mov
mov
sbb
and
fadds
dec
pop
cs
cs
sbbl
adc
aad
and
imul
loopne,pn
mov
pop
loope
jne
mov
inc
ret
and
aam
lahf
push
stos
cli
js
xor
sahf
ljmp
mov
or
dec
test
loope
imul
or
push
repz
mov
clc
mov
repnz
or
pop
data16
xor
ffreep
dec
in
dec
cs
gs
mov
cwtl
daa
daa
pop
and
pusha
xchg
lcall
xor
fsub
inc
fsubrl
and
pusha
lods
fsubrp
mov
cli
lahf
fsubrl
jge
std
pop
mov
push
push
adc
lods
or
aad
ss
enter
sbb
fisubs
stc
pop
int
aas
pushf
lcall
cwtl
out
cmp
ficoml
ds
mov
cli
mov
sbbl
pop
cmpsl
cmp
mov
push
movb
aaa
adc
push
mov
jae
jno
and
fwait
mov
inc
dec
or
xlat
sbb
aas
dec
fimull
stos
push
adc
test
mov
rclb
fsubr
outsb
push
rorl
fldenv
in
mov
cli
shlb
aad
cli
adc
jae
cmp
pushf
cmp
movb
jmp
cmpsb
lock
sbb
int3
daa
sahf
adc
in
mov
lods
jl
nop
add
sbb
rcrl
cmp
push
xchg
lret
xor
addr16
sbb
sbb
andb
xor
cmp
pop
mov
sub
sub
ds
pop
push
mov
xlat
xor
repz
cmp
pop
pop
inc
cli
mov
hlt
mov
fisubl
imul
add
imul
mov
inc
or
iret
hlt
inc
cmp
notl
loopne
sar
into
xchg
pushf
pop
in
mov
dec
adc
std
ja
add
push
push
xchg
push
and
pop
fcmovb
jb
shrl
pushf
fwait
mov
push
mov
ss
mov
jmp
sbb
imul
push
pop
adc
cwtl
sub
or
pushf
dec
shll
in
shlb
cmp
add
xchg
push
das
adc
adc
addr16
aad
or
mov
xor
out
call
dec
rorb
cmp
jnp
xor
das
out
xor
sti
sub
mov
ljmp
les
scas
sbb
pop
xchg
push
fisubl
push
or
sub
push
pusha
cwtl
into
push
adc
sub
jp
push
fnsave
mov
lods
popa
cmpsl
mov
fdivr
out
popa
push
rorl
lds
fwait
add
in
push
insb
fucomi
lods
decb
pop
pop
outsl
test
cmp
add
sbb
sbb
inc
pop
pop
dec
xchg
shlb
adc
sbb
paddusb
xor
sbb
rclb
dec
xchg
xor
hlt
mov
aad
in
dec
adc
pop
sub
bound
sti
mulb
mov
cld
loopne
push
xchg
add
adc
and
mov
lock
dec
repz
pop
pop
lock
into
inc
adc
xchg
adc
stos
loope
jno
and
mov
test
push
inc
lds
cld
sub
sbb
pushf
pop
xchg
jle
inc
fldcw
jne
mov
shrb
loop
jne
push
pop
popf
jp
cltd
pop
pop
jne
xchg
mov
idiv
dec
scas
add
pusha
test
mov
sub
jno
push
test
push
pushf
lea
je
cmp
add
pusha
movw
movb
lea
jmp
cmp
xor
xor
mov
push
mov
movsl
cmpb
mov
outsl
push
sti
inc
mov
jecxz
aaa
push
xchg
pusha
mov
and
pop
insl
loope
and
jl
les
icebp
xchg
stos
aaa
mov
inc
roll
xor
mov
mov
das
jne
pop
movsl
repz
push
push
xor
call
sbb
cmp
gs
in
mov
cli
shlb
jmp
lcall
sub
cltd
jns
xchg
fisubrs
mull
sub
add
movsl
andb
add
mov
pop
lods
scas
roll
or
popa
sarb
out
psrld
pop
sbbw
push
push
mov
mul
adc
cmp
cmp
push
rcrl
adc
cld
xchg
push
mov
nop
fwait
xor
xor
mov
jecxz
mov
jnp
sbb
sbb
jbe
push
jp
sbbb
orl
pushf
mov
adc
lods
in
mov
pop
jne
or
push
pop
mov
aad
cmp
xor
and
and
add
mov
mov
adc
sub
jbe
imul
dec
lods
pop
xchg
jl
dec
sbb
xor
pusha
in
jno
cmp
jg
sub
pop
adc
jmp
lret
cmc
mov
inc
fwait
adc
cmc
sbb
dec
jmp
les
nop
jecxz
movsl
and
jb
pop
sbb
test
bound
leave
xchg
leave
loop
fs
adc
jl
xor
inc
jl
push
jp
cmp
js
sbb
outsb
dec
push
bound
mov
cs
shlb
sub
fnstcw
aam
cmpl
sbb
xor
pop
mov
sub
push
or
jecxz
dec
imul
inc
mov
xchg
push
jle
or
cld
xor
push
sbb
lret
push
rorb
adc
xchg
aad
pop
xchg
push
cltd
fmuls
and
bound
add
andl
mov
sub
xorb
es
mov
inc
xor
hlt
in
stos
out
push
mov
push
sahf
jno
jne
stos
jbe
leave
mov
stc
int3
sub
rolb
loop
loope
out
iret
mov
mov
dec
add
add
cmc
lods
pop
cli
dec
sbb
popa
jo
fs
std
xor
in
sub
int3
mov
push
test
loopne
jp
loop
jmp
xchg
push
sub
jg
movsl
cmp
test
sub
cmp
cmpsl
jno
test
or
sti
lds
push
mov
sbb
cmp
push
in
pop
xor
fildll
and
rcrl
stc
inc
mov
add
push
call
cmp
mov
mov
cltd
mov
add
mov
mov
or
add
sub
scas
cltd
add
insl
out
int3
movsl
mov
push
mov
cs
add
sti
push
ret
lods
xchg
and
lret
loopne
jg
adc
rorb
int3
adc
insb
notb
xor
mov
pop
mov
mov
cli
inc
mov
cmc
test
mov
pushf
jmp
lea
je
mov
not
ror
add
shl
shl
sub
bt
shr
stc
shl
bt
push
mov
mov
shld
shl
add
shrd
movzbw
add
sub
xor
pusha
mov
mov
cmc
jmp
pushf
lea
jne
rcl
bt
not
sub
aaa
mov
call
stos
aad
add
adc
shll
add
fmul
dec
mov
icebp
fildl
arpl
mov
popa
and
push
lods
adc
add
aas
ror
adc
loopne,pn
jns
and
std
cmpb
xchg
fisubl
lods
xchg
cltd
std
jnp
adc
jbe
int3
mov
data16
loope
push
out
aam
cmp
xor
ficoms
mov
add
mov
pop
out
push
mov
mov
addr16
pop
rcll
stc
in
arpl
dec
adc
xchg
imul
aad
mov
pusha
pushf
inc
stc
pushf
rol
jmp
adc
loopne
xor
loopw
sub
mov
hlt
leave
pop
mov
cmp
jecxz
fstl
jecxz
xchg
sub
int3
xor
movsl
pusha
adc
ljmp
decb
push
mov
push
push
sahf
into
adc
shlb
xchg
jle
aam
mov
sub
lcall
push
mov
lret
push
dec
pcmpgtw
mov
cld
mov
xchg
rcrl
push
inc
sahf
dec
sbb
fnstcw
xor
bound
enter
ss
lret
mov
sbb
jecxz
push
scas
pop
stos
out
cmc
cmpl
mov
data16
out
lods
add
and
shr
lahf
inc
das
imul
cmp
lods
push
mov
loop
addb
mov
mov
aad
mov
or
add
decl
cs
jg
pop
mov
xchg
cmp
scas
fdivl
mov
mov
sub
jp
insb
stos
jnp
fisubrl
mov
lcall
das
jae
mov
or
rorb
push
sti
dec
aas
stos
je
pop
pusha
dec
pop
push
in
inc
sub
mov
mov
popa
jmp
inc
mov
sbb
sub
aas
hlt
jno
loop
lea
dec
sbb
mov
inc
mov
inc
mov
std
inc
sub
in
int3
push
cmp
or
lcall
fwait
in
jne
sbb
frstor
sub
xchg
loopne
cmp
jecxz
fs
xor
int
mov
push
inc
xchg
xchg
cmp
mov
fisttps
mov
inc
test
insl
jmp
ljmp
push
push
jl
fs
js
push
shll
xchg
mov
aad
xor
mov
xchg
sub
add
mov
addr16
xor
data16
loope
mov
popf
cmp
mov
add
stc
call
jno
lahf
xchg
cmpsb
ds
movsb
mov
ss
cmp
call
shr
sbb
cmp
jmp
push
shrb
movsb
push
and
rorl
or
xor
mov
sub
push
push
cmc
and
sub
jp
mov
call
cmp
or
cmpsb
xchg
loop
push
jbe
xchg
je
aad
jns
cltd
push
lock
std
std
mov
or
pop
nop
ja
inc
cmp
leave
aas
lods
sub
pushf
mov
pop
mov
xor
js
or
jge
mov
xchg
sbb
addr16
aam
pop
movb
fbld
adc
test
mov
cwtl
adc
ret
jbe
adc
xchg
push
data16
cmpsb
inc
xchg
mov
jb
mov
fadds
and
xlat
adc
unpckhps
mov
sbb
pop
sub
in
clc
cltd
push
xchg
arpl
push
pop
in
lcall
push
xor
imulb
jge
les
movl
hlt
imul
mov
scas
lds
cmp
dec
sbb
and
mov
stc
xorb
cld
popa
add
aaa
jle
int
jo
in
js
rorb
sbb
ret
xchg
loop
loop
sbb
xchg
sahf
call
imul
inc
lahf
xlat
test
mov
dec
push
mov
mov
shlb
data16
sahf
hlt
ret
and
clc
jo
lods
je
add
js
adc
and
fnstenv
sub
mov
push
imul
sub
les
or
loop
int3
pushf
jg
jae
pop
jmp
pop
mov
dec
in
mov
push
dec
or
aaa
popl
call
lahf
jmp
mov
xor
jae
push
cmp
jp
jb
cmpsb
mov
stc
or
sub
adc
arpl
jnp
fsubs
and
ja
adc
shrl
jg
ret
mov
scas
in
aas
or
sub
push
push
in
mov
jecxz
scas
xchg
xchg
outsl
and
scas
test
sbb
aaa
clc
inc
push
push
cltd
in
dec
pop
sub
ds
jne
and
mov
dec
mov
popa
jmp
cmp
xor
inc
adc
pop
and
dec
std
ret
movsl
es
hlt
shrl
ja
jl
movsl
mov
rcr
shlb
repz
xor
loopne
fnsetpm(287
outsb
cmp
es
fstpl
imul
jp
cli
and
mov
aam
or
mov
bound
lds
fnstenv
push
adc
pusha
ret
pop
jmp
outsl
fiadds
and
nop
in
stc
movsb
into
adc
mov
loopne
gs
mov
xor
imul
mov
repz
loope
lret
icebp
std
mov
ja
fdivrl
scas
and
sub
fsubrs
idivl
xchg
lds
es
fidivs
mov
jp
adc
xchg
scas
pop
or
pop
test
movsb
xchg
push
push
mov
dec
or
rcll
dec
xchg
loope
outsl
pop
adc
mov
loop
mov
stc
xor
fnstsw
arpl
lret
mov
popa
and
aad
inc
sub
test
mov
dec
sbb
jl
shl
push
dec
add
sahf
inc
fists
std
inc
in
dec
push
das
cmp
dec
jecxz
inc
mov
insb
xor
andl
test
mov
subb
fs
pop
xchg
fs
cmc
int
gs
aad
xchg
push
and
mov
aam
xchg
inc
test
lea
push
enter
and
jle
adc
pop
imul
push
test
and
dec
jne
enter
pop
mov
cwtl
in
mov
loop
mov
fidivs
rorb
or
repz
cli
pop
xchg
xchg
movzbl
pop
bswap
pushf
not
pushf
mov
not
mov
movb
mov
bswap
push
movl
movsbl
mov
movb
pushf
pushl
pusha
pushl
ret
add
adc
dec
fcmovnu
shlb
mov
or
xor
sbb
push
inc
mov
enter
ja
sbb
subb
scas
in
inc
mov
pop
lods
data16
insl
ret
xor
jo
out
lret
mov
lahf
jge
fwait
popa
and
adc
lea
loop
shrl
neg
xchg
pop
inc
je
sbb
pop
xchg
jb
fcmovu
inc
stos
push
and
inc
xchg
xor
jne
sahf
xlat
xchg
push
cmp
cld
or
jno
jb
loope
in
mov
aaa
jg
loop
push
xchg
pop
pop
mov
fs
fwait
jge
and
cwtl
mov
xchg
pushf
push
fsubrl
minps
ljmp
mov
push
stos
aaa
lea
cld
pusha
dec
or
mov
sbb
clc
iret
sub
xor
call
mov
mov
shr
bts
mov
test
cmp
shl
push
lea
je
pusha
mov
movw
mov
movsbw
pusha
not
movl
movzbw
lea
jmp
call
mov
lds
ret
sbb
sbb
int3
inc
daa
push
out
outsb
bound
mov
dec
mov
dec
repz
push
jle
push
ds
lods
mov
mov
ljmp
xchg
push
and
sbb
out
inc
jge
dec
push
adc
movsl
arpl
mov
pop
cli
push
arpl
xchg
mov
test
push
ja
adc
xchg
in
mov
push
inc
mov
mov
sbb
hlt
scas
cmp
cmp
jb
in
inc
stos
or
pop
sbb
xchg
stos
push
cmpsl
jne
fdivs
mov
enter
fwait
sarl
sahf
shlb
xchg
ss
imul
lods
cmp
or
sub
cmp
popa
inc
and
dec
jb
adc
adcl
xor
cltd
jno
mov
sbb
ss
cmc
mov
movsl
jecxz
dec
sub
cltd
loopne
repnz
loopne
cld
or
das
push
fs
repz
lock
lret
cmp
xchg
repnz
dec
mov
aad
jp
out
subl
push
iret
cmpl
popa
xchg
cmc
repnz
loop
test
out
sbb
aam
pusha
cmpsl
mov
xor
sbb
push
jecxz
js
lcall
jge
iret
mov
adc
clc
sub
or
mov
movl
stos
mov
aad
cmp
inc
jmp
scas
in
pop
notl
xor
movsb
or
lret
dec
sub
xchg
pop
mov
sti
stos
pop
mov
fsubs
xchg
mov
push
and
iret
ret
jmp
mov
andl
cld
ret
faddp
cli
jp
mov
les
in
and
push
scas
outsl
xchg
outsb
inc
loop
cmp
loopne
sub
push
or
sarb
inc
loop
dec
ror
hlt
test
inc
lds
in
hlt
push
sahf
cmpsb
std
iret
das
sti
add
aad
mov
cmp
out
lds
cmp
pop
std
pop
pop
ds
sbb
adc
imul
imul
hlt
fdivr
mov
mov
pusha
in
test
mov
pop
dec
int3
movsb
aaa
lahf
mov
push
cmpsl
and
in
mov
sbb
daa
cmpsl
push
sub
jb
pushf
adc
and
clc
bswap
xor
andl
and
and
int
jecxz
mov
xchg
insb
inc
add
shll
mov
int
push
jae
sub
fldl2t
dec
inc
cmpsl
xor
cmp
popa
sub
and
cmpb
cltd
rorb
ljmp
mov
sbb
loopne
aad
lret
ficoms
pop
outsl
mov
pop
lods
ret
mov
jae
inc
xor
mov
cmp
push
pop
cmp
loop
stc
int3
add
sub
aad
orb
lea
ja
bt
bt
cmc
add
stc
pusha
movb
or
movl
push
lea
je
test
jmp
mov
lret
push
jns
int
push
sbb
stos
rcrl
mov
test
popf
das
cmp
mov
mov
lock
or
sub
out
mov
sub
repnz
push
xchg
sbb
xchg
and
xchg
mov
mov
out
jecxz
ja
xlat
or
xor
pop
xlat
insl
push
inc
fnstsw
outsb
in
fcmovb
loopne
insl
enter
filds
xchg
clc
mov
dec
adc
pop
lahf
bound
fldenv
aad
push
cmp
and
iret
sub
inc
jecxz
cmp
int3
dec
xor
mov
add
je
sbb
pop
insb
and
shrb
nop
fmul
sbb
push
pop
pop
iret
dec
sarl
push
aad
mov
jmp
mov
imul
loope
or
sbb
mov
sub
insb
arpl
ljmp
lahf
test
add
pop
imul
xchg
fdivs
call
fs
jne
rcr
ror
shld
sub
xor
mov
neg
add
or
jo
mov
bt
test
call
ficompl
xchg
dec
add
mov
call
cltd
divb
push
mov
fwait
xchg
pusha
shlb
popa
lds
jnp
sti
mov
adc
and
mov
inc
lds
repnz
xor
nop
out
mov
stos
pop
loopne
adc
nop
scas
pop
adc
push
push
das
cwtl
gs
cwtl
jle
lret
sub
fsubl
jns
movl
push
movl
push
pushf
pushf
lea
jmp
xor
repz
jp
int3
sub
imul
das
jg
push
icebp
sub
out
mov
pushf
out
pop
dec
add
and
pusha
stos
add
nop
sahf
mov
pop
jmp
adc
jle
je
add
push
lret
mov
pop
mov
add
bound
mov
loop
repz
insb
lods
and
jnp
scas
enter
hlt
sub
dec
pop
and
mov
cmp
bound
divb
push
ja
daa
fsub
xchg
outsb
and
push
cmp
pop
inc
mov
jmp
inc
scas
lds
lods
lea
jl
iret
aaa
add
xchg
loope
mov
fbstp
lcall
mov
leave
pusha
icebp
les
ljmp
stos
and
mov
dec
mov
mov
xchg
or
inc
jbe
pop
outsb
or
add
lret
gs
sahf
pop
aaa
test
and
mov
divl
pop
sub
xor
int3
test
jmp
xchg
into
dec
mov
pusha
adc
adcl
push
push
addr16
les
fnstenv
les
jae
mov
cmp
jg
insb
clc
std
sbb
or
mov
push
jb
cmp
arpl
sti
adc
aaa
popf
std
iret
out
orl
jp
aaa
hlt
dec
test
pusha
in
das
or
aad
jno
adc
loope
test
sahf
mov
stos
aaa
jmp
into
push
in
jp
and
sub
mov
jecxz
xchg
aad
jno
rol
mov
jno
aaa
cmp
insl
ret
and
test
mov
jl
mov
scas
cmp
dec
andl
mov
jo
jmp
test
fimull
icebp
dec
outsb
mov
jb
or
enter
jns
fsubl
mov
pop
xchg
cmp
jecxz
lods
push
pop
pop
jno
nop
aam
cmp
in
sub
rcll
testb
test
stc
rcrl
je
insb
sbb
stos
je
sarb
sarb
add
fnstenv
out
pushl
popl
movb
pushf
pushf
movw
pushl
ret
cli
std
push
push
mov
and
dec
int3
aaa
sub
andl
push
inc
cltd
out
out
pop
cmpsb
cmp
sahf
sub
pop
mov
test
stc
and
insl
dec
sbb
mov
rclb
xor
scas
call
xchg
pushf
pop
call
cmc
mov
pushf
pushf
call
call
movsb
out
adc
cmpsb
out
mov
shrb
or
jae
sti
pop
out
dec
lods
inc
dec
stc
adc
shll
mov
int3
hlt
jl
cmc
mov
ljmp
scas
cltd
dec
lds
mov
mov
sbb
pop
mov
dec
push
sbbb
xor
outsl
cmp
cs
iret
adc
inc
mov
add
jge
dec
mov
mov
lods
xchg
jae
sbb
inc
mov
cmp
mov
in
lret
mov
jmp
adc
pushf
jmp
loop
or
stos
add
push
sarb
push
nop
test
xor
dec
cltd
jnp
cmp
xlat
mov
out
cmp
push
xor
mov
imul
call
roll
roll
sub
mov
push
inc
xchg
or
push
mov
xor
das
lods
push
inc
xchg
rol
pushf
stos
imul
popf
mov
push
sbb
stc
andl
xchg
stc
and
mov
movsb
insb
jnp
jne
fiadds
aam
pop
es
adc
das
and
jno
loopne
cmp
cmp
leave
loope
mov
nop
loopne
mov
popa
es
mov
in
add
cmp
cmp
pop
sahf
cmp
jmp
and
sub
pop
ja
xor
cmp
cmp
stos
jne
out
fld
push
xor
cwtl
divl
cmc
fbld
outsl
scas
xchg
fisttps
dec
jmp
adc
add
and
mov
xor
pop
sahf
push
jno
cmp
jbe
mov
test
lret
pop
pop
mov
in
xlat
mov
cmc
or
jns
push
sahf
and
dec
xchg
adc
dec
pop
es
mov
push
int3
add
jp
or
cltd
fdivs
in
enter
ljmp
push
lret
fs
je
call
call
jmp
add
inc
push
inc
outsl
insb
outsl
jb
add
xlat
jo
aad
in
mov
movsb
lar
lods
xchg
jp
in
in
inc
push
in
push
popa
scas
jge
xor
jbe
arpl
lcall
mov
adc
lods
fcomip
je
jo
mov
adc
popa
lret
push
jle
sub
nop
push
pop
in
insb
mov
clc
push
fistps
or
mov
daa
pop
mov
pop
inc
or
in
stos
add
jp
adc
mov
out
addb
iret
xor
repz
pusha
jnp
xchg
jle
enter
jbe
push
aaa
add
arpl
push
repnz
mov
std
loopne
jno
dec
hlt
or
fbld
inc
lcall
and
pop
inc
inc
mov
fcmovu
in
das
test
jbe
mov
jo
add
outsb
lock
rcrl
mov
clc
test
inc
rcrl
xor
adc
and
in
divl
clc
sbb
pushf
or
sub
repnz
dec
mov
roll
out
ja
mov
out
mov
loop
mov
fisubs
insl
push
ja
pop
inc
inc
stos
mov
push
mov
outsb
push
push
fstpt
adc
push
repz
sbb
jb
xlat
or
movsl
js
arpl
lods
xor
add
and
add
ret
add
inc
imul
shll
inc
test
testb
ljmp
dec
cmc
ror
mov
jnp
dec
inc
gs
std
push
mov
aam
mov
dec
std
pop
add
fldl
loop
sahf
clc
repz
cmp
ffreep
dec
inc
or
insb
and
imulb
push
loop
pop
addr16
cltd
lea
add
push
clc
cmp
fcmovnu
fsubrp
pop
xchg
cld
push
xor
out
sub
pop
mov
scas
js
jecxz
pop
std
xchg
mov
test
cwtl
and
jl
mov
mov
dec
mov
sarb
adc
lea
jae
pushf
pushf
movb
push
lea
jmp
jmp
jbe
shll
jns
jae
retw
mov
jecxz
cmc
or
sbb
cmpsl
mov
push
sub
fs
mov
std
add
jle
or
jns
mov
incl
decb
push
push
stos
jge
imul
sbb
shl
jae
in
jb
mov
mov
sub
fdivs
imul
leave
xorb
cmp
imul
out
into
sbb
and
jl
xchg
mov
aad
ds
xor
add
movl
pop
pusha
pushl
lea
lea
jo
pusha
pushf
pushf
movl
lea
jp
pusha
pushl
popl
movl
push
pushf
pushl
ret
inc
ja
adcl
mov
push
dec
cmpsb
scas
mov
es
test
mov
loopne
jno
push
push
scas
icebp
dec
fdivl
xchg
pop
hlt
push
sub
lret
inc
pop
shlb
mov
lods
icebp
aaa
dec
ret
lcall
push
hlt
mov
push
inc
xchg
jo
int
sub
pop
cli
dec
movsl
ja
mov
adc
int
mov
shl
pop
jl
cwtl
jg
ljmp
scas
sbb
sub
sbb
pop
pop
adc
sub
jmp
inc
aad
scas
inc
or
push
pop
fcmovnb
cmp
mov
test
outsl
mov
push
inc
push
dec
xchg
loope
mov
rorb
add
xor
pushl
call
call
arpl
mov
into
mov
jl
bound
mov
cmc
inc
fidivs
push
bound
push
out
sbb
stos
test
sub
cs
push
movsl
mov
xchg
clc
rorb
in
jnp
lods
loope
xchg
test
push
fldenv
iret
cwtl
sub
xor
xor
test
pop
mov
push
xor
dec
lcall
dec
jle
sub
aad
jne
movsl
icebp
das
dec
mov
rcll
sar
push
inc
push
adc
faddp
xor
add
mov
daa
subb
daa
fisubl
jae
sbb
in
and
enter
adc
movsb
les
mov
inc
imul
incl
sub
pop
xlat
xchg
daa
test
pusha
ret
jg
scas
pusha
adc
add
pushf
fsubs
decl
pop
pop
jno
mov
fwait
daa
mov
shrl
ds
sti
jmp
stc
bt
pusha
add
bt
stc
bt
cmp
pushf
jmp
push
push
or
jmp
mov
pusha
not
lods
pushl
bt
cmc
movb
rol
movb
push
mov
pushf
dec
push
cmp
xor
call
pop
imul
or
jge
adc
mov
xorl
sbb
repnz
lahf
mov
aad
sub
dec
popf
in
xlat
dec
xchg
and
xchg
mov
xor
xor
ret
enter
pop
and
cmpsb
repz
mov
sbb
test
enter
call
test
lret
xchg
pop
jmp
lds
xchg
pop
and
mov
aam
imul
mov
sbb
mov
sbb
pop
rcl
cmp
jp
mov
ret
xchg
gs
adc
pop
cmc
nop
lds
stos
dec
mov
popf
pop
test
push
push
cmp
xchg
loopne
addr16
inc
push
sbb
add
outsl
jne
mov
je
stc
pusha
fisubs
pop
inc
lock
ja
sarl
mov
enter
pop
roll
test
aam
out
lcall
clc
pop
dec
popf
fs
mov
enter
insb
push
xor
jle
add
push
dec
es
std
mov
and
cwtl
cmc
sahf
mov
sahf
cwtl
push
ret
jl
mov
jo
mov
out
popf
jge
cmp
mov
mov
xchg
jmp
add
and
mov
xchg
xchg
push
dec
cwtl
outsb
or
jmp
mov
and
cmp
dec
jbe
or
inc
nop
and
xor
dec
mov
in
lret
cmpsl
lret
mov
mov
mov
lcall
mov
lea
call
pusha
cmp
lea
jno
pushf
lea
jae
bt
cmp
call
inc
mov
das
sbb
or
loop
dec
and
or
aad
jp
sub
add
lahf
and
pop
stos
jl
sbb
movsb
cmp
loopne
and
sti
jne
roll
push
dec
cmp
inc
je
mov
xchg
jle
out
xor
push
cmp
jp
pop
je
add
clc
into
mov
inc
les
mov
movl
push
pushf
lea
jmp
cmc
stc
jmp
je
xor
fadd
in
dec
out
shlb
cmpsb
cltd
lea
outsb
jbe
les
adc
mov
es
fstpt
imul
lret
mov
mov
mov
inc
sbbb
sub
inc
out
popf
sbb
xor
pop
das
rclb
aam
xor
movsb
adc
or
js
fdivrs
inc
push
out
movsl
aas
cmp
mov
push
loope
cmp
xchg
stc
aaa
mov
xor
insl
call
mov
adc
fs
pop
fstpt
clc
push
cltd
jmp
mov
adc
pop
dec
mov
pushf
push
inc
inc
push
not
movb
mov
push
jmp
inc
cltd
mov
popa
in
in
sarl
in
xor
mov
sub
test
sub
adc
jle
cmpsb
in
movl
ss
ds
ret
enter
add
icebp
sbb
int3
fwait
out
lods
insb
xor
push
jne
dec
mov
test
add
iret
mov
aas
mov
mov
dec
and
sbbb
pop
push
pop
mov
sub
pusha
sub
aas
adc
xchg
mov
iret
adc
xlat
jne
lock
insl
movsl
loop
in
mov
hlt
pop
pop
cmp
adc
xchg
mov
and
imul
inc
push
xchg
icebp
dec
adc
inc
xchg
push
jnp
in
xor
andb
inc
repz
icebp
sbb
cmpsb
iret
xor
xor
sub
dec
pushf
or
stc
sbb
add
ja
ljmp
repz
push
cmpb
sbb
sbb
insb
inc
lret
jno
mul
sub
jnp
push
clc
inc
xchg
out
push
aaa
test
sarw
js
repz
push
out
insb
pop
mov
jmp
ja
jnp
cmc
dec
popf
inc
stc
or
jecxz
enter
loopne
sahf
dec
mov
adc
mov
scas
aaa
add
cmpsl
jns
sbb
sub
pushf
jae
mov
ss
int
cltd
pop
jno
xchg
loop
ja
dec
orl
inc
stos
add
repz
and
push
ja
mov
cwtl
imul
imul
sub
fdivr
cmp
mov
sbb
test
imul
mov
pusha
bt
stc
shr
pushl
jmp
add
stc
jmp
lea
call
jmp
rep
push
mov
pushl
lea
jmp
lea
je
pusha
cmc
cmp
call
jmp
mov
sbb
rcl
push
leave
push
and
ffree
mov
cs
stc
cmpsb
out
mov
jl
or
pop
inc
sbb
mov
into
xlat
pusha
mov
pop
icebp
push
xchg
adc
divb
int
unpckhps
xchg
adc
push
dec
enter
aas
pusha
mov
push
rorl
cmp
test
cmp
rorb
insb
xor
fisubs
and
mov
fldenv
or
inc
jp
jbe
cmp
xor
or
and
or
jg
mov
sti
mov
and
xor
fs
push
pop
int3
imul
arpl
daa
jge
int
jecxz
dec
jl
js
movsb
jmp
movsb
or
sahf
fisubs
sub
lods
inc
cmp
bound
ret
fs
and
cwtl
repz
or
sub
int3
push
enter
or
test
bound
sbb
mov
aad
lock
or
and
loope
pop
inc
xchg
sbb
outsl
jo
lock
jecxz
lods
sub
faddl
cmp
inc
std
xor
jmp
out
std
and
dec
mov
fisubl
xchg
xchg
fucomip
adc
inc
aad
popa
jge
rorb
loopne
adc
mov
ljmp
or
in
push
or
sbb
mov
add
pop
mov
call
std
dec
or
push
fistl
rcrl
fisubl
cmp
mov
push
pop
mov
jcxz
shlb
adc
add
rcl
les
jnp
cmp
shrl
inc
add
aam
jnp
cld
cmpsl
and
clc
testl
loopne
leave
cmp
mov
adc
outsb
shll
fs
in
pop
mov
in
jae
addb
movb
dec
and
psubusb
adc
daa
push
or
xchg
je
imul
xchg
ljmp
imul
lea
call
stc
call
cmc
lock
pop
cmp
add
cli
mul
xlat
mov
popa
cmp
inc
sub
cmp
dec
testl
xlat
in
xchg
in
movsl
aam
xchg
shlb
sahf
pop
es
enter
mov
sbb
and
mov
lds
pop
cmp
mov
test
hlt
pop
push
jbe
mov
daa
inc
or
cld
xor
mov
das
test
push
test
or
hlt
mov
fdivr
cltd
jecxz
mov
mov
in
cmp
push
fnsave
push
and
push
cld
xchg
dec
inc
push
dec
orw
sub
and
inc
outsb
in
bound
sub
lahf
mov
jecxz
dec
rcrb
mov
push
loope
xor
out
repnz
pop
mov
ljmp
push
push
pop
and
inc
sbb
mov
nop
mov
outsb
sbb
xchg
mov
bound
mov
int3
sbb
ja
fs
fsubrl
cld
lea
call
jmp
stc
dec
xor
icebp
sbb
mov
bound
popf
xchg
sbb
shll
orb
or
sbb
aad
lcall
jmp
xchg
cmp
out
ret
sbb
and
mov
outsb
nop
push
lret
sub
movsl
and
sub
pop
aas
inc
jmp
mov
decl
inc
xor
ss
adc
dec
push
fidivrs
orl
cmp
mov
push
lea
jb
pusha
bt
cmp
movw
pushl
movb
lea
ja
cmc
pushf
jmp
lea
pop
lea
push
pusha
movzwl
not
lea
push
push
mov
pop
mov
movb
jmp
lea
ja
cmc
imul
bt
clc
add
push
mov
lea
jmp
add
pusha
pushf
push
lea
jmp
movl
pushf
pushl
popl
movw
pushl
ret
jmp
bt
bt
add
test
cmc
cmp
bt
cmp
not
jmp
shlb
push
decl
add
mov
fcomps
out
add
popa
push
mov
aam
shl
jns
shll
sbb
fwait
in
lds
mov
ja
ds
push
sti
xchg
mov
sub
adc
inc
adc
inc
pop
shlb
jmp
ret
addr16
imul
aas
sbb
cmpsb
iret
jmp
testl
fisubrl
add
mov
int3
mov
mov
adc
mov
jl
outsb
xchg
movsl
adc
pop
mov
mov
jp
testl
cmpsl
mov
rorl
imul
addl
shrb
and
aad
xchg
xlat
push
mov
sbb
jnp
data16
out
sub
fdiv
insb
in
or
mov
inc
cli
clc
sti
into
inc
stc
or
cmp
mov
add
stos
popf
and
movsb
fcomps
gs
pop
mov
or
into
pop
jmp
bound
out
xchg
imul
mov
jle
add
js
mov
inc
inc
lret
mov
jmp
aam
push
mov
sti
call
inc
add
shrb
mov
movsl
pop
popf
or
cmc
js
pop
add
mov
icebp
idivl
les
je
push
dec
fwait
lea
popf
add
popl
mov
fs
mov
mov
xlat
ffree
inc
mov
divb
inc
add
add
out
out
sahf
xor
mov
adc
jne
fisubrs
mov
out
call
adc
dec
xor
xchg
in
aas
in
inc
jnp
pop
mov
loope
pop
mov
stos
test
daa
jno
lock
jo
or
pop
out
add
cmpsb
xchg
xchg
sti
push
mov
test
push
dec
icebp
rclb
xor
xchg
and
lret
out
or
or
adc
fs
lret
mov
fwait
mov
loope
lock
rcl
test
pop
xchg
mul
mov
cmp
fiaddl
dec
mov
les
mov
and
clc
sbb
lcall
cmc
xchg
adc
icebp
inc
out
test
sbb
int3
inc
in
arpl
in
xor
inc
jno
roll
inc
dec
xor
in
xlat
mov
shl
orl
loopne
pop
adc
add
out
adc
jmp
daa
in
hlt
xor
insb
les
data16
call
jno
ds
xchg
icebp
iret
fidivs
mov
jo
jecxz
jecxz
inc
lret
data16
sbb
test
push
push
out
ret
jecxz
cmp
xchg
xor
mov
add
out
mov
aam
sti
jns
lock
xchg
rolb
cmpsb
in
movsl
shll
jb
jne
outsl
aam
inc
push
sbb
adcl
mov
mov
shll
pop
pop
xchg
sub
repz
shll
inc
aam
jmp
cmp
shlb
cmc
stos
mull
mov
shrl
inc
cmpsb
lcall
pop
fsubs
addr16
repnz
sub
xor
push
shll
sti
imul
add
jbe
mov
subb
push
add
cmc
enter
out
lret
in
pop
xchg
jbe
add
scas
roll
mov
jle
into
xor
xchg
mov
mov
inc
repnz
in
aas
xlat
inc
in
out
inc
inc
data16
fiaddl
sti
jge
dec
xlat
ret
pop
lds
out
in
mov
inc
xchg
inc
popa
popf
cmp
inc
mov
jns
mov
inc
add
jmp
aas
jg
out
shlb
jg
xchg
add
push
jg
lcall
adc
aas
incl
test
xchg
cmpsl
stc
push
inc
xor
scas
arpl
into
movb
cmpsb
push
testl
inc
mov
in
arpl
out
pop
jne
add
inc
andl
xchg
arpl
es
movsb
ja
cmpsb
xchg
mov
cli
in
mov
jecxz
add
scas
pop
push
xchg
bnd
movl
jecxz
std
popf
lds
repnz
ja
ja
addr16
pop
in
loop
jmp
icebp
and
test
pop
in
inc
aam
jl
xchg
inc
std
push
mov
arpl
addl
loop
out
jae
cmpsb
and
jbe
outsl
inc
jnp
add
jns
repnz
mov
lds
loopne
movb
mov
cmc
in
loop
add
add
ja
in
jecxz
repz
and
ja
jae
ja
ja
movl
movb
xchg
arpl
add
in
ja
add
lds
aas
push
iret
mulb
xchg
les
fs
std
lds
sti
inc
in
out
out
mov
arpl
and
sbb
out
xchg
lds
daa
andl
aam
shl
xchg
and
cmpsl
addl
loop
and
jne
movsl
and
jne
lds
add
pop
movsl
or
mov
gs
sahf
loop
inc
fisttps
insl
pop
fs
inc
cmpsb
cmp
sbb
aam
inc
jg
add
jno
loop
inc
aaa
mov
rclb
in
divl
add
xchg
push
je
fsubr
lret
data16
js
adc
and
scas
mov
fiaddl
les
loopne
cmp
add
or
inc
in
add
popa
xchg
jg
mov
mov
mov
int3
js
es
fisubrl
or
scas
xchg
ret
sbb
mov
daa
pop
in
xor
jno,pt
mov
ret
add
xor
fimuls
cmp
cltd
rorb
stc
mov
pop
pop
mov
push
jnp
pop
add
cmc
rcl
push
jae
andb
dec
shl
xchg
aam
shr
insl
out
test
mov
adc
mov
insl
scas
pop
loope
dec
cmc
sbbb
loop
andl
adc
mov
jbe
shlb
add
shr
add
test
daa
xor
or
xchg
cmp
inc
rorb
mov
int3
or
imul
and
icebp
add
lahf
repz
mov
stc
pop
lea
push
or
inc
push
add
jns
mov
out
out
add
jb
daa
iret
push
push
xlat
xchg
repnz
jmp
jno
test
aad
pop
out
add
jno
lret
ja
or
ljmp
fists
shll
mov
stos
clc
insb
cli
ds
ds
mov
movsb
insb
push
into
or
mov
push
or
or
pop
push
aam
adc
iret
stos
mov
push
xsavec
push
and
loope
lock
icebp
cmp
sub
push
scas
push
mov
add
stc
pop
add
stos
xchg
xchg
out
cmp
adc
pop
jecxz
xor
jge
shlb
add
out
lahf
mov
mov
icebp
dec
add
sahf
and
aas
sahf
cmc
pushf
cmpsl
mov
mov
push
lahf
rcll
loope
adc
add
mov
sbb
in
shl
fdiv
mov
ja
xlat
cmpsb
xchg
leave
daa
daa
dec
icebp
pop
jle
xlat
mov
push
into
dec
aaa
ror
lret
inc
insb
jnp
jl
ret
xchg
ja
outsl
out
jp
pusha
cltd
xchg
cmpsb
ja
sub
mov
stos
movsb
push
in
out
movb
in
cmp
cmp
mov
les
icebp
jb
dec
outsl
inc
stos
pop
cmp
in
pusha
movsb
lea
jp
lret
hlt
push
add
sub
clc
sub
imul
jbe
stos
in
aam
addr16
lods
call
shrl
je
pop
pop
imul
mov
jp
or
lock
and
cmpsb
popf
and
push
xor
cli
and
stc
xor
fwait
push
mov
jno
push
inc
shl
fldenv
pop
inc
sahf
loope
push
cmp
std
mov
mov
sbb
add
push
ss
push
imull
add
add
xor
sti
stc
lret
xorl
dec
ja
pop
repz
xchg
loopne
xor
sbb
inc
mov
inc
mov
test
ds
rol
jle
pop
scas
push
add
repz
fwait
jb
or
cmp
shlb
jmp
cmp
xorb
mov
xchg
mov
xor
cmpsb
lods
ret
fsubs
jnp
cmp
jmp
xor
negl
mov
push
mov
call
shll
mov
cltd
add
adcl
sbb
mov
mov
dec
lret
pop
push
jge
jmp
add
mov
and
and
sbb
xchg
fwait
insb
dec
cmp
or
sub
cltd
sbb
dec
ret
lret
inc
nop
xor
mov
dec
jnp
iret
sub
dec
xchg
add
hlt
cmp
loopne
test
xor
inc
jecxz
pop
mov
mov
mov
mov
les
orb
enter
pop
lock
into
fldenv
aam
xlat
cmpsl
mov
jecxz
out
loop
mov
dec
xlat
mov
mov
mov
dec
dec
mov
enter
cmc
shll
adc
cmp
mov
mov
lds
aaa
jb
mov
jae
and
pop
push
cmp
or
leave
cmp
jne
scas
mov
mov
stc
pop
pop
inc
inc
sti
push
mov
or
mov
loope
stc
cmpsb
inc
pusha
fs
std
es
jne
jmp
fmul
pop
ljmp
shl
xchg
movsl
nop
xor
sbb
and
pop
mov
add
inc
ret
mov
sarb
push
jge
cmpsl
test
test
fs
ljmp
mov
mov
xchg
das
push
in
stos
xchg
aas
test
mov
cmpsb
jnp
or
call
jl
cld
lcall
dec
sbb
daa
stc
es
pop
mov
pop
add
mov
stc
mov
test
add
mov
mov
out
test
dec
jecxz
mov
mov
daa
in
mov
cmp
add
repz
pop
subl
cmp
decb
out
dec
int3
xorb
sti
xchg
sbb
lret
mov
lea
bound
aaa
rcrb
add
loopne
ficoms
shll
inc
inc
cmpsb
dec
mov
sub
mov
mov
sarl
jmp
popf
aam
leave
sbb
and
addr16
icebp
in
scas
cld
loopne
dec
ja
mov
stos
ret
jbe
out
push
mov
mov
std
xor
bound
jae
test
test
and
imul
and
cmpl
jbe
add
jg
ret
repz
mov
out
in
inc
cmpsl
pop
rclb
mov
iret
icebp
ret
xchg
mov
pop
faddp
sub
mov
pop
add
cmp
into
pop
fldenv
push
sub
or
out
test
shlb
stos
mov
push
sti
stc
les
pushf
cmc
test
ja
addr16
gs
addl
sbb
mov
jecxz
xchg
int
ljmp
jno
cmp
jae
mov
mov
stos
lahf
int3
pushf
insl
xchg
scas
mov
cmp
sti
aas
dec
aad
in
add
xchg
mov
or
inc
mov
xchg
leave
adc
mov
pop
add
add
dec
jne
repz
test
xor
inc
and
gs
lret
fbld
adc
rcrb
inc
push
mov
lcall
jnp
push
xchg
and
inc
test
mov
lret
dec
mov
sti
pop
add
lcall
rcrb
adc
add
insb
cmp
lds
pop
arpl
out
es
stos
push
idivl
inc
xchg
push
and
jecxz
inc
mov
mov
jp
mov
jmp
repz
and
out
imul
les
dec
std
mov
nop
mov
jne
mov
push
in
adc
mov
xor
les
jle
loop
cmpsb
lret
stos
push
out
mov
jno
in
cmpsb
cltd
jecxz
into
in
push
and
test
out
add
ret
sbb
out
jg
push
add
jp
fwait
mov
and
inc
cmpsb
adc
cmp
aam
mov
inc
lcall
stc
ja
out
inc
jb
jp
aas
xlat
mov
xor
cmp
xor
mov
inc
sub
std
xlat
jb
sbb
xchg
testl
in
in
xor
mov
cmp
mov
fnstcw
jns
es
arpl
mov
loope
inc
pop
lcall
pop
test
sub
xchg
arpl
jmp
mov
lds
cmp
jo
sub
pop
mov
or
mov
fdivrs
mov
mov
push
add
jo
ret
sbb
loopne
insb
loopne
sub
jno
mov
sbb
mov
fistl
mov
fwait
mov
imul
stc
mov
inc
pusha
imul
xchg
movsb
jns
ds
pop
inc
lret
pop
shr
and
in
insl
repnz
lods
dec
push
data16
mov
insb
movb
cli
hlt
popf
or
cmp
mov
shll
loop
loope
lret
xor
cmpsb
ds
in
shl
bnd
pslld
add
push
stc
shl
pop
fmuls
in
inc
mov
ljmp
pop
add
out
xchg
mov
aam
jne
stos
fucomp
frstor
lods
dec
cmp
pop
aam
xchg
out
hlt
sbbl
ds
cmpsl
and
push
sbb
cmp
mov
cmpb
push
xorb
add
bound
loope
std
push
and
push
dec
mov
inc
test
cmp
push
popa
es
mov
fmul
mov
dec
std
mov
es
dec
outsl
mov
cmp
dec
out
jbe
insl
addb
adc
sahf
gs
xchg
aad
pop
andb
xchg
xor
out
loop
add
add
data16
inc
fadds
mov
add
insb
xchg
fldcw
add
or
xor
xchg
fstpt
or
add
inc
std
inc
inc
jge
jno
inc
cmp
imull
insb
gs
add
stos
shl
jo
pop
pop
icebp
cltd
push
cld
out
push
imul
jmp
je
lea
jnp
rcr
icebp
movsb
adc
inc
mov
jecxz
js
js
call
jmp
fwait
push
xor
mov
inc
je
push
dec
fbld
xchg
pop
loopne
fmuls
sbb
and
adc
jns
insl
and
lcall
lcall
pop
xlat
loope
mov
lock
into
inc
fbstp
daa
addr16
ja
xlat
push
dec
adc
mov
mov
addr16
or
arpl
ljmp
and
int3
fsubrs
ljmp
add
test
out
lcall
test
xchg
xor
in
cmpsb
mov
push
xlat
rcr
daa
push
pop
lds
mov
aad
xor
xchg
adc
dec
test
fistpll
xor
ja
ret
lods
int
pop
pushl
lahf
out
rorb
lret
loope
dec
shrl
mov
lods
mov
push
dec
mov
inc
mov
and
hlt
popa
mov
jge
stc
aaa
adc
mov
not
adc
push
inc
enter
cmp
adc
cmpsb
iret
lods
dec
hlt
shlb
mov
inc
lret
pop
and
lret
cld
cs
lods
test
inc
dec
scas
cmp
stos
adc
inc
jecxz
sbb
insb
jge
inc
movsb
pushf
jae
sub
rolb
addr16
scas
mov
xchg
cli
sub
ljmp
xchg
movsl
in
jle
add
cmp
add
xchg
or
mov
mov
cmp
add
cmp
mov
cs
jnp
shlb
gs
stos
mov
and
jp
xor
push
mov
sub
aam
sub
in
addr16
adc
add
popa
xlat
insl
ror
inc
bound
mov
addr16
mov
adc
add
loop
scas
adc
fcompl
jmp
leave
rolb
xchg
cltd
sti
sar
jecxz
in
or
sbb
aam
mov
or
lods
cmp
es
or
mov
mov
imul
inc
sbb
dec
or
aam
enter
pop
lods
jmp
add
idivl
inc
dec
daa
stc
out
pop
sahf
cmpsb
and
js
fcmovnbe
mov
inc
mov
cmpb
movb
imull
sbb
cmp
iret
pop
sub
call
adc
cmpb
lret
call
lea
imul
sbb
push
cmp
mov
cmp
mov
ror
cmp
out
xor
adcb
aaa
push
ljmp
cmp
sbb
mov
add
sbb
xor
pop
jp
inc
orl
inc
xchg
lods
loop
stos
or
imul
pushf
xchg
rorl
and
outsl
and
fdivrl
nop
testl
dec
add
push
sahf
imul
jno
mov
icebp
mov
xor
mov
and
ud0
xor
ret
cmpsb
lret
std
cmp
jno
daa
add
outsl
cmp
sbb
es
into
mov
pop
sub
movsb
std
jg
fidivl
xor
xchg
adc
push
mov
fld
je
lds
les
adc
xchg
jle
pushf
outsl
out
hlt
xchg
mov
add
icebp
cmp
cmpsb
jne
fstl
mov
and
into
pop
stos
out
rcrl
inc
jno
idiv
xchg
mov
aad
mov
push
ja
mov
in
jmp
lock
fs
ja
ljmp
jecxz
bound
mov
pop
cs
jecxz
lret
add
pop
stos
aad
xor
dec
xchg
pop
inc
pop
es
jmp
adc
and
dec
mov
sbb
cmp
mov
mov
mov
fs
jmp
movl
idivl
les
test
cld
setns
icebp
sbbl
sarb
pop
shlb
pushf
mov
stc
cmpl
rclb
test
adc
mov
icebp
pop
mov
lock
out
lea
mov
ret
xor
xlat
mov
dec
or
sub
std
dec
fldl
movsl
mov
out
mov
fstp
lret
add
dec
test
mov
mov
dec
push
sub
dec
leave
sub
sti
add
inc
loopne
aam
ret
into
mov
xchg
mov
loopne
dec
add
pop
lahf
and
adc
arpl
pop
cmp
dec
scas
test
roll
add
loop
add
enter
iret
push
mov
adc
adc
pop
inc
mov
add
lcall
mov
jg
jmp
jne
sub
jns
ja
or
jns
xlat
push
jge
out
cmpsl
roll
das
push
jb
lds
in
pop
stc
xchg
nop
and
nop
ja
push
ror
xchg
cmc
sti
jecxz
fidivs
stos
add
xor
mov
decl
ret
daa
lret
std
out
testl
add
lret
push
mov
fimuls
dec
or
les
cs
add
ret
pop
loope,pt
stc
loopne
mov
call
rcrl
xor
push
mov
repnz
adcl
adc
dec
sub
idivl
sub
add
les
mov
adc
jns
push
ja
jbe
jnp
fcomps
jne
mov
pop
vpcmpgtw
dec
push
cmp
clc
out
add
roll
add
xchg
insl
stc
pop
jg
shlb
add
cmp
add
push
jl
push
fbld
gs
ja
and
repz
pop
shlb
movsb
mov
out
popa
jnp
shll
add
and
cmp
xchg
mov
loop
fiaddl
mov
repnz
inc
adc
pushf
fdivs
sbb
cmpsb
mov
orl
aas
or
subb
lds
loope
pushf
add
add
cltd
stc
cmp
adc
shrl
dec
mov
add
mov
xor
pop
sahf
mov
push
jne
pop
push
jne
ret
data16
xchg
loope
mov
and
jns
inc
in
dec
add
xlat
loope
fwait
add
jne
repnz
les
mov
inc
repz
fstpl
mov
push
push
jp
lea
jo
sbb
pop
roll
rcrl
pusha
cmp
and
mov
xchg
hlt
daa
aaa
out
mov
push
pop
ret
cmpsb
pop
sbb
imul
inc
cwtl
push
xlat
cmp
ja
pop
rcrl
lods
mov
pop
and
clc
push
dec
jle
lock
push
aaa
mov
adc
and
add
sbb
cmp
mov
sbb
jae
xlat
sti
and
sahf
jge
mov
or
jno
add
scas
filds
and
lret
jno
fidivl
mov
xlat
and
in
fld
xor
cmpsl
shlb
mov
push
fnsetpm(287
movsl
imul
jae
addb
sarb
and
leave
loop
sbb
mov
xchg
je
dec
jno
jmp
inc
inc
add
lret
imul
int3
cmp
repz
jle
xor
jo
shll
ret
fidivrl
jnp
rol
mov
adc
fildll
loop
iret
loope
shr
jecxz
shlb
movsl
jnp
or
pop
jg
mov
xchg
inc
addr16
cmp
arpl
ret
cmpsl
cmp
ja
repnz
jo
ret
adc
pop
push
pop
cmc
mov
lret
and
pop
stc
into
xchg
mov
shlb
pop
shll
sti
repz
sbb
out
lea
and
add
cmp
sbb
scas
cmc
std
movsb
and
push
mov
rcrl
sub
iret
mov
xchg
out
loopne
aas
adc
sub
xor
mov
and
rclb
jg
or
aam
loopne
cmp
inc
jge
les
loop
lret
out
xchg
jns
mov
scas
test
sub
xor
sub
jge
mov
adc
iret
sub
aaa
sahf
xchg
add
iret
fsubr
pop
or
repnz
jnp
repz
sbb
add
arpl
cli
fstpt
insl
sti
push
mov
mov
add
pushf
hlt
inc
leave
fs
xchg
dec
mov
cld
fists
js
into
xchg
inc
mov
push
jmp
dec
andl
iret
es
les
inc
into
daa
icebp
lret
dec
dec
test
stos
fbld
xchg
fstl
es
jae
add
lock
lds
push
or
xchg
mov
test
add
push
inc
push
cmp
outsl
mov
stc
call
cmp
fidivrl
in
add
push
out
cld
xchg
jle
and
sub
add
addl
aam
loopne
push
mov
aas
loop
xchg
jle
dec
aad
mov
test
and
test
ja
ja
jp
aaa
movl
cli
dec
cltd
cld
xchg
add
jae
jecxz
add
pop
jb
jp
add
pop
mov
push
pop
mul
nop
adc
inc
mov
or
dec
fdivrs
push
clc
or
pop
shrb
repnz
loopne
or
popf
jae
pop
insb
shll
jl
cmc
xchg
mov
push
or
lds
loope
int
movsl
mov
mov
fcmovnu
jl
ja
cmpsl
cmp
pop
rcll
mov
lock
test
ja
mov
cmp
mov
push
mov
cmp
pop
fisubrl
je
xor
into
or
or
cmp
imul
outsb
push
inc
push
sbb
mov
pop
mov
cmpsl
push
adc
add
cmpsl
stc
mov
ja
push
insl
mov
enter
sub
mov
add
add
mov
pop
add
stos
fcmovb
mov
ffree
ret
loope
ss
or
lcall
shll
mov
and
repz
lods
incb
cmp
les
push
add
ja
mov
jne
push
mov
roll
daa
add
out
into
call
rolb
shr
dec
leave
aas
jp
icebp
icebp
adc
rorl
shll
imul
or
inc
data16
ljmp
out
inc
pop
loope
cwtl
pop
jge
inc
imul
sub
pop
fdivl
fsubp
xchg
test
mov
or
pop
arpl
add
cmp
dec
sti
or
dec
cmpsb
push
ja
push
jne
mov
xor
inc
mov
sbb
repz
popa
incb
lds
xchg
mov
jp
sbb
add
cmc
or
fs
xor
out
stos
lcall
jo
adc
mov
add
sub
mov
push
popa
adcl
loope
aas
inc
pop
mov
add
into
js
xchg
out
shr
xor
sub
add
or
inc
pop
pop
lock
js
in
push
add
mov
sbb
fistpll
xchg
gs
inc
jle
jne
xchg
daa
out
shll
push
and
jno
jmp
add
inc
xchg
shlb
mov
dec
jns
das
mov
mov
shll
mov
jns
arpl
lds
inc
mov
stc
lock
stos
nop
test
mov
mov
dec
lcall
ret
mov
cmc
incl
call
sbb
cmp
jg
xor
sti
add
pop
jg
orb
out
mov
add
xchg
repnz
or
stos
cmc
aam
mov
jae
mull
sarl
pushl
cld
xchg
pop
dec
xor
inc
sub
sbb
sbb
ljmp
xchg
daa
aas
cmp
std
stos
loope
loope
inc
rep
xchg
mov
fldenv
inc
xor
scas
inc
xlat
mov
fldenv
out
mov
jns
jle
lods
adc
lods
inc
hlt
in
into
inc
fnstenv
xchg
xchg
push
pop
rcrb
mov
int3
jno
dec
scas
mull
lret
shlb
mov
into
xchg
mov
xchg
adc
iret
mov
pop
out
js
fbld
jbe
sbb
lcall
inc
xchg
dec
pop
xchg
sarb
inc
xorl
adc
or
push
and
faddl
pushf
rorl
les
dec
mov
ret
jge
and
cmp
jne
fcmovu
movb
cmpsb
icebp
xchg
sub
cmp
pop
add
enter
mov
andb
add
shl
sti
xchg
js
add
in
add
cmc
push
cs
xacquire
ljmp
fistl
jae
pop
mov
adc
nop
out
dec
xchg
test
adc
js
out
push
pop
sbbb
pop
xchg
test
aas
dec
lds
insb
out
push
cmp
pop
push
bound
shlb
cmp
fcomi
scas
scas
sbb
shlb
mov
stos
shl
add
xor
xchg
add
filds
movsl
xchg
mov
pop
jl
mov
xlat
aad
add
fisttpl
cmp
dec
inc
in
mov
xchg
fistps
sbbl
sbb
push
ja
out
ret
out
mov
jno
dec
hlt
xchg
test
pop
add
jno
mov
insl
push
xchg
jb
mov
and
mov
movl
je
xchg
clc
adc
and
fidivrs
call
xchg
imul
mov
iret
cmp
pop
ljmp
shrb
pop
mov
lret
call
and
stos
fidivrl
rorb
sub
add
cmp
insl
xlat
push
cmpsb
push
lods
inc
out
inc
cmp
mov
cli
ja
imul
cmpsb
stc
cli
jne
push
dec
loopne
rcr
nop
pop
push
cmp
jl
pop
testl
mov
jg
mov
jmp
mov
sarb
sub
mov
jp
shrl
scas
faddl
jne
mov
inc
icebp
cmpsb
pop
xor
lahf
jnp
fidivrl
ds
fs
addr16
adc
push
pop
mov
or
and
jmp
jns
cltd
or
and
pop
arpl
sbb
subl
pop
jbe
out
jne
std
sbb
mov
repz
aas
add
xchg
arpl
in
icebp
fwait
shlb
cmp
ja
push
xchg
inc
and
scas
rorl
arpl
scas
mov
movsb
mov
pusha
cltd
sbb
mov
decl
ja
xchg
les
es
mov
out
arpl
cs
and
push
leave
sti
push
por
inc
fwait
sub
or
shrb
rolb
testb
pop
nop
jne
fwait
aas
or
das
jns
in
sub
lret
cli
push
jnp
out
fbld
sarl
jno
imulb
movsl
cmpl
mov
rcl
lock
lds
adc
add
and
shl
dec
inc
adc
mov
inc
and
xor
pop
data16
adcb
pop
mov
and
cmp
xchg
iret
outsb
and
in
push
add
sub
pop
xchg
aam
rcr
sub
cmp
jecxz
xor
das
and
notl
inc
mov
shl
add
insb
rcr
or
popf
pop
dec
jnp
mov
cmp
and
and
push
dec
repz
adc
push
jge
fwait
pop
jg
cmpsb
loope
add
jns
gs
cmp
lods
adc
jge
mov
aas
lods
xor
ja
test
jle
mov
in
ja
out
jmp
push
popa
fbstp
js
push
fs
mov
aaa
push
sub
jge
lcall
jecxz
xor
adc
mov
add
fwait
cmpsb
pop
and
push
pusha
arpl
loope
mov
xchg
and
dec
or
test
and
std
cmp
sub
rorl
mov
cmc
inc
outsb
xchg
or
jo
mov
rcl
lock
jp
fwait
sbb
mov
dec
xchg
jbe
dec
push
jb
mov
jecxz
mov
mov
pop
sbb
rcl
repz
push
jecxz,pt
fstps
test
sub
stc
adc
lahf
lds
gs
rcrb
in
inc
sbb
ret
fsubl
lahf
into
stos
sub
cltd
out
xor
add
aam
subb
sarl
movsl
and
in
cmc
inc
out
daa
test
sahf
mov
jno
test
lea
pushl
mov
addl
out
mov
mov
js
ja
xchg
jp
push
pop
cmp
adc
les
inc
shll
in
cs
jmp
xor
lods
pop
pop
arpl
mov
in
push
stos
mov
xlat
loopne
mov
cwtl
pop
add
pop
incl
iret
inc
push
pop
mov
jge
pop
fidivrl
mov
je
pop
scas
rcl
pop
out
sti
mov
cmp
xor
ljmp
cmp
mov
bound
sbb
sti
inc
add
fstps
pop
stos
adc
xchg
add
ret
stos
sti
inc
ret
icebp
scas
mov
or
test
jns
cmpsl
add
add
out
sbb
hlt
jbe
test
jmp
push
pop
xor
adc
jge
sarl
adc
mov
jb,pt
xor
stc
or
and
jb
ljmp
test
imul
movsl
mov
and
adcb
mov
jno
scas
pop
xchg
out
pop
xlat
jae
mov
dec
mov
or
adc
pushl
push
fbstp
icebp
or
push
add
pop
insl
imul
dec
loop
mov
lcall
inc
in
fs
push
xor
add
xlat
add
std
sub
popa
or
iret
insl
sub
mov
mov
fwait
jnp
push
xor
fildl
and
lods
lock
cmpsb
inc
inc
and
sti
xor
adc
inc
mov
movsl
add
iret
jl
sahf
jmp
xor
rol
into
cmpsl
sbb
xchg
and
cmp
fcompl
je
jo
sahf
xchg
inc
xor
loope
pop
mov
cmpsb
ja
out
testb
rorl
icebp
inc
rclb
shr
mov
push
xchg
jno
daa
icebp
ret
cmp
gs
push
imul
inc
rcr
cmp
lret
dec
in
nop
in
mov
push
inc
repnz
ds
jp
mov
inc
add
bnd
jns
add
mov
inc
nop
mov
lods
ljmp
push
and
jg
jns
popa
mov
cmp
push
jg
jae
inc
jmp
sti
sub
mov
cmp
ja
enter
adc
xchg
xchg
popa
ret
inc
ficoml
pop
out
les
push
mov
outsb
cmp
cli
mov
ret
repz
popa
pop
xor
movsl
fistpll
ja
movsl
lock
scas
filds
out
out
push
pusha
mov
ror
mov
enter
out
mov
pop
push
sti
movsb
mov
out
xchg
xor
cmpsl
subb
pop
rcl
inc
repz
das
cs
mov
aas
jns
inc
inc
sbb
fisubrs
inc
xor
jno
fdivr
inc
dec
jae
bnd
in
pop
push
jmp
stc
pop
mov
imul
xchg
shlb
filds
push
sub
les
add
enter
xor
loope
xor
and
aam
lods
pop
loop
sbb
adc
mov
fucom
jg
stc
sarl
push
pop
push
inc
cmp
loop
scas
hlt
cmp
xchg
sub
movl
pop
dec
sub
cmc
inc
mov
and
shll
add
jle
pop
pop
inc
mov
popf
int3
mov
lcall
xchg
imul
lock
into
jg
enter
test
jbe
push
stos
mov
cmp
and
push
pop
ffreep
jmp
scas
mov
cmp
inc
iret
xor
mov
ljmp
sahf
mov
fs
mov
jae
pop
std
cmp
movsl
pop
cmp
and
push
test
dec
popa
and
jbe
jbe
inc
shlb
xor
xchg
mov
push
into
push
loope
cli
call
lds
jl
jae
filds
xchg
or
addr16
rcr
mov
out
fiaddl
cmp
fnstsw
outsb
imul
sub
into
xor
adc
mov
ja
mov
adc
lods
lcall
cmp
jno
rolb
and
lods
add
lock
les
out
or
and
outsl
lcall
in
or
lods
rep
hlt
push
int
insl
pop
pop
xor
movsb
scas
std
jmp
orb
insl
xor
pop
stos
and
jns
outsb
pushl
push
mov
mov
in
addr16
aas
push
fcmovu
sbb
mov
push
mov
mov
mov
in
in
pop
mov
cmp
mov
cmp
out
cmp
sub
xor
bound
push
jecxz
cmp
add
fidivl
addr16
sub
test
inc
xor
adc
aam
jecxz
dec
in
subps
rolb
and
pop
mov
jno
xchg
orl
sti
sahf
and
shlb
jp
out
imul
flds
lret
mov
ds
je
int3
in
adc
stc
dec
add
jo
adc
dec
lcall
les
repz
pop
mov
divl
push
jmp
das
cmp
mov
adc
cmp
sub
loopne
ds
mov
push
cli
jge
lret
sbb
pop
jb
loope
in
rcr
push
mov
ja,pt
mov
mov
add
fildl
pop
shrl
repz
dec
scas
and
into
sbb
out
inc
mov
inc
xor
pusha
pop
rcrb
out
cmp
stos
push
jmp
idivl
mov
add
iret
add
push
xlat
add
dec
mov
jns
jge
pop
jno
xor
sbb
mov
mov
ss
push
ja
repz
adc
adc
mov
add
xchg
in
test
push
cmpsb
pop
fdivrs
mov
fildl
inc
clc
pop
xchg
stc
out
jbe
cmp
push
cmp
sbb
sub
xlat
xchg
inc
sub
nop
or
mov
pop
sub
inc
cld
push
movsl
or
and
and
mov
inc
lea
xlat
mov
xorl
lea
dec
inc
xor
aad
mov
std
and
inc
ljmp
push
inc
lock
gs
xchg
ret
mov
cmp
in
lret
cmpsl
xchg
push
fisttpl
and
les
lds
push
fildl
pop
jb
cltd
arpl
ja
jle
fcoms
subb
pop
shlb
mov
std
test
test
insl
test
add
push
cmpl
xchg
inc
push
incl
shrb
outsl
cmpsb
out
out
xor
push
lahf
add
push
mov
aas
mov
lock
jle
jg
push
pinsrw
das
cmpsb
mov
lock
pop
out
mov
in
cs
les
cs
call
mov
xchg
and
xorb
cmp
sub
fxch
jge
mov
idivl
movsb
data16
arpl
dec
pop
pop
xchg
jmp
addl
mov
or
and
xchg
mov
movsb
ret
jbe
es
pop
xor
stos
push
jl
push
and
lret
out
jge
mov
inc
aad
jno
xor
rolb
pusha
mov
mov
pop
fisubrl
les
ljmp
fisttps
jno
mov
xchg
pop
mov
cmp
add
dec
mov
xchg
stc
aad
addr16
hlt
lds
xlat
iret
je
add
fildl
sbb
xchg
push
jmp
pop
ljmp
ds
pop
in
push
loope
pop
shll
imul
outsb
inc
mov
outsb
dec
adc
testb
adc
hlt
out
push
push
add
iret
jbe
adc
pop
loopne
sbb
sub
ljmp
add
xchg
leave
push
in
es
icebp
push
and
cmpsl
call
out
les
js
mov
push
inc
or
xor
idiv
adc
mov
pop
mov
andb
pop
or
daa
fsubl
xchg
fadds
aad
mov
sub
outsb
es
fs
bound
and
popa
gs
jmp
into
dec
repz
xor
flds
lods
icebp
in
xchg
mov
aaa
push
and
push
clc
std
mov
jo
push
outsl
sahf
jmp
mov
push
mov
xchg
or
push
jnp
or
pop
negb
sub
in
in
leave
pop
inc
mov
inc
rclb
push
cmp
push
pop
cmpsb
into
push
in
and
pop
inc
clc
mulb
xchg
cmp
sbb
stos
and
sar
call
lds
or
mov
sub
rclb
cmc
dec
cli
hlt
out
in
sub
jo
sbb
push
cmp
mov
jp
fiaddl
mov
fimuls
arpl
out
mov
and
pop
push
pop
xor
pusha
insb
add
mov
and
add
ja
rcrl
mov
loop
sarb
roll
scas
mov
sbb
dec
pop
hlt
movsl
dec
loopne
adc
xor
lds
pop
sti
rorb
mov
mov
mov
insl
rcrb
inc
cmpb
into
adc
add
out
in
add
mov
fs
dec
iret
std
xor
in
inc
or
movl
and
push
ret
call
mov
pop
mov
inc
lds
bound
lcall
icebp
inc
mov
push
mov
xchg
in
jnp
sarl
lds
mov
jle
repz
in
repnz
in
insl
out
pushf
iret
es
mov
pop
movsl
push
andb
push
repz
cmp
inc
hlt
out
mov
mov
inc
mov
dec
xor
into
push
pusha
inc
jne
push
xor
sbb
jmp
dec
std
mov
in
inc
jae
inc
hlt
inc
add
cs
in
loope
insl
rolb
movl
add
loop
les
and
sub
xor
inc
fs
jbe
jge
inc
pusha
push
mov
cmc
xorb
inc
push
cwtl
jne
std
and
movsl
in
xlat
cltd
cmp
inc
jle
jo
jo
add
in
add
movsb
fldt
pop
shr
adc
out
fsubs
cltd
add
push
mov
ret
roll
cmpsb
repnz
jb
ja
mov
shlb
test
jns
lea
adc
mov
loopne
addl
jbe
mull
je
jb
outsb
push
dec
add
mov
vpunpckldq
popa
ret
addw
add
in
shll
out
cltd
inc
out
movsl
mov
aaa
and
movsl
add
movl
addl
lds
bound
aad
jne
std
inc
jno
add
addb
inc
aas
in
aam
add
pop
cmp
repz
inc
xchg
add
and
mov
add
xchg
and
popf
cli
lahf
arpl
cmpsb
in
add
inc
movsl
and
gs
cmc
andb
xor
xchg
inc
push
xchg
flds
mov
jnp
inc
fists
in
and
test
xor
xchg
fcoml
push
xchg
or
add
xchg
lret
jbe
push
dec
jecxz
dec
fimull
jnp
xchg
movsb
adc
cmp
test
shlb
lcall
inc
sahf
gs
or
ficoml
arpl
rol
mov
and
sbb
outsl
xchg
inc
mov
rolb
mov
sub
push
scas
aam
add
add
call
lahf
dec
imul
nop
or
loop
mov
addr16
add
enter
shl
or
imul
cld
ffree
insl
cmp
ret
inc
les
mov
jb
inc
inc
shr
mov
data16
fldcw
loop
sarb
xchg
push
xor
mov
cmpl
push
pop
hlt
fs
daa
rcrb
ret
inc
out
js
add
fimuls
jns
xchg
rorb
mov
mov
pop
add
mov
or
adc
jne
out
cmp
dec
inc
lahf
out
push
insb
andb
iret
lods
add
lea
add
jbe
frstor
xor
push
movsl
inc
or
pop
dec
out
in
pop
hlt
sarl
into
adc
push
test
xor
pop
fisubl
xchg
fs
icebp
movsl
and
addr16
xor
xchg
fstp
mov
push
mov
popa
cmp
andl
icebp
cmp
idiv
rclb
jle
xchg
mov
add
loopne
xchg
sbb
cmpb
repz
cmpb
mov
jb
mov
xchg
andl
rclb
and
iret
lahf
ljmp
pop
movsb
cmp
mov
pop
test
leave
popf
xchg
jae
cltd
inc
adc
les
leave
inc
xchg
mov
dec
pop
inc
xchg
sbb
xor
test
and
in
movsl
icebp
pop
mov
push
pop
mov
add
lock
push
xchg
loope
inc
mov
es
mov
cmc
repz
fwait
subl
loope
pop
movsl
repz
lods
inc
cli
mov
sbb
cmp
jo
gs
xor
xor
and
push
shlb
icebp
adc
bound
mov
fsubrs
repnz
or
cmp
cld
pop
mov
lock
xor
cmp
nop
gs
pop
add
jl
stos
xchg
inc
shr
les
pop
mov
andl
jmp
jecxz
cmp
shll
ror
add
xchg
in
out
mov
sub
ret
outsb
loope
aam
shlb
cmp
inc
push
pop
xor
push
and
into
imul
add
mov
cmp
sbb
ret
xor
mov
add
shl
shlb
mov
push
sbb
ds
push
jge
dec
arpl
mov
and
inc
xchg
test
jno
lret
mov
mov
pop
loope
mov
out
les
cli
dec
movsb
clc
or
push
xor
pop
pushl
add
xchg
fwait
cbtw
xchg
outsl
push
shlb
cmpsb
mov
inc
sti
test
mov
fwait
scas
test
push
jle
cmc
adc
push
loopne
xchg
mov
cmp
test
fnstcw
sahf
lods
pusha
mov
adc
gs
inc
cmp
mov
pushf
std
sub
mov
xchg
and
repnz
sarb
sbb
xor
mov
icebp
jno
ds
shll
mov
leave
and
das
aam
inc
les
push
out
dec
mov
scas
jo
inc
pop
aaa
imul
or
lods
dec
fisttpll
loop
xor
out
ret
movsl
lods
ret
jge
dec
les
mov
push
cmpsl
sti
push
adcl
cmp
push
loope
popl
sbb
xor
add
faddp
xlat
decb
lcall
out
add
jmp
ja
inc
cmc
adc
addb
ficoms
fsubl
add
jb
adc
into
xchg
ja
ja
sbb
les
and
pusha
cmpsl
mulb
push
inc
icebp
je
push
fcomp
lea
int3
inc
outsl
and
jle
mov
add
sbb
push
jae
mov
shl
daa
push
cmp
dec
cmp
insl
inc
sahf
data16
scas
nop
sbb
es
sub
push
loopne
in
lds
xchg
jbe
mov
jg
int3
mov
cld
or
add
lds
pop
mov
sbb
addr16
add
daa
pop
shrb
xor
lods
cwtl
adc
pop
inc
cmp
add
aas
xchg
ret
movsb
dec
push
addr16
sbb
cmp
dec
rorl
mov
mov
rcl
pop
xor
push
add
icebp
loopne
fbstp
je
jle
loopne
add
add
and
adc
lea
mov
dec
stc
aad
mov
inc
lods
jmp
cmp
xlat
les
fsubrl
add
jge
push
arpl
mov
loop
mov
jle
adc
flds
out
pusha
xor
pop
mov
push
xchg
add
jg
icebp
dec
loope
mov
pusha
and
mov
outsb
shrb
lods
xor
filds
loope
in
imul
loope
or
lods
push
fdivrs
jns
xchg
jl
clc
cs
cmp
fs
xorb
cwtl
mov
xchg
pop
shl
cmpsl
add
scas
push
test
aas
jbe
es
cmp
sbb
adc
inc
xorl
fistpll
push
loope
ret
repnz
scas
stos
xor
cmpsl
pusha
push
pop
mov
xor
fldenv
sbb
insl
movsl
mov
jge
icebp
faddl
stc
dec
inc
daa
cmp
or
in
add
push
xchg
gs
push
out
les
ja
xchg
mov
mov
rorb
daa
ret
and
xlat
mov
les
fwait
ret
scas
mov
cwtl
add
fcmovnb
adc
add
xor
mov
sub
push
lahf
loope
sbb
out
push
movsb
mov
test
cltd
pop
loope
out
mov
add
sahf
jp
das
data16
ud0
loop
lock
pop
mov
shl
fsubrs
jp
push
lret
jbe
pop
add
sub
sbb
loope
or
pop
movsb
add
add
pop
xchg
xor
inc
add
push
push
mov
lds
xchg
xchg
aam
int3
add
mov
stc
clc
mov
fsubrp
fs
sub
loopne
clc
cs
bound
ja
ret
or
mov
mov
push
ja
cmovo
pop
jae
iret
mull
and
shlb
xchg
sbb
dec
and
cmpsl
inc
sahf
mov
loope
xor
inc
pop
test
jle
or
pushf
test
pop
cmp
inc
int3
add
jb
mov
shrb
movsb
push
jbe
hlt
and
fnstcw
or
daa
push
aam
mov
loope
outsl
ror
aad
push
adc
repnz
lret
jmp
push
push
outsb
les
ljmp
mov
jg
inc
mov
cmp
add
or
pop
jmp
dec
dec
aam
ficomps
roll
dec
cmp
jmp
mov
dec
fsin
cmpsb
fwait
mov
add
aas
cs
sti
mov
jb
dec
inc
add
mov
inc
lea
ss
xchg
and
pusha
in
mov
mov
dec
in
into
adc
lods
ffreep
sti
dec
pop
dec
loopne
gs
push
pop
pop
and
data16
push
outsb
cmp
pop
or
adc
pop
std
jge
sub
inc
imul
jno
mov
stc
nop
out
or
xchg
and
rol
push
gs
adc
fdivrl
imul
ljmp
les
adc
es
inc
dec
push
clc
inc
pusha
arpl
iret
iret
nop
push
xor
cmp
push
add
inc
sub
xor
mov
and
xchg
jo
dec
push
or
leave
and
sbb
out
les
icebp
cmp
mov
cmp
cmp
notl
mov
out
mov
outsl
les
fiadds
sub
or
test
lock
sarb
sub
sbb
iret
mov
movsb
testl
lea
scas
adc
lock
cli
arpl
jle
jns
mov
inc
fisttpl
lock
inc
adc
out
cld
push
adc
or
jle
add
mov
ffreep
cmp
inc
xorl
dec
xchg
rol
jae
sahf
push
push
xchg
ja
push
in
int
loopne
fucomip
leave
mov
cwtl
stos
mov
mov
xchg
or
xor
out
imul
mov
arpl
xchg
mov
xor
or
sub
lret
into
mul
pop
ljmp
and
push
rcrl
pop
loopew
add
popa
cld
push
fcmovnb
pop
sub
aam
add
test
lods
adc
jno
shlb
cmp
in
add
jp
mov
mov
in
loop
xchg
or
mov
and
addr16
mov
stos
loopne
mov
ja
cmc
ret
and
mov
dec
or
icebp
addr16
or
insb
shrb
add
mov
je
mov
pop
es
xchg
xchg
mov
and
inc
mov
movd
add
jp
test
xlat
cmp
push
inc
sub
mov
out
and
mov
lcall
pop
stos
into
add
ja
jmp
cmpsb
add
add
mov
data16
ficomps
mov
mov
stc
xchg
push
roll
hlt
and
jmp
dec
inc
in
jo
xor
cmp
subb
out
pop
cmpsl
in
mov
sub
dec
addb
scas
in
xor
fnsave
clc
stos
ret
inc
rolb
jne
out
pop
push
cmpsb
nop
std
jb
idiv
dec
fwait
scas
cmp
dec
pop
inc
xchg
aas
hlt
sub
sub
addr16
xchg
push
loop
divb
xor
cwtl
adc
daa
dec
push
test
adc
popa
clc
add
std
xchg
jmp
xchg
inc
dec
sbb
jl
and
lret
inc
pop
jecxz
das
out
push
int
pop
inc
or
mov
cmpsl
jnp
loop
cmpsb
fcmovne
sti
mov
add
bound
in
pusha
mov
cmpsl
out
out
bound
in
jecxz
jbe
pop
scas
imull
mull
jl
shll
outsl
out
mov
pusha
mov
cmp
jecxz
addr16
push
pop
mov
addb
sbb
jecxz
cmpsl
xchg
andl
jg
add
cli
popa
int
les
inc
xchg
imul
scas
loop
rcl
mov
sahf
cmpsb
sarl
out
xchg
in
xchg
popa
jmp
cmc
andl
addl
loop
pop
aad
std
test
in
mov
add
aad
jecxz
inc
movl
arpl
lds
arpl
imul
pusha
pop
shll
jns
arpl
gs
pop
cmp
in
in
mov
push
out
addr16
jecxz
and
xchg
roll
addl
lds
test
cmc
push
addr16
and
ret
cmpsl
shl
pop
popf
inc
popa
std
add
ret
in
in
xor
cli
push
mov
std
shr
xor
popf
inc
cmpsl
inc
xlat
jmp
xchg
adc
sar
ret
add
add
cmp
push
mov
test
pop
jae
mov
inc
mov
adc
or
add
in
mov
sbb
dec
test
add
pop
push
popa
mov
leave
outsl
jno
in
xchg
fstpl
jns
sub
inc
shlb
inc
pop
icebp
mov
inc
popf
pusha
out
push
cmpsl
arpl
in
inc
push
jecxz
jl
ret
es
inc
outsb
pusha
jmp
fldenv
ljmp
rorb
push
mov
mov
and
and
shlb
push
outsb
xor
shlb
cmp
pusha
leave
jp
les
add
pusha
jno
mov
daa
cmp
mov
in
jbe
fwait
mov
test
xchg
das
mov
xchg
iret
pop
add
inc
mov
push
jae
and
push
ljmp
adc
lds
shlb
mov
pop
mov
nop
sti
lret
sbb
addl
js
mov
lds
clc
push
or
jno
les
rep
inc
add
dec
sbb
dec
xchg
fstpt
ret
lds
test
scas
jmp
sbb
fwait
inc
cwtl
in
mov
or
mov
xchg
jp
mov
xor
mov
mov
inc
sub
pop
lea
leave
mov
cmpsb
pop
mov
inc
scas
xchg
lcall
js
lods
inc
cli
imul
mov
shrl
pop
pop
mov
cmp
test
mov
cmc
filds
sti
mov
scas
leave
inc
icebp
cmp
fwait
xor
out
pop
in
iret
mov
add
addr16
push
dec
push
xlat
fiadds
gs
mov
cmc
mov
lahf
into
cli
push
sub
or
xor
icebp
gs
outsl
push
jmp
xor
cmp
xchg
nop
data16
sbb
add
jmp
jmp
jae
inc
dec
cwtl
pop
out
mov
lahf
rorb
pop
xlat
push
lahf
nop
xchg
pop
xchg
out
pop
stos
sub
xchg
popa
ljmpw
lret
cli
push
cmpsb
xchg
jo
add
aas
ret
xchg
mov
cmp
push
add
xor
repz
jb
in
fdivp
pop
add
shlb
mov
add
xchg
mov
ja
inc
and
or
inc
inc
jp
mov
shl
sti
xor
and
push
jo
dec
scas
and
bound
xchg
inc
rcll
insb
mov
insl
stc
mov
jbe
xchg
testl
lods
fdivr
mov
out
jmp
push
popf
mov
es
inc
push
mov
outsl
cltd
icebp
add
gs
xor
inc
add
xor
and
dec
fisttps
dec
out
movsl
adc
push
mov
fcmovnbe
fldl
jne
and
arpl
xchg
jge
lcall
out
icebp
stos
addr16
loopne
into
xor
jl
sti
adc
sar
bound
das
xchg
sbb
scas
je
dec
cmp
xchg
inc
lea
sub
xlat
push
jl
push
ds
mov
pushf
and
ja
test
test
shl
dec
cmpsl
mov
pop
ja
pop
or
scas
add
cltd
aad
xor
pop
add
call
movsl
test
xchg
sti
loope
inc
nop
outsl
je
loop
and
clc
in
scas
mov
sub
lret
testb
xchg
xchg
fiadds
jbe
enter
mov
rcll
aad
add
jno
inc
mov
mov
rolb
loope
mov
add
jno
mov
xor
lret
xchg
and
xchg
insl
or
les
jl
ficoms
cmc
push
iret
les
cmp
into
ror
jge
xchg
pop
loopne
call
add
shl
loop
add
xorl
scas
push
js
mov
repz
inc
nop
mov
sbbb
xor
fcoms
fbstp
stos
out
jge
scas
xchg
popf
jecxz
shr
inc
into
push
push
insl
icebp
add
add
lret
mov
xchg
jmp
addl
mov
add
adc
or
pop
fisubl
inc
push
mov
mov
sbb
repz
outsl
cmp
pushf
shlb
pusha
mov
add
subb
mov
dec
or
xor
xchg
and
mov
lods
lods
insl
roll
insb
jbe
lret
push
fisubs
mov
mov
lods
or
mov
jecxz
pop
sub
sbb
in
dec
cmpb
imul
les
repz
sub
in
push
mov
jb
lcall
cmp
popa
jecxz
shll
add
jle
rcrb
lods
outsl
lret
insb
or
and
loopne
icebp
mull
lds
insl
lcall
popf
addr16
inc
and
frstor
mov
ljmp
testl
jae
jae
cmpsl
xor
adc
push
in
lret
pop
int3
or
add
imul
scas
mov
sbb
call
out
rorl
push
aaa
inc
dec
mov
sub
cmp
and
mov
mov
jne
std
lret
inc
lcall
daa
andb
dec
das
negl
mov
jne
mov
pop
adc
test
insl
shlb
dec
leave
sub
cmc
lret
adc
cmpsb
js
xor
xchg
add
in
sbb
pop
cmpsl
lcall
shl
cmpsb
push
icebp
xor
roll
and
push
add
iret
sbb
pop
sahf
inc
inc
lds
mov
jbe
fcmovnb
cmc
jo
imull
rcrb
les
push
adc
repz
addr16
stos
inc
in
xchg
xchg
int
enter
lods
testb
fbld
push
push
lcall
jmp
jne
push
mov
sbbl
into
aam
jno
test
fdivrs
ror
test
xor
fiadds
lret
jl
jno
or
lods
mov
add
loope
data16
cli
adc
pushf
lea
pop
cmp
inc
out
sti
add
loopne
cmpsb
jecxz
loopne
xchg
and
ret
lods
int
imul
sbb
mov
mov
jo
mov
xor
jo
cmp
out
jl
mov
xchg
hlt
dec
dec
push
jns
test
cmp
lea
mov
or
mov
jb
inc
nop
lret
ret
std
std
addl
inc
outsl
stos
push
jge
xchg
xor
inc
pop
repnz
mov
fnstenv
jne
lcall
lret
mov
sbb
bound
xchg
or
loopne
inc
out
notl
ss
add
clc
xchg
xchg
mov
sub
daa
fcmovnb
lea
subl
stos
in
sti
je
mov
lret
les
mov
add
jge
fmuls
scas
outsl
ror
pop
pop
test
xchg
shlb
sub
cltd
lods
mov
clc
scas
xor
mov
movntq
or
add
mov
dec
addr16
lds
xchg
lcall
jo
dec
imul
aaa
push
xor
xchg
xor
and
test
pop
sub
mov
iret
mov
loope
loope
push
leave
les
mov
or
enter
sahf
shll
pop
sbb
scas
shlb
xor
insl
les
xlat
ret
mov
stc
test
xchg
mov
pusha
fidivl
pop
dec
and
lret
sub
nop
mov
ret
sbb
imul
jns
xor
decl
jecxz
xchg
loope
bound
jp
adc
pop
imul
outsl
push
mov
fs
movsb
dec
loope
daa
cmp
in
dec
mov
les
cld
inc
and
les
push
loopne,pn
bound
in
clc
addr16
in
inc
push
je
js
shrb
xor
pusha
in
out
int3
push
cmc
rcrl
sarb
xor
mov
int3
insl
inc
adc
jbe
sahf
loopne
pop
push
mov
out
dec
mov
fdivrp
push
mov
into
and
cmc
mov
test
sub
jecxz
pop
cmp
dec
xchg
scas
pop
addl
repnz
or
rcl
inc
mov
push
out
adc
fildll
xor
popf
dec
cmc
jge
mov
pop
or
add
cmp
stc
mov
pop
pop
arpl
xchg
push
outsl
fistpl
inc
mov
cmp
or
outsl
shrb
rolb
fistpl
jno
sub
jno
inc
stc
popa
lods
std
sti
mov
dec
jle
mov
xor
clc
mov
lcall
rcll
mov
mov
sbb
jecxz
cmp
mov
ret
cmp
and
int
lods
xchg
or
in
ja
ficompl
inc
jle
jmp
xchg
mov
jns
xchg
adc
sub
faddl
inc
sbb
pushl
les
cwtl
push
fisubl
shl
stc
mov
les
loop
daa
push
fwait
mov
xchg
pop
stos
or
hlt
nop
jl
hlt
stos
rcrb
mov
ss
gs
mov
imul
movsb
mov
mov
cmpb
mov
gs
push
scas
push
sarb
mov
out
insl
inc
cmp
jmp
rcll
ds
in
mov
std
daa
cmpsb
pop
lods
mov
into
push
cmp
les
mov
popa
ds
lret
sahf
push
lock
shr
enter
hlt
mov
lock
jno
mov
ds
push
jnp
stc
test
adc
iret
clc
lcall
dec
mov
add
cmpsb
lret
mov
jmp
mov
ds
shlb
jae
aas
sbb
xor
push
jns
add
mov
xor
call
pop
sub
and
inc
scas
out
mov
pop
push
xchg
cmpsb
add
cwtl
imul
pushl
les
jl
sahf
inc
mov
dec
mov
hlt
arpl
pop
daa
mov
js
cmpsl
xchg
xchg
adc
std
mov
inc
sti
pop
outsb
out
xchg
push
aam
leave
addl
push
sub
xchg
and
mov
push
xor
int3
outsl
ror
adc
xchg
and
and
ret
mov
arpl
adc
scas
xchg
sub
popf
jg
int
fldt
adc
aad
pop
fistps
sbb
test
pop
dec
leave
sub
pop
sti
test
cld
xchg
push
stc
pop
dec
stos
cmpl
test
add
idiv
pop
mov
push
mov
pop
jmp
lcall
cmp
and
andb
icebp
mov
inc
enter
jge
add
out
repz
jecxz
fdiv
les
xor
pop
jae
sbb
cld
add
repz
inc
jno
adc
jbe
lods
es
pop
std
or
fisttps
inc
and
sti
ffreep
test
push
repz
push
hlt
mull
jge
ret
scas
ja
mov
inc
jecxz
mov
push
mov
add
cmpsl
xchg
dec
cmpsl
mov
insb
mov
add
jmp
ja
aad
rorb
and
inc
pop
mov
push
push
movl
inc
pop
xchg
cmp
mov
fldcw
xor
lea
mov
pcmpeqb
dec
push
lret
sub
push
loope
inc
pop
es
addr16
subb
sub
pushf
xorb
xchg
aad
fildl
jns
pop
icebp
adc
fstpt
sub
stos
dec
rorl
or
cmp
and
cmc
ret
mov
or
daa
mov
test
inc
sub
inc
add
fwait
stos
out
repz
test
data16
iret
sti
xchg
inc
add
popf
js
sbb
aas
cwtl
push
pushf
xor
or
xchg
add
sti
adc
ja
pop
cmp
popa
into
add
movsb
mov
cs
pop
or
gs
dec
repz
xchg
ss
into
pop
enter
push
fsub
lcall
insl
negl
mov
adc
cmp
add
les
outsl
inc
popf
sahf
clc
xlat
cmp
push
xlat
pop
dec
icebp
sub
push
dec
hlt
and
sub
gs
clc
sub
mov
lods
testl
imul
shll
adc
stos
dec
cmp
or
push
inc
mov
scas
cmp
mov
jne
dec
icebp
ljmp
pushf
shlb
repnz
sahf
adc
xchg
pop
rorb
push
mov
std
cmpsl
jns
addr16
imul
jle
inc
popa
cmp
cmpsb
popf
dec
inc
clc
and
scas
fidivrl
popw
jecxz
jecxz
jae
inc
jns
mov
dec
or
pusha
fwait
adc
clc
mov
jns
cmpsb
std
push
pusha
push
test
shll
loope
jecxz
repnz
and
add
rclb
mov
popf
add
loop
stc
push
aam
inc
push
rcl
mov
scas
and
outsb
pop
adc
ret
sbb
xchg
mov
cmpsb
popa
arpl
sbb
out
push
fldcw
push
add
or
sahf
lahf
cmp
rol
mov
xor
adc
std
sbb
imul
jl
and
pop
push
ret
sbb
int
leave
mov
repz
mov
push
inc
sbb
inc
sub
jb
inc
stos
xchg
into
or
sahf
xchg
ja
push
daa
loopne
xlat
dec
mov
mov
es
jns
movsl
and
mov
xchg
fadd
les
xchg
jo
mov
mov
rolb
sbb
lock
xchg
mov
les
fwait
lds
mov
data16
mov
lods
testl
lret
subb
adc
push
aam
pusha
jno
lods
push
add
adc
sti
mov
cmp
xor
sbb
mov
mov
mov
out
jae
xor
dec
mov
out
lret
and
or
xchg
lods
mov
xchg
ja
icebp
test
lret
xchg
mov
js
inc
addr16
mov
clc
test
movsl
and
test
stos
or
inc
fabs
xor
popf
adc
lds
shlb
repnz
mov
divl
mov
scas
enter
pop
cmp
fisubl
adc
pop
push
mov
adc
jecxz
sbb
push
mov
lds
inc
mov
sub
hlt
inc
mov
cmpsl
lds
pusha
imul
xchg
sbb
adc
cmpsb
nop
fs
push
cltd
or
sbb
fcomps
std
mov
stos
or
addr16
and
outsl
mov
scas
inc
pop
add
aam
int3
cwtl
int3
pop
call
movl
out
inc
ret
faddl
lods
sahf
inc
add
mov
loope
imul
dec
out
sti
or
add
dec
sar
enter
jmp
out
and
js
ja
adc
out
inc
or
pop
popl
add
fwait
inc
loop
sbb
cmp
aas
and
lods
push
xchg
xor
mov
fistps
cmp
repnz
mov
xor
cmp
push
adc
mov
out
pop
ret
jnp
xchg
pop
push
adc
jmp
div
mov
add
or
inc
out
mov
clc
add
test
ljmp
jl
hlt
lea
and
xor
jno
dec
in
push
pop
push
mov
inc
cmp
fisubl
add
clc
mov
adc
cmp
rolb
out
inc
inc
fisubrs
jmp
jae
test
pusha
icebp
popa
xor
rcrb
push
arpl
shrb
arpl
fisttps
inc
mov
xor
sahf
pop
movsl
or
push
mov
add
xor
pushf
divl
mov
cld
ja
add
ds
jp
sbb
sahf
fwait
xchg
mov
cmp
xor
insb
loope,pn
inc
inc
add
or
sahf
xor
lods
sti
jno
and
dec
js
stc
add
jbe
pushf
movsl
add
pop
insb
icebp
mov
test
sbb
les
dec
mov
fimuls
out
or
fs
stc
and
sar
lret
pop
mov
or
mov
adc
xor
pop
mov
or
pop
mov
xchg
invd
les
pop
lret
arpl
mov
cltd
lret
pop
je
mov
sbb
and
pushf
orb
sbb
pop
xor
std
lock
xor
inc
dec
xlat
shlb
loope
adc
jge
pop
jns
inc
sbb
lods
xchg
sti
cmp
leave
fndisi(8087
insb
sub
testl
out
pusha
inc
negl
lcall
xor
xchg
jnp
outsb
es
dec
mov
push
test
xchg
outsl
js
cs
xchg
adc
popl
and
xor
cmpsb
inc
inc
inc
call
rol
cmc
sub
xchg
jecxz,pt
cmpsl
or
push
mov
adc
daa
ffreep
pusha
test
adc
jmp
les
push
pop
dec
jae
adcb
test
jge
push
mov
imul
les
iret
sbb
movl
jecxz
add
add
les
xor
jns
pop
cmp
xor
push
mov
aas
out
ljmp
push
push
and
ret
push
repz
jge
sar
pusha
lahf
enter
mov
push
stos
pop
jecxz
mov
rclb
loopne
movsl
pop
mov
dec
lret
jne
into
cltd
xchg
push
pop
mov
out
std
imulb
push
push
mov
stos
inc
std
sub
pop
bound
jb
test
push
and
shlb
add
cmc
ljmp
js
es
push
leave
out
and
dec
inc
mov
sub
and
es
jnp
rorl
xor
sahf
rolb
cmp
out
add
inc
dec
vmovmskps
xor
ficomps
xchg
push
push
iret
or
test
lods
sbb
fildl
lods
sub
addr16
test
mov
fsts
loop
iret
in
imul
scas
mov
sbb
test
fwait
outsl
push
stc
mov
push
repz
les
stos
push
xchg
jo
lds
movsl
cmpl
jb
pop
fs
mov
mov
inc
incl
push
cs
and
shl
mov
mov
push
adc
lret
or
pop
jne
inc
xchg
mov
stos
gs
mov
outsl
lods
xor
sahf
and
push
neg
push
roll
scas
imul
add
sub
mov
and
jecxz
insl
jb
sahf
mov
in
loope
push
push
dec
arpl
xchg
pop
mov
pusha
jns
mov
mov
push
sub
add
shlb
mov
jb
xchg
mov
jb
jge
sbb
pop
mov
es
out
lret
push
testl
dec
push
hlt
subl
scas
daa
icebp
and
or
in
cld
pop
jg
outsb
cmp
insl
jge
inc
push
jle
rorb
jmp
enter
and
pop
cmp
xor
xor
hlt
inc
pop
aam
aam
out
jne
fnsave
loopne
xchg
fsubr
mov
or
dec
xor
sub
xor
xchg
lock
mov
pusha
xor
pop
dec
mov
mov
imul
scas
xchg
pop
or
mov
fsubrl
dec
sub
stos
stos
gs
sbb
shlb
lcall
in
ss
push
sub
arpl
jb
sbb
xchg
mov
jno
in
mov
ljmp
fcoml
sti
sar
call
push
rol
into
hlt
xor
xor
or
shrb
imulb
inc
inc
outsl
add
rcll
shll
push
inc
out
test
add
xchg
imul
int
push
daa
xchg
imul
xchg
cmpsb
sti
in
clc
sti
shl
imul
pop
sub
ja
jmp
jmp
std
adc
xchg
stc
decb
js
push
in
sbb
sbb
xor
cmc
std
cmp
adcl
lahf
movd
repnz
pop
xor
ljmp
nop
andb
pop
inc
adc
loopne
ds
lret
or
cmpsl
fdivrs
add
rcr
movsb
pop
cmpsl
push
sbb
and
sti
ret
dec
sbb
out
dec
test
jge
push
jbe
jo
inc
test
subb
test
repz
movsl
cmc
inc
out
int3
and
cmp
jb
add
xchg
fs
out
push
and
mov
pop
jnp
jle
push
add
inc
jecxz
imul
std
mov
in
add
xor
pop
out
bound
cld
or
cmpb
add
daa
stos
pop
or
outsb
dec
mov
inc
popa
jae
mov
les
inc
icebp
inc
jp
mull
pop
xor
sbb
pop
daa
stos
xchg
mov
mov
inc
mov
add
and
popf
test
add
inc
inc
fidivrs
repz
xorl
fs
fistps
addr16
in
xorl
vrcpps
pop
mov
and
roll
cld
test
inc
inc
mov
loop
out
jae
test
pop
loope
cmp
bound
inc
mov
xchg
popl
add
add
ja
mov
test
xchg
lds
inc
jecxz
mov
mov
cmpsl
out
shl
arpl
in
push
out
sbb
out
add
pop
mov
mov
inc
out
out
out
add
scas
add
jecxz
sbb
mov
sbb
or
pop
pop
pusha
dec
mov
addl
and
loopne
inc
mov
add
cltd
mov
in
out
out
add
fsubl
cld
aas
push
jo
popf
add
lea
adc
mov
cmp
push
out
les
cmp
add
cmp
cmp
sbb
repz
sbb
ds
add
sub
inc
aad
push
mov
and
sahf
cmpb
xor
subb
dec
lock
add
popf
les
ds
shlb
mov
dec
dec
sub
pop
out
jge
rolb
xchg
fs
stos
xchg
cmp
jne
mov
scas
dec
jns
sub
push
adc
mov
push
sbb
mov
jge
fiaddl
rorl
cmp
hlt
inc
dec
xor
or
sbb
or
lods
inc
xchg
add
mov
sti
pop
sbb
fmuls
andl
add
sbb
pop
stos
pushf
in
mov
rol
dec
mov
out
notl
mov
add
and
jne
shl
xchg
scas
hlt
sahf
jecxz
rcl
scas
push
lods
add
mov
cmp
jl
mov
ret
jl
xor
sarl
daa
in
ja
sarb
and
or
fdivr
les
les
fcmovnu
or
jbe
cld
out
or
jae
pop
xor
mov
and
dec
add
sti
cli
jg
mov
and
inc
push
xor
lods
ffree
sub
sbb
outsb
arpl
hlt
jle
gs
enter
jne
ss
loopne
loopne
pop
mov
and
adc
test
out
data16
adc
hlt
enter
scas
and
pop
and
popa
int3
add
or
push
mov
sahf
std
jmp
bound
mov
adc
mov
jmp
fldt
xor
sub
xchg
jno
ljmpw
add
fdivs
xchg
enter
imul
rcrl
push
fldl
adc
xlat
int3
ljmp
push
mov
scas
and
jae
push
jnp
daa
jp,pn
dec
cmp
mov
decb
pop
add
fs
dec
out
and
push
clc
push
jecxz
int3
aam
lds
cmp
cld
jge
lea
int
lds
dec
gs
inc
es
mov
sbb
push
sub
cmp
adc
ret
daa
sub
xchg
sti
add
push
inc
mov
divb
loope
cmp
sahf
stos
std
sbb
jb
sbb
shrb
imul
in
mov
cmp
ja
inc
jle
jle
mov
fisubrl
adc
cmpsb
shlb
fistpll
incb
insl
push
cmp
out
fs
jbe
cld
inc
mov
stc
xchg
mov
ja
xlat
lea
mov
adc
movq
mov
adc
out
mov
inc
mov
adc
xor
out
in
jmp
les
mov
jae
xor
popf
xchg
ss
ds
jnp
ret
test
sahf
push
mov
aaa
pop
in
cld
out
jmp
leave
std
push
sbb
addr16
mov
scas
cmpsb
pop
iret
js
lods
jge
negb
push
test
push
dec
fcoml
jo
push
sbb
mov
icebp
popf
arpl
mov
cmp
cmpsb
imul
mov
inc
inc
or
cmpsb
popa
shl
jmp
lret
mov
xor
shll
and
xchg
jae
sub
ja
jo
inc
lea
xor
push
jge
mov
sub
dec
test
jle
xor
cld
adc
xchg
jp
pop
fdivr
mov
scas
filds
in
mov
sarb
loop
fistps
jno
pop
shrb
lds
aad
sbb
fsubrp
add
xchg
mov
xchg
inc
mov
push
hlt
aaa
dec
add
jmp
dec
xor
les
add
sub
sbb
lret
add
ds
inc
jnp
and
popf
push
xchg
movsl
imul
push
mov
jbe
fsub
sbb
mov
shlb
mov
out
mov
adc
out
cmpsl
adc
jns
jno
ja
mov
ret
movb
adc
jnp
lret
scas
popa
add
gs
sbb
jno
adc
mov
inc
aaa
jp
xchg
addr16
bound
mov
lds
pop
ljmp
ret
mov
sar
sbb
and
lret
out
and
pop
or
jp
pop
movsl
sbb
dec
addr16
imul
xor
test
jae
aaa
xchg
or
lea
lock
fs
mov
adc
mov
js
rcrb
js
mov
lret
lods
frstor
cmp
stc
and
addr16
pop
add
mov
inc
stos
inc
or
push
rclb
out
lds
arpl
push
mov
jg
jo
fisubrs
adc
mov
lods
dec
jbe
add
cs
shl
repnz
in
sub
push
jo
pop
sbb
push
xlat
negb
push
lret
xchg
push
jge
jmp
andb
addr16
call
push
lret
dec
cmpsb
xor
sub
jb
adc
pop
lret
loop,pt
enter
aad
dec
mov
mov
nop
shlb
dec
jo
dec
sub
fistps
inc
jo
adc
ret
sti
stc
jl
cmp
outsl
jecxz
mov
mov
cmpsl
out
mov
out
jecxz
jl
push
imul
popl
repz
aad
dec
inc
push
fsubp
inc
mov
shrl
subb
popl
pop
in
cltd
fs
js
inc
dec
fs
and
inc
mov
lds
loopne
lds
nop
lods
inc
cmp
stc
aas
xchg
test
mov
inc
ret
rorb
repz
sub
inc
mov
dec
shlb
lret
cltd
pop
pop
push
and
jne
repnz
sbb
test
icebp
xor
pop
pop
push
ret
arpl
mov
pop
outsl
jno
rolb
pop
or
popa
jae
mov
and
pushl
stc
mov
jno
out
leave
xor
and
lds
inc
or
iret
mov
enter
mov
sbb
mov
xor
inc
mov
cmpb
inc
sub
bound
pushf
jns,pn
add
std
push
xchg
adc
cmp
lret
xor
push
lret
sub
mov
or
add
fdivs
sbb
aam
or
nop
test
sbb
mov
das
add
add
pop
mov
aam
lock
mov
ret
or
popa
mov
insl
lds
pop
test
shlb
imull
push
xchg
sbb
cmp
add
push
or
scas
dec
inc
pop
adc
rcrb
rcr
xchg
int
dec
jl
push
mov
and
dec
gs
mov
pop
loop
push
and
test
stos
stos
dec
test
or
inc
nop
out
add
popa
sub
sub
arpl
notl
pusha
sub
vpinsrw
xchg
outsb
insb
jns
jne
insb
mov
mulb
inc
fisttpl
rorb
jmp
test
xchg
inc
push
dec
inc
sbb
adc
push
inc
ja
inc
xchg
mov
push
pop
jecxz
shrb
repnz
dec
out
push
pop
incb
cli
xlat
push
cmc
cmp
pop
jno
push
aam
inc
add
stc
inc
xor
cmpsl
sbb
inc
lea
fisttpl
in
sti
cmpsl
iret
jge
mov
fld
sti
adc
jbe
add
sti
clc
and
jg
cmp
dec
mov
push
je
adc
sbb
scas
xchg
inc
loope
test
imul
sbb
aaa
dec
jns
fisubs
sbb
dec
push
out
in
mov
jge
jecxz
test
mov
fists
arpl
scas
cmp
pop
stos
sub
add
push
in
int3
lds
les
sbb
jns
data16
cmpsb
mov
dec
arpl
scas
sub
dec
shlb
or
cmp
ret
icebp
pop
or
mov
fstpt
xchg
fisttps
stos
sbb
add
xchg
stc
inc
adc
sbb
xorb
jne
imul
mov
daa
ret
push
and
shll
loopne
js
daa
mov
lock
sarl
rclb
push
fidivl
push
jns
js
dec
mov
jecxz
addr16
jg
cmpsl
add
xchg
mov
cmpsb
adc
adc
flds
adc
lds
sbb
movsl
in
jge
in
jl
idivl
inc
sbbl
stos
jp
xchg
and
aad
jne
xchg
xchg
movl
es
out
dec
xchg
dec
or
jecxz
mov
mov
int
cmp
andl
sub
xchg
xchg
mov
jae
bound
addl
cld
push
pop
repnz
lret
cli
in
fldl
jg
xor
inc
lret
aad
jg
and
int
arpl
cmc
in
daa
aas
loop
inc
test
std
sbb
jmp
fldenv
mov
gs
jb
andl
loop
jle
xor
repnz
mov
add
add
jmp
aaa
mov
jecxz
out
cmp
mov
lds
shl
pop
aaa
inc
ja
ret
es
popf
inc
mov
out
loop
cmp
out
cmp
test
ret
incb
cmpsl
sbb
mov
movsb
xchg
repz
repz
pop
movsb
cmpsb
jns
loope
add
and
loop
lcall
pop
out
data16
out
test
and
stc
and
test
cmc
inc
and
aad
les
mov
in
or
popf
inc
inc
fs
mov
cmp
push
pop
addl
jecxz
lds
scas
imul
xchg
test
mov
cli
addl
add
cmpsl
vandnpd
ret
push
mov
or
fs
xor
movsb
imul
arpl
popa
lds
add
js
into
inc
aam
testl
mov
push
dec
cmpsl
rorl
insl
pop
cmpsl
sarb
out
or
or
mov
mov
aad
or
jecxz
inc
adc
fcmovbe
loopne
cmpsb
mov
mov
pop
push
loopne
aam
inc
popf
dec
jae
dec
scas
out
cld
ret
mov
mov
sbb
add
pop
dec
mov
out
pop
insb
pop
scas
jle
lds
mov
rclb
xor
addb
fistps
in
test
cwtl
imul
mov
or
push
or
inc
or
or
mov
scas
iret
inc
xor
pop
test
fiadds
adc
push
leave
push
mov
addb
fisttps
in
or
cld
lods
pop
fstp
ja
testl
mov
cld
rorb
lds
std
xor
mull
cmp
aaa
pop
push
xlat
test
add
sarl
ja
add
lcall
sahf
popa
jp
push
mov
lock
fisubl
clc
xor
in
in
jnp
sbb
mov
stos
sbb
push
lret
and
cmp
cmp
jecxz
dec
jnp
pop
mov
or
dec
or
mov
dec
in
js
call
sub
outsl
or
mov
pop
pop
adc
pop
shlb
pop
cmp
jne
shll
ja
mov
xchg
ror
lock
or
addb
xlat
sahf
mov
cld
ljmp
xlat
mov
pop
sbb
shl
sub
pop
mov
hlt
jmp
adc
notb
fdiv
adc
xchg
pop
aam
sub
lea
xchg
push
lea
and
pop
mov
es
sbb
notb
add
fisubl
outsl
jno
lret
push
mov
rolb
adc
xor
addl
ret
shlb
jb
roll
add
cmp
inc
stc
mov
cmp
mov
leave
scas
sbb
mov
inc
test
cli
sahf
es
loope
inc
add
out
pop
loop
xchg
mov
movsb
mov
dec
pop
test
adc
and
insl
push
adc
and
push
jno
les
test
dec
imull
ljmp
or
xorl
mov
ret
pop
outsl
inc
add
xchg
insb
cmpsl
or
test
jp
outsl
mov
inc
ljmp
jno
cmp
fadds
mov
sub
push
lret
outsl
adc
push
xlat
int3
or
outsb
andl
test
mov
xchg
popa
cmpsl
xor
mov
lcall
into
pop
fs
mov
dec
fsts
and
imul
pop
mov
jmp
icebp
xor
cmp
mov
dec
lcall
adc
xor
inc
pop
stc
daa
mov
inc
arpl
jnp
ret
mov
or
mov
fbstp
shll
out
pop
sbb
dec
aad
sahf
mov
lret
lods
jmp
std
add
jmp
data16
leave
add
cli
mov
movsb
or
pop
jb
imul
sub
pop
ja
inc
jge
repz
xchg
xor
out
push
mov
rcl
dec
inc
jmp
dec
andl
sub
arpl
and
rolb
and
aad
adc
mov
fisubs
mov
jecxz
jg
and
lcall
mov
mov
fidivrs
out
xchg
pop
jnp
sub
out
push
or
jbe
nop
dec
jg
je
mov
xchg
add
insl
bound
mov
jecxz
xor
jecxz
mov
xor
mov
push
dec
cmp
pop
inc
and
sarb
cwtl
insl
sbb
rcrb
xchg
jp
or
cmpl
mov
or
mov
cld
jne
jl
xchg
addr16
push
movsb
mov
dec
loope
imul
add
fndisi(8087
xor
orl
repz
clc
mov
loopne
ja
insl
and
loope
ds
pop
pop
ljmp
mov
mov
jb
loopne
ret
xor
fs
ror
mov
icebp
cmp
push
fiaddl
or
sub
nop
outsl
lea
push
les
jne
lock
inc
push
shlb
mov
adc
aam
push
mov
inc
xor
dec
mov
popf
les
push
and
and
test
bswap
rclb
pop
push
push
cmp
rorl
xor
jmp
mov
pop
and
gs
push
mov
and
add
test
mov
orb
xor
mov
jle
fwait
push
cmp
push
and
out
adc
add
lcall
and
f2xm1
cmp
rorb
into
mov
xchg
dec
jae
dec
shl
nop
rorb
mov
ret
push
jle
jns
daa
sbb
add
out
lods
jecxz
add
pmulhw
aas
inc
or
fldt
out
fsubl
dec
or
sti
clc
lods
ds
mov
adc
xchg
cltd
push
scas
mov
mov
adc
or
stc
sub
push
push
leave
enter
push
clc
ds
in
pop
push
or
daa
pop
gs
outsl
leave
outsl
jecxz
sbb
mov
aaa
dec
call
aam
and
cmp
mov
pop
leave
jmp
xor
jge
xchg
stos
std
test
aam
gs
jmp
dec
sub
test
movsl
xor
pop
jno
or
enter
stos
test
or
iret
xchg
and
inc
fists
fstps
aam
pop
lds
mov
test
lret
pop
lods
xchg
call
cmpsl
je
dec
in
shlb
je
pop
push
loop
cmpl
imul
les
shll
jnp
es
mov
jg
push
or
sub
shr
cmp
add
stc
fwait
out
sarl
sbb
test
xor
inc
in
or
or
mov
inc
inc
outsl
fldl2e
and
mov
xor
loope
icebp
push
mov
mov
mov
mov
sbb
scas
and
iret
push
stc
inc
dec
icebp
stos
xchg
ret
ja
mov
sbb
cmp
cld
rcrb
ficoms
xchg
lds
jno
jo
mov
andl
jp
mov
dec
loope
loope
inc
dec
scas
into
push
xchg
mov
data16
inc
or
push
or
pop
les
or
cmc
andb
or
xchg
cmp
scas
shrb
xor
and
mov
outsl
mov
add
dec
movsl
icebp
test
mov
ljmp
inc
rolb
ror
test
mov
jno
jns
xchg
mov
mov
xchg
sar
inc
xchg
mov
push
mov
sub
in
rcll
mov
enter
shr
ret
xchg
xor
mov
mov
xor
mov
jae
xchg
out
pop
popf
cli
sub
and
into
push
cmp
les
fwait
dec
jg
pop
mov
fisttpl
inc
cwtl
add
shrb
xchg
test
jge
rorl
cmp
cmp
andb
pop
rcll
mov
das
rcl
mov
ror
mov
inc
mov
add
out
adc
mov
sub
mov
sti
cwtl
mov
xor
jmp
push
dec
and
out
add
sub
mov
jns
mov
out
dec
adc
add
nop
cmpsb
jg
ret
xorb
and
cmp
sbbb
jne
push
adc
stos
and
or
pop
fisttpll
or
imul
lret
xlat
cmpsl
rcrb
pop
pop
ret
loope
xor
filds
outsb
jno
sahf
cmp
ss
push
repz
sub
imul
jmp
push
and
insb
popa
into
xchg
cli
lds
data16
jns
pop
das
or
xchg
mov
jecxz
add
imull
lock
addb
inc
push
repz
pop
repnz
movsl
push
shrl
sahf
in
sbb
enter
and
inc
and
inc
rclb
push
mov
out
sub
aam
and
mov
add
xchg
xchg
push
pop
int
pop
sub
scas
inc
pop
pop
adc
mov
rorl
lods
repnz
sbb
icebp
sbb
sub
sub
inc
ret
sbb
fstpt
movsb
inc
mov
cmp
add
aaa
lods
jge
shlb
scas
adc
and
lock
push
ss
sahf
rorb
pop
insb
sbb
jbe
addr16
cmp
int
mov
scas
push
jle
xor
insb
xchg
movsb
xlat
inc
leave
mov
fwait
add
outsb
dec
push
pop
into
stos
add
sti
cmp
in
cmp
ret
hlt
pusha
xchg
rclb
add
cli
pop
scas
jne
xchg
cmpsl
mov
jb
int3
fbstp
and
push
leave
cmp
shll
and
out
push
sub
dec
ret
jae
outsl
xor
or
add
repnz
pop
rclb
mov
into
inc
cmp
xor
gs
in
ffree
adc
stc
sub
addr16
repz
push
dec
popf
sbb
add
add
push
sarl
pop
add
jbe
fmuls
flds
shrb
lock
jp
xchg
stos
lods
and
cmp
or
pop
push
into
mov
xor
or
ret
push
push
dec
mov
mov
mov
shll
inc
out
pop
repz
leave
xchg
mov
mov
outsl
mov
scas
in
divl
or
push
ret
scas
out
mov
aad
fnsave
add
int3
mov
iret
inc
pushf
xchg
pop
adc
jmp
jbe
fdivrp
insl
test
or
mov
or
cmp
les
mov
mov
inc
pop
pop
lds
inc
and
out
shlb
jl
mov
into
and
lock
jns
sub
ljmp
scas
cli
xchg
xor
pushf
dec
mov
fiaddl
sbb
cmc
ja
les
jecxz
fld
push
cmpl
and
lea
test
dec
inc
jno
ret
xor
enter
mov
mov
dec
pop
sub
leave
mov
pop
dec
dec
push
out
mov
rcrl
mov
divl
std
insl
or
dec
cmc
sub
dec
mov
xchg
xchg
stos
sub
xor
ljmp
stc
mov
add
mov
outsb
nop
out
test
add
iret
jno
rolb
mov
cmp
test
mov
fcoml
jl
in
push
loopne
push
sahf
mov
roll
dec
xchg
rorb
pop
mov
loop
aam
or
out
addr16
xor
mov
add
shlb
movsb
mov
xor
outsl
sub
cld
sti
inc
gs
xchg
dec
add
popf
mov
push
imul
mov
idivl
add
sbb
pop
in
inc
and
scas
shrl
ret
out
cmp
push
mov
sub
jnp
stc
mov
jo
jmp
lds
scas
insb
jns
jp
ret
gs
jnp
inc
xchg
lds
jg
and
mov
mov
and
fmuls
ja
dec
sarl
sahf
push
push
mov
mov
scas
dec
push
push
das
push
repnz
mov
ljmp
in
jecxz
inc
fadd
push
inc
xchg
testl
xor
movsl
dec
jle
loope
cmpsl
stc
rorl
shrb
into
aad
je
lods
inc
popa
je
cmp
or
mov
or
mov
sub
test
cmc
outsl
hlt
or
jmp
cmpsb
mov
outsb
sub
mov
push
and
stc
mov
mulb
mov
add
xor
daa
lahf
push
outsl
cld
jl
sub
dec
mov
jo
push
mov
sbb
sub
inc
xchg
xor
insb
ficompl
scas
mov
xor
push
lock
add
xchg
rcll
mov
mov
jno
pop
inc
loopne
fisubrs
jecxz
cmpsl
daa
jge
cmpb
imul
lea
test
push
fwait
mov
lods
loope
cltd
in
xchg
ret
imul
stos
jle
mov
jle
xchg
rcll
in
mov
daa
jb
shlb
in
sbb
adc
mov
mov
es
adc
sahf
and
mov
outsl
bound
scas
mov
lret
scas
iret
xchg
and
lret
in
mov
shlb
dec
cmp
out
fisubl
mov
xor
pop
mov
inc
add
fs
cmp
jge
mov
adc
sbb
mov
pop
inc
insb
cmp
mov
lds
gs
adc
lds
sahf
rep
dec
push
mov
xchg
jecxz
shrl
xchg
cmp
sarl
jl
sub
mov
xor
loope
mov
inc
jno
outsl
test
jg
inc
xchg
or
ret
clc
and
xor
dec
mov
cmp
xor
scas
cmp
mov
mov
add
stos
scas
lahf
xor
dec
popf
push
mov
or
mov
sahf
jnp
mov
or
scas
add
iret
aam
cmp
adc
dec
sbb
inc
lods
loope
scas
mov
mov
repz
jno
out
and
stos
dec
pushf
jo
test
loope
add
in
arpl
inc
lds
adc
std
out
into
loopne
and
pop
fs
in
xchg
fisttpl
push
daa
or
add
ficomps
sub
xchg
lcall
inc
mov
mov
fdivp
loop
fmuls
xlat
mov
pop
and
mov
jb
push
pop
enter
sbb
mov
sub
mov
add
sub
or
std
shll
es
mov
and
or
or
ret
movsl
mov
cmp
sahf
test
xchg
adc
fs
xor
and
push
push
adc
pop
cmpsl
jecxz
in
pop
adc
inc
xchg
xor
cltd
leave
push
sub
mov
loope
test
frstor
lock
dec
inc
leave
sbb
add
out
xchg
jo
test
bound
inc
shlb
mov
xor
or
sbb
jae
cld
fisubs
cmp
lcall
repz
mov
add
repz
and
std
mov
sbb
xchg
cmp
int3
adcb
mov
jns
or
ret
jo
les
enter
inc
mov
push
mov
fsts
inc
out
ret
mov
inc
out
fnsave
in
cmpsl
xchg
in
pop
xchg
out
dec
in
aas
mov
pop
inc
stos
iret
sub
icebp
xor
movsl
jo
aam
pop
pusha
xchg
mov
loope
mov
pop
outsl
popa
aam
out
or
mov
addl
mov
test
cmpsb
stos
xchg
out
fucomi
adc
mov
push
call
popa
sti
push
call
mov
sub
out
cmp
pop
popa
jle
lahf
sub
scas
in
ret
push
mov
mov
xor
shll
push
pop
mov
out
cmpsl
add
sub
jb
cmp
fldenv
lret
dec
adc
mov
xor
outsl
lds
outsl
out
loope
outsl
mov
push
and
dec
aam
bound
insl
aam
pop
sub
and
mov
cs
loopne
xor
mov
sahf
dec
fstl
clc
push
adc
scas
mov
sbb
mov
xchg
mov
sub
add
jmp
sbb
push
sub
pop
stc
lods
jne
fidivrs
mov
mov
ja
pop
dec
sub
in
mov
test
jne
pop
mov
sub
inc
ficoml
les
fdivrp
popa
mov
pop
push
and
add
cmp
sar
in
stos
cs
mov
std
mov
adc
lahf
jle
filds
add
jno
out
scas
and
daa
scas
push
push
and
inc
fwait
sbb
inc
dec
push
sub
pop
shlb
and
xor
in
lds
jne
in
sub
xchg
test
mov
ret
and
ret
xchg
call
stos
adc
pop
les
xlat
lods
insl
repnz
out
push
test
sbb
adc
or
imul
and
xchg
sub
xchg
sbb
out
cltd
add
dec
cmp
insl
les
push
mov
pop
outsb
adc
ljmp
jmp
inc
lret
xchg
mov
pushf
add
xchg
shl
iret
push
leave
adc
aas
sbb
rcrb
inc
cmp
dec
sub
mov
stos
sub
addr16
les
mov
ss
addl
inc
xor
sub
mov
xor
sub
inc
clc
in
mov
mov
jnp
lret
and
cmpsb
fwait
lcall
jp
sahf
adc
shl
sbb
push
mov
enter
jecxz
sarb
imul
popa
call
dec
ja
jecxz
xchg
mov
sbb
add
or
iret
xor
jns
fwait
adc
add
out
xor
xchg
frstor
or
dec
pop
data16
arpl
test
or
mov
xchg
dec
movd
ja
out
jnp
inc
sbb
je
inc
pop
cmpsl
xor
add
rolb
jb
imul
and
fidivrs
xor
ja
imul
test
mov
cwtl
fsubrs
std
mov
and
insb
gs
pop
repnz
das
mov
hlt
adc
sarb
mov
xlat
mov
insb
xor
in
fstpl
mov
inc
rcl
cli
fcomip
rcrb
in
add
rcr
dec
js
dec
inc
lock
cmpsb
test
jmp
test
jb
in
stos
test
add
int
add
mov
outsl
jge
movsl
pop
jge
xor
loop
les
cmp
inc
insl
fdivp
sbb
mov
add
mov
ret
cmpsl
mov
push
cmp
push
pushl
cmp
in
fucomip
into
movsl
adc
cmp
and
or
lods
jo
sarl
rorb
xor
addr16
test
mov
mov
pop
sbb
imul
push
jp
jecxz
dec
iret
adc
idivb
lock
sub
pop
mov
call
add
icebp
pop
push
jmp
rcll
pop
sbb
insl
xor
stc
fstl
xchg
addl
fucomi
stc
enter
adcl
lret
mov
pop
out
orb
sbb
gs
mov
ss
cmp
test
push
jb
mov
test
clc
sub
dec
loope
mov
cltd
and
mov
outsl
xor
mov
mov
mov
test
sub
pop
inc
push
loope
adc
add
dec
iret
leave
adc
roll
out
test
jb
cltd
cmp
jbe
into
cmp
dec
pop
leave
stc
or
imul
in
mov
pop
jecxz
cmp
or
adc
pop
sub
sub
js
cmp
out
ja
inc
sti
and
loope
mov
inc
or
pushl
mov
negb
mov
mov
push
outsl
mov
inc
add
jno
ret
inc
or
mov
cli
or
mov
mov
mov
mov
mov
pop
pop
stos
scas
imul
xchg
inc
cltd
adc
inc
addr16
stc
mov
xlat
loope
xchg
cwtl
mov
jno
add
or
xchg
xchg
rolb
pop
neg
mov
dec
lret
movsl
sbb
ficoms
add
add
xlat
dec
dec
cmp
add
xchg
mov
mov
xchg
pushf
jnp
mov
lret
psubsb
inc
pop
cwtl
mov
rorl
xchg
pop
sub
add
aaa
icebp
sub
inc
scas
stc
push
cltd
mov
icebp
lcall
lock
push
fld
clc
pop
cmp
dec
sbb
inc
push
jecxz
push
mov
pusha
sbb
mov
ds
sbb
shl
rolb
sbb
push
lds
mov
pop
subl
pop
addb
mov
in
push
out
fucomi
mov
mov
ret
mov
inc
sbb
mov
mov
imul
mov
ret
jg
outsl
add
push
inc
flds
fsubp
ss
mov
xchg
iret
add
pop
fisubrl
aas
pop
pop
popf
mov
cmc
ret
mov
jl
inc
insl
movsb
pop
cmp
les
sbb
xor
sahf
das
ss
fcmove
aam
fsubl
cmpsl
xchg
cmp
leave
out
cli
push
adc
addl
xchg
add
ss
mov
xor
repz
or
icebp
adc
cmp
push
stos
cwtl
xor
in
push
dec
movsb
jecxz
pop
ret
xchg
aas
inc
aaa
cmp
ffreep
filds
lock
push
inc
aad
addr16
bound
les
sbb
and
scas
push
pusha
push
add
and
out
pusha
clc
push
test
mov
mov
lret
push
stos
mov
sub
adc
mov
dec
imul
pop
out
call
dec
shll
movsl
or
test
fisubl
mov
and
shrl
aaa
mov
mov
imulb
fimuls
xor
xor
fistpll
jo
dec
mov
in
test
jecxz
out
inc
or
inc
std
mov
movsb
mov
ret
outsl
fsub
pop
mov
fwait
jecxz
outsl
inc
in
cmp
jae
adc
ja
xor
sbb
dec
xchg
add
div
mov
in
movsb
pusha
pop
clc
mov
loopne
pop
xchg
les
outsl
into
inc
jne
jno
loope
and
fiadds
ret
xchg
add
dec
ficoms
inc
int
subl
mov
jae
mov
xlat
dec
shlb
pop
pop
jns
add
jno
or
rol
or
aaa
jo
jmp
lods
jo
cwtl
into
mov
add
or
mov
cmp
jno
xor
rolb
shlb
fwait
sbb
popa
fwait
jmp
or
sbb
and
scas
sbb
lret
add
fnsave
imul
mov
les
andl
or
add
call
mov
pusha
xlat
loopne
mov
push
dec
push
xor
xchg
je
pop
lahf
lock
xchg
sbb
pop
push
push
lcall
mov
adc
adc
jp
push
adcb
inc
jns
jg
mov
or
sbb
sub
jp
addr16
xchg
ror
arpl
inc
les
xchg
outsl
cmp
loopne
dec
adc
add
sbb
jae
dec
cmpsl
movb
jo
roll
xchg
fimull
jnp
fs
es
arpl
push
ja
shl
pop
or
push
mov
lds
daa
adc
inc
pop
jecxz
loop
mov
sbb
mov
loop
rcr
repz
nop
jge
in
xchg
push
test
mov
cmp
push
and
mov
mov
pusha
dec
mov
std
gs
loopne
xor
cmc
stc
mov
ror
nop
mov
arpl
rclb
push
push
xor
mov
cmc
jecxz
mov
addr16
sbb
mov
mov
xor
sahf
lds
cmpsb
mov
mov
test
dec
movsb
push
xlat
push
lret
subl
jne
mov
cmp
mov
jmp
and
mov
lret
and
inc
xchg
mov
fists
mov
xlat
jmp
mov
xor
ljmp
int
cmc
mov
cltd
sbb
jmp
sbb
daa
fwait
ja
lahf
notl
filds
test
inc
inc
add
out
or
add
icebp
icebp
ja
pop
out
loopne
test
out
fdivp
mov
divb
ljmp
jecxz
out
mov
iret
aas
xchg
sti
push
sbb
or
cld
mov
xchg
les
out
xchg
sbb
orl
neg
mov
imul
test
push
addr16
push
sub
ss
int
sbb
xchg
lock
sbb
scas
sti
pop
addb
push
xlat
aas
cltd
add
xor
cmp
lea
in
xor
cmpsb
insb
out
dec
or
arpl
imul
fmull
std
lock
mov
and
test
stc
mov
adc
cmpsl
insl
or
mov
sub
mov
jp
es
jno
pop
and
jo
dec
rol
fcomi
jae
ljmp
out
aam
cwtl
jp
push
mov
pop
pop
sbb
mov
jl
lcall
add
inc
aas
sahf
data16
repnz
insl
mov
and
pop
xor
jno
mov
xchg
shrb
orb
into
or
pop
inc
cmp
xchg
sbb
je
inc
xor
fbstp
stos
cmpsl
loope
sti
xchg
push
adc
sbbb
jno
jnp
jnp
ss
js
xorl
pop
imul
out
jp
mov
mov
xlat
pop
cmp
xchg
inc
into
sbb
shlb
cmp
sbb
pop
mov
insb
mov
vandps
inc
movsb
dec
jge
fimull
ret
and
call
bound
lcall
fs
imul
std
jns
cltd
inc
divb
outsl
add
rcr
push
inc
fisttpll
jnp
outsb
inc
popf
sbb
test
sbb
inc
clc
movsb
rorl
in
ds
ja
ret
fdivrs
push
stc
add
add
and
imul
jp
cmp
cmpsb
lahf
mov
inc
enter
loope
xchg
std
inc
rcrl
mov
clc
shlb
sti
mov
push
addr16
pop
sbb
lods
cmp
shlb
pop
out
popf
pop
std
mov
jbe
cmp
and
stos
mov
or
cmpsl
xchg
dec
adcl
dec
insb
push
jmp
sbb
and
mov
sti
xlat
add
outsl
ljmp
pop
movsl
mov
outsl
push
loopne
je
adc
test
sbb
test
popf
and
sub
cmp
xorl
add
lret
adcl
lods
jmp
arpl
aam
repnz
cmp
sub
and
jne
daa
es
and
test
inc
loop
jge
lret
add
dec
cwtl
jecxz
cltd
pop
popa
insb
xor
dec
mov
inc
inc
push
cmp
xchg
mov
push
lds
xchg
rclb
cmp
inc
sbbb
loope
fistpll
jno
mov
mov
aad
arpl
pop
sti
popl
stos
mov
insb
add
js
mov
and
or
movsb
push
xchg
jnp
xlat
test
lcall
mov
test
dec
aaa
fisubl
mull
test
pop
std
jno
out
push
dec
sar
push
mov
pop
cs
jb
jns
add
fildll
pop
xorb
rclb
inc
push
pop
orl
iret
rcrl
movsl
or
out
stos
dec
in
inc
sub
subb
lds
dec
fistpl
push
xchg
loop
ja
sbb
lods
push
sarb
cli
jbe
xchg
js
insl
inc
movsl
cwtl
pop
jg
inc
rcrb
sbbl
negl
sub
push
mov
inc
inc
leave
stc
pusha
and
movsl
mov
cmp
imul
call
lds
adc
pop
or
scas
in
adcb
and
lods
les
mov
push
inc
popa
pop
fsts
and
jp
lods
cld
adc
mov
ret
xchg
lods
mov
js
sarb
jp
addr16
inc
test
movsl
aas
xchg
les
pop
xchg
outsl
gs
xchg
mov
repz
mov
loope
xor
mov
jbe
or
scas
sbb
repz
jne
cmpsl
mov
add
into
mov
scas
iret
pop
roll
push
out
jecxz
or
fld
push
pop
inc
mov
movsl
sbb
jge
out
mov
les
pop
adc
iret
insb
mov
jno
repz
cmp
add
xor
add
addr16
dec
pop
fldl
and
and
mov
mov
cmp
pop
push
pop
dec
pop
jns
jecxz
shl
rcll
push
jmp
sbb
mov
push
shlb
or
inc
outsl
mov
inc
into
std
test
loopne
aam
sbb
adc
or
xchg
add
add
mov
lock
xchg
inc
jecxz
xchg
and
jnp
pop
repz
push
mov
sbb
dec
jns
fimull
lods
nop
add
out
sahf
call
js
xor
and
mov
hlt
daa
lock
cli
add
adc
jnp
add
sbb
outsl
fs
pop
aaa
daa
repz
gs
mov
outsb
gs
mov
add
push
iret
bound
pop
fwait
xchg
dec
push
mov
hlt
es
test
or
sbb
jns
xor
pop
orl
mov
ja
mov
lods
pop
mov
mov
rol
xchg
std
std
pushf
test
or
cmp
dec
out
dec
ret
scas
lods
jle
or
mov
jne
in
and
fwait
insl
push
or
lea
sbb
mov
jb
bound
sarb
xor
fiaddl
sub
in
pop
mov
add
jno
or
fmuls
push
and
dec
cmp
mov
dec
hlt
ss
das
adc
hlt
cmc
shl
icebp
inc
movsb
inc
add
xor
mov
jg
dec
dec
mov
cmp
adcb
dec
ret
push
mov
call
rclb
outsl
dec
scas
sub
adc
xchg
mov
aad
in
out
jge
adc
pop
pusha
sbb
or
jo
cmp
mov
push
xor
cmp
lods
rcll
add
push
adc
mov
std
cmp
movsb
pop
jae
inc
rclb
push
inc
add
cmp
jne
imul
inc
sub
sbb
sbb
lret
xor
pop
jne
jmp
inc
inc
lcall
xchg
xchg
adc
inc
add
out
orl
mov
fisubs
clc
push
ret
add
mov
sbb
xor
pop
sahf
subb
dec
cmp
add
xchg
sti
inc
cmp
pop
and
xchg
dec
repz
adcb
pop
jns
les
push
push
xchg
fbstp
mov
fdivrs
stos
xchg
mov
xor
icebp
mov
in
push
testb
imul
ja
imul
sar
jmp
xchg
inc
jo
xor
xchg
mov
jae,pt
and
ret
jge
mov
out
mov
push
add
dec
mov
sbb
or
iret
scas
imul
mov
mov
repz
sub
fcmovnb
push
pusha
xchg
or
and
std
sarb
lock
fisubrs
aad
fidivrs
outsl
cwtl
and
lcall
je
sub
mov
out
cmc
jp
xchg
scas
fwait
call
mov
mov
inc
push
mov
sub
insb
sub
cmpsl
divl
and
jle
les
pop
ja
jnp
dec
rclb
add
jp
repnz
push
sub
aaa
push
lret
ficompl
lret
add
popa
inc
jae
xlat
pop
xor
cmp
inc
scas
mov
je
repnz
jecxz
lea
dec
inc
pop
adc
cmc
inc
lahf
fimuls
add
mov
jae
mov
cmpsb
sbb
jg
ret
xor
mov
ljmp
mov
xor
lret
mov
mov
xchg
jne
dec
aas
sbb
mov
push
mov
out
incb
pusha
jae
mov
inc
popa
int
addr16
mov
or
imul
push
xchg
loopne
and
adc
je
jb
repz
and
sbb
cmc
pop
loope
mov
jns
inc
sti
cmpsb
mov
push
sbb
popa
adc
xchg
fsub
sbb
hlt
adcl
push
arpl
lahf
movhps
and
addr16
cmpsb
ljmp
mov
xor
popf
add
lret
rcr
aam
jmp
aas
push
test
xchg
mov
sub
sbb
cmc
divl
adc
mov
lock
jb
dec
mov
and
mov
idivl
mov
in
dec
cmpsb
jle
and
cmpsl
adcl
push
push
xchg
push
xchg
std
rorl
test
dec
cli
sub
mov
adc
push
out
lods
pop
mov
int3
xor
mov
cmp
inc
dec
outsl
rcr
inc
insl
and
cmp
jmp
and
sbb
mov
xor
dec
xor
in
and
frstor
mov
movsl
rcl
mov
mov
mov
insl
fnsave
lea
adc
les
push
add
loop
lock
fisttps
sbb
pop
cmp
mov
add
lods
sbbl
test
add
test
mov
mov
das
dec
inc
imul
cmp
mov
jmp
xor
xchg
icebp
test
in
xor
repnz
aam
and
push
loop
scas
mov
outsb
movb
xchg
js
xchg
jle
mov
shl
dec
and
and
enter
and
mov
lds
jecxz
mov
out
pop
cld
xlat
lock
mov
and
mov
mov
mov
push
add
xchg
test
scas
test
test
ret
mov
ret
stc
loope
ds
inc
stc
cmp
adc
les
jno
and
mov
loop
clc
addl
fidivl
and
cwtl
xlat
les
iret
push
jl
shrb
jge
or
and
jns
sbb
movsl
add
js
pop
lods
cmpsb
jnp
lods
cmp
cld
cli
cmp
andl
jno
enter
ret
cltd
xchg
xchg
add
fists
data16
rorb
outsb
mov
jne
inc
add
lret
fimull
jecxz
stc
jmp
add
iret
dec
lds
mov
mov
cld
loope
leave
pop
cmp
pusha
pop
sti
cmp
jge
and
dec
pop
mov
cmp
sub
push
cltd
daa
sub
push
add
xor
pusha
sub
mov
and
testl
push
xor
jb
insb
fidivrs
rcll
push
jmp
lret
loop
xor
int
lea
jno
sar
mov
and
inc
adc
or
and
filds
in
mov
test
aaa
inc
pop
add
loop
fwait
lods
sbb
jecxz
out
test
sub
pop
dec
sahf
repnz
insl
sub
sbb
repz
xlat
mov
scas
push
cmp
roll
push
inc
cmp
sbb
fnstcw
xchg
inc
daa
jb
xlat
fidivs
dec
jg
adc
push
push
xor
inc
sarl
insl
data16
inc
mov
mov
and
out
adc
adc
fcomps
les
push
xor
rcrl
dec
jns
fidivl
out
cmpsb
ret
gs
or
and
lea
js
mov
dec
gs
dec
cmpsl
outsl
pop
arpl
jmp
mov
ret
fidivrl
ret
aad
movsl
push
sbb
jnp
popf
mov
jecxz
into
insl
jge
loope
mov
pop
inc
and
mov
stos
std
and
add
mov
xchg
in
ret
pop
shll
jae
pop
fstpl
or
outsl
insl
add
outsl
pop
dec
sbb
mov
pop
ret
mov
push
dec
or
pop
mov
pop
bound
ret
cmp
push
inc
ficomps
push
stos
xlat
dec
jl
and
xor
mov
lahf
rorb
movsl
sbb
jne
mov
inc
mov
call
sub
mull
pushf
inc
ret
cwtl
leave
mov
xchg
push
data16
mov
or
jb
jne
add
add
fistpl
inc
push
inc
jne
dec
jge
les
aam
mov
rcl
in
lea
out
mov
outsl
dec
jle
mov
mov
push
shl
push
jbe
lods
push
fsts
inc
push
jno
mov
mov
or
lods
pop
ret
sub
out
and
orb
pop
test
ret
inc
push
stc
fistpll
movsb
cmp
ret
enter
aaa
jmp
shr
push
or
mov
add
mov
inc
aaa
ss
xchg
addl
mov
pop
mov
or
jne
jecxz
cmp
movsb
xchg
cli
push
ficoms
pop
jno
into
mov
cmp
xor
sbb
loopne
mov
mov
sbb
mov
xchg
ror
adc
push
iret
fisubs
cmp
pop
cld
xchg
aas
and
les
or
sahf
rclb
loopne
dec
adc
mov
dec
stc
movsb
jge
leave
fwait
es
dec
mov
fstps
inc
xor
into
int3
das
call
negl
cltd
ja
pop
dec
add
adc
andl
add
add
xor
inc
adc
sahf
jle
fucomip
or
cltd
push
cmpsb
jp
test
inc
dec
test
ret
inc
loope
push
loopne
fsubr
aas
push
arpl
cwtl
or
adc
std
lea
push
lods
mov
pop
leave
push
rcrl
sbb
lods
sub
xchg
and
subl
or
test
mov
dec
loop
outsl
mov
mov
adc
sbb
and
in
cwtl
adc
mov
sarl
pop
xor
pop
jmp
mov
jl
dec
cltd
push
js
mov
mov
shlb
fs
fnstsw
ret
cltd
sbb
pop
push
fidivrs
repz
sar
xchg
int
and
sbb
mov
cmp
sbb
insl
mov
int3
mov
xor
or
mov
sbb
div
arpl
mov
mov
ss
push
jmp
lock
add
jmp
jbe
mov
cmp
arpl
jbe
xlat
insl
shrb
test
fadds
and
push
add
iret
and
rorb
loopne
add
xlat
movl
fsubs
call
sti
pop
js
or
sub
jnp
out
xlat
add
in
and
jae
insl
add
adc
and
push
movsl
sar
outsb
mov
cmp
xchg
add
jbe
imul
or
mov
rcrb
jl
bound
push
push
fisubs
shl
xor
rcrl
pop
add
loope
rolb
push
fdivs
repz
scas
ret
xorl
xor
test
inc
in
jl
and
xor
sbb
sub
mov
je
dec
je
data16
or
cltd
arpl
pop
test
fidivrl
sar
inc
xchg
and
es
pop
lret
pop
cmc
das
xor
xor
cmpb
sub
bound
mov
xchg
lea
in
mov
jmp
and
adc
mov
sub
sbb
inc
outsl
rorb
ret
and
jb
sbb
into
cli
or
std
pop
imul
clc
les
fldcw
fldl
les
in
shrl
push
scas
movl
mov
jg
daa
or
rorb
dec
loop
pop
test
shlb
scas
inc
jnp
lods
in
mov
test
pop
insl
jne
jecxz
ljmp
out
insl
mov
pop
jb
push
jle
cmp
mov
cwtl
clc
and
pop
cmpsb
jno
or
add
testl
por
jno
pop
sbb
inc
and
adc
jecxz
in
xchg
dec
mov
add
adc
jp
sbb
lea
lret
pop
push
xorl
pop
pop
loope
xchg
into
movsb
incb
pop
andl
popf
mov
outsl
scas
mov
mov
pop
jmp
mov
es
sbb
loope
add
and
mov
push
pop
inc
addr16
sarl
pop
sub
mov
add
xor
aam
adcb
jp
mov
shl
test
jecxz
ret
fs
ja,pt
mov
stos
sub
fwait
data16
ja
adc
rcll
mov
into
out
xchg
add
lcall
push
nop
repnz
cli
loope
popf
add
in
in
imul
jne
icebp
ds
sub
sahf
testl
add
xor
nop
pop
and
jge
push
mov
push
in
outsw
mov
cmpsb
xor
gs
sub
pop
xor
out
inc
and
add
jle
popa
rorb
xchg
lods
xchg
add
pop
xchg
jmp
cmp
inc
mov
dec
fadd
stos
sbb
insl
loopne
popl
push
pop
rorb
mov
pop
dec
loopne
aas
add
clc
cmpsb
sub
xchg
and
out
roll
mov
mov
push
out
cld
mov
cmp
and
mov
add
push
mov
fidivl
xchg
insl
data16
inc
int3
ffreep
inc
ja
lods
repz
into
sub
cld
aad
test
push
lahf
inc
mov
ficoml
ss
xchg
ds
stos
mov
push
xchg
adc
aam
out
int3
testw
rclb
repnz
es
xchg
or
inc
ds
xchg
lret
jge
dec
or
out
sub
or
pop
mov
aaa
mov
lret
imul
into
test
push
mov
popa
mov
adc
insl
jae
mov
add
jecxz
pop
ret
dec
cld
pushf
inc
fildl
and
mov
loop
lds
into
decl
out
dec
dec
and
add
fwait
cmpsb
sbb
psubb
jbe
movsl
inc
xchg
lret
pop
negw
pop
repnz
aad
cmpsl
mov
fmuls
ljmp
cmp
jns
jb
adc
cmp
imul
daa
mov
or
adc
fidivs
jp
fsubrs
dec
jle
cmpsl
sbb
repz
pusha
mov
sbb
sbb
sbb
ljmp
pop
shlb
push
loop
stc
push
sbb
ficompl
and
mov
test
push
adc
mov
mov
dec
adcb
inc
out
inc
sub
push
pop
pop
mov
cld
or
inc
sbb
dec
jl
insl
movsl
out
out
fdivrp
push
cmc
lret
inc
dec
ljmp
jo
leave
sub
mov
cmpsl
jns
mov
cmpb
jo
insb
push
cmpsl
pop
sub
inc
mov
in
dec
ffreep
xor
ja
mov
cmp
jmp
dec
sti
out
ljmp
cltd
pop
shlb
xlat
add
add
shll
imul
cmpsl
cmpsl
push
dec
je
push
ds
xchg
test
and
lcall
ret
call
addr16
push
dec
dec
add
xchg
sbb
xor
adc
insl
fsub
mov
in
jb
cwtl
ss
shl
adc
or
les
xor
or
or
fistpl
test
cmp
cmpsl
std
shrb
popf
fisubrs
imul
dec
in
dec
mov
push
fnstcw
rclb
sahf
push
ret
sbb
lods
sub
pop
mov
mov
pop
push
int3
std
add
xchg
pop
stos
scas
push
sbb
test
fdivl
add
sbb
rcrl
cmpsl
push
push
fwait
pop
imul
jg
push
cmp
dec
xchg
pop
rcll
lods
or
jno
jae
and
push
loope
mov
push
jecxz
inc
jne
movsb
push
jo
sub
pop
cmp
cs
enter
int3
call
ss
push
mov
repnz
into
jge
rolb
mov
mov
pop
inc
fmulp
shlb
out
stc
sub
mov
in
idivb
add
push
test
mov
js
cld
jmp
pop
pop
mov
bound
in
out
inc
rcr
pop
shlb
test
filds
lods
sub
ss
roll
sahf
add
mov
rol
rorb
push
cmp
jecxz
testl
adc
js
dec
sub
popa
js
loop
outsb
jno
call
sub
and
push
or
pop
sub
adcb
ja
push
out
cwtl
pop
mov
mov
ds
ficomps
loopne
jecxz
dec
out
and
xor
mov
inc
mov
std
incl
jecxz
push
mov
popa
dec
nop
add
popf
add
mov
ja
dec
push
das
xor
mov
fcmove
xchg
mov
inc
lea
adc
lret
jl
xchg
inc
enter
xchg
mov
pop
out
decl
add
mov
sti
or
insl
pop
and
or
cmp
cltd
jno
xor
nop
lea
cmc
daa
add
vpsllw
test
inc
stos
sub
test
shll
outsb
test
sarb
lret
jnp
jb
mov
add
pop
lods
insl
adc
adc
or
and
movsl
jg
add
scas
mov
pop
in
mov
ficomps
inc
cwtl
xorb
xor
leave
sub
xor
and
jno
not
testl
lods
add
les
out
pop
shrb
pop
aas
mov
jl
fisttps
adc
mov
loope
mov
test
or
test
sahf
test
mov
dec
add
mov
cmpsb
jno
imul
rcrb
push
scas
push
mov
lahf
sar
es
jae
je
cld
add
add
mov
xor
cmpsl
rcll
arpl
icebp
push
stos
aam
hlt
inc
and
call
xor
mov
mov
rol
push
pop
fsts
int3
mov
mov
add
and
sahf
mov
push
mov
push
mov
loope
cmp
mov
pop
sbb
jecxz
inc
out
repnz
or
out
push
dec
pop
mov
push
aas
sbb
mov
je
and
rolb
js
sub
jno
in
arpl
subl
push
shr
pop
mov
jle
icebp
out
mov
or
out
hlt
sub
fildl
inc
mov
mul
mov
data16
jecxz
je
cmp
lods
cwtl
repz
xor
fsubl
leave
or
sbb
xchg
mov
jg
add
aad
aaa
les
into
adc
push
adc
push
sub
xchg
insl
insb
mov
adc
jmp
sahf
push
and
or
pop
jbe
pop
mov
and
cmc
mov
xor
pop
aas
or
jge
pushf
scas
or
cmp
cmpsb
fidivl
loop
add
add
and
lcall
inc
xchg
nop
jmp
stc
adc
xchg
jae
xlat
dec
xor
xor
pop
mov
inc
test
xchg
adc
fiadds
fiadds
push
pop
test
outsl
and
iret
imul
and
sbb
lods
add
ja
cli
cmp
sbb
add
outsl
fidivrl
and
ss
jne
mov
insl
sub
inc
or
sbb
mov
insb
xor
xchg
aam
push
add
or
ja
cmp
ss
inc
mov
insb
mov
mov
out
arpl
push
fcmovbe
js
jbe
inc
dec
jno
inc
popa
scas
jmp
inc
testl
sub
add
jmp
cmc
ret
imul
pop
mov
mov
xchg
js
fidivl
jae
and
sub
cmpsl
inc
rorb
lods
movsb
inc
mov
repnz
movb
push
cs
lret
xor
pop
incl
xchg
cmp
mov
daa
mov
test
cs
sub
mov
adc
aad
dec
cltd
movsl
push
jl
jbe
mov
jl
sbb
push
scas
mov
mov
adc
push
mov
or
stos
es
inc
add
stos
cld
sbb
stc
test
gs
leave
jae
cmc
ja
mov
push
dec
fdivrl
bound
fdivrs
or
xor
stos
adc
fnstsw
inc
loopne
les
test
jno
push
xor
mov
add
mov
nop
rcr
stos
fisubrs
inc
inc
pop
lea
gs
and
jno
xchg
int
xor
scas
test
jecxz
aad
clc
aam
or
cmpl
jno
mov
fs
stos
jmp
xchg
mov
cmc
es
sub
rcrb
addl
adc
and
cmp
mov
rol
mov
cmpsb
shr
adc
ret
push
lods
or
imul
nop
xor
cmp
sub
mov
sbbl
push
dec
ja
sub
jmp
push
repz
sar
add
xchg
rcr
sbb
js
lcall
inc
jecxz
sub
push
mov
inc
xor
jo
dec
cld
or
out
mov
sahf
fcom
out
xor
dec
sub
cmp
fcomp
add
lcall
jge
jmp
mov
fdivl
fstpl
pop
outsl
inc
fnstcw
rcrb
stos
adc
ljmp
and
cmc
icebp
cmp
jae
jne
fldl
fcoms
mov
filds
add
sbb
faddp
shrl
and
cmp
sbb
shr
lret
pop
jns
mov
fldl
dec
or
out
sbb
mov
add
mov
lock
push
into
push
adc
negl
in
sahf
mov
les
adc
rcrl
call
cltd
cmc
xchg
cs
fwait
cmpb
mov
fildl
pop
and
out
enter
inc
fs
lahf
jae
popa
push
add
cmpsb
sarl
scas
lret
push
fnstenv
repnz
scas
jecxz
cwtl
xchg
daa
sti
mov
jle
add
clc
push
adc
push
fadd
push
mull
lods
pop
ds
inc
inc
loop
arpl
jecxz
cmp
and
xchg
inc
lds
inc
jecxz
lret
mov
sub
jns
mov
push
rcll
adc
push
loope
rcll
or
les
testb
outsl
adc
xor
scas
popa
int
das
in
cmp
inc
inc
and
ja
or
adc
jns
cmp
or
stc
inc
iret
mov
cli
sbb
xor
add
cmp
mov
into
xchg
rcrb
icebp
test
movsl
cmp
testl
pusha
add
das
mov
sahf
pop
fs
sub
adc
cli
jns
xor
inc
push
add
cld
xchg
cmpsb
pop
sti
paddsw
lea
mov
inc
mov
int
pop
fimull
loop
mov
adc
and
jp
cmpsl
cmpsb
xor
popf
lods
mov
jo
mov
xor
mov
pusha
roll
outsl
mov
jle
sub
sbb
ja
fdivr
mov
sbb
decl
xchg
inc
imul
adc
nop
sbb
sets
scas
stc
pop
orl
imul
sti
push
sub
sbb
fisttps
push
xor
outsl
jno
or
stc
pop
sub
enter
push
loope
test
outsb
pop
mov
mov
or
sahf
sti
add
es
js
sbb
lods
and
or
and
or
push
mov
or
inc
popa
adc
repnz
pushf
lock
inc
dec
xor
push
lds
pop
jnp
rorb
aam
mov
and
fldt
xorl
inc
adc
xor
xorb
mov
adc
and
cmp
dec
or
pop
mov
add
add
mov
cmp
xchg
mov
xchg
jecxz
dec
negl
pop
push
xlat
sbb
sbb
testl
mov
jne
pop
stc
add
add
mov
jp
cmpl
and
push
cmp
inc
test
xchg
out
inc
lods
push
faddl
mov
adc
lea
add
xchg
fs
icebp
mov
dec
pop
repnz
mov
add
dec
mov
scas
dec
in
stos
fs
dec
add
in
test
lea
mov
outsb
xor
ficoms
mov
std
sub
shrb
cmp
sbb
cld
mov
sti
mov
xor
sub
fwait
ja
jae
lahf
loope
jb
mov
dec
repz
push
jmp
add
pop
ja
sbb
repz
mov
cmp
outsl
push
inc
mov
mov
jg
out
mov
add
imul
test
loopne
sti
les
jg
into
and
dec
mov
xor
jne
sbbl
jne
shlb
and
cwtl
lahf
addb
adc
push
jbe
push
out
xchg
fdivrs
lds
mov
fbld
xchg
pop
ret
push
mov
arpl
cmp
sbb
lods
add
xlat
mull
jecxz
jo
testl
push
sarb
and
jmp
adc
push
cli
jl
outsb
cmp
scas
sub
add
adc
mov
outsb
lret
mov
scas
and
push
fisttpl
sub
and
push
inc
fwait
mov
sbb
pop
out
or
roll
jno
das
add
dec
addr16
push
imul
dec
inc
inc
jmp
cmpsb
adc
ja
sbb
add
mov
loop
jo
lds
xchg
and
or
call
mov
scas
mov
lcall
push
sub
sti
loop
inc
add
and
rcrl
into
sarb
out
jno
pushf
pop
and
and
jbe
adc
loopne
inc
add
shrb
mov
jge
xor
dec
xor
mov
loopne
rorb
insl
call
mov
fsts
jecxz
test
imul
add
mov
incb
inc
aam
mov
mov
xor
mov
scas
adc
add
jmp
inc
outsl
xchg
sti
into
cmpsb
and
insl
xchg
fdivs
sbb
ret
and
rclb
lret
pop
mov
ja
inc
add
ljmp
xor
stc
test
pop
fcoms
loope
rorb
ficoml
fldt
mov
mov
pop
fdivl
xor
roll
pop
pop
mov
and
jno
adc
and
out
addl
iret
mov
mov
sub
ret
mov
add
mov
or
cmc
faddl
add
lcall
and
add
inc
rorl
pop
mov
or
test
lds
into
adc
ja
or
mov
sub
aas
adc
mov
add
xorl
stc
jno
xchg
cmp
ja
addl
pop
cmp
in
ljmp
into
push
xchg
pop
add
sub
mov
adc
or
nop
push
lock
cmp
and
push
mov
sti
dec
dec
jge
stos
mov
dec
and
out
notl
jmp
rorl
and
rcll
in
scas
adc
xor
sbbl
add
cmp
fildll
rorb
adc
je
jo
icebp
in
sub
lods
sbb
add
sti
mov
push
and
push
add
mov
xchg
sbb
les
ja
fwait
and
inc
loope
lret
xchg
fimuls
xchg
imull
cmp
pop
jns
insb
push
dec
lds
ror
jmp
out
fmull
not
jno
jns
cli
repz
icebp
xchg
mov
sbb
out
add
push
xor
lods
mov
add
daa
mov
and
dec
sbb
mov
push
jno
pop
mov
aas
es
imul
adc
jb
dec
test
addl
mull
add
fbstp
and
and
or
lea
leave
sti
sbb
pop
mov
adc
jno
push
icebp
add
jns
into
test
xchg
add
or
cmp
fcmovu
cmpsl
pop
stc
into
notb
paddsw
testb
push
mov
push
fnstcw
push
and
or
movsl
mov
out
fwait
xor
movsl
test
dec
jae
ret
fisubs
lods
shrb
les
stos
mov
scas
enter
mov
mov
movsl
pop
shrb
stos
push
and
enter
adc
lret
jns
adc
fiadds
jp
dec
add
not
repz
mov
repnz
jae
lods
arpl
lds
add
fwait
stos
pop
pop
inc
cmpsb
loope
jnp
xor
mov
push
jle
sbb
sbb
xlat
imul
dec
add
call
push
mov
cmc
xor
push
fwait
mov
sti
mov
sti
inc
sub
and
pop
inc
push
test
sbb
push
lea
cmpl
lea
dec
mov
rol
mov
jbe
add
cmp
subl
faddp
mov
pop
imul
add
fbstp
lret
inc
and
rorb
outsl
cmpsb
stos
xchg
stos
popa
sub
dec
jae
push
inc
mov
aam
lock
mov
andl
sbb
cmpsl
add
inc
xchg
sub
push
ja
fcmovne
inc
jmp
dec
imul
jp
mov
or
mov
pop
mov
scas
sbb
or
jmp
lahf
sub
add
negl
cmp
ljmp
rorl
js
lods
sub
sub
fdivrp
cmp
es
mov
inc
subl
fsubs
test
jnp
shlb
test
push
jmp
cmpsb
andl
mov
lret
xchg
sahf
inc
in
in
fcoms
mov
xchg
gs
std
push
mov
rorl
push
loope
mov
mov
faddl
insl
jecxz
aad
push
notb
gs
scas
push
shrb
jne
add
xchg
leave
clc
inc
sti
in
inc
push
ret
jns
cs
dec
movsl
lods
inc
dec
shrl
fisubs
add
sbb
mov
les
jb
sub
push
rcr
loopne
cwtl
test
xor
stos
inc
push
sbb
stos
test
jbe
stc
idivb
aad
pop
xor
cs
vfrczpd
mov
sub
outsl
inc
inc
mov
push
les
pop
push
addl
ret
inc
jp
rorb
daa
rcrb
ljmp
mov
push
cwtl
fidivl
jecxz
fidivrs
stos
shlb
mov
mov
mov
xchg
fdivp
repnz
mov
mov
popl
xor
popf
cwtl
dec
nop
mul
inc
mov
test
ss
jmp
inc
imul
sbb
pop
aad
pop
dec
cmpxchg
mov
out
fisubl
fs
pop
popa
popl
push
sub
add
dec
jno
cli
adc
push
push
lds
cmpsl
leave
into
mov
ljmp
sbb
jo
leave
xor
mov
hlt
int
and
fnstenv
sub
gs
adcb
adc
cltd
xor
and
stc
in
test
xor
cltd
jmp
mov
push
xchg
inc
in
cmpsb
mov
andb
xor
jae
out
push
jne
pop
hlt
fsub
lcall
leave
sbb
push
ja
mov
fimuls
loope
mov
dec
mov
jge
mov
lcall
mov
icebp
out
xor
push
and
dec
aam
pop
ja
pop
outsl
scas
mov
jns
sbb
scas
or
pop
push
js
xchg
bnd
lods
arpl
fs
sub
mov
cmp
mov
push
mov
cld
out
test
lret
sub
inc
xchg
loop
int3
aaa
aas
or
pop
mov
pop
jbe
sbbl
fucomp
xchg
addr16
dec
xor
lods
cmp
push
out
or
and
push
idiv
inc
aam
jo
xchg
lods
shl
lods
mov
out
daa
add
cmc
scas
les
adc
adc
push
cmpsl
pop
mov
pusha
adc
ljmp
push
xor
ret
dec
add
push
loope
add
cmp
dec
into
push
sti
dec
ficomps
xchg
sbb
jo
enter
in
outsl
dec
repnz
pop
imul
push
sbb
rclb
dec
cld
ja
dec
add
sahf
pop
cmp
xor
test
clc
ficompl
cmp
aam
dec
andb
fistpll
lahf
push
test
lea
sub
loope
loopne
cmpl
popa
insb
stc
sbb
es
mov
leave
mov
sbb
faddl
mov
xchg
pop
lods
jo
std
js
xor
xchg
movsl
add
jp
lods
cmp
lret
dec
aam
into
test
mov
mov
mov
jge
popf
lds
jecxz
xor
push
cmc
aaa
xchg
imul
inc
cmc
pop
xchg
jl
dec
pushf
mov
shlb
push
sub
sbb
fcomps
push
inc
testw
mov
aam
ja
fsubr
and
mov
rolb
outsb
std
xchg
mov
out
outsl
lahf
shll
push
or
insl
les
mov
loopne
data16
mov
dec
shrb
mov
xchg
mov
add
inc
mov
mov
xor
ss
jecxz
js
les
rolb
test
push
ffreep
push
xchg
shrl
iret
add
lock
je
push
aad
idivb
and
les
hlt
push
xchg
mov
xchg
add
decb
shrb
test
roll
or
fstl
dec
mov
lods
ret
mov
idivl
test
inc
cmpsl
sbb
andl
iret
shufps
icebp
lea
loopne
or
scas
cmpb
jmp
xchg
dec
outsl
rolb
inc
mov
pop
mov
add
stos
les
bound
movsl
jp
int3
shl
lods
dec
push
movsl
fwait
fs
mov
ret
mov
ucomiss
rorb
sub
jge
lret
sti
les
dec
aaa
iret
cmp
mov
pop
add
ljmp
inc
jecxz
pop
xor
mov
arpl
out
adc
outsl
inc
push
jne
loopne
jo
or
mov
cmp
jecxz
jmp
rol
lret
dec
shrl
mov
and
mov
mov
adc
mov
mov
outsb
testb
adc
adc
test
roll
sub
mov
test
mov
insl
mov
lret
sahf
pop
dec
dec
cmpb
lea
repz
mov
out
jp
push
rol
adc
push
rol
mov
and
aam
xchg
enter
outsb
ret
jns
pop
xlat
les
and
inc
inc
inc
xchg
icebp
mov
test
addr16
movsl
mov
mov
aad
pop
add
lret
inc
mov
inc
mov
add
jne
mov
xor
xchg
dec
cmpsl
xchg
shll
jl
lock
jae
pop
imul
add
ret
pop
mov
enter
lods
jns
mov
loopne
gs
pop
mov
int
and
xchg
xor
lods
aas
test
cwtl
mov
mov
push
les
and
cmc
test
xor
jno
mov
and
hlt
push
lahf
push
stos
stos
rol
sahf
pop
pop
jecxz
push
insb
sbb
cmc
scas
fbstp
or
repnz
jecxz
iret
addb
or
shrl
mov
lods
jmp
cmp
push
rclb
mov
testl
ljmp
sub
add
mov
data16
add
push
adc
jmp
ds
cmp
sbb
fiadds
repz
sbb
enter
inc
addr16
jns
xor
cld
add
aam
jge
data16
jl
push
les
shlb
mov
fistpll
lds
and
movsl
inc
std
repnz
sbb
mov
mov
out
inc
mov
nop
lock
imull
outsl
rcl
push
das
les
pop
inc
push
push
repz
aas
and
add
cmp
cmp
gs
js
xchg
mov
xchg
stos
pmaxub
fs
push
fstps
repnz
lret
inc
sbb
flds
push
mov
ja
push
sbb
sti
mov
push
ror
xor
adc
loop
rclb
cmpsb
inc
stc
mov
js
scas
enter
loopne
mov
cmp
ja
bound
push
inc
out
or
sbbl
inc
push
add
mov
inc
mov
cmp
inc
xchg
jl
scas
ja
fcom
out
imul
out
mov
lea
sub
cmp
pop
das
dec
mov
scas
pop
stc
cmp
adc
mov
pop
and
jmp
xlat
shrb
mov
in
jecxz
dec
mov
cli
push
push
fsts
inc
jo
mov
push
fstpt
push
sti
add
inc
ret
and
mov
add
mov
inc
and
repz
lock
add
pop
mov
xor
shlb
cmp
xchg
cmp
pop
adc
or
movsl
lahf
adc
loope
dec
cmp
loopew
jp
out
ja
or
jle
or
inc
dec
out
testl
mov
sub
shl
cmp
or
test
jl
cmp
xorl
lods
jbe
xor
and
xlat
rcr
pop
dec
push
mov
std
mov
js
jle
les
inc
pop
sub
mov
adc
aaa
jmp
sahf
scas
lahf
aad
mov
fnstenv
dec
sbb
mov
dec
adc
int3
mov
and
shr
cmpsl
pop
fdivs
insb
imul
pop
les
xchg
inc
adc
jne
push
fdivl
mull
mov
add
jg
sub
jecxz
aaa
adc
test
loope
mov
dec
pop
dec
fsubrs
inc
jecxz
sub
negb
or
push
popl
inc
add
xchg
pop
pmullw
ficoml
out
jecxz
push
fldcw
lahf
sbb
or
xchg
notl
and
in
xor
sbbb
push
and
jg
je
push
out
mov
dec
data16
push
xchg
test
push
cli
lock
push
push
jbe
shlb
sti
sahf
dec
pop
imul
pop
hlt
xor
add
xchg
rol
sbb
xchg
adc
mov
test
loopne
in
pop
dec
mov
sub
cmp
dec
jb
imul
pop
pop
imull
ja
ljmp
out
mov
lcall
cs
xlat
in
shl
sub
mov
xchg
or
add
lods
cmpsb
lods
scas
arpl
push
adc
or
and
rorb
mov
stos
loope
in
sbb
hlt
sahf
ret
cmp
js
pop
push
aam
insb
adc
popf
mov
mov
rorb
jecxz
adc
sahf
add
cmp
cmp
xor
adc
mov
addl
stos
in
inc
test
mov
adc
jmp
dec
pop
cmp
add
cmp
mov
and
dec
adc
mov
push
mov
xor
xlat
imul
orl
xor
push
cmpsb
jo
or
enter
fisttpll
mov
in
aad
sarl
jmp
or
sti
mov
adc
les
sahf
cmp
cmp
inc
outsl
scas
cltd
mov
jae
or
stc
jecxz
sub
into
rorb
imul
xor
pusha
pop
and
imul
push
imul
ja
xchg
lds
dec
cli
andl
lds
inc
enter
stos
cli
xchg
push
xchg
dec
testl
inc
daa
xlat
cmp
testb
mov
sbb
fistpll
stos
push
shlb
lret
mov
andl
leave
xor
clc
jae
shrb
cmp
jecxz
mull
push
idivb
in
jae
lock
imul
inc
cmp
dec
movsl
add
les
mov
clc
add
ret
add
adc
sar
cs
rcl
les
in
inc
cli
loopne
sub
pop
ja
or
je
clc
inc
mov
jmp
dec
leave
adc
add
mov
out
jp
inc
jle
inc
mov
fidivl
shlb
incb
nop
or
scas
mov
rorb
jae
sti
sbb
sbb
xchg
popa
mov
mov
xor
stos
push
sahf
sahf
mov
sbb
xor
lret
and
adc
jmp
sbb
jl
popa
inc
imul
push
push
icebp
pop
les
lds
dec
cs
xor
lret
jae
xchg
mov
ja
arpl
push
and
test
or
pushf
imul
repz
push
mov
movsb
or
insl
icebp
in
jae
dec
shl
sbb
push
add
xor
js
pop
sbb
enter
push
shl
xor
jne
xor
mov
mov
mov
mov
in
cmpsl
pop
or
fdivl
ss
push
pop
loope
loop
repz
sbbl
out
inc
mov
es
mov
push
out
orl
sbb
cmpsb
jne
xchg
or
sub
incb
push
push
ja
and
inc
ret
aad
mov
xchg
mov
mov
test
sahf
scas
jge
mull
push
dec
pop
frstor
ds
jne
inc
push
sbb
pop
aaa
dec
xchg
mov
push
xchg
aas
into
clc
scas
mov
pop
pop
push
jne
stc
add
mov
mov
inc
pop
cmp
mov
out
shll
outsb
sahf
add
loopne
add
test
fiaddl
imul
add
popf
jecxz
sbb
ja
test
inc
adc
loop
shrl
inc
inc
inc
add
push
or
test
xchg
xlat
mov
jb
data16
scas
cltd
insl
push
movsl
into
roll
jae
push
ret
js
jno
pop
loop
push
xchg
pop
cmc
push
sbb
mov
xchg
lea
es
mov
adc
icebp
les
mov
push
data16
gs
les
mov
sti
sahf
lea
ret
cmp
ret
movsb
and
dec
add
push
jp
aam
fsub
add
into
pop
imul
lret
cmp
xor
xor
or
xchg
mov
mov
into
inc
int3
in
sbb
lods
rcl
mov
enter
scas
fiaddl
in
int
add
adc
repnz
aas
clc
jno
or
fucom
push
orl
in
movl
cli
insb
dec
aas
rolb
push
or
lods
ret
test
pop
inc
lock
pop
std
in
cmpsb
push
pop
arpl
xchg
jbe
imul
les
mov
addb
clc
icebp
pop
out
push
push
idivl
dec
in
fisubs
sbb
xchg
jb
je
dec
jns
jae
insl
imul
aaa
rcrb
inc
jmp
pop
mov
mov
jecxz
adc
pop
sbb
adc
mov
xor
repz
lcall
call
cmp
stos
andl
pop
inc
popf
add
cmp
mov
or
fsubrs
or
in
pop
and
mov
add
mov
sbb
gs
sahf
jecxz
lret
notl
int3
mov
sbb
mov
xor
push
mov
pop
ret
adc
jge
jae
jl
jg
sbb
add
or
sarb
push
ret
sbb
pop
push
ret
push
push
push
push
or
add
mov
hlt
pusha
roll
xchg
and
jns
mov
test
shll
adc
adc
stos
adc
outsl
rol
dec
add
or
mov
fnsave
push
dec
bnd
jmp
dec
xchg
into
pop
scas
or
fcmovbe
xchg
mov
and
nop
cmc
movsb
pop
mov
jmp
jne
and
bnd
aam
sbbb
out
sub
pop
pop
mov
dec
push
push
mov
imul
jp
push
lretw
rcrb
jno
lods
mov
xchg
cmp
in
les
ds
ret
jbe
inc
dec
and
bound
cwtl
inc
dec
mov
data16
or
aas
lds
xor
ja
jnp
shr
pop
dec
aam
add
insl
loopne
cmpsb
stos
popf
push
sbb
jg
or
inc
daa
jp
jae
aad
xor
or
push
mov
fcmovb
mov
nop
mov
data16
jne
cmpsl
js
in
mov
adc
inc
cmp
mov
insl
pop
pop
in
adc
or
dec
fwait
es
js
add
jmp
mov
jle
test
dec
push
xchg
pop
pusha
cmovs
scas
fwait
adc
add
outsl
shrb
fcomps
fcmovnb
mov
jecxz
insl
add
cmpsl
xchg
push
outsl
xor
xchg
es
ljmp
pop
push
fisttps
repz
fldcw
push
mov
xchg
xchg
push
lcall
imul
or
mov
add
cmp
mov
mov
mov
test
loop
inc
in
or
in
ret
outsl
dec
sub
dec
add
divl
es
pop
add
fsub
dec
insb
mov
mov
inc
inc
mov
add
or
push
mov
push
lea
jae
stos
mov
or
xchg
mov
insl
lods
out
test
jp
dec
jl
inc
aaa
mov
jnp
inc
fistpll
xchg
push
test
add
lods
fwait
adc
xchg
sahf
mov
imul
ret
leave
add
adc
repz
mov
stc
fwait
out
pop
lds
add
imull
sahf
push
aaa
movsb
mov
pop
orps
dec
mov
pop
ja
sbb
inc
js
cs
jo
jnp
cs
out
gs
mov
fcompl
mov
test
sub
and
adc
dec
inc
loopne
pop
repz
imul
es
imul
jp
mov
xchg
dec
in
pop
add
cmp
icebp
xchg
pop
mov
mov
xchg
sbbl
aad
mov
xchg
add
and
arpl
xlat
testb
pop
push
ret
jp
mov
mov
icebp
push
stc
frstor
mov
cmp
les
add
ja
lds
inc
dec
mov
mov
pop
inc
push
and
push
add
adc
and
xchg
pusha
js
int3
stc
cmp
push
pop
mov
or
rol
mov
xor
test
inc
gs
mov
ret
icebp
inc
add
lods
in
sub
cmc
push
in
mov
loope
arpl
mov
shlb
loope
cmc
pop
cmp
push
sbb
add
lahf
les
outsl
pop
mov
inc
push
cmp
pop
insl
dec
ss
mov
or
fmul
mov
sub
sahf
fwait
xor
adc
pop
inc
sarb
loop
adc
push
std
jp
mov
push
dec
mov
addr16
es
mov
lock
out
ret
stos
push
jo
inc
mov
sbbb
dec
rclb
fstpt
or
or
mov
dec
stos
add
gs
add
lds
mov
mov
jo
inc
out
lret
push
mov
out
hlt
cmp
loope
push
pop
or
pop
les
jmp
jnp
aam
push
cltd
mov
pusha
pop
test
sbb
les
lret
dec
inc
sub
adc
adc
xor
lret
mov
adc
mov
lcall
out
or
mov
out
add
and
mov
aaa
add
and
shrb
push
dec
xchg
and
scas
push
mov
push
xchg
gs
les
cmp
xlat
popa
sub
mov
mov
leave
pop
scas
fs
testl
hlt
stos
xchg
xorb
cmpsl
jne
in
es
push
not
out
pop
sub
push
lock
cltd
cmp
or
mov
les
sub
ljmp
cmp
stos
inc
dec
or
lret
test
jne
stos
sub
cmpsl
xchg
pop
shr
leave
das
mov
cmp
inc
sbb
es
iret
jo
inc
mov
test
into
rcrb
mov
sahf
mov
push
or
adc
jg
dec
jne
cmpsl
in
rcll
call
lods
ss
mov
mov
cmp
push
inc
out
jmp
jle
rcrb
call
jb
scas
mov
std
jb
cs
out
fdecstp
xlat
or
icebp
dec
test
mov
loopne
lret
mov
mov
push
and
and
imul
gs
icebp
ficoms
cmpsl
lret
sbb
jge
cwtd
adc
pop
scas
rol
call
ja
mov
adc
popa
xor
call
int
test
add
test
sbb
push
fs
lahf
add
insl
sbb
sub
mov
cs
sbb
out
push
andl
out
fadd
sub
mov
cmp
xor
cmpb
add
dec
fs
inc
das
call
xor
and
enter
enter
cld
inc
xor
inc
addr16
sbb
or
pop
call
pop
mov
or
jno
sub
lods
xchg
add
or
sub
shl
or
out
pop
dec
and
fnstsw
xlat
cmpsb
jno
notl
dec
and
aas
cwtl
inc
adc
imul
jne
in
mov
sti
stc
sbb
loope
cltd
and
imul
movl
sub
push
fisubrs
out
mov
xor
push
mov
in
inc
xor
rorl
lret
int
jg
dec
stc
push
out
movsb
mov
sti
dec
push
iret
in
aas
dec
jl
adc
mov
std
sbbl
ja
xchg
repnz
test
neg
out
mov
aas
popa
dec
cmp
in
xchg
jp
dec
jbe
bound
rclb
lahf
sbb
stos
adc
mov
sbb
scas
mov
repz
test
jmp
popf
sahf
popf
add
popf
adc
test
pusha
add
movsb
jge
inc
fdiv
sub
mov
mov
xchg
mov
les
scas
sti
push
push
sar
incl
test
or
and
cmp
rcll
xchg
xchg
dec
lods
lret
mov
push
in
xchg
jno
push
push
add
adcb
cld
repnz
and
stos
xchg
xor
stc
shrl
sbb
aaa
jae
adc
rclb
imul
add
sahf
popa
clc
inc
jge
dec
jbe
sbb
loopne
sub
pop
mov
je
rorb
pop
mov
cs
sbb
add
nop
mov
inc
push
inc
cmpb
push
dec
rorb
and
fldt
ret
enter
jmp
add
out
xlat
roll
sbb
js
lea
std
adc
popf
or
mov
arpl
divb
and
sahf
jb
call
mov
push
movsl
iret
scas
and
inc
mov
sarl
push
jae
cmp
aam
out
jecxz
mov
in
push
mov
dec
fcoml
popa
sub
stos
xor
decl
mov
push
mov
mov
adc
sbb
je
jne
data16
shlb
fbstp
or
daa
fidivrs
jg
sbb
shrl
push
adc
stos
movsb
jecxz
and
and
les
lds
movsl
stos
ret
lods
jge
mov
inc
inc
lods
xchg
dec
pop
lahf
es
pop
pop
pop
mov
dec
push
push
add
xchg
jno
xchg
pop
lcall
clc
fcmovne
stc
loop
push
fcomip
cmc
les
out
out
stc
cmp
lret
mov
arpl
mov
mov
insl
pop
lods
loop
cmp
idivb
sbb
ja
fldt
mov
sub
pop
mov
ss
mov
mov
pop
xchg
push
fistps
bound
pop
aam
push
mov
mov
cmp
sbb
xchg
cmp
adc
lock
pop
jnp
stos
mov
sti
xchg
mov
out
jecxz
sbb
push
mov
les
aas
or
aad
addl
movsl
mov
sbb
popf
xchg
fisttps
cld
xchg
shl
ja
push
jle
aaa
lods
scas
ret
lret
ss
jp
cli
dec
fiadds
andl
sbb
mov
jge
lods
jno
push
mov
ffreep
das
imul
inc
push
or
mov
xor
dec
lea
lcall
or
lret
ffreep
hlt
push
add
fistps
mov
add
sbb
sub
jo
out
jo
cs
sbb
dec
out
mov
xchg
orl
insl
pop
pop
fcoml
pop
movl
push
sahf
mov
bound
cli
mov
stos
mov
in
pop
jns
imul
adc
add
mov
repz
dec
in
xchg
mov
or
jns
fsts
inc
test
cmp
faddl
mov
dec
pop
jecxz
dec
outsl
cmpsb
adc
jns
popa
sbb
jbe
cmp
sub
push
imul
ljmp
push
pop
fldenv
sub
or
out
jns
mov
xchg
add
lea
les
and
cmp
cmp
pop
inc
xor
pop
and
lods
ja
shll
bound
xor
bound
pop
and
cltd
and
push
rorl
scas
sub
push
imul
fadds
sahf
mov
cmpsl
xor
pop
fistl
mov
adcb
les
imul
out
shrb
sbb
mov
push
lods
aam
test
xchg
push
std
cltd
push
in
xchg
sarb
ja
mov
cmc
jns
and
icebp
jmp
js
jbe
outsl
andl
add
mov
cmc
test
or
xchg
adc
pop
xorb
dec
in
push
xchg
data16
xchg
fbld
rclb
mull
adc
insb
les
lcall
sbb
stos
jne
or
cmpsl
mov
not
rcll
inc
fsub
adc
scas
fistpll
movsb
pop
mov
insl
cmp
jle
cmpsl
lcall
xchg
hlt
jmp
test
sub
dec
ss
lcall
and
roll
dec
int3
inc
push
and
shlb
cmp
or
mul
out
leave
out
jp
add
xchg
mov
sub
inc
jp
jge
dec
movsl
inc
sub
mov
cmp
mov
sahf
cli
lcall
dec
data16
shlb
dec
or
cmpsb
push
test
xadd
out
mov
loopne
enter
push
mov
jle
mov
adc
or
pop
inc
data16
mov
fbld
push
jb
iret
dec
je
mov
cmp
cmp
mov
cmp
xchg
scas
mov
sbb
jno
push
aaa
cmp
out
xchg
outsl
sub
test
icebp
mov
fistpl
arpl
inc
gs
adc
and
in
jne
fwait
lret
or
mov
sahf
loope
sbbl
pop
mov
adc
cmp
fmuls
les
jae
sbb
xchg
mov
divb
ret
mov
inc
jl
jbe
xchg
cmc
adc
js
lods
inc
cmp
into
loop
mov
rcr
xchg
mov
sub
cmp
adc
pop
and
rcrb
mov
jne
jne
push
mov
jns
jne
xor
cmp
sbb
fincstp
mov
xor
mov
fldenv
push
mov
dec
ficoml
testb
fdivrs
mov
adcb
and
add
adc
fisttpl
out
adc
xchg
xor
xlat
inc
inc
les
add
cs
xchg
mov
mov
inc
inc
shrb
jg
sbb
inc
jns
loop
fstpt
les
cmp
dec
jge
mov
add
or
push
xchg
adc
or
sarb
mov
mov
ffreep
arpl
xchg
pop
or
es
jle
pop
and
mov
into
jecxz
push
idivl
cmpb
xor
mov
into
jecxz
mov
cld
jge
xchg
imul
mov
test
mov
arpl
mov
or
jge
mov
push
popa
pop
scas
jns
inc
call
shrb
ja
pop
pop
jno
inc
enter
shlb
orb
mov
lret
and
dec
loope
pop
push
jmp
jg
sub
addr16
add
ljmp
scas
mov
sahf
sti
fsubs
in
gs
mov
or
sarb
add
and
mov
dec
dec
ret
mov
cmp
cmpb
push
je
push
imul
loop
mov
stos
jb
or
xchg
notl
and
pop
mov
iret
jecxz
dec
add
pop
das
adc
push
mov
pop
testl
xor
mov
int
out
stos
jo
data16
xchg
jo
push
ljmp
jp
push
dec
out
xchg
pusha
xchg
sub
jns
mov
dec
fs
insl
and
lds
xor
fcmovnb
loope
bound
orb
xchg
sub
jmp
adc
daa
mov
sbb
dec
fwait
lret
push
cmp
add
mov
movsl
push
dec
mov
in
adc
mov
and
jo
into
push
adc
cmp
jno
mov
out
js
add
push
jecxz
rcll
enter
adc
lcall
test
push
mov
rclb
xlat
push
push
jmp
iret
jns
mov
out
in
xchg
dec
inc
rorb
jmp
notb
ljmp
test
sub
adc
rorb
mov
inc
stc
into
inc
shll
xchg
jnp
mov
or
xchg
sub
cmp
cmpl
popl
pop
jmp
pushl
inc
xor
push
gs
sbb
or
push
cmp
lea
add
movsl
mov
push
gs
xchg
mov
mov
ret
xchg
ror
movsb
xchg
jae
jge
mov
mov
shrb
stc
mov
jo
rol
ret
sbb
xchg
sbbl
scas
js
inc
rorl
pop
stos
clc
or
cmpsb
adc
inc
adcl
cmpsb
xchg
pop
outsl
add
mov
fidivrl
jp
sbb
lahf
jae
xchg
sub
add
lds
je
xor
adc
hlt
or
adc
daa
out
xchg
es
nop
xor
ss
pop
aam
rorb
cmp
incl
and
mov
in
loope
cmpsl
push
cmpb
lds
int3
and
loope
jmp
lods
dec
enter
pop
xor
dec
cmp
mov
push
or
clc
and
sub
js
push
dec
in
rolb
push
mov
cmp
inc
ljmp
cld
xor
or
out
sti
daa
dec
pop
or
sub
popa
xchg
mov
fimuls
dec
or
jne
aas
mov
loopne
sub
fmuls
pop
inc
mov
dec
xor
jae
into
cmp
dec
repnz
mov
inc
js
or
inc
push
in
movsl
adc
cltd
sbb
sub
add
mov
jae
inc
movsl
add
jecxz
add
inc
mov
jno
roll
inc
mov
test
sub
mov
adc
movsb
push
scas
push
push
dec
and
adc
hlt
clc
iret
fs
add
jecxz
inc
insl
mov
dec
push
les
adc
ret
lea
imul
cmp
jb
lods
pop
hlt
into
push
push
xchg
into
mov
xorb
cmpsb
rorb
rolb
or
shlb
scas
sub
in
xor
mov
push
sarb
and
stc
imul
popa
jae
or
aas
sub
sbb
lret
and
sbb
nop
in
mov
mov
sbb
or
iret
les
xor
lds
pop
in
fbstp
testl
sbb
dec
out
inc
mov
xlat
xor
pop
xchg
lret
bound
mov
sahf
cmp
mov
mov
xchg
ret
mov
mov
mov
jle
xor
movsl
aad
inc
call
std
push
jno
pusha
gs
in
sub
cli
jg
push
insl
lods
mov
movsb
test
lahf
xchg
xchg
fst
imul
lods
popa
inc
mov
jmp
in
mov
mov
mov
mov
add
add
mov
addl
fwait
addr16
pop
lock
roll
iret
test
push
or
xor
pop
out
and
dec
aas
and
jae
inc
lds
stos
call
or
adc
enter
iret
je
mov
sub
out
gs
lret
mov
xchg
lds
les
xchg
pop
sub
rclb
sub
jg
fsubrs
lret
shr
cmp
add
and
mov
andb
cmp
outsl
nop
inc
pop
mov
sti
dec
push
or
rcr
mov
dec
out
mov
lock
test
sub
fsts
sti
and
mov
into
cmc
cmp
cli
xor
subb
sbb
xor
cmp
loope
jno
adc
arpl
or
pop
xchg
js
repz
jo
lea
dec
jecxz
and
into
ficoml
sub
or
repnz
pusha
pop
scas
cmpl
leave
xchg
sub
ja
sbb
jb
add
fbstp
pop
aam
and
lea
sub
sbb
test
push
pop
xor
inc
js
dec
mov
fs
dec
imul
cltd
pop
dec
sbb
insl
fadd
sbb
add
dec
mov
jmp
push
push
pusha
push
ja
mov
enter
popf
mov
inc
jecxz
pop
ss
jge
xchg
stos
and
fscale
or
jbe
adc
push
scas
mov
popl
add
mov
lret
add
jae
stc
mov
rcrb
repnz
fs
scas
in
pop
stos
rorl
ljmp
fistps
dec
cmp
inc
gs
or
sahf
inc
xor
xor
nop
out
js
push
cmc
xor
mov
scas
sti
sub
push
cmc
inc
testl
out
inc
sahf
add
or
xor
pop
and
stos
sarb
pop
adc
sbb
and
push
aad
push
mov
jecxz
jne,pt
adc
cwtl
push
out
mov
loope
mov
rol
pop
lods
xchg
mov
sub
les
shrl
sahf
cmp
ret
inc
imul
js
xchg
jne
dec
lcall
mov
popf
in
popf
jge
sub
mov
pop
daa
inc
hlt
hlt
addb
mov
push
adc
gs
push
mov
jne
and
mov
shlb
inc
in
hlt
fcmovnb
rolb
jecxz
out
mov
add
adc
orw
mov
xbegin
adc
cmc
andb
arpl
ret
mov
inc
xchg
pop
dec
jecxz
pusha
aas
mov
jle
mov
mov
add
xor
pop
jecxz
mov
xor
xor
cmc
xchg
gs
mov
std
cmpb
scas
loop
pop
adc
xchg
mov
and
loop
popf
xchg
cltd
xchg
cmp
icebp
popl
jae
mov
xor
aaa
add
aas
imul
mov
xchg
popf
inc
gs
add
cmp
inc
aam
les
out
sbbl
cmp
in
pop
mov
mov
out
out
les
cltd
cmpl
es
ds
adc
movsl
pop
frstor
loopne
addl
stos
addr16
std
cmpsb
std
ret
ljmp
mov
addl
sub
add
ljmp
aas
test
sbbb
outsl
data16
xchg
pop
jae
addb
loope
out
addl
jne
sbb
movl
add
adc
into
push
and
xchg
shl
fdivp
pop
clc
xor
mov
adc
pop
dec
mov
pop
mov
jle
addr16
mov
mov
ret
push
adc
iret
mov
or
cmp
push
orl
xchg
jno
mov
pop
aam
inc
lods
adc
in
test
mov
and
es
and
adc
inc
pop
push
jmp
add
out
mov
popa
dec
adc
sti
pop
stc
jno
mov
mov
gs
out
mov
icebp
fwait
aam
or
or
imul
lahf
movsl
mov
xor
stos
pop
xchg
dec
jle
icebp
movsl
jmp
or
pop
mov
sbb
out
and
inc
mov
xchg
inc
iret
insb
sbb
xor
inc
sbb
jecxz
mov
sbb
mov
stos
lods
sbb
dec
push
rclb
dec
loopne
mov
jp
cmp
addl
xor
sbb
inc
scas
test
fbstp
mov
repz
inc
loopne
fsubs
cmp
or
bound
mov
mov
inc
nop
stos
xchg
xor
and
stos
enter
xchg
divl
jecxz
pop
sarb
mov
or
pop
jl
xchg
sub
rorl
shl
lcall
dec
mov
out
mov
aas
jo
push
loope
pop
lds
lea
lock
jae
icebp
xchg
jae
int
cmp
mov
lods
add
test
pop
lods
mov
movsl
movsb
dec
ja
dec
mov
cmpb
fstp
scas
addr16
adc
jne
xor
ljmp
es
int
xorb
jno
sbb
add
mov
cmp
outsl
inc
adc
sarb
and
addb
roll
gs
cmp
xchg
test
inc
mov
jp
mov
jnp
lcall
mov
xchg
into
xchg
cmp
les
movsl
pop
jae
lods
cmp
sub
add
mov
negb
inc
jbe
push
mov
dec
push
and
dec
icebp
mov
jne
in
cli
or
mov
mov
or
adc
push
push
cmpsb
xchg
inc
mov
jmp
mov
out
shrb
insb
leave
push
and
cmpsl
pop
out
addr16
int
mov
movsb
lahf
sbb
cltd
adc
add
cmpsl
jmp
push
loope
dec
jmp
jbe
out
lock
js
es
inc
cs
add
xchg
push
mov
out
sbb
add
inc
inc
jecxz
xor
loop
addl
test
stc
inc
xchg
pop
movsb
push
fld
fcomps
ss
inc
xchg
orl
loope
cltd
testl
daa
jg
sbb
add
xchg
pusha
andl
ljmp
loope
jg
and
ret
jmp
addl
pop
mov
mov
pop
repnz
outsl
test
mov
xor
sbb
inc
divb
loop
add
push
int
test
out
inc
mov
lds
inc
jp
dec
lds
fs
mov
cmp
out
xchg
arpl
es
inc
cmpsl
mov
mov
sub
pop
and
mov
and
and
out
lds
daa
scas
addb
jecxz
pop
loopne
xchg
xchg
lds
in
fiadds
loope
fiadds
out
pop
popa
add
pop
movsl
daa
repz
and
andl
adcb
mov
out
ds
cmpl
in
out
jg
add
out
pop
add
xchg
or
mov
xchg
addb
mov
pop
arpl
daa
std
popa
mov
roll
fildl
out
loop
sub
add
push
pop
pop
jne
jge
mov
pop
and
addl
jecxz
es
xchg
mov
cmc
xchg
xchg
xor
scas
cmp
sahf
and
jg
inc
jmp
mov
gs
mov
popa
aaa
lods
jnp
out
fimull
jecxz
and
mov
or
sarb
cmp
xor
outsb
cmp
push
fisubs
and
mov
xor
lock
dec
js
ret
stc
jb
rcrb
out
xchg
pop
mov
mov
push
mov
lods
push
lock
into
js
mov
mov
test
aam
dec
jmp
mov
sbb
fdivp
mov
scas
mov
sbb
ja
mov
fcompl
jns
shr
cwtl
jo
movsb
ss
xor
pop
imul
sahf
pop
test
dec
push
movsl
adc
sbb
adc
mov
ret
mov
fimuls
or
icebp
pop
mov
iret
or
sti
das
jecxz
stc
add
sub
rcrb
fnstenv
push
xchg
out
or
out
mov
xlat
add
shlb
inc
shl
test
idivb
mov
int3
mov
mov
mov
insb
cmp
lods
gs
pop
cmc
lahf
popa
sbbl
daa
dec
mov
mov
push
mov
sbb
inc
mov
loope
les
dec
loope
ja
lret
jge
insl
mov
add
jo
iret
add
mov
jno
bound
addb
fidivrs
inc
jnp
sti
call
sub
add
popf
sarb
xlat
jb
cmc
lea
xchg
mov
mov
inc
or
jns
outsl
inc
jmp
inc
mov
dec
imul
mov
stos
sbbl
mov
mov
loop
lock
mov
mov
jno
add
mov
icebp
fwait
xor
xor
pop
inc
jl
xchg
adc
mov
inc
lds
dec
xchg
and
or
dec
loopne
dec
adc
jp
out
imul
pop
cmp
mov
sahf
inc
dec
xchg
addr16
into
jecxz
xchg
adc
pop
out
cmp
cld
out
clc
shl
dec
adc
sbb
xor
pusha
cmc
sub
loope
xchg
inc
addb
xchg
xchg
xchg
jo
cmp
dec
shlb
bound
or
add
mov
or
mov
inc
daa
repnz
fiadds
add
or
hlt
or
les
push
call
or
and
inc
mov
popf
ret
pop
loope
int
jo
adc
pop
sbb
push
ljmp
insb
pop
push
fwait
mov
jb
jcxz
fdivrs
lret
jle
not
cld
push
je
xlat
sub
imul
subb
mov
add
mov
and
inc
mov
sbb
dec
add
test
xchg
lods
inc
adcb
mov
jns
mov
in
cmovo
push
xchg
std
add
arpl
lret
sbb
push
hlt
inc
dec
xchg
clc
out
rclb
out
mov
push
xchg
loop
sbb
mov
or
in
popf
push
fadds
pop
adc
and
je
or
cmp
aad
sahf
jecxz
das
ja
out
outsl
repnz
loope
test
pop
mov
sbb
fnstenv
dec
mov
jle
cmp
adc
aas
ret
cwtl
mov
pop
xor
loope
adc
jp
daa
push
pop
mov
pop
pop
jmp
jle
xchg
addr16
jae
cmp
ds
pop
and
jno
adc
testl
in
cmp
sub
lock
inc
mov
es
repnz
fdivs
les
in
fiadds
iret
inc
out
xor
sti
and
push
movsl
jnp
xor
jle
lods
or
hlt
cmp
xchg
fiadds
lcall
repz
and
or
push
pop
and
outsl
enter
inc
mov
pop
pop
inc
push
lret
push
jg
imul
mov
dec
lahf
mov
pop
call
jno
idiv
inc
loopne
pop
add
pop
sub
fdivrp
mov
sbb
add
sub
les
pop
mov
push
insl
ficomps
lds
adc
and
rcrb
out
xchg
jp
mov
fidivrl
icebp
xchg
mov
jno
xchg
data16
cmp
ss
pop
inc
inc
addr16
xchg
std
push
nop
iret
imul
std
mov
jnp
xchg
in
ss
sar
jae
call
mov
leave
xlat
out
add
xchg
imul
test
in
and
in
push
cld
fwait
push
mulb
add
stc
js
inc
dec
jns
repnz
cmp
je
xorb
test
call
add
mov
push
dec
iret
jne
test
decl
pop
and
push
movl
push
cltd
dec
icebp
mov
out
repz
mov
aaa
push
mov
cmc
cmp
mov
pop
and
xchg
icebp
sahf
ss
pop
pop
xchg
fiadds
jo
and
and
mov
ffreep
inc
mov
pop
sbb
and
scas
cmp
mov
jg
or
adc
pop
dec
mov
push
jns
mov
cmpsb
popa
sub
pop
imull
dec
shl
pop
sbb
cli
pop
sbb
mov
jae
cmp
lds
xor
push
ficompl
adcb
cmp
dec
push
cmp
fimuls
in
sti
adc
sahf
test
imul
sahf
jo
std
adc
adc
adc
jae
in
inc
fwait
cmp
xchg
cmpl
cwtl
mov
xchg
ja
mov
cli
dec
mov
fldenv
push
pop
mov
pop
fistpl
insl
inc
push
ja
and
ror
dec
fcoml
les
jl
ret
sbb
mov
add
or
xor
out
adc
mov
sbb
addr16
mov
or
xchg
out
outsl
lods
and
xor
mov
icebp
adc
sar
sbb
xlat
imul
add
out
shr
dec
jbe
or
push
fbld
popa
and
mov
outsl
lods
mov
gs
push
inc
sti
mov
mov
mov
neg
push
addr16
inc
out
adc
add
adc
and
cltd
jecxz
push
inc
or
shll
pop
sahf
xchg
call
jg
insl
in
repnz
mov
pop
ljmp
rorb
mov
leave
jbe
cld
daa
adc
inc
pop
push
imull
cli
and
xor
pop
lahf
xorl
mov
insb
mov
pop
inc
loopne
adc
mov
fisubrs
xchg
sbb
or
mov
jle
lcall
xor
and
imul
dec
mov
cmp
lcall
jns
fisubrs
rcrb
xor
insl
ss
mov
lods
sbb
ljmp
push
sar
sbb
out
xchg
cmpsl
mov
cmc
jge
sbb
mov
in
push
scas
jne
scas
fidivrl
fistl
mov
imul
mov
and
mov
mov
push
mov
push
lea
cmpsb
pop
movb
scas
cmp
mov
push
and
aad
xlat
push
sbb
push
jbe
mov
scas
sbb
mov
lds
clc
dec
hlt
push
or
or
mov
jg
cld
aas
jmp
push
jnp
rclb
jae
or
push
test
sub
subl
mov
loop
or
pop
push
daa
or
dec
add
movsl
mov
xor
imul
mov
and
jmp
call
mov
shlb
sahf
fcoml
jnp
inc
cltd
mov
addb
iret
add
sbb
add
gs
fucom
mov
mov
push
cmc
mov
out
jnp
xor
lds
mov
repz
nop
pop
mov
mov
dec
xor
les
cmc
jne
addr16
loope
jbe
xor
iret
jbe
fbld
jno
ret
les
jo
xchg
test
pop
xor
jmp
aam
jno
jbe
hlt
in
das
jae
xchg
adc
sub
sahf
cwtl
sub
pop
sub
fiaddl
lea
jns
shr
sub
inc
pop
aas
mov
mov
fmuls
xchg
dec
js
sti
stos
rorb
mov
mov
pusha
sti
in
pop
xlat
jae
mov
push
mov
repnz
xor
and
push
xchg
pop
mov
inc
cwtl
pop
adc
scas
inc
bound
adc
mov
mov
lahf
adcl
loopne
xchg
hlt
icebp
mov
push
adc
or
ds
dec
push
pop
in
into
ficoml
leave
sub
stos
nop
bound
enter
inc
push
ret
xchg
inc
test
test
mov
jne
movb
dec
mov
pop
push
mov
popa
aas
leave
hlt
sbb
dec
nop
pop
inc
mov
imul
lret
test
mov
pop
pusha
adc
xor
pop
outsl
imul
xor
ficomps
sub
add
imul
lods
ja
fdivrs
pop
notb
stc
dec
xor
pop
in
add
jle
rol
or
jns
daa
add
add
cmp
and
xchg
les
ja
pop
pop
pop
bound
lea
inc
jne
cmp
cmpsl
movsl
mov
cli
sbb
ja
pop
repnz
into
sub
push
icebp
loopne
mov
pop
mov
sub
leave
pop
outsl
ret
out
shl
cs
cmpsl
add
clc
mov
inc
cmc
scas
shrb
push
mov
hlt
add
aas
repnz
push
les
mov
lods
lret
inc
mov
or
mov
loop
or
push
fldenv
lret
loop
push
adc
aad
mov
ds
inc
sub
push
loope
jmp
and
sarl
pop
sub
ret
dec
pusha
repnz
cld
push
incl
and
sbb
mov
jl
and
adcl
xor
sbb
mov
add
ror
loop
dec
add
leave
rclb
push
outsl
and
pop
leave
mov
and
push
divl
push
mov
jns
sarb
sub
pop
sti
pusha
cmp
mov
inc
inc
xchg
js
push
leave
xchg
jmp
pusha
hlt
movsl
dec
push
dec
add
add
and
rolb
inc
fsubp
xchg
push
mov
or
lret
sub
repz
pop
pop
or
sub
mov
jmp
dec
push
fists
jae
test
mov
and
subb
mov
inc
insl
loop
jno
pop
cmp
mov
mov
cmc
xchg
xor
xor
fildll
rclb
sbb
aad
mov
shrb
cltd
pop
pop
mov
push
push
fnstenv
push
loopne
add
lods
mov
scas
aam
cmp
mov
sub
iret
sarb
xchg
clc
xchg
lret
inc
mov
cmp
adc
mov
dec
les
ja
bswap
xor
inc
mov
sar
sbb
sub
movb
fwait
scas
aaa
push
sbb
jg
pop
or
inc
or
or
fdivrp
pop
add
jnp
cli
sbb
outsl
or
sti
leave
mov
dec
popf
mov
fidivrs
sub
repz
sahf
fisttps
pop
push
or
inc
scas
sahf
enter
jns
fadds
flds
cmp
push
rcrl
ficomps
push
adcb
pusha
repz
loope
lret
adcl
xorl
out
add
outsb
xchg
inc
test
lcall
cmp
testb
pop
jae
mov
add
iret
xor
inc
loop
test
xchg
sahf
int3
cmpsb
loopne
inc
inc
adc
sbb
push
dec
jb
lahf
mov
movsl
jge
cmp
push
inc
insl
or
popf
or
mov
dec
rorb
jmp
out
jmp
and
jecxz
fnstcw
movsb
xchg
aad
mov
pop
and
and
jl
push
je
jns
mov
iret
cs
stos
push
xchg
push
loopne
repz
adc
cmp
dec
push
hlt
testl
sbb
dec
push
push
icebp
xor
out
fildll
mull
data16
xchg
rcrl
cmpsl
fbstp
jno
sub
jle
mov
jmp
jns
loop
fsubrl
add
inc
add
call
or
std
dec
mov
repz
jo
xor
mov
and
fsubl
cmp
out
shrb
cmpsl
scas
cmpsl
lock
mov
sahf
inc
cmp
jp
enter
xorl
es
add
stos
inc
pop
or
adc
xchg
push
add
sub
js
xchg
cld
iret
inc
das
inc
adc
cmpsb
push
inc
ja
jecxz
ja
xlat
xchg
fwait
add
mov
jle
lea
dec
stos
hlt
add
xlat
add
push
adc
add
push
js
out
int3
pop
lcall
adc
xor
xchg
data16
push
push
pop
cmpsb
cmp
cltd
add
pushf
gs
subb
inc
loope
shlb
rcrb
xchg
sub
adc
mov
pop
loope
mov
imul
sbb
outsl
decb
mov
repz
pop
inc
jnp
mov
xor
push
es
in
sbb
pop
aaa
cmp
fwait
push
jae
jmp
cmp
push
push
sahf
push
lret
dec
jg
push
sbb
fidivl
fidivl
cmpsb
xor
cmp
mov
lock
ficoms
xlat
shlb
and
mov
test
dec
cmpsb
mov
test
dec
pusha
scas
call
push
in
add
incl
sub
testl
sub
in
daa
jle
mov
dec
rorb
inc
mov
inc
inc
xchg
test
inc
sub
addr16
pop
enter
add
add
in
cmp
mov
and
loop
lods
outsl
out
rcll
mov
or
pop
pop
jl
in
push
and
in
in
xor
jno
pop
xor
xor
sbb
fistpll
sub
mov
sbb
das
loope
xchg
incl
fs
mov
popa
dec
clc
inc
xor
jns
pushl
fwait
hlt
fs
inc
vprotb
pop
mov
pop
jo
fistps
cmp
cltd
mov
mov
mov
or
and
stc
dec
push
int3
shr
jb
bnd
cmp
lcall
push
sub
into
and
jmp
ror
shll
push
or
push
in
sub
mov
xor
data16
arpl
decb
aam
xchg
notl
push
fldenv
fisttpl
out
mov
call
nop
orl
cmp
pop
mov
mov
adc
loopne
jmp
add
int
or
sbb
cs
push
fwait
push
notl
and
inc
push
cli
sub
push
mov
and
sbb
dec
sub
jge
fldcw
pop
lcall
add
cmp
pop
sbb
aas
sub
cli
shlb
out
sub
mov
ja
mov
les
cmpb
xchg
cmc
mov
fisubs
into
cmp
std
cmc
pop
push
pusha
test
and
imul
lods
subl
mov
mov
jae
xor
sub
xchg
out
xchg
mov
shl
dec
pop
mov
lock
xchg
xor
add
rolb
cmpsl
pop
xorb
pusha
push
jmp
xor
and
push
jae
fs
sbb
js
mov
ret
lret
loopne
into
xchg
or
adc
in
stos
loopne
inc
mov
add
stc
fcmovnbe
push
jmp
mov
ret
jmp
jno
cmpsb
mov
pop
xor
adc
mov
movsb
iret
adc
inc
cmpsl
mov
mov
or
mov
ret
lret
test
jmp
mov
cwtl
test
aaa
shrb
shlb
mov
push
les
sub
xor
jnp
jno
xchg
addl
fwait
mull
adc
lea
inc
scas
imul
inc
jb
and
sbb
jmp
push
add
cltd
mov
lods
orl
sti
addr16
arpl
inc
adc
fistl
lea
push
ds
xchg
js
xchg
int
mov
jne
lock
jge
popa
pop
out
pop
and
xchg
adc
jnp
dec
insl
inc
in
rorl
or
push
inc
add
fistpl
repz
pop
fldenv
loope
xchg
cmp
rclb
dec
addr16
add
lock
add
jno
cmp
cmp
jbe
nop
mov
sub
scas
sti
lock
adc
std
sub
loope
imul
sbb
gs
or
sbb
pushl
mov
ret
loop
lahf
movsl
daa
sub
mov
adc
into
cmp
xchg
cmpsl
sub
stc
mov
cmpsb
cmp
push
pop
mov
ljmp
jmp
nop
scas
adc
pop
mov
add
cli
pop
xchg
cmp
cwtl
cmp
into
cld
sub
arpl
xchg
cmp
pop
aas
xor
ss
xor
inc
call
orl
mov
inc
jns
xchg
jo
pop
or
or
sbbb
push
sbb
jae
jmp
pop
insl
idiv
icebp
mov
mov
push
add
inc
sbb
out
jge
pop
test
inc
cmp
sbb
or
sub
add
sti
jle
hlt
pop
and
repz
or
ror
loop
cmp
ja
dec
mov
pop
add
je
gs
arpl
dec
adc
aad
jmp
jg
lods
xchg
fisubs
sahf
sub
lret
cmp
jne
shl
and
jmp
cli
mov
hlt
jge
inc
inc
dec
out
pop
xlat
loope
jle
push
pop
cmp
out
mov
out
add
xlat
or
testl
push
inc
pop
cmpsb
ret
sahf
icebp
mov
stos
in
loopne
mull
xchg
out
sbb
cmpsl
shll
cli
in
mov
xchg
mov
addr16
jecxz
mov
scas
cs
lods
cmpsl
mov
pop
movl
hlt
push
cmp
adc
pop
xchg
loop
into
mov
adc
lret
ja
pop
arpl
mov
add
inc
push
xchg
push
gs
in
mov
jb
lahf
out
mov
pusha
out
xchg
repz
ret
out
cltd
inc
aas
cmp
add
xchg
movsl
andl
push
in
fs
mov
aad
xchg
inc
std
pextrw
es
cmp
and
xchg
cmp
bnd
push
add
mov
cmpsl
loop
loop
orl
mov
push
inc
mov
arpl
ret
andl
fs
cmc
mov
ret
data16
gs
shlb
pop
xchg
arpl
popa
shll
aas
mov
mov
lds
jecxz
test
repnz
mov
insl
cmp
fbld
faddl
arpl
mov
in
jecxz
push
inc
mov
jno
sbbb
ja
in
aaa
and
jbe
ret
and
es
mov
movl
add
ja
movl
out
out
shll
adc
cmp
movsb
imul
jnp
sahf
orb
mov
rcl
outsl
push
adcl
dec
or
inc
xchg
mov
stc
fs
incl
mov
cli
sbb
fwait
out
out
and
pushf
rcr
jl
sbb
cltd
pop
cmp
in
pop
stc
xor
and
xor
addr16
pop
inc
je
andl
fdivrs
mov
jae
pop
xor
mov
xchg
xchg
adc
loope
sbb
dec
xchg
cli
cmc
pop
pop
or
mov
andl
adc
or
mov
mov
push
leave
jl
test
add
in
xlat
into
mov
xchg
add
aad
stos
in
inc
scas
mov
xor
mov
in
sbb
ret
push
jae
les
mov
cmp
pop
cmp
pop
xor
inc
jb
xor
pop
sahf
rcl
jmp
into
and
bnd
ss
ja
push
inc
add
kandnb
movsb
inc
iret
push
mov
add
sahf
jno
xor
and
or
xor
xor
mov
push
ljmp
gs
mov
mov
les
push
mov
mov
rcrl
mov
jecxz
lea
stos
adc
sbb
mov
push
clc
lcall
lds
filds
mov
push
sub
jnp
divl
addl
inc
jb
sbb
fistpll
cmpsb
jo
sbb
adc
lcall
add
rclb
dec
stos
loope
adc
mov
mov
xor
hlt
testl
jmp
jno
jmp
add
inc
push
fadds
out
xlat
stc
ja
out
xchg
or
loop
mov
subl
sti
rcll
xchg
adc
mov
andb
fiadds
test
or
xchg
mov
ret
push
mov
add
push
xchg
inc
pop
ficoml
mov
lahf
iret
xchg
andl
cmpl
lock
mulb
popa
and
out
xchg
xlat
mov
mov
mov
and
adc
out
mov
xchg
xchg
imul
clc
scas
or
sbb
repnz
fsubrl
mov
jl
imul
mov
sub
adc
push
jmp
add
push
cmp
adc
fdivrp
ffree
out
inc
mov
cmp
imul
cmp
je
sbb
push
dec
pop
out
inc
imul
adc
xchg
hlt
add
mov
arpl
imul
mov
xor
das
mov
inc
push
sub
fwait
push
popa
mov
mov
cmp
pop
or
add
fildl
nop
ja
test
mov
mov
icebp
pop
pushf
in
les
ss
sbb
jb
or
gs
loope
adcl
fistl
dec
pop
mov
lahf
inc
fwait
lcallw
jb
dec
xor
js
mov
and
aam
js
xlat
xchg
cwtl
cmp
xchg
fisttps
rcrb
inc
push
cmp
xor
adc
cmc
push
sbb
inc
mov
push
ljmp
fistpl
mov
rcrb
out
out
inc
shrb
int3
add
les
cwtl
xor
stc
mov
xorl
push
mov
mov
or
cmpsl
inc
sbbl
mov
xchg
mov
outsl
mov
mul
jp
ficoms
cld
std
add
scas
loope
adc
aad
sbb
adc
sbb
mov
cmp
pop
mov
out
push
cmp
mov
aas
cmc
jg
mov
cmp
jp
push
loop
lcall
loopne
lods
test
testl
fists
mov
inc
add
mov
xor
rclb
inc
add
movsl
jle
or
pop
fldl2t
xor
mov
cmc
mov
pusha
ljmp
dec
xchg
and
sbb
jg
jne
xchg
push
jge
jno
iret
lods
fnstsw
pop
jo
jecxz
adc
inc
jle
lcall
leave
test
xlat
adc
bound
lds
test
mov
adc
std
loopne
inc
aam
ja
insb
sub
or
sbb
inc
mov
mov
aaa
mov
test
and
sbb
out
jae
aam
mov
push
mov
xor
mov
or
ret
frstor
loop
jne
cmpsb
dec
pop
inc
call
leave
pop
rclb
sbb
addr16
rolb
and
dec
xlat
mov
xchg
adc
les
mov
test
mov
or
and
daa
stc
and
fdivl
xor
mov
in
and
data16
cmp
pop
push
pop
mov
pop
sbb
jmp
or
mov
ja
shr
mov
sub
fwait
xor
pop
add
es
out
dec
xchg
dec
sbb
jae
and
mov
les
xchg
ds
add
sub
jns
jnp
imul
adc
push
lret
cmc
ja
imul
jecxz
stos
in
insl
fbld
xlat
xchg
cmp
cmp
xor
mov
fldcw
push
into
addr16
or
std
aaa
cli
xor
cmp
inc
enter
dec
cmp
iret
xchg
push
lock
xchg
clc
jp
jecxz
ret
cmp
dec
sbb
loope
outsl
add
ja
in
or
pop
mov
cltd
sbb
or
fisubl
adc
stos
mov
jecxz
mov
insl
adc
mov
and
push
push
outsl
push
test
imul
mov
jge
jbe
xchg
or
out
adc
fdivs
sarl
jle
add
ss
mov
icebp
pop
repz
jecxz
push
jmp
aam
pop
notl
pop
ret
mov
inc
mov
testl
imul
xchg
lock
xchg
adc
ja
push
xchg
cmc
cli
adc
in
lahf
sbb
or
in
mov
jne
notl
orb
ror
inc
pop
sub
or
dec
push
lods
cmc
cli
sbb
repz
sbb
push
push
repnz
in
cmp
mov
jg
jb
pop
popf
arpl
fwait
cmpsb
sbb
ret
pop
mov
and
and
lahf
loope
push
or
les
mov
imulb
neg
pop
pusha
insl
loope
stos
push
aas
add
mov
or
sbb
jecxz
jg
test
stos
or
neg
sbb
pop
in
pop
cmp
push
scas
push
outsl
add
sub
push
cmp
lcall
xchg
ret
add
sti
stc
daa
pop
data16
fadds
jmp
iret
adc
and
jmp
push
inc
xchg
fidivs
push
adc
insb
and
push
rclb
mov
ficomps
sahf
call
lcall
lods
push
pop
xchg
xor
push
daa
inc
xchg
sti
mov
push
popf
push
sub
xchg
add
xor
add
icebp
pop
fwait
jne
add
adc
test
push
shrl
cltd
movl
or
mov
sbb
mov
jecxz
rclb
jmp
pop
leave
les
mov
dec
outsl
ja
ret
fisttpll
pusha
inc
fidivrs
fwait
aam
mov
iret
repz
in
jecxz
inc
push
pop
or
sbb
sbb
fiaddl
out
daa
mov
mov
inc
loope
loope
aam
lret
jo
ja
dec
dec
addr16
cli
xchg
push
push
leave
into
loope
sbb
jne
les
push
sbb
popf
jo
dec
pusha
or
cmpb
add
or
ror
mov
or
arpl
lods
pusha
aam
jae
jo
aaa
mov
xchg
adc
hlt
pop
inc
inc
adc
fdiv
add
cmp
and
xchg
inc
dec
inc
shl
fdivr
sub
incb
dec
out
mov
test
in
jo
lcall
and
rol
rorb
sbb
mov
cmp
xor
jne
into
jno
popa
mov
lahf
inc
mov
ljmp
jmp
and
jle
cmpsl
in
sub
inc
leave
sbb
inc
repz
dec
mov
adc
ja
mov
push
mov
subb
test
add
jle
sub
and
adc
push
fiadds
add
pop
jbe
das
mov
jmp
cmp
int3
fidivrl
dec
xorl
std
adc
fsub
jmp
inc
mov
scas
out
add
test
dec
lods
xchg
push
fsubp
xor
cmpsl
xchg
cli
mov
movsl
lcall
dec
sub
inc
shlb
mov
add
sahf
push
or
ret
jb
popa
movsb
push
adc
push
mov
push
fbstp
and
mulb
push
testl
sti
mov
xchg
mov
stos
out
addl
arpl
sti
cmp
fldenv
mov
pop
inc
xor
les
dec
adc
std
es
cmp
jae
sub
dec
mov
xor
cli
mov
or
mov
jns
std
mov
xchg
sbbl
push
into
loope
adc
mov
daa
clc
in
lock
mov
roll
in
pop
cmp
orb
scas
rcr
cmpsb
and
in
loopne
lds
pop
add
jecxz
jno
or
sti
stc
push
mov
add
pop
repnz
dec
rcl
xchg
inc
adc
add
shl
inc
out
cmp
popf
jge
fistpl
rolb
cmp
mov
inc
mov
sub
mov
inc
test
pop
jge
jmp
xchg
in
and
adc
push
sbb
pop
jns
push
mov
jg
push
in
add
cwtl
inc
mov
shrb
mov
mov
cmp
push
cmp
negl
scas
popa
js
xchg
and
fildll
push
nop
lock
dec
lods
out
sbb
fisttpll
mov
mov
loopne
dec
shl
jbe
movsl
dec
xor
insb
out
shrb
sub
pop
loopne
sbb
shlb
loope
rolb
nop
mov
shrb
or
mov
mov
dec
inc
rcrb
lea
mov
pop
fdivrp
sub
shl
push
lea
and
in
rorb
movsl
push
mov
mov
sti
jno
lret
clc
icebp
dec
mov
xchg
repnz
imul
je
xchg
and
push
inc
add
xchg
sbb
xchg
inc
test
jl
pcmpgtw
and
fwait
repnz
dec
mov
lods
mov
les
push
rcll
push
or
into
orb
or
jbe
jno
scas
icebp
lea
pusha
push
cld
cmp
scas
lods
repz
lods
loop
test
fldcw
or
nop
pop
xchg
fsubrp
shlb
ret
dec
pushf
loope
xor
cmpsl
dec
push
imul
mov
push
or
add
mov
adc
cwtl
cmp
inc
xchg
inc
adc
cmpsl
adc
sahf
cmp
mov
icebp
lahf
pop
jle
inc
mov
pop
mov
pop
jecxz
ljmp
or
popf
loope
inc
outsl
leave
in
sub
cmp
xor
push
pusha
cmp
lods
mov
cltd
dec
aas
std
cli
fisttpl
je
and
or
repz
jp
add
lcall
mov
cwtl
div
in
jge
adcb
in
jae
push
pusha
and
stos
std
inc
xchg
cli
jp
shl
cmc
inc
aaa
adc
pop
pop
addl
sarb
popl
and
inc
mov
add
add
gs
test
mov
movsb
push
mov
push
xor
imul
test
imul
sbbb
aas
lods
sbbb
push
dec
vmulss
ja
sbb
test
fs
jae
add
out
pop
cmc
int
xor
dec
faddp
cmp
sub
and
hlt
pop
ret
pop
jne
insl
addr16
ja
push
xor
dec
xor
fiaddl
aaa
pop
dec
inc
inc
mov
or
outsb
sub
inc
and
call
sti
sub
sub
cmpsl
xor
dec
dec
aad
pop
jno
mov
or
jb
fwait
cmpsl
cwtl
repnz
inc
mov
lock
mov
fwait
xchg
int
push
repz
sahf
mov
inc
ret
fs
dec
nop
push
jbe
dec
push
icebp
or
filds
mov
xchg
push
out
movups
clc
in
inc
sub
push
sbb
jno
inc
rcrl
fnstcw
cmpsb
loope
jo
insl
sbb
dec
iret
les
jecxz
mov
cwtl
scas
sub
push
sbb
xchg
push
in
xchg
out
dec
mov
movsl
jmp
mov
mov
push
flds
shl
repz
cltd
cmp
test
mov
std
in
add
sbb
xlat
fildl
shll
stos
and
or
sbb
add
loopne
jl
pop
pop
push
stos
out
xchg
ret
jecxz
or
mov
inc
add
ja
xchg
and
push
mov
pop
subb
sbb
inc
lea
dec
andl
daa
add
stc
mov
in
out
rclb
cltd
pop
jg
jb
push
mov
push
sbb
and
or
lahf
sub
rolb
sbb
xchg
jne
or
jmp
testl
les
lahf
xchg
sbb
jecxz
lcall
pop
les
add
mov
aas
xchg
fs
insb
cmc
aas
mov
pop
cmpsb
and
pop
out
fnstcw
pop
mov
test
inc
adc
xor
pusha
xchg
cmp
inc
push
add
lret
sti
xchg
ss
xchg
jae
push
add
mov
pop
inc
fldl
div
ja
lds
int
iret
flds
push
shr
jp
inc
cmp
inc
cmp
adc
xchg
push
xlat
das
test
dec
shr
inc
pusha
in
fiadds
inc
andl
aam
out
fstp
dec
jge
pop
cltd
lahf
jo
cmpsb
jne
mov
aaa
ss
jmp
sbb
gs
out
loop
mov
loop
add
insb
jmp
push
repz
mov
add
dec
ljmp
movsb
cli
inc
inc
pop
lds
movsl
mov
nop
mov
xchg
arpl
movsl
aad
jle
loope
cmpsl
movb
les
inc
in
pusha
movl
pop
jae
test
jp
out
in
daa
xlat
insb
icebp
mov
in
add
in
cmpsb
xor
pop
test
repz
loope
hlt
arpl
movsl
cmpsl
bnd
ret
add
lds
andb
fwait
out
imul
xchg
les
mov
push
data16
fiadds
pusha
andl
test
mov
cmpsl
mov
in
jns
lock
cmpsb
in
out
out
push
mov
addl
add
arpl
out
and
jns
and
loope
js
push
in
out
add
std
popa
mov
xchg
daa
xchg
movsl
daa
arpl
ja
ret
inc
and
inc
mov
jecxz
adc
cmpsl
fldl
add
ret
movsl
movsl
repnz
jae
mov
mov
es
cltd
push
mov
je
mov
xchg
movsl
cmp
ljmp
daa
fisttpll
popf
inc
aas
add
mov
jle
aas
mov
popf
shr
inc
pushw
cmp
rol
dec
xor
ficomps
or
fwait
stc
cmp
xchg
or
mov
or
div
roll
and
outsb
mov
enter
shl
add
xor
push
mov
jl
cmc
fsts
mov
fadd
nop
aas
out
std
xchg
sbb
ret
in
xchg
mov
fisubl
shl
loop
xchg
mov
or
jecxz
les
add
mov
cmp
inc
xchg
push
pop
cmpsb
sbb
inc
push
sub
stos
jns
inc
inc
ror
xchg
push
fdivr
mov
inc
movsb
into
sub
adc
loope
stos
jno
jge
cmp
lcall
scas
out
sub
dec
mov
insl
mov
jge
bound
inc
scas
fwait
subl
and
fistl
rcl
les
lret
xchg
xor
fs
jo
lods
nop
ja
sub
sub
pusha
and
adc
out
shrb
dec
push
push
cmp
add
gs
pop
inc
lea
xlat
sbb
fnsave
sahf
jge
das
sahf
and
mov
pop
mov
mov
rclb
mov
lock
sbb
in
loopne
adc
pop
dec
dec
inc
or
jnp
out
fidivrl
xchg
push
adc
xor
outsl
mov
adc
inc
mov
ja
jbe
adc
mov
add
mov
cltd
and
testb
mov
pop
loope
xorl
push
scas
shlb
push
mov
fsubrl
jecxz
jmp
rcl
in
dec
cmpsb
out
pop
add
sub
or
dec
inc
jne
ljmp
pop
push
shl
scas
sub
and
mov
sti
ja
inc
add
jnp
and
push
xchg
fwait
movsl
cmpsb
cmp
cmp
or
and
xchg
lods
pop
and
inc
popa
xlat
xor
loopne
sti
add
jmp
pop
adc
xor
clc
sbb
xor
mov
stc
loop
fistps
iret
dec
std
push
mov
add
xor
adcb
enter
addr16
mov
fcomps
mov
frstor
fcmove
or
fwait
xor
popa
scas
ja
sub
sbb
sbb
mov
ret
lea
cmpsb
sbb
rolb
sarl
add
xor
in
xchg
fists
dec
inc
lock
xchg
mov
xor
inc
sbb
fnstsw
mov
jge
movsl
sbb
fisttpl
mov
loopne
add
sbb
ret
daa
jmp
movsl
das
into
adc
pop
jae
and
pusha
and
or
aad
fildll
and
test
mov
loop
mov
or
shrb
out
pusha
mov
stc
stos
imul
jle
ret
cwtl
adc
les
iret
mov
xchg
adc
outsb
jle
mov
jnp
adc
jle
or
pusha
cmp
into
jb
and
push
adc
xchg
stos
inc
push
push
xor
or
xorb
xor
cmp
jae
into
add
push
faddl
and
mov
sbb
push
sbb
adc
mov
inc
cmp
push
mov
jno
push
push
or
std
xlat
orl
adc
mov
pop
stc
dec
or
jae
cmpsb
rol
js
xchg
or
push
push
mov
daa
pop
outsl
dec
adc
stc
add
mov
ja
jnp
mov
ss
dec
int
popf
or
inc
mov
mov
mov
cli
pop
inc
mov
ss
out
sbb
sub
call
push
repz
mov
xchg
inc
rcl
out
jno
and
xchg
insl
and
sti
push
in
addr16
xchg
dec
bound
push
movsl
cmp
push
and
rol
add
pop
aad
shl
xor
bound
stos
sub
add
push
cltd
push
gs
dec
xchg
mov
cmc
push
sar
xor
cmpsl
dec
jo
shll
loopne
lcall
xor
lds
xchg
dec
cmpb
inc
jecxz
push
jge
pop
add
jmp
aam
scas
ds
jg
pushf
jb
cmp
and
test
stos
pop
mov
push
pop
fs
fcomp
repnz
negb
xchg
cli
rcl
adc
inc
jbe
aaa
stos
mov
sarl
add
xor
cmc
pop
push
out
icebp
pop
inc
sbb
test
pop
out
data16
popa
clc
inc
outsl
xor
icebp
insb
lods
push
mov
and
xchg
xor
shrb
mov
or
ja
inc
lret
icebp
insl
xor
dec
repz
mov
or
pop
dec
dec
out
mov
cmp
dec
push
push
hlt
rol
cld
addr16
adc
adc
sahf
fdiv
pop
jae
out
fpatan
and
xor
cmp
fnstenv
test
lea
out
sbb
push
sbb
sbb
dec
sahf
sub
push
push
repnz
outsl
jo
mov
rcll
or
test
popf
xor
shrl
fwait
adc
inc
mov
jno
or
mov
cmpsb
imul
js
popf
aaa
fists
push
xor
rorb
int3
jae
push
push
cmp
xor
out
jno
push
icebp
or
jecxz
stos
xchg
pop
xchg
fs
inc
mov
ret
xorb
mov
data16
push
jno
jbe
pop
addr16
add
dec
gs
cmp
mov
and
cmp
lret
cmc
jmp
push
mov
ja
inc
fiaddl
push
lds
repnz
jle
lods
gs
fdivrs
adc
pop
out
jp
jno
mov
jl
and
mov
pop
pop
stos
sub
jmp
and
fcmovu
sti
dec
xchg
inc
mov
iret
add
sub
data16
iret
inc
sub
mov
jl
into
andb
mov
movsl
adc
je
lea
cs
subl
into
push
loop
aam
pop
cmp
fimuls
shlb
sbb
push
test
push
and
int
loope
cs
mov
fstl
inc
lds
imul
pop
inc
push
ljmp
pop
pop
jecxz
out
aas
mov
std
pop
fldt
lods
and
es
jae
mov
test
xchg
push
sbb
mov
inc
movb
nop
in
loop
ds
out
push
mov
add
pop
movsl
enter
fbld
mov
in
sbb
test
roll
xchg
and
sbb
jp
mov
stos
jno
cmp
pop
nop
add
pop
push
lock
or
cmp
push
add
jge
test
dec
std
sub
dec
jg
add
js
stc
aaa
push
add
adc
ds
add
pop
xor
fiadds
mov
std
stc
push
add
cli
sub
outsl
pop
cmpsb
and
rorb
nop
inc
inc
gs
shlb
insl
loop
loope
mov
mov
clc
and
add
pop
pop
mov
loopne
dec
mov
ret
les
into
fs
js
ret
imul
mov
ret
xchg
loop
popa
cmp
jnp
dec
loope
fnstenv
pop
repz
adc
aam
and
out
mov
fidivl
outsl
push
mov
enter
and
imull
rcrb
mov
push
adc
inc
imul
movsl
mov
jecxz
pop
addl
out
into
add
in
sub
sbb
cmp
mov
repz
jo
and
outsb
sub
loopne
addr16
cmp
cld
lcall
xor
push
sub
pop
push
adc
filds
enter
fdivrl
cmpl
fs
mov
inc
mov
scas
mov
imulb
cld
xlat
mov
dec
jo
push
rcrb
and
cmp
push
inc
cmpsl
cli
mov
stos
push
pop
push
sbb
mov
popf
xor
imul
or
jle
fisttps
ret
and
jle
shlb
add
pop
dec
add
mov
shrl
push
mov
xchg
jmp
xchg
mov
xchg
jp
in
rol
ret
into
adc
jl
ret
les
xchg
loope
jmp
in
repz
jecxz
add
ja
xchg
fdivrl
xor
stos
popa
fadd
loop
ja
xor
dec
lds
mov
jge
fcoml
sbb
xor
ret
ja
popl
cmpsl
pop
jae
adcl
xor
jb
sbb
loope
idivl
test
xor
mov
pop
mov
out
mov
test
lods
and
mov
and
add
sti
adc
push
mov
push
mov
and
jo
shlb
push
or
test
shlb
pop
xor
fsts
ret
test
sbb
pop
or
mov
or
test
sub
jecxz
fistpl
enter
mov
mov
lea
testl
popl
dec
loopne
nop
cmp
push
js
lods
mov
xchg
out
sub
repnz
or
ja
push
mov
and
jbe
mov
stc
cmc
dec
add
pop
push
fadd
inc
pop
cmp
dec
add
push
test
sbb
sbb
loop
mov
xchg
mov
push
mov
jae
add
clc
loop
out
repnz
or
cld
shrb
or
add
push
clc
out
sar
adc
sub
mov
mov
add
push
jmp
pop
loope
outsl
cmp
nop
stos
shll
pop
mov
stos
xor
les
inc
into
repz
sahf
sub
js
or
je
shl
cmp
mov
xchg
fnstcw
adc
sub
pop
mov
fimuls
add
cmp
ja
in
pop
inc
popf
adc
inc
roll
daa
pop
dec
add
jno
add
lds
push
xlat
jne
or
hlt
dec
or
in
scas
and
cld
imul
mov
fdiv
addb
and
jecxz
add
jno
push
xchg
inc
pop
fistl
sub
xor
add
mov
stos
fistpll
cmp
roll
insl
ret
shlb
mov
xchg
push
push
das
mov
int3
push
fimull
popl
outsl
xchg
dec
int
or
add
and
pushw
jmp
adc
sub
mov
sbb
rclb
mov
outsl
sahf
sbb
ja
dec
les
test
lret
jbe
or
pusha
or
push
push
cmp
or
je
fisubs
jg
scas
mov
loop
scas
loopne
stos
lods
fcomps
out
lds
aad
js
adc
test
jno
ljmp
fwait
push
divb
pop
mov
rorb
dec
ret
jno
pop
cmpl
cli
mov
cmovs
mov
push
xchg
es
outsb
js
imul
lret
insl
mov
fwait
fwait
add
inc
andl
dec
popa
push
movsl
jo
fmul
dec
mov
pop
xchg
or
repnz
mov
cmpl
xchg
sbb
adc
dec
dec
mov
sbb
sub
jbe
mov
es
cmp
loope
imul
cmpsb
fildll
inc
stc
push
cmpsl
stos
dec
test
test
movsl
xchg
inc
jmp
add
insb
sbb
pusha
mov
into
enter
push
adc
mov
in
inc
push
test
jg
popa
dec
inc
roll
xor
loop
insl
ret
cmpsb
xchg
cli
add
mov
or
cmp
shlb
addr16
mov
in
cmp
sub
dec
jp
sbb
nop
nop
pusha
sub
xor
or
int
add
ret
repnz
mov
ljmp
and
into
ret
insl
add
adcl
inc
jno
movsb
scas
sbb
sarb
mov
mov
adc
pop
lret
cmpsb
jge
js
dec
pop
stos
aad
xchg
add
sub
pop
sbbl
push
les
inc
mov
incl
pop
sbb
sarb
nop
inc
mov
dec
std
mov
mov
icebp
sbb
cmp
mov
sub
pop
jl
mov
shr
add
cmp
cmpsl
clc
test
out
ret
test
jmp
push
mov
fwait
mov
xchg
aam
mov
mov
and
ljmp
xor
ret
jle
mov
and
lret
lock
repz
mov
sub
cs
add
push
push
mov
std
mov
lcall
lds
or
xlat
into
mov
push
adc
cmpl
push
cmp
mov
inc
sbb
std
inc
sti
das
mov
pusha
loope
fdivl
xor
in
pop
jns
ljmp
icebp
jecxz
push
add
sub
in
mov
pop
or
cmpsb
sbb
test
mov
lret
or
xchg
lock
xchg
cltd
mov
add
mov
cmp
xor
add
cmp
dec
test
into
test
jno
addb
sti
or
into
cmp
mov
add
std
lret
call
add
sbb
aaa
shlb
ja
mov
xor
push
shll
aam
or
out
loop
rorl
xor
or
push
rcrb
cmc
sbbl
mov
pop
loope
push
sub
xchg
lret
mov
mov
fnstcw
mov
adc
sti
shl
jno
inc
push
daa
out
into
xchg
test
jge
sub
out
lds
lods
sbbb
loopne
iret
dec
jmp
cld
mov
out
mov
test
adc
jne
aad
jle
stc
out
push
ds
arpl
push
mov
push
mov
or
and
mov
shlb
or
shrb
push
fwait
mov
mov
faddl
dec
aaa
repz
add
mov
and
shrl
dec
inc
dec
sub
gs
call
sbb
nop
imul
popf
nop
ffreep
fdivp
clc
cmp
fldenv
jo
sbb
and
sbb
push
jno
sbb
cmpsl
add
xchg
mov
xor
or
or
add
aam
insb
cltd
cmpsb
mov
xor
pop
push
ficoml
dec
mov
fcompl
cltd
jno
scas
jecxz
hlt
iret
push
pop
cmp
idiv
push
mov
mov
push
stc
adc
mov
in
or
and
sahf
add
dec
jne
stos
add
dec
out
rolb
bound
orl
nop
mov
out
and
adc
pop
or
dec
cltd
xor
jl
sbb
iret
or
push
ret
pop
mov
xchg
xchg
pop
stos
movb
or
leave
ljmp
fisubrs
sahf
dec
jp
fwait
mov
fsub
adc
push
cmpsb
sbb
stos
ror
xor
sbb
or
push
mov
cmp
pop
dec
imull
mov
cmp
mov
mov
mov
lock
sbb
sub
idiv
push
push
dec
and
rcrb
adc
adc
mov
dec
test
dec
pop
xchg
aam
cmc
pop
adc
jle
inc
mov
inc
add
mov
scas
xchg
add
jmp
nop
cmpsl
out
and
mov
int3
adc
sysret
ret
insb
mov
dec
xor
dec
add
rolb
add
insl
loopne
fadd
icebp
cmp
add
dec
dec
sub
fidivrs
scas
sti
xchg
adc
rcrl
mov
lock
ficoms
movsb
into
cmp
pop
addr16
and
xor
xchg
dec
mov
fs
cmc
sbb
into
or
std
or
add
xor
mov
stos
sbbl
pop
jae
sbb
jne
inc
pop
jecxz
popa
iret
adc
insb
adc
mov
fwait
add
jno
stc
icebp
imul
pop
imull
jns
cmpsl
lea
mov
dec
cmp
ljmp
add
lret
inc
or
loope
cmpsb
mov
jecxz
add
inc
pop
lcall
repz
adc
ret
movsl
xchg
sbb
fcmovne
dec
mov
pop
push
es
or
pop
in
in
ficomps
clc
mov
fisubl
stos
cwtl
push
or
pop
std
les
cmpl
stos
pop
cs
mov
and
or
jp
mov
pop
sub
aaa
push
add
mov
push
lock
ss
xor
push
into
and
sti
lds
jns
cmpsb
sarb
pop
stos
add
xor
divl
jno
xor
adc
push
inc
dec
inc
repnz
or
les
cmpsb
cmpsl
jecxz
xlat
mov
dec
sub
scas
ret
cwtl
orl
add
aad
cld
fs
push
add
pop
xchg
mov
in
fcoms
sti
push
out
push
dec
outsl
mov
faddl
and
adc
jb
out
shrb
out
mov
and
popf
iret
and
aam
mov
xchg
in
popa
rcrb
insb
inc
divl
adc
sbb
push
test
shl
inc
filds
shr
mov
xchg
pop
cmpsl
ficomps
fs
stos
inc
data16
xchg
jge
inc
dec
mov
imull
mov
or
fisubrs
fsubrp
mov
sub
cmp
add
std
adc
stos
xchg
jb
dec
dec
mov
jbe
add
inc
mov
mov
stc
xchg
and
test
and
fidivrs
jb
ss
pop
mov
mov
push
out
movb
pop
ret
sahf
stos
cmpsb
push
and
dec
push
jecxz
sub
andb
xchg
pop
fildl
lcall
xlat
jne
xor
repnz
inc
jno
mov
data16
sbb
cmp
scas
imul
cmp
std
pop
mov
lds
lods
outsl
add
cmp
lods
ret
xor
pop
fiaddl
fcmovnb
shrl
icebp
rclb
imull
cmp
mov
stos
sahf
dec
xor
sub
jns
fildl
or
int3
cltd
cmp
sarb
test
mov
sub
insb
mov
mov
cld
popa
adc
inc
cmp
push
leave
pop
mov
sbb
mov
fists
cmp
mov
pop
sbb
mov
mov
mov
xchg
nop
pop
bound
imul
mov
adc
js
cmpsl
or
das
mov
and
mov
and
dec
jle
add
and
aad
xchg
mov
lret
or
ret
push
popa
into
dec
rorl
dec
test
push
hlt
add
fstp
mov
lcall
push
ret
stos
cmp
and
add
pop
sahf
push
sbb
jle
rcr
pop
xchg
and
mov
and
pop
out
mov
fdivrs
xchg
loop
xor
out
lahf
xor
divl
cltd
leave
pop
insb
ds
les
push
push
fwait
leave
sbb
mov
test
subb
rorl
and
ja
mov
xor
cltd
call
and
out
test
cmp
xor
cltd
sbb
pop
and
fnstcw
xchg
push
sbb
mov
sub
jns
adc
test
xlat
or
pop
sahf
ror
push
mov
fwait
addr16
mov
sbb
sahf
add
jmp
pop
mov
data16
dec
mov
push
ror
or
sahf
imul
add
scas
pop
and
loopne
sub
or
or
dec
jl
mov
or
in
repnz
lods
stos
lods
pop
mov
sbb
das
xchg
or
pop
push
add
idivb
rcrb
jle
cli
inc
clc
rcr
in
pusha
movsb
cltd
add
ds
jbe
add
movsb
adc
mov
dec
sbb
lods
adc
rolb
mov
lods
lds
sbb
add
rcrl
xchg
adc
and
cmp
in
adc
jmp
enter
push
jnp
or
gs
mov
jmp
mov
xor
cmpsl
sub
sbb
adc
lods
repnz
test
mov
jnp
cmp
cmp
or
pusha
loope
jp
imul
rorb
inc
pop
mov
bound
imul
push
jno
aas
dec
mov
mov
dec
inc
clc
stos
incb
ljmp
xchg
shl
push
sub
enter
xchg
int
mov
or
jecxz
add
mov
sar
mov
fcomp
jae
mov
and
popf
movsl
insl
sbb
in
add
movsl
sub
adc
lock
and
dec
mov
fcmovbe
or
and
rcr
dec
inc
scas
mulb
push
inc
xchg
notl
mov
inc
rcrb
and
lock
add
sbb
or
sarl
mov
xchg
xor
lea
push
xorb
gs
push
leave
add
mov
andb
out
sbb
push
mov
repnz
idivl
sarb
lods
or
lods
sbb
jns
jg
xchg
daa
cmp
popa
mov
pop
mov
loope
jnp
ret
mov
sahf
adc
call
cld
mov
cmpsb
cld
les
add
int
movsb
mov
and
repz
je
mov
jecxz
push
pop
pop
sub
scas
mov
sub
pop
pusha
xor
lock
cs
jmp
shlb
mov
jno
idiv
shr
mov
mov
mov
jmp
mov
or
cmpsl
or
lret
ror
std
xor
rcll
fbstp
sub
lds
fidivs
ja
mov
xor
mov
and
sbb
dec
in
cltd
ja
loopne
call
push
loop
cmp
arpl
out
pop
cmp
push
fs
jo
das
push
ja
fstpt
add
stos
xor
in
cwtl
jns
pop
xor
inc
push
mov
andl
and
mov
dec
insb
add
es
out
jle
mov
jge
adc
lret
in
sti
mov
sbb
and
dec
or
mov
add
jg
cmp
push
dec
or
or
sbb
and
pop
pop
adc
inc
fwait
iret
loope
stos
mov
push
xchg
pop
insl
pop
ja
inc
out
jns
roll
add
cli
negb
add
pop
sbb
inc
jo
or
imul
add
popa
stos
repz
cmp
mov
cwtl
push
add
xor
add
imul
loopne
scas
shlb
mov
cmpsl
sti
cmp
out
jns
dec
aam
cli
ljmp
test
mov
xchg
dec
xor
adcl
jmp
out
lcall
subl
outsb
cmp
shrb
loop
pop
gs
jecxz
pop
loopne
xchg
xchg
or
xchg
mov
mov
dec
int3
enter
mov
repz
dec
jp
or
icebp
rcll
and
out
sti
cmpsb
into
sbb
and
xlat
mulb
mov
sbb
inc
fld
aaa
addr16
into
int
push
mov
shlb
pop
dec
push
cmpsl
jmp
in
iret
inc
fwait
jb
mov
or
outsl
jne
dec
mov
shrb
dec
jl
push
inc
mov
mov
push
cmc
sti
ja
enter
mov
push
push
into
dec
xchg
gs
inc
xor
inc
mov
shlb
shlb
add
inc
outsl
add
lods
incl
stc
xor
icebp
push
and
add
pop
icebp
cltd
shl
push
cmp
sar
test
xor
push
sub
xor
pop
cmp
cmpsb
ret
jae
jge
negb
fucomi
mov
test
xor
int3
sbb
and
ja
clc
inc
sbb
loop
out
jecxz
and
in
mov
stos
adc
outsb
and
pop
jg
insb
test
lds
or
mov
xor
icebp
outsl
shlb
mov
mov
nop
mov
les
ljmp
mov
jge
decl
and
mov
rorl
mov
add
lahf
mov
or
lods
movsl
addr16
sti
xchg
gs
dec
inc
xchg
and
sub
sarb
in
mov
pop
or
testb
pop
ret
adc
js
iret
jno
add
out
mov
mov
icebp
mov
mov
in
sub
stos
clc
push
push
mov
or
ret
aam
fmull
fbld
pushf
sahf
pop
outsb
mov
inc
aad
jne
mov
jnp
mov
lea
test
ja
pop
leave
nop
add
jge
jge
or
xchg
push
test
ret
es
into
hlt
test
jmp
mov
pop
xchg
outsl
add
les
mov
pop
xchg
sarb
sbb
pop
dec
fnstsw
adc
dec
hlt
and
movsb
loop
lret
arpl
stc
xchg
jae
cmpsb
xchg
add
ficoml
in
adc
pop
add
add
fldcw
jle,pn
xchg
jb
xchg
or
mov
jmp
cmpsb
mov
xchg
fdiv
add
mov
adc
and
sbb
shlb
cld
xor
mov
leave
repz
push
loopne
outsl
mov
loopne
and
lock
popa
cmpsb
push
add
rcrl
and
invd
fwait
sbb
xor
add
xorl
add
rolb
push
sub
icebp
add
pop
push
fadds
movsl
cld
xchg
fstps
cmpsl
rclb
mov
xchg
movl
int
repnz
adc
ds
data16
nop
jecxz
out
in
popa
jae
testl
and
roll
jbe
nop
lea
cli
rol
add
pop
inc
pop
mov
in
push
mov
ret
inc
rclb
mov
aad
mov
add
push
mov
cmpsl
ja
mov
xor
fildll
out
imul
test
jecxz
jecxz
mov
inc
incb
sub
cmc
fcoms
push
sub
and
jge
push
inc
cmp
push
pop
lret
out
jg
add
cmp
pop
and
xor
cmc
add
cmpsb
cmc
std
aaa
jb
movb
js
imul
lahf
and
ret
sbb
out
inc
pop
lds
add
loopne
out
mov
mov
mov
fcmovb
pop
add
loopne
add
mov
les
mov
les
arpl
mov
es
stos
ret
and
fcom
cmpsb
mov
out
lds
jecxz
cmpsl
mov
fs
arpl
inc
xor
out
cmpsb
add
xchg
sti
movsb
test
inc
jbe
mov
in
add
jecxz
movb
lds
inc
imul
repnz
and
and
mov
rolb
imul
les
ret
test
xchg
test
add
and
outsl
cld
in
jge
pop
lret
cmp
cmpsl
cmp
loopne
pop
and
inc
fldt
cmpl
stos
pop
adc
inc
jecxz
loop
xlat
or
dec
addr16
mov
in
filds
bound
adc
mov
push
sub
mov
add
dec
pop
push
data16
test
dec
pop
stos
outsl
or
daa
push
stc
mov
push
xchg
add
inc
ret
icebp
jbe
es
lock
sub
call
add
ja
dec
nop
mov
cmp
js
sti
aas
rolb
adc
inc
test
push
ret
push
xchg
out
dec
cmp
enter
subb
mov
lret
pop
inc
aas
pop
scas
dec
push
imulb
call
dec
inc
mov
scas
aad
lock
mov
or
fadds
call
sbb
or
push
add
mov
mov
aas
pop
into
insb
xchg
adc
fistl
sbb
dec
sub
fstpl
pop
subl
pusha
xchg
push
xor
mov
jnp
cld
js
ret
mov
sbb
idivl
test
pusha
in
shll
xlat
movsb
in
les
mov
xlat
ret
ret
shrb
shrl
in
xchg
leave
or
mov
mov
stos
shl
jg
aad
js
xchg
add
push
mov
aas
mov
dec
add
outsb
pop
repz
adc
xchg
arpl
pushl
push
loope
sbb
xchg
cmpsl
daa
loopne
xor
lea
inc
jp
fwait
xchg
scas
outsl
gs
cmp
loope
and
iret
xchg
pusha
pushf
inc
add
scas
dec
shrl
push
mov
icebp
dec
push
jle
mov
push
idivl
out
imul
xchg
or
adc
rcrl
iret
sub
xchg
inc
gs
imull
lret
inc
mov
jg
pop
and
jo
pop
inc
shlb
clc
aad
mov
inc
push
push
leave
push
pop
mov
jg
aad
js
or
pushf
inc
mulb
push
scas
les
and
hlt
pushl
into
xchg
or
pop
fsubrl
mov
add
out
add
add
repz
xor
mov
incl
push
xchg
aas
jg
ret
cmp
in
jb
xor
ljmp
ds
inc
or
cwtl
push
pop
or
out
jge
sub
fs
pop
mov
movsl
mov
insl
stc
mov
mov
jnp
das
push
pop
sti
in
pusha
adc
xor
push
xor
xor
push
and
pop
in
mov
rolb
loopne
mov
roll
test
cld
or
push
xor
test
mov
or
es
es
pop
test
repz
jb
ret
lahf
mov
xchg
sbb
xorb
ja
add
sub
push
gs
mov
jbe
or
mov
sub
push
inc
xchg
mov
pusha
cltd
repnz
or
jp
cld
outsb
add
adcl
pop
lahf
in
fcmovu
rorl
cmpsb
fbstp
cmovo
push
stc
jmp
ljmp
or
and
mov
jbe
out
and
insl
push
inc
ret
mov
push
dec
cs
mov
xchg
cmpsb
xchg
add
sti
nop
jns
push
scas
popf
mull
push
rolb
dec
test
or
out
adc
push
jp
and
mov
or
add
or
cmp
arpl
outsb
out
mov
rol
aaa
xchg
ja
lds
or
cli
repz
in
cltd
icebp
jo
inc
out
ja
adc
jmp
mov
dec
mov
icebp
cltd
jg
rorl
or
jbe
add
add
fidivrl
out
jle
fsub
sbb
push
popa
xlat
xchg
xchg
or
mov
xchg
mov
add
jmp
xchg
mov
scas
or
iret
arpl
mov
ljmp
or
cld
mov
test
out
or
mov
inc
popa
push
idivl
mov
outsl
add
clc
or
into
iret
addr16
adc
push
outsl
xchg
inc
add
mov
xadd
push
test
sub
movsb
lods
jp
add
negl
imul
lea
push
cwtl
push
not
mov
loope
or
adc
lods
std
test
sbb
mov
mov
adc
shlb
addl
xchg
pop
icebp
enter
cs
call
dec
jnp
nop
sub
stos
pop
fs
out
or
nop
jne
add
push
adc
testl
iret
sbb
mov
popa
cmp
psrld
lock
inc
or
jl
ljmp
and
and
mov
xcrypt-ecb
cmpsl
into
push
jnp
movsb
or
inc
push
mov
mov
add
push
out
lea
or
cmc
mov
test
jge
dec
sarl
xchg
add
xchg
fstpt
add
and
xor
and
pop
movsb
adc
int3
test
aaa
mov
pop
sbb
sub
pop
xchg
cmp
popf
enter
push
adc
inc
clc
push
jp
daa
aas
sbb
jnp
jmp
inc
fbld
sbbl
aaa
scas
sub
or
mov
and
mov
negb
inc
imul
stos
xchg
jnp
sti
cli
imul
pop
scas
mov
xchg
xchg
add
jne
sarl
cwtl
notl
aam
mov
push
dec
fistpll
lea
push
fwait
pushl
jg
fcmovnb
mov
popl
roll
jns
repnz
add
ja
nop
xlat
lret
fiaddl
testl
fs
cmpsl
dec
sbb
arpl
dec
and
and
shll
cmp
sub
pop
jge
lcall
xchg
pusha
data16
mov
mov
mov
xchg
ja
idiv
xlat
pop
sub
insb
iret
add
jmp
or
mull
js
xor
in
jecxz
add
push
xchg
fmuls
mov
test
pushf
pushf
mov
jo
outsl
and
push
push
aam
pusha
mov
cmp
arpl
dec
sub
jmp
mov
out
out
les
ljmp
iret
inc
push
aam
xchg
push
fiadds
dec
inc
mov
add
sbb
dec
aad
aam
inc
fiadds
dec
add
je
cmp
push
push
push
fucomip
in
adc
lea
xor
lret
or
or
pushl
aad
adc
outsl
outsl
xchg
pop
es
stos
sahf
in
push
test
movsl
repnz
add
movsb
xchg
shl
or
cmp
xchg
push
mov
pop
add
sub
xor
stos
decl
aad
jae
mov
and
in
or
imul
or
and
nop
gs
add
inc
xchg
cmpsl
pop
mov
pop
inc
mov
mov
in
int
inc
xchg
or
and
or
add
cltd
lahf
in
or
out
cmpsl
xor
xchg
sbb
push
pop
and
and
cmp
cmp
xchg
out
and
sbb
mov
aad
cmp
mov
inc
leave
out
popa
lods
cltd
mov
jl
fnstsw
or
pop
add
in
repz
arpl
sub
mov
imul
mov
jae
or
xchg
test
jle
inc
sbb
jge
xchg
rorb
sahf
add
mov
andl
fdivp
cltd
lds
bnd
jmp
orb
push
cmpsb
mov
dec
cmp
xchg
fiadds
es
sti
lcall
jmp
mov
ret
dec
shrl
fmuls
pop
jae
fimull
adc
sbb
dec
repnz
fsts
xlat
adcb
mov
cwtl
test
imul
push
dec
sarl
test
jb
jmp
jno
subl
out
mov
daa
repz
push
lahf
sub
outsl
js
pop
cmc
sbb
lret
mov
fmuls
mov
sub
nop
push
sbb
out
mov
and
mov
or
push
mov
inc
xchg
or
pop
xchg
das
mov
fnstcw
mov
gs
jge
add
out
mov
pop
icebp
test
fistpl
xchg
cmp
fimuls
xchg
fucomip
jo
add
adc
sub
icebp
cmpsl
sarb
xlat
movsb
push
dec
call
lea
sub
xchg
or
aad
inc
inc
xor
cmpsl
xorb
hlt
jo
subb
dec
sbb
jnp
and
sbb
out
push
push
mov
sbb
push
xchg
popa
xchg
mov
pop
subl
pop
popa
jno
inc
loope
xlat
fidivl
test
fwait
movsl
aam
cmpsb
sbb
xlat
shrl
add
je
or
stos
out
inc
in
fidivrl
jmp
imul
pop
mov
clc
add
arpl
fldt
int3
add
adc
add
xor
and
mov
sub
add
add
mov
mov
imull
ljmp
sahf
ds
mov
sbb
loope
mov
cs
popf
mov
sbb
or
adc
mov
out
inc
sbb
adc
and
inc
adc
adc
out
fcomps
sbb
pop
and
fidivs
add
ljmp
jmp
pusha
orb
cli
ret
imul
inc
jnp
pop
rorl
sbb
jnp
pushf
pop
adc
sbb
dec
xchg
ret
lret
fildl
enter
or
out
dec
push
mov
and
add
cmc
pop
test
dec
adc
movsl
adc
jle
iret
dec
and
pop
insl
in
add
das
push
pop
cmpsb
lahf
add
mov
ja
mov
sub
addl
xchg
mov
ret
push
out
outsl
cmp
xlat
cmc
cs
add
or
and
shll
add
pop
cli
push
inc
sbb
jmp
nop
ljmp
daa
decl
das
sti
ljmp
outsl
adc
outsl
pop
cmp
notb
cmp
sub
adc
out
leave
mov
mov
arpl
lret
fiadds
je
out
and
iret
sub
arpl
push
xchg
out
pop
fiaddl
cmp
inc
sbb
mov
out
add
jp
mov
xor
dec
sub
dec
xchg
xchg
pop
stos
scas
ljmp
mov
ja
xchg
mov
sbb
xchg
outsl
movsw
cmpsb
jno
addr16
mov
outsb
sub
out
xlat
repnz
sbb
push
adc
pop
push
mov
pop
or
repnz
inc
pop
pcmpgtd
aad
mov
push
fsubs
push
xor
adc
in
mov
aas
stos
jle
rcrl
and
cmpsl
lods
pusha
mov
jle
xor
ljmp
fimuls
xlat
vunpcklps
ds
out
cmp
xor
push
nop
imul
aas
xlat
sub
leave
dec
sbb
jns
sbb
xchg
loopne
test
test
xchg
fnstsw
in
inc
cmpb
jb
xchg
cmp
out
mov
adc
or
lds
adc
movsl
pushf
fwait
xchg
mov
sub
jae
add
ds
mov
mov
cmp
mov
inc
and
int
mov
jge
dec
pusha
icebp
in
cli
mov
out
aad
insl
sti
xor
xchg
add
jbe
jg
pop
xlat
push
add
out
mov
shl
pop
xor
inc
cmp
cmp
loope
or
jnp
std
sbb
inc
xor
sahf
xchg
pop
xchg
orl
pop
inc
out
jns
inc
adc
das
sbb
sub
outsl
cs
sub
fdivrl
lods
loop
xchg
outsl
mov
sub
add
sbb
or
pushf
or
inc
cmpsl
mov
mov
leave
adc
dec
dec
inc
lahf
lods
sub
add
mov
mov
jg
out
ljmp
cmp
mov
int3
add
cwtl
push
and
xor
mov
push
jmp
leave
loopne
cmc
inc
cmp
or
pusha
push
shr
in
call
pop
dec
mov
sbb
cmp
and
dec
out
stos
push
pushf
sbb
xor
fisubrs
cmp
push
aaa
sub
xchg
jg
jmp
ficoms
or
sub
fstl
cmp
movsl
sbb
notl
cmp
cmpsb
iret
das
fcompl
mov
aam
bts
add
out
pushf
sbb
cmpsl
xor
xlat
out
scas
and
ret
or
add
pop
jecxz
lret
fdivp
adc
roll
xorb
or
imul
test
jecxz
out
cmp
outsl
mov
insb
test
dec
push
dec
pop
mov
out
jecxz
lock
ja
idivb
jmp
aas
mov
adcb
out
inc
lods
or
cmp
repnz
movsb
jmp
ljmp
mov
push
outsl
cmp
cld
cmp
sub
or
xlat
lret
lahf
rcr
or
rol
push
mov
mov
sbbl
dec
and
add
jbe
clc
jnp
sub
icebp
in
and
sbb
pop
dec
mul
push
cmp
mov
xacquire
sub
push
dec
jmp
xor
or
xchg
daa
lcall
sub
outsl
test
stos
or
xchg
mov
pop
add
sti
mov
aam
ret
cmp
push
cmp
mov
int
ljmp
inc
ljmp
dec
out
xor
push
jnp
jb
ret
cld
pop
repz
in
out
jnp
std
or
xor
cmpsl
pusha
sahf
test
and
xchg
xor
movsl
push
rol
xchg
jmp
ja
sub
fildl
repz
leave
cmpsl
iret
sub
pushf
test
or
outsl
inc
mov
sti
in
push
adc
add
int
and
shr
ljmp
mov
fsubrp
add
mov
xlat
and
mov
cmp
ljmp
xchg
push
or
sahf
rolb
push
mul
loope
clc
add
jo
xchg
pop
leave
cli
push
popa
pushf
sbb
imul
int
jno
out
fldcw
scas
adc
or
fwait
stos
and
or
push
sahf
lret
mov
addl
loope
int3
sub
adc
aas
push
xor
fsubp
fnstcw
fwait
aad
add
mov
sbb
test
xor
roll
sbb
data16
in
inc
xchg
and
fimuls
mov
stc
clc
leave
out
pushf
adc
inc
out
and
or
push
fsubrs
int
mov
clc
push
mov
mov
jbe
enter
out
pop
adc
js
add
mov
sbb
fidivs
or
jnp
mov
jg
rcll
mov
mov
andl
pop
cmp
out
sbb
cmpsb
xor
mov
out
loopne
pusha
lcall
dec
scas
ret
push
out
mov
jo
ljmp
jge
pushf
cmp
je
push
xchg
idivl
sarb
add
nop
mov
mov
cs
addl
dec
imul
mov
add
sti
in
xor
jecxz
mov
inc
xchg
fsubs
sub
dec
jbe
mov
rcll
or
push
jns
lock
cmpsl
sti
cmc
xor
ret
das
cmp
test
mov
mov
addr16
mov
stos
push
mov
mov
mov
fdivrs
adc
in
daa
push
cwtl
cmp
nop
mov
popf
xlat
pop
fwait
add
pop
fbstp
popa
sbb
stos
pop
mov
or
mov
xchg
pop
fists
add
les
mov
adc
cmpl
cmp
or
mov
test
sub
ret
pop
lahf
add
mov
aad
mov
xchg
out
sahf
sahf
repz
ret
stos
jae
imul
in
jne
lcall
mov
les
mov
test
xchg
jae
add
insl
cs
daa
test
out
or
jne
or
cmp
ficomps
sub
fstl
and
cmpb
add
lods
divb
jae
pop
mov
loope
rolb
ljmp
out
dec
xchg
mov
inc
xlat
mov
hlt
gs
cmpsl
jmp
pop
and
nop
in
push
dec
sti
mov
push
enter
mov
sti
dec
sub
sbb
adc
fiaddl
push
add
out
push
stos
mov
cmp
xor
xchg
xor
jl
pop
xor
stos
and
inc
sub
sub
push
cltd
jge
mov
xor
or
add
mov
mov
add
dec
jo
out
cmc
jmp
clc
lds
xchg
inc
ja
out
dec
add
cli
cltd
fs
dec
add
push
and
aad
dec
pop
daa
testl
cmp
popa
ret
and
loope
jmp
mov
or
xorl
cmp
cmp
out
mov
sub
xchg
add
fistl
les
jl
xlat
mov
cltd
cli
jge
out
jle
and
mov
xor
mov
popf
lcall
loope
dec
sbb
cmc
cmp
sub
mov
pop
and
inc
mov
out
jb
mov
jnp
into
cmp
sbb
pop
add
sub
xchg
xchg
popl
sbb
xchg
push
mov
in
out
mov
push
and
bound
jp
or
ja
xchg
movsb
repnz
outsb
pop
ret
push
mov
pushf
fildll
jae
push
mov
mov
xchg
insl
adc
xchg
mov
inc
sbb
adc
fistpll
mov
mov
adc
and
push
cmp
add
xor
cmp
jle
sti
mov
and
dec
sbb
cmp
jnp
fbstp
sbb
sub
adc
mov
out
jae
inc
and
push
jo
lahf
xchg
movsl
rol
mov
xor
jne
loope
cmpsl
mov
sbb
push
out
jnp
xor
sub
mov
les
jmp
rcrb
clc
mov
push
jno
ja
mov
push
in
movsl
push
lahf
xchg
mov
jl
imul
cmpsl
mov
mov
outsb
aad
mov
and
xor
shll
stos
add
xchg
mov
sbb
xor
jns
mov
out
cmp
cs
iret
or
ret
mov
inc
xor
cmovns
shlb
or
mov
fistps
test
sub
adc
and
cmpsb
negl
sbb
rcrb
mov
shld
out
xor
add
pushf
and
mov
mov
sub
jbe
mov
push
mov
or
movsb
in
cmp
push
roll
int3
lods
neg
les
dec
inc
hlt
movsb
xchg
mov
cmp
add
dec
mov
pop
fistl
sub
cmpsb
jmp
dec
jmp
jle
ret
aaa
mov
cmpsb
and
xlat
shlb
stos
inc
addl
mov
aad
jnp
fisubl
xchg
out
push
mov
and
pop
add
push
lods
stos
dec
or
js
sar
out
mov
jle
and
push
sub
push
stc
adcb
pop
stos
lds
pop
mov
push
and
adc
xchg
loopne
jb
xor
add
inc
scas
add
pop
daa
push
adc
in
out
xchg
std
mov
repz
xchg
scas
sub
faddp
and
lret
add
mov
imul
dec
jp
cmp
jb
in
mov
sub
movl
xchg
insl
or
sub
jp
dec
pusha
shlb
rdmsr
scas
imul
inc
jb
vmaxpd
out
loope
add
jmp
xor
cmp
int
pcmpeqd
out
push
pop
cltd
shlb
jl
test
mov
cmpsb
mov
pop
mov
div
testl
push
das
repz
xor
pop
push
je
gs
cmpsb
push
insb
cmc
pop
xor
imul
fistl
add
shll
movsb
xchg
ret
mov
sarb
je
xor
mov
and
insl
add
jno
add
jle
sbb
sub
xchg
data16
les
daa
jo
push
adc
push
hlt
lcallw
or
push
outsb
test
adc
add
xchg
cmp
dec
xor
scas
push
mov
scas
icebp
jg
xchg
mov
pop
inc
aaa
mov
out
inc
mov
nop
fdivl
mov
sbb
jae
mov
add
pop
adc
add
cmp
sbb
mov
out
movsb
rclb
add
in
push
aad
xchg
call
and
imul
push
ja
mov
and
icebp
rorl
lods
xchg
rcll
shl
lock
lret
pop
sub
pop
std
push
into
mov
add
fst
mov
fwait
sub
shll
repz
mov
mov
mov
dec
xorb
fstl
lcall
xchg
cmp
aad
and
xchg
mov
cmpsb
jge
xor
hlt
imulb
jl
sub
inc
inc
inc
cltd
sti
pop
mov
out
or
or
cmp
aaa
mov
lea
or
mov
pusha
sbb
jle
std
cmc
test
xchg
lret
arpl
xchg
xor
jmp
mov
jo
sarb
movsl
ret
add
jb
inc
xor
fwait
out
lahf
jl
add
push
popa
aas
push
pop
mulb
pop
in
mov
mov
push
addr16
mov
mov
sub
mulb
repnz
or
lahf
push
pop
cmp
or
mov
mov
dec
repz
cld
push
enter
inc
lods
inc
push
jne
lahf
mov
add
test
mov
mov
xor
mov
in
push
mov
imul
ds
ja
test
cmpsl
mov
push
cmp
ret
pop
push
pop
test
or
xlat
push
lret
enter
and
leave
inc
repnz
pop
lds
inc
lea
enter
leave
sbb
jecxz
or
sub
idiv
lcall
inc
cmp
jnp
std
pop
mov
sub
mov
jae
ja
pop
out
xlat
es
divb
ljmp
lds
mov
stos
enter
popa
xchg
sbb
sbb
mov
mov
fists
mov
xor
les
incl
jbe
sub
pop
jge
adc
clc
aad
mov
daa
roll
cmpsb
cmp
xchg
data16
outsl
test
les
divl
dec
mov
jl
fadds
ja
pop
push
xor
mov
rclb
add
es
lahf
fcomp
pop
sbb
xchg
hlt
sbb
mov
inc
or
xchg
divb
sbb
dec
push
hlt
clc
mov
cmpsb
cltd
mov
jge
out
addr16
out
loop
push
sbb
mov
inc
sub
sub
and
push
das
add
pop
daa
testl
dec
or
lret
dec
rcrl
jmp
js
movsb
fildl
arpl
ja
xchg
jp
jp
cmpsb
push
dec
cvtps2pi
inc
xchg
gs
push
and
mov
jmp
or
enter
push
shlb
xchg
test
push
push
mov
filds
ret
fwait
sbb
and
mov
dec
orl
lods
jne
int
mov
jae
mov
pop
push
or
rep
out
sub
pop
cwtl
push
fwait
xchg
in
aas
cs
mov
mov
mov
add
into
adc
jae
cmpsl
stos
adcb
ja
lret
lret
mov
push
dec
imull
lds
lock
mov
inc
aas
cmpsl
ja
cmp
je
adc
xchg
xor
and
jae
cmc
sarb
into
mov
mov
and
jns
push
cmp
cmpsl
sub
mov
xchg
shrl
mov
stos
mov
shlb
mov
stos
repnz
xor
pop
cmc
lds
mov
fdiv
and
or
and
mov
xor
push
xor
pop
outsl
or
push
mov
cmp
pop
jmp
mov
call
les
bnd
scas
test
jge
sahf
mov
mov
pop
jg
cmpsb
cmp
test
stos
test
mov
mov
push
pop
movsl
mov
xor
adc
lret
mov
mov
fildl
testl
xchg
and
adc
adc
imul
cmp
in
daa
jb
push
ss
push
adc
sti
mov
mov
aad
mov
das
or
aas
sbbb
mov
aaa
icebp
mov
in
push
cmp
sbb
xchg
loope
cwtl
fadd
dec
dec
loope
add
add
mov
cmpsl
nop
adc
cmp
or
rclb
hlt
inc
push
pop
cmpsb
popa
jne
xor
mov
mov
jae
add
int
nop
es
ret
and
aad
pop
xor
add
imul
push
sti
jb
pop
pop
icebp
cmpl
cmp
jmp
mov
mov
push
sbb
xchg
jne
fs
faddl
and
push
mov
adc
addr16
sbb
pop
popf
or
and
pusha
xor
dec
and
fwait
ret
and
xor
ucomiss
pushf
inc
xchg
dec
mov
ret
enter
nop
inc
xor
mov
mov
loop
xchg
mov
sbb
aad
ja
inc
push
inc
cmpsb
xor
mov
sub
flds
cmpsb
insl
test
fwait
cmpsb
fdivrl
lock
push
push
ja
and
fsubrl
jecxz
shrl
jb
mov
jae
filds
sub
shrb
clc
sbb
inc
rorl
subl
pop
in
jmp
mov
xchg
inc
mov
mov
repz
jecxz
dec
jl
pop
adc
cmpsl
insl
fbstp
adc
test
sbb
xorb
shrb
sbb
fiadds
jle
xchg
fs
pop
mov
or
fnstenv
jmp
mov
ljmp
pop
adc
mov
jmp
inc
adc
repnz
inc
outsl
and
mov
add
and
les
out
out
cmpsb
iret
xchg
xor
dec
jnp
pop
add
pop
mov
adc
out
push
fcoml
je
je
mov
dec
das
sarl
add
jo
sub
pop
movsl
push
das
scas
mov
mov
xor
imul
jns
xlat
dec
mov
and
sbbb
es
cmp
push
sti
test
adc
fmuls
mov
fidivl
stc
xchg
addb
xchg
das
mov
loopne
dec
out
jge
jo
subb
lods
inc
pop
mov
xchg
mov
into
ret
roll
pop
fistpl
ljmp
stos
je
scas
out
mov
inc
or
inc
cmpsb
icebp
and
mov
cmp
adc
repnz
pop
inc
sbbl
push
les
and
insb
xor
sub
fwait
cmp
in
cmp
ret
lds
mov
cs
sti
ja
std
xor
call
xor
les
loop
mov
push
clc
adc
es
jns
inc
cmpsb
and
outsb
sbb
inc
loop
adc
add
add
ja
pop
movsl
dec
add
rcr
xor
rorb
sbb
int3
xor
mov
and
adc
lods
cmp
adc
sbb
bound
movsl
andl
push
aas
jbe
sbb
pop
roll
ret
adc
lret
pushf
insl
sub
sbb
int3
cld
mov
jge
push
rclb
je
js
in
imul
fstpt
test
jae
std
int3
cli
sub
and
jne
outsl
pop
push
popa
hlt
fcmovnbe
sarl
pop
out
aad
repz
and
outsl
sarb
gs
data16
lds
outsl
cmp
and
enter
jg
sub
mov
in
lcall
sbb
pop
xchg
sarb
push
mov
jns
rcrb
inc
push
xchg
ret
xlat
sub
loope
sbbb
mov
in
mov
push
adc
mov
sbb
sub
jnp
jge
lock
movsb
cld
add
sub
xlat
jg
test
stos
ds
mov
sub
sbbl
in
out
dec
push
and
mov
fwait
xlat
cmc
mov
fisubl
pop
incb
ljmp
push
lds
inc
or
imul
subl
fiadds
cmc
imul
jle
sarb
nop
push
push
sbb
testl
sub
cmpsl
mov
addr16
stc
ss
mov
mov
xchg
lds
or
ja
pop
je
mov
inc
scas
mov
addl
loope
insb
sub
jmp
out
addr16
add
inc
jg
cld
and
sbb
mov
xchg
add
arpl
es
fwait
jg
mov
mov
sbbl
push
mov
inc
shll
cmp
mov
and
lds
rcll
or
mov
adc
lock
add
pop
callw
sbb
fisubs
mov
adc
add
shr
add
loop
loopne
mov
mov
into
cmp
pop
and
test
xor
outsb
outsl
cmp
imul
adc
xchg
or
jno
ret
movsb
in
mov
stos
jae
or
adc
sub
je
dec
jl
dec
dec
aaa
aas
lret
pop
test
shlb
and
sbbl
ss
adc
fidivs
mov
test
jp
aad
push
lods
cmp
ss
test
hlt
imull
movsl
fldl
sbb
sub
in
inc
dec
adc
inc
shlb
bound
movsb
data16
adc
scas
daa
icebp
pop
add
movsb
mov
push
and
imul
and
stos
push
sbb
lea
pop
mov
test
mov
fnstenv
int
sti
mov
mov
fsubs
cltd
mov
push
push
dec
and
adc
ret
sbb
add
call
stos
pusha
xchg
in
adc
push
in
out
repnz
xlat
stos
rolb
and
addps
dec
add
and
les
ret
lods
repnz
movsl
out
add
add
pop
mov
cmp
std
test
cld
dec
pop
cwtl
ds
icebp
cmp
push
mov
mov
les
xor
inc
xlat
xchg
push
mov
out
rolb
mov
or
mov
mov
popa
loop
mov
insl
sbb
xor
push
mov
movl
inc
mov
mov
in
and
movsl
mov
gs
cmp
fidivrl
test
push
cmc
jb
pop
movsb
xor
les
dec
es
mov
jp
xchg
mov
lods
jne
jne
sub
filds
sub
mov
dec
mov
movsl
fcmovnbe
fcoms
lcall
imul
shr
push
repz
out
mov
lret
movsb
dec
cmp
int
imul
addb
cmp
jecxz
ds
ret
inc
stos
loope
js
pop
jl
test
jg
les
stos
gs
pop
in
sahf
clc
dec
lret
adc
and
mov
test
sets
inc
jg
adc
ficoml
in
or
es
jecxz
xchg
scas
icebp
xor
dec
decb
jae
hlt
aad
pop
fwait
sbb
mov
out
add
pop
push
pop
mov
mov
fisubrl
test
cmpsb
mov
notb
stc
sub
icebp
shll
lods
hlt
push
mov
mov
idiv
lock
ss
stc
mov
dec
stos
inc
and
adc
es
and
rorb
xchg
inc
push
shll
test
or
add
pushf
adc
or
aad
jge
mov
mov
ja
and
stc
ja
jmp
mov
mov
push
scas
rcrb
mov
xchg
fidivs
test
and
les
lock
insl
insl
or
outsb
push
int
cmp
lret
dec
fwait
push
sbb
dec
sub
sub
repnz
nop
sti
scas
data16
xor
loope
jae
movsl
and
shlb
das
add
cmp
popa
or
int
addb
bound
sti
aam
orl
sub
in
dec
gs
mov
cmpsb
inc
out
push
cwtl
mov
out
les
jmp
mov
push
scas
add
mov
push
or
cmp
addl
fisttps
shll
int3
lret
and
dec
in
sti
push
pop
sti
pop
xor
fmuls
inc
xchg
adc
cld
pop
rcl
inc
rep
jne
mov
enter
and
sahf
jle
clc
lret
hlt
jns
in
imul
fs
faddp
adc
push
les
mov
aam
jo
ljmp
fisttps
fldcw
pop
cmpsl
roll
add
sbb
xor
adc
adc
mov
outsl
and
cmp
testb
testb
inc
lahf
loop
jb
divl
insl
adc
xchg
dec
jnp
icebp
mov
cmpsl
fisttpll
add
add
and
adcl
pop
cmp
test
frstor
lods
pop
mov
das
dec
dec
call
xchg
call
inc
fdivl
push
fwait
push
cmpsl
mov
mov
jne
ljmp
pop
pop
inc
sub
add
sbb
push
sti
jp
cmp
push
lret
xchg
mov
add
cmpsb
mov
in
hlt
data16
adc
cmpsl
in
dec
jns
xor
fst
sub
insb
mov
popa
test
out
scas
inc
test
mov
dec
pop
sti
das
fwait
clc
mov
jnp
imul
inc
lret
rcrb
in
mov
mov
adcl
push
test
mov
dec
addr16
iret
sbb
mov
add
test
aam
push
jae
test
dec
ja
and
inc
jno
cmpsb
stc
das
lock
jbe
sbb
mov
int
add
mov
push
or
or
or
xchg
dec
es
mov
push
sti
fidivl
int3
mov
fs
inc
cwtl
shl
shlb
scas
sub
mov
xchg
loop
fisubl
xor
push
les
inc
cs
rep
lea
mov
outsl
pop
lcall
aas
test
movsl
mov
jno
add
cmp
test
pop
test
inc
sbb
xchg
frstor
lods
cmpsl
sub
xor
mov
push
push
fstpl
xor
push
repz
rcrb
repz
in
sub
std
ja
or
lcall
lea
and
outsb
insl
les
in
loopne
shlb
fiadds
inc
add
mov
add
inc
out
leave
stos
fwait
push
fs
mov
jb
jnp
pop
cmp
xchg
lea
insl
add
jo
adc
cmp
add
pop
les
mov
adc
pop
stos
mov
jmp
shll
lods
ret
mov
cmp
cs
add
mov
or
mov
out
dec
out
out
js
dec
negl
insl
shll
add
jge
push
addr16
arpl
mov
push
stc
xchg
add
insl
xor
add
mov
push
mov
jns
or
das
fs
filds
cld
mov
imul
cmp
lret
repz
mov
push
and
clc
out
shll
mov
or
mov
les
inc
neg
in
das
pop
cmpsb
cs
out
ret
addb
add
jmp
mov
mov
pop
js
negl
jo
pop
jae
mov
and
xchg
cs
cld
jmp
inc
mov
dec
insb
sub
inc
loop
inc
inc
cmp
adc
push
enter
daa
add
add
idivl
jae
mov
push
jb
ja
lar
xchg
xchg
idivl
aam
push
test
das
call
out
subb
add
loop
mov
mov
pushf
and
or
jbe
jne
insl
lods
les
daa
sub
rclb
jb
mov
adc
mov
mov
bound
mov
mov
out
popa
xchg
xchg
lret
adc
out
jnp
test
xor
jb
aaa
aam
ds
jae
aas
mov
outsl
bound
cmp
xor
mov
lret
xchg
lret
out
mov
and
pusha
testl
repz
mov
addr16
jae
jl
mov
out
mov
scas
jl
sub
mov
lahf
stc
sbb
dec
mov
popa
pop
fcompl
xor
mov
lahf
cmp
cmc
pop
sub
push
mov
shl
popf
dec
inc
adc
shrl
pop
add
pop
add
hlt
mov
inc
add
outsl
or
icebp
and
or
gs
test
add
fmulp
bound
mov
xor
filds
insb
xor
ret
mov
push
sarl
and
jge
jle
rcrb
inc
xor
bound
pop
sub
adc
mov
mov
xchg
adc
je
xor
rol
pop
scas
insl
ret
cmp
fists
jb
cmp
fiaddl
jecxz
fidivs
mov
fisubs
xor
inc
mov
rolb
push
inc
push
rorb
jmp
xlat
std
out
fwait
out
dec
out
jo
or
jns
stc
rclb
adc
and
outsb
leave
mov
mov
rorl
les
mov
scas
lods
push
sti
xchg
xchg
adc
cmp
dec
popa
push
push
fs
adc
cltd
jp
rolb
sub
dec
sub
scas
xlat
lahf
lcall
repz
jae
add
scas
sbb
scas
outsl
mov
pop
in
psrlq
add
push
and
mov
ljmp
push
push
ror
lds
xchg
inc
mov
insl
cmp
jmp
fwait
mov
into
arpl
popf
push
imul
cs
adc
jno
movsb
push
jne
movsl
xchg
jp
jo
xchg
lds
ret
add
cmp
outsb
movsb
cmp
add
adc
sbb
mov
mov
lea
push
faddp
mov
in
mov
sub
cmpsb
stos
mov
jae,pt
add
jle
jne
les
outsl
jl
xchg
fwait
or
and
std
scas
mov
jge
test
imul
insl
mov
jae
cmpl
popa
lods
lods
outsl
repnz
or
pushf
mov
adc
les
mov
cmp
ficoms
cmp
ja
fisttps
mov
imul
xchg
testl
push
fwait
lcall
jmp
outsb
mov
lods
mov
xchg
add
and
aas
mov
mov
push
daa
sub
stc
leave
sub
pop
loopne
aaa
rcrb
into
or
insl
sbb
lods
lcall
xorl
in
fucom
xchg
loope
xchg
std
cmpl
mov
cwtl
pushf
adc
gs
pop
inc
ja
inc
add
mov
cld
pop
and
cmp
out
cmp
je
or
jae
stc
mov
sahf
jge
test
dec
mov
ret
iret
lds
divb
xchg
push
inc
outsl
jg
jmp
mov
iret
popf
cmp
imul
shl
stos
mov
pop
jae
in
pop
push
and
test
scas
dec
mov
push
shlb
aad
jp
mov
pop
dec
mov
call
pop
in
add
call
bound
jae
or
fistps
lds
or
loop
pop
aaa
int
push
xor
inc
and
or
outsb
mov
notl
dec
rclb
imul
ja
out
aad
dec
add
test
cli
sahf
mov
fadd
lcall
cmpsl
mov
orl
out
movsb
push
inc
jmp
pop
push
aam
cmpb
xchg
inc
ffree
mov
cmpsl
mov
jnp
lea
fmull
jb
aas
fnstcw
mov
add
and
jg
ja
add
jmp
adc
xchg
imul
add
add
lcall
add
and
outsl
cltd
push
das
mov
sbb
loop
jl
test
bnd
clc
lret
repz
mov
dec
int3
push
int
inc
sahf
cmp
fdivrp
shll
mov
add
xor
daa
dec
cmpsl
sbb
add
xchg
dec
adc
lods
sarl
or
das
inc
pop
out
and
xor
out
aad
and
movb
xchg
les
sbb
lcall
mov
addr16
xchg
xchg
enter
or
adc
in
out
add
lods
mov
mov
jb
sbb
adc
ljmp
lcall
sbb
jg
mov
add
or
cmp
mov
or
ds
in
pop
mov
scas
xlat
clc
mov
sbb
add
test
dec
mov
fisubrs
jmp
or
xorl
pop
fdivrl
aam
outsl
sub
divb
movsl
out
adc
pop
sti
mov
loop
je
nop
inc
out
sbb
repnz
xchg
popf
andl
testl
mov
test
or
int3
loope
and
dec
ds
or
xor
xor
inc
rcrb
out
cmp
lcall
push
xchg
test
out
shlb
xchg
rol
icebp
push
scas
cmc
inc
into
jl
inc
out
mov
dec
insl
mov
loop
cmc
shlb
pop
mov
icebp
aam
mov
lods
or
mov
fldenv
cmp
dec
les
into
push
rcr
mov
shll
out
jb
shll
les
mov
dec
shl
sbb
xor
filds
out
js
sbb
repnz
add
fldt
or
fwait
out
outsl
rcrb
loopne
inc
hlt
dec
aad
jno
idivl
ljmp
fs
int3
rcr
push
int3
fbld
cmp
das
or
xor
aam
xor
and
and
lods
jge
divl
out
mov
push
jns
cmp
std
mov
add
cmpsb
jge
inc
loop
jb
sub
ret
jl
cmp
les
fimull
adc
xor
bound
cmp
loopne
fildll
or
sub
pop
jno
notl
mov
mov
jne
fdivrs
mov
xor
mov
dec
dec
lahf
out
mov
sbbb
loopne
ja
sbb
mov
popa
cwtl
je
aas
mov
cmpsl
imul
ror
mov
mov
mov
les
push
loop
scas
lea
jnp
mov
xor
add
outsl
dec
fidivl
and
rcll
test
lcall
fs
inc
popa
jno
test
js
ret
mov
std
adc
mov
jbe
xchg
jge
xchg
xor
dec
dec
rclb
pop
add
jns
mov
roll
mov
icebp
or
push
or
jge
enter
adc
gs
shrl
push
jo
sbb
sub
fldenv
pop
xor
add
sbb
cs
dec
sbb
push
nop
or
out
adc
jae
pop
in
xor
and
inc
or
repz
cmp
dec
jge
in
sarb
aaa
pushf
jnp
cmpsl
ss
adc
add
add
mov
lret
cmpsb
xorb
cwtl
addr16
cmp
cmpsb
into
out
mov
loopne
out
jb
call
shll
push
mov
shll
into
mov
loop
das
int3
incb
pop
adc
pop
lds
mov
mov
pop
lea
rol
out
inc
mov
ror
mov
add
mov
incl
mov
mov
xor
mov
xchg
inc
imull
mov
aas
inc
outsl
in
xor
xlat
fsubrl
cmpsb
add
rolb
movsl
loopne
repz
push
ret
lods
lret
lcall
jbe
cmp
xchg
fistl
mov
jne
ret
stos
push
gs
sbb
or
fbld
negb
jmp
lcall
scas
pop
sti
es
adc
outsl
xlat
inc
sub
push
in
repz
aam
cs
jmp
jg
scas
push
xchg
and
in
add
mov
int
jmp
lds
and
lods
test
daa
xor
inc
sbb
ja
es
cmpsl
les
fidivs
nop
icebp
dec
sbb
mov
cmc
test
xor
lret
and
jae
dec
xor
arpl
push
jns
notb
xchg
pop
jne
or
add
mov
mov
mov
cld
jmp
sbb
fistpll
add
xchg
in
rcrb
lds
ret
or
jno
push
leave
fdivrl
adc
es
in
fadd
cmp
test
scas
rolb
sbb
in
jle
lock
out
add
dec
imul
xor
movsl
je
cmp
into
and
sub
rcr
in
pop
lods
jl
int3
jo
adc
pop
cmp
xchg
dec
inc
adcl
adc
dec
xchg
imul
push
cmpsb
into
push
push
jae
shll
cmpsb
out
add
mov
stc
push
and
sub
sub
out
mov
movsl
mov
gs
jno
fists
mov
leave
inc
jo
pop
dec
jnp
xchg
sbb
pop
aam
xor
jae
or
push
std
lods
lahf
sbb
mov
cmp
pop
or
jp
adc
adc
pusha
push
gs
dec
les
mov
ss
out
popa
xorl
ds
sti
mov
or
sahf
mov
roll
or
mov
rcrb
push
adc
jae
notb
mov
xchg
dec
iret
test
adc
push
mov
xchg
stc
pop
mov
arpl
xchg
std
jmp
xor
movsl
out
fcomps
aad
cmpsb
ret
arpl
data16
scas
xchg
jecxz
inc
mov
aaa
or
jo
fists
inc
cmp
lock
sahf
jo
and
pop
adc
insl
push
sbb
je
jnp
inc
add
scas
scas
inc
inc
add
cmp
mov
notb
lods
or
lods
sahf
inc
add
sub
mov
les
sub
or
jne
mov
mov
data16
xor
adcl
out
iret
jae
mov
push
loop
pop
mov
bound
repz
dec
ds
xchg
cmpsl
sbb
xor
push
std
or
or
or
push
int
add
mov
fsubs
icebp
pop
cmp
movl
repz
mov
sarb
sarl
outsl
jo
imulb
fisttpl
adc
fldl
and
in
push
add
ret
std
push
inc
mov
hlt
dec
push
pop
pop
in
iret
and
shrb
lret
sub
ficoms
sbb
cmp
xchg
rcl
sbbb
sahf
cld
sti
mov
lret
mov
xchg
xchg
cmpsb
fsubrl
out
xor
cmp
cmpsb
adc
mov
idivl
cmc
add
jno
jae
mov
aam
sbb
int
mov
or
xchg
cs
and
xor
and
jmp
out
out
test
mov
or
es
inc
popa
ficomps
cmpsl
lods
mov
xlat
test
movzbl
test
rcrl
stos
scas
xchg
add
dec
lods
dec
push
in
movsl
insl
fdivr
out
lcall
mov
mov
add
les
mov
rolb
xor
inc
sub
shrb
pop
mov
iret
sub
mov
pop
push
cmpsl
lret
xchg
mov
ja
adc
sub
in
scas
into
jecxz
xchg
ret
enter
ja
cmp
xor
and
dec
rorl
mov
in
pop
mov
into
shr
pop
mov
in
push
cmp
dec
sub
sub
jmp
or
pop
repnz
jecxz
call
inc
clc
xchg
adc
mov
and
ficomps
xor
jg
lods
adc
les
popf
sti
push
add
xchg
mov
and
mov
inc
arpl
imull
orb
rcrb
pop
scas
jecxz
nop
ds
test
pop
push
test
jl
lock
data16
mov
mov
adc
pop
aas
jl
jg
les
fnsave
cmp
mov
pop
cmpsl
daa
or
ss
jo
into
orl
add
scas
imul
lds
addr16
and
mov
insb
adc
in
xor
decl
bound
or
lret
daa
jecxz
std
out
xlat
movsb
pop
xor
add
push
fnsave
insl
outsl
lock
push
xchg
inc
and
push
lds
adc
fwait
xchg
mov
inc
roll
insl
js
mov
sub
stc
pop
imul
out
jae
sbbb
jl
scas
or
mov
or
jp
xchg
mov
xor
or
aaa
les
scas
sbb
xchg
int
inc
sub
and
pop
dec
xlat
pop
inc
std
push
sub
mov
mov
cltd
cld
add
add
cmp
cmc
inc
and
add
inc
aas
lock
fucomp
out
lret
or
lods
mov
repz
orb
xor
fisttps
mov
mov
out
sbbl
sbb
mov
adc
loop
add
ds
mov
or
xor
xchg
enter
in
dec
pop
out
mov
xorb
stos
popa
filds
add
sbb
cltd
jecxz
out
cmpsl
sub
gs
mov
ds
ror
test
incb
fwait
add
clc
or
sub
mov
push
sub
mov
mov
mov
push
xchg
ds
movsb
or
loope
mov
sub
xor
cmpsb
cmc
mov
outsb
mov
add
hlt
pop
sahf
or
incb
or
or
push
and
jns
xorb
adc
push
test
inc
add
pushf
je
or
stos
push
sbb
scas
pop
jle
not
or
jb
jmp
pop
add
icebp
fcmovnbe
add
cli
jo
fs
dec
les
andb
pop
xchg
out
addr16
xorl
jmp
imul
fs
daa
pop
xchg
or
jge
or
rcll
or
mov
jge
out
movsl
add
data16
xchg
loopne
pop
cmp
fwait
dec
mov
ret
and
negl
repz
or
push
inc
data16
pusha
inc
add
mov
adc
imul
inc
sahf
or
push
or
cltd
mov
xchg
fucomi
lahf
cwtl
or
xor
jo
shl
ret
jmp
lods
and
push
and
loop
dec
jb
nop
sbb
lcall
ret
loope
dec
add
insb
outsb
pop
jmp
clc
add
loop
out
cmpb
nop
or
stc
pusha
jnp
push
or
loopne
int
mov
rep
fsts
nop
xchg
mov
fistpll
or
inc
loope
pop
scas
and
ja
fisttpl
xlat
mov
sub
add
dec
push
push
in
imull
pop
inc
add
jecxz
dec
pop
sbb
leave
ret
lret
rolb
or
adc
out
xchg
push
repz
mov
lcall
or
pop
or
cs
or
xor
add
icebp
adc
sub
add
xor
das
call
push
mov
mov
addb
daa
or
mov
daa
fstpt
sbb
add
push
dec
mov
xchg
xchg
test
or
inc
cmp
aad
mov
add
jb
insl
xchg
cmpsl
pop
pop
scas
mov
lods
adc
or
push
dec
or
testb
cmp
mov
jg
pop
insl
adc
or
push
or
inc
hlt
or
cmc
add
int3
pop
or
aam
loopne
pop
mov
mov
mov
stos
or
rcr
mov
in
or
mov
bound
jecxz
hlt
sub
or
dec
jp
mov
out
xchg
clc
or
or
or
mov
sub
test
out
or
pop
and
lea
shrb
cwtl
outsl
add
adc
mov
sub
dec
in
add
inc
inc
icebp
sarb
adc
cs
leave
iret
mov
test
pusha
add
adcl
loop
je
or
jbe
sbbb
pop
or
hlt
fbld
push
mov
stos
ss
test
imul
xchg
es
add
or
arpl
cmpsb
scas
and
adc
or
fnstsw
jo
or
adcb
cmp
dec
test
outsl
adc
cmp
cmp
pop
decl
mov
faddl
sub
xchg
sub
or
mov
cltd
xchg
inc
rorl
mov
enter
in
jecxz
std
sbb
je
or
mov
or
pop
adc
cmp
or
jle
sub
sahf
arpl
leave
jns
fcmovnb
jbe
das
or
mov
xchg
or
js
inc
or
push
lahf
negl
add
sub
je
outsb
enter
cmpb
push
int3
push
andl
cltd
xor
add
and
es
out
add
out
or
pop
push
cld
pop
adc
rorl
fwait
and
jecxz
jmp
jp
inc
lods
or
incb
push
dec
in
sbb
xchg
mov
xchg
jnp
test
xor
mov
mov
test
add
invd
pop
xlat
dec
adc
leave
dec
push
push
xchg
xor
xchg
jne
cmp
adc
daa
lods
fwait
lods
push
fidivl
add
lods
pop
jmp
mov
add
stc
or
out
xor
movsl
inc
lods
hlt
enter
fldt
or
pop
xor
pop
add
fs
sbb
cmp
mov
ljmp
mov
in
xchg
mov
ds
or
mov
dec
int
mov
insl
fistl
mov
icebp
cmp
push
mov
mov
sbb
mov
sub
or
cwtl
jns
or
push
adc
hlt
cmp
push
or
stos
add
lods
subb
clc
fcomp
repnz
push
negb
rolb
mov
jno
fs
gs
xor
adc
mov
or
lods
cmp
orb
cld
std
add
dec
xchg
cmp
stos
leave
mov
imul
pop
negl
inc
dec
pop
iret
add
xchg
sub
int
mov
iret
test
out
mov
xor
cmp
push
xchg
sub
xchg
and
add
mov
loop
mov
add
out
lods
or
or
sarb
or
sbb
pop
xchg
mov
xor
cli
or
pop
jl
loope
xchg
add
gs
rorb
mov
mov
in
add
testl
adc
daa
out
mov
inc
xchg
call
mov
addr16
popa
ja
xor
imul
out
and
add
jne
stos
lock
mov
test
or
or
divl
jle
fstps
push
push
push
push
or
push
sarl
sub
test
lods
push
or
mov
add
inc
call
push
pop
and
mov
sub
fsub
cli
scas
ret
or
iret
xor
jns
cmp
or
dec
ljmp
movzwl
mov
pop
inc
punpcklbw
sahf
add
lcall
or
jne
sbb
bound
push
cmp
add
shl
sub
push
lea
sbb
dec
fdiv
push
fidivrs
jno
mov
sub
or
jg
or
pop
and
mov
enter
scas
decl
add
xchg
iret
test
xchg
in
jmp
cmp
mov
mov
inc
imul
sbb
ret
ret
je
or
mov
or
stos
dec
fnop
lret
or
test
and
or
mov
cs
jb
jecxz
sbb
and
out
cs
jge
pop
mov
loopne
adc
mov
cs
mov
sbb
lods
imul
out
and
push
out
sub
ljmp
dec
lret
sbb
or
xor
movsb
pop
pop
fwait
pop
pusha
adc
cmpsb
xchg
push
fidivrl
lcallw
cmp
or
repz
out
xlat
pushf
add
sbb
pop
in
pop
shl
lcall
flds
jle
es
dec
or
sub
ds
movsb
jecxz
pop
test
or
mov
pusha
mov
jp
jle
fdivrl
popf
and
ss
test
scas
dec
sub
and
and
push
jl
push
mov
adc
pop
out
mov
or
loopne
lock
mov
pop
mov
mov
mov
pusha
xlat
lret
test
push
xchg
dec
xchg
mov
repz
pop
and
nop
add
cmc
push
mov
rorb
int
mov
and
iret
push
pop
ret
clc
std
jns
adcl
flds
pop
xchg
leave
add
pop
cmp
or
jmp
mov
sbb
mov
add
cmpsl
ffreep
test
mov
cmovg
xor
fldt
int
cwtl
mov
dec
movsb
fwait
scas
shlb
and
add
xchg
adc
jp
cwtl
addr16
fs
cmpb
mov
push
pushf
addr16
sbb
std
mov
and
ss
in
xchg
push
jecxz
sbb
sub
mov
jle
arpl
cmc
les
xchg
push
mov
jnp
pop
out
cltd
and
sbb
rcll
icebp
sar
push
es
inc
addl
lret
or
push
popa
inc
stc
lock
mov
rclb
dec
stos
and
fs
pop
daa
test
mov
dec
popa
and
cmp
es
xor
mov
stos
push
cmpl
repz
mov
addl
inc
add
fwait
sub
xchg
out
or
inc
pop
aad
dec
aad
lds
xor
test
sti
push
sahf
push
shll
rcrl
sahf
cmp
cmp
jb
cwtl
or
por
aas
and
in
aad
lods
adc
pop
in
dec
mov
dec
addl
jl
pop
push
stos
out
jo
inc
dec
xchg
lods
ret
pop
imul
add
scas
pop
cmpl
xchg
push
ja
jno
rorl
xlat
fdivs
pop
insl
rol
leave
xchg
outsb
cli
mov
adc
xchg
inc
add
lret
jmp
ret
movsb
mov
sahf
adc
mul
rcrb
xchg
adc
add
dec
sub
mov
call
inc
in
hlt
mov
shll
or
jne
outsl
xchg
pop
idivl
fisubrs
aaa
sub
in
les
adc
xor
mov
push
bound
scas
sbb
testl
sbb
mov
test
loopne
incl
test
data16
lret
add
in
movsl
pop
adcl
mov
outsl
inc
js
or
mov
add
jo
xor
push
pop
inc
cmp
js
dec
es
stc
xchg
popa
push
inc
aas
add
mov
and
jecxz
inc
push
cltd
inc
leave
push
mov
pop
iret
lret
or
call
mov
pop
sbb
out
mov
shrb
imulb
decb
ret
mov
jne
or
sbb
push
outsl
scas
aad
inc
push
xchg
sub
clc
std
xor
mov
inc
sbb
mov
js
ja
jb
dec
fnstcw
dec
sarb
cmc
aam
dec
movsb
dec
sbbl
pusha
emms
pop
fidivrs
and
mov
pop
push
mov
stos
imul
push
je
adc
pop
lret
cmc
popf
pop
gs
ret
sbb
adcb
dec
xor
jno
sbb
insl
lds
dec
mov
cmp
out
mov
xchg
mov
pop
jo
xchg
lret
cmpsb
pusha
push
add
inc
lret
push
int
xchg
mov
push
lds
pop
imul
inc
mov
stc
aaa
std
aad
fimuls
repnz
scas
iret
ljmp
xchg
stos
or
xchg
mov
cmp
mov
int
mov
cmp
pop
mov
mov
les
xor
and
call
or
push
lret
push
pop
mov
dec
mov
xchg
xor
xor
call
loopne
shrl
cmp
add
jno
add
pop
testl
ret
fistps
cmp
mov
jmp
cwtl
mov
push
fcompl
or
push
outsl
repnz
xchg
jae
daa
lea
push
jge
jo
sub
testl
fistl
jns
out
gs
ljmp
mov
xchg
pop
jmp
cmc
add
shl
and
sbb
sbb
mov
popa
mov
mov
or
in
sbb
or
test
or
lcall
or
bound
push
or
xor
or
fnsave
ds
mov
shl
or
pop
sarl
out
inc
or
add
or
and
adc
fdiv
fidivrs
ljmp
scas
xchg
pop
stos
hlt
xchg
sti
cmpsb
lahf
fwait
enter
xlat
or
mov
loope
jns
or
cmpsb
jbe
call
and
sub
lock
out
pushf
and
sbb
es
ss
mov
sbbb
popa
out
daa
clc
ficoml
inc
shrl
jno
pop
xor
cmp
movsb
or
mov
jecxz
popa
ret
mov
call
mov
outsb
cmpsl
ret
jns
mov
imul
stos
push
mov
lods
add
ret
lret
flds
adc
fistpll
wrmsr
je
add
cmpb
xor
or
jns
pop
mov
movsb
push
sub
or
out
mov
loop
rorl
xchg
aaa
sti
adc
bound
arpl
mov
js
pop
outsb
gs
dec
lahf
iret
jg
dec
aam
inc
fucom
shll
xor
aas
stos
jno
imul
mov
arpl
mov
out
lret
scas
lock
ret
jmp
sub
jne
mov
fistl
pop
ja
and
test
or
inc
cmp
and
or
sti
mov
call
gs
inc
in
inc
or
out
xchg
stos
aam
jne
cmc
icebp
scas
outsb
mov
jno
dec
popf
cmp
arpl
adc
or
fst
fcompl
sub
push
pop
sbb
jmp
sub
dec
fidivs
rclb
cmp
nop
or
or
xor
scas
arpl
out
jo
or
xor
dec
jno
and
pop
jb
and
cmp
push
jmp
pop
push
jmp
xchg
xorl
sub
cmpsl
in
lcall
repnz
mov
cld
dec
mov
or
jo
xchg
pushf
roll
cwtl
sub
mov
pop
insl
xor
xor
dec
sub
xchg
mov
icebp
out
jo
jp
xchg
dec
sbb
inc
test
mov
or
sbb
in
cwtl
pop
push
or
mov
inc
mov
add
push
sub
jbe
fchs
mov
insb
cmpsb
ss
or
mov
xor
xor
pop
or
add
shll
pushf
add
fsubl
fdivrs
sbb
in
repnz
in
shrl
push
push
pop
scas
popf
xchg
dec
out
movsb
add
dec
add
add
or
insl
cld
jno
lea
cwtl
imul
push
mov
or
daa
adc
and
enter
jae
dec
fbld
or
mov
fs
or
scas
mov
or
lds
push
inc
mov
jp
lret
xor
xor
adc
mov
and
aam
xchg
fcomp
cmp
push
push
loope
or
rcrb
pop
adc
or
lahf
loopne
mov
out
jg
mov
mulb
push
aad
or
insb
int
or
push
mov
lahf
aas
inc
xchg
or
and
fisubs
out
or
and
or
mov
sub
pushf
jmp
aad
push
aas
in
or
pop
nop
mov
pop
add
imul
add
mov
xchg
mov
inc
or
jmp
or
pop
pop
data16
adc
inc
or
andb
dec
ljmp
add
push
adc
mov
add
and
or
push
xlat
push
jmp
sti
stos
shrb
je
and
fsubrs
cmp
rclb
rcrl
pop
movsb
push
or
mov
sub
jp
add
pop
or
testl
add
push
mov
cmp
cmp
outsl
ds
add
inc
jbe
test
dec
mov
adcl
jnp
xor
lahf
fdivl
es
or
cmp
and
sti
dec
push
shrb
or
mov
jmp
cltd
inc
sti
or
in
dec
dec
or
rcrl
mov
or
push
fdivrp
add
or
dec
mov
push
or
out
dec
sarb
mov
aaa
dec
cmp
test
inc
lock
or
jmp
lcall
sub
jns
mov
stos
add
xchg
xchg
xor
cli
or
outsb
in
adc
shl
cmp
ljmp
flds
inc
loop
pop
shrd
fisubs
or
jg
data16
sbb
and
add
xlat
jns
or
mov
mov
shr
mov
fs
dec
iret
mov
push
mov
jno
loopne
aad
imull
mov
pushf
dec
pop
xor
pop
or
adc
xchg
xor
or
jecxz
enter
testl
mov
mov
lds
adc
in
icebp
cld
or
mov
jns
push
fbld
or
fisttpl
test
out
mov
add
sub
hlt
lahf
adc
sub
inc
fwait
xchg
xor
adc
jbe
sbb
mov
pop
ljmp
daa
or
push
xchg
cmp
loope
ljmp
fbld
pushl
xor
call
pop
popa
or
xor
jp
test
outsl
cltd
jno
insb
or
xchg
sbb
jbe
or
mov
or
sub
and
out
or
inc
test
push
xchg
or
cs
mov
arpl
jmp
mov
adc
jno
add
pop
jmp
inc
or
xchg
mov
cs
decb
out
ja
mov
outsl
cmpsb
jnp
add
cmp
stos
jo
call
xchg
push
aas
or
dec
fidivs
xchg
sub
in
test
or
inc
jl
aad
jg
or
sbb
and
iret
roll
mov
test
dec
or
or
or
xor
daa
lea
into
pop
out
mov
pop
mov
je
or
sbb
stos
mov
adc
or
or
or
cmp
cmpsb
iret
pop
dec
and
add
sarb
push
mull
ret
or
add
adc
fdivrl
loope
adcl
push
test
enter
jmp
mov
cld
jmp
cmc
push
scas
out
mov
xchg
in
gs
ret
jecxz
sbb
mov
and
or
loope
inc
cmp
popf
or
mov
mov
fbstp
xchg
or
mov
adc
push
cmp
pop
mov
aam
dec
inc
add
inc
ffreep
iret
ds
add
std
mov
or
mov
and
shlb
lret
leave
push
adc
fists
jne
int3
or
adc
or
incb
cwtl
pop
pop
xlat
jae
cmp
jge
imul
int
bswap
movsb
push
or
pop
pop
xchg
xchg
sbb
xchg
cs
or
scas
ja
std
lock
bound
mov
mov
mov
mov
loope
sub
sbb
les
or
cmp
lcall
adc
mov
nop
pusha
xor
or
mov
dec
sub
ud0
mov
cwtl
les
out
inc
loopne
pop
addl
bound
push
or
stos
out
add
mov
jge
and
mov
xlat
adc
test
jl
add
dec
lret
sub
cmpb
bound
sub
push
xchg
jle
testl
inc
arpl
xor
idiv
mov
push
dec
sbb
mov
iret
fnstenv
aam
xchg
mov
pop
les
fs
daa
or
fmuls
scas
add
negb
fdivp
in
mov
movsl
xchg
je
and
cmp
fimull
pop
cmpsb
shlb
sbb
mov
adcb
sub
icebp
push
es
mov
stos
ficoms
xor
mov
cmpsl
negb
push
rcll
dec
xchg
lret
mov
dec
or
pop
cmpsl
jge
bound
scas
fnstenv
add
inc
mov
cmp
xor
ljmp
sbb
in
shlb
or
fwait
jae
cmp
stos
and
xchg
les
sahf
clc
and
mov
cmc
sbb
cmc
jae
inc
xor
ds
cmpsb
pop
jbe
insl
pusha
es
dec
cli
xlat
mov
rol
lcall
mov
jne
std
push
inc
cmp
fistpl
fistps
rol
or
loope
add
inc
mov
aaa
in
and
sbb
xor
bnd
xorl
sbb
repz
dec
or
mov
hlt
and
adc
or
pop
aam
lret
or
xchg
add
jo
sub
lahf
ljmp
jle
gs
pop
insl
ja
mov
test
test
xor
push
std
push
gs
fimull
hlt
add
fwait
jge
sti
cwtl
lods
push
adc
scas
cmp
loope
sub
loop
push
stos
pop
add
mov
pushf
sti
sbb
xor
mov
repnz
jae
push
jle
xchg
out
push
fidivs
mov
nop
jb
adc
push
inc
xor
ja
lods
push
data16
mov
or
dec
jge
pop
lds
cmpsl
and
ja
leave
insl
fisubrs
mov
clc
les
popf
add
and
add
fnstcw
aaa
adc
xchg
and
es
in
ja
jbe
pop
lret
leave
clc
lods
mov
test
add
add
icebp
xor
test
jnp
shll
les
stc
xlat
xchg
loope
loop
cld
mul
mov
cmpsb
cli
sub
mov
mov
mov
inc
push
shrl
lret
jge
daa
or
in
jg
cmp
pusha
sbb
xor
sarl
and
call
out
movl
sub
ficoms
and
and
mov
sarl
call
cli
in
fcmovbe
test
sbb
xlat
pop
xchg
pop
and
mov
xor
xchg
add
sub
xchg
cmpl
std
rcrb
sub
insl
ss
sbb
mov
aaa
lds
das
add
loopne
cmp
mov
mov
dec
aaa
adc
push
fcom
or
push
mov
push
cmp
ficoml
ret
mov
adc
out
mov
push
cmc
cmpsb
xchg
cmpsb
les
sub
fistl
enter
mov
in
push
cld
out
xor
sbb
lods
or
addr16
cmp
push
movl
push
xor
std
inc
out
xchg
or
decl
add
enter
pop
inc
outsl
inc
loope
dec
in
mov
xor
ja
ret
pop
mov
out
sub
dec
pushf
push
les
fildl
insl
xor
aas
jae
in
call
push
push
ljmp
push
pop
jbe
push
mov
call
push
fs
and
scas
fwait
sub
inc
adc
cmp
push
imul
mov
sbb
roll
lods
addr16
cli
and
dec
icebp
push
jle
mov
mov
push
xchg
push
mov
sbb
shll
add
xchg
stos
or
mov
xchg
shlb
add
inc
jb
fadds
push
rcrb
adc
loopne
mov
xor
cmp
mov
sbb
les
sub
in
pop
jns
or
sbb
xor
xorl
push
loope
testl
fiaddl
push
test
push
mov
jne
rcr
ljmp
mov
inc
mov
dec
movsb
cwtl
dec
loope
and
add
sti
cmp
sbb
add
sbb
jge
and
and
mov
jae
xlat
xchg
fwait
mov
aad
out
enter
into
cmpsl
sbb
mov
lcall
jle
sbb
adc
sbb
xorb
les
icebp
adc
out
shlb
or
stos
out
add
out
jge
pop
mov
dec
mov
xchg
pop
rclb
movsl
imul
stos
addr16
insb
and
and
int
gs
fistpll
or
push
imull
push
cmpb
xchg
lahf
mov
xor
lds
mov
outsb
rcrb
daa
stos
sbb
sbb
lea
jae
out
inc
cmp
mov
lahf
stos
mov
and
sti
ss
push
out
and
mov
add
inc
push
ja
mov
jnp
push
pop
pop
or
adc
mov
jge
inc
fisttps
faddl
and
mov
inc
int
std
ja
jbe
cwtl
sub
push
aam
pop
loopne
movsl
test
mov
pop
jo
mov
loop
pop
push
outsl
and
arpl
mov
iret
orl
nop
hlt
mov
test
jne
ja
inc
js
add
hlt
aas
shlb
ja
cld
imulb
pop
in
loope
in
aaa
adc
mov
pop
jge
loopne
xlat
mov
dec
jae
pop
aam
mov
insl
inc
mov
pusha
test
outsl
push
xchg
std
cld
inc
scas
in
sti
adc
xor
xor
mov
mov
sub
les
or
mov
jle
je
test
add
out
rcr
mov
inc
mov
mov
icebp
stos
dec
lods
inc
repz
ja
sbb
or
fildll
push
or
dec
movb
ja
hlt
xchg
out
sbb
stc
dec
xor
ja
fs
push
sbb
sub
sub
aaa
cmp
add
add
xor
add
and
sbb
lock
add
mov
rcl
sti
ja
and
cmpsb
push
inc
testl
negb
pusha
shl
or
jns
dec
xor
xorb
aam
inc
lret
popa
test
sbb
popa
loopne
ret
mov
repz
jg
repz
cld
lods
stos
inc
mov
or
cmp
cmpl
mov
sbb
sbb
xchg
in
sub
xchg
mov
mov
in
shrl
or
or
sbb
cmp
sub
cmp
lock
loopne
jo
inc
lds
adc
mov
mov
pop
mov
test
ja
mov
std
dec
ljmp
cwtl
inc
jp
and
lods
and
mov
or
das
addr16
adc
mov
cmp
lret
xchg
push
in
scas
lahf
cli
cmpb
incb
mov
icebp
out
imul
inc
add
in
sub
js
fdivrl
cli
push
add
dec
in
sub
or
fldl
mov
mov
cld
push
adc
fnsave
adc
adc
add
in
ja
sbb
xchg
push
lret
rcl
xor
icebp
into
add
sbb
aas
pop
add
mov
inc
notl
sbb
inc
push
jne
lods
mov
adc
jb
sub
and
mov
sti
in
inc
imul
adc
aad
push
sahf
mov
cmp
mov
lods
push
mov
repnz
not
into
dec
push
xchg
and
xlat
out
lret
ret
adc
ret
inc
sub
into
mov
sub
out
pop
lea
xor
loopne,pt
sub
add
adc
fisubrs
jg
repnz
adc
sbb
fisttpll
and
and
stos
lcall
fstps
leave
push
popa
or
dec
xlat
mov
cmpsb
mov
jp
scas
push
xor
mov
mov
sbb
out
xor
xchg
clc
pop
cmc
stc
ja
lods
xor
nop
pop
mov
xorl
pop
les
scas
lock
adc
pop
xor
rorb
xor
pop
vmwrite
stos
xor
sbb
inc
jecxz
inc
loopne
rcrb
scas
gs
sbb
sbb
and
fcmove
and
cmp
pop
add
orb
sbb
mov
xor
mov
in
mov
shlb
mov
sahf
loopne
fwait
or
dec
pop
les
lea
or
cmpsl
es
mov
jl
push
icebp
ret
inc
sbb
fwait
iret
sbb
adc
add
lds
clc
imul
pop
jno
mov
ljmp
inc
lahf
aad
nop
mov
inc
and
pop
fcmovnbe
or
push
lds
and
sbb
es
test
cs
adc
jnp
scas
popa
idivb
fwait
arpl
divl
int
ficoml
mov
mov
dec
test
in
adc
jo
cmp
repz
int3
cmp
mov
xchg
dec
sbb
adc
add
repz
leave
cld
pushf
inc
shlb
dec
shll
or
stc
cmp
insb
push
lods
test
pop
mov
movsl
data16
jns
stos
adc
imul
jb
outsb
cmp
inc
sub
jb
mov
test
call
std
pop
mov
sub
or
or
ret
cmp
mov
sbb
or
lock
sub
mov
dec
and
popf
xchg
popa
pop
add
cmp
outsl
mov
jo
ja
or
negl
pop
inc
add
mov
or
mov
mov
mov
jbe
jo
negl
and
cli
add
or
lcall
pop
inc
inc
scas
movsb
xchg
inc
mov
add
and
xchg
and
pop
rorl
leave
mov
add
or
fbld
dec
fistps
into
out
sbb
jmp
inc
pusha
or
mov
test
jns
push
lret
mov
push
repz
jge
push
pusha
xchg
decb
rclb
cmpsb
ja
js
gs
sar
out
sahf
mov
lods
or
rol
leave
jecxz
psubq
test
shl
decl
stos
xor
sbb
mov
scas
jg
test
sbb
sub
inc
push
xor
insl
xor
jb
xor
mov
sbb
sub
cmp
and
iret
out
push
mov
gs
les
mov
push
ja
jge
pop
mov
push
or
cmpsb
pop
addl
repz
or
ret
addr16
fwait
jecxz
outsl
xchg
inc
iret
je
js
push
addr16
sti
loopne
icebp
iret
es
xlat
rcr
into
or
sub
cmp
or
ja,pt
jge
jg
adc
adc
movb
into
sbb
repz
aad
mov
pop
add
out
pop
add
fwait
pop
lds
lret
outsl
lret
mov
test
pop
imull
xor
and
adc
dec
cmpsl
sahf
dec
andl
das
in
jb
leave
imul
cwtl
mov
xchg
pop
push
pop
cmpsb
jb
rol
mov
adc
add
loopne
std
shlb
cmpsb
mov
out
ret
testl
test
and
test
test
cmpsl
stos
mov
cmp
lods
mov
mov
adc
into
or
rorb
pop
mov
inc
and
dec
mov
cwtl
fwait
mov
scas
pop
rcrb
pop
sbb
fcmovnbe
mov
roll
outsl
ret
adc
jne
sub
outsl
xchg
les
addl
lods
test
xchg
repnz
and
cmp
jp
sub
mov
fcomi
mov
fldl
adc
popa
mov
jl
test
mov
dec
inc
imul
dec
std
sahf
nop
sti
insl
stc
hlt
decl
add
and
test
bound
hlt
mov
cmp
or
xchg
dec
sbb
mov
add
or
insb
xlat
popa
push
insl
mov
sub
sub
jle
int
inc
popa
pop
in
jp
ja
outsl
mov
xchg
mov
sub
test
popa
shlb
mov
sti
daa
dec
xchg
out
push
movsl
ret
movsl
jl
and
das
push
add
sbb
jnp
pop
ret
adc
sahf
loope
jg
inc
pop
in
jl
sbb
sbbl
mov
icebp
adc
inc
into
into
dec
fldl
ljmp
aas
sbb
rep
pop
dec
scas
test
adcl
adc
ret
gs
out
roll
jg
xchg
xor
pop
push
and
add
repz
or
sti
push
cwtl
rorb
scas
fsubr
cltd
mov
aas
mov
loopne
pop
sbb
stos
cmpsl
imull
fwait
pop
stos
decl
sub
dec
push
rol
fcom
dec
jae
pop
add
enter
adc
push
mov
mov
repnz
mov
inc
sub
ret
xchg
rcll
mov
pop
dec
enter
push
inc
sbb
or
icebp
and
out
pop
mov
pushl
lock
sbb
in
btc
add
mov
push
push
addl
adc
sti
push
repnz
leave
pop
cli
xchg
cmpsb
cmpsl
xchg
sahf
scas
das
aam
inc
mov
fidivl
add
daa
or
or
loope
xchg
ret
xchg
dec
inc
push
xor
pop
loopne
adc
mov
mov
xchg
sti
cmpsl
popf
jae
jl
je
pop
stos
or
inc
push
scas
cmp
fildll
push
pop
dec
sub
inc
stc
or
aaa
pop
int
dec
push
and
les
arpl
out
or
xlat
enter
movsb
add
sahf
ret
and
daa
out
sahf
test
lods
cmpsb
jb
int
int
scas
xor
clc
inc
fs
lock
add
ljmp
mov
xchg
fiadds
loope
add
loope
xor
or
cmc
into
jg
adc
add
popw
xchg
aas
push
ror
mov
repz
imull
fldl
addr16
and
test
out
aam
aad
mov
and
inc
pop
xchg
les
sahf
negb
inc
movsl
test
std
inc
jmp
pop
ret
xchg
mov
pop
xchg
jge
stos
xchg
ss
inc
dec
mov
xchg
mov
loope
test
bswap
mov
loope
sbb
mov
lds
push
cmp
ficomps
rclb
add
push
mov
leave
inc
mov
cltd
scas
jae
fstpt
cmpsb
inc
and
jecxz
mov
xor
jle
pop
mov
inc
movsl
lods
or
cmp
call
icebp
mov
and
mov
loopne
mov
jge
pop
sbb
mov
xor
jecxz
add
mov
test
jae
lret
cmp
xchg
enter
lods
repnz
mov
in
cltd
mov
pusha
mov
sbb
add
popa
int3
fildl
leave
icebp
inc
gs
rorl
jg
addr16
daa
mov
mov
sub
or
jne
popf
sbb
jecxz
loop
inc
scas
ror
cmp
xchg
mov
repnz
xlat
and
gs
cmp
xor
dec
mov
mov
jo
pop
and
lea
imul
mov
aas
insl
fwait
daa
in
xchg
test
lcall
pop
inc
jb
xchg
rcrb
test
std
cpuid
sti
rcll
pop
fistpl
inc
push
mov
jns
jg
adc
nop
xchg
ja
popf
jle
sub
mov
stc
cmp
jge
addr16
xchg
cmp
enter
pop
rolb
mov
pop
mov
je
in
loop
inc
subb
and
das
hlt
ret
mov
adc
mov
gs
sbb
mov
fsubl
scas
mov
ret
sub
gs
mov
or
push
adc
or
pop
loop
push
push
jbe
cmp
shrl
outsb
xor
mov
popa
js
sbb
xlat
clc
push
popa
jp
jb
push
aam
out
push
mov
rcrl
mov
shl
inc
cltd
mov
popa
rcr
pop
fisubrl
ret
mov
mov
outsl
clc
bnd
or
lea
pop
mov
subb
jne
and
pop
lret
je
ret
cltd
shrl
repnz
mov
icebp
sub
cmpsb
inc
sbb
jo
and
shlb
add
push
ficompl
xchg
lock
hlt
cwtl
cmpsl
sbb
inc
and
jae
inc
aam
sub
sbb
cmpsl
push
mov
adc
out
lcall
jno
add
shrb
mov
pop
aaa
iret
call
push
out
sbb
shlb
xchg
pop
jne
or
hlt
add
jmp
fistl
enter
mov
dec
or
pop
cmp
outsl
xchg
shl
add
xor
stos
fidivs
cmp
imul
sbb
iret
bound
std
sbb
pop
test
ret
daa
adc
add
rolb
dec
stc
cmp
push
repz
xor
fnstsw
pop
xor
sar
rclb
lods
mov
add
xor
das
inc
sbb
jge
or
std
pop
fwait
cmpsl
shrl
imul
xchg
inc
mov
fidivrs
lret
mov
cmpsb
ret
mov
testb
xchg
call
mov
insb
sbb
js
pop
ja
in
daa
repz
into
jmp
mov
mov
mov
pop
push
out
push
in
sub
push
mov
adc
cmp
xor
add
lahf
lock
fmulp
daa
stos
sub
sahf
pop
inc
mov
jae
pusha
decl
iret
fwait
xor
aad
hlt
xor
test
xchg
lea
mov
push
test
inc
xchg
jne
add
inc
int3
sarb
pop
mov
xchg
mov
mov
jns
fidivs
xor
add
insl
mov
in
ret
ljmp
cmp
insb
adc
mov
icebp
pop
sbb
lods
add
gs
stos
cltd
cli
pop
pop
pop
cmp
ss
lahf
mov
or
jo
xchg
into
dec
mov
in
rcll
shl
insb
jo
mov
mov
gs
mov
leave
jmp
jno
pop
xchg
or
xchg
cmpsb
mov
ffree
incl
push
dec
dec
xchg
out
subl
adc
sahf
ja
add
in
je
xor
in
push
aaa
cmpsb
les
fbstp
data16
jb
sbb
ja
inc
pop
lods
sub
pusha
push
dec
popa
sti
ss
loop
pop
notl
mov
or
mov
bound
jecxz
push
cmp
cmpb
aam
hlt
imul
xchg
or
pushf
add
sub
call
xchg
jne
cmp
in
jne
out
mov
mov
fisttpl
inc
les
pop
adc
aad
push
insl
into
or
pop
popa
out
adcb
pop
or
jnp
test
ja,pt
leave
cmp
mov
mov
adc
and
fildll
aad
in
mov
adc
ja
xchg
rorl
dec
sbbb
lods
xor
inc
pop
cmpsl
cltd
std
mov
shll
jp
mov
add
xor
lcall
fidivrs
out
addb
mov
xor
popf
cmpsb
test
cltd
sbb
insl
nop
xor
xchg
push
hlt
movsl
ret
sti
sbb
in
push
dec
scas
xchg
mov
add
fstps
loopne
mov
xchg
mov
pop
mov
out
cmpsl
pop
mov
xor
cmc
xor
ficompl
bound
loop
repnz
fcmovnb
cmp
add
mov
inc
cs
sbb
jmp
loope
daa
cmp
or
pop
repz
nop
scas
into
mov
pop
sbb
dec
loope
inc
lock
in
pusha
cs
mov
inc
dec
or
lds
push
outsb
pop
mov
test
ficompl
inc
sbb
inc
enter
fisttpll
out
inc
pop
jp
mov
insb
scas
add
xchg
push
sbb
fsubr
xchg
mov
inc
and
loop
sub
nop
stos
cmp
jne
mov
or
pusha
inc
mov
jmp
mov
mov
xchg
mov
push
dec
xchg
or
mov
pop
ja
imul
repz
fsave
cltd
push
pop
mov
pop
hlt
or
test
pop
and
ret
mov
adcb
sahf
fildl
mov
mov
add
jns
rol
push
or
int3
mov
dec
push
stos
xchg
mov
mov
rcrb
lea
xor
shlb
adc
out
orl
cmpsl
sbb
adc
aam
xchg
leave
push
dec
mov
xor
aas
test
lds
icebp
xchg
cwtl
xchg
push
test
and
hlt
decl
dec
in
jne
repnz
pop
rclb
push
add
push
in
mov
cmp
es
in
cmp
popf
rorl
into
test
xor
lods
cmpsb
cmp
fnstsw
ljmp
push
pop
sbb
test
addb
popa
jl
rcrb
sysret
addb
jl
shrb
out
mov
cli
ss
loopne
test
outsb
xor
jns
jne
loope
imull
pushl
xor
and
pushw
mov
pushf
xchg
xchg
fimuls
xor
mov
gs
jb
push
je
mov
mov
cmpsl
lods
or
xor
pop
pop
rolb
movsl
test
fidivrl
xlat
mov
shrl
jno
ljmp
inc
in
ficoml
sub
push
pop
jl
movups
jmp
lcall
filds
movsb
insl
and
sbb
cli
mov
jbe
sbb
cmc
mov
lret
pop
jno
pop
jo
mov
in
out
xchg
and
and
in
fmull
sub
push
out
fiaddl
addr16
mov
clc
into
and
hlt
mov
test
pusha
pop
js
pop
andb
jnp
or
or
loop
jnp
mov
xlat
scas
in
and
stos
jae
xlat
adcl
dec
sti
and
lods
idivl
dec
pop
loopne
xchg
scas
aad
mov
mov
nop
js
jo
outsl
sti
adc
xchg
cmp
fidivs
jmp
push
or
out
push
les
popa
pop
loope
sbb
xchg
cmp
mov
jnp
repz
mov
or
push
imul
or
bound
sub
aam
mov
push
das
int
les
sbbl
loop
stos
push
mov
je
sbb
arpl
push
mov
lahf
stos
cmp
int3
push
fstpt
xor
pusha
or
fbld
in
jl
ret
fwait
xchg
dec
out
push
popf
aad
lds
scas
add
aas
sbbb
inc
push
orl
cmpsb
push
pop
pop
sti
jnp
cld
fsts
jns
out
dec
movsb
aam
mov
aaa
in
out
ljmp
cmp
jns
jge
arpl
jmp
ds
mov
addr16
test
dec
push
pop
mov
ss
jbe
out
xor
icebp
rclb
notl
add
decl
xor
shrb
clc
cmpsl
xchg
std
leave
data16
jo
xchg
xor
lds
decl
inc
outsl
out
js
push
mov
cmp
stos
push
jge
aas
loopne,pt
fs
pop
test
mov
stos
push
xor
lret
rolb
mov
in
mov
cmpl
fst
and
and
sbb
sbb
aad
pop
stos
fmuls
xchg
mov
pop
lret
rorb
jne
mov
fistpl
popa
cmovb
or
divb
and
sbb
pop
pop
pop
push
jno
ss
push
arpl
xlat
icebp
lahf
mov
mov
pop
adc
outsl
sbb
in
lret
push
xorb
add
jo
add
mov
ljmp
xchg
repnz
sti
xor
pop
mov
inc
or
add
int3
lret
jbe
je
dec
cmpsb
sti
sbb
gs
outsl
mov
dec
dec
test
loop
or
mov
sub
icebp
dec
mov
and
rcr
fcmovb
push
rcrb
push
add
fstp
or
pop
mov
cli
mov
xchg
push
pop
int
push
jg
repz
lods
and
imul
pop
jne
fs
insl
subb
test
popa
test
stos
vandnps
mov
push
lock
dec
loope
mov
cmpsb
lcall
sbbb
mov
inc
ja
subl
mov
lcall
repz
shrb
loope
pop
sbb
jp
adc
xchg
mov
pop
jp
push
stc
push
xchg
sub
pop
push
jecxz
repz
pop
loope
sbb
mov
xor
sahf
mov
lret
or
sbb
xchg
cmp
fcmovbe
add
inc
popf
pop
and
loop
out
sub
pop
mov
pop
movsl
pop
popa
loop
fwait
addr16
outsb
scas
and
mov
add
adc
xor
rcrl
mov
sbb
ljmp
cmpl
out
fwait
cmp
push
add
daa
mov
dec
mov
scas
mov
je
bound
sahf
popa
inc
ja
add
mov
lock
int
popf
test
cs
dec
xchg
adc
mov
shll
or
loopne
mov
les
test
dec
call
mov
push
jb
lock
outsl
xchg
jae
out
sarb
cmp
movsw
and
or
cmpsb
xchg
aam
call
shll
push
je
xchg
add
jbe
addl
xor
xchg
in
cmp
aaa
sbb
loope
pop
mov
pop
rcrl
std
or
mov
add
sbb
push
fiaddl
adcl
sahf
popa
and
jl
lahf
test
dec
adc
inc
inc
xchg
lea
test
lock
cmp
test
cmpsl
cmpsl
pop
les
fldl
adc
es
mov
cmp
cs
or
test
orl
inc
mov
push
or
iret
jp
repz
nop
pop
je
sti
stos
outsl
rcrb
movsb
dec
pop
mov
cld
or
lods
sbb
test
mov
mov
aas
mov
mov
pusha
int
jno
imul
jg
jp
incb
sbb
xchg
stc
push
mulb
and
mov
faddl
add
aam
push
sub
mov
popa
mov
inc
and
pop
mov
or
mov
mov
pop
or
dec
call
and
ds
testl
jge
mov
pushf
arpl
inc
inc
imul
cmpsb
mov
enter
xchg
mov
shrl
jo
insl
sub
dec
loop
rcrb
pop
inc
and
movsb
add
xchg
js
dec
out
gs
xchg
cmpsb
fwait
out
sar
jo
shr
call
aam
adc
shrb
mov
ja
out
pop
out
loope
icebp
jb
das
notl
shll
mov
iret
sbb
jb
jl
scas
inc
inc
mul
push
inc
pop
aaa
addr16
add
mov
popa
addr16
daa
jmp
mov
push
dec
std
mov
mov
or
cmp
push
inc
add
xchg
ds
jl
add
ss
js
fwait
popa
movsb
add
push
xchg
aas
cmc
push
push
add
jge
sbb
cmp
sbb
lods
cmpsl
call
add
int3
iret
adc
push
sbb
mov
loope
pop
inc
and
ficoms
pop
shr
jns
xchg
bound
or
or
mov
mov
popa
push
nop
gs
jo
fnsave
mov
push
pop
xlat
xchg
or
push
out
out
xchg
pop
sbbb
addr16
fistps
add
sbb
enter
mov
rclb
inc
test
mov
lods
nopl
fcoms
mov
jge
rcrb
incl
dec
push
and
pop
mov
pop
pop
push
fstl
js
push
ds
imul
and
std
xlat
or
data16
lcall
xchg
repz
mov
repnz
inc
addl
mov
or
or
or
mov
in
sarl
xor
fcomi
jne
mov
sbb
xchg
repz
sbb
lret
lret
imul
pushf
std
mov
and
fsubrs
sbb
std
mov
adc
iret
addl
mov
test
scas
sti
adc
arpl
rorb
push
mov
mov
sub
jae
lods
xor
lods
lcall
adc
int3
mov
jg
lea
inc
inc
mov
lret
insb
mov
mov
imul
push
adc
es
cmpsl
push
cs
addr16
add
stos
adc
aad
outsl
movsl
mov
lcall
sub
popa
jmp
les
shrb
adc
sbb
xor
lret
ret
imul
inc
jbe
dec
push
sub
pop
mov
push
mov
lahf
in
or
test
cmpsb
dec
les
aad
scas
lahf
rolb
imul
mov
bound
pop
mov
sbb
push
or
orl
rclb
jb
inc
cli
pop
test
js
loopne
repz
loop
rolb
dec
dec
push
cmpsb
add
aas
sbb
and
xorb
test
outsl
mov
sub
sub
sahf
cmpsl
fs
test
cmp
ljmp
inc
out
les
sbb
rcl
or
mov
dec
pop
lea
movsl
inc
rolb
xchg
xchg
hlt
stc
cmp
int
mov
or
mov
hlt
test
mov
jnp
stos
nop
mov
sbbb
scas
xchg
in
pop
inc
adc
dec
in
lcall
xchg
xchg
lods
dec
lds
fstpt
fdiv
sub
jnp
aam
cli
mov
pop
or
out
movsl
pop
adc
stc
xor
fwait
mov
stc
cmp
push
repz
cli
jb
inc
xor
out
xchg
stos
mov
inc
int
mov
sbb
ficoms
pop
into
stos
cmp
jecxz
inc
xchg
lds
cmpsl
or
push
shrb
sbb
into
push
mov
mov
rolb
inc
or
pop
sti
jmp
cli
out
push
testb
dec
add
test
dec
inc
sub
push
mov
sbb
push
jo
sahf
cmpsb
shl
ja
or
add
push
mov
push
test
stos
push
dec
push
std
les
cmc
xor
std
or
pop
js
insl
shrb
lds
pusha
cmp
idiv
out
mov
push
out
scas
push
xor
outsb
jecxz
adc
loope
int3
ret
pop
add
lahf
les
inc
fadds
jg
push
or
jne
xor
pop
repnz
add
es
mov
sbb
mul
mov
or
pop
jbe
mov
fiadds
or
xchg
fstl
add
xlat
pop
add
sbb
xchg
fldcw
fists
xchg
adc
cs
repz
out
icebp
sub
push
hlt
call
xchg
daa
mov
rolb
lcall
push
dec
mov
mov
daa
pushf
mov
hlt
jno
sbb
and
div
push
dec
imul
pop
push
daa
shll
cmp
pop
push
enter
xchg
dec
add
and
mov
xor
push
in
jle
push
jne
jp
add
and
jl
jb
mov
xor
add
adc
shlb
adc
jae
repnz
insb
and
xchg
pop
cmp
mov
mov
out
mov
inc
nop
cmpsl
cmp
popa
subl
jp
les
jmp
notl
inc
mov
sub
push
fbstp
mov
adc
outsl
scas
ret
scas
or
add
jle
mov
scas
add
nop
ja
repz
les
mov
jbe
inc
std
loopne
outsl
xor
jae
xor
cld
or
jmp
enter
push
insb
or
rcr
pop
sbb
sub
mov
sub
or
jle
aas
loop
out
out
stc
mov
push
or
ret
fwait
and
lods
movsl
dec
adc
arpl
xor
or
adc
mov
ja
xor
xcrypt-cbc
cmpsl
adc
dec
call
adc
mov
fmuls
xchg
mov
adc
inc
mov
push
mov
out
mov
in
cmp
xor
cmp
jne
jbe
icebp
inc
adc
adc
dec
xor
inc
push
and
xchg
insl
jae
ja
cmp
or
mov
mov
ret
jnp
outsl
rcll
ja
mov
out
adc
push
lcall
psubusb
sbb
loopne
xchg
or
mov
test
jo
cmpl
mov
jae
add
and
xchg
sub
test
scas
fld
push
in
clc
mov
push
xor
in
mov
add
lods
fidivs
mov
mov
xor
mov
lret
push
push
ret
orb
ljmp
push
and
aam
fwait
mov
data16
xchg
cmpsb
gs
xlat
mov
xchg
xchg
out
sbb
movsl
jmp
xchg
add
mov
cmp
mov
add
sbb
loopne
in
pop
inc
dec
or
outsl
repz
mov
pushf
icebp
sbb
sti
jecxz
cmp
lahf
jae
jns
cmc
inc
push
push
test
loop
orb
dec
cmp
push
je
mov
inc
les
and
pop
inc
out
mov
jbe
imul
test
jge
jb
adc
inc
loop
mov
cwtl
fsub
add
or
xor
movsl
pop
xor
dec
loope
jb
dec
jae
rcrl
daa
mov
push
inc
add
mov
cmp
add
fbld
jle
mov
in
stos
mov
repnz
das
filds
iret
adc
cld
jmp
in
lret
cmp
mov
stos
inc
mov
mov
out
inc
js
push
fwait
jne
and
stos
fmull
test
and
pop
rorb
sbb
cmpsl
jmp
aad
incl
cmp
xor
outsl
scas
lds
out
test
ds
lret
sub
or
gs
or
pop
xchg
push
jne
pop
inc
sbb
jbe
push
addl
push
jl
adcl
cmp
outsl
in
rclb
jb
test
in
test
lcall
rorb
aas
xchg
mov
sub
xchg
ret
inc
inc
stc
adc
jb
iret
mov
inc
jecxz
cmpsl
stos
mov
loope
xorl
fmuls
inc
jl
add
xchg
in
gs
in
cmc
popf
popa
mov
ja
xchg
push
lods
push
jnp
cli
sub
dec
mov
mov
adc
mov
sbb
jbe
fldl
or
pop
fldt
push
les
mov
fisubrl
mov
jo
jns
xlat
mov
mov
std
mov
jecxz
fadds
insl
inc
adc
loope
lock
mov
mov
inc
out
loop
aad
mov
clc
rclb
cmp
rorb
movsl
cld
jmp
add
mov
jne
mov
imul
sbbl
mov
xor
sbb
push
mov
jnp
gs
add
gs
jmp
jbe
push
mov
xchg
mov
flds
xor
fxch
inc
popf
js
push
mov
mov
das
push
int3
jns
sub
cmpsb
jb
std
mov
xchg
add
sbb
inc
or
push
mov
call
aaa
out
xor
and
dec
or
pop
hlt
adc
in
pop
xchg
fcmovnb
mov
aam
inc
cmp
inc
rcrb
testb
mov
or
out
idiv
js
repz
rorb
jae
fisubrs
pushf
int
cmpsl
inc
push
or
pop
push
jne
rorl
inc
negb
in
lods
sbb
mov
out
pop
xchg
out
jmp
inc
dec
mov
cmpsl
loop
test
bound
std
jge
in
mov
mov
mov
test
and
cmp
add
hlt
inc
imul
xchg
inc
adc
mov
jge
push
imul
es
hlt
lret
popf
pop
xchg
pop
insb
mov
insl
mov
bnd
mov
push
arpl
xor
in
les
pop
push
pop
ljmp
popl
inc
stos
icebp
shlb
les
filds
int3
dec
adc
and
sbb
imull
mov
mov
daa
inc
mov
dec
sahf
pop
pop
xchg
test
or
pushf
jns
dec
mov
mull
jmp
xchg
loope
push
inc
loop
cmp
inc
mov
ret
jno
icebp
dec
inc
mov
mov
stc
inc
push
push
inc
jnp
jle
or
sti
jns
sti
les
xchg
mov
out
ja
stc
add
mov
mov
ss
xorl
loope
test
cmpsb
rcr
dec
push
ja
out
stc
cmc
jg
in
push
xchg
pop
push
cmp
leave
test
in
outsl
or
xchg
add
mov
jle
hlt
test
loope
push
push
jne
js
jae
and
jae
pop
lods
jo
pop
sbb
xorb
test
dec
repz
push
jne
in
inc
pop
outsl
push
in
stc
xlat
stos
sub
scas
shrb
loope
stos
sti
adc
call
lock
jnp
inc
outsl
stos
sub
in
test
fs
loope
mov
insl
jmp
mov
scas
pop
out
stos
dec
add
mov
mov
or
out
sbb
fistpll
clc
and
push
sbb
sahf
out
in
out
dec
push
out
das
xor
nop
orl
addl
insl
push
xor
and
lds
arpl
aaa
jae
in
sarb
lds
mov
push
aas
cltd
sahf
in
idivl
push
in
sub
hlt
movsl
or
dec
jns
pop
movsb
fistl
decl
push
sbb
mov
add
mov
jnp
mov
xchg
sub
cmp
imul
das
and
je
xchg
xchg
xor
adc
inc
xchg
mov
movsl
mov
dec
xchg
mov
and
imul
lock
jg
push
movsl
movsl
emms
icebp
negl
cmp
mov
shlb
sbb
sub
sti
adc
mov
jnp
jns
mov
pop
push
cwtl
cmc
mov
fwait
daa
loopne
adc
scas
add
mov
pop
mov
sub
add
push
call
les
push
in
mov
mov
test
aas
stc
std
push
push
sub
gs
or
pop
adc
aad
in
sbb
cmpsl
mov
add
sbb
fdivr
jp
pop
loop
hlt
andb
xchg
adc
pop
add
mov
lds
fisubs
out
xchg
mov
pop
mov
jmp
inc
scas
sbb
lods
add
rcll
clc
js
adc
arpl
pop
imull
mov
lock
js
push
andb
movsb
aad
cltd
adc
jle
push
cmpsb
and
dec
shll
push
mov
outsl
or
ja
movsb
leave
jo
data16
and
fisttpll
mov
std
mov
out
fsubp
test
fsubp
bound
push
push
pop
pop
das
jne
mov
scas
stos
jo
pushf
inc
cmpsb
divb
pop
push
jb
sti
stos
mov
cmpl
fwait
pop
adcl
repz
xchg
repz
push
test
jg
xchg
sbb
cmp
jmp
imul
rolb
cmp
fsts
sarl
adc
xor
imul
jno
mov
and
and
ficompl
sarb
popf
ja
outsl
xlat
out
jns
jecxz
ficompl
add
ljmp
inc
bound
push
push
xor
adc
lea
pop
or
inc
rcll
xor
fisubs
push
pop
in
out
jae
jge
ret
aas
dec
inc
rcrb
or
jnp
ror
iret
repz
mov
dec
jae
push
frstor
push
insl
dec
jns
sti
les
imul
mov
inc
pop
aaa
inc
js
cmc
mov
add
es
cwtl
or
pushf
mov
or
jecxz
fstps
shrb
aam
jecxz
xchg
inc
jae
orl
rcl
fucomp
cmp
pop
std
inc
repnz
push
lret
fidivl
dec
dec
add
es
pop
pop
mov
scas
addr16
call
cmp
outsl
mov
cmp
jl
test
adc
mov
cmpsb
and
loop
inc
shl
lods
jl
sarb
cwtl
sti
shrl
adc
jge
pop
mov
and
sbb
call
sbb
mov
push
jecxz
jae
pop
and
mov
js
dec
jae
add
adc
fwait
loope
je
leave
lahf
cmp
adcl
sti
inc
xchg
xchg
add
in
mov
cmp
or
icebp
movsb
inc
fisubl
adc
mov
push
leave
in
jge
jmp
shrb
in
call
cmp
pop
outsb
xchg
outsb
lds
push
test
push
mov
out
or
sbbb
addl
stc
out
adc
lds
mov
arpl
mov
arpl
push
ja
dec
cmpl
sbb
fisubrl
scas
jbe
cmpsl
mov
pop
fsubrl
orb
adc
bound
mov
inc
xchg
rcl
cmpsb
insb
mov
movsl
push
arpl
repnz
adc
and
jl
inc
xor
jg
adc
addb
xchg
fiadds
jl
popf
addl
out
sbb
sub
clc
stos
pop
push
jmp
sar
mov
out
xchg
loop
xchg
pop
jne
push
pop
stc
ja
ds
and
sbb
scas
roll
jge
push
aas
or
cmc
push
and
push
xorb
aas
adc
or
lret
adc
xchg
clc
clc
push
and
subl
sarb
xlat
movsl
loopne
xor
inc
daa
mov
cmp
push
add
loop
mov
insl
rcrb
mov
mov
adc
pusha
fstps
sahf
sbb
add
mov
frstor
mov
mov
mulb
push
andb
pop
dec
clc
mov
push
push
jnp
pop
push
test
pushl
aaa
xor
mov
movsl
enter
mov
jmp
cmp
mov
mov
mov
sti
pop
rdmsr
inc
fiaddl
inc
aaa
nop
xor
or
mov
mov
loopne
pop
outsl
cmp
jne
lea
cmp
sarb
aam
or
icebp
rol
sbb
and
sahf
insb
adc
or
cltd
dec
xchg
mov
adc
imul
or
xchg
jp
xor
rol
jmp
incl
jno
inc
inc
adc
jbe
xchg
jae
or
xchg
test
sbb
sub
testl
lock
xorl
and
femms
into
cmc
cmp
lcall
ret
jge
mov
xlat
mov
or
and
adc
xor
pop
mov
out
cmp
test
or
adc
push
mov
cmc
sarl
inc
bound
mov
std
aaa
dec
jg
xor
xchg
xlat
xchg
mov
adc
xchg
adc
mov
add
int3
adc
mov
lret
or
pop
pop
popf
in
cmpsb
ret
inc
mov
outsb
and
pop
fs
mov
push
dec
dec
jge
cld
movsb
aad
out
add
pop
lahf
das
jge
scas
mov
loope
add
orl
sub
js
fdiv
sbb
dec
xor
mov
mov
push
movsl
sbb
js
sti
flds
xchg
pop
subb
fildll
pushf
shlb
popa
shrl
dec
sbb
nop
mov
lret
sti
sbb
pop
gs
or
jne
fwait
jb
xor
xchg
xlat
mov
pop
pop
and
loope
mov
mov
ret
fwait
jge
fbstp
and
scas
jae
sbb
inc
aas
or
push
inc
orb
push
pop
dec
dec
lret
outsb
jbe,pn
xor
pop
mov
enter
movsb
sarl
test
cmp
xchg
dec
addl
mov
scas
into
ja
pop
mov
mov
mov
cmpsl
inc
loopne
cmc
sbb
adc
or
mov
addl
clc
add
xchg
into
xchg
adc
jbe
clc
pop
push
and
add
clc
mov
sub
sbb
dec
jne
cmpsl
add
jno
in
sbb
outsb
pop
divl
jo
fcompl
sub
mov
fiaddl
insl
adc
mov
adc
inc
pop
push
loop
pop
add
shr
fsubr
push
ficoms
inc
mov
lea
sbb
cmp
mov
jns
fcmovnu
fnstenv
xorl
loop
into
cmp
sbb
cld
sbb
imul
insl
mov
repz
or
xchg
les
push
push
jns
and
in
or
or
leave
call
sbb
mov
mov
fs
dec
pushf
icebp
and
add
or
xor
aam
mov
xor
cmc
jno
inc
push
repnz
pop
cmp
add
lret
cld
or
mov
mov
jns
cvtpi2ps
sti
sarl
ljmp
cltd
xchg
popa
add
aaa
cmp
xchg
sub
dec
jnp
out
rolb
daa
shlb
decl
jne
repnz
imul
outsb
mov
adc
movb
lahf
pushf
mov
fscale
out
daa
dec
push
out
jecxz
dec
mov
xchg
xchg
jmp
dec
loop
inc
movsl
push
inc
shrl
jb
jne
repz
or
mov
cmpsb
push
mov
or
sbb
push
pop
sbb
stc
scas
push
out
cmp
pop
out
mov
and
xchg
insb
inc
movsb
rclb
cwtl
ljmp
xor
std
lahf
testl
or
mov
les
push
ljmp
sbb
enter
inc
mulb
les
cmpsl
in
cmp
add
cld
ljmp
ja
aam
out
cwtl
mov
test
loope
test
stos
stc
inc
bound
jbe
shl
les
mov
xlat
jno
ficomps
bound
xchg
pop
pop
sarb
fwait
rcll
lds
add
rolb
test
pop
fcmovbe
lret
lods
cmpsb
jp
icebp
xchg
inc
push
pop
adc
aas
test
out
push
negl
movsb
push
mov
or
mov
jg
insl
repz
test
xor
shlb
loopne
mov
in
ja
mov
pop
repz
lock
test
sub
test
imul
rclb
mov
out
fists
rorb
xor
lea
daa
push
popa
adc
pop
idivl
shll
icebp
and
arpl
or
fnsave
stc
sbb
xchg
mov
and
movsb
cmpsl
fimuls
sbb
rorb
sbb
out
add
mov
push
cmp
cmc
mov
mov
adc
push
mov
mov
xor
test
dec
test
fsubl
loopne
mov
push
xchg
xchg
cwtl
les
pop
pop
rclb
fisubrl
mov
xor
cmpsl
xchg
xchg
add
setnp
fdiv
or
roll
dec
fs
mov
push
pop
jmp
repz
or
pop
clc
mov
mov
adc
mov
push
popa
and
addb
sub
ja
mov
cmc
andb
lret
jae
roll
pop
jl
push
cmc
push
inc
cmp
sbb
mov
lret
xor
sahf
mov
mov
fwait
jecxz
sarb
lods
andl
xchg
mov
or
jbe
pusha
out
mov
jnp
cmp
or
lds
les
fbld
shlb
call
jp
popa
addr16
dec
add
pop
les
and
cld
push
push
pop
inc
scas
lcall
push
stc
mov
xlat
les
push
dec
mov
aas
add
les
and
xchg
popa
add
xlat
not
cmpl
dec
stos
xor
jno
jmp
mov
repz
sub
test
and
out
adc
sti
les
push
call
les
sbb
inc
enter
ret
or
std
dec
add
push
insb
mov
ret
mov
movsl
fcomp
adc
pop
cmpsb
mov
add
jo
jb
pop
pushf
or
cmpl
pusha
sbb
cwtl
popf
mov
adc
push
or
rorl
mov
add
aaa
add
shr
fwait
loop
sub
jb
sbb
cld
insb
das
mov
jnp
sti
xor
daa
ds
into
adc
or
fiadds
push
xor
data16
shlb
js
push
or
fwait
mov
jmp
inc
sbb
into
or
test
push
push
xchg
mov
fstp
mov
mov
lret
adc
lea
add
out
xchg
cmpsb
fs
push
sbb
mov
jge
adc
add
sbb
sti
fs
stc
les
and
ret
rol
imul
mov
jge
out
sub
loopne
cmpsb
mov
mov
or
jecxz
inc
or
jle
sbb
and
sbbb
inc
push
mov
pushf
leave
pop
cld
jmp
inc
lods
pop
and
movl
jge
ficomps
fcmovnb
outsb
sbb
setbe
fldl
sbb
add
inc
push
shl
shlb
or
push
in
jg
inc
push
in
in
icebp
jg
into
movsl
add
ja
icebp
inc
add
pushf
sti
fistl
sti
scas
out
bound
mov
inc
inc
xchg
leave
sub
stos
cmp
into
push
out
das
loopne
sub
out
push
ficomps
sub
ret
test
test
out
xor
mov
push
loope
add
test
outsl
jle
imul
inc
and
sub
ds
sub
add
mov
out
scas
sarb
and
mov
insl
mov
lret
pop
jae
add
loope
arpl
std
lahf
push
es
adcl
or
lea
lcall
jp
mov
mov
orb
std
scas
mov
mov
clc
and
xchg
push
mov
fidivl
test
test
fimull
inc
loopne
mov
in
in
mov
addb
push
add
test
sbb
pop
cmpsl
scas
cmp
dec
pushf
call
cmp
outsb
mov
scas
mov
jno
pusha
in
pop
sbb
xchg
lcall
sub
jmp
mov
cmovs
rorl
add
fsubrp
and
dec
jne
jo
int
add
or
cld
jmp
call
adc
push
or
jmp
sbb
test
jmp
in
out
cs
repz
adc
aas
in
mov
gs
rolb
into
mov
les
into
xchg
mov
loope
sbb
inc
repz
shll
sbb
and
mov
daa
mov
sub
adc
mov
jnp
loopne
fwait
mov
in
push
dec
or
push
scas
inc
lock
xchg
gs
dec
call
rcl
scas
or
enter
inc
mov
dec
dec
jbe
test
xor
cmpsl
inc
mov
out
jg
je
sub
add
cld
stos
rorb
sub
push
sbb
adc
pop
inc
pop
inc
xor
or
adc
pop
lock
icebp
lds
sub
scas
adc
fidivs
fnstcw
mov
lds
xchg
mov
push
lea
shll
sahf
jl
fsts
psubq
mov
daa
xor
test
push
xchg
mov
jmp
xchg
fs
cmp
push
sub
subb
nop
cmp
outsl
push
testl
adc
imul
enter
pusha
sbb
nop
pop
mov
pop
and
jmpw
add
inc
aad
xchg
and
push
inc
xor
lea
mov
xchg
lock
or
roll
jae
movl
mov
pop
imul
fnstcw
adc
pop
jnp
sub
daa
cmp
repz
pop
out
jno
pushf
divb
add
sahf
paddb
gs
jle
jnp
lahf
outsl
rcr
dec
dec
push
into
mov
push
out
add
scas
std
mov
cmp
sbb
out
sub
xchg
push
adcb
aaa
mov
dec
js
sahf
movsl
fnstsw
add
repz
les
add
cmp
fistpl
movsb
iret
xor
in
sub
pop
adc
or
aaa
insl
shll
gs
dec
cltd
pop
mov
xchg
scas
and
pop
mov
pop
xor
mov
jnp
lds
aaa
push
add
xlat
push
data16
adc
outsl
pop
jae
pusha
movsb
jb
mov
and
add
cmc
addr16
test
dec
jo
xor
dec
or
push
test
in
frstor
sbb
data16
sti
mov
fisubl
lret
addr16
out
in
cmp
add
mov
icebp
int
sarb
hlt
mov
and
jno
sbb
inc
loop
sbb
inc
lea
mov
lods
pop
jle
inc
add
bound
mov
mov
imul
add
xchg
jmp
andl
in
jno
jmp
adc
sub
cld
ljmp
in
in
stc
out
push
sbb
jae
pop
out
xchg
out
lahf
jae
in
lds
mov
jecxz
jae
fwait
stos
gs
out
in
cld
lret
lds
sub
dec
scas
add
ja
jl
mov
pop
mov
pushf
in
das
or
flds
je
dec
mov
fs
sub
out
stos
out
adc
inc
xor
adc
add
push
enter
pop
add
cli
mov
addr16
xor
jl
outsl
mov
mov
orl
rcrb
pop
lret
xor
inc
xchg
test
lods
stc
sub
movsl
cmpsb
cmp
cmpsl
sbb
cmpsb
and
popf
in
sti
cmp
mov
cmp
in
or
or
cmp
inc
scas
xor
pop
xor
out
mov
pop
inc
call
or
test
les
jae
jge
imul
ret
out
pop
jmp
push
ret
cmp
jno
or
jno
and
sti
jae
in
mov
inc
or
inc
pushl
scas
sbb
rclb
fs
and
dec
ja
mov
mov
les
scas
out
jne
adc
or
sub
test
gs
ret
in
and
adc
sbb
or
mov
ret
inc
daa
negl
lea
shrl
lcall
aam
add
lds
mov
addr16
dec
out
mov
loopne
pop
pop
add
sbb
outsl
fwait
sbb
movb
push
aam
subl
and
ss
cli
add
fdivrl
cwtl
loope
call
cwtl
lds
insb
bound
int
xchg
xchg
mov
cmp
adc
push
cmc
cmp
push
js
mov
add
lods
ret
mov
or
pushf
test
jne
cli
std
jecxz
test
pop
adc
loope
mov
and
push
fstps
fidivrl
xchg
ja
jnp
fiadds
add
push
push
push
test
jns
push
mov
add
xor
adc
ret
daa
pop
inc
gs
xor
jge
sti
pop
outsl
add
rolb
fiaddl
ja
push
adc
mov
mov
ret
mov
fistpl
jmp
stos
jmp
dec
inc
mov
aad
das
pop
cmp
jns
and
out
add
popl
mov
sbb
lcall
shrl
jp
push
scas
in
xor
inc
inc
cld
shll
aaa
mov
cmp
mov
andl
loop
mov
out
insb
sub
jle
les
push
dec
sahf
push
imul
sub
cmpsb
pop
jp
inc
leave
pushf
xor
jmp
add
ret
inc
push
ja
inc
add
insb
jne
or
std
div
mov
cmpps
rcrl
subl
and
lock
add
lods
repz
mov
fistpll
in
stos
and
fmuls
ss
cmpsl
cmpsl
rolb
add
addr16
divl
mov
stos
adc
add
outsl
cmp
cmp
fcoml
arpl
mov
insl
dec
pop
repnz
repz
mov
gs
mov
out
in
jno
fs
mov
cmp
jp
adc
dec
or
lret
sub
sbb
xor
mov
fdivrl
pop
pop
les
inc
fstps
loope
repz
sti
fsubr
cltd
pop
xchg
xchg
inc
cmc
lds
add
xchg
mov
incl
and
jo
in
inc
aas
mov
stos
dec
mov
mov
mov
or
dec
push
js
in
mov
mov
lahf
jp
mov
sbb
xor
xor
or
cs
pop
pop
xchg
jecxz
mov
cld
mov
adc
mov
int
outsb
and
pop
mov
push
fisubs
xor
stc
mov
cmpsl
rorb
notl
fldl
push
add
repz
or
cmp
mov
fisttpll
mov
std
mov
push
insb
in
imul
sub
and
imul
add
insl
faddl
int3
and
mov
rclb
mov
xor
call
out
inc
xor
insl
sbb
insl
lods
add
mov
js
inc
jnp
test
cmpsl
scas
xor
or
mov
push
push
fnstcw
orb
mov
mov
mov
idivb
pop
inc
arpl
cmpsb
or
imul
insb
add
jae
mov
adc
out
aad
or
mov
test
sbb
xchg
insl
enter
cld
fnstsw
lods
std
sub
pusha
mov
and
push
out
vpsubb
lods
movsl
mov
pop
loope
cmpsb
out
hlt
xor
gs
and
movsl
mov
divl
jg
and
std
xchg
add
pop
das
in
or
jo
scas
xchg
dec
jne
incl
push
cwtl
push
pusha
jno
pop
cmpl
int
or
pop
ljmp
outsl
pop
filds
stos
jae
ljmp
fsubrp
adc
cmp
fildl
test
add
sbb
mov
push
pop
dec
fildl
xchg
sbb
pop
push
je
mov
xchg
lods
jge
mov
cmpsl
jp
mov
outsb
push
pop
mov
int
mov
fstl
out
fisttpl
xor
push
jne
pop
sbb
insl
pop
test
dec
faddl
addr16
cli
iret
ret
xchg
jg
ja
out
pop
cmp
inc
das
mov
inc
ja
cmp
fsubs
add
jb
sub
mov
lds
orb
sub
inc
cmp
cmp
loop
arpl
movsl
pusha
mov
arpl
outsl
ds
outsb
push
clc
aad
rclb
add
mov
in
mov
in
in
inc
into
cmpsb
xor
xor
xor
addr16
imul
cmp
adc
mov
sbb
ret
mov
dec
out
leave
std
and
pop
in
inc
xchg
dec
mov
fistps
xchg
test
sbb
adc
lds
mov
lahf
daa
lcall
repnz
jl
fwait
mov
cmp
add
sbb
adc
sbb
and
loopne
scas
and
or
xor
cmp
stos
sub
cmp
imul
int3
mov
mov
stc
mov
cmc
cli
lea
repnz
mov
imul
pop
das
adc
into
xor
sbb
add
inc
pop
stos
repz
mov
iret
and
lret
hlt
push
jmp
cmp
aam
or
xchg
jne
mov
mov
or
outsl
adc
jp
adc
push
hlt
xchg
in
icebp
int
push
jmp
pop
ret
stos
pusha
jp
daa
or
mov
dec
sub
loopne
repz
lret
or
dec
clc
sub
mov
sub
or
jb
out
test
pusha
push
mov
xor
jns
adc
mov
lcall
fwait
les
xorl
push
lea
mov
shrl
push
aas
push
jo
lock
mov
jle
sbb
sbb
jo
push
cmp
mov
ret
sbb
push
ret
in
add
dec
les
jl
cli
xchg
ja
push
into
xor
xor
pop
and
ffreep
cmpsl
mov
and
scas
adc
pop
mov
fsubr
scas
or
gs
xlat
daa
add
push
sub
inc
aas
push
es
xchg
dec
dec
dec
adc
xchg
and
mov
and
das
jg
out
xor
pop
fxch
or
mov
movsb
cmp
stos
sub
popf
mov
xorl
inc
imul
sarb
ret
sub
mov
fldl
sbb
adcl
lock
cmp
les
inc
fisttps
iret
addr16
add
mov
loopne
push
lret
bound
stc
dec
fs
in
out
les
adc
mov
mov
jno
push
fistl
out
out
mov
int
loopne
sub
ret
fiaddl
or
mov
cltd
cmp
sti
inc
lcall
les
mulb
ret
js
sub
std
push
and
jecxz
adc
data16
cmp
or
pusha
inc
jg
popf
or
popf
and
dec
les
repnz
cltd
call
xor
cmp
mov
out
mov
inc
lcall
rcr
mov
rcll
adc
sbb
stos
or
dec
lock
shlb
adc
mov
push
orb
faddl
mov
repz
add
mov
loop
mov
and
push
js
xor
or
xchg
mov
dec
aaa
sahf
push
cmpsl
je
movsl
in
adc
sarb
cmpsl
out
sub
sub
cmc
dec
mov
scas
jp
and
or
jle
xchg
add
gs
cmp
pusha
in
add
mov
jae
adc
or
shrb
fdiv
adc
or
shll
dec
or
rcr
jno
jns
inc
lcall
push
mov
outsb
int3
mov
ja
xchg
mov
in
cmp
loop
adc
sti
xorl
adc
subl
fimull
sar
mov
dec
mov
bswap
cs
mov
adc
jo
inc
cltd
outsl
test
lahf
push
sbb
pop
pop
and
jne
shll
pop
cmp
repz
sarb
pop
testl
repz
fwait
xor
mov
or
jp
push
mov
testl
or
out
cwtl
mov
or
sbb
ja
jno
xorl
repz
inc
xchg
xchg
shrb
jl
fidivs
jg
clc
cwtl
inc
mov
mov
sbb
ss
std
jne
mov
jb
rcrb
out
xor
out
fdivl
out
orb
stc
rep
or
sub
call
mov
mov
rclb
sbb
pop
fwait
inc
xchg
les
ss
mov
imul
je
leave
push
and
shrb
bound
orl
jg
rclb
in
mov
ljmp
std
cmp
xchg
aad
xchg
jmp
adc
cmp
icebp
jne
jns
push
or
or
test
adc
lods
cltd
cmp
outsl
or
or
fs
mov
mov
dec
xlat
cmp
or
rep
call
xchg
pop
or
jmp
xlat
lea
dec
sar
sub
dec
pop
mov
inc
add
ss
or
pusha
pop
jbe
test
or
sub
or
push
or
and
inc
or
je
cmp
push
test
inc
arpl
fdivrp
out
xchg
and
push
sub
mov
mov
loope
mov
mov
fdivrs
xchg
or
jmp
dec
nop
sub
fistps
outsl
jnp
push
xchg
test
ljmp
inc
mov
adc
xchg
push
sbb
add
out
out
lock
out
fwait
or
mov
rorl
shll
sub
pop
or
stos
ljmp
lret
pop
int3
push
or
std
lods
jg
jns
mov
data16
test
sub
sbb
fwait
mov
rclb
xchg
or
sub
mov
or
mov
or
shll
in
inc
lea
fwait
mov
cmp
dec
rcll
push
or
pop
or
jecxz
mov
loop
adc
mov
cmp
mov
or
jl,pn
ss
popa
cmp
int
or
sbbb
mov
out
jb
mov
jne
and
out
mov
negl
das
dec
and
popf
cmp
in
or
loop
xchg
xchg
xor
cmp
pop
pushf
xchg
out
mov
or
dec
dec
or
or
popf
dec
ljmp
or
lcall
cs
sbb
ret
dec
shll
or
inc
xchg
xchg
mov
outsl
cld
testl
ja
dec
jae
or
mov
fildl
and
mov
addb
leave
push
sbb
xchg
arpl
xchg
getsec
jecxz
adc
cmpsl
add
movsl
in
adc
sub
lahf
xor
cli
xchg
sbb
js
fstl
and
or
shll
push
push
mov
pop
int3
lods
add
into
aas
mov
sbb
je
or
subl
mov
pop
adc
push
dec
lahf
test
add
scas
mov
inc
or
pusha
rcrb
loopne
iret
mov
dec
push
lock
or
inc
fwait
add
cs
mov
add
test
push
lea
out
jecxz
cmp
mov
inc
inc
add
adc
add
or
int3
or
jmp
or
jo
sub
xchg
add
pop
xchg
xchg
add
adc
and
inc
jecxz
sbb
rcrl
aad
es
and
cmpsl
add
jno
inc
mov
pop
sbb
add
xchg
xchg
loopne
or
scas
jmp
cmp
aas
iret
xor
adc
jae
popf
nop
js
and
and
sub
jmp
mov
sbb
into
iret
pusha
fwait
loope
xchg
push
mov
inc
or
lahf
stos
or
ss
leave
or
pop
cltd
arpl
push
inc
xchg
outsb
lret
sub
int3
bound
or
mov
dec
stos
dec
mov
arpl
and
xchg
jge
jmp
add
loope
xchg
mov
or
iret
int
or
push
div
lret
lret
in
xchg
jmp
mov
dec
or
sbb
or
jo
lret
out
cwtl
scas
iret
pop
outsb
inc
sbb
add
push
and
sub
iret
push
fwait
in
dec
out
ds
sti
lock
or
dec
incl
or
testb
ss
cld
sbb
or
push
sub
imul
jp
xlat
or
add
out
sbb
popa
sbb
adcb
xchg
pop
aad
ja
jle
xchg
adc
jnp
int
incl
or
sbb
incb
dec
repnz
jno
or
ljmp
or
cmc
mov
or
xchg
jno
inc
les
mov
mov
sbb
pop
cmp
inc
add
xchg
jbe
dec
sub
out
mov
xor
or
push
fld1
stos
and
pop
mov
out
out
test
sub
push
inc
push
lret
fildll
lods
scas
or
pop
xor
mov
add
shll
pop
pop
or
hlt
jae
outsb
sbb
dec
jge
push
mov
add
cmp
cs
aas
push
movsl
call
fbld
loop
test
or
cmp
add
ja
pop
add
inc
fildll
jmp
or
pop
xchg
into
push
sub
sub
nop
es
adc
pop
lcall
or
jg
aad
xchg
loop
or
out
xchg
movsl
sbb
es
or
into
jp
test
or
outsb
imul
xchg
jge
or
popf
sub
pop
xor
notl
jg
decl
fucomi
dec
and
mov
xor
xchg
or
or
mov
and
ret
mov
fsubs
jb
add
push
or
test
pop
insb
pop
or
jle
std
jmp
adc
je
push
nop
stc
push
sub
add
movsl
fs
iret
inc
lcall
repz
jne
or
mov
loop
imul
int
popa
ljmp
or
xor
sahf
fbstp
test
mov
sbbl
int3
or
add
cmpsl
call
dec
cmpsb
mull
clc
mov
push
or
stc
out
sti
cmpsb
pusha
sub
icebp
add
inc
or
and
inc
sbb
sti
mov
movsb
rorl
or
arpl
pop
je
and
add
mov
pusha
push
movsl
add
decl
push
loopne
pop
add
pop
ret
fucomp
lcallw
out
outsb
je
lds
xor
pusha
pop
pop
aam
jecxz
pop
and
or
stc
pop
add
shl
pop
out
mov
test
sbb
lds
andb
jae
lahf
jbe
adc
pop
add
dec
cld
iret
imul
jae
inc
add
xor
loopne
or
xchg
sbb
sub
mov
mov
mov
sbb
cmp
jl
fnstsw
or
rorb
and
and
test
and
fsubrp
cmp
xchg
pop
jg
insb
push
inc
mov
push
imulb
pop
scas
ficoms
or
stc
enter
jmp
add
add
mov
push
ret
out
sbb
fidivrl
mov
jo
and
dec
or
xor
call
adc
add
inc
imul
loop
lods
mov
scas
ss
decl
adc
pop
das
repnz
push
xor
or
popf
call
aad
mulb
clc
jns
inc
dec
or
push
lods
xor
and
or
push
outsl
iret
mov
cmp
fst
sbb
das
or
or
ror
je
shll
cmp
and
mov
or
or
mov
out
xlat
loop
or
push
fistpl
subl
fcomps
dec
pop
jae
cmp
daa
sbb
popf
ret
test
lods
dec
xor
jecxz
js
mov
mov
adc
aad
or
jl
outsl
fdivl
or
loop
insl
or
or
xor
pop
das
mov
out
loope
mov
cmpsl
add
inc
repz
fucompp
push
xor
or
mov
sarl
dec
out
push
stos
jge
add
cmp
clc
cwtl
adc
dec
leave
pushf
jp
and
lret
push
rolb
mov
push
jo
cld
or
sbb
or
jle
cmp
in
xor
dec
mov
or
lret
or
jl
mov
ja
or
sub
push
bound
cmpsb
js
sahf
xor
iret
and
cmp
loope
and
xchg
out
dec
arpl
jecxz
sbb
xchg
psubusb
mov
test
ret
hlt
jecxz
add
cld
dec
push
and
push
test
pop
cmp
adc
mull
in
cmp
add
stos
in
fs
nop
divl
push
pop
and
cmp
fistps
les
mov
sbb
and
sub
mov
and
xor
xchg
inc
cmp
xchg
pop
pop
mov
mov
loopne
push
mov
lock
les
pop
add
and
cmc
adc
pusha
cmp
mov
daa
rolb
push
mov
sarl
loope
out
inc
mov
dec
and
jnp
mov
stos
or
les
xor
xor
cmpsb
mov
repnz
rorb
mov
lea
lods
sub
mov
pop
in
inc
mov
jge
or
or
roll
scas
mov
and
addr16
adc
mov
rol
add
dec
jno
fidivrl
push
repnz
in
or
cmpsb
je
sahf
dec
jp
and
push
xor
outsb
adc
rcrl
cld
mov
xlat
pop
shlb
fs
int
sub
add
cmpsl
fistl
ds
or
jl
iret
and
add
rorb
stos
and
aaa
rorb
notl
loop
cmp
jp
ja
push
cltd
outsl
cmp
mov
subl
lods
into
shlb
cmpsl
aaa
das
xor
ret
mov
lahf
cltd
and
adc
dec
lds
jb
add
mov
jmp
arpl
ret
xchg
sbb
xor
fwait
daa
pop
push
stos
mov
push
add
lods
inc
jbe
or
sub
mov
fiaddl
or
lds
push
imul
and
jp
or
mov
mov
or
jmp
lret
fs
adc
jae
mov
icebp
pop
idivl
repz
std
test
push
mov
xchg
test
cmp
push
lcall
mov
lret
sbb
cltd
jle
into
insb
inc
sbb
add
sbb
test
xchg
jo
cmp
push
in
stos
sub
in
dec
cmp
add
shl
mov
ret
xlat
sbb
xchg
lods
push
mov
pop
rclb
dec
lods
push
xor
mov
je
or
xchg
or
add
cld
jle
and
fs
cmpsb
shlb
jno
mov
dec
daa
inc
pop
fdivrl
nop
mov
pop
dec
popa
cli
std
and
xchg
xor
add
cmpsl
or
mov
ret
xchg
mov
adc
push
mov
fs
push
int3
mov
addr16
mov
sbb
ficoms
cmp
cmp
push
scas
jb
inc
aas
mov
or
mov
les
and
test
sub
movsl
lods
push
lcall
les
testl
aad
push
out
rcll
shrb
pop
push
push
roll
mov
out
or
adc
aas
inc
nop
call
testb
inc
push
loop
inc
clc
fwait
cltd
sub
xorl
push
mov
cmpsl
sub
or
dec
adc
cltd
popf
push
fists
push
dec
mov
or
push
aas
cmp
shll
mov
and
inc
aam
cld
mov
loopne
add
insl
cmp
pop
scas
or
jbe
xchg
jnp
jl
or
lds
push
lods
test
mov
xchg
or
mov
cmp
mov
test
dec
loop
ss
cltd
popa
sub
stos
shl
mov
mov
andb
pop
pop
sbb
or
outsb
inc
rol
roll
xchg
dec
into
ficoml
sbb
ret
std
jle
shrl
sbb
cltd
imul
xchg
push
popa
or
dec
imul
sub
or
mov
jb
and
or
xchg
in
pop
and
cwtl
xor
test
sbb
sti
jl
or
pop
push
jecxz
and
or
inc
jp
inc
cli
movsb
inc
incl
sbb
inc
cltd
or
mov
ljmp
mov
mov
pop
cmpsl
dec
push
or
xchg
pusha
in
xorl
sub
and
outsl
cmp
mov
xchg
mov
or
ret
mov
imul
in
and
or
add
push
cmpsb
and
jg
adc
int
push
test
dec
mov
or
xchg
cli
cmpsl
ja
or
movsb
mov
or
je
sbb
movsl
jg
repz
or
pusha
cwtl
clc
outsl
shll
ss
sahf
inc
add
mov
movsl
mov
dec
jnp
mov
dec
and
or
lods
xor
or
add
mov
lahf
or
jmp
push
clc
cmp
in
bound
or
fistpll
stc
sti
divl
cmp
xor
divl
fsubrs
daa
cmp
fstpt
sub
or
ret
jae
das
sub
outsb
lret
aas
add
loopne
mov
xchg
jmp
sbb
xchg
fidivrs
fisttpll
push
into
ret
aad
inc
daa
es
add
sbb
inc
sub
cld
outsl
or
aas
sahf
and
or
push
fwait
lods
cli
dec
sub
and
mov
cmp
in
jne
pop
inc
in
arpl
pop
xchg
xor
aam
or
and
add
push
jo
pop
or
js
cmpsb
daa
xor
dec
loopne
sbb
ja
pusha
lea
enter
pop
je
xchg
es
xor
pop
out
test
xchg
repnz
or
mov
sbb
xchg
cs
cld
mov
xor
and
cs
in
jl
add
lcall
outsb
int
adc
call
arpl
enter
fisubrl
xor
hlt
mov
insl
iret
sbb
or
out
fs
lcall
jo
mov
add
rorl
adc
push
sub
pop
outsl
into
push
hlt
mov
lods
insl
jp
mov
inc
or
movd
dec
pop
or
lret
inc
pop
bound
or
loop
or
call
xor
xchg
jl
jne
xchg
loopne
jns
stos
loop
or
orb
pop
jecxz
pop
jnp
data16
scas
stos
enter
add
mov
sti
jns
mov
sbb
incl
sub
and
xor
cwtl
dec
xor
pop
push
push
inc
add
mov
stos
cmp
lock
xlat
pop
jne
jnp
loopne
call
adc
mov
or
lret
sbb
out
adcb
shlb
push
cli
xor
or
fstps
push
insb
inc
aad
fiadds
cltd
adc
pop
int3
xor
mov
fldcw
shlb
insl
stc
repnz
or
add
scas
or
and
jmp
xor
notb
imull
add
lds
jns
test
cmp
insb
and
pop
std
lcall
xchg
addb
aam
mov
inc
imul
fnsave
push
cmp
std
into
or
cmp
scas
pop
push
pop
dec
jmp
mov
mov
iret
sbb
pop
dec
ret
cmp
mov
es
or
cmp
ror
lods
or
xor
rol
pop
int
pushf
cmp
add
addl
inc
fmull
fistpll
add
bnd
out
and
mov
lods
or
and
fs
cmp
test
in
aam
xor
xlat
outsl
fwait
push
mov
cmp
dec
out
push
scas
cld
add
push
shll
sub
lcall
jge
inc
std
sbb
push
mov
ret
xchg
sahf
inc
add
jge
shrl
fcoms
sti
jecxz
sub
cmpsl
pop
add
stos
add
shlb
push
mov
fiadds
cld
adc
loopne
ss
std
xchg
add
cmpsl
mov
or
sub
or
aam
jo
out
ffreep
pop
mov
sbb
mov
jns
push
test
iret
and
lea
lahf
lret
sti
mov
xchg
cmp
mov
pusha
lahf
or
sub
or
loop
pop
or
cs
lahf
inc
sar
pop
enter
aaa
pop
push
pop
andl
mov
add
adc
pop
leave
pop
aad
mov
test
lods
add
add
pop
or
mov
insb
inc
cmpsb
popf
sbb
add
test
mov
loopne
rcll
cmp
jle
repz
addr16
mov
add
call
out
movsl
sbb
jns
sarl
cmp
loope
pop
cmc
dec
push
fdivrl
add
push
inc
or
mov
iret
push
inc
or
xchg
fmull
sbb
xchg
push
or
scas
sbb
or
jo
fdivrs
mov
lahf
adc
or
lods
out
lret
cli
lea
sbb
inc
inc
sub
jecxz
icebp
cmc
lds
or
popa
xchg
in
cmpsb
std
adc
shrb
mov
cmp
jne
push
mov
das
iret
mov
sub
xorl
in
rcrl
ret
int3
rcl
and
imul
push
addr16
pop
mov
icebp
xchg
cmp
mov
shlb
dec
fcomps
and
sahf
in
out
icebp
decb
add
dec
mov
imull
dec
and
int
dec
add
je
in
out
rorb
movl
or
cmp
lret
xorl
andb
dec
nop
jo
mov
cmp
pusha
lcall
xchg
leave
or
lea
jno
ljmp
mov
in
insb
cmp
jae
int3
rorb
jp
add
fisubrl
js
pop
mov
or
inc
fcoms
add
pop
push
sub
sub
xor
testb
gs
dec
fcmovb
aas
mov
mov
lret
inc
rorb
jg
cmp
or
ja
fnstsw
ds
dec
cmp
outsb
adc
sbb
mov
lds
and
inc
shll
ror
insb
lret
addl
lods
sahf
mov
or
ja
or
pop
lods
lret
jno
test
jg
and
shlb
loop
testb
sti
pop
rcrb
and
xor
imul
ljmp
repz
adc
sbbl
fs
add
out
cmp
cli
loopne
out
cltd
hlt
xchg
lds
pusha
ret
arpl
iret
cld
fxch
or
dec
daa
in
lret
inc
out
inc
pop
outsb
mov
and
and
popf
call
or
arpl
and
xchg
xlat
fisubrs
or
int3
fnstenv
or
imul
sysexit
push
xchg
frstor
xor
or
pop
in
rolb
or
ds
out
daa
or
or
add
inc
shlb
daa
or
imul
lret
mov
movsb
inc
mov
lret
sets
dec
lret
or
lcall
addb
lock
cmp
jge
ds
pop
and
daa
mov
in
pop
pop
in
jle
jmp
notb
inc
inc
pop
jbe
inc
xchg
ret
dec
adc
xchg
and
or
nop
adc
or
mov
out
or
int3
in
shrl
sbb
push
aaa
inc
psubq
fiadds
mov
test
iret
lods
fdivr
jmp
dec
add
dec
insl
pop
or
test
decl
out
jp
jae
push
rcr
or
xchg
mov
inc
or
imul
and
js
jmp
repz
rol
or
inc
lret
jno
divl
sbb
xchg
xchg
or
lods
ds
pop
mov
hlt
sbb
or
fs
movsb
cmpsl
xchg
testl
push
or
and
add
cmp
jge
jne
rcrb
hlt
xor
jmp
outsb
loop
mov
pop
lret
pop
fsubrl
fcmovnbe
rolb
cld
cwtl
imul
cmp
loop
out
insb
push
cmpb
test
xor
push
jb
or
and
add
es
xchg
inc
inc
xor
lret
outsl
int
fs
fmull
repnz
scas
out
in
pop
mov
dec
sahf
add
xor
jns
cmp
adc
inc
mov
xchg
shll
movsl
aaa
dec
mov
bound
and
jns
mov
shll
or
adc
gs
add
dec
leave
sub
data16
push
enter
shlb
add
or
insb
adcl
out
mov
loop
pop
mov
mov
xor
shlb
scas
jmp
sub
cmp
les
into
or
lds
jp
movsb
or
std
in
xchg
loopne
out
push
sti
mov
lock
inc
or
cmp
or
xor
mov
push
adc
imul
ds
xchg
or
clc
pop
rcl
jecxz
out
lds
testb
add
add
adc
push
rcr
add
or
fwait
xchg
push
add
sbb
add
add
sti
stos
push
ljmp
roll
push
movsb
mov
dec
cli
lahf
push
mov
js
or
cmp
pop
mov
cmpsb
mov
pop
in
bound
mov
je
add
mov
insb
ss
push
jnp
negl
sar
loop
cmp
or
in
push
cmovne
lret
inc
filds
adc
call
inc
jb
iret
jnp
xchg
bound
out
mov
add
push
push
add
lods
cli
incb
mov
aaa
lods
addr16
iret
aad
sbb
sahf
xchg
sbb
cmpsb
add
mov
sbb
add
aam
adc
jge
inc
or
or
or
rcl
sbb
fwait
clc
push
adc
bound
xor
adc
pop
dec
movsb
mov
repnz
ss
test
dec
dec
shlb
and
or
inc
lods
mov
or
jmp
pop
cmpsb
mov
fstl
das
xchg
lret
dec
out
ret
scas
push
push
xchg
add
cmp
add
ljmp
or
mov
mov
fwait
add
push
aam
cwtl
push
rorb
ret
stos
cmpsb
mov
inc
int3
test
xor
add
xchg
add
jo
je
sbb
jp
sti
mov
push
in
mov
mov
adc
and
in
scas
cmp
inc
out
jo
or
out
lcall
icebp
add
pop
mov
jae
add
out
jle
xchg
inc
or
pop
js
mov
out
or
mov
or
fcmovnu
push
out
cmc
push
xor
mov
shl
hlt
ror
pop
js
mov
or
out
daa
push
sub
ret
je
mov
gs
insb
sar
add
inc
mov
or
pop
ja
or
jecxz
inc
ja
mov
inc
fwait
mov
or
push
cld
pop
push
es
out
daa
push
or
or
sbb
or
aad
std
int
stos
mov
mov
sbb
jne
ja
dec
test
inc
push
test
add
mov
add
mov
cmp
mov
pop
sub
aaa
testl
adc
les
push
adc
aam
in
lods
test
loope
or
jne
rorl
fwait
das
add
lds
mov
les
ja
rclb
and
stc
loop
jno
jne
sub
imul
arpl
cmp
lret
jb
outsl
sbb
push
repnz
pushf
inc
inc
push
repz
sbb
pop
sub
pusha
mov
lea
inc
inc
add
pushl
inc
mov
xor
or
push
fidivs
test
or
inc
iret
int3
dec
rcrb
jne
bound
loopne
vrcpps
sahf
push
or
push
sahf
sbb
ja
fldl
jle
dec
mov
rcr
cmp
scas
into
data16
pop
mov
push
cmp
push
fiadds
and
sar
mov
out
xchg
mov
loopne
mov
les
mov
sub
test
inc
int3
stos
pop
mov
cld
shlb
data16
pop
jnp
cmpl
test
and
repnz
pop
testl
insb
jae
test
je
jns
mov
inc
xor
ja
push
fucom
loope
clc
xor
mov
arpl
push
scas
push
dec
mov
test
mov
movsl
pop
ljmp
add
outsb
out
pop
mov
jo
es
sub
jnp,pt
aad
call
ss
sahf
fnstsw
loopne
rorb
dec
cmp
movsb
sub
mov
mov
jg
ds
cli
mov
shlb
push
mov
insl
lahf
std
cmpsl
lcall
xor
cld
or
lea
cmp
jns
imul
pushf
test
fmull
mov
call
or
imul
inc
fwait
movsl
add
or
std
xor
icebp
outsb
mov
cli
stos
cltd
imul
inc
cmp
lcall
cld
mov
insl
dec
jecxz
ret
sub
sahf
cltd
movsb
or
roll
cmp
ret
shll
sub
arpl
or
jae
or
inc
adcl
out
push
push
inc
push
addb
arpl
cmp
jp
or
inc
push
out
call
sbb
xor
testl
inc
pop
fisttps
mov
lcall
in
fs
inc
add
icebp
mov
xchg
scas
or
mov
mov
fcomip
lds
or
dec
pop
add
jb
add
jne
inc
gs
mov
jge
jo
or
out
es
pop
shl
jb
call
out
cmp
fadds
xor
lret
sbbl
movsb
mov
into
rol
out
push
or
push
jo
xchg
mov
mov
or
jmp
lock
out
add
inc
xchg
or
sub
or
jnp
out
mov
pop
xchg
adc
out
scas
mov
xchg
adc
fistps
das
dec
test
pop
xchg
stos
or
or
pop
aas
pop
in
cmc
movsl
orb
cmpl
jns
fiaddl
and
lcall
rorb
cmp
call
push
push
sub
imul
lds
enter
cmp
aam
add
or
sahf
sbb
or
addl
ret
sbb
inc
sbb
je
test
or
pop
jnp
or
movsb
cs
jmp
outsb
gs
or
or
inc
xchg
imul
inc
push
sub
sbb
inc
ret
bound
lods
mov
iret
cmp
std
decl
sbb
lock
pop
movsb
rcll
sbb
popa
notl
inc
mov
or
in
inc
xchg
lods
or
andl
stc
or
cmp
orb
scas
rorl
inc
xlat
xor
or
insb
push
or
or
cmpsl
rclb
imul
or
add
or
xor
mov
pop
adc
pop
fs
or
cmpsb
iret
push
sarb
sti
cwtl
push
and
pop
push
dec
ds
dec
add
pop
adc
fstps
or
xor
or
pop
aam
out
xor
cli
lods
pop
dec
imul
lret
pushf
add
sti
or
out
jno
mov
addr16
cmpl
lock
pop
stc
push
sar
jl
jnp
add
pusha
xchg
fwait
or
dec
mov
xchg
fistpl
lea
jns
ficoms
or
sar
dec
xchg
lock
iret
mov
addl
and
testl
jg
ds
fs
jb
nop
inc
aam
sbb
adc
mov
mov
mov
pop
or
dec
xchg
ja
add
shlb
mov
test
mov
push
or
ret
int
mov
pop
or
sub
dec
fisttpl
adcl
mov
cmpsb
push
add
xor
pop
insb
mov
ljmp
and
sub
adc
push
shll
mov
jo
pop
outsl
dec
andl
dec
ret
sub
xchg
aas
cli
or
or
imul
movsl
cwtl
push
or
mov
inc
mov
orb
gs
mov
or
cmp
cwtl
in
sub
or
pop
pop
movsl
mov
xor
fisttps
jp
xor
dec
dec
lods
or
test
dec
jo
or
and
or
push
repnz
mov
cmp
sbb
pop
cmp
pop
outsl
jle
add
sub
mov
jae
inc
push
enter
decl
ret
adc
inc
scas
jge
test
rorl
faddp
push
mov
addr16
je
lcall
cmc
xor
jns
andb
les
pop
inc
sub
add
jl
ljmp
inc
push
or
or
xchg
shll
push
jb
stos
or
or
push
sub
iret
pop
dec
jmp
mov
xor
sub
out
or
and
xchg
fdivrs
or
xchg
insb
ficoml
in
stc
test
into
jecxz
or
fsts
jns
fwait
orb
icebp
adc
inc
add
mov
std
pop
test
xor
jge
mov
fsub
xchg
out
fldt
hlt
pop
ds
xorb
xchg
outsl
jbe
push
nop
call
dec
cld
sub
or
int3
xor
or
fmuls
call
shlb
lret
mov
das
sub
adc
scas
lods
lret
jl
cmp
dec
push
cmp
shrb
push
push
popf
movsb
inc
test
pop
stc
inc
cmpsb
pop
loope
or
std
mov
scas
adc
and
mov
div
das
or
stos
test
mov
rcrl
cltd
in
and
xchg
and
fsubl
xchg
or
sub
push
jae
add
loop
or
pop
ss
adc
mov
repz
arpl
jno
and
mov
inc
aam
iret
jb
or
cli
xchg
repz
cltd
lahf
test
jo
or
repnz
sub
mov
iret
cwtl
and
mov
ret
inc
xor
cmp
pop
insl
imul
test
shll
out
xor
jns
dec
ret
dec
dec
jge
sbb
test
push
std
roll
mov
lods
je
sbb
add
and
pop
or
mov
mov
out
jo
ret
pop
add
out
xchg
pop
repnz
mov
out
arpl
shll
add
push
add
aas
mov
lahf
pop
mov
jmp
shl
pop
div
xchg
jae
add
jge
add
sub
test
stos
mov
pop
jnp,pt
or
jecxz
mov
fisubl
or
and
orl
mov
cmp
in
push
jp
jl
jno
or
arpl
adc
mov
rorb
int3
push
out
mov
xchg
or
jge
jnp
xchg
bound
test
or
pop
out
std
sti
stos
or
add
mov
in
add
pushl
adcl
cmp
jns
in
xchg
mov
push
add
aam
test
inc
add
xor
jp
outsb
dec
jb
or
out
fs
xor
mov
dec
addb
adc
or
mov
push
or
and
cmpsb
inc
xor
xor
mov
fsubs
and
loope
xchg
in
push
and
sub
jmp
mov
lea
mov
xor
sub
into
or
je
sub
aam
icebp
mov
loopne
xchg
or
dec
fiaddl
jle
cmpsb
sub
lret
xor
mov
aad
inc
or
insl
or
inc
clc
adc
xor
or
dec
dec
repz
sbb
push
mov
add
sub
imul
or
in
jg
or
bound
fcmovnu
setns
mov
jp
jnp
xor
add
iret
push
xchg
add
cmc
andb
mov
and
inc
fcoms
insl
or
pop
jle
decl
inc
mov
push
dec
xchg
pop
or
jmp
dec
idiv
scas
jo
xor
pop
cwtl
cmpsb
mov
inc
push
test
dec
cmp
xchg
push
mov
mov
cld
inc
data16
cmpsl
and
pop
jne
pop
cs
inc
dec
arpl
xor
or
or
or
pop
addl
test
xor
dec
cmp
or
push
ficoml
fisubrs
add
movsl
out
xchg
xchg
nop
outsb
and
incl
xor
or
inc
test
cld
jecxz
xor
bound
mov
outsl
xchg
mov
sbb
mov
fdivrl
mov
or
fstpt
add
jae
test
ljmp
mov
in
push
test
or
cmp
add
lock
mov
dec
cltd
pop
ljmp
pop
imul
sbb
xor
sahf
adcl
mov
arpl
xchg
mov
rolb
iret
fistpl
add
test
inc
mov
lods
negb
xchg
ret
jnp
movsl
mov
pop
add
xchg
sub
les
int3
test
fnstcw
dec
in
push
cmpsl
xor
inc
and
sbb
cmp
std
and
not
lret
scas
mov
or
das
dec
cmp
mov
inc
out
lahf
sub
shrb
inc
mov
popf
add
loope
sub
adc
rcr
cs
sbbl
xor
sub
jbe
rorb
orb
std
int3
add
jno
lcall
cmpsb
xor
push
dec
pusha
sbb
sbb
or
mov
fidivrs
mov
ret
mov
pop
fcomps
mov
push
adc
dec
add
inc
xor
xchg
or
fcmovb
xchg
mov
or
jne
xor
ficompl
mov
fsub
jns
or
shlb
pop
push
adc
fs
test
ret
pop
and
insl
inc
lea
mov
pop
push
mov
or
pushf
int3
faddl
rcrl
sub
negl
rcr
es
in
andb
add
mov
roll
jae
sbb
in
or
sarb
out
dec
insb
clc
out
test
les
adc
in
out
mov
jg
xor
jge
lcall
out
jmp
aad
pop
test
test
inc
mov
je
pop
adc
push
icebp
add
mov
repz
sbb
clc
fsubrl
insl
lods
mov
xchg
shlb
mov
popf
add
sub
mov
xchg
sub
or
xchg
scas
inc
hlt
mov
push
pop
les
pop
pop
mov
or
xor
mov
dec
in
jae
mov
test
push
mov
sbb
inc
adc
xchg
sbb
or
and
mov
mov
fadd
jns
les
cli
jnp
aaa
jae
mov
mov
mov
je
or
into
sub
daa
inc
sahf
scas
pop
push
mov
mov
push
clc
inc
rcll
out
aam
popa
insl
mov
jl
fisttpl
out
or
sbb
pop
pop
sarb
test
jae
inc
mov
sub
adc
lds
adc
adc
test
dec
aas
int
decl
xor
mov
aad
mov
pop
pop
outsl
cmpsl
cmp
sub
addr16
cmpsb
cltd
inc
aad
jbe
adc
ror
xadd
gs
popl
out
and
adc
push
jns
popa
lds
pop
sbb
mov
das
add
mov
pop
add
out
jge
xor
xchg
hlt
xor
nop
mov
rcl
dec
mov
or
pop
adc
out
popf
jecxz
daa
mov
dec
sub
sti
sar
out
ja
inc
cs
sub
push
cmc
jecxz
and
subl
jle
mov
nop
mov
dec
fistpll
jnp
and
rorb
cli
clc
push
sbb
ljmp
and
test
and
xor
das
mov
adc
repz
or
fs
fimull
rcrb
sub
out
fmuls
insb
mov
blcs
dec
xchg
in
sbb
lds
fs
lea
les
xchg
inc
hlt
pushf
fildll
fildl
mov
add
in
push
pop
xor
pop
loop
dec
enter
repz
dec
loop
add
outsb
sbb
and
sub
xchg
testl
pop
mov
int3
push
inc
xor
arpl
dec
xor
and
or
push
fwait
in
mov
faddp
imul
mov
sbb
lds
scas
adc
out
and
inc
test
bound
add
jae
xchg
adc
ret
push
inc
or
cmp
push
mov
les
mov
fisttpl
sub
addl
hlt
aam
pop
outsb
shll
test
sahf
movnti
mov
cmpl
mov
push
ret
cmp
out
nop
ret
cli
sub
jo
add
je
les
lock
add
pusha
sar
daa
mov
adc
lcall
clc
mov
orb
mov
add
mov
xchg
dec
out
cwtl
sub
loop
jnp
and
cmp
lret
fmuls
sbb
mov
jp
aaa
stc
push
pop
rcrb
out
mov
pop
pop
ja
bound
test
mov
movsb
fstl
and
das
push
iret
icebp
jge
sbb
mov
mov
mov
cmp
outsl
insl
iret
outsl
xchg
jle
jb
std
loope
mov
lea
push
mov
mov
lods
shrl
mov
adc
loope
inc
pop
movb
or
cmp
sbb
out
add
inc
pop
stc
sbb
cmp
std
add
and
ret
lds
test
fmull
sti
addr16
xor
lcall
scas
push
mov
aam
cmp
out
pop
imul
lods
and
addr16
es
xchg
ret
jno
mov
mov
fdivrp
stos
outsl
push
xor
mov
adcb
pop
aaa
ds
subl
add
ror
add
sbb
daa
les
aaa
cli
add
cmpsl
repnz
rolb
or
mov
add
daa
pop
xchg
sahf
gs
jl
into
dec
out
and
stos
scas
xor
mov
orl
mov
cmpsl
pop
ret
insl
jge
repz
dec
mov
jns
jae
or
push
xchg
push
outsl
jbe
pop
insb
aad
repz
daa
ret
and
lods
or
or
dec
leave
sub
ss
sbb
xchg
fbstp
push
cmpsl
data16
or
scas
fldt
mov
jne
fidivrl
bnd
scas
outsl
push
xor
mov
or
pushf
jg
les
xchg
jecxz
pop
scas
insl
xor
inc
ret
daa
out
loopne
nop
jo
and
test
sub
sti
add
test
sbb
xchg
cmc
mov
in
fisttpll
jmp
lods
adc
mov
pop
scas
xchg
jl
popf
mov
jge
mov
nop
aas
sbb
xchg
sub
stc
es
test
test
mov
pop
sahf
dec
jp
sbb
and
or
push
repz
cs
mov
dec
xor
push
fiadds
lret
sbb
scas
jne
xor
lea
out
xchg
cmpsl
mov
xchg
daa
test
mov
jae
pop
insl
es
xchg
jns
ret
and
in
mov
insl
or
fxtract
pop
js
push
mov
jl
movsl
and
mov
xor
aaa
aad
ja
sub
inc
lea
out
dec
mov
pop
loop
xor
mov
data16
cli
jnp
rcrb
iret
sbb
sahf
inc
cli
sbb
bound
out
sbbb
mulb
lds
fistl
std
xchg
les
or
fisttps
fidivl
mov
loope
adc
mov
fwait
repz
cli
push
repz
ss
cltd
jnp
push
shr
stc
cmp
xchg
pop
sti
dec
sarb
lret
inc
les
repz
adcl
mov
sub
jecxz
lahf
xchg
in
or
cmp
dec
pop
and
out
xor
xlat
in
xor
movsb
mov
fwait
xor
out
aad
in
sti
loop
sbb
xchg
in
push
in
and
and
or
les
test
stos
push
push
les
dec
je
push
sahf
xchg
add
pop
adc
test
push
dec
and
arpl
mov
mov
loope
in
pop
inc
sarb
dec
fld
inc
imul
dec
dec
ficoms
repz
add
ja
test
arpl
les
cmp
xlat
jb
sbb
mov
insl
xchg
into
jne
daa
mov
xchg
sti
push
fdivp
cmp
or
mov
and
out
mov
test
xchg
adc
and
adc
aam
cmp
sub
mov
iret
sbb
addb
in
dec
jg
addr16
mov
mov
movsb
out
loopne
add
stc
pop
jp
rol
add
ds
and
ja
dec
shl
jecxz
pop
loopne
inc
inc
into
fucomip
repz
lcall
sub
es
mov
lods
cld
adcb
xor
mov
lahf
xor
push
inc
pop
mov
stos
jae
mov
adc
lods
xchg
add
shll
clc
test
in
pop
mov
and
inc
repnz
divl
insl
push
sbb
loopne
clc
inc
out
jle
fucomi
adc
lock
inc
lcallw
pop
arpl
dec
mov
iret
mov
jge
test
mov
cmc
repz
pop
cld
xor
ja
faddl
push
dec
call
fmuls
sarb
sbb
dec
adc
sub
lock
sub
xchg
jp
ret
push
sub
arpl
movsb
rolb
or
add
shlb
sbb
cmpsb
sbb
les
jnp
push
repz
adc
bnd
and
pop
jmp
xlat
lods
add
jl
dec
adc
insl
mov
mov
mov
cmp
xchg
ffreep
js
xor
es
mov
xchg
lea
les
fmull
movsb
daa
int
push
gs
pop
data16
enter
les
ds
mov
sub
pop
roll
fnsave
sarb
inc
mov
cmpsl
lret
dec
push
jne
add
xlat
dec
stos
mov
sub
xor
mov
xlat
test
iret
xchg
repz
aas
sbb
inc
push
pop
lods
and
push
dec
cs
lock
or
mov
bound
inc
or
jl
stos
in
insl
sahf
push
fdivp
pop
arpl
and
hlt
dec
jae
inc
inc
mov
or
nop
sarb
nop
lahf
mov
mov
les
fnsave
std
xor
loopne
push
cmpsb
add
divl
xor
fsubrs
js
cmpsb
push
or
mov
sub
sarb
popa
ja
mov
lret
mov
sbb
sub
movsl
incb
fisubl
aad
xor
inc
faddp
andb
pop
mov
mov
xchg
lcall
mov
jmp
or
je
inc
ret
mov
adc
mov
hlt
mov
xchg
out
pop
xchg
int3
sub
push
aaa
mov
sete
aaa
sarl
movsb
mov
fisubrs
loope
pop
pop
pusha
jl
mov
call
add
int3
les
jb
mov
insl
sarb
sti
mov
rcll
push
ja
stos
fs
adcl
push
pop
mov
cmc
add
je
or
push
adc
adc
inc
mov
stos
add
cmp
ja
ret
xchg
adc
jmp
clc
xchg
jno
push
sbb
push
ror
icebp
subl
lods
adc
sub
das
rclb
lahf
gs
les
in
mov
cli
mov
fsubrs
sub
and
out
call
lea
inc
inc
das
pop
out
in
cmpps
out
push
test
xchg
fisubrs
sbb
mov
sbb
aad
loopne
inc
ljmp
pop
dec
test
loop
popl
adc
jo
in
dec
cmp
or
les
mov
inc
pop
lds
pusha
adc
pop
xchg
mov
fbstp
subb
pop
pop
jne
mov
push
imul
clc
push
push
adc
lret
jg
hlt
mov
mov
mov
jns
fimuls
insl
loop
adc
int3
mov
int3
mov
adcb
cld
dec
jmp
pop
hlt
mov
pop
in
xor
idivb
testl
mov
loopne
push
stos
inc
mov
das
jmp
ret
lods
xchg
inc
add
xchg
pop
mov
les
mov
cmpsl
or
mov
outsl
mov
inc
inc
xchg
pop
les
cmp
and
cmpsb
movsl
movsl
das
pusha
cltd
cmp
push
mov
add
xchg
mov
cltd
mov
in
inc
jo
dec
cmpsb
popl
sub
addr16
sbb
push
divl
repz
stos
mov
sbb
in
fdivr
imul
dec
sbb
mov
sbb
fwait
pusha
dec
sub
sti
cwtl
cmp
adc
cmp
sbb
out
add
xor
xchg
mov
adc
out
out
lret
cmp
cld
mov
fimuls
cld
lea
jo
or
mov
cmpsb
xchg
rolb
imul
jnp
mov
les
pop
shlb
and
bound
je
sbb
imul
dec
jg
fisttpll
cmp
xchg
mov
adc
loop
mov
pop
iret
clc
jmp
lcall
test
movsb
inc
mov
jae
inc
add
scas
pusha
adc
adc
push
push
or
scas
sbb
dec
in
sbb
xchg
xlat
inc
push
je
loopne
lds
fwait
scas
leave
stos
daa
inc
jmp
adc
pop
push
xchg
pop
aam
push
sarb
push
sbb
fists
lret
cmpsb
push
and
jb
les
xchg
jne
rorl
mov
jo
sub
test
addr16
mov
or
dec
ss
jp
ja
mov
aad
xor
popf
aam
cmp
add
sti
fnstsw
pop
sahf
insl
pop
inc
and
sub
sarb
or
add
mov
adc
lods
ljmp
xchg
mov
mov
ja
out
loopne
call
inc
pushf
iret
mov
pop
imul
pop
mov
ret
push
das
mov
repz
and
cli
ret
cmpsl
stos
es
or
jb
sahf
pop
icebp
mov
subb
cmp
imul
into
inc
or
and
lods
dec
mov
hlt
gs
int
gs
mov
loop
cmp
jl
xchg
add
and
ficoml
or
cmc
mov
cmpsb
repz
sub
adc
xor
clc
add
xor
or
mov
fldt
xor
sbb
cmp
lret
es
xchg
pop
mov
loope
icebp
ret
pop
shl
loop
mov
aas
dec
in
pop
adc
jg
cmc
fnstsw
aaa
mov
add
shlb
dec
mov
sahf
fistpl
negl
rolb
adc
mov
xchg
cmp
addr16
sub
gs
add
mov
pop
and
fidivl
and
gs
push
jl
mov
ja
pusha
sbbb
jle
out
popl
or
push
mov
fisubs
cmp
pop
or
fistps
adc
sbb
lods
xor
cmpsb
sbb
sbb
test
stc
shlb
pop
push
push
lret
dec
mov
mov
mov
xor
repnz
pop
mov
sub
push
int3
add
adc
cs
or
pop
shrb
dec
mov
or
in
arpl
scas
rcrb
ja
lret
setbe
ja
fisubs
add
adcl
adc
xlat
sub
addb
adc
fnstsw
dec
adc
gs
fstpt
sar
xchg
imul
ror
ret
mull
out
or
xor
mov
les
stos
push
jnp
push
lds
push
jmp
cmp
mov
dec
mov
in
mov
cltd
loope
les
repnz
mov
xor
divb
mov
jne
loopew
test
popa
inc
movsl
or
fiadds
ja
pop
add
inc
pop
xor
xchg
into
into
xchg
and
fwait
inc
or
aam
sub
dec
test
jle
cmp
lahf
idivb
adcl
aaa
outsb
fimuls
xchg
mov
lods
insl
add
gs
loope
push
xchg
push
mov
sbb
dec
pop
nop
mov
adc
push
adc
cmpsl
jne
mov
cmpsb
sar
popa
xchg
mov
in
xorb
scas
fildl
inc
xor
std
add
mov
pop
incb
pop
scas
mov
jg
push
adc
sbb
ds
adc
outsl
mov
push
add
mov
mov
aam
pop
jl
in
and
jne
inc
sbb
idivl
mov
out
add
sub
imul
jp
adc
pushl
cmp
push
out
les
repnz
add
ret
adcb
movsl
pop
loop
daa
sbb
repz
sarb
test
stc
xor
cmpsb
inc
pop
test
jecxz
subl
inc
jne
dec
and
cli
mov
add
mov
jmp
fyl2x
xchg
sarb
jp
les
aaa
lods
aas
add
pusha
pop
imul
mov
inc
in
ja
dec
std
iret
sub
testb
fwait
adc
ficoms
dec
mov
aaa
jne
test
testb
inc
imul
mov
or
and
stos
add
jmp
push
pop
aad
cmp
ret
mov
out
mov
push
push
in
cwtl
out
mov
addr16
cli
aad
mov
cld
xchg
push
mov
mov
xchg
aas
sub
sar
iret
push
lods
push
inc
fwait
subl
in
mov
adc
mov
addr16
call
mov
rclb
pop
test
xor
out
sbb
mov
popa
jae
xchg
inc
dec
cmpsl
jnp
rorl
sub
jb
push
xchg
out
mov
adc
add
inc
dec
push
adc
xchg
add
xor
mov
fisubrs
ret
pop
les
pop
jp
sub
repnz
mov
sub
pop
rorb
aad
cli
or
enter
in
icebp
xor
xchg
hlt
inc
cwtl
push
pop
mov
adc
pushf
sub
inc
add
rol
jno
data16
test
jne
xor
cwtl
andl
sbb
pop
les
stos
inc
add
inc
insl
dec
and
sti
fidivrs
sub
push
mov
imul
mov
dec
cmp
movsb
icebp
call
mov
daa
and
movsb
mov
cmp
lret
jno
loope
lods
add
or
mov
gs
sub
mov
jnp
inc
add
jnp
in
push
push
cmp
sbbl
frstor
mov
sbb
mov
pop
popa
test
sbb
mov
xchg
aam
ja
imul
fmull
push
or
test
add
or
push
pop
adc
jl
in
mov
push
jl
mov
cli
sbb
subb
xchg
les
cmp
mov
sub
fwait
cmpsb
decl
popa
fucom
pop
ret
jp
mov
notl
daa
cmpsl
andl
sbb
push
mov
or
scas
mov
int3
out
les
push
es
adc
sub
sbbl
daa
int3
testl
push
cmp
inc
rcr
sub
mov
cmp
stos
mul
adc
xor
das
dec
mov
lods
sbb
jae
mov
and
lcall
fs
cltd
mov
pop
sbb
sbb
sbb
or
mov
push
or
ret
shl
dec
jge
push
xchg
rcll
jp
ret
pop
rcrl
icebp
imul
out
inc
fucomp
fs
sbb
mov
adc
inc
dec
imul
and
dec
into
and
jmp
pop
xchg
imul
shlb
sbb
loop
mov
inc
popa
xchg
cld
xor
jp
cmpsb
mov
xchg
pop
test
xchg
pop
ret
sbb
mov
sbb
std
call
xchg
pop
push
xor
xor
jae
add
out
mov
and
lods
add
inc
jge
or
movsl
add
call
call
push
push
shlb
mov
rcrb
mov
ffreep
jb
rcrb
cltd
incb
mov
lds
out
xchg
lds
popf
stc
enter
negl
fstpl
jbe
push
jl
ffreep
popa
repz
orb
add
divl
mov
ja
mov
mov
mov
test
popa
cmp
addr16
les
push
or
fwait
jns
dec
fs
repnz
jb
cmp
inc
subl
incl
lock
push
scas
sti
mov
and
xor
inc
pop
adc
mov
js
lods
das
xlat
sbbb
into
fwait
mov
and
lret
rcll
and
inc
mov
pop
fisubrs
outsl
cmp
push
mov
aaa
mov
lods
ja
iret
pop
mov
xor
cs
inc
dec
xchg
push
popa
or
inc
mov
jmp
repz
call
popa
lcall
sbb
inc
je,pn
pop
cmp
daa
jae
sahf
mov
xor
push
scas
dec
in
pop
inc
inc
inc
adc
fimull
add
in
sbbb
fiaddl
jp
fwait
les
mov
ss
les
shlb
mov
into
and
loope
fdivrp
push
in
imul
and
data16
mov
jb
testl
cld
es
imulb
sub
push
in
out
add
mov
xorb
mov
cltd
xor
jne
ja
jns
jbe
cmpsl
repz
scas
xchg
mov
mov
es
sbb
add
jmp
jne
pop
movsl
popf
jcxz
jbe
loope
in
rcrl
lods
add
adc
icebp
test
adc
rep
movsl
rolb
sub
dec
in
imul
pop
sbb
fnstcw
fildll
push
icebp
nop
loop
ror
int3
out
push
test
pushf
orl
sbb
sbb
fcmovnb
rcl
xchg
in
das
pop
adc
inc
lcall
cmp
mov
xor
sub
pop
push
pop
mov
adc
jmp
in
outsl
mov
scas
adc
nop
pop
push
mov
sub
mov
adc
xor
jl
sahf
push
sub
adc
std
cmp
push
push
out
inc
cmc
cmp
fnstsw
leave
mov
inc
mov
cmp
cmpb
popa
sahf
push
pop
mov
rorl
repnz
or
sub
fdivrs
jbe
cmpsl
je
fiadds
sbb
fistpll
iret
jne
xchg
adc
or
push
in
xor
dec
outsl
dec
lahf
or
mov
in
imul
push
out
inc
sbb
add
jne
sbb
push
cmp
xor
mov
test
add
add
mov
or
push
inc
pop
inc
xor
sub
jl
lods
aam
mov
adc
das
mov
or
push
leave
les
mov
xchg
mov
stos
jo
sbb
into
jecxz
jno
pop
mov
pop
loope
adc
jb
pop
cmp
ficoml
mov
sub
ja
fadd
lret
push
movsl
negb
xor
ja
and
mov
in
movsl
mov
mov
inc
pop
add
xlat
scas
mov
xor
mov
xchg
mov
push
pop
sub
sub
cmp
mov
push
lret
shl
and
push
sbb
iret
test
dec
xchg
inc
in
mov
xor
insl
jnp
inc
sub
or
jle
filds
into
jne
pop
test
fnstenv
adc
xchg
pusha
mov
push
xor
dec
mov
data16
in
or
leave
mov
dec
popf
ret
sahf
cmpsl
fcompl
mov
or
dec
pop
andb
lock
xor
mov
test
fstpt
sub
fildll
xchg
out
cmc
mov
pop
insb
loope
dec
cli
or
or
insl
xchg
filds
arpl
mov
icebp
dec
sub
jge
push
push
dec
lea
inc
push
jmp
cmc
outsl
mov
sbb
into
pop
fs
dec
iret
adc
movsb
jae
cmpsb
pusha
pop
test
sbb
addl
in
pop
lret
pushl
pop
mov
push
xchg
push
add
jle
std
dec
stos
mov
mov
outsl
cmpsb
mov
in
dec
lds
ja
inc
jbe
sub
cltd
mov
xchg
mov
dec
hlt
jmp
aaa
cmc
addr16
adc
je
jmp
xor
mov
add
imul
mov
jno
ret
ret
inc
mov
arpl
mov
dec
test
sbb
fadd
pop
mov
inc
out
push
les
cmp
test
xchg
test
cwtl
fimuls
sbb
jno
mov
push
mov
jb
fs
xchg
jmp
pop
fldenv
mov
xor
fiaddl
cmc
rclb
jbe
testl
cmp
push
inc
out
loopne
dec
aad
dec
dec
jmp
pop
add
ret
imul
adc
add
dec
inc
test
ret
lahf
add
cli
add
mov
push
mov
sub
lea
sbb
sbb
out
in
outsb
mov
jge
daa
mov
shrb
mov
and
addr16
mov
out
inc
cmp
cmp
xchg
push
jnp
xchg
mov
repz
mov
inc
lds
xchg
xchg
push
pop
into
adc
xor
mov
push
call
fildll
cld
repz
stos
sub
inc
ja
fstl
subl
adc
pop
mov
enter
adc
call
int
mov
pusha
les
cli
cmp
movsb
xor
fidivs
fnstsw
pop
or
aaa
pushl
sbb
jge
and
scas
rcrl
scas
sbb
andl
les
sbb
bound
jno
pop
ret
mov
out
sub
add
imul
orl
push
mov
adc
jnp
movsb
mov
push
mov
inc
repz
adc
and
xor
dec
mov
and
fisubs
bound
push
shlb
insl
or
mov
notl
jecxz
ja
xchg
push
lea
jns
stos
or
pop
mov
adc
sub
fwait
pop
inc
shlb
ret
mov
in
ret
jle
or
popf
inc
sahf
fisttps
or
add
int
fidivs
arpl
and
movsl
rolb
push
adc
mov
inc
in
addr16
mov
jmp
xor
sbb
xchg
icebp
inc
mov
mov
into
jl
sbb
leave
les
cmp
adc
je
adc
mov
fistl
pop
jge
out
scas
xchg
and
gs
jno
push
mov
xchg
rcl
add
mov
or
pop
rolb
mov
jmp
or
lea
sub
dec
add
xor
and
cmp
mov
int3
cmp
xchg
and
in
pop
xor
mov
rorl
out
scas
pusha
add
mov
xor
push
lahf
outsb
std
mov
mov
gs
ja
mov
dec
mov
sbb
sbb
mov
movsl
or
mov
inc
or
shrb
lods
xchg
adc
sub
sub
je
test
xor
cmp
sbb
push
push
mov
addr16
xchg
ror
mov
adc
test
repz
std
or
xlat
shlb
aaa
mov
push
mov
mov
or
ljmp
push
mov
ret
dec
sub
jno
or
dec
sbb
int
cs
ret
sbb
add
xchg
vpsllq
mov
daa
imul
mov
bound
and
xlat
xrstors
add
sbb
in
movsl
les
or
mov
inc
pop
pop
cmpsb
movsb
hlt
mov
incl
xchg
cmpsl
sbb
or
cmpsl
pop
sbb
pop
lods
loop
mov
dec
lock
out
in
xor
mov
dec
sub
insl
sbb
sahf
popa
pop
in
sti
outsl
loope
scas
dec
mov
push
enter
dec
mov
and
push
mov
push
add
and
xchg
scas
or
push
enter
jne
add
aaa
rcrb
add
push
inc
inc
stos
nop
fbld
lods
dec
xchg
jne
dec
addb
cmc
fstpl
scas
ja
sbb
test
sub
out
xchg
pop
mov
fmuls
cmpsb
inc
xchg
je
loop
negl
stos
add
add
push
sbb
add
mov
int3
jo
xchg
mov
ja
pop
sbb
pop
xchg
std
sbb
sbb
pop
add
and
xor
dec
stos
mov
mov
inc
and
stc
out
jno
daa
push
les
or
pop
andl
and
pop
xor
stc
rclb
incl
fwait
repz
insb
ret
es
call
les
cmpsb
sarb
mov
std
and
jp
push
mov
movsb
jo
aam
incl
dec
or
insl
jb
aas
rclb
mov
jo
xchg
insl
mov
dec
jne
sub
inc
mov
push
push
push
xor
cmc
movsl
test
or
les
pop
mov
ret
fs
or
mov
orl
aad
mov
adc
jp
out
add
aaa
mov
adc
andl
nop
and
rcll
sti
cmpsb
daa
pop
les
stos
dec
loope
bound
stos
fwait
or
cld
jne
adc
out
mov
xor
dec
aad
adc
int3
mov
cmpsb
xchg
lcall
into
rcrl
xor
lods
adc
aaa
int3
add
in
inc
insl
or
sbb
push
jno
inc
cmpsb
gs
add
cmp
or
dec
sub
add
scas
mov
je
rcr
lea
mov
cmpsb
sbb
mov
and
add
repz
in
jne
shlb
sti
push
loop
rclb
cwtl
xchg
fildll
loopne
xchg
sub
mov
mov
xor
adc
into
test
sbb
jge
pop
push
mov
cli
jae
xor
and
je
mov
pusha
jnp
dec
jnp
movsl
xchg
loop
xor
sub
enter
fsubs
pusha
mov
cmpsl
mov
addr16
bound
sub
int3
sub
xchg
outsb
icebp
lahf
jnp
bound
xchg
js
xchg
addr16
dec
shr
stc
xlat
mov
xchg
in
mov
test
jb
and
add
pop
dec
cmp
pop
repnz
shrb
out
push
cld
mov
shlb
test
std
aad
out
orb
sub
mov
out
ret
mov
inc
lock
daa
add
xchg
mov
push
push
test
adc
mov
jne
mov
pop
cmpsl
mov
fwait
push
mov
and
mov
sub
push
notl
xchg
ds
xchg
sub
push
lods
jl
xchg
scas
add
dec
jge
or
pop
leave
rcrb
stc
push
aam
stc
repz
mov
test
mov
mov
mov
xor
sub
aaa
cs
pop
rorb
mov
cld
or
sbb
lods
inc
js
lcall
ret
stos
daa
pop
loopne
adc
daa
fistl
mov
xchg
scas
adc
sbb
push
mov
lret
daa
mov
or
rcl
sarl
xchg
out
cltd
jns
jo
rorl
add
mov
fistpll
cmpsl
mov
dec
pop
ret
inc
data16
dec
add
pop
fldl
inc
incb
movb
fwait
cmpsl
fmuls
jb
jns
mov
stos
gs
movsl
add
neg
xlat
cwtl
data16
xchg
xor
pop
movsb
outsl
gs
jg
dec
xchg
hlt
xchg
cs
push
out
cld
fsubs
add
int
pusha
mov
mov
jno
into
inc
jge
inc
not
sbb
test
push
or
and
xor
fdivs
mov
push
cwtl
sub
cmp
repz
cmpsb
pop
xor
je
jo
and
sbb
mov
inc
inc
loope
test
std
mov
pop
cmp
daa
dec
scas
dec
outsl
jno
mov
mov
addr16
ss
and
mov
inc
cld
shl
push
and
jno
xchg
lcall
arpl
sub
mov
les
ss
popa
mov
pop
sar
inc
sub
and
fsubl
mov
gs
adc
aam
xchg
jmp
mov
lods
push
in
sub
mov
es
push
gs
sub
popa
in
adc
sub
data16
xor
sub
mov
adc
cld
jge
out
pop
adc
cmc
mov
jbe
clc
js
and
cmpsb
add
inc
fcoms
dec
rcrb
dec
add
push
inc
sbb
inc
ret
inc
add
shl
push
shlb
mov
mov
cmp
xor
div
and
mov
cli
push
jo
out
out
push
fs
pusha
sbb
jae
inc
pop
leave
popa
mov
mov
xor
loope
out
pop
je
scas
call
insb
xor
xor
push
dec
inc
clc
pop
stos
imul
in
xorl
jbe
cmpb
arpl
dec
jge
jp
daa
dec
out
addr16
push
call
xor
sahf
std
pop
xchg
mov
jae
lock
mov
push
add
cmpsl
popa
dec
les
mov
ss
xchg
mov
sbb
mov
les
or
mov
xchg
outsl
sbb
mov
fsub
jnp
mov
push
xor
insl
lret
dec
jp
fdivr
inc
cli
ds
push
push
jecxz
mov
mov
inc
xchg
push
fs
in
adc
pop
add
mov
ret
cmpsl
mov
jb
mov
sbb
in
mov
lods
in
mov
jns
cmp
out
divb
data16
push
or
mov
scas
shlb
iret
fldt
roll
mov
sbb
jo
or
out
call
mov
sahf
sbb
add
into
add
pop
ljmp
cli
in
lret
or
into
test
cwtl
mov
and
bound
notl
xchg
and
jg
cmpsl
mov
push
and
rcl
ret
jae
inc
mov
or
pop
sbb
out
dec
push
out
xor
movsl
in
dec
push
hlt
mov
test
xor
jecxz
sbb
in
or
inc
fdivrp
or
add
shrl
dec
or
inc
xchg
das
adc
pop
rorb
xchg
sbb
mov
mov
add
xchg
fmul
fcmovnbe
adc
mov
dec
mov
xchg
notl
stos
ret
push
jecxz
jge
and
add
xlat
orl
mov
sti
sahf
shlb
pusha
filds
bound
xchg
adc
xchg
mov
mov
push
mov
rcl
mov
sub
divl
inc
frstor
lods
lret
mov
nop
sub
adc
mov
and
adc
test
notl
xchg
jns
aad
cli
mov
rcrl
xor
sbb
cmc
divl
mov
pop
adc
sub
xchg
sbb
pop
movsb
xchg
lret
fisttps
ja
outsb
sbb
fs
pop
jb
dec
jae
and
rcl
sub
xor
inc
mov
pop
cltd
pop
scas
pop
and
int
mov
push
stc
xchg
add
xchg
fiadds
mov
and
dec
xchg
mov
mov
stos
xchg
mov
push
les
sbb
or
jge
outsb
dec
ja
ret
fs
mov
not
les
xor
and
fcoms
xchg
dec
shrb
ret
mov
loope
mov
xor
or
les
out
popa
scas
fcomi
fdivrs
sbb
cmp
stc
test
sub
mov
sbb
adc
xlat
stos
mov
inc
sbb
cld
call
les
sub
add
shlb
mov
repnz
dec
jns
add
stos
or
cmpps
xchg
mov
dec
lds
daa
xchg
repz
dec
sub
push
mov
inc
lcall
clc
subl
mov
pop
xchg
lods
jb
or
dec
nop
sar
dec
add
inc
scas
lds
mov
imul
jbe
and
rol
lret
in
add
iret
xor
lcall
iret
xchg
cmp
push
lret
mov
push
scas
or
xor
mov
out
test
inc
aad
lahf
mov
fidivl
mov
jecxz
aas
push
imul
test
out
lea
int
jbe
idivb
sub
jne
inc
dec
mov
and
sub
stos
ljmp
xor
mov
mov
or
dec
pop
inc
xor
xor
pop
lock
iret
out
adc
or
fsubrs
dec
sub
xor
lds
arpl
fldl
xorl
jne
mov
mov
mov
xor
sahf
cmp
mov
das
mov
xchg
movsl
xlat
orl
stos
cmc
lds
mov
and
les
popf
adc
inc
ja
in
or
pop
jb
xchg
ret
movsl
movsb
sahf
cmpsb
sub
or
mov
jnp
add
jnp
lret
les
sbb
cmpsb
or
lret
cmpsl
fwait
stos
mov
stos
cmc
mov
dec
mov
sub
xor
cmp
xchg
add
aas
pop
outsb
dec
xor
cli
pop
cld
notl
into
outsl
push
scas
es
mov
mulb
aam
lea
push
jmp
sbb
mov
popa
cltd
cmpsl
gs
mov
jns
dec
inc
lret
sbb
jmp
iret
xor
xchg
push
xchg
mov
jb
lds
orl
test
lock
test
mov
stos
sub
cmpsb
aad
icebp
push
inc
pop
xchg
repz
or
outsb
out
js
test
add
push
or
sbb
cld
repz
pop
shlb
dec
jg
lret
scas
test
sub
fisttpl
add
mov
sahf
jnp
divl
sub
xor
jno
mov
scas
test
icebp
jge
fucomp
pop
ja
popa
loope
mov
das
mov
or
fnstsw
sub
lcall
jmp
ficomps
loope
andl
inc
mov
rcl
sub
xchg
add
dec
repz
mov
mul
push
negl
or
dec
shlb
jle
adc
push
mov
xor
mov
das
add
adc
add
xor
popa
sub
mov
jle
popa
inc
out
shl
ret
xchg
mov
xchg
jno
mov
lods
lret
mov
stos
test
jle
daa
fsubs
pop
xchg
pop
pop
cmp
movsl
cwtl
daa
push
mov
test
xchg
outsl
mov
outsl
mov
aas
mov
mov
adc
jmp
jle
or
and
xchg
jg
xchg
dec
push
xor
mov
add
out
popa
mov
dec
push
pop
repz
jo
jae
cmp
ret
fcmovnu
adc
push
aam
jcxz
pop
js
sub
lea
mov
push
add
or
mov
test
int3
jecxz
idivl
dec
jnp
jae
arpl
mov
cmp
jns
test
ljmp
nop
xor
mov
ss
and
mov
xor
sbb
pop
dec
test
daa
or
mov
fs
or
leave
mov
movsl
xor
push
shrb
cmc
jns
mov
and
or
or
xchg
or
popa
mov
xchg
ja
push
xchg
arpl
lock
jb
adc
jno
and
push
push
push
fs
clc
xchg
loop
add
and
cmp
adc
mov
jle
les
cmp
mov
jno
mov
or
dec
inc
xor
dec
adc
push
adcb
or
cmpsl
orb
out
xchg
popa
adc
daa
fsts
adc
sti
cli
add
iret
jne
fldenv
in
mull
test
mov
push
adc
and
test
fs
orb
xchg
mov
daa
adc
xchg
fmuls
and
mov
pop
in
fbld
movsb
lods
push
int
les
aas
lods
pop
mov
mov
andb
jne
outsl
push
xchg
adc
xor
popl
inc
adc
mov
out
adc
out
push
mov
mov
out
lret
int
mov
inc
add
mov
pop
sahf
dec
jnp
cltd
or
sar
adc
jb
movsl
add
adc
std
enterw
pop
push
js
aad
scas
insb
inc
inc
adc
pop
fistpll
sub
and
hlt
fidivrs
mul
fs
fwait
repz
in
or
popf
in
orb
addr16
and
push
push
push
inc
adc
out
xorl
add
or
add
mov
sbb
add
mov
loop
cld
leave
lea
lcall
sub
cmp
stc
arpl
rcl
aaa
test
cmp
push
mov
jno
movl
xchg
add
sub
xchg
call
jp
pop
pop
mov
icebp
and
mov
pop
shl
mov
lods
adcl
stc
mov
scas
sub
vpmaxub
sub
add
aaa
push
inc
outsb
daa
fadd
lcall
in
xchg
xor
sub
xchg
xchg
in
popf
fdivp
inc
je
out
adc
aad
pop
lahf
cmp
add
dec
ret
daa
pop
cs
push
sbb
pusha
imul
push
xorl
push
out
xor
jo
enter
xor
mov
ja
inc
cld
frstor
les
pop
inc
imul
jge
imul
mov
lock
lcall
rorb
sub
mov
cmp
xchg
or
cli
jl
cltd
cld
add
mov
test
stc
xchg
mov
jge
add
jg
inc
sahf
pop
stos
aas
push
testb
mov
lahf
xor
data16
int3
add
xor
fidivrl
scas
sbb
in
mov
push
jnp
inc
pop
arpl
add
mov
sbb
scas
push
or
out
and
sub
push
lds
and
loop
mov
stos
or
fstpt
test
add
out
xchg
or
jl
add
add
add
test
loopne
hlt
cmpsl
pop
adc
ja
pop
int
into
insb
ja
sysret
jl
int
cmp
inc
mov
add
into
repz
rep
xor
ror
notb
jmp
fs
leave
xchg
cmp
or
jle
mov
mov
mov
sbb
adc
push
rcrb
sahf
inc
rcrb
pop
mov
movsb
sub
dec
loope
cwtl
add
stos
dec
or
add
outsl
adc
or
aas
je
lods
or
pop
xor
lret
xchg
pop
mov
mov
inc
push
andb
jno
sub
or
subl
add
dec
push
or
sub
and
xchg
pushl
xorb
dec
lods
out
dec
xor
rol
pop
xor
and
outsl
rcr
mov
cmpsl
pushf
xor
xor
pop
aas
add
sbb
pop
push
mov
outsl
mov
gs
inc
mov
cmpsl
adc
bound
jmp
mov
mov
add
ja
xor
or
mov
rcrl
jno
or
inc
shlb
ds
xchg
outsl
int
inc
mov
push
mov
and
add
mov
les
fcmovnbe
loope
push
cs
imul
xchg
add
fbstp
popf
add
push
dec
mov
dec
sub
mov
add
cmpsl
pop
xchg
in
sub
jnp,pn
add
data16
jb
ret
adc
xor
inc
ja
mov
lods
mul
addr16
jge
lret
jae
xchg
pop
inc
stos
mov
js
mov
in
mov
mov
cmp
fidivl
pop
clc
mov
shll
arpl
inc
test
mov
cmpb
mov
push
pop
into
insb
fadd
sub
movb
add
add
push
and
cmp
in
pop
lcall
in
mov
scas
mov
fnstsw
mov
adc
ja
test
or
cmp
lock
into
shrb
adc
pop
pop
xor
mov
and
test
loope
or
adc
pop
ja
ret
push
cld
ja
clc
in
sbb
test
gs
push
sub
lret
push
es
data16
fcom
and
mov
imul
push
mov
or
mov
loop
fldt
ret
and
dec
gs
cmp
repz
pop
cmp
mov
out
fbld
cltd
mov
mov
mov
outsl
fs
repz
sahf
cmp
movsb
shrb
adc
mov
loopne
or
mull
fwait
lock
push
push
sub
fdivrs
popa
out
sub
and
test
pop
out
sbb
outsb
popa
or
inc
or
and
and
in
xchg
je
mov
add
pop
mov
cmp
mov
sbb
icebp
push
lret
es
lods
jne
inc
lahf
sarb
pop
push
mov
cmp
stos
inc
adc
mov
lods
mov
addl
and
xor
out
add
ja
gs
and
movsb
shrd
lock
mov
fsubrs
dec
push
inc
js
outsl
leave
insl
and
mov
or
fidivs
dec
add
dec
xchg
stc
out
or
bound
inc
sub
push
loope
xor
add
xchg
pop
pop
pop
cs
jno
jnp
lock
cmp
jp
outsb
pop
jg
mov
pusha
outsl
stos
scas
mov
pop
lea
xor
cs
mov
sub
test
or
mov
xchg
pushf
jns
pushf
xchg
xchg
dec
sarb
sub
outsb
mov
mov
jmp
sbb
and
mov
cs
inc
mov
push
mov
les
shr
mov
push
aaa
cltd
out
or
adc
cmp
adc
fcoml
sahf
jecxz
arpl
mov
insl
notl
sahf
dec
xor
pusha
or
cltd
outsl
int3
and
push
mov
nop
fsubl
mov
in
leave
stos
mov
xchg
int3
movsl
imul
ret
sub
cmp
outsb
nop
daa
sti
cmpl
pop
adc
mov
mov
jle
ljmp
inc
jno
test
xor
test
repnz
push
cmpsl
rcr
gs
aad
stos
roll
and
add
jecxz
rclb
mov
or
and
add
popf
mov
add
jnp
push
and
icebp
loop
das
jnp
mov
fisubs
pop
rol
or
mov
pop
rolb
xchg
dec
xchg
inc
or
jbe
mov
jb
mov
rclb
jb
xor
orl
test
cmp
cmp
adc
shlb
into
out
jne
outsl
ror
clc
repnz
inc
shll
hlt
cmp
fisubs
mov
inc
pushf
and
repz
pop
jns
jp
dec
push
pushf
fdivl
mov
push
fwait
sub
imul
xor
cli
xchg
lods
inc
push
adc
sbb
add
xor
add
pop
pusha
push
mov
inc
pop
shl
pop
xor
sbb
add
std
cli
add
jle
pop
testb
mov
xor
adcl
nop
clc
sarl
mov
lock
cmp
and
dec
divb
imulb
push
dec
cmp
mov
ja
push
mov
iret
mov
xor
aad
pop
testl
aas
mov
mov
stc
mov
sbb
jbe
imul
js
add
dec
push
dec
xor
rolb
lds
and
addr16
and
aad
push
inc
pushf
xchg
sub
in
mov
ja
sub
lods
add
or
or
fwait
lret
add
sbb
jg
je
sbbl
add
out
sub
jg
data16
pusha
mov
adc
inc
maskmovq
notl
loope
jge
cmpsb
mov
sbb
dec
and
arpl
ja
sahf
shlb
iret
ficoml
pop
mov
ja
ja
roll
jae
pop
xor
test
bound
ficomps
fnsave
or
lock
pop
ret
inc
sbb
xor
movl
jge
test
adc
xchg
and
outsl
rol
xchg
lock
sbb
push
lods
shl
hlt
sub
or
cmc
outsl
in
xchg
xchg
xchg
arpl
cmp
les
lds
rclb
push
jns
jg
aas
or
lahf
jl
pusha
inc
cmp
inc
cltd
or
dec
and
out
rcll
mov
bound
jae
stos
mov
mov
sbb
aad
scas
clc
mov
ret
mov
pop
int3
lods
or
jge
mov
loopne
arpl
icebp
and
mov
sbb
gs
rclb
mov
fists
imul
xor
add
cmp
lret
daa
push
outsb
loop
cmp
or
sahf
pop
adc
in
xchg
cmc
aam
xor
mov
out
mov
test
pop
icebp
sbb
sbb
insl
out
mov
sbb
sbbb
mov
jbe
lods
or
push
int
push
mov
movsb
push
mov
mov
out
sbb
dec
ror
loope
sbb
std
sbb
nop
js
inc
sarb
int3
movsl
pop
rclb
or
dec
cmp
mov
or
add
sbb
xor
pop
add
test
or
or
nop
repnz
testb
stos
fmuls
xor
mov
pop
test
pop
mov
mov
sbb
shrb
test
pop
push
cmpsl
lods
pusha
adc
mov
movsl
adc
flds
xor
mov
cmp
pop
jae
outsb
adc
push
mov
inc
ljmp
jle
jge
les
ja
mov
test
scas
insl
out
jbe
mov
repz
in
nop
and
jecxz
popa
xchg
ret
jmp
es
leave
ret
movsb
stos
mov
adc
mov
sub
fidivs
pop
push
dec
mov
xor
sbb
icebp
mov
cmc
shrb
cli
leave
dec
int3
lock
lea
mov
fwait
adc
shrl
out
aam
insl
ja
xor
and
outsl
add
out
jecxz
or
rorb
add
dec
loopne
aad
add
jmp
cmp
cmp
cmpsl
cmp
push
pop
ret
popf
sti
push
sub
dec
dec
push
ficomps
stc
cmp
xchg
pop
stos
pusha
clc
mov
lahf
lret
mov
push
jo
sarl
ror
pop
mov
dec
test
sahf
inc
push
mov
adc
std
add
mov
addr16
loopne
sub
add
dec
ss
sbb
jo
mov
stc
sbb
xor
iret
ret
xchg
test
xchg
loope
inc
mov
sbb
mov
mov
cld
scas
push
test
sub
mov
lret
out
and
jno
add
xor
or
shrb
fldl
xchg
jmp
adc
call
in
aad
lret
fwait
iret
es
jl
sub
inc
inc
pop
ja
cmp
in
xor
xor
dec
aad
in
pop
loopne
and
push
rcrb
pop
jnp
mov
sbb
aad
cmpsl
gs
into
lock
daa
in
push
mov
fldl
xchg
xor
sub
inc
mov
xchg
lcall
inc
or
inc
xchg
call
mov
or
ljmp
mov
and
aad
push
cmp
cmpsl
rolb
xchg
inc
pop
dec
cmp
and
rcr
mov
fstpl
mov
sti
adc
mov
mov
dec
pop
mov
pop
ret
xor
fwait
daa
sbb
pop
xor
stos
cmpsl
hlt
std
test
mov
dec
cli
xor
mov
push
cmp
mov
lods
sbb
loop
sbb
and
loope
mov
lock
inc
add
jge
lret
movsb
or
into
add
daa
shlb
into
cmp
dec
xlat
clc
mov
and
mov
cmp
push
std
shl
out
shll
jg
in
lods
mov
shl
arpl
les
jbe
cmp
add
cmpsl
mov
les
cmc
jg
loope
hlt
ds
hlt
ret
mov
cmc
dec
sbb
dec
push
or
or
je
ja
dec
mov
lock
inc
lret
ss
add
sarb
rcrb
or
add
xchg
lods
mov
lcall
lret
xor
or
inc
pop
lea
test
inc
sub
push
add
or
push
lea
push
in
iret
sub
xchg
push
test
call
push
sub
cwtl
test
jl
mov
imul
dec
push
jbe
mov
ret
mov
push
xlat
sti
push
inc
notb
test
insl
test
sarb
push
pop
add
lock
inc
pop
out
loopne
lret
adc
dec
cltd
cmc
xchg
mov
ja
daa
lods
adc
lea
dec
mov
pop
xchg
pop
sbb
dec
adc
dec
jb
adc
or
ror
ret
adc
out
dec
dec
andl
push
inc
lea
cmp
flds
pop
les
mov
filds
mov
push
xor
sbb
mov
add
or
mov
ja
add
cs
mov
mov
push
xor
jno
loope
lds
add
je
out
out
or
dec
jge
cwtl
mov
mov
addl
jo
adc
clc
cwtl
push
popa
flds
push
mov
imul
mov
xor
add
mov
cld
shl
test
cmp
ja
repnz
add
xchg
clc
stos
jmp
jne
jbe
xchg
xorl
mov
std
pop
jno
pop
inc
jmp
mov
add
inc
xlat
ja
cmpsb
data16
inc
in
mov
or
xor
lods
or
mov
or
rclb
xor
xor
ret
xchg
clc
mov
mov
scas
add
hlt
sbb
out
lret
mov
fbstp
fiaddl
fnstcw
xchg
mov
outsl
inc
stc
pop
lretw
or
in
mov
lret
out
and
mov
add
adc
rolb
xor
push
inc
fs
mov
xor
and
or
nop
or
sbb
jnp
cmp
sbb
mov
imul
xor
fldl
dec
jnp
cmp
push
js
into
andb
pop
leave
lock
movsl
das
sub
adc
dec
adc
lea
push
aad
sbb
inc
imul
out
mov
xchg
iret
gs
mov
flds
or
dec
inc
inc
les
sahf
pop
xchg
sti
loopne
aam
add
sbb
int
dec
faddp
repz
pop
inc
pop
or
shlb
shrb
scas
push
test
jne
negb
cmc
lcall
enter
mov
dec
repnz
adc
mov
orb
push
movsl
sbb
pop
test
pushf
ret
dec
push
xchg
xor
xchg
repz
push
push
rorl
jmp
dec
dec
stos
out
pop
les
leave
jae
aas
stc
outsb
lods
test
gs
pop
mov
and
gs
jmp
or
adc
pop
mov
mov
out
cmp
mov
lahf
or
xchg
jno
xlat
jns
outsl
inc
lods
mov
movsl
rorb
add
push
or
jno
jmp
mov
and
shlb
fs
pushf
pop
movsb
inc
mov
mov
into
out
or
and
movsb
xor
test
in
cmp
sbb
dec
xlat
mov
fwait
cmp
and
dec
loop
repnz
jle
divl
xlat
sbb
push
movsl
cmp
inc
xor
insl
stc
cmp
aam
jns
ja
cwtl
data16
push
ss
out
lock
jne
xor
mov
jne
fidivrl
in
je
pop
mov
add
cs
mov
pop
ss
mov
sti
std
imul
pushf
shlb
pusha
fcomps
inc
in
sbb
aad
sbb
xor
pop
rclb
mov
aas
bound
cltd
scas
jne
adc
andl
mov
cmpsb
pop
fimuls
cld
xor
cli
lock
pusha
jge
and
sahf
cmp
lea
insl
imul
inc
mov
outsl
test
add
push
imul
into
add
out
addr16
outsb
add
fdivrs
xor
jno
xor
shlb
cmc
ljmp
jae
jae
sub
push
mov
stos
popa
cmp
inc
inc
mov
test
insb
and
popa
adc
jmp
mov
pop
inc
jmp
jecxz
add
mov
mov
jecxz
pop
push
aam
mov
test
and
sbb
popf
fmull
out
sbb
add
mov
push
lcall
std
rolb
fidivrs
push
outsl
hlt
mov
or
dec
add
notl
out
call
mov
mov
mov
push
pop
mov
aaa
inc
inc
xchg
mov
popf
lods
push
adc
rorb
jecxz
arpl
inc
xchg
stc
lret
push
adc
addr16
cwtl
inc
cmc
lock
or
add
test
push
or
jl
and
fbld
loop
inc
mov
push
ret
cltd
pop
sub
add
adc
dec
sahf
or
add
mov
movl
xor
adc
adc
movsl
cwtl
loope
jge
and
pop
or
cmpsb
push
pushf
popa
andb
jns
pop
push
push
add
or
push
xchg
loop
outsl
neg
ret
and
nop
mov
adcb
inc
jg
stc
lds
mov
inc
in
lcall
fidivrl
adc
jp
sbb
loopne
stos
pushf
or
inc
adc
add
cmp
add
or
nop
xchg
dec
lcall
adc
mov
push
int
add
push
out
lock
or
in
push
ret
pop
add
inc
push
les
lea
icebp
sbb
push
cmp
cwtl
js
orb
sub
lea
jecxz
cmp
sti
or
push
inc
xlat
inc
mov
shll
xchg
or
push
rclb
push
mov
or
test
adc
aam
inc
dec
add
clc
sbb
cld
inc
cmp
inc
rcr
cltd
sbb
int3
xchg
lea
or
adc
or
arpl
jmp
cmp
ljmp
shlb
lods
or
inc
dec
insb
inc
sub
pop
repz
ds
adc
ss
aaa
out
jge
or
cmp
or
pushf
mov
push
xor
jecxz
or
inc
inc
xor
push
sbb
or
sbb
pop
sbb
es
lret
xor
out
xchg
fcmovbe
push
fdivs
test
or
shlw
in
lcall
fidivl
bound
xchg
jae
or
push
divb
push
inc
iret
dec
jmp
mov
ss
cmp
cltd
dec
jp
push
invd
aad
fmuls
inc
sbb
sub
or
gs
rol
mov
bound
xchg
mov
ret
xchg
push
or
push
movsl
add
cmc
mov
inc
adc
sbb
jne
movsl
mov
mov
cmp
cli
push
adc
test
xor
rcll
dec
ret
ljmp
mov
xchg
jl
or
or
cs
or
or
movsl
outsl
inc
stos
sub
aas
in
scas
test
daa
std
ret
nop
or
pop
lods
mov
adc
rcrl
sub
les
cmp
jecxz
pop
fs
push
decb
outsl
push
aaa
sub
roll
inc
inc
ljmp
pop
mov
jp
cmovb
fmuls
stos
int
mov
dec
outsb
jo
movsl
loope
iret
lret
mov
pop
mov
repz
pop
or
pop
fcoms
lcall
or
sub
or
push
sbb
popf
sub
or
movsl
mov
mov
add
adc
mov
or
es
or
pop
push
xchg
inc
imul
stos
mov
jb
jp
sub
leave
bound
dec
add
dec
call
inc
mov
pop
sub
cmp
sahf
ret
into
inc
lea
icebp
push
mov
fisttps
popa
repz
cmpsl
mov
or
les
ljmp
rorl
das
pop
popf
in
xchg
and
or
inc
or
fsubrp
jl
enter
jle
pop
aas
add
fcmovne
inc
or
adc
insl
push
dec
cli
cmpl
ljmp
fisttpll
jg
repz
push
xor
fsubl
dec
dec
dec
mov
pop
rorb
les
loop
ret
inc
call
push
inc
ljmp
add
xorl
and
test
rorl
dec
mov
orl
rorl
sub
rcrb
mov
mov
fiadds
mov
lret
pushl
fisttps
mov
jg
dec
movsl
jns
mov
push
add
fldlg2
mov
xchg
mov
in
mov
dec
mov
dec
sbb
sub
xor
push
pop
xchg
adc
jmp
pushaw
mov
xchg
fnstcw
lret
rclb
fmuls
stos
xor
int
mov
movsl
std
mov
or
ret
movd
jecxz
cmp
jne
stos
insb
jp
mov
xchg
in
and
mov
mov
mov
add
mov
mov
es
outsl
test
lock
xor
cmp
loope
mov
dec
mov
aad
pop
cmp
imul
das
push
orb
xchg
in
or
and
dec
push
lock
push
leave
and
or
fiaddl
pop
or
in
sbb
psrlq
std
das
lret
or
stc
cwtl
push
loopne
add
cmpsb
and
cmc
jbe
dec
stc
call
in
or
jecxz
outsl
insb
lret
mov
std
test
out
gs
mov
sub
jp
lahf
iret
roll
cmp
push
pop
iret
mov
out
mov
inc
out
dec
xor
or
mov
int
out
inc
leave
lea
shrb
ljmp
aad
fsubrs
sub
lcall
insb
add
adc
cwtl
sarb
add
pop
cmp
shrl
or
mov
cmp
inc
jl
fs
fimull
jmp
fs
lret
test
jmp
pop
aaa
xchg
push
out
or
inc
push
inc
mull
mov
cmp
subl
cmp
ret
aad
arpl
testb
mov
iret
mov
mov
dec
sbbl
push
arpl
adc
jg
fs
inc
movb
push
rcpps
mov
js
sbb
or
jmp
repnz
or
mov
xor
add
out
cmpsw
inc
dec
jmp
icebp
jl
pop
and
sub
cmp
or
loopne
and
icebp
out
dec
sti
push
in
nop
ret
adc
or
arpl
int
sub
lcall
outsb
loopne
cmp
or
push
xchg
or
sub
bound
or
pop
push
push
loop
sub
push
mov
loope
adc
xchg
or
roll
int
xor
imull
js
push
or
mov
arpl
and
or
jae
scas
pop
cli
or
leave
fbld
sub
bound
jno
and
mov
inc
xlat
sbb
lds
xchg
ss
mov
jmp
jb
movsb
ret
inc
or
xor
iret
pusha
cmp
aam
lea
dec
mov
test
add
dec
rcrl
cltd
or
imul
or
lds
mov
cmp
addr16
jge
loop
add
dec
lds
adc
popa
out
xor
fwait
dec
push
addl
adc
xor
imul
ljmp
gs
inc
pop
push
or
inc
push
or
sub
sbb
loope
scas
negl
or
jle
push
cmp
adc
ret
gs
ljmp
test
lods
adc
std
scas
mov
mov
xchg
dec
and
add
stos
pop
dec
add
std
or
adc
or
sbb
adc
in
iret
jmp
test
mov
push
or
xchg
shl
or
sub
gs
fimuls
push
in
pushl
lcall
out
js
repz
roll
inc
cs
ljmp
mul
hlt
or
lds
out
lahf
push
add
inc
or
rcr
and
xchg
jb
inc
outsb
or
or
xor
inc
add
or
in
pop
movsl
mov
aas
push
sbb
cmp
orb
lcall
mov
xor
lock
jmp
lret
mov
mov
stos
int
into
insb
orb
push
call
xorb
arpl
cmpsb
and
mov
sub
nop
or
repnz
lock
insb
popf
lcall
les
int3
push
ficomps
imul
mov
fsubr
jbe
mov
mov
push
popa
repz
add
mov
repz
and
lcall
lds
add
les
inc
mov
dec
sbb
loope
cmp
adc
les
xor
fprem1
sbb
nop
xchg
add
out
test
mov
push
aas
inc
insl
push
lcall
push
jne
xchg
mov
dec
pusha
add
mov
scas
sub
pop
sarl
insl
xchg
pop
call
cmpl
fwait
push
loopne
add
inc
inc
out
xchg
jbe
lods
xor
pop
or
dec
mov
sub
lea
add
repz
ret
daa
or
repz
add
imul
aaa
gs
cmpsl
and
mov
push
pop
adc
sub
xor
sahf
aad
pop
repnz
pop
dec
inc
dec
jnp
sbb
sub
test
mov
push
addr16
filds
xor
sahf
jb
pop
mull
cmp
or
and
cltd
mov
jo
sti
ror
jmp
ja
cmpsl
sbb
xchg
std
mov
bound
test
pop
xchg
dec
scas
outsb
popa
fwait
push
mov
xchg
mov
add
jl
cmpsb
fsubrl
xor
dec
adc
es
shll
cmp
fldt
push
and
out
in
lret
cmpl
es
mov
mov
shll
fstpl
mov
testb
pop
fcomip
subl
unpckhps
sub
stos
mov
dec
cmp
testb
jmp
in
add
stc
jecxz
shlb
and
cmp
stos
mov
stc
pop
insl
scas
inc
mov
rcr
push
pop
pop
push
jno
adc
mov
adc
inc
mov
jg
jne
push
lea
xchg
sahf
cmp
mov
jg
cmpl
xor
jmp
xchg
mov
push
stos
push
test
pop
stos
pop
lods
mov
inc
or
or
add
orl
mov
and
mov
and
lret
and
or
les
adc
in
push
sub
lds
push
jae
sbb
lods
insl
xor
adc
shrb
mov
test
inc
add
xor
lock
iret
data16
fisttpll
jnp
ds
loop
jle
lds
mov
gs
jne
cmpb
push
xor
cmp
in
mov
xchg
pop
xor
push
dec
hlt
das
fs
dec
int
push
add
inc
pop
cmp
sbb
dec
test
pop
add
add
mov
jo
hlt
movsb
dec
popa
sbb
test
inc
and
jecxz
scas
mov
in
push
inc
lcall
sub
stos
movsl
aam
jae
pop
and
mov
nop
pop
push
movsb
and
or
je
or
mov
push
jbe
mov
out
push
bound
inc
push
dec
std
add
stos
out
adc
dec
cmp
lret
xchg
scas
lcall
das
inc
rclb
xchg
cmp
es
or
fdivrl
hlt
filds
negl
cmp
pop
loopne
ja
movsb
xchg
idivb
sbb
jmp
jne
pop
inc
cwtl
inc
push
rcrb
or
sahf
sbb
jge
adcb
cli
fcmove
and
cmp
mov
lock
xlat
scas
pusha
xchg
fdivr
mov
mov
inc
or
divl
fadd
sub
in
test
ds
jge
jno
xchg
or
in
cmc
test
and
dec
es
std
xchg
xchg
popa
dec
or
xchg
sbb
mov
dec
xchg
and
mov
add
dec
and
mov
sbb
test
jno
adc
insb
mov
rol
mov
insl
lret
push
inc
shlb
xchg
les
lcall
sti
pushf
sub
mov
fisubrs
outsb
testl
data16
in
orl
pop
filds
jae
sbb
jp
mov
lret
cmp
sub
in
bound
cwtl
ror
dec
mov
add
mov
add
add
sbb
dec
in
mov
ret
test
inc
jle
add
out
sub
out
gs
push
adc
and
cmp
jle
add
imul
in
loope
push
mov
push
test
mov
repz
mov
mov
pusha
adc
pop
mov
jg
dec
xchg
jno
sbb
ds
pop
pop
push
cmpsb
sub
sbb
adc
cmpsl
jb
xchg
mov
sub
jne
mov
out
sbb
mov
mov
loopne
mov
test
cvtps2pd
mov
loop
cmp
push
js
pop
stc
mov
dec
push
out
cmp
cltd
jne
and
fwait
idivl
je
mov
push
push
push
test
enter
scas
mov
adc
jmp
xorl
mov
cmp
dec
lds
addr16
pop
xchg
and
rcll
add
add
addr16
bound
cli
scas
add
aas
jno
ret
xor
xor
xchg
sbb
fldcw
push
mov
sbb
xchg
rcll
sbb
adc
sbb
cld
andl
cmpsl
in
andl
mov
out
xchg
cmpsl
mov
cmp
or
mov
sahf
mov
mov
mov
dec
je
xor
inc
mov
retw
cld
stos
popa
jb
je
add
xchg
and
dec
in
cmp
dec
les
lock
sbb
popf
arpl
outsl
mov
mov
jo
jns
and
fiaddl
ljmp
and
xchg
sbb
inc
shrb
movsb
mov
xorb
adc
imul
sub
cmp
lahf
add
lods
add
les
jbe
jle
cmpsl
and
lret
fisttps
lahf
pusha
aam
cwtl
sbb
adc
add
mov
scas
push
sub
push
in
ret
and
test
lcall
jmp
jns
push
iret
or
sbb
jae
jno
dec
add
aaa
xchg
mull
movb
jp
jo
sub
subl
into
mov
gs
mov
pushl
xorb
xchg
rclb
enter
outsb
xchg
jnp
repz
stos
fs
add
or
jecxz
ret
mov
sub
and
lcall
decl
jmp
rcr
dec
mov
push
lret
or
out
adc
mov
das
pop
or
fistps
in
jnp
sbb
andb
or
jge
cmc
mov
cmp
shrl
mov
lea
push
jp
xchg
lock
cmpsb
and
jp
loop
xchg
cli
cld
mov
add
or
push
lods
stc
std
sbb
xor
mov
lcall
lods
repz
jne
je
dec
add
fildll
ds
jge
lock
mov
jl
scas
xlat
push
test
xor
paddb
or
out
xchg
mov
ja
cmpsl
fdivl
divb
cmp
lods
sbb
bound
sar
mov
add
xlat
idivl
cwtl
or
scas
and
adc
push
inc
rcr
sbb
out
mov
loopne
inc
in
mov
dec
aaa
les
shrb
mov
ret
rcrb
sub
jo
mov
ror
rorl
fwait
cli
out
stos
cwtl
sbb
rolb
loope
lock
ja
imul
mov
sti
push
mov
cmp
movsl
mov
mov
mov
sbb
lods
and
jno
jnp
addr16
dec
rcr
cs
cmpsb
or
mov
xor
lea
stos
add
xorb
mov
add
inc
adc
mov
xor
adc
sbbb
call
ret
mov
fidivrl
pcmpeqw
cmpsl
loopne
dec
jne
dec
push
inc
orl
add
add
dec
or
mov
daa
sahf
xchg
gs
xchg
ficoms
adc
jecxz
xchg
out
stos
jl
repnz
xorl
cli
add
or
add
mov
sbb
pop
mov
xlat
rorb
aas
mov
sti
jb
fstpt
sub
mov
jl
faddp
xchg
push
pop
xor
sahf
decl
push
xchg
sub
dec
pop
jl
into
push
in
nop
pop
in
dec
or
aas
mov
outsl
pop
sar
xor
and
mov
adc
sti
jp
insb
lods
mov
xor
xor
and
pop
push
fdivrp
xchg
jb
into
and
jecxz
repz
jp
pop
inc
push
pop
jno
int
outsl
gs
push
lock
push
ret
shlb
jbe
cli
sbb
repz
or
mov
xor
pop
jmp
ficomps
je
out
inc
sarl
stc
sbb
in
scas
aaa
lcall
adc
sbb
pop
rcll
loop
lahf
sbb
inc
pop
je
pop
loope
mov
gs
mov
jb
and
xchg
repz
inc
sbb
imul
jge
pop
les
stos
sbb
dec
sbb
shll
mov
ret
mov
cmp
mov
mov
mov
push
mov
sub
dec
add
pop
ret
lret
push
nop
in
rcl
adc
xchg
scas
leave
add
popa
sub
sub
sbb
pop
int3
dec
fdivp
dec
dec
jae
shlb
dec
movsb
insl
mov
stos
lret
sub
pop
cmpsb
imul
pop
dec
cmp
repz
or
mov
push
mov
mov
test
cmpsl
orb
and
sub
jl
push
ss
cmpsl
fs
and
inc
mov
mov
into
loope
and
lahf
jb
cmpsl
andl
pop
or
push
loope
mov
adc
mov
rolb
push
sarl
fdivr
mov
addl
mov
imul
js
push
jo
cwtl
testl
xchg
inc
mov
popa
mov
shlb
xchg
xchg
nop
out
xor
xchg
jle
adc
sbb
pop
sub
jge
push
lea
out
imul
jb
cmc
mov
jnp
sub
in
mov
lret
add
mov
xchg
mov
push
or
jge
les
xor
imul
inc
jns
lret
inc
inc
mov
rorl
fldl
ja
mov
imul
gs
push
aaa
push
push
mov
cmp
les
and
outsl
add
sahf
mov
pop
jne
dec
fistpll
mov
and
xor
hlt
lahf
jecxz
es
or
cwtl
push
in
xor
sbb
fisubl
pop
mov
dec
and
inc
cmpsb
xchg
jge
or
negl
xorl
cmc
out
mov
icebp
repz
jae
stos
pop
and
stc
repz
pop
test
dec
mov
inc
mov
dec
out
movsb
push
xor
mov
imul
sbb
test
test
fdivr
ficoml
movsl
les
and
and
inc
fldenv
into
cwtl
lcall
lods
and
hlt
xchg
stc
dec
inc
push
or
imul
add
daa
inc
icebp
rcrb
inc
clc
popa
inc
xor
scas
repnz
mov
jo
repz
or
xor
testl
pop
mov
and
cmpsl
rorb
mov
inc
jle
or
xchg
sbb
rcl
fwait
push
repz
call
lcall
pop
dec
mov
push
mov
mov
mov
jae
out
push
ljmp
xor
imul
fdivrp
xor
mov
sub
pop
xchg
jle
jnp
inc
mov
add
mov
ffree
mov
lods
mov
mov
ret
clc
and
sub
not
push
sub
out
ds
cmpsb
incl
inc
pop
push
jp
push
mov
xor
adc
and
test
inc
push
imul
addr16
and
mov
cmpsl
pop
lock
inc
mov
xchg
addb
or
and
ret
pcmpgtb
lods
pop
outsl
nop
out
out
mov
repz
xlat
pop
sti
push
mov
adc
add
add
iret
pop
mov
pop
psrlq
or
iret
lods
mov
add
and
rcrb
dec
add
insb
and
call
mov
pop
es
cmp
mov
jg
xor
xchg
mov
mov
hlt
inc
insl
les
out
rorl
nop
negl
out
push
out
inc
xor
mov
cmpsb
scas
sbb
pop
mov
or
mov
jo
jno
push
push
adc
mov
dec
les
sbb
in
movb
pop
push
or
dec
mov
out
mov
inc
in
push
or
mov
ret
dec
pop
xor
stc
push
les
sub
pop
inc
push
or
pop
push
shlb
in
mov
fwait
adc
mov
or
and
jns
sbb
imul
insl
sub
lods
dec
data16
orl
movsl
loop
sbb
push
iret
fwait
out
xchg
scas
rolb
mov
xor
jne
jo,pn
xchg
into
jo
out
mov
outsb
adc
inc
or
add
xor
push
push
adc
inc
cmp
add
test
jb
es
fidivl
pop
jnp
cmpsb
scas
in
xchg
lret
and
arpl
mov
fisubs
dec
mov
xchg
sarl
sbb
std
push
xor
or
xor
lds
in
cmp
push
push
ret
out
inc
mov
jp
sub
test
mov
cmc
mov
add
fwait
dec
xchg
fstl
int3
xor
dec
divb
lea
les
and
cmp
test
pop
lods
inc
inc
push
mov
push
add
iret
les
inc
pop
jo
push
mov
jns
sbb
push
mov
cmp
cmc
rorb
dec
icebp
std
jg
adc
shlb
jmp
mov
test
scas
pop
push
popf
sub
repnz
jle
loope
andb
mov
aaa
sub
adc
pop
loop
jo
rcr
popa
inc
sarl
sbb
cmpsl
test
inc
mov
cld
iret
les
push
es
pop
mov
pop
faddp
add
xor
std
mov
fimuls
jecxz
mov
in
xor
sti
pop
shl
cmp
pop
and
inc
xor
fucomp
dec
testl
rol
dec
jge
xlat
shrb
es
sub
loopne
les
adc
mov
idivb
cmp
testl
pop
in
popa
sahf
push
sub
lcall
in
pop
push
mov
and
loopne
test
leave
lds
out
adc
inc
sarb
dec
nop
add
sbbl
mov
jp
mov
pop
mov
fisubrl
insl
fcoms
push
testl
xchg
aas
stos
arpl
mov
out
dec
mov
jno
test
pop
imul
xorb
adc
les
lret
leave
xor
jl
bound
decl
out
ljmp
aad
cmp
scas
sti
pop
pusha
push
cmp
hlt
mov
aad
rclb
mov
mov
mov
xor
cmc
stos
addr16
wbinvd
insb
xorb
mov
ljmp
mov
fsubp
and
mov
insl
pop
inc
js
cmc
push
pushf
jge
pop
insl
out
std
hlt
inc
sahf
xchg
mov
mov
mov
aad
adc
mov
pop
pop
jg
xchg
in
out
adc
mov
pop
jmp
sbb
xchg
dec
ret
dec
sub
arpl
inc
fdivrs
movb
cmp
push
mul
sahf
cmpsl
iret
les
test
lock
fadd
in
ret
ljmp
sti
xchg
bound
add
mov
dec
push
dec
jp
jno
sbb
into
sarb
sahf
shlb
les
into
sarb
sbb
out
cltd
add
jge
pop
or
pop
or
fmull
jo
and
scas
loopne
in
add
outsl
in
outsl
mov
mov
lea
xor
in
popf
sbb
sahf
or
repz
loope
stos
push
xchg
or
mov
clc
addr16
sbb
loop
pop
sbb
iret
or
into
fldl
adc
jno
mull
mov
mov
lahf
and
pop
scas
rorb
xor
mov
pop
jp
xchg
stos
adcl
mov
inc
jmp
fdivl
add
out
push
sahf
xchg
sbb
andl
lea
mov
movl
or
out
vcvtss2sd
imul
fstl
scas
mov
and
cs
push
adc
push
ret
callw
jl
or
mov
stc
notb
mov
jmp
loopne
mov
test
lods
cmp
and
dec
adc
xchg
les
in
pop
rcrl
push
sbb
xor
aaa
add
inc
add
mov
les
mov
push
stos
inc
jecxz
test
xchg
loopne
xchg
jecxz
shrb
nopl
stos
jmp
lods
inc
outsb
jmp
xchg
nop
cmpsl
into
jl
xchg
xor
gs
imul
stos
add
pop
sbb
loopne
es
ret
mov
jle
rcrb
cld
push
mov
push
mov
sub
sbbl
jo
loop
fldcw
js
xchg
push
jo
xor
or
sbb
cwtl
mov
std
repz
sbbb
inc
cmpsl
inc
test
adc
cmpsl
sbb
cmp
push
movsl
gs
cltd
imul
sub
sbb
sub
shl
or
mov
and
je
xor
sti
in
and
lcall
int
fisttps
xchg
outsl
pushf
inc
or
cmp
insl
mov
xor
lcall
or
cmp
push
inc
mov
clc
mov
aas
loopne
fidivrs
and
mov
inc
into
add
inc
test
sub
repz
js
pop
xchg
add
icebp
xchg
outsl
jo
test
arpl
leave
xchg
rcrb
mov
adc
cs
insl
inc
dec
arpl
fbstp
leave
int3
shll
popf
fwait
out
mov
mov
jne
ficomps
jp
js
mov
add
andb
imul
xor
push
loope
mov
scas
add
pop
or
pop
cltd
jg
fsubrs
insl
ja
stos
sti
and
cmp
movsl
cli
pop
icebp
mov
jecxz
fwait
pop
popa
insl
xchg
icebp
inc
or
flds
mov
loope
dec
mov
insl
push
fisttps
mov
out
jnp
pop
addr16
adc
lea
jmp
mov
jne
outsb
and
std
pop
adc
lcall
push
movsb
clc
lds
loop
pop
inc
or
les
lods
test
xchg
pusha
insb
mov
clc
xchg
add
sbb
clc
movsb
mov
dec
sbb
jne
call
out
xchg
mov
cmpsb
hlt
adc
or
rorb
ja
xchg
inc
out
gs
bswap
testb
popa
sbb
enter
test
lock
ret
fcoml
rorl
and
mov
mov
pop
test
mov
repz
pop
mov
in
pop
mov
cmpsl
mov
adc
cmc
xchg
adc
hlt
popf
cmp
add
in
xor
cmpsb
in
lock
mov
pop
data16
aas
addr16
subl
lods
jmp
imul
adc
mov
imulb
jmp
pop
stc
xchg
cltd
adc
and
xor
or
movsl
push
scas
sbb
jno
stc
arpl
jno
dec
into
comiss
xchg
jae
sbb
icebp
aam
push
adc
push
daa
fmuls
mov
adc
jae
push
push
mov
pop
cmpsb
lret
out
es
dec
cmp
add
push
push
dec
inc
inc
sarl
cmp
fstl
push
js
adc
mov
mov
stos
fstpl
cld
mov
lret
cmpsb
xchg
aaa
sbb
pop
addr16
jl
dec
dec
jg
jge
ret
nop
jbe
mov
sub
pop
push
mov
inc
divl
mov
mov
cltd
js
cld
mov
jb
sbb
sbb
ja
lcall
stos
pop
xor
push
mov
or
stos
sbb
repnz
in
adc
adc
sub
pop
jns
lods
mov
or
sahf
fisubrs
sbb
jnp
jecxz
or
xchg
push
mov
sbb
mov
adc
sub
adc
xor
xlat
outsl
test
outsl
pop
insb
mov
or
mov
sbb
jmp
or
repz
iret
sbb
leave
ret
scas
notl
xor
in
jecxz
xchg
mov
jb
push
mov
fsubrl
dec
outsl
clc
aad
mov
js
xchg
xchg
jb
jne
adc
dec
xchg
xchg
dec
aaa
lcall
jmp
push
out
dec
mov
jo
shrb
mov
cmp
movb
cmp
cs
mov
mov
mov
sahf
jle,pn
pop
cld
and
add
mov
push
lret
jmp
pop
push
or
out
lret
movsb
jns
mov
shr
daa
or
push
addr16
push
sti
add
popa
mov
inc
or
dec
push
jl
fwait
addr16
xor
sbb
xor
sbb
in
push
inc
push
xorl
cmp
lret
fcomps
dec
out
addr16
cmp
pop
mov
push
mov
lods
xchg
sub
sbb
das
xchg
inc
nop
inc
xor
mov
call
mov
lods
add
test
test
mov
dec
sub
lahf
push
ss
push
mov
jne
jle
out
ret
add
cmp
and
cmpsb
push
and
add
enter
scas
jb
movsb
pslld
dec
inc
addl
mov
push
xor
xchg
adc
ret
inc
adc
call
divl
es
mov
fdivrl
jo
rorl
jp
jno
insl
imul
cld
jecxz
bound
repz
sbb
out
addr16
int3
hlt
ds
fadd
pop
jae
dec
sub
xchg
insl
lods
mov
add
outsb
mov
in
jo
gs
mov
cmpsb
xchg
aam
push
es
rcrl
movsb
cmp
nop
inc
out
jb
adc
les
dec
push
xlat
jns
mov
pop
gs
lcall
mov
addr16
mov
push
fdivr
shlb
jae
out
mov
ret
dec
inc
push
xor
mov
xchg
js
scas
inc
inc
call
out
popa
les
pop
mov
and
pop
pusha
push
mov
into
iret
aaa
xchg
xor
cmp
out
mov
cmpsb
sbb
repz
mov
mov
mov
pop
pop
jle
sub
dec
inc
xchg
cmp
cmp
pushf
dec
or
pop
xchg
insl
or
loope
test
stos
sarl
or
sti
push
lret
test
and
in
xchg
pop
in
mov
jg
insl
aam
xor
popf
repz
add
scas
sbb
mov
mov
icebp
dec
adc
jb
jbe
sbb
es
lret
mov
cmpsb
add
arpl
pop
inc
inc
les
arpl
mov
jo
add
popf
mov
outsb
sub
mov
outsl
jmp
stos
fwait
push
xchg
cmp
mov
popl
aaa
push
jno
cld
icebp
push
and
fildl
sti
out
testl
iret
enter
mov
stc
ja
push
or
inc
mov
mov
in
leave
xor
xor
mov
aas
xor
xchg
ret
or
insl
adc
xchg
jae
cli
cmp
or
aas
insb
inc
mov
repz
or
jae
mov
lock
cmp
idivb
addr16
inc
testl
cmp
pushl
stos
pop
ret
repz
adc
jno
rorl
inc
daa
mov
lret
mov
out
adc
scas
or
mov
out
lods
test
outsl
call
jnp
mov
cmc
ret
movsl
or
hlt
in
sahf
cmpsl
add
push
out
inc
mov
int3
mov
mov
adc
mov
mov
and
and
xchg
xchg
adc
xchg
sbb
mov
push
jbe
sarb
jb
xchg
mov
imul
cmc
in
cmc
add
nop
jo
outsl
mov
loop
scas
mov
ret
mov
mov
orl
arpl
and
mov
lods
ds
jo
inc
ja
lcall
sbb
out
cmp
imul
std
mov
dec
insb
sahf
rcll
push
add
scas
int
repnz
loopne
fdivs
and
xor
lcall
inc
push
mov
sub
mov
filds
cmpsl
les
adc
push
mov
sbb
add
xchg
sbb
out
call
in
dec
out
add
lret
out
or
les
andl
fnop
mov
push
push
xor
aam
xlat
sarb
shlb
arpl
push
dec
loop
bound
call
js
ret
jmp
or
or
loope
arpl
ljmp
loope
jne
add
ret
xor
mov
les
mov
movsb
xor
mov
sti
rcl
fucom
cmp
inc
out
aam
mov
es
or
lret
xchg
ret
push
mov
push
xchg
outsb
sbb
mov
daa
clc
dec
js
call
pop
push
xor
pop
lea
pop
les
pusha
xchg
push
jmp
dec
dec
neg
inc
cmp
inc
rorl
jns
jg
aad
stos
sub
repnz
push
jns
fadds
shrl
cwtl
stc
mov
iret
xor
cmc
cmc
lea
and
push
mov
sahf
mov
test
mov
sub
das
cld
mov
lcall
jne
testl
push
add
enter
mov
xor
les
nop
jl
xor
js
jb
or
push
lea
shll
or
or
sar
and
lods
insl
add
out
dec
mov
xor
push
sub
stc
movsl
or
es
add
imul
scas
stos
or
mov
ljmp
mov
push
adc
jne
add
mov
adc
pop
mov
jp
push
mov
sub
or
dec
out
jge
sbb
push
movsb
mov
ret
mov
and
cmp
add
xchg
dec
push
inc
cmp
into
inc
das
loopne
add
shr
add
cmp
and
iret
fwait
dec
push
add
adc
movsb
test
pop
imul
adc
test
testl
stc
cmpsl
adc
in
jp
mov
mov
push
int3
xchg
notb
and
mov
mov
mov
out
rep
notb
scas
pop
push
fisttpl
cld
and
cmpsb
cmp
add
je
jecxz
dec
mov
rorb
push
jne
inc
and
repnz
pop
jne
pop
inc
lret
ja
sbb
sub
pop
in
mov
stos
xchg
xor
iret
jb
jo
pop
cs
popa
call
loopne
popf
cmc
jb
add
dec
clc
rclb
add
aam
stos
ret
or
je
xchg
loope
pop
ja
rcl
push
out
gs
aas
and
sub
jecxz
ljmp
out
adc
dec
mov
je
or
leave
movsl
sarl
jb
rorl
mov
aaa
lcall
je
pop
mov
cli
sub
loop,pt
mov
adc
push
inc
and
icebp
fildl
sub
sub
and
xor
mov
hlt
in
inc
arpl
leave
nop
or
insl
cmpsl
addb
pop
inc
push
and
add
out
push
imul
jo
test
sbb
ja
icebp
jnp
mov
mov
lods
or
pop
xor
icebp
pop
cmp
scas
xchg
adc
in
sahf
mov
negl
cmpsb
aad
dec
scas
inc
inc
mov
mov
fwait
cmpsl
pop
jle
sahf
and
fimuls
loope
add
insb
jecxz
repnz
dec
cmp
fldl
mov
xor
xchg
orl
out
xor
xchg
inc
dec
sahf
cmp
xlat
mov
xchg
jne
adc
icebp
adc
in
pop
push
clc
sarb
mov
pop
jb
fadds
mov
test
sbb
cmc
mov
add
xor
fmuls
repnz
mov
push
jno
push
xchg
xchg
out
outsl
icebp
jae
inc
sbb
ss
call
lahf
fisubs
in
adc
call
dec
in
rorl
into
andl
dec
mov
addr16
mov
iret
fiaddl
pop
xor
pusha
sbb
int3
push
inc
add
sbb
inc
mov
sub
pop
stos
add
jno
jbe
push
dec
cmp
out
repz
and
sbb
cld
inc
mov
aas
and
xchg
or
insl
cmc
adc
les
addr16
ja
insl
call
sbb
jp
scas
sub
cld
jo
ds
cmp
sbb
addr16
ret
and
push
imul
sbb
pop
mov
cwtl
ficompl
mov
lds
mov
push
mov
jecxz
iret
subl
add
fwait
dec
lods
cmp
xchg
scas
inc
pop
orl
sarb
aad
sbb
mov
stos
rol
shl
fistpll
cmp
mov
pop
jle
and
rcll
scas
add
add
mov
shll
and
test
adc
pushl
adc
xchg
add
pop
neg
pop
ror
mov
lds
stc
cmp
hlt
cmpsb
in
mov
mov
shlb
and
mov
add
shr
ret
jl
sahf
mov
dec
sti
movsb
movsl
xchg
in
jae
adc
dec
xchg
xor
rol
xor
ja
xor
pop
hlt
insb
xlat
push
sub
scas
xlat
add
orb
rolb
cmpsb
test
shl
lds
sti
sbb
xor
das
mov
ror
jnp
inc
mov
in
add
mov
inc
sub
inc
xchg
sbb
adc
jmp
jae
sub
call
mov
xor
sbb
out
inc
inc
dec
jno
pop
mov
pop
adc
push
std
aas
popa
sub
pop
insb
cltd
sahf
rorl
mov
xchg
and
ja
mov
inc
push
or
rep
mov
mov
add
cmpsb
pop
fs
push
les
sub
cs
aas
xchg
jae
jns
mov
scas
sar
in
stc
push
add
jo
repz
sbb
dec
push
adc
xchg
fwait
shlb
scas
fwait
push
push
jne
mov
les
and
mov
or
inc
adc
push
repnz
sbb
sbb
mov
subb
out
mov
fisubrs
adc
sti
into
inc
imul
sbb
shlb
in
insl
decl
mov
inc
cmp
scas
mov
dec
mov
testb
imul
hlt
add
pusha
dec
aas
fiaddl
ljmp
mov
jb
outsl
into
push
sahf
scas
xor
faddp
cmp
loope
push
push
xchg
les
ficomps
and
push
mov
jb
insl
stos
pop
faddp
out
xorb
dec
subl
dec
mov
out
js
pmulhw
xchg
inc
test
les
xchg
test
xchg
jl
push
pop
pop
pop
and
lret
outsl
ja
dec
dec
flds
loop
push
lea
xchg
jo
popfw
fnstsw
pop
mov
jmp
pop
hlt
push
dec
and
ficompl
jae
adc
out
pop
enter
jg
mov
cmpsb
sub
xchg
add
lahf
mov
ja
pusha
adc
add
jnp
fnstsw
insb
xchg
mov
push
mov
sub
dec
add
sub
mov
or
lret
or
sbb
insl
iret
decb
lret
or
scas
mov
push
or
popf
insl
cmp
aam
or
adc
dec
insb
popa
jnp
negl
paddb
inc
jne
sahf
loopne
out
int3
add
jnp
pop
enter
mov
in
sub
or
pop
loop
jge
repnz
or
add
ret
into
adc
push
or
mov
mov
jmp
loop
sbbl
jae
mov
mov
jg
mov
out
or
mov
arpl
dec
mov
loop
dec
cltd
cmp
push
repnz
adc
cmpsb
adc
or
pop
mov
cmp
flds
in
cvtpi2ps
or
mov
jmp
insb
imul
dec
cli
bound
add
xlat
sub
addl
out
push
aam
xor
jle
insb
or
xchg
or
decl
call
xchg
mov
ja
test
scas
mov
mov
or
enter
or
sbb
ss
add
cli
outsb
jb
xchg
daa
or
mov
or
adc
mov
sub
xchg
push
pop
hlt
push
decl
sahf
push
inc
outsb
sub
mov
add
fcompl
jle
jae
add
cmpsl
lret
fsubl
xchg
and
out
stos
and
cltd
xchg
repnz
cmp
push
or
stc
int
pop
mov
aaa
or
adc
adc
aad
cmpsb
bts
add
les
fistl
insb
dec
scas
xor
xchg
in
jae
sub
inc
xchg
movsl
xchg
or
dec
and
mov
aaa
iret
ljmp
in
inc
xchg
sbb
out
test
aaa
or
fisttpl
or
or
add
aas
sarl
notl
imul
mov
fadds
xor
in
cmp
loopne
or
inc
aam
adc
movsl
or
nop
repnz
cld
or
and
stos
rol
mov
mov
insb
orb
shlb
xor
add
sub
lock
mov
push
pop
imul
out
dec
popa
xor
outsl
or
outsl
addr16
or
popf
pop
xchg
orb
add
and
or
cmpsl
inc
mov
push
adc
or
sbb
mov
mov
ss
or
xchg
inc
fs
iret
xchg
cmp
test
sahf
sbbl
or
mov
sub
or
and
das
mov
jp
mov
lahf
push
sbb
jns
insb
jge
adc
outsb
pop
or
int3
push
cs
or
cmpl
mov
or
jo
in
adc
pushf
lret
test
aad
clc
push
dec
add
or
aaa
ss
cmp
mov
insl
shrb
decb
psraw
or
shr
mov
pushf
std
cmp
aas
jg
fiadds
out
mov
or
loope
popf
pushf
xchg
test
std
xor
inc
sbb
adcl
or
call
and
mov
loope
orl
pop
xor
xor
mov
mov
add
xor
or
mov
pop
outsb
iret
dec
daa
push
dec
cmp
cmp
into
or
push
mov
and
or
cmp
clc
or
inc
je
call
xlat
in
inc
jns
fildl
cltd
or
mov
in
enter
outsl
adc
xor
int3
je
jge
enter
dec
repz
adc
xchg
sti
aad
push
adc
or
dec
xchg
or
cs
pop
add
mov
push
or
sarl
dec
and
test
adc
adc
idiv
push
iret
jnp
cli
lods
cmp
sti
jo
or
mov
add
or
stos
dec
mulb
mov
jno
and
xor
lds
jnp
fs
or
out
rcll
mov
xchg
or
push
bound
frstor
ror
loope
das
mov
cmp
cmc
nop
fisttps
lcall
cmp
adc
sub
xlat
rorb
xchg
lods
in
lret
jle
or
xorb
mov
fiadds
push
fdivrl
or
push
and
aaa
hlt
bound
ds
mov
movsb
sub
inc
jp
loope
ss
push
pushf
data16
xchg
je
iret
jmp
add
inc
dec
movsb
pop
jae
cli
ljmp
movsl
in
nop
cwtl
push
loope
inc
or
sbb
dec
cmp
lea
aaa
fildll
or
pop
neg
xor
add
mov
cmp
filds
pop
lret
aas
jmp
int
cmp
pop
pop
stc
adc
loope
das
cli
mov
inc
sub
xor
pop
or
into
lret
mov
negl
leave
fcompl
add
out
in
mov
adc
xorb
pop
or
rolb
pop
jb
cmpsl
add
ja
mov
stos
push
mov
aam
jae
dec
stos
fdivrs
out
pop
lcall
xchg
xchg
mov
dec
add
scas
adc
lea
xchg
dec
jnp
add
sbb
xor
or
rcll
xchg
shlb
or
or
cmpsb
in
adc
flds
movsl
cli
sbb
or
fstpt
sbb
clc
cwtl
add
jp
ficoml
sub
es
lcall
jl
decb
fnsave
fnstcw
jne
or
xchg
sbb
mov
xor
cmp
dec
inc
sti
jecxz
lock
mul
int3
sbb
std
add
enter
sbb
daa
lods
jae
aad
jb
or
insb
cmpsb
mov
pop
into
or
iret
inc
stc
dec
out
or
xchg
xor
inc
lret
out
insb
arpl
lcall
jmp
cwtl
idiv
jnp
cli
test
jne
adcl
pop
or
jp
mov
aad
or
shr
pop
mov
lods
mov
cmp
shll
movsl
rorb
sti
xchg
fs
add
inc
test
or
pop
pop
or
sub
into
dec
pop
bound
imul
push
or
dec
mov
ret
cmp
jnp
sub
or
or
mov
jne
sbb
pusha
shrl
pop
mov
cmpsb
or
push
fcoml
and
mov
mov
xchg
shrl
or
push
xor
out
incl
and
cld
jmp
test
out
ret
stos
movups
jg
xor
or
inc
adc
stc
dec
jnp
mov
mov
dec
sub
or
cmp
mov
cmpb
lds
adc
xchg
xchg
decb
icebp
sub
shl
fldcw
mov
cwtl
out
fucomp
cmp
movsl
lods
or
jl
or
mov
orb
scas
loop
out
or
or
mov
lods
mov
pop
and
or
daa
cmpsb
xor
leave
mov
mov
imul
push
jecxz
and
push
mov
cmp
bound
ds
xor
mov
cmp
lcall
xor
mov
and
pop
push
or
out
clc
vpmacsdql
bound
cmp
scas
xor
and
mov
and
xchg
add
add
cmp
les
xor
outsl
push
lock
dec
mov
iret
sub
sbb
inc
out
or
inc
test
inc
in
push
or
rcll
and
adc
pushf
jo
loop
inc
repz
rorb
fidivrs
xchg
or
mov
or
pop
xor
or
loop
dec
or
fidivrl
test
arpl
movsl
loope
lahf
pop
out
outsl
xchg
stos
cmpsb
mov
adc
dec
iret
jle
call
pop
add
fistps
inc
dec
insl
dec
dec
mov
or
add
test
fsubrp
outsb
repnz
mov
add
or
or
mov
mov
psrlq
add
mov
push
aas
std
ss
jae
mov
inc
dec
xchg
lea
das
or
nop
rorb
sar
mov
dec
lret
icebp
or
xchg
mov
pushf
jnp
and
mov
imul
sahf
xor
or
in
inc
mov
loope
or
push
inc
cli
xchg
inc
popa
mov
xchg
dec
cmpsb
sub
or
insl
cmc
leave
enter
scas
in
adc
pop
mull
mov
inc
xchg
clc
fisubrs
dec
in
pusha
imul
inc
int
sub
inc
mov
pop
popa
nop
ja
jp
mov
jle
mov
inc
ret
aad
xchg
imul
rolb
push
dec
andl
push
mov
out
les
nop
mov
mov
pop
pop
push
xor
or
mov
and
gs
outsb
mov
sbb
or
mov
iret
cmp
mov
lods
sub
push
push
xchg
call
jns
and
cmp
xor
std
or
fdiv
clc
inc
sub
mov
inc
mov
out
cmp
inc
inc
add
cmp
out
mov
inc
pop
test
out
and
cmp
pop
xor
stos
push
push
insb
jbe
xchg
add
xor
jl
movsl
addl
sahf
or
and
sti
clc
pop
outsb
daa
stos
into
fadds
sbbl
rorl
pusha
das
test
jle
loopne
enter
test
jp
je
mulb
fsubp
jo
in
enter
orb
jl
or
mov
pop
les
mov
loopne
mov
arpl
or
lock
or
out
rorb
add
xorb
sbb
pop
stos
test
push
or
xor
cmpsl
xor
push
jmp
sar
dec
ss
cmp
push
fsub
mov
cmpsb
lds
pop
sbb
movsb
push
xchg
mov
lret
js
xchg
push
jl
leave
ljmp
cmp
push
or
dec
push
std
or
and
mov
repnz
jnp
lret
sub
push
pop
add
inc
pusha
push
add
dec
or
xlat
sbb
outsl
fbld
adc
nop
insl
imul
xor
inc
sub
jp
mov
ds
or
or
mov
sbb
jge
shll
cmc
mov
hlt
adc
sti
and
jnp
cmpsl
push
sub
and
lret
daa
inc
test
fists
mov
sub
test
aad
push
xor
inc
andl
fdivs
jp
adc
adc
popa
sub
adc
sbbl
push
cmp
aad
lods
or
mov
pop
les
push
cltd
test
negl
insl
out
fisubs
jg
pop
xor
adc
lret
push
mov
inc
fwait
and
sub
mov
in
sti
mov
mov
inc
or
cs
mov
and
push
clc
add
add
xchg
pushl
popf
adc
push
cmp
adc
fsubrs
jmp
out
fwait
jp
cmpsb
out
adc
mov
and
push
in
xchg
pop
inc
mov
jmp
push
push
decb
fidivrl
out
dec
imul
rcr
or
pop
xchg
xchg
sbb
dec
mov
jmp
adc
push
hlt
lods
dec
addl
ret
mov
dec
lcall
inc
push
scas
shlb
dec
jno
daa
or
pop
inc
push
gs
cltd
push
mov
inc
call
adc
cwtl
nop
rorl
les
icebp
and
je
je
xorb
sub
mov
pop
repz
jle
cmpsl
inc
mov
mov
add
pop
add
inc
std
movsb
cs
in
push
add
jb
jno
sub
jne
outsl
jns
and
rorb
adc
lret
xchg
push
ficoms
sbb
inc
ss
popa
sbb
xchg
popa
cli
icebp
add
iret
daa
repnz
mov
push
pop
cs
lret
lea
testb
xchg
and
xchg
into
cmp
mov
in
pop
dec
xchg
fs
std
inc
iret
and
or
cmpsl
cli
lock
pop
jno
pop
test
sbb
ret
fadds
ja
and
clc
jbe
adc
pop
or
xor
sub
xor
out
fimuls
mov
xchg
jecxz
pop
push
push
mov
jbe
aas
or
sub
jmp
sbb
test
dec
mov
jmp
lcall
adc
cltd
dec
lret
mov
push
sarl
jbe
dec
mov
sbb
fisubs
push
sbb
nop
mov
add
pop
testb
or
cs
mov
ret
mov
into
inc
push
call
fsubs
int
imul
jge
lret
movsl
xorl
out
fnstsw
fst
pop
adc
pusha
inc
add
xchg
sbb
mov
lea
push
repnz
push
icebp
mov
mov
test
outsl
rolb
inc
enter
stos
mov
sub
rclb
out
repz
jo
fucomi
inc
inc
adc
push
cmc
imul
ja
dec
icebp
adc
add
sub
cmpl
das
mov
sub
sub
out
enter
dec
jae
and
aad
int
les
jne
mov
adc
jle
lcall
sbb
pop
mov
lret
jge
data16
in
mov
popa
pop
lds
push
lcall
ficoml
push
pop
in
decl
adc
fucomi
xor
mov
or
testl
jge
loope
ja
adc
or
mov
xor
mov
mov
jo
ja
or
or
divb
jns
in
stc
jns
call
adc
and
mov
aam
pushf
nop
out
jne
mov
jnp
pop
cmp
or
mov
filds
out
adc
mov
jecxz
sar
xchg
mov
xor
stc
push
stos
aad
adc
outsl
les
ss
js
out
mov
mov
add
pop
mov
insl
ss
xor
jle
inc
inc
shrb
mov
ss
into
ds
push
mov
xor
or
aas
leave
in
imul
sbb
push
mov
dec
fisttpll
xor
fbstp
mov
divb
or
mov
push
jge
add
loop
mov
inc
dec
add
inc
rolb
lds
mov
mov
insb
negb
inc
ret
xchg
jne
jmp
xor
pop
mov
ss
sti
add
stc
xchg
fs
xor
adc
sbb
pusha
dec
xor
add
test
shlb
out
sbb
push
pop
fldt
loopne
cwtl
push
xor
das
pop
std
mov
pop
shlb
add
dec
adc
lret
mov
nop
in
cld
mov
jge
xor
mov
pop
fdivrp
out
dec
cwtl
add
in
mov
testl
das
mov
cmp
add
call
cmp
into
out
push
cmp
shlb
test
inc
pop
iret
cmp
icebp
or
dec
mov
pop
xorl
popa
out
pushl
jae
xorb
icebp
mov
or
clc
mov
mov
repz
xchg
mov
adc
pop
fcmovnu
push
or
ja
rcrb
das
les
sub
stos
dec
cmp
jecxz
dec
das
or
mov
adc
add
push
mov
or
xor
mov
sub
and
ja
dec
adc
mov
jecxz
lcall
fsubrs
test
mov
push
pop
fisubs
loope
xchg
and
ja
adc
data16
push
adc
lea
jbe
gs
xchg
lds
lcall
push
inc
mov
mov
lea
sub
pop
mov
mov
lods
push
dec
jge
nop
imull
add
push
sub
mov
les
or
adc
in
cmpsl
mov
sub
es
lock
mov
jnp
lods
stc
push
push
sbb
lret
fnstenv
fwait
push
dec
idivl
insb
cmp
aad
mov
in
jmp
ss
pop
out
mov
in
or
mov
test
stos
jmp
pop
movsb
xchg
iret
xchg
add
push
mov
xchg
dec
cmpsb
cmp
movsb
mov
roll
add
dec
lahf
sub
inc
cmp
jno
xor
test
je
insl
push
inc
jns
lcall
sbb
into
xor
fisubl
and
ss
out
adc
out
jnp
outsb
xor
ret
pushf
loop
mov
fwait
push
inc
xor
mov
jp
test
cmpsb
fwait
mov
mov
cmc
mov
pop
adcl
mov
xlat
pop
mov
xor
xor
iret
ficomps
hlt
test
mov
jae
xlat
sub
pop
dec
jnp
add
push
les
sub
push
mov
insb
test
iret
test
sub
mov
das
mov
pop
out
and
xchg
mov
gs
mov
xchg
jg
jp
lret
movsb
jl
mov
mov
out
pushf
cltd
pop
repz
gs
or
pop
insl
jl
mov
mov
mov
outsb
jp
insb
push
inc
mov
jecxz
popf
dec
push
rolb
or
pop
dec
sarb
sbb
pop
jg
test
in
pop
lods
xchg
rol
and
loop
sub
outsl
loope
jae
add
pusha
cli
movsl
jbe
mov
add
and
push
lods
lods
lock
cmpsl
jmp
push
xchg
in
cmpsl
arpl
mov
outsl
repz
clc
mov
ret
mov
in
lock
cmc
sub
xchg
pop
in
xor
mov
inc
sbb
dec
add
xor
add
pop
jle
leave
repnz
aas
adcb
sbb
call
inc
mov
push
fldl
add
mov
stc
inc
in
xor
xchg
pop
outsl
sysret
repnz
pop
mov
rorb
or
pop
mov
mov
or
mul
test
data16
push
add
cmp
sub
aas
and
jae
mov
test
loopne
mov
sbb
xchg
xchg
mov
daa
pop
fistpll
and
pop
add
pop
mov
daa
sbb
jbe
orl
mov
sti
or
and
test
xchg
cmpsb
cmc
into
hlt
in
pop
aaa
cli
dec
aas
cld
pop
jmp
ret
pop
clc
dec
push
fs
xor
inc
insl
rolb
loopne
push
sahf
pusha
mov
filds
mov
mov
aas
jge
add
push
mov
ja
stc
push
push
jmp
jle
jo
clc
pop
fcmovbe
adc
roll
inc
movsb
jge
jecxz
add
push
push
sbb
outsl
add
sub
pop
out
add
xlat
cmp
mov
mov
fimuls
arpl
sub
sbb
clc
xchg
jp
mov
ja
out
add
mov
out
in
incb
mov
mov
bound
cmp
sbb
cwtl
pop
outsl
xor
cld
xor
scas
xchg
inc
out
gs
xchg
lock
aad
cmpsl
mov
dec
xor
into
pop
jno
call
jmp
ret
jge
or
dec
je
repz
cmc
push
xchg
inc
inc
sub
and
ficomps
mov
pop
neg
add
inc
lahf
into
mov
es
movsb
mov
mov
mov
xchg
out
stos
test
rorb
aaa
out
xor
sub
enter
sub
xor
dec
inc
or
stc
jae
lret
cld
ficomps
ljmp
inc
or
test
mov
scas
gs
rcrl
aad
test
adc
ffreep
sub
cmc
popa
lods
jmp
inc
push
cmpsl
push
jmp
push
test
cmpsl
add
mov
mov
gs
sub
cmp
out
fwait
cmpsb
fsts
add
sti
jp
add
pop
div
cld
stos
lcall
aaa
cmpsb
xorb
inc
lods
mov
sbb
xchg
cs
into
arpl
or
insl
fs
sbb
aaa
out
xchg
sti
sbb
call
lret
cli
xchg
inc
test
in
add
in
test
gs
imul
das
and
stc
xchg
jg
div
aam
cld
mov
jmp
or
add
add
add
add
rcl
rclb
xchg
jae
or
std
sahf
xor
inc
or
scas
mov
ja
sub
cmp
jne
mov
pop
or
sbb
and
cmc
jo
out
out
push
add
notl
pop
nop
xor
mov
push
push
or
loopne
cmpsl
dec
lods
je
sub
jge
icebp
aam
pop
fildll
fiadds
xchg
push
scas
out
lods
sbb
inc
int3
or
shlb
subl
imul
les
and
dec
pop
jno
mov
sbb
popl
add
or
fstl
adc
in
jb
pop
testl
imull
les
xor
hlt
out
or
inc
movl
lods
mov
insb
dec
fcoms
fcmovnu
jo
sbb
outsl
outsl
xchg
xor
add
jo
mov
mov
push
inc
sti
cmp
mov
icebp
sahf
dec
dec
and
sbb
push
hlt
std
push
add
pop
ja
pop
adc
inc
repz
in
push
xlat
in
sub
pop
fildll
sub
cwtl
data16
adc
js
out
xchg
cmp
icebp
mov
dec
in
rolb
ds
icebp
or
add
in
push
bound
addl
cmpb
sahf
adc
les
ja
movsl
jno
mov
add
push
or
lret
insb
test
clc
inc
les
jo
mov
jno
mov
lcall
push
idivl
sarl
sub
or
sub
loop
dec
jmp
movsl
cmp
cmp
jo
jae
xor
sub
out
sbb
mov
or
pop
and
movsb
or
jb
dec
or
push
add
arpl
sub
scas
fs
push
adc
js
lahf
mov
repz
mov
in
call
push
test
inc
mov
mov
cwtl
addr16
aas
pop
mov
stos
popf
push
movsl
dec
pop
dec
outsb
cmp
data16
fwait
mov
xchg
orl
and
aad
sbb
fisubl
hlt
cmp
sarb
or
inc
sbb
sub
ret
push
mov
mov
cmp
popa
ja
inc
int3
add
rcr
mov
cmp
add
xadd
inc
in
sahf
cmpsb
jns
wrmsr
mov
dec
push
jle
push
add
movsl
xor
fsub
mov
clc
or
scas
andb
fwait
jp
inc
fistl
mov
dec
inc
jge
and
push
sbb
in
jge
imul
mov
in
pop
push
add
loopne
push
mov
outsl
fdivl
loopne
aaa
inc
divl
push
add
mov
jns
mov
cltd
dec
inc
add
sti
xchg
mov
push
jl
fistl
testl
push
bound
rorb
xor
mov
jae
pop
test
mov
aaa
mov
rcll
jns
es
js
xchg
push
inc
fs
mov
addr16
dec
and
es
pop
adc
jb
ja
dec
stc
xchg
cmpsl
pop
scas
and
es
dec
jmp
cs
subl
xchg
stos
xor
or
mov
fidivs
ja
mov
mov
in
into
push
inc
pop
in
sbb
cmpsl
jno
sbb
dec
inc
xorl
call
mov
cltd
xlat
pop
mov
xor
inc
orl
cmpsb
testl
lea
lret
ret
inc
xchg
mov
pushf
in
adc
scas
sbb
popa
into
into
jno
pop
outsb
loope
and
adc
and
jge
or
or
sbb
cmpsb
hlt
cmpsl
stos
jmp
movsb
jne
sbb
push
incl
test
pop
cmp
xchg
jle
pushf
push
pop
jmp
or
shlb
add
clc
jecxz
push
mov
push
lods
ljmp
jmp
add
push
xchg
fcmovnb
loope
mov
mov
push
dec
pushf
cmp
movsl
jae
dec
loope
fdivrp
jnp
cmp
popf
cmp
mov
xchg
pop
testl
inc
ljmp
repnz
lods
xchg
or
and
imul
lock
out
or
enter
mov
mov
movsb
mov
lods
js
sub
push
subl
cmp
inc
dec
jnp
xchg
scas
data16
sub
mov
cmp
pop
mov
mov
scas
mov
ficoml
dec
jo
pop
sarl
or
icebp
insb
cmp
stc
jne
sub
scas
test
or
add
add
in
into
sbb
imul
jge
xchg
fldl
add
jns
je
mov
aad
jle
pop
add
add
and
jnp
in
mov
sbbl
out
fwait
sbb
jmp
push
addl
dec
push
jmp
jo
loopne
mov
cmp
adc
mov
push
jae
push
mov
mov
test
mov
push
rcrl
mov
xchg
loop
sub
ss
mov
inc
and
insb
addl
jbe
je
cmp
cltd
loopne
cmc
out
stos
lahf
repz
sbb
in
jecxz
into
cmpsl
je
pop
add
jno
sahf
ljmp
pop
js
and
adcl
mov
or
cmp
outsl
cltd
add
xchg
cmp
add
adc
add
and
roll
lcall
mov
fwait
pop
andl
mov
loope
ror
xor
sbb
adc
dec
in
add
cmc
fwait
sahf
mov
mov
push
xor
out
xor
mov
inc
aaa
fidivrs
jg
mov
mov
test
cltd
adc
ret
inc
jae
add
cmc
cmp
lds
std
push
out
pop
iret
xchg
dec
into
out
fcompl
or
fistl
jge
mov
push
into
test
shrl
inc
or
cltd
add
dec
inc
mov
test
cmp
sbb
int
push
gs
add
pop
out
into
cmpsl
repnz
inc
leave
fcmovbe
pop
mov
or
xchg
mov
hlt
mov
rolb
push
xchg
inc
sbb
and
lods
pop
les
pop
aam
push
or
jmp
xor
in
inc
lods
and
cmc
stos
enter
dec
enter
aam
in
rclb
insl
push
sar
idivl
sub
cs
mov
subl
sbb
shrb
inc
ret
dec
imul
int
shr
cmc
push
sub
mov
cmp
cld
jbe
mov
and
cltd
inc
mov
xchg
xor
test
sbb
cmpb
jmp
daa
mov
mov
test
sbb
mov
adc
xor
xor
mov
dec
call
ss
mov
push
mov
loop
stc
dec
inc
jno
jne
adc
cli
push
outsl
add
jae
icebp
mov
jne
repnz
rcr
insb
mov
test
gs
shl
fidivs
adc
sahf
aaa
idivl
out
mov
out
or
cmpl
cmp
mov
aam
outsl
xchg
mov
and
scas
push
xlat
aas
adc
and
imul
dec
and
mov
scas
xor
daa
mov
lock
adc
dec
rolb
pop
mov
or
push
push
jns
fiaddl
mov
test
aaa
add
addl
inc
mov
enter
or
jb
pop
sub
iret
test
addr16
icebp
loop
sub
shlb
dec
xorb
lcall
mov
jp
daa
lds
lret
arpl
or
adc
dec
adc
or
notb
mov
lahf
push
or
dec
pop
ret
xor
xchg
insb
stos
pop
inc
out
mov
push
test
push
mov
addr16
test
out
jmp
mov
and
jae
mov
jle
rclb
pusha
inc
mov
insl
pop
dec
mov
xchg
imul
loopne
jno
gs
pop
xchg
jge
xor
mov
mov
stos
out
sbb
dec
test
dec
xorb
rorb
pop
and
pushf
and
mov
aad
jp
cmp
inc
jl
and
out
mov
sub
aam
lock
mov
cmp
int
sbb
or
inc
mov
aad
sbb
xchg
or
fisubrs
adc
mov
and
cmpsb
ds
mov
dec
jae
pop
dec
adc
rorb
push
push
test
dec
sti
inc
popf
filds
out
ljmp
repnz
sub
mov
inc
adcl
les
xor
mov
or
ja
add
mov
mov
ror
mov
shlb
xchg
xchg
addr16
sbb
and
testl
js
dec
adc
and
push
scas
adc
aad
shlb
push
ret
es
test
out
mov
bound
ror
dec
xor
dec
mov
aas
cmc
sbb
aas
arpl
lods
nop
xchg
movsl
into
add
sar
clc
addr16
repz
mov
into
adc
inc
mov
xor
mov
inc
call
lods
dec
movsl
pusha
add
imulb
inc
mov
xchg
mov
sbb
pop
les
andb
mov
cmpsb
pop
jne
test
rolb
xor
sub
subl
or
fs
lcall
clc
lea
mov
into
xchg
or
inc
rcrb
and
inc
sub
hlt
xchg
daa
and
shrb
mov
pop
imul
arpl
shrb
arpl
adc
gs
xor
push
sahf
add
les
and
jl
push
ffreep
jb
lods
lock
and
cli
ret
xchg
repz
movsl
mov
dec
aad
inc
adc
xchg
jg
sbb
jbe
jmp
sbb
test
xor
inc
lock
add
add
inc
out
xor
add
insl
js
fisubrl
icebp
rcrb
sbb
push
mov
sbb
leave
inc
pusha
pop
and
pop
mov
or
and
xchg
std
push
les
ja
add
fsubl
mov
cmpps
mov
mov
adc
lods
sbb
mov
adc
sub
dec
rcrl
mov
sbb
push
fwait
adc
idivl
adc
in
in
mov
fisubrs
add
mov
adc
rolb
xchg
mov
aas
mov
xchg
jbe
out
jge
push
subl
xchg
xchg
repnz
inc
mov
loopne
mov
and
dec
fidivrl
mov
out
daa
or
imul
rcl
mov
inc
jge
add
jae
clc
or
push
hlt
rolb
lock
into
or
pushf
insl
dec
fcmovnb
leave
pop
mov
mov
cltd
repnz
mov
mov
lar
mov
mov
jno
repz
mov
or
push
lods
jg
and
in
and
dec
lret
inc
jb
jae
adc
sbb
dec
inc
dec
movsb
in
faddp
inc
push
std
cmp
lods
loop
cmp
xor
les
push
cmp
fstps
pusha
insb
mov
or
xchg
lea
out
dec
sub
js
loopne
push
xchg
mov
or
popa
jp
mov
sarb
xchg
jle
aas
test
mov
lret
in
pusha
xchg
test
xchg
mov
js
ja
dec
hlt
stc
pop
pop
enter
dec
pop
in
push
and
jnp
mov
ret
dec
ds
add
and
adc
arpl
mov
incb
adc
mov
scas
xchg
lcall
je
stos
dec
dec
xor
in
cwtl
mov
jge
mov
nop
jo
pop
js
popa
xlat
inc
push
addl
xor
push
shlb
cmc
and
in
stos
cmpsl
push
and
les
and
mov
add
push
adc
jle
fstpt
insb
xor
scas
dec
stc
jne
and
xchg
push
mov
dec
dec
sbb
aam
aas
repz
push
insb
insl
rcrb
pusha
das
sub
shlb
cmp
inc
loopne
insl
ret
adc
sti
jo
mov
mov
add
iret
clc
outsl
fcom
inc
sub
in
shll
or
ljmp
clc
pop
into
shl
adc
mov
xchg
xchg
push
orl
movsl
movsb
mov
pop
cmpsl
jne
or
push
jnp
and
jl
inc
jl
in
jo
movsb
and
sub
mov
pushf
mov
mov
mov
mov
and
mov
outsw
jge
jo
mov
ret
jae
mov
stc
out
sbb
add
popf
faddp
inc
sub
mov
adc
stos
pop
xchg
jge
or
aaa
pop
sbbl
out
xor
pop
out
sbbb
pop
cmp
fistpll
outsl
arpl
addl
or
out
test
into
ja
daa
mov
push
jns
xor
repz
add
mov
rorb
mov
shl
sbb
ret
aad
ja
fwait
sub
shlb
out
mov
pop
aam
test
add
in
mov
sub
inc
mov
dec
mov
inc
jmp
int3
in
loop
jge
cmp
and
cmpsb
das
jecxz
sbb
mov
sahf
mov
mov
inc
mov
pop
push
cli
xchg
lret
xchg
push
push
fdivrp
stc
sub
in
and
js
mov
fidivrs
movsl
ret
pop
aas
dec
shlb
pop
pop
xor
jns
out
mov
cmovo
adc
push
daa
rclb
lods
or
test
incl
in
cmp
pop
mov
es
or
xchg
test
xor
pop
add
xchg
sub
push
bound
mov
or
les
pop
inc
or
and
mov
iret
add
and
cltd
sbb
mov
mov
cwtl
dec
or
pop
fwait
cmpsl
fildl
push
inc
and
shrl
js
add
shl
dec
or
rol
es
add
inc
mov
xchg
bound
or
call
push
and
lea
xor
inc
inc
movhps
testl
cmpsb
cwtl
std
push
mov
mov
jmp
cwtl
dec
xor
in
xor
jecxz
pop
push
cmpb
cmp
loopne
inc
inc
int
jne
jne
stos
dec
sub
mov
pop
jmp
xor
insb
ror
shr
pop
lcall
ss
pop
sub
jp
fsub
push
xchg
or
out
xchg
cmp
ss
mov
in
mov
dec
jl
push
jb
mov
test
sub
cmp
jge
icebp
mov
lahf
fisttpll
inc
leave
xlat
in
pop
popf
movsl
dec
and
mov
or
push
js
adc
xchg
cmpsl
jmp
fld
mov
scas
sub
cmp
add
push
sbb
icebp
lods
and
mov
inc
mov
lret
mov
mov
sub
ret
leave
icebp
cmpsl
inc
jb
std
dec
loope
movsl
gs
into
or
and
push
mov
imul
out
mov
mov
incl
stc
inc
ss
jns
mov
mov
outsb
push
rcr
or
std
mov
push
inc
popa
negb
lahf
mov
adc
fnsave
push
pushf
mov
ficoml
xor
mov
push
add
pop
dec
cmp
mov
dec
adc
or
sbb
rorb
push
dec
into
xchg
loopne,pn
out
ret
and
jg
mov
adc
cmp
xor
pop
pusha
aam
sub
mov
add
ja
mov
stos
cmp
and
xchg
mov
pop
sti
loope
stos
or
mov
inc
lea
je
daa
test
imul
and
or
and
mov
call
cltd
dec
notl
mov
xchg
mov
outsl
popa
cmp
scas
insl
xchg
jg
lret
inc
mov
ret
jae
mov
mov
lret
xchg
or
adcl
push
mov
mov
or
orl
insb
pop
repz
xlat
aam
lahf
and
and
mov
or
jp
stos
or
mov
xchg
jge
pusha
mov
insb
iret
hlt
adc
or
or
das
lock
hlt
sub
cmp
scas
mov
pop
insb
cmc
jno
cmp
or
in
movsb
into
sub
or
std
dec
lahf
pop
jmp
pop
jge
xor
jmp
add
cmpsl
or
leave
repz
adc
xor
inc
popf
mov
imul
mov
jns
test
int
out
lods
sbb
lock
dec
test
push
sub
inc
fimuls
ljmp
or
push
xlat
or
scas
adc
sbb
sar
inc
arpl
andb
or
call
xchg
or
mov
shlb
mov
mov
aaa
or
pop
inc
dec
or
notl
daa
or
mov
out
out
mov
daa
aas
adc
push
or
dec
aad
or
mov
inc
cpuid
mov
push
mov
imul
xor
pop
mov
dec
or
dec
jle
and
iret
es
out
out
or
rolb
andl
notb
outsb
adc
pop
adcl
repz
mov
push
cmp
in
cli
sbb
xchg
or
loopne
xchg
daa
mov
roll
push
roll
jmp
push
adc
cltd
dec
scas
nop
lcall
sbb
orl
push
pop
je
es
xorb
aad
loopne
jb
add
ss
iret
sbb
je
sbb
or
ss
jge,pt
add
mov
jbe
mov
loope
shlb
int
call
test
addl
add
sub
iret
push
mov
in
aaa
movsl
pushf
into
or
mov
push
xchg
fnstsw
jp
xchg
std
mov
xor
xchg
push
add
mov
test
nop
in
or
js
pop
iret
mov
mov
sbb
pusha
lret
or
mov
arpl
or
jns
mov
sbb
daa
aam
jg
leave
rorb
sbb
inc
inc
add
xchg
cli
shl
outsb
sbb
cmp
stos
mov
inc
rolb
scas
or
ret
xchg
xchg
adc
pop
movntq
outsl
adc
push
mov
push
popf
fs
xor
mov
lret
jnp
mov
jns
scas
dec
cmp
mov
mov
inc
scas
ja
outsl
inc
push
add
jnp
push
xor
mov
push
jo
test
test
call
or
add
gs
mov
mov
mov
add
xchg
ds
xor
or
xor
inc
inc
or
gs
or
or
adc
dec
in
stos
call
dec
ret
popf
mov
push
popa
xchg
push
xor
or
dec
cmp
push
decb
sub
sbb
fucom
adcl
push
inc
lret
stos
adc
or
movsl
fwait
jge
bound
or
clc
mov
xor
lods
xor
loopne
jo
gs
pop
adc
testl
out
sbb
adc
add
mov
mov
ret
or
sbb
out
jne
fucomip
or
lcall
or
sbb
adc
jl
iret
mov
mov
pop
xchg
in
out
adc
sbb
and
sub
mov
sub
adc
push
add
fdivr
cmp
or
adc
mov
jno
inc
xor
add
orb
jge
ljmp
lahf
or
or
in
shr
test
pop
and
movsbl
add
pushl
imul
in
mov
mov
std
or
dec
loopne
mov
aaa
or
xchg
dec
rcrb
xor
in
incl
pop
cmpsl
pop
jle
or
jmp
jne
xor
pop
push
push
movsl
sub
push
inc
test
in
or
mov
leave
out
ja
dec
fs
push
add
std
imul
aad
push
mov
enter
dec
sub
inc
addr16
iret
repz
hlt
aaa
xchg
iret
cmp
fdivrs
test
rolb
sti
stos
push
and
int3
mov
add
imul
pop
push
scas
or
jecxz
iret
or
jno
xor
in
add
pushf
sti
mov
enter
lods
push
pop
pop
scas
jo
pop
jb
xchg
add
or
jp
add
jnp
stc
rcll
rclb
xor
push
jmp
mov
mov
mov
jecxz
pop
popa
clc
lods
dec
push
and
xchg
sbb
inc
call
mov
cwtl
inc
aas
lret
dec
or
mov
push
cmova
fs
cwtl
int
xor
jbe
pop
fisttpl
dec
dec
mov
sbb
andb
sub
fmul
mov
xorl
outsl
and
xchg
fldt
sub
fildll
out
or
push
or
outsl
push
jno
or
movsb
fildll
add
ss
push
cmp
mov
into
push
sbb
push
xor
ds
lcall
int
popa
or
and
setle
or
into
mov
xchg
mov
dec
add
insb
push
call
repnz
push
lret
dec
cltd
paddw
mov
out
jg
aam
xchg
xor
push
push
or
call
mov
orb
jae
lea
fsubrs
mov
pop
or
jb
aaa
test
imul
sbb
push
push
jno
adc
push
xor
scas
int3
or
fdivp
or
adc
jno
or
out
xchg
lret
shll
pop
mov
mov
inc
arpl
js
mov
push
sub
add
inc
dec
dec
adc
je
cmp
jmp
jmp
in
mov
cwtl
add
pushf
rolb
or
les
fbstp
movsb
nop
or
fcmovnbe
fimuls
outsb
xchg
xchg
cmp
fs
or
push
cs
xchg
xchg
daa
dec
js
or
jle
hlt
or
mov
or
xchg
push
dec
daa
hlt
xchg
pop
or
xchg
out
mov
mov
push
jne
dec
or
sub
fldl
or
stc
xchg
push
dec
sahf
stos
cmpsb
mov
fildl
cmp
es
fisubs
stc
cmp
push
inc
inc
cmp
mov
adc
mull
ss
adc
movsb
push
movsb
lods
or
or
jg
mov
or
incb
xchg
fcomip
fcompl
dec
or
add
dec
hlt
or
lahf
adc
bound
or
mov
pop
push
cmpb
xchg
add
bound
sub
int
movsb
rclb
fs
stos
nop
xchg
push
jne
or
xchg
inc
test
cs
pushf
iret
out
push
sbb
mov
jg
jle
lcall
rcll
pop
enter
pop
andb
jne
fiaddl
xor
mov
jg
loope
pop
insl
or
in
lds
fisttpll
dec
push
mov
mov
sub
jmp
inc
xchg
fcomps
sub
jmp
loopne
mov
or
pop
lahf
test
ss
xor
es
or
pop
inc
and
adc
dec
adc
inc
mov
sub
or
mov
or
loop
fisttps
add
sahf
mov
fdiv
in
daa
stos
xchg
or
test
into
push
mov
mov
adc
addl
sbb
movsl
addr16
pop
jnp
js
jnp
cwtl
nop
notl
and
push
sub
jle
clc
lods
push
or
jge
dec
mov
aas
adc
cmp
jecxz
js
mov
lret
sub
loopne
mov
fisubrl
loope
inc
mov
dec
addr16
xchg
leave
xor
jge
inc
inc
jo
pop
and
ret
ss
fcom
shll
rorl
or
xchg
shl
jecxz
cwtl
sahf
xchg
lcall
jle
xor
or
outsl
push
in
nop
mov
xor
cmp
add
mov
xor
push
gs
les
roll
or
ret
filds
add
adc
xchg
je
push
mov
jl
test
or
xor
xchg
xchg
mov
lock
or
mov
pop
push
jno
or
dec
xchg
sub
scas
cmpsb
daa
sti
test
mov
sub
ja
lret
pop
icebp
into
sbb
inc
dec
mov
push
or
mov
push
mov
xor
or
call
stos
jp
mov
cwtl
push
mov
sbb
xor
scas
inc
stc
fnstenv
pusha
subl
out
adc
xor
xchg
mov
jo
xor
mov
or
fcom
or
mov
sbb
fists
mov
fimuls
mov
nop
cli
negl
or
dec
pop
loope
add
jp
pop
mov
and
jo
dec
arpl
mov
or
inc
sub
sbb
jl
das
dec
mov
rcr
and
or
pop
sub
decl
out
push
mov
jg
ja
iret
xor
push
dec
in
test
mov
hlt
test
insl
push
jno
dec
inc
xchg
dec
stos
ds
jl
call
iret
lea
mov
lods
mov
fnstsw
adc
shrl
inc
or
cmp
rorl
add
outsl
jl
mov
adc
aas
icebp
push
outsb
fisttpl
fisttpll
dec
jecxz
cmp
adc
jnp
or
dec
lods
aaa
or
stos
xchg
popl
inc
aam
paddusb
mov
add
mov
jp
xchg
rorb
push
ja
and
leave
out
add
imul
inc
int3
xchg
sbb
xchg
pushf
sub
mov
jp
or
mov
xchg
push
xchg
mov
add
sarl
repz
pop
adc
xchg
fcmovne
je
sbb
insl
testb
mov
and
out
rolb
lcall
dec
jbe
pop
aam
xchg
test
pop
or
dec
xor
pop
jp
test
jl
cmp
mov
rcl
scas
sbb
pop
fadds
jns
xchg
test
imul
imull
jne
jg
and
cmc
rolb
or
mov
test
stos
testl
fcoms
xchg
add
add
sbb
add
dec
nop
jmp
fimull
in
inc
lret
cld
cmpsb
mov
shll
push
fldl
push
shlb
xor
mov
repz
aaa
xlat
out
loope
push
sub
and
cwtl
sub
sarl
insb
xor
cli
cmpsb
out
gs
xor
aas
int
inc
jecxz
mov
pop
mov
add
push
pop
mov
mov
push
inc
or
mov
xchg
add
stos
adc
mov
cmpsl
and
shlb
mov
sub
add
sbb
int3
stc
xchg
stc
or
arpl
xchg
imul
lods
aad
bound
jbe
shr
ja
adc
stc
shll
cmp
xchg
iret
jnp
mov
adc
js
es
stc
mov
ja
das
dec
dec
aaa
cmc
pop
lods
jbe
mov
imul
scas
and
cmp
inc
mov
lds
stos
into
jae
pop
push
shlb
dec
shrb
cmp
mov
mov
pop
mov
jnp
pop
addr16
subb
dec
rcr
and
xor
push
mov
lcall
add
pop
sub
je
jne
in
fdivl
in
ret
mov
fs
xchg
xchg
stos
aad
inc
mov
add
aad
and
rcll
push
mov
lds
lods
out
jne
push
jno
mov
pop
mov
and
push
ljmp
orl
mov
or
cmpsl
sub
dec
jge
lcall
inc
sub
stos
addr16
fnsave
sub
add
icebp
ds
cmpsl
inc
stos
pop
and
push
stc
jne
movsb
jmp
jb
xor
dec
sbb
add
push
test
add
add
cmpsb
or
inc
mov
add
jle
jne
inc
out
xor
insl
dec
jbe
xchg
cmp
xor
add
test
inc
hlt
push
inc
pop
iret
inc
xlat
push
scas
pop
cmp
and
fmull
roll
jb
les
in
lret
imul
sub
sbb
mov
inc
adc
and
mov
sub
out
pop
lods
out
sub
dec
fcmovne
push
adcl
outsl
sub
jmp
repnz
rorl
call
or
sti
out
mov
cwtl
mov
adc
push
iret
mov
pop
ja
add
and
or
push
ljmp
pop
dec
mov
jmp
icebp
push
sub
into
inc
xor
ljmp
arpl
fs
std
pop
cli
leave
les
shrl
loopne
or
daa
test
fcomip
pusha
mov
pop
inc
or
add
lahf
add
mov
ret
mov
push
movsb
dec
dec
or
sub
das
mov
dec
inc
int
stos
add
lods
fwait
inc
inc
ljmp
xor
or
scas
jno
or
repz
cmpsb
loopne
add
popf
out
les
inc
xchg
or
out
sarb
xchg
and
or
sbb
or
or
enter
pop
sub
or
add
or
push
jp
add
mov
testl
add
fs
or
and
inc
inc
cli
rclb
adc
cltd
icebp
inc
dec
add
jne
dec
inc
cwtl
sar
or
mov
sbb
inc
push
xchg
into
shlb
adc
sub
idiv
mov
or
repz
mov
xor
outsl
xor
fcomi
scas
rorl
jnp
in
add
movups
mov
sbb
lea
gs
or
jge
sub
or
ds
fdivrl
inc
lods
add
or
xor
and
ja
pop
cmpsb
or
loopne
fistps
push
out
mov
ret
mov
mov
sbb
adc
mov
add
scas
xor
pop
int
inc
rolb
or
xor
dec
aas
cwtl
and
fs
and
stos
push
aam
inc
push
adc
xlat
jmp
cli
cmp
jo
ljmp
int
sbb
or
cmpsb
lahf
adc
or
xchg
adc
out
cmp
imul
and
loope,pt
mov
icebp
je
or
cmpsl
stos
cs
jae
out
negb
or
sbb
stc
mov
lret
xorl
jns
pop
cmp
xor
cli
adc
or
jno
aas
and
fidivl
dec
jmp
xchg
or
inc
mov
sbb
push
ret
fnstenv
or
lahf
mov
or
add
sti
or
dec
push
imul
dec
fisttpll
pop
adc
dec
out
aad
or
lea
or
jne
idiv
mov
int
adc
and
cmp
or
cmpsl
mov
or
xchg
in
xchg
inc
test
out
out
add
imulb
fisubs
mov
xor
dec
push
xor
or
subl
or
clc
pop
mov
ljmp
hlt
loopne
int
mov
pushf
jbe
sub
adc
sbb
mov
pop
cmp
stos
sarl
push
andb
or
inc
cmp
pop
and
cld
or
stos
cmp
or
mov
jbe
fidivs
dec
shlb
shl
shlb
or
je
out
jb
add
fistpl
push
push
pushf
adc
or
ret
test
pop
xor
repnz
mov
or
push
push
testl
js
xchg
and
daa
xor
push
iret
std
inc
push
push
and
or
imul
loopne
lret
xor
stc
jne
or
lahf
sahf
mov
mov
add
fdivrs
test
icebp
add
sahf
stos
test
dec
dec
sub
stc
dec
div
sbb
mov
pop
push
arpl
outsl
lea
push
test
lock
pushf
loope
pop
or
int3
xor
or
outsl
cmp
int
pop
outsl
outsb
or
icebp
or
dec
and
hlt
push
inc
or
popa
lea
mov
test
dec
sti
std
fwait
aas
cltd
or
push
push
and
ds
add
mov
sub
lea
ret
clc
out
call
rorl
mov
sub
add
pop
pop
cmpsb
mov
or
cmp
lret
lahf
mov
sbb
lret
or
or
int3
icebp
push
jns
pop
mov
jmp
pop
les
pusha
iret
mov
mov
int
pop
roll
sbb
fmull
pop
cmp
push
cs
notb
lret
movsl
lret
cmpb
loope
add
imul
std
int3
andl
jl
cmpsl
mov
pop
push
fbstp
sbb
add
xchg
xchg
lds
add
or
iret
int
std
pop
out
in
xor
mov
adc
jb,pt
mov
cmp
sbb
or
xor
jae
and
and
ds
cltd
sub
sub
sbb
mov
loop
add
inc
mov
roll
fldpi
mov
test
jp
or
mov
pushf
cs
outsl
or
jg
mov
inc
lods
xchg
scas
mov
fsubr
push
pop
or
jp
inc
pop
xor
or
pop
jno
or
mov
rclb
fwait
or
sahf
mov
or
jne
pusha
out
cld
stc
in
push
adc
in
and
decl
inc
aad
mov
or
js
mov
aaa
jns
or
nop
mov
or
pop
push
mov
cmp
add
or
pop
test
imul
mov
or
sti
and
or
xchg
sbb
pop
mov
add
stos
push
inc
ret
xchg
cmp
xchg
repnz
ljmp
or
or
mov
push
cmpl
loope
inc
clc
dec
ret
pushl
jno
xor
add
repz
xor
jmp
push
dec
dec
or
inc
lds
dec
leave
or
sub
jo
loop
iret
sbb
jmp
mov
orl
mov
daa
repnz
clc
push
imulb
out
enter
mov
push
mov
sbb
add
lods
lahf
in
test
popl
jg
repz
mov
xchg
cmpsl
loope
js
je
cmpsb
imul
or
icebp
add
cltd
rclb
cli
or
add
lods
out
negl
inc
xchg
jmp
or
or
sbb
jge
sbb
test
mov
or
sub
mov
inc
sub
or
lret
outsb
loop
cld
lcall
repz
jge
mov
sub
adc
pop
rorb
jbe
mov
dec
or
adc
push
push
and
cmp
rorb
inc
incl
push
movsl
jmp
and
sub
pop
sub
ja
in
filds
sahf
ss
add
mov
outsb
mov
or
or
adc
cmpl
xchg
inc
adc
fs
out
popf
cmp
outsl
dec
cld
mov
or
lcall
fdivrs
or
das
dec
enter
iret
imul
jae
pop
jmp
mov
add
test
jp
popf
pushf
cmp
addr16
or
or
xlat
fcoml
jg
push
and
sub
andl
enter
dec
bound
in
xor
roll
call
dec
dec
xchg
iret
xchg
ficomps
shrb
repnz
mov
popf
xchg
lods
stos
out
mov
fildll
outsl
fildl
sub
sbb
push
and
out
sub
push
in
mov
fldt
adc
bound
or
fsubrl
dec
xor
cmc
notl
imul
mov
sub
rclb
add
fisttpl
iret
popf
xchg
push
loop
xchg
aas
mov
adc
out
xor
xorb
lods
pop
lds
lret
sbbb
jmp
adcl
out
mov
rolb
push
repnz
ds
pop
iret
loope
idiv
push
add
std
fs
or
pop
jle
insb
scas
outsb
iret
push
gs
out
test
movsb
and
or
mov
lock
adc
clc
mov
cmp
nop
xor
mov
pop
or
imul
bound
push
mov
leave
add
outsl
jno
xchg
push
xor
fisubl
lret
add
arpl
hlt
sub
mov
sub
xchg
std
sub
mov
pushf
pop
add
rol
ret
inc
or
xchg
sahf
shll
cmp
iret
loope
test
adc
ret
jecxz
jl
fimull
xchg
cltd
push
rorl
or
nop
mov
iret
push
sub
test
add
or
sub
daa
cmp
add
pop
imul
mov
idivl
aaa
lea
mov
pop
xlat
iret
or
addb
xchg
sub
jecxz
inc
mov
sbb
test
inc
pop
sti
add
insl
mov
mov
jg
stc
cltd
inc
arpl
sti
lahf
sahf
add
push
and
or
xor
sbb
mov
inc
push
push
pop
or
sar
jl
or
mov
pop
add
dec
pop
inc
cwtl
push
push
jne
cmp
mov
iret
dec
fdivrs
roll
or
jecxz
cmpsl
adc
inc
cli
fidivs
ljmp
and
cltd
jae
into
adc
mov
push
mov
addr16
push
xorl
inc
inc
imul
dec
stos
add
push
daa
add
xor
icebp
or
or
or
pop
mov
sbb
data16
jns
loop
rolb
or
adc
mov
test
push
fwait
lcall
fsubrs
les
mov
test
movsb
addr16
push
xor
lahf
imul
push
or
aad
lods
mov
movsb
jnp
pusha
xlat
lea
cmp
scas
mov
shll
pop
imul
outsl
inc
pop
ss
cmpsl
pop
jns
js
das
mov
sbb
xchg
dec
and
aad
icebp
push
mov
shlb
add
scas
sbb
jae
or
and
std
add
pusha
push
xor
mov
mov
rorl
xchg
shll
cwtl
mov
xchg
and
stc
stos
jae
mov
push
mov
cld
hlt
dec
and
fisubrl
lcall
sbb
xchg
scas
cmova
push
mov
std
dec
test
addl
fisubrs
fsts
mov
dec
xor
mov
adc
into
loope
add
jmp
add
imul
negl
imul
scas
jne
out
push
xor
popa
jp
daa
cwtl
cmp
mov
lret
cmpsl
jnp
add
push
test
push
movsb
add
xor
xchg
push
outsl
fucom
aas
mov
inc
repz
mov
pop
sarl
sbbl
clc
aaa
movl
loope
ret
or
rorb
add
add
inc
and
test
sbb
popa
clc
adc
mov
inc
jae
and
repnz
fnsaves
outsb
push
mov
cmp
push
mov
pushf
cmc
andl
pop
dec
push
add
cmpsb
lods
mov
insl
xchg
daa
cmp
xor
or
shl
jnp
repnz
adc
in
imul
adc
fisttpll
mov
sarb
inc
insl
or
int3
pop
enter
or
mov
and
mov
or
sbbl
jl
or
mov
insb
dec
or
std
cmc
fistl
or
mov
cwtl
or
sbb
and
loop
in
dec
je
fildll
por
sub
sub
or
add
mov
xor
out
pop
fnsave
mov
stos
mov
movsb
xchg
iret
pop
sbb
out
pop
pop
push
adc
add
push
fbld
inc
loopne
or
xchg
out
inc
addb
sub
subl
pop
or
loope
ljmp
outsb
jno
add
or
subl
hlt
cmpsb
inc
inc
add
mov
sbb
push
fldcw
ds
les
movsl
jbe
je
or
mov
and
out
dec
in
xor
and
mov
push
inc
mov
lcall
or
add
xchg
or
adc
call
imull
cltd
lock
jmp
or
pop
ljmp
cmp
enter
sub
loope
mov
cmpsb
pop
ret
add
sub
aam
scas
test
loop
xchg
outsb
stos
mov
sbb
cmp
jbe
mov
sti
fwait
aam
adc
jne
or
push
adc
sbb
mov
xlat
loopne
mov
xchg
mov
inc
scas
xchg
dec
out
dec
inc
add
out
push
sub
cmc
sub
or
adc
repnz
or
cmp
out
or
dec
je
cmp
xchg
or
xor
stos
or
cltd
xor
or
rcll
add
imul
jnp
inc
inc
inc
lds
ja
lock
xor
outsl
xchg
or
mov
pop
aam
jl
add
shlb
or
cwtl
cmp
outsb
sub
aam
out
push
add
lahf
or
push
mov
inc
cmp
lea
orl
je
jl
mov
add
jmp
add
pushf
inc
clc
testl
pop
or
fiadds
fwait
push
sbb
or
cmpsb
lock
nop
cmc
andb
pop
jbe
add
mov
or
push
xchg
or
gs
div
test
fistpll
ret
rolb
movsl
or
or
sbb
push
jecxz
mov
push
mov
inc
pushf
xchg
inc
mov
or
jns
mov
pop
and
or
jb
cmp
loopne
and
icebp
jmp
mov
and
sbb
or
dec
adc
mov
andl
or
sub
mov
les
cltd
movsb
decl
add
popf
pop
push
mov
adc
mov
mov
xor
loop
std
mov
pop
pop
xor
xor
mov
or
test
pop
inc
lea
mov
js
bound
out
pushl
cmpsl
in
clc
push
out
jo
lock
adc
inc
pop
and
or
sbb
mov
xor
fwait
cld
dec
scas
scas
dec
imul
cltd
jmp
ja
xchg
mov
jl
xchg
daa
cmpsl
inc
scas
add
dec
or
fwait
dec
vaddps
out
ret
ret
movsb
mov
or
movsl
leave
mov
add
jge
cmp
adc
mov
push
xchg
add
lea
or
int
lahf
test
inc
add
jae
jb
cmpsl
rorl
inc
loop
cli
in
inc
call
daa
sbb
xor
or
add
stos
repnz
mov
sub
dec
dec
ss
ja
sti
pop
and
fldl
xchg
lock
sbb
subb
jmp
cmp
push
out
or
lret
or
sbb
into
dec
pop
dec
push
xor
fs
shr
sahf
sbb
rcrb
sbb
mov
out
dec
or
push
movb
sub
jne
lock
roll
into
or
jl
je
mov
inc
xor
pushl
push
cwtl
add
or
add
mov
adc
or
arpl
shlb
add
jge
mov
adc
pop
stos
or
mov
sbb
out
xchg
push
addr16
inc
sbb
or
test
xchg
mov
enter
mov
hlt
add
xor
pusha
inc
cmp
pop
loope
cltd
pop
push
outsb
push
ds
inc
pop
jbe
dec
in
cmpsl
or
mov
sub
cwtl
call
inc
inc
ds
imul
or
mov
int3
out
fidivl
add
pop
mov
insl
pushf
aad
daa
mov
jl
adc
jmp
sub
ss
psrad
sub
pop
adc
aad
pop
mov
test
xor
cmp
or
icebp
xchg
jnp
mov
out
pop
cmc
cmp
clc
or
push
inc
mov
mov
fcompl
mov
xor
inc
add
and
jge
lea
sub
dec
or
push
sahf
insb
stc
out
mov
jnp
outsl
jp
mov
ss
ja
and
xor
mov
mov
mov
fidivrl
cltd
outsl
repz
dec
mov
or
add
adc
push
cmp
dec
addr16
mov
shll
or
push
enter
sub
dec
outsl
stos
lcall
pop
ss
xchg
jecxz
xlat
repnz
clc
cli
push
outsb
fisubs
mov
xor
dec
rorl
orl
iret
pop
xchg
push
not
or
dec
mov
ss
cs
cwtl
out
hlt
fwait
js
mov
aad
jb
fldt
xchg
repnz
adc
int
inc
psubusw
iret
sub
cmpsb
jmp
xchg
or
sbb
cltd
cli
sub
out
je
stc
stos
add
jns
stos
call
add
mov
mov
mov
cmp
out
cli
into
xchg
fsubl
add
je
out
stos
nop
ljmp
or
lds
or
jmp
pusha
dec
icebp
add
cli
mov
mov
adc
or
cmc
ret
pop
adc
or
aam
jle
add
int3
mov
outsl
jns
mov
push
inc
iret
push
jmp
hlt
add
test
addb
mov
sub
or
fiadds
dec
fadd
jns
jb
sub
into
bnd
cmp
inc
mov
lret
push
sbb
mov
loop
sub
loopne
and
fiaddl
es
mov
leave
movb
std
xchg
adc
or
divl
lahf
or
shll
or
into
xchg
in
inc
nop
push
or
leave
dec
or
ret
push
and
subb
ficompl
mov
add
and
js
orb
popa
push
adc
sub
pop
and
adc
xor
stc
stos
push
or
popa
movsb
mov
push
int3
outsb
pop
repnz
mov
mov
mov
popf
add
iret
dec
or
rcl
ret
xor
outsl
mov
push
xchg
jnp
cltd
out
jg
xchg
scas
sub
cmp
movsl
test
xor
rclb
andb
fidivs
in
jnp
xor
lea
shrb
mov
inc
jecxz
cmpl
fcmovne
push
lcall
lods
pop
adc
or
fsts
jecxz
ret
adc
jb
imul
sub
or
dec
add
idivl
push
pop
shr
and
loopne
cmp
cmp
mov
or
cmp
outsb
push
imul
sahf
xchg
jmp
inc
push
push
test
pop
add
sbb
dec
cltd
std
sahf
fldenv
adc
or
dec
push
mov
int3
mov
cmp
or
xor
incb
cmp
in
iret
pop
dec
jbe
mov
mov
add
and
lcall
fadds
inc
inc
pop
adc
aad
pop
inc
push
xor
imul
dec
rol
adc
ficompl
out
sbb
fldt
sub
mov
or
lods
std
mov
and
fucomp
lcall
cmp
cmp
mov
pop
mov
imul
inc
xchg
inc
pop
icebp
mov
pop
sahf
lock
sbbb
movsl
mov
rcrb
cmovp
fwait
dec
call
inc
xor
jnp
and
mov
in
inc
into
dec
fldl
pop
in
out
mov
mov
sub
aaa
cmpsl
mov
mov
rclb
mov
sbb
jnp
xchg
movl
inc
sub
and
aam
pop
cmp
and
sub
repnz
popa
jge
jns
xlat
mov
shlb
lahf
cmp
sti
lcall
mov
ret
mov
insb
shl
sbb
push
push
pop
push
ret
addr16
cmpsl
xor
lds
inc
mov
and
sub
out
nop
sbb
jecxz
repz
adc
les
push
lahf
push
mov
data16
xor
jae
cmc
ret
ja
sbb
mov
fcomi
bound
pop
xor
shlb
ret
cmp
mov
add
xchg
andb
xchg
je
jo
cmp
lods
stc
iret
adc
pop
mov
test
loop
mov
dec
pop
gs
jp
in
lock
or
push
jmp
sbb
xchg
imul
out
adc
in
and
movsl
repz
fstpt
rol
xor
xorb
sbb
clc
addr16
and
add
repnz
push
inc
or
pop
jecxz
inc
jnp
xchg
ret
js
lods
add
jmp
push
fwait
xchg
mov
cmp
push
mov
ja
int3
push
inc
test
mov
cmp
insl
inc
lds
fwait
adc
sub
ret
call
ud2
stos
jbe
mov
dec
pop
mov
lock
jb
add
or
shlb
xlat
ret
leave
add
inc
repnz
add
cmp
bound
outsb
out
adc
fisttps
add
imul
mov
pop
aas
jns
test
sti
mov
pop
jno
nop
loope
dec
mov
and
rorb
inc
and
stos
imul
fs
mov
aad
filds
sahf
adc
fstps
xor
in
faddp
adc
or
mul
push
cmpl
shlb
ja
cli
dec
jp
out
jnp
inc
rolb
xchg
rorb
sub
pop
push
scas
inc
adc
icebp
jecxz
jne
sbb
mov
xor
push
or
les
lock
test
sbb
addr16
inc
add
sahf
pop
notb
xchg
lods
out
inc
or
repnz
outsl
aas
scas
stos
mov
mov
jo
scas
rcrb
jbe
mov
push
push
scas
dec
xor
push
sub
dec
cwtl
popa
out
and
lock
test
roll
les
inc
xlat
aam
lret
add
mov
jnp
imull
jae
ret
rolb
or
add
push
pop
and
sbb
in
lret
daa
xchg
mov
and
lret
pushw
sbb
xchg
push
jno
cmp
jge
pop
push
stos
pop
ds
cs
enter
mov
mov
xor
push
push
jae
mov
fstpl
test
test
push
scas
dec
jo
addps
aad
lods
inc
bnd
jge
or
xchg
add
shll
xor
sbb
mov
sbb
test
adc
add
sahf
push
mov
imul
rcrb
sub
jbe
iretw
ret
aaa
addr16
adc
push
xchg
lods
xchg
jae
jbe
in
push
push
add
adc
sbb
sub
adc
lock
loopne
sti
pop
sti
andl
mov
xchg
adc
dec
int3
and
inc
xchg
push
mov
inc
shrb
sarl
notb
sub
in
rcl
sarl
adc
roll
inc
sub
mov
popa
fstl
rcrb
arpl
xchg
pop
sbb
mov
sbb
bound
sahf
cmpl
int3
rcr
arpl
in
adc
test
shlb
stc
push
fsubl
mov
loope
or
sub
enter
test
jne
iret
test
jecxz
fcmovne
and
or
mov
push
push
pop
cmc
scas
dec
cmp
push
or
xchg
lods
sbbb
sbbb
cmpsl
sbb
mov
iret
cmp
xchg
clc
lds
jmp
roll
mov
pop
loope
jno
sbb
int
movsb
loop
cld
push
cld
repz
cmpxchg8b
repz
cmp
push
and
icebp
add
pop
pushf
imul
jo
jne
push
gs
dec
xchg
in
call
rol
inc
pop
addl
inc
mov
mov
jnp
pop
dec
in
aaa
rcl
and
xchg
ficoml
push
rclb
dec
jae
mov
lcall
out
outsl
hlt
mov
dec
jge
add
cwtl
pushf
mov
les
cli
and
inc
inc
jno
sub
push
cmpsl
dec
or
gs
std
pop
inc
inc
inc
mov
push
xor
dec
add
adc
scas
jnp
fs
arpl
insb
xchg
xchg
adc
fmull
cmp
sbb
cmp
push
cmp
je
mov
or
insl
jno
push
das
xor
ficomps
dec
test
or
rcll
dec
xchg
mov
outsl
mov
test
pop
push
inc
cld
lret
mov
scas
push
cmp
movsl
or
and
sbb
rcr
cmp
xchg
pop
cli
fisubrs
test
sbb
jne
fisttps
outsb
pop
mov
sub
pop
add
in
ret
sbb
aaa
les
mov
cmp
cmc
repnz
jnp
xchg
mov
sub
xlat
scas
add
movsl
pop
add
push
xchg
mov
out
int3
mov
and
cmc
mov
hlt
inc
stos
test
sub
cmc
pop
mov
mov
push
lret
dec
ja
shr
jb
push
imul
push
adc
test
fs
scas
decl
xchg
repz
cmp
stos
arpl
in
or
inc
pop
pop
cmpl
push
jnp
add
cmp
fs
adc
cmp
mov
test
rcr
mov
divb
push
rclb
mov
idivb
xchg
sbb
loope
mov
inc
les
add
push
scas
inc
btc
movb
push
push
arpl
aam
push
and
cmpsl
sub
adc
mov
in
test
or
inc
leave
add
sbb
pop
pop
mov
sbb
push
lods
pop
xchg
pop
jb
movsl
cmp
clc
loop
aam
subps
fwait
jmp
insl
pop
in
into
in
ja
leave
mov
jmp
mov
aad
lods
push
cli
xchg
sbb
push
neg
adc
mov
cmc
pop
or
in
sbb
mov
roll
dec
mov
add
mov
arpl
sbbl
pop
and
repz
xor
push
inc
stos
push
cmp
cmpsl
outsb
cmp
imul
sub
and
dec
mov
push
push
mov
lcall
add
sub
adc
push
mov
les
dec
andl
sub
sbb
call
push
sub
push
sub
dec
rcl
xchg
and
std
das
xor
and
mov
cmp
out
mov
adc
xchg
icebp
jns
vcvtsi2sdl
loope
repnz
pop
insb
shll
test
sti
mov
inc
cmp
out
push
jnp
sub
mov
push
icebp
mov
inc
dec
out
lahf
movsl
adc
xchg
into
mov
imul
xchg
mov
xchg
vgf2p8mulb
sub
inc
sub
arpl
or
pop
cli
cmc
xchg
xchg
adc
dec
jne
fldenv
jno
in
dec
jge
mov
and
add
or
push
mov
xchg
fisttpll
pushf
lods
ja
mov
pop
push
out
pop
out
aam
shll
test
mov
sbb
and
mov
data16
iret
mov
ljmp
mov
lods
faddl
sarl
lods
sbb
repz
nop
mov
jge
sti
mov
sub
rorb
out
ds
fsubrs
cmp
and
int3
scas
jnp
stos
dec
dec
rcrl
rclb
and
or
lret
sub
lret
push
sub
or
mov
test
xor
sbbl
mov
dec
or
sbb
cmpsl
mov
pop
data16
ret
mov
ret
test
lsl
sub
ja
xor
push
inc
dec
scas
rcrb
and
in
cmp
and
mov
sti
xchg
jecxz
sbb
mov
xlat
imul
push
stos
sub
scas
xchg
xlat
mov
adc
xchg
icebp
sub
stos
xor
cmp
mov
stos
cmp
es
xor
push
shlb
hlt
arpl
repz
mov
inc
rorl
xor
xchg
lret
hlt
cmc
out
fisubrs
pop
lds
scas
jmp
ja
inc
mov
imul
pusha
daa
sub
cmc
std
fisubrl
dec
bound
data16
add
ljmp
xchg
dec
jp
fidivrs
aaa
xchg
sbb
movsb
inc
dec
and
notb
rclb
je
or
xor
add
mov
sbb
mov
adc
inc
nop
sub
adc
and
dec
xchg
add
push
sti
pop
loope
sub
popl
in
lods
outsb
ljmp
pop
dec
daa
add
js
sbb
mov
dec
and
ljmp
pop
addb
or
pop
pop
fdivr
lcall
loope
or
add
or
leave
cmp
add
xor
mov
or
dec
jo
jmp
lds
popa
hlt
js
mov
lods
cmp
adc
or
bound
mov
add
sub
fcomi
pop
or
lahf
pop
mov
not
or
sti
mov
xor
mov
pop
cs
xorl
jne
mov
outsl
icebp
jg
xchg
push
sub
iret
mov
add
inc
rclb
add
enter
jl
or
push
sbb
cli
inc
push
pop
adc
or
push
or
push
adc
bnd
out
arpl
jge
mov
or
jb
shr
loop
cmp
out
xlat
push
mov
faddp
or
fsubrs
inc
dec
je
or
dec
jge
or
cld
adc
jnp
in
inc
div
test
out
dec
test
push
lea
push
sub
mov
mov
xor
aam
mov
data16
das
fbld
ss
jbe
and
push
add
sub
or
xchg
dec
loope
jne
test
push
pop
add
nop
clc
mov
addr16
jo
push
ljmp
stos
enter
and
push
test
push
push
jmp
lods
ret
or
jg
in
or
inc
or
jge
mov
aas
scas
loopne
addl
mov
cwtl
ss
add
or
xor
cmp
das
ds
std
or
or
or
lock
test
jecxz
imul
enter
push
push
xchg
pop
outsl
icebp
lods
or
or
or
sbb
jg
mov
push
repnz
movsl
mov
dec
inc
rorb
add
inc
jb
xchg
push
aad
mov
xor
pop
popa
sub
mov
mov
add
or
popa
fdivl
data16
mov
mov
rcrb
pop
jmp
and
add
xchg
and
ss
add
add
ds
aaa
cmp
je
or
stos
inc
xchg
ret
pop
add
push
add
mov
push
clc
pop
fdivr
or
or
inc
pop
pusha
ret
or
cld
in
je
xor
or
sub
mov
sbb
repz
fwait
or
aam
inc
or
bound
mov
mov
stc
sbbb
inc
call
inc
pushw
ljmp
and
inc
ds
or
dec
mov
pop
out
push
push
cmp
adc
sub
and
cli
mov
inc
sbb
cmp
cmpsb
mov
sub
pop
mov
fldcw
jnp
pusha
aad
dec
push
iret
addb
aaa
sub
or
cmc
push
jns
into
jmp
lds
push
iret
popa
inc
movsb
ljmp
out
sbb
pop
dec
stc
push
or
xlat
out
pop
popa
xchg
fs
out
and
dec
push
imull
sbb
and
lcall
pop
push
shlb
fadds
inc
xlat
shlb
iret
into
daa
insb
dec
in
mov
nop
xor
lock
mov
sbb
ljmp
fadd
in
xchg
repnz
repz
out
push
popa
jle
cmp
cmpsl
mov
mov
into
cli
sbb
jnp
inc
and
ret
mov
sub
jae
out
les
dec
ss
fcmovnb
adc
pop
xchg
xor
add
les
mov
shlb
sbb
xor
jo
je
cld
add
jb
and
mov
aaa
je
or
lcall
push
clc
clc
mov
dec
ret
movsl
out
sub
push
or
jle
push
jge
sub
cltd
daa
pop
lret
add
inc
sysenter
outsl
xchg
add
lcall
std
cld
cmp
jmp
xor
mov
mov
mov
mov
cmp
cmp
cmpsb
shlb
lahf
out
repz
stos
mov
scas
mov
xchg
mov
ret
mov
pop
scas
dec
popa
sbbl
loopne
or
pop
loope
out
inc
jmp
or
repnz
xor
call
add
fwait
stos
mov
xchg
sbb
ja
sarl
mov
into
dec
std
jge
sub
movsl
incl
leave
rolb
jno
xor
dec
pusha
lods
pop
loopne
ja
and
ljmp
in
add
jmp
out
jge
xchg
lods
add
push
das
rolb
mov
pop
sbb
add
sbb
ffreep
mov
loop
mov
ret
repz
dec
loopne
dec
rcl
cmp
push
rolb
xor
stc
gs
es
push
aam
mul
xor
rorb
imul
or
out
push
movsl
sub
inc
mov
out
pop
inc
xlat
setns
lds
gs
insb
mov
dec
jae
repz
icebp
and
outsl
insl
test
mov
jp
mov
or
jmp
mov
notl
xchg
loop
xchg
xor
or
movsl
pop
mov
inc
imul
iret
mov
ds
popl
or
xor
lock
sub
or
sub
jbe
or
mov
xchg
mov
xor
inc
aad
imul
stc
ja
mov
shlb
mov
dec
or
jg
add
icebp
cmp
rcr
mov
or
out
jge
mov
and
out
movsl
insl
cld
lcall
arpl
jmp
orb
inc
or
mov
mov
shl
in
or
or
stc
test
or
add
mov
outsb
jp
push
or
lock
leave
test
or
jnp
xchg
or
add
and
out
pop
insl
call
cmp
push
iret
outsl
out
dec
pop
iret
insb
and
cmpsb
fpatan
movsl
push
or
std
sbb
add
add
testb
imul
divl
in
pushl
xor
ficoms
mov
addr16
or
pusha
js
iret
inc
xor
mov
addl
sti
pop
xchg
insb
xorb
push
out
lock
or
or
icebp
inc
inc
iret
add
cltd
xchg
lods
loope
jge
pop
add
testl
cs
lcall
jbe
or
or
mov
xor
fwait
mov
adc
sbb
ja
mov
ljmp
sub
cmp
pop
sub
mov
cmc
les
push
fimull
or
in
bound
jo
or
push
xchg
rcrb
mov
cmp
dec
out
mov
or
jae
subl
or
sbb
mov
insb
or
xchg
xchg
fmuls
cmp
arpl
test
pop
popl
or
jnp
cli
sbb
das
mov
sub
loopne
fistps
xor
xchg
neg
inc
or
and
jno
jns
jecxz
mov
jae
adc
jbe
iret
lock
mov
ss
in
ret
je
bound
mov
jp
and
pop
int3
or
cs
mov
sub
nop
xor
xchg
cmp
iret
sub
addl
mov
insb
in
push
std
sti
or
dec
popa
lods
mov
xchg
mov
clc
pusha
pop
sub
dec
std
outsb
iret
pop
out
adc
pop
das
into
or
jnp
mulb
xchg
xchg
adc
addr16
sub
stos
test
sub
xchg
aas
mov
fbld
mov
movsb
or
daa
xchg
in
xchg
xor
adc
bnd
pushf
or
lret
rol
scas
push
xchg
cli
inc
mov
and
out
dec
mov
into
push
jl
dec
out
mov
or
jecxz
pop
lret
mov
mov
xlat
push
es
or
pop
or
sub
icebp
cmp
push
jb
imul
dec
shrb
push
lock
add
repnz
jle
or
adc
rorb
pop
mov
je
xor
enter
pushf
jbe
ja
mov
test
icebp
xchg
repz
or
dec
ret
pop
mov
dec
js,pt
xor
or
addr16
pushf
popf
leave
push
or
in
mov
xorb
pop
cwtd
faddl
ja
iret
sub
adc
insb
and
mov
enter
lahf
movsl
add
or
jp
cli
push
xor
inc
dec
cmp
jg
out
or
xor
dec
or
push
jae
mov
sbb
pop
push
push
xchg
and
enter
filds
movsb
pop
mov
lods
jns
out
ljmp
and
std
iret
nop
repnz
mov
or
dec
xchg
and
iret
fwait
push
ret
and
clc
mov
scas
pop
or
enter
push
xor
into
mov
mov
pop
lahf
sub
inc
xor
pop
decl
stc
jge
int
sbb
inc
pop
or
and
mov
mov
out
lock
sbb
xor
test
cmp
xchg
repz
stc
int3
pop
fistpll
movsb
out
das
or
aas
xchg
add
adc
leave
jno
jae
clc
bound
push
ljmp
or
std
addr16
lock
cltd
ret
inc
filds
mov
popa
or
sbb
xchg
jbe
jle
and
dec
or
push
jge
jmp
cld
data16
cmpb
push
mov
mov
popf
xor
shll
ljmp
loopne
imul
mov
mov
rol
test
xchg
cmp
loopne
jmp
int
xor
mov
xchg
or
xchg
and
fdiv
lods
test
jmp
or
xchg
xchg
adc
xor
mov
jbe
bound
or
imul
xlat
xor
dec
mov
or
pop
stc
movsl
jnp
xchg
or
xchg
in
aam
cmp
out
cwtl
jo
fdivrl
addl
pop
mov
incb
pop
call
or
jle
in
push
mov
xchg
inc
inc
dec
jns,pt
mov
xor
negl
dec
orb
mov
mov
or
das
or
or
xor
cmc
mov
sub
push
pop
div
or
sarl
mov
cmp
fistl
scas
jg
jo
je
mov
stos
lret
add
out
inc
xor
jl
add
and
rolb
or
imul
sbb
jne
add
sub
mov
icebp
clc
or
aam
or
insl
or
mov
mov
into
loop
sbb
lds
jmp
cmp
clc
mov
lret
ljmp
inc
mov
inc
jnp
push
ds
data16
or
sbb
jg
cld
decl
pop
in
and
leave
scas
std
iret
aaa
rcll
push
sbb
pop
arpl
cltd
dec
sbb
ss
in
neg
push
call
push
out
mov
cmpl
shl
xor
ret
or
mov
stc
out
push
imul
pusha
or
daa
sbb
scas
add
and
loopne
pusha
dec
inc
xor
js
out
divb
sub
and
fwait
inc
or
sbb
or
rol
roll
dec
jmp
in
fsubrp
cwtl
fwait
mov
inc
lods
inc
and
fs
dec
inc
lods
test
out
xchg
es
int3
jp
orb
mov
add
inc
arpl
inc
mov
mov
and
inc
stos
jl
filds
xor
aam
inc
add
lahf
pop
insl
outsl
cmpsl
xchg
shrb
or
cld
dec
icebp
insb
xor
or
imul
xor
push
jecxz
cmc
movsb
xor
cli
mov
rcll
add
xorb
and
inc
shrb
jmp
cli
pop
xor
call
call
and
pop
stos
scas
add
push
jns
ror
rcr
or
psrad
nop
out
inc
or
movsl
aaa
jge
stos
sub
or
dec
jmp
xor
out
stc
in
out
fdiv
enter
out
inc
or
sbb
push
popf
outsl
or
or
gs
movsl
out
cs
lcall
mov
aam
cmp
pop
or
icebp
iret
mov
dec
add
outsl
push
or
and
movsl
sbb
ds
out
pop
stos
movb
das
out
testb
add
mov
or
mov
call
pop
stc
nop
or
cmp
pop
out
lret
iret
stos
inc
in
jp
add
xchg
add
or
mov
loope
testl
test
dec
jle
cld
or
jge
fnsave
add
pop
pop
inc
dec
push
jnp
inc
andl
dec
xor
fwait
aam
in
or
xchg
mov
sub
call
cmp
cmc
jno
andnps
dec
or
push
or
mov
ror
or
cli
ror
jno
lock
mov
dec
sbb
ja
movsl
add
cmpsb
clc
out
popa
push
push
fdivs
dec
out
pop
and
rcrb
jp
inc
stos
sub
out
or
dec
cmc
pop
adc
add
pop
gs
jl
into
push
rclb
das
and
push
add
and
filds
mov
xchg
shr
xchg
shlb
mov
mov
mov
push
out
sbbl
aad
mov
sbb
inc
inc
xchg
xchg
pop
les
dec
dec
xchg
into
rcrl
cmp
lods
rcll
ja
lret
cmpsl
outsb
jb
in
xor
ss
sub
sahf
push
frstor
stos
sub
push
shrb
dec
pop
jae
push
bound
scas
mov
dec
inc
sti
daa
dec
xchg
sbb
xlat
rclb
mov
jge
mov
out
or
stc
scas
xlat
and
pusha
test
add
pop
notl
in
inc
xor
mov
cmc
fistl
mov
push
addr16
cs
jo
filds
add
cwtl
dec
and
rolb
xchg
mov
adc
les
xor
addl
dec
sti
cmp
popf
cltd
inc
sahf
sbb
xchg
sarl
jae
mov
arpl
xor
adc
in
cmpsb
jns
inc
sub
mov
push
cmp
jecxz
lds
sub
pop
inc
repz
arpl
jb
mov
cmpsb
movsl
mov
lahf
xchg
add
mov
push
cmc
mov
dec
clc
pop
or
fiadds
mov
in
dec
loope
into
shlb
fcmovbe
add
les
aam
andb
in
add
insl
mov
and
inc
mov
fstps
psubq
inc
es
add
or
gs
outsl
test
sar
or
cli
repnz
mov
cltd
pop
imul
cmp
inc
jecxz
data16
sub
xchg
push
fwait
call
jge
pop
mov
test
pusha
mov
xor
orl
hlt
or
mov
mov
cmp
add
or
dec
in
push
adcb
push
or
jb
hlt
or
bound
mov
and
ljmp
in
add
push
or
adc
pop
fs
lods
sbb
in
pop
inc
push
pusha
ret
sub
add
aaa
gs
fisttpll
or
orl
lret
mov
pop
xchg
xchg
jne
push
pushl
andb
lret
jbe
mov
or
dec
add
std
pop
mov
repnz
push
jne
into
lods
add
lcall
fcompl
xor
sub
cmpsl
int
jbe
aad
jbe
daa
xor
rorb
inc
sub
add
stos
mov
cmpsb
and
jmp
cwtl
fstpt
xor
xlat
lds
repnz
test
and
fcmovbe
imul
cmp
imul
push
enter
std
in
add
xchg
xacquire
or
push
frstor
inc
fldt
in
std
or
sub
xor
xlat
repz
dec
jge
mov
push
cmp
imul
ret
sub
into
dec
andb
xor
pop
pop
movsl
mov
notb
sbb
test
in
and
int3
rolb
les
inc
mov
xchg
pop
sub
mov
jp
add
cmp
fcoms
cld
sbb
add
gs
mov
inc
sbb
sahf
mov
in
fsubrs
xchg
fwait
and
cwtl
pop
xchg
push
xchg
adc
inc
inc
ja
mov
or
jo
jnp
outsl
ror
push
pop
xchg
test
test
into
mov
les
push
sbb
js
cld
hlt
mov
mov
jae
dec
or
mov
movsb
scas
lock
mov
loope
cmpsb
rcrb
adc
or
jg
dec
adc
or
push
lods
push
or
out
sarl
cmpsl
mov
dec
insl
in
mov
push
jbe
out
pop
cltd
repz
mov
ljmp
mov
add
imul
push
and
cmpsl
xchg
in
or
arpl
ret
mov
ffreep
sub
mov
jbe
sbb
inc
fnstenv
mov
xchg
mov
mov
xlat
fdiv
sub
stos
jmp
push
add
jns
xchg
cmpl
mov
std
les
gs
aad
adc
es
cwtl
rorl
daa
and
and
pcmpeqw
xchg
in
sub
and
xchg
stos
mov
leave
in
sub
enter
pop
pop
pop
cmp
mov
dec
lret
repz
ss
xchg
ret
push
cmp
stos
cmp
xlat
shr
mov
insl
push
xchg
add
mov
out
mov
in
shlb
cmc
rcrb
xchg
jmp
dec
lods
mov
and
jae
or
in
fidivs
dec
inc
outsl
jecxz
xchg
cmpsb
xchg
outsl
push
out
out
or
and
les
into
dec
shll
out
ret
adc
xor
jnp
sbb
lret
aaa
pop
ds
cmc
stos
add
jno
aaa
mov
add
shrb
or
andb
or
inc
inc
sahf
lcall
lcall
std
call
inc
xchg
scas
sbbl
jnp
movsl
dec
in
mov
xor
push
lods
mov
cmp
loope
sti
aaa
adc
xchg
lock
jmp
push
in
dec
popa
scas
push
mov
cmp
hlt
mov
mov
lock
std
rcr
fimull
sti
mov
ret
into
mov
inc
dec
mov
paddw
add
mov
dec
inc
mulb
xor
insl
mov
jge
addr16
lock
jbe
jmp
xor
daa
push
xor
enter
test
testb
addr16
call
lcall
popf
push
sbb
sub
fwait
xchg
xchg
pop
add
bnd
lcall
out
xchg
int3
cmpsl
adc
imul
adc
pop
pop
jecxz
and
cmp
out
mov
enter
mov
imul
xor
push
mov
repnz
aad
mov
dec
shlb
cmp
daa
scas
inc
sbb
stc
pushl
sbb
jp
popf
cmp
dec
lds
xor
lds
add
inc
stos
jae
mov
movaps
hlt
add
lods
dec
and
aas
pop
mov
xorl
int
sarl
cmpsb
insl
jg
lock
jns
cmc
out
dec
push
jecxz
imul
dec
xor
imul
shr
stos
into
out
xchg
jne
std
fiadds
lods
loop
jnp
fisubs
movsb
or
sub
or
test
insb
pop
pop
cld
mov
not
sbb
or
jb
and
std
mov
rcrb
xor
sbb
rcll
test
cmp
xchg
test
add
ficoms
and
mov
std
push
lcall
stos
ljmp
push
test
stc
cmpsl
or
addl
lea
gs
shlb
cmc
sbb
pop
ss
adc
cmc
and
cmpsb
gs
repz
pusha
and
daa
dec
mov
add
les
les
push
dec
ret
sub
dec
dec
inc
mov
dec
xor
and
loop
pop
fcomps
sub
mov
push
dec
push
fwait
inc
enter
cmp
outsl
sub
xchg
aad
jnp
sbb
mov
sub
inc
out
insl
or
insb
cmp
test
push
sbbb
nop
jle
adcb
mov
fidivrs
sub
pop
add
fnstenv
add
shlb
out
stos
sub
dec
mov
lahf
stc
dec
orl
aad
jnp
outsl
and
cld
lods
push
lods
push
outsl
and
loopne
les
sub
push
sub
fstpt
xchg
adc
xlat
shlb
mov
mov
dec
orl
stos
push
into
or
mull
shl
adc
sub
lcall
mov
pop
fwait
in
jmp
inc
orl
and
insl
add
loope
push
sub
fucomp
and
je
xor
fldcw
movsl
cmp
pop
pop
leave
loope
dec
clc
flds
add
mov
imul
fbld
loop
repnz
rclb
push
ljmp
stos
and
dec
mov
xor
icebp
fs
addl
movsl
jmp
adc
mov
pop
aam
mov
std
fdivs
idivl
fs
sbb
scas
xchg
inc
incl
sahf
popf
aam
fisttps
xor
and
stos
insb
push
mov
stos
or
js
jns
push
dec
testb
je
ja
dec
push
gs
movl
jb
std
mov
in
out
rcr
int3
push
fsubs
or
cmpsl
jmp
mov
add
or
shrl
mov
push
gs
loopne
ret
fcomp
stos
adc
nop
dec
push
fsts
in
mov
dec
sbb
dec
lret
sub
ja
out
or
outsb
adc
push
pop
in
out
add
inc
ljmp
lret
cmc
in
jne
mov
daa
jae
adc
shrl
sbb
andb
xchg
mov
les
sub
dec
gs
loop
push
or
cwtl
adc
in
cmpl
rcrb
ud1
xor
cltd
pusha
and
mov
xchg
aaa
movsl
iret
dec
xor
outsb
gs
lahf
or
push
out
cmp
andl
fldl
and
cmp
pop
les
pop
loopne
clc
adc
lods
xlat
cmp
frstor
inc
dec
add
lea
arpl
enter
sbbl
or
fidivrs
outsl
fwait
mov
shll
jg
mov
mov
fcmovb
div
and
inc
jg
rolb
loopne
jmp
and
in
mov
jp
push
je
sbb
xchg
flds
mov
scas
das
push
sahf
movsb
inc
pop
insl
les
dec
adc
dec
ret
mov
pop
mov
mov
lret
add
les
fcmovbe
out
fs
arpl
push
cmp
bnd
inc
sbb
inc
shlb
fadd
or
mov
mov
or
jae
dec
adc
mov
fwait
stos
jmp
ret
out
test
mov
jp
iret
mov
pop
movsb
xchg
les
mov
pop
ja
arpl
ljmp
ss
cmp
ret
xor
sbbl
mov
lods
or
daa
mov
outsl
imul
inc
fstps
or
bound
pop
jns
ja
cmpb
xor
sub
dec
test
mov
aam
pop
fcoml
fwait
nop
jae
sbb
shl
call
in
dec
mov
mov
dec
adc
loope
jl
test
pop
cmp
das
add
or
loope
sbbl
testl
and
push
flds
pop
mov
pushf
loope
outsl
mov
pop
xorb
sub
jecxz
lret
neg
jb
and
orb
insl
test
ja
jmp
inc
and
sarb
push
dec
adc
and
out
scas
mov
mov
lock
fstpt
dec
mov
dec
faddl
xchg
int3
cmpl
xor
loope
into
jns
insb
into
adc
cld
stos
inc
insl
arpl
pop
push
push
pop
daa
jle
sarb
fistpl
cmpsl
outsl
int3
popl
test
gs
add
mov
js
jae
push
aas
or
inc
sbb
rcr
pop
add
cwtl
mov
stc
les
or
outsl
lock
pop
mov
lcall
lods
loopne
xor
dec
cmc
pop
std
leave
or
jne
sarl
ds
mov
popf
inc
gs
cmp
out
xor
or
cwtl
outsl
mov
mov
cwtl
jae
bnd
dec
leave
movsl
mov
mov
decl
mov
jmp
dec
leave
sub
mov
adc
or
repnz
fbstp
shrb
leave
mov
daa
mov
mov
mov
mov
inc
sbb
push
jno
mov
sbb
sub
adc
loope
cli
or
inc
inc
gs
adc
mov
ret
test
inc
fwait
cs
push
push
inc
jp
ret
pop
jle
mov
test
fcmovne
popa
sbb
xor
lret
test
clc
lcall
mov
add
dec
js
pop
outsb
jno
pushf
pop
add
andl
mov
mov
out
rorl
ror
into
insb
std
jb
xchg
mov
pop
shrl
sbb
sbb
sbb
dec
mov
jb
dec
add
dec
imul
jnp
aas
inc
or
pop
lret
icebp
mov
ja
dec
xor
ja
xchg
cmp
push
aaa
rclb
jne
jno
add
mov
adc
mov
mov
std
and
bnd
inc
pop
ds
rcl
pop
out
sti
inc
sub
test
inc
stos
inc
rorb
out
ret
jp
inc
inc
fwait
xchg
push
ja
mov
outsl
mov
and
add
outsb
jnp
add
jecxz
shrd
sub
adc
call
xor
es
and
loope
mov
loop
adc
shr
repnz
jne
adc
add
push
inc
sub
ja
push
ja
ret
add
mov
mov
insl
jne
cmp
mov
dec
data16
mull
shlb
add
imul
jge
push
sub
cmc
flds
mov
test
mov
dec
sbb
or
je
aad
mov
dec
and
adc
fimuls
inc
pop
pop
ss
or
or
push
mov
mov
loop
or
pop
mov
imul
xor
fisubs
inc
pop
add
dec
lret
push
popa
addb
mov
mov
test
fistps
sbb
nop
subl
sub
imul
frstor
dec
push
daa
div
ret
pop
jmp
mov
fdiv
cli
scas
pop
pop
lods
push
or
pop
push
into
cmc
gs
loope
movsl
sbb
pop
xorl
cmpsb
jg
adc
ja
pop
bound
in
ja
xchg
and
mov
je
call
js
mov
dec
stos
cmp
out
xor
cmp
add
inc
rorb
mov
jne
jmp
cmc
out
repz
push
test
popa
mov
dec
lods
std
add
cmpsl
and
insl
inc
and
mov
movsb
mov
shll
pop
push
int
xchg
mov
xchg
subl
add
lret
adc
movsl
pop
mov
les
xchg
and
test
xor
pusha
aas
cmpsb
mov
in
jmp
movsl
cli
lea
sbb
adc
loop
into
lret
int
cmp
cltd
push
add
and
cs
fdivl
aad
add
dec
push
in
shl
leave
xchg
push
cmpl
inc
ljmp
cmp
adcl
sub
rorl
or
mov
and
filds
xlat
xor
jmp
repnz
shl
xor
xchg
push
adcl
loop
pop
xor
adc
mov
filds
lcall
push
pop
fists
inc
adc
sub
xor
adc
test
js,pn
shll
inc
not
lods
add
mov
xlat
addb
mov
xchg
out
pop
aas
or
mov
xchg
sub
push
bnd
add
cmpsb
inc
pop
out
adc
sub
add
xchg
push
ds
mov
mov
test
loope
pop
add
std
lods
adc
hlt
pop
mov
add
enter
mov
ficoml
cmp
out
test
ror
out
adcb
xchg
leave
or
xchg
push
or
or
jle
mov
sbb
cmpsw
cmpsb
dec
and
push
mov
insl
xchg
nop
pop
mov
and
push
sub
push
out
adc
sbb
mov
mov
or
scas
ja
fidivrl
popf
fmulp
mov
jle
rcrb
dec
adc
inc
adc
scas
add
cltd
outsl
popf
out
jo
scas
fildl
sar
leave
push
das
scas
sub
aaa
testl
rcrl
xor
sbb
push
mov
imul
repnz
sub
push
aam
aaa
std
sub
and
dec
movsl
dec
lahf
add
or
jmp
inc
rcl
fsts
xchg
mov
push
jns
and
mov
or
jge
lods
ret
cmp
or
idivl
xor
dec
jnp
xor
sbb
push
lods
testl
lds
ret
in
add
inc
xor
cltd
in
mov
inc
jmp
jecxz
push
outsl
jns
push
xchg
jbe
cmpb
sti
xchg
dec
lret
scas
mov
sarl
sbb
rclb
in
pop
jo
aaa
cmp
rcrl
sbb
inc
jl
data16
leave
push
mov
push
andb
jnp
subl
imul
mov
arpl
mov
and
sbb
xchg
or
mov
into
mulb
mov
ret
sub
mov
lret
sub
sbb
mov
push
cmp
add
scas
cmp
adc
sbb
xchg
test
addl
add
movsb
sub
movsl
sub
dec
jge
imul
push
inc
xchg
mov
lahf
les
jb
inc
mov
lahf
shll
lock
inc
add
pop
call
cmp
pushf
jae
cmp
stos
dec
outsb
pusha
mov
arpl
scas
inc
inc
lods
in
fisubrl
xor
loopne
addr16
pop
cmp
dec
loopne
add
dec
repz
xchg
cmpsl
shlb
les
pop
cmp
mov
mov
pop
xor
lds
sti
sbb
mov
push
out
aas
mov
sbb
mov
mov
test
movsl
std
sbb
xor
mov
sub
fwait
aad
in
mov
decb
cmpsb
clc
inc
inc
outsb
inc
inc
mov
mov
ficoml
into
inc
mov
add
xchg
jmp
cmc
sbb
sbb
mov
jo
cmpsb
xlat
lds
mov
mov
pop
mov
in
sbb
repz
rclb
sbb
adc
int
addr16
dec
adc
mov
inc
dec
stc
repnz
cmp
cwtl
test
iret
mov
outsl
stos
lret
repnz
push
test
ljmp
sti
loope
test
filds
in
popl
fcoms
mov
fidivs
inc
inc
das
lea
ret
cltd
scas
jae
and
and
in
mov
or
cmpsl
xor
mov
cmpsl
sti
mov
push
pop
aad
mov
dec
jae
sub
in
push
inc
and
es
aaa
hlt
and
xlat
sti
into
mov
inc
jmp
arpl
rorb
mov
mov
lcall
mov
repz
xchg
and
aad
add
lock
push
cmc
repz
lods
dec
repz
test
jae
and
ret
je
testl
xor
pop
add
ret
sub
sarb
outsb
scas
xchg
inc
daa
sbb
decl
fiadds
and
sahf
push
mov
pop
clc
test
xchg
xchg
iret
sub
shrb
out
jge
sti
and
push
in
add
xchg
test
adc
cli
push
scas
adc
jbe
rcrb
test
pop
jle
cmpsl
fcmove
dec
in
outsl
mov
data16
inc
mov
ffree
aad
mov
adc
mov
cmp
addl
subb
cmp
insl
sub
mov
mov
shr
mov
sub
and
ljmp
ret
push
adc
xchg
mov
xchg
xchg
hlt
test
jmp
roll
aaa
pop
jnp
sub
pop
test
clc
subb
addr16
sbb
fld
sahf
pusha
rcr
insl
sub
pop
add
cld
insb
ud2
dec
mov
les
push
and
pop
sbb
or
mov
leave
in
pop
mov
add
and
mov
xchg
data16
dec
movsl
rolb
xor
popf
or
addr16
or
inc
in
lds
sbbl
xor
lock
decl
std
out
shl
cmp
xchg
ret
gs
aam
hlt
cmp
add
jb
fiadds
jge
mov
and
leave
or
test
sub
imul
lds
shlb
sbb
inc
out
fimull
cmc
clc
mov
sbb
lods
xor
loopne
pop
repnz
aaa
add
out
aas
repz
jno
inc
mov
mov
lock
stos
pop
jp
pop
subl
push
mov
pop
rorl
les
loopne
dec
lcall
jecxz
add
icebp
stos
jne
test
mov
addb
xor
test
mov
add
sub
fimull
sbb
les
dec
inc
push
inc
pop
add
push
cmc
call
iret
enter
sbb
mov
push
dec
add
jp
aas
pushf
les
bound
int3
out
mov
lods
xorl
ffreep
jge
mov
push
sub
out
and
aam
cmpsb
xchg
clc
jo
sti
push
stos
xor
fiadds
or
and
push
hlt
int
popa
adc
or
stc
inc
add
adc
je
mov
mov
push
sub
add
push
and
loop
iret
hlt
scas
nop
mov
sub
or
jne
loop
les
fcomi
xchg
sub
cltd
mov
popa
add
daa
mov
xchg
pop
xor
popa
test
aam
mov
lods
lret
or
mov
ja
cld
push
jno
sbbl
adc
ret
cmpsb
je
aas
aaa
mov
pop
dec
xchg
stos
movsl
scas
rolb
jl
fisubs
jae
mov
xorl
lock
cld
mov
xchg
faddp
jne
scas
mov
mov
push
test
xor
ficomps
sub
add
mov
sub
add
add
sbb
mov
mov
icebp
repz
mov
pop
jnp
loopne
pop
loope
jnp
mov
inc
ja
jbe
fs
dec
add
fnstsw
mov
xchg
mov
cmpl
mov
jmp
mulb
ret
or
es
dec
data16
adc
stc
fisttpll
into
dec
push
mov
xchg
ffreep
cmp
mov
mov
or
mov
addb
jne
xor
les
inc
dec
jge
and
mov
xor
sbb
adc
add
pop
push
arpl
cld
into
mov
push
pop
stos
fmull
add
rcr
icebp
mov
ret
cmp
xchg
gs
fs
adc
xchg
sub
mov
mov
repnz
jmp
pusha
mov
or
shlb
inc
rcrb
xchg
mov
test
stos
add
das
mov
cwtl
jmp
and
pop
mov
rcr
loopne
pop
dec
aad
pop
add
inc
jl
add
mov
add
mov
jne
cmp
jl
mov
clc
or
xchg
fiaddl
ljmp
dec
shl
mull
nop
das
sti
ret
stos
mov
adc
cmp
inc
mov
les
cmp
in
mov
cltd
inc
popa
mov
fimull
xor
pop
loop
ret
xor
add
add
idivl
jae
enter
out
inc
outsl
neg
std
loop
xorb
fwait
js
ds
pop
or
pop
add
cltd
ja
mov
ficompl
mov
or
test
jmp
push
les
sbb
out
sbb
loope
xchg
rorl
and
adc
orl
inc
xchg
sarb
adc
ss
push
jl
add
pop
add
loop
addr16
mov
or
adc
out
in
mov
mov
mov
push
outsb
push
rep
mov
push
daa
mov
pop
popa
cld
dec
pop
pusha
push
push
shlb
idivl
out
push
repz
xchg
sti
sbb
cmp
data16
rolb
sub
mov
xchg
inc
into
pushw
jne
pop
push
or
mov
sub
stc
mov
jg
inc
or
sti
icebp
les
loope
xchg
mov
pop
sbb
sarl
push
jnp
movsl
cmp
and
mov
add
popa
xchg
imul
mulb
rcll
stc
or
xor
les
in
add
jg
fcmovb
int
ss
ja
and
jae
push
xor
into
inc
push
add
jp
add
jb
mov
ret
cwtl
jnp
or
mov
out
pop
mov
mov
in
mov
sbb
dec
and
mov
ja
rorb
jmp
inc
call
mov
add
movsl
fisubrs
or
lock
and
into
dec
mov
sbb
popf
ret
daa
sti
xchg
mov
movsl
push
mov
scas
pushf
div
insl
mov
add
mov
mov
pop
and
and
mov
add
mov
xchg
add
call
mov
mov
cs
sbb
cmpsl
das
lea
ficomps
or
testl
daa
pop
bound
cmp
push
repz
in
sbb
mov
sub
adc
sahf
inc
shlb
fwait
and
shlb
push
sbb
mov
jle
arpl
inc
pop
pop
sub
stos
sbb
insl
ret
and
icebp
or
dec
loop
mov
mov
and
fmuls
inc
pop
gs
in
repnz
aam
sti
popa
add
xlat
icebp
inc
out
cmc
and
ss
lret
mov
mov
out
xor
test
lret
fnsave
mov
out
mov
xchg
or
arpl
xchg
add
pop
sub
out
sub
gs
jne
addb
data16
pop
cmpb
icebp
xlat
ret
addr16
jne
out
pop
mov
push
shrb
pop
inc
mov
mov
movsb
inc
add
or
les
out
orl
hlt
mov
and
mov
enter
jo
mov
jle
cmp
pop
xor
cs
shrb
pop
xor
lcall
fidivrs
incb
sbb
outsb
mov
imul
add
ret
clc
loopne
jne
or
es
push
fs
rclb
cmpsl
sbb
imul
xor
aaa
mov
cmp
cmc
loope
filds
in
arpl
xor
jmp
jecxz
int
push
call
sub
fs
push
cmp
fs
pop
push
fisubl
shl
mov
ret
rclb
aaa
stos
ret
aam
sahf
lods
or
add
push
test
mov
test
mov
nop
push
sub
or
out
test
jae
cwtl
inc
aaa
sti
push
inc
dec
fistpll
jmp
loope
inc
jmp
pop
xchg
xchg
sbbl
into
into
mov
negb
rclb
jns
pop
jae
data16
jg
xchg
aaa
sbb
rorl
dec
bound
repnz
aad
or
loop
add
loope
and
loop
push
mov
mov
fwait
and
push
dec
sbb
sbb
xlat
shll
loopne
jb
add
sbb
sbb
into
movsb
lahf
sahf
nop
loop
and
clc
or
or
mov
shlb
rcrb
test
sbb
adc
les
int3
adc
inc
mov
fistpl
push
movsl
pop
movsl
add
xchg
test
sub
sbb
fcmovnb
icebp
rcrb
sbb
jns
scas
dec
ljmp
lea
sub
dec
rolb
frstor
inc
lock
inc
and
lock
push
pop
jnp
dec
mov
sbb
mov
dec
out
sub
popf
push
mov
xor
ffree
stc
xor
aad
xor
cmp
sti
outsb
push
add
mov
inc
pop
ret
jns
stc
dec
and
loope
sub
add
les
add
std
mov
leave
dec
out
pop
jmp
cmp
and
sarl
scas
addr16
ret
aad
inc
mov
daa
mov
fcmovu
or
sub
fbstp
mov
jmp
aaa
jle
mov
jae
xor
add
scas
and
push
fcomip
scas
xor
dec
lock
jge
adc
movsb
mov
inc
cmp
mov
xor
out
call
out
das
cmpsl
cmpsb
dec
mov
mov
pop
test
xor
dec
or
xor
jp
and
pop
roll
mov
mov
pop
imul
pusha
movsl
jmp
jg
sub
adc
je
and
mov
sti
int3
gs
push
and
int
jge
sub
push
mov
adc
sti
js
mov
in
mov
pxor
filds
adc
iret
mov
sarb
fcmovu
xchg
xor
gs
rclb
sbb
sbb
pushl
sbb
imul
loope
js
sub
inc
sbb
jns
jb
inc
pop
mov
xlat
or
xchg
inc
and
xchg
lods
arpl
mov
fwait
cmp
ds
loop
cmpsb
outsl
rorb
push
insb
mov
inc
in
pop
dec
jl
ja
fs
fwait
cmpsl
cwtl
testl
xor
add
rol
stos
dec
mov
mov
into
jb
push
les
cmc
jo
test
dec
push
pop
jns
add
or
in
std
mov
add
in
mov
dec
aad
idiv
mov
sti
scas
mov
add
sub
dec
xchg
hlt
in
add
xor
cmp
sbb
les
dec
lret
ficoms
jp
sarb
sub
imul
push
loope
mov
mov
cmc
mov
call
in
xor
test
cmpsl
dec
push
lret
xchg
pushf
lods
sahf
xchg
gs
push
jne
cs
jns
dec
pop
test
jp
jae
rcll
movsl
hlt
mov
adc
fistl
imul
push
mov
in
jb
push
mov
stos
lock
mov
add
test
testl
int3
in
clc
mov
xchg
stos
mov
aad
fidivs
adc
sbb
sarl
scas
mov
sbbb
jmp
mov
dec
in
out
sarb
or
jmp
dec
mov
pop
loopne
xor
xor
and
pop
das
pop
movsb
pop
movl
xchg
jno
ror
pusha
sub
rcl
js
lret
add
lret
mov
mov
cmp
or
or
test
jnp
jle
jne
pop
jmp
aad
scas
inc
xchg
dec
scas
ficompl
or
gs
into
in
ds
ds
jl
add
sbb
aad
or
stos
and
scas
sub
aas
jb
sbb
in
fimuls
lcall
fistps
mov
jae
hlt
xchg
add
rorb
xchg
ret
mov
mov
test
jle
gs
mov
mov
cmpsl
rcrb
mov
lods
mov
xchg
jae
ja
push
insb
mov
loope
sahf
add
jb
dec
shl
dec
sbb
std
mov
mov
or
mov
adc
out
xor
movsl
or
jge
cmp
mov
lahf
in
pop
add
mov
jns
inc
rorb
xorb
std
xchg
and
lods
jp
fwait
mov
dec
xor
inc
mov
and
mov
mov
inc
inc
xorl
xchg
jb
cmpsl
inc
fcomps
add
jo
xor
dec
lds
or
sbb
sub
add
and
rorb
sahf
xchg
test
adc
popa
lods
xor
je
mov
rol
les
jns
inc
mov
jecxz
rolb
test
sub
sub
daa
jmp
jle
xchg
fs
adc
sbb
adc
ljmp
xchg
hlt
rcll
xchg
push
pop
xlat
icebp
and
jl
repnz
xorb
sbb
in
std
and
je
cmp
mov
fwait
outsb
mov
sbb
pushf
test
ljmp
aad
xchg
and
mov
testb
loopne
int
mov
icebp
sahf
pop
test
and
mov
push
vmovdqa
daa
in
mov
cmp
stos
pushf
adc
push
imul
out
mov
push
sbb
js
pop
xchg
or
xchg
adc
or
sub
mov
add
insl
test
push
push
into
aam
data16
loop
jp
ret
sbb
popf
lock
lcall
in
cmpsb
std
lods
clc
and
mov
lcall
lret
jmp
ret
cmpsb
test
add
lods
xchg
mov
adc
ljmp
shl
xchg
mov
jb
inc
outsl
rclb
sarl
inc
push
lcall
xor
add
mov
fists
in
add
sub
gs
ffreep
js
imul
mov
xor
adc
idiv
add
int3
push
and
minps
xor
call
test
sbb
leavew
test
fucom
scas
lcall
inc
mov
mov
mov
xor
shl
fcmovb
pop
xlat
mov
push
mov
aam
and
or
addr16
mov
cmp
mov
lock
adc
std
xor
xchg
and
mov
mov
insl
dec
or
popl
cmp
and
rolb
dec
pusha
cmp
negl
mov
in
sbb
insl
std
call
gs
lahf
adc
ds
mov
cmc
cmp
movsb
repz
repnz
faddp
addl
bound
mov
push
rclb
inc
lcall
pop
lods
test
xor
loopne
xor
add
pop
in
push
and
adc
xchg
into
mov
dec
in
iret
pop
jne
dec
push
or
push
in
or
lret
nop
dec
mov
mov
cs
out
mov
jmp
mov
xor
cmp
xchg
push
mov
push
in
mov
pop
xchg
sub
std
jmp
and
in
mov
cwtl
out
xlat
mov
mov
outsl
lds
inc
hlt
popf
mov
or
adc
clc
cmc
jl
or
adc
lods
cmp
mov
jns
add
adc
jmp
int3
loopne
outsb
les
jb
sahf
cmpsl
sbb
adc
mov
aaa
mov
jmp
dec
aas
inc
addr16
movsl
daa
fldt
add
test
out
mov
mov
dec
jg
gs
mov
or
pop
xor
fimuls
jns
iret
add
fstp
jle
mov
push
pop
call
lods
sub
fcmovne
add
sbb
in
pop
sar
add
outsl
test
jb
mov
jecxz
orl
rclb
push
mov
out
or
pop
fistpll
inc
adc
and
jmp
adc
jge
and
sub
adc
cmpsl
fsubr
jae
adc
repnz
sbb
xor
push
mov
pop
pop
std
cwtl
push
ds
xchg
rolb
loopne
add
daa
pop
orb
imul
pop
rolb
daa
rcr
leave
adc
orb
xchg
popa
sbb
add
dec
imul
mov
inc
and
adcl
push
mov
mov
test
fwait
cmp
jo
sub
cmp
xchg
fwait
mov
stc
cltd
mov
mov
outsb
push
ljmp
cmp
out
jg
or
add
add
hlt
daa
sti
cmp
sub
idiv
jne
shl
push
push
imul
pop
xchg
les
fs
sub
imul
fstpt
add
push
lods
ficoms
aad
mov
add
mov
cmc
ljmp
popf
mov
out
out
int3
jg
xor
lds
jb
lock
add
daa
ret
sub
aad
mov
ljmp
or
jbe
in
inc
subb
popa
aaa
push
add
mov
and
repnz
cmp
sbb
cmpsb
in
sti
pusha
ss
mov
jl
inc
mov
pop
xchg
neg
xor
outsb
and
mov
add
fwait
mov
cwtl
cmp
aas
sbb
adc
loop
cmpsb
inc
push
sub
ljmp
in
cmp
out
insb
push
cmp
mov
shrb
push
sahf
xor
sahf
inc
lock
adc
cmp
xrelease
jle
push
loopne
adcb
cld
pop
jge
sub
arpl
sub
pop
sbbl
daa
cmp
daa
adcb
dec
adc
jmp
fsin
pop
fsub
jecxz
rol
xor
repz
xchg
pop
loope
add
xor
fs
jge
roll
pop
adc
in
push
lea
lret
inc
cmp
xchg
in
mov
loopne
push
pop
push
push
mov
sbb
xchg
adc
nop
ss
movb
in
xor
mov
sub
xor
xchg
mov
xchg
les
mov
les
adc
lret
aad
push
and
jp
gs
jns
mov
sti
fdivrl
mul
stos
sbb
test
ret
leave
jge
in
lds
out
inc
int
repz
push
pop
into
xor
pop
sbb
adc
xor
scas
and
aas
lods
pop
sub
xor
inc
insl
pop
jnp
add
in
icebp
notl
pop
add
sbb
jb
shrb
enter
leave
xorl
hlt
out
nop
cli
loop
shlb
xchg
or
pushf
pop
dec
mov
inc
inc
inc
out
lods
mov
adc
out
pop
pop
cmp
into
insb
inc
ja
ret
jecxz
mov
push
inc
les
push
add
and
lret
sahf
xchg
pop
dec
mov
push
sbb
loopne
or
cli
jne
sahf
xchg
lahf
mov
mov
dec
data16
fimull
and
mov
dec
les
test
dec
mov
xchg
cwtl
adc
dec
mov
or
mov
or
std
fists
adc
jnp
les
jno,pn
ret
dec
cmp
mov
cmpl
pop
and
in
sbb
movsl
insl
loopne
arpl
lock
sub
fst
cmc
inc
ret
xchg
xadd
cmc
lret
repnz
jae
add
scas
insl
and
mov
test
mov
cmc
and
out
dec
xchg
pop
clc
or
ds
xorl
aas
push
enter
push
dec
xor
in
lret
subl
popa
int
and
es
setbe
xchg
sbb
mov
push
loop
mov
les
cmpsb
dec
popa
pop
out
push
das
call
push
xchg
fwait
and
sqrtps
push
push
sbb
scas
cmp
mov
daa
fisubl
mov
cmpsl
pop
xchg
cs
pop
scas
mov
mov
rorl
xchg
add
out
popa
mov
xchg
lock
dec
rclb
dec
dec
cmp
inc
insb
mov
adc
xor
outsl
add
mov
mov
pop
and
ss
imul
mov
sbb
mov
mov
xchg
loop
out
jb
and
in
mov
cmpb
add
negl
fisttps
cmp
mov
inc
add
pop
ljmp
xchg
aad
ja
fbstp
sahf
sub
or
shll
cmpsb
in
bound
fisubs
lcall
cmp
sub
xor
ret
stc
in
rolb
ss
lea
in
fbstp
ljmp
rorb
dec
in
stc
ja
lds
std
gs
xlat
ud0
sub
mov
sub
mov
popf
xchg
ret
imul
push
inc
mov
les
sahf
jg
jp
outsb
inc
add
push
jo
test
aam
pop
aad
arpl
ret
sti
jmp
imul
mov
les
fcompl
out
or
add
out
pop
js
stos
retw
fldenv
shlb
into
ss
sbb
in
lods
mov
mov
movzbl
aas
test
xchg
ja
flds
adc
xchg
adc
loop
pop
xorl
push
bound
out
rorb
mov
lods
xlat
js
mov
cmp
mov
mov
into
in
dec
mov
repnz
fsubrp
sbb
flds
cwtl
pusha
aaa
cmp
adc
fisttpl
sbb
icebp
xlat
jge
cs
mov
jo
pushaw
shrb
mov
adc
mov
push
shlb
mov
loop
fwait
cmpsl
push
mov
rol
mov
je
mov
xchg
addr16
and
nop
mov
loop
mov
pop
or
sarl
dec
jle
in
push
add
mov
adc
filds
mov
mov
movsb
inc
rorl
je
faddl
dec
fisttps
lock
or
test
rol
jae
ja
inc
dec
les
fnstenv
xor
cmp
jne
sub
mov
xchg
sbb
bound
xor
fsub
pop
fnstcw
or
dec
cmpsl
cmp
dec
rcl
adc
cmp
mov
inc
filds
shl
or
dec
mov
push
pusha
ret
mov
inc
outsl
daa
loop
cltd
mov
pop
sbb
cmc
clc
aad
sbbl
push
ror
jl
jl
out
aas
lea
pop
inc
das
adc
mov
test
cmp
xchg
mov
rorb
sbb
adc
push
cmpl
mov
jae
notb
fsubp
pop
sub
and
imull
jecxz
sti
imul
mov
xor
xor
movsl
cmp
addb
add
and
sub
or
cmc
lods
xlat
mov
test
jecxz
push
and
lret
mov
jp
or
shlb
imul
xchg
fiadds
loope
into
xchg
mov
fcomps
xor
push
mov
pop
aam
movsb
mov
xor
cmp
mov
inc
xchg
rcll
mov
mov
les
xor
jae
add
mov
inc
arpl
or
mull
mov
movsl
arpl
dec
fiadds
add
pusha
fwait
mull
inc
mov
enter
jmp
or
cwtl
sti
call
repz
sbb
pop
out
cli
cltd
adc
sarb
lcall
push
jnp
movsl
sbb
stos
ficoms
in
xor
inc
in
or
mov
lea
dec
pop
les
xchg
add
scas
or
lods
pop
mov
add
gs
scas
pop
pop
or
insl
clc
mov
cmp
into
test
pop
inc
das
sbb
inc
les
shrl
mov
cld
gs
mov
pop
xchg
inc
sti
adc
cmc
pop
mov
xchg
dec
nop
jle
mov
push
add
nop
dec
lea
push
out
dec
xchg
or
test
pop
rorb
mov
aam
inc
jecxz
inc
orl
arpl
lret
popf
xchg
pusha
outsb
ret
mov
mov
insb
movntq
aad
or
sbb
clc
lcall
or
and
rcll
loope
push
fstpt
jbe
cltd
jno
fadd
sbb
fistpll
cmp
lea
pushl
and
mov
pop
mov
push
lods
xchg
insl
mov
pushf
pop
add
add
flds
insb
xor
inc
mov
jecxz
ljmp
mov
mov
fucomp
lcall
pop
inc
sub
xor
sarb
inc
cltd
in
dec
inc
pop
push
add
movsb
dec
repz
loopne
outsl
sub
adc
je
mov
fimull
or
aad
or
ja
xor
dec
mov
mov
pop
mov
rcrb
inc
mov
push
icebp
cld
mov
push
dec
xchg
imul
ret
mov
xlat
rcr
loopne
je
sbb
jno
or
pop
mov
mov
loopne
loope
into
adc
jl
into
dec
out
cs
inc
mov
lret
add
ljmp
loopne
sbb
outsl
mov
imul
cmp
fstp
fistpl
repnz
cld
sub
sahf
xor
mov
es
xchg
sbb
jae
in
test
out
les
mov
sbb
or
daa
mov
lock
ja
pop
mov
xchg
adc
lods
mov
pusha
inc
cld
in
clc
push
mov
sub
adc
ja
fcompl
add
mov
mov
mov
jae
add
push
sbb
xchg
fwait
lret
jb
aam
inc
aaa
mov
rol
xchg
fxch
cmp
rclb
out
das
leave
mov
in
ljmp
xor
jb
jp
mov
jns
data16
pop
movsl
inc
outsl
xchg
adc
or
mov
fs
xchg
jne
inc
enter
jle
mov
lds
dec
cmpsb
add
cmpsl
les
ja
sub
mov
je
pop
faddl
mov
jmp
aad
mov
xchg
cld
push
or
push
ja
xchg
aam
orb
mov
push
fcomps
ja
mov
xchg
jle
mov
das
or
jl
repz
iret
jmp
jne
lds
cmp
xchg
dec
mov
mov
cmpsl
push
mov
aaa
rcrb
jl
ja
inc
les
cmp
cltd
mov
bound
xchg
push
push
lods
notl
mov
inc
enter
pop
aas
lcall
xor
loope
mov
adc
roll
xchg
lods
das
repnz
xchg
xlat
lret
jge
jno
negl
cmp
rcrb
mov
dec
mov
repnz
lds
mov
push
testl
das
sub
idivb
lcall
arpl
arpl
mov
cld
dec
std
adc
cmp
inc
lds
pop
xchg
cmp
mov
pusha
sbb
mov
psubusw
cld
loopne
aas
imul
das
sar
imull
push
adc
xor
pop
mov
stos
in
sbb
mov
adcl
inc
adc
push
out
xor
jl
mov
out
sbb
cli
std
pop
dec
pop
sbb
add
mov
cmc
cmp
icebp
push
sbb
cmp
sub
lds
pop
jb
lahf
jmp
sub
nop
outsl
std
sub
cmp
sub
aaa
jne
or
lcall
dec
sub
addr16
inc
mov
stos
cmp
xchg
inc
mov
cwtl
test
sub
and
jecxz
fists
inc
dec
mov
pop
rcrb
idiv
out
and
ss
hlt
cmpl
mov
push
sub
sbb
cs
dec
aaa
mov
cmp
adcb
out
xchg
movsl
sbb
ror
xor
mov
sbb
ja
sbb
mov
pop
xor
cmpsl
mov
test
pusha
arpl
cltd
dec
shll
push
mov
popa
xchg
adc
mov
loope
out
sbb
shlb
mov
pop
cmp
push
enter
add
sbb
sti
pop
out
lock
add
xchg
imul
es
lods
clc
cwtl
adc
sbb
jecxz
shrb
and
and
push
dec
fmul
jae
ds
and
mov
repz
pop
pop
inc
add
adc
movsl
add
and
xor
ljmp
xchg
adc
inc
adc
gs
gs
and
fidivrs
leave
mov
push
out
push
add
push
add
cmc
imul
xchg
test
cmp
scas
iret
add
add
xchg
xor
clc
xchg
jno
popf
mov
lock
pusha
and
sub
sbbb
stos
loop
pop
fisttpl
push
stc
dec
and
cmpsl
pop
mov
xor
push
cmp
push
icebp
and
rclb
add
rorb
test
call
sub
cwtl
aas
push
adc
lcall
rol
jnp
cmp
loop
push
pmuludq
xorb
pusha
in
inc
cmp
adc
cmpsl
in
sub
stos
gs
test
mov
shll
sub
imul
ds
mov
rcll
or
xor
in
loopne
je
loop
into
pop
mov
cld
out
lret
sbb
xor
mov
in
mov
test
and
insl
jne
pop
inc
or
add
js
sbb
or
pop
insb
sub
ret
bound
mov
cmpsl
fistps
sub
aaa
add
adc
shlb
xchg
mov
mov
rcr
out
rcr
push
cmp
inc
sti
pop
shrb
xor
cmp
push
negl
mov
mov
xor
sbb
push
fldenv
into
fnstenv
arpl
rcll
dec
pusha
ds
adcl
das
sbb
mov
dec
and
sbb
loop
imul
and
mov
or
scas
scas
adc
sub
sub
mov
icebp
bound
and
mov
dec
hlt
mov
testb
sub
mov
adc
popa
push
pop
xor
lods
cmp
je
add
adc
fwait
cmpsl
push
mov
mov
adc
clc
mov
sti
push
bound
sbb
push
pop
xchg
std
lret
popa
fnstenv
jbe
cs
sbb
loope
mov
sub
idivb
sub
ss
stos
jecxz
lahf
imul
add
or
xor
imull
mov
sbb
dec
addr16
in
add
js
repz
inc
das
mov
les
cmp
mov
xchg
insl
mov
xor
into
pop
divl
int
jae
sbb
jae
hlt
mov
and
cld
outsl
sbb
and
rol
cmp
push
lcall
in
aad
pop
lcall
xor
add
inc
out
sbb
mov
push
fistl
ret
cmp
push
mov
lahf
mov
rorb
or
imul
add
shl
mov
mov
dec
gs
sbb
mov
add
jnp
jg
cmp
pop
adc
jge
add
inc
je
adcl
inc
inc
jl
nop
xor
test
test
pop
addr16
xchg
push
xor
mov
push
add
sbb
mov
push
dec
outsl
add
adc
pop
xlat
dec
rcl
std
xchg
push
xor
sub
or
fists
add
outsl
aam
mov
xor
inc
or
into
or
out
push
and
lahf
push
lret
gs
shlb
into
or
or
mov
or
mov
xor
filds
shr
in
ret
add
sbb
test
shlb
scas
mov
mov
adc
imul
les
push
into
push
jae
xchg
enter
mov
pusha
mov
mov
aad
and
test
jae
adc
pop
xor
ret
mov
sarl
xor
mov
inc
test
push
xlat
sahf
push
inc
lds
stos
xchg
xchg
sti
les
xor
sahf
call
adc
mov
stos
outsl
mov
rcrb
pop
lock
sub
ja
add
jnp
subl
fsubs
add
cmp
sahf
sub
out
adc
shrb
mov
push
test
adc
jg
stos
pop
sahf
xchg
pop
jge
mov
pop
cmp
jno
push
jge
lock
cmpsb
hlt
push
pop
sti
xchg
inc
and
push
outsl
mov
shlb
mov
imul
pop
loop
inc
in
lods
add
test
pop
loopne
xchg
xchg
adc
in
sub
mov
or
popf
dec
add
sub
imul
ljmp
push
test
outsl
in
adc
sarb
ret
nop
adc
push
sti
xchg
adc
test
mov
jmp
out
bound
out
mov
dec
inc
adc
inc
inc
lds
mov
or
icebp
loop
mov
fwait
es
mov
sub
icebp
push
sub
cli
pop
push
dec
mov
aad
xchg
les
push
xchg
dec
mov
cmpsb
pop
sbb
insl
mov
jno
push
lea
or
dec
icebp
icebp
daa
sub
outsl
dec
adc
adc
push
stos
fists
adc
mov
das
lcall
push
push
cmp
lcall
mov
sub
push
std
mov
sub
inc
adc
jbe
jnp
sbb
filds
data16
mov
add
push
xor
pop
dec
cmp
lea
stc
ss
and
ljmp
aaa
cli
mov
int3
movsb
xor
sub
cmp
add
notb
ss
in
xchg
stos
fwait
jmp
sarb
sub
lock
sbb
dec
lods
outsb
aas
rolb
xlat
jecxz
mov
in
loopne
xor
adc
xchg
aad
out
iret
jae
repnz
leave
popw
add
inc
push
pop
jns
add
les
sbb
cmp
std
shlb
mov
stos
xor
outsl
cmc
clc
xchg
rcll
xchg
mov
gs
or
arpl
mov
adc
sub
rorb
mov
popf
std
movsl
add
jne
in
arpl
pop
les
mov
mov
push
inc
mov
in
mov
mov
jnp
and
pop
les
cld
hlt
imul
shrl
jmp
dec
gs
cli
pop
dec
ja
push
cmp
cmp
mov
clc
loope
adc
sbb
and
mov
in
adc
xchg
adc
lods
push
xlat
lods
sub
fsubrs
pop
adc
adc
xchg
xchg
sarb
jbe
cmpxchg
aam
xor
cwtl
ja
sbb
ret
adc
fisubrl
clc
or
push
mov
lahf
add
fnsave
push
inc
shrb
mov
xchg
cmp
fwait
pop
in
and
dec
xor
ja
fisttpl
shrb
adc
pop
inc
sub
pop
xor
mov
mov
pop
cltd
stos
sbb
xchg
xor
das
sar
sarb
std
aas
mov
fwait
cltd
and
adc
adc
ficomps
sbb
jo
dec
sarb
insl
xchg
bound
push
mov
sub
lcall
cmc
ss
mov
cmpsl
jge
pop
mov
jae
or
leave
add
inc
cmp
mov
repnz
insl
orl
lea
pop
fidivs
inc
addr16
sub
mov
lea
sbb
mov
mov
movl
mov
lret
popa
sbb
and
ds
xchg
mov
ror
repnz
adc
mov
pop
lahf
xor
adc
out
jnp
cltd
jecxz
inc
ficompl
outsb
cmp
pusha
icebp
inc
sbb
mov
stos
inc
add
nop
stos
ja
mov
fstp
sti
mov
and
les
dec
shlb
sahf
shlb
inc
jns
call
lods
fmuls
out
dec
cmp
inc
faddl
ret
mov
adc
lret
jb
push
pop
mov
jb
scas
pop
lret
xchg
mov
inc
mov
mov
add
mov
pop
lods
and
movsb
sub
xchg
add
and
dec
movsb
pop
sbb
and
addb
adc
pop
jmp
gs
add
lds
sahf
lret
ja
pop
call
in
insb
cs
mov
cltd
jb
jecxz
ss
add
outsb
push
pop
push
pop
mov
push
jl
and
imul
mov
jae
insl
dec
mov
je
sti
xchg
lret
push
test
shl
cmp
pushf
es
dec
add
and
cmp
shrb
inc
enter
movsl
loopne
shll
jp
out
xchg
ret
mov
mov
adc
and
push
jns
mov
stos
pop
sbb
adc
jge
lds
xchg
loop
adc
mov
cmpsb
call
mov
movsl
mov
pushf
test
push
mov
xor
mov
dec
aas
mov
dec
loopne
xchg
cmpsl
mov
cmpsl
cmp
inc
and
push
jmp
sar
call
sub
test
jne
dec
aam
leave
into
es
mov
xchg
dec
nop
fsts
mov
push
jecxz
call
inc
jno
fidivrs
pop
xchg
mov
call
adc
test
sbb
in
mov
sbb
inc
out
clc
ds
and
cmp
daa
fmul
dec
mov
jmp
add
push
ret
mov
imul
out
add
jnp
lock
repz
idiv
mov
push
repnz
data16
xchg
mov
sti
dec
xchg
adcl
sti
subl
jle
std
loop
xor
inc
sbb
loop
rolb
imul
fisubs
push
inc
mov
into
cmpsl
or
sub
outsb
jne
gs
rolb
and
imul
push
push
out
mov
ret
out
and
mov
repz
frstor
xchg
xor
loope
aaa
mov
fisubs
mov
arpl
lods
in
xchg
and
jecxz
fdiv
les
mov
add
pop
and
dec
test
xchg
push
or
dec
or
pusha
clc
ss
cld
inc
lods
in
int3
adc
lods
dec
adc
ljmp
dec
xor
push
push
ja
into
loope
pop
rcl
push
shlb
icebp
lods
push
cmp
es
dec
xor
xchg
out
xchg
mov
outsl
inc
mov
lods
xchg
mov
movsb
scas
insl
addl
lds
dec
inc
out
sbb
andb
outsl
gs
ljmp
dec
icebp
rorb
popa
cmpl
loope
push
in
mov
xchg
addl
negb
adc
cs
mov
jmp
jle
mov
inc
add
shl
adc
arpl
mov
add
xor
loop
shrb
stc
mov
jecxz,pn
mov
push
adc
rorb
sbb
repz
loope
test
and
mov
rcrb
jle
sub
and
movb
jae
es
mov
movl
insl
sbb
push
xchg
fmull
jnp
sub
sub
inc
popf
cmovnp
int
cmp
cmp
mov
inc
pop
xor
or
mov
rcl
addr16
jmp
jo
lea
or
inc
jle
jp
mov
and
xchg
xlat
pop
cld
mov
add
out
sub
xchg
data16
xchg
gs
stc
rolb
xor
pop
addl
fidivrs
loopne
nop
std
cli
mov
sahf
les
xor
or
jp
out
rcr
dec
or
cli
push
lcall
mov
sti
rolb
xchg
mov
in
mov
mov
mov
lods
addl
mov
or
or
and
aas
jge
sbb
movsb
test
jnp
xchg
sti
loop
and
jne
xchg
cld
dec
add
inc
jle
xchg
mov
xchg
movsb
cld
jo
jl
pop
test
sub
dec
xchg
fidivrs
out
jb
jns
mov
iret
lret
test
sbb
push
cmp
out
or
dec
xor
or
or
stos
push
outsl
pusha
and
jo
out
and
mov
lods
xchg
pop
lods
mov
or
sbb
xchg
sub
rcrb
jnp
lret
inc
fisubrs
les
notl
add
cmpsb
sti
adc
jae
in
inc
lds
pop
xor
cld
stos
sarb
or
fisubrs
sbb
gs
les
cmpsb
mov
sarb
push
dec
mov
mov
std
test
int
dec
sahf
stc
lock
sbb
cmpl
and
and
divl
jecxz
shrb
cmc
hlt
lcall
fdivs
and
mov
xor
sub
pop
loop
add
jb
iret
fwait
mov
rolb
repnz
xlat
xchg
jns
xor
jae
lret
mov
cmp
jbe
scas
add
mov
out
adc
cmpsb
ffreep
cmp
push
xchg
sbb
jo,pn
sbb
sbbl
negl
fincstp
les
daa
inc
mov
scas
fbstp
xor
xchg
cs
jb
xlat
cmp
outsb
orl
rolb
les
outsl
lods
mov
shrb
cmp
cmp
xor
nop
cltd
adc
adc
sub
or
add
aad
mov
mov
xor
mov
aaa
cwtl
mov
xorl
add
jno
and
mov
sub
mov
or
shlb
dec
les
push
out
sub
mov
sbb
ja
and
adc
cmpsl
push
mov
xor
ffree
and
jmp
mov
mov
cmc
push
shlb
adc
mov
mov
pusha
cmpsl
pop
mov
and
mov
mov
and
icebp
or
xor
popf
rcrb
dec
sub
out
pop
push
jb
dec
mov
xchg
ret
stos
xchg
aas
jb
test
lock
xchg
imul
ret
cmpsl
adc
test
mov
mov
cli
and
dec
hlt
rcrb
sbb
adc
dec
aas
fldenv
sbb
and
jmp
scas
fiadds
sti
in
loop
push
lods
lcall
mov
and
scas
or
or
test
mov
or
test
push
movsl
jmp
mov
imul
xchg
test
mov
aas
cmp
sbb
in
jecxz
fcoms
and
xor
add
xor
push
sub
dec
lock
sbb
jne
cmpsl
sbb
js
popa
pop
lea
or
test
mov
out
mov
pop
in
pop
adc
lret
jb
sbb
push
sbb
call
jns
mov
rcrl
mov
pop
mov
mov
mov
push
lret
mov
int3
jae
jno
inc
popa
jae
fbld
popf
mov
fucomip
jbe
fildl
and
add
scas
rcrb
push
test
cmp
mov
cmp
jnp
or
in
orb
outsl
xor
rcrb
mov
jl
scas
mov
fisttpl
daa
stc
lahf
notb
imul
rolb
jg
out
pushf
sbb
cmp
fistps
int3
pop
fs
xchg
or
cld
fcomi
scas
adc
fcomi
les
outsl
stc
fs
cmc
mov
iret
pop
add
shrl
mov
fnstsw
sub
sahf
popa
push
lahf
arpl
xchg
fcmovb
cmpl
pop
xor
imul
mov
mov
test
push
sbb
add
xchg
clc
lea
sub
lcall
jge
push
paddq
push
imul
ljmp
xchg
fistpll
jb
fwait
push
sti
test
sbb
mov
jg
es
push
rolb
mov
pop
and
rclb
and
fstpl
lcall
mov
orl
xchg
dec
sbb
aad
aad
xor
xor
xchg
mov
lea
filds
inc
vshufps
jo
mov
stos
or
mov
pusha
pop
imul
fisubrs
jae
add
cmpsb
fwait
xor
xchg
inc
lea
fcmovnu
mov
lock
mov
jne
push
cmpsl
test
sbb
jmp
test
adc
mov
movsl
icebp
fiaddl
gs
stc
mov
dec
mov
testl
ror
addr16
fisttpll
push
lret
cmp
inc
in
mov
cli
arpl
jg
lods
rolb
xorb
loop
push
rcll
xchg
mov
jle
fistl
inc
push
xor
ja
in
sar
stos
shlb
test
dec
icebp
rorb
movsl
lods
test
xor
sbb
shl
mov
test
icebp
fisttps
mov
mov
sahf
cld
mov
or
pop
cli
int3
add
jecxz
mov
push
xor
mov
out
ss
or
divb
aad
inc
mov
loopne
scas
js
jo
orl
push
inc
les
das
into
test
mov
les
push
sbb
push
cmpsb
rolb
mov
mov
test
adc
xlat
mov
mov
or
add
mov
in
lea
inc
pop
jmp
dec
xchg
push
sub
xchg
shlb
test
hlt
or
mov
les
sbb
imul
jne
clc
jp
lods
or
sbb
repz
rcll
mov
mov
addr16
sbb
jp
mov
xchg
mov
pop
movsb
add
jge
or
jecxz
mov
xor
insb
cmp
arpl
adc
jp
add
les
xchg
les
jecxz
mov
cmc
push
mov
sbb
or
popa
sub
adc
mov
sarl
sahf
pop
sbbb
mov
jnp
inc
cmpsl
xchg
jo
jae
mov
mov
and
popa
add
out
lcall
push
cmpsl
faddl
mov
loope
mov
mov
ret
mov
test
adc
pop
mov
dec
add
testb
sub
xchg
xor
xchg
outsl
add
cwtl
ret
jns
jo
sub
cmp
out
mov
dec
inc
ret
les
test
jge
push
add
pop
shll
adc
shl
add
push
popf
pop
or
in
loope
mov
cmp
testl
push
add
shl
or
cwtl
fldl
or
into
push
dec
push
inc
in
movsl
sbb
mov
cmp
mov
push
bound
sbb
loopne
cmc
or
adc
lcall
arpl
push
mov
fcomps
mov
adc
pushl
add
mov
fiadds
aad
into
push
inc
pop
fldl
ja
sti
insl
fstl
adc
inc
inc
sti
jnp
sti
jge
jp
mov
cmp
pop
mov
ret
lret
inc
leave
loop
xchg
jns
inc
jbe
iret
mov
lock
data16
jl
filds
pop
les
sbb
inc
std
push
xor
or
push
add
cmpsl
and
and
sbb
mov
sbbl
rcr
xchg
sbb
aaa
jmp
addr16
pop
mov
ljmp
xchg
out
cmp
sbb
mov
jge
jnp
aas
scas
ret
mov
push
pop
rorb
fs
ss
jo
lods
iret
ja
es
jno
cmp
mov
std
mov
push
or
cmp
cld
xor
repnz
or
cmc
pop
fldt
xlat
shrb
iret
dec
lods
sub
sub
dec
or
inc
iret
ljmp
xchg
in
jne
and
ret
or
sbb
shlb
dec
or
pop
push
adc
and
mov
inc
xor
push
ret
fdivp
push
cld
aam
xchg
or
and
jmp
es
jecxz
mov
sub
jo
fiadds
ja
sub
or
xor
xchg
rcrb
mov
or
daa
xchg
dec
fsts
jmp
outsl
mov
dec
call
shll
daa
sub
mov
mov
jno
pushf
lea
or
xchg
imul
xorb
es
iret
ljmp
xor
sub
movsb
sub
inc
inc
xchg
inc
or
cmpl
nop
jle
push
mov
or
sti
cli
mov
js
adc
and
mov
out
xchg
sbb
pop
fidivs
stos
or
or
bound
or
push
add
fwait
mov
or
lock
idivb
xchg
lret
stc
inc
movsl
call
or
inc
nop
sbb
pop
push
and
mull
fidivrs
mov
push
push
mov
add
lret
dec
test
and
pusha
aas
lea
test
movsb
dec
or
mov
adc
push
ficompl
ret
pop
ja
shlb
push
push
push
testb
push
iret
ja
clc
or
ljmp
sub
daa
icebp
call
popa
jnp
loop
dec
xchg
and
fildll
out
std
add
mov
lds
lahf
aaa
int3
mov
or
arpl
pop
pop
add
movsb
faddl
push
add
or
mov
loop
adcl
mov
aas
stc
fstp
jnp
or
lret
or
xchg
jge
jp
pop
inc
cmp
ret
jno
sahf
lods
adc
gs
out
adc
add
xchg
pop
cmp
lcall
push
and
and
divb
nop
dec
pop
jle,pt
add
addl
jmp
sub
inc
dec
ret
inc
or
into
cwtl
mov
and
jecxz
or
lret
or
cmc
repz
or
ret
inc
or
lret
mov
aad
add
add
pop
imul
lahf
push
fnstsw
or
cmp
mov
sbb
adc
sti
push
xor
scas
decl
cmp
pushf
stos
mov
or
push
inc
stc
test
and
and
imul
mov
mov
cmp
cs
or
andl
test
sub
movsl
shll
add
add
adc
cli
jl
mov
xchg
or
rolb
mov
das
movsb
mov
inc
add
or
cmp
fs
xchg
jbe
pop
jp
or
xchg
out
out
jmp
andb
or
mov
jno
adc
jmp
xchg
xchg
push
push
mul
or
pop
call
xchg
lods
xor
test
lea
jbe
in
mov
push
cmp
sub
mov
fsubrp
sti
xchg
pop
fisttpl
xchg
lret
add
push
leave
testl
mov
jmp
sub
jae
fs
lods
imul
mov
addr16
iret
or
mov
pop
fsubs
add
add
and
inc
in
dec
push
sbb
mov
daa
add
push
addps
out
cmpb
and
add
scas
or
pop
jle
inc
fsubrl
mov
xchg
dec
bound
or
sub
orl
movsl
mov
mov
iret
outsb
data16
mov
jecxz
or
adc
push
sahf
or
push
jp
loopne
andb
sub
adc
pop
pushf
mov
insl
mov
stc
out
or
push
pop
add
out
push
pushf
mov
scas
or
outsb
pop
fstps
lret
out
cs
push
rorb
mov
outsb
jg
and
xchg
add
test
sbbb
or
sbb
dec
inc
loop
pop
int
cwtl
or
xor
mov
rol
aaa
daa
scas
push
bound
adc
out
pop
js
arpl
and
push
iret
aam
push
pusha
sbb
mov
adc
or
or
inc
push
and
in
push
xor
add
pop
jecxz
jb
add
daa
test
mov
add
mov
adc
or
xchg
dec
pop
jg
pop
fists
dec
sahf
lcall
std
cmp
xor
jns
or
popf
int
sub
or
scas
push
xor
or
cmc
push
imul
orb
mov
mov
push
int
daa
xchg
out
roll
add
fwait
add
and
popa
cmp
movsl
or
aaa
adc
shlb
xor
jecxz
adc
mov
or
out
or
or
mov
add
ret
mov
cmp
add
jae
push
das
movsl
inc
or
aam
std
test
movsb
cmpsb
xor
adc
or
pandn
sahf
ja
andl
loop
mov
sbb
int
push
mov
jns
push
push
ja
arpl
andl
lds
adc
sub
js
addr16
or
nop
xchg
adc
mov
stc
scas
and
sub
jnp
pop
or
test
or
push
out
aaa
xor
adc
cmp
mov
mov
push
fimull
adc
or
or
shl
bound
loope
mov
mov
lahf
or
push
ret
jno
lret
rclb
push
add
mov
data16
sbb
lret
lcall
or
test
add
mov
dec
inc
and
bound
xchg
adc
add
mov
mov
push
xor
push
stos
addr16
or
or
mov
imul
dec
insb
mov
lret
adc
lods
clc
or
mov
int
outsl
adcb
or
movsl
jne
rcrl
mov
or
aad
xor
or
xor
dec
or
lods
sub
subb
fwait
hlt
inc
xor
divb
mov
xchg
add
cmp
or
fsubrl
das
xchg
sarl
setns
or
and
cmp
xchg
xor
or
jmp
mov
sub
in
out
movsb
out
lock
hlt
add
sbb
mov
pop
mov
mov
testl
std
lcall
or
ret
paddsb
hlt
xor
xor
pop
cwtl
ds
add
leave
jp
sub
mov
cmpsl
out
jmp
pop
dec
or
pop
adc
add
mov
call
sbb
mov
shlb
fisubl
lea
scas
mov
aas
mov
arpl
and
dec
loop
or
push
mov
rolb
in
lock
push
mov
cmp
sti
pushw
mov
ret
jno
movb
pop
dec
or
adcl
bound
or
hlt
cli
mov
lea
or
sbb
dec
ds
cs
lret
jnp
pop
or
mov
in
out
jg
push
xor
sub
jae
cmc
lcall
or
pusha
mov
iret
aaa
icebp
outsb
pushf
sahf
add
push
mov
or
ds
or
icebp
sub
xor
imull
leave
or
add
out
jbe
filds
jmp
lss
sahf
sbb
or
xor
dec
pop
jo
inc
insb
or
int
std
pop
outsl
stos
mov
add
aam
xchg
out
mov
push
adc
fiadds
in
lcall
push
insl
mov
arpl
lods
adc
or
or
pop
fidivrl
or
xchg
cmp
mov
xchg
test
pop
dec
outsl
or
mov
lret
push
test
push
les
add
stos
mov
aam
rolb
mov
orl
pop
pop
sbbl
inc
enter
mov
sub
mov
mov
or
and
insl
xor
add
aad
les
data16
popa
movsl
stos
cmpsb
pop
adc
js
mov
push
inc
into
outsl
cli
jns
imul
or
dec
mov
mov
scas
mov
dec
add
ret
int
xor
orl
nop
or
les
cld
push
jle
or
and
bound
cmpsl
sarl
xor
jle
mov
pop
repz
push
jns
xchg
or
lods
pop
adc
mov
imul
test
jmp
pop
inc
aas
jle
mov
sbb
rcr
mov
mov
sar
inc
pop
add
roll
aaa
or
and
xchg
pop
jp
bound
mov
outsl
mov
and
and
mov
xchg
add
daa
push
push
or
mov
hlt
inc
dec
push
hlt
inc
mov
cli
sub
push
sub
pop
xor
mov
lock
cmc
sbb
out
stc
jg
rcr
push
lods
mov
mov
and
mov
xor
ljmp
lea
adc
xlat
add
mov
mov
push
hlt
jg
ret
adc
xor
sbb
out
xchg
inc
test
jno
pop
push
loop
inc
lahf
shlb
or
dec
adc
int3
lea
or
cwtl
xor
sbb
jmp
loope
pop
ret
mov
jl
pop
or
mov
cmp
sub
sub
dec
jns
imull
fisttpll
es
das
xchg
data16
pop
sar
ss
mov
push
adc
dec
mov
mov
popa
aad
mov
stos
adc
icebp
movsl
or
aaa
pop
aas
add
push
pop
bnd
testl
adc
sbb
sbb
lcall
stos
mov
inc
rcrb
rolb
popl
jo
sbb
rcrb
ljmp
pop
fwait
sbb
fbld
add
incl
loopne
test
shrb
jle
mov
popf
lret
fs
adc
jo
inc
jo
push
les
icebp
lock
pop
mov
mov
test
add
push
les
movl
dec
notl
pop
popa
inc
out
repnz
je
call
jns
inc
shll
pop
aas
popa
outsl
push
and
fisttpll
fisubrs
test
scas
mov
sub
push
inc
cmpl
popf
jnp
jl
out
daa
mov
mov
outsl
add
mov
xor
cmp
or
add
mov
xor
adc
jno
jns
into
hlt
mov
iret
pop
aad
push
jge
loopne
xor
push
mov
inc
sbb
insb
jno
adc
jne
mov
sub
jnp
xchg
roll
inc
clc
adc
pop
repnz
ret
push
mov
mov
cmp
add
rol
adc
mov
dec
push
outsl
jno
add
sub
and
xchg
mov
in
cmpsl
add
fcmovnb
xor
out
pop
pop
xchg
jns
rcll
or
jg
and
cmp
loope
inc
sbb
mov
adc
push
dec
hlt
mov
cwtl
xor
cld
and
gs
pop
adc
mov
les
rclb
jo
adc
aam
outsb
lahf
or
lea
sub
mov
add
into
cmpsl
adc
hlt
ret
add
pop
mov
xchg
out
jae
hlt
lea
jo
aaa
rcrb
es
push
shlb
pop
cmp
fisttpll
sbb
mov
mov
cmc
mov
aad
into
adc
push
pop
filds
iret
jae
arpl
or
sbb
push
or
test
insb
xchg
sbb
inc
mov
inc
xchg
lods
stos
test
cmpsl
xchg
nop
loop
mov
xor
xor
fstl
in
stos
mov
dec
add
repnz
inc
inc
sub
cs
sub
jmp
sub
jnp
addr16
pop
movsl
inc
mov
pop
lods
add
fucomip
fldcw
mov
pop
mov
repnz
lea
gs
stc
add
sub
mov
test
push
fdivrl
ret
xor
es
call
cmc
push
push
jge
lds
or
xchg
and
sahf
sub
push
pop
mov
out
mov
adcl
mov
shll
fnstenv
scas
shl
fsubrs
xabort
add
xor
mov
or
sub
or
pop
adc
out
sbb
xor
out
mov
adc
popf
inc
sbb
cmp
xchg
cs
and
mov
shrb
jo
out
cmpsb
shll
loopne
lods
icebp
mov
jl
dec
fdivrs
push
cmc
ret
repnz
daa
xchg
insl
aaa
xchg
aas
add
or
cmp
and
les
lcall
mov
cld
scas
out
stos
push
aaa
sar
inc
call
jecxz
inc
cmp
sub
fsubrl
sbb
test
xlat
push
ja
fisubrs
outsb
fs
out
mov
mov
fnstsw
sbb
aaa
movsl
xchg
adc
cmc
and
cmpsl
aad
push
outsb
stc
inc
mov
popf
mov
mov
mov
sub
ja
jp
movsl
or
out
test
fisubs
mov
mov
cmp
mov
mov
incl
mov
cmp
nop
icebp
repnz
divl
je
shl
and
test
add
sahf
adc
and
pop
mov
sbb
pop
mov
xabort
push
stos
mov
xor
dec
lret
xchg
fisubrl
mulb
xchg
data16
test
adcl
sbb
leave
sub
pusha
push
push
faddl
les
mov
stos
shl
pop
adc
mov
add
scas
xchg
or
arpl
sti
test
add
dec
popa
fcomp
or
sbbb
lret
call
sbb
pop
push
mov
fadd
or
notl
push
lds
jp
sbb
test
xchg
cmp
jb
fs
call
aam
mov
mov
ret
test
add
inc
fdivrl
dec
rcrb
lods
pushf
mov
clc
sar
fsubr
or
movsl
mov
daa
sti
in
pop
or
xor
push
ja
sub
les
rcll
cmpl
or
dec
push
sbb
inc
jl
jae
push
xchg
imul
or
dec
sbb
aaa
into
ss
add
test
arpl
stos
sti
mov
push
lods
in
dec
add
hlt
std
fisttpll
xor
add
les
bound
insb
lock
xor
daa
xlat
in
sub
cmp
adc
lock
push
and
stos
cmp
cmp
push
or
cld
pop
loop
es
fiadds
in
sti
and
mov
sub
jl
jae
cmp
xor
push
push
andl
pop
les
jle
push
pop
in
lcall
pushf
adc
cmc
lods
les
or
les
mov
xchg
pusha
xor
inc
mov
jge
icebp
jecxz
std
and
mov
inc
pop
outsb
mov
mov
notb
shrl
sub
js
iret
jge
stos
jns
add
adc
cmpsb
fists
mov
iret
fisubrs
jmp
enter
cmc
jb
adc
into
popa
std
and
sbb
sub
call
mov
cltd
fistl
mov
dec
mov
ret
add
mov
adc
push
sub
xchg
xchg
adc
pop
pop
mov
fnstenv
packssdw
out
out
dec
icebp
and
mov
ret
adc
jne
loope
jmp
stos
dec
mov
loop
std
in
jnp
jge
sti
rclb
nop
lods
in
cmp
add
dec
jle
cmpsb
inc
pop
stc
int3
jne
addr16
push
addl
cs
add
cmc
pop
pusha
cmp
inc
sahf
jns
fabs
movsl
inc
lret
rclb
jmp
push
xorl
jge
mov
cmp
add
mov
adc
pop
dec
xorl
test
xor
mov
or
jno
js
mov
xchg
stc
pop
mov
jmp
bound
dec
xor
pop
call
rol
mov
inc
xchg
clc
push
addr16
in
xchg
pop
xchg
mov
sbb
adc
or
fstps
call
mov
call
push
loop
jle
adc
mov
sti
and
nop
push
lds
dec
cmp
ficomps
add
aad
dec
repnz
and
cmp
pop
adc
daa
shrb
push
or
lock
mov
in
or
ror
push
or
aam
sbb
adc
inc
sub
cltd
subw
xor
inc
xlat
imul
adc
mov
in
push
sbb
sub
aam
sarb
mov
roll
movsl
mov
hlt
jne
lret
leave
xchg
inc
cmp
rorb
fsubp
sbb
fbstp
fildl
fwait
mov
xchg
xchg
cltd
imul
and
adc
add
repnz
ljmp
xchg
shll
adc
dec
pop
cmp
lret
mov
dec
mov
sbb
sub
jmp
mov
and
movsb
cwtl
inc
jg
shll
adc
sti
std
aaa
je
out
mov
sbbl
out
sbb
pop
test
mov
xchg
mov
dec
lea
pushf
sarb
mov
jl
loope
sub
enter
and
test
mov
das
int3
lret
and
cmp
shrb
mov
movsl
add
sub
fidivl
xchg
stc
scas
cmp
jae
enter
test
pusha
push
scas
mov
inc
clc
scas
xchg
lods
inc
inc
or
imul
mov
xchg
std
fnstsw
jnp
xchg
cmp
cmpsb
mov
push
mov
aas
pop
cmp
stc
and
xchg
stos
jp
mov
shlb
fdivl
mov
insb
mov
push
sub
xchg
fstpt
iret
fnstenv
ret
pop
test
or
xchg
out
push
arpl
xor
jno
jno
mov
dec
ja
mov
pop
repz
shlb
add
fisubs
enter
ret
rcrb
xchg
inc
and
dec
inc
or
shr
dec
dec
mov
sbb
mov
imul
into
popa
adc
xchg
clc
adc
mov
jecxz
push
sub
fcompl
mov
xchg
dec
es
fwait
ss
sub
mov
mov
int
je
mov
cmp
push
cs
pop
inc
rcrb
xchg
daa
push
cmp
mov
cmpb
aas
dec
jns
mov
xor
dec
jp
rclb
loop
push
push
and
jae
and
fldl
jne
or
or
int
mov
mov
mov
or
enter
or
in
xchg
mov
ja
cltd
outsb
mov
scas
pinsrw
sti
test
mov
sbb
xor
sbb
mov
les
mov
inc
and
mov
imul
insb
dec
and
cwtl
cmp
add
sub
fildl
lcall
stc
sub
testb
cmc
push
rcr
mov
push
fprem
mov
jnp
add
fdivp
mov
jl
hlt
xchg
insb
or
fstpt
cmpsl
xor
fsts
xchg
xchg
dec
jb
aam
mov
xlat
adc
in
jge
and
mov
lock
dec
test
inc
les
cmp
into
loopne
mov
mov
fucomi
adc
outsb
or
dec
jl
mov
push
roll
jne
or
xor
icebp
imul
addl
subl
jle
jo
fsub
xor
por
fstpl
scas
mov
scas
test
scas
sti
sub
pop
icebp
jle
push
inc
fwait
mov
mov
pop
in
cmp
aad
cmpsb
mov
sub
mov
jecxz
xchg
dec
inc
test
inc
scas
movsl
adc
or
adc
xchg
fwait
xor
daa
ret
sub
jo
sbb
stos
mov
outsl
mov
loopne
jmp
mov
pop
test
fldcw
imul
xchg
pop
jg
dec
and
inc
aas
jno
daa
ds
push
cwtl
jne
movsl
fadd
es
jg
gs
fwait
in
jbe
xlat
sbb
fs
jb
andb
xchg
push
or
shrb
cmc
pop
stos
add
mov
jmp
data16
mov
fnstcw
mov
aam
dec
mov
add
adc
mov
jno
jg
push
jo
es
and
jb
cmp
mov
int3
xchg
adc
fiadds
cmp
pushf
mov
jbe
adc
data16
repz
add
inc
add
ret
stos
cmpsb
jmp
sub
dec
mov
aas
xchg
ret
mov
imul
ficoml
loope
mull
mov
lret
dec
cmp
repz
add
push
xor
inc
pop
mov
les
or
push
lcall
add
mov
xor
bound
inc
mov
xchg
add
arpl
pop
movsl
out
add
lock
iret
fcmovne
lock
adc
loope
mov
inc
pop
cld
mov
sti
xlat
xor
lcall
mov
pop
mov
sub
mov
add
sbb
outsl
cmp
ja
pop
insl
pop
mov
js
into
xchg
aad
and
lahf
enter
mov
icebp
cld
insl
rorb
sarb
mov
push
xchg
dec
xor
or
mov
jo
icebp
sbb
pop
adc
in
push
cmp
scas
adc
jae
jnp
push
sbb
ss
push
inc
test
inc
test
mov
popa
inc
add
stos
sbb
inc
es
in
lahf
out
aaa
ret
xchg
fwait
inc
pusha
les
ret
mov
shld
fcom
mov
cmp
fisubrl
add
sub
stc
sub
fcmovb
lcall
lret
xor
ss
mov
mov
inc
dec
scas
sub
jecxz
dec
inc
push
mov
inc
xor
rorb
cmp
mov
pop
mov
dec
cmp
mov
push
in
xchg
test
and
or
shll
adc
push
lock
sub
xchg
mov
dec
cmp
pushf
sbb
push
mov
xor
inc
jnp
scas
add
dec
movsb
adc
pop
lods
push
add
push
xor
mov
ret
mov
mov
stos
and
or
jl
dec
and
mov
mov
pusha
sahf
rclb
jp
cmp
mov
adc
xchg
jae
andl
cmpsl
addb
js
lret
leave
inc
pop
orb
loope
sbb
fcompl
adc
stos
cmc
ja
sbb
clc
and
insl
xchg
insb
cmp
addl
xchg
add
inc
dec
jne
rcrb
mov
les
rclb
jle
push
add
jnp
sbb
pop
jecxz
cmp
jmp
or
and
push
dec
scas
mov
loope
adc
sub
mov
jp
add
loop
cmpsl
ljmp
sbb
push
cmp
add
fdivrp
push
add
in
xchg
outsl
insb
or
test
daa
cwtl
add
xor
sub
cmpsb
out
lcall
inc
loop
add
faddp
mov
push
popa
les
sbb
pop
fidivl
add
mov
jno
bound
and
mov
inc
mov
es
testl
mov
mov
pop
mov
out
and
lahf
pop
adc
jl
clc
adc
inc
push
xchg
fistl
enter
dec
dec
loopne
sub
sub
rol
insl
shl
popf
add
iret
dec
adc
xor
pop
xchg
mov
daa
jle
pop
cmpsl
les
dec
ss
cmp
pop
sub
mov
dec
adc
test
push
push
and
mov
adc
mov
dec
mov
pop
outsl
pop
pop
mov
add
jle
mov
stc
xchg
inc
pop
or
push
addb
mov
sub
or
and
add
movsl
stos
cli
shl
sti
cmp
or
sub
adcb
jle
lds
jne
jae
insl
xchg
pop
sbb
cltd
imul
adc
pop
mov
je
test
rclb
jl
cld
cmc
repz
decl
mov
sahf
daa
ret
adc
jmp
xchg
mov
rcrl
hlt
in
sti
push
mov
test
je
pop
stos
xor
xor
pop
and
dec
mov
shll
jns
xor
push
rcrb
shrb
push
cmpsb
scas
mov
and
mov
in
sarb
push
ss
mov
mov
pop
sub
lea
fimuls
out
aam
bound
jmp
cld
and
ror
popf
xor
push
aad
scas
stos
jae
lds
push
daa
fistps
pop
test
fst
cmpl
daa
jnp
test
pop
mov
adc
mov
or
mov
dec
cli
bound
shrb
pop
call
mov
ja
add
mov
push
jns
mov
fs
dec
dec
inc
mov
in
loope
sub
adc
lret
lds
adc
pop
rorb
test
pop
lods
mov
add
push
fadds
rcrl
rcl
dec
mov
mov
dec
incb
rorb
cs
lret
cmp
mov
pop
add
mov
push
cmc
rcl
adc
xchg
in
fimuls
xchg
sahf
inc
pusha
dec
pop
dec
imul
in
ljmp
fistps
jecxz
adc
sti
les
cmpsl
add
sub
inc
jae
dec
imull
push
addl
fldl
int
cmp
push
aad
test
rorb
cmc
pusha
mov
outsb
xor
add
adc
sub
inc
cli
jae
mov
movb
mov
or
fdivl
lahf
mov
pop
gs
stos
rorb
loopne
sub
cmp
rol
gs
in
pop
mov
push
mov
add
bound
and
stos
pop
dec
jle
shlb
out
mov
add
cwtl
xchg
imul
sub
ss
lods
or
lret
int
shrl
shlb
mov
or
add
xor
or
cld
dec
sbb
fsubr
rcl
lds
arpl
stos
repz
mov
push
pop
pusha
sti
mov
pop
push
add
xlat
cwtl
fdivr
jle
xor
lods
or
rolb
jg
add
imul
mov
sbbl
rcrl
mov
repz
mov
fistl
lahf
mov
dec
and
or
cli
jnp
mov
out
sub
rep
pop
adc
ret
fsub
into
add
and
push
push
lds
sub
outsl
add
pop
insb
dec
push
push
movl
pop
movsb
push
insb
out
mov
rclb
add
das
cmp
jns
test
push
inc
sbb
adc
sahf
shll
adc
nop
xlat
mov
pop
notb
adc
xor
and
pushf
mov
adc
jmp
sbb
cs
sub
loopne
jae
jnp
aas
xor
stos
push
adc
in
and
sub
or
push
sub
into
stos
adc
lea
jmp
pop
cmp
fimuls
adc
push
sbb
fildl
jno
ffreep
and
adc
xchg
sti
and
mov
push
out
imul
mov
inc
jae
in
inc
in
fnstcw
lods
stos
jl
fcomi
mov
inc
xchg
aam
andb
xor
pop
jae
mov
add
pop
das
imul
gs
mov
popa
jbe
dec
rol
xlat
les
xor
cltd
scas
out
nop
or
sub
xchg
popa
loopne
or
cmp
out
stos
lcall
jo
nop
insl
imul
cli
jp
jnp
pop
data16
cwtl
iret
jne
push
les
test
inc
ror
fidivrl
and
mov
or
mov
jge
fisubrs
push
cmpsb
sti
icebp
clc
mov
fldz
shl
les
push
dec
out
cs
or
sti
mov
loop
jecxz
shl
push
incb
push
fdivl
test
test
ljmp
cmp
mov
imul
jmp
out
sub
cmp
sbb
push
jmp
lock
fstpl
adc
xchg
sbb
cld
pop
and
jmp
mov
scas
add
scas
fnstsw
sahf
xor
mov
push
mov
outsl
sub
adc
imul
sahf
push
fmul
repz
xor
jb
in
movsb
add
subl
jmp
lret
mov
cmp
js
push
mov
shl
out
aas
cmp
or
mov
pop
jbe
and
js
fwait
mov
dec
jno
mov
pop
data16
hlt
sub
jecxz
jmp
rcll
push
xor
loopne
mov
mov
inc
pop
jo
test
and
jns
outsl
inc
mulb
sub
or
lret
xchg
inc
cltd
sbb
rcrb
std
mov
jbe
arpl
sbb
out
adc
mov
shlb
imul
arpl
mov
xor
fcompl
adc
sub
into
lods
test
loop
add
xchg
addr16
sahf
add
dec
test
add
fabs
dec
push
test
fidivs
push
orb
shrb
lock
or
mov
adc
in
out
cmp
movsb
mov
dec
aam
push
mov
adc
daa
inc
xchg
movsb
inc
sub
fisubs
aad
push
jae
mov
adc
mov
or
push
pop
and
sbb
ja
jg
or
jmp
sub
dec
mov
lods
sbb
pop
xchg
add
sbb
cmpsb
daa
pop
mov
xchg
outsb
idiv
fwait
push
gs
mov
pop
mulb
in
and
imul
aas
adc
hlt
rorb
test
lods
es
idiv
cltd
adc
imull
mov
aas
pop
mov
stc
push
jo
add
xchg
filds
inc
shll
scas
xor
mov
mov
xlat
inc
outsl
ret
mov
push
and
inc
xchg
mov
dec
pop
cmp
sahf
xlat
js
and
jp
gs
scas
out
or
xchg
shlb
lds
into
sbb
data16
mov
mov
dec
push
pop
mov
inc
shll
outsl
mov
jo
push
push
hlt
lea
push
mov
pushf
sub
add
adc
and
jg
packsswb
daa
add
xor
jp
xchg
inc
inc
add
xor
dec
mov
mov
sbb
adc
rorb
repnz
xchg
pop
cwtl
dec
inc
push
in
jp
cmp
xchg
cmp
push
shll
leave
out
inc
mov
cltd
sbb
aam
pop
ja
mov
sbb
sub
mov
sbb
sti
cmpsb
data16
fistps
xchg
and
decl
pop
fimuls
jl
shll
mov
test
or
push
mov
or
cli
out
in
cmp
shlb
xchg
sahf
mov
add
in
mov
inc
or
rolb
push
dec
and
pop
xor
std
adc
in
inc
aam
inc
test
sub
inc
or
mov
in
jb
or
rorb
repnz
ret
cwtl
push
pop
fcoml
repnz
in
dec
mov
scas
adc
repz
jmp
aas
nop
mov
dec
insl
xchg
jne
stos
loop
hlt
in
push
ss
adc
int
incb
mov
cs
test
roll
mov
cmp
fsqrt
sub
sbb
push
mov
dec
xor
in
cld
mov
data16
stc
out
mov
test
jae
xchg
in
sti
dec
cmp
movsl
cmp
cmc
push
cmpsl
mov
dec
mov
aaa
pop
jbe
ja
lret
sbb
push
negb
add
xor
xchg
mov
mov
dec
bound
sub
sbb
scas
mov
scas
jge
repz
lcall
pop
push
xchg
test
inc
fidivs
add
les
jno
push
dec
jl
lret
mov
jecxz
xchg
jne
or
addb
mov
adc
insb
imull
jmp
movl
aas
pop
sbb
inc
mov
or
stos
push
adc
rclb
mov
xor
pushf
inc
in
sbb
or
and
aad
iret
test
xlat
subb
scas
pop
stos
sbb
push
pop
xchg
cmp
mov
pop
mov
adcb
imul
out
add
mov
and
es
mov
fisubrl
stos
daa
or
notb
mov
fwait
mov
mov
lret
mov
mov
xchg
test
and
cmp
push
nop
dec
push
mov
addr16
repz
lds
cmpsl
cmp
cld
les
jnp
out
cmp
mov
std
mov
pop
mov
or
xor
scas
sahf
stc
or
mov
mov
outsl
cmp
ljmp
inc
cmpsb
or
mov
pop
scas
mov
pusha
mov
mov
mov
jmp
shll
sahf
fmuls
das
sub
lahf
adc
loop
dec
dec
insl
mov
data16
add
mull
sbb
adc
mov
cmp
cmc
pop
pop
xor
movsb
jnp
or
std
jne
lcall
popa
mov
push
lods
repnz
mov
dec
xchg
sub
mov
movsl
rcl
xchg
mov
mov
pop
dec
jb
andl
imul
sbb
jecxz
std
popf
or
inc
lahf
fstps
or
jl
scas
movsl
iret
test
mov
sbb
mov
inc
and
outsl
shlb
or
test
jb
push
xor
cld
mov
mov
les
sub
fcmovu
mov
dec
inc
or
lahf
scas
ret
cld
hlt
mov
mov
addr16
cmp
cmpsl
pop
sbb
int
sbb
out
hlt
mov
mov
pop
jle
push
jle
push
mov
aas
lock
mov
movl
push
jae
bnd
outsl
add
popf
jb
sbb
cld
lods
xchg
mov
loopne
rorl
pop
js
add
pushf
out
lcall
add
enter
push
popl
cmpsl
ja
xchg
loope
arpl
loope
mov
sti
push
lret
gs
pop
out
xlat
repz
mov
push
adc
insl
lret
jle
ljmp
mov
xor
mov
cmp
and
repz
or
inc
cmp
sub
gs
out
insl
orl
dec
mov
cs
sub
into
rolb
pop
sbb
rorb
add
sub
add
fwait
jp
pop
filds
iret
shlb
mov
imulb
xchg
sbb
decl
sbb
movsb
cs
mov
inc
fiadds
lea
jbe
shrb
arpl
xchg
sub
loop
data16
nop
cmpsb
sahf
les
fisubs
mov
xchg
sbb
lds
les
cmpl
out
jne
push
ja
dec
shrb
cmpl
rcrb
movb
leave
aaa
mov
and
mov
out
xor
test
pop
sahf
xchg
cmp
div
notl
xchg
jne
shrb
test
loopne
outsl
fcmovnu
divl
add
dec
aaa
popa
or
pop
loope
xor
xlat
les
adc
fs
lods
mov
das
dec
movsl
movsb
out
add
xchg
std
dec
jnp
js
pusha
jecxz
lods
mov
sbb
mov
in
xor
cmp
movsb
cs
sahf
and
pop
cld
pop
push
pop
sahf
jo
aaa
jl
cmpsb
mov
sbb
xchg
mov
fisttps
mov
cmp
sbb
addr16
cmp
fprem1
xchg
jmp
andb
out
shlb
cld
fsubp
outsb
fidivrl
mov
jbe
jae
push
lret
and
or
and
fmuls
mov
mov
add
push
popf
ljmp
inc
dec
lahf
insl
shll
xchg
fmull
outsb
push
jp
sbb
test
ds
xchg
loope
add
lods
xor
jg
sub
scas
mov
fiaddl
or
lea
aas
xchg
xor
sbb
je
loope
mov
mov
dec
inc
inc
repz
movsl
ds
jecxz
and
cmpl
outsb
sahf
mov
or
xor
mov
aad
ja
dec
xorl
inc
pop
sarb
mov
and
push
and
push
adc
sti
les
jg
pop
roll
add
or
mov
shlb
push
mov
aas
mov
cli
push
inc
vaddsubpd
inc
mov
out
mov
push
aaa
std
xor
mov
or
aad
gs
lods
push
lock
scas
stos
xorl
add
sbb
add
and
push
jl
and
shl
movsl
enter
enter
test
leave
inc
aam
jmp
daa
add
stos
sahf
dec
push
inc
popf
mov
shlb
out
aam
jno
mov
fidivs
sahf
jge
push
pop
in
sub
ret
subb
dec
inc
dec
sbb
sti
lret
push
jmp
sbb
sbb
mov
je
xchg
repnz
or
gs
repz
dec
flds
push
sbb
inc
andl
adc
shl
sub
mov
roll
les
push
mov
inc
mov
repnz
aaa
sub
fwait
dec
jne
sti
fisubs
divb
inc
push
mov
sti
les
jae
das
mov
mov
and
push
movsl
stos
pop
addr16
inc
test
popl
loope
rcrb
sbbl
pop
arpl
add
sbb
xor
enter
pop
sbb
fwait
dec
out
cmp
repz
shlb
lock
cltd
jno
xchg
or
mov
sti
jae
je
stos
mov
shlb
xchg
mov
jnp
adc
in
adc
out
movsb
pop
pop
dec
mov
mov
sti
incl
sbbb
loop
mov
mov
cmpsb
movsb
jp
ja
outsl
sarb
lret
jo
cmp
icebp
jae
ret
push
cmp
or
popa
out
mov
cmp
mov
nop
mov
jle
sbb
add
ret
or
repz
adc
mov
xchg
lods
leave
popl
fisubs
cmp
cmp
cmp
sbb
hlt
pop
test
shrb
insb
adc
xchg
lea
mov
push
add
mov
push
fidivl
fisubrs
iret
aaa
adc
jbe
lock
pop
cmp
add
mov
mov
subl
imul
adc
mov
les
lods
dec
sbb
inc
xor
mov
addl
jge
push
xchg
cli
fcmovbe
out
loop
stc
push
jne
and
addr16
ret
sbb
fisubs
jo
outsl
lret
mov
cmp
dec
cld
xor
pop
test
adc
pushf
xor
add
jle
fdivp
cmpsl
push
dec
mov
xor
xchg
mov
xchg
sahf
aam
lcall
mov
mul
sbb
call
mov
pop
test
mov
sbb
or
cmc
int
cmp
shl
sbb
es
mov
loope
sub
pop
fisttpl
ret
imul
jge
imul
cmp
js
rcr
hlt
subb
mov
imul
ret
push
cmpl
lahf
pop
and
inc
movsl
cmpsl
mov
in
loopne
add
ror
daa
sbb
sub
push
jns
mov
nop
mov
outsl
inc
ret
xchg
ret
pop
pop
pop
imul
in
mov
push
xor
inc
in
popf
gs
jo
adc
negb
mov
sti
xchg
sbbl
push
inc
jne
test
lds
stos
xchg
ljmp
cmpsb
cltd
adc
cmpsl
mov
pop
addl
std
mov
aas
sahf
bswap
cmp
repz
cltd
stos
sbb
inc
aam
mov
rol
jecxz
test
push
gs
mov
dec
into
ljmp
movsb
shr
icebp
dec
and
aas
cmc
inc
mov
rolb
jge
dec
bound
ficoms
ja
dec
dec
shll
push
rol
cmpsl
mov
mov
das
je
and
xor
mov
fwait
sti
pop
mov
add
xchg
mov
mov
jnp
fisubrl
mov
fisttps
clc
mov
call
jo
test
sbb
cmp
shr
cmp
jae
jne
loopne
ror
adc
mov
cmpsl
fldcw
cmp
orb
sahf
test
in
repnz
cmp
add
and
fnstcw
jne
popw
scas
mov
les
dec
or
or
mov
lret
add
cli
fnsave
or
outsb
cmp
outsl
sahf
cmp
add
mov
ds
push
adc
mulb
dec
std
push
aad
rorl
mov
mov
mov
ja
vpsrld
cmp
mov
test
mov
cs
jbe
or
loopne
imul
push
cmp
and
jg
pop
pop
inc
lea
test
mov
call
or
sub
and
push
and
add
inc
test
imul
pop
jmp
or
jns
push
lods
ss
jg
jne
xsave
dec
inc
adc
add
stc
sub
jp
ficomps
adc
mov
inc
fistpll
dec
inc
xlat
fimuls
imul
pop
adc
or
adc
lea
xorb
cmpsb
scas
dec
or
push
jnp
and
xchg
lods
loopne
enter
xchg
js
pop
inc
mov
and
mul
pop
loope
popf
and
push
xchg
mov
mov
ja
insl
mov
or
mov
sbb
and
pop
mov
or
fcmovne
xor
dec
inc
or
and
call
test
add
cmc
jl
out
ja
scas
inc
cmp
call
pushf
daa
pop
mov
out
mov
or
jp
fcoms
in
or
popa
push
cld
pop
sbb
or
les
out
or
popf
insb
in
cli
adc
or
jg
xlat
in
sbb
rolb
push
pusha
scas
push
pmullw
xchg
and
pop
inc
outsb
cmp
sbb
or
dec
xlat
cs
pusha
pop
cwtl
or
daa
or
scas
es
addb
cli
popf
stos
mov
sub
rorb
add
or
daa
and
inc
stos
sbb
sbb
cld
push
in
mov
mov
mov
test
inc
dec
jmp
adc
fwait
rcrl
cmp
jmp
mov
or
pop
out
sar
inc
test
jmp
or
into
mov
and
adc
mov
cmp
std
or
cld
daa
jmp
aam
pop
push
rorl
in
cmpsl
push
xor
out
loopne
jbe
sub
mov
mov
cmp
out
add
or
pop
stc
pop
loop
adc
or
push
in
cmpb
jae
mov
in
fnstcw
sbb
mov
jo
mov
imul
aam
jp
orb
and
sbb
scas
xor
or
or
push
or
addr16
or
mov
push
insl
or
jle
xchg
test
incl
inc
fldcw
lods
or
pop
daa
add
pop
or
mov
or
mov
ss
mov
les
std
pop
or
dec
cmp
sub
test
icebp
adc
notl
mov
int3
mov
inc
ret
in
imul
lods
pop
lret
push
and
sub
arpl
loopne
push
push
fisttpll
test
or
mov
push
mov
adc
or
jg
movsl
or
push
xchg
xchg
dec
or
dec
rcrl
xchg
ret
jae
lret
rorb
inc
or
shrl
test
inc
in
sub
stc
dec
mov
out
ss
lcall
jecxz
mov
addps
loope
in
leave
cmp
or
jge
sti
shll
jne
or
and
test
add
pop
cmp
movsl
insb
mov
stos
clc
mov
lods
or
mov
fwait
adc
push
xchg
stos
cmp
in
iret
ficoms
mov
cmp
sti
push
stc
shr
pop
lds
lret
inc
pop
adc
jo
add
xor
dec
lcall
cmp
addb
inc
or
or
adcl
and
loop
lcall
fnstcw
xor
jae
or
clc
and
imul
int
out
or
mov
idivl
iret
add
les
push
inc
lret
out
dec
scas
clc
pop
leave
lds
aad
loopne
dec
out
cmp
out
mov
shl
dec
or
mov
xchg
push
fucomi
pop
add
xor
loope
pop
pop
cli
pop
adc
fwait
sbb
cmpl
in
xchg
lret
xor
or
outsb
fcmovne
cmp
dec
dec
in
xlat
fsubs
push
roll
jo
push
scas
loopne
cs
stc
into
arpl
mov
adc
push
or
repz
jecxz
icebp
mov
or
test
or
adc
mov
stos
loope
dec
cmp
or
fadd
or
xor
leave
push
sub
push
dec
xor
jle
popa
lahf
lret
dec
jmp
pop
or
mov
add
and
push
les
inc
inc
jae
inc
bswap
cmp
movsl
repnz
rorb
lret
sti
imul
mov
stos
jmp
adc
arpl
pop
mov
xorb
xchg
lods
cld
aas
xchg
xor
dec
imul
mov
sbb
or
fiaddl
jne
sti
lock
stc
in
mov
jge
cmpb
int3
je
dec
push
or
gs
or
in
lret
js
xchg
mov
push
test
insl
mov
xchg
sti
imul
or
inc
sub
addb
mov
das
mov
lea
sub
or
or
in
sbb
roll
out
lods
stos
or
jns
jo
sahf
and
xchg
test
jp
cmp
xor
add
or
stc
sbb
or
inc
out
into
mov
or
pop
mov
sbb
andb
jge
cmp
popa
dec
push
and
or
cli
xchg
out
or
inc
xchg
movsb
inc
push
mov
jg
add
mov
or
or
pop
leave
movsb
or
popf
scas
cwtl
and
or
pop
mov
pop
in
inc
std
decl
repz
sbb
xchg
mov
fildl
loopne
push
xchg
outsb
daa
rol
iret
or
push
fsubrl
sahf
cmp
xor
jmp
xor
rol
aad
jb
adc
sbb
daa
or
or
inc
lahf
and
ret
orl
add
out
mov
and
inc
dec
mov
shl
adc
cmpsb
push
nop
into
jg
testb
daa
cmpsl
lds
push
mov
je
mov
call
sbb
fldenv
add
in
or
iret
or
into
dec
jo
or
jle
xchg
scas
ret
xor
invd
pusha
sbb
mov
xchg
jae
adc
mov
sbb
movsl
sbb
or
in
sub
fcompl
stc
in
push
out
xchg
or
popa
sbb
adc
mov
fsubrl
scas
mov
dec
rcrb
outsb
mov
xchg
sub
mov
or
pop
lcall
mov
int
xchg
add
jl
jnp
inc
mov
or
addb
pop
scas
subl
test
add
jmp
cmp
pop
inc
in
imul
shll
pop
ds
jb
sbb
push
fcoml
and
add
dec
gs
imul
lea
ret
xorl
bound
add
js
ds
icebp
fsubp
cs
add
pop
inc
adc
into
dec
add
stc
push
sub
f2xm1
mov
fcomp
adc
or
dec
xor
insb
sub
mov
push
push
in
add
and
ret
dec
lods
or
adc
imul
flds
clc
int3
sti
aas
in
sbb
gs
push
sbb
test
sbb
and
and
imul
cwtl
inc
rolb
push
imul
fisttps
pop
and
cmpsl
push
or
rorl
sub
and
add
or
push
lcall
push
or
shl
aaa
das
outsl
or
mov
push
fwait
sbb
mov
jo
dec
mov
mov
push
or
pop
xchg
shlb
mov
loop
mov
xchg
cwtl
sub
cmp
pop
leave
les
or
cltd
mov
or
mov
es
mov
int
shrl
or
loopne
or
dec
mov
out
cmc
cmp
inc
daa
push
xor
stc
jbe
xor
inc
sbb
pop
lret
and
idivl
xor
mov
jne
push
mov
in
popa
mov
dec
cmc
popa
subl
rclb
stos
and
pop
fwait
inc
mov
push
push
js
in
cmp
cmpsl
shlb
ret
jae
add
xchg
xchg
pop
repz
jb
cli
clc
cmp
sbb
addr16
add
imul
aas
xor
pop
daa
add
lods
jnp
dec
xchg
adcl
std
inc
leave
xor
jmp
push
sti
sbb
sar
sbb
arpl
mov
pop
push
adc
jmp
cld
outsl
ss
or
daa
cwtl
pop
leave
ficoms
inc
nop
add
enter
roll
or
cmp
mov
sub
or
fiaddl
ja
adc
jo
mov
and
push
out
mov
fwait
mov
test
mov
popa
inc
divl
cwtl
inc
add
jmp
loope
add
enter
cmpsb
std
fimuls
addr16
mov
add
pop
js
or
dec
lret
sahf
dec
xchg
mov
ss
push
pop
scas
and
mov
test
inc
xorb
and
ds
jae
mov
add
bound
push
sti
jne
test
adc
rorb
lcall
sbb
les
add
cmpsb
insl
fbstp
sbb
pop
in
daa
mov
mov
pop
rcrb
push
and
aad
popa
push
xchg
add
xchg
xchg
jecxz
push
dec
xchg
out
rolb
pop
dec
dec
jl
mov
sbb
push
pop
imul
fistps
out
mov
pop
orb
les
adc
cmp
sbb
lods
xor
sbb
add
mov
xchg
inc
mov
mov
jl
divl
fcomps
sub
adc
push
dec
scas
sub
xor
cltd
sti
mov
push
mov
das
shll
inc
jno
inc
sub
pop
test
negl
imulb
lods
xchg
cmc
dec
in
dec
xlat
mov
das
mov
and
mov
sbb
add
ja
cli
std
shl
testl
mov
test
xchg
int
cld
rolb
push
or
popa
mov
push
shlb
mov
mov
rcl
add
jno
pop
cmp
fistpll
add
jb
arpl
jmp
orl
cli
lods
in
lcall
add
mov
sbb
xchg
movsl
sub
mov
mov
or
and
aad
test
insl
xchg
mov
add
fisubl
push
repz
cmpsl
in
adc
fbld
dec
inc
les
imull
testl
lcall
mov
shlb
jle
mov
mov
jp
pop
lds
and
jno
lret
xchg
xchg
popa
mov
sub
sbb
adc
sbb
cltd
aas
mov
rol
jge
inc
in
jae
sbb
mov
cmp
mov
andl
lds
lods
mov
jb
int3
dec
subl
loopne
cwtl
cmp
adc
mov
mov
das
rcll
inc
and
lret
or
jnp
fidivrs
mov
and
in
adc
inc
pop
cmp
pop
push
xor
inc
dec
ja
test
dec
clc
xchg
test
lcall
inc
sbb
xor
jmp
fdivp
sub
fidivrl
adc
dec
loope
mov
xchg
imul
fdivr
sub
ljmp
les
add
jns
arpl
cmp
push
arpl
push
ss
mov
stos
mov
and
fwait
mov
aad
push
out
inc
call
push
xchg
gs
dec
repnz
hlt
xchg
rorb
stos
int
mov
dec
imul
mov
jg
add
xor
fstpt
sub
subl
stos
cmp
int
fcmovb
dec
jg
xchg
je
test
and
pop
enter
insb
addr16
popf
dec
es
mov
fcomp
testl
dec
xchg
cmp
mov
daa
mov
mov
add
mov
jp
cmp
in
roll
int3
pop
xor
repz
test
sbb
inc
lret
js
icebp
ja
sbb
bsr
mov
inc
arpl
cmp
pop
repz
push
ret
mov
jmp
mov
add
or
arpl
lcall
pop
int3
ss
leave
cmp
jo
fiadds
shr
pop
push
into
sub
data16
mov
sbb
xchg
push
popa
je
inc
jmp
aad
sbb
outsl
negl
inc
les
ljmp
scas
and
mov
ja
xchg
daa
nop
mov
popa
xchg
lds
dec
sub
mov
mov
xor
cmp
xor
aad
sub
mov
jb
xor
rorl
adc
xor
fidivs
stos
jecxz
sub
call
dec
mov
fwait
je
sbb
cmp
mov
jnp
hlt
pop
and
cmp
mov
push
cltd
lea
pop
jmp
addb
cmpsb
idivb
mov
xchg
and
shr
jp
jno
lahf
mov
mov
repz
sarl
pushfw
push
cs
xchg
add
sub
jge
push
les
aad
and
test
xor
xchg
push
sub
inc
jae
fsts
lret
xchg
jo
cmp
cli
rolb
rorl
jmp
ds
call
sbb
scas
hlt
mov
or
push
iret
jp
repz
inc
jo
inc
rolb
mov
scas
sub
push
cmpsb
sbbb
jae
stc
pop
mov
test
stc
shll
mov
adc
test
popf
outsl
scas
xchg
mov
or
add
stc
in
sarl
inc
mov
nop
cmp
idiv
les
jbe
mov
sbb
jb
jne
mov
iret
daa
inc
iret
sbb
ja
or
loopne
add
insl
adc
xor
jb
cmpsl
outsl
add
les
xchg
dec
sub
xchg
push
lods
mov
stos
jae
pop
inc
subb
and
js
addl
pushf
aaa
jg
dec
icebp
xchg
mov
jp
add
pop
aaa
ret
mov
rolb
imull
out
adcb
push
fs
add
les
push
movsl
push
lea
cmc
xchg
inc
divl
in
add
cmpb
sahf
push
mov
push
gs
shlb
or
cmp
jb,pt
xchg
lcall
cli
pop
pop
pop
jmp
sahf
pop
mov
mov
lock
mov
xor
arpl
lock
test
mov
fwait
pop
mov
out
imul
cmp
xchg
pop
cwtl
rorb
adc
les
mov
fcoml
or
in
xchg
mov
cmp
xchg
insb
gs
data16
daa
adc
jl
aam
dec
mov
mov
into
cmpsl
cs
cwtl
adc
pusha
mov
ret
jbe
pop
dec
icebp
out
ja
shrb
jmp
cmpsb
iret
lds
decl
mov
loope
out
dec
stc
xchg
ret
ret
fldcw
imul
pushl
mov
iret
loope
fld1
stos
xlat
push
jl
out
push
cld
stos
jmp
cmp
mull
jno
dec
test
pop
test
mov
xchg
add
mov
xor
mov
mov
xchg
sbb
xchg
and
pop
cmpsb
dec
jae
in
mov
fldl
in
pop
loope
xchg
loop
adc
mov
cmpsb
pop
scas
mov
out
sbb
xchg
lcall
insl
or
lret
and
fistpl
ret
stc
add
pop
ljmp
cmpsl
mov
outsl
mov
in
aas
cmpsb
sbb
dec
dec
jae
orl
add
jle
xor
lods
fcoml
int
sub
js
ffree
mov
iret
movsl
fisttpll
roll
lret
mov
je
sarb
loope
pop
or
mov
push
or
loopne
sbb
loope
lock
pop
mov
subl
idivl
stos
ficompl
clc
repnz
imul
shll
and
xor
add
and
arpl
xchg
lcall
out
xor
je
in
aam
add
in
xchg
inc
aaa
xchg
dec
out
sti
jge
adc
imul
add
inc
testl
js
mov
pop
mov
adc
sub
inc
adc
fisubrl
mov
mov
rolb
inc
and
lock
shlb
dec
jp
xor
insb
dec
mov
sbb
enter
fwait
jecxz
push
xor
nop
out
popa
mov
test
inc
rclb
addr16
mov
dec
and
outsb
or
push
xchg
jb
fstps
mov
dec
push
adc
test
mov
in
cmc
mov
lds
pop
push
mov
orb
notb
jge
in
cmp
dec
lret
dec
mov
fsubrs
mov
sbb
frstor
add
push
dec
outsb
and
inc
xchg
mov
xor
hlt
pop
mov
inc
xor
mov
xchg
mov
sub
test
push
push
xor
stos
into
jo
outsl
psubsw
jae
outsb
xor
cmp
mov
mov
mov
add
cwtl
jge
das
or
test
icebp
inc
or
cli
mov
rorb
dec
fidivrl
xchg
pushl
pop
sbb
or
enter
or
jb
adc
shlb
sbb
push
stos
push
lock
jmp
gs
mov
mov
or
jle
ffree
or
cmp
or
int
leave
push
and
or
std
loope
adc
or
popf
imulb
cmc
ret
popf
lds
mov
xor
rorb
loop
jmp
cmp
in
push
sbb
jmp
push
jns
hlt
and
movsl
sbb
ljmp
lods
add
in
std
push
jge
mov
rcrl
or
cltd
outsl
push
stos
out
sbb
aas
mov
notw
pop
aaa
cmp
outsb
dec
cli
int3
pop
jb
lds
or
sti
lret
incb
rol
jnp
aam
jnp
jae
ja
adc
dec
sbb
dec
lock
pop
out
mov
push
sbb
jne
adc
mov
shrb
or
mov
adc
outsb
lods
cmpsb
mov
pop
inc
ret
rcl
xorl
dec
and
or
pusha
pushf
lods
stos
push
inc
jecxz
mov
add
in
repz
insl
pusha
in
fdivrl
pop
fcmovnu
add
nop
popa
leave
sub
sbb
adc
cmp
rol
xor
xchg
icebp
daa
and
clc
dec
push
add
cmp
jne
xor
adc
sub
rorb
aaa
ja
xor
fsts
cmpsl
pusha
pop
and
and
xor
ds
mov
dec
mov
jnp
movsl
jbe
inc
xor
sahf
cwtl
mov
lods
in
mov
sbb
jp
jge
inc
lcall
std
stos
mov
mov
lret
mov
shrl
adc
inc
in
pop
mov
mov
movsl
popf
pop
test
xchg
jle
and
leave
loopne
stos
jp
scas
jmp
or
sbb
cltd
repz
fists
rorl
adc
lret
shlb
adc
xor
fcomps
mov
or
ficoms
xchg
out
adc
push
stos
movsb
hlt
push
lea
push
add
adc
in
push
mov
rorb
add
xchg
out
mov
mov
lahf
lcall
addr16
jecxz
sti
mov
ror
dec
into
sbb
bound
mov
mov
je
xchg
pop
jne
pop
push
ja
dec
mov
insb
add
scas
pop
jb
xor
stos
mov
mov
add
mov
and
pop
dec
pop
fwait
addr16
cmp
sub
mov
test
mov
cmp
dec
xlat
call
out
movsl
inc
mov
scas
push
inc
loopne
dec
mov
dec
xchg
imul
sub
jecxz
sub
add
cmp
dec
mov
push
or
adc
fisubs
test
in
negl
fxam
cmc
inc
cmp
mov
jge
outsl
mov
and
sbb
push
xchg
push
and
add
enter
mov
ljmp
cmpsl
jp
pop
mov
testb
in
dec
push
pop
dec
es
aad
inc
push
pusha
push
and
add
xor
in
repnz
loopne
ja
ret
daa
shlb
and
flds
pop
out
sbb
and
jne
sbbl
and
dec
cmp
or
mov
mov
out
or
pop
adc
xchg
cmp
rcrb
sbb
enter
push
fidivrl
sbb
push
mov
out
out
or
jl
shlb
adc
xor
into
cmp
lds
daa
inc
or
cmp
imul
dec
iret
xchg
out
cmp
sbb
stos
testb
push
in
daa
add
frstor
mov
fisttpl
cs
in
jmp
pop
aam
xchg
push
sahf
sub
loope
jo
jae
scas
mov
pop
xor
rcl
inc
repz
cmp
sbbl
std
ret
push
scas
idivb
mov
mov
pop
fisubrl
inc
pusha
dec
inc
pop
sbb
out
gs
leave
jl
rcrl
notb
push
cmpsb
cmp
outsl
pop
sub
dec
lods
daa
lcall
ja
cmp
gs
adc
mov
pop
ret
pop
leave
xchg
popf
add
movsl
adcb
cmp
lds
push
cmp
add
fildl
pop
sbb
xorb
xor
ja
push
sub
sti
fisubs
scas
xor
addr16
mov
mov
xor
in
xchg
add
mov
mov
roll
jge
addr16
add
orb
mov
mov
popa
cmpsb
fidivrl
jl
xor
cmpsb
mov
jg
iret
sbb
xor
push
cwtl
lods
sbb
ljmp
mov
pusha
test
or
add
stos
nop
xchg
les
pop
push
sub
aaa
scas
add
mov
mov
subb
rorb
arpl
xor
xchg
or
cmpsb
push
enter
push
adc
test
mov
or
hlt
push
test
push
inc
scas
cmpl
dec
loope
pop
sub
ret
je
out
les
push
popa
push
jecxz
or
lods
sbb
je
mov
loope
pop
out
dec
imul
insb
jb
cltd
imul
jg
inc
lahf
outsl
imul
mov
mov
jp
jle
mov
and
lcall
into
dec
jns
pop
test
and
cltd
rcr
stc
jmp
mov
push
cmp
push
jns
mov
push
adc
push
sysenter
push
pop
push
mov
xor
rol
mov
and
repz
adc
pop
lods
in
pop
ret
adc
dec
pop
mov
js
jecxz
mov
pop
sahf
pusha
adc
shll
inc
jnp
repnz
mov
rcrb
xor
inc
cmc
ljmp
pop
push
mov
shrl
aaa
pushf
inc
mov
jle
push
cwtl
push
lods
dec
jo
push
and
aam
insl
pop
rol
jae
jno
fldl
jo
shr
and
add
xchg
scas
lods
xlat
testl
imul
lret
adc
sahf
pop
jb
adc
push
sbb
outsb
shl
push
sub
inc
sbbb
inc
rcrb
add
gs
or
push
pusha
ljmp
stos
pop
divb
int3
dec
xchg
icebp
mov
repnz
gs
test
les
rcll
jns
idiv
adc
mov
dec
loopne
stos
mov
jmp
xor
gs
fcomps
mov
mov
xchg
mov
cmpsb
fcmovu
sub
or
jb
pop
xorb
dec
mov
pop
dec
xchg
xchg
add
sti
sahf
mov
test
aas
faddl
popf
and
shrl
shrb
mov
pop
sbb
mov
mov
rcrb
mov
dec
pop
mov
imul
loopne
popa
popf
jae
sbb
daa
aaa
in
jecxz
jnp
mov
dec
push
ds
ss
inc
jecxz
in
xchg
mov
mov
loope
sahf
push
aam
bnd
iret
cmp
daa
sti
pushf
lret
bound
ret
adc
in
fsubs
sub
mov
cli
fildl
sub
fs
subl
shlb
mov
sarb
mov
out
fisttps
push
ucomiss
sti
fdivp
loop
adc
or
ds
ds
mov
xor
scas
cli
add
jno
cmpsl
jge
into
lds
les
mov
mov
pop
fndisi(8087
add
fidivrs
or
mov
sbb
xor
push
or
xchg
in
jecxz
jp
jmp
or
add
and
fisubrs
add
les
inc
cmpsb
mov
xchg
xorb
inc
mov
mov
adc
test
shl
or
jb
push
mov
sub
cld
jns
repz
loopne
push
cmp
daa
sbb
rorw
fisttpll
pushw
nop
pop
and
gs
push
lret
data16
hlt
jb
into
and
cmp
popf
test
mov
and
sahf
jmp
jne
test
lret
or
stos
ja
pop
cltd
bound
mov
mov
pop
cmpsb
cmpsl
lods
push
in
lret
jne
imul
pop
es
negl
gs
add
sbb
fwait
add
cld
movsl
fmulp
stos
cmp
and
push
jmp
mov
lock
and
insb
jae
xor
sbb
mov
dec
push
inc
lahf
or
adc
loop
or
inc
adc
int3
sub
jle
dec
pop
cmc
imul
or
rcrb
out
inc
dec
enter
push
mov
in
push
cwtl
xor
rcl
movb
mov
lea
jae
mov
mov
mov
mov
inc
inc
cmp
stos
lret
arpl
sub
out
mov
pushf
inc
rep
or
or
xchg
sti
jmp
icebp
xor
mov
sbb
cmp
aas
push
fcmove
sbb
test
inc
pop
sti
sbb
push
jp
ss
cmp
shl
xchg
sbb
mov
push
mov
xor
jg
sbb
mov
mov
sbb
test
push
xor
ret
xor
mov
fdivrs
xor
outsb
call
adc
cmp
cmp
push
add
icebp
xchg
mov
inc
sub
subl
mov
xor
arpl
out
int
cmpsl
cmpsb
and
pop
in
xchg
push
jo
fisubs
lds
movsb
adc
or
or
and
sbb
and
and
shll
jle
repnz
std
ret
mov
sbb
stos
and
or
add
out
fldl2e
pop
ror
insb
movl
out
je
xor
fstp
mov
popf
fcmovnb
and
xchg
add
fldcw
clc
ds
into
rcrl
sti
icebp
mov
inc
leave
mov
mov
imull
mov
cmp
and
mov
gs
cmp
mov
lock
dec
mov
imul
int3
fsubrs
dec
out
cwtl
xchg
lods
push
ss
push
add
les
aas
bound
mov
rclb
or
lods
lahf
sub
xchg
add
nop
lods
add
dec
rcl
in
fwait
add
xor
xchg
and
dec
dec
ss
loope
rcll
or
push
jae,pn
pusha
pop
push
or
mov
xchg
les
cmc
jb
sbb
jg
leave
xlat
sbb
in
fmull
and
mov
movb
dec
adc
cwtl
xchg
ljmp
cmpsb
sub
jne
mov
scas
add
mov
fdivrl
hlt
dec
mov
inc
sarl
cwtl
push
loop
scas
mov
mov
mov
push
rclb
scas
add
push
mov
cmp
icebp
testb
les
dec
test
pusha
scas
and
adc
iret
pop
or
ja
movsl
in
repz
push
mov
lds
xor
arpl
mov
xchg
adc
int3
repnz
cmc
ud0
or
out
pop
jp
in
into
dec
jno
sub
dec
cmp
lea
jno
mov
pop
rcrb
xchg
xchg
mov
sub
mov
adc
fldl
outsb
fdivrl
adc
sbb
movsl
out
lds
add
ja
sbb
mov
cmp
pop
icebp
sub
sbb
aad
mov
or
adc
or
xor
jne
aas
xchg
add
fs
pushf
shrb
cmp
dec
and
repz
jl
cmpsl
pop
pop
fcomps
sub
mov
xchg
jp
xorb
scas
out
mov
insl
stos
adc
ljmpw
dec
mov
scas
pop
sub
fld
rolb
and
minps
outsl
mov
mov
sahf
pop
rcrb
ret
dec
es
inc
sbb
insb
clc
ror
mov
stc
push
sbb
ss
stos
pop
mov
imul
int3
sti
dec
inc
pusha
cmp
divl
dec
sub
test
or
out
mov
and
add
stos
arpl
mov
jg
jnp
jns
lods
dec
pop
and
mov
add
adc
and
lds
pop
inc
jns
or
pusha
in
xor
ret
daa
repz
icebp
jle
xor
pop
into
pavgb
xchg
adc
inc
sub
aaa
inc
xor
cmp
dec
adc
scas
fcompl
xor
adc
inc
mov
xchg
ss
imul
mov
outsb
sahf
bound
jae
adc
ret
xlat
sub
loopne
inc
loope
or
std
mov
cmp
mov
inc
les
loope
cli
dec
cmp
rolb
std
insl
mov
aaa
in
mov
fstpl
jp
jo
fisttpl
jecxz
jns
lcall
push
push
dec
lcall
mov
fldenv
mov
mov
and
mov
in
mov
pop
cs
sub
shll
lea
rorb
jecxz
jmp
imul
dec
jge
dec
jmp
cmp
dec
mov
inc
aaa
std
jb
cmp
add
xor
into
pop
and
ds
nop
out
sahf
adc
hlt
rorl
xchg
pop
mov
or
mov
mov
fistpll
sti
lahf
mov
push
sbb
mov
and
pop
in
push
loopne
imul
and
scas
xor
arpl
loop
aad
pop
fildll
adc
sub
push
jge
jb
movsbl
xchg
cmp
xchg
fisttps
daa
push
pop
mov
add
mov
xchg
add
add
jmp
sub
mov
pop
shl
scas
inc
push
and
pop
add
jno
jmp
or
fidivs
or
or
cmp
imul
cmpl
stc
cmc
sub
mov
mov
loopne
jp
push
cmp
add
shlb
rclb
mov
mov
jbe
loope
dec
jmp
int3
jp
lahf
pop
or
ljmp
cmpsl
cmpsb
movsb
add
jecxz
push
mov
cs
add
lds
aaa
pop
ja
test
jg
data16
aad
add
sbb
sbb
inc
jecxz
mov
sahf
sarb
lret
push
rcrl
mov
push
test
mov
test
cmp
lods
ret
lock
pop
pop
mov
xchg
mov
fiadds
push
out
test
pop
jno
sbb
test
add
pop
pop
int3
push
cli
xchg
push
cmp
sarl
sub
popa
jno
xor
inc
pusha
or
push
add
xor
test
add
inc
and
cmpb
iret
push
and
add
pop
or
fisttpl
jbe
pop
inc
xor
mov
sti
out
dec
out
mov
addl
jno
cmpb
xor
pop
adc
push
pop
and
mov
test
sahf
setns
jno
xchg
lds
stos
pop
pop
xchg
mov
cmp
mov
rorl
xlat
or
adc
pop
and
hlt
lret
dec
in
xchg
jae
jmp
dec
loope
jne
adc
or
shlb
cmp
inc
pop
out
jae
cmp
lods
xor
fistpll
jns
pop
out
cmc
aas
cmpsb
add
push
insl
push
jno
cwtl
jb
and
nop
lret
test
dec
or
pop
sbb
sbb
into
push
jg
inc
je
mov
jbe
dec
mov
jno
mov
adc
jnp
mov
xchg
sbb
outsb
loope
adc
xor
pop
xorl
pop
sub
movsb
jl
mov
or
or
cmp
into
xchg
fidivrs
addr16
je
loop
mov
cmc
negl
jle,pn
mov
sub
dec
aam
cmp
aad
add
mov
jo
sub
mov
jns
mov
mov
push
dec
fimull
data16
aad
shll
popf
push
push
outsl
xchg
out
call
pop
or
push
shrb
pop
fisttps
fs
cmp
enter
pushf
sub
es
push
jp
push
cmpsb
sbbl
notl
getsec
jo
ffreep
clc
aam
or
push
std
adc
aad
xlat
movl
jge
je
adc
aaa
test
xchg
mov
inc
mov
mov
mov
push
xorb
out
cmpsl
mov
mov
lds
lock
dec
shrb
xchg
sbb
mov
fs
push
testl
pushf
sahf
mov
dec
push
scas
inc
push
jge
nop
cmpsl
mov
stc
mov
sbb
dec
pushf
icebp
std
fcmovnbe
pop
mov
jmp
and
lret
mov
jecxz
ja
add
popf
sub
xor
sub
xchg
addr16
popf
and
jle
sub
andl
jmp
fcomi
push
and
movb
xor
sbb
ret
gs
jl
fs
out
add
add
mov
repz
push
inc
les
pop
int3
testl
in
das
sarb
cs
xchg
stos
mov
leave
out
mov
jns
dec
mov
pop
cmpsl
into
arpl
aas
fldt
inc
mov
mov
mov
aam
xchg
fimuls
int3
cmpsb
call
aaa
test
inc
push
jmp
xchg
hlt
dec
pop
cmp
jae
jecxz
arpl
or
pop
icebp
xchg
jecxz
sub
push
in
sbb
mov
xor
ja
jl
xchg
leave
adc
add
fimull
xchg
mov
sub
push
add
iret
arpl
loop
ja
in
xor
ja
stos
stc
cmc
dec
daa
xchg
dec
lock
cli
mov
sbb
insl
ss
sbb
pop
push
test
into
xorl
outsb
sbb
mov
push
es
mov
xchg
dec
and
data16
aaa
mov
sbb
jmp
movsl
movsl
pop
int
mov
cmp
jns
cmp
pop
es
and
xchg
into
dec
xor
pop
test
mov
sbb
xor
loopne
mov
test
sub
jg
sbbb
jne
in
imul
out
dec
negb
lea
and
sbb
pusha
adc
stos
push
jns
in
incl
sub
fcmovu
lds
scas
sub
adc
pop
pop
idivb
sub
sbb
mov
movsb
mov
movsl
jb
fiadds
outsb
dec
or
add
mov
shll
in
stc
ds
leave
imul
mov
add
fldcw
add
and
add
fsts
rorb
data16
iret
xor
aaa
js
cs
xchg
fldt
repnz
cmp
sub
add
stc
inc
cli
sbb
notl
dec
adc
mov
xchg
stos
insl
xor
imulb
lds
mov
mov
cmc
sti
lahf
or
arpl
sbb
sahf
in
adc
pop
gs
out
push
pusha
iret
es
jae
cmc
add
mov
cltd
mov
movsb
sub
sub
jae
mov
cwtl
negb
inc
inc
idivl
push
or
iret
pop
stos
stos
loope
stos
orw
fs
sub
pop
mov
dec
stc
jp
repnz
dec
lods
jo
mov
xor
out
aaa
stos
cmpsb
addl
mov
add
jae
test
mov
sbb
lods
cmp
data16
arpl
cmp
inc
mov
popl
test
sbb
sti
mov
scas
push
push
gs
mov
inc
popf
jns
sub
mov
mov
rcrb
aad
js
js
cmpsb
lods
scas
dec
push
jns
mov
cmp
ja
out
loopne
jp
push
add
cmpsb
fwait
out
subl
lock
push
loopne
ds
pop
in
cmp
adc
sahf
add
jbe
ud2
and
hlt
mov
les
mov
repnz
sbb
fistpl
pusha
mov
mov
xchg
les
push
xchg
fimuls
xor
out
jae
jne
inc
aas
orl
xor
call
lret
and
sbb
testl
mov
insb
int
shr
push
dec
mov
sub
adc
cs
push
sbb
or
jp
xchg
mov
inc
in
sub
jns
or
inc
fwait
dec
jb
mov
jae,pn
dec
jle
xchg
push
repz
sub
adc
sub
mov
cmp
mov
iret
cmp
cmp
mov
cmp
clc
mov
cmp
ffreep
pushf
shll
clc
mov
out
lret
add
les
push
dec
adc
ja
sub
scas
jle
cmp
xchg
inc
dec
lret
mov
mov
jno
lock
add
jecxz
dec
xor
fildll
shl
inc
pop
in
iret
pop
jle
into
xchg
fnstcw
inc
idiv
sbb
fistpl
pusha
mov
xchg
sbb
mov
ljmp
fisttpll
test
pop
es
mov
loop
mov
in
fwait
mov
mov
adcl
ds
and
mov
xchg
repnz
loopne
push
mov
sub
iret
stc
js
pop
inc
and
cmp
call
mov
mov
pop
inc
pop
xchg
xor
add
rcl
push
test
popf
mov
sbb
cs
push
outsl
mov
pop
pop
adc
sbb
mul
xorb
icebp
movsl
jl
push
add
test
dec
push
or
mov
rclb
and
ja
aam
xor
testl
sub
gs
fmul
inc
lret
insb
push
repnz
jne
inc
mov
jbe
into
in
in
fildll
or
imul
mov
shr
and
filds
iret
mov
sbb
cmpsb
cwtl
jp
sub
repz
sub
fwait
ret
inc
xor
out
mov
xchg
pop
mov
add
negl
and
addl
int
shlb
mov
cli
gs
arpl
daa
mov
sahf
fsub
adc
jne
sub
dec
xchg
sahf
add
mov
mov
lds
inc
rorb
mov
inc
jne
mov
fidivs
cmpsl
dec
int3
mov
aam
jle
cmc
test
daa
mov
repz
and
mov
in
repnz
or
gs
mov
xchg
out
cmpsl
fwait
mov
sti
out
pop
inc
xor
dec
push
inc
or
jecxz
pop
mov
pop
notl
shlb
push
cmc
pop
mov
out
jae
add
ret
lods
push
jne
push
cmp
dec
ja
loopne
in
leave
stos
fsubl
sbb
mov
cmpsb
bound
cltd
lcall
mov
push
inc
in
dec
jb
das
out
xchg
cmc
cmp
lods
xor
cmp
outsb
test
pop
fsub
jecxz
cmc
aam
and
mov
loopne
xchg
std
cs
or
sbb
sti
les
jmp
lret
or
mov
push
mov
mov
sub
fwait
xchg
xchg
sbb
icebp
xor
rcl
ror
xchg
arpl
mov
std
int3
rorb
add
aaa
ljmp
and
cmpl
sub
push
icebp
rclb
les
jbe
out
mov
pop
sti
imull
or
mov
les
int
sub
notl
dec
push
sub
sbb
push
mov
lock
pop
int3
rclb
shll
ficomps
mov
xchg
rcll
sbb
negl
mov
sub
mov
out
cmc
mov
cmp
xchg
scas
push
jg
fsub
lock
jae
addl
ret
inc
mov
or
clc
js
or
ret
js
pop
mov
adcl
adc
lret
clc
fildll
repz
cmovl
sub
add
xor
jge
adc
dec
into
mov
les
inc
gs
data16
or
stos
icebp
ss
push
push
sbb
stos
out
xor
sbb
sub
inc
xor
dec
out
mov
daa
jnp
test
ja
add
fcomp
imul
lds
les
movsb
mov
mov
sbb
cmpsb
ss
xchg
sub
out
xchg
lcall
mov
pushf
rolb
sbb
and
adc
ret
movsb
lea
and
repz
or
les
gs
popf
std
movsb
mov
rcll
push
inc
stos
les
out
sub
sub
test
movsb
cli
push
mov
adc
andb
sti
out
mov
and
pop
mov
movl
rcl
xchg
jne
sarb
pop
inc
aas
dec
jmp
cmpsl
mov
ffreep
pop
loop
cmpsl
cmp
adc
push
mov
push
lret
loopne
fwait
mov
and
mov
ja
cwtl
dec
movsb
adc
sbb
rol
xchg
xor
sti
push
xor
xor
sbb
sub
mov
fcomp
dec
mov
pusha
sahf
jecxz
clc
push
sbb
decl
sbb
cmp
js
fists
out
inc
dec
imull
rcl
add
les
je
and
sub
stc
fwait
mov
les
loopne
and
add
mov
push
into
repz
jnp
cltd
cs
jb
cmc
inc
sbb
cmp
repz
mov
inc
push
sarl
add
sub
push
inc
rorb
stos
repz
jae
adc
into
rolb
ss
or
aaa
imul
or
pop
push
lret
jne
loope
pop
lds
negl
mov
fidivrs
xor
xchg
xchg
popa
mov
outsl
pop
add
enter
aaa
in
divb
xchg
inc
pop
les
jg
pop
jo
jl
xchg
adcl
cli
and
enter
inc
add
fistps
push
jl
pop
mov
jo
mov
adc
shrb
sahf
lods
xchg
div
add
jne
pop
mov
cmp
or
jbe
sbb
or
mov
hlt
jne
cmc
push
pop
and
repz
xchg
pop
cli
pop
sub
into
jns
xchg
push
sti
call
loopne
jne
mov
sbb
dec
cmp
jle
xchg
mov
ret
and
adc
dec
aad
inc
mov
inc
and
sub
mov
pop
add
cmpsb
mov
nop
cld
push
es
mov
dec
mov
sub
scas
push
stc
lcall
inc
stc
leave
jae
pop
setbe
out
fists
shlb
cmpsl
pusha
ja
dec
adc
xchg
push
aaa
in
mov
mov
jnp
cli
inc
pop
push
test
ss
and
add
pop
mov
orl
cmpsb
std
mov
push
leave
divl
stos
cld
dec
and
stc
mov
sbb
movl
adc
cmpsb
xor
jns
mov
inc
mov
pusha
mov
fwait
mov
mov
pop
ljmp
scas
stos
and
scas
xchg
scas
outsl
movsb
and
lahf
mov
xchg
xor
enter
pop
sub
mov
inc
mov
sbb
pop
cmp
xor
into
repz
xor
add
cli
inc
shlb
xor
jl
or
jle
negl
inc
push
inc
popa
std
mov
pop
push
pop
stos
jle
add
popf
ljmp
sub
jl
xor
sub
daa
xor
divb
mov
hlt
sub
add
jecxz
test
into
lods
ficompl
sbb
stc
mov
outsl
cwtl
sub
push
jno
cmpb
sub
cmpsl
fisttps
xor
or
bound
pushf
adc
push
push
icebp
aam
lods
push
mov
sbb
lds
mov
std
loop
sub
inc
and
test
add
push
lea
sub
icebp
rcl
dec
aad
add
mov
adc
out
mov
push
fildll
xor
mov
jp
pushf
mov
or
and
movsb
push
in
dec
pop
adc
mov
fwait
pop
les
pop
add
cwtl
lea
addr16
movsl
or
xor
in
lds
test
cmc
dec
movsl
jb
cmp
repz
sub
fists
mov
xchg
jge
xchg
out
repz
fwait
imul
stos
rcrb
test
ja
lds
sbb
iret
cmc
dec
xor
or
jecxz
sub
mov
test
movb
and
orb
or
outsb
sub
cmp
sub
jns
or
jge
imul
sbb
out
cmp
mov
jns
cmp
mov
or
and
out
push
shrb
mov
decb
sub
ljmp
inc
mov
push
cmp
mov
jo
sbb
inc
fistpl
mov
fcomps
cmpl
mov
push
add
clc
iret
loopne
mov
sarl
jae
sub
bound
rorl
adc
adc
cmp
adc
inc
jbe
adc
pop
jecxz
test
rol
push
ds
roll
mov
andb
and
andb
imul
pop
jl
fiadds
jns
xchg
xchg
cli
sbb
into
enter
mov
scas
inc
cli
push
ja
leave
sti
fstpl
mov
and
pop
adc
and
mov
lock
jo
imul
mov
das
pushf
ret
lods
or
popa
loop
or
pop
adc
jns
fiaddl
mov
mov
std
jb
mov
sub
mov
stc
pop
fsub
fstpt
push
insl
imul
outsl
or
ja
inc
lret
hlt
adc
int3
mov
imul
inc
dec
in
or
les
cmp
faddp
fldl
mov
stc
or
mov
andl
ret
cmp
aaa
pop
data16
fiadds
jg
and
and
lds
pop
das
mov
dec
aam
sbb
lret
out
ret
add
fcmovnb
scas
movb
rcl
dec
jg
mov
mov
or
cmp
sti
les
shlb
mov
adc
imul
mov
fcmovbe
jg
mov
repz
out
or
fiadds
dec
xor
testb
or
je
cld
aaa
in
scas
jecxz
arpl
and
iret
rolb
lcall
leave
inc
adc
movsb
ret
xor
lcall
sbb
in
hlt
call
es
sbb
mov
hlt
cmp
daa
jecxz
imul
inc
mov
push
ds
xchg
add
inc
movsl
xchg
add
mov
or
das
lods
push
jnp
repnz
fwait
pop
mov
pusha
pop
ja
add
into
lds
add
and
jo
add
sbb
mov
cmpl
shrb
iret
or
jno
cmp
pop
ficomps
gs
pop
inc
movsl
mov
test
popa
and
scas
out
int3
sbb
lock
mov
data16
inc
je
loopne
rcll
sbb
shl
pop
jns
xor
mov
mov
scas
ret
jo
mov
loope
enter
sbb
ret
mov
cltd
jb
push
xchg
fidivrs
dec
inc
pop
andb
xlat
mov
jle
push
mov
pop
rclb
data16
jae
push
js
add
push
dec
push
pop
dec
adc
addl
add
test
icebp
mov
adc
mov
les
push
or
hlt
out
ret
ret
js
out
mov
xchg
dec
shl
mov
cmpsb
mov
loop
rorl
pop
xchg
pop
mov
dec
movl
xchg
in
subl
das
fsubrs
add
mov
out
add
xor
test
test
arpl
sbb
clc
push
mov
sbb
xlat
mov
adc
jae
inc
mov
adc
add
mov
xchg
aas
inc
insb
mov
inc
sbb
push
inc
sbb
lret
arpl
mov
pop
aam
or
cli
rcr
adc
cmpsl
fldt
lods
sbb
fistl
mov
push
and
or
popf
cld
push
cmp
imul
add
push
ja
fs
cli
out
pushf
pop
or
mov
pop
lcall
jl
dec
fistpl
sarl
and
pop
rcrl
add
pop
imul
loopne
shll
jle
in
mov
adc
adcl
jae
mov
scas
adc
mov
scas
push
shlb
rclb
testl
aad
mov
mov
into
movsl
in
repz
les
loope
cld
orl
test
add
cmp
or
dec
imul
dec
and
in
adc
mov
inc
shlb
es
cmpb
jne
sub
push
imul
adc
dec
in
xchg
push
cmp
jecxz
rcrb
mov
lahf
mov
dec
and
stc
add
dec
mov
and
lods
int
mov
mov
insl
mov
mov
lds
gs
push
push
inc
mov
fildl
cmpsl
in
fdivrs
lahf
or
rcl
mov
lods
scas
pcmpeqb
fs
imul
sub
scas
jmp
xchg
cmp
mov
jno
sahf
lea
test
mov
and
sbb
sub
jae
sarl
dec
sarb
jo
mov
xor
cmc
sbb
popf
and
lcall
add
fcmovnu
in
mov
add
pushf
push
aaa
loope
lock
xchg
sbb
jecxz
ja
mov
movsb
cli
les
sarl
test
call
inc
lods
sub
shlb
dec
adc
repz
ffreep
cmp
ljmp
dec
int
sub
es
xchg
adc
jbe
orb
or
pop
mov
in
mov
dec
scas
in
cmp
dec
rorb
cmc
and
fnsave
test
lea
mul
fcoml
jnp
inc
sub
fs
std
mov
inc
faddp
add
enter
cmp
dec
hlt
adc
mov
inc
lods
mov
inc
sbb
stos
sub
lock
scas
lcall
lods
jns
or
add
jae
jecxz
dec
in
dec
and
test
bound
movsb
jae
push
lea
cbtw
pop
mov
xor
imul
orb
or
push
data16
or
das
daa
and
mov
sub
xchg
sti
pop
ljmp
jp
xor
mov
lock
aad
add
mov
push
out
mov
stos
lret
and
push
addl
testb
jle
test
out
inc
shlb
jns,pn
ficoms
inc
xchg
std
testl
jl
mov
lret
add
adc
into
je
push
sub
lret
addr16
inc
cmc
dec
pop
xlat
add
mov
xchg
popf
ret
mov
addr16
add
fisubrs
mov
call
lods
mov
sbb
out
or
mov
shr
cmpb
pop
add
lock
divb
mov
insl
shll
adcl
push
ss
mov
inc
mov
xor
orb
fsubp
mov
mov
in
gs
lcall
test
aad
test
pop
jbe
fisubrs
in
lods
pop
into
add
mov
fs
and
add
int
pop
es
dec
push
mov
cmc
mov
mov
in
or
jl
jo
pop
xchg
xor
push
jno
xchg
add
xor
push
rcrb
negb
pushf
enter
repz
stos
push
xchg
orb
and
sub
xor
sbb
cli
rorl
jne
xchg
push
es
fnstsw
jae
or
leave
fwait
inc
cli
pop
lock
mov
and
fistl
mov
ret
dec
xor
lods
pop
adc
push
xchg
insl
aaa
or
out
pop
or
shll
in
pop
jae
or
xor
sbb
aam
inc
pop
add
movsl
xchg
pop
repnz
ficoms
jle
lret
shrl
mov
dec
dec
cltd
add
push
xchg
outsl
enter
mov
sub
xor
popl
mov
loop
ja
push
inc
sub
mov
cmp
fwait
and
and
dec
jno
add
repnz
push
mov
into
sbb
js
sub
push
mov
cmp
xor
mov
inc
imul
push
out
pop
stc
add
cmp
push
xchg
ja
addb
les
inc
xor
push
push
sahf
xlat
std
jl
push
dec
aad
into
shrb
psrld
pop
mov
dec
ja
stos
int3
stos
xchg
int
into
xchg
dec
mov
or
addr16
dec
aad
pop
dec
xor
jnp
or
sbb
mov
pop
or
sti
les
sub
insb
hlt
push
testb
inc
mov
inc
stc
or
push
sub
iret
les
jg
jmp
int3
icebp
jae
lods
test
outsw
dec
pop
xor
gs
jp
std
or
pop
icebp
aam
mov
scas
dec
in
add
inc
push
cwtl
xchg
repnz
neg
mov
neg
ret
inc
mov
testl
dec
testb
stos
repnz
fucomp
mov
dec
shrb
loopne
ja
jl
push
dec
push
inc
pop
mov
mov
es
inc
xchg
or
cmpb
push
sbb
das
ss
xchg
rcr
mov
mov
xchg
pop
imul
fldcw
popf
jbe
or
xchg
ds
xchg
addl
and
out
popa
xchg
lcall
push
pop
hlt
mulb
cmp
and
sahf
shl
xchg
mov
push
cmpsl
fwait
mov
je
and
cmp
cmpsb
cmp
and
shl
fstl
push
call
jnp
pop
test
add
cli
mov
mov
shrb
pop
rorb
ljmp
scas
into
call
arpl
mov
repnz
adc
lock
insl
rorb
scas
cli
xchg
jne
and
xchg
mov
fwait
and
scas
sbb
pop
sahf
loope
dec
ja
insl
icebp
es
sbb
dec
cmp
mov
ja
push
add
jae
loop
push
rcrb
rcll
fnsave
jbe
scas
sub
or
cmp
inc
adc
dec
mov
ja
mov
dec
loop
inc
add
mov
insb
ljmp
fimuls
mov
test
shrb
in
or
fdiv
inc
icebp
mov
xchg
out
jae
or
dec
push
sahf
iret
js
pop
mov
scas
pop
jge
or
xlat
fdivrp
aas
mov
inc
jle
ljmp
fs
and
es
jl
or
jae
inc
cld
mov
arpl
push
nop
mov
mov
push
shl
sti
rcll
inc
mov
stos
mov
lret
ja
jae
pop
add
je
in
xchg
inc
mov
jle
dec
stc
imul
repnz
inc
mov
daa
mov
cmp
push
mov
xchg
jle
inc
inc
dec
ja
les
rclb
push
xchg
add
add
push
clc
cld
xchg
ret
les
jb
insb
sbb
in
rcrb
mov
aam
pop
adc
fisubl
pop
ss
jmp
cmpsl
icebp
dec
sub
inc
fwait
jge
lret
sbb
les
sarb
mov
in
sbb
imul
fs
dec
popf
insl
repnz
sti
icebp
popa
out
mov
es
push
jmp
rcrl
lret
pop
mov
fadd
jle
arpl
add
shlb
xchg
stos
loopne
test
clc
and
push
jo
push
fsubrp
inc
sbb
enter
sub
mov
sub
mov
mov
push
xor
js
insl
movsb
nop
ret
in
cmp
les
lret
test
stos
clc
or
test
adc
add
ljmp
int3
sbbl
push
xor
cmp
loop
add
nop
notl
xor
rol
adc
dec
shrl
cmpsl
inc
mov
out
shll
adc
mov
xchg
lock
lea
adc
fwait
push
in
xor
clc
lods
xor
leave
rorl
daa
test
gs
les
movsb
aam
ja
lds
jb
jo
dec
xchg
jnp
inc
sbb
xor
mov
mov
outsl
cmp
mov
jl
pop
push
pop
sti
les
xlat
mov
mov
repnz
cmpsl
ja
jne
or
ss
ret
or
movsl
inc
push
mov
mov
mov
mov
jge
mov
addl
jnp
test
loopne
popf
pop
in
inc
xchg
xchg
push
mov
ja
mov
dec
nop
pop
sbb
or
mov
cmc
test
rcrb
jmp
xchg
stos
aas
sub
cld
loopne
adc
jnp
xor
xchg
sub
xorl
imul
dec
xlat
shrl
add
sbb
lods
jnp
shr
add
mov
addr16
shlb
pop
dec
je
or
fcompl
rol
mov
cld
decl
pop
cli
add
mov
jmp
xchg
orl
or
sub
pop
test
lock
test
aaa
dec
inc
jmp
loop
out
enter
dec
xchg
push
lods
lret
jns
sar
lret
mov
js
adc
ds
ret
push
pop
dec
or
outsl
inc
cmpsb
cmpsb
out
jge
jne
daa
ret
mov
add
inc
ficoml
hlt
cld
jnp
cmp
add
jns
ljmp
loopne
mov
or
repz
out
mov
jle
inc
pop
jg
mov
rorl
dec
mov
mov
jbe
mov
or
ss
outsb
push
pop
in
push
mov
adc
mov
or
out
arpl
jae
nop
inc
test
inc
push
and
push
sub
add
add
aad
xchg
subl
out
jno
mov
popa
lock
pop
adc
stc
add
lea
sbb
xor
mov
or
sbbl
int3
arpl
incb
mov
mov
cmpsb
fcoml
add
pop
loopne
pop
test
sti
push
js
mov
cmp
mov
sub
stc
mov
push
pop
and
movsb
out
cmpsl
sbb
push
or
mov
rolb
mov
and
mov
fidivrs
dec
push
lret
adc
mov
sub
frstor
sbb
xor
lods
dec
xchg
clc
test
mov
inc
aas
inc
and
cmp
push
xchg
call
dec
sbb
sub
std
fs
into
and
adc
dec
rol
xor
in
mov
add
aad
cltd
xchg
popa
dec
sbb
mul
fs
pop
push
and
dec
xchg
clc
inc
shll
rclb
icebp
dec
and
xor
fidivl
subb
xchg
inc
stc
sbb
cmp
leave
push
scas
or
ret
repnz
das
xchg
fsts
cmp
gs
leave
dec
mov
idivl
mov
in
in
lahf
cmp
xor
cmpb
repz
test
orb
xchg
rorl
mov
leave
mov
andb
sub
fiadds
cli
insl
sub
mov
pop
xchg
mov
push
push
xchg
lahf
push
into
mov
mov
sahf
or
mov
ret
push
sti
addl
push
ds
fcmovnbe
rcr
pop
mov
inc
jno
adc
dec
add
push
popa
inc
jp
pop
adc
push
add
fistps
pop
push
xrelease
movsl
repz
sahf
fmuls
dec
xchg
jno
fwait
hlt
xchg
mov
add
daa
jmp
lcall
mov
ss
neg
lea
mov
das
test
xchg
add
jle
enter
jns
inc
dec
shlb
inc
mov
mov
push
add
xor
call
scas
outsl
out
cmp
insb
mov
and
mov
mov
mov
mov
cmp
add
enter
and
lahf
jle
xchg
in
lahf
mov
je
jae
jg
fisubrs
pop
or
jecxz
xchg
rcrb
or
cmp
xchg
mov
fnsave
sbb
mov
cmp
adc
push
test
mov
sub
add
fidivl
cmpb
mov
jne
and
inc
daa
push
aaa
mov
addr16
mov
popa
nop
les
add
inc
and
dec
dec
mov
inc
int3
mov
shrb
mov
adc
jge
adc
xchg
jbe
gs
ja
sti
stc
inc
out
sub
cmc
sub
sub
sbb
xchg
xor
xchg
insl
das
mov
xchg
mov
push
mov
cld
inc
jge
mov
jecxz
sarb
xor
imul
jno
jp
mov
push
fwait
adcl
pusha
add
and
idivl
jge
sbb
in
add
ja
shrb
or
mov
popa
mov
xor
out
lock
pop
cmp
pop
or
fnsave
sub
dec
jmp
and
ja
icebp
jecxz
jnp
fidivrs
xchg
mov
mov
sbb
pop
ss
test
and
adc
cmpsb
fnstsw
cwtl
sbb
lcall
test
or
mov
pop
or
mov
scas
mov
ja
cld
into
add
mov
bnd
pop
gs
stc
mov
sub
mov
or
pop
rorl
mov
test
sbb
aaa
shrb
test
leave
adc
add
cli
arpl
sub
push
push
lds
cs
jns
cwtl
adc
loopne
ret
mov
push
inc
mov
mov
sub
imul
cli
cmp
dec
shlb
pop
sbb
dec
cmc
mov
sub
adc
idivl
jne
or
pop
dec
ja
out
push
rcr
mov
xchg
pop
ficoms
icebp
ja
loopne
ljmp
scas
cwtl
adc
mov
dec
sarb
ja
mov
mov
jns,pt
pusha
inc
push
push
dec
mov
xchg
inc
push
inc
jne
mov
clc
sbb
loope
lret
sbb
sub
inc
loope
pop
sti
pop
add
push
mov
cmp
movsl
cmc
jmp
dec
out
aam
or
out
dec
fldt
dec
xchg
xorl
push
insl
and
or
push
outsl
shlb
rorb
cmpsb
and
or
push
xchg
sub
xor
nop
push
sbb
rol
outsl
pop
mov
popf
mov
lods
push
xor
and
jbe
mov
stc
mov
pop
dec
sbb
test
scas
roll
outsb
scas
adc
imul
xor
sub
pop
cmp
xor
in
jne
out
aad
ret
push
xchg
and
jae
jg
je
lock
in
mov
push
dec
add
jmp
idivl
inc
pop
jle
jb
pop
pushf
jecxz
rcr
adc
push
out
cmpb
fs
stc
add
insl
repnz
mov
push
and
popa
stos
fdivl
and
pop
xor
gs
mulb
fwait
sub
add
int
push
adc
repnz
add
les
fwait
daa
sbb
inc
cmp
sahf
mov
mov
stos
and
or
pop
daa
sahf
and
in
mov
pop
out
jg
push
or
daa
icebp
movsb
xlat
xor
dec
xor
inc
push
sub
and
out
or
sbb
icebp
in
iret
sarl
das
std
mov
in
test
sbb
mov
pop
cld
repnz
imul
mov
push
mov
sahf
loopne
sbb
mov
mov
clc
or
scas
stos
shlb
ret
movsl
in
ret
insl
out
out
pop
int
pause
lret
fcomi
addr16
sub
idivl
cmpsl
mov
push
out
ret
mov
mov
pop
pop
ja
idivl
cmp
sbb
ss
push
cmp
sub
stos
sub
repz
jne
dec
in
faddp
xchg
and
pop
mov
les
inc
dec
mov
push
insb
enter
fmull
pop
inc
out
pusha
cld
stos
fcomps
add
sub
dec
das
lds
push
sub
mov
jle
adc
xor
xchg
mov
fstps
mov
sbb
jl
daa
mov
add
daa
cmp
imul
xor
lret
pop
mov
rol
xor
mov
out
bound
rcll
jno
cmp
add
xchg
push
adc
sbb
fwait
call
ficoms
es
pop
lock
add
popw
ds
xchg
or
mov
dec
inc
add
movsl
inc
sbb
dec
xor
cmc
ficoms
stos
rolb
in
loope
rcr
sub
jl
test
mov
out
out
push
pop
and
xchg
pop
sub
jne
movl
and
sbb
mov
fs
fsubs
mov
pop
lahf
push
pop
iret
mov
dec
pusha
or
adc
popf
rcr
out
imul
sbb
les
xchg
or
xlat
adc
mov
dec
test
cmp
sbb
or
stc
insl
xchg
or
fcmovne
mov
scas
pop
adc
pushf
imul
adc
les
pushf
mov
in
cmp
std
shrb
bound
mov
popf
sbb
and
fstl
pop
js
les
jo
inc
pop
shr
inc
hlt
or
xchg
sub
add
enter
cld
rorb
jge
dec
lock
dec
and
inc
int
mov
sahf
mov
movsb
xlat
pop
sub
test
or
mov
dec
cmpsb
jge
dec
icebp
adc
rol
push
repz
clc
fldl
lds
mov
or
add
push
cld
push
mov
loopne
inc
das
mov
jg
push
lods
sbb
xchg
nop
sbb
cmp
mov
xor
outsl
cmpsl
or
xchg
inc
fwait
sub
mov
lea
popa
push
scas
in
add
fsub
pop
jge
sbb
call
movsb
or
jecxz
or
repnz
ret
xor
lods
addr16
cmc
insl
test
dec
push
lahf
jo
fstpt
xor
mov
and
sub
imul
mov
mov
cmp
adc
shrl
inc
nop
filds
xor
ds
in
in
test
xchg
add
data16
iret
jae
and
lcall
imul
lcall
adc
mov
sub
pusha
lock
add
jge
lret
pusha
or
or
popa
test
imul
ret
inc
jb
mov
scas
rcrl
push
mov
repnz
out
fucom
mov
adc
mov
idivb
ja
out
or
jmp
lock
leave
cwtl
inc
jmp
in
jp
int3
cmp
push
jge
inc
mov
lcall
push
pop
mov
daa
sti
push
inc
arpl
rclb
cli
out
mov
add
les
fisubrl
cs
pop
addr16
xchg
xchg
sbb
inc
lret
imul
stos
popf
sbb
or
sub
pop
in
sbb
and
mov
adc
lcall
cmpsl
movsb
test
dec
test
sbb
sub
jo
lahf
int
jp
pop
fs
leave
pop
push
aas
inc
xor
jns
pusha
pop
fwait
daa
pushl
mov
subl
orb
pop
xchg
inc
js
nop
test
xor
ret
stc
fsubp
dec
pop
je
icebp
push
mov
sub
enter
stc
add
or
aad
push
sbbb
or
js
mov
xchg
lea
mov
or
jo
cmp
xor
cmpsb
xor
or
lret
adc
inc
add
mov
idiv
xchg
or
inc
test
or
test
push
and
pop
ds
decl
xor
ret
movsb
or
sub
scas
or
rcrl
or
pop
and
in
xchg
or
xchg
xor
bound
add
dec
cld
addl
fbstp
lods
jge
jne
fcompl
out
mov
insb
pop
and
pop
mov
push
xchg
xchg
push
popf
or
or
cmp
xchg
in
dec
pop
mov
pusha
or
jo
jg
mov
cld
or
out
xchg
or
into
or
mov
stos
aam
add
or
mov
mov
fwait
xchg
and
iret
in
sti
subl
adc
loopne
inc
dec
ljmp
mov
xor
inc
and
xchg
mov
stos
call
stos
jl
test
ljmp
jmp
into
repz
call
push
add
sub
iret
lods
sbb
std
xor
or
fdivrs
repnz
or
nop
mov
cwtl
xchg
cmp
insl
jp
ret
iret
popa
or
xchg
icebp
mov
and
adc
xor
orb
jmp
leave
jp
push
or
push
xchg
inc
push
push
and
or
outsb
and
pop
mov
scas
jnp
pop
jmp
popf
inc
pop
pop
or
mov
sbb
fchs
or
mov
dec
cmp
mov
add
int
xor
add
push
inc
mov
scas
loope
push
inc
push
sti
add
pop
dec
scas
or
movsl
rolb
or
cmp
cwtl
inc
invd
lcall
add
movsb
jmp
xchg
out
fs
add
or
repnz
rorb
out
icebp
or
push
adc
popa
fwait
call
mov
cs
mov
mov
and
loop
jp
xor
iret
and
fs
adc
jo
sbb
addl
popf
or
mov
xchg
vhaddps
pop
iret
mov
adc
mov
addl
dec
fwait
or
mov
call
ja
lret
jmp
andl
jle
lcall
xor
dec
cmpsl
iret
jl
or
sbb
and
sub
dec
roll
call
sahf
xor
push
or
test
repz
jnp
mov
sbb
out
or
mov
rorb
out
loopne
push
jb
inc
jmp
movsl
mov
lret
loope
xor
mov
jl
xchg
inc
pop
scas
pop
jmp
sub
or
sub
jno
cmp
fwait
mov
sub
add
inc
or
cltd
push
sarl
test
scas
scas
mov
sbb
and
push
cmp
and
mov
aaa
inc
push
push
xchg
mov
xor
cmpsl
scas
or
mov
push
xor
loop
mov
aaa
xor
test
and
push
insb
mov
sbbl
pusha
sub
test
negl
mov
fmul
sti
mov
or
test
push
out
shlb
push
push
or
jo
mov
pop
xchg
add
add
pop
mov
mov
aad
lock
or
loopne
mov
loope
push
pop
fildll
jne
adc
ret
clc
xchg
decl
inc
inc
mov
jmp
sub
out
sub
push
xchg
adc
mov
jbe
or
and
cmp
mov
ljmp
fisttps
add
dec
or
mov
test
fcmovne
cs
fnsave
aaa
out
scas
out
in
lods
xchg
cmpsb
orl
add
rol
or
pushf
test
pop
sbb
leave
jno
jbe
or
orb
mov
popa
or
hlt
lcall
dec
outsb
xchg
add
movsb
add
test
aas
outsb
inc
xchg
iret
sub
inc
dec
push
mov
test
cltd
mov
repnz
lock
and
inc
pop
pop
sub
add
pop
mov
imul
jg
in
rcrl
adc
cwtl
imull
or
int3
xor
test
mov
push
daa
xlat
mov
jne
mov
or
pusha
dec
mov
mov
or
mov
mov
or
sub
jle
addr16
mov
push
iret
xchg
sub
inc
mov
cmc
cmp
jne
stos
popa
cmp
aaa
xchg
sub
popaw
mov
fcoms
push
cmp
mov
and
ds
add
dec
mov
add
dec
hlt
repz
push
nop
mov
loopne
jno
or
cs
lock
ret
add
dec
fsubl
xor
mov
push
popa
movsl
lahf
add
jae
xchg
adc
and
mov
or
pandn
xchg
enter
mov
aad
cmp
push
add
xor
or
cmp
or
dec
inc
idiv
int
mov
push
push
mov
test
or
push
mov
into
xlat
mov
scas
jle
std
inc
and
rorl
xor
dec
add
gs
sub
sub
or
pop
out
lock
or
inc
jmp
or
cmp
xchg
or
mov
cs
inc
mov
pop
cmp
out
xchg
mov
or
xor
and
push
and
xchg
or
sti
ds
pushf
loopne
inc
or
mov
ss
or
jg
xor
repnz
jmp
adc
out
mov
mov
inc
xchg
out
cmpsb
divb
enter
sub
mov
daa
iret
popa
or
shlb
or
dec
fldenv
decl
dec
out
inc
dec
pop
call
test
lods
sarl
add
pop
add
cmpsb
popa
pop
std
push
or
push
movb
cwtl
pop
es
adc
and
mov
push
fimull
xchg
jnp
imul
inc
mov
stc
lods
add
and
or
xchg
and
adc
add
jg
add
xchg
out
xchg
fisttpl
pop
jg
in
insb
arpl
lret
pushf
or
repnz
push
push
test
push
or
imul
mov
mov
stc
sti
sarl
add
adc
inc
push
pop
fwait
bound
push
xor
jb
aad
jne
fstl
scas
pop
xchg
or
aas
jbe
jae
out
inc
or
idivl
incl
pop
out
xchg
lock
jg
and
jne
adc
cwtl
mov
dec
sbb
subl
jno
enter
fdivl
stc
xor
mov
popl
ja
or
or
sub
mov
sbb
enter
ja
push
push
popa
or
add
cli
or
roll
incl
mov
popf
add
aas
ds
jne
mov
or
ja
iret
add
clc
insb
add
mov
dec
and
jns
in
xchg
inc
movsb
jmp
sub
out
icebp
or
lcall
pop
and
and
xchg
or
lods
ds
pop
mov
adc
add
sbb
subb
push
push
shl
mov
dec
jns
dec
pop
and
and
and
stc
push
arpl
ja
jb
dec
dec
mov
and
repnz
pop
pop
int3
bound
add
aaa
mov
xlat
into
lods
aas
mov
popf
lods
xor
cmpsl
pop
sub
xchg
add
loopne
push
fcomi
mov
loop
pop
lods
mov
ja
loopne
dec
jge
fidivl
rep
push
cmp
repz
push
leave
or
sbb
dec
test
out
cmpsl
sbb
xor
lock
sbb
dec
lods
ret
mov
xor
push
pop
mov
sub
iret
jl
in
push
sbb
and
inc
add
ss
insb
add
mov
cli
mov
stos
add
lock
fildll
mov
jb
pop
push
jecxz
imul
cmpsl
sarb
ja
dec
lock
mov
loope
pop
les
mov
mov
mov
lea
mov
or
mov
inc
mov
xchg
push
add
mov
mov
jo
xchg
jo
out
xchg
mov
inc
mov
push
or
or
push
mov
adc
out
cltd
in
mov
lock
mov
mov
stos
or
ljmp
call
or
mov
lock
cmc
out
mov
pop
loope
xlat
les
into
mov
or
fisubs
push
cmpsl
movsb
cmp
pop
push
rcr
test
xorl
cmp
sub
jge
sbb
clc
aam
and
ror
in
mov
loop
pop
add
sbb
pop
xor
repz
mov
pop
arpl
xchg
cmpsl
jbe
inc
sbb
jle
popf
jo
out
cltd
push
out
cmpsl
faddl
insl
or
je
cmpsl
pop
nop
xor
ret
shlb
repnz
or
pop
out
jo
jg
out
sbb
ffree
lahf
in
sbb
ficomps
add
les
insl
lds
sbb
mov
mov
inc
scas
and
xchg
and
add
scas
jle
repz
popa
inc
movsb
pop
xor
sbb
fwait
aam
ss
and
into
mov
and
xchg
cmpsb
xor
pop
mov
mov
fwait
xor
push
dec
xor
sahf
add
pop
je
and
add
stos
sar
jle
xchg
andl
in
push
js
iret
mov
jns
mov
icebp
psubq
or
add
jle
loopne
mov
dec
or
scas
jp
ret
jg
out
cld
fdivs
mov
pop
dec
aaa
fucomi
stc
xchg
push
js
pop
lahf
mov
mov
cmc
mov
imul
ret
pop
and
or
xor
sarb
imull
fsub
rol
jge
orb
pop
bound
dec
cmpb
lods
stc
mov
stos
jo
iret
aas
int
ss
add
xchg
mov
sub
mov
mov
daa
pop
xchg
adc
addl
xchg
dec
push
std
hlt
leave
jnp
call
iret
pusha
rcll
mov
out
or
pop
cmp
mov
push
add
testl
push
xchg
or
lahf
cmp
int
or
sbb
pop
hlt
nop
xchg
es
iret
mov
or
out
fildl
mull
sbb
sub
jl
mov
mov
or
pop
sbb
int
add
stos
int3
cmpsb
test
mov
lret
lods
mov
mov
xchg
add
jl
xlat
ja
or
loop
cltd
or
push
test
jnp
daa
dec
mov
or
inc
std
int3
out
sbb
sub
pop
add
mov
jae
and
popa
or
mov
aam
jns
popf
subb
push
arpl
lahf
cmp
xchg
stos
or
pushf
sub
inc
cmp
xor
xchg
or
jl
cmpsl
in
push
or
movsb
inc
push
pop
lahf
scas
cmp
mov
jae
mov
fidivrs
into
or
repnz
push
fstl
mov
mov
js
pop
add
inc
or
stos
sahf
lock
adcb
push
add
xor
cmp
and
outsl
and
orl
mov
dec
lret
and
and
dec
es
inc
or
fwait
mov
lea
adc
call
out
adc
xor
or
inc
and
dec
mov
or
icebp
leave
fistpll
rdtsc
mov
add
pop
or
xchg
inc
or
and
or
daa
icebp
in
sahf
fisttpll
inc
push
aam
adc
pushf
push
xchg
movsb
pop
int3
jmp
mov
push
ds
fildll
je
aas
push
sub
push
or
lret
fwait
dec
testl
mov
out
and
lock
lods
pop
cli
mov
mov
aam
add
daa
jno
mov
xor
dec
addl
or
mov
or
sub
mov
xchg
or
stos
cltd
test
ja
jl
dec
xchg
push
and
or
aad
rol
xchg
dec
xchg
or
cmp
call
xchg
jmp
filds
roll
lock
xorl
fcomp
add
int
or
ss
or
adc
addb
cmc
or
ds
stos
mov
repnz
adc
stos
inc
add
lcall
or
or
icebp
mov
sub
mov
or
or
cmp
insl
add
fimuls
pop
lahf
rcl
lods
pop
fs
fsubrl
push
jle
push
push
push
push
mov
sti
sti
jmp
adc
shlb
sub
or
and
jg
rcl
movsl
addr16
jge
mov
xchg
hlt
or
iret
fwait
mov
or
inc
in
roll
mov
jo
filds
or
jbe
push
neg
insl
mov
sub
pop
iret
mov
pop
or
dec
adc
mov
inc
xchg
cmc
mov
mov
fcoml
or
in
or
gs
ljmp
into
push
jae
adc
sub
push
cmp
cmpsl
lods
outsl
inc
mul
xchg
fsubs
jo
or
es
or
mov
or
das
je,pn
push
call
pop
loope
ja
shll
jo
scas
xor
pop
sub
push
outsl
or
cmp
pushf
mov
repz
adc
add
fsubs
or
pop
aam
repz
or
mov
adc
not
jmp
cmp
aas
add
cmp
mov
add
push
jl
adcl
loop
or
cmp
popf
xchg
xchg
pusha
mov
xor
lods
push
popa
ja
lret
mov
outsl
or
test
or
pushaw
push
mov
pop
test
lock
cmp
sbb
push
mov
cs
cli
or
jns
ds
xor
or
fwait
inc
push
cltd
adc
imul
mov
sbb
arpl
out
fs
in
mov
and
fstps
add
fsubl
rcl
jge
cli
or
sbb
and
push
cmc
fstps
cmp
in
mov
test
or
sub
lahf
sbb
and
dec
pop
pop
arpl
or
mov
mov
sbb
mov
cwtl
sub
xor
ss
std
lret
push
call
sbb
mov
outsl
fistpll
add
rcrl
lahf
cmp
das
cvtps2pi
imul
enter
cmp
cmpsb
push
xor
xchg
add
xchg
clc
nop
inc
clc
pop
imul
xor
xor
or
push
inc
xchg
sub
call
or
in
cmp
sbb
mov
sub
in
mov
pop
add
stc
out
incb
jne
loope
lret
push
sub
or
mov
out
shlb
mul
repz
scas
or
add
addb
test
fidivrs
pop
sbb
jl
xchg
leave
test
mov
or
jbe
les
cs
mov
sti
inc
inc
cmp
or
mov
push
jl
and
or
mov
hlt
or
mov
pop
leave
or
dec
shll
ds
adc
xor
pop
sub
call
out
or
xor
repnz
lds
add
or
xchg
xchg
popf
stos
sub
xchg
nop
and
pop
int
jae
push
testl
sub
fcoml
push
icebp
mov
in
mov
xor
ret
cs
gs
jg
cltd
dec
pop
loopne
movsl
xchg
in
cmp
xor
mov
push
xor
inc
popa
iret
or
jbe
xlat
mov
or
test
lcall
or
cmp
in
adc
out
sbb
push
aad
mov
mov
pop
fsubl
aaa
test
xchg
cmc
lods
aam
ljmp
sub
pop
jl
pop
lea
jo
or
mov
sbb
lds
add
inc
dec
pop
xchg
popf
push
insl
test
movsl
mov
imul
mov
movsl
xor
mov
xchg
stos
andb
jecxz
xor
bnd
mov
sub
or
xor
dec
or
mov
movsb
push
arpl
or
push
cld
cmp
push
mov
xor
cwtl
cmpsb
or
stc
jp
xchg
int
or
xchg
pusha
mov
or
xor
out
lock
movsb
int
cmpsb
push
push
pop
push
or
mov
pop
pop
andb
or
mov
xor
aad
clc
or
push
jbe
xlat
dec
mov
add
push
mov
rcrl
subl
add
sbbl
std
jle
push
pop
cmp
add
adc
adc
in
cmpsl
stos
xor
jbe
nop
cmp
enter
or
shlb
cmpl
out
icebp
scas
test
inc
sbb
cwtl
mov
adc
mov
xor
lret
adc
test
xor
push
dec
cmp
popf
stc
pop
cmp
jp
fimull
dec
or
cld
inc
ja
xchg
sahf
out
movsl
xchg
adc
cwtl
scas
or
adc
aad
jmp
testl
inc
mov
jg
xchg
movsl
jno
mov
mov
mov
cld
test
sub
shrb
cmp
add
ret
ljmp
dec
push
sahf
mov
out
pusha
adc
sarb
or
push
and
xlat
or
addr16
mov
or
mov
xor
idivl
sub
add
js
sbb
xor
jg
subl
cmc
and
out
in
dec
xchg
xchg
loopne
int3
or
insb
mov
push
adcb
or
stos
pusha
ror
cmc
adc
into
push
aas
add
adc
lods
push
dec
push
popa
adc
rclb
and
jns
int3
dec
cwtl
or
lods
pop
sbb
push
cli
mov
cmpsl
or
inc
xlat
xchg
call
iret
cltd
mov
jo
mov
xchg
cmp
fiadds
lock
ds
pushf
out
and
push
imul
lcall
fcomi
dec
scas
or
jno
movsl
mov
mov
aas
mov
js
loope
pop
pusha
add
mov
mov
jl
cmp
iret
in
add
addr16
push
or
or
dec
out
movsb
les
sbb
and
ret
sbb
push
add
xchg
xchg
dec
cmp
lahf
fwait
lcall
stos
push
dec
jecxz
push
daa
insl
and
dec
test
mov
or
cwtl
mov
pop
rorb
or
cmp
and
mov
inc
outsl
stos
cmp
insl
adc
fimuls
xchg
out
mov
arpl
xlat
push
mov
in
push
dec
stos
jo
or
js
decl
call
mov
lret
insb
jns
dec
icebp
xor
xor
fdivl
into
jne
popa
fdivr
mov
inc
inc
in
cmpsl
adc
outsl
adc
ficoms
call
cli
int3
mov
stos
rolb
cltd
dec
pop
ss
adc
rol
mov
repz
lcall
and
xchg
mov
adc
add
mov
std
mov
iret
in
pop
mov
mov
lods
ret
xor
adc
or
int
cmp
gs
movsl
mov
pusha
xor
xorl
insl
sbb
pop
fimull
out
cmpsb
mov
jno
mov
xor
lods
stos
dec
rorl
adc
jae
dec
in
rcll
loop
fisubs
jge
in
pop
fstpt
xor
xor
call
cmp
and
mov
daa
xchg
lds
adc
jecxz
mov
adc
in
push
push
jnp
in
sub
out
xchg
sub
add
or
add
sbb
xchg
ret
stos
push
sbb
out
and
pushf
pushl
ss
cmp
test
or
popa
cmpsl
dec
iret
add
mov
push
jge
mov
out
lods
out
iret
bndldx
jmp
or
fistpll
test
mov
gs
add
imul
xor
dec
arpl
push
dec
cmpsl
cld
rorb
push
mov
mov
mov
xrelease
mov
es
or
pop
ret
daa
mov
stc
lcall
xchg
in
sbb
lock
ds
sub
push
aad
cwtl
or
xchg
int
lcall
clc
xor
fsubs
mov
pop
mov
inc
sub
or
mov
xchg
jg
addb
xchg
mov
or
xor
sbbl
or
mov
cmp
nop
sbb
dec
loopne
adc
push
adc
cli
or
std
xchg
or
movsl
adc
addb
or
loopne
aaa
daa
jb
aad
fistpll
push
adc
out
cmc
push
jp
pushf
jno
cmp
imul
stos
or
orb
xchg
jnp
push
dec
loope
pusha
rcl
or
xchg
adc
xchg
cli
jmp
push
inc
xorb
lock
scas
push
fimuls
fbld
or
pop
pusha
into
enter
mov
pop
inc
iret
cmp
or
or
xor
inc
lods
or
xor
push
fbld
sti
xor
jge
cs
aam
sub
test
fldenv
cld
mov
shll
mov
pop
fldl
or
xchg
pushf
jmp
add
divl
and
sub
outsl
dec
or
insb
jmp
mov
and
insl
cwtl
xlat
xchg
jnp
xorb
cmp
cs
mov
add
jne
jl
cltd
lds
add
iret
outsl
pop
or
xor
sub
xor
or
xor
cmp
sub
mov
xchg
ss
lea
jbe
inc
pop
stos
cmpl
push
dec
negl
nop
popa
vfrczps
sub
add
jns
outsb
or
stos
lods
push
add
ret
or
stc
push
aam
dec
or
pushf
mov
pop
out
xchg
mov
inc
je
or
mov
and
or
mov
dec
sub
ds
shrb
and
push
rcrl
push
xchg
cmovne
movsl
out
jl
xor
adc
cmp
cld
or
popf
push
jne
jb
xchg
jp
jo
add
out
jno
or
mov
push
fwait
push
xchg
lret
mov
xor
or
or
testl
add
movsl
jns
out
jbe
and
sahf
fldln2
stos
xor
mov
call
sti
xor
fdivp
inc
xor
cli
nopl
loopne
and
pop
sahf
test
or
jp
or
or
cs
mov
sub
xchg
jl
push
adc
dec
jecxz
fwait
sbb
das
pop
and
push
dec
js
push
test
cmp
rorl
push
jb
outsb
jo
iret
sti
or
ds
xchg
sub
mov
test
subb
push
cld
mov
jne
fcmovnb
in
jo
iret
pop
icebp
fiaddl
lock
push
xor
jl
das
or
pushf
cmp
jg
shll
or
or
andb
insb
jp
pop
ret
adc
add
inc
je
lret
dec
push
aad
add
or
mov
popa
push
jge
push
lds
push
repz
popf
testb
bound
add
cmp
cmp
cmp
push
lds
aas
sbb
mov
sub
mov
jp
loop
adc
xor
bound
add
dec
or
fwait
stos
imul
cmpb
pop
or
je
in
mov
int3
ljmp
xchg
incl
ret
pop
and
sbb
daa
cmpsb
daa
push
or
xchg
pop
lret
and
mov
lods
xchg
inc
add
ja
push
dec
xor
cld
cmp
pusha
leave
or
cmp
cpuid
mov
cmpsl
scas
adc
incl
pcmpgtb
in
push
xor
leave
xchg
jl
ror
loop
jp
dec
iret
xlat
shrb
lds
or
mov
or
dec
adc
popf
gs
js
or
fimuls
subl
insb
mov
or
xchg
mov
lret
pop
jmp
pop
or
rcrb
ret
or
in
dec
inc
in
addr16
jb
repnz
xor
xor
js
cmpsl
fnstenv
test
push
sbbb
or
cmpsl
mov
mov
mov
mov
iret
xor
incl
ss
push
js
in
or
stos
pop
mov
add
stos
scas
pop
insl
push
pushf
xchg
add
outsb
jl
mov
sbb
jae
mov
xchg
std
mov
shlb
mov
sahf
mov
mov
dec
push
ret
mov
out
or
arpl
nop
push
mov
iret
dec
test
pop
subb
inc
or
aad
test
std
or
rolb
or
jecxz
mov
enter
jne
in
test
mov
icebp
or
ds
xchg
out
jle
or
dec
cli
orb
sub
xchg
inc
jnp
or
pop
ljmp
sbb
mov
stos
pop
or
repnz
adc
cmp
pop
mov
pop
testl
push
rolb
xlat
ret
iret
pop
mov
test
ds
mov
push
or
jo
mov
movsl
pop
cmpsb
or
lsl
xchg
xor
push
or
imul
scas
adc
lea
cmpl
cmp
shrb
cwtl
inc
clc
mov
or
adc
repz
out
leave
jb
outsb
addr16
or
inc
sbb
daa
lretw
imul
jae
stos
fmulp
adcl
pop
mov
clc
add
gs
inc
mov
invd
xchg
xor
push
mov
add
xchg
test
movsl
mov
pop
out
clc
lret
cmp
out
icebp
or
or
jmp
inc
push
mov
push
cmp
pop
xchg
mov
or
int
call
push
mov
in
out
fidivrs
or
call
shll
cmp
ss
daa
mov
lock
loope
hlt
movsl
or
pop
dec
and
pusha
scas
mov
enter
dec
dec
or
nop
pop
inc
or
push
sbb
call
dec
in
jge
nop
jb
or
push
fdiv
and
cld
or
adc
repz
or
push
rorl
addb
xor
inc
sbb
sub
or
xor
push
scas
or
xchg
cmpsl
dec
xchg
pop
out
sti
or
or
out
inc
adc
std
test
pop
sub
pop
pop
push
pop
cld
pop
mov
or
or
scas
push
push
ja
or
in
pop
pop
sbbl
je
pop
icebp
dec
scas
rcrb
adc
je
ret
stos
js
mov
pop
pop
cmp
cmp
xchg
xchg
mov
notl
outsl
add
xchg
inc
and
icebp
call
inc
and
or
ret
sbb
cmp
push
xchg
lods
popa
and
cwtl
ds
adc
mov
pushl
xchg
out
sti
sahf
or
push
iret
aad
dec
lret
or
gs
scas
xchg
loopne
out
loope
mov
xchg
arpl
xchg
or
jge
decb
mov
inc
add
push
sbb
inc
pop
in
adcb
adc
or
insb
aad
rcll
decl
mov
lcall
jb
fisttpll
xchg
inc
lock
mov
outsl
mov
push
xchg
or
clc
aam
addr16
out
cmp
out
add
test
adc
out
cmc
and
in
inc
and
push
push
andl
adc
xchg
lea
jmp
mov
xchg
stos
pop
sbb
mov
loopne
sahf
mov
add
xor
xor
sbb
lahf
scas
and
inc
leave
ja
aad
mov
rorb
popf
pop
das
in
jp
pop
jno
scas
es
pop
dec
in
push
or
ficomps
insl
mov
pushf
push
pop
add
sub
mov
pop
cmp
in
and
sub
inc
lahf
mov
int
or
insb
xor
adc
mov
push
mov
xchg
jl
ucomiss
dec
out
mov
adc
aaa
cmp
stos
popf
inc
jmp
cmp
xchg
sbb
invd
or
sbb
ret
loopne
inc
mov
int3
ret
nop
push
adc
dec
ror
mull
or
pop
push
xor
dec
xchg
jl
div
mov
and
mov
pop
or
popa
adc
cmp
inc
xchg
push
jne
ja
and
cmpsb
les
ret
test
jmp
inc
mov
jp
sub
mov
enter
rorl
movsb
pop
sar
xlat
lahf
and
mov
pushw
leave
pop
imul
or
sub
mov
xchg
icebp
add
inc
jp
les
test
jge
add
sbb
pop
scas
jnp
xchg
out
push
aam
cmpsb
push
sbb
outsl
and
pop
jecxz
bound
mov
push
lds
lock
divl
sahf
test
or
xor
mov
mov
aaa
test
rorb
sbb
jb
sub
or
or
push
cld
sti
int3
mov
ss
jl
cmp
xchg
xor
imull
add
pop
out
mov
adc
dec
je
mov
or
adc
les
jae
popa
jle
mov
pop
adc
mov
mov
adc
inc
js
fstps
sub
out
rcrb
pop
shlb
push
xor
or
sarl
add
mov
nop
cmp
out
ljmp
mov
pop
mov
mov
mov
filds
or
pop
gs
lods
or
ficoms
fwait
lods
je
sbb
xchg
ja
movsb
aam
push
ret
adc
addr16
or
push
outsl
arpl
int
mov
lock
ss
cmp
jmp
xchg
std
mov
xor
mov
mov
or
sti
mov
xchg
dec
loopne
fcomip
push
inc
pop
jne
push
outsl
mov
and
add
fisubrs
mov
jbe
jno
movsl
in
mov
sub
pop
es
test
int3
push
mov
pop
mov
or
mov
dec
fs
mov
fsubrl
or
sti
push
mov
pop
sbb
data16
idivl
xchg
push
into
out
push
pop
sahf
jno
or
xor
int3
imul
int
js
mov
jmp
ret
fcmovnu
test
in
mulb
es
mov
bound
fstl
inc
push
jmp
scas
pop
xor
clc
test
aam
or
inc
mov
loop
add
inc
xchg
cmp
jae
inc
xor
test
inc
push
in
dec
fwait
dec
insl
imul
out
ror
sbb
push
cs
cmpsb
ja
mov
sbb
fsubrl
imul
inc
loopne
dec
daa
mov
and
push
add
pop
pop
shrl
lods
pop
mov
test
mov
jle
mov
jbe
ret
push
inc
mov
pop
test
or
inc
les
mov
shrb
mov
mov
add
es
cltd
push
stos
mov
popl
hlt
idivl
jmp
cmp
push
sbb
xor
dec
inc
cmpb
lret
inc
inc
dec
bound
repnz
lds
pop
sub
jb
dec
cmp
push
xchg
out
sub
sbb
push
cmpl
adc
add
jns
les
arpl
test
daa
mov
fildl
xchg
and
ss
mov
or
sbb
cmpsl
push
icebp
mov
jbe
adc
mov
mov
jecxz
inc
jno
inc
fucomip
push
dec
dec
imul
sbb
stos
repz
mov
jnp
pop
ret
push
cmp
inc
jecxz
cmp
or
mulb
sub
jmp
adc
mov
or
or
mov
loopne
add
insl
test
add
xor
add
or
cmp
push
in
test
mov
stos
adc
dec
mov
gs
xor
aas
shlb
inc
adc
sti
movntq
jae
repnz
dec
and
adc
subl
loopne
xor
mov
jmp
xlat
and
xchg
movsl
mov
adc
movsl
pop
xor
adc
in
lret
add
jnp
insl
lret
lock
cmp
mov
stc
gs
mov
fwait
sti
or
cli
xor
in
jb
adc
mov
enter
icebp
push
les
jnp
addr16
xorl
sub
fstl
pop
in
inc
sub
addb
in
mov
sbb
fnstenv
bound
insl
jbe
adc
jp
jns
faddl
add
test
add
push
sbb
gs
jb
insl
sub
and
sub
mov
jne
jp
lds
fnstsw
or
fsubr
ss
inc
push
adc
fisttpll
sbb
mov
repz
fwait
addl
dec
cmp
loopne
incb
sbb
cmc
pop
in
popf
pop
jmp
xchg
adc
nop
sub
cmp
xor
sub
dec
jo
test
xor
mov
ret
jne
cmp
movsb
scas
jo
rcll
sbb
outsb
popa
inc
mov
pop
gs
jl
js
scas
movsb
add
sbb
aam
dec
mov
inc
movsl
jae
fiadds
xor
in
jo
add
jmp
inc
test
pop
xchg
sti
std
fmuls
into
jl
cmp
lods
adc
xchg
test
xor
fs
dec
fistl
add
leave
rolb
addb
cld
mov
shrb
lds
jns
mov
out
insb
sbb
clc
iret
stos
jae
sti
das
scas
push
mov
rcr
xor
lret
fdivrs
cltd
dec
je
adc
adc
mov
adc
xchg
fbld
add
imul
pop
in
faddl
test
cltd
scas
mov
outsl
xor
in
add
lcall
lods
orl
mov
stos
shlb
repz
int3
into
mov
cmp
incb
lods
das
pop
cmpsb
xchg
into
inc
scas
mov
xor
aam
cli
xchg
pop
loope
or
adc
add
ljmp
mov
lret
into
pop
aaa
xchg
push
pop
shlb
cmpsl
cmp
mov
push
fisubl
cltd
repnz
adc
lret
jbe
mulb
pop
push
cmp
push
push
pop
xor
sbb
adc
pop
and
movsl
mov
push
mov
lds
mov
aam
push
les
cmc
adc
fimuls
mov
les
and
push
cltd
cmp
pop
scas
and
push
push
imul
stos
outsl
bound
cld
sbb
into
lret
addr16
insl
outsl
data16
cmc
jo
js
cmpsl
jecxz
dec
cmp
mov
mov
sub
xor
mov
or
stos
push
pop
add
shll
mov
fdivs
out
inc
sarb
repnz
test
jns
dec
mov
xchg
insl
lret
adc
stos
pop
jns
push
add
and
mov
sbb
cmpsb
pop
mov
adc
sahf
or
or
nop
xchg
hlt
inc
sbb
sbb
push
ja
sbb
pop
push
hlt
xchg
dec
jl
add
xor
ds
pusha
gs
js
in
mov
cmp
in
pushf
pop
cmp
imull
pop
mov
or
rcll
ljmp
jge
pop
fs
cmc
outsb
js
pop
movsl
push
xchg
in
iret
add
lods
push
movsl
adc
notl
cmp
repz
inc
or
inc
shlb
inc
jno
addr16
jne
sbb
lret
push
or
xlat
movsl
les
jnp
jmp
stc
dec
xor
les
xchg
cltd
out
and
bound
adc
test
sbb
idivl
loop
loop
lret
sbb
cmpsl
hlt
stc
leave
xor
adc
mov
popa
pop
cmp
repz
loop
js
sub
pop
pop
dec
sarl
push
shlb
lds
jbe
push
shl
cmc
mov
pop
xchg
mov
mov
inc
xor
into
xchg
mov
or
sbb
rolb
mov
push
sub
movsl
hlt
xchg
cli
stos
mov
jnp
sbb
xchg
sbb
cli
fisubs
mov
dec
inc
rcl
inc
movsb
push
jb
iret
xor
or
orb
sbb
add
sbb
fs
cwtl
dec
push
jmp
ret
je
cmpsb
and
out
or
dec
dec
pop
add
sahf
sbb
sbb
pop
cs
push
out
repz
shrb
mov
sbb
xchg
add
adc
cwtl
cld
xchg
rclb
loop
jbe
and
mov
rcrb
adc
in
mov
xor
addr16
aaa
shrb
in
or
aam
les
aaa
pushf
sbb
mov
push
pop
shlb
push
xchg
rol
add
ds
pop
aaa
sbb
jge
retw
cmp
adc
mov
lcall
or
mov
or
and
scas
popf
pop
ja
pop
popa
push
rorl
insl
xchg
divl
xchg
les
fidivrl
stos
test
xchg
xchg
lds
pop
loope
ja
leave
lods
out
mov
pop
mov
adc
js
mov
or
adc
mov
imul
xor
je
push
lds
dec
jb
incb
lret
into
pop
push
xor
xchg
loop
mov
dec
or
scas
mov
inc
ficomps
xchg
shll
xchg
add
loopne
in
or
icebp
jge
push
sub
fisubrl
cmpsb
mov
lock
pushf
push
in
cmpsl
mov
xchg
dec
cmp
mov
arpl
jae
sbb
jne
mov
xchg
scas
and
sar
push
sub
out
scas
mov
pop
aas
out
ss
mov
sbb
loope
cmpsl
pushf
dec
loopne
dec
cli
decb
sub
jb
mov
sahf
dec
mov
repz
jge
dec
js
rcr
sbb
sar
push
mov
outsl
add
cmc
imul
dec
ret
pusha
scas
jge
or
or
sbb
addl
sbb
add
push
xor
pop
xchg
xor
rcr
dec
cmp
inc
pextrw
pop
xor
movsl
mov
pusha
adcl
test
mov
adc
sbb
ja
rorb
sbbb
ret
mov
jle
cmpsl
es
mov
les
cmpsl
iret
push
shrb
fsubl
movsb
stos
dec
cmpsb
sub
andl
pushl
xor
push
dec
add
push
cli
add
je
push
cwtl
sahf
jae
sbb
scas
or
into
sarb
mov
cmpsb
popa
jne
jne
loop
sbb
dec
mov
mov
pop
test
sar
jnp
mov
icebp
push
mov
pushl
rcrl
dec
jno
dec
sub
and
and
fsubr
filds
dec
rclb
mov
dec
jns
out
les
adc
aas
cmc
cwtl
inc
or
subl
adc
pop
xor
repz
scas
sub
inc
out
push
cmpsb
sbb
stos
adc
lret
inc
mov
sbb
jo
lea
sbb
push
xor
and
pop
sbb
mov
push
pop
in
mov
or
pop
xchg
mov
in
cvtpi2ps
cmpsl
out
jmp
sbb
stos
test
pop
aam
push
subl
incl
jecxz
je
addr16
aaa
pop
push
xchg
mov
xchg
sbb
test
arpl
es
mov
push
movsl
bound
cmpl
push
jns
mov
pop
in
lods
rolb
mov
sbb
fmull
mov
mov
push
dec
shl
out
sub
loope
loop
daa
dec
sahf
shrb
mov
pop
test
mov
sbb
push
ret
push
xlat
jg
mov
mov
pop
repnz
mov
fists
enter
or
sbbl
cld
ret
push
xchg
filds
loopne
rorb
stos
mov
adc
xchg
scas
mov
jne
js
ja
cmp
loop
in
push
stos
jae
mov
mov
std
jecxz
and
xorl
jge
mov
and
cmp
test
pop
adc
jp
decl
aad
mov
flds
add
mov
sub
dec
sbb
add
xor
jbe
ja
mov
jo
cmc
xorl
rol
or
sub
subl
lret
pop
stos
and
lods
rcll
icebp
sbb
add
xchg
lds
rclb
and
dec
in
movsb
or
inc
insl
imul
and
xor
gs
inc
into
or
xchg
xchg
and
mov
out
add
pop
das
ja
shl
rclb
lea
into
testl
jns
mov
icebp
orb
out
pop
loope
loop
mov
and
fisubs
cmp
pop
fsubl
addl
pop
into
sahf
jmp
mov
jne
or
pop
imul
ret
sti
mov
fistpll
push
lahf
xchg
insl
ss
lods
jo
enter
xorl
mov
inc
mov
cmp
push
js
lahf
movsb
push
adc
inc
cmp
mov
adc
into
xor
mov
sarl
outsb
sar
aaa
test
nop
sbb
or
mov
mov
mov
ds
or
pop
repnz
into
and
jg
mov
ljmp
cmp
in
xchg
fs
adc
cmp
fnstenv
lds
inc
inc
add
inc
sub
scas
cmp
mov
lcall
jb
jb
or
aad
jmp
lret
mov
shlb
jne
dec
jne
mov
cmpsb
rcl
mov
xchg
xchg
inc
les
fidivs
and
adc
jne
notb
jle
inc
xchg
jmp
loop
sbb
fiaddl
xchg
mov
gs
mov
adc
ljmp
repz
les
jnp
les
lock
jle
cwtl
out
rcl
cmpsb
fimull
aaa
jbe
outsb
shlb
push
into
in
pop
and
or
xchg
mov
add
in
fiadds
cmp
popa
mov
cs
data16
inc
xchg
and
xchg
inc
fcoml
xor
push
into
dec
fnstsw
or
nop
addb
mov
jp
mov
sbb
test
inc
push
sbb
mov
push
jb
add
pusha
fidivl
mov
outsl
fsubrl
adc
push
iret
adc
inc
hlt
test
rclb
xor
pop
rcrl
and
addr16
loopne
fs
mov
xchg
pop
jp
mov
jb
rorb
test
adc
addl
outsl
stos
in
loope
idivl
cmp
ja
sbb
sub
or
mov
fs
xchg
fucomp
push
lds
inc
xlat
sti
test
cmp
dec
out
stc
jmp
test
orl
and
cmp
pop
and
jbe
popa
jle
fwait
aad
cmp
test
pop
jge
jnp
imul
cmc
scas
pop
inc
jecxz
mov
hlt
push
aas
jecxz
adc
push
scas
jle
add
adc
into
jge
mov
add
jne
lock
shl
lods
repz
inc
movsl
push
push
mov
in
xchg
mov
outsl
push
notb
mov
or
pop
mov
cmc
jnp
push
insb
jecxz
out
ret
jb
cmp
sub
cmp
push
or
mov
cwtl
std
xchg
out
cmc
ret
and
mov
sbb
lret
mov
les
cmp
icebp
pop
or
add
bound
loop
into
daa
and
mov
xchg
in
lret
push
into
fneni(8087
dec
pop
test
out
mov
lea
imul
and
scas
xor
push
je
jo
outsl
push
pop
mov
fisubl
fiadds
adc
inc
xchg
inc
lods
sti
and
mov
cmpsb
adc
cmpsb
push
jge
sub
mov
mov
push
rol
jno
jne
or
adc
jmp
cltd
or
xor
test
outsl
fwait
jbe
mov
cmp
mov
mov
lea
jmp
hlt
fstl
lea
js
sbb
jge
add
aaa
mov
in
xor
or
add
cmp
mov
rcr
incb
mov
sbb
sub
fistps
and
mov
push
call
sub
loopne
fdivrs
ss
sbb
xchg
ret
lret
sarb
sub
ja
icebp
adc
push
or
dec
cmp
or
enter
xchg
cmp
out
jae
repz
push
pop
add
pop
repz
jmp
idivl
or
inc
pop
mov
sub
xchg
xchg
inc
cmpsl
je
add
mov
mov
and
mov
in
or
jl
fdivrl
xchg
outsl
fstps
sbb
inc
inc
popa
add
les
mov
push
sbb
pop
jge
lcall
add
loopne
lret
mov
in
shl
xlat
or
adc
shrb
stc
cld
mov
les
add
ficoms
fs
and
pop
mov
add
int3
mov
pop
enter
sbb
pusha
adc
mov
fisubs
jns
filds
addr16
into
gs
dec
mov
sbb
hlt
xor
sbb
test
fisubrl
dec
les
mov
rorb
xor
jae
outsl
mov
adc
dec
gs
icebp
sub
adc
mull
dec
adc
mov
xchg
ffree
dec
mov
jle
mov
aas
mov
ljmpw
jno
mov
jnp
xchg
lock
scas
jmp
and
scas
rcrb
mov
test
enter
add
rcl
cld
mov
rcr
push
sbb
leave
add
mov
mov
lahf
in
ljmp
xlat
jmp
fisubs
mov
push
xorl
in
push
xchg
ja
jno
push
loope
std
clc
data16
sahf
cmc
or
iret
or
xchg
jge
adc
push
dec
hlt
sub
sbb
daa
inc
mov
push
adcl
int3
dec
std
popf
pusha
mov
int3
ja
cli
jl
aam
scas
test
sbb
add
insl
mov
les
mov
xor
and
inc
sub
push
mov
arpl
or
filds
clc
aaa
xor
mov
xor
lcall
xchg
dec
ficoms
cmp
jb
mov
stos
std
mov
add
test
jg
bswap
push
sbb
xor
mov
ja
syscall
imul
dec
loope
ja
xor
lret
pusha
cs
mov
cmp
add
and
arpl
orl
xor
push
das
bsr
mov
adc
std
mov
mov
or
adc
cs
cwtl
inc
pop
inc
pop
in
inc
sarb
jb
lds
decl
jo
dec
cmpsl
and
add
enter
and
cmp
jge
pop
add
repz
inc
fs
add
mov
std
aaa
sbb
mov
shrl
insb
cmpsl
ja
inc
add
and
inc
and
jp
dec
cli
insl
popa
loopne
add
push
stos
inc
pop
push
dec
in
or
cmc
cmp
popa
mov
mov
sub
into
sbb
jnp
pop
popa
sti
fdivl
cwtl
pushf
mov
sub
jae
sahf
mov
popa
lret
fildll
jmp
or
push
or
pushf
push
addr16
shrb
test
mov
or
push
imul
mov
xchg
sbb
in
shlb
push
test
sub
jb
jae
mov
mov
or
mov
mov
testb
fsub
xchg
out
or
sarb
faddp
comiss
sbb
sbb
out
mov
out
call
mov
rcr
pop
push
clc
dec
cmp
and
mov
mov
lret
push
mov
rolb
push
push
test
inc
fmuls
stc
movsb
int3
pushf
mov
mov
jecxz
add
or
stos
or
cmpsb
js
fimuls
adc
insb
cmpsl
or
sbb
inc
dec
cmp
in
je
xor
jg
dec
inc
and
fiadds
cmp
hlt
xchg
dec
xchg
int
cmpl
rclb
daa
cmpb
sub
rolb
repz
mov
aad
and
mov
dec
clc
leave
dec
jne
xchg
jge
cli
add
pop
dec
inc
xchg
and
sub
imul
sbb
frstor
mov
out
cltd
shl
orl
lods
ja
aas
mov
cmp
nop
cld
insl
jo
fsubl
rclb
xchg
or
xor
jnp
or
inc
testl
pop
inc
or
ja
inc
flds
inc
icebp
daa
add
jbe
mov
or
jno
pop
loope
daa
cmpsb
test
lea
pop
jl
cmpsb
pop
lods
aas
rolb
add
fdivrl
sub
sub
loop
fwait
mov
outsl
dec
movsb
dec
lahf
jb
add
mov
in
xchg
cmp
pcmpgtb
jecxz
lods
jb
lods
add
pop
sbb
outsb
mov
gs
inc
rcrb
test
stos
subl
in
dec
les
cmp
or
mov
cmp
test
xchg
lahf
sub
les
push
add
dec
dec
ret
out
outsb
mov
xchg
popl
mov
pop
cmp
or
iret
fists
jp
stos
cmc
or
push
cmpsb
andl
inc
sbb
or
sub
pop
dec
outsl
push
and
loopne
mov
into
jge
pop
mov
sbb
sub
mov
test
dec
mov
pop
scas
fwait
lret
popf
inc
xor
fildl
das
loope
sti
cltd
inc
lret
or
and
mov
or
les
insl
cmpsb
mov
repz
jl
mov
push
push
in
inc
mov
dec
sbb
push
sbb
xchg
ficompl
adcb
or
lods
sbb
xor
popf
movsb
in
mov
sarb
sbb
inc
pusha
jae
mov
sahf
xor
out
jl
add
ds
scas
andb
jo
xchg
add
or
out
ss
push
outsl
lret
xchg
gs
imul
push
cmpsl
sarl
lret
out
scas
add
pop
and
fstpt
dec
cltd
fidivs
fstl
jne
xchg
sub
aad
xor
jge
out
mov
push
lcall
xchg
push
push
fidivrs
fimuls
ja
popa
mov
gs
sti
mov
xchg
lock
dec
push
repnz
xchg
scas
push
dec
push
xchg
mov
pusha
jae
filds
sub
push
xchg
push
shlb
dec
adc
nop
add
icebp
inc
bound
dec
sbb
mov
mov
sub
push
idivb
xchg
les
mov
sub
mov
adc
aaa
std
rclb
enter
enter
dec
xor
es
jle
mov
pop
jno
lea
cmp
dec
addr16
aas
sbb
and
int
es
rcll
ret
add
ds
mov
mov
or
xchg
mov
fmuls
adc
lock
and
xor
cmp
xchg
mov
push
or
lds
insl
pop
xor
addr16
dec
gs
fiadds
fsts
inc
pop
loope
pop
mov
in
xor
xchg
jp
or
roll
mov
mov
jb
mov
xchg
mov
mov
icebp
sti
mov
stos
xor
ja
int
call
mov
loop
mulps
lret
fmuls
fdivr
mov
loopne
push
sti
sub
xor
in
fildl
clc
in
lods
mov
lock
loope
ret
push
roll
fisubrl
sub
test
movb
inc
xor
fidivrs
sarb
subl
ss
test
insl
addl
fsts
pop
mov
mov
les
jp
aad
or
icebp
inc
sbb
mov
adc
add
push
sub
mov
cli
add
rorl
insb
imul
insl
dec
ficoms
add
and
jp
or
or
bound
fst
mov
data16
lock
mov
unpckhps
pop
sbb
cltd
xchg
mov
jno
sti
fstpt
scas
mov
jecxz
subb
icebp
insl
rolb
cmpsb
sub
loop
sub
aad
idiv
cmp
adc
xlat
sbb
pop
and
push
and
jne
and
hlt
jmp
pop
popa
push
add
mov
add
mov
pop
clc
cli
cs
pop
xlat
push
les
and
adc
repnz
mov
xor
fldl
jae
mov
mov
fdivrl
mov
add
nop
jp
jno,pn
es
fists
jecxz
xor
pop
jno
test
mov
icebp
in
xor
leave
xlat
jmp
mov
dec
xorl
loop
mov
mov
pop
push
ret
cs
test
push
cmpsb
les
popf
ja
insl
mov
mov
icebp
divl
out
into
push
sti
push
loope
scas
jg
xor
xchg
pop
jg
pop
pop
in
mov
fs
mov
inc
adc
int3
mov
clc
xchg
or
sub
andb
dec
inc
pop
shrb
cmp
sbb
shl
mov
lds
push
mov
xchg
push
dec
ljmp
insl
sub
mov
subl
mov
adc
nop
in
pop
gs
cmp
stos
outsb
sbb
adc
andl
test
mov
dec
in
xchg
inc
mov
cmp
pop
push
cmpsl
ret
stos
pop
sahf
fstpl
add
daa
clc
outsl
fimuls
roll
gs
int
sub
nop
sti
nop
les
shrl
icebp
jae
repz
xchg
insb
lcall
jl
xchg
xor
in
dec
movsb
inc
and
lcall
jg
jmp
das
cld
pop
js
pop
sbb
xorl
aas
mov
and
cmpsl
sbb
add
add
jp
inc
mov
xor
add
sbb
fucom
daa
add
mov
push
jle
cmp
jge
nop
or
xchg
jp
dec
dec
push
mov
flds
and
emms
xchg
faddp
sub
in
lods
daa
mov
leave
adc
pop
push
mov
cli
add
mov
jns
jne
rolb
les
sbbl
xor
push
mov
ss
and
data16
idivl
fcomi
push
adc
repz
pusha
outsl
ds
sbb
roll
out
lret
add
jns
inc
jge
filds
loope
fstpl
dec
lcall
xchg
pop
jae
dec
mov
jo
icebp
in
xchg
cmc
lock
pop
les
and
jae
outsl
mov
pop
jl
js
fisubl
aam
inc
test
rorb
adc
mov
les
fcoml
sbb
jae
insl
sbb
das
cmp
dec
or
xchg
jno
xchg
test
mov
jnp
daa
std
jb,pn
push
pop
ljmp
sti
popa
pop
push
push
ja
ret
ja
pop
mov
mov
rorb
rol
nop
adc
mov
cmc
in
xor
rcll
test
int3
inc
sub
add
mov
loopne
les
addr16
rolb
adc
mov
movsl
add
pop
sbb
repz
and
xor
out
pusha
repnz
mov
add
add
pop
ljmp
add
aaa
cld
out
pop
aaa
ds
mov
mov
cli
push
ror
or
add
push
sbbl
les
cmc
insb
push
pop
in
mov
rcll
cmp
mov
fiaddl
out
or
jl
add
or
and
das
testl
jl
cwtl
xchg
mov
mov
pop
cmp
xor
or
push
nop
jns
fsubrs
jecxz
push
cmpsb
std
scas
cwtl
or
daa
fnsave
push
mov
sbb
scas
stc
inc
pop
sub
das
test
pop
fldt
xor
insl
clc
addr16
fabs
clc
es
mov
lret
mov
es
add
add
sti
xor
addr16
cmpsb
add
cs
pop
adc
xchg
les
cmp
xchg
sbb
cwtl
jnp
push
xchg
mov
mov
or
mov
add
imul
cmpb
jns
loope
arpl
xor
sbb
sub
lods
dec
outsb
adc
addr16
or
push
fld
jns
xor
xchg
and
add
inc
out
andb
sbb
and
sbb
iret
hlt
jmp
cmp
adc
xchg
aam
mov
push
lods
cmp
test
orb
fdivrl
cs
popf
mov
cld
loop
jmp
push
and
or
pop
testl
inc
push
add
xchg
loopne
enter
push
lock
sub
je
or
lods
or
mov
fisttpl
into
push
fprem1
pusha
adc
push
or
leave
sbb
stc
loop
jno
icebp
neg
xlat
mov
mov
xchg
arpl
or
push
cmp
fs
jnp
sub
adc
or
adc
stos
syscall
addr16
xchg
outsl
push
sub
sbb
dec
mov
or
sub
aas
cmp
ficoml
dec
fistl
or
mov
or
push
lret
inc
lret
cs
fwait
insl
cli
sbbb
cmp
mov
shll
sub
xor
xor
jecxz
pop
std
sbbl
lahf
or
ds
into
inc
je
sarb
xor
loop
sbb
pop
popl
or
ss
or
xor
jge
jns
fsubrl
pop
inc
and
je
jp
push
aam
cmp
mov
or
lock
add
xlat
repz
lods
or
ljmp
mov
loope
filds
orb
and
inc
push
pop
inc
movsb
ret
add
xor
jmp
lock
dec
mov
push
popa
fldl
mov
daa
and
or
xchg
dec
sub
in
xchg
loope
push
lret
stc
rep
jmp
pop
xchg
or
out
mov
imul
or
addb
xchg
pop
sbb
es
std
insb
nop
or
jmp
fdivrl
jo
add
sbb
and
lcall
icebp
pop
dec
or
out
push
dec
mov
ja
iret
jmp
push
add
rorb
and
bound
fsubrp
inc
mov
shl
fmul
jnp
xchg
mov
aas
test
mov
outsb
push
or
daa
lods
and
lret
js
push
mov
add
ret
xor
jmp
cs
sub
or
repnz
xor
mov
push
dec
roll
jne
or
fidivl
mov
cmp
bound
push
push
push
pop
jp
inc
lods
sbb
ss
je
dec
out
add
mov
mul
pushf
nop
push
xlat
or
jb
scas
sub
cld
lods
inc
sbb
and
in
rorb
pop
and
or
pop
mov
dec
lds
or
or
sahf
in
push
or
call
fs
ret
inc
add
sub
pushf
ja
inc
push
ljmp
pop
jp
lods
fcomp
mov
push
loope
daa
cli
ret
cld
or
sub
sub
lods
or
les
xchg
movsb
out
cmp
shlb
cmp
or
arpl
jne
add
add
call
fwait
cld
pop
push
ret
and
mov
pop
jg
add
mov
loope
cltd
cmp
xor
in
pop
and
aaa
out
popa
lcall
mov
int
sub
mov
sbb
inc
int3
leave
lock
out
push
int
aas
adc
in
or
add
jecxz
cmpsb
test
or
std
cmp
adc
nop
mov
pop
xchg
sahf
ret
adc
jbe
pop
jmp
mov
inc
outsb
jp
or
push
mov
cmpb
push
mov
cmp
jbe
cwtl
mov
push
fists
movsb
inc
pop
add
into
iret
dec
out
add
add
push
in
fs
or
xchg
cltd
dec
xchg
out
jns
or
lods
subl
pusha
sbb
or
movsb
mov
int
add
test
in
dec
movl
jl
cmp
push
std
lret
xchg
es
or
jo
push
fadds
push
pop
mov
add
ror
xchg
inc
test
pop
stos
loope
arpl
pop
adc
adc
jecxz
data16
or
outsb
addl
test
cld
or
push
mov
dec
add
iret
sbb
sub
sbb
div
rcl
push
hlt
cs
pushf
add
dec
rcr
mov
adc
or
inc
sbb
add
call
jo
jns
rorb
inc
or
or
stos
add
scas
or
insl
andb
jge
scas
idiv
mov
inc
or
cmp
jecxz
pop
and
jb
mov
jp
inc
int
into
xor
and
pusha
in
or
aam
or
xor
movsl
push
cmp
pushf
xlat
cmp
push
orb
and
dec
xchg
push
test
mov
je
jae
sti
inc
mov
mov
mov
lret
imul
aad
ds
data16
call
movsb
dec
inc
iret
pushf
sahf
inc
ljmp
or
je
in
jb
out
les
mov
or
mov
std
jnp
ds
sub
jecxz
in
movsl
push
add
call
jle
push
out
test
cs
or
jp
mov
mov
mov
xchg
adc
pushf
xchg
sbb
fmuls
jge
fnstsw
adc
and
sub
scas
push
pop
flds
mov
jbe
xorb
stos
lods
into
dec
dec
out
dec
loope
xchg
xor
lcall
xlat
popf
stos
adc
pop
and
pop
outsl
pop
ljmp
cld
test
or
add
and
xlat
mov
and
loope
mov
add
mov
inc
rcl
inc
movntq
out
push
leave
dec
subb
pop
xchg
xor
loopne
std
ret
sbb
loope
arpl
cmp
xor
rcrb
or
lods
xchg
daa
jbe
out
mov
xor
iret
inc
insl
int3
xchg
jp
or
adc
icebp
call
jno
into
ja
dec
outsb
pop
inc
dec
out
inc
mov
lds
or
mov
test
aad
xchg
cs
sub
mov
pop
sbb
shll
xor
xchg
outsl
bound
leave
inc
adcl
adc
or
aam
cmp
loopne
cmp
cld
or
loop
ds
mov
and
pop
xor
sbb
fsts
or
push
or
pop
add
ja
imul
test
and
test
pushf
sbb
mov
sbbl
in
lods
xchg
outsl
loop
daa
pusha
mov
xchg
out
jbe
push
mov
jno
pop
mov
cmp
mov
lods
xchg
or
fildll
and
push
mov
les
gs
sub
mov
push
test
ffree
and
xchg
jg
repz
adc
jb
xchg
xchg
data16
xor
cmpsl
ret
push
or
divl
or
sbb
imul
cmp
subl
mov
clc
rorl
outsb
inc
loopne
stos
in
push
repnz
cmp
out
aad
or
push
dec
imul
rorl
divl
negb
push
inc
or
mov
add
and
or
inc
insb
inc
dec
push
rorl
push
mov
clc
pop
lgs
adc
orb
jge
jp
dec
lock
or
adc
cli
fmul
ja
mov
and
add
iret
andl
negl
or
in
lret
fcompl
mov
dec
les
mov
lods
cmp
push
dec
or
or
bswap
pop
lcall
push
lock
sub
add
lret
add
in
call
push
adc
fldenv
mov
adc
test
shrb
inc
loope
xchg
or
jle
mov
or
pop
xor
or
inc
push
lcall
je
ret
pop
or
cmp
lock
dec
jmp
fbld
inc
xchg
and
sub
inc
stos
or
inc
fs
sahf
or
faddl
jge
push
adc
addr16
rcl
sbb
and
xchg
or
hlt
jp
nop
lods
orl
push
out
mov
inc
dec
or
push
or
jle
sbb
in
cmp
test
mov
push
cmp
jno
int3
nop
decl
jmp
cmp
inc
push
test
test
mov
xor
mov
xorb
inc
mov
mov
loope
jl
rcrl
out
push
xor
sbb
mov
push
dec
insb
lret
xchg
or
xor
ret
repz
mov
push
popa
cmp
jne
movsl
shlb
pop
mov
aam
push
pop
lock
rol
loop
stos
pop
popf
lcall
dec
jae
xor
outsl
ss
push
sbb
fiaddl
adc
xchg
decl
jg
add
dec
das
xchg
mov
jb
mov
jae
sbb
add
add
add
movsb
dec
mov
aam
jge
push
xchg
ret
cmp
adc
mov
xor
jbe
mov
mulb
add
out
aaa
xchg
pop
shl
xor
jle
jge
xor
fxch
mov
sbb
in
lret
adc
and
and
mov
lret
test
cwtl
imul
test
mov
cmp
jo
dec
in
sbb
incl
repnz
pop
xchg
fistpl
mov
push
in
xchg
push
lcall
adc
dec
pusha
clc
mov
push
mov
mov
and
adc
push
push
aaa
mov
sbb
inc
test
mov
jg
xchg
fwait
cs
jno
inc
jne
or
sbb
inc
push
mov
push
xchg
cmpsb
add
out
xchg
pusha
js
pushf
icebp
mov
cmp
imull
cmp
out
mov
push
mov
dec
mov
nop
push
imulb
or
rorb
lds
cmp
ret
les
xchg
cmp
movsl
or
ret
xchg
sarb
pop
cwtl
cmp
outsl
lret
stos
mov
pusha
jmp
les
rcr
sub
dec
push
pop
mov
mov
or
loop
xchg
push
sub
outsl
repnz
push
sti
hlt
push
mov
xor
sub
std
lock
loopne
pop
lret
mov
in
jns
inc
sub
sub
xor
mov
fwait
adcl
pusha
stc
rcrb
stos
pop
jmp
ja
and
mov
sub
fsubrs
xchg
xchg
inc
les
xor
inc
into
out
orb
orl
movb
ja
fwait
mov
jmp
leave
in
les
or
xor
adc
jne
ret
in
mov
inc
add
push
outsb
movsb
test
pop
cmp
into
shlb
mov
fwait
ret
faddl
sbb
fucomi
mov
lret
add
mov
in
popa
mov
popa
jmp
dec
shll
or
popa
adc
dec
addr16
xor
xor
adc
and
rcrb
test
jae
rcrl
scas
cmp
mov
add
orb
ja
pop
insb
sub
cs
cmp
sbb
adc
rcl
daa
imul
mov
lock
sbb
cmpsw
ret
add
les
dec
push
cmpb
sub
mov
push
add
nop
rcr
jmp
adc
int
mov
dec
mov
daa
add
fistl
fldl
mov
mov
push
mov
pop
js
int
test
xor
cwtl
jmp
adc
sti
adc
xor
push
or
movsb
scas
dec
jae
add
add
adc
jmp
outsb
sub
fisubrs
push
adc
ljmp
and
xchg
inc
out
adc
inc
cmpb
fimuls
add
cwtl
cmpsb
hlt
or
stos
push
cmp
loop
in
pop
cmc
mov
adc
xlat
inc
iret
or
xchg
js
imul
in
scas
pop
add
add
push
adc
cmp
or
leave
into
mov
sub
jle
stos
pop
int3
nop
inc
xor
sub
pop
xchg
popa
add
add
mov
ret
add
inc
or
adc
cmp
mov
jecxz
add
or
pop
mov
jmp
out
add
fwait
jb
in
or
lds
lret
xchg
add
add
movsl
adc
test
dec
fistpll
sub
add
icebp
repnz
sub
jae
out
pop
ja
shl
mov
test
pop
push
inc
pop
andb
jno
rclb
adc
mov
jecxz
imul
mov
cmp
popf
sub
sbbl
push
mov
pop
jo
arpl
or
push
pop
inc
insb
stos
and
cltd
sbb
int3
fadd
push
cmpsb
adc
sbb
mov
fcom
loopne
rclb
push
jge
lds
cmp
dec
pop
inc
mov
stos
and
orl
sbb
loope
stc
gs
dec
mov
and
sahf
pop
sarb
pop
das
adc
xlat
mov
outsl
and
xchg
cmpsl
pop
leave
outsb
fiadds
add
rcrb
hlt
ror
or
and
and
mov
add
pop
pop
jae
mov
dec
jl
mov
mov
shll
lock
ficoml
into
dec
fcoms
jnp
clc
dec
pop
xchg
fnsave
out
and
jg
out
subb
push
fwait
xor
or
xchg
dec
jnp
mov
xor
popa
add
les
sbb
dec
or
add
xchg
dec
js
pop
shlb
xor
loopne
push
and
push
stos
ja
in
inc
out
adc
arpl
fisubrl
in
movsl
dec
pop
nop
dec
inc
sub
stc
mov
xor
sub
mov
stos
push
push
adc
xor
in
push
inc
inc
jae
std
xchg
rclb
nop
dec
jno
jg
or
push
nop
int
xor
add
loop
outsb
outsl
mov
add
mov
pop
loope
les
lds
mov
movsb
lods
add
mov
rcrb
cmpsl
xlat
sbb
xor
addr16
pop
iret
test
into
mov
loopne
das
aaa
xor
ss
mov
inc
xchg
push
scas
ficoml
mov
fwait
stc
test
es
ret
inc
push
leave
jecxz
rcr
nop
pop
aas
jo
ja
in
or
fwait
addr16
push
jmp
je
xor
addl
fsubrl
add
mov
sbb
push
xor
or
jle
shl
sbb
fisubrs
pop
shrl
pop
sub
mov
stos
lock
and
adc
mov
or
cmp
faddp
dec
ja
sbb
aaa
ret
out
or
les
pusha
sbb
pop
pop
fstps
adc
mov
scas
mov
xchg
daa
adcb
imul
scas
fistps
mov
push
nop
inc
fisubrs
pop
std
dec
ljmp
lahf
dec
jl
fistpll
cwtl
jl
popa
fcmovu
or
aad
scas
sahf
mov
dec
xor
or
pop
pop
adc
outsl
and
dec
out
xlat
sbb
and
jno
out
sub
fistpll
push
jbe
push
sub
inc
jo
xchg
loope
jno
ret
dec
adc
stos
js
ret
add
mov
das
adc
add
cmp
pop
decl
ret
arpl
add
inc
movsl
jecxz
mov
ja
xchg
gs
pop
addr16
inc
out
ja
and
dec
or
jno
pusha
mov
sbb
jl
mov
rorl
mov
pop
lods
sbb
xchg
bound
and
push
out
adc
popf
dec
add
push
mov
add
orb
sbb
jbe
mov
push
int
jge
xchg
or
add
jno
lds
cmpsb
imul
pop
add
jo
rorb
jmp
lods
cwtl
dec
lret
inc
cmp
jg
rolb
sahf
jae
xchg
imul
rolb
mov
inc
mov
into
cs
mov
stc
pop
add
in
mov
fwait
movsl
cwtl
ds
or
lock
inc
dec
adc
mov
xchg
lods
js
or
out
add
negl
adc
mov
loop
pop
imul
loop
lods
mov
cmp
les
cmp
dec
pop
stos
clc
or
or
fwait
pop
sub
push
das
sbb
xchg
inc
mov
sbb
mov
fbld
or
shrl
jae
repz
insl
mov
sbb
stc
clc
jl
push
push
and
pop
cmp
sub
xchg
mov
insl
or
nop
mov
rolb
test
pop
dec
jns
jg
jmp
add
stos
pusha
pop
cmp
lock
sub
arpl
movsl
fs
test
jae
pop
rorl
in
movsl
cmpsb
out
and
cmp
call
or
mov
test
pop
mov
fistl
cld
mov
xchg
mov
xor
addr16
sbb
push
cmpsb
adc
repz
mov
popa
mov
xor
int3
jecxz
and
and
pop
jns
in
sbb
xchg
arpl
pop
adc
loopne
xor
rolb
out
imul
ret
xchg
push
or
jle
pop
sbb
insl
repnz
push
notl
out
and
scas
cmpsl
popf
jge
movsl
adc
sub
int3
negl
jne
dec
cmp
lods
fs
mov
js
in
cwtl
loop
insl
filds
inc
outsl
test
mov
mov
es
or
mov
test
js
mov
fs
aam
cli
push
jmp
dec
shlb
ja
push
mov
frstor
push
adc
pop
fidivrs
mov
les
push
scas
push
mov
xchg
ret
shll
mov
movsl
cmpl
sub
lods
pop
inc
mov
ja
dec
movsb
out
pop
mov
lods
test
mov
pop
adc
xchg
and
dec
iret
les
ljmp
or
shlb
fs
or
adc
fsubs
stos
pop
into
push
outsb
push
cld
inc
insl
add
gs
cmp
dec
lcall
push
shrl
xchg
es
and
jle
ja
cmpsb
dec
cmp
mov
and
xchg
mov
push
mov
les
int3
call
mov
adc
in
stos
mov
fs
scas
cs
mov
rol
pop
int
les
inc
dec
cmp
dec
sub
and
and
jae
dec
xor
popa
andb
jge
mov
ss
in
lods
cmp
jbe
pop
jne
push
stos
fcmovnb
out
mov
mov
scas
imul
mov
ljmp
mov
and
repz
cmp
and
jo
sti
cmpsb
jecxz
stos
fildll
xchg
inc
dec
dec
jb
ja
mov
xchg
add
subl
cmpsb
mov
stos
pop
xchg
and
jae
inc
iret
pop
mov
fstps
shll
fcoms
inc
xchg
dec
or
lods
adcl
cmp
in
adc
push
pop
shlb
inc
cli
mov
mov
fldln2
daa
cmc
mov
and
cmpl
in
mov
xor
sbb
pop
mov
push
mov
pop
jl
push
in
rcll
adc
add
out
lods
pop
or
notl
lods
pop
jge
mov
adc
add
push
push
movsl
and
xor
lea
jbe
cmpsl
icebp
cld
cmp
sbb
mov
or
xor
out
inc
cmp
out
xchg
xchg
dec
or
mov
xchg
mov
mov
lret
and
xchg
mov
outsb
lods
mov
or
push
inc
out
push
icebp
xor
push
cmc
dec
pop
repnz
and
scas
xorb
test
push
adc
mov
dec
push
int
sbb
popa
inc
decl
dec
hlt
repnz
xchg
xchg
pop
outsb
add
daa
push
stc
xchg
sub
sti
jae
add
jo
xchg
inc
andb
push
cwtl
testb
imul
pop
mov
xchg
popw
fldl
and
aaa
out
xor
fistl
mov
jo
aas
shrb
scas
es
mov
lods
fistl
fidivrs
pop
je
inc
repz
lret
cmp
test
pusha
rorb
push
fisttpll
mov
jb
in
stc
sbbl
into
xchg
test
scas
sub
cld
addr16
or
pop
mov
push
scas
rol
dec
mov
pop
ljmp
std
cmp
idivb
inc
outsl
iret
xlat
adc
mov
popa
sahf
aam
xchg
xchg
lock
lock
outsl
xor
add
xlat
mov
push
movsl
xor
mov
adc
xchg
add
add
xchg
add
jb
into
jo
into
xchg
xchg
pop
lock
imul
cmpsl
ja
inc
dec
inc
jns
shll
dec
call
cmp
add
dec
lods
sbb
dec
cmpsb
add
push
and
add
test
or
push
out
pop
xchg
insb
mov
imull
mov
dec
orb
jge
xchg
mov
pop
inc
and
add
shl
fldt
cld
push
xor
or
iret
push
loopne
xchg
ja
and
jmp
mov
loope
jle
adc
xchg
repnz
jae
mov
or
mov
out
lret
shll
cwtl
mov
std
and
cltd
out
add
repz
mov
mov
push
in
sub
sbb
push
inc
mov
sub
mov
fsubs
sub
push
xchg
cmp
les
inc
mov
and
xchg
jbe
popa
sub
xor
pop
sahf
out
sbb
shrl
push
jb
adc
mov
push
les
sbb
adc
sbb
pop
test
xchg
mov
dec
je
mov
jg
leave
repz
jne
mov
fbstp
add
ljmp
mov
test
mov
jle
sub
cmp
fisubs
lret
lock
or
jg
popa
pop
adc
jb
pop
mov
sub
cmpsl
xchg
inc
sub
jecxz
push
inc
scas
lods
adc
call
lods
adc
cmp
push
fidivl
aad
mov
adc
cld
sub
push
sub
inc
inc
lcall
cli
fisubrs
xor
rol
out
xor
clc
mov
orb
dec
jo
ffreep
push
adc
pop
xor
mov
repz
inc
dec
adc
or
cmpl
mov
push
mov
mov
push
divl
scas
xor
xchg
mov
xchg
jne
sub
lods
sahf
sub
mov
add
push
push
mov
cltd
pop
or
xchg
lahf
movsl
stc
lret
mov
or
xchg
sbb
xchg
insl
out
ss
repnz
lahf
jbe
or
icebp
jmp
shl
insl
repnz
lret
pop
xor
adc
nop
arpl
addl
and
xchg
or
imul
loopne
pushf
ret
dec
lods
sub
stos
or
in
loope
cmpl
ret
cmpsb
lods
enter
ds
lds
mull
xchg
mov
rol
out
mov
loope
ja
pop
adc
rolb
mov
icebp
pop
test
add
push
or
xchg
ret
pop
mov
ds
xchg
fidivl
push
inc
lds
repz
jmp
push
stc
lret
dec
gs
xorl
push
cmp
fwait
mov
ret
cmpsb
les
push
mov
imul
in
popa
cmp
daa
xchg
jnp
das
push
mov
outsl
shrb
xchg
les
cmpsl
jne
add
test
cmp
call
lds
movl
adc
les
loope
mov
int3
sub
mov
mov
shll
dec
fisubrl
mov
imul
inc
insl
jmp
xor
add
xchg
cmpsl
jecxz
mov
insl
sub
nop
fdivrl
cmpsl
adc
and
mov
fcmove
stc
lea
shrb
xchg
icebp
stos
lcall
inc
dec
mov
test
push
scas
hlt
cmpsl
leave
sbb
xchg
ds
sbbl
sar
xchg
lods
fsubl
sbb
dec
out
arpl
xor
dec
imul
add
rcll
push
std
fstpl
cmp
pop
xchg
aad
push
mov
gs
cmpsl
cmp
inc
jmp
sarb
std
pop
pop
addl
sbb
out
jmp
cmp
sub
jle
jmp
movsb
enter
loopne
push
rolb
push
and
xchg
cmp
sti
out
xor
xor
mov
cmpsl
cld
loop
inc
test
mov
xor
push
fs
test
out
xchg
shrl
mov
repnz
sbb
ret
mov
push
repnz
pop
xchg
les
lea
cltd
cmpsb
push
mov
jmp
lods
ja
pop
adc
and
mov
mov
cmp
sub
shl
cs
jnp
cli
mov
xchg
cmc
jecxz
inc
les
cld
sub
cmp
inc
dec
cmp
sahf
dec
jne
add
push
test
andl
imul
sub
iret
imul
in
mov
sbbb
out
in
js
adc
aam
fcmove
lahf
lea
icebp
repnz
in
jb
inc
xor
mov
or
pushf
outsb
pop
or
outsl
dec
cmp
daa
sub
or
xchg
dec
mov
imul
imul
scas
dec
xor
or
push
jmp
out
js
in
cmp
dec
or
out
mov
jmp
jne
rorl
stos
imul
leave
mov
mov
arpl
imul
shlb
ret
jle
data16
jl
jmp
or
sbb
add
cmp
decb
mov
jmp
ja
lods
out
jae
mov
testl
jmp
mov
ret
fs
jae
or
movsl
pop
hlt
call
or
pop
repz
xchg
push
pop
pop
or
dec
data16
arpl
insl
dec
and
repnz
into
cli
ds
sbb
roll
aad
and
outsl
iret
sub
fwait
pop
mov
lret
int
addl
adc
xchg
push
or
leave
mov
or
mov
push
gs
push
int
pop
rorl
adc
inc
add
adc
adc
pop
fwait
arpl
dec
push
xchg
rorl
cmp
sbb
out
mov
inc
inc
jp
test
test
sbb
pop
stos
or
add
or
mov
scas
scas
add
adc
aaa
mov
and
add
or
fs
push
fcomps
negl
inc
push
push
movsl
ja
or
dec
pop
pop
fstl
ds
insb
mov
inc
add
jnp
dec
sbb
sub
inc
repnz
cmp
sarl
mov
dec
jbe
and
out
push
daa
push
arpl
aaa
ljmp
push
mov
lods
inc
add
test
aas
ljmp
jl
cmp
out
jle
jecxz
push
inc
inc
adcl
or
cmp
out
out
mov
pop
mov
incl
fisubrs
pop
jns
sbbl
dec
lahf
sti
or
clc
decl
sub
push
pop
cwtl
xchg
pop
sub
mov
ja
xor
or
cmp
or
cmpsl
std
inc
jecxz
or
out
pusha
mov
inc
or
aaa
sti
xchg
xor
and
or
xchg
inc
pop
xor
lahf
test
mov
les
add
lcall
jo
or
pop
fadds
cltd
mov
add
mov
jl
fsts
push
aam
lret
or
ja
loopne
jecxz
sbb
xchg
cmp
pop
daa
in
repz
or
lret
jp
or
test
xchg
rorl
je
sahf
push
mov
lcall
sbb
mov
in
add
int3
or
pusha
sub
imul
pop
fucomip
inc
in
mov
nop
add
inc
pusha
xor
or
imul
push
xchg
repnz
out
sbb
or
xchg
and
jecxz
mov
roll
repz
xchg
sub
push
or
roll
add
stos
inc
popf
or
addb
or
cmp
xchg
mov
fs
add
add
cmpsb
sub
je
shll
aam
mov
sbb
hlt
sti
lcall
in
fidivl
rcrb
push
pop
icebp
sti
cli
cmp
sbbb
mov
mov
sbb
stos
addl
jb
cmp
add
sub
add
jns
jbe
mov
lods
xchg
add
sub
inc
fidivrl
push
cmp
cld
lods
movsl
or
adc
push
inc
mov
jae
repnz
sub
out
sub
shl
mov
sbb
cmpsl
test
jnp
sub
add
ss
stos
or
mov
push
adc
mov
add
sbb
cmpsl
imull
loope
xlat
pop
push
or
lcall
or
cli
sbb
lds
add
dec
shlb
jecxz
or
rcrl
adcb
out
pop
sti
xchg
mov
adc
push
and
in
test
pop
dec
add
jne
fmuls
lahf
push
xchg
xchg
inc
adc
or
lods
popa
sarl
sub
out
aas
push
cmp
mov
out
dec
push
ljmp
in
or
push
push
add
int3
lret
push
mov
cmp
sbb
push
data16
or
daa
pop
bound
jnp
or
jns
aas
push
mov
dec
ljmp
icebp
xchg
repz
lret
clc
inc
mov
dec
add
stos
dec
push
std
and
icebp
hlt
mov
add
add
mov
pop
or
sbb
sbb
inc
push
mov
in
js
rcl
lods
add
cld
push
es
xchg
dec
and
xor
push
cmp
xchg
add
fdivrl
jo
xchg
push
movsb
in
call
inc
xchg
nop
dec
add
sahf
mov
or
sti
in
or
repnz
add
push
das
push
or
pusha
frstor
loope
jo
xchg
add
mov
push
xchg
jne
mov
add
mov
ja
sbb
xchg
cmp
testb
roll
push
push
or
fwait
pop
jg
rcpps
inc
in
std
mov
stc
pop
enter
es
sbb
sbb
popf
cs
lods
add
dec
scas
cmpsl
inc
push
in
inc
ffree
jbe
jmp
add
sbb
ja
dec
addr16
push
add
mov
adc
or
push
iret
rorb
sbb
shll
cmp
jmp
lea
mov
inc
mov
fdivrs
int
xor
je
sub
iret
in
xor
mov
xor
adc
pop
popa
pop
mov
xor
add
jp
test
mov
or
cmp
add
and
xorb
icebp
jne
mov
push
test
push
int3
pop
xchg
or
cmpsb
add
or
js
iret
fiaddl
mov
mov
xor
daa
or
mov
jb
or
mov
inc
lcall
xchg
into
dec
adc
sarb
jg
jl
andb
scas
adcl
jl
das
mov
jg
or
jecxz
je
xor
out
or
ljmp
iret
popf
push
fadds
or
adc
stos
or
mov
stos
add
cltd
rcr
lahf
or
aas
enter
or
inc
arpl
sti
aad
orl
repz
xor
inc
fiadds
xor
lret
sub
mov
mov
jne
sbb
push
xor
sub
xchg
cmp
fldenv
xor
xor
jnp
or
or
xchg
jb
push
mov
sbb
or
je
test
shll
mov
enter
or
mov
pusha
icebp
inc
push
or
push
pop
sbb
test
femms
ffree
cmpsb
out
or
jns
dec
or
xor
jmp
add
test
adcb
loopne
jns
lret
adc
mov
add
sbb
or
pop
ror
test
inc
add
fisubrl
jmp
cmp
xor
out
stc
aas
rol
dec
xchg
cli
nop
xchg
adc
ss
or
push
sub
fisubrs
cmp
fldcw
adc
cmp
cmpl
or
jecxz
xchg
cwtl
xchg
sbb
aam
push
add
mov
add
repz
addb
xchg
mov
cltd
daa
repz
aam
popa
inc
cmc
mov
jnp
mull
mov
add
sbb
repnz
jae
incl
or
aas
lock
xor
sbb
xor
pusha
dec
mov
add
inc
fwait
xchg
pop
outsb
mov
or
jne
das
inc
add
push
xchg
into
imul
out
std
jb
pushf
les
repz
or
sub
dec
icebp
or
rcll
push
clc
add
pop
jno
loopne
cmp
sbb
outsl
push
bound
rorl
aad
je
imul
push
insl
mov
and
insb
mov
stc
xchg
cmc
add
inc
mov
out
mov
cwtl
jno
mov
in
mov
into
out
add
jecxz
jb
lea
arpl
sub
inc
dec
add
jns
jmp
mov
loope
sahf
cmp
insl
sbb
add
jnp
mov
rcrl
pop
mov
popa
fiadds
xor
xor
idivl
cmc
sbb
push
dec
cld
shrb
sti
push
les
imul
clc
push
mov
pop
push
les
addr16
stos
fisubl
lret
dec
rolb
or
sub
outsb
sub
movsl
mov
cmp
loop
cmpl
pop
cmpb
daa
sbbl
pop
inc
gs
inc
mov
sub
add
lahf
sarb
jecxz
mov
pop
fidivs
scas
mov
orl
cltd
fwait
addr16
negl
dec
lods
aas
mov
cmp
sbb
das
pop
sbb
dec
data16
and
flds
in
orl
mov
mov
cmp
xor
mov
and
mov
push
push
lret
mov
popa
xchg
dec
icebp
add
push
lahf
inc
pop
scas
scas
bound
icebp
das
add
adc
adc
mov
pop
cmp
jae
xchg
pusha
dec
std
gs
fldenv
fwait
repz
test
cs
lock
xor
add
popa
and
mov
aad
ficoms
jne
fsubrs
cmp
inc
sarb
jle
mov
fimull
adc
scas
sub
mov
dec
repnz
pop
cmpsl
stos
fcompl
test
shrb
mov
pusha
in
inc
xchg
outsb
stos
jle
mov
xor
jno
or
cld
shrb
cmc
mov
movb
xor
xchg
popa
jnp
icebp
scas
fsubrl
insl
nop
decb
mov
push
cmp
cmpsb
insl
mov
mov
les
testl
adc
out
push
daa
push
pop
mov
pop
xor
shlb
push
and
cmp
push
test
sar
stc
inc
int
mov
push
pop
sahf
faddp
xchg
or
bswap
and
push
adc
or
imul
xor
mov
lods
sahf
adc
adc
fidivrs
in
sahf
mov
xchg
adc
pop
rol
fs
pop
add
cli
fsubrs
mov
xor
pop
mov
dec
and
xor
mov
gs
fldl
lea
rclb
xor
inc
mov
mov
push
mov
pop
in
fadd
xor
adc
popf
xor
js
fwait
pop
mov
pop
aaa
mov
icebp
shlb
sti
inc
shrl
int
mov
add
cmp
rol
mov
and
xchg
pop
fwait
xadd
pusha
mov
ret
mov
cmpsl
cmovb
addl
test
shlb
dec
jg
cmpsl
rolb
adc
jmp
sub
incb
jnp
jbe
pop
lock
and
icebp
dec
out
pop
dec
aad
fidivs
add
icebp
sbbl
mov
test
in
jns
testl
pop
xorb
inc
jmp
push
mov
inc
mov
or
mov
dec
push
ljmp
and
dec
jl
ret
push
les
les
mov
or
fsubp
lds
in
or
sub
loope
mov
test
rorb
scas
adc
add
mov
cli
inc
xchg
add
cld
aad
repz
sbb
pop
in
lods
es
jecxz
push
xchg
gs
je
dec
dec
cli
in
out
sbb
add
daa
jae
stos
ficompl
cli
les
or
jb
mov
inc
jnp
mov
jge
les
fldl
mov
pop
imul
dec
jo
mov
scas
scas
jb
lods
sub
cld
mov
sub
scas
xor
sbb
fbstp
mov
inc
js
cmp
and
add
xchg
inc
sbb
imul
mov
xlat
dec
stos
sub
cmp
in
xchg
xchg
jo
dec
addr16
cmpsb
sbb
stc
fxtract
ss
and
sbb
in
xchg
mov
inc
lods
outsl
mov
out
fstl
scas
sbb
sub
mov
movsl
add
pusha
xlat
push
shrb
sbb
xor
mov
gs
outsl
in
and
push
xlat
xchg
and
dec
push
lods
pop
sbb
sbb
fldl
sub
xchg
inc
xor
pop
mov
fisubrl
or
out
fnstsw
stc
fsubrs
sbb
ret
in
mov
in
and
mov
je
cmp
mov
bnd
clc
and
sbb
hlt
inc
push
xchg
ja
shll
mov
aaa
inc
cmp
add
rcrb
cmc
insl
add
ret
and
decb
xor
js
push
popa
dec
sti
cmp
gs
adc
test
popa
mov
or
rorb
dec
cmp
test
xchg
rolb
or
jmp
and
xor
popf
add
jnp
sbb
mov
or
inc
shr
add
mov
rolb
xor
fisubs
or
fcompl
repz
addr16
adc
jl
test
mov
sbb
sti
inc
sub
xor
adc
jnp
cs
jg
call
data16
add
inc
iret
sbb
movsb
and
imul
push
cmp
sub
xchg
test
cmp
aam
mov
mov
jno
jmp
xchg
or
je
mov
test
jbe
popa
in
mov
push
outsl
adc
sub
inc
ds
aaa
adc
cmp
test
mov
cmp
clc
mov
mov
lcall
insl
and
sti
pop
aaa
push
sub
add
test
ret
adc
and
and
or
rcrl
rcrl
gs
xchg
lret
xchg
xor
stos
adc
jecxz
jp
jns
lods
pop
jmp
cmpsl
addr16
or
and
les
cli
jecxz
fiaddl
sti
xor
mov
or
test
out
dec
dec
or
mov
in
rolb
bound
out
loope
shll
stos
insl
mov
adc
lods
inc
test
inc
mov
stos
fimull
jns
mov
pop
fdivrl
mov
jmp
shlb
test
pop
sbb
cld
js
data16
divl
mov
or
std
inc
mov
fdiv
mov
add
mov
cs
lea
mov
xchg
or
xorl
rcrb
mov
les
lahf
outsl
in
lret
and
jno
inc
mov
xor
shr
adc
jo
sbb
loop
scas
in
cmp
ss
cmp
inc
mov
jno
mov
rolb
nop
in
jnp
sbb
movsb
test
pop
cmpsl
jnp
lds
fiadds
jo
mov
out
in
mov
adc
stos
fdivl
xchg
cmpsb
stos
mov
mov
xorb
adc
icebp
sbbb
or
mov
aad
push
jmp
pop
shlb
test
into
subl
and
pop
stc
xor
iret
mov
and
in
inc
sbb
lods
stos
rorb
lret
mov
cmpsb
pop
jmp
mov
es
cwtl
iret
push
fsubs
cmp
pop
scas
mov
gs
jmp
push
and
lea
mov
or
mov
aam
or
es
and
dec
lods
mov
mov
sbb
adc
test
ss
ja
sahf
mov
pop
into
adc
mov
imul
fidivs
ffree
popa
mov
in
mov
or
push
ja
imul
xchg
pop
data16
add
popa
push
jecxz
shlb
das
fimuls
pop
add
xchg
adc
hlt
repz
leave
shll
mov
out
out
fistps
mov
mov
paddusw
mov
inc
nop
add
xchg
dec
pop
js
fwait
cld
pop
aad
js
sahf
push
push
add
mov
xchg
jae
pop
fbstp
xor
cmp
mov
xchg
shl
sbb
outsb
add
sbb
cwtl
sahf
and
adc
inc
repnz
lea
mov
add
fisttpll
sarb
xchg
rorb
xchg
xor
dec
xrelease
mov
ret
and
popf
lret
insl
shlb
xchg
rclb
mov
push
dec
enter
sub
fwait
cmp
inc
dec
mov
sub
out
outsl
xchg
mov
test
clc
sbb
push
lock
pop
xchg
leave
mov
addr16
jno
mov
in
inc
dec
mov
sub
shl
lea
mov
orl
rorb
sbb
xchg
in
or
dec
scas
ficoml
mov
cmpl
xchg
and
scas
push
cmpsb
cmp
dec
icebp
xlat
sbb
ja
add
pop
shrb
daa
jecxz
data16
in
cs
adc
inc
pop
mov
mov
fcoms
lret
or
movsb
and
outsl
cld
fdivl
frstor
push
fstl
sar
dec
or
jge
pop
cld
imul
shlb
loopne
andb
cmp
arpl
cmp
cmpsl
mov
add
nop
out
push
pop
lahf
jae
daa
stos
clc
std
clc
divb
xor
out
xchg
push
xchg
js
cmp
xchg
movsb
lea
pop
adc
jbe
adc
xor
dec
adc
xchg
xlat
jp
and
aam
hlt
xchg
xchg
push
push
fiadds
out
mov
add
int3
push
inc
push
xchg
lcall
repz
xchg
jl
add
shlb
push
sub
mov
push
pop
xchg
mov
lea
in
push
lods
and
sub
les
add
mov
leave
mov
inc
cmp
pop
sarb
adc
jns
sbbl
inc
cmp
jae
or
out
cmpsb
dec
sbbl
stc
mov
lds
addl
pop
imul
sti
pop
clc
push
push
outsl
push
mov
mov
lods
sbb
push
mov
xchg
fidivl
in
leave
inc
cwtl
comiss
mov
rorb
repz
or
test
cmpsb
mov
aad
cs
inc
fldl
xchg
repz
add
push
jno
mov
mov
xchg
sbb
inc
sbb
sbbl
arpl
inc
inc
mov
fisttps
add
shl
pop
pop
sarb
mov
imull
addb
nop
scas
sbb
loop
fiaddl
cltd
sbb
sub
mov
imul
adc
shr
mov
push
mov
xchg
lods
mov
pop
lods
aad
pop
repz
dec
sbb
jno
das
ljmp
add
pop
shl
orb
push
hlt
jb
data16
mov
xchg
rcrl
mov
push
cmp
xorl
loopne
aaa
mov
adc
pop
mov
clc
mov
fldl
imulb
xchg
mov
lret
add
es
lcall
stos
sbb
sbb
data16
sahf
mov
shl
xchg
push
aam
jg
xchg
or
imul
icebp
jb
rcrb
xchg
lret
rclb
fwait
xchg
cmp
mov
or
lea
xor
pop
and
add
push
or
pop
adc
shrl
gs
in
jb
subb
adc
addr16
cmpsb
mov
add
push
leave
rcr
aad
ret
adc
or
mov
inc
jmp
mov
aas
ds
ja
mov
out
rcr
shlb
cmp
or
ljmp
push
out
or
and
sub
aam
inc
popf
in
inc
jae
mov
jmp
mov
gs
test
call
xor
jmp
loopne
iret
jo
aas
or
mov
pop
pop
mov
in
std
adc
in
ror
pop
scas
jnp
and
mov
mov
adc
scas
inc
in
cmp
movsl
push
mov
sbbl
mov
lret
add
xchg
mov
shlb
mov
lock
fwait
cmpsl
loopne
lods
jecxz
mov
vpsubusw
les
imull
jecxz
and
cmp
shl
je
or
mov
or
xor
insl
add
fwait
dec
test
push
adc
adc
outsl
xchg
push
stos
pop
mov
aad
cld
lds
pop
xor
inc
fwait
push
push
cli
lahf
stos
push
in
push
cmp
imul
cmp
fbld
xlat
lds
sub
les
popf
mov
mov
arpl
mov
and
xchg
scas
movb
push
jne
add
xor
dec
aaa
push
cmp
ss
dec
mov
push
ret
sbb
test
add
pop
repz
cmp
and
les
ds
cmp
imul
into
fwait
jae
insl
repz
xchg
dec
mov
mov
or
js
cs
orl
adc
jns
mov
sahf
test
sarb
lock
or
js
fiadds
cmp
fnstsw
add
mov
add
inc
out
adc
mov
cs
xor
add
jbe
cmp
addr16
mov
inc
cmp
mov
jecxz
cmp
ss
sub
shr
pop
addl
mov
movsl
sbb
add
rcl
xor
loopne
push
repnz
aaa
xchg
xchg
jo
jae
dec
sahf
lods
push
cmp
stos
fadds
add
sub
cmpsb
loopne
inc
dec
rclb
test
dec
pop
cmpl
sub
pop
mov
cld
repnz
testl
sbb
inc
testb
pop
push
into
add
mov
dec
jb
cmp
inc
les
cmp
mov
xchg
mov
dec
xchg
xor
sub
mov
or
or
pushl
mov
jle
jne
mov
pop
sub
or
hlt
imul
mov
ja
add
mov
popa
ss
aas
fstp
loop
fidivs
xchg
stos
pop
dec
imul
out
repz
pop
mov
xchg
rcr
mov
mov
fidivs
rclb
adc
mov
testl
adc
repz
insl
xor
jne
adc
jg
add
scas
shlb
gs
sbb
stos
std
insl
cld
in
pop
data16
and
dec
addl
adc
movsl
pop
shll
fldl
outsl
mov
dec
test
js
xor
shr
mov
push
lds
sub
add
out
mov
xchg
xchg
and
sbb
sub
lods
push
nop
pop
cld
adc
shl
push
cmp
and
outsb
push
and
sbb
out
sahf
mov
std
lcall
call
inc
adc
jecxz
in
mov
dec
roll
mov
pusha
and
std
sub
fsubl
xchg
sub
mov
xchg
pusha
stc
rcr
cmp
ret
mov
mov
pusha
push
jbe
push
and
sahf
sahf
imul
pop
and
push
sbb
mov
dec
adc
lds
push
jae
std
sbb
push
cltd
mov
shl
sti
mov
or
in
mov
or
mov
jb
jae
repnz
inc
adc
and
aam
pop
in
cltd
shlb
adc
aad
fwait
push
es
repz
iret
or
aaa
fdivl
scas
enter
cmp
mov
or
sbbl
ficompl
test
add
cmpsb
mov
cmp
loop
add
xchg
fisttpll
push
xchg
popf
movsl
pop
jnp
cmpsl
imul
outsl
fucom
ja
mov
sub
add
jae
cs
cmpsb
aas
les
ljmp
ret
sahf
mov
ds
fidivrs
adc
rcrl
sub
mull
fmuls
push
mov
loopne
and
jecxz
test
int3
sbb
mov
or
or
dec
stos
xor
loopne
dec
mov
sub
push
adc
arpl
das
sub
imul
or
fucomi
or
mov
adc
jno
pop
jns
outsb
ja
xchg
scas
daa
mov
dec
or
rclb
jp
rorb
mov
ss
ret
ds
lods
daa
pminsw
inc
fs
lea
cmpb
mov
test
cmpsl
mov
mov
into
decl
icebp
mov
lds
add
dec
cmpsb
je
sti
jecxz
int
filds
arpl
mov
jle
outsl
xor
add
jnp
cmpsl
xor
pop
in
xor
dec
adc
imul
push
jne
mov
shrl
mov
sbb
inc
push
lcall
xorl
test
inc
rol
pushf
sti
lret
repz
add
sub
out
nop
cmp
rcr
inc
mov
push
sarl
clc
ret
xor
jno
inc
dec
cmc
fnstsw
cmp
push
add
fnstsw
outsl
xor
inc
mov
jmp
inc
shll
movsl
xchg
push
jg
outsl
insl
loope
pushl
pusha
ret
fidivs
or
jns
dec
sbb
or
cmpsl
push
out
push
inc
cmp
and
jecxz
cmp
add
jmp
mov
sti
or
sbb
mov
sbb
mov
cmp
cmp
out
dec
mov
out
mov
pop
enter
pop
mov
cwtl
mov
pushf
scas
mov
and
push
and
push
les
jge
xchg
ret
mov
movsb
into
cmp
gs
push
lret
lock
aad
sbb
ss
sub
cmp
test
add
sarb
decl
les
and
dec
incb
negb
push
or
into
xchg
inc
andl
sub
movl
cmp
gs
decl
dec
sub
push
inc
loop
int3
mov
dec
xor
shlb
inc
and
jnp
addr16
mov
dec
inc
mov
fwait
cmp
and
push
shlb
add
xor
push
ds
push
sti
push
dec
xchg
jge
hlt
and
mov
xor
xchg
ss
jnp
push
hlt
addr16
pop
mov
and
push
pop
bound
les
adc
test
out
fcoml
rcrl
sub
and
bound
xor
scas
sbb
in
xor
dec
lahf
pop
cmp
jne
test
fstps
sarl
mov
xor
add
jp
sti
fwait
stos
push
cmp
test
pop
scas
les
jmp
pop
mov
push
add
cmp
sahf
into
fidivrs
add
fs
mov
xor
lods
cmp
fwait
mov
fdivrs
das
jnp
or
popa
cld
es
xor
scas
sub
pop
daa
adc
inc
mov
push
mov
xchg
xchg
pop
out
loopne
push
push
mov
xor
out
sti
pop
shl
lods
xchg
rolb
sbb
stos
dec
sarb
sbb
pop
loop
xchg
sti
jnp
loop
outsl
adc
xchg
outsb
mov
dec
mulb
lcall
test
repnz
mov
add
inc
jne
push
add
jge
fld
dec
sbb
inc
cmp
iret
jne
mov
pop
movsl
or
and
rclb
repz
fildll
aaa
ret
mov
fbstp
or
notl
lock
decb
dec
adc
lar
adc
pop
pop
dec
scas
dec
hlt
int3
xor
je
cmpsb
loope
mov
cmp
repz
mov
sub
mov
test
push
loopne
xchg
sbb
add
loope
jo
pop
inc
pop
adc
mov
into
pop
mov
jne
sbb
mov
shl
mov
rorb
mov
mov
jae
xor
adc
mov
inc
out
fsubs
lahf
mov
push
inc
add
push
sahf
fidivrs
scas
stos
mov
in
and
or
sbb
mov
xor
dec
sub
loop
sahf
sub
ss
les
mov
or
ffreep
mov
les
fisubrs
xchg
sub
push
iret
in
xchg
add
adc
cmc
mov
jl
out
ror
jmp
insl
jp
lret
movsb
outsl
push
add
sbb
shlb
loop
dec
jne
mov
dec
sub
out
std
fcmovnb
rclb
fsubl
sub
sahf
repz
and
fstps
xor
stos
stc
xchg
mov
outsl
xor
add
clc
mull
inc
stc
mov
and
mov
add
inc
sahf
icebp
imul
popa
outsl
mov
push
adc
mov
and
xchg
orb
fsubrl
movsb
fcompl
dec
adc
mov
jno
mov
rcr
aas
fcmove
mov
mov
inc
cmpl
push
mov
mov
xlat
aaa
and
jno
adcb
mov
in
int3
lds
int3
mov
xchg
mov
push
clc
mov
jecxz
fcmovne
jno
mov
test
xchg
sbb
cmpsb
cmp
in
add
lea
shll
in
and
rolb
jp
cmp
mov
repz
inc
or
stos
xchg
mov
out
dec
movsb
xchg
notl
pusha
push
push
stos
push
push
push
stos
xchg
adc
inc
scas
fistpl
lret
dec
nop
test
or
testb
iret
loop
lea
mov
shlb
fwait
or
rolb
lods
fwait
jmp
adc
sbb
scas
jmp
push
in
cld
stos
rcrl
push
out
xchg
mov
rorb
sub
stos
sahf
mov
pop
dec
cmp
cmp
adc
pop
ret
test
je
cmc
add
aad
add
jbe
cmp
cld
iret
jl
jae
loop
gs
xchg
scas
adc
xchg
data16
lea
inc
ret
addr16
repnz
push
xorb
xlat
stos
cmpsl
jbe
and
lret
les
jg
add
mov
push
mull
popa
cmpsl
push
xchg
lcall
push
cmp
or
mov
out
fiadds
outsl
add
addr16
jns
scas
mov
in
sbb
call
shl
dec
mov
test
sub
mov
xchg
stos
js
xchg
xchg
shl
ret
add
ret
outsb
push
jmp
ss
popf
adc
ret
ljmp
sbb
mov
dec
cmc
mov
in
test
mov
pop
push
out
cmc
out
mov
add
push
pusha
pop
lods
pop
xor
pop
aad
dec
lret
sbb
stos
jle
out
adc
pop
push
mov
sbb
js
mov
divl
fisubs
pop
test
test
stos
stos
loope
push
mov
loop
test
fwait
or
in
pop
inc
jle
add
dec
cwtl
cld
and
and
fwait
push
jbe
pushf
dec
cs
mov
das
adc
mov
test
scas
pushf
inc
xchg
std
pop
jge
mov
and
push
out
les
inc
jge
ds
push
jecxz
jne
jno
push
mov
out
adc
push
cld
sarb
gs
mov
dec
je
and
arpl
mov
cmpsl
les
adc
xchg
dec
mov
fcmovnb
and
arpl
cmp
xor
and
sbb
ja
adc
rcrb
or
ret
daa
ja
add
scas
mov
outsl
aas
mov
inc
inc
jae
into
gs
mov
mov
mov
out
in
or
or
jae
fisttpl
lock
push
les
mov
lods
test
in
shlb
cmp
clc
fistl
sub
dec
clc
and
inc
loopne
inc
add
sub
and
in
icebp
add
jle
out
cli
loopne
rcrb
push
and
xchg
inc
xor
stc
mov
stos
cmpsl
add
sbbb
cwtl
inc
popl
push
pop
inc
pop
sbb
xor
scas
or
xchg
mov
lods
adc
sub
mov
std
push
push
pop
push
mov
push
sbb
dec
mov
xchg
sahf
cmp
fldcw
jb
inc
iret
cmp
pusha
sub
pop
add
add
iret
lret
push
addr16
and
sub
bound
pop
inc
dec
mov
js
cmp
in
gs
clc
jg
or
mov
dec
jne
movsl
fildl
ret
mov
pop
movsl
and
cmp
jo
ficoml
push
push
cmp
faddp
jno
into
test
inc
jns
in
push
inc
mov
jp
divl
fnstsw
and
push
push
xchg
stos
repz
das
cmp
sub
xor
idivb
cmc
mov
jbe
sbb
xor
rorl
jl
std
rcll
scas
insl
ss
outsl
in
lea
jb
xor
inc
push
sahf
dec
arpl
arpl
ret
cmp
push
mov
inc
cmpsl
mov
test
in
arpl
stos
lret
or
rclb
or
gs
scas
addr16
xor
dec
fidivrs
std
inc
cmpsb
mov
fidivrs
scas
sti
cmpsl
xor
add
loope
add
fsts
mov
pop
and
or
stc
mov
ficomps
insb
les
dec
cwtl
loope
add
in
xor
or
ret
outsl
mov
out
scas
hlt
fs
data16
pop
push
pop
sbb
mov
cmpsb
mov
test
or
stos
mov
add
lret
roll
xor
les
mov
lahf
lock
int3
cmpsb
cmp
mov
xchg
mov
notb
stos
pop
mov
xchg
mull
adc
sbbb
js
insb
std
push
imul
xchg
push
gs
incl
pop
add
aam
fildl
inc
push
test
mov
aam
cmp
mov
dec
jnp
je
xchg
mov
js
add
xchg
adc
push
push
and
leave
incl
cmp
mov
js
loopne
insl
lods
out
push
adc
jmp
stos
std
out
xor
movsb
sub
add
les
ret
sahf
iret
dec
mov
jg
fwait
push
sub
arpl
inc
leave
xchg
rorb
ret
mov
adc
or
addl
fdivr
xchg
lret
fdivp
xor
push
aam
dec
cwtl
sarl
ror
push
mov
xchg
cmp
adc
fmul
or
cld
mov
aas
stc
shlb
lcall
cmpsl
pop
xor
mov
add
test
and
sarb
ss
lret
dec
and
jecxz
mov
outsl
or
push
and
test
pop
mov
addb
insl
pop
cmpsl
or
int3
lea
mov
mov
add
jbe
xchg
bound
push
jae
xchg
pop
mov
xchg
ret
jne
sbb
loop
and
pop
subb
test
add
les
pop
cmp
cld
mov
push
xor
ret
cmpsb
sbb
adc
push
ja
rolb
aas
ja
xor
popa
add
aam
xor
shl
xor
adc
loopne
jg
mov
and
xor
lea
xchg
cltd
and
ds
rorb
out
pop
out
xlat
add
idivl
ret
add
inc
sbbb
loop
out
cwtl
rol
stc
inc
push
mov
inc
inc
mov
imul
push
xlat
pop
addb
enter
xor
mov
stos
bound
mov
inc
mov
adc
outsb
lds
mov
mov
fnstenv
cmp
mov
sub
add
push
inc
adc
pushf
jne
repz
push
xor
lahf
repnz
rorb
adc
pop
xchg
cmc
mov
xchg
loope
jnp
xchg
jge
jbe
add
outsl
jne
jle
cmp
mov
mov
push
rcrl
pop
loope
xlat
aad
push
bound
pop
pop
decl
aam
cmp
pop
push
jecxz
ror
fmull
insl
fsubp
dec
dec
and
jmp
int
repz
mov
mov
mov
pusha
aas
aam
addr16
pop
fcomps
dec
cmp
pop
neg
outsb
xor
jne
sub
push
cld
push
xchg
stos
dec
push
or
sbb
pop
repz
aas
out
push
pop
lods
xchg
stos
dec
into
and
fiaddl
mov
or
hlt
mov
sbb
xor
sbb
cmpsl
adc
scas
dec
mov
add
xchg
inc
mov
pop
mov
mov
xchg
or
sub
iret
dec
or
addb
jo
and
push
mov
mov
pusha
xchg
imul
mov
add
sar
imul
inc
cmp
add
movsl
notl
movsb
insl
mov
mov
test
add
stos
mov
lods
gs
push
mov
ret
arpl
jmp
repnz
test
push
add
or
lahf
and
imul
xchg
sbb
lret
mov
dec
ret
xchg
dec
loope
lcall
rclb
adc
addr16
xlat
cmpsb
dec
inc
in
jle
sbb
popf
cmovno
dec
shlb
mov
loope
mov
pop
imul
sub
pop
rcrb
es
mov
or
fildl
in
push
xlat
dec
xchg
and
mov
inc
xor
and
les
inc
or
push
sahf
movl
fwait
out
cmpsl
std
push
xchg
cmc
stos
test
push
inc
mov
ja
icebp
xorb
xchg
lret
test
add
add
jmp
pop
sub
jnp
aad
mov
xchg
dec
repz
push
mov
test
cmp
or
pop
pop
adc
mov
push
mov
xchg
or
or
imul
scas
add
aam
sub
lock
gs
addb
mov
int3
ljmp
xchg
popa
iret
cmp
push
and
mov
adc
es
je
mov
jno
mov
insb
mov
enter
add
xlat
mov
sub
arpl
fstps
add
mov
and
cld
sbb
das
push
fidivrs
or
sub
dec
pop
or
mov
cmp
rclb
pop
jb
inc
cmpsl
mov
sbb
gs
jns
push
cmp
cmp
jae
lds
fnstenv
cmp
je
rorb
xchg
add
les
pop
push
push
mov
and
lock
inc
jns
loopne
les
shll
and
lret
mov
adc
pop
dec
mov
lret
mov
xor
jbe
fiadds
mov
fisubl
xor
out
and
xor
xchg
cmpl
data16
popf
add
fimull
sbb
aas
sti
aaa
adc
pop
cmpsb
adc
mov
in
out
lds
nop
lods
xor
dec
outsl
add
sub
sbb
fisttps
jg
inc
xchg
xchg
sahf
lahf
in
or
mov
gs
gs
push
jno
or
adc
out
cmp
xor
lock
imul
xchg
std
adc
xorl
gs
hlt
and
aad
popa
lods
jne
sub
out
shll
pop
ds
inc
int
stos
inc
pop
or
jl
ret
xchg
pop
cld
test
mov
imul
adc
sub
addr16
mov
sbb
inc
in
sti
add
test
cmp
pop
push
mov
inc
push
decl
sbb
mov
stos
adc
cmp
lret
xchg
movzwl
xchg
sahf
pop
cmp
sahf
call
dec
mov
loope
cmp
add
lods
xchg
mov
and
xor
mov
xor
popa
jo
pop
push
mov
cmp
dec
sahf
mov
addr16
pusha
adc
sub
push
cmpsb
jge
mov
mov
orl
pxor
repnz
inc
imul
into
add
jne
add
mov
outsl
pop
sbb
xchg
leave
neg
sti
sub
cmc
lret
dec
mov
cltd
lcall
lods
out
pop
in
xor
inc
mov
xchg
int3
xor
test
push
or
xchg
cmp
mov
add
cmp
mov
sbb
pop
pop
xor
push
dec
or
pop
stc
jl
mov
dec
cmpsb
mov
xchg
js
lods
outsb
mov
imul
sti
cli
mov
icebp
adc
ds
or
pushf
je
dec
repz
stc
or
jge
xor
jb
call
out
movl
adc
jnp
push
pop
pop
add
pushf
ret
roll
int
ss
add
iret
and
negb
shll
lock
sub
or
mov
ss
inc
mov
or
fidivrl
or
ss
bound
lcall
mov
hlt
fmull
or
mov
addr16
push
cmpsb
jo
mov
and
testl
pop
xor
pop
or
add
push
sub
xor
or
jns
fcoml
dec
xchg
rcrl
mov
cwtl
push
sbb
push
scas
mov
out
jecxz
mov
push
test
arpl
sub
sub
inc
fsubrl
mov
aaa
fnstenv
jnp
xor
and
or
or
iret
adc
and
cmpsb
aaa
aad
pmulhuw
inc
dec
mov
add
pop
jg
loopne
pop
bnd
repnz
js
ja
add
in
and
cld
aad
addl
push
movsb
leave
xchg
push
mov
sbb
add
push
aam
cld
mov
mov
fnsave
scas
xchg
and
add
sti
je
lds
mov
lcall
jmp
inc
inc
fmul
and
stos
xlat
add
adc
mov
inc
or
ret
and
lret
push
or
cmc
xorb
inc
les
sub
aaa
movsl
sbb
or
popa
out
sbb
loopne
jmp
lret
cmp
dec
xchg
mov
push
inc
pop
push
inc
test
sbb
das
push
lds
int
imul
outsb
cmp
aas
xchg
fimull
sbb
mov
xchg
push
adc
test
jae
sahf
or
sbb
cli
jecxz
mov
nop
jae
sub
mov
fmuls
popf
enter
inc
adc
cld
mov
bound
inc
jns
ret
js
repnz
inc
pop
xor
or
ret
mov
and
cmpsl
leave
mov
sbb
adcb
sbb
inc
lret
repz
inc
cli
pop
fsts
fs
jg
cmpsb
jb
movsb
dec
push
shrb
add
mov
xchg
mov
ret
dec
add
stos
lcall
mov
neg
pop
lea
pop
dec
pop
dec
jecxz
imul
xchg
inc
cmpsl
sbb
lods
inc
mov
dec
icebp
mov
mov
cs
cwtl
and
mov
ss
addl
sub
sbb
hlt
pop
loopne
les
jbe
jecxz
jo
dec
in
lods
sub
xor
inc
mov
dec
inc
fisubrs
inc
pop
cmp
push
or
sub
das
jecxz
iret
push
mov
shll
aam
lea
ret
mov
add
dec
and
popf
sub
fisttpl
icebp
les
dec
popa
imul
mov
pop
add
add
dec
loopne
shlb
inc
add
or
lods
aas
adc
cld
loopne
jbe
outsl
out
mov
xchg
xor
pop
and
or
insb
in
cli
push
add
rol
dec
jne
push
lcall
cmc
add
add
test
test
mov
std
cmp
cmpsb
push
sbb
into
sbb
sbb
mov
test
sahf
shrl
ljmp
adc
jmp
mov
popa
je
call
int
cltd
xchg
sbbb
dec
fwait
bound
xchg
loope
pop
adc
scas
mov
and
mov
outsl
mov
test
ficoml
adc
inc
cmp
out
adc
test
cld
bound
add
lret
xchg
jnp
mov
xor
or
stos
iret
loope
movsl
les
in
adc
lcall
insl
and
push
outsl
and
dec
mov
xor
mov
jle
inc
in
ficoms
sub
jbe
add
sahf
sub
xchg
dec
xchg
rcrb
out
mov
aad
and
dec
mov
pop
jo
dec
jl
frstor
punpcklbw
pop
jns
mov
call
pop
loop
movsl
mov
push
popf
rcrl
fstps
mov
clc
xchg
mov
adc
mov
jle
icebp
scas
aaa
pop
out
pop
daa
cmp
mov
mov
std
sub
cmp
xor
adc
pushf
mov
cwtl
xchg
xorl
sti
mov
aaa
sbb
cli
outsl
rorl
mov
aad
or
xchg
insl
xchg
dec
xor
push
inc
lret
cmc
pop
leave
add
test
test
jne
mov
cmpsl
jmp
sbb
ret
fcmovnb
imull
aad
mov
mov
je
rol
and
xchg
fs
outsl
fisttps
das
mov
dec
fistpl
jae
call
push
dec
jecxz
movsl
stos
sbb
mov
dec
mov
mov
push
jle
xor
ret
mov
sbb
lcall
push
adc
movsl
push
aaa
mov
outsl
lds
mov
and
xchg
call
push
jecxz
negb
jnp
aam
mov
cmp
or
lcall
stos
mov
sub
xorl
lods
adc
mov
in
or
cmp
cmp
push
jb
or
jae
xchg
mov
sbb
xor
adc
lock
sbb
popl
popf
jns
cmc
jbe
dec
jb
jb
adc
clc
iret
xor
pop
pop
jne
mov
out
sbb
fidivrs
dec
pop
adc
cmpb
sbb
loope
add
mov
movsl
in
adc
repz
adc
cmp
cmpsl
and
mov
loopne
pushf
int3
jb
pop
pop
lcall
dec
leave
ret
xor
push
add
sbb
xorl
cmp
sub
daa
cltd
mov
inc
lret
out
lahf
dec
sub
aam
sub
mov
or
xor
leave
mov
into
fidivrl
mov
xor
pop
push
jg
cmpl
xchg
xchg
push
adc
xchg
push
les
or
xchg
cli
loopne
mov
pop
push
cmp
sub
inc
pop
or
es
rcrb
pop
out
icebp
imul
cmpsb
popa
pop
sub
imul
out
cmp
add
jbe
inc
or
inc
inc
or
rorb
fcomps
and
cs
xchg
shll
cmp
fdivl
loopne
cmpsb
or
add
aam
sbb
jno
stc
add
mov
stos
lcall
sbb
gs
adc
pop
shrb
nop
into
adc
and
test
jmp
data16
sbb
addr16
dec
or
insb
xchg
mul
out
lds
jae
out
jp
popa
mov
dec
xor
dec
dec
dec
gs
push
decb
mov
test
jns
dec
icebp
dec
pop
mov
repz
ret
movsb
aam
scas
jno
fstps
lds
std
push
les
push
push
cmpsb
stos
and
test
cltd
gs
daa
stos
and
rcrb
lret
jmp
outsb
add
push
lods
lods
sbb
aaa
rclb
mov
or
dec
mov
mov
inc
sarb
push
or
cmp
mov
gs
ficompl
xchg
xchg
jae
faddp
xchg
xchg
mov
adc
push
cli
mov
push
push
add
push
adc
jmp
add
inc
sti
pop
inc
or
es
shrb
ja
mov
or
int
je
sbb
les
adc
dec
cmp
add
scas
in
and
mov
mov
les
inc
add
mov
out
inc
jns
icebp
shlb
add
stc
push
clc
or
xchg
dec
mov
es
pusha
or
nop
inc
mov
inc
ret
dec
adc
lods
jg
push
mov
fsub
shlb
dec
incl
mov
sarb
add
jg
fs
addr16
push
cmp
xlat
inc
arpl
sahf
sub
mov
lret
pop
fidivs
xchg
cmpl
add
pop
insb
es
loopne
mov
movsl
daa
into
mov
add
shl
dec
xor
iret
inc
push
xchg
or
sub
push
popf
or
fidivrs
or
cmpsl
or
imul
cwtl
std
ljmp
jbe
mov
pop
js
jae
cmp
stos
shrb
sub
or
test
or
cmpsb
das
in
adc
mov
fisttpl
dec
fsubs
or
xchg
cltd
stc
mov
cmp
je
jge
adc
or
jbe
adc
fcompl
cmova
das
cmpsb
or
mov
lcall
or
jo
scas
cwtl
mov
or
ret
push
out
mov
mov
pop
lret
mov
cmp
cmp
add
inc
xor
sbb
or
pop
xor
fldcw
mov
sub
dec
jge
roll
mov
cwtl
jl
push
sbb
add
adc
ror
push
jne
push
cli
xchg
inc
jp
pop
lock
sbbl
mov
subl
xor
dec
or
iret
or
leave
lods
jg
insb
lret
jbe
xchg
lcall
pop
push
lds
iret
pushf
jbe
mov
jg
pop
sub
jnp
push
cmp
in
lea
out
add
daa
xor
and
jno
or
xchg
fiadds
or
icebp
incb
pop
xchg
cmp
xlat
dec
sbb
xchg
mov
push
ficompl
xchg
dec
mov
or
lds
or
mov
dec
iret
andl
add
cmpsb
std
or
inc
push
add
jle
sub
pop
dec
aad
sbb
inc
or
inc
leave
incl
out
stc
das
popa
push
or
int
lds
xor
or
mov
or
or
gs
mov
inc
les
das
fucomip
rep
add
inc
test
loop
insb
mov
mov
and
popf
inc
push
or
mov
nop
iret
rol
xlat
pop
add
cmp
or
sarb
outsb
inc
test
mov
mov
rcl
in
and
add
mulb
jnp
jmp
fnsave
push
ret
xlat
or
stc
scas
loopne
std
bound
cmp
or
iret
mov
or
adc
xchg
sbb
push
andb
test
sahf
or
jae
leave
pop
jnp
mov
or
in
je
or
fdivrl
lret
or
loopne
movsb
xsha256
cmpsb
push
popa
or
outsl
dec
push
or
add
jb
stc
push
xchg
out
sahf
dec
lcall
or
insl
lock
or
aas
cli
inc
stos
sbb
or
in
inc
or
mov
jae
aad
inc
pop
sahf
mov
pusha
int
or
sub
sub
shlb
addb
jbe
clc
or
or
ljmp
sarl
stos
rol
adc
xchg
shrl
inc
push
jbe
xchg
mov
cli
sbb
popf
aam
jl
jge
mov
out
pop
enter
out
or
std
push
repz
pop
inc
dec
mov
add
xchg
add
out
adc
in
rorb
hlt
iret
js
inc
adc
or
add
fdivrs
xchg
mov
xchg
notb
push
mov
jo
iret
dec
jb
or
xorl
repnz
dec
mov
push
cmp
dec
pushf
imul
scas
adc
or
jle
cld
pushl
xor
jns
out
xor
insb
inc
or
aam
rcrb
fcmovnbe
or
sbb
dec
add
aas
into
ret
add
pop
ljmp
out
clc
xchg
xor
mov
dec
or
pop
xchg
and
or
dec
mov
sti
adc
cmpsb
mov
popf
repz
cmp
fsubs
pop
and
sahf
cmpl
jne
daa
cmp
adc
aas
and
inc
mov
push
fwait
in
loope
subb
push
lcall
scas
jg
pop
outsl
dec
repnz
mov
scas
push
dec
xchg
xchg
or
sub
into
adc
jge
imul
dec
in
pop
add
push
aam
dec
mov
inc
sbb
xchg
aas
repnz
into
dec
add
int
mov
xor
mov
pop
in
or
fdivl
or
in
add
dec
arpl
mov
mov
decl
sahf
ret
adc
jmp
stos
stos
lahf
or
dec
aas
xchg
add
mov
push
adc
sub
jg
cmp
xchg
lods
das
ret
cltd
bound
leave
aam
call
jbe
adc
adc
mov
ror
push
push
inc
mov
mov
fldl
inc
test
sbb
ja
dec
rorl
xor
loopne
dec
add
es
leave
adc
fwait
add
xchg
lcall
popa
fcmovnb
sub
inc
fldcw
mov
push
pop
dec
jmp
aas
cmp
addr16
dec
or
mov
addr16
addl
mov
repz
sbb
subb
mov
outsl
ret
push
pushaw
outsb
sub
dec
stc
ds
orl
les
mov
jne
xchg
push
lock
mov
sbb
sahf
fcmovnb
test
imul
imul
add
sbb
out
xchg
pop
std
lcall
or
lret
inc
mull
cmp
jl
sahf
test
inc
pop
push
packsswb
test
out
push
and
addr16
mov
jbe
dec
dec
cmpl
in
mov
dec
imul
dec
jo
sbb
push
jne
push
jno
mov
mov
rolb
lds
dec
push
cmp
jp
sarb
add
push
loope
inc
or
gs
dec
das
in
orb
push
push
outsl
fsub
nop
mov
jp
sbb
jmp
addr16
fistps
mov
fsubs
mov
jne
push
or
fmul
pop
dec
xor
insl
inc
inc
les
es
addl
mov
or
cmp
lret
inc
inc
ss
inc
stos
mov
push
subb
xor
mull
and
or
in
call
adc
push
xchg
mov
shlb
sub
mov
xchg
stc
mov
in
sbb
adc
adc
negb
jb
xchg
mov
dec
jle
cmpsb
jne
bound
fistl
mov
dec
cmc
push
pop
jge
mov
or
lahf
push
ret
mov
mov
sub
test
push
sahf
test
call
cmp
daa
sbb
jo
rorl
lods
jno
iret
pop
inc
ret
mov
test
lods
fldcw
fwait
lods
mov
andb
in
mov
rol
inc
or
pop
orl
or
push
xchg
xchg
test
les
gs
addr16
shrl
mov
sub
or
adc
push
jg
inc
sub
adc
in
into
ret
dec
pop
dec
popw
iret
sub
mov
sbb
shll
xchg
rolb
loop
out
testb
or
xor
mov
rcrl
dec
sub
fcmovnb
sti
roll
cmp
stc
dec
cmpl
sti
xchg
jl
xchg
hlt
and
hlt
stos
mov
sahf
jnp
and
hlt
outsl
sbb
stos
inc
pop
mov
das
sub
jae
loope
xor
lea
lock
pop
push
add
jge
ss
jb
mov
xchg
ret
jmp
mov
lret
data16
push
jae
add
jno
rolb
cmp
and
popf
push
sar
cld
in
or
and
sub
fwait
adc
out
xchg
sub
xchg
aam
adc
dec
sbb
push
idivl
inc
xor
ret
adc
aaa
in
test
bnd
lods
lock
inc
addr16
or
ljmp
add
pop
sub
xchg
insl
insl
ja
cmp
scas
mov
mov
dec
pusha
adc
mov
pop
sbb
cli
orl
sahf
xchg
jns
div
inc
or
and
inc
pushf
loopne
push
xor
test
pop
in
loop
mov
mov
mov
jl
mov
xchg
jmp
push
addb
cwtl
inc
loope
dec
xor
das
dec
loop
cmpsl
out
jbe
jmp
add
push
mov
lods
push
in
or
adcl
cs
lret
cmp
test
scas
cwtl
aas
add
or
push
adc
xor
loopne
sbb
cmp
lret
mov
pop
mov
dec
jp
dec
mov
jmp
sbb
mov
fisubs
popa
adc
stos
mov
push
outsb
mov
das
push
out
and
cli
or
add
ja
cmp
push
mov
jbe
fsub
adc
inc
cld
mov
push
xchg
dec
iret
imul
mov
fildll
lcall
insb
ffreep
inc
arpl
xor
sub
mov
pop
xchg
outsl
or
xchg
dec
inc
stos
cwtd
fistpll
jle
popa
adc
out
pop
lods
xchg
push
xchg
mov
pop
stos
xlat
fisubs
adc
ss
sar
cmpsl
sub
popf
or
lcall
adc
pop
bound
std
ret
sbb
lods
pop
add
sbb
aas
fiadds
lahf
mov
or
lret
dec
mov
pop
inc
inc
or
fnsave
or
icebp
push
arpl
sub
stos
popa
scas
pop
mov
nop
jns
xchg
mov
daa
loop
cs
int
ret
mov
push
sarb
lods
aaa
lret
fcmovu
add
xor
mov
xorb
inc
loope
fsubp
outsl
mov
push
divl
js
jmp
mov
lods
ljmp
lret
jge
ficoml
sarb
mov
push
add
sbb
push
stos
sbb
repz
pushl
data16
sbb
lds
inc
jp
jecxz
call
cmp
cmp
pop
cmp
push
sub
notb
pop
pop
adc
clc
fmulp
xchg
outsl
rolb
shl
imul
and
lods
test
push
stc
dec
mov
adc
adc
and
addl
aaa
ret
rclb
dec
cmp
pop
xlat
or
pop
cmp
dec
mov
push
lcall
xor
add
xor
cmc
cs
adc
loopne
in
sbb
jbe
test
pushf
dec
aas
jl
es
xchg
xor
incl
add
mov
mov
lahf
mov
mov
out
dec
mov
jl
shrb
and
add
shlb
push
aam
dec
adc
jae
jmp
mov
xchg
xchg
imul
arpl
jne
inc
mov
loop
sbb
sti
jmp
add
stc
add
cmp
inc
or
js
scas
sub
jecxz
mov
pop
movsb
pop
aam
outsl
inc
fucomp
adc
repz
push
das
cmp
sarb
inc
push
or
sbb
leave
aaa
in
nop
pop
mov
lcall
test
arpl
in
xchg
mov
out
xchg
ja
mov
sahf
gs
ficoms
fistpll
sti
jns
loopne
and
mov
mov
xor
das
xorl
pop
mov
nop
dec
in
loop
pop
or
sbb
pop
adc
in
mov
imul
mov
add
dec
cs
jecxz
dec
icebp
ret
or
test
call
shlb
and
and
push
subl
dec
js
mov
jne
inc
jle
lret
das
mov
bound
inc
pop
mov
push
xchg
and
outsl
stc
mov
mov
pop
cmpsl
pop
jo
mov
sbb
sti
mov
xchg
leave
mov
dec
mov
loope
mov
and
stc
outsl
bound
adc
add
mov
push
mov
fisubrs
jg
out
add
push
jle
pop
mov
loopne
and
or
pop
imul
sbb
test
pop
cmp
andl
rcrb
jge
mov
shrl
fdivrs
das
ja
xchg
xchg
cmpsb
in
call
or
push
pushf
pop
dec
fdivl
or
aam
ja
je
faddp
movsl
adc
xchg
ja
pop
inc
push
xor
sbb
cmp
ret
fisttpl
inc
mov
fcompl
xchg
bound
sar
cmp
loopne
pop
inc
and
mov
out
ja
and
dec
call
test
stos
inc
mov
loope
or
les
dec
into
and
dec
bnd
incb
xchg
adc
sub
xor
pop
pop
stos
push
scas
push
shrb
fstp
xchg
cmp
ret
repz
xchg
cmp
or
sahf
add
jne
mov
push
mov
pop
mov
pusha
addb
lcall
ret
cmp
mov
push
pop
lea
jae
or
std
dec
pop
and
jbe
icebp
push
dec
xchg
mov
inc
popa
lea
push
out
xchg
jecxz
sub
faddl
jne
mov
dec
shrl
lcall
stos
pop
pop
mov
jno
jb
outsl
bound
sbb
outsl
aam
or
iret
xorl
mov
pop
or
arpl
inc
test
mov
xchg
or
fistl
sub
and
outsb
pop
inc
cmp
faddl
mov
adc
lcall
lahf
mov
or
sub
cmp
fsubrl
lds
sub
and
sub
or
push
add
je
inc
or
outsb
icebp
jp
les
sub
push
and
pop
xchg
jns
xchg
shrl
hlt
lahf
addr16
adc
aad
inc
or
insl
vpcomd
jae
or
adc
popf
insb
subb
or
sub
leave
out
in
pop
add
adc
xor
cli
push
or
inc
add
cmp
lods
shll
jle
js
or
jae
jne
mov
movsl
or
jecxz
xchg
push
out
ret
mov
or
lods
and
or
ret
mov
and
jb
aas
adc
jns
adc
aad
add
dec
repnz
ja
std
pop
inc
movsb
fstl
ret
inc
or
xor
or
xchg
jecxz
push
scas
sahf
iret
movsl
mov
sti
gs
mov
cmc
sar
pop
add
cmp
js
rol
lods
rol
addb
leave
push
or
cmc
mov
mov
mov
lods
pop
sti
mov
lea
adc
cmp
add
mov
sti
and
mov
push
mov
les
or
dec
adc
dec
iret
push
clc
or
sbb
mov
int
add
inc
jge
addl
insb
and
xchg
inc
sbb
cli
pop
sahf
xor
or
imul
sub
mov
mov
into
xor
or
mov
cmp
shr
cmp
xchg
or
mov
testl
jno
orl
add
xchg
cltd
jg
or
mov
flds
out
dec
movsb
stos
ljmp
inc
dec
jecxz
push
mov
or
icebp
and
ljmp
scas
jecxz
cs
fnstsw
fmul
daa
jmp
mov
mov
jnp
mov
int
adc
andb
jmp
inc
dec
iret
or
xor
out
pop
add
lret
out
repz
jg
fstpl
inc
push
subl
mov
or
push
jb
testb
lcall
push
in
sti
and
loop
cli
lds
repz
jp
add
call
and
pop
push
cmpsl
mov
test
popa
xor
mov
or
or
jo
push
shrb
sarb
jne
in
or
fdivrl
pusha
add
mov
aaa
cmp
popa
adc
int3
jmp
and
sbb
addr16
psubq
test
xor
js
leave
ror
or
pop
adc
fs
pop
arpl
out
push
iret
push
add
test
scas
into
testl
sbb
adc
cld
data16
stos
mov
or
lock
jl
mov
loop
push
jnp
push
fildl
inc
int3
lds
pop
jne
aaa
add
push
pop
lods
iret
stc
sbbb
or
sub
bound
ds
orb
test
cmp
adc
mov
rclb
jle
out
dec
xor
incl
mov
shlb
cmp
shrl
orl
or
sahf
jecxz
pop
dec
sbb
pop
sar
pop
sub
std
fcmovb
inc
out
test
fstpt
in
or
div
add
stc
jl
andl
pop
pop
mov
sub
sbb
inc
xor
fsubrl
jl
cli
cltd
mov
sbbb
and
outsl
add
mov
xchg
lcall
out
ficoms
pop
pop
sub
fisttpll
out
jo
aas
lret
xchg
xchg
cmp
incb
mov
or
fwait
scas
iret
sti
ds
mov
mov
cmpl
or
iret
lods
in
rcr
outsb
les
iret
mov
or
movsb
mov
add
jno
stos
pop
int
sub
or
xor
loope
vshufps
insb
pushf
imul
aad
iret
lahf
adc
jl
jnp
insl
in
sub
or
in
daa
cli
ss
fldenv
adc
or
adc
ljmp
cmp
or
jo
mov
mov
jns
inc
dec
bound
push
cmp
mov
imul
dec
cmp
mov
movsb
cmp
mov
inc
push
scas
pop
or
xchg
bound
sub
and
pop
popf
das
dec
cmp
mov
sbb
pop
lret
add
jecxz
jp
out
arpl
call
mov
jbe
popf
dec
jb
mov
mov
jnp
shlb
popa
fwait
add
or
and
scas
xor
pop
into
ja
add
adc
and
sub
push
cmp
push
test
out
push
inc
and
mov
mov
inc
aam
xor
or
stos
test
decl
leave
add
mov
or
rcll
mov
xchg
jnp
mov
xchg
or
shlb
roll
xchg
or
icebp
add
push
arpl
incl
pop
jl
mov
test
bound
dec
inc
insb
mov
push
shl
outsb
xchg
sub
fs
aam
dec
out
jnp
pop
mov
pop
mov
pop
pop
rclb
push
inc
add
inc
jb
pop
cwtl
repnz
idiv
mov
or
fwait
gs
cmpsb
outsl
pushf
mov
ds
std
mov
aas
lods
nop
push
lcall
sahf
or
adc
outsb
xorb
pop
iret
jo
jmp
jnp
pop
jbe
and
add
inc
stos
call
mov
adc
decl
xor
cwtl
xchg
aam
pop
les
cs
xor
cli
cmp
jno
cmpl
or
aad
jp
mov
or
test
gs
popl
mov
imul
lahf
and
jnp
hlt
inc
adc
aaa
mov
or
addr16
das
ret
or
rol
xor
add
adc
outsl
dec
outsl
insb
jecxz
orb
jnp
cmp
xlat
pop
and
inc
lret
add
or
in
cmp
in
mov
push
ja
mov
mov
mov
adc
outsl
jns
or
std
lret
jbe
arpl
mov
inc
xchg
jb
popa
or
pop
sahf
jne
or
out
jp
push
or
repnz
or
xchg
fisubs
iret
or
xor
pop
mov
repz
add
mov
sbb
ds
inc
cmpsl
or
mov
mov
mov
mov
jo
daa
mov
mov
cmp
pop
add
sub
sarl
div
call
jle
in
cmp
bound
or
xor
jp
adc
push
test
push
das
and
or
mov
dec
or
sbb
aaa
pop
xor
push
adc
shl
ds
add
insl
lcall
loop
test
aad
or
xor
in
cmpsb
es
xor
dec
out
gs
xlat
add
sbb
push
pop
jo
setne
leave
popa
mov
and
icebp
outsb
rorl
out
mov
arpl
daa
out
dec
lahf
adc
xor
outsl
pop
test
or
jl
xchg
mov
mov
add
or
repnz
fstpl
mov
adc
lahf
movsl
popf
or
mov
scas
push
insl
movb
or
mov
call
roll
inc
add
std
inc
jo
and
pusha
lcall
jno
add
sub
or
adc
or
das
jl
or
stc
mov
je
add
std
mov
or
lret
mov
xor
dec
mov
jne
mov
cs
pushf
or
mov
sub
std
popf
mov
fiaddl
dec
call
cli
mov
lds
lods
je
out
leave
push
adc
or
cltd
pop
push
mov
bound
sub
jns
jg
jl
int
in
dec
xchg
mov
daa
xlat
inc
movsb
jge
or
aad
insl
or
jl
push
fadd
insl
sbb
fbstp
ds
ljmp
iret
cmp
and
push
xchg
xchg
sub
xor
dec
pshufw
mov
loop
xchg
dec
and
jbe
stos
decl
mov
push
or
adc
add
movsl
jo
or
xor
or
ja
call
inc
add
jmp
adc
cltd
push
lret
sbb
mov
adc
out
add
pop
dec
int
cmpl
fsubrl
pushl
sti
mov
and
dec
or
shlb
jle
out
or
ret
xchg
data16
push
pop
lock
push
out
fldenv
cmpsl
cmp
dec
fstl
fwait
mov
or
push
xchg
add
mov
sahf
lea
and
sbb
mov
adc
in
pop
outsl
xorb
xor
sub
jl
mov
jge
unpckhps
add
imul
adc
stos
inc
mov
jmp
jae
insl
xlat
and
shlb
push
test
xor
insl
mov
insl
dec
ficompl
or
sbb
bound
jb
inc
and
adc
dec
and
fs
leave
addr16
pusha
in
push
adc
aam
outsb
aaa
out
adc
lock
pop
cmpsl
mov
add
pop
or
mov
sub
push
popf
xchg
pop
repnz
ret
jae
push
push
and
pusha
dec
in
sbb
call
nop
cmpsb
lock
xor
lret
push
push
pop
xchg
ficomps
dec
loope
fsts
or
sub
inc
adc
daa
xchg
psubq
or
pusha
dec
rclb
stc
not
xor
push
nop
lea
es
lea
lock
fldenv
jg
shrb
inc
mov
sbb
stos
iret
inc
lea
mov
cmpsb
dec
loopne
sahf
pusha
add
sarl
rorl
add
das
into
cmpsl
mov
out
mov
push
test
stos
jnp
mov
loop
dec
sub
mov
insb
outsl
mov
adcl
icebp
call
fwait
push
and
les
lcall
inc
mov
insl
inc
movsb
in
and
icebp
mov
dec
xor
ret
sub
cwtl
xor
xor
or
pop
jne
xchg
stos
mov
or
addb
call
aaa
jae
dec
sbb
mov
mov
cmc
mov
clc
std
cmpsl
pusha
mov
add
std
adc
pop
cmpsl
ljmp
test
lds
cltd
mov
mov
or
mov
inc
mov
stos
or
subl
pop
xchg
mov
pop
cld
mov
mov
shlb
in
lds
mov
bswap
addr16
pop
aad
or
pop
and
adc
mov
inc
sub
sbb
dec
mov
xor
mov
mov
sahf
cmp
mov
fnstsw
sbb
xlat
inc
cmp
pop
mov
adc
cmp
xchg
and
dec
in
or
cmpsl
lods
shr
mov
xor
sbb
dec
les
dec
loop
jnp
xchg
out
adc
sbb
jae
mov
mov
push
pop
sbb
xor
ja
shlb
sub
roll
add
sbb
das
nop
and
fldln2
jp
gs
sahf
mov
stos
lcall
ljmp
nop
int3
cmpsb
lods
or
mov
jb
inc
lds
or
fcmovnb
lods
ljmp
and
std
push
add
shlb
scas
xor
ja
dec
mov
cmp
mov
and
sahf
dec
roll
adc
rorb
dec
daa
xchg
inc
ficoms
in
or
subb
jge
cmp
stos
pop
aas
or
ds
outsl
xchg
adc
in
ja
adc
sub
outsl
shlb
mov
cwtl
pop
test
jecxz
sbb
xchg
mov
jge
out
gs
icebp
jmp
fcomi
gs
dec
push
sti
aaa
inc
jnp
rorl
stos
cmpl
ljmp
push
push
mov
into
sbb
addr16
loope
sbb
out
insb
cld
mov
pop
repnz
or
lods
push
les
mov
dec
je
mov
mov
mov
mov
dec
mov
push
add
xlat
repnz
lret
scas
push
jp
das
pop
enter
fldcw
hlt
or
out
dec
jbe
pop
mov
mov
clc
das
nop
inc
adc
decb
orl
jno
test
in
xchg
loop
cmp
push
lcall
fisttps
lea
inc
mov
and
nop
cmp
lock
xor
dec
enter
mov
jmp
cmp
es
pop
sarb
jg
push
into
addr16
das
neg
ficoms
cli
loopne
in
push
iret
aaa
mov
push
negb
subl
sahf
push
stos
add
sbb
scas
or
popa
pop
int
fnstsw
or
push
mov
shrb
sub
mov
lea
out
mov
cmpsb
inc
mov
jge
sbb
xchg
loope
mov
push
xchg
mov
xchg
inc
sbb
lea
mov
data16
fldt
outsl
call
int3
test
jae
ss
sbb
jo
push
in
cwtl
cmp
inc
mov
inc
add
roll
xchg
fsubrs
fistpll
imul
ffree
adc
cld
icebp
xor
les
mov
adc
fadd
out
iret
adc
mov
xor
adc
mov
dec
in
out
pop
sbb
push
mov
mov
sbb
or
into
shlb
or
mov
pop
aas
dec
jmp
jge
mov
cld
inc
test
ret
push
loopne
inc
sahf
into
xchg
add
push
or
xor
stos
mov
lea
mov
mov
push
sahf
fadds
frstor
and
add
or
in
mov
push
cmp
or
jae
pop
xor
sbb
lock
out
xchg
or
push
sub
add
cmpsb
adc
sbb
out
clc
sub
push
repz
ds
or
into
les
xor
mov
sbb
sbb
sbb
push
shl
repz
push
sub
bound
idivl
lock
inc
inc
mov
into
lods
pusha
jecxz
inc
loope
bound
dec
or
push
pop
add
mov
mov
dec
adc
sbb
das
ret
and
clc
repz
xchg
aas
mov
decl
mov
cld
std
jo
es
testb
sahf
sub
mov
xor
outsb
push
mov
add
sahf
xor
iret
fnstsw
lahf
rolb
mov
es
lods
divl
fdivrs
and
aad
pop
xchg
sahf
sub
push
mov
push
mov
and
es
sub
mov
lret
addr16
dec
xor
pop
cmp
jle
shr
in
test
push
mov
rcll
dec
xlat
xor
and
icebp
jbe
shr
mov
outsb
das
cmpsl
ret
fiadds
sub
pusha
or
fwait
negl
scas
sub
mov
jecxz
pop
dec
pop
fisubs
and
or
adc
mov
add
fwait
cmpsl
pop
xor
mov
scas
sbb
into
cmp
in
mov
sbb
xchg
int3
test
idivb
out
fnstcw
xchg
aaa
testb
lret
lds
orl
inc
jp
xlat
or
les
in
pop
sbb
lret
daa
sahf
cmp
mov
inc
and
xchg
cmpsb
cwtl
loope
dec
cli
sub
mov
sar
into
and
sbb
les
loope
stos
and
adc
or
aaa
mov
or
sbbb
cmp
add
push
gs
push
fcmovnu
ficoms
dec
aad
mov
ret
push
and
cmp
ffreep
pop
jbe
push
rcrl
es
stc
pop
pop
lfs
idivb
aaa
repz
mov
adc
jae
mov
je
fmulp
jp
pop
sarb
into
or
pop
jno
mov
xchg
add
push
jnp
xchg
into
rorl
add
mov
inc
inc
mov
ljmp
inc
repnz
jmp
xchg
sbb
push
jge
sbb
or
mov
inc
adc
jge
push
lea
flds
mov
call
ficoms
or
dec
xchg
fldenv
cmp
sahf
mov
push
les
into
xchg
xor
loop
inc
rcrb
xor
fmull
jne
inc
xchg
adcb
test
or
adc
cwtl
cmp
fsubrl
in
cmp
jg
inc
jns
sahf
add
jecxz
jbe
mov
test
push
rcrl
add
cltd
rcrb
add
movl
pop
sub
mov
add
cmp
test
lea
inc
stos
mov
sub
rclb
sahf
sub
jnp
and
jl
sbb
vshufps
inc
cs
icebp
or
pushf
sub
movsb
xchg
push
dec
lcall
outsb
mov
add
xor
movsl
xchg
dec
or
dec
leave
push
lods
les
imul
mov
or
lock
add
inc
iret
cmp
scas
jp
ljmp
hlt
add
jno
sub
cmp
out
adc
push
inc
xchg
rclb
aaa
add
jno
enter
or
sbb
inc
ljmp
mov
in
mov
or
add
dec
out
jnp
ret
push
mov
movsb
pop
iret
in
mov
call
cmp
dec
or
ljmp
or
adc
sbb
or
dec
or
jbe
mov
xchg
stos
movsb
and
pusha
inc
or
ficompl
iret
cs
inc
push
push
clc
incl
popa
sbb
out
inc
mov
movb
cmpsb
and
dec
movsl
xor
loopne
pushl
sar
or
arpl
push
iret
cmp
test
pop
xor
lahf
lods
lods
push
push
add
iret
inc
push
or
ficoml
jae
lret
fmulp
nop
mov
clc
lret
rcl
stos
mov
out
inc
loop
add
test
fmull
xor
xchg
mov
inc
mov
push
popf
shlb
in
jp
sub
insb
repz
test
test
mov
or
xor
in
sbb
leave
push
les
out
lods
jne
dec
clc
pop
sarb
adc
imul
adc
mov
mov
or
or
and
add
jb
faddp
sbb
in
add
jno
xor
mov
lds
sub
xor
testl
sahf
add
rol
add
jb
mov
sbb
pop
xchg
jne
or
call
push
or
sbb
push
movsl
inc
inc
mov
popa
pop
add
add
lods
mov
fisttps
push
rorb
push
dec
mov
into
stos
and
loope
pop
test
sub
inc
add
mov
loopne
mov
mov
aam
adc
mov
hlt
outsl
and
add
icebp
test
push
into
clc
inc
dec
ja
or
or
repz
pop
xchg
movsb
xor
mov
adc
push
in
inc
mov
mov
pop
gs
jae
push
jns
dec
or
gs
jb
lods
or
js
jp
xchg
sbb
xchg
outsl
mov
stc
xchg
gs
mov
cmpsl
movsl
jle
dec
adcb
arpl
xchg
push
inc
insb
in
xchg
push
sbb
inc
mov
pop
mov
adc
sub
in
sbb
add
pop
and
call
xchg
data16
adc
pop
mov
insl
nop
mov
out
or
dec
sbb
bnd
and
shlb
stc
xor
push
mov
outsb
adc
std
dec
xor
idiv
aam
add
xchg
jne
sub
cmpsl
lds
dec
cmp
int
push
scas
mov
jnp
mov
push
in
pop
mov
or
test
sbb
xchg
mov
aad
out
mov
dec
adc
xlat
and
jne
mov
shrb
and
movsb
scas
out
out
inc
dec
mov
mov
cwtl
or
test
cwtl
jno
xor
lcall
cmpsl
cmc
lret
mov
lods
ljmp
cmp
bound
adc
push
lods
or
inc
xor
xlat
xchg
sbb
jecxz
inc
cli
fiadds
loop
mov
add
cmp
mov
mov
add
daa
xchg
pop
test
fisttpl
lret
or
out
adc
xchg
out
inc
mov
lahf
inc
dec
rolb
jmp
adc
and
into
clc
xchg
fs
fisubrs
xor
pop
xor
push
xor
inc
or
rcrb
jae
imul
jo
mov
jecxz
fiaddl
xchg
ret
cld
sbb
cmp
aas
fdivp
mov
pop
add
out
lahf
dec
in
dec
cmpsl
sub
jp
cld
in
ss
or
clc
test
sub
sub
sub
stc
jmp
mov
scas
ret
and
mov
std
cmp
push
mov
pop
or
fistpll
mov
out
adc
add
out
outsl
lcall
or
fs
std
sti
mov
xchg
mov
ret
sbb
inc
and
adc
add
pop
fildl
test
pop
repnz
sahf
or
jge
xchg
nop
mov
lea
mov
and
sub
cmp
sbbl
aas
mov
not
pusha
sbb
cltd
mov
cwtl
inc
shll
cwtl
add
and
dec
cmp
sahf
push
push
mov
sbb
fidivrs
movsb
sti
test
in
inc
push
lret
rolb
cmp
pop
lods
int
les
jne
add
jmp
test
lods
loope
push
jae
pop
pop
in
clc
adc
fstpt
cmp
arpl
mov
push
mov
jle
xorl
fisttps
popa
xor
xchg
sub
mov
lret
les
jecxz
nop
mov
lea
rcrb
call
or
or
fisubs
dec
into
push
cld
mov
and
fdivrs
dec
dec
fdivs
imul
aad
and
pop
pop
iret
repnz
cmpsl
push
aaa
mov
gs
jae
icebp
cmp
mov
into
xor
xor
cmpsl
stos
rol
push
add
test
dec
sub
xor
push
jno
mov
inc
pop
inc
outsb
jl
adc
insl
xor
addl
lcall
cmp
xor
scas
push
xor
mov
scas
cmp
into
mov
xchg
bnd
and
pop
xorb
inc
rorb
loope
sub
jecxz
mov
xchg
mov
inc
insl
and
sarb
popa
jne
jno
mov
inc
pop
jp
stos
popa
push
mov
mov
les
sbb
mov
xchg
push
out
outsl
data16
sbb
clc
sub
inc
je
sbb
bound
enter
ja
adc
daa
dec
outsl
daa
sbbb
and
jae
into
pop
xchg
jl
outsl
inc
push
xorb
mov
lret
push
stos
add
cmp
pushf
push
or
out
lcall
dec
sbb
dec
lret
adc
mov
jo
push
jnp
aad
xchg
pushf
mov
iret
pop
shlb
sbbl
dec
rclb
push
ret
inc
mov
jp
dec
add
dec
bound
pop
stos
pop
shr
fmull
aad
js
arpl
lods
psubb
mov
sbb
jae
fidivrs
cli
or
jnp
xor
adc
out
imul
pop
or
and
cmp
dec
cmp
mull
sahf
out
lahf
add
xor
subl
inc
cmc
mov
mov
in
mov
xchg
mov
xor
push
or
or
push
mov
out
or
push
mov
pop
adc
mov
pcmpgtb
xor
jle
xchg
outsl
fbld
mov
add
in
jno
fmul
mov
or
cmc
lcall
pop
addr16
les
xchg
lea
add
mov
lahf
mov
mov
fimull
daa
rclb
test
orb
push
inc
cmc
mov
xor
mov
dec
fsubs
stc
cmp
lret
xchg
and
push
dec
push
sbb
mov
mov
push
icebp
out
call
cmp
repnz
ret
cmpsb
jge
ja
mov
pop
ss
jo
fistps
loop
sub
outsl
jnp
dec
xchg
fsubrl
dec
push
scas
popf
ja
in
lcall
pushf
sti
and
lods
mov
ret
xor
andb
xchg
ficompl
icebp
cmpsl
and
cmp
out
outsl
sbb
lods
push
ja
and
add
mov
mov
mov
adc
aaa
dec
mov
or
pop
jnp
addr16
cmp
jns
mov
fmuls
mov
mov
jae
pop
sub
cmp
stos
pushf
cltd
sub
repz
dec
cmpsb
cmp
imul
js
cwtl
pop
fdivp
pop
not
lds
and
cmpsl
les
lcall
xlat
sbb
insl
in
inc
pop
adc
add
rorl
xlat
js
mov
enter
sbb
not
sub
lret
dec
movsl
and
or
scas
cmpsl
xchg
pop
mov
xor
mov
xor
add
jno
lock
aam
repz
xchg
movsb
cmc
sahf
add
push
aaa
mov
int3
pop
sbb
cld
adc
sahf
scas
dec
dec
orl
xchg
xchg
add
sub
push
into
ds
xorb
jmp
mov
push
inc
cmpl
loope
jecxz
add
cmpsb
daa
mov
jp
lock
mov
mov
dec
daa
sbb
adc
stos
sti
push
sbb
mov
nop
xchg
xchg
or
mov
mov
pop
cmp
in
je
imul
cmp
out
dec
push
inc
bound
mov
pop
or
pop
push
movsb
inc
mov
in
mov
mov
dec
adc
fcomp
or
or
icebp
icebp
mov
lcall
push
outsl
fstpl
xchg
dec
cmp
add
pop
jge
dec
adcl
sarb
testl
adc
adc
pop
pop
pop
mov
or
out
jge
cmp
mov
es
repz
inc
xchg
xlat
roll
arpl
out
push
jbe
jg
popf
stos
or
loopne
or
xorb
dec
stc
jge
or
rcl
mov
ror
outsb
mov
mov
pop
ret
por
popf
lret
adc
push
popa
jl
and
cmp
mov
mov
ret
cs
xchg
xchg
test
out
std
in
mov
pushf
or
repz
mov
cmp
sbb
jae
and
mov
into
data16
adc
mov
inc
and
shlb
lret
inc
loop
xchg
pop
repz
dec
popa
lods
out
mov
pop
clc
out
aas
sub
imul
push
inc
or
repz
cltd
aaa
mov
mov
fbstp
sarb
bound
push
hlt
sub
push
addb
out
andb
inc
ja
or
cmp
mov
xor
enter
add
cli
movsl
jp
xchg
and
sbb
pushf
adc
fdivrs
push
sub
adc
gs
sub
daa
out
mov
ret
sti
inc
lret
add
adc
mov
sbb
dec
ret
mov
pop
lock
ret
mov
pusha
add
mov
pop
push
push
adc
leave
jle
and
rcll
mov
daa
sbb
stos
and
pop
rclb
scas
mov
jne
stos
jno
testl
add
sub
xorl
std
mov
inc
pop
cltd
pop
dec
and
mov
xor
inc
les
sbb
mov
mov
jns
fldt
mov
in
mov
out
mov
aad
and
aas
mov
cmp
lcall
xor
out
sbb
jl
cmp
scas
sti
inc
cmpsl
daa
imull
jnp
mov
sbb
std
jecxz
pop
sbb
pop
or
stos
add
test
mov
mov
mov
loop
mov
push
push
pop
dec
rorb
mov
clc
jge
ret
cmp
add
sub
xchg
mov
incb
les
in
es
mov
pop
cmc
sahf
or
aaa
call
xchg
das
imul
and
std
add
add
fistpl
pop
imul
cmp
ret
and
popa
jbe
rcrb
ret
or
cli
cmp
jo
insb
jecxz
mov
pop
test
adc
lcall
lds
aaa
mov
shrl
lret
les
push
cltd
xchg
pop
pop
das
movb
mov
pop
in
add
fldlg2
xchg
jle
sarb
sbb
jo
shlb
fdivr
mov
mov
push
mov
jle
rorb
sti
dec
aam
push
xor
mov
cmpsl
xor
mov
rclb
out
dec
add
mov
dec
fistl
pop
inc
jle
xchg
dec
shlw
cmp
sahf
out
sbb
iret
sbb
rcr
adc
fnsave
xor
scas
arpl
fbstp
dec
or
xor
dec
add
repnz
mov
cmp
xlat
sbb
andl
idivb
loop
cmpsb
stc
flds
les
fisubrl
lods
push
jle
xor
insl
inc
popa
mov
adc
push
js
mov
ret
rcrb
xor
jo
mov
jmp
fmull
xchg
gs
stos
shlb
out
pusha
mov
xchg
or
insb
ds
out
cmpsb
dec
jne
es
mov
inc
mov
xchg
jno
dec
imul
mov
add
adc
cmpsb
push
adc
inc
mov
aaa
pusha
in
repz
rcrb
add
xchg
sbb
add
xor
stos
loop
fisubrs
cs
add
sbbl
ss
dec
sbb
lret
mov
add
xor
test
cwtl
fstp
pop
or
jne
sub
xor
in
out
or
sbb
cs
mov
mov
or
fisubrl
loop
nop
jmp
inc
inc
mov
addb
pop
mov
cltd
push
addb
sbb
sahf
loop
pushf
cltd
pop
sbb
cmp
out
dec
add
fimull
ret
rclb
dec
cmp
xor
mov
aam
fidivrs
cmpsb
cmpl
push
xor
les
sub
cmpsl
mov
sahf
lock
pop
jl
or
pusha
and
insl
push
or
jb
inc
xchg
add
mov
bound
add
les
adc
mov
dec
xorb
cmp
dec
loope
or
xchg
jle
fsubl
inc
jne
push
cmpsb
sti
sti
das
repz
mov
dec
ljmp
mov
nop
add
int3
aas
push
bound
out
add
call
je
and
pop
add
add
iret
mov
jecxz
mov
das
mov
js
push
shr
ja
jge
insl
add
lods
push
cmpsl
out
adcl
mov
pop
fwait
mov
mov
dec
dec
es
and
mov
ret
xchg
sarl
nop
add
inc
ficomps
cmc
cmpsl
rolb
mov
gs
jp
xor
xchg
shlb
pop
xchg
shlb
mov
cld
leave
jnp
repz
mov
cmpsb
xchg
jne
xlat
cmp
push
shlb
pop
aad
repz
sbb
stc
push
shlb
pop
fdivs
lods
jmp
pop
sahf
in
and
flds
insb
xchg
les
and
or
push
jae
adc
lds
sarb
fisttpll
xchg
in
js
jnp
pop
jp
pop
dec
lcall
mov
loope
mov
adc
in
sbb
fnstenv
ja
push
rclb
sar
or
fwait
rol
xchg
and
mov
mov
pop
adc
lock
push
into
dec
in
cmpl
rcr
sbb
popa
mov
fucomip
scas
dec
fidivs
imul
inc
cmpsl
test
mov
fistl
ficomps
into
movsl
mov
icebp
add
mov
leave
pop
cmp
sahf
dec
jae
iret
xor
xor
mov
xchg
sub
mov
in
sti
jl
cltd
jge
or
repz
pop
incb
and
ret
stos
dec
aam
or
rcrb
cmc
push
push
cld
dec
mov
ror
cmp
fidivrs
xchg
es
hlt
dec
test
pop
in
and
mov
or
idiv
ret
push
dec
adc
add
lds
in
cmpsb
jmp
std
scas
sub
xor
ljmp
stos
dec
pop
push
add
out
xor
inc
xchg
add
daa
or
loopne
negl
movsl
jle
aad
jge
or
cmc
call
mov
out
xor
mov
fildll
jl
test
cmpb
ret
ret
jle
sbb
enter
and
xchg
seto
jno
shl
scas
xorl
ljmp
daa
mov
push
xorl
loop
fcoml
outsl
call
sbbb
or
jl
shr
sub
lret
iret
hlt
stos
xchg
lods
imul
mov
push
rcl
dec
add
fistpl
shr
div
pop
jno
add
les
sub
insb
cli
icebp
and
and
cli
sub
or
mov
add
rcr
lock
dec
aam
push
adc
shrb
lock
div
imul
cmc
bnd
clc
sbb
or
outsb
fisubs
mov
sub
xchg
repnz
outsl
lods
fstp
sbb
ret
sbb
mov
mov
arpl
add
cltd
xchg
into
sbb
inc
or
sub
ss
push
or
call
xor
pusha
imulb
les
mov
inc
inc
adc
lahf
dec
xor
pop
mov
test
out
dec
aas
mov
out
pop
sbb
cmpsl
adc
pop
imul
xchg
out
sahf
adc
ss
mov
fistpll
lods
dec
bound
xor
loop
loopne
add
and
dec
fidivrl
nop
add
les
inc
pop
popa
pop
stos
fstps
cmp
xlat
mov
cmpsb
mov
pop
sbb
scas
aas
and
sti
lret
mov
sbb
xchg
push
add
pop
and
dec
insb
mov
enter
insb
lods
rolb
in
repz
cmp
inc
clc
sub
sahf
inc
cmp
rolb
daa
or
out
imul
pop
inc
outsl
add
sbb
test
daa
dec
sub
dec
into
add
shlb
inc
cmp
xchg
nop
scas
and
sbb
imul
ret
daa
or
mov
jne
cmp
fmulp
add
hlt
std
and
xchg
jmp
mov
dec
lea
xor
inc
std
pop
cmpsb
out
fsubrp
in
fsubr
xor
test
jo
imul
push
scas
push
pop
cmp
mov
in
xchg
aad
mov
mov
mov
test
clc
cmp
mov
fimull
jo
and
dec
push
mov
in
test
xchg
or
jl
xchg
test
jecxz
test
mov
test
inc
in
int3
dec
sub
mov
test
sub
outsl
push
mov
pop
movl
add
stos
push
into
into
mov
test
mov
je
daa
rorb
lds
mov
push
xor
insl
jp
adc
cmpsl
xor
ja
dec
jns
ficomps
hlt
fistps
ret
ret
shll
mov
mov
icebp
dec
lret
dec
mov
dec
fnstcw
mov
std
cmovne
nop
iret
adc
push
or
shl
jae
mov
add
lret
and
leave
pop
mov
and
dec
cmp
leave
movsl
push
fisubrl
mov
enter
inc
mov
push
jg
adc
in
mov
sbb
mov
jmp
arpl
inc
fadds
mov
xor
sti
stc
mov
jle
pop
insb
inc
data16
mov
mov
out
add
jbe
xor
repz
test
stos
pop
dec
cmc
jbe
inc
in
xor
jno
sbb
sti
mov
je
sbb
ret
les
cmp
jnp
inc
or
movsl
lock
mov
xchg
or
hlt
divl
dec
cmp
mov
cmc
lahf
jno
mov
iret
inc
loope
mov
xchg
and
cmpsl
jle
fmuls
inc
sbb
push
sbb
mov
mov
adc
sbb
outsl
fcmovu
cmc
lock
icebp
mov
sbb
xchg
lock
inc
outsb
cmpsl
ret
daa
cmpsl
test
cmp
fldt
shrb
xchg
jle
sahf
and
cmpsb
das
dec
fimuls
orl
pop
mov
sbb
lods
sarl
jne
jb
push
jge
sub
cmpsl
rolb
das
js
std
movsl
xchg
fsubrl
and
call
ljmp
push
push
push
or
xchg
repz
std
mov
test
mov
inc
int
cmpsb
inc
test
or
scas
addr16
lods
cmpb
mov
popa
dec
cmp
mov
adc
adc
inc
gs
les
andl
ss
rcrl
scas
sub
jns
push
clc
sbb
mov
fsubl
xchg
fiaddl
inc
js
add
adc
or
mov
xorps
stc
xor
aad
fadds
adcb
and
cmp
loop
insl
lea
into
cmc
mov
sbb
pop
pop
enter
lret
mov
mov
sahf
js
insl
mov
rcrb
js
out
into
dec
pop
pop
and
scas
stos
jae
ret
mov
or
add
cltd
repz
popa
pop
inc
fnstcw
shlb
cmpsb
scas
bound
test
mov
je
push
rcr
mov
push
les
fimuls
sub
lret
sbb
mov
add
add
xchg
or
ljmp
rcl
leave
pop
inc
fwait
add
push
mov
prefetch
insl
sti
jmp
cmp
mov
shr
lret
scas
pop
loopne
jbe
lret
andl
mov
fdivr
mov
movb
or
fwait
adc
dec
mov
adc
std
mov
sbb
rol
rol
push
hlt
in
pop
sbb
and
fbstp
xor
fildl
dec
loope
dec
sbb
pop
add
cmpsb
inc
scas
hlt
jmp
cli
mov
adc
or
jecxz
sub
test
int
cmp
jne
daa
xor
mov
or
add
test
iret
jmp
loope
out
mov
xchg
or
xor
and
xorl
pop
push
fadds
and
jne
push
mov
shrb
shlb
enter
cmpsb
adc
addr16
sub
cmpsb
mov
jg
data16
and
cmp
xchg
int3
out
repnz
mov
mov
es
xor
les
insl
ret
fisubrl
push
outsl
xor
add
jg
sub
ds
ret
movb
xor
std
testb
sbb
or
adc
fwait
decl
jge
mov
testb
out
test
cmp
icebp
sbb
mov
sahf
fcmovnb
leave
data16
add
sbb
addr16
shrd
jno
xchg
sbb
sti
lds
ja
out
fimull
pop
fistps
adc
les
xor
movsl
fmul
push
call
cmp
leave
pushf
lods
xchg
dec
mov
or
lods
mov
cwtl
cmpsl
jmp
repnz
shlb
test
call
ja
xor
nop
ret
or
imul
stos
mov
pop
arpl
xchg
xchg
daa
gs
push
mov
fbld
jecxz
inc
xchg
dec
sub
or
in
fdivl
arpl
ja
flds
mov
loop
out
mov
cld
push
mov
shl
in
pop
cmp
jne
repnz
lock
mov
mov
clc
xchg
sub
dec
xor
sub
fisubl
mov
xor
mov
fisubl
pop
cmp
inc
sub
mov
sbb
push
and
or
icebp
sub
outsl
xchg
jl
mov
inc
adc
lods
out
or
pop
scas
rcl
testb
push
addr16
aad
inc
aaa
inc
mov
pop
gs
and
shlb
xchg
sti
mov
or
dec
and
jp
clc
jmp
mov
pop
xchg
stos
cmpsl
jb
loope
mov
dec
push
mov
xchg
sub
add
je
sbb
fiadds
push
pop
xchg
out
aaa
mov
mov
cltd
iret
push
add
sbb
nop
outsl
repz
mov
xor
lods
enter
mov
mov
les
pusha
lret
mov
ret
aad
scas
xchg
test
imul
xchg
mov
cmpsb
sub
subb
fwait
hlt
add
mov
cmpsb
sti
xor
jne
xor
and
movsb
ficoms
jbe
xchg
xchg
lds
and
icebp
cmp
pop
push
int
add
inc
and
sub
ret
out
out
mov
xchg
cld
fwait
and
shlb
stos
push
rolb
cmp
sub
fidivrs
loopne
shrb
push
rcr
sbb
pop
pop
fisubl
lds
adc
mov
cmp
fwait
ret
add
orl
or
int3
mov
pop
outsl
or
stos
repz
fs
cmp
mov
es
and
frstor
pop
std
repnz
in
daa
jnp
stos
call
push
mov
dec
xor
mov
ret
inc
add
sub
cmp
sbb
pop
std
pop
ror
push
add
in
arpl
mov
aad
or
out
push
call
shlb
rcll
xor
xchg
les
add
xor
xchg
sub
xchg
add
out
lods
push
shll
jae
dec
pop
lds
lret
sahf
xor
cmpsl
pop
rcrb
scas
outsl
and
enter
repz
dec
int3
dec
dec
daa
ret
or
add
xchg
dec
sub
test
sub
push
outsl
mov
sub
out
div
ret
test
mov
cmp
or
dec
roll
mov
adc
lahf
pop
imul
dec
ret
xor
cmp
out
icebp
sub
popa
xor
lea
in
ss
pop
cmp
jecxz
pop
cmpsb
dec
loopne
clc
mov
lds
iret
xchg
mov
xor
sub
enter
fcoms
mov
fucomip
insl
test
xor
push
int
outsl
lock
loope
sub
dec
or
inc
mov
sti
rorb
cs
stos
stc
fwait
jecxz
jae
xor
sarb
jo
xchg
cmpsb
mov
repz
addr16
shl
adc
jb
or
sub
jmp
adc
rol
mov
adc
adc
sub
mov
jecxz
out
inc
adc
repz
inc
adc
jne
and
jnp
je
push
mov
lcall
pop
inc
mov
xchg
adc
aas
ljmp
and
fwait
cwtd
push
cmc
xlat
test
dec
testl
insl
sarl
push
loope
test
cmp
cmp
inc
mov
or
stos
jb
stos
mov
int3
and
test
xor
mov
shr
add
mov
xor
roll
aam
movsl
fwait
std
inc
pop
dec
or
repnz
mov
inc
inc
cmpb
mov
pop
dec
xchg
insl
cltd
or
adc
loop
mov
mov
lea
shlb
mul
pop
sbb
movsl
sbb
lret
int3
pop
dec
add
or
ss
addl
push
push
add
pop
mov
into
xor
in
bnd
push
or
xchg
je
orl
sbbl
xchg
jae
mov
repnz
or
test
outsb
and
dec
fisubs
push
cmp
mov
sbb
or
xchg
ja
dec
mov
sbb
inc
rcl
test
push
pop
mov
push
push
cli
adc
jg
mov
icebp
outsb
mov
arpl
xchg
push
mov
push
bound
idivb
add
ret
sub
popa
sbb
dec
cmc
gs
mov
add
mov
ljmp
loopne
sbb
jge
addr16
push
mov
test
dec
in
xlat
cmpsb
dec
mov
mov
add
mov
or
cmp
mov
xchg
mov
popa
inc
shll
outsb
mov
add
out
sub
xlat
and
pop
sbb
jle
or
lcall
pop
jb
out
outsb
cmc
fidivs
dec
das
push
push
xor
stos
cmp
and
add
fwait
xchg
push
gs
cmpsl
orb
gs
shrl
push
xor
adc
imul
aad
sub
fsubrl
dec
in
hlt
sbb
pop
xchg
inc
adc
mov
loope
cld
mov
ror
xchg
and
ja
adc
popa
repz
jae
lret
testl
es
fcmovnu
sub
cmp
sub
rcl
push
or
sbb
cs
nop
les
mov
mov
jo
mov
bound
fsubp
and
mov
sub
jne
add
pop
mov
rolb
sbb
leave
insl
mov
ret
or
or
pop
les
add
jecxz
arpl
mov
int
sti
sbb
fistpl
pop
orl
pop
testl
cmp
mov
ljmp
and
out
cwtl
das
inc
jmp
jno
idivl
dec
addr16
push
and
mov
stos
fisubs
push
dec
cmpsl
xor
push
es
mov
in
jmp
jecxz
mov
adc
xorl
andnps
push
pop
fbld
scas
cmp
rol
leave
sub
or
xchg
test
out
js
icebp
adc
sub
dec
es
mov
jmp
push
fcmovnbe
in
sub
mov
adc
mov
sbb
dec
andb
cmp
pop
adc
scas
mov
jne
sub
iret
ret
movsb
adc
mov
je
sbb
popa
rol
inc
ljmp
or
fcoms
and
mov
adc
stos
ffreep
sub
mov
and
mov
cmp
inc
cmp
gs
xchg
iret
rorb
xchg
dec
or
clc
mov
lea
cs
cmp
scas
rol
loop
enter
mov
inc
add
rclb
jo
pop
mov
inc
lret
add
cmp
mov
lret
subb
jg
pop
and
das
sbb
scas
sbb
add
clc
movsl
cmp
pop
pusha
push
add
xchg
fsubs
sbb
pop
push
mov
mov
jae
adc
or
fmul
inc
inc
jecxz
mov
fldt
mov
mov
xchg
sub
les
rcl
lcall
xchg
xchg
lods
popa
pop
icebp
pushf
jecxz
in
mov
aas
cmpsl
xchg
mov
jnp
sahf
ja
dec
adc
mov
lods
divl
xchg
xor
or
sbb
and
mov
in
inc
fbstp
je
test
mov
mov
daa
sarb
or
popf
addr16
and
gs
sar
mov
orl
repz
mov
or
or
mov
mov
test
lret
and
xor
or
lret
fwait
js
mov
lgdtl
decb
outsb
sbb
add
push
icebp
les
push
jl
inc
sub
in
test
xchg
dec
mov
add
rorb
loope
and
dec
pop
and
xor
push
in
jbe
or
in
mov
pop
mov
xor
scas
mov
mov
and
adc
lahf
jbe
les
es
outsl
addr16
into
xor
rcr
rcrb
fsubrp
ja
jb
adc
scas
push
outsl
add
rolb
lods
jbe
es
ficoms
iret
sub
pop
les
clc
sbb
lods
sbb
je
pusha
or
cli
dec
push
cmp
or
xor
jge
insl
ror
loope
lea
mov
inc
adcb
cmpsl
ja
xchg
mov
gs
mov
inc
cmp
lods
push
repz
addb
add
lret
pop
mov
hlt
sbbb
out
ret
daa
mov
je
mov
xor
ret
jge
push
mov
xor
xchg
sbb
pop
mov
cmc
or
gs
andl
mov
mov
rcrb
jmp
sub
jge
add
or
lods
ljmp
sub
out
cmp
lret
lods
addl
loopne
jno
aas
ficompl
jne
push
js
les
inc
mov
icebp
iret
xor
out
addr16
nop
inc
add
popf
xlat
pop
mov
orb
cmp
rcr
data16
jno
mov
pop
cmp
lret
mov
pop
aad
xor
popf
adc
fnstsw
sub
add
mov
sub
mov
loop
mov
jo
cmp
jnp
ja
adc
mov
fimuls
jae
aaa
sbb
test
rorl
iret
lret
ljmp
push
mov
insl
dec
cmc
pop
cld
ret
imull
cli
dec
inc
add
mov
cwtl
pusha
mov
inc
mov
movsl
cld
xchg
mov
mov
mov
mov
add
or
mov
add
mov
xchg
sub
movsl
jecxz
sbb
inc
xor
and
ljmp
mov
mov
lret
jns
daa
scas
inc
push
push
mov
dec
sbb
repz
inc
in
outsl
adc
or
add
cmpsl
out
lcall
repz
loop
neg
lcall
pusha
and
mov
sub
sahf
les
jge
lock
xchg
mov
dec
add
mov
adc
cmp
out
mov
mov
inc
ja
mov
mov
mov
dec
dec
arpl
push
push
add
sti
pop
popa
xchg
lret
imul
sbb
ds
hlt
push
sub
sub
mov
jmp
mov
mov
hlt
ret
mov
mov
cwtl
shll
pop
cltd
rorb
xchg
insb
data16
jmp
mov
das
mov
xchg
add
mov
mov
iret
or
sub
loop
frstor
cmp
mov
dec
out
dec
rcl
mov
sbb
daa
repz
adc
sub
jmp
inc
and
mov
jno
xor
frstor
sbb
ja
icebp
daa
sbb
mov
mov
or
cmpsl
mov
push
inc
cltd
xor
inc
mov
fnstenv
test
xchg
imul
cmp
pop
or
and
xchg
dec
fiadds
push
imul
pcmpeqw
and
sub
jnp
scas
jl
and
pop
idiv
sbb
aas
fistpll
push
adc
xchg
mov
lahf
dec
xor
mov
inc
jmp
test
lret
mov
imul
sbb
push
out
dec
lods
inc
mov
xchg
mov
pop
scas
ja
xor
fs
jo
aas
rcl
xchg
loop
inc
rorb
rclb
xor
shll
mov
lcall
xchg
sub
sahf
mov
mov
out
push
cmp
or
mov
pop
mov
cli
dec
hlt
mov
in
shlb
out
test
jecxz
jge
jb
jno
lret
stos
dec
in
and
cmpsb
cmpsl
or
movl
jo
xor
jb
mov
sbb
hlt
enter
push
mov
scas
flds
std
call
shrb
test
sub
sbb
jp
add
cmpsb
dec
imul
xor
jnp
xlat
add
inc
out
jl
add
mov
mov
cmpsb
ja
cmc
subb
xchg
popa
mov
in
fwait
ret
repz
adc
lret
lcall
ficoms
mov
bound
out
jmp
mov
js
shll
mov
js
or
cwtl
jg
add
add
cli
rol
add
xchg
fwait
xchg
sarl
xor
pop
adc
or
fisubrl
loopne
lcall
xor
fs
fiadds
aad
ficoms
andl
mov
lret
sbb
jo
outsl
jne
and
push
rclb
sub
adc
mov
andl
fsubrs
popf
out
in
loope
adc
fiadds
mov
loop
es
std
fbstp
push
xor
jmp
pushl
mov
andb
push
rclb
negb
ret
in
add
into
inc
mov
addl
fsub
int3
in
push
xchg
rcr
add
shlb
dec
cwtl
imul
dec
xchg
dec
nop
fwait
add
mov
test
pushf
das
add
lret
int3
fisubl
xlat
aaa
mov
je
or
bnd
call
cmc
jns
fsubrs
mov
ss
dec
scas
idiv
pop
xchg
push
das
test
push
mov
hlt
out
sbb
stc
stos
fistps
jecxz
jge
mov
lret
out
frstor
imul
sbb
mull
lret
jne
jae
lock
ja
mov
loopne
jp
ffreep
enter
test
xchg
pop
fldt
mov
js
jle
adc
pop
jp
fdivrs
fs
mov
ja
pop
shlb
push
sbb
cmpsb
xchg
dec
mov
int
fisttpll
jns
cmp
jne
sbb
icebp
inc
into
inc
shl
lea
lds
scas
in
pop
jg
dec
xor
adc
js
sbb
jg
inc
push
push
and
sub
xchg
rolb
cmp
inc
int3
bound
mov
lods
fadds
adc
sub
jb
in
inc
xor
pop
cmpsb
outsb
xchg
cmp
add
mov
jno
mov
cmpsb
and
test
jae
push
testb
pop
mov
mov
ret
fadd
cli
filds
inc
push
sti
sarl
sbb
es
adc
int
cmc
cmpsb
loop
jl
jl
xor
pop
mov
push
dec
sub
ror
movsl
fwait
and
or
inc
jne
xor
pop
mov
push
mov
movsb
cmp
adc
std
mov
sub
popa
lret
push
push
mov
mov
or
push
outsl
cmpsl
inc
jno
les
push
and
data16
aam
and
jnp
inc
sub
sbb
out
mov
ja
cltd
aad
jmp
adc
test
mov
mov
jp
test
add
inc
adc
push
lods
sti
mov
ja
mov
pop
imul
sahf
jae
dec
test
subl
rorb
pop
sbb
cmp
ja
fs
repz
movsb
xor
mov
daa
mov
incl
in
out
mov
repz
inc
xchg
dec
fwait
xchg
mov
outsl
mov
jae
add
lea
mov
push
daa
push
xor
add
xlat
in
mov
mov
jo
sub
dec
xor
dec
push
mov
push
add
sub
cmp
adc
mov
cmpsb
fsub
xor
gs
loope
ja
daa
lods
out
scas
rclb
aam
xor
mov
pop
ss
inc
sti
js
stc
add
xchg
mov
in
repnz
sti
mov
cmpsl
icebp
or
dec
int
subl
inc
les
mov
lods
dec
das
sbb
mov
imul
add
cmpsl
mov
shrb
xor
addr16
xor
ret
aaa
enter
and
gs
data16
cs
repz
and
jecxz
stos
nop
cmp
loopne
stos
mov
mov
movb
in
sbb
cmp
addr16
mov
add
test
push
hlt
push
aam
jns
jge
bound
sub
mov
aas
scas
cmp
cmp
mov
sbb
push
sbb
mov
nop
cmp
in
lds
sub
mov
push
push
sbb
mov
pop
ds
aam
repnz
pop
inc
loope
sbb
xchg
test
add
sti
mov
inc
push
shlb
loop
mov
pop
ret
ds
fwait
jle
cmpsb
mov
stos
imul
addr16
shll
xchg
lahf
xchg
bound
inc
xor
add
ret
jle
inc
mov
stos
or
in
movb
sub
and
loope
fstp
inc
mov
cmpsb
xor
jecxz
pop
or
mov
les
cmp
pusha
in
sbb
jge
push
push
fwait
and
pop
shrb
rol
mov
cmp
daa
pop
outsl
fldenv
insl
and
movsl
push
cmp
and
mov
nop
and
loopne
mov
shl
fisubs
sub
stos
jmp
fwait
cmpsl
pop
subl
repnz
ja
das
sub
lret
dec
ja
xchg
mov
mov
sub
fists
xor
out
push
push
mov
jae
je
jmp
in
sbb
cmc
mov
or
les
shr
jno
push
nop
mov
mov
adc
or
repz
jo
mov
jae
jne
xor
subb
xlat
divb
xor
sbb
push
inc
inc
movsl
sub
cli
dec
scas
out
lds
xor
int
mov
ret
out
push
mov
cmpsl
sahf
add
xchg
or
iret
cld
pop
stos
sub
dec
js
inc
xchg
cmp
cmpsb
mov
cmp
daa
xor
xor
push
and
jae
lds
out
and
push
adc
scas
sub
js
or
xchg
in
aaa
std
cmp
loop
mov
repz
add
jp
mov
and
push
dec
pop
adc
lret
add
fs
cmp
je
scas
push
sub
add
dec
stos
sub
lds
sahf
jecxz
fs
xchg
sbb
add
mov
push
adc
call
dec
test
aas
fwait
sub
ja
rorb
testb
dec
add
es
arpl
sub
mov
mov
les
int3
pop
or
mov
inc
into
call
pusha
sub
and
jge
xchg
int
sub
dec
push
loop
mov
and
mov
testl
jnp
std
mov
out
adc
jbe
cltd
mov
or
out
mov
and
repnz
sbb
aas
inc
rclb
inc
fdivrs
pop
or
lds
mov
imul
nop
or
dec
ss
xor
fildll
nop
ret
push
lds
xchg
mov
pushf
fistl
subl
or
inc
sub
push
jne
mov
add
mov
stos
test
fcmovnb
add
mov
xchg
repnz
xchg
jne
jno
mov
push
adc
mov
xchg
mov
add
loope
jae
or
pop
cmpsl
adcb
fadd
and
ret
sbb
add
rcll
add
les
pop
mov
jnp
xor
std
pop
inc
lahf
in
or
dec
pop
sti
repz
ffree
jp
jae
mov
inc
std
pop
sarb
in
das
adcb
and
mov
mov
jp
jo
mov
mov
push
pop
dec
mov
mov
iret
in
cwtl
pop
xor
cmp
aam
gs
cmp
adc
and
push
xor
mov
and
out
xor
add
fsubl
pop
adc
jne
jo
lahf
inc
rorb
in
push
sub
les
adc
mov
xchg
push
add
rol
push
and
and
sbb
inc
imul
fildl
call
movsl
movsb
test
cli
jno
scas
ja
js
lods
inc
xchg
call
push
fsubs
push
mov
insb
xchg
jo
cmpsb
sub
push
or
sbb
popf
jb
mov
rcrb
loopne
jae
and
cmpsb
repz
push
and
fldenv
lret
pusha
loope
sub
mov
push
adc
lock
add
fiadds
lea
cmp
repz
adc
pop
ja
mov
les
jle
iret
scas
lahf
push
loop
mov
inc
sti
cmpsl
cmp
js
xchg
data16
imul
lahf
and
xor
test
push
pushf
adc
mov
push
in
into
jnp
jae
pop
pop
jno
xchg
xchg
mov
clc
loope
les
test
cmp
enter
fwait
cmpsb
sti
xchg
xchg
jle
sbb
bound
rcl
push
shlb
dec
in
jno
adc
test
and
les
enter
jle
adc
arpl
out
lcall
rclb
sbb
inc
push
scas
inc
cli
sbb
jg
pop
sti
dec
lds
cmp
xchg
cmpsl
out
cmp
fwait
rcrl
sar
clc
lods
stc
xor
repnz
inc
or
jnp
daa
shrl
imul
shlb
test
mov
mov
cmc
and
mov
into
xchg
cmp
mov
lock
rorb
pop
sub
rorb
pop
dec
sti
mov
jo
pop
dec
add
rcrb
and
push
jae
push
push
aad
ret
push
mov
cmpsl
mov
push
mov
mov
cmpsb
xor
out
sbb
mov
push
xor
dec
jge
into
loopne
stos
arpl
add
mov
xor
inc
jns
into
cmp
pop
addr16
xchg
and
push
imull
insl
jno
fs
cmp
or
or
les
mov
into
pop
cmp
out
imul
mov
inc
cmp
and
or
add
scas
stos
testb
and
rorb
ljmp
mov
add
stos
jae
dec
test
cmp
jle
jge
adc
les
in
push
mov
data16
dec
test
leave
or
fstl
mov
stos
shrl
adc
fdivl
pop
in
mov
adc
xchg
popa
sarb
inc
out
pop
test
mov
xchg
test
and
std
ja
xchg
repnz
inc
inc
outsb
fisubl
ja
xchg
dec
imul
jecxz
push
jne
or
xchg
push
lahf
push
dec
adc
pop
mov
pusha
mov
adc
jl
imul
das
mov
sbb
or
outsl
stos
mov
add
pop
leave
insl
lahf
cmpl
int
in
mov
lds
or
sub
pop
scas
out
sarl
and
sub
mov
out
orl
xchg
jno
aaa
jge
adc
xor
pop
cs
mov
pushl
xchg
insl
out
mov
mov
dec
and
testl
aas
test
pop
push
jns
jp
rcr
insb
cmp
scas
sub
jbe
jnp
mov
rclb
lock
movsl
in
mov
stc
inc
sub
mov
nop
std
mov
ror
mov
mov
in
xchg
push
ffreep
test
adc
popa
xchg
push
jb
popf
mov
pushl
xchg
stos
hlt
fdiv
loope
jbe
loopne
push
cmp
aad
adc
aad
xchg
push
icebp
std
push
aas
das
mov
inc
mov
lret
xor
ret
dec
inc
mov
mov
cli
vpmaxsw
push
jne
ret
repz
ljmp
in
lret
gs
or
jns
std
mov
mov
or
jns
add
lret
shlb
test
dec
mov
movsl
test
xorb
mov
sti
insl
ja
mov
mov
aad
cmc
sbb
mov
add
lods
mov
add
add
jmp
shl
mov
jns
and
or
mov
push
out
lods
xchg
mov
dec
add
mov
add
imul
orl
lock
push
add
cmp
addb
test
stos
xchg
jb
inc
lret
stos
and
mov
mov
jmp
aam
or
mov
adc
jecxz
adc
xchg
jp
add
in
loopne
dec
mov
lret
mov
repz
sbb
mov
lea
xchg
pop
icebp
jmp
std
add
sbb
jne
rcll
cmp
popf
movsl
repnz
mov
inc
scas
push
dec
mov
sahf
xor
addl
cmp
loope
push
call
adc
mov
jne
jbe
xchg
pop
decb
xor
jne
dec
mov
cltd
dec
out
pop
cmpb
sbb
aas
dec
push
jb
adc
in
imull
je
jl
mov
push
fwait
jmp
jno
and
inc
pop
repz
ret
jo
push
adc
in
inc
fisubrl
lcall
mov
inc
push
push
stos
mov
insl
aas
pop
xorl
cmpsl
cmp
or
inc
dec
mov
sub
test
mov
pusha
test
sbb
test
add
bound
dec
sti
xor
inc
adc
add
ret
sub
or
dec
leave
fwait
adc
or
int3
or
cmc
test
lahf
test
loop
mov
mov
std
dec
pusha
loopne
pusha
mov
cmp
mov
or
pop
icebp
pop
add
inc
leave
push
jge
jle
lods
sub
jl
aam
mov
xorb
movsl
jnp
loopne
or
jp
dec
hlt
adc
and
xchg
ds
xchg
inc
repnz
jecxz
mov
push
inc
loope
xor
repz
xor
or
mov
adc
insl
mov
scas
or
sub
sbb
sahf
add
mov
popf
mov
sbb
mov
mov
mov
fldenv
add
js
insb
mov
mov
scas
lds
sbb
aas
orb
cmpsb
add
out
imul
jg
sbb
jne
test
lock
xor
dec
arpl
dec
push
rclb
xor
lea
rcr
les
inc
sub
add
out
mov
mov
in
rorl
jo
gs
inc
mov
fisttpl
test
inc
enter
mov
mov
cmp
test
daa
sbb
cli
hlt
mov
pop
imul
mov
daa
cmp
adc
outsl
cmpsl
int
cmpsl
jge
inc
push
lods
sbb
ret
mov
cmp
loope
push
mov
inc
sub
xor
jno
repz
xor
js
mov
rorl
pushf
cmp
cmp
sbb
icebp
mov
icebp
inc
xchg
inc
dec
jo
pop
adc
repz
scas
push
add
shlb
imul
and
xchg
bound
icebp
ja
cmp
mov
push
mov
jne
out
out
mov
stc
add
inc
rolb
or
call
adc
movsl
int3
cmp
mov
xchg
addr16
sahf
dec
lods
mov
push
cld
out
scas
dec
mov
lods
enter
ja
xor
popf
lds
fwait
arpl
pop
inc
es
les
fistpll
and
jp
ja
call
inc
fdivl
movsl
in
fiadds
xchg
jb
test
in
jnp
mov
inc
xchg
jae
loope
add
clc
addr16
mov
jno
mov
sahf
inc
adc
into
xor
loope
mov
flds
sub
xor
pop
jl
stos
fistl
fcomip
daa
dec
orb
aam
das
mov
addr16
add
subl
int3
push
push
testb
push
repnz
mov
xchg
out
and
mov
jmp
or
mov
push
mov
incl
add
xchg
scas
insb
es
les
es
je
jbe
sahf
aaa
adc
push
leave
fisttps
cmp
lea
push
ds
fidivrs
sbb
mov
add
or
dec
jae
negl
inc
fimuls
sahf
faddp
in
jp
push
or
movsl
inc
ja
and
int3
inc
sahf
data16
cmp
inc
sub
filds
push
sub
out
mov
sbb
jecxz
sub
cmp
jmp
les
out
test
js
mov
mov
sbb
scas
call
aam
cmp
dec
mov
add
outsb
fwait
jno
sbb
sbb
fucomp
inc
push
add
mov
jp
inc
jbe
mov
xchg
xchg
jnp
iret
sub
and
ja
and
cmp
xchg
push
dec
jne
addb
je
adc
rcrb
sub
pop
jg
dec
adc
mov
insl
pop
arpl
sti
cs
rolb
jae
add
outsl
cmp
sbb
xchg
notl
insb
adc
or
movswl
in
inc
les
or
adc
repnz
inc
xor
or
movsb
iret
repz
adc
pop
add
cli
lea
xor
rclb
gs
out
sub
int
inc
out
in
inc
sbb
cmp
inc
orl
sub
sbb
pop
mov
mov
fwait
mov
decl
shrb
in
or
pop
in
xlat
stos
add
repnz
and
icebp
adc
jle
inc
mov
xor
push
mov
lods
and
mov
cmc
sbb
addb
lea
push
jecxz
sbb
and
mov
or
cltd
inc
push
inc
add
stos
mov
inc
out
jecxz
xchg
jae
roll
xor
out
data16
jne
test
jae
mov
call
push
lock
fwait
dec
inc
ds
xchg
and
sbb
out
xchg
pop
or
cltd
test
and
or
mov
push
dec
mov
jbe
sbb
mov
adc
xor
mov
push
sbb
fisubs
stos
xor
push
cmc
test
fadds
or
enter
rorl
xchg
xchg
dec
cmpsl
mov
add
mov
xchg
push
test
mov
or
push
mov
imul
imul
mov
fistps
mov
aam
push
subb
pop
adc
fisubl
jo
xor
gs
mov
mov
ja
repnz
bnd
out
cmp
inc
mov
imul
fisubl
repz
adc
adc
cmp
shl
mov
ret
andl
dec
mov
es
add
shlb
dec
aam
adc
xor
sahf
lods
lds
rep
sub
mov
fimull
nop
jp
arpl
stos
xchg
daa
sbb
mov
repz
xlat
jmp
cmp
inc
adc
daa
mov
movsl
bswap
out
mov
mov
test
mov
push
dec
add
adc
outsb
ret
push
sub
xchg
insl
mov
je
cmpsb
aaa
mov
cmp
xchg
fisubrs
xchg
jb
sahf
xchg
mov
xchg
movsl
add
sarb
cmp
shrb
jns
cwtl
stos
xchg
out
cmpsb
add
fdiv
pop
sbb
add
cmpsl
cwtl
or
sub
adc
movsl
inc
xchg
bnd
jno
ret
imul
cwtl
shlb
add
pop
loop
and
adc
jno
add
mov
adc
test
and
inc
jle
jl
repz
gs
mov
lea
jns
sub
loopne
icebp
cwtl
xor
repnz
xor
les
movsb
fistpll
loopne
es
clc
rclb
pop
or
push
int
mov
cmp
insl
mov
xchg
mov
rolb
call
mov
in
xor
test
xlat
nop
jb
xchg
push
pop
aas
jo
and
ljmp
aas
sbb
loopne
in
js
mov
jmp
iret
dec
les
divb
jle
add
movsl
xchg
jo
pop
sbb
test
shll
shlb
mov
repnz
fiadds
xor
add
push
pop
cltd
in
es
je
lret
test
add
shrl
mov
mov
lcall
mov
popf
in
jge
push
cld
mov
leave
mov
adc
outsl
jmp
cmpsl
je
and
sbb
roll
sti
lods
xchg
fiaddl
imul
insl
aad
subb
push
les
cpuid
scas
insl
dec
push
repz
pop
mov
mov
xor
ds
or
pop
jb
cmp
fistps
cmpl
add
xor
sub
andl
jbe
jl
mov
shll
jae
fistl
cmp
sahf
ja
shr
in
jbe
sbb
pop
gs
stc
mov
mov
adc
cmp
xchg
sbb
mov
xor
jne
pop
mov
in
ret
cli
adc
push
jle
add
das
jle
sub
lods
mov
lock
cs
cmpsl
inc
jne
stos
icebp
and
fistpll
pushf
in
mov
xor
rcrb
pop
or
sub
and
pop
movsl
ljmp
testb
cmp
or
ds
lods
aam
popf
scas
fstps
push
cs
cmp
rcll
jmp
mov
cmp
jo
out
jb
jns
stos
lcall
add
cld
pusha
int
jge
dec
inc
icebp
dec
cmp
fimull
dec
jns
into
icebp
xchg
pop
cmp
movsb
and
lret
repz
nop
mov
loopne
dec
jp
mov
jl
push
xor
lret
xor
aam
andl
and
inc
mov
mov
inc
sbb
dec
rolb
or
or
adc
sti
inc
add
mov
xchg
les
jbe
notl
push
push
mov
mov
rolb
jmp
mov
jo
push
dec
mov
fdivrl
cmp
jno
lcall
movsb
in
jp
sbb
out
xchg
push
adc
dec
shrb
jno
adc
out
push
lods
pop
xor
or
sub
ffreep
inc
push
imul
cmpsl
pop
jl
inc
les
inc
jae
cmp
and
leave
jae
fs
adc
mov
outsb
out
call
test
adc
jae
lahf
inc
imul
out
mov
mov
js
dec
cmp
cmp
sub
in
sbb
insl
sbb
xor
cs
mov
dec
jnp
mov
es
inc
fwait
pop
xchg
fidivrs
add
mov
aaa
sub
adc
fists
sbb
push
mov
xchg
je
mov
dec
aas
fmulp
cmpl
popf
imul
inc
out
imul
into
icebp
mov
daa
das
cmp
and
mov
sarl
js
cltd
sbb
test
pop
les
and
lods
mov
orl
push
and
cwtl
mov
jg
mov
push
mov
jecxz
into
and
mov
ficomps
mov
mov
and
mov
movsb
dec
push
xor
addr16
adc
test
jmp
lcall
decl
jecxz
or
push
test
dec
out
pop
and
lods
mov
cmp
or
mov
fwait
sbb
push
inc
cli
testl
add
ficoml
adc
sub
adc
ret
mov
gs
in
mov
call
cmp
xor
and
mov
rcrb
mov
or
aad
mov
stos
inc
lds
xchg
cmp
add
cmpsl
out
adcl
xor
fisubs
repz
ss
lods
fadds
xor
mov
mov
inc
sbb
test
loop
loopne
pop
and
jecxz
in
push
jb
je
jo
add
test
xchg
movl
mov
lret
mov
inc
shlb
fwait
mov
or
mov
push
nop
add
fcompl
dec
sub
xchg
lock
ss
mov
fsub
push
rclb
jb
xor
cltd
sbb
xchg
std
jp
loope
and
in
jl
adc
or
cmp
cmp
ficoml
jae
add
adc
ds
scas
cmpl
cs
out
in
sub
adc
pop
jl
std
rcrb
xchg
out
negl
cmpsl
adc
jmp
icebp
jno
or
jns
jg
xchg
add
inc
filds
jno
sbb
pop
mov
cmpsl
xchg
inc
insl
std
in
fwait
jo
push
jge
fistps
jle
repz
adc
inc
jecxz
mov
xlat
in
sbb
mov
xchg
rorb
sbb
idivl
pop
js
sub
mov
jp
fwait
sti
ja
sub
orl
pop
jne
sahf
jne
cmp
ret
push
add
sarb
rolb
inc
xchg
jno
inc
inc
int3
mov
ret
and
xchg
pop
cmp
pop
or
jo
push
out
dec
lock
sbb
and
fcmovu
add
sub
call
lea
pop
inc
adc
push
or
push
in
and
scas
push
lods
and
mov
or
add
push
xor
insl
sbb
in
mov
negb
mov
call
hlt
ret
cwtl
addr16
push
pop
lret
dec
xchg
push
dec
bound
arpl
push
icebp
shll
dec
insl
push
sti
push
adc
pop
std
js
or
jmp
jg
push
fldenv
ret
ret
adc
adc
movsb
out
iret
mov
mov
stc
mov
ss
cmp
ficoml
cltd
aam
in
cmpsl
sub
mov
daa
pop
adc
or
adc
sbb
xor
imul
dec
inc
pop
outsl
mov
xchg
sub
dec
jb
jp
mov
fldt
rorb
push
bound
call
fisttps
ror
push
sahf
inc
adc
dec
imull
cmpsl
push
push
dec
pop
adcl
pop
icebp
ret
jecxz
rcll
outsb
sub
insb
cli
inc
gs
and
mov
out
std
in
aam
repnz
jb
mov
repnz
push
mov
and
pop
ss
les
inc
push
push
mov
pop
mov
or
jecxz
sbb
and
sbb
cs
lods
mov
daa
add
add
and
leave
jbe
or
cmc
mov
add
push
sti
aas
scas
or
adc
mov
daa
or
fcoms
lods
out
dec
loope
xchg
xor
inc
or
dec
mov
aaa
or
cmp
movsb
test
push
jp
add
notb
xor
iret
ficoms
loop
or
aam
out
mov
or
mov
movsb
or
dec
xor
insl
sti
or
or
jg
mov
xchg
cli
cmp
push
stos
out
cmp
fs
pop
leave
movsb
push
inc
loopne
js
test
lahf
movsl
xchg
std
mov
std
ljmp
fnstcw
sbb
leave
xchg
or
into
jg
faddl
or
adcl
fistpl
sub
mov
cld
test
xor
rorl
mov
lret
aaa
push
fisubrs
repz
lods
into
xor
inc
or
pop
push
shrl
cli
arpl
fnsave
iret
aam
inc
aas
aad
out
mov
xor
movsb
stos
leave
mov
inc
xor
or
outsl
repnz
popa
mov
inc
xor
jnp
xchg
out
or
jb
mov
inc
rorl
sbb
loopne
inc
push
xor
cmp
adc
inc
popa
add
mov
or
inc
pop
test
insb
push
scas
or
sbb
or
mov
or
push
xchg
mov
scas
xlat
rcll
pop
add
stc
fdivrs
push
inc
mov
mov
or
jbe
outsb
adcb
xorl
add
xlat
mov
sub
and
out
fdivr
xchg
jp
pop
inc
imul
xor
or
mov
dec
push
subb
jp
or
insl
popa
sbb
sub
or
ljmp
and
jbe
sbb
push
in
cmpsb
sub
pop
add
lock
mov
mov
js
sbb
add
or
lahf
adc
jno
push
lock
add
fbstp
roll
fildl
jne
cld
inc
std
xor
movsl
add
movsb
lock
lea
pop
push
jge
mov
jae
sbbl
mov
call
push
addr16
or
es
push
rcl
mov
cmc
imul
das
ret
mov
cmp
mov
or
adc
imul
lret
or
out
es
xor
cmp
mov
inc
scas
arpl
hlt
lds
xchg
cwtl
mov
or
mov
shl
rcl
inc
mov
push
or
push
pop
popf
push
dec
je
pusha
adc
movlps
sbb
xor
fisttps
test
push
pop
or
add
out
hlt
mov
dec
sbb
cmp
xor
mov
fwait
jp
or
mov
sub
out
xor
sbb
xor
popl
add
or
add
or
pusha
movsl
or
adc
mov
cmpsl
xor
lcall
inc
sbb
aad
fadds
pop
cli
ds
cmpsl
sbbl
sbb
xchg
and
or
enter
cltd
jns
and
mov
imul
push
test
inc
sbb
shlb
imul
int3
mov
cmp
mov
faddl
sbb
pusha
jecxz
adc
sub
rclb
mov
stc
pop
test
aaa
lcall
imul
xor
in
jne
pop
repnz
sbb
call
lds
and
movsb
cmp
xlat
cs
or
inc
pop
push
adc
or
bound
jae
or
idiv
sbb
sarb
mov
pusha
ret
mov
cmp
lret
iret
ljmp
movsl
ljmp
in
and
push
test
pop
dec
mov
mul
dec
bound
aas
cltd
mov
out
dec
xchg
testl
jl
data16
and
enter
pusha
mov
ljmp
or
xlat
xchg
call
lds
xchg
lods
jae
mov
add
pop
inc
rol
sbb
fwait
push
mov
sbb
sub
inc
inc
ret
fisttps
mov
imul
lods
arpl
push
nop
orb
add
jecxz
scas
or
rcrl
subb
xor
mov
mov
jg
rcr
or
push
aas
pop
push
and
sti
inc
dec
or
shlb
or
je
arpl
adc
jmp
out
mov
cmp
or
mov
repnz
xor
adc
xchg
push
mov
add
cmp
add
jmp
jmp
std
fadds
dec
in
hlt
xchg
lock
xchg
fisubs
xor
jl
lea
imul
or
ja
cwtl
rorb
or
xchg
sub
iret
aam
aas
mov
cmpsl
jle
push
dec
sbb
out
or
outsb
iret
dec
add
rcrb
hlt
sub
inc
or
mov
mov
scas
pop
rclb
sahf
add
mov
mov
cmp
stos
mov
in
inc
loop
add
in
sub
cwtl
pop
iret
icebp
std
mov
push
test
mov
leave
jg
sub
call
in
out
sub
jg
adc
test
mov
sbb
add
adc
xchg
scas
insl
pusha
pop
and
sbb
test
scas
pop
xor
jecxz
fwait
test
xchg
cmp
in
or
cld
pop
nop
pusha
cltd
or
mov
in
sti
xor
in
xchg
fcomps
mov
movl
gs
frstor
lcall
dec
adcb
push
fsub
xor
mov
jbe
xchg
daa
int3
lods
mov
add
adc
jp
add
imul
sub
fmul
mov
mull
sete
or
cmp
shll
out
test
push
sub
stos
mov
sub
add
out
decb
inc
cltd
inc
cli
sub
mov
xchg
xchg
adc
pop
addl
jb
lcall
nop
imul
sub
jecxz
dec
cmpsb
mov
repnz
lahf
mov
push
pop
pop
lcall
into
jb
xor
adc
call
sub
pop
popa
jle
testl
add
dec
push
sarl
push
or
testb
out
fistps
add
fs
add
and
jg
daa
sti
mov
mov
lea
aas
mov
xchg
ret
add
aaa
add
repz
mov
pushf
clc
or
gs
lods
mov
adc
push
mov
or
test
fstl
mov
pushl
mov
jecxz
sub
push
out
pop
sbb
inc
xchg
add
pop
mov
or
jne
and
cmpsb
ret
or
shrl
js
cmc
sub
jle
or
adc
jmp
or
imul
es
loope
lahf
shll
pushl
fsubrl
and
mov
mov
aad
fildll
mov
xchg
dec
cltd
xchg
dec
or
jnp
pop
inc
push
or
jbe
pop
or
aas
fstl
xor
or
xor
pop
or
push
jo
shrb
or
push
scas
pop
cld
int
cmpsb
or
sbb
inc
ret
test
sub
pusha
cld
pop
pop
das
popa
xchg
hlt
mov
pop
and
xchg
xchg
sti
adc
jmp
jns
inc
and
stos
or
cmp
sbb
or
push
pop
repz
lcall
mov
lock
mov
sbb
dec
imul
ds
outsb
push
or
adc
sub
in
es
js
cmpb
adc
mov
xchg
inc
dec
ja
ljmp
hlt
iret
lcall
mov
pushf
xchg
out
fisubrs
sub
or
push
bound
jmp
add
or
sbb
inc
inc
inc
leave
into
shlb
aaa
mov
and
imulb
pop
push
sbb
inc
dec
pop
and
arpl
xchg
mov
xor
shr
out
sbb
add
sbb
xor
shll
ja
mov
inc
stos
xor
aaa
mov
aaa
mov
lods
ret
cmp
xor
stos
lcall
jecxz
nop
pop
cmpsl
cld
fucomip
jbe
inc
mov
sbbl
lods
insb
repz
data16
and
adc
aaa
push
cmp
rclb
outsb
das
pop
mov
mov
and
jnp
dec
or
jmp
lds
mov
push
cmp
jecxz
mov
xchg
jge
les
aad
sbbl
sbb
sti
pop
jb
hlt
stc
xlat
mov
fwait
es
imul
scas
cmp
mov
fiadds
add
xchg
cmp
inc
sarl
daa
mov
xor
cmc
dec
out
pop
loope
pop
in
pop
pop
imul
daa
or
frstor
lods
inc
xchg
mov
cmpb
addr16
into
mov
jle
lret
arpl
inc
push
xchg
and
xchg
rcrb
loope
or
gs
ret
movsl
or
xchg
push
adc
in
sbb
int
pop
inc
sbbb
test
mov
sub
bound
filds
aas
shl
xor
mov
insl
sub
cmp
xor
lock
dec
aad
in
out
fwait
sbbb
or
cs
stos
dec
and
std
and
jmp
lcall
sbbb
xchg
rclb
pop
adc
ss
mov
adcl
aas
enter
int
push
jecxz
sub
add
aas
call
cmc
push
pop
gs
rclb
ljmp
cmp
xchg
push
or
mov
pop
test
mov
ja
mov
inc
gs
outsl
in
sbb
adc
imul
dec
push
jnp
sbb
push
xchg
loopne
les
fildl
xchg
cmp
xor
mul
jbe
movsb
jo
outsl
fdivs
cmp
mov
jge
adc
lock
pop
jno
push
push
shlb
xor
push
mov
xchg
jne
cwtl
sub
jp
scas
xchg
ds
jo
mov
fs
out
stc
addr16
cmpsl
out
jne
inc
jl
push
vphaddudq
jl
cmp
dec
sub
xchg
mov
sar
sub
test
jecxz
xchg
arpl
cld
push
push
dec
out
sub
mov
cmp
pop
shl
push
xlat
mov
mov
mov
add
arpl
inc
xor
add
test
push
or
and
add
aas
popf
mov
pop
and
mov
cwtl
popf
xchg
add
sub
sbb
or
mov
shll
shlb
mov
dec
rcrl
movsb
mov
mov
fisubl
int3
and
jmp
mov
insb
std
adc
pop
cmovg
cmp
out
pop
rcrl
leave
xchg
push
test
inc
cld
mov
jecxz
lds
or
xadd
les
daa
filds
inc
mov
pop
fbld
stos
cwtl
aaa
pop
js
sub
push
mov
fisttps
add
xchg
adcl
jo
xor
sahf
xchg
cmp
test
push
xor
inc
xchg
shll
lods
testl
push
add
pusha
jns
xor
and
mov
fwait
mov
ror
mov
push
jle
or
cmp
inc
sbb
or
dec
adc
jp
xchg
jb
xchg
test
xchg
xchg
jnp
pop
mov
fidivrl
repz
aam
jge
inc
scas
out
daa
les
jne
stos
adc
or
cmpsb
pop
fs
mov
jmp
mov
jne
outsb
rcr
xor
or
gs
or
xchg
sub
xlat
mov
les
aas
and
lds
xor
or
les
iret
add
iret
pop
add
in
das
stos
lcall
push
mov
mov
in
inc
mov
xlat
fidivrs
mov
les
xor
mov
pop
shrl
mov
lea
push
adc
cltd
mov
jae
movsb
ja
lock
test
mov
sbb
adc
push
addr16
lods
fidivrl
mov
out
pushf
jmp
dec
jno
orl
repnz
or
out
clc
mov
and
mov
lock
es
mov
mov
les
pushf
mov
or
shlb
push
call
movsl
xchg
cmp
mov
push
cmpsl
xor
jbe
add
push
sbb
dec
out
or
insl
lods
dec
les
pop
mov
mov
push
jge
sbb
rcrb
adc
xlat
mov
xor
inc
out
sarb
les
cltd
mov
out
and
xchg
or
mov
ja
mov
repz
dec
and
fadds
adc
inc
jo
add
les
rcr
mov
push
xor
push
fisttpll
xchg
stc
lock
mull
es
mov
mov
mov
jae
push
and
cmc
and
sub
dec
loope
and
xchg
sbb
test
mov
cltd
pop
push
cltd
jns
in
cmp
aaa
pop
repnz
jle
pop
movb
pop
into
or
xchg
xchg
lret
ljmp
mov
cmp
fisubs
pop
pop
loope
xchg
les
sbb
mov
mov
cmp
dec
dec
add
fsubr
jecxz
mov
cmpsl
cwtl
mov
fs
int3
lahf
stc
push
fwait
sbb
xchg
mov
inc
stos
xchg
pop
mov
jbe
xchg
adcl
dec
jge
fistpll
sub
dec
mov
outsb
and
push
inc
shrb
mov
cmpsb
mov
bound
fucomi
mov
out
flds
std
cltd
and
push
push
mov
cld
leave
add
jecxz
dec
jb
inc
lahf
ret
jo
adc
movsl
jmp
repnz
mov
or
popa
aaa
jnp
mov
std
imul
je
dec
adc
test
test
scas
fidivl
add
or
jb
popa
outsb
sub
jns
sbb
xor
push
int
in
or
jge
dec
push
pop
je
out
gs
pop
add
pop
fnstenv
in
test
sti
jg
xor
push
pushw
xchg
cmp
out
arpl
sbb
push
or
aad
nop
in
jmp
mov
incl
fcmovnb
gs
cli
mov
movsl
xlat
push
pushl
arpl
xchg
push
cmpsl
pusha
lret
xchg
aad
push
push
jl
mov
push
fisubl
insl
lret
add
aaa
adc
or
xor
sub
in
or
xor
xchg
lahf
push
or
lock
adc
fwait
add
test
push
xor
mov
jno
mov
cmc
and
or
out
nop
or
int
cmp
jb
push
popa
mov
push
iret
arpl
cmp
test
cmp
dec
movsl
cmp
ret
jg
sbb
xchg
dec
add
lea
mov
mov
add
test
push
popf
cmc
fs
pop
mov
and
pusha
and
and
and
push
cmp
xchg
pop
sub
add
push
cmc
les
aam
push
out
lcall
cld
or
jmp
push
adc
dec
inc
out
cs
push
jp
cmovno
push
jne
dec
stos
or
mov
bound
push
enter
push
or
push
fnsave
out
imul
leave
push
in
or
pop
mov
xor
xor
xor
add
cmpsb
popa
fstpl
sahf
pop
mov
mov
cmp
mov
cmc
push
xchg
cmpsl
or
jb
jo
adc
or
mov
adc
push
xlat
jbe
sbb
arpl
rcll
mov
fldenvs
push
ljmp
inc
ss
or
mov
sbb
dec
add
ret
mov
or
push
stc
pop
jmp
cli
pop
xor
inc
xor
jae
or
lea
pop
lcall
push
add
aaa
pop
fwait
or
jg
icebp
lret
loop
xor
or
movsl
jl
lcall
add
xchg
inc
or
adc
nop
mov
xchg
cmpsb
xchg
test
cmp
jge
jle
add
inc
sbb
ret
dec
pop
imul
xchg
or
fmull
jno
cmpsl
add
cmp
dec
call
popa
jo
shll
stc
or
mov
rcl
psubd
push
add
in
notb
testl
or
je
xor
arpl
add
in
jno
cmpl
and
imull
int3
and
mov
sbb
icebp
pop
sub
mov
fwait
sub
iret
and
test
pushf
test
or
inc
xor
mov
iret
sub
test
mov
jge
repnz
outsb
std
orb
xchg
xlat
call
or
nop
test
scas
int3
lock
dec
or
popa
mov
or
mov
jl
and
cs
leave
jbe
pop
inc
imul
lods
push
imul
mov
addb
sub
adc
scas
sbb
adcl
pushl
insb
jg
fisubs
aad
cmc
mov
or
jmp
sub
or
fdivrl
dec
scas
mov
or
lds
aas
lret
loopne
into
mov
or
outsb
stos
dec
dec
sub
cmp
repz
cs
negl
and
jl
rclb
push
int3
mov
out
fistpll
ret
push
clc
or
push
test
les
jl
pop
aas
call
fisttps
jp
xor
icebp
or
sbb
call
das
jnp
push
sbb
icebp
jae
std
es
mov
mov
roll
inc
sbb
outsl
jns
or
jecxz
mov
inc
mov
lods
imul
sbb
repz
sub
pop
mov
scas
call
mov
out
out
push
mov
mov
aam
sub
or
mov
nop
xchg
or
stos
xchg
cmp
and
xor
adc
or
inc
ss
es
jmp
mov
adc
loopne
mov
cmp
push
hlt
nop
or
push
xor
and
mov
or
pop
mov
repz
or
sub
iret
dec
inc
adc
cmpsl
add
or
stos
test
xchg
mov
or
jno
push
mov
cmp
mov
xchg
pop
and
mov
cmpsb
mov
pop
or
imul
inc
loope
stos
ret
decl
pop
pop
adc
xor
fwait
lret
mov
push
sub
lea
add
ret
nop
dec
mov
or
bnd
inc
mov
shrb
enter
lret
rol
dec
jbe
lock
call
jmp
mov
bound
test
lret
out
outsb
sub
adc
in
sbbb
add
mov
push
add
or
pop
rcrb
pop
insb
xchg
decl
adc
pop
nop
scas
sti
mov
push
call
lods
sub
inc
cld
push
xchg
sti
adc
pop
pop
or
repnz
mov
sbb
in
in
jmp
or
mov
stc
les
cld
adc
mov
movsl
into
mov
jp
xor
lcall
daa
xchg
sub
or
vmovd
icebp
add
clc
add
insl
loope
push
xor
mov
sub
and
loop
cmp
push
aaa
mov
out
sahf
mov
fs
cmp
je
cltd
hlt
or
pop
aad
xchg
push
rorb
jo
add
ret
adc
dec
xorb
jo
repnz
mov
xchg
out
mov
dec
sbb
push
sub
rcrb
jnp
push
ss
mov
push
inc
or
lcall
sbb
sbb
push
call
in
lods
rorl
lahf
sbb
or
mov
movsb
rclb
add
pop
out
xchg
mov
cmp
jo
push
or
pusha
mov
mov
sbb
dec
insl
mov
push
gs
inc
cs
xchg
xchg
push
jle
pushf
and
mov
popa
push
or
inc
fdivrl
dec
cmp
cmpsb
jmp
aas
pop
out
fldl
adc
les
enter
icebp
push
add
call
sahf
push
mov
test
inc
and
ds
lock
xor
and
sub
xor
mov
sbb
scas
or
mov
ret
sbb
or
push
cmpl
rcll
outsl
push
sbbl
xchg
shll
add
test
rorb
scas
add
pop
mov
xchg
fcmovne
imul
dec
push
enter
xor
stos
sub
gs
repnz
out
or
or
rcrb
stc
enter
jge
jmp
mov
pop
or
dec
jg
ds
jl
jle
ljmp
and
dec
lcall
xor
es
scas
and
lahf
adc
or
dec
add
inc
testl
pushf
iret
xchg
jge
xor
faddl
stos
imul
push
xchg
jg
or
or
add
rorb
popa
loop
loopne,pn
gs
or
mov
or
out
sbb
sbb
add
xchg
test
mov
mov
or
push
test
outsl
sub
flds
dec
adc
fcmovu
out
mov
sub
add
push
int
test
jle
and
push
push
push
or
pop
sub
mov
push
mov
or
not
cmc
ja
pop
push
jge
test
xor
orb
xchg
pushf
into
fdiv
or
pop
lahf
and
pop
or
out
mov
dec
sbbb
mov
adcl
frstor
ret
add
and
iret
and
divl
mov
mov
or
out
dec
pop
mov
cli
pop
dec
push
and
xchg
fs
in
test
mov
insl
data16
xor
push
or
rcrb
jno
sahf
rcll
cmp
ficoms
and
xchg
lods
fisttpll
push
stos
push
adc
dec
inc
nop
mov
int
lcall
xor
xchg
dec
les
repz
lea
lods
mov
xchg
cltd
lods
lock
shrb
cmp
dec
mov
push
inc
mov
mov
sahf
xchg
shlb
pop
or
mov
adc
fwait
into
xor
mov
xor
adc
xchg
subb
lods
pop
js
mov
xor
rcrb
push
jno
add
scas
jg
rcrb
gs
jecxz
or
sub
or
fadds
pop
push
xor
sbb
mov
stos
lcall
cmp
adc
sbb
gs
adc
pop
jl
mov
js
mov
push
and
sub
dec
ljmp
das
xchg
mul
hlt
sbb
js
addr16
fadd
mov
loopne
and
mov
cmp
mov
mov
test
in
rclb
ror
fistps
stc
lods
adc
gs
ret
pop
rcl
rclb
insl
inc
lods
dec
jbe
sbb
std
shlb
push
dec
jge
or
cmp
out
or
int
push
push
sub
cmp
add
loopnew
outsl
mov
push
or
jecxz
fistps
mov
dec
inc
adc
sbb
shlb
dec
int
dec
mov
push
popl
fidivs
pop
testl
loope
je
js
lahf
and
sbb
outsl
dec
stc
pusha
pop
push
cmc
mov
cltd
adc
out
cmp
loopne
data16
jne
popa
inc
and
cmp
or
pop
mov
loope
lods
out
cwtl
idiv
rcrb
and
xchg
or
and
scas
insl
mov
je
shll
jl
ss
mov
je
push
pop
push
insl
add
pop
jns
or
inc
and
ficomps
fisttps
mov
pop
mov
repz
stos
xor
fidivrs
dec
lret
movsb
mov
mov
mov
imul
push
imul
test
xchg
mov
push
and
jle
push
inc
or
faddl
out
sub
sbb
push
adc
jo
push
jle
stos
push
jp
mov
cmc
or
dec
push
data16
xchg
mov
data16
mov
loopw
fidivl
add
jo
jle
dec
jo
lods
inc
and
in
or
fnsave
stos
push
out
dec
jae
sub
add
ficomps
add
dec
sub
push
pop
subl
jno
mov
and
add
and
test
lods
aad
dec
imul
pusha
jae
sub
inc
inc
icebp
rolb
push
pop
int
imul
adc
mov
rcrl
je
sub
push
pop
sbb
push
sbb
pop
add
adc
lods
pop
push
cmpsl
mov
fiadds
mov
outsl
pop
out
aaa
or
fstps
mov
es
jge
cmp
inc
sahf
pop
and
adc
xor
xchg
xlat
in
mov
pop
neg
and
aas
lock
les
mov
jo
pmulhw
adc
dec
add
out
and
xchg
in
sbb
sti
repnz
or
cltd
and
sub
sti
rcrb
xchg
xchg
in
cmpsb
std
cmc
neg
xor
dec
lods
mov
jo
shll
sbb
sarb
pop
dec
dec
xchg
sub
inc
ja
hlt
and
inc
sahf
lea
cmp
mov
arpl
gs
mov
sub
cmc
shll
adc
insl
and
pop
int3
jae
pop
inc
pop
xor
cli
mov
sarb
jg
inc
enter
cwtl
cmp
sub
aaa
mov
mov
mov
daa
cmpsb
out
xchg
add
sub
in
outsl
sub
leave
fwait
or
jg
pop
jp
mov
pop
decb
les
enter
aas
mov
mov
leave
sahf
rcrb
sbb
push
jno
rcrb
adcb
pop
ret
fnsave
dec
add
aas
or
xor
jl
sbb
pop
mov
xlat
test
sub
cmpsl
xchg
and
ret
or
test
lahf
gs
xchg
pop
lea
or
sbb
mov
neg
lret
out
push
jmp
popf
mov
mov
scas
clc
stc
push
hlt
pop
cld
xor
mov
das
inc
mov
jg
cmp
test
fildl
std
ds
and
sarl
or
mov
adc
ja
adc
test
sbb
cmpsl
iret
cmp
loop
mov
push
sarb
nop
adc
idivl
sahf
popf
cmpsb
pushw
mov
xchg
mov
ss
cmpb
outsl
add
push
sub
loope
pop
test
and
testl
mov
adc
filds
into
ss
inc
imul
cmc
scas
cmp
std
sbb
fisttps
dec
shll
xor
cmp
pop
in
mov
out
movsl
fisubrl
aad
inc
jl
xor
test
aad
push
and
hlt
fnstenv
add
jmp
hlt
std
mov
into
ror
xchg
mov
dec
movsl
orb
stos
ficoml
into
dec
out
pop
stos
lods
movsl
aad
adc
int3
aaa
and
aad
aaa
pop
adc
fidivl
repz
test
pop
popa
xor
pop
or
inc
jne
loope
xchg
adc
loop
jge
push
outsb
test
rolb
mov
xchg
repnz
imull
fcmovnb
and
add
sarb
sbb
mov
mov
testb
jecxz
adc
and
push
bound
std
stc
push
cmp
xor
mov
ret
pop
xchg
les
push
mov
xor
mov
add
bound
xchg
xchg
fistps
data16
enter
add
jge
xchg
leave
sarl
mov
subb
add
in
mov
sub
rcl
aas
inc
sbb
movsl
ret
sub
das
test
cmp
rorl
mov
mov
daa
jae
mov
hlt
mov
mov
and
out
jmp
xchg
add
mov
jae
mov
bound
adc
push
xor
jbe
ja
pop
dec
loope
dec
mov
xchg
xchg
push
vpunpckldq
mov
pop
loope
xor
imul
or
mov
mov
jb
push
cmpsl
add
mov
inc
jbe
sahf
addr16
stos
mov
mov
popa
std
fcomps
inc
xchg
push
jb
call
jecxz
mov
cld
int
adc
add
das
js
repz
or
loop
xchg
adc
mov
cmpsl
repz
mov
jns
lret
pop
lea
lea
lret
sbb
adc
movsb
mov
or
repnz
ja
mov
or
gs
jle
adc
out
movsl
ret
mov
lods
or
outsl
jmp
inc
push
into
adc
test
pop
imul
lods
adc
pusha
push
fmull
ret
inc
daa
and
jne
adc
xor
faddp
mov
adc
xor
xchg
int
outsl
hlt
sub
les
ja
xchg
dec
or
jle
ja
sbb
es
mov
xrelease
cmp
sbbl
shlb
shlb
dec
cmp
stc
hlt
sub
sub
lahf
cmpl
or
adc
aas
push
cmc
mov
jecxz
xor
jae
out
or
into
cltd
xorl
es
mov
lret
mov
stos
lcall
cmpsl
push
clc
cld
jns
cmp
dec
pusha
into
fnsave
sti
aaa
xor
mov
div
sahf
es
imul
add
jg
xchg
les
js
test
fidivrl
and
xchg
or
std
jl
repz
adc
mov
sbb
in
add
ficomps
and
daa
mov
imul
pop
mov
inc
clc
sbb
lods
imul
inc
xchg
pop
js
mov
push
shr
add
fdiv
stos
std
mov
pop
xor
ret
gs
jl
mov
mov
clc
filds
cltd
rclb
call
mov
add
cmc
dec
add
mov
loopne
cltd
dec
sbb
out
out
fmul
stos
leave
and
and
rcll
mov
cmpsb
fstpl
ret
mov
stc
lret
stos
push
sub
test
add
add
shlb
ret
cld
jge
and
bound
cmp
mov
push
repnz
and
repnz
daa
mov
pop
mov
jo
mov
xlat
cmp
cmpsb
push
fisttps
mov
push
out
jmp
xchg
or
cld
cmpb
xchg
call
sti
iret
insl
inc
jl
mov
add
cmpsb
dec
dec
mov
out
jmp
pushf
cmp
jmp
into
inc
pushf
rcl
in
mov
lea
push
pop
scas
push
loop
test
movsb
icebp
test
pop
cmpl
sbb
mov
fmul
daa
cmp
dec
addr16
int
jp
xchg
outsl
or
mov
cmpl
test
dec
and
cwtl
lcall
push
out
xchg
stc
pop
cmpsb
jge
mov
call
shll
adc
jg
jmp
nop
aas
negl
mov
xchg
mov
cld
xchg
xor
jae
addl
stos
mov
movsl
xor
insb
les
icebp
jo
adc
inc
movsl
into
push
aaa
push
imul
mov
cmp
loopne
cmp
pop
cltd
and
lret
add
pop
mov
push
scas
inc
mov
mov
add
mov
cmp
mov
pop
imul
fucomip
popa
adc
mov
out
shrl
lock
pop
lret
adc
sar
into
fwait
adc
jno
sbb
adc
ret
vprotb
clc
push
sub
cs
xchg
popf
xchg
lcall
cmpsb
pop
mov
or
pop
aaa
jecxz
add
test
dec
mov
mov
ret
mov
adcl
pop
push
test
mov
pushl
push
lock
insl
pop
push
movsl
inc
xchg
les
cld
or
inc
adc
dec
aad
push
xchg
rorl
outsl
mov
xor
jecxz
cmp
scas
xor
sar
sbb
ljmp
lods
cs
fmulp
and
pop
negl
sbb
out
adc
inc
insb
and
xor
lock
bound
dec
ret
mov
roll
stos
mov
or
pop
mov
jle
iret
mov
insb
or
cmp
push
push
cwtl
nop
add
mov
xor
ja
dec
loop
sbb
aad
and
add
cmp
bound
mov
push
scas
push
mov
mov
lds
or
adc
cmp
bound
inc
jne
push
jno
out
mov
rorl
add
cwtl
jae
fwait
cmpsb
mov
sub
mov
out
jge
roll
ss
js
test
xor
add
inc
int3
fbld
mov
pop
or
repnz
lcall
in
xchg
lds
in
nop
mov
mov
mov
subl
xorb
call
jno
add
xchg
je
sbb
popa
jbe
popa
cwtl
icebp
sbb
jge
movb
adc
cs
dec
mov
gs
inc
cmp
out
lcall
loop
inc
dec
lods
sub
mov
fistps
sbb
mov
mov
inc
xadd
and
loopne
mov
dec
push
or
es
stc
scas
dec
dec
out
enter
imul
pushf
mov
and
adc
jae
sub
and
imul
inc
cmpl
aad
or
loop
testl
or
xchg
pop
pop
movsb
arpl
cmp
mov
popa
cmc
fimuls
dec
aas
mov
xchg
fwait
add
lods
pop
sbb
out
shrb
jle
iret
aam
xchg
in
push
int
addb
push
add
pop
in
cmpb
cmp
fs
sbb
cmc
sbb
aas
pop
jle
jne
into
and
xlat
pcmpgtb
inc
ljmp
int
xor
repnz
daa
int3
or
push
cmp
rclb
into
call
loop
icebp
pop
jl
imul
in
sbb
sub
lret
adc
cmpsl
addl
or
pop
xor
fisttpll
pop
jg
adc
dec
xchg
sbbl
adc
stc
dec
push
fiadds
sbb
incb
mov
out
aam
loop
fidivrs
mov
or
ret
sub
out
xchg
sbb
ret
js
ja
sub
daa
je
inc
sarb
ds
xchg
inc
pop
mov
jl
push
mov
xchg
or
scas
push
inc
rorl
push
outsl
lret
mov
jbe
ffree
aam
ljmp
das
and
and
dec
sbb
pop
popa
lods
adc
pop
xchg
movsb
inc
ljmp
jl
imul
jle
push
cmp
dec
mov
ret
or
adc
adc
push
sbb
movsl
mov
repz
stc
idivb
fadds
push
out
loopne
add
sbb
add
inc
rcrb
and
inc
jne
pop
xor
dec
js
mov
or
xchg
les
cwtl
push
mov
dec
cmp
fcmovb
sbb
jbe
fimuls
adc
ret
mov
ja
xor
add
cmpl
adc
or
loop
xor
push
aam
sahf
pop
in
mov
into
rcl
xchg
call
mov
pop
mov
push
push
inc
insb
mov
cmp
push
js
or
mov
es
mov
jmp
push
int
fldenv
push
mov
enter
mov
mov
adc
iret
testl
mov
inc
je
fnstcw
mov
pop
dec
iret
add
les
addr16
lods
pop
ss
sbbl
xor
pop
xor
out
test
add
in
mov
repz
das
xchg
incl
jne
push
push
sbb
leave
mov
pop
in
scas
and
dec
add
or
jne
push
repz
inc
push
in
mov
pop
mov
and
xchg
push
fwait
bound
daa
popa
jmp
fdivp
xchg
jl
jae
ljmp
adcl
inc
push
mov
int3
hlt
movsl
inc
popa
fidivrs
ret
xchg
ja
or
push
mov
lock
inc
mov
nop
xchg
xor
mov
mov
mov
testl
jecxz
jns
xor
divb
mov
hlt
in
stc
dec
inc
dec
std
rolb
sbb
sub
outsl
lcall
jecxz,pt
clc
xchg
rcr
adc
scas
gs
mov
fdivp
leave
lds
out
lahf
shl
or
popa
sbbb
sub
ret
subl
stos
popf
fistps
pop
push
sbb
cmpsl
dec
add
xor
jge
clc
std
sub
mov
sbb
out
xchg
je
inc
mov
mov
mov
xchg
inc
jg
test
cmpsb
inc
stos
hlt
fimuls
pop
inc
inc
cmp
movsb
jle
repz
lds
orb
push
lcall
cli
bnd
add
sub
jns
push
sar
into
rcrb
sbb
mov
aad
data16
scas
or
pop
sbb
mov
or
sbbl
xor
push
dec
movsl
pushf
jp
push
mov
imulb
fcomps
lcall
and
adc
push
push
xchg
push
dec
lock
addl
inc
or
les
rorb
dec
lock
mov
or
cltd
and
cmp
mov
mov
daa
and
pop
leave
jne
pop
in
ja
loope
mov
scas
fbstp
neg
in
in
addb
arpl
in
xchg
call
mov
movsl
mov
xor
cmpsl
loop
cld
repz
cli
ficoml
jle
xchg
adc
hlt
push
cmpsl
lahf
jns
pop
add
imul
add
jp
hlt
rclb
pop
sbb
loope
push
nop
pusha
out
outsl
and
mov
rcrb
adcl
mov
xor
stos
sub
or
xchg
sub
jb
xchg
scas
fwait
sub
cmp
ja
nop
add
fucomi
push
xchg
and
mov
repnz
jle
repnz
icebp
pop
shl
sbb
fucomi
xchg
push
xchg
stos
push
dec
pop
out
add
add
rorb
in
out
sub
or
pop
jp
aam
pop
sbb
mov
into
stos
in
sbb
mov
icebp
mov
in
push
outsb
add
add
mov
sahf
mov
aad
mov
test
adc
sbb
pop
cltd
stos
cltd
or
cmc
mov
or
adc
or
stos
xlat
sub
jle
or
cmpsl
xor
mov
adc
pusha
pop
cmp
push
stos
shl
pop
insl
in
imul
xchg
dec
or
adc
sub
jnp
lock
pop
cmp
bswap
mov
sub
or
lahf
out
sar
or
jle
leave
or
mov
icebp
or
cwtl
adc
out
add
or
adc
or
in
or
popa
cmp
pop
je
fs
les
cmp
rcr
fwait
mov
push
xor
std
pop
stc
ficoml
mov
push
out
cmp
xchg
xchg
or
xchg
or
dec
js
push
mov
rcrl
or
jo
popa
and
fucomp
das
adc
shrl
mov
popa
sub
ret
out
pop
decl
das
loopne
or
adc
inc
pop
leave
cmp
pop
push
jo
fimull
rcr
pop
fidivrs
dec
inc
or
aad
je
adc
shll
gs
push
mov
cmp
push
sahf
fdivl
lahf
mov
jno
or
cmpsb
xchg
push
das
or
mov
xor
inc
or
xor
push
das
orl
add
or
xor
ss
mov
movsb
and
add
push
dec
add
dec
rclb
ljmp
pusha
es
add
inc
into
std
pop
inc
ljmp
cmp
xor
aam
inc
dec
orl
sub
fwait
or
inc
jnp
push
jge
mov
jecxz
adc
fcoml
into
inc
cmp
cmpsl
mov
mov
inc
xor
sub
pushf
rdtsc
pop
fnstcw
lahf
test
dec
pop
outsb
sub
add
mov
mov
jb
repz
shll
pop
clc
out
xchg
test
lret
mov
out
rclb
stos
subps
sub
add
mov
or
mov
cmp
popl
cmc
pop
xchg
stos
or
or
hlt
loopne
mov
or
push
idivl
lea
xchg
push
ret
add
push
jnp
or
fldl
or
add
iret
or
out
icebp
push
xorb
cmp
or
pop
push
out
std
fldcw
loope
pusha
repnz
mov
mov
out
xchg
or
xchg
sbb
nop
imul
bound
dec
outsl
pop
sbb
add
jmp
jb
clc
mov
push
out
rcr
push
dec
mov
or
sbbb
or
jne
mov
or
or
data16
cwtl
call
mov
leave
xor
out
mov
push
into
je
std
nop
sahf
lock
mov
sbb
sub
pop
mov
lcall
jecxz
ds
push
cmp
scas
mov
xor
push
and
push
lahf
inc
inc
lods
orl
cs
leave
fsubrs
shlb
mov
sub
jmp
jp
fldl
pop
push
adc
mov
inc
xor
test
rolb
jle
or
adc
sbb
popf
dec
jle
mov
stos
idiv
cmp
test
out
push
push
flds
ds
xchg
je
cmpsb
lcall
rorb
daa
arpl
lods
out
sbb
outsl
and
ret
loop
movsl
outsb
out
into
ret
fadd
inc
rorb
data16
fadd
inc
bound
adc
and
js
or
sbb
mov
xor
lock
data16
jae
imul
in
sub
mov
or
jg
mov
gs
add
insl
pop
arpl
mov
mov
popa
lret
mov
movsl
sbb
or
xchg
ljmp
mov
pop
add
sti
add
mov
inc
outsl
jp
shr
sbbl
cmpsb
mov
inc
lock
or
mov
xor
aaa
inc
adc
xor
decl
push
push
loope
fwait
add
push
push
nop
cmpsb
and
xchg
out
adc
fld
xchg
rclb
rcrb
inc
shr
pop
lock
or
cmp
lea
ds
push
pop
or
jle
nop
or
iret
sub
or
insb
or
je
cld
fwait
inc
pop
push
mov
lea
popl
lock
cmpsl
aam
or
xchg
or
out
ret
mov
sbb
add
jge
add
addr16
add
repz
mov
or
sbb
dec
or
jmp
jle
xlat
or
adc
or
cs
js
or
subb
lods
gs
int3
mov
in
dec
pop
rol
lret
outsb
mov
dec
jo
mulb
or
sbb
mov
pop
xchg
add
iret
push
insl
or
pop
or
or
shll
or
pop
ret
dec
inc
out
rorb
jmp
daa
cltd
adc
ret
xor
scas
jae
add
or
iret
cmc
mov
lahf
or
std
ficompl
cmp
lock
or
shll
or
and
cwtl
or
lock
push
inc
or
leave
mov
or
add
pop
adc
dec
mov
add
xor
or
iret
ds
mov
jnp
pop
xor
xchg
or
or
je
incb
jg
mov
push
es
dec
cltd
test
out
test
gs
repz
dec
ficoml
loope
sub
pop
out
and
push
dec
xor
fldenv
lahf
xor
push
jp
into
sub
jns
dec
cmpsb
popf
add
push
mov
sbb
pop
xor
pop
outsb
xchg
sub
dec
test
int
or
mov
mov
lret
sbb
dec
cwtl
jns
push
lods
clc
fstps
jno
ret
scas
inc
push
and
adc
jge
out
mov
mov
lret
dec
inc
sbb
cwtl
cld
cltd
test
ja
cmp
mov
push
xor
or
inc
orb
ljmp
mov
push
cmp
stos
pushf
push
movsb
push
or
and
xor
dec
cmp
push
mov
sub
outsl
fst
add
shlb
pop
sbb
je
jno
pop
in
data16
shll
sbb
inc
xchg
pavgw
cmpsb
or
push
daa
lahf
adc
or
clc
xchg
or
mov
sub
xor
movsl
add
push
adc
in
mov
ja
lods
mov
iret
push
fnsave
and
push
xor
jg,pn
add
or
das
sbb
xchg
or
xchg
cmpsl
mov
mov
enter
adc
push
or
xchg
loope
pop
pop
mov
lods
flds
cltd
and
leave
loope
add
shl
iret
pop
sub
and
out
adc
xorb
add
jae
mov
clc
movsb
or
es
xor
mov
bound
add
push
arpl
shlb
das
mov
xchg
out
leave
sti
imul
mov
outsl
stos
dec
test
movsl
cmc
jns
mov
push
out
cmpb
or
adc
mov
push
pusha
orl
je
pop
add
std
iret
imul
or
into
dec
mov
or
fdivr
sbb
sahf
jmp
pop
and
push
lcall
mov
sti
mov
fstpl
wbinvd
mov
inc
ret
daa
jecxz
and
mov
jmp
cmp
inc
inc
push
dec
xchg
movsb
daa
inc
add
cmpsl
or
ds
push
cwtl
pusha
les
cmpsb
xor
aas
sbbl
mov
or
mov
push
rclb
sub
loop
ret
or
push
cwtl
xchg
pop
push
jl
adc
testl
xchg
fxam
mov
push
hlt
lahf
sahf
or
fbstp
ja
xchg
adc
or
xor
gs
sbb
pop
dec
andb
xchg
cmp
add
jecxz
fisttps
outsb
js
jl
push
data16
mov
xorl
adc
iret
push
jmp
jge
jne
mov
int
add
xor
jno
dec
cmp
imul
sbb
jb
pop
and
iret
roll
jae
fadds
xor
bound
test
scas
sahf
pop
gs
filds
insb
sub
popf
or
dec
inc
push
fucomi
jns
adc
or
xor
jle
push
lahf
outsl
hlt
pop
jne
loope
jl
or
mov
idiv
out
add
iret
add
loop
xchg
inc
mov
insb
xchg
movswl
sbb
outsl
mov
cmp
dec
inc
cld
les
out
mov
lahf
adc
outsl
push
mov
inc
add
lock
jmp
mov
das
repz
jmp
mov
jecxz
or
jo
pusha
setl
shrb
test
adcb
xchg
lock
movsl
mov
jbe
mov
cltd
ja
xchg
idivb
aad
adc
mov
inc
flds
sbb
cmc
outsl
dec
movsl
sub
jo
pop
divb
push
xchg
icebp
out
in
add
shrl
jns
push
xchg
dec
lock
pusha
aam
and
mov
lret
movsb
dec
movsb
and
pop
imul
jg
mov
popf
mov
ror
xchg
jne
pop
xor
push
jg
xor
jmp
ret
gs
pop
pop
sarb
ss
jae
loopne
mov
les
cmp
add
pop
stos
jle
pop
mov
incb
cmpsb
mov
and
lock
jp
jae
sbb
scas
jb
pop
adc
fiadds
imul
pusha
jp
mov
sub
sub
dec
mov
std
push
call
jae
mov
loopne
aam
hlt
adc
mov
in
rcrb
scas
sub
add
jae
mov
jg
andb
dec
into
rcl
lock
rcl
fdiv
sub
adc
sti
push
addr16
jo
lods
and
add
cmp
push
mov
loopne
bnd
xchg
dec
adc
mov
and
cmp
dec
pop
addb
dec
dec
add
add
and
xor
mov
test
push
sub
enter
test
in
xchg
push
fdiv
fiadds
cmpsl
rcrl
shrb
push
addr16
inc
sub
mov
mov
test
or
enter
jns
scas
pop
addr16
cmp
in
xchg
dec
outsb
mov
add
jne
push
test
cmp
lcall
dec
inc
xchg
sub
mov
sub
xor
pop
push
and
or
insl
out
out
pop
stos
lret
xlat
hlt
imul
pop
xchg
sub
mov
or
mov
out
adc
sbb
out
cmp
sub
movsl
jge
dec
xor
sgdtl
out
adc
cwtl
ljmp
inc
xorb
lea
pop
add
scas
push
shlb
and
xchg
xchg
sub
adc
ja
xor
shrl
xchg
aaa
pop
andl
mov
mov
dec
test
push
sub
out
jns
mov
mov
inc
inc
pop
loop
mov
jge
testl
ret
xor
add
jp
cmp
lcall
fpatan
mov
add
fistpl
xor
adc
jle
mov
or
pop
and
push
fwait
sbb
lret
ja
out
popa
ds
ret
cmpsb
xchg
sbb
test
repz
xchg
mov
inc
push
dec
rorb
fisubl
dec
jae
sbb
adc
adc
push
add
xchg
nop
out
enter
jae
nop
iret
in
movsb
out
sarb
dec
nop
sarb
stos
mov
inc
mov
in
cmpsl
les
in
mov
push
addb
mov
and
sbb
test
cld
stos
aas
test
xchg
sub
ret
mov
mov
jmp
inc
or
push
in
xor
int3
cmp
and
and
xchg
bound
sub
push
dec
loopne
and
rcrb
sub
cwtl
call
xor
xlat
xchg
enter
pop
bnd
sti
or
cltd
lcall
or
loop
or
gs
stos
push
cmpsl
sahf
or
daa
les
imul
aas
hlt
sbb
or
cmp
sbb
or
xchg
stos
ljmp
sub
add
xor
rcll
add
dec
loop
dec
xor
in
sub
inc
loop
sti
mov
inc
or
inc
adc
adc
adc
or
jp
dec
mulb
test
or
mov
les
lock
push
inc
xor
inc
mov
xlat
cmc
or
rcll
mov
and
pop
int
mov
test
sub
into
mov
mov
ret
mov
enter
sbb
mov
adc
leave
mov
in
push
adc
sahf
add
dec
sbb
mov
mov
push
xchg
lret
push
mov
inc
xchg
inc
sti
scas
int
pusha
add
shlb
sub
mov
shll
sahf
adc
adc
aaa
and
mov
adc
inc
jmp
iret
icebp
pop
xor
xlat
mov
frstor
adc
or
lcall
sbb
or
nop
fiaddl
cmpsl
in
pusha
push
xchg
mov
push
and
jle
dec
test
mov
aad
or
test
jae
or
leave
test
or
int
jge
cmp
or
icebp
xor
js
and
aam
pushf
cltd
mov
push
mov
filds
add
mov
lods
aam
jae
fcomps
ret
add
rcrl
jnp
scas
movsl
ret
jns
cmpsb
cmp
xchg
jb
xor
out
cmc
push
push
shrl
mov
ljmp
gs
into
jge
mov
mov
xchg
lock
imul
xchg
jbe
in
and
lods
hlt
mov
cmpsb
lahf
mov
adc
mov
add
js
out
cmc
insl
mov
add
arpl
imul
mov
jne
in
jae
pop
js
in
rolb
negl
sahf
sarb
or
xor
addr16
sbb
rorb
sti
testb
enter
sub
push
sbb
les
xor
push
push
out
push
imul
jns
sub
push
mov
cmpb
mov
push
dec
jnp
cmp
xor
dec
sub
mov
push
cmp
push
sub
mov
xchg
push
mov
popf
jmp
cmp
push
mov
push
jne
arpl
jns
jnp
add
es
push
mov
movsb
sub
mov
xor
gs
and
push
ljmp
rolb
mov
inc
cmpsb
stc
cmpsl
mov
je
js
mov
into
mov
xchg
jne
test
dec
jns
dec
icebp
pop
mov
xor
lret
aas
mov
add
les
jecxz
out
mov
test
les
scas
xchg
scas
push
push
jmp
rep
dec
adc
lea
jp
sub
insl
dec
pop
aas
mov
lods
adc
into
bound
popf
icebp
add
aad
out
mov
inc
push
ret
rcrl
and
test
loopne
fwait
or
frstor
dec
imul
fmull
jno
enter
sub
pop
ja
or
sub
cmp
jnp
sahf
and
pop
or
jne
subb
aas
outsb
sbb
gs
sub
and
out
dec
mov
sub
pop
scas
bound
cmp
add
fld
incb
ds
or
fwait
repz
jmp
repnz
or
hlt
cltd
rorl
out
mov
fidivrs
sbb
mov
jae
inc
inc
pop
sub
je
sti
es
lea
mov
loop
jg
out
mov
dec
xchg
into
dec
cmc
jmp
cmpsl
jp
je
negl
in
pop
inc
add
jl
mov
mov
iret
ret
sbb
mov
xchg
sbb
jae
call
pop
xor
mov
out
lahf
imull
or
shll
mov
jo
jle
jge
mov
xor
jp
je
inc
sahf
fiadds
pop
sarl
jnp
shll
or
cmpsb
jnp
and
rclb
fdiv
ds
or
and
jo
shlb
pop
lret
push
mov
lret
cli
mov
loope
jnp
add
jp
stos
out
hlt
pop
aas
sbb
cwtl
pushf
fnstsw
test
test
or
hlt
xchg
inc
decl
gs
ret
movsl
sbb
sbb
stos
mov
cwtl
lret
dec
imul
sub
movsb
add
clc
int3
and
push
sahf
hlt
inc
jno
xchg
movl
roll
cltd
adc
pusha
jmp
les
or
sahf
jge
inc
fsubp
mov
cmpsl
dec
sbb
xorl
or
aas
dec
push
sarb
push
add
sub
jge
lods
rcl
mov
adc
int3
cmc
pop
adcl
sbb
pop
ja
adc
mov
loopne
or
jno
dec
xor
add
repnz
add
jge
lods
or
fsts
xor
nop
push
movsl
dec
mov
test
push
jne,pn
mov
call
mov
push
adc
loopne
mov
sarb
andb
pop
fcomi
dec
mov
std
or
mov
mull
sbb
stos
xchg
inc
call
in
mov
jmp
mov
out
pusha
sbb
enter
es
fstpl
xchg
push
or
jg
sbb
or
pop
lret
mov
xchg
lock
sub
aam
dec
out
sub
push
pop
orb
enter
cmp
cmpsb
or
pop
ss
xchg
sahf
lds
xchg
sbb
js
sbb
xchg
into
outsb
add
push
clc
inc
jo
push
insb
mov
repz
cld
pop
xor
xor
lea
ja
mull
test
cmp
add
ret
fadd
aaa
rorl
scas
add
inc
lret
mov
call
dec
jae
push
pop
or
add
jbe
push
or
push
mov
ss
xchg
popf
xorb
outsb
push
xchg
pop
insb
stos
mov
cmp
cmp
into
ljmp
rcrl
movsb
repz
es
inc
jno
icebp
aad
das
data16
xchg
sbb
sbb
fmulp
test
mov
or
pop
aaa
in
mov
or
cmp
test
nop
or
and
shlb
mov
call
xlat
xor
inc
jne
xor
arpl
mov
mov
leave
call
out
adc
icebp
or
iret
pusha
xchg
push
or
cli
push
loope
scas
or
mov
lock
idivb
xchg
je
cmpsb
add
fidivrs
sub
fsubrs
bound
mov
or
push
loopne
sub
pop
sar
add
cmc
dec
inc
lahf
or
inc
dec
test
or
shr
repnz
in
lods
std
push
pop
scas
cmp
or
mov
int
add
es
jae
cmp
pop
rcll
push
and
push
cmc
push
sbbb
sbb
jbe
sub
cld
shll
lret
pop
rorb
lea
mov
sub
or
lret
ljmp
and
or
or
or
insb
dec
popa
iret
add
add
cwtl
add
mov
or
cmp
push
shr
dec
dec
or
popa
lods
mov
iret
inc
cld
inc
inc
cmc
ret
mov
cmc
push
mov
xchg
rol
daa
mov
push
out
imul
or
cmc
psrad
xchg
or
sub
or
lods
cwtl
jae
sub
fcoml
dec
inc
lods
jg
or
sti
nopl
insb
jno
ss
and
and
add
sahf
or
movsl
cmp
fiaddl
gs
clc
leave
iret
das
pop
jo
xchg
cmp
cmp
fidivl
add
mov
cmp
nop
stos
pusha
je
cmp
jnp
sbb
idiv
mov
cli
xchg
pusha
sub
cmp
sti
sbb
cmc
cmp
add
int
inc
or
in
cmp
adc
jge
fcoms
add
mov
sbb
inc
repnz
jnp
sub
and
xchg
push
fs
xor
mov
repz
cmp
hlt
rclb
and
ret
push
xor
imul
or
pop
push
lcall
lds
add
lahf
mov
adc
jns
and
ds
or
xchg
mov
cmpsl
cmp
movsl
repnz
xlat
jno
out
mov
cmp
dec
js
loopne
outsl
stc
xchg
sbb
jp
mov
iret
shl
les
or
add
lock
test
jae
or
aaa
adc
mov
pushl
sbb
or
insb
lods
rclb
push
icebp
clc
add
pushw
push
or
mov
xchg
je
jnp
or
dec
mov
nop
jp
mov
rcll
scas
or
xchg
cltd
test
push
lea
or
call
pusha
fisttpll
stos
js
int
lods
mov
mov
sub
adc
ja
into
out
mov
xchg
mov
mov
fcoms
mov
or
jp
aas
std
fwait
mov
lods
adc
push
and
lods
test
xchg
mov
cli
adc
add
and
xor
push
stos
ret
loopne
dec
ja
pop
add
dec
dec
xor
mov
cmp
sub
in
sub
and
mov
lods
icebp
push
adc
sti
jne
ljmp
out
sub
js
lea
inc
push
pop
jae
pop
cwtl
je
aam
cmpsl
aaa
jnp
insb
repnz
and
fldt
push
orl
adc
rcr
test
outsl
lods
cmp
in
clc
push
les
xor
xchg
push
gs
and
mov
xchg
rol
fisubs
in
push
or
lea
xor
aam
xchg
inc
dec
fisubs
shrb
push
orl
push
adc
shl
pop
pusha
mov
nop
sbb
xchg
or
imul
push
dec
out
shrb
mov
repz
pop
cmp
out
ret
movsl
mov
push
ret
les
jmp
aaa
lods
test
cli
test
movl
inc
shl
mov
add
add
mov
and
in
inc
les
lret
inc
or
sbbb
push
jg
or
insl
adc
jno
movsl
or
enter
mov
push
and
jge
push
pop
lret
les
and
dec
shll
add
adc
lahf
sbb
and
mov
leave
or
mov
mov
mov
inc
fimuls
cwtl
xchg
stos
and
and
pop
jle
or
arpl
jae
cmp
lea
pop
push
lds
xor
fmuls
ja
sub
cmp
push
sbb
notl
rclb
or
scas
mov
xlat
mov
les
or
insb
movl
loopne
fwait
out
in
repz
or
mov
stc
ret
mov
or
shrb
lret
rorb
cs
scas
sbb
add
fldt
addr16
xchg
sti
fcmovnu
cmp
mov
cwtl
sub
cmc
cwtl
and
or
les
and
push
inc
sub
mov
mov
cmp
pop
lret
cld
inc
cmp
jno
xchg
data16
aas
loop
pop
scas
nop
jbe
dec
sbb
lea
loop
pop
lahf
stc
faddp
mov
push
mov
mov
adc
into
jg
js
fidivrl
sbb
into
add
movsb
stc
repz
xor
div
adc
adc
es
jne
pop
push
mov
hlt
lods
sub
push
into
jo
mov
add
xchg
lfs
xchg
jge
mov
movsl
xor
les
int3
inc
xchg
add
outsb
inc
adc
mov
into
xchg
xor
insb
adc
dec
insl
and
test
out
es
jle
or
nop
adc
pop
jne
ljmp
adcl
pop
xor
les
and
jae
dec
sub
lods
popl
xor
std
pop
lret
mov
cmpsl
jecxz
fsub
xor
mov
mov
aas
dec
in
and
stos
jecxz
icebp
cmpsb
inc
jle
mov
mov
mov
jnp
cmpsl
mov
xor
mov
push
std
dec
jge
mov
mov
dec
xchg
notl
in
sbb
cmp
xor
outsb
or
stos
das
testb
loop
call
test
dec
gs
outsb
push
jecxz
and
cmp
mov
nop
repz
and
sub
out
jge
pop
xchg
ja
dec
cmpsb
jb
cwtl
out
and
mov
adc
mov
or
je
movsl
fdivs
data16
test
aad
mov
scas
es
int3
iret
pushl
loopne
cld
sbb
std
es
mov
cmc
pushl
sub
in
push
or
or
lahf
scas
mov
push
ror
sbb
rorb
sub
les
jl
xorb
mul
mov
adc
pop
mov
sahf
loopne
clc
nop
sbb
rcll
fmull
cld
mov
sbb
sahf
dec
jnp
lcall
bound
bound
xchg
xor
out
sbb
movsb
cmp
icebp
scas
nop
pop
push
xchg
xchg
add
scas
jl
jecxz
xor
adc
scas
xchg
andl
cmpb
push
jo
fldl
mov
and
or
fisttpl
push
mov
xor
enter
add
sarl
idivb
fnsave
hlt
dec
cmp
dec
cmp
mov
or
jl
rorl
sbb
not
mov
test
into
rcrl
in
adc
jo
gs
je
mov
jae
or
sbb
mov
cmc
adc
xor
xor
xchg
les
aam
and
call
and
push
and
pop
sbb
xchg
scas
sub
sbb
test
out
dec
ret
test
mov
aas
fisttpll
or
dec
fwait
pop
xor
mov
ficoms
imul
xchg
mov
adc
fldenv
pop
out
into
jnp
xchg
jp
adc
fsubrs
movsb
testl
jns
into
imul
xor
or
add
jae
mov
out
in
mov
and
cmp
mov
fs
arpl
adc
push
test
or
es
ds
lret
dec
das
xchg
cli
fistps
jmp
sti
xor
fwait
inc
adc
bound
mov
cli
pop
jg
xor
mov
mov
iret
jge
std
fisubrl
in
fists
push
test
sbb
dec
xchg
lods
push
arpl
negl
add
jl
div
cmpsb
out
add
xchg
pop
mov
movsb
test
jno
push
xchg
fwait
sbb
sub
push
in
subb
push
mov
test
and
jmp
cmp
push
jo
scas
loop
nop
js
cmp
daa
xchg
mov
jp
pop
sbb
cli
faddl
mov
and
stos
mov
ficompl
jle
into
add
int
xchg
sub
xchg
frstor
cmpsl
jp
push
and
cmp
std
out
jne
mov
push
lods
xor
lret
mov
dec
add
sub
push
inc
add
mov
adc
sub
mov
add
dec
pop
lret
fsub
out
mov
adc
into
push
jp
pushf
fcoms
movsb
mov
divl
sarl
and
jp
mov
add
les
dec
loope
fiadds
push
add
loopne
out
fwait
daa
fisubl
mov
decl
repz
mov
mov
pop
jns
add
or
lods
rcrl
push
or
cltd
pop
mov
and
lret
sub
outsl
sub
addr16
roll
xor
shlb
iret
adc
scas
pop
cmp
and
xor
insb
mov
pop
repz
xor
in
mov
xor
out
mov
arpl
inc
mov
push
mov
dec
cmp
outsl
and
jno
icebp
imul
jge
mov
std
pop
sub
sub
jo
inc
mov
adc
dec
out
inc
jns
mov
pop
xor
push
pusha
inc
push
mov
fbstp
push
nop
pop
arpl
mov
cmp
xor
rcrb
and
out
push
jnp
outsb
outsl
adc
mov
push
lea
dec
dec
les
test
pop
xchg
jb
jecxz
sbb
and
iret
sbb
jae
cmp
ret
stos
push
hlt
mov
mov
xor
scas
xchg
xchg
pop
pop
fcmovbe
inc
add
insb
sub
mov
sub
test
jmp
cmpsl
pop
inc
add
add
pop
adc
mov
push
jb
enter
shr
lods
sub
add
pop
rol
and
mov
sbbb
dec
mov
xlat
or
lret
in
fxch
xchg
bound
fwait
std
cltd
xor
movsl
adc
push
xchg
add
test
pop
xchg
mov
into
jl
jge
mov
int
jle
or
ss
pop
fidivrl
movsb
or
inc
mov
iret
fstl
adc
scas
lock
stos
outsb
xorl
mov
xor
inc
or
in
and
jge
hlt
ret
mov
ja
dec
je
loope
adc
cmp
inc
add
icebp
inc
movsl
pop
sbb
dec
jp
lods
mov
test
and
mov
les
cmp
insl
inc
clc
shlb
inc
push
or
lods
push
shlb
out
pop
testl
icebp
add
enter
stc
sbb
or
or
scas
ret
adc
in
sti
xchg
add
clc
test
xor
xor
or
add
outsl
test
push
and
cmpl
push
shll
and
cmpsl
les
mov
xor
insb
sub
sub
add
in
test
jmp
dec
adc
popf
jecxz
aaa
pop
adc
xor
scas
or
mov
or
inc
sbb
xchg
out
fildl
adc
insl
mov
sub
loopne
jge
or
jmp
mov
mov
dec
mov
mov
jp
jmp
pushf
mov
mov
cmc
les
movsb
mov
push
cltd
push
imul
xchg
lret
sbb
bound
sub
scas
push
popa
pop
xchg
sbb
mov
daa
lea
ret
fnsave
xchg
mov
les
push
dec
dec
mov
sbb
addr16
mov
and
push
mov
les
shrb
mov
pop
dec
ror
cmp
mov
dec
lods
jl
mov
push
lds
add
sbb
push
pop
insb
sub
cmp
mov
adc
pop
or
notl
adc
inc
outsl
std
dec
xor
push
iret
mov
ret
dec
insb
insb
out
xlat
ror
lea
aad
pop
sub
jp
pop
outsb
push
pavgw
fisubl
sub
loope
insb
jmp
ret
or
mov
fcomip
mov
sbb
loope
outsb
jecxz
repz
repnz
shr
insl
dec
mov
dec
add
outsl
add
adc
adc
adc
stos
push
xchg
gs
pop
test
sarb
xchg
cmp
add
lcall
loopne
test
aad
jg
test
in
data16
add
push
xor
jl
xchg
inc
add
push
addr16
or
dec
std
aam
push
add
ss
in
add
cmp
sub
lea
shrb
mov
push
lods
sti
pop
ret
scas
xor
adc
pop
stc
arpl
fidivl
nop
pop
ficompl
jge
dec
or
aam
push
mov
and
mov
jne
rolb
push
les
pop
sarl
fdivrs
mov
inc
mov
jge
push
mov
add
or
out
scas
jge
add
xchg
adc
adc
rorb
shll
fdivrs
ror
shrl
sbb
xchg
rclb
and
jnp
cmp
repz
mov
sub
push
xor
and
push
icebp
adc
adc
inc
ljmp
xchg
mov
inc
or
mov
into
hlt
xor
aas
inc
pusha
inc
lods
dec
cmp
jmp
mov
push
cmpsb
jne
shlb
mov
repz
or
dec
cli
outsl
fsubl
inc
sbb
and
mov
mov
adc
stos
shrl
icebp
pop
xor
dec
shlb
clc
lret
and
jge
pop
sbb
repz
mov
outsl
dec
les
test
int3
cli
test
or
in
in
test
icebp
in
dec
stos
mov
outsl
cmp
shrb
pop
movsl
repz
lods
gs
inc
icebp
out
outsl
stos
xchg
push
cmc
flds
jge
sub
les
cltd
dec
test
and
adc
mov
pop
sbb
mov
repz
pminub
or
push
shrl
and
pop
lret
mov
out
cli
outsl
hlt
and
stc
mov
or
idivl
shl
and
mov
fcompl
fildll
xchg
mov
sbbl
fistps
xchg
shl
jno
inc
pop
loopne
mov
aaa
in
stos
pop
leave
inc
mov
lods
sbb
or
adc
dec
je
ficomps
js
xchg
pusha
insl
enter
mov
pop
test
or
test
cmp
les
xchg
xor
ja
loopne
rclb
cld
mov
jne
inc
pop
xor
xor
in
scas
ja
nop
push
outsb
add
mov
js
test
sahf
movb
pop
dec
lods
sbb
jns
stos
adc
enter
add
adc
jo
mov
fstpt
or
sarl
mov
repz
mov
jecxz
stos
mov
sbb
jge
adc
push
add
jp
in
inc
mov
hlt
adc
mov
shll
les
fs
jne
imul
cmp
mov
in
pop
and
scas
loopne
xchg
packuswb
mul
mov
mov
dec
lret
test
xor
gs
dec
rclb
pop
add
fwait
push
popf
cs
pop
sbb
popa
or
jge
cs
sbbb
pop
jecxz
sti
push
les
sub
sbb
pop
arpl
repnz
rcrb
push
stc
test
xchg
sti
lret
rorb
loopne
mov
adc
pop
and
mov
inc
jo
mov
rclb
push
out
fimull
cltd
hlt
sti
dec
and
pop
xchg
sub
and
loope
cwtl
shlb
xchg
or
out
cmp
push
fcmovnb
sub
popa
out
add
fwait
stos
mov
or
outsl
inc
stos
addl
dec
scas
sbb
std
jmp
lods
popa
es
sub
mov
das
pop
xor
mov
jl
pop
cmp
int3
aaa
add
and
xor
xor
roll
push
stos
lahf
lret
bound
lahf
mov
sub
xchg
jge
mov
enter
shrb
and
mov
cmp
sub
jbe
add
out
jl
into
jnp
gs
pop
sbb
aam
mov
out
mov
aad
and
or
mov
xchg
mov
or
pop
idivb
dec
mov
inc
shrb
fs
push
pop
stc
sub
mov
jecxz
subl
ret
bound
insl
xchg
lcall
adc
mov
sbb
pusha
fwait
mov
mov
imul
ret
testl
push
cmp
neg
push
mov
sti
push
push
or
fnstsw
add
push
sarl
bnd
addr16
inc
pop
xchg
in
icebp
loope
stos
add
ficoms
cmp
mov
cmp
fildl
clc
xor
in
stos
ja
ja
add
ret
mov
push
cmp
sbb
mov
inc
fs
lret
in
add
fiaddl
lods
inc
pop
pop
jno
in
fidivs
shl
popa
sarl
inc
jp
test
out
dec
cmpsl
loopne
jb
or
les
jnp
mov
xchg
jo
mov
fwait
jp
push
sbb
sti
pop
cmp
inc
inc
sahf
adc
pop
repz
xchg
inc
inc
push
or
sbb
mov
add
pop
aam
out
pop
mov
insl
filds
inc
cld
push
push
push
cmp
adc
mov
push
rcr
xchg
xor
bound
gs
and
pop
outsb
lahf
xchg
pop
into
and
addr16
jne
xchg
fwait
sub
out
test
mov
stos
cmp
mov
sbb
fsubp
or
xchg
pop
xor
pop
inc
outsl
inc
jo
pop
dec
push
mov
xchg
repz
addr16
xor
rcrl
pop
scas
jecxz
jle
pop
loope
ret
push
mov
mov
outsl
rolb
or
pop
fwait
in
add
out
and
call
xor
sub
jbe
je
pop
and
fs
xchg
fidivrl
jne
rcr
push
stos
xchg
xchg
scas
and
cmpsb
outsl
and
ret
mov
les
cwtl
and
inc
sub
pop
jnp
xor
pop
gs
leave
mov
sbb
enter
pop
xor
cmp
mov
cmp
test
rorb
lcall
pop
in
pop
dec
mov
dec
dec
mov
ja
rorb
ja
xchg
rep
push
imul
jno
decl
mov
push
or
xorb
sbb
or
ja
push
jno
ljmp
inc
rcrb
out
inc
pop
adc
or
in
xchg
adc
add
faddp
push
pop
add
enter
push
and
ja
add
sti
jo
mov
push
clc
test
mov
insb
xor
pop
inc
pop
out
je
fisubs
fs
sub
mov
movsb
fstpt
ret
insb
movsb
into
xor
shlw
lret
popf
repz
cmpb
mov
mov
repnz
adc
mov
sub
std
xor
imul
xchg
stos
xorl
sub
aas
or
js
or
inc
jg
add
es
pop
loop
xchg
and
inc
sub
mov
ret
xchg
sbb
cwtl
mov
imull
daa
sub
movsl
mov
lods
push
sti
xchg
les
pop
push
and
ds
xchg
pop
push
out
les
test
arpl
mov
xchg
test
mov
xchg
hlt
cmpb
dec
push
sahf
cmp
adc
dec
sbb
adcb
fcmovnb
aas
sahf
lods
dec
cmpl
lret
inc
jne
add
or
fsub
or
and
dec
imul
cld
adc
inc
mov
add
jp
aas
inc
mov
inc
jb
xchg
adc
adc
inc
lea
mov
jg
mov
test
fbld
push
out
xchg
xchg
mov
std
pop
sahf
lods
idivl
mov
inc
pushf
movsb
and
les
out
int3
adc
sti
scas
ja
mov
loop
push
fs
test
push
cmpsb
arpl
aad
cmpsl
les
push
mov
addb
cmpb
sbb
cmpsl
cmpsb
push
jne
out
mov
out
and
cmp
inc
repnz
dec
aam
dec
nop
mov
add
orl
gs
mov
adc
jbe
push
inc
data16
mov
push
stos
cmc
mov
sub
imul
mov
add
outsl
filds
pop
mov
lret
loopne
stos
repnz
xchg
mov
and
out
push
dec
movsl
and
mov
test
xor
push
dec
adcl
jns
test
dec
std
es
out
pop
inc
and
mov
mov
stos
pop
movsb
scas
sbb
stos
jl
je
mov
jecxz
fmulp
flds
les
fdivrl
lret
negb
fstps
fwait
mov
mov
aaa
mov
rcl
xchg
test
sub
movsb
cmp
stc
xlat
test
fldcw
xchg
addr16
pop
lock
arpl
mov
push
cmp
movsl
pop
jmp
push
in
fdivrl
or
sbb
sbb
cmp
inc
fisubrs
stos
cli
dec
mov
outsl
push
pop
jnp
mov
adc
mov
add
mov
pop
les
add
mov
fadd
inc
stos
leave
scas
les
push
sbb
ja
pop
mov
adc
out
or
jecxz
mov
imul
cmpsl
dec
clc
push
outsb
mov
mov
sub
jge
lcall
dec
sbbl
lds
adc
sarl
push
les
pop
in
xchg
aaa
or
cmp
mov
push
pop
ret
xorl
or
rcll
mull
and
mov
pop
addr16
sbb
mov
pop
pop
sti
shlb
jb
je
mov
sbb
rolb
loopne
lea
or
jecxz
ljmp
test
and
stc
dec
dec
shll
jno
mov
in
ja
push
pop
xchg
jo
mov
push
cmp
add
imul
insl
jecxz
xchg
outsl
xchg
ljmp
and
xchg
out
lcall
dec
cli
popf
shrb
jl
rcll
les
insl
pop
mov
xchg
mov
and
inc
mov
pop
jmp
xchg
and
cmp
dec
xchg
sbb
lret
mov
sbb
push
mov
or
jno
mov
shlb
jae
cmpsb
mov
cltd
xchg
push
sahf
mov
sarb
or
stc
pop
jno
mov
addr16
movsb
jle
bound
imul
cmc
sti
mov
pop
shll
cltd
hlt
movsb
in
loope
loop
frstor
test
sti
dec
lahf
test
jl
jno
pop
fisubs
test
rcll
push
lods
rcrl
sbb
and
jo
mov
sbb
pop
mov
hlt
pop
xor
push
sub
in
in
mov
aam
sbb
in
xchg
shlb
jbe
cli
inc
mov
sar
and
add
or
cmpsl
je
inc
cli
fcmove
push
out
push
jae
and
movsb
in
jno
dec
push
icebp
dec
ss
imul
sub
negb
bound
cmp
mov
in
mov
icebp
sbb
repz
ss
adc
adc
adc
mov
jnp
fisttpl
sbb
push
test
or
pop
fdivr
dec
jbe
cli
ja
popa
andb
add
inc
adc
or
rclb
jns
xor
push
scas
into
xor
push
lods
popf
rcr
mov
sub
das
or
out
jbe
imul
jmp
mov
inc
negb
iret
lds
pop
push
pop
jle
jb
dec
iret
mov
xchg
pop
jae
sub
mov
jnp
mov
sbbl
add
es
bound
and
fwait
cmpl
add
mov
xor
sbb
int3
or
pop
xorl
xor
pop
jecxz
in
rorb
enter
and
repz
push
icebp
xchg
xlat
mov
test
shl
inc
or
in
sbb
xor
jmp
cmp
mulb
cmp
in
inc
push
jle
mov
pop
xchg
mov
scas
xor
adc
lret
inc
sub
cmp
call
xor
sbbl
insl
daa
adc
aas
lods
and
jne
inc
fwait
enter
test
sbbl
mov
test
add
mov
in
icebp
push
and
mov
les
jge
loop
inc
pop
ret
jle
mov
inc
pop
sbb
aas
or
movsb
mov
or
adc
mov
and
fmull
ljmp
adc
add
inc
test
clc
sbb
js
lret
aas
mov
xor
in
lods
xlat
pop
nop
gs
in
dec
or
pop
lcall
ret
popa
sti
mov
jnp
mov
and
or
inc
or
sbb
in
jne
notb
sub
mulb
idivl
stc
js
repnz
std
inc
mov
mov
mov
andl
mov
data16
xchg
and
shrd
adc
sbb
ficoml
cmp
aam
aas
inc
mov
and
add
fistps
sub
jnp
or
ja
jl
adc
and
xchg
stos
idivl
inc
in
idivb
or
fsubr
push
loopne
push
or
lcall
clc
xor
push
xor
std
xor
xor
stos
or
and
pop
in
cwtl
iret
jae
and
orl
jl
pusha
and
cs
imull
cmpsb
xor
xchg
out
cmpsb
mov
pop
jae
push
and
xchg
add
popa
fwait
outsl
add
jo
mov
add
cltd
popf
in
scas
jp
fbstp
imul
cmpsl
rclb
mov
lahf
gs
cmp
mov
outsl
fs
cmpsl
add
and
add
ja
mov
out
out
fmull
xchg
sbb
and
xchg
mov
sbbl
pop
cmpsl
and
mov
cmp
sub
lds
pop
xor
inc
cwtl
aas
xor
mov
out
lods
std
cld
mov
jge
sbb
mov
adc
mov
mov
loopne
push
mov
adc
pop
lds
sbb
adc
add
aas
mov
push
imul
lds
add
pop
xchg
xor
jg
cwtl
lahf
iret
iret
mov
jns
fiadds
outsl
into
cmp
jne
mov
sbb
jge
jo
test
jmp
stc
enter
push
mov
cmc
sub
arpl
aas
cmp
out
cwtl
aaa
mov
imul
enter
mov
sti
leave
add
cwtl
faddl
pop
popf
lods
cmp
mov
and
fs
ret
or
out
cli
mov
jns
add
jle
jmp
mov
jmp
push
sub
inc
loop
inc
push
fcomp
aam
movsl
mov
jg
or
dec
cmp
in
repz
pop
jle
push
rorl
push
inc
fistpll
or
ret
mov
rolb
xchg
pop
pop
inc
dec
icebp
xchg
movl
outsl
sub
cmp
push
or
adc
iret
mov
cmp
ljmp
push
cld
or
pusha
xor
push
inc
scas
test
std
std
push
sahf
sbb
cmc
inc
jmp
arpl
jnp
sub
cwtl
mov
jne
popa
pop
mov
testb
lcall
ret
aas
add
lret
pop
adc
cmpsl
sbb
mov
loop
sbb
cmc
or
jbe
add
fcmovnb
inc
iret
scas
push
loopne
push
sub
add
adcl
imull
mov
popa
jecxz
push
mov
loopne,pn
add
cmpsb
and
xor
aas
pop
iret
sbb
shlb
adc
or
cmp
aas
popa
pop
int3
add
dec
int
in
mov
xor
add
mov
mov
jmp
xchg
dec
shl
int
test
mov
in
jo
add
xchg
sti
mov
imul
inc
in
sbb
xor
sub
sbb
and
sub
mov
pop
cmp
mov
mov
mov
inc
jecxz
xchg
sbb
ds
and
push
repnz
cli
lret
jae
cmp
push
loopne
sbb
add
xlat
mov
gs
aaa
bnd
or
outsl
xor
sbb
or
pop
daa
mov
sbb
adc
stc
ret
mov
jns
and
lea
fbld
xchg
gs
jnp
xchg
jbe
add
nop
fbstp
jmp
testb
push
and
sub
or
test
ljmp
lods
or
pop
adc
add
add
mov
jnp
je
jo
push
mov
inc
jns
add
add
popa
bound
jne
andb
jbe
addr16
xor
and
cmpsl
shlb
movl
cli
mov
shll
push
push
mov
in
in
lea
adc
into
in
ret
aas
push
jne
sbb
les
repnz
mov
icebp
push
lds
sub
jecxz
add
fldcw
inc
add
scas
cs
repnz
jg
fwait
or
cmp
jecxz
repz
faddl
xor
hlt
cmp
sbb
js
iret
jl
lds
inc
xchg
notl
mov
popa
fadds
sub
xor
sub
in
outsb
out
enter
icebp
out
pop
in
fsubl
and
movsl
aas
dec
insl
ja
mov
pop
mov
push
jae
cmpsb
sbb
cmpsb
mov
addb
out
ret
call
ljmp
out
adc
jp
aas
adc
push
jo
add
lds
inc
inc
xor
pop
sbb
jecxz
test
cmc
xchg
icebp
int
test
stos
shlb
or
int3
ficomps
inc
xor
mov
fcomi
out
fwait
loop
je
fnstcw
or
xchg
loopne
xlat
pop
add
and
cmpsb
js
jle
or
aaa
test
xchg
jmp
inc
enter
cltd
bound
sbb
es
pop
fldenv
jb
pop
or
and
and
add
insl
mov
xorb
loopne
or
mull
jge
adc
addr16
mov
sub
xorb
inc
repz
lret
in
and
mov
pusha
dec
inc
out
mov
into
or
je
inc
icebp
test
movb
pusha
xchg
ja
xor
outsl
add
inc
inc
dec
mov
loope
or
cs
xchg
les
lock
sbb
jl
jle
sbb
adcb
or
inc
andl
shlb
inc
push
loope
pop
lods
gs
or
cmpsl
cwtl
push
stc
adc
push
or
and
movsb
xchg
aas
dec
mov
inc
ret
lret
jns
icebp
sbbl
xor
mov
int3
je
xor
shl
push
mov
pop
sbb
add
mov
or
pop
imul
je
inc
in
or
sub
jecxz
shll
xchg
nop
mov
lock
add
add
jg
sub
sbb
mov
lock
out
ret
inc
scas
out
xlat
aaa
inc
popa
flds
cld
and
xorb
loopne
dec
mov
out
loop
jnp
mov
add
add
jmp
andl
loope
insl
rorb
or
lcall
ja
daa
daa
testb
cltd
add
inc
and
pop
ret
xor
ljmp
int3
jp
jmp
mov
pusha
jl
ja
ret
xchg
cmp
aad
cmp
xor
aas
jmp
push
pop
xor
inc
xor
lret
mov
adc
fwait
bound
out
jo
jnp
iret
ja
aas
cmpsl
loope
repz
pop
pop
iret
int
mov
lds
aam
and
movsb
add
pop
push
dec
lret
imul
inc
fsub
out
xchg
and
subl
pop
mov
insl
push
push
or
xchg
icebp
and
xchg
in
inc
inc
fists
hlt
inc
pop
sbb
adcl
sbb
orl
outsl
and
xchg
std
fcom
jbe
and
iret
pop
cmp
inc
ror
ja
testb
pop
xor
pushf
inc
ss
cld
jmp
xor
add
cmp
add
add
and
push
or
inc
repz
pop
ljmp
xchg
outsl
out
jne
cmpsl
out
js
idivl
push
pop
idivl
cmpl
dec
negb
roll
loop
ljmp
pop
addr16
push
imulb
imul
adc
mov
aaa
xorb
xorl
inc
out
cmp
xor
adc
stc
inc
shrd
aaa
fmull
loop
jmp
and
mov
and
addl
mov
cmpb
aam
ret
add
es
into
or
testb
fstps
pusha
and
adcl
add
cmpsl
lods
pop
repz
jnp
lock
inc
cmp
sub
bswap
repz
fsub
xchg
scas
cmpsb
and
pop
int
insb
sub
repz
cld
pop
mov
notb
cmp
inc
or
push
orl
jmp
jbe
loopne
aam
xchg
and
inc
add
jmp
xchg
mov
lds
inc
sbb
in
dec
mov
xchg
in
ja
sub
outsl
mov
add
jp
xchg
jae
sti
pop
or
push
sbb
inc
add
out
mov
mov
mov
cmpsl
add
aas
stos
cmpb
loope
fists
push
and
cmpsl
icebp
adc
xor
sbbb
ljmp
or
icebp
cmp
data16
add
jne
and
addl
aaa
imul
ret
fsubl
mov
adc
aas
inc
je
lds
and
in
inc
dec
push
cmp
out
popa
fmuls
xchg
sub
hlt
and
and
or
or
push
push
pop
xor
xchg
jns
and
dec
xor
or
xor
repnz
and
cli
fmull
or
out
adc
fnsave
sbb
add
inc
push
xor
cmp
jb
add
dec
jne
cmc
push
xchg
sbb
inc
push
xchg
outsb
xchg
lcall
out
inc
adc
hlt
sbb
mov
into
jp
mov
inc
roll
adc
cmpsl
xor
pop
jnp
scas
ds
mov
mov
aas
mov
push
pop
les
mov
xor
roll
jle
cld
lret
jae
aad
imull
sub
xchg
add
out
jbe
and
push
fidivrl
out
mov
adcb
repz
cmpsl
ss
aas
int3
bound
fcomps
inc
and
push
adc
aas
mov
stc
jle
stos
push
mov
repnz
in
add
jl
xchg
xor
lret
sbb
mov
test
mov
sbb
out
sar
or
lret
in
inc
or
ja
leave
xlat
jne
pop
xchg
push
mov
imul
pop
imul
add
addb
mov
and
lret
nop
push
out
lock
lds
aas
out
sarl
push
xor
mov
mov
and
lods
rcll
and
faddl
shl
inc
stos
loope
sti
push
mov
scas
pop
orl
xchg
fnsave
sub
sti
lahf
mov
loope
ret
xchg
out
test
and
cmpsl
inc
mov
movsb
pop
fsubl
xlat
ja
sub
fxrstor
out
add
es
dec
and
xchg
ds
movsl
loop
in
cltd
dec
mov
fidivl
add
loope
bnd
mov
shll
repz
cmpsb
and
aas
insl
sbb
sub
pop
mov
std
cmpsb
cmpsl
add
xchg
in
std
mov
mov
fbstp
cmp
mov
ret
or
xor
xorl
jns
popf
push
scas
sub
add
lret
xor
adc
repz
mov
xor
xor
inc
adc
aad
mov
and
es
mov
cltd
adc
xor
call
xor
mov
jbe
sub
into
cmp
inc
inc
in
in
adc
adc
popl
movsl
xor
in
push
sub
ret
cld
xchg
sbb
and
xchg
push
in
pushf
ret
in
lret
push
mov
or
fdivr
sub
xor
xor
mov
ss
inc
xor
inc
out
aaa
jnp
xor
shll
mov
jecxz
pusha
fiadds
cmp
imul
idiv
or
in
add
jbe
and
sub
inc
jge
shlb
pop
addl
adc
inc
imul
iret
daa
and
rol
adc
hlt
xor
push
xchg
pop
xchg
xor
add
xor
mov
addb
loopne
negl
out
xor
cmp
or
pop
xchg
je
inc
pop
add
sbb
cmpsb
xor
cmpsl
inc
pop
mov
in
and
xchg
aaa
push
adc
mov
cmpsl
xchg
ljmp
xor
aam
pcmpeqb
movsl
mov
lds
cs
popl
icebp
ds
inc
jmp
rcll
xor
push
inc
pop
hlt
sti
addb
add
movsl
negl
add
cs
mov
adc
jge
fstpt
sbb
cmc
lds
cltd
cmc
cmp
faddl
lret
xor
imul
add
mov
hlt
daa
in
pop
push
dec
and
mov
add
leave
add
mov
punpckhwd
jmp
push
jecxz
cs
or
cld
or
pop
xor
aam
add
testl
sbb
add
imul
mov
mov
adc
cwtl
mov
jns
jns
or
outsl
shrl
pop
movl
roll
mov
clc
xor
pop
shll
out
push
adc
out
xor
ss
mov
lods
pop
jb
cmpl
cmp
xor
inc
mov
loop
xor
sbbb
pop
clts
xor
xorl
inc
shlb
aas
popf
push
push
mov
sub
add
adc
xchg
pop
fldl
sbb
xchg
dec
inc
outsl
pop
jo
ss
loope
repnz
icebp
arpl
pop
rorl
mov
adc
rclb
adc
and
cmp
xchg
mov
add
sub
fdivs
add
popf
mov
push
lds
mov
pop
cmp
and
clc
mov
mov
mov
xor
ret
mov
xor
negl
add
fdivr
push
add
inc
add
fstpl
cli
xor
ja
add
or
orl
js
imul
dec
lods
adc
cmpsl
mov
andl
repz
cmp
mul
cld
jns
and
mov
test
adc
lock
mov
sub
or
push
icebp
xor
mov
inc
add
mov
fdiv
mov
or
pop
aaa
push
sbb
jmp
add
xor
mov
push
mov
ret
addr16
std
ret
pop
and
push
xchg
test
loope
and
push
gs
cmp
inc
adc
pop
rcll
mov
dec
inc
stos
push
mov
cmpsb
cld
pop
and
or
dec
lods
add
inc
push
pop
aad
icebp
xor
data16
aaa
mov
hlt
cs
xor
adc
xchg
outsl
cmp
mov
xor
jo
ss
mov
pop
cmp
cmpsl
xchg
add
push
ret
jp
mov
cmp
or
pop
popa
mov
pop
jnp
inc
push
test
lods
sbb
stos
sub
repnz
cmpsb
cmc
sbb
mov
ljmp
in
and
sub
sahf
shl
mov
xchg
ljmp
rcrb
stc
js
mov
sbb
shl
push
gs
jne
cmpsb
mov
mov
lods
aad
out
in
pop
loope
scas
clc
sub
mov
stos
out
fimuls
mov
mov
outsb
sbb
cwtl
mov
inc
fwait
stos
shlb
icebp
adc
daa
xchg
mov
inc
mov
add
ss
pop
cmp
xor
pop
loop
mov
ljmp
stc
cmpsb
mov
mov
rcl
shrb
je
push
sbb
inc
sub
adc
or
sub
mov
shll
cmp
cmpl
lahf
sub
push
pop
jno
pop
mov
pop
push
cmp
mov
pop
lcall
ja
cld
outsb
in
testl
sbb
test
xchg
jno
cmpsl
sbb
or
mov
loopne
xchg
jns
cmpl
xchg
xor
inc
stc
pop
aad
pop
mov
dec
xchg
push
outsl
fnsave
jae
push
sbb
cltd
popf
es
sub
mov
jg
out
popf
sbb
inc
or
mov
xchg
xchg
outsb
frstor
adc
mov
rolb
cmp
outsl
into
pop
or
shrb
adc
popl
jns
into
cmp
idivl
pushf
jns
jo
sbbl
ret
fimull
lods
cmp
jecxz
repnz
adc
dec
daa
or
int3
scas
test
mov
jmp
fwait
es
lret
sub
enter
out
divb
xchg
inc
fadd
push
sbb
or
shrl
and
push
dec
insb
repz
outsb
test
in
sbb
or
out
mov
lcall
out
and
push
push
mov
push
mov
adc
dec
mov
mov
mov
mov
in
inc
iret
rorb
das
sbb
out
xchg
test
push
add
in
push
jmp
xor
in
xor
pop
loope
mov
pop
xor
or
dec
push
out
shl
and
push
cld
scas
adc
sbb
push
mov
negl
gs
xchg
push
sahf
mov
cmpl
cmc
les
popa
or
repnz
adc
ss
inc
push
or
mov
jge
fstpl
cmp
mov
aaa
int
test
insl
mov
xor
daa
dec
mov
mov
xorb
fs
adc
mov
call
sbb
loop
out
sub
cmp
push
xchg
mov
mov
call
test
add
sbb
mov
out
dec
insl
fldcw
out
pusha
or
lock
les
icebp
xchg
mov
aam
aam
xchg
scas
xchg
out
sarl
sbb
rcrl
dec
pop
cmp
lds
push
adc
jne
cmpl
jns
lret
out
xchg
scas
int3
imul
jno
lahf
jns
aaa
adc
fstl
insl
rorb
mov
rdtsc
jmp
cmpb
ja
mov
std
das
sbb
dec
sub
mov
or
push
mov
roll
pop
and
rcll
test
ja
testl
fadd
push
test
lods
inc
jno
stc
inc
xchg
xor
sarl
sbb
cmp
in
shlb
andb
mov
cmp
ja
imul
call
data16
fisubrl
fdivrl
rcrb
in
sti
xor
jmp
sub
aas
xor
fldt
sbb
pop
jbe
rcrb
fwait
int3
popa
jecxz
xor
mov
in
pusha
sub
add
cmp
cmp
shl
xor
into
movups
loopne
add
in
rorb
aaa
cltd
repnz
mov
mov
dec
or
jp
pop
mov
mov
repz
lods
in
insl
xchg
mov
rcr
push
shl
stos
neg
pop
enter
jo
mov
cmp
mov
rorb
adc
scas
sub
aaa
das
push
sub
pop
cmc
dec
cmpsl
test
sbb
cmp
std
or
push
jg
add
jno
andl
pop
push
xor
mov
fwait
inc
sbb
dec
mov
fbld
ja
cmp
mov
out
jp
mov
inc
imul
gs
mov
fwait
scas
incb
test
xchg
and
nop
mov
mov
push
push
shll
repz
mov
mov
cmp
arpl
add
mov
xchg
sub
sti
pop
rolb
push
inc
or
add
fnstenv
je
sbb
shlb
loopne
gs
and
fldenv
loop
mov
cld
lods
sub
stc
lods
shlb
mull
pop
xchg
flds
sbbl
or
dec
push
nop
sets
hlt
lret
or
mov
orl
push
les
jl
aad
out
out
xchg
aaa
xlat
or
mov
movsb
push
mov
inc
inc
fdivp
xlat
dec
xor
mov
sub
gs
push
ror
ja
imul
dec
mov
sbb
aaa
adc
sti
les
sbb
dec
fiaddl
xchg
pushf
xor
add
sub
dec
xor
in
iret
xchg
xchg
pop
push
pushf
xor
pop
cld
les
push
inc
sahf
addr16
mov
call
les
cmpsb
leave
imul
dec
adc
or
mov
lock
ror
mov
jge
lods
fwait
inc
add
cmpl
pop
in
or
outsl
mov
out
inc
fnstcw
psrad
scas
jbe
ljmp
xchg
mov
lea
bound
cmpsl
or
xchg
sbb
mov
cmp
lret
pop
inc
ret
add
or
cmp
xchg
test
arpl
out
mulb
add
insl
mov
pusha
and
popf
or
fucomp
pusha
call
inc
inc
cld
movsl
push
test
add
mov
and
pop
stos
sbb
das
push
sahf
or
sbb
jnp
and
adc
sbb
xchg
shlb
and
icebp
lret
scas
dec
arpl
inc
lcall
adc
stc
movsl
ret
mov
pop
ret
inc
les
outsl
in
testb
dec
cmp
les
frstor
jno
jae
lds
pop
daa
sti
jo
rorb
lods
mov
or
cs
push
mov
sbb
sub
cltd
mov
notb
mov
push
xchg
popa
jp
popf
cltd
cmc
add
adc
jle
jb
pop
and
adc
shr
jge
inc
mov
inc
mov
dec
or
mov
mov
adc
in
cmpsl
or
mov
jne
or
add
adc
shlb
lds
sbb
out
fdivl
fstpt
sub
xlat
out
inc
popa
cmpl
outsb
fisubrl
pop
std
jmp
or
xor
or
inc
sti
ret
jp
push
orl
sbb
not
inc
pop
and
aam
dec
dec
inc
fildll
add
mov
stc
push
jae
repz
mov
sub
xor
jl
repnz
addr16
xor
cld
lds
jmp
push
mov
jmp
sahf
and
ret
gs
cmp
adcb
scas
ljmp
clc
or
mov
push
cmpl
add
push
popa
cwtl
pusha
rcrb
sbb
mov
mov
fsubs
or
idivb
pop
scas
stc
nop
cmc
push
es
or
sbb
mov
pusha
bound
insl
jne
sub
adc
push
mov
xchg
mov
dec
es
mov
nop
adc
sub
xor
mov
insl
sub
icebp
xor
inc
xchg
and
mov
mov
sub
cmp
or
stos
rcl
inc
mov
dec
mov
movsl
xlat
into
jb
pop
sub
sbb
outsl
lcall
sbb
std
addr16
mov
sub
ret
jo
add
adc
pop
sbb
add
daa
xlat
aas
dec
pop
push
cmpsb
out
fistl
adc
loopne
mov
sbb
jno
loop
out
movsl
repz
push
or
mov
ffreep
scas
mov
repnz
aam
imul
inc
stos
sbb
jge
clc
pop
mov
sub
hlt
add
or
dec
in
test
push
pop
mov
stos
mov
out
fisttpll
mov
mov
out
inc
stc
push
add
mov
nop
out
lahf
add
add
test
fisubs
mov
subl
cmpsl
mov
dec
xchg
push
ja
sub
pop
imul
dec
dec
insl
cmp
mov
fsubs
dec
xchg
int3
mov
sarl
add
rorb
jg
pop
inc
into
push
xchg
xlat
mov
mov
arpl
add
xor
xor
mov
js
or
in
out
or
dec
ja
sbb
sbb
lahf
in
fsubrl
neg
outsl
mov
mov
inc
add
push
push
mov
inc
xor
mov
js
add
dec
inc
xor
xchg
mov
mov
cmp
jb
into
pop
add
cmpsl
dec
cmp
pusha
addr16
fmull
divl
cmp
cli
and
stos
push
cmp
js
cmc
pop
sbb
nop
jnp
mov
and
mov
add
mov
lods
add
push
sbb
rorb
movl
xchg
pop
loope
adc
jge
insb
ficomps
divl
repz
loopne
pop
jecxz
cmp
loope
out
ret
jecxz
int
addr16
and
in
enter
jp
pop
sarb
mov
adc
inc
adc
mov
testl
mov
sbb
test
cli
mov
lahf
cltd
pop
mov
sub
out
popa
nop
pop
mov
or
inc
mov
or
js
cmp
mov
inc
fwait
sbb
cmp
outsl
insb
pop
std
ljmp
cmp
or
mov
call
ret
pop
ret
xor
xor
mov
add
sbb
xchg
pop
in
ffreep
jl
sahf
mov
dec
fistl
mov
or
sbb
inc
adc
mov
ret
stos
jno
in
out
les
icebp
aas
sbb
add
push
cmp
push
jg
dec
les
mov
scas
ret
inc
outsl
or
pop
lahf
push
push
cmc
js
movsb
sbb
adc
std
sbb
cmp
rcrb
das
fidivrs
hlt
xchg
inc
fsubr
mov
or
decb
sub
std
xchg
mov
inc
pop
xchg
cmpsl
cli
arpl
mov
loopne
push
adc
insl
popa
nop
leave
sub
xchg
cmp
fcoms
push
out
aam
movsl
orl
adcl
mov
mov
jno
pop
pop
mov
or
enter
mov
lds
cmp
lcall
inc
cmp
aas
add
mov
cmpsl
in
inc
pand
fmull
jmp
xchg
lods
pop
xchg
dec
in
pop
test
adc
dec
push
cmpsb
dec
data16
pop
jb
pop
mov
repz
into
adc
xchg
pmaxub
stos
push
imul
dec
iret
push
sbb
aaa
leave
add
push
ja
xlat
test
repnz
das
jecxz
mov
or
fldcw
outsb
pop
add
test
dec
out
mov
rolb
mov
sbb
sbb
fucom
jmp
and
xchg
dec
pusha
inc
or
or
jae
fdecstp
adc
xchg
fstpt
sbb
lret
and
or
inc
mov
shll
pop
call
in
jae
rcl
cmpsl
bound
xchg
stc
scas
inc
lret
cmc
cmpsl
iret
in
dec
adc
add
icebp
out
mov
sub
sahf
pop
aaa
int
jl
ficoml
mov
inc
sub
ret
sub
jbe
xchg
inc
pop
subl
aaa
adc
call
in
inc
negl
shl
into
andb
and
pusha
push
jge
hlt
pop
jbe
aad
sub
adc
inc
sbb
fnstcw
add
imull
inc
stos
cmc
div
cltd
repnz
jp
add
cld
daa
jl
das
fimuls
out
sbbl
les
adc
sbb
in
mov
stc
xor
fidivrl
pop
je
xchg
mov
mov
dec
sub
arpl
sub
imul
cltd
xchg
add
aaa
lds
out
je
and
repz
mov
scas
jne
outsb
test
pop
mov
int3
jge
push
mov
test
flds
pop
add
rorb
mov
mov
pop
xchg
je
mov
ss
stc
repnz
mov
mov
pop
loopne
shl
pop
int3
ljmp
mov
and
add
dec
xor
stc
add
sub
push
rcrb
in
mov
sub
mov
inc
out
inc
test
or
jns
pop
mov
imul
fmul
add
decb
gs
mov
insl
add
loop
inc
ja
add
cmovge
scas
pop
jnp
jp
out
push
push
cmp
mov
cld
out
xchg
repz
insb
mov
and
das
fists
cwtl
mov
push
inc
sub
insb
mov
decb
cmpsb
cmpsl
lret
notl
ja
xor
inc
mov
adc
sbb
hlt
or
pop
shlb
les
aaa
ja
add
and
cld
xor
into
out
adc
mov
push
out
pop
or
sub
jbe
fists
test
add
test
clc
cmp
jno
sbb
pushf
out
or
imul
loop
push
adc
fildl
roll
arpl
roll
adc
sahf
and
inc
mov
hlt
and
stos
gs
addl
pop
dec
inc
add
adc
lods
fs
inc
mov
leave
icebp
ss
stos
adcl
mov
xor
xor
cmc
jge
shrl
sbb
add
mov
xchg
xchg
jno
dec
leave
enter
std
ret
fbstp
outsb
sub
clc
mov
mov
inc
pop
in
mov
fdivrl
addr16
aaa
jp
int
fcomp
mov
addl
jno
cwtl
mov
stos
and
mov
and
add
call
repnz
pop
test
jo
int
imul
xlat
mov
push
lea
inc
bound
jbe
xchg
add
aam
xchg
add
push
adc
out
pop
mov
add
stos
push
bound
push
mov
adc
gs
mov
fdivl
xor
and
push
xchg
ret
and
jmp
pop
dec
sub
lock
mov
mov
sbb
adc
mov
mov
xchg
in
pop
mov
divl
adc
in
xor
mov
dec
cmp
cmc
jno
pop
adc
dec
push
sub
pushf
cmpsl
pop
in
cwtl
loopne
push
push
out
out
fnstenv
cs
sbb
xchg
xor
fs
dec
mov
jecxz
add
jns
inc
adc
inc
push
enter
xor
jnp
in
mov
fcmovne
aas
shlb
inc
mov
push
xchg
mov
mov
xchg
xchg
mov
adc
shll
sbb
push
movb
push
jl
xor
pop
fidivrs
outsl
pop
out
push
mov
imul
inc
out
xorl
or
stc
lods
sbb
mov
test
std
fwait
push
cwtl
sbb
pop
inc
ljmp
mov
inc
jecxz
les
xor
pop
mov
xchg
push
push
call
pop
or
jle
fidivrl
or
cmpsl
daa
dec
outsl
cli
inc
sub
adc
push
ret
sub
notb
test
push
jae
roll
push
sbb
mov
pushf
mov
arpl
xchg
incb
mov
pop
std
cs
pop
mov
mov
cwtl
mov
or
pop
mov
pop
adc
out
scas
lods
jmp
xor
outsb
add
cwtl
je
loopne
add
addr16
push
push
rcll
cmp
pusha
mov
mov
mov
sbb
test
pop
mov
cmp
inc
mov
and
jp
cmpsb
jae
movsl
pop
mov
ret
lods
daa
mov
push
push
xchg
sub
and
mov
cwtl
mov
out
rorl
inc
lret
jp
std
mov
sbb
xor
xlat
flds
sti
inc
movsb
add
shlb
dec
in
loopne
or
aam
pop
js
ficoml
gs
lds
pop
scas
out
rorb
jb
filds
mov
push
xor
mov
push
sub
mov
xor
shlb
inc
add
cmp
repnz
shll
add
and
jne
inc
cmp
cmp
jae
aad
push
imul
daa
lcall
stc
cld
jmp
stos
push
mov
rol
loope
and
les
sahf
int
imul
xchg
shll
mov
movsl
jne
sti
and
cmp
push
inc
mov
iret
or
loop
mov
inc
fwait
insb
div
clc
cmc
cmp
enter
pop
push
or
sbbl
or
imul
push
jne
fsubs
push
xchg
lds
shrb
mov
xor
jmp
push
add
adc
push
mov
js
mov
adc
into
repz
add
loopne
jae
pop
or
cld
mov
data16
sbb
icebp
adc
mov
psubsw
out
ja
push
repnz
movsl
pop
test
xor
mov
pop
mov
cmpsb
popf
ljmp
mov
pop
push
mov
mov
fs
add
lock
fs
mov
cmc
roll
fsubp
xchg
pop
fisubs
movsb
icebp
inc
inc
ret
aaa
pop
in
aad
test
int
add
aam
inc
pop
int
sub
adcl
jnp
je
sbb
adc
shl
push
add
xor
pop
jnp
lret
dec
xchg
dec
push
jno
imul
nop
push
mov
pop
sahf
mov
pop
add
cmp
lret
ja
jg
mov
push
mov
and
fxch
xor
gs
adc
pop
xor
add
leave
repz
loop
push
jno
out
icebp
ret
push
mov
xor
mov
inc
mov
cltd
push
or
add
data16
xor
adc
sub
jge
fcomps
sbb
fadds
dec
mov
scas
jg
sbb
and
fidivrs
out
sbb
sahf
xchg
aad
loop
dec
fs
bound
mov
inc
daa
inc
mov
roll
mov
stos
imul
inc
or
les
cmp
or
dec
jne
scas
add
dec
jp
mov
dec
dec
je
sahf
sbb
movsl
fbstp
pop
sti
es
enter
mov
lods
loopne
aas
jp
mov
mov
aam
adc
mov
and
jg
out
cmpsb
adc
sub
mov
es
xchg
lds
loope
imul
inc
into
aaa
jne
sar
pop
jo
xchg
gs
add
push
mov
cmpsl
mov
mov
mov
enter
add
mov
push
inc
movsb
leave
out
outsl
out
jmp
popa
adc
push
or
jmp
inc
dec
shll
add
ja
sub
imul
in
sahf
sub
push
sbb
rclb
inc
mov
inc
dec
outsl
sub
repnz
sti
jge
pop
push
xor
pop
cltd
xor
out
shrl
sbb
aam
stos
xor
push
ror
sbb
ret
daa
adc
testl
hlt
jo
sar
or
mov
ficomps
and
add
nop
out
jge
loop
popf
scas
mov
pop
test
cmp
xor
dec
arpl
and
sbb
aad
fdivs
insl
clc
repz
push
fcmovne
mov
sbb
iret
out
divb
mov
lods
mov
adcl
outsl
scas
fbld
dec
dec
nop
cltd
jno
inc
mov
push
mov
test
sbb
inc
fcmovu
add
xchg
pop
sti
stos
sbbb
notb
xchg
jge
je
stos
push
loop
fimuls
sub
or
adc
or
sbb
mov
ja
sub
dec
mov
into
sbb
cmp
cld
dec
add
xor
mov
pop
xor
mov
push
jae
mov
mov
sub
adc
xchg
add
sarl
jbe
mov
and
adc
xchg
bound
cmc
mov
ds
icebp
push
mov
fwait
mov
out
or
and
out
inc
cmc
fbstp
and
rolb
frstor
pop
add
mov
mov
mov
jle
ja
mov
ss
xor
or
lahf
add
pop
sbbl
xchg
cs
negl
inc
inc
push
push
inc
mov
mov
setb
sbb
cmpsb
fstpl
dec
aas
add
les
ret
lahf
mov
popa
push
loopne
shlb
mov
hlt
loop
mov
sub
subb
lods
sbb
xor
mov
test
int3
jae
aam
bound
or
fists
xchg
cmpsb
hlt
clc
aas
or
cmp
dec
int
push
pop
mov
iret
adcl
sbb
mov
xchg
movsl
push
out
popa
insl
inc
mov
pop
cmp
imul
jecxz
xchg
cmc
sbb
cli
push
testl
aad
jl
mov
ljmp
fisttpl
cltd
shll
test
test
daa
pop
jno
xchg
in
or
or
cltd
loope
and
pop
in
push
scas
dec
decb
lret
test
popl
cltd
sbb
cmp
xchg
ds
pop
sub
out
pop
out
pop
rorb
push
imul
xlat
fs
mov
loopne
pop
ret
dec
adc
jecxz
inc
and
dec
test
and
popf
inc
jecxz
add
bound
cwtl
icebp
inc
push
push
fldl
mov
dec
dec
cmpb
mov
fdivrs
test
jne
and
ret
dec
leave
jecxz
or
adc
aad
fildll
aam
rcr
or
adc
xchg
stc
sar
pop
in
cmpsb
addr16
mov
and
insl
subl
xchg
jnp
decl
mov
arpl
or
aad
xorb
nop
sub
push
into
jecxz
push
dec
sbb
jg
push
jns
xlat
arpl
sbb
mov
pop
xchg
lahf
xchg
idivl
add
cmpsl
sti
or
fcoml
icebp
call
adc
xchg
stc
mov
decb
dec
imul
and
fmuls
std
xchg
hlt
out
popa
xchg
rorl
inc
scas
pop
inc
push
shr
int
jp
push
xor
js
bound
movsl
inc
testl
cli
loope
out
pop
jnp,pn
xchg
rol
repz
andl
pop
bound
or
push
adc
xchg
pushf
sti
out
mov
sahf
pop
dec
subl
mov
stc
inc
xchg
in
sbb
ja
dec
jne
inc
loopne
sahf
add
insl
push
jge
add
cmp
out
aad
ss
sti
xlat
lret
pop
push
arpl
xchg
mov
inc
add
and
and
mov
vmread
mov
lds
or
mov
decb
daa
dec
push
add
and
jp
or
lods
popa
inc
or
fimuls
pop
inc
imul
int3
sub
lcall
mul
mov
pop
lcall
xchg
mov
lret
sbb
add
leave
jae
les
imul
iret
mov
sbb
dec
je
jecxz
gs
out
arpl
sti
push
pusha
add
or
sub
or
dec
jecxz
cwtl
sbb
std
clc
adc
out
mov
and
mov
or
jmp
repnz
pop
sub
ja
icebp
push
cmp
lcall
or
mov
pop
mov
add
insb
insl
or
xor
lds
rorl
mov
xchg
add
lret
lahf
push
xor
or
aas
jnp
or
in
mov
inc
insl
ret
shll
addl
int
test
cmp
sbb
pop
pop
fcompl
loop
pop
data16
xchg
lret
leave
mov
nop
or
or
leave
iret
jmp
add
mov
or
gs
or
pop
jg
jmp
ficomps
jmp
ret
jle
mov
jns
xchg
xchg
stc
out
cmp
fidivl
dec
add
mov
xchg
aam
jmp
cmp
ds
shlb
or
xchg
hlt
mov
xchg
xchg
scas
jp
call
push
les
ss
push
push
outsb
out
stos
dec
divb
in
mov
insb
adc
push
xor
notl
or
lret
xchg
push
lods
fildl
cmp
jge
pushf
not
mov
xchg
cmc
inc
jnp
lods
lret
adc
pop
pop
clc
mulps
or
out
adc
pop
hlt
jnp
cmc
lea
jecxz
or
in
sarl
ljmp
mov
cmc
jno
xchg
cmp
jg
jmp
sbb
scas
jmp
sub
mov
push
push
or
fiaddl
iret
dec
fistpll
imul
lods
cmp
imul
add
sbb
fs
xor
mov
stc
ja
xchg
ss
out
pop
dec
mov
cld
daa
add
add
outsl
sbb
testl
test
out
loop
inc
addr16
push
lcall
mov
add
imul
adc
xchg
idiv
inc
movsb
xor
pop
add
pusha
repz
in
mov
cmp
cmp
cmpb
dec
shll
pop
pushf
ljmp
inc
dec
testl
add
xchg
jmp
mov
xor
dec
push
adc
insb
adc
outsl
adc
out
push
stos
mov
inc
inc
in
jl
lods
add
mov
push
lods
ja
stc
frstpm(287
lds
imul
pop
sub
lahf
adc
inc
ret
aaa
ds
cli
insb
outsl
cmp
jb
jno
in
push
lahf
arpl
mov
xlat
sarl
movsb
sub
jnp
or
neg
mov
jbe
roll
sub
sbb
pop
hlt
filds
addr16
or
repz
gs
lock
cmp
aas
sbb
stos
ss
jno
in
or
inc
jg
push
jmp
sbb
pusha
test
push
xchg
int
fiaddl
adc
and
out
mov
dec
test
pop
or
out
in
and
lds
mov
aas
sub
nop
mov
movsb
enter
cmp
popa
insb
fisttpll
jno
testl
pop
cld
push
mov
jmp
pop
iret
jp
push
or
data16
push
sbb
lds
addr16
cmpsl
mov
xor
stos
std
or
int
or
mov
loop
xchg
je
ret
push
ljmp
out
sbb
lret
lds
push
loope
out
jecxz
xchg
dec
hlt
sahf
andl
jbe
out
ds
rorb
push
pop
sahf
cmp
xchg
loope
int
jg
jmp
jb
out
or
out
xchg
push
xchg
or
ficompl
out
push
dec
fistpl
fidivrs
dec
and
jne
inc
or
or
fs
xor
aas
aaa
icebp
rolb
cld
xchg
cs
ja
dec
loopne
push
arpl
xchg
xor
jl
xchg
stos
or
aam
es
ds
insb
out
insl
xor
jno
mov
mov
sbb
negl
lret
push
jnp
stos
inc
and
push
cmc
mov
imul
or
stc
fiadds
lahf
rorb
je
lcall
jo
xor
and
movsl
pop
pop
mov
cmp
aas
mov
dec
test
push
icebp
mov
popf
lret
xchg
jg
jmp
aaa
or
jmp
sbb
pusha
mov
adcl
mov
pop
jno
fcmovb
aam
jno
mov
aaa
in
add
sub
xor
or
hlt
cwtl
cmp
call
ss
adc
push
cs
xor
add
test
sti
aam
lds
cmp
push
jno
jmp
ret
add
push
or
not
push
push
sub
incl
cmp
push
out
pop
imul
imull
jle
lods
dec
or
mov
in
add
test
out
xchg
fsubl
mov
out
push
dec
aas
test
loope
fistpl
out
sub
idiv
sbb
xlat
mov
xchg
popa
push
out
add
mov
pop
mov
mov
or
in
sub
shll
xor
ds
pop
and
clc
ja
dec
lds
add
mov
inc
pop
dec
jno
mov
mov
mov
mov
fcmovnb
loop
mov
xchg
jne
xlat
mov
cmpsb
lds
or
mulb
enter
jb
jo
or
aas
push
mov
inc
jno
add
fisttpl
xor
loopne
xchg
popa
jb
rcr
arpl
or
ds
aas
xchg
dec
mov
lcall
pop
loope
and
jmp
fs
push
or
dec
pusha
lock
inc
inc
loop
call
aaa
adc
test
pop
xchg
movsb
insb
fistpll
jno
incl
xchg
out
pop
mov
add
lret
pusha
test
in
cmpsl
lahf
mov
jmp
sti
add
test
add
das
add
ret
cmpsl
outsb
daa
ja
mov
push
adc
inc
std
cmp
stos
test
andl
jle
std
jbe
outsb
sub
nop
and
lods
in
dec
push
lret
mov
daa
sti
xchg
push
addr16
xadd
je,pt
lock
mov
addr16
jbe
adc
cmp
in
cli
outsb
pop
xchg
in
data16
xchg
jns
xlat
pop
out
push
sub
xchg
push
fnsave
mov
push
jge
cmpsl
arpl
inc
jbe
inc
inc
xchg
pop
sbb
push
daa
pop
dec
ret
inc
mov
adc
int
jbe
outsb
hlt
ds
add
cltd
ds
nop
and
pushfw
sbb
cmp
dec
movb
xchg
jle
or
cmp
xor
inc
imul
insb
outsb
cmpsl
inc
pop
mov
daa
pop
xchg
push
test
movb
in
jle
imul
inc
je
daa
daa
mov
daa
push
jbe
dec
iret
dec
xlat
cs
add
push
mov
testl
add
pop
call
and
add
push
addl
push
cmp
outsb
pushl
loope
add
out
in
fisubrs
push
je
cs
inc
daa
ds
inc
cs
push
jle
roll
andb
dec
push
inc
shrl
call
test
pop
pop
inc
xchg
andl
sbb
jns
push
fsub
add
pop
jmp
lret
push
xor
inc
xchg
push
cmc
cmpsb
xchg
je
xor
data16
cmpsb
loopne
rcr
jecxz
xchg
test
jne
es
in
fsubs
popa
lds
in
pop
out
pop
jle
pop
cmpl
ss
sbb
ss
in
mov
scas
add
in
rorb
divps
ss
push
lret
jmp
dec
hlt
and
shl
loopne
dec
lds
cmpsl
ds
cs
xchg
xor
xchg
es
in
int
adc
fadd
enter
addl
jle
cld
and
jbe
sarl
fbld
pop
sub
fxch
int
insb
out
mov
dec
mov
call
sbb
into
ss
scas
arpl
sub
sub
push
and
repnz
ds
dec
ss
cli
bound
testb
sbb
mov
imulb
subl
pop
je
add
sti
stc
pushl
pop
mov
je
iret
cmp
jge
hlt
into
arpl
jl
sbb
add
aam
je
iret
and
into
mov
daa
push
jecxz
mov
pop
movsb
mov
je
fs
lock
scas
movsb
outsl
cmp
out
sbb
add
mov
aas
addl
jbe
shrl
stc
xchg
stos
outsb
push
in
cmc
data16
ljmp
loopne
rcrb
push
mov
xchg
xchg
dec
pop
xchg
call
xchg
ljmp
ds
xor
ss
js
je,pn
daa
xchg
and
add
xor
ror
out
push
insb
mov
mov
imul
cmp
daa
push
pop
clc
rclb
ss
add
dec
push
sbb
mov
scas
and
sub
push
dec
mov
stos
push
jp
dec
jae
cmp
iret
xchg
pop
ret
jbe,pt
ss
mov
movsb
outsb
lock
pop
pushf
addl
xchg
xchg
adc
push
add
cmp
je
daa
lcall
out
imul
jle
jbe
loopne
xor
and
andb
sbb
ja,pt
inc
ljmp
mov
add
es
loopne
lock
shlb
push
aad
ret
addl
insl
imul
repz
loopne
outsb
and
sahf
data16
sbb
jb
sbb
ds
clc
ss
xchg
inc
xchg
or
lcall
es
ds
fwait
sub
daa
testl
xchg
in
fcmovnb
arpl
jmp
add
pop
sub
test
mov
push
ret
xchg
jo
inc
push
icebp
addr16
xchg
sub
xor
aad
arpl
test
clc
int
pop
xchg
in
push
jmp
lock
in
push
cwtl
push
gs
pop
xchg
dec
xchg
movsl
jle,pt
out
das
outsb
jae
popa
sbb
sbb
in
lds
movsb
xchg
xchg
cmp
out
push
in
int3
mov
es
push
jb
jle
jbe
fs
xchg
outsb
loop
add
out
adc
pop
in
imul
aas
push
ljmp
in
xchg
loopne
je
push
push
push
or
push
push
pop
push
push
cmp
sbb
addl
xor
call
mov
dec
mov
mov
movsl
call
je
arpl
idivl
inc
ss
pop
stc
cs
es
mov
push
sbb
icebp
cld
adc
lds
daa
ret
fldl
cmp
je
jae
pop
ds
les
shlb
inc
dec
xchg
inc
mov
rcrl
add
and
lds
js
mov
sbb
loopne
mov
add
rolb
subl
outsb
inc
shrb
sar
push
out
out
inc
fnstsw
arpl
add
rolb
push
sti
sub
push
cmpl
lret
push
inc
loopne
loop
mov
xchg
jle
loopne
out
jbe
outsb
das
or
sbb
pop
xor
inc
aad
inc
cs
jg
jnp
in
nop
fcom
add
insb
inc
mov
push
pushf
mov
push
xchg
xchg
lret
in
mov
negl
loopne
ds
in
insb
inc
push
jecxz
ss
das
ret
cmp
popfw
lret
pop
adc
orb
aam
hlt
sbb
xchg
inc
mov
dec
add
jg
push
mov
and
xchg
fistl
xchg
mov
clc
popf
pushf
mov
cld
ds
mov
jp
push
push
cmp
inc
shl
inc
repnz
ss
lcall
cs
lcall
sub
jno
das
push
out
add
add
es
dec
pop
test
or
inc
std
dec
jbe
xchg
xchg
xchg
daa
inc
shll
xchg
sub
in
loopne
rorb
mov
in
mov
sbb
jle
mulb
loopne
test
lods
mov
sub
mov
cmc
cmp
mov
xor
sbb
xchg
shll
movsl
mov
xchg
cs
add
les
ljmp
test
test
xchg
ds
sahf
push
loope
out
fisubs
push
lret
test
daa
pop
xchg
push
jbe
rcll
je
sub
popf
data16
pop
pop
iret
dec
or
mov
mov
adc
jo,pt
pop
cs
jae
xchg
mov
mov
mov
pop
sti
inc
xchg
xchg
adc
daa
push
sbb
jbe
outsb
imul
adc
xlat
inc
dec
lods
mov
fisubrl
xchg
mov
mov
ja
mov
ds
lret
xchg
push
inc
mov
fidivrs
xchg
pusha
inc
jmp
outsb
test
cmp
out
pop
pop
push
testl
addl
mov
push
mov
pop
dec
loopne
movsl
push
repz
testl
ds
ss
mov
aam
jns
ficoms
stos
insb
add
jle
xchg
ss
push
add
mov
push
int
cli
or
inc
lods
cmpsl
pusha
test
je
inc
xchg
inc
je
popa
iret
sub
and
lods
or
sub
mov
inc
xor
rorl
xorb
rcll
mov
cmp
movsl
pop
push
aam
and
inc
xor
jmp
sbb
aaa
lret
popf
jbe
dec
outsb
or
jnp
mov
cmp
adc
cmpsb
dec
inc
into
jb
sar
es
push
mov
int
adc
cmpsl
cs
mov
jecxz
out
mov
shlb
inc
iret
clc
xchg
mov
std
addb
mov
subb
push
in
arpl
dec
xlat
and
rcrl
mov
into
mov
scas
ss
mov
cs
es
push
repnz
or
jbe
movsl
mov
jle
push
outsb
in
mov
arpl
dec
pop
pop
adc
pop
js
std
pop
sub
mov
mov
aam
xor
scas
ds
out
ss
into
or
test
dec
or
fsubrp
loop
addb
jle
lds
insl
sbb
filds
outsb
sti
cmc
xor
and
hlt
add
pop
fsub
scas
inc
mov
loopne
add
loopne
rclb
xchg
adc
in
and
sub
add
in
push
xchg
xchg
ss
jle
xchg
sbb
inc
add
push
mov
xchg
popw
imul
lock
nop
fs
add
jmp
or
fdiv
ja
dec
addl
push
pop
jae
test
pop
pop
dec
ja,pt
jle
loope
xchg
jmp
dec
out
mov
data16
jae
adcl
add
hlt
dec
mov
xchg
push
xchg
inc
jb
mov
loopne
shrb
or
push
dec
mov
inc
push
movsb
data16
ds
out
leave
xchg
add
mov
push
push
enter
aad
pop
adc
movsb
push
and
pusha
inc
jbe
add
dec
fcompl
jmp
imul
add
inc
jae
ds
mov
inc
cs
adc
imul
andb
sbb
out
push
or
loope
push
in
pop
or
or
and
rclb
push
dec
push
outsl
fisttps
mov
push
sarl
outsb
daa
cs
jnp
ret
jmp
cmpsb
xchg
add
shll
xchg
imul
test
xor
xchg
dec
mov
roll
fs
ljmp
outsb
into
hlt
sbb
outsb
in
imul
jmp
lret
imul
push
cs
mov
dec
es
push
cmp
sbb
fcoml
aas
mov
xchg
aas
inc
lock
lock
jb
sub
arpl
dec
dec
jbe
je
fs
inc
cmp
xchg
mov
pop
fidivs
outsl
je,pn
rclb
int
mov
push
fmull
fistpll
loopne
arpl
adc
in
mov
pop
jae
adc
ds
mov
ds
cmp
ss
jmp
push
cs
test
mov
pusha
xchg
push
clc
dec
out
inc
es
xchg
jle
cmc
fidivs
mov
imul
mov
sti
mov
jmp
dec
dec
sub
pop
push
cmpsl
push
xlat
lds
ror
mov
xchg
movsb
xchg
stos
jle
jbe
outsb
lahf
gs
jmp
jns
cmpsl
daa
xor
jbe,pt
mov
push
loopne
rcrb
xchg
push
in
and
test
push
jmp
xchg
mov
int3
and
xchg
pop
xor
movsb
ret
sub
inc
xchg
pop
bound
mov
mov
push
ss
xchg
xchg
dec
xor
xor
pop
push
push
pop
ror
insl
pop
or
test
pop
jl
loopne
cli
movb
imul
jbe
xchg
mov
dec
scas
sbb
loopne
imul
xchg
daa
jbe
hlt
lret
aas
ficoms
gs
xor
sbb
pop
jno
push
jbe
popf
sti
aaa
jle
jns
pusha
push
add
pop
loope
add
xchg
jle
inc
xchg
jbe
sti
xor
cmpsb
lds
data16
bound
addl
dec
or
aad
push
ds
inc
nop
roll
jnp
pop
add
test
data16
out
jle
push
mov
xlat
test
daa
enter
and
dec
add
inc
je
subb
adc
xchg
inc
mov
std
arpl
jno
xchg
loopne
shlb
jbe
jecxz
lret
test
and
mov
dec
scas
lcall
xlat
dec
fdivs
add
mov
inc
stos
outsb
aam
lds
pushf
push
sbb
shl
pop
dec
clc
je
sub
xchg
out
push
orl
shrb
loopne
rorb
add
ja
dec
jl
jbe
inc
incb
jmp
adc
jbe
outsb
lea
imul
stos
xor
inc
push
add
dec
movb
je
mov
add
xlat
data16
jg
daa
dec
lods
sbb
push
jmp
mov
dec
gs
mov
fcoms
cs
jp
addr16
loopne
ret
push
pop
roll
notl
cmc
into
jbe
mov
pop
pop
xchg
push
sbb
adc
out
adc
rcl
dec
gs
cld
sub
sbb
es
shlb
addb
push
iret
movsl
push
movsb
mov
adc
xchg
int3
xchg
mov
pop
add
push
lret
jns
cwtl
out
mov
mov
aas
and
out
shl
push
out
or
sti
add
ds
sub
jo
out
in
shl
es
push
les
fnstcw
out
inc
pop
jge
imul
jle
jbe
add
sub
int3
ds
in
mov
lods
push
test
stc
and
fs
es
stos
test
cmpsl
jne
xchg
stc
jle
in
or
outsb
cmpsb
loopne
sarb
iret
sub
aaa
cs
jne
add
add
xchg
pop
mov
test
in
lret
xchg
orl
adc
jbe
mov
and
pop
jno
mov
sarl
shl
mov
push
jbe
mov
imul
xor
pop
ds
ss
push
std
push
dec
out
sub
jmp
dec
repz
out
xchg
idiv
ret
cmpsl
jl
jle
jbe
jmp
shr
mov
rol
add
popf
cltd
inc
ds
insl
fisubrl
enter
popa
loopne
into
push
and
xlat
and
mov
in
in
xchg
bound
daa
adc
inc
lcall
xchg
test
movl
shll
xchg
xor
push
mov
es
sbb
in
iret
popa
and
lea
pop
hlt
outsb
cmpsl
movsw
imul
add
mov
stos
fmuls
outsb
ds
jmp
mov
es
pop
push
std
mov
xchg
cmp
ret
add
es
loopne
cmp
je
pusha
jbe
enter
not
add
push
jp
lahf
pop
iret
jo
cmc
test
rcrl
iret
cs
test
push
xchg
mov
ret
outsl
testb
je
or
push
pop
outsb
in
fwait
pop
mull
pop
add
dec
jp
filds
pop
jno
mov
lods
shlb
lods
arpl
div
pop
push
repz
jecxz
les
cmp
xchg
sti
lret
outsb
das
pop
push
nop
jns
inc
lds
inc
sarl
inc
out
std
ss
add
and
xor
and
inc
xor
rorb
cs
and
je
in
xchg
out
cmc
xchg
fbstp
insl
notl
pop
dec
ja
movsl
lock
cmp
ja
shlb
sbb
lret
mov
xor
mov
repz
movsl
push
fsubrp
pushl
lcall
mov
inc
add
jns
andb
mov
test
inc
je,pn
and
aas
es
sbb
pop
cmp
dec
out
push
cmc
addb
sbb
cmpsl
repnz
iret
push
jbe
sub
test
mulb
js
jo
outsb
je
dec
cmp
mov
ja
ds
add
imul
fdivrs
cmpsl
add
inc
pop
test
flds
cld
mov
test
inc
fdivp
add
adc
rcrl
push
push
push
addb
pop
lret
and
lock
idivb
jle
fidivrs
push
mov
jl
sbb
mov
push
cmp
repnz
mov
movsl
aas
lds
fs
xorl
divps
xor
test
ds
incb
sbbl
push
arpl
dec
push
adcb
in
sub
je
cmp
add
jge
mov
pop
jp
ja
notb
aad
loop
push
xchg
loopne
jle
or
in
push
xchg
jle
mov
dec
xchg
lock
into
inc
fldln2
movsl
cmpsl
mov
lret
lds
es
push
inc
ds
jl
int
in
loope
mov
mov
rcr
imul
imul
inc
xorb
ljmp
or
push
repnz
dec
fiadds
mov
repnz
mov
aam
add
add
ret
cmpsl
inc
xchg
decl
or
loop
lock
cmc
cmp
xor
not
push
bsf
clc
inc
inc
push
sbb
bsr
inc
push
shr
ror
adc
shr
mov
ror
dec
add
mov
bt
cmc
rcl
sbb
mov
shl
sub
mov
pusha
jmp
call
sbb
and
mov
inc
daa
xchg
fs
mov
or
cmpsl
add
and
lret
xchg
mov
xchg
mov
movsl
stos
add
jmp
lldt
iret
sbb
jno
insb
push
xor
or
orb
popf
fnsave
repz
push
test
enter
inc
test
dec
adc
xlat
inc
jne
sti
dec
mov
pop
idiv
out
xchg
xor
loop
call
mov
outsl
fdivrs
arpl
ret
es
xchg
insl
out
jae
dec
xchg
ret
lods
mov
ljmp
jecxz
leave
dec
sbb
stc
xorb
xchg
add
ss
clc
mov
mov
pop
bound
sub
push
cmpsb
add
fisttps
xchg
imul
int3
mov
movsl
add
loopne
mov
je
ret
es
push
movb
movb
lea
jmp
lds
cltd
inc
add
addr16
cmp
dec
sub
xchg
xchg
pushl
inc
sub
es
outsl
and
xchg
and
mov
dec
xchg
push
push
push
adcb
push
or
dec
jne
fwait
pop
sarl
movsl
xchg
adc
pop
dec
adc
fsubr
mov
push
mov
cltd
out
pop
sbb
xchg
push
dec
fcoml
aad
pop
adc
jp
push
fcoms
pusha
lds
push
je
jbe
roll
dec
imul
and
cmc
push
xchg
jb
xchg
std
push
push
mov
je
insb
iret
setae
movl
cwtl
lea
call
pusha
call
push
dec
xor
jmp
mov
in
dec
dec
mov
dec
push
sub
mov
in
push
lock
data16
out
aad
shrb
addl
xchg
dec
enter
push
add
leave
pop
mov
cmp
xchg
fbld
es
out
fistl
sbb
negl
push
adc
pushf
pop
cli
cmp
lcall
cmp
movsb
add
sub
into
jne
cltd
jmp
test
movzwl
bswap
adc
add
mov
call
lret
fwait
and
pop
mov
mov
lret
xchg
sbb
mov
dec
lods
jbe
cmp
mov
sbb
cmc
adc
xor
and
push
in
fs
mov
inc
leave
fs
unpckhps
popa
mov
orb
out
sub
cmc
xchg
add
pop
scas
xor
dec
insb
cwtl
inc
mov
lods
xchg
aam
jae
ret
imulb
repnz
dec
sbb
pop
push
cs
fbld
cmc
mov
jecxz
add
jmp
jbe
shll
outsb
jno
loopne
daa
mov
out
sub
popf
add
sbb
mov
fcoml
mov
mov
gs
jae
pop
mov
adc
lret
divl
xchg
push
sub
int3
test
int3
sbb
sti
mov
int3
bound
pop
adc
xchg
inc
jl
jmp
jp
in
das
fsub
mov
jbe
and
ljmp
push
mov
sarb
jmp
outsl
out
aad
hlt
cmp
int
rorb
add
loop
pushf
jg
fisubrl
test
sbb
scas
lret
mov
cmp
sahf
gs
fwait
clc
aas
or
mov
ja
xchg
inc
lock
xchg
out
in
cwtl
push
out
in
call
outsb
fsub
inc
mov
jge
jnp
and
sbb
pop
jo
dec
icebp
push
lds
sub
jmp
stc
sbb
in
adc
stos
fndisi(8087
outsb
mov
push
ja
data16
cmp
add
stos
mov
fcoml
sub
mov
pushf
fistl
cs
cwtl
ss
mov
xchg
shlb
mov
sub
pusha
mov
mov
or
test
xor
jno
mov
mov
ja
das
test
adc
push
sub
loope
lret
push
push
js
sub
add
pop
les
dec
test
sub
cltd
inc
lods
in
mov
les
sbb
sbb
mov
mull
out
das
mov
stc
into
js
hlt
pop
addr16
aad
cmp
xchg
adc
daa
imul
jnp
mov
sub
dec
inc
jl
cld
mov
cmpsb
lret
and
mov
dec
mov
add
js
mov
popf
rorb
mov
idiv
lods
pushf
cmc
pushf
not
jmp
xchg
rcr
movzbw
not
mov
call
adc
add
pop
out
rcrb
out
push
dec
sub
clc
add
movb
push
mov
sub
xchg
mov
lods
sarl
pushf
inc
push
sub
dec
insb
cmp
daa
pop
xor
jns
lret
test
cwtl
cmc
insl
mov
sbb
dec
sbb
cmp
dec
xchg
loope
add
adc
inc
push
push
loop
adc
aaa
or
test
mov
js
sub
dec
push
push
dec
dec
dec
cs
push
push
add
ja
mov
cmp
fildl
push
push
mov
stc
lock
lahf
int
fsubr
dec
sbb
loop
xchg
int
aaa
int
pop
push
test
adc
in
mov
cmpsl
add
and
mov
enter
and
jns
stos
or
and
pop
pushl
mov
jmp
iret
push
orl
mov
mov
pop
pop
aas
and
out
xchg
pop
mov
adc
jle
leave
mov
xor
mov
pushf
xchg
dec
sbb
inc
test
ret
pop
jp
inc
popf
sbb
mov
inc
iret
xchg
rep
push
std
adc
pop
jns
or
loop
adc
cmp
insl
in
lods
cmp
xor
or
jno
pop
sub
ds
insb
pushf
stc
test
cmpsb
test
lret
test
and
xchg
mov
jns
icebp
dec
and
sbb
adc
lds
mov
mov
xchg
lcall
or
stc
jge
cmp
pop
jmp
xchg
mov
test
lret
movsl
xor
divl
ret
xor
xchg
mov
ljmp
inc
sti
into
mov
subb
push
lahf
xor
cs
pop
and
lods
mov
lds
outsl
scas
mov
fs
cmp
and
shll
xchg
pusha
scas
or
iret
movsl
or
inc
mov
jp
jg
mov
call
xor
out
push
mov
lret
scas
fwait
cld
clc
in
dec
ret
mov
add
cmc
dec
hlt
dec
ja
mov
cmp
xchg
inc
insb
push
mov
cmpsb
sbb
mov
mov
repnz
adc
mulb
jle,pt
call
push
pop
xchg
nop
jne
repz
push
test
mov
lahf
adc
popf
icebp
inc
ret
mov
sbb
loop
lea
jne
bndstx
outsl
xor
aas
add
adc
cmp
out
xchg
frstor
or
nop
add
pushf
test
lea
jns
pusha
lea
jne
pushf
mov
jmp
add
inc
arpl
inc
push
cmp
pop
sti
insl
ja
mov
xchg
testb
rcrb
shl
sar
sbb
xchg
jnp
pop
and
xchg
mov
sbbl
icebp
sbb
dec
or
cwtl
fcomi
mov
shrl
pop
test
cmp
fistps
loopne
call
stos
cld
pop
and
cmp
jnp
inc
push
rcr
test
rcl
add
ror
mov
movl
clc
cmp
cmc
test
pushl
call
mov
cmc
cmc
or
mov
clc
cmc
clc
repnz
pusha
pusha
call
out
ljmp
mov
xchg
xchg
dec
cmp
call
and
inc
adc
add
aad
inc
shll
sahf
decb
ret
test
xchg
jecxz
mov
jl
pop
jbe
push
xor
xor
fs
insb
add
lea
jne
pusha
movb
call
pusha
push
movl
lea
jae
not
movzbw
btr
ror
mov
adc
rcr
sub
sbb
mov
rcl
rcr
test
mov
bt
xor
stc
clc
jmp
sbb
and
shl
xor
push
clc
sub
mov
test
push
bsf
stc
sub
push
inc
add
xor
push
call
adc
cmp
and
jecxz,pt
inc
mov
or
sarl
pop
jns
stc
and
nop
xor
push
insl
inc
push
in
loope
xchg
gs
ret
and
cli
sub
add
mov
jp
test
pusha
jl
inc
push
pop
fcoms
adc
dec
rclb
dec
pop
jne
inc
mov
jne
rclb
shlb
lcall
scas
or
lcall
add
mov
add
and
clc
lret
bound
pusha
dec
xchg
fisubl
imul
xchg
mov
jge
jp
pushf
cmc
mov
bt
bt
add
clc
cmp
call
push
lock
std
std
mov
inc
adc
frstor
push
pushf
mov
pop
scas
ss
stos
fucomip
or
cmp
lret
aam
push
ret
add
jecxz
sub
test
and
push
add
aad
inc
push
sbb
in
xchg
push
mov
stos
push
xchg
mov
enter
inc
pushf
mov
movb
lea
call
pushf
mov
pushf
mov
movw
lea
jmp
sti
inc
mov
sbb
mov
shlb
in
inc
ret
lret
cmp
mov
cwtl
popa
sub
adc
push
xor
xlat
enter
lea
addr16
stos
ss
mov
pop
sbb
ja
decl
xor
cmp
push
inc
pushf
mov
popa
loope
inc
and
cwtl
lcall
mov
adc
mov
dec
sbb
cmp
jle
pop
orb
lea
jmp
lea
ja
and
rcl
stc
adc
sub
bts
test
add
pusha
btc
pushl
mov
inc
setne
mov
clc
cmc
repnz
pushl
movb
pushl
lea
jne
mov
movzbw
lahf
not
movb
mov
jmp
inc
jo
pushf
fistpl
popf
xor
cmp
or
test
lcall
mov
shlb
xchg
mov
xor
xchg
scas
pop
jl
push
jns
imul
and
stos
xchg
test
cmp
inc
pop
adc
mov
push
loope
inc
cmpsl
or
pop
mov
inc
adc
mov
push
mov
data16
jg
imull
dec
adc
push
movw
jmp
pushf
movl
pusha
lea
jmp
mov
sarb
daa
outsb
pop
out
xor
jno
sar
mov
sbb
mov
je
in
lds
xorl
das
movsl
mov
jae
xchg
cli
mov
stc
jg
imul
adc
xor
cmp
std
jb
jg
pop
das
or
fs
or
and
pusha
std
or
outsb
pusha
out
jmp
out
mov
pop
test
mov
iret
cmp
mov
rolb
fnstenv
pop
loope
adc
ret
fsub
mov
cmp
jg
dec
mov
or
ljmp
mov
or
in
enter
jno
test
into
xor
insl
stos
xor
fildl
dec
out
push
out
movsl
jne
ljmp
jl
jl
repnz
cmpsb
jp
or
jge
adc
jmp
mov
pusha
clc
inc
sbb
pushf
pushf
movl
movb
pusha
pushf
lea
jmp
ror
mov
rol
mov
bt
pushf
call
push
lea
je
pushf
add
pusha
pusha
cmp
pushf
pushf
lea
jb
cmp
pushf
clc
jmp
loopne
add
and
jbe
loope
mov
xchg
push
ret
lea
cmpb
lods
xor
push
and
icebp
faddl
xor
insl
test
push
cmp
repnz
jge
sub
mov
pusha
push
cmp
xor
pop
stos
sub
jle
loopne
daa
aaa
cwtl
into
and
outsb
push
adcl
mov
ds
jge
mov
add
and
int
popa
dec
into
sub
mov
cmpsl
ljmp
lret
movl
jmp
mov
testl
cltd
test
in
mov
clc
and
pop
inc
movsb
adc
xchg
scas
jle
push
xchg
cld
rcrb
je
cwtl
add
sub
dec
int3
xor
imul
xor
push
int3
mov
lret
dec
mov
fnstcw
pop
adc
fsubrs
mov
pushf
sub
jno
leave
inc
jno
decb
gs
inc
lret
test
mov
push
jl
bound
push
sahf
add
lahf
inc
pushf
pop
std
mov
bound
mov
loopne
out
ljmp
sbb
lea
jne
mov
pusha
not
pushfw
popw
pusha
bt
mov
stc
not
push
mov
ror
mov
pushf
inc
mov
stc
push
rol
call
call
lea
je
sar
shld
aad
xor
sub
mov
mov
dec
mov
mov
add
sar
shr
sub
shl
sbb
stc
mov
stc
clc
or
call
push
mov
movl
pusha
mov
lea
jmp
pusha
mov
lea
jae
call
cwtl
movb
lea
not
lahf
bswap
mov
pushf
movsbw
cwtl
lea
movb
movl
jmp
jmp
sbb
add
adc
sbb
inc
int3
sub
and
ret
jg
jne
jmp
xor
xor
in
loopne
push
dec
ljmp
hlt
cli
xchg
aas
push
xor
ret
lock
cs
ror
std
stos
fxch
rcrl
outsb
in
hlt
inc
fstpt
jle
adc
lods
mov
bound
lock
popf
int
inc
jl
dec
or
mov
inc
push
jo
cwtl
pop
xor
ss
arpl
out
push
dec
inc
fldt
xchg
mov
nop
js
pop
into
sub
mov
scas
jge
pop
leave
and
ffree
and
in
in
cli
mov
pop
hlt
cli
jle
xchg
adc
je
cmp
stos
outsl
loope
pop
jg
mov
andl
and
jnp
imul
push
xor
inc
mov
icebp
inc
cmpsb
out
xor
ljmp
sarl
lods
xchg
stc
jns
ret
adc
sbb
lds
jns
adc
cmp
pop
aam
mov
cmp
cltd
mov
cmp
push
movsl
jg
inc
xor
mov
add
daa
jmp
and
mov
lahf
inc
dec
mov
lret
add
sbb
fisubrl
cmp
mov
mov
jns
jge
jb
repz
movsb
fs
xor
fdiv
not
xchg
sbb
push
mov
xor
mov
pop
int3
lods
sub
add
sahf
add
xchg
and
xchg
mov
adc
and
mov
and
loopne
test
pop
and
sub
iret
mov
fists
repz
cmp
repz
jmp
out
mov
and
cmp
int3
mov
xor
gs
dec
pushl
lea
call
jmp
jbe
bts
setl
dec
movsbw
mov
add
add
shl
mov
sub
add
neg
movl
and
add
rol
mov
stc
cmp
pushf
call
mul
loope
push
inc
idivl
movsl
sbb
in
leave
dec
stos
sub
xor
xor
mov
add
pop
daa
or
repnz
aad
fnsave
ret
leave
inc
adc
ret
unpckhps
cltd
sub
sub
cmp
sbb
mov
clc
js
dec
outsb
je
roll
js
sub
cmp
fistpl
rol
mov
jo
push
inc
mov
repnz
inc
roll
lahf
add
mov
jns
out
dec
adc
sbb
shll
imul
out
dec
push
pop
cmp
out
rorb
ljmp
ret
cmpsl
sbb
stos
xchg
jp
sbb
xchg
xchg
jecxz
jae
cmp
ss
imul
out
shll
fildl
push
test
push
test
hlt
and
sub
inc
filds
or
mov
mov
or
dec
les
jp
jo
cltd
adc
icebp
hlt
cli
mov
je
sbb
je
sbb
notl
jno
jecxz
mov
inc
scas
dec
mov
loopne
sbbl
push
cwtl
pusha
xchg
cltd
fldt
push
push
mov
mov
in
jns
into
addr16
xchg
pushf
pushl
popl
push
pushl
ret
call
cmp
push
adc
popa
mov
aam
jo
jge
lret
and
xchg
push
jmp
out
mov
stos
dec
sub
inc
mov
adc
sub
call
scas
cs
xchg
mov
loopne
and
cmp
xchg
gs
cmp
mulb
pop
push
jnp
mov
out
and
mov
xchg
ficomps
ja
sbb
jne
into
loopw
test
pop
mov
dec
fnstcw
push
shll
push
push
jge
sbb
xor
lods
sbb
data16
inc
lea
aaa
and
test
mov
aaa
out
jo
das
imul
ds
mov
dec
jle
xlat
out
jb
test
push
xchg
lock
mov
testl
test
roll
inc
inc
cltd
mov
sbb
mull
popw
mov
in
mov
in
test
mov
addr16
jne
xchg
and
aaa
je
lahf
pusha
cmp
and
add
sub
fs
je
push
lea
jmp
sbb
test
mov
mov
das
daa
sbb
mov
xchg
pop
pop
nop
das
outsl
xorb
inc
outsl
adc
mul
sbb
or
mov
sbb
nop
push
cmpsl
testl
or
push
bound
add
jae
and
cmp
or
mov
push
push
arpl
enter
mul
inc
and
cwtl
push
sarb
mov
fwait
bound
jbe
lods
mov
into
imul
dec
stc
add
mov
xchg
das
scas
adc
add
push
xchg
mov
loope
xchg
mov
and
call
pop
push
aad
daa
mov
movl
add
insb
jg
sbb
adc
or
out
and
lds
dec
cmp
jecxz
xor
sub
xor
mov
adc
dec
adc
adc
loopne
lret
lods
repnz
fbld
cld
inc
xchg
imul
adc
scas
cmp
outsb
imul
and
in
roll
cmp
lock
gs
xchg
sub
lds
pop
add
orb
jae
ds
insb
sub
lahf
mov
in
pop
mov
jnp
cwtl
stos
sarl
jmp
mov
ss
int3
ljmp
loope
jo
sub
and
jae
into
push
sbb
cmpsl
std
sti
and
push
mov
mov
cmpsl
add
jo
push
mov
movsl
xchg
jl
test
inc
int
fwait
test
filds
xor
sbb
decb
lea
fldcw
sahf
pop
arpl
add
gs
mov
das
xchg
mov
cmpsl
dec
jns
stc
dec
push
pop
bound
jle
aas
test
xor
lret
jne
add
jle
xor
jecxz
lea
mov
push
mov
rcrb
mov
push
push
loopne
outsb
push
mov
loop
fdiv
into
mov
aam
jg
mov
aaa
dec
adc
or
cmp
cld
xchg
and
pop
push
cmpsb
es
loope
cmp
shl
ss
jp
inc
bound
adc
cld
filds
aad
addr16
popa
ret
xchg
jae
mov
sbb
xor
xchg
imul
clc
jmp
lea
call
call
movq
jg
cltd
notl
ret
stos
mov
sbb
rorb
jnp
cmp
sahf
push
aas
jns
fidivs
daa
xchg
loopne
and
xor
ljmp
dec
push
mov
sub
sub
mov
inc
sarl
ror
arpl
sahf
cld
sub
inc
rcl
inc
sub
or
add
insb
mov
test
cmp
or
sbb
xchg
loop
in
insb
cmpsb
sub
in
pop
add
aam
stos
lcall
lods
push
sti
int
cmp
clc
aaa
adc
mov
xchg
mov
push
inc
movsb
ss
pop
pop
fsubrl
jle
jo
test
adc
inc
sbb
cwtl
cmpsl
inc
cmp
sbb
jo
mov
jmp
fidivrl
adc
cmp
insb
mov
testl
shl
mov
pop
adc
scas
call
pushf
movb
lea
jne
pusha
mov
pusha
mov
pushl
call
inc
mov
sub
mov
lock
mov
pop
mov
cmp
dec
in
cs
xchg
rorb
mov
std
pushf
std
stos
or
ret
ficompl
aad
and
pop
jmp
mov
sbb
inc
push
sbb
xchg
test
adc
dec
cmp
outsb
hlt
arpl
jno
lret
xchg
icebp
test
lret
or
lods
xchg
sti
cmp
insb
clc
push
mov
shrb
inc
loopne
cmp
in
test
and
push
jo
int
fidivrs
push
sbb
iret
adc
lea
sbb
pop
cwtl
mov
scas
jns
ds
mov
dec
outsb
mov
push
sti
jmp
sub
push
sbb
repnz
in
cmp
xchg
or
add
xor
sahf
lock
rcll
fildll
std
mov
insl
addb
pop
dec
insb
or
inc
sub
push
sub
lods
push
and
incb
push
fldt
add
out
cld
xor
rcll
sbb
inc
int
xor
aad
cmpsb
dec
mov
sar
sub
pop
hlt
sub
mov
push
cmp
cmpb
bound
jnp
jo
pop
loopne
sbb
hlt
jo
lods
push
fidivrs
cli
push
das
in
xlat
sahf
pop
jl
into
insl
add
cmp
inc
and
in
mov
test
xchg
shlb
inc
incl
movzbw
mov
bswap
call
sbb
adcb
movl
adc
cmp
adc
lds
lret
outsl
dec
jnp
int3
cmc
call
cmp
jae
cmc
ljmp
es
xor
subl
sub
sub
loop
test
xor
pop
jnp
loopne
adc
push
pop
repnz
daa
in
sbb
sbb
inc
cmpsl
je
iret
or
cltd
sub
push
xchg
outsl
xchg
cmc
pop
ljmp
in
ficoms
jb
cmp
mov
cmpsl
add
jmp
add
mov
outsb
hlt
adc
movl
movw
pushf
mov
lea
jmp
jmp
cmp
call
add
push
push
dec
outsl
je
data16
arpl
inc
add
inc
cmp
adc
test
icebp
push
jecxz
idivl
mulb
movsb
cli
jmp
jecxz
sub
adc
scas
clc
mov
test
xchg
sub
sub
aam
data16
ja
pop
test
mov
push
mov
cld
lahf
push
mov
in
icebp
loopne
int3
inc
add
sub
sub
outsl
sahf
and
enter
add
sub
icebp
or
mov
add
loop
sbb
test
rorl
mov
outsl
pop
jno
imul
and
test
xchg
stos
sbb
icebp
or
stos
pusha
std
aad
push
xchg
aad
push
lcall
popf
sbb
loope
push
out
and
andl
and
out
add
ss
addr16
jbe
sahf
faddl
out
jno
xchg
mov
into
outsl
cmp
cmp
or
sub
mov
jns
inc
lods
sbb
dec
sbb
dec
xchg
pop
push
add
cmpl
std
dec
repnz
mov
dec
dec
int3
mov
xor
cmpsb
imul
push
movsl
pop
movsl
mov
mov
daa
sbb
ljmp
push
xlat
sub
fwait
outsl
sti
test
in
mov
loopne
push
xchg
sbb
out
aas
xchg
imul
dec
dec
adc
lahf
icebp
pop
push
imul
into
push
mov
push
sub
push
clc
push
jae
push
push
cmpsl
dec
inc
test
fnstenv
lods
and
dec
and
popa
dec
fsts
lahf
stos
and
jle
das
push
sub
repz
adc
xchg
dec
aas
dec
cmp
bound
stos
std
out
add
cltd
mov
push
sbb
lods
inc
fwait
and
clc
mov
push
adc
mov
pop
cmp
call
mov
xor
add
aad
aaa
fadd
push
popa
in
push
ja
hlt
cli
xchg
or
jp
mov
pop
imul
or
and
repnz
les
out
adc
sub
push
push
js
jl
adc
or
xchg
mov
push
notl
pop
scas
cmp
jb
lods
into
cli
inc
loopne
dec
mov
mov
pop
dec
lret
xor
sbb
pop
not
stos
ja
in
add
in
jmp
adc
dec
fmul
cli
lcall
outsl
add
popa
push
out
mov
enter
jp
sub
adc
test
adc
sahf
xchg
jns
std
inc
cmpsl
addr16
cmpsb
shrb
cmp
cs
xchg
repnz
je
insl
shll
lods
or
andl
test
or
dec
loope
cs
push
xchg
pop
sub
push
movsb
mov
test
cmc
lcall
out
lcall
mov
enter
cmp
in
call
call
sub
mov
lahf
lock
imul
jae
hlt
sub
push
fists
out
mov
cmp
push
inc
jae
jmp
lcall
inc
push
jno
testl
cmp
bound
adc
gs
inc
mov
lds
nop
icebp
mov
mov
push
sbb
into
push
test
sar
push
mov
add
jge
and
bt
cmc
jmp
mov
sbbb
sub
jle
imul
push
add
aaa
filds
push
shl
cmpsb
mov
les
fnstcw
pop
stc
inc
js
mov
dec
mov
data16
pushf
loop
enter
je
pushf
adc
icebp
sub
adc
pop
inc
and
cmp
mov
and
inc
mov
inc
js
xor
jne
in
test
pushf
out
out
mov
stc
shrl
repz
dec
inc
cmp
cltd
scas
icebp
dec
and
es
push
adc
cwtl
and
xlat
fldt
jne
sub
cwtl
test
pop
flds
int3
lcall
lods
cmp
fsts
inc
daa
mov
aad
mov
mov
lods
and
ret
xchg
fcomps
adc
push
and
clc
ljmp
mov
adc
cwtl
sub
inc
xchg
add
in
mov
adc
les
pop
stos
repnz
push
adc
fildl
adc
sbbl
xchg
divl
int
mov
inc
pop
mov
inc
cmp
pushf
dec
out
add
xchg
clc
test
int3
nop
mov
cli
imul
mov
push
test
add
or
adc
jle
out
add
aam
sub
mov
imulb
and
scas
das
cmp
or
dec
scas
jmp
push
inc
cmpsl
cmp
sbb
jl
jnp
ret
mov
push
adc
adc
dec
add
sahf
mov
cmp
push
stos
jno
mov
push
cmpl
stc
bt
jmp
movb
mov
pushf
lea
jmp
shrd
mov
push
cmc
mov
pusha
add
pusha
jmp
mov
jmp
mov
mov
push
movb
pushl
pushf
popl
push
pushl
popl
pushl
mov
pushf
pushl
lea
jmp
mov
push
call
mov
pushl
jmp
pushf
popl
call
push
call
mov
mov
push
pushf
mov
pushl
ret
add
pushf
mov
pushf
push
pushf
lea
jmp
aas
mov
push
test
pushf
sub
test
add
jmp
call
not
inc
and
add
mov
test
mov
jmp
mov
movw
jmp
pushl
popl
mov
pushf
pushf
movw
lea
jmp
mov
movb
pushf
lea
jmp
setne
mov
bsf
neg
add
cmc
rol
btc
test
neg
push
jmp
mov
pushf
push
push
mov
jmp
pushl
popl
pushf
mov
pushf
lea
jmp
pushl
popl
mov
mov
pushf
lea
jmp
ror
mov
cmc
clc
stc
mov
pusha
call
call
cwtl
push
sub
movb
mov
mov
pushf
movl
lea
jmp
call
pushl
call
mov
push
mov
push
pushf
pushl
popl
push
mov
mov
mov
lea
jmp
pushf
cmp
add
mov
jmp
setnp
stc
pusha
xor
mov
jmp
pushf
pushl
popl
mov
lea
jmp
cmp
sub
movb
mov
pushf
pushl
pushl
pushf
lea
jmp
pusha
mov
pushl
lea
jmp
shl
not
mov
stc
cmp
bt
push
add
mov
movb
pusha
mov
lea
jmp
jmp
stc
pusha
test
pushf
xchg
cmp
jmp
movb
pushf
popl
mov
pushl
mov
pushl
mov
push
jmp
push
stc
shr
pusha
mov
call
push
pushf
inc
pusha
add
stc
stc
bt
mov
mov
sub
pushf
push
call
rcr
shl
and
pusha
mov
pushl
bsf
mov
pushf
pushl
call
pushf
push
jmp
lea
jo
push
pushf
popl
push
pushl
mov
jmp
push
mov
jmp
jmp
pushl
popl
movb
lea
jmp
jmp
xchg
push
test
movb
xor
test
jmp
mov
push
mov
push
lea
jmp
sub
not
movsbl
mov
lea
not
pushf
lea
movzbl
bswap
push
cld
jmp
pushl
pushf
popl
pushf
pushf
pushf
pushl
popl
push
mov
lea
jmp
mov
push
pushl
popl
push
lea
jmp
lea
jae
inc
pusha
bt
pusha
pushl
add
jmp
mov
mov
mov
mov
call
pushf
popl
pushf
mov
push
pushf
mov
movl
movw
call
jmp
mov
jmp
mov
pushf
mov
pusha
pushl
ret
mov
mov
pushf
jmp
jmp
call
mov
push
jmp
rol
test
mov
jmp
test
stc
xchg
bt
push
xor
bt
stc
lea
bt
clc
cmp
xchg
test
push
movb
pushl
xor
lea
jb
xchg
clc
xor
test
cwtl
call
movw
jmp
rcl
stc
sar
mov
dec
bswap
stc
clc
mov
pushf
pushl
clc
add
pusha
call
mov
jmp
das
push
notl
bsr
add
mov
movb
test
mov
test
sub
bt
pusha
test
and
pusha
mov
movb
pushf
popl
call
jmp
mov
pushf
pushf
push
pushl
lea
jmp
push
mov
mov
jmp
mov
pushf
call
lahf
movzbw
not
mov
push
pusha
mov
pusha
jmp
test
sub
pusha
bt
add
jmp
clc
mov
cmp
sub
movw
lea
js
pushf
mov
pusha
movb
movb
lea
jmp
mov
mov
pushf
lea
jbe
pusha
push
mov
movb
mov
pushl
pushf
push
pushf
lea
jmp
pusha
pusha
movb
mov
mov
movb
movb
mov
pushf
pushf
mov
jmp
ror
mov
jmp
pusha
jmp
stc
mov
sub
jmp
pushl
mov
movl
lea
jmp
mov
jmp
pushf
add
cmp
clc
mov
stc
or
push
pushf
call
neg
mov
inc
dec
neg
mov
cmc
cmp
bt
add
pusha
lea
jns
shld
pushf
push
mov
pusha
pushf
popl
pusha
movw
lea
jb
popl
pusha
pusha
lea
jmp
xchg
cmc
xor
cmc
pusha
movw
xchg
movw
xor
pushl
cmc
cmc
xchg
cmc
pushf
cmp
pushf
lea
mov
xor
call
call
mov
pushf
pushl
popl
pushl
pushf
lea
jmp
mov
call
mov
mul
pushf
pushl
pushf
pushf
mov
lea
jae
push
mov
pushf
mov
mov
jmp
pushl
movb
mov
movb
mov
pushf
pushf
mov
pushf
pushf
pushf
mov
push
mov
mov
pushf
pushl
jmp
sub
pushl
mov
pushl
shr
movb
mov
pushf
pushl
push
pushf
popl
mov
pushl
popl
mov
mov
pushl
lea
jmp
movw
jmp
pushf
push
mov
pusha
pushl
movb
mov
pushf
push
mov
jmp
mov
call
mov
pusha
ror
movsbw
xor
pushf
call
push
push
sub
cmc
bt
add
pushf
pushl
pushf
popl
pushf
jmp
jmp
mov
pushl
popl
mov
push
mov
pushf
lea
jmp
push
mov
jmp
jmp
lea
push
stc
bt
stc
rol
pushf
push
not
movb
bswap
bt
xor
cmc
sub
pushf
jmp
pusha
mov
mov
lea
jmp
clc
movb
mov
lea
jnp
cmc
sub
jmp
cmp
call
xchg
pushf
xor
pushf
bt
call
movb
pusha
pusha
mov
pushf
movb
lea
jmp
cmc
sub
call
mov
movb
mov
mov
pushf
jmp
call
pushf
call
mov
call
pusha
mov
call
or
cmc
bt
xor
push
jmp
lea
je
pushf
sub
test
cmp
xchg
call
mov
pushf
pusha
movb
pushf
popl
pusha
pushf
movb
lea
jo
push
pusha
pusha
mov
call
call
jmp
cmp
add
pushf
mov
movw
lea
jmp
mov
mov
movb
pushf
lea
jae
pushf
jb
push
pusha
pusha
pushl
popl
pushf
push
mov
lea
jmp
push
mov
jmp
jmp
rcl
bsf
cwtl
mov
jmp
pushf
movw
mov
jmp
bt
mov
jmp
pushf
popl
mov
pusha
pushl
popl
push
lea
jmp
pushl
popl
movb
push
mov
pushf
lea
jmp
stc
jle
pusha
add
mov
mov
pushf
pushf
lea
jmp
mov
pushf
movb
pushf
lea
jmp
mov
pushf
mov
pushf
call
call
call
call
mov
mov
movb
jmp
mov
pusha
mov
xchg
mov
movsbw
not
lea
pushf
popl
pushl
push
bswap
pushf
mov
not
xchg
call
aam
jmp
mov
mov
push
movb
lea
jmp
mov
dec
bt
stc
stc
sub
pushf
jmp
call
pushl
popl
mov
push
movb
lea
jmp
shrd
shld
bsr
mov
stc
cmc
call
jmp
pusha
mov
call
mov
cmc
clc
push
sub
movb
jmp
bt
test
mov
jae
and
push
mov
test
not
pushf
not
stc
cmp
pushf
and
push
mov
jmp
call
mov
pushl
pushf
jmp
pushl
jmp
jmp
mov
call
stc
mov
cmp
test
cmc
sub
pusha
mov
pushl
movb
mov
push
lea
jmp
jmp
mov
push
call
pusha
pushf
popl
pusha
mov
call
pushl
popl
pusha
lea
jmp
mov
pushf
popl
call
jmp
call
call
pushf
pushl
mov
pushf
jmp
push
xor
stc
cwtl
cmp
sub
push
mov
movb
movb
lea
jmp
bt
add
jmp
push
jmp
push
jmp
pushf
popl
call
sbb
mov
mov
push
pushf
cmp
sub
mov
shl
pushf
jmp
pushf
mov
pushf
mov
pushf
pushf
lea
jmp
pushf
pushf
push
mov
lea
jg
push
mov
jmp
push
pushl
popl
pushf
mov
lea
jmp
mov
push
push
push
mov
lea
jmp
call
pushf
push
mov
call
mov
pusha
push
movw
mov
pusha
movw
jmp
push
push
mov
pushf
pushl
lea
jns
push
mov
call
aam
mov
sar
clc
neg
mov
cmc
clc
stc
stc
add
push
pusha
pusha
mov
pushf
push
pushf
movb
lea
jmp
mov
mov
jmp
mov
movb
pushf
push
lea
jmp
mov
call
pusha
mov
pushf
pushf
popl
pushl
jmp
pushf
pusha
xchg
mov
pop
not
mov
not
mov
pushf
pushl
ret
pushf
mov
pop
lea
dec
xchg
dec
pushl
popl
lea
bswap
jmp
mov
push
clc
pusha
add
clc
movb
pushf
call
pushf
popl
pushf
movb
push
mov
pushl
popl
push
lea
jmp
stc
test
shld
call
mov
cwtl
mov
bswap
mov
push
pushf
call
pushf
push
mov
call
cmp
not
clc
pushf
bt
cmp
add
jmp
mov
pusha
pushl
popl
push
lea
jmp
inc
movl
jmp
shrd
mov
bsf
bt
sbb
clc
add
shld
sub
bts
jge
mov
cmc
call
push
mov
pusha
call
push
movb
pushf
pushl
popl
pushl
pushf
pushf
pusha
lea
jmp
setae
rdtsc
movsbw
bswap
mov
jmp
mov
pushf
push
push
lea
jmp
call
push
call
mov
call
pushl
pushf
pushl
popl
pushl
lea
jmp
dec
mov
jmp
cmp
setbe
add
mov
clc
stc
bt
bt
sub
push
push
pusha
jmp
mov
lea
je
push
mov
mov
pushf
popl
push
call
pushf
popl
jmp
mov
call
pushf
mov
jmp
pushf
pushl
popl
push
lea
jmp
call
stc
add
pushf
mov
mov
push
lea
jmp
pushf
mov
call
jmp
call
call
push
pushl
mov
mov
call
mov
mov
jmp
pushf
xor
call
call
jmp
mov
pusha
pushl
push
push
lea
jmp
jb
pusha
pushf
popl
call
jmp
movb
jmp
jmp
lea
jg
push
pushf
pusha
push
pushf
popl
mov
movw
mov
jmp
xchg
pusha
test
mov
shl
add
dec
test
mov
push
clc
pushf
cmc
sub
bt
shl
movb
mov
mov
jmp
lea
jno
pushf
jmp
push
pushl
call
and
movzbl
shrd
push
btr
sub
bswap
pop
mov
push
dec
jmp
jmp
mov
mov
pushf
push
mov
mov
push
jmp
mov
movw
dec
push
stc
cmc
call
mov
movw
pushf
push
call
pusha
pushf
popl
jmp
addr16
fcom
jne
fsubrs
pop
mov
lcall
fdivs
jbe
fdiv
jae
fcoms
pop
add
fdivs
jbe
fcomps
imul
fcoms
movsb
outsl
mov
pop
in
xchg
jnp
fmuls
arpl
fdivs
jbe
fcoms
push
cmp
fdivr
addr16
iret
pop
icebp
arpl
fcoms
pop
and
fdivrs
push
addr16
fdivs
fsubs
in
aam
mov
push
push
add
fsubs
cmp
fdivs
cmp
fdivs
pop
imul
xchg
imul
fcomps
push
ljmp
fists
fdivs
fsubrs
jae
fdivs
fcomps
imul
fdivrs
dec
fs
test
daa
pop
cld
addr16
cmp
fdivrs
jbe
fdivr
insb
push
push
std
in
push
in
push
in
push
in
push
rcll
fcoms
adc
fsubr
push
shrl
fsubrs
insb
jle
in
push
in
push
in
push
std
shrl
fsubrs
push
fmuls
jb
mov
jb
aam
push
xchg
imul
fdivrs
mov
shrl
fdivrs
aaa
push
mov
mov
mov
mov
xchg
fmuls
adc
fmuls
daa
pop
dec
push
aaa
push
mov
mov
mov
icebp
arpl
fmuls
cmc
jae
fdivs
dec
ss
dec
fs
addr16
fcoms
outsl
ljmp
pop
imul
mov
fdivs
push
cmp
fdivs
jbe
fcoms
jo
fdivs
jbe
fdivs
fmuls
addr16
push
jb
fcomps
fists
fcoms
ja
fsubs
jne
fmuls
addr16
and
jnp
fdivs
push
dec
push
xchg
fadds
cmp
fsub
push
pop
imul
test
fdivr
push
and
arpl
fsubs
pop
jae
fcoml
fcomp
push
dec
fs
test
fsub
push
jle
ljmp
fdiv
arpl
fcomp
push
popf
jo
fdivs
push
push
mov
fmuls
dec
fists
fcoms
insb
popf
jo
fsubs
pop
mov
jb
fdivs
dec
test
fdivr
mov
push
jb
fmuls
addr16
mov
fcoms
imul
fcom
outsb
jb
mov
fsubr
push
in
push
in
push
in
push
add
fdivs
fcom
pop
in
push
test
jle
mov
arpl
fsubr
push
in
push
in
push
ss
fcom
push
jle
dec
arpl
fmuls
push
cmp
fdivs
dec
stos
dec
ss
xor
ja
fdivr
addr16
ss
fcoms
jno
fsubs
fs
mov
mov
mov
cmp
fcoms
insb
and
fmuls
addr16
fsubs
mov
mov
mov
popf
jo
fcoms
jno
fadds
dec
or
fmuls
push
push
xchg
fcomps
aad
shr
push
jmp
stc
bt
clc
add
call
mov
pusha
not
push
push
mov
not
push
cmc
sub
cmc
and
push
call
lea
cmp
sub
push
stc
lea
lea
sub
shl
lea
or
mov
add
btr
sbb
add
jmp
cld
mov
bswap
push
lea
std
movb
call
pusha
pushf
movb
mov
jmp
pushl
popl
pushf
lea
jmp
mov
pusha
jmp
lea
jne
push
std
pushf
not
mov
jmp
push
call
call
pushf
push
jmp
mov
push
pusha
pushl
movb
lea
jmp
push
jmp
push
pushf
pushf
movb
pushf
popl
pushl
call
divl
pushf
call
mov
mov
pushf
movb
call
movw
call
pushl
call
cmp
dec
mov
test
pushf
clc
call
call
pushf
call
sub
pop
aam
lea
lea
dec
bsf
and
call
jmp
mov
push
pushl
pushf
mov
call
pushf
jmp
mov
lea
jno
pusha
pusha
push
mov
jmp
movw
push
mov
pushf
mov
pushf
pushf
jmp
pushl
pushl
popl
pushf
push
pushf
pushf
lea
jmp
cmc
cmc
sub
push
xchg
mov
jmp
push
pusha
jmp
pushf
mov
mov
mov
pushf
popl
pushf
mov
movw
pushl
popl
push
pusha
pushf
lea
jmp
rcl
and
mov
pusha
cmp
sub
mov
jmp
jmp
mov
call
push
jmp
lea
jns
pusha
mov
movb
mov
pushf
mov
pusha
mov
pushf
mov
call
rcl
aas
bsr
mov
push
mov
inc
rol
mov
pushf
add
cmp
pusha
bt
shrd
jmp
pusha
jmp
bt
lea
jmp
jmp
not
cmc
ror
stc
rol
and
xor
stc
sub
shrd
and
cmc
or
add
shld
mov
push
bt
test
sub
mov
pushf
mov
call
jmp
pushf
pushl
jmp
pusha
pushf
mov
movw
pushf
pusha
push
mov
pushf
pushf
mov
lea
jbe
push
jmp
call
mov
jmp
push
jmp
pushf
mov
jmp
mov
jmp
inc
ror
bt
bts
sub
bsf
movzbw
mov
cmc
add
mov
mov
movb
pushl
lea
jmp
mov
pusha
call
pushf
popl
jmp
push
call
pushf
pushf
rep
mov
mov
mov
or
mov
call
mov
pusha
jmp
jmp
dec
mov
add
btr
btc
mov
bt
pushf
bt
add
call
pusha
call
pushl
mov
push
lea
jmp
pushl
pushl
pushl
popl
pushf
lea
jmp
add
push
pusha
pusha
mov
lea
jmp
lea
jne
call
movzbw
mov
lea
movsbw
mov
pushf
movb
push
pusha
lea
movw
mov
push
pushf
pushf
lea
jmp
pusha
pushf
popl
pushf
pushl
popl
pushf
pushf
lea
jmp
mov
clc
call
jmp
jmp
pushf
push
mov
lea
jno
pushf
movb
push
mov
pusha
mov
call
movb
pushf
popl
jmp
jmp
pushf
call
jmp
mov
pushf
push
pushl
push
lea
jmp
call
movb
pushf
popl
call
sete
pusha
mov
movb
jmp
mov
pusha
pusha
mov
call
rcl
neg
neg
movsbw
mov
clc
pushf
cmp
add
movb
pushl
lea
jmp
pusha
dec
stc
stc
test
not
movb
add
stc
bt
cmc
mov
sub
test
call
cmp
mov
call
lea
jne
pushf
clc
setnp
xorb
lea
not
bswap
pop
pushf
pushf
pushf
pushf
lea
jmp
jmp
jmp
mov
push
rcl
mov
test
add
pushl
mov
push
pushl
pusha
pushf
lea
jmp
push
pushf
movl
mov
pushf
lea
jmp
pusha
mov
push
pusha
pushf
pushl
mov
push
mov
movw
lea
jmp
and
xadd
sar
setl
mov
push
call
test
stc
pushl
popf
movw
movb
pushf
pushf
lea
jmp
call
call
lea
push
jmp
clc
add
pusha
movb
pusha
pushf
lea
jmp
pusha
mov
dec
push
pushf
pushf
pushf
mov
pushl
movb
lea
jmp
pushf
add
neg
mov
rcr
ror
bsf
and
sub
mov
dec
sar
sar
movzbw
xor
pushf
neg
setbe
sub
shld
add
shl
shld
shrd
bswap
movzbl
clc
shld
movzbw
mov
push
sub
push
call
mov
push
mov
pushf
pushf
pushl
mov
pusha
movb
lea
jmp
mov
pushf
mov
movb
call
rcl
ror
mov
test
jmp
mov
pushf
call
mov
pushf
pusha
pushf
call
not
push
push
pusha
and
call
push
xchg
mov
call
movb
mov
movb
pushl
popl
mov
lea
jmp
push
mov
pushf
call
sub
aaa
rdtsc
push
clc
stc
sub
pushl
jmp
push
mov
call
pushl
popl
movw
lea
jmp
mov
jmp
mov
mov
pusha
pusha
jmp
pushf
popl
mov
pushf
pushl
popl
push
pushf
movb
lea
jmp
bswap
seto
inc
ror
shld
stc
xor
bts
lea
mov
dec
sbb
stc
sub
bt
mov
bsr
bswap
xadd
mov
movsbw
stc
call
decl
pushf
push
push
pushl
lea
jne
jmp
jmp
mov
mov
jmp
movb
mov
push
mov
pusha
pushf
jmp
stc
adc
movzbw
mov
jmp
mov
push
pusha
mov
movw
call
jne
pusha
mov
movw
movb
pusha
lea
jmp
pusha
push
div
movw
mov
pushf
jmp
mov
push
call
call
pushf
pushl
popl
pushf
pushf
mov
lea
jmp
movsbw
rcl
ror
not
sbb
pusha
cmp
bswap
add
shl
sub
sar
pusha
movzbl
jmp
pop
mov
jmp
pushf
mov
mov
jmp
cmp
cmc
call
push
jmp
mov
jmp
bsr
movzbw
shl
mov
push
rcl
add
call
mov
call
movsbl
pusha
call
jmp
sub
call
pushf
call
jmp
pushf
mov
mov
jmp
push
pushl
popl
push
pushl
movb
movb
lea
jmp
mov
pushf
lea
jmp
pushf
test
sub
call
call
mov
jmp
das
or
setbe
daa
mov
add
sar
rcl
pop
sub
pop
rcr
lahf
adc
pusha
mov
ror
and
sub
mov
rcl
mov
aad
pop
movzbw
das
mov
jmp
pushf
bt
setno
mov
call
bt
stc
mov
test
clc
bt
test
bswap
clc
cmp
pushf
xor
mov
pusha
jmp
lea
jne
stc
push
xor
shl
mov
mov
stc
clc
test
and
cmp
cmp
movb
pushf
jmp
call
pushf
cmp
movb
add
pusha
pushf
movb
lea
jmp
push
pushf
xchg
pushl
call
pushf
jmp
xor
pushf
mov
stc
cmc
add
pushf
movl
lea
jmp
ror
add
mov
rcr
sub
movzbw
call
pushf
mov
push
pushf
lea
jmp
mov
push
mov
pushf
mov
jmp
pusha
pushf
add
mov
pushf
movl
lea
jmp
mov
pushf
pusha
pushf
call
movb
pushf
popl
movl
pushl
popl
push
push
pushf
pushf
lea
jmp
mov
mov
movl
mov
pusha
call
push
call
mov
pushf
call
neg
shr
jmp
call
mov
pushf
lea
jmp
movb
mov
call
call
movb
pushl
popl
pushf
push
push
lea
jmp
xor
jmp
lea
jne
clc
jmp
pusha
pushf
mov
movw
push
lea
jmp
push
call
mov
pushf
pushf
mov
jmp
stc
test
rcl
pushl
popf
setg
movsbw
lea
jnp
pop
call
pushf
popl
pushf
jmp
mov
mov
pushf
popl
call
pushl
popl
cmc
push
cmc
add
cld
pushl
popf
movb
lea
jmp
mov
call
push
push
jmp
cmp
mov
test
push
mov
stc
add
jmp
push
push
mov
pushl
mov
pushf
cld
jmp
mov
call
movw
mov
pushf
call
jmp
mov
movw
push
jmp
push
jmp
pushf
mov
add
jb
mov
clc
sub
cmc
clc
test
shl
pushf
mov
mov
pushf
popl
jmp
pusha
call
mov
pusha
lea
jmp
lea
jp
popl
pusha
pusha
mov
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
xor
mov
pushf
jmp
shld
rol
test
mov
bts
shl
shl
adc
mov
jmp
mov
pusha
pusha
mov
lea
jmp
call
pushf
mov
jmp
call
rep
cld
not
lea
bsf
mov
clc
pushl
shrd
mov
movw
pushf
pushf
cmp
pushl
popf
mov
movb
lea
jmp
pushl
popl
mov
pushf
lea
jmp
movb
mov
pushl
pushf
jmp
shr
mov
or
bt
sub
call
jmp
or
mov
call
pushf
mov
pushf
mov
pusha
pushf
lea
jmp
bswap
movzww
bt
jns
xchg
jo
xor
jmp
setno
mov
stc
test
push
not
jmp
pushl
popl
movl
lea
jmp
pushl
popl
movb
lea
jmp
jo
stc
xor
jmp
call
jmp
rol
movb
cmp
neg
clc
sub
movb
call
mov
pushf
mov
pushf
mov
pushl
pushl
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
push
jmp
pusha
pushl
mov
call
clc
test
add
jmp
mov
call
mov
pushl
push
jmp
pusha
pusha
push
mov
push
mov
lea
jbe
pushf
push
pusha
mov
pusha
mov
push
jmp
sub
pusha
jmp
pushl
movb
pushf
popl
call
dec
mov
mov
clc
push
add
pusha
lea
jmp
pushf
jmp
jmp
call
call
pusha
pushf
mov
push
pushl
popl
movw
lea
jmp
cbtw
bt
stc
bt
jmp
pusha
mov
push
movb
call
rol
not
mov
rcl
sub
clc
sub
shld
sub
shl
rol
add
call
pushf
pushf
pushl
popl
push
lea
jmp
cmp
add
call
mov
mov
mov
jmp
pushf
mov
mov
pusha
jmp
stc
movsbw
rol
mov
movzbw
call
jmp
cld
cld
call
push
pushl
popl
pushl
lea
jmp
push
mov
movsbw
setnp
mov
xchg
movsbw
mov
bswap
mov
push
push
push
pushf
pushl
ret
pushf
call
jmp
pusha
mov
call
mov
bts
mov
shl
not
inc
mov
pusha
push
bt
sub
pushf
lea
jns
div
push
push
mov
push
mov
pusha
jmp
shrd
xor
sar
shrd
mov
cmp
jmp
pushf
mov
pushf
mov
pushl
lea
jb
pusha
push
mov
mov
push
pushf
pushf
popl
call
mov
push
mov
jmp
mov
jb
add
jmp
sbb
or
not
daa
mov
inc
dec
or
mov
stc
pusha
sub
bt
cmc
cmc
shl
pushf
pushf
jmp
cwtl
cmp
pushf
sub
jmp
test
add
jmp
jmp
mov
pushl
popl
push
lea
jmp
cmp
push
clc
cwtl
test
call
sub
xor
sub
bt
and
movsbw
cmc
movzbl
mov
push
pushf
add
mov
push
pushf
mov
pushf
pushf
movb
lea
jmp
pushf
cmp
shl
stc
test
shr
clc
or
pusha
push
xor
push
inc
movw
pushl
decl
call
call
call
jmp
pushl
popl
pushl
lea
jmp
call
pushf
movb
mov
pushf
jmp
movl
pusha
mov
pusha
pushl
push
mov
pushl
ret
mov
pushl
mov
mov
call
pushf
popl
movl
mov
jmp
lea
clc
test
bt
cmc
xchg
movw
push
xor
stc
xchg
mov
jmp
jmp
movw
mov
call
pushf
pop
jg
xchg
mov
sar
jmp
jmp
jmp
mov
call
jmp
movb
pushf
popl
pushl
jmp
jmp
pushf
mov
call
rcl
clc
mov
sub
add
mov
mov
jmp
jmp
jmp
push
movsbl
pusha
movzbl
mov
push
movsbl
lea
jb
bswap
jmp
mov
pushf
call
sub
jmp
jmp
xor
btc
bsf
bts
mov
bt
push
clc
clc
add
pusha
push
mov
lea
jmp
call
mov
jmp
add
pushf
pusha
pushl
pushf
lea
jmp
mov
mov
pushl
popl
pushf
movl
mov
pushf
lea
jmp
shr
mov
cmp
jo
stc
add
pushf
push
pushf
pushf
lea
jmp
pushf
pushf
mov
mov
movb
jmp
mov
call
rcl
jmp
pusha
pushl
mov
call
pushl
popl
pusha
lea
jmp
pushf
popl
pushf
mov
call
jmp
pushf
sub
jmp
pusha
mov
push
pushl
mov
push
pushf
call
add
pushf
lea
jle
push
pushf
mov
call
aaa
aam
pushf
inc
mov
stc
shl
jmp
call
mov
call
movsbw
mov
call
add
add
jmp
bswap
movsbw
rcr
mov
clc
mov
jmp
pusha
pushl
popl
push
movb
pushf
pushf
lea
jmp
call
movb
pushl
popl
movw
movb
lea
jmp
lea
jne
inc
rcr
not
bswap
sub
movsbw
mov
jmp
add
movb
mov
pusha
lea
jmp
mov
push
jmp
mov
sub
call
mov
jmp
rol
jmp
pushf
pushl
popl
pushl
pusha
pushf
lea
jmp
movb
mov
jmp
pushl
call
mov
jmp
bts
aad
lea
cmc
push
jmp
pusha
mov
pushf
push
lea
jmp
mov
call
jmp
jmp
mov
push
pushf
push
movb
pushf
popl
jmp
mov
movw
pushf
mov
pusha
pushf
movb
call
pushl
movb
pushf
mov
pusha
push
pushf
popl
jmp
call
call
movsbw
pushf
dec
test
sar
xor
add
movzbw
shr
neg
sar
xor
sub
inc
add
cmc
movzbl
call
clc
movb
call
mov
jmp
movl
cmp
shr
pusha
jmp
stc
shl
test
call
jmp
mov
call
pushl
popl
push
movb
lea
jmp
sub
pushf
mov
pushf
lea
jmp
call
jmp
inc
jmp
push
lea
ja
not
aam
bt
rdtsc
mov
lahf
test
adc
lea
call
sar
pushf
mov
cmc
pushf
jmp
pushf
pushf
popl
push
jmp
pushf
call
mov
call
movzbl
lahf
movzbl
push
sete
movsbw
mov
pushf
lea
cpuid
cmc
cmp
pusha
sub
cmp
pusha
cmc
test
cmpl
push
push
pushl
pushf
mov
jmp
push
pusha
pushf
mov
jmp
mov
jmp
push
jmp
mov
call
pusha
cmp
not
push
mov
cmc
cmp
xor
add
mov
pushf
bt
jmp
push
mov
push
lea
jmp
mov
sub
cmc
pushf
stc
pushl
sub
pushf
mov
mov
pushf
lea
jmp
xchg
xchg
jmp
push
xchg
mov
pusha
movl
push
movl
pushl
pushf
pushf
mov
mov
pushl
ret
mov
call
push
mov
mov
pushl
pushf
call
call
jmp
pushl
popl
mov
mov
mov
lea
jmp
mov
movb
call
jmp
pushf
stc
call
pushf
jmp
mov
jmp
setnp
inc
movzbl
xchg
xor
neg
mov
pushf
jmp
pushf
call
push
dec
call
pushf
popl
pushf
call
pushf
mov
push
jmp
