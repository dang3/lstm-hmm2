mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
mov
xor
hlt
dec
cmp
out
int3
mov
pop
add
pop
jbe
jecxz
ficomps
push
pextrw
xchg
mov
sub
mov
cmpsl
rorl
push
and
mov
idiv
into
pop
cwtl
add
and
adc
arpl
dec
call
dec
xor
pop
rorb
jns
fstl
lea
sub
aas
xor
shl
addl
mov
shll
xorb
test
xor
jl
sbb
sub
inc
cli
sbb
add
xorl
cs
je
mov
aad
push
mov
push
pop
cmp
out
jae,pn
mov
mov
popa
adc
in
popa
jecxz
in
mov
xchg
sbbl
or
xchg
inc
shll
insl
mov
stos
movsl
sarb
sbb
xor
loop
mov
loop
rcrb
cmp
stos
jb
mov
inc
pushf
mov
jp
aam
je
pop
repnz
clc
lret
outsb
xor
jge
mov
les
sbb
repz
xchg
icebp
out
cmp
mov
mov
xchg
mov
and
and
insb
test
cwtl
jge
xchg
jbe
imul
ret
fwait
hlt
or
aas
lods
or
adc
imul
pop
pusha
aas
cmp
inc
jne
xchg
xchg
mov
out
test
xor
pop
push
xor
sub
xchg
dec
pop
scas
cld
mov
jmp
shr
fsub
loopne
imul
or
xor
insl
popa
loop
scas
mov
adc
mov
fwait
mov
xchg
cmp
rcrb
icebp
mov
fiaddl
jb
xchg
push
fwait
aam
int
mov
mov
jns
imul
xchg
loope
or
cmpsb
xchg
push
mov
add
lret
mov
lea
cltd
pop
fsubl
lock
loopne
or
pop
shlb
pushf
add
jg
sahf
cmp
in
ds
inc
add
sbb
stc
and
fnstsw
push
out
jl
cmc
aam
xchg
and
inc
lea
inc
loopne
les
movsl
cmp
jbe
dec
xchg
mov
int3
scas
dec
out
sub
mov
aad
dec
test
cwtl
xlat
les
sbb
popf
pusha
jno
or
fcompl
push
pop
inc
idivl
pop
iret
std
hlt
inc
test
fwait
test
pop
bound
pop
sbb
sbb
xchg
or
cmp
jb
mov
dec
sbb
and
adc
bound
sub
mov
lock
mov
xor
fcomps
cmp
jp
mov
mov
mov
lods
adc
sub
cmp
push
dec
xor
repz
aam
adc
insl
repz
inc
push
in
repz
mov
and
fstps
scas
adc
movsb
ja
andl
addr16
lods
jnp
xchg
mov
sbb
adc
add
or
mov
push
or
in
insl
ret
icebp
fidivs
mov
jg
in
jns
cmp
pop
inc
ficoms
pop
faddl
bound
jge
jbe
addr16
filds
jnp
push
or
xchg
fisttps
es
imulw
cmpsl
loopne
fcoml
fcmovnb
pop
or
sbbb
movlps
cmc
sbb
jno
stos
pop
mov
xor
aam
jg
shrb
iret
test
hlt
mov
out
ss
inc
mov
jo
loopne
cmp
fistps
jo
push
pop
or
adc
loope
in
push
dec
fistpl
in
add
lea
cmp
push
pusha
das
mov
fmul
xor
ret
xchg
ja
lods
pop
sub
out
mov
dec
dec
out
sub
lea
icebp
cmpb
xor
xor
cltd
mov
ja
xlat
stos
mov
out
out
xchg
add
mov
inc
inc
xor
jge
fcmove
iret
movsb
cmc
sub
pop
mov
movsb
lock
iret
int3
clc
test
pop
xchg
dec
lret
inc
fwait
lret
data16
push
jb
ret
mov
loop
scas
and
pop
sbb
in
test
shrl
dec
icebp
sarb
pushf
mov
adc
icebp
fstp
scas
push
inc
sbb
das
jg
mov
add
sbb
xlat
fisubl
fnsetpm(287
mov
sbb
movsb
idiv
addr16
notl
fwait
inc
mov
dec
jl
xor
je
mov
dec
data16
cmp
jmp
xorb
xchg
dec
push
inc
wbinvd
add
mov
sub
aad
push
icebp
jg
xor
mov
lods
adc
stc
ss
nop
or
arpl
jmp
popf
enter
add
and
test
dec
adc
sti
xchg
sub
mov
lods
push
test
cmp
cmp
fmuls
xor
cltd
movsl
adc
pusha
hlt
daa
pop
pop
xor
imul
ffree
cld
mov
add
sar
mov
movsb
cmp
jl
ds
cmp
loop
clc
sbb
xor
jmp
aad
data16
fdivr
push
cwtl
and
lahf
fsts
out
mov
pushf
sub
fisubs
mov
fildl
rcll
lret
out
aaa
lea
sbb
and
fstp
sahf
fsts
add
xor
or
arpl
xchg
mov
sbb
out
je
or
clc
jne
repz
nop
push
jecxz
jecxz
hlt
pop
jne
mov
ret
mov
loop
or
fistpl
shlb
or
pop
adc
mov
xor
ficoml
xchg
les
das
into
xchg
scas
push
rcl
loopne
inc
push
mov
psrad
sub
cmpsb
sub
push
stos
sbb
or
pop
mov
xor
cs
and
or
test
xchg
jb
call
dec
inc
out
imul
push
sbb
mov
addb
lret
push
outsl
ljmp
popf
clc
sbb
push
inc
sbb
mov
test
stc
ljmp
inc
add
pop
or
cmp
mov
ja
shrl
cmp
std
scas
or
out
addr16
mov
std
popf
fmul
adc
les
fisttpl
pop
add
push
push
cmp
add
dec
rcrb
mov
and
or
push
cmpsl
mov
jecxz
pop
or
xor
push
mov
xchg
adc
insl
or
inc
cmpsl
pop
sbb
jl
in
jnp
and
adc
xlat
lcall
push
push
das
push
cmp
insb
cmc
lret
lock
and
sahf
scas
inc
mov
outsb
addr16
ds
pop
jge
pop
dec
out
or
push
idiv
rcl
repz
adc
pop
fwait
xor
pop
scas
lret
fcmovne
leave
adc
popa
adc
mov
scas
adc
jl
lret
jge
xchg
js
filds
cmpsl
aas
test
hlt
adc
hlt
out
xor
lcall
xor
jl
xchg
cmpsb
fsubs
jmp
dec
loop
lods
movsb
ret
shufps
scas
sti
jmp
sbb
mulb
push
sbb
cmp
inc
mov
dec
out
or
adc
or
stos
xchg
dec
jnp
leave
xchg
cmp
inc
insl
add
repz
pusha
or
fdiv
push
xchg
jnp
or
add
xchg
test
mov
aam
bound
ja
mov
push
xor
in
pop
or
leave
les
dec
test
mull
mov
inc
orb
pop
or
xlat
sbb
cmpsb
cld
pop
nop
in
orl
movsl
and
and
es
fistps
jle
inc
mov
js
jmp
sub
adc
sub
add
cmp
leave
popf
jae
in
dec
mov
clc
add
pop
and
clc
inc
addr16
xchg
ljmp
aas
add
arpl
mov
inc
data16
xor
pop
pusha
ficompl
add
lods
fsubs
mov
daa
jg
inc
imul
mov
dec
dec
stc
out
testb
xchg
jae
xor
xlat
jo
pop
xor
mov
xlat
inc
cmp
ljmp
in
sub
xlat
cld
loopne
push
or
aas
lret
gs
jbe
jae
out
pop
and
rclb
aad
jnp
stos
jnp
paddb
lcall
mov
sub
test
jb
outsl
in
cmp
xor
sub
cmp
sbb
sub
adc
ja
mov
mov
push
scas
fsub
pop
ret
jo
ja
fs
push
lret
push
insb
add
ds
insl
lock
mov
repz
or
jno
ds
or
mulps
enter
mov
push
xchg
imul
lods
and
enter
enter
pop
push
mov
outsb
ret
jnp
pop
sahf
mov
xchg
popf
sub
fimuls
int3
out
inc
addr16
sbb
push
fdivr
sub
dec
int
inc
cmc
nop
faddl
pop
popa
sbb
ret
lret
mov
jno
arpl
cmp
cli
sub
int3
test
push
sahf
ljmp
cmp
mov
rcr
inc
mov
push
loop
movaps
pushf
lcall
add
test
mov
psubd
mov
scas
out
jno
inc
xchg
clc
mov
loopne
test
fnsave
adc
jb
into
pop
imul
gs
add
push
jb
popa
test
sbb
sub
incb
jge
mov
sbb
shlb
les
push
stos
orb
mov
add
orb
mov
dec
dec
jo
sarl
test
enter
adc
push
jmp
insb
xchg
or
shl
into
mov
push
test
and
aaa
jno
pop
cmp
out
scas
idivl
rclb
xchg
mov
ret
inc
jle
cmp
imul
test
inc
enter
mov
popa
or
cs
xor
out
ds
in
lods
xor
push
addr16
lret
inc
fnstcw
inc
out
loope
outsb
sbb
dec
lcall
push
mov
pop
and
pop
pcmpgtd
or
mov
inc
or
les
psadbw
jge
adc
jae
in
int
add
call
pop
xlat
inc
sbb
test
aas
pusha
pop
pop
je
cwtl
nop
sub
and
mov
nop
xor
dec
fsts
pop
out
pushf
imul
add
push
mov
fmulp
addr16
jo
mov
out
mov
push
mov
add
dec
pusha
pop
jb
mov
xor
push
aam
lods
mov
pop
sahf
imulb
scas
xor
and
cld
out
daa
or
sbb
push
out
lret
pusha
outsl
inc
movsb
mull
xor
cmpsb
lret
and
imul
inc
dec
loope
aaa
lahf
mov
test
mov
or
fs
into
ret
or
xor
xlat
mov
mov
add
inc
das
imul
sub
test
or
loope
or
xchg
mov
in
jge
stos
push
jmp
mov
fbstp
mov
aas
fs
sahf
cltd
or
inc
in
inc
adc
fwait
rorb
add
arpl
mov
and
jo
jp
jmp
lret
inc
mov
add
in
pushl
xor
and
or
pop
fmull
and
dec
stc
mov
pusha
or
and
ja
fcoml
insl
xor
fwait
scas
fidivs
mov
lea
bound
or
push
iret
int
popf
mov
out
sbb
or
jnp
lods
cmpsb
decl
cmp
inc
jge
mov
dec
cli
xor
xor
add
mov
xorb
xchg
fadd
ret
sbb
sub
jle
add
in
push
sub
cmpsl
mov
testb
and
mov
popf
sbb
inc
icebp
dec
out
add
sbb
dec
shll
repz
test
pusha
in
lret
xor
clc
sub
mov
daa
std
inc
xchg
imul
cmp
xlat
xchg
sbb
cmp
push
jno
cli
shlb
cs
jmp
mov
pop
jno
sub
push
adc
and
lods
mov
gs
pop
pushf
pop
push
dec
cmp
shrb
jmp
leave
pop
mov
sub
or
mov
xchg
subb
ja
xchg
cmpsb
adc
push
and
out
add
popa
repnz
das
xchg
pop
lcall
gs
mov
jno
ja
out
std
jae
test
cld
rorb
aam
push
iret
pushf
icebp
imul
mov
jmp
iret
push
mov
nop
dec
adc
adc
adc
inc
fbld
ja
mov
xor
xchg
rcll
mov
or
jmp
lret
xchg
rol
xor
call
and
add
xor
inc
out
int
and
inc
pop
adc
adc
add
and
push
leave
enter
sarl
arpl
mov
out
aas
jl
in
push
rorb
nop
xchg
sub
in
or
data16
lcall
pop
shll
or
mov
stos
sub
outsl
adc
xchg
lods
lahf
inc
mov
and
sbb
mov
js
push
push
inc
inc
negl
aaa
or
test
mov
mov
lahf
in
fs
jnp
mov
arpl
mov
mov
dec
int
cmp
or
or
mov
add
push
in
cmpsb
and
jbe
int3
popa
sub
loopne
leave
cs
mov
loope
cmp
mov
pop
in
xor
mov
mov
dec
imul
fwait
pop
mov
adc
jo
sub
add
jg
push
iret
loopne
out
push
daa
jg
xor
cmp
iret
rorb
stos
sub
mov
jbe
push
adc
xchg
jmp
pop
mov
push
inc
in
push
mov
adc
push
pop
mov
mov
adc
loope
adc
jg
jb
imul
cmc
fsub
leave
cmp
call
out
mov
outsl
fbld
jp
xchg
xchg
inc
sbbb
and
out
subl
sar
sub
into
cmp
mov
cmp
jecxz
push
xchg
scas
pop
outsb
push
jmp
out
dec
ljmp
sbbl
jmp
dec
outsl
pop
repz
mov
xchg
adc
loope
mov
out
mov
data16
mov
and
out
and
jbe
inc
icebp
movsb
gs
push
jno
out
lds
stos
clc
xchg
pusha
imul
mov
movsb
push
negl
or
mov
mov
push
push
ja
push
and
loopnew
inc
leave
dec
inc
pop
fadd
push
orl
sbb
mov
int3
mov
push
xchg
leave
mov
cmpb
xchg
mov
mov
mov
jge
les
mov
cwtl
std
xchg
in
sarl
or
aaa
sbb
hlt
mov
mov
rolb
out
mov
xor
or
cwtl
jmp
out
imul
mov
mov
cli
mov
scas
arpl
mov
push
adc
and
jae
cmp
mov
fcmovnb
fstpt
dec
push
jmp
push
data16
jno
filds
fdivs
mov
inc
xor
andb
shll
gs
les
mov
loop
push
cmp
sub
lods
inc
xor
pop
adc
sbb
push
sub
inc
int3
jnp
pop
mov
ljmp
push
xor
mov
stos
fstl
push
imul
cmc
xchg
lahf
lahf
or
cmp
call
push
test
mov
mov
add
and
jns
idivb
ja
cmp
sbb
mov
push
scas
sub
in
xchg
jg
cmp
fcompl
sub
push
cmp
cmp
mov
ja
add
and
and
test
mov
test
add
pop
or
mov
test
rol
test
cmp
jnp
shrb
inc
inc
stos
mov
lret
sub
outsl
fldcw
test
dec
clc
inc
push
ljmp
test
lahf
inc
sbb
inc
jmp
adc
push
or
xchg
add
add
int3
pushf
bound
outsb
fidivs
orb
adc
mov
sub
or
popa
das
rolb
mov
mov
insl
xchg
insb
inc
adc
or
call
cld
les
int3
aad
test
push
dec
dec
push
inc
shrb
jge
int3
jb
cmpsl
push
inc
ja
or
imul
out
jle
leave
orb
or
push
icebp
dec
jb
cmpsb
add
or
inc
mov
or
lods
clc
outsb
les
jns
inc
xchg
gs
cmp
pushl
sub
cmp
mov
push
cmp
test
fmuls
cmp
lahf
inc
push
pop
shrl
pushf
mov
pop
fwait
cwtl
aad
pop
subl
mov
cltd
and
mov
or
mov
xor
popf
sub
shr
popf
push
daa
xor
sbb
sbb
pop
push
inc
in
cmp
imul
inc
jmp
or
jae
sbb
mov
shll
mov
and
sbb
int
cmp
mov
push
and
pop
mov
inc
dec
sub
mov
sub
cmp
iret
add
inc
xchg
iret
inc
cmpb
std
xchg
shrl
jbe
test
pop
je
add
add
xor
sahf
ds
sbb
popf
xchg
push
mov
mov
fsts
and
hlt
stos
leave
cmp
cmpsl
mov
hlt
mov
push
xor
and
push
sahf
cmp
aaa
fisubl
jo
sbbb
xor
insb
fistps
mov
into
popf
test
ja
xor
jae
stos
movsb
lock
dec
lret
jle
dec
rcrl
divl
fcompl
cli
push
adcl
mov
jns
jno
rclb
push
outsl
icebp
mov
jge
test
insl
int
fldl
jne
les
adc
cli
addr16
and
push
push
out
pop
push
lret
sbb
or
cmpsl
cmpl
es
lcall
icebp
fsts
add
fiadds
adc
loop
pop
mov
loope
stc
and
das
ret
jb
push
mov
stos
shll
sub
imul
pop
mov
mov
scas
sub
jb
sti
cmc
add
adc
ret
push
pop
xchg
mov
imul
add
fisubrs
cmp
imul
xor
push
test
in
adc
inc
fidivs
negl
stos
mov
mov
test
mov
pop
scas
mov
sub
sbb
pop
js
xor
loope
fwait
mov
inc
xchg
testl
xchg
popf
xchg
pop
cmovg
iret
arpl
mov
pushf
data16
or
rcll
pop
inc
pop
push
xor
inc
pop
pop
sar
inc
dec
scas
fidivrl
popf
sub
ret
loope
jae
cltd
xchg
and
loop
sbb
je
lods
pop
pop
int3
sahf
mulb
inc
mov
into
lods
adc
test
ficoml
adc
jns
add
jg
mov
cmp
stc
push
adc
call
push
test
dec
addr16
mov
push
push
aad
shl
xor
popf
mov
push
lret
popf
sub
rcll
repnz
sub
pop
mov
mov
pushf
dec
sub
movsb
mov
xchg
cli
shrb
in
fnstenv
in
pop
inc
insl
int
jp
popa
js
leave
aad
rcr
addr16
mov
out
in
jl
jle
inc
ljmp
or
sahf
push
inc
mov
xor
jmp
ret
andl
cmp
enter
push
and
leave
aas
scas
xchg
mov
push
xor
mov
fstpt
and
push
xchg
adc
ret
cmpb
push
push
mov
sub
sbb
shll
pop
jle
xor
mov
push
out
ret
movsl
inc
bound
xchg
sbb
mov
out
dec
lahf
xchg
subb
xchg
icebp
mov
sub
mov
loopne
lcall
mov
out
xlat
outsl
loopne
leave
push
loope
out
cli
mov
add
cmpsb
fs
dec
jbe
scas
xchg
aaa
ret
cltd
dec
lahf
sub
pop
aaa
mov
xchg
rolb
outsl
stc
mov
inc
pop
push
mov
in
pop
cltd
jle
inc
loopne
ljmp
testb
fmull
dec
xor
push
jge
sbb
adc
fwait
xchg
push
lahf
cmp
cld
add
xchg
push
dec
fstpt
cld
imul
lods
jecxz
push
lret
roll
inc
int3
push
std
mov
and
lahf
mov
lods
xor
push
das
push
mov
out
adc
fldcw
adcl
adc
push
popf
mov
shlb
cltd
insb
popa
push
imul
aad
inc
mov
mov
sub
setno
cld
or
mov
lret
pusha
mov
rcrl
sub
sub
movsl
pop
addr16
sbb
push
insl
je
idiv
addr16
cwtl
jl
test
sbb
jbe
sahf
ja
lea
popf
cmc
add
add
cmp
sub
ljmp
popa
sahf
test
sub
aaa
push
out
fadds
cmc
lods
nop
shlb
lahf
cltd
stc
lds
gs
shll
sti
mov
popa
lret
cwtl
inc
mov
mov
fsts
adc
ret
mov
sub
clc
mov
sub
cmp
in
pop
lcall
fsubrs
pop
shlb
test
mov
leave
mov
aaa
sbb
sbb
push
and
scas
addr16
es
stos
loop
xchg
addl
pop
flds
roll
jb
sarb
lods
or
or
dec
and
mov
lds
pop
adc
decb
push
mov
xchg
cmp
and
mov
stos
mov
stc
or
mov
movsb
mov
outsb
pop
scas
mov
jge
jbe
push
mov
pop
fistpl
aaa
mov
and
jnp
fisubl
push
push
dec
xchg
cwtl
ss
xchg
adc
jno
or
dec
mull
xchg
lea
pop
jne
ret
aad
mov
hlt
mov
in
push
sub
andb
out
inc
pusha
cmp
xchg
sub
mov
mov
adc
push
sbb
outsl
or
loopne
mov
cld
stos
outsl
mov
inc
and
or
push
cmp
xor
outsl
jl
jl
or
ds
out
imulb
scas
aam
jg
insl
aaa
movsl
xor
stos
js
mov
inc
jmp
pushf
sub
mov
or
cltd
push
xor
mov
ljmp
jle
arpl
insl
out
rcrl
stos
popa
clc
cmc
mov
or
incl
ret
adc
xor
xlat
jo
roll
adcb
push
cmpsb
push
mov
mov
and
lret
cmp
jae
in
call
leave
in
dec
dec
jle
cmp
popa
inc
test
pop
lds
dec
jle
add
xor
jmp
sbb
mov
pop
push
es
fwait
ret
into
arpl
clc
sbb
out
push
ret
pop
jl
sti
hlt
movsl
mov
and
and
xorl
mov
and
dec
repz
daa
int
ss
pop
cli
pop
ds
or
cmpsl
std
inc
imul
add
and
sub
adc
cmp
jg
add
outsw
jmp
or
sbb
into
xor
sahf
lret
add
fadd
pop
and
adc
lahf
xchg
lret
push
lahf
sbb
fs
push
cmpb
std
pop
bound
sahf
iret
adc
push
xchg
fldenv
jae
add
pusha
aad
fdivs
test
stc
sbb
mov
sahf
cmc
push
insb
xlat
xchg
imul
xchg
mov
call
push
mov
mov
pop
push
mov
cmpsb
inc
sub
mov
pop
xchg
subb
mov
rorb
jl
andl
sahf
inc
add
imul
cwtl
jne
popa
icebp
rep
mov
sbb
cli
out
loopne
sbbl
loop
jg
adc
mov
jmp
mov
mov
fbstp
pop
mov
push
add
jmp
adc
push
pop
ljmp
pop
inc
inc
popf
adc
xor
dec
cld
jp
icebp
movsl
repnz
pop
rolb
cmp
mov
lret
or
push
pop
pushf
and
xor
pop
pop
rclb
sahf
xor
push
push
sub
add
jl
push
sbb
stos
add
js
lret
lcall
dec
movsl
xchg
inc
or
push
adc
xor
pop
jp
sbb
and
mov
fdiv
aas
popa
add
aam
jmp
mov
jae
inc
lock
pop
mov
lea
dec
cld
in
in
aam
add
and
push
shlb
mov
xchg
add
fists
pop
push
pop
cmp
in
mov
scas
sub
lcall
add
jb
mov
loope
cmp
push
adc
mov
dec
outsl
dec
jae
adc
je
pop
add
jno
pop
sbb
testb
aaa
inc
aaa
pop
mov
sub
xchg
xlat
xor
push
es
mov
xchg
add
sub
xchg
push
ds
cmp
outsb
cmp
rol
cmc
inc
and
mov
jmp
sbb
jo
test
ljmp
mov
roll
sub
mov
adc
fiaddl
jb
ss
mov
push
mov
xchg
outsb
call
xor
and
lock
push
pop
lahf
xchg
or
xchg
pusha
pusha
pop
in
add
out
mov
lea
xchg
rolb
xchg
push
ds
fsubrs
andl
stos
in
jno
adc
inc
mov
out
mov
mov
xchg
adcb
imul
dec
mov
arpl
in
and
rclb
test
push
pop
lss
add
add
sub
cmpsl
fstpl
sub
xor
inc
adc
rclb
or
aad
xchg
mov
push
icebp
cmpsl
std
and
pop
xlat
or
pop
mov
jge
dec
or
jno
and
fstps
movb
cmp
xor
scas
bound
mov
fsubs
push
in
incb
jne
mov
das
xor
rcl
fldenv
pop
scas
lods
xor
mov
mov
inc
cs
and
ss
movsb
and
scas
shlb
mov
test
es
fdivrs
fwait
xchg
out
push
mov
inc
in
mov
push
js
test
mov
arpl
inc
push
adc
dec
popa
fldpi
adc
inc
ret
cwtl
clc
cmpsb
cs
incl
jmp
paddq
out
mov
push
in
pop
mov
dec
cmp
inc
pop
mov
sbb
dec
fistpll
inc
movaps
jb
jp
cmp
je
and
dec
and
cmpxchg
inc
push
jecxz
pop
sbb
cwtl
les
dec
stc
mov
movsw
ja
xor
cmpb
movsb
mov
cli
cmpsl
std
mov
stos
lret
sub
xchg
in
les
iret
xchg
les
incl
mov
sbb
push
in
aam
xorl
movsl
xchg
arpl
push
cmp
adc
dec
loop
adc
pop
dec
xchg
jno
or
inc
sti
testb
cmp
repnz
loope
adc
in
and
inc
ja
sub
es
test
pusha
mov
rcrl
and
sub
pop
popa
push
jmp
push
fcomps
mov
jnp
lcall
xor
push
mov
in
ffree
in
add
adc
jbe
inc
lods
addr16
shrl
push
enter
test
dec
mov
xchg
dec
sbb
mov
mov
mov
imul
mov
js
iret
mov
cmp
addr16
jecxz
mov
cmc
sub
mov
xor
out
pop
out
push
jne
xor
aas
repz
leave
push
push
mov
frstor
xchg
repz
xchg
xchg
jo
aas
lret
into
imul
js
xchg
aaa
mov
mov
or
cmp
popa
mov
lahf
adc
gs
sub
push
jmp
fdivs
and
mov
and
pop
xchg
xor
inc
and
dec
mov
add
pop
gs
aas
jle
jle
mov
mov
dec
add
mov
mov
mov
sbb
and
lret
jmp
dec
push
aam
insl
xor
data16
sub
and
cmc
adc
sbb
sti
add
adc
pop
mov
xchg
outsb
push
pushf
nop
cmc
clc
sub
push
or
lods
clc
fcomi
mov
inc
in
push
pop
mov
xchg
cmpl
jge
mov
aaa
pop
sub
cltd
mov
sahf
adc
mov
outsl
push
adc
pusha
dec
jae
jo
jmp
xchg
jo
adc
aas
xor
push
mov
sarb
mov
mov
imul
cld
divb
mov
mov
mov
cwtl
out
call
pop
jp
aas
popf
daa
mov
inc
xor
lods
cmc
jl
and
call
fwait
test
add
mov
mov
orl
das
cmp
dec
enter
or
in
jg
fsubs
push
das
sbb
out
test
sbb
lret
das
call
mov
add
divb
fs
imul
movsb
push
int3
push
mov
jmp
jb
jg
sub
out
shll
adc
jle
push
or
jns
push
jbe
mov
inc
rorl
sahf
push
das
sahf
pop
jmp
adc
int3
push
psubw
shrb
mov
xor
or
jmp
mov
jp
mov
xor
add
jnp
in
push
lock
jo
sub
mov
aas
arpl
sbbb
sub
repnz
adc
adc
cmc
mov
or
cmp
or
push
aas
and
jge
rclb
daa
lahf
mov
in
bound
sub
jnp
push
mov
xchg
inc
xchg
mov
lea
xor
inc
inc
fwait
enter
dec
mov
xchg
sbb
mov
add
jno
add
or
mov
inc
es
jg
dec
pop
push
lds
mov
fcoms
scas
nop
mov
push
lret
pop
jmp
lret
cmpsl
inc
push
je
cwtl
rep
dec
add
std
mov
in
inc
clc
repnz
mov
inc
xor
pushf
mov
sbb
pop
stos
adc
adc
pop
mov
jmp
out
lods
or
test
adc
add
adc
aas
das
jmp
rcr
adc
mov
aad
add
jg
jl
sub
addl
or
pop
dec
shrl
pop
sub
push
push
mov
sub
nop
inc
mov
cmp
call
push
lahf
data16
aas
fdivs
out
and
pop
pop
orl
cli
push
cmp
xor
mov
sub
cmp
loopne
pusha
daa
mov
mov
and
std
iret
adc
jp
mov
popf
dec
mov
xor
mov
push
stc
test
xchg
cmp
or
add
inc
scas
ffreep
rcl
mov
test
js
push
adc
mov
ret
mov
sbb
mov
test
jae
adc
scas
test
jnp
push
pushf
push
mov
inc
adc
and
cmp
rcl
adc
std
xchg
popf
negb
cmc
or
push
in
dec
xor
test
ja
dec
test
jge
pop
leave
test
jg
add
inc
not
test
inc
rolb
jo
imul
pop
jecxz
inc
push
dec
enter
lods
bnd
out
bound
lcall
jo
nop
add
ss
je
mov
ret
lock
or
mov
dec
dec
lds
cmp
xchg
jae
popa
dec
es
andl
sbb
xlat
pop
stc
aas
dec
adc
jne
mov
adc
cmpsl
adc
inc
lret
iret
adc
push
jge
push
mov
fstl
enter
inc
xor
fwait
xchg
mov
xchg
xchg
inc
in
inc
jno
pop
or
xor
fstps
ret
push
xchg
or
fmull
add
inc
and
rolb
mov
lcall
loopne
std
sub
cs
jl
lea
jmp
or
sbb
lods
sarl
bound
jo
ret
test
add
ficompl
jnp
adc
xchg
push
xchg
orb
sub
rcrl
sahf
fmull
lret
test
and
xor
cld
stc
sub
dec
cmp
in
jnp
loopne
pusha
movl
and
and
pop
mov
cmp
push
xor
ret
dec
push
faddl
call
add
mov
pusha
andb
push
xor
adc
mov
xchg
testb
jno
jg
cld
arpl
cltd
jne
add
jecxz
shrl
push
in
pop
cli
push
xchg
fcmovnbe
sub
test
test
lahf
loopne
divl
cmp
inc
xchg
pop
pop
repnz
shll
lahf
jg,pn
push
dec
jo
add
push
test
in
pop
mov
pusha
push
pop
cmc
lcall
dec
add
sub
andl
scas
and
leave
cmp
imul
or
movb
adc
lahf
sub
xchg
mov
lds
cmp
pop
cmpsb
shlb
jecxz
iret
jb
rclb
add
pop
sub
outsb
out
dec
add
cli
xor
lret
rcl
push
jmp
fisubrl
cmp
push
les
cmp
adc
fistl
ret
add
fsubrs
adc
cmp
jmp
cli
adc
sbb
inc
sub
mov
xchg
mov
aas
jns
nop
enter
xchg
cmp
inc
push
inc
dec
aas
pusha
sbb
ljmp
jl
push
popf
mov
das
xor
jns
pop
inc
pop
out
call
stos
dec
and
aad
std
stos
inc
mov
or
out
repnz
aaa
inc
scas
xor
pop
fwait
and
out
pop
pop
ds
or
mov
cs
adc
enter
push
pushf
cltd
jo
dec
pop
jle
imul
sbb
mov
sub
inc
pushf
in
lret
mov
xor
and
cwtl
pop
mov
data16
mov
dec
cmp
dec
sub
mov
leave
aad
jns
mov
stos
sbb
inc
clc
jo
xchg
je
fsubp
cltd
test
pop
popa
mov
je
or
or
mov
and
or
insb
outsb
ret
xchg
adc
fidivl
jns
test
sub
sbb
xchg
bound
inc
xchg
push
xchg
sbb
mov
outsb
iret
adc
cld
sbb
inc
fdivl
pop
push
sbb
sbb
into
xlat
cwtl
and
push
fwait
jmp
movsl
cltd
push
push
inc
iret
nop
ret
mov
dec
adc
test
lds
aas
xor
sbb
mov
pop
inc
xor
cmp
dec
in
fstpt
mov
leave
mov
shll
mov
or
push
frstor
jl
add
mov
pop
and
ret
imul
stos
pop
fistpll
jg
cmpsb
mov
pop
or
testl
lds
pop
cmp
jb
inc
cmc
das
adc
inc
js
mov
int3
rcr
div
xor
pop
data16
xchg
shlb
fnstsw
fs
cmc
andl
jbe
addr16
loop
sbb
adc
cmc
mov
dec
mov
xchg
aam
dec
jne
scas
mov
ret
std
cltd
out
rorl
mov
fs
and
mov
sbb
rorb
cmp
inc
lods
or
lret
mov
popa
pop
sub
rol
aad
adc
mov
imul
shll
fbld
sahf
mov
push
fsub
insl
push
mov
in
jo
mov
mov
in
stos
insb
jnp
adc
and
xrelease
dec
cltd
xor
incl
out
inc
cmpsl
je
jge
lods
add
push
sbb
aas
sub
and
ja
pop
aad
inc
daa
xor
add
add
mov
stos
je,pn
pop
lret
dec
adc
sub
push
mov
sbb
out
inc
mov
lret
push
test
fnstcw
xor
in
vmovdqu
inc
or
adc
xor
mov
pop
jnp
add
sbb
pop
jmp
pop
repz
mov
push
daa
imul
das
fcomip
sub
mov
aaa
daa
addr16
push
popf
and
xchg
cltd
movb
mov
mov
jae
mov
sub
xor
lcall
pop
imul
pop
jbe
cltd
cld
adc
xchg
mov
sub
xor
lods
jmp
leave
insb
ffree
in
cld
push
ljmp
and
testl
clc
dec
mov
adc
mov
inc
sahf
mov
les
cli
ja
cs
jae
sub
dec
sbb
lea
or
loopne
jecxz
andl
mov
mov
sbb
imul
or
xchg
aaa
aam
lods
inc
inc
ret
jno
jbe
xor
roll
add
pop
inc
rcrb
mov
movb
popa
imul
ljmp
mov
dec
mov
cmpsb
call
xchg
ret
adc
hlt
nop
mov
xor
scas
and
dec
enter
lods
push
mov
das
cmpsl
xchg
pop
xchg
sbb
jecxz
jp
iret
shl
das
int3
add
aaa
or
out
inc
jg
push
into
or
xchg
xchg
and
dec
or
sub
aaa
mov
pop
add
pop
sub
mov
sbb
shr
and
inc
incl
imul
push
dec
mov
xor
or
mov
loopne
cmpb
pop
subl
repnz
and
sub
loopne
cmpsb
popa
cli
andb
loope
std
nop
push
fbld
jne
xchg
call
iret
xchg
adc
sti
dec
adc
sub
or
icebp
in
lahf
repz
mov
mov
icebp
pusha
ret
cli
xor
sahf
fnstcw
cmc
das
shlb
shrl
out
out
xchg
test
les
xchg
scas
jnp
sub
mov
cmp
stos
jns
std
jb
ja
popa
mov
and
jge
mov
int3
addr16
cmp
aaa
cmp
mov
push
int3
mov
adc
std
int
add
je
xchg
dec
repnz
and
and
inc
imul
ficomps
mov
mov
sbb
das
and
mov
jmp
outsb
jno
sub
into
or
mov
push
push
dec
clc
insl
cwtd
stos
aaa
xchg
push
mov
xorb
test
sbb
push
sar
mov
xchg
insl
jno
mov
push
jl
dec
sub
push
adcb
stos
lret
rorl
fbstp
dec
test
fwait
movsl
mov
and
in
xchg
rcl
jo
enter
mov
out
xor
in
jmp
test
shrl
sub
call
cmp
inc
push
sbb
xor
lahf
jb
test
jmp
pushf
dec
cld
nop
dec
pop
aaa
sub
cmc
pushf
test
aam
or
inc
dec
loopne
jnp
lock
add
clc
andl
into
in
movsl
icebp
out
leave
mov
mov
xchg
mov
outsb
pop
ds
mov
and
jg
pusha
and
popf
push
out
insb
cmp
inc
mov
cmp
xor
jmp
ret
imul
adcb
popa
popl
inc
xchg
push
push
test
sub
fs
xchg
sbb
rclb
mov
mov
or
fistpl
sbb
cld
jecxz
lods
push
add
xchg
rcrl
popf
add
and
nop
push
jecxz
shr
stc
fwait
hlt
icebp
lods
mov
mov
xor
sti
xlat
jle
imul
pcmpgtd
mov
mov
or
testl
das
and
xchg
in
lcall
mov
push
into
shll
stc
add
inc
xchg
fwait
in
push
hlt
sub
lret
adc
push
mov
cmp
mov
pop
enter
push
jg
xor
stc
push
movsb
nop
addr16
cli
les
nop
aam
insb
push
pushf
int
je
stos
lock
insb
fdiv
sbb
je
ljmp
mov
aam
add
ret
or
xor
fsubrl
xor
sbb
mov
sbb
xchg
jo
pop
inc
mov
mov
imul
pop
imulb
cmp
add
sub
or
inc
iret
mull
sbb
aam
fsubr
inc
sub
adc
inc
mov
cmpsb
gs
xchg
pop
arpl
inc
shll
out
loopne
jecxz
push
cmp
inc
cmp
dec
mov
insb
test
ja
inc
pcmpeqd
rclb
sti
cltd
stos
enter
mov
cmc
movsb
pop
add
ja
and
jg
leave
mov
aam
pop
nop
popf
test
sub
subl
adcl
xchg
sti
dec
outsb
push
pop
and
jge
dec
jecxz
ja
gs
outsl
movsl
loopne
out
enter
push
test
fldl
mov
lret
inc
arpl
stos
mov
lods
or
les
scas
clc
xor
stos
inc
out
xor
hlt
adc
ss
and
mov
out
dec
cmp
out
dec
fisubl
sub
shrl
or
mov
and
leave
dec
sub
xchg
xchg
mov
sub
jne
rcr
test
cltd
js,pn
sub
int3
jnp
push
popa
mov
aam
scas
stc
insl
stos
sbb
inc
sbb
and
lods
loop
fisttps
out
test
aaa
pop
scas
outsl
jle
xchg
pop
les
stos
in
les
xlat
inc
sub
or
lret
int
push
mov
xchg
popf
xchg
push
pop
scas
sbb
and
sbbl
xor
or
mov
int
in
or
xchg
jl
cld
xor
pop
fdivrl
add
mov
and
repz
imul
ss
pushf
out
pop
xor
call
xchg
lahf
jle
xchg
dec
xor
test
pop
popa
dec
loop
cmc
jns
sub
fidivrl
sar
and
mov
jb
mov
outsl
fs
xchg
mov
rol
xor
js
xchg
xchg
ficoms
loope
mov
push
cmpsb
rorb
mov
cmp
sub
pop
mov
scas
or
mov
push
sub
fistpll
scas
sub
mov
jl
jmp
out
jns
cmp
stos
test
mov
mov
inc
lret
inc
or
pushf
rol
gs
cmc
pop
push
nop
adc
add
xorl
scas
mov
fistpll
push
jbe
mov
pop
jle
fcmovnu
mov
adc
js
mov
jae
movsl
stos
mov
sub
in
inc
ljmp
stos
ds
decb
dec
out
shlb
xor
in
mov
jno
leave
cwtl
js
shrb
rcrb
pop
jecxz
xor
mov
pushf
ss
mov
adc
sub
iret
or
in
notb
shrl
inc
xor
push
js
or
aaa
out
jno
lods
mov
mov
cld
call
pop
lds
int
sti
andl
xchg
add
mov
xchg
int
mov
pop
stc
sbb
jge
test
cwtl
or
in
in
fiaddl
xchg
and
jp
pop
icebp
add
jne
mov
std
mov
ss
inc
rcr
pop
cld
ficomps
fldenv
and
icebp
pop
cmp
mov
bound
mov
lock
jbe
add
jb
sub
orl
cltd
ds
xchg
cmp
movsb
sbb
jb
ss
jb
sar
mov
or
stos
mov
pop
cmp
inc
lock
and
mov
jp
adc
mov
mov
pop
mov
push
test
xchg
mov
sub
lods
or
or
push
jmp
bound
test
lods
cld
xchg
mov
adc
pop
test
mov
xchg
mov
xlat
les
xchg
xchg
inc
into
gs
cs
inc
and
pushf
xlat
int3
orl
std
dec
xor
fdivrs
scas
mov
int
popa
into
xor
mull
and
and
jno
sub
xchg
push
or
mov
mov
push
cltd
xorb
negb
sub
sbb
fisubrl
out
add
sub
pop
push
lahf
lcall
mov
mov
push
sbb
dec
pop
push
bound
addr16
jno
dec
std
pop
pop
or
or
pop
cmp
mov
sub
insl
mov
js
pop
xchg
push
cmc
sbb
lahf
ja
pusha
in
insb
jg
pop
and
pop
movsl
sub
inc
mov
sbb
inc
test
mov
popf
xor
mov
jo
pop
cmc
jns
jns
arpl
dec
outsb
lods
mov
out
jl
ret
adc
ljmp
fbstp
push
es
cmpsl
jne
or
cwtl
jnp
sbb
xchg
stos
cmpsl
ljmp
mov
jne
pop
call
out
fildl
divb
ja
mov
push
xor
xor
push
outsl
loop
push
dec
jb
push
fsubs
pop
and
loope
mov
bound
mov
nop
mov
cmc
adc
cmp
adc
shrb
pop
andl
dec
mov
add
or
sbb
sub
mov
dec
jb
mov
sahf
push
jne
xchg
bound
push
ljmp
xchg
jp
aam
idiv
jle
and
cmpsb
push
jg
rcr
dec
mov
add
cwtl
addr16
add
iret
jmp
mov
and
mov
test
mov
mov
test
push
inc
sbb
aaa
mov
outsl
pop
mov
xchg
imul
movhps
in
mov
inc
mov
xor
cwtl
ljmp
mov
js
pop
push
jbe
lds
jb
or
mul
or
jg
in
jmp
aas
fisubl
adc
or
mov
jmp
mov
lcall
icebp
adc
or
add
int
push
xor
xchg
rcl
add
lea
or
sbb
dec
pop
aas
mov
lea
adc
pop
lea
mov
sbb
mov
xor
in
out
sbb
and
inc
pop
mov
cmp
jmp
leave
cmp
xor
jle
scas
mov
lea
cmpsb
mov
xchg
cmpsb
je
mov
xor
push
data16
sarl
jmp
mov
cmp
mov
push
xchg
sub
dec
mov
sbb
ljmp
pop
pop
and
lret
pop
inc
mov
mov
dec
fisubs
inc
fwait
testb
sub
movsl
inc
lods
jp
roll
xchg
or
adc
xchg
jecxz
cmp
sbb
push
repnz
test
sub
push
rorb
xchg
pop
xchg
test
mov
mov
jp
jle
pushf
xchg
push
jno
mov
push
jno
inc
pop
aaa
lcall
push
xchg
mov
xor
pushf
adc
xor
arpl
jecxz
cld
es
pusha
lret
or
xlat
mov
xchg
add
cmp
sbb
add
cmpsl
cmp
out
mov
or
daa
ja
mov
daa
das
jbe
fidivrl
outsb
push
test
popf
push
mov
orb
inc
clc
sbb
sbb
mov
icebp
xorb
gs
mov
push
inc
cmp
sub
push
and
pop
negb
cmp
cli
lock
outsl
and
or
xchg
pop
xchg
xor
sbb
sahf
out
jmp
inc
push
push
mov
pop
xchg
call
movsl
lods
xlat
int
inc
xchg
jecxz
mov
stos
push
out
push
roll
push
xor
in
pop
das
jg
pop
pusha
loop
outsl
and
int3
mov
dec
inc
loopne
and
push
es
mov
cmp
jnp
mov
pop
inc
inc
dec
push
adcb
loop
adc
aas
arpl
rolb
aas
jo
inc
mov
call
mov
fldenv
sub
jmp
lock
sub
dec
dec
or
dec
in
sub
incb
jp
loope
adc
push
jg
out
bound
jnp
aad
xchg
jp
rcrb
jae
dec
xor
mov
or
orb
or
mov
out
mov
xor
xchg
inc
aas
xchg
outsl
sub
cltd
ds
insl
sarl
lahf
test
jne
int
xchg
mov
rol
fildl
pop
mulb
mov
jge
out
aam
push
or
jns
fwait
aas
aaa
jmp
xor
popf
mov
imul
sbbb
shr
sub
leave
push
pop
xlat
jl
ror
mov
leave
fs
pushf
mov
out
cmp
inc
mov
xchg
bound
lcall
test
repz
cs
movsl
aad
push
dec
pop
jecxz
jge
int3
mov
jg
es
out
repz
lahf
loop
pop
inc
or
mov
mov
cli
int
shll
adc
lods
fmull
pop
lret
fisttps
test
into
in
inc
outsb
dec
xor
mov
addr16
pop
adc
jns
xchg
mov
dec
mov
popf
nop
push
xor
aas
test
pop
jo
mov
enter
js
nop
mov
ljmp
adc
sbb
imul
fwait
lock
jecxz
inc
pop
mov
cmp
adc
push
xchg
and
repz
cmp
fstpt
cld
pop
cmp
sti
roll
jp
lret
inc
mov
movsb
nop
mov
dec
adc
dec
pop
fnstcw
repz
pusha
int3
xor
cmp
fwait
ds
jecxz
sub
jae
xchg
jmp
adc
fcompl
mov
idivb
and
adc
inc
icebp
cmp
or
dec
iret
inc
sub
add
jl
pop
dec
add
lods
popf
pop
movsl
aaa
pop
outsl
sub
mov
adc
ljmp
dec
pushf
hlt
cli
inc
scas
nop
aaa
sbb
sbb
push
dec
pop
es
inc
pop
jnp
jge
int3
cld
dec
rorl
jno
pop
popf
movsl
lds
ficompl
in
push
enter
add
xor
mov
and
mov
push
push
aad
pop
lcall
xchg
into
jbe
das
dec
jbe
cwtl
jbe
popa
dec
cwtd
mov
jp
dec
jge
pop
jns
jmp
mov
adc
sahf
pop
push
fstl
leave
mov
sti
mov
adc
add
push
fcmovne
ret
pop
and
dec
or
subb
out
clc
jnp
add
or
loopne
cmc
loop
ret
xchg
jl
mov
lea
dec
add
sub
cli
mov
in
and
xor
cmp
fisubrl
xor
shrb
xchg
iret
lret
mov
orb
out
sub
mov
popf
mov
rcl
lods
adc
cs
aam
adc
or
add
add
fcmovne
dec
xor
or
cli
das
pop
cmc
jmp
loop
add
xor
out
pushl
mov
les
dec
fisubl
push
inc
push
inc
ss
clc
aad
lret
cmp
mov
scas
push
inc
add
dec
mov
rorl
or
pop
mov
jns
jnp
jae
mov
sub
sub
mov
ljmp
sarb
stos
mov
cmp
jg
mov
mov
push
push
gs
xchg
jbe
movsl
loope
into
sub
add
stc
mov
insl
xchg
mov
aad
jmp
sub
gs
aad
hlt
mov
or
mov
adc
cli
add
add
sbb
and
clc
push
adc
lahf
mov
jmp
sahf
sbb
cmpl
add
icebp
mov
out
ret
lea
imul
lock
decl
add
inc
je
push
and
fwait
jp
xchg
pusha
push
es
lods
popa
and
divl
pop
mov
mov
in
add
cmp
rcll
jecxz
mov
dec
jo
out
int
push
add
pop
inc
dec
inc
in
add
stc
or
aaa
dec
sub
push
push
or
test
and
out
mov
movsb
data16
subl
or
movl
loope
ss
pop
fcmovnbe
jo
in
and
jno
push
inc
xchg
scas
hlt
pop
pushf
xor
cmp
cmp
pop
cmp
push
jbe
movsb
rclb
pop
cmpsb
xor
and
mov
cmp
inc
cmp
rcll
gs
je
dec
jg
ljmp
fs
je
out
sbb
cld
push
xchg
lea
out
jmp
movsb
in
arpl
jle
outsl
xor
test
mov
adc
mov
filds
inc
cmpsl
js
jnp
cltd
inc
or
push
ret
repz
imul
loope
fldt
decb
pop
adc
jne
sbb
lock
xor
add
jecxz
test
pop
shlb
pop
push
movsl
addr16
stos
scas
ror
pop
mov
or
stc
adc
pop
or
push
cmpsb
fwait
xchg
push
fdivl
lds
adc
fs
pop
mov
jb
sbbl
in
mov
sub
sub
std
scas
mov
inc
rorl
jb
sti
dec
mov
das
jg
es
mov
js
fimuls
or
xchg
mov
or
mov
push
jecxz
mov
scas
cli
inc
mov
and
mov
inc
adc
or
adc
lea
shrl
stc
pushf
addl
ss
and
adc
add
call
dec
or
cmp
push
fstpt
jge
pop
mov
jl
adc
pop
negl
and
ja
mov
sbb
sub
pop
xchg
dec
das
dec
xor
shlw
jp
insb
test
repnz
adc
mov
out
push
lahf
push
jp
out
or
rcrb
mov
repz
dec
mov
mov
cmp
iret
test
out
enter
inc
lods
jmp
add
lods
out
jo
pop
xchg
cmp
flds
pop
sub
test
jo
repnz
jns
leave
loope
inc
je
inc
data16
push
and
xor
flds
mov
fmulp
stos
xor
sub
jbe
pusha
and
mov
sub
aad
sbb
mov
jmp
push
leave
stc
test
hlt
sub
cmp
test
jo
iret
mov
sub
jg
pop
pop
shll
popf
adc
mov
pop
add
jno
ds
shlb
mov
mov
xchg
outsb
cld
push
pop
in
lds
filds
sub
pusha
ficomps
dec
fistpll
pop
psubd
jp
xchg
mov
shlb
cwtl
jg
xor
movsl
enter
dec
sub
iret
shlb
jnp
aaa
cmc
xchg
out
fisubs
xor
add
pusha
iret
mov
packsswb
mov
adc
cmpsb
or
outsb
ret
popa
imul
and
dec
mov
jge
ds
jmp
jl
and
and
or
push
lock
jl
gs
add
subl
enter
clc
fsubs
push
add
std
adc
push
outsb
cmovle
movsb
lock
cmp
mov
jmp
fs
daa
clc
es
test
sahf
push
sub
xchg
mov
es
shll
outsl
inc
xchg
add
sub
xchg
add
rcll
dec
leave
cmp
add
push
push
cmpsb
int3
push
out
xlat
cmpsb
lea
icebp
out
add
inc
decl
xchg
mov
hlt
shll
sbb
cmc
loopne
fnstsw
leave
data16
sub
cmp
ds
in
inc
je
dec
dec
dec
outsl
sbb
push
lods
ret
dec
into
sbb
mov
mov
fldcw
stos
scas
and
dec
mov
xor
add
in
loop
dec
xor
daa
dec
xor
and
aam
in
mov
lods
imul
and
aaa
test
test
es
enter
xor
lods
fs
cmp
loop
es
jle
mov
dec
inc
int
aad
out
pop
mov
pop
mov
test
push
aad
xor
cmp
adc
cmp
xchg
movaps
xchg
lea
mov
add
cli
jo
int3
lcall
push
shl
cmp
arpl
inc
outsl
and
int
daa
ljmp
mov
lret
push
into
cld
jecxz
mov
das
je
fwait
std
je
add
push
je
ret
xchg
lock
inc
cmp
call
push
add
int
sbb
ror
adcb
insl
push
or
cmp
test
cmp
sub
aam
hlt
dec
enter
pop
pop
dec
pushf
sbb
ffree
pusha
pop
jno
test
int3
hlt
test
sub
aam
sub
shrl
ja
pop
mov
dec
in
push
popa
xor
push
es
movsl
add
fmull
or
setnp
pop
sbb
jmp
mov
jae
cmovs
add
push
fimull
jo
loop
pop
outsb
into
cmp
add
outsb
sbb
inc
lods
mov
outsl
aas
xchg
pusha
js
mov
add
jae
xor
push
pop
cmpxchg
gs
jbe
cmp
mov
je
xchg
xor
mov
in
negb
add
pop
inc
push
mov
inc
xor
enter
cmpsb
jmp
insl
imul
add
sbb
jns
sahf
js
stos
or
jbe
cld
hlt
or
mov
push
cmp
fwait
jno
sub
push
test
mov
stos
cli
daa
mov
das
mov
push
inc
in
stos
bound
pop
xlat
insl
adc
insl
mov
inc
jb
popf
adc
add
arpl
sub
and
push
xor
ja
adc
lds
testb
inc
ss
push
das
sub
lods
pop
lods
pusha
cmp
fmull
xor
in
mov
lods
jge
and
dec
inc
xchg
repnz
push
mov
pop
pop
xchg
adc
mov
sub
mov
jb
sbb
xchg
xlat
cmpl
xor
out
push
dec
inc
xor
push
cwtl
cmp
pushf
sub
cltd
ret
gs
jecxz,pt
sub
push
stos
push
pop
jecxz
stos
in
mov
or
inc
inc
sarl
pop
orb
pusha
pop
cmp
cmc
je
sub
xor
fimull
insl
push
xchg
or
adcl
inc
pop
sub
popf
roll
insl
int3
dec
mov
or
xchg
dec
stos
out
lret
js
mov
lods
push
xor
aas
aam
or
mov
and
outsl
int3
imul
movhps
mov
sbb
daa
bound
or
mov
cmp
mov
loop
xor
push
xchg
jno
in
inc
push
jl
cmc
mov
out
arpl
mov
test
jmp
loope
popa
xchg
sub
or
scas
jns
fbld
je
mov
xchg
scas
mov
xchg
sbb
mov
pop
mov
test
mov
inc
iret
push
inc
dec
ljmp
or
pop
addl
cmp
pusha
jge
enter
sub
stc
cmpl
icebp
mov
lds
nop
and
push
adcl
aaa
push
push
aas
test
aad
jmp
loop
jnp
mov
loopne
mull
jecxz
cmpsb
and
and
sbb
lock
pop
mov
add
in
out
fwait
xlat
addr16
cmp
outsb
movaps
sbb
dec
arpl
sub
xchg
sbb
fwait
cmp
sub
fsts
add
js
mov
int
jno
inc
lret
xchg
repz
stos
shrl
fcomi
scas
test
cmp
lahf
movsl
mov
leave
mov
inc
and
or
cmp
aam
pop
xor
lcall
pushf
jecxz
hlt
aam
pop
pusha
out
dec
mov
loopne
out
loop
call
cld
sbb
cmp
mov
jmp
aam
dec
movsb
call
fld
push
or
out
pop
fwait
adc
cmp
in
shll
adc
int
xchg
jp
mov
out
lods
xchg
sbb
xchg
jecxz
and
add
inc
cmp
je
test
pop
xchg
xor
mov
mov
lea
adc
xchg
jnp
ret
loopne
adc
add
leave
lahf
pop
xchg
mov
in
outsb
fsubs
ficompl
fldcw
das
mov
fnstcw
rcll
pop
in
out
inc
pop
inc
test
leave
mov
cmp
jmp
mov
add
sahf
lret
sub
loope
xchg
push
fldcw
adc
test
and
dec
aas
dec
push
mov
ja
insb
mov
push
stos
add
mov
mov
sub
dec
stos
rclb
int
lods
or
nop
push
loopne
hlt
add
xchg
xor
sar
pop
mov
inc
jge
push
fdiv
mov
push
push
sub
dec
lret
mov
aam
mov
and
sbb
xchg
pusha
jns
pop
cwtl
call
mov
push
dec
xor
leave
xchg
jbe
adcl
jg
pop
adc
rclb
cmp
sbb
or
add
rcrb
adc
mov
push
leave
les
sbbl
sub
gs
sti
data16
sbb
dec
cld
out
mov
push
add
stos
leave
ss
mov
out
arpl
jno
insb
inc
adc
jbe
fs
xchg
ret
or
sbb
fdivl
fdivs
dec
fsubrp
and
lock
jae
pop
inc
jae
xchg
cltd
bound
ret
jl
sbb
pushf
movsl
xor
cli
mov
shll
cmp
mov
adc
adc
lahf
adc
push
mov
and
xlat
lcall
add
divb
inc
xchg
xor
fdivl
adc
or
xchg
jl
push
mov
imulb
dec
or
int
in
adc
xchg
push
popa
lock
mov
sbb
sub
loope
xor
pusha
mov
xor
fwait
mov
mov
imul
in
and
mov
pop
fs
mov
nop
cmpl
pop
dec
sbb
cmc
push
push
jb
mov
or
push
add
sbb
imul
and
and
sbb
jb
xchg
nop
sbb
repnz
xchg
lods
xchg
mov
push
push
loop
mov
push
call
xchg
sbb
int3
mov
push
or
dec
aaa
mov
add
arpl
mov
cs
and
pop
imul
clc
mov
push
mov
pop
adc
bound
call
mov
adc
dec
in
fcoml
mov
pop
subb
or
cmc
cmpsl
orb
push
ja
lods
mov
inc
fnclex
sub
pop
fs
popf
dec
adc
dec
call
inc
pop
das
cmp
pop
andl
ja
adc
add
shlb
in
adc
mov
rcl
push
loope
aam
out
ret
stos
cmpsb
aad
test
fbstp
or
jecxz
dec
insb
inc
loopne
sub
inc
insb
orl
popa
inc
xchg
dec
xor
nop
jo
dec
es
outsl
repz
lock
pop
outsl
call
test
in
mov
and
mov
sbb
mov
xor
jbe
xchg
mov
pushf
aad
mov
pop
xor
addb
jns
push
fsubrl
pop
arpl
pop
call
or
or
jne
push
fimull
lahf
imul
rolb
sar
es
test
jmp
push
fs
xchg
fnstenv
stc
push
adc
shl
fs
int
push
xor
cwtl
jge
hlt
jne
jg
push
aam
pop
mov
adcl
jmp
adc
lods
aas
mov
movsb
inc
mov
xor
cmp
lds
xchg
pop
mov
dec
lcall
subb
pusha
subb
push
xchg
and
jnp
inc
cltd
or
sub
sbb
ret
fists
loopne
fwait
jbe
inc
push
in
jecxz
bnd
mov
xchg
jnp
xchg
lret
mov
mov
js
mov
enter
lcall
lret
orb
or
fisttps
fucomi
dec
dec
pop
push
loopne
int
in
mov
push
and
mov
push
cli
jp
add
cli
fwait
mov
ret
sub
cld
xorb
mov
or
dec
adc
dec
xchg
adcl
arpl
sbb
aam
xor
jmp
or
testb
or
cmp
mov
orb
add
mov
mov
cmpsb
movsb
xor
int3
pop
shl
mov
jae
sub
xchg
xor
popa
push
pop
jge
movsl
mull
les
fnstcw
sub
or
add
arpl
pushf
cmp
mov
add
cs
push
sub
loopne
mov
in
pop
stos
inc
popa
enter
test
push
dec
xor
out
icebp
cld
repnz
in
in
and
cmp
push
inc
lds
cmc
loop
and
ss
das
pop
add
jb
cmp
lock
cmp
inc
jle
arpl
loope
mov
xchg
xor
and
add
repz
ss
jo
ret
xchg
xchg
push
pop
cld
jmp
mov
push
mov
lods
int3
in
inc
jne
stos
stos
int3
push
mov
loope
lret
out
addl
fadds
sar
sub
sub
lock
jmp
cmpsl
inc
in
shrl
sbb
jmp
adc
mov
fistl
ret
daa
pushf
xchg
iret
push
imull
cmpsb
cwtl
push
stos
sarb
pop
mov
in
xchg
jb
cmc
movsl
std
rcrl
xor
sbb
ret
sub
sahf
xor
xor
dec
inc
mov
xor
inc
inc
insb
and
dec
adcb
inc
cmp
xchg
pop
push
mov
mov
imul
popa
jbe
test
insb
data16
fsubs
or
insb
shll
push
sbb
mov
adc
push
sub
ds
cmc
sub
clc
mov
jb
xor
or
pop
mov
out
bound
mov
sub
test
push
sbb
movsl
dec
push
push
cli
jne
aaa
insb
cmpsb
mov
cmpb
adc
push
js
pop
cwtl
mov
ret
repz
jge
sbb
sub
rorl
adc
or
add
adc
inc
pop
clc
adc
faddl
dec
mov
lahf
popf
xor
and
add
jae
or
fs
daa
adc
mov
test
xor
imul
lahf
cwtl
pop
jle
js
xor
mov
leave
std
mov
mov
and
dec
fucomp
repz
arpl
loope
and
push
cs
repnz
insb
aam
and
pop
fstpl
outsl
dec
fwait
cmp
push
push
cmc
xor
jecxz
xchg
movsb
popf
xchg
stc
or
movsb
pop
int3
les
and
mov
insb
push
lods
or
in
cmpsb
sub
jo
sbb
inc
mov
test
cmpsb
sub
push
xor
fwait
add
mov
mov
mov
inc
andl
xor
call
dec
xor
jnp
popf
fimull
dec
lret
daa
icebp
or
fnstcw
sbb
mov
popf
in
xchg
jb
push
or
subl
ljmp
repz
inc
rclb
xchg
movsl
inc
jb
push
js
sbb
pusha
push
and
xor
les
mov
and
lret
inc
mov
gs
add
inc
add
mov
inc
cmp
mov
leave
mov
push
outsb
das
ss
add
inc
cmp
sub
and
das
imul
loop
mov
fs
mov
cmp
pop
movl
test
or
sbb
lods
stos
sbb
movsl
hlt
icebp
das
incl
insl
ss
out
call
ret
ret
das
xchg
mov
jnp
daa
mov
ljmp
jl
inc
mov
lea
stc
push
sub
mov
mov
mov
imul
ffree
rol
pop
push
push
add
sbb
sbb
lcall
ljmp
adc
pop
mov
mov
aam
scas
jle
xchg
push
lods
dec
mov
sahf
jbe
movsb
xor
mov
jge
sub
sub
daa
addr16
pop
mov
sarl
adc
cmp
vmovsd
repnz
adc
loope
lret
dec
imull
hlt
movsl
test
push
xchg
test
arpl
int
arpl
xchg
std
sti
aaa
outsl
sbb
push
mov
add
lock
push
rcrl
mov
in
or
add
xor
rcrb
icebp
in
adc
out
or
out
mov
cmp
cmp
jnp
mov
xchg
mov
hlt
mov
movsb
cmp
jp
inc
in
mov
mov
mov
mov
fcompl
decl
xor
jge
inc
jb
add
push
cmp
loop
loope
push
fisubrl
jne
repnz
dec
outsl
sbb
cmpsb
fstps
icebp
jae
or
loop
xchg
adc
or
scas
pop
pop
inc
mov
xor
pop
xchg
lods
mov
mov
or
fdivrl
test
xchg
push
adc
mov
hlt
inc
lret
jmp
push
cmp
fstl
cs
jne
or
fistpl
mull
popf
push
lock
in
es
pop
mov
leave
mov
dec
xchg
data16
lahf
popa
movsb
add
aas
xorl
jb
testb
inc
bound
pop
mov
push
ljmp
sub
or
push
int3
ret
imul
in
adc
stc
orl
sub
sbb
push
xor
push
cltd
dec
in
adc
lea
sarl
lret
mov
mov
pop
inc
daa
mov
pop
mov
loopne
jae
and
adc
cmp
leave
in
xor
data16
test
cmp
cld
enter
mov
mov
push
clc
mov
pop
mov
dec
mov
out
add
add
and
in
lret
mov
sbb
pop
cmp
add
lods
fisttps
push
hlt
pop
jae
add
cmc
stos
or
push
dec
cmp
fs
dec
sarb
outsb
sbb
jbe
mov
cmp
arpl
or
inc
popf
dec
mov
mov
mov
mov
or
inc
push
inc
add
jl
or
cmpsl
and
mov
and
in
xchg
push
inc
jno
int3
mov
cmpsl
ja
outsl
mov
ja
push
mov
and
mov
mov
outsl
mov
cmpsl
cmpw
sbb
push
inc
xchg
insl
xchg
xor
out
adc
imul
addr16
pushl
into
fisttpll
adcl
test
add
orb
cmp
aam
stos
mov
sbb
add
cmp
sbb
jp
inc
or
data16
insl
inc
popa
cmp
inc
rcrl
pop
inc
cld
fwait
sbb
outsl
inc
loope
inc
ror
les
fsub
mov
jle
fdivrp
jp
mov
sbb
mov
pop
sbb
pop
dec
and
cmpb
cld
pop
cld
minps
and
mov
popa
mov
popf
mov
jb
notb
mov
cmp
cld
shll
add
cmp
xchg
add
idivb
imul
sub
loop
sbb
mov
xchg
or
lock
cmp
or
dec
jne
ljmp
daa
mov
popf
push
mov
mov
lahf
repz
iret
iret
xor
push
xchg
inc
push
mov
cmpsb
les
addb
lods
fistpll
adc
mov
lods
arpl
dec
aam
inc
test
mov
push
mov
push
outsb
xchg
sub
pop
movsl
lcall
cltd
fsubrl
mov
sub
gs
push
fwait
addl
push
jo
rorb
cmp
adc
movsb
inc
mov
dec
rolb
xor
das
leave
aaa
xchg
rorb
xor
push
cmp
adc
jns
cld
arpl
std
pop
sbb
ret
jecxz
jns
xchg
stos
daa
jne
data16
sub
imul
incl
dec
lods
jl
test
sbb
add
ds
push
fisttps
dec
jnp
out
adcl
push
and
das
and
add
scas
ficompl
cld
int
sbbl
adc
pop
sub
cmp
test
push
jne
mov
xor
inc
mov
push
mov
sbb
and
mov
jbe
mov
add
sarl
sbb
arpl
pop
xchg
adc
fdivrl
mov
pusha
push
test
je
dec
ljmp
inc
push
movsb
pop
pop
pop
xorb
ficoms
inc
xor
js
sbb
in
mov
mov
rcrb
fwait
cmp
cmc
and
pop
les
pop
and
cmp
nop
add
ss
xchg
pusha
in
inc
cmp
lret
movl
push
pop
xor
xor
rorl
push
scas
ljmp
sub
arpl
enter
mov
js
xlat
ret
sti
mov
arpl
adc
xchg
ficompl
add
shlb
cmp
mov
es
xchg
xchg
movsb
syscall
arpl
out
imul
and
xor
enter
or
je
test
sub
jbe
sbb
and
or
pop
lea
jns
leave
pop
sahf
repnz
sbb
fstpt
sahf
cmc
inc
loopne
jbe
cld
rcr
add
loop
push
mov
int3
repnz
push
push
xchg
jecxz
push
cmpsl
jne
imul
rcll
cmc
mov
push
dec
push
inc
mov
jno
dec
fs
orb
xor
cwtl
or
push
scas
push
aad
push
mov
std
mov
jmp
sbb
fistpll
jne
add
les
movsl
fndisi(8087
sar
fldcw
fisttpl
and
out
imul
mov
mov
rorl
mov
popl
iret
pop
sub
dec
lcall
rcr
sti
mov
cmp
and
mov
mov
mov
movsb
das
xchg
and
lahf
jo
jp
mov
pop
xchg
in
fmuls
or
popa
mov
sub
adc
adc
shr
clc
cmc
add
fsubl
sub
sub
fs
mov
pusha
popa
pop
int
push
jns
es
mov
andl
xor
sbb
loop
jmp
mov
push
orl
stc
jmp
idiv
movsb
mov
js
adc
into
and
add
gs
push
push
daa
xchg
retw
jecxz
ja
mov
movsl
shr
es
pop
mov
movsl
add
lret
mov
rcrb
rcrb
adc
mov
pusha
shll
adc
int3
push
pop
push
xor
mov
sbb
je
cmp
call
out
mov
cmp
insb
aam
pop
das
inc
add
sbb
repz
mov
js
aas
cmp
cmp
mov
bound
fisubrs
clc
cmp
pop
sbbb
push
loop
ss
sbb
mov
imul
popa
and
jmp
es
in
mov
cwtl
in
mov
mov
aam
pop
inc
popa
mov
loopne
push
xor
fwait
xor
ret
xlat
imul
adc
aam
ret
fidivrs
jne
or
mov
sahf
jbe
pop
ds
jl
push
inc
push
dec
mull
fyl2x
add
daa
mov
nopl
lods
rclb
fwait
add
sub
fadds
push
mov
test
sbb
insl
sub
push
inc
fwait
test
fnstsw
lds
enter
andb
jmp
pop
sub
jns
mov
add
push
flds
mov
pop
xor
sbb
jmp
scas
add
jp
mov
xchg
stc
pop
fimull
ja
mov
sbb
lock
mov
pop
mov
adc
cmp
inc
movsb
push
mov
and
or
popf
inc
jbe
mov
cwtl
aaa
push
lods
dec
andl
testl
xchg
testl
in
fildl
push
jnp,pn
push
dec
shrl
ret
mov
ss
jo
sbb
ret
es
test
lret
jb
cltd
dec
pop
mov
sti
inc
inc
push
arpl
add
imul
xchg
into
inc
cmp
in
adc
mov
popl
mov
out
imul
pushf
mov
sahf
fldt
in
jge
pop
lahf
xorl
test
jbe
mov
or
lahf
fmull
mov
mov
fwait
inc
mov
outsb
dec
leave
ret
adc
or
loopne
inc
pop
xchg
mov
or
lret
test
xchg
xchg
stos
inc
jne
lahf
hlt
imul
fisttpl
ds
jns
sub
add
or
pop
inc
lcall
aam
or
icebp
movsl
xor
cmp
pop
mov
cmp
leave
xchg
cli
imul
enter
mov
push
mul
es
mov
push
or
rolb
add
subl
rcl
cmp
ficompl
xor
lahf
mov
and
or
pusha
pop
jo
insl
pop
jl
popf
xor
push
sbb
jno
sbb
jl
push
jg
push
and
sub
outsb
xor
daa
lock
mov
jns
lahf
adc
fwait
cmp
add
pop
fnstenv
sti
enter
aas
push
pusha
dec
sbb
insb
fs
hlt
bound
shrb
or
mov
bound
ljmp
xor
rcll
sub
sub
xchg
cmp
add
stc
jns
dec
mov
push
gs
enter
jae
cld
sti
sub
movsl
orb
lods
iret
in
ret
xor
jbe
fwait
lea
shrb
pop
cmpsl
mov
insb
push
movsl
sbb
fincstp
daa
outsl
xor
pop
subl
push
mov
imul
mov
fdiv
ja
adc
fcmovb
xchg
aas
jp
and
jp
push
jmp
mov
lds
hlt
stos
dec
test
sub
and
pop
push
mov
rolb
pop
push
ja
dec
lret
fs
mov
mov
les
movsl
es
add
sub
pop
dec
test
sbb
addr16
pushf
xor
push
dec
jne
sarb
sbb
or
shll
mov
jl
adc
insl
mov
xor
cmc
add
fimull
neg
iret
dec
orb
xchg
mov
inc
sbb
sbb
out
adc
mov
jae
add
hlt
pop
iret
repz
pushw
mov
mov
test
xchg
jae
and
stc
and
xchg
jg,pt
shl
popa
out
push
mov
push
push
dec
sbb
lret
popa
addr16
clc
mov
jl
jge
mov
push
pushf
test
xchg
fidivs
adc
test
dec
mov
sub
xchg
stos
scas
lahf
repnz
ja
sbb
sub
jg
or
fdivl
sub
sub
xchg
mov
mov
sub
shlb
sbb
jns
push
or
fcoms
andb
call
lock
jb
sub
stos
dec
lods
sub
std
nop
jle
xor
xor
adc
orb
add
xchg
rcl
xchg
inc
popa
outsb
xorb
repnz
cwtl
and
mov
int3
pusha
jp
call
cld
pop
inc
loopne
mov
push
dec
push
imul
pusha
pop
mov
push
outsb
or
rcrb
mov
fwait
negl
adc
pop
sahf
adc
mov
cld
orb
jns
xchg
xchg
movsb
cmp
fwait
mov
sti
and
pushf
sbb
daa
pop
dec
and
arpl
imul
inc
rorb
pop
xor
inc
flds
jns
inc
or
mov
xchg
xor
pop
push
mov
inc
or
sub
adc
decb
lock
in
mov
cmp
and
int
ret
inc
sbb
xchg
out
mov
sbb
xchg
arpl
sub
inc
fistpl
xchg
mov
call
cmpsl
lret
xchg
arpl
mov
test
pushf
fcomps
and
fildl
wrmsr
mov
ret
call
jo
mov
ret
cmp
lods
and
pop
push
icebp
test
jmp
xchg
mov
nop
push
mov
icebp
sub
cmc
jb
hlt
mov
fimull
idivb
dec
mov
push
inc
repz
push
push
rol
jno
fldcw
jmp
push
mov
pop
mov
add
fs
mov
push
jae
dec
and
cld
mov
xor
loopne
jnp,pn
lods
mov
scas
nop
repnz
mov
sbb
outsl
shrl
xor
adc
fbld
sbb
jl
sub
or
jl
dec
lock
jno
cmp
bound
add
arpl
std
das
xor
sub
xor
mov
lock
add
inc
je
sarb
fs
dec
sbbb
pushf
mov
sub
lcall
int3
nop
leave
or
pusha
mov
push
xorl
daa
and
mov
mov
adc
aas
jb
xchg
sahf
push
mov
movsl
adc
test
cmp
scas
arpl
sbb
ss
sarb
mov
mov
cltd
xchg
sbb
jb
sbb
aas
sbb
lahf
neg
int3
lock
adc
jecxz
iret
lahf
mov
loopne
sub
into
mov
repz
inc
pop
inc
aaa
xor
sti
aas
test
cmp
inc
popa
or
and
or
lods
mov
sbb
push
push
cs
push
lahf
and
cmp
test
inc
enter
cmc
rcrl
jmp
test
jg
jle
adc
sarl
loop
cmc
call
pop
inc
mov
sbb
testb
jmp
aas
xchg
dec
mov
testl
or
stos
shl
xchg
or
dec
push
out
sar
jge
insl
shrl
inc
dec
mov
popf
jge
mov
pop
loopne
jmp
xchg
mov
dec
xor
adc
dec
lods
sbb
cmpsb
pop
std
mov
and
fdivr
jp
lods
out
pop
addl
xor
add
jg
test
mov
dec
push
cltd
inc
fs
stos
pushf
out
pop
sbb
cmp
mov
aad
stos
fidivs
nop
jno
rcrl
mov
lea
add
add
jns
push
and
cltd
dec
scas
test
and
jo
ret
mov
mov
cli
cmp
push
pop
jae
out
push
call
sbb
sub
push
add
ret
adc
sti
mov
lahf
pusha
mov
jbe
imul
push
clc
xor
clc
jns
inc
scas
pop
inc
and
adc
cwtl
into
xor
ss
out
fistpll
adc
in
dec
pop
movsl
jmp
rcrl
fstl
push
mov
inc
inc
mov
push
jb
inc
mov
dec
jae
repnz
mov
lea
in
test
in
lahf
sub
mov
cwtl
stc
xchg
or
pop
loope
xor
das
mov
sbb
loop
adc
aad
inc
ss
movsb
ds
faddl
jae
aaa
mov
nop
imul
jecxz
shrl
jno
or
jae
or
mov
movsl
dec
pop
jmp
jg
lock
jne
movhps
and
ret
sbb
mov
mov
fstps
mov
pop
xor
popf
sbb
and
xor
mov
in
pop
negl
and
rclb
xchg
loope
cli
movsl
test
sbb
std
stc
push
mov
mov
push
rorl
cmp
dec
inc
inc
pushf
sbb
outsl
mov
dec
or
and
je
jb
mov
mov
cli
push
ss
push
xlat
mov
adc
popa
ljmp
pop
mov
push
push
ret
sti
ds
jg
dec
ds
inc
xor
xor
mov
in
gs
sbb
inc
call
sub
dec
jnp
in
dec
xor
sub
cli
sbbb
clc
lea
jb
add
and
sub
lods
jp
arpl
jmp
cmpl
lcall
lea
mov
add
xchg
push
lods
or
movsl
mov
and
jge
push
cltd
lcall
mov
loopne
dec
call
insl
xorb
push
mov
mov
sub
lods
in
add
jmp
mov
fstpt
ja
cmp
data16
xor
insb
ret
inc
mov
les
push
jecxz
jnp
outsl
mov
shrb
fstpt
push
fldt
sbb
int
pop
stc
icebp
dec
test
adc
stos
es
stos
mov
fldcw
aad
cmc
xchg
mov
or
sbb
lahf
dec
jmp
push
fistpll
cmp
and
pop
sbb
sub
sbb
mov
fcmovnu
xor
sti
mov
add
xchg
int
adc
add
addr16
pop
loope
cwtl
mov
incb
dec
and
cld
push
pop
cmc
push
cmp
or
in
push
icebp
cli
je
and
out
sub
xor
mov
cmp
pop
test
ficoms
andl
outsb
sub
lcall
xchg
lret
adc
fstp
out
in
das
sbb
outsl
psubq
xchg
mov
pop
stc
pop
xchg
mov
inc
outsl
push
cli
pushf
mov
out
pop
lock
popf
xor
mov
or
push
setno
lds
lock
cltd
scas
push
in
pop
cmpsb
scas
xor
cmpsb
sbb
and
push
pop
loopne
out
and
in
loopne
rcr
push
es
aaa
rclb
push
push
pop
sbb
fmull
pop
mov
mov
mov
cmpsb
push
test
mov
cmp
stc
mov
pop
pushf
lret
jmp
mov
inc
ret
mov
xchg
pusha
das
xor
jb
xor
in
xor
xchg
ljmp
jne
outsb
movsl
jg
pop
loope
repnz
mov
cmp
mov
mul
fistl
mov
addr16
mov
xchg
mov
jns
flds
stos
push
out
mov
mov
mov
cltd
stos
xlat
and
cmpsb
sbb
test
push
shlb
pop
hlt
pop
inc
push
push
out
hlt
and
xchg
ret
jecxz
mov
mov
jnp
sub
mov
imul
shll
inc
aas
loopw
pop
jecxz
xchg
imul
scas
lahf
sbb
lock
dec
cmc
or
dec
lds
pop
add
xor
les
mov
xchg
push
xor
xchg
lret
sub
pop
fidivl
inc
in
sub
int3
idivl
movsl
aam
and
movsl
stos
fs
mov
mov
aaa
outsl
loop
lds
rolb
sti
mov
ret
pop
and
mov
dec
mov
sahf
push
ret
pop
jmp
adc
push
push
jns
pop
lahf
ja
shl
add
mull
or
popa
push
xor
outsb
push
fstpt
repz
xor
pop
push
hlt
imul
xchg
cs
scas
or
enter
daa
lahf
add
call
mov
dec
sub
push
out
dec
adcl
cmpsb
rsqrtps
stc
insb
cmp
push
repz
nop
push
pop
adcl
mov
cmpsl
inc
andl
scas
stc
dec
cmpb
mov
inc
insb
pop
popf
jne
popa
fcom
ljmp
and
scas
stos
pop
int
data16
or
xchg
adc
sbb
hlt
inc
nop
ret
mov
test
mov
xor
test
push
ljmp
popf
cmp
jae
outsb
push
mov
arpl
data16
mov
mov
pop
lds
sbbb
fldcw
inc
aad
in
mov
or
mov
dec
mov
mov
shll
int
add
add
inc
ret
imul
mov
fcmovnu
es
mov
pop
mov
inc
fsubs
rcll
cmp
push
ret
shll
icebp
mov
iret
test
push
or
cmp
xor
push
mov
mov
lods
jecxz
mov
fldt
int
xchg
jno
lret
xchg
mov
cmpsb
test
arpl
xchg
jns
pop
les
fwait
adc
in
sub
xchg
sbb
mov
loope
sarb
mov
lret
arpl
scas
cmp
and
and
scas
xchg
sbb
insb
in
movsb
stos
adc
lods
sub
add
mov
pop
outsb
xchg
sti
xor
cmp
or
neg
scas
pop
sub
scas
xacquire
inc
xor
adcl
sbb
pushf
push
or
or
mov
aaa
notl
mov
pusha
cmc
test
mov
cli
mov
out
mov
out
mov
jle
jle
das
mov
idivl
and
ljmp
dec
test
hlt
in
mov
mov
enter
gs
sbb
mov
data16
sbb
sub
shll
test
cwtl
loopne
push
lods
iret
das
hlt
mov
pusha
lcall
add
int3
xor
mov
frstor
sbb
data16
clc
add
add
loop
in
es
int3
cmpsb
cmp
xchg
pop
pop
dec
leave
xchg
dec
xchg
jne
pop
ss
cmp
subl
add
insl
pop
push
call
cmp
jno
push
sbb
and
mov
sub
mov
xor
sub
stos
dec
inc
sti
sub
mov
out
sarb
sub
push
mov
dec
inc
dec
and
aas
scas
lea
aaa
rcr
cmp
xor
mov
or
in
jae
out
push
xchg
cs
pop
test
cmpsb
adc
test
add
dec
or
mov
inc
xor
cld
mov
aas
loope
hlt
ret
in
jnp
pop
fcoms
sti
imul
ja
xchg
pop
mov
imul
ja
fdivrp
pop
sbb
ret
movsb
es
filds
sbb
inc
xlat
sub
iret
mov
movsb
dec
mov
loope
out
out
into
sbb
jae
lcall
aad
cmp
mov
ret
dec
push
scas
adc
push
call
cmp
faddp
repnz
call
mov
add
and
inc
and
mov
sub
test
test
fadds
sbb
dec
sbb
movsl
ja
and
mov
dec
jae
mov
and
stc
outsb
mov
lret
enter
jg
inc
mov
addr16
lock
lods
mov
testb
dec
sbb
imul
or
scas
mov
push
xchg
lods
push
testb
repz
cld
push
sbb
mov
sbb
lods
mov
cwtl
outsb
sbb
add
out
sbb
je
jbe
inc
fidivrl
lahf
cmp
jp
jno
push
sbb
cmp
popa
lret
sahf
loope
mov
xor
aam
push
pop
iret
xchg
fistl
xchg
jbe
das
pushf
xchg
and
xor
pushf
fnstsw
js
xchg
xchg
jbe
sub
inc
scas
mov
mov
pop
test
es
sbb
push
add
or
fucomp
or
mov
out
sbb
dec
je
adc
lods
adc
ret
rcll
pop
jecxz
adc
bnd
bound
sub
push
sbb
or
inc
cmp
add
mov
jne
or
xchg
adc
mov
inc
sub
into
movsb
cmp
push
cmpsb
adc
mull
rcrl
inc
pop
inc
push
insb
xchg
repz
stos
dec
cmp
cmpsb
out
mov
xchg
pop
cs
lcall
shrb
leave
or
cmp
dec
pusha
push
xor
insl
fsub
mov
cmpsl
int
sbbl
mov
insb
into
outsl
push
shlb
or
inc
sarl
mov
iret
out
adc
and
movsb
hlt
dec
popf
repnz
gs
bound
lods
adc
cwtl
lcall
jl
hlt
push
dec
adc
sbb
dec
cltd
popf
adc
loope
xor
in
mov
adc
sub
sbb
call
lahf
cmp
cltd
mov
sbb
imul
xchg
fdivrp
lcall
aaa
addr16
test
jg
mov
ret
mov
fxch
inc
sti
sub
sub
cmpb
shlb
mov
arpl
mov
pushf
aad
subl
xchg
adc
xor
outsl
fwait
aaa
lock
mov
cltd
jbe
jno
sarl
xor
mov
pop
outsb
adc
call
mov
popa
or
xor
lock
sbb
jmp
aam
test
bound
or
add
test
incb
mov
repz
iret
fldenv
mull
mov
cmp
pushf
add
test
jl
cmpsl
stos
xchg
mov
sub
loopne
imul
scas
int3
mov
jnp
jbe
adc
or
mov
loopne
pop
pop
xor
jns
sbb
xor
inc
fsub
cmpsl
add
pop
subl
push
mov
shll
clc
xchg
cmc
xchg
push
mov
movsw
stc
ret
mov
sub
sahf
inc
add
cmc
jns
movb
mov
dec
push
in
arpl
mull
cs
sub
bound
xlat
inc
mov
adc
outsb
mov
mov
jnp
xor
repnz
add
xchg
addr16
dec
push
sar
dec
cmpsb
jo
or
xchg
dec
push
add
movsb
into
jns
or
fsubs
fidivl
test
and
loop
testb
into
sbbl
test
in
clc
in
sbb
gs
xlat
cmp
inc
outsl
popf
loopne
and
lock
xchg
or
loope
xor
fimull
mov
dec
lods
mov
xor
inc
mov
repnz
sbb
hlt
pop
lret
xchg
loop
test
mov
cmp
add
adc
mov
cmpsl
popf
inc
cli
xlat
shlb
push
mov
cmp
leave
mov
popl
jmp
mov
or
mov
jge
sbb
mov
dec
or
imul
inc
scas
jb
fs
lcall
mov
cli
add
fsubrs
icebp
add
sarl
sub
out
and
adc
das
jbe
xor
mov
xchg
aaa
cmp
bound
iret
mov
insl
cmpsl
xlat
lret
xchg
adc
dec
cmpsb
mov
xchg
xchg
scas
or
ds
nop
ds
addr16
xor
mov
pop
popf
aam
into
push
imul
push
and
lock
inc
adc
out
add
cmp
lods
pop
jg
mov
sbb
xchg
jno
aam
cwtl
push
adc
push
shll
outsb
lea
addr16
adc
scas
addr16
push
into
sbb
cmp
dec
jl
jg
xchg
jp
adc
xchg
push
sub
mov
xchg
sub
push
xlat
mov
inc
jge
xchg
mov
fwait
sbb
jb
daa
mov
js
mov
mov
mov
ffree
jbe
push
xchg
aad
cltd
xchg
xchg
push
js
in
xor
mov
cli
in
popa
inc
mov
and
insb
shll
jo
lds
out
in
jecxz
hlt
adc
shrb
dec
jmp
lods
movsb
cmpsl
mov
xchg
leave
repz
add
mov
test
mov
mov
add
sti
mov
fisubrs
dec
addr16
xor
add
jmp
std
out
in
loope
pushf
pop
lods
sbb
arpl
xchg
stos
test
out
sbb
pusha
rcll
cmc
cmpsl
bnd
push
push
inc
mov
loope
or
cltd
or
ljmp
dec
ljmp
loop
jl
push
addb
pop
ljmp
or
pop
pusha
jecxz
sbb
xchg
rclb
push
inc
outsl
push
daa
jae
jne
and
adc
enter
jle
jbe
jns
out
out
adc
imul
dec
and
jmp
lret
mov
faddp
add
pop
push
pop
xchg
in
pop
pop
add
dec
je
cmp
addb
adc
subl
out
out
std
shrl
add
add
lock
add
add
add
add
add
add
addb
add
js
add
fadds
add
js
add
rolb
add
lock
add
add
add
add
add
add
push
add
addb
add
lock
add
add
add
add
sbb
add
add
adc
add
lock
add
add
add
pop
add
sldt
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
lock
add
add
add
add
add
add
fadds
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
sub
add
push
add
add
test
add
add
add
add
add
add
push
add
add
add
rolb
add
lock
add
add
add
add
add
add
js
add
sub
add
add
lock
add
add
add
add
add
add
mov
js
add
add
test
add
add
add
add
add
add
enter
cmp
mov
add
add
test
add
add
add
add
dec
add
cmp
add
and
add
lock
add
add
add
add
add
add
adc
add
fdivrs
add
add
add
test
add
add
add
add
add
add
cmp
add
call
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
lock
add
add
add
add
mov
add
addb
add
lock
add
add
add
add
sbb
add
scas
add
adc
add
or
dec
add
dec
add
dec
add
dec
add
add
lock
add
add
add
add
add
add
call
add
add
test
add
add
add
add
sbb
add
add
add
scas
add
pop
add
add
add
add
add
add
add
add
sbb
add
add
orb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rolb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
incl
add
add
incl
add
add
add
and
add
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
outsb
popa
insl
gs
imul
or
and
and
je
jo
cmp
xor
and
ds
fs
jb
jo
imul
arpl
jo
imul
jns
jne
and
jo
imul
cmp
fs
jb
jo
imul
and
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
or
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
add
add
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
pusha
mov
add
add
add
add
test
add
add
add
xor
add
fdivl
add
inc
mov
add
add
add
pushl
mov
add
add
add
add
add
call
add
dec
mov
add
add
add
add
pushl
add
add
add
add
add
lcall
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
outsl
insb
xor
cs
insb
add
add
add
push
outsb
imul
imul
add
add
add
add
add
int3
fnsave
outsb
pushw
add
sub
in
pop
lret
testb
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
arpl
or
or
lcall
push
addl
adc
movsl
and
and
imul
enter
add
or
ret
out
sub
push
or
sbb
adcb
in
and
jb
test
or
sbb
mov
seto
sub
cmp
push
push
push
jno
add
dec
adc
mov
add
add
lock
push
or
sbbb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
ret
jnp
test
rep
out
iret
and
cmp
das
sbb
push
arpl
lcall
test
call
add
dec
sub
xor
and
and
xchg
mov
test
or
fcmovnb
jb
sbb
fwait
xchg
shrl
pop
or
and
nop
cmpsl
add
cwtl
xchg
push
mov
inc
inc
push
push
outsb
add
xchg
stos
sbb
or
cmp
pop
push
xorb
loope
mov
or
lea
push
aas
pop
push
mov
dec
es
sbb
sbb
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
pusha
push
dec
pop
inc
sub
add
movb
add
pop
out
nop
or
mov
pop
movsl
pop
push
sbb
sbb
adc
cmp
pop
pop
pop
pop
ret
bound
adc
cld
dec
mov
sub
loopne
push
add
lret
push
call
mov
ret
rorl
push
imul
sti
scas
rol
push
fs
xor
orl
add
in
and
leave
inc
push
sbbl
mov
shrl
and
adc
lods
and
mov
sub
hlt
cltd
xchg
or
xchg
push
enter
push
xchg
pop
cmp
pop
or
mov
add
push
jmp
daa
add
inc
adc
stos
xchg
jnp
pop
dec
xchg
insb
scas
xor
inc
pop
adc
add
jne
cmp
jge
leave
push
inc
jo
rolb
add
sub
mov
je
dec
mov
xlat
jne
sub
ret
push
shr
popa
rclb
les
pushf
sbb
add
jae
inc
jmp
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
pop
push
mov
cmp
add
in
add
jbe
adc
or
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
rcll
xor
add
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
mov
inc
mov
hlt
push
leave
dec
or
dec
jb
sbb
push
addr16
in
addr16
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
or
add
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
dec
inc
xchg
dec
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
jae
insl
jae
bound
sbb
pop
mov
rclb
scas
or
jno
adc
loope
int
bound
test
xchg
dec
ss
test
adc
out
inc
leave
xchg
into
jge
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
insb
adc
add
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
rclb
cmp
orb
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
addr16
cmp
sti
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
loopne
add
jl
add
orb
add
mov
add
cmp
add
add
inc
add
mov
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
inc
add
rolb
rolb
add
add
add
add
dec
and
fwait
sub
inc
mov
sub
inc
dec
inc
and
test
cmp
jne
xchg
xchg
mov
inc
dec
fwait
nop
test
mov
mov
movsb
dec
dec
inc
jmp
xorb
push
pushl
mov
int
ret
popl
add
jmp
test
dec
inc
sub
inc
push
ret
nop
mov
mov
fwait
pusha
popa
test
je
xorb
dec
inc
jmp
jmp
pusha
popa
pusha
popa
jmp
fwait
nop
fwait
xchg
xchg
ret
dec
inc
dec
inc
cmp
inc
dec
sub
inc
mov
jmp
sub
inc
test
mov
mov
push
push
ret
popa
push
fwait
pusha
popa
ret
