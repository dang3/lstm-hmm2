add
add
add
add
sub
add
js
add
mov
add
add
and
inc
add
add
add
or
xor
add
jne
add
add
xorb
add
call
jne
add
add
xorb
add
pusha
add
xorb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
or
add
add
add
add
add
push
sbb
add
add
add
add
add
and
inc
add
add
add
add
add
add
fadds
add
js
sbb
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
inc
bound
add
add
add
add
add
and
inc
add
add
add
add
add
add
sub
add
call
push
add
mov
add
or
add
add
add
add
add
add
nop
jns
add
add
mov
add
or
add
add
add
add
add
add
clc
jge
add
add
add
and
inc
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
and
inc
add
add
add
add
add
add
enter
sub
add
mov
add
or
add
add
add
add
add
add
add
mov
add
mov
add
or
add
add
add
add
add
add
add
lcall
add
add
add
add
add
and
inc
add
add
add
add
add
add
inc
add
add
xchg
add
mov
add
or
add
add
add
add
add
add
sub
push
add
or
add
add
add
add
add
and
inc
add
add
add
add
add
add
nop
add
addb
add
or
add
add
add
add
add
push
sbb
add
add
add
add
add
and
inc
add
add
add
add
add
add
rolb
add
or
add
add
add
add
add
add
add
push
sbb
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsl
add
dec
add
push
add
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
outsl
add
dec
add
push
add
add
outsl
add
add
add
xor
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
dec
add
push
add
add
add
xor
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
jns
push
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
dec
add
push
add
add
js
add
add
add
add
add
adc
add
add
or
push
jne
sbb
add
add
add
push
add
xor
and
add
add
add
jne
xor
add
add
add
jne
adc
add
add
add
add
xor
add
add
add
jne
and
add
add
add
jne
xor
add
add
add
jne
inc
add
add
and
sub
add
jne
dec
add
add
and
mov
cmp
pusha
add
add
and
test
add
cmp
addb
add
and
sub
add
cmp
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
xchg
aaa
add
xchg
cmp
and
lahf
cmp
add
inc
add
mov
add
mov
add
push
add
push
add
popa
add
add
jle
and
push
add
ret
pop
add
int3
push
xor
popa
add
aad
add
add
bound
dec
shll
push
fldcw
inc
shll
js
dec
push
fidivl
fidivrs
push
fidivrs
lret
insl
add
jno
sub
addb
flds
add
fmull
add
mov
inc
fists
add
lea
data16
add
xchg
add
xchg
add
mov
push
loopne
add
sahf
add
test
gs
add
mov
in
add
xchg
add
xchg
add
cwtl
add
cwtl
add
mov
add
mov
add
mov
jo
mov
jl
mov
xchg
xchg
add
lcall
lret
lods
add
fsubs
add
call
movsl
add
out
add
call
mov
sub
add
jmp
add
icebp
mov
xor
add
loope
add
jmp
add
in
lds
cltd
out
enter
lret
loop
add
les
mov
out
lret
add
out
add
into
add
lock
mov
out
fiaddl
cmpsb
repnz
test
repnz
scas
not
add
hlt
flds
mov
fldl
mov
repz
mov
cmc
faddl
mov
cli
fldl
mov
ljmp
shl
add
in
fiaddl
shl
add
stc
in
xabort
add
or
add
add
add
push
sbb
ja
inc
add
add
add
or
add
aaa
push
push
push
aas
xor
add
pop
add
push
xor
cmp
cs
or
xor
xor
add
add
sbb
adc
sbb
inc
dec
inc
dec
sub
add
add
sub
adc
dec
dec
dec
dec
dec
dec
pop
add
add
cmp
and
jnp
jnp
add
add
popa
pop
cmp
xor
dec
jns
inc
add
add
inc
jno
imul
cmp
sub
inc
jae
jbe
outsb
arpl
push
cmp
add
pusha
push
jbe
outsl
outsb
pop
pop
dec
jl
jae
jno
arpl
add
pop
push
add
incl
add
iret
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sbbb
add
pop
add
cld
aas
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
xor
and
cmp
and
cmp
and
xchg
add
cmp
cmpxchg
add
mov
add
cmp
sub
add
cmpsb
add
xchg
inc
add
cltd
inc
add
cltd
inc
add
nop
inc
add
xchg
dec
add
lods
inc
add
movsb
dec
add
mov
push
add
mov
dec
add
push
add
pop
add
pop
add
add
add
add
outsb
add
add
push
add
jne
pop
mov
add
jge
lods
jl
jnp
jle
sbb
pop
add
ret
sub
inc
add
push
add
iret
pop
add
pusha
add
shlb
lret
shll
shrb
enter
shlb
aad
add
jl
inc
lds
rcrb
jne
pop
lds
lret
dec
dec
push
fidivl
pop
pop
fidivl
push
fidivrs
push
fnstsw
push
fdivrl
insl
js
fdivrl
jo
test
sub
addb
fadds
add
xchg
aaa
fisttpl
add
fmull
add
test
inc
fists
dec
fcoml
add
add
add
mov
jae
addb
filds
add
popl
jo
mov
pusha
aad
add
xchg
add
lahf
add
cwtl
add
addb
loope
add
add
mov
pop
in
add
mov
pop
in
add
add
add
add
mov
pusha
jecxz
add
mov
insb
jecxz
add
xchg
add
add
xchg
add
cltd
add
lcall
jmp
fwait
add
fwait
add
popf
add
add
movsb
add
movsl
add
cmpsl
add
mov
add
scas
add
test
je
test
add
stos
add
mov
jle
mov
mov
xchg
add
rcll
xchg
cwtl
add
fwait
add
jecxz
add
in
add
in
add
xlat
mov
add
fldcw
add
mov
test
fnsave
add
jmp
scas
add
mov
add
call
lods
add
mov
test
mov
sub
mov
xchg
mov
add
ljmp
mov
mov
add
jmp
mov
add
ljmp
mov
in
mov
add
jmp
add
in
ret
add
in
movb
out
enter
roll
hlt
ret
add
cmc
leave
add
out
add
out
int3
add
out
ret
lock
add
lds
mov
repnz
add
in
roll
mov
xlat
add
icebp
rolb
stos
icebp
roll
lods
repnz
stos
repnz
scas
repnz
mov
add
hlt
fadds
mov
flds
mov
faddl
mov
icebp
faddl
mov
cmc
fldl
mov
cli
filds
mov
sti
loop
ret
add
repnz
shl
xlat
add
hlt
flds
neg
add
mul
add
mul
add
mul
add
clc
jecxz
vcvttpd2dqx
sar
add
std
call
add
push
add
add
add
adc
mov
repz
repz
add
add
test
pop
add
add
addb
outsl
sub
add
add
add
add
syscall
adc
outsl
je
je
jl
inc
popf
add
add
add
sbb
add
cmp
bound
pusha
and
add
add
add
xor
xor
sub
outsb
jne
pop
insb
ds
or
add
cmp
xor
lahf
ja
movsl
xchg
ja
inc
and
add
add
sbb
dec
inc
xor
movsl
movsl
movsl
nop
aas
mov
add
add
cmp
dec
inc
or
mov
cmpsl
mov
add
add
jnp
push
push
dec
inc
xor
int
ror
ror
sarb
add
and
jge
push
push
dec
dec
xor
ljmp
add
add
es
into
mov
jns
jp
pop
cmp
sub
add
add
daa
xchg
loopne
fcom
into
ret
mov
addl
add
push
in
loopne
fcomp
into
lret
mov
test
adcb
add
add
out
loopne
xlat
int3
ret
ret
test
and
add
add
out
loopne
fmul
int3
ret
pop
add
mov
out
loopne
xlat
int3
lret
add
in
fxch
push
add
mov
add
add
incl
aas
incl
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
cmp
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
xchg
add
cmpsl
sbb
pop
xchg
add
mov
add
sahf
xor
and
xor
and
cmp
and
add
lcall
and
cmp
add
stos
sub
add
mov
aas
add
mov
add
inc
add
cltd
inc
add
xchg
inc
add
xchg
inc
add
lcall
adc
mov
add
mov
dec
add
stos
dec
add
mov
add
scas
push
add
stos
pop
add
mov
add
mov
pop
add
add
inc
add
dec
add
pop
add
pop
add
push
add
pop
add
pop
add
pop
add
pop
add
imul
scas
data16
push
add
insl
add
popa
add
add
imul
mov
push
add
jae
popa
mov
add
imul
lods
jge
daa
rolb
int
add
iret
pop
add
aad
add
iret
jo
aas
into
js
and
jbe
and
jp
sub
jg
push
iret
popa
add
outsl
add
data16
push
dec
shrl
inc
fldcw
lret
je
inc
int
add
ja
pop
ret
jge
push
lret
jl
dec
inc
sarb
dec
fnstsw
push
pop
push
fnstsw
pop
fdivrl
push
jle
jne
jp
fstpt
sarb
pop
mov
addb
fadds
add
fiaddl
add
fmull
add
addb
int
add
test
dec
fmuls
add
mov
inc
ficoms
add
xchg
add
popl
arpl
addb
fldl
add
test
outsl
enter
lds
add
xchg
add
add
test
pop
jecxz
add
fwait
add
xchg
popa
jecxz
add
mov
jae
mov
jns
lea
arpl
xchg
add
xchg
add
xchg
add
cwtl
add
fwait
add
xchg
add
add
add
popf
add
mov
add
mov
add
cmpsl
add
movsl
add
mov
add
cmpsb
add
mov
add
lods
add
lods
add
test
add
mov
jle
mov
jl
mov
add
int
add
in
add
lcall
aam
add
frstor
add
fisubrs
add
mov
add
fidivs
add
call
test
xchg
in
add
loope
add
ljmp
sub
add
mov
add
in
mov
cwtl
loope
add
icebp
mov
xor
add
mov
stos
ljmp
mov
mov
add
in
lds
lahf
loop
add
les
xchg
repnz
hlt
movb
lock
add
out
lret
loop
add
out
ret
add
repnz
add
ljmp
movsl
repnz
stos
repnz
movsl
clc
aam
test
xlat
add
aad
mov
aam
mov
xlat
add
flds
mov
mul
add
out
lds
ret
add
repnz
add
repz
shl
add
neg
add
mul
add
stc
in
leave
stc
out
std
jmp
add
mul
add
mul
add
clc
in
loopne
out
add
add
add
add
or
or
adc
or
add
cmpsl
inc
cmpb
add
add
adc
adc
or
push
in
clc
clc
cli
cli
clc
clc
xor
add
or
adc
or
xchg
fcomp
out
jmp
fnstenv
add
adc
push
pop
sub
mov
movsl
int3
xlat
xlat
mov
das
add
add
and
int3
mov
mov
mov
add
sbb
adc
daa
dec
mov
mov
mov
add
add
add
add
pop
sbb
or
mov
addl
add
pop
push
or
dec
pop
mov
adcl
push
mov
add
add
add
add
and
dec
adc
jns
xchg
bound
push
sub
add
add
add
sub
dec
dec
dec
dec
es
gs
nop
mov
stos
mov
add
add
add
add
dec
dec
dec
adc
test
nop
mov
mov
add
add
add
cmp
insb
imul
pop
sbb
mov
enter
shrl
add
add
xor
jne
insl
imul
add
mov
sarb
rclb
add
add
add
inc
jnp
test
insl
insb
imul
rcr
repz
rcl
into
repz
add
add
cmp
fcompl
insl
insb
imul
hlt
hlt
hlt
icebp
hlt
icebp
repnz
repz
add
add
add
add
in
movsb
xchg
test
insl
insl
imul
std
cld
idiv
push
inc
add
add
add
add
pop
in
out
in
lret
sahf
lcall
xor
mov
shll
add
add
add
js
in
in
ljmp
les
pop
ja
inc
outsl
lock
in
ljmp
aam
les
xchg
xor
add
add
add
add
stc
clc
lock
ljmp
aam
mov
outsl
cli
cli
cli
clc
clc
lock
out
ljmp
aam
fwait
inc
add
cmc
sti
cli
clc
clc
clc
out
out
ljmp
aam
mov
jecxz
clc
clc
clc
lock
out
in
out
in
aam
lret
add
out
out
in
in
out
loopne
lret
add
lock
in
in
out
jg
add
out
in
in
aam
add
outsl
mov
add
add
out
jmp
inc
sarb
add
incl
add
incl
add
incl
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
loopne
add
rolb
aas
rolb
jg
add
jg
add
incl
add
jmp
add
clc
add
incl
pop
jmp
pop
cld
ud0
lcall
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
aaa
imul
add
dec
add
ja
push
lcall
or
adc
adc
add
mov
add
popf
and
push
nop
sub
push
cltd
sub
pop
nop
xor
and
daa
add
xchg
add
sub
and
sub
and
xor
and
xor
and
add
xchg
add
movsb
sub
push
movsl
and
sbb
and
pop
movsb
das
add
mov
add
scas
cmp
adc
add
mov
cmp
xor
cmp
aas
test
cmp
xor
daa
add
xor
and
cmp
sub
dec
add
mov
add
mov
inc
add
stos
inc
add
stos
inc
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
scas
push
add
cmpsl
pop
add
mov
pop
add
push
add
inc
add
dec
add
pop
add
push
add
pop
add
pop
add
pop
add
push
add
add
jg
jp
jp
inc
test
add
add
add
push
inc
mov
add
add
jns
addr16
bound
popa
mov
imul
jae
jp
sub
inc
add
dec
add
push
add
rcrb
sbb
add
shll
sub
add
jns
and
jp
dec
int
add
imul
inc
xlat
push
dec
jbe
pop
ret
jne
push
enter
les
push
leave
jnp
pop
enter
push
arpl
jno
insl
les
popa
jnp
fs
add
jns
fdivrl
fstpt
jle
addb
mov
xchg
add
addl
fstl
add
mov
push
filds
add
add
lea
inc
ficoms
popa
lds
add
test
jae
test
insb
ret
xchg
add
xchg
add
fwait
add
lcall
ficomps
add
lcall
loop
add
mov
push
jecxz
add
mov
add
mov
add
movsb
add
test
jnp
mov
jge
mov
andb
add
int
add
rcrb
add
sahf
add
jecxz
add
fsubrs
add
fstpt
lods
fldcw
test
movsl
add
jmp
add
in
add
call
scas
add
test
fwait
call
mov
sub
add
mov
add
in
add
in
mov
lahf
out
add
out
mov
add
mov
add
call
mov
mov
mov
add
in
roll
in
les
mov
roll
repnz
repz
add
clc
int3
add
jecxz
add
out
lret
in
int
mov
lock
lods
repz
add
icebp
movl
mov
roll
movsl
repnz
stos
repnz
mov
sti
fiaddl
mov
add
clc
xlat
add
faddl
mov
fildl
mov
mul
add
out
enter
int3
add
repz
add
hlt
fiaddl
ret
add
mul
add
clc
in
enter
lret
add
mul
add
cli
in
add
cld
icebp
add
add
add
adc
add
add
pop
adc
adc
adc
dec
add
add
add
mov
dec
inc
inc
pop
mov
add
add
sbb
sbb
adc
add
add
cmpsl
cld
cli
jmp
push
add
sbb
sbb
sbb
or
push
push
inc
loop
cld
cld
cld
cld
cld
cld
cld
cld
icebp
jne
add
pop
sbb
sbb
sbb
adc
or
lock
lds
mov
adc
push
adc
mov
ror
fsub
jmp
jecxz
rcl
cmp
add
pop
sbb
adc
adc
adc
xchg
mov
popf
lret
lret
fcmovu
fcmove
lret
lret
xchg
lret
add
sbb
sbb
sbb
sub
pop
xchg
xchg
xchg
xchg
lahf
popf
lahf
lret
lret
fcmove
lret
lahf
popf
lret
xchg
xchg
xchg
popf
imul
pop
xor
sbb
sbb
or
jo
xchg
xchg
xchg
lahf
lahf
lahf
lahf
lret
lahf
lahf
lahf
lahf
lret
popf
xchg
xchg
xchg
jo
add
add
xor
sbb
sbb
cmp
pop
adcl
pushf
pushf
xchg
xchg
xchg
lahf
popf
xchg
adcl
sbb
xor
xor
adc
pop
pop
xchg
xchg
xchg
adcl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
arpl
add
xor
adc
and
xorl
xchg
xchg
popf
xchg
xchg
xchg
addl
sbb
xor
xor
sbb
xchg
arpl
popf
adcl
sbbl
add
jns
xor
xor
xchg
xchg
imul
xchg
xchg
lahf
xchg
xchg
xchg
xchg
xchg
mov
subl
add
sbb
dec
xchg
cmpb
jl
and
jo
ja
xchg
mov
xchg
mov
jno
jo
adc
add
xor
popa
popa
popa
popa
xor
xchg
ja
ja
mov
mov
lahf
xchg
mov
pop
jo
add
xor
xchg
jl
jl
gs
xor
das
stos
ja
mov
lds
xchg
xchg
xchg
mov
into
mov
mov
add
add
add
jge
jl
gs
pop
das
mov
xchg
xchg
xchg
xchg
xchg
leave
xchg
xchg
xchg
xchg
xchg
leave
leave
xchg
mov
xor
xchg
jge
jge
jl
gs
pop
cs
mov
stos
mov
stos
leave
stos
stos
stos
stos
stos
mov
xor
add
add
add
cmp
test
jge
jl
jl
xor
js
mov
mov
mov
mov
shlb
iret
stos
stos
in
jbe,pn
cmp
fwait
xchg
test
jle
jge
jl
popa
add
mov
mov
mov
in
pop
add
inc
lcall
jge
jge
jl
xor
shl
mov
rcl
cmc
rcl
iret
shl
iret
mov
add
aam
xchg
xchg
xchg
test
jl
jl
jb
cmc
rcl
div
cmc
cmc
div
cmc
div
hlt
shl
cmc
mov
add
lret
xchg
xchg
test
jge
and
div
div
hlt
hlt
div
hlt
hlt
div
cmc
mull
add
add
add
inc
xchg
loope
aam
xchg
xchg
xchg
test
jge
jge
dec
hlt
idiv
div
std
div
std
idiv
std
jae
add
jns
push
loop
out
fxch
pushf
xchg
xchg
xchg
test
jle
pushf
popf
popf
insb
sub
std
lods
sub
add
inc
jnp
out
out
out
out
out
aam
sahf
sahf
sahf
sahf
mov
ret
popf
popf
addr16
test
sub
add
jns
push
out
out
out
out
ljmp
aam
aam
aam
mov
mov
jg
data16
mov
add
outsl
repz
call
loope
loope
aad
aam
ret
mov
popf
cltd
popf
cltd
lea
mov
repnz
out
out
out
loope
loope
loope
aad
aam
ret
sahf
mov
cltd
fwait
xor
dec
cwtl
je
cli
cli
repnz
out
out
out
out
out
loope
loope
aad
aad
aam
ret
sahf
mov
add
sti
cli
cli
repnz
out
out
call
loope
aad
aad
enter
mov
cmp
mov
cld
cld
sti
cli
cli
cli
repnz
out
out
out
out
loope
out
loope
aad
enter
ret
bound
add
scas
out
cld
cld
cld
cld
cli
cli
cli
repnz
call
loope
fabs
aad
aam
enter
dec
add
add
cld
cld
cld
cld
cli
cli
repnz
lock
out
out
loop
out
loope
loope
aad
enter
add
mov
fsub
clc
cld
cld
cli
cli
cli
repnz
loop
loope
loope
aad
aad
jg
add
clc
cld
cli
cli
cli
repnz
out
out
jmp
call
loope
sahf
cmp
movsl
lods
shl
out
cli
cli
repnz
out
jmp
call
push
add
clc
cli
repnz
out
out
jmp
call
add
add
clc
clc
out
out
out
out
jmp
ffreep
inc
add
add
clc
out
out
out
jmp
lea
add
mov
in
aad
add
mov
add
add
add
incl
add
incl
add
mov
add
decl
incl
add
incb
clc
ud0
add
incb
pusha
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
pop
add
cld
add
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
lock
add
aas
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
incb
add
jg
add
inc
add
incl
add
clc
add
incl
add
incb
add
incl
add
inc
add
incl
add
clc
add
incl
add
incl
incl
add
inc
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
stc
cli
stc
add
lahf
pushf
sbb
repz
sti
stc
add
cld
sti
add
std
sti
add
std
cld
add
cld
add
add
add
in
add
or
lret
xor
test
stos
cmpsl
loopne
xchg
movsl
fidivs
dec
idiv
testl
add
add
sti
stc
add
je
add
sbb
add
cmp
pop
lds
stos
hlt
iret
cld
mov
fdivr
mov
frndint
mov
into
test
cld
cld
add
add
add
in
add
add
sub
inc
lds
addr16
jg
mov
xchg
mov
jnp
scas
push
cwtl
cld
outsb
int3
jnp
stc
std
cli
add
add
add
add
add
sti
cli
add
push
adc
and
sub
jp
popa
in
fs
ljmp
lahf
ljmp
cwtl
jmp
xchg
lcall
mov
inc
into
gs
in
fsts
loopne
loope
sub
push
imulb
rcll
fdivrl
pusha
loopne
jmp
xchg
outsb
in
jmp
mov
push
fidivl
dec
fidivl
andb
add
sti
cli
add
adcb
insl
repz
jle
and
ja
and
pop
std
push
fsubrs
jl
xchg
jg
cltd
incl
in
incl
xchg
push
shrl
mov
mov
add
add
loope
loop
aaa
cwtl
dec
les
sti
fisttpl
std
and
push
pop
shlb
xchg
in
xchg
out
lcall
in
call
out
std
push
pusha
f2xm1
clc
lock
subb
repz
loope
cld
inc
fists
std
xor
test
cmp
gs
lods
call
mov
out
ret
out
std
lahf
loopne
imull
std
sti
add
in
push
inc
mov
ret
sti
xchg
out
cld
outsl
call
mov
std
pop
loopne
std
imul
test
mov
into
xchg
negb
std
sti
add
add
add
shll
std
scas
repnz
std
movsb
icebp
iret
std
pushf
out
enter
sar
ljmp
jns
lods
push
fcoms
mov
sti
stc
add
add
add
add
add
stos
mov
mul
std
mov
hlt
fscale
stos
repnz
mov
in
xchg
jmp
incb
in
cld
push
les
adc
add
add
fdivl
out
mul
cli
mov
hlt
mov
std
test
sar
mov
jmp
std
test
mov
jp
mov
cld
cli
add
add
add
std
cld
add
sti
clc
add
call
mov
xlat
mov
hlt
mov
xlat
std
lods
icebp
sar
movsb
in
lret
cld
bound
jmp
std
std
add
std
cld
add
clc
icebp
or
fnsave
out
lock
clc
xchg
loop
cmc
mov
cld
cld
add
add
add
std
add
std
sti
add
icebp
loopne
stos
loopne
popa
mov
xchg
insl
stc
cld
cli
add
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
rorb
add
pop
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
stc
clc
add
mov
add
add
add
mov
mov
cmp
xchg
push
pop
push
xor
leave
movl
clc
cli
clc
add
cld
stc
add
std
cli
add
cld
stc
add
cld
stc
add
std
sti
add
std
sti
add
add
add
cli
clc
add
push
pop
add
sbb
add
adc
or
lcall
xchg
push
jae
subb
aad
call
jns
orb
cld
cli
add
add
add
je
roll
sbb
add
sbb
sub
cmp
nop
jecxz
cld
mov
stc
mov
clc
mov
cld
jo
mov
jnp
subb
testl
idiv
testl
add
sbb
add
xor
std
jg
stos
std
sub
std
xchg
repz
cmc
leave
fwait
test
decb
in
lods
std
outsb
ficoms
stc
cld
stc
add
add
add
leave
les
or
ret
add
sbb
or
inc
std
push
fidivrl
pop
loop
jne
stos
jnp
mov
jg
mov
test
mov
jge
mov
imul
xchg
std
cmp
push
out
enter
sti
cld
sti
add
add
add
cli
clc
add
pusha
jns
and
add
sbb
imull
mov
xchg
in
insb
jmp
xchg
imul
je
test
imul
xchg
insl
ljmp
push
fdivrl
insb
les
stc
cld
stc
add
add
add
mov
les
mov
in
mov
lock
pusha
cld
sub
inc
std
pop
loop
decb
jne
in
pop
loope
pusha
jecxz
insb
call
mov
pop
loopne
pusha
loop
decb
push
filds
jmp
jmp
clc
cli
clc
add
pop
movsb
dec
in
cmp
fs
cmp
outsb
cld
sbb
push
cld
cmp
pop
push
fdivrl
pop
fstpt
insl
jecxz
gs
push
out
push
filds
push
fidivl
fnstsw
mov
mov
add
enter
mov
dec
les
sub
jge
and
jns
pop
aam
cld
sbb
pop
std
sub
fiadds
incb
pushf
incb
ljmp
jle
pushf
jge
cltd
fdivrl
push
fdivs
cmp
in
call
add
add
add
stc
clc
add
pop
aaa
stos
push
in
dec
cld
sub
cmp
aad
cld
push
shll
adc
sub
jle
xchg
decb
out
incb
jecxz
nop
out
incb
xchg
xchg
jmp
cwtl
pop
fnstenv
pop
mov
clc
add
add
add
add
add
lret
sub
inc
enter
cli
inc
ficoms
cld
xor
xchg
sub
cmp
adc
lcall
jmp
mov
mov
out
pushf
call
cmpsb
mov
pop
clc
mov
mov
sti
std
sti
add
add
add
stc
clc
add
pop
pusha
inc
mov
in
gs
cld
dec
loopne
cld
inc
fists
cld
xor
mov
sub
shlb
dec
ret
mov
mov
mov
out
sar
icebp
leave
mov
out
jmp
mov
cwtl
clc
sti
clc
add
add
add
add
add
enter
xchg
push
lds
xchg
cli
xchg
in
cld
gs
cld
dec
loop
cld
inc
fists
cld
cmp
mov
xor
test
sub
outsb
std
outsb
leave
jnp
lret
icebp
aam
shl
fdivr
lret
dec
repz
lret
icebp
sar
shl
fsin
mov
mov
test
sti
std
sti
add
add
add
cli
clc
add
pop
push
mov
int3
std
movsl
icebp
sar
lahf
lock
std
xchg
mov
std
pusha
jecxz
std
pop
loop
std
fs
std
jne
lods
std
outsb
fstpl
decb
mov
cmpsb
fldt
cld
xor
hlt
out
push
cld
std
cld
add
add
add
add
add
lcall
mov
fscale
mov
xlat
std
stos
repnz
movsb
icebp
iret
std
sahf
out
lret
std
cwtl
out
std
xchg
in
ret
ljmp
and
std
jp
lods
std
jne
test
arpl
xchg
std
pop
rorb
cld
cmp
stos
pop
sti
cld
sti
add
add
add
bound
ret
mov
mul
std
mov
hlt
fscale
scas
repz
std
test
lock
popf
out
leave
std
xchg
in
jmp
std
mov
mov
std
jle
mov
js
lods
std
jo
cmpsb
cld
pop
fsts
fs
clc
add
add
add
bound
xbegin
out
shl
std
mov
cmc
mov
fdivr
lods
repnz
cmpsl
lock
std
mov
in
std
xchg
in
ret
std
mov
mov
std
jns
stos
cld
movsb
pop
rcl
roll
movsb
leave
cmpsb
sub
lods
call
loope
xabort
std
ret
clc
in
mov
cmc
mov
fscale
mov
std
stos
icebp
sar
movsl
lock
lahf
out
leave
std
cltd
in
ljmp
pusha
rcll
aaa
stc
sti
cli
add
add
add
cld
sti
add
icebp
loope
test
mov
test
mov
fdivl
cmc
loopne
shl
cld
mov
hlt
mov
xlat
std
scas
repnz
test
sar
mov
in
cld
mov
mov
xchg
jmp
in
add
add
add
cld
sti
add
cld
cli
add
call
mov
jp
lcall
lock
mov
cmc
fdivr
mov
fscale
mov
aad
lods
icebp
sar
mov
rolb
cli
sti
cli
add
add
add
std
sti
add
sti
clc
add
aam
jge
aad
int
jmp
fdivr
mov
repnz
xchg
out
cli
pop
nop
fs
sti
stc
add
add
add
std
sti
add
cld
cli
add
cmc
jmp
stos
fnsave
mov
lods
fsubrl
test
ret
aad
sti
cld
sti
add
std
cli
add
out
fstps
xchg
movsb
pusha
cmpsb
lds
add
add
add
pop
incl
incb
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
inc
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
jmp
add
sahf
movsl
sahf
or
xor
xchg
adc
cmpb
jmp
add
clc
cli
clc
add
daa
imul
pop
fildl
outsl
push
add
push
movsl
adc
adc
adc
jmp
stc
add
cld
cli
add
cmc
jmp
mov
loop
inc
mov
call
cli
add
std
sti
add
add
add
ja
int
sbbb
add
pop
fildl
outsl
add
pop
mov
sbb
pop
jno
jno
push
mov
lahf
push
mov
cwtl
sti
xchg
loope
sti
sti
inc
mov
int3
add
push
cld
std
cld
add
add
add
cli
clc
add
daa
insb
add
sbb
add
sbb
or
lcall
pop
shrl
hlt
sar
mov
cli
loop
inc
sti
out
sar
mov
in
cld
aaa
lods
inc
shrb
std
sti
add
add
add
ja
int
sbbb
add
sbb
add
movsb
inc
cli
cmp
xchg
lock
mov
not
ljmp
clc
jmp
test
xchg
lock
std
cmp
aam
xor
std
sti
add
add
add
cli
clc
add
sbbl
fildl
sbbb
add
push
out
cmp
outsl
je
movsb
outsb
call
mov
jg
mov
test
mov
incl
icebp
mov
pushl
test
jno
mov
fstp
out
fistl
popf
movsl
popf
or
add
sbbb
add
sbb
aaa
test
cmp
in
pop
loope
jmp
xchg
incl
out
mov
jle
mov
xchg
mov
jge
mov
jp
scas
jp
scas
lcall
mov
gs
incb
imul
mov
mov
std
cli
add
add
add
cli
stc
add
pusha
sub
sub
or
pop
faddl
sbbl
repz
dec
std
cmp
pop
pop
in
addr16
ljmp
lahf
ljmp
fwait
ljmp
cwtl
ljmp
jns
scas
ljmp
mov
jmp
xchg
pushl
movsl
ljmp
pushf
lcall
test
pop
loopne
and
fisttpl
add
add
jle
int
mov
fmull
test
or
and
inc
mov
xor
ds
arpl
insl
ljmp
arpl
xchg
lcall
test
pop
jecxz
jmp
nop
pushl
mov
jmp
mov
pop
loop
jmp
xchg
decl
jp
pop
loope
lcall
sub
inc
cld
popf
rcrb
add
cli
stc
add
bound
sbb
xchg
aaa
repnz
hlt
es
adc
jecxz
incb
decl
jae
addr16
lcall
cmp
popa
loop
pushl
sahf
jmp
mov
pusha
loope
lcall
test
push
xchg
call
ja
dec
fsubrs
pusha
in
pushl
lret
push
cld
xor
cli
clc
add
add
add
test
xor
dec
idivb
leave
jb
cmp
jne
sarb
ds
cld
pop
shll
sbb
xor
pop
loop
decb
imul
jo
xchg
jmp
test
data16
ljmp
mov
jp
mov
ljmp
mov
gs
pushl
xchg
lcall
call
je
push
fdivrl
inc
xlat
insb
std
or
lahf
int3
into
int3
add
add
add
cli
stc
add
arpl
insb
sub
jp
sub
jle
and
jnp
and
js
pop
aam
std
pop
shlb
mov
pop
fstpt
fdivrl
jl
lcall
out
incl
in
mov
sub
incl
out
incl
fldl
jmp
cmp
shll
push
cwtl
push
je
cli
stc
add
add
add
mov
testb
das
flds
and
aad
std
push
shlb
adc
dec
jle
xchg
jl
xchg
lcall
in
jl
xchg
jge
xchg
decl
loop
jge
xchg
jl
xchg
call
out
pushl
test
jo
mov
pop
mov
sahf
inc
stc
cli
stc
add
xor
push
out
int3
jle
cmp
cld
xor
fiaddl
std
xlat
jge
and
ja
adc
inc
cwtl
jmp
test
mov
sahf
call
jecxz
decl
ljmp
mov
fwait
decl
jmp
cltd
call
fisttps
in
fimull
add
add
lea
into
aas
mov
negb
mov
std
cmp
std
fisttpl
std
sub
cmp
xlat
jge
pop
into
insl
std
adc
mov
xchg
in
call
in
mov
cltd
out
lcall
jmp
lcall
out
lcall
jmp
call
in
mov
cld
fs
cli
add
add
add
cli
stc
add
scas
data16
iret
mov
dec
loope
cld
dec
loope
std
inc
fists
cmp
mov
xor
xchg
sub
xlat
jge
pop
mov
std
jno
jle
mov
sar
jmp
ret
pushl
out
ret
repnz
pushl
in
mov
ljmp
jmp
std
das
stos
xor
fucomi
fistl
sahf
movsl
lahf
or
dec
mov
enter
lods
std
dec
loop
std
dec
loope
std
inc
fists
std
cmp
mov
xor
mov
flds
std
and
mov
dec
repz
int
inc
out
dec
repnz
shr
inc
out
enter
fdivrp
ret
inc
icebp
into
std
dec
mov
in
mov
std
sti
add
add
add
cli
stc
add
gs
in
xlat
sahf
cld
mov
out
lret
jmp
mov
std
inc
fists
std
cmp
mov
aaa
fisttpl
std
inc
fisttpl
incb
mul
fcomi
loop
fdiv
fdivr
loopne
hlt
fcomi
loope
fdiv
fdivrp
mov
lods
dec
aad
fldcw
add
add
add
xchg
push
int
mov
aad
stos
repnz
cmpsb
icebp
sar
mov
out
enter
mov
std
addr16
std
gs
std
insl
in
std
jnp
mov
jnp
scas
std
ja
lods
aad
decb
ja
jle
movsb
fsubs
mov
mov
mov
xchg
pop
mov
sub
adcl
add
clc
stc
clc
add
addr16
insb
push
mov
movsb
std
mov
mov
fdivr
lods
repz
test
sar
movsb
lock
std
mov
out
enter
std
xchg
jmp
std
mov
mov
std
test
mov
jg
mov
jp
scas
ja
stos
jno
movsb
pop
rorl
push
int
pop
nop
std
dec
aad
cld
sub
imul
stc
add
add
add
pop
int
ret
jge
mov
neg
mov
hlt
mov
xlat
lods
repnz
test
sar
mov
out
lret
out
xchg
in
xchg
in
sar
ljmp
sub
jle
mov
jp
lods
jne
stos
jo
movsl
imul
std
fcompl
lret
mov
add
xor
rcll
clc
in
ret
mov
neg
mov
mov
fdivr
scas
repz
stos
repnz
cmpsb
icebp
iret
mov
out
leave
cltd
in
xchg
in
ret
jmp
decb
call
mov
jge
mov
js
lods
jo
movsl
std
inc
lret
jp
push
ja
cmp
pop
scas
gs
shll
mul
std
lret
std
stc
out
clc
in
shl
mov
cmc
mov
mov
xlat
lods
repnz
test
lock
mov
out
enter
xchg
jmp
decb
jmp
mov
jg
mov
imul
cld
and
fildl
mov
mov
lret
out
out
fdiv
leave
clc
out
enter
xabort
std
ret
std
mov
cmc
fdivrp
mov
mov
fdivr
scas
repz
stos
repnz
cmpsl
lock
mov
out
leave
lcall
xchg
ljmp
and
std
ss
ljmp
add
sti
std
sti
add
rcrb
mov
scas
out
out
ret
hlt
loope
xbegin
in
shl
std
mov
cmc
mov
mov
xlat
scas
repnz
stos
icebp
sar
cmpsb
lock
mov
in
enter
xchg
jmp
mov
imul
stc
add
add
add
std
cld
add
cmc
in
add
int3
mov
lahf
in
loope
in
hlt
ret
hlt
loope
ret
std
shl
std
mov
cmc
mov
fdivr
mov
aad
lods
repnz
test
out
int3
mov
out
cld
sub
mov
add
std
sti
add
out
fisttpll
xlat
test
lds
xlat
movsl
in
jmp
shl
cld
mov
cmc
fdivr
mov
fscale
mov
xlat
std
scas
repnz
stos
icebp
sar
mov
rcll
cmp
cld
std
cld
add
std
sti
add
call
mov
lds
stos
call
mov
hlt
mov
fdivr
mov
sar
cwtl
call
ds
fcmovu
fildl
sti
std
cld
add
std
sti
add
int
jnp
movl
idivb
out
sar
push
mov
sbbb
add
add
std
sti
add
cmc
in
pop
cltd
rcrl
nop
jb
cltd
fadds
insb
cmp
sti
cli
add
add
add
std
cld
add
std
sti
add
out
fistl
xchg
mov
loop
add
add
add
out
inc
incl
add
incl
add
incl
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
incl
add
inc
add
clc
add
incb
add
inc
pop
clc
pop
decb
ljmp
add
add
add
add
add
add
and
add
add
andb
add
bound
and
xor
push
rcl
roll
int3
int
add
inc
or
cmp
mov
pop
add
or
cmp
dec
pop
dec
and
js
aam
jg
fiadds
je
fldl
cmp
mov
or
jge
add
pusha
adc
rcl
add
add
add
cld
cli
add
std
sti
add
std
sti
add
std
sti
add
cld
cli
add
std
sti
add
std
sti
add
add
add
int
add
dec
push
test
adcb
add
fildl
adcb
add
fiadds
jb
fiaddl
cmp
mov
push
add
femms
inc
pop
pop
pop
adc
aam
add
cli
stc
add
repz
mov
mov
mov
subb
xor
ss
sarl
stos
inc
fnsave
test
aaa
mov
add
dec
aam
aam
cld
std
cld
add
add
add
pop
sbb
jl
fiaddl
jg
fildl
sbbb
add
pop
fildl
jg
fiaddl
jg
fiadds
jae
loope
inc
add
add
add
inc
xchg
inc
fs
sub
inc
mov
sahf
cld
lods
in
enter
fdivrp
leave
cld
call
std
mov
iret
std
nop
loope
cld
pop
ret
insl
cld
pop
lahf
daa
fisubs
data16
in
fmuls
add
test
adcb
add
sbb
add
sbb
add
fisttpl
jl
jecxz
mov
notb
xchg
and
lock
in
inc
mov
int3
inc
cli
loope
sti
in
enter
lret
dec
std
jmp
lret
cld
jmp
enter
enter
cli
loope
mov
fdivr
gs
std
adc
test
cmc
in
add
add
add
push
and
ja
roll
jg
fildl
sbbb
add
sbb
add
sbb
adc
mov
inc
std
sbb
cwtl
stos
cmc
iret
std
stos
cmc
into
mov
mov
fsin
mov
fdivr
mov
loopne
mov
sti
loope
mov
mov
fsin
mov
stos
cmc
iret
stos
cmc
iret
decb
stos
cmp
inc
test
jne
imul
add
add
add
int
add
push
or
fiadds
jg
fildl
sbbb
add
sbb
add
fmull
jl
in
cwtl
xor
push
enter
movsl
xor
sub
decb
icebp
mov
fwait
cmc
leave
sahf
test
mov
cli
fsin
mov
not
popf
cmc
lret
lahf
test
xchg
repz
out
mov
xchg
icebp
mov
std
cmp
inc
insl
lock
add
add
add
dec
and
js
aam
sbbb
add
sbb
add
sbb
add
sbb
std
sbb
test
jg
mov
outsb
call
mov
incb
icebp
mov
decb
test
decb
repnz
decb
jmp
outsb
call
scas
push
xchg
and
mov
add
add
int
add
dec
pop
addl
fiadds
sbbl
fildl
sbbb
add
sbb
or
sbb
sub
inc
std
xor
out
data16
pusha
in
out
jle
mov
jne
stos
jl
mov
xor
incb
clc
lret
hlt
sar
repnz
jbe
stos
jg
mov
push
pushf
in
pusha
in
outsl
jmp
incb
std
sbb
adc
add
add
pop
sbb
jg
fiaddl
test
fildl
sbbb
add
sbb
add
ficoms
mov
and
insb
ljmp
pop
loop
imul
incb
lock
jnp
mov
jns
scas
jp
mov
xchg
mov
jns
mov
jnp
mov
jge
mov
test
mov
pop
jecxz
pop
loope
insb
jmp
js
sub
popa
outsb
sti
cld
sti
add
add
add
add
mov
fisttpll
xchg
fildl
sbbb
add
push
jmp
stos
dec
cld
daa
stos
cmp
xor
dec
push
fidivrs
pop
in
pop
jecxz
jae
movsl
je
cmpsl
jno
movsb
out
push
fwait
insl
jmp
mov
jo
mov
imul
push
call
mov
jbe
test
push
fidivrs
out
cmp
pop
std
or
loop
push
popa
push
and
jge
rorl
mov
or
xchg
faddl
sbbb
mov
stc
push
lret
jl
or
rcrl
in
arpl
xchg
addr16
push
filds
arpl
nop
pusha
in
arpl
xchg
gs
push
out
mov
push
out
fs
in
pusha
in
jo
mov
gs
arpl
xchg
out
cmp
pop
sbb
sahf
add
add
int3
int
add
mov
fists
mov
ficoms
mov
fisttps
test
loopne
mov
std
sub
popa
std
adc
rclb
outsl
jmp
pop
loop
incb
outsl
decb
ja
insl
jmp
cmp
loope
pop
loop
pop
jecxz
popa
in
ja
stos
popa
in
pusha
in
pop
jecxz
pop
loop
pop
loopne
outsl
ljmp
dec
fidivl
push
loope
ja
stos
cmp
pusha
and
pop
js
cld
cli
add
add
add
dec
and
sbbl
in
xchg
xor
out
pop
xchg
xor
push
mov
repnz
xchg
sub
dec
mov
adc
das
incb
push
ds
decb
outsl
push
fdivl
outsl
jmp
cmp
loopne
pop
loope
pusha
loop
popa
loop
jns
test
popa
jecxz
pusha
loop
pop
loope
pop
loopne
pop
filds
push
fdivrl
dec
fidivl
inc
xlat
addr16
pop
jecxz
decb
ja
daa
lds
sbb
cmpsb
iret
ror
add
add
add
int
add
dec
or
mov
ss
sub
cmp
sub
inc
cld
push
jbe
and
jne
adc
xor
pop
loop
pop
jecxz
incb
push
push
fdivrl
jne
lahf
pop
fiadds
loopne
fs
gs
jle
test
gs
fs
arpl
mov
popa
filds
ja
mov
push
fidivl
fsubrs
push
fnstsw
callw
sub
dec
incb
imul
adc
pop
gs
sbb
xchg
fisubl
inc
jmp
dec
fcoml
cld
inc
fimull
cld
cmp
xchg
cs
cld
push
shlb
mov
std
cs
dec
incb
imul
push
fnstenv
pop
fidivl
pop
fdivrl
jl
mov
data16
imul
incb
loope
push
mov
imul
xchg
filds
pop
fdivrl
fstpt
pop
fidivl
pop
filds
incb
push
inc
dec
inc
pop
pop
dec
or
sub
xchg
std
sub
jg
and
jp
and
js
pop
aad
cld
push
aam
cld
push
shll
adc
data16
and
inc
outsb
in
pop
fidivl
fstpt
data16
test
movsl
imul
jae
nop
jle
sahf
incb
stos
xchg
icebp
mov
incb
call
xchg
insb
fisttps
fldl
fdivrl
popa
fstpt
outsl
loop
xor
push
decb
adc
mov
ret
push
popa
push
and
xchg
shrl
mov
xchg
cld
sub
cmp
fdivrs
and
jp
and
js
pop
aam
cld
push
shll
adc
mov
std
push
enter
in
push
fldl
xchg
in
mov
xchg
in
mov
mov
test
jl
xchg
jnp
xchg
xchg
in
mov
jp
xchg
jl
xchg
jg
lcall
in
mov
cltd
lock
insl
fldl
jle
cwtl
cs
dec
cmp
push
std
inc
test
mov
cld
sti
add
add
add
int
add
push
adc
sub
inc
imulb
xchg
cld
xor
fildl
cld
sub
cmp
xlat
jge
and
jnp
and
js
push
shll
sbb
gs
or
xor
test
popf
je
test
jns
mov
xchg
in
mov
mov
loop
jge
xchg
jle
xchg
jg
xchg
incb
in
mov
and
jg
xchg
jg
xchg
jge
xchg
jge
xchg
fwait
out
mov
cwtl
in
mov
and
jae
test
call
inc
std
adc
xchg
add
add
dec
and
das
aad
stos
pop
call
push
loopne
cld
cmp
cld
xor
fiaddl
cld
sub
cmp
and
jnp
and
ja
sbb
sahf
sbb
adc
sub
and
decb
in
mov
test
xchg
xchg
out
nop
out
incb
jecxz
decb
in
mov
in
decb
jecxz
incb
in
lcall
pushf
jmp
decb
jmp
and
fwait
or
adc
int3
int
add
dec
je
sub
fistpl
cld
cmp
fmull
cld
xor
xchg
das
flds
sub
jle
and
jnp
and
js
adc
adc
mov
lret
in
decb
sahf
cmpsb
in
mov
xchg
in
xchg
in
xchg
in
test
mov
xchg
in
xchg
in
nop
in
cwtl
out
sahf
jmp
cltd
decb
icebp
in
std
pop
mov
xor
pop
gs
sbb
xor
cmp
gs
pop
jecxz
cld
inc
fists
cld
cmp
fmull
cld
xor
xchg
xor
test
sub
cmp
fdivrs
and
shll
add
int3
pop
mov
out
cwtl
in
cltd
out
mov
sar
out
fwait
out
pushf
out
pushf
out
mov
sar
out
pushf
out
pushf
out
fwait
out
lods
in
mov
cwtl
in
cwtl
in
mov
fnstcw
popf
push
hlt
movsl
movsl
cmp
add
add
or
test
mov
cmc
je
sahf
cld
dec
loope
cld
dec
loope
cld
inc
fists
cld
fstl
cld
aaa
fisttpl
cld
xor
test
sub
xlat
jg
es
jl
pop
mov
and
cmpsl
ljmp
cmpsb
call
scas
mov
ret
lods
in
mov
test
mov
lods
jmp
mov
mov
mov
mov
test
jmp
lret
cmpsb
call
lods
mov
mov
xor
cmpsl
cmp
sti
std
sti
add
add
add
push
and
cmp
inc
mov
out
shrb
jmp
cld
push
in
std
dec
loop
cld
dec
loope
cld
inc
fists
cld
aas
fstl
cld
cmp
mov
xor
fiaddl
cld
sub
cmp
aad
cld
adc
jno
mov
lock
jmp
mov
cmc
fdivr
repz
ret
icebp
into
inc
lock
dec
hlt
xlat
mov
icebp
int3
inc
repnz
leave
hlt
aad
mov
jmp
mov
icebp
int3
decb
xchg
adc
aam
aam
int3
int
add
push
sbb
cmp
pusha
cmc
xchg
jecxz
cld
fwait
out
enter
mov
std
dec
loop
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
cmp
fmull
xor
xchg
das
flds
cld
daa
sarb
adc
jae
leave
repnz
lret
repz
into
hlt
aam
fdivrp
enter
ret
out
enter
enter
fdivr
ret
out
enter
enter
enter
shl
shl
mov
xchg
cld
pop
xchg
sbb
stos
fsubrs
add
dec
and
xchg
inc
aad
mov
jne
test
sar
mov
out
lret
in
sar
out
std
push
jecxz
cld
dec
loop
cld
dec
loope
cld
inc
fists
cld
fstl
cld
aaa
fisttpl
cld
xor
test
fadds
std
cs
std
push
mov
inc
jmp
loopne
jmp
out
aad
shl
xlat
fdiv
jecxz
shl
xlat
aam
fdivr
in
cmc
fdivr
fdiv
jecxz
xlat
hlt
jo
je
sub
sub
stos
fsubrs
add
int
add
adc
mov
mov
std
cmpsl
repnz
mov
lock
std
lcall
std
out
cld
push
jecxz
cld
dec
loope
cld
inc
fists
cld
inc
ficoms
cld
inc
fisttpll
cld
data16
std
je
stos
std
jb
cmpsl
std
push
enter
test
mov
shr
aad
in
jmp
out
ljmp
stc
jmp
out
jmp
icebp
popf
mov
std
push
fs
xchg
shl
rorl
pop
gs
sbb
mov
ja
mov
frndint
scas
repz
std
stos
repz
test
sar
movsl
icebp
sar
mov
out
lret
out
enter
sar
ljmp
jbe
mov
jne
mov
jp
mov
sub
mov
jg
mov
jge
mov
jns
scas
std
jbe
stos
std
outsb
fbld
xor
jbe
jns
xchg
rcrb
cltd
rcrb
push
mov
xor
dec
std
or
fs
mov
or
test
filds
insl
hlt
sahf
in
std
mov
mov
scas
hlt
xlat
std
lods
repz
stos
repnz
cmpsl
icebp
sar
movsb
icebp
iret
std
mov
out
lret
out
enter
in
ret
std
xchg
jmp
std
jmp
std
mov
mov
std
test
mov
std
jg
mov
jl
mov
js
scas
std
jbe
stos
std
jb
test
imul
std
push
iret
cmp
les
inc
shrb
shrl
lret
jns
pop
aad
pop
fstpl
negb
sbb
push
bound
xor
mov
pusha
lds
mov
cmc
fdivrp
mov
fdivr
mov
mov
fdivr
scas
repz
lods
repnz
test
icebp
sar
mov
lock
std
popf
out
leave
std
fwait
out
std
xchg
in
in
ret
std
xchg
in
sar
jmp
std
mov
mov
std
test
mov
and
mov
jl
mov
js
lods
std
jne
stos
std
jb
cmpsl
std
outsb
loope
insb
loopne
std
push
mov
std
fstpl
cld
or
lcall
lret
add
mov
fisttps
jne
movsb
out
std
mov
mul
std
mov
cmc
mov
mov
fscale
mov
xlat
std
lods
repnz
stos
repnz
test
sar
movsl
icebp
iret
std
mov
out
lret
std
pushf
out
leave
std
cltd
out
std
xchg
in
std
xchg
in
ret
in
sar
jmp
std
mov
mov
std
test
mov
and
mov
jnp
scas
std
js
lods
std
je
stos
std
jno
cmpsl
std
outsb
loope
std
push
mov
adc
pop
inc
sub
add
add
dec
and
lcall
jge
cld
ret
clc
in
sar
std
mov
mul
std
mov
cmc
fdivr
mov
mov
fdivr
scas
repz
std
lods
repnz
stos
repnz
cmpsl
icebp
sar
movsb
lock
std
mov
out
lret
out
enter
std
xchg
in
ret
std
xchg
in
sar
jmp
std
mov
mov
std
xchg
mov
and
std
and
std
jge
mov
jp
scas
std
jbe
stos
std
jno
cmpsb
std
insb
loopne
std
ss
js
adc
ret
or
rclb
scas
in
into
std
leave
stc
jmp
std
vcvttpd2dq
ret
clc
in
shl
std
mov
neg
std
mov
hlt
mov
fscale
mov
xlat
std
scas
repnz
stos
repnz
test
icebp
iret
std
mov
out
lret
std
popf
out
leave
std
lcall
std
xchg
in
ret
jmp
std
mov
mov
std
mov
mov
std
and
std
jg
mov
jl
scas
std
jbe
test
pop
fstpl
shlb
jo
xchg
mov
lods
dec
lods
pusha
enter
stc
ljmp
stc
jmp
std
stc
out
clc
in
ret
std
mov
mul
std
mov
cmc
fdivr
mov
mov
fdivr
mov
std
lods
repnz
stos
repnz
test
sar
movsl
lock
std
mov
out
lret
out
enter
std
xchg
in
ret
std
xchg
jmp
std
nop
ljmp
mov
mov
std
test
mov
jg
scas
ja
lods
std
sub
sub
add
add
sti
stc
add
outsl
xor
nop
shll
out
ret
stc
int3
clc
call
cld
lret
cld
stc
out
stc
out
ret
clc
in
shl
std
mov
neg
std
mov
hlt
mov
fscale
mov
xlat
std
scas
repz
std
lods
repnz
stos
icebp
sar
cmpsl
lock
std
movsb
lock
mov
out
leave
std
fwait
in
std
cwtl
in
jmp
std
xchg
jmp
std
mov
mov
incb
fsts
cmpsb
lcall
add
insb
dec
push
mov
lahf
lret
mov
mov
in
ljmp
lret
std
leave
stc
call
std
std
ret
std
shl
std
mov
neg
std
mov
hlt
mov
fdivr
mov
std
scas
repnz
stos
repnz
test
sar
cmpsb
lock
std
mov
out
lret
out
enter
std
cwtl
in
std
xchg
jmp
std
xchg
ljmp
jl
mov
push
test
call
in
in
test
stos
xor
lds
dec
mov
mov
xchg
fadd
lock
enter
enter
xabort
cld
ret
clc
jecxz
shl
std
mov
neg
std
mov
cmc
mov
fscale
mov
xlat
std
mov
aad
lods
repnz
stos
icebp
sar
test
iret
std
movsl
out
int
mov
out
leave
std
popf
in
std
cltd
in
std
xchg
ljmp
dec
rorl
jnp
mov
sti
cld
sti
add
in
flds
mov
mov
mov
add
fdivs
loopne
out
bnd
sti
mul
cld
cld
ret
mul
cld
shl
std
mov
neg
std
mov
cmc
mov
fdivr
mov
std
scas
repnz
lods
icebp
sar
stos
lock
cmpsl
lock
std
movsb
out
int3
std
mov
in
enter
mov
std
pop
xchg
xor
jnp
jl
idiv
clc
add
les
push
mov
xchg
enter
xlat
mov
jmp
test
mul
std
ret
cld
mov
neg
std
mov
cmc
mov
fscale
mov
xlat
std
mov
aad
scas
repnz
lods
icebp
sar
test
out
int
mov
call
outsl
cmc
adc
dec
hlt
stc
hlt
add
mov
arpl
xchg
ffreep
fsubrl
out
fsincos
ret
cld
shl
std
mov
cmc
mov
hlt
mov
fdivr
mov
std
mov
aam
lods
icebp
sar
stos
lock
mov
fbld
stos
movsl
stos
cmpsb
push
sti
cld
sti
add
div
add
mov
je
je
test
loop
call
mov
cmc
fdivrp
mov
hlt
mov
fscale
mov
xlat
std
mov
aad
lods
out
into
lcall
call
hlt
stc
hlt
add
ljmp
dec
mov
mov
sbb
enter
sar
mov
hlt
fdivr
mov
hlt
fscale
mov
std
stos
out
int
fcoms
jns
aad
add
add
add
std
cld
add
ret
cmp
rorl
out
repnz
repnz
mov
sar
xchg
jmp
cmp
outsb
gs
cli
cld
cli
add
mov
jl
mov
lahf
aad
loop
in
ljmp
sbb
add
add
cld
sti
add
out
fisttpll
xchg
iret
xchg
inc
pop
mov
push
and
das
popf
cwtl
fwait
cwtl
push
cli
cld
cli
add
out
fmull
incl
add
decl
incl
add
incb
incl
add
incb
clc
ud0
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
pop
add
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
rolb
add
jg
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
inc
add
jg
add
push
add
incl
add
incb
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
incl
add
inc
incl
add
add
add
add
addb
add
add
add
add
add
inc
add
addb
push
jg
jg
add
add
add
inc
inc
inc
or
add
add
add
add
fildl
aas
add
add
add
add
xor
inc
or
add
add
jg
add
fwait
add
loopne
adcb
jnp
in
inc
add
add
add
add
xor
inc
or
add
add
std
cld
add
std
cld
add
std
cld
add
add
add
add
add
pop
fildl
sbbb
add
adc
add
in
inc
add
add
add
add
cmp
inc
or
sti
std
sti
add
cld
cli
add
addb
andb
cmpb
cmpl
lds
inc
mov
cld
cli
add
std
sti
add
add
add
jg
add
fwait
add
sbb
add
sbb
add
sbb
add
or
add
roll
add
add
cmp
inc
or
stc
sti
stc
add
inc
ja
mov
lds
xchg
or
std
aas
mov
std
dec
les
push
jo
dec
les
aas
mov
std
and
xchg
or
lds
inc
ja
loope
sbb
std
sti
add
add
add
add
add
pop
fildl
sbbb
add
sbb
add
sbb
add
sbb
add
loope
jle
out
add
roll
or
add
sbb
dec
add
xchg
or
xor
fcompl
dec
cld
out
sar
ljmp
cld
out
call
cld
out
call
sti
ljmp
neg
jg
sahf
xor
xchg
or
inc
test
mov
add
add
add
jg
add
fwait
add
sbb
add
sbb
add
sbb
add
sbb
add
ficoms
jns
in
adc
sub
or
and
add
add
add
dec
cltd
in
mov
inc
sti
in
int3
cld
jmp
dec
cld
ljmp
in
dec
std
in
dec
cld
ljmp
cld
jmp
inc
cli
loope
cltd
in
mov
std
push
test
cli
add
add
add
add
add
pop
fildl
sbbb
add
sbb
add
sbb
add
sbb
vmwrite
out
test
cli
xor
dec
std
adc
adc
adc
mov
mov
mov
clc
fcos
mov
cli
mov
sti
jecxz
sar
inc
std
out
sar
mov
cli
loopne
mov
cli
mov
fcos
mov
stc
outsb
std
push
mov
mov
jg
jg
add
fwait
add
sbb
add
sbb
add
sbb
add
sbb
add
ficomps
jl
hlt
sub
loopne
std
daa
mov
xor
xchg
lock
lcall
repz
jmp
cli
fcos
test
clc
ljmp
cli
mov
loope
mov
scas
stc
lods
clc
xlat
ljmp
cli
mov
repz
icebp
sar
stc
xlat
call
xor
add
loope
or
add
add
add
pop
fildl
sbbb
add
sbb
add
sbb
add
sbb
adc
ljmp
mov
xor
mov
decl
out
mov
lock
call
cmc
enter
int3
lcall
clc
sar
cmpsl
cli
fcos
mov
not
lcall
cmc
leave
lcall
test
decl
out
mov
popf
test
xor
push
mov
loope
add
jg
jg
add
fwait
add
sbb
add
sbb
add
sbb
add
sbb
add
fistps
sbbb
inc
mov
dec
push
mov
xchg
incb
jmp
pushl
mov
jl
lods
call
lock
xchg
mov
decl
cmc
lcall
cmc
decl
repz
repnz
call
out
scas
pushl
cmpsl
pushl
mov
incl
xchg
pop
mov
inc
xchg
std
sti
add
add
add
add
in
sbbb
add
sbb
add
sbb
add
sbb
add
push
in
adc
and
gs
test
push
xchg
or
dec
aad
pop
jecxz
jnp
scas
lcall
mov
fs
ljmp
fwait
jnp
mov
jl
mov
jbe
lods
jp
mov
jge
mov
jg
mov
decl
repnz
jge
mov
jp
mov
ja
lods
jge
mov
jnp
mov
imul
xchg
jmp
mov
jnp
scas
lcall
mov
dec
aad
incb
xchg
or
jg
jg
jg
jg
add
fwait
add
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
pop
test
stc
push
ret
jo
push
pushf
and
sub
jbe
jnp
scas
lcall
xchg
pop
jecxz
jmp
nop
jmp
xchg
incl
movsb
jge
mov
mov
sar
test
mov
decl
cli
into
decl
test
mov
incl
lock
jo
movsb
incl
xchg
jmp
xchg
lcall
mov
pop
loop
jp
scas
decl
jbe
sub
inc
incb
loope
add
add
add
in
test
fildl
test
faddl
sbbl
sbbb
add
sbb
add
and
sbb
sub
pop
ja
push
lcall
push
fidivrs
jno
movsb
call
lcall
test
pop
jecxz
pushl
cmpsl
decl
repnz
pushl
cmpsl
pushl
cmpsl
pushl
stos
pushl
stos
decl
in
lods
pushl
stos
pushl
test
jb
cmpsl
jns
scas
incl
clc
pushl
mov
lcall
xchg
push
loopne
pushl
movsb
call
incl
decb
lcall
jg
jg
add
fwait
or
fmull
xchg
pop
test
faddl
sbbl
sbbb
add
sbb
adc
int
std
push
pushf
push
sub
ljmp
sahf
call
call
jge
imul
mov
ja
stos
jns
scas
jmp
xchg
ljmp
lcall
jmp
mov
incl
jmp
ljmp
mov
ljmp
ljmp
lcall
out
scas
jl
mov
xor
xchg
call
jge
push
loopne
ljmp
lahf
incl
imul
add
cld
cli
add
add
add
add
in
mov
fisttpl
mov
fmull
xchg
pop
test
faddl
sbbb
sbbl
repz
test
push
xchg
or
aaa
rcrb
aas
xlat
pushl
movsl
decl
js
js
lods
ljmp
fwait
call
cmp
ljmp
popa
in
jmp
jmp
xchg
ljmp
cltd
ljmp
fwait
ljmp
popf
incl
popf
ljmp
fwait
ljmp
cltd
jmp
xchg
jmp
jmp
nop
ljmp
pushf
ljmp
lahf
lcall
test
jb
movsl
pushl
mov
pushl
movsl
incl
data16
cmp
pop
decb
xchg
or
jg
andb
add
add
jg
add
fwait
adc
fcoml
mov
or
mov
fmull
xchg
pop
test
faddl
sbbl
adc
xchg
std
adc
inc
std
adc
pop
incl
pushl
test
call
jge
dec
fnstsw
push
fidivrs
jne
test
pop
loop
lcall
mov
pop
jecxz
jmp
jmp
xchg
jmp
jmp
xchg
incl
out
jmp
xchg
jmp
xchg
jmp
nop
lcall
lcall
mov
pop
jecxz
pushl
test
push
fistpll
dec
fnstsw
pop
loop
pushl
test
incl
push
call
movsl
and
jle
jle
add
add
in
lea
fcoml
mov
ficoms
mov
fists
mov
fisttps
test
loopne
test
loopne
andb
sbb
push
std
inc
fmuls
sbb
rcll
dec
fnsave
xor
incl
outsb
incl
insl
decl
jae
dec
fnstsw
jbe
stos
call
cmp
loope
lcall
xchg
pop
loop
lcall
mov
pusha
in
jmp
mov
jge
mov
popa
in
jmp
lcall
mov
pop
loop
lcall
xchg
pop
loope
call
cmp
dec
fnstsw
dec
fisubrl
push
fidivrs
xchg
mov
pushl
push
lcall
mov
stos
cli
cld
cli
add
add
add
jg
add
fwait
pop
lea
loopne
mov
ljmp
xor
adc
sub
adc
sub
sbb
xchg
std
push
shlb
push
cwtl
adc
xor
push
jp
scas
decl
jae
ds
arpl
dec
fldcw
dec
fidivl
push
fdivrl
js
test
lcall
cmp
loopne
lcall
mov
pop
loop
jmp
mov
popa
jecxz
jg
mov
popa
jecxz
jmp
mov
pop
loop
lcall
mov
pop
loope
lcall
cmp
filds
call
js
dec
fldcw
ds
call
jge
insl
ljmp
and
cmp
aam
mov
add
add
mov
in
xchg
cmp
and
inc
mull
mov
cmp
and
ss
and
cs
sbb
daa
sti
sbb
std
xor
cmp
add
inc
push
fistpll
xor
cmp
pop
incl
decw
jo
push
fidivl
push
fdivrl
jge
stos
lcall
cmp
filds
jmp
mov
mov
arpl
mov
fs
incl
mov
arpl
mov
mov
popa
loope
lcall
xchg
pop
filds
jle
stos
call
jp
push
dec
fnstenv
inc
xlat
addr16
cmp
pop
decl
fldcw
and
xchg
cmc
add
add
add
jg
add
fwait
sbb
mov
xor
cmp
fs
dec
ret
insl
std
pop
jne
arpl
test
push
int
std
arpl
mov
pop
fistl
std
push
shll
add
inc
ljmp
xchg
jmp
nop
cmp
pop
call
outsl
call
lcall
ja
pop
fdivrl
sub
lcall
cmp
arpl
xchg
fs
jmp
mov
loopew
ljmp
mov
mov
mov
push
loope
jmp
mov
gs
jmp
xchg
popa
filds
sub
lcall
jnp
pop
push
fidivl
push
fsubrs
cmp
pop
jmp
xchg
ljmp
pushf
jmp
mov
std
add
add
addb
add
mov
in
xchg
inc
fbld
stos
inc
imull
jns
inc
fisttpl
std
sub
aam
std
and
ja
and
ja
and
jbe
pop
aam
std
pop
aam
std
push
shll
add
push
inc
fisubrl
in
decl
call
jb
pop
fidivl
pop
fstpt
pusha
fnstsw
xchg
scas
jmp
jmp
test
push
loope
ljmp
mov
imul
ljmp
decl
loop
ljmp
mov
push
mov
imul
mov
data16
incl
fnstsw
pop
fstpt
pop
fidivl
pop
fnstenv
dec
push
call
jg
xor
mov
std
add
add
jg
jg
add
add
loopne
cmpsl
dec
jmp
mov
scas
cld
sub
jg
xlat
jge
and
jnp
and
jns
and
js
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
push
shlb
add
mov
and
inc
lcall
xchg
pop
fstpt
pop
fidivl
popa
fstpt
arpl
jge
data16
ljmp
xchg
imul
ljmp
mov
jo
jnp
fwait
incl
in
lods
lcall
in
lods
incl
out
pushl
ljmp
mov
insb
loopne
ljmp
xchg
mov
mov
data16
jmp
jp
pop
fidivrl
pop
fstpt
pop
loop
ljmp
iret
dec
call
jge
add
inc
or
add
add
mov
in
fwait
dec
fildll
scas
dec
imull
jnp
inc
fmull
std
sub
jg
xlat
jge
and
jnp
and
jp
and
js
pop
aad
std
pop
aam
std
pop
aam
std
push
shlb
cltd
pop
decb
jno
push
leave
cmp
pop
fdivrl
jno
mov
fstpt
push
fldl
call
xchg
call
lock
decl
out
jle
lcall
in
incl
ljmp
xchg
lock
jnp
xchg
call
test
imul
ljmp
jle
fstpt
jo
mov
pop
fnstsw
pop
leave
cmp
push
jnp
add
add
add
add
add
jg
add
add
loopne
stos
push
ljmp
mov
xor
xchg
das
fiaddl
sub
cmp
xlat
jle
and
jl
and
jp
and
js
pop
aad
std
pop
aam
std
push
shll
movsb
sub
and
xor
pop
fnstenv
test
popf
ljmp
ljmp
cmp
fiadds
ljmp
mov
jge
xchg
js
jns
nop
jp
xchg
jp
xchg
jnp
xchg
lcall
loop
jp
xchg
jp
xchg
jns
nop
jns
jge
xchg
call
test
pushl
xchg
outsl
fldl
incl
fidivl
sbb
xor
cs
push
stos
sti
std
sti
add
add
add
mov
in
popf
push
fildll
dec
mull
js
dec
ficoms
std
xor
xchg
das
fiaddl
sub
cmp
xlat
jle
and
jp
and
js
pop
aad
std
push
aam
std
adc
paddd
sub
push
aam
lcall
fiadds
lcall
in
mov
sahf
out
mov
jle
xchg
jg
xchg
jg
xchg
incl
loop
incl
lock
incl
loop
jg
xchg
jg
xchg
jle
xchg
jg
xchg
lcall
in
mov
lcall
pushl
lcall
aad
call
mov
jle
jg
jg
add
add
loopne
lods
pop
ljmp
mov
cmp
mov
cmp
mov
xor
fildl
std
sub
fadds
std
and
jp
and
js
pop
aam
std
sbb
fs
add
and
push
aam
jmp
mov
mov
out
incl
ljmp
test
xchg
incl
jecxz
incl
jecxz
decl
icebp
sar
in
incl
jecxz
incl
loop
incl
out
lcall
loope
call
out
mov
jmp
aam
decl
shlb
jg
jg
add
mov
in
mov
push
mull
js
push
loope
std
cmp
fmull
std
xor
fildl
std
flds
std
sub
jg
xlat
jge
and
jnp
and
js
pop
aam
std
pop
pushf
sbb
or
pop
lcall
lock
jmp
xchg
decl
out
jmp
fwait
decl
in
decl
in
decl
icebp
ret
decl
in
decl
in
decl
in
jmp
movsl
decl
loop
lcall
out
mov
decl
pop
decl
scas
pop
incb
cli
add
add
add
jg
add
add
loopne
mov
ljmp
mov
std
inc
fists
cmp
std
cmp
mov
fisttpl
std
xor
xchg
flds
sub
cmp
xlat
jge
and
jnp
and
jns
adc
dec
std
add
cmp
loop
mov
jecxz
call
in
call
repnz
call
in
call
in
call
out
pushl
out
call
in
call
in
call
icebp
call
in
call
jecxz
mov
jecxz
ljmp
cmp
std
jg
jg
add
nop
sub
cmp
arpl
ss
mull
jnp
pop
jecxz
std
inc
loopne
std
inc
fists
std
ficoms
std
cmp
std
aaa
fisttpl
std
xor
xchg
das
flds
std
sub
cmp
xlat
jle
and
jnp
and
jbe
push
lcall
jecxz
dec
cli
loopne
mov
in
lcall
out
mov
out
lcall
out
lcall
out
lcall
repnz
out
lcall
out
lcall
out
lcall
repz
fwait
out
lcall
in
lcall
cli
loopne
jecxz
decl
stos
adc
add
cld
cli
add
add
add
jg
add
mov
insb
jmp
jmp
popf
std
dec
loope
std
inc
loopne
std
inc
fists
std
aas
ficoms
std
cmp
std
aaa
fisttpl
std
xor
xchg
xor
test
sub
fadds
std
and
ret
pop
std
add
mov
hlt
sar
mov
call
lods
pushl
out
sar
jmp
mov
cmpsl
jmp
mov
cmpsl
jmp
iret
jmp
jmp
mov
cmpsb
jmp
scas
pushl
out
ret
call
lods
jmp
repz
mov
int
incb
add
cmp
add
add
xchg
xor
inc
test
popa
cmc
imul
lods
std
push
jecxz
std
dec
loop
std
dec
loope
std
dec
loopne
std
inc
loopne
std
inc
fists
std
cmp
fmull
std
fisttpl
std
xor
test
flds
std
sub
jle
and
scas
cmp
or
mov
icebp
lret
ljmp
ljmp
lret
pushl
icebp
lret
dec
cmc
aam
enter
hlt
aad
sar
loop
hlt
aad
enter
enter
mov
in
mov
pushl
ljmp
mov
icebp
leave
pushl
paddw
inc
xchg
std
sti
add
add
add
jg
add
cmpsb
fs
mov
call
lods
lock
std
mov
sar
in
std
push
jecxz
std
dec
loop
std
dec
loope
std
dec
loopne
std
inc
loopne
std
inc
fists
std
fstl
std
cmp
mov
fisttpl
std
xor
xchg
das
flds
sub
jg
es
std
or
dec
mov
mov
inc
icebp
int3
mov
in
mov
call
clc
loop
ret
mov
in
sar
in
sar
cmc
fcos
mov
in
sar
in
sar
lock
clc
loop
aam
loope
mov
in
mov
dec
neg
pushl
mov
std
add
loope
add
add
xchg
xor
dec
lods
jb
inc
mov
mov
movsb
icebp
into
std
popf
out
leave
std
xchg
in
ret
std
pop
out
std
push
jecxz
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loopne
std
inc
fists
std
fstl
std
cmp
std
aaa
fisttpl
std
xor
xchg
das
flds
sub
cmp
shlb
or
cmp
mov
neg
dec
repz
call
cmc
shl
xlat
in
icebp
lret
inc
lock
lock
lock
neg
inc
lock
lock
lock
lock
clc
in
shl
xlat
call
cmc
lret
call
clc
loope
mov
test
add
or
jg
jg
add
stos
imul
mov
dec
cld
mov
aam
mov
lock
sahf
out
lret
out
std
jno
mov
push
jecxz
std
push
jecxz
std
dec
loop
std
dec
loope
std
inc
loopne
std
inc
fists
std
aas
fstl
std
cmp
std
cmp
mov
xor
fiaddl
std
flds
std
sub
jnp
and
sub
test
mul
jmp
sti
in
call
hlt
call
cmc
loopne
call
call
hlt
aad
shl
aad
fdivrp
out
shl
aad
shl
aad
shl
aad
out
xlat
neg
call
hlt
jmp
cli
jmp
fdivrp
out
stos
loopne
daa
sahf
sub
push
mov
mov
add
xchg
aaa
in
mov
fiadds
jno
jb
mov
lods
repnz
cmpsl
repnz
movsb
icebp
iret
mov
lock
std
popf
out
lret
in
sar
out
std
push
jecxz
std
dec
loop
std
dec
loop
std
dec
loopne
std
inc
fists
std
inc
ficoms
std
cmp
mov
cmp
mov
fisttpl
std
cmp
mov
push
fistps
std
jb
cmpsl
incb
adc
insl
fdiv
fdivrp
jmp
stc
call
jmp
clc
jecxz
fdivrp
loop
out
in
fdivrp
loop
jecxz
out
in
jmp
clc
out
loopne
in
call
repz
push
insb
decb
lea
cmc
inc
mov
cli
add
add
add
jg
add
lods
jb
push
mov
dec
cld
mov
std
lods
repz
stos
repz
test
sar
movsl
icebp
sar
mov
lock
sahf
lock
std
pushf
out
leave
std
in
sar
jmp
cmpsb
std
dec
loop
std
dec
loope
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
pop
loop
std
outsb
in
std
jge
mov
jl
mov
jns
scas
std
jbe
lods
je
stos
push
mov
pop
xchg
sbb
imul
icebp
in
sti
repnz
cld
idiv
out
sti
repz
out
sti
repz
out
sti
repnz
cld
idiv
in
sti
icebp
in
cli
icebp
mov
mov
pop
incb
xchg
adc
add
add
mov
add
add
xchg
cmp
push
mov
fldl
jb
jae
mov
mov
fscale
mov
fdivr
lods
repz
stos
repz
test
repnz
movsl
icebp
sar
mov
lock
sahf
out
lret
out
enter
std
xchg
out
jmp
std
mov
mov
std
test
mov
std
xchg
mov
std
test
mov
sub
mov
jge
mov
jnp
mov
js
scas
jbe
lods
jae
test
cmp
mov
adc
imul
jge
jg
push
insb
decb
dec
adc
adc
xor
incb
outsl
pop
mov
inc
inc
pop
jg
jg
add
mov
loopne
rorb
mov
hlt
mov
mov
fdivr
scas
repz
lods
repz
stos
repnz
test
sar
cmpsb
icebp
sar
movsb
icebp
iret
mov
lock
popf
lock
out
enter
xchg
in
xchg
in
ret
in
sar
jmp
decb
jmp
decb
jmp
mov
sub
mov
jge
mov
jp
mov
ja
lods
jne
stos
jae
test
outsl
loopne
data16
incb
gs
aaa
mov
aaa
mov
ss
incb
decb
pop
aad
popa
fstpl
or
sub
das
add
cwtl
cmp
fisttpll
hlt
je
mov
mov
neg
mov
fdivr
mov
mov
fsin
mov
fdivr
scas
repz
lods
repnz
stos
repnz
cmpsl
repnz
movsl
icebp
sar
mov
lock
lahf
lock
popf
out
leave
fwait
out
cwtl
out
xchg
in
xchg
in
ret
in
sar
jmp
decb
mov
incb
call
mov
jle
mov
jl
mov
jp
scas
js
lods
jne
stos
jb
test
jo
cmpsb
insl
loope
insb
loopne
push
mov
push
ficomps
pusha
loopne
push
ret
add
mov
jg
jg
jg
add
mov
loopne
les
cld
mov
mul
mov
neg
mov
mov
mov
mov
fdivr
scas
repz
lods
repz
stos
repnz
test
icebp
sar
movsl
icebp
iret
mov
lock
sahf
out
lret
out
enter
xchg
in
in
ret
xchg
in
ret
in
sar
jmp
decb
mov
incb
call
mov
jle
mov
jl
mov
jp
scas
ja
lods
jne
stos
jb
test
jo
cmpsl
outsb
loope
insb
loopne
imul
fstpl
loopne
cmp
mov
pop
mov
fldl
inc
adc
add
add
lcall
push
lds
std
ret
std
sar
mov
mul
mov
neg
mov
fdivr
mov
mov
fsin
mov
fdivr
scas
repz
lods
repz
stos
repnz
test
sar
cmpsb
icebp
sar
movsb
icebp
into
mov
lock
popf
out
lret
out
enter
xchg
in
in
ret
xchg
in
sar
jmp
decb
ljmp
xchg
mov
incb
out
jge
mov
jnp
scas
jns
lods
jbe
stos
je
test
outsl
loope
insl
loopne
push
mov
adc
add
add
add
add
add
pop
mov
pushf
out
mov
cld
ret
std
stc
out
ret
stc
in
sar
mov
mul
mov
neg
mov
cmc
mov
mov
fdivr
mov
xlat
scas
repz
lods
repnz
stos
repnz
test
sar
cmpsb
icebp
iret
mov
lock
lahf
out
lret
out
leave
fwait
out
cwtl
in
in
xchg
in
ret
in
sar
jmp
decb
jmp
mov
incb
out
jg
mov
jge
mov
jnp
scas
js
lods
jne
stos
jb
test
insb
fisubs
cs
js
add
or
add
add
pushf
inc
in
mov
xchg
jp
xchg
std
leave
cli
call
inc
stc
out
stc
in
ret
inc
clc
jecxz
mov
mul
mov
cmc
mov
fdivr
mov
mov
fsin
mov
fdivr
scas
repz
lods
repnz
stos
repnz
test
icebp
sar
movsl
lock
mov
out
lret
sahf
out
leave
pushf
out
enter
xchg
in
in
ret
xchg
in
sar
jmp
decb
ljmp
xchg
mov
incb
out
jle
mov
jl
mov
jns
lods
jne
test
push
fcoml
repz
add
add
push
mov
outsb
shlb
sti
xabort
std
lret
cli
ljmp
cli
call
inc
stc
out
ret
clc
in
ret
inc
mul
mov
neg
mov
cmc
mov
mov
mov
fdivr
mov
xlat
scas
repz
lods
repnz
stos
repnz
test
sar
cmpsb
icebp
iret
movsb
lock
mov
out
lret
out
leave
fwait
out
cltd
in
xchg
in
xchg
in
ret
jmp
nop
ljmp
mov
mov
incb
out
incb
out
jge
mov
ja
test
jno
stos
and
arpl
add
mov
jg
mov
test
cmp
jns
xchg
std
into
cli
jmp
int
jmp
int
ljmp
cli
jmp
inc
stc
out
stc
in
ret
clc
in
sar
mov
mul
mov
cmc
mov
hlt
mov
fsin
mov
fdivr
scas
repz
lods
repnz
stos
repnz
stos
icebp
sar
test
sar
movsl
lock
mov
out
lret
lahf
out
lret
out
enter
cwtl
in
in
ret
xchg
jmp
xchg
jmp
decb
ljmp
mov
mov
incb
jecxz
jl
mov
dec
fsts
fldl
inc
adc
add
add
jg
sbb
lock
shl
enter
int3
clc
jmp
std
int3
cli
ljmp
cli
call
inc
stc
out
clc
in
ret
inc
clc
loop
mov
neg
mov
cmc
mov
mov
mov
fdivr
mov
xlat
scas
repz
lods
repnz
stos
repnz
test
icebp
iret
movsb
lock
mov
out
lret
sahf
out
leave
pushf
in
lcall
xchg
in
ret
jmp
xchg
ljmp
mov
mov
incb
in
outsb
loop
sbb
push
mov
add
add
scas
push
call
xchg
rcl
mov
in
shr
stc
lret
std
int3
stc
ljmp
cli
call
inc
stc
out
vpmulhw
ret
clc
in
sar
inc
mul
mov
neg
mov
cmc
fdivr
mov
mov
fsin
mov
fdivr
mov
scas
repnz
lods
repnz
stos
icebp
sar
test
sar
cmpsb
lock
movsb
lock
mov
out
lret
out
enter
cltd
in
in
ret
xchg
jmp
xchg
jmp
nop
ljmp
xchg
mov
xchg
mov
cmp
cmp
inc
inc
inc
pop
add
dec
je
scas
dec
mov
mov
lret
mov
in
out
repnz
repz
lret
std
lret
cli
jmp
std
stc
out
stc
out
clc
in
ret
clc
jecxz
shl
mov
neg
mov
cmc
fdivr
mov
hlt
mov
fdivr
mov
xlat
scas
repz
lods
repnz
stos
icebp
sar
test
lock
movsl
lock
mov
out
lret
lahf
out
leave
popf
in
fwait
in
cwtl
in
xchg
in
ret
xchg
jmp
decb
out
data16
adc
xor
add
add
add
std
sti
add
std
sti
add
mov
mov
pop
lret
jae
mov
int
fadd
jmp
test
stc
out
enter
xbegin
in
clc
in
ret
inc
mul
mov
neg
mov
cmc
fdivr
mov
mov
fsin
mov
xlat
mov
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
lock
movsl
lock
mov
out
lret
out
enter
lcall
xchg
out
decb
enter
push
add
add
add
add
std
sti
add
movb
push
shll
rclb
jecxz
lock
sti
mul
std
enter
xabort
std
clc
in
ret
mul
inc
mul
inc
mul
mov
neg
mov
cmc
mov
mov
fdivr
mov
xlat
mov
aad
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
iret
cmpsb
lock
movsb
out
int3
mov
out
leave
popf
in
cwtl
ljmp
pop
fstpl
fldl
inc
adc
add
add
std
sti
add
stos
dec
imul
enter
loope
leave
xchg
mov
out
call
fdivr
vpsrad
std
mul
std
ret
std
shl
std
mov
neg
mov
cmc
fdivr
mov
mov
fsin
mov
xlat
mov
scas
repnz
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
iret
cmpsb
out
int
mov
in
enter
sar
out
daa
mov
add
add
add
add
std
cli
add
scas
dec
jg
mov
push
loopne
lret
mov
mov
in
mov
repz
mul
cld
ret
mul
std
shl
std
shl
std
mov
neg
mov
cmc
mov
mov
fdivr
mov
xlat
mov
aad
scas
repnz
lods
repnz
stos
icebp
sar
test
out
into
mov
in
decb
nop
incb
jo
mov
inc
inc
pop
sti
std
sti
add
std
sti
add
cltd
push
xchg
inc
mov
cmpsl
lret
sbb
iret
xchg
fcmovnb
loop
in
repz
repz
ret
cmc
loope
shl
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
fsin
mov
fdivr
mov
mov
aad
scas
repnz
lods
icebp
sar
test
int
movsb
in
jp
mov
push
cmpsb
cmp
add
add
add
std
sti
add
movb
push
ret
ja
js
mov
test
mov
jmp
mov
hlt
shl
std
mov
cmc
mov
cmc
mov
mov
fdivr
mov
xlat
mov
aad
scas
repnz
test
lret
in
enter
jp
add
add
add
add
add
std
sti
add
lods
dec
je
lods
inc
mov
jl
mov
fsubl
sti
mov
hlt
fdivrp
mov
cmc
mov
hlt
mov
fsin
mov
fdivr
scas
lock
stos
out
into
outsl
loop
adc
inc
adc
add
add
std
sti
add
std
sti
add
mov
mov
pop
lret
rcrb
iret
xchg
faddp
in
out
idivb
repnz
mov
cmc
fdivr
mov
repz
mov
into
lcall
std
add
add
add
add
add
std
sti
add
movb
inc
mov
movsl
lret
xchg
mov
in
mov
out
std
mov
out
sar
mov
sar
pusha
ficompl
inc
inc
inc
pop
sti
std
sti
add
stos
inc
data16
aad
fnsave
test
out
sar
mov
mov
repz
add
add
std
cli
add
lods
dec
jg
mov
push
int3
mov
jbe
lods
loop
int
std
add
add
add
add
add
std
sti
add
std
sti
add
xchg
sbb
adcb
add
std
sti
add
cld
sti
add
add
add
cld
clc
aas
clc
ud0
push
add
push
add
add
jmp
add
add
jmp
add
add
inc
add
add
inc
add
add
incl
jg
incl
aas
incl
add
add
pop
incl
add
add
pop
incb
add
add
ud0
add
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
pop
cld
add
add
add
pop
clc
add
add
add
aas
clc
add
add
add
jg
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
add
add
add
jg
add
add
add
incl
add
incl
add
inc
add
add
add
jmp
add
add
add
cld
add
add
pop
incl
push
add
add
cld
add
add
incl
push
add
aas
cld
add
aas
incl
push
add
incb
incl
push
ljmp
add
add
add
nop
add
add
add
add
add
add
add
scas
scas
scas
add
lods
lods
add
add
add
push
or
add
add
inc
push
push
push
sbb
push
adc
adc
add
add
add
add
add
adc
sbb
push
add
pop
or
pop
add
add
or
add
add
add
add
dec
add
add
ja
ja
or
or
add
fiaddl
jg
faddl
adcb
add
loope
js
in
inc
add
add
add
add
dec
movups
sbb
sti
std
sti
add
std
sti
add
std
sti
add
std
sti
add
cld
cli
add
std
sti
add
std
sti
add
std
sti
add
add
add
pusha
or
pop
add
add
sbb
add
push
faddl
jg
loope
je
filds
inc
add
add
add
add
push
sbb
outsb
outsb
pop
leave
out
or
loopne
sub
outsl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
orb
mov
or
add
add
fcmovu
add
add
add
add
faddl
sbbb
add
sbb
add
sbb
add
adc
add
fldl
dec
add
add
add
add
add
sbb
and
push
fiaddl
fldln2
fsts
pop
mov
adc
mov
xchg
adc
push
lahf
daa
cld
cmp
enter
rorl
jne
cwtl
std
push
jno
cmp
and
fistpl
mov
fstl
pusha
fs
or
push
add
add
sbb
add
sbb
add
sbb
add
pop
fildl
jg
fldl
adcb
add
in
add
aam
adc
movsl
add
add
add
add
add
fwait
push
cld
push
ret
push
jecxz
std
mov
cld
out
sar
ljmp
std
out
std
out
aad
in
sar
ljmp
neg
std
mov
test
inc
mov
sbb
or
or
pop
icebp
clc
icebp
add
add
add
int3
int3
add
pop
add
add
in
jg
faddl
sbbb
add
sbb
add
sbb
add
sbb
add
fmull
jnp
in
sbbl
adc
hlt
add
add
add
adc
int
std
mov
aam
inc
sti
in
int3
cld
call
dec
cld
ljmp
std
in
dec
std
in
dec
std
jmp
int3
cld
ljmp
cld
call
inc
cli
jecxz
test
int3
push
enter
cwtl
sbb
push
mov
mov
sti
std
sti
add
add
add
push
lgdtl
popf
add
pop
faddl
sbbb
add
sbb
add
sbb
add
sbb
add
fstl
js
out
adc
mov
and
or
or
cmp
mov
mov
cli
fdivrp
mov
sti
loope
mov
cli
loope
sar
inc
cld
out
std
call
inc
cld
out
mov
sti
loope
mov
sti
loope
mov
cli
mov
in
std
das
scas
inc
decb
xchg
adc
xor
xor
add
add
add
rol
adc
adc
jnp
fildl
jg
fildl
sbbb
add
sbb
add
sbb
add
sbb
add
fmull
sbb
push
sbbb
inc
mov
lahf
std
sub
adc
mov
not
movsb
repz
movsb
hlt
lret
not
pushl
clc
aad
mov
fsin
mov
fdivr
mov
mov
sti
loope
mov
fdivrp
mov
fdivr
mov
fsin
scas
clc
mov
fdivr
test
hlt
lret
repz
lods
not
popf
repnz
decb
push
or
adc
es
daa
js
lock
push
pop
push
or
add
pop
fildl
sbbb
add
sbb
add
sbb
add
sbb
add
ficomps
jp
out
sbb
cltd
std
pop
scas
inc
adc
lcall
test
out
mov
xchg
lock
movsl
clc
sar
mov
cmc
int
mov
not
cmpsl
stc
xlat
lods
sti
test
clc
movsb
not
mov
test
mov
test
xchg
lock
mov
cmc
enter
mov
setbe
sub
sub
add
adc
adc
jp
fiaddl
jg
fildl
adcb
add
sbb
add
sbb
add
sbb
add
fmull
test
stc
push
jbe
ds
pop
fcoml
in
stos
xchg
repz
jmp
jge
stos
incb
icebp
mov
decb
repz
hlt
cmc
leave
cwtl
test
lahf
stc
sar
lcall
xchg
cmc
leave
xchg
hlt
nop
repz
repnz
decb
in
scas
jle
stos
jge
test
jle
stos
popa
xchg
add
mov
push
cli
cld
cli
add
add
add
pop
or
pop
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
repz
mov
jl
push
xchg
pop
incb
gs
pop
loop
incb
pushf
imul
sahf
jno
mov
incb
out
mov
xor
incb
mov
xchg
test
incb
repz
incb
out
mov
test
mov
jb
movsb
insl
call
cwtl
jb
mov
pop
loope
std
cmp
pop
decb
xchg
or
xor
add
add
or
faddl
sbbb
add
sbb
add
sbb
add
sbb
add
fmull
jge
jmp
pop
enter
mov
xor
dec
push
fwait
jb
movsb
pop
jecxz
in
jmp
xchg
imul
incb
in
test
jns
scas
jle
mov
xor
incl
leave
decb
repz
jle
mov
js
scas
jne
stos
jbe
stos
incl
jmp
xchg
popa
in
pop
in
pushl
test
decb
sbb
daa
test
repnz
bound
or
pop
add
add
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
push
sbbb
sub
imul
ds
push
fidivrs
jnp
mov
pop
loope
pop
loop
pop
in
jmp
xchg
jno
movsb
incb
out
scas
incl
test
mov
ret
cmc
sar
hlt
sar
clc
lret
cmc
ret
cmc
sar
cmc
sar
test
mov
ret
repnz
ja
lods
incl
mov
pop
in
pop
loop
lcall
mov
jp
scas
decb
js
cmp
pop
decb
xchg
aas
cmpsl
aas
push
fcmovnu
fildl
add
add
add
or
and
add
sbbl
add
sbb
add
sbb
adc
in
sbb
xchg
sets
daa
mov
insl
pop
jecxz
insl
ljmp
pop
loope
pop
jecxz
imul
mov
jge
mov
jbe
stos
jno
cmpsb
jb
cmpsl
je
test
incb
out
mov
jne
stos
je
test
jb
cmpsb
ja
lods
jg
mov
mov
ret
repnz
pop
jecxz
pop
loope
push
filds
push
loopne
incb
insl
and
adc
clc
sti
clc
add
add
add
push
push
add
mov
or
and
pop
xchg
fildl
sbbl
add
sbb
add
xchg
clc
aas
mov
std
dec
shrl
xchg
adc
cmp
pop
incb
insb
jae
cmpsb
push
fistpll
push
fnstsw
in
jp
scas
jp
scas
incb
out
out
imul
popf
insl
jmp
mov
incb
in
stos
jno
movsb
outsl
ljmp
insb
jmp
lcall
jmp
mov
ja
stos
pop
loop
push
fidivrs
loopne
jno
mov
ss
push
std
or
jg
or
adcl
fisttpl
mov
fisttpl
xchg
pop
xchg
fildl
sbbl
add
and
sbb
rorb
std
sbb
pop
decb
outsl
jmp
decb
ja
outsb
ljmp
pop
in
pop
loop
jl
mov
in
arpl
xchg
gs
addr16
imul
fwait
insb
jmp
mov
ja
stos
insb
jmp
pushf
imul
xchg
gs
arpl
xchg
gs
jnp
scas
pop
loop
out
js
lods
popa
in
decb
je
cmpsl
incb
outsb
cmp
pop
push
cmpsl
and
adc
adc
in
imul
add
add
add
lsl
fwait
push
mov
fisttpl
mov
fisttpl
mov
fmull
xchg
pop
test
faddl
sbbl
push
sbbl
std
inc
into
jnp
push
xchg
adc
sub
inc
cmp
pop
push
loopne
ljmp
pushl
movsl
gs
push
fidivrs
push
fidivrs
pop
loope
jnp
scas
pop
loop
pop
jecxz
jmp
mov
in
fs
gs
jmp
xchg
pushl
stos
je
cmpsl
addr16
gs
jmp
arpl
xchg
popa
in
pop
jecxz
lcall
mov
jge
mov
push
filds
push
loopne
pushl
movsb
out
outsb
ljmp
cmp
pop
and
cmp
add
add
or
add
add
adc
or
xor
adc
fmull
mov
fmull
xchg
fisttpll
test
push
test
loopne
mov
cld
xlat
xchg
std
sbb
or
xor
push
aaa
rcrl
popa
in
incb
loop
incb
outsl
decb
je
dec
fnstsw
pop
loope
jne
test
pop
loopne
pop
loope
pop
loop
pop
jecxz
pusha
in
popa
in
in
je
cmpsl
jo
mov
popa
in
pusha
jecxz
pop
jecxz
pop
loop
pop
loope
pop
loope
jp
scas
push
filds
decb
je
dec
insb
jmp
scas
push
loopne
aaa
rcrl
sub
nop
pop
sti
xchg
into
xchg
sub
add
add
pop
or
pop
sahf
adc
xor
adc
xor
adc
sub
in
subl
or
and
push
xchg
in
pop
lea
sti
pop
ret
ss
std
cmpxchg
cs
dec
aaa
rcrl
jb
mov
incb
data16
decb
jb
dec
fdivl
pop
jecxz
outsl
jmp
cmp
pop
loope
pop
loop
pop
loop
pop
jecxz
pusha
jecxz
jae
movsb
outsl
jmp
mov
pop
jecxz
pop
loop
pop
loop
pop
loope
pop
loopne
push
filds
pop
loope
decb
jbe
dec
fidivl
inc
fsubrs
inc
addr16
jo
mov
xor
int
decb
cltd
adc
pop
mov
pop
or
or
ficompl
nop
cmp
sbb
cmp
sbb
ss
sbb
xor
sbb
das
cmc
sbb
sub
sub
lcall
cmpsb
sub
sub
dec
pop
loope
incb
xlat
gs
aas
arpl
dec
fsubrs
dec
fidivl
push
fdivl
push
xchg
imul
pop
filds
pop
loopne
pop
loope
pusha
loope
popa
loop
mov
jne
movsb
jno
sahf
mov
popa
loop
pusha
loope
pop
loope
pop
loopne
pop
filds
jo
popf
data16
push
fdivl
dec
fidivl
dec
fsubrs
ds
incb
push
incb
imul
cpuid
sbb
or
xchg
add
add
pusha
or
xor
push
fwait
aas
out
movsl
cmp
push
pushf
xor
push
fwait
das
sti
pop
fwait
xor
sbb
sub
sbb
sub
and
cmp
aam
std
pop
shlb
or
daa
xor
push
push
lcall
rcrl
dec
xlat
imul
push
fidivl
fdivrl
jo
cltd
insl
in
pop
filds
jmp
xchg
loopne
arpl
mov
fs
jmp
mov
jns
movsb
jne
lahf
gs
fs
jmp
mov
loopne
pusha
loopne
pop
filds
jb
pushf
imul
push
fdivrl
push
fidivl
fnstenv
dec
xlat
push
jl
mov
fs
ljmp
dec
adc
add
flds
add
add
or
xchg
aas
loopne
cmpsb
inc
icebp
sub
jae
pop
lret
jl
pop
iret
test
pusha
roll
std
push
aad
std
push
fimull
cld
push
shlb
pop
sahf
push
push
mov
push
loopne
incb
push
incl
pusha
call
outsl
push
fnstenv
pop
pop
fdivrl
je
lcall
filds
jmp
gs
data16
loopew
ljmp
mov
jl
movsl
js
lahf
push
loope
jmp
mov
gs
fs
filds
pushl
popf
jo
xchg
pop
fdivrl
pop
push
fnstenv
push
fsubrs
cmp
jmp
xchg
aas
fs
adc
add
add
add
pusha
fs
or
pop
add
loope
lahf
inc
out
cmpsl
ds
jb
test
inc
fisttpl
std
xor
cmp
and
ja
and
ja
and
jbe
and
jbe
pop
aam
cld
push
shll
push
shlb
pop
sahf
pop
std
sbb
sub
dec
insl
ljmp
pop
fdivs
pop
fidivl
pop
fstpt
pop
fdivrl
jns
pushf
jbe
cltd
filds
push
loopne
push
mov
imul
insb
loope
incb
jmp
mov
imul
push
mov
imul
mov
filds
filds
je
xchg
pusha
fdivrl
fstpt
pop
fidivl
pop
fnstenv
dec
xlat
imul
cmp
pop
pop
loop
adc
add
int3
int3
int3
add
add
adc
inc
fildll
stos
dec
repnz
inc
cld
jnp
lods
cld
sub
jle
xlat
jge
and
jnp
and
jns
and
js
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
sbb
mov
cmp
push
loopne
and
inc
je
sahf
pop
fidivl
pop
fidivl
pusha
fstpt
fstpt
fnstsw
jle
sahf
jp
fwait
push
xchg
imul
insl
loopne
jo
jns
cltd
jg
mov
xchg
lock
incb
lahf
js
xchg
outsl
loope
insl
loopne
insb
fisttps
jg
mov
fnstsw
arpl
jl
pusha
fstpt
pop
fidivl
pop
insl
call
inc
fs
adc
add
push
pop
push
pop
push
popf
and
dec
out
test
stc
outsl
int3
xchg
dec
fstl
cld
sub
jg
xlat
jge
and
jnp
and
jp
and
js
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
test
dec
aaa
rcrl
and
cmp
jne
xchg
push
cmp
data16
imul
cmp
out
incb
in
decb
out
mov
xchg
lock
decb
jmp
mov
nop
in
mov
test
movsb
decb
in
mov
xchg
lock
decb
in
decb
in
imul
imul
jge
fstpt
insb
filds
and
cmp
dec
fidivl
and
push
jbe
div
add
add
add
rol
adc
adc
xchg
fldt
lcall
cmp
dec
cld
jns
test
xor
xchg
fiaddl
cld
sub
jg
xlat
jle
and
jl
and
jp
and
jns
and
js
pop
aam
cld
push
aam
cld
push
shll
adc
and
cmp
jl
cwtl
pushl
ljmp
jle
insl
fldl
jb
mov
mov
test
test
int
xchg
in
mov
xchg
mov
jns
nop
js
nop
jns
xchg
jns
xchg
decl
jmp
xchg
jns
xchg
js
nop
jns
nop
jg
cltd
decb
out
mov
test
int
xchg
mov
outsl
fiadds
imul
jnp
xchg
outsb
loope
lcall
into
push
sbb
popa
dec
push
pop
push
or
and
inc
in
mov
ds
outsl
int3
xchg
push
loopne
cld
xor
mov
xor
test
flds
cld
sub
cmp
xlat
jle
and
jp
and
js
and
ja
pop
aam
cld
push
shll
push
ret
add
shrl
pop
enter
loop
incb
fldl
jge
xchg
lcall
popf
out
mov
jnp
nop
jl
xchg
jge
xchg
jge
xchg
jle
xchg
jg
xchg
xchg
ljmp
jle
xchg
jle
xchg
jge
xchg
jge
xchg
jl
xchg
jnp
nop
jl
xchg
mov
out
mov
jp
mov
jae
test
jno
cmp
call
cmp
xor
incb
fidivs
add
xor
inc
adc
push
fidivs
mov
lock
loope
cld
cmp
cld
fisttpl
cld
xor
xchg
das
fiaddl
sub
cmp
xlat
jle
and
jnp
and
js
and
ja
push
shll
sbb
push
std
or
xor
je
mov
cwtl
in
mov
jns
mov
test
xchg
movsl
icebp
sar
out
incb
out
mov
incb
loop
incb
loop
incb
xchg
cwtl
jmp
xchg
jmp
xchg
incb
loop
incb
loop
incb
loop
mov
loopne
decb
lock
jns
mov
pushf
in
mov
fidivrl
sbb
xor
or
add
or
add
add
pop
or
pop
or
xor
inc
cli
jno
mov
push
loope
std
cmp
mov
cmp
mov
fisttpl
cld
xor
xchg
das
fiaddl
sub
cmp
xlat
jge
and
jnp
and
jns
and
ja
push
shlb
or
cs
add
push
push
ret
outsl
fstpt
cmpsl
lock
stos
icebp
decb
loope
incb
lock
in
decb
jecxz
decb
jecxz
decb
in
popf
jmp
cltd
ljmp
mov
fwait
decb
jecxz
decb
jecxz
decb
out
mov
incb
mov
decb
icebp
sar
fdivs
adc
daa
incb
or
xor
icebp
add
add
add
daa
mov
pop
lock
inc
std
and
std
inc
ficoms
std
cmp
cld
cmp
cld
aaa
fisttpl
std
xor
xchg
xor
test
sub
fadds
std
xlat
jge
and
jnp
and
jns
pop
aam
std
push
rclb
xchg
push
decb
mov
jae
mov
cmc
sar
xchg
out
decb
jecxz
decl
ret
xchg
out
decb
in
decb
in
nop
in
call
in
mov
lahf
ljmp
nop
in
call
in
decb
in
lcall
out
mov
decb
loop
lcall
lret
jmp
push
aam
decb
mov
incb
xchg
or
popf
rcrb
add
bound
add
popf
dec
loope
stos
in
scas
dec
stc
jo
mov
pop
loop
std
inc
loopne
std
inc
ficoms
cld
cmp
cld
cmp
cld
aaa
fmull
cld
xor
xchg
xor
test
flds
sub
cmp
xlat
jle
and
aad
std
pop
shll
pop
popf
push
std
add
paddd
pop
call
not
xchg
jecxz
xchg
jecxz
xchg
in
call
in
mov
xchg
in
call
in
xchg
in
xchg
out
call
in
mov
xchg
out
xchg
out
call
in
xchg
in
xchg
in
jmp
jmp
xchg
in
xchg
in
xchg
jecxz
call
fdivr
xchg
jecxz
cmp
dec
incb
pushf
and
add
add
add
add
sub
cmp
arpl
xor
mov
cld
inc
loopne
cld
inc
fists
cld
aas
ficoms
cld
cmp
cld
cmp
mov
xor
fimull
cld
das
flds
sub
cmp
xlat
jle
and
aad
cld
push
mov
pop
and
cmpsb
dec
stc
mov
in
lcall
mov
repnz
popf
out
popf
out
popf
out
sahf
out
sahf
out
sahf
out
scas
out
mov
sahf
out
sahf
out
sahf
out
popf
out
popf
out
popf
out
mov
jmp
movsb
lcall
cmpsb
jmp
dec
stc
mov
lcall
nop
add
popf
rcrb
add
push
push
add
mov
aas
scas
push
xor
mov
pop
in
std
dec
loop
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
aas
ficoms
cld
cmp
mov
cmp
mov
fisttpl
cld
xor
xchg
das
flds
sub
cmp
xlat
jle
es
jl
and
jns
or
jne
cmp
out
ret
cmc
aam
movsl
call
stos
movsb
call
lods
mov
jmp
cmpsb
jmp
scas
cmpsl
jmp
scas
cmpsl
jmp
ret
mov
sar
jmp
scas
cmpsl
jmp
scas
cmpsb
jmp
mov
movsb
call
lods
mov
jmp
sar
mov
shrl
push
xchg
or
xor
cli
add
add
add
or
lea
filds
push
ds
out
cmp
mov
cld
dec
jecxz
cld
dec
loop
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
mov
cmp
mov
aaa
fisttpl
cld
xor
xchg
xor
test
flds
cld
sub
jg
es
jl
push
lret
pop
cltd
pop
std
sub
out
mov
ljmp
lods
ljmp
mov
in
mov
mov
repz
hlt
sar
int
lret
neg
inc
hlt
sar
ret
repz
mov
out
ret
jmp
inc
repnz
mov
ljmp
lods
ljmp
mov
icebp
leave
std
adc
sbb
sbb
mov
add
sysret
pop
or
cmp
jo
xor
push
clc
jp
xchg
std
fwait
out
enter
stos
std
push
in
cld
dec
jecxz
std
dec
loop
std
dec
loope
cld
dec
loopne
cld
inc
fists
std
inc
ficoms
cld
cmp
cld
cmp
std
aaa
fisttpl
cld
xor
xchg
xor
test
flds
cld
sub
jg
es
jge
sbb
pop
outsb
int3
cmp
jmp
dec
hlt
aad
ret
pushl
in
mov
aam
loop
iret
neg
inc
repnz
shl
mov
out
ret
repz
mov
out
inc
lock
repz
iret
neg
sar
loope
mov
in
mov
inc
lock
hlt
aam
mov
mov
std
add
add
xor
adc
mov
inc
lods
jno
inc
mov
pop
cld
movsl
in
enter
lret
in
ret
std
fs
std
push
in
std
dec
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
aas
fstl
cld
cmp
cld
cmp
mov
fisttpl
cld
xor
test
das
flds
sub
cmp
aad
cld
sbb
adc
jbe
jg
mov
neg
dec
repnz
shr
shl
fsin
xlat
clc
jecxz
shl
fsin
shr
inc
out
inc
out
inc
out
dec
repz
leave
repnz
shr
inc
out
inc
out
inc
out
neg
xlat
mul
dec
repz
shr
inc
icebp
into
shl
fdivrp
mov
shrl
or
push
scas
push
inc
out
imul
add
add
add
pop
or
pop
or
jecxz
mov
loop
mov
stc
adc
cld
test
sar
mov
out
leave
std
xchg
out
std
jno
mov
push
in
std
push
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
aas
fstl
cld
cmp
mov
cmp
mov
fisttpl
cld
xor
xchg
das
flds
sub
cmp
aad
cld
sbb
or
inc
in
jecxz
fincstp
loop
fincstp
loop
int3
repnz
jecxz
shl
xlat
dec
icebp
into
dec
icebp
iret
dec
icebp
iret
shl
shl
fdivr
lret
dec
icebp
iret
dec
icebp
into
shl
xlat
fcomi
in
int3
repnz
jecxz
xlat
neg
in
mov
mov
std
push
lea
fisttps
dec
inc
cli
cld
cli
add
add
add
xor
dec
mov
fimuls
out
inc
mov
cld
stos
out
int
movsl
icebp
sar
mov
lock
sahf
out
lret
std
lcall
std
popa
out
cld
push
jecxz
cld
dec
loop
cld
dec
loop
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
mov
cmp
mov
aaa
fisttpl
cld
xor
xchg
xor
test
flds
std
inc
fisttpl
std
sbb
inc
test
clc
out
jecxz
jmp
loopne
fdecstp
fdivrp
in
in
fcomi
loopne
cmc
cmc
jecxz
fcomi
loope
cmc
cmc
loopne
in
jmp
xlat
neg
fprem1
fdivrp
jecxz
jmp
out
mov
mov
sbb
xor
stc
hlt
add
add
add
pusha
or
pusha
or
loop
mov
jecxz
mov
sahf
std
scas
repz
test
icebp
sar
movsb
icebp
iret
std
mov
lock
std
sahf
out
lret
out
std
jnp
mov
popa
out
std
push
jecxz
std
dec
loop
cld
dec
loope
cld
dec
loopne
cld
inc
fists
std
inc
ficoms
cld
cmp
cld
cmp
std
cmp
mov
cmp
mov
inc
fstl
std
imul
std
je
stos
std
jae
test
std
xor
daa
push
insb
inc
jmp
jmp
out
in
in
jmp
jmp
icebp
out
jmp
jecxz
out
out
jmp
out
ljmp
cli
jmp
ljmp
out
jmp
jecxz
jmp
pop
mov
adc
add
add
mov
mov
flds
add
add
fists
jl
dec
sarl
mov
cld
mov
fdivr
lods
repz
lods
repz
test
icebp
sar
movsl
icebp
sar
mov
lock
std
lahf
lock
std
popf
out
leave
std
xchg
out
jmp
std
jae
mov
pop
in
cld
push
jecxz
cld
push
loop
std
dec
loope
std
dec
loopne
cld
dec
loopne
cld
dec
loopne
cld
push
loope
std
pusha
jecxz
std
jo
stos
std
jp
mov
jle
mov
jl
mov
jp
scas
std
ja
lods
std
jne
stos
std
jo
movsl
std
push
int3
jle
daa
test
sub
pop
lahf
mov
loope
in
jmp
out
icebp
cld
hlt
icebp
sti
cmc
icebp
sti
cmc
lock
hlt
jmp
hlt
jecxz
shr
xlat
xchg
rcrb
pop
sahf
daa
decb
lcall
inc
dec
inc
adc
add
add
pusha
or
lods
outsb
loope
mov
arpl
jge
xchg
std
mov
fscale
mov
fdivr
scas
repz
std
lods
repz
stos
repnz
test
sar
cmpsl
icebp
sar
movsl
icebp
iret
std
mov
lock
std
sahf
out
lret
out
enter
std
cwtl
out
std
xchg
in
ret
std
mov
mov
std
mov
mov
std
mov
mov
std
xchg
mov
std
sub
std
sub
mov
jle
mov
jnp
mov
jns
scas
std
ja
lods
std
jne
stos
std
jb
test
pop
iret
cmp
mov
sbb
adc
push
mov
insb
mov
outsl
outsb
mov
insb
push
mov
cmp
adc
sbb
push
sub
push
or
cmp
add
add
int3
int3
add
add
in
mov
ficoms
sub
mov
hlt
mov
mov
fdivr
scas
hlt
xlat
std
lods
repz
std
stos
repnz
stos
repnz
test
sar
cmpsb
icebp
sar
movsb
icebp
into
std
mov
lock
std
sahf
lock
out
leave
std
lcall
std
xchg
in
ret
std
xchg
in
ret
in
sar
jmp
std
jmp
std
mov
mov
std
xchg
mov
std
sub
std
sub
mov
jge
mov
jnp
scas
std
jns
scas
std
jbe
lods
std
jne
stos
std
jno
cmpsl
outsl
loopne
std
fcoms
std
aas
mov
dec
xor
dec
std
xor
pusha
decb
jne
pop
aad
popa
fstpl
sbb
add
jle
jle
push
pop
push
invd
pop
or
pop
mov
gs
adc
std
mov
cmc
mov
fdivr
mov
mov
fscale
mov
fdivr
scas
repz
std
lods
repz
stos
repnz
test
icebp
sar
movsl
icebp
iret
std
mov
lock
mov
out
lret
out
enter
xchg
in
in
std
xchg
in
ret
in
sar
jmp
std
jmp
std
mov
mov
incb
call
mov
and
std
jle
mov
jl
mov
jp
scas
std
jns
lods
std
ja
lods
je
test
std
jo
cmpsb
std
insl
loopne
imul
imul
mov
std
fistps
fstpl
loopne
das
into
ja
pop
test
rclb
daa
adc
rol
add
xor
es
cmp
pop
mov
mov
dec
mov
std
mov
neg
std
mov
cmc
fdivr
mov
mov
mov
fscale
mov
xlat
scas
repz
lods
repnz
stos
repnz
test
sar
cmpsb
icebp
sar
movsb
icebp
iret
std
mov
lock
std
lahf
lock
popf
out
leave
fwait
out
enter
std
xchg
in
in
ret
xchg
in
ret
in
sar
jmp
std
mov
mov
decb
jmp
mov
and
incb
out
std
jl
mov
jp
scas
js
lods
std
jbe
stos
std
je
test
outsl
loope
outsb
loope
std
insb
loope
std
imul
std
imul
sahf
fbld
ficoml
hlt
or
mov
add
push
pop
push
or
dec
mov
in
mov
imul
sar
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
mov
fscale
mov
fdivr
scas
repz
std
lods
repnz
stos
repnz
stos
repnz
test
sar
movsl
icebp
sar
movsb
icebp
into
std
mov
lock
std
sahf
out
lret
out
enter
std
cwtl
in
std
xchg
in
std
xchg
in
ret
std
xchg
in
sar
jmp
std
mov
mov
std
mov
mov
std
test
mov
and
std
and
mov
jge
mov
jnp
scas
std
jns
lods
std
ja
stos
std
jne
stos
std
jae
test
jno
cmpsl
std
outsl
loope
std
insl
loopne
std
imul
std
imul
mov
incb
or
adc
adc
adc
xchg
cmp
fs
cwtl
in
inc
mov
cld
mov
clc
in
ret
std
shl
std
mov
mul
std
mov
cmc
fdivrp
mov
fdivr
mov
mov
mov
fdivr
mov
xlat
std
scas
repz
std
lods
repnz
stos
repnz
test
icebp
sar
movsl
icebp
iret
std
movsb
lock
std
mov
out
lret
std
popf
out
leave
std
fwait
out
enter
std
cwtl
in
in
ret
std
xchg
in
ret
in
sar
jmp
std
ljmp
mov
mov
std
test
mov
and
std
and
std
jg
mov
jge
mov
jnp
scas
std
jns
lods
std
ja
stos
std
je
stos
std
jb
test
outsl
loope
std
insb
fisubs
incb
std
or
add
pop
pop
pop
or
adc
gs
inc
mov
stos
std
stc
out
vcvttpd2dq
stc
in
ret
std
sar
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
mov
fscale
mov
fdivr
mov
std
scas
repnz
lods
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
movsl
icebp
iret
std
mov
out
lret
std
lahf
out
lret
out
enter
std
cltd
in
std
xchg
in
std
xchg
in
ret
std
xchg
in
sar
jmp
std
mov
mov
std
mov
mov
std
xchg
mov
std
and
std
and
std
jle
mov
jl
mov
jp
scas
std
js
lods
std
jne
stos
std
jb
cmpsb
std
outsl
loope
pop
fistps
cld
add
jg
jg
add
add
sub
rcrb
dec
mov
loopne
leave
cli
jmp
std
stc
out
vcvttpd2dq
ret
stc
in
ret
inc
mul
std
mov
mul
std
mov
cmc
fdivrp
mov
hlt
mov
mov
fdivr
mov
xlat
std
scas
repz
std
lods
repnz
stos
repnz
test
icebp
sar
cmpsb
icebp
iret
std
movsb
lock
std
mov
out
lret
std
sahf
out
leave
std
pushf
out
enter
cwtl
in
in
ret
std
xchg
in
ret
jmp
std
nop
jmp
decb
ljmp
xchg
mov
std
and
std
and
std
and
jle
mov
jnp
scas
std
jns
lods
std
je
cmpsl
outsb
jecxz
sarb
mov
fstps
sub
sbb
add
add
adc
dec
mov
sahf
rorl
js
mov
lods
std
int3
cli
ljmp
cli
jmp
std
stc
out
stc
out
stc
in
ret
clc
in
sar
std
shl
std
mov
neg
std
mov
cmc
mov
mov
mov
fscale
mov
fdivr
mov
xlat
std
scas
repnz
lods
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
movsl
lock
std
mov
out
lret
std
lahf
out
lret
out
leave
std
fwait
out
std
cltd
in
std
xchg
in
std
xchg
in
ret
std
xchg
in
sar
jmp
std
ljmp
mov
mov
std
test
mov
and
std
and
mov
jnp
stos
std
jns
lods
push
fcompl
repz
imul
add
add
in
adc
pop
sbb
push
cli
std
into
stc
in
cld
int
jmp
int3
stc
ljmp
cli
jmp
std
stc
out
vcvttpd2dq
clc
in
ret
std
shl
std
mov
mul
std
mov
cmc
mov
hlt
mov
mov
fdivr
mov
xlat
std
scas
repz
std
lods
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
lock
std
movsb
lock
std
mov
out
lret
std
lahf
out
lret
out
enter
std
cwtl
in
in
std
xchg
in
ret
jmp
std
nop
ljmp
mov
mov
std
mov
mov
std
test
mov
and
lods
jae
lods
std
cs
jne
mov
lods
scas
lods
add
adc
enter
loope
lock
stc
lret
std
int
ljmp
cli
ljmp
cli
call
std
stc
out
vpmulhw
ret
clc
in
sar
std
shl
std
mov
neg
std
mov
cmc
mov
hlt
mov
fscale
mov
fdivr
mov
std
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
cmpsl
lock
std
movsl
lock
std
mov
out
int3
std
mov
out
leave
std
pushf
in
std
lcall
std
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
nop
ljmp
mov
mov
std
xchg
mov
and
std
and
decb
decb
cwtl
sub
adc
adc
scas
shrb
mov
mov
ret
rorb
call
icebp
fdivrp
lret
mul
std
int3
stc
jmp
std
lret
std
leave
stc
out
stc
out
stc
out
clc
in
ret
std
shl
std
mov
mul
mov
cmc
mov
cmc
mov
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
lods
repnz
stos
icebp
sar
test
lock
movsl
lock
mov
out
lret
std
lahf
out
lret
out
enter
std
lcall
std
xchg
in
ret
jmp
std
xchg
jmp
std
jmp
mov
jo
stos
std
and
pop
cld
add
push
dec
or
add
add
cmc
jmp
inc
inc
mov
lea
mov
shrb
lret
sbb
into
mov
rcl
fld
loope
jecxz
out
mov
hlt
loope
lret
std
lret
cld
leave
cli
call
std
stc
out
std
ret
clc
in
ret
std
shl
mov
neg
std
mov
cmc
mov
hlt
mov
fscale
mov
fdivr
mov
xlat
mov
aad
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
sar
cmpsb
lock
std
movsb
out
int
mov
out
lret
out
leave
std
popf
in
enter
std
cltd
in
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
nop
jmp
mov
xchg
mov
inc
aad
std
or
xor
cmc
cli
cmc
add
mov
inc
cmpsb
push
shll
fisubrl
iret
mov
rcr
fadd
out
out
bnd
icebp
fdivr
enter
lret
std
leave
stc
out
xbegin
in
std
ret
clc
jecxz
shl
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
lods
repnz
stos
icebp
sar
test
lock
std
cmpsb
lock
std
movsb
out
int3
std
mov
out
lret
in
enter
std
lcall
std
xchg
jmp
std
xchg
jmp
mov
sbb
ds
add
add
add
cld
cli
add
cmpsl
inc
outsl
cs
inc
mov
jle
jg
mov
mov
ret
rorb
loopne
jmp
ljmp
enter
enter
xbegin
in
mul
std
ret
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
cmc
mov
fscale
mov
fdivr
mov
std
mov
aad
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
lock
std
movsl
out
int
mov
out
lret
std
mov
in
enter
std
cwtl
jmp
std
xchg
call
mov
std
add
cmp
sldt
add
repz
repz
cmc
jmp
jne
ja
pop
mov
test
lret
rolb
fcmovnb
aam
fcmovnb
loop
in
lock
hlt
mul
std
mul
std
std
ret
mul
std
ret
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
scas
icebp
sar
lods
icebp
sar
stos
icebp
sar
test
iret
std
cmpsl
lock
std
movsl
out
int
mov
in
lret
in
enter
sar
ljmp
push
sahf
xor
add
add
add
stc
repz
in
sbb
dec
dec
inc
mov
fwait
inc
mov
shrl
into
sbb
ret
ffreep
out
call
hlt
loopne
std
mul
std
ret
mul
std
shl
std
mov
neg
std
mov
neg
std
mov
cmc
mov
fsin
mov
fdivr
mov
std
mov
aad
scas
repnz
lods
icebp
sar
stos
icebp
sar
stos
icebp
sar
test
iret
std
cmpsb
out
into
mov
in
fwait
jmp
mov
xor
addr16
add
imul
fsubrp
fiadds
fisubrl
bound
push
scas
push
shll
scas
lret
sbb
rorl
loop
in
mov
repnz
ret
cmc
loope
ret
mul
std
shl
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
lods
icebp
sar
stos
icebp
sar
test
out
int
mov
jmp
push
xlat
xchg
adc
and
stc
cld
cli
add
pushf
es
scas
dec
ret
test
jg
mov
xchg
fadd
in
out
repz
repz
ret
cmc
loope
shl
cld
mov
cmc
fdivrp
mov
cmc
mov
hlt
mov
fscale
mov
fdivr
mov
xlat
std
mov
aad
mov
aam
lods
repnz
stos
icebp
sar
cmpsl
out
lret
std
movsb
in
enter
mov
sub
push
addr16
lahf
popf
add
add
add
std
sti
add
lock
jno
jb
inc
scas
dec
nop
cmp
sarl
mov
fcomps
call
frndint
shl
cld
shl
cld
mov
neg
std
mov
cmc
fdivr
mov
hlt
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aam
lods
lock
test
leave
lahf
in
enter
cmp
insb
push
scas
xor
xor
jmp
in
add
pop
mov
push
xor
inc
lahf
inc
mov
fwait
iret
jle
mov
fbld
jmp
stc
mov
repz
mov
neg
std
mov
hlt
mov
hlt
fscale
mov
fdivr
mov
std
lods
out
into
test
int3
jae
lods
std
sbb
sbb
mov
add
add
ljmp
inc
stos
inc
outsb
dec
mov
mov
ret
jbe
outsb
movsl
iret
sbb
lcall
hlt
mov
icebp
mov
hlt
fdivr
mov
hlt
mov
fscale
mov
aam
scas
out
iret
xchg
jmp
aas
jb
add
push
mov
imul
add
add
cld
sti
add
out
fimuls
xchg
xchg
and
push
pop
int
lret
mov
mov
mov
in
mov
sar
mov
icebp
mov
hlt
mov
sar
stos
out
iret
push
and
or
sbb
add
add
cld
cli
add
movb
cmp
mov
jl
mov
loop
in
repz
out
sar
mov
aam
call
push
cmc
add
add
mov
mov
out
imul
push
mov
mov
gs
sub
cltd
rolb
jecxz
ljmp
mov
or
adc
push
int
int
mov
mov
jp
mov
mov
jl
pop
rorb
loope
ss
add
std
sti
add
out
adc
insb
inc
xor
dec
push
cli
cld
cli
add
add
add
incl
add
lcall
incl
add
incl
incl
add
incl
incl
add
incb
jg
incl
add
incb
pop
clc
pop
incl
add
cld
add
rolb
incl
add
clc
add
add
aas
incl
add
clc
add
add
ud0
add
push
add
add
add
add
add
push
add
add
add
add
add
jmp
add
add
add
add
add
jmp
add
add
add
add
jmp
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
incl
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
incb
add
add
add
add
add
incb
add
add
add
add
add
incb
add
add
add
add
add
cld
add
add
add
pop
add
add
cld
add
add
add
add
add
clc
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
jmp
add
add
add
add
add
jmp
add
add
add
add
add
inc
add
add
add
pop
add
add
rolb
add
add
pop
add
add
rolb
add
add
pop
add
add
addb
add
add
pop
add
add
addb
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
loopne
add
add
add
incl
add
loopne
add
add
add
incl
add
rolb
add
add
pop
incl
add
rolb
add
add
aas
incl
add
addb
add
add
aas
incl
add
addb
add
add
jg
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
addb
add
add
incl
add
addb
add
add
incl
add
addb
add
add
incl
add
loopne
add
add
ud0
add
add
add
add
add
incl
add
incl
add
add
aas
incl
add
jmp
add
add
aas
incl
add
cld
add
add
jg
incl
add
incl
incl
add
jmp
add
add
incl
add
cld
add
add
incl
add
incl
incl
add
jmp
add
incl
add
cld
add
incl
add
incl
add
add
push
ud0
incl
add
cld
ud0
incl
add
mov
add
sub
add
pusha
add
add
add
add
add
add
add
add
add
add
inc
pop
inc
inc
inc
push
inc
inc
inc
pop
inc
inc
inc
add
add
xor
add
add
add
sub
add
mov
add
and
and
xor
lea
sbb
fwait
add
add
add
add
add
sub
and
or
jle
jle
add
dec
add
jmp
add
add
add
add
add
add
dec
add
add
xor
xor
mov
push
add
add
mov
adcl
fiadds
orb
add
in
add
movb
add
add
add
add
push
add
add
add
add
mov
add
pusha
popa
pusha
pop
add
add
jl
fiadds
jle
faddl
adcb
add
adc
call
add
lds
and
mov
add
add
add
dec
add
add
and
and
jg
jg
cli
cld
cli
add
cld
cli
add
std
sti
add
cld
cli
add
cld
cli
add
std
sti
add
cld
cli
add
cld
cli
add
add
add
add
add
test
add
sbb
add
pop
fildl
adcb
add
push
in
je
jecxz
push
add
add
add
add
jae
add
push
add
add
xor
xor
outsl
outsl
outsl
add
add
add
cld
cli
add
sti
clc
add
jo
inc
test
inc
jge
test
xchg
inc
test
inc
mov
inc
test
inc
lods
inc
test
xchg
inc
test
inc
inc
lret
out
or
cli
cld
cli
add
add
add
inc
add
das
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
adc
add
jmp
push
add
add
test
or
xchg
add
add
add
add
add
add
mov
add
jmp
jmp
mov
mov
add
filds
xchg
push
std
sbb
sub
sub
cmp
sub
cmp
sub
xor
and
sbb
or
push
cld
add
lea
jne
lret
mov
int3
call
add
and
and
push
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
out
push
add
add
add
add
add
add
add
xor
and
adc
jle
jle
jle
pop
mov
jle
mov
sbb
sub
cmp
std
jp
xchg
xchg
out
movsl
out
mov
fdivr
mov
cld
jecxz
mov
scas
repz
mov
fisubs
dec
shlb
cmpsl
xor
cld
add
sahf
jg
jg
fsubr
fmull
jle
jle
add
pop
in
add
fiadds
adcb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
fldl
jle
jecxz
adcl
in
add
fldl
sbb
mov
add
cwtl
add
add
adc
pop
add
lea
mov
into
add
movsb
sub
cwtl
ljmp
cli
loope
iret
std
ljmp
cld
in
std
out
xlat
std
lock
fdivr
icebp
xlat
std
lock
cld
out
sar
in
sar
jmp
lret
mov
in
jl
mov
decb
xchg
adc
add
add
xor
jo
stc
cld
stc
add
add
add
push
add
add
mov
adcl
faddl
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
in
jnp
in
adc
sub
or
cmc
add
add
leave
add
or
xor
jbe
cltd
std
mov
xlat
std
sti
jecxz
cli
loop
enter
int
jmp
dec
std
ljmp
std
in
sar
in
sar
in
sar
in
dec
std
in
dec
std
jmp
int
ljmp
cld
out
cli
jecxz
cli
jecxz
ret
xchg
in
mov
std
pop
popf
and
add
add
cwtl
int3
sub
pusha
popa
pusha
pop
add
add
jl
fiadds
jle
fldl
adcb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
fists
jbe
jmp
jle
clc
or
xchg
and
adc
sub
or
and
add
add
sbb
insl
std
xchg
in
mov
inc
cld
in
ret
inc
sti
jecxz
cld
out
sti
in
ret
sti
in
sti
out
inc
std
jmp
dec
std
jmp
std
ljmp
cld
out
sti
in
sti
in
cld
out
cld
in
ret
inc
sti
jecxz
std
out
mov
xlat
jnp
pushf
std
das
mov
decb
xchg
or
add
jle
mov
add
add
add
add
test
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
sbb
sbb
repz
std
movsl
cmp
or
adc
push
or
std
and
cltd
lods
test
mov
clc
fsin
mov
mov
aad
mov
sti
loope
mov
fdivr
mov
cli
loopne
mov
cld
in
sar
inc
cld
out
mov
sti
jecxz
mov
cli
mov
cli
fdivrp
mov
clc
xlat
mov
aad
mov
xlat
mov
sti
fdivrp
xchg
jmp
decb
addr16
or
adc
add
push
int3
out
add
add
add
inc
add
das
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
fistps
ja
lock
push
std
pushf
call
xchg
pop
popf
and
or
adc
dec
ret
fs
xchg
icebp
mov
test
iret
sahf
bnd
lahf
repz
hlt
enter
int3
mov
lods
clc
aad
stos
not
scas
clc
xlat
scas
stc
mov
fdivr
mov
fdivrp
mov
loope
mov
loope
mov
mov
mov
scas
clc
fsin
lods
clc
stos
not
mov
fsin
lods
clc
mov
repz
lahf
repnz
mov
sti
lods
stc
xlat
jp
movsb
sbb
push
testl
add
and
and
push
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
sbb
sbb
negb
popf
sub
jns
sahf
std
inc
int3
js
or
pop
roll
lods
sti
fdivr
mov
out
mov
xchg
icebp
mov
movsb
not
cmpsl
clc
sar
lahf
cmc
lret
mov
not
movsl
not
cmpsl
clc
aad
test
sti
lods
sti
test
clc
cmpsb
clc
aam
movsb
not
mov
test
mov
stc
popf
hlt
enter
sar
lock
xchg
repnz
cli
movsb
clc
iret
jp
movsl
das
scas
inc
std
add
lcall
jle
jle
add
pop
in
add
fiadds
adcb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
out
adc
pop
std
ja
mov
decb
adc
pop
into
jge
xchg
mov
xchg
repnz
incb
scas
incb
out
mov
nop
icebp
mov
xchg
repz
xchg
repz
xchg
hlt
cwtl
cmc
lret
test
fwait
test
sahf
not
mov
stc
lahf
clc
sar
popf
test
lcall
xchg
hlt
xchg
repz
sahf
test
decb
out
mov
xchg
mov
test
scas
decb
test
jge
stos
std
sub
mov
jecxz
lcall
mov
push
add
add
mov
adcb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
sbb
xor
jbe
popf
std
sub
paddd
push
js
cmpsb
nop
cmc
ret
ja
movsl
jae
mov
jns
test
jge
lods
decb
test
test
mov
decb
repz
hlt
nop
hlt
xchg
cmc
enter
iret
cwtl
clc
iret
xchg
test
xchg
cmc
nop
hlt
repz
decb
repnz
decb
stc
into
jg
mov
jnp
stos
jns
cmpsl
jne
mov
incb
hlt
mov
outsl
out
sbb
add
lret
lea
add
add
pusha
pop
add
add
jl
fiadds
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
bnd
je
push
shrl
xchg
or
pop
filds
incb
in
cmpsb
gs
push
call
mov
decb
icebp
mov
jnp
mov
jge
mov
jg
mov
xor
incb
repnz
decb
test
xchg
sar
repz
incb
icebp
mov
jl
mov
jp
scas
decb
lock
jo
mov
push
lcall
in
incb
ljmp
dec
shlb
setns
std
add
add
sahf
rcrb
add
add
add
test
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
adc
push
sbbl
mov
pushf
std
adc
xchg
adc
dec
outsl
push
fnstsw
imul
mov
pop
jecxz
pop
in
arpl
xchg
data16
imul
test
jbe
lods
jne
stos
ja
lods
jp
mov
jl
mov
jle
mov
jg
mov
xor
decb
test
xor
jg
mov
jge
mov
jnp
mov
jns
mov
ja
lods
je
test
incb
jmp
lcall
in
pop
in
insb
jmp
mov
pop
loop
decb
js
sub
pop
cld
inc
test
je
sti
stc
add
add
add
inc
add
das
add
or
add
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
notb
xchg
sbb
std
lods
inc
incb
xchg
or
xor
push
decb
jne
pop
loop
incb
jecxz
pop
loop
pop
jecxz
pusha
in
arpl
xchg
addr16
jnp
mov
xor
movsb
ja
lods
jge
mov
xor
incb
test
mov
clc
lret
cli
iret
xchg
cli
iret
decb
test
decb
repnz
jns
scas
je
test
outsl
jmp
decb
ljmp
in
pop
in
pop
jecxz
pop
loop
ja
stos
outsb
ljmp
inc
xlat
insb
sbb
add
pusha
mov
inc
in
imul
add
add
add
and
adc
imul
add
test
faddl
test
faddl
push
fildl
sbbl
add
sbb
add
sbb
add
sbb
add
fstl
jge
in
adc
push
sti
aaa
scas
dec
std
imul
std
add
or
sbb
decb
jne
imul
jae
cmpsl
push
filds
pop
loop
pop
jecxz
popa
in
fs
incb
cmc
mov
incb
hlt
sar
hlt
mov
incb
icebp
mov
jle
mov
mov
sar
cmc
sar
lock
jg
mov
jg
mov
xor
incb
hlt
mov
incb
repnz
jne
test
pusha
in
pop
jecxz
pop
loope
push
loopne
in
incb
fnstsw
dec
fidivl
cmp
push
std
add
push
stc
add
add
mov
add
add
jle
add
or
or
and
pop
test
fildl
test
fildl
push
fildl
sbbl
add
sbb
add
sbb
add
fmull
jge
jecxz
andl
sbb
mov
xor
dec
decb
xchg
push
xor
dec
incb
decb
jns
jbe
stos
popa
in
push
fistpll
push
loopne
pop
loope
pop
jecxz
push
icebp
mov
xchg
cli
int3
incb
out
stos
jae
cmpsl
jno
movsl
jo
movsb
jb
cmpsb
jae
test
je
test
incb
repz
jne
stos
jae
test
jno
movsl
jno
movsl
jae
cmpsl
jne
test
decb
jno
movsb
pop
in
pop
loop
pop
loope
push
loopne
push
fistpll
jl
mov
pop
jecxz
decb
jo
inc
fsubrs
sbb
add
mov
add
add
push
add
add
mov
xchg
in
xchg
fmull
xchg
fildl
test
fildl
test
fildl
push
fildl
sbbl
add
sbb
add
sbb
adc
sbb
inc
mov
test
or
sub
aas
incb
push
pop
loop
ja
stos
push
fistpll
push
fidivrs
loopne
arpl
xchg
jge
mov
xor
jle
mov
xchg
sar
out
out
imul
popf
insl
jmp
mov
jo
mov
incb
repnz
jb
cmpsb
jno
movsl
jo
mov
insl
jmp
sahf
push
fwait
push
out
jo
mov
incb
repz
pop
loop
push
fistpll
push
fnstsw
pop
in
jl
mov
inc
fidivl
inc
xlat
push
incb
xchg
or
add
std
cli
add
add
add
pusha
pop
add
add
jg
fimuls
mov
fisttpll
mov
fisttpl
xchg
fildl
test
fildl
test
fildl
push
fildl
sbbl
add
sbb
or
out
xchg
notl
xchg
sbb
jle
mov
incb
mov
cmp
fsubrs
push
call
jbe
push
loopne
jae
cmpsb
jle
mov
insl
jmp
mov
jno
movsb
jp
scas
popa
in
arpl
xchg
gs
push
out
imul
insb
call
lahf
outsb
ljmp
xor
outsb
ljmp
insb
jmp
popf
push
fwait
push
out
gs
arpl
xchg
imul
mov
fs
outsb
ljmp
jp
scas
pop
loop
decb
ja
dec
jg
mov
push
fidivrs
inc
xlat
data16
aaa
iret
pop
adc
and
add
popf
or
add
add
add
test
jp
sub
or
mov
fisttpl
xchg
fildl
test
fildl
test
fildl
push
fildl
sbbb
add
and
adc
pusha
std
xlat
xchg
std
or
decb
cltd
adc
rcrb
cmp
pop
incb
data16
jne
test
pop
loop
push
fistpll
xor
jae
cmpsb
pop
jecxz
push
filds
jnp
scas
insl
jmp
mov
pusha
in
in
fs
data16
addr16
push
out
push
pushf
jbe
stos
incb
call
fwait
imul
cwtl
addr16
gs
fs
in
pusha
in
fs
jge
mov
fs
push
loopne
pop
loop
push
pushf
incb
in
decb
jae
jo
mov
aas
xlat
fs
cmp
pop
and
pop
cld
inc
test
add
inc
inc
inc
add
das
add
adc
adc
fcoml
mov
fisttpl
mov
fisttpl
xchg
fildl
test
faddl
test
faddl
sbbb
pop
mov
sti
sub
movsl
std
push
les
add
paddd
lods
sub
rcrl
cmp
pop
incb
incb
arpl
xchg
incb
in
decb
decb
jns
push
fidivrs
push
filds
popa
in
pop
loop
pop
loop
pop
jecxz
popa
in
in
fs
gs
gs
out
je
cmpsl
incb
out
data16
gs
fs
arpl
xchg
in
pusha
in
pop
jecxz
pop
jecxz
pop
jecxz
jnp
scas
data16
push
fistpll
push
fidivrs
fnstsw
pop
loop
incb
out
pusha
in
insb
ljmp
aaa
rcrl
sub
dec
decb
xchg
paddw
inc
xchg
cli
std
cli
add
add
add
and
adc
insb
add
out
mov
fcoml
mov
fcoml
mov
fcoml
mov
push
mov
fmull
xchg
fmull
xchg
faddl
test
fldl
test
fldl
test
loop
mov
cld
pop
ret
jae
push
fsts
std
add
cmp
xor
push
aaa
rcrl
dec
fidivrs
mov
js
stos
pop
loop
incb
outsl
decb
jb
dec
push
fnstsw
push
filds
push
loopne
pop
loopne
pop
loope
pop
loop
pop
loop
pop
jecxz
pusha
in
popa
in
in
arpl
xchg
jno
mov
arpl
xchg
in
popa
in
popa
in
pusha
jecxz
pop
jecxz
pop
loop
pop
loop
pop
loope
pop
loope
ja
stos
addr16
push
fidivrs
fdivrl
dec
dec
push
fistpll
js
lods
jno
mov
incb
data16
rcrb
xor
push
decb
sahf
sbb
and
mov
add
jle
add
paddsb
lea
fstl
xor
adc
fists
mov
push
xchg
loope
test
loope
test
loope
test
loop
andb
js
daa
stc
sub
fcompl
std
or
xchg
or
and
rcll
xor
jecxz
decb
fistpll
inc
fsubrs
inc
fldcw
fidivl
dec
fdivl
pop
loope
incb
filds
pop
loopne
pop
loope
pop
loope
pop
loop
pop
loop
pop
jecxz
pop
jecxz
pusha
in
outsl
ljmp
pusha
in
pop
in
pop
jecxz
pop
jecxz
pop
loop
pop
loop
pop
loope
pop
loope
push
loopne
push
loopne
jo
mov
decb
jns
dec
fdivl
dec
inc
fisubrl
inc
fsubrs
dec
repz
incb
push
xor
push
xor
push
adc
mov
jg
jg
mov
push
add
add
mov
mov
in
ficoms
lea
jecxz
mov
out
mov
call
adc
sub
ljmp
sub
push
test
in
ja
sub
adc
mov
inc
std
or
push
daa
movl
inc
fsubrs
test
mov
cmp
popa
aas
incb
imul
fidivl
dec
push
fdivl
pop
loop
incb
filds
pop
filds
pop
loope
pop
loope
pop
loop
pop
loop
pusha
loop
popa
jecxz
jno
mov
popa
jecxz
pusha
jecxz
pusha
loop
pop
loop
pop
loop
pop
loope
pop
loope
pop
loopne
pop
filds
outsl
jmp
mov
decb
jbe
dec
fidivl
dec
fldcw
inc
xlat
addr16
ds
arpl
dec
fdivl
xor
jle
xor
push
cs
dec
sbb
xor
add
pop
push
pusha
popa
pusha
pop
add
add
adcb
sbb
cmp
push
popf
cmp
repz
xchg
ss
xor
cmc
sbb
xor
sbb
xor
sbb
xor
sbb
xchg
cs
sbb
inc
std
outsb
loope
std
and
jbe
sbb
xchg
adc
shld
daa
leave
inc
xor
push
addr16
xchg
sti
into
incb
insl
cmp
pop
incb
decb
outsb
decb
jno
push
fdivrl
addr16
jl
stos
pop
fidivrs
pop
filds
pop
loopne
pop
loopne
pop
loope
pusha
loope
popa
loop
popa
loop
arpl
mov
jae
lahf
incb
jecxz
mov
popa
loop
popa
loop
pusha
loope
pop
loope
pop
loopne
pop
loopne
pop
filds
imul
jnp
stos
push
fnstsw
push
fdivl
dec
fidivl
dec
fldcw
inc
xlat
push
cmp
jno
mov
xor
into
dec
and
cmp
add
add
bound
add
add
add
test
sbb
cmp
pop
mov
inc
stc
daa
mov
cmp
es
cmp
and
ss
and
sub
sbb
xchg
daa
sti
push
nop
and
adc
xchg
and
js
xchg
std
xor
cmp
shll
shll
add
push
daa
lret
inc
incb
insb
jo
mov
cmp
pop
cmp
pop
decb
push
dec
fnstenv
push
fidivl
push
push
fdivrl
imul
jle
stos
pop
filds
pop
filds
pusha
loopne
popa
loope
mov
arpl
mov
fs
fs
jne
lahf
incb
loop
fs
arpl
mov
arpl
mov
mov
popa
loopne
pusha
loopne
pop
filds
pop
filds
jle
stos
push
fnstsw
push
fdivrl
push
push
fnstenv
dec
fsubrs
inc
gs
aaa
rcrl
push
repnz
pop
loop
sub
dec
and
aas
incb
mov
cld
add
add
add
inc
inc
inc
add
xor
fs
sbb
sbb
pushf
inc
in
test
negb
pushf
sub
and
das
std
sub
inc
std
cs
std
xor
dec
std
cmp
pop
std
inc
shlb
lds
imul
std
push
fistl
cld
push
shll
shll
add
and
es
inc
push
lcall
repnz
xor
push
incb
fs
push
fsubrs
push
fnstenv
push
fidivl
pop
fdivrl
outsb
in
incb
fiadds
popa
filds
arpl
xchg
fs
gs
gs
data16
loopw
ja
mov
loopw
data16
data16
gs
fs
fs
arpl
xchg
filds
pusha
fiadds
incb
fnstsw
pop
fdivrl
push
push
fidivl
fnstenv
push
fsubrs
cmp
pop
out
decb
jne
js
lods
cmp
pusha
and
inc
incb
mov
incb
inc
add
inc
inc
inc
add
add
add
and
adc
insl
pop
mov
and
inc
out
push
mov
data16
insl
loop
std
fbld
std
imul
popf
std
imul
movsb
std
popa
loopne
std
pop
fistps
std
push
fcoml
cld
push
shll
push
shll
shll
add
pop
cmp
pop
jo
mov
jge
mov
cmp
pop
push
xlat
insb
push
fnstenv
push
fidivl
fidivl
pop
fstpt
pop
fdivrl
jno
xchg
incb
cmp
filds
data16
loopnew
loopnew
push
loope
push
mov
jp
mov
push
mov
imul
mov
push
loopne
data16
data16
arpl
test
filds
incb
jge
pop
fdivrl
pop
fstpt
pop
fidivl
push
fidivl
push
fdivs
dec
data16
out
incb
outsb
push
loope
pop
loope
and
inc
incb
mov
incb
inc
add
inc
inc
inc
add
add
add
jle
add
adc
and
inc
loop
scas
inc
imull
std
das
fadds
cld
sub
jle
and
jns
and
js
and
js
and
ja
and
ja
and
jbe
pop
aam
cld
pop
aam
cld
pop
shll
push
shll
shlb
add
pusha
in
decb
jne
sub
inc
jl
mov
dec
fs
push
fdivs
pop
fnstenv
pop
fidivl
pop
fstpt
pop
fdivrl
pusha
fnstsw
jne
xchg
decb
filds
filds
filds
push
mov
push
mov
imul
insb
loope
insb
loop
jge
mov
insb
loop
insb
loop
imul
imul
push
mov
push
mov
imul
xchg
filds
filds
xchg
scas
fnstsw
pusha
fdivrl
fstpt
pop
fstpt
pop
fidivl
pop
fnstenv
push
fsubrs
outsb
jmp
push
cmp
pusha
addr16
dec
incb
mov
incb
pop
add
mov
push
add
add
mov
xchg
cmp
and
stos
dec
in
movsb
cmp
pusha
shrb
jecxz
std
sub
jg
xlat
jge
and
jl
and
jnp
and
jns
and
jns
pop
aad
cld
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
push
shll
push
shll
sbb
mov
std
sbb
stos
es
inc
and
inc
jl
lods
pop
fidivl
pop
fnstenv
fidivl
pop
fstpt
popa
fstpt
fdivrl
fnstsw
js
cltd
decb
test
push
xchg
imul
insb
loopne
insl
loopne
outsl
loope
je
xchg
ja
xchg
jp
lcall
in
scas
xchg
icebp
mov
jnp
pushf
jns
cwtl
jbe
xchg
jno
outsb
loope
insl
loopne
insb
fisttps
imul
fwait
decb
fldl
fdivrl
fstpt
pop
fidivrl
pop
fidivl
pop
fidivl
jl
mov
sub
dec
arpl
xchg
cmp
pop
std
add
add
pusha
popa
pusha
pop
add
add
adcl
cwtl
dec
fisubrs
mov
dec
cmc
sub
std
sub
cmp
fdivrs
xlat
jge
and
jnp
and
jp
and
jns
pop
aad
cld
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
push
shll
push
shlb
xchg
adc
leave
cmp
and
cmp
insl
loopne
pusha
fidivl
fidivrl
fstpt
fdivrl
fdivrl
push
out
nop
out
mov
insl
filds
jae
incb
in
lods
xchg
out
mov
xchg
out
mov
xchg
out
mov
xchg
lock
pushf
bnd
test
xchg
out
mov
xchg
out
mov
xchg
lock
xchg
out
mov
test
movsl
jp
xchg
jo
mov
insl
fisttps
decb
fiadds
data16
fstpt
fstpt
popa
fstpt
fdivrl
ljmp
and
cmp
dec
fidivrs
inc
shrb
add
aas
add
add
add
add
add
test
sub
in
sub
fs
jl
scas
std
fildl
cld
sub
cmp
fdivrs
daa
xlat
jle
and
jnp
and
jp
and
jns
and
js
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
push
shll
mov
cmp
inc
shll
sbb
aaa
push
leave
cmp
jne
xchg
jl
xchg
fstpt
fstpt
push
faddl
insl
fiadds
fwait
icebp
mov
xchg
out
mov
movsb
cmc
enter
mov
incb
out
jle
lcall
in
decb
lock
jnp
xchg
jge
cltd
jg
fwait
incb
jmp
mov
mov
hlt
ljmp
in
scas
outsb
fiadds
imul
imul
jge
data16
insb
fiadds
cmp
leave
cmp
cmp
int3
jo
add
jle
inc
inc
inc
add
xor
adc
dec
fildll
push
in
mov
negb
popf
sub
lcall
std
xor
test
das
fiaddl
sub
cmp
daa
xlat
jle
and
jnp
and
jp
and
jns
and
js
pop
aad
cld
pop
aam
cld
push
aam
cld
push
aam
cld
push
shll
lods
xor
sub
inc
pop
xor
and
cmp
jb
mov
mov
stos
push
jge
imul
insl
faddl
jo
test
jne
mov
mov
movsl
scas
clc
sar
cmpsb
hlt
leave
decb
loop
js
mov
js
js
nop
jns
nop
jns
xchg
jp
xchg
jp
xchg
decb
out
mov
jp
xchg
jns
xchg
jns
xchg
jns
nop
js
js
ja
mov
and
pushf
lock
sahf
lock
jno
xchg
jo
test
outsb
fldl
insb
fdivrl
jbe
mov
nop
in
scas
incb
pop
sbb
xor
sub
dec
sub
lea
jg
jg
and
and
xchg
cmp
cs
push
stos
push
in
and
insb
std
and
mov
xor
mov
xor
test
das
fiaddl
sub
cmp
daa
xlat
jle
xlat
jge
and
jl
and
jp
and
jns
and
js
pop
aad
cld
push
aam
cld
push
aam
cld
push
shll
adc
or
adc
and
cmp
fdivrl
mov
faddl
jb
test
jae
xchg
jg
xchg
pushf
out
mov
mov
xlat
jge
xchg
jns
mov
jnp
jnp
nop
jl
xchg
jl
xchg
jl
xchg
jge
xchg
jge
xchg
jle
xchg
decb
out
mov
jge
xchg
jge
xchg
jge
xchg
jl
xchg
jl
xchg
jnp
nop
jnp
nop
jp
jl
xchg
pushf
out
mov
mov
call
mov
jae
test
jno
cmp
fldl
xchg
in
mov
inc
rcrb
push
das
sbb
mov
and
mov
add
add
jle
add
sbb
cs
push
fildll
lahf
push
loopne
mov
imull
movsl
aaa
std
nop
std
fmull
cld
xor
xchg
xor
xchg
das
fiaddl
sub
cmp
sub
jg
xlat
jge
and
jnp
and
jns
and
js
pop
aad
cld
pop
aam
cld
push
aam
cld
sbb
pop
std
add
adc
sub
and
aaa
popa
fnstenv
stos
cmc
leave
jl
mov
jne
xchg
ja
mov
mov
lahf
lods
cmc
lret
ljmp
lods
cmc
int
and
jle
xchg
jg
xchg
jg
xchg
incb
loop
incb
loop
incb
jecxz
xchg
jmp
mov
incb
loop
incb
loop
incb
loop
jg
xchg
jg
xchg
jg
xchg
mov
call
mov
lahf
out
mov
jbe
xchg
jne
test
out
xchg
jmp
aas
rclb
adc
sub
push
mov
or
inc
test
cli
add
add
add
push
add
add
mov
cltd
inc
in
mov
pop
in
sub
imul
out
std
cmp
mov
cmp
mov
fisttpl
cld
xor
mov
xor
xchg
das
fiaddl
sub
cmp
fadds
cld
daa
xlat
jle
and
jnp
and
jns
and
js
and
js
pop
aam
cld
sbb
push
or
pop
decb
shlb
push
xor
fnstenv
mov
call
mov
nop
out
stos
repnz
decb
loope
incb
lock
incb
loop
incb
xchg
incb
jecxz
incb
jecxz
incb
ljmp
xchg
cltd
incb
jecxz
incb
jecxz
incb
loop
incb
xchg
decb
out
mov
incb
loope
mov
out
mov
jge
mov
mov
out
aas
iret
push
adc
daa
decb
lods
adc
cld
inc
test
add
pusha
popa
pusha
pop
add
add
test
fidivs
cmpsl
pop
jecxz
mov
hlt
sub
mov
std
cmp
cld
cmp
mov
cmp
mov
aaa
fisttpl
cld
xor
mov
xor
xchg
xor
test
flds
cld
sub
cmp
daa
xlat
jle
and
jnp
and
jns
and
js
and
ja
push
shlb
mov
std
add
sbb
pop
les
fdivs
jmp
mov
mov
lret
call
xchg
incb
loop
popf
jmp
movsb
out
mov
decb
jecxz
decb
jecxz
decb
in
decb
in
lcall
decb
in
decb
in
decb
jecxz
decb
jecxz
decb
out
test
in
incb
loope
incb
out
mov
decb
cmc
into
incb
int
decb
or
add
popf
or
add
add
add
add
test
aaa
mov
pusha
in
sub
popa
incb
xchg
std
ficoms
cld
cmp
mov
cmp
cld
aaa
fisttpl
cld
xor
mov
xor
xchg
xor
test
flds
sub
cmp
daa
xlat
jle
xlat
jge
and
jnp
and
jp
and
js
pop
aam
cld
pop
ret
add
adc
add
or
popa
xlat
outsl
nop
in
mov
enter
sar
popf
ljmp
mov
xchg
decb
jecxz
xchg
call
int
mov
fwait
decb
in
decb
in
decb
in
decb
in
lahf
jmp
lods
icebp
ret
nop
in
decb
in
decb
in
decb
in
decb
in
lcall
decb
jecxz
decb
loop
nop
in
mov
test
mov
incb
leave
cmp
incb
xchg
add
add
std
cli
add
add
add
inc
add
xor
fs
mov
pusha
in
mov
cmc
sbb
sub
xchg
call
movsb
std
inc
fists
cld
ficoms
cld
cmp
mov
cmp
cld
cmp
mov
fisttpl
cld
xor
xchg
xor
test
das
flds
sub
cmp
fadds
cld
xlat
jge
and
jp
and
js
pop
aam
cld
or
xchg
add
pop
mov
incb
push
decb
lock
mov
jecxz
decb
jecxz
decb
in
xchg
in
mov
call
lahf
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
out
mov
icebp
xchg
out
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
cmpsl
in
mov
xchg
in
nop
in
decb
jecxz
decb
ljmp
xchg
out
jo
jl
sbb
sahf
or
add
mov
add
and
adc
sub
fnstsw
mov
in
sub
imul
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
aas
ficoms
cld
cmp
cld
cmp
cld
cmp
mov
fisttpl
cld
xor
xchg
xor
xchg
das
flds
cld
sub
cmp
fadds
cld
daa
xlat
jge
and
jnp
and
js
sbb
pop
std
add
or
sbb
jecxz
mov
inc
neg
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
mov
leave
cmpsl
in
mov
cwtl
in
cwtl
out
cwtl
out
cwtl
out
cltd
out
cltd
out
cltd
out
lcall
mov
enter
cmpsb
cltd
out
cltd
out
cltd
out
cltd
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
mov
leave
cmpsb
in
mov
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
movsb
jmp
dec
cli
loope
xchg
in
pop
aam
decb
mov
stc
inc
test
xchg
fsubr
fmull
jle
jle
add
sbb
fistpll
fs
mov
cmp
std
pop
jecxz
std
dec
loope
cld
inc
loopne
cld
inc
loopne
cld
inc
fists
cld
aas
ficoms
cld
cmp
cld
cmp
cld
cmp
mov
aaa
fisttpl
cld
xor
mov
xor
xchg
xor
test
flds
sub
cmp
daa
xlat
jge
and
jnp
and
ja
or
sub
incb
mov
jns
test
mov
dec
stc
stos
in
mov
lcall
fwait
out
pushf
out
scas
out
mov
sahf
out
sahf
out
sahf
out
sahf
out
lahf
out
lahf
out
lahf
out
lahf
call
mov
lahf
call
stos
lahf
out
lahf
out
lahf
out
sahf
out
sahf
out
sahf
out
lahf
call
mov
out
fwait
out
fwait
out
lcall
mov
stc
xchg
out
cmp
dec
incb
popf
or
add
aas
mov
push
add
add
xor
fidivrs
in
das
scas
dec
cli
pop
shrb
jmp
popf
cld
dec
loope
cld
dec
loope
cld
inc
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
cld
cmp
mov
cmp
mov
aaa
fmull
cld
xor
mov
xor
xchg
xor
test
das
flds
sub
cmp
sub
jle
xlat
jl
and
jnp
sbb
data16
push
cltd
sbb
add
dec
mov
ret
out
mov
test
out
mov
out
mov
jmp
inc
repz
stos
jmp
movsl
jmp
lods
movsl
jmp
scas
cmpsb
jmp
scas
cmpsb
jmp
mov
cmpsb
jmp
scas
cmpsb
jmp
scas
movsl
jmp
scas
movsb
call
lods
mov
inc
repz
mov
call
stos
mov
out
mov
sar
repz
inc
cmc
sar
jg
mov
adc
add
inc
test
je
cld
stc
add
add
add
pusha
pop
add
add
xchg
inc
test
fldl
push
aas
mov
cmp
mov
test
imul
sahf
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
inc
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
fmull
cld
cmp
mov
fisttpl
cld
xor
xchg
xor
xchg
das
flds
sub
cmp
sub
jle
es
jl
and
js
adc
dec
std
add
sbb
mov
mov
inc
repnz
stos
ljmp
test
mov
test
ljmp
mov
ljmp
stos
ljmp
mov
mov
mov
hlt
sar
int3
neg
mov
lock
ret
mov
mov
stos
ljmp
lods
ljmp
mov
mov
test
jmp
scas
stos
ljmp
mov
mov
cmp
inc
incb
xchg
add
add
adc
add
add
add
add
add
in
test
jo
xor
arpl
lcall
std
push
in
cld
dec
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
fisttpll
cld
cmp
mov
aaa
fisttpl
cld
xor
xchg
xor
xchg
xor
test
flds
cld
sub
cmp
fdivrs
es
jge
and
je
push
test
add
mov
sar
in
mov
mov
ljmp
mov
mov
mov
mov
mov
neg
mov
mov
dec
neg
sar
loopne
lret
neg
inc
repz
ret
repnz
dec
cmc
xlat
sar
loopne
repz
inc
repz
hlt
aam
iret
clc
iret
clc
repz
mov
mov
dec
neg
mov
mov
mov
mov
scas
jmp
mov
mov
hlt
aam
ret
repz
mov
mov
incb
xchg
or
add
inc
inc
inc
inc
add
xor
sbb
filds
jo
aas
mov
aaa
cld
lods
out
int3
std
mov
jmp
std
pop
in
std
push
in
cld
push
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
fstl
cld
cmp
cld
cmp
mov
aaa
fisttpl
cld
xor
mov
xor
xchg
xor
test
flds
cld
sub
cmp
xlat
jle
es
jge
and
ja
or
adc
outsl
int3
cmp
mov
clc
loop
ret
mov
in
mov
mov
stc
out
jmp
inc
lock
in
sar
in
mov
mov
icebp
int3
dec
cmc
fdivr
mov
in
mov
mov
out
ret
inc
repnz
xlat
stc
in
in
dec
hlt
aam
mov
in
mov
mov
repz
iret
cmc
mov
mov
std
xor
inc
std
add
push
int
int
and
and
outsl
or
inc
lods
jb
inc
mov
dec
cli
pusha
jns
mov
std
sahf
lock
std
fwait
out
enter
mov
pop
in
std
push
in
cld
push
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
fstl
cld
cmp
mov
cmp
mov
aaa
fisttpl
cld
xor
mov
xor
xchg
xor
test
das
flds
sub
cmp
daa
jle
push
gs
or
adc
js
cmp
jmp
inc
repnz
fdivr
in
enter
mov
out
shl
fsin
xlat
mul
out
lock
out
inc
out
out
out
out
repnz
shl
fdivr
shr
inc
out
out
out
out
out
dec
hlt
aad
fdivr
jmp
inc
repnz
mov
out
ret
dec
hlt
aam
loopne
ret
popf
fbld
std
pop
mov
mulb
lcall
jle
jle
add
and
inc
lods
outsb
fisttps
jae
inc
shlb
mov
cld
pushf
jecxz
std
cmpsb
icebp
sar
lahf
lock
std
popf
out
leave
std
cltd
out
std
sub
std
pop
out
std
push
in
cld
push
jecxz
cld
dec
loop
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
fstl
cld
cmp
mov
cmp
mov
cmp
mov
fisttpl
cld
xor
xchg
xor
test
das
flds
sub
cmp
daa
aad
cld
push
std
or
sbb
insl
ret
jb
mov
hlt
xlat
call
shl
fsin
fprem
jecxz
lret
repnz
fdiv
loopne
aad
icebp
int3
inc
icebp
lret
inc
lock
inc
lock
inc
icebp
int3
dec
hlt
xlat
mul
inc
icebp
int3
inc
lock
inc
lock
inc
lock
inc
lock
dec
icebp
int3
out
shl
fsin
iret
hlt
fdivr
out
leave
repnz
shl
fsin
out
leave
repz
scas
in
sub
pop
testl
add
mov
push
add
add
cmp
ja
dec
mov
push
cli
gs
jnp
mov
aam
mov
icebp
int
lahf
lock
std
sahf
out
lret
out
leave
std
xchg
in
std
push
scas
std
push
in
std
push
jecxz
cld
push
loop
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
fmull
cld
cmp
mov
fisttpl
cld
xor
xchg
xor
xchg
xor
test
flds
cld
sub
jg
sub
jle
shlb
movsb
sub
decb
dec
mov
mov
loop
jmp
in
out
fdiv
iret
repz
shl
fdivr
loopne
jmp
shl
aam
iret
repz
iret
repnz
iret
repz
neg
in
iret
repz
into
repnz
iret
repnz
iret
repz
shl
out
loop
iret
repz
iret
repz
call
loopne
jmp
incb
fwait
and
add
push
int3
out
add
add
add
pusha
pop
add
add
mov
fimuls
jns
dec
mov
loop
lds
xor
inc
cld
pushf
in
std
lods
repnz
movsl
icebp
sar
mov
lock
std
mov
lock
std
popf
out
lret
out
std
jle
mov
cld
push
jecxz
cld
push
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
cmp
fmull
cld
cmp
mov
aaa
fisttpl
cld
xor
xchg
xor
xchg
xor
test
das
fiaddl
cmp
fstl
xor
xchg
push
cmp
xchg
dec
icebp
aam
out
out
in
in
fdivrp
in
fdiv
fdiv
loop
out
out
fdivp
in
fdiv
fdivr
xlat
cmc
fdiv
fdivr
loop
loop
jmp
xlat
cmc
xlat
cmc
fdivrp
loop
jmp
fdiv
fdiv
fdivrp
in
call
stc
ljmp
mov
push
cld
add
add
jle
jle
mov
add
add
add
add
pop
test
push
mov
fimuls
sub
pop
ret
mov
fdivr
stos
repnz
test
sar
cmpsb
icebp
sar
movsb
icebp
sar
mov
lock
lahf
lock
std
sahf
lock
out
leave
std
nop
in
ret
std
jbe
mov
pop
in
std
push
jecxz
cld
dec
jecxz
cld
dec
loop
cld
dec
loope
cld
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
fstl
cld
cmp
mov
cmp
mov
cmp
mov
fisttpl
cld
xor
fmull
std
insl
jecxz
std
je
stos
std
je
stos
std
imul
std
dec
jno
adc
sbb
push
mov
inc
jmp
repnz
ljmp
loop
out
jecxz
call
out
in
loopne
in
jecxz
in
jmp
jecxz
jecxz
loope
out
ljmp
loopne
out
loop
call
jmp
repnz
fcomip
out
mov
mov
xor
mov
testl
lds
add
add
add
inc
add
xor
fs
xchg
das
jecxz
scas
jne
push
mov
jp
sub
sar
mov
fdivr
lods
repz
stos
repnz
test
sar
cmpsb
icebp
sar
movsl
icebp
sar
movsb
icebp
iret
std
mov
lock
lahf
lock
std
sahf
lock
out
leave
std
xchg
out
std
sub
std
addr16
std
pop
in
std
push
jecxz
cld
dec
loop
cld
dec
loope
std
dec
loopne
cld
inc
loopne
cld
inc
fists
cld
inc
ficoms
cld
aas
ficoms
cld
inc
ficoms
std
popa
loop
std
je
lods
std
jl
mov
jl
mov
jp
scas
std
js
lods
std
jbe
lods
std
jne
stos
std
jae
test
std
cmp
pop
pop
pushf
and
adc
movsb
fldenv
out
jmp
out
cld
hlt
in
sti
icebp
icebp
cld
idiv
repz
clc
out
sti
repz
out
cld
repnz
out
sti
repz
in
sti
icebp
lock
cmc
repz
stc
out
sti
repz
in
sti
lock
out
sti
hlt
fdiv
mov
lret
mov
and
and
incb
mov
std
add
cwtl
and
or
and
and
outsl
or
cmp
sbb
mov
push
cli
arpl
jl
mov
hlt
xlat
std
scas
hlt
std
lods
repz
stos
repnz
test
repnz
cmpsb
icebp
sar
movsl
icebp
iret
std
mov
icebp
int
mov
lock
std
popf
out
leave
std
pushf
out
enter
std
in
mov
std
jne
mov
insl
out
std
data16
std
fs
std
arpl
cmpsb
std
popa
in
std
pop
jecxz
std
arpl
cmpsl
std
addr16
std
outsl
in
std
js
scas
std
sub
std
sub
std
and
std
jg
mov
jle
mov
jge
mov
jnp
mov
jns
scas
std
js
scas
std
jbe
lods
std
jne
stos
std
jno
cmpsb
std
pop
rorl
sbb
paddd
mov
nop
mov
ljmp
cmc
std
clc
hlt
cld
clc
cmc
cld
clc
cmc
std
clc
lock
hlt
fcomi
fdivrp
shl
cmpsb
fsubrs
decb
dec
and
adc
decb
test
loopne
push
add
jg
add
add
add
jle
add
daa
in
push
mov
ficoms
sbb
les
mov
cld
sahf
jecxz
std
mov
mov
fscale
mov
xlat
std
scas
hlt
std
lods
repz
stos
repz
stos
repnz
test
repnz
cmpsb
icebp
sar
movsb
icebp
iret
std
mov
lock
mov
lock
out
enter
std
cltd
out
std
cwtl
out
std
xchg
in
ret
std
nop
in
sar
jmp
std
ljmp
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
sub
std
sub
std
sub
mov
jle
mov
jl
mov
jp
mov
jns
scas
std
ja
lods
std
jne
stos
std
je
stos
std
jo
movsb
std
popa
aad
std
dec
je
sub
pop
decb
xchg
adc
and
cmp
inc
incb
inc
incb
inc
incb
inc
cmpsl
inc
xor
xor
daa
popf
sub
sbb
or
sbb
sub
xor
push
incb
jp
and
mov
add
xor
mov
push
add
add
add
in
mov
fstl
mov
cmp
jl
mov
hlt
mov
mov
fscale
mov
fdivr
scas
hlt
xlat
std
lods
repz
std
lods
repz
stos
repnz
stos
repnz
test
sar
cmpsl
repnz
movsl
icebp
sar
movsb
icebp
into
std
mov
lock
std
lahf
lock
std
sahf
lock
out
leave
std
pushf
out
enter
std
cwtl
out
in
std
xchg
in
ret
std
xchg
in
ret
jmp
std
nop
jmp
std
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
sub
std
sub
std
sub
std
jg
mov
jge
mov
jl
mov
jp
scas
std
js
scas
std
ja
lods
std
jne
stos
std
je
stos
std
jb
cmpsl
std
outsl
loope
std
outsb
loopne
std
pop
aam
std
inc
ret
aaa
mov
std
sub
inc
sbb
sub
sbb
sub
sbb
sub
sbb
sub
and
inc
std
cmp
enter
aad
pop
fistpl
incb
mov
adc
dec
sti
add
mov
push
add
pusha
popa
pusha
pop
add
add
mov
ficomps
mov
pop
mov
mov
xor
mov
std
mov
mov
mov
mov
mov
fscale
mov
fdivr
scas
repz
std
lods
repz
std
lods
repnz
stos
repnz
test
repnz
cmpsb
icebp
sar
movsb
icebp
iret
std
mov
lock
mov
lock
std
sahf
out
lret
out
leave
std
lcall
std
xchg
in
in
std
xchg
in
ret
std
xchg
in
ret
in
sar
in
mov
std
mov
mov
std
mov
mov
std
xchg
mov
std
sub
std
sub
mov
jle
mov
jl
mov
jnp
mov
jns
scas
std
js
lods
std
ja
lods
std
jne
stos
std
je
test
std
jo
cmpsb
std
outsl
loope
std
insb
loopne
std
push
mov
std
push
fisubs
std
fstpl
ficomps
std
fcompl
fs
push
fstpl
std
add
xor
push
pusha
popa
pusha
add
add
add
add
test
in
mov
nop
call
popa
ret
jbe
mov
neg
std
mov
cmc
mov
fdivr
mov
mov
mov
fscale
mov
fdivr
scas
hlt
xlat
std
scas
repz
std
lods
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
movsl
icebp
sar
movsb
icebp
iret
std
mov
lock
mov
lock
std
popf
out
leave
std
pushf
out
enter
std
cltd
in
std
xchg
in
in
ret
std
xchg
in
ret
in
sar
in
sar
jmp
std
jmp
std
mov
mov
std
mov
mov
std
test
mov
std
sub
std
and
mov
jge
mov
jl
mov
jnp
scas
std
jp
scas
std
js
lods
std
ja
stos
std
jne
stos
std
jae
test
std
jo
cmpsb
std
outsb
loope
std
insl
loope
std
insb
loope
std
imul
std
imul
std
push
mov
std
fisubs
fcompl
arpl
mov
std
adc
add
inc
inc
inc
add
xor
and
fistps
xchg
loope
movb
mov
xlat
std
shl
std
mov
mul
std
mov
cmc
fdivrp
mov
mov
fdivr
mov
mov
mov
fscale
mov
fdivr
scas
repz
std
lods
repnz
std
lods
repnz
stos
repnz
test
icebp
sar
cmpsl
icebp
sar
movsl
icebp
iret
std
movsb
icebp
iret
std
mov
lock
std
lahf
lock
std
sahf
out
lret
out
leave
std
fwait
out
enter
std
cwtl
in
in
std
xchg
in
ret
std
xchg
in
ret
in
sar
in
sar
jmp
std
jmp
std
mov
mov
std
mov
mov
std
test
mov
sub
std
and
std
and
std
jg
mov
jle
mov
jl
mov
jnp
scas
std
jns
lods
std
js
lods
std
jbe
stos
std
je
test
std
jno
cmpsl
std
outsl
loop
std
outsb
loope
std
insl
loope
std
insb
loope
std
insb
loopne
std
push
mov
std
fstpl
loopne
decb
xchg
sbb
pop
incb
sub
and
add
add
and
adc
jo
mov
popa
mov
xchg
jmp
addr16
clc
in
shl
std
mov
mul
std
mov
neg
std
mov
cmc
mov
fdivr
mov
mov
mov
fscale
mov
fdivr
mov
xlat
std
scas
repz
std
lods
repnz
lods
repnz
stos
repnz
test
icebp
sar
cmpsb
icebp
sar
movsb
icebp
iret
std
mov
lock
mov
out
lret
out
lret
out
leave
std
lcall
std
xchg
in
in
std
xchg
in
ret
std
xchg
in
ret
in
sar
jmp
std
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
and
std
and
mov
jle
mov
jge
mov
jl
scas
std
jp
scas
std
jns
lods
std
ja
stos
std
jne
stos
std
je
test
std
jno
cmpsl
std
outsl
loop
std
outsb
loope
std
insl
loope
std
insb
fbld
std
imul
movsb
sub
jns
or
add
inc
inc
push
jle
jle
add
sub
pop
mov
xchg
ficoms
repz
mov
std
sar
std
sar
std
mov
mul
std
mov
neg
std
mov
neg
std
mov
fdivr
mov
mov
mov
mov
fscale
mov
fdivr
scas
repz
std
scas
repz
std
lods
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
cmpsb
icebp
sar
movsb
icebp
into
std
mov
lock
std
mov
out
lret
out
leave
std
fwait
out
enter
std
cwtl
in
std
xchg
in
in
std
xchg
in
ret
std
xchg
in
ret
in
sar
jmp
std
mov
mov
std
mov
mov
std
xchg
mov
std
test
mov
and
std
and
std
jg
mov
jle
mov
jge
mov
jl
scas
std
jp
lods
std
js
lods
std
ja
stos
std
jne
stos
std
jae
test
std
jo
cmpsl
std
outsb
loope
std
insl
fbld
insl
loop
decb
xchg
std
push
mov
pop
mov
mov
push
add
add
add
in
mov
pushf
call
push
cmp
mul
std
stc
out
stc
in
ret
std
sar
std
mov
mul
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
mov
mov
fscale
mov
fdivr
mov
xlat
std
scas
repz
std
scas
repz
lods
repnz
stos
repnz
test
icebp
sar
cmpsl
icebp
sar
movsl
icebp
iret
std
movsb
lock
std
mov
lock
std
lahf
out
lret
std
sahf
out
leave
std
pushf
out
enter
std
lcall
std
xchg
in
std
xchg
in
ret
std
xchg
in
ret
in
sar
jmp
std
jmp
std
ljmp
mov
mov
std
xchg
mov
std
and
std
and
std
and
std
jg
mov
jle
mov
jl
mov
jnp
scas
std
jp
lods
std
js
lods
std
jbe
stos
std
je
test
std
jo
movsl
std
insb
ficomps
pop
fistps
incb
xor
push
xor
add
add
add
pop
pop
add
add
mov
fisubs
cwtl
frstor
lcall
lods
inc
std
cmpsb
call
call
std
stc
out
stc
out
ret
stc
in
ret
std
sar
std
mov
mul
std
mov
neg
std
mov
neg
std
mov
cmc
mov
mov
fscale
mov
fscale
mov
fdivr
mov
std
scas
repz
lods
repnz
lods
repnz
stos
repnz
test
icebp
sar
cmpsb
icebp
iret
std
movsl
lock
std
mov
lock
std
mov
out
lret
out
leave
std
pushf
out
enter
std
cltd
in
std
cwtl
in
in
std
xchg
in
ret
std
xchg
in
sar
jmp
std
nop
jmp
std
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
and
std
and
mov
jg
mov
jge
mov
jl
scas
std
jnp
scas
std
jns
lods
std
ja
stos
std
je
test
outsl
loope
imul
fmuls
cld
add
aas
dec
inc
adc
add
add
adc
sbb
scas
insb
out
mov
lahf
out
mov
xchg
xbegin
jmp
std
enter
stc
out
vcvttpd2dq
stc
in
ret
std
sar
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
mov
fdivr
mov
mov
mov
fscale
mov
fdivr
mov
xlat
std
scas
repz
std
scas
repz
lods
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
movsl
icebp
iret
std
movsb
lock
std
mov
out
int3
std
mov
out
leave
std
popf
out
leave
std
fwait
out
enter
std
cwtl
in
in
std
xchg
in
ret
std
xchg
in
ret
jmp
std
xchg
jmp
std
mov
mov
std
mov
mov
std
xchg
mov
std
test
mov
and
std
and
mov
jg
mov
jge
mov
jl
scas
std
jns
lods
std
ja
stos
std
jae
movsl
je
stos
pop
fistps
std
add
push
add
add
add
and
xor
push
int3
movsb
fstps
xchg
out
xor
jecxz
int
jmp
lret
cli
ljmp
cli
jmp
std
stc
out
vcvttpd2dq
stc
in
ret
clc
in
ret
std
sar
std
mov
mul
std
mov
neg
std
mov
cmc
mov
hlt
mov
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
scas
repz
std
lods
repnz
lods
repnz
stos
repnz
test
icebp
sar
cmpsb
icebp
iret
std
movsl
lock
std
movsb
lock
mov
out
lret
std
lahf
out
lret
out
leave
std
pushf
out
enter
std
cltd
in
std
cwtl
in
in
std
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
nop
ljmp
ljmp
mov
mov
std
xchg
mov
std
test
mov
and
std
and
mov
jle
mov
jge
scas
std
jns
test
ja
stos
jb
stos
sub
lahf
sub
add
jae
inc
inc
add
pop
mov
cmp
aas
mov
aam
lret
mov
ds
xchg
cld
int
jmp
int
jmp
int
jmp
int3
cli
ljmp
cli
jmp
std
stc
out
stc
out
vcvttpd2dq
stc
in
ret
std
sar
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
mov
hlt
mov
mov
fscale
mov
fdivr
mov
xlat
std
scas
repz
std
scas
repz
lods
repnz
stos
repnz
stos
repnz
test
icebp
sar
cmpsb
lock
std
movsl
lock
std
mov
out
int3
std
mov
out
lret
out
leave
std
pushf
out
enter
std
cltd
in
in
std
xchg
in
ret
std
xchg
in
ret
jmp
std
xchg
jmp
std
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
test
mov
and
std
and
std
jle
scas
std
jp
stos
jp
mov
push
fstpl
std
add
mov
sbb
jmp
jmp
mov
mov
sbb
mov
cli
jmp
into
stc
jmp
int
jmp
int
jmp
int
jmp
int3
cli
ljmp
stc
call
std
stc
out
stc
out
stc
in
clc
in
ret
clc
in
sar
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
mov
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
scas
repz
std
lods
repnz
lods
repnz
stos
repnz
stos
repnz
test
icebp
sar
movsl
lock
std
movsb
out
int
mov
out
lret
std
mov
out
lret
out
enter
std
lcall
std
xchg
in
std
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
xchg
ljmp
mov
mov
std
mov
mov
std
mov
mov
std
test
mov
and
std
jle
stos
jle
mov
insl
loop
ss
std
pop
lea
pop
lea
add
inc
inc
inc
push
or
mov
jnp
scas
loop
repz
repnz
int3
mul
std
int
ljmp
cli
jmp
int3
cli
ljmp
cli
jmp
std
enter
stc
out
stc
out
vpmulhw
ret
clc
in
ret
std
sar
std
mov
mul
std
mov
neg
std
mov
cmc
mov
hlt
mov
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
lods
repnz
lods
repnz
stos
repnz
test
icebp
sar
cmpsb
lock
std
movsl
lock
std
mov
out
int3
std
mov
out
lret
out
leave
std
pushf
out
enter
std
cltd
in
std
cwtl
in
std
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
xchg
jmp
std
nop
ljmp
ljmp
mov
mov
std
xchg
mov
and
incb
out
decb
xchg
adc
push
add
inc
jb
adc
lcall
xchg
fadd
fimuls
ffree
jmp
lock
leave
hlt
loop
int3
clc
out
into
stc
jmp
int3
stc
ljmp
cli
jmp
std
enter
stc
out
stc
out
vpmulhw
clc
in
ret
std
sar
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
fscale
mov
fdivr
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
test
sar
cmpsl
lock
std
cmpsb
lock
std
movsb
lock
std
mov
out
int3
std
mov
out
leave
std
popf
out
enter
std
fwait
in
std
cltd
in
in
std
xchg
jmp
std
xchg
jmp
std
xchg
jmp
std
xchg
jmp
std
nop
ljmp
ljmp
mov
mov
test
mov
xchg
mov
loopw
sub
push
loopne
push
add
jg
add
add
add
inc
xor
lret
mov
ret
loopne
int
xlat
rcl
aad
fstl
int3
out
shr
clc
repz
lret
std
int3
stc
ljmp
stc
jmp
std
leave
cli
call
std
stc
out
stc
out
std
ret
clc
in
ret
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
mov
cmc
mov
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
lods
repnz
stos
icebp
sar
test
lock
cmpsb
lock
std
movsl
lock
std
movsb
lock
mov
out
lret
std
mov
out
leave
std
popf
in
enter
std
lcall
std
xchg
in
ret
std
xchg
in
ret
jmp
std
xchg
jmp
std
xchg
jmp
std
jmp
mov
mov
mov
test
mov
cmp
test
adc
add
xor
xor
sti
std
sti
add
inc
sbb
test
and
imul
mov
mov
ret
into
xchg
rcl
sarl
out
out
repnz
hlt
loope
lret
std
lret
stc
call
std
leave
cli
call
std
enter
stc
out
std
clc
in
ret
clc
jecxz
ret
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
cmc
mov
mov
fscale
mov
xlat
std
mov
std
mov
aad
scas
repnz
lods
repnz
lods
icebp
sar
stos
icebp
sar
test
lock
cmpsb
lock
std
movsl
lock
std
movsb
out
int
mov
out
lret
out
lret
in
leave
std
popf
in
enter
std
lcall
std
xchg
in
ret
std
xchg
jmp
std
xchg
jmp
std
xchg
jmp
std
mov
mov
mov
mov
pop
mov
add
and
add
add
cld
stc
add
lds
jle
movsl
lods
dec
mov
cltd
into
xchg
ror
fadd
rorb
fadd
loop
loopne
in
mov
shl
ret
icebp
fdivr
enter
leave
clc
out
lret
std
leave
stc
out
enter
stc
out
xabort
std
std
clc
in
ret
std
sar
std
shl
std
mov
mul
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
scas
repnz
lods
icebp
sar
stos
icebp
sar
stos
lock
test
lock
std
cmpsb
lock
std
movsl
out
int
mov
out
lret
std
mov
out
leave
std
popf
in
enter
std
fwait
in
in
in
std
xchg
in
ret
ljmp
nop
call
mov
aas
aad
std
or
push
pusha
popa
pusha
add
fsubr
faddl
mov
into
xchg
dec
pop
lcall
pop
movl
lret
mov
rcl
xlat
rcr
fld
in
out
repnz
sti
std
leave
mul
std
lret
cld
enter
xbegin
in
std
clc
in
ret
clc
jecxz
ret
std
shl
std
shl
std
mov
neg
std
mov
cmc
mov
cmc
mov
mov
fscale
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
scas
repnz
scas
icebp
sar
lods
icebp
sar
stos
icebp
sar
test
lock
cmpsl
lock
std
cmpsb
lock
movsb
out
int
mov
out
lret
std
mov
in
enter
std
pushf
in
std
lcall
std
xchg
jmp
mov
pop
loopne
std
and
add
cli
std
cli
add
jno
inc
stos
inc
sub
inc
ret
xchg
lret
scas
lret
xchg
mov
aad
xlat
rcr
out
call
xlat
cli
cld
enter
enter
xbegin
in
std
clc
in
ret
clc
jecxz
ret
std
shl
std
mov
neg
std
mov
neg
std
mov
cmc
mov
cmc
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
lods
icebp
sar
lods
icebp
sar
stos
icebp
sar
test
lock
std
cmpsl
lock
std
movsl
lock
movsb
out
int3
std
mov
out
lret
out
leave
std
sahf
in
enter
std
lcall
xchg
jmp
lods
das
insl
decb
mov
and
add
add
lds
jns
mov
pop
shlb
xchg
roll
faddp
into
mov
mov
jecxz
loopne
in
mov
icebp
fdivr
cld
mul
std
mul
std
mul
std
std
clc
jecxz
ret
std
shl
std
shl
std
mov
neg
std
mov
neg
std
mov
cmc
mov
mov
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
scas
icebp
aam
lods
icebp
sar
lods
icebp
sar
stos
icebp
sar
test
lock
std
cmpsb
lock
std
movsl
out
int
movsb
out
int3
std
mov
out
leave
std
lahf
in
enter
sar
jmp
mov
pop
movsl
cmp
add
jp
inc
inc
push
in
cmc
in
push
mov
mov
sbb
sub
data16
loop
leave
xchg
rcl
fdivrs
call
ret
cld
ret
std
vpsrad
xabort
std
std
mul
std
ret
mul
std
ret
std
shl
std
mov
neg
std
mov
neg
std
mov
cmc
fdivr
mov
cmc
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
scas
icebp
sar
lods
icebp
sar
stos
icebp
sar
stos
lock
test
lock
std
cmpsb
out
into
std
movsb
out
int3
std
mov
in
std
lcall
jno
lods
std
cs
add
or
add
add
cld
cli
add
stos
inc
dec
aaa
cmpsb
cmp
pop
lret
jbe
stos
lret
sbb
mov
fisubs
shl
mov
repnz
mul
std
mul
std
mul
std
ret
std
shl
std
shl
std
mov
neg
std
mov
neg
std
mov
cmc
mov
hlt
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
std
mov
aad
scas
repnz
lods
icebp
sar
lods
icebp
sar
stos
icebp
sar
stos
lock
test
iret
std
cmpsl
out
into
std
movsb
out
int3
std
mov
jmp
incb
fmuls
loopne
xor
push
xor
add
add
add
out
faddl
add
xor
subb
test
mov
lret
pop
leave
test
jnp
mov
sbb
into
mov
rcr
fadd
in
jecxz
lock
lock
ret
std
cmc
loope
ret
std
ret
std
shl
std
shl
std
mov
neg
std
mov
cmc
mov
cmc
mov
mov
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
mov
aam
scas
repnz
lods
icebp
sar
lods
icebp
sar
stos
icebp
sar
test
iret
std
movsl
in
leave
mov
jmp
gs
std
es
cld
add
aas
dec
inc
adc
add
add
cld
cli
add
mov
push
jp
movsb
xor
inc
mov
cmpsb
leave
test
ret
leave
test
mov
ficomps
call
xlat
cld
shl
cld
ret
cld
ret
cmc
loope
shl
std
shl
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
fscale
mov
fdivr
mov
fdivr
mov
xlat
std
mov
std
mov
aad
scas
repnz
scas
repnz
lods
icebp
sar
stos
out
iret
std
movsl
in
movsl
in
lret
call
jnp
or
push
add
cli
std
cli
add
out
or
inc
inc
inc
stos
inc
xchg
daa
test
rorl
lret
mov
int3
jge
mov
fildll
call
sti
shl
cld
shl
std
ret
std
shl
std
mov
neg
std
mov
cmc
fdivr
mov
cmc
mov
hlt
fscale
mov
fdivr
mov
xlat
std
mov
std
mov
aad
mov
aam
scas
repnz
stos
out
lret
test
lret
in
leave
push
fsts
repz
jae
inc
inc
add
stc
cld
stc
add
stos
inc
imul
mov
enter
aad
fsubrs
int
fdivrl
out
in
repnz
lock
mov
hlt
mov
cmc
fdivrp
mov
cmc
mov
cmc
mov
hlt
fscale
mov
fdivr
mov
fdivr
mov
xlat
std
mov
aad
scas
lock
stos
in
lret
out
int
jnp
mov
xor
gs
add
sbb
fsubr
faddl
mov
int3
nop
cmp
xchg
adc
lahf
sub
cmp
pop
lahf
leave
jle
mov
rorl
ffreep
in
mov
out
aad
mov
repz
mov
neg
std
mov
cmc
fdivr
mov
hlt
mov
hlt
fscale
mov
fdivr
mov
std
scas
out
int
lods
out
iret
xchg
jmp
pop
fstpl
out
cmp
pop
lea
add
sti
std
sti
add
cld
stc
add
inc
cmp
inc
xchg
daa
mov
jo
addr16
sahf
lret
jno
scas
int3
jnp
mov
loop
in
lock
iret
stc
mov
icebp
frndint
mov
hlt
mov
cmc
fdivr
mov
hlt
mov
icebp
sar
scas
out
iret
cmpsl
out
into
jo
lods
sub
add
stc
cld
stc
add
mov
sbb
dec
les
data16
lret
mov
fcompl
out
hlt
mov
out
cld
mov
repnz
mov
hlt
mov
out
sar
mov
sar
xchg
ljmp
or
sbb
add
add
jg
add
add
add
cmc
in
add
loope
sub
sbb
dec
fstpl
int
loopne
enter
rorb
in
lock
out
sar
mov
icebp
mov
out
sar
mov
sar
popa
ficomps
stc
add
jl
xor
pop
sti
std
sti
add
cld
cli
add
jno
xor
xor
mov
pop
aam
int3
push
in
in
repnz
into
stc
mov
sar
mov
decb
shrl
imul
add
add
fsubr
faddl
add
sbb
lds
adc
aas
mov
pop
rclb
into
mov
mov
repz
ljmp
adc
add
popa
pusha
add
mov
loope
sub
movsl
cmp
pushf
and
dec
enter
loop
shlb
divl
pusha
add
cli
cld
cli
add
test
push
shlb
fisttpl
push
adc
add
add
std
cli
add
lds
add
xor
decl
incl
incl
jg
incb
aas
cld
add
cld
add
clc
pop
cld
add
jg
add
clc
add
sbb
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
pop
jmp
add
add
add
ud0
inc
add
add
add
pop
inc
add
add
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incb
add
add
add
add
incb
add
add
add
add
cld
aas
clc
pop
clc
pop
clc
pop
push
ud0
lock
add
add
add
ud0
loopne
add
add
add
add
inc
ud0
rolb
add
add
add
pop
inc
pop
incl
add
add
add
incl
add
add
add
incl
pop
incb
pop
incb
ud0
add
cld
add
cld
add
clc
add
push
add
push
add
push
add
jmp
add
jmp
add
inc
add
addb
add
add
add
add
addb
add
add
add
add
incl
add
add
add
incl
add
incl
add
incb
pop
cld
add
cld
add
cld
add
clc
add
clc
add
push
add
jmp
add
jmp
add
jmp
pop
inc
pop
inc
ud0
addb
add
add
add
pop
incl
pop
incl
aas
incl
aas
incl
jg
incl
incl
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
incb
add
add
add
ud0
inc
add
add
add
ud0
clc
add
add
add
pop
incb
add
add
add
inc
add
add
add
clc
add
add
add
incb
add
add
jg
inc
add
add
clc
add
add
incb
add
add
inc
add
add
clc
add
add
incb
add
inc
add
clc
add
incl
pop
jmp
pop
clc
jg
ljmp
add
add
add
add
add
add
add
add
or
pop
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
movl
push
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
or
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
or
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
pop
filds
xchg
out
add
add
add
pushf
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
pop
filds
xchg
out
add
add
add
pushf
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
sti
add
rolb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
popl
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
push
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
and
add
push
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
loop
xor
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xor
insl
pushl
mov
call
fcos
movsl
fdivr
movsl
fdivr
pushf
fcos
xchg
clc
lret
pushl
mov
decl
insl
pushl
scas
inc
call
sbb
add
add
add
add
add
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
call
add
add
add
add
add
add
add
and
add
adc
mov
jo
mov
filds
mov
incl
mov
incl
mov
ljmp
js
icebp
mov
mov
jmp
sar
in
fdivr
icebp
icebp
fdivr
repnz
repnz
repz
fdivr
repnz
repnz
fdivr
icebp
call
in
dec
jmp
mov
jmp
decl
int3
js
sub
incl
mov
incl
mov
incl
mov
incl
mov
filds
mov
jo
add
push
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
filds
jge
jecxz
sbbl
repnz
add
add
add
add
add
add
add
pop
add
mov
incl
mov
decl
cwtl
push
incl
pop
decl
jmp
dec
std
out
sar
jmp
call
out
call
out
call
std
in
call
std
out
call
lock
icebp
fdivr
icebp
fdivr
bnd
icebp
call
lock
std
out
call
std
out
call
out
call
out
call
cld
jmp
dec
std
call
decl
mov
push
incl
mov
incl
mov
incl
mov
filds
mov
pusha
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
jge
jmp
adc
xor
or
adc
add
add
add
add
add
add
add
add
push
xchg
adc
lcall
out
int
call
inc
cli
loop
lret
call
in
call
out
call
in
call
in
call
out
call
out
call
out
call
out
call
out
call
out
call
out
call
out
call
in
call
in
call
out
call
in
dec
cld
out
cli
loop
enter
int
call
lcall
insl
decl
xchg
adc
incl
mov
incl
mov
mov
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
and
repnz
and
push
xchg
and
cli
adc
mov
repz
add
add
add
pop
xchg
or
cmp
mov
sar
dec
jmp
inc
cld
in
lret
dec
in
dec
in
dec
ljmp
std
call
dec
std
ljmp
in
dec
in
dec
out
dec
out
dec
in
dec
std
ljmp
std
jmp
dec
ljmp
in
dec
call
inc
cld
in
lret
jmp
decl
mov
or
add
add
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
ja
jmp
jne
cmc
or
pop
decl
mov
adc
das
cli
adc
das
cli
pop
xchg
paddw
mov
incl
mov
lcall
mov
xchg
jmp
call
dec
ljmp
cld
loope
mov
cld
jecxz
out
mov
cli
loope
sar
inc
cld
in
ret
cld
out
std
call
inc
ljmp
std
ljmp
cld
out
sar
inc
sti
jecxz
mov
cli
loopne
out
ret
mov
cld
loope
std
in
enter
enter
call
ljmp
xchg
lcall
mov
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
and
repnz
sbbl
add
push
jmp
arpl
jp
push
xchg
adc
incb
add
incl
mov
cmp
scas
pushl
call
pushl
sar
lods
not
ljmp
clc
fdivr
ret
call
pushl
cli
mov
sti
loope
mov
cld
in
mov
out
sar
mov
cld
in
mov
sti
loope
mov
cli
mov
mov
fdivr
ret
call
ljmp
not
ljmp
stc
fdivr
mov
call
incl
push
incl
mov
incl
mov
incl
mov
iret
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
out
pop
jnp
testl
mov
sar
mov
sar
xchg
incl
mov
incl
xchg
or
pop
fadds
mov
jecxz
movsl
cmc
lret
repnz
jmp
hlt
enter
lret
jmp
std
loopne
mov
fdivr
lods
clc
aam
scas
clc
pushl
cli
mov
mov
fdivrp
mov
loopne
mov
loope
mov
std
jecxz
mov
loope
mov
loopne
mov
mov
mov
mov
fcos
scas
clc
xlat
ljmp
sti
fdivr
mov
test
movsl
cmc
lret
jmp
jmp
cmc
lret
jecxz
mov
test
incl
xchg
or
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
in
je
repz
pushf
sbb
incb
std
push
nop
or
add
sbb
je
mov
pushl
loope
lcall
call
repnz
repz
lcall
test
jmp
iret
jmp
clc
aam
test
stc
fdivr
lods
cli
lods
cli
scas
sti
fdivr
mov
loop
mov
fdivrp
scas
sti
fdivr
scas
cli
lods
cli
stos
stc
fdivr
stos
stc
xlat
ljmp
not
jmp
test
mov
loope
movsl
test
lcall
sar
icebp
mov
lcall
loope
mov
scas
std
je
mov
incl
mov
incl
mov
out
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
out
push
jg
stc
add
add
mov
sar
sub
outsl
incb
popl
incl
mov
lcall
test
mov
repz
lcall
out
mov
out
mov
mov
mov
call
repnz
mov
cmc
enter
lret
test
mov
not
jmp
stc
aam
movsl
stc
jmp
fdivrp
test
cli
xlat
jmp
stc
aad
mov
not
jmp
test
popf
test
fwait
cmc
leave
jmp
xchg
repnz
repnz
decl
out
mov
mov
mov
cwtl
hlt
ret
pushl
repz
call
mov
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
jns
cmc
adc
sbb
fcompl
cwtl
push
incl
mov
lcall
test
mov
mov
jmp
repz
incl
in
scas
incl
out
mov
mov
mov
xchg
hlt
ret
ljmp
repnz
repz
hlt
call
test
cltd
test
lcall
lcall
clc
sar
test
stc
aad
popf
clc
sar
popf
clc
sar
pushf
test
lcall
test
xchg
cmc
call
ret
repz
std
xchg
hlt
decl
out
mov
xchg
mov
test
scas
incl
jmp
call
cld
fdivr
jl
movsl
decl
test
sbb
mov
incl
mov
iret
add
add
add
add
add
fiaddl
test
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
test
sti
add
add
stos
out
lret
mov
add
or
scas
pushl
sahf
ljmp
call
clc
leave
pushl
lahf
pushl
mov
jp
test
jl
stos
jg
scas
incl
cli
sar
xchg
clc
lret
icebp
mov
decl
repz
hlt
ret
call
cmc
call
test
xchg
test
mov
stc
iret
call
lret
test
xchg
cmc
call
hlt
decl
repz
decl
clc
lret
cli
sar
sub
scas
jge
lods
jnp
test
pushl
mov
call
clc
enter
xchg
pushl
sahf
jl
scas
decl
xchg
push
incl
mov
incl
mov
scas
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
or
jle
clc
push
mov
adc
out
lret
mov
add
add
cltd
lcall
mov
pop
jecxz
pushl
cmpsb
lcall
out
ljmp
xchg
ljmp
ljmp
sahf
pushl
mov
pushl
cmpsl
jge
mov
mov
lock
jle
mov
xor
incl
repnz
incl
hlt
sar
hlt
ret
hlt
ret
decl
cld
aad
xchg
test
decl
hlt
ret
hlt
sar
repz
incl
mov
jg
mov
jg
mov
mov
out
mov
jbe
test
je
movsl
pushl
mov
ljmp
fwait
ljmp
cwtl
ljmp
lcall
in
cmpsb
jmp
mov
pop
jecxz
ljmp
lcall
mov
incl
mov
jo
add
add
add
add
fiaddl
xchg
jmp
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
loopne
js
repnz
or
push
xchg
jp
lcall
mov
cmp
push
call
jl
push
loopne
lcall
lcall
in
mov
jmp
xchg
jmp
jmp
xchg
ljmp
fwait
ljmp
sahf
ljmp
mov
decl
in
stos
pushl
lods
jns
scas
jnp
mov
jl
mov
jle
mov
jg
mov
incl
repz
call
test
xor
incl
repnz
incl
icebp
mov
jge
mov
jnp
mov
jns
mov
ja
lods
pushl
stos
decl
hlt
mov
ljmp
ljmp
fwait
jmp
cwtl
jmp
jmp
xchg
jmp
mov
jno
movsb
lcall
jecxz
call
cmp
cmp
push
incl
mov
incl
mov
incl
mov
xor
add
push
add
add
pop
filds
push
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
andb
and
sar
setle
incl
mov
call
lahf
sbb
call
jnp
push
fistpll
jns
lods
decl
mov
pop
jecxz
jmp
jmp
xchg
jmp
xchg
jmp
cwtl
ljmp
fwait
ljmp
call
mov
jb
cmpsl
pushl
pushl
lods
js
scas
jp
mov
jnp
mov
jge
mov
jle
mov
jg
mov
jg
mov
call
cmc
sar
repnz
jg
mov
jge
mov
jl
mov
jp
mov
js
scas
pushl
lods
pushl
stos
pushl
test
jg
mov
xchg
sti
iret
ljmp
ljmp
pushf
ljmp
cltd
jmp
xchg
jmp
xchg
jmp
lcall
mov
pop
jecxz
decl
lods
call
call
jl
dec
fnstsw
adc
add
add
add
add
add
add
fiaddl
adc
pop
test
fiadds
test
faddl
push
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
jp
hlt
sbb
pop
incl
les
add
pop
incl
decl
decl
jp
pop
jecxz
lcall
in
lcall
xchg
pop
jecxz
lcall
jmp
nop
jmp
xchg
jmp
xchg
ljmp
cltd
pushl
movsb
lcall
ljmp
jb
cmpsl
pushl
pushl
stos
jp
mov
xor
incl
clc
decl
sti
into
call
xlat
call
cld
sar
xchg
sti
into
decl
clc
decl
repz
pushl
lods
pushl
pushl
cmpsl
pushl
movsl
ljmp
mov
pushl
movsb
ljmp
lcall
out
jmp
xchg
lcall
mov
pop
jecxz
lcall
xchg
pusha
in
lcall
jecxz
call
jnp
dec
fnsave
inc
shlb
add
mov
incl
mov
pusha
add
add
add
add
and
pop
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
adc
jmp
xchg
sti
or
pop
test
xchg
ud0
mov
jmp
mov
decl
jno
dec
fdivl
dec
fnstsw
jnp
mov
xor
cmp
pop
loop
lcall
mov
pop
in
jmp
xchg
jmp
jmp
xchg
jg
mov
clc
ljmp
pushl
lods
incl
leave
lcall
fcos
xchg
sti
int
xchg
cli
lret
decl
test
incl
cld
sar
mov
ret
incl
cmc
sar
test
call
cld
sar
popf
fcos
cwtl
std
sar
clc
incl
in
test
decl
repnz
addr16
jmp
jmp
xchg
jmp
lcall
mov
pop
loop
lcall
test
push
loopne
incl
icebp
mov
dec
fnstsw
dec
fdivl
dec
and
add
add
add
add
add
add
add
add
fiaddl
mov
jmp
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
loope
jg
notl
mov
call
mov
add
or
insb
incl
outsl
decl
jae
push
fistpll
cwtl
std
sar
pop
jecxz
call
call
cmp
loope
lcall
mov
pop
jecxz
jmp
jmp
xchg
jmp
decl
int
xchg
cld
sar
lcall
incl
out
scas
pushl
cmpsl
pushl
pushl
stos
pushl
stos
pushl
lods
pushl
lods
js
scas
call
mov
pushl
scas
pushl
lods
pushl
lods
pushl
stos
pushl
pushl
cmpsl
jns
scas
incl
clc
lcall
sti
into
call
clc
jmp
xchg
jmp
xchg
jmp
lcall
mov
pop
jecxz
lcall
xchg
push
loope
call
cmp
jecxz
lcall
fistpll
dec
fdivl
inc
fisubrl
xchg
or
incl
mov
jo
add
push
add
add
daa
fisttps
mov
fmull
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
add
pop
in
sbb
daa
cld
pop
mov
decb
outsb
stos
out
lret
xchg
push
incl
mov
ljmp
mov
push
inc
fisubrl
dec
push
lcall
fidivrs
push
fistpll
push
loopne
call
cmp
loop
lcall
lcall
mov
ja
stos
call
fcos
test
mov
ljmp
pushf
ljmp
ljmp
mov
pushl
movsb
pushl
movsl
pushl
cmpsl
pushl
test
je
test
pushl
stos
call
repnz
jne
stos
pushl
stos
pushl
pushl
test
jb
cmpsl
pushl
cmpsb
pushl
movsb
ljmp
mov
ljmp
ljmp
pushf
jns
lods
decl
fcos
mov
ret
pushl
mov
lcall
lcall
xchg
pop
loope
call
cmp
push
fidivrs
test
decl
jb
inc
fisubrl
inc
fldcw
sub
add
add
add
add
add
add
fimull
mov
jmp
mov
fimuls
sub
or
and
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
add
sbb
add
sbb
push
test
cli
push
mov
ljmp
mov
add
or
incl
push
incl
outsl
decl
jmp
jns
push
fidivrs
fistpll
push
loopne
lcall
test
jae
cmpsb
call
clc
incl
std
aad
fs
jmp
xchg
ljmp
cltd
ljmp
fwait
ljmp
popf
ljmp
ljmp
mov
pushl
mov
pushl
movsl
pushl
cmpsb
pushl
cmpsl
call
icebp
mov
jae
cmpsl
pushl
cmpsb
pushl
cmpsb
pushl
movsl
pushl
mov
ljmp
mov
ljmp
popf
ljmp
fwait
ljmp
cltd
jmp
xchg
jmp
lcall
cmc
mov
decl
jmp
test
push
loopne
call
call
jge
dec
fnstsw
imul
decl
inc
fldcw
inc
fsubrs
inc
xlat
decw
xchg
or
add
add
add
push
add
add
sub
push
mov
fmull
mov
fmull
mov
fmull
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
add
sbb
adc
and
sbb
sub
add
add
xchg
ljmp
add
xor
xlat
arpl
inc
fsubs
inc
fldcw
push
fidivrs
cwtl
std
sar
dec
fdivl
fnsave
dec
fnstsw
push
fidivrs
out
call
leave
ljmp
fwait
lcall
pushl
test
jmp
xchg
jmp
jmp
xchg
jmp
cwtl
ljmp
lcall
jmp
sahf
ljmp
mov
ljmp
mov
pushl
mov
jnp
mov
jo
mov
ljmp
mov
ljmp
mov
ljmp
ljmp
pushf
ljmp
lcall
out
jmp
jmp
xchg
decl
out
test
jl
mov
cltd
std
aam
xchg
mov
call
jle
push
fidivrs
dec
fnstsw
dec
fdivl
cwtl
std
sar
push
fidivrs
fldcw
inc
fsubs
xlat
lcall
mov
incl
mov
incl
mov
mov
add
add
add
add
add
fimull
mov
jmp
mov
jp
sub
or
mov
fmull
mov
fmull
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
sbb
pop
jle
in
mov
sti
adc
sub
mov
sar
sub
outsl
incb
mov
incl
mov
pushl
int3
push
cmp
popa
aas
xlat
incl
push
incl
dec
fdivl
push
fistpll
xor
lcall
jmp
call
cmp
loope
lcall
xchg
jl
mov
jle
mov
pusha
in
jmp
nop
jmp
jmp
xchg
jmp
xchg
ljmp
cwtl
ljmp
lcall
jmp
popf
ljmp
ljmp
lahf
ljmp
lahf
decl
hlt
mov
ljmp
lahf
ljmp
sahf
ljmp
ljmp
pushf
ljmp
fwait
ljmp
lcall
out
jmp
xchg
jmp
jmp
xchg
jmp
jle
mov
jl
mov
pop
loop
lcall
test
pop
jecxz
incl
std
sar
push
fnstsw
dec
fdivl
dec
xor
ljmp
fwait
incl
imul
cmp
int3
push
incl
mov
incl
mov
incl
mov
and
add
push
add
add
das
fists
mov
fcoml
mov
jp
sub
or
mov
fmull
mov
fmull
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbl
add
and
sbb
sub
add
add
outsb
loope
adc
add
adc
pop
cmp
pop
cmp
xlat
incw
out
incl
outsl
lcall
xchg
xchg
sti
int
test
mov
call
jge
push
filds
lcall
test
mov
pushl
mov
jmp
jmp
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
ljmp
cwtl
ljmp
lcall
call
pushf
incl
mov
ljmp
fwait
ljmp
fwait
ljmp
lcall
out
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
nop
jmp
mov
pop
jecxz
pushl
mov
lcall
test
push
loopne
call
cmp
fistpll
arpl
xchg
lcall
repnz
dec
fidivrs
dec
fidivl
addr16
mov
inc
fsubs
xlat
arpl
cmp
pusha
cmp
pop
call
mov
add
add
add
add
add
add
fimull
sbb
ficoms
lea
fcoml
mov
fcoml
mov
jp
sub
or
mov
fmull
mov
fmull
xchg
faddl
xchg
faddl
test
faddl
test
faddl
sbbb
sbb
sub
push
mov
xor
sar
daa
aam
std
or
add
push
mov
pushl
aam
cmp
pop
cmp
pusha
aas
xlat
lcall
fnstsw
callw
cwtl
std
sar
outsb
jmp
decl
decl
js
push
fidivrs
push
fistpll
push
filds
call
xchg
lcall
lcall
mov
pop
in
jmp
mov
in
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
ljmp
cwtl
incl
repz
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
jmp
xchg
jmp
nop
jmp
mov
pop
in
lcall
mov
pop
loop
jmp
xchg
call
loopne
call
call
jle
push
fidivrs
dec
fnstsw
push
fidivrs
clc
decl
fdivl
fidivrs
popf
fcos
aas
xlat
gs
cmp
popa
cmp
pop
pushl
aam
lcall
mov
incl
mov
incl
mov
scas
add
add
add
add
xor
adc
mov
fcoml
lea
fcoml
mov
fcoml
mov
jp
sub
or
mov
fmull
mov
fmull
xchg
or
and
pop
test
faddl
sbbl
cld
add
scas
pop
fstpl
std
add
add
sub
dec
pushl
aam
cmp
pop
decl
js
xchg
cli
lret
jmp
call
in
decl
jo
dec
dec
fdivl
dec
fnstsw
push
fidivrs
push
fistpll
push
filds
lcall
cmp
loope
lcall
xchg
pop
jecxz
lcall
mov
pop
in
jmp
mov
popa
in
jmp
nop
jmp
xchg
jmp
jmp
jmp
jmp
xchg
incl
repz
gs
jmp
xchg
jmp
jmp
jmp
xchg
jmp
nop
jmp
jmp
mov
pop
in
lcall
mov
pop
jecxz
lcall
xchg
pop
loop
lcall
cmp
fcos
push
filds
call
jl
dec
fnstsw
dec
fdivl
dec
jl
mov
mov
decl
outsl
call
fidivrs
cmp
pop
cmp
pop
pushl
rcrl
sub
mov
incl
mov
incl
add
add
add
add
fimull
lea
jmp
mov
adc
lea
fstl
xor
adc
sub
jp
sub
or
xchg
fimuls
xchg
fimuls
xchg
or
and
push
andl
adc
sub
jl
pop
jmp
shlb
push
rclb
mov
incl
xchg
or
xor
push
pushl
rclb
rcrl
cmp
pop
jmp
call
std
sar
push
fistpll
inc
fldcw
inc
fisubrl
dec
fidivl
dec
dec
fdivl
dec
fnstsw
push
fidivrs
pop
loop
lcall
loopne
call
cmp
loope
lcall
xchg
pop
loop
lcall
lcall
mov
pop
jecxz
lcall
jmp
mov
popa
in
jmp
jmp
nop
jmp
nop
incl
repnz
in
jmp
nop
jmp
jmp
jmp
mov
pusha
in
lcall
mov
pop
jecxz
lcall
mov
pop
loop
lcall
xchg
pop
loope
lcall
cmp
loopne
lcall
jecxz
call
jl
dec
fnstsw
dec
fdivl
dec
inc
fisubrl
inc
fldcw
jnp
scas
decl
mov
cmp
pop
pushl
aam
pushl
push
pushl
rclb
push
xchg
or
add
add
add
push
add
add
aaa
fistps
fstl
mov
adc
mov
loope
mov
loope
mov
loope
mov
loop
xchg
jecxz
test
jecxz
test
jecxz
test
jecxz
andl
or
and
sbb
mov
jmp
fimull
adc
add
push
mov
push
pushl
rclb
xor
push
pushl
aam
ljmp
fwait
lcall
fidivrs
inc
xlat
incw
push
incl
outsb
decl
jb
dec
fdivl
dec
fnstsw
fs
decl
fistpll
push
loopne
call
cmp
loope
lcall
test
pop
loop
lcall
lcall
mov
pop
jecxz
lcall
mov
pop
in
lcall
jmp
jmp
mov
jg
mov
jg
mov
pusha
in
jmp
lcall
lcall
mov
pop
jecxz
lcall
mov
pop
jecxz
lcall
lcall
xchg
pop
loope
lcall
test
push
loopne
call
cmp
mov
ret
jmp
call
jp
dec
fdivl
dec
fdivl
dec
inc
fisubrl
inc
fldcw
fsubrs
inc
xlat
data16
jns
lods
lcall
ljmp
xor
rclb
rcll
push
mov
add
add
add
add
add
add
ficoml
mov
jmp
nop
cmp
sbb
xor
out
mov
out
xchg
out
xchg
out
xchg
out
test
call
or
andb
or
and
or
ljmp
sub
pop
mov
mov
push
shll
shlb
or
mov
call
lods
ljmp
rorb
xor
push
pushl
rclb
fsubs
xchg
cld
sar
gs
cmp
pusha
ds
arpl
inc
xlat
incw
imul
dec
dec
fdivl
fdivl
push
fnstsw
data16
decl
fistpll
push
filds
lcall
test
pop
loope
lcall
lcall
xchg
pop
loop
lcall
mov
pop
jecxz
jmp
mov
pusha
jecxz
jmp
jmp
incl
icebp
mov
popa
in
jmp
jmp
mov
pusha
jecxz
lcall
mov
pop
jecxz
lcall
mov
pop
loop
lcall
lcall
test
pop
loope
lcall
cmp
filds
decl
out
call
jns
push
fdivl
dec
fdivl
dec
dec
fidivl
inc
fsubrs
inc
xlat
data16
ds
fs
cmp
popa
incl
sar
rcrl
xor
push
pushl
rcll
rorb
push
lods
incl
mov
incl
xchg
xchg
add
add
add
add
fistps
xchg
cmp
sbb
cmp
sbb
aaa
out
pop
xchg
xor
out
push
xchg
xor
pop
fwait
aaa
repnz
lcall
pop
xchg
xor
push
xchg
das
repz
xor
sbb
cs
sbb
sbb
test
leave
xor
cmp
shll
shll
pop
popf
sbb
add
aaa
ljmp
dec
ljmp
rorb
xor
push
incl
fcos
push
fistpll
cmp
pop
cmp
pusha
aas
decl
insl
decl
jno
dec
push
fdivl
push
fdivrl
push
fnstsw
ja
movsl
incl
fistpll
pop
filds
lcall
lcall
xchg
pop
loope
lcall
mov
pop
loop
jmp
mov
popa
jecxz
jmp
mov
mov
jecxz
incl
icebp
mov
jecxz
jmp
mov
popa
jecxz
jmp
mov
pusha
loop
jmp
mov
pop
loop
lcall
xchg
pop
loope
lcall
lcall
cmp
filds
incl
out
stos
call
call
js
push
fdivl
dec
fidivl
dec
fldcw
aas
xlat
fs
cmp
popa
cmp
pop
call
jnp
popf
fcos
popa
out
pushl
rcll
das
rorb
sub
mov
add
add
add
add
add
add
add
add
ficoml
and
sbb
xchg
cmp
and
inc
cli
and
test
cmp
cld
and
cmp
es
ss
and
xchg
xor
cld
and
xor
and
cld
and
das
cld
or
ljmp
movsl
pop
shll
shll
shll
cltd
push
incl
mov
lcall
mov
dec
ljmp
dec
lcall
mov
nop
stc
enter
fcos
inc
fsubrs
cmp
pop
cmp
pop
decl
push
dec
fidivl
dec
fidivl
push
fdivl
push
fdivrl
push
fnstsw
jle
lods
jg
lods
lcall
cmp
filds
lcall
test
pop
loopne
lcall
xchg
pusha
loope
jmp
mov
mov
mov
arpl
mov
arpl
mov
fs
jmp
incl
icebp
mov
fs
jmp
jmp
mov
arpl
mov
mov
mov
popa
loop
jmp
mov
pusha
loope
lcall
xchg
pop
loopne
lcall
cmp
filds
jg
lods
jle
lods
call
jnp
push
fnstsw
push
fdivl
push
push
fidivl
dec
fidivl
dec
fsubrs
cmp
pop
cmp
pop
cmp
fcos
xchg
cld
sar
cmp
rorb
sub
dec
lcall
mov
add
add
add
add
add
add
add
add
add
pop
sti
pop
xchg
aas
fistps
xchg
fstpl
lcall
sub
cmp
cld
sub
cmp
daa
fwait
cmp
and
sub
sbb
std
sbb
pop
std
adc
sbb
jge
xor
cmpsb
out
leave
sub
jnp
pop
shll
pop
shll
shll
mov
incl
mov
jmp
inc
ljmp
into
inc
pushl
rclb
xchg
cld
sar
dec
fdivl
popf
fcos
xor
push
pushl
rcrl
inc
decl
outsl
call
jno
push
push
push
fdivl
push
fdivrl
pop
fnstsw
sub
incl
filds
lcall
cmp
loopne
jmp
xchg
popa
loope
jmp
mov
arpl
mov
arpl
mov
fs
jmp
jmp
mov
gs
jmp
mov
xchg
mov
xchg
mov
gs
jmp
mov
gs
jmp
jmp
jmp
jmp
mov
mov
popa
loope
jmp
xchg
pusha
loopne
lcall
cmp
filds
incl
out
lods
lcall
jnp
push
fnstsw
push
fdivrl
push
push
fidivl
dec
fldcw
inc
pushl
rcrl
xor
push
lcall
jmp
jp
lods
ljmp
iret
dec
ljmp
into
dec
jmp
inc
incl
mov
incl
mov
incl
add
inc
add
add
add
add
add
add
add
ficoml
daa
jmp
xchg
inc
ficomps
xchg
aas
fisubs
dec
repnz
adc
add
mov
incl
mov
incl
cwtl
pop
decl
popf
push
decl
popf
push
decl
popf
push
decl
popf
push
decl
stos
xor
adc
cmp
cs
aaa
mov
cmp
loope
decb
xchg
pop
aam
std
pop
shll
pop
shll
pop
shll
mov
incl
mov
jmp
inc
jmp
int
jmp
nop
jns
lods
ljmp
fcos
xor
push
pushl
rcrl
push
fldcw
push
fnstenv
push
fidivl
push
pop
fdivrl
pop
fdivrl
pop
fnstsw
out
lods
incl
cmp
pusha
filds
jmp
xchg
arpl
xchg
fs
jmp
mov
gs
jmp
mov
data16
jmp
mov
loopw
jmp
mov
mov
mov
mov
mov
loopw
jmp
mov
data16
jmp
mov
data16
jmp
mov
gs
jmp
jmp
xchg
loopne
jmp
test
popa
filds
pop
fiadds
incl
fnstsw
fnstsw
pop
fdivrl
push
push
push
fidivl
push
fidivl
push
fldcw
cmp
pop
pushl
rcll
fcos
xor
push
call
fisubrl
int
jmp
mov
incl
mov
incl
add
jae
add
and
add
add
add
push
add
add
or
and
inc
frstor
popf
inc
out
mov
stc
sbb
sub
xor
in
jno
test
cwtl
jmp
xchg
jmp
xchg
jmp
stos
lock
mov
repz
mov
jmp
xchg
jmp
xchg
ljmp
jg
mov
pop
aam
std
pop
aam
std
pop
aam
std
pop
shll
pop
shll
add
add
and
aas
ljmp
dec
call
aam
ljmp
iret
dec
lcall
rclb
dec
xlat
call
jo
push
fnstenv
push
fidivl
pop
pop
fdivrl
pop
fnstsw
pop
fnstsw
test
scas
incl
filds
jmp
test
fs
jmp
jmp
xchg
data16
jmp
mov
loopew
ljmp
mov
push
loop
ljmp
mov
imul
mov
mov
mov
imul
mov
imul
mov
push
loope
jmp
mov
data16
jmp
mov
fs
jmp
jmp
test
filds
incl
out
scas
lcall
jge
pop
fnstsw
pop
fdivrl
pop
fdivrl
pop
push
fidivl
fidivl
push
fnstenv
dec
xlat
push
lcall
iret
dec
jmp
xchg
js
stos
jmp
int3
inc
incl
mov
incl
mov
incl
add
addl
add
add
add
add
add
add
add
add
ficoml
xchg
inc
fisubs
xchg
inc
fisubs
mov
repnz
mov
jmp
out
decb
xchg
decb
xchg
decb
xchg
decb
xchg
sub
jg
and
js
and
js
and
js
and
ja
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
shll
add
add
and
cmp
jg
mov
daa
int
ljmp
into
inc
lcall
rclb
push
fldcw
push
fnstenv
pop
fidivl
pop
fidivl
pop
pop
fdivrl
pop
fdivrl
pop
fnstsw
fnstsw
mov
mov
mov
mov
arpl
cmp
filds
data16
jmp
xchg
loopnew
ljmp
mov
imul
mov
push
mov
push
mov
push
mov
imul
ljmp
decl
icebp
mov
imul
ljmp
mov
imul
ljmp
mov
push
mov
imul
mov
push
loopne
jmp
xchg
data16
jmp
test
filds
mov
mov
mov
mov
pusha
fnstsw
pop
fnstsw
fdivrl
pop
fdivrl
pop
pop
pop
fidivl
fnstenv
push
fnstenv
aaa
rclb
popf
fcos
sub
dec
ljmp
rorb
xchg
cld
sar
xor
push
jmp
lret
cmp
incl
mov
incl
add
add
add
add
add
add
push
add
add
or
and
cwtl
inc
frstor
mov
stc
push
popf
sub
dec
mov
pushl
flds
std
and
jl
and
jnp
and
jp
and
jns
and
jns
and
js
and
js
and
js
and
ja
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
add
add
pop
lret
xchg
mov
jmp
int
lcall
arpl
pop
fnstenv
pop
fidivl
pop
fidivl
pop
pop
fstpt
pop
fdivrl
pusha
fdivrl
fnstsw
fnstsw
mov
mov
mov
mov
data16
jmp
xchg
push
loopne
ljmp
mov
push
mov
imul
ljmp
mov
insb
loope
ljmp
ljmp
mov
insl
loop
ljmp
decl
lock
insl
loop
ljmp
ljmp
mov
insb
loope
ljmp
ljmp
ljmp
mov
imul
ljmp
mov
imul
xchg
push
filds
decl
out
mov
arpl
jg
fnstsw
popa
fdivrl
pop
fdivrl
pop
fdivrl
pop
pop
pop
fidivl
fnstenv
dec
lcall
int
jmp
in
mov
lcall
lret
add
add
add
add
add
pop
add
add
add
add
add
ficoml
xchg
sub
es
dec
fisubs
xchg
inc
fisubrs
mov
repnz
lods
dec
sti
push
mov
ljmp
out
sub
jg
daa
fdivrs
xlat
jge
and
jl
and
jnp
and
jp
and
jns
and
jns
and
js
and
js
and
js
and
ja
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
add
add
sub
dec
lcall
into
inc
jmp
lret
aas
jmp
inc
jmp
fnstenv
pop
fidivl
pop
fidivl
pop
pusha
fstpt
popa
fdivrl
fdivrl
fnstsw
fnstsw
fiadds
decl
filds
ljmp
xchg
imul
ljmp
mov
insb
loope
ljmp
mov
insl
loope
ljmp
mov
outsb
loope
ljmp
ljmp
ljmp
ljmp
call
lock
ljmp
ljmp
ljmp
ljmp
mov
outsb
loope
ljmp
mov
insl
loope
ljmp
mov
insb
loopne
ljmp
mov
push
xchg
imul
test
mov
mov
out
mov
data16
jmp
jmp
jl
popa
fdivrl
pusha
fstpt
pop
fstpt
pop
fidivl
pop
fidivl
fnstenv
mov
int3
inc
jmp
int3
inc
decl
outsb
decl
lds
incl
mov
incl
add
adc
add
add
add
add
cltd
dec
fildll
cltd
dec
mov
push
stc
pop
popf
sub
mov
fildl
std
sub
jg
sub
jle
xlat
jge
and
xlat
jnp
and
jp
and
jns
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
push
cltd
push
incl
mov
incl
gs
jge
mov
pop
lret
and
cmp
lcall
loope
lcall
jne
pusha
fidivl
fstpt
arpl
jnp
fdivrl
fnstsw
data16
fldl
fiadds
call
filds
ljmp
mov
insl
loopne
ljmp
mov
outsl
loope
ljmp
mov
jns
xchg
incl
lock
jmp
clc
into
jmp
sti
fdivr
scas
sti
fdivr
movsl
clc
into
jmp
test
xchg
lock
incl
in
ljmp
mov
outsl
loope
ljmp
mov
outsb
loopne
ljmp
mov
insb
loopne
ljmp
xchg
nop
out
mov
nop
out
mov
push
fiadds
jmp
jle
fdivrl
arpl
jnp
fstpt
pusha
fstpt
pop
fidivl
outsb
loope
lcall
lret
inc
jmp
lret
cmp
call
sarb
add
add
add
add
add
add
ficompl
xchg
cs
lcall
sub
sti
push
mov
ljmp
out
sub
fiaddl
std
sub
cmp
fdivrs
daa
fdivrs
and
xlat
jl
and
jnp
and
jp
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
pop
aam
std
or
add
pop
fadds
sbb
aaa
lcall
lret
and
cmp
xchg
repnz
jmp
ja
arpl
jns
fdivrl
data16
fnstsw
push
fldl
ljmp
test
xchg
out
mov
xchg
out
mov
outsb
filds
pushl
mov
jle
fwait
call
test
mov
fdivrp
mov
fdivrp
cmpsl
clc
into
lcall
icebp
mov
incl
jmp
lcall
jmp
movsb
decl
icebp
mov
jmp
std
fdivrp
mov
fdivrp
mov
out
mov
jle
fwait
pushl
mov
outsl
loopne
ljmp
mov
xchg
out
mov
xchg
out
mov
insb
fiadds
push
cmp
fnstsw
fdivrl
fdivrl
arpl
jns
fstpt
ja
xchg
call
lret
cmp
lcall
out
cmpsb
incl
incl
mov
incl
mov
ret
add
add
add
lcall
sub
push
stc
and
push
mov
fmull
std
sub
fiaddl
std
sub
cmp
fdivrs
daa
fdivrs
xlat
jge
and
jl
and
jnp
and
jp
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
pop
aam
std
or
mov
decl
insl
cmp
pop
lcall
enter
leave
aaa
lcall
leave
cmp
xchg
lock
jmp
jp
fdivrl
push
fdivrl
imul
ljmp
ljmp
cmp
fiadds
xchg
movsb
ljmp
jecxz
call
sti
fcos
mov
mov
in
scas
jle
cwtl
pushl
mov
jbe
pushl
pushl
nop
pushl
nop
pushl
xchg
pushl
xchg
lcall
icebp
mov
pushl
xchg
pushl
nop
pushl
nop
pushl
pushl
pushl
mov
jle
cltd
decl
hlt
ret
pushl
sti
fcos
xchg
lock
jp
xchg
ljmp
jmp
xchg
outsb
fiadds
ljmp
ljmp
cmp
push
fdivrl
fstpt
test
mov
lcall
lret
sbb
enter
jecxz
decl
insl
incl
mov
incl
mov
nop
add
add
add
add
add
ficompl
xor
sub
fwait
dec
fisubrs
mov
repnz
push
sti
pop
mov
ljmp
out
xor
xchg
xor
test
das
fildl
sub
cmp
flds
std
sub
jg
daa
fdivrs
xlat
jge
and
xlat
jnp
and
jp
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
pop
aam
std
adc
pushl
scas
inc
pushl
rorl
sbb
xor
sbb
xor
and
in
scas
lcall
fdivrl
fdivrl
imul
ljmp
cmp
outsl
fiadds
jno
xchg
jb
mov
mov
cmpsb
mov
jmp
jmp
ljmp
ja
mov
js
js
js
nop
jns
nop
jns
xchg
jns
xchg
jp
xchg
jp
xchg
jp
xchg
lcall
icebp
mov
jp
xchg
jp
xchg
jns
xchg
jns
xchg
jns
nop
js
nop
js
js
pushl
mov
jbe
decl
mov
std
loopne
mov
cmpsb
pushl
mov
jno
xchg
jo
xchg
outsl
fiadds
insl
fldl
ljmp
jle
push
jge
xchg
in
mov
xchg
in
mov
es
aas
lcall
enter
xor
inc
fsubs
xor
add
add
add
add
add
popf
push
fildll
popf
push
mov
pop
clc
and
push
mov
fmull
std
xor
xchg
xor
test
das
fildl
sub
flds
std
sub
jg
daa
fdivrs
fdivrs
and
xlat
jl
and
jp
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
pop
ret
add
sbb
adc
sub
push
das
lcall
xor
cs
inc
incl
test
insl
fdivrl
outsb
fldl
pushl
cmp
fiadds
pushl
jns
mov
mov
std
loope
mov
in
js
jns
mov
jp
jp
nop
jp
nop
jnp
xchg
jl
xchg
jl
xchg
jl
xchg
jl
xchg
jl
xchg
jge
xchg
jge
xchg
lcall
icebp
mov
jge
xchg
jl
xchg
jl
xchg
jl
xchg
jl
xchg
jl
xchg
jnp
xchg
jnp
nop
jp
nop
jp
jns
mov
js
mov
and
mov
repz
jns
pushl
pushl
xchg
jb
test
jno
cmp
fldl
ljmp
cmp
test
test
sahf
ljmp
int
lcall
xor
push
das
pushl
aam
call
sbb
add
add
add
add
add
add
ficompl
sahf
push
fisubrs
popf
push
fidivs
mov
lock
add
jle
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
das
fildl
std
sub
flds
std
sub
cmp
fdivrs
daa
fdivrs
and
xlat
jl
and
jp
and
jns
and
js
and
js
and
js
pop
aad
std
pop
aad
std
pop
aad
std
pop
aam
std
add
add
adc
sub
push
ljmp
fiadds
pushl
cmp
fldl
pushl
pushl
xchg
jbe
mov
xchg
jmp
mov
repz
loop
inc
jmp
jnp
jnp
jl
nop
jge
xchg
jge
xchg
jle
xchg
jle
xchg
jg
xchg
jg
xchg
jg
xchg
jg
xchg
incl
jecxz
incl
icebp
mov
incl
jecxz
incl
jecxz
jg
xchg
jg
xchg
jg
xchg
jle
xchg
jle
xchg
jge
xchg
jge
xchg
jl
nop
jl
nop
jnp
inc
jmp
jle
xchg
jmp
std
loope
xchg
jmp
pushl
mov
jne
xchg
je
xchg
jae
test
jb
cmp
fldl
jp
ljmp
das
call
xor
add
add
add
add
add
push
lea
sti
xor
push
fnsave
mov
pusha
clc
sbb
scas
dec
mov
fstl
std
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fildl
sub
cmp
flds
std
sub
jg
daa
fdivrs
xlat
jge
and
jl
and
jp
and
jns
and
js
and
js
and
js
and
js
pop
aad
std
pop
aad
std
or
add
or
sub
adc
sub
sub
inc
pushl
cmp
sti
fdivr
mov
sahf
pushl
xchg
ja
xchg
js
mov
jns
mov
test
std
loop
mov
movsb
jge
mov
jge
inc
std
jecxz
xchg
pushf
jg
xchg
incl
loop
incl
loop
incl
jecxz
incl
jecxz
incl
jecxz
incl
jecxz
jmp
mov
incl
jecxz
incl
jecxz
incl
jecxz
incl
loop
incl
loop
incl
loop
incl
std
jecxz
jge
jge
decl
std
loop
test
fisttps
pushl
mov
jbe
xchg
test
cwtl
mov
fldl
call
sub
or
add
add
add
add
add
add
ficompl
xchg
xor
fidivs
lahf
push
fidivs
mov
lock
lea
incb
fisttpll
std
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fildl
sub
cmp
flds
std
sub
jg
daa
fdivrs
xlat
jge
and
jl
and
jp
and
jns
and
js
and
js
and
js
and
js
pop
aad
std
adc
incl
call
les
ljmp
inc
js
xchg
movsb
icebp
mov
jp
mov
jnp
mov
jl
mov
stos
repz
mov
jecxz
jg
incl
loope
pushl
jmp
xchg
incl
jecxz
incl
xchg
incl
jecxz
incl
in
incl
in
incl
in
jmp
repnz
in
incl
in
incl
in
incl
jecxz
incl
jecxz
incl
xchg
incl
loop
call
sar
and
xchg
jg
nop
incl
stc
fdivr
stos
repz
jl
mov
jnp
mov
jnp
mov
pushf
in
mov
test
fiadds
call
les
call
les
incl
mov
incl
mov
jo
add
push
add
push
lea
sti
mov
pop
fnsave
movsb
pop
jecxz
ret
pop
popf
sub
cmp
inc
fists
std
cmp
mov
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
mov
xor
xchg
xor
xchg
das
fildl
std
sub
cmp
flds
std
sub
cmp
fdivrs
fdivrs
and
jl
and
jnp
and
jp
and
jns
and
js
and
js
and
js
sbb
push
incl
mov
decl
mov
and
jl
mov
xchg
jmp
fdivrp
jg
mov
jg
mov
lods
repz
mov
jecxz
incl
loope
incl
xchg
ljmp
icebp
sar
jecxz
incl
jecxz
decl
in
decl
in
decl
in
decl
in
decl
in
ljmp
bnd
decl
in
decl
in
decl
in
decl
in
decl
jecxz
decl
jecxz
incl
icebp
sar
repnz
loop
incl
xchg
incl
jecxz
mov
repz
incl
loopne
mov
jmp
jl
mov
sub
inc
decl
ret
decl
pop
incl
mov
incl
mov
incl
mov
and
add
add
add
add
fisubl
cltd
aaa
jmp
mov
pop
fidivs
mov
lock
mov
sti
add
add
incb
fists
std
cmp
nop
std
cmp
std
cmp
mov
cmp
std
aaa
fmull
xor
fmull
std
xor
xchg
xor
test
fiaddl
sub
cmp
flds
std
sub
jg
fdivrs
and
xlat
jnp
and
jp
and
jns
and
js
and
js
and
js
or
add
push
cmpsb
adc
or
and
adc
fisttps
inc
std
in
xchg
out
jmp
sti
loopne
mov
cwtl
incl
loop
incl
jecxz
decl
out
mov
mov
sar
mov
cltd
decl
in
decl
pushf
decl
pushf
decl
in
decl
in
decl
in
ljmp
in
decl
in
decl
in
decl
in
decl
pushf
decl
fwait
decl
jecxz
pushl
out
mov
decl
loop
incl
loop
decl
sti
loopne
mov
in
dec
jmp
xchg
xchg
incl
lds
decl
cmpsb
adc
add
add
add
add
add
pop
mov
sti
cmp
pop
fnsave
movsl
pop
jecxz
ret
addr16
pop
sahf
sub
cmp
fdivr
dec
loope
std
inc
fists
std
ficoms
std
cmp
std
cmp
mov
cmp
std
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
cmp
flds
std
sub
jg
daa
fdivrs
and
xlat
jnp
and
jp
and
jns
and
js
and
js
adc
dec
incb
mov
incl
xchg
add
or
pop
decl
and
jge
mov
xchg
xchg
pushl
not
dec
std
out
lcall
decl
jecxz
decl
jecxz
decl
test
decl
in
decl
in
decl
in
call
in
call
in
call
in
call
repnz
ljmp
in
call
in
call
in
call
in
call
in
decl
in
decl
in
inc
cld
loop
cltd
jmp
lcall
jecxz
decl
jecxz
decl
jmp
out
stos
lock
not
incl
fisttps
decl
shll
add
add
add
add
add
add
add
fisubl
lcall
cmp
data16
push
lcall
jmp
incb
std
inc
loopne
std
inc
fists
ficoms
std
cmp
std
cmp
mov
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
cmp
flds
std
sub
jg
daa
fdivrs
fdivrs
and
jl
and
jnp
and
jp
and
jns
and
js
add
ud0
mov
incl
rcrl
popa
xlat
outsl
decl
out
call
in
pushl
jecxz
decl
jecxz
decl
in
decl
in
call
std
call
call
in
call
in
call
out
call
mov
call
mov
pushl
repnz
mov
call
mov
call
mov
call
in
call
in
lcall
std
call
call
in
decl
jecxz
decl
jecxz
decl
hlt
int
sar
in
jmp
loop
jmp
outsl
decl
rcrl
add
mov
incl
mov
filds
add
push
add
pop
mov
sti
cmp
arpl
cmp
fnstsw
cmpsl
clc
and
dec
inc
neg
decb
popf
std
inc
loopne
std
inc
loopne
std
inc
loopne
std
inc
fists
aas
ficoms
std
cmp
nop
std
cmp
std
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
mov
xor
xchg
xor
xchg
das
fiaddl
std
sub
cmp
flds
std
sub
jg
sub
jle
fdivrs
and
xlat
jnp
and
jp
and
jns
adc
incl
xchg
add
pop
rcrb
cmp
dec
decl
jecxz
dec
std
call
call
in
call
in
call
in
call
mov
pushl
out
call
out
call
out
call
out
lcall
out
lcall
out
lcall
repz
pushl
out
lcall
out
lcall
out
call
out
call
out
call
out
call
out
mov
call
in
call
sahf
call
in
call
in
jmp
out
decl
jecxz
cmp
dec
incl
rcrb
add
add
add
add
add
add
add
fisubl
cmp
fidivrs
fidivrs
push
cmp
lea
jmp
in
mov
std
inc
loope
std
inc
loopne
std
inc
loopne
std
inc
loopne
std
inc
fists
aas
ficoms
std
cmp
nop
std
cmp
std
cmp
std
cmp
mov
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
fiaddl
sub
cmp
flds
std
sub
jle
daa
fdivrs
and
xlat
jnp
and
jp
and
jno
add
ud0
mov
incl
movsl
or
push
ret
xchg
in
jmp
std
ljmp
out
call
in
call
out
lcall
out
lcall
out
sar
not
lcall
out
lcall
out
lcall
out
lcall
cmpsl
lcall
test
pushf
out
lcall
lret
mov
out
lcall
test
pushf
out
lcall
cmpsl
lcall
cmpsl
lcall
out
lcall
out
inc
not
pushl
out
lcall
out
lcall
out
call
in
call
clc
aad
out
jmp
in
decl
ret
add
add
add
add
add
pop
mov
aas
cmpsb
data16
cmpsl
data16
enter
mov
dec
inc
neg
push
jecxz
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
aas
ficoms
std
cmp
fisttpll
std
cmp
mov
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
cmp
flds
std
sub
jle
daa
fdivrs
xlat
jge
and
jl
and
jnp
adc
mov
incl
mov
incl
mov
insl
ljmp
stc
fdivr
enter
mov
out
lcall
movsl
lcall
out
lcall
out
jmp
push
jmp
call
test
jmp
call
stos
jmp
call
stos
jmp
call
int
mov
call
stos
jmp
call
stos
jmp
call
stos
jmp
call
test
call
push
jmp
out
lcall
out
lcall
out
lcall
movsb
pushl
cld
out
enter
test
mov
popa
xlat
insl
incl
adc
add
add
add
add
add
add
add
fisubl
popf
ds
test
fiadds
fidivrs
mov
gs
add
push
jmp
in
sar
jecxz
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
cmp
fisttpll
std
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
mov
xor
xchg
xor
xchg
das
fiaddl
std
sub
cmp
flds
std
sub
jg
daa
fdivrs
xlat
jge
and
jnp
or
add
add
cmp
lods
in
mov
ljmp
push
jmp
out
jmp
call
stos
jmp
call
lods
dec
clc
mov
jmp
lods
jmp
scas
jmp
scas
jmp
jmp
scas
jmp
jmp
iret
mov
jmp
scas
jmp
jmp
scas
jmp
jmp
scas
jmp
lods
jmp
dec
sti
in
mov
call
stos
jmp
call
test
jmp
cld
out
mov
ret
stc
fdivrp
lods
in
mov
incl
cwtl
add
incl
mov
mov
add
add
add
or
push
inc
stos
imul
stos
imul
and
dec
inc
neg
pop
in
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
cmp
fisttpll
std
cmp
std
cmp
mov
aaa
fmull
std
xor
fisttpl
std
xor
xchg
xor
test
fiaddl
sub
cmp
sub
jg
sub
jle
xlat
jge
and
enter
mov
incl
mov
incl
cmpsl
or
jle
mov
into
stc
loopne
movsb
call
sar
into
stc
loopne
cmpsb
call
scas
jmp
jmp
scas
jmp
jmp
leave
call
sti
in
test
mov
test
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
ret
cmc
sar
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
test
ljmp
iret
cli
loope
mov
jmp
scas
jmp
jmp
scas
jmp
jmp
iret
dec
stc
loopne
movsb
call
loopne
jle
incl
cmpsl
or
add
add
add
add
add
add
add
fisubrl
sahf
inc
jmp
stos
insb
fiadds
imul
mov
imul
mov
in
sar
in
std
push
in
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loope
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
ficoms
std
cmp
mov
cmp
std
cmp
mov
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
cmp
sub
jg
sub
jle
daa
xlat
jge
and
mov
incb
mov
incl
mov
lcall
in
ljmp
jmp
call
sti
out
shl
ljmp
ljmp
lods
ljmp
lods
ljmp
out
mov
jmp
ljmp
jmp
ljmp
out
mov
inc
cmc
aam
iret
stc
sar
jecxz
sar
jecxz
fdivr
ljmp
cli
jecxz
sar
jecxz
iret
stc
cmc
aam
mov
out
mov
ljmp
jmp
ljmp
in
mov
pushl
ljmp
lods
ljmp
stos
ljmp
mov
mov
pushl
jmp
in
lcall
add
add
add
add
push
add
or
outsb
filds
outsl
fldl
insl
loope
enter
movsb
xor
inc
mul
jns
mov
push
in
std
push
in
std
push
in
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
ficoms
std
cmp
mov
cmp
std
cmp
mov
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
cmp
flds
std
sub
jg
daa
xlat
jle
xlat
jge
or
add
add
leave
mov
jmp
mov
push
mov
jmp
pushl
jmp
pushl
jmp
pushl
cmc
call
stc
loope
mov
mov
dec
neg
in
fdivrp
lock
sti
in
lret
inc
repz
mov
icebp
leave
call
clc
fdivrp
sar
fdivrp
mov
icebp
leave
inc
repz
lret
call
sti
in
fdivrp
lock
in
dec
neg
mov
in
mov
dec
clc
mov
mov
pushl
jmp
pushl
jmp
pushl
cld
jmp
ljmp
lock
icebp
leave
incl
mov
incl
mov
incl
mov
scas
add
add
add
add
add
fisubrl
sahf
inc
jmp
lods
jno
inc
stos
outsl
fiadds
jbe
inc
ret
or
leave
mov
xlat
lcall
push
in
std
push
in
std
push
in
std
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
fists
std
inc
ficoms
std
aas
ficoms
std
cmp
std
cmp
mov
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
xor
test
fiaddl
std
sub
cmp
sub
jg
daa
xlat
jle
and
jne
pop
cltd
pop
incl
mov
lcall
repz
pushl
in
mov
jmp
lock
mov
in
mov
pushl
in
mov
mov
icebp
ljmp
neg
inc
lock
mov
in
mov
mov
in
mov
dec
neg
dec
neg
mov
in
mov
mov
in
mov
inc
lock
call
neg
jmp
icebp
fdivr
out
jecxz
hlt
mov
in
mov
pushl
in
mov
pushl
cli
out
sar
mov
mov
pushl
mov
add
add
add
add
add
add
or
jb
dec
lods
jae
inc
lods
jno
inc
lret
and
mov
loope
mov
lock
fwait
lock
outsl
jmp
mov
std
push
in
std
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
fists
std
inc
fists
std
aas
ficoms
std
cmp
std
cmp
mov
cmp
std
cmp
mov
aaa
fmull
std
xor
fildl
std
xor
test
xor
test
das
fiaddl
std
sub
cmp
sub
jg
sub
jle
and
insl
std
add
add
and
mov
mov
clc
loopne
out
mov
out
sar
out
sar
out
sar
out
sar
neg
jmp
push
jmp
std
out
inc
out
out
ret
out
ret
out
ret
mov
out
ret
mov
out
ret
mov
neg
call
neg
mov
out
ret
mov
out
ret
mov
out
ret
mov
out
ret
out
jmp
std
out
jmp
push
call
neg
mov
out
sar
out
sar
out
sar
out
sar
clc
loope
in
mov
out
ret
in
mov
incl
mov
incl
mov
out
add
add
add
add
add
fisubrl
scas
jne
dec
lods
jae
dec
mov
jo
or
lret
cmc
fsin
sahf
icebp
int3
sahf
lock
popf
lock
pushf
lock
je
mov
push
in
std
push
in
std
push
in
std
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loope
std
inc
loopne
std
inc
fists
std
inc
fists
aas
ficoms
std
cmp
fisttpll
std
cmp
mov
aaa
fmull
std
xor
fisttpl
std
xor
xchg
xor
test
das
fiaddl
sub
cmp
flds
std
sub
jg
and
data16
add
add
and
mov
ret
inc
lock
in
loopne
in
inc
icebp
int
ret
inc
lock
call
clc
loope
loope
in
dec
repz
jecxz
lock
neg
inc
lock
inc
lock
enter
enter
enter
enter
enter
enter
aad
ret
lock
enter
enter
enter
enter
enter
enter
dec
repz
in
repz
repz
loope
in
call
clc
loope
ret
inc
lock
inc
lock
fyl2xp1
in
loope
out
inc
icebp
int3
inc
icebp
leave
jmp
mov
add
add
add
add
add
add
or
ja
dec
scas
jbe
dec
scas
jne
dec
lret
xor
dec
mov
loop
movsl
repnz
mov
icebp
int3
sahf
icebp
lret
sahf
lock
lock
incb
in
std
push
in
std
push
in
std
push
jecxz
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loopne
std
inc
fists
std
inc
fists
aas
ficoms
std
cmp
fisttpll
std
cmp
mov
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
flds
std
sub
jg
and
data16
add
add
or
or
dec
repz
dec
repnz
call
dec
hlt
aad
into
hlt
aad
call
repz
enter
shl
xlat
call
repz
enter
enter
enter
enter
enter
enter
enter
fprem
loop
fprem
loop
enter
enter
enter
enter
enter
enter
enter
lret
jmp
std
icebp
call
neg
dec
icebp
int3
dec
repz
call
hlt
aad
lret
out
in
lock
repz
enter
mov
xchg
or
incl
mov
out
add
add
add
add
add
fisubrl
mov
jns
dec
scas
ja
dec
mov
jne
or
lret
mov
icebp
sar
mov
icebp
into
mov
icebp
lret
sahf
lock
popf
lock
out
ret
out
push
in
std
push
in
std
push
jecxz
std
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loopne
std
inc
fists
std
inc
fists
inc
ficoms
std
cmp
fisttpll
std
cmp
mov
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
flds
std
sub
jg
and
outsb
std
pop
cltd
sbb
add
or
dec
hlt
aad
into
hlt
aad
loop
ljmp
call
dec
repz
into
repz
call
call
repz
into
repz
into
repz
into
repz
into
repz
into
repz
into
repz
in
in
into
repz
into
repz
into
repz
into
repz
into
repz
into
repz
into
repz
jecxz
in
jmp
sti
in
dec
repz
into
repz
into
repz
call
jmp
std
icebp
jmp
cld
out
call
cmc
xlat
dec
hlt
aad
or
decl
mov
incl
mov
iret
add
add
add
or
jnp
dec
mov
fisttpll
jns
dec
into
test
sub
fs
mul
test
repnz
movsb
repnz
mov
icebp
into
mov
icebp
int3
sahf
lock
popf
lock
cwtl
lock
mov
push
in
std
push
in
std
push
jecxz
std
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
fists
std
aas
ficoms
std
cmp
std
cmp
mov
cmp
std
cmp
mov
aaa
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
das
fiaddl
sub
flds
std
xor
test
push
fistl
incl
mov
incl
mov
decl
push
inc
out
int
aad
loop
in
idiv
out
out
call
neg
call
cmc
aad
aad
out
out
ljmp
call
cmc
fcos
aad
fcos
aad
fcos
aad
fcos
aad
fcos
loop
jmp
call
cmc
fcos
aad
fcos
aad
fcos
aad
fcos
aad
fcos
aad
fcos
in
in
ljmp
call
cmc
aad
aad
loope
jmp
jmp
sti
in
call
neg
inc
out
int
dec
mov
incl
mov
incl
mov
incl
mov
scas
add
add
add
add
add
fidivl
mov
jge
push
mov
fimuls
sub
enter
xchg
adc
stos
out
int3
mov
repnz
cmpsl
repnz
cmpsb
repnz
movsl
repnz
mov
icebp
into
mov
icebp
int3
lahf
icebp
int3
sahf
icebp
lret
popf
lock
out
out
push
in
std
push
in
std
push
jecxz
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
fists
aas
ficoms
std
cmp
fisttpll
std
cmp
mov
cmp
mov
fmull
std
xor
mov
xor
xchg
xor
xchg
xor
test
fiaddl
pop
loope
jbe
stos
je
stos
jae
test
incb
mov
incl
mov
lcall
cwtl
sbb
xchg
aam
fcomi
loope
in
in
push
clc
push
clc
jmp
sti
in
fcomi
loopne
fcomi
loopne
fdiv
loope
in
cmc
in
std
hlt
fdiv
loope
fcomi
fcomi
fcomi
fcomi
out
in
jmp
sti
in
fcomi
fcomi
fcomi
fcomi
fdiv
loope
call
cmc
fdiv
loope
fcomi
loopne
fcomi
loopne
in
jmp
repz
cli
jmp
sti
in
fcomi
loope
xchg
aam
lcall
cwtl
sbb
add
add
add
add
add
or
jg
push
mov
fstl
jge
dec
rorb
std
dec
mov
in
scas
hlt
aad
stos
repz
test
repnz
cmpsb
repnz
movsl
repnz
movsb
repnz
mov
icebp
into
mov
icebp
int3
mov
icebp
lret
pushf
lock
in
mov
push
in
std
push
jecxz
std
dec
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
fists
aas
ficoms
std
cmp
fisttpll
std
cmp
mov
cmp
mov
aaa
fmull
std
xor
mov
aaa
fmull
insb
jecxz
jns
scas
js
scas
ja
lods
jbe
lods
jne
stos
jae
stos
pop
rorl
incl
mov
incl
mov
cmp
lods
push
stc
in
std
repz
out
idiv
icebp
clc
ljmp
jmp
stc
out
in
std
repz
stc
jmp
cli
jmp
loope
in
loope
in
loope
in
ljmp
jmp
stc
in
loope
in
loope
in
in
ljmp
cmc
jmp
stc
out
loope
out
in
jmp
in
cld
repnz
stc
push
clc
push
stc
ljmp
movsl
cmp
add
add
add
cmp
add
add
add
add
fidivl
mov
sbb
push
lds
cli
or
adc
stos
out
int3
mov
hlt
aad
lods
hlt
aad
stos
repz
stos
repnz
test
sar
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
repnz
mov
icebp
int
mov
icebp
int3
sahf
icebp
lret
popf
lock
lock
xchg
out
jbe
mov
pop
in
push
jecxz
std
dec
jecxz
std
dec
loop
std
dec
loop
std
dec
loop
std
dec
loope
std
dec
loopne
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
fists
std
ficoms
std
cmp
std
cmp
std
cmp
mov
cmp
loopne
fs
jg
mov
jle
mov
jge
mov
jnp
mov
jp
scas
jns
scas
ja
lods
ja
lods
jne
lods
je
stos
je
stos
incb
imul
add
add
cmp
test
jmp
lock
idiv
idiv
cld
push
std
idiv
in
cld
icebp
in
cld
icebp
push
cli
push
clc
in
cld
repnz
ljmp
out
cld
repnz
jmp
cld
icebp
push
idiv
cmc
sti
out
cld
repz
ljmp
push
stc
push
cli
out
std
hlt
in
sti
icebp
jmp
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
add
or
sbb
mov
fstl
fists
nop
mull
cmpsb
cmp
dec
mov
in
mov
fsin
scas
cmc
scas
hlt
lods
hlt
aad
stos
repz
stos
repnz
test
repnz
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
into
mov
icebp
int
mov
icebp
lret
sahf
lock
lock
pushf
lock
fwait
lock
mov
fs
push
in
decb
std
dec
loop
std
dec
loope
std
dec
loopne
std
inc
loopne
std
inc
loopne
std
inc
fists
std
inc
fists
dec
fists
out
incb
mov
sub
incb
call
mov
jle
mov
jl
mov
jnp
mov
jns
scas
js
scas
ja
lods
jbe
lods
jbe
lods
jne
stos
insb
ficomps
decb
xchg
adc
incl
mov
decl
xchg
ud0
push
mov
cld
repz
std
idiv
idiv
cli
clc
cld
push
sti
clc
cld
clc
cld
clc
cld
clc
cld
clc
cld
clc
cld
clc
cld
push
cld
push
cli
push
sti
push
sti
push
clc
push
std
idiv
mov
mov
ud0
mov
incl
mov
incl
xchg
adc
push
stos
xor
add
add
add
pop
add
add
add
add
add
fidivl
mov
ficoms
test
push
rorb
pop
xchg
or
lods
out
int
shl
mov
fsin
mov
fdivr
mov
fdivr
scas
hlt
xlat
lods
hlt
aad
lods
repz
stos
repz
test
repnz
test
sar
cmpsl
repnz
movsl
repnz
movsb
repnz
mov
icebp
into
mov
icebp
int3
lahf
lock
sahf
lock
lock
fwait
lock
cltd
out
cltd
out
xchg
out
jmp
incb
ljmp
jg
mov
jge
mov
jl
mov
jg
mov
mov
mov
decb
jmp
incb
ljmp
sub
incb
jmp
mov
jg
mov
jg
mov
jge
mov
jl
mov
jp
mov
jns
scas
ja
scas
ja
lods
jbe
lods
jne
stos
je
stos
jae
test
sbb
sub
add
add
add
add
cmp
les
rcrb
jmp
std
stc
cld
cli
std
sti
std
cli
std
cli
std
ljmp
lcall
les
cmpsl
incl
mov
incl
mov
incl
mov
incl
mov
lcall
mov
pop
jmp
aad
incl
cltd
pop
incl
outsl
add
add
add
add
push
add
or
xchg
pop
mov
test
push
rcll
push
mov
in
mov
fdivr
mov
mov
fsin
mov
fsin
mov
fdivr
scas
hlt
xlat
lods
hlt
lods
repz
stos
repz
stos
repz
stos
repz
test
sar
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
iret
mov
icebp
int
mov
icebp
lret
sahf
lock
lock
lock
fwait
lock
enter
cwtl
out
out
out
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
in
sar
in
mov
decb
jmp
decb
jmp
incb
ljmp
sub
incb
jmp
mov
jg
mov
jge
mov
jge
mov
jnp
mov
jp
scas
jns
scas
js
lods
ja
lods
jbe
stos
jne
stos
je
stos
jb
test
ds
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
lcall
mov
call
xchg
testb
add
add
add
add
add
add
fidivl
cmpsb
push
jmp
mov
mov
pop
ret
dec
lret
pop
xchg
or
lods
out
iret
inc
mul
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
scas
cmc
fdivr
lods
hlt
xlat
lods
repz
lods
repz
lods
repz
stos
repz
test
repnz
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
into
mov
icebp
int
mov
icebp
lret
sahf
lock
lock
popf
lock
fwait
out
enter
cwtl
out
xchg
out
out
xchg
in
ret
xchg
in
ret
in
ret
in
sar
in
sar
in
sar
in
mov
decb
mov
decb
ljmp
test
mov
sub
incb
call
mov
jg
mov
jge
mov
jl
mov
jnp
mov
jp
scas
js
scas
ja
lods
jbe
lods
jne
stos
je
stos
jae
test
jo
test
outsl
loop
push
lret
jl
cmp
mov
lcall
mov
pop
incl
mov
incl
mov
incl
mov
incl
mov
incl
mov
incl
mov
call
fwait
push
lcall
mov
inc
cmp
jbe
popa
fistpl
jmp
movsb
jmp
incl
nop
lcall
shlb
nop
or
add
mov
add
or
add
add
add
or
mov
pop
mov
mov
pop
aad
cmc
and
dec
stc
out
mov
neg
mov
fdivr
mov
mov
mov
mov
mov
fsin
scas
cmc
fdivr
scas
hlt
xlat
lods
repz
lods
repz
lods
repz
stos
repz
test
repnz
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
repnz
mov
icebp
into
mov
icebp
int3
lahf
icebp
lret
sahf
lock
lock
pushf
lock
lcall
cwtl
out
out
in
xchg
in
ret
xchg
in
ret
in
ret
in
sar
in
sar
in
mov
decb
jmp
decb
jmp
incb
ljmp
test
mov
sub
incb
call
mov
jle
mov
jge
mov
jl
mov
jp
scas
jns
scas
js
scas
js
lods
ja
lods
jne
stos
jae
stos
jb
test
jo
cmpsl
outsl
loop
insl
loop
insl
loope
insb
loope
imul
push
mov
push
mov
imul
mov
data16
fstpl
jmp
jmp
movsb
lcall
lahf
jmp
aad
decl
stos
incl
jnp
fadds
add
push
add
add
add
add
add
add
add
fidivrl
cmpsl
push
jmp
mov
mov
pop
les
cli
or
sar
clc
in
mov
neg
mov
neg
mov
mov
mov
mov
mov
mov
fsin
scas
hlt
fdivr
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
test
repnz
cmpsl
repnz
movsl
repnz
movsb
repnz
movsb
repnz
mov
icebp
into
mov
icebp
lret
sahf
lock
popf
lock
lock
fwait
out
enter
cltd
out
xchg
out
in
xchg
in
ret
xchg
in
ret
in
ret
in
sar
in
sar
in
mov
decb
jmp
decb
jmp
decb
ljmp
test
mov
sub
incb
call
mov
jg
mov
jge
mov
jl
mov
jnp
mov
jnp
scas
jp
scas
jns
lods
ja
lods
jbe
stos
je
stos
jae
test
jb
cmpsl
jo
cmpsb
outsb
loop
insl
loop
insl
loope
insb
loope
imul
imul
push
mov
push
mov
push
fbld
arpl
lcall
loop
pushl
fadds
incl
mov
incl
dec
add
add
pop
add
add
add
or
fistps
fstpl
mov
pop
xlat
pushf
cmc
and
ss
push
mov
out
mov
mul
mov
neg
mov
neg
mov
fdivr
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
scas
repz
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
test
sar
cmpsl
repnz
cmpsb
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
iret
mov
icebp
int
mov
lock
sahf
lock
lock
out
leave
fwait
out
enter
cwtl
out
xchg
out
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
in
mov
decb
jmp
decb
ljmp
xchg
mov
incb
mov
sub
incb
out
jle
mov
jge
mov
jge
mov
jl
mov
jnp
scas
jns
scas
js
lods
ja
lods
jne
stos
je
stos
jae
test
jno
cmpsl
outsl
loop
outsb
loop
insl
loop
insl
loope
insb
loope
insb
loope
imul
push
mov
imul
mov
ljmp
movsl
ljmp
cmpsb
call
cltd
jmp
aad
decl
sahf
pop
incl
outsl
add
add
add
add
add
add
add
fidivrl
test
jmp
mov
nop
fstpl
xchg
ljmp
or
mov
sar
stc
out
mov
clc
loope
mov
mul
mov
neg
mov
mov
fdivr
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
mov
xlat
scas
repz
lods
repz
lods
repz
lods
repz
stos
repz
test
repnz
test
sar
cmpsb
repnz
movsl
repnz
movsb
icebp
iret
mov
icebp
int
mov
icebp
int3
lahf
lock
sahf
lock
lock
fwait
out
leave
lcall
cwtl
out
xchg
out
out
xchg
in
xchg
in
ret
xchg
in
ret
in
sar
in
sar
in
mov
decb
mov
decb
ljmp
test
mov
incb
call
mov
jg
mov
jg
mov
jle
mov
jge
mov
jnp
mov
jp
scas
jns
lods
js
lods
jbe
stos
jne
stos
je
test
jno
cmpsl
jo
cmpsl
outsl
loop
outsb
loop
outsb
loop
insl
loop
insb
loope
insb
loope
imul
push
mov
fistps
loop
jmp
movsb
ljmp
xlat
cmp
add
add
add
add
add
or
xchg
fbld
xchg
frstor
nop
fistps
mov
push
mov
call
mov
clc
loop
mov
mul
mov
mul
mov
neg
mov
neg
mov
mov
mov
mov
mov
fdivr
mov
fdivr
scas
repz
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
test
repnz
cmpsl
repnz
movsl
repnz
movsb
repnz
mov
icebp
into
mov
icebp
int3
mov
lock
lock
out
leave
fwait
out
enter
cwtl
out
xchg
out
xchg
out
in
xchg
in
ret
xchg
in
ret
in
ret
in
sar
in
sar
in
mov
decb
mov
decb
ljmp
test
mov
sub
incb
out
incb
out
jg
mov
jge
mov
jl
mov
jnp
scas
jp
lods
jns
lods
ja
stos
jbe
stos
je
stos
jae
test
jno
cmpsl
jo
cmpsl
outsl
loop
outsl
loop
outsb
loop
insl
loope
insb
loope
push
mov
ljmp
test
imul
incl
xchg
lcall
shlb
nop
or
add
mov
add
or
add
add
add
add
add
fidivrl
pop
jmp
mov
xchg
frstor
cltd
ljmp
or
mov
sar
leave
stc
call
inc
stc
in
mov
clc
jecxz
mov
mul
mov
mul
mov
neg
mov
neg
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
mov
fdivr
scas
hlt
xlat
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
test
repnz
cmpsb
repnz
movsl
repnz
movsl
repnz
movsb
icebp
into
mov
icebp
int3
mov
lock
sahf
lock
out
leave
fwait
out
enter
cltd
out
cwtl
out
xchg
out
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
in
mov
decb
jmp
decb
ljmp
xchg
mov
incb
mov
sub
incb
out
jg
mov
jle
mov
jge
mov
jl
scas
jnp
scas
jp
lods
js
lods
jbe
stos
jne
stos
je
stos
jae
test
jo
cmpsl
jo
cmpsl
outsl
loop
outsl
loop
outsb
loopne
imul
movsb
ljmp
test
jmp
aad
decl
stos
incl
jnp
fadds
add
push
add
add
add
add
add
or
adc
gs
xchg
frstor
fbld
cmpsb
cmc
and
mov
jmp
inc
stc
in
ret
inc
stc
in
sar
mov
clc
loop
mov
mul
mov
neg
mov
neg
mov
mov
fdivr
mov
fdivr
mov
mov
mov
fsin
mov
fdivr
mov
fdivr
scas
hlt
xlat
scas
hlt
xlat
scas
repz
lods
repz
lods
repz
stos
repz
test
repnz
cmpsl
repnz
cmpsl
repnz
movsl
repnz
movsb
icebp
into
mov
icebp
int
mov
lock
lahf
lock
out
leave
pushf
out
leave
fwait
out
enter
cltd
out
cwtl
out
xchg
out
in
xchg
in
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
decb
jmp
decb
ljmp
mov
mov
incb
call
mov
sub
mov
jg
mov
jg
mov
jle
mov
jge
mov
jnp
scas
jp
scas
jns
lods
js
lods
ja
lods
jbe
stos
je
stos
jb
test
jo
cmpsl
outsl
loop
insb
fisubs
ljmp
stos
ljmp
test
lcall
incl
mov
incl
dec
add
add
pop
add
add
add
add
add
fidivrl
rcrb
fs
sahf
jmp
or
aam
int3
cli
ljmp
cli
out
stc
in
ret
stc
in
sar
inc
stc
in
mov
clc
loop
mov
mul
mov
mul
mov
neg
mov
neg
mov
fdivr
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
scas
repz
scas
repz
lods
repz
stos
repz
stos
repnz
test
repnz
cmpsl
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
into
mov
icebp
int
mov
lock
sahf
out
lret
out
leave
pushf
out
leave
fwait
out
enter
cltd
out
cwtl
out
out
xchg
in
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
decb
jmp
decb
ljmp
mov
mov
incb
jmp
mov
sub
incb
out
jg
mov
jg
mov
jle
mov
jl
mov
jnp
scas
jp
scas
jns
lods
ja
lods
jbe
stos
je
stos
jae
test
outsl
loope
push
pushf
ljmp
test
call
pushf
jmp
aad
decl
sahf
pop
incl
outsl
add
add
add
add
push
add
or
adc
imul
frstor
cwtl
fbld
stos
cmc
es
insl
dec
sti
jmp
lret
inc
cli
call
inc
cli
out
vcvtdq2pd
ret
stc
in
ret
inc
stc
in
sar
inc
clc
jecxz
mov
mul
mov
mul
mov
neg
mov
neg
mov
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
mov
xlat
scas
repz
scas
repz
lods
repz
lods
repz
stos
repnz
stos
repnz
test
repnz
cmpsb
repnz
movsl
repnz
movsb
icebp
iret
movsb
icebp
into
mov
lock
mov
out
lret
out
lret
out
leave
pushf
out
enter
lcall
xchg
out
out
xchg
in
ret
xchg
in
ret
in
sar
in
sar
in
sar
jmp
decb
jmp
decb
mov
decb
jmp
mov
test
mov
sub
incb
out
jg
mov
jg
mov
jle
mov
jge
mov
jl
scas
jnp
scas
jp
lods
js
lods
jbe
stos
jne
stos
je
stos
outsl
frstor
pushl
stos
ljmp
test
sub
cmp
mov
add
add
add
add
add
add
add
aas
stos
pop
in
imul
fisubrs
pushf
frstor
lahf
out
xchg
stc
or
aam
into
sti
jmp
leave
sti
jmp
inc
cli
call
inc
cli
out
vcvtdq2pd
stc
in
ret
inc
stc
in
sar
inc
clc
jecxz
shl
mov
mul
mov
neg
mov
neg
mov
neg
mov
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
mov
xlat
mov
scas
repz
scas
repz
lods
repz
lods
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
repnz
cmpsb
repnz
movsl
icebp
iret
movsb
icebp
iret
mov
lock
mov
out
lret
out
lret
out
leave
popf
out
enter
lcall
cwtl
out
xchg
out
out
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
decb
jmp
decb
ljmp
mov
mov
incb
call
mov
sub
incb
out
incb
out
jle
mov
jge
mov
jnp
scas
jp
scas
js
lods
ja
lods
je
test
jo
mov
pushl
lods
decl
xchg
lcall
shlb
nop
or
add
mov
add
or
add
add
pop
add
xchg
adc
imul
loope
rcrb
fisubrl
stos
aas
std
int
dec
sti
in
dec
sti
in
dec
sti
ljmp
cli
jmp
inc
cli
call
inc
cli
out
stc
out
ret
stc
in
ret
stc
in
ret
inc
clc
jecxz
sar
mov
mul
mov
neg
mov
neg
mov
neg
mov
fdivr
mov
mov
mov
mov
fsin
mov
fsin
mov
xlat
mov
xlat
scas
repz
scas
repz
lods
repz
lods
repz
stos
repz
stos
repnz
test
repnz
cmpsl
repnz
movsl
repnz
movsb
icebp
iret
mov
lock
mov
lock
mov
out
lret
out
leave
pushf
out
enter
enter
cltd
out
cwtl
out
out
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
jmp
decb
jmp
decb
ljmp
mov
mov
incb
call
mov
sub
incb
call
mov
jg
mov
jg
mov
jle
mov
jl
mov
jnp
scas
jp
scas
je
mov
pushl
scas
ljmp
test
and
jge
bts
incl
jnp
fadds
add
push
add
add
add
add
add
fidivs
test
outsl
mov
in
xlat
cltd
stc
adc
loope
sar
in
dec
sti
jmp
int3
sti
jmp
lret
sti
ljmp
cli
jmp
inc
cli
call
inc
cli
out
vcvtdq2pd
stc
out
ret
stc
in
ret
inc
clc
in
sar
mov
mul
mov
mul
mov
neg
mov
neg
mov
cmc
fdivr
mov
mov
mov
mov
fsin
mov
fdivr
mov
xlat
mov
xlat
scas
repz
lods
repz
lods
repz
lods
repz
stos
repz
stos
repnz
test
repnz
cmpsb
repnz
cmpsb
icebp
sar
movsl
icebp
into
movsb
lock
mov
lock
mov
out
lret
out
leave
popf
out
leave
pushf
out
enter
cltd
out
cwtl
out
out
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
decb
jmp
decb
mov
decb
jmp
mov
incb
mov
sub
incb
out
jg
mov
jg
mov
jge
mov
jp
test
jns
mov
js
scas
cmp
mov
sbb
mov
incl
dec
add
add
pop
add
add
push
js
and
sarb
insl
in
jmp
lods
inc
cld
arpl
test
into
sti
in
sar
in
dec
sti
in
dec
sti
jmp
int
jmp
int3
sti
jmp
lret
sti
ljmp
cli
jmp
inc
cli
call
inc
cli
out
stc
out
ret
stc
in
ret
stc
in
ret
inc
clc
jecxz
sar
mov
mul
mov
neg
mov
neg
mov
cmc
mov
fdivr
mov
fdivr
mov
mov
mov
fsin
mov
fdivr
mov
xlat
mov
xlat
scas
repz
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
test
repnz
test
sar
cmpsl
icebp
sar
movsl
icebp
into
movsb
lock
mov
lock
mov
out
lret
sahf
out
lret
out
leave
pushf
out
enter
lcall
cwtl
out
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
jmp
decb
jmp
decb
ljmp
mov
mov
incb
jmp
mov
incb
mov
and
mov
jg
mov
js
movsl
jnp
mov
jl
mov
pusha
loope
jmp
cmp
sahf
and
add
mov
add
adc
add
add
cmp
mov
adc
loop
sar
out
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
jmp
int
jmp
lret
sti
ljmp
cli
jmp
inc
cli
call
inc
cli
out
vcvttpd2dq
stc
out
stc
in
ret
stc
in
sar
inc
clc
loop
mov
clc
loope
mov
mul
mov
neg
mov
cmc
mov
cmc
fdivr
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
xlat
scas
repz
lods
repz
lods
repz
stos
repz
stos
repz
stos
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
cmpsb
icebp
iret
movsb
lock
mov
lock
mov
lock
lahf
out
lret
out
lret
out
leave
pushf
out
enter
lcall
xchg
in
in
xchg
in
ret
xchg
in
ret
in
sar
jmp
xchg
jmp
decb
jmp
decb
ljmp
mov
mov
decb
jmp
mov
test
mov
sub
incb
loop
jl
lods
jle
mov
js
mov
xor
xchg
sbb
add
add
add
add
add
push
lds
enter
sar
out
sar
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
jmp
lret
sti
ljmp
cli
jmp
dec
cli
call
inc
cli
out
vcvtdq2pd
vcvttpd2dq
vcvttpd2dq
ret
stc
in
ret
inc
clc
jecxz
sar
mov
clc
loope
mov
mul
mov
neg
mov
cmc
fdivr
mov
cmc
fdivr
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
scas
repz
scas
repz
lods
repz
lods
repz
lods
repz
stos
repz
stos
repnz
test
repnz
cmpsb
icebp
iret
movsl
lock
movsb
lock
mov
lock
mov
out
lret
lahf
out
lret
out
leave
pushf
out
enter
fwait
out
lcall
xchg
in
in
xchg
in
ret
in
sar
jmp
xchg
jmp
nop
jmp
decb
jmp
decb
ljmp
mov
mov
incb
jmp
mov
and
jge
test
incl
fistps
add
add
add
add
add
add
xchg
adc
cmc
ret
in
fsincos
dec
hlt
into
stc
jmp
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
jmp
lret
sti
ljmp
sti
jmp
inc
cli
out
cli
out
cli
out
stc
out
vcvttpd2dq
stc
in
ret
inc
clc
jecxz
sar
inc
clc
loop
mov
clc
loope
mov
neg
mov
neg
mov
cmc
fdivr
mov
fdivr
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
scas
repz
scas
repz
scas
repz
lods
repz
lods
repz
stos
repnz
test
repnz
cmpsl
icebp
iret
cmpsb
lock
movsl
lock
mov
lock
mov
out
lret
mov
out
leave
popf
out
enter
enter
lcall
cwtl
in
in
xchg
in
ret
xchg
in
ret
in
sar
jmp
xchg
jmp
nop
jmp
decb
jmp
decb
ljmp
mov
mov
incb
loop
incl
call
mov
sub
test
adc
fadds
add
push
add
add
add
add
add
pop
mov
fdiv
xchg
mov
out
in
lock
std
repz
lret
dec
cli
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
in
dec
sti
jmp
int3
sti
ljmp
sti
ljmp
cli
out
enter
cli
out
stc
out
vcvttpd2dq
stc
in
ret
stc
in
ret
clc
in
ret
inc
clc
loop
mov
clc
loope
mov
mul
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
scas
repz
scas
repz
scas
repz
lods
repz
stos
repnz
stos
repnz
test
icebp
sar
cmpsb
icebp
iret
movsl
lock
movsb
lock
movsb
lock
mov
lock
mov
out
lret
out
leave
popf
out
enter
enter
lcall
cwtl
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
jmp
xchg
jmp
decb
jmp
decb
ljmp
mov
mov
incb
jmp
mov
jmp
mov
incl
dec
add
add
pop
add
and
xchg
adc
fldt
ret
aam
fiaddl
sarb
jmp
jmp
clc
lock
repz
int3
clc
out
sar
in
dec
sti
in
dec
sti
in
dec
sti
jmp
int3
sti
ljmp
sti
ljmp
cli
call
inc
cli
out
stc
out
vcvttpd2dq
stc
in
stc
in
ret
stc
in
ret
inc
clc
jecxz
sar
mov
clc
loope
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
scas
repz
scas
repz
lods
repz
stos
repnz
stos
repnz
stos
repnz
test
sar
cmpsl
icebp
sar
cmpsb
icebp
iret
movsl
icebp
iret
movsb
lock
mov
lock
mov
out
lret
out
lret
out
leave
popf
out
enter
fwait
in
lcall
xchg
in
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
decb
jmp
decb
ljmp
test
lods
decl
jmp
test
decl
and
add
mov
add
adc
add
or
das
lods
inc
in
xchg
int3
xchg
lock
rclb
iret
xchg
rcl
sarl
xchg
aad
jecxz
in
icebp
ret
out
fsqrt
repnz
leave
cmc
loope
int
ljmp
sti
jmp
int
jmp
int3
sti
ljmp
sti
jmp
dec
cli
call
inc
cli
out
stc
out
vcvttpd2dq
stc
in
stc
in
ret
inc
clc
jecxz
sar
inc
clc
loop
mov
mul
mov
neg
mov
neg
mov
neg
mov
mov
mov
mov
mov
fsin
mov
fdivr
mov
xlat
mov
mov
aad
scas
repz
lods
repz
lods
repnz
stos
repnz
stos
icebp
sar
test
icebp
sar
cmpsl
icebp
sar
cmpsb
icebp
iret
movsl
lock
movsb
lock
mov
lock
mov
out
lret
out
lret
out
leave
popf
out
enter
fwait
in
cltd
in
cwtl
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
nop
jmp
decb
in
decb
jmp
mov
lcall
mov
add
add
add
add
add
mov
mov
inc
mov
mov
xchg
out
aad
nop
out
enter
roll
sarb
loopne
fcmovnb
jmp
lock
hlt
lret
dec
cli
ljmp
sti
jmp
int3
sti
ljmp
sti
jmp
dec
cli
call
inc
stc
out
stc
out
vpmulhw
stc
in
ret
clc
in
ret
inc
clc
loop
sar
mov
mul
mov
neg
mov
neg
mov
neg
mov
neg
mov
mov
mov
fsin
mov
fdivr
mov
xlat
mov
mov
scas
repz
scas
repz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
icebp
sar
cmpsl
icebp
iret
cmpsb
lock
movsb
lock
mov
lock
mov
out
lret
mov
out
lret
out
leave
pushf
out
fwait
in
lcall
cwtl
in
xchg
in
ret
xchg
in
ret
xchg
in
ret
in
sar
in
sar
jmp
mov
jmp
mov
pushl
aam
incl
nop
or
add
mov
add
or
add
add
push
fwait
and
push
enter
ljmp
mov
lret
fcmovnb
roll
sarl
loop
loope
out
ret
in
fsqrt
repnz
hlt
fdivrp
lret
stc
out
int
jmp
int3
sti
jmp
lret
sti
ljmp
cli
call
dec
cli
out
stc
out
stc
out
stc
in
stc
in
ret
stc
in
ret
stc
jecxz
ret
inc
clc
loop
sar
mov
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
mov
scas
repz
scas
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
stos
icebp
sar
test
icebp
sar
cmpsb
icebp
iret
movsl
lock
movsl
lock
movsb
lock
mov
out
lret
mov
out
lret
out
leave
popf
out
pushf
in
fwait
in
lcall
xchg
in
xchg
in
ret
xchg
in
ret
xchg
in
sar
in
decl
ljmp
incl
jnp
fadds
add
push
add
add
add
add
das
scas
inc
jecxz
iret
mov
xchg
repnz
mov
mov
enter
rcl
sarl
sahf
fcmovnb
call
lock
repnz
enter
int3
cli
jmp
dec
sti
jmp
dec
cli
call
dec
stc
out
stc
out
stc
out
vpmulhw
stc
in
ret
stc
jecxz
ret
inc
clc
loop
sar
inc
mul
mov
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
scas
repz
scas
repnz
lods
repnz
lods
icebp
sar
stos
icebp
sar
stos
icebp
sar
test
icebp
sar
cmpsl
icebp
iret
cmpsl
icebp
into
cmpsb
lock
movsb
lock
mov
out
lret
mov
out
lret
out
leave
sahf
out
enter
pushf
in
lcall
cwtl
in
xchg
in
ret
xchg
jmp
mov
xchg
jmp
call
ficomps
incl
mov
incl
dec
add
add
pop
add
add
cmp
cmpsl
enter
rcll
rolb
sarb
loope
in
mov
lock
inc
repz
leave
mul
dec
sti
jmp
dec
cli
jmp
dec
stc
out
enter
stc
out
vpmulhw
stc
in
stc
in
ret
clc
jecxz
ret
inc
clc
loop
shl
mov
mul
mov
neg
mov
neg
mov
neg
mov
neg
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
mov
aad
scas
repnz
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
icebp
iret
test
into
cmpsb
icebp
into
movsl
lock
mov
out
int3
mov
out
lret
out
leave
lahf
out
enter
enter
fwait
in
lcall
xchg
out
call
ret
in
cmp
decl
lahf
and
add
mov
add
adc
add
add
mov
iret
setbe
xlat
and
les
lret
lret
rolb
sarl
out
jecxz
icebp
out
ret
inc
hlt
fdivrp
lret
dec
cli
jmp
dec
stc
out
enter
stc
out
stc
out
vpmulhw
vpmulhuw
clc
in
ret
clc
jecxz
ret
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
neg
mov
neg
mov
fsin
mov
fdivr
mov
fdivr
mov
fdivr
mov
mov
aad
mov
aad
scas
repnz
lods
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
icebp
iret
cmpsl
icebp
into
movsl
icebp
into
movsb
lock
movsb
out
int
mov
out
lret
out
leave
lahf
out
leave
sahf
out
enter
enter
xchg
jmp
mov
call
fcoml
incl
xchg
testb
add
add
add
daa
cmpsl
aaa
call
mov
mov
loop
int3
xchg
rcl
sarl
fbld
ljmp
ret
repnz
mul
dec
clc
out
lret
dec
stc
out
stc
out
stc
out
stc
in
vpmulhuw
clc
in
ret
clc
in
ret
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
neg
mov
mov
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
mov
aad
scas
repnz
scas
repnz
lods
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
sar
cmpsl
icebp
iret
cmpsb
icebp
iret
cmpsb
lock
movsl
out
int
movsb
out
int3
mov
out
lret
out
leave
lahf
out
leave
popf
in
xchg
out
lcall
in
jmp
cmpsl
cmp
xchg
or
add
add
add
das
lods
inc
in
xchg
int3
xchg
lock
rclb
iret
test
mov
fisttpl
loop
out
mov
lock
inc
repnz
enter
enter
enter
enter
stc
in
vpmulhuw
inc
clc
in
ret
clc
jecxz
ret
inc
mul
inc
mul
mov
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
xlat
mov
mov
mov
aad
scas
repnz
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
icebp
iret
cmpsl
icebp
iret
cmpsl
lock
movsl
out
int
movsb
out
int3
mov
out
lret
mov
call
sar
in
decl
fcoml
incl
jnp
fadds
add
push
add
add
add
add
mov
mov
cmp
mov
xchg
out
aam
out
enter
roll
sarl
call
ret
std
shl
inc
repz
mul
dec
stc
out
stc
in
stc
in
inc
clc
in
clc
in
ret
mul
inc
mul
inc
mul
mov
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
xlat
mov
mov
mov
mov
aad
scas
repnz
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
icebp
sar
cmpsl
lock
cmpsb
lock
movsb
out
int
mov
in
fwait
jmp
enter
enter
mov
incl
mov
incl
dec
add
add
pop
add
add
push
fwait
and
push
enter
jmp
rol
mov
lret
sbb
sarl
mov
loopne
fmulp
in
mov
out
aad
ret
inc
hlt
mul
inc
stc
in
stc
in
inc
clc
in
ret
mul
inc
mul
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
cmc
mov
fsin
mov
fdivr
mov
xlat
mov
xlat
mov
mov
mov
aad
scas
repnz
scas
repnz
lods
repnz
lods
repnz
stos
icebp
sar
stos
icebp
sar
test
lock
cmpsb
lock
movsl
out
int
sahf
jmp
jmp
out
incl
xchg
call
lahf
and
mov
add
adc
add
add
cmpsl
aaa
call
xchg
icebp
aad
mov
int
test
int
mov
fistl
jecxz
repnz
cld
mov
repnz
mul
std
mul
inc
clc
in
clc
in
ret
mul
inc
mul
inc
mul
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
mov
mov
aad
scas
repz
scas
repnz
lods
repnz
lods
repnz
stos
repnz
stos
repnz
test
lock
mov
jmp
jmp
in
decl
cltd
ljmp
ret
incw
xchg
testb
add
add
add
aaa
mov
loopne
frstor
mov
enter
rcl
aam
xlat
test
mov
jmp
jmp
aad
mov
repnz
cmc
loop
inc
clc
jecxz
mul
inc
mul
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
xlat
mov
mov
mov
aam
scas
repz
lods
repnz
lods
repnz
lods
repnz
stos
repnz
test
ljmp
movsl
out
lret
pushl
scas
incl
decl
xchg
adc
add
mov
add
or
add
add
mov
iret
push
xchg
adc
inc
mov
mov
mov
int
test
lret
mov
fsts
loope
out
shr
cld
mov
icebp
fsin
ret
repz
std
mul
inc
mul
inc
mul
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
mov
fsin
mov
fdivr
mov
fdivr
mov
xlat
mov
xlat
mov
mov
aad
scas
repz
scas
repz
lods
repz
lods
repnz
cmpsb
in
jmp
out
int
xchg
in
ret
decl
cwtl
jmp
add
add
add
add
add
add
add
and
jne
sub
lret
ffreep
int3
jnp
mov
fistpl
call
aad
mov
icebp
ret
hlt
loopne
ret
cmc
loop
ret
mul
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
cmc
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
mov
aad
mov
aam
scas
repz
lods
lock
cmpsl
jmp
ljmp
out
into
jmp
cmpsl
incl
xchg
add
add
add
pop
add
add
sub
inc
in
aam
int3
mov
int
test
mov
fdivrl
test
mov
out
mov
out
sar
mov
repnz
hlt
loopne
ret
inc
mul
inc
mul
inc
mul
mov
neg
mov
neg
mov
neg
mov
cmc
mov
hlt
fsin
mov
fsin
mov
fdivr
mov
xlat
mov
mov
aad
mov
aad
test
out
int
stos
out
sar
xchg
mov
call
mov
add
add
add
mov
adc
mov
pusha
add
adc
xor
dec
loopne
loop
les
jecxz
enter
sarl
mov
xchg
fld
in
out
hlt
mov
out
sar
mov
repnz
ret
std
shl
inc
mul
inc
mul
mov
neg
mov
neg
mov
cmc
mov
cmc
mov
fsin
mov
fsin
mov
fsin
mov
fdivr
mov
xlat
scas
out
into
ljmp
lock
cmpsl
out
int
push
loope
pushl
lds
add
add
add
add
mov
fists
pop
icebp
dec
je
jl
mov
ret
jl
mov
sarl
mov
mov
jmp
sar
mov
icebp
ret
std
shl
inc
mul
mov
neg
mov
neg
mov
cmc
fdivr
mov
cmc
mov
hlt
mov
fsin
mov
lods
in
lret
lock
scas
lock
jp
mov
dec
fistl
incl
pusha
add
add
add
and
or
jg
ret
lds
mov
aad
fld
in
loope
lock
out
sar
mov
repnz
shl
std
shl
mov
neg
mov
neg
mov
cmc
mov
cmc
mov
out
into
pushl
icebp
aam
lahf
out
leave
call
lahf
ljmp
mov
incl
jnp
fadds
add
push
add
add
add
add
xor
popf
enter
sarb
jne
mov
fistpl
call
sar
mov
lock
inc
icebp
fdivr
shl
std
mov
neg
mov
neg
mov
cmc
mov
xlat
pushl
icebp
aad
mov
aad
insl
in
decl
mov
add
add
add
pop
add
add
mov
iret
or
mov
stos
les
fistpll
mov
mov
out
mov
in
sar
mov
icebp
fdivr
mov
repnz
mov
neg
mov
out
into
pushl
icebp
call
loope
call
mov
add
add
add
mov
and
mov
popl
mov
fistps
mov
jo
jne
mov
les
int3
je
mov
xchg
fcmovb
in
call
sar
mov
lock
mov
repnz
mov
out
sar
mov
xlat
pushl
jecxz
cmp
xchg
testb
add
add
add
sub
jge
jnp
shlb
jo
mov
test
mov
in
mov
in
sar
mov
out
sar
mov
repz
test
mov
decl
xchg
adc
add
mov
add
or
add
add
mov
mov
das
mov
loopne
fildll
shll
enter
rorl
in
repnz
repnz
test
jecxz
ljmp
mov
incl
jnp
fadds
add
push
add
add
add
add
mov
fists
lcall
jo
mov
jbe
mov
lret
mov
out
pushl
mov
push
fcoms
incl
dec
add
add
add
add
pop
cmpsb
xor
dec
lret
js
ret
fcompl
lcall
mov
add
add
add
mov
push
add
or
and
mov
incl
mov
icebp
add
pop
add
add
mov
adc
mov
jo
mov
mov
push
jg
jmp
pop
jmp
pop
inc
add
inc
add
incl
incl
incl
add
incl
add
jg
add
incb
add
pop
loopne
add
incb
add
pop
addb
pop
cld
add
add
add
add
cld
jg
clc
pop
clc
ud0
push
add
push
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incb
add
incb
add
cld
add
add
cld
add
add
clc
add
add
clc
add
add
push
add
add
push
add
add
jmp
add
add
jmp
add
add
inc
add
add
inc
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incb
add
add
incb
add
add
cld
pop
cld
ud0
clc
ud0
clc
pop
push
aas
push
aas
jmp
aas
jmp
aas
inc
jg
inc
jg
incl
jg
incl
jg
incl
incl
incb
add
add
incb
add
add
cld
add
cld
add
clc
pop
clc
pop
push
ud0
lock
add
pop
jmp
pop
jmp
aas
inc
jg
inc
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incb
add
add
incb
add
add
cld
aas
cld
jg
clc
clc
push
add
add
push
add
add
jmp
add
add
jmp
add
add
inc
add
add
inc
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
jmp
add
add
jmp
add
add
jmp
add
add
jmp
add
add
jmp
add
pop
push
add
ud0
incb
add
inc
add
clc
add
incb
aas
inc
jg
clc
jg
incb
add
add
add
add
inc
add
add
add
add
clc
add
add
add
add
incl
add
add
add
inc
add
add
add
clc
add
add
add
incl
add
add
pop
inc
add
add
ud0
clc
add
add
pop
incl
add
add
jmp
add
add
clc
add
add
incl
add
jg
jmp
add
clc
add
incl
add
jmp
add
cld
add
decl
decl
adc
xor
aaa
cmp
hlt
xlat
daa
adc
mov
stos
cmpsb
xor
fwait
jmp
mov
dec
rclb
das
mov
add
xchg
mov
movsb
cmp
test
sub
inc
xorl
push
cmp
cmpsb
sub
xchg
sbb
push
repnz
add
mov
nop
mov
jl
xor
dec
add
lret
arpl
xchg
push
sub
inc
lcall
jg
popa
imul
sbb
push
mov
stc
cmp
adc
mov
loopne
push
jo
sub
inc
pop
mov
xor
shll
js
and
add
and
test
push
rcrl
jmp
adc
adc
pop
pop
push
pop
inc
jle
icebp
push
jmp
and
or
rclb
addl
sub
sbb
popa
or
cmp
stos
cmc
scas
int
jnp
xor
sub
and
int
sahf
out
sub
loop
es
sub
aad
test
enter
test
cwtl
ss
xor
test
cmp
es
les
cltd
adc
mov
or
shll
push
lcall
mov
adc
or
sahf
outsl
fs
repz
or
mov
jge,pt
addr16
mov
mov
xor
xor
jge
cmp
sti
mov
ret
or
out
mov
add
adc
jp
mov
imul
adc
xchg
ret
adcl
xor
jg
shll
repz
mov
mov
popf
sbb
pop
out
cmp
dec
xchg
jge
lock
xlat
xchg
testl
xchg
mov
ljmp
dec
ja
adcl
sub
in
xor
push
imul
mov
popa
sub
hlt
mov
jo
mov
mov
rcll
ret
gs
inc
xchg
xor
jno
mov
pop
push
out
and
cld
mov
push
lret
push
movsb
dec
xchg
in
cmp
pop
cltd
test
fs
cmc
cld
pop
iret
addl
dec
push
fsubp
pop
test
push
jle
jg
movsl
sbb
push
lea
imul
adc
push
out
ret
in
cmpsb
and
fistps
inc
fcoml
imul
dec
pushf
push
adcl
push
in
or
enter
mov
add
hlt
or
cmp
lahf
push
lret
punpckldq
pop
das
shr
imul
push
and
push
xor
pop
cwtl
sub
stos
and
gs
or
lret
icebp
push
mov
mov
sub
in
pop
push
xchg
scas
mov
inc
data16
fwait
les
mov
or
mov
and
loopne
push
sub
je
loop
adc
jne
cmc
push
jmp
out
cmc
dec
ficoms
xor
dec
inc
fidivl
inc
cld
loope
stos
rclb
or
xchg
add
mov
js
push
popf
push
in
movsb
push
or
test
je
cmp
add
aaa
fmulp
lcall
aas
xchg
xor
movsl
arpl
out
jl
jp
dec
pop
mov
stos
into
mov
pop
movsl
jbe
sub
lahf
test
xor
adc
ret
cmp
pop
xor
or
scas
sbb
pop
pop
cltd
rorl
cmc
shrl
jnp
pop
inc
and
cmp
push
sub
arpl
dec
test
and
adc
cli
ss
in
jb
out
xchg
aad
jne
cld
xor
lcall
xchg
mov
xchg
sbb
popa
xchg
lcall
test
fxch
stos
sub
test
mov
pop
cmp
sbb
push
fs
and
into
pop
aaa
inc
fnstenv
fs
popa
leave
inc
sub
sbb
movsb
rcll
sub
pop
movsb
iret
xor
roll
mov
pop
xor
fs
dec
or
loope
adc
jp
mov
add
cmc
jmp
mov
xlat
fisubrs
in
ret
xlat
call
fwait
add
or
sub
pop
daa
add
mov
mov
pop
scas
mov
cmpsl
xchg
negl
in
scas
xchg
icebp
stos
jmp
xchg
call
jnp
push
cmc
adc
shll
aad
xorb
jno
xchg
out
aad
pop
inc
idivl
sbb
out
add
sbb
enter
mov
jnp
leave
inc
lds
lds
addb
mov
inc
fstps
icebp
cs
jo
mov
mov
mov
outsb
dec
dec
sbb
mov
fdivrs
ja
add
in
or
jl
mov
mov
adc
sub
lret
push
dec
pop
adc
sub
xor
mov
pop
subl
out
xchg
sub
and
add
das
sub
add
jbe
mov
shlb
adc
jg
adc
adc
mov
mov
lock
aam
fimuls
mov
push
lahf
inc
in
insb
push
jge
xchg
ds
sbb
mov
mov
fsubrs
jbe
daa
popf
adcb
pop
call
stos
pusha
pop
mov
out
xchg
push
mov
inc
gs
ja
imul
outsl
fsubrl
add
pusha
push
push
pop
fs
cli
into
fiaddl
fadd
push
adc
jl
mov
and
lret
sbb
les
int
sbb
adc
rol
leave
xchg
orb
pop
adc
adc
mov
dec
xor
dec
mov
add
dec
push
imul
and
shlb
jb
pop
sahf
adc
mov
mov
mov
pushf
in
push
rorl
pop
xchg
mov
adc
movsl
xchg
inc
mov
or
push
jg
lahf
sbb
or
insl
cli
lods
je
movsb
pop
sbb
dec
add
xchg
fiaddl
test
push
aas
pop
cmc
xchg
fistl
pop
sub
push
mov
lret
loop
mov
or
xchg
push
in
ja
dec
dec
xor
mov
pop
jmp
insl
popf
bound
cli
pop
sub
test
jecxz
insb
movsb
push
adc
fcmovnb
jecxz
lods
mov
js
inc
mov
pushf
out
mov
pop
test
xchg
cmp
push
stos
fwait
push
mov
mov
pop
mov
scas
movsl
add
cmp
cmp
mov
lret
cmp
or
lds
xchg
inc
cmp
imul
mov
dec
jne
roll
shr
int3
ret
arpl
into
sub
push
mov
mov
out
cltd
xchg
adc
lds
movl
jae
mov
add
inc
pop
cmc
push
into
inc
adc
or
icebp
sbb
pushf
mov
mov
arpl
inc
sub
cmp
inc
pop
inc
xchg
or
loop
xchg
jne
loopne
jge
dec
ja
pop
sub
ret
cmpl
xchg
cmp
xchg
pop
js
adc
or
pop
add
test
out
or
inc
lcall
sub
clc
and
or
roll
in
pop
js
dec
test
ja
adc
dec
out
xor
and
and
pop
jle
lock
jno
jmp
adc
push
fnstenv
out
sub
inc
dec
mov
fwait
xor
or
pusha
xor
fcmovne
fwait
clc
jb
mov
std
push
add
negl
xchg
mov
cs
mov
loop
fisubs
loope
jbe
cli
stos
pop
ret
push
aaa
ja
and
sti
lods
movb
lahf
push
rcrl
jno
stc
sbb
divb
pusha
jle
les
mov
mov
in
push
dec
jmp
insl
lods
enter
arpl
jge
push
pop
insb
add
push
dec
outsb
or
jns
xchg
fwait
and
lods
outsl
xchg
jo
int3
inc
pushf
cmp
sub
bound
scas
xor
test
imul
js
xor
imul
xchg
and
insl
mov
xchg
test
lock
sbbb
cs
pop
movsb
out
dec
sbb
lock
xchg
loopne
out
lahf
mov
inc
xchg
cmpsb
iret
arpl
addl
call
xchg
test
jns
jge
and
dec
mov
fnsave
push
repz
push
sub
pop
ffree
mov
mov
lea
out
outsb
pop
cmp
enter
imul
inc
or
rorl
sub
xor
mov
or
cmp
pop
mov
inc
add
mov
xor
rcrb
cmp
inc
mov
out
test
mov
xor
mov
outsl
cmpsl
andl
mov
sbb
icebp
inc
sbb
insl
bound
les
inc
push
xor
sbb
fiaddl
xor
loop
xor
xchg
shr
add
pop
inc
btc
push
loop
pop
repz
pop
insb
inc
mov
and
push
mov
xor
jb
adc
sahf
ds
das
dec
sbb
pop
inc
or
ljmp
inc
mov
ljmp
fdivrl
xor
outsb
mov
push
or
js
fwait
je
or
mov
shll
insb
add
xchg
ljmp
rol
iret
xor
push
mov
jecxz
movsl
das
icebp
push
test
sub
int
or
and
aad
sbb
rclb
dec
jno
pop
pop
jb
js
in
adc
imul
adc
popa
das
adc
jns
add
js
inc
push
xor
pop
cmp
mov
sbb
xchg
jns
push
ret
ret
repz
addb
stos
sub
lret
gs
cli
sub
adc
jne
mov
repnz
int3
leave
pop
sub
dec
rolb
mov
repz
lret
cld
insb
mov
xchg
test
fimuls
dec
mov
dec
loop
adc
pushf
insl
jo
dec
pop
sbb
fwait
jae
jl
es
add
stos
cltd
pushf
ljmp
and
cwtl
pop
lds
mov
mov
popa
gs
lds
out
push
sub
dec
xchg
out
int3
jae
pushl
pop
movsb
and
pushf
push
or
sbb
out
insl
jecxz
ja
negl
insb
push
iret
add
stos
inc
mov
sti
xchg
cmpb
sahf
out
cmc
inc
xchg
cmpl
xchg
mov
mov
mov
dec
mov
xor
jo
into
sbb
cwtl
push
jno
std
or
lock
xchg
negl
jne
js
jb
cld
push
sbb
inc
xor
sbb
sub
lock
jne
pop
cltd
dec
adc
mov
in
mov
inc
lret
pop
shll
dec
dec
dec
sbb
sbb
shlb
pushl
xchg
out
lds
jns
imul
lahf
mov
repz
into
jg
dec
sti
mov
movsb
sub
subl
lret
div
inc
out
je
gs
outsl
sbb
inc
dec
icebp
sti
adc
rcrl
ds
and
mov
lret
push
fbld
dec
adc
push
sbb
pop
mov
daa
jbe
or
cwtl
lahf
push
mov
pop
inc
lret
outsb
cmp
xchg
loopne
scas
mov
mov
mov
push
pop
sub
jae
mov
pop
pop
push
subl
or
push
adc
xchg
icebp
stc
outsl
rorb
xlat
mov
lock
sub
inc
add
or
ret
movsb
scas
inc
adc
push
sbb
fadds
xchg
sub
push
mov
sub
outsl
fistpl
fidivs
stc
sub
mov
sbb
in
es
jge
faddl
hlt
and
mov
xchg
scas
push
mov
dec
inc
and
dec
sbb
mov
xorb
pop
and
out
or
sub
stos
stos
sbb
addr16
sbb
and
data16
push
jmp
adc
stos
inc
mov
or
idiv
mov
sti
mov
jmp
sbb
es
bound
pop
cmp
lods
adc
sbb
mov
fistl
xor
dec
rol
mov
xlat
jecxz
push
hlt
mov
bound
sbb
push
dec
andb
aam
es
insb
or
rclb
pop
out
inc
imul
cmpb
data16
div
mov
iret
add
pop
mov
mov
mov
aad
mov
inc
cmc
push
icebp
or
stos
rorl
jecxz
push
add
mov
fimuls
insb
cmpl
sub
mov
xor
jnp
loope
jecxz,pt
push
lods
mov
mov
dec
sbb
aaa
mov
lret
mov
pushf
mov
cmp
mov
adc
or
pop
sub
xor
mov
fs
outsb
dec
push
or
jl
aad
mov
and
xor
jecxz
xchg
pop
sub
fwait
lret
jg
stos
cmpsl
cmp
enter
sti
mov
xor
dec
movsb
es
fisubs
add
xchg
adc
mov
adc
jge
enter
fnstenv
mov
outsl
and
repnz
subb
jmp
mov
repz
mov
push
icebp
loope
idiv
pop
cwtl
xchg
fiadds
mov
xlat
cmp
insl
jb
and
aad
aam
add
sbb
add
mov
xchg
jmp
lcall
adc
jns
in
xor
jge
jnp
adc
int
sbb
inc
sti
push
or
cmp
lods
pop
cli
xchg
xchg
gs
mov
inc
in
jae
jg
imul
lcall
ds
push
popf
jmp
sbb
out
or
mov
or
shlb
mov
iret
sub
imul
movsb
xchg
push
mov
xchg
add
hlt
xor
insl
cmp
rorb
repz
sti
lods
in
xor
jecxz
aad
cld
aas
rcrl
dec
xor
push
mov
add
clc
movsb
jb
xchg
sti
jb
push
pop
jns
fnstsw
xchg
adc
pop
add
js
mov
aaa
adc
dec
jmp
cmp
in
leave
push
test
je
push
mov
or
in
mov
mov
arpl
pop
ljmp
cmpl
sbb
add
push
jge
ss
adc
cltd
scas
and
mov
push
lods
ljmp
imul
pop
hlt
lods
xchg
fs
dec
cmp
in
shlb
mov
lret
or
push
pop
xor
sub
sub
add
je
test
cmp
xchg
in
push
and
in
pop
cmpsb
mov
pop
gs
inc
imul
cmpsb
lret
mov
int3
jle
incl
je
es
popf
mov
or
add
fbld
adc
or
cmc
mov
push
pop
insl
xchg
xor
sub
sub
adc
fwait
cmp
fistps
pop
notl
xchg
flds
mov
mov
mov
jmp
xchg
mov
rcl
fwait
adc
cltd
sub
cmp
cmc
dec
jge,pt
sar
xchg
lods
rcrl
mov
jge
je
outsl
aam
repnz
jg
pop
xchg
popa
and
xor
jb
add
xor
test
ret
rol
insb
mov
jno
mov
scas
lds
mov
fs
nop
adc
imulb
insl
push
push
mov
push
mov
inc
lods
arpl
fimuls
in
jbe
pop
jb
jns
pop
and
mov
cltd
xor
lods
xchg
push
mov
hlt
cmp
or
lods
mov
mov
sub
outsl
pop
testl
test
repnz
scas
push
imul
and
test
cmp
cs
or
jno
bound
imul
int
cmpsb
bound
push
mov
jb,pt
lods
movl
jmp
shlb
xchg
cwtl
pop
or
push
lea
scas
xor
mov
lock
test
scas
fcoms
stos
xchg
clc
push
adc
dec
xchg
adc
loop
ja
rolb
gs
test
lret
jno
push
in
fidivl
or
xchg
cmp
faddp
dec
nop
pop
jne
cmp
loop
pushf
inc
pusha
and
sub
pop
loope
lret
imul
xchg
or
loope
jecxz
aas
adcb
insl
sbb
jmp
and
loopne
push
xchg
xor
cmpl
movsb
xchg
push
mov
push
and
push
pop
xchg
mov
mov
fcoml
mov
push
insl
cmp
dec
xchg
or
cmc
inc
xchg
sbb
pop
jp
mov
xor
mov
aas
test
push
adc
lea
dec
pop
outsl
sti
dec
shr
aad
rcl
ljmp
popf
movb
or
sbb
mov
cltd
xor
addb
push
in
gs
cmpsb
fstpl
mov
mov
sub
das
cmp
shr
addr16
and
add
sti
lret
sub
push
jle
notb
loope
mov
jl
sti
gs
inc
sub
cltd
addr16
loop
sbb
in
mov
mov
pop
cltd
mov
inc
cmp
leave
cmpb
sub
js
dec
sbb
daa
xor
sub
push
pushf
movsl
lods
adc
into
mov
dec
xor
in
or
test
lcall
cs
pop
mov
aam
push
add
xor
adc
fcompl
mov
adc
test
lods
movsl
push
lea
stc
in
cwtl
xor
xor
inc
jp
push
mov
in
inc
sub
rolb
mov
fwait
jo
and
mov
mov
stc
insb
addr16
fistpll
jnp
leave
add
pusha
aaa
pop
cmp
jb
dec
add
insb
in
stc
xlat
cli
enter
cmc
jl
jnp
cmp
pop
mov
repnz
or
or
cli
mov
inc
fs
and
leave
lret
jp
mov
jbe
mov
pushf
int3
je
dec
mov
xchg
jbe
or
jmp
xchg
dec
cld
imul
insb
sub
inc
mov
sbb
clc
fisubl
imul
pop
or
jns
jmp
pop
mov
and
rcll
rcrb
arpl
imul
or
fistpll
data16
xor
movsb
add
lock
lods
add
in
out
push
or
xor
in
cmpsl
jbe
add
enter
movsb
dec
test
jecxz
pop
clc
loop
stos
jae
test
rcr
sub
inc
and
fldenv
sbb
inc
pop
vpmaxsw
jmp
cmc
or
dec
dec
and
xchg
ss
inc
inc
xchg
xor
ret
cwtl
bound
movlps
cmpsb
push
add
mov
sbb
mov
dec
jns
je
mov
inc
test
jl
stc
pop
or
sub
push
ja
lret
and
xor
cmp
into
add
dec
enter
insb
push
lods
mov
pop
dec
inc
test
push
popf
push
jb
dec
fstps
xchg
scas
fistpll
and
jmp
cmpsl
popa
push
sbb
popf
arpl
jmp
adc
aad
or
add
scas
jmp
adc
inc
mov
bound
push
jl
ret
mov
popa
dec
repnz
mov
mov
inc
cmp
mov
cmc
stc
movl
add
ds
mov
shr
clc
out
repz
ljmp
out
insl
cmp
add
ja
sub
or
mov
add
fsubrp
aam
jecxz
mov
or
call
and
xchg
mov
mov
shll
in
mov
gs
test
mov
int
ljmp
mov
mov
jmp
mov
stos
loope
mov
pop
orl
cli
pop
mov
ret
and
mov
fnsave
std
fisubl
inc
fdivrs
xchg
mov
mov
mov
xchg
scas
or
add
fnstenv
fcomip
jmp
mov
push
cmp
and
out
lock
or
jle
imul
mov
cmpsb
jo
in
mov
xor
jecxz
inc
lcall
lea
das
cmp
rcrb
dec
xrstors
inc
inc
and
jge
push
inc
outsl
jnp
xor
mov
xor
into
shrl
aad
std
hlt
out
cmpsb
rolb
inc
sbb
jp
jno
jle
pop
push
mov
dec
and
loop
adc
scas
mov
add
ret
or
inc
scas
imul
and
lcall
ljmp
dec
leave
gs
fcoml
cmp
into
leave
loop
sub
fdivrp
push
and
daa
in
cwtl
dec
xchg
jp
jne
les
movsb
jp
mov
dec
cmpsl
scas
jl
pushf
dec
mov
cmp
jp
negb
jae
add
aas
mov
js
loop
arpl
mov
cltd
shl
mov
sub
subb
lock
scas
js
cs
pop
fcmovb
sbb
imul
adc
dec
testb
imul
cmp
pop
cmpsb
push
cmp
mov
aas
and
bound
cmp
cmp
xor
lcall
sub
cltd
push
mull
adc
jp
test
add
mov
je
cmp
aaa
sbb
ret
adc
pop
movsl
or
mov
cmp
rclb
jo
xor
jne
mov
das
xlat
cmpsb
adc
std
jecxz
outsl
mov
das
mov
bnd
pop
lret
loopne
and
dec
jge
mov
outsb
and
mov
mov
push
std
push
lea
sbb
cld
outsb
out
ss
sub
inc
push
jns
sbb
lods
pop
test
push
pop
xchg
mov
test
popf
clc
mov
xor
adc
in
xor
xor
fisubl
lods
or
pop
jbe
fisttpll
cmpsl
mov
push
testb
mov
mov
dec
sub
fmull
push
jnp
push
xor
xchg
sti
jb
das
mov
xchg
fnstenv
pop
lcall
jge
js
loope
addb
or
ss
fists
jbe
lcall
sub
stos
lock
shlb
fldt
orl
mov
adc
push
pop
sbb
xchg
aam
rcrb
je
fdivrp
in
push
and
jne
ds
or
std
push
div
divl
push
sub
fsubl
cmp
xor
jle
inc
jae
lods
aas
ja
pop
dec
dec
pop
sub
pop
shll
xor
mov
add
loop
sbb
push
push
into
test
mov
mov
mov
and
push
out
leave
inc
adc
mov
movsl
inc
cmp
stc
add
iret
mov
jmp
xchg
mov
push
sahf
cwtl
in
or
and
pop
fisubl
into
jbe
leave
inc
sub
iret
add
inc
jo
add
jmp
push
lret
xchg
mov
frstor
fnstsw
or
jl
dec
dec
das
or
rorl
or
popf
inc
lret
mov
daa
flds
and
cmp
add
dec
popf
test
xchg
inc
loopne
jbe
leave
sub
jle
inc
imul
insl
inc
sub
push
out
jne
sbb
fnop
pop
xchg
mov
sub
int3
jno
outsl
ret
add
mov
test
lock
push
xchg
dec
cmp
jp
inc
xchg
dec
and
data16
fldl
mov
insl
cmp
mov
push
mov
dec
mov
out
cmp
cmp
bound
cmp
add
ljmp
or
and
es
insl
pushf
or
mov
testl
popf
sub
jnp
in
loop
fsubrp
inc
push
sbb
sbb
pop
cmpsl
sbb
inc
addb
cmpsb
pop
push
cmp
insb
roll
add
cli
pop
out
inc
cwtl
jae
movsb
cld
cmpsl
mov
js
xchg
imul
xchg
test
cmp
sub
lret
pop
and
movsl
push
mov
push
sub
cmp
shl
xchg
mov
scas
xor
test
subl
sub
lret
dec
jae
sbb
dec
inc
rorl
pop
cwtl
adc
js
addb
imul
out
scas
shrb
int3
push
stos
jb
bound
sahf
lcall
or
sarl
movsb
gs
and
pop
push
sub
rcrb
push
cmp
mov
mov
rcrb
call
fbstp
decb
push
shll
les
mov
cld
push
ljmp
mov
mov
dec
sti
cmp
test
mov
imul
sbb
pop
jecxz
pop
sub
or
lods
jno
pmaxub
jg
xchg
mov
lcall
out
mov
cs
movsb
and
outsb
outsb
push
ljmp
mov
das
xchg
sub
and
xor
cli
adc
and
mov
add
insb
inc
xchg
cmp
insl
pushf
nop
and
adc
addl
cmp
mov
aad
out
mov
and
pop
push
cmpsb
popf
inc
mov
repnz
dec
pushf
cs
loope
sbb
xor
push
es
sahf
arpl
mov
pusha
push
sbb
pop
fstpt
sub
jmp
dec
movsl
or
xor
std
scas
ret
fisubrs
mov
repz
jmp
and
add
out
mov
mov
sbb
pop
cmpsb
dec
lcall
lahf
out
pop
mov
push
dec
or
outsl
pop
cmp
mov
lds
lods
stos
insb
ret
adc
ss
mov
push
enter
and
out
or
sarl
dec
out
icebp
mov
push
push
push
int
sbb
cwtl
popa
stos
jb
int
fisttps
imul
dec
pop
mov
or
mov
stc
sub
lods
in
dec
cld
imul
clc
mov
push
std
xor
mov
pop
jge
lret
test
popa
bswap
sub
add
inc
mov
push
js
lea
inc
mov
clc
lret
jp
in
fprem1
addr16
adc
gs
xor
fistpl
mov
mov
mov
cs
std
inc
jp
pop
jge
lods
push
mov
mov
mov
or
mov
cmp
mov
mov
lds
repz
in
fcmove
mov
push
mov
dec
mov
pop
outsb
cmp
inc
or
sarl
mov
sbb
aad
ja
xor
rclb
mov
dec
je
adc
lahf
add
scas
out
idivl
js
mov
jmp
pop
test
loop
push
cmp
fistps
mov
in
or
iret
sub
or
mov
sub
aas
dec
mov
mov
jle
jge
xlat
icebp
ja
sarb
adcl
enter
cmpsl
xor
xchg
mov
push
fcmovne
arpl
lcall
inc
ds
sbb
js
adc
dec
mov
pop
ljmp
push
dec
mov
sahf
lods
mov
lds
xor
pop
add
ds
sahf
or
lds
add
pop
jg
aaa
clc
cmc
mov
lahf
repnz
add
enter
out
negb
xchg
popf
adc
nop
pop
mov
dec
xor
loop
mov
stc
in
adc
adc
mov
inc
cmp
lcall
ficomps
inc
and
rorb
push
pusha
sbb
mov
cmp
sub
and
stos
add
dec
or
xor
leave
insb
arpl
fldt
sub
dec
jmp
jg
call
int
pop
cmp
add
outsb
sbb
pusha
aas
inc
imul
imul
pop
xor
or
push
inc
sub
xchg
in
pop
cli
mov
mov
pop
adc
cltd
rclb
sub
push
mov
xor
add
sub
xchg
popa
sbb
icebp
inc
pop
jb
test
xchg
mov
push
fildll
das
xor
push
dec
xor
fst
test
mov
push
sahf
data16
sbb
add
insl
push
cli
jp
cwtl
dec
dec
sub
cli
inc
mov
and
sahf
jmp
addr16
inc
jo
fadds
subl
adc
fimull
push
shll
loopne
jnp
and
jns
outsb
subl
jp
mov
adc
xor
push
sbb
pop
jbe
loope
div
mov
cld
mov
rcrl
jae
ja
cli
add
sahf
ret
inc
mov
movsl
das
in
lahf
je
test
insl
push
push
lret
cmp
mov
sub
xor
lahf
out
and
pop
or
repz
push
mov
mov
mov
data16
jg
mov
mov
out
jp
sub
jbe
xchg
mov
sbb
icebp
add
xor
subb
das
adc
and
xor
pop
out
les
stos
stc
fmul
xor
in
rorb
push
test
shll
lahf
xor
sahf
ds
mov
enter
lods
repnz
inc
pushf
dec
adcb
in
push
inc
scas
enter
xor
push
outsb
ljmp
movsb
shrb
scas
and
xchg
jns
mov
sub
aam
mov
sub
push
loopne
inc
cmp
sub
scas
in
mov
dec
popa
adc
cmp
xchg
pop
addl
fistps
dec
sbb
push
rcrl
lahf
lea
and
dec
mov
stc
call
lcall
push
mov
and
loopne
ds
cmpsb
xor
out
mov
sbb
cwtl
add
addb
mov
sahf
stos
outsb
shll
repnz
mov
popf
fs
xchg
inc
cmp
orb
push
mov
sbb
stc
lcall
mov
sarb
jb
cmp
ja
lret
hlt
push
mov
inc
xchg
das
outsb
fdivp
movsl
cs
cmc
cmp
add
or
pop
and
push
rcl
cmpsb
mov
mov
dec
enter
testl
cmpsl
ret
mov
test
pop
jge
add
in
push
mov
les
cmp
popf
sahf
sbb
cmpsl
and
cli
push
and
lret
out
mov
xchg
adc
roll
icebp
or
fdivr
pop
xchg
cmc
fwait
stos
mov
jl
sub
inc
addr16
mov
cmp
dec
mov
andl
push
push
cmp
adc
dec
repz
out
cmp
mov
and
and
lea
jge
mov
xor
pop
mov
movl
dec
cmp
hlt
add
mov
ret
or
addr16
cmpsb
mov
dec
int
and
inc
dec
inc
lcall
sarl
lret
pop
inc
xor
aad
adc
ljmp
dec
cmc
iret
xor
cmpb
add
ja
sub
mov
cwtl
mov
mov
clc
adc
jno
icebp
rorb
pop
stos
jle
pop
adc
mov
or
call
push
mov
xor
dec
iret
push
xor
jmp
pop
popa
adc
push
aas
add
or
fisubrl
inc
inc
shr
sbbb
orb
lahf
test
or
jg
and
mov
mov
xor
pop
dec
hlt
mov
lea
test
mov
push
jmp
mov
xchg
cmc
call
cmp
jge
loop
addr16
xchg
dec
adc
imul
pop
pop
popa
inc
hlt
mov
and
pshufw
or
imul
pop
lods
lock
xlat
xchg
arpl
fisttpl
lcall
roll
pop
inc
and
push
int
inc
popa
cli
orb
stos
mov
mov
dec
cwtl
aas
cld
test
add
sub
stc
mov
dec
lock
jns
inc
push
dec
adc
fwait
int
jo
pop
movsb
and
movsl
adc
adc
mov
pop
dec
rolb
and
adc
cli
addr16
adc
test
xchg
dec
repz
aas
pop
adc
inc
popa
pop
pop
dec
xchg
or
mov
scas
test
push
sub
rcll
mov
jns
inc
hlt
mov
xchg
mov
ja
das
imul
in
js
xchg
cltd
arpl
fisubs
scas
jg
or
sbb
pusha
jecxz
mov
lods
dec
aas
repnz
mov
pop
pop
hlt
dec
push
rclb
cmpsl
xchg
dec
mov
push
or
mov
jbe
lds
xor
lods
cmpsl
sbb
mov
daa
ss
std
lds
xor
jle
leave
aam
pop
mov
shl
sub
jl
cmp
sub
fwait
movsb
icebp
mov
pop
mov
push
aad
adc
bound
stos
xchg
std
mov
mov
std
mov
xor
test
cltd
jo
mov
les
jbe
loope
in
push
sbb
xor
sub
push
sbb
clc
clc
ds
pop
dec
xor
mov
cli
mov
fstpt
dec
xorb
aas
pop
pop
mov
dec
sbb
scas
outsl
insb
fisubrs
inc
out
jge
cmpsl
xlat
inc
xchg
xchg
scas
mov
fwait
cli
mov
test
xchg
cmpsl
jp
dec
inc
icebp
je
aad
mov
dec
popf
inc
mov
std
lcall
jne
lods
add
sbb
push
jmp
mov
or
xchg
pop
pop
dec
lea
mov
inc
xchg
sub
mov
aam
jg
dec
pop
mov
add
mov
cli
popa
clc
jbe
loopne
addl
push
xchg
and
js
xchg
arpl
add
push
shrl
and
test
sub
out
and
mov
stos
xchg
pop
shlb
es
sub
andb
fadd
fstps
and
mov
push
or
push
pop
js
dec
jge
jbe
xchg
in
scas
push
outsb
mov
lret
cmpsb
decb
cld
pop
adcl
iret
mov
xor
push
cmp
pop
push
rclb
fadds
jp
lock
sbb
cld
pop
and
sets
mov
push
popa
push
lods
or
nop
mov
call
orb
sbb
xchg
scas
and
imul
insb
push
lahf
sbb
stc
pop
popf
fnstcw
lret
and
aaa
pop
mov
pop
out
mov
sbb
cmpsb
adc
lock
mov
test
repnz
add
lea
cli
xchg
xorl
outsb
in
cmp
popa
or
dec
dec
cmp
dec
jmp
xchg
cmpb
cmp
mov
test
push
inc
xchg
mov
adc
in
call
adcb
std
bound
jecxz
push
xchg
sbb
sub
int3
testl
xor
dec
or
out
into
lret
arpl
lcall
ja,pt
sti
daa
inc
fisubl
dec
adc
sbb
push
add
dec
pushf
push
roll
xchg
popf
cltd
in
and
sub
and
dec
fst
std
add
out
sub
mov
adc
movsb
xorb
sbb
xchg
into
push
das
mov
or
dec
add
fldl
shlb
iret
sbb
pop
ljmp
or
push
sbb
pushf
stc
mov
xor
gs
mov
lock
mov
mov
stos
lcall
jecxz
movsb
and
push
lds
std
scas
jne
pop
in
je
jnp
and
ja
push
clc
push
bound
cmp
popa
xchg
movsl
xchg
mov
lcall
mov
xor
mov
lret
insl
ljmp
imul
js
loop
ret
insb
pop
shr
xchg
lods
into
lcall
xchg
mov
xor
inc
aam
sbb
push
nop
loop
sbb
inc
jnp
jle
jmp
iret
mov
inc
xchg
cwtl
mov
push
lods
dec
mov
cmp
inc
pop
es
fs
mov
popf
lea
pop
jo
sub
push
mov
push
push
mov
outsl
mov
shll
out
into
addr16
and
push
insl
bnd
mov
inc
mov
dec
int
push
loopne
xchg
hlt
ja
outsl
or
mov
pop
jns
mov
flds
in
lea
or
lock
in
out
mov
or
sahf
popa
jge
rorb
sbb
movsb
stos
jbe
mulb
jbe
cmp
cli
sub
adc
bound
pushf
push
xchg
stos
loop
repnz
inc
xchg
aas
and
mov
mov
jmp
shrl
cs
popf
dec
repnz
sbb
xchg
xchg
sub
arpl
push
out
and
xchg
jnp
sub
lcall
aam
imul
lods
aaa
insl
fs
mov
pop
mov
sbb
xor
rorb
or
pop
js
sub
mov
in
adc
or
or
scas
mov
mov
xor
notb
outsl
cmpsb
xchg
rorb
cmp
arpl
mov
les
sahf
fildl
inc
or
aaa
pop
or
arpl
lret
sbb
leave
jno
lret
out
xchg
and
ljmp
fisttpll
jo
dec
aas
nop
mov
fsts
sbb
lods
adc
lahf
movsl
and
mov
xlat
data16
lods
out
mov
cmp
jne
mov
popf
xor
push
hlt
cmpb
cli
mov
and
and
mov
sub
daa
incb
cmp
cmp
dec
add
jmp
adc
inc
xor
mov
insl
es
or
int3
lret
jg
mov
loope
adc
adc
aaa
lds
aaa
movsl
lods
mov
mov
arpl
mov
jbe
inc
dec
pop
mov
es
jmp
andl
dec
ss
cmp
stos
das
xor
adcb
test
fisubrs
shl
ret
xchg
push
mov
xchg
das
repnz
cmp
mov
mov
daa
pop
pop
arpl
and
adc
notb
jge
rorb
mov
rclb
cli
xchg
xchg
mov
mov
mov
push
sbb
sbb
push
pop
mov
jle
xor
shr
dec
jmp
adc
xlat
add
mov
sbb
and
push
mov
je
pushf
and
iret
stc
xchg
into
pop
fwait
mov
push
gs
sub
arpl
push
jmp
gs
or
jno
and
aad
sbb
and
stc
and
test
inc
mov
push
les
add
ss
xor
popa
mov
fsubl
jno
adcb
inc
in
mov
xor
fyl2x
cltd
sub
fstpl
lret
int
mov
movsl
and
ja
sti
mov
rorb
sti
xor
sahf
mov
jmp
and
leave
out
and
inc
pop
and
lods
sbb
out
icebp
dec
xor
mov
fbstp
in
fs
aam
pop
lock
lret
dec
mov
jnp
loop
xor
dec
inc
inc
sahf
pushf
scas
push
pushf
sbb
lock
push
iret
iret
addr16
push
push
movsl
add
js
add
cmp
mov
popa
notl
sbb
pop
or
enter
inc
inc
out
inc
sahf
cmp
inc
int
pop
fdiv
mov
cmp
cs
fimuls
push
xor
loopne
and
in
popa
push
mov
push
xor
aam
inc
imul
lcall
push
inc
xor
jb
repz
push
adc
sub
xor
in
mov
outsl
loopne
pusha
out
loopne
hlt
inc
dec
mov
pop
das
sub
jbe
fists
in
or
scas
repz
dec
outsl
mov
mov
fsubs
cltd
ds
pop
jbe
jns
inc
rcr
pusha
rorb
mov
lret
adcb
dec
popf
sub
lret
fildl
vpsubsw
or
nop
mov
xlat
mov
add
jg
mov
popf
lock
mov
stc
push
mov
inc
imul
jg
inc
lds
inc
xor
xchg
jge
cli
addr16
xchg
notb
mov
push
out
sahf
adc
call
pop
hlt
daa
out
adcb
pop
push
push
dec
or
sbbl
or
or
pop
xchg
mov
shlb
add
pop
mov
xor
cmpsl
jmp
pop
adc
mov
xor
xchg
mov
adc
pop
sbb
mov
aam
jo
aas
cmc
movsb
leave
je
popf
mov
mov
add
lock
push
std
xor
dec
lock
mov
dec
out
divl
pop
ja
or
xchg
sub
jmp
shrb
jne
dec
mov
push
cli
adc
stos
sarb
pop
inc
loopne
das
cmp
stos
cld
lds
out
cmp
lret
xchg
pop
hlt
sbb
inc
and
jbe
lcall
shll
fsts
xor
fidivs
incl
mov
out
movsb
dec
out
js
mov
std
repz
pushf
jnp
ficomps
cli
ret
sub
aam
pusha
cli
sahf
cmp
cmp
add
popf
lcall
push
loop
add
inc
xor
sarb
js
fcom
ficompl
mov
sbb
push
fcomip
and
xlat
pop
inc
dec
mov
push
sahf
fimuls
out
add
or
ds
xor
mov
stc
mov
bound
lods
add
mov
aas
mov
movsl
mov
adc
aad
cmp
xor
mov
and
sbb
pop
or
dec
jbe
mov
sbb
jmp
out
std
sbb
adc
shlb
les
mov
mov
lods
outsl
mov
sti
scas
lods
mulb
inc
dec
mov
xor
push
inc
in
lods
push
cmp
xor
jecxz
shrb
and
jo
fmul
xchg
jmp
push
cmp
shll
loopne
nop
mov
jle
cmpb
rcll
cltd
dec
or
adc
mov
dec
fsubrs
addl
fildll
imul
out
lock
sub
mov
mov
arpl
scas
sahf
push
fwait
lahf
cmpsl
loop
xchg
inc
cwtl
outsb
adc
sub
mov
mov
insl
popf
sbb
jl
std
mov
js
data16
mov
jno
inc
lahf
in
ss
shrl
xlat
jns
xor
gs
idivb
mov
dec
lds
repnz
fidivs
sbb
addb
push
lock
setge
in
mov
adc
jb
ret
repnz
ret
dec
mov
add
cmpb
ficomps
push
ret
aam
sub
inc
inc
shll
sahf
inc
icebp
mov
jnp
dec
lea
push
mov
mov
test
mov
pop
imul
movsl
and
testl
mov
popf
aas
lods
pop
loope
mov
add
sbb
pop
xor
inc
or
testb
pusha
scas
inc
les
imul
xchg
xchg
into
inc
cmp
add
push
mov
jo
jmp
sbb
xlat
jb
cmc
les
xchg
pop
mov
adc
xor
pop
jo
xlat
insb
loop
in
jle
jmp
sbbb
pop
mov
ja
sbb
xchg
popa
xlat
sub
dec
sahf
push
in
jnp
mov
repnz
and
out
mov
add
ud0
cmpsb
addr16
int
je
push
movsl
mov
push
inc
jp
rcr
sub
dec
push
fisttpl
inc
xchg
in
adc
dec
std
imul
sub
xlat
ret
sbb
movsl
call
and
stos
arpl
push
stos
out
pop
cs
push
mov
data16
mov
pop
pop
cmpsl
outsl
sub
push
xlat
mov
sti
mov
in
pop
add
sub
lret
shrb
pop
mov
push
test
loop
pop
daa
or
bound
les
movsl
adc
cmpsl
dec
fnstcw
test
dec
loopne
cmc
out
int3
hlt
lods
jp
loopne
add
cli
push
lock
jnp
imul
xchg
inc
ja
mov
mov
neg
xor
lea
in
push
shrb
and
into
mov
test
mov
into
push
cmp
pop
leave
xor
mov
hlt
inc
or
inc
stos
sbb
daa
es
ja
testl
popa
xchg
leave
push
das
or
or
mov
pop
push
pop
cmp
xor
lods
add
lret
cmp
icebp
inc
and
mov
sub
repz
fldt
cmpsl
sbb
stos
xor
int
xchg
inc
inc
test
push
mov
les
mov
push
mov
mov
xor
xor
adc
add
sub
scas
push
sbbb
push
jmp
push
cli
cli
cmpsb
fwait
leave
jl
out
mov
or
je
jo
aad
xor
xor
dec
cmp
mov
and
xchg
fs
pop
lcall
push
mov
cmpsl
aad
ds
push
fcmovu
xor
jns
sub
add
out
sahf
xor
pop
dec
cmpsb
mov
rcrb
jo
outsl
inc
and
arpl
out
mov
xor
or
push
repnz
test
mov
adc
xlat
adc
and
push
pop
or
dec
dec
lret
inc
inc
cmpsl
push
pop
not
lret
aas
inc
test
es
mov
xor
mov
cmpsb
cmc
jg
sti
xchg
xor
cmp
adc
sbb
hlt
out
adc
pusha
adc
cmp
push
lods
out
push
test
scas
mov
lea
adc
lods
xor
push
andl
loop
mov
data16
loopne
call
cmpsb
or
enter
mov
xchg
push
lret
add
fldlg2
sub
mov
mov
jno
arpl
loope
adc
scas
add
pop
pop
sub
aam
add
mov
push
in
bound
sub
dec
add
lret
ljmp
mov
push
cmp
or
pop
lret
jp
jno
pushf
clc
add
cmp
daa
adc
mov
lret
in
pop
subb
xor
mov
mov
push
pop
dec
cmpsb
scas
jge
add
arpl
mov
test
pop
cs
push
dec
cltd
hlt
sbb
mov
sahf
fmull
lcall
pop
mov
xor
mov
pop
fsts
mov
sub
pushf
xor
and
dec
sbb
mov
stos
ret
mov
cs
rcl
pushf
clc
xorl
mov
mov
xchg
xchg
cmp
xchg
cmpsb
stos
lds
pop
mov
add
cld
pusha
cmpsl
xorb
fists
cmpl
and
adc
in
pop
mov
dec
xor
movsl
sahf
leave
lea
sahf
shr
and
cmpsb
outsl
xor
inc
pop
jecxz
cmp
ret
or
dec
aad
xor
jge
scas
mov
add
das
jl
xchg
mov
enter
mov
decb
add
mov
popf
arpl
jbe
scas
in
js
gs
cwtl
cmp
dec
mov
scas
xor
mov
sti
sbb
mov
mov
add
cmp
inc
adc
bound
fsubrs
sahf
sub
and
popa
clc
dec
mov
je
rcl
or
xchg
in
in
push
aad
cmp
jle
lods
pusha
test
push
movsb
sub
aas
js
sub
outsb
sbb
jo
lock
jae
adc
xor
test
lcall
cmpsl
inc
gs
mov
jb
orb
pop
loope
call
idiv
test
popf
pusha
and
int3
out
cmp
in
aas
adc
icebp
xor
add
jns
xchg
push
pop
iret
inc
mov
sub
pusha
jb
sti
ret
imul
cmp
cmp
push
or
loopne
mov
sub
jmp
jge
insb
xlat
divps
xchg
imul
cld
push
dec
xchg
inc
lret
aas
xchg
sti
xor
outsl
stc
inc
mov
jnp
repz
push
pop
jns
shl
out
mov
flds
movsb
push
shrd
push
es
sbb
addr16
cmp
clc
arpl
leave
jge
mov
loopne
xchg
aas
lahf
lret
repnz
bound
or
ror
lock
insb
js
sub
push
ds
push
inc
pusha
iret
sbb
dec
push
mov
out
jmp
lret
movsl
mov
ficomps
inc
lock
jp
add
cmpsl
xchg
fimull
ss
paddsw
cmp
add
sub
cld
imul
hlt
popa
ret
jo
ljmp
mov
cwtl
sarl
add
xor
jmp
in
mov
cmp
sarl
add
jo
and
add
mov
in
xchg
cli
pop
hlt
push
push
fimuls
jl
mov
cmp
jno
mov
daa
pop
adc
mov
sub
cs
insb
imulb
jecxz
stos
jns
cmpl
iret
add
pop
lahf
dec
je
mov
test
mov
dec
pop
shlb
fwait
xor
ljmp
dec
jb
sbb
shrb
and
int3
std
movsl
fstpl
cmpb
add
imul
into
enter
rcrl
mov
sbb
jl
popa
mov
js
dec
mov
cmp
repz
shl
jg
inc
shll
and
adc
inc
leave
sbb
aas
outsb
shlb
jl
movb
mov
mov
sbb
xlat
mov
inc
mov
pop
nop
push
mov
sbb
sbb
fcomi
mov
js
inc
and
mov
mov
cmc
test
xchg
mov
aas
loop
inc
and
pop
orb
outsl
lods
cmp
in
roll
mov
fadd
lea
adc
inc
in
xor
lods
dec
movsb
mov
dec
inc
imul
mov
shll
push
rcl
ret
push
ret
out
jl
or
not
and
mov
mov
dec
add
and
icebp
loop
mov
sti
gs
lahf
movsb
adc
mov
dec
call
popa
lret
bound
dec
repnz
push
fisttps
ljmp
mov
xchg
cmpsl
pop
test
dec
lret
insl
jp
dec
pop
lds
pushf
mov
iret
shl
ds
dec
test
fisubs
adc
pop
cmpsl
in
scas
outsb
stos
hlt
xchg
data16
sub
dec
in
mov
mov
lahf
sbbl
xor
inc
push
test
dec
jnp
pushf
dec
mov
cld
push
mov
cmc
inc
scas
sbb
inc
loop
dec
fimull
jg
push
and
int3
push
sub
jmp
jb
ret
cmp
cmp
pushf
aas
push
pushf
mov
call
mov
push
bound
mov
rorb
jmp
fcompl
in
fnstcw
cmp
cmpsb
jno
clc
gs
rorl
loopne
cmc
cmp
les
xchg
push
jne
es
cmpsl
jg
fisttpl
adc
fst
mov
js
shlb
inc
out
cli
mov
lods
jecxz
sub
mov
sti
test
sbb
jp
push
idivl
and
xor
xchg
test
stc
lods
movsbl
fnstcw
in
lret
aaa
push
mov
cmp
insl
push
fnop
js
ds
out
jno
or
push
testb
xchg
jmp
cld
dec
cmc
in
or
add
je
xlat
push
out
loope
insl
rclb
daa
or
jnp
or
daa
xchg
or
push
mov
sub
mov
dec
xchg
test
jnp
test
dec
push
mov
mov
jae
sub
and
or
adc
stos
ret
movsb
pop
lahf
sbb
or
dec
repnz
inc
loope
mov
sbb
mov
dec
ljmp
cmp
js
jl
gs
dec
xchg
sarl
and
arpl
xchg
pop
mov
rcr
jge
cwtl
jne
sbb
loopne
cmc
stos
and
xchg
pop
mov
mov
ljmp
fldlg2
adc
fdiv
loop
rorb
das
gs
test
fs
ljmp
dec
and
fmul
push
cld
and
inc
test
insl
mov
xchg
cwtl
sub
aad
test
sarb
sbb
in
mov
stc
mov
aad
push
mov
int3
adc
or
cld
pop
add
fisttpl
mov
inc
or
dec
cli
xorb
or
hlt
xchg
push
sbb
ror
mov
aad
jge
popf
inc
adcl
repnz
push
jge
mov
cmc
sub
mov
pop
ret
sbb
inc
pop
cwtl
adc
inc
dec
jmp
ds
lea
lods
mov
insl
sub
fsubs
jl
in
push
clc
or
stos
push
sbb
pop
sub
xorb
lcall
cmp
ror
mov
bound
testl
push
cmpsb
je
sbb
cltd
pop
push
dec
repz
bound
inc
lea
sbb
lcall
jge
ljmp
cmp
push
sub
sub
daa
cmpsl
mov
out
cmp
mov
fwait
fwait
jg
jge
cs
test
popa
mov
jl
mov
or
and
sub
adc
into
sub
or
adc
push
std
fs
int
xchg
mov
push
add
or
in
cmc
jo
sbb
adc
cmp
cmp
pop
call
dec
mov
jns
out
cmpsb
lret
aam
lret
pop
sbb
jnp
lret
add
sub
clc
push
adc
adc
fisubrs
xchg
mov
xchg
data16
into
push
jge
and
xchg
sahf
sub
es
clc
loope
or
arpl
scas
sarl
jnp
jne
jl
test
cmpsl
pop
push
clc
loope
sbb
inc
lret
lret
xchg
dec
ss
out
jne
cwtl
xor
setl
call
or
mov
jmp
and
clc
shll
lret
insb
fldenv
mul
jge
push
jno
fbld
subb
clc
adc
sti
pop
into
jmp
pop
lods
popa
repz
lods
aaa
loope
sti
cmpb
inc
jg
add
rol
lock
stc
lea
xchg
loop
nop
adcb
dec
cmp
in
jmp
sub
push
pop
loopne
into
and
mov
negb
int
movsb
mov
xchg
jmp
movsl
add
adc
mov
mov
icebp
and
jae
imul
dec
sbb
add
sub
repz
mov
lret
mov
sarl
xchg
in
in
xor
jnp
addr16
bound
cmp
je
enter
cs
cmpl
and
repz
popl
icebp
ret
cmp
insb
dec
mov
test
mov
or
xor
popf
ficompl
stos
shll
xchg
into
pop
dec
andb
idiv
cmp
leave
xchg
inc
jmp
decb
adcl
jmp
rcrl
add
cltd
ret
dec
rcll
add
xor
cmpsb
popa
mov
mov
testb
sahf
stc
jmp
adc
cmp
imul
push
dec
loopne
and
fnop
mov
xchg
mov
in
scas
scas
or
hlt
repnz
pop
mov
inc
push
mov
hlt
cmc
sub
shrl
inc
mov
push
jb
into
aaa
jle
jg
shlb
in
in
ds
jp
jg
nop
ror
cmp
pushf
mov
sbb
pop
xlat
imul
or
sbb
xor
add
push
xchg
push
pop
test
push
ret
sbb
push
sbb
std
ds
add
pop
mov
out
pop
fcomps
mov
dec
cld
cmp
dec
cmp
mov
outsb
loopne
cmp
and
add
repz
pop
in
shlb
fisubs
js
mov
inc
and
lods
das
mov
pop
in
ret
mov
sahf
xor
pop
cs
iret
scas
lock
inc
jno
sahf
fisttps
pop
mov
jns
sub
incl
cmp
and
fwait
or
mov
je
fdiv
shll
xchg
pushf
rcrl
jbe
aad
rcll
shll
mov
inc
insl
pop
mov
in
mov
les
pusha
outsl
stos
ljmp
jmp
jae
shlb
add
pop
xchg
int
inc
sahf
cmp
aas
push
push
movsl
and
ja
push
mov
mov
and
aad
pop
cmp
sub
pop
or
adc
in
icebp
mov
pop
int3
lret
test
sarl
adc
imul
sub
dec
mov
mov
hlt
pop
gs
pop
mov
daa
jnp
sub
push
jge
sti
test
xlat
in
dec
js
stos
jg
mov
in
addr16
pop
cs
mov
push
aaa
pop
das
inc
stos
cld
jne
out
or
clc
mov
jmp
mov
negl
sbb
push
xor
add
out
jo
imul
inc
ss
rcl
mov
aaa
jp
insl
outsl
in
or
bsr
mov
add
mov
xchg
or
ja
push
in
das
pushf
mov
fstpt
es
outsb
je
add
std
push
jno
cmp
dec
xchg
outsb
test
xchg
loop
inc
imul
add
test
add
adc
add
je
test
mov
ret
cwtl
jbe
repnz
jmp
in
fsubrl
and
imul
fidivs
and
imul
add
out
mov
cmp
sub
xlat
lret
mov
dec
mov
out
jnp
notl
mov
daa
inc
mov
std
js
jnp
rolb
pop
xchg
jbe
loope
xor
insl
inc
hlt
scas
lahf
sub
mov
pop
push
out
xor
sub
test
dec
pop
mov
push
sub
out
add
jl
pop
xchg
or
out
jo
mov
fcmovnu
mov
or
inc
sahf
mov
aad
dec
orb
sub
adc
mov
xchg
je
sub
inc
cltd
jo
inc
loope,pn
movsl
push
lock
loopne
or
adc
ret
cmp
inc
mov
mov
mov
mov
mov
push
aad
icebp
ss
fldcw
add
add
shlb
loope
add
test
stos
push
mov
inc
fcomps
fimuls
testl
adc
dec
and
cmc
bound
mov
or
xor
sbbb
sahf
xor
arpl
out
cli
jg
cmpsb
cli
mov
loopne
cmp
mov
sbb
mov
div
mov
xor
lods
add
push
nop
fcmovb
inc
lds
loop
xorl
jp
mov
cmp
ljmp
dec
cmpsl
push
stos
and
push
push
mov
cmp
or
pop
cwtl
cmp
push
adcb
xor
xor
push
je
xor
cmpsb
fidivl
stos
inc
inc
inc
mov
fistps
int
aad
push
add
iret
mov
fs
sub
imul
je
out
arpl
data16
in
insl
pop
hlt
ja
testb
lret
pop
push
dec
insl
cltd
lcall
cmpsl
mov
jbe
repz
sub
imul
je
or
mov
and
imul
aad
push
cltd
pop
outsb
shr
sbb
mov
fistpl
das
jne
inc
call
sub
jb
iret
sub
test
add
jl
cwtl
and
ss
dec
pop
arpl
push
push
jnp
in
or
js
int3
loopne
repnz
scas
dec
push
ret
sub
push
rcr
adc
scas
aaa
adc
lahf
sub
mov
adc
mov
xchg
jecxz
xor
inc
push
add
sbb
ret
scas
dec
leave
xchg
shll
lods
add
fcompl
insb
data16
std
notl
loope
jmp
jbe
push
aaa
sbb
loop
push
cmpsl
push
pop
sarl
bnd
ret
cld
mov
call
repnz
and
fsubrp
jne
roll
js
popf
push
add
test
fsubs
xor
mov
cld
out
and
or
xor
xor
and
inc
cmc
movsb
push
out
push
mov
push
sahf
cmp
test
pop
xchg
bound
lods
add
push
int
enter
je
out
pushf
mov
decb
in
cmp
sub
dec
cs
sti
scas
into
pop
jne
dec
dec
and
bound
test
pmaxsw
je
stos
push
shll
les
fists
out
add
cmpl
loope
fcomps
sbb
aas
and
packssdw
shl
jg
mov
addb
lods
out
pop
js
jecxz
xor
scas
stos
inc
addl
stc
test
es
pop
into
idivl
jl
int
roll
mov
and
jmp
xchg
xchg
pop
ljmp
push
iret
js
repnz
testl
sub
mov
popf
add
divb
or
mov
addr16
imul
xchg
mov
jmp
push
jp
lds
jmp
fidivrs
arpl
add
imul
jnp
lcall
inc
test
sub
dec
push
inc
out
aas
incl
dec
jnp
and
bound
jp
lea
out
rol
xor
ljmp
jmp
in
insl
popa
xchg
push
adc
push
xchg
movsb
cld
fsubl
mov
xchg
pushf
out
sub
push
jp
xor
push
add
push
mov
rcrb
enter
in
cmp
xabort
nop
shl
cmp
lods
stc
sub
sbb
dec
iret
xchg
sarl
call
fcomps
pop
or
loope
pushf
jo
cmpsl
out
lea
lret
rorl
dec
inc
adc
mov
into
sbb
xor
mov
or
push
cs
shrl
in
dec
cwtl
or
push
shr
mov
test
sbb
outsl
push
mov
pop
push
jle
push
cmp
stos
push
into
add
sti
and
js
jg
push
daa
shll
es
cs
insl
out
iret
dec
or
xor
mov
fnstcw
or
scas
fsubrl
xor
out
push
push
add
cmp
in
or
test
out
addr16
cmp
loope
sub
sbb
mov
in
movsb
in
push
sahf
mov
push
in
jecxz
popf
xor
mov
or
inc
xor
xchg
and
fldl
sarb
sub
fisttps
mov
or
sbb
xchg
mov
outsb
sbb
inc
jb
cmp
cmc
push
scas
ja
xchg
sarb
adc
jbe
and
jge
xor
mov
ljmp
add
lahf
out
repnz
jne
add
test
cli
and
mov
scas
out
add
test
mov
and
push
push
xchg
xchg
aam
filds
outsb
mov
xchg
loop
mov
shll
rorb
popf
xchg
dec
popl
leave
xchg
stos
test
loope
dec
mov
mov
std
push
aaa
pushf
ja
iret
iret
pop
imul
clc
dec
lret
jle
int3
adc
push
jle
mov
xor
cld
xor
or
pop
inc
ja
outsl
fsubrp
ss
pusha
loopne
sbb
lret
dec
adc
fisttps
or
or
ds
inc
cmp
pop
lock
lods
fwait
ja
adc
in
and
cld
push
lea
scas
mov
int3
mov
pop
icebp
push
dec
ret
dec
cmp
dec
mov
ljmp
inc
mov
mov
mov
mov
xchg
add
jb
mov
ret
leave
cs
test
sbb
stos
mov
mov
sbb
push
orb
test
add
mov
out
adc
ficomps
inc
ljmp
jb
sub
fsts
sub
mov
enter
rcrb
int
adc
xchg
and
popa
fsubs
mov
adc
jmp
jecxz
imul
sub
push
les
jl
fisttpll
aad
push
mov
mov
mov
add
jp
iret
mov
mul
int3
int
pop
mov
iret
push
inc
imul
xchg
cmp
inc
aam
hlt
push
stos
shll
inc
cmp
int3
xchg
cmc
aad
cmpsb
loope
and
out
les
or
je
mov
andl
cmp
mov
popf
imul
inc
mov
add
dec
adc
scas
ja
inc
cs
shlb
or
fcomp
sbb
lods
inc
sub
adc
bound
add
xchg
fistps
mov
mov
loope
iret
or
bound
stos
lock
cmp
xchg
arpl
repz
cld
lock
xor
ret
stos
pop
in
mov
sub
aaa
jb
jmp
loope
cs
mov
and
jg
das
jbe
xchg
mov
sbb
and
pop
inc
imul
or
xorl
or
cmp
push
mov
pop
mov
and
leave
les
je
imul
cltd
outsl
outsb
in
int3
lock
xor
cltd
popf
sub
mov
adc
mov
and
mov
clc
std
mov
mov
cs
out
aad
push
sbb
xchg
lret
cltd
pop
mov
clc
add
stos
jns
jp
mov
jl
xor
lds
lods
pop
ljmp
pop
or
xor
xor
mov
jo
rolb
in
push
adc
or
enterw
sbbb
imull
xor
iret
pop
sub
sub
inc
loop
or
push
xchg
inc
push
andb
dec
ret
mov
and
cmp
data16
push
pop
stos
push
push
mov
ret
arpl
popf
or
negb
pushw
push
jp
js
push
cmp
jne
sti
xor
add
clc
xchg
stc
or
jecxz
xchg
pushf
sub
push
bound
pop
sti
or
fld
jle
pop
mov
sbb
push
test
out
jle
cmp
xchg
test
js
popa
xor
and
subb
iret
push
dec
mov
sbb
in
add
and
xor
push
lret
fsubl
aas
ja
jno
mov
sub
adc
shlb
cwtl
pop
xchg
xchg
sub
mov
mov
push
in
sarb
aaa
and
into
xchg
dec
popf
dec
repnz
enter
and
xchg
aas
into
xor
or
dec
mov
or
cld
sub
mov
adcb
sti
mov
stos
jmp
xor
lods
lahf
lcall
iret
cmp
push
pop
adc
ds
lea
push
pusha
sbb
add
inc
cwtl
or
pop
js
ss
push
mov
movsl
enter
iret
or
dec
aas
test
jecxz
js
testb
sub
lds
clc
inc
xor
fsubl
push
pushf
xor
cwtl
dec
jne
mov
mov
xchg
mov
scas
inc
mov
mov
xor
pop
iret
mov
mov
push
mov
cmp
dec
into
adc
or
roll
pop
pusha
dec
dec
call
fildl
or
sahf
jle
and
clc
les
sbb
mov
xor
shl
dec
fdivl
enter
mov
mov
jb
test
sbb
dec
or
test
popa
mov
test
aaa
rcrb
hlt
and
add
popa
lock
sub
push
mov
add
add
dec
cltd
jmp
adc
jge
push
cmp
scas
or
fidivs
movsl
add
call
pushf
aas
adcl
mov
push
cli
xor
popf
imul
jl
cmpsb
mov
frstor
loop
xchg
mov
fs
dec
loope
cltd
mov
insl
pop
adc
inc
push
cli
jg
sar
in
jns
roll
xchg
cmp
mov
lods
sub
push
in
mov
or
cld
or
out
lret
rep
inc
or
fnstsw
jne
xor
dec
pop
jle
dec
inc
or
ljmp
and
add
nop
loope
or
mov
cmp
gs
inc
adc
ss
ret
daa
mov
or
enter
xchg
add
mov
add
mov
or
sarb
popa
inc
dec
shrl
or
adc
and
or
imul
sar
in
loopne
je
cmp
cmc
dec
mov
push
mov
insl
xorb
inc
das
je
mov
cmpsl
test
cmp
mov
or
jge
out
outsb
push
push
imul
mov
inc
mov
idiv
mov
loop
xchg
cmc
push
jb
loopne
xchg
jecxz
sbb
jp
lea
inc
xor
sub
inc
push
sahf
pop
scas
sub
jl
lods
or
push
fs
mov
lret
and
loope
mov
or
dec
dec
fsubrs
ret
sub
mov
lods
repnz
jg
fnstsw
ljmp
xchg
psrlw
popf
inc
fsubrs
pop
push
add
jp
or
sub
enter
imul
sub
mulb
mov
mov
xor
cmp
in
rorl
fimull
aad
push
sub
aam
jge
mov
cmp
scas
sti
xchg
add
cmp
loop
dec
xchg
xchg
push
addb
ret
leave
cmp
int
ljmp
mov
popa
ja
das
imull
icebp
repz
adc
fsubr
lock
movsl
mov
or
xchg
pop
push
repnz
push
push
and
cmp
xchg
sbb
fs
clc
jns
aaa
dec
js
cwtl
adc
add
push
pusha
mov
lods
jmp
and
mov
xchg
pop
fistpll
pop
inc
dec
and
test
sbb
add
into
mov
sahf
shlb
out
xchg
pushf
insl
rorl
je
cmp
imull
sbb
cmp
pushf
cld
mov
insl
add
xchg
leave
add
test
and
ror
out
sbb
xchg
jg
das
adc
adc
mov
jecxz
stc
xchg
js
and
popa
sbb
ds
js
repnz
adc
scas
and
sub
mov
jae
sub
push
loop
dec
xchg
mov
sub
xor
and
sub
jae
sbb
test
mov
cmc
shrb
decb
jo
incb
outsb
fstps
push
pop
mov
mov
imul
push
mov
adc
xor
les
dec
add
xlat
mov
jp
movsb
mov
imull
lock
xchg
mov
cmc
ja
mov
mov
fs
les
int
sbb
pop
inc
ljmp
jnp
cmp
imul
mov
jne
adc
inc
fmull
add
sbb
aad
push
xchg
xor
cld
push
pop
add
or
mov
xor
dec
adc
push
jmp
or
sbb
imul
loopne
pop
ds
adc
xchg
mov
jnp
and
jns
ljmp
sbb
inc
jne
mov
daa
lods
dec
sbb
cli
outsl
outsl
test
insl
mov
push
cmpsl
std
inc
adc
sar
inc
pop
rcll
jmp
sub
cmpb
xchg
aas
and
and
inc
mov
add
xchg
int
mov
adc
mov
bnd
hlt
loopne
lahf
mov
push
push
stc
jecxz
lods
pop
and
jae
jno
xchg
xchg
shll
and
mov
stc
rorl
mov
ljmp
dec
xchg
cmp
cltd
inc
je
cmpsl
shll
or
int3
xor
xchg
sbb
clc
ret
mul
pop
push
cld
popf
das
cmp
push
in
sbb
ljmp
into
enter
push
repz
sub
xchg
mov
adc
jno
pop
dec
dec
in
fucomp
pop
lds
or
and
pop
mov
lock
sbb
jbe
mov
inc
aaa
lret
or
fildl
data16
xor
ret
iret
testl
scas
dec
xchg
lods
pop
mov
xor
sahf
das
arpl
popf
adc
push
pop
push
sbb
out
shrl
or
movsb
sub
jo
jle
int3
iret
xchg
jecxz
sbb
in
aaa
xor
inc
scas
lahf
fdivr
inc
cmp
jae
ja
jnp
inc
jae
push
popf
cmp
dec
mov
movlps
cld
insl
push
mov
stc
adc
fcomi
sti
or
push
imul
xor
lret
ds
push
outsl
mov
outsb
cmpsb
mov
nop
loopne
shlb
push
repz
popf
jno
loop
xor
pushf
sub
push
cmp
cmp
jne
je
xor
movl
in
cmc
arpl
jecxz
dec
es
leave
mulb
pop
aaa
lret
es
mov
ljmp
inc
fistpl
out
ss
push
je
add
mov
je
push
or
sti
xor
cmpb
mov
hlt
shl
xchg
mov
adcl
push
scas
icebp
sti
and
sub
scas
stos
sti
adc
into
arpl
subps
jl
scas
in
les
or
add
or
mov
ljmp
inc
or
mov
clc
scas
jnp
xchg
cltd
push
pop
aas
mov
xor
call
repz
sbb
cmpsl
adc
add
inc
push
add
and
mov
std
xor
sbbb
jmp
sbb
add
sbb
or
cli
fs
sub
adc
or
sub
gs
pop
repz
mov
adc
lods
jecxz
mov
gs
xlat
mov
pushf
dec
stos
xchg
inc
mov
pop
lds
dec
sub
cmp
fsts
adc
push
out
fs
pusha
aaa
outsb
bound
clc
icebp
fwait
mov
repz
xchg
sbb
dec
xchg
adc
push
fsubr
imul
cmp
xchg
subb
cld
xchg
xor
lods
mov
pusha
push
outsl
sub
in
imul
jbe
mov
scas
push
aad
and
xchg
mov
cmp
pop
push
jne
fisubs
test
push
scas
add
lods
sub
cld
test
sahf
insb
or
cmc
dec
sub
inc
inc
rorb
clc
cli
fimull
jmp
xor
mov
push
xor
adc
push
push
adc
mov
jp
dec
mov
adc
bound
and
jnp
add
and
das
and
mov
test
pop
fs
leave
rcrl
jmp
and
stos
mov
sbb
jg
shl
enter
and
mov
rcl
outsl
std
cld
lods
sub
insl
and
sbb
imul
sti
push
xor
add
cmp
cmpsl
jns
add
insl
fcmovbe
shrl
mov
lret
addb
nop
mov
andl
xchg
mov
andb
xchg
pop
mov
dec
add
jmp
dec
xlat
mov
pop
xchg
adc
mov
xchg
push
rcll
cld
sub
sbb
mov
adc
idivb
scas
and
fidivrl
sbbb
mov
cltd
lret
push
fdivr
aas
or
out
mov
add
dec
cs
sbb
ss
bound
mov
ret
in
xchg
add
adc
adc
jge
mov
push
fisubs
jnp
cwtl
scas
sub
cmp
jl
aas
inc
push
pop
lss
add
xchg
jp
jecxz
insl
imul
push
scas
je
daa
std
cwtl
decl
ljmp
scas
inc
sbb
mov
sub
lds
mov
imul
cltd
out
jp
hlt
or
xor
jecxz
mov
adc
jecxz
ret
movsl
jo
js
daa
xchg
lods
movhps
pop
dec
nop
cmp
jecxz
xchg
cs
jae
xlat
pop
aad
rorl
mov
ljmp
xor
xchg
mov
bound
mov
mov
ret
cmp
frstor
lods
adc
xor
shr
nop
sub
inc
push
cld
jnp
stos
fimuls
xchg
enter
repz
sti
lea
sub
leave
lods
sbb
jg
push
jmp
mov
ret
hlt
push
mov
ret
data16
int3
mov
or
dec
je
cmp
pop
jno
adc
movsb
incb
mov
repnz
cmp
clc
push
aas
in
mov
dec
mov
dec
jno
ret
mov
pop
ljmp
cmp
xchg
push
movsl
add
xchg
sub
dec
push
mov
clc
out
jae
imul
mov
pop
dec
rcrb
push
mov
test
mov
push
ja
cmp
insl
jmp
add
mov
sahf
inc
adc
xor
scas
mov
nop
inc
ret
push
pop
mov
push
push
or
jg
ret
adc
cmpsb
or
cmpsl
xor
mov
lret
shrb
xchg
or
jl
pop
sub
pop
aam
pop
inc
fstp
arpl
mov
push
jb
popf
sub
adc
dec
jbe
jle
and
or
push
fisubs
cmp
loop
jg
aad
cmp
cwtl
popa
rorb
mov
jge
clc
dec
rolb
xor
pop
jns
in
in
scas
fbstp
out
mov
iret
stos
mov
cmpsb
jmp
sbb
mov
sub
mov
sahf
inc
mov
jp
ret
call
popf
jno
mov
in
rorl
js
lret
pop
dec
lret
or
dec
dec
jne
fidivrs
add
dec
mov
ss
adc
mov
cs
jno
lds
cmc
fs
cli
inc
mov
inc
add
int3
cltd
vmaxpd
mov
arpl
test
or
pop
lods
cmp
jp
test
add
sub
cmp
leave
push
popa
cmp
cmp
fisttpll
xchg
std
mov
mov
insb
and
or
jge
sub
and
into
je
test
cwtl
cwtl
and
cmp
shrl
inc
add
movsl
in
outsb
scas
jecxz
mov
hlt
add
int
int
mov
popa
test
aam
jne
lods
jge
mov
dec
ret
insl
mov
call
pop
mov
fldl2e
mov
dec
jno
push
push
sbb
adc
sub
cmpsl
movb
out
mov
loopne
or
jns
jecxz
push
sbb
fidivrs
dec
stc
jo
lahf
shlb
mov
mov
pop
in
cmp
cmpsl
pop
pmuludq
sub
mov
xchg
push
adc
jle
test
jl
sahf
icebp
sbb
lds
rcr
in
xlat
or
mov
jnp
jns
inc
fildll
sub
cld
cmpsl
ja
and
cltd
jmp
xchg
scas
mov
out
push
ljmp
pop
pusha
mov
sbb
mov
test
iret
xchg
movsb
mov
push
jnp
mov
cmp
test
mov
call
dec
sbb
outsl
jl
je
stos
xor
pop
push
sub
stc
sub
js
hlt
ret
add
fcoms
inc
ja
or
inc
add
cmp
lods
arpl
inc
mov
lods
int3
ja
xor
hlt
push
or
jno
xchg
iret
mov
out
mov
adc
xor
inc
xor
fdivs
mov
stc
add
imul
pop
add
pop
scas
faddl
call
push
dec
xchg
inc
popf
gs
data16
dec
mov
loop
fmull
adc
cmp
xchg
and
xchg
out
mov
mov
mov
cmp
xchg
fisubl
pop
jo
sbb
and
out
addr16
sbb
pop
dec
mov
sub
call
stos
rorb
mov
je
mov
adc
cmp
shrl
ja
sbb
fidivrl
add
dec
out
push
cli
xor
fmuls
pushf
sbb
mov
testb
fisttps
in
xor
out
or
dec
out
outsl
mov
lea
rolb
mov
or
mov
sub
mov
xor
ds
pop
pop
xchg
stos
pop
rcl
or
inc
lret
daa
scas
inc
scas
call
push
mov
repz
sbb
mov
jnp
loopne
inc
aas
stos
jmp
je
das
enter
out
push
das
cwtl
dec
and
mov
xchg
pop
xchg
mov
sbb
push
jl
adc
mov
xor
call
std
or
outsl
mov
sub
ret
in
mov
and
adc
sbb
push
ficomps
lock
loopne
mov
xchg
repz
and
cmp
sub
lret
lea
shll
repnz
lahf
add
adc
cmp
pop
lahf
sub
icebp
mov
xchg
jp
push
dec
lcall
outsb
xchg
test
jb
push
jl
clc
lods
pop
or
xchg
rorb
xchg
pop
xor
or
mov
mov
dec
ja
cmp
inc
adcl
add
orl
jmp
mov
pop
xchg
cmp
std
shl
call
lahf
and
jecxz
fstl
fistpll
test
aaa
jns
add
pushf
mov
xchg
sub
jmp
stc
sub
jmp
testb
pop
addb
scas
lea
fisubs
push
pop
fbld
push
mov
in
insl
sub
rol
ja
xor
add
mov
mov
adc
shlb
test
sbb
test
cli
jae
push
push
nop
mov
repnz
mov
adc
imul
mov
adc
cwtl
aad
lcall
push
shr
sbb
jmp
jne
jmp
push
pop
cmc
aaa
jmp
xchg
les
in
lret
sahf
xchg
xchg
shll
xchg
repz
mov
sub
cmp
or
ja
mov
fdivp
rorl
sub
imul
addr16
clc
cld
and
popf
jecxz
dec
jnp
insb
outsb
aas
xchg
add
loope
push
dec
stc
or
and
je
pop
mov
xor
testl
xor
and
mov
test
out
xchg
andb
push
and
mov
dec
mov
mov
sahf
inc
aas
test
mov
cld
std
push
xchg
jg
ds
jp
push
pop
sub
outsb
pop
test
push
in
dec
jle
addr16
dec
fildl
sti
xor
pop
movsl
ret
mov
push
nop
add
xchg
jae
int
aas
mov
aad
jecxz
sarl
cwtl
imul
fmul
dec
pop
push
int
jle
pop
ja
xor
cld
fcoml
das
dec
inc
pop
dec
testl
mov
ljmp
in
sbb
fcomi
daa
sarb
mov
lods
sub
aam
addr16
lcall
adc
fwait
push
sahf
cld
add
dec
jmp
mov
nop
sub
pop
jae
lds
sbb
sbbb
les
jge
cmpsb
repnz
mov
xchg
notl
add
jo
cmp
cmp
cli
dec
out
cld
inc
pop
sub
inc
mov
dec
ret
sbb
or
dec
adc
pop
add
push
or
fstl
bound
lret
lock
imul
and
jnp
fstpt
cltd
insb
out
add
mov
jne
or
das
sub
push
pop
jns
les
sti
cld
and
outsb
ss
dec
dec
notl
xor
mov
jae
adc
cld
pop
push
jl
jns
mov
cli
lods
push
mov
es
insl
jnp
in
push
je,pt
popa
sbb
pusha
add
into
cld
fmuls
jg
addr16
fimuls
and
in
sbb
aad
jmp
jns
sahf
push
inc
andb
stos
enter
xchg
cwtl
xlat
xchg
pop
xlat
adc
popf
int3
mov
lret
cmp
iret
scas
mov
jne
pusha
popf
jge
inc
xchg
insb
sbb
mov
jecxz
jne
inc
mov
scas
leave
cmpsl
xor
cmp
fldenv
jecxz
sub
in
cltd
pushw
jae
mov
mov
cmp
and
dec
mov
and
pushf
inc
xchg
data16
xchg
or
in
inc
lock
iret
fmull
or
rolb
inc
movsb
ja
push
mov
push
xchg
testl
sub
lahf
loop
mov
jbe
sti
mov
aad
mov
fnstcw
lock
incl
mov
add
and
xchg
aad
incb
jno
dec
subb
xchg
stc
clc
lret
mov
push
es
test
add
fcmovnbe
arpl
mov
orl
and
sbb
dec
inc
and
in
test
sbb
in
pusha
movsl
jecxz
lret
jbe
xor
sub
pop
pop
push
sub
int
test
es
ss
movsl
cmp
jge
cmp
push
xchg
ljmp
add
pop
pop
pop
xchg
jp
shl
add
or
loop
xor
and
fbld
out
or
inc
pop
leave
in
jb
enter
repnz
mov
mov
cmp
push
inc
adc
xchg
dec
ja
ljmp
jle
fs
pop
push
stc
pop
cmpsl
add
into
mov
dec
bound
xchg
push
pop
jb
sarb
call
pop
ret
mov
xchg
ds
les
add
in
pop
test
pop
or
test
test
ljmp
fcomp
cld
mov
das
or
rcr
sub
rorl
mov
icebp
stos
sbb
nop
jg
xor
lea
pop
mov
iret
mov
mov
sbb
es
pop
and
cmp
cwtl
shrl
sbb
cli
adc
test
mov
jns
mov
ds
push
ss
push
or
jmp
cmpsl
stc
add
adcl
xor
or
mov
push
pusha
mov
or
enter
lcall
dec
ja
push
xchg
xor
add
lods
stos
adc
hlt
add
stos
pop
aam
xor
mov
nopl
mov
jnp
mov
in
std
adc
sbb
sti
adc
push
adc
or
and
lea
scas
sti
mov
cmp
ret
inc
out
lock
fbld
insl
int3
fmuls
cmpsb
add
in
dec
push
mov
pop
xorl
inc
fisttps
push
aad
pop
inc
mov
inc
sti
push
or
ss
mov
fwait
push
cmp
inc
into
add
xor
cmc
clc
jno
push
mov
adc
push
sbb
gs
jmp
out
sbb
pusha
loope
fdivs
movsb
cltd
pop
mov
andl
fistpl
cmpsl
adc
cltd
lahf
inc
repz
push
dec
inc
sbb
test
push
xchg
daa
and
xlat
jecxz
cmp
mov
jmp
popf
pop
cmpsl
xor
lret
outsb
adc
dec
stos
xchg
leave
push
filds
sbb
aaa
sub
push
dec
pop
mov
popf
enter
push
or
inc
cmp
imul
inc
dec
fwait
add
pop
sarb
push
aad
jne
pop
cmc
pop
dec
jmp
pop
test
lea
or
jle
filds
sbb
loop
pop
data16
mov
xchg
xchg
imul
lret
in
stc
cmp
xor
push
xorl
int3
push
sub
pop
inc
xor
xor
arpl
xchg
xchg
jge
push
pop
cwtl
imul
int3
leave
lods
inc
test
gs
lock
lods
loope
jp
aad
and
add
cmp
std
dec
js
movsb
ljmp
inc
sahf
jmp
push
mov
scas
ss
sbb
mov
leave
stc
adc
pop
jne
aam
ds
fwait
fwait
aaa
adc
ja
sbb
jg
jecxz
xor
xchg
ret
stc
mov
sub
rcrb
or
cmp
or
ficompl
adc
test
shll
push
add
add
call
das
and
mov
movsb
aad
ds
pop
add
aas
gs
mov
scas
test
dec
sbb
fcomip
cwtl
dec
mov
dec
pop
mov
cmovl
imul
mov
mov
ljmp
leave
popl
lret
fdivrl
sbb
push
js
push
jmp
dec
popf
scas
aas
int
aam
jae
shll
outsb
xor
cld
xchg
push
shlb
outsb
sbb
lds
imul
dec
lcall
data16
imul
jmp
push
mov
adc
mov
or
roll
lds
push
fcmovnb
cmp
mov
fisttpl
dec
sar
addr16
xchg
push
ljmp
pop
pop
sarb
sub
inc
out
sahf
mov
add
sub
or
sbb
les
scas
and
mov
cs
clc
int3
mov
or
sahf
inc
xchg
jge
enter
out
movsb
pushf
xchg
das
hlt
xor
inc
xor
pop
daa
xchg
andb
das
pop
mov
mov
lret
daa
fsubr
into
fsubl
inc
stc
cmpsb
test
xlat
js
sbb
scas
mov
fstps
mov
fnsave
mov
xchg
inc
mov
imul
aas
push
and
shrb
xor
inc
cli
in
and
in
fstl
jne
leave
mov
aad
xchg
insl
cwtl
lock
inc
add
flds
or
add
mov
rorb
das
push
jne
jne
or
xlat
or
mov
dec
std
and
pushf
rcrl
add
jnp
mov
pusha
nop
ret
icebp
fdivrl
jns
imul
arpl
inc
sahf
fsubl
jb
addl
imul
pop
mov
daa
push
pop
jae
inc
mov
pop
mov
cmp
out
pop
mov
ljmp
ja
lods
fsubrl
lahf
lret
sub
sub
sbb
jmp
mov
imul
cmp
js
jo
jne
push
xor
adc
push
pop
push
inc
and
in
dec
fcompl
xchg
or
mov
sub
aaa
movsb
cmp
xchg
sub
in
sub
adc
roll
xchg
ds
fldl
sbb
movsb
jmp
imul
xor
jle
add
lods
movsb
jmp
xor
enter
xchg
outsb
sarl
mov
nop
inc
inc
in
lahf
cltd
popf
out
adc
lock
and
pop
push
in
pop
xor
sahf
stc
jle
addr16
sub
wbinvd
je
mov
mov
mov
es
push
lods
cli
lods
pusha
adc
push
sub
mov
movsl
into
fstp
jns
mov
xchg
jmp
dec
repnz
pop
push
xor
lahf
and
dec
mov
mov
fldl
xchg
fistpll
mov
xchg
adc
scas
rol
das
mov
dec
xchg
and
aam
arpl
pop
outsb
jle
scas
add
mov
mov
or
mov
std
in
pop
add
out
cmp
fdivl
gs
inc
mov
cmp
ret
push
in
mov
repz
ds
cmpsl
sarl
mov
mov
pop
js
xlat
out
cmp
ds
dec
push
xor
xor
sub
mov
div
mov
stos
fwait
push
cld
sub
ret
inc
xor
xor
push
xchg
adc
pop
fidivrl
inc
int
insb
sbb
aad
stc
push
ficoms
xor
jmp
add
mov
les
mov
mov
js
lea
sbb
xor
xor
add
mov
jmp
hlt
pop
cs
rorb
jbe
sbb
out
push
add
out
imul
push
mov
dec
dec
and
test
adc
cmp
and
adc
aam
vmptrld
jecxz
mov
dec
pop
loopne
mov
pop
addb
mov
movsb
and
inc
shlb
push
pop
daa
jmp
push
mov
lahf
sbb
jl
sbb
leave
movsb
daa
jmp
push
and
adc
sub
iret
and
push
aaa
imul
mov
cmp
pop
fstps
insl
mov
pop
jne
mov
std
push
adc
inc
mov
sub
int3
jns
mov
in
test
mov
ja
xlat
stos
cltd
push
mov
cmp
add
mov
adc
jl
scas
fcomps
mov
pusha
or
hlt
cmp
mov
cmp
repz
aam
in
bndldx
popf
xchg
pop
jno
or
dec
sbb
cld
mov
and
jno
sub
daa
inc
mov
ret
inc
lahf
cmpb
ljmp
stos
push
jne
rorl
jnp
add
jne
fbstp
sbb
shl
mov
aas
add
ds
add
push
stos
jl
xchg
fldcw
sub
movsb
push
pop
jge
rolb
mov
sub
push
mov
jae
jne
dec
aas
scas
stc
mov
lret
mov
repnz
mov
mov
into
or
mov
cld
xor
ja
sbb
jnp
xchg
sarb
push
insl
add
pop
arpl
push
inc
cmp
mov
out
xchg
cmpsl
cmpsb
sub
add
ljmp
xchg
xchg
mov
sbb
pop
sbb
fwait
subb
sbb
shrb
in
dec
lds
dec
stos
adc
andb
insb
mov
xlat
xchg
lret
sub
jmp
pop
mov
fsub
push
movsl
xor
pop
call
sub
pop
push
push
pusha
out
sbb
loope
add
dec
and
lods
push
adc
xor
xor
xchg
push
add
push
test
push
xor
jne
std
movsl
and
inc
imul
fwait
clc
arpl
popf
xlat
ja
stos
xchg
mov
nop
sahf
in
xor
fmull
xchg
or
fstl
mov
jne
pusha
push
cmp
rol
pop
gs
fmul
shll
sub
and
add
sub
fadds
or
pushf
and
jmp
lods
loope
adc
adc
pop
push
leave
mov
push
mov
inc
xchg
cltd
jp
jle
mov
xchg
andb
sbb
sbb
xor
mov
jl
jne
leave
mov
sbb
adc
adc
out
mov
jne
xchg
adc
mov
sahf
mov
mov
cmpsl
xchg
jmp
add
fldt
or
xor
mov
addl
or
js
mov
lods
push
mov
out
cmp
adc
fcomip
add
jb
fldl
loopne
bound
popf
jnp
push
mov
scas
std
and
push
clc
jne
aas
outsl
insl
push
adc
jl
fists
stos
xchg
mov
adc
sbb
xchg
xor
shll
mov
ja
jle
mov
jnp
mov
adc
push
add
and
aad
inc
cmpb
test
fldt
inc
movsl
jb
std
pop
pop
push
pop
mov
in
stc
popf
pop
mov
mov
insl
movsb
fdiv
stc
push
in
mov
es
cmp
sbb
push
test
dec
and
insb
sub
loop
mov
ficomps
enter
test
push
sbb
les
sahf
in
lds
push
pop
idiv
enter
shl
xor
mov
popa
inc
pop
xchg
mov
stos
and
adc
aaa
lret
jle
ss
jle
add
lds
push
inc
pop
xor
adc
ja
repnz
sbb
jge
pusha
mov
sub
clc
pop
cmpsl
sub
ljmp
pop
scas
outsb
ss
pop
mov
sbb
mov
xchg
cmc
imul
xlat
popf
in
sti
jg
aad
pusha
jno
jg
movsb
inc
mov
mov
sub
mov
scas
scas
push
xor
sbb
arpl
add
adc
lret
hlt
addb
adc
in
sbb
push
insb
xlat
test
in
loope
push
push
or
imul
cmpsl
inc
shll
sahf
push
repnz
add
mov
pop
test
fisttpl
hlt
aas
into
sub
lret
sbb
and
loope
outsl
xcrypt-ctr
cmpsl
pop
lcall
arpl
pop
dec
jae
cmc
repz
xchg
mov
movsb
mov
popl
cmp
mov
les
cli
push
jle
push
lods
push
add
and
xor
mov
mov
xor
mov
js
jmp
pop
lds
not
test
repz
inc
enter
in
cmpsl
mov
mov
adc
push
jl
sarb
and
mov
fdivp
pop
mov
shlb
in
mov
lret
faddl
jp
cmp
add
sbb
cmp
dec
sarb
adc
xor
fimull
rorl
mov
outsb
mov
popa
je
xchg
pop
cmp
fs
in
jge
cmp
push
div
or
sbbl
lret
adc
or
fs
push
xchg
sub
mov
sbb
sbb
mov
lcall
gs
xchg
dec
mov
dec
pop
pop
test
jmp
daa
cwtl
mov
fnsave
test
push
mov
pop
sub
es
jbe
je
test
outsl
push
ja
mov
add
dec
dec
and
mov
jge
ljmp
push
push
js
daa
fistl
ffree
and
lods
icebp
ljmp
adc
pushf
fsubs
push
mov
xchg
std
mov
test
call
xor
std
imul
push
fidivl
jmp
shll
mov
cmp
loopne
pop
mov
xchg
daa
lcall
shrl
inc
inc
cmp
lods
jge
lock
stos
dec
cld
in
mov
xchg
and
clc
fbstp
addl
jne
inc
popf
sbb
lods
sbb
or
in
ret
cmc
xorl
pop
enter
xchg
add
in
inc
pop
pop
bound
outsl
enter
xor
std
pop
loopne
xor
fstp
jb
xchg
pop
sahf
sub
aam
into
mov
cmp
sti
xor
jge
sub
pop
sbb
add
cwtl
dec
scas
aam
out
push
push
pusha
sbb
xchg
sbb
lcall
push
sbb
mov
cmc
cld
sbb
mov
xchg
jl
hlt
or
mov
loopne
sahf
or
rcl
mov
jno
mov
in
inc
cmp
jae
ret
push
mov
and
mov
loope
cs
out
jne
aam
cmp
jns
fs
mov
addr16
adc
cli
data16
xchg
call
mov
sbb
xchg
orb
jnp
lods
xchg
lret
mov
sbb
push
scas
cmp
xchg
clc
mov
dec
pop
outsl
in
inc
mov
xor
std
dec
jecxz
or
sar
test
inc
call
out
sub
inc
test
mulb
stc
scas
scas
jnp
sub
int3
in
outsb
pushf
lret
add
cli
movsl
aas
sarl
and
jne
xchg
inc
lods
subb
xchg
jnp
repz
out
sbb
daa
add
sbb
pop
insb
call
scas
mov
ljmp
xchg
or
loopne
cmpsl
div
ljmp
sahf
pushf
ss
sbb
and
dec
mov
xchg
push
mov
push
lea
insl
sbb
fwait
xchg
je
push
sar
mul
push
push
xchg
fcomip
bt
pop
dec
adc
fdivrs
mov
jge
xchg
adc
cmp
pop
fisubs
clc
lret
pusha
sbb
cmc
sbb
sbb
int3
fildll
scas
bound
mov
mov
or
sti
out
ret
lret
jne
lock
dec
or
inc
pop
bound
fs
inc
lret
mov
arpl
in
lds
or
mov
int
out
add
xor
insb
or
jb
mov
cmp
fxch
or
push
sbb
outsb
rorl
push
mov
add
sbb
mov
sbb
sbb
fbstp
into
repnz
arpl
js
cld
fistps
test
into
icebp
adc
jo
mov
xor
aad
imul
dec
roll
mov
das
imul
dec
inc
scas
pusha
mov
sub
add
and
shrb
cmpsl
sub
xor
push
dec
or
mov
outsb
hlt
jmp
test
pop
push
jnp
mov
loop
aam
mov
dec
nop
jnp
sbb
fimuls
enter
add
adc
sbb
faddp
jo
iret
or
das
out
mov
nop
or
cmpsb
push
xor
mulb
mov
cmp
pop
loope
push
cmp
sahf
int3
sub
pop
jecxz
enter
and
arpl
fcomps
push
stos
and
fwait
mov
out
inc
mov
jmp
dec
test
mov
fcmovbe
popa
callw
mov
mov
stos
sbb
push
push
shlb
mov
inc
xor
sbb
mov
mov
pusha
andb
and
js
ja
loope
xor
and
rclb
repz
dec
popa
insl
test
jno
stos
inc
repnz
in
bound
fldl
and
cmp
lds
jo
stc
adc
mov
lret
push
loop
or
pushf
xchg
lahf
mov
clc
int3
adc
push
push
sbb
outsl
jnp
xor
orb
and
push
stos
and
pop
mov
ja
sbb
inc
push
test
push
in
mov
lret
cwtl
sub
push
inc
hlt
les
xchg
push
or
inc
pop
out
push
in
mov
imul
adc
push
xlat
insl
lods
sbb
mov
fildl
pushf
inc
jns
mov
das
nop
jne
cltd
lods
push
iret
mov
push
xchg
sarl
xor
xor
inc
jg
jle
add
mov
push
cmp
mov
jecxz
mov
cmc
imul
loop
pop
mov
adc
ret
nop
fistps
add
insl
cwtl
faddl
sbb
pop
mov
or
dec
data16
ret
mov
sub
xchg
scas
push
mov
lock
dec
push
pusha
cmpsb
pop
aas
lea
mov
inc
movsl
sbb
mov
sub
es
inc
lahf
jle
shl
shlb
out
fsubrl
add
cs
fmuls
pop
inc
ds
jecxz
lcall
push
jnp
mov
jecxz
xor
jecxz
cmp
cmp
mov
cmpsb
in
jnp
and
jne
jmp
lahf
mov
cmpsl
cld
cmp
repz
mov
inc
inc
ret
ds
jmp
adc
js
add
mov
cmc
gs
lret
push
lods
push
in
fimull
out
xchg
push
test
inc
out
mov
std
test
mov
sub
mov
push
test
inc
out
outsb
inc
cmp
in
xlat
fcompl
sbb
movsl
xor
jle
imul
cmpl
sbb
addr16
or
sarl
cmp
mov
movsb
push
pop
pop
dec
daa
fnsave
push
mov
mov
lcall
sbb
sub
insl
pusha
cli
xorl
jecxz
mov
cmp
jne
xchg
out
loopne
addr16
lock
xor
add
mov
xchg
jno
xchg
sub
adc
movsl
or
cmp
testl
xchg
arpl
out
arpl
xchg
add
adc
js
ficoml
aas
or
xchg
lods
jno
ljmp
andb
lods
jae
jmp
inc
shrb
xchg
pop
gs
fs
inc
test
push
xor
ss
push
pusha
imul
loop
pusha
and
dec
outsl
fsts
js
mov
stos
and
in
mov
data16
js
fisttpll
sub
or
scas
data16
test
and
cmp
pop
sub
mov
les
and
pop
dec
cmc
ds
cmp
mov
jle
mov
jnp
xchg
aas
push
cmp
sub
nop
push
hlt
mov
add
add
aas
mov
daa
stc
repz
cmp
roll
cmpsb
push
jge
out
aaa
sti
popa
mov
sbb
or
jg
aas
xor
je
imul
jg
clc
xor
das
add
cmp
js
dec
inc
jp
pop
lret
and
dec
cmp
ret
sbb
mov
or
int
int
sbb
xor
adc
inc
lcall
sbb
mov
imul
mov
mov
pop
shlb
mov
arpl
push
dec
mov
test
fdivrl
stos
or
lret
or
jno
subb
out
imul
pop
mov
pop
daa
xor
push
pop
outsb
sub
mov
sbb
xor
sti
push
mov
leave
inc
int
push
cmp
push
jno
mov
loope
fwait
xor
movsb
insb
test
sub
mov
xchg
cmp
dec
aas
mov
cwtl
out
fidivs
dec
in
add
xor
inc
jns
mov
sbb
sub
cs
movsb
loopne
ja
rolb
loopne
push
push
jl
aas
mov
push
inc
cltd
and
push
mov
xchg
lea
test
xchg
jns
push
pop
idiv
in
lods
scas
shrb
pop
jmp
sbb
adc
fsubs
inc
jecxz
idivb
arpl
roll
jnp
sub
lret
repz
xor
dec
aas
sub
sahf
cmpsb
mov
push
pop
inc
dec
ss
lea
repnz
sub
aaa
bound
jmp
outsb
push
cmp
mov
xor
iret
ret
pop
mov
jns
call
jecxz
hlt
ljmp
movsl
pop
xchg
stc
mov
inc
roll
dec
clc
inc
inc
and
data16
xchg
xor
sub
mov
mov
jnp
out
push
adc
outsl
std
mov
jp
sub
lret
ficomps
ss
imul
pusha
ja
call
ret
loopne
xor
pop
inc
stos
ja
pop
pop
cmpsb
data16
mov
mov
imul
lds
ss
out
aaa
ja
popf
cmpb
mov
es
int
cmp
mov
push
bound
insb
aam
adc
lea
sub
push
jg,pn
xchg
pop
ret
fsts
push
aam
jne
lcall
xor
test
sarl
dec
xor
fwait
inc
cld
mov
leave
mov
mov
lcall
jns
jge
mov
push
out
fsubrs
mov
in
mov
xchg
les
mov
jne
lods
sahf
das
pop
sbb
leave
test
arpl
and
xchg
das
mov
divb
dec
mov
xor
lret
mov
add
sahf
cld
dec
in
lcall
mov
and
shl
mov
jecxz
xchg
testb
int
mov
push
in
shrl
out
out
movsl
push
andb
iret
push
imul
in
fcomps
jge
mov
lds
inc
xor
sbb
mov
nop
push
jno
into
mov
mov
dec
dec
sbb
jmp
popf
in
sub
jl
mov
xor
jnp
mov
dec
in
inc
sbb
shl
and
xchg
cmp
in
ss
push
and
sarl
pop
fisttpl
add
fimuls
data16
cmp
fcmovnb
fdivl
sti
daa
mov
xchg
xchg
call
xor
push
lret
daa
in
xlat
mov
inc
mov
cwtl
cmp
loopne
jl
push
ds
dec
pushf
imul
inc
sub
movsl
arpl
or
inc
ds
imul
test
out
push
pop
push
mov
push
add
std
sub
sub
in
out
shl
push
mov
xchg
adc
lcall
mov
mov
xchg
mov
push
rorb
cmp
cltd
movb
lock
out
int
lods
mov
hlt
repz
jae
pop
adc
add
fldl
rorb
push
js
xor
or
ss
sbb
pop
pop
cmp
adc
mov
inc
mov
cs
push
mov
sub
leave
push
inc
mov
and
insl
adc
imul
pop
xchg
adc
loope
pop
mov
or
test
sub
add
clc
je
clc
push
jbe
and
or
mov
pop
cmc
test
sbb
out
stc
loopne
mov
jae
jbe
cli
insl
or
iret
rorl
mov
sahf
adc
mov
sub
fisttpl
dec
cmp
push
imul
in
test
cwtl
out
and
jo
mov
xor
add
enter
int
inc
repnz
sbb
adc
insb
pusha
stos
dec
ds
bound
in
xchg
jp
fstl
xchg
mov
inc
jmp
and
loop
add
pushw
je
mov
hlt
mov
jl
jl
pop
sbb
sub
jo
in
sub
xor
mov
lock
lret
fsubrl
sahf
loopne
mov
into
jmp
dec
add
icebp
pop
popf
nop
js
pop
aad
in
arpl
scas
aad
push
push
mov
inc
mov
orb
mov
js
out
xor
inc
movsb
mov
call
adc
adc
scas
or
cltd
xor
dec
test
cmpsb
shl
mov
test
test
fbld
loopne
jge
lea
into
gs
repz
cs
sub
fmul
xchg
push
ss
ret
fwait
sbb
imul
mov
adc
add
cld
mov
xchg
inc
std
xchg
addl
arpl
jle
repnz
xchg
dec
pushf
or
mov
aas
sbb
lds
pushf
mov
add
jno
mov
xchg
sub
mov
dec
jle
ss
dec
fisttpll
adc
xchg
mov
aad
in
xchg
push
daa
sub
rcrb
rorl
add
mov
aam
cwtl
push
cmp
out
lahf
pop
roll
and
jmp
xor
data16
xor
insb
inc
aad
cld
xchg
dec
mov
jo
adc
mov
jnp
loope
mov
cmp
mov
pop
pop
or
dec
xchg
push
lcall
loope
aam
lock
insb
mov
mov
or
xchg
imul
das
lret
ficompl
pusha
jno
push
scas
addr16
xchg
jae
jg
mov
cld
add
movl
loopne
jno
mov
mulps
insb
cmc
pusha
push
mov
adc
fs
xchg
test
pop
inc
pusha
aam
jecxz
enter
jno
add
pop
mov
call
xchg
add
dec
fisttpl
iret
add
or
xor
xchg
inc
gs
movsb
push
loop
fstpl
lahf
int3
aad
inc
and
mov
testb
adc
lret
push
dec
jl
xchg
xor
into
movsl
inc
mov
pop
insb
xor
sub
ljmp
xchg
inc
mov
fdivrs
cs
mov
push
and
inc
sbb
dec
xor
std
mov
into
dec
cmp
jae
cli
or
mov
inc
pop
pop
inc
and
bound
and
add
pop
dec
loope
dec
mov
push
or
or
dec
mov
adc
sbb
movsb
jp
xor
jl
cwtl
and
inc
lods
aad
add
xchg
jle
inc
push
xchg
ljmp
jle
xchg
roll
and
jne
xchg
data16
mov
arpl
cmp
insb
or
xor
mov
push
insb
adc
pop
cmpsl
adc
in
int
loop
adc
mov
nop
cmp
pop
xor
adc
dec
push
std
js
dec
adc
xchg
mov
out
dec
arpl
fidivrl
fwait
repz
mov
sahf
mov
das
push
jmp
addr16
cmp
addl
jle
into
pop
mov
adcl
sub
into
jne
sbb
mov
aam
js
imull
xchg
ss
xlat
scas
cmpsl
into
shlb
sahf
test
xchg
or
subl
push
lcall
pop
sbb
sbb
js
fs
lods
lcall
pushf
add
jae
adc
mov
pop
lahf
cmp
inc
push
and
or
jo
mov
sahf
xchg
daa
push
sbb
iret
arpl
dec
scas
lcall
out
clc
mov
es
pop
kmovb
jo
fdiv
jbe
jle
enter
inc
xchg
sub
dec
mov
jg
pop
mov
popa
mov
fldcw
inc
gs
jg
pop
sbb
test
xor
popa
cmpsl
dec
jns
loopne
dec
shll
pushf
mov
mov
fnstenv
dec
xchg
inc
outsb
pusha
faddl
lods
jecxz
rol
add
fidivl
lods
out
mov
sbb
jno
bswap
inc
push
stos
sahf
jnp
xchg
mov
inc
cmp
pop
inc
div
inc
add
aaa
jae
int
jl
nop
mov
jb
mov
or
inc
ret
mov
bnd
adc
inc
movsb
xchg
cli
mov
add
adc
add
andb
dec
mov
mov
lcall
xchg
aas
rclb
mov
jg
xchg
int
stc
and
orl
mov
fucomp
mov
insb
mov
and
enter
out
fdivrs
rorb
dec
jge
aam
xchg
sbb
ljmp
xchg
cwtl
inc
test
jmp
mov
pop
mov
leave
xchg
sub
stos
push
adc
xor
test
incb
pop
mov
push
movsb
jns
push
dec
cltd
inc
push
mov
ss
imul
lods
sub
push
push
lock
out
outsl
add
add
xor
push
xchg
in
sub
mov
push
gs
push
imul
xor
out
or
inc
fsub
je
scas
iret
add
mov
shr
pop
fsubrl
and
ret
xchg
xor
dec
and
sbb
adc
icebp
outsl
dec
iret
movsb
and
dec
sbb
stc
push
out
push
xorb
idivl
sbb
arpl
enter
jmp
inc
mov
jns
je
push
fisttpl
and
xchg
xchg
push
sbb
mov
pop
mov
prefetcht1
xor
mov
frstor
sbb
xchg
addb
lea
loope
and
scas
ret
pop
test
out
mov
hlt
aaa
icebp
outsb
lds
mov
and
in
insl
mov
ret
sbb
fistps
jae
dec
js
loope
sub
mov
cmc
push
fdivl
aam
int3
add
jle
jnp
sub
sarl
push
adc
jne
out
cmpsb
mov
mov
mov
out
stos
push
or
lock
xchg
movsb
iret
sub
enter
sub
push
inc
hlt
add
sub
pop
clc
ja
mov
mov
addb
lds
ret
loopne
and
into
mov
cmp
sbb
add
dec
dec
cmp
mov
ljmp
sub
lcall
ss
xchg
pop
cltd
outsb
pop
mov
xchg
adc
aad
stos
imul
inc
jmp
push
in
jmp
lcall
inc
xchg
jmp
lcall
jg
jg
jecxz
xchg
adc
push
sub
add
cmp
lret
add
bound
out
fnstcw
push
cmp
mov
andl
std
mov
and
cs
or
jbe
sbb
pushf
mov
fistps
cs
out
pop
repnz
inc
push
in
insb
cli
adcb
sahf
xchg
adc
dec
lretw
insl
inc
hlt
sahf
mov
cmpsb
sbb
lods
jns
jb,pn
stc
cmp
cli
movsb
fstps
std
inc
inc
mov
fsubs
sbb
inc
jmp
jns
xor
shl
adc
mov
lahf
aas
mov
pop
orl
fwait
gs
out
imul
imul
adc
lds
xchg
and
stos
add
jle
jno,pn
and
cmp
jmp
dec
mov
aam
gs
cmp
xchg
cld
cmpsl
je
and
fcoml
inc
dec
push
jp
inc
mov
in
mov
jge
cmpsl
pusha
add
outsb
fcom
cmp
push
mov
outsl
cmp
fstpl
xor
pushl
movsl
daa
ljmp
iret
mov
lret
jns
sbb
mov
dec
mov
mov
mov
aad
xchg
test
push
mov
in
adc
mov
int3
cmp
in
jp
cltd
jmp
leave
js
into
es
popa
inc
idivl
jnp
shlb
fsubrs
adc
fmul
lret
jp
lea
imul
repnz
test
rorb
mov
jg
movsl
in
outsl
lods
adc
ret
test
jne
sub
ficoml
xor
mov
pusha
xor
and
push
movl
roll
or
sub
or
outsb
ss
inc
int3
fisttps
and
in
mov
jp
add
fdivrs
scas
imul
arpl
rcr
xlat
jp
repz
loopne
xorl
push
ficompl
loop
repz
add
subb
outsb
dec
jo
add
xlat
mov
insl
push
popf
repnz
add
iret
sub
or
push
decb
ret
outsl
push
lret
cmp
xchg
stos
lds
insl
adc
popf
inc
in
add
xor
adc
fs
jnp
sbb
fdivrp
push
xor
test
adc
pop
or
ret
inc
js
xchg
movsb
clc
notb
jae
xor
decb
and
and
push
fbld
out
adc
dec
shrb
push
pop
outsb
pop
mov
cmc
add
jp
cmp
jg
sub
hlt
jne
sub
sbb
ljmp
test
xchg
push
xor
push
shrb
aad
cmp
fisttps
mov
xchg
pusha
lahf
push
lahf
stos
cmp
push
add
xor
lret
lods
int3
push
dec
in
mov
iret
xchg
lcall
xchg
push
adc
fstl
mov
mov
aaa
repnz
cmp
das
inc
outsl
fmuls
fs
mov
dec
or
fimull
push
xchg
inc
packsswb
jbe
aas
insb
int
sub
rol
repz
outsb
pop
sbb
push
test
stos
lahf
jmp
jne
cwtl
das
fdivrl
dec
push
insb
xchg
pushf
shll
fsubp
jns
sahf
imul
mov
loop
jno
sti
in
leave
arpl
fs
pop
add
out
in
test
stos
xlat
repz
jae
fucomi
loop
sbb
adc
loopne
jp
inc
pushf
jle
adc
jne
in
adc
adc
leave
in
ja
out
aam
call
clts
push
nop
mov
pop
fwait
adc
lret
adc
mov
add
or
loope
inc
mov
mov
jmp
pop
xchg
jp
push
inc
pop
das
xchg
cmp
sahf
jecxz
inc
das
lret
inc
sub
outsb
cwtl
in
or
lcall
jb
xor
cs
nop
mov
inc
pop
lods
cmp
push
mov
in
pusha
bound
cmp
mov
mov
adc
mov
cmp
mov
mov
mov
mov
sub
mov
sub
pop
xor
add
mov
pop
int
sub
fbstp
leave
imul
lcall
add
inc
shlb
cmc
negl
cmp
pop
push
jg
xchg
inc
or
sbb
push
int3
adc
sbb
or
lods
pusha
test
outsl
push
iret
std
cwtl
loop
int3
xor
das
mov
das
test
fstpt
mov
xor
mov
mov
and
cmp
orl
jno
fsts
pop
cmp
cmp
xor
pushf
clc
lds
cmp
push
sarb
pop
jne
fmuls
xchg
in
adc
xor
cmc
jnp
outsb
imul
dec
test
xchg
ljmp
fsubrs
or
cld
pushf
ljmp
outsb
int
aam
into
jne
dec
cli
jge
xchg
mov
push
je
jl
adcb
fistpll
clc
pushf
xchg
cmc
sbb
cltd
jno
fsubs
jle
and
lcall
mov
adc
lods
jmp
mov
cmp
push
outsb
ror
xchg
mov
aaa
and
popf
pop
xor
pop
outsl
inc
nop
iret
jg
xchg
push
jp
mov
mov
movl
sbb
push
add
pop
aaa
cwtl
mov
or
int3
das
negb
jp
mov
std
pop
fdiv
push
insb
lahf
sub
test
popf
adc
test
lret
daa
mov
inc
repnz
dec
mov
cld
add
push
jl
jnp
sbb
std
les
rcrl
in
cmc
out
add
mov
inc
lds
fimull
push
dec
loope
test
iret
add
je
jns
fisttpl
or
ljmp
inc
and
mov
xchg
add
jmp
and
cwtl
xchg
jg
stos
pop
push
push
test
cmp
xor
fisubs
xchg
sbb
bound
adc
imul
add
lcall
mov
mov
paddb
movsb
mov
sub
xor
xchg
lds
fcomp
inc
dec
test
and
aad
inc
xor
dec
popf
push
sbb
daa
sub
call
in
inc
outsl
jno
bound
and
sbb
mov
cmp
pop
xchg
mov
mov
inc
cltd
push
in
dec
fwait
pop
jnp
rolb
push
fs
lcall
sub
push
loop
xchg
sbb
dec
jmp
inc
test
out
and
addr16
inc
out
and
addr16
scas
hlt
adc
xchg
sbb
add
push
fisubrs
movl
sbb
and
xor
or
sub
movsb
push
out
mov
cld
jne
stos
into
add
push
aaa
xor
inc
push
std
xor
dec
outsl
and
cmp
into
sub
pop
daa
mov
pop
or
cmpsl
popf
inc
or
aaa
dec
enter
pop
pop
add
mov
subb
inc
or
mov
jb
xor
stc
or
mov
popa
fs
popa
mov
daa
cwtl
outsl
push
jmp
and
adc
sbb
dec
cmp
sbb
repnz
insb
fld
sbb
leave
insb
dec
xchg
push
adcl
mov
and
fstl
rol
fld
xchg
rorl
mov
pop
mov
stos
xchg
test
add
sub
xchg
arpl
xchg
iret
add
lret
fldt
cmp
in
push
loop
xor
jle
add
test
data16
movsb
xor
ja
lods
xchg
xchg
out
pop
stos
sub
add
decl
lods
inc
mov
xchg
jg
mov
outsl
pop
add
lods
inc
out
adc
ret
and
push
ret
aas
lcall
rolb
loopne
xchg
out
mov
cld
sbb
lods
pop
sbb
out
jp
sarl
fildl
inc
pop
adc
jb
fisubrs
mov
dec
pop
cmp
sub
int3
int
aad
or
sbb
rcrl
mov
adc
push
push
lock
fidivs
sbb
pop
mov
sub
push
jg
sub
xor
pop
sub
cmp
adc
nop
push
mov
and
add
ret
inc
cmp
dec
jns
out
push
jns
mov
movsl
dec
xchg
movsb
fisubl
or
push
pop
sub
jne
addr16
mov
mov
mov
sbb
ret
push
scas
lahf
repz
xchg
mov
shr
aam
push
xchg
sti
dec
xor
jne
dec
jbe
rolb
push
xchg
mov
xlat
out
fadds
mov
dec
pusha
jne
test
push
and
push
xchg
inc
add
popf
xchg
orb
mov
adc
subb
xor
mov
mov
andl
push
sbb
in
xchg
xor
ljmp
inc
mov
jae
fstpl
push
lds
mov
subb
mov
mov
and
mov
jge
addr16
mov
jg
movsl
cmp
mov
sbb
mulb
mov
pop
nop
shlb
jge
idivl
scas
jp
xchg
out
pop
test
add
das
repz
outsb
push
cmpsb
mov
lock
and
das
gs
inc
or
push
icebp
popa
inc
sub
jnp
and
pop
shlb
and
fistl
xor
adc
imul
mov
and
adc
mov
sub
mov
sahf
adc
mov
cli
adc
push
aas
jo
ret
addb
aad
cmp
mov
and
mov
lods
mov
stc
sub
daa
sbb
outsl
and
pop
enter
or
idivb
inc
add
dec
sti
ljmp
fdivl
add
int3
in
sbb
insb
add
inc
nop
lret
repz
stos
fisttpl
das
jmp
outsl
inc
xlat
pusha
das
pop
call
ret
insl
insb
sub
sbbl
insl
or
in
mov
and
sub
pop
addr16
insb
inc
mov
and
push
mov
cmp
fsqrt
mov
sub
inc
popa
adc
push
pop
lock
mov
inc
or
jmp
test
mov
popa
xchg
cmp
cmp
popf
lods
sbb
sahf
mulb
testl
inc
inc
cmp
fistl
mov
mov
xchg
sbb
or
movsl
andb
pop
sbb
or
xchg
test
mov
pop
xchg
into
jecxz
iret
dec
test
jl
test
loop
sub
repz
decb
roll
in
pop
jns
shl
inc
dec
mov
fwait
add
shll
jae
fsubl
mov
out
in
aam
push
popa
dec
das
cli
add
out
mov
push
mov
sub
stc
movl
cltd
cli
mov
repz
add
addr16
push
mov
insl
lea
insb
les
cltd
add
mov
aam
add
xor
push
jne
xchg
daa
mov
shrl
in
imul
out
jle
mov
xor
sbb
lods
adc
jmp
addr16
or
ss
ss
out
and
push
sbb
jae
push
or
push
pushf
adc
jne
inc
inc
mov
enter
lret
bound
and
dec
mov
cmp
subl
mov
sahf
out
push
mov
rorl
push
xor
pop
rol
push
call
mov
sub
add
enter
das
adc
outsl
test
xor
and
mov
pop
mov
imul
inc
rcrl
lock
mov
aam
iret
cltd
ret
arpl
test
inc
mov
in
sbb
adc
loop
mov
jns
xor
cmpsb
pushf
mov
cli
mov
inc
imul
xor
jbe
jnp
fmuls
sub
pop
sub
cmp
fwait
sub
daa
mov
add
orl
stc
mov
fs
adc
aaa
iret
xchg
dec
shll
mov
enter
adc
push
pop
xor
std
pop
cmp
rcl
or
push
in
jg
rclb
dec
in
sub
out
test
mov
mov
dec
push
add
sbb
xor
ss
dec
mov
daa
adc
sahf
fidivl
xchg
jge
wbinvd
sahf
js
xor
sahf
test
mulb
imul
clc
mov
push
sahf
das
js
mov
scas
lea
repnz
cmp
call
leave
dec
dec
jno
dec
adc
sbb
or
fs
pop
scas
in
sub
or
gs
lret
pop
cmp
cmc
stc
test
pusha
jo
add
fstpt
cmp
in
adc
pop
lret
push
iret
movsb
out
mov
insb
test
adc
adc
xor
push
shrl
mov
cld
cmp
jge
lock
sub
add
inc
test
and
lea
push
mov
inc
mov
add
imul
mov
test
pushf
mov
and
and
stos
lret
test
rcrl
popf
jg
inc
data16
xchg
js
scas
inc
aas
dec
ss
insb
xchg
inc
hlt
les
imul
jle
mov
mov
cs
aas
in
push
lea
mov
lods
lock
in
aas
jg
sub
jo
addr16
sbb
movsl
vpmacssdql
ret
mov
in
lcall
sbb
xchg
sar
push
movsl
addr16
xor
or
pop
pop
and
mov
inc
cwtl
int
jb
adc
repnz
sti
shl
enter
fldcw
pop
mov
and
cmp
pop
push
hlt
jp
add
gs
popa
mov
sti
cmpsb
pop
lods
std
cld
inc
mov
ret
push
sub
push
sub
les
push
sub
fwait
mov
movsb
popa
call
sahf
sahf
in
dec
leave
add
jmp
pop
movsl
loop
sub
negl
arpl
jmp
lret
mov
mov
pusha
faddp
loope
daa
les
push
mov
xor
lret
mov
pushf
mov
jbe
jns
out
or
sbb
mov
xchg
in
in
mov
pushf
fistl
scas
repz
dec
push
jo
pusha
shrd
or
xchg
xchg
test
xor
cwtl
mov
and
sahf
push
adc
mov
ja
fsub
hlt
xor
xchg
dec
xor
mov
pop
adc
mov
mov
jle
sti
orb
sbb
lret
into
mov
enter
sbb
add
mov
mov
mov
mov
jg
inc
sub
mov
xor
movsl
lds
mov
rolb
xor
cmp
in
addb
mov
je
inc
leave
dec
xchg
push
in
adc
mov
lahf
arpl
push
adc
push
cmp
xchg
fisttps
inc
repnz
dec
mov
out
loopne
adc
dec
bt
xor
cmp
addr16
xchg
cltd
cld
and
lds
xchg
push
pop
and
add
push
or
rcrl
cld
stc
pop
sub
orb
inc
imul
out
sti
jg
enter
and
add
pop
mov
push
pop
and
sbb
inc
or
jns
pop
test
jae
jo
sub
nop
andl
insb
repz
je
jbe
stos
lock
clc
flds
and
push
mov
dec
rclb
sahf
stos
xchg
mov
jo
in
pop
pop
mov
popa
push
push
xchg
add
lea
les
dec
subl
mov
ja
outsl
mov
and
cli
sub
dec
pop
sub
jecxz
xchg
insl
in
mov
mov
paddsw
repnz
stos
nop
nop
inc
sub
adcl
jo
cmp
xchg
cmp
divb
insl
sarl
sbb
frstor
fimull
mov
jae
and
mov
out
cmpsl
xchg
fcompl
mov
cmp
es
cmpsb
loopne
xchg
pop
sub
sub
lds
repnz
sbb
jp
stc
popa
mov
push
adc
pop
shrb
lcall
mov
dec
out
pop
lds
int3
lods
jmp
xchg
jl
decl
add
nop
pop
mov
pop
lods
and
add
fidivs
dec
jnp
dec
lods
das
adc
std
sar
shll
sbb
aaa
stos
cwtl
inc
lcall
aad
das
xchg
arpl
fistpll
enter
sub
inc
es
lcall
out
test
push
les
inc
fs
sti
mov
ficompl
add
ffreep
push
pop
shll
sub
push
loopne
pop
cmc
xchg
xchg
stos
movsl
into
push
divl
lahf
sti
mov
in
cld
mov
jl
inc
aaa
xor
aam
insl
hlt
cli
cmpsl
rorb
inc
pop
push
movsb
pop
xor
and
fsubs
mov
fisubs
sbb
push
push
cmp
fdivrp
loope
xchg
sub
dec
mov
lods
test
xor
and
in
enter
ret
test
adc
jb
dec
imul
xchg
sbb
repz
insl
mov
jo
daa
adc
addr16
lret
sbb
arpl
inc
movsb
pop
or
mov
iret
sub
mov
mov
movsb
cmp
and
xor
sti
inc
cmp
ja
jp
sti
std
push
xchg
inc
testl
xchg
dec
adc
push
lods
rolb
push
sub
rolb
jmp
jno
pop
add
mov
jne
pop
pop
cmp
mov
sarl
fidivrs
pop
jne
roll
ss
sbb
addr16
in
jno
mov
jp
mov
insl
adc
into
into
out
scas
lods
aaa
jmp
xchg
leave
sub
jge
mov
dec
sahf
inc
idivl
scas
test
mov
loopne
rorl
int3
iret
scas
rcrb
shlb
fdivl
gs
xchg
cmp
imul
ss
pop
iret
pop
mov
sbb
cmp
das
js
and
mov
hlt
lret
and
jae
xchg
gs
push
jecxz
gs
sbb
popa
pusha
push
sti
sub
outsb
mov
mov
mov
xchg
push
xorl
imul
cmpsb
push
inc
ret
push
mov
mov
lds
mov
or
nop
daa
xchg
inc
imul
jnp
jecxz
jns
addr16
mov
mov
iret
sti
add
xor
cld
pop
mov
adc
mov
xchg
dec
dec
sbb
mov
clc
gs
bound
lods
iret
mov
loopne
push
xor
push
sbb
sbb
fxch
cmpsl
adc
jb
mov
cli
pop
mov
cmc
imulb
in
xorb
or
inc
scas
dec
mov
lahf
daa
xlat
in
jle
mov
mov
adcl
mov
sub
popa
stc
ror
adc
iret
leave
fcoms
jne
and
cmp
lods
stc
push
in
imul
adc
sarb
jno
push
mov
push
call
mov
jmp
cmpsb
sub
js
dec
mov
aad
dec
insb
cs
fxch
data16
lea
lds
sub
mov
jp
outsl
jne
push
popl
mov
fimull
cmp
das
repz
xor
push
push
pop
sbb
or
repz
cmp
addr16
leave
push
jo
jno
mov
shrd
xor
mov
leave
jg
pop
pop
aad
xorb
fildll
cmp
mov
jmp
pop
sbb
test
pop
adc
out
popa
popa
dec
mov
jae
sub
lea
loopne
ret
rolb
ficoml
pop
add
loopne
or
add
sbb
push
loop
inc
cli
xchg
pop
inc
push
fldt
idiv
lret
dec
cli
or
mov
sbb
mov
idiv
adc
stc
hlt
rcl
jbe
inc
and
sahf
ja
adc
fidivs
cli
cmp
cmp
jle
jg
push
jns
jae
in
xlat
inc
movsl
xor
or
ret
rcr
adc
lods
out
add
dec
fnsave
test
or
loope
popa
fnstenv
adc
mov
loopne
jl
test
js
push
mov
xor
les
divb
cmp
call
push
std
mov
inc
out
repz
push
loop
pop
movsl
test
xchg
testb
jns
fnstsw
mov
and
outsb
mov
mov
js
xor
and
test
ljmp
add
cmpsb
aas
ret
pushf
lock
mov
test
mov
sbb
fldt
adc
cwtl
jns
cmp
rcr
cmp
lcall
or
popf
enter
xchg
push
jp
idivb
or
inc
dec
jl
mov
xchg
sti
ja
xchg
subb
data16
mov
call
jnp
roll
hlt
arpl
pusha
testl
xchg
mov
test
stc
xchg
cmpsb
scas
inc
repz
mov
sbb
cmp
sbb
or
xor
fwait
mov
ljmp
jbe,pn
loope
xchg
push
js
out
cmp
mov
js
push
xchg
outsb
mov
addr16
push
movsl
enter
mov
and
pop
xchg
in
or
pop
xor
inc
shr
adc
rcr
rol
loopne
jmp
cmp
mov
scas
pusha
pop
test
insl
jge
pop
sbb
inc
mov
out
dec
rclb
sbbl
mov
sahf
in
jae
fcompl
inc
and
xor
xor
outsl
mov
lods
out
dec
pop
rolb
in
sbb
popf
mov
rolb
scas
mov
adc
adcb
inc
xchg
daa
cli
pop
sbb
mov
outsb
inc
movsl
jge
mov
roll
pop
xor
out
jg
push
and
adc
rcll
xchg
jo
popf
xor
call
mov
bound
cmc
xor
jbe
or
mov
sti
push
aam
add
cmc
mov
orb
addr16
xor
in
pop
mov
pop
and
sbb
jg
jae
mov
loope
jecxz
add
aaa
cmpsb
adc
lods
add
loope
inc
mov
and
lock
test
cmp
ljmp
aaa
jg
xchg
mov
mov
jge
stos
ret
jbe
enter
or
je
in
loope
jno
shrl
aas
xchg
adc
sbb
push
iret
add
jnp
jb
out
sbb
cmp
inc
push
ljmp
xchg
pushf
mov
adc
dec
mov
push
loop
imul
jae
fiaddl
add
sbb
lahf
sub
mov
pop
sbb
jbe
cmp
pop
mov
or
mov
aam
aas
cmp
mov
push
outsb
cmp
mov
sbb
outsl
inc
add
pop
xchg
aaa
sub
mov
test
cmpsb
jmp
repnz
mov
test
inc
jmp
mov
dec
jl
pop
inc
aaa
insb
and
pusha
ret
out
inc
xor
or
iret
sbb
hlt
adc
ja
pop
xor
mov
fcoml
lds
ret
xchg
sbb
cmp
das
sub
sub
insb
mov
inc
xor
movsb
call
pop
shll
pushf
call
out
jmp
push
xlat
imul
popf
rcll
and
sbb
scas
pop
mov
outsb
aaa
imul
add
push
cli
aas
pop
pop
out
mov
add
and
mov
pop
mov
jmp
adc
xor
xchg
stos
lea
inc
mov
loope
push
or
andb
add
push
imul
dec
sbb
fs
mov
stos
aad
sbb
inc
outsb
push
cmp
push
mov
push
arpl
dec
fucomi
fsubp
pop
fstp
fldlg2
movsb
sbb
jo
xor
jo
jne
jae
loope
sub
mov
inc
in
lods
mov
and
lods
push
mov
movsb
mov
sbb
pop
jg
incb
jl
mov
clc
mov
dec
leave
call
pop
cmp
movl
test
fcom
push
pop
cmp
stos
or
clc
rol
add
mull
in
insl
aam
xlat
xor
push
loope
int
lds
or
pop
adcl
into
iret
pop
outsb
adc
xchg
add
cmp
gs
ja
cmp
and
mov
rorl
or
jecxz
inc
loop
stos
ss
mov
adc
movsb
mov
and
xchg
movlps
ret
sub
inc
stos
mov
dec
movsb
and
mov
xlat
xchg
std
data16
lahf
and
fsubrs
jnp
test
jb
pushf
outsl
or
mov
add
roll
sub
cwtl
imul
jg
jne
cli
mov
pop
sub
clc
pop
sti
add
cmp
mov
out
fadds
pop
sbb
ret
sbb
mov
in
ja
xor
add
enter
cmpsl
shlb
leave
pop
call
add
dec
xchg
fisubs
mov
in
pop
jp
cli
outsb
lds
loop
ja
movsl
lret
adc
fst
jp
mov
sub
add
sbb
jo
aam
push
mov
and
or
cmp
shrl
cmp
pop
lock
fldenv
add
fnstsw
push
dec
pop
insb
roll
cmpl
or
xlat
dec
pop
mov
test
mov
pusha
mov
notl
xchg
sub
in
xlat
jae
cmp
push
lret
icebp
icebp
cmp
hlt
bound
shl
rorl
ds
fs
add
lea
add
stc
mov
xchg
add
xchg
lret
push
sub
rcr
adc
mov
scas
mov
sti
fildl
call
dec
or
popa
sbb
lea
cltd
sbb
jge
xchg
mov
xchg
xlat
test
dec
loop
daa
sarb
cmp
dec
or
cs
adc
je
or
mov
adc
loopne
sbb
mov
xchg
and
mov
dec
sbb
xor
leave
dec
push
add
scas
xor
shll
and
pop
jge
xor
out
inc
mov
aas
xchg
pop
add
mov
cld
pusha
and
nop
daa
mov
dec
fisttpl
pushf
mov
xchg
cli
ljmp
popa
sub
andl
cmp
shrb
cs
jecxz
inc
lods
pop
sub
push
add
push
lahf
push
loop
push
push
sub
jne
sahf
pop
jl
inc
jo
stos
icebp
in
mov
je
push
mov
sbb
out
hlt
sbb
inc
mov
cmpsb
pop
ja
dec
xchg
pop
mov
jae
xchg
das
lock
lds
insl
das
ret
push
movsb
ret
test
fbstp
aas
fmul
pop
xor
jl
pop
je
out
loope
enter
sti
sahf
addl
test
enter
adc
push
gs
fcomip
cmp
pop
nop
pcmpgtd
xchg
sbb
xlat
stos
fmuls
dec
outsb
and
sti
cmp
sub
jecxz
push
sbb
pop
push
and
xchg
out
xor
outsl
faddp
add
test
rol
mov
xchg
in
fbstp
jno
push
push
imul
dec
fsubrs
in
insb
fstpt
pop
mov
fcomps
sti
jne
notl
mov
and
push
in
adc
add
iret
repnz
outsl
ficoms
push
pop
imul
fdivs
stc
push
stos
pop
xor
rolb
scas
aad
lock
in
lock
jo
or
imul
sub
sbb
cmc
adc
dec
sbb
sbb
xlat
mov
add
jne
and
shlb
addr16
push
pop
repnz
lcall
push
lock
sahf
push
pop
pop
std
lods
sub
ljmp
es
stos
push
enter
sbb
mov
js
sub
xor
hlt
cmpsl
xlat
jno
lret
sbb
jmp
mov
sub
mov
add
dec
inc
push
lods
xchg
pop
push
test
shll
fistpl
and
inc
push
xchg
imul
in
mov
aam
add
push
icebp
jno
mov
pop
push
cli
aas
pushf
imul
mov
adc
add
jb
daa
lods
mov
lret
dec
sub
adc
sti
dec
fisubrl
mov
repnz
dec
shlb
mov
js
cmp
jnp
add
inc
jne
adc
dec
and
lock
dec
int
popa
int
data16
dec
repz
stos
cmpl
sub
fsts
push
xorl
cmp
jmp
faddl
jno
int3
jno
xor
adc
mov
mov
lahf
daa
adcl
pop
xchg
inc
push
sbb
movl
popa
aaa
pop
mov
lret
popf
lods
dec
imul
fs
cmp
data16
sbb
mov
aam
sahf
and
scas
cmc
pop
loopne
adc
or
hlt
in
cmpsl
in
push
hlt
add
cmp
dec
jecxz
and
pop
jno
or
repz
sub
fwait
outsl
je
mov
jg
fidivl
sbb
sbb
int
call
nop
or
idivl
js
stc
adc
sbb
push
inc
xor
insl
lret
xor
jle
push
dec
and
cmp
xlat
cmp
les
xor
imul
nop
lods
sti
and
aas
mov
adc
sub
mov
cmp
lcall
jl
loope
mov
add
cltd
outsl
jo
filds
gs
sub
imul
pop
jbe
adc
cmpsl
mov
xchg
ds
add
inc
jl
dec
mov
cmp
cmpsb
jge
jo
sbb
xchg
out
insb
imul
dec
nop
mov
lock
push
call
inc
jge
mov
fisttps
popa
dec
sti
xchg
int
jae
and
lock
push
hlt
mov
out
push
test
std
imul
mov
add
mov
decb
jl
mov
cltd
lret
rclb
pusha
mov
outsl
push
leave
pop
int
scas
dec
cwtl
lcall
hlt
imul
lret
xchg
bound
negb
xchg
lahf
xor
in
mulb
mov
pushf
push
and
xor
lret
es
mov
cwtl
shrl
shrl
sahf
lret
repnz
push
ficompl
push
scas
dec
xchg
shlb
adc
dec
loope
pop
pop
out
mov
jg
mov
aad
jge
jo
xchg
add
jg
ret
sub
jp
iret
mov
mov
jb
ds
mov
add
cmpsl
dec
mov
xchg
mov
xor
out
jo
cli
fwait
and
out
jo
cmp
mov
rcll
les
pop
pop
add
adc
pshufw
repnz
jo
fistpll
xor
sbb
xchg
sbbb
fildll
jae
clc
mov
and
sarb
fisubl
push
in
mov
or
ljmp
pop
xchg
aaa
or
sarb
sub
wrmsr
inc
fcompl
popf
jnp
jnp
in
xchg
test
push
je
adc
int3
mov
int3
or
cmp
lahf
xorl
mov
push
pop
xchg
mov
test
leave
push
loop
cmpb
or
mov
mov
xchg
rol
dec
mov
lds
js
out
pop
out
pop
cs
mov
lods
pop
mov
mov
arpl
dec
cmp
pop
inc
repnz
daa
mov
mov
mov
jo
cmc
jne
rcrb
inc
mov
cli
bound
push
loope
insl
stos
cmpsb
outsb
js
adcl
outsb
or
dec
add
loop
cltd
push
pop
push
or
sbb
or
lret
loop
pop
jmp
imul
popf
ret
in
fs
mov
fnstcw
pop
xlat
sub
nop
cld
dec
ret
stos
hlt
pop
mov
les
jecxz
mov
pop
out
cmp
test
jmp
cmp
add
and
push
dec
push
es
pop
dec
pusha
adc
std
adc
or
and
out
cmp
jns
pop
jecxz
lds
outsb
loope
outsb
dec
leave
mov
cmc
lock
rorl
enter
loope
push
test
mov
fcoml
cmp
jne
cmpsb
leave
test
js
repnz
lret
add
stos
mov
fcmove
shll
cmp
sub
and
divb
push
mov
jmp
xchg
loope
and
fcoml
jnp
dec
sti
in
xchg
stc
or
jle
xchg
cmpsb
jno
cmpsb
roll
inc
pop
pushf
gs
mov
sbb
call
xchg
cmc
mov
mov
jnp
movsb
inc
sub
sub
shl
iret
add
push
int3
jae,pn
lods
popf
ret
pop
sub
lret
jb
jo
ret
adc
hlt
aam
testb
test
add
fisubl
mov
push
jge
fistps
pop
or
lds
mov
adc
xchg
jae
push
mov
push
sbb
xlat
ret
adc
inc
xchg
xorb
insb
pop
lods
add
call
lods
cwtl
daa
mov
insl
xor
sub
js
xchg
cltd
iret
test
pop
xor
aam
mov
fwait
js
shrb
jmp
add
sbb
rcl
and
insb
and
mov
adc
rol
pop
push
jns
inc
lock
push
iret
sbb
push
xchg
dec
stos
cmp
pusha
push
orl
cmpsb
rorl
dec
icebp
xor
or
mov
mov
mov
pop
sbb
cmc
hlt
je
xor
std
loop
sbb
add
jge
cmpsb
jb
add
cmp
push
daa
push
mov
mov
lods
pop
repnz
leave
pop
loope
sbb
mov
fisubrs
clc
xchg
cmpsb
mov
scas
in
in
cmpsb
arpl
in
jp
fnstsw
iret
cmp
dec
in
adc
pop
jae
or
movsb
icebp
inc
lcall
add
mov
xor
icebp
xchg
cmp
fisubs
popa
push
mov
xchg
cs
cs
and
xchg
je
add
push
sbb
mov
sub
mov
jno
mov
or
and
dec
aam
or
fisttpll
xor
mov
je
jle
leave
cld
mov
gs
xor
mov
xor
dec
or
out
dec
mul
mov
push
fwait
pop
and
cmp
or
sbb
xor
outsl
stos
add
mov
mov
lods
jb
roll
push
movsl
push
fnsave
stos
flds
enter
add
or
movsb
xor
stos
mov
incl
jle
pop
add
mov
cld
sahf
in
mov
add
jge
pushf
int
pop
jp
int
mov
lods
popa
aam
lcall
mov
fidivs
dec
adc
cmc
jbe
cmp
loop
xchg
sarl
fsubrs
pop
dec
dec
clc
push
lret
imul
nop
mov
addr16
push
push
jmp
test
and
outsl
pop
pop
dec
int
inc
push
sub
sti
out
mov
jge
sub
stc
cs
subb
aad
and
outsl
jmp
clc
ja
out
sahf
dec
test
lcall
in
xor
stos
sbb
test
add
mov
mov
sti
inc
mov
fbld
jne
push
cli
fs
cmp
or
dec
pop
jp
lahf
cmp
ret
stc
cmp
add
lea
inc
insl
ret
bound
or
loop
mov
dec
jge
std
fildl
cmp
cmp
lret
xchg
or
push
fnstenv
aad
lret
aaa
subl
pop
mov
xchg
and
mov
sub
mov
repnz
inc
inc
ss
dec
push
xorb
popf
pop
bswap
aam
inc
popf
loope
and
enter
cmp
cmp
stos
das
sbb
loopne
addl
inc
imul
out
out
fdiv
dec
jno
loop
loope
test
add
mov
out
pop
push
fmuls
mov
sahf
xor
xor
xchg
adc
cmp
je
or
incl
mulb
jle
gs
mov
gs
push
js
lods
in
stos
or
std
push
call
dec
xor
or
cmc
pop
jl
push
inc
insb
push
jns
loope
xor
jmp
inc
test
xor
ljmp
xor
cltd
sbb
sub
sbb
and
aas
in
je
fsts
mov
xchg
imul
jae
mov
pushf
inc
inc
or
aam
loopne
xchg
and
mov
mov
test
data16
jl
test
adc
adc
adc
rcrb
pop
repnz
daa
xchg
pop
mov
add
outsl
jbe
sarb
xchg
popf
mov
inc
clc
mov
arpl
sub
fbld
addr16
es
test
sbb
loop
fucomip
leave
movsl
loope
mov
jb
sub
push
jo
insl
sub
sarl
pop
cmp
repz
loope
add
push
jp
lods
int3
mov
test
lcall
jb
mov
adc
mov
sbb
push
or
xchg
movsb
pop
es
sbb
mov
pop
ret
or
jge
push
aad
xor
in
mov
dec
or
pusha
int3
roll
scas
repz
shll
fwait
xor
push
popf
dec
aaa
movsl
sti
sahf
les
ja
add
xchg
gs
sbb
pusha
insl
arpl
ds
loop
int
stc
pop
jno
ret
call
mov
lock
aad
mov
sbb
lods
pop
mov
icebp
fwait
pusha
popf
mov
fmull
xlat
push
mov
mov
sub
jg
or
rcrl
push
jo
hlt
cmp
sbbl
jno
addr16
and
sar
sbb
repnz
pop
mov
add
sub
enter
add
bound
mov
xchg
das
lret
cmpsb
add
jns
and
xor
pop
mov
inc
out
jnp
jae
aas
add
movsl
mov
sbb
addr16
xchg
lds
mov
rorb
jnp
inc
push
sbb
jg
jo
fcomps
mov
mov
daa
aad
adc
in
mov
mov
popf
sub
sahf
daa
mov
lods
push
dec
mov
jl
pop
leave
insl
in
cmp
decb
insb
aad
cmp
test
inc
lods
out
mov
aas
jnp
pop
lds
ljmp
inc
fisubs
test
insb
ret
mov
inc
imul
jno
repnz
insb
cltd
or
mov
mov
and
xchg
mov
in
int
mov
stos
push
add
jae
sbb
loope
jmp
in
ret
cli
and
cmpsl
sbb
xchg
mov
fs
stc
jg
stos
cmp
lret
fcomps
hlt
aaa
and
sahf
fcomps
movsb
lret
shrb
cmp
imul
in
add
add
es
jmp
fisubs
aad
ja
fsubs
add
lret
cld
xchg
push
bound
lret
sub
mov
xchg
dec
loopne
cmp
int
ret
xor
lea
dec
es
push
movsb
lret
mov
sbb
jecxz
push
insb
inc
cmp
cltd
mov
inc
push
mov
outsl
insl
out
xchg
pop
div
sub
fildl
xor
std
pop
adc
dec
nop
mov
ficompl
stos
xor
in
out
xor
fs
xor
mov
sub
and
mov
bound
xor
in
pop
loopne
sbb
inc
test
lock
xor
les
and
sbb
std
cli
pop
mov
ja
push
pushf
add
push
mov
dec
xchg
fidivrs
sub
out
ljmp
fwait
lret
mov
movsl
sbb
jl
sarl
into
xor
xchg
adc
inc
jp
pop
and
rcrl
test
cmpsb
ret
clc
add
mov
sbb
or
push
sub
imul
clc
shrl
sub
bound
test
and
and
outsb
dec
fdiv
aaa
push
fdivr
aam
fs
sub
pop
sbb
mov
pop
aad
mov
arpl
mov
xchg
mov
jle
aad
scas
or
dec
aam
xchg
test
adc
xor
adc
push
inc
clc
xor
dec
mov
mov
cltd
ljmp
adc
clc
xor
icebp
bound
mov
mov
imul
insl
ljmp
fwait
mov
fwait
xchg
or
push
clc
addr16
stos
inc
div
pop
lea
add
adc
pop
add
stos
arpl
rorb
iret
adc
icebp
sbb
adc
mov
and
cmp
add
inc
fisttpll
popa
jmp
mov
jno
ficomps
pop
add
xorl
adc
lret
jns
lods
stc
jo
loope
popf
mov
scas
dec
bnd
mov
iret
mov
popf
call
roll
outsb
into
add
dec
je
mov
adc
js
mov
scas
cmpsl
mov
pop
mov
popf
addr16
mov
data16
scas
add
sub
dec
push
sub
out
rorb
and
mov
jns
jns
scas
and
loop
rolb
xor
dec
push
push
jne
push
inc
mov
xchg
push
ss
daa
fcompl
loopne
daa
xor
jle
rclb
xlat
cmp
and
es
ret
les
add
mov
test
int
dec
lock
dec
in
push
icebp
test
add
fdivp
push
xlat
out
ljmp
dec
bound
loope
sbb
pop
xchg
push
in
sub
shll
outsb
cld
mov
inc
ljmp
rcrl
jl
dec
out
inc
lock
cmp
dec
ret
xor
push
pop
out
in
stc
test
fbld
hlt
jae
and
fxtract
dec
sub
add
pop
jno
out
and
cltd
mov
push
push
and
cmp
push
dec
aam
inc
cmp
or
out
push
mov
jnp
xor
inc
adc
sub
jl
push
icebp
fdivp
outsl
xchg
or
or
mov
pop
jnp
or
jge
adc
pusha
and
lret
data16
addr16
rcl
jle
cmpsl
adc
nop
fisttpll
movsl
movsl
xor
hlt
adc
arpl
clc
ja
in
push
cmpb
xchg
xchg
pop
inc
out
xchg
fbld
xchg
repz
lahf
pop
adc
fidivrs
adc
push
push
stc
fcmovbe
into
lods
adc
and
dec
cltd
sub
into
mov
leave
sub
popf
mov
pop
mov
inc
stos
push
sti
adc
ss
dec
inc
insl
mov
xchg
dec
or
testl
les
inc
js
fldcw
sub
aam
jae
movsl
jmp
cmpb
out
ds
sbb
dec
fdivl
mov
fnsave
xchg
xchg
pop
int3
dec
insb
cmp
ficomps
frstor
movsb
std
sub
lcall
jp
leave
leave
mov
stc
jle
jge
cmp
es
xlat
push
clc
xor
cld
mov
mov
add
or
js
enter
pop
inc
das
xchg
fdiv
out
xchg
add
mov
cmp
clc
mov
jo
dec
cmp
pop
fwait
push
pop
lods
mov
xor
test
mov
loop
je
js
or
mov
daa
mov
iret
cld
add
lcall
lds
sbb
hlt
scas
mov
lods
jecxz
xchg
jno
outsl
fsubl
mov
ljmp
mov
mov
das
sbb
cmp
shrb
push
cmp
lea
xchg
jo
faddl
in
push
stos
xchg
lods
insl
sbb
jo
mov
ss
cmpsl
jle
jle
mov
inc
add
push
ret
xchg
jmp
stos
outsb
fldcw
mov
fs
sahf
dec
xor
push
cmp
std
lea
jl
and
js
adc
lret
gs
mov
mov
lahf
mov
stos
pop
dec
movsb
rorb
xor
daa
xchg
test
pop
popa
jmp
pop
loopne
pushf
dec
and
xchg
sub
pushf
add
mov
inc
xchg
pop
push
out
adc
xchg
inc
xor
pop
add
outsl
or
mov
cmp
out
idiv
xor
testl
out
mov
add
loope
pop
add
jns
sub
insb
cmpsb
add
dec
imul
je
inc
pop
and
push
sbb
inc
pop
call
mov
inc
lock
mov
scas
mov
sbb
dec
xor
cmpsb
push
jne
lea
popf
dec
repnz
shlb
loopne
std
stos
add
push
lahf
mov
pop
scas
push
adc
jecxz
subb
push
sbb
lds
pop
movb
dec
dec
lea
add
lds
out
cmp
in
cltd
xor
push
xor
mov
and
mov
cwtl
mov
dec
mov
inc
inc
jle
jg
clc
jecxz
or
add
inc
cmpsl
fcom
int
inc
das
icebp
xor
repz
cmp
or
das
lds
mov
repnz
cltd
std
pop
jg
push
xor
es
pop
int
cmp
std
jo
or
xchg
in
test
js
fisttpll
push
cmpsb
mov
xchg
sbb
dec
dec
shll
lea
or
int3
stos
aaa
out
push
xchg
dec
sbb
orb
mov
jno
and
push
ret
call
mov
sub
imul
repz
jbe
add
insb
push
push
lret
js
sub
out
bound
aas
and
jge
pop
add
pop
dec
jb
dec
pop
pop
add
into
test
cmp
test
add
inc
shlb
cmp
sub
dec
aam
mov
adc
mov
rolb
pushf
cmc
push
andb
into
neg
push
aas
rcr
xor
xor
scas
add
pop
xchg
adc
lahf
or
sub
cltd
dec
add
mov
cmp
xchg
pop
sub
push
push
ret
mov
sbb
mov
aaa
test
pop
dec
push
jb
mov
in
lcall
in
pop
mov
sti
cwtl
imul
jne
add
xlat
mulb
adc
cmc
push
adc
xchg
cwtl
dec
mov
int
or
sub
mov
outsb
jb
imul
mov
sub
push
mov
mov
pop
push
dec
push
fstpt
mov
add
dec
arpl
ljmp
dec
popf
and
xchg
movsl
stos
ljmp
cli
pop
jns
pop
sti
sbbl
jno
stc
dec
or
sti
cmp
fidivl
popl
ja
adc
into
pop
test
outsl
inc
cmp
xchg
add
push
dec
lahf
sbb
daa
je
icebp
sbb
and
aaa
aaa
xchg
or
dec
cmp
xchg
lret
add
xchg
leave
xchg
mov
dec
xchg
mov
jb
inc
fistl
fsubs
pusha
ds
adc
xchg
cwtl
leave
pop
loop
mov
daa
xor
xor
inc
shlb
sub
dec
jno
xchg
xor
add
fisubrs
mov
jo
dec
xor
andb
push
imul
cmpl
sbb
rcll
jo
add
xchg
out
and
aam
mov
pop
mov
pop
sbb
int
mov
sub
mov
aas
imul
cmpsb
lret
xchg
pop
loope
into
aam
mov
insb
ds
sub
loopne
push
ja
hlt
nop
lods
ret
xchg
adc
pop
push
loope
ljmp
cs
cmp
push
jns
cmp
mov
cwtl
inc
xlat
inc
sbb
mov
mov
loopne
gs
dec
pop
or
xor
sbb
jns
jo
into
inc
gs
xor
mov
cmpsb
pop
inc
mov
sbb
rcl
movsb
push
inc
jp
inc
sub
loopne
adc
dec
negl
test
fmull
stc
jb
sti
jns
hlt
adcb
call
lret
mov
je
adc
add
adc
mov
popf
mov
jge
call
lcall
mov
xor
rcrb
call
xchg
sbb
iret
xchg
fwait
dec
cmp
loope
jne
iret
insb
and
je
enter
mov
mov
clc
cltd
adcb
in
mov
jns
movsl
test
adc
mov
xchg
and
ficomps
pop
mov
pop
decl
xchg
das
pop
leave
mov
mov
fucom
iret
pop
arpl
mov
sti
lahf
ss
sbb
adc
jno
adc
into
clc
xchg
sub
mov
cmc
mov
push
sbb
ficoml
lcall
ja
movsl
push
inc
ja
pushf
jl
adc
fs
mov
and
adc
sbb
mov
shl
pop
add
mov
lahf
pushf
cmp
xchg
push
je
cmp
addl
adc
in
in
cmp
mov
or
in
adc
push
pop
mov
and
sub
js
jae
imul
mov
pop
adc
pop
mov
cmp
mov
mov
or
enter
dec
push
or
add
cwtl
lcall
xchg
push
push
imul
imul
mov
ds
sbb
ljmp
faddl
es
clc
negl
sbb
pop
mov
xor
push
xchg
aaa
push
mov
fsubrs
in
xchg
dec
and
stos
shlb
sub
pop
xor
cld
scas
in
lock
fidivs
test
inc
lcall
dec
push
add
js
xor
rcrl
or
movsb
push
xchg
icebp
jle
xchg
mov
mov
sahf
enter
out
lret
ljmp
cmpsl
push
push
ss
enter
rol
pop
cmpsl
lods
pop
aam
fstl
jbe
fwait
push
xlat
loopne
mov
bound
push
jl
std
jmp
lea
out
gs
adc
push
arpl
notl
outsl
add
pop
in
ss
pop
jb
mov
xor
or
cs
jns
adc
xchg
fsub
popa
out
fidivl
xchg
xchg
add
lea
sbb
sarl
lea
sahf
stc
inc
cwtl
mov
nop
dec
lds
enter
add
jno
sub
out
pop
mov
adc
sti
movsb
jmp
mov
xor
scas
mov
xor
lods
ret
pop
push
in
scas
or
xchg
int3
mov
jno
jne
lret
jl
xchg
pushw
movsl
gs
or
jmp
insb
sbb
mov
fs
stos
push
lcall
fisubrs
mov
test
repnz
jb
fidivrs
into
jnp
out
cli
cli
aaa
lcall
pop
jle
push
inc
or
dec
rcll
pop
jle
int
push
push
inc
cld
xchg
add
jae
push
dec
add
int3
cmpsb
insl
lahf
mov
cmp
dec
cwtl
mov
sti
loopne
xchg
jp
add
jecxz
loope
and
mov
aas
mov
outsb
sti
dec
mov
sbb
xchg
mov
xchg
mov
cmpsl
fdivrp
mov
loope
bsr
aad
pop
sbb
rolb
and
mov
inc
or
jo
sub
mov
pusha
and
aad
adc
mov
imul
mov
adc
inc
mov
sub
sub
test
dec
mov
xor
inc
lock
pop
jl
sub
xor
cmp
sti
pop
mov
pop
popa
cmpsb
push
pushf
stos
or
adc
insb
xchg
jnp
mov
inc
mov
sbb
addr16
sbb
mov
dec
jg
out
and
or
jo
inc
cmp
lods
xchg
pop
scas
div
nop
rol
jl
mov
mov
push
filds
lods
sysexit
or
mov
popa
mov
add
lock
sbb
ljmp
cmp
shlb
loop
out
sbb
jecxz
pop
lock
jbe
outsb
ja
push
popf
pop
ljmp
dec
push
add
cmp
push
out
push
mov
push
pusha
imul
push
fdiv
sbb
or
add
lock
daa
xor
pop
out
int
les
mov
pop
es
mov
sbb
adc
adc
jb
dec
mov
cwtl
ret
add
in
push
nop
repz
dec
push
jmp
sub
decb
xchg
stc
dec
test
xor
xor
mov
popw
mov
cmp
mov
lds
sub
and
fs
cmpsl
fidivrl
ret
mov
stc
repz
aad
adc
add
imul
shr
loopne
jmp
cli
outsl
jb
jne
add
push
jp
bound
lret
jne
pop
push
call
mov
mov
inc
shlb
xor
mov
dec
fiadds
fldcw
ret
ror
mov
pop
jo
jb
inc
and
ss
xchg
add
or
call
cmp
jecxz
test
pop
mov
inc
fisubs
mov
cmovg
mov
xchg
or
xchg
sarb
adcb
sbb
sub
jae
jnp
pop
pop
cmc
mov
sbb
fmuls
clc
mov
jle
jg
clc
jne
add
mov
pop
test
pop
loope
pop
jb
xchg
negb
clc
sbb
mov
js
rcl
push
in
pop
call
sub
sub
imul
pop
shl
mov
mov
jmp
and
aad
orb
xor
sarl
dec
lock
mov
fnstenv
sbb
or
xor
sub
push
xchg
xor
sbb
inc
jge
jge
lea
insb
mov
aas
and
lods
pop
pop
stc
xchg
cmp
je
xchg
lcall
outsb
insl
movsb
das
xchg
inc
sbb
adc
arpl
xor
mov
std
int
stc
lods
pop
rorl
test
cmp
aas
sahf
pushf
test
enter
cwtl
adc
jg
fadd
icebp
mov
xchg
push
xor
cmp
out
push
cmp
icebp
mov
and
mov
adc
push
jo
pop
lcall
sub
test
jnp
sbb
adc
pushf
push
xchg
hlt
out
xor
sar
cmp
div
dec
mov
push
push
xor
sbb
ljmp
in
subb
push
ret
scas
in
into
jb
inc
pop
add
pop
jae
and
add
ljmp
sbb
and
push
jecxz
loope
dec
lods
push
aam
and
insl
stc
sbb
cltd
out
sbb
mov
pop
cmp
mov
jecxz
icebp
push
pop
mov
repz
xchg
clc
mov
lea
mov
lcall
push
test
dec
push
pop
cmp
das
nop
or
pushf
lds
popa
fwait
add
lods
ds
das
outsb
ffree
addl
fs
push
stos
jmp
loope
xlat
std
cmp
js
jecxz
mov
jo
mov
mov
mov
bswap
mov
xchg
test
fistpl
cld
jmp
dec
cs
inc
mov
cmp
sbb
jno
mov
ds
jp
push
call
cmpsl
clc
add
dec
xchg
lds
inc
or
andb
fcompl
stc
mov
xchg
imul
loopne
fsubrl
push
sub
adc
aas
push
sti
add
arpl
js
fadds
lock
xchg
call
lods
cld
cmpsl
xchg
jnp
out
scas
sub
scas
dec
or
or
fisubl
es
shrb
dec
cld
into
imul
inc
test
inc
cli
dec
rcr
addr16
push
inc
xor
push
iret
es
daa
pop
add
add
pusha
push
fcoml
adc
lea
and
jl
mov
push
mov
jl
cltd
mov
or
call
lea
pusha
sub
divb
and
mov
push
arpl
aam
mov
xchg
into
fmuls
push
decb
cld
push
loop
sub
xor
jb
subb
data16
add
or
sbb
and
pusha
test
adc
sahf
insb
cmp
das
adc
sub
dec
lea
adc
test
inc
insb
cmovae
adc
push
push
lret
nop
shll
lods
idivb
cs
std
mov
dec
add
sub
shlb
xchg
dec
es
int3
inc
bound
jns
rclb
loopne
data16
add
inc
or
ljmp
rcrb
and
cmp
stos
mov
or
leave
adc
into
imul
adc
imul
imul
push
insl
adc
adc
lcall
ret
fisttps
das
es
pop
add
push
int3
int3
push
mov
mov
dec
andl
lahf
enter
into
mov
loopne
xchg
pop
sar
xchg
das
cmp
mov
clc
sbb
das
ja
ret
pop
fdivs
scas
pop
aaa
mov
aad
jae
xor
jbe
inc
sub
sub
scas
ucomiss
push
es
scas
pop
adc
pop
cmp
ljmp
pop
cmpsb
jmp
xlat
and
clc
dec
gs
das
sub
adc
add
xchg
inc
testl
aaa
xor
je
add
pop
adc
ret
xor
sti
shlb
sbb
and
out
mov
mov
cmp
cmp
or
add
push
adc
inc
enter
popf
aaa
push
and
xor
cwtl
testl
jae
xor
push
mov
mov
inc
mov
sti
adc
xor
pop
adc
mov
adc
hlt
xchg
dec
out
adc
and
xchg
xlat
out
fisubl
push
mov
cltd
xor
xor
outsl
lock
imul
je
xor
sbb
push
mov
js
int3
arpl
dec
jg
lea
clc
loop
jnp
loopne
imul
mov
pop
pop
mov
js
dec
mov
jp
pop
test
dec
rcrl
sub
call
sahf
jg
pop
cltd
popf
fdivrs
jnp
and
mov
je
pop
cmp
sub
cmp
jns
cld
mov
sub
daa
sbb
mov
lahf
mov
jle
xchg
faddp
or
neg
cmp
sbb
dec
add
repz
movsl
sub
lret
inc
mov
fistpl
shll
cmpsb
mov
mov
mov
push
je
push
push
xor
mov
bound
inc
iret
test
xchg
pop
jne
leave
mov
push
jecxz
movsb
sub
xlat
adcb
stos
fdivrs
mull
loop
ss
test
jnp
jl
cltd
and
push
in
cltd
not
push
jle
xlat
test
and
mov
adc
mov
jp
xchg
sar
push
dec
in
xor
dec
icebp
lea
xchg
add
push
lods
test
xor
adc
mov
xchg
sub
cmpsl
inc
mov
cmp
mov
mov
int3
mov
mov
mov
fbld
push
dec
sub
ljmp
sub
or
leave
adc
fildl
lods
xlat
cmc
push
inc
pushf
sub
aaa
cmp
mov
aas
mov
aam
xor
into
icebp
andb
xor
in
sbb
xchg
sti
jmp
xor
cmpsl
lcall
ror
cmpsl
push
int3
mov
outsb
fmull
adcb
popf
jb
mov
movsl
or
inc
sahf
dec
fwait
mov
and
xchg
arpl
ja
lea
inc
jmp
inc
sub
rcrb
ret
push
imul
fwait
mov
xor
mov
mov
add
mov
nop
or
mov
fucomip
ret
add
inc
aas
lahf
ficoms
lea
push
cmovno
divl
pop
push
jne
out
lcall
addl
stos
leave
push
ds
cmpsb
xchg
lcall
adc
mov
sub
xor
mov
dec
outsl
lahf
jmp
mov
loope
pop
mov
jp
loop
cmp
adc
into
push
inc
ret
jecxz
insl
jp
inc
xor
inc
jno
jbe
mov
xchg
out
nop
jns
push
mov
popf
push
mov
ja
cld
adc
sub
leave
iret
jbe
inc
jmp
in
pusha
sub
push
add
iret
bound
mov
push
out
cmpsb
imul
ds
mov
mov
mov
inc
mov
inc
and
ja
lods
divl
adc
cmp
sbb
inc
aaa
push
or
call
mov
add
cmc
or
les
mov
fwait
popf
mov
notl
and
xchg
movsl
icebp
add
nop
aam
popa
scas
xchg
insb
andl
pop
dec
ja
push
pop
jmp
dec
sbbb
mov
mov
insl
aas
dec
loopne
cltd
rolb
packssdw
icebp
add
mov
push
shlb
addr16
cmpsb
movsl
add
mov
inc
pop
cwtl
pop
lds
mov
mov
int3
iret
push
and
adc
xchg
xor
packsswb
xor
mov
inc
cmp
test
mov
insl
es
loop
mov
pushf
sbb
add
je
cwtl
inc
push
sbb
rcr
xor
pop
cmc
cwtl
ljmp
adc
icebp
lods
add
sub
adc
inc
dec
imul
daa
das
mov
sbb
add
inc
lods
mov
add
repz
push
stc
xchg
push
mov
lcall
inc
stos
aaa
cwtl
adc
dec
not
jg
ret
sbb
out
inc
fs
addr16
cltd
mov
aam
in
xchg
ljmp
cmp
lahf
sbb
pop
jae
sub
call
fstps
in
loop
ja
or
adc
ss
adc
fsubs
test
inc
cmp
xlat
pop
nop
or
adc
inc
cwtl
ljmp
cmp
mov
inc
push
xor
and
imul
mov
fldl
fidivl
mov
add
lds
cmp
and
sbb
dec
push
ds
rorl
adc
jl
loop
fistpll
xor
repnz
add
mov
repz
sahf
xor
push
adc
mov
stc
in
or
clc
mov
sbb
shlb
push
mov
or
aas
lea
inc
lods
xlat
pop
fdivrl
and
or
push
inc
cmpsb
dec
ds
lret
lea
insl
dec
push
jge
pushf
pop
shll
aaa
jae
jno
adc
fs
mov
hlt
mov
insl
or
stc
jmp
mov
push
mov
test
mov
mov
into
cmp
dec
hlt
sar
scas
cwtl
xchg
mov
lods
mov
push
loop
push
ljmp
insb
rol
xchg
add
loop
xor
iret
push
int3
loop
in
xor
mov
xchg
add
int3
ljmp
jb
into
sub
mov
outsb
and
cmp
test
xchg
mov
fcoml
xor
iret
fmuls
mov
pushw
sub
add
cltd
xorb
lods
out
lods
scas
mov
daa
push
mov
mov
and
cltd
lock
sub
cld
pushf
test
mov
lods
mov
add
andb
sub
fsts
ret
in
mov
enter
mov
or
shr
ja
xchg
fildll
push
dec
sbb
push
pop
jnp
push
mov
xchg
out
dec
sbb
mov
xchg
mov
stc
sahf
or
loope
fs
pop
xor
out
sub
cmpb
popf
mov
lods
fwait
loop
loop
out
jge
inc
mov
xchg
jecxz
push
js
dec
sarb
pusha
idivb
mov
sub
rcrl
dec
mov
dec
leave
fsubl
lods
in
xchg
jbe
scas
and
test
push
stc
add
in
imul
subl
mov
orl
or
mov
push
test
pop
mov
sbb
lret
lods
and
pop
clc
addr16
insl
loopne
jmp
sub
call
or
dec
js
lock
cmpsl
jae
mov
fcmovbe
gs
sub
test
sub
or
add
cmp
mov
clc
cmpsl
cmpl
shlb
es
sub
movsl
in
dec
cwtl
retw
and
mov
dec
popa
mov
or
fistps
and
inc
rcll
stos
ds
push
mov
cmp
repz
gs
fisubrl
cmp
fcoms
inc
sahf
pop
pop
sub
and
jmp
inc
shlb
xchg
jmp
jne
mov
or
sbbb
add
sbb
push
ja
cltd
fisubs
mov
aaa
dec
lret
lcall
mov
add
jno
out
push
add
sarl
ss
scas
xchg
jge
enter
addr16
cmp
inc
push
out
aam
adc
flds
aaa
popa
cwtl
fnstcw
dec
movsb
push
pusha
inc
or
push
xor
movsl
xchg
pop
enter
std
xor
dec
sub
mov
leave
aas
stos
stos
mov
cmp
cmc
test
daa
mov
movsl
lock
cmpl
dec
cltd
ja
add
push
insl
mov
out
jnp
test
roll
sub
pop
push
fsubr
dec
dec
inc
mov
lcall
fdivrl
in
xchg
cmpb
inc
mov
pop
nop
fs
pop
ret
mov
sub
nop
outsb
vmovlpd
or
movl
jl
rorb
sub
and
lcall
andl
popa
push
rcll
adc
push
enter
xor
dec
jmp
pop
test
or
rorl
mov
shl
testl
lds
jae
push
pop
sub
psubsb
js
into
std
mov
andb
orb
test
sar
xlat
xor
jp
test
push
xor
inc
fnsave
cmc
fsubr
ret
lods
fcomps
adc
xchg
imul
push
and
dec
push
popa
xchg
orb
push
xor
aaa
add
lcall
outsl
int
mov
adc
pop
push
das
xchg
or
pop
pop
cmpsb
in
xor
fnstsw
in
cwtl
mov
test
xor
outsl
push
addr16
dec
in
or
inc
inc
jl
sbb
pop
inc
cmpsl
cmpsl
into
add
adc
into
lret
xchg
cwtl
xchg
inc
cmp
cli
aaa
jnp
cmp
enter
test
fstl
sub
and
test
push
lds
shl
int3
pop
jg
adc
shl
push
cmp
addl
push
inc
lds
cwtl
pop
xchg
pushf
mov
or
mov
mov
shr
rolb
jmp
aad
loop
inc
jb
fnstenv
jp
mov
daa
pusha
pushf
mov
xlat
fcomip
push
leave
pop
negb
and
divl
ret
imul
add
mov
xchg
addl
cld
adc
sub
mov
add
insl
sub
test
outsb
mov
xor
xchg
xchg
inc
clc
jmp
inc
data16
pushf
pushf
jecxz
in
jae
xchg
inc
into
jae
or
loope
push
add
mov
fimuls
adc
in
mov
push
xchg
or
or
fldt
out
lods
push
and
rorl
cmp
pop
int3
cli
push
xchg
iret
and
data16
push
mov
mov
sbb
pop
sbb
add
lcall
movsl
xor
mov
lods
push
cwtl
sti
fistl
es
pop
dec
in
mov
pop
and
push
xchg
push
lahf
repnz
jl
mov
mov
pop
testb
out
arpl
stc
inc
inc
scas
cld
xchg
xchg
dec
pop
dec
adc
lret
jo
pop
call
shrb
push
jmp
gs
lahf
pslld
mov
test
outsl
repz
pop
leave
repz
jle
mov
mov
repz
outsb
inc
nop
adc
pushf
scas
enter
xor
xchg
cmp
leave
jl
and
sbb
mov
rorl
push
and
sub
fxch
iret
out
add
jae
jle
int3
cmc
rol
mov
das
cwtl
pushf
dec
sbbl
in
lcall
push
cmp
sti
jle
mov
adc
mov
xlat
push
aam
xchg
adc
js
xchg
mov
ljmp
and
fwait
push
mov
aaa
dec
sbb
subb
pop
xchg
push
daa
out
xchg
loope
int
sub
or
push
inc
xor
xchg
arpl
push
push
scas
stos
cmpsl
lahf
mov
and
mov
cmp
js
or
fs
out
sbb
jg
in
mov
cmpsl
in
fbstp
xchg
xor
into
jb
or
out
sti
sub
add
push
cwtl
mov
fldcw
scas
push
xlat
jge
fstpl
push
cmpsl
out
dec
and
fs
jo
inc
iret
addr16
cmc
mov
int3
pop
lcall
pop
mov
movsl
dec
mov
jns
ds
xor
stos
jb
xchg
add
aam
cli
or
and
out
lcall
loopne
lret
xlat
dec
or
int3
sub
xchg
cld
cmp
cmp
pop
push
rcrb
adc
or
pusha
adc
pop
pop
xorb
sub
add
mov
pop
rorl
mov
insl
sbb
insl
daa
cld
scas
xchg
stc
in
in
pop
jmp
mov
jmp
cmc
test
or
repz
push
andl
scas
sub
inc
test
scas
jno
inc
dec
mov
mov
test
or
aas
movsl
adc
cmp
or
es
imul
ficompl
mov
pop
cmpl
test
sbbl
pop
jbe
iret
fists
cmc
fcoms
out
stos
add
jbe,pn
push
lfs
mov
mov
cmp
xor
inc
sar
cmp
mov
dec
mov
insb
cmp
repz
cmp
dec
xor
sbb
mov
mov
mov
sbb
cmp
arpl
addl
sbb
jecxz
xchg
adc
in
cmp
lods
test
imul
insb
dec
loope
clc
mov
mov
sub
lahf
mov
imul
jno
xchg
or
inc
push
pop
mov
mov
sbb
lcall
mov
repz
sub
aad
sbb
fsubrs
hlt
adc
or
cwtl
and
nop
int3
aad
and
cli
dec
scas
sub
out
xchg
inc
pcmpgtb
mov
shr
daa
mov
xchg
inc
xchg
pushf
popa
xor
pop
xchg
jmp
xor
insl
ds
or
cmc
iret
pop
pop
fyl2x
sbb
out
addr16
sbb
sbb
cs
rcl
or
xor
std
vphsubdq
pop
mov
xchg
xor
lcall
stc
dec
push
ss
jo
ret
jae
loopne
and
xchg
mov
sub
outsb
aaa
add
push
or
shll
sbb
adc
hlt
outsb
xchg
jbe
mov
adc
sub
ja
pusha
adc
xor
roll
mov
jno
addr16
mov
lods
mov
inc
lods
or
sti
nop
xorb
ds
lret
lahf
mov
jl
icebp
mov
addr16
jno
ret
pop
call
mov
sbb
jae
xchg
adc
imul
lds
ret
jp
movsl
gs
dec
shrb
test
cmpsb
lret
out
jle
pop
dec
sub
mov
sahf
lret
notl
shll
adc
repz
les
or
repz
xor
int
out
cmp
lcall
cmp
adc
aas
mov
add
and
push
adc
cmpl
enter
xchg
stos
mov
fisubl
jae
pop
or
and
rorb
mov
les
daa
mov
xchg
pop
ljmp
out
notb
scas
sbb
add
filds
fs
adc
xchg
outsl
loopne
sti
or
sub
cmpsl
outsl
dec
cmc
mov
dec
pop
sbbl
std
push
pop
hlt
scas
filds
cli
clc
fucomi
dec
stos
and
pop
sbb
rcll
out
mov
mov
lcall
pop
fs
cltd
xchg
push
cmc
sbb
pusha
cmpps
sbb
xchg
fwait
js
roll
out
and
add
xor
out
je
fdivr
cmpsb
or
test
mov
out
inc
xlat
xchg
xchg
pusha
sahf
or
bound
xor
jge
jp
ds
jne
mov
cmp
iret
cltd
jge
popa
sub
mov
adc
xchg
xorb
dec
sub
popa
es
inc
fldcw
jo
lret
jnp
orb
popf
mov
add
cltd
jecxz
movhps
lds
ret
xchg
add
roll
ficomps
imul
fisubl
frstor
fisttpl
lcall
jae
xor
or
in
push
arpl
xor
addr16
leave
push
jle
push
add
outsl
dec
arpl
stos
js
mov
jle
sub
jle
repnz
lret
adc
xchg
popa
push
cmpsb
adc
decb
addr16
push
cwtl
mov
adcl
test
jg
sub
inc
xchg
push
or
adc
push
imul
cmp
movsb
icebp
cltd
cmpsl
leave
push
pop
out
dec
pusha
jmp
cmp
aas
cmpsl
cld
leave
addr16
sub
push
loopne
movsb
ljmp
lahf
fdivrs
pushf
add
add
cmp
int3
hlt
or
inc
aaa
cmp
adc
mov
iret
jecxz
mov
out
add
dec
xchg
scas
lea
jb
inc
sarb
mov
mov
movsb
xor
cmpb
subb
sub
popf
jmp
adc
dec
xor
dec
popf
adc
xor
notl
pusha
ficoml
inc
lahf
inc
daa
mov
fnstcw
cmpsl
push
dec
pop
movsb
inc
xchg
sub
mov
or
push
fwait
roll
pop
push
es
in
push
inc
pop
ljmp
jge
mov
xchg
rcrb
adc
lock
sub
xchg
ja
loop
push
jl
adc
cmp
sar
icebp
xchg
push
sbb
xorb
ss
adc
cmp
test
jno
fiadds
push
and
jge
out
clc
jle
xor
test
add
push
cmp
orl
lret
pusha
jl
lret
lods
lods
movsb
pushf
sub
cwtl
cld
jge
repz
dec
mov
sub
cmp
cmpsl
mov
lods
movsb
outsl
add
push
test
mov
arpl
mov
popa
mov
mov
jns
vandps
popa
xchg
push
push
jg
rclb
jns
jp
lahf
lock
jg
mov
jmp
add
xchg
sbb
xchg
add
out
insb
popf
hlt
inc
sub
cmpsl
xchg
sbb
lds
cltd
dec
in
mov
cs
mov
mov
sbb
jo
ret
hlt
pop
mov
call
mov
mov
xchg
add
inc
insl
pop
rol
xchg
lahf
dec
cli
add
xchg
jae
shrl
sub
stos
fwait
jnp
or
adc
inc
mov
stos
fdivl
mov
xchg
insl
or
push
in
push
dec
enter
dec
data16
in
into
stos
enter
cmp
jne
pop
insb
fstl
xchg
jp
into
lahf
lods
mov
pop
js
repnz
ds
cwtl
push
inc
xchg
jle
mov
or
xchg
scas
jge
xchg
and
orb
aam
leave
adc
inc
adc
int
popf
mov
sub
inc
pop
pop
or
mov
adc
ficompl
add
adcl
inc
xor
flds
inc
dec
jle
lahf
movaps
adc
sub
jle
int3
cmp
stc
pop
cmp
lcall
lahf
xor
push
push
lea
sahf
das
ja
addr16
pop
jle
les
movsb
push
scas
push
jb
dec
into
mov
imul
test
pushf
mov
popf
lea
test
pop
pushf
jno
mov
sbb
pop
push
inc
sbb
mov
mov
les
lock
cmpsb
cs
or
push
in
shll
lea
fdivl
sub
mov
fmull
pop
clc
out
push
adc
xchg
mov
cmp
sbb
arpl
pop
ljmp
ret
hlt
sbb
je
hlt
gs
add
insb
pop
dec
mov
orl
inc
inc
mov
pushf
pop
lds
adc
lock
addr16
mov
mov
lds
scas
fnstsw
sub
vpsubq
fbstp
adc
mov
test
xor
jb
mov
inc
push
push
xor
mov
adc
outsl
outsl
push
mov
xchg
add
mov
nop
push
testl
pop
out
nop
add
inc
sub
sbb
stos
add
js
dec
pusha
mov
mov
cmpsl
sub
adc
enter
fwait
pop
mov
lahf
pop
addb
xchg
inc
pop
enter
nop
mov
sbb
cmp
popf
adc
dec
mov
stos
xchg
fsubr
dec
ja
test
je
ss
aaa
xor
xor
adc
les
ljmp
call
adc
add
test
int
ds
filds
fstps
into
loop
mov
pushl
ss
test
loope
pop
dec
pusha
jnp
xor
lahf
andw
add
out
lods
cmc
aad
faddp
aas
inc
xchg
roll
mov
test
xlat
mov
adc
imul
mov
dec
mov
mov
or
adc
xor
sub
push
xchg
push
enter
es
mov
cmp
fsubl
adc
pusha
lcall
in
fnstenv
cmpsb
pop
test
stos
scas
push
stc
ss
push
push
push
dec
add
mov
out
pusha
mov
in
aad
adc
sub
ljmp
jg
cs
add
dec
mov
jp
stos
dec
ret
pop
in
dec
clc
and
jb
test
cmpsl
inc
mov
xchg
out
shlb
ret
xlat
fcompl
adc
xor
xchg
cmpsl
push
orb
int
pop
lds
xchg
ds
or
inc
test
in
adc
ds
ret
cmp
pusha
mov
popa
xor
movsb
cmp
xlat
pop
inc
test
clc
mov
imul
lea
pushf
add
jg
es
ret
cli
add
jle
ret
sub
pop
inc
imul
push
add
ljmp
das
addl
mov
xor
mov
out
les
sub
jge
rolb
xor
scas
inc
je
push
mov
into
add
sub
mov
scas
je
icebp
jle
push
pop
lock
js
mov
popl
sub
xor
shrb
lret
jnp
popf
mov
cwtl
pop
mov
adc
pop
sbb
sarl
pop
cltd
adc
mov
testb
mov
mov
adc
cld
jne
pushf
jns
cmovge
and
out
testl
or
adc
cmp
jae
xor
movlps
call
lods
stc
dec
lods
imul
aad
outsb
xor
aas
jp
push
mov
lea
pop
mov
lods
pushf
mov
sqrtps
sbb
aad
mov
adc
mov
test
paddsb
in
data16
out
test
mov
mul
xor
pop
ss
jbe
and
jae
inc
aam
clc
aam
push
sbb
test
and
ljmp
test
or
leave
lods
xchg
das
push
rol
out
inc
and
inc
mov
movsb
das
push
arpl
push
and
or
pop
ror
adc
inc
jle
mov
jno
mov
xor
addb
icebp
mov
jno
dec
xor
push
je
mov
or
add
and
int
call
popf
fsub
les
sub
stos
push
xchg
push
adc
mov
lcall
fxch
dec
cmp
cmp
mov
ret
or
jle
imul
dec
cwtl
imul
cmpsl
sub
or
rorl
jno
repz
xchg
stc
jecxz
and
aam
enter
pop
cmp
mov
int
loopne
fldt
shrl
xchg
adc
jp
and
aas
andb
jb
mov
das
in
pop
mov
adc
inc
sub
or
pop
pop
inc
pop
mov
xlat
sbb
push
lods
pop
iret
add
and
repnz
sbb
mov
pop
dec
sub
ret
pop
shlb
xchg
and
pop
mov
sub
ljmp
je
ds
adc
test
in
dec
pop
xchg
out
imul
add
add
cmp
lods
adc
push
inc
add
inc
test
mov
addb
aad
add
xchg
js
adc
and
jae
cmp
nop
inc
jb
xor
daa
lcall
aam
fists
stos
fmulp
ss
sbb
xchg
mov
out
push
outsb
repz
adc
xchg
insl
les
repz
cmc
cwtl
mov
dec
mov
in
xor
xor
cltd
repnz
xchg
data16
aad
into
sub
test
loopne
cmp
jo
sub
cmp
sub
rcrb
jne
pop
andl
cmpsb
push
xchg
clc
loop
gs
sub
push
inc
or
jbe
or
into
sbb
push
in
lods
lahf
push
mov
imul
cmpsl
add
js
jns
ficoml
cmpsl
jns
fdivrl
or
dec
add
xor
sub
in
ret
push
jl
ljmp
sti
mov
lock
inc
mov
xor
cmpsb
pop
into
xchg
ljmp
insb
adc
cmp
clc
sub
fsts
jl
xor
adc
lret
rcrb
jg
aas
xor
jl
push
or
fisttpll
xor
outsl
iret
add
xor
cmc
daa
int3
out
ret
or
es
mov
insl
mov
xchg
xchg
jmp
pop
mov
shrb
push
jo
call
into
jmp
mov
mov
pop
jmp
or
mov
ja
pop
std
push
imul
int3
mov
ja
les
call
lret
jle
sub
push
push
clc
jg
rcll
jno
adc
arpl
inc
int
fnstsw
loopne
xorb
ret
push
xchg
in
push
push
sbb
xor
pop
jl
std
add
mov
and
cmp
mov
lods
xor
sti
inc
cmp
mov
ret
test
pushw
mov
mov
push
ds
andl
scas
and
cmp
fwait
std
mov
lcall
dec
pop
jmp
fstpt
fdivl
imul
out
pop
insl
sbb
push
push
std
mov
xchg
pop
or
in
push
push
outsl
stos
adc
sbb
leave
mov
push
es
movsb
jb
fdiv
mov
dec
nop
mov
sbb
call
mov
ja
add
test
push
icebp
fildll
je
jo
cmpsb
inc
in
mov
xchg
test
cmp
cltd
push
loop
xor
xor
jp
mov
cmp
dec
inc
gs
jp
pushl
ds
jae
lahf
sub
jp
adc
push
add
fstps
push
insb
shrb
shll
jb
out
push
je
out
jmp
mov
dec
aas
test
or
mov
xchg
xlat
clc
xor
xchg
aaa
daa
inc
hlt
imul
stos
inc
fwait
xlat
or
push
lret
xchg
mov
sbb
pop
push
sub
xor
push
lods
inc
aad
xor
or
insb
jno
xor
stos
pop
sub
aad
mov
jae
pop
subl
xor
inc
nop
cltd
fisubs
adc
out
jno
or
ret
and
add
test
jp
test
or
in
push
xchg
pop
push
sti
mov
out
adc
std
adc
mov
push
lock
push
sub
lds
ljmp
dec
inc
ljmp
in
cmp
xchg
xchg
cli
jb
xor
mov
pop
sbb
pop
sarb
xchg
ss
push
lea
jnp
adc
lods
mov
sub
daa
cmp
fdivp
lods
popa
out
nop
adc
stos
xor
das
adc
mov
xor
testb
and
xchg
xchg
ds
xchg
add
xchg
sub
mov
inc
rcll
fs
pop
xchg
push
sub
dec
lcall
adc
subl
scas
jle
dec
push
mov
dec
jbe
mov
repnz
pop
xor
sbb
xchg
cmpsb
sub
mov
inc
repz
data16
jnp
mov
stos
lret
xchg
pop
cmp
outsb
insl
or
lods
or
push
test
push
out
imul
mov
xor
xchg
repnz
xchg
fisubrl
and
dec
add
aas
push
mov
shrb
sub
xchg
and
jns
dec
sub
lcall
xchg
sub
cs
lock
test
xor
fdivr
cld
loop
fcomp
xchg
mov
lods
xlat
jg
clc
das
pop
loope
mov
jae
push
sub
outsb
mov
mov
dec
outsb
push
cmp
add
in
shr
or
lss
add
stos
aaa
jns
xor
sbb
xchg
rolb
stc
insb
int3
push
mov
daa
jg
adc
push
test
xchg
xor
mov
xchg
in
pop
stos
out
mov
push
mov
jmp
rorl
mov
adc
inc
in
dec
sub
sub
sbb
pushf
sub
mov
subb
and
push
call
cmpsb
jg
popf
inc
jecxz
outsl
rcl
pop
rcr
inc
divl
pop
sti
jnp
jbe
sar
sbb
arpl
fnsave
int3
in
enter
push
cwtl
es
sbb
adc
aad
pop
xor
and
push
outsb
gs
push
std
cmpl
xor
pop
fs
jo
sbb
aad
ret
std
test
nop
arpl
shll
mov
pop
pop
jmp
int3
test
dec
lods
lods
sub
fisubl
loop
fildll
dec
xchg
int
jne
repnz
sub
ret
cs
into
inc
dec
imul
sahf
mov
or
loop
dec
pop
push
pushf
gs
cmpsb
and
dec
shl
negl
lahf
or
lret
mov
or
sahf
ds
incb
data16
sub
loope
sub
mov
xor
cmp
fcomps
fwait
add
int3
addb
inc
lods
mov
push
push
inc
adc
movsl
pop
leave
fwait
mov
inc
mov
nop
scas
imul
cmp
sbb
mov
sub
dec
adc
test
sub
mov
ficomps
adc
daa
pop
adc
lods
test
fisubs
loopne
sub
fwait
and
in
mov
jle
dec
push
fsubs
scas
mov
inc
fnstsw
daa
lea
add
mov
mov
jo
es
cltd
std
psubsb
ficompl
dec
orb
pusha
jle
lahf
insl
outsl
mov
mov
sbb
aam
xor
cmp
les
adc
jg
fdivrp
aam
fmull
pop
xor
in
sahf
out
lcall
loop
es
jp
and
aaa
sti
jge
std
add
lcall
add
sbb
push
inc
adc
xor
mov
mov
lods
icebp
cld
sub
les
stc
pop
icebp
mov
mov
rorb
addb
movsl
mov
cli
pop
sub
cmp
ror
inc
sub
pop
pop
es
clc
xchg
ss
lea
or
inc
jmp
inc
inc
scas
sbb
lret
pushf
add
jg
orl
pop
addr16
adc
popf
mov
push
lock
add
repnz
xchg
call
add
shl
stc
mov
inc
stc
stc
test
addr16
and
mov
mov
mov
jnp
push
adc
cld
cmp
sbb
and
mov
add
pop
fisttpll
loope
movsl
test
aas
aaa
clc
xorb
ds
subl
xor
mov
xorb
mov
fldenv
ljmp
test
mov
bound
test
push
iret
cmpsb
clc
mov
cs
sti
push
jg
add
jo
stos
xor
and
dec
hlt
lds
test
and
pusha
or
pop
mov
sub
test
scas
xchg
aaa
and
mov
sub
cmc
or
insl
cwtl
popf
pop
fiaddl
sbb
push
mov
sub
decb
push
jne
aam
jbe
mov
mov
lcall
mov
xor
jnp
cmc
aad
add
xor
sub
pusha
pop
fs
xor
lahf
push
mov
movsb
and
sbb
mov
dec
insb
or
inc
stc
lret
es
jnp
sub
inc
cmp
out
inc
enter
push
hlt
imul
pop
jbe
scas
ret
sti
into
pop
mov
mov
je
cwtl
push
fdivl
mov
lods
pop
imul
lret
int3
push
rcrl
cmpsl
push
mov
bnd
jae
fcoms
addr16
or
pop
mov
lret
xchg
mov
cli
mov
das
cwtl
movsl
cmp
mov
cmp
mov
movsb
lods
inc
lret
xchg
outsb
jno
push
cmp
je
or
lds
je
iret
scas
xor
cld
dec
mov
jnp
sbb
sbb
out
fldcw
test
adc
sti
mov
cmp
xchg
dec
inc
loopne
dec
mov
jbe
cmp
sahf
mov
jp
mov
xor
adc
movsb
jb
stc
pop
imull
test
xchg
push
fsts
cmp
repnz
mov
mov
jb
lahf
in
jb
in
cs
ret
cld
clc
xchg
mov
add
imul
scas
inc
das
xlat
jmp
push
fs
xchg
ret
das
jecxz
sti
jecxz
mov
add
pop
addr16
and
scas
mov
sbb
dec
sub
pop
dec
cmc
pushf
lods
fdiv
in
lods
pop
inc
addr16
rclb
mov
jge
mov
btr
xchg
mov
bound
mov
jae
int
xchg
sub
mov
adc
sub
loop
xchg
pavgb
pop
pop
icebp
loope
lods
sub
sahf
or
mov
lret
xchg
push
sbb
jnp
cs
mov
xor
addr16
lock
xchg
cmc
cmp
add
xchg
ds
loope
sbb
divb
pop
pop
test
sbb
lea
xchg
ss
mov
mov
inc
les
cmpsb
push
in
cmpsb
adc
and
pop
mov
mov
loope
adc
xlat
adc
sub
sub
push
shll
lods
mov
mov
sbbl
jl
xor
mov
jmp
in
test
sub
pop
jo
repnz
mov
aas
rolb
cmp
ljmp
pop
pop
clc
in
call
xor
push
inc
movsb
les
je
faddl
mov
stos
dec
add
sbb
mov
aaa
cs
stos
mov
fisttps
inc
je
dec
mov
mov
xchg
mov
cli
mov
sbb
xorl
in
jmp
cmp
sti
xchg
adc
inc
mov
add
stos
inc
add
or
icebp
inc
jb
in
xor
outsb
and
sub
cwtl
ds
gs
inc
jle
jne
pop
in
into
xchg
cmpsb
xchg
dec
icebp
fcomps
lock
mov
aaa
xor
das
and
sbb
in
aaa
lahf
pop
inc
dec
mov
xchg
aaa
bswap
pusha
sarb
sub
enter
out
cmpsl
stos
aaa
adcl
cmp
lahf
pop
jecxz
test
mov
push
mov
sub
xor
mov
xchg
push
adc
mov
push
mov
out
shlb
push
push
lds
jno
pop
xorl
outsl
pushf
mov
mov
cld
add
mov
fistpl
jno
je
pusha
adc
xor
xor
cwtl
pop
and
inc
xchg
mov
testb
icebp
popf
lea
call
aam
popa
fdivr
cs
pop
int
dec
rol
rcrb
in
cld
adc
mov
or
xchg
insb
cmp
arpl
push
pop
in
mov
out
xchg
popf
out
mov
xchg
push
mov
xchg
addr16
xchg
sbb
mov
aas
cmc
and
sub
mov
pop
lcall
mov
and
ficomps
and
inc
xor
dec
lret
mov
ss
cwtl
push
mov
pop
popa
aam
xor
sbb
outsb
rcrl
mov
mov
inc
mov
add
inc
adc
adc
push
mov
push
sub
sbb
mov
ss
scas
enter
add
fisubs
sub
xchg
aam
or
sub
xchg
xchg
mov
stos
adc
xchg
push
roll
cmp
jne
loope
addr16
cwtl
int
rcrl
mov
mov
ret
mov
xor
inc
aam
data16
lods
xchg
fstl
fwait
inc
addl
mov
pushf
fsubr
aas
lcall
mov
lea
scas
pop
or
pop
out
mov
adc
xor
std
xchg
cmp
xor
or
push
inc
hlt
adc
or
jge
cwtl
lock
cmp
and
pop
adc
adc
popl
add
jmp
adc
fimuls
sbb
dec
xchg
mov
hlt
push
aas
bound
or
mov
pop
ret
inc
lret
popa
repz
dec
sub
xchg
mov
stc
in
adc
fdivrs
or
cmpl
dec
mov
pop
gs
cmc
xchg
and
pop
adc
stos
bound
in
in
xchg
jp
test
or
and
repz
mov
push
mov
dec
mov
pop
sub
mov
fisubrl
mov
and
leave
addl
cmpsb
adc
jle
mul
fidivrl
imul
sub
lock
and
std
flds
sarl
in
mov
jb
loop
addl
icebp
cld
jbe
shll
push
or
cmp
sub
push
add
sub
sub
pop
adc
test
sar
ret
scas
push
icebp
outsb
rcr
jg
mov
cwtl
cmp
mov
pop
pop
stos
lcall
cli
pushf
push
pushf
adc
lds
popf
sub
call
fisubrl
test
mov
out
lahf
inc
hlt
nop
aas
cmp
dec
in
loopne
jns
xor
pop
fisttpll
push
adc
xchg
inc
pushf
xor
push
out
outsb
test
lock
cvtpi2ps
int3
inc
xor
add
outsb
js
ja
fidivl
pop
xlat
jno
dec
xor
mov
dec
jnp
out
insw
scas
aaa
jne
or
ss
arpl
and
inc
cli
insl
leave
pop
shrb
and
decb
jecxz
jmp
mov
sub
xchg
mov
aam
push
mov
lods
cmp
das
xor
mov
jmp
mov
out
push
ret
fs
jg
in
mov
into
pcmpeqd
inc
vfmaddsub231ps
aas
incb
xor
jbe
xchg
mov
jl
in
ljmp
fistps
push
loop
fwait
inc
xchg
mov
daa
sub
lcall
pop
movb
sbb
js
sub
xchg
arpl
pusha
into
sti
mov
lret
jo
mov
mov
mov
dec
outsb
in
roll
shr
call
mov
mov
test
out
cmpsl
dec
xchg
aad
mov
call
call
es
gs
test
pusha
mov
push
enter
in
push
lods
cmp
and
mov
hlt
mov
call
es
pop
mov
enter
jle
jns
adc
xchg
sahf
addb
dec
mov
icebp
std
and
inc
dec
jae
dec
call
movl
sub
and
adc
lea
pop
adc
aad
enter
das
mov
arpl
std
ret
adc
insb
aad
xchg
adc
ljmp
push
imul
rorb
pop
pusha
xor
xchg
cmp
fwait
mov
sub
mov
rcrb
inc
adc
or
test
dec
je
fsubl
push
push
ja
jb
push
xor
hlt
xor
dec
arpl
mov
shll
cmp
lds
dec
lock
ret
addr16
mov
int3
out
or
fs
in
jo
pushf
stc
jmp
or
into
push
mov
inc
je
xchg
fs
xchg
movsl
out
ja
jnp
loope
test
movsb
fistl
cmc
andl
xchg
sbb
stos
mov
jmp
std
and
mov
shr
push
mov
lods
sub
adc
inc
and
js
ret
outsl
leave
xchg
js
mov
gs
xchg
aaa
leave
stos
das
xor
rcrb
pop
adc
jae
out
iret
neg
jle
xchg
cmc
mov
or
test
and
mov
iret
sti
aam
and
xchg
mov
cwtl
mov
cmpb
cmp
cltd
jp
fsub
push
sbb
loop
xor
jno
adc
pop
adc
outsb
inc
aad
xor
mov
or
mov
sub
dec
es
jb
adc
loope
push
movsb
add
or
pop
fs
fdivl
sahf
stc
pop
imul
pop
inc
mov
pop
in
push
test
rcpps
enter
aad
out
lret
sbb
imull
xor
imul
ja
xlat
mov
imul
push
hlt
js
sahf
dec
ret
mov
xlat
ss
add
pxor
idivl
push
xchg
mov
je
dec
dec
or
fwait
add
jb
pop
mov
pop
enter
aaa
inc
test
pop
int3
repz
outsb
sub
pusha
mov
dec
cmpsb
pop
aad
dec
test
out
scas
test
loope
or
pusha
hlt
jae
push
pop
push
mov
fstpt
adc
xchg
aam
push
aaa
mov
cmp
and
add
add
sbb
mov
dec
xor
enter
push
clc
mov
test
adc
sub
fs
cltd
mov
lock
cli
aam
sbb
mov
xor
inc
xor
int3
aaa
rorb
sub
testl
int3
mov
ret
adc
les
sub
jg
imul
out
ret
mov
sub
mov
lods
insb
into
mov
xor
or
icebp
push
loopne
and
mov
add
mov
xorb
inc
cmp
call
bswap
inc
jne
int
inc
xor
je
pop
fidivl
lret
pop
mov
dec
movsl
repz
mov
fsubl
push
adc
push
icebp
mov
outsl
es
imul
loopne
dec
push
unpckhps
inc
mov
stos
xchg
in
push
or
imulb
out
stos
fsts
fists
mov
loopne
mov
fninit
sbb
outsl
ljmp
test
cmpsb
sub
repz
into
sub
push
adc
aas
arpl
pop
xor
push
or
push
jl
inc
ror
jecxz
test
cltd
das
rcll
or
loope
aaa
repz
imul
roll
movsl
cltd
repnz
in
xor
bnd
int3
ja
mov
xlat
inc
cwtl
mov
xchg
mov
es
rorl
jb
xchg
sbb
and
jns
lret
xor
push
insl
or
xchg
negb
sarl
insb
jb
cmp
cmpsb
jle
js
outsb
dec
loope
sti
mov
orl
xor
mov
arpl
dec
loop
jbe
pop
jns
data16
dec
mov
inc
xchg
or
dec
test
add
mov
jl
fst
mov
in
aaa
push
into
inc
call
xor
jmp
jae
mov
scas
lods
sbb
add
imul
adcb
popa
out
gs
mov
ss
aad
mov
orl
xor
lret
jmp
mov
es
or
and
xchg
cmc
ficoml
cmc
aas
add
subb
pop
jbe
xchg
test
ja
xchg
ljmp
or
negl
loop
inc
dec
inc
adc
mov
sbbb
sbb
js
loopne
hlt
gs
xor
daa
hlt
repz
mul
inc
mov
mov
shll
loope
pop
mov
sub
push
pop
scas
sub
xor
rorb
stos
adc
in
push
scas
mov
lret
add
push
push
pop
cmc
insb
test
push
mov
push
ret
shll
cmovge
pop
addr16
cwtl
test
shrb
or
mov
push
orl
inc
test
push
js
test
inc
scas
enter
xchg
addl
faddl
test
data16
fisttpl
lret
and
cmc
mov
xor
xchg
std
inc
jl
popf
xchg
lds
mov
and
lock
push
aaa
pop
mov
lahf
int
jl
movsl
and
cld
pop
sub
out
out
movsb
push
cmp
in
mov
test
xor
push
fprem
je
sahf
outsl
lret
sahf
jp
push
push
loope
cmp
enter
add
lahf
xlat
jl
and
cmpsl
out
xor
pop
fstpl
mov
xchg
mov
cmp
pop
movsl
push
out
xor
dec
push
or
mov
mov
and
sbb
cmp
sub
xchg
dec
pop
cmc
pusha
mov
xchg
loop
xchg
loope
repz
sub
mov
mov
xor
data16
xlat
repz
xchg
xchg
jge
scas
or
push
sti
pop
cmpsl
into
mov
mov
sahf
gs
and
sbb
mov
jp
adc
js
ja
imul
xor
pop
or
jle
sub
clc
xchg
adc
scas
mov
pop
dec
daa
inc
pop
cmpsl
dec
int
dec
jg
enter
aad
mov
popf
les
mov
fdivrl
pop
mov
fwait
int
mov
imul
add
cmp
loop
outsl
xor
xchg
or
out
shlb
jbe
pop
jle
sbb
mov
xchg
outsb
call
sub
xor
or
fisttpl
mov
push
jo
mov
push
cmp
mov
cs
cli
xchg
ficoml
add
jne
stos
jb
adc
mov
pop
sbb
mov
jo
imul
push
daa
cli
mov
push
xadd
pop
ret
fdivr
test
push
jmp
pusha
icebp
sbb
cli
psrld
fimuls
mov
lods
add
adc
lock
sti
xchg
sbb
adc
enter
push
jge
cmp
js
or
pop
es
jne
mov
mov
sub
imul
and
lods
test
cmpsb
mov
jmp
hlt
xor
icebp
insl
scas
push
dec
in
mov
mov
sahf
test
adc
fs
and
dec
xchg
push
and
ret
out
add
cltd
push
sbb
jns,pn
jle
jp
pop
inc
and
gs
in
loope
pop
lcall
test
push
fsub
xor
push
add
mov
mov
out
rorl
adcb
out
sub
scas
cmp
sbb
mov
movsl
ret
add
mov
mov
dec
adcl
inc
cmp
fistl
cmp
and
fwait
arpl
rol
sbb
cs
xchg
cmpsb
movsl
dec
pop
es
dec
or
cs
les
pslld
incb
lahf
call
stc
and
fstpt
inc
sbb
xor
movntps
fs
imul
mov
mov
dec
idivl
jp
adc
sbb
and
data16
cli
pop
enter
lcall
scas
addl
lock
mov
sbb
mov
sbb
sub
fsts
sahf
jns
sbb
and
loop
enter
pop
adc
jmp
testl
xlat
popf
adc
sbb
xor
cmp
or
sarb
ds
dec
pushf
sti
add
js
pop
mov
cmp
rcrb
jae
jns
mov
lret
sub
ds
and
mov
daa
lods
js
sbb
movsb
dec
sub
sub
jnp
cmp
sbb
cwtl
mov
sbb
push
into
cwtl
push
inc
or
mov
insb
loop
dec
test
sbb
add
mov
push
testb
dec
cmpsb
movsb
jp
syscall
jg
push
mov
aam
pop
loopne
mov
xor
inc
add
lods
das
push
addr16
cmpl
dec
rcl
icebp
fidivrs
or
pop
cmp
sbb
jae
sti
mov
jle
xchg
ror
push
bound
mov
push
xor
cmp
sub
cmp
jo
movsb
cld
insl
sub
je
mov
jns
xchg
imul
jge
stc
fs
cli
adc
mov
push
test
divl
mov
inc
int3
dec
and
pop
push
mov
jp
or
rcr
stos
inc
les
cmp
xchg
sub
callw
pop
fcom
mov
mov
enter
mov
mov
sahf
adc
in
ss
test
es
sbb
mov
clc
mov
fnstcw
cltd
jle
out
cmp
jecxz
mov
ljmp
fiadds
test
lret
jae
add
sbb
jo
stc
std
xchg
pop
ja
sub
adc
mov
dec
dec
push
cmp
cmp
dec
mov
dec
lods
out
xchg
call
mov
fistpl
in
mov
sub
stos
cmpsb
mov
dec
outsl
mov
and
sub
std
jmp
mov
loop
bound
fisttpll
jae
cmp
sub
mov
insl
cmp
cmpsl
mov
push
mov
jp
mov
in
incl
adc
notb
jne
arpl
iret
cwtl
in
or
add
mov
faddl
adc
shrb
mov
rcrb
mov
out
enter
pushf
movl
sub
je
gs
fsubl
lea
mov
dec
rcrl
aam
or
xchg
jne
stc
mov
mov
fimuls
inc
mov
mov
iret
test
jmp
inc
hlt
stos
and
repnz
pop
call
xor
fwait
add
and
cmpsl
and
xor
inc
rcr
dec
dec
sbb
cld
push
sub
push
pop
lds
add
sub
push
mov
aam
fnstsw
sbb
sti
shlb
ret
lock
cwtl
or
dec
pop
rcrl
mov
das
inc
dec
xor
xchg
xor
sub
loope
push
aaa
rclb
roll
es
pop
into
cltd
movsb
in
jno
add
dec
lods
inc
jb
leave
cmc
jns
mov
xor
lea
pop
adc
das
pop
insl
roll
inc
jge
pop
adc
sbb
enter
pusha
in
out
mov
inc
fwait
mov
insb
jl
idivl
ja
push
xor
adc
or
sar
inc
in
clc
mov
add
insb
andl
fsubr
push
pop
lock
cmpsl
imul
data16
loopne
paddd
mov
sbb
or
in
arpl
lret
into
decl
jecxz
xchg
xlat
nop
sbb
xchg
sti
lcall
insb
clc
in
enter
bound
xlat
inc
sar
fimull
xchg
mov
or
mov
xchg
enter
lcall
sub
mov
xchg
mov
sub
mov
push
mov
jge
mov
int
imul
or
or
mov
jbe
xor
ret
dec
push
and
stc
jg
add
out
cltd
ja
data16
add
mov
fistl
fists
cmp
movsb
pop
mov
xchg
and
loop
stc
cmp
jecxz
mov
andb
push
cmc
pushf
mov
les
pushf
xor
lods
sahf
insw
pop
scas
stc
daa
and
outsl
mov
jae
clc
movntps
pop
and
cmp
push
pop
push
push
mov
cmpsl
mov
out
mov
push
push
jp
adc
movsb
enter
jb
fcoms
push
call
adc
jmp
popa
sbb
jnp
aas
out
popf
fwait
and
jmp
xor
lea
jg
pop
mov
idivb
mov
sbbb
out
test
mov
aaa
mov
push
and
in
pusha
popa
leave
inc
int3
cmp
and
jae
dec
xchg
clc
aad
adc
mov
mov
pop
stos
les
stos
dec
lcall
out
mov
sub
adc
addl
mov
xorb
out
call
aaa
push
bnd
addr16
add
iret
and
inc
mov
sub
lods
sarl
jno
inc
add
ljmp
fcmovnu
iret
test
das
xchg
roll
test
cwtl
jo
insb
rcrl
subl
mov
pop
mov
das
enter
mov
lods
inc
fldenv
pop
stc
clc
xor
std
jmp
push
cmpsb
fildll
addr16
sbb
or
cmp
ss
outsl
fcmovb
testb
js
sub
push
cmp
jns
xor
fsubp
loop
add
mov
das
out
inc
loopne
xchg
mov
push
ds
add
jns
int
fisttpl
fs
in
xchg
and
cli
cmp
mov
mov
push
inc
jo
pop
fwait
dec
mov
in
jecxz
push
cwtl
cmp
push
or
data16
ja
or
sub
jle
xchg
push
pusha
or
xor
inc
xchg
mov
adc
cmp
pop
out
loope
mov
fsubl
fsubrl
aam
mov
xchg
jmp
mov
loopne
mov
jne
push
mov
outsb
jmp
fsubs
test
fnstcw
ljmp
jo
mov
in
jae
jmp
xor
cli
jbe
pop
push
adc
mov
scas
jp
xor
mov
mov
push
dec
jl
jp
inc
cs
idivl
lahf
fbld
andb
dec
loope
mov
xor
push
or
in
jo
xchg
dec
mov
adc
mov
push
lahf
xor
xor
pop
cwtl
test
fxch
xlat
add
in
divb
or
test
sbb
lds
add
lock
lahf
sub
pop
mov
sarl
xor
out
mov
xor
into
pop
or
add
lret
cmc
push
jo
xchg
aaa
sub
mov
mov
xor
rolb
stos
je
cwtl
sub
mov
insb
in
std
push
mov
push
push
sbb
push
cmp
jno
push
push
xchg
aad
cmp
fidivs
add
scas
and
xchg
push
lds
aad
adcl
shl
in
enter
mov
pop
dec
cld
inc
inc
add
dec
repnz
mov
push
adc
xor
testl
jo
cld
gs
mov
pop
xchg
push
xor
out
enter
push
sub
vpmacsswd
pop
test
cmc
jbe
pop
fiadds
hlt
or
xlat
xlat
pusha
jbe
mov
daa
aaa
lahf
add
sbb
adc
popa
and
jl
adc
test
leave
mov
adc
mov
sbb
arpl
shrb
ret
lret
jo
sbb
cli
cwtl
and
lods
imul
je
stos
adc
pop
std
dec
and
add
movsl
lds
shrb
bound
or
stos
mov
cmpsl
dec
mov
aad
mov
ljmp
push
mov
adc
ds
ja
cmpb
sbb
testl
sbb
movsl
add
inc
ds
jne
ss
sbb
imul
and
inc
push
push
inc
enter
cmc
sub
cmp
mov
scas
je
je
pminsw
push
jo
aad
cmp
and
jl
aad
loope
mov
testl
imul
adc
fistpll
sub
ffreep
or
cwtl
scas
stc
xlat
cwtl
je
out
xchg
push
dec
enter
call
xchg
dec
sbb
push
int3
fisttps
mov
movsb
mov
and
cmp
aam
inc
notb
test
pop
movsb
gs
xchg
xor
addr16
xchg
sbb
mov
je
mov
cltd
add
xchg
les
testb
inc
in
fxtract
cmp
shll
or
push
add
cmp
and
mov
xchg
out
mov
push
jmp
xchg
fmuls
call
pop
mov
adc
cmp
sub
add
mov
fisttps
pop
insb
pop
das
pop
pusha
stos
pop
mov
sub
sbb
shlb
lea
loope
enter
pop
call
arpl
iret
arpl
jmp
fistl
outsb
xchg
sub
jno
pop
dec
mov
daa
nop
sbb
cmpsb
sub
adc
push
cmc
mov
testl
add
ret
jmp
shrb
pop
cld
lcall
fwait
push
jnp
xchg
in
mov
pushf
jecxz
data16
xchg
pusha
out
pusha
or
mov
adc
inc
mov
mov
stos
mov
in
mull
repnz
push
movl
xorb
out
mov
xchg
cmp
outsb
hlt
jnp
pop
dec
int
jne
and
pop
dec
daa
mov
rcrb
jne
nop
cmpsl
mov
jg
sbb
lea
dec
dec
pop
push
jo
into
lret
outsb
cmpsl
sti
push
call
mov
icebp
bound
pusha
cmp
jno
push
mov
cltd
fnstenv
inc
mov
dec
fs
scas
aam
orl
imul
fs
ret
adc
mov
je
fisttpll
stos
adc
cmp
cmp
push
test
dec
mov
mov
es
aam
pop
mov
fucomip
fwait
xchg
mov
repz
mov
xchg
mov
sub
cmp
les
push
push
call
and
dec
lds
push
sbb
jle
icebp
mov
xchg
mov
push
outsb
stc
jge
aas
cmpsb
repnz
or
sub
outsl
push
notb
mov
aaa
insb
daa
scas
mov
fwait
test
cwtl
leave
push
lock
enter
loop
inc
inc
sub
fs
adc
push
adc
popf
sub
ljmp
pop
pop
enter
ffreep
imul
sarl
pop
jge
arpl
pusha
adc
dec
arpl
addr16
mov
sbb
aad
leave
pop
paddq
fdivl
sub
and
inc
xchg
fisttpl
mov
dec
pop
insb
les
insb
fcom
mov
adc
outsb
not
adc
xchg
je
movsl
shlb
inc
xchg
xor
lret
pop
int
lcall
pushf
orps
shll
inc
pop
int
xchg
xchg
aas
push
daa
pop
add
pop
addr16
jl
imul
andb
pop
pop
aad
mov
out
hlt
cmp
mov
mov
or
fdivs
stos
pop
nop
xchg
ja
cwtl
fwait
inc
gs
mov
iret
jnp
cld
in
dec
mov
sub
clc
adc
jo
fidivrl
xchg
cmpsb
cmp
sub
inc
movsb
nop
in
xchg
testb
xor
sbb
ror
hlt
dec
jmp
adc
jbe
subl
push
add
add
cli
mov
inc
mov
inc
ficoms
sbb
or
push
lods
mov
adc
movsl
mov
notb
inc
push
aam
mov
aad
jne
jb
xlat
pop
cmp
xchg
mov
mov
push
repz
test
aam
jns
adc
fwait
ret
jb
add
pushf
fstps
cmpsb
loopne
or
jg
ds
in
out
insl
push
iret
ljmp
mov
mov
sub
xor
xor
jle
rclb
jle
cltd
icebp
lea
jns
test
jbe
adc
push
gs
ret
jp
jp
call
enter
pop
cltd
jns
cld
xor
sarb
or
xchg
pop
inc
or
mov
loopne
aad
or
mov
ja
int3
call
mov
lcall
jne
mov
push
jmp
mov
mov
pusha
sbb
jb
fwait
sti
in
inc
ret
xlat
insl
pop
je
cmpsb
dec
and
ucomiss
imul
adc
sub
fmul
push
data16
lcall
arpl
out
mov
sti
addr16
test
push
std
jbe
xchg
mov
mov
push
adc
dec
jnp
clc
test
pop
lahf
repz
in
add
cmp
mov
aaa
scas
jbe
push
mov
dec
stc
xchg
push
dec
ss
fdivl
lds
push
jecxz
pop
xchg
sub
adc
cmpsb
sbb
jno
aam
rclb
mov
xchg
ds
xchg
subl
rolb
or
push
mov
dec
xor
push
pop
sub
xchg
cmpsb
sub
xor
add
mov
pusha
lods
int3
xchg
jb
adc
dec
adc
ud1
sti
scas
jo
imulb
sarl
or
inc
das
out
fidivl
pop
xchg
popa
mov
jecxz
leave
inc
fwait
xchg
inc
fmulp
jge
inc
nop
and
inc
xlat
cmp
mov
aam
loop
stc
insl
test
int
or
cmpsl
xchg
lret
dec
dec
jmp
repnz
dec
push
andl
jmp
push
mov
jno
fnsave
push
orl
nop
jns
mov
sbbb
sub
cmpsl
sub
push
insb
lods
shrl
sti
dec
cmp
mov
mov
push
sub
pop
sti
mov
or
dec
pop
in
daa
stc
jle
mov
scas
jp
and
je
adc
mov
mov
mov
mov
inc
repnz
dec
dec
addb
sub
mov
addl
orb
inc
lods
stos
andl
adcb
add
scas
orb
iret
out
push
add
loope
adc
insb
fists
je
pop
dec
ljmp
xchg
mov
loopne
jmp
sahf
je
xchg
rcl
subb
into
scas
icebp
jbe
mov
dec
mov
pop
popa
mov
stc
ret
mov
into
lea
daa
cmp
lock
cmp
and
xor
mov
add
clc
std
lcall
mov
in
test
mov
in
pop
insl
cltd
jle
in
rorl
fldl
dec
dec
mov
mov
xor
fistpl
hlt
lock
lret
int3
jnp
sub
jecxz
mov
sbb
daa
dec
jnp
add
mov
faddl
add
lahf
cmp
hlt
cwtl
adc
jecxz
adc
dec
jecxz
ja
js
add
push
cmp
clc
push
rcrl
popl
repz
xchg
std
dec
mov
pop
or
push
outsl
popa
and
shl
push
iret
mov
es
pop
repz
mov
inc
xor
adc
cmp
or
sub
loopne
jne
xchg
mov
lods
mov
in
mov
and
mov
rorb
nop
cs
jo
dec
out
mov
mov
push
cmc
enter
lods
out
sbb
jns
or
aaa
imul
lds
inc
cmp
or
inc
xlat
subl
gs
aam
add
xchg
ja
dec
xor
mov
rcrl
nop
movsl
pop
jae
lea
inc
jmp
sbb
push
and
mov
cmp
cmp
mov
lret
outsl
xor
and
cmc
dec
imul
sub
push
push
das
add
subb
dec
fwait
stos
mov
inc
clc
fldenv
adc
mov
jmp
call
out
adc
adc
mov
repnz
adc
push
and
movsl
addl
mov
shll
into
mov
andl
add
test
xlat
jno
stos
xor
aam
push
sbb
lock
mov
jb
sbb
push
hlt
inc
jne
add
jp
xchg
inc
mov
cmp
cmpsl
hlt
ljmp
aas
xchg
pushf
fildl
jle
jecxz
mov
dec
cmpsb
imul
pop
js
mov
cmc
mov
stos
sub
dec
out
inc
fmul
scas
in
repz
ds
fadds
out
orb
jle
and
ja
je
fwait
out
icebp
mov
inc
cmpsl
ds
int
negl
dec
nopl
adc
aam
cs
fidivl
repz
add
cmp
mov
or
arpl
and
cmpsl
movsb
mov
mov
xor
push
and
repnz
into
ss
cmpsb
xchg
inc
xchg
leave
js
cltd
sub
xchg
jo
push
iret
xor
mov
outsl
cmp
or
adc
adc
pop
dec
gs
mov
fs
aad
jg
mov
dec
movsb
enterw
push
jb
cmp
jnp
orl
and
add
sbb
pusha
pop
sbb
in
and
dec
imul
inc
idivl
ljmp
sbb
cmp
and
cmc
mov
jmp
hlt
in
add
vpackuswb
mov
xor
out
jecxz
shll
xor
mov
add
cli
stos
aam
sub
add
or
shll
movsl
push
push
mov
dec
je
popf
xchg
je
jmp
stc
jmp
lret
xor
pop
adc
in
scas
mov
xchg
les
mov
or
lret
mov
daa
pop
xchg
and
cmp
or
stos
adc
js
jae
adcl
push
insl
lcall
push
dec
out
xor
inc
in
ljmp
push
or
xor
mov
ret
orb
adc
cmpsl
mov
adc
aaa
xor
xlat
out
sar
and
and
fs
mov
cltd
add
push
out
sub
and
mov
jg,pt
dec
xor
push
push
test
jl
pushf
push
enter
in
jo
adc
xor
out
leave
sub
aad
into
mov
cmp
shrb
stos
repz
pushf
adc
and
lahf
or
mov
inc
sbb
fstpl
xlat
mov
scas
popa
lea
sarl
mov
scas
cld
lds
sub
js
mov
lea
cmpsb
daa
in
fistps
and
int
push
scas
lahf
loopne
cmp
jnp
push
dec
xor
lea
imul
shlb
pushf
push
adc
fists
ljmp
movsl
adc
lock
lods
jg
lea
loopne
lods
ret
repz
call
cmp
loopne
scas
test
sbb
fwait
sub
jno
jl
sub
arpl
sub
jg
dec
jecxz
jge
lcall
push
xorl
mov
lds
adc
pop
sbb
and
push
mov
arpl
fldl
dec
pop
xor
movsb
push
test
pusha
int
inc
or
cld
fucomp
pop
or
cmp
jg
fs
lcall
sub
xor
and
adc
or
test
scas
xchg
jp
and
pop
loopne
inc
inc
xor
push
test
dec
sub
mov
mov
mov
mov
mov
pop
movlps
gs
cmpsb
xor
fists
int
sbb
push
inc
mov
dec
andb
dec
out
pushf
sahf
ret
jle
movsb
jl
dec
push
xchg
mov
js
out
add
pop
ret
mull
movsb
xchg
pop
fcompl
fidivs
push
enter
xchg
jmp
pop
sub
mulb
gs
cli
mov
inc
ror
cli
push
adc
dec
sub
iret
mov
out
dec
loopne
adc
lods
xchg
inc
push
lods
fbld
rep
sqrtps
pushf
fisubrl
cmpsl
sbb
cmp
leave
sti
in
dec
aas
inc
hlt
test
xchg
fs
cmp
add
pop
mov
aaa
mov
fildl
pop
pop
mov
dec
imul
data16
fiaddl
outsl
sub
out
push
ja
repz
pop
xchg
jmp
daa
shlb
icebp
fidivrl
push
pop
sub
lds
clc
or
enterw
and
stc
and
mov
inc
cmp
cmpsl
pushf
push
stc
dec
sub
and
das
mov
dec
add
stos
dec
gs
cmp
push
das
pushf
dec
hlt
imul
sub
addr16
cmp
inc
inc
add
jp
in
mov
mov
out
push
jnp
xor
sbb
test
mov
cmp
shlb
add
cld
push
inc
loop
push
iret
cmp
aad
out
int3
xchg
clc
mov
xor
adc
aaa
lahf
mov
cmp
xchg
rep
mov
icebp
jle
xor
rol
push
test
dec
dec
hlt
ljmp
mov
imul
add
clc
mov
dec
add
clc
or
mov
pop
xchg
jmp
cmp
lods
and
mov
jmp
add
and
aad
jmp
add
xor
rcrb
push
outsb
imul
xchg
pop
mov
pop
cmp
push
jmp
ret
mov
jbe
cmpsl
push
xchg
push
leave
outsb
lret
sbb
mov
rol
test
movsb
testl
sbbl
je
mov
sbb
push
sbb
add
jecxz
cs
xor
fcmove
loopne
test
dec
loope
sub
imul
push
jge
cmp
or
inc
adc
mov
jb
popf
lods
arpl
mov
fadd
mov
push
sub
jb
sub
imul
adc
es
cmp
dec
pop
xor
pop
js
cld
jmp
int
pop
in
mov
repz
adc
cmp
fistl
push
mov
adc
cmc
movsb
cltd
fistl
outsb
mov
xchg
sub
outsb
mov
mov
jmp
dec
cld
out
jnp
sub
pop
dec
dec
idivl
mov
add
cmc
mov
clc
xchg
loopne
jnp
jge
jp
repz
sti
pop
nop
jp
mov
mov
and
cmpsl
jbe
shlb
jb
mov
inc
mov
loop
lret
and
stos
pushf
and
push
jne
out
int3
sti
push
rorb
imul
sbb
in
pushf
aad
push
mov
xor
lods
or
sbb
inc
out
daa
sbb
sbb
int
ret
ud2
pusha
cld
jmp
insl
sub
mov
je
add
or
cld
sub
pop
xchg
subl
xchg
std
cmp
mov
ljmp
jb
inc
xchg
sub
mov
xor
cmp
fstp
mov
jmp
lea
or
outsl
lock
divl
lcall
xchg
sbb
test
rorb
movsb
adc
and
sub
mov
cmc
or
add
adc
nop
push
push
add
jbe
lea
mov
test
mov
aad
sub
adc
sarb
mov
shl
sub
ror
lea
call
cmp
sbb
xchg
inc
pop
out
jecxz
std
mov
les
insb
xchg
cmp
in
into
fildl
seta
dec
cmp
add
lods
push
mov
or
xor
sub
mov
push
out
adc
or
add
outsl
int
push
xor
or
aaa
pushl
pop
mov
mov
adc
xor
and
enter
and
imul
and
les
fcomps
imul
push
arpl
inc
jmp
sbb
jle
mov
ds
bound
lahf
xor
dec
pusha
stos
jl
push
or
out
or
dec
aas
cmpsl
push
mov
adc
leave
push
pop
ja
bound
repnz
loop
mov
inc
xor
ds
xor
daa
add
cmp
mov
ljmp
cmp
push
and
push
lods
jno
adc
jl
push
lret
rcll
lods
add
out
sub
cmpsb
mov
aam
daa
add
mov
mov
mov
inc
xchg
xchg
cli
jmp
in
getsec
mov
jmp
xchg
or
es
adc
pop
mov
xor
jp
out
fdivrl
andb
or
pop
imul
pop
and
push
sbb
jne
hlt
jecxz
dec
xchg
lock
fimuls
lea
and
mov
pop
in
xchg
cmp
xor
mov
jl
shlb
ds
and
test
add
lods
pop
and
xchg
and
cmp
adc
loopne
popf
cltd
inc
pop
push
and
sub
gs
aas
call
cmp
stos
loopne
xchg
sub
or
in
icebp
xor
push
fs
dec
xor
orb
insb
insl
cmp
jns
sbb
popa
loop
mov
dec
mov
scas
mov
into
jecxz
subl
faddl
push
cmp
xor
test
mov
xchg
std
add
sub
out
mov
test
mov
mov
push
or
inc
adc
setns
movsb
xor
pop
mov
int
scas
and
jb,pn
lods
or
lahf
sbbl
stos
mov
and
enter
test
mov
mov
xchg
cld
and
jl
repnz
sub
test
xchg
lcall
cli
bound
push
cs
or
movb
arpl
push
testb
lock
je
add
sub
aad
or
xchg
popa
dec
dec
popa
sub
lret
adc
popa
lcall
popf
xchg
insl
sbb
xchg
or
stos
ret
cmpsl
mov
or
test
cwtl
dec
sbb
jmp
das
inc
pop
mov
pop
push
test
xchg
call
repz
and
jbe
xchg
and
and
lcall
jnp
andb
pop
jb
cmp
rorb
ljmp
repnz
xor
or
test
xchg
lea
ljmp
popf
jp
sbb
mov
add
lret
mov
xor
les
and
and
dec
out
xor
push
sbb
mov
mov
loope
xor
lods
faddl
in
pop
push
shll
xor
lret
stc
aad
dec
out
lods
adc
inc
mov
movsl
stos
out
ret
xchg
stos
and
cs
out
push
lret
popa
pop
aam
dec
xchg
out
ret
mov
iret
sbb
jbe
xchg
or
xor
out
mov
pop
mov
push
xchg
js
sbb
pop
addr16
lods
roll
push
lret
xor
mov
shrl
data16
daa
loop
push
rol
in
scas
jb
cwtl
or
mov
mov
jmp
pop
in
rcr
jae
xchg
push
insb
popa
aad
add
test
ret
leave
xor
mov
jge
jl
lret
fbstp
push
fs
lret
loop
sub
das
inc
mov
mov
ljmp
imul
adc
test
ja
lcall
push
imul
into
mov
or
pushf
lds
fiaddl
out
cmp
loop
icebp
and
dec
sarb
shll
pop
sahf
mov
ret
cmp
shlb
into
add
hlt
shll
movsb
xor
loope
fs
pushf
enter
mov
fmull
fnstcw
mov
mov
push
das
jl
lods
jbe
test
dec
and
mov
stc
jge
push
pop
sub
inc
test
orb
sub
add
addr16
lahf
aaa
sub
sbb
or
out
in
dec
repz
jns
hlt
inc
mov
mov
add
jmp
int
mov
xchg
or
imul
cmp
mov
or
dec
mov
mov
sub
xchg
dec
inc
push
push
sbb
mov
cli
ret
adc
stc
adc
cld
lret
mov
aam
and
mov
inc
xor
push
gs
hlt
arpl
adc
rcrl
jne
jp
std
loopne
jae
mov
js
jge
arpl
push
loopne
int3
cmp
push
add
inc
push
clc
arpl
xor
testl
in
mov
push
mov
mov
dec
push
lock
icebp
mov
insb
int
sahf
fwait
pop
push
les
mov
sti
stos
ret
sbb
inc
popa
cmpsl
std
in
push
pop
dec
daa
mov
pop
fisubrl
les
push
inc
rep
orl
jnp
dec
pusha
add
dec
mov
lret
nop
popa
and
call
or
loopne
outsb
stc
popf
shlb
pop
jno
or
jl
fmul
jmp
mov
jbe
out
mov
jo
add
jno
dec
push
mov
push
sbb
lods
ror
adc
sbb
enter
sar
xor
dec
enter
push
mov
lea
lods
mov
mov
sub
xchg
fcmovbe
lods
addr16
stc
sub
adc
leave
hlt
cs
sbb
pop
jge
in
movsl
jb
cmp
sbb
orl
mov
pop
sub
addr16
push
pusha
sti
clc
aam
push
cmpsb
pop
loope
push
into
or
gs
in
or
lock
dec
mov
push
sub
inc
cmp
arpl
fadds
movsl
sub
mov
test
mov
lret
mov
aad
ret
jo
popf
jbe
scas
jge
sbb
push
fisttpl
or
push
jno
int
jnp
daa
loopne
push
dec
or
shl
pushf
adc
xor
jecxz
xchg
out
repz
push
test
aas
test
cmc
mov
xor
sub
stc
push
mov
cmpsb
mov
jno
xor
das
arpl
cmp
xor
xor
cmp
pusha
call
roll
lcall
rorb
mov
popl
inc
or
enter
push
lods
jnp
jnp
movsl
push
jnp
jns
adc
cmp
adcb
inc
arpl
ret
adc
cmp
jno
out
inc
pop
cmp
je
sub
data16
test
imul
or
popa
mov
repnz
inc
lahf
xor
xchg
add
aas
xor
dec
lea
call
push
mov
xchg
ja
cmp
testl
aad
movsl
enter
ret
mov
cmp
mov
inc
jge
ljmp
inc
or
aam
dec
sbb
mov
sub
ljmp
int
in
and
and
pop
and
mov
inc
jae
fcmovbe
je
into
mov
jno
andb
jp
subl
inc
jl
xchg
in
xor
int3
cmp
sbbb
xchg
push
dec
push
test
adc
cmp
dec
add
idivl
cli
fxch
stc
repnz
jg
sub
sub
jae
jl
rep
es
fidivl
and
cmp
sbb
imul
inc
outsb
faddl
xchg
fdivrl
mov
adcl
sbb
imul
push
mov
fistps
add
xor
aad
or
ret
push
loope
int3
cli
aad
push
test
xchg
and
std
aad
jmp
leave
rorl
loopne
and
cmp
xor
insb
jecxz
xchg
hlt
xchg
cwtl
dec
push
adc
mov
int
sahf
lods
jbe
test
inc
cmpsl
sbb
pop
insb
daa
pop
mov
stos
sub
clc
mov
add
xchg
sbb
jmp
pop
andl
xchg
pop
aad
stos
push
cmc
stc
xor
rcll
in
in
or
jp
outsb
fisttpll
shll
pushl
in
push
stos
fiaddl
loop
sbb
mov
adc
test
hlt
fists
xchg
add
rclb
inc
mov
cltd
scas
popa
pop
push
add
and
data16
and
sub
push
sti
testl
pusha
aas
add
push
or
jo
and
and
clc
jge
xchg
std
mov
rclb
pop
jb
cmp
rorb
mov
lds
gs
leave
lret
or
adc
or
and
xor
push
lret
nop
out
das
into
rclb
into
mov
mov
xor
and
aas
ret
xor
lret
mov
mov
mov
jl
and
fdivrs
and
lods
bound
movsb
outsl
icebp
cmp
push
shrl
sub
xlat
mov
xchg
push
sbb
scas
cmp
jg
sub
gs
jmp
add
mov
inc
lds
xor
mov
push
inc
lret
neg
iret
in
xlat
mov
popa
pushf
push
mov
jns
movsl
or
icebp
jae
loope
loop
jmp
pop
inc
pop
sbb
adcb
sbb
xchg
nop
cmp
mov
sub
mov
sbb
lret
jecxz
jmp
sahf
mov
push
shl
repnz
mov
testb
jmp
mov
std
push
lds
push
popf
pusha
adc
jo
cmpsb
lahf
jmp
movsb
scas
push
pop
inc
adc
pop
jne
cmpsl
cmpsl
pushf
or
ja
add
pusha
jbe
fadds
push
or
jl
aaa
addr16
sub
aad
lret
push
subl
sub
nop
pop
mov
enter
xor
and
and
aad
sbbb
jle
cmpsl
fwait
jle
mov
in
add
mov
in
setl
repz
mov
xchg
and
mov
aam
xor
clc
or
movsb
repnz
dec
fisubrs
xchg
bound
push
cli
push
adc
fcmovb
icebp
mull
call
cmp
test
ror
int3
or
pop
jo
lods
aad
sarb
loopne
xchg
xchg
test
inc
dec
popa
jo
xor
jb
ficoml
jnp
adc
push
ds
sbb
sbb
inc
je
movsl
xchg
sbb
cmp
popf
jns
imul
cltd
jne
outsb
addr16
shrb
insb
jno
push
outsl
clc
jbe
mov
push
sbb
les
jle
push
and
cmp
sbb
test
sub
in
lret
jp
lret
subl
mov
idivb
pop
pop
pop
outsb
imul
push
rcrl
jg
ds
mov
inc
aas
in
out
sbb
in
idivb
or
mov
popf
movsl
test
xchg
jns
mov
xor
xchg
mov
mov
rorb
test
into
loopne
adc
clc
xchg
inc
dec
pop
xchg
call
and
push
pop
call
xchg
int
shll
pop
data16
jl
or
ja
xchg
add
inc
jmp
add
pop
pop
aaa
cld
stc
leave
cli
dec
dec
test
addb
inc
rcl
add
lret
xorl
mov
cld
mov
mov
sub
ficoms
notl
lcall
lcall
insb
cli
call
xchg
dec
mov
mov
sub
pop
ss
push
shl
inc
xor
push
cmp
inc
sbb
rcl
xchg
out
jbe
sahf
subl
and
imul
mov
int
cwtl
outsl
cwtl
out
mov
repz
test
cmp
or
xlat
fidivrl
push
adc
push
jg
push
mov
adc
insb
push
xchg
add
mov
iret
sbb
cmp
xlat
cmpsb
in
cmp
imul
fidivl
mov
and
inc
insb
xor
cmp
fimull
xor
push
inc
or
add
popa
je
push
mov
pop
mov
repz
fwait
insb
pop
and
mov
sar
dec
push
inc
lcall
sbb
shl
jo
out
and
or
and
sub
aam
mov
scas
cmp
lock
mov
das
dec
ret
outsl
adc
xor
aad
fs
jmp
or
jmp
sub
loope
cmp
mov
mov
arpl
das
lods
into
mov
dec
lods
xlat
sub
dec
xchg
xchg
xor
dec
loop
and
mov
mov
popf
adc
rolb
push
xor
aam
sub
adc
push
add
scas
rol
xor
mov
sbb
xchg
sbb
inc
jns
jno
push
in
push
in
xorb
xor
cmp
lds
lahf
call
loop
sahf
movsb
and
sti
jo
out
push
lahf
iret
jnp
add
add
add
mov
cmp
aas
sarb
into
pop
sbb
int3
add
std
lcall
fwait
pop
test
dec
and
mov
inc
pop
mov
xor
dec
cs
pop
xlat
ret
add
and
sbb
rolb
imul
mov
les
lret
aad
mov
mov
imull
xchg
fs
stos
sbb
adc
mov
dec
popa
cwtl
ret
xchg
jle
in
call
or
inc
repz
idivb
or
jecxz
or
jle
addr16
pop
mov
dec
cld
fdiv
ja
dec
dec
and
pop
into
mov
push
in
fildll
arpl
push
adc
sahf
loopne
pusha
add
sarl
mov
pop
call
sbb
shr
aam
frstor
push
movsb
roll
insl
push
aad
jae
xchg
pop
sub
dec
cmp
roll
push
xor
cmpsl
pop
in
addr16
mov
lock
sbb
sub
divl
push
sbb
cld
push
jno
rol
pop
cmp
fucomp
sub
mov
icebp
cmp
xchg
mov
jl
push
push
arpl
pushf
jecxz
add
push
push
cmpsl
jne
mov
not
in
jl
ret
or
sub
and
std
sbb
cmp
repnz
or
add
orl
sahf
into
in
sti
cmp
mov
movsl
stos
cmp
not
inc
ret
fsub
sbb
cmp
cs
icebp
andl
test
test
test
dec
lret
push
test
pop
gs
cmp
mov
push
add
dec
shr
loope
and
dec
add
pop
jge
sub
out
das
and
jns
out
mov
inc
xor
decl
pop
les
mov
cmp
dec
and
ret
cmp
jecxz
scas
xor
dec
into
mov
inc
mov
lods
inc
or
js
dec
test
mov
cmp
mov
out
jecxz
fnstenv
stos
pop
mov
mov
push
or
xchg
lea
fwait
js
in
push
jl
mov
loop
cmp
jg
pop
out
inc
inc
lret
add
pop
add
pusha
lcall
movsl
ja
add
ret
xor
mov
cmp
jmp
jne
arpl
xchg
lahf
fildll
cmp
imul
inc
jl
xor
xor
jb
mov
cld
add
lret
insb
es
aaa
sahf
js
test
xlat
dec
add
test
cmp
rcrb
pop
movsl
popa
arpl
cmp
and
inc
and
test
inc
lret
ret
cmpxchg8b
addr16
movsl
or
mov
add
je
sbb
mov
movsl
stos
jb
and
mov
int3
cmp
cmp
xlat
cs
push
icebp
or
pop
sbb
out
test
dec
push
xchg
loope
nop
es
push
scas
push
mov
insb
gs
int3
clc
jl
sub
cltd
jmp
jecxz
imul
lret
xchg
std
or
iret
lods
xchg
push
lahf
pop
mov
push
mov
cli
cs
push
shlb
or
andl
into
dec
insb
or
fwait
push
subl
aas
mov
jecxz
xchg
stc
fsts
lret
add
pop
in
fisubs
cltd
dec
adc
lmsw
ds
mov
xchg
loope
jne
adc
sub
push
into
lds
icebp
pop
int3
cmp
scas
aad
call
fistpll
push
xchg
call
enter
pop
jecxz
and
arpl
mov
sub
addr16
insb
xlat
sbb
or
lret
ret
fisubl
sbb
addr16
test
xchg
pop
xchg
sub
jg
push
xlat
sub
lret
push
insb
mov
push
cmp
xchg
jge
add
aaa
and
bound
xchg
adc
pop
nop
ret
out
sub
adc
push
iret
mov
fistpll
sbb
pop
rolb
xchg
sub
mov
mov
and
mov
fs
outsl
jl
lods
into
push
or
pop
fwait
pushf
pop
out
cmc
sbb
or
adcl
repz
adc
dec
cmp
or
jo
cmpsb
xchg
mov
adc
or
fwait
add
jg
lods
addr16
and
or
adc
les
xor
sbb
jns
mov
cmp
fwait
mov
and
test
jecxz
cmp
jbe
push
jle
inc
and
mov
int
and
push
test
push
cmp
fs
scas
arpl
mov
xor
xchg
out
jle
mov
dec
negb
pusha
pop
sub
sbb
push
pop
mov
pop
mov
sar
lcall
pop
jle
and
dec
cli
testl
clc
gs
xor
scas
into
xchg
push
jl
cmp
in
or
push
jle
ss
pop
out
mov
jecxz
lret
fs
pop
push
xor
ret
xchg
jmp
iret
inc
int
pop
sub
aaa
mov
push
mov
cli
and
xchg
popa
cwtl
push
cmpsl
nop
lods
daa
push
add
sub
cld
fidivrs
jle
sahf
jge
add
adcl
ds
test
je
in
int3
scas
add
adcb
shll
daa
sub
push
fdivrl
sar
pushf
inc
ficomps
fldl
data16
sub
jb
jmp
xchg
out
lods
pop
out
jp
aad
xor
mov
js
fimuls
scas
sbb
sbb
fwait
pusha
nop
je
xor
es
dec
mov
sbb
lea
pushf
insb
cmpsl
inc
jne
mov
cs
xor
out
add
mov
shrl
mov
xor
icebp
xchg
or
cmc
inc
mov
popa
in
rorb
jno
jae
jne
or
xor
fimuls
jnp
jl
cmp
pop
movsl
idiv
popf
sub
add
repnz
jb
repnz
add
int3
scas
or
scas
int3
xchg
jns
rcr
cld
mov
mov
enter
cli
xchg
es
sub
sbb
pop
out
aaa
dec
push
pop
mov
jae
mov
in
fcoml
mov
shlb
pop
xchg
lods
mov
push
loopne
es
call
adc
or
add
ss
movsb
mov
mov
movl
xsaveopt
sub
jns
stos
cmp
ljmp
fimuls
or
xchg
sarb
addr16
xor
test
fidivl
and
xor
imul
movsl
dec
mov
or
das
imul
nop
cmp
push
mov
xchg
cmpsl
dec
sbb
pop
ss
push
lds
icebp
pop
cmp
or
popa
inc
push
lcall
mov
scas
sbb
adc
add
loop
cmpsb
and
mov
das
ja
dec
test
es
xor
gs
sub
int3
mov
mov
inc
rcll
pop
mov
and
dec
push
and
shl
pop
push
inc
enter
xor
pop
ret
sub
test
fsts
cmp
pop
leave
xor
rol
push
sbb
lods
pushf
and
movsl
push
adc
stos
mov
jecxz
shl
nop
test
mov
testl
daa
pop
loope
pop
cld
mov
flds
mov
inc
scas
mov
xor
arpl
jnp
loope
lds
push
insl
lret
mov
jae
lds
sub
mov
xchg
sub
in
ljmp
fisttpll
adc
mov
sahf
xchg
inc
xor
into
xchg
push
mov
or
les
rorb
add
lods
ficomps
pop
test
adc
pop
mov
jne
pop
insb
jecxz
push
fdivrl
inc
or
mov
mov
loopne
cld
les
jmp
xchg
inc
xor
sbb
mov
adc
pop
xor
in
in
mov
das
cmp
rcll
iret
jg
cmp
out
inc
push
mull
pop
push
sub
lock
popf
incb
pop
fsts
mov
sbb
xlat
clc
mov
push
xchg
xor
out
fdivrl
mov
imul
jg
adc
repnz
in
leave
mov
js
inc
xchg
fs
add
hlt
rcl
inc
das
pop
pop
jmp
loope
adcb
and
xchg
cmc
mov
mov
insb
inc
mov
push
sbb
or
pop
push
mov
or
insb
mov
pop
dec
lods
out
mov
push
lret
adc
in
pop
or
or
lea
sbb
std
lcall
push
xor
and
subl
add
cli
inc
in
cmc
or
jne
cmp
mov
dec
mov
imul
mov
dec
cli
dec
popa
sbb
mov
mov
shlb
enter
sbbl
mov
fimull
repz
stos
xor
fwait
sbb
pop
mov
into
xchg
nop
cwtl
xchg
stc
xchg
cli
mov
mov
xchg
add
fstpt
mov
mov
push
into
outsl
mov
outsb
cmp
out
ret
push
xor
insl
inc
jnp
push
and
jbe
into
leave
pop
push
insl
xchg
inc
lahf
loopne
mov
test
cmpsb
fmull
or
sbb
imul
orb
ss
repz
mov
out
data16
inc
push
frstor
adcb
stos
xchg
sub
imull
addr16
negb
cmp
sbb
xchg
data16
mov
nop
ss
scas
mov
cmp
ss
xchg
ss
add
mov
fiaddl
movsb
sarb
lods
push
sbb
fldl
xor
jecxz
pop
aad
mov
mov
or
rcll
jmp
in
lahf
call
push
ljmp
fwait
cs
cmpsb
push
gs
test
and
xorl
mov
mov
lea
dec
cwtl
adc
add
pop
add
popa
ss
outsl
lods
and
std
adc
int
sbb
test
or
mov
pop
sbb
xor
outsl
stc
in
adc
mov
movsb
sub
mov
dec
sub
imul
push
dec
mov
lea
movsl
pop
dec
decb
cmp
fldcw
ret
inc
dec
adc
xchg
inc
mov
cmp
mov
fimull
and
clc
xchg
adc
mov
or
aam
and
lcall
stos
add
cmp
fidivrs
mov
jae
lret
data16
dec
pusha
mov
out
fimull
fs
movsb
add
dec
sub
into
ljmp
lock
sbb
fwait
cmpsb
sbb
adc
mov
pusha
movsb
dec
mov
push
xchg
xchg
jns
pop
insb
sub
ds
dec
adcb
push
imul
aas
sub
jl
xchg
inc
js
add
mov
adc
or
mov
incl
pop
movsl
out
cs
sub
push
popf
loope
or
sub
lds
dec
mov
sbb
or
push
inc
lahf
popa
cmp
stc
shll
int
xor
pushf
jne
mov
shrl
push
call
or
fiadds
add
jno
mov
or
cwtl
lods
mov
push
into
aas
pop
jbe
cmp
or
cli
ds
mov
es
or
sbb
mov
xlat
rorb
or
sub
mov
inc
xchg
pop
mov
sbb
mov
mov
adc
mov
or
stos
lret
jno
fwait
xor
jp
sbb
stc
scas
iret
xchg
popl
enter
pop
dec
sbb
and
lods
jbe
xchg
je
sub
test
in
mov
inc
test
out
aas
pusha
aaa
xor
or
jge
cmpsl
pop
sti
cmp
and
mov
sbb
cmp
jg
filds
ret
movl
inc
in
test
je
xchg
or
inc
or
and
cld
xchg
sub
mov
xor
fldt
leave
in
mov
xlat
and
lea
das
push
or
int
jbe
lds
scas
mov
insb
in
cmp
fbld
jp
fmull
jo
and
push
xor
jp
inc
gs
fstl
jge
jecxz
call
js
xchg
and
shll
push
iret
xlat
inc
pop
hlt
testl
lock
jnp
push
push
jno
mov
xchg
pop
mov
jnp
cmp
inc
hlt
cmp
xor
stos
dec
sub
and
cwtl
lret
decl
sub
popf
negb
jmp
mov
inc
in
insl
imul
in
fldt
jb
xor
jp
mov
cmp
mov
and
add
jl
out
test
sti
test
lret
and
adc
dec
stos
mov
das
add
ret
sub
movsb
sub
add
cmpsb
ja
mov
call
arpl
push
mulb
call
push
loopne
mov
xchg
clc
mov
adc
mov
mov
push
and
sub
xchg
test
std
jge
sub
sub
xor
jnp
or
pushf
add
mov
or
adcw
sarb
cmovs
bound
insl
cmp
mov
stos
or
das
or
mov
mov
mov
fwait
pop
bound
or
negl
mov
clc
jne
mov
dec
xlat
movsb
ss
cmpsl
inc
cmc
out
lret
cmc
sarl
push
dec
cmp
std
pusha
pushf
inc
repz
pop
pop
jae
inc
pop
je
and
mov
xor
jnp
pusha
mov
mov
adc
imul
stc
jo
aas
loope
pusha
xor
sub
rcrb
jmp
dec
or
data16
dec
ss
and
sbb
pop
mov
ja
mov
mov
jb
add
mov
and
lea
jbe
add
sub
shlb
adc
loope
cli
scas
jge
addr16
inc
enter
cmp
sub
mov
push
push
push
mov
pop
subl
pop
movl
dec
dec
repnz
mov
gs
sub
js
jno
repz
ror
pop
aas
push
cltd
ret
add
popf
cmc
add
add
xchg
ds
aaa
push
and
das
inc
aaa
add
sbb
mov
mov
lret
xchg
popf
and
adcl
mov
call
ja
mov
das
lcall
sahf
xorb
mov
adc
push
pop
or
jne
xchg
dec
dec
pop
pop
addr16
add
shld
xchg
sbb
ds
mov
pop
dec
xchg
mov
dec
aam
adc
andl
mov
jecxz
leave
popl
cli
xor
subl
cmp
xchg
pop
cmp
stos
outsb
in
ja
psubd
lods
insl
std
mov
pop
xchg
addr16
fsts
and
out
mov
in
jle
mov
add
xchg
test
in
push
test
movb
arpl
sbb
es
xchg
dec
mov
cmp
sar
xchg
shrb
movhlps
loopne
sbb
sub
std
inc
jne
jp
xor
hlt
lods
popf
test
jae
out
mov
push
pop
popf
cmc
ret
lds
shlb
inc
xor
cmp
call
insl
mov
insb
mov
leave
into
movsb
sahf
jbe
dec
ret
imul
sbb
int3
xchg
popa
stc
pop
mov
in
fidivl
cmc
or
hlt
lods
mov
xor
xor
sub
mov
lock
test
shlb
jns
xchg
dec
test
dec
push
addb
out
adc
popf
imul
push
sbb
pushf
jle
aas
push
mov
inc
les
addr16
test
ror
dec
fldcw
mov
mov
xchg
call
xchg
mov
inc
stc
mov
and
sub
xchg
movsb
mov
xchg
scas
jbe
jp
push
aaa
popl
shrb
xchg
test
call
mov
cs
rorb
xchg
xchg
int3
imul
sbb
push
and
cwtl
int
out
push
push
insl
pop
test
push
stc
out
add
outsl
out
cmc
imul
cmp
jle
push
mov
addr16
sub
enter
js
nop
inc
mov
or
push
pop
pop
jecxz
sarl
xchg
aam
inc
orb
mov
xchg
ds
dec
sub
mov
sub
push
test
into
sub
loop
rclb
mov
in
scas
mov
outsb
stc
out
xor
int
dec
add
pop
push
mov
add
enter
jae
sar
sti
sbb
cmpsb
stc
fnsave
or
and
mov
mov
imul
addr16
sbb
ror
and
lcall
cmpsl
inc
popa
jge
mov
jmp
cmpsb
icebp
pusha
enter
imul
sbb
mov
jbe
mov
xchg
mov
adc
sbb
and
pop
or
mov
je
scas
ret
out
mov
idivl
dec
cwtl
mov
out
xchg
outsl
push
cmpsl
dec
stc
fisttpll
jne
insl
les
or
lret
mov
imul
stos
and
cld
inc
xchg
ljmp
fdivp
mov
test
push
pop
rcr
pop
jmp
dec
mov
inc
ror
dec
pop
push
and
jne
adc
jp
adc
mov
jecxz
push
jbe
outsb
repz
jl
shrl
push
mov
je
out
mov
outsb
mov
out
sarl
and
test
xchg
out
add
int
int
outsl
loope
pop
inc
xor
xor
xchg
aad
rcll
adc
hlt
lcall
jb
scas
mov
mov
or
add
xlat
pop
push
cltd
mov
imul
adc
loope
fisubrs
daa
adc
push
or
mov
orb
lods
push
jnp
and
jne
in
and
dec
repz
lods
std
adc
ds
push
ljmp
jne
xor
inc
mov
das
mov
leave
jle
pusha
iret
xchg
xchg
jns
loopne
clc
sbb
inc
jl
pop
aad
push
xor
fisttps
xchg
arpl
mov
sbb
aam
clc
movb
fcmovnb
outsb
in
inc
cmpsl
fistps
mov
fcmovbe
adc
pop
bnd
mov
or
inc
xchg
mov
add
fcmovnb
add
aam
inc
cmc
dec
push
cmp
vmread
aad
movsl
aaa
cwtl
out
dec
or
push
mov
enter
stc
sub
call
loop
sbb
imul
mov
rcrl
and
int
mov
inc
mov
dec
je
out
aaa
sub
jb
sbb
adc
adc
into
jmp
jns
bound
out
shrb
gs
lea
aad
int3
mov
in
xor
and
push
aam
sub
adc
xor
bound
jbe
cmpsl
jmpw
fwait
sahf
cltd
in
das
sub
sar
js
and
sahf
dec
fsubs
push
imul
dec
mov
sbb
rclb
dec
dec
ffree
mov
jo
or
cmp
movsb
dec
sub
pop
fisubl
xchg
and
shlb
xchg
es
xchg
cmp
popf
faddp
aad
mov
jne
mov
inc
out
sar
test
lea
in
addl
out
mov
and
adc
push
out
sbb
xchg
cmc
xor
or
in
inc
xlat
mov
stos
psubsw
mov
subb
divl
psrld
rclb
cmc
fstpl
jg
mov
ss
jg
fsubs
mov
in
out
sub
je
mov
cmp
add
cmpsl
pop
pop
inc
lret
xlat
negl
leave
mov
add
xor
push
and
or
mov
scas
jns
push
icebp
mov
cwtl
stos
mov
rclb
es
pop
xor
add
scas
cmp
iret
ljmp
das
in
pop
sti
cmpsb
jge
cmc
mov
xor
aas
insl
and
arpl
ja
loope
xchg
inc
lock
sarl
cmp
mov
mov
fbld
lock
call
mov
jnp
push
orb
roll
adc
dec
lea
jo
xchg
aam
rorb
add
sub
iret
xchg
inc
ret
leave
mov
jno
mov
mov
dec
dec
stc
sub
scas
jg
imul
ss
jne
repz
push
in
sub
jg
movsl
lods
cmp
xchg
xor
or
dec
inc
repz
arpl
test
jne
ljmp
mov
dec
inc
enter
push
push
ljmp
or
jge
xor
sbb
test
inc
mov
sub
aas
cs
xor
fld
pusha
out
inc
push
xchg
outsl
pop
add
adc
lahf
and
or
imul
pop
mov
out
xchg
pop
loop
sub
addb
push
or
popf
scas
repz
clc
xor
or
outsl
iret
mov
mov
dec
lea
gs
ss
int
call
sbbl
mov
stc
addr16
add
sub
jecxz
inc
mov
in
push
les
test
pushl
jno
scas
or
int
leave
pop
push
outsb
adc
clc
mov
sub
xchg
idivb
cmp
adc
sbb
push
repz
and
int
jo
roll
nop
test
andl
push
and
stos
hlt
push
pop
sbb
jecxz
cli
add
jae
cmp
push
mov
push
scas
dec
lods
lds
popa
push
xor
mov
sbb
int
pop
nop
xor
add
loope
cmpsl
push
bound
mov
aam
pop
mov
push
pop
push
leave
dec
jb
sub
in
vmread
insl
push
xorb
mov
outsb
in
fstpt
js
nop
dec
sub
sbb
sub
xchg
iret
paddd
pop
imul
dec
aas
sbb
pop
or
lahf
sub
jl
pop
out
xor
adc
mov
je
shll
iret
lds
rol
inc
movsb
mov
adc
lods
frstor
inc
test
repz
xchg
mov
cs
mov
mov
and
sub
lret
outsb
cmpsb
aaa
push
inc
arpl
les
push
sbb
sub
cmp
sub
test
push
cmc
insl
add
cmpl
psubusb
leave
cmpsb
mov
iret
daa
arpl
push
iret
out
test
dec
xchg
js
and
gs
mov
and
xchg
cmp
or
lock
xor
inc
icebp
sbb
dec
cmp
adc
sbb
mov
ja
jecxz
vcvtss2si
cmp
jnp
lock
aad
popf
cmp
mov
subl
pop
jecxz
inc
mov
push
repnz
pushf
lcall
inc
or
ja
push
hlt
imulb
mov
insb
mov
push
dec
jns
xchg
nop
sub
and
std
shrl
jl
mov
scas
push
cmpsb
push
in
aas
stc
or
xor
int
adc
adc
pop
mov
mov
xor
fcmovnu
stos
pop
cld
lret
add
stos
repz
adc
je
sbb
clc
jmp
jl
outsb
dec
pop
xchg
loop
clc
jnp
inc
addr16
cltd
jns
das
mov
outsl
xchg
out
dec
mov
outsl
inc
fldt
sbb
insb
int3
cmp
mov
fs
loopne
sbb
cs
mov
cs
push
mov
cmpsb
jae
cs
adc
pusha
sti
addr16
cwtl
jge
leave
pop
inc
test
loop
push
rorb
cvtpi2ps
inc
pop
fadd
test
mov
rol
pushf
divb
push
adc
jns
test
jo
cmpl
sbb
inc
push
cmp
push
or
push
or
fimuls
loopne
shll
mov
mov
jae
test
push
lods
lret
mov
addl
mov
inc
jmp
out
dec
in
arpl
cli
inc
cli
mov
mov
dec
mov
xchg
cmp
cmp
cmpsl
or
lock
dec
pop
xchg
inc
mov
cmp
icebp
mov
mov
adc
in
fsubrl
mov
mov
sub
cmpsl
sbb
push
shlb
mov
lds
inc
mov
jo
scas
icebp
je
push
out
popa
decb
jecxz
xor
xor
outsb
pusha
adc
push
bound
pop
or
sbb
pop
lahf
add
cmpsl
pop
xchg
mov
data16
jge
aam
gs
cmpsb
and
mov
cwtl
cmp
repz
add
in
pop
mov
scas
movsl
test
movsl
cmp
dec
or
jmp
bnd
testb
rolb
pop
sbb
cld
out
insl
int3
pop
dec
mov
ljmp
aam
lds
test
xchg
push
fisubl
inc
sahf
xor
out
rcl
xchg
pop
sub
inc
arpl
insb
std
cmp
shr
add
jno
mov
xchg
push
cli
in
sbb
dec
push
add
mov
inc
push
cwtl
or
aas
inc
mov
jl
xchg
inc
adc
lods
inc
push
pop
jle
cmpsb
lcall
push
mov
sub
in
clc
jae
push
mov
daa
hlt
gs
or
mov
and
lock
dec
repnz
sbb
out
ljmp
inc
and
inc
test
adcb
roll
dec
cmp
jle
xchg
pushf
jb
incb
scas
push
aaa
lock
push
das
push
mov
dec
push
adc
lds
cmc
movsl
testl
popf
cltd
cmpsl
call
and
dec
fs
pushf
hlt
fistpll
gs
jb
jl
call
jl
int3
push
cs
cmp
sarb
or
cmc
sub
and
in
enterw
xchg
pushf
ror
pop
cmp
sbb
rorb
push
xor
test
or
sbb
je
fwait
push
aad
pushf
sahf
scas
push
mov
jno
inc
lret
test
push
ss
inc
xchg
jbe
aaa
icebp
rolb
jb
iret
and
jmp
dec
imul
add
mov
mov
sub
sub
mov
push
shl
inc
test
cmp
stos
mov
out
je
in
cmpsb
jo
mov
and
adc
pop
leave
adc
popa
xchg
xor
popf
cmc
sbbl
xchg
add
pop
push
jp
xchg
fnstsw
shrl
pop
adc
sub
aas
mov
push
in
test
imul
mov
sub
xchg
daa
loop
in
test
xchg
mov
nop
arpl
stc
push
inc
outsb
shrb
pop
mov
das
mov
push
call
not
xchg
scas
repz
push
lret
lods
outsb
adc
push
lret
add
adcl
in
cltd
mov
imul
js
add
and
insl
loope
xor
push
fildll
lret
out
shlb
and
pushf
cmc
jnp
push
sub
sbb
daa
cmp
and
pop
push
lock
push
outsl
frstor
enter
pushf
lds
leave
or
mov
mov
mov
pop
lss
testb
shlb
mulb
popf
jle
mov
sar
loope
add
repz
fcoml
jge
push
insl
cs
inc
test
cld
enter
push
inc
repz
xchg
mov
outsb
lock
dec
mov
popf
jge
xor
rcr
imul
or
push
loop
mov
and
and
lcall
and
cli
cs
movsb
push
cmp
cli
sbbl
mov
stos
push
nop
mov
jnp
out
jae
sub
rcll
test
push
xor
das
fcoms
outsb
jbe
les
pop
fst
sbb
fdivrl
and
mov
xor
roll
or
add
arpl
rol
in
and
dec
mov
push
ret
jbe
mov
push
and
sarb
push
in
out
sbb
or
push
pop
mov
dec
movsb
out
lahf
test
adc
adc
and
add
push
mov
mov
push
out
into
sub
lods
sub
mov
adc
xor
dec
jne
call
cmpsl
dec
sub
mov
push
mov
jns
frstor
test
loopne
out
mov
cmpsb
jb
cmp
dec
xchg
fs
fsubp
ror
pop
dec
fbld
jae
push
push
aad
shrb
mov
into
repnz
nop
adc
int
mov
in
mov
fnstsw
ljmp
push
mov
jmp
xchg
bswap
sbb
in
aad
in
dec
es
movsb
xchg
mov
or
aad
cmp
mov
push
scas
arpl
loopne,pn
jl
and
inc
jmp
test
mul
loopne
and
arpl
cwtl
and
mov
and
push
and
hlt
or
cwtl
ss
rclb
ficompl
fildl
mov
dec
mov
or
add
movsb
mov
mov
js
pop
adcb
aad
ljmp
arpl
and
mov
xchg
jge
xchg
adc
mov
test
movsl
xchg
leave
mov
xchg
in
xchg
inc
cmp
pop
mov
aam
test
test
push
out
jae
or
xchg
andl
inc
mul
shrl
mov
and
bound
push
fwait
idiv
testl
ret
aad
mov
sbb
aam
mov
push
or
aas
aaa
inc
insb
push
loope
popf
nop
mov
add
cmp
xor
mov
repnz
into
js
and
xchg
in
dec
xchg
sbb
mov
cmp
mov
lds
nop
insl
adc
mov
xchg
push
stc
sti
add
or
jns
sbb
stos
mov
pop
movsb
add
cmp
idivb
loope
movsl
imul
or
xchg
cld
adc
kunpckwd
ret
xor
fstpl
rcrb
cmp
lret
loope
cmc
in
mov
add
sti
or
and
ss
and
inc
shl
aas
daa
xor
sahf
push
push
das
lcall
jb
mov
pusha
cmpsl
push
aaa
clc
cmp
xor
mov
int3
sbb
pop
insb
movsl
enter
adc
pop
cltd
cld
rcrl
ret
mov
jns
and
pop
gs
aas
js
pop
sbb
fstps
pop
push
ret
repz
loopne
or
lahf
jno
push
aas
mov
push
lock
inc
leave
inc
adc
test
mov
push
push
sub
in
clc
insl
xchg
rcrl
xor
cmc
adc
cmc
adc
cmpl
xor
sbb
mov
imul
and
call
lds
adc
fdivrs
dec
int3
cwtl
in
fstpt
pop
mov
or
shrl
loopne
insl
fdivr
pop
inc
push
enter
sub
push
outsl
dec
inc
pop
pop
hlt
cld
xchg
xor
jge
inc
cli
sub
pushf
xchg
cmp
loope
outsl
in
xorl
imul
dec
xchg
aas
pop
mov
mov
ficoms
add
pop
mov
xor
push
jecxz
inc
dec
xor
xor
pop
or
lea
cmp
jg
xchg
and
gs
cmp
adc
xor
mov
and
les
std
in
mov
or
addb
loopne
dec
mov
dec
mov
push
sub
jnp
mov
cmp
cmp
mov
jb
outsb
ja
jo
pop
stos
and
lcall
shlb
sub
shlb
pop
imul
int3
sub
xchg
imul
out
jnp
aaa
leave
pop
push
dec
pop
cmpsl
fld
or
mov
das
or
ja
push
mov
popf
cmpsb
inc
out
jl
pop
rcrl
cmc
sub
push
jne
sbb
xor
jbe
in
ljmp
mov
stos
xchg
mov
and
cld
aad
ret
inc
dec
je
push
ja
xor
jae
xchg
rclb
cmp
push
lret
ds
and
in
les
outsb
xor
stos
lahf
sbb
xchg
dec
add
sbb
xor
call
xor
xchg
mov
add
pusha
and
push
gs
sbb
xorl
mov
xlat
inc
or
inc
mov
outsl
loopne
shr
mov
push
dec
lds
mov
stos
mov
mov
mov
loop
inc
leave
test
ss
add
jne
xchg
cwtl
punpckhbw
mov
cmp
mov
push
mov
mov
and
cli
adc
clc
mov
aad
nop
cmp
les
push
add
pop
pop
jp
mov
fwait
pop
scas
or
testb
fwait
cmp
push
ljmp
pop
pop
push
in
mov
lds
in
mov
mov
add
push
xlat
push
mov
fcomip
aas
cli
mov
call
mov
movsb
mov
ja
popf
mov
loopne
and
stos
mov
mov
xor
dec
sub
or
in
xor
aaa
hlt
aad
push
sbb
push
fsts
fwait
mov
mov
jle
jmp
sbb
sbb
mov
std
sub
xlat
add
je
stc
jmp
push
sub
pop
adc
inc
mov
inc
xor
mov
shrb
clc
fstpt
pop
mov
xchg
push
mov
add
pushf
lock
pushf
mov
jge
pop
mov
mov
and
xor
dec
cli
mov
lcall
sub
hlt
cli
lods
xchg
mov
mov
pop
push
and
mov
push
sub
inc
imulb
jge
or
cmp
jg
fwait
jbe
jecxz
int
dec
mov
push
cmp
adcl
call
div
inc
pushf
incl
cltd
or
lods
sub
jnp
and
mov
xlat
loopne,pn
add
negb
aas
push
sti
jge
cmpsb
mov
call
jbe
adc
in
aas
jne
cmp
inc
add
cmpsb
mov
imul
movsb
sbb
lret
push
sub
std
rorl
or
scas
mov
jl
dec
sub
push
lods
or
jle
in
jbe
push
push
cmp
repnz
mov
out
in
inc
cld
mov
and
or
es
mov
cmc
out
ret
loop
jmp
push
dec
push
lea
jle
incl
adc
mov
mov
xor
sarl
pop
jl
out
dec
jae
add
lret
icebp
pop
and
ror
sbb
pop
mov
and
les
adc
imul
mov
jmp
fwait
mov
insb
es
mov
loope
shrl
bound
jmp
push
sbb
inc
mov
mov
nop
mov
loop
cld
inc
ss
cmp
lret
mov
sub
sbb
loop
test
sub
jno
into
mov
mov
and
push
insl
inc
stos
mov
loop
scas
xor
mov
sbb
mov
movsl
repnz
jno
add
loope
pop
gs
movsl
jo
int3
out
or
fbstp
test
iret
aaa
out
pop
aad
mov
subb
into
mov
inc
popa
roll
fdivrs
ret
pop
hlt
add
cmpl
aam
add
inc
roll
dec
cmpl
push
aam
test
sar
xchg
jne
je
mov
adc
ss
adc
add
pusha
jnp
lds
icebp
leave
aas
xchg
cli
mov
call
and
fists
add
or
inc
les
and
test
xchg
gs
xchg
pop
pop
or
imul
out
adc
xchg
or
rcrl
sbb
jbe
outsl
sub
insl
sub
cs
call
cmp
inc
lock
mov
das
fisttps
and
sbb
xchg
and
rcrl
xchg
jmp
and
cmp
mov
pop
lcall
lock
mov
aas
inc
mov
imul
push
adc
sbb
ss
mov
leave
mov
lds
cli
sarl
sbb
jmp
mov
sub
leave
inc
shr
push
outsl
push
xchg
xchg
jl
pop
cmc
outsl
fdivl
cmpsl
das
repnz
gs
gs
lret
jne
or
mov
aas
pop
pop
negl
bound
lods
dec
jge
cli
xchg
jb
xchg
test
pop
mov
pop
mov
nop
cltd
imul
out
xchg
sti
lods
fistpll
aas
stc
mov
inc
sarl
movsl
std
and
jb
imul
mov
fwait
in
sbb
push
fisubl
inc
xchg
decb
cmpsl
mov
adc
rolb
xchg
push
fst
inc
fwait
jno
jno
enter
push
mov
test
jl
ret
fsubrl
and
xor
loop
loope
inc
cld
ficomps
fisttpll
cli
push
iret
loope
addl
idivb
out
inc
shlb
repz
mov
push
ficoms
or
flds
aam
and
lahf
rclb
enter
repz
xchg
bound
scas
ja,pt
mov
and
arpl
pop
testb
into
sub
fisubrl
ljmp
sarl
orb
movsb
push
xchg
adc
leave
sbb
ljmp
push
cltd
scas
loop
jl
mov
jb
lods
cmp
lea
cltd
sti
jne
jge
xchg
cmp
lret
fwait
ljmp
mov
inc
mov
cmpl
mov
mov
add
es
in
sbb
sub
jne
and
dec
adc
adc
movsb
cld
aas
dec
xor
dec
push
dec
push
add
adc
mov
lock
mov
dec
cwtl
pop
or
fnsave
test
das
xchg
dec
sti
or
minps
pop
sbb
sub
aad
scas
fwait
sub
popa
pusha
and
lods
sbb
repnz
push
or
les
adc
cld
cli
mov
test
xchg
lahf
mov
cmp
insb
insb
or
push
dec
lock
sti
scas
bnd
pop
enter
ret
sete
mov
rorb
les
push
stos
cmc
scas
imul
push
fs
fisubrs
jmp
dec
aaa
sbb
mov
in
adc
push
stos
xchg
push
in
xor
cltd
xor
out
mov
jp
adc
mov
sahf
sub
inc
enter
repz
das
clc
sbb
nop
cmpsl
cmp
arpl
fsubr
add
aad
mov
pop
js
push
leave
cmpsl
pop
xchg
stos
daa
or
ja
scas
mov
mov
jno
xorb
jne
sub
in
mov
sbb
jle
outsl
mov
xchg
ret
test
mov
fldpi
sub
push
pop
pop
inc
cmc
push
loope
out
and
mov
cmpsl
adc
std
xchg
arpl
adcl
addr16
shrl
stos
test
mov
stos
jp
push
rorb
insb
fildll
cmp
push
sbb
orb
cmp
cmpl
fnstcw
inc
or
andb
lahf
mov
test
sub
fwait
cmp
pop
inc
aaa
fs
ljmp
cmpsb
rorb
mov
andl
lock
sbb
jae
xchg
jb
adc
and
aas
cmp
cmpsb
repnz
inc
cmp
jns
out
hlt
int3
aam
add
leave
jnp
inc
outsl
cmp
leave
pushf
vmovntps
imul
stc
sub
sbb
mov
orb
sahf
dec
arpl
in
jne
dec
fs
jbe
aam
jmp
dec
inc
jnp
jge
ror
std
push
and
sub
mov
sub
add
dec
testl
push
jmp
jmp
jmp
mov
pop
int3
pop
pop
jg
aaa
stos
dec
fisubrs
iret
pop
mov
fists
mov
xchg
sbb
push
sarb
mov
lea
repnz
mov
aam
sti
iret
mov
mov
add
insb
int3
jae
cwtl
pop
fcomip
std
sbb
sahf
dec
dec
das
pop
cmp
das
cmp
rclb
xorl
inc
jns
mov
mov
or
push
into
js
dec
enter
add
shl
push
fstpt
ja
cmc
xor
outsl
popa
sub
cmpsl
push
lock
cmpsl
jmp
repz
pop
scas
add
icebp
inc
test
add
data16
ss
adc
add
negl
dec
aas
dec
xor
out
push
mov
leave
sbb
xor
cmc
ljmp
fisubs
fsubrl
dec
repz
in
push
sbb
mov
sub
sbb
ljmp
mov
in
xchg
mov
push
dec
push
pop
inc
popa
push
idivb
mov
lea
out
cmp
je
das
cs
inc
mov
xchg
call
decb
fcmovbe
or
cltd
and
and
sbb
cmpsl
push
push
cs
mov
repnz
mov
jl
sub
out
outsb
shr
mov
ds
ffreep
rorb
xor
lods
inc
in
cmp
xchg
into
lods
subl
inc
out
pop
cltd
popf
jo
fstpl
cmp
or
hlt
int3
outsl
fwait
push
imull
cmpsb
ja
adc
ret
cmp
cmp
adc
cmpsb
inc
add
movsw
popf
lea
repz
sahf
jmp
fisubrl
xchg
ss
xor
dec
cmpsl
jle
in
shl
dec
roll
cmp
mov
into
in
mov
testb
bound
and
aam
js
adc
mov
fs
xor
inc
push
pusha
xor
dec
loope
dec
xchg
mov
mov
nop
push
pop
gs
adc
xchg
push
cmp
mov
ret
push
and
out
xchg
push
xor
inc
jmp
mov
fldl
pop
cwtl
loopne
add
push
sub
sub
cmp
int3
sub
pop
icebp
xchg
mov
lret
push
out
fidivs
and
outsb
lods
pop
iret
and
aas
sub
mov
xor
mov
fwait
divb
divl
fmuls
iret
push
lds
adc
outsl
rcll
mov
fsubr
inc
popa
sbb
leave
iret
xor
aaa
loope
adc
lret
jae
xchg
mov
adc
test
imul
fiaddl
push
cmpsb
cmc
shll
mov
jmp
jp
add
pop
mov
xchg
dec
movnti
xor
lahf
jno
cltd
adc
sahf
arpl
mov
test
push
mov
cvttps2pi
lods
jae
movsb
push
test
adc
xchg
aas
jb
lcall
push
sbb
fwait
mov
inc
mov
mov
cmp
xor
ja
pushf
out
outsl
je
adc
call
daa
mov
loope
xchg
in
or
in
adc
add
addl
hlt
arpl
mov
pop
int
aas
cmp
rcrl
mov
mov
lds
push
dec
imul
cmp
or
adc
dec
aam
or
adc
test
xor
xchg
fisubs
mov
push
test
mov
sub
push
test
mov
mov
movsb
sbb
jae
adc
je
xlat
les
mov
push
fsubr
in
fs
pop
std
push
hlt
aas
mov
loop
sub
mov
in
insb
aam
sarb
add
mov
push
js
jg
xor
and
hlt
jno
dec
loopne
and
outsl
or
scas
jge
dec
pop
or
leave
ficoml
dec
jb
or
jno
fstpt
ret
push
mov
jmp
xor
add
fldl
cmp
cmp
lret
subl
pop
movsb
adc
sti
fistpl
xchg
jb
push
jl
rcrl
push
mov
lods
daa
mov
ss
jge
and
push
pop
pop
sti
and
sbb
aam
jns
loop
rcll
dec
or
push
add
xchg
cmpsb
out
adc
mov
scas
dec
aam
sub
dec
mov
inc
cmp
les
ds
dec
jno
inc
mov
sub
sahf
or
push
ud0
mov
dec
hlt
lods
stc
and
adc
dec
mov
xchg
test
push
mov
fsubr
push
fstps
push
aam
lret
pop
ret
push
pop
divl
xor
imul
setae
inc
lods
adc
fs
insl
test
jo
fwait
sahf
jns
ljmp
mov
les
and
mov
sub
add
pop
pop
pop
or
pop
test
lret
pop
ret
mov
mov
mov
jg
dec
jle
cmp
leave
mov
push
mov
push
ja
addb
xor
mov
jle
pop
xor
js
xchg
jns
popf
add
stos
jge
adc
mov
mov
xlat
sbb
popa
notl
loopne
push
out
jg
mov
in
sahf
pop
push
mov
movsb
mov
scas
xchg
cwtl
insl
popf
in
cs
cld
cwtl
sti
sti
sbb
sti
lcall
jmp
dec
scas
add
xchg
xchg
inc
or
mov
mov
cli
dec
jnp
pop
int3
pop
fidivrl
pop
add
or
aad
stos
lds
mov
inc
cmp
addb
cs
adc
test
popl
jb
mov
sti
jecxz
mov
cmpsb
inc
ja
into
arpl
inc
scas
jmp
jmp
insb
jmp
pop
dec
test
or
pusha
pusha
fs
pushf
ja
jecxz
sti
dec
xlat
mov
inc
mov
cmpsl
arpl
fiaddl
fwait
jp
cmp
pop
pop
pop
pop
shl
mov
inc
fwait
dec
imul
decb
inc
mov
aam
mov
roll
and
mov
repz
cmc
mov
movsl
push
xchg
jle
lret
daa
das
sbb
cmp
pushf
adc
mov
test
push
cmpsl
jmp
sti
mov
add
movsl
lret
push
adc
lret
std
les
add
mov
gs
pop
add
sbb
push
inc
movsl
out
sbb
xor
cli
shll
adc
xchg
pop
dec
imull
aaa
xchg
into
arpl
add
jae
inc
imul
cmp
movsl
cmpsb
pop
lcall
mov
scas
or
jg
sahf
data16
scas
loope
mov
jecxz
ret
outsl
fisubrs
or
cli
out
push
adc
mov
jp
scas
cs
fidivs
ret
xlat
mulb
les
sbb
repz
pop
mov
add
jae
pop
popf
sahf
mov
fcmovu
psubw
mov
ficompl
xor
and
jecxz
in
or
or
fs
mov
fsubrl
pop
mov
push
push
jl
test
sbb
push
add
pop
hlt
xor
mov
les
inc
cmpl
add
repz
dec
pop
in
pop
and
mov
lds
test
mov
lret
pop
addr16
mov
arpl
insl
sub
ret
push
fists
mov
in
jecxz
xchg
imul
sub
inc
mov
imul
add
dec
mov
xchg
stc
ss
arpl
imul
cmp
stos
lret
jle
cmp
lods
faddl
pop
fdiv
les
pop
gs
dec
fidivs
loopne
sub
fnsave
stos
fsubr
cli
enter
sbb
std
mov
mov
ficoms
jb
jle
cld
nop
sahf
lret
repz
xor
xor
sti
int
mov
sarb
jp
ljmp
mov
xor
cmp
daa
mov
in
loop
dec
popf
in
inc
and
xchg
and
pop
pop
inc
jp
mov
inc
mov
jecxz
je
mov
xchg
inc
mov
incl
jae
xor
out
xor
dec
gs
shll
xchg
sbb
xchg
adc
cli
mov
decb
iret
xchg
jbe
xchg
push
and
push
arpl
mov
jnp
dec
xchg
inc
repz
ds
xorl
loope
or
adc
stos
cs
mov
pop
pop
imul
ret
stos
sbb
pushf
push
cmp
sub
or
arpl
fnstsw
out
jb
and
ret
and
pop
fldt
jecxz
outsb
vpsubq
cmpl
scas
clc
je
subl
jno
mov
dec
fnsave
out
sbb
decl
xor
add
add
cmp
push
bound
cmpsl
lds
xchg
sub
fsubrs
jbe
sbb
xor
int3
jmp
and
int
jg
or
pop
pushf
cmp
clc
cmp
push
mov
inc
adc
call
sbb
fcoms
test
popa
inc
ljmp
push
add
mov
and
jno
test
and
ja
xlat
addr16
nop
lret
dec
je
cmp
notl
inc
arpl
scas
pop
inc
repz
jmp
cmpsl
pop
sub
xor
dec
aas
inc
push
faddl
xor
int
sahf
iret
sarb
ficoms
cwtl
cld
pop
mov
adc
addr16
in
leave
leave
popa
pushl
jmp
fcoml
jb
inc
je
jge
inc
xor
stos
in
ficomps
push
or
gs
in
jbe
fnsave
dec
mov
addb
dec
push
fnsave
xchg
push
xchg
xor
mov
cmp
fld
test
mov
push
lds
xchg
xchg
xchg
xchg
icebp
cmc
hlt
lahf
scas
add
test
mov
adc
pop
sbb
push
shll
xadd
xchg
xor
ds
popf
notb
inc
sbbl
dec
and
add
adc
add
add
aaa
mov
cltd
imul
xchg
clc
mov
into
dec
pop
push
jle
std
ds
in
cmp
mov
pop
xor
imul
gs
sub
fiadds
xchg
fdivr
les
xchg
idivb
xchg
xchg
std
das
lahf
sahf
or
repz
fs
xor
test
cmp
icebp
inc
sub
dec
mov
fucom
jno
cltd
je
scas
sub
add
leave
js
push
dec
outsb
push
sti
dec
test
sub
jnp
data16
mov
push
cs
jo
mov
je
push
sbb
mov
nop
dec
dec
cmc
inc
dec
stos
repz
lahf
sbb
jl
pop
xor
cs
les
or
loopne
test
push
mov
jne
mov
sub
lds
jns
fs
repnz
sar
mov
imul
cwtl
stc
jbe
pop
fisttps
fbstp
xchg
test
adc
aaa
scas
out
stc
lcall
ljmp
mov
fiaddl
ss
mov
dec
mov
rclb
mov
pop
mov
sub
or
jbe
pop
scas
inc
lods
mov
add
push
xchg
xchg
jg
sub
mov
push
inc
sbb
mov
mov
push
jge
push
or
and
out
jae
dec
pop
test
hlt
or
ret
mov
clc
cld
rolb
fimull
sub
movl
fildll
cmp
popf
int
sub
js
es
sub
mov
inc
cmp
mov
jo
xor
imul
andb
push
outsl
and
in
adcl
pop
call
daa
pop
dec
push
popa
dec
fs
cli
ret
push
xor
repnz
cmpsb
test
js
js
inc
lods
ret
mov
pop
shlb
xor
sbb
and
test
sub
add
jb
dec
push
cmp
sahf
and
mov
jae
insl
sub
movsl
jmp
or
xchg
add
dec
sar
rorl
cmp
sub
in
rcl
rcrl
and
aas
jmp
adc
adc
cmpsb
addr16
sub
sarb
or
dec
cmp
mov
push
pushf
adc
push
sub
cs
cmp
mov
mov
cmp
xlat
mov
test
mov
add
jecxz
xchg
xchg
and
pop
cmc
mov
fmuls
xorl
movsb
jne
jg
sbb
mov
je
adc
out
and
mov
inc
out
push
or
bound
mov
insl
jo
clc
jmp
push
dec
dec
in
in
arpl
popa
sub
add
cld
cmp
inc
ds
aad
add
orl
test
shlb
and
pop
cld
divl
adc
outsl
inc
lret
subl
sub
outsl
mov
or
mov
dec
push
dec
test
inc
mov
dec
xchg
jnp
ljmp
mov
fcomps
lret
clc
mov
addr16
popf
mov
cmpsl
mov
lods
mov
sbb
xlat
lcall
bound
fidivl
pop
and
scas
cwtl
dec
aad
sub
dec
inc
cmpsl
mov
dec
rclb
pop
sahf
or
loope
mov
jo
adc
sub
pop
adc
daa
lea
xchg
int
dec
cmp
fwait
or
add
cltd
push
jmp
pusha
mov
shll
inc
xchg
lret
lea
int
int
xchg
xchg
pop
mov
add
and
mov
adc
add
mov
cmp
lahf
lock
push
mov
xchg
jns
xlat
jg
cltd
bound
jne
mov
xor
repz
xor
fs
int3
push
sub
movsl
push
jle
jp
adc
mov
sti
decl
dec
pop
lods
pop
leave
xor
inc
dec
int
jl
add
xor
push
pop
outsb
add
fildl
jb
mov
negl
cmc
adc
lret
ljmp
prefetcht2
push
add
and
daa
xchg
dec
sbb
inc
pop
daa
or
into
inc
push
mov
cltd
and
arpl
inc
pop
ret
mov
adc
test
inc
pop
popf
or
jmp
out
or
nop
mov
stc
mov
sbbl
pop
data16
out
dec
push
or
pusha
test
mov
inc
mov
push
mov
inc
pop
mov
sub
inc
mov
in
rolb
xor
xor
fwait
dec
mov
inc
clc
into
popa
push
lds
jge
push
jno
add
jle
jge
pop
std
sbb
in
xorb
sub
call
hlt
xor
mov
mov
push
sub
xor
js
dec
scas
imul
or
xor
xchg
add
xchg
div
js
inc
or
sti
jp
sbb
adc
mov
pop
insl
push
loop
inc
xchg
push
mov
or
sbb
daa
cmp
dec
pop
pop
pop
sahf
mov
and
and
xchg
call
das
jecxz
dec
aaa
xchg
push
aam
shlb
adc
and
cmp
inc
mov
int
sbb
jmp
sbbl
sub
inc
dec
mov
cmp
lcall
inc
lods
scas
pop
fnstcw
pop
mov
sub
lret
push
push
mov
inc
mov
mov
mov
cmpsl
fsubrl
jo
jnp
jo
idiv
pop
xor
sub
popa
pop
lahf
sub
push
lcall
xchg
or
sub
ret
sarl
roll
mov
into
int3
mov
jl
pop
in
xor
pop
dec
sbb
push
xchg
cmp
pop
pop
out
les
pop
mov
daa
decb
cmp
add
push
adcl
out
sub
cmp
repnz
or
fmuls
leave
adc
and
aaa
cmp
add
je
int3
imulb
mov
rol
ficomps
inc
jno
popf
xorb
inc
inc
jbe
or
in
jo
sbb
xor
adc
pop
or
cmp
mov
lret
clc
push
mov
add
mov
gs
mov
pusha
sub
imul
fs
inc
add
adc
pop
cmp
ficoml
inc
dec
add
add
cltd
sbb
fwait
lods
pop
pushf
repnz
cmp
das
subb
and
je
out
mov
jecxz
add
lods
jo
xchg
xor
leave
add
cld
pop
cmp
into
xor
add
movsl
push
sti
or
pop
add
add
add
jge
mov
in
mov
mov
and
or
getsec
pop
pop
test
add
lret
jmp
insl
iret
gs
lret
push
mov
xchg
lcall
aas
push
iret
adc
adc
cmpsl
mov
hlt
xchg
mov
sub
and
push
sahf
aaa
inc
aas
in
lret
push
out
cmc
test
dec
mov
imul
mov
xor
lret
call
xchg
push
popf
cmp
cmp
xor
fdivrs
mov
dec
clc
gs
add
cwtl
jns
stos
jge
sbb
jb
pop
shll
jge
sub
push
test
cmpsb
mov
dec
shr
imul
and
fidivl
xchg
insl
push
pushf
fs
subb
imul
jo
notl
loopne
clc
insl
std
mov
inc
daa
outsb
lcall
imul
stos
cmp
insb
mov
outsl
pop
out
sbb
je
sbb
stos
xor
mov
shrb
cwtl
cmp
enter
and
mov
dec
out
popa
repz
aam
test
sub
dec
stos
lods
aas
xchg
mov
data16
adcb
scas
loope
xchg
into
dec
sub
sub
inc
mov
pushf
test
aam
cmpsl
dec
sbb
jl
add
testl
mov
cmp
shl
lea
pop
push
out
rcll
push
jno
repnz
jle
repz
mov
scas
jns
outsl
iret
adc
dec
cli
aad
mov
pusha
or
adc
imul
lea
lock
cltd
xchg
sub
push
inc
add
cmp
sub
in
loope
btc
xchg
bound
out
stc
rorl
mov
stos
push
or
cs
in
lahf
dec
pop
xor
ljmp
scas
cmpsb
jno
movsl
jbe
mov
testb
ds
pushf
adc
add
add
movsb
jb
mov
inc
int
into
les
flds
fdivrp
outsb
scas
popf
fsub
add
push
dec
ss
in
pop
mov
insb
inc
jns
movsl
mov
fidivrs
and
inc
imul
push
or
jb
into
imulb
addr16
xor
cmp
mov
inc
sti
lret
jnp
bound
sti
outsb
mov
ss
stos
je
push
shlb
imul
jp
neg
aad
lcall
push
add
test
sub
out
add
jno
pop
push
sub
xchg
jge
push
dec
mov
dec
xchg
je
mov
and
aad
dec
push
mov
sbb
cwtl
sbb
jne
push
ret
aam
mov
jecxz
pop
mov
push
ljmp
mov
jl
iret
sti
mov
push
lea
xchg
ss
pop
dec
lds
shlb
jnp
scas
mov
push
testl
push
aaa
add
and
lahf
aad
dec
xchg
lods
imul
push
cmc
nop
push
sbb
xchg
rcl
pop
and
inc
xchg
lcall
sbb
imul
negb
mov
adcb
push
lods
add
pop
mov
dec
sbb
fidivrs
stc
sarl
sbb
orl
cli
shl
adc
int
or
inc
sub
repnz
xchg
test
add
in
sarb
push
jns
xchg
test
addb
mov
aad
sub
das
pop
loopne
repz
or
xchg
xchg
std
and
cmp
lret
sbb
mov
jp
ror
daa
fildll
add
sub
cs
cmp
cmp
addb
mov
imul
aad
or
add
mov
mov
pop
cmp
popf
sub
sbb
adcb
js
stos
fisubl
pop
lahf
ficoms
popa
sahf
jno
dec
push
test
cld
jnp
cmpsb
outsb
cmpsb
test
int3
idivb
and
shlb
dec
xor
and
inc
mov
test
xlat
loopne
sub
sbb
js
test
and
xchg
test
stos
pop
pusha
sahf
lods
mov
lods
insl
fstps
in
divl
das
mov
mov
adcb
cli
mov
cwtl
shlb
mov
sub
jmp
jne
and
add
lock
cmp
frstor
cmp
mov
inc
mov
cmpsb
nop
sti
imul
leave
fcmovnu
sbb
cld
daa
js
push
test
ret
enter
ret
mov
or
xor
aad
fwait
stos
jmp
and
rcll
out
iret
mov
fwait
xchg
int3
pop
mov
mov
and
mov
stc
and
pop
lret
mov
cmp
mov
pop
pop
mov
fcmovnb
inc
cmovnp
loope
dec
sub
fstps
clc
ret
fwait
and
call
lret
imul
add
aaa
bound
out
imulb
js
rcrl
inc
cld
insl
dec
mov
push
les
gs
popf
into
cmp
sbb
xchg
and
shlb
xlat
icebp
arpl
sub
sub
adc
adc
shl
outsl
ljmp
ja
int3
bound
sub
pop
mov
cmp
push
jmp
stc
push
test
in
int
cmpb
pushf
int3
fistpll
arpl
mov
adc
mov
cltd
sub
inc
inc
mull
push
xchg
pop
and
and
mov
clc
dec
mov
jns
dec
add
ja
xlat
int3
dec
mov
lods
sbbb
push
fwait
push
pusha
mov
cmp
and
add
or
cmp
je
cltd
scas
ret
ja
mov
in
cmc
mov
cltd
mov
mov
fsubp
or
in
fisubrl
jge
sub
fdivrs
or
push
dec
cmpsl
xor
xchg
call
or
lcall
jl
fnstsw
in
aas
scas
sbb
push
jo
mov
xchg
jns
stc
ret
sub
cmp
stos
sbb
lods
sahf
jbe
jmp
popa
outsb
notl
and
pop
repnz
pop
leave
nop
pop
sarb
fistps
xlat
mov
mov
mov
loopne
aas
ds
xchg
xchg
gs
or
outsl
sbbb
cmp
xor
push
out
jbe
pop
sub
jge
mov
mov
jno
inc
pop
sub
mov
sbb
loop
jmp
dec
xchg
fidivs
mov
pop
jmp
ficomps
hlt
pop
test
push
xor
mov
sbb
add
jecxz
pop
test
subb
add
sub
mov
int
andb
add
pop
or
or
jmp
cmp
mov
mov
hlt
xchg
sbb
dec
repnz
mov
aas
or
push
mov
lret
adc
das
lcall
cli
hlt
and
jae
aaa
icebp
jns
out
popa
fidivl
inc
mov
mov
test
fisubrl
mov
call
aas
arpl
mov
pusha
enter
push
add
mov
movsl
out
dec
int
jle
xor
jmp
rorl
imul
cmc
iret
ljmp
push
ret
ret
ljmp
and
cmpsb
sub
push
mov
and
mov
or
cmp
ret
xor
clc
in
out
jg
or
arpl
fldcw
mov
leave
xor
inc
fisubrs
dec
jecxz
mov
cmp
ret
fstps
mov
mov
into
shrl
and
fldl
loopne
outsb
mov
repnz
and
inc
adc
test
add
add
mov
jl
test
add
mov
xor
jns
pusha
pop
lds
jle
dec
inc
push
or
adc
mov
sub
sbb
sbb
in
xchg
sub
sahf
pop
xor
pop
adc
inc
in
lock
inc
imul
imul
add
push
repnz
lret
pop
pop
push
stos
sbb
aaa
and
fadd
and
dec
and
add
cmp
movsb
mov
cmp
jno
mov
je
mov
push
add
pop
call
cmp
jne
jns
mov
push
out
repz
dec
aad
lcall
rcll
xor
dec
movl
jmp
iret
cmp
push
gs
lcall
popf
adc
push
mov
test
xchg
outsb
dec
mov
nop
mov
out
lds
xlat
or
cmpsl
bound
in
push
push
fwait
les
inc
mov
leave
push
jb
pop
jp
mov
mov
xor
movsb
push
mov
sub
lods
test
push
ss
das
cmpsl
add
xchg
xchg
sets
sub
jmp
inc
adcl
and
mov
push
stc
push
test
jae
and
fdivr
sub
nop
cmp
sub
xor
xchg
mov
fisubrl
push
ss
mov
movsl
adc
pop
fidivrl
xor
pop
mov
sub
adc
inc
in
and
xchg
test
cmc
negl
fisttps
pop
xor
pop
sub
mov
bound
in
pop
mov
push
fistpl
nop
pop
ds
in
sbbl
push
int
std
sarl
mov
jnp
popa
push
push
fcomip
xor
cli
add
les
adc
push
or
and
xchg
mov
inc
dec
sahf
mov
sub
frstor
sbb
push
pop
stos
sub
rolb
in
insl
inc
xlat
iret
je
mov
cmp
data16
jmp
and
adc
lods
mov
jge
add
jmp
std
outsl
cltd
push
or
cld
outsl
test
mov
dec
or
stos
neg
aad
in
lods
pop
cli
push
movsl
xlat
movsl
or
loope
add
xor
xor
repnz
cmp
test
inc
cmpsl
add
hlt
fcomps
sub
xchg
cltd
daa
adc
pop
shlb
cmpsb
mov
mov
or
pop
mov
insl
in
mov
push
aam
stos
dec
bnd
or
insb
repnz
mov
pop
dec
les
sub
jb
or
js
and
push
scas
sbb
pop
cs
fcomi
dec
test
add
jecxz
data16
add
and
push
scas
fistpl
cmp
sti
out
pop
or
push
sbb
push
pushf
loope
and
cmc
mov
ja
out
mov
sub
push
leave
ret
mov
ror
and
cs
je
fwait
dec
popf
cs
mov
and
imul
or
ja
loop
lds
jle
out
pop
mov
cmp
addb
clc
sti
clc
mov
mov
mov
int
pushf
scas
add
cltd
cmpsb
adc
or
test
mov
ficoms
mov
jle
out
jg
std
adc
daa
cmp
pop
mov
push
xor
ljmp
subl
inc
lods
add
xor
rcll
mov
dec
mov
mov
cmc
lds
test
faddp
lods
or
bound
divb
int3
mov
xchg
loope
mov
jno
dec
dec
jbe
and
jle
xchg
mull
cld
jp
inc
or
fbstp
shr
test
cld
and
js
jge
mov
shrb
in
aas
out
clc
dec
sub
je
ds
into
fs
movl
mov
xchg
sub
xor
cld
jno
fcmovb
adc
push
mov
xor
jo
aas
in
xor
sub
push
aam
aas
dec
ds
push
mov
stos
imull
sub
and
shlb
pop
and
push
mov
repnz
jo
and
sbb
out
inc
mov
adc
mov
dec
shlb
lods
into
xor
sub
fwait
xor
or
xchg
inc
mov
add
xor
push
pop
xchg
mov
mov
inc
or
mov
jno
inc
add
sub
dec
repnz
addr16
enter
pop
xor
std
test
scas
stos
lds
mov
in
mov
inc
movsl
push
xchg
fucomip
pop
push
std
jo
hlt
dec
pop
out
sub
jno
add
cmp
mov
std
inc
dec
pop
pusha
mov
cmp
icebp
dec
xorb
add
repz
fists
cmpsb
add
push
push
pop
fsts
cli
pop
add
shlb
movsb
lock
pusha
stc
sbb
ret
mov
int3
xor
mov
cmp
inc
outsb
test
mov
adc
adc
inc
cltd
push
cmpsb
insb
cltd
mov
xor
fadds
push
es
sub
pop
mov
jb
mov
lea
ret
xchg
adc
jns
pop
adc
xchg
or
shll
sub
fbstp
mov
cwtl
lds
clc
ffree
mov
rolb
jno
lds
inc
xor
nop
adc
xorb
inc
mov
jnp
mov
aad
mov
adc
mov
or
in
stc
jp
mov
movsl
fwait
dec
mov
and
mov
rclb
stos
mov
xchg
out
cmp
stc
scas
or
pushf
pop
sbb
add
inc
loopne
in
aaa
pop
data16
icebp
mov
xchg
arpl
push
sub
test
fmuls
pushf
push
pop
push
mov
mov
icebp
cmp
cmpsb
sti
pop
mov
pop
add
mov
fsubrl
or
cmp
les
jp
pushf
pop
mov
stos
out
fmuls
lret
mov
clc
lea
jb
mov
mov
mov
xor
pop
aas
out
sbb
cs
cli
mov
test
pop
push
lcall
sub
mov
push
aas
add
shr
adc
push
movsb
cmc
jnp
rorb
sar
xchg
push
fadds
push
lret
ret
subl
loope
scas
and
test
push
mov
mov
and
loopne
fwait
cmpsb
pop
push
or
or
clc
push
rorb
rcrl
xor
xchg
pop
aam
xor
outsl
idivl
insb
or
lods
in
lret
mov
sti
xchg
or
lret
or
shl
es
popa
xor
mov
and
or
xor
and
inc
mov
mov
sub
mov
sub
mov
pop
in
mov
notb
fnstsw
ja
jg
adc
lcall
inc
dec
mov
shl
outsl
mov
data16
aam
jp
fucomip
xor
xlat
xchg
adc
int
inc
sub
mov
cwtl
lret
js
test
imul
mov
loopne
nop
and
or
mov
in
or
sbb
adc
std
xchg
bnd
bound
pop
sbb
iret
cmp
sti
aad
lock
fcompl
dec
mov
cmp
mov
data16
rcrb
mov
jne
and
jl
sbb
and
mov
xor
pushl
cmp
sti
sub
xor
jo
sbbb
xchg
adc
adc
fiadds
pop
enter
enter
ljmp
daa
out
sub
fucom
sub
lret
mov
ja
aad
ror
add
subb
or
shlb
sbb
arpl
into
mov
or
push
mov
fcoms
jp
es
pusha
js
ret
add
sahf
imul
cmp
push
adcl
flds
int
add
jb
jle
outsl
jbe
gs
lea
jl
test
cld
das
icebp
mov
add
adc
ret
jbe
xorb
xor
dec
mov
sub
mov
into
stos
fsubr
ja
int
and
int3
mov
sbb
sub
cmpsl
adcb
mov
mov
add
idivl
mov
ds
aas
jns
scas
xlat
xor
dec
lret
aaa
fcomp
fadds
dec
add
jbe
fsubs
fistpll
cld
push
dec
adc
jno
jo
test
add
lea
insb
bound
jg
test
and
mov
ss
xor
daa
cmp
fcompl
aas
dec
mov
jg
fldenv
sbb
repz
add
jg
xor
movl
repz
fnstenv
jbe
fstpl
xchg
push
pop
mov
iret
fdivs
shlb
mov
arpl
and
mov
iret
cmpsb
stc
lahf
aam
jo
cmp
jle
cmp
pusha
mov
or
in
jp
roll
adc
insl
jo
roll
in
mov
xchg
cmp
fdivrl
xchg
xchg
mov
movsb
sub
mov
out
mov
std
repnz
lcall
addr16
adc
cmp
sub
mov
push
cltd
pop
and
clc
das
fstp
fbld
sbb
cmp
dec
jno
cld
sub
repnz
adc
les
pop
jecxz
data16
out
fistl
mov
lahf
cmpsl
fmul
inc
sbb
lcall
xchg
and
mov
cwtl
push
push
sub
fstl
ljmp
xor
add
cmp
rorb
icebp
cmp
mov
data16
jns
in
inc
test
xor
jns
jbe
stos
xchg
ficoml
push
jnp
iret
pop
mov
mov
xlat
popa
jae
inc
sub
sbb
jns
xor
icebp
push
dec
mov
mov
lcall
jecxz
mov
jb
and
test
add
and
aas
pop
faddl
cmc
push
sub
cltd
ds
rcr
lods
adc
sti
cmc
adc
hlt
and
andb
push
cwtl
add
pop
jne
mov
mov
int3
fdivrl
dec
lret
adc
mov
sbb
jp
jmp
ds
js
dec
shlb
into
ret
sbb
loope
lock
pop
test
xchg
pop
mov
xchg
mov
pop
loop
sbbl
movl
push
jo
jmp
mov
jns
aas
test
test
inc
aad
lods
add
and
lret
dec
adc
pop
xchg
jbe
movl
stos
fs
fmul
sbb
lret
sub
cltd
fsubl
xor
pop
xchg
cld
pop
les
jnp
mov
shlb
push
push
rcrl
mov
js
inc
lock
imul
add
cmp
ror
imul
mov
or
dec
jecxz
call
insl
ja
pop
aad
cmpl
push
or
dec
into
xchg
jno
scas
and
sub
lahf
fwait
cmp
sbb
inc
add
or
iret
call
and
mov
mov
data16
cltd
dec
sahf
cmc
gs
idiv
in
ljmp
push
shl
mov
in
outsb
in
jae
jle
xor
sub
mov
push
jb,pn
popf
rcrb
test
mov
mov
out
jecxz
lahf
push
pop
adc
and
ss
test
pop
call
loop
sarl
add
xchg
int
pushf
in
mov
inc
enter
outsl
sahf
icebp
cwtl
movsb
push
or
call
mov
out
push
lods
xchg
push
ljmp
enter
leave
lcall
rcl
in
inc
jb
push
adc
or
das
call
fsubrs
adcb
cwtl
adc
fmuls
insb
sub
notb
sahf
les
aam
cmp
and
roll
insb
int3
loop
mov
adc
and
aad
out
mov
pop
mov
mov
xor
and
sub
sub
popa
rorb
jp
out
or
jns
insb
push
cmp
fstpl
push
xchg
outsb
shll
xorl
test
call
or
pop
sub
out
es
shl
stc
fmul
jb
dec
les
cmp
ret
xlat
mov
sbb
test
cmp
xchg
adc
sbb
or
inc
pusha
jnp
ret
insb
ret
lret
lock
jns
xchg
out
ficoms
inc
xor
jns
int3
dec
jns
lods
jo
stc
mov
mov
sub
xchg
out
call
and
insb
xchg
lock
mov
sub
ljmp
imul
pop
push
in
movsl
hlt
icebp
push
insl
movswl
adc
xchg
js
loopne
fidivrl
call
les
aas
push
dec
mov
insl
cmp
jbe
dec
lahf
int
sub
sbb
test
or
sub
lahf
movsl
dec
xchg
cmpsl
pop
or
pop
std
ds
in
xchg
clc
lods
xor
pop
mov
jne
sbb
xchg
cs
das
pop
mov
xchg
popa
or
lods
cmp
jl
adc
cmp
ss
test
or
stos
mov
loop
sbb
pop
ret
mov
scas
mov
push
lahf
pusha
clc
loopne
mov
movsb
pushf
test
dec
sti
push
mov
and
add
jae
jns
sub
imul
push
mov
stc
cmp
pop
fstpt
pop
dec
adc
outsb
ret
and
xor
scas
cmp
or
jo
mov
and
enter
fmull
shl
push
jnp
pop
and
rolb
mov
mov
pop
in
cltd
push
outsl
pop
push
int
sti
js
inc
imul
and
jmp
sbb
movsl
xchg
addl
add
les
fwait
into
ss
mov
xchg
mov
cwtl
pop
cld
dec
push
mov
mov
fsubrs
fsts
or
enter
adc
rorb
inc
leave
xor
insb
icebp
shlb
mov
push
arpl
loope
lea
and
sub
cli
mov
xchg
popf
jns
xor
or
xchg
mov
inc
scas
dec
mov
mov
aam
xor
or
aas
dec
mov
aaa
test
ss
lods
xlat
cmp
xchg
mov
sub
jle
mov
out
dec
sbb
cltd
add
lods
fs
ficomps
icebp
sbb
or
out
cmpsb
loop
jp
popa
daa
sahf
jl
orb
bound
add
jle
lea
xchg
pusha
xchg
fnstenv
cmp
rcrb
ljmp
psubsb
lds
in
addr16
out
ss
clc
mov
btc
cmpsl
jg
arpl
jnp
loopne
mov
xlat
fdivs
scas
hlt
das
ja
or
xchg
shrl
fimull
cmp
adc
and
mov
mov
rcll
outsl
fucompp
lahf
int3
xlat
push
das
mov
push
stos
push
sbb
sub
mov
loop
mov
ret
scas
shll
add
pop
lds
cmp
xchg
popa
aad
dec
or
test
mov
scas
xchg
ret
adc
xor
jo
aaa
jge
push
cli
pop
movsl
pop
test
pushf
je
lea
push
push
cmp
mov
inc
cmp
cmp
ret
test
xchg
add
sub
push
scas
jp
into
out
adc
pop
lret
inc
pand
and
ss
dec
bound
dec
loopne
push
shrb
mov
or
dec
mov
gs
js
out
xchg
mov
or
fisubrl
pushf
clc
movsl
test
and
cmp
inc
adc
arpl
loopne
jb
cmpsb
push
dec
mov
pop
sub
pop
pop
imul
subl
outsb
jg
cmpsl
filds
jno
int
pop
push
adc
cmpsb
dec
or
ror
lea
ss
roll
mov
jle
push
mov
mov
lea
jge
aas
in
imul
inc
in
fisubrs
push
jp
jge
jae
femms
mov
cwtl
int
dec
xchg
dec
inc
aad
xchg
sbb
xchg
rorl
ret
mov
push
inc
push
dec
cmp
cs
ds
lret
xorb
push
pop
sbb
or
dec
sbb
cmp
mov
outsb
testb
popf
stos
mov
mov
jnp
sub
stos
scas
add
orb
mov
scas
out
pop
or
lock
mov
dec
mov
fidivl
rorb
xchg
xchg
dec
cmpl
test
xor
testb
jmp
xchg
cs
outsb
ja
adc
add
cmp
xchg
sbb
ljmp
sbb
shlb
xchg
addr16
pop
or
add
das
in
ret
jp
scas
enter
out
ret
incl
cmp
adc
xor
and
xchg
popa
sub
jl
push
cld
mov
inc
arpl
enter
mov
sub
mov
out
pop
lods
xchg
jns
js
ljmp
imulb
lods
xchg
mov
imul
and
sub
cld
jmp
lods
add
mov
arpl
push
mov
in
negl
mov
movsl
movsl
nop
pop
insb
cmp
test
mov
movsl
jns
in
mov
stos
outsb
mov
mov
xchg
ljmp
gs
shlb
jns
pop
mov
js
push
enter
test
adc
mov
sub
cmp
mov
inc
add
shl
mov
sub
je
mov
jle
inc
push
push
sub
pop
fildll
pop
pop
out
jno
push
sub
cmc
popa
jnp
xor
inc
and
mov
ljmp
mov
inc
mov
adc
lds
jl
mov
sbbb
mov
aaa
jo
ja
rcrb
mov
faddp
add
loopne
cmp
imul
leave
xchg
scas
dec
push
mov
outsb
scas
cmpsb
xchg
push
mov
sbb
iret
xchg
js
adc
xchg
and
inc
push
icebp
pop
push
add
fldl2t
push
filds
fadds
aaa
xchg
xor
sbb
sub
jge
mov
out
arpl
movsb
sub
jbe
push
nop
fisttpl
mov
or
ret
movsl
rcll
je
ds
xor
std
mov
loopne
xor
mov
ljmp
mov
test
mov
push
push
imul
iret
out
jp
jno
and
mov
push
xor
jae
aam
pop
pop
xor
sub
imul
pop
test
dec
add
dec
test
fsubrp
push
push
xor
pop
pop
pop
jae
ljmp
icebp
ds
mov
movsl
out
adc
dec
adc
enter
adc
pop
scas
pop
mov
in
add
xchg
rcll
mov
dec
stc
push
mov
pushf
ja
sbb
imul
lahf
add
pop
cmp
fincstp
cmp
dec
loop
insl
ja
fisttpl
cli
push
or
xchg
mov
lods
push
xchg
mov
jae
in
push
rcll
jb
es
hlt
out
sbb
shll
mov
loopne
imul
aaa
xchg
fistl
scas
out
sar
xchg
in
sbb
sbb
sbb
adc
add
xor
aad
test
cltd
test
fs
sbb
push
push
mov
lcall
mov
pop
and
add
fldl
jecxz
pop
cmc
jno
out
xchg
push
xchg
shlb
in
cmc
push
cmc
sub
js
mov
mov
xchg
pop
xor
mov
pop
cmp
lods
mov
xchg
scas
push
or
fiaddl
jno
dec
jmp
cmc
enter
call
mov
mov
inc
cli
sub
add
mov
mov
pop
xor
adc
jb
mov
xor
stos
std
sbb
lret
xchg
fisubrs
loope
lods
icebp
lods
subb
icebp
mov
and
and
or
iret
test
sbb
clc
mov
scas
in
loop
cmp
xchg
or
subb
adc
es
inc
mov
aaa
outsl
shrb
adc
xchg
push
hlt
mov
xchg
jns
pushf
mov
aaa
push
insb
pop
arpl
dec
mov
aas
and
pop
cmp
jp
hlt
mov
es
dec
arpl
or
mov
sbb
mov
jo
jecxz
pop
push
and
addr16
je
testb
and
pop
mov
movsl
jno
fwait
jnp
jge
int
xchg
fmuls
out
loop
adc
mov
mov
mov
mov
pop
mov
dec
fmull
das
sub
pop
pop
lds
xor
add
arpl
adc
cld
hlt
and
int3
jmp
cmp
xor
cmpsl
or
mov
or
movsb
adc
aas
mov
and
pop
stc
sbbl
cs
cmc
xor
and
xchg
test
xor
fwait
into
xchg
aas
add
adc
and
xchg
imul
popf
daa
nop
and
stc
jmp
mov
popa
jbe
aas
adcl
mov
jns
jb
pushf
out
mov
mov
stos
push
sub
ficoms
jbe
push
push
mov
fmuls
push
ret
sbb
sbb
inc
sbb
movsb
and
cmc
cmc
jnp
push
repz
iret
jg
sub
mov
inc
lods
sub
push
push
push
mov
pop
mov
mov
sub
lret
hlt
mov
and
pop
mov
jle
roll
add
addr16
dec
cs
pop
push
pusha
hlt
fmulp
mov
sbb
bound
addr16
mov
jne
sbb
jo
mov
jp
cltd
mov
dec
pop
insb
mov
cmp
or
outsb
dec
out
xchg
cmp
mov
jbe
cmpsl
push
out
imul
ja
mov
cmp
xor
mov
sub
mov
pop
aam
mov
test
pop
add
aas
cmp
adc
pop
mov
sbb
aaa
add
add
sarl
mov
cmpsb
or
xchg
ret
imul
xchg
gs
ljmp
lret
xlat
pusha
push
sub
cmpsb
pop
mov
adc
mov
pop
pop
pop
sbb
mov
mov
sub
mov
push
clc
fbstp
jl
pop
sub
sbb
int3
or
rcrb
xor
push
pop
dec
mov
enter
testb
xor
or
lret
lret
inc
cwtl
outsl
daa
loopne
push
pop
sub
sbb
jae
or
jbe
add
mov
inc
jns
xlat
sub
push
orb
int
stc
sbb
adc
ret
push
in
and
adc
imul
cmp
add
pop
sub
jp
shlb
xor
xchg
ret
out
push
mov
push
andb
inc
test
mov
sbb
sbb
mov
cmp
aas
or
fnstsw
addl
add
je
shlb
adc
in
xor
push
ja
xchg
push
pop
inc
mov
test
push
mov
out
sbb
sub
sub
shr
movsb
xor
vhsubpd
jmp
arpl
pop
out
sub
and
adc
dec
push
mov
out
pop
jne
insl
mov
daa
iret
sbb
rcrb
fcmovu
jg
scas
dec
push
nop
stos
lret
addr16
pusha
das
xor
shld
pop
fnstcw
es
pop
push
aam
inc
sbb
je
pop
mov
xchg
ret
sbb
aaa
dec
aad
adc
dec
cmp
divl
sbbb
sarb
cmp
add
and
fisubs
sbb
test
out
mov
pop
jnp
add
xor
stc
cmp
stos
pop
arpl
sub
mov
insl
mov
inc
divb
mov
repnz
punpcklbw
div
jl
dec
fisttpll
fisttpll
cmc
xchg
xchg
shl
js
in
xchg
sti
push
mov
std
in
mov
mov
xchg
mov
cltd
add
cmp
mov
mov
push
jmp
cmp
mov
jbe
xor
test
push
aaa
loope
out
nop
cs
inc
sub
movsl
lds
cmp
out
jo
nop
sbb
ret
xchg
outsb
add
xor
sahf
sahf
xchg
sahf
mov
cmpb
xchg
js
add
cmp
xchg
loop
jl
icebp
adc
mov
dec
push
sbb
aam
push
fdivs
mov
mov
fcmovnb
lcall
xor
sub
push
xchg
popa
andb
out
and
sbb
out
push
int
cmpsl
mov
loopne,pt
movsb
ds
testl
sub
pushw
jecxz
je
fsubrl
sub
lods
lahf
cmpsl
addr16
inc
mov
aam
xor
repnz
and
fwait
enter
mov
push
pop
or
xchg
or
push
pop
xchg
mov
xor
sbb
adc
xchg
ret
pop
inc
fs
or
into
inc
imull
fisubrl
mov
jge
or
mov
or
inc
or
sbb
ss
lahf
push
push
mov
mov
lahf
push
xchg
xchg
or
jge
xor
push
mov
and
in
clc
pop
jle
mov
push
das
inc
pop
frstor
pop
jo
jg
mov
aam
jle
loop
mov
arpl
xchg
pop
rcrb
cs
popa
xchg
ds
inc
adcb
xor
or
xchg
jb
add
clc
push
outsb
dec
lods
pop
dec
out
out
cs
xchg
lahf
test
add
pop
cld
hlt
xor
fistpll
lock
imul
dec
and
jl
mov
and
mov
add
jno
mov
arpl
push
divl
pop
mov
mov
fs
popf
jg
int3
mov
or
or
lds
inc
sti
adc
mov
ja
sbb
xor
mov
es
add
add
dec
or
outsb
push
mov
fdivr
into
pop
rol
jo
in
xor
mov
loope
aam
int3
gs
das
scas
adc
mov
add
cs
sbb
ljmp
dec
xchg
or
mov
icebp
mov
xor
ret
dec
dec
adc
dec
adc
xchg
adc
mov
mov
data16
pop
int3
bound
adc
data16
dec
icebp
in
sbb
arpl
add
add
cli
loopne
mov
xchg
test
insb
sub
push
sub
out
sub
sub
nop
jns
lea
jnp
mov
inc
push
push
pop
xchg
aaa
outsl
repnz
test
inc
repnz
in
inc
iret
in
sub
cmp
pop
leave
jle
push
jmpw
xor
and
cmp
imul
mov
or
shll
data16
dec
jno
nop
and
mov
and
shll
orl
ficoml
adc
fnstcw
test
mov
mov
repz
std
and
fcompl
add
insb
in
sub
cmp
daa
lahf
insl
and
out
jae
jne
add
andl
push
adc
imul
adc
jl
ljmp
out
pop
orl
xor
mov
clc
js
loope
inc
mov
xor
das
imul
and
inc
push
lods
sbb
cltd
mov
jle
pusha
mov
sahf
loopne
add
mov
repnz
inc
mov
pop
pop
jecxz
inc
cld
stos
int3
bound
outsb
push
mov
cmpsb
lret
mov
addr16
mov
shlb
inc
or
lods
lea
adc
sbb
mov
push
fwait
mov
divb
add
jl
ret
lock
push
mov
xor
jmp
js
enter
pop
mov
cld
mov
xchg
mov
loopne
or
jg
test
mul
mov
jg
mov
push
xchg
fsubs
jmp
lret
xor
into
loope
lret
test
lods
pop
ds
pushf
rclb
out
cmpsl
aas
cmp
pop
mov
stos
xchg
dec
fsubr
sahf
popa
add
ret
int
xor
push
and
mov
dec
leave
out
arpl
data16
leave
addr16
sbb
jmp
nop
stc
mov
or
mov
pop
andb
add
push
mov
push
jns
dec
and
mov
lock
push
pop
mov
inc
insb
test
sti
pop
push
loop
push
push
stc
cltd
ret
and
jne
jne
in
rorb
push
rcll
loopne
or
stos
iret
dec
scas
push
call
mov
xor
pop
es
test
and
cmp
push
mov
and
inc
aam
stos
stc
lret
jmp
sbb
pop
rorb
sbb
adc
lea
cmp
inc
sbb
out
inc
and
insb
dec
aad
hlt
and
add
add
jns
test
ljmp
fildll
stos
mov
push
or
xchg
in
clc
inc
test
popa
mov
imul
shrd
mov
jns
sub
shlb
pop
pusha
ljmp
jo
mov
inc
pusha
sub
mov
cmc
sti
cmp
push
aaa
pop
cmpxchg
insl
or
sub
dec
sbb
add
xor
cmp
push
cli
mov
cs
and
cmpsl
add
adc
scas
mulb
nop
fs
rcr
add
test
ss
mov
pusha
cmpsl
add
push
and
cld
mov
xor
insb
loopne
cmp
sarb
test
push
xor
sti
daa
inc
int3
jge
mov
push
roll
int3
ljmp
cli
pop
adc
ror
jne
cmp
inc
les
xchg
jmp
push
mov
iret
adc
movsl
outsl
sub
imul
mov
xor
aam
pusha
jg
push
xor
xchg
mov
jp
pushf
pop
pusha
mov
addr16
outsb
cmpsl
and
loopne
push
mov
test
imul
fmull
ja
inc
add
sbb
jmp
jae
lea
in
jo
ret
sub
cmp
cld
repz
repz
lcall
push
out
lret
mov
fdivrl
test
stos
movsl
leave
or
push
pop
out
stos
xor
sbb
clc
inc
sub
movl
cmc
cld
adc
mov
xchg
int
shlb
cltd
roll
inc
pushf
push
jp
mov
js
decl
les
pop
sti
sbb
xor
lahf
pop
sub
loop
addr16
test
xchg
into
sbb
ljmp
dec
je
push
sbb
loop
out
hlt
xchg
jnp
cmpb
fiaddl
sub
jge
mov
pop
jg
inc
lock
arpl
add
jp
jbe
push
mov
or
mov
cmp
xlat
mov
daa
ror
hlt
stc
pop
jecxz
adc
inc
sar
mov
ja
int3
add
and
xchg
xchg
scas
pop
insb
repnz
mov
shr
pushf
xor
jl
sub
pop
xchg
cmp
mov
add
dec
std
mov
test
dec
xchg
shll
jle
out
stos
es
add
test
adc
jne
lods
outsb
rcrl
mov
mov
jle
add
or
pusha
pop
movsl
cmp
stc
sbb
mov
fldl
int
shrl
fidivrs
idivb
add
lcall
lea
cmp
in
mov
mov
jecxz
mov
pop
pop
mov
dec
dec
and
push
les
push
daa
xor
cmpb
push
push
mov
fs
xchg
mov
repz
adc
std
dec
jb
pop
xor
loopne
xchg
mov
push
push
push
add
pop
call
lea
push
push
xchg
cmp
mov
arpl
icebp
leave
add
dec
inc
scas
ja
inc
xor
pop
aas
fstps
sbb
mov
xchg
dec
jnp
dec
jecxz
into
xor
dec
push
cmp
push
fstpl
daa
add
sub
out
dec
add
out
adc
int3
dec
jmp
jmp
push
push
test
and
mov
inc
jo
adc
dec
push
dec
in
sbb
push
or
mov
loopne
pop
sub
mov
subl
or
popa
int
inc
pop
in
mov
mov
jp
orb
inc
ds
in
subl
push
lds
sbb
rolb
adc
or
in
jmp
and
cmpsb
jl
sar
xchg
fldt
fisttpl
popa
and
or
add
test
imul
jle
or
into
icebp
cmp
out
pushf
faddl
mov
mov
xor
imul
lods
btr
outsb
xor
push
xor
xor
adc
or
push
scas
repz
daa
mov
int
pushf
andl
mov
mov
push
test
pop
cmc
mov
adc
push
mov
les
bound
push
dec
inc
and
femms
mov
stc
push
dec
loop
push
subl
bound
sub
mov
pop
mov
sub
sbb
iret
pop
mov
es
in
loopne
xlat
shr
xchg
cmpsl
movsl
into
jle
jp
jnp
mov
imul
negb
push
enter
xor
sub
orb
fidivs
test
andb
shr
lret
dec
inc
xor
stos
inc
and
pop
es
movl
add
mov
jae,pn
xchg
or
fisubs
sub
jl
int
adc
shrb
push
loope
out
ret
mov
sbb
test
mov
pop
js
cltd
xchg
and
clc
movsl
cmp
inc
fcmovu
cli
movsb
xchg
dec
sub
push
imul
xlat
bound
sbb
mov
dec
rcr
pop
xchg
or
xchg
je
wrmsr
sbb
sbb
ds
xchg
inc
xor
sub
inc
fmuls
stos
push
fidivrl
xorl
or
stos
jmp
pop
sub
mov
and
cs
adc
or
and
cmp
jmp
jne
sbb
xor
sysenter
test
jp
or
push
into
es
test
lahf
sub
imulb
rcrl
subb
xlat
pop
dec
fisubs
lret
pop
bound
out
pushf
dec
mov
hlt
in
add
xchg
aaa
addr16
cld
xchg
and
mov
cmc
out
mov
jo
sbb
sbb
into
test
cmp
or
jo
pusha
aas
cwtl
xchg
jb
cmp
pop
inc
xorl
dec
sbb
mov
fstpt
movsb
mov
cmp
int3
push
sub
pop
sti
jecxz
and
mov
mov
cmp
std
call
cmp
mov
jle
pop
decb
push
mov
or
not
push
push
sub
xlat
aad
sbb
idivb
mov
or
popf
imul
rcll
sbb
loop
stc
mov
rcll
lret
fldt
loope
or
ja
call
mov
test
std
test
dec
cmp
iret
loop
sub
lock
out
lcall
inc
push
jbe
addr16
jno
sub
outsl
fwait
mov
in
test
or
mov
or
pop
into
xchg
dec
push
or
fstp
ja
sbb
clc
xor
and
in
lret
xchg
lods
jo
cli
xorl
outsl
jge
sub
sti
dec
mov
fimuls
xlat
inc
xor
inc
xlat
cmc
out
mov
aas
lcall
jbe
cli
idivb
jb
in
sub
sbb
mov
leave
pop
and
inc
mov
push
ja
mov
sahf
imul
jb
aam
stc
add
or
mov
inc
jae
inc
jo
scas
cmp
xchg
lods
adc
dec
enter
sub
adcb
ficompl
ss
cmp
jg
les
sbb
push
stos
mov
andb
jne
stos
lea
iret
pop
jmp
rdmsr
mov
xchg
xchg
mov
stc
jno
push
adc
mov
bound
out
rcr
addr16
cs
push
cmp
daa
bound
xor
mov
inc
fistps
xchg
test
xchg
inc
pop
fmull
or
leave
pusha
or
das
pop
mov
cmp
out
stos
sbb
xor
imul
in
and
xchg
xchg
and
and
xor
mov
mov
push
fstpl
sarb
jg
test
mov
pop
dec
insl
in
hlt
push
jns
add
lret
xor
imul
xchg
popa
data16
js
pushf
dec
ret
icebp
mov
mov
shll
lcall
push
push
cwtl
outsl
int
incb
mov
lods
into
stos
inc
rcll
insb
daa
inc
lret
int3
pop
std
sub
mov
push
rolb
inc
int
sub
inc
jecxz,pt
sbb
icebp
jb
insb
cmp
sub
add
fmull
cmp
popl
push
sbb
pop
leave
sti
mov
cwtl
aas
movsl
mov
mov
fimuls
mov
lret
add
aaa
fdiv
adc
loope
mov
mov
fnstsw
dec
ds
loope
stc
icebp
add
or
adc
sbb
inc
fbld
xchg
pop
inc
sbb
cmp
cmp
jb
xchg
mov
xchg
ja
add
test
sub
fcomps
in
jecxz
mov
dec
jl
xchg
leave
inc
inc
inc
rol
push
fbstp
mov
mov
mov
and
lods
push
pop
pushf
in
or
movl
xchg
movsl
push
mov
and
lods
scas
test
andl
outsl
out
push
arpl
pop
xor
popf
mov
cmpsb
or
jge
cmp
sub
jns
mov
mov
out
add
in
pop
pop
and
je
or
std
or
sub
repz
xchg
stc
inc
cmc
sub
jmp
add
pop
test
subb
inc
push
imul
push
ret
dec
jmp
test
push
push
fnstsw
and
aad
cli
test
xchg
push
aas
call
sub
pop
es
pop
dec
sbb
add
sbb
fdivrs
je
mov
in
dec
call
pop
fs
xor
rorl
jne
sub
cmc
sub
sub
in
andb
mov
cmc
inc
orl
xor
or
jle
repz
loopne
test
xchg
xor
cs
pop
movsb
fcmovu
insb
cli
jle
ja
jmp
lods
fiaddl
into
jl
adc
imulb
lods
jmp
pop
mov
push
lods
or
push
cmp
sub
or
cwtl
inc
cmp
lret
cltd
repz
push
mov
push
movsb
cmp
mov
cmpsl
out
mov
cmpsl
xchg
test
xchg
cltd
add
sbb
pop
sbb
mov
pop
pop
lods
shr
xchg
int
test
pop
je
out
lret
shlb
inc
jge
imul
jg
inc
jbe
lahf
inc
jge
icebp
pushl
int3
scas
mov
mov
mov
sahf
in
inc
imul
jno
popa
aam
push
out
push
rcll
push
js
mov
loopne
mov
rclb
out
outsl
sub
sti
mov
push
pushf
test
call
popa
dec
pop
inc
ljmp
mov
push
and
sub
push
adc
std
iret
test
or
sbb
adc
sub
sub
sbb
outsl
scas
xor
sbb
sahf
pop
xlat
mov
addr16
les
lds
js
mov
xchg
or
sbb
bound
lods
scas
and
out
fcomp
xchg
ret
leave
mov
ljmp
in
pop
mov
cltd
cmp
inc
cltd
jl
sub
aad
int
or
lcall
lds
adc
lcall
insb
mov
aam
inc
lds
pop
sar
mov
push
sbb
test
mov
in
loopne
insb
or
inc
push
xor
ret
lcall
test
fnstenv
sub
mov
cmpsl
mov
out
mov
pop
das
inc
xor
subb
sbb
es
inc
fldt
movsl
lods
mov
xor
xchg
in
or
dec
mov
sbbb
shr
lods
xchg
out
movsl
andb
out
dec
jge
pop
out
sbb
or
fisubrl
pop
push
mov
xchg
mov
inc
pop
roll
movsb
cmp
ja
jl
scas
adc
repz
jb
fs
sub
arpl
hlt
out
ljmp
add
lahf
xor
repz
inc
or
out
aam
popa
loop
push
jmp
inc
inc
dec
adc
adc
adc
pop
movsl
into
cld
scas
mov
dec
sbb
leave
popa
xor
imul
xchg
stos
stos
setbe
xor
mov
pop
pop
push
sbb
cmpl
inc
and
scas
and
jae
jnp
inc
inc
js
xchg
xchg
mov
xchg
jmp
rcr
jno
mov
sbb
arpl
fimuls
fsts
mov
pop
pop
stc
mov
loop
insl
pushl
mov
inc
popa
inc
mov
repnz
ret
push
sbb
or
or
and
push
add
sbbb
and
jnp
fldl
xor
xchg
mov
shrb
sub
fidivl
or
pand
fisttpl
ds
cmp
jmp
pop
pop
stos
out
xchg
mov
xchg
loope
xor
lret
mull
and
scas
push
cmp
and
sbb
cld
xchg
push
fadds
xlat
mov
or
and
xchg
icebp
jl
xor
dec
aad
sbb
add
sar
dec
arpl
dec
adc
mov
in
jg
xchg
dec
jl
mov
jl
data16
lret
inc
add
js
cmp
loopne
push
xor
adc
sbb
mov
mov
popa
dec
or
xor
push
hlt
cmp
jle
jp
lret
xchg
jbe
shlb
xor
pop
jge
pop
push
cltd
pop
push
or
outsb
mov
adc
mov
mov
pop
out
rcrb
fwait
cs
stc
pop
lea
inc
in
out
std
cmp
cli
inc
lock
dec
adc
mov
cmp
popf
mov
imul
leave
aam
mov
adc
sbb
mov
push
sbb
repnz
xchg
out
cmp
pop
push
fldt
imul
shll
repz
addr16
or
xchg
push
sub
cmp
lock
mov
outsb
and
cmpsb
push
popf
push
adc
daa
lcall
cmp
test
hlt
into
ret
insl
jle
add
pop
xor
push
addl
cmp
lds
pusha
xchg
sarb
jg
sbb
jg
add
sbb
mov
roll
lds
or
imul
cld
adc
fwait
dec
adc
into
fists
pop
lods
ret
mov
ret
mov
arpl
sbb
jbe
arpl
pop
ds
in
fidivrl
pop
xchg
movsb
insb
clc
sbb
fisttpll
sbb
call
dec
dec
dec
jne
int3
incb
adc
mov
jbe
divl
cs
mov
mov
mov
mov
cwtl
arpl
loopne
push
dec
push
lods
and
jp
push
sahf
inc
push
mov
pop
xchg
pop
mov
rorl
mov
fistpl
imul
out
out
fbld
jle
idiv
push
xchg
pop
add
xchg
mov
imul
shlb
inc
mov
mov
mov
int3
cld
ror
das
fnstenv
arpl
jns
out
push
or
hlt
xchg
fcoml
icebp
bound
sbb
cmp
cmp
push
aad
cmp
pusha
out
jno
gs
sarl
xchg
or
mov
and
sbb
repnz
roll
cmp
sti
fsubrl
ja
inc
cmp
push
in
inc
add
orl
scas
scas
hlt
lcall
jecxz
adc
add
push
adc
in
ljmp
daa
inc
sub
jl
sbb
into
xchg
negl
mov
xchg
sub
fsubrs
xchg
jne
or
and
fimuls
aaa
shrb
inc
mov
pop
ds
mov
loopne
or
xchg
mov
aaa
iret
mov
mov
pop
subl
dec
xor
dec
mov
or
dec
pop
ret
jp
sbb
lret
lcall
xchg
dec
jecxz
les
pop
scas
out
aaa
xor
add
fbstp
testb
cld
les
mov
mov
jecxz
push
and
in
fcomp
frstor
fldl
fwait
cmpsl
pop
xor
loopne
adc
repz
or
inc
pop
insl
shlb
pushf
push
shl
jae
insb
clc
pushf
mov
fdivrl
insl
movsl
sbb
int3
ret
sbb
jmp
pusha
sub
out
dec
enter
mov
mov
fcmovnbe
mov
roll
fistpll
aas
cmpl
lods
sbb
cltd
shlb
jle
dec
jno
shll
cmp
inc
out
lcall
insl
pop
adc
inc
xor
jmp
and
fwait
cmpsl
lahf
push
mov
mov
push
pusha
fbstp
cmpsb
push
stc
push
pop
adc
push
repnz
insb
movsl
sbb
xlat
sbb
stos
ss
in
vpcmpgtb
inc
add
mov
mov
rorl
mov
xor
adc
xchg
ja
ja
pop
lods
adc
cwtl
jp
xchg
aam
addr16
out
inc
sub
popa
lret
fisttps
and
repz
mov
dec
add
mov
mov
jmp
cmp
inc
enter
mov
or
aaa
mov
into
outsl
add
xlat
pop
push
mov
iret
out
mov
andb
lcall
push
mov
call
movsl
fnstcw
lret
sub
jl
sbb
add
rorl
jns
adc
mov
sbb
outsl
fmuls
pop
lock
fmuls
mov
xchg
pop
adc
xchg
cmpsb
add
adc
sub
and
sub
ficoms
mov
data16
aad
xchg
and
mov
inc
insb
test
andb
mov
xlat
lea
sub
push
stc
dec
mov
in
dec
adc
test
pop
lcall
mov
or
call
das
mov
jno
fcompl
sarb
aas
ss
popa
push
les
mov
les
jg
mov
xchg
jg
rolb
cmp
mov
adc
insb
in
fldcw
mov
cmpsb
stos
movsl
inc
imul
adc
mov
push
mov
shll
sbb
mov
dec
gs
nop
or
lea
fsubs
inc
dec
pop
enter
mov
std
imul
mov
addr16
ja
jno
roll
decb
inc
cmp
in
aad
call
pop
iret
stos
jbe
rorb
adc
fstpl
out
out
js
push
mov
and
subl
cmp
mov
sub
adc
and
hlt
mov
into
stos
push
into
add
js
inc
jno
mov
decb
and
frstor
dec
aas
jne
mov
push
leave
je
inc
cltd
mov
adc
mov
xchg
in
nop
inc
adc
jmp
sbb
dec
xor
shll
iret
sub
inc
fmulp
pop
jb
cmp
xchg
dec
ja
or
insb
push
andl
ffree
sti
mov
loop
pop
lret
out
mov
mov
popa
loop
ficomps
sub
mov
stc
mov
xchg
out
xor
or
sub
insl
sahf
in
adc
nop
mov
lret
push
xchg
in
mov
lahf
sbb
sub
mov
add
xor
mov
daa
adc
or
scas
pop
clc
xchg
or
imul
xor
mov
adc
adc
imulb
pop
iret
or
mov
xchg
pop
mov
xor
jb
sbb
sbb
subl
inc
insl
test
dec
cmpsb
jb
lret
lcall
sub
mov
xorb
and
test
jg
mov
lods
aam
fbstp
or
stos
bound
stos
mov
mov
dec
test
std
test
loop
xchg
out
xchg
fcoms
lahf
scas
arpl
outsb
mov
ds
je
mov
jmp
mov
enter
and
adc
lret
or
mov
enter
and
fisubl
push
mov
out
fnstenv
cmp
mov
pop
hlt
fcomp
outsl
jecxz
sub
mov
add
jg
or
jmp
ret
sahf
cmpb
cld
jb
pop
scas
leave
xchg
sub
mov
insb
hlt
insb
ss
leave
sub
inc
call
mov
add
xor
push
inc
xor
aaa
dec
fdivl
sbb
test
jns
es
test
dec
dec
scas
mov
dec
movsl
cmp
mov
or
enter
call
enter
mov
add
test
stos
or
popl
lds
daa
call
sbb
or
sub
pop
test
les
fwait
sbb
loop
xchg
fnstcw
imul
xchg
push
sub
or
mov
mov
add
mov
and
lret
mov
iret
jae
or
pop
lea
xchg
cmpsb
sbb
adc
repnz
inc
inc
fdivrs
mov
xchg
dec
xor
shlb
add
mov
stc
and
vpmacssdqh
push
mov
cmp
push
push
icebp
cmp
pop
xor
sbb
stos
inc
xchg
addr16
jbe
into
adc
test
std
add
inc
insb
mov
sbb
sar
dec
nop
test
jns
nop
pushf
sub
je
dec
es
aad
mov
mov
sub
xor
cmpsl
xor
je
mov
sub
int3
mov
mov
addr16
subl
pop
pop
cwtl
insl
xchg
pop
loope
push
dec
jmp
mov
push
test
pushf
xor
pop
push
lahf
fucompp
inc
xchg
xchg
in
sbb
push
sbbb
lds
stos
arpl
dec
out
sbb
out
mov
idivl
imul
cmp
mov
lcall
cmp
cmp
xchg
xchg
jge
daa
or
pop
dec
in
inc
mov
lret
lods
pushf
mov
bound
xchg
shl
jo
push
push
movsl
in
mov
mov
and
sbb
fidivrs
cmp
pop
adc
mov
adc
xlat
inc
dec
lcall
push
hlt
mov
mov
mov
aaa
pop
add
push
jne
test
rcr
jle
xchg
xor
popf
and
sbb
fdivl
clc
das
pushf
jmp
pushf
cli
mov
inc
cli
mov
mov
std
fnstcw
loope
mov
sub
enterw
lods
ss
inc
subl
lods
jle
xchg
xor
inc
fwait
in
jmp
sub
sub
jge
mov
push
xchg
xor
insb
push
fadd
mov
inc
mov
mov
xor
mov
inc
push
jle
faddl
push
mov
jecxz
das
shll
loopne
in
int3
daa
mov
or
pop
or
lea
pop
jecxz
sbb
mov
mov
jo
sub
xchg
gs
jb
xchg
adc
and
pusha
xchg
or
and
cmovnp
push
dec
inc
fimuls
sbb
mov
sub
insl
pop
sub
xchg
fs
sub
stc
imul
jg
int3
inc
sbb
mov
mov
push
inc
cwtl
jmp
pop
lahf
sub
adc
shlb
push
scas
inc
das
movsl
pusha
pushf
scas
cmp
cmp
mov
vdivpd
add
xor
sub
sub
adc
xchg
mov
loopne
push
lret
jns
in
pop
or
js
fwait
out
jnp
test
mov
jg
pop
es
cwtl
push
inc
adc
xor
jo
inc
mov
pop
iret
and
inc
or
sbb
or
repz
mov
and
sbb
mov
fmull
loope
mov
inc
sbbl
pop
jns
or
cmp
add
cld
pop
add
pushf
push
adc
adc
aaa
mov
in
jmp
inc
enter
and
mov
icebp
into
data16
pop
loope
pop
mov
push
es
or
dec
int
xor
sub
mov
cmp
ljmp
xor
jg
mov
cld
ret
mov
aas
lods
sbb
rorl
push
mov
test
lods
xlat
iret
pop
sub
insb
cmp
adcb
pop
adc
inc
imul
push
mov
pushf
add
jmp
call
movsl
inc
test
dec
lret
incb
pop
stc
xchg
jnp
data16
repnz
push
inc
hlt
pushf
xchg
or
icebp
jbe
or
pop
int3
mov
out
jns
and
push
xor
xchg
cmp
jl
movsb
into
enter
add
lock
mov
data16
pop
sbb
xchg
sub
inc
in
fstpt
insl
adc
jg
cltd
out
in
mov
xor
js
mov
sbb
enter
rcrl
xor
xchg
dec
lea
push
push
fisttpll
adc
mov
jecxz
loopne
push
adc
push
inc
inc
pop
cmp
jge
mov
lods
cltd
add
test
xchg
and
inc
sbb
mov
outsb
ror
mov
vunpcklps
cli
inc
and
outsb
sub
iret
pop
das
dec
pop
lret
std
dec
nop
test
out
sar
cmp
into
pop
mov
aas
ljmp
xor
gs
lods
ret
add
shll
add
scas
repnz
jb
mov
negl
insl
int3
xchg
mov
mov
mov
add
cmp
sbb
mull
sub
mov
ds
pop
xor
shl
dec
fnsave
fdiv
pop
pop
pop
adc
test
mov
fcomps
fistps
rcll
xchg
gs
iret
jne
test
jbe
in
adc
xor
insb
mov
out
jmp
mov
cltd
xchg
sub
lahf
ja
clc
int3
sub
repnz
pop
adc
daa
icebp
mov
or
repz
add
gs
adc
xor
sbb
pop
sbb
inc
aad
out
inc
add
adc
mov
fiaddl
cld
sub
int3
dec
mov
adc
imul
jne
shlb
adc
sbb
les
rclb
xor
aaa
mov
nop
push
add
loop
loopne
cmp
shrl
mov
push
mov
fwait
xor
jns
mov
out
aaa
rcll
xor
sti
push
scas
lret
dec
cmpsb
call
or
or
dec
cld
test
add
xor
inc
leave
out
fimull
scas
add
ret
das
dec
push
adc
or
into
sub
sub
stos
mov
lret
cmpsb
push
mov
sbb
xchg
aam
adc
and
pop
daa
aas
insl
xchg
imul
loop
xchg
add
sub
adc
or
jl
je
sbb
xchg
and
fidivl
int
stc
sub
hlt
fstpt
add
mov
je
mov
ja
inc
cwtl
nop
push
fdivrl
rorb
or
fadd
add
shr
pop
inc
cmp
pop
sub
inc
jo
xor
pop
rolb
push
pop
xchg
subb
push
push
mov
in
mov
inc
addr16
aas
cmp
pop
sbb
push
or
lret
push
jns
shrb
cs
mov
notb
add
sub
jnp
stos
and
and
pop
dec
mov
ret
jnp
into
cs
mov
aam
scas
mov
push
int
push
sbb
xchg
and
push
bound
ja
jge
and
mov
push
jne
lock
cltd
repz
xchg
lret
dec
mov
loope
push
sbb
push
pop
clc
lock
sbb
insb
mov
mov
sti
sbb
pushf
or
fs
mov
sbb
push
pop
xchg
dec
int
xor
or
imul
push
sbb
add
in
inc
sti
les
push
xchg
shlb
es
test
cmp
sub
sbb
lahf
gs
and
xchg
cwtl
in
jmp
lods
aad
mov
clc
inc
aaa
in
dec
and
add
adc
jle
xchg
cltd
daa
or
fsubrs
inc
fwait
shll
and
fwait
push
addl
or
mov
repnz
cmpsl
repnz
mov
test
xor
inc
and
leave
sub
xchg
jnp
mov
push
pop
inc
test
cmp
cmp
push
mov
or
movsb
jmp
out
xchg
adc
mov
lock
fnstsw
out
jmp
movl
lcall
int
cmp
fldenv
cmp
sti
not
sub
push
inc
mov
jnp
cmp
jbe
or
stos
cmp
fildll
cwtl
and
and
dec
jp
sti
lds
sbb
nop
cmp
por
or
pop
shlb
fmuls
push
gs
mov
daa
cli
fimull
scas
push
dec
jmp
incl
and
aaa
nop
aaa
icebp
xchg
test
and
lret
jle
rol
sub
jmp
cmp
pop
adc
call
pushf
pusha
xlat
lahf
push
ret
pop
push
sbb
add
popa
scas
mov
insl
pop
or
je
das
in
jo
fisubl
mov
cmp
xor
jno
shlb
ret
mov
gs
and
es
jo
mov
adc
lahf
adc
add
test
pop
out
adc
fiadds
jb
test
shrb
ljmp
cmp
movsl
xchg
or
out
mov
test
mov
cs
cmp
and
xchg
push
adc
xchg
bound
sub
inc
inc
jp
jbe
inc
pop
sbb
sbb
pop
cld
lcall
rcrb
cmpsl
jmp
jle
cltd
aaa
stos
imul
cmp
aam
out
cmp
jo
inc
add
nop
pop
stos
mov
dec
repz
pop
pop
fdivrp
bound
les
stc
jle
stos
adc
or
cmp
xlat
pop
xor
sahf
out
aaa
and
insl
mov
lret
and
pop
mov
push
push
adc
arpl
pop
imul
or
jnp
sbb
sahf
xchg
push
push
ljmp
xor
sbb
popa
mov
leave
cmp
adc
psubq
mov
jne
push
addr16
or
jecxz
xchg
in
lret
lods
in
std
fisubrl
lahf
decb
loop
lret
sbb
out
dec
inc
add
bound
pop
xchg
sahf
cmp
xchg
push
movsb
sub
cmp
pusha
sub
dec
push
fsubp
xchg
dec
sahf
and
mov
lock
daa
mov
aad
inc
sbb
adc
dec
jb
sbb
aas
cmp
pop
outsl
jl
pushf
add
mov
into
push
mov
add
inc
addr16
or
lods
mov
cmp
dec
cmp
dec
fiadds
add
xor
pop
mov
scas
cld
push
sbb
or
cmp
aaa
in
pop
pushf
pop
notl
scas
bound
pop
mov
adc
scas
inc
xchg
inc
lods
ss
xchg
std
push
popa
xchg
add
cmpsb
sti
mov
fists
inc
and
adc
and
push
sbb
mov
ljmp
and
adc
lret
insb
jge
or
push
push
es
fadds
cmc
mov
mov
inc
adc
dec
out
repnz
mov
inc
pop
sub
add
les
into
adc
sub
subb
in
xchg
into
sub
add
jns
jge
dec
aaa
adc
and
and
jl
xchg
mov
sub
into
adc
pushf
stos
clc
jae
jmp
psubb
push
mov
push
leave
and
out
pop
or
jecxz
mov
mov
xchg
hlt
bound
cmpl
cmp
cmpsl
je
ret
int
outsb
push
andb
test
cld
cmp
decb
mov
jg
sbb
pop
mov
mov
sub
mov
push
pop
test
add
xor
inc
mov
mov
xchg
xlat
dec
jge
adc
ja
mov
xlat
push
pop
pop
sbb
add
sub
sti
push
dec
mov
xchg
mov
lods
jns
add
rcrb
decb
jl
mov
pop
fxch
sub
pop
test
fs
or
xchg
cwtl
adc
aas
adc
into
adc
fcmovu
stos
and
outsl
inc
rclb
sub
insl
ret
sbb
xchg
sub
push
insb
jg
jp
nop
repz
mov
mov
add
jle
xlat
mov
ja
lret
outsb
mov
lahf
jns
cmpsl
rcl
scas
ret
in
mov
ljmp
das
rorl
cmp
jo
pop
push
pop
incb
push
sbb
lods
fs
dec
mov
pop
or
xor
jle
adc
test
adcl
jecxz
inc
leave
cmp
mov
hlt
ds
adc
insb
test
push
mov
add
lret
movsl
shll
mov
out
leave
daa
ljmp
mov
mov
sub
xchg
mov
sarl
and
sahf
xchg
cmp
add
mov
push
xchg
sbb
outsl
mov
rolb
in
ljmp
outsb
pop
sbb
xor
call
in
mov
mov
cmc
mov
popa
ret
inc
sbb
fsubp
xchg
test
inc
aaa
inc
jbe
mov
out
sub
fcomp
pop
add
test
addr16
das
ljmp
inc
test
adc
push
cmp
call
add
or
jns
sbbb
jle
test
ljmp
dec
scas
adc
out
test
cmp
movsb
imull
sbb
test
adc
cmp
in
cmc
repz
fsubrl
lock
sub
dec
lods
jne
ret
mov
dec
ds
dec
ds
push
das
outsl
jbe
jecxz
sub
outsl
or
mov
movsb
adc
sub
pop
rcll
loop
push
adc
pop
lret
fadd
pop
popf
dec
lock
out
jnp
in
mov
add
mov
push
ret
fiaddl
insl
inc
clc
mov
mov
sub
pop
sub
adc
hlt
out
mov
loop
inc
movsl
pop
mov
jae
js
xlat
mov
cmp
shlw
or
jl
sub
or
jmp
jg
dec
rcrl
mov
stos
push
aas
bound
lretw
lcall
sbb
push
dec
sarb
ljmp
add
or
jne
dec
ret
adc
lods
iret
arpl
std
sti
push
mov
pop
mov
push
and
lock
add
lcall
pushf
lret
sahf
popf
inc
in
push
ss
sub
mov
popa
popf
push
scas
and
cmp
js
or
popf
pop
mov
out
ss
insl
sbb
jl
cltd
pop
pop
popa
lret
jb
inc
sub
cmc
popf
mov
mull
pusha
sbb
xchg
cmp
inc
xor
shrl
sub
sub
rorb
fwait
jg
pop
lahf
vdivss
iret
test
cmc
adc
sub
adc
and
add
cmpb
fwait
or
cmpsl
mov
sarb
lahf
outsb
add
loop
adc
pop
jns
int
jg
test
arpl
enter
pop
test
mov
xor
in
and
jno
pop
jne
push
incl
xchg
jo
push
aaa
sbb
add
sbb
sbb
adc
pop
nop
loop
add
fsubr
sbb
jae
aaa
movsb
ret
mov
dec
imul
ret
inc
inc
add
jnp
cwtl
mov
sub
push
fnstsw
fwait
push
scas
cmp
pop
cmp
shlb
push
xchg
xor
gs
push
cld
das
and
and
add
cmp
add
inc
call
jmp
mov
jecxz
mov
dec
leave
push
rcll
iret
pusha
call
xor
sbb
orl
mov
enter
cld
mov
out
mov
inc
pop
and
fsubs
gs
adc
sbb
cmp
xchg
sub
out
or
add
mov
cmp
pop
fstps
inc
xor
add
jo
ret
sbb
aaa
or
dec
test
push
push
jg
xor
movsb
sub
pop
mov
ret
mov
jge
adc
mov
aad
jbe
dec
das
add
mov
add
shrb
in
sbb
cmpsb
xlat
sqrtps
js
xchg
and
out
outsb
push
faddl
sbb
jl
out
adc
test
fcomi
lea
cmp
adc
jge
xchg
xchg
or
scas
sub
test
not
xor
xchg
fistl
dec
or
pop
push
outsb
mov
imul
pop
and
pop
cli
xor
enter
or
adc
inc
jb
rclb
or
cmp
or
hlt
push
sbbl
mov
insl
mov
push
jmp
iret
pop
jecxz
inc
pop
mov
xchg
xor
jb
push
mov
pop
mov
and
mulb
pop
cs
in
ror
sub
mov
mov
ret
jne
std
mov
jb
add
xchg
fsub
outsb
loop
push
clc
loope
pop
pop
outsb
stc
sub
std
stos
sbb
mov
add
cmp
outsl
hlt
in
mov
scas
xor
xor
cli
and
addr16
or
xor
imul
cmp
push
in
fwait
push
int3
dec
xchg
or
out
inc
punpckhbw
lahf
int3
fldt
in
jl
test
adc
add
jp
push
pushf
jae
loopne
jle
stc
dec
out
pop
negl
jnp
frstor
dec
sub
popa
ss
inc
lods
or
addr16
insl
das
in
push
sbb
pushl
and
jb
fnstsw
fisubs
lcall
loop
sbb
movsb
subb
jp
and
jbe
orb
loopne
lods
pop
mov
and
ljmp
jp
rcrl
mov
mov
aam
stos
jo
jg
shlb
sbb
dec
xchg
adc
leave
add
xchg
adc
inc
jg
push
es
notb
add
cmp
insb
js
aas
or
leave
ret
mov
mov
mov
repz
scas
lds
into
adc
in
jl
clc
push
xchg
mov
jb
jle
push
cmp
out
pop
sbbl
neg
mov
xor
sti
cltd
mov
add
lods
xor
psadbw
sti
sbb
jecxz
mov
pop
sbb
mov
aad
inc
pop
idivl
into
xor
cmp
addb
cli
iret
mov
sbb
lahf
dec
or
jne
nop
lods
and
mov
xor
mov
inc
cmp
lahf
and
addr16
rorb
pop
cli
clc
in
repnz
insb
mov
movsl
into
pop
in
cwtl
push
test
adc
imul
pop
push
sahf
stc
stos
and
pop
push
out
and
add
cmp
jne
mov
add
ss
jmp
xor
jmp
xor
aaa
jbe
xor
push
int3
outsl
imull
xchg
test
add
lods
lods
add
int
inc
jnp
jle
cmc
jp
stc
out
cmp
insl
fsubl
js
mov
or
cmp
mov
or
sub
push
cmp
push
sbb
jo
rcl
shl
inc
int
xchg
iret
clc
mov
mov
jo
mov
mov
cmpsl
pusha
loop
sahf
sti
negl
inc
xor
test
fmuls
jmp
fldenv
add
dec
or
jle
sub
in
jb
sub
mov
jl
pushf
imul
rorl
add
int
in
fldz
pop
xor
cltd
aas
mov
sbb
jo
scas
orb
js
or
sub
sub
lock
pop
int
push
adc
push
adc
pop
adc
sti
repnz
in
cmpsl
inc
xchg
jo
repz
aas
inc
fisttps
or
imul
aas
int3
xchg
cli
dec
loop
jg
imul
mov
pmovmskb
pop
shlb
pop
mov
adc
jo
inc
xlat
lret
push
mov
adc
adc
push
lahf
push
sub
jbe
jns
cmp
ror
adcb
xabort
add
cmp
fistpll
not
rcll
movsl
or
ret
push
mov
dec
mov
add
test
sarb
or
xor
pop
call
pop
in
test
iret
or
scas
push
cmp
or
add
test
fisttpl
mov
outsl
test
pushf
mov
in
push
mov
leave
test
dec
sub
loop
mov
cmp
pop
mov
or
inc
int3
daa
mov
jns
sbb
outsb
adc
cwtl
out
rorb
les
mov
jo
add
push
mov
xchg
mov
inc
rcll
mov
cmp
cwtl
xor
mov
addr16
xlat
negl
jns
imul
push
movsl
mov
cmpb
sub
sbb
adc
dec
pop
jo
mov
jne
leave
clc
xchg
cli
and
mov
lods
ja
sarb
mov
test
test
dec
in
roll
jle
push
or
aaa
jb
mov
push
stos
push
adc
lea
mov
out
mov
into
rorl
jp
or
pusha
or
add
xchg
sbb
inc
mov
sbb
pushl
push
add
cmp
loop
ss
push
pop
mov
popf
in
sub
xchg
xor
inc
push
push
jg
push
mov
rcl
adc
popa
push
es
or
cwtl
sub
das
mov
dec
outsb
xchg
sub
mov
jle
mov
shr
mov
lea
negl
icebp
add
out
sub
loop
iret
pop
cs
ret
fnstcw
shrl
scas
ret
add
push
testl
dec
mov
xchg
movsl
cli
jmp
mov
lret
adc
cmp
mov
and
xlat
adc
in
mov
push
xchg
and
xor
adc
popw
push
enter
repnz
dec
xchg
add
shll
sub
popf
in
bound
roll
dec
je
leave
popl
or
push
idivl
xchg
fidivrl
dec
loop
xchg
mov
testl
cmp
add
dec
movsl
mov
mov
mov
cmp
test
stos
call
mov
leave
mov
mov
scas
pop
hlt
push
bound
pushf
mov
outsl
add
push
mov
mov
stos
cmp
imul
pop
jnp
insl
ja
out
sbb
punpckldq
pop
mov
in
gs
test
sub
pop
pop
pop
aam
mov
jg
fdivrl
arpl
xchg
or
int
dec
aam
rolb
mov
test
lods
mov
lds
fsubs
jno
jno
xor
dec
and
push
fcompl
test
xchg
push
add
fwait
dec
dec
add
mov
mov
in
divb
mov
cmp
xchg
xchg
mov
mov
test
adc
mov
dec
fnstsw
inc
and
into
sarl
incb
cli
mov
loop
mov
dec
xor
or
mov
mov
iret
xor
inc
cwtl
in
loop
fistpl
or
pop
mov
test
lods
jb
xlat
stc
cmpsl
out
cmp
loop
faddl
ja
pusha
adc
fwait
test
add
xor
das
mov
sti
xchg
rcl
jecxz
push
sarb
mov
jo
xchg
xor
pop
ljmp
out
lahf
orb
add
jmp
inc
cmp
std
xchg
sub
pop
sub
clc
in
xchg
push
sub
sbb
repz
out
xchg
movsb
lods
cmp
out
sbb
xor
jns
cmp
inc
pushl
add
stc
movsb
cmp
add
add
jnp
cs
lret
jmp
lock
les
test
xchg
outsl
fwait
decb
xchg
fisubl
mov
daa
inc
notl
xor
cwtl
jbe
lds
cltd
andl
mov
test
shr
push
cltd
pop
sub
jl
shlb
jo
pop
sbb
mov
rcl
les
in
popl
push
push
push
and
loop
add
jp
das
sbb
les
es
imul
add
pop
fsubrl
push
pop
xor
enter
cmp
sub
xchg
mov
mov
xchg
jne
ret
xor
push
lds
out
je
ret
test
push
into
out
fcmovbe
shlb
cli
lods
mov
dec
pop
inc
aas
jbe
in
sti
jae
xlat
fimull
sbb
xchg
insl
xor
adc
inc
ljmp
xor
add
push
js
stos
mov
mov
in
jmp
lock
pop
clc
cmp
shlb
jb
mov
dec
neg
mov
orb
mov
repnz
je
cmp
jecxz
sti
pusha
sarb
jecxz
and
notb
add
call
add
mov
dec
push
stos
sub
ret
std
mov
clc
pop
ja
dec
fimull
stos
and
and
enter
cmp
lods
xchg
pop
pop
add
in
lret
test
xchg
dec
cmp
roll
js
sbb
and
sub
insb
dec
es
repnz
push
pop
push
xchg
dec
leave
xchg
outsl
inc
mov
loope
jge
mov
fstpt
stos
mov
in
cltd
aaa
jge
les
sbbb
inc
mov
add
fidivs
add
xchg
loope
adc
pop
ss
dec
loope
push
mov
xor
and
mov
mov
movsb
lahf
jl
fwait
sahf
xor
lods
jae
push
loop
add
or
adc
popa
mov
in
ret
push
dec
dec
cmp
sub
fnsave
inc
inc
insl
xchg
add
xchg
stc
cmp
lds
mov
or
cs
loope
lods
push
or
and
push
cmp
imul
add
popa
fnstsw
push
mov
ret
add
lcall
test
out
cmp
mov
pop
dec
movsl
push
jne
sub
lds
and
mov
ret
mov
stos
jmp
aam
mov
scas
enter
stos
sub
nop
or
cli
jg
or
xchg
shrd
int3
inc
dec
xchg
rsqrtps
sahf
imul
addl
popf
add
lahf
inc
in
out
lea
pop
xchg
dec
dec
and
mov
setbe
and
ss
xor
hlt
cli
cmp
inc
pusha
pop
or
imul
dec
cs
push
aaa
push
dec
or
ljmp
cld
dec
int3
fdivr
stos
test
mov
sbb
xor
mov
stc
subb
stos
jne
cmovns
jg
and
cs
sub
mov
jmp
mov
mov
pop
test
push
push
in
stc
fs
mov
and
push
mov
mov
pop
xchg
insl
sahf
pop
or
mov
mov
jae
cltd
inc
scas
mov
xchg
call
pop
mov
lcall
xchg
pop
xor
xor
ret
call
movsl
push
sub
loopne
sbbl
xchg
pop
stos
jb
mov
sub
cmc
insl
lock
scas
cmp
imul
and
sub
aam
xor
cmp
inc
jne
in
jle
idivb
pop
std
rorl
mov
ret
ret
adc
outsb
jle
push
mov
mov
scas
adcb
and
scas
jmp
aad
andb
adc
sbb
adc
adc
xor
adc
shrl
movsl
xor
xchg
in
adc
jg
in
mov
xor
adc
xchg
mov
pop
push
and
stc
mov
int3
mov
cld
sub
mov
and
jmp
inc
push
in
push
cmp
mov
xchg
add
mov
bound
fbstp
pop
lea
pop
dec
rcrl
xchg
aam
inc
lret
fidivrs
stos
push
adc
hlt
pop
aas
scas
cmp
push
lret
or
xchg
or
jle
insl
loop
daa
pop
pushf
lcall
imul
cld
loopne
les
aaa
cmp
jns
ror
mov
sub
rolb
inc
add
mov
mov
mov
lret
fisubrl
xchg
int
push
add
cmp
or
xor
sbb
fs
push
push
es
jno
adc
jbe
sbb
ljmp
fs
fisttps
or
mov
dec
jl
pop
jp
test
sub
adc
and
inc
imul
call
aad
out
std
fcom
mov
jmp
adc
sbb
pop
mov
add
pause
and
and
and
loopne
cmp
out
jnp
or
addr16
ja
push
sub
or
mov
leave
movsb
adc
xor
insl
nop
sub
mov
xchg
pop
rcll
jge
adc
test
sub
sub
loope
pop
inc
push
push
adc
lret
arpl
sbb
push
push
xchg
pop
sbb
stos
in
or
ficoml
cld
push
ss
fnsave
mov
cmp
inc
jne
xchg
sbb
push
pop
xchg
cmp
mov
loopne
mov
adc
imul
mov
jo
add
in
sbb
daa
cwtl
pminsw
nop
push
ss
adc
imul
subl
lahf
pop
add
adc
push
fsubrp
dec
pushf
sub
mov
pop
stos
or
lea
notb
and
cli
orl
mov
clc
or
sbb
adc
rcrb
sbb
loop
in
mov
rcll
sbb
into
testl
es
lret
add
mov
fistl
cs
cmp
jae
and
push
dec
dec
xor
jnp
add
inc
pop
ret
popf
and
out
lahf
movsl
dec
mov
movl
clc
mov
xchg
pop
out
clc
xlat
sub
mov
iret
inc
push
in
cmpsb
and
fcmovne
xor
cmp
pop
stos
sbb
sub
push
aam
adc
fidivs
sbb
insb
mov
pop
call
mov
scas
sbb
add
cmp
inc
mov
es
inc
cld
jmp
sahf
outsb
cmp
mov
arpl
pop
xor
mov
lret
jno
ja
mov
and
cmp
jbe
mov
es
sub
mov
test
and
xor
leave
pop
mov
dec
sbb
ja
mov
and
adc
jo
scas
mov
iret
fwait
cwtl
sarl
xlat
xchg
xchg
push
sar
xchg
jo
nop
sbb
fwait
and
xor
ds
pop
push
aad
xchg
lret
data16
arpl
std
call
std
daa
repnz
inc
or
push
mov
cmp
shll
push
and
lret
scas
add
and
adc
add
out
cmpsl
and
push
dec
jbe
pop
rolb
mov
ljmp
jo
mov
mov
lret
fisubl
sbb
mov
jg
sub
or
or
or
or
cmc
pop
xchg
shlb
xor
mov
push
xchg
lods
cmp
push
mov
jle
push
mov
ret
test
push
sahf
sbb
push
faddl
loope
xor
dec
loope
mov
repz
nop
dec
dec
mov
or
movsl
stc
xchg
or
push
push
jns
inc
sub
int
repz
pop
xlat
ds
scas
adcb
xchg
pusha
mov
cmp
xor
in
lods
mov
or
and
and
push
flds
mov
test
push
lea
xor
out
loope
scas
lock
mov
je
pop
mov
mov
mov
cmp
repnz
addr16
dec
mov
sub
push
lea
xchg
cmpsb
les
fstl
mov
push
cwtl
inc
inc
xor
inc
mov
gs
fisubs
add
cmpsl
xchg
loope
fs
sbb
sub
push
rep
xor
test
in
shll
sbb
mov
push
sbb
sub
sub
add
out
out
jmp
das
call
inc
adc
cmp
adc
xlat
mov
jp
inc
jg
pop
cmc
cli
jo
aad
addr16
push
mov
fldt
dec
xor
cmp
jge
adc
fstps
arpl
lret
adc
aas
ror
xor
in
push
loopne
push
aam
test
add
dec
sub
scas
xchg
jne
lret
push
out
xchg
sub
cwtl
iret
cltd
adc
inc
ds
ja
movsl
jle
cs
jns
std
pandn
or
loopne
jne
lds
cmp
jbe
pushf
outsl
out
loop
movl
notb
das
aas
inc
inc
test
int
aam
data16
mov
or
pop
mov
add
shlb
jle
mov
insb
xchg
add
mov
sub
and
jns
mov
xchg
jns
and
loopne
incl
xor
mov
or
adcl
imul
js
mov
mov
mov
add
cwtl
mov
jb
mov
inc
adc
jmp
fidivs
mov
out
iret
icebp
jno
je
fstps
mov
mov
add
push
mov
sbb
mov
out
pusha
gs
daa
pop
inc
mov
loopne
lock
je
arpl
cli
add
nop
or
jmp
sub
mov
sbb
xchg
inc
sar
push
in
loope
cmp
stos
mov
mov
fs
push
adc
fs
popf
push
test
pop
aad
jb
test
cmp
scas
or
push
scas
gs
outsl
inc
jns
fcompl
dec
imul
sub
push
divl
push
push
and
roll
push
sbb
dec
out
jne
popa
lea
ss
dec
testl
inc
int
xchg
dec
dec
sbb
sbb
jp
repnz
fimuls
lret
repz
fdivrl
in
insl
aad
stos
jns
cmp
push
js
lret
xchg
in
mov
jbe
or
std
push
and
inc
dec
lcall
icebp
push
or
pop
arpl
xor
cmpsl
outsl
imul
int
cmpl
xor
sub
lock
mov
dec
mov
fistpl
xorb
scas
mov
movsb
enter
jecxz
fidivl
decb
and
pushf
or
sbb
adc
cmp
in
xor
gs
push
mov
jne
or
out
out
imul
xchg
mov
sahf
repnz
js
xor
dec
dec
sbb
xchg
sbb
lret
hlt
push
jne
lahf
outsb
int
les
inc
sbb
std
sahf
daa
pop
test
js
xor
loopne
mov
mov
push
jo
dec
repz
cli
out
pop
aad
cmpsl
fbld
xchg
push
data16
xor
jno
pop
addr16
xor
test
adc
fstpt
and
and
das
push
adc
jne
outsl
and
loop
ljmp
cltd
fcos
pop
push
ja
sub
adc
imul
out
and
cs
ljmp
xchg
xchg
dec
or
cli
mov
shrb
dec
fisttpl
xchg
xchg
cmp
mov
push
jmp
bound
cmp
lods
sarl
lret
shll
mov
xchg
out
aam
movsl
jl
aad
cmp
sbb
fucomip
int
cmp
pop
incb
or
mov
movsb
loop
fwait
pop
mov
imul
cmp
sub
in
ret
jp
mov
adc
int
pop
aas
aaa
fcompl
and
dec
fcmove
sub
test
aaa
xor
xchg
or
test
cmp
bound
ja
cmp
pop
push
jmp
inc
jp
inc
inc
xor
xchg
popf
xor
jge
pop
lock
rolb
inc
add
mov
or
popf
int3
adc
sbb
cltd
inc
xor
lahf
into
jmp
sbb
mov
xchg
repnz
clc
jbe
jbe
inc
xlat
int3
cmp
sub
andl
mov
loope
and
dec
sbb
sub
outsl
loopew
aas
js
lods
or
pop
and
push
adc
push
in
mov
dec
push
sti
sbb
jmp
xor
imul
iret
ficomps
pop
pop
daa
or
ror
lret
lahf
nop
mov
clc
push
inc
aad
jle
loop
inc
fsubr
xchg
add
bnd
fcmovb
aaa
adc
testl
in
scas
aaa
roll
xor
sub
cmp
pop
out
inc
adc
inc
popf
push
fcomi
je
int
mov
fidivrs
mov
arpl
aaa
and
int3
cwtl
cli
and
movsb
hlt
fwait
xor
mov
out
mov
pop
lods
mov
mov
in
mov
fcmovu
repnz
addr16
add
fmul
insb
daa
clc
fsubrl
shlb
xchg
sbb
orb
mov
sbb
xor
movsb
jl
dec
lcall
into
cmpsl
mov
mov
roll
cmp
mov
or
shlb
imul
pop
add
into
popa
mov
xlat
ja
adc
insb
and
lret
push
mov
xor
push
mov
adc
mov
push
and
mov
mov
and
lret
mov
push
add
adc
push
cmp
or
mov
outsl
sbb
sub
jge
rcl
jl
sub
sbb
iret
inc
shl
cli
fistpl
loop
scas
shlb
pop
lods
popf
mov
daa
cli
popf
push
aam
je
shrb
adc
push
inc
in
jne
push
xchg
sbb
jae
subl
int
xor
nop
mov
cs
test
filds
mov
aas
in
fisttpl
arpl
cmc
ret
adc
dec
mov
mov
mov
or
aaa
mov
push
fdivp
jp
int
jbe
leave
mov
cld
and
lcall
dec
mov
lret
stos
orb
cmpsl
gs
mov
cmp
pop
arpl
pop
into
pop
popf
mov
clc
cld
pusha
imul
add
inc
roll
or
xor
pop
loop
les
inc
jo
leave
lock
lods
aas
jmp
popa
mov
xchg
inc
mov
add
cwtl
adc
xor
cltd
or
cmpl
movsb
xchg
imul
flds
enter
fs
nop
sbb
pop
xchg
add
xchg
movsl
mov
add
jbe
insl
hlt
cmovb
movsb
xchg
sahf
arpl
sbb
sbb
pop
and
xchg
pop
int3
xor
sub
jg
sub
sub
xor
xchg
test
mov
inc
adc
stc
fiadds
pop
xor
xchg
arpl
out
cwtl
lret
ja
ljmp
int3
adc
add
mov
pop
jl
add
adc
mov
testl
cltd
into
jns
adcl
test
addl
rol
into
cmp
cwtl
sbb
int
mov
xor
in
add
sub
and
pusha
sbb
mov
or
push
cmp
mov
aad
adc
jno
or
mov
and
movsl
ljmp
xchg
xor
pop
mov
nop
clc
arpl
xchg
sti
mov
test
pop
sbb
pop
addl
shrb
js
mov
dec
xchg
cld
or
fs
xor
dec
xchg
lret
jmp
push
mov
and
stos
negb
das
mov
and
test
xchg
add
xchg
test
pop
lret
xor
cltd
sti
jb
pop
aad
cmp
push
xor
lret
in
inc
cmp
aas
or
mov
sbb
jge
cs
out
fstpt
cmpl
into
inc
push
outsb
mov
jecxz
mov
imul
xchg
hlt
mov
icebp
pop
imul
mov
xchg
xor
dec
lret
pop
push
fwait
aad
xor
push
shll
sbbl
lahf
mov
push
and
mov
push
and
leave
vpmaxsw
jmp
xlat
mov
cmp
cltd
xor
inc
inc
in
inc
jno
pop
push
les
stos
mov
dec
jle
xchg
xor
pop
cmp
movsl
movsl
clc
xor
or
xor
mov
jnp
push
loope
movb
jmp
lahf
sar
test
pop
push
xchg
sahf
jns
xor
sub
call
test
add
push
mov
hlt
xchg
dec
scas
mov
dec
nop
je
dec
lods
inc
dec
in
leave
cmp
pop
jb
cmpsb
cmp
shlb
lret
std
push
and
fistl
dec
jle
jecxz
cltd
leave
xor
rcrb
xrelease
rcrb
inc
mov
sbb
andb
and
clc
arpl
lahf
mov
jecxz
xchg
fwait
push
cs
scas
imull
gs
push
and
or
xchg
dec
jmp
rcr
inc
lds
out
add
cmp
rorb
add
daa
xchg
rolb
lock
roll
cltd
xor
imul
dec
dec
pop
ffreep
gs
movsl
dec
in
outsl
lcall
jae
incb
inc
into
sub
aad
push
aad
push
xchg
mov
inc
push
shll
fcmove
or
mov
out
shll
push
mov
andnps
push
xchg
mov
add
cmpsb
inc
cmp
and
pop
pop
sbb
fbstp
cli
push
and
mov
sub
out
pop
xor
sbb
stos
repz
jl
mov
pop
add
popa
cs
xor
sbb
out
mov
or
ret
sti
xchg
out
inc
adc
loopne
jle
insl
and
es
imul
bnd
push
sbb
sbb
insl
je
fdiv
pop
fcmovb
and
sbb
xchg
shrb
nop
or
cmp
gs
dec
insl
jecxz
subb
mov
jge
pop
outsl
jl
pop
fmul
arpl
sbb
xor
cmp
mov
test
inc
xor
fsub
xor
ret
mov
ret
scas
push
add
inc
dec
rclb
sbb
icebp
adc
icebp
sub
mov
xlat
sub
sub
fildl
or
xchg
inc
pop
inc
pop
push
mov
or
push
inc
fsubrl
imul
int3
rcrb
adc
lcall
out
outsb
push
sub
lods
xchg
stc
movsb
je
dec
sbb
xor
call
adcb
inc
insb
cmp
aaa
scas
inc
adc
mov
sbbl
imul
and
sbb
cs
int3
fcmovnbe
cmp
mov
inc
add
xchg
pop
sbb
push
cmp
addr16
xor
adc
dec
repnz
setbe
pop
cmp
and
es
test
sub
dec
ret
outsb
xor
mov
rclb
out
pop
push
icebp
testl
pop
pop
popa
mov
cmpsl
orb
int
dec
aam
fdivl
in
fwait
in
cmp
cmp
sbb
popa
pop
leave
popl
xorb
mov
xchg
mov
sbb
and
adc
out
outsl
push
xor
test
imul
mov
test
test
push
fbld
dec
clc
xor
sub
dec
xor
jae
es
mov
cmp
call
and
out
cmp
and
jge
movsb
xchg
cmp
sbb
jle
fstps
push
outsl
scas
mov
mov
insb
fucomip
cwtl
stos
jmp
sar
add
xchg
xchg
push
ljmp
pop
insl
jb
sahf
outsl
mov
sarb
push
jns
xchg
enter
mov
xchg
mov
mov
mov
or
stos
ds
popa
mov
or
mov
pusha
movsb
push
mov
pop
mov
in
inc
call
mov
inc
ret
out
or
add
xchg
fdivrs
daa
fildll
mov
dec
xchg
pop
jge
call
lahf
not
adc
pop
add
push
xchg
push
mov
daa
cmpsl
jns
and
adc
fimull
mov
xor
xlat
cli
xchg
mov
mov
sbb
xchg
push
lock
xchg
dec
shll
push
mov
push
cmp
adc
adc
xor
cmp
lock
mov
inc
stc
cwtl
lret
jne
test
mov
dec
mov
dec
enter
inc
xchg
mov
mov
mov
iret
mov
sub
mov
jno
pop
cwtl
popf
enter
mov
repz
mov
int
push
mov
scas
mov
xchg
fcmovne
in
loop,pn
or
sbbl
cmpsl
daa
mov
dec
call
outsl
lds
push
push
xchg
test
inc
les
jns
add
js
cmp
test
inc
sbb
push
xor
inc
test
sbbb
aas
jecxz
jo
ds
push
push
sub
clc
mov
mov
ja
lahf
sub
stos
vmread
mov
mov
inc
push
lret
or
xchg
cmp
and
ficompl
jae
jae
jne
sahf
sub
cltd
out
jbe
or
cmp
cmpsl
push
mov
mov
loope
loopne
imul
xchg
mov
sub
es
imul
xchg
stos
add
mov
mov
xchg
imul
or
pop
adc
in
fucomi
std
mov
mov
sub
rorl
cli
lea
inc
jbe
fsubs
cmpsb
cmp
shll
pop
mov
gs
sub
in
or
ljmp
bound
mov
xchg
clc
mov
pop
mov
or
loop
jg
lods
jmp
sbb
push
fbstp
in
or
es
daa
fs
bound
xor
mov
xor
ret
adc
xor
sbb
push
sbb
jno
out
mov
out
mov
and
fwait
jo
or
pushf
into
jle
inc
fcmovne
stos
push
outsl
sub
ss
xchg
enter
push
mulb
or
xchg
ja
aaa
add
jle
pop
orb
jns
stos
ss
cmp
in
xor
fisubrl
and
arpl
push
mov
push
and
pop
sti
and
movsb
cmp
xchg
lods
mov
enter
cli
xchg
push
aad
add
insl
sbb
mov
loope
ds
js
or
outsl
out
jecxz
and
xchg
fidivrl
test
nop
ljmp
jne
dec
es
add
stos
jo
push
sbb
cmp
sub
mov
or
leave
jb
js
arpl
das
dec
xor
sti
in
repnz
dec
push
popl
adc
test
cs
jb
les
aaa
dec
je
ja
ficoms
push
xchg
adc
pop
imulb
lds
push
pop
pop
push
test
pop
out
mov
cmpsl
test
cmp
dec
mov
inc
xchg
add
ret
daa
pop
and
jb
cmp
test
cmpsl
jmp
sbb
int3
cmp
jl
lcall
jnp
movsl
mov
ljmp
cltd
test
mov
loope
fwait
iret
mov
pop
sbb
cltd
cmp
aas
push
push
xchg
shrl
mov
cwtl
je
push
sub
adc
mov
jge
mov
add
cltd
xlat
aaa
add
jl
into
call
jbe
pop
cmp
sub
pop
fildll
test
and
lea
daa
mov
js
mov
dec
or
inc
jb
imul
sbb
ret
test
sub
jl
mov
inc
mov
repz
iret
call
xor
jmp
pushf
aaa
sub
add
jno
shll
inc
push
in
mov
pop
test
xchg
and
jmp
mov
cld
xchg
adc
and
dec
cwtl
lret
push
and
sub
out
push
pop
js
imul
test
div
jns
inc
stos
push
add
lock
pop
cmp
rcrl
pop
es
imul
sbb
inc
into
dec
dec
out
shrb
aaa
cltd
xchg
sub
fisttps
or
push
aad
inc
movl
jno
in
stos
jb
data16
cltd
ret
out
movsl
xchg
lea
mov
sub
pop
idivl
xor
jmp
inc
fcompl
loopne
lret
add
and
lcall
add
inc
jns
ficompl
fmul
sub
push
push
out
cmc
xor
adc
sbb
cmp
call
pop
js
movsb
xchg
iret
lcall
pop
iret
pop
inc
scas
mov
hlt
repnz
lret
subb
push
jle
cmp
mov
rcll
or
mov
fcmovbe
dec
aaa
mov
xor
jne
or
pop
mov
jno
xor
test
scas
cli
jae
sbb
adc
insl
mov
inc
out
test
lods
into
cltd
es
cld
pop
or
mov
cli
sbb
lea
sarb
mov
or
hlt
hlt
in
cmp
mov
sub
add
aam
mov
push
aam
jne
cmpsl
shll
dec
or
mov
and
adc
mov
mov
testl
push
std
cmp
pusha
mov
test
fists
out
or
addl
call
cs
imul
xor
dec
call
repnz
sbb
adc
jb
shrl
sub
repnz
daa
icebp
xor
pcmpeqw
mov
fimull
int
sbb
out
enter
pop
jbe
xor
sarl
pushf
or
cmpsl
inc
leave
jmp
cmp
add
sbb
mov
sbb
dec
in
sbb
xor
xchg
jo
movsb
mov
push
subl
lods
mov
sub
popf
inc
mov
or
push
cmpsl
stos
movsb
push
mov
inc
sahf
mov
mov
cmc
dec
pop
push
inc
repz
fistpl
into
xor
inc
xor
imul
sahf
ret
adc
daa
mov
jns
nop
dec
dec
pop
outsl
scas
cmp
sub
mov
jge
ret
ret
jns
push
repz
lcall
mov
bound
insb
aas
xchg
cwtl
mov
fstl
pop
dec
mov
lahf
lea
mov
adc
into
imul
aas
das
sbb
pop
shll
jp
mov
dec
jge
repz
mov
movsb
shll
inc
xchg
fldl
and
scas
insl
mov
xchg
jecxz
xchg
in
adc
bound
ljmp
lods
cmc
into
mov
enter
ja
dec
aas
jae
popaw
iret
mov
xlat
je
mov
rolb
add
push
mov
icebp
idivb
or
xor
fs
add
cltd
lret
out
jo
outsb
outsb
jnp
xlat
je
dec
adc
test
mov
xchg
xor
lods
and
pop
stos
dec
rcl
pop
icebp
xchg
daa
xor
rorb
jae
int
dec
xor
pop
outsb
insl
xchg
dec
loope
in
lods
xchg
sahf
movsb
or
mov
dec
insl
push
enter
jno
mov
mov
lock
and
sub
out
clc
mov
jo
jge
sbb
ret
les
sub
subl
dec
outsb
dec
jae
fcomip
lret
rorl
aad
idiv
xchg
and
out
push
inc
test
out
ss
mov
test
call
fcmovnb
ljmp
xor
repz
lret
dec
popf
push
and
js
jg
xchg
lods
push
fdivrl
pop
outsl
fsubr
mov
jb
mov
rorb
jae
push
in
repnz
sti
loop
dec
or
ja
cltd
jle
sahf
das
enter
ja
in
sub
fstl
jmp
or
iret
push
pop
xor
mov
out
lods
sarl
xor
out
mov
stc
fildl
mov
and
sub
adc
or
jo
and
push
and
xchg
std
cmp
cmp
or
jo
sarb
push
es
arpl
cwtl
icebp
fiaddl
mov
xchg
mov
xor
mov
xor
pop
adc
adc
push
cmp
jb
das
sti
adc
loop
inc
sub
ja
std
and
mov
popa
xchg
out
sbb
leave
mov
push
mov
or
repnz
push
rolb
cs
aaa
test
and
lods
adc
xchg
dec
mov
int
das
loope
push
xchg
xchg
add
insb
xchg
test
pop
shlb
in
lcall
aaa
xor
mov
xchg
loope
test
mov
push
adc
jo
in
mov
cmpsl
push
in
mov
or
fs
jns
fistpl
rorl
outsl
mov
jae
leave
push
in
daa
mov
xchg
gs
cwtl
fldl
test
and
pop
dec
ja
xchg
or
not
cmp
xor
sub
in
mov
mov
push
mov
cmp
insl
pop
movsb
hlt
rorl
dec
push
inc
jno
bound
inc
jns
mov
mov
test
cmpsb
jb
iret
pop
jo
dec
stos
push
sub
out
sbb
sarl
loope
cmpsl
cmp
jl
aas
pop
cmp
sub
xlat
fs
out
lcall
mov
push
and
mov
in
fidivl
lahf
into
popf
daa
roll
dec
mov
mov
frstor
cmp
and
imulb
fnsave
sbb
in
mov
mov
insl
in
lahf
sub
jg
pushf
inc
or
xchg
and
outsl
sub
pushfw
push
aas
in
inc
sub
sbb
int3
jbe
outsb
sbb
loope
mov
pusha
lds
lret
add
sti
stos
inc
and
jae
mov
cld
es
adc
sbb
and
dec
xchg
mov
lcall
inc
push
dec
mov
sub
inc
enter
dec
cmpsl
sbb
outsl
jmpw
aas
sub
enter
mov
dec
filds
adc
pop
cmp
push
fsts
cmp
out
adc
pop
sub
xchg
loope
shl
adc
imul
dec
test
lods
sahf
mov
in
cmp
or
gs
scas
shrb
xor
push
test
push
outsl
jmp
adc
outsl
call
add
sub
xchg
xchg
mov
mov
nop
sti
ret
inc
enter
movsl
cmp
xor
mov
mov
jns
mov
cmpsb
cld
adc
pop
int3
mov
ja
xorl
inc
pop
sub
data16
jecxz
stos
dec
adc
inc
add
jp
outsl
or
or
dec
inc
stos
push
dec
and
or
mov
mov
sti
jmp
lock
rorb
mov
jne
inc
or
and
push
call
lcall
jbe
cld
cmp
lds
add
hlt
std
xlat
mov
int
incl
inc
into
adc
decl
xor
cwtl
std
xlat
pop
jg
enter
xlat
lods
fwait
sub
push
call
ss
and
xor
rorb
add
mov
cltd
adc
lea
xchg
jbe
icebp
add
sti
movsb
pop
lods
imul
adc
xchg
ror
mov
ret
int3
adc
mov
push
movsb
sbb
pop
fstps
gs
movntps
in
lret
mov
sti
jnp
cwtl
pop
push
fcoml
ja
push
cmp
xchg
lahf
or
in
pop
adc
adc
inc
xor
cs
mov
and
or
pop
ja
lea
ret
add
testl
test
ficoms
xlat
cmp
aas
fdivrs
xchg
push
adc
es
and
mov
mov
sub
jae
dec
add
loop
sub
push
and
dec
pushf
popa
xor
mov
fstps
mov
fisubrl
movsl
cmpsl
xor
les
leave
dec
mov
iret
or
adc
add
adc
pop
mov
mov
push
inc
mov
int
xchg
push
xchg
xchg
mov
cmpsb
and
xchg
jg
mov
jg
jp
jmp
mov
nop
mov
mov
sub
push
push
mov
sbb
scas
pop
sbb
jmp
mov
and
pop
ret
mov
xchg
ds
or
scas
sbb
mov
sub
aad
add
ret
into
cld
incl
inc
sub
popa
aaa
icebp
jns
out
call
jb
in
sbb
mov
lret
rcrl
sub
and
adc
mov
cwtl
dec
ret
sahf
push
dec
call
xchg
sub
iret
or
inc
mov
ret
add
jl
or
rcrl
jmp
mov
mov
push
call
xlat
popf
out
sub
adc
pushf
fs
mov
outsb
mov
fs
jae
repnz
nop
addr16
xchg
fdivl
mov
cmp
test
or
scas
add
call
outsb
cld
jbe
cmp
jbe
movsb
xor
and
push
faddl
jae
lcall
pop
out
in
imul
adc
jg
jae
bound
push
or
fwait
enter
pop
js
ret
mov
call
out
arpl
pop
inc
lock
rcrb
mov
rorb
push
repnz
out
inc
fisttpl
hlt
push
fistpll
lahf
push
sbb
cmp
add
cmpsl
inc
push
or
mov
dec
fdivrs
xchg
cwtl
loop
add
enter
adc
xchg
ret
in
dec
xchg
mov
aas
fldl
test
leave
cmp
cmp
clc
mov
icebp
cld
lret
cld
int3
push
pop
or
nop
pop
insl
lea
pop
adc
icebp
mov
fsub
ret
arpl
loope
jne
pop
jp
insw
add
std
xor
dec
and
sub
sub
xchg
mulb
outsl
fdivs
dec
aad
or
inc
pop
or
xchg
cmc
xchg
daa
mov
mov
adc
cltd
sub
cli
pop
xchg
lcall
mov
stos
scas
pop
dec
mov
push
shlb
addr16
jl
xor
cmp
or
pop
fldt
fsubs
out
and
ja
loop
mov
ficoms
or
cmc
cwtl
pop
mov
icebp
ss
ds
jo
mov
scas
stos
repz
jae
cwtl
xor
mov
jp
hlt
jbe
jb
stos
push
imul
dec
stos
mov
lods
xchg
add
pop
pop
mov
pop
in
and
inc
cmpl
outsb
xchg
dec
in
fisttps
adc
add
xor
sub
sub
clc
in
aaa
js
xor
ret
jno
jo
add
sbb
pusha
mov
xchg
dec
or
jno
xchg
cs
pusha
mov
je
imul
xor
movsb
sub
int
movsb
cmc
scas
ljmp
mov
stos
dec
adcb
clc
into
aam
dec
xchg
jp
lea
mov
sbb
jp
fcmovu
sti
cltd
xchg
xchg
arpl
std
or
lcall
inc
test
popa
pop
push
into
jo
cmpsb
mov
jp
lahf
pop
test
xor
loope
mov
sub
adc
rcr
xchg
out
mov
cmp
loopne
push
add
jae
hlt
repz
cmp
push
pop
adc
jle
mov
jae
bound
in
xlat
jp
xor
and
adcl
es
cli
out
lret
mov
jo
mov
sub
jmp
add
insl
pop
push
pop
xchg
add
cmp
outsb
and
mov
pop
mov
add
ss
cmp
arpl
out
sub
mov
cmp
rcrb
in
xor
ss
xor
jnp
imul
cld
xor
xlat
and
mov
pop
xor
jp
add
scas
or
xor
push
lea
div
sahf
sbb
leave
sub
push
stos
and
push
out
inc
push
fwait
mov
rcrb
std
sbb
or
or
mov
cmp
adc
in
sbb
movsl
fildl
scas
int
movb
and
add
and
test
repz
mov
inc
sub
mov
movsb
cli
aam
add
loope
cmc
rclb
in
jle
mov
shll
mov
pop
loope
xchg
stos
aaa
mov
stos
or
shlb
cld
cwtl
pop
rcrl
pop
pop
pop
int
cmc
cmp
pushf
jo
mov
add
lea
mov
ret
arpl
sub
mov
fs
jmp
and
jne
arpl
gs
push
ljmp
xor
cmp
mov
inc
dec
mov
cmp
and
pop
mov
inc
test
iret
enter
mov
lcall
cmovg
sub
movb
stos
push
ds
inc
sub
test
stc
and
addl
push
mov
stos
mov
xor
clc
out
and
leave
pop
xor
fcoml
xchg
fcompl
int3
lret
cmp
pop
jecxz
sub
dec
pop
fsubrs
xchg
fdiv
lahf
in
xlat
or
fldt
xchg
and
xchg
stos
push
mov
sarb
sub
cmp
sbb
rorl
in
pushfw
shlb
cmc
mov
in
out
push
ds
mov
inc
lret
inc
and
push
mov
push
sub
repz
sub
xor
mov
in
data16
aad
inc
incb
add
xor
and
fs
lahf
pop
xchg
jge
jge
mov
jbe
popa
ret
roll
sbbl
jle
xchg
xchg
push
not
lds
dec
pop
add
psubsb
ror
out
and
pop
test
cmp
stos
sub
adc
mov
ds
std
fisubs
fildl
shr
dec
cld
lods
nop
mov
gs
rorb
clc
sbb
push
loop
sarl
xlat
xchg
shrb
ficompl
into
push
jle
mov
adc
scas
mov
sub
ret
out
cmp
add
clc
xchg
xor
cmp
dec
jecxz
into
sbb
lock
sti
or
push
sti
enter
inc
and
imul
add
scas
pop
lret
test
repnz
push
push
jp
cltd
sub
jmp
lock
cs
cltd
lcall
cs
js
jb
jl
in
and
jnp
movsl
imul
and
ss
lods
jns
sub
loopne
sar
inc
jo
or
pop
movsl
loope
add
and
cmp
pop
lea
or
roll
movsl
in
or
clc
dec
jmp
mov
mov
pop
scas
aad
mov
pushf
and
decl
movsl
ret
xchg
stc
fptan
outsb
mov
push
bound
jp
pop
flds
aad
jns
sti
rol
cmc
out
mov
push
sub
les
scas
addr16
inc
repz
lcall
js
add
mov
lret
mov
adc
inc
or
das
in
sub
push
mov
jb
loop
cld
shlb
jns
arpl
inc
jmp
pop
xlat
out
test
std
dec
pop
add
pusha
insl
repz
add
test
push
fcomps
cmpsb
mov
std
jns
shrb
and
inc
arpl
test
xchg
in
xchg
inc
cs
mov
jle
fwait
rorl
jae
jnp
mov
xor
pop
dec
mov
leave
stos
mov
push
ja
push
ds
cmpl
dec
aaa
push
mov
or
xchg
fimuls
and
mov
jns
incl
xor
subl
jmp
push
mov
mov
or
or
js
push
stc
cmp
loopne
iret
andb
fisubrs
dec
mov
inc
lret
orl
lret
jbe
ret
lret
dec
pusha
mov
leave
mov
dec
in
push
and
outsl
sarb
inc
xor
into
adc
mov
xlat
lcall
sbb
mov
aam
mov
mov
and
test
movsl
pushf
ljmp
pop
or
mov
jmp
push
stos
jbe
addr16
sbb
sbb
jnp
in
cs
sbb
sarl
pop
es
adc
filds
hlt
mov
decl
flds
fs
xor
sub
ljmp
mov
push
mov
test
shlb
sub
sarb
lret
scas
fwait
jg
pop
cmp
sub
insb
repz
fisubs
xchg
inc
fcmovnb
pop
fxch
mov
sbb
push
pop
dec
out
add
and
jmp
out
inc
aam
cmp
popf
xchg
in
xchg
ljmp
sub
aas
xchg
inc
sub
or
jg
or
xor
loope
or
push
cmp
shll
jbe
push
in
pop
mov
fdivs
sti
xchg
jge
gs
mov
mov
and
mov
mov
adc
out
jg
movb
inc
pusha
fldt
insl
bound
outsl
jns
stos
jo
jo
arpl
repz
mov
cltd
repz
aam
inc
sub
dec
sub
fsts
ljmp
inc
add
sub
mov
xor
fwait
ret
xchg
mov
stos
iret
or
push
cs
xchg
es
fstpt
mov
dec
fucomi
out
mov
fucomip
cld
ds
jbe
dec
dec
stc
loopne
jno
push
mov
sub
mov
cld
fistl
scas
sahf
jge
in
sbb
jae
call
stos
xchg
xor
mov
inc
adc
pusha
stos
mov
cmpsb
rorb
insb
push
push
xor
jnp
fcomp
mov
pop
or
sbb
sahf
mov
iret
jl
sbb
inc
das
notl
sti
rclb
jmp
cmpsb
cli
mov
insb
pop
cmp
pop
out
xlat
dec
jmp
in
mov
lock
sub
mov
pushf
ss
cmp
hlt
mov
cmp
sbb
in
repnz
js
xorb
mov
mov
int
dec
xchg
mov
push
ja
pop
inc
cmpsl
dec
xchg
mov
in
inc
or
push
popa
andb
xor
stc
iret
pop
xchg
mov
sbb
mov
shr
pop
dec
mov
mov
ja
daa
and
cmp
std
rcrb
repz
mov
and
lcall
es
test
out
inc
scas
cld
push
cmp
leave
aam
mov
fmull
xlat
sbb
and
in
nop
adc
js
aam
inc
xor
mov
out
test
mov
cmp
or
mov
mov
shl
in
sbb
sahf
sti
testl
dec
and
shrl
xchg
in
lods
mov
sbb
int3
les
cmpsb
or
popf
lcall
insl
test
cmp
lds
xchg
cli
sbb
mov
mov
mov
mov
sub
push
loope
add
mov
aaa
jns
mov
sbb
inc
mov
insl
add
lods
xchg
and
mov
and
test
push
mov
test
rcl
xchg
mov
mov
pop
add
sub
jbe
lods
mov
je
inc
sbb
out
xchg
test
mul
cwtl
xor
adc
mov
adc
jno
mov
adc
lcall
das
fidivs
jnp
cmc
loopne
xchg
out
mov
jnp
sub
mov
jecxz
ret
test
sub
dec
sub
cmp
mov
push
mov
pop
mov
es
hlt
dec
mov
pop
into
inc
out
rcll
pushw
jne
call
jmp
faddl
pop
les
ja
mov
out
rolb
jbe
jp
dec
mov
clc
xchg
or
aam
cs
insl
sbb
fcoml
mov
or
jge
add
adc
xor
lods
pop
mov
sub
xchg
xchg
sti
xchg
sbb
pop
repz
sub
xchg
sbb
inc
dec
shlb
or
cmc
out
scas
push
add
push
dec
sub
push
and
jnp
xchg
into
movsb
sahf
sub
push
pop
jg
sbb
lods
aaa
nop
dec
mov
cltd
adc
scas
stc
hlt
jbe
loope
ret
stos
cmc
adc
int
and
into
mov
jl
aad
xlat
inc
jecxz
cwtl
arpl
ds
sbb
inc
outsl
fisttpl
mov
insb
ss
cld
ds
mov
jg
pop
mov
in
bound
xchg
jb
repnz
adc
mov
add
into
cmp
out
dec
pop
jmp
xchg
cmpb
inc
mov
in
orb
shrl
mov
jecxz
inc
outsl
call
xchg
pop
sbb
insb
addr16
daa
cmp
ljmp
xor
ds
inc
or
shl
jnp
jne
aaa
sbb
and
and
cmp
xchg
test
jge
pop
ja
jb
imul
sbb
push
popa
outsb
aas
mov
sub
inc
mov
fwait
cmp
pop
js
popa
bswap
xchg
jg
dec
mov
sbb
pop
dec
jae
jae
pop
das
mov
push
data16
popf
xchg
xchg
popa
movsb
lock
aas
ja
sbb
xchg
xor
jge
cmp
aas
and
shlb
fidivrs
aam
sahf
xor
imul
xchg
add
dec
adc
pop
popa
cmpsl
or
or
lods
jmp
cmp
mov
sahf
popa
xor
mov
xor
test
mov
pop
mov
je
xchg
and
adc
mov
arpl
outsb
mov
sub
lods
repz
cmp
pushf
mov
mov
mov
mov
push
in
jge
mov
int
call
scas
inc
or
or
ds
add
push
mov
pusha
mov
jbe
outsl
xchg
mov
test
and
sbb
jl
and
jbe
add
leave
gs
out
outsl
xchg
xchg
cs
cmp
cmpsb
push
call
mov
add
test
mov
xchg
pusha
or
xchg
js
push
dec
push
loope
movsb
jge
andl
mov
mov
andb
out
enter
lret
adc
cmp
loopew
pop
repz
mov
ss
inc
add
cmp
pop
int
jbe
in
jnp
jp
into
xchg
inc
fimull
cmp
aas
mov
fistpll
sub
fcom
lcall
sbb
mov
mov
jns
jmp
pop
cmpsb
adc
push
fstps
mov
mov
jno
test
mov
sti
dec
fmulp
adc
rclb
xor
aam
push
mov
mov
fistpl
loope
push
mov
testl
cmp
inc
das
stos
dec
mov
inc
mov
mov
mov
xchg
data16
xchg
es
adc
xchg
iret
nop
insb
push
icebp
add
mov
lahf
ret
fsubs
dec
clc
add
mov
jge
push
lods
mov
mov
rcrl
xchg
or
leave
mov
pop
jl
int3
nop
outsl
jae
mov
jg
bound
inc
inc
test
lods
stos
xchg
dec
mov
int
mov
pop
cmp
aad
sub
insb
xchg
pop
scas
xchg
icebp
cmp
or
in
sub
push
pop
iret
pop
pop
xchg
mov
pop
mov
imul
aam
cmp
adc
fisubl
jo
ss
mov
push
dec
cmp
fmuls
cmp
mov
cld
mov
fwait
mov
call
inc
loope
and
dec
dec
fistl
pushf
xchg
insb
fwait
stos
hlt
jbe
icebp
pop
daa
sbb
or
fsts
adc
pusha
out
enter
add
jbe
stos
mov
in
push
roll
jb
mov
push
dec
xor
mov
mov
popa
scas
xchg
jo
stos
lsl
sbb
sarl
add
repnz
xor
movsb
cwtl
and
push
daa
ds
daa
mov
push
into
pop
aad
movsl
ss
insb
fcmovb
int
jno
mov
mov
cmp
xchg
jg
jo
dec
push
xchg
mov
inc
jbe
lret
imul
cld
insb
shrb
leave
sbb
aam
leave
pop
popa
repz
cwtl
pusha
shrl
jmp
shrl
or
sarb
adc
mov
sub
fsubs
outsl
dec
jae
in
lret
insl
or
rsm
iret
out
cltd
inc
mov
hlt
cmpsb
ss
fcmove
or
xor
adc
jle
stos
xlat
mov
jp
mov
jmp
pusha
sarb
mov
xchg
xor
pop
jae
mov
or
dec
idivl
jl
pop
ljmp
and
mov
xchg
add
fs
popa
ss
test
out
sbb
pushl
add
pop
sub
inc
adc
cmp
mov
pop
adc
adc
mov
rcrb
pop
ljmp
push
in
fcomip
inc
ret
lods
mov
dec
aam
jbe
xchg
jge
mov
jecxz
lods
in
xor
dec
repnz
dec
xor
ljmp
nop
cmp
xor
mov
cld
in
xchg
in
stos
pop
cmp
push
xchg
xchg
cmpl
addl
insb
xor
pop
mov
mov
pushf
imul
bound
inc
stos
jle
ja
in
repnz
xchg
iret
or
cli
xchg
sub
fadds
fisubs
mov
aam
adc
dec
jmp
jnp
lcall
mov
cltd
out
push
hlt
mov
inc
sub
popf
out
cmpsl
into
push
xlat
aaa
inc
loop
int3
push
jo
mov
movsl
mov
ficoms
jnp
xchg
addr16
imul
xchg
jns
mov
pop
cmp
add
xchg
arpl
adc
nop
lock
stc
inc
sub
sbb
dec
xlat
jne
repz
xchg
arpl
aaa
inc
mov
je
mov
push
cmp
sub
cmpsb
mov
ja
nop
cmpsb
and
jae
xlat
adc
outsb
inc
loopne
js
sub
sub
inc
notb
je
cmp
sbb
cmp
sub
xor
and
xor
inc
xchg
sbb
repnz
jnp,pt
and
loope
sub
addr16
jp
enter
mov
adc
sbb
dec
inc
xchg
test
xchg
pop
inc
jne
ljmp
pop
icebp
loope
pop
idivb
stc
cmp
adc
icebp
fdivr
pop
inc
arpl
xchg
das
loop
lcall
jg
stc
pop
sarl
pop
ret
and
sub
pop
popa
pop
push
sbbl
fcmovne
fsubrl
repnz
or
pop
add
xor
xchg
inc
inc
add
icebp
xor
sub
lock
aaa
stos
leave
cld
push
lahf
arpl
adc
mov
dec
sbb
xchg
jo
dec
xor
mov
stos
cmp
daa
pop
jo
nop
inc
inc
mov
hlt
or
push
cmp
call
jae
in
cltd
ja
popf
cmp
aam
inc
sbb
push
sub
out
adc
js
mov
mov
ja
lret
push
jns
callw
arpl
in
les
arpl
add
pusha
ret
aas
pop
imul
mov
jo
pop
xchg
into
push
ficoms
testl
push
scas
lea
pop
clc
sub
mov
and
pop
mov
stos
dec
mov
ja
scas
jmp
xchg
mov
jnp
pop
es
movsb
mov
push
push
jne
inc
out
mov
mov
pop
test
add
inc
jle
inc
mov
jl
mov
mov
sahf
mov
pop
push
fistps
test
aaa
cmc
sub
das
vmwrite
imul
movsl
pushf
je
xchg
das
sbb
mov
fcomip
loopne
mov
sub
add
sub
js
call
jge
mov
fisubrs
inc
jmp
dec
pop
or
xor
dec
pop
lret
and
cmp
mov
aad
dec
mov
call
and
into
dec
pop
int
dec
lds
bound
mov
mov
sti
out
les
clc
std
ds
mov
fisttpll
jb
or
add
outsl
mov
cwtl
or
push
mov
insl
insl
dec
jmp
es
lods
lds
pop
xor
xor
push
mov
cld
sbb
loope
sub
jno
cmp
push
arpl
and
xor
inc
nop
mov
jns
std
inc
loopne
xchg
xor
insl
int
push
or
sarl
pop
mov
push
inc
int3
test
out
dec
mov
aad
or
in
push
cmp
sbb
adc
jp
aam
call
xchg
inc
daa
xor
int3
push
push
das
test
sbb
pop
sub
ss
leave
and
cmp
ss
adc
or
mov
mov
inc
scas
lods
inc
ljmp
push
and
fxch
cmp
adc
lods
dec
and
lods
cmp
leave
je
andl
mov
ljmp
and
lret
and
mov
add
sar
push
cmc
cwtl
std
fdivrs
cmp
lcall
adc
inc
inc
pop
les
jne
stc
adc
jecxz
push
mov
sbb
mov
sbb
loopnew
cmp
clc
push
incl
jae
scas
xlat
scas
test
fwait
adc
jle,pn
int
inc
add
mov
ss
adc
jne
mov
cmc
mov
xor
push
js
pop
orl
lcall
add
mov
or
ret
movsb
jecxz
aad
lods
call
test
mov
imulb
repnz
in
pop
std
shrl
cmpsb
jg
or
call
cmpsl
jo
jp
jnp
enter
in
sub
push
shl
sub
out
push
aam
dec
int
mov
shll
sub
aad
inc
xchg
jmp
xlat
loop
rcrb
cs
xor
jle
loop
pop
aad
inc
mov
push
pushf
fidivrl
add
out
loope
xchg
aam
shll
repz
mov
pop
stc
test
pop
movsl
faddl
subl
loop
pop
xor
ss
add
icebp
mov
clc
dec
inc
adc
jne
mov
cmp
es
push
jl
gs
dec
rcl
cmpsb
dec
pusha
into
mov
movsl
mov
lods
orb
int3
enter
jmp
sub
rcll
push
and
adc
mov
mov
ja
xchg
xchg
push
arpl
pop
add
js
cmp
clc
cli
in
lds
fnstenv
in
dec
pop
push
mov
jecxz
cmpsl
mov
shr
sbb
and
jne
adc
jg
fdivl
pop
iret
data16
lock
cmc
jle
in
mov
pop
add
addr16
and
dec
mov
or
xor
xchg
std
addl
adc
jmp
or
add
data16
jle
xchg
pop
jle
mov
xlat
stos
stos
nop
fisubl
mov
mov
push
xchg
inc
push
cmc
mov
cmpb
in
push
jns
rcll
xchg
dec
jo
out
gs
std
sub
sbb
push
shlb
aas
pusha
mov
jp
sbb
xchg
cmp
or
push
iret
jae
dec
adc
cmc
add
pop
inc
lods
out
rolb
mov
xor
aas
cmp
pop
je
in
adc
mov
lahf
pop
cmp
shll
mov
loope
repz
mov
xchg
and
inc
gs
xchg
fidivs
mov
mov
dec
into
ss
arpl
or
sub
jae
rolb
adc
scas
cwtl
inc
std
mov
push
es
push
jae
outsb
or
jmp
loop
pop
loope
outsl
mov
in
adc
mov
sub
mov
pushf
fidivs
idivl
cmp
lea
lret
les
xchg
push
hlt
or
or
sbb
pop
mov
bound
ja
pop
or
inc
mov
xchg
jl
fwait
dec
inc
or
subb
lods
push
inc
jae
lret
shlb
dec
sbb
out
test
adc
dec
stc
adc
and
sarl
pop
fucomi
test
xchg
push
cmp
and
mov
xor
mov
sbb
fs
scas
or
cmp
pop
inc
pop
and
test
shl
pushf
out
adc
dec
lret
popf
add
repnz
or
inc
xlat
sub
cwtl
mov
adc
ja
dec
pop
fisubl
push
adc
lahf
push
leave
loope
jae
sub
mov
out
push
fnstenv
mov
hlt
cmpsl
loope
jo
push
decl
xchg
lcall
rorb
mov
imul
push
test
faddl
xlat
mov
mov
push
push
test
jns
xchg
pop
add
iret
pop
pop
pop
std
jnp
jge
xor
ds
jne
and
pop
sarl
sahf
addr16
xchg
fbld
movsl
roll
cmp
sub
jp
sbb
sbb
fcmovb
std
xor
test
call
mov
lret
xchg
mov
sti
aad
mov
daa
cmpsl
add
aam
adcl
and
sub
push
and
icebp
lock
repz
aaa
sti
lds
das
inc
and
roll
inc
test
mov
scas
arpl
jb
adc
dec
fsubrp
das
sub
outsl
jl
xor
or
cltd
out
sbbb
cmp
ljmp
aas
push
mov
movsb
push
ja
fwait
bound
xchg
sahf
mov
cmp
filds
out
jbe
sub
add
popa
jne
mov
mov
sbb
dec
std
das
mov
add
jo
cltd
and
ficompl
insl
xor
dec
es
inc
dec
pop
movsl
daa
push
movsl
xchg
jl
inc
test
inc
add
fidivs
pop
inc
mov
inc
mov
sub
cmp
or
and
int
pusha
or
dec
movsl
cltd
sbbl
ljmp
fs
outsb
push
xchg
add
ds
fwait
and
aad
xchg
jne
rolb
ja
outsl
in
add
xor
loopne
lods
adc
xchg
dec
mov
dec
call
fs
and
cld
inc
push
in
and
sub
xchg
ret
push
mov
push
jmp
mov
js
cmpsb
push
aas
ja
lcall
arpl
or
xchg
cmp
lcall
mov
insb
outsb
ljmp
mov
enter
aaa
hlt
push
and
jns
outsb
mov
test
test
out
inc
dec
mov
rol
xor
lcall
inc
sarl
sbb
push
mov
subb
xor
sub
and
or
sub
cmp
dec
ljmp
icebp
and
pop
and
insb
into
aam
cmp
xchg
pop
xchg
aas
jno
sub
add
imul
add
adc
scas
ss
sub
mov
bound
or
iret
xchg
dec
stos
xchg
pop
sub
jnp
int3
push
inc
or
sub
fdivrs
out
ja
lret
inc
call
xchg
jbe
out
xorl
mov
dec
adc
pop
jecxz
mov
cmpsl
add
scas
scas
add
fists
cmp
jbe
pop
pop
inc
rorb
mov
enter
ret
inc
or
outsb
out
fldcw
dec
add
jne
push
sub
loopne
popf
movsl
inc
sub
lahf
fwait
stc
inc
and
inc
xchg
add
jle
and
adc
push
je
jl
jmp
imul
jne
mov
xor
dec
dec
jns
out
push
pop
mov
xor
dec
cwtl
orb
push
ds
daa
insl
scas
inc
mov
mov
pop
stos
movsb
sub
cmp
xchg
dec
out
cmc
adc
fisubs
out
push
xor
imul
sub
imul
lea
and
lahf
sahf
lock
lret
mov
cld
lock
rcll
push
jne
dec
xor
loop
daa
lahf
lahf
mov
adcb
push
aad
sub
ljmp
cmp
cmp
lds
push
je
pop
mov
lcall
rcrb
xlat
aam
mov
fisubs
xchg
mov
or
incl
mov
fdivs
jae
insb
inc
pop
add
std
pop
sahf
lahf
stc
or
mov
xchg
call
push
sub
gs
int3
ss
jl
dec
push
aaa
fs
mov
xor
bound
je
and
mov
mov
fcmovb
arpl
lahf
imul
mov
push
push
mov
ja
mov
or
cltd
rcr
sub
adc
xchg
adcl
jns
jnp
fwait
ljmp
dec
cld
in
notl
imul
jl
add
mov
push
loopne
mov
cwtl
sub
pop
repz
in
in
daa
mov
cltd
push
lock
sbb
push
mov
fiaddl
int
mov
inc
xchg
push
cmp
cmc
scas
add
cmp
cmpsl
or
mov
mov
and
cwtl
aaa
dec
xchg
test
add
cmp
aaa
sub
add
dec
jmp
ljmp
push
outsb
sbb
andl
imul
xchg
xchg
push
loope
push
mov
and
out
jb
mov
outsb
push
pusha
popa
jne
pop
shll
pop
ljmp
push
lock
xor
addr16
xchg
sub
je
jnp
ss
mov
sarl
mov
scas
inc
mov
leave
dec
sbb
xchg
xor
fisubs
pop
jecxz
mov
cs
out
mov
sub
fidivrs
xchg
jecxz
inc
dec
push
cwtl
or
jbe
js
pop
adc
pop
into
cmpsl
repz
mov
imul
cltd
leave
daa
mov
aaa
inc
leave
mov
imul
shll
aaa
xorl
mov
scas
movsl
subl
and
dec
insw
push
ss
lret
mov
push
push
mov
inc
lcall
enter
mov
in
aad
lds
fisttps
fdivl
mov
rorb
fadds
dec
inc
loope
les
movsl
gs
or
xor
add
xchg
or
jb
jmp
inc
mov
fldcw
xlat
add
pop
lahf
dec
push
add
or
add
mov
and
jns
push
fs
incb
lret
rcr
add
sub
push
inc
dec
fwait
cwtl
add
sbb
repnz
popl
testl
insb
rcrl
sbb
adc
sub
mov
inc
cmc
cmp
mov
and
call
pop
and
inc
insb
mov
mov
jns
pop
in
xor
mov
mov
xchg
setne
test
cld
inc
mov
add
sbb
inc
mov
in
mov
pop
mov
push
test
xchg
andl
adc
filds
mov
or
jne
loopne
iret
xor
pop
imul
fdivp
mov
and
dec
adc
pop
lods
aad
aam
pusha
je
pusha
ljmp
flds
mov
ffree
adc
mov
pop
pop
dec
adc
shlb
lea
inc
mov
mov
aad
or
mov
xchg
xor
int
xchg
mov
mov
shll
hlt
lea
imul
lock
rcl
cmp
dec
mov
and
int3
jb
daa
cmp
pop
mov
loopne
test
xchg
repnz
dec
jo
cmpsl
pop
lahf
mov
xor
mov
mov
iret
daa
jne
imul
fcomps
pop
add
popa
std
mov
jno
push
fldt
inc
and
lret
mov
dec
shrb
and
pop
scas
push
sbb
repnz
jnp
sbb
cmc
daa
shll
dec
push
lods
add
je
mov
js
cmp
dec
out
std
test
mov
das
cmp
cmpsl
mov
dec
cmp
loop
mov
dec
repnz
iret
xor
jle
out
mov
push
decb
xchg
jne
daa
pop
mov
out
outsl
xlat
clc
or
in
lahf
mov
mov
adc
sub
xor
or
mov
and
fsts
lcall
pusha
sub
pop
mov
add
fsubl
xor
sbb
mov
xchg
cmpsl
rolb
aad
jnp
fwait
aam
adc
daa
jmp
imul
jno
ljmp
xchg
mov
cmp
mov
jge
inc
sub
sub
cwtl
pop
rorb
add
xchg
cwtl
pop
mov
sbb
fadd
inc
adc
dec
out
cli
frndint
add
inc
xchg
and
adc
push
cmp
loopne
push
in
cmp
out
adc
lock
mov
sub
pop
in
popf
clc
mov
pusha
dec
sbb
cli
mov
out
push
jnp
stos
loop
outsl
add
hlt
push
negl
jmp
jmp
cli
int3
js
xor
in
in
daa
sub
mov
push
mov
dec
jecxz
ja
jnp
dec
mov
adc
in
or
mov
pop
addr16
adc
adc
icebp
mov
ret
xorb
shll
cmp
and
outsl
out
dec
xchg
mov
or
mov
andl
inc
dec
and
pop
push
adc
scas
cmp
mov
cmp
fcmovbe
js
jbe
mov
enter
inc
in
cmp
ljmp
jae
lea
jecxz
and
jl
pop
mov
in
testb
mov
popa
adcb
popf
cmp
ret
jo
int3
cltd
adc
js
sbb
mov
cmovge
mov
repnz
pushf
and
jno
out
dec
xor
outsb
cld
movsl
nop
or
xchg
cs
test
shr
divb
pop
mov
aas
shl
pop
cmc
or
roll
stos
js
xor
jmp
cwtl
push
or
aad
pop
movsb
add
push
xchg
pop
fsub
adc
shll
dec
jle
push
hlt
scas
pop
xor
ja
lret
in
fnstenv
pop
sbb
scas
mov
dec
into
dec
adc
pop
fmull
shl
mov
inc
aad
rcrl
test
mov
out
dec
push
ret
add
cmp
inc
jne
sub
iret
jne
repz
call
outsl
sbb
xchg
and
xchg
add
hlt
add
jg
sbb
loopne
pop
sahf
mov
inc
xor
lds
mov
cmc
lods
mov
fstp
out
inc
add
int3
mov
sub
jl
push
cmpsb
adc
fnsave
push
ss
cld
repnz
outsb
sub
xchg
jmp
mov
jmp
push
mov
mov
imul
bound
iret
add
xchg
xor
pop
repz
cmc
imul
jae
mov
sub
cmp
movsb
pop
fisubrl
jo
daa
popf
jmp
mov
adc
mov
mov
mov
inc
ss
sbb
mov
and
xorl
das
in
and
pop
sahf
das
scas
push
dec
jno
test
aad
xor
inc
vpcomub
loop
or
cltd
cmp
sbb
call
ret
pop
out
and
inc
popf
and
and
aas
clc
test
insl
repz
xchg
xchg
add
insl
add
dec
lcall
push
subl
inc
lea
sub
sub
push
in
xor
cltd
lea
scas
les
out
add
xchg
or
push
adc
test
and
inc
jbe
pusha
inc
call
icebp
jbe
cld
cmp
out
and
add
adc
mov
adc
fwait
mov
aam
repz
push
jecxz
xchg
cmp
mov
cmp
sbb
adc
jne
sbb
int
lahf
mov
arpl
jecxz
js
jl
imul
aad
fisttpl
ret
pop
repnz
faddl
mov
jle
sbb
pushf
sub
test
sub
popf
cmp
stos
repz
loope
push
inc
in
sbbb
xor
mov
test
les
pop
stos
dec
lcall
or
in
mov
cmp
cmpsb
lds
in
xchg
pop
xor
cld
mov
sahf
mov
outsl
jo
ror
fstpl
test
mov
mov
test
xchg
ds
js
adc
push
std
add
lcall
cmp
or
ret
xor
jne
dec
xchg
movhps
je
cld
mov
or
xchg
gs
cmp
mov
fisubrs
add
add
adc
arpl
aad
or
daa
test
dec
pusha
dec
mov
add
mov
xor
cli
xor
mov
jae
sub
rcl
fwait
icebp
adc
pop
xor
push
popa
mov
xchg
movsl
mov
cmp
mov
bound
or
lahf
xchg
dec
test
test
mov
adc
cmp
pop
shlb
cmc
dec
repz
adc
xchg
pusha
test
adc
movsl
mov
insb
xor
jmp
pop
mov
sub
ljmp
rcll
imul
pop
mov
push
outsl
sbb
in
jne
xor
lods
xchg
mov
sbb
inc
fists
xchg
mov
sbb
jno
ds
out
jae
xchg
jno
shlb
adc
iret
repnz
adc
dec
mov
ror
and
stos
sarb
dec
loopne
jns
dec
stc
cmp
pusha
mov
sti
es
out
cmp
sti
cltd
xor
sub
mov
jbe
stos
std
pop
mov
out
sbb
and
in
popa
or
sub
mov
jne
jle
add
imul
clc
repz
mov
push
icebp
pop
sub
add
outsb
iret
or
or
cmp
and
out
fucomp
mov
ret
pop
iret
pop
inc
or
aam
or
inc
add
out
mov
mov
pushf
ljmp
js
in
mov
xchg
jp
jecxz
add
xor
mov
lds
mov
outsb
in
or
jb
pop
test
jb
in
xor
mov
add
mov
lcall
ljmp
lds
mov
mov
jecxz
or
adc
mov
inc
lods
jb
adc
ficoms
inc
lcall
lods
push
mov
in
in
lahf
je
movsl
in
stos
mov
stc
mov
loopne
flds
decb
inc
adc
xchg
rorb
push
test
or
hlt
addr16
and
xor
mov
ja
mov
push
test
mov
enter
popf
fwait
inc
lods
xor
xor
fcomps
adc
int
clc
mov
jo
std
fsubrs
outsl
pop
popa
mov
mov
in
iret
or
jp
sbb
mov
and
sbb
jb
dec
addr16
jnp
and
mov
jbe
cmp
sbb
xchg
lods
in
adc
lds
push
or
adc
mov
repnz
leave
aam
push
and
jns
dec
mov
cwtl
dec
xchg
push
mov
mov
mov
mov
sub
inc
pop
lock
mov
call
add
mov
pusha
push
frstor
jmp
xchg
ret
dec
iret
mov
shll
lods
mov
bound
movsb
gs
loop
cmp
mov
pop
add
lods
mov
jnp
ret
mov
add
subb
push
imul
dec
stc
pop
iret
out
loope
ret
cli
dec
js
outsb
jns
ret
popa
mov
inc
mov
mov
adc
xchg
pushf
or
lea
int3
test
sbb
lahf
adc
push
ret
jmp
outsb
cmp
sub
inc
test
das
ja
rclb
sub
scas
xchg
inc
stos
push
xchg
int
pop
mov
rolb
inc
pop
iret
xchg
call
repnz
add
jmp
push
xor
sub
xchg
lahf
mov
das
movsl
repnz
pop
js
push
stos
rolb
jge
cmp
outsb
push
jmp
push
add
out
and
xchg
orl
pop
sub
or
out
lods
dec
in
add
andl
insl
xor
shrb
inc
cs
jno
mov
mov
add
xor
push
rolb
sahf
sti
mov
or
adc
and
nop
and
stos
inc
mov
lods
mov
mov
shlb
jge
or
mov
out
xlat
and
or
nop
pop
in
shlb
mov
mov
xchg
loope
popa
shll
outsb
addr16
cwtl
xor
mov
ds
sti
in
mov
push
mov
or
mov
icebp
add
cmpsb
cmp
dec
lds
aad
xor
nop
sub
scas
lcall
ds
ficompl
outsl
hlt
add
jl
sar
test
bound
sbb
aas
fidivrs
jle
add
mov
mov
cld
rcll
adc
adc
imul
insl
sti
cmp
cmp
xor
mov
ds
xor
mov
loopne
inc
mov
xchg
xor
dec
std
icebp
pop
ljmp
mov
imulb
jle
cmpb
push
loope
cld
xor
pop
orb
sbb
repnz
je
pop
adc
inc
jge
clc
addr16
loope
push
adc
jp
dec
xor
orl
clc
lcall
nop
lcall
divl
jb
enter
pop
repnz
lods
sub
cmp
mov
cmp
cltd
test
rclb
pop
or
xlat
call
out
mov
mov
addb
sbb
mov
and
popf
test
stos
in
pop
insb
dec
cmpsl
mov
adc
fistps
ljmp
jb
testl
es
and
jns
lret
fucomp
or
nop
notb
scas
mov
xchg
iret
add
loopne
sub
dec
dec
inc
fxch
repz
fstl
clc
movsl
mov
popf
xorb
push
mov
incb
dec
cmpsl
mov
inc
insl
ljmp
jbe
mov
aam
in
push
or
xor
mov
hlt
insl
mov
push
out
lods
inc
rcr
call
adc
or
mov
enter
sub
mov
jo
sub
jnp
mov
std
in
insl
mov
hlt
test
ret
inc
dec
and
or
je
push
popa
pop
pop
sub
lock
jno
orb
xor
or
fidivrs
out
cmc
push
xchg
sub
jae
icebp
test
cmp
xlat
into
jbe
mov
add
std
jo
or
fildll
ret
dec
cmpb
popf
cmp
mov
arpl
adc
daa
cwtl
or
daa
lods
mov
ficoml
and
popa
pushf
pop
cmp
aam
stc
pusha
je
add
insl
pop
jge
lret
or
dec
iret
mov
pop
push
fld
ret
cmp
sahf
xor
cmpl
test
mov
pop
fdivl
fnstcw
insb
jo
addb
xor
shl
popf
mov
cmpsb
dec
dec
xchg
and
imul
mov
xor
jl
mov
mov
lret
and
dec
push
ljmp
adc
mov
sub
jne
xchg
sub
sub
out
js
aad
adc
lods
inc
frstor
jmp
fsubrl
lret
movsb
add
pop
mov
insl
test
xchg
cs
fbld
sbb
adc
std
xor
dec
cld
pop
jp
add
sbb
aad
lret
pop
shrl
stc
std
hlt
test
rcrl
mov
repnz
mov
or
jnp
iret
jnp
hlt
lods
sub
add
scas
mov
es
ja
enter
sahf
cs
xor
gs
lret
mov
out
les
inc
aas
test
ss
out
lock
add
lret
je
xorl
enter
xor
aas
ss
jge
mov
push
jae
jmp
lret
enter
fsts
jno
leave
and
xor
es
xchg
imul
add
mov
test
ss
adc
sahf
movsb
fsin
inc
sarb
bnd
daa
adc
push
fs
test
cmp
push
pusha
xor
xchg
pop
out
stc
fsubp
jno
call
pop
pop
or
ret
lea
sti
pushf
cmp
mov
outsl
mov
lcall
inc
mov
mull
aas
push
and
out
xor
dec
stc
add
fs
lcall
pop
stos
cli
xchg
cmp
es
pop
lret
shr
shlb
imul
ljmp
clc
inc
int
andb
lock
cmp
insb
outsl
pop
or
xor
lret
add
cmpsb
jno
repnz
ret
mov
hlt
icebp
mov
out
stos
iretw
sub
out
add
xchg
mov
sub
in
push
iret
inc
jo
mov
xor
out
jmp
in
inc
stc
shrl
lods
aaa
jne
cli
ret
mov
ljmp
push
fs
mov
cmc
rorb
and
leave
movsb
arpl
lock
xlat
sbb
rolb
or
and
cld
aam
pushf
outsb
fadds
mov
sbb
adc
pop
cmp
mov
mov
sahf
xor
imul
lods
test
mov
adc
push
aas
ss
sub
les
test
adc
lret
inc
mov
insb
push
jle
fmuls
mov
xlat
mov
icebp
daa
fisttpll
in
or
cmp
and
mov
ror
ja
or
add
or
outsb
jo
gs
outsl
std
in
sbb
ja
mov
pop
inc
jmp
fs
and
cli
pop
cwtl
mov
mov
adcb
jecxz
movsb
es
ja
push
push
cwtl
in
or
dec
cmpsb
push
jbe
in
in
inc
aam
mov
mov
adc
sbb
pop
xchg
lock
sar
xchg
ficoms
shll
adc
es
sti
push
push
subb
push
xor
add
push
dec
jbe
pop
xchg
sbb
dec
shl
lret
cmpsb
or
fldcw
push
std
das
stos
xor
popa
mov
cmc
jb
dec
bound
xchg
push
xor
mov
cs
xchg
std
cmp
aas
jle
je
xchg
mov
pop
mov
in
jl
add
cmpsb
ja
pop
lods
jle
add
mov
adc
aad
xchg
hlt
push
out
lods
icebp
arpl
roll
mov
fwait
and
hlt
dec
mov
idivl
mov
inc
xor
movsb
mov
or
fnsave
sahf
jecxz
movsl
ljmp
cmp
mov
mov
insb
mov
hlt
loope
rol
xchg
or
add
mov
orb
inc
jae
mov
insb
push
xchg
xchg
xchg
movsl
fwait
and
fcomps
dec
adc
dec
or
movsl
xchg
xchg
xor
shll
stc
xchg
sub
mov
sub
jns
mov
fildl
cmpsl
lds
fldcw
outsb
xchg
adc
mov
jno
fwait
inc
into
push
aas
movsl
inc
adc
pushl
enter
add
push
mov
cs
jno
sbb
and
stos
mov
shl
notl
arpl
mov
sbb
andl
out
dec
pop
insb
addr16
loop
jne
xor
dec
not
movsb
mov
outsl
cmp
jp
add
inc
xor
xor
inc
outsb
or
into
mov
frstor
push
movsl
cmpl
sub
jl
inc
adc
cld
arpl
ja
jb
cmpsb
mov
call
mov
fcoms
xor
pop
popf
or
mov
push
fwait
test
xchg
fs
pushf
incl
xor
inc
mov
stos
cmp
mov
sub
popf
xchg
jmp
mov
negl
pushf
cmp
xlat
sbb
icebp
imul
push
xor
fldcw
push
jnp
and
bound
mov
xor
inc
lret
inc
and
push
cmovns
icebp
or
jle
lret
pop
je
jp
ret
je
aas
clc
das
out
scas
xchg
adc
or
loope
mov
repz
mov
add
push
shrb
sub
pusha
js
xchg
insb
movsb
stos
sub
mov
loopne
ficoml
hlt
scas
dec
xchg
orb
fisttpll
nop
scas
mov
stos
dec
lret
sub
into
imul
lret
lret
adc
scas
push
or
xor
inc
xchg
cli
and
and
insb
mov
in
rolb
in
mov
lcall
idivb
mov
inc
and
clc
and
add
std
or
or
sbb
sub
lea
fwait
mov
mov
leave
add
sbbl
push
push
mov
popa
in
sbb
cli
scas
mov
psrlw
fisubl
scas
or
rcrl
mov
and
mov
int
mov
int
hlt
in
jnp
push
lods
jle
pop
cmpsb
scas
popa
lods
mov
repnz
mov
add
mov
pop
dec
into
test
repz
xchg
test
imul
mov
adc
push
cli
pop
mov
into
popa
jmp
stos
cltd
lods
cmp
xor
leave
lds
mov
mov
bound
aas
hlt
jns
fsub
lret
xchg
sti
push
jl
pop
xchg
loop
and
jmp
gs
fxtract
jl
dec
jo
out
xlat
pop
shrb
mull
and
pop
fisubl
mov
and
popa
and
push
xchg
int
or
jbe
jbe
jb
inc
sub
xchg
xor
jo
jge
ficoml
adc
sar
aas
dec
imul
inc
daa
inc
cmp
lret
fmuls
push
mov
pop
loop
add
cmp
addr16
adc
cmpsb
aam
int
mov
xchg
mov
xchg
push
xchg
pop
jl
sub
dec
rcrb
loopne
sbb
xchg
pusha
dec
and
jmp
test
jne
push
pop
mov
fildl
dec
test
xchg
pop
popa
shrb
and
adc
test
push
movb
movb
xor
shll
inc
or
daa
xor
imul
mov
sti
repnz
mov
jecxz
mov
or
add
mov
fwait
clc
andb
or
fs
pop
push
add
push
dec
fstpl
loope
rsm
lods
fs
add
aad
mov
aad
ret
or
sub
out
daa
mov
das
pop
adc
jge
nop
aaa
mov
inc
stc
add
lods
adc
dec
int
insl
movsl
add
std
jno
leave
dec
sub
push
les
stc
stc
mov
push
in
es
and
hlt
cmp
inc
cmp
dec
pop
cli
jl
icebp
jnp
cmpsl
dec
call
leave
les
jp
mov
pop
inc
iret
or
fisttpll
repz
pop
sbb
mov
cld
pop
std
stc
mov
stos
and
arpl
repnz
mov
add
rcr
fistpl
xchg
js
mov
adc
mov
dec
add
daa
pop
push
mov
sahf
int3
add
mov
xor
mov
or
push
and
int
mov
imul
push
and
into
sarb
out
inc
clc
cs
add
sub
xchg
lahf
test
test
xchg
rorl
arpl
mov
sbb
push
inc
mov
xchg
fcmovnu
nop
push
pop
mov
enter
mov
push
stos
sub
sub
pop
cmp
scas
mov
movsl
in
pop
xor
fnsave
leave
xor
outsb
rcll
push
push
add
and
cmpsb
test
nop
jns
sbb
dec
neg
mov
sbb
mov
sahf
jl
push
dec
xor
out
xchg
test
mov
jecxz
outsb
and
add
lods
outsb
xlat
das
dec
std
push
fnstenv
and
sahf
push
out
mov
mov
aaa
cmp
sbb
inc
pop
mull
ret
addr16
jl
daa
lea
int
popa
mov
push
insl
sub
dec
push
and
scas
sub
mov
dec
push
mull
pop
mov
xor
addr16
jo
jbe
jmp
pop
jo
xor
add
mov
inc
mov
cmp
das
mov
mov
sbb
xor
mov
or
inc
xor
enter
adc
xlat
xchg
iret
mov
call
inc
push
lahf
bound
aas
sub
and
add
in
or
sahf
dec
jae
add
fdivrs
mov
sub
jecxz
dec
or
add
ja
sub
lret
and
roll
iret
insb
cmp
dec
enter
or
xchg
orb
cwtl
xchg
mov
mov
mov
pop
out
sub
mov
xor
cli
cmp
jae
xchg
push
negb
add
xchg
jmp
adc
fcoml
dec
pop
mov
mov
or
fdivs
xor
xchg
pop
out
dec
lcall
aas
lret
xlat
add
cli
jo
stos
leave
fbstp
movsl
jne
sti
cmp
data16
dec
aas
pop
pop
les
out
jecxz,pt
mov
xchg
std
scas
negb
mov
inc
jae
adc
jnp
mov
mov
jo
or
fists
and
add
test
jb
ret
xchg
sub
or
movsl
push
mov
ljmp
jnp
fmul
sub
insl
or
dec
mov
out
ss
xor
repz
adc
xchg
iret
jne
in
stc
cltd
dec
stos
orl
xchg
jnp
xor
aad
ret
add
mov
out
fisubrl
lret
xchg
out
cmpsb
mov
xor
dec
pop
mov
in
xchg
aaa
jb
cmc
or
add
adc
hlt
cli
dec
pop
mov
sbb
out
or
push
cmp
mov
mov
out
sbb
xor
sub
fimull
rorb
nop
lock
std
sbb
mov
psllq
lods
ljmp
shlb
gs
bound
inc
sti
ljmp
mov
int
aad
xchg
shr
lds
sbb
daa
into
pop
out
sbb
in
idivl
and
adc
pop
cmpsb
lock
or
xchg
stc
ficoml
and
add
mov
and
dec
add
bound
insl
sbb
fwait
push
and
inc
push
cli
and
and
fnstenv
rolb
pushf
int3
mov
and
mov
xchg
rcr
jo
xchg
cmp
aam
aam
lret
out
and
inc
xchg
fnsave
push
or
xor
mov
ja
aam
aam
sbb
xchg
pop
std
mov
push
stos
mov
ja
fdivrp
mov
mov
and
test
pop
adc
in
push
iret
nop
pminsw
nop
push
cld
jns
fwait
out
adc
mov
mov
jg
inc
es
add
fdivl
daa
add
and
adc
cli
in
imul
add
arpl
call
lods
jbe
or
ret
loop
cmp
dec
push
mov
and
pusha
push
dec
pop
push
mov
jecxz
jne
out
movsb
mov
and
in
mov
cmp
mov
mov
mov
jo
cmpl
mov
mov
xor
cmp
xchg
jnp
pop
inc
pop
shr
xor
cmp
addb
xchg
js
div
sub
cmp
or
je
jp
and
xor
loopne
push
lret
rcrl
imul
xchg
inc
sbb
inc
mov
lret
add
pop
nop
loop
cmp
ret
inc
sete
pop
incl
popa
cs
lea
bound
push
mov
add
imul
xchg
jne
lods
stos
ljmp
push
add
std
xor
fwait
inc
fmuls
jne
add
mov
mov
pop
test
stos
pop
adc
aam
lock
in
and
loopne
push
mov
lds
shrb
lods
pop
outsb
insl
mov
lock
push
loope
insb
shll
and
cmp
fstl
out
pop
push
xchg
sbb
push
xchg
sub
aam
lods
or
sbb
fs
xlat
shrb
fidivrl
into
or
or
rclb
ss
sbb
test
sub
or
mov
xor
das
xchg
out
mov
cmp
into
jl
cmp
add
mov
mov
cmpsl
xchg
rcrb
int
dec
fistps
test
dec
pop
pop
call
sarl
into
or
xchg
dec
dec
je
push
cmp
cli
stc
add
sub
or
jle
fisttpl
mov
loopne
lock
cmpsl
xor
shlb
cmc
cmp
cwtl
pop
sahf
sub
or
add
pop
xorb
data16
out
mov
sti
and
jnp
or
jnp
hlt
decb
and
bound
into
cmp
push
mov
jo
aas
mov
dec
lods
inc
and
pop
stos
push
leave
mov
ss
sub
jmp
xchg
push
sub
sub
mov
add
xor
xchg
cmp
inc
mov
rorl
xor
fmul
rcll
sbb
stc
in
lods
or
les
xlat
dec
lahf
push
sbb
push
mov
xor
mov
mov
cmp
into
jp
xchg
or
aam
sub
inc
xchg
inc
jbe
xchg
in
nop
mov
mov
xor
add
ss
pop
mov
lock
movsl
je
inc
mov
jl
xlat
jnp
sub
int3
or
clc
push
test
jle
sub
cltd
popf
push
sahf
fs
mov
lret
push
cmp
pop
sub
out
push
dec
sub
outsb
icebp
and
xchg
out
out
aas
fs
jbe
out
dec
sbbl
mov
pop
sbb
icebp
arpl
cmp
dec
sub
lea
loop
add
inc
pop
adc
int3
bnd
insl
mov
test
lahf
mov
loope
inc
or
xchg
cmpsl
sub
inc
aad
js
xchg
ret
push
sbb
and
test
mov
hlt
mov
pop
int
pop
mov
out
icebp
in
inc
les
adc
mov
push
das
incl
mov
cmp
out
es
mov
int
lcall
dec
sbb
sub
jl
jecxz
sti
mov
outsl
clc
ret
mov
movsl
outsb
dec
inc
subb
scas
leave
jle
xor
aam
testl
imulb
push
lcall
dec
sbb
std
sahf
or
enter
inc
inc
mov
jge
adc
aad
xor
outsb
icebp
aam
xchg
stc
jecxz
cwtl
xchg
add
xor
aad
ja
xchg
popf
ds
xchg
push
mov
aad
push
negl
popf
mov
pusha
lret
push
stc
int3
test
jge
jne
daa
movb
inc
and
mov
mov
pop
sbb
das
sub
xchg
loopne
jl
or
shrl
push
mov
aam
or
jp
aam
lods
pop
popf
xor
lahf
gs
insl
mov
jo
in
loop
pop
xchg
mov
test
fstpt
jp
jmp
imul
sarb
sbb
jle
sub
lcall
mov
scas
sbb
in
je
mov
dec
fsts
ret
ss
testl
cmpsl
outsb
pop
dec
seto
inc
inc
clc
add
xchg
addr16
out
mov
xor
aaa
testl
leave
push
call
sub
adc
xor
jnp
leave
push
rcrl
data16
xchg
out
jbe
jns
mov
sarb
jae,pt
hlt
lret
cld
push
jb
sub
jle
inc
nop
je
lret
inc
movsb
dec
test
loop
or
xor
xchg
sbbl
arpl
and
bound
jo
aad
imul
insb
and
jg
repz
mov
add
and
aaa
inc
jb
adcl
imul
scas
daa
pop
xorb
push
xor
fcmovne
roll
mov
aas
dec
in
sub
mov
xchg
fldenv
mov
jmp
inc
enter
xor
adcl
sbb
fiadds
loopne
fmuls
fisttps
mov
or
push
test
pop
test
inc
mov
and
and
ljmp
dec
and
ret
xchg
aad
repnz
and
push
cmp
mov
xchg
fsubrs
aam
adc
jg
add
or
push
out
cld
mov
aam
xchg
and
hlt
push
xor
mov
sbb
cmp
sbb
cmp
outsl
sbb
dec
cmp
mov
mov
stos
dec
cmpsb
push
sahf
sbb
dec
aaa
cmp
fmull
mov
sub
jge
insl
scas
shlb
lahf
movsb
test
xchg
sar
lea
pop
enter
xchg
rclb
mov
scas
mov
outsl
push
clc
aaa
stos
bound
les
inc
movsl
mov
fcmovne
pop
std
inc
inc
pop
rorb
mov
dec
mov
enter
daa
push
jnp
jge
int3
or
push
ret
mov
adc
insb
add
in
xor
int3
jne
or
addr16
add
ja
fldenv
lahf
cmp
daa
and
ljmp
jg
mov
mov
les
pop
enter
xor
mov
mov
cltd
mov
in
repz
fdiv
fsubrs
jg
jae
xchg
stos
push
pop
lods
jle
push
mov
mov
test
jmp
mov
jle
data16
push
xor
outsb
loop
adc
xchg
pop
lock
dec
cmp
jnp
mov
push
std
into
pop
nop
iret
sahf
jecxz
imul
lock
mov
movl
sbb
fsubrl
dec
out
dec
and
add
push
clc
ljmp
daa
pop
add
cmpsl
xor
xlat
cmpsl
fsubs
divl
and
mov
pusha
popf
mov
jg
mov
test
jecxz
mov
pop
xchg
insl
xchg
lcall
iret
jecxz
dec
mov
pop
ds
jle
outsl
or
frstor
lret
mov
pop
out
bound
xchg
cmp
icebp
dec
jg
test
lock
or
sub
iret
xor
jg
in
xchg
inc
add
xor
mov
in
repz
xchg
mov
sbb
jno
mov
js
ret
shll
mov
scas
mov
rolb
dec
add
lret
cmp
mov
xchg
ljmp
pop
inc
stos
and
xchg
out
mov
sarb
scas
mov
movsl
push
adcl
iret
ljmp
adc
jmp
xchg
lods
adc
or
lock
out
pop
lret
bound
aas
xchg
mov
loope
out
sub
or
movsl
fistps
sti
sbbb
mov
rcll
data16
add
arpl
dec
rclb
pop
xchg
adc
call
or
mov
add
cs
sub
outsl
insl
enter
push
sbb
ljmp
fcoms
push
inc
dec
pop
andl
movsb
fimuls
out
sbb
pusha
outsl
pop
mov
xor
add
add
adc
add
dec
fdivl
ret
nop
lahf
out
cmp
xchg
jnp
jmpw
or
xor
jno
bswap
in
sbb
scas
sbb
call
or
iret
sbb
push
xor
mov
ret
mov
aas
loopne
hlt
inc
lock
sbb
cld
mov
adc
xchg
mov
dec
or
mov
add
mov
sbb
in
out
pop
adc
cmp
shl
push
call
ret
mov
jo
hlt
in
push
jmp
mov
repnz
xchg
pop
mov
inc
or
ficompl
popf
or
lea
mov
nop
xchg
xchg
test
pop
sti
ja
and
adc
cmpsb
jns
xchg
out
cld
add
add
jp
test
jp
sub
hlt
mov
in
fwait
push
pop
xchg
inc
jg
imul
dec
jae
pop
or
inc
cli
xchg
cmp
jmp
dec
je
stos
sbb
or
shlb
inc
mov
inc
js
int
je
jl
and
repnz
or
cltd
ds
jge
push
inc
xor
xor
outsb
cmpsb
inc
je
mov
dec
test
stos
inc
jmp
ficompl
in
cmpb
cmp
or
int3
sbbl
inc
movsb
inc
fsubrl
xor
test
movsb
int
scas
cmp
add
clc
daa
ficomps
cmp
pop
fucom
out
ret
mov
fistl
test
inc
and
std
cmpsb
stos
cld
sti
lahf
ja
add
mov
fwait
xor
and
or
aaa
dec
lods
jns
pushf
enter
sbb
push
xchg
mov
push
ja
jnp
xchg
push
enter
xor
cmp
pop
aaa
xlat
ds
cmp
lock
pop
scas
ret
imul
addr16
add
mov
add
sub
mov
pop
mov
icebp
shll
mov
test
xchg
cwtl
xchg
bound
mov
xor
fcmovnbe
push
cltd
iret
add
push
cmpsl
adc
dec
push
fwait
repnz
push
dec
gs
and
mov
push
mov
insb
les
or
pushf
adc
lret
push
cli
lds
in
pop
subb
cmp
jp
mov
std
xchg
mov
adc
and
push
fiaddl
pop
dec
xchg
mov
dec
test
loope
iret
lret
cmp
xor
aam
mov
jae
push
xchg
rolb
xchg
rcrb
cmp
push
mov
xor
and
push
cs
and
adc
pusha
stc
add
xor
cmp
div
lcall
pop
dec
xchg
leave
inc
insb
mov
in
es
mov
icebp
ja
and
push
pusha
cli
lods
sbb
mov
mov
sbbl
lahf
in
jp
pushl
js
cmp
mov
enter
mov
out
cmp
test
add
add
mov
ret
subb
mov
fdivs
jns
push
or
pop
push
lods
adc
add
es
aam
dec
clc
inc
push
fisubs
ljmp
lock
in
and
movsb
pusha
call
sarb
xchg
clc
dec
push
in
pop
mov
sbb
in
xorb
popa
sahf
mov
into
fs
inc
adc
stc
lods
dec
cmc
in
mov
mov
sub
repnz
loop
xor
aad
xchg
enter
mov
xor
std
sbb
fdivs
mov
cmpsl
cltd
subb
sbb
ja
clc
xchg
out
mov
push
stos
fwait
pop
jmp
xor
sbb
sub
mov
mov
add
mov
push
in
aam
sarb
dec
insl
jecxz
dec
dec
cmp
aaa
test
adc
movsb
int3
cmp
pop
dec
out
shlb
jg
push
jbe
or
bound
bnd
lcall
mov
sbb
imul
lock
lcall
pop
sub
ret
add
aaa
cld
cmp
add
mov
imul
aaa
pop
pushf
sarl
lods
cs
dec
fstl
mov
xchg
push
stc
ds
sub
ss
pusha
xlat
out
adc
mov
enter
pusha
mov
test
and
jne
fsubrl
jne
test
inc
lret
icebp
dec
adc
shrl
sub
loopne
clc
xlat
jne
cmpsb
jle
cmc
jae
dec
xor
and
pop
inc
pop
jo
mov
dec
jo
pop
push
addb
iret
push
push
dec
push
enter
dec
cmp
stos
jne
mov
lret
sub
inc
dec
inc
fldt
sbb
and
or
mov
es
setg
lds
jle
dec
push
rcrl
aaa
js
int3
and
sahf
inc
pop
aam
into
sbb
sbbb
pop
xchg
shlb
sar
jnp
pop
and
insb
lea
jb
xor
mov
push
xchg
xor
xor
adc
and
andb
dec
lock
fidivrs
scas
aaa
sbb
xlat
lea
clc
push
or
in
mov
jge
adc
jl
test
leave
jne
xchg
jle
pop
in
dec
shll
test
mov
in
fs
xlat
mov
mov
sarb
and
pop
pusha
dec
jno
jl
add
mov
push
inc
lea
mov
jne
adc
sub
sub
stc
movsb
mov
mov
xchg
mov
add
adc
mov
dec
int3
arpl
mov
sbb
ds
and
jg
ret
andl
addl
les
mov
mov
xchg
cs
jo
bnd
hlt
or
pop
dec
test
push
addr16
push
jg
xchg
jns
mov
mov
repnz
outsb
xor
xor
inc
mov
test
push
jnp
loope
inc
mov
cwtl
cmpsb
xchg
outsb
jle
insb
xchg
sub
mov
inc
daa
aaa
mov
add
aad
ret
shrb
popf
xor
lds
test
xchg
out
scas
push
add
pop
add
pop
sarb
inc
push
push
dec
cmp
jge
pop
leave
sub
mov
in
scas
mov
cld
sbb
ja
cmpb
loop
ja
cmp
leave
sub
sub
cwtl
dec
les
mov
xchg
aam
stos
sbb
lcall
jle
in
mov
adc
adc
xor
movl
sbb
xchg
adc
jmp
mov
test
mov
jp
cmp
in
mov
xor
inc
lahf
pop
ds
ljmp
dec
ja
push
or
loopne
out
push
dec
pop
pop
push
sub
xor
xor
sub
test
imul
and
pusha
xchg
gs
icebp
ljmp
inc
mov
and
xor
dec
icebp
js
idivl
jle
push
lods
mov
js
popa
lods
push
clc
popa
addr16
pop
xchg
push
push
ja
sbb
movsb
dec
test
xor
or
daa
push
jmp
jne
sbb
push
xlat
mov
and
call
daa
iret
add
add
dec
cli
xor
std
and
aad
enter
mov
divb
enter
push
dec
pop
and
add
movsb
add
push
pop
or
xlat
add
sbbb
jo
or
sub
mov
mov
out
ffree
stos
jmp
leave
mov
sar
fs
shl
sub
into
leave
cltd
sbb
lods
aaa
aas
pop
call
jecxz
ljmp
es
cmpsb
movsb
out
and
ss
push
jmp
loop
mov
jl
popf
int
stos
ljmp
sbb
lahf
popf
mov
dec
inc
aaa
dec
in
icebp
inc
out
loop
inc
and
pop
gs
mov
jns
xchg
mov
jmp
lahf
sub
call
leave
popa
jmp
loop
dec
xor
scas
rcll
mov
xor
fisubrl
or
js
pop
mov
sub
incl
adc
xor
lods
cmpsl
pop
and
mov
mov
arpl
cmp
repz
jb
pop
les
pop
push
loopne
lret
movsl
push
mov
int
sbb
lret
sbb
popf
xor
add
ror
insl
cmp
mov
mov
sti
cmp
adcl
insl
pop
aam
iret
fcoml
je
or
jp
pop
mov
je
dec
lcall
hlt
loope
jnp
jno
cwtl
jp,pn
ficoms
bound
cli
sbb
sbb
mov
icebp
adc
stos
sbb
push
mov
dec
cmp
mov
stos
mov
imul
orl
cs
es
fcmovnbe
jbe
push
mov
jo
ret
lret
mov
loopne
xor
scas
xchg
leave
pusha
lahf
pop
dec
iret
and
outsb
inc
mov
outsl
xchg
and
pop
stos
scas
adc
lods
xor
inc
daa
je,pt
or
pop
mov
out
and
or
scas
xchg
sub
insl
mov
mov
jp
js
add
gs
mov
push
dec
incb
sbb
mov
add
adc
mov
sbb
add
clc
lods
test
inc
pop
xor
cmp
movsl
pop
fsub
xchg
mov
pop
xchg
jbe
add
lahf
ficoml
repz
aad
pop
mov
fwait
xchg
sub
jl
mov
nop
mov
jne
dec
sub
cmp
xchg
xchg
push
fsubs
pop
mov
popf
jno
das
fwait
sbb
rorb
mov
sbb
push
push
bound
in
mov
sbb
sti
cmp
out
mov
fnsave
in
xlat
dec
or
icebp
adc
mov
jae
test
in
mov
cmp
xor
mov
xlat
xor
ljmp
stos
cmpl
cmpsb
add
mov
sub
add
popa
inc
push
in
lret
sbb
lret
imul
lcall
mov
inc
test
sbb
repnz
and
sub
xor
jne
jo
rcll
mov
test
ret
jmp
scas
and
cmp
dec
mov
sbbl
dec
mov
mov
sub
bound
gs
jbe
push
pusha
imul
cmpsb
add
add
roll
in
pop
cwtl
jbe
cmp
loope
jmp
dec
pop
outsl
rcrl
jae
add
pop
int3
jmp
mov
push
rcrb
pop
addl
sbb
dec
lret
aad
mov
pop
dec
push
pushf
lods
mov
stc
cs
sti
xor
inc
daa
hlt
and
dec
sahf
adc
shl
hlt
sbb
pop
and
es
sbb
lea
mov
xchg
out
jge
pushf
iret
adc
mov
call
cld
repz
mov
ja
xchg
pop
daa
push
add
ss
stos
in
ret
xor
rclb
mov
sub
xor
pop
shl
push
fstpl
pop
jecxz
movsl
xchg
ret
pop
xchg
cmp
mov
xchg
decl
inc
loop
loope
enter
inc
sbb
inc
push
mov
adc
mov
mov
add
adc
out
test
adc
mov
jmp
enter
dec
or
out
sub
das
and
imulb
dec
cli
push
adc
subb
movsl
loopne
push
movsl
push
mov
push
into
sahf
mov
cmpsb
cmp
aad
fisubl
decl
inc
adc
dec
mov
mov
es
iret
mov
or
test
cld
pop
pop
jecxz
xchg
cmpl
imul
cmpsb
pop
sbb
adc
xchg
mov
mov
sub
shll
adc
int
push
sub
inc
stos
cmpsb
stos
stos
xchg
aas
repnz
dec
xchg
test
sbb
inc
mov
sbb
fstl
xor
movsl
inc
xchg
in
cmp
cwtl
pop
adc
jne
and
add
mov
fdivl
orl
ret
in
cmp
push
shll
mov
lcall
add
in
outsl
dec
push
dec
pusha
sbb
inc
in
inc
jl
scas
enter
jl
neg
xor
mov
cwtl
inc
or
lods
imul
sub
xor
push
or
lods
pop
int3
xlat
in
and
cmc
lock
mov
arpl
push
adc
loope
mov
fst
roll
add
aas
and
jno
mov
out
xchg
mov
data16
outsl
cmp
sub
xor
subl
xchg
test
fwait
in
out
push
pushf
push
popf
jl
ja
add
jnp
xor
mov
mov
xor
pop
cld
jmp
fs
mov
inc
movsb
dec
add
xlat
mov
push
insl
fcompl
shr
mov
push
adc
push
and
inc
aad
mov
adc
out
mov
test
mov
inc
xlat
or
pusha
push
popf
jge
xchg
mov
outsl
mov
dec
xchg
into
cli
loopne
add
xchg
insl
test
jge
xchg
inc
sub
sub
add
clc
push
nop
sub
xchg
add
divb
sbb
testb
sbb
push
xchg
mov
repnz
in
aas
jno
fsub
push
add
in
out
pusha
data16
sbb
cs
pusha
xchg
sub
push
adc
lret
cmpsb
sbb
sub
ljmp
inc
push
mov
mov
sti
or
loope
jno
push
pop
scas
fdivl
mov
cmp
fs
cmp
mov
shl
lods
insb
mov
xor
scas
lcall
xchg
test
ret
cwtl
cli
das
cmp
imul
cmc
push
dec
mov
pushf
fisttps
pop
cmc
sbb
pop
in
rcr
cmp
mov
rcrl
aam
enter
int
iret
arpl
inc
mov
push
sub
pop
sbb
fldenv
add
push
xchg
adc
sahf
bnd
inc
mov
jne
loope
adc
xchg
fs
out
ret
push
call
mov
mov
test
sub
push
in
pop
fcom
scas
and
lret
iret
add
cmp
cmp
jge
mov
popf
dec
mov
inc
mov
mov
adc
addl
es
or
sti
sti
cmc
sub
pop
inc
sbb
incl
xchg
cwtl
sbb
clc
popf
or
out
inc
lock
lock
cltd
add
mov
outsl
and
popa
push
dec
and
mov
push
test
pop
and
bound
xor
dec
push
out
out
ret
pop
pop
popf
adc
outsl
xchg
and
nop
lret
ja
ljmp
xlat
cmc
jb
shrb
sti
out
fwait
je
cmp
in
fstpl
cmp
addr16
add
pop
push
out
add
cmpsb
sbb
push
or
fsts
add
xor
xor
jbe
stos
rcll
aas
mov
inc
popf
int3
pop
inc
std
stc
daa
dec
aaa
movsb
jns
out
jne
push
or
mov
mov
mov
jo
js
aas
inc
loop
mov
add
cmpsl
xchg
cmp
out
pop
or
in
sub
fsubl
inc
out
sub
in
adc
cmp
xor
inc
add
inc
loopne
inc
adc
pop
mov
repz
adc
mov
mov
fbld
fildll
and
mov
cmc
lret
int
rorl
xchg
out
outsb
jp
jmp
lcall
hlt
cmpsl
xor
push
filds
jbe
les
in
insl
xchg
cmp
xor
and
cmp
cltd
shll
ficoml
mov
xor
mov
out
dec
sarl
popf
outsl
pop
cmpsl
testb
and
adc
push
imul
xor
pusha
push
xchg
push
clc
adc
cmp
repz
pop
pop
insb
pusha
inc
arpl
popf
outsb
cmp
cmova
cmpl
xor
bound
decl
out
bound
shrb
inc
inc
and
inc
mov
adc
test
into
fisubs
leave
push
xor
or
pop
add
movl
and
outsb
int
add
xchg
cwtl
rcl
imul
push
bound
push
daa
push
add
xor
adcb
fcompl
sbb
les
adc
mov
adc
xchg
imul
jbe
cli
nop
fcmovb
mov
inc
jo
xor
lds
cmpsb
repnz
and
jecxz
rorl
adc
pop
dec
gs
sbb
pop
aad
dec
sbb
cltd
push
imul
pop
les
sub
xor
mov
xchg
mov
jle
clc
xchg
and
fimuls
push
das
cmp
cltd
inc
push
jmp
or
jo
aaa
sbb
pop
mov
dec
jb
xchg
inc
xor
jbe
nop
push
fwait
add
jo
pop
je
stc
sub
out
cmp
ret
pop
xchg
pop
mov
clc
out
push
leave
or
cmp
jo
or
lahf
inc
and
pop
into
jmp
sbb
push
imul
dec
jae
ja
xchg
mov
add
pop
ret
mov
les
aad
hlt
shrl
add
mov
cwtl
pop
adcl
je
cmp
in
push
add
sub
test
adc
movsl
push
idivb
sarb
dec
xor
or
xchg
mov
push
outsl
loopne
enter
dec
shlb
mov
add
mov
inc
mov
das
data16
push
sub
sbb
enter
das
arpl
aam
or
adc
fisubrl
es
test
sbb
pop
mov
or
xchg
sub
push
scas
pusha
jne
int3
out
repz
push
sbb
cmp
jbe
xor
fstpt
mov
ret
jbe
add
out
push
jnp
jno
jle
add
sub
add
pop
push
rcl
cld
or
xor
movsb
cld
cltd
in
in
loop
leave
jecxz
dec
pusha
jnp
outsl
mov
pop
xor
mov
jno
ja
test
repnz
jns
std
aad
fwait
inc
clc
fldenv
cld
ja
aam
test
enter
sub
and
or
jl
inc
shl
scas
mov
rcrb
mov
pop
mov
add
aaa
bound
mov
inc
insb
jl
push
jno
jmp
enter
test
pop
icebp
in
cmp
pop
add
sbb
imul
sbb
xor
dec
out
dec
idivl
inc
inc
daa
sbb
jle
push
scas
dec
mov
pop
negl
out
jle
test
sbb
imul
xchg
dec
add
xor
mov
sbb
mov
add
addr16
mov
mov
pop
xchg
push
ljmp
mov
mov
int3
add
fsub
scas
cld
mov
dec
hlt
mov
cmp
das
loope
imul
xlat
push
ret
cs
mov
add
inc
addr16
enter
addr16
push
jb
in
cmp
dec
mov
or
stos
sahf
repnz
and
inc
jl
hlt
or
xchg
outsl
push
mov
pop
pop
push
dec
sub
aaa
lea
inc
sahf
fisubl
fldenv
jmp
repnz
enter
rclb
inc
lods
sarb
jg
jecxz
lds
xor
insb
dec
loope
sub
push
in
add
pop
ja
jae
int3
add
mulb
cli
pop
out
aam
dec
mov
add
daa
add
dec
gs
mov
add
pop
cmp
lcall
ja
inc
and
sbb
cld
lods
rcrb
adc
test
jno
imul
loope
push
dec
inc
pop
shll
inc
int3
or
or
or
rorl
sbb
in
sbb
add
mov
lods
out
cmp
sub
pop
sbb
pusha
lret
mov
xchg
shr
adc
pop
dec
sbb
dec
scas
jl
fsubl
inc
popf
inc
icebp
test
inc
push
jb
mov
in
mov
mov
xchg
xchg
push
fsubrs
push
dec
data16
cmp
add
inc
mov
xchg
mov
in
mov
in
jns
mov
sub
mov
xor
setb
loope
jbe
stos
movsb
or
add
dec
push
adc
xchg
mov
fdivrs
xchg
ja
mov
jnp
adc
pop
jge
or
jmp
inc
pop
fisubrl
pushf
fisubrs
sbb
sbb
mov
stc
or
loop
push
sti
and
jae
pop
repnz
or
orb
cs
data16
jge
push
push
xchg
inc
and
xor
outsb
xchg
xor
sahf
bound
xorl
jnp
dec
lock
movsl
enter
pop
in
in
pop
mov
push
loopne
mov
mov
roll
dec
jmp
hlt
xor
xchg
pop
hlt
sub
loope
sub
jb
push
popl
les
out
fsubrp
push
mov
or
in
adc
repnz
ficomps
mov
leave
test
pop
xor
daa
icebp
sbb
xor
in
jmp
out
fidivrs
out
jo
ret
mov
dec
xor
mov
cwtl
mov
das
push
push
pop
icebp
xchg
jp
ficompl
mov
cltd
loope
pop
lahf
mov
cmp
mov
ret
imul
sbb
fldl
bound
int3
insl
adc
mov
jns
in
pop
cmpsl
jnp
ficoml
mov
dec
test
rcrb
add
xchg
jnp
push
fdivr
xchg
add
mov
int3
mov
xchg
addb
dec
jmp
sub
shlb
push
test
jmp
or
in
push
addr16
dec
loop
popw
insb
and
orb
sbbb
sub
fstpl
cld
cmpsl
and
pusha
inc
in
inc
outsl
xor
sbb
int
insb
push
cmp
mov
out
push
inc
lock
outsl
mov
pushf
dec
nop
push
sub
and
xchg
aaa
xor
push
xor
ds
movsb
mov
decb
lock
fnstenv
test
xchg
ja
push
jno
insl
cwtl
cmpsb
into
icebp
bound
jle
mov
jbe
add
xchg
pop
ret
icebp
arpl
fs
gs
bound
cmpb
rol
mov
jg
dec
mov
test
mov
fsts
out
xor
dec
in
idivl
and
das
in
add
stos
std
lods
inc
sbb
mov
out
loopne
mov
jecxz
fmull
pop
dec
mov
cmpsb
aas
jl
mov
mov
inc
movsl
ret
and
xor
pop
scas
fwait
mov
pop
pop
fucom
decl
xchg
inc
and
mov
jbe
fstp
es
jle
cmp
xor
push
sub
or
fsubs
mov
pop
adc
dec
mov
int
add
jl
aam
icebp
mulb
jae
daa
leave
inc
inc
mov
ss
scas
sbb
aaa
xchg
dec
push
mov
and
inc
pop
push
mov
icebp
add
pop
and
out
and
test
and
dec
loope
pop
adc
xor
mov
adc
decb
xor
cs
jmp
and
repz
xchg
test
xor
and
push
push
jae,pt
clc
pop
push
cwtl
mov
jecxz
mov
jp
or
dec
fwait
push
and
pop
and
xchg
jl
jb
outsl
arpl
xchg
dec
inc
aam
jle
mov
pop
cmp
add
imul
cs
add
pushf
out
sub
add
insb
jnp
cmp
gs
shlb
sub
add
cltd
add
mov
xchg
or
call
add
xchg
push
sub
mov
push
movsb
dec
jle
cltd
movsl
push
out
stc
pop
icebp
addr16
out
push
push
mov
arpl
dec
add
pop
test
mov
stos
push
int
loopne
jo
mov
adc
repz
xor
inc
xor
jg
dec
test
push
sub
dec
out
ret
jmp
sarb
insl
test
ljmp
xorb
add
xchg
mov
and
stc
push
rorl
xor
or
jg
mov
sub
daa
hlt
and
popa
cmp
std
insb
mov
mov
dec
aas
dec
mov
in
mov
mov
stos
jp
cltd
imul
jmp
mov
jne
jmp
lahf
pop
add
adc
jmp
movsb
mov
jge
push
movsb
stc
cltd
fisubrl
jb
jne
addr16
sub
test
adc
icebp
loope
js
pop
push
cmp
mov
push
cmpl
das
mov
mov
sub
xchg
mov
or
clc
or
int
sub
out
pusha
pop
popa
or
fdivl
addr16
lret
sbb
xor
repnz
fsubrl
add
popf
gs
sbb
sbb
das
mov
xor
jl
outsl
loopne
jmp
xorb
push
cmc
dec
sbb
xchg
fld
jne
mov
or
inc
lcall
sub
sub
jmp
sub
sub
aaa
sti
xor
shll
repnz
popa
add
clc
cmp
jl
hlt
dec
cli
andl
out
lock
mov
dec
fdivl
cli
cmp
in
cli
or
cmp
jne
pop
aam
push
movsl
out
adc
cld
cmp
and
pop
fisubs
enter
int3
addb
adc
jns
sti
xchg
inc
push
out
mov
cmp
jae
sbb
sbb
lret
std
negl
xchg
mov
pushf
mov
loop
xor
xchg
xchg
icebp
hlt
inc
ret
jnp
mov
sub
sahf
loopne
jnp
scas
rcrb
fwait
ret
push
jns
adc
inc
negb
imull
pop
dec
ficomps
xchg
leave
pusha
push
mov
addl
or
mov
push
xchg
mov
inc
xor
stos
push
push
loop
aas
mov
dec
mov
adc
ljmp
movsl
jl
cmpsb
add
scas
inc
sub
cmp
jp
aaa
fs
push
lret
and
add
iret
adc
in
in
jo
sbb
lods
addl
je
jo
or
outsb
mov
jnp
ja
sti
fldl
icebp
and
imul
std
dec
push
fisubl
jmp
or
push
adc
push
mov
jmp
mov
ret
and
stos
in
cmp
lods
mov
inc
adc
stos
call
push
or
and
jb
sub
or
enter
into
call
rep
lods
sub
jno
aad
stc
nop
dec
insl
call
dec
jnp
in
or
popa
stos
je
jbe
int
jmp
rcll
xchg
insl
fnsave
enter
cli
push
sub
pop
dec
jmp
addr16
add
cmpsb
xor
jle
sarb
mov
inc
xchg
movsl
sbb
sbb
sbb
inc
push
loop
ret
push
add
fldt
jae
ds
movsb
repz
out
rclb
nop
out
mov
sbb
insl
sahf
inc
repnz
ds
and
cmp
loopne
or
sub
cmp
dec
out
fs
in
push
mov
fsubrl
ficomps
scas
xchg
fbld
sbb
sbb
leave
adcl
or
jbe
mov
sbb
insl
xchg
jle
ret
xlat
clc
sub
fcomps
ljmp
inc
imul
aaa
imul
mov
fwait
pop
jle
add
lahf
mov
in
stc
loop
mov
sub
dec
sahf
and
into
lret
mov
xchg
sbb
arpl
sbb
adc
es
iret
jmp
in
filds
out
ss
into
call
shrl
jge
mov
add
test
andb
inc
inc
inc
ret
loope
fstp
push
je
jbe
inc
test
jg
popa
repnz
pop
dec
inc
add
out
jb
rolb
pushf
sbb
shr
pusha
push
cld
scas
jne
jno
push
mov
rcll
xor
popa
sub
push
outsb
shll
pop
shll
inc
sti
cmpsl
rclb
js
stos
fisubrs
stos
cmp
fcompp
rorb
cli
test
rorb
pop
xor
mov
stc
popa
mov
mov
fstpt
add
out
mov
fildll
ret
adc
shl
sub
ret
push
popf
stc
in
or
imul
inc
out
sarl
mov
mov
arpl
mov
pop
in
mov
or
mov
push
inc
xchg
rolb
inc
and
dec
xorl
push
dec
or
cmp
fildll
jb
pop
sub
sub
cmp
and
cmc
fsubrl
ds
mov
into
sub
clc
xchg
pop
push
sub
pop
sbb
int3
mov
xlat
jo
xchg
lea
stc
pop
nop
pop
xchg
jno
push
jnp
inc
aas
in
inc
sbb
fs
push
jno
fimuls
js
pop
push
or
pop
dec
fistl
into
into
loop
jle
mov
and
mov
push
das
mov
push
inc
jmp
test
adc
fs
lcall
mov
xor
pop
jae
mov
xorb
in
negb
es
adc
mov
arpl
roll
xchg
aaa
out
xchg
and
fadds
sbb
cli
loopne
aam
mov
and
sahf
xlat
out
loopne
cmpsb
or
repz
adc
mov
xlat
xchg
mov
andl
adc
sbb
mov
loopne
lsl
mull
lret
and
insl
dec
xchg
xchg
xchg
dec
jmp
jno
or
dec
mov
jnp
or
lods
nop
pop
jg
sbb
jle
rcrl
fwait
sbb
or
rclb
xor
xchg
xor
fsubs
pop
xchg
or
push
mov
rcrb
sti
fmull
adc
inc
lret
dec
fs
pop
mov
setg
js
xor
loopne
cmp
bound
inc
lock
popa
das
fcomp
clc
repz
jle
pop
in
or
jno
add
les
in
mov
jmp
and
mov
arpl
in
pop
sbb
mov
outsl
das
jbe
or
sbbl
push
incl
clc
or
movsl
adc
test
push
icebp
jg
push
push
movsb
mov
cmp
sub
sbb
mov
dec
push
lods
or
sub
adc
cmp
fldenv
mov
and
xor
dec
jecxz
fsubl
lahf
dec
in
jle
adc
popw
jmp
jae
in
cmpsl
cmp
sub
lea
fucom
dec
ljmp
outsl
push
out
jae
pop
jp
add
xor
jl
mov
stos
cld
xor
sub
pop
cmp
dec
mov
divb
nop
sub
movsl
fiadds
jge
in
inc
outsl
xchg
adc
cmpsl
inc
addr16
orl
sahf
dec
leave
insl
xor
movsb
inc
in
sti
add
call
jae
inc
ss
xchg
inc
cmovae
jge
or
jecxz
cmp
or
add
or
pop
sbb
xchg
lds
or
mov
call
inc
loop
ficomps
push
inc
cmovp
mov
stos
jo
add
repnz
xor
mov
mov
sbb
jne
and
xchg
test
movsl
mov
ret
xchg
xchg
sbb
daa
pop
aaa
cli
fcompl
sbb
dec
mov
jmp
imul
xlat
loop
scas
mov
mov
mov
lods
dec
stos
jecxz
and
mov
pop
mov
pop
xchg
mov
dec
add
mov
iret
push
daa
sti
shrb
mov
jo
mov
jne
jl
add
les
sub
and
mov
ljmp
notb
fcoml
jno
mov
push
add
mov
jae
xlat
inc
and
fdivp
jnp
mov
cmp
or
jo
pop
cmp
dec
mov
push
push
into
mov
mov
cmp
enter
mov
aam
mov
popa
fcmovu
pushf
sub
and
pop
aam
hlt
mov
mov
mov
out
pushl
cltd
dec
inc
aad
jmp
adc
popa
rolb
adc
out
jmp
jns
jo
aas
push
cs
outsb
push
pop
xor
arpl
push
pop
pop
out
js
test
int
mov
add
and
cmp
jae
and
pop
lea
mov
xchg
ret
dec
ja
icebp
mov
ret
pop
shrb
mov
ljmp
add
out
shrb
or
pop
jb
stos
mov
sub
sub
dec
push
fistpl
cmpsl
mov
dec
popa
sub
das
test
xchg
push
sbb
fnstcw
push
mov
push
iret
add
hlt
js
shll
pusha
jae
add
loopne
rcll
mov
repnz
sub
push
ret
add
das
cmp
repnz
cmp
jp
andl
jno
fnstsw
xchg
cmp
xor
shll
push
mov
call
mov
jne
faddl
dec
jmp
sub
out
dec
xchg
call
sar
stos
xlat
lret
dec
cli
aas
cs
shl
arpl
loope
pusha
cmp
cmpsb
jg
imul
fsubr
ds
lret
shlb
mov
mov
rol
mov
mov
fadds
push
mov
mov
inc
jns
pop
sarb
iret
cmp
mov
xlat
std
lods
sub
cmp
std
pop
ret
jb
mov
mov
pop
mov
test
and
adc
mov
dec
push
sub
jge
mov
pop
pop
push
dec
xor
push
pop
or
adc
pop
sub
int
dec
js
pxor
or
xchg
movsb
dec
mov
cmp
icebp
mov
mov
mov
sub
lcall
xorb
or
inc
fiaddl
movsb
adc
sub
lds
adc
jno
adc
dec
aaa
dec
ljmp
lock
mov
jg
into
inc
shlb
lahf
xchg
jl
jae
ret
into
pop
test
dec
jno
mov
sub
out
adc
jg
pop
sub
cld
pop
cmp
mov
mov
dec
popa
adc
mov
mov
out
rcl
stos
xor
aad
out
mov
add
inc
repnz
mov
xor
int
cmpsb
lret
fs
fidivrl
push
and
outsl
scas
cmpsb
push
js
test
dec
cld
cmp
inc
cmp
push
lret
cltd
xor
mov
cltd
push
sub
ds
pop
in
int
mov
andl
loopne
xor
mov
add
and
js
ret
xchg
aaa
repz
lret
cmp
nop
loopne
cli
jecxz
aam
std
fldcw
add
and
cs
push
sbb
push
mov
cmpsb
jecxz
addr16
scas
fisttps
push
and
cmp
xchg
mov
push
jo
ret
pop
insl
out
adc
or
add
mov
lret
out
rcll
rcr
and
pop
out
cwtl
fiaddl
pop
jl
and
call
pop
add
gs
pop
in
mov
sahf
aad
addb
mov
lods
xchg
sub
lahf
cmpsb
jo
stc
loope
dec
cltd
mov
inc
popf
les
stos
aam
or
sbb
inc
fists
dec
lcall
popf
push
xchg
jno
nop
lahf
mov
dec
jecxz
jmp
aaa
push
push
lods
enter
fstl
push
dec
out
jp
rorl
repnz
add
subl
add
add
sub
adc
inc
out
test
inc
js
mov
jmp
pushf
mov
insb
jno
in
cltd
orl
in
das
mov
push
ficoms
test
cmp
ret
andb
lock
adc
movsb
test
in
mov
push
sbb
lcall
push
lds
add
cmp
sarb
leave
adc
lahf
pop
dec
test
notb
loopne
out
push
mov
jmp
in
push
fildll
inc
adc
mov
pusha
aad
pop
mov
bound
mov
pop
inc
or
out
sbb
mov
mov
inc
out
adc
jne
fidivrs
scas
loope
and
fcoml
roll
arpl
adc
enter
lea
out
or
sub
fnsave
or
pop
adc
and
push
pop
scas
push
add
jnp
mov
gs
shlb
shlb
or
jae
dec
mov
daa
ljmp
aas
movsl
popf
adc
sbb
out
pop
pushf
int3
test
mov
jne
sar
mov
push
lahf
popf
in
xchg
push
icebp
dec
int3
xor
fwait
push
mov
inc
aad
sub
outsb
fiaddl
dec
shll
adc
or
pop
lret
pop
fcmovnbe
xchg
adc
and
or
shll
mov
pop
in
fstp
test
mov
pop
cmp
mov
rclb
mov
inc
lds
ret
push
int
sub
pusha
pushf
cld
fwait
cltd
dec
push
cmp
fcomps
sbb
movsl
lret
fscale
in
aas
cmc
sub
push
imul
sbb
adc
pop
cmp
cmp
sub
outsl
and
adc
decb
inc
inc
inc
push
cmp
sub
dec
adc
and
dec
push
sub
inc
dec
stos
cld
lods
adc
ljmp
push
xchg
ljmp
push
data16
icebp
loopne
dec
stos
int
xor
addr16
data16
ret
dec
mov
pop
mov
sub
ss
add
push
mov
aad
dec
push
add
out
call
enter
mov
and
mov
dec
jecxz
rcll
add
out
and
scas
hlt
outsb
stos
lea
adc
dec
out
stc
mov
push
shld
push
dec
jg
sbb
mov
bound
mov
call
mov
out
clc
fdivrs
cld
sub
jge
das
popa
in
mov
es
or
fistpll
dec
daa
push
pop
jne
fbld
cld
stc
mov
jo
pop
ret
repnz
nop
stos
lods
mov
stos
test
aas
or
pop
and
loope
push
out
iret
pop
in
and
inc
inc
insb
push
or
dec
cmpsl
pushf
and
aad
test
sub
ret
gs
ds
shlb
mov
ss
clc
jp
sti
in
popa
scas
loop
cmp
dec
xor
sub
cmpsl
push
arpl
cli
mov
les
or
test
pusha
dec
outsl
inc
lods
icebp
push
stos
cld
pop
pop
repnz
mov
or
mov
pop
cmpsb
imul
repz
cli
mov
into
mov
or
inc
aad
xchg
jbe
lret
inc
cmp
add
fdivp
test
xchg
mov
test
xchg
inc
mov
or
push
mov
jl
pop
mov
push
nop
sbb
subb
out
pusha
loope
xor
cmpsl
cmp
sbb
repz
xchg
cmpsl
mov
dec
push
shlb
push
outsl
cmp
shrb
je
xlat
lods
sarb
and
hlt
mov
xchg
nop
dec
and
in
jg
add
jge
std
xlat
push
incb
xlat
cmpsl
jle
scas
mov
inc
out
jecxz
xor
bnd
aas
in
pop
dec
mov
jg
xor
xchg
push
xor
jo
sbb
mov
clc
sahf
jno
cmpsb
in
out
out
popa
jg
sbb
jmp
pusha
xchg
in
xchg
mov
jge
sbbb
mov
outsb
pusha
jns
pop
adc
or
popf
sbbl
in
inc
add
in
popa
and
stc
xor
shrb
sbbb
flds
xor
loop
mov
and
cmp
xchg
push
dec
add
xchg
cmp
push
jb
bswap
push
leave
inc
sub
sbb
jae
test
stc
sub
test
popf
mulb
cmpxchg
jp
hlt
fucomi
sbb
adcb
jne
dec
add
mov
mov
mov
or
or
inc
add
mov
dec
js
jg
cmp
insl
jb
add
and
mov
cli
gs
xchg
ret
xchg
fcompl
cmp
push
inc
sbb
test
out
int3
xchg
push
pop
mov
mov
daa
nop
xchg
sbb
jb
out
sub
sbb
xor
ficoms
into
mov
mov
jecxz
mulb
cmpsl
repnz
sub
popf
imul
inc
in
mov
xchg
shll
insl
jae
jmp
cmp
jno
mov
or
lods
add
or
lods
xorb
inc
shlb
mov
mov
movsb
xor
xorb
or
loop
jmp
or
fmul
or
adc
scas
test
dec
ss
mov
jecxz
cmp
subb
pop
stc
pusha
add
decb
fimuls
and
add
sub
cmp
bound
repnz
gs
pop
dec
loope
inc
bound
fdivr
jl
movsl
and
sbb
ja
clc
cltd
push
xor
shlb
xchg
data16
outsb
adc
sub
je
add
jg
xchg
aaa
popf
ds
cli
jns
mov
mull
pop
ficoms
push
and
shll
mov
adc
pop
pop
fisubl
or
rorb
sahf
sahf
xchg
es
shr
mov
dec
lcall
lea
adc
jno
in
icebp
push
cwtl
stos
outsl
je
xor
imul
mov
pop
arpl
cmp
xchg
xchg
lds
ret
dec
jp
or
push
add
test
sarl
push
sub
mov
mov
mov
mov
int
push
mov
gs
mov
fsubl
subl
add
adc
jg
push
xchg
out
push
sbb
sbb
mov
xor
stos
in
inc
xlat
sbb
rcrl
dec
test
cmp
dec
xor
jo
dec
lods
idiv
adc
sub
das
dec
cmp
sub
dec
inc
loop
push
mov
jmp
adcl
and
lods
out
inc
and
scas
and
cmp
mov
cmp
mov
imul
lock
xorl
ljmp
sbb
fst
fcmovne
pop
dec
sarb
bound
mov
adc
scas
lahf
test
orl
popa
sbb
jno
pop
sub
push
pop
pop
inc
repz
add
orl
pop
jbe
shrl
and
call
inc
jae
lret
xchg
jl
mov
imull
cwtl
pop
sarl
or
cld
mov
loopne
sbb
push
adcl
sahf
xchg
lods
xor
push
lea
add
lock
imul
orl
cs
imul
fwait
scas
nop
push
pop
es
imul
push
or
mov
in
movsl
sub
add
push
xchg
lcall
xchg
clc
lret
in
hlt
dec
mov
lcall
roll
pop
addr16
lret
lea
sub
lock
cmp
inc
cmpsl
in
orb
xchg
mov
movsb
scas
loop
push
ret
rcrb
push
out
and
mov
jo
daa
test
aaa
push
fs
sbb
mov
pop
ret
cmp
out
pop
out
rcrl
xchg
push
bound
das
lcall
ljmp
shrl
cltd
imul
loopne
in
pop
push
cli
mov
cmp
mov
lahf
xlat
lock
loop
add
mov
lods
jmp
icebp
inc
adc
js
lcall
subl
push
or
das
in
popf
into
or
in
mov
in
out
cmpsb
jl
repz
mov
push
popa
jo
fistps
jl
cltd
mov
mov
pop
sub
xchg
movnti
lret
push
jno
xchg
jg
orb
xor
out
mov
lret
in
clc
jmp
insl
int3
ret
cmp
add
jmp
mov
mov
sub
add
mov
test
xchg
jle
mulb
push
xchg
or
nop
sbb
xchg
inc
test
adcl
or
push
mov
scas
lock
cmp
repz
fisubl
stc
mov
cltd
les
mov
xchg
inc
mov
cld
push
in
fnstsw
cs
insl
rcr
mov
testl
mov
fwait
repnz
xchg
cmp
int
pop
test
rcl
daa
je
mov
dec
dec
loop
xor
and
mov
es
out
xchg
mov
xchg
cs
cli
dec
scas
out
xchg
pop
daa
xlat
mov
xchg
dec
mov
mov
add
adc
xor
repnz
outsb
cs
push
xor
cli
adc
out
or
mov
mov
stos
aaa
jmp
outsl
ret
sub
adc
sub
adc
popl
add
mov
mov
int
ds
mov
mov
outsl
bound
sahf
fisttps
pop
daa
xlat
or
dec
insl
jbe
inc
jae
xor
insb
std
push
punpckhwd
es
add
loop
dec
pusha
repz
mov
stos
leave
mov
pop
js
mov
leave
or
sbb
and
aam
add
and
push
stos
incb
into
enter
sub
inc
jmp
mov
cmp
sub
jnp
fistps
add
jg
aas
data16
hlt
outsb
fidivl
aad
xchg
ja
jmp
pop
mov
repz
push
cmp
xor
aas
js
or
xchg
jbe
call
jle
pop
out
mov
pop
ret
xor
sbb
adc
sub
push
or
sub
push
mov
dec
push
jo
mov
addr16
test
pop
dec
into
sub
add
std
jle
xchg
dec
jp
xor
add
outsl
xchg
or
pop
aad
sub
movsl
sbb
imull
sbb
rcr
sahf
insb
fdivr
repz
jno
push
xor
mov
jp
xchg
add
or
mov
in
rcl
mov
jb
rdmsr
mul
negb
rcrl
pushf
adc
fstpl
inc
clc
movl
adc
cmpsb
dec
cmc
mov
mov
cmp
cmp
cmpsb
cs
push
mov
cmp
mov
gs
sub
cld
or
out
movsb
add
cwtl
ja
repnz
sahf
xor
jae
jp
jmp
leave
cmp
fcoms
out
repnz
enter
adc
pop
inc
push
push
icebp
mov
es
stos
cmpsl
mov
lds
push
cltd
or
jmp
stos
mov
and
jns
ljmp
mov
ror
pop
into
addr16
scas
mov
mov
mov
xlat
stos
leave
fadd
push
dec
cmp
push
or
adc
cld
hlt
push
test
test
adc
shll
ss
fisubrs
mov
movsl
stos
push
adc
dec
test
mov
lods
jb
notl
ss
hlt
mov
cmp
int3
stc
cwtl
addr16
sub
pusha
repz
roll
ret
cli
loope
idiv
test
push
dec
cwtl
cli
daa
enter
jle
sbbb
ljmp
pop
dec
je
sbb
mov
xchg
push
test
jl
cli
add
push
les
pop
push
inc
mov
jo
xchg
xor
push
lea
imul
sbb
mov
mov
repnz
fldcw
ss
xor
add
push
int
lcall
ret
and
or
adc
pop
inc
movsl
mov
jno
ss
lods
mov
dec
mov
adc
es
das
adc
jae
lods
adc
jmp
leave
push
aaa
sub
adc
jb
fdiv
add
xchg
push
mov
out
cli
push
pop
or
fs
xchg
das
add
cmpsb
and
cmp
pop
sub
mov
cmp
and
add
xorl
mov
in
sub
mov
pop
lret
push
xchg
xchg
cmp
add
sarw
pop
and
add
xlat
adc
mov
stc
mov
sbb
sub
insl
mov
addl
jnp
enter
cmpsb
scas
jle
xor
pop
mov
leave
sbb
xor
jmp
xor
mov
dec
test
ret
jo
nop
and
or
cmpsl
xchg
push
out
aam
inc
push
xchg
cmp
xorb
popa
sub
jo
jo
xchg
mov
push
rcrl
cmpsl
fsubs
cmc
sbb
sahf
sahf
cmp
ret
fnstsw
sbb
inc
add
sub
aaa
dec
adc
loopne
shlb
ja
push
divl
fwait
gs
jmp
jmp
add
sub
loopne
mov
and
xor
lahf
sbb
insb
inc
push
adc
out
add
addl
aas
loopne
mov
mov
flds
cmp
mov
sub
inc
divl
clc
cwtl
in
enter
scas
daa
fs
and
int
cmc
test
test
push
loopne
push
lock
and
and
mov
xchg
dec
push
imul
scas
sbb
jbe
es
pop
sbb
and
xor
popa
daa
mov
sbb
mov
ss
bound
fcoml
mov
inc
lods
inc
cld
or
push
pop
inc
push
insb
aam
xor
cmp
mov
mov
rcll
imul
sub
inc
or
xchg
aam
scas
loop
in
mov
add
sub
clc
fcomps
or
mov
nop
lret
push
in
sub
xchg
mov
stos
push
adc
xor
mov
xchg
adc
leave
jbe
add
push
fidivrs
push
lret
out
pop
lcall
test
and
jge
jns
pop
pop
shlb
in
mov
or
jecxz
int3
insl
ljmp
cmp
lds
cld
inc
fnsave
inc
arpl
mov
xchg
and
lock
insb
out
push
mov
jbe
clc
and
pop
cmp
mov
lea
int
and
mov
out
xor
sarb
adc
nop
addb
data16
inc
stc
movsb
and
jmp
call
add
fnstsw
popf
aaa
in
lret
inc
mov
cmp
pop
cwtl
inc
stos
mov
test
dec
bound
xor
sbb
adc
in
rcr
je
scas
push
push
dec
sub
or
add
aad
arpl
sbb
es
dec
inc
push
mov
or
lock
out
push
fiadds
cmc
in
popa
or
lcall
mov
dec
mov
cmp
lahf
lahf
xchg
cld
js
sbb
push
fmul
stos
frstor
pop
mov
addb
xchg
pop
test
lret
sbb
enter
lods
stc
adc
ja
aaa
mov
xchg
daa
pop
add
imul
inc
jae
daa
pop
pop
xchg
insb
dec
fs
xor
xchg
sbb
sub
sbb
inc
sbb
sbb
daa
adc
arpl
fnstcw
mov
insb
cmc
adc
add
cmpsb
int
repz
and
inc
dec
adc
mov
enter
cwtl
jo
push
into
pop
ss
push
sbb
jno
shll
outsl
stos
cld
arpl
out
pop
jmp
jne
stos
stos
xor
rcrb
sbb
cmp
popa
loop
dec
add
lahf
scas
push
incl
mov
adc
mov
out
insl
fldl
xchg
fiaddl
pop
xchg
mov
pop
pop
pop
movsb
or
adc
mov
inc
lret
lahf
in
ret
push
adc
sbb
mov
ljmp
sti
orb
ss
inc
leave
push
pop
outsl
sbb
enter
jg
inc
sbb
sbb
test
sbb
xor
insl
in
push
pop
mov
and
pushf
push
popa
clc
stc
cmpsb
mov
xorl
in
iret
mov
icebp
jbe
mov
mov
adc
xchg
movsb
fs
cmpsl
icebp
xchg
mov
ja
sbb
cmp
dec
xchg
fs
sqrtps
adc
xor
jmp
pop
pop
sub
rorl
mov
mov
push
mov
mull
cltd
pusha
xor
in
testb
gs
xchg
jno
or
lods
adc
iret
pop
add
sbb
mov
faddl
push
mov
mov
outsb
cwtl
xchg
lea
pop
dec
in
mov
xor
jecxz
out
mov
dec
int3
loopne
ficomps
mov
stos
lods
cmpsl
add
xchg
or
sbbb
sub
mov
hlt
push
cs
addl
sbb
jb
pop
clc
pop
mov
call
vmaskmovdqu
icebp
imull
mov
sbb
les
leave
sub
mov
jae
push
inc
push
jns
test
lret
push
jg
cli
sub
cmp
shlb
dec
testb
and
add
push
scas
jl
jle
int
mov
arpl
and
jecxz
xchg
iret
xchg
jne
cmpb
mov
push
dec
xchg
sbb
arpl
xor
lea
test
xchg
mov
rorb
mov
bound
in
adc
sub
jo
mov
test
push
mov
pop
sbb
aas
xchg
lds
fucom
mov
mov
inc
ja
xlat
cmpsb
mov
lock
arpl
add
js
jmp
cmp
lods
and
cmp
or
cmp
cmpsb
pop
ss
dec
fnstcw
jle
mov
out
outsl
mov
shl
mov
cmp
mov
repz
sbb
in
add
mov
mov
hlt
sbb
adc
fwait
jnp
fs
add
or
add
push
fcomps
mov
out
lret
leave
sbb
ljmp
in
add
and
push
jg
sbb
fdivl
xor
loope
mov
mov
outsb
iret
jno
lock
inc
lea
nop
xchg
clc
shll
jnp
mov
mov
inc
rorl
cli
mov
outsb
je
adcb
xchg
sub
jmp
add
mov
add
aas
inc
mov
or
fldenv
dec
pop
mov
pop
mov
or
decl
adc
divl
ret
dec
adc
pop
clc
push
int
out
mov
mov
xor
sub
xchg
adc
mov
push
pop
mov
lock
inc
or
notl
adcl
mov
lds
jle
add
sbb
mov
arpl
insl
in
int3
andl
insl
loop
mov
bound
and
lea
pop
add
aad
inc
mov
xlat
pushf
fisubrl
inc
into
and
addr16
dec
cltd
out
cmp
pop
adc
mov
fmuls
xchg
fmul
js
pop
inc
inc
cli
es
idivl
inc
arpl
call
or
add
and
cs
sti
dec
mov
add
mov
cmp
jmp
fstps
enter
inc
add
push
in
and
mov
or
xchg
xor
out
cmpl
sub
mov
xor
lahf
daa
lcall
rorl
mov
idivb
cli
cmp
popf
sti
out
jmp
shrl
sub
daa
xchg
push
fists
xchg
mov
xor
jecxz
lea
out
fistps
mov
in
movsl
imul
mov
cmp
inc
xlat
stos
movl
adc
xchg
ja
and
xor
in
out
mov
push
testl
mov
xor
and
push
sub
adc
mov
cmp
fildll
popf
sahf
aam
dec
cld
out
fwait
jb
and
pop
pusha
inc
lds
dec
push
mov
add
scas
cmpsb
lahf
imul
or
xor
into
dec
pop
and
mov
sbb
add
loop
pop
je
mov
stos
xor
divl
mov
es
lods
xchg
stc
jo
adc
mov
dec
hlt
jg
cmp
mov
aad
pop
nop
loop
lock
cmpsl
fwait
xchg
sbb
pop
jp
cmp
inc
mov
dec
sbb
cwtl
jbe
xchg
std
inc
aas
xor
testb
xchg
adc
je
bnd
ja
jecxz
inc
arpl
adc
mov
inc
adc
dec
cli
fsubl
sbb
cmp
and
sub
cmp
mov
test
xchg
add
hlt
or
scas
sub
mov
add
cmpsl
push
add
ret
ss
mov
sbb
mov
movb
mov
xchg
ds
pusha
mov
pop
ss
scas
std
or
mov
mov
fstpt
popf
jno
mov
xchg
sub
cwtl
ds
lcall
jo
xchg
pop
mov
lahf
lret
hlt
loope
xchg
cltd
rcrl
loop
stos
mov
push
fisttpl
jl
lcall
int3
or
xor
push
cltd
sub
push
rol
inc
and
sub
inc
arpl
or
insl
pop
imul
mov
cmpsb
mov
test
or
sti
je
imul
jbe
jns
mov
xchg
sub
push
popf
mov
jns
add
push
out
cmp
add
jp
or
sub
jbe
ret
out
fmull
mov
add
fisubl
xchg
in
and
outsb
cmc
sub
outsb
pop
lcall
iret
xchg
fstpt
jne
mov
std
pop
mov
mov
xlat
jecxz
push
jae
xorb
daa
stos
mov
push
sahf
jns
jnp
jbe
cmp
pop
mov
addr16
int3
loop
mov
cmp
movsl
pop
pop
mov
andl
out
jmp
sbb
add
lods
xor
loopne
aaa
andl
jge
sub
adc
scas
jge
jne
sub
bound
sbb
stos
push
inc
mov
sub
push
and
shrb
xchg
dec
mov
dec
ss
mov
mov
into
add
mov
or
mov
enter
mov
jnp
cmpsl
lret
add
sbb
sub
adc
out
fimull
inc
sti
lahf
movsb
out
rorb
mov
test
push
cmpsl
jno
testb
inc
sbbb
and
mov
nop
lea
and
sub
mov
repz
sub
dec
inc
xlat
adc
clc
test
lods
and
es
fiadds
insl
dec
stos
cmp
inc
and
pop
sbb
cli
push
mov
lea
cmp
nop
or
out
in
outsb
pop
push
pop
mov
ret
sbb
mov
lret
inc
in
out
in
push
pop
out
push
add
add
xor
pop
cmp
jo
cld
stos
cmp
adc
xchg
jl
and
pushf
arpl
xchg
ja
insb
clc
pop
scas
mov
sub
fdivrl
xor
shll
xor
adc
jecxz
or
inc
pushf
and
pop
pop
pop
cmpl
test
mov
push
jg
jge
negb
or
dec
xchg
xor
pop
or
xchg
inc
out
jno
fs
fwait
cmp
jns
lret
in
into
enter
xor
jl
xchg
xchg
mov
lods
bsr
jns
cmp
adc
jg
pop
inc
push
in
idiv
fwait
cmpb
add
xchg
sbb
test
jo
sub
lds
jmp
jle
mov
jle
movsb
adc
loope
xchg
clc
inc
or
inc
mov
mov
cmp
and
xor
scas
es
scas
mov
inc
jmp
leave
in
pop
mov
das
sub
push
pushf
roll
lock
test
pop
clc
movsl
in
and
lret
xchg
iret
decl
push
mov
add
add
je
insl
in
in
mov
lds
mov
bound
aaa
ljmp
ret
pusha
jl
cltd
dec
xchg
movsb
je
add
insl
clc
dec
fnstenv
jl
cld
loop
iret
add
pop
leave
add
xor
dec
pop
lods
sub
add
or
fdiv
jge
ret
bnd
inc
ja
inc
mov
sbb
adc
pop
cmp
xor
adc
fcomi
pop
pop
xchg
inc
inc
sub
xor
imul
hlt
imul
mov
inc
sub
movb
push
data16
mov
inc
ljmp
scas
cmpsl
adc
add
adc
pushf
loopne
fnstenv
sahf
cmp
add
std
pop
daa
push
in
mov
add
push
xchg
push
sbb
pop
dec
push
push
orl
mov
fstpl
pop
push
mov
inc
push
push
rcll
mov
pop
mov
imul
dec
iret
dec
andl
mov
insb
je
push
imul
aas
in
addr16
xchg
adc
insl
xchg
imul
imul
ss
jnp
sbb
cmc
outsl
mov
lcall
mov
call
in
xor
push
pop
and
mov
dec
and
sub
mov
loopne
imul
add
es
sub
dec
test
adc
bound
fstpt
ret
fwait
subb
movsb
add
lcall
scas
popa
dec
jno
sbb
test
ljmp
push
sbbl
jne
sbb
mov
pop
jne
fidivl
dec
cmp
cmpsl
adc
pop
stos
out
rol
pop
in
lahf
hlt
cli
or
cmpl
jg
cli
push
jle
inc
xor
jns
push
pop
or
loope
jbe
mov
pop
jb
shr
xor
and
and
jmp
fnstsw
or
cli
data16
insl
mov
adc
dec
testl
inc
sbb
sbb
dec
jb
jno
adc
outsb
cli
pop
xchg
mov
sub
rorb
dec
aam
inc
shll
cld
mov
mov
popf
pop
popf
fdivl
cli
lock
add
mov
lcall
sbb
xchg
sbb
xchg
or
cmovp
sbb
add
push
data16
xor
iret
mov
jo
xchg
mov
dec
or
and
xor
sbb
or
scas
rcrb
cld
loop
dec
je
arpl
jmp
mov
adc
sub
jecxz
mov
sbb
lahf
outsl
aaa
xchg
fdivrs
mov
sub
cld
test
cld
ljmp
movsb
or
std
cmovne
rolb
mov
push
xor
mov
cmp
push
xchg
add
fsts
cli
xchg
cmp
mov
ljmp
jne
pop
xor
dec
dec
lret
fcmovnu
test
cli
fisubrs
or
jb
push
sbb
decb
sbb
mov
xor
stc
pusha
dec
rorb
aad
leave
shll
shlb
jle
jns
xchg
xchg
mov
test
dec
mov
inc
push
inc
test
ror
jb
sbb
push
cmp
inc
enter
mull
adc
pushf
int3
lds
ficompl
das
nop
mov
add
sbb
mov
mov
loopne
stos
inc
dec
and
cmp
lret
jo
mov
cli
das
das
test
xchg
mov
pop
fwait
add
xchg
pop
push
cmp
mov
popf
mov
dec
out
cltd
lahf
fcmovnbe
cmp
mov
jge
scas
fwait
repnz
popa
push
fwait
mov
je
ret
daa
jl
clc
add
mov
xlat
mov
fcmovne
adc
insl
pop
es
jle
fsubr
jge
mov
lods
das
pusha
push
shrl
rcrb
fadds
movsb
mov
orl
cmp
popa
cld
mov
rorb
out
push
xor
pop
andl
xchg
popf
jnp
or
xchg
push
jmp
mov
cmpsb
push
jmp
repnz
xor
pop
dec
sub
daa
push
xor
je
ss
cld
inc
mov
loop
xchg
push
inc
fsin
sub
addl
mov
sbb
or
jb
int3
xchg
pop
sub
sbb
jmp
sub
out
test
sub
fmuls
add
adc
or
loope
sub
and
push
push
dec
int3
inc
imul
sbb
adc
cmp
repz
dec
movsb
sbbl
fstl
mov
mov
sahf
subb
pop
inc
cmp
pusha
mov
xchg
sbb
test
adcb
cmc
cmpl
jb
hlt
and
aaa
repnz
std
or
out
out
push
ficoms
adc
or
cmpsb
imul
test
and
pop
push
ret
xor
add
inc
jns
adcl
mov
sahf
rol
adc
mov
pop
pushf
cmp
add
leave
les
stc
push
and
push
cmpsl
pop
dec
sub
addr16
movsl
lar
push
xor
mov
adc
repnz
iret
jbe
lret
mov
mov
and
adc
test
jnp
sbb
loope
repnz
mov
fistl
push
mov
cli
jae
or
pop
jmp
daa
divb
xlat
add
daa
int
or
sbb
cwtl
test
lock
and
jge
arpl
add
ret
aas
jmp
sbb
loopw
daa
inc
and
sahf
mov
pusha
pop
pushl
fwait
pop
xor
bound
dec
push
pushf
sbb
cmp
les
xchg
cmp
jns
jbe
pushf
dec
pop
xorb
adc
push
cwtl
push
cmp
mov
ja
dec
adc
cwtl
jecxz
stos
mov
mov
inc
enter
add
adc
aad
mov
pushf
mov
mov
data16
imul
mov
fisubrs
rolb
adc
fyl2x
aas
icebp
sub
xor
push
inc
cmp
adc
stc
fildll
pop
jb
push
test
fidivs
mov
cmp
jo
mov
data16
gs
push
shlb
aaa
sub
add
loop
je
dec
leave
adc
fnstenv
jg
stc
idivl
sbb
in
push
aad
std
lahf
add
jmp
js
outsl
cmc
ljmp
loopne
xchg
add
addr16
and
fimuls
lods
jg
mov
cmp
mov
hlt
aad
cmpsb
mov
dec
lret
cmc
inc
dec
add
dec
imul
out
push
fsubrl
mov
add
mov
aad
enter
psubsb
xor
xlat
mov
movsl
mov
push
pop
bound
pop
adc
lock
xor
int
push
sub
lahf
cli
jmp
xchg
aad
and
inc
movsb
pop
bound
push
xchg
ja
push
out
cwtl
jnp
fisttpl
or
out
ret
xor
xchg
cmp
sbb
insb
adc
bound
hlt
or
sub
mov
sbb
fnsave
or
aam
pop
mov
push
pushl
and
push
mov
outsl
or
or
fdivl
xchg
and
icebp
repnz
cwtl
xor
mov
jmp
cmp
fcoml
pop
out
cmp
jmp
popa
loope
out
and
xchg
pop
out
cmp
inc
incb
ret
imul
jo
es
movsb
imul
test
call
xlat
fwait
cli
jge
sub
cmpsb
ds
mov
aam
sbbl
inc
dec
inc
ffree
mov
cmp
mov
pop
mov
add
inc
mov
aam
mov
aad
and
jb
sub
loop
iret
mov
add
divl
xor
cmp
or
bnd
pushf
mov
or
js
sub
int3
add
xchg
in
fwait
inc
fs
fnstsw
push
in
popf
jo
pop
test
fwait
insl
mov
mov
adc
mov
mov
pusha
jmp
add
lret
fimull
cmp
orb
leave
shrb
inc
notb
das
sbb
xor
push
mov
jne
out
or
adcl
cld
push
jae
mov
stos
loope
repz
xor
pop
mov
subb
arpl
jbe
popa
shlb
pop
xor
jecxz
jns
jl
fmull
add
adc
adc
imul
lods
xchg
mov
fadd
jns
es
mov
bound
push
or
sbb
leave
mov
scas
jl
and
pop
dec
loope
fdivr
loopne
xor
outsb
insl
mov
inc
adc
aam
mov
js
or
sub
test
mov
scas
push
cmp
jg
sbb
bound
lods
xchg
dec
jb
lods
or
dec
and
or
lea
sub
inc
loopne
mov
pop
push
sub
cmpsl
cwtl
add
lahf
jae
adc
cmpsb
les
insb
push
std
stos
frstor
mov
mov
or
push
jp
sbb
fldl
cmc
movl
dec
movsb
adc
call
fs
jo
pop
insl
addr16
and
fwait
and
dec
mov
cmpsl
xchg
fidivrl
mov
fbstp
cld
stos
mov
xlat
push
xchg
push
cmp
xchg
test
jle
data16
call
and
je
sbb
inc
mov
testl
cmp
push
cmc
pop
mov
inc
push
pop
hlt
pusha
into
inc
les
lret
and
cltd
xor
push
cmp
loop
xor
repz
pop
sbb
sub
sbb
lret
jle
ljmp
jno
call
mov
cmp
loop
rorl
and
pop
cmpsb
push
jl
xor
js
movsl
dec
jge
sub
pop
fwait
xlat
mov
xchg
das
aaa
xchg
sub
lock
aam
scas
fwait
jbe
lds
nop
insl
fnstcw
jo
sub
inc
add
cmc
and
sbb
notl
jbe
mov
les
out
pop
aad
pop
dec
lds
jecxz
test
iret
inc
mov
jo
mov
or
mov
xor
xchg
cmpsl
mov
fsubs
inc
das
inc
push
jp
dec
xchg
sub
ja
ret
es
and
pop
shl
xor
dec
popf
into
sbb
aaa
ficoms
mov
pop
repnz
xchg
xchg
mov
aam
or
addr16
add
dec
scas
jl
mov
popf
sbb
data16
lahf
fmull
pop
adc
mov
mov
xorb
push
popf
cmpsb
adcl
mov
push
jnp
std
mov
aas
sbb
and
lret
mov
lock
in
sub
mov
adc
cmc
int
cli
movsl
or
dec
pop
sbb
and
decl
in
mov
pop
shrl
sarl
setno
lock
or
fldl
out
les
mov
mov
mov
loopne
pop
add
or
push
inc
int
mov
inc
mov
sub
mov
sbb
xor
in
jae
cli
das
cmp
clc
xchg
cmp
cltd
adc
lods
inc
pop
cmpsl
sbb
xchg
imul
xchg
popa
ljmp
ret
ss
xor
add
push
rol
dec
mov
xchg
jge
push
inc
stos
pop
cmovne
push
dec
dec
cmpsb
sub
cmp
leave
add
imull
jnp
xor
imul
lahf
ret
imul
xor
jmp
je
and
xor
rolb
jl
pop
rcl
stos
sub
ret
cmpl
cmpsb
and
popf
jmp
aam
iret
ret
xorl
fdivrp
fs
xchg
aaa
inc
mov
inc
push
hlt
repnz
dec
in
into
ja
ja
jnp
in
push
clc
xor
sub
dec
inc
ror
pop
fbstp
scas
lret
nop
xchg
ss
data16
mov
shll
ja
cmp
mov
mov
push
xchg
gs
sbb
cmp
inc
or
push
and
adc
js
dec
orl
mov
pop
inc
pop
pushf
mov
das
dec
push
scas
inc
cmpsb
inc
push
push
mov
push
dec
dec
jo
sub
fdivr
jbe
mov
mov
mov
mov
clc
lcall
sti
cs
mov
nop
xchg
mov
in
cmpsl
popa
lahf
jmp
jno
dec
inc
xor
xor
lods
jns
fdivs
out
std
jns
mov
int3
outsb
test
movsb
mov
xchg
scas
loopne
nop
xchg
in
out
xchg
test
daa
stc
es
push
xorl
push
movsb
testb
shl
xor
arpl
bound
cmc
add
test
aas
mov
and
jnp
inc
sbb
cwtl
jecxz
stos
dec
cmp
ficomps
and
outsb
push
sbb
pop
sbb
sub
sbb
sbbb
xlat
pushf
jle
pop
rol
test
sub
subb
nop
jnp
fcomp
mov
mov
adc
mov
and
lods
arpl
jnp
lods
and
test
sbb
mov
mov
adcl
out
add
int3
sbb
mov
pop
xchg
xor
lods
movsl
pusha
ret
xchg
jne
adc
xor
shrl
enter
addr16
adc
andb
lahf
out
rcrl
jns,pt
jg
inc
out
enter
clc
xor
push
mov
shl
repnz
mov
in
sub
test
in
cs
add
push
lock
mov
sbbb
into
xor
lret
inc
cmp
jle
xor
cmpsb
adc
mov
lds
rcl
or
std
test
sbb
pop
outsb
es
sbb
shlb
loope
in
leave
mov
push
leave
mov
cmp
jbe
cmp
pop
push
push
xchg
sbb
cmpsb
adc
clc
inc
call
adc
mov
jb
test
mov
cmp
aaa
mov
outsl
repz
fiaddl
inc
mov
sbb
add
in
mov
or
sbbb
push
sbb
pop
cld
std
xchg
push
mov
imul
std
xor
add
out
lea
outsl
sbb
lods
push
sub
pusha
cs
add
jle
scas
cmp
dec
test
movl
inc
sub
in
mov
push
dec
cmpsl
adc
jno
dec
inc
sahf
sbb
clc
mov
and
lret
jmp
and
xor
movsl
daa
jle
arpl
inc
nop
cltd
aam
and
js
insl
inc
or
lods
enter
dec
loop
mov
add
mov
pushaw
ret
jns
adc
test
in
adc
sbb
lahf
mov
xchg
xchg
mov
mov
out
adc
mov
outsb
mov
out
mov
shl
mov
mov
bound
xorl
aam
sub
mov
jge
cltd
stos
adc
cmp
xchg
and
mov
push
mov
cld
jae
fidivrl
mov
jl
adc
in
mov
imul
mov
ljmp
fidivl
or
cmp
xorb
fimull
ds
mov
ds
xchg
add
fcomp
ljmp
dec
call
mov
sbb
xor
sarl
and
lahf
xchg
mov
pop
into
xor
sbb
xchg
pop
mov
stc
inc
pop
mov
jecxz
cmpsb
dec
adc
xchg
cmp
sarl
cmp
jbe
scas
mov
insl
jecxz
sarl
pop
mov
push
mov
stos
or
xchg
cs
add
pop
mov
notl
iret
sub
jo
add
xor
xor
lret
adc
gs
jnp
and
xchg
dec
icebp
and
icebp
flds
out
pop
lds
mov
addr16
shrb
sbbl
pushf
sbb
repnz
pop
mov
int
stos
mov
dec
rolb
outsb
sahf
inc
xor
pop
jl
and
sub
call
inc
sahf
pusha
sub
fisttps
hlt
es
in
sahf
mov
pusha
jo
xchg
int
scas
loopne
ret
jnp
add
movsb
cld
aad
leave
and
dec
jp
lds
stos
cmp
fildl
data16
shll
and
xchg
pminsw
ret
sti
adc
leave
and
dec
xchg
mov
popa
inc
push
mov
push
insl
lds
loopne
popf
pop
fmuls
arpl
adc
and
mov
pop
or
movsl
sub
ret
dec
dec
mov
adc
mov
add
arpl
stc
fistpll
std
pusha
mov
xor
lcall
sti
ret
lods
cmpsb
adc
dec
push
mov
movsb
add
insl
fadds
out
test
or
mov
cmp
add
jno
pop
mov
pop
div
fadd
mov
cmp
pop
pop
cmp
jge
gs
pop
and
arpl
sub
adc
cmpsl
jb
call
sbb
stos
movsl
push
xor
outsl
lret
jbe
test
mov
adc
mov
lret
or
fdivrp
xor
jmp
mov
movsb
sbb
xor
or
and
data16
push
mov
out
icebp
ds
sbb
jg
orb
ror
dec
jp
push
enter
pop
jne
pop
push
popa
test
or
shl
loopne
sahf
rolb
daa
sub
xchg
std
xlat
cmp
jmp
dec
test
mov
nop
xchg
dec
pop
mov
mov
adc
mov
jmp
arpl
sub
lods
and
inc
mov
push
fmul
lret
into
or
jp
aad
mov
rcrb
outsb
add
mov
push
fisubrl
stc
dec
inc
jb
ret
movsb
dec
je
jae
mov
mov
lret
xor
mov
cmpsb
or
sbb
pop
mov
push
stos
add
mov
sbb
rolb
out
stos
ja
testb
or
lret
pop
nop
mov
cmp
inc
push
cltd
or
test
mov
out
dec
movl
push
out
lret
mov
mov
sti
jo
scas
pop
jnp
and
movsl
jnp
mov
xchg
nop
lods
nop
jbe
faddl
jnp
add
mul
push
ljmp
movsb
out
inc
lds
sub
fdivs
sbb
dec
cmp
cmp
dec
in
mov
aad
cmpsb
push
sub
enter
ds
cmp
pop
mov
inc
mov
dec
mov
and
push
fidivrs
mov
xchg
cmp
mov
fmuls
shl
and
imul
add
cmp
mov
test
mov
and
xorl
dec
dec
in
mov
sub
ljmp
mov
inc
inc
lea
dec
jmp
in
mov
pop
pop
mov
cwtl
push
xchg
jnp
test
mov
cli
add
add
sub
outsl
out
jl
xchg
inc
outsb
push
mov
jge
in
pop
sub
dec
lods
call
adcl
inc
cmpsl
aas
mov
sbb
icebp
push
adc
mov
daa
pop
xorb
mov
gs
xor
jnp
dec
cmp
inc
jg
mov
mov
mov
sbb
es
outsl
es
mov
xor
loopne
cmpsb
loop
repz
xor
aad
fldenv
lods
shlb
push
pop
sahf
mov
jo
inc
stc
aad
les
pop
popf
test
out
push
loopne
out
jno
iret
scas
add
jl
mov
popa
inc
and
lahf
jo
rclb
fwait
mov
mov
lds
ret
and
loope
das
xor
jmp
addl
adc
in
dec
xor
ja
mov
cmpl
mov
push
jp
push
push
adc
test
mov
fwait
test
or
dec
ja
mov
cmp
sbb
lcall
daa
aam
pop
insb
enter
jno
fmul
dec
popf
mov
add
lea
mov
jo,pt
lcall
sub
cmpsl
lcall
cld
mov
mov
into
sbb
jo
ljmp
in
pushaw
pop
aaa
loopne
out
loop
jbe
stc
shlb
and
cmc
mov
jmp
xor
enter
xchg
push
outsl
lods
sbb
cmp
pushf
sub
mov
mov
shrb
add
movhps
clc
mov
mov
xor
dec
fldenv
test
pop
mov
mov
push
test
pop
lcall
shll
sbb
push
jnp
cmp
popf
imul
pop
push
mov
xchg
mov
imul
sti
into
hlt
adc
shrb
nop
xchg
mov
jl
and
jecxz
xchg
add
jb
adc
negl
cmp
mull
cli
pop
push
mov
test
push
push
rep
xor
js
adc
aam
fcoml
das
test
cmp
iret
adc
je
lret
fcmovb
stos
movsl
hlt
or
cmc
sbb
sub
jno
scas
fs
push
xchg
inc
xchg
jns
je
js
pop
jns
inc
mov
and
and
das
mov
xor
xchg
xor
jno
aas
aaa
or
rcr
pop
out
add
lea
sahf
and
sub
jecxz
jle
or
into
movsb
or
dec
out
sahf
cmpsb
add
lcall
sti
sbb
sub
xchg
aas
into
jno
adc
rcl
mov
out
mov
jo
js
shl
push
sub
arpl
cmp
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
out
xor
popa
xchg
movsl
jecxz
pop
xlat
stos
cmpsb
cmc
repz
mov
mov
xor
pop
push
or
test
or
dec
das
pop
sbb
jne
sbb
jno
or
hlt
mov
fidivs
sub
cmc
dec
push
dec
mov
in
cltd
xchg
pop
into
pushf
inc
mov
jmp
sub
mov
dec
repnz
aas
adc
adc
or
cmp
clc
aaa
sub
mov
inc
notb
xchg
incb
jmp
mov
int
inc
jg
hlt
push
std
push
std
inc
or
sub
stc
pop
jge
daa
jge
dec
mov
sub
mov
aam
sub
stc
repz
sbb
and
add
xchg
sub
call
sub
stos
mov
jmp
popa
fprem1
pusha
and
jo
and
lock
mull
xor
add
sub
pop
push
sbb
into
insl
dec
ltr
jecxz
cli
sbb
sbb
testb
pushf
inc
or
dec
das
push
and
cmp
lods
repnz
pop
jo
lea
mov
pop
fsub
int
cmp
or
sar
adc
ss
ljmp
sub
ret
cmp
jnp
add
insl
xor
push
or
jecxz
xchg
enter
out
leave
stos
loope
in
cmpsb
je
fldenv
nop
or
xor
ss
stc
pop
stos
xor
xor
jnp
xchg
sub
add
popa
push
xchg
fwait
cmp
hlt
mov
or
andb
ret
pop
in
pop
push
lods
xchg
sbb
lret
lcall
xchg
mov
cs
sbb
push
orl
jo
pop
daa
daa
xlat
scas
mov
sub
dec
push
std
imul
push
pop
pop
mov
arpl
or
fcomip
mov
adc
and
pusha
imul
mov
xorw
loopne
mov
jb
subb
cltd
movsb
xchg
push
arpl
mov
std
fcomps
ja
mov
leave
jb
or
insb
sbb
jp
push
mov
mov
jns
jns
in
in
jns
pop
jp
lahf
jg
fnstsw
cmp
icebp
sbb
and
xchg
fisttps
add
pop
cltd
push
loope
add
outsl
repz
fs
int3
call
and
pop
jo
sub
jmp
enter
test
jb
xchg
lds
lret
mov
aam
and
pushf
out
movsb
adc
test
outsb
insb
mov
out
imul
jg
imul
and
ss
xlat
sbb
add
jecxz
loope
test
popa
mov
shlb
sub
je
inc
dec
sub
push
insl
repnz
or
and
xchg
cmp
cmp
pop
inc
xor
xchg
mov
lret
jmp
js
sahf
and
jns
out
bound
testb
sub
sub
fwait
inc
mov
lahf
add
or
push
repz
sub
fmul
repnz
adc
and
pop
jbe
jp
fs
adc
lds
mov
inc
xchg
mov
dec
jg
adc
inc
jnp
fsubs
or
into
sub
test
xor
pushf
iret
mov
loope
pop
adc
sbb
add
hlt
nop
sbb
pop
pop
push
rol
mov
push
sub
fbld
or
ret
orb
cmp
lds
pop
xchg
jmp
stos
jge
add
mov
ds
lock
push
in
xor
enter
push
aaa
dec
pop
inc
jmp
sbb
popa
dec
hlt
push
adc
cmpsl
inc
xchg
mov
pop
xor
push
test
cmpsb
shr
jmp
sub
cmpsl
add
pusha
bound
xchg
xchg
lods
sbb
push
xchg
inc
push
sbb
pop
mov
jl
std
mov
iret
aaa
adc
mov
xlat
jno
call
inc
std
in
lahf
mov
push
iret
cli
lahf
or
enter
cmp
jbe
testb
lds
nop
mov
jp
and
mov
xchg
shr
or
add
in
mov
jmp
cmp
lahf
sub
mov
pop
xchg
loopne
cwtl
xchg
mulb
cli
jne
sahf
pop
shlb
xor
xchg
and
cmpsb
cmp
pop
mov
add
and
ja
jle
push
mov
push
add
sbbl
jne
js
xchg
orb
push
shrb
scas
fidivs
jne
lret
adc
xchg
xor
jnp
push
ljmp
dec
cltd
xlat
aam
fmul
call
dec
sti
jmp
and
push
cmpsb
mov
popa
pop
mov
arpl
cwtl
sub
addr16
dec
sbb
cwtl
clc
sub
jo
xlat
or
iret
sahf
das
movsl
push
sbb
sub
sub
scas
shlb
inc
cmpsb
pop
mov
mov
jnp
mov
push
cs
mov
and
mov
xchg
add
fstpl
fdivl
sarb
lahf
inc
mulb
fidivs
sub
ret
mov
sahf
cs
jg
adc
push
movsl
sbb
loopne
aad
leave
aad
push
sub
in
or
mov
fwait
xor
lret
mov
daa
inc
xchg
imul
push
mov
add
push
call
movsl
mov
xor
movsl
jecxz
inc
filds
xchg
dec
lret
jl
outsb
clc
fidivl
dec
rcll
add
pop
pop
scas
dec
jns
out
inc
sbb
cltd
xchg
out
popa
mov
push
xchg
mov
and
cld
adc
aaa
add
or
test
sbb
add
in
lahf
sbb
xor
mov
push
push
pop
sub
push
jne
push
mov
pop
cmpsb
cmp
scas
or
xor
mov
cmp
repz
cltd
ret
je
scas
shlb
cmp
cmpsb
enter
ret
icebp
aam
sub
lahf
insb
push
rolb
test
cmp
and
xor
outsb
paddw
es
dec
cli
add
sbb
addr16
lds
cmc
into
push
mov
mov
dec
stos
jnp
xchg
jae
cltd
jp
inc
mov
cmp
fs
cmpsb
dec
mov
shll
jmp
mov
dec
push
and
lods
cltd
test
jl
mov
sbb
test
xchg
ds
lcall
jbe
xchg
mov
daa
xchg
add
push
pop
je
mov
sti
adc
mov
mov
stos
and
and
mov
movsb
lods
mov
lds
pop
orb
push
stos
jp
mov
out
lods
mov
in
pusha
imul
imul
fstps
hlt
dec
xchg
pop
test
cmp
pushf
test
or
push
or
sbb
sbb
out
repnz
je
hlt
sarb
insb
sbb
jo
push
sahf
insl
in
dec
jo
stos
icebp
add
stos
sarb
ret
mov
push
lods
mov
inc
jp
pop
jns
mov
cli
out
jg
test
cmp
call
and
inc
mov
into
mov
fucomi
outsl
les
mov
lahf
or
stos
movb
rcrb
arpl
shlb
aaa
loopne
lea
jno
shrb
adc
mov
es
mov
stc
dec
mov
sbb
div
shrl
sub
cmp
xchg
mov
addl
xor
fnstcw
add
dec
test
xchg
arpl
adc
mov
xor
push
insl
mov
mov
inc
xorl
lcall
int
push
jns
fcoml
adc
lods
pop
mov
adc
mov
mov
mov
fdivrs
inc
repnz
mov
dec
push
aas
dec
inc
mov
lods
dec
in
dec
js
mov
push
sbb
pop
test
push
push
imul
pop
pop
js
lahf
push
mov
mov
paddsb
xor
jmp
pushf
sbb
jo
cmp
lcall
gs
pop
xchg
loop
hlt
push
gs
pop
xchg
or
outsb
icebp
mov
mov
sub
cmp
jno
mov
mov
push
fildll
sub
cmp
cli
adc
aad
dec
clc
test
dec
sahf
mov
test
pop
lahf
push
jge
hlt
arpl
push
lods
test
mov
xor
adc
cmp
push
pop
push
jg,pn
dec
fwait
cs
inc
leave
jle
aas
les
outsl
jae
in
inc
sbb
sub
pusha
inc
mov
adc
jp
inc
iret
mov
add
xlat
imul
outsb
cmc
cmp
mov
test
test
lea
gs
out
push
test
sub
icebp
movsl
cmp
xchg
testb
xor
cmp
repnz
lret
push
jno
or
cmpsl
sbb
jno
dec
repnz
mov
movsl
mov
cmp
lods
pop
inc
in
push
sub
jne
adc
outsl
mov
int3
mov
xchg
mov
cwtl
inc
xor
inc
ret
sbb
icebp
dec
sti
rcll
roll
or
adc
int3
lods
icebp
xchg
repnz
mov
frndint
cmp
xor
add
jnp
fmuls
ret
in
push
jne
sub
mov
push
pusha
call
scas
xchg
and
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
fwait
and
